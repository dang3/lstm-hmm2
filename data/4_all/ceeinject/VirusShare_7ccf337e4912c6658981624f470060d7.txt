call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbb
xlat
mov
mov
mov
sub
cmp
lret
jge
negl
int
frstor
or
pop
cmp
daa
insl
pop
jge
lea
and
xchg
out
in
popf
std
mov
ja
inc
dec
ss
xor
dec
adc
mov
cmpsb
loope
in
mov
push
adc
inc
mov
push
cwtl
and
leave
sub
call
adc
mov
shrb
push
loop
je
mov
mov
mov
dec
or
fdivl
leave
pop
push
pop
data16
or
push
ret
les
rorb
out
rcll
int
icebp
xchg
or
repnz
lods
and
stos
jge
ja
jo
bound
sub
cmpsb
in
push
std
jnp
push
push
mov
pop
xor
mov
popf
sbb
mov
adc
xchg
and
aaa
pop
xorl
insl
sarb
lods
mov
frstor
or
push
cmp
leave
insl
xor
sarl
lret
cwtl
shlb
pop
inc
repnz
and
jo
dec
add
outsb
shlb
cmc
stos
test
mov
mov
push
jo
push
add
cs
cmp
test
stos
mov
frstor
or
push
cmp
daa
insl
pop
jge
negl
int
frstor
or
push
cmp
daa
insl
pop
jge
negl
sub
or
scas
pusha
rorl
pushf
jae
flds
xchg
inc
jecxz
mov
mov
pop
lahf
ja
incl
cmp
push
push
jle
push
out
cmp
jb
test
jle
into
cmp
cli
adc
pop
xchg
pop
and
das
lret
mov
loope
aaa
lret
mov
clc
stos
sub
dec
call
stos
mov
xchg
cmp
jb
sbb
fs
cmp
mov
push
iret
pushl
in
loopne
icebp
movsl
mov
mov
jg
dec
mov
mov
dec
jbe
jg
scas
jmp
dec
pop
les
cmpsl
outsl
icebp
mov
in
add
xor
out
int
dec
push
bnd
adc
data16
hlt
out
pusha
ret
lret
rorb
sbb
jmp
dec
fistps
test
xor
scas
rorl
test
mov
mov
test
fildl
lret
int
mov
push
xchg
pop
adc
sbb
or
pusha
arpl
mov
jb
pop
loop
xor
mov
dec
mov
test
dec
into
xchg
mov
sub
dec
pop
mov
adc
icebp
add
ret
fildll
rcll
push
xor
pusha
cs
xchg
fcompl
sub
das
push
adc
in
andl
hlt
fisttps
sahf
cmpl
mov
adc
stos
inc
jnp
push
test
ljmp
xor
xor
pushf
or
adc
jno
loope
imul
aam
dec
pushf
imul
jmp
jns
outsl
ret
lea
or
scas
out
in
inc
dec
mov
test
cmp
add
decb
cmp
sub
aad
inc
jmp
xor
jae
pop
mov
dec
or
sub
inc
and
jp
pop
cmp
loopne
loopne
iret
dec
mov
in
mov
icebp
and
sbb
fs
mov
jge
inc
sti
xchg
daa
outsl
xlat
adc
lods
cmp
mov
jl
movsb
cmp
mov
sbb
sub
jmp
jbe
cmpb
push
xchg
cmp
jnp
add
xor
fadds
movsl
xor
push
adc
and
cmpsb
jbe
ljmp
mov
stos
cmp
ss
outsl
or
enter
psubusb
add
adc
aad
pop
sub
les
mov
mov
orl
mov
dec
cmpl
xor
pop
dec
add
dec
in
xchg
push
push
xchg
aaa
inc
mov
jo
mov
shl
cmp
stos
loop
inc
cltd
push
xchg
cmc
ss
sarl
and
jg
sbb
sbb
lods
lret
lock
aam
pop
add
cmp
icebp
ret
dec
inc
or
mov
es
lret
or
icebp
icebp
mov
sbb
sahf
cmpsl
rclb
mov
lcall
stos
sbb
fcmovu
mov
into
lahf
xchg
outsl
jle
cmp
mulb
in
cli
cmc
mov
pushf
mov
xor
das
jecxz
mov
push
fsubp
subl
inc
ljmp
mov
mov
les
cmpsb
add
hlt
and
push
mov
add
es
lds
inc
testb
fdivrs
push
pushf
xchg
stos
mov
xor
out
aam
inc
rclb
fists
popa
mov
pop
fidivs
jae
dec
pop
addb
dec
imul
xchg
or
jnp
and
adc
loop
imul
or
insl
pop
sub
xor
cmp
xchg
les
addl
xor
loopne
lods
flds
pop
xchg
mov
xchg
stos
inc
in
inc
scas
mov
fwait
lret
cmp
lods
cmp
xchg
ret
mov
xchg
repnz
fs
and
repnz
mov
in
mov
js
insb
mov
das
fcoms
lock
jo
orl
inc
sub
addb
aaa
jecxz
lods
sub
inc
and
add
lahf
cltd
add
inc
push
sahf
xor
cmp
pop
call
sub
sub
popa
nop
lea
neg
in
xor
cltd
jns
cltd
xchg
pop
push
jno
cmp
mov
cli
push
mov
push
out
cmp
jns
lret
icebp
ret
scas
jno
and
loopne
leave
into
mov
or
xchg
mov
enter
xchg
xor
lcall
push
cmp
cmpsb
jns
insb
adc
push
inc
out
inc
scas
fisubrl
push
sar
push
or
xlat
dec
test
mov
cmp
inc
jno
and
movsl
repnz
dec
jecxz
sbb
push
es
jl
out
sbb
dec
fwait
ret
cs
iret
add
popf
repz
or
mov
mov
mov
sbb
inc
jns
insb
mov
push
lret
adc
mov
faddl
pop
sub
rcrb
lods
xchg
mov
dec
xchg
out
sub
push
loope
jne
or
decl
pop
lods
cmp
movsl
stc
dec
loop
or
daa
dec
icebp
popf
jle
xor
inc
xchg
mov
ja
cmpsb
mov
adc
aaa
cmpsl
testb
movsb
mov
xor
inc
mov
movsb
jecxz
adc
pop
adc
lahf
pop
and
insl
rolb
or
dec
imul
jge
mov
scas
jmp
cwtl
nop
add
icebp
test
xchg
daa
inc
jp
push
gs
clc
add
flds
scas
inc
xor
sbb
and
mov
icebp
and
cld
leave
xor
adcb
mov
xchg
push
pop
lods
cltd
jbe
scas
mov
sbbb
cmp
and
push
adc
dec
sbb
lds
hlt
and
subl
xchg
and
andb
cmp
sarl
xchg
pop
in
sbb
cltd
lahf
icebp
push
sbb
push
fwait
mov
cwtl
pop
dec
add
addr16
lcall
adc
sub
lods
cmpb
aam
push
xor
testl
cmp
sbb
lahf
or
das
push
ret
ja
pop
rcll
into
sti
ss
negb
pop
pop
inc
jb
jmp
out
xchg
jae
cmp
push
scas
sub
lock
lods
or
hlt
lods
sub
sahf
je
test
dec
popa
sub
enter
loopne
xchg
adc
jmp
xor
test
imul
call
push
dec
aaa
cmpsb
mov
shrb
cmp
pop
loope
push
sub
adc
fidivrs
outsl
sbb
xchg
push
fwait
cmp
mov
or
pop
test
shlb
jne
rcr
xor
and
popa
sbb
mov
stos
sbb
dec
shl
push
xchg
fadds
or
push
add
pusha
sub
out
and
inc
hlt
js
sub
in
ds
add
fmull
out
shl
pusha
push
in
lea
clc
fsqrt
adc
shl
dec
negb
lods
cltd
gs
push
pop
inc
stos
mov
stc
mov
jnp
mov
mov
xchg
mov
cs
inc
and
or
std
sub
and
sub
add
mov
shr
div
or
std
inc
mov
add
pop
cmpsb
lret
dec
scas
sahf
or
sub
shlb
arpl
sub
mov
mov
sub
mov
insb
std
cmp
test
cmp
add
xrelease
jo
mov
enter
inc
cmp
out
loop
loop
jmp
fnstsw
mov
dec
dec
xchg
dec
mov
mov
xor
push
mov
fstps
xchg
inc
mov
dec
out
std
jbe
scas
aam
push
add
sub
ret
cmp
in
repnz
inc
lcall
test
xchg
push
bnd
fwait
push
and
jno
sub
leave
mov
unpckhps
scas
sub
shlb
cmp
jo
lods
adc
xor
cmp
cltd
pop
mov
dec
in
dec
jg
sub
cmc
jns
pop
sub
xchg
setge
fdivrs
inc
pop
lahf
fcomps
xchg
inc
loop
cmp
test
sub
dec
cltd
mov
sub
loope
push
pop
orb
stos
push
jno
dec
add
mov
mov
push
ss
rcrl
dec
jb
je
insb
rcrb
imul
sbb
outsl
notl
jle
add
mov
aad
pop
int3
imul
and
mov
mov
jo
xor
in
fs
imul
xchg
or
add
or
lcall
mov
shlb
mov
mov
js
stos
inc
andl
into
pop
inc
addr16
and
ret
sbb
mov
iret
call
lods
setno
popa
or
or
out
shlb
sahf
out
in
push
pop
push
mov
into
xor
pop
mov
pushf
fistl
adcb
mov
push
aam
fadds
mov
xchg
mov
inc
and
mov
ret
std
cmp
rorb
sub
sahf
xorl
jnp
cs
into
shll
lret
imul
sbb
mov
add
xor
or
fucomip
xchg
mov
daa
clc
xor
mov
adc
test
adc
pop
lea
shlb
mov
xchg
in
test
jae
out
jae
add
outsl
adc
shl
ret
xor
out
cmp
or
fs
in
rol
mov
mov
inc
aaa
sbb
xor
mov
mov
mov
mov
out
mov
ljmp
cmpsl
sbb
inc
dec
pop
sbb
stc
popf
ret
shlb
pop
mov
push
sbb
pushf
fstps
pop
mov
bound
fildll
pop
cld
out
pushf
iret
jae
shll
lret
xchg
dec
mov
sub
jbe
sub
xchg
mov
enter
fistl
mov
xlat
stos
pop
iret
mov
mov
shll
out
dec
sti
push
xchg
jle
add
imul
mov
sbb
clc
jmp
mov
cmc
loopne
mov
push
sub
sub
dec
adc
jno
fimuls
out
pop
xabort
jmp
sub
stc
stos
insl
xor
pushf
adc
push
mov
fstpt
mov
jns
imul
mov
call
inc
pop
sbb
mov
in
or
fwait
adc
je
pop
test
mov
je
lods
adc
mov
int
pop
outsb
push
inc
leave
adc
icebp
push
sarl
sar
push
int3
xchg
pop
leave
mov
cli
sbb
in
dec
cmp
sbb
pop
imul
mov
outsl
sbb
pop
lret
add
jge
popa
nop
push
and
repz
adc
sbb
xor
jecxz
xchg
repnz
xchg
or
xchg
push
xchg
lahf
xchg
or
push
pop
or
dec
movsl
int
mov
sahf
mov
clc
dec
in
pop
cmp
mov
xlat
sarl
mov
dec
pop
xchg
inc
pop
hlt
stos
mov
sbb
movsl
nop
and
std
inc
xchg
push
outsl
cltd
push
cmc
movsl
push
clc
faddl
jbe
dec
mov
xchg
js
sti
and
xchg
or
js
cmp
mov
jno
loope
cmp
or
dec
je
pop
scas
sarl
add
mov
scas
sbb
jae
add
subb
dec
movsl
add
adc
sbb
push
fisubl
pop
pop
ja
cmp
data16
jns
lret
mov
push
jl
popf
jns
cmpsb
and
dec
jg
or
inc
xor
mov
and
cmc
movsb
call
pushf
mov
xor
outsl
in
mov
jg
pop
iret
loope
subl
adc
and
or
dec
scas
dec
xchg
mov
fs
cmp
les
jecxz
fcmovb
pop
repz
test
or
mov
repz
xchg
addl
add
cltd
add
ljmp
jp
icebp
fsubr
gs
loopne
mov
xchg
dec
push
dec
nop
inc
mov
mov
lahf
sti
inc
sets
push
incb
lock
xchg
movsl
mov
cmp
in
push
add
jno
cld
and
test
pop
fstps
and
rolb
test
pusha
rcrb
xor
cmp
aas
push
fstl
pop
jo
and
cwtl
jl
fcoms
ss
lret
jecxz
jp
rcrb
push
sbbb
cmp
pop
lods
cmpsl
push
cmpsl
fisttps
lret
jecxz
cmp
fidivl
mov
and
inc
testl
xchg
mov
call
daa
lret
sub
xchg
outsb
fsts
mov
xchg
push
enter
fisubs
sub
in
bound
iret
test
int3
decl
fsubrl
mulb
push
mov
pop
leave
test
or
xlat
fsts
or
add
test
das
decb
cmp
and
lea
fs
and
lahf
hlt
dec
bound
imul
stc
jo
nop
lods
jnp
and
push
orb
push
dec
adc
out
or
bound
scas
inc
or
mov
and
test
shlb
sub
aaa
jne
mov
jbe
pop
lcall
jl
mov
or
ja
mov
imul
mov
test
dec
sub
frstor
push
lret
inc
inc
outsb
testb
mov
outsl
out
mov
inc
test
lret
hlt
jmp
sahf
push
fisttps
and
fs
aam
xchg
scas
aam
out
aad
aad
and
cmp
enter
and
add
and
pusha
sub
mov
xor
mov
fldlg2
psrld
push
movsl
and
sbb
add
lcall
sub
or
jbe
xor
leave
xor
popa
mov
push
cmp
mov
data16
sbb
push
enter
sub
cmp
xchg
dec
es
test
insl
mov
cmp
mov
rcll
pusha
std
int
adc
data16
pop
xor
loopne
lods
ljmp
int3
mov
xlat
lret
or
pop
and
stos
lahf
xorl
loop
and
ljmp
mov
hlt
stos
out
cltd
push
sub
cmp
stc
clc
adc
fcoms
gs
cltd
cmp
pop
lret
lea
push
mov
pop
mov
xchg
addr16
cli
or
lods
pop
jle
jp
cmpl
pusha
xorl
aas
pop
dec
in
cmp
mov
inc
xchg
mov
xor
push
jge
scas
rorb
add
xchg
aam
fimuls
shll
adcb
xchg
test
out
sahf
sub
lret
mov
and
popa
outsb
or
mov
mov
adc
sbb
xchg
push
jge
testb
stc
fsts
pop
sbb
scas
int3
or
mov
cli
out
cmp
xor
jae
add
je
test
popa
mov
xor
and
sahf
xor
push
popa
inc
data16
pop
mov
lahf
sub
repz
xlat
je
lods
flds
sahf
mov
sbb
fsubr
insl
jne
pop
je
xchg
arpl
dec
cmp
xor
lret
lret
ljmp
outsl
push
cmc
js
dec
xor
aas
jae
cmc
das
rolb
or
popa
lcall
mov
lods
inc
jge
push
jno
sbb
or
mov
sbb
int3
stos
push
push
pop
xor
fcmove
xor
mov
pop
xor
jno
popf
out
mov
push
cli
pop
mulb
jecxz
outsb
pop
cld
nop
idivl
xor
imul
lret
scas
adc
add
es
mov
cmp
mov
clc
ds
dec
mov
movsl
cmpsb
cmp
add
mov
cmp
paddsw
sbb
inc
pushf
int3
xchg
dec
jl
stc
inc
xlat
cmp
xchg
cs
test
and
mov
jnp
enter
pop
xchg
jns
adc
out
mov
pusha
inc
cmpsl
cmc
adc
arpl
out
add
mov
rcl
pop
loope
push
cmp
imul
and
in
imul
sub
inc
cmp
push
pop
test
mov
ret
pop
cmpsb
inc
mov
inc
aaa
movl
and
inc
jnp
sbb
cmc
sbb
sub
xor
stos
and
mov
dec
jle
mov
dec
out
sub
mov
aad
jb
xchg
pop
in
sbb
xchg
sub
xor
jmp
aam
cmp
adc
jle
cmp
mov
negl
outsb
aaa
int3
dec
insl
dec
das
mov
ss
fwait
aaa
jne
and
test
test
xlat
cmpsb
ja
push
prefetch
iret
sti
fs
sbb
xor
xchg
rcrb
push
add
pop
das
test
or
movsl
mov
mov
jno
xchg
xchg
mov
and
xorl
add
pop
jp
jb
scas
push
sub
fidivrs
pop
or
iret
inc
cmp
jnp
mov
xchg
add
gs
popa
pop
nop
adc
and
int3
pusha
or
add
addr16
xor
out
dec
int
lock
icebp
jne
sbb
movsl
push
mov
outsb
faddl
jne
js
cmp
lea
sub
inc
mov
mov
push
adc
gs
dec
sarl
pop
pop
xor
mov
xchg
movsb
xchg
icebp
fisttpl
inc
sbb
int3
jle
jae
xor
dec
mov
lcall
lret
jmp
or
inc
xor
sbb
xor
pop
call
sub
mov
jnp
dec
sarl
out
mov
mov
push
das
sub
fwait
inc
movsb
mov
push
inc
jns
pop
fwait
lods
mov
xchg
fisttpll
add
fbstp
or
ss
mov
xor
cltd
push
inc
leave
icebp
dec
bound
mov
adc
cwtl
stos
pop
fisttps
adc
lret
les
fidivrl
or
cltd
xor
push
inc
enter
cmpsl
test
ret
sub
jmp
xchg
std
add
in
and
mov
xchg
mov
xchg
mov
xchg
mov
leave
xorb
in
addr16
icebp
adc
in
cmp
sub
scas
pop
sub
mov
cmp
bound
jmp
add
xor
mov
hlt
jae
int3
daa
inc
cltd
xlat
push
addr16
imull
push
lods
sbb
ret
jns
jb
dec
test
scas
sbb
xchg
cmp
cmc
lds
pop
scas
sub
or
fisubrl
xorb
mov
jo
adc
sarl
or
adc
stos
add
jae
mov
ror
dec
nop
pop
jne
push
sub
lcall
push
add
add
addr16
xchg
sarb
clc
stos
subb
repz
gs
cmc
jns
loopne
inc
fimull
or
pop
mov
mov
pop
pop
push
test
outsl
mov
inc
mov
dec
xor
jle
repnz
or
dec
mov
dec
ss
mov
lock
stc
and
pop
xor
and
fwait
add
call
imul
inc
sbb
add
sub
jb
nop
mov
mov
movsl
or
or
repnz
lods
add
pop
dec
lods
das
or
add
xor
and
cmovo
loopne
test
daa
mov
ds
push
les
ljmp
xchg
xor
enter
test
sti
xchg
mov
stos
leave
sbb
push
and
dec
fimuls
fs
fsubs
pop
cmp
mov
outsl
pop
ds
push
add
inc
lret
or
add
adcl
repz
mov
jb
fdivs
xlat
in
ljmp
mov
adc
mov
mov
xor
add
inc
and
adc
mov
jp
subl
popf
jmp
daa
mov
mov
add
das
xchg
clc
adc
dec
cmp
and
xorl
jae
jmp
int
cli
addl
inc
mov
dec
push
cmc
shr
dec
lcall
xlat
sub
sbb
and
mov
in
inc
lods
xchg
sbb
cmpsl
bound
adc
push
cltd
sbb
sub
out
sarb
cmpsl
in
xchg
std
xchg
push
cmp
daa
insl
pop
jge
negl
int
frstor
or
push
cmp
daa
insl
pop
jge
repz
jmp
int
in
xchg
std
xchg
push
cmp
daa
insl
push
jl
mov
pushf
add
frstor
or
push
cmp
pop
xchg
outsl
cmpb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jo
xchg
and
adc
add
cmp
sub
in
cli
lods
movsb
popf
xchg
lea
aam
les
adc
add
je
fs
push
dec
cmp
mov
movsb
mov
lea
aam
out
lods
and
adc
add
je
fs
mov
mov
out
in
mov
mov
insl
pop
jl
add
push
sub
fisttps
mov
rcll
mov
hlt
cwtl
pop
cld
fwait
xor
lods
and
je
loope
pop
leave
dec
cmp
push
pop
bound
jl
pop
aam
xchg
insl
xor
sub
jl
in
cmpsl
jne
std
loop
sub
jae
add
pusha
in
push
xchg
jl
jno
add
pop
push
jl
xchg
gs
ds
mov
lea
jb
jo
out
sbb
fidivs
lds
inc
int
cmp
in
sbb
add
call
push
cmpsl
in
in
aam
cmp
add
inc
lock
lods
fcomps
inc
movsl
push
negl
in
mov
aam
rorl
xor
and
adc
add
je
fs
push
cmc
inc
dec
mov
movsb
inc
xchg
xchg
test
aam
lods
dec
xor
pop
adc
add
adc
or
fmul
in
movsl
int
in
lock
mov
subl
jno
add
sbb
xor
in
loope
mov
mov
insl
dec
popa
cmp
fs
push
dec
inc
mov
xchg
lea
aam
les
adc
add
je
fs
push
dec
inc
mov
xchg
lea
aam
les
stc
push
xor
add
pop
sbb
mov
sub
mov
jle
js
mov
pop
add
test
inc
mov
ja
pop
cld
enter
aaa
es
mov
leave
in
cmpb
clc
pop
push
mov
movsb
shll
push
rcrl
inc
mov
data16
push
cmpsb
lahf
jo
mov
sahf
fs
xchg
mov
test
mov
or
lret
dec
imul
loop
enter
ret
lcall
jae
cmpsl
lret
xor
imul
ja
movsl
int3
mov
xor
xchg
cmp
insb
loopne
cmp
ss
mov
mov
cmpb
dec
mov
mov
jnp
insb
mov
and
fwait
xor
sub
mov
and
imul
scas
mov
adc
dec
out
daa
lods
sub
aad
pop
adc
mov
arpl
test
sub
mov
dec
mov
int3
adc
mov
outsl
cmc
adc
addl
adc
fmul
and
jmp
adc
pusha
loope
mov
dec
loope
insl
lret
dec
cmp
cmp
jns
and
or
inc
lahf
inc
movsb
xchg
or
add
cwtl
fnstsw
jbe
cmp
push
addl
popa
out
adcb
dec
push
je
sub
mov
stos
adc
push
inc
pop
dec
mov
mov
jl
and
push
ret
ds
je
movsb
ret
inc
ret
lcall
add
push
inc
add
dec
out
jo
and
test
and
mov
jecxz
or
rorl
mov
icebp
mov
sahf
sub
popf
dec
jns
rcll
enter
mov
xor
into
imul
fsubrs
xor
sub
mov
aas
mov
mov
repnz
fldl
insl
xor
adcl
insb
and
push
lahf
mov
dec
xchg
xor
cltd
sbb
push
jb
dec
jle
push
xor
jo
addr16
push
sbb
in
imul
sbb
mov
and
in
dec
fldenv
push
xchg
mov
ljmp
and
sbb
orl
cmp
scas
scas
push
xchg
sub
aaa
cmpsb
sub
mov
aas
loope
inc
hlt
movsb
pop
pop
mov
int
and
xchg
sti
insl
sub
add
fwait
or
xor
pop
add
cltd
bound
cmp
dec
add
or
test
jns
xchg
adc
bound
pop
in
pop
aaa
jg
xor
mov
dec
les
shll
cmp
stos
mov
out
mov
add
jbe
lock
dec
cmp
mov
sbb
adc
jg
mov
mov
inc
dec
cmc
shufps
shrb
jo
fnstsw
nop
cmp
icebp
dec
xor
imul
jg
ret
lcall
cmp
aaa
fstpl
aaa
xor
jmp
wbinvd
mov
mov
gs
in
jb
xor
inc
pop
push
loop
cmpsl
pop
mov
mov
pop
fldenv
sahf
nop
dec
mov
mov
lods
pop
jb
insb
xchg
mov
cld
lods
sub
lret
aam
movsl
pop
nop
inc
mov
inc
addr16
lcall
cs
dec
jmp
ja
sub
loopne
mov
xor
loop
push
shl
repnz
mov
sub
repz
dec
orb
ret
jge
inc
xor
lock
or
popa
fs
or
mov
mov
xor
add
sti
mov
xchg
jge
out
xlat
dec
andl
adc
and
xchg
out
pop
or
jg
cwtl
in
test
push
clc
jnp
mov
push
and
out
jns
pop
ljmp
stos
cmpsb
mov
in
cmpsb
add
es
xchg
pop
push
jb
jbe
sbb
mov
pushf
das
push
mov
lds
loop
sub
jcxz
cmp
and
jl
iret
push
data16
fidivs
icebp
adc
mov
loopne
out
divl
fidivs
lock
push
std
inc
ret
dec
mov
imul
jmp
jge
inc
mov
add
push
xchg
hlt
xor
mov
inc
scas
fisubl
cmp
mov
mov
mov
mov
cli
std
fldenv
add
mov
dec
inc
std
ret
sub
jno
sbb
dec
pop
xchg
sti
sub
add
ficompl
and
add
aad
jb
cmpl
das
test
push
push
mov
ret
mov
testl
or
push
sbb
xlat
pop
sbb
jmp
cwtl
sub
lcall
fstpl
cld
loopne
loop
sub
aas
sbb
shrb
hlt
rcrb
add
fdivrs
sub
jnp
iret
mov
not
andb
fs
or
bound
ret
add
ret
sub
push
cmpsb
outsb
dec
sub
ficompl
inc
lahf
inc
in
pop
mov
dec
rcrb
and
or
out
push
mov
push
push
cmp
sbb
sbb
xor
aad
test
push
mov
insb
lods
push
cmpsb
jne
movsb
movsl
push
sub
sbb
xor
sub
add
push
lea
popf
dec
leave
or
incb
sub
in
lahf
xor
stc
mov
jne
mov
sti
ljmp
cld
mov
movsb
or
stos
mov
pop
mov
stos
inc
cli
xor
mov
push
andl
cmp
push
mov
cmp
enter
outsl
out
xchg
out
mov
xchg
add
fsubrs
push
loop
cmpb
cli
popf
ret
dec
ss
push
pop
loope
jl
mov
cmp
dec
jmp
ja
mov
popf
mov
out
cmp
sbb
lret
xor
test
pop
mov
inc
test
leave
add
inc
dec
xor
std
pusha
mov
neg
jl
sbb
ds
ljmp
int3
push
es
lods
mov
ja
sbb
ret
pop
mov
jno
sub
mov
mov
cmpsl
push
xchg
push
je
jne
jo
and
mov
fiadds
out
jge
add
and
xchg
cmp
stos
sbb
pop
insl
out
mov
cs
push
xchg
insb
cmp
add
scas
jmp
fwait
sbb
call
psubsw
push
lods
lds
jno
lcall
popa
push
jl
jle
push
pusha
js
mov
loop
jge
shrl
into
push
sbb
and
mov
fstpl
test
stos
sti
imul
sti
into
push
lahf
cltd
adc
test
and
adc
ja
enter
adc
cmp
neg
mov
inc
mov
xchg
fisubl
pop
mov
push
mov
sub
push
int3
push
sarb
xor
jmp
or
mov
cmc
pop
cmc
fsubrp
nop
popf
adc
test
xor
dec
xchg
insb
or
cwtl
in
popf
push
dec
popl
push
cmpsb
xchg
nop
mov
dec
or
sahf
inc
xchg
mov
xchg
insl
enter
jns
int3
xor
scas
inc
dec
out
nop
les
pop
add
int
repnz
insl
adc
mov
sbb
cmp
dec
outsl
ret
shr
mov
arpl
mov
and
mov
sbb
les
imul
sbb
popf
out
and
data16
inc
mov
jl,pn
sti
std
mov
xchg
sbb
push
dec
fbstp
iret
fdiv
or
orb
sahf
stos
repnz
sbb
jns
inc
sub
sbb
or
add
insb
push
pusha
repnz
mov
dec
mov
adc
out
addr16
xorb
sbb
int3
mov
pop
and
and
jge
xor
push
jno
rol
sarb
cmc
loop
cmp
int
jno
xor
xor
add
and
mov
sbb
imul
ret
cmp
mov
scas
jns
stc
xchg
out
cmp
and
aaa
jmp
push
mov
dec
daa
cmp
push
cmp
mov
mov
xor
ds
adc
push
cld
scas
bound
sub
ds
jnp
in
add
cmp
scas
subb
ret
or
push
dec
fwait
and
dec
outsl
xchg
lcall
jecxz
or
cmp
stc
mov
flds
shrl
lret
dec
mov
lret
lret
rcll
jmp
lods
rcll
cli
mov
pop
jmp
cmp
mov
test
jne
sbb
imulb
int
push
sub
sbb
lods
out
adc
aas
jle
stc
xlat
pop
mov
adc
outsb
cld
fldcw
jl
jno
pop
out
or
push
shrl
or
scas
pushf
ds
push
xor
xchg
mov
cmp
xor
pusha
int
int3
aaa
xor
addr16
xchg
rorl
std
scas
push
and
jge
adc
jge
xchg
repz
cmp
xor
xchg
pop
sub
mov
dec
xor
xorb
rolb
mov
sbb
or
cmp
mov
in
aam
push
mov
xchg
leave
cmp
bound
mov
in
push
jno
or
mov
jecxz
test
and
fdivs
mov
cltd
out
lahf
mov
push
dec
in
jmp
ljmp
mov
loopne
jmp
xchg
push
mull
es
in
mov
adc
pushf
push
nop
xchg
sbb
sbb
inc
call
in
xchg
or
inc
or
cmp
and
in
cmpb
jbe
mov
cmc
loope
jbe
jmp
ror
adc
mov
mov
lahf
outsl
ljmp
add
rorb
inc
js
arpl
jmp
push
xchg
mov
imul
ss
add
cld
xor
mov
in
cli
dec
out
pop
popa
push
mov
shl
es
nop
dec
inc
repz
popf
lea
imul
inc
cli
add
ss
aam
xchg
movsb
hlt
dec
pop
fldt
pop
inc
subl
xchg
loopne
xchg
cld
add
lds
outsl
aaa
mov
xor
icebp
ds
stos
fwait
inc
rcl
push
aas
repnz
mov
jns
ja,pn
jmp
or
in
imul
push
insl
jl
mov
lock
mov
adc
out
xchg
mov
inc
dec
nop
int3
jmp
movsl
pop
pop
je
mov
mov
test
mov
lea
out
and
add
call
pop
rorb
mov
sbb
mov
fcompl
and
inc
push
or
notb
add
sti
dec
pushf
lods
mov
loope
push
xchg
pushf
xchg
add
jle
rcrb
xor
inc
lcall
cld
push
int
xchg
gs
mov
mov
add
lods
fdivr
sbb
and
fnsave
out
lds
and
mov
shrb
add
dec
cmp
pop
dec
xchg
cmp
std
shll
das
adc
fcmovne
sub
mov
mov
jecxz
push
aas
inc
outsb
push
fst
fwait
inc
and
jmp
lret
testb
lds
test
shrl
popf
loope
jmp
and
gs
adc
pop
shlb
adc
gs
mov
lahf
jecxz
jg
dec
cmp
or
or
mov
inc
adc
fnstcw
xchg
and
sti
rcll
inc
dec
in
fdivrl
xchg
gs
iret
movsl
inc
in
sbb
decl
jp
jb
push
sbb
lret
aam
push
mov
inc
cs
les
xor
xor
jo
repnz
sub
push
inc
mov
mov
in
or
lcall
je
ret
add
inc
xor
incl
ficompl
xlat
xchg
aam
jle
dec
sbb
xchg
icebp
jae
adc
xchg
les
inc
stc
outsl
mov
xchg
xchg
and
dec
out
cld
dec
addb
xchg
sub
xorb
sbb
std
loope
divb
fwait
repz
gs
xchg
cli
leave
xchg
xchg
pop
cmp
pop
fs
mov
mov
xchg
xor
dec
or
outsl
pop
lock
sbb
push
mov
sub
sbb
sbb
mov
in
jle
gs
call
hlt
inc
push
sbb
cwtl
xor
inc
add
test
xor
pop
enter
pop
xlat
push
scas
out
pop
insl
xor
outsb
rcrl
mov
ret
cwtl
jnp
mov
jne
inc
nop
push
lods
dec
xchg
cmp
mov
and
and
jb
and
enter
fs
imul
pop
in
push
fcoms
sarb
inc
stos
or
mov
xchg
dec
jae
test
cmpb
std
push
fadd
push
dec
sub
lcall
xor
in
sub
daa
and
fbstp
mov
adc
cmp
and
jge
lock
fimull
xchg
and
call
and
mov
ret
mov
sbbb
push
testl
std
dec
push
daa
lock
push
dec
fstpl
mov
cmp
repnz
sahf
or
ljmp
lret
fidivrs
jmp
push
scas
ja
adc
sub
jno
pop
adc
sbb
mov
ss
push
or
imul
jae
into
ja
arpl
out
es
int3
fstpl
int3
in
push
jl
sbb
or
mov
push
push
adc
jmp
insb
sub
and
out
jns
std
inc
movsl
jbe
test
cli
sub
not
andb
lahf
inc
jo
jno
push
sub
mov
and
xchg
jbe
movl
jl
and
popf
pop
mov
pop
outsl
loop
mov
lods
add
call
loop
outsb
cmp
movsb
jmp
xor
push
xor
jl
je
mov
arpl
sbb
push
sub
jno
jns
jmp
xor
cld
loop
sahf
mov
loopne
adc
pop
ret
cmp
xchg
mov
push
adc
pop
sub
jne
xchg
add
push
add
outsl
fimuls
push
in
dec
ljmp
dec
mov
add
cmpsl
jae
cmp
test
test
adc
inc
xchg
int3
mov
mov
inc
xlat
out
pop
adc
lret
jmp
loopne
lds
pushf
push
sbb
and
dec
cmp
or
jg
mov
inc
jne
lcall
sub
ret
fdivr
mov
loopne
cmp
sahf
pop
lea
cld
divb
into
out
fdiv
mov
push
mov
inc
mov
mov
loope
sbb
lods
sbb
cwtl
les
pop
push
xor
or
xor
stc
add
scas
xchg
cmpsl
jecxz
mov
cs
mov
adc
xor
sti
scas
int3
sbb
inc
leave
push
add
mov
mov
lods
int3
fdivl
mov
sub
sub
xor
jmp
pop
in
loop
jbe
clc
pop
aad
dec
test
ret
mov
sahf
cld
pop
imul
stc
cmc
add
mov
mov
outsl
sbb
mov
out
pop
jg
loopnew
mov
jge
xor
in
add
xchg
mov
sbb
jae
insb
xor
shl
rcl
dec
dec
fsubr
out
mov
into
lea
decb
lcall
fcmovnb
bound
xlat
aaa
cmp
mov
dec
test
negl
mov
icebp
cmpb
inc
and
popa
mov
mov
or
popa
sbb
xchg
sbb
mov
sti
sbb
xlat
dec
in
mov
cmpsb
call
mov
xor
jne
jb
dec
jmp
inc
lods
cmp
cs
cmp
dec
js
add
ss
ret
or
fistps
lods
outsl
es
sbbl
das
jge
sub
mov
mov
std
pop
cmp
mov
sti
ret
repz
lods
lea
aam
pop
sbb
xchg
push
faddl
mov
cmp
cmp
cmpb
sub
dec
sub
inc
xor
inc
dec
xchg
push
jns
int3
sbb
xor
dec
pop
outsl
xor
mov
call
imulb
inc
sbb
nop
ds
sbb
inc
icebp
inc
fbstp
dec
mov
fadd
pop
jl
and
mov
mov
xor
dec
lret
inc
push
mov
enterw
pop
insl
dec
ret
je
dec
jnp
adc
or
pop
lret
dec
mov
add
dec
dec
repz
stos
mov
adc
mov
popf
xchg
inc
pusha
push
es
mov
push
lds
jmp
dec
mov
xor
jo
xchg
cmc
dec
push
sbb
punpckhbw
data16
inc
add
arpl
mov
xor
jge
in
mov
mov
xchg
popf
in
es
repnz
fidivrs
mov
mov
push
gs
mov
jbe
adc
roll
test
pop
rorb
das
sbb
jno
lret
cmp
adc
into
lock
rcrb
jno
sarb
test
cltd
lods
or
jg
lods
movsl
sbb
icebp
loope
and
repz
jo
dec
cmp
add
or
lds
cmp
and
scas
std
mov
fimuls
repnz
in
scas
mov
jl
push
or
mov
mov
jne
imul
movsl
sub
mov
sub
cld
rcrl
loopne
jge
add
in
lret
lret
into
lods
sahf
lds
dec
out
mov
inc
mov
pop
aas
and
js
add
or
jmp
cmp
mov
lods
stos
pop
int3
push
pop
popa
mov
std
sahf
jmp
dec
out
iret
jle
test
push
add
ficoms
push
xor
xchg
in
jl
adc
xchg
dec
daa
pop
sbb
mov
iret
push
test
pop
cmp
addr16
and
pop
in
pop
arpl
lret
dec
in
sbb
cmpsb
es
idivb
jo
sbb
push
cmp
inc
lahf
pop
and
ss
xchg
mov
mov
mov
push
int
sbb
mov
xchg
mov
push
push
enter
in
aas
sub
push
in
xchg
pop
push
out
adc
xchg
je
dec
adcl
sub
pop
inc
js
rcrl
into
sahf
adc
inc
testl
sub
push
cmc
arpl
mov
std
into
scas
jge
sub
push
mov
inc
dec
outsb
adcl
imul
xchg
int
cmp
jecxz
cmc
test
aad
sub
fiaddl
adc
and
adc
hlt
push
bound
jp
xchg
fsubl
push
pop
xor
xchg
loopne
fidivrs
ret
dec
mov
fists
ljmp
mov
cmp
add
ja
sub
lds
inc
mov
out
rcrb
ds
enter
dec
arpl
pop
xchg
adc
out
jns
and
xchg
iret
push
sub
push
lea
add
add
mov
and
sbb
or
cmpsl
add
test
mov
dec
std
push
pop
push
in
jmp
shrl
push
lahf
push
mov
inc
aad
mov
stc
jl
insb
add
test
shr
int
mov
fnstenv
pop
jmp
mov
jae
out
cs
or
xor
out
cmpsb
mov
pop
ja
pop
jecxz
mov
inc
push
cld
ja
ljmp
inc
mov
sbb
sbb
lods
xchg
adc
fwait
mov
and
dec
loope
int
dec
out
inc
mov
out
out
aam
and
jbe
imul
test
lds
mov
sbb
mov
push
cmpsl
dec
call
xor
adc
popf
mov
jae
dec
icebp
inc
stos
pop
cmpsb
data16
cld
jmp
and
int3
int
jae
and
push
xchg
xchg
mov
aas
inc
push
fxch
jp
xchg
add
lret
ss
add
dec
insb
imul
ret
fcomps
mov
add
jno
dec
ret
dec
mov
insl
dec
cli
int3
je
lea
sbb
mov
into
mov
in
xor
out
xchg
cmp
shll
xchg
jge
cmc
adc
add
je
fs
push
dec
inc
mov
xchg
lea
aam
les
adc
add
je
fs
push
dec
inc
mov
xchg
lea
aam
les
adc
add
je
fs
push
dec
inc
mov
xchg
mov
aam
les
adc
add
je
fs
push
int
mov
xchg
repz
and
xor
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lea
push
ret
outsb
lods
rorb
arpl
push
dec
and
insl
add
jecxz
rep
ret
mov
aas
in
cmp
or
inc
cmp
xor
jge
lea
rep
imul
in
insl
std
mov
sbb
and
ja
adc
jecxz
popf
fidivs
fnstsw
data16
push
dec
iret
pusha
leave
in
outsb
adc
fisttps
loopne
cmp
loop
cltd
xor
mov
or
sti
inc
xor
mov
and
insb
add
mulb
xor
mov
out
ja
ror
push
fsubrp
add
xor
ret
mov
jecxz
sarl
int
int
adc
insb
or
jbe
scas
mov
xor
inc
jb
jmp
push
jbe
imul
mov
xchg
sbb
test
lea
push
dec
ljmp
xor
ret
jbe
pop
arpl
aad
js
jno
pop
int3
insl
add
add
mov
std
adc
push
cmp
lret
insl
add
lret
mov
repz
mov
ljmp
dec
aaa
push
cmp
dec
xor
sub
jb
cmpsb
out
mov
mov
mov
in
in
std
ljmp
pop
and
sub
jg
bound
in
stc
mov
xchg
mov
mov
cmp
or
inc
cmp
xor
jge
jecxz
rep
ret
mov
mov
cmp
or
inc
cmp
xor
jge
jecxz
and
pusha
cltd
call
cmp
push
fucom
fsubs
sbb
inc
in
and
std
adc
jge
sbb
lea
dec
sbb
stos
jmp
add
sbb
cmp
add
lret
xchg
push
in
test
xchg
pop
idiv
stos
loope
xor
push
push
pop
arpl
ja
xor
inc
pop
add
or
inc
push
pop
xchg
cmp
in
adc
insb
daa
jne
and
es
or
or
dec
jo
sbb
jno
jp
data16
fcomip
mov
int
xchg
adc
lock
rorl
repz
js
icebp
je
mov
les
or
mov
inc
jecxz
fiadds
int
sbbl
push
or
testb
call
and
notb
lds
dec
movsb
xchg
push
popa
mov
es
jl
mov
sub
push
dec
out
popa
aad
sbb
sub
push
rcrl
jb
cmp
aaa
mov
sub
psubq
aad
jle
jo
out
cmp
xor
xor
and
lock
sub
fidivl
into
fs
stc
sub
jae
popa
mov
in
test
cmpsb
imul
rcrb
sub
ret
xchg
xchg
mov
fwait
xchg
add
gs
jae
ret
jmp
ds
xchg
xor
dec
or
lock
jl
pop
repz
push
sbb
ds
je
sub
pushf
bound
loop
addr16
insb
lret
outsl
mov
cmp
ret
lea
shrl
sub
inc
cmc
mov
jmp
mov
divb
push
movsb
inc
mov
fwait
rcrb
sbb
inc
lcall
adc
push
add
ret
ja
in
imul
push
and
scas
pop
sbb
mov
sbb
popa
leave
jle
sbbl
sbb
int3
out
mov
cmpsb
adc
jnp
jnp
sbbl
xor
imul
xchg
mov
ret
xchg
xchg
decl
int
ret
pop
jae
sahf
inc
jns
sbb
sbb
stos
mov
xor
pop
mov
xchg
adcb
dec
repz
adc
pop
data16
or
pop
pop
popl
shll
in
sbb
cltd
roll
sub
ret
loopne
pop
mov
mov
flds
xchg
mov
lds
mov
ss
pop
xchg
cli
pop
jbe,pt
lcall
cmpsl
and
push
inc
inc
pop
insl
mov
cld
fadds
mov
inc
sbb
inc
loopne
insl
push
xchg
in
gs
into
out
pop
jb
push
test
jp
insl
and
cli
mov
lods
mov
lret
xchg
sti
push
adc
stos
test
lret
fcoml
sarb
push
pop
sbb
in
mov
cmp
outsb
adc
lds
add
ret
and
int
add
xor
dec
rcl
test
adc
pop
lahf
xchg
mov
movsb
cmp
mov
push
mov
jle
xor
outsb
mov
je
cmc
je
add
fsub
dec
jb
ret
aaa
sub
or
or
mov
push
mov
xor
test
sbb
lea
sahf
ret
or
dec
xchg
add
pushf
stos
popa
das
or
inc
pop
enter
lret
loopne
mov
negl
push
fimull
fwait
outsb
pusha
mov
add
arpl
cmp
add
aam
movsl
roll
lea
or
mov
sbb
cmpsb
inc
mov
loopne
call
fistl
xchg
scas
das
jp
inc
push
sbb
inc
insl
pop
adc
or
jp
push
pop
mov
lea
insb
movsl
push
orb
stc
or
pop
test
xor
cmp
repnz
jmp
inc
jp
jmp
and
sbb
cltd
pop
fwait
adc
cmp
or
cltd
js
sbb
and
insl
pop
cmp
mov
jge
jae
push
xchg
es
xor
div
mov
ret
popa
xchg
mov
xchg
fidivl
loop
jae
popa
mov
aad
mov
fmuls
mov
jmp
imul
cmp
scas
sbb
adc
mov
jno
mov
pop
pop
or
pop
push
push
outsl
shl
sub
das
repz
dec
sarl
sbb
cmp
mov
push
pop
das
push
cmp
rorl
push
je
add
cmc
test
fsubr
fwait
jb
mov
mov
and
std
loop
in
pop
ss
adcb
js
fsub
xor
adc
jmp
jb
adc
call
xchg
mov
dec
mov
icebp
mov
fildll
mov
sbb
flds
push
dec
icebp
mov
adc
sbb
xchg
jg
aad
mov
mov
repnz
and
sbb
aam
mov
pop
cmpsl
and
je
aad
aas
mov
scas
add
stc
cmp
shrb
mov
dec
pop
in
mov
popa
fs
push
int3
inc
dec
pop
inc
nop
mov
test
add
shlb
pop
xor
sub
sbb
mov
mov
pop
pop
mov
xor
xchg
or
adcl
mov
jno
sub
xchg
popa
xchg
push
jns
cmp
push
xor
or
add
jg
dec
sub
imull
cmp
mov
push
clc
gs
cmp
mov
mov
popl
sbb
pushf
jo
mov
sub
or
outsb
push
ret
nop
popf
es
or
int3
lods
je
jo
dec
fs
sahf
push
dec
cli
pop
roll
imul
lods
enter
sub
inc
dec
mov
dec
addb
fistpll
xor
popa
icebp
and
push
adc
or
paddsw
fcmovbe
outsb
mov
fisttpll
repz
mov
push
imul
mov
xor
in
jecxz
cli
mov
add
or
loope
push
mov
loopne
lret
xchg
cmp
cld
xlat
mov
adc
out
cmpsl
mov
lea
and
es
icebp
fbld
pop
in
js
and
dec
in
mov
and
jl
aam
movl
pop
movl
sbb
mov
jae
scas
xchg
xchg
mov
and
loop
or
mov
mov
inc
xchg
ss
mov
mov
mov
js
test
enter
sub
roll
fs
enter
and
inc
push
mov
mov
and
and
bound
or
cwtl
xchg
jmp
adc
pop
pop
jnp
je
xchg
jg
jle
test
gs
cmp
push
ss
inc
fistl
cmpsb
aam
dec
call
fisttps
mov
movsl
stc
pop
xchg
xchg
enter
ret
push
sbb
out
dec
mov
jo
sbb
add
inc
mov
mov
inc
ret
cmc
xchg
lods
cmp
mov
insb
or
pop
mov
dec
and
mov
inc
add
xchg
push
in
and
sti
call
aas
bound
mov
bound
push
dec
add
jae
cs
fidivrl
lret
repz
mov
inc
in
pushf
test
daa
test
out
daa
sub
sub
test
mov
dec
sbb
jg
fsubp
adc
jae
push
cmp
push
es
leave
add
iret
or
push
mov
pop
and
xchg
int
jb
jno
pop
pushf
jnp
push
jno
inc
sbb
mov
scas
cmc
sub
mov
pop
xor
xor
adc
pop
cmp
xorl
pop
jbe
scas
mov
xchg
jmp
daa
add
or
mov
xlat
mov
adc
aam
mov
mov
roll
negb
mov
shlb
scas
call
mov
dec
adc
mov
filds
sahf
or
pop
hlt
movsb
mov
divb
adc
jecxz
std
push
loopne
lock
sbb
fnstcw
add
ret
out
mov
sub
adc
gs
pop
enter
push
jno
jb
add
ja
mov
push
lds
mov
mov
cwtl
and
mov
sbb
cmp
stos
inc
mov
xchg
sbb
stc
repnz
inc
lret
xchg
xor
push
pop
add
movsl
xor
testl
or
and
outsl
sub
xor
cld
mov
add
es
negl
mov
push
in
sub
inc
mov
mov
pop
js
aaa
xchg
dec
and
and
and
lock
pop
icebp
call
xor
les
out
lock
imul
negb
mov
leave
in
jmp
in
sub
leave
fs
cli
jl
mov
inc
xor
ja
jae
inc
imul
insb
filds
pop
sbb
lock
out
or
jo
fistpl
pop
sub
xor
xchg
xor
stc
mov
bound
fs
sbb
lcall
insl
jbe
lcall
xchg
std
xor
out
aaa
mov
ret
mov
enter
xchg
es
xchg
xor
stos
mov
mov
fcmovnu
mov
jb
enter
adc
inc
cmpl
les
shr
dec
mov
xchg
fisubl
and
xor
test
sbb
scas
xchg
adc
cmpsl
aad
push
jl
cmp
mov
mov
mov
scas
cmc
pop
fisttps
sbb
ret
mov
nop
cmp
adc
push
xchg
lods
shlb
jp
sbb
adc
gs
mov
xchg
cltd
outsb
fidivrs
pop
and
or
pop
lods
pop
mov
push
pop
cld
add
in
push
jb
push
shrb
arpl
call
jmp
clc
lock
in
sub
xchg
scas
dec
outsb
mov
lods
shlb
cmp
sahf
push
popf
jp
xor
int3
out
cmp
dec
inc
fwait
test
jb
add
fstpt
mov
loope
outsl
and
xlat
push
add
clc
enter
imull
ljmp
pop
push
cmc
dec
push
outsb
sub
xor
cld
repz
cld
pop
mov
out
adc
adc
test
stc
ficompl
bound
shlb
rol
rcrl
jecxz
loope
cmpsb
xor
dec
movl
sbb
and
xlat
pop
jnp
or
mov
mov
orb
lcall
sti
pop
cmpsl
mov
es
inc
shl
push
mov
mov
add
dec
sbb
psubw
maskmovq
and
xchg
cmpsl
int3
out
push
lret
inc
icebp
xchg
add
or
in
push
bound
lret
lret
pop
sub
mov
pop
cmp
pop
or
pop
xor
cld
cmp
ds
out
fwait
test
out
or
sub
movsl
ret
mov
mov
or
scas
mov
mov
mov
jnp
or
mov
lods
pop
les
popa
rorb
sbbl
loop
push
out
xorb
lahf
lret
mov
and
and
xor
das
jno
push
xchg
stos
xor
icebp
cltd
mov
test
sub
enter
or
xor
sub
push
adc
mov
pop
pop
mov
aad
inc
shlb
pop
xchg
aam
adc
mov
out
insb
pushf
aad
pop
mov
cmp
rcrl
mov
stos
jmp
insb
pop
mov
cmpsl
insl
notb
pop
inc
dec
pusha
xchg
lcall
lret
pusha
pop
pop
inc
xchg
jne
inc
lret
sbb
cmpsb
lds
push
pop
sahf
mov
andb
dec
mov
or
subl
push
push
outsb
fidivl
loop
aad
adc
xchg
lods
gs
cmpsl
sbb
cs
fmuls
inc
mov
and
cmp
mov
jns
outsb
dec
push
je
lret
int
idivb
fimuls
xchg
fisttpl
stos
fldt
daa
pop
lds
push
sbb
mov
scas
repz
mov
cmp
add
mov
fs
xchg
xor
aad
mov
js
nop
jne
push
adc
dec
ja
popf
mov
push
mov
mov
dec
testl
ret
xor
mov
add
loope
ljmp
pop
inc
inc
mov
je
pop
sahf
xchg
dec
inc
adc
out
lahf
in
xor
movsl
lea
addr16
jle
xor
adcb
aas
add
cmp
mov
jge
movsb
shr
shlb
xor
cmp
insl
dec
fsubp
dec
je
test
shll
mov
xor
out
xchg
lea
jge
imul
js
imul
pop
mov
test
or
inc
loop
shlb
push
xchg
xor
mov
add
mov
movsl
lcall
or
pop
insl
subb
pop
inc
jbe
inc
adc
cld
movsl
mov
push
stc
mov
and
sub
daa
out
inc
bound
mov
or
mov
cmp
push
add
dec
cmc
or
mov
add
pop
xchg
sbb
jbe
sub
mov
loopne
mov
cmc
or
mov
lods
push
adc
mov
push
lods
add
outsl
and
hlt
adc
sti
mov
jmp
mov
xor
pop
inc
popf
test
leave
mov
sti
sahf
pop
inc
mov
or
mov
lock
addr16
jmp
cmc
mov
icebp
dec
sbb
mov
dec
push
scas
lods
and
pop
mov
sbb
sbb
sub
and
and
je
adc
insl
pop
adc
xor
shl
mov
dec
fcoms
test
pop
cld
cmp
cmp
subb
push
adc
mov
and
cmc
xor
rcl
xchg
jle
pop
loop
imul
rcl
jmp
pop
inc
sahf
decl
inc
icebp
jecxz
fiadds
dec
jb
jo
loopne
mov
push
lods
decb
mov
or
arpl
xor
mov
ss
jmp
sub
insl
ret
mov
imul
dec
add
sti
xor
xchg
mov
jle
pop
xchg
test
popa
push
mov
xlat
mov
imul
enter
cmp
cwtl
scas
insb
insb
lret
or
movsb
jmp
jb
or
rol
adc
rclb
in
fs
lock
cld
and
iret
jge
adc
cli
idivb
scas
ret
jle
mov
jg
addl
cld
lods
pop
push
xor
popf
daa
shlb
sbb
jne
pushf
in
movsl
xchg
outsb
ljmp
out
fists
xor
test
and
jb
push
fwait
mov
pcmpgtw
mov
das
fs
pop
mov
out
adc
cmpsl
pushf
mov
in
aad
in
jns
popf
shll
xchg
scas
fldl2t
jns
repnz
mov
pop
arpl
std
push
lcall
ds
repnz
adc
pop
pop
pop
add
lds
sub
ds
bound
outsl
ljmp
repnz
loope
sub
inc
test
loope
lock
xlat
sahf
stos
xchg
adc
inc
dec
xor
xor
xchg
pop
inc
les
jmp
cmpsb
xor
test
push
scas
pop
sahf
enter
sbb
dec
mov
pop
pop
jp
mov
je
shrl
push
and
xchg
sub
fs
pop
out
or
fisubrl
enter
hlt
and
cmp
jg
jl
ficoms
iret
push
int
xor
rclb
fcoml
dec
inc
pop
mov
leave
jno
repz
or
lods
jl
addr16
adc
jb
adc
and
cmc
xchg
adc
inc
cld
frstor
jb
dec
shlb
push
mov
inc
shrb
js
ret
sahf
mov
mov
arpl
jb
rorl
stc
jo
insl
add
bound
mov
sub
xor
xchg
push
mov
xor
orl
cmp
inc
add
or
push
dec
pop
pop
ljmp
rol
pop
mov
gs
mov
cpuid
xchg
out
dec
call
mov
sbb
fistl
xor
pushf
int3
rcl
xor
mov
in
xchg
cvtdq2ps
push
push
lods
sbb
in
sub
xchg
sbb
aad
pop
stos
mov
dec
imul
dec
jle
fst
sarb
mov
outsb
dec
scas
sti
push
mov
sub
push
fildll
ficoms
sbb
and
inc
add
mov
push
loope
imul
push
push
cwtl
lret
or
jno
xor
cmpsl
aas
and
xchg
enter
pop
pop
imull
mov
testb
inc
jl
mov
ja
cmp
dec
test
lods
and
xchg
jmp
pop
mov
insb
inc
pop
out
mull
adcb
xchg
rorb
push
sbb
fdivr
les
or
in
cmp
into
dec
pop
cld
ss
add
mov
mov
pop
jp
mov
adcb
addr16
sti
fcomip
cmp
pop
ret
jmp
push
lods
xchg
sbb
cmc
push
mov
push
pop
daa
mov
in
inc
call
add
stos
out
dec
es
fstl
xchg
fnstsw
mov
adc
ret
xor
cmp
pusha
push
test
imul
ret
jne
pop
ret
out
fisubs
sbb
rolb
fistl
js
adc
outsb
xor
repnz
and
xor
inc
aaa
jne
adc
cmp
push
repz
std
or
iret
dec
pop
js
mov
out
jg
add
inc
jmp
jo
sub
xchg
enter
mov
or
adcl
les
ret
jecxz
mov
stos
shrl
popa
jecxz
xchg
inc
shll
adc
lods
lods
ss
sub
flds
or
imul
xchg
stos
fdivrp
xor
arpl
mov
fwait
push
xchg
xchg
mov
cmp
scas
dec
xlat
aas
xchg
loopew
xchg
cmpsb
jb
mov
mov
shrl
fnstcw
and
mov
daa
push
push
and
add
push
test
sub
cs
outsb
ds
movsb
das
xchg
push
test
mov
sbb
mov
fwait
pop
ss
addr16
mov
cmp
and
call
outsl
cmp
mov
push
mov
adc
and
adc
out
sbb
jl
test
jnp
xchg
test
rolb
pushf
and
cmp
push
test
outsl
movsl
mov
add
inc
mov
loopne
jae
mov
mov
xchg
cmp
movsl
push
sbbb
xchg
cmp
sbb
inc
sbb
in
lods
push
test
daa
add
cmpl
imul
add
lea
and
popa
fisubrs
movsl
call
push
or
mov
push
out
in
dec
lods
in
cmp
into
leave
std
lahf
pop
mov
pop
mov
dec
sbb
mov
lods
rolb
icebp
or
mov
pop
xchg
xchg
push
pop
cli
sahf
outsb
or
add
mov
pop
cltd
addb
lret
ljmp
jnp
xchg
mov
xor
mov
xchg
bound
sub
inc
inc
mov
push
movb
xchg
das
and
add
fs
dec
sbb
jle
or
aam
mov
mov
dec
jg
mov
mov
cmpsl
orb
xchg
test
jl
adc
mov
adc
jbe
test
or
xchg
pop
dec
fmuls
cmc
stos
inc
cmp
mov
xchg
push
xchg
stc
jbe
push
test
xchg
and
mov
test
ss
cmp
mov
pop
mov
or
rorb
cmp
adc
xchg
sbb
fs
mov
cmp
jns
in
cltd
sbb
sbb
cmp
adcb
adc
sahf
mov
lret
push
rep
push
sub
add
sub
xor
sub
shll
sbb
imulb
aam
cmpsb
ret
xchg
jg
dec
or
sarl
out
incb
mov
or
or
push
pop
jp
jge
sahf
frstor
sbb
lock
mov
mov
addl
bnd
sbb
jnp
mov
mov
cli
popf
mov
lds
mov
cmp
subb
into
repz
fnsave
or
inc
cmp
xor
jge
jecxz
rep
ret
mov
mov
cmp
or
inc
cmp
xor
jge
jecxz
mov
int
fstpl
in
cmp
or
inc
cmp
xor
jge
jecxz
rep
ret
mov
mov
add
xchg
or
inc
cmp
int3
xchg
cld
sub
stc
in
jmp
mov
mull
arpl
dec
dec
cmp
or
jmp
mov
cltd
in
jge
insl
imul
sub
or
pop
jmp
mov
cltd
lea
xor
jg
jne
jl
jle
mov
cltd
fisttpll
lods
inc
inc
lcall
add
rolb
mov
pop
sbb
or
adc
adc
pop
mov
inc
xchg
test
add
mov
xchg
fsubs
jno
sbb
jmp
fisttpl
je
in
addr16
inc
mov
push
sub
xchg
xor
and
cmp
and
bound
insl
xchg
fstps
sub
or
cmp
push
std
es
les
and
mov
out
jl
cmpsb
or
push
cmp
jno
jmp
fsubl
roll
and
mov
insl
aam
mov
jns
sbb
mulb
fxch
leave
pop
mov
sub
sub
dec
jne
daa
sub
sbb
nop
test
inc
fucomp
cld
std
jge
jo,pt
or
cmp
inc
outsb
je
push
test
cli
enter
fsubs
pop
ds
mov
xchg
mov
sahf
mov
mov
mov
insl
imul
sub
or
stc
in
jmp
mov
cltd
lea
pop
pop
dec
dec
cmp
sbb
rcrl
or
sub
into
das
insl
adc
sahf
ja
sub
mov
mov
or
push
std
mov
mov
sub
jbe,pt
pop
jno
sbb
cmp
push
sub
dec
mov
lahf
es
clc
pop
jmp
mov
push
aaa
test
push
test
adc
mov
cwtl
mov
xor
nop
cmpsb
pop
mov
push
mov
stc
cld
lahf
cmc
in
cmp
jnp
popa
xchg
and
jmp
push
in
inc
rolb
int3
mov
fnstsw
das
stc
cmp
lock
mov
lret
inc
and
stos
rep
call
mov
sbb
div
fdiv
add
cmpsl
adc
lods
xor
jae
jp
jno
xchg
call
mov
lods
mov
cwtl
bound
push
insb
xchg
out
sbb
js
jbe
inc
xchg
fdivrl
jb
aas
xchg
sub
push
mov
mov
jecxz
popa
ljmp
jecxz
mov
lods
push
adc
push
test
pusha
lahf
cmp
ret
sub
lahf
xchg
sbbl
jecxz
test
cld
or
mov
insl
or
ja
dec
mov
rorl
popa
int
sub
adc
adc
sbb
xchg
das
aas
sub
dec
std
push
xchg
je
outsl
outsl
sbbl
pop
and
adc
push
out
jmp
in
fxtract
js
dec
loop
cmc
std
cwtl
pop
jns
pusha
add
xchg
dec
and
scas
cwtl
mov
ljmp
ret
loopne
sbb
aam
dec
jae
sbb
cltd
or
fsubrs
ret
mov
inc
xchg
add
xchg
pusha
inc
out
pop
sbb
daa
bound
sbb
cmp
push
stos
insl
xchg
loope
jbe
sub
filds
movsl
outsb
lcall
clc
rcrb
add
cld
add
sti
jmp
aad
xchg
mov
xor
fldt
mov
pop
cld
rcrl
push
popf
jb
inc
jg
add
sub
xor
jne
dec
stos
fwait
mov
lds
or
cmpsb
xchg
cmpl
js
leave
push
adc
mov
es
cld
sbb
and
mov
mov
pusha
mov
scas
adc
frstor
sub
shrb
inc
lds
jge
adc
cmp
loopne
aam
dec
add
mov
sbb
mov
mov
icebp
and
or
cmpsl
std
scas
ss
enter
dec
lret
mov
jne
and
aam
cmp
outsl
ret
dec
sbb
fistps
cmp
daa
sahf
sub
loop
jne
or
jecxz,pn
jmp
or
fistpll
mov
daa
aam
mov
or
and
sub
xor
jnp
jp
popl
adc
inc
mov
hlt
sub
push
andb
and
fsubl
push
xor
cltd
fwait
mov
test
adc
jne
and
add
xlat
std
insb
ret
mov
jbe
mov
imul
xor
mov
ror
sub
or
cwtl
mov
and
mov
ret
pop
mov
sub
mov
mov
lods
in
mov
cmpsl
add
popa
adc
dec
lahf
mov
leave
shr
pop
or
fbld
mov
jno
mov
or
xor
int3
and
jmp
popf
push
add
xor
jae
push
pop
jo
sub
insl
cmp
bnd
enter
add
sbb
mov
jns
pop
nop
jne
add
cs
xchg
push
cld
jo
decl
rclb
add
xor
or
mov
sub
mov
test
cmpsl
sahf
testl
sub
xor
adc
mov
in
pop
lea
fwait
loope
xchg
jae
hlt
fildll
and
dec
jmp
sub
leave
testl
pusha
sub
dec
ficomps
jg
les
or
lret
jne
push
scas
inc
stos
into
push
xlat
mov
out
cwtl
insl
add
in
addr16
xchg
fldl
lahf
mov
cmp
insb
adc
cli
daa
aam
insb
les
aas
mov
outsb
mov
cli
loope
pop
push
push
mov
add
sarb
adcb
fwait
mov
cmp
icebp
test
or
pop
mov
dec
es
scas
cmp
jne
jg
sarb
popa
ffreep
xor
mov
not
lret
adc
shll
jb
clc
dec
mov
pop
push
or
cmpsl
mov
imul
movsl
or
lret
pop
xchg
aad
lock
push
adc
xor
std
repnz
jle
cmp
cmp
pop
pop
cltd
sbb
dec
inc
dec
std
add
and
int3
negl
out
sbb
test
leave
lea
test
inc
out
pushl
pusha
xchg
pop
das
mov
popf
pop
or
mov
sub
adc
pop
lods
in
mov
pop
xor
icebp
add
pushf
aas
pop
xor
jns
movb
dec
adc
push
inc
or
daa
add
jle
movsl
push
dec
test
fistpll
inc
mov
jno
repz
loop
adcb
sahf
imul
call
jnp
leave
xchg
jge
aad
sub
jne
out
mov
dec
jns
xlat
mov
xchg
loop
out
cmp
fcmovnb
arpl
ds
scas
mov
cmp
push
mov
lcall
in
inc
popf
pop
fprem1
movsb
cmp
imul
add
fstpt
call
and
or
jb
repz
inc
jg
push
loopne
push
fwait
inc
add
aaa
mov
jae
adc
ja
inc
pop
aad
xor
out
in
fdivr
xor
fistps
jae
loope
aas
scas
mov
fildl
pop
mov
js
psraw
mov
aad
jmp
andb
ja
outsl
fisttpll
lret
or
xchg
cmpsl
popa
stos
stc
lcall
jmp
mov
mov
lods
dec
stc
fisttps
jno
sbb
hlt
lds
cmp
dec
xor
je
jg
pop
out
and
movsb
nop
mov
jns
lods
and
int
test
mov
mov
ja
push
dec
paddd
xchg
lret
popa
and
add
jno
sub
jge
xchg
jmp
loop
dec
pop
push
pop
rcrb
or
lret
mov
sar
sbb
pop
pop
out
push
dec
arpl
pop
jge
pop
cmc
rorb
sub
fs
pop
in
lods
into
popa
shrb
push
cltd
inc
jbe
cltd
mov
movsl
in
and
inc
mov
xor
icebp
loope
lock
int
in
es
inc
add
adc
cmp
xchg
push
sbb
mov
repnz
fwait
cmc
lods
mov
test
push
mov
cmpsb
divl
stos
ret
xchg
adc
subb
inc
stos
jge
mov
push
cli
popa
daa
dec
lock
mov
pop
jbe
jmp
fdiv
gs
sub
test
xor
int3
inc
dec
pop
sbb
or
push
in
stos
fisubrl
insb
leave
mov
mov
ljmp
push
adc
add
hlt
jnp
jp
jnp
pop
fimuls
js
mov
stc
cmp
or
inc
xor
idivb
rorl
es
mov
addr16
cmp
jne
sub
pop
mov
or
jl
push
data16
addr16
push
lahf
popf
xor
push
scas
and
xchg
jl
pop
xchg
add
rcll
test
pop
js
ret
scas
sbb
xor
inc
loopne
pop
loop
xor
cmp
inc
out
jae
sbb
jle
leave
sub
imul
fistps
mov
enter
xlat
je
aaa
push
sub
por
nop
pop
xlat
lahf
movsl
sti
jbe
jnp
pop
nop
sti
push
lahf
or
push
sahf
or
sub
jo
add
xor
and
movsl
sub
test
scas
leave
sbb
stc
andl
mov
inc
pop
inc
stos
stc
sub
push
dec
jl
stos
aas
pop
scas
inc
mov
xor
addr16
dec
jecxz
fsubrl
pop
pop
nop
inc
jnp
pop
iret
mov
enter
insl
and
cli
rcl
mov
popf
xchg
out
es
jbe
sub
and
cld
pop
adc
dec
or
ds
mov
inc
xchg
sub
movsb
push
and
cmp
adc
adc
aas
xchg
dec
lock
out
icebp
loope
or
out
iret
and
xor
cmp
neg
fidivl
pop
inc
inc
cmp
mov
adc
in
sub
in
fldcw
dec
pushf
jp
mov
or
cwtl
inc
or
cmp
scas
and
inc
push
lds
inc
sbb
push
ljmp
and
das
es
rclb
dec
gs
lret
push
add
push
ja
sub
sbb
cs
fidivl
inc
push
or
ss
mov
bound
in
dec
mov
daa
mov
std
xchg
cmovns
jmp
inc
and
repz
aas
movsl
adc
cltd
mov
nop
mov
aad
inc
aaa
sidtl
jne
ret
cmc
std
stc
div
adc
leave
sahf
lret
das
out
out
data16
test
jl
push
cmpl
add
cwtl
push
test
inc
rolb
orb
add
add
cmp
inc
add
fsts
jb
cltd
std
lahf
xchg
xchg
loop
push
mov
push
loope
jge
ffree
loop
dec
xchg
fcomi
js
movsl
int
sub
jno
cmp
fwait
in
in
xchg
pop
push
dec
les
jmp
inc
dec
inc
fdivs
xchg
out
int
pop
xchg
or
mov
std
mov
sub
adc
dec
pushf
int3
pop
or
and
out
dec
dec
add
jecxz
pop
jl
and
dec
fcom
sarl
mov
out
pop
mov
lea
sbb
push
mov
xor
sbb
mov
push
flds
cmpsb
pop
out
lods
pinsrw
movl
rolb
push
adc
clc
xor
repnz
cmp
enter
sahf
adc
jbe
js
dec
loope
jbe
xor
int3
sti
push
cs
fdivr
lock
mov
enter
xchg
push
pop
pop
mov
sub
sar
out
xchg
push
sar
fmull
inc
push
insb
addl
pop
lods
xchg
divb
dec
jl
cmp
popf
push
rcll
push
shl
pop
cmpsl
aas
pusha
or
icebp
fwait
lods
fwait
mov
shlb
ret
js
inc
loope
sarl
pop
aaa
lcall
popa
dec
pushf
out
out
aam
adc
and
push
sub
ret
mov
jle
jb
incb
push
mov
adcl
stos
adc
iret
jle
loope
lods
movsb
or
lds
gs
add
test
and
popf
mov
jge
and
inc
xor
sub
fs
scas
mov
sub
enter
pop
fistpl
push
inc
movsl
sub
lret
jle
push
jl
lret
pop
icebp
out
adc
sbb
push
js
mov
rolb
push
mov
push
pop
push
mov
ficompl
inc
sub
ds
rcr
mov
ret
xchg
and
add
cmp
jl
iret
movsb
jne
xor
sub
out
divl
cmpsl
push
or
icebp
jns
mov
push
shll
xchg
rcr
push
or
lods
jne
or
xchg
loope
aad
lahf
scas
popf
or
push
mov
mov
scas
mov
mov
mov
mov
rorb
mov
leave
mov
cltd
sub
cmp
dec
inc
movsl
and
aam
mov
cmc
add
imul
adc
ret
mov
push
mov
pop
movsb
jb
ret
std
popf
mov
sub
outsl
imul
push
push
pop
jbe
fidivrs
aaa
sub
call
cmpsl
mov
mov
mov
jle
xchg
xlat
jne
ficompl
je
cmp
xor
sbb
add
out
pusha
mov
out
aaa
into
divl
or
imul
sti
shlb
loope
imul
pop
movsl
addr16
pop
int
inc
in
xchg
loope
rcrl
sub
sub
rclb
je
xchg
add
out
and
sub
ret
or
setbe
lahf
ljmp
shlb
mov
sbb
push
mov
and
out
shl
push
xor
clc
xorb
lods
mov
jnp
dec
and
out
xor
jl
dec
repz
mov
pop
cwtl
mov
fnstcw
fdiv
xor
pop
push
out
and
lods
xchg
and
pop
xchg
ja
ss
cmpb
mov
jno
pusha
stos
pop
add
push
fmuls
ss
in
sbb
movsl
arpl
xchg
jmp
dec
out
mov
sbb
pop
repz
mov
popa
pusha
xlat
mov
sub
in
inc
dec
xlat
xor
xchg
jmp
sbb
pusha
mov
ljmp
dec
dec
mov
push
adc
loope
loope
imul
jbe
and
xor
mov
cmp
sbb
add
scas
jne
mov
movsb
xor
xchg
sub
stos
hlt
gs
in
mov
clc
stos
enter
data16
push
or
sbb
jb
jl
or
sbb
orb
mov
pop
or
and
das
push
pop
push
jmp
das
add
into
outsl
nop
pop
fsubl
xor
mov
ljmp
push
cmpsl
or
xchg
ja
lea
add
mov
decl
jg
imul
fwait
pop
mov
and
push
sti
push
fincstp
rolb
call
mov
sbb
sub
test
add
pop
repz
fs
or
pop
and
aas
or
sarb
imull
mov
add
xchg
push
push
in
sarb
mov
fidivl
out
lahf
clc
and
sarb
mov
testl
cmp
push
fnsave
mov
jmp
es
cmp
popf
movsl
sar
inc
call
xchg
outsl
test
test
xchg
fsub
ljmp
cmpsb
sbb
mov
or
nop
lret
jns
mov
lock
mov
shl
test
inc
and
fstpl
cmc
aaa
mov
dec
test
jl
mov
xchg
stc
mov
mov
pop
dec
or
das
and
scas
stos
jge
add
cmp
push
cmp
bound
ja
ds
mov
mov
cmpsl
xchg
sarb
cmp
rcr
hlt
es
subb
faddp
mov
xchg
xor
cmpsb
sbb
loope
dec
mov
decb
inc
loope
add
mov
adc
fidivl
mov
movsl
xchg
ljmp
js
jne
mul
ret
cmp
cld
bound
in
loope
cld
incl
test
pop
pop
xlat
out
mov
inc
mov
je
js
mov
push
fadds
outsl
adc
lret
leave
xchg
pop
pusha
cmp
lret
pop
out
daa
imul
imul
dec
idiv
xor
jbe
aaa
sti
insb
jle
mov
aaa
mov
pop
push
icebp
xor
shl
rcll
movsb
in
adc
aam
lret
popa
loop
push
dec
lcall
js
xchg
push
push
mov
cwtl
mov
popf
mov
mov
add
fsubl
out
shl
lock
fdivrl
sbb
lret
jmp
in
jp
jg
xchg
jp
pusha
arpl
ret
in
inc
and
adc
cmpsl
mull
or
add
mov
inc
jg
mov
aaa
pop
pop
fsubl
mov
sub
lea
adc
jb
mov
insl
adc
jmp
push
fsubr
xor
cmp
fnstenv
xchg
out
aaa
pop
xor
sub
scas
stos
cltd
fistl
pop
xchg
mov
add
aaa
xchg
xor
ss
sbb
add
xchg
ds
pop
in
xchg
out
sti
dec
int3
mov
mov
lods
sar
loop
push
mov
mov
or
jecxz
es
sti
lock
lret
cmp
push
stos
add
push
mov
and
sbb
test
shll
test
or
mov
xchg
mov
dec
lea
shlb
xchg
sahf
outsl
mov
js
clc
xchg
loop
jge
add
or
and
loopne
ficoms
cwtl
inc
inc
hlt
and
push
insl
push
arpl
ja
xchg
pusha
cmp
inc
or
adc
dec
sbb
jno
add
xchg
push
lret
push
jmp
adc
cltd
jnp
inc
pop
lahf
sub
adc
pop
addl
xchg
ss
addb
push
hlt
dec
popa
inc
stos
inc
cli
and
jl
out
pop
push
shlb
dec
adc
dec
mov
cmp
xlat
inc
loop
std
sub
add
dec
inc
arpl
adc
xor
lret
fs
and
dec
sub
int3
sub
in
lret
jmp
stos
sub
pushf
xchg
int3
and
xor
inc
mov
sub
pop
in
mov
sbb
pop
test
repnz
popf
fcmovnbe
pop
and
jg
scas
shl
clc
adc
arpl
mov
out
dec
xlat
xor
jp
cltd
outsl
in
in
les
jo
cmpsl
nop
mov
add
rol
mov
push
nop
sbb
mov
or
aas
test
mov
push
clc
pop
arpl
mov
rolb
sbbb
mov
sub
cmp
ret
add
aad
add
adc
jns
jns
and
dec
test
push
fnstsw
cmpsb
sarl
lret
repnz
scas
and
es
adc
aaa
mov
and
loop
or
test
mov
mov
popf
and
jmp
stos
add
fnsave
push
je
mov
dec
test
cltd
jno
in
scas
ds
in
or
orb
mov
push
push
out
lds
ljmp
aas
push
jbe
cwtl
xchg
push
or
jbe
repz
insl
dec
hlt
push
mov
jb
rcrl
jns
into
loope
enter
sub
mov
mov
and
fld
mov
stos
es
js
sbb
jbe
or
cmp
xchg
and
pop
mov
mov
and
mov
stos
jno
sbb
cmp
dec
lock
lret
mov
jle
sub
pop
loope
aaa
cmp
movsl
adc
push
xorl
lret
cmp
ljmp
xchg
push
mov
mov
in
lret
or
sbb
out
xchg
insb
dec
cmp
outsl
loop
je
push
inc
push
and
xor
lock
shl
mov
mov
adcb
mov
sub
into
add
scas
mov
jno
in
sub
and
add
xchg
mov
loope
mul
rcl
mov
add
pop
int
addr16
pop
in
cmp
jg
mov
mov
cmp
push
out
add
xor
sub
push
stos
xchg
les
rcll
leave
jmp
mov
jl
pusha
movsl
jge
add
xor
movsb
push
inc
gs
imul
outsb
jb
clc
mov
js
push
adc
mov
fwait
jecxz
push
cmpsl
sub
mov
rolb
testb
xchg
push
test
fs
fs
cmpsl
push
cld
adc
adc
mov
scas
idivb
jp
add
adc
xor
pop
or
shrb
mov
mov
movsb
mov
mov
and
pop
lret
js
rcr
test
hlt
les
cli
shrl
sbb
adc
rol
es
mov
cmc
in
js
pop
int
cmpsl
jge
int
and
icebp
mov
loope
out
pop
and
into
out
adc
add
and
cmp
pop
into
and
roll
pop
in
sbb
jg
lahf
push
adc
loop
scas
je
js
and
add
or
sbb
sbb
and
push
sbb
add
inc
mov
mov
sti
jbe
push
mov
addr16
cmpsb
out
call
push
sbb
add
pop
mov
lcall
das
int3
xlat
inc
insl
push
cli
in
pop
gs
call
add
pop
and
clc
loopne
mov
scas
inc
sub
push
mov
nop
dec
aaa
sub
adc
dec
xchg
sub
sti
pushf
loope
inc
jnp
outsb
xor
fcmovb
cmpsl
sub
data16
add
lret
push
test
jl
notb
outsb
jo
and
pop
adc
sbb
xchg
sbb
push
mov
mov
test
notl
jmp
lcall
mov
jge
divb
dec
xlat
xor
loopne
sbb
je
ljmp
repz
adc
mov
frstor
push
je
mov
in
mov
lock
pop
pusha
js
les
adc
sbb
lcall
test
jge
insl
imul
sub
or
stc
in
jmp
mov
cltd
lea
pop
pop
dec
dec
cmp
sbb
jmp
sub
cltd
dec
mov
insl
imul
sbb
or
stc
mov
xchg
in
leave
mov
cltd
or
ret
negl
ds
mov
loop
repnz
mov
mov
daa
cwtl
in
pop
lock
rclb
and
arpl
adc
in
push
and
mov
mov
xchg
lock
shlb
inc
jae
insl
add
jo
pusha
xor
and
mov
mov
mov
fwait
loopne
shlb
and
sbb
adc
je
mov
call
add
fs
aad
mov
test
mov
jmp
pop
adc
mov
pop
jg
jae
pop
ss
ss
push
adc
mov
add
adc
aas
mov
movsl
in
push
jge
xor
nop
arpl
int
fisttps
out
std
adc
mov
shlb
movl
fsubr
inc
dec
inc
out
pushf
push
in
sbb
lahf
mov
push
dec
pop
jle
add
icebp
fwait
cmc
inc
push
inc
push
int3
test
out
xchg
shr
add
and
negb
insb
test
and
xor
push
gs
cmpsl
xor
sbb
jecxz
test
xchg
loopne
sarb
and
jp
or
pusha
sub
sub
stc
xchg
jmp
sahf
mov
push
add
inc
adc
adc
dec
add
xchg
repnz
mov
lock
es
jae
and
adc
inc
xor
scas
repz
clc
mov
fcomi
and
shlb
and
arpl
adc
pusha
xor
inc
shll
jecxz
xchg
lock
shlb
and
arpl
adc
pusha
xor
inc
shll
nop
cmp
pop
mov
pushw
jb
add
mov
call
es
insb
out
mov
test
and
xchg
pop
inc
mov
push
fdivl
daa
xchg
mov
xor
shrb
int
je
xlat
pop
ds
frstor
fcomps
mov
aas
pop
push
subl
cli
mov
push
push
iret
pop
mov
fwait
test
add
sbb
inc
sarl
clc
xchg
pop
pop
int3
stos
bnd
adc
enter
fdivl
inc
sub
sarl
aaa
mov
sbb
iret
in
cmp
or
push
imul
subb
cltd
sti
xor
out
out
ljmp
adc
outsl
leave
rol
nop
mov
fwait
xchg
stos
sti
repz
mov
cmp
jbe
jno
adc
xor
icebp
xchg
fisttps
aaa
js
sub
ds
nop
dec
or
mov
jns
xchg
fisubrs
cmpsl
dec
rep
xor
jnp
je
mov
testl
add
mov
dec
inc
scas
cmpsl
mov
mov
stos
aas
push
cltd
jnp
hlt
test
push
ret
jb
out
scas
repz
lods
loope
or
dec
cmp
les
pop
lcall
jnp
cmp
sub
int3
mov
pusha
mov
push
or
push
scas
sarb
or
or
jmp
outsb
inc
cmp
mov
inc
outsl
inc
jnp
dec
addr16
jecxz
inc
fidivs
testl
inc
mov
cmpsl
in
pop
jg
jge
or
les
mov
lahf
cli
inc
ss
sbb
fistps
shl
rol
clc
shl
adc
jbe
ja
jl
fisubrs
or
add
dec
ror
jbe
shll
add
mov
stos
push
mov
xchg
or
push
jns
mov
mov
daa
stos
jnp
cmc
mov
mov
gs
pop
push
mov
mov
hlt
in
cmp
xor
lea
lds
jnp
imul
aam
rcll
cwtl
outsl
mov
mov
enter
pop
rcll
popa
or
fistl
into
or
sub
sub
insl
xchg
out
push
xchg
loop
in
xchg
js
out
adc
gs
push
rorl
jg
jne
xlat
or
dec
out
pusha
jnp
imull
sbb
mov
ret
movsl
jge
dec
push
push
outsb
sub
rcll
xchg
jno
jl
mov
nop
and
mov
inc
sbb
cmp
jle
jp
push
pop
dec
pop
jo
dec
fstpt
lret
sbb
shll
lods
lods
cmp
pop
std
rorl
dec
cmp
sahf
sub
cs
jge
dec
inc
lock
shll
fadd
and
test
insb
addr16
arpl
int
or
inc
pop
sub
push
jge
inc
sti
xchg
pop
push
scas
sub
sahf
call
sbb
cmp
addr16
mov
push
lret
xor
push
mov
in
mov
mov
stos
loope
loopne
sbb
xchg
dec
xor
jge
filds
mov
dec
add
pop
hlt
mov
mov
andl
sbb
cmp
jg
int
fldenv
inc
xchg
movsl
xchg
aas
add
pop
test
xchg
mov
push
jp
sbb
lret
enter
loope
std
cltd
mov
popa
fdivl
jb
add
jp
stos
add
cmp
or
inc
mov
psrld
out
test
dec
and
xor
push
pop
sti
mov
jl
and
test
das
fiaddl
xor
mov
adcl
push
jno
jge
mov
and
push
pop
sbb
hlt
push
addb
adc
inc
pop
push
add
sub
test
shl
stos
push
mov
subb
dec
jle
lods
or
iret
nop
add
lcall
cltd
mov
and
sbbb
je
lods
ljmp
inc
sub
xor
lea
outsl
add
lock
push
sub
inc
adc
xchg
jg
dec
jge
out
movsb
inc
les
push
push
pop
xorl
stos
sub
popf
dec
adc
push
dec
mov
lods
test
ret
jmp
push
outsl
lock
add
jp
mov
vpsllw
mov
aam
jp
xor
cmpsb
sub
lcall
fcoms
test
mov
lods
xor
mov
into
lods
mov
push
repnz
push
imul
jl
iret
sbb
pop
lret
sarl
adc
fiaddl
bound
mov
or
mov
subl
call
lock
jmp
out
xor
xchg
pop
cmp
jle
jmp
cmp
xlat
dec
arpl
sub
lret
hlt
add
xor
mov
cmp
inc
jmp
lret
jne
mov
mov
jmp
ss
mov
and
push
int
popf
add
mov
fdivr
and
inc
out
call
dec
mov
inc
xlat
notl
xchg
aaa
ja
jle
ja
out
stos
imul
lds
dec
xor
dec
repz
cld
lods
mov
aaa
aad
jle
int
icebp
inc
fwait
inc
in
insb
xlat
hlt
in
xchg
lods
jmp
xor
lods
data16
fdivl
dec
gs
dec
in
dec
jae
aas
push
test
mov
lds
outsb
rorl
dec
int3
sub
hlt
push
adc
inc
out
mov
andb
insl
je
out
jns
rclb
nop
orb
stc
or
call
pop
cmp
sbb
js
dec
test
je
rclb
hlt
stos
sbb
popa
inc
xlat
mov
les
call
fadd
aaa
fcomip
ds
lods
adc
sbb
movsl
or
hlt
mov
sbb
dec
das
jns
or
push
in
lahf
and
cwtl
sahf
test
xchg
std
xor
jmp
dec
sahf
cmpsl
sub
jae
ret
inc
add
ret
mov
inc
loop
sarb
mov
lds
popa
loop
insb
push
mov
dec
mov
ss
test
jg
adc
cmp
xlat
lods
jge
es
lods
pop
mov
test
inc
stc
cmp
mov
jmp
pop
mov
sti
call
mov
push
pop
lea
cmp
daa
movsl
fistps
hlt
dec
dec
dec
rclb
loope
xlat
xchg
nop
scas
shlb
leave
vmovq
mov
test
jl
pusha
mov
js
cmc
xor
dec
shlb
lret
adc
negb
movsb
out
or
xchg
pop
cmpsb
popf
lods
loop
push
fimull
jo
pop
xor
fs
jg
and
jl
shlb
movb
inc
stc
fstpl
dec
pop
psllq
pop
push
and
repz
data16
pushf
mov
enter
xor
insl
ss
test
int3
push
out
mov
push
inc
jns
aam
ret
inc
outsl
int3
mov
and
jge
dec
rorb
fldt
imul
ss
xchg
fsubrs
adc
pop
mov
adc
outsb
sub
push
push
adc
and
movsb
adc
or
push
sub
mov
dec
ret
xchg
mov
pusha
jae
jo
ficompl
repnz
mov
mov
push
insl
sbb
and
pop
push
int
sub
xchg
testb
lods
addr16
aaa
fs
add
xchg
jmp
xchg
adc
iret
jb
adc
lods
jne
loopw
popa
out
outsb
adc
stc
ret
xchg
pop
fsubl
fldl
adc
adc
add
or
outsl
cmc
cmpsl
cmpsb
jle
fcmovb
mov
adc
dec
xchg
adc
ss
mov
mov
loop
dec
mov
or
jae
pop
leave
fwait
ret
and
scas
jbe
add
popa
and
or
push
aas
call
mov
mov
add
pop
lods
xchg
mov
gs
shll
jecxz
push
fistps
daa
negl
call
fwait
cmp
or
mov
subb
jle
inc
popa
sub
cmpsl
xchg
mov
xchg
pusha
mov
ja
mov
test
jl
jge
push
fcmovnbe
and
jge
stos
outsl
cmp
sub
push
cmp
out
pushf
test
movsl
jno
sub
mov
xor
repz
mov
xchg
pop
rclb
or
inc
pop
cmp
push
mov
mov
std
mov
int3
mov
out
ret
pop
ss
xor
sub
or
lahf
out
out
inc
sar
dec
sbb
int
fsubrs
arpl
or
cli
dec
in
pop
jecxz
pop
lods
dec
xor
fidivl
xchg
jl
js
push
movsb
mov
pop
xor
or
sbb
push
js
bound
out
cs
push
inc
mov
dec
stos
ds
and
and
cmpl
jbe
les
jp
mov
xor
xor
popa
pusha
jno
cmp
push
and
and
ret
out
xchg
inc
xchg
testl
cmp
stc
aam
add
add
push
aas
dec
repnz
in
addr16
clc
push
jns
es
adc
scas
xchg
out
stc
les
bound
das
in
lahf
inc
add
cli
add
dec
jb
loop
sar
xchg
rcrl
leave
mov
sbb
cmp
outsl
and
fnstenv
and
lahf
adc
add
dec
loop
add
nop
cmpl
xchg
dec
punpckhbw
mov
sbb
mov
out
test
rorl
xor
mov
sub
xchg
push
xor
lea
test
xor
out
aad
stos
lcall
xchg
jae
lods
mov
push
xor
nop
and
xchg
sbb
negb
fldt
mov
pop
jae
sti
fisubl
adc
fs
jle
sti
push
lds
dec
mov
dec
ljmp
inc
bnd
xor
or
sub
cmpsl
pop
cmp
jecxz
inc
sbb
mov
std
mov
inc
push
dec
inc
fildl
scas
mov
xchg
push
mov
inc
xchg
or
cltd
adc
cs
fxam
inc
mov
xchg
out
jnp
push
sbb
loopne
imul
aaa
jge
cmpsl
inc
xor
push
inc
pop
pop
inc
push
test
jge
xchg
scas
pop
add
mov
aaa
adc
dec
inc
icebp
mov
jl
jb
jmp
and
pop
inc
cmp
sub
daa
into
and
xchg
mov
aad
jae
cmp
xchg
scas
and
mov
mov
cmp
ret
sahf
cmp
sbb
dec
rcll
or
fwait
adc
sub
push
repz
mov
adc
je
jp
repnz
mov
jmp
sbb
incl
push
andl
mov
adc
push
ja
jae
or
adc
lods
dec
cmp
push
cld
sub
rcrb
mov
test
cmp
fistps
scas
and
imul
in
sub
scas
mov
scas
mov
clc
mov
mov
clc
xor
cmp
psrld
xor
mov
jg
dec
push
dec
dec
fsubr
add
mov
push
mov
lahf
pop
mov
cmp
mov
lret
mov
ret
leave
andb
enter
mov
adc
jp
data16
pop
out
jge
leave
nop
xchg
sub
cmp
lcall
adc
dec
cli
or
mov
adc
fdivs
aad
sub
jg
cwtl
out
aad
cwtl
aaa
cmp
call
xor
movsb
mov
negl
pop
xchg
cmc
shrd
aaa
scas
inc
pusha
stos
dec
jmp
cmpsl
and
out
in
jnp
iret
js
icebp
fiadds
lcall
mov
mov
and
push
or
pop
stos
fidivrs
jmp
leave
sbb
js
xlat
inc
sbb
cs
repz
out
sub
adcb
push
ret
xchg
jle
pop
mov
push
inc
and
inc
ljmp
scas
xchg
test
adc
ljmp
ja
int3
cmp
mov
jmp
jl
divb
test
cwtl
lods
leave
outsl
xchg
data16
xchg
cwtl
jo
mov
dec
mov
sbb
mov
xlat
sti
adc
mov
jns
inc
ja
xchg
icebp
aas
fdivp
cmp
fsubrs
xchg
mov
mov
lret
cmp
mov
jo
mov
xor
lods
xorw
xor
fstl
cs
xchg
sbb
or
pop
inc
inc
add
stc
xor
and
imul
sub
int
adc
es
xchg
add
cli
inc
ljmp
mov
fwait
sub
cltd
mov
xor
cld
inc
fucomp
and
jle
fptan
xor
cmp
lods
fcomps
mov
sbb
push
sbb
stc
popa
popa
pop
inc
dec
rcrl
and
aam
pop
inc
int3
fwait
pop
dec
shrb
inc
movsb
popf
dec
or
repnz
fstps
lods
mov
popf
inc
jnp
outsl
enter
sub
cmpsb
push
sbbb
test
and
in
out
in
je
cmpsl
lret
dec
in
xchg
add
mov
xor
enter
sub
ss
inc
cmc
or
lret
push
mov
jle
mov
std
aaa
ficompl
pusha
dec
data16
xor
xlat
sti
out
pop
sbb
sarb
or
loop
cmc
dec
pop
mov
xor
outsl
xor
test
ficoms
mov
fidivrs
sbb
int
fs
out
mov
imul
xor
mov
ljmp
lds
addr16
scas
push
mov
ja
dec
dec
mov
outsl
mov
imul
enter
lods
in
dec
push
dec
sahf
jns
int3
dec
jne
cmp
mov
shll
xchg
cmp
nop
and
jmp
or
xchg
jg
push
pop
and
cltd
mov
inc
jl
andl
or
cmp
jmp
movsb
loopne
jae
and
stos
xlat
dec
js
aaa
add
cmc
dec
adc
push
push
inc
aad
adcl
dec
xchg
xor
xor
mov
mov
subl
inc
aaa
and
cmp
xchg
jl
mov
add
add
cmp
sahf
int
fcom
loopne
mov
jnp
addr16
add
mov
xchg
popa
out
sub
xchg
idiv
cmovnp
fst
xchg
outsl
dec
pop
sub
sub
mov
cld
pop
or
fstpt
add
testb
jnp
ret
pop
inc
add
push
pushf
push
out
xorb
xchg
fsubrs
jecxz
scas
ret
dec
xchg
mov
stos
sub
xor
inc
addr16
xor
adc
in
mov
loopne
and
xchg
mov
movsb
push
cmp
aaa
ds
movsb
adc
mov
sbb
leave
mov
sbbb
mov
jnp
hlt
adc
mov
xor
gs
mov
inc
cmp
repnz
fmull
cmp
movsl
loop
fprem
jo
push
sub
xor
movsb
in
sbb
out
or
mov
out
popa
jl
add
xchg
in
outsl
fistpll
push
add
fiadds
fnstcw
iret
out
sti
test
cmp
aad
test
es
out
jge
lods
fsubl
add
jbe
pop
fnsave
pop
aaa
mov
aad
stos
xlat
rol
js
adc
xchg
fcomp
lret
jp
cmp
jecxz
adc
xchg
rcll
xor
adc
cmc
or
jle
dec
xor
into
mov
push
or
movsl
clc
mov
loop
add
add
mov
mov
dec
push
push
clc
gs
inc
push
ljmp
xor
pusha
dec
adc
push
imul
add
arpl
cltd
or
push
sbb
and
cmpsl
pop
cs
adc
adc
inc
ss
icebp
mov
rolb
outsl
sahf
cmp
mov
lcall
xchg
adc
popa
pop
ret
fwait
ret
movsl
inc
into
movsl
pop
cmpsb
inc
mov
jg
leave
dec
jb
jb
and
mov
pop
and
dec
add
adcb
add
inc
dec
sti
ret
mov
test
std
fists
add
push
scas
pop
sbb
adc
shll
cltd
xor
mov
or
pop
and
orb
mov
inc
dec
xchg
inc
out
xchg
push
push
mov
xor
rol
int
les
xlat
adc
ror
cmp
insl
test
mov
or
adc
scas
dec
mov
stc
xchg
repz
adc
inc
jp
mov
xchg
in
lahf
daa
lds
rcrb
jmp
inc
cs
xor
jo
fmul
mov
cmpl
sbb
push
mov
les
or
fdivrp
hlt
jnp
sub
jl
pop
psraw
ret
adc
mov
cwtl
push
addb
clc
adc
mov
mov
inc
test
jmp
xchg
ret
jl
je
lret
xchg
xor
mov
out
mov
fisubrl
jge
ret
adc
jbe
fisttpll
jae
push
pop
mov
sbb
lods
leave
or
outsb
out
cmp
mov
mov
outsb
sub
mov
push
test
into
sahf
loopne
repnz
faddp
arpl
sbb
mov
imul
das
cmp
gs
in
adc
mov
dec
stos
lahf
test
push
xchg
cmp
sub
ja
aam
jle
int
cmp
push
in
loope
pop
jge
cmp
xchg
jmp
dec
mov
ljmp
xor
cs
xchg
adcb
insb
xor
xchg
cs
pop
sub
gs
insb
nopl
ret
sar
and
mov
jno
lods
mov
inc
and
xor
enter
adc
movsl
jmp
test
subw
repz
jmp
test
adc
insl
adc
out
js
jecxz
add
ss
pushf
lock
pusha
inc
push
mov
loop
jle
notl
add
add
dec
xchg
movsb
and
scas
inc
xchg
frstor
cwtl
jg
mov
enter
insl
shl
test
mov
cli
xchg
faddl
fsts
push
pop
jb
roll
add
in
xor
push
scas
xor
dec
lock
jb
lods
les
sub
cmp
adc
hlt
test
in
xor
iret
push
and
mov
add
sbb
add
shll
mov
dec
inc
insb
iret
icebp
sub
lcall
or
cwtl
fstps
pshufw
aas
ror
dec
mov
cwtl
cmp
popf
andl
cmp
push
addr16
in
xor
adc
xor
jns
jne
inc
pop
inc
sub
sub
inc
fidivs
mov
jmp
out
rcrb
movsb
hlt
push
cli
js
mov
outsl
aaa
pusha
inc
mov
cs
sub
push
sbb
jae
in
mov
dec
sti
add
ficoms
pop
pop
inc
xchg
sbb
addr16
repnz
sar
data16
add
daa
sub
movsb
jle
mov
push
lret
add
fldcw
pop
cmp
add
adc
je
popa
aam
stc
push
mov
ret
dec
or
xor
mov
adc
jle
fiadds
pusha
out
inc
cltd
and
std
filds
lret
bound
jl
lret
dec
inc
mov
add
or
cmp
fisubl
pop
dec
xor
jno
add
incl
fs
testb
inc
sbb
das
xchg
mov
mov
ret
mov
fcmovb
pop
pop
ret
js
push
pop
adc
xor
inc
mov
mov
pop
sbb
xor
jg
je
frstor
mov
pop
sahf
test
mov
jmp
pushl
lcall
and
inc
inc
mov
mov
mov
repnz
pop
dec
xchg
pop
pop
xchg
add
in
mov
mov
cmp
cmp
xor
cmp
dec
in
cltd
ja
inc
xchg
std
vxorps
cmpsl
loopne
sti
shlb
and
mov
stos
and
mov
fcmovbe
outsl
lea
testl
sbb
lds
sbb
inc
iret
sub
add
jne
inc
xor
push
mov
jno
xchg
addr16
pop
addl
gs
jae
pop
xlat
mov
add
out
xchg
std
jne
stos
cs
gs
sbb
aam
negb
pop
hlt
mov
cmpsb
jno
xchg
dec
adc
cmp
adc
insb
cmp
stos
add
mov
jns
out
or
mov
fisubl
xor
lea
outsl
inc
popa
inc
mov
in
iret
fs
out
daa
divl
mov
aaa
cmpsb
and
mov
add
out
jp
mov
ret
push
push
sub
mov
push
mov
out
insb
mov
xchg
lock
shlb
and
arpl
adc
pusha
xor
inc
shll
jecxz
xchg
lock
shlb
and
arpl
adc
pusha
xor
inc
shll
jecxz
xchg
lock
mov
and
arpl
adc
pusha
xor
inc
shll
jecxz
xchg
lock
shlb
shrb
ja
clc
mov
ret
xchg
mov
xchg
mov
repz
add
adc
and
xor
or
js
push
xchg
mov
enter
call
adc
xor
dec
push
js
push
xchg
mov
ret
rcl
loopne
push
sbb
pop
xor
add
jae
orl
rolb
adc
jecxz
lock
icebp
and
fs
mov
jo
addr16
mov
cmp
sub
out
and
sarl
and
fcoms
mov
push
push
xchg
xchg
leave
pop
ljmp
in
push
inc
or
jb
jl
xchg
pop
mov
ffree
adc
call
push
cmp
je
fstl
sbb
cmp
ja
loope
fmull
ret
or
sbb
movsl
adc
adc
mov
cmc
bound
imul
and
rcrb
sub
jbe
cld
testl
cwtl
mov
push
xchg
mov
ret
rcl
clc
jecxz
repz
adc
and
xor
inc
inc
push
push
js
jno
jmp
in
inc
fucom
int3
cmc
mov
xchg
jp
dec
inc
pop
xor
sub
sbb
ret
frstor
cmpsb
std
xchg
mov
jg
jne
pop
cmp
push
push
out
xlat
test
mov
jecxz
repz
or
cmp
sub
pop
inc
dec
push
js
push
xchg
mov
ret
enter
call
adc
and
xor
dec
push
js
push
xchg
push
shlb
in
inc
mov
lea
sbb
js
jne
insl
clc
add
lds
xchg
xor
mov
inc
xchg
xor
jbe
add
jo
push
pusha
lock
jecxz
jns
es
sbb
lea
sarl
int3
fwait
push
mov
cs
pushf
ja
adc
or
aam
sub
pop
pop
xchg
and
gs
xchg
call
dec
jns
daa
mov
cmp
enter
lahf
fldln2
and
jns
mov
mov
sbb
sub
xor
cs
dec
call
mov
dec
pusha
repnz
dec
out
add
mov
arpl
fstpl
ss
lods
xchg
or
out
mov
push
sbbl
ror
push
pop
adc
push
cmp
push
cmp
jno
inc
or
mov
mov
mov
dec
lea
inc
push
or
arpl
push
sarb
in
cld
cld
aam
cltd
push
pop
pusha
sbb
dec
pop
mov
inc
jp
fsub
jo
pop
int
pop
outsb
cmp
fwait
mov
push
sti
decb
mov
fmuls
out
inc
pop
jle
lods
repz
push
or
cmc
pop
add
and
mov
ds
lds
daa
adc
push
adc
es
mov
pop
mov
sbb
mov
jge
jp
xchg
das
mov
addr16
or
add
outsb
push
in
loop
test
test
aad
inc
xchg
jmp
adc
dec
in
sub
addl
jmp
arpl
jl
pushf
pusha
shrl
add
inc
cld
daa
cmp
cmp
lret
sbb
aas
push
sti
mov
jmp
scas
inc
leave
mov
movsb
jo
sahf
inc
jp
dec
sbb
xchg
jmp
bound
ljmp
int3
icebp
dec
or
fistpl
mov
fsubp
hlt
jns
and
and
stos
test
or
lock
out
sub
fxch
mov
push
notl
push
jne
adc
mov
and
ljmp
movsb
adc
pop
test
mov
or
sub
add
push
scas
icebp
mov
xchg
icebp
pop
pop
xchg
and
fsubrl
mov
shlb
mov
jnp
add
pop
lods
ffree
pop
dec
mov
stc
jecxz
dec
lcall
leave
xchg
cld
push
jge
in
sbb
inc
jo
xchg
cmp
inc
insb
and
popf
jge
push
cmp
mov
xchg
int
lret
sub
cli
mov
push
and
lea
pop
rcrl
mov
pushf
xchg
mov
rcrw
aaa
mov
addl
mov
add
into
sub
push
mov
jl
or
out
lods
nop
sub
lcall
sub
fsubs
lods
and
scas
dec
adc
adc
dec
outsb
mov
into
mov
mov
cmp
nop
out
in
adc
das
mov
cmp
cmc
push
mov
cs
xor
jne
pop
outsb
loop
clc
scas
nop
popf
pop
mov
idivb
sti
dec
loop
imul
add
sub
mov
hlt
pop
cmp
fwait
gs
fisttps
pop
les
arpl
sbb
xor
push
stos
mov
pop
in
call
lea
push
fcoml
inc
or
lods
cmc
fdivl
idiv
pop
gs
mov
or
cmp
xor
neg
daa
sub
ds
mov
roll
and
test
leave
out
lahf
cmp
ja
jnp
mov
lock
test
and
fistpll
in
dec
outsl
jnp
jnp
adcl
int
dec
add
jae
hlt
push
sti
pop
out
je
popa
inc
mov
sbb
cmc
mov
mov
sbb
sti
call
roll
jae
push
mov
add
je
icebp
jb
push
sti
test
dec
push
out
push
cmp
mov
cmp
aam
push
inc
fnsave
out
and
pop
and
jns
adc
insb
pushf
call
popa
lahf
cmpsl
fnstenv
sub
mov
mov
sbb
xor
inc
pop
sbb
jae
push
jae
stos
or
xor
repz
cmp
aad
or
lret
sti
and
xchg
stc
sub
mov
adc
mov
fbld
imul
xor
push
inc
pop
pop
and
int
pop
mov
dec
rol
cld
repnz
jmp
adcl
pop
mov
xchg
pushf
mov
ss
mov
je
ljmp
adc
fldl
ret
js
lahf
jmp
fisttpl
aas
insb
add
push
pop
adc
aaa
mov
in
xchg
fmull
pushaw
mull
lret
mov
icebp
pop
ret
test
pop
inc
mov
or
jge
add
or
test
dec
test
cmp
add
push
xchg
in
mov
mov
dec
cmp
fcoms
imul
jo
std
enter
and
js
ret
push
mov
mov
imul
sbb
pop
or
xor
outsb
pop
aas
xor
xor
fidivs
out
js
dec
enter
xor
inc
and
insb
aad
dec
nop
jle
divb
jno
enter
jnp
ss
jmp
fwait
dec
fisttpl
into
or
aas
sbb
xlat
mov
xchg
or
shll
mov
xchg
and
mov
sbb
or
fld
xlat
sbb
je
pop
fdivl
test
fnstcw
int
pop
dec
xchg
lcall
insl
jbe
xchg
push
mov
jmp
inc
push
rcrl
sub
outsb
mov
rolb
push
enter
std
lock
mov
sub
insb
je
and
gs
mov
mov
enter
dec
popa
inc
test
xor
int
xchg
cmp
add
shlb
outsb
inc
mov
ljmp
sbb
push
inc
mov
test
filds
fnstenv
xor
mov
gs
int
jns
or
xchg
ret
push
inc
mov
xchg
mov
adc
ficompl
jnp
roll
dec
add
fbld
push
jne
and
pop
cmp
dec
mov
insb
push
mov
jns
sub
xchg
lret
lahf
mull
test
jecxz
mov
sub
fsubrs
les
nop
mov
mov
insl
mov
pop
sbb
mov
sub
or
jo
sub
sti
inc
inc
gs
dec
cmpsb
mov
inc
xchg
imul
and
lock
js
adc
or
les
sub
js
xor
lcall
lret
test
xor
popf
xchg
imul
and
pop
loopne
sbb
xlat
push
or
xchg
mov
adc
jnp
push
add
or
outsl
outsb
push
cmp
and
cli
mov
jbe
stc
dec
cmp
add
sti
fwait
push
mov
add
daa
out
mov
outsb
xchg
popa
jecxz
outsl
cmp
push
jecxz
adc
xchg
rcrl
xchg
jg
xchg
faddl
das
xchg
ficompl
ja
orb
mov
or
sbb
sbb
das
push
push
xchg
pop
sub
sub
rorl
push
cli
mov
in
int3
fstl
sub
mov
jecxz
or
roll
sahf
xchg
and
insl
hlt
xchg
mov
sub
and
lods
sti
sbb
push
popf
cmpsl
ret
jno
pushf
push
push
in
pxor
mov
pop
aas
or
inc
imull
imul
xchg
add
and
mov
fcomps
fs
lock
mov
fsub
in
or
cmc
jge
jg
scas
out
xchg
rorb
pshufw
stos
fidivrl
sbb
lea
aas
loope
xor
test
test
ljmp
lods
xchg
or
shr
cmpsl
push
out
daa
jge
jg
les
jae
jg
out
sub
mov
dec
mov
pop
fistpll
xor
cmp
sbb
std
stc
jb
cmp
xor
jne
notb
and
pop
pop
lret
push
out
xchg
lds
out
pop
cmpsb
pop
xchg
or
imul
nop
and
nop
call
aad
scas
add
fcmovne
jp
pusha
or
rorl
sub
fldenv
dec
gs
jle
pop
mov
mov
and
test
mov
js
daa
sub
jb
idiv
push
mov
dec
sbb
or
pop
sbb
fdivr
dec
inc
test
and
repz
sbb
adc
xchg
adc
pushf
jne
xor
pop
mov
mov
and
stos
fs
test
mov
bound
icebp
hlt
inc
insb
lods
sub
mov
mov
into
pop
decb
in
inc
cmp
ja
lahf
fdivp
call
mov
out
les
dec
test
adc
imul
adc
in
test
sub
mov
jp
pop
adc
cwtl
dec
pop
stos
fisubrs
repz
imul
fistl
xchg
icebp
dec
int
jb
or
ds
mov
push
and
and
inc
dec
add
enter
push
sbb
mov
lahf
stos
mov
inc
xchg
dec
xor
out
je
imul
push
sub
dec
add
mov
cmp
les
or
mov
sub
outsl
sub
ljmp
call
jb
in
lds
ja
pop
jnp
je
aam
inc
cli
pop
push
jge
push
inc
jno
dec
inc
gs
rcl
stos
arpl
sub
xchg
fisubl
dec
repz
repz
jge
jl
add
out
dec
insb
jl
xlat
adc
xchg
loope,pn
test
mov
lock
add
into
dec
dec
mov
xchg
jo
push
fs
or
push
out
xor
not
fsubp
imul
jbe
adc
push
out
cmp
aaa
insl
push
jmp
mov
push
dec
aad
adc
int
sub
inc
call
sub
aad
adc
outsb
push
mov
js
scas
mov
push
sbb
pop
push
xor
mov
dec
out
ret
fsub
icebp
decl
int
dec
insb
fildl
sub
push
and
cmp
fisubrl
ror
sbb
fldl
pop
loop
sub
dec
sti
ss
das
jg
cmc
jo
adc
inc
andl
xchg
movb
cltd
fsubrs
in
sbb
test
adc
ja
xor
dec
inc
push
dec
subb
fwait
or
mov
fdivl
lea
mov
mov
and
in
xchg
je
push
pop
cmp
inc
adc
je
into
mov
enter
jae
mov
and
mov
sti
mul
leave
int
xor
imul
xor
sub
mov
or
cmp
fs
repnz
enter
jl
test
shll
mov
add
mov
xrelease
push
jle
sti
inc
dec
clc
test
or
lea
add
stc
push
dec
inc
jp
daa
jbe
xchg
sbb
pop
loope
push
and
popf
add
inc
popa
xchg
dec
rolb
fnstenv
mov
pop
xlat
int3
cltd
iret
mov
insl
or
xchg
pop
stos
inc
push
cmp
push
push
mov
out
imul
cmp
and
sbb
adc
xchg
int3
jg
mov
adc
mov
inc
xchg
rorl
test
imul
jno
mov
jbe
pop
mov
cmpsl
mov
and
popf
fildl
dec
int3
cs
mov
mov
mov
loope
pop
xor
sbbb
cmp
adc
dec
shll
pop
lahf
xchg
fistpl
shll
push
mov
outsl
fwait
mov
jge
xlat
popf
icebp
mov
shll
into
pop
inc
mov
sahf
stc
pop
dec
sbb
lock
test
adc
icebp
rcrl
imul
and
push
inc
xchg
dec
jg
mov
rcll
aad
aam
sarb
daa
fwait
adc
cmp
dec
popa
int
jmp
jo
ds
inc
pop
xchg
in
fidivl
int3
push
lahf
std
out
mov
jae
cmc
es
sub
push
imul
push
push
mov
enter
aam
js
xchg
stos
clc
test
leave
icebp
push
mov
loope
ret
pop
or
inc
xchg
lock
and
jmp
inc
movsl
testb
mov
dec
mov
mov
push
mov
mov
icebp
add
push
cmpl
call
sbb
clc
push
mov
xchg
enter
mov
sbb
adc
fcmovu
lods
popf
sarb
sbb
icebp
mov
mov
or
jmp
cmpsb
fcomps
movsl
sub
push
jmp
mov
xchg
jb
mov
cli
push
pop
sbb
mov
stos
jl
mov
outsb
cmp
jbe
mov
mov
jbe
pop
jae
das
xlat
into
jge
jne
shlb
xchg
cmp
inc
lods
cmpsl
das
into
jecxz
les
stos
ret
jns
push
sub
adc
daa
stos
adc
gs
sahf
aam
or
icebp
sbb
xorb
and
imul
cmc
or
mov
in
je
pop
adc
mov
push
push
cld
cs
add
in
jb
push
ja
pop
sub
rolb
outsb
dec
mov
mov
push
sub
inc
xor
sbb
fidivl
lret
outsl
cmp
cmp
nop
add
sub
add
push
into
ljmp
cli
cmp
jne
idivl
sbb
xchg
dec
cld
stos
or
bound
hlt
jg
mov
pusha
push
and
or
pop
cmp
cmp
js
xchg
in
lods
sbb
pop
mov
ret
loop
jae
push
mov
cwtl
sub
xor
pusha
lret
mov
adc
adcl
adc
inc
mov
mov
jecxz
lods
mov
popl
and
add
je
push
jne
jno
fsubs
nop
ret
adc
sbb
ret
scas
rcrb
xchg
push
add
mov
lahf
sub
fmuls
mov
ret
dec
cld
fwait
sarb
push
mov
maxps
lds
mov
jae
mov
cwtl
and
jbe
xor
jle
pop
es
in
xor
xchg
movsb
lea
aam
les
dec
test
mov
mov
enter
cmc
jno
aaa
xor
jl
or
and
ds
inc
data16
add
and
cwtl
xor
in
mov
mov
xor
push
js
mov
push
int3
lret
push
test
ss
sub
loope
les
mov
inc
scas
jbe
push
push
mov
dec
push
inc
in
enter
sbb
dec
add
pop
or
pop
mov
mov
adc
lods
inc
cmp
fwait
imul
fstp
dec
xchg
mov
xchg
adc
or
mov
loopne
jb
pop
jp
stos
cmpsl
pop
pop
mov
fimuls
add
scas
in
jae
clc
inc
aad
aad
nop
cmc
sarb
pop
aaa
je
adc
push
pop
mov
or
mov
mov
jns
adc
lods
int3
sar
or
pop
addr16
subb
or
movsl
adc
fistl
loop
jo
adc
aaa
gs
clc
or
sub
std
lods
sbb
subb
xchg
jp
lock
sub
cmp
in
lea
ficoml
daa
data16
mov
mov
pop
add
stc
inc
mov
rol
pop
loop
mov
cmc
pop
xchg
mov
pop
out
inc
xor
aad
jecxz
push
push
push
jmp
adc
and
and
loop
clc
add
repz
cld
clc
js
mov
pop
mov
rclb
rcrl
ror
test
cltd
inc
cmp
inc
sbb
dec
mov
pop
sbb
dec
in
idivl
jg
data16
aaa
push
lea
xchg
lods
dec
sub
mov
loopne
popf
outsb
mov
dec
mov
pusha
xchg
stos
jbe
or
push
adc
xchg
push
jnp
fdivs
sbb
jle
lahf
or
dec
inc
push
sbb
ja
jo
repnz
js
push
xor
lret
adc
push
shlb
clc
and
jo
sbb
push
fs
std
je
push
enter
and
xchg
mov
xor
mov
ljmp
mov
es
orl
jg
inc
lods
jge
mov
les
mov
js
jecxz
push
mov
cmp
dec
shrb
adc
imul
fst
jge
lock
out
inc
scas
bnd
fcoml
xor
xchg
ret
mov
rclb
xchg
or
fcmovb
lahf
lret
popf
movsb
stos
and
push
pop
das
jg
or
and
arpl
rcr
mov
sbb
push
inc
add
or
rolb
pushf
cmovl
inc
xchg
out
mov
adc
jno
ret
mov
sbb
or
imul
mov
dec
fdivp
cmp
sub
mov
cmpsl
ficoml
in
adc
mov
cmp
movsl
push
lret
mov
fbstp
call
ffree
mov
std
ret
loope
xor
ror
jge
clc
idivl
dec
mov
cmp
mov
nop
fstps
loop
sahf
inc
stos
aam
jno
fnstcw
fcomps
inc
ss
cwtl
xlat
xchg
mov
lcall
imul
add
sbbl
fidivs
sbb
xchg
mov
mov
xlat
pop
clc
add
sbb
arpl
ds
xor
cltd
stos
call
cmp
arpl
mov
cmp
fs
lds
pop
sub
sub
daa
movsl
xchg
xchg
push
in
and
push
sbb
jnp
push
xor
je
xor
stos
cmc
jecxz
push
test
inc
pop
xor
mov
push
pop
mov
mov
and
scas
mov
movsb
scas
lock
test
test
mov
pushf
and
dec
addl
xchg
sti
mov
jg
mov
insl
adc
lea
and
es
and
rorb
aas
mov
fs
push
out
loop
call
dec
adc
lds
push
in
adc
push
jl
jmp
pop
push
test
shlb
sbb
stc
loopne
addr16
dec
dec
and
ss
pop
or
bound
jp
insb
repnz
idiv
mov
mov
dec
cmpsb
fldt
shlb
lds
jae
mov
adc
jne
int
and
std
iret
pop
mov
in
inc
adc
popa
dec
pop
lcall
int3
imul
cld
mov
imul
mov
movsl
inc
mov
jno
mov
xor
mov
testb
sub
xor
repz
fdivrp
lret
sbb
inc
push
fadds
test
jns
ljmp
mov
dec
dec
sbb
sbbl
xor
ja
mov
adc
inc
add
movsb
and
movsb
mov
pop
mov
repnz
aam
or
test
aam
insl
sahf
push
inc
dec
ficomps
fwait
mov
inc
lret
pop
xor
pop
mov
and
lret
mov
dec
loop
push
fnsave
dec
out
js
scas
xor
mov
mov
jle
add
fldenv
pop
fnstsw
xchg
addr16
xchg
jg
sbb
nop
push
aam
xchg
inc
std
cmpsl
cmp
mov
and
jp
leave
fstpl
xchg
test
mov
insb
fildll
xor
fwait
inc
stos
ret
shl
out
jmp
push
ljmp
sbb
xchg
aaa
stos
pop
sub
dec
insb
mov
cmp
jbe
fmuls
push
js
fsubrs
xchg
dec
push
out
inc
pop
inc
mov
dec
push
mov
inc
push
pop
fwait
jno
aad
jmp
shl
jns
adc
cltd
xchg
xchg
inc
mov
pop
dec
mov
jle
push
xchg
push
cwtl
out
adc
fistps
loopne
aad
xor
sub
mov
in
cld
mov
push
fimull
mov
sub
mov
jg
jmp
mov
sbb
jle
cltd
repz
call
and
cld
test
and
sub
hlt
push
adcl
aaa
cmp
jmp
mov
lea
loop
push
leave
push
mov
mov
sbb
out
repz
adc
jp
lahf
jae
shrb
popl
dec
mov
enter
call
adc
and
xor
dec
push
js
push
xchg
mov
ret
enter
call
adc
and
xor
dec
push
js
push
xchg
mov
ret
enter
call
adc
sub
pop
inc
dec
push
js
pop
jae
cmpl
ret
enter
push
mov
das
lret
shrb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
mov
jle
outsb
inc
rcll
dec
push
pop
and
fdivp
iret
jmp
sahf
mov
movsl
mov
jne
gs
outsb
inc
push
xor
cs
cmc
out
lds
mov
xchg
scas
test
dec
gs
outsb
pop
push
sub
cmp
ficoms
in
fists
hlt
loope
lret
ret
rolb
and
into
xlat
fiaddl
les
shrl
xchg
ficompl
cltd
out
imul
mov
rcrb
or
popa
xor
enter
loop
or
and
popa
jo
fidivs
and
into
movsl
rep
fldt
test
dec
gs
outsb
jne
adc
cs
push
movsl
dec
sbb
xor
into
pop
cmp
dec
scas
test
adc
imul
cwtl
in
nop
xchg
vpaddusw
out
xchg
scas
jp
jp
test
paddb
mov
mov
rol
into
out
sar
push
xchg
xchg
jne
jb
inc
outsb
pop
push
xor
cs
in
into
std
dec
out
fcompl
xchg
scas
loope
adc
gs
push
pop
inc
push
arpl
jns
push
incb
mov
fstl
sub
and
dec
pop
inc
jno
imul
loopne
sar
fneni(8087
cmp
add
xor
xor
push
and
fdivp
into
in
aad
lds
xchg
scas
test
dec
gs
outsb
inc
push
xor
cs
aad
lds
xchg
scas
test
imul
je
push
loopne
or
aad
fldln2
test
pop
xlat
leave
sbb
decl
adc
lock
ljmp
ss
enter
push
xor
clc
cmp
out
arpl
xor
test
mov
or
push
rolb
data16
cmp
aaa
sbb
std
aas
sbb
in
mov
mov
cmp
sahf
and
sub
mov
cld
mov
inc
adc
push
addr16
jmp
test
push
push
cwtl
mov
sub
xchg
xchg
push
ret
push
pop
movsl
jl
insb
loope
jge
and
dec
dec
push
jecxz
stos
xchg
xor
lret
sbb
outsl
mov
mov
push
pop
mov
mov
ja
in
nop
mov
jno
dec
std
jmp
popa
lds
jmp
dec
mov
nop
daa
and
fnsave
push
insl
mov
pop
add
test
cmp
js
call
jmp
or
out
neg
pop
into
sub
add
jecxz
aaa
xor
iret
adc
movsl
aas
add
pop
sti
jne
rcrl
ret
add
jnp
and
bound
cmpsl
loope
dec
sbb
cltd
or
popa
mov
xchg
jg
bound
and
push
push
sub
div
loopne
icebp
push
push
pop
scas
hlt
dec
cmp
insb
add
push
cmp
pop
das
mov
dec
dec
stos
sub
popf
mov
jae
mov
jl
jnp
out
or
mov
repz
push
repnz
loop
push
shll
xor
and
adc
dec
idivb
jns
inc
ds
sub
mov
je
mull
inc
mov
mov
mov
sbbl
mov
inc
fstpl
cmp
in
xchg
lahf
push
insl
fdivs
dec
sti
sahf
pop
ljmp
push
testl
sub
xor
and
sahf
push
insb
sbb
test
ja
out
gs
jp
inc
mov
push
xchg
xchg
aas
int3
jae
xchg
sbb
sbb
and
xchg
pop
in
pop
jl
jmp
stc
adc
jp
jno
cmp
mov
mov
mov
jnp
dec
stc
shll
fbstp
adc
shlb
inc
rclb
cli
ljmp
xchg
or
lcall
cmp
add
and
mov
and
sub
push
adc
ljmp
push
dec
jne
push
add
test
mov
xor
jb
pop
xlat
bound
dec
or
mov
sbbb
mov
aam
lods
mov
rcr
or
push
cli
popa
jnp
pop
mov
add
xor
mov
jae
dec
outsb
adc
call
adc
xchg
push
test
pop
add
jns
mov
xor
lods
adc
mov
stc
push
cmp
jecxz
jbe
out
push
sbb
rorl
pop
sub
xor
mov
or
orl
sbb
std
lahf
mov
xor
jnp
movsl
rclb
mov
jge
adc
push
jl
outsl
lahf
inc
cmp
mov
lcall
mov
nop
xchg
call
or
inc
stos
jle
pusha
jle
xchg
mov
sahf
xor
ret
out
dec
pop
cmp
aaa
jecxz
loopne
push
test
xorb
dec
jg
xor
push
hlt
jnp
dec
icebp
push
sahf
and
adc
mov
mov
iret
sub
outsl
mov
add
mov
jmp
xchg
dec
xchg
mov
xor
jns
js
cwtl
dec
push
ds
ds
xchg
jns
mov
sahf
fmull
repz
icebp
lea
xchg
pop
aad
pop
movsb
call
movsb
jge
rcr
add
mov
int
and
jl
jnp
cmpl
mov
aam
inc
mov
mov
fwait
adc
addr16
or
jge
aaa
xchg
pop
bound
lret
push
xor
mov
int
loope
pop
fdivrs
cmp
inc
addl
inc
xor
test
inc
testb
sbb
jno
mov
dec
add
addr16
test
push
mov
adc
xlat
jne
outsb
sahf
insl
sub
cmp
or
mov
pop
addr16
mov
push
lret
fcompl
push
stc
sbb
xor
psubsb
push
fsubs
dec
imul
xchg
imul
int3
js
add
in
fldt
sub
xchg
scas
test
push
inc
out
or
inc
pushf
dec
divl
dec
mov
pusha
jbe
sub
ljmp
lcall
jl
sub
dec
fisubs
jno
and
lds
fildll
cli
loope
add
jp
xor
jecxz
mov
push
add
out
dec
int3
jo
mov
xor
ds
je
pop
mov
xor
or
shrl
subb
test
pop
add
pop
pop
sbb
shlb
stc
inc
mov
ljmp
mov
fdiv
sbb
mov
int3
cmpsb
inc
dec
icebp
jp
imul
xchg
xor
ret
arpl
in
imul
out
mov
mov
addr16
fbld
inc
inc
mov
xor
and
stos
sbb
inc
dec
mov
push
es
daa
ja
jbe
or
iret
add
test
js
shll
movsb
sub
push
in
cmpl
jno
mov
pop
lgdtl
in
pop
fucomip
das
sub
ret
jno
push
loop
int3
sahf
mov
ret
push
pop
inc
xor
insl
mov
pop
inc
push
push
pop
idivl
dec
push
pop
or
addr16
xchg
and
pop
xor
push
and
cld
push
call
inc
or
insl
sahf
mov
movsb
rol
and
xchg
cmp
repz
and
out
xchg
int
out
xchg
jbe
in
mov
das
mov
dec
mov
cmp
mov
rcr
mov
xor
or
fimull
mov
mov
or
jne
aad
test
push
popl
shl
adc
dec
ds
push
push
xchg
mov
push
jns
jecxz
sub
mov
xor
faddl
lods
outsl
pop
ss
xchg
cmp
rcl
jl
ret
sub
ja
popf
inc
adc
mov
push
dec
xor
mov
stos
pop
adc
sub
mov
ret
dec
cli
dec
xor
repz
jmp
xbegin
adc
out
arpl
lcall
push
push
jne
mov
mov
ds
test
nop
test
stos
dec
in
outsl
lcall
cmc
mov
lods
int
stos
roll
mov
mov
jno
mov
dec
pop
xlat
aam
xorb
jl
jp
or
cmpsl
fbld
flds
outsb
test
pop
out
les
pop
inc
xor
xchg
bound
jle
lods
fdivrl
sub
into
mov
push
das
dec
xchg
lcall
ret
ja
aaa
pushf
iret
icebp
adc
push
or
cs
movsb
out
insb
loopne
jno
dec
sub
repz
ss
push
iret
dec
es
outsb
test
inc
pop
dec
iret
sahf
aam
lret
dec
xor
iret
or
push
out
loop
pushl
lret
adc
sub
mov
xchg
xchg
paddusw
movsl
nop
pop
jb
rcrb
out
je
gs
testl
add
out
dec
in
jmp
les
inc
or
pop
jne
aaa
cmp
bound
popf
xorb
mov
test
push
or
xchg
jp
mov
mov
ljmp
psllq
imul
rorl
and
pop
in
std
mov
sub
push
test
imul
and
adc
incl
hlt
call
jb
push
jnp
xchg
inc
dec
or
stos
enter
scas
push
jne
arpl
fisubrl
xor
or
lret
mov
stos
cmp
add
repz
scas
push
arpl
pop
iret
inc
or
xor
repz
push
push
je
add
fildll
pop
out
jg
cli
imull
lods
jno
iret
dec
xor
iret
jne
mov
dec
pushf
mov
fiaddl
dec
es
aas
pushf
lods
int
outsl
bound
es
mov
push
lea
pushf
xchg
inc
sbb
fwait
push
mov
scas
push
pop
shr
jo
xchg
test
jns
push
pop
dec
mov
mov
imul
test
push
mov
test
test
loop
cmpsl
pop
xor
out
lock
sub
int3
xor
sti
mov
pop
ljmp
movsb
loop
loop
inc
sub
xchg
mov
or
or
out
cmp
xor
mov
shrl
decl
and
add
in
sub
sbb
cmp
ds
pop
inc
adc
test
pop
push
test
push
jge
dec
bound
sbb
pushf
jae
lahf
leave
mov
cmc
jmp
ja
lcall
mov
push
popa
cwtl
fsubs
pop
pushf
mov
mov
pop
imul
jb
cltd
fdivrs
in
jecxz
int
sub
fucomi
ljmp
cmp
addr16
sub
je
cmp
add
xor
sub
push
adc
clc
repnz
cs
ret
lock
insl
int
insl
dec
mov
sti
cmp
imul
xor
and
repnz
fildll
cmp
jge
ljmp
xor
nop
in
scas
mov
push
fxch
and
dec
push
sti
ss
test
jmp
dec
push
fstl
ds
shrl
lock
inc
and
push
pop
jnp
ss
mov
push
mov
shlb
out
jno
mov
mov
pop
test
jb
jg
mov
xchg
test
or
dec
ffreep
xor
mov
test
call
pushf
dec
mov
jle
sbb
pop
mov
sarb
and
es
xchg
cmp
loope
pushf
mov
xor
push
pop
call
aam
push
or
adc
mov
je
aaa
sahf
mov
jl
int
add
sub
fdivrs
je
add
scas
sbbl
leave
movsl
pop
mov
ljmp
push
loop
jg
lods
adc
repnz
rcll
xchg
cld
add
gs
cmp
movsb
cmp
sahf
jl
int
in
mov
pop
es
add
lahf
test
mov
inc
xchg
inc
push
ficompl
push
cld
xor
xor
add
xlat
scas
mov
popf
cmp
lods
pop
adc
sbb
add
push
fldenv
add
adc
xor
xchg
adc
js
arpl
add
aas
lds
inc
dec
and
jecxz
pop
push
addr16
xchg
ret
mov
jecxz
out
adc
mov
repnz
rcr
jo
add
mov
lea
imul
add
cli
stos
ret
lea
ret
jle
out
imul
inc
out
outsb
sti
cmp
push
sub
sarl
insb
pusha
jecxz
mov
xchg
pop
lret
sub
mov
xchg
mov
or
mov
js
and
in
mov
lret
stos
and
popf
sub
inc
imul
loope
movsl
cmp
sub
xor
ret
in
or
pop
jle
into
fcoml
and
mov
int
pop
push
ljmp
cmp
jo
adc
jno
roll
xor
movsl
add
cmp
jb
icebp
mov
vminss
imul
push
mov
pusha
inc
mov
std
add
pop
and
movsb
fistl
ljmp
cmpsl
xchg
sbb
inc
push
cmp
jl
adc
ja
xchg
bnd
adcb
into
mov
push
cli
or
dec
xor
jb
dec
push
sahf
hlt
scas
sti
adc
ja
sbb
adc
jmp
xchg
faddp
dec
sub
mov
scas
lds
sar
in
fdivr
fstl
xchg
mov
push
mov
push
movsb
daa
adc
lahf
pop
sbb
sub
repz
in
notb
rorl
xchg
xchg
dec
int
lahf
in
xor
insb
lcall
or
cmp
cli
jg
int
js
pop
inc
xchg
test
enter
sbb
jl
mov
lds
loop
adc
loope
stos
roll
xchg
dec
inc
repnz
stos
and
out
mov
cld
int3
dec
sub
jno
bnd
inc
xor
jo
mov
inc
cmc
movsb
daa
jg
and
jmp
addr16
dec
dec
add
aas
cmpsl
push
pop
sbb
jo
fldcw
pop
pop
lea
and
cmp
test
dec
push
xor
add
dec
ljmp
repnz
push
xor
stos
mov
pusha
mov
cli
dec
fwait
int3
shll
f2xm1
and
and
minps
lock
call
ficoml
mov
out
jge
sahf
call
xor
and
xchg
sub
and
xchg
jle
int3
das
sbb
inc
out
aas
xchg
xor
mov
dec
out
cmp
subb
fsubl
out
dec
pop
repnz
xor
dec
xchg
or
mov
andl
cmp
xbegin
pop
sub
sub
jnp
call
int3
outsb
dec
or
movsb
arpl
ja
sbb
add
or
adc
and
adcl
xlat
cli
cwtl
sbb
jno
xchg
lcall
inc
mov
daa
push
mov
jae
mov
pop
xchg
and
int
ljmp
adc
xchg
pop
cmp
dec
sub
cmp
xor
push
push
fbld
in
stos
hlt
push
cld
push
dec
mull
cwtl
xorb
xchg
pop
test
stos
mov
call
lea
adc
repz
push
sbbb
inc
xchg
xchg
push
fsin
ret
push
jno
aad
cmpl
ja
clc
aam
popl
jb
addl
mov
mov
cwtl
add
mov
inc
xor
dec
mov
js
leave
jge
dec
test
fdivrp
dec
in
mov
cmp
pop
jns
pop
inc
out
in
or
push
mov
lret
mov
in
fbld
outsb
jnp
lods
mov
mov
and
sbb
pop
sub
mov
out
insl
andb
adc
repnz
jno
and
out
inc
into
aaa
icebp
divb
cmpsb
mov
test
jg
jmp
jle
and
dec
mov
lret
pop
call
mov
sti
mov
gs
out
bound
mov
es
mov
dec
sbbl
mov
add
mov
push
xor
push
mov
mov
add
sbb
in
sub
imul
dec
jb
inc
jnp
mov
test
and
jl
loopew
jbe
test
mov
lret
addr16
in
and
or
fs
push
shl
clc
mov
and
adc
mov
mov
jg
sbb
adc
test
insl
push
adc
and
or
mov
lods
sbb
or
mov
divb
inc
imul
inc
cmp
int
pop
push
mov
ss
fs
and
push
mov
jecxz
xor
push
push
xchg
repnz
pushf
repnz
cmp
inc
adc
dec
add
imul
out
pop
cli
sub
mov
add
dec
add
ret
insb
push
pop
bound
dec
sbb
cmp
pushf
add
sbb
push
pop
xor
xor
fldt
aam
div
mov
sbb
pop
dec
sbb
insb
js
sbb
rclb
mov
or
push
jg
cmp
stos
jne
popf
leave
fcompl
add
sub
push
fidivs
loop
lock
cs
mov
and
sbb
xchg
dec
add
arpl
insl
jp
xchg
iret
adc
icebp
fisttpll
lret
in
outsl
ds
cmp
mul
xchg
push
cmp
test
cmp
xor
fwait
xchg
ja
inc
movsb
dec
rdpmc
push
mov
in
dec
mov
dec
jmp
out
dec
fcoms
leave
sbb
cwtl
imul
call
cltd
push
adc
popa
push
loop
cs
mov
in
or
jp
dec
orb
dec
mov
adc
jns
fsubr
sub
jmp
call
bound
fcoml
js
cmp
mov
stc
movsb
mov
xchg
movsb
jnp
lahf
mov
mov
in
rcrb
lock
push
xchg
mov
inc
lods
pop
movsb
adc
inc
cmp
cltd
mov
shll
je
push
stc
and
xchg
and
lahf
dec
xchg
push
fmull
sub
jecxz
and
and
int3
push
sbb
dec
loop
in
popa
push
dec
repz
mov
and
imul
sub
mov
fisubs
out
sub
and
sqrtps
out
ljmp
add
mov
xor
gs
xchg
mov
mov
cmp
es
dec
andl
movsb
pop
jo
mov
push
add
lahf
out
insl
xor
cmp
fs
test
xorb
mov
jg
xchg
pop
pop
bsr
or
std
loopne
push
xchg
mull
cmp
pop
mov
ret
mov
mov
iret
jl
in
xchg
aaa
add
repz
lock
push
jmp
xchg
xlat
and
notb
dec
enter
jmp
or
pop
lret
in
dec
sbb
lret
add
outsb
pop
inc
mov
lret
lods
mov
xchg
xchg
and
inc
inc
fisttpll
adc
insb
mov
add
shlb
adc
lret
sbb
sbb
divl
push
add
cld
in
popf
sarl
push
das
jne
dec
lods
push
adc
insl
push
jne
pop
fldl
and
mov
ds
into
cmpsb
xor
repnz
mov
or
fistpll
inc
dec
lret
push
and
jp
loope
adc
mov
repnz
dec
sub
stos
mov
lret
insb
pop
push
mov
mov
xlat
xor
pop
cli
adc
xchg
addb
sub
sub
idivl
fildll
or
ret
or
cs
and
clc
int3
cmp
cltd
sbb
jnp
xlat
lahf
add
pop
ja
out
repnz
sub
adcb
lds
rorl
out
divb
das
test
or
ja
pushf
cmp
lock
mov
jmp
leave
xor
push
adc
mov
jno
inc
sub
push
insb
pop
jp
xor
mov
sub
pusha
jns
dec
push
divl
mov
xlat
add
add
lock
jbe
dec
pop
jnp
pop
xchg
adc
xchg
mov
and
sbbl
pop
movsbl
pop
aas
in
inc
mov
xchg
inc
gs
adc
std
mov
mov
add
dec
jnp
push
cli
jg
in
and
std
jmp
inc
aam
lret
sbb
mov
test
stc
dec
in
dec
loop
lock
and
push
push
pop
cmp
fldl
jg
lret
sbb
ficoms
cmp
jp
inc
js
pop
repnz
jecxz
push
rcrl
jmp
out
add
cmp
lahf
push
inc
or
ja
sbbb
sub
push
nop
shrb
xor
xlat
rcr
mov
data16
popf
jo
jge
pusha
aaa
ss
push
dec
pop
sbb
mov
xchg
cmp
ds
iret
mov
pop
xor
mov
dec
enter
or
sub
xlat
stc
bound
jg
gs
sub
in
nop
sbb
xor
nop
pop
pop
adc
push
mov
out
jno
mov
inc
inc
or
jmp
mov
into
repnz
push
cmp
mov
jnp
insl
mov
jne
mov
inc
xor
pop
adc
test
inc
push
sahf
pop
sbb
test
push
adc
mov
push
adc
shl
push
jecxz
fiadds
daa
pop
xlat
cmp
pop
mov
sti
dec
adc
mov
repz
ds
fsubrl
data16
cmp
and
xor
fimuls
cld
cmp
and
hlt
aam
fs
test
or
dec
mov
insl
inc
or
sub
sub
mov
gs
sbb
xor
pop
and
cmp
push
add
push
adc
imul
in
mov
jg
outsb
inc
push
xor
cs
aad
lds
xchg
scas
test
dec
gs
outsb
inc
push
xor
cs
aad
lds
xchg
scas
test
into
gs
push
outsb
inc
sahf
xor
scas
add
aad
les
xchg
scas
test
dec
gs
outsb
inc
push
xor
cs
push
aad
mov
cmp
fidivrs
lret
ljmp
mov
jg
pop
or
or
dec
sub
lods
lret
ljmp
int
sub
push
jp
js
sbb
pop
cmp
repnz
loop
xchg
std
or
frstor
jge
js
insl
inc
push
outsb
push
pop
xor
flds
hlt
popf
loop
stos
pop
es
push
push
in
push
pop
pop
outsb
sbb
repnz
inc
lret
jb
pusha
stos
in
cli
std
imul
mov
movsb
repz
test
push
inc
sbb
or
push
push
xlat
mov
movsl
mov
cltd
and
dec
sub
add
mov
lods
xchg
lcall
mov
mov
mov
in
xchg
loop
cmp
aad
sub
dec
cmp
adc
out
xor
xor
ret
cmp
jns
mov
mov
bound
add
imul
ja
mov
cs
mov
pop
cmp
fnstsw
cli
in
mov
lcall
cmp
arpl
jge
dec
xor
enter
lret
fistpl
mov
and
pop
pop
jmp
cmp
sub
push
fcoml
mov
cwtl
mov
pop
aas
jo
sbb
sbb
mov
mov
int
fnstsw
or
or
dec
sub
lods
lret
ljmp
int
fnstsw
or
or
dec
sub
lods
lret
adc
clc
cmp
fs
movsl
sahf
shr
cmpsb
xor
sub
jno
in
inc
jmp
or
dec
xchg
xlat
cmp
cld
lahf
pusha
mov
addr16
in
sub
jge
cmc
test
aaa
inc
mov
cwtl
add
movsl
testb
mov
and
sub
bnd
fwait
repz
mov
out
sbb
xlat
adc
mov
mov
pop
sbb
and
int
and
popa
xchg
xor
insb
movsl
jge
and
clc
bound
rorb
int
incl
and
push
roll
jno
sbb
aaa
aas
stc
lock
mov
xor
adc
pop
inc
inc
xchg
xchg
outsl
or
mov
std
dec
ljmp
lock
mov
movsb
loopne
mov
loopne
icebp
mov
push
pushf
xchg
imul
outsb
push
adc
in
jno
fisubrs
or
and
int3
int3
push
out
cld
cmp
popf
int3
or
int
sbb
not
lock
lods
addr16
in
mov
and
fs
outsb
fwait
lcall
outsb
fsts
dec
pop
cs
pop
and
insl
sbb
push
bound
xlat
adc
js
outsl
daa
sahf
mov
push
mov
ja
out
ret
out
ja
fidivl
fdivrl
scas
dec
cli
and
scas
insb
sub
adc
xchg
ss
in
push
push
mov
in
data16
and
push
out
dec
std
daa
inc
fcmovnu
bnd
mov
push
sub
movsb
mov
push
cmp
ljmp
movsb
push
jne
out
jnp
into
addr16
out
sub
xchg
jecxz
xchg
adc
mov
movsb
pop
and
jle
out
xor
inc
imul
sarb
fistpll
pop
jns
dec
in
mov
cld
push
lcall
push
pop
fisubrl
pop
pusha
pop
cltd
es
mov
repz
gs
adc
jecxz
lcall
mov
daa
cmp
cld
mov
or
addl
jg
adc
enter
leave
sbb
mov
jecxz
mov
jmp
scas
or
xor
adc
rcll
xchg
jecxz
stos
and
sbb
xor
arpl
xor
outsl
aas
inc
mov
cmpsl
mov
int3
adc
mov
out
jmp
and
or
aad
mov
push
in
test
adc
popa
pop
push
push
daa
jecxz
imul
hlt
mov
xor
mov
add
rcr
and
ss
jmp
rcll
outsb
sti
push
icebp
mov
and
pop
add
mov
in
cmpsl
or
and
cs
movsl
iret
xchg
mov
movsb
or
imul
and
fstpt
inc
jg
ljmp
jmp
mov
sbb
add
mov
cmp
sub
jb
jge
jl
add
xlat
int3
loopne
xor
sub
insl
push
sbb
div
sub
cs
imul
int
pop
sub
rorl
push
in
sahf
jmp
push
ret
pushf
lret
dec
fwait
jmp
fwait
ret
jp
test
cmp
mov
test
repnz
adc
mov
in
repz
ficoms
xchg
stc
mov
int
sahf
mov
jo
add
inc
sbb
pop
bound
push
mov
aam
out
dec
ret
cli
xchg
cmp
lods
mov
aam
mov
fildl
and
inc
sub
cmpsl
xor
cmpsb
dec
jecxz
rol
out
dec
cld
dec
pop
add
or
and
adc
cmc
pop
jb
js
lret
dec
repnz
mov
neg
inc
mov
push
sbb
jbe
cmp
add
and
mov
xlat
dec
xchg
mov
cmp
scas
xor
jo
sbb
andps
push
loop
fldenv
ret
inc
loope
lock
cmp
mov
popf
sbb
nop
aas
outsl
jp
dec
repz
push
lds
lods
push
lret
jmp
jp
xor
jmp
mov
mov
movsb
pop
jle
dec
enter
sub
inc
jecxz
popf
mov
adcb
scas
cmp
jnp
and
inc
adc
sbb
imulb
movsl
mov
sbb
into
cmp
out
xchg
cli
jmp
call
sahf
je
icebp
ret
xor
jo
sbb
movsb
mov
add
ret
rclb
lods
xor
pop
jbe
jbe
push
add
inc
mov
push
push
mov
nop
pop
or
and
pop
cmovg
jecxz
icebp
sub
push
or
out
adc
xor
fsubr
cmp
and
cmp
cmp
dec
ljmp
push
xor
xor
push
gs
cmp
jle
test
sti
mov
imulb
and
or
pop
or
fdivp
out
push
scas
adc
xlat
dec
add
lret
adc
jbe
outsl
lcall
jecxz
js
testb
imul
enter
add
rclb
dec
jb
test
imul
cwtl
enter
push
adc
aaa
sbb
mov
cmp
pop
ss
out
out
test
pop
fisttps
lds
push
cli
sub
popf
arpl
mov
xor
mov
or
mov
fcompl
or
nop
sbb
mov
je
loop
icebp
ds
xchg
int3
lock
je
outsl
dec
lods
mov
jecxz
push
xchg
pushf
inc
popa
xchg
sbb
rcll
int3
mov
out
into
mov
std
out
repnz
inc
sub
insb
jge
cmp
pop
push
out
pop
sub
jb,pn
mov
fwait
cmp
cltd
cmpsl
jl
mov
sub
cmc
nop
cmpsl
out
adc
inc
mov
scas
pop
outsb
mov
dec
imul
cmpsl
inc
test
mov
es
sbb
dec
or
les
int3
sbb
pminub
fistpl
cmpsl
or
movsb
repnz
push
sbb
mov
popf
sbb
xchg
xchg
xor
daa
adc
lahf
inc
test
inc
add
leave
xchg
mov
aam
sub
mov
bound
mov
lea
loopne
out
out
cs
mov
mov
jecxz
add
mov
lea
add
aas
call
jl
shll
leave
jo
loopne
and
jecxz
das
xchg
push
cltd
jge
imul
cmp
cltd
das
cmp
cwtl
xor
test
cmp
in
add
pmaxub
mov
and
orb
push
sub
xchg
movsl
popa
sbb
stos
sarb
dec
mov
dec
inc
fstpt
mov
loop
insb
loopne
jg
sbb
add
loop
push
test
lea
sub
jbe
sbb
test
cld
mov
test
addr16
mov
icebp
cltd
aas
sub
sub
cmc
in
out
lret
iret
lcall
mov
xchg
shlb
pop
dec
hlt
lahf
stc
jb
lods
test
mov
mov
and
jns
jo
in
int3
fidivrs
xchg
mov
pop
push
stc
fldl
and
inc
cmovp
negl
jg
inc
dec
ljmp
subb
jp
addb
xor
testl
xchg
mov
push
in
test
cwtl
loope
pop
cmc
sub
leave
test
xchg
xchg
jp
loop
pusha
mov
insb
sub
xor
and
inc
push
lret
cmp
addr16
outsl
lock
and
mov
sbb
xor
in
dec
mov
and
ljmp
wrmsr
jno
nop
in
adc
hlt
dec
rorl
add
add
int3
sbb
inc
sbb
es
mov
imul
leave
or
aam
mov
or
les
out
add
cltd
push
out
push
sbb
insb
jo
fadds
or
inc
jne
test
icebp
inc
xlat
les
push
xor
outsb
test
insl
mov
pop
pop
push
insb
out
and
jp
fs
push
ljmp
add
mov
aas
mov
enter
and
je
orb
or
mov
mov
outsb
pop
push
sub
jbe
hlt
stc
pop
mov
dec
mov
movsl
pop
xchg
iret
ret
enter
std
sub
dec
adc
mov
jns
js
fadds
pop
sbb
inc
andb
xlat
mov
pop
out
cmp
mov
mov
leave
xchg
cs
adc
or
subl
dec
mov
xlat
pop
and
notb
add
cli
xlat
sbb
lret
pop
xor
or
daa
xchg
xchg
mov
pop
add
aad
wbinvd
and
jge
adc
frstor
lretw
and
call
lret
xchg
inc
lahf
add
clc
dec
aaa
icebp
cmp
push
cmp
cmpsb
pop
add
sub
fnstsw
cmp
sub
mov
fidivl
sbb
or
inc
fisubrs
or
test
dec
scas
aam
aam
push
pop
stos
lods
jae
movsl
enter
inc
add
jmp
mov
scas
inc
lret
sub
fadd
bound
fcmove
in
cs
or
loop
iret
outsb
mov
mov
ss
enter
jecxz
popf
stos
and
inc
xchg
insb
mov
cmp
sbb
arpl
stos
jo
jmp
jno
cld
pop
ret
hlt
mov
mov
rep
std
out
add
clc
pop
inc
xlat
mov
addr16
flds
cmp
sbb
jbe
adc
cmp
test
sub
test
inc
rorl
ror
lds
adc
mov
fneni(8087
inc
negl
rcrl
mov
out
and
inc
mov
dec
dec
push
mov
aam
pop
jne
xchg
in
push
in
rclw
and
mov
inc
orl
shll
dec
fcmovbe
es
outsl
scas
xor
testl
mov
sbb
test
xchg
mov
sbb
xchg
fldl
fisttpl
adc
ja
mov
cmp
mov
popf
dec
sarl
xor
inc
in
fsubr
push
cmpsb
popa
fwait
jg
dec
mov
sub
shlb
mov
add
in
lock
subl
or
cli
movsb
lock
test
in
fsubrl
mov
push
int3
mov
pop
insl
mov
fnstsw
mov
mov
mov
xor
lods
or
pop
fldz
mov
xor
xchg
push
xor
aaa
mov
es
orb
pop
out
dec
pop
aaa
mov
shll
test
mov
inc
inc
jecxz
fstpl
pushf
cmpl
mov
cmpsb
adc
xorb
and
insb
fsubl
divl
push
add
or
jle
adc
out
xor
and
repnz
incl
xchg
in
xor
pop
inc
cli
es
lods
int
sub
push
inc
fsubs
flds
add
and
inc
lds
sbb
gs
mov
jp
cmc
adc
sbb
mov
jl
sbb
cmc
mov
fmull
int3
sbb
test
and
leave
mov
push
mov
inc
xor
pop
xchg
rorl
out
mov
cmpsb
iret
push
mov
mov
fdivr
fisttpl
adc
pop
push
mov
jo
cmp
add
lods
jg
push
std
mov
inc
push
dec
out
adc
inc
aam
sbb
or
push
notl
jnp
mov
and
xchg
shrb
scas
nop
mov
push
repnz
fcom
repnz
dec
aam
mov
scas
jb
push
mov
xchg
enter
inc
adc
call
rorb
push
insl
push
pop
mov
addr16
fmull
inc
aaa
mov
loope
addr16
and
pop
sbb
mov
dec
cmp
or
das
pop
test
sub
sti
shlb
adc
js
shl
mov
negl
gs
pop
dec
testl
jmp
fstpt
xor
out
dec
xlat
inc
adc
out
xor
aam
mov
in
decl
fsubl
xlat
pop
and
and
fcomip
cmc
xchg
pop
pop
push
xor
aad
imul
jge
and
pusha
dec
pop
xor
test
xor
or
cmp
jno
inc
loope
sub
mov
jae
cmp
inc
sbb
dec
outsl
leave
xchg
or
mov
and
sarl
adc
out
data16
daa
addb
mov
scas
push
call
mov
dec
jl
cli
mov
cmp
inc
insb
mov
dec
lret
in
imul
jp
test
cmp
stos
loopne
repnz
jb
out
bnd
je
rcrb
mov
mov
mov
int
xchg
push
cmp
sub
idivb
or
mov
push
or
cs
pop
jo
ret
shrb
and
rorb
xor
cmpsb
jne
outsl
push
aad
dec
fwait
push
jle
jnp
or
push
jg
and
mov
nop
dec
test
add
mov
repz
cld
ret
dec
pop
mov
in
jnp
add
mov
gs
sbb
sbb
xor
loop
lock
dec
pusha
addr16
or
inc
rcrl
mov
push
les
jle
dec
xlat
adc
sahf
sbb
mov
dec
int3
rcrl
aaa
jbe
inc
jl
rcrl
ret
pop
pop
daa
jl
fwait
fs
clc
inc
fdivrs
fwait
mov
insl
shrl
jne
sbb
and
sahf
pop
sbb
mov
pop
adc
push
add
add
les
sbb
in
std
and
push
outsb
mov
jmp
or
sub
hlt
out
in
test
add
jnp
popa
inc
or
les
es
jnp
mov
adc
out
push
sbb
pop
pop
xor
sub
cwtl
lahf
mov
jns
jl
pop
mov
stc
or
mov
test
shll
inc
fnstenv
jl
xor
in
dec
int3
cmp
fldlg2
xchg
repnz
fisttps
mov
insl
push
push
lea
inc
int
sub
push
sahf
and
pop
xchg
xchg
jns
mov
loope
scas
ljmp
lods
add
mov
rolb
and
cli
test
mov
sbb
les
inc
cwtl
popa
addr16
rcr
ret
out
lods
sub
psrad
and
jo
in
ret
lcall
xchg
repz
push
cmpsb
sti
inc
notl
lods
fcomi
test
shrl
adc
lods
cmp
lahf
jl
push
mov
adc
rolb
pop
xor
les
add
dec
xor
xchg
frstor
scas
rolb
mov
sub
add
jbe
pop
xchg
jecxz
data16
push
outsl
dec
adc
clc
stos
mov
and
add
int
insl
mov
jle
xchg
xchg
adc
aas
lahf
cmpsl
sub
cs
cli
loopne
icebp
inc
in
popf
repz
arpl
lret
sbb
cmc
and
addr16
ljmp
push
sub
jns
das
stc
inc
cwtl
xor
nop
pop
or
xchg
addr16
out
int
mov
std
pop
xchg
jb
xor
ficomps
int
dec
sub
lods
in
jb
push
cmp
xor
xor
jo
push
or
in
sbb
loop
mov
adc
xchg
sbb
xchg
dec
add
cmp
jno
lret
repz
xor
adcb
roll
jbe
adc
inc
mov
cmp
call
daa
sbb
fcomi
leave
dec
fnstenv
mov
adc
flds
mov
mov
or
push
xlat
jp
inc
pushf
or
ret
xchg
fsubrl
sub
es
pop
daa
fistpll
je
mov
imul
lcall
loop
std
in
aad
imul
int3
push
jg
pop
hlt
shr
jle
add
sbb
adc
push
ret
fs
frstor
jecxz
aad
notb
lock
inc
scas
mov
orl
sub
sbbb
rclb
in
add
ljmp
inc
jmp
scas
popa
in
adc
sub
jne
xchg
pop
mov
pusha
out
mov
call
int3
inc
jbe
inc
dec
sbb
mov
orb
pop
inc
rcl
push
ja
outsl
xchg
lea
cld
ja
mov
mov
inc
sub
int3
push
stc
insl
es
mov
dec
add
mov
push
mov
aaa
jmp
movsb
pop
sub
filds
dec
or
dec
leave
dec
dec
push
lock
pop
mov
dec
sub
and
andl
shr
dec
popf
lock
mov
stos
mov
pop
inc
fldl
mov
ret
xor
test
lcall
test
into
mov
inc
icebp
mov
xchg
js
cmpsb
andb
push
scas
dec
data16
fisttps
loopne
or
and
jno
cmp
fs
stc
imul
mov
mov
or
lds
sbb
jmp
jb
ficomps
dec
dec
pusha
pop
aas
inc
push
sub
andl
jmp
push
add
dec
mov
rorl
aam
adc
test
out
dec
adc
cmc
jne
pop
out
jns
clc
jl
pop
inc
dec
xor
xchg
adc
lock
pushf
xchg
sbb
cmc
mov
sti
mov
push
imul
lret
shr
fcompl
fists
movsb
pusha
xchg
out
sbb
test
lock
dec
xor
xchg
lds
or
mov
cmp
xchg
mov
fsubl
pushf
repnz
add
out
sub
xchg
das
loop
push
push
out
inc
ret
aad
dec
fptan
mov
pop
imul
into
dec
mov
cwtl
loop
loopne
scas
xorb
push
push
lds
mov
and
mov
adc
scas
popa
lock
xor
xor
fcmovnbe
cmpsb
add
aaa
mov
hlt
or
imul
iret
inc
adc
mov
xor
push
popa
in
push
aaa
mov
xor
dec
std
xor
inc
out
sub
adc
jb
pop
ss
fs
in
jge
xchg
int
lds
mov
sti
insb
fnstsw
pop
fists
push
pop
pusha
cli
cmpsb
xchg
cmp
xorb
jbe
sbb
scas
cmp
aad
loope
xchg
lods
inc
sbbb
adc
insb
jne
ljmp
or
aad
and
add
addr16
ret
sbb
movsb
in
sbb
rcl
shll
dec
xchg
sahf
dec
xchg
loope
sub
jmp
mov
fmuls
add
inc
jne
lcall
fimull
call
daa
es
repz
or
pop
adcl
and
mov
scas
lret
stos
cmp
xor
mov
jnp
faddp
fistps
fdiv
push
pop
or
iret
dec
push
mov
test
andl
mov
divb
repz
ds
jne
jle
fldcw
enter
out
xlat
cmp
mov
xor
shrb
out
jno
dec
gs
shll
or
jo
movb
push
test
mov
movsl
fimuls
ret
cmp
inc
icebp
cmp
popa
mov
jg
jo
ficomps
and
xor
jge
and
in
dec
xor
repz
outsl
adc
in
xor
idivl
jns
std
dec
mov
in
dec
xor
adc
ss
pop
sbb
ret
ficomps
fisttps
rcr
lcall
dec
jecxz
cs
fldenv
fidivrl
dec
mov
dec
mov
rorl
sbb
push
push
fcomp
push
out
rorl
lds
daa
pop
clc
xlat
jne
mov
jb
cmc
xor
xor
mov
jle
insl
dec
inc
push
xor
mov
lods
lret
cmpsb
icebp
flds
lret
stc
dec
in
in
in
jnp
repnz
cmc
call
cmp
test
dec
aaa
pusha
add
scas
outsl
sbb
push
jbe
xchg
daa
outsl
pushf
jle
je
push
loope
inc
sbb
sub
aas
inc
xchg
mov
aam
fucomp
jle
shll
sub
xor
lcall
pop
loopne
imul
bound
or
xchg
add
sti
popa
das
sbb
mov
push
jo
jne
movsb
outsl
insl
jae
xchg
inc
cmp
jmp
mov
push
xchg
cmpsl
inc
add
mov
nop
lds
jo
xchg
insl
cmpsb
test
rolb
jle
je
cmc
jecxz
add
lahf
sahf
or
pop
sbb
jmp
inc
xchg
fisubs
jmp
push
clc
movsb
cltd
mov
mov
inc
hlt
cmp
mov
clc
xchg
call
xchg
mov
cli
push
cmp
jnp
sub
das
in
out
push
ds
mov
popf
cli
in
mov
lcall
cmp
jp
or
dec
sub
lods
lret
ljmp
int
fnstsw
or
or
dec
sub
lods
lret
ljmp
int
fnstsw
or
or
dec
cs
lods
into
mov
cli
in
mov
lcall
ret
push
or
mov
movsl
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
stos
pop
inc
repz
out
js
mov
add
or
add
add
add
push
add
jg
add
add
popa
add
and
mov
add
add
adc
filds
jg
or
mov
add
filds
mov
push
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
or
ljmp
add
push
add
enter
out
add
add
das
add
add
scas
add
adc
xor
pop
add
test
dec
add
das
add
inc
add
add
add
add
add
add
jg
xchg
add
or
pop
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
jno
ljmp
add
or
add
add
test
mov
add
add
add
add
add
add
pop
add
add
add
add
push
add
aaa
add
add
ljmp
add
add
add
add
sub
jl
roll
add
mov
adc
sbb
add
add
add
add
sbb
pop
add
pop
add
add
sbb
add
sbb
push
add
add
or
cmp
jno
jbe
xchg
mov
add
add
add
add
add
add
add
add
add
jno
insl
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
jbe
pop
add
add
add
add
jp
cwtl
add
add
jno
pop
add
add
add
add
add
add
aad
scas
add
add
add
add
add
mov
pop
add
add
add
adc
mov
adc
pop
add
add
push
add
add
add
add
fadds
xor
add
add
add
add
add
add
add
jp
or
cmp
adc
loope
adc
dec
add
add
add
add
mov
add
add
add
add
add
filds
pop
add
sbb
or
add
or
add
add
aad
adc
jge
add
filds
mov
pop
add
add
add
add
jno
jl
or
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jl
push
add
add
add
add
cwtl
add
add
add
add
add
add
mov
sub
adc
pop
add
add
add
add
add
sub
mov
add
add
add
add
add
mov
addr16
add
imul
xchg
add
add
add
add
add
add
in
add
add
add
add
adc
incl
add
add
imul
add
add
add
aas
add
mov
add
aad
and
or
xlat
add
add
jno
jbe
test
jb
push
add
add
add
popa
push
adc
scas
mov
cmp
testb
movsb
call
lds
repz
sub
xor
orb
bound
ret
adc
lds
sub
xchg
pop
jecxz
add
and
sbb
jno
in
cmp
mov
jnp
mov
cli
adc
jnp
mov
daa
in
xchg
std
mov
mov
xchg
xlat
adc
out
fidivrs
mov
icebp
xchg
into
fdivrl
out
ds
pop
ljmp
mov
rcll
add
push
loope
sbb
pop
outsl
popf
xor
and
or
imul
testb
clc
mov
rcrb
or
subb
fs
mov
jns
xchg
jle
mov
sub
inc
push
pushf
inc
mov
icebp
aad
clc
jg
std
dec
jns
mov
fildll
cld
pusha
or
mov
lahf
push
data16
in
mov
or
popa
stos
sub
scas
nop
push
pop
fstpt
mov
popf
sbb
sti
mov
xorb
lea
cmpsl
pop
ret
shrb
mov
jl
sub
mov
fsts
imul
mov
mov
scas
adc
ja
xor
bnd
test
out
cmc
push
add
or
mov
pop
sub
bound
cmp
mov
cmp
icebp
fwait
push
insl
shrb
and
add
jne
mov
jo
sub
fadds
or
in
sub
clc
and
rorb
dec
sub
mov
adc
in
sub
push
imul
jle
jecxz
rorl
jle
xchg
xlat
mov
or
enter
sub
lret
rorl
fistpl
fs
stos
in
lret
arpl
jle
jmp
xchg
mov
lods
mov
lret
jg
jo
inc
jo
orb
sbb
dec
int3
ja
jb
repz
inc
or
fiadds
and
mov
inc
popf
mov
mov
jl
jecxz
inc
arpl
sarl
les
out
add
je
mov
xor
rclb
mov
loop
pop
out
test
push
mov
xchg
lods
xchg
or
sbb
js
dec
jle
dec
cmp
jl
pop
or
lock
inc
add
jb
fistps
push
xchg
and
sub
cltd
cmp
sbb
daa
push
inc
test
cmp
scas
sbb
adc
xor
imul
or
and
stos
jo
add
cmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
