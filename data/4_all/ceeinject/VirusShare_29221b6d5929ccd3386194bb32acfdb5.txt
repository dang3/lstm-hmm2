fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
sbb
xchg
mov
mov
add
pop
dec
ja
call
lea
mov
imul
xlat
std
mov
cmp
pop
dec
add
jge
lea
mov
in
iret
std
fisttpll
outsb
pop
jb
cmp
dec
and
popf
xlat
loope
in
loopne
aas
std
es
xor
sub
insb
add
test
fdivs
cld
xlat
int3
xchg
adc
sub
fnstenv
clc
mov
mov
mov
mov
jl
int3
data16
lcall
ret
rcrb
add
popf
pop
lea
aam
div
testl
call
push
loop
test
push
jo
bound
push
aad
in
scas
gs
push
mov
call
dec
popf
shll
outsl
cmp
adc
pop
lret
dec
pop
call
pop
xchg
inc
shlb
mov
out
xlat
std
fimuls
push
cmp
jg
dec
jge
stc
mov
aad
repnz
cmc
mov
mov
inc
adc
cmp
adc
cmp
sub
into
ftst
cmc
call
in
mov
jo
push
jb
add
cmp
mov
cmpsl
into
repz
ret
fucom
in
xlat
std
or
pop
cmp
insl
push
jge
lea
mov
out
xlat
std
or
pop
cmp
insl
push
jge
lea
out
test
sbb
fcomps
scas
inc
fldt
xchg
movsb
jae
es
aam
cltd
push
cmc
test
cmpb
js
mov
sub
pop
out
push
in
lahf
lods
cwtl
testl
pusha
push
jne
add
rclb
mov
dec
xchg
jbe
int
and
mov
and
cltd
cwtl
in
imul
in
out
xchg
push
push
jbe
bound
jge
push
push
mov
xor
xchg
inc
cmp
mov
and
cmc
dec
xorb
lahf
lds
adc
bsr
in
cmp
stos
leave
loopne
jle
xor
add
add
xchg
fbstp
adc
or
out
je
loopne
xor
dec
in
push
xlat
mov
mov
xor
or
inc
jmp
movsl
xor
jg
jbe
add
sbb
dec
add
mov
ds
lea
cmpsl
pop
pop
int3
and
sti
cmp
lods
mov
pop
dec
jmp
jbe
mov
cmpsl
int
inc
sub
xchg
adc
popa
aam
lret
loop
and
adc
and
cmp
int3
enter
adc
sub
lock
push
xchg
subb
movsl
lds
movsb
loope
int
out
jge
testl
jbe
sub
dec
fsubrs
or
mov
jno
sub
icebp
sbb
subl
inc
xchg
or
pushf
outsb
sahf
dec
inc
cld
test
push
or
frndint
and
push
aam
out
xchg
mov
inc
pop
enter
mov
loop
scas
cmp
dec
in
test
mov
mov
pop
popa
jnp
in
mov
push
add
neg
enter
aas
mov
cmpsb
in
inc
sahf
inc
push
insl
xchg
fstpt
mov
loopne
sbb
fmul
mov
imul
inc
enter
mov
and
push
cltd
sbb
adc
arpl
cmp
test
xor
push
dec
inc
jle
clc
mov
mov
sahf
dec
sbb
lock
sti
icebp
subl
icebp
out
mov
std
lcall
sub
scas
leave
jnp
push
lcall
mov
mov
data16
gs
test
clc
jo
xchg
fistpll
push
sub
xorl
sub
jmp
out
mov
xor
loop
imul
sti
adc
mov
rcrb
xchg
xor
scas
and
lods
push
and
insl
xor
sub
int3
arpl
adc
in
push
repz
and
mov
dec
arpl
je
jno
xorl
leave
mov
imul
lods
and
mov
xor
adcl
addb
loopne
cmp
xchg
cltd
sarb
jns
cmp
pop
cli
mov
cli
or
stos
iret
lret
add
jl
mov
sub
sbb
and
shrb
sub
loope
add
inc
loopne
inc
xchg
push
imul
jb
push
xor
add
push
mov
push
scas
es
cmpsl
xor
fisttpl
lcall
jnp
mov
clc
mov
cs
in
pop
sbb
lock
mov
and
mov
movsb
inc
in
push
jae
jb
mov
pop
punpckhbw
or
mov
lret
clc
and
enter
adc
fidivl
sub
mov
outsb
loop
inc
dec
fisttpl
cmc
mov
outsl
xchg
adc
push
out
mov
movsb
pop
addr16
fstl
rcll
cmp
push
cmp
arpl
dec
fildl
rorl
lock
inc
or
out
adc
icebp
cmpsb
insb
dec
xor
and
insl
shlb
das
das
xchg
inc
ja
inc
cmp
mov
sub
lods
add
or
cmp
xchg
bound
lcall
stc
loop
jb
push
cld
imul
mov
aas
push
mov
lods
or
cmp
cmp
pop
cli
jae
push
xchg
push
hlt
mov
or
cld
in
pushf
fsubrs
lods
jl
mov
and
and
js
leave
rcrl
push
loop
iret
sbb
xor
flds
pushf
fs
pop
or
cmp
mov
outsl
inc
popa
cwtl
repnz
leave
gs
mov
dec
fwait
stos
faddl
lock
mov
push
popf
and
mov
into
sbb
xchg
fisubl
add
or
mulb
lds
and
jmp
jb
jne
lock
movl
les
or
es
sub
outsl
mov
movsb
mov
fmull
adc
dec
test
jge
push
push
inc
sub
out
add
jns
ficoml
movsl
pop
adc
or
aaa
sub
enter
jb
andb
loop
dec
mov
jns
jns
push
xor
jb
mov
mov
outsb
popa
inc
or
stc
aaa
iret
jnp
lcall
sub
cmp
sub
fimuls
xor
mov
sub
in
mov
add
inc
stc
jl
inc
aad
sbb
shll
enter
inc
test
mov
sti
mov
bound
xchg
sarl
adc
icebp
call
dec
sbb
mov
dec
in
sub
fldenv
outsl
xor
lods
fcomip
mov
cmp
sbbl
sbb
jno
sub
es
adc
pop
add
sbb
arpl
lock
inc
push
mov
and
add
mov
xchg
fsts
ret
xor
jnp
gs
lret
dec
xor
push
pop
aaa
in
aaa
dec
jne
and
ret
arpl
cmp
pop
cmp
push
popf
addl
outsb
pop
scas
scas
arpl
push
test
adc
xchg
fstpl
pop
mov
xor
rcl
arpl
push
insb
jns
pushl
jmp
xor
mov
inc
add
outsb
addr16
mov
sub
mov
xor
inc
stc
mov
nop
lods
xchg
pop
or
aad
arpl
cmp
leave
or
adc
mov
mov
test
xor
outsb
xchg
or
int
push
cltd
jge
jb
lds
jno
mov
outsb
and
ljmp
cmp
fs
pop
cmp
add
inc
jg
scas
in
push
pop
pop
jecxz
or
lds
fs
dec
pop
mov
or
push
sahf
sahf
cltd
das
aas
xor
daa
jl
pop
cmp
jb
dec
ja
daa
cltd
movsb
iret
cld
adcb
push
paddb
rcr
sbb
stc
imul
dec
sub
hlt
cli
adc
in
dec
cwtl
jg
dec
mov
push
ret
and
icebp
sub
mov
out
xor
shrb
mov
add
xchg
popf
jbe
in
popa
push
movsb
mov
sbb
and
xchg
xchg
cwtl
inc
pop
mov
mov
lea
push
shl
cmp
dec
arpl
sbb
sbb
mov
rol
adc
pop
cmp
jae
lret
sbb
or
hlt
jne,pn
or
mov
push
insl
mov
pop
sbb
fs
in
dec
jns
loop
jg
or
pop
imul
jnp
lahf
jl
pop
and
pop
mov
xor
mulb
xchg
sbb
in
aaa
xchg
lahf
push
movsl
fistpl
call
loopne
sub
jp
cmpsb
mov
gs
add
dec
mov
lahf
and
jle
pop
ds
cmp
add
push
repnz
and
push
mov
loop
dec
mov
int
pop
loope
mov
je
lret
dec
adc
cltd
call
fdivrs
jle
adc
nop
mov
ret
fucomp
clc
xchg
push
shrl
xor
inc
pop
mov
or
jmp
adc
cmp
xchg
in
fnstcw
cmp
xlat
dec
cltd
push
mov
inc
repz
lcall
call
test
dec
pusha
add
push
data16
adc
jg
test
mov
jle
shl
xor
adc
cmp
adc
adc
sti
iret
mov
sub
or
fstpl
and
mov
xchg
adc
push
inc
pop
dec
jg
pop
sar
mov
test
icebp
dec
int3
movd
and
aad
bound
adc
in
jb
mov
lcall
lock
clc
push
and
and
and
adc
push
and
out
push
mov
adc
or
add
lret
sub
xchg
es
push
add
xor
sbb
movsl
aas
jno
jb
mov
ret
pop
adc
cmp
ret
mov
mov
xchg
stc
int
or
imul
sahf
mov
mov
adc
dec
ja
sysexit
repz
add
jg
test
cld
addr16
mov
movsl
xorb
nop
inc
movb
jne
les
xchg
lahf
inc
gs
pminsw
cltd
fdivrl
xchg
sbb
ret
sub
mov
and
xorl
mov
cmp
cmp
jecxz
inc
jae
sbb
ret
and
jl
dec
test
sub
repnz
jno
cli
cmp
stos
addl
testb
sbb
ret
sub
xor
frstor
pop
mov
xchg
push
stos
push
push
rolb
enter
lret
sub
ret
cwtl
pop
test
out
mov
or
mov
andl
iret
pop
mov
cli
pushf
jo
aad
add
push
push
rcrl
cmp
push
inc
call
mov
cmpsb
push
out
jae
ficompl
je
xor
xor
loopne
ljmp
sbb
cmpsl
stos
add
ja
test
gs
enter
inc
fistl
sbb
xor
movsl
add
xor
in
cmc
sub
mov
flds
leave
push
pop
xor
loope
fwait
push
pop
sub
inc
inc
out
adc
sub
add
shlb
and
out
or
push
neg
je
repnz
mov
clc
je
push
sub
push
call
sub
ja
sub
xlat
dec
sub
int
data16
daa
jns
mov
jns
push
fmul
sti
adc
pop
xchg
inc
cmp
movsl
mov
js
add
add
and
sub
adc
stos
mov
jbe
pop
inc
inc
les
jne
cmc
add
cld
lea
xor
stc
cmp
mov
inc
ja
cli
frstor
scas
jo
push
mov
daa
stc
fdivrp
cltd
pop
andb
out
mov
add
fistl
ja
inc
jo
div
and
popf
nop
xor
outsl
lret
sbb
hlt
adc
mov
aam
cmp
and
xor
mov
movsb
push
jmp
add
add
add
in
shufps
push
das
lods
inc
lods
jae
stos
push
sbb
ja
daa
adc
inc
movsl
pop
jmp
mov
or
mov
nop
xor
cmp
jge
jg
xchg
or
imul
popf
fs
icebp
rol
sub
mov
data16
cmp
test
or
test
shl
and
lret
loope
mov
pop
xchg
pop
fsubrl
adc
shrl
cmp
lods
test
mov
sbb
jbe
mov
mov
aas
adc
shlb
sbb
in
loop
mov
pop
mov
mov
shlb
add
les
sub
push
jns
xor
jmp
outsl
or
test
rcl
or
pop
push
ret
mov
add
lahf
mov
xor
lea
and
cwtl
testl
in
mov
mov
in
mov
cmp
pop
dec
lret
fistps
hlt
ja
sub
outsl
push
test
nop
dec
nop
add
cmp
pop
push
add
jmp
add
push
rcl
push
in
aam
and
call
xchg
sbb
cmpsb
mov
adc
mov
dec
or
insl
push
xchg
movsl
fdivrs
dec
mov
push
sbb
enter
movsl
hlt
push
and
mov
pop
mov
xchg
push
sbb
loopne
enter
sub
adc
insb
pop
imul
pop
dec
xchg
cmp
inc
adc
lods
inc
lret
xchg
inc
adc
mov
inc
insl
add
mov
scas
xlat
jae
imul
sarb
sbb
in
xor
jns
iret
adc
ret
adc
lahf
sub
pop
or
sub
xchg
pop
xor
or
pop
xor
out
int3
xchg
jmp
xchg
and
mov
pop
xor
inc
je
or
test
or
gs
adc
and
jge
or
lcall
and
xor
mov
aad
push
adc
mov
scas
mov
or
lods
cltd
cld
inc
mov
cmpl
dec
push
inc
adc
sti
ret
test
inc
xchg
fcoml
rorb
cld
popf
cwtl
xor
ret
ljmp
push
aas
mov
aam
xchg
mov
sbb
lock
xchg
icebp
and
ficoms
test
ds
mov
std
in
pop
push
std
sbb
add
jl
pop
jb
in
dec
insl
mov
push
jecxz
hlt
les
loopne
cmp
sbb
mov
add
cmp
dec
pop
xor
rorb
push
movsb
adc
sbb
cmpsb
les
and
mov
jle
test
cmp
sbbb
push
int
dec
out
ljmp
add
mov
pop
popa
les
jl
push
mov
cmpps
scas
pop
xor
fwait
adc
xor
scas
int3
cltd
js
loope
jno
sub
push
nop
dec
adc
adc
push
into
cmp
in
mov
pop
sbb
adc
mov
popf
xor
xor
out
fidivrs
and
sub
jnp
aam
sti
in
mulb
mov
jns
cli
jb
ror
push
jle
inc
je
testl
rorb
xchg
jns
rcr
push
sbb
cmp
cld
xchg
and
jg
jnp
mov
mov
addr16
push
ljmp
lret
fidivrs
push
jbe
mov
mov
cli
xor
mov
sbb
pusha
iret
dec
inc
outsb
addb
dec
lahf
mov
jno
xlat
and
xor
lahf
cmp
mov
jg
cmp
stos
add
js
movlhps
mov
adc
add
or
clc
jnp
jns
jno
mov
pop
cmp
mov
xchg
push
mov
add
daa
out
jp
call
cmp
int
cmp
test
cld
jl
ds
jp
lcall
xor
jmp
insb
out
imul
jb
fidivs
add
ss
mov
fdiv
insl
xor
fsubrl
or
sub
dec
stc
or
scas
sti
pop
jl
sub
or
cmp
xor
fcmovu
decl
and
xlat
lret
dec
fdivl
jge
push
fnstsw
scas
ret
in
sbb
pop
icebp
xor
sahf
or
in
aad
pop
sub
mov
insl
xchg
lds
xor
stos
push
imul
or
jp
aad
jecxz
mov
mov
inc
or
mov
sbb
sub
leave
jae
andl
and
and
and
mov
lods
add
sar
sub
xchg
mov
daa
test
btr
adc
mov
mov
and
mov
or
out
icebp
xchg
sbb
ja
lock
or
dec
cmp
icebp
idiv
pop
mov
pop
les
arpl
and
ficoms
push
sub
loopne
aad
xchg
rcll
lock
popf
clc
movsl
outsl
pop
ret
arpl
pop
push
mov
repz
sarl
fstpl
ficomps
enter
les
or
mov
js
arpl
repnz
mov
repz
gs
push
shl
xor
push
xchg
adc
jb
loop
ds
mov
js
mov
outsl
pop
or
ss
adc
xchg
xchg
out
enter
mov
mov
xchg
clc
into
mov
lahf
push
out
popa
jl
jbe
jo
push
mov
push
sub
xor
ret
fstpl
shrb
pusha
daa
pop
pop
sbb
jbe
and
fwait
into
ja
or
push
movsl
stos
xor
iret
mov
xor
movsb
fs
mov
sub
into
scas
repz
in
pop
stos
inc
jmp
inc
pop
add
cmpsl
test
xor
or
xorl
dec
stos
mov
es
and
or
mov
adc
jmp
adc
mov
xchg
xor
dec
loopne
test
cmp
stos
cld
ja
mov
xchg
cs
add
cld
jno
lret
sbb
mov
lock
lea
loope
clc
fsubrl
mov
fisubrs
xorl
inc
xor
or
xor
sub
ficomps
rclb
test
hlt
sti
sbb
dec
sbb
dec
ljmp
lret
and
xor
mov
js
aaa
mov
sub
pop
pop
jns
fs
les
cmp
push
je
pop
jbe
int
dec
xchg
out
push
push
push
sti
sbb
fimuls
xchg
shr
sbb
inc
fnstsw
jb
mov
mov
rep
out
sub
adc
or
sub
ret
mov
icebp
add
je
xor
ss
xor
sbb
addl
loop
sbb
mov
or
cmpxchg
hlt
jne
pop
loopne
mov
pop
xor
adc
roll
cmpsb
pop
lcall
rcr
aas
add
mov
xchg
movsb
push
and
stos
lret
aas
and
xchg
xor
cmpsb
jae
ja
mov
pop
jbe
shl
and
cmpsl
adc
in
shll
js
nop
sbb
adc
jge
ljmp
push
outsl
mov
adc
cmc
in
sbb
pop
add
loope
aam
mov
and
test
jle
inc
sub
and
mov
mov
das
jnp
inc
shl
daa
into
adc
cmp
out
pop
and
imulb
ret
mov
mov
pop
sahf
daa
sbb
push
pop
mov
mov
movsb
jmp
mov
push
imul
ret
sub
aad
inc
and
loopne
jae
repnz
pop
adc
repz
sahf
loop
pop
sbb
jo
mov
imul
hlt
lcall
cmpb
add
pop
inc
shll
sbb
dec
xchg
sbb
lret
in
gs
test
sbb
push
cmpsl
dec
push
es
sub
flds
cmp
cs
mov
subl
push
dec
sub
fcomi
ja
mov
pop
and
mov
ja,pt
leave
pusha
scas
mov
ljmp
std
push
push
pop
imull
xor
add
rolb
xchg
adc
push
dec
push
push
cltd
xor
dec
xor
call
mov
das
aaa
push
pop
lea
fmull
dec
insb
popa
shll
pop
jae
sub
xchg
das
loop
xor
aam
outsb
pop
in
or
jmp
jge
jne
mov
je
out
nop
fucomp
js
lods
je
mov
mull
and
mov
mov
xor
push
aas
mov
add
inc
cmp
lods
push
lods
mov
mov
adc
sbb
and
test
sbb
dec
add
lret
fsubrs
pmaxub
mov
iret
add
dec
adc
loope
and
popf
jne
sub
or
mov
roll
add
shrb
in
in
add
sti
dec
cmc
data16
adc
popl
cmp
add
stc
lahf
test
dec
rorb
push
mov
adc
xor
adc
mov
movsb
test
add
jo
push
test
repz
xor
cvtps2pd
int
fdivl
xor
flds
dec
cmp
repnz
pop
das
add
xor
cmc
mov
jle
sub
fisttps
fmull
and
and
xlat
loop
xchg
jae
mov
test
aas
in
dec
cmpsl
sub
fucom
in
xlat
std
or
pop
cmp
insl
push
jge
lea
mov
out
xlat
std
or
pop
cmp
insl
push
jge
lea
mov
out
xlat
std
or
pop
cmp
insl
push
jl
mov
mov
out
xlat
std
pop
or
pop
cmp
sbb
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
nop
inc
adcb
mov
jle
jae
xor
rolb
xor
and
push
addb
mov
adcb
mov
adc
and
xor
rolb
xor
and
push
addb
mov
adcb
mov
adc
and
xor
and
shlb
hlt
xor
or
mov
leave
pushf
ffreep
xchg
rcrl
and
fcomp
sub
fldl
daa
jns
dec
jg
dec
jno
sar
shr
sub
cmp
fcomip
pop
inc
inc
sbb
mov
ljmp
push
adc
scas
add
xor
lret
mov
nop
mov
cmpsl
fs
leave
loopne
loopne
fisttps
add
inc
rorb
add
lea
add
out
or
imul
or
mov
dec
rcl
mov
js
mov
add
push
jmp
mov
aas
inc
rol
dec
lock
adc
bound
mov
mov
adc
and
xor
rolb
xor
and
push
addb
mov
jecxz
mulb
out
mov
scas
push
lahf
inc
fs
pusha
lods
gs
in
add
adc
add
sbb
pusha
loope
mov
mov
mov
movsl
xor
addr16
cmpsl
out
and
fdivp
adc
add
insb
rclb
and
xor
rolb
xor
and
push
addb
mov
adcb
mov
adc
and
xor
rolb
xor
and
push
addb
mov
loope
sub
lds
push
mov
adc
mov
jno
dec
push
shll
mov
push
cmp
mov
enter
add
jmp
pop
scas
dec
cld
lret
sahf
or
jo
and
or
push
hlt
fistl
aam
int3
jo
mov
out
jb
xor
xor
or
aad
rcr
mov
mov
push
mov
mov
push
in
fcmovnu
jae
xchg
dec
or
loope
repz
sti
repz
lods
push
test
jno
and
fwait
movsl
jge
jnp
ds
mov
mov
mov
jbe
hlt
imul
add
test
pushf
call
cmp
add
mov
sbb
popa
addr16
cli
jbe
sarl
nop
mov
jp
sub
xor
add
dec
add
add
adc
scas
mov
lock
fisubrl
and
add
clc
mov
sbb
push
sbb
fsub
ret
adc
sbb
ds
xchg
outsb
cli
cs
mov
clc
and
imul
lock
sbb
lcall
inc
aam
hlt
mov
push
cmp
repnz
outsb
xchg
jp
add
mov
hlt
or
arpl
sbb
ret
or
xlat
imul
pusha
notl
mov
inc
addr16
mov
pop
dec
iret
xchg
sub
ret
jmp
jle
inc
push
flds
adc
adc
xor
outsb
sahf
mov
push
fbstp
pop
in
test
lret
mov
and
int
fiaddl
cli
pop
arpl
jnp
mov
lret
pusha
jb
adc
dec
clc
clc
fldt
lea
call
fstpt
add
mov
cmp
imul
adc
xor
inc
xchg
pop
clc
lods
inc
push
out
inc
inc
mov
je
clc
push
sbb
xor
push
cmp
imul
sbb
mov
mov
push
push
cmpsb
movsl
les
push
adc
aas
hlt
xor
inc
imul
rorl
or
push
shll
push
addb
arpl
mov
mov
bound
or
leave
rcrl
lock
aam
aas
ret
mov
dec
insb
negl
repz
push
jg
xlat
rolb
xchg
mov
sahf
xchg
lret
mov
push
lret
ret
ret
mov
jb
push
sub
sub
shl
jmp
mov
xlat
mov
sub
pop
dec
mov
aam
or
pop
mov
jns
jmp
mov
inc
sbb
dec
or
pop
mov
data16
scas
testl
inc
fisttps
jg
xor
adcb
xchg
push
hlt
mov
sub
sbb
pushf
loope
adc
mov
adc
dec
not
xorb
sub
jmp
inc
add
mov
or
add
popf
adc
add
mov
mov
xchg
in
inc
sub
xchg
in
test
dec
push
jp,pt
lock
andl
ret
pop
popa
xchg
pop
faddl
pop
xchg
cmp
or
rcll
out
mov
inc
gs
mov
xchg
lcall
mov
xchg
sub
pop
mov
cmc
xchg
sahf
ror
subb
cmp
dec
fldl2t
pop
xor
xor
xchg
jbe
in
or
or
inc
mov
call
push
push
pop
hlt
call
dec
mov
or
mov
mov
push
outsb
push
lds
clc
je
arpl
fwait
inc
push
xchg
jo
adc
xchg
sbb
xor
push
cmp
out
push
iret
push
jl
mov
adc
in
cs
incl
and
cs
adc
bound
add
pop
hlt
cmp
inc
test
imulb
jnp
mov
inc
push
dec
push
andb
inc
int
std
subb
jmp
loope
mov
es
mov
cmp
and
stos
mov
out
inc
dec
fldcw
jmp
adc
ss
outsl
filds
aas
enter
inc
jg
push
shll
add
and
call
mov
lds
stos
pusha
inc
sub
xchg
jl
gs
mov
sti
cmp
imul
xor
pop
mov
sbb
lods
and
jl
jb
ljmp
dec
lods
mov
sbb
xor
pop
ficoml
cmpsb
shlb
xor
and
out
loop
ljmp
addr16
int
dec
pop
fisubrs
movsl
ja
test
je
jno
js
aad
cmp
loope
into
imul
aad
mov
loope
jno
lock
pusha
les
xor
cmpsl
push
cwtl
cmp
inc
in
pushf
das
cmp
jmp
rcll
mov
or
adc
push
pop
push
pop
fnstcw
je
push
and
jbe
movsb
cltd
rcll
push
js
adc
add
jae
inc
ret
push
test
cmpsb
push
pop
out
mov
cwtl
inc
sub
push
mov
es
push
fbstp
cli
fisttps
inc
inc
insb
and
insl
jmp
mov
cs
ret
dec
mov
jl
ret
in
movsl
andb
push
icebp
mov
je
ljmp
or
int3
lahf
xor
jle
rcrb
mov
clc
adc
sub
or
xchg
mov
xchg
lret
or
mov
ja
decb
in
nop
lea
jg
outsl
inc
inc
adc
jmp
push
cmp
pop
int
fs
sub
xor
je
test
movsl
mov
lcall
sbb
pusha
cmp
subl
cmp
ss
mov
lcall
dec
mov
sub
add
andb
pop
lret
dec
sub
mov
sbb
arpl
inc
xor
xchg
fildl
inc
mov
imul
push
cmp
jecxz
cmp
xchg
mov
xorb
aad
jge
mov
mov
fs
fs
je
fnstsw
or
sub
call
cwtl
and
in
out
mov
movsb
pop
lods
insb
dec
idivl
loope
pushf
iret
sbb
sbb
xchg
or
scas
ljmp
inc
in
scas
push
arpl
shrl
jb
push
mov
ficoms
jge
repz
jns
rcll
add
into
or
xor
inc
es
xchg
sbb
sbb
pop
in
hlt
add
stos
and
aaa
fidivrs
dec
push
je
add
pop
sub
push
in
ffreep
jbe
outsb
cmpl
into
cli
das
mov
mov
jp
icebp
data16
sbb
bnd
mov
cmp
add
fcmovnbe
push
pop
add
lods
cmpl
scas
mov
lret
ja
loopne
adc
push
negb
adc
add
cmp
jl
sahf
sti
and
jge
xor
jbe
lahf
mov
repz
push
or
inc
nop
cmpsb
lcall
bnd
xor
or
cmp
shl
dec
ljmp
scas
mov
xchg
fidivrs
out
stc
xchg
xor
inc
andb
lcall
dec
nop
pop
adc
jno
inc
insl
dec
test
ds
repz
ret
fs
loope
push
mov
mov
pop
xor
mov
testl
scas
sub
movsl
jne
add
mov
mov
rorl
sbb
sub
sti
lret
push
lods
fptan
inc
sahf
jge
test
icebp
adc
out
push
bound
sbb
aas
stc
movsl
cli
add
push
stos
or
lahf
popa
out
dec
dec
or
addb
cmp
sub
add
push
mov
jle
sub
mov
jne
fimuls
jno
adc
and
mov
cmp
cmc
pop
insl
test
testl
inc
test
cmp
aaa
inc
lods
adc
sbb
bound
int3
add
mov
pop
movsl
xor
cmp
jno
mov
adc
sub
nop
pop
add
sub
int3
inc
and
pop
in
scas
repz
xor
pop
mov
int
mov
out
mov
xor
mov
fistps
in
mov
pop
arpl
das
mov
clc
push
pop
mov
and
adc
jp
fidivrl
outsb
add
cltd
orl
cmp
test
in
std
lock
cli
sub
das
scas
cltd
sub
jmp
jmp
stc
pop
cmc
lret
mov
xchg
in
and
fiadds
add
daa
in
bound
fnstsw
fwait
dec
pop
icebp
xchg
js
out
in
xor
inc
dec
popf
cmp
stc
data16
insl
std
or
pusha
mov
sarl
rcrl
xorb
mov
je
fisttps
shll
mov
mov
xor
cwtl
mov
pop
scas
xchg
leave
dec
xchg
lret
jns
push
lret
pop
xor
sahf
cmp
inc
lds
push
lret
fwait
adc
pop
in
jbe
arpl
fadd
mov
sub
nop
mov
ds
lret
aam
jnp
push
xor
aaa
cwtl
iret
fs
in
aad
aad
adc
sub
mov
or
adc
add
notl
in
mov
std
mov
sbb
shll
adc
ret
ss
xlat
mov
arpl
push
inc
jbe
sub
es
stos
mov
aam
cmpsl
stos
enter
fbld
mov
xchg
mov
movsl
push
mov
adc
pop
mov
jnp
push
fisttps
lock
add
inc
imul
jmp
loop
test
test
xchg
pop
aad
add
mov
xchg
mov
and
jns
or
insl
aaa
pop
mov
outsb
jge
repz
cmp
push
or
add
pop
cmovno
andb
mov
in
cld
mov
stos
cmpsb
mov
test
aam
popf
nop
xor
dec
and
inc
ret
das
scas
rorl
dec
arpl
cmp
pop
jns
fwait
fwait
xchg
xor
adc
aam
sub
popf
mov
test
ljmp
cmp
mov
add
enter
ss
sbb
mov
jae
call
lret
stos
or
sbb
add
mov
add
cmpps
mov
dec
sbb
add
inc
gs
ja
cwtl
pop
dec
dec
sub
and
out
imul
leave
adc
xchg
out
pop
pop
sub
mov
mov
test
fwait
or
fiadds
cmp
fildll
dec
fsub
lods
cwtl
jle
fldcw
test
int
sbb
fstpl
push
stos
scas
repz
andl
sub
sbb
cmp
inc
sbb
aaa
and
or
push
mov
mov
or
sbb
dec
push
add
sbb
xchg
mul
pusha
mov
aam
cwtl
sbb
push
nop
or
sub
das
cmp
adc
addr16
xor
xor
jns
ja
xchg
inc
inc
fwait
push
jmp
push
cmp
pop
out
jg
inc
movsb
incb
mov
and
jb
xor
or
mov
inc
les
enter
pushf
das
adc
aam
push
fisttps
es
xchg
push
js
repz
cld
aas
jge
subl
jne
push
nop
add
mov
xchg
test
pushf
rcl
mov
out
adc
popa
xor
mov
jmp
in
lret
addl
xor
dec
cmp
and
and
in
push
lcall
push
push
rclb
mov
mov
ljmp
mov
push
adc
xor
adc
shlb
clc
or
push
and
nop
sti
xchg
fildll
ljmp
pushf
push
jo
aas
and
cmp
mov
mov
and
sub
fistl
ret
std
aad
push
imul
js
sub
mov
dec
xor
sub
fsubrp
mov
mov
arpl
push
push
popf
sarl
imul
cmp
adc
mov
repz
inc
adc
scas
cld
test
jmp
mul
xchg
mov
cmovp
pop
dec
pop
out
sub
or
dec
adc
test
stos
xor
xchg
fldl
leave
xor
and
sub
xchg
mov
jne
sub
and
test
popf
fldenv
out
popa
xchg
and
test
cmp
pop
add
sbb
movsb
sbb
lock
in
sub
in
push
repz
sub
and
stc
push
cmpl
je
popf
sub
insl
cld
popl
das
data16
sbb
arpl
rcrl
jg
sti
push
enter
leave
mov
mov
mov
mov
test
sub
inc
leave
push
xchg
mov
cmpsl
sahf
aad
jmp
loopne
hlt
jb
rorb
pop
xchg
xchg
dec
inc
sub
hlt
jbe
fisttpl
mov
add
inc
push
stc
pop
loopne
jecxz
gs
pop
out
pop
sub
cwtl
inc
or
pop
xor
or
call
incl
insb
movsb
and
loop
and
inc
rclb
loopne
jl
cwtl
add
jbe
cmpl
gs
adc
or
leave
fwait
and
repz
filds
stos
int3
in
mov
xor
shll
mov
adc
jp
fidivrs
xor
lcall
push
mov
loopne
mov
in
mov
jle
fwait
orb
mov
adc
leave
js
bound
sub
xor
xchg
gs
cmp
lcall
fcom
stos
mov
subb
test
mov
and
pop
and
push
adc
inc
insb
fldenv
aaa
nop
fldenv
sub
mov
or
pop
ret
cmpsb
out
or
nop
jns
int3
or
add
rorl
test
lock
xchg
scas
lods
arpl
xor
mov
push
das
repnz
int3
mov
jns
das
jns
cmp
sbb
fsubrl
cs
pop
push
or
lahf
push
ss
imul
xchg
pop
stos
sbb
xor
es
call
sub
push
push
sbb
mov
xlat
cmp
sub
daa
sub
mov
xchg
cmp
dec
push
lret
popf
mov
jb
shll
or
addr16
lea
movsl
mov
xor
dec
test
xchg
push
mov
cs
inc
loop
xchg
loope
popf
push
xchg
scas
and
in
xor
mov
in
outsl
sbb
lahf
test
shlb
pop
ljmp
mov
outsb
dec
jno
push
dec
out
push
dec
mov
or
dec
pusha
filds
icebp
sbb
dec
push
dec
dec
repz
inc
jne
loopne
mov
in
or
repz
adc
arpl
dec
adcl
clc
leave
dec
inc
popf
push
paddq
inc
repz
loopne
jae
stos
cmp
movsb
cli
xor
or
xchg
or
test
cwtl
jecxz
stos
push
xchg
das
mov
xchg
mov
mov
mov
sbb
and
stc
stos
in
and
das
adc
pop
enter
mov
inc
jp
int3
icebp
xchg
clc
cmc
adc
mov
mov
inc
mov
and
sbb
popa
adc
push
fucom
ds
sbb
push
mov
xchg
sub
jae
dec
jno
push
cwtl
sub
mov
in
adc
into
jo
rcll
sahf
pusha
aam
scas
dec
add
clc
push
inc
mov
scas
call
and
or
jl
mov
lcall
daa
push
cmp
stos
mov
add
aam
aaa
scas
mov
jle
sti
out
imul
mov
mov
and
inc
inc
push
mov
add
fildl
inc
jl
jns
mov
gs
mov
ds
sub
xor
cs
popa
xchg
aam
testb
lahf
shlb
xchg
or
jle
cli
cmc
push
cmp
pop
int3
in
arpl
shl
movsl
cmpb
cmp
fmull
add
aam
lds
mov
inc
jp
jno
outsb
popa
dec
cwtl
sbb
into
or
dec
fwait
sbb
sub
sub
push
mov
cmp
xchg
or
div
jg
cs
outsl
hlt
test
xchg
jnp
in
scas
mov
clc
mov
scas
sbb
ds
addr16
or
js
jnp
popf
sbb
lock
insl
roll
add
add
gs
ss
sub
pop
hlt
loop
fcompp
femms
jbe
lea
or
inc
sub
mov
sub
inc
or
jae
popf
scas
scas
or
mulb
pop
mov
sub
outsl
mov
add
cmpsl
pop
ret
rclb
dec
mov
push
je
movsl
scas
popf
fcmovnbe
pop
arpl
mov
cmc
out
rolb
push
testb
clc
bound
lcall
adc
mov
lahf
push
mov
push
xlat
jns
jbe
movsb
cmpb
pop
bswap
cwtl
fisttps
sbb
pop
lmsw
push
ja
sub
loopne
test
fs
jmp
in
inc
jae
arpl
mov
sub
ljmp
loope
mov
insl
hlt
mov
js
movsl
shrb
int3
mov
pusha
test
lret
pushf
mov
vpcmpeqb
xorb
mov
inc
sti
lcall
xor
mull
cmpsb
pslld
loop
div
pop
clc
adc
xchg
sbb
sub
jecxz
jle
hlt
xlat
xchg
cwtd
xor
xor
cmp
cmp
mov
jns
adc
std
add
or
ljmp
push
jge
iret
add
sub
call
adc
mov
and
mov
pop
call
imul
sub
imul
mov
test
pop
inc
jmp
int3
stos
xchg
mov
or
divb
jae
pop
outsb
pusha
cmp
xchg
add
inc
shr
mov
sbb
mov
rorl
dec
test
in
loopne
and
mov
imul
andl
rcrl
dec
jecxz
mov
clc
lahf
ds
rcl
jbe
fsubp
pop
les
pop
mov
adc
push
cmp
mov
xor
shrl
jbe
jnp
inc
push
insl
sub
into
pushf
aad
cmc
mov
cmpsb
push
push
inc
adc
lock
adc
sbb
jl
sub
cs
dec
inc
dec
test
icebp
add
push
sub
cmp
imul
xor
mov
push
cmp
out
mov
jge
pop
cmp
leave
bound
dec
mov
loope
sub
lret
idivb
sub
loope
cmp
addr16
mov
addb
inc
cs
dec
adc
out
xor
shll
fcmovnbe
insb
cmp
inc
dec
xchg
loopne
jl
loop
arpl
push
or
test
cmp
imul
in
mov
mov
xor
add
fsubp
test
cmp
cmp
inc
and
ljmp
cmpsl
inc
mov
call
jo
sbb
mov
inc
dec
cmpsb
push
or
push
fdivl
pop
in
outsb
mov
sti
stos
mov
lret
int
ljmp
mov
inc
cmpsl
push
int3
push
mov
mov
cmp
mov
andl
outsb
pop
add
fdivl
addr16
dec
add
ja
xor
jae
adc
testb
pusha
aad
add
hlt
out
sub
cld
and
pop
rclb
test
int3
stos
mov
in
cmp
push
adc
pop
fcoms
orb
inc
inc
xor
std
jmp
mov
pop
sub
notl
jg
cmp
xchg
je
lods
dec
mov
cltd
jmp
adc
cmp
inc
pop
lock
loopne
mov
loop
fcomps
mov
mov
xor
or
push
std
jmp
xor
xchg
test
cld
shlb
loope
jp
clc
xor
addb
repnz
es
or
dec
pcmpeqb
or
fdivs
adc
jl
push
test
add
push
out
push
cmp
les
lahf
dec
mov
push
pop
jno
mov
mov
ficoml
cltd
pushf
imul
fimull
cwtl
or
xchg
lret
push
cltd
xchg
dec
ficompl
pop
int
adc
mov
mov
paddsb
outsl
and
loop
aad
pusha
push
dec
outsb
mov
cli
adc
pop
addl
fnsave
les
pop
inc
jmp
repz
aam
mov
popa
mov
adc
and
xor
rolb
xor
and
push
addb
mov
adcb
mov
adc
and
xor
rolb
xor
and
push
addb
mov
adcb
mov
adc
and
xor
rolb
xor
and
push
addl
nop
inc
adcb
mov
nop
jo
pusha
iret
out
aas
jp
loopne
xchg
or
outsl
mov
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imul
sbb
push
hlt
jmp
mov
test
sub
xor
add
adc
fs
inc
inc
push
sub
stos
test
and
rclb
push
movsl
fcoms
les
cmpsl
cmpsb
gs
adc
inc
insl
arpl
inc
into
push
ficoms
dec
pop
in
aas
mov
in
sub
mov
xor
mov
outsl
dec
rcrb
rorl
jnp
jg
popa
in
cmp
lds
je
and
add
xchg
adc
insl
add
add
repz
cmp
push
sbb
jns
aaa
inc
mov
pusha
dec
adc
inc
inc
gs
mov
push
stos
mov
out
xchg
add
imul
sub
mov
push
aam
fwait
in
idiv
add
sbb
fs
in
jnp
xchg
xchg
pop
mov
cmc
xchg
lds
mov
jmp
dec
lods
adc
out
jge
andb
cmpsb
add
xor
add
js
fs
inc
in
push
push
movsl
es
test
cmc
lds
je
add
add
add
mov
loopne
loope
cmpsb
lcall
inc
mov
adc
sub
xor
clc
lock
mov
mov
je
push
jo
dec
je
inc
inc
push
push
movsb
movsl
mov
test
hlt
cmc
and
xor
add
adc
fs
inc
inc
push
push
movsb
movsl
mov
test
hlt
cmc
and
lock
lods
call
sbb
out
add
lock
addr16
jg
sbb
mov
xchg
or
pop
add
fnstsw
pop
repnz
xor
sub
mov
pop
jae
xchg
xchg
sbb
xor
dec
jb
je
stos
cli
in
adc
cli
les
loope
notl
xchg
mov
icebp
stos
push
add
mov
loopne
xor
out
inc
sub
push
xor
nop
fsubl
cmc
jne
inc
xchg
popa
cld
adc
cmpsb
mov
test
mov
jne
lods
cmp
jmp
or
cmpsl
cmpsb
mov
mov
mov
inc
dec
das
sbb
in
jns
in
loop
dec
in
fcompp
mov
sbb
adc
cmp
dec
repz
push
sbb
ja
mov
test
int3
hlt
inc
int3
aaa
sbb
out
jmp
dec
mov
xorl
pop
shll
fstpt
push
cmpsb
int3
sub
mov
add
pop
add
ret
xorb
pop
inc
fs
push
movsb
mov
stos
and
and
mov
dec
push
sub
xor
leave
jno
mov
pop
or
rcrb
jne
push
jbe
mov
add
and
push
dec
mov
js
inc
cwtl
pop
jnp
pop
mov
add
test
iret
lds
hlt
push
xchg
aas
and
cltd
mov
xor
comiss
pushf
jo
mov
pop
xchg
ja
repnz
ljmp
lock
popf
mov
sub
mov
fistpl
call
xor
sub
mov
xlat
push
les
mov
fs
pushf
sbb
push
arpl
xchg
imul
pop
sub
clc
push
push
test
and
push
incb
xchg
sub
lret
and
fst
jmp
idivb
xchg
or
inc
cmp
lcall
pop
clc
xchg
push
pop
in
add
pop
int3
jns
enter
xlat
pop
cwtl
aad
pop
jge
xchg
xchg
sbb
or
mov
or
cs
mov
lea
sub
xchg
pop
pop
subl
dec
dec
push
xchg
jmp
movsl
fsubrs
adcl
stos
sti
adc
xchg
cmpsl
outsl
lret
mov
add
lret
push
aaa
icebp
or
mov
add
xor
fcoms
ret
mov
dec
cmp
loopne
mov
jecxz
cmp
push
jl
adc
clts
subl
lods
xchg
pop
fisubs
stos
sub
and
das
out
pop
int
pushf
out
inc
enter
mov
inc
jnp
loopne
inc
pusha
or
cmpsl
aam
sbb
fsubrp
ret
jne
pop
dec
loopne
adc
sub
push
fcmovu
mov
je
imul
xchg
aaa
into
in
test
jecxz
jp
mov
packssdw
jae
dec
loopne
jae
xchg
lods
ret
mov
in
xchg
rcrb
cmp
push
aad
movsb
incl
or
dec
mov
pusha
ret
inc
aaa
fdivrp
or
xor
xor
push
and
xchg
fsubrl
and
scas
arpl
or
fdivl
cltd
inc
cmpsl
lret
imulb
faddl
xor
push
ret
pop
in
sbb
sub
stos
pop
into
mov
pop
sub
mov
mov
filds
fsubr
push
xchg
add
xchg
in
push
mov
gs
jmp
outsl
dec
pushf
cmp
cmp
pop
outsb
aas
sbb
jmp
ror
jmp
nop
pop
out
pop
mov
lcall
stc
pop
nop
push
lcall
scas
xchg
movsl
adc
insb
mov
sub
icebp
iret
xlat
jmp
fcoms
in
xor
ror
das
fldl
nop
mov
lods
scas
fxch
stc
call
adc
push
adc
xor
sub
insb
mov
push
cmpb
inc
adc
jl
mov
jmp
jae
sbb
mov
add
push
fisttps
push
mov
inc
jmp
ret
ret
adc
scas
int
pop
fwait
cld
mov
clc
sub
cmc
stos
pop
data16
out
inc
inc
cld
pop
cmpsl
out
cs
xchg
stos
mov
add
imul
loopne
hlt
clc
inc
xchg
stos
imul
xchg
sub
mov
mov
fsubs
enter
push
mov
pop
ss
lods
cmc
insl
aad
ret
aaa
adc
inc
andb
jp
sbbb
push
jae
cmp
inc
xchg
repnz
mov
mov
and
mov
sub
movsl
in
add
xchg
loopne
cmp
mov
and
lods
enter
sbb
int
sub
int
pop
sub
dec
push
cmp
push
ja
std
fstl
adc
inc
lahf
mov
lcall
pop
jno
xchg
clc
loop
pop
outsb
addb
inc
dec
add
fld
pop
xchg
add
sub
std
and
imul
adcl
hlt
push
or
mov
mov
out
out
cmp
icebp
jl
xchg
bound
int3
ds
loop
mov
lods
jg
out
sbb
pop
push
movsl
mov
mov
movsb
arpl
lods
jle
mov
dec
test
mov
jb
pop
loope
into
add
mov
movsl
sbb
inc
or
and
sub
test
pop
mov
jl
sbb
adcl
out
cmp
cmp
sar
jecxz
loop
int
divl
cmp
and
cmp
sub
and
imul
add
mov
stos
fdivrs
mov
ds
outsb
cmp
push
push
cmp
cltd
adc
jle
add
push
aaa
fstl
lock
sarb
pusha
lcall
mov
pop
subl
add
and
sbb
int
sbb
cmp
cmp
mov
mov
sarl
cmpsb
and
pop
sti
dec
or
test
jle
btr
xor
sub
das
call
xor
sti
xor
push
cli
adc
arpl
mov
imul
pop
or
add
pop
dec
andl
fdivrs
push
imulb
adc
push
ret
jl
imul
das
dec
pop
lret
and
popf
stos
add
fldcw
sbb
inc
mov
dec
dec
cmp
dec
lcall
mov
xchg
cmp
test
int3
enter
mov
xor
xor
and
in
test
in
cwtl
addr16
jmp
popf
push
sbb
stos
xchg
pop
mov
push
jmp
sti
rcr
xor
cmpsb
in
daa
js
rcll
jmp
cmpsl
pop
leave
mov
xchg
or
aam
mov
pop
jp
dec
pop
inc
nop
xor
cmp
sbb
outsl
repz
cmp
xchg
push
out
pop
testl
sub
inc
je
out
cld
or
dec
test
dec
aas
loop
lods
out
jns
test
inc
and
or
jmp
icebp
mov
inc
shlb
stos
sub
pop
fimuls
pop
inc
stos
sub
rcll
scas
sbb
mov
cld
mov
mov
flds
add
cmp
push
fs
xchg
movsb
fwait
jge
push
int3
jnp
adc
mov
inc
adc
xchg
test
rorl
cltd
lods
pop
jge
and
add
shlb
and
mov
add
jo
and
xchg
addr16
mov
adc
loope
leave
hlt
mov
loopne
test
leave
add
mov
std
mov
arpl
cmc
mov
lret
pop
inc
mov
in
adc
icebp
jno
add
mov
shlb
push
std
mov
insb
mov
ret
and
add
js
dec
adc
ljmp
push
push
in
subl
fidivs
mov
jb
mov
cmp
scas
repnz
or
dec
mov
mov
mov
or
xchg
pusha
ret
add
sub
test
leave
incl
in
xchg
ss
movzwl
das
push
mov
xor
inc
sarl
insl
sbb
sarl
xchg
mov
dec
pop
in
in
sbb
test
ljmp
insl
and
and
mov
add
jns
or
sbb
in
sub
push
or
ds
mov
fucomip
je
xchg
subl
mov
lea
push
push
loopne
push
and
dec
cmp
jns
fucomp
popa
xchg
jle
out
aam
ret
xchg
sbb
icebp
pop
insb
and
or
imull
mov
mov
pop
jge
ljmp
insl
call
movsl
push
lcall
inc
pushf
jmp
pop
ret
stos
ret
test
jne
lahf
stos
mov
and
mov
or
jp
stos
and
cmpl
in
mov
mov
and
pop
mov
cmp
and
push
pop
xchg
jle
rclb
call
shrl
jmp
stos
loope
pop
mov
int3
inc
push
mov
pop
call
cli
ljmp
push
mov
jle
dec
pushf
sbb
add
or
arpl
test
xchg
cmp
ficoms
sbb
jg
aaa
cltd
mov
popa
shll
sbb
xor
cmp
fmull
outsb
or
outsb
shrl
add
aad
ja
sahf
xchg
fidivl
sub
mov
outsl
clc
mov
jae
lahf
jnp
mov
sub
sbb
cmp
ljmp
rorl
or
ud1
mov
or
xor
fwait
mov
cwtl
or
es
dec
jg
sub
ja
pop
mov
or
jecxz
verw
mov
mov
ret
lock
jno
test
inc
push
test
adc
jg
enter
xchg
cld
in
cmp
push
xchg
jp
aad
mov
les
in
pop
sub
fadds
mov
xlat
movsl
push
je
inc
outsb
or
cmc
bound
xchg
cli
out
dec
push
addl
push
and
dec
call
fcomps
jo
mov
insb
rorb
movsb
lods
mov
fld1
lods
jmp
jge
cmp
pop
aam
mov
daa
sar
sahf
jp
add
loope
mov
stc
mov
adc
pop
xchg
push
fwait
jns
mov
mov
mov
popa
in
push
sub
jecxz
mov
arpl
adc
addr16
lods
pop
sbb
inc
jl
dec
inc
adc
push
call
xor
jmp
inc
cld
enter
inc
sti
jmpw
in
add
push
stc
or
push
xor
loopne
ss
or
movsl
aas
push
daa
gs
inc
rcrl
push
out
inc
push
mov
push
in
js
xlat
clc
xchg
je
dec
xchg
sbb
arpl
dec
testb
jg
inc
adc
xor
loopne
out
mov
mov
pop
pop
cmp
bswap
sahf
fs
nop
std
shlb
fldt
pop
adc
xorb
mov
shr
loope
movsb
dec
daa
push
ret
jg
pop
ret
pop
cwtl
or
bound
inc
or
in
cmp
inc
divl
jecxz
shll
xchg
in
ror
push
add
adc
jo
sbb
aaa
movhps
inc
outsb
arpl
jp
push
ficomps
mov
xor
jnp
sub
test
aam
mov
inc
sahf
sub
jge
lods
dec
inc
das
idivb
jp
inc
mov
dec
gs
clc
jmp
push
pop
jb
jge
js
cmc
cmp
inc
fidivrs
or
or
cmpsl
fcoms
test
adc
push
sbb
push
add
es
xlat
rclb
xchg
sub
jg
enter
rcrb
fsubrl
jp
pop
aas
mov
icebp
ret
enter
fcoml
dec
cmpsl
xor
or
punpcklbw
in
out
xchg
adc
clc
add
stos
aaa
inc
xchg
ja
aam
mov
test
push
xchg
sbb
aaa
scas
adc
clc
lret
pop
outsb
jo
pop
jmp
lahf
bound
pop
adc
or
mov
cltd
pop
in
inc
sub
into
cmp
push
fs
sahf
and
jo
sub
aaa
mov
bound
xchg
xor
cmpsb
cltd
lcall
cmpb
adc
adc
daa
cmp
movb
insl
sbb
mov
add
mov
sbb
jmp
jnp
mov
inc
lods
cli
stos
test
inc
int
out
test
roll
ss
cmpsl
add
push
mov
fdivrs
sub
dec
faddl
jbe
xor
and
bound
xchg
stc
and
in
sub
pushf
repz
pop
mov
jno
fwait
ret
je
add
jg
imul
ja
mov
fwait
jle
fwait
mov
popf
ss
stos
pop
mov
cmp
sub
loopne
or
ja
iret
adc
clc
in
data16
pop
dec
mov
in
and
and
mov
in
adc
lret
or
cli
dec
dec
add
adc
rorl
dec
jmp
add
scas
aas
fstpl
jmp
pop
rolb
dec
mov
lods
aad
sub
mov
jle
in
std
jmp
push
pop
or
scas
add
inc
sbb
dec
rcl
push
xor
and
dec
xor
mov
add
jle
sbb
pop
arpl
mov
mov
popa
xor
or
mov
jb
mov
or
sub
je
inc
xlat
lahf
roll
xlat
gs
cmp
xchg
xor
xchg
push
rcrb
add
pushl
popl
int3
in
pop
cmpsl
sub
movsb
jg
int3
mov
jns
roll
sbb
pushf
imul
push
xchg
fs
repz
adc
dec
xchg
sbb
mov
mov
or
imul
arpl
das
sbb
mov
jae
cmp
pop
je
add
lret
sub
sar
out
mov
mov
push
xor
adc
mov
mov
insb
inc
inc
xchg
mov
sbb
mov
or
xor
cld
add
shrb
pusha
in
cli
jnp
cmp
in
popa
dec
movsb
add
je,pn
inc
stc
movsb
popf
add
xchg
ror
js
push
lahf
mov
addl
push
and
std
pop
sub
int3
or
pop
jmp
jns
mov
mov
or
fucomip
sahf
sub
das
dec
sbbl
outsl
pop
lock
icebp
mov
sarl
aaa
xor
xor
sahf
aas
nop
pop
xor
add
inc
les
push
dec
xchg
add
cmc
mov
sbb
repz
lahf
push
xchg
scas
mov
xchg
cmp
jg
arpl
jecxz
in
cli
fsub
push
scas
cltd
es
nop
orb
test
lret
lret
cmp
hlt
mov
cmpsl
imul
mov
pop
cmc
mov
pop
jo
out
dec
lods
insb
in
ret
outsb
jl
in
popa
sbb
xor
mov
stos
outsl
aad
jle
xor
mov
cmp
insl
sub
ret
mov
mov
and
jnp
jo
cmp
jl
cmpb
clc
pushf
mov
pop
or
xor
push
lret
or
aam
into
mov
fnstenv
push
xor
aas
ret
ja
int
jae
imull
add
pop
jmp
dec
jmp
pop
ss
sbbl
fs
in
mov
inc
sbb
push
loope
cs
cmpsb
push
pusha
mov
icebp
lret
pop
push
jg
mov
fisubl
push
inc
mov
shrl
adc
cmpsb
adc
lock
mov
pusha
gs
push
xor
cmpsb
lods
sbb
dec
sti
mov
jp
insb
mov
cs
adc
mov
xlat
lds
cmp
gs
in
aad
jmp
sub
std
sahf
neg
cmpsl
test
sbb
rclb
sbb
pop
in
sbb
dec
mov
std
jecxz
sub
push
movsb
sahf
xchg
loop
testl
push
movsb
insl
cs
xor
xchg
das
dec
xor
add
push
push
pop
ret
mov
and
inc
push
daa
ret
ret
insl
mov
cmp
ja
jo
pop
in
popl
mov
push
loopne
mov
sarl
xchg
jno
inc
lea
sti
mov
inc
and
push
pop
sub
mov
cld
loopne
lock
faddl
bnd
jns
dec
loope
push
or
lods
jno
inc
insl
lahf
inc
push
out
imul
xor
sub
pop
out
pushf
or
or
pop
cwtl
add
lcall
imul
push
xlat
shrb
shlb
inc
cltd
adc
sub
fucomi
and
mov
sub
test
outsb
inc
arpl
daa
cmp
in
push
sbb
push
and
aad
shrb
pop
jp
dec
les
sub
or
jecxz
in
ja
sub
add
inc
mov
and
mov
outsl
pusha
outsl
xchg
push
adc
or
jmp
out
adc
stos
jno
leave
mov
aas
test
add
gs
cmpsb
and
jg
js
and
out
push
mov
imul
fidivs
idiv
cld
jae
lods
outsl
mov
dec
add
enter
cmp
pushf
fstp
add
pop
inc
dec
movsl
lret
sbbb
and
dec
ret
mov
push
jl
cmp
cmp
adc
movsb
dec
andb
nop
nop
js
xchg
mov
mov
or
loopne
insl
cmp
das
push
fs
jbe
and
pop
scas
mov
lahf
sub
mov
xchg
aas
sbb
mov
stos
xlat
stc
ja
in
dec
sbb
mov
das
cmpsb
adc
ror
cwtl
xchg
imul
out
lahf
scas
popa
shlb
roll
sbbl
pop
pop
adc
mov
test
xor
les
sbb
into
rcl
xor
ljmp
in
lcall
insl
jb
or
pop
js
iret
fldl
push
iret
push
jo
mov
cmp
add
cwtl
data16
cmp
and
leave
call
repnz
nop
cld
mov
test
and
out
stos
pop
and
sub
pop
inc
xor
jmp
xchg
repnz
sbb
addr16
mov
sbb
imul
or
add
jo
cmc
dec
data16
xor
mov
daa
leave
and
es
call
imull
push
rorl
or
pop
mov
lods
inc
cmp
pandn
popa
mov
sub
add
jmp
imul
jecxz
lods
leave
lret
fadd
mov
push
lcall
sbb
sbb
pop
xchg
jb
jbe
sbb
mov
xor
idivb
pop
icebp
push
mov
arpl
add
inc
pop
rorl
mov
stos
mov
xlat
dec
jecxz
jbe
push
movsb
flds
inc
cmc
sbb
mulb
out
add
jecxz
fsubr
mov
imul
cmp
sub
test
mov
mov
pop
push
sub
lret
jp
out
iret
mov
lock
icebp
loopne
out
mov
cltd
dec
leave
or
in
jg
iret
ljmp
or
iret
sub
rorb
xchg
mov
incl
mov
ret
fwait
lds
cmpsb
cltd
jle
enter
mov
mov
sbb
out
leave
aaa
mov
shll
in
xchg
loopne
push
clc
or
push
stc
hlt
orl
adc
mov
mov
jg
daa
pop
push
aad
and
cs
sbb
bnd
inc
aam
or
pusha
xchg
iret
leave
divb
sahf
outsb
pop
fcomip
lret
add
dec
gs
bound
loopne
and
inc
out
mov
bound
sarl
lock
and
mov
pop
sbb
pushf
filds
xchg
stc
test
cs
adc
pop
pop
cld
movsl
mov
cmp
test
pop
jnp
fwait
test
cmpsl
mov
add
cmpsb
or
rolb
pop
fadds
or
jle
jnp
roll
lods
fcoml
movsb
add
cmpsb
jne
outsl
mov
sbb
bound
aaa
out
aas
push
in
jbe
add
xor
or
jp
xchg
and
je
les
mov
lret
call
ret
lret
dec
pushf
cmp
dec
sti
fdivrp
mov
add
push
mov
aas
out
pop
hlt
or
xor
cmp
aas
lods
jbe
stos
sub
cmc
inc
in
popa
inc
mov
inc
xor
fs
inc
inc
push
push
movsb
movsl
mov
test
hlt
cmc
and
xor
add
adc
fs
inc
inc
push
push
movsb
movsl
mov
test
hlt
cmc
and
aaa
xor
gs
inc
inc
push
push
mov
test
cmc
rol
aad
and
cmp
fs
inc
aam
movsb
movsl
dec
pop
test
cmp
sub
jo
pusha
lahf
push
scas
inc
aas
std
add
jle
or
lock
shrb
sarl
dec
mov
jg
pusha
lahf
push
scas
inc
mov
adc
add
shrb
sarb
and
jg
sbb
inc
mov
adc
add
lock
jl
jo
dec
mov
iret
ss
out
jg
popl
push
fisubrl
stc
clc
stos
push
sbb
clc
daa
xchg
or
movsl
pop
in
add
mov
rol
sub
or
mov
and
scas
std
mov
das
inc
aas
das
dec
dec
mov
repnz
xor
out
dec
pop
je
xorb
outsl
fstpl
scas
subb
pusha
cmp
xor
add
gs
sbb
mov
lcall
imul
inc
lcall
pop
mov
push
call
pop
pop
sarb
lea
and
mov
pop
popf
scas
add
cmpsl
movups
shr
daa
loopne
sub
sti
mov
sub
xor
and
adc
loopne
sarb
shlb
mov
adc
fstl
cmp
sub
je
add
rcrb
push
mov
mov
push
adc
into
sub
xor
push
xchg
xchg
push
dec
rorb
pop
mov
into
adc
push
cmc
adc
fldenv
aas
ljmp
jl
and
adc
add
lock
shrb
sarb
dec
mov
jg
pusha
lahf
push
scas
inc
mov
adc
add
lock
shrb
sarb
dec
mov
jg
popl
int
outsl
xchg
into
push
and
sti
mov
mov
iret
shll
dec
stc
xchg
xor
rorl
sti
mov
aaa
enter
stos
push
jbe
xchg
mov
jle
ljmp
aaa
pop
sahf
adc
adc
push
jns
aas
sub
mov
loopne
pop
mov
or
fildll
addps
jle
xchg
lret
push
sub
cmp
mov
mov
enter
jge
mov
loop
xor
dec
adcl
jae
sub
in
icebp
lahf
push
movsb
xchg
jecxz
fnstsw
imul
insl
pcmpgtb
scas
inc
fwait
jbe
mov
or
ficoml
test
ss
xlat
xchg
mov
sbb
mov
sub
ss
andl
call
jno
mov
dec
in
sti
mov
dec
xor
and
jo
in
jmp
hlt
sub
sbb
sub
fstl
js
push
mov
jns
pop
xchg
or
jbe
in
pop
or
leave
loope
js
jecxz
pop
flds
inc
pushf
fstpt
fs
das
jl
dec
int
or
ljmp
sub
or
out
mov
xor
jo
push
stc
sbb
jno
cmp
cmp
shl
subb
addr16
clc
mov
and
or
arpl
repz
enter
mov
hlt
fldl
inc
bound
sbb
push
push
clc
jmp
mov
jmp
adc
inc
fsubrl
mov
and
pop
nop
mov
inc
lock
xlat
cmp
mov
jl
outsb
imulb
mov
nop
push
cwtl
in
mov
shll
fisubrl
push
ds
gs
mov
lcall
lods
fcmovnbe
mov
push
daa
sbb
and
cwtl
insl
mov
inc
pop
push
loope
xchg
inc
cltd
cmp
dec
jb
xchg
or
sub
test
add
sbb
insb
cld
neg
adc
add
stos
rcrl
cmc
cltd
cmpsl
lods
add
inc
jae
sbb
adc
shlb
xchg
sbb
stos
xchg
out
mov
cld
xor
add
push
pop
lahf
iret
lock
outsl
mov
adc
jb
cmp
mov
mov
in
or
gs
sub
imul
jo
or
add
sbb
cmp
adc
xor
mov
or
dec
inc
adc
adc
stc
xchg
movsl
and
rcrb
jl
or
lock
in
shlb
dec
pushf
mov
sahf
les
mov
lcall
mov
sbb
jge
mov
push
mov
in
jns
push
stos
cmp
adc
xor
in
mov
repnz
and
pop
and
fdivl
cmp
outsb
cmp
rcrl
jne
decl
cwtl
jo
adc
push
xchg
shl
xor
add
xchg
fnstcw
data16
lods
xchg
and
jge
nop
sbb
xor
or
adcl
xchg
je
xchg
sub
dec
scas
int
hlt
mov
ret
mov
lahf
add
xlat
enter
andl
data16
xchg
and
test
arpl
dec
adc
push
adc
pusha
jmp
repnz
rclb
nop
test
cmpsb
roll
lcall
cmpsb
xchg
fildll
mov
sub
insl
gs
jno
jo
pop
iret
and
int3
outsb
mov
cmp
ljmp
jecxz
gs
jecxz
inc
repnz
fisttps
and
lret
adc
ret
jnp
int3
add
push
mov
popf
lods
in
aaa
or
mov
insb
dec
mov
and
inc
jp
inc
pop
loopne
sti
pop
or
jbe
mov
test
dec
rcr
pop
hlt
add
mov
pop
lcall
cmp
arpl
hlt
mov
push
sbb
xchg
out
pop
xchg
fcompl
test
in
loope
jge
mov
test
lock
bnd
push
std
rclb
addl
dec
push
dec
movsb
lds
push
fisubs
cs
jmp
or
mov
cmp
mov
xlat
lcall
push
jnp
push
int3
aad
push
mov
xor
adc
mov
adc
outsb
leave
test
cmpsl
leave
dec
pop
adc
and
pop
aaa
lock
xor
insl
sub
test
ss
sub
test
xchg
in
sbb
daa
frstor
add
xchg
in
insb
mov
xchg
cli
cmp
in
enter
push
sbb
fiadds
xchg
mov
xchg
jge
sahf
aad
jo
lea
int
xchg
popf
pop
outsl
or
xchg
imul
mov
sbb
arpl
push
pop
adc
cltd
xchg
mov
out
test
fisttpl
add
ffreep
iret
cld
imul
outsl
mov
and
ds
push
mov
icebp
lret
push
push
into
outsl
mov
mov
adc
xor
stos
mov
cmc
in
dec
and
pop
jbe
mov
insb
je
mov
and
icebp
cmpsl
inc
fcompl
ljmp
sti
pop
pop
and
push
pop
cld
xchg
sbb
sarb
inc
iret
lret
pushf
cmpsb
daa
pop
xchg
frstor
test
cltd
add
xor
mov
ljmp
lret
cmc
sub
out
popf
cld
jae
sbb
fists
mov
push
mov
ret
ljmp
mov
repz
sub
leave
adc
mov
add
pop
test
test
or
jmp
jmp
cmpsb
rorl
cwtl
mov
nop
pop
mov
inc
xchg
ss
out
lahf
outsb
popa
lds
inc
mov
cwtl
mov
arpl
lds
xchg
add
inc
stos
mov
or
ds
mov
push
xchg
jmp
mov
jp
das
test
xchg
mov
imul
cwtl
jb
repnz
arpl
mov
jle
push
cwtl
pop
pop
jmp
lret
inc
cmp
popf
sbb
outsb
lods
inc
mov
xor
xchg
ret
xlat
lea
ret
jae
cmp
and
xor
and
cmp
mov
fwait
cmp
mov
jmp
add
nop
add
mov
fs
inc
and
fbld
std
mov
push
push
and
aad
pop
jno
adc
and
faddl
xchg
divl
je
pop
in
test
push
adc
xchg
push
mov
lods
inc
push
cmp
lahf
int
jmp
mov
lret
sub
ja
cmpsl
xchg
inc
aas
xchg
jns
jno
js
loopne
int
xor
xchg
pushf
add
fucomip
adc
in
mov
or
cld
xchg
out
cs
fisubl
jge
outsb
dec
mov
inc
or
aas
call
cmp
movsl
sbb
or
jmp
aad
inc
stos
push
lods
out
or
fidivl
xor
aas
xor
adc
lret
or
mov
jbe
dec
add
mov
inc
or
in
xchg
mov
pop
or
cli
mov
xchg
inc
mov
mov
or
mov
inc
lret
cltd
in
xor
sahf
into
push
jns
cltd
jg
xor
andl
lds
xor
sub
pop
sub
adc
adc
outsl
sti
dec
mov
jg
mov
adc
inc
aad
sarb
push
jle
mov
stos
outsl
scas
insl
pop
cmp
inc
add
xchg
push
or
or
inc
cmp
test
stos
add
setl
pop
into
sarb
je
sub
in
cmp
xchg
mov
negb
xor
mov
out
fldt
leave
or
fisubl
popf
out
add
pop
cmc
xchg
loope
clc
popa
daa
clc
xchg
dec
push
and
aad
cmp
sub
repz
ljmp
cmp
inc
sti
shll
xchg
pushf
gs
adc
or
push
call
outsb
xchg
adc
mov
pop
mov
xor
imul
popa
jg
movsb
popf
jge
stc
adcb
or
cmp
pop
push
mov
hlt
jno
and
dec
fnstcw
lock
fadd
les
push
mov
cld
and
pop
adc
js
mov
shl
dec
mov
imul
pusha
or
sub
sub
repz
into
xor
lods
jle
xchg
mov
cmp
or
inc
mov
and
add
loope
in
aam
inc
xchg
cmp
fcomps
and
fwait
ljmp
jp
or
ljmp
icebp
mov
mov
push
sbb
mov
lea
lret
ss
ljmp
in
lahf
jmp
mov
movsl
xchg
sub
rcrl
nop
es
in
sub
xor
ljmp
lock
lahf
flds
add
mov
cmpsl
pop
add
ljmp
mov
lods
jmp
ljmp
xorb
out
mov
rcrb
arpl
sbbl
stos
enter
addr16
inc
daa
jmp
jl
adc
stos
sbb
fstl
inc
jno
push
sbb
loopne
cltd
movsl
dec
sbb
xchg
jle
sub
and
or
lods
and
clc
or
pop
and
xchg
dec
daa
repnz
adc
pushf
data16
aas
addr16
das
sub
mov
es
push
out
xchg
mov
xchg
push
jo
dec
adc
mov
outsb
or
outsb
mov
jb
sub
mov
or
mov
ja
jb
mov
or
jo
or
sbbb
rcrl
mov
imul
repnz
mov
or
adc
mov
imul
pop
lods
inc
xorl
sub
push
pop
lea
and
jnp
jbe
cwtl
in
or
ret
cmp
enter
lds
jbe
sub
lret
push
loopne
dec
cmc
cld
pop
aaa
cwtl
push
push
cmp
in
stos
fdivp
sbb
jmp
jo
idivb
dec
sbb
jmp
jle
fcmovu
aad
repnz
xchg
xchg
xchg
mov
pop
in
pop
mov
adc
stos
sbb
push
or
out
adc
xorl
cmc
and
lahf
sti
xchg
jecxz
stos
enter
push
clc
icebp
mov
mov
add
push
sub
scas
rcrl
iret
outsb
mov
xchg
stc
pop
mov
into
xchg
ljmp
stos
sbb
mov
adc
mov
xchg
ss
cltd
push
std
fmuls
hlt
or
mov
cmp
inc
es
jns
and
scas
dec
push
jbe
xlat
adc
bound
lret
cmc
cmp
add
sbb
das
dec
push
repz
mov
mov
or
dec
or
imul
or
sbb
fwait
mov
imul
cltd
loop
mov
aam
push
xor
icebp
jb
dec
outsl
cs
push
ja
or
push
lods
nop
push
dec
xchg
sbb
hlt
je
inc
int3
fcompl
or
pop
test
pop
mov
sahf
pop
pop
mov
and
sahf
movsl
insl
inc
xchg
mov
xor
shrb
mov
jne
dec
int
lods
adc
mov
daa
fisttps
jnp
rcr
or
pop
xchg
pop
sub
int
sbb
into
addr16
mov
cmpsl
addr16
pushf
mov
sub
mov
pop
or
outsl
enter
mov
ss
sar
out
pop
ljmp
mov
in
pop
movsb
push
in
jp
or
jae
gs
adc
faddl
in
in
faddl
rolb
jl
mov
ja
mov
in
pusha
mov
imul
sbb
rcr
mov
fmuls
int3
bound
addr16
xchg
dec
loope
sub
fldl
int3
mov
jb
mov
test
sub
and
pop
or
mov
jne
jo,pt
sub
rorb
filds
ret
faddl
jmp
call
push
scas
mov
addl
pop
pop
incl
loope
std
sti
sbb
mov
mov
cmp
decl
in
imul
paddsb
jns
fstpl
push
das
push
mov
mov
xor
mov
push
adc
sbb
and
push
sahf
jmp
stos
cmp
mov
xorl
nop
in
xchg
int
adc
inc
addr16
out
pushf
mov
sbb
cli
sbbb
jmp
xchg
aam
jl
call
dec
jbe
std
xchg
out
pushf
aam
mov
lds
cs
inc
mov
data16
and
xorl
addr16
pushf
cld
inc
push
cmpsl
shlb
lock
leave
sub
dec
lea
arpl
xlat
jne
aas
cmpsl
add
or
lret
add
and
mov
jp
stos
or
out
repz
pop
jmp
sbb
shrl
loope
insl
dec
and
add
mov
fnstsw
mov
xchg
sbb
mov
mov
pop
push
ja
xor
and
setb
cli
add
mov
in
mov
fdivrs
xor
adc
stc
pop
push
xor
mov
xchg
jno
cltd
fldenv
fs
pop
insl
sbb
leave
fldenv
fisubrl
xlat
movl
lret
sahf
nop
les
sahf
cs
jae
jge
fldcw
sub
adc
jnp
idivb
inc
lcall
scas
stos
outsl
mov
ss
add
mov
cmp
xchg
inc
push
cmp
aaa
hlt
and
std
push
lcall
fmul
dec
fisttpl
dec
stc
pop
int3
enter
push
out
rorl
into
sarb
movsb
xchg
dec
shrl
sub
push
fcoml
sbb
inc
in
cltd
insl
sub
sub
loop
movsb
pop
mov
adc
mov
dec
xchg
in
dec
pushf
shll
mov
movsb
mov
mov
add
lret
pop
cmpsb
push
mov
shll
inc
jp
adc
leave
sub
adc
mov
hlt
fs
push
mov
sahf
stos
in
push
out
xchg
into
sub
push
sub
or
mov
bound
inc
imull
mov
es
daa
lret
pop
xchg
sub
jbe
mov
xchg
mov
adc
aad
test
mov
jb
cwtl
jo
cmpb
or
mov
cmp
fisttpll
add
test
loopne
fdivl
add
mov
mov
cmp
pop
out
cmp
lcall
js
lahf
pop
ja
sub
rcll
adc
mov
fimuls
or
cwtl
mov
xchg
push
xacquire
jle
out
add
mov
cmp
add
cld
add
xchg
xor
imul
push
cmp
lods
repnz
mov
add
jbe
lcall
add
fs
sahf
xchg
or
xchg
cmp
nop
imulb
fs
pop
dec
fdivs
ret
repnz
lcall
cmpsb
cmp
jmp
ds
aad
mov
add
xchg
repz
outsl
fcomps
xlat
aam
hlt
jnp
jl
inc
adc
and
jle
stos
iret
xlat
call
bound
iret
sub
ffree
insb
xor
fadd
or
or
imul
sub
fdivrl
add
repz
shlb
ds
jle
lcall
jmp
fdivrl
test
mov
out
dec
lret
or
adc
mov
out
jae
sbb
call
mov
sub
inc
ss
mov
xor
out
push
jmp
mov
dec
inc
xor
cld
push
dec
mov
cmp
int
cmp
into
pop
xchg
dec
out
jb
fadd
pop
daa
idivb
xchg
push
pushf
mov
dec
test
lea
pop
nop
push
out
std
ljmp
sub
test
jb
xor
aas
shlb
popf
test
mov
mov
xor
test
push
outsb
mov
xor
out
shlb
pop
lock
in
insb
and
aas
stos
inc
out
test
test
inc
jmp
mov
jno
jo
data16
fsubrs
insl
push
lret
stos
mov
inc
pop
mov
or
mov
std
jo
xchg
mov
roll
xor
or
int3
lea
mov
sahf
scas
dec
outsb
inc
xchg
ret
enter
imul
sar
rcr
cmp
xor
fstl
cmp
dec
out
push
cmpsl
sub
lcall
test
leave
mov
pop
aad
imul
adc
loopne
inc
xchg
jnp
jmp
mov
dec
lods
sub
aad
and
or
rcr
mov
fidivl
mov
inc
mov
popf
fld
fsubrp
xor
stos
cld
vpsrlw
je
dec
push
inc
cmp
pop
loope
out
jnp
sbb
inc
ljmp
cs
popa
adc
test
jmp
nop
xchg
test
mov
in
scas
in
mov
rcrl
es
pop
sub
ficoml
ljmp
sbb
and
cwtl
mov
pop
sti
xor
lcall
push
add
fucom
add
subl
sbb
or
and
sti
mov
dec
cmpsl
fdivr
jns
sub
insb
and
imul
jmp
dec
dec
xchg
imul
or
push
out
imul
rcrb
ret
leave
pop
mov
inc
pop
out
outsl
pop
inc
in
les
jmp
mov
iret
add
movsl
stc
in
inc
push
mov
cmpsb
out
xchg
xchg
cmc
int3
stc
jne
fucom
jbe
cmp
dec
push
jge
adc
mov
or
lahf
inc
and
fdivl
and
mov
sub
popf
xchg
push
outsb
xor
mov
scas
mov
outsl
hlt
mov
movb
fwait
test
shll
jbe
adc
add
or
pop
pusha
imul
das
cmp
pop
adc
add
mov
std
cmp
xchg
sbbb
push
arpl
in
fstps
adc
or
mov
inc
and
jmp
xor
lcall
lahf
jne
xchg
xor
dec
cmc
mov
mov
insl
xlat
mov
add
jle
and
movsb
adc
or
das
je
pop
push
cmc
and
adc
push
sub
mov
xlat
adc
fldl
push
mov
insb
nop
xchg
fisttpl
add
mov
repz
inc
movsb
cs
and
rolb
push
int3
cmc
or
mov
sarb
cli
dec
dec
xor
mov
sbb
pop
or
or
out
mov
sbb
das
cmp
cmp
dec
cmpsl
xor
mov
jle
outsb
enter
shll
mov
xor
insb
add
clc
stos
nop
rolb
enter
push
pop
paddd
out
ret
push
cmp
inc
mov
sarb
aaa
mov
mov
cwtl
js
mov
ret
les
cmc
ficoml
and
xor
sbb
mov
ret
lods
pop
lahf
subb
lahf
pushf
je
daa
dec
sbb
pop
fidivs
sbb
xlat
in
das
pop
aaa
and
inc
xchg
jmp
into
jg
cmpb
xchg
jae
adc
jecxz
ds
sbb
lcall
mov
mov
sbb
xchg
pop
cltd
cmp
mov
fwait
or
dec
inc
dec
into
sub
pop
ret
outsb
xchg
adc
ror
mov
sahf
jno
pop
xlat
pusha
jle
lods
loopne
mov
test
idivl
outsb
push
add
jl
cmpsb
jmp
push
jo
jbe
lahf
push
imul
sub
stos
or
pop
inc
ljmp
and
out
out
adc
and
inc
bound
stc
dec
xor
dec
mov
out
aas
or
loop
movsb
aas
jae
mov
add
inc
push
fwait
stos
add
fistl
dec
xchg
lds
scas
ret
gs
push
fwait
enter
ror
das
icebp
out
push
cmpsb
arpl
adc
mov
xchg
insl
test
mov
stc
pop
fistl
clc
and
add
pop
out
scas
subl
xor
sbb
jae
cmc
loopne
cs
push
dec
stos
push
xor
inc
ss
mov
subl
or
mov
aad
repz
mov
scas
das
shrl
push
pop
sbb
or
push
insl
mov
sub
adc
mov
cwtl
into
loope
shlb
std
push
fcmovnb
push
das
jmp
sbb
scas
popf
pop
js
pop
repnz
aam
adc
scas
mov
inc
mov
adc
add
lock
shrb
sarb
dec
mov
jg
pusha
lahf
push
scas
inc
mov
adc
add
lock
shrb
sarb
dec
mov
jg
loopne
rcl
inc
mov
adc
cmp
xlat
loopne
shrb
sarb
dec
mov
jg
pusha
lahf
push
scas
inc
mov
adc
push
lock
jp
rorb
shlb
pop
test
mov
test
cmpsb
and
fcoml
in
sbb
pop
lods
pop
pop
test
mov
sbb
enter
sub
cmp
or
sbb
dec
lods
pop
inc
test
mov
add
adc
fadd
sub
sbb
loop,pn
loope
cli
das
xor
and
jge
sbb
dec
push
or
fstpl
les
push
xchg
loope
or
fsubrl
rcll
mov
cmp
movl
js
and
mov
sub
movsl
mov
mov
in
sbb
push
pusha
out
xchg
jno
mov
and
dec
into
loop
or
ret
cmp
int3
enter
bound
cwtl
ss
rolb
lea
jo
fstp
fst
or
cmp
mov
cmp
xchg
nop
loop
into
inc
and
cmp
jge
out
jns
sub
test
mov
or
sbb
fadd
sub
cmp
or
sbb
dec
lods
push
xor
sbb
outsb
scas
imul
mov
push
iret
cmp
cmp
adc
sbb
mov
sahf
dec
test
std
outsl
lods
dec
popf
or
leave
or
jmp
add
clc
cmp
sub
cmp
or
sbb
dec
lods
pop
pop
test
mov
sbb
enter
sub
cmp
or
sbb
dec
lods
pop
pop
test
nop
ret
pop
jno
outsl
jnp
lahf
call
adc
iret
or
adc
repz
int3
xchg
xor
ss
mov
inc
xchg
adc
mov
icebp
scas
loope
lahf
adc
stos
add
dec
daa
add
and
outsb
mov
or
jo
xchg
out
outsl
fistpll
cmp
adc
or
dec
xchg
and
movsb
mov
inc
xchg
test
int3
out
insl
fsubl
jp
mov
lret
ljmp
jecxz
fisubl
mov
mov
mov
xor
mov
jne
push
bound
push
hlt
dec
adc
lret
sti
aam
inc
leave
in
sbbl
push
lahf
pop
push
js
mov
clc
sub
xchg
cmp
dec
inc
lret
clc
cmp
test
les
fwait
push
adc
push
mov
popf
adcl
cltd
xor
call
rol
jbe
sti
xchg
push
xlat
movsl
fdiv
je
fistpll
xchg
lea
lret
popa
pop
push
push
ljmp
mov
fmull
sub
mov
xor
add
mov
or
arpl
fnsave
adc
mov
dec
sbb
add
mov
xchg
jno
inc
or
push
aas
sub
pop
js
add
fmuls
insl
sbb
and
shll
lret
xchg
fsubr
lea
cwtl
jo
cmp
jg
insl
or
inc
movsb
and
js
fisttps
dec
je
leave
jg
xor
mov
dec
or
sub
aas
sub
out
in
adc
mov
adc
stos
sbb
and
fistpll
stos
movsb
mov
jp
rorb
test
mov
les
enter
je
insb
xchg
push
and
xor
push
mov
ret
mov
inc
enter
out
sub
gs
jecxz
push
insb
mov
mov
aaa
shr
inc
mov
faddl
push
add
imul
frstor
nop
test
jo
dec
mov
gs
xchg
sbb
sbb
jge
movsl
incl
pop
fldt
or
cmp
jle
inc
daa
mov
mov
mov
int3
fimuls
stos
push
mov
push
sbb
inc
pop
popa
sbb
and
lret
mov
xchg
xor
pop
fsubrl
pop
jp
cmp
stos
inc
cmc
les
dec
rcrb
dec
in
out
neg
push
cld
out
jecxz
xchg
int3
iret
stos
out
mov
inc
mov
xor
jp
jp
push
xor
rorl
popf
sbbb
mov
lods
mov
add
push
cltd
aad
mov
fldenv
push
pop
cs
dec
push
fisttpl
adc
mov
xchg
mov
imul
inc
cmpl
mov
ret
dec
sahf
cmp
cmpsb
push
gs
loopne
imul
mov
sub
mov
mov
loopne
cwtl
cmp
lret
scas
xor
or
xor
aad
pusha
dec
xor
push
popa
jb,pn
in
cli
xor
xorb
sub
pushf
jb
stos
mov
cmp
ficomps
shl
add
shl
dec
stos
ss
fwait
lret
push
inc
xchg
lods
insl
mov
lret
sbb
pop
push
mov
jp
clc
lret
add
sbb
xchg
xchg
arpl
mov
addl
push
xor
jne
shrl
test
mov
lods
dec
xchg
sbb
dec
or
cmpsl
mov
icebp
jb
xchg
mov
adc
fdiv
aas
pmullw
adc
mov
outsl
loope
cmpb
aas
negb
dec
pop
hlt
or
push
and
fstps
sub
aaa
cmp
dec
adc
push
jg
divl
sub
imulb
xchg
jbe
xchg
aad
loope
aad
mov
jnp
xchg
fs
sbb
faddl
fstpl
inc
fmul
cmpsb
adc
push
clc
xchg
enter
sar
sbb
popa
insb
sbb
pop
mov
fmul
bts
pop
and
ds
fisubrs
addb
and
push
lcall
outsl
push
dec
fstpl
xchg
pop
movsb
lret
lds
and
pop
push
cmpsb
dec
in
pop
aas
clc
outsb
xchg
js
dec
int
mov
mov
adc
cmp
or
call
inc
test
dec
jmp
lcall
jne
jbe
pusha
cmp
pop
push
aaa
scas
push
int
jns
loopne
sbb
push
sbb
jnp
es
fldl
jo
test
shlb
mov
mov
jns
or
divb
push
hlt
stc
fimuls
adc
jg
cmp
fnsetpm(287
xchg
testb
push
das
insb
push
push
insb
mov
outsb
daa
adc
test
movsb
lret
rcrb
pop
sahf
adcb
dec
and
sub
mov
or
mov
sub
outsl
or
clc
dec
add
xchg
mov
test
pop
dec
adc
addr16
xchg
cs
addr16
andb
cltd
popl
mov
std
mov
lret
std
jecxz
test
nop
mov
out
add
adc
inc
ljmp
inc
popf
addr16
mov
out
cmpsb
test
lahf
ljmp
cmp
jnp
sub
ret
out
inc
cmp
fadd
movsl
call
notb
loope
xchg
add
daa
cs
cltd
stos
inc
shll
and
push
pop
ja
mov
and
fwait
mov
fsts
dec
add
add
dec
mov
add
adc
inc
mov
loopne
cli
adc
js
lcall
movsl
mov
inc
pop
pop
mov
jg
or
adc
add
mul
mov
inc
mov
jbe
insl
pop
int3
cmp
out
or
lret
mov
outsb
sarl
sahf
mov
pop
push
sbb
lea
and
or
call
js
sbbl
arpl
pop
out
out
inc
mov
cli
mov
adc
cmp
data16
cmc
iret
sub
arpl
lods
jge
sbb
cmp
dec
hlt
andb
call
ss
xchg
pop
sbb
ret
dec
sbb
and
clc
loopne
stc
jnp
pop
orl
in
fistpl
cld
or
fiaddl
cmp
pop
inc
bound
stos
push
fs
cmpsb
fcmovbe
push
xchg
pop
lods
ficompl
aas
stc
ret
ficompl
insl
sbb
xchg
xchg
adc
fisttps
out
xchg
or
xchg
jge
lcall
push
loopne
cmp
mov
in
pop
popa
xlat
add
add
ret
jno
lret
mov
lahf
nop
idivb
push
cwtl
pop
adc
and
mov
ljmp
imul
jge
sbb
and
push
daa
call
scas
movsb
scas
or
hlt
xchg
xlat
mov
jl
daa
pop
inc
inc
dec
jno
xor
in
mov
stos
push
lahf
sbb
sub
mov
mov
adc
adc
add
xchg
stos
lcall
pop
shl
sarb
adc
mov
and
and
scas
repz
mov
sbb
cmp
rorb
pop
aam
and
test
outsl
mov
icebp
jl
sub
shll
je
popa
fimuls
inc
repnz
adc
leave
sbb
add
push
js
jecxz
movsb
sub
inc
or
pusha
or
dec
and
pop
add
mov
mov
inc
pop
cli
push
jo
mov
fs
mov
xchg
outsl
stos
stc
sub
mov
shrl
aaa
mov
in
pop
movsb
cmc
aam
in
aad
ficomps
cltd
pop
sbb
cmpsb
das
sbb
fnstsw
lods
mov
pextrw
inc
and
jmp
xor
ret
fstpl
jp
xchg
dec
sub
aad
jnp
pop
popa
shrb
mov
pop
xchg
in
xchg
icebp
cmp
and
stc
mov
mov
inc
jle
xchg
jb
cmp
jnp
das
insl
das
fisttps
adc
push
push
pop
inc
xor
sub
sti
lcall
dec
movsl
mov
dec
and
or
out
cmp
mov
popa
lahf
jnp
push
cmp
aad
js
pop
mov
aam
fmulp
imul
scas
dec
lds
sbbb
lods
xchg
stc
push
out
cwtl
nop
fisubrs
cs
inc
das
ficompl
cli
dec
pop
mov
sbbb
out
not
test
es
add
xlat
push
pop
xchg
int3
repz
es
lahf
xchg
lcall
xor
mov
push
call
cmp
push
fld
pop
shl
cmp
stc
and
leave
xchg
lcall
jne
cwtl
fldt
dec
pushf
shll
movsb
xchg
or
push
xchg
cmp
lret
inc
inc
jnp
pop
jl
and
aas
nop
xor
data16
adc
or
xor
stc
ret
or
out
mov
jecxz
adc
ja
inc
cltd
push
sbbb
sub
movsb
add
sarl
sahf
rcrl
fdivrp
jns
jge
insl
rolb
in
adc
les
outsb
dec
dec
sahf
xchg
lret
loopne
adc
and
iret
or
and
mov
lock
pop
pushf
out
clc
push
test
stos
imul
push
js
sbb
sub
in
mov
out
enter
cmpsb
and
xchg
lea
fcomi
movsl
cmpsl
pop
popf
sarl
js
aaa
jmp
fisubrs
imul
scas
xchg
inc
fistpll
jle
jne
and
mov
frstor
cmp
adc
sahf
sbb
aaa
mov
sarb
and
stos
fmul
sbb
daa
in
iret
in
fs
into
mov
mov
sbb
mov
icebp
jl
inc
movsb
jo
inc
lcall
adc
and
cli
loopne
fs
aad
int
fcmovne
inc
sub
repnz
test
sbb
imul
cmp
mov
xlat
movsb
js
sub
aas
push
jnp
movsb
addr16
xor
shl
pop
movb
in
jge
adc
aas
pop
mov
or
stc
inc
push
mov
mov
push
into
pusha
test
inc
or
icebp
pop
pop
out
mov
adcl
adcl
mov
cltd
imul
and
clc
in
or
out
sbb
addr16
xchg
inc
cli
subb
push
cmp
cs
std
sub
add
test
les
mov
shl
ds
fildl
adc
call
xchg
aad
mov
or
filds
pop
repnz
mov
sbb
test
ja
adc
pop
push
push
jmp
or
bound
dec
or
punpckhbw
dec
xor
add
addr16
pop
imul
imulb
sahf
xor
xor
mov
dec
push
sti
ret
inc
icebp
sub
or
fwait
xchg
fdiv
mov
jl
mov
ret
xchg
cmp
imul
mov
shrl
or
and
out
lds
and
es
pop
inc
jnp
sarb
rolb
sbb
cmp
insl
in
in
inc
aam
jbe
push
rcrb
sub
xchg
and
pop
jnp
xchg
inc
mov
daa
inc
nop
xchg
addl
les
and
push
jno
ret
cld
push
imul
cmp
xor
arpl
mov
outsl
daa
aas
ret
cld
sub
nop
icebp
lods
movsl
loope
cmpsb
mov
cltd
or
jp
sbb
rorb
dec
sub
sahf
outsb
xchg
test
push
xlat
pushf
cli
in
xor
push
or
imul
push
shrl
lret
jp
loop
xchg
pop
mov
inc
xchg
incl
adc
mov
add
cs
shlb
xor
mov
mov
stos
jmp
push
dec
mov
mov
leave
into
ds
aam
cwtl
sub
mov
mov
mov
mov
mov
ret
jp
xchg
pop
mov
mov
pushf
push
push
add
pusha
adc
int
popf
lahf
jle
adc
popf
adc
les
xchg
insl
xchg
iret
inc
les
cltd
push
in
lahf
pop
scas
pop
lret
sti
fcomi
ds
xor
jmp
notl
push
scas
fnstcw
ficoms
js
push
jp
push
pop
push
cmpsb
fstpl
adc
sahf
and
loopne
xor
sub
cmpsb
dec
outsb
mov
add
jae
add
dec
test
mov
mov
popf
out
mov
imul
xchg
nop
iret
pop
call
mov
fcoml
gs
into
dec
sub
adc
cld
inc
rcrb
imul
xchg
cwtl
jb
into
lods
sbb
negl
popa
sub
cmc
shll
adc
popa
xchg
bound
adc
mov
sbb
xchg
and
lret
xchg
jne
cld
xor
xchg
xor
dec
lods
mov
sbb
inc
mov
lods
sub
add
xchg
outsl
fcompl
sub
fsts
jle
mov
and
jae
push
lock
ss
ljmp
dec
popf
testl
sbbl
fiaddl
outsl
andl
movl
xlat
inc
in
ds
out
mov
dec
out
lret
mov
lock
popa
push
xchg
inc
inc
sbb
pop
push
arpl
inc
cmp
scas
xor
lds
mov
sub
rorb
mov
ret
xor
mov
fcom
inc
lods
mov
and
shrb
rolb
test
movb
test
into
xor
int
push
clc
sarl
fwait
shlb
in
cld
pop
mov
insl
mov
inc
lea
pop
and
jo
lcall
cmp
out
sbb
cmp
fwait
add
push
mov
mov
nop
ficoml
mov
orb
out
mov
mov
jp
xchg
push
rcl
fiaddl
jg
mov
insb
fstps
in
jns
aas
shlb
or
in
shrl
movl
dec
les
cmp
jle
dec
jp
or
addr16
lea
pop
xchg
pop
sub
mov
aam
pop
inc
xor
mov
lods
mov
rcll
push
cmp
loop,pt
js
inc
dec
push
daa
push
add
pop
mulb
cli
or
insl
jmp
mov
stos
sub
outsb
out
loop
sbb
or
adc
test
cmp
dec
fildl
mov
idiv
push
push
ret
xor
dec
rclb
mov
xchg
sarl
inc
hlt
in
pushf
mov
xchg
jnp
cmc
sub
cmp
adc
push
pop
movl
je
jp
jg
push
incl
adc
addl
mov
sahf
popf
xchg
lret
xor
lcall
sahf
sti
dec
or
mov
push
xchg
cmp
add
cmp
push
test
jb
into
jg
outsb
sub
push
loope
and
sub
shlb
fdivs
mov
addr16
leave
and
aam
cltd
std
movb
sbb
jle
cwtl
xor
or
mov
incb
imul
cli
aaa
les
cld
or
les
daa
xchg
mov
mov
cltd
lcall
loop
mov
test
mov
lods
enter
lods
das
jo
ret
pop
mov
mov
les
lods
out
testb
or
shll
rcrb
aaa
inc
sub
mov
jle
push
movsb
xchg
dec
adc
shlb
out
sub
iret
jg
scas
outsb
es
fwait
stos
dec
lds
sub
sahf
xor
jge
cmp
mov
fisttps
orb
lret
push
cmp
sbb
mov
lret
push
mov
sarb
in
call
aas
add
inc
les
loope
mov
cltd
data16
mov
mov
je
adc
dec
adcl
push
or
ja
or
scas
sbb
xor
cs
mov
stos
scas
inc
sub
lds
out
xchg
mov
inc
mov
dec
les
push
cmp
pusha
in
and
dec
jg
sbb
lds
adc
inc
jecxz
loopne
ficomps
data16
mov
aas
leave
add
int3
ljmp
jmp
dec
fsubrl
fdiv
sub
pop
mov
cmc
xlat
in
mov
ss
mov
and
fmuls
jbe
fwait
sar
ja
push
mov
adc
mov
or
cmpsl
cwtl
push
pop
stc
clc
mov
or
adc
out
push
xor
inc
cltd
cmp
std
imul
and
cmpsl
jecxz
mov
dec
add
out
lds
je
sub
movsb
clc
mov
dec
push
std
add
std
insl
mov
sbb
adc
xchg
aam
mov
push
lcall
jle
sbb
std
cs
dec
sbb
jl
arpl
push
cld
xchg
inc
push
in
imul
push
scas
lods
mov
adc
test
inc
hlt
fnsave
or
push
fidivrs
sub
andb
mov
lds
inc
es
jl
inc
dec
scas
movsl
add
mov
fbld
inc
test
jecxz
sub
popa
addb
dec
add
xchg
push
ret
fidivs
adc
outsl
in
jns
pop
lock
pop
and
push
xor
out
xchg
sub
cmc
ss
ret
cmpsl
push
es
repz
rclb
sarl
popf
test
lret
in
xchg
mov
xlat
adc
mov
rclb
out
mov
dec
and
xchg
jne
es
ret
xchg
dec
test
push
outsl
hlt
sub
jle
rcl
push
out
lds
cs
addr16
out
push
int3
mov
sub
mov
int
lret
outsl
sbb
mov
push
dec
lcall
out
out
insb
and
fstps
mov
out
iret
fs
or
push
lret
mov
arpl
xor
adc
push
out
idivl
ret
inc
lds
push
mov
out
xchg
or
ss
jmp
inc
cld
push
rorl
pusha
cmovs
push
lret
pop
pop
fisubrl
pop
fsubrl
sub
push
and
std
xor
movsl
or
idivb
pop
scas
mov
stos
and
pushf
mov
loope
jp
mov
test
popl
int
xchg
mov
cmp
adc
imul
add
sahf
sub
inc
add
imul
push
in
lock
in
mov
fists
xor
notb
pop
sub
adc
jo
fcomp
pop
pop
in
add
xchg
mov
iret
cmp
bound
xlat
xor
cs
mov
stos
xchg
sbb
add
arpl
shlb
mov
imul
dec
sub
fcmovb
cmp
xorl
fsub
jmp
sub
insb
xchg
mov
mov
xorl
mov
sub
add
inc
pop
lcall
int
xor
adc
shl
insb
mov
xor
js
mov
outsl
call
lcall
xchg
jnp
cmp
inc
cmpsb
mov
out
repnz
ds
stos
shll
iret
sbb
gs
jnp
movsl
aaa
adcl
cmpsb
cmp
or
pop
xor
inc
fisubrs
mov
mov
dec
and
pop
pop
jnp
xchg
xor
mov
cmp
sbb
int
cmp
std
inc
fstpl
movsl
js
xlat
mov
cmpsb
jae
inc
fisubrl
push
jle
loopne
jle
stos
inc
jo
mov
hlt
xor
mov
stos
pop
js
add
rolb
inc
push
adc
shrb
out
repz
lds
sub
pop
xlat
xchg
sub
sahf
cli
dec
or
ss
iret
jne
imul
push
jnp
fnsave
jo
ljmp
mov
das
adc
sub
xchg
inc
aas
icebp
lret
aad
in
divb
push
mov
sub
jo
jle
call
adc
cmc
aam
or
mov
in
mov
rorb
push
stos
mov
jge
sbb
and
orb
mov
in
sbb
and
addr16
fcomp
and
enter
nop
cmpsl
xor
fdivl
xorb
xchg
jns
call
push
cmp
iret
pop
fisubl
mov
sbb
enter
sub
cmp
or
sbb
dec
lods
pop
pop
test
mov
sbb
enter
sub
cmp
or
sbb
dec
lods
pop
pop
test
mov
sbb
enter
sub
cmp
or
sbb
dec
scas
pop
pop
test
mov
pop
call
lods
sbb
sub
xchg
push
or
outsl
ljmp
cmpsl
push
mov
cs
push
cmp
or
fmull
out
ficomps
lods
push
pop
push
dec
jl,pt
insb
pop
sbb
or
cmp
sub
fimuls
in
fdivrp
into
pop
mov
push
dec
ds
add
outsb
ss
aas
mov
int
sub
lods
push
pop
push
and
push
repz
aad
mov
push
inc
jbe
std
mov
jae
scas
notl
hlt
mov
bnd
cwtl
movsb
push
in
sub
and
fcmovnu
mov
test
mulb
cmpsb
or
dec
pop
or
dec
add
pop
in
inc
inc
les
mov
fwait
inc
lods
pop
or
dec
dec
jl
pop
pop
cmp
int3
andb
mov
adc
iret
cmpsb
jae
ss
loope
jp
push
adcl
in
inc
lock
outsl
sub
scas
mov
int3
add
mov
lods
jns
into
cmpsl
cmpsb
es
in
addl
in
inc
jmp
iret
stc
incb
mov
ds
jbe,pn
sbb
or
and
mov
mov
test
fwait
mov
addr16
pop
jge
insl
xor
bound
push
das
inc
fbstp
ret
icebp
cmpsl
fistpll
and
dec
outsb
or
imul
pop
outsb
inc
sti
movsl
mov
mov
shr
leave
ja
push
push
sbb
dec
or
cmp
sub
fmull
in
ficomps
lods
push
pop
push
dec
jl,pt
insb
pop
sbb
or
cmp
sub
fmull
in
ficomps
lods
push
pop
stos
lret
test
jg
and
imul
dec
stc
cmpsl
sub
cld
loopne
out
movsl
aas
xchg
ja
fldenv
in
aad
ret
int
add
aaa
adc
sub
leave
pop
jbe
push
fldt
addl
xchg
mov
hlt
jae
call
test
pop
push
jge
filds
imul
fcoms
test
mov
jo
cmp
cmpb
inc
or
repnz
and
in
fistpll
dec
addr16
xor
jne
and
or
loop
idivl
cmp
ds
scas
bound
cs
sub
jns
mov
lret
cmpsl
sbb
pop
mov
xchg
roll
out
sub
sbb
or
hlt
mov
outsb
rcl
pusha
les
pop
fisubs
and
pop
jp
imul
pop
pop
imul
push
fdivrs
pcmpeqd
movsb
mov
push
pop
cmc
int3
pop
stos
popf
rcrb
cmp
sbb
mov
es
lahf
mov
jo
jnp
ret
shlb
sub
xlat
mov
and
js
jae
leave
das
addb
jp
lret
or
enter
jle
push
inc
into
out
mov
mov
mov
push
mov
sbb
stc
jecxz
jno
dec
and
or
int3
imul
jb
insb
cli
pop
test
lea
xchg
outsb
push
xchg
push
add
test
clc
push
cmpsb
test
imull
repz
movsl
stos
test
sub
ljmp
aad
pusha
mov
pop
mov
jg
jge
push
in
cmp
mov
mov
sub
cmc
repnz
mov
insb
mov
pop
xor
and
inc
mov
add
jno
insl
stos
push
cmc
jle
shl
or
lcall
mov
and
addr16
xchg
sar
push
push
fs
sub
mov
jne
xchg
test
lret
add
inc
pop
shl
xorb
rorl
ret
push
rcl
xchg
sub
je
and
mov
lock
test
cmp
testl
mov
mov
cmp
and
mov
pop
or
movsb
imul
jne
addr16
loop
or
push
iret
fsubrl
sarb
das
out
cld
es
dec
cmp
push
jno
mov
call
stc
and
pop
and
xchg
pushf
dec
mov
dec
sub
xor
fadds
sub
enter
cmp
xchg
in
pushf
xor
sub
jne
fldcw
sti
or
mov
inc
dec
loop
mov
push
nop
js
or
out
sbb
stos
ljmp
xchg
je
jb
stos
add
sub
clc
std
call
test
mov
xlat
rorb
aaa
add
and
je
ja
adc
push
adc
lcall
xchg
repnz
mov
ret
xor
dec
cmp
xor
divb
push
outsb
inc
jnp
in
cli
inc
dec
popf
cwtl
mov
int3
mov
les
fists
xorl
dec
popf
lods
mov
fcmovne
pop
mov
addl
inc
sbb
xchg
into
popf
dec
cmp
xchg
push
pushf
jecxz
fimuls
or
sub
add
scas
nop
rorl
mov
mov
add
mov
mov
cmp
sbb
jmp
cmp
imull
insb
cwtl
clc
retw
and
add
cmp
push
inc
pop
dec
dec
lock
sbb
iret
cmp
xchg
insl
mov
movsl
addr16
adc
addl
je
aas
fldl2t
or
loope
ds
add
cmc
mov
and
mov
pop
add
xor
xor
andb
inc
idiv
insl
cmovo
sub
int3
leave
jo
cwtl
mov
int
testb
mov
adcb
push
imul
dec
cmp
and
pushf
ljmp
sti
mov
sub
shl
loope
stos
xlat
jno
je
in
rcr
cli
push
in
or
popf
sub
mov
dec
jle
jno
xchg
rcll
into
outsl
xchg
mov
sbb
mov
and
mov
pop
jl
push
call
cmp
cwtl
lock
cmp
inc
mov
xchg
lahf
xor
add
lea
jmp
mov
xchg
movsb
mov
pop
mov
push
or
sbb
xchg
jno
or
xchg
cmp
add
in
xor
sti
imul
subl
xchg
xor
mov
insl
adc
push
jl
lods
jmp
dec
not
sub
xor
das
sbb
imul
mov
fs
push
jno
fstpl
xchg
in
fildl
jnp
out
inc
push
cmp
imul
add
push
mov
adc
movsb
insb
push
and
loop
lea
xchg
sub
mov
lret
pop
xlat
rcl
sub
aaa
cmp
shll
mov
mov
xchg
pop
call
mov
xchg
pop
lret
lcall
mov
mov
notl
push
pushf
push
xor
into
out
mov
jl
shl
int
pop
or
xchg
outsb
add
popa
pop
std
or
jmp
or
push
subb
push
pop
mov
mov
mov
mov
sub
lea
sub
xchg
mov
inc
mov
ja
jbe
icebp
ss
xor
sbb
nop
adc
aad
sbb
inc
sub
mov
subb
xchg
pushf
fwait
jecxz
rcrl
push
pop
mov
push
mov
inc
and
popf
insl
mov
sbbb
cmp
xor
mov
push
int
sbb
push
icebp
jle
mov
test
inc
xchg
sbb
scas
imul
pop
add
lahf
imulb
in
mov
loopne
sub
stos
fmull
cmc
in
sti
lods
lcall
xchg
dec
nop
push
out
repz
sbb
push
jle
fdivl
out
ljmp
in
and
push
mov
push
xchg
dec
xor
outsl
iret
mov
es
fldenv
inc
sbb
shll
std
lods
nop
mov
jnp
test
mov
mov
dec
cmp
add
pop
cmp
mov
loopne
sub
sbb
sbb
pop
test
cmpsl
stos
xchg
fcomp
dec
jo
out
push
sub
sub
jecxz
cs
pop
and
cmpb
ret
ret
lods
xor
mov
std
inc
cmpsl
add
ret
je
and
aad
mov
sbb
jb
push
xor
ret
dec
dec
sbb
xchg
mov
ss
dec
push
xor
mov
pop
jno
push
push
mov
je
jl
and
or
xchg
cmpsb
inc
mov
xchg
dec
and
negb
jecxz
ss
dec
push
out
addr16
call
aam
inc
stos
lahf
cmp
lahf
clc
sahf
filds
arpl
in
adc
and
and
jge
jl
sbb
sub
fiadds
cmp
ljmp
pop
or
das
pop
jmp
cld
lea
push
mov
repz
in
mov
add
jecxz
movsl
xor
or
cli
rolb
fs
idivb
mov
in
inc
loopne
inc
shlb
or
jb
stc
fwait
jne
push
loop
or
cmp
cmp
xchg
cmp
cld
sti
dec
push
push
adc
xor
cmp
std
adc
int3
call
fdivrl
fidivrs
push
xor
sub
aam
lods
clc
sbb
add
push
lahf
dec
and
loop
cmp
xchg
movsb
imul
cmp
shlb
mov
cmp
int3
arpl
clc
push
fstl
xchg
xchg
addr16
hlt
rorb
dec
push
xor
and
dec
loopne
inc
lds
sub
inc
stos
js
test
add
mov
add
fcmovnb
movsl
fs
movsl
imul
lcall
inc
or
dec
pop
call
mov
inc
pop
aaa
cwtl
inc
sub
dec
mov
das
leave
and
mov
nop
cli
jl
jge
and
mov
jle
lretw
popf
call
jnp
lahf
gs
imul
int3
ss
cmp
add
add
cmp
sbb
lods
fsts
cmp
add
push
pop
mov
repnz
icebp
mov
cs
lcall
lcall
dec
stos
bt
ljmp
sub
leave
pop
push
sub
jno
ror
outsb
icebp
subl
dec
push
add
stos
mov
popa
push
cmpsl
mov
mov
xor
stc
clc
add
insl
dec
cwtl
xchg
mov
dec
xchg
enter
push
jbe
out
jb
stos
cmpsb
jns
push
push
enter
xchg
das
cmc
sbb
xchg
xor
fists
pop
imul
bound
negl
sti
mov
sub
loop
movsb
and
or
xchg
mov
cmpsb
cwtl
cmp
icebp
ljmp
std
sbb
pop
pop
in
cmpsl
pop
rorb
jo
xor
or
leave
sti
mov
inc
xchg
xor
inc
in
dec
insb
flds
imul
adc
jne
push
dec
add
mov
dec
jae
enter
nop
inc
xchg
inc
jno
xchg
pop
nop
dec
add
lock
xlat
dec
popf
jae
mov
mov
pop
jae
int
lock
icebp
mov
jge
add
rorl
iret
jmp
adc
fs
inc
mov
shrb
push
mov
icebp
loope
imulb
add
das
stos
into
mov
rorb
mov
xor
xchg
pop
fnstenv
bnd
mov
and
daa
pop
repz
adc
cmpsb
adc
inc
enter
mov
outsb
ds
and
adc
xchg
fdivs
fsubr
aaa
lods
and
cmc
mov
mov
cmp
pop
push
push
std
xchg
xor
sub
xchg
clc
pop
fldenv
and
lods
dec
push
outsl
sub
ja
and
js
loope
mov
arpl
lcall
stc
fsub
and
xor
jb
or
jp
xchg
inc
push
imul
xchg
icebp
sbb
imul
ja
and
sbb
mov
popa
in
jp
inc
cli
cwtl
pop
fs
lahf
mov
pop
pop
and
clc
jbe
push
or
cmp
subb
lret
adc
aam
pop
mov
add
or
inc
jle
cmp
dec
jl
lahf
push
pop
mov
shll
stos
adc
mov
test
fbstp
xor
les
imul
das
and
fcmovb
outsb
in
inc
push
movb
push
aas
ja
mov
cmp
fucomp
pop
popa
popa
jne
ljmp
xor
jnp
and
aas
aam
dec
sbbl
xlat
call
add
sbb
ds
cwtl
mov
mov
movsl
fnstcw
mov
out
mov
xor
mov
push
mov
inc
jo
mov
mov
mov
in
push
or
dec
sub
and
xor
pusha
dec
xchg
inc
popf
cmp
testl
sbbb
jb
stos
je
adc
lea
insb
iret
fildl
pushf
pop
adc
rorw
xor
les
cmp
test
pusha
mov
adcb
fiaddl
xchg
lcall
std
daa
mov
add
push
scas
arpl
lock
xor
sbb
outsb
adc
or
jle
inc
jge
fs
mov
or
lret
mov
lret
adcl
pop
jle
pop
inc
xchg
sti
bound
or
push
movsb
add
addb
hlt
test
test
addr16
pusha
pop
rorb
lahf
pop
cmc
nop
test
cmp
dec
inc
xchg
int
inc
pop
sbb
movsb
aas
xchg
jae
mov
test
in
add
sbb
cmp
ret
cmp
orb
leave
xor
xchg
mov
fnstenv
popa
push
ret
int
insl
xor
js
cmpsb
sbb
xchg
cmpsl
and
dec
sbb
mov
inc
add
sbb
dec
sbb
or
pusha
xchg
jg
pop
popa
mov
fwait
cmp
push
jno
push
cmpsb
lea
jp
sbb
ljmp
cltd
push
jl
xor
ss
or
fcoml
daa
push
shrb
fwait
in
jl
mov
lret
jnp
mov
push
lret
xchg
mov
xchg
mov
adcl
int3
ljmp
sbb
cmp
sub
jp,pn
sub
inc
mov
sub
inc
movsl
adc
ficoml
mov
setbe
pusha
mov
cmp
or
mov
popa
adc
test
sub
and
pop
fstpl
add
or
jns
pop
ret
adc
push
negl
leave
mov
negl
jle
lret
mov
pop
xor
shl
add
push
arpl
ds
bound
push
lret
jl
xor
aad
in
xor
ret
sub
xchg
mov
xor
cmpsb
pop
and
sub
mov
add
pop
hlt
dec
inc
and
xor
jae
mov
add
sbb
lods
test
inc
adc
dec
xor
xchg
mov
aas
test
mov
imul
pop
inc
sub
pop
shll
sub
mov
popa
pop
jecxz
gs
sbb
popf
or
ds
adcb
cmc
fsubrl
inc
xor
jbe
push
shrb
cwtl
mov
gs
mov
das
lods
mov
sub
pushw
cvtpi2ps
adc
cmpl
enter
dec
jg
jno
or
push
sub
and
mov
stos
movsb
ror
add
jp
push
nop
lds
leave
fisttps
fdivr
push
dec
imul
int3
inc
jg
hlt
outsb
add
lea
dec
movsl
jb
jnp
push
cmp
test
add
adc
rcl
fidivl
sbbl
ss
push
cmp
and
test
pop
push
and
mov
pop
arpl
pop
dec
add
rcrb
push
test
xchg
add
or
repz
sbb
inc
test
jecxz
sub
ja
ds
aad
xor
and
divl
stc
mov
adc
stos
lret
testb
pop
and
sti
push
orl
mov
jno
js
pushf
cmpsl
das
or
rclb
repz
or
fcomi
dec
mov
scas
cli
xchg
xchg
mov
cli
cmc
cmp
cmpsb
pop
rclb
fwait
sbb
sbbl
loope
add
sub
pop
xchg
mov
push
push
addr16
mov
add
arpl
nop
cmp
call
mov
in
sub
ljmp
xchg
int
add
and
rcrl
jnp
pushf
leave
stos
sub
fiadds
pop
dec
sbb
jns
cmp
divb
sub
adc
push
cmc
nop
pushf
stos
push
push
imul
sub
fbstp
pop
and
cwtl
aad
jb
push
jecxz
shr
arpl
inc
push
sahf
lret
or
andb
stc
xor
jle
lret
dec
je
push
fisubrl
cmp
inc
and
inc
movsb
popf
pop
int3
jle
jns
mov
mov
add
movsb
mov
xchg
addb
jo
popl
mov
cmpsl
int3
xchg
cs
lret
stos
xlat
and
pop
mov
sub
pushf
ror
minps
lret
push
pop
xchg
hlt
in
jp
loopne
repz
test
cli
daa
mov
arpl
in
pop
push
mov
bound
xchg
das
aam
fs
mov
ds
fadd
add
mov
movsl
jb
lret
mov
cmp
or
xchg
leave
xchg
jno
jecxz
sbb
dec
pop
dec
lods
xchg
clc
jl
lahf
mov
mov
xchg
test
out
pop
enter
ss
push
faddl
mov
or
sbb
iret
mov
sbb
xchg
lcall
pop
pushf
decl
fidivrs
or
insb
cmpsb
hlt
xchg
pop
mov
fmull
lea
add
adcl
dec
scas
push
outsb
mov
or
push
and
icebp
decb
jp
mov
sub
mov
sub
lret
dec
xor
out
xchg
cmc
sub
adc
add
mov
das
add
cwtl
mov
cmp
rcrl
ss
arpl
sub
scas
ret
dec
ret
test
dec
mov
clc
nop
push
inc
aaa
push
scas
push
es
push
pop
pop
call
adc
xchg
xchg
shrb
fidivrs
cli
imul
push
imul
xor
push
clc
pop
xor
cmpsl
lods
arpl
mov
lods
imul
in
jge
ds
xlat
mov
enter
sbb
or
mov
divl
and
cmp
mov
mov
and
shrl
push
sti
dec
jb
or
pushf
sbb
repnz
and
add
sub
in
cmp
divl
add
xchg
jb
mov
fcompl
dec
cmc
sub
pop
inc
decb
push
or
mov
ret
fbld
stc
mov
shll
shr
xchg
mov
sub
xor
fwait
cmpsl
jne
inc
lret
in
daa
pop
lods
in
jns
icebp
adc
dec
jmp
mov
dec
push
hlt
inc
mov
cld
loop
cld
clc
mov
enter
pop
jecxz
push
and
lret
loop
inc
lock
jl
cs
adc
cmp
in
in
mov
push
arpl
into
jae
cmp
sub
inc
sub
mov
shl
push
mov
jno
mov
pop
adc
push
fimull
mov
pmuludq
dec
iret
cmp
jge
xor
stos
pop
test
pop
adc
sbb
clc
scas
and
pop
add
xchg
and
jmp
mov
loope
jne
push
les
mov
mov
lea
mov
adc
sub
aas
mov
and
pushl
mov
stc
lods
mov
iret
pop
push
ja
repnz
xchg
dec
dec
inc
out
iret
pushf
xor
sbb
loope
xlat
inc
std
mov
lods
cltd
pusha
mov
je
lret
nop
out
xchg
shrb
sbb
movsl
addr16
lcall
fildl
adc
in
pop
jmp
inc
rcpps
mov
or
mov
jle
dec
mov
pop
adc
adc
mov
bound
dec
mov
int3
mov
mov
mov
and
dec
pop
adc
add
das
mov
sarl
mov
test
xchg
pop
push
or
cwtl
test
push
push
jns
jnp
push
js
inc
clc
push
std
sub
stc
insl
mov
push
icebp
pop
xchg
sbb
sahf
xchg
cmp
repnz
loop
mov
lret
sarb
out
xchg
dec
pushf
mov
pushf
sub
jle
and
lcall
or
ficoml
lods
pop
pop
stos
scas
xor
push
shr
clc
push
push
fwait
pop
mov
cmp
pop
movsl
sub
cmovg
mov
int3
adc
fsubrl
dec
cmp
ret
popf
scas
cmpsb
mov
push
imul
push
in
insl
repz
push
pop
jecxz
dec
fistpll
js
adc
mov
jb
mov
add
xchg
rcll
stos
fcomip
adc
pop
sub
lods
mov
adc
jns
push
mov
add
and
daa
lods
iret
cmp
push
adc
mov
dec
gs
pushf
jecxz
sbb
aaa
lea
mov
cmp
xor
sub
xchg
adc
arpl
roll
clc
lret
mov
xchg
mov
lea
bound
mov
xorl
jo
add
mov
xchg
aaa
insb
pop
div
and
jnp
insl
sbb
sub
adc
movsb
adc
lods
dec
jl
adc
pop
popf
mov
mov
out
imul
xor
push
movsl
aaa
loop
mov
jl
inc
dec
jnp
mov
and
jnp
out
in
jno
or
in
jp
push
mov
xchg
ret
push
dec
cmp
cwtl
je
jecxz
xor
cmp
test
add
sub
sbb
adc
data16
add
inc
pop
cwtl
popf
clc
lea
cs
pop
sbb
or
cmp
sub
fmull
in
ficomps
lods
push
pop
push
dec
jl,pt
insb
pop
sbb
or
cmp
sub
fmull
in
ficomps
lods
push
pop
push
dec
jl,pt
insb
pop
sbb
or
cmp
sub
fmull
in
ficomps
lods
push
pop
push
dec
jl,pt
insb
pop
sbb
or
cmp
sub
fmull
fwait
test
inc
adc
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
movsl
push
xchg
pusha
test
push
jmp
jns
vunpckhps
add
adc
roll
push
stc
pusha
test
add
adc
and
xor
loopne
lock
loop
mov
inc
push
push
pop
pusha
pop
jo
add
xor
push
sarb
pusha
lock
lds
incl
rcrb
mov
inc
jmp
and
in
psubd
xor
pop
push
fmuls
mov
inc
sbb
inc
jb
push
pop
rclb
andl
es
jo
sub
nop
loope
jge
cmc
cmp
mov
inc
loopne
xchg
sbb
lea
arpl
add
push
popf
pop
jns
imul
jo
add
adc
scas
sbb
mov
push
pop
inc
cmp
mov
sbb
pop
xor
cmpsb
xchg
nop
gs
lods
pop
dec
cmp
xchg
push
jnp
or
popf
sub
rolb
mov
rcrb
ss
push
mov
mov
inc
repz
xchg
pusha
test
add
xor
sarb
cmp
mov
xlat
push
loope
std
sbb
outsb
lds
movsl
jbe
jo
pusha
mov
loope
jecxz
mov
rclb
in
pushf
dec
xorb
xor
ja
adc
jecxz
sti
cmp
add
leave
add
or
adc
aad
lds
xor
loopne
lock
gs
push
mov
movsl
push
xchg
pusha
test
add
adc
and
xor
loopne
lock
gs
push
mov
add
push
rolb
cmp
or
negb
mov
cs
mov
jecxz
dec
jle
fnstenv
adcb
mov
mov
push
mov
ffree
inc
add
in
push
cwtl
jmp
push
inc
inc
ror
in
sub
rcr
cmp
push
cld
jle
fistl
cwtl
insb
orb
int3
ljmp
rorb
stos
xor
repnz
pushf
insl
mov
lcall
loope
and
adc
mov
mov
inc
pop
aad
and
xchg
sbb
call
push
lock
push
les
fisubrl
mov
popa
stos
and
shlb
adcl
lds
or
int3
cmp
inc
and
mov
insl
pushf
push
js
cmp
adc
repnz
hlt
lea
adc
mov
mov
xchg
xorb
outsb
arpl
and
ljmp
dec
xchg
add
mov
outsl
sti
mov
push
imul
cmpsb
ja
jnp
inc
pop
jno,pn
hlt
dec
dec
sarb
cld
adc
or
xchg
xchg
xchg
xchg
add
xor
pop
inc
push
adc
mov
shll
loop
fcmovbe
pushf
ret
mov
pop
in
mov
out
or
ss
push
push
int3
jnp
psubd
fisttpl
lcall
push
mov
ds
mov
ret
mov
pextrw
or
stos
jbe
fsubl
nop
dec
mov
mov
mov
mov
jecxz
stc
pop
mov
stos
mov
dec
pop
jge
mov
and
sub
sub
aas
shrb
jp
or
cmp
adc
inc
rorb
stos
pop
inc
jne
pop
mov
pop
jge
pop
pop
add
or
rolb
add
push
mov
testb
jle
jnp
sti
mov
mov
hlt
sbb
int
inc
inc
cli
cmpsb
pop
sbb
xlat
sbb
ljmp
lret
jno
cld
stos
sbb
adc
push
sti
and
or
xor
xor
mov
ljmp
mov
out
iret
xor
repz
cwtl
inc
and
test
sbb
lret
imul
cmp
mov
mov
ja
loope
xorl
cli
arpl
loope
inc
mov
push
cmp
fs
xor
pushf
ds
sti
jb
mov
mov
sub
cmc
xchg
cmp
mov
xor
ljmp
ljmp
dec
out
mov
xlat
and
sbb
xchg
ss
xor
imul
mov
popa
rorb
into
push
mov
jbe
push
repz
push
ret
xchg
test
nop
and
lock
hlt
sub
dec
mov
xor
jns
mov
xor
mov
push
sub
sbb
xchg
and
cmp
xor
sbb
lock
lea
jae
jno
je
cmc
ss
lea
mov
and
sbb
mov
dec
ret
push
push
cmp
jmp
insb
adcb
in
dec
sub
mov
scas
movsl
xchg
push
push
push
push
mov
mov
adc
push
mov
cmpsb
jmp
int
mov
lret
stos
sbb
test
and
mov
inc
hlt
jo
into
add
pop
mov
pop
jae
xor
ds
leave
in
ljmp
aad
cmp
sbb
mov
jmp
nop
outsl
idivb
mov
std
add
adc
mov
push
ret
cmp
cmp
aaa
sbb
inc
dec
cmp
push
daa
jl
ja
icebp
adc
dec
sbb
stos
ljmp
cmc
lret
mov
test
scas
daa
adc
mov
add
aad
test
jae
adc
icebp
test
xchg
jecxz
gs
adc
xchg
inc
and
mov
xor
out
lcall
or
aas
arpl
enter
xor
aaa
icebp
mov
das
xchg
jnp
push
mov
xor
fsts
xchg
cmpsl
push
push
jb
scas
xorb
sti
lock
ljmp
mov
add
repnz
ds
loope
mov
and
jne
cwtd
mov
leave
fisttpl
fadd
test
lret
xchg
shl
or
dec
shlb
aad
or
or
cli
movsb
out
mov
xor
push
in
inc
xor
pusha
in
call
xchg
aaa
push
sub
inc
xchg
adc
adc
mov
push
cld
xchg
daa
fsubl
sbb
mov
sub
mov
mov
and
xchg
sbb
and
enter
add
ja
fwait
ret
xor
in
in
inc
jmp
call
sub
in
clc
lods
sti
sbb
mov
fcoml
and
iret
and
sbb
cmp
fstpt
movl
xchg
push
imul
sahf
cltd
sub
mov
lret
pop
insb
mov
sahf
mov
or
aad
mov
pop
push
loopne
xlat
jns
sbb
por
inc
push
popa
xor
dec
mov
add
lret
ja
dec
cs
add
or
pop
mov
dec
cli
hlt
movsb
pusha
and
xchg
mov
or
or
int
incb
gs
es
int
loope
push
out
sbb
fsubrp
jnp
xor
in
add
fwait
dec
imul
ja
push
stc
add
gs
in
jnp
in
lahf
in
cmp
dec
inc
ljmp
xchg
rcrb
dec
mov
iret
test
inc
xchg
sti
sbb
dec
add
mov
dec
lods
jnp
pop
pop
and
cmp
jp
xor
cli
cmp
cmp
call
push
xchg
xchg
out
scas
xor
sbb
cmpsl
sbb
ror
pop
cmc
inc
pop
fnsave
add
xchg
jge
pop
or
loope
mov
xchg
ror
mov
fxam
jle
in
ret
inc
cmc
sbb
ljmp
pop
sbb
cwtl
lods
pop
fnstcw
cmp
and
int3
fisubl
xchg
in
cmp
mov
and
pop
adc
xchg
pop
aam
sti
xor
lds
arpl
dec
cmp
aad
mov
and
and
mov
fisubl
mov
sub
sub
les
push
jne
sub
out
je
bnd
or
and
pop
jnp
or
inc
adc
mov
sbb
mov
cwtl
sub
dec
adc
adc
stc
mov
fsubp
or
sub
jae
movsl
repz
inc
addb
sub
pop
repz
pop
repnz
hlt
pop
adc
loopne
xor
int3
lcall
sbb
inc
lods
mov
sbbb
loope
call
pop
mov
cli
mov
sbb
jl
aam
xchg
xor
push
jo
daa
mov
push
ljmp
pusha
arpl
mov
pop
pop
cmp
insb
cmp
in
leave
inc
add
in
jg
insb
movsb
mov
mov
ja
push
insb
clc
cwtl
jnp
pop
andl
inc
adc
mov
movsb
mov
andb
or
insl
mov
es
mov
push
mov
dec
jle
int
xchg
or
in
sbb
push
sti
dec
sbbb
pop
rorb
inc
psubb
adc
or
scas
mov
and
xchg
mov
jo
cmp
sbb
pop
xor
pop
sub
insb
jp
adc
sti
pop
in
mov
ss
and
movb
push
pop
rol
into
testb
repz
jge
sarl
xchg
push
xor
gs
popa
scas
iret
jp
sahf
xor
stc
jns
rcrl
or
add
iret
bound
add
movsb
sub
loope
cmp
mov
push
stc
add
test
and
pop
pop
cmc
nop
imul
lret
push
scas
dec
pop
outsl
pop
fldl2t
or
iret
fidivl
pop
div
mov
and
sub
scas
clc
cmp
popa
mov
imul
test
stc
push
fnsave
xchg
lods
jle
insb
loopne
dec
adc
sub
jmp
push
pop
scas
cli
xchg
ret
cwtl
mov
je
sub
stos
cli
jecxz
mov
dec
out
iret
jg
sub
jl
insl
je
fcompl
mov
sahf
popa
xchg
and
dec
pop
popf
mov
adc
push
xor
scas
loop
out
divl
and
arpl
mov
jecxz
fstpt
fsubl
jno
mov
andl
mov
sub
rcl
mov
orb
or
xor
outsb
adc
jb
inc
test
lock
fnstenv
mov
cmp
mov
insb
push
mov
fnstcw
pop
push
jae
lods
iret
ss
adc
lahf
pop
mov
sub
out
jno
lahf
dec
pop
jmp
mov
push
loopne
std
popf
je
pop
cmpsl
mov
pop
aad
lods
xchg
cmc
pop
sbb
mov
or
clc
lcall
sub
daa
andb
enter
mov
loopne
je
jne
divl
sub
mov
fisttps
jl
inc
pop
push
icebp
mov
pop
insl
cmp
popa
int
sbb
or
pop
xchg
data16
xchg
mov
cmpl
and
in
and
jge
inc
pop
jecxz
mov
adcb
pusha
inc
pop
xchg
lock
mov
dec
mov
repnz
or
movl
xor
cmp
mov
test
flds
leave
push
xchg
sub
cmp
push
fidivrs
popa
inc
inc
and
mov
jmp
sbb
push
test
pop
mov
pop
loop
call
jns
or
mov
daa
ja
mov
enter
aaa
sarb
pop
xor
fwait
daa
gs
dec
or
cmp
add
jne
stos
movsb
gs
stc
inc
test
jg
or
nop
jnp
lcall
and
push
adc
xchg
outsb
xor
in
ja
loopne
dec
dec
imul
mov
sub
pop
out
iret
call
repz
cmp
mov
popf
cmp
fcmovnu
test
jns
sub
xchg
fdivrp
aam
pop
sub
and
cmp
insb
dec
and
pop
xchg
xchg
daa
std
int3
mov
dec
ss
push
sub
call
aad
xchg
ret
fcmove
fists
add
jmp
mov
jle
inc
out
and
xor
mov
sbb
fwait
fwait
push
out
data16
jge
cs
push
clc
mov
daa
or
leave
mov
jge
add
mov
push
sub
xchg
in
dec
adc
cmp
mov
mov
push
pushf
arpl
out
movsb
ror
adc
xchg
push
jns
push
shrl
lret
orl
scas
pop
mov
bound
jb
js
repnz
sub
or
outsl
fmulp
cli
push
cmp
cmc
into
out
push
sbb
sbb
divl
xlat
push
mov
mov
je
mov
xor
jp
imul
adc
push
sbb
cmp
push
lock
fdivp
cltd
ljmp
adc
and
pop
movsb
in
cli
inc
stos
mov
sarb
xor
lcall
xchg
cld
push
adcl
or
push
sub
jo
repnz
xchg
test
into
imul
xchg
sub
popf
cmpsb
jg
mov
jecxz
and
outsb
jg
and
push
stc
mov
hlt
and
jmp
mulb
adc
xchg
fcomp
lahf
cwtl
ret
mov
ss
imul
aam
dec
cmp
or
roll
fadd
aad
out
ljmp
and
ljmp
xor
insb
cmc
insl
jecxz
add
xchg
stos
scas
std
divb
stos
push
mov
jge
jne
push
call
xchg
iret
out
or
mov
mov
jno
dec
sub
out
mov
popa
adc
sub
inc
aas
mov
inc
add
xor
in
inc
aam
ret
jns
xchg
test
jmp
loopne
mov
pop
mov
sbb
or
mov
pop
jl
iret
cmp
cmp
push
and
es
jb
mov
test
mov
je
sbb
sub
jnp
addr16
sub
popa
adc
bswap
dec
div
push
xlat
jns
and
sub
push
push
push
adc
in
ret
push
add
adc
sbb
out
pop
sti
adc
mov
ror
and
mov
mov
inc
jae
or
jp
loopne
add
outsl
lds
pop
push
mov
lods
call
call
inc
cmpsl
jmp
adc
xchg
ret
sub
outsb
popf
jp
and
fwait
jns
popl
js
pushf
cwtl
dec
ror
out
mov
loope
jge
push
adc
cmp
in
lcall
rcrl
outsb
mov
loopne
pop
adc
ret
mov
jmp
adc
cld
sarl
loope
aad
sub
iret
cmc
orl
cmp
xor
or
adc
or
test
sarl
and
mov
inc
int3
enter
icebp
incl
popa
clc
mov
lock
pop
stos
mov
adc
adc
fnstcw
les
and
outsb
or
and
jae
dec
mov
add
pop
sub
adc
mov
pop
pop
mov
cmp
jmp
xor
arpl
jg
cltd
lods
inc
ljmp
outsl
fldl
sahf
jne
fisttps
outsl
dec
jmp
es
sub
dec
movhps
xchg
mov
xchg
out
test
mov
frstor
xor
jno
inc
pusha
mov
popf
xchg
sbb
sub
call
cli
dec
xchg
xchg
pushf
out
push
push
fwait
sbb
pop
mov
outsb
mov
nop
ret
dec
sbb
xor
aaa
add
sbb
add
lret
rorl
scas
fldcw
rcrl
adcl
pushf
paddq
jno
mov
enter
mov
sbb
push
scas
pop
in
mov
mov
jmp
xchg
stc
call
loop
icebp
lret
bound
pop
fwait
mov
push
xor
int
fbstp
xchg
fidivl
inc
dec
icebp
mov
pop
add
movsl
sahf
mov
rcl
repnz
cmp
sub
dec
xor
test
mov
pop
inc
loopne
insb
adc
mov
les
adc
lret
ljmp
xchg
out
movsb
and
jecxz
ss
movsl
in
adcl
adc
sahf
les
xor
inc
add
dec
jle
cmp
sti
insb
dec
mov
mov
push
or
negb
rorb
inc
push
and
int3
out
cmp
rep
xor
cmp
cmp
push
test
jne
outsl
add
clc
mov
xor
scas
cmp
shlb
adcl
sub
jecxz
in
loopne
mov
fnstenv
push
pop
jns
mov
adc
insb
bound
and
rclb
add
jp
sub
jle
dec
and
aaa
dec
je
cs
xor
sub
pop
andps
push
outsb
pusha
inc
sub
or
pusha
les
mov
jecxz
inc
mov
cmp
out
lea
jne
or
imul
cmpsb
aad
mov
in
roll
or
xor
mov
dec
cmc
movntps
sahf
push
sub
xor
mov
xchg
les
dec
pushf
and
dec
test
cmpsl
stc
roll
dec
std
mov
dec
pusha
cmpsb
mov
fimull
fnstcw
icebp
jne
push
push
xor
lods
cli
ljmp
xor
mov
push
fdivrl
cli
pop
cmp
imul
mov
cmpl
jg
or
sbb
mov
pop
cmp
push
ljmp
inc
movsb
and
pop
mov
fcmovnbe
mov
stos
outsl
sbb
push
mov
xchg
imull
push
addr16
int
test
rclb
pop
push
inc
and
rcl
jnp
mov
and
push
cltd
jnp
fcoml
xor
fs
test
pop
aaa
imul
pop
jb
xchg
test
imul
aaa
mov
imul
aaa
cmp
shll
push
aad
pop
leave
outsl
dec
outsb
inc
aad
pop
cmc
stos
add
inc
push
test
cmp
test
and
sahf
bound
in
clc
rclb
and
mov
neg
mov
and
out
xor
inc
cld
fidivrs
imul
rolb
mov
xchg
mov
iret
loope
mov
enter
insl
das
popa
orl
xor
xor
push
mov
sub
sti
mov
shrl
in
adc
shrl
shl
or
out
aad
in
xorb
loopne
lcall
xchg
outsb
mov
shl
xchg
cmc
test
jle
add
cmp
fnsave
mov
sub
mov
ja
aas
push
add
clc
push
cmp
mov
mov
pop
cmpsl
ss
jle
nop
pushf
jo
push
test
clc
sti
ffree
sbb
pop
paddusw
loopne
idiv
daa
xchg
orl
negl
cld
sti
xchg
pop
jbe
mov
sbb
sbb
loope
lcall
and
inc
ret
test
icebp
aam
dec
push
pop
jb
aam
loopne
dec
jnp
outsb
sub
mov
jmp
lods
mov
push
inc
stos
xor
mov
or
and
adc
xchg
es
xchg
add
jl
inc
hlt
or
push
sbb
mov
cli
mov
inc
loopne
aas
repnz
jle
pop
dec
sbb
jbe
js
out
inc
xchg
icebp
rcr
fisttpll
mov
pop
incb
test
adc
push
xor
addr16
xor
mov
inc
push
outsb
push
jmp
lahf
push
mov
add
jecxz
push
out
ret
cmp
jne
push
inc
subl
dec
aam
cmp
mov
cmp
pop
sbb
cmp
imul
int
fs
push
shrl
pop
les
stc
ss
lret
mov
call
repnz
xchg
dec
ds
pavgw
les
test
in
dec
dec
cmpsb
pop
lahf
xchg
rolb
fmul
decb
ds
arpl
pusha
fisttps
outsb
iret
cmp
cmp
rep
cltd
loope
and
mul
mov
scas
aad
sbb
ss
ds
aad
dec
retw
jne
cld
orb
push
xlat
dec
xor
jg
push
dec
inc
sub
xor
pop
pop
pop
mov
xor
add
loop
pop
int3
pinsrw
push
into
xchg
frstor
mov
and
adc
and
push
inc
cmp
push
mov
cmp
sbb
jmp
in
mov
dec
cwtl
leave
mov
test
xor
mov
jns
iret
int3
ret
and
cltd
sub
xchg
in
in
mov
ds
loop
adc
mov
mov
or
sbb
inc
scas
js
inc
jecxz
add
lock
fwait
cmpsl
push
push
push
sub
pop
xor
push
jmp
add
and
push
adc
loope
adc
in
subl
test
rcrl
bound
jb
ret
and
pop
call
pop
jb
adc
adc
or
dec
frstor
mov
in
testl
jg
sbb
and
inc
adc
decl
cs
popf
sub
shrb
notb
mov
repz
sahf
pop
popl
test
aaa
jge
mov
lcall
mov
pop
fildl
cltd
cmpsb
insl
sub
imul
mov
adc
sti
fnstsw
pop
mov
shlb
jo
aaa
push
sbb
fcoms
lahf
push
mov
popf
jne
dec
mov
int3
sbb
jnp
icebp
xor
mov
cltd
add
dec
ficomps
jnp
stos
inc
xor
xor
or
lahf
mov
push
shll
not
xchg
push
shlb
mov
sub
out
mov
cltd
mov
loopne
push
hlt
pop
sub
sbb
jle
xchg
mov
in
enter
jb
es
and
jle
jle
jl
or
mov
pusha
test
add
adc
and
xor
loopne
lock
gs
push
mov
movsl
push
xchg
pusha
test
add
adc
and
xor
loopne
lock
gs
push
mov
xchg
shl
loopne
jo
add
nop
aad
add
shl
loopne
lock
jne
push
mov
stc
push
iret
pusha
movsl
jo
add
adc
and
xor
loopne
xchg
or
outsl
stos
pop
mov
jno
add
adc
adc
gs
mov
int
popf
sbb
sar
sbb
sbb
adc
pop
jno
inc
jge
xchg
jg
int
fdiv
in
sar
adc
add
xor
push
inc
cmp
push
lea
leave
jecxz
mov
xchg
sahf
mov
mov
gs
je
outsb
mov
nop
jbe
gs
fs
push
jp
cmp
std
in
repnz
sub
cli
popf
mov
bound
jle
shll
scas
add
pushf
orb
fs
jmp
add
or
addb
adc
push
frstor
or
adc
dec
inc
test
cmc
push
lods
jle
nop
dec
hlt
mov
adc
in
mul
int3
je
dec
out
sbb
subb
andb
popa
mov
in
xchg
add
into
bound
lock
orb
push
push
mov
mov
sub
sbb
adc
inc
jno
inc
fs
xchg
mov
movsb
lods
aad
lds
in
ftst
jecxz
and
dec
insl
pop
jge
les
sbb
xor
push
stc
loop
rcr
shl
mov
mov
mov
dec
jb
jge
xor
and
sub
bound
ror
mov
popf
movsb
std
mov
dec
insl
cmp
jno
inc
jge
lea
mov
icebp
in
sar
or
add
jno
inc
jge
lea
mov
icebp
in
sar
or
jl
jmp
jno
shr
and
lret
push
adc
dec
loopne
push
clc
add
inc
fdivrl
adc
push
add
add
cmp
outsb
and
cmpsl
push
xor
aaa
std
adc
xor
xor
dec
leave
mov
inc
adc
push
jbe
ss
enter
test
das
pop
fcoms
int
adc
les
mov
xchg
mov
rclb
mov
xlat
inc
sub
mov
int
pop
mov
ljmp
fimull
dec
push
or
stos
bound
cmp
adc
loope
sub
pop
jb
add
or
lods
nop
pop
arpl
stos
xor
mov
dec
pop
imul
inc
dec
lcall
jnp
js
cmp
xor
pop
inc
jae
js
mov
sbb
fistps
stc
andl
cmp
repnz
adc
add
push
sub
adc
mov
push
ret
inc
push
mov
movsb
flds
sbb
movsl
push
imul
je
push
out
sbb
push
xor
jo
mov
hlt
xor
test
mov
inc
cmpsl
xor
sti
jae
lcall
fildl
ja
sbb
add
and
cltd
nop
pushf
cmp
icebp
xor
mov
adc
gs
scas
cli
call
arpl
sub
andb
inc
ja
mov
pushf
xor
mov
cmpsl
jbe
add
dec
fwait
xor
outsl
lods
fcompl
or
outsl
ljmp
bound
mov
cs
cmp
jns
xchg
cs
mov
mov
inc
hlt
enter
movsl
mov
fwait
popf
and
dec
pop
iret
sub
lret
cmp
xor
scas
fnsave
inc
das
push
mov
loope
add
jge
dec
lret
mov
loop
data16
enter
pop
mov
mov
in
dec
mov
out
jp
movsb
scas
iret
cmpsb
pop
xlat
add
dec
sub
jne
xchg
imul
mov
sar
ljmp
out
xchg
callw
inc
in
adc
rcll
aam
mov
rorb
xor
mov
adc
add
pusha
cs
inc
jns
and
jle
sbb
pop
dec
and
mov
sub
hlt
xchg
cmp
push
inc
adc
mov
sub
iret
jb
push
mov
adc
mov
std
jecxz
aaa
adc
fwait
sub
ljmp
test
in
out
cmpsl
in
jae
sub
jns
out
xor
and
xlat
stc
stos
fs
push
mov
push
mov
icebp
rcr
fldl
jmp
pop
xchg
dec
push
push
scas
lods
dec
in
pop
call
cld
push
les
inc
adc
stc
cmp
hlt
fcmovu
and
sub
aaa
sub
jae
enter
sti
in
jle
int3
fs
cmp
jecxz
pop
test
jl
dec
shlb
daa
xorb
in
sub
movl
adc
lret
sbb
push
jb
fldenv
test
push
rclb
sar
jbe
lea
pop
sub
pushf
test
fdiv
lahf
jp
dec
lret
enter
push
xor
lds
xchg
lock
ficompl
push
and
sub
push
sahf
cmc
mov
mov
cmp
mov
jne
mov
movsb
sub
pop
or
mov
mov
pop
adc
fwait
test
lret
leave
cmp
mov
dec
pop
sahf
test
jae
mov
mov
and
mov
les
insl
xchg
or
ror
sbb
and
mov
push
mov
mov
sbb
mov
cld
mov
xchg
sbb
pop
dec
dec
aam
lods
push
enter
test
jne
vdivps
dec
push
mov
inc
jmp
jmp
fsubrl
sti
sti
test
inc
jg
jbe
ja
dec
mov
cs
es
sbb
xor
inc
dec
jne
jecxz
sub
ret
inc
or
mov
fimull
mov
shr
testb
stos
xor
popf
icebp
xor
xchg
inc
test
pusha
mov
or
jecxz
mov
int
rcrl
enter
or
jo
xchg
or
push
cmpsl
mov
sbb
sahf
xchg
pop
clc
mov
dec
mov
in
adc
lea
push
jge
jge
or
cmp
data16
lcall
ficomps
std
inc
fmull
jecxz
sub
fadds
int3
xor
adc
nop
into
jbe
mov
fwait
cmp
lds
aad
push
outsb
sarb
and
ja
xor
cmp
in
js
xor
inc
adc
rcrl
and
adc
push
adc
pop
mov
loopne
jbe
dec
into
ror
or
int3
adc
repz
inc
cmp
mov
adc
cltd
dec
xorl
cmpsl
cmp
pop
nop
or
insb
sahf
repz
mov
and
xlat
mov
jl
iret
xchg
jl
div
std
jecxz
js
jl
cmp
mov
imul
mov
es
cmc
cmp
push
add
icebp
loope
cmpsl
insl
mov
movsb
dec
xor
sub
dec
stos
rcrl
mov
inc
cmp
rcrb
sahf
cwtl
inc
push
enter
mov
jl
iret
jb
movsb
or
push
ret
leave
mov
jo
aad
adc
test
fwait
mov
jp
test
or
jecxz
fnstcw
mov
push
imul
sub
fistl
cmp
gs
movsb
jecxz
push
jbe
call
cmpsl
xor
orl
jae
ss
mov
mov
jo
xor
lcall
addb
push
and
cmpsl
inc
aas
mov
jb
sub
pop
sub
clc
add
scas
cmpb
push
mov
push
jmp
and
loope
lock
push
sbb
in
popf
movsb
call
fcoml
les
cld
insb
cld
mov
push
aam
push
dec
sbb
dec
add
sahf
outsl
push
leave
bound
shlb
outsb
adc
ficomps
loope
cli
enter
je
roll
push
call
xor
ja
fstl
std
sahf
and
pop
jl
dec
nop
pop
cmp
test
ljmp
ss
cmp
int
or
push
cmp
ja
inc
cwtl
mov
in
cmpb
xchg
fmul
mov
dec
mov
xor
dec
add
test
scas
xchg
std
je
testl
in
sahf
test
xchg
rcrb
clc
std
rcl
sahf
scas
pop
mov
fmull
xor
aad
pop
mov
sub
dec
xchg
fcoms
mov
call
call
cmpsb
and
fwait
cmp
push
imull
fnstenv
addl
testb
inc
sbb
push
fildl
ss
xor
pop
add
push
lock
sbb
cmp
sbb
lods
stc
pop
cmpsb
jmp
js
bound
adc
mov
adc
or
xor
inc
mov
and
xchg
jmp
in
ret
sbb
fisttps
pcmpeqb
adc
pop
jl
std
hlt
int3
push
adc
sbb
pop
jl
mov
pushf
mov
jo
or
in
xchg
stos
stos
icebp
sbbl
xchg
js
fldcw
pop
fcoml
lcall
sbb
sbb
pushf
add
pop
jmp
push
lret
stc
inc
mov
out
icebp
ja
icebp
mov
push
mov
mov
cmp
sar
ret
mov
inc
push
push
mov
es
dec
cwtl
sub
or
bswap
mov
repz
fwait
shll
push
sub
mov
adc
push
pusha
lock
jp
or
rcr
pop
inc
cltd
pop
jnp
mov
jo
xor
bound
mov
cmp
lret
pop
arpl
stos
out
in
bnd
jmp
xorb
adcb
out
cmp
outsb
mov
xchg
lret
enter
pop
push
imul
inc
jle
stc
rorb
out
out
lret
mov
fs
push
out
jnp
cli
sub
push
loop
out
xor
inc
or
sbb
inc
iret
fwait
xchg
jnp
orb
rcll
sti
mov
clc
pop
in
add
mov
push
insb
ds
mov
mov
add
aaa
cmc
mov
shr
add
mov
adc
push
lock
cwtl
std
sbb
das
gs
add
push
adc
xchg
or
sti
mov
cmp
push
or
das
fcompl
pop
inc
jae
pop
sbb
pop
out
mov
sub
xor
lcall
leave
mov
inc
pop
jnp
popf
lods
or
adc
xlat
push
pop
push
out
fildll
call
mov
mov
mov
pshufw
aas
sbb
or
jl
aam
mov
ret
sbbl
js
pushw
cs
out
jmp
add
fnstsw
adc
inc
fcmovnb
sbb
int
push
subl
cmpsl
xchg
push
dec
adc
pop
cmovne
sbb
sbb
aam
movsb
aaa
iret
imul
je
pop
inc
cmp
and
fbstp
mov
mov
jnp
inc
std
dec
insl
mov
xchg
gs
shl
cltd
out
sub
loope
mov
mov
sti
shlb
and
data16
aad
btc
inc
std
mov
shrl
adc
sub
inc
sub
pushf
cmp
push
sub
inc
mov
cld
mov
in
sub
pop
out
push
rclb
jp
pop
rcr
lret
adc
pop
mov
cmp
ret
jnp
adc
outsl
dec
int
sbb
es
dec
test
cmp
sahf
loop
push
push
push
daa
adc
push
inc
push
lahf
popf
pop
inc
add
dec
ss
pop
cmpsl
call
sarb
pop
xor
dec
and
or
sub
cltd
or
cmp
ror
pop
out
sub
scas
xor
mov
mov
pop
daa
pop
imul
insl
mov
fistpll
jge
aaa
mov
daa
or
sbb
inc
aaa
pop
cmpsb
ficoml
sarb
outsb
fldpi
jae
shld
mov
mov
mov
xor
insl
cmp
ja
xor
in
jmp
insl
mov
mov
xchg
pop
dec
lret
out
fmul
xorl
cli
mov
sbb
xchg
cli
sub
xchg
loopne
in
addr16
test
cmp
mov
in
xor
test
dec
or
dec
roll
jmp
jecxz
mov
sbb
and
sbb
out
cmp
mov
sti
pop
sbbl
fcoml
fidivs
in
xor
jnp
popa
adc
mov
outsl
iret
xor
xchg
mov
rcrl
sub
mov
gs
push
push
fucomp
add
pop
out
stos
xchg
jle
and
ss
and
dec
xlat
ja
mov
xchg
mov
push
xorl
aam
lds
fstp
dec
stos
aam
insl
jno
insb
add
mov
sub
lods
mov
jge
es
lea
lret
jbe
mov
pop
push
lcall
arpl
into
ret
aaa
adcb
fnsave
jecxz
jb
in
in
or
mov
adc
jbe
sub
sahf
pop
mov
add
mov
sub
jae
push
fwait
pop
mov
adc
cld
shlb
lock
inc
mov
pop
test
les
pop
cmp
aas
jmp
mov
lahf
dec
cs
mov
cmp
neg
test
sub
movsl
ret
iret
outsb
push
out
xchg
dec
pop
mov
dec
push
int
bnd
test
xorl
cmp
bound
stos
inc
xchg
dec
and
outsb
aam
in
fisubs
aam
stos
sbbb
test
dec
xchg
xchg
sbb
pusha
cmc
insl
fwait
mov
call
jp
fwait
jmp
push
std
cmp
add
mov
or
ss
pop
in
repnz
cmp
popa
mov
push
push
rcr
aas
pop
in
test
imul
sbb
dec
xchg
mov
movsb
dec
je
pop
inc
fdivr
xchg
test
add
orb
jge
inc
cltd
inc
xor
es
jbe
insb
scas
out
pavgb
inc
mov
sti
cwtl
data16
hlt
lret
fnstsw
in
mov
or
das
mov
shlw
lret
or
and
mov
inc
xor
daa
dec
cmp
jno
pop
test
out
shl
jg
mov
push
loop
pop
faddl
push
aas
nop
enter
fwait
jbe
sarl
imul
jno
xchg
jb
inc
nop
ljmp
dec
testb
int
push
sbb
popa
jecxz
push
hlt
out
sub
cld
dec
rorb
inc
je
lock
and
repnz
cld
mov
in
adcl
addl
addr16
jmp
push
lods
xor
repnz
mov
or
repnz
adc
sub
pop
out
dec
push
dec
mov
and
inc
jo
mov
lds
dec
push
mov
mov
pop
and
dec
inc
scas
xchg
pop
jp
repz
jle
cmp
fwait
mov
jle
mov
int3
mov
sbb
xchg
ds
cmp
xchg
xchg
add
xor
sbb
xchg
cwtl
in
es
jp
lock
lea
dec
aaa
cmpsl
mov
scas
or
rcl
rorl
inc
ret
dec
inc
mov
or
cmpsl
add
insb
inc
mov
in
fcmove
shll
adc
out
pusha
cs
push
xchg
cld
mov
jno
sbb
insb
cmpsb
pop
std
inc
inc
xchg
insb
inc
inc
adc
stc
pop
cmp
jo
inc
enter
in
cwtl
out
cs
mov
dec
js
mov
les
inc
out
popa
popf
mov
test
fstpl
stc
adc
xchg
lds
or
push
or
mov
adc
shrb
lock
sbb
xchg
sahf
xchg
cs
cmc
xchg
arpl
push
add
js
mov
adc
jb
sti
int
js
cmp
call
flds
cwtl
addr16
cmc
mov
int
lahf
and
jns
sti
ss
cltd
cmp
inc
notl
nop
leave
push
fs
jl
mull
sbb
mov
or
outsb
pop
xchg
xor
dec
fidivrs
push
mov
sbb
push
ret
xchg
ret
xor
addb
shr
bound
aaa
jb
outsl
lea
pusha
pop
sub
in
jg
insl
xor
lret
hlt
fmull
dec
push
int3
jbe
divb
stc
pop
inc
mov
and
add
or
cmpsb
sbb
pop
rorl
jp
in
add
aad
arpl
pop
scas
outsb
or
fwait
add
cmp
xor
lahf
rcll
fsubl
pop
cmc
pop
sarb
cmp
addr16
scas
inc
cmc
pop
or
pop
ss
push
repz
mov
pop
stc
or
dec
push
dec
dec
dec
sahf
and
sbb
insb
push
outsb
or
adc
clc
cmp
adc
insl
mov
gs
xlat
nop
jmp
sbb
arpl
test
and
mov
popf
mov
xor
ficoml
test
jmp
mov
xor
dec
push
cmpsl
inc
gs
scas
mov
sbb
imul
retw
xchg
imul
sbb
in
je
mov
mov
push
inc
cwtl
rcrl
in
dec
and
in
push
xchg
mov
sbb
outsb
adc
cmc
data16
jmp
xchg
out
cmp
lea
ret
sub
inc
xchg
call
jns
sub
adc
mov
rcll
pop
mov
xchg
jne
adc
inc
aas
lahf
ret
cmp
in
jae
rol
xchg
rol
adc
mov
leave
jae
ss
mov
mov
pop
cmp
xchg
roll
xor
icebp
dec
pop
nop
mov
lret
daa
std
jmp
arpl
sbb
subl
and
test
int
jge
inc
sbb
mov
push
int3
aam
mov
enter
pop
push
sub
lock
inc
sub
sub
mov
popf
shrl
xor
jmp
leave
ret
add
mov
dec
pop
ficompl
jbe
rol
adc
mov
clc
ret
out
inc
rol
cld
repnz
sub
mov
aas
xchg
sub
push
xchg
gs
cli
popa
movsl
pop
mov
in
jo
or
jg
xchg
in
shrb
xor
shr
cmc
cltd
aas
inc
clc
jo
out
pop
icebp
imul
xchg
mov
movsb
or
mov
cmp
stc
jp
into
cmp
out
ljmp
mov
sbb
mov
aaa
push
ljmp
inc
int
stos
add
lret
mov
repnz
push
testb
push
arpl
pushf
push
mov
ret
je
cmp
rcll
sub
popf
mov
iret
jne
outsl
gs
fldcw
or
bound
cmpsl
push
and
into
cwtl
mov
xchg
xchg
je
inc
mov
inc
cmpsb
mov
push
rolb
pop
lock
loopne
mov
out
dec
int3
cmp
dec
sahf
leave
xor
les
aas
sub
repz
scas
sub
icebp
jns
add
sbb
insl
shrl
sub
std
sbb
mov
cli
mov
cmp
xor
dec
mov
js
sbb
outsb
ret
xor
cmp
mov
lods
cmp
js
cmc
mov
pop
das
adc
jl
ret
dec
jmp
les
pop
ljmp
shl
aas
sbb
in
inc
outsl
jle
xchg
push
es
pop
gs
sub
out
fcmovnb
test
jecxz
dec
mov
stos
cwtl
xor
push
pop
inc
xchg
cmpsb
add
out
in
ss
mov
push
subb
hlt
mov
jbe
sahf
lock
out
xchg
mov
mov
mov
push
xchg
loop
lds
divl
add
test
pop
setae
xor
sti
jle
lea
inc
cltd
xchg
adc
daa
jbe
sbb
nop
cli
and
pop
stc
fwait
adc
push
mov
cltd
inc
je
les
dec
inc
xor
in
fimuls
mov
imull
mov
xchg
push
je,pn
popf
popf
mov
fisubl
xlat
rcrb
sbb
mov
cmpsb
aad
cli
imul
sub
inc
popa
enter
or
mov
imul
dec
xchg
insl
mov
jo
xor
xchg
xor
scas
incb
mov
test
jl,pt
mov
jl
loop
mov
imul
cli
insl
inc
and
mov
mov
mov
or
test
inc
xchg
push
jge
cmp
movsl
push
jge
in
stos
cmc
jo
imull
mov
xchg
mov
xlat
push
test
lret
scas
mov
fucom
fistl
mov
xchg
enter
pop
lods
shr
jl
pop
outsl
movsl
das
bound
nop
lret
lret
out
std
mov
and
sbb
cmc
jne
addr16
aad
fimull
cli
xchg
mov
push
je
sbb
cmp
adc
inc
or
jno
sbb
pshufw
rep
shl
pop
inc
jae
pusha
xchg
xchg
sbb
push
adc
dec
shlb
pop
sbb
icebp
pop
jmp
cmc
stos
cmc
cmp
into
inc
or
arpl
xor
lret
out
xchg
push
cmp
inc
push
add
mov
pop
pop
mov
aad
scas
ja
pop
pop
push
les
cltd
mov
or
mov
xchg
sbb
push
addb
mov
add
jne
dec
ljmp
jge
jmp
stc
enter
jo
hlt
aam
cwtl
sbb
call
jge
or
and
popa
cmpsl
jb
sbb
pmulhuw
add
repnz
out
mov
jecxz
or
xor
xor
lahf
add
mov
stos
sbb
pop
dec
mov
and
clc
xchg
push
pop
sub
movsl
add
imul
loope
mov
push
xchg
mov
xchg
inc
push
lret
xor
shlb
daa
inc
call
push
xchg
cwtl
movzwl
cwtl
cmpsl
lret
stc
test
scas
pop
dec
jle
loopne
dec
mov
mov
lds
movsl
jl
pop
out
out
or
jno
data16
fcomip
jg
and
fistpll
push
fcompl
cmp
xchg
xor
pop
adc
lea
lods
inc
jnp
cmc
fsubl
push
and
pop
add
mov
movsl
mov
int
xchg
sub
xor
cmp
jno
inc
jge
lea
mov
icebp
in
sar
or
add
jno
inc
jge
lea
mov
icebp
in
sar
or
sbb
sbb
jge
lea
mov
icebp
in
enter
lds
aad
in
push
dec
popa
pop
jno
sar
jb
bound
pop
cmpl
test
mov
xchg
ja
mov
dec
dec
add
add
pop
add
add
pop
test
sub
add
add
add
and
mov
add
add
mov
add
add
add
mov
mov
add
add
add
or
inc
add
in
add
add
add
add
push
add
add
add
add
add
inc
add
add
dec
add
add
invd
cmc
add
add
add
xchg
add
add
add
add
add
add
mov
add
or
enter
pushf
add
sub
sbb
add
add
add
add
imul
pop
add
push
add
add
add
dec
add
add
add
add
add
jo
cmc
add
dec
add
add
test
enter
mov
sahf
add
sub
push
add
add
jbe
sbb
inc
add
add
add
add
fwait
add
add
add
add
mov
pop
add
sub
xor
and
cwtl
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
sbb
rolb
pop
add
add
add
add
add
xchg
sub
sub
add
add
add
add
add
inc
add
add
inc
add
add
add
test
pop
add
sbb
fwait
add
add
add
add
add
add
pop
add
add
add
add
add
add
dec
add
lcall
add
ja
addb
add
add
add
cmp
sub
sub
add
add
fwait
add
add
add
or
add
clc
add
add
insl
add
add
out
add
add
add
add
add
test
add
js
test
pop
add
dec
add
add
add
add
add
or
and
sub
sub
dec
add
sbb
sbb
xor
inc
add
add
add
jl
jl
dec
add
xor
dec
add
add
add
add
or
push
add
add
add
or
add
nop
add
add
add
add
add
or
add
jle
in
add
add
add
add
add
add
inc
add
insl
add
add
add
dec
add
add
add
movsl
add
addb
add
add
add
add
add
add
mov
add
add
add
add
add
cmp
add
or
add
inc
add
add
add
add
xchg
adc
dec
add
add
add
add
add
add
cmp
sub
sub
scas
add
add
add
add
add
int
stc
add
add
popa
popf
pop
cmp
xor
mov
dec
and
nop
js
or
rorl
sti
sti
jge
pop
mov
fs
jns
lods
jb
sub
pop
xchg
jns
mov
mov
shlb
ss
test
lret
pop
int
insb
dec
and
cmpsl
push
mov
int3
inc
leave
out
mov
push
adc
jne
jns,pt
outsb
cmc
sub
daa
add
cmpsl
inc
cmp
test
popa
jecxz
xchg
enter
out
dec
leave
popa
imul
and
popf
nop
es
sbb
fcmove
pushf
jl
xchg
jno
insl
sub
sub
stc
sbb
aam
pop
sbb
xlat
or
mov
push
rol
sarl
daa
pop
inc
push
test
lods
stc
out
xor
fst
addr16
fcomip
jg
xchg
stos
jp
sub
pop
mov
decl
jbe
call
in
and
jl
inc
mov
rclb
sti
jl
stos
in
or
adc
inc
or
imulb
mov
fadds
js
js
sub
and
sbb
cmp
insb
pusha
pop
into
fldt
dec
or
mov
sarb
fs
inc
adc
xchg
fbstp
lret
je
xor
and
repnz
sar
stos
lock
fidivrs
fldcw
dec
bound
aam
lock
push
roll
sbb
icebp
stos
inc
addr16
int
fisttpl
and
push
xchg
je
enter
or
popw
xlat
loopne
in
int3
jne,pn
movsl
int
mov
inc
xchg
sub
insl
inc
arpl
add
ja
mov
je
jle
and
adc
adc
mov
or
movsl
cmpsb
lcall
cli
add
repnz
sub
outsl
jns
pop
add
call
push
inc
sahf
ds
icebp
test
addl
ds
movsb
ljmp
xchg
mov
iret
xchg
push
fstpl
jo
test
stos
fisttpl
or
lret
imul
add
xchg
inc
lods
cs
or
pop
sbb
outsl
mov
fwait
sbb
aaa
in
popf
inc
pop
adc
mov
sbbb
cmp
roll
ret
cmp
in
mov
pop
idivb
ljmp
push
js
lret
jns
mov
mov
pop
push
xchg
rcr
dec
hlt
pop
mov
repz
iret
adc
mov
loopne
jp
pop
pop
jo
mov
fdivl
inc
lods
shll
pop
popl
add
cmp
lea
pop
xchg
jmp
mov
icebp
sub
xchg
cmp
stc
repnz
pop
xchg
cmp
cmpsb
cwtl
push
popf
inc
call
sub
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
