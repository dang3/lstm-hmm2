call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
push
and
adc
add
push
jecxz
cs
lods
pop
orl
push
rorl
divb
out
and
adc
add
push
mov
mov
mov
ds
dec
xor
rorl
shll
and
or
scas
push
jbe
jle
add
push
mov
sarl
mov
mov
dec
cmp
push
xchg
sbb
pop
sub
mov
std
out
cli
push
lahf
mov
or
cli
xor
cmpl
into
cmpsb
fimuls
gs
fbld
and
xchg
popa
mov
loope
loope
das
push
sarl
fwait
xor
or
dec
jno
jle
mov
icebp
stos
jnp
adc
and
push
loope
push
sub
inc
mov
aam
or
sarl
jnp
out
shll
imul
dec
push
sbbb
ja
xchg
dec
xchg
mov
cs
ror
xor
fiadds
mov
popa
sahf
dec
ss
mov
push
cwtl
pop
jmp
push
mov
lcall
jge
fsubrs
les
out
push
pushf
inc
mov
rorl
decb
and
add
push
repnz
das
sarb
and
dec
orl
mov
fldl
je
sbb
mov
mov
mov
ds
loope,pn
rorl
sar
out
and
adc
add
push
mov
mov
mov
ds
loope,pn
rorl
sar
sub
repnz
roll
ljmp
sbb
enter
mov
fs
and
mov
or
dec
fistl
sub
movsl
rorl
test
push
fisttpll
shll
daa
mov
aam
ds
movsl
icebp
std
nop
xor
fxtract
loopne
test
lods
rolb
jno
cmp
mov
aaa
hlt
push
inc
rolb
je
les
mov
xchg
push
add
and
and
push
jg
into
xor
push
orl
add
ss
div
rol
scas
insb
daa
and
pop
xchg
pop
jns
fsub
or
loope
bsf
adc
fnstcw
aad
test
inc
stc
shll
or
add
adc
ljmp
push
jns
dec
add
dec
mov
ljmp
xor
ret
call
fisttps
adc
jp
test
popa
xor
jnp
pop
arpl
lds
hlt
or
out
or
loop
test
jge
pop
add
dec
mov
xor
push
pushf
psllw
cmpsl
pop
out
roll
cmp
out
inc
nop
cmp
shrl
js
xchg
in
jl
mov
cs
rcrl
stos
sub
mov
pop
xor
mov
or
lcall
insb
jno
xchg
cli
out
cmp
and
jmp
imul
cmp
sub
sbb
pop
test
push
daa
scas
sbb
outsb
lret
enter
mov
adc
cmp
dec
mov
je
mov
out
jns
imul
orb
mov
stc
pop
pusha
repnz
rcrl
decl
dec
push
adc
leave
not
add
das
out
int
mov
lods
inc
xchg
sbb
js
fcom
xchg
mov
add
push
dec
dec
xchg
scas
loopne
jb
pop
inc
cmp
push
sahf
adc
mov
pop
pop
xchg
and
jg
jmp
jmp
sub
aad
jb
inc
scas
xorb
or
add
push
sti
mov
dec
pop
fisttpl
outsb
cli
jno
jns
ds
mov
cltd
jo
mov
sar
pop
pop
mov
sub
fs
addl
ror
mov
push
imul
mov
or
dec
mov
xor
adc
or
popa
outsb
std
js
out
mov
inc
mov
movsl
jb
push
gs
loope
cmp
leave
inc
out
lret
sbb
xor
sub
pushl
fcomi
sahf
es
mov
stos
cmp
jae
das
dec
mov
xor
or
dec
mov
aam
fcmovb
rcl
jnp
movsb
orb
addr16
xchg
leave
and
sbb
sub
inc
shlb
fisubrl
icebp
and
pop
loope
xchg
sub
mov
cli
pop
sbb
fldcw
xchg
bnd
into
add
adc
out
fcoms
mov
fnstsw
je
mov
and
jnp
imul
pop
cwtl
jp
cmpsl
pushf
adc
or
pusha
lds
ss
imul
fsubrl
push
jl
out
insl
cmpb
leave
mov
and
cmp
xlat
inc
fcmovne
aas
mov
sarb
gs
xchg
fwait
repnz
dec
mov
sbb
pop
mov
jne
into
fistpll
inc
dec
mov
aaa
fnstsw
cmp
sti
push
cltd
call
mov
push
add
jmp
in
or
stc
xor
xor
lret
adc
mov
inc
lock
cmp
dec
shrb
jge
test
clc
ljmp
lcall
je
mov
ss
push
and
xchg
in
jmp
mov
aam
mov
add
outsl
movsb
jmp
in
test
test
lret
mulb
mov
mov
fsubl
fwait
push
pushf
mov
push
mov
lock
jmp
cmp
movsb
je
mov
xchg
icebp
mov
push
sbb
pop
mov
outsb
jp
add
adc
bound
cmpsl
adc
add
in
std
xor
imul
ss
dec
das
mov
jecxz
daa
jg
add
cmp
xchg
fmull
roll
in
das
and
inc
mov
das
ret
mov
jae
push
and
pop
dec
mov
pushf
and
push
adc
jge
push
adc
push
xchg
jge
scas
scas
push
pop
xchg
jae
cmc
add
les
roll
outsl
xchg
cmc
cs
pop
fwait
pushf
cmp
jbe
scas
in
mov
add
loop
dec
sbb
push
adc
xor
sahf
cs
inc
pushf
iret
and
movsb
movsl
push
loopne
jl
es
clc
xchg
push
mov
mov
sub
test
push
pop
dec
pop
pop
and
mov
dec
lret
icebp
shll
lods
mov
and
sti
jo
mov
data16
je
pop
push
push
int
jl
cmp
inc
pop
jp
jno
pop
push
add
sbb
push
data16
adc
jl
cmpsl
push
sbb
jmp
repz
or
sbb
cmp
jle
leave
sub
testl
sub
pop
enter
js
dec
pop
pop
pop
mov
or
cmc
adc
divl
cs
dec
inc
pop
out
es
or
jl
enter
lcall
jae
xchg
popa
iret
sti
push
inc
mull
fwait
jno
push
jmp
sbb
test
and
pop
loopne
lcall
or
sbb
pop
flds
loopne
push
add
dec
pushf
nop
aas
lret
pop
mul
inc
jb
xor
add
popa
jecxz
xchg
jbe
mov
mov
mov
add
bound
mov
out
dec
cmp
inc
push
in
jge
fidivs
lock
lahf
and
jns
test
fisubrs
lods
rcrb
cli
or
data16
and
cmp
jmp
push
divb
cmp
cmp
jo
mov
push
dec
movsl
mov
dec
adcl
iret
cld
loopne
mov
nop
leave
inc
push
movsb
inc
add
hlt
jge
pop
pusha
arpl
push
ret
les
aam
push
mov
mov
sub
repz
call
xchg
mov
mov
or
loop
ljmp
fistpll
xlat
shll
sbb
repnz
in
iret
adc
jmp
inc
mov
jecxz
xor
call
sbb
add
leave
sub
ret
hlt
or
movsb
sbb
mov
xchg
ss
mov
inc
aad
lock
push
mov
ljmp
pop
arpl
add
movsl
mov
stos
cli
xor
adc
dec
push
int3
pop
addr16
pop
mov
ja
lret
sbb
or
cmc
stos
jp
jmp
cmc
sti
gs
mov
push
xor
ret
dec
sub
daa
jmp
and
fistpll
cmp
stos
shrl
xchg
dec
addr16
xlat
shlb
ja
adc
dec
cld
mov
in
adcl
fstps
xchg
or
dec
ljmp
loopne
add
fsubl
test
xchg
pop
enter
sbb
lock
shlb
jno
and
lahf
add
aaa
dec
mov
jg
push
xor
sub
sub
das
adc
jge
arpl
mov
dec
xchg
adc
adc
and
lea
mov
cmp
stc
bound
lahf
fsub
cmpsl
lret
es
inc
jl
mov
dec
jecxz
push
out
mov
shl
inc
in
das
or
cmpb
jno
sub
dec
clc
subb
sbb
pop
push
pop
inc
ds
or
cltd
lcall
fwait
xchg
xchg
pop
cmp
pop
loope
idivb
and
aam
adc
inc
outsl
dec
sar
movsl
stos
pop
add
mov
daa
xchg
push
repnz
enter
sub
and
adc
mov
inc
xlat
pusha
jl
xchg
imul
cmp
insb
fmull
or
clc
adc
xor
adc
cmp
sub
jp
mov
inc
divb
push
or
xlat
arpl
les
cmp
pusha
cmpb
add
pop
or
adc
fs
loope
inc
pminub
bnd
clc
out
dec
push
pushw
jbe
inc
mov
add
pop
xchg
mov
adc
js
outsl
mov
sub
mov
push
sti
fbstp
pop
jno
mov
negb
add
in
xor
clc
outsl
mov
rorb
jae
push
lahf
mov
pop
repnz
or
and
pop
dec
ljmp
lods
jle
imul
pmullw
addb
fldcw
hlt
pop
and
dec
adc
std
in
sub
dec
mov
lret
out
adc
icebp
mov
sbb
mov
push
xor
test
dec
add
js
icebp
lock
add
add
in
cld
mov
cmp
mov
or
pop
dec
xor
inc
pop
xor
loop
hlt
sbb
dec
mov
xor
add
fadds
xchg
test
inc
lret
insl
test
fnstcw
lret
mov
std
jo
xor
xor
xchg
mov
jno
iret
push
cmpsb
lea
int
inc
mov
imulb
loopne
mov
mov
inc
loope
pop
ss
out
loop
call
mov
xlat
xor
loopne
shll
outsb
ja
push
not
fnsave
mov
add
lods
pop
insl
scas
pop
and
xchg
popa
xchg
jae
icebp
in
dec
mov
or
push
js
pop
mov
enter
sbb
mov
xchg
in
push
clc
push
or
lret
mov
pusha
dec
sbb
or
jb
movsb
testb
loop
mov
pop
inc
ret
fisttpll
push
adc
pop
sbb
sub
cmpsb
lahf
jg
xorl
leave
jae
push
jae
loopne
out
clc
insl
lahf
imull
push
ljmp
inc
cwtl
imul
movb
jmp
mov
jp
pushl
push
loopne
shr
inc
xor
lods
ja
jecxz
aaa
push
es
mov
xchg
std
int
lcall
shl
sub
xchg
cmpsl
xchg
mov
push
addr16
jmp
sub
dec
cmp
push
inc
dec
mov
or
adc
addr16
in
push
lock
or
adc
int3
adc
movsl
stos
dec
out
pop
or
sbb
sbb
cmp
inc
cmp
xor
notl
xor
pop
ja
push
lods
inc
scas
and
pusha
repz
sub
jecxz
xchg
aas
cld
mov
pop
jno
in
fnstcw
add
push
lods
movups
out
sub
aaa
arpl
jb
cmpsb
in
dec
mov
fidivs
out
addr16
sub
mov
jae
mov
push
xor
jle
cmp
mov
mov
scas
push
pop
cwtl
xchg
jge
sahf
push
jmp
aam
adcl
notl
xor
test
stc
int3
jns
xchg
mov
repz
lcall
iret
and
lret
icebp
inc
testl
sbb
xchg
mov
xlat
test
subb
inc
lea
sub
push
mov
push
cmp
lods
rcr
hlt
ret
inc
push
mov
inc
fsubr
adc
imul
shll
lret
jne
scas
pop
push
mov
mov
ja
test
xor
insl
aam
je
dec
loop,pn
cmp
sahf
movsb
push
popf
mov
jmp
or
je
xchg
lods
jp
bound
pop
idivb
push
pop
mov
into
adc
ret
stc
xor
aas
popa
hlt
ret
dec
dec
testb
enter
xchg
pop
sarl
rcll
lret
mov
sti
bound
call
hlt
test
xchg
cld
mov
jecxz
lea
adcl
outsb
and
lds
push
xor
orb
lcall
jg
in
jmp
jo
mov
mov
ja
jno
xchg
in
push
push
insl
push
int3
pop
jne
mov
mov
xchg
sbb
or
xor
xchg
call
sbb
out
cmp
adc
inc
out
xlat
lods
ljmp
push
in
add
in
daa
test
xlat
bound
mov
mov
rolb
dec
or
cmpsl
push
mov
jne
jb
sub
mov
cmc
xor
jmp
mov
lret
and
rolb
mov
or
jge
add
jle
add
in
mov
aam
xchg
sub
inc
jp
inc
stos
cmp
pop
test
outsl
and
push
test
scas
movsb
jl
mov
pop
xchg
mov
cmpsb
sti
mov
dec
xor
jns
xor
fstps
loopne
icebp
jae
movsl
mov
aad
jl
xchg
inc
nop
sub
into
xor
fwait
je
mov
jbe
cli
cli
stos
cmp
mov
fmul
pop
inc
push
sbbb
xchg
mov
mov
xchg
orb
mov
loope
mov
arpl
outsl
mov
jno
xlat
jg
xchg
lods
jno
test
leave
xchg
stc
inc
lods
jo
scas
or
mov
cmp
lcall
lock
lods
jmp
idivb
jl
xchg
xor
fmull
aam
sarb
jp
ficompl
pop
add
and
pop
leave
inc
cli
cwtl
mov
or
imul
test
mov
dec
ljmp
push
pushf
rcr
xchg
inc
adc
or
pop
fidivrl
js
lds
mov
shrl
cltd
xchg
mov
and
out
mov
add
repz
ss
xor
cmp
pop
dec
test
inc
push
popf
cmp
mov
in
loopne
sub
sbb
imul
jecxz
negb
cmp
inc
cmp
in
out
and
imul
mov
mov
mov
repz
jmp
ss
dec
jl
inc
test
xorb
aaa
mov
xor
jp
jne
push
aam
mov
sti
push
mov
scas
or
mov
add
out
push
mov
and
mov
scas
pop
fstpt
sbb
subl
push
aaa
rcr
push
adc
dec
mov
sbb
jmp
push
pushf
pop
adc
cmp
pop
mov
das
or
repnz
adc
test
xor
mov
filds
jge
mov
testl
or
imul
imul
bound
pop
movsb
add
add
sub
mov
mov
addb
push
lret
mov
jb
test
jmp
push
push
movb
das
jecxz
dec
test
scas
enter
leave
roll
push
sahf
mov
xor
lret
shrl
mov
div
jle
fidivl
dec
into
and
xchg
and
cmpsl
jmp
inc
lahf
mov
fcmovnu
xchg
cmpsb
jmp
add
jo
cwtl
xchg
add
call
add
and
lock
mov
adc
lret
mov
cmp
repnz
aaa
inc
icebp
jle
mov
repz
dec
lock
aaa
xlat
pop
add
out
add
in
shll
push
sahf
xchg
cmp
xor
mov
adc
pop
xchg
mov
push
scas
mov
movsbl
dec
aam
leave
cmp
iret
mov
or
lds
and
in
dec
sub
insl
add
lods
cld
mov
int3
jno
orb
clc
or
movsb
mov
inc
push
mov
mov
xchg
xchg
popf
stos
ljmp
jmp
cltd
cltd
outsb
loop
jmp
andb
daa
push
adc
xchg
sub
and
test
push
cwtl
insl
sbb
pop
mul
pusha
lret
bound
fistpll
inc
leave
int3
push
out
rcll
addr16
pop
cmp
xchg
sti
sti
mov
and
dec
out
fs
push
mov
adc
imul
jb
and
iret
xor
aam
inc
adc
mov
pusha
xor
mov
lahf
or
mov
inc
je
sbb
jne
sbb
mov
sub
out
inc
cmp
cmp
in
cmp
mov
dec
or
jp
rolb
lcall
cs
test
mov
aam
lahf
dec
and
dec
mov
mov
inc
mov
xchg
sbb
cli
ljmp
sbb
rcrb
mov
inc
arpl
push
pop
jp
fs
jbe
xor
iret
xchg
dec
in
cmp
mov
addr16
dec
push
lods
pop
aas
imul
loop
lahf
leave
outsb
mov
popa
rorl
cli
mov
and
out
outsb
stc
jnp
sbb
adc
pop
jnp
aam
mov
sbb
inc
mov
insl
xlat
or
adc
xchg
sub
jl
cmc
lods
das
pop
xchg
push
clc
shrl
inc
adc
mov
mov
aas
and
xor
push
subl
int3
pop
pop
into
add
push
into
loop
lods
fdivr
push
test
stos
adcb
repz
or
cmpsl
pop
jns
sbb
repnz
arpl
std
repz
push
imul
xchg
sbb
mov
inc
xlat
imul
jb
icebp
aaa
out
outsb
xchg
cs
sbb
and
stos
insb
vsqrtsd
lock
cmp
sub
lock
bound
dec
mov
sbb
and
xchg
mov
push
insb
hlt
fcoms
mov
cmp
fidivrs
add
mov
loopne
xor
cmp
mov
lds
jmp
mov
dec
mov
test
dec
lds
jne
sbb
test
repz
pop
jo
sbb
lret
repnz
push
cld
xor
out
xchg
pushf
sbb
das
xchg
jl
dec
addr16
sbb
and
pop
xchg
push
adc
xorb
pop
jecxz
xchg
int3
jg
adc
lret
idivl
mov
add
mov
shlb
inc
in
pop
int
inc
loopne
loopne
lods
xchg
js
sarb
cld
cmp
pop
int
push
loop
stos
mov
dec
enter
cmp
jge
in
subb
mov
jne
in
mov
jmp
mov
lods
das
fwait
in
ljmp
aas
jge
clc
and
popf
push
mov
jp
sahf
xchg
mov
push
divb
sbb
rcrl
pop
ljmp
mov
and
mov
addr16
pushf
mov
bound
sahf
cmp
into
outsl
lret
mov
mov
cmp
in
mov
or
pop
inc
xchg
cmp
leave
sar
sub
inc
aad
sbb
xchg
jae
mov
mov
ja
cmp
outsb
sbb
cmp
push
jle
aaa
into
inc
sbb
or
mov
mull
fdivl
adc
and
sub
gs
filds
add
jnp
aaa
or
pop
cltd
sti
cmc
negl
fld
sub
fwait
scas
push
push
stos
or
cmpsb
fs
lods
xchg
test
shl
and
push
pusha
cmp
cli
dec
cmp
dec
mov
pop
fsts
out
pop
push
int
and
loop
mov
imul
aas
fwait
inc
jo
pop
mov
clc
sub
and
mov
cs
shll
mov
cltd
push
pop
jle
mov
pop
inc
sub
ja
mov
addr16
outsb
fldenv
mov
push
xor
scas
rcrl
push
xchg
incb
cwtl
ja
ljmp
jle
push
into
shl
xor
pop
int3
fistpl
mov
xchg
into
mov
stos
movsb
mov
push
lds
mov
popa
add
ficompl
cmp
mov
out
dec
push
shrl
in
sbb
pop
call
push
add
lea
jmp
pop
push
jbe
jnp
int3
inc
jl
adc
cmpsl
push
aas
inc
sub
daa
adc
push
mov
inc
push
mov
cs
sbb
mov
fcompl
lea
jmp
xchg
pop
gs
dec
dec
das
jae
mov
sbb
jno
mov
aaa
ret
pop
mov
pop
stc
and
jno
and
lahf
inc
sbb
je
mov
popa
or
movsl
clc
jb
mov
pop
cmp
xchg
xor
stos
cli
sub
testw
ja
mov
pusha
pop
outsl
xor
or
test
cmc
js
xor
loopne
xor
inc
mov
sub
dec
loopne
jae
aam
repnz
lock
aad
mov
sub
daa
lret
jb
scas
stos
or
mov
pop
mov
and
cmp
push
ljmp
mov
push
mov
mov
mov
ds
loope,pn
rorl
sar
out
and
adc
add
push
mov
mov
mov
ds
loope,pn
rorl
sar
in
and
adc
add
push
popl
mov
mov
ds
aaa
loope
sarb
shl
ret
adc
add
push
push
inc
jle
xchg
or
xchg
dec
testb
push
loope
icebp
ds
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
aam
sahf
mov
rcll
xchg
movsb
dec
mov
imul
inc
dec
xor
jle
cltd
lock
loopne
sarb
mov
add
push
pusha
dec
pop
cld
inc
dec
push
pop
and
jle
xchg
push
xchg
mov
cmpsb
mov
add
negb
adc
xor
adc
bound
fs
mov
mov
mov
pop
inc
cmc
sti
out
out
shrb
out
jno
mov
adc
scas
movsb
scas
aas
or
aaa
jg
loope
shrl
or
fwait
repz
add
jl
sbbb
pusha
out
or
loope
jle
sarl
les
loopne
aam
shr
lret
nop
push
push
decb
cs
bound
and
xchg
jl
es
sbb
sahf
sbbl
push
out
jl
push
loope
cmp
pop
xor
outsb
setle
loope
xor
jae
push
push
push
loopne
xor
xchg
sub
cld
jle
dec
jl
shrb
les
pop
jo
enter
jl
or
into
outsb
or
std
lock
lret
mov
mov
in
in
jp
push
adc
and
ja
dec
or
mov
mov
repnz
mov
adc
adc
sub
and
jne
jae
subl
cld
fisubs
push
jo
pusha
cs
ds
dec
xor
outsb
adc
mov
sahf
loopne
sarb
mov
push
jo
pusha
cs
ds
dec
xor
outsb
adc
mov
pop
mov
lods
loope,pn
repnz
and
insl
sbb
rorl
repnz
out
fwait
arpl
push
adc
pop
and
mov
push
dec
sub
sbb
movsb
inc
cwtl
and
stos
movsl
andb
xlat
mov
ljmp
int
mov
and
insl
cwtl
gs
es
popa
incl
pop
push
ljmp
mov
outsl
call
enter
cld
les
aaa
imul
mov
mov
push
arpl
dec
mov
jge
lock
or
movsl
push
sar
jnp
addl
out
movb
mov
cmp
mov
lcall
fidivrs
and
nop
hlt
mov
inc
jl
cwtl
add
popf
add
cli
and
aas
and
mov
adc
adc
je
cmpsb
pop
xchg
insl
loopew
shlb
mov
mov
mov
shlb
cmpsb
shrl
nop
mov
fprem
push
jp
aaa
pop
push
pushf
out
sbb
negl
and
push
xor
xchg
cmp
ret
jecxz
outsb
or
insl
fwait
mov
sbb
vmwrite
and
xor
js
sbb
push
xchg
inc
sahf
jmp
enter
mov
clc
stos
sbb
dec
call
outsb
and
daa
cmp
call
lods
leave
sub
inc
fmulp
inc
xchg
cmp
cmp
rcll
int3
clc
in
cmp
or
shrl
cmpsl
clc
sub
iret
insl
lock
push
leave
test
ret
neg
xor
lahf
and
or
dec
out
icebp
jns
adc
or
shrb
sbb
xchg
popa
jecxz
in
loope
ret
cmpsb
out
lods
jae
scas
lahf
jecxz
jo
adc
push
jnp
pop
fisttps
outsb
jb
ja
pop
decl
imulb
jnp
xchg
xchg
mov
jb
mov
mov
mov
sbb
pop
mov
sahf
fstpt
xchg
inc
lea
call
lahf
xchg
arpl
icebp
popa
mov
inc
and
and
inc
jg
pop
xor
lret
bound
adc
fisttps
cltd
and
xchg
push
sti
out
cwtl
test
add
pop
cs
test
out
scas
jne
pop
imul
add
mov
mov
dec
mov
sbb
dec
xor
lock
insl
push
imul
mov
enter
lods
cmp
lods
dec
js
and
adc
mov
icebp
in
es
addr16
sti
push
add
loop
popf
ja
jp
and
aad
es
mov
pop
fstpt
and
xlat
lret
mov
movsl
cmp
mov
dec
jge
jp
pusha
out
rclb
jbe
aas
movsl
sub
lret
in
sbb
dec
xchg
or
fs
pop
xchg
shll
lcall
inc
mov
push
add
mov
shlb
cmp
push
stos
mov
dec
xlat
or
mov
in
adc
pusha
inc
jbe
out
outsl
sbb
mov
push
outsl
iret
aam
mov
mov
fs
lods
lock
xor
pop
mov
es
sub
sahf
leave
push
test
jno
out
mov
and
mov
popa
add
pusha
mov
pop
mov
add
sbb
jmp
aas
jnp
imul
cli
jns
xchg
push
rorb
jl
test
push
ja
push
push
xor
inc
xlat
push
xchg
jge
cmpsl
pusha
ret
jo
pop
mov
dec
cmc
test
enter
mov
push
in
sarl
daa
mov
lea
sbb
sub
adc
sub
adc
inc
popl
jb
jnp
or
xchg
js
aad
fsts
leave
inc
mov
hlt
mov
pop
push
and
dec
stos
xchg
add
int3
sbb
mov
cmp
xor
mov
add
addr16
in
dec
les
mov
sbb
inc
pop
out
push
push
fisttps
cld
mov
insl
inc
inc
andl
mov
ss
loopne
inc
jbe
ret
jmp
xor
fxch
movlps
mov
dec
xor
xor
push
inc
repnz
adc
pop
ljmp
xor
push
sub
and
mov
fcomps
clc
or
push
notl
cmp
add
and
pop
fwait
or
pop
adc
movsl
push
bound
jle
jo
adc
fisubrl
jp
out
xor
mov
dec
or
dec
push
imul
dec
cli
jnp
dec
out
mov
mov
outsb
jbe
sub
loop
fisttpl
aaa
cli
mov
push
xor
adc
xor
inc
push
mov
out
daa
aam
and
jbe
or
inc
rorl
insb
divl
jb
jmp
daa
push
or
jle
mov
mov
roll
sub
and
add
and
mov
pop
adc
es
xor
call
js
je
lock
mov
mov
xchg
inc
ret
dec
in
dec
dec
fldcw
mov
fpatan
pop
pop
les
pop
xor
clc
jle
in
add
inc
sbb
sub
rorl
enter
cmc
rcrb
push
sbb
dec
ja
fwait
sub
insb
sub
cld
sti
add
push
lahf
sbb
gs
xor
lods
xchg
ds
jae
xchg
xchg
cmp
jae
jl
test
dec
jnp
bound
mov
jae
cltd
and
aaa
in
jge
push
push
mov
jmp
jo
mov
incb
pop
jnp
inc
fucomip
cwtl
fs
sub
dec
popf
lcall
idiv
mov
rolb
dec
dec
faddl
mov
bound
sub
in
or
imul
call
and
ds
cmp
je
and
inc
in
xor
push
xchg
idivb
mov
mov
lcall
add
bound
lods
and
subl
rcll
dec
stc
pop
fwait
mov
sbb
gs
cmp
mov
and
adc
in
xchg
jle
xor
dec
inc
ret
push
es
jle
xchg
push
mov
xchg
pusha
data16
scas
aas
cmc
jnp
aaa
push
sub
xchg
pop
in
inc
cli
sahf
ja
aam
imul
jo
xchg
mov
clc
mov
pop
in
outsb
mov
lock
lods
icebp
dec
push
iret
sub
push
jae
clc
pop
pop
cld
jl
or
cld
jbe
jns
andb
gs
dec
cs
ja
mov
cmc
js
jmp
mov
push
xchg
adc
iret
xlat
pop
pusha
adc
outsb
in
inc
loop
inc
or
cltd
pushf
sub
dec
add
add
fstl
cmc
frstor
fsts
mov
div
dec
scas
repz
inc
cmp
xor
js
out
mov
lahf
das
push
xchg
pop
xor
sbb
cmp
and
into
push
mov
mov
jg
push
jmp
mov
jecxz
sub
hlt
pop
nop
in
mov
idivb
stos
xor
dec
mov
xchg
mov
dec
out
xorl
mov
and
cmpsb
xchg
push
das
stos
insb
mov
jecxz
in
sub
xchg
nop
sbb
in
push
cmpsl
push
popf
mov
mov
pop
out
lods
loopne
push
insl
mov
shlb
jge
mov
mov
pop
mov
mov
inc
or
sub
negl
xor
faddl
cmc
fisttps
cmp
arpl
das
das
test
and
ret
inc
and
mov
dec
out
xchg
mov
push
movl
or
shll
lods
and
pop
push
pop
gs
or
xor
push
in
mov
or
insb
mov
xor
ficoml
dec
bound
shl
jg
sbb
loop
sbb
mov
mov
jb
fisttpl
jo
sub
pop
dec
mov
or
inc
decb
jo
mov
pop
cmpsl
xchg
lret
xor
fcmovnbe
icebp
inc
add
sub
xchg
pop
push
jmp
in
nop
jp
out
jae
xchg
mov
fdivrs
dec
pop
or
ss
clc
sub
push
bnd
inc
insl
jns
popf
int
lods
push
mov
xorl
jnp
and
and
divl
cmp
inc
outsl
push
enter
xorb
cmp
loop
xchg
rol
setnp
xor
pop
mov
imul
stos
aad
mov
pop
rorl
es
or
lahf
out
aas
outsb
mov
mov
cmp
push
and
sbb
testb
mov
jns
xchg
xor
mov
push
mov
mov
and
push
in
mov
es
std
and
dec
js
dec
mov
push
stc
pushf
mov
fsubp
and
push
lods
add
sti
loop
dec
sbbl
inc
push
push
mov
adc
push
and
arpl
lods
mov
pop
push
xchg
subl
sbbl
fs
ds
insl
dec
shrb
ljmp
sub
fstl
stos
add
fistps
pop
scas
lret
sub
iret
cld
lret
cltd
add
mov
mov
insl
and
dec
aad
or
cmp
cld
xchg
into
push
xchg
jns
mov
push
out
mov
or
fiaddl
jp
jecxz
dec
add
sbb
stc
ret
in
push
fimull
icebp
adc
fistpl
imul
sbb
fcmovnbe
insl
pop
cli
sbb
rolb
xorb
inc
sub
out
addb
cmovg
out
dec
cs
cmp
outsb
jnp
push
in
and
mov
leave
jge
mov
or
sahf
xchg
or
add
test
ljmp
dec
pop
sbb
jns
faddp
loope
aaa
lods
or
lods
lods
pop
mov
push
push
pop
stos
call
cmp
sbb
and
or
dec
xor
outsb
mov
into
cld
xor
jl
mov
aas
xchg
xchg
adc
add
out
out
lret
iret
inc
enter
and
cmpsl
outsb
loope
aad
mov
in
lods
push
es
call
xchg
inc
out
sar
or
pushf
dec
inc
mov
jb
fdivrp
jae
stc
pop
or
gs
mov
add
mov
cmp
out
adc
sub
add
dec
hlt
cmc
outsl
or
mov
jnp
jl
add
dec
mov
cmpb
xor
shrl
mov
mov
loopne
sbb
push
mov
sub
addl
into
fwait
popf
arpl
loope
lcall
lahf
loop
dec
xchg
push
cmp
jnp
jns
inc
jo
add
pop
movsl
les
mov
mov
adc
mov
std
xor
mov
rcr
dec
dec
cld
lahf
xchg
dec
stos
cmp
adc
mov
and
pop
int
jl
push
inc
addr16
lcall
pushf
addr16
add
inc
lods
jp
jbe
int
and
push
leave
into
ret
pop
and
push
jb
in
add
mov
negl
iret
int3
mov
push
sbb
dec
adc
mov
les
xchg
sbb
sbbl
jge
aas
sub
fwait
inc
dec
sub
push
push
and
js
jnp
test
and
test
xchg
add
test
jnp
add
xor
push
xchg
mov
sbb
ja
inc
icebp
inc
fistps
and
mov
pop
imul
adc
lea
jp
pop
sub
add
outsb
pop
arpl
in
dec
sbb
shll
jnp
mov
in
push
pusha
fnstenv
push
and
cmp
test
pop
mov
lret
pop
mov
shlb
xchg
inc
sti
cwtl
mov
inc
pop
loope
push
mov
push
adc
sub
push
jo
lea
mov
pop
dec
jno
movsb
mov
sbb
or
mov
push
push
xor
call
push
push
mov
out
gs
pushf
xchg
mov
mov
aas
fstps
jne
jecxz
jbe
cmpb
xor
in
into
xchg
mov
push
dec
pop
lock
ds
iret
in
jo
ret
mov
aaa
sbb
xor
sub
pop
mov
lret
add
or
das
aam
adc
popa
loop
mov
stos
mov
inc
or
mov
out
out
sub
in
mov
pop
ds
lahf
arpl
sub
lods
mov
lds
sti
jne
rorl
add
jne
aam
movsl
ja
stos
inc
dec
mov
xchg
inc
mov
insb
mov
mov
xor
es
mov
xchg
sub
cltd
mov
iret
inc
cmp
lea
dec
outsb
or
cmpsl
pop
or
faddl
std
test
cmp
push
jae
movl
jbe
inc
imul
sahf
dec
jne
lds
sbb
dec
rcll
pop
sbb
sub
or
jge
movsb
test
mov
xchg
sbb
mov
std
inc
xchg
mov
aaa
adcl
lret
rclb
aad
iret
push
popa
fldenv
and
out
out
push
test
es
test
push
lret
in
add
or
in
imul
jecxz
lds
rcr
xor
mov
pop
xchg
jb
dec
cmp
out
or
idivl
icebp
rorl
decl
and
xchg
mov
call
fnstenv
mov
insb
mov
int3
mov
cmp
loope
and
add
xchg
mov
mov
inc
je
sahf
imul
popa
inc
bound
xchg
pop
jae
outsb
xchg
out
jne
outsl
popf
xor
mov
adc
imul
sub
scas
adc
in
cmp
jae
adc
lea
int3
sbb
dec
mov
add
jle
mov
outsb
mov
outsb
arpl
add
dec
roll
jmp
cmp
lods
fstp
cs
out
fmull
repnz
ljmp
call
ljmp
push
pop
sub
sbb
mov
push
imul
pop
mov
jb
adc
cmpsl
movsb
xchg
sbbl
lea
movsl
mov
lods
xadd
hlt
pop
jle
inc
notl
test
call
push
repnz
xchg
movsb
xor
in
out
fadd
jb
call
arpl
push
das
addl
stos
jbe
jle
mov
dec
sub
inc
jb
sahf
mov
fadds
rol
jae
adc
fwait
cmp
outsb
sti
dec
mov
cmp
cmp
cltd
out
divb
cmp
xchg
fadds
xchg
loope
mov
imulb
ljmp
and
ret
in
fxch
setge
outsb
aam
xchg
movsl
icebp
lods
insb
pop
dec
sahf
ds
sub
push
cwtl
xchg
in
clc
xchg
test
cmp
insb
push
dec
lret
pop
add
adc
mov
jbe
into
sub
aaa
sub
clc
cmp
outsl
or
aaa
loope
xchg
es
das
mov
push
mov
and
movsl
pop
pop
or
sarb
dec
or
sub
daa
sbb
add
add
pop
mov
cwtl
aaa
aas
pop
iret
iret
inc
iret
pop
sbbb
jne
incb
cmp
in
sub
fcom
leave
mov
call
ljmp
or
and
insl
mov
jae
pop
clc
mov
mov
sbb
xor
in
std
jecxz
sti
xor
sbb
lods
fisubrl
mov
roll
and
cmpb
adc
paddq
and
dec
mov
cmc
adc
mov
mov
sbb
mov
int3
pop
data16
lods
mov
scas
and
repz
pop
sub
ljmp
sbb
add
out
daa
repz
in
mov
pop
mov
loop
mov
stos
test
adc
out
out
cmp
ret
inc
shlb
ret
lods
movsb
mov
xchg
pop
fstl
rcr
insl
inc
pop
inc
cwtl
dec
cltd
adc
dec
add
int
mov
ds
test
call
push
dec
pusha
jecxz
or
xchg
lahf
push
or
adc
cld
test
mov
inc
jo
xor
ss
imul
sub
inc
sub
loope
lds
mov
lods
js
hlt
movsb
setns
outsl
pop
mov
push
or
pop
repnz
aaa
aam
les
aaa
leave
in
mov
out
xor
js
mov
or
sub
push
stc
or
leave
mov
mov
and
ret
pop
outsb
mov
aad
adc
sub
fisttpl
jecxz
push
or
mov
mov
movl
aaa
and
std
mov
cmp
and
adc
lods
sub
cltd
cmp
mov
subl
sbb
pop
add
cmp
mov
sub
icebp
aad
je
xchg
lret
dec
sbb
push
xchg
mov
aad
adc
add
cmpsb
pop
pusha
negb
xchg
push
jl
push
cmp
cmp
jge
test
lea
mov
pop
jg
movsb
and
aam
sub
in
repnz
mov
sub
jns
jbe
test
and
sahf
jecxz
jle
xchg
out
dec
pusha
and
ljmp
inc
mov
lods
adc
stc
add
xchg
ja
mov
sbb
loope
jnp
inc
dec
in
push
movsb
push
repnz
lcall
fdivrl
push
out
das
fildll
adc
inc
mov
mov
cmpsb
call
das
loope
movsb
mov
inc
incl
pop
ds
pop
mov
jne
xchg
out
pop
lahf
lcall
dec
push
insb
xchg
neg
testl
sub
xor
loopne
cmp
dec
out
or
sub
out
subps
repz
mov
cmc
xchg
inc
adc
dec
and
icebp
imul
xor
int
in
pop
dec
fs
cltd
jmp
adc
loope
cmp
mov
dec
mov
add
mov
or
mov
jl
sub
cmp
pop
fmull
xor
aad
jge
filds
sbb
iret
push
int3
test
jmp
mov
mov
shl
les
lcall
push
sub
or
repz
sub
stc
arpl
cmp
inc
cmp
imull
repz
fcomip
jns
mov
insl
xchg
and
pop
or
or
mov
push
mov
sbb
ret
inc
repnz
loopne
fdivr
iret
gs
imul
jmp
mov
add
push
and
mov
icebp
mov
push
jge
mov
lret
icebp
jbe
out
inc
cli
sahf
jle
adc
push
in
divb
stos
stos
ret
jp
leave
into
pop
mov
clc
jl
sbb
pop
and
xchg
mov
mov
add
loope
lret
lods
aam
stos
push
in
aaa
inc
add
and
dec
mov
sti
and
int
cmpsl
mov
int3
scas
or
inc
cli
ss
es
mov
mov
cmpsl
aas
xor
pop
xor
sbb
pop
and
cmp
sub
jo
rcll
or
fwait
enter
mov
xchg
push
mov
and
push
aaa
lea
xor
inc
xor
xchg
cmc
mov
je
dec
clc
mov
andb
jecxz
imul
jl
into
les
imul
ds
lods
xchg
pop
sti
dec
nop
dec
dec
cs
pop
shll
out
pop
xchg
jecxz
je
setb
pop
addr16
sbb
inc
imul
xorb
stc
jle
mov
es
xor
xchg
daa
int
clc
cmpsl
sahf
mov
out
jmp
rcrb
mov
and
cli
or
pushl
lods
ss
sahf
push
and
lahf
jmp
sbb
or
xchg
mov
inc
add
mov
or
inc
insl
xchg
jg
mov
inc
stos
inc
cs
stc
push
mov
and
fldcw
in
mov
in
sbb
fistpl
cld
lret
pushf
sahf
pop
pop
mov
add
lods
aam
fsubrl
add
mov
lret
ss
jecxz
inc
insb
repz
and
inc
push
push
das
mov
sub
ret
xchg
stos
into
sbb
sub
and
xchg
dec
mov
fdivrl
sbb
sbb
and
arpl
lock
or
loope
mov
bound
les
push
and
aad
push
mov
outsb
addr16
ror
xor
cmpsl
aaa
sbb
popf
sbb
sbb
push
pop
dec
push
cmp
js
adc
and
and
fnstcw
and
inc
not
icebp
mov
in
pop
pop
mov
dec
cmp
loopne
out
cs
mov
add
xchg
aad
ror
fisubs
push
jo
pusha
cs
ds
dec
xor
outsb
adc
mov
sahf
loopne
sarb
mov
push
jo
pusha
cs
ds
dec
xor
outsb
adc
mov
sahf
out
scas
enter
mov
lret
out
xchg
incb
sub
dec
dec
xor
and
dec
in
adc
add
xor
or
fisubs
icebp
loope
test
aaa
cmp
pop
xchg
push
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
in
cmc
stc
vpmullw
fs
int
cltd
imul
and
or
stc
vpmullw
movsl
test
xchg
in
imul
and
dec
adc
stc
lds
addr16
andl
jnp
dec
jle
push
dec
jge
sbb
cmpsl
mov
sahf
mov
push
xchg
outsb
inc
cmpsl
push
ret
lea
and
inc
outsb
bound
xor
xor
leave
arpl
xchg
dec
pop
sub
and
dec
fisubrl
and
add
jmp
sbb
rcrl
sti
cli
movsb
cmp
in
cld
mov
or
mov
fsts
test
std
gs
gs
jl
movsl
fldt
pop
movb
adcl
push
lea
cltd
jne
mov
mov
pop
test
aaa
cmp
sbb
out
sub
inc
sbb
jecxz
out
je
jp
push
gs
mov
inc
sbb
xor
add
jmp
aad
movsl
test
xchg
sbb
jne
inc
pop
push
adc
or
stc
mov
loopne
aam
and
jno
es
pop
dec
inc
dec
inc
js
lods
xchg
jecxz
add
das
add
adc
inc
jns
jne
push
xchg
mov
movsl
int
mov
imul
and
or
stc
vpmullw
movsl
test
xchg
cltd
imul
and
or
jle,pn
icebp
cmc
jg
sbb
or
add
xlat
das
pop
rep
dec
test
les
and
aam
jecxz
sbb
or
sarb
add
cmp
push
xor
movsb
test
loope
sub
dec
jnp
push
sbb
mov
pop
std
mov
xchg
mov
js
push
pop
lret
jg
mov
mov
xchg
adc
lock
cltd
subl
rolb
or
cmpl
lods
pusha
or
mov
lahf
mov
sub
in
incb
pop
or
jne
xchg
jle
push
out
fisubs
push
fstps
aas
in
lret
subl
insb
cmc
data16
pop
jmp
mov
out
aas
repnz
pop
dec
pop
push
ret
jecxz
xchg
pop
mov
jb
dec
adc
mov
xchg
xlat
dec
xor
stc
rclb
push
push
in
inc
jp
inc
or
cltd
xlat
cmp
fwait
repz
pop
addr16
clc
ret
and
cmp
or
je
fldcw
cmp
sbb
sub
aad
push
fildll
daa
daa
xchg
pop
repz
fists
pop
jns
pop
pushl
cs
mov
sbb
push
xchg
sti
inc
mov
xchg
lcall
subl
and
mov
push
xor
repz
imul
sub
imul
mov
out
jb
push
repnz
add
icebp
dec
mov
pop
pop
ljmp
fisubs
mov
push
fistpll
xchg
fs
jle
push
or
pusha
mov
das
mov
fnstenv
jae
ss
test
cmp
pop
and
daa
roll
add
jecxz
aaa
xor
dec
push
xchg
mov
cli
fwait
xchg
pop
scas
mov
lea
dec
mov
out
hlt
xchg
add
add
cmp
fisttpll
dec
dec
movsb
cli
cmp
jne
outsl
mov
pop
mov
pop
cmp
inc
aad
or
or
leave
dec
stos
xor
sbb
xchg
fucomip
fstpl
mov
adc
movsl
push
sbb
xchg
mov
popa
inc
pmaddwd
out
sbb
mov
nop
xchg
fwait
jb
cltd
push
inc
pusha
bound
xchg
pop
dec
ret
inc
popf
in
inc
adc
mov
xchg
bound
jmp
add
std
pop
xor
dec
ret
fsubs
cmp
lcall
sbb
xchg
lret
cmp
push
loop
shl
xchg
stos
rcrb
cli
imul
mulb
shll
mov
testb
mov
add
xchg
shl
xor
dec
daa
shll
arpl
call
mov
icebp
cmp
stos
loope
lds
xchg
shrb
aaa
test
add
mov
xor
into
dec
jae
xchg
sub
mov
push
xor
rcr
and
or
and
in
out
lret
and
sub
mov
mov
sub
scas
adcl
pop
mov
addl
stos
mov
dec
orb
cmpsl
xchg
xor
icebp
xchg
add
mov
cmpsl
hlt
push
test
loop
pop
and
lcall
sub
out
mov
stos
jmp
add
shrl
cli
sarb
insl
nop
xor
dec
movsl
cmp
push
fisubs
jno
jge
adc
arpl
mov
inc
enter
dec
daa
aaa
div
pop
jp
fs
adc
lret
data16
lods
mov
inc
sbb
rcrb
inc
adc
cltd
ds
mov
loope
fsubs
push
mov
adc
in
sub
mov
imul
fsubrl
loopne
aam
xlat
test
push
xchg
push
mov
sti
cli
enter
sub
push
add
ljmp
fadd
dec
push
jmp
cmp
loope
ljmp
mov
sarb
divl
adc
push
stos
dec
lahf
lods
cmp
jge
dec
or
inc
into
and
mov
neg
sub
imul
out
cltd
rclb
out
fs
adc
sub
or
fiaddl
dec
sub
inc
cmp
inc
jne
cmp
xor
or
mov
cmp
jbe
adc
imull
pop
mov
inc
push
int3
pusha
add
mov
in
cmp
scas
outsl
aaa
pop
jg
mov
ja
xlat
cmp
dec
int
ds
repnz
jmp
push
or
pop
xchg
sti
loop
fdivs
fyl2x
insl
jb
ficoml
or
pop
out
lret
adc
jle
mov
mov
cmp
test
cmp
jnp
mov
loope
dec
adc
add
cmc
inc
cmp
add
jg
and
loop
sub
pop
pop
sub
pop
leave
pinsrw
lods
insb
test
mov
xor
cmp
fcmovne
out
push
enter
inc
lods
xchg
sub
cld
iret
cld
leave
xchg
xor
add
cmc
movsl
sbb
sub
adc
fdivs
and
loope
mov
dec
inc
std
insl
pushf
jbe
pop
cmp
jb
shlb
call
mov
ror
mull
cmp
jp
out
mov
mov
and
mov
cwtl
rdtsc
pop
mov
imul
cmp
aad
jae
inc
adc
lds
sub
nop
fistps
jne
mov
push
lcall
adc
xchg
imul
xlat
xor
or
cli
cld
insl
sub
or
adc
xchg
mov
insb
fcmovnb
or
aam
shlb
aam
jp
mov
dec
xchg
dec
xorl
clc
cltd
in
shll
les
push
push
cmp
inc
mov
add
test
push
cmp
mov
push
sub
hlt
add
call
sub
sti
test
lock
aam
sub
jae
cmpsb
sub
fistpl
pop
jo
inc
sbb
dec
push
mov
jne
ja
mov
inc
add
jecxz
clc
sti
mov
cld
or
jmp
pop
fdivrp
pop
xlat
mov
testl
add
insb
scas
ret
mov
bound
xchg
xor
push
jge
ds
je
and
and
je
test
enter
xor
mov
popf
xor
and
or
jl
dec
inc
shrb
sbb
sub
sbb
push
shrl
push
add
vandps
dec
movsb
jno
xchg
push
sub
and
xchg
call
dec
mov
notl
arpl
pop
mov
int
sti
outsl
fldenv
cs
pop
push
mov
add
push
sahf
int
mov
xor
push
xor
xor
cmp
cmpl
xor
in
mov
and
lds
lret
or
outsb
dec
xlat
loopne
cmp
test
frstor
jecxz
mov
or
sbb
sub
and
mov
ficompl
shll
mov
insl
sbb
xor
add
inc
dec
rorb
sbb
xchg
mov
xor
xchg
sub
lods
lock
movsb
mov
lret
cltd
sbb
pop
sahf
or
repz
or
movsb
dec
insl
fs
cld
inc
mov
fimuls
jmp
mov
mov
test
mov
pop
add
push
inc
sbbb
in
push
test
cmpsl
and
and
jle
lcall
mov
cmp
cmp
loop
cltd
sbb
lret
ret
inc
jg
cltd
mov
mov
ficoms
mov
cli
cld
or
cmp
mov
fsubs
mov
nop
shlb
cwtl
lahf
mov
and
push
sbb
add
pop
fildl
jo
test
adc
push
mov
add
ror
jbe
mov
loope
sub
dec
xor
fiaddl
insl
xchg
loop
inc
add
push
push
inc
movsl
xor
int3
ret
imul
xor
pop
pop
pop
push
lcall
sbb
or
inc
xor
cmp
jne
repz
insl
iret
mov
imul
cltd
inc
cld
mov
mov
mov
rcll
call
and
sbb
adc
push
push
xchg
mov
mov
adc
xor
inc
clc
cs
data16
mov
adc
fsubrs
and
mov
xor
sub
fcomip
sbb
and
lahf
int
fmull
fstpl
xchg
fdivrl
inc
push
fistps
sub
jno
push
movsb
adc
push
xchg
pop
leave
pop
jae
cltd
clc
cs
nop
rcr
push
in
int
mov
dec
in
add
and
jno
stos
outsl
imul
rcrl
or
scas
mov
sub
adc
loopne
fcomps
inc
dec
out
pushf
imul
rclb
adcb
stos
out
add
jo
sarb
add
fucomip
into
mov
iret
ljmp
inc
xchg
cwtl
push
inc
mov
std
ljmp
stc
cmp
popl
popf
and
lock
jle
lea
or
and
xor
jbe
ret
clc
stc
idivb
push
fistps
inc
jge
jle
jge
pop
lcall
jg
popa
repz
cli
dec
test
call
popf
es
or
sbbl
icebp
rcrb
sub
mov
sub
sub
arpl
dec
xor
hlt
jne
mov
add
xor
jnp
popf
xchg
scas
xchg
fs
push
ficoml
imul
sub
jle
rorl
or
into
dec
jmp
or
mov
jns
jns
fidivrs
dec
stc
mov
les
cmp
sahf
sbb
add
push
add
je
xchg
pop
push
andl
inc
mov
lea
mov
inc
sub
imul
cmp
pop
mov
test
sub
aad
mov
mov
and
lock
fwait
sub
xchg
mov
jae
or
out
jmp
rolb
mov
fildl
dec
sbb
insb
mov
xchg
mov
or
hlt
jnp
shrl
xchg
pop
jecxz
lcall
xor
out
sti
mov
fnstenv
mov
fs
pop
aaa
data16
jno
call
jecxz
scas
je
out
insl
jg
sarl
push
sub
jmp
popf
fsubr
push
filds
xor
das
mov
and
add
jp
sub
jbe
inc
or
add
xchg
int3
pop
jb
mov
push
icebp
dec
andnps
sub
adc
iret
leave
mov
or
xchg
mov
data16
mov
testb
and
push
xchg
xorb
faddp
push
lock
cmpsl
in
push
inc
bound
in
aaa
and
mov
ret
lods
rcll
sbb
rcr
nop
shlb
mov
inc
pop
ret
pop
out
pop
xor
clc
inc
and
jnp
outsb
ret
lcall
or
fs
push
push
ljmp
or
cmpsl
mov
scas
mov
mov
and
gs
ss
gs
pop
add
leave
xor
jg
and
out
xchg
je
dec
push
mov
pop
or
lret
imull
test
xchg
add
loop
stos
xlat
test
subl
dec
nop
xchg
adc
ja
push
dec
sbb
fmulp
mov
repnz
pop
lahf
and
in
scas
enter
sbb
mov
cmp
loop
inc
rclb
add
or
sbb
dec
cmp
leave
scas
ret
fimuls
in
orb
in
pushf
dec
fadds
inc
jmp
dec
or
xchg
push
mov
inc
mov
jne
or
lcall
inc
add
fmulp
jo
jl
pop
inc
rorb
fsubr
dec
clc
jge
mov
aam
or
shrb
sbbb
aas
add
xor
sbb
jmp
pop
ret
push
into
leave
rcrb
sarl
dec
imul
sub
mov
jnp
and
pop
xchg
loopne
test
call
test
push
icebp
shlb
mov
aaa
jnp
shlb
jmp
in
jb
ffree
adc
push
xchg
ljmp
ja
xchg
test
loopew
repz
lret
aas
filds
add
jne
jb
cmp
ss
dec
cmp
mov
cld
push
call
out
xor
scas
icebp
iret
test
mov
addr16
paddq
pop
jo
cmp
lods
mov
imul
jmp
xchg
mov
sbb
fwait
pop
notb
mov
and
mov
ja
mov
dec
out
push
pop
cmp
mov
mov
adc
in
insb
loopne
scas
addr16
pusha
sub
lods
js
call
movsl
add
sub
inc
pop
xor
imul
out
add
xchg
push
mov
in
dec
xor
sub
fildl
insb
add
add
idivl
pop
jns
fisttpl
insl
mov
iret
test
movsl
xchg
cmc
adc
out
ds
les
sbb
cmpsb
sbb
shrl
aam
push
imul
in
or
fdivrs
push
jne
in
test
aas
sub
sbb
inc
sbb
mov
loop
mov
mov
addr16
js
call
pop
test
adc
dec
mov
scas
addr16
decb
cli
loopne
xchg
or
insb
jnp
pop
adc
test
aam
sub
and
and
jle
cld
push
and
inc
and
mov
add
push
or
movsb
sub
lret
mov
add
sahf
addb
cmp
pop
leave
mov
mov
ja
call
rorb
inc
subl
mov
jb
xchg
call
push
xor
in
or
cltd
stc
push
jnp
in
xchg
cmpsl
push
sahf
cltd
test
addr16
pop
mov
mov
mov
movsb
inc
xchg
int
neg
pop
inc
jns
mull
xchg
sub
int
lret
pop
lock
int3
xchg
daa
pop
addr16
pop
jp
imul
in
in
push
or
dec
mov
inc
inc
incl
sub
sbb
sahf
fstpt
push
lret
push
popa
test
ret
int
pop
mov
sbb
cmp
mov
dec
popf
icebp
or
scas
jbe
mov
and
mov
shlb
ds
push
sub
inc
ds
ds
push
arpl
outsb
xlat
push
mov
mov
mov
icebp
ret
in
repz
outsl
loop
push
xchg
loope
dec
stos
test
aas
cmp
mulb
ss
nop
fistl
add
into
popf
sbb
into
xchg
add
xchg
imul
xorb
sbb
in
sub
mov
cs
pop
popa
push
aas
dec
sbb
dec
mov
rcrl
adc
add
orl
cld
xchg
lret
pop
jno
sub
jno
dec
sar
cmpsb
insb
pop
fistpl
pop
scas
int3
lock
test
roll
mov
inc
add
sahf
jg
mov
addr16
loopne
cmp
setle
jae
aaa
xchg
fisubs
xchg
ljmp
adc
daa
dec
sub
lods
insl
loopne
imul
mov
call
test
in
xsha256
cmpsb
pop
mov
dec
les
sbb
push
lret
pop
into
inc
mov
lcall
jge
pop
xchg
add
pop
jle
cld
push
cmp
sbb
lea
inc
add
imul
cwtl
mov
cmpsl
mov
mul
idiv
pop
hlt
imul
test
or
push
mov
lcall
ror
xchg
mov
push
fstpt
outsb
lahf
xchg
push
enter
and
cmpl
popf
out
jp
jne
xchg
ds
cli
jne
int
and
in
subb
jb
sub
jne
js
or
cld
in
daa
bound
sub
mov
iret
adc
inc
leave
into
test
mov
or
dec
in
gs
icebp
xchg
dec
add
inc
jae
jae
adc
insb
fisubs
jecxz
call
dec
cmc
out
push
push
call
dec
out
in
shll
push
mov
push
pop
inc
or
jno
xchg
repnz
pop
stc
xchg
stos
shl
or
cmp
push
outsb
mov
lods
nop
idivl
xchg
cmp
rclb
iret
mov
sbb
subb
and
gs
pop
aad
jecxz
push
lock
jg
push
arpl
mov
jno
das
cli
in
cpuid
push
sti
inc
push
xor
xchg
in
sbb
ds
or
stc
shrl
xchg
clc
jge
or
adc
stos
in
sbbl
mov
inc
pop
and
inc
and
das
insl
aaa
stc
cltd
push
clc
lcallw
inc
jne
sbb
add
fistl
pop
jnp
in
jp
xchg
push
mov
jne
mov
add
shrl
push
andl
mov
movsl
jo
stc
cmp
dec
fisubs
stos
aas
sbb
out
pop
inc
jmp
ret
pop
insl
inc
andb
movsl
pusha
push
push
lds
pop
lea
mov
push
lahf
sub
popa
xor
sbb
lcall
and
stos
adc
sarb
cmp
jne
lods
lea
sub
inc
outsl
repz
outsl
data16
or
push
stos
inc
gs
push
es
ss
in
jb
nop
mov
pop
sub
call
jae
addb
ret
cli
es
adc
sub
aam
decb
mov
sub
cmp
ret
and
jmp
fisubs
mov
cmp
cmpsb
sub
clc
scas
aaa
mov
jns
push
ret
mov
pminsw
pop
fdivrs
cmpsb
shll
in
out
shrb
or
lods
call
mov
fisubs
ficoms
mov
push
inc
pop
cltd
sbb
cmp
shlb
enter
and
inc
cld
repz
fld
ret
jnp
in
pop
and
lahf
add
lret
jmp
inc
and
cmpsb
mov
xor
mov
in
push
sub
into
shll
lds
mov
dec
sar
cmp
push
outsl
insl
jge
popf
xchg
mov
data16
outsb
sbb
cmpsb
arpl
mov
int
cmp
xchg
test
rcrb
push
sbb
dec
in
push
sbb
mov
int
fs
sub
adc
inc
mov
mov
mov
andb
lret
sbb
mov
cmpsl
mov
int3
daa
add
lds
pop
xchg
je
push
lock
cmp
cltd
push
and
dec
popf
xchg
mov
les
cltd
inc
push
popl
clc
ja
fdivl
mov
scas
mov
add
test
movsb
movsb
mov
lock
add
push
jl
add
and
add
sbb
inc
pop
adcb
adc
mov
pop
mov
sbb
mov
ss
cmc
pop
dec
dec
int3
xchg
pop
xchg
scas
push
mov
push
idivb
xor
add
jne
or
out
or
into
xor
dec
shlb
stos
std
or
mov
in
mov
aaa
add
sub
loop
adc
rcrl
push
xchg
or
movsb
sub
and
cltd
sarb
mov
xchg
push
mov
xor
test
mov
mov
push
add
and
pop
cs
and
clc
popf
mov
inc
ja
mov
clc
adc
add
mov
and
andb
arpl
xor
pushf
add
and
jp
xor
lock
push
push
imul
inc
nop
lods
out
pop
xchg
cmpsl
scas
in
inc
or
push
jnp
mov
test
test
stc
mov
dec
push
add
fidivrs
cli
sub
movsl
mov
cmp
loope
insl
movl
inc
mov
icebp
roll
scas
stos
mov
add
mov
shrb
test
fwait
sarl
shrl
outsl
xor
ja
lock
mov
cmp
add
repnz
out
roll
xchg
pushf
cmp
repz
outsl
clc
les
and
and
out
imul
aam
lods
pmaxub
rclb
dec
aam
aad
test
xor
add
fldcw
js
push
mov
or
je
lahf
sub
mov
out
cld
adc
test
dec
mov
add
pop
inc
mov
and
cld
sub
mov
cmpsb
xor
fldenv
mov
jns
dec
push
pop
and
or
stc
vpmullw
movsl
test
xchg
cltd
imul
and
or
mov
mov
fldenv
mov
jns
dec
push
pop
and
sub
stc
vpmullw
movsl
test
xchg
cltd
gs
jne
out
dec
push
cs
mov
ljmp
mov
mov
jmp
cmp
sub
pop
pop
dec
or
imul
mov
leave
leave
stc
stc
jmp
or
cmp
sub
jns
imul
fxch
leave
stc
stc
jmp
push
push
dec
sub
pop
or
sub
cltd
in
std
mov
pop
inc
or
cli
adc
js
pop
mov
call
xchg
sub
insl
mov
in
push
push
es
ss
cmc
adc
in
mov
cmp
sub
jns
xchg
leave
mov
lds
mov
push
cmp
jmp
sbb
imul
mov
jl
jmp
sbb
movl
cli
xchg
add
jne
outsl
push
push
sbb
ss
lods
mov
mov
xchg
mov
sub
cmp
jno
mov
cmp
je
jmp
sbb
cmp
les
push
cltd
mov
leave
leave
stc
stc
jmp
or
cmp
sub
dec
dec
jns
imul
sar
shr
mov
mov
jne
pusha
cmp
inc
pop
xor
xor
sti
das
or
fsubr
ret
fdivrl
mov
adcl
sub
ss
es
leave
mov
int
fstl
stc
jmp
or
cmp
sub
dec
dec
jns
imul
mov
leave
leave
stc
stc
jmp
or
cmp
sub
dec
dec
jns
imul
dec
xchg
sbb
fists
scas
push
xchg
outsb
add
int
bound
outsl
fnsave
sbb
xlat
jg
pop
faddp
shll
adc
push
inc
loop
aam
xchg
and
inc
mov
and
into
jle
cmpsl
daa
add
jmp
das
mov
mov
jne
mov
push
adc
in
mov
push
sti
std
pop
xor
inc
and
icebp
adc
andl
inc
sbb
push
mov
sub
jbe
sub
mov
push
inc
cmpsl
movsl
push
dec
add
fstpl
jb
rorl
and
sbb
pop
adc
cmpsl
xchg
aad
rorl
jmp
pop
pushf
std
call
sub
inc
mov
movsb
ja
popf
mov
stos
adc
mov
imul
bound
or
cmpsl
pop
adc
mov
adcb
push
dec
stc
jns
sbb
imul
push
cld
push
mov
push
dec
mov
mov
fstpt
stos
ffreep
sub
popa
out
push
lock
mov
lea
mov
pop
mov
adc
mov
int3
mov
cmp
and
xchg
inc
stos
xchg
cmp
sub
pop
movb
mov
in
jns
lock
sub
cmpsl
mov
sbb
lds
shrl
test
sub
mov
add
pop
pop
ja
aas
push
mov
push
dec
mov
mov
arpl
mov
xchg
push
mov
dec
and
xor
jmp
pop
sub
test
lods
mov
jno
inc
dec
stc
fcmovnb
jle
vpunpcklqdq
cld
xor
xchg
fcmovne
pop
mov
or
ret
lret
xchg
mov
dec
mov
ror
mov
xchg
cwtl
inc
push
xor
loop
pop
sub
int3
pop
dec
pop
adc
fcoms
pop
icebp
push
dec
mov
mov
pop
mov
dec
int3
cmpsb
popa
loope
xchg
add
out
mov
cmpsb
sbbl
add
out
push
fldenv
leave
daa
cmp
rol
pop
sti
mov
inc
add
aas
outsb
pop
sbb
decl
mov
in
outsl
add
mov
enter
mov
gs
mov
data16
dec
roll
neg
test
or
add
outsb
popa
fistpl
sti
icebp
jecxz
call
std
mov
jmp
mov
mov
stos
insl
mov
pop
mov
xchg
mov
test
cmc
test
or
sub
stos
cmp
add
xor
cmp
and
xchg
iret
jl
rcll
push
adc
jl
movsl
fdivp
int3
cli
push
pusha
mov
mov
fbstp
pop
ljmp
ljmp
pop
stos
aaa
mov
push
fidivrl
enter
cmpsl
xchg
vprotd
dec
adc
arpl
mov
mov
push
add
mov
sbb
aaa
movsl
out
cmp
mov
out
dec
ss
push
lcall
fstp
lahf
sub
leave
jbe
mov
loope
loopne
adc
loop
mov
pop
std
lods
pop
out
fstpt
andl
fsubrl
out
jb
insb
insb
fs
xchg
mov
repnz
jmp
cltd
fdiv
xchg
add
pop
xchg
sub
pop
js
cld
test
sub
xchg
adc
push
dec
nop
sahf
jnp
dec
jnp
shrb
insl
xchg
mov
lea
pop
mov
push
std
les
xchg
jmp
push
out
push
icebp
rcl
sti
mov
nop
in
fildll
in
mov
adc
jle
and
js
jae
std
or
jbe
jae
lds
inc
ja
add
push
cmp
adc
jle
push
cmp
sti
add
jmp
in
push
or
inc
cmp
outsb
ljmp
push
ret
ss
aaa
push
xchg
jp
xchg
dec
rclb
sahf
cltd
jbe
sbb
jmp
lock
mov
cmp
mov
jmp
gs
mov
cmp
push
jns
imul
xchg
add
pop
mulb
pop
jp
add
sbb
mov
fmul
nop
xchg
das
adc
sbb
rorl
imul
mov
dec
pop
xor
pop
jns
test
or
xchg
icebp
mov
ret
and
xchg
cmp
into
in
xchg
lds
cmpsl
push
pop
mov
dec
adc
cltd
sub
test
lcall
fdivs
pop
push
int
icebp
inc
or
mov
push
push
pop
lods
sbb
mov
cmp
sahf
lea
repz
insl
add
mov
pop
out
test
lahf
repnz
jnp
sbb
lret
sbb
mov
or
xor
test
ljmp
mov
bound
ss
jae
jo
mov
out
adc
push
rcrb
sbb
stos
xchg
push
test
jmp
cmp
scas
insl
jae
or
mov
loope
fnstenv
mov
jle
ret
jp
orl
lods
js
add
cmp
jp
add
hlt
enter
test
inc
fwait
lahf
movsb
fdivr
fnstcw
sbb
sbb
dec
jae
jg
into
add
pop
pusha
xchg
fbld
xlat
loop
jg
push
jae
and
cmp
insb
adc
pop
aaa
xchg
aad
inc
in
clc
add
lock
push
mov
add
mov
pop
fsts
or
mov
nop
mov
aaa
mov
mov
push
out
mov
add
push
add
cli
insb
pop
loopne
call
cld
aad
and
in
icebp
mov
mov
sarl
mov
mov
jnp
mov
cmp
jl
popa
insl
push
jns
repz
cmp
test
or
mov
mov
and
cmp
pop
xor
outsl
push
mov
inc
adc
add
xlat
sub
in
dec
das
pop
push
subl
lea
icebp
jecxz
adc
stos
and
sbb
jecxz
lcall
mov
mov
je
fcmovnbe
rol
lahf
inc
push
out
testl
and
sar
bound
imul
mov
shlb
xor
xchg
or
fnstsw
dec
mov
dec
and
fsubrs
test
mov
dec
loope
loope
push
fs
mov
push
mov
fistpl
mov
lahf
jno
xchg
scas
sub
cltd
push
test
xor
shl
jae
loop
and
push
jb
mov
cld
pop
jne
fdivp
sub
imul
cmp
jo
pushf
pop
mov
mov
sub
std
in
imulb
add
cld
push
pop
das
out
into
push
push
fwait
sbb
sbb
pusha
sub
std
repz
mov
stos
dec
lahf
arpl
jne
fdivl
mov
mov
cltd
xchg
out
mov
jle
jecxz
not
lea
aas
pop
test
pushf
sub
xchg
jb
or
fdivs
cmp
enter
dec
dec
sbb
mov
xchg
divl
xor
cmc
dec
sbbl
add
inc
loope
aas
cmpl
adc
aas
inc
mov
cmp
enter
sub
outsb
cld
adcb
js
mov
loop
cmp
or
xor
adc
fidivrl
aas
adc
insl
pop
ffreep
add
xor
pop
incb
or
mov
in
sub
xchg
out
pop
sbbl
cmpsb
mov
in
jp
push
ret
repnz
xchg
dec
insl
into
insl
sub
push
dec
roll
gs
nop
mov
add
sahf
mov
mov
addr16
das
or
in
cmc
pop
cmc
jg
mov
fs
dec
mov
mov
sub
je
rcrb
cmp
sbb
or
iret
push
out
push
sub
bound
push
shlb
adc
sub
adc
lock
insb
lock
jbe
stos
push
scas
js
repnz
mov
ss
jmp
or
inc
mov
in
fdivr
fldenv
or
cmpsl
jo
pop
or
cmp
push
cmp
ficoms
cld
lret
lods
pusha
mov
push
addb
adc
jo
or
inc
push
or
loope
lea
mov
sbb
adc
cmp
and
gs
repnz
imul
mov
scas
inc
add
inc
sbb
xchg
push
shrb
mov
ljmp
mov
ja
test
add
mov
aad
int3
dec
cmp
cli
pop
inc
adc
xchg
mov
dec
pop
add
mov
push
jp
cmp
orb
lds
mov
mov
loop
push
and
les
xor
in
inc
lcall
dec
hlt
lods
es
mov
stos
stos
loop
int3
pop
xor
gs
inc
movsb
mov
aam
push
notl
push
push
cli
test
shl
or
sahf
test
add
fisubrs
inc
xor
inc
es
mov
jecxz
mov
pop
dec
mov
dec
js
mov
xor
push
adc
sub
jo
je
xorb
fisubs
fcomip
popa
mov
jmp
xlat
xlat
in
dec
int
and
and
pop
and
dec
xchg
jbe
bound
iret
push
push
ret
rcrl
shrd
test
cs
pop
mov
dec
sarl
add
out
mov
lahf
adc
or
sbb
jp
add
and
xchg
sub
test
and
or
movsb
repz
scas
sub
jmp
or
hlt
dec
mov
pop
es
xor
mov
pop
add
repz
xchg
popa
lret
pop
rcrb
pop
shl
cmp
mov
ret
pop
cmp
add
das
jae
sbb
sbb
lock
fucomp
mov
xchg
lea
xchg
mov
adc
fldcw
push
insb
pop
in
cmpl
in
fs
mov
lret
and
xor
fnstcw
divb
fiadds
aad
test
bound
mov
push
and
notb
mov
jno
sbb
jl
mov
test
and
pop
insl
mov
cwtl
xchg
lret
inc
pop
ficomps
shrb
insb
cmp
and
xor
sub
xchg
pop
out
test
cmp
fcoms
pop
mov
jne
dec
gs
shll
lods
loop
mov
fiaddl
and
mov
fs
jns
push
lods
sti
lea
or
adc
fadds
sub
jecxz
call
test
jno
xchg
xchg
jmp
insb
les
mov
cmovg
lcall
icebp
xor
and
orb
push
inc
leave
scas
dec
in
jg
daa
call
push
inc
sbb
cli
movsb
aaa
ja
mov
xor
cld
sub
sub
pushf
push
imul
icebp
imul
cmp
cmp
add
iret
pusha
cwtl
stos
idivb
xor
enter
fcmovb
xor
and
add
mov
xchg
mov
lret
mov
repz
or
add
je
mov
jp
mov
mov
jmp
pop
lea
pop
mov
subl
dec
sti
inc
pop
fdivs
push
sbb
jle
mov
pop
je
dec
pushf
loopne
ret
add
mov
mov
aas
rcll
mulb
cmp
dec
push
lea
test
cmpsb
pusha
in
or
sbb
mov
lret
adc
xchg
add
dec
je
mov
loop
dec
and
mov
loope
mov
adc
sbb
adc
jle
sbb
out
lds
cltd
cmp
cmc
scas
out
xor
popa
mov
mov
push
pop
sbb
jbe
das
dec
jge
fcompl
pop
orb
ficomps
in
pop
lods
mov
js
into
xchg
lds
gs
nop
mov
loope
test
arpl
sub
fdivrs
pop
test
add
andb
mov
loopne
in
lret
adc
arpl
shlb
or
add
mov
cmp
pop
out
dec
mov
shl
stc
mov
mov
shr
out
cmpsb
subl
in
push
xchg
mov
fnsave
sar
shlb
fwait
bound
pop
adc
pop
inc
jnp
movsb
xchg
aaa
fisubl
inc
mov
pop
xchg
lret
jns
mov
imul
cmp
xchg
sbb
pop
jnp
movsl
mov
data16
mov
std
pop
push
xor
mov
inc
stos
push
pop
jg
scas
flds
flds
fmuls
orl
sub
int3
jle
pop
jo
leave
mov
dec
pop
movsl
xchg
cmp
cmc
jp
mov
push
and
mov
lea
and
dec
shr
loopne
sub
xsave
inc
in
rorl
push
lahf
roll
mov
jns
ds
push
adc
xchg
lret
clc
nop
call
or
sub
add
pop
idivb
adc
xchg
out
lret
addr16
repz
jo
pop
push
dec
dec
sub
sbb
std
jmp
add
dec
sbb
pop
lock
pusha
sub
pop
dec
sub
dec
orb
pop
xor
jg
and
dec
dec
fsubrl
push
push
fwait
xor
jns
lods
fmull
pop
out
cwtl
cmpsb
int3
mov
inc
xor
fwait
mov
push
sbb
lods
xchg
dec
mov
cld
cmp
leave
mov
adc
jl
mov
inc
sub
xor
data16
movsl
mov
aad
add
inc
mov
jns
ret
pop
pop
stc
mov
cmpb
test
jae
or
push
ljmp
mov
pusha
sti
mov
inc
fsubl
adc
cmp
or
aaa
cmp
jbe
mov
cmp
xchg
icebp
popa
mov
dec
call
lret
xchg
mov
frstor
int
arpl
sub
icebp
loope
insl
out
push
lods
inc
sbb
lahf
nop
inc
mov
mov
xchg
imul
out
jmp
jge
mov
test
popa
jns
popa
clc
sbb
mov
pop
icebp
ror
mov
lcall
inc
insl
stos
stc
mov
jae
sub
jbe
and
aad
fcoms
mov
pop
inc
adc
outsb
cmp
cld
lock
dec
fbstp
movsl
test
push
xor
insb
pop
mov
pop
pop
jecxz
cltd
rol
jge
xor
cmp
mov
pop
sbb
fucomi
adc
sub
orl
mov
push
push
add
nop
es
mov
xchg
mov
loop
jmp
lea
pop
or
push
mov
ret
aas
sub
iret
jle
sbb
sub
xchg
mov
xor
fisttps
push
inc
lea
push
aas
adc
inc
add
icebp
and
lahf
cwtl
testl
pop
les
cltd
xchg
ret
leave
mov
mov
mov
mov
pop
std
jge
stos
cmp
push
mov
sbb
lds
mov
adc
jae
insl
mov
fcomi
xchg
add
out
jg
jae
jnp
push
fcoms
lds
mov
xor
jge
cli
test
cld
mov
iret
imul
lret
imul
sbb
or
sbb
cld
out
dec
addb
mov
ljmp
mov
lahf
rol
scas
cmpsl
clc
add
cld
pushf
inc
ret
xor
inc
dec
push
dec
mov
rcl
sbb
bnd
xor
xor
fldl
pop
pop
lock
and
loopne
push
stos
int
push
jl
push
cli
dec
pop
int
int
pop
add
push
jne
pop
rcl
je
jge
pop
int3
mov
les
lret
jl
repz
mov
lret
jmp
out
inc
push
xchg
mov
lea
std
pusha
stos
mov
scas
mov
fcomps
lods
adc
cmp
push
or
call
mov
inc
cld
movsb
lret
and
outsb
fdivrs
fs
in
inc
sub
pop
out
and
jle
mov
daa
cmpsl
js
inc
jns
in
arpl
pop
cmp
movsl
xchg
fildll
iret
inc
sub
mov
mov
sub
jg
loopne
cs
aam
ljmp
push
dec
cs
inc
mov
dec
sti
sub
test
inc
push
mov
push
mov
rcr
adc
jg
nop
lock
dec
push
insl
cmpsl
mov
inc
jecxz
outsl
push
iret
imul
popf
rcrb
cld
lock
add
test
iret
lea
push
xchg
push
daa
gs
jge
gs
xor
call
scas
jns
nop
sbb
mov
ret
xor
mov
iret
int
add
cmpsb
scas
jecxz
push
push
shlb
rorb
xchg
ret
jne
sti
aad
stc
add
gs
mov
cmc
jmp
cmp
idivl
int3
adc
cli
push
xor
mov
and
ret
mov
fimuls
pop
loope
cltd
cmc
xchg
ljmp
xor
push
ror
into
sbb
adc
nop
inc
ljmp
popf
mov
fs
mov
cs
es
fwait
stos
dec
std
call
cmpl
rcl
and
arpl
and
orl
cmp
stos
das
mov
mov
xchg
out
xchg
add
mov
xchg
adc
dec
mov
sub
cmpsl
jb
aaa
xchg
lret
mov
mov
jmp
mov
or
shrl
jbe
inc
sbb
sub
xchg
or
pop
leavew
data16
test
sbb
fisttps
shll
mov
stos
dec
xor
arpl
pop
fldt
out
stos
mov
shr
push
fsubrl
xor
outsb
xchg
push
mov
imul
mov
mov
test
inc
jge
pmaxsw
sub
xor
mov
mov
addl
adc
or
test
jo
scas
aaa
xorb
mov
and
aaa
out
out
aam
ret
and
nop
scas
pop
lds
mov
repnz
adc
and
stos
push
push
push
pop
sbb
dec
xor
fisttps
add
pop
dec
mov
fxtract
lds
or
xor
aas
aam
insl
mov
mov
fidivl
aaa
pusha
loop
scas
in
lret
mov
cmpsb
mov
adc
inc
sub
jne
or
cmpsb
xor
add
lods
jg
test
inc
pop
fcomip
scas
sub
sbb
enter
sahf
loope
ret
popf
mov
aaa
mov
mov
mov
dec
jbe,pn
jae
inc
xchg
lret
or
dec
adc
pushl
sbb
inc
test
test
daa
ret
stos
insb
push
arpl
out
aaa
lcall
mov
xor
adc
inc
cld
insl
out
mov
cmp
inc
std
into
enter
cmp
xchg
mov
xchg
in
in
xchg
mov
mov
arpl
jge
cmpsl
cmp
jb
mov
xchg
cmp
cmp
pusha
push
lahf
mov
int
jno
dec
popfw
lds
xor
mov
test
push
stos
cmpsb
scas
sub
mov
shl
push
xchg
insl
and
pop
shll
sbb
rcrb
cld
les
and
push
mov
popf
inc
cmc
xor
jge
dec
rcll
xor
stc
sbb
mov
data16
icebp
repz
sahf
xor
repnz
jno,pt
dec
cld
jge
sub
or
inc
mov
out
push
movb
xchg
sbb
test
out
mov
mov
mov
das
fiadds
test
jb
pop
inc
sub
pop
sub
cmc
pusha
mov
sbb
adc
adc
cmc
lahf
and
incb
pop
cltd
ja
cmp
scas
lds
mov
fsubs
out
xlat
in
arpl
mov
inc
lock
dec
fistps
push
mov
fwait
lcall
cmpsb
ja
fs
mov
stos
fs
daa
dec
adc
fs
mov
loope
cwtl
sub
cld
sbbl
out
cs
sub
xor
push
movsl
fidivs
jnp
xor
shlb
loopne
xor
inc
jg
stos
cmp
dec
loop
inc
roll
ljmp
jns
lcall
adc
add
data16
jmp
xor
pop
lret
cmpsl
adc
bound
sbb
hlt
pop
mov
test
leave
stc
stc
jmp
or
cmp
sub
dec
dec
jns
imul
mov
leave
leave
stc
stc
jmp
or
cmp
sub
dec
dec
jns
imul
mov
leave
leave
stc
clc
imul
cmp
sub
pop
pop
dec
dec
jns
imul
mov
leave
dec
stc
jns
push
sbb
or
sub
cmp
cmp
sub
sbb
or
iret
cmp
inc
inc
mov
xchg
mov
lret
ror
sarl
sub
sbb
or
jnp
imul
dec
cmp
xchg
test
fcmovnbe
lret
shll
xor
add
adc
bound
popa
inc
push
dec
inc
mov
jecxz
loopne
movsl
test
push
inc
inc
push
sub
fs
aam
pop
sar
repz
icebp
add
sahf
mov
dec
mov
push
jno
in
pop
fimuls
lds
in
icebp
sti
sub
shll
les
xlat
sub
jnp
pop
mov
mov
push
sub
enter
in
loope
push
lret
jns
je
add
test
push
movsb
cmp
xor
pop
scas
adc
jmp
push
fcmovne
shrb
jno
inc
jmp
test
jae
push
cmp
in
lcall
loope
rcr
aas
shll
inc
test
test
inc
mov
fistl
ror
aam
xor
and
adc
add
popa
pop
push
push
inc
mov
xchg
xchg
and
ror
test
xor
jg
or
adc
call
mov
test
push
dec
inc
je
jnp
pop
sbb
sbb
fwait
ret
sti
lahf
and
xchg
imul
imul
dec
inc
mov
xchg
mov
fcmovnbe
lret
sarl
sub
sbb
or
jnp
imul
dec
inc
mov
xchg
mov
fcmovnbe
lret
sarl
add
movsb
cld
js
pop
add
mov
lcall
in
das
mov
in
cmpsb
add
push
mov
inc
call
rcr
mov
loopne
into
mov
mov
leave
push
jno
lods
repz
or
sub
jns
adc
add
xor
xor
leave
jne
mov
and
nop
mov
les
jae
mov
rcrl
rolb
orb
mov
cmp
jnp
int3
in
lods
clc
mov
jnp
cmp
stc
adc
popa
inc
mov
push
test
clc
pop
and
fldt
pushf
ret
and
pop
mull
xchg
mov
pop
out
popf
pusha
add
loop
adc
enter
xor
sbb
cmp
jl
dec
lcall
aas
testb
repz
and
push
ret
push
add
mov
imul
aas
lds
and
rcll
xchg
addr16
cmp
scas
test
outsb
jg
adc
daa
xchg
pop
lret
test
mov
jle
ret
fdiv
int3
push
js
lcall
mull
adc
data16
ja
inc
mov
loop
mov
fdiv
cmc
out
je
jo
fstpl
stos
stos
adc
test
xchg
pop
xor
mov
ja
cmc
adc
stos
nop
fnstcw
pop
inc
mov
adc
push
fidivl
xchg
push
mov
call
ljmp
test
cmpsl
loopne
cltd
dec
pop
lret
mov
mov
hlt
and
outsb
out
fs
popa
cmp
das
dec
xchg
pop
cmp
stos
out
sbb
sarb
imul
cmp
jbe
fildl
mov
jge
mov
in
add
lret
pop
push
into
jne
loopne
popa
xor
mov
pop
xor
insb
ret
lods
loopne
cmpsl
mov
pop
inc
xor
arpl
sbb
jmp
popf
hlt
sbbb
mov
hlt
sbbb
mov
ficoml
fisttpl
push
mov
xchg
inc
or
in
nop
ljmp
outsb
sub
fnstsw
cld
mov
sub
sub
loop
push
adc
stc
dec
sahf
jmp
add
sbb
ss
dec
jge
pop
sbb
stos
repz
sahf
push
pop
pop
mov
ret
out
testb
in
lods
mov
call
mov
inc
andb
hlt
lret
xorb
call
enter
add
or
std
mov
shll
or
jp
ja
les
das
mov
xor
sbb
pop
stc
mov
push
pop
mov
test
or
lock
int
incl
test
adc
inc
in
mov
icebp
pop
jo
xchg
ja
negb
cmp
fsubl
fstpt
int
je
inc
push
call
and
insl
repz
out
mov
in
out
xchg
and
sub
pop
lea
ret
and
nop
hlt
and
lods
mov
pop
addr16
push
in
jle
in
stos
xchg
rcrl
movsb
pop
fistl
add
les
sar
sbb
lret
mov
adc
push
sub
adc
cltd
sub
or
test
pmaxsw
or
lock
mov
int
out
repz
sbb
inc
mul
addb
dec
push
imul
daa
ret
jecxz
push
lretw
cltd
pop
ret
sub
pop
ja
hlt
out
arpl
shrl
cmp
out
addr16
pop
jge
pusha
sbb
jg
jmp
fucomi
and
pop
out
xchg
scas
clc
add
popf
imul
mov
xor
add
push
pop
mov
test
jbe
sahf
xchg
js
mov
cmpb
and
cltd
push
xor
sar
dec
cltd
rorb
shrl
push
sti
movsl
scas
mov
scas
sbb
mov
or
lods
call
xchg
and
push
es
xchg
sti
cld
or
xor
aaa
js
jne
inc
in
sbb
lods
cmp
pushf
aaa
out
iret
push
cmp
or
jae
pop
pop
xor
or
lret
das
in
out
mov
fisubs
jmp
je
lcall
cmp
shlb
jb
inc
lret
rolb
jl
in
leave
enter
sahf
or
xor
mov
fdivrs
aas
jb
xchg
sub
loopne
push
cs
pop
mov
sar
and
lea
lret
jne
pop
jne
icebp
stc
dec
imul
mov
call
jne
adc
call
jno
pop
or
int
add
mov
push
push
mov
nop
aaa
add
lcall
add
lret
inc
test
icebp
insl
cmp
std
testb
hlt
in
dec
stos
sar
pop
push
andb
add
inc
mov
repnz
mov
adc
mov
xor
and
outsb
xchg
dec
mov
sbb
push
movsl
and
std
adc
fbstp
pop
dec
fmuls
lcall
jne
add
cltd
in
ds
popf
pusha
sub
lock
pop
testb
aam
stos
fstps
add
inc
aam
js
imul
pop
les
ret
mov
int
xchg
or
loop
dec
inc
shrb
imul
lcall
fists
sbb
sbb
dec
dec
std
int
std
mov
popf
adc
jns
lock
xchg
mulb
mov
xchg
dec
hlt
push
shlb
pushf
lods
stos
imul
cmc
inc
lea
xor
shrl
mov
rorl
scas
btcl
cltd
lret
jne
in
push
into
pop
dec
xor
jl
adc
pop
ffreep
ficomps
imul
in
int
mov
cmp
dec
dec
into
push
call
inc
xor
inc
out
sub
mov
xor
rcl
xchg
iret
push
sbb
or
hlt
cmp
loope
clc
and
dec
test
lcall
mov
loopne
mov
jg
lea
rclb
test
xchg
mov
in
loopne
sbb
insb
mov
push
jp
mov
imulb
adc
dec
jnp
ja
or
pop
in
cmpsl
xlat
adc
mov
cmpsl
outsl
mov
adc
xor
sbb
dec
or
and
and
or
jno
lret
cld
xacquire
jecxz
mov
scas
pop
rolb
dec
insl
scas
popf
out
dec
aaa
int
iret
pusha
subl
pop
push
out
cltd
cmc
mov
xor
pop
popf
test
aad
inc
add
push
call
mov
dec
test
aaa
jle
cmp
sti
mov
lcall
inc
push
pop
ret
sahf
lods
dec
push
dec
or
mov
cmp
mov
mov
data16
aad
xchg
pop
stos
push
loop
stc
mov
xchg
into
stos
jno
push
or
add
mov
std
adc
xchg
dec
movsl
test
in
mov
mov
push
stc
test
mov
dec
fcmovnbe
dec
pop
adc
testl
repnz
mov
xorb
orl
inc
jns
mov
stc
outsb
jp
clc
push
subb
mov
or
mov
je
cmpl
xchg
push
call
stc
je
pop
sahf
lods
ss
xor
cltd
lock
cmp
fisttpll
cs
out
int3
out
imul
xchg
lahf
orb
push
or
push
cs
inc
cmp
pop
jmp
mov
cmpsl
sahf
das
inc
or
pop
and
inc
ret
fs
adc
jns
clc
mov
cmpb
call
pop
stos
popa
dec
mov
into
lcall
jl
es
xchg
cmpsb
cmpsb
mov
jb,pt
aas
xchg
jno
out
out
mov
shlb
stos
cld
push
inc
xor
and
arpl
push
dec
or
push
loop
scas
mov
cmp
mov
cmp
push
jne
and
jmp
cmp
icebp
xchg
fsubrs
and
cli
sub
fildll
cmp
int
pop
or
jmp
or
fwait
sbb
cld
pop
xor
xor
rorl
pop
inc
sti
int3
xor
jg
pop
std
xlat
insl
adc
push
adc
adc
mov
push
cwtl
syscall
mov
jo
pop
xchg
cmc
stos
lahf
pop
or
sbb
cwtl
cmp
test
jo
adc
mov
xor
std
pusha
outsl
sub
aad
add
sbb
jge
loope
mov
xchg
cmp
cmp
stc
inc
mov
push
cmp
int3
movsl
inc
sbb
jb
mov
dec
xchg
adc
mov
das
push
aas
cmp
dec
xor
xchg
mov
imulb
push
scas
xor
sti
iret
xor
mov
hlt
lea
mov
inc
jb
movsb
jl
mov
push
mov
orb
es
arpl
cli
cs
addr16
inc
cmp
mov
push
jnp
inc
sbb
mov
stos
in
jae
jl
gs
out
cmp
and
add
mov
rcrl
push
aas
shr
lret
or
push
fcomps
popa
mov
xor
sub
imul
jmp
mov
mov
jle
sub
mov
jl
daa
cmpsb
push
jecxz
xchg
jno
test
lret
pop
rorl
xchg
testb
sbb
out
out
je
sub
mov
ja
pushf
add
jo
hlt
les
divb
cmpsb
pop
outsl
or
lea
jne
adc
arpl
xor
xor
inc
psrlw
testb
mov
jg
jae
sub
lods
jno
xor
cli
ror
add
or
stos
movsl
mov
jo
fidivs
adc
fmul
fistps
shrl
dec
and
xchg
sub
popa
stos
or
add
xchg
cld
dec
jbe
gs
aaa
lods
icebp
pusha
sub
cmp
push
mov
mov
out
pop
or
jl
popf
sub
xchg
xchg
insb
xor
fsubrs
mov
fsts
mov
mov
xchg
call
inc
addr16
dec
pushl
sbb
fs
shlb
push
xor
vandnps
push
xchg
ja
or
and
cmp
stos
push
test
rcrb
sbb
aam
add
test
in
enter
shl
es
shlb
mov
mov
cmp
les
sub
push
stos
jmp
testl
push
mov
mov
jmp
mov
mov
shr
mov
jecxz
pop
out
mov
mov
decl
shr
ret
inc
dec
mov
xor
mov
inc
testl
and
sub
lret
mov
xor
in
stc
popf
dec
or
call
adc
pop
ljmp
pop
ficompl
xchg
pop
push
rcrl
stos
rorl
xchg
dec
mov
and
fdiv
dec
add
in
stos
sbb
jmp
cmp
or
mov
fcmovne
and
mov
jg
xchg
jo
dec
imulb
push
lods
inc
rcrb
xchg
or
stos
std
std
pushl
adc
and
xor
dec
push
pusha
mov
sahf
sbb
and
rcll
fucomi
adc
daa
jg
mov
rcll
inc
fnsave
mov
xchg
orb
loope
insl
insb
fdivr
cmpsb
pop
add
ret
add
dec
push
mov
cmp
xchg
scas
add
mov
push
add
pop
stos
mov
fdiv
jp
mov
clc
loopne
or
cmp
dec
out
add
push
js
mov
leave
ljmp
mov
cli
in
sbb
daa
pop
dec
les
aas
xchg
cmp
xor
xchg
dec
add
test
scas
psrad
jecxz
test
lcall
pop
mov
push
mov
mov
cltd
scas
stos
ficoml
rcrb
clc
jle
aaa
jns
pushf
lret
add
push
popf
shll
inc
mov
mov
cmp
fcoms
mov
lret
mov
ja
xchg
cmp
js
stos
or
dec
fsub
test
or
pop
sub
ret
out
fistpl
aas
loop
mov
jnp
fidivrs
ljmp
lret
inc
ret
test
mov
add
ja
mov
xchg
cmp
push
iret
pop
cmpsb
or
repnz
fs
add
mov
jp
sub
mov
test
es
mov
cmp
jb
mov
sahf
jecxz
lods
push
into
pop
jae
sarl
setbe
jnp
dec
nop
inc
pop
cmp
orl
popf
insb
fdivs
mov
out
int
xor
pop
mov
jmp
cld
sahf
mov
adc
retw
mov
cmc
sbb
pop
xor
push
movsl
rcll
ret
rorb
xor
in
ret
adc
lcall
mov
or
les
shlb
out
push
xor
pop
enter
mov
xchg
mov
clc
mov
es
jl
dec
iret
adc
and
mov
pop
lret
add
in
jno
pop
mov
negl
push
pop
push
rorl
into
add
pushf
fwait
and
add
adc
roll
or
pop
adc
pop
and
xchg
cs
dec
call
repz
sbb
adc
mov
std
xlat
sub
stos
test
imul
clc
cmpsb
cmpsb
pop
call
push
pop
adc
scas
adc
xchg
dec
dec
push
repz
dec
pop
imul
sbb
mov
loope
addr16
fs
ror
or
imul
jbe
stc
fucom
dec
mov
xor
xchg
in
les
mov
sbb
call
adc
fs
push
mov
add
mov
dec
xchg
inc
add
test
cmp
je
cmpsb
leave
inc
fldl
mov
cmp
roll
insl
nop
mov
out
js
xor
sub
adcl
aaa
jge
test
cld
popf
loope
xchg
sub
scas
inc
inc
xchg
pop
jnp
loope
xor
addr16
mov
push
pop
fcompl
jbe
sub
pop
push
inc
mov
cmp
dec
aam
psrld
repz
ja
lock
enter
sub
mov
sub
idiv
test
cmp
inc
mov
jl
gs
cmp
push
push
popa
loope
sub
dec
xor
inc
lods
test
inc
popa
mov
xlat
jo
popf
dec
aas
bndldx
jl
stc
lock
pop
pop
inc
dec
lret
pop
and
push
stos
mov
mov
stc
subb
adc
dec
ljmp
cmpsl
lods
mov
dec
fnstcw
mov
mov
xchg
int
or
in
shll
mov
js
add
push
dec
je
imul
push
push
sbb
jb
test
jp
in
push
sahf
sbb
clc
jl
jns
inc
aas
or
jae
mov
fisttps
jo
adc
push
inc
sub
add
inc
loopne
xorb
subb
outsl
inc
xor
or
cmc
out
or
aas
xchg
cs
push
das
hlt
je
int
sti
or
int3
jg
pop
test
jg
cmp
stc
outsb
hlt
pusha
xchg
out
dec
pushf
cmp
mov
jge
ret
and
mov
inc
mov
cmp
push
mov
adc
aad
in
and
dec
jg
cmp
xchg
js
pusha
cli
hlt
jae
xor
sbb
lea
sti
xor
int
cld
mov
jle
rcll
xchg
fldt
mov
push
mov
cmpsb
icebp
push
xor
add
fadds
jmp
add
push
dec
cwtl
test
add
test
cli
pop
imul
xchg
mov
lahf
jns
xchg
cs
into
or
sbb
in
mov
sub
clc
and
imulb
enter
das
filds
mov
mov
fsubs
xor
js
cwtl
das
push
clc
mov
fsubs
cmc
push
mov
jg
or
addb
fwait
jp
addr16
add
cltd
fcompl
cltd
mov
pop
mov
inc
js
mov
push
pop
push
mov
bound
push
int3
mov
gs
arpl
fbstp
xchg
push
test
loope
jg
jp
daa
js
xor
xor
xchg
lcall
dec
repnz
fdivrs
jnp
inc
lret
hlt
loope
sbb
es
lcall
shlb
popf
cmc
sahf
push
push
inc
int
ret
out
xchg
and
and
movsl
out
popf
mov
and
or
jle
inc
test
mov
xchg
cs
mov
cli
les
mov
cmc
dec
inc
jo
cwtl
mov
fmuls
clc
sti
mov
rcr
jge
xor
popa
stc
mov
into
testb
sbb
rcr
lea
test
sbb
sti
mov
test
mov
and
fstpl
aas
popf
jle
inc
nop
fs
pop
jle
sub
xchg
push
jne
mov
movsb
xor
mov
and
pushf
mov
daa
incl
xchg
and
inc
mov
popa
notb
sub
jae
xor
punpckhwd
sub
cmpb
xor
xlat
push
std
sti
mov
popa
cmp
pop
xchg
shrb
dec
pop
inc
jns
jno
sbb
leave
jmp
ficoml
dec
pop
lret
scas
cmpsb
sbb
xor
cmc
cmpsl
and
sti
mov
push
leave
xor
xorb
ds
adc
xor
lret
jne
push
jae
push
pop
pop
popa
xchg
xlat
xchg
imul
mov
xchg
nop
fs
ret
mov
lret
mov
adc
hlt
ja
dec
test
mov
sub
repz
shrl
and
push
pop
lret
pop
outsl
clc
sti
test
mov
movb
mov
mul
mov
jmp
bound
add
shr
fists
sub
nop
repnz
jns
jns
pusha
adc
pushf
mov
xor
popa
popa
shrb
xlat
fwait
add
bts
lahf
jg
push
sub
sbb
inc
fsubrs
xchg
cmpsl
adcb
mov
fwait
sbb
xor
fnstsw
outsl
sbb
shr
rcl
or
adc
test
movsb
stos
cmp
jmp
js
xchg
rolb
lock
stos
in
mov
icebp
aam
push
and
pop
sbb
xor
sar
bound
or
into
ds
movsl
subb
aam
hlt
pop
repnz
addb
jmp
aad
pop
dec
cmp
lea
xor
pop
xchg
aad
jb
jne
xor
dec
xor
sub
movsb
and
bts
inc
out
bound
cmp
push
ss
xor
sub
paddusb
clc
mov
lahf
and
pop
push
sub
push
test
test
sbb
cli
jo
mov
insb
adc
int3
lret
test
push
stos
es
rorl
jg
fsubl
xor
jl
test
popf
inc
fisubrl
in
mov
fdivrl
xchg
cld
dec
sub
stc
mov
sub
xchg
xor
aas
in
push
push
mov
dec
xor
xor
mov
out
cltd
and
cmpsl
jl
push
popf
or
sbb
in
inc
mov
jae
adc
lods
xor
inc
or
push
enter
mov
adc
jle
cmp
out
cmp
sub
push
lcall
sarb
movsl
inc
mov
movsl
call
testb
in
notl
adc
cmp
and
inc
mov
cwtl
cmp
xor
int3
lods
fiaddl
out
cmp
fildl
xchg
adc
jnp
scas
sbb
std
jo
ljmp
popa
push
fmull
xchg
ja
mov
stos
xchg
gs
sti
xor
lea
enter
mov
sub
sbb
outsb
sub
pop
xorl
cltd
lcall
sub
xor
stos
pop
add
andb
sahf
pop
adc
jne
jecxz
into
fsubl
mov
ret
mov
les
scas
adc
std
mov
ret
int
outsl
cld
add
mov
xchg
xchg
popf
aas
xor
inc
pop
xchg
es
int3
push
xlat
aas
or
adc
xchg
outsl
lret
xor
subb
das
add
out
pop
ret
test
sub
jmp
fcomps
sub
insl
mov
push
pop
push
sub
mov
out
pmaxsw
aaa
rcll
and
mov
movsb
xchg
dec
les
push
ja
jecxz
add
or
clc
push
lods
dec
xlat
sahf
gs
and
adc
add
imul
dec
inc
mov
xchg
mov
fcmovnbe
lret
sarl
sub
sbb
or
jnp
imul
dec
inc
mov
xchg
mov
fcmovnbe
lret
sarl
sub
sbb
or
jnp
imul
dec
inc
mov
xchg
mov
fcmovnbe
leave
sarl
sub
sbb
or
jns
imul
lret
inc
inc
mov
or
xchg
mov
mov
push
and
xor
mov
push
sbb
rcrl
pop
or
jbe
inc
test
xchg
cltd
xchg
idiv
arpl
fld
sub
cmp
or
sbb
imul
inc
test
xchg
cltd
xchg
idiv
out
xchg
fld
sub
cmp
or
sbb
imul
inc
test
repnz
xchg
movsb
mov
pop
cmp
jns
push
loop
pop
test
sub
add
xor
sahf
ficoms
jl
mov
jl
pop
stc
push
push
sub
fcompl
pop
rclb
push
or
xchg
xchg
lods
outsb
cmp
loope
push
sti
repz
push
sub
test
push
data16
idivl
es
sub
sub
cmc
push
imul
mov
mov
or
dec
aam
fstps
or
xorl
int3
icebp
fldcw
inc
mov
sub
dec
shll
pushf
decl
and
cmpsb
cld
xchg
popf
jecxz
and
ret
jbe
cmp
or
sbb
imul
inc
test
xchg
cltd
xchg
idiv
out
fldcw
gs
outsl
sub
sbb
push
sbb
rcl
shl
std
rcrb
lods
xchg
jp
jge
push
je
ds
inc
sti
into
aam
icebp
idiv
jmp
cltd
mov
xchg
pop
jg
jne
jle
arpl
jbe
dec
push
pop
inc
test
xchg
cltd
xchg
idiv
out
fld
sub
cmp
or
sbb
imul
inc
test
xchg
cltd
xchg
idiv
out
fld
sub
cmp
test
fidivrl
sub
clc
or
les
add
jge
loope
jb
dec
jbe
fidivrl
stc
dec
mov
int3
xchg
ss
pop
add
inc
dec
stos
loope
aam
rcl
adc
das
cmp
mov
mov
gs
adcl
mov
mov
pop
cltd
mov
mov
push
cmp
pop
hlt
mov
gs
sbb
dec
orl
fidivl
ret
sbb
cmpsb
and
es
or
fldt
or
out
sbbb
sbb
aas
je
test
pop
inc
sahf
or
into
scas
into
mov
add
data16
inc
je
inc
adc
stos
fistps
pop
lret
cli
or
cs
or
sub
xchg
shlb
push
fisubl
addr16
add
shlb
dec
push
sub
fnsave
pop
ljmp
sub
cmpsl
cmp
mov
pop
lret
adc
xchg
leave
mov
cmpsl
and
call
sub
jl
imul
stos
push
xor
cltd
fildl
jp
jmp
lret
insl
fistps
test
inc
or
add
or
cmp
js
mov
pop
jl
fsts
je
mov
outsb
xorb
mov
xlat
xchg
arpl
mov
mov
pop
mov
xchg
sbb
add
and
mov
daa
inc
push
int
in
mov
mov
inc
out
repz
lods
dec
mov
mov
fs
jns
push
sahf
out
lret
outsl
adc
int
mov
loope
and
out
mov
lcall
mov
icebp
out
fidivs
mov
xchg
add
pushf
test
cltd
mov
and
ja
test
cmpsl
daa
push
xor
ss
xor
push
test
clc
jecxz
add
mov
add
pop
imul
ds
add
sahf
movsb
jnp
adc
std
cld
pop
cltd
sbb
mov
sti
sub
jl
add
mov
ret
aaa
cmp
sub
inc
test
cmp
lcall
aas
xor
xchg
add
mov
or
jo
addb
xchg
pop
mov
pop
push
sahf
mov
test
andb
testb
sar
adc
lret
test
mov
aaa
mov
mov
js
setns
dec
mov
addl
add
lds
pusha
inc
mov
or
mov
popf
sub
out
push
add
dec
add
outsb
push
mov
mov
xchg
outsb
lds
cwtl
xchg
and
scas
test
es
and
xchg
mov
cltd
dec
js
incb
cmp
das
loope
cmpb
dec
mov
ret
pop
pop
in
cmp
imulw
stos
test
daa
ja
enter
dec
inc
ror
ja
push
dec
jmp
add
out
mov
jl
imull
std
lock
dec
inc
dec
imul
jne
push
sub
lret
cmp
es
sub
scas
lahf
push
stc
pop
test
jae
xchg
xchg
mov
jmp
clc
cli
push
xor
pushf
xchg
sarl
sbbl
mov
out
dec
sub
movsl
scas
in
inc
inc
imul
ljmp
ret
cmp
jne
test
es
adc
mov
xchg
gs
lods
cli
fdiv
or
sbb
push
cmc
xchg
xor
enter
fstpt
pop
mov
std
orl
in
xor
cli
pop
push
xchg
pop
lret
je
mov
iret
mov
test
jmp
add
test
xchg
mov
or
and
mov
inc
lret
daa
sub
cli
stos
adc
js
push
jnp
pop
test
outsl
inc
js
xor
nop
fs
pop
adc
pushf
mov
andl
cmpb
add
xorb
jne
and
in
jns
push
add
mov
xchg
dec
rclb
call
fsubrl
cs
jmp
push
je
fwait
sbbl
push
subl
fmuls
inc
ss
lods
fs
cmp
adc
ldmxcsr
cwtl
cmpsb
aaa
jmp
cmpsb
popf
loop
aad
scas
and
mov
push
data16
push
xor
dec
movsb
mov
sti
cmp
fstp
cmp
cmp
push
aas
ljmp
pop
iret
cmp
mov
fldt
daa
aas
mov
in
mov
fcoml
push
mov
and
adc
xchg
add
cmp
jl
daa
sub
push
xor
xor
mov
repnz
lds
push
mov
aam
inc
sbb
jnp
and
mov
lahf
popf
sbb
inc
sbb
push
cmp
gs
out
sbb
call
fucom
xchg
sub
mov
ljmp
sub
xlat
add
mov
loope
cmp
jb
mov
aas
mov
outsb
fcmove
and
sub
mov
lock
dec
fbstp
ret
adc
dec
xchg
adc
ds
pusha
int3
decb
lock
in
adc
adc
cmp
pusha
ret
dec
scas
lds
arpl
pop
pop
pop
sub
insb
imul
dec
xchg
cmp
adc
ret
xchg
test
jb
test
jl
or
add
outsb
sti
push
dec
fcom
shlb
popa
pop
mov
dec
leave
out
jo
ror
mulb
push
ss
icebp
dec
pop
mov
ds
jo
pop
xchg
scas
call
xchg
scas
aaa
dec
pop
sbbl
add
push
enter
jge
pop
test
sti
sub
gs
xchg
in
mov
scas
sub
lds
sahf
int3
add
xchg
jb
jmp
xor
rcl
mov
fistps
xchg
scas
jnp
add
mov
in
adcl
insl
mov
inc
mov
fmull
adc
fdivrl
aam
iret
cmpb
sbb
mov
cltd
adc
cmp
pop
enter
push
and
xor
out
pop
insl
pop
in
cmp
sub
in
test
mov
inc
mov
aaa
jecxz
pushf
decb
xchg
jne
push
out
push
pop
out
in
cmp
shrl
sbb
fildll
sbb
sub
xchg
lret
imul
sub
or
mov
aam
imul
dec
dec
test
shr
jl
mov
sahf
lock
js
or
addl
and
mov
call
jecxz
dec
andl
cmpsb
test
adc
dec
xor
fwait
mov
scas
add
scas
push
ret
lret
shl
cmpsl
test
enter
sub
pop
pop
mov
pop
cld
dec
xor
jmp
xlat
mov
xchg
or
popa
push
jge
xor
std
mov
inc
mov
xchg
sub
in
ja
aas
or
jno
gs
fsubrl
cli
jns
jmp
dec
idiv
stc
repnz
push
roll
stos
mov
mov
popa
xchg
jmp
xor
fidivrl
inc
inc
mov
jg
ret
mov
into
adc
ret
ss
es
push
cmp
pop
pushf
jae
jbe
sub
fs
in
pop
insb
dec
jle
sbb
dec
gs
mov
adc
lret
jle
pop
or
popf
adc
mov
jb
rorb
or
pop
scas
dec
add
in
stos
addr16
mov
mov
jae
pop
lret
adc
sbb
cmp
les
repz
mov
push
jns
inc
dec
adc
xchg
add
jne
push
cwtl
lea
sub
cmpsl
inc
add
jnp
xchg
pop
sbb
dec
inc
lods
mov
mov
insl
cltd
pop
pop
sub
stc
mov
mov
dec
sub
imull
test
pop
das
pop
fiaddl
icebp
push
and
xchg
out
or
into
roll
mov
sbb
les
mov
cmp
inc
inc
call
pop
movsl
jle
fs
jge
or
repz
xchg
das
aam
nop
cmp
pop
and
das
sub
movsl
enter
inc
dec
jl
mov
aaa
cmp
bound
push
fistpll
mov
inc
jo
bound
pop
mov
xchg
in
inc
imul
cmp
push
hlt
bound
mov
loopne
imul
adc
outsb
pop
aaa
xor
js
push
xlat
lods
movsb
mov
and
shrl
mov
test
jge
pop
and
add
or
insb
imul
cmpsb
ss
lcall
aad
addr16
fdivs
popa
mov
into
sub
xchg
subl
dec
out
rorl
xchg
cmp
mov
stc
xchg
sub
pop
or
stos
push
call
mov
daa
das
pop
addr16
repz
xchg
mov
push
mov
aam
push
mov
std
cmpsl
inc
rclb
add
adc
mov
push
mov
aad
mov
push
test
and
fst
rcll
fadds
lret
jnp
inc
jns
enter
test
mov
add
mov
xchg
sub
sti
sbb
lods
inc
and
push
pop
mov
or
lcall
rorb
data16
mov
ja
mov
dec
popf
sub
aaa
test
jns
push
inc
xchg
push
jmp
jecxz
push
nop
and
aam
insl
scas
mov
add
jg
add
mov
test
adc
jg
pop
rorb
sbb
mov
daa
push
adc
xlat
mov
cs
lods
pop
push
imul
in
mov
testl
jle
add
addr16
cld
push
sbb
shll
or
movsl
adc
cli
ss
mov
jg
dec
enter
mov
ja
cmpsb
pop
int3
mov
dec
les
sbb
mov
imul
xor
cltd
les
fsts
jo
repz
sbbl
stos
mov
adc
int3
inc
xchg
xchg
lahf
repnz
pop
cmpsb
jl
sub
hlt
jne
hlt
mov
mov
int3
mov
xor
insl
test
inc
push
cld
xor
gs
stos
and
add
out
test
les
jmp
jge
adc
jo
mov
lds
or
shlb
mov
adc
leave
dec
jno
push
sub
push
out
orb
sbb
pop
xchg
in
mov
sbb
shrb
mov
push
dec
xchg
lcall
jge
aaa
cmp
sbb
fs
out
das
dec
xor
in
addl
sbb
shlb
shll
push
push
push
int3
into
test
xor
mov
push
je
clc
js
mov
loop
insb
xchg
add
push
push
mov
add
ja
movsb
in
cs
jg
jo
cmp
pop
cld
adc
adc
fstpl
ficoml
dec
fs
xor
out
orl
jge
int
loopne
jnp
andb
or
fistps
mov
mov
sub
dec
jmp
dec
jmp
xor
pop
mov
jae
lock
std
addr16
dec
imul
nop
jle
inc
xchg
inc
lods
mov
jge
xor
lret
ss
repnz
pushf
mov
add
sub
or
addb
lret
dec
xorl
out
xor
pusha
insb
add
pop
popa
int3
lcall
add
jecxz
push
xchg
jne
mov
push
mov
jns
and
imul
test
mov
pop
es
fcomps
push
daa
int
sbb
xchg
nop
add
mov
mov
lret
push
rorl
pmaddwd
fdivs
pop
lea
xor
daa
int3
xchg
mov
sub
and
je
stos
pop
mov
mov
pop
repnz
hlt
jno
xchg
das
test
push
fldl
lret
mov
outsb
test
xor
sub
js
imul
mov
sahf
cmp
dec
mov
pop
mov
popf
pusha
enter
and
sbb
cmp
scas
xchg
fs
inc
fisttps
scas
and
loope
pushf
mov
jo
mov
mov
and
aaa
jae
fwait
rcr
daa
adc
fldl
cmp
mov
lahf
xorb
adc
push
pop
rolb
push
and
jmp
movsb
into
and
push
jmp
nop
lock
orb
or
aas
in
cmp
inc
js
xchg
incb
push
iret
xchg
cltd
sbb
jle
lahf
cs
pop
cs
loopne
mov
lds
adcl
test
aad
mov
xchg
adc
icebp
cli
and
xor
add
push
dec
stos
push
scas
outsb
test
dec
data16
das
mov
jle
push
bound
sbb
mov
xchg
sub
mov
notl
mov
sub
icebp
jne
cmc
test
int
loope
dec
pop
mov
pop
sahf
out
stos
xorl
jmp
dec
jmp
call
fnstsw
xor
mov
fdivrp
outsl
lret
xchg
into
shll
out
push
xor
and
jo
rcr
xchg
and
in
pop
les
inc
in
adc
mov
pop
nop
pxor
decl
lock
dec
imulb
in
add
paddw
cmc
jg
lahf
mov
push
cs
push
popl
mov
push
test
lahf
adc
das
xchg
jg
lret
and
push
adc
subb
adc
adc
mov
std
mov
addr16
bound
xchg
mov
xchg
cli
mov
xor
fdivrs
aad
pop
cwtl
movsb
push
test
iret
in
inc
jbe
cmpsl
lea
ror
adc
fcoml
or
mov
daa
sub
notl
mov
fidivl
jae
adcl
xchg
icebp
out
add
xchg
xor
mov
jge
scas
in
or
jmp
test
icebp
cmp
adc
lock
mov
push
dec
add
icebp
stos
ret
nop
push
jp
mov
cmc
mov
leave
fsubp
xor
cltd
std
mov
fistl
xchg
fdivrs
cld
in
adc
mov
ljmp
pop
jnp
mov
out
fistl
cmp
repz
lds
xor
in
gs
popa
and
stos
insb
ret
ss
insl
test
adc
xchg
les
jno
es
add
pop
nop
mov
mov
and
push
add
xlat
push
xchg
sub
sub
movsl
sub
adcb
call
xchg
cs
or
or
je
mov
xor
push
or
jg
mov
xor
mov
test
stos
add
aas
movsl
mov
inc
jb
pop
or
mov
loope
sbb
xchg
jmp
arpl
dec
stc
fcmovnb
cmp
sub
xchg
fcomps
and
insb
jae
cmp
mov
lods
dec
cld
ret
sti
in
fs
sbb
hlt
xor
add
fildll
lahf
mov
ret
movsb
incb
mov
arpl
in
dec
dec
push
out
jecxz
popa
inc
int3
cmc
shlb
mov
push
aaa
jbe
test
aas
push
repnz
xor
mov
fwait
add
xor
add
subl
mov
add
sub
sbb
push
mov
mov
mov
orl
mov
xchg
rcll
das
scas
sbb
js
icebp
pop
push
inc
shrl
gs
lret
cmp
xchg
lods
dec
mov
scas
in
mov
enter
push
fadds
mov
push
or
out
xchg
insb
mov
jmp
cmp
in
mov
inc
stc
push
ret
js
mov
add
sarl
sahf
mov
imul
bound
mov
outsl
pop
popf
ss
push
fcomps
test
lahf
in
mov
mov
ja
aaa
cmc
lods
imul
shlb
rorw
std
lahf
repz
cmc
pop
imul
dec
cli
dec
add
mov
cmp
xchg
and
and
imul
pop
and
xchg
jg
sub
add
mov
sbb
jmp
xchg
pop
mov
sbb
icebp
sbb
and
cmp
jno
jne
scas
andb
ret
daa
mov
sahf
cmpsl
cli
adc
jl
pop
mov
pop
mov
andl
mov
arpl
push
test
mov
inc
movsb
pop
add
mov
out
mov
mov
jno
es
lods
lea
sbb
ret
add
inc
mov
pop
jp
mov
out
mov
jmp
mov
mov
dec
ss
pop
mov
leave
inc
cli
mov
mov
daa
mov
lret
pop
bound
mov
mov
mov
pop
in
pop
lahf
fwait
dec
ljmp
pop
or
fst
cmp
shrb
jge
ds
into
insl
sub
add
dec
mov
jg
js
repnz
sbb
psubd
sbb
inc
mov
sub
cmp
adc
movsl
loopne
ss
inc
popf
imul
es
dec
cli
test
inc
jge
cmp
adc
shl
popa
aas
nop
push
push
xor
cmp
call
data16
fistpl
mov
das
pop
sbb
out
les
imul
and
ss
dec
mov
fcmovnbe
imul
or
xlat
jb,pn
outsb
mov
inc
fsubrl
mov
jo
cmp
adc
cmp
push
xor
and
mov
fcmovnb
xchg
enter
add
pop
ficoms
jno
cmp
stos
cmp
add
jl
js
push
mov
std
add
lcall
adc
push
gs
lahf
adc
cmp
orl
ja
or
in
dec
shll
mov
dec
sub
fwait
out
jo
mov
xchg
push
leave
cmc
mov
lahf
sbb
icebp
add
mov
out
adc
sbb
subl
mov
in
loope
mov
cmp
cmp
in
bound
std
mov
jno
jno
xchg
lea
and
push
add
fsubr
add
ret
xchg
sarb
mov
aam
adc
xchg
push
push
aas
aas
jbe
movsb
add
xchg
push
mov
lods
sub
xchg
push
and
call
mov
inc
jnp
dec
cmp
jg
mov
cmp
inc
and
aam
jnp
jae
jg
repnz
or
aam
jmp
sbb
mov
mov
xorl
fdiv
lret
and
mov
mov
sub
test
jp
push
xchg
pop
test
insb
out
dec
mov
fildl
cltd
pop
xchg
mov
inc
loope
inc
dec
lods
push
jg
dec
scas
xchg
sti
jp
push
mov
jmp
daa
scas
mov
andb
subb
mov
jnp
nop
js
jl
aad
add
push
push
ja
sub
pop
ss
sbb
loop
incb
push
xrelease
cmp
and
pop
xor
add
cld
std
enter
add
pop
call
jne
or
xor
dec
out
xchg
pop
add
clc
jo
cmpsb
xor
add
xor
mov
xor
data16
in
sbb
mov
pop
gs
cmp
hlt
cmpsl
xchg
pusha
mov
ror
xchg
add
aaa
xorl
sbb
pop
mov
push
nop
sbb
mov
mov
mov
pop
cmp
sbb
fwait
jp
out
imul
adc
pop
push
mov
push
pop
jmp
mov
mov
and
dec
adc
pop
push
cltd
mov
mov
fsubl
or
add
sarb
insl
sub
mov
sub
inc
push
mov
sub
inc
sub
repnz
fstpt
out
push
fcmovnbe
inc
sub
xor
push
mov
jge
xlat
inc
popa
imul
and
dec
data16
ja
and
fisttps
mov
loopne
mov
rol
xchg
stos
lcall
fcoms
mov
add
inc
repnz
add
aas
sbb
pop
notl
insl
mov
aad
fstpl
jle
push
push
sbb
and
mov
call
mov
jae
push
ret
les
mov
jl
out
arpl
das
adc
mov
sbb
add
in
mov
scas
jb
decl
movsl
scas
out
movsl
repz
xchg
add
popa
xor
nop
shlb
mov
and
out
inc
pop
subb
or
add
sbb
imul
inc
test
xchg
cltd
xchg
idiv
out
fld
sub
cmp
or
sbb
imul
inc
test
xchg
cltd
xchg
idiv
out
fld
sub
cmp
imul
inc
test
xchg
cltd
xchg
idiv
out
fadd
sub
cmp
or
sbb
imul
inc
test
xchg
cltd
icebp
sahf
jle
sbb
sub
cmp
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmc
cmp
sub
sbb
or
xor
dec
cmp
mov
ss
es
lret
xchg
cmp
sub
jp
push
pop
xchg
jbe
data16
aaa
fwait
inc
mov
es
adc
inc
sbb
or
pop
xchg
mov
and
pop
mov
pop
mov
dec
scas
outsl
mov
cmpsb
test
dec
xor
push
push
or
lret
shll
lahf
adc
sbb
push
jo
xchg
rorb
rolb
mov
mov
stc
fwait
or
mov
int
aaa
out
sahf
xorl
jne
add
cmp
sub
sub
cmpsb
push
push
xchg
rcrb
leave
ljmp
or
jmp
mul
pop
pop
dec
icebp
test
inc
in
push
add
out
mov
sub
arpl
xlat
movsb
cmp
dec
xor
mov
inc
mov
mov
mov
fiaddl
sub
sbb
or
fisubrs
pop
and
mov
jbe
jle
sub
and
push
mov
pop
mov
push
loop
xchg
jbe
xor
cli
inc
mov
jg
arpl
movsb
push
cmpsl
imul
or
xor
push
std
fmuls
dec
jl
mov
mov
jg
jb
dec
cmpsb
push
pop
xchg
mov
inc
mov
cli
es
out
sbb
or
pop
xchg
mov
inc
mov
cli
es
inc
add
dec
jmp
pop
stos
xchg
mov
call
ret
popa
mov
and
test
gs
test
test
push
add
inc
fwait
mov
ljmp
xchg
js
cmp
enter
sar
jmp
xor
ljmp
mov
mov
in
in
test
test
hlt
scas
daa
lret
cmpsb
sbb
mov
xchg
add
inc
fstpt
arpl
sarl
pop
push
repz
inc
fdivl
std
iret
arpl
fdivrp
test
fimuls
and
mov
jb
mov
or
cmc
aam
inc
dec
cld
dec
mov
test
dec
cmp
add
jl
sub
sbb
out
clc
rcrl
sub
enter
push
sub
leave
gs
xchg
outsb
fnstenv
int3
sbb
push
sub
inc
arpl
sahf
dec
mov
adcb
add
call
insl
mov
or
jle
ret
insb
adc
jg
stos
loope
movl
mov
data16
lods
pushf
lds
insb
outsl
outsb
enter
repnz
or
push
adc
add
fs
xchg
pop
mov
in
dec
ljmp
std
sti
test
repz
shl
mov
das
dec
dec
mov
bound
sub
stos
sub
sbb
bound
xchg
or
loop
cmp
xchg
movsb
pop
pop
or
mov
sub
xchg
dec
mov
test
into
push
fidivrs
test
sahf
or
sbb
addb
hlt
pop
add
pusha
scas
std
dec
push
add
jne
sub
cli
dec
push
pop
sbb
fisttpll
enter
in
sub
jp
out
mov
ffreep
loop
call
mov
es
add
xchg
cmp
add
inc
imul
cwtl
sbb
add
movsb
xor
fiaddl
ret
repz
xchg
ret
push
jne
xor
aas
adc
je
and
es
push
lahf
xchg
les
lret
add
mov
fstpl
inc
and
into
push
mov
jne
loope
ja
or
nop
loop
aam
push
stos
xchg
testl
iret
and
test
nop
xor
adc
or
push
pusha
jnp
jecxz
insl
jl
test
mov
push
hlt
pop
or
jp
stos
iret
mov
push
cmp
int
jb
mov
lret
push
or
lea
cmp
inc
shlb
cmp
fiadds
sbb
out
out
mov
push
xor
mov
sbb
adc
mov
in
sub
bswap
sub
and
jle
sub
mov
cmpsl
sub
jle
pop
sti
imul
loopne
roll
mov
sbb
xchg
push
add
loop
cwtl
sub
test
jae
jbe
ss
int
jg
pushf
in
pop
in
hlt
xchg
and
out
pop
clc
sbb
repnz
push
mov
xchg
insl
xchg
mov
clc
ja
pop
mov
add
xchg
dec
movsb
pop
lea
push
movb
in
je
sbb
test
insb
and
in
sbb
lret
std
sub
xchg
pop
or
or
cmp
mov
mov
stos
push
bound
aas
sti
sti
xchg
jo
jle
lods
aas
scas
mov
aas
iret
cmpsb
xlat
dec
mov
add
push
push
adc
out
xchg
movsb
add
jne
les
int3
mov
and
push
test
scas
dec
inc
es
jp
pop
adc
int3
outsl
out
scas
aaa
lock
clc
mov
mov
repz
stos
mov
push
mov
test
or
jnp
pusha
mov
mov
aam
lcall
sbb
nop
mov
out
sbb
ja
rclb
sarb
lahf
xlat
bnd
xchg
mov
sti
dec
jo
shll
push
mov
cmp
jne
iret
cmpsb
mov
push
mov
movsb
movsb
iret
test
sub
popa
fcmovbe
nop
in
lcall
pop
call
imull
sbb
xchg
test
ret
js
int
std
cli
pop
mov
sub
addr16
sarl
inc
jno
lahf
loope
les
mov
xlat
pop
and
int3
loopne
dec
insb
fldt
xor
test
orb
testb
jnp
cmp
or
fidivs
scas
leave
inc
jnp
xor
and
std
aam
push
push
lcall
mov
xchg
cmpsb
sub
sbb
fs
sbb
out
adc
inc
lods
pop
jecxz
insl
sbb
xorl
mov
mov
adc
pop
sbb
push
sbb
insl
js
lods
xchg
pop
fs
dec
mov
mov
mov
sub
mov
insb
xor
push
xchg
jo
mov
in
or
jg
enter
lods
repz
pushf
or
sbb
push
loope
sbb
jmp
popf
test
insb
nop
je
pop
cmp
dec
jne
leave
testb
adc
sub
adc
mov
test
pushf
out
sbb
fbld
cmpsb
lea
adc
imul
clc
or
or
int
and
mov
les
sti
mov
scas
mov
adc
mov
adc
jge
add
mov
push
adc
add
xchg
movl
push
std
inc
adc
mov
xlat
dec
dec
mov
mov
enter
imul
pop
or
dec
repnz
pop
iret
mov
xchg
cmpsl
mov
adc
push
in
jno
shl
adc
xchg
pop
in
cmp
js
es
lret
xor
sub
or
bound
pop
mov
andb
adc
cld
outsl
loope
jne
fwait
cld
roll
rcrb
imul
pop
push
add
adcl
js
jge
xchg
ror
dec
xchg
cmp
inc
lea
mov
add
cmp
jg
push
shlb
jne
or
out
iret
sbb
scas
test
jecxz
and
xor
aad
sub
test
sahf
loopne
ret
push
jmp
into
imul
loope
dec
inc
and
xor
jb
push
add
jb
mov
cmp
sub
cmp
lahf
cmp
mov
stos
stc
ficomps
mov
jmp
push
xor
pop
mov
test
es
xchg
mov
sub
in
push
mov
int3
dec
pusha
and
icebp
xlat
mov
cmp
aas
fcompl
out
mov
inc
jmp
pop
in
int
js
lret
je
roll
ret
test
sbb
nop
cltd
dec
aas
jmp
and
out
adc
or
pop
ja
add
stos
mov
mov
mov
adc
mov
push
xor
adc
push
sub
ljmp
cmpsb
mov
stos
fildl
xchg
cmpsl
not
rorb
jns
scas
xchg
rcll
xchg
xchg
hlt
fs
fwait
cli
jo
dec
in
fildl
out
std
sbb
jno
lret
mov
or
insb
inc
sub
dec
int3
insl
push
rcr
insb
jne
xor
fcmovbe
and
lods
cmp
out
mov
fst
repz
inc
shrl
fbstp
insl
jecxz
pop
test
cltd
dec
cmp
mov
xchg
jae
xchg
inc
lds
jl
pop
sbb
jmp
push
inc
jae
dec
jno
mov
and
cld
jecxz
test
jle
ret
cmp
pop
push
mov
adc
or
mov
mov
pushf
add
rcll
xchg
cmp
jmp
fnstcw
stc
pushf
xor
jb
loopne
aas
pusha
bswap
aad
or
popl
stc
add
xchg
into
fwait
sarb
stos
pop
push
push
lret
imul
in
dec
dec
adc
jb
adc
pop
es
inc
fnstsw
and
ss
repnz
mov
mov
xchg
pop
adc
jo
push
mov
adc
shrl
cltd
adc
mov
cli
cmp
pop
orl
push
cmp
rorb
cmp
add
movsl
mov
mov
in
mov
dec
adc
push
adc
jmp
pop
xor
stos
and
shl
jnp
pop
xor
sti
scas
rolb
lods
bound
outsl
jnp
movsl
mov
push
xchg
pop
pop
pop
sti
scas
mov
sti
adc
outsl
jb
lods
dec
push
in
test
sub
push
mov
cmp
stos
xchg
push
insl
cmpsl
sbb
or
inc
fmul
negl
mov
push
je
stos
jne
jnp
inc
xlat
mov
add
pop
movsb
jae
mov
fstl
jae
xor
and
or
xor
je
scas
xor
outsl
xor
inc
xor
add
xor
xchg
push
jg
xchg
ret
ret
or
mov
sub
jo
in
sarl
jmp
or
or
sbb
js
lcall
xchg
lock
imul
xlat
lds
into
stos
loopne
in
adc
push
out
cld
mov
fistpl
cltd
aam
and
mov
pop
loop
into
jl
jge
insl
xchg
xchg
mov
sub
outsb
leave
gs
add
inc
dec
mov
push
adc
sbb
jle
orw
or
popf
cmp
add
adc
sub
shll
xor
mov
push
cmp
dec
mov
xlat
sarb
bound
cmp
repz
mov
mov
stc
jo
stos
mov
inc
sub
and
cmp
test
jo
adc
js
lods
ret
adc
xor
gs
fstpl
push
lods
bnd
ficomps
add
testb
pop
xor
inc
cs
aaa
lea
ja
cs
insl
mov
imul
xchg
lret
mov
outsl
fcmovne
or
stc
lahf
xor
jns
push
xor
sbb
andl
jecxz
sub
fimuls
jae
xchg
clc
jp
sbb
inc
inc
dec
push
scas
add
stos
dec
xchg
adc
cmp
pop
jns
outsl
les
cli
add
insb
dec
iret
int
mov
mov
sbb
pop
es
mov
clc
adc
js
movsb
and
jmp
xchg
push
dec
xchg
fisubl
push
test
fcompl
daa
shlb
rep
loopne
sub
outsb
mov
xor
ja
xlat
ds
and
leave
add
adc
xor
cmp
push
ret
in
add
out
mov
dec
sub
jb
mov
stos
mov
leave
sahf
jo
push
adc
mov
int
sarl
loop
out
jle
aad
es
cmp
bound
pop
shl
sub
cmp
cmp
jp
lahf
sub
xor
fdivrs
jg
and
mov
add
pop
cmp
das
fidivrs
pop
push
dec
xchg
jnp
and
popa
rolb
call
fucom
pop
jmp
leave
xor
fstps
mov
xor
insl
test
mov
or
push
fisubrl
cwtl
lret
es
xchg
or
ret
and
mov
in
aas
gs
cltd
push
or
ja
lods
out
lock
dec
mov
hlt
cmc
push
sbb
dec
pop
fld
jp
xchg
std
shll
ret
mov
outsb
pop
mov
push
jge
push
pop
fbld
jnp
xchg
xor
mov
jge
push
cmc
and
xor
sahf
jecxz
cltd
sbb
xchg
sub
cmp
mov
jge
aas
cli
ljmp
jbe
push
aaa
in
ja
or
pop
ljmp
nop
incb
pop
mov
leave
testb
or
or
mov
mov
pop
add
sub
lds
jge
adc
lea
in
movsb
inc
inc
nop
shlb
push
xchg
jg
mov
xchg
das
aam
mov
and
leave
fisttpll
mov
sub
dec
add
xor
sbb
lock
out
cmp
jmp
out
jg
jecxz
mov
jecxz
test
dec
insl
mull
xchg
xchg
xchg
mov
adc
mov
sqrtps
stos
imulb
inc
xor
add
cmpsb
lock
cmpsb
jbe
lcall
arpl
adc
adc
rolb
rorl
lret
fldt
int
aas
push
ret
jnp
add
rolb
add
xor
xor
jg
sbb
sbb
mul
adc
dec
movsl
sub
jb
pop
sbb
pop
das
loop
rcrl
sub
dec
xchg
shll
adc
sbb
sbb
mov
inc
cli
lea
jl
mov
les
mov
xchg
int
rcl
cmp
mov
sarl
lods
fiadds
in
inc
je
pop
jne
insb
addr16
aad
ret
mov
decl
test
enter
jle
add
dec
ret
test
xor
movsb
cmp
push
and
jb
adc
jle
pop
mov
pop
cwtl
fisubrs
mov
ss
mov
mov
or
xor
mov
cwtl
and
xchg
xor
sbb
push
add
gs
ret
fcomps
pop
mov
cmp
xchg
jl
inc
mov
cmp
jg
sbb
sub
xchg
ficomps
jp
rorl
imul
and
mov
addr16
loope
test
stos
mov
xchg
xchg
lock
push
cld
sti
xchg
pop
jno
insb
std
mov
push
cmp
nop
ret
stos
rclb
lret
testl
jmp
xor
testl
cmp
push
or
mull
pusha
xchg
add
test
int3
pop
adc
adc
andb
mov
push
pushf
out
not
pop
loope
push
push
js
push
sub
pop
fwait
mov
dec
stc
pop
fs
test
fwait
xor
leave
lds
pop
ds
or
or
and
ficomps
aaa
das
sub
sbb
jge
mov
push
inc
lods
lds
mov
add
lahf
jns
cwtl
lcall
mov
pop
hlt
rcrb
jbe
fwait
into
or
push
sub
push
cmp
push
std
jecxz
xchg
imul
ja
mov
fldenv
or
imul
je
data16
loope
mov
in
jne
and
hlt
push
fistpll
outsb
mov
mov
inc
cmp
arpl
xchg
mov
inc
mov
sub
cmp
xchg
mov
push
out
popf
iret
js
repnz
fs
jl
xchg
aaa
sbb
je
leave
lahf
popf
cmpsb
mov
insb
repnz
mov
je
add
int
stc
mov
xchg
leave
dec
pop
xor
cltd
loop
cwtl
stc
xor
aad
or
scas
pusha
lahf
lret
or
scas
loop
pushf
jo
xchg
imul
jmp
loope
lret
pushf
scas
sbb
jae
roll
shl
popf
ja
scas
adc
xor
cs
outsl
aad
inc
adc
mov
fwait
mov
outsl
negl
jo
inc
mov
mov
xor
cld
fsub
xchg
inc
rclb
xor
jb
adc
add
scas
outsb
das
xor
pop
mov
jns
int
ret
push
pop
cltd
test
and
push
flds
jecxz
in
mov
pop
data16
jnp
fdivs
repz
push
or
out
push
jl
sbb
out
fcoml
or
sub
and
aas
xlat
dec
and
mov
pop
int
pop
rolb
pop
das
sub
into
in
test
xor
idiv
jae
or
mov
shrl
cmpsl
and
mov
out
or
les
adc
int
js
push
adc
inc
mov
rdpmc
je
fabs
sub
inc
fwait
inc
push
test
das
scas
adc
pop
insl
push
pop
cmp
outsl
sbb
or
mov
push
sahf
push
or
ret
adcb
jl
icebp
inc
dec
cmp
iret
pop
fs
cmp
cwtl
dec
test
divl
push
xor
sbb
jecxz
push
and
lahf
test
aas
push
mov
rorb
or
pusha
hlt
and
pop
lds
sub
ficomps
cmpl
int
cmp
add
jmp
div
outsb
hlt
mov
push
add
fcmove
jl
icebp
mov
adc
mov
xor
xor
push
andb
pop
out
imul
xlat
mov
jns
idivb
push
and
sub
out
jns
push
add
and
int3
push
stos
in
shl
jb
mov
pop
cs
test
icebp
fwait
or
push
dec
inc
inc
sub
sub
loope
mov
sub
ret
call
and
iret
iret
xor
add
mov
fisubrl
int3
mov
mov
cmp
or
das
mov
movsl
push
xchg
cli
push
imul
jne
test
sub
jl
xchg
mov
int
sub
mov
ss
pop
or
inc
mov
cs
push
scas
ja
add
add
cmp
and
dec
mov
test
fcmovnu
jg
sbb
cmp
cmpsl
jb
rol
sub
int
mov
iret
or
mov
lret
dec
mov
sbb
int3
cmpsl
xor
push
cmc
jo
cmp
sahf
shrb
ja
mov
shrl
sti
outsl
push
stc
jmp
jo
and
clc
sbb
imul
add
add
dec
lret
push
sbb
fwait
inc
fsincos
daa
mov
mov
sub
sbb
imul
cmp
ror
push
inc
push
mov
pop
sub
xorb
cli
xchg
imul
fdivrs
xchg
cs
sub
sbb
mov
into
clc
mov
push
out
xchg
adc
sub
leave
xor
movsl
pop
cli
daa
ja
in
lahf
add
adc
jb
cmp
xorb
and
cmc
adc
ret
decb
fmuls
cmp
pop
mov
jns
push
pop
lcall
jecxz
rcll
sbb
pushf
mov
dec
jbe
fldenv
stos
mov
movsb
lds
fsubl
incl
ret
sub
fwait
insb
mov
or
ret
mov
xor
ljmp
adc
adc
inc
das
ficomps
in
loop
gs
lret
jecxz
mov
xchg
cltd
or
push
jb
or
add
jl
xor
out
stos
shlb
in
ss
faddp
pop
cmp
scas
push
inc
inc
cmc
mov
dec
mov
mov
maskmovq
decl
lret
sahf
gs
sbbl
in
pop
mov
xchg
cld
jl
aas
mov
dec
aaa
add
lock
adc
rorb
mov
xchg
les
xor
cmp
xchg
mov
test
jne
cmp
mov
push
insl
ja
inc
mov
mov
push
and
xchg
rolb
mov
pushl
pop
xchg
jnp
mov
xchg
fwait
int
fsubs
jne
pop
xor
adc
jmp
dec
push
cs
add
jnp
or
lret
push
cmpsb
pusha
cmp
shll
or
repnz
pop
xchg
push
mov
sbb
test
iret
jl
xor
or
in
dec
js
lods
jno
cmp
dec
movsl
adc
into
mov
dec
mov
aas
xchg
int
jae
aas
bound
or
test
push
hlt
pop
mov
pusha
fdivs
test
mov
rcll
cltd
inc
push
jge
and
dec
dec
insb
fisubrl
lahf
test
push
dec
fistpl
sbb
sub
xchg
insl
or
ds
xchg
and
pop
frstor
sbb
xlat
adc
pop
cltd
fnstsw
fs
and
out
fnsave
adc
stos
xchg
fnop
mov
sub
mov
aas
stc
lcall
stos
cmc
sbb
mov
dec
movsl
mov
cmpsl
and
dec
mov
mov
pop
pop
mov
or
mov
movsl
xchg
and
pop
stos
jbe
xchg
mov
and
xlat
push
push
ds
xor
nop
cwtl
dec
clc
popf
fimull
repz
mov
loope
pop
mov
mov
xchg
lret
sar
scas
pop
mov
clc
jb
mov
jno
or
adc
xchg
jne
cli
cltd
in
xor
test
das
push
and
pusha
aas
arpl
in
fwait
jbe
or
cwtl
push
sbb
inc
incb
int3
jecxz
inc
fs
sti
clc
sub
outsl
popf
insb
in
icebp
test
cmp
inc
dec
jns
test
popa
sbb
ds
pusha
inc
push
push
cli
mov
std
stc
mov
cmc
pop
xlat
popf
xlat
dec
jp
add
xchg
sbb
or
pop
xchg
mov
inc
mov
cli
es
out
sbb
or
pop
xchg
mov
inc
mov
cli
es
sub
jp
push
pop
inc
dec
jbe
data16
cmpsb
lcall
push
lret
mov
or
pop
push
mov
cltd
add
lcall
jmp
mov
decb
pop
sub
jle
push
jnp
in
pop
ds
into
mov
decb
scas
fstpt
sub
jle
push
or
imul
mov
xchg
mov
sahf
repz
ret
mov
or
bound
jle
xor
pop
insl
sub
mov
xchg
in
xorl
xor
fs
jns
addl
xor
mov
add
mov
push
xor
rcl
nop
dec
xor
js
outsl
mov
daa
mov
test
dec
shlb
lock
jle
sti
hlt
pmaxub
push
into
in
push
sub
sti
popa
sti
imull
rcl
in
xchg
push
out
movsb
mov
popf
ds
push
imul
cmp
mov
jecxz
cmc
mov
jns
jnp
or
into
repnz
es
arpl
add
fisubrl
inc
sahf
in
hlt
ljmp
dec
or
cmp
mov
sahf
jmp
fstpt
xor
jle
push
arpl
jae
inc
ds
stos
mov
mov
mov
mov
scas
ds
cmp
sbb
push
pop
imul
stos
ret
mov
movsl
jmp
sti
stc
cmp
cmp
jle
or
or
inc
cmp
aas
test
lcall
jmp
fstpt
sub
jle
push
jnp
imul
ds
into
mov
decb
scas
fstpt
sub
jle
push
jnp
imul
ds
into
mov
orl
std
mov
adc
das
test
push
cli
fsubrs
cmpsl
adc
inc
sbb
lcall
js
xchg
pop
test
sti
xchg
dec
mov
push
xchg
into
insb
push
mov
push
psllq
push
fildll
cld
dec
jnp
roll
rclb
pushf
in
pop
xor
cmpsl
push
les
xchg
sbb
je
ss
fldz
cmpsl
loope
stc
jg
sub
or
xor
mov
push
mov
jecxz
jmp
fmuls
mov
loopne
je
adc
adc
fsubs
insl
fcmovu
cmp
inc
pop
stos
mov
pop
xchg
inc
mov
fildll
shll
mov
roll
mov
ret
aas
push
sub
lret
dec
lock
mov
jle
sti
popf
loop
ds
test
xor
sub
push
jo
lods
fnstsw
filds
cmp
arpl
dec
pop
pop
and
jnp
mov
jecxz
cli
cwtl
aas
into
cmpb
sbb
fldenv
hlt
shl
fs
sti
mov
mov
insb
jne
addr16
cli
inc
push
xchg
pop
cmp
pop
xchg
inc
fstl
pop
cmpsl
lcall
fcoml
push
jb
push
fs
sbbl
out
mov
arpl
and
add
or
and
push
shrl
ja
lods
ss
xchg
sarb
push
int3
test
mov
in
adc
clc
stos
aaa
pop
xlat
lret
xor
pop
mov
pop
cmc
mov
push
xchg
dec
repnz
not
fcmovnu
sub
push
or
jns
mov
popf
les
jb
adc
cmpsl
rol
ljmp
outsl
xchg
mov
jl
sbb
std
or
addb
cwtl
push
repnz
cmp
pop
dec
mov
add
xchg
xor
shl
xchg
jmp
xchg
aad
pop
push
sbb
mov
jb
mov
loopne
cs
ret
in
mov
pop
stos
sbb
insl
cmp
pop
mov
sub
addr16
cmp
adc
icebp
int
mov
mov
push
addl
addb
pop
push
arpl
inc
movsl
add
push
out
xlat
enter
pop
scas
ja
div
lcall
sahf
xchg
dec
or
std
lock
pop
cwtl
mov
xchg
fistps
mov
dec
and
jbe,pt
cmpsb
push
std
push
neg
xchg
pop
cld
pop
pop
loop
sub
xchg
add
dec
lahf
add
cs
jo
call
out
push
sbb
pop
mov
and
ljmp
dec
outsl
daa
or
add
and
mov
orb
or
and
jae
cmpsb
in
lahf
arpl
lret
jnp
aas
cmp
cltd
mov
inc
and
mov
jbe
outsb
lea
sub
clc
mov
push
bound
cmpsb
push
sub
sub
inc
fs
ljmp
sbb
imul
sbbl
mov
stos
sar
cwtl
push
movsb
lods
jge
cli
in
mov
push
mov
enter
stc
out
test
ja
or
loope
sbb
loopne
scas
rcll
cmp
lahf
insl
mov
rcll
ss
jecxz
mov
dec
jle
lret
push
add
leave
inc
mov
enter
add
cmp
xor
and
jg
and
imul
scas
and
sahf
mov
dec
mov
adc
test
lock
sub
xor
adc
pop
lret
loop
ret
sbb
mov
push
cwtl
push
std
test
mov
xchg
out
and
pop
mov
xlat
cmp
xchg
mov
call
cld
mov
mov
insb
js
shrl
scas
pop
sbb
outsl
xor
dec
vaddps
jb
rorl
and
shll
fwait
mov
sub
test
lcall
icebp
imul
jmp
scas
cltd
sbbl
lahf
jns
orl
repnz
fs
lcall
and
xor
dec
out
sub
leave
cmp
insb
mov
jp
or
lret
shrl
repz
adc
jle
or
or
fs
loop
cmp
lock
lahf
dec
push
std
dec
ret
mov
inc
lcall
xlat
lods
popf
mov
sub
loope
std
mov
mov
cmpsl
jnp
cmpl
rorl
arpl
cld
xchg
outsl
lods
cmpsl
arpl
in
push
addl
lea
cmp
mov
ret
cmpsl
jo
rcr
dec
outsb
aas
insb
or
hlt
pop
and
shrl
lods
dec
stc
lret
pop
aad
fisttpl
push
and
mull
out
xchg
jge
or
sahf
out
push
jne
and
pop
frstor
dec
pop
pop
jg
js
or
mov
mov
clc
pop
stos
sub
into
arpl
adc
leave
fidivs
xor
mov
xor
mov
pushf
popa
xor
dec
sub
pop
adc
push
movsl
addr16
cmp
mov
adc
insl
es
push
push
mov
sbb
clc
cwtl
inc
xor
push
sbb
xlat
push
cmp
adc
lret
notl
dec
lahf
arpl
push
in
pop
lret
add
repnz
cmpsb
jns
dec
pop
les
ret
loopne
or
stc
inc
in
xchg
xor
outsb
cmp
popf
pop
pushl
inc
mov
xor
imul
inc
cmp
hlt
mov
jmp
cltd
sub
and
dec
mov
push
push
mov
adc
inc
pop
fs
gs
and
arpl
sbb
pop
mov
xchg
out
subb
or
sahf
ds
jns
jecxz
push
fidivrl
push
push
lret
jne
stos
repz
inc
dec
xchg
sar
dec
xor
jae
sub
out
inc
loopne
les
cmp
loope
ror
sahf
aad
dec
pop
mov
sahf
push
dec
call
add
arpl
xchg
cmc
mov
sub
mov
addl
add
or
hlt
test
mov
mov
xor
in
rcl
mov
jns
rolb
jg
xchg
cmpsb
push
push
inc
inc
and
sbb
xlat
push
lcall
aas
jmp
fwait
jno
loopne
loopne
ja
jb
stc
xchg
in
pushf
cmpsl
insb
pop
mov
jnp
jae
add
jnp
lds
jns
lds
xor
outsl
mov
sub
xor
push
jae
int
mov
or
cli
pop
ss
and
xchg
movsl
jno
outsl
mov
or
adc
mov
mov
pop
iret
jmp
in
iret
jno
pop
jp
ljmp
lret
jns
es
insl
mov
bound
lahf
aam
sub
xchg
sahf
push
sbb
add
fstps
lret
sbb
aas
push
fbstp
out
mov
inc
popa
or
jnp
mov
jae
pause
neg
outsl
ss
mov
in
rcrl
shrl
daa
enter
inc
jb
lea
lcall
outsl
adc
insl
pop
and
testb
pushf
or
ja
cmc
das
clc
cwtl
aas
int3
shrl
push
fidivrl
test
add
adc
pop
inc
add
or
sbb
pop
jns
inc
cld
gs
dec
daa
jle
jb
jae
jae
arpl
sahf
fstl
jecxz
jns
rcrl
jb
lret
std
add
mov
fs
jbe
clc
clc
mov
lods
xor
and
out
mov
test
cmp
sbb
push
aaa
ds
shl
in
scas
movsb
mov
pop
cmp
dec
clc
in
mov
int
lcall
sub
leave
inc
mov
inc
ljmp
and
mov
fwait
stos
mov
je
and
cmp
push
cmp
lock
pop
subl
mov
pop
stc
in
hlt
lock
mov
push
jo
and
mov
xlat
mov
pop
push
mov
xor
or
test
mov
fstpl
loope
cwtl
mov
and
cmc
pop
stos
movsb
adc
cli
cli
ljmp
cmpsl
cmc
inc
faddl
or
lods
movsb
lahf
fcmovnu
push
sbb
icebp
leave
insl
call
jne
pop
lods
fisttpl
jge
int
pop
js
pop
repnz
mov
ror
aad
dec
das
mov
xchg
loopne
bound
shl
pop
adc
enter
lahf
cld
push
cmp
loopne
push
std
in
mov
mov
sbb
xchg
loope
shrl
int3
jecxz
imul
jnp
jbe
mov
daa
xchg
push
mov
cli
stos
lret
xchg
pop
ds
aam
add
adc
push
sub
cmp
dec
sbb
lock
repnz
xchg
imul
shrb
pop
cmp
ret
pusha
pop
mov
adc
bound
jbe
jmp
push
outsl
pop
cmpsb
popa
jmp
or
ficompl
push
cmp
cwtl
rcrl
es
xor
pop
negb
andb
xchg
or
xchg
filds
jno
and
cmp
sub
aam
jnp
pop
lods
aas
ja
jg
mov
jl
mov
dec
lret
mov
inc
inc
icebp
and
imul
loopne
stos
mov
push
pop
bound
scas
or
mov
outsb
aam
adc
cs
out
sbb
push
sbb
mov
adc
jbe
add
jge
fsubl
cmp
sub
push
jg
cltd
pushf
frstor
adc
das
ret
adc
ss
hlt
sub
sub
xor
and
ljmp
shlb
inc
adc
das
adc
rolb
test
cmp
pop
jbe
stc
clc
fprem
pop
push
test
jbe
rorb
xchg
sbb
mov
mov
ret
scas
inc
mov
mov
add
or
shrb
shl
insb
mov
jle
adc
xchg
hlt
getsec
pop
pop
gs
sbb
jmp
outsl
fwait
stos
push
pop
and
sbb
popa
fdivrs
jne
xchg
mov
pminsw
clc
add
pop
les
and
inc
mov
int
pusha
jmp
push
das
lods
inc
add
mov
xor
adc
sbb
sti
push
jae
inc
test
pop
cmp
popf
arpl
enter
xor
lea
aam
inc
add
shl
and
andb
and
adc
test
pop
fistl
cs
int3
aad
fnstenv
iret
pop
inc
test
fs
es
xchg
push
jle
cwtl
ss
mov
jle
adc
or
mov
ficoms
or
test
sahf
add
in
xchg
cmpsl
pop
sub
in
push
leave
ret
dec
test
sahf
filds
orl
ja
sub
jnp
jg
gs
ja
jae
int
std
mov
fisttpl
jl
jmp
and
cmp
aad
mov
pop
shr
mov
pop
repz
xchg
mov
cmp
cmp
popf
fwait
add
pop
cltd
inc
or
cmp
mov
das
out
xchg
adc
xor
stos
dec
xchg
sbb
flds
div
pop
out
mov
inc
popf
lcall
mov
cmp
scas
aaa
pop
gs
mov
sahf
sub
lds
jo
and
xor
sbb
scas
lea
xor
mov
out
maskmovq
imull
out
gs
xchg
hlt
inc
sub
and
leave
popf
mov
push
stos
mov
xlat
jg
push
aaa
adc
inc
xchg
xchg
cs
push
mov
lcall
adc
mov
rcrl
aad
popf
push
mov
movsb
jge
cmp
mov
add
movsb
fildl
mov
sbb
scas
push
sub
pop
xor
test
loopne
rcll
jl
sarb
dec
aaa
adc
out
pop
inc
pop
fstps
mov
insl
pop
shl
mov
mov
les
adc
lock
arpl
ret
add
pop
or
xor
repz
sbb
add
popa
dec
adc
inc
pop
inc
imul
imul
jae
movsl
addl
adc
shlb
lods
loope
stos
inc
xor
inc
cli
sbb
arpl
out
mov
mov
cli
jl
lahf
mov
test
cmpsl
mov
lds
mov
shlb
adc
jbe
push
pop
outsl
repz
outsl
loopne
inc
sub
cltd
pop
add
xchg
mov
out
fsubrs
mov
insl
and
push
jmp
cs
mov
sbb
xor
jne
in
inc
rcr
mov
sti
or
mov
stos
gs
jl
repz
in
or
mov
es
das
mov
adc
in
xchg
sub
xchg
aam
mov
lea
xor
push
mov
test
push
xchg
push
imul
sbb
into
add
repnz
mov
xchg
test
call
pop
xchg
xchg
or
fprem1
sub
testb
arpl
test
or
in
xchg
les
add
and
jmp
mov
test
das
stos
mov
mov
or
jmp
mov
mov
lahf
out
cld
cmp
es
repz
or
xchg
mov
sub
sbb
xor
xchg
test
xor
adc
pop
outsb
popf
subb
fisubl
mov
dec
jo
xchg
or
lods
sbb
into
mov
lods
aam
movsl
rclb
add
shll
and
subb
jne
xchg
outsl
dec
cmp
cmpsl
push
icebp
xor
pushf
dec
imul
or
or
add
pop
repnz
and
adc
xchg
mov
push
jnp
mov
das
adc
movsb
inc
pushf
jmp
xor
cmp
inc
pop
ror
je
or
inc
dec
pop
jno
mov
ss
cltd
sahf
push
sbb
lods
jo
shll
inc
sbb
fisubs
xor
pop
push
in
icebp
add
int
cmp
xor
push
mov
xchg
pop
add
adc
mov
imul
xchg
fimull
mov
and
leave
mov
jbe
dec
in
lea
xchg
scas
ds
mov
xor
cld
mov
xor
xor
test
scas
sub
fwait
in
push
lods
mov
mov
jecxz
mov
repnz
add
fisttpl
and
fsubl
orl
cmpsb
inc
adc
xchg
sbb
xor
insb
cli
push
jmp
dec
jg
lret
inc
testl
and
int3
push
xor
xchg
mov
pop
sub
loope
shrb
enter
je
fld
stc
push
pop
inc
push
scas
push
imul
push
ljmp
xchg
pop
sbb
insl
sbb
test
push
int
sub
and
push
scas
insb
popf
jnp
out
sbb
push
jo
mov
xchg
repz
mov
dec
ljmp
cmp
sub
pop
xor
shll
stc
gs
in
std
cmp
and
out
mov
dec
xor
fs
xor
data16
mov
mov
cwtl
pop
xchg
jns
mov
and
add
cmpsb
dec
sub
loopne
pop
sbb
out
repnz
xor
mov
cs
out
sub
pushw
inc
fnstenv
in
scas
or
daa
sbb
shll
mov
or
stc
jb
movsl
or
rolb
push
ss
cmp
mov
dec
inc
push
mov
mov
aad
movsl
lds
fidivrl
mov
and
test
mov
int3
test
mov
in
xorb
dec
pop
jae
stos
js
jle
out
cs
pusha
and
sub
rcrl
das
add
sub
leave
mov
pop
jl
shll
jbe
pop
cmpsl
xor
push
loop
mov
or
idivb
fidivs
inc
xor
test
mov
jb
out
mov
push
jo
jno
or
clc
mov
mov
imul
loope
rcrb
repz
cmp
inc
arpl
shl
cmc
push
mov
mov
adc
push
mov
cmpb
xchg
jbe
je
mov
and
inc
push
jp
mov
insb
aad
lock
mov
mov
std
mov
xor
aas
movsb
add
push
cmp
out
inc
mov
add
jle
out
repz
xor
aas
sub
dec
out
mov
adc
or
test
xchg
cmp
in
mov
sub
push
sahf
movsb
out
xchg
xchg
xchg
cmp
pop
mul
xchg
stos
ds
mov
pop
sub
and
mov
push
and
and
scas
lods
or
mov
sbb
mov
sub
repz
es
dec
pushf
and
fadd
mov
and
int
pop
mov
pop
pop
mov
popa
mov
dec
cwtl
rorl
xchg
in
adcl
push
sub
push
inc
icebp
fldcw
xchg
mov
sahf
test
lret
add
out
or
shlb
push
int
sbb
ret
sub
adc
hlt
add
aaa
lock
dec
rcll
mov
sbb
hlt
rolb
fdivrp
inc
adc
cmpsb
test
cmp
sbb
out
xchg
pop
xor
pop
and
add
cli
and
in
shlb
pushf
je
iret
test
push
jbe
or
das
mov
sub
std
inc
sbb
jle
fwait
adc
loopne
sub
sti
push
jle
add
mov
add
cmp
push
jmp
adc
aad
ret
lcall
out
mov
inc
aas
in
inc
addb
cmp
data16
outsl
lods
cli
inc
xchg
cltd
mov
test
push
sarb
jbe
pop
out
push
mov
into
aaa
les
aaa
add
push
mov
cmp
nop
lcall
ds
xor
adc
sahf
inc
hlt
mov
cmp
mov
jge
decb
dec
std
or
adc
sub
push
mov
test
sbb
add
fldt
fimuls
sub
xor
cmc
lods
mov
popa
add
vphaddbd
daa
les
lods
mov
add
lock
push
cmpsl
push
pop
lods
repz
bound
mov
push
in
push
gs
orb
popf
push
push
and
pop
push
cwtl
test
jae
clc
push
sbb
push
jmp
mov
inc
pop
push
push
fldl
insb
movsl
addb
push
outsl
mov
mov
pop
fmuls
dec
add
mov
in
adc
les
add
inc
inc
ds
and
repnz
push
js
out
stos
sbb
push
cld
aad
test
lea
lock
xlat
xchg
push
push
scas
xchg
sub
dec
mov
lret
cmpsl
out
or
testb
lods
inc
bound
inc
or
jg
dec
ds
mov
out
test
or
bound
imul
xchg
out
arpl
xchg
stc
pop
add
out
and
jmp
or
sbb
pushf
hlt
cmc
sbb
aam
daa
mov
std
sbb
flds
pop
pop
aad
mov
stc
divl
dec
mov
push
or
xor
pop
ret
jmp
movsl
adcl
stc
leave
pop
cli
enter
mov
dec
cmpsl
test
sub
xor
xor
int
arpl
adc
imul
ja
call
jo
mov
sahf
adc
sbb
idiv
pushf
shrb
dec
cmc
mov
jg
ror
decb
adc
aad
or
repz
gs
int3
sub
stos
xchg
xor
lock
xchg
cmp
xchg
stos
jns
dec
daa
mov
jns
fstpt
xchg
dec
test
jecxz
pop
jecxz
dec
push
push
clc
loope
add
mov
in
in
pop
rcrb
or
adc
xchg
push
pop
in
shll
sbbb
lock
cmp
or
sbb
enter
cld
push
stc
decl
inc
movsb
push
stc
pop
clc
jne
or
cli
cmp
addr16
stc
outsb
pop
push
movsb
stc
xor
repnz
leave
test
mov
std
sub
sbb
dec
pusha
js
fwait
jmp
gs
mov
pop
or
sbb
lahf
out
fiadds
rcrl
sahf
jmp
fstpt
sub
jle
push
jnp
imul
ds
into
mov
decb
scas
fstpt
sub
jle
push
jnp
imul
ds
into
mov
decb
scas
fstpt
sub
jg
push
jnp
imul
ds
into
mov
decb
fstpt
or
sbb
jns
xchg
adc
and
xor
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
decb
enter
xor
in
xchg
cmp
add
add
add
pop
add
lods
add
cmp
add
add
add
aad
push
add
add
add
add
add
and
add
push
add
add
pop
add
add
jp
testb
add
add
add
pop
cmp
add
add
add
and
filds
or
pushf
add
add
add
add
add
add
sub
and
call
add
add
roll
adc
add
push
add
cmp
cmp
pop
add
add
add
fwait
add
add
add
add
add
inc
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
roll
inc
add
add
and
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
jns
add
add
add
add
mov
nop
add
jle
pop
add
add
add
pop
mov
sub
push
add
enter
mov
add
add
add
mov
ret
add
add
add
add
add
add
enter
cmp
dec
add
or
and
out
pop
add
add
add
add
add
test
push
add
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
jnp
lds
jecxz
add
enter
jle
dec
add
add
add
cmp
push
inc
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
push
add
mov
testb
add
add
add
xor
add
add
add
pop
lret
add
xchg
add
add
inc
add
add
add
add
add
and
xor
loope
or
lods
add
push
add
aaa
add
add
pop
cmp
addb
inc
add
add
add
add
ljmp
add
cmp
pop
add
pusha
add
add
add
cmp
jnp
xchg
add
add
add
add
add
add
pop
add
dec
add
add
xor
add
add
add
add
xchg
add
and
adc
cmc
add
add
arpl
mov
add
repz
add
add
fwait
add
add
add
add
cmp
pop
add
cmp
lea
imul
add
add
add
add
mov
sub
roll
pop
add
jnp
add
stos
add
inc
fdivr
call
fnstenv
dec
xchg
rcrl
jmp
push
mov
shll
and
add
pop
fdivp
out
pop
jns
add
scas
dec
pop
cmp
jg
push
sbb
leave
push
and
xor
leave
out
aas
xchg
push
cmpsl
mov
mov
jp,pn
jbe
daa
popf
xor
lds
les
jno
lods
mov
mov
mov
adc
lret
adc
lock
inc
les
hlt
popf
mov
aas
adc
iret
pop
in
mov
les
movsl
fdivrl
sbb
jne
repnz
adc
lahf
inc
add
mov
cmp
leave
rcl
xchg
lods
movsb
clc
mov
sub
cmpsl
out
dec
stc
ret
in
or
call
jnp
ljmp
push
ss
inc
cmp
adc
adc
dec
int
cwtl
mov
jb
mov
add
push
sti
add
lret
aas
adc
dec
je
push
int
jg
mov
push
inc
popf
push
mov
loopne
mov
lea
lods
sbb
inc
scas
fisubrs
fbld
cmpsb
call
xchg
loope
xchg
pop
scas
jb
or
push
sub
lcall
out
roll
inc
scas
out
mov
lcall
push
mov
out
pop
arpl
push
hlt
xchg
sub
pop
push
inc
leave
mov
add
sbb
jge
mov
xor
addb
push
test
out
les
lahf
std
sub
jp
scas
add
arpl
loope
push
dec
int3
pusha
icebp
sbb
les
sbb
ret
add
inc
int
cli
outsb
mov
add
dec
cltd
lock
into
fxch
int3
fsubp
sub
outsb
lea
add
mov
fdivl
rcrb
int3
adc
or
mov
jne
int3
push
lret
add
inc
fwait
mov
jae
fidivs
ss
jne
push
movsl
movsl
ss
in
loope
mov
leave
jecxz
lcall
in
jg
jbe
stc
mov
outsl
dec
inc
push
jg
pop
mov
cs
fsubrl
out
stos
nop
jae
jns
ljmp
sub
mov
lret
and
add
mov
dec
push
iret
bound
push
pop
inc
adc
cmc
cmp
pop
xchg
fwait
push
inc
lcall
sub
cwtl
pop
pusha
cltd
jnp
and
test
insb
btc
imul
nop
sbb
pushw
mov
je
mov
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
