call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
pushf
adc
lods
cmp
sub
sbb
sub
cmp
dec
ret
insb
bnd
mov
pushf
adc
fcoml
cld
jb
sbbb
cmpb
mov
jl
mov
pushf
adc
fmull
jp
push
pop
xlat
adc
and
jnp
push
into
mov
addr16
pop
mov
or
sbb
cmpsb
outsl
in
sub
push
cmp
pop
pop
and
stos
xor
out
pop
lods
out
or
cli
add
jp
mov
mov
inc
dec
xchg
cmpb
jge
push
xchg
adc
push
xchg
push
adc
rcrl
push
aaa
in
rcl
rorb
sbb
repnz
push
popf
adc
and
xchg
adc
xchg
lea
or
mov
xchg
xor
insb
push
call
shlb
xlat
scas
in
xor
jae
pavgb
shrl
or
jmp
pop
stc
xor
sbb
lcall
xchg
mov
mov
insb
sbb
pushf
add
int3
inc
fcoml
jnp
imul
mov
cmp
dec
ficompl
loop
xchg
lret
adc
and
xor
push
mov
ljmp
xor
lahf
jp
adc
push
fnstenv
mov
mov
in
push
cld
push
imul
jns
sub
jl
in
clc
ja
inc
mov
push
in
cld
jb
sbbb
mov
pop
shrb
repnz
pushf
adc
fcoml
cld
jb
sbbb
mov
pop
shrb
repnz
cmp
push
jg
aaa
push
fsubp
lcall
outsb
mov
lods
iret
in
and
add
mov
mov
bound
xor
mov
js
shrb
push
in
scas
outsb
and
dec
xchg
cmp
daa
into
outsb
jge
out
iret
dec
jb
nop
pop
pushw
pop
xchg
test
mov
jns
jp
fwait
popa
push
lods
jbe
cmc
stos
mov
fcoml
mov
xor
sub
lods
inc
add
mov
aaa
xor
fcmovu
and
push
ljmp
sarl
hlt
nop
out
add
push
xchg
add
faddp
pop
mov
dec
sbb
cmp
sbb
scas
stc
data16
or
mov
dec
pushf
mov
lret
jnp
cmp
stc
es
ja
jb
call
dec
inc
push
cmp
or
xchg
or
and
rolb
mov
or
inc
sub
cli
mov
int3
push
cmc
iret
test
lahf
icebp
in
mov
jp
mov
lods
xchg
cmp
test
adc
popa
xchg
xor
mov
mov
pushf
popf
inc
mov
xor
sbbb
daa
lret
sub
sub
mov
enter
scas
sbb
push
call
adc
add
dec
cmp
push
push
rcl
mov
popa
mov
idiv
pop
cwtl
or
data16
mov
add
popf
sti
mov
inc
xor
and
aam
shrb
clc
add
sub
in
xchg
and
mov
xorb
and
out
inc
xchg
cmpsb
or
leave
cs
mov
sub
dec
and
ja
push
addl
das
mov
aas
cmp
fmuls
loop
sub
mov
rcl
fldt
cmc
aam
adc
or
push
fists
add
pop
lahf
pop
mov
push
push
xor
shlb
daa
mov
and
and
in
mov
sbb
ret
add
add
mov
fcomp
jne
orb
mov
fnstenv
or
test
lret
in
mov
push
stc
jle
lea
mov
mov
inc
fst
xchg
push
jge
addr16
pop
cmpb
mov
leave
or
test
push
cmpsb
fdiv
push
movsl
or
jmpw
repz
push
fisttps
lretw
mov
inc
fsts
mov
sbb
cld
insb
ss
cs
ja
jns
push
add
sbb
sbb
imul
mov
in
cmp
repnz
or
push
mov
shr
adc
add
push
dec
in
rcrb
pushf
mov
sbb
fisttpl
stos
mov
call
jo
stos
cmp
push
ljmp
xor
in
mov
out
lds
jge
add
scas
xlat
xor
xchg
repz
xor
and
or
ss
pop
and
ficoml
push
xor
pop
pop
inc
jb
mov
push
inc
mov
push
jp
in
mov
push
fnstcw
sub
mov
sbbb
jmp
push
push
add
mov
cmc
push
jg
jb
scas
cmp
ss
lock
test
lods
bound
and
aaa
outsb
mov
mov
movsl
cmp
flds
addl
xchg
out
cmp
push
dec
cmpsb
int3
fdivs
cmc
out
or
mov
sbb
or
xchg
jp
push
lds
fldcw
adc
popf
xlat
xchg
mov
push
jg
lret
mov
jne
jns
inc
cmp
dec
imull
push
xchg
inc
out
sarb
lods
lock
push
mov
push
adc
dec
mov
adc
sbb
cli
ja
testl
add
and
into
xchg
xchg
dec
dec
mov
mov
cmp
inc
aaa
sarl
fdiv
int
mov
lds
pop
call
lret
rclb
jns
adc
stc
mov
sbb
jp
adc
lock
adc
mov
xchg
dec
lea
sub
int3
movsb
xchg
stc
jle
adc
jnp
push
adc
dec
or
movsb
dec
dec
subl
mov
xchg
outsl
in
push
je
stos
mov
or
fcmovne
push
mov
movsb
gs
push
sahf
cmp
xchg
dec
loopne
dec
or
push
test
mov
jae
mov
inc
push
mov
movsb
ss
rorb
mov
push
inc
repnz
or
push
push
out
out
xor
mov
pop
inc
jle
push
mov
pop
mov
pop
pop
ss
fisttps
in
ret
loopne
stos
dec
adc
cli
or
mov
jmp
movsb
aad
lcall
add
sub
push
das
xor
fisubl
in
je
jecxz
lcall
inc
pop
loop
adcb
sahf
pop
lahf
cmp
dec
and
shlb
sub
cmp
pop
dec
jmp
inc
cmc
shl
jle
jp
dec
mov
mov
stos
push
scas
add
lds
test
jge
mov
sub
and
mov
or
jnp
imul
sbb
repz
fidivl
xchg
out
pop
ljmp
adc
scas
sub
push
jo
inc
mov
cli
lret
aas
jmp
stos
cmp
rcrb
adc
push
je
rcrl
stc
insb
push
fidivrs
stos
inc
cwtl
mov
les
or
pop
push
in
movsl
xchg
inc
sub
push
nop
sbb
out
nop
sbb
fdivrp
or
inc
sub
andl
add
imul
out
xchg
jg
clc
in
cli
out
cltd
outsb
pop
js
je
test
lcall
jge
xor
es
cs
test
or
mov
aas
adc
aam
testb
rcr
xchg
mov
dec
arpl
add
daa
pop
add
aas
adc
sub
adc
lea
lret
mov
out
cmp
dec
repz
dec
jge
cmp
sbb
imul
neg
loopne
mov
mov
mov
jecxz
adc
xchg
or
xchg
pop
or
shl
mov
outsl
insl
xchg
lcall
sti
push
xor
insb
hlt
or
and
cltd
jmp
pop
scas
leave
lock
jne
outsb
addr16
imul
and
mov
xchg
repnz
insb
jns
clc
lods
push
dec
daa
adc
lods
sbb
push
vzeroupper
add
lods
xchg
adc
lods
adc
stos
mov
imul
fisubrl
cmpl
hlt
shll
mov
pop
cmp
inc
ret
repnz
inc
ret
stos
jns
std
scas
aaa
push
jle
mov
xor
loop
clc
int3
jp
xorl
test
movsb
movsb
fwait
mov
insl
and
sub
adc
mov
stos
aaa
call
jo
and
nop
mov
jnp
clc
mov
leave
mov
mov
jecxz
test
clc
or
les
sub
stos
push
jno
and
mov
jbe
dec
adc
out
xor
loop
xchg
or
add
aas
mov
fldcw
fists
dec
cmp
cmp
xor
lea
packsswb
adc
xchg
cmpsl
lret
sbb
repnz
lcall
mov
mov
lret
sub
mov
ret
jae
mov
pushf
int3
mov
aad
push
out
jnp
les
in
lods
pushf
sub
cltd
outsl
lock
frstor
pop
mov
inc
xchg
push
mov
icebp
dec
dec
repnz
mov
lods
je
movsb
test
adc
xor
mov
out
cltd
test
out
inc
push
and
sub
cmp
iret
scas
mov
pop
lea
insb
xlat
es
aaa
cmp
outsl
bound
fidivs
fcmovbe
mov
cmpsb
ljmp
std
push
aaa
mov
adc
sti
or
movsl
sub
pop
dec
mov
inc
into
out
fdivl
mov
lds
pop
jb
iret
add
xorb
cmp
xchg
mov
arpl
outsl
out
mov
orb
pop
mov
lahf
push
pop
mov
cmpl
cs
lods
dec
out
push
pop
in
stos
shr
out
mov
jbe
jle
mov
daa
adc
xchg
fsub
sub
lock
xor
mov
cs
xchg
enter
mov
mov
sahf
mov
pop
out
gs
lret
ret
mov
nop
int
mov
push
pop
clc
push
jecxz
test
mov
enter
push
or
or
push
int3
sbb
and
push
xor
pop
mov
fimull
test
xor
pop
pop
fldcw
and
imul
and
jnp
adc
jp
push
or
mov
or
mov
xor
fwait
sub
push
ret
rol
mov
and
test
scas
and
lods
adc
cmpsb
sbb
lea
shlb
mov
lcall
popa
sbb
imul
sub
jb
sub
ja
inc
xlat
mov
inc
mov
in
push
fildll
mov
mov
add
mov
pop
add
jns
xchg
leave
enter
lods
mov
dec
push
xchg
push
int
in
xor
jg
xchg
xor
jo
repz
cvtps2pi
add
adc
sbb
icebp
pop
push
cmp
pop
shlb
popa
adc
ss
dec
in
adc
data16
ds
in
mov
sbb
mov
add
xchg
notl
mov
cmc
int
xor
cwtl
inc
xchg
adc
jbe
lahf
hlt
lock
xor
push
jmp
mov
loope
sub
xchg
inc
call
pushf
push
cmp
mov
aaa
in
hlt
fs
daa
jge
mov
aaa
mov
cmp
add
fnsave
pop
dec
jnp
add
mov
mov
dec
jnp
sub
sub
stos
int3
hlt
add
fwait
push
test
lods
in
cmpsb
pop
mov
rorl
aad
call
test
insl
je
adc
jp
jg
and
popa
popa
scas
and
and
in
mov
mov
testb
sub
sbb
sub
ficoms
pop
jb
mov
inc
dec
pop
pop
lret
mov
stc
mov
mov
pop
fdivs
cs
popf
push
xor
insb
stc
add
out
and
cmp
sub
add
in
jg
jnp
xchg
mov
lahf
insb
jl
cmp
cs
sub
je
lcall
inc
dec
adcb
dec
dec
shl
les
push
aaa
sbb
fistl
fdivrp
loop
mov
pushf
mov
movsb
fisttpll
fmull
inc
push
cmp
jo
dec
push
call
fstpt
xchg
fmuls
in
movsl
andb
or
inc
lcall
nop
mov
lods
mov
roll
popf
filds
in
cwtl
mov
push
out
sub
cwtl
add
mov
fs
es
mov
jmp
repz
rolb
pusha
fcom
adc
sub
fs
inc
lea
aam
roll
pop
jnp
jmp
pushf
movsl
fs
mov
adc
je
arpl
sbb
out
aad
shlb
xchg
adc
inc
pop
in
mov
iret
pop
in
sbbb
outsl
rol
lret
add
mov
inc
adc
push
iret
push
sbb
mov
int3
cmp
insb
push
std
sti
mov
sbb
scas
sub
mov
push
or
test
mov
rcll
lods
mov
icebp
cmpsl
fsubl
mov
push
repnz
leave
lods
dec
mov
sti
fcomps
mov
sub
testb
dec
or
dec
pop
jge
ljmp
test
loope
iret
adc
inc
xor
call
sub
cli
push
sub
movsb
pop
outsb
sbb
iret
mov
stc
jbe
xchg
movsl
xor
and
js
jns
dec
hlt
jp
in
jle,pn
dec
jle
leave
mov
mov
push
pop
mov
pop
sub
mov
add
pushf
mov
mov
repz
xor
pop
sub
lret
and
pop
cli
das
lods
mov
mov
cmp
cmp
cmp
lods
mov
adc
std
out
aas
stos
xor
add
pop
push
cmp
pop
jne
scas
test
fcom
ret
scas
ret
jecxz
xlat
shlb
gs
cmp
sbb
and
dec
xchg
cmp
int
dec
push
jbe
jg
mov
call
inc
in
std
xchg
jne
leave
fisttpl
addr16
insb
or
iret
add
into
scas
mov
sbb
mov
cwtl
shrl
sbb
push
ljmp
adc
add
int3
out
jl
dec
dec
daa
and
fwait
inc
shl
jnp
add
push
mov
sbb
inc
jp
cmc
cmpsl
add
lahf
movsl
pop
sbb
mov
jp
rorb
cmp
sbb
mov
int3
and
push
dec
pop
push
jle
mov
xchg
dec
sbb
lahf
push
fisubrs
daa
ljmp
add
scas
jo
aam
test
sbb
lcall
je
jle
inc
lods
sbb
bound
adc
jle
mov
pushf
sahf
stc
mov
je
aam
xor
push
in
jp
cld
cmp
adc
rol
repz
cmp
adc
gs
xchg
lods
fwait
sbb
repz
out
inc
jl
mov
or
inc
leave
push
dec
decl
ss
mov
and
pop
add
out
repz
push
daa
insl
pop
jbe
lret
mov
mov
mov
ljmp
cltd
faddl
lret
xchg
stos
outsb
in
loope
xchg
pop
sbb
test
cmp
addr16
adc
cmp
inc
jecxz
push
scas
and
push
pop
enter
and
lods
outsb
inc
jl
outsb
sub
addr16
adc
fldl
mov
pop
sub
lds
jecxz
pop
scas
loopne
sbb
popf
inc
outsb
mov
pop
xchg
or
ljmp
pop
addb
mov
js
nop
jg
pop
addr16
jge
pusha
or
pop
dec
cmpsl
pusha
aad
cmp
stc
mov
je
mov
sti
or
js
push
repz
sbb
iret
loopne
and
addr16
iret
outsb
mov
sub
divl
xchg
jb
out
mov
sbb
aam
sbb
adc
cwtl
cs
or
mov
add
jae
cmpsl
lds
imul
sbb
shrl
adc
sahf
dec
or
mov
andl
stc
mov
vscalefps
sbb
popf
lods
rol
out
hlt
fstpt
or
mov
clc
pop
sahf
push
out
push
into
lods
mov
aaa
and
arpl
jmp
push
dec
hlt
push
mov
mov
testb
or
cmp
pop
jmp
dec
mov
push
fldenv
push
aaa
ljmp
adc
cltd
scas
and
dec
dec
nop
bswap
inc
pop
punpckhwd
push
dec
pop
inc
jecxz
mov
in
test
mov
pushf
xchg
fidivrl
mov
std
sarl
add
dec
mov
inc
pop
inc
sti
insb
out
push
sub
enter
pusha
cmp
sub
rcl
imul
aaa
pop
scas
jno
inc
imul
clc
outsb
mov
add
dec
push
mov
sbb
mov
add
das
pop
btc
xor
test
fdiv
jb
jg
dec
out
cli
ds
mull
dec
das
lcall
jbe
cmp
cmp
ret
lods
fsub
xor
mov
out
fs
cmpsl
cmc
ret
lds
sbb
push
std
add
inc
mov
jno
xchg
lods
inc
fidivs
fsubs
fidivrl
fsubrs
and
loop
mov
pop
pushl
iret
shrl
dec
xchg
cli
dec
mov
aad
movsb
inc
in
jg
and
add
add
push
cmp
add
dec
lds
addr16
shrl
adc
clc
leave
insb
xor
into
dec
addb
xor
cmp
add
es
imul
loope
adc
int3
pop
push
dec
jmp
mov
outsl
xchg
xor
lds
jbe
cmpsl
cli
push
push
sub
std
divl
repnz
dec
push
push
pop
sub
fbld
out
stc
jl
rorl
jbe
xchg
and
call
and
mov
cmp
or
cmp
ret
jg
pop
negb
xor
sub
out
pushl
lock
rcrb
vpaddsw
mov
cltd
imul
outsb
mov
mov
shrb
cmp
xor
cltd
pop
mov
sahf
push
fcmovbe
xor
rorb
into
adc
leave
lret
xor
jle
inc
fisttpll
arpl
pop
inc
insb
sub
test
fsubp
add
cltd
lods
mov
movsb
fcoms
xchg
pop
aaa
pop
mov
push
cmpsb
jno
in
inc
insb
sbb
cmp
add
loop
pop
sub
dec
loopne
xchg
xor
mov
das
jne
push
fdivrs
inc
jnp
into
mov
dec
dec
cmp
stc
test
jo
pop
ret
scas
add
sub
push
xchg
incb
mov
jecxz
ja
stos
negb
std
xchg
data16
scas
mov
sti
out
or
je
sbb
ja
cld
push
adc
and
pop
lcall
stos
jne
mov
in
icebp
andb
xchg
ret
data16
jl
pop
pop
lret
gs
pop
add
in
xor
inc
mov
outsb
and
push
je
push
push
dec
sbb
jmp
mov
sahf
jns
loope
pop
xor
ds
and
mov
inc
out
hlt
dec
mov
push
push
mov
pmaxub
pop
mov
jnp
push
xor
dec
adc
xchg
jl
pop
negb
int3
rolb
xor
pop
jnp
rcrb
mov
mov
cli
add
and
mov
mov
ror
leave
xor
adcl
lar
sub
mov
and
nop
push
dec
push
ret
xchg
mov
cmpb
cmp
sbb
dec
jbe
cs
xchg
pop
dec
fwait
pop
fucomip
rcrl
and
adc
lea
sahf
rcrb
imul
cld
ljmp
insb
xor
sub
xor
or
mov
andb
test
addb
push
ljmp
pushf
xchg
mov
cli
repz
lahf
xchg
mov
call
pop
loopne
mov
jmp
cmp
movsb
mov
sub
int3
sbb
cmp
incl
xchg
push
cmp
popf
pop
cmp
out
ja
aam
lds
and
mov
test
push
stos
or
mov
test
fbld
cmp
imul
icebp
sbb
sbb
bound
xchg
loop
inc
adc
sbb
fs
or
jnp
movsl
aam
mov
add
dec
dec
dec
mov
ss
dec
lahf
and
shrl
es
xchg
lret
ficomps
push
dec
les
dec
xchg
clc
imul
pop
inc
xchg
sub
or
notl
sub
in
adc
pushf
out
jno
mov
pop
jno
sbb
in
cmpsl
dec
testb
mov
pop
cmc
pop
hlt
xchg
incl
xor
jno
mov
cmp
xor
iret
push
sub
jecxz
cs
aas
and
push
mov
mov
popf
scas
or
cs
push
mov
push
lods
sbb
data16
js
rcrb
mov
adc
mov
imul
mov
cmp
or
cmpsb
cmp
mov
push
mov
sbb
js
rcl
in
dec
movsb
outsb
lret
cmpb
jl
cmp
sub
in
jge
int
inc
rolb
mov
lret
aam
fs
mov
jae
aaa
out
add
ss
xor
mov
call
dec
jo
popa
bswap
pop
pop
mov
nop
and
in
cmpsl
inc
mov
pcmpeqd
lret
add
jmp
or
leave
jne
and
leave
xchg
std
filds
jo
xchg
das
cwtl
add
repz
mov
pop
ljmp
popa
sahf
inc
dec
jns
dec
in
nop
ret
or
xor
inc
dec
dec
std
roll
pop
xor
repnz
fisttpl
jecxz
aas
repz
push
mov
cwtl
dec
inc
in
jmp
dec
push
call
adc
and
in
out
jge
adc
mov
push
in
cld
jb
sbbb
mov
pop
shrb
repnz
pushf
adc
fcoml
cld
jb
sbbb
mov
pop
shrb
repnz
pushf
adc
fcoml
cld
jb
sbbb
mov
pop
shrb
repnz
pushf
adc
fcoml
cld
jb
sbbb
mov
aam
xchg
sbb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
movsb
sbb
sub
cmp
push
das
push
jg
sub
fistpl
int3
fwait
pushf
mov
mov
sbb
sbb
cmp
dec
sbb
cmp
fistpl
int3
hlt
fisttpll
adc
shll
push
daa
inc
aaa
je
imul
add
test
movsb
enter
xchg
loop
iret
xchg
stos
jl
sbb
pusha
push
push
ds
sub
sbbb
repz
fs
cmp
mov
repz
or
xchg
pop
sub
sub
mov
mov
imul
mov
jo
mov
mov
sbb
gs
incb
dec
pop
xor
mov
cld
jbe
xor
cmp
int3
imul
test
jl
mov
into
loopne
dec
lcall
in
dec
jecxz
jne
dec
out
sbb
pushf
dec
jl
insb
sub
mov
mov
add
in
fwait
sbb
arpl
push
icebp
pop
xlat
mov
arpl
or
int3
je
mov
sbb
sub
sub
sbb
insb
loope
stos
xchg
pop
test
aam
les
mov
jns
dec
cmp
sub
outsb
push
adc
popf
pushf
mov
rolb
mov
cltd
lret
sbb
dec
sbb
dec
cmp
add
inc
mov
leave
mov
shlb
or
sub
xor
pop
or
sub
mov
mov
mov
sbb
sub
cmp
dec
sbb
cmp
fistpl
int3
fmull
or
fistps
xorb
gs
mov
popf
mov
stc
insb
fwait
loope
push
adc
testl
jbe
inc
test
insl
jle
jo
lods
lret
add
and
xchg
mov
pop
std
lods
adc
dec
push
arpl
aaa
sub
std
or
mov
lods
dec
cmpsb
sbb
pusha
sub
repz
int
hlt
mov
add
push
int3
stc
lcall
cmpsl
xchg
sub
xchg
in
sbb
push
dec
mov
loopne
mov
xchg
outsb
loope
sub
xor
inc
ss
xchg
adc
jno
repnz
call
cmp
sbb
test
popf
stc
xchg
dec
lds
inc
jno
lock
iret
mov
xor
inc
jmp
lea
leave
jmp
roll
popf
lds
inc
mov
aaa
pop
sub
xchg
and
push
and
leave
jg
repz
int
pop
sahf
mov
stos
adc
mov
cmc
adc
rcrl
jl
inc
dec
andl
add
add
mov
adc
jns
aaa
cmpsb
div
sbb
mov
mov
stos
pop
out
push
fwait
call
push
pusha
mov
push
jmp
movsl
imul
adc
fidivs
xor
int
push
jb
mov
cmovl
sar
lods
das
into
shrl
dec
int
pop
mov
movsl
fsubl
mov
and
cmp
jg
pop
push
imul
rorl
jp
inc
mov
jb
dec
out
push
or
mov
fwait
cmc
xchg
lret
cmp
imul
mov
pop
push
pop
sbb
stos
mov
push
inc
push
shrl
les
iret
or
setae
pushf
neg
fs
sub
inc
jne
ljmp
adc
jo
icebp
sbb
jb
stos
leave
gs
add
outsb
test
ja
aad
jnp
adc
pop
dec
push
push
cli
inc
mov
xchg
test
sub
in
mov
sbb
pop
push
ret
dec
inc
mov
inc
dec
lcall
mov
xlat
jg
jne
add
push
xchg
mov
adc
es
neg
add
fdiv
inc
cmpsb
push
bnd
fisttps
push
lods
adc
dec
daa
jo
orl
stos
mov
dec
dec
pop
sbb
xor
push
sbb
inc
pop
dec
mov
into
xchg
adc
mov
adc
mov
lds
mov
mov
cltd
jae
insb
subb
dec
fs
fisttps
jnp
pop
add
pop
cs
shlb
inc
fisttpll
flds
std
mov
inc
rcr
in
xor
insb
mov
dec
loope
push
gs
adc
pop
mov
sbb
ret
pop
hlt
push
in
aad
dec
xchg
ljmp
ror
cmp
shlb
cli
jle
pushf
add
xor
or
or
mov
mov
jle
sub
mov
fadds
outsb
and
sub
xchg
stos
ret
cli
mov
clc
and
adc
lret
push
xor
dec
mov
gs
or
push
repz
sbb
ret
insb
pop
andl
jle
leave
cmpsb
pop
or
rcll
fcomp
xchg
inc
fs
sub
pop
ds
in
dec
enter
enter
push
popa
imull
shrl
sarb
shlb
and
dec
sbb
sahf
mov
fstl
into
push
jns
pop
fsts
insl
ret
add
ja
popa
pushf
xor
into
and
mov
pop
pop
or
cld
xchg
loope
push
adc
add
fldl
adc
aaa
out
jnp
mov
bound
add
imul
sbb
test
xor
xor
loope
les
int3
mov
cmpsl
dec
pop
arpl
into
xor
mov
gs
test
cmp
ljmp
and
dec
sti
cld
add
lcall
outsl
fldcw
outsb
arpl
mov
inc
sbb
push
xchg
loope
pop
lahf
ja
aam
xchg
xchg
cld
clc
add
inc
xor
sbb
mov
mov
outsl
adc
shrb
imul
sbb
or
xchg
inc
cli
push
add
push
loopne
push
xor
rol
or
or
push
xor
lds
xchg
sti
lea
shlb
jmp
mov
cltd
pop
js
push
pop
lods
push
out
cli
cltd
out
out
sysret
incl
stc
and
insl
loope
mov
outsb
rorb
fstp
rclb
cmpsb
test
xor
jae
mov
jp
lea
stos
inc
xor
lret
lds
push
shl
imull
mov
xchg
in
adc
ss
test
sub
lock
cli
pusha
loopne
and
sub
push
lea
cmp
ljmp
aaa
cmc
pop
dec
push
fisttps
notl
mov
fdivrs
rclb
imul
and
test
inc
push
pop
imul
test
popa
add
push
cli
jno
xor
sbb
mov
jle
mov
mov
repz
sti
fcomps
cwtl
mov
push
push
xchg
pop
inc
outsb
xchg
mov
daa
add
sarl
fisubrs
adc
mov
or
icebp
jecxz
sub
je
xchg
cltd
ja
cmp
loop
pop
cmc
dec
dec
pushf
xor
fucomp
fstps
outsb
jg
mov
lahf
pop
inc
jbe
in
pop
hlt
sub
popf
push
sbb
push
lahf
in
push
sarl
mov
cmp
movsl
cmp
je
and
jbe
push
out
pop
icebp
pop
xlat
std
xchg
jbe
cmpl
xchg
and
pop
jno
shrl
jo
xor
jnp
scas
sbb
sbbl
fwait
mov
sbb
fdivl
push
jmp
cmp
ja
fiaddl
sbb
sub
test
pop
sub
lods
adc
jecxz
nop
and
push
pop
loopne
es
call
testl
pop
push
stos
mov
aaa
orl
mov
sbb
and
test
xchg
fidivs
ss
iret
add
popa
or
mov
and
aas
push
cld
xchg
in
dec
fs
pop
xchg
sbb
add
stos
inc
es
lds
mov
pop
jno
pop
imul
or
jb
lcall
pop
push
fdivr
outsb
cmp
xchg
inc
ret
push
call
xchg
pushf
mov
incb
inc
cmpsl
fwait
gs
loop
test
lods
loop
sub
data16
aas
in
gs
jne
out
int3
mov
sub
stos
xor
pop
xor
cltd
icebp
mov
pop
cmp
aam
jmp
mul
push
or
cmpsb
jmp
xchg
xor
popa
stos
fstl
sub
add
mov
jg
shlb
inc
xchg
xor
ja
lret
adc
sahf
sub
subl
cmp
add
test
and
std
enter
add
dec
aad
pop
xor
push
gs
inc
and
push
iret
jbe
aam
aaa
mov
scas
adc
cwtl
ret
adc
adc
push
int
lret
jo
dec
add
loopne
jne
push
test
sub
or
xor
xchg
addr16
pop
lock
or
pop
mov
je
sub
ds
fisubrl
js
mov
mov
cli
xor
mov
or
adc
ret
ret
cmpsl
mov
xor
jne
js
popa
call
lret
testl
movsl
dec
test
call
xor
fstp
cmp
data16
cmp
xor
pusha
lahf
xor
jb
sbb
movsl
or
leave
les
icebp
xor
insb
cmp
inc
mov
out
mov
cld
test
fucomp
out
cmp
xchg
shlb
mov
xchg
inc
push
enter
add
mov
cli
sbb
ss
fildl
xor
bound
cmpsl
add
js
mov
jne
xor
add
mov
popf
cld
gs
push
into
add
lods
out
pusha
test
out
sti
cmp
cmp
test
daa
data16
xor
testb
jb
xor
mov
lods
jl
jbe
mov
es
xchg
and
leave
or
loope
xchg
jmp
arpl
xchg
or
jge
fisttpll
sbb
mov
ds
negl
bound
leave
bound
jl
jle
repnz
lods
arpl
cmp
jb
subl
roll
push
push
dec
pop
and
push
leave
or
mov
push
and
jmp
or
inc
sub
cld
shll
mov
jbe
add
test
lret
ds
out
adc
push
mov
xchg
xor
jnp
movsl
push
adc
int
inc
hlt
ja
pushl
push
es
sti
inc
pop
mov
aam
mov
push
jb
adc
clc
loop
repz
cltd
push
pop
mov
push
mov
in
test
jne
add
cmpl
fnstenv
fidivrs
push
or
shlb
out
pop
mov
or
je
adc
fwait
out
add
jb
imul
enter
or
test
cs
stos
jb
sub
fimull
push
cmpsb
xchg
adc
xlat
pop
push
ds
inc
push
daa
jnp
push
popf
mov
jmp
add
or
mov
and
xor
add
and
xchg
xchg
imul
loope
rcll
inc
sub
xchg
or
stc
xor
inc
inc
add
jns
fistpl
leave
lods
inc
pop
xchg
inc
aam
sbb
and
mov
dec
inc
dec
jno
ja
xchg
adc
in
push
clc
pop
rolb
dec
scas
repnz
dec
sahf
mov
or
jns
cltd
es
nop
inc
shll
and
inc
mov
notl
data16
ds
sbb
xlat
jo
ret
in
scas
push
ds
mov
xor
inc
and
push
adc
fs
jl
adc
aaa
cli
mov
ds
inc
cmp
xchg
shrb
pop
les
adc
inc
iret
jae
incb
sbb
jne
mov
cld
pop
or
scas
jl
xchg
jmp
xor
icebp
push
lret
inc
cmp
pop
push
xor
shlb
adc
pop
mov
xchg
sahf
xchg
sahf
mov
test
into
int
inc
addr16
popw
lds
add
push
test
rcl
jp
scas
jmp
xor
push
insb
das
push
js
and
mov
and
dec
pushf
adc
mov
mov
xchg
push
lret
push
inc
pop
or
inc
into
out
loopne
cld
leave
sub
add
mov
push
out
mov
daa
inc
xor
lds
mov
ficomps
xchg
in
sub
out
les
xchg
push
ss
popa
xchg
mov
push
pop
xchg
lret
jns
lods
xchg
push
mov
pop
adc
cmp
call
dec
out
push
out
andl
adc
lahf
dec
push
mov
sub
shrl
aad
clc
jmp
loope
sbb
bound
jmp
rclb
adc
and
repnz
mov
pop
pshufw
in
out
icebp
iret
lods
inc
out
mov
dec
test
mov
sub
sub
mov
inc
sub
mov
mov
mov
sarb
mov
mov
add
scas
dec
stos
push
adc
mov
test
xor
mov
inc
pushf
loopne
lods
dec
fsubp
shll
fcomi
inc
imul
sahf
fst
call
shrb
mov
bound
out
sbb
stos
loope
mov
jno
out
shrl
push
sbb
sbb
dec
jp
mov
sbb
adc
pusha
es
addr16
mov
push
fcoms
dec
or
outsl
cmpsb
pop
jecxz,pn
addr16
pop
jp
mov
pop
and
push
in
fists
cli
or
fisubrl
and
loop
pop
jle
pop
mov
add
adc
sbb
int
cmp
push
mov
cmp
jbe
outsb
pop
mov
push
lods
pop
mov
mov
cltd
mov
inc
fstpt
xor
or
xchg
sub
fiaddl
mov
jp
fs
inc
addb
js
popa
mov
sub
test
aas
jo
pop
ljmp
adc
ja
movsl
push
xlat
xchg
int3
fistps
xchg
in
push
jmp
test
cmc
sbb
mov
mov
mov
cmp
sub
adc
mov
pop
fdivl
test
je
dec
mov
push
mov
and
pop
cmp
ljmp
jno
loopne
dec
xlat
xchg
xchg
imul
jae
je
mov
sub
jg
orb
add
adc
gs
add
lock
shll
scas
popa
mov
jp
test
inc
push
xchg
sbb
mov
iret
mov
cmp
jns
imul
dec
xlat
xchg
jne
movsl
aad
and
shll
dec
mov
or
mov
movl
fildll
adc
xlat
and
bound
jp
shr
orb
pmulhuw
loope
movsb
lcall
pop
pop
push
xlat
or
mov
pop
std
xchg
roll
mov
pusha
popl
or
cld
lret
ret
sti
sbb
in
addr16
cmp
es
leave
mov
cwtl
sub
or
sbb
xor
mov
ffree
neg
jle
ss
setle
lret
cmp
xor
and
iret
pop
mov
in
xchg
popa
and
add
bound
lahf
ja
push
push
xchg
sbbb
insb
cmp
enter
ret
pusha
mov
pop
daa
repnz
imul
sub
loope
adc
je
inc
in
pop
adcl
shrl
xlat
sub
jae
mov
adcb
jne
add
call
mov
and
popa
inc
sbb
es
imulb
cmp
jg
es
jp
add
inc
cld
mov
cmc
hlt
arpl
mov
mov
jmp
push
adc
or
dec
aaa
jle
pushf
push
ss
adc
iret
std
into
xchg
sbb
push
xor
movsb
insl
insb
or
mov
loopne
mov
dec
jo
cmp
mov
sub
addr16
andl
xchg
mov
jp
mov
call
add
inc
lret
std
insl
dec
popf
push
pop
jo
mov
dec
pop
out
repz
mov
cs
aaa
cmp
inc
sbb
jp
xor
inc
fisubl
gs
in
adc
xchg
sti
rorb
mov
subb
test
push
pop
inc
mov
xchg
mov
or
and
rorl
roll
adc
iret
test
repz
mov
ret
jge
outsb
jne
sub
push
das
pop
adc
mov
dec
push
xor
or
mov
fcmovb
and
add
cs
or
movsb
test
pop
daa
sub
pop
cmpl
jecxz
std
xchg
lret
fiaddl
das
std
inc
sbb
mov
sub
add
dec
ror
pop
pop
imul
dec
icebp
add
jbe
push
jb
push
call
inc
xchg
inc
sub
in
aas
ffree
mov
cmc
mov
arpl
pop
subl
push
jne
cmp
mov
movsb
xchg
sarb
loop
es
cmc
and
enter
push
push
mov
repnz
push
leave
dec
sub
xor
jnp
or
arpl
fdivrl
fwait
repnz
dec
movsl
mov
lds
jbe
dec
movsl
mov
dec
dec
dec
mov
sti
scas
aaa
jnp
in
sbb
pushf
xorb
std
das
lcall
pop
inc
out
das
xlat
mov
sbb
mov
test
int3
jge
movsl
jg
jg
or
push
fisubs
subl
sub
js
pop
dec
lods
scas
lret
mov
sub
mov
sbb
out
mov
adc
ljmp
push
sti
sub
cmp
clc
std
add
scas
hlt
xchg
jnp
cmc
das
sub
add
mov
or
mov
adc
leave
add
movsb
push
mov
jo
out
shll
sahf
push
xor
fsubrl
std
outsb
es
mov
push
dec
jae
cmp
movsb
add
rorb
gs
mov
push
jge
loope
sub
outsl
mov
arpl
xor
nop
xor
fbld
pop
repz
in
clc
fidivrs
ja
mov
fsubrs
loop
push
ja
lds
mov
shl
pop
out
mov
loopne
je
jle
pusha
jmp
lret
sbb
ja
lcall
sub
test
insl
lahf
and
inc
pop
adc
ficomps
xor
fcoms
lahf
fmull
lret
xchg
aaa
jg
mov
out
mov
mov
aas
loope
imul
test
pop
fdivrl
lcall
push
jb
arpl
loope
mov
inc
dec
ret
or
inc
xchg
xor
pop
out
pop
sub
icebp
cld
gs
frstor
outsb
mov
push
int
fmulp
jecxz
jecxz
pop
loopne
pop
je
rol
sbb
inc
pop
test
mov
adc
inc
stc
lahf
xor
jbe
xchg
dec
adc
es
loope
in
aaa
lds
rol
dec
sahf
adc
lds
insl
and
nop
das
mov
mov
int
push
pop
adc
scas
mov
pop
rcrl
inc
data16
sub
les
xor
xchg
and
push
loopne
loopne
mov
je
ds
and
mov
mov
xchg
dec
sub
nop
cmp
mov
stos
aaa
movsb
mov
jno
sbb
xchg
mov
lahf
repnz
test
sbb
xor
adc
push
and
movsl
sbb
sbb
in
xchg
dec
push
adc
lcall
out
mov
out
and
mov
push
in
sbb
xchg
scas
popf
paddusb
sbb
fistpll
les
movsb
push
iret
and
xor
and
les
cmpsl
and
sbb
outsl
adc
orl
insb
insl
fnstsw
sub
fsubrs
mov
std
cmpsb
pop
inc
push
call
outsl
rol
jns
cmpb
xchg
mov
xchg
out
out
in
jl
mov
jle
mov
jecxz
push
pop
cmp
out
sahf
cwtl
pop
scas
mov
jo
imul
or
push
aad
inc
loope
out
jecxz
xchg
adcb
push
jl
jb
out
sbb
mov
dec
andl
or
cmpsb
clc
mov
out
lahf
inc
cmp
jle
pusha
add
in
test
jae
add
fcomps
xchg
jb
lahf
mov
ror
in
mov
mov
jno
lret
pop
sahf
std
xchg
sbb
add
aad
xchg
les
jmp
sub
iret
ror
xchg
out
mov
push
ss
cltd
outsb
or
out
xchg
shll
shl
ljmp
jp
je
or
mov
in
popf
incl
dec
sub
out
xchg
mov
xchg
mov
or
jbe
add
dec
mov
adc
sahf
xchg
add
sub
shlb
sti
lret
ret
xorl
xchg
push
sub
ret
sti
mov
cmp
out
push
sti
sbb
jb
std
ljmp
xor
clc
in
jg
hlt
sahf
ljmp
xor
inc
call
mov
pushf
jns
push
popl
xor
or
bnd
adc
int
jns
xor
jne
and
xor
popa
cmpsb
popf
dec
or
adc
les
xor
lahf
dec
fistps
fidivl
xchg
jbe
into
out
rclb
pop
fnstsw
sub
mov
ret
ss
scas
mov
adc
jb
jne
mov
and
or
xor
inc
inc
lods
into
fisubl
icebp
test
call
dec
jbe
rcll
or
push
pop
mov
or
dec
pop
mov
int3
arpl
movsl
scas
mov
pop
cs
lods
xchg
imul
xor
daa
js
pop
test
int3
mov
mov
pop
adc
sbb
outsl
push
pop
cmp
fcmovnb
adc
sbb
jne
orb
into
rolb
push
cmpsl
xor
aas
das
pop
into
ficompl
popa
in
push
mov
mov
sbb
cmp
fistpl
int3
fmull
or
sbb
sub
cmp
dec
sbb
cmp
fistpl
int3
fmull
or
sbb
sub
cmp
dec
sbb
cmp
add
int3
fmuls
cmp
dec
sbb
push
sbb
mov
arpl
sti
mov
je
inc
add
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
xor
pop
xchg
cmp
jge
rcll
ret
popa
xchg
push
jecxz
repz
mov
xor
inc
loope
shll
jae
andl
jo
add
push
jecxz
repz
push
adc
and
out
inc
adcl
mov
fs
xchg
adc
filds
in
addr16
inc
call
xchg
or
nop
jbe
adc
dec
mov
popa
or
inc
cmp
pop
push
adc
add
fistpll
dec
jnp
ds
repz
mov
cmp
cmovg
in
in
xchg
pop
cmp
fcomp
fs
and
cmpsb
add
ret
and
cltd
sbb
repnz
cld
leave
adc
daa
push
inc
loope
cs
and
mov
xchg
nop
popa
adcl
rorb
lods
out
mov
sbb
or
pushf
dec
and
adc
xorb
xchg
test
xchg
nop
and
push
mov
push
cs
testb
and
mov
cmp
daa
push
testb
add
adc
inc
cltd
push
shll
jae
cmpl
cmp
imul
jecxz
mov
outsb
rol
in
stc
jne
sub
adc
out
jb
je
fldl
scas
rsm
cmp
xchg
cld
inc
les
and
fs
test
or
jae
jae
adc
jns
or
popf
fstl
addr16
rolb
das
loope
shll
jae
andl
adc
popa
rcll
inc
repz
mov
xor
inc
loope
shll
jae
andl
adc
popa
rcll
inc
repz
pop
push
push
roll
xchg
inc
mov
lcall
in
in
test
and
fwait
and
lahf
fwait
add
cmp
mov
inc
out
dec
push
jp
clc
iret
pusha
rclb
xchg
mov
je
shlb
and
xor
outsl
cmpsb
sbb
pop
inc
adc
in
xor
cmp
clc
leave
outsl
sub
pop
js
mov
xchg
subl
xor
mulb
imul
fwait
cmp
je
clc
fwait
rorl
inc
sub
jbe
sahf
lahf
popf
sbb
mov
ja
lods
insb
lahf
add
lcall
xchg
aaa
test
push
push
out
std
call
mov
data16
or
pushf
mov
inc
jecxz
insl
leave
jle
lods
cmc
cmpsb
aaa
xchg
jge
jbe
clc
loope
das
cwtl
cmp
adc
loop
in
xlat
movsl
dec
enter
pop
and
sbb
rorl
clc
outsl
iret
pop
insb
xor
jbe
ja
push
xor
jge
xlat
aas
jno
imul
sub
xchg
ficomps
movsb
jbe
incl
mov
mov
lcall
or
adc
ljmp
mov
cs
clc
lock
sub
repz
outsl
int
std
mov
cmc
cmp
inc
outsl
ljmp
xchg
cli
adc
mov
lea
sub
add
in
or
mov
pusha
jbe
add
outsl
or
pop
nop
sbb
out
mov
clc
fstl
inc
sub
jo
repnz
mov
fwait
in
adc
inc
pop
mov
repz
fcoml
lods
lods
mov
lock
pop
push
ret
ret
pop
cmpsb
in
mov
add
lcall
mov
aam
sti
inc
inc
adc
and
xchg
popa
stc
shll
adc
inc
je
ljmp
popf
jl
push
aas
inc
fdiv
das
jmp
xchg
push
in
xor
push
fadds
mov
fsubrl
in
aaa
test
push
mov
in
sbb
mov
outsb
push
data16
or
mov
mov
popf
bound
mov
shlb
rcll
jno
cmpsl
jae
jle
out
imul
push
pop
mov
jp
cmp
scas
loope
je
jbe
dec
cmp
aad
pushf
cltd
jne
xchg
fcoml
mov
mov
xor
hlt
js
add
loopne
dec
and
jno
add
rolb
mov
lahf
sarl
adc
movsb
ss
xor
cmp
stos
jae
push
add
inc
add
ds
das
aas
ret
aas
xchg
mov
loope
or
and
mov
mov
push
test
cmc
and
sti
mov
lcall
mov
enter
cld
das
cmp
out
testl
push
sub
les
mov
or
jle
push
mov
mov
fisttpl
sub
pop
clc
jnp
repz
mov
pop
cmp
scas
cmc
xchg
aas
je
loop
mov
add
mov
cli
lock
data16
dec
arpl
sub
mov
cmpsb
icebp
inc
push
stos
push
and
shrl
hlt
aas
hlt
test
lods
out
aam
mov
jle
push
ljmp
insl
pop
sub
jae
xor
repnz
lret
pusha
mov
mov
xchg
adc
test
popf
or
inc
cmp
adc
inc
xor
xchg
sahf
roll
cmp
sub
pop
xor
xchg
push
insb
filds
push
ja
and
xor
inc
test
scas
mov
call
dec
jbe
pop
pop
aaa
cmp
stos
or
fists
push
out
faddl
fcompl
or
lcall
pusha
aad
jle
cmp
in
mov
sub
out
out
pop
aad
push
mov
and
popa
daa
data16
or
stc
push
out
xchg
sub
movsl
push
cmp
in
rcl
pushf
imul
data16
xchg
dec
pop
aad
adc
add
leave
sub
push
imul
repnz
mov
mov
pop
pop
or
mov
fsub
aas
mov
or
cmp
sbb
pop
rorb
stc
cmp
mov
or
movl
xchg
das
ret
mov
cmpl
push
loop
or
in
push
shlb
insb
sti
out
js
pop
xchg
aas
scas
mov
mov
inc
inc
loop
or
lds
add
pop
mov
inc
shlb
stos
mov
push
push
aas
mov
xchg
dec
lcall
je
push
sbb
jecxz
add
loop
dec
inc
pop
jg
and
int
lods
out
cli
lods
imul
sti
cmp
jle
pop
dec
int
inc
jmp
add
push
pop
cmp
jg
imul
mov
insl
repnz
adc
cmp
in
bound
sbb
stc
jp
add
mov
aas
out
xchg
js
test
sbb
and
adc
cmp
lahf
push
xlat
cli
repnz
fsubrl
loope
mov
push
ja
jl
jo
test
dec
lcall
movsb
and
inc
lock
aaa
mov
xchg
and
in
and
js
xchg
addr16
jbe
and
addr16
int3
jmp
dec
add
mov
stos
cmp
mov
mov
sbb
cmp
jp
pop
xchg
mov
pop
adc
cmp
test
in
cmp
aaa
sti
movsl
ss
xor
xor
cmp
dec
sub
or
dec
jae
outsl
sub
push
or
adc
and
mov
sti
jg
movzbl
dec
jle
lret
dec
sbb
mov
pop
fs
add
ja
cmpsb
adc
movsl
xor
aad
cmpl
dec
sbb
in
scas
dec
mov
pop
movsb
pusha
and
pop
inc
fldenv
bound
fisttps
pop
jno
mov
aad
sti
icebp
mov
mov
iret
adc
les
test
inc
ss
cltd
add
sahf
adc
cmpsl
pop
ljmp
adc
adc
mov
inc
nop
shlb
cld
cmpb
mov
enter
dec
popl
xchg
add
ret
mov
popf
mov
enter
xchg
insb
int
mov
mov
mov
in
jo
in
divps
mov
shlb
and
sub
test
dec
out
push
call
mov
inc
jg
dec
xlat
jno
filds
adc
stos
adc
popf
cmp
std
dec
push
add
and
cmp
xchg
xor
add
push
add
xchg
add
stc
insb
test
mov
aad
sub
cmp
testb
xchg
aad
or
out
das
jnp
fstl
cmc
fcom
out
jno
mov
mov
dec
inc
mov
std
mov
fstpl
mov
fwait
add
out
jl
sub
icebp
mov
or
loopne
test
and
mov
or
pop
xor
pop
adc
nop
inc
push
incb
fidivrl
cmp
dec
or
mov
jl
mov
xchg
xor
push
push
inc
cmpsl
call
and
dec
cmc
push
mov
jo
out
fs
repz
js
push
movsl
pop
adc
mov
std
lret
dec
fwait
out
sub
xor
dec
pop
dec
mov
mov
mov
add
cmpsl
add
inc
dec
ds
mov
sbb
sub
sub
cmp
lret
aas
ja
xchg
stos
mov
mov
pop
fmuls
jge
orl
pushf
cltd
insl
shll
cmp
pop
push
sbbl
imul
jne
push
mov
add
hlt
scas
inc
mov
xlat
jmp
sbb
mov
test
cmp
sbb
pop
sub
in
popa
xchg
mov
sub
outsl
jb
mov
lods
cmp
mov
adc
inc
sti
jge
or
adc
dec
fcoml
mov
das
mov
pushf
scas
mov
xchg
inc
push
into
mov
pop
jbe
pop
and
ret
sub
add
mov
addr16
and
push
js
dec
cwtl
jmp
xchg
mov
fistpll
jbe
popf
cwtl
xor
pop
mov
inc
enter
sub
sub
jbe
mov
hlt
pop
sarb
cmpsl
ljmp
sarl
xor
mov
enter
cmp
dec
jmp
push
mov
xchg
in
int3
inc
int3
bound
or
adc
dec
inc
cwtl
push
xor
lcall
xor
or
jno
push
shr
getsec
into
xchg
scas
adc
xor
jp
sarb
je
fnstcw
push
inc
mov
cld
out
inc
xchg
pushl
jns
sbb
fisttpll
cmp
mov
outsb
sbb
mov
pop
repz
icebp
popa
fdivl
sub
push
bound
in
or
inc
out
jmp
pop
repnz
pop
mov
stc
sbb
sahf
inc
xchg
jmp
bound
push
sbb
cmp
inc
dec
add
xchg
jmp
dec
adc
icebp
ljmp
sbb
mov
mov
shlb
and
sbb
out
dec
sbb
daa
dec
adc
aad
and
xchg
cmpsl
xor
and
pusha
cmp
outsb
stc
imul
adc
jnp
shrb
xor
mov
or
sbbl
aad
mov
or
ret
mov
enter
jnp
fstpl
dec
push
add
cmp
repnz
push
sbb
stc
hlt
pop
fdiv
mov
and
lods
or
ret
test
shll
in
mov
and
pop
xor
xor
repz
test
cmp
loopne
cmp
mov
jp
icebp
lret
int
into
mov
and
ret
repnz
shl
xchg
mov
pusha
xor
jne
xor
xchg
add
mov
int3
xchg
pusha
add
jo
mov
cmp
inc
dec
in
mov
sbb
jecxz
stos
inc
jp
cmp
cs
or
dec
orb
test
lods
mov
pushf
push
mov
inc
ja
mov
dec
or
pushf
inc
jle
mulb
sbb
ss
add
nop
lock
push
js
xor
xchg
cmp
in
fstpt
xor
mov
pushf
mov
jns
mov
out
cmp
jo
inc
lret
jno
int
jae
cmpsl
insb
ficoml
clc
call
cmc
and
xor
lea
gs
push
sbb
sub
shll
inc
clc
add
aad
add
imul
test
cmp
pusha
mov
outsb
and
inc
out
inc
lahf
out
mov
test
lods
sbb
jns
push
aas
xor
ret
outsb
shlb
sti
add
xchg
lods
dec
loop
xor
sahf
popa
in
mov
aaa
in
std
and
addr16
mov
inc
push
out
jbe
fcomip
cltd
sbb
sbb
aaa
sbb
imul
xlat
lret
mov
mov
pop
fcmovne
sarb
push
jl
pop
mov
xor
cltd
gs
iret
pop
nop
xchg
mov
mov
pop
mov
pop
addr16
loop
push
cwtl
in
xchg
dec
mov
push
lret
dec
ss
adc
imul
pushf
mov
hlt
mov
cld
js
sub
jle
int
loope
push
jmp
push
lock
cmp
and
enterw
popa
fcmovb
and
insb
dec
dec
addr16
mov
stc
jl
cltd
dec
cmp
inc
lcall
stos
repnz
bound
cmp
add
pop
cli
insl
fcomps
xor
lret
loopne
dec
adc
mov
fisttpl
xor
xor
xchg
adc
out
sbb
daa
scas
cli
adc
jl
sbb
jnp
mov
push
out
into
mov
dec
cmp
insl
out
jnp
jb
and
xor
leave
mov
ret
xor
inc
or
xlat
fldenv
cmc
out
mov
pop
movsb
sbb
pusha
mov
outsb
into
mov
mov
xor
jge
xchg
shl
lods
sub
mov
mov
xchg
andl
inc
jns
mov
xlat
cld
loope
rolb
ds
scas
lods
push
or
call
push
inc
xlat
pop
jnp
dec
xchg
popf
cmp
cmp
jl
andl
mov
imul
xchg
xor
dec
mov
lock
xorb
data16
dec
es
xchg
xchg
or
and
rclb
inc
in
mov
jl
lahf
aas
out
sahf
xor
call
adc
nop
loop
push
popa
imul
seta
add
idivl
sub
push
repnz
mov
xchg
adc
mov
negb
mov
roll
sub
push
inc
insl
or
inc
test
enter
mov
sbb
cmp
popf
les
pusha
push
mov
or
mov
mov
and
fidivrl
jmp
nop
adc
sbb
ja
xchg
aas
or
inc
lods
xor
jne
movsb
xchg
add
fisttpl
repnz
lret
jmp
jg
xchg
sar
inc
call
test
dec
test
mov
stos
sbb
xor
cmp
arpl
aad
push
in
stc
dec
cmc
rorl
jle
mov
lcall
lret
pop
mov
imul
cwtl
inc
sub
inc
mov
mov
mov
lahf
das
ret
pop
insl
add
rcpps
mov
faddl
mov
sub
pop
jnp
sarl
add
pop
sbb
mov
es
jae
in
ja
daa
and
xor
movsl
xchg
pop
rcrl
std
jne
nop
int3
dec
vcmppd
hlt
pop
fidivrl
cld
lcall
jae
sarb
test
inc
bound
into
xor
gs
lods
push
jb
mov
jl
xor
leave
add
lock
idivl
js
mov
rclb
push
addr16
xchg
pop
mov
xlat
fwait
hlt
aas
push
mov
mov
or
les
push
xor
mov
fdivrs
jl
hlt
fcompl
xchg
inc
pop
pop
outsl
cmp
inc
sbb
dec
stc
orb
jae
add
inc
aaa
push
mov
and
cli
call
push
dec
jp
sub
testl
addr16
push
rorb
bound
fsts
repz
outsl
lods
scas
sbb
push
adc
fdivr
inc
pushf
cli
adc
push
mov
shl
mov
xor
mov
fistpll
into
and
fs
int
push
lret
xchg
icebp
jo
pop
push
lds
cmpsl
xor
or
scas
rol
rolb
icebp
adc
adc
loopne
mov
stc
inc
mov
add
sbbb
test
mov
jne
mov
sub
jp
inc
push
push
je
dec
jae
es
js
cmc
jl
pop
sbb
sub
and
lds
hlt
mov
inc
addr16
in
in
in
data16
lcall
adc
cwtl
xor
pop
out
iret
xchg
jge
out
fcomp
std
lcall
movl
sti
cs
pop
dec
fs
inc
mov
in
mov
cld
jo
jbe
cmp
mov
pop
imul
das
fwait
ljmp
insb
push
push
cmp
out
rcrb
test
sbb
fstps
sub
test
pop
inc
xchg
das
mov
inc
lret
dec
xlat
cwtl
pop
add
popf
and
cvtps2pi
cmc
and
and
cld
sti
add
jnp
sbb
mov
in
test
lods
sahf
or
sbb
mov
aas
int3
icebp
or
mov
xor
push
sub
cltd
pop
fisubrl
int3
or
lock
push
sbb
mov
loop
repnz
outsb
adc
jbe
mov
jmp
daa
insb
lret
mov
inc
mov
mov
inc
rorb
popa
xorb
lcall
sbb
jns
sub
and
or
je
jo
bound
fs
lret
inc
jnp
mov
rcrb
cli
inc
into
dec
cmp
cmpsb
dec
outsl
imul
cmpb
pop
out
cs
outsb
rcll
rcrl
sub
mov
es
mov
jmp
movsb
push
xor
mov
repnz
inc
dec
imul
fsubrl
das
js
shl
inc
and
fcoml
mov
into
lea
mov
repz
push
cmpsl
js
orb
xchg
pop
add
xchg
adc
pusha
int
leave
push
mov
pushf
pop
dec
mov
push
mov
jns
sbb
sbb
out
popf
outsl
mov
movsl
aam
imul
pop
cmp
shlb
ljmp
and
xchg
fsubrl
cli
sbb
mov
or
and
jge
pop
lahf
inc
sti
sub
add
sti
int
out
clc
movsl
mov
ja
xchg
sub
mov
add
flds
jns
ja
push
push
pop
mov
stos
les
pop
push
std
jns
dec
je
jl
mov
ja
push
shlb
incl
shlb
and
je
int3
mov
lahf
sbb
aaa
xor
imul
or
scas
stc
mov
or
push
pusha
adc
imul
and
cs
jbe
push
adc
les
leave
outsb
dec
pop
js
add
mov
aad
mov
or
cltd
int3
adc
sbb
out
fcmovnb
or
les
lock
pop
testb
mov
das
jo
mov
adc
out
cwtl
adc
fwait
jnp
out
out
or
adc
mov
testb
flds
push
xor
ret
cmc
mov
ret
andl
fwait
daa
pop
cltd
aas
sbb
icebp
or
sub
xchg
imulb
fistpll
mov
mov
fwait
mov
scas
sub
mov
rcll
insb
imul
xor
loop
scas
push
mov
sbb
xor
into
push
dec
inc
inc
insb
je
mov
loop
adc
and
jge
scas
lods
pop
cs
loopne
or
insl
mov
sbb
cmc
mov
in
adc
mov
ret
jo
insl
lcall
frstor
sub
je
xor
aas
pop
scas
lcall
or
mov
mov
shlb
adc
xchg
test
pop
sub
and
lcall
jg
data16
bound
adc
lcall
aad
dec
xor
gs
jae
mull
shlb
inc
iret
rcl
fnstenv
pop
jae
mov
push
mov
dec
push
fadds
lods
xor
stos
jae
push
and
push
mov
data16
nop
stos
rcl
je
imul
fldenv
test
fmuls
xlat
mov
sarb
pop
fiaddl
not
sbb
mov
push
es
xor
add
push
shll
sub
push
pushf
mov
loop,pt
add
ret
stos
and
int3
lret
xchg
stos
les
jo
dec
pop
mov
in
mov
repz
test
and
mov
jae
loop
mov
cltd
bound
mov
jmp
mov
push
mov
int3
mov
mov
mov
cli
sbb
loop
icebp
add
xchg
inc
and
xor
sub
cli
jg
jb
mov
and
or
fcmovb
or
or
xchg
loopne
int3
sub
ficomps
test
mov
mov
dec
cld
icebp
xor
andb
pop
stc
push
gs
sub
inc
popa
inc
jl
mov
push
or
test
xor
push
ja
std
lret
inc
lahf
mov
xchg
xor
dec
pushf
dec
ret
add
fbstp
sub
roll
movsb
fsubl
into
mov
mov
pop
jg
push
in
xchg
xlat
xchg
push
push
mov
push
mov
mov
and
pop
icebp
push
ret
popf
shl
stos
stos
sub
shr
ds
jbe
jae
add
dec
mov
sbb
inc
jp
test
arpl
imulb
cmp
shl
iret
cmpsb
rclb
xor
push
or
push
inc
js
flds
or
pop
pop
lods
adc
cmp
sub
lret
lret
pushf
lods
mov
scas
mov
or
outsb
cltd
jmp
and
sub
rclb
and
push
shll
jae
andl
adc
popa
rcll
inc
repz
mov
xor
inc
loope
shll
jae
andl
adc
popa
rcll
inc
repz
xchg
adc
and
push
shll
jae
andl
loope
add
push
jecxz
rep
add
adc
and
rcl
jecxz
mov
jl
cmp
dec
jmp
or
sbb
bound
jb
mov
jge
push
pop
aas
push
aam
mov
mov
nop
lret
mov
inc
sbb
bound
jb
add
dec
and
adc
lcall
xorb
ljmp
push
sbb
dec
cmp
push
lcall
orb
cltd
sub
inc
bound
sub
adc
icebp
cmc
loope
jns
ljmp
stos
rorb
jno
mov
dec
lods
sbbb
into
scas
sub
iret
cmpsl
jb
pusha
inc
out
sti
jne
scas
or
rcr
addb
cli
dec
mov
xchg
push
xor
rcll
test
int3
sub
cli
or
lret
mov
inc
pop
inc
cs
adc
std
stc
adc
adc
xchg
dec
shll
ds
xor
lock
adc
pop
out
push
cmpsl
std
rorb
ret
outsl
adc
dec
ret
jecxz
add
pop
cli
mov
xchg
pop
adc
cmp
inc
mov
cltd
mov
sbb
bound
jb
adc
jp
push
lcall
lcall
subl
aaa
dec
pop
cmp
sub
je
outsl
cmp
ds
mov
cltd
imull
sub
pop
add
outsb
adc
and
popa
push
adc
mov
xorb
daa
pop
ds
push
dec
sbb
je
dec
and
push
lcall
sbb
lret
mov
inc
sbb
bound
jb
add
dec
and
push
lcall
sbb
lret
mov
inc
sbb
fst
add
outsb
jo,pn
and
imull
jecxz
xchg
adc
cli
out
iret
jns
dec
ljmp
fisubrl
das
fldt
movsl
int
xchg
sbb
mov
insl
iret
stos
and
jp
stos
mov
dec
jns
jp
aaa
dec
out
iret
cs
and
repz
test
pop
nop
mul
jmp
leave
push
or
mul
push
xchg
loope
or
inc
adc
enter
out
inc
or
push
aad
int
aad
dec
add
daa
negb
xor
hlt
fwait
cs
push
outsb
call
dec
mov
jecxz
xor
int
pop
in
jmp
pusha
adc
ret
jb
jle
push
mov
out
ret
dec
jg
pop
sub
mov
cmpsl
jle
sub
inc
inc
pop
movsl
enter
loopne
push
lods
das
cld
ret
xor
int3
scas
scas
mov
es
cmp
cmp
inc
mov
outsb
add
dec
sub
in
ror
adc
adc
mov
pop
cmpsb
add
push
and
mov
and
cmpsb
dec
lcall
mov
je
jle
test
imul
dec
cltd
pop
inc
das
pop
xchg
and
aad
stos
subb
add
fsubs
push
fldcw
int
xor
arpl
mov
fstpl
pop
fstpt
mov
js
dec
sar
lock
repz
pop
add
inc
dec
xorb
in
mov
xlat
pop
std
in
cmp
sbb
sub
push
daa
lds
or
cwtl
out
icebp
add
xchg
cmpsl
xor
arpl
les
ss
nop
mov
repnz
pop
leave
imul
ja
or
push
xchg
mov
push
out
push
and
push
daa
inc
das
enter
icebp
stos
sti
mov
or
cli
imul
enter
push
push
pusha
bound
push
add
jmp
or
dec
jge
jo
js
jg
mov
pushf
orb
mov
mov
clc
jle
aaa
xchg
mov
lock
test
cmpsl
ss
xchg
inc
insl
lret
rol
aad
mov
dec
cmp
lds
ret
pop
push
aas
popf
jo
pop
dec
push
xor
or
add
sahf
popf
data16
xor
sbb
ret
mov
stc
and
xor
mov
das
fstpl
lret
cmp
cltd
data16
loop
lret
clc
in
push
pop
sbb
sub
cmpsb
jg
fstps
outsl
test
iret
adc
out
int
daa
nop
in
xchg
rsqrtps
adc
out
or
lds
adc
mov
imul
adc
sub
ja
push
sub
sbb
cwtl
or
jle
push
jle
mov
or
jne
cmp
mov
inc
insb
and
mov
aas
stc
leave
in
xor
scas
jnp
repnz
lds
lret
sbb
and
lret
cmp
mov
cmp
idiv
xchg
fildl
sti
mov
dec
scas
aas
pop
add
or
jbe
mov
mov
lods
lret
popf
jnp
aaa
pop
mov
and
add
push
js
jg
adcb
neg
mov
or
clc
push
arpl
or
mov
or
mov
fstpl
pop
xchg
mov
mov
in
lret
leave
ljmp
repz
loopne
ret
dec
add
adc
ret
cmp
inc
lea
dec
test
test
xchg
mov
leave
sti
push
insb
mov
push
sarl
mov
aad
and
testl
mov
ljmp
jne
push
aad
cmc
call
ds
and
xchg
imul
add
addr16
add
xchg
shlb
rcrl
add
jg
in
mov
xor
lods
mov
jbe
add
jno
ja
push
cs
cmc
popfw
sbb
mov
jmp
les
jne
rcr
mov
int3
mov
mov
xchg
jecxz
fstl
mov
push
dec
add
mov
rcl
adc
mov
cwtl
ret
test
out
or
ror
lods
shrb
adc
and
adc
lcall
jne
add
fmulp
sbb
xchg
out
and
das
cmp
js
or
xor
bound
mov
cltd
stc
hlt
out
jg
cmp
stos
dec
jecxz
mov
inc
cmp
and
lock
or
adc
xlat
test
sub
cmp
inc
mov
stc
pusha
xor
jo
push
movsl
cltd
push
mov
data16
pop
dec
add
cmpb
gs
cmp
sbb
push
adc
notb
popf
pusha
lahf
or
push
arpl
mov
adc
cmp
shlb
mov
mov
popa
push
sbb
stos
push
cmp
out
dec
ljmp
mov
push
mov
mov
stc
hlt
cmp
popa
scas
xchg
mov
push
cltd
lds
hlt
jne
jmp
or
lret
rcl
stos
add
add
pusha
mov
jbe
pop
sub
scas
xor
add
push
jmp
cld
adc
pusha
xchg
iret
dec
stos
stos
cmpsb
scas
jmp
jl
xor
jmp
mov
daa
adc
mov
stos
frstor
sub
fs
pop
addb
inc
mov
movsl
pop
pop
dec
dec
pop
dec
fisttpll
sub
xor
cwtl
hlt
sahf
fs
ljmp
imul
cmp
insl
xor
jmp
sbb
imul
mov
sti
add
in
sti
push
mov
sub
mov
xchg
pop
sbb
es
scas
xchg
jb
sbb
inc
or
xchg
int3
inc
rorl
push
xchg
mov
cmp
aam
inc
mov
push
popl
psubusb
fs
or
cmp
push
stos
shrl
or
fxch
sarl
in
lahf
mulb
aam
jae
cmpl
mov
sbb
inc
xchg
cmp
scas
cmpsb
adc
inc
int
add
hlt
inc
jmp
mov
out
mov
popf
sub
repz
filds
add
es
hlt
inc
int3
movsl
jbe
ja
ret
sub
addr16
gs
mov
add
xor
xchg
or
test
push
cmp
fadds
lahf
test
inc
in
lret
push
cmpb
jbe
aam
pusha
call
adc
or
sub
out
cmp
or
inc
jmp
lea
pop
xchg
and
loopne
mov
in
jno
lds
jmp
setns
mov
jnp
shlb
mull
pop
pop
xchg
pusha
fnop
push
inc
sbb
arpl
arpl
push
sbb
mov
scas
mov
push
mov
dec
pushf
jnp
repnz
xor
jns
pusha
sbb
lds
push
jno
test
cmp
repnz
mov
not
sbb
test
xchg
lret
shl
btr
mov
scas
dec
and
inc
push
or
push
shll
adc
aas
or
roll
or
pop
imul
jne
jns
pfcmpgt
mov
or
inc
sbb
iret
cs
fldt
add
and
rclb
jne
pusha
aas
push
icebp
pop
mov
scas
jg
das
cmpsb
fcmovu
cmp
fistpll
mov
mov
sarb
add
sahf
pop
dec
mov
filds
fists
sub
call
je
and
cmpb
push
repz
sbb
lret
loop
sub
aas
push
xor
test
pop
jmp
mov
xor
fmuls
xor
jb
repz
push
or
cld
xlat
add
mov
xchg
inc
lods
or
jne
cmp
pop
loop
adc
jge
inc
sbb
outsl
ljmp
push
nop
add
popf
ljmp
in
and
sarl
jne
imulb
test
sub
loop
movsb
pop
or
mov
shl
jbe
test
cld
arpl
stos
pushf
repnz
xchg
dec
pop
mov
cmp
xchg
mov
fsubl
push
cmp
dec
rcll
sbb
rcl
push
aaa
mov
cmp
std
xchg
imul
pop
mov
cmp
test
lahf
bnd
cmc
int
dec
es
movsb
stos
adc
dec
enter
or
sbbb
inc
mov
xor
ss
pop
sub
inc
mov
push
leave
pop
cld
scas
push
mov
movsl
xor
xlat
pop
and
test
pop
jno
push
lcall
cli
dec
lock
dec
je
inc
mov
adc
loop
mov
test
xchg
fidivs
jb
ret
jno
dec
or
cmc
sbb
gs
mov
push
fwait
mov
stos
xchg
hlt
ret
adc
dec
jg
enter
and
xchg
shl
xchg
pop
mov
sbbl
xchg
js
js,pt
pop
insb
mov
test
mov
inc
pop
roll
and
push
in
mov
ds
jo
dec
sbb
std
leave
popf
enter
sbb
fsubr
out
aaa
push
mov
out
aad
mov
sbb
add
ss
jnp
jno
or
test
push
movsl
addr16
dec
xor
aam
test
jmp
repz
out
add
divl
mov
mov
push
lds
fnstcw
inc
and
mov
mov
xor
cs
sub
pop
ds
push
inc
push
xor
lods
enter
jbe
lea
int3
popf
popf
outsl
movsl
xchg
insb
test
cmpsl
arpl
call
and
lock
dec
push
mov
shlb
inc
mov
call
clc
dec
mov
jno
frstor
es
fidivs
out
and
loopne
jne
rol
pop
icebp
jns
ret
inc
or
sbb
iret
ljmp
idivl
pop
mov
dec
mov
and
mov
sahf
es
sbb
jmp
test
scas
int3
mov
add
pop
sbb
sbb
sbb
pop
xor
add
lea
sub
dec
or
call
lcall
xor
fisubl
outsl
cld
lods
add
fs
ficompl
pop
add
push
into
cmp
call
sub
dec
push
cmpsb
inc
push
cmp
adc
pop
pop
inc
sub
aam
push
xor
lods
cmp
popa
shlb
sub
push
cmp
push
sahf
mov
shr
mov
cmp
or
mov
icebp
das
push
sub
push
ja,pn
or
in
jns
sahf
sahf
in
push
addb
push
jbe
lret
xor
push
fldt
cltd
inc
pop
dec
mov
push
mov
xor
dec
in
cmp
cmp
and
in
push
aad
push
int3
loope
jle
xchg
or
repz
out
lret
jmp
or
sbbb
xchg
and
arpl
push
cmp
xor
rorb
xchg
or
mov
cmp
and
inc
jno
mov
movsb
gs
pop
test
das
mov
jae
cmp
stc
add
adc
lods
add
lods
push
mov
jno
or
mov
movsl
subb
fldenv
repz
faddl
cmp
push
pop
mov
mov
xchg
inc
stos
mov
sub
test
movsl
imul
push
add
leave
cmp
scas
fcmovu
xchg
jbe
jge
jge
jmp
mov
mov
cwtl
xchg
inc
sbb
subl
or
mov
mov
cmp
mov
out
or
adc
fstps
xchg
push
sbb
push
dec
xchg
test
lahf
sub
int3
pop
dec
sbb
les
or
inc
mov
xchg
nop
sti
ficompl
mov
rcr
mov
jnp
pop
pushf
mov
adcb
xchg
xor
xor
leave
xchg
aaa
cmp
and
xor
jbe
incl
pop
mov
into
xchg
xor
mov
push
stc
aas
out
jae
push
push
pop
xchg
sub
shlb
mov
mov
xchg
cmp
jo
xchg
andb
xchg
jb
mov
je
mov
xchg
push
aad
xchg
ss
rorb
add
mov
sbb
xor
stos
ret
fdivr
gs
pop
shlb
lcall
in
cli
pop
aam
dec
int3
xor
pop
fisubl
or
loop
sub
dec
pop
hlt
loopne
notb
setg
mov
dec
fxch
dec
cmc
sbb
mov
and
sbb
ret
jbe
cmp
rol
cs
rolb
orl
xchg
mov
push
push
stos
or
sub
pushl
in
sbb
ja
cmp
fwait
push
pop
adc
xor
lcall
inc
filds
dec
jl
xor
aad
testb
test
shrl
pop
fwait
pop
stos
xor
mov
movsb
call
inc
pop
loope
jmp
and
jne
mov
js
cld
in
adc
cmpb
shll
es
dec
sub
shll
out
test
pop
add
pop
ljmp
lahf
fdivs
ret
push
cmc
or
jno
and
inc
mov
or
cmp
mov
jo
mov
xor
and
jne
mov
add
movl
add
push
nop
add
mov
inc
push
jo
cli
test
mov
push
jne
call
xlat
dec
mov
les
sbb
insl
mov
sahf
andl
inc
xor
test
inc
aad
sbb
jge
or
cltd
or
fidivl
or
js
inc
add
adc
mov
inc
mov
cmp
mov
jns
fistl
push
inc
into
test
push
or
ljmp
and
test
adc
adc
mov
xor
fnstenv
pop
adcb
jg
xor
adc
repz
pop
lods
lahf
je
dec
cmpsb
pusha
les
loopne
sub
mov
ds
out
mov
inc
cmp
adc
sbb
cmpsl
cmp
sub
divl
inc
mov
sub
xlat
mov
and
mov
adc
mov
pop
jge
xchg
into
jle
push
adc
and
stos
mov
mov
int
data16
and
inc
dec
add
pusha
fldl
jg
jmp
mov
repz
outsb
jae
adc
lock
out
push
push
inc
sbb
sub
xor
pushf
out
stos
stos
mov
mov
fabs
js
in
xchg
fimuls
add
push
notb
lcall
push
add
divb
cmp
mov
dec
jae
jnp
movsl
dec
hlt
and
xor
mov
push
cmp
push
add
fdivrs
pop
inc
jbe
pop
jmp
outsb
add
imul
out
xchg
fs
xor
push
mull
cmp
loop
pop
mov
out
dec
sub
push
mov
popf
cmp
mov
mov
aam
outsl
dec
cmp
rorl
sub
or
ds
sbb
jnp
sbb
in
adc
jmp
lock
pop
lods
movsl
sbbb
xchg
and
fists
shll
add
push
mov
mov
add
idivl
xlat
jg
vmwrite
dec
cltd
out
jge
mov
arpl
push
dec
pop
inc
xchg
test
xchg
mov
jecxz
adc
jp
mov
fucomip
ficoml
test
lret
dec
test
mov
inc
and
notl
out
add
sti
xchg
push
into
sbb
pop
cmpsb
imul
add
movsb
add
stos
rcll
adc
sub
xchg
jmp
xchg
fs
movb
lcall
inc
les
in
mov
out
out
jnp
gs
cmpl
daa
test
xor
inc
xlat
cmpsl
lret
scas
mov
push
data16
or
push
xor
mov
xor
sub
cltd
inc
push
and
inc
test
je
jbe
or
gs
fistl
and
dec
ljmp
mov
fptan
inc
add
cs
dec
xchg
pop
shlb
sub
cmp
mov
lea
test
shll
xchg
out
pop
jnp
loope
or
dec
pop
fisubl
adcb
cmpsl
arpl
stc
jecxz
adc
ret
jmp
mov
inc
jbe
cmpsb
fiadds
in
xor
repnz
mov
sti
arpl
adc
loop
scas
sbb
mov
lahf
lcall
fisubrl
cmp
daa
mov
and
push
xor
mov
daa
stc
loope
sub
adc
push
mov
gs
jb
mov
jle
or
dec
cmc
lods
in
add
xor
loop
xor
mull
add
cmpl
add
dec
xchg
push
scas
xor
insl
push
lds
imul
dec
xor
cltd
fidivs
or
fs
and
pop
add
lret
scas
mov
enter
into
aad
and
pop
loopne
mov
mov
xchg
push
xchg
clc
sbbb
mov
mov
ror
movsb
jbe
aas
mov
mov
test
imul
mov
add
adc
loopne
jnp
dec
pop
popa
or
out
jl
push
shrb
dec
mov
fidivs
imull
repnz
push
lea
push
sbbl
mov
sub
sbbb
push
std
inc
dec
mov
out
cmpsb
in
pop
cwtl
imul
xchg
ret
cmp
jbe
sti
fidivrs
dec
data16
cmp
push
out
inc
and
pop
pop
scas
mov
sbb
flds
push
mov
insb
dec
pop
out
icebp
mov
mov
adc
xor
add
pop
and
test
xchg
stos
add
test
es
les
sub
sbb
out
mov
insb
enter
mulb
dec
mov
jg
loop
xchg
jne
fs
push
or
sbb
sub
inc
pop
push
push
mov
xor
jno
aad
loope
lret
stos
gs
push
shlb
xchg
lea
mov
call
dec
add
push
decl
push
into
aam
mov
pop
push
pop
push
jb
xchg
jmp
sahf
cs
inc
mov
cmp
jl
arpl
in
xor
inc
add
inc
mov
jb
loop
fmulp
ss
test
cmp
mov
or
push
ss
fsubp
outsl
mov
fistpll
icebp
dec
dec
sarl
test
cwtl
jmp
clc
pushf
test
and
mov
jae
fadd
dec
xchg
ret
scas
jg
xor
test
iret
dec
icebp
push
fidivrl
lcall
sub
ss
test
mov
lds
cld
ret
push
push
mov
add
andl
add
jp
sub
rol
mov
mov
pop
outsb
negl
mov
sbb
out
xchg
dec
adc
xor
cmp
sub
in
or
adc
popf
fdivs
jnp
sarl
movsl
dec
xlat
std
les
and
mov
pop
mov
outsl
xor
repz
movsb
add
popf
in
jns
xor
and
out
lods
pop
cmpsl
stc
dec
sub
sbb
aaa
sbb
pushf
mov
adc
dec
push
orb
mov
xorl
adcb
inc
mov
loopne
jns
dec
xor
jp
xchg
dec
imulb
fisttpll
out
outsb
rol
test
mov
shll
inc
or
divb
jbe
mov
jne
jbe
mov
jns
push
mov
ljmp
xchg
or
addr16
mov
pop
add
sti
imul
mov
imul
addb
aam
adc
push
xor
push
jecxz
aam
pop
testb
pushf
jo
cmc
cli
jp
push
lock
orb
xor
iret
stos
shlb
jno
ljmp
sub
shlb
popf
jge
aaa
bound
and
mov
out
std
mov
in
push
mov
cmp
loop
push
ret
xlat
mov
sahf
jg
sbb
xchg
iret
xor
pop
push
fdivrl
mov
cld
pop
push
inc
inc
jmp
adc
xchg
daa
ja
mov
pop
jmp
loop
lret
out
nop
pop
mov
xor
shr
pop
dec
adc
enter
dec
xlat
cmp
jg
frstor
scas
cmpb
fmuls
repz
or
mov
or
jb
add
dec
and
push
lcall
sbb
lret
mov
inc
sbb
bound
jb
add
dec
and
push
lcall
sbb
lret
mov
inc
sbb
bound
jb
add
dec
and
push
lcall
sbb
lret
mov
inc
sbb
arpl
jb
add
dec
mov
lcall
cmc
push
sbb
mov
push
test
mov
jle
add
xor
rcrl
sub
cmp
dec
sbbl
mov
push
test
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
push
test
mov
adc
and
xor
imul
icebp
dec
les
sub
adc
test
shll
mov
jae
rcrb
and
sbb
pop
rcll
inc
mov
sbb
adc
adc
sub
jl
hlt
pop
jge
icebp
sub
ja
repnz
ret
sbb
and
fnsave
and
push
jmp
js
mov
imul
adc
sbb
mov
nop
pop
repz
mov
inc
mov
add
add
xor
mov
cmp
mov
sbb
js
mov
pusha
scas
xchg
pop
inc
mov
je
pushf
dec
push
call
rcr
icebp
push
lock
xchg
or
mov
mov
inc
cwtl
push
test
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
in
cs
push
out
or
sbb
outsl
jl
js
jge
pop
mov
into
loopne
loop
mov
in
push
lret
popa
stc
add
push
mov
movsb
push
cmpb
mov
les
loope
or
adc
add
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
push
test
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
sbb
int
lods
mov
and
pop
js
xor
jb
xchg
push
xlat
leave
jmp
mov
fmul
xor
icebp
sti
ss
out
es
lahf
jge
mov
xchg
outsl
push
xchg
jecxz
inc
out
mov
push
push
mov
pop
push
imul
sub
push
andl
and
sbb
push
pop
jo
add
fcom
push
xchg
cmp
call
jno
ret
movsl
dec
or
fwait
push
mov
in
push
pop
xor
mov
push
ret
test
fstpt
push
es
push
xor
mov
pop
int
setbe
out
cmp
jecxz
jno
pop
sbbl
ret
mov
dec
cli
jecxz
lds
les
jle
rcll
add
orb
call
data16
addb
and
jnp
and
fldenv
stc
sub
push
inc
xchg
movsb
jle
repz
mov
data16
mov
je
mov
xor
jge
xlat
pop
aaa
test
xchg
aad
mov
xor
insl
xchg
aaa
mov
repnz
fsub
fidivrl
or
or
mov
nop
pop
jge
out
lock
test
out
cmp
mov
out
add
fwait
mov
jmp
hlt
js
sbb
jae
test
adc
sar
bound
sub
dec
adc
and
add
pop
bound
andb
fwait
push
sbb
in
xor
into
out
sbbl
insb
adcl
push
add
push
jns
ret
adc
push
push
or
adc
and
lcall
xlat
ret
adc
jecxz
ljmp
mov
test
mov
outsl
int
mov
push
shrl
enter
xor
push
sub
nop
pop
jg
mov
and
xor
xchg
mov
sbb
add
shrl
sub
mov
cmc
adc
xchg
cmp
jb
mov
push
xchg
scas
popa
lock
vpaddq
sub
inc
pop
jne
mov
ds
cltd
add
push
push
movsl
push
ror
mov
push
incb
adc
in
jnp
pop
rcrb
sub
sub
xor
dec
xchg
cmpsl
mov
ds
push
dec
ret
inc
bnd
mov
movsb
adc
ljmp
sub
pop
xor
pop
and
dec
mov
mov
xchg
pop
fbstp
out
mov
popf
imul
dec
ficoml
lods
bound
xor
fldt
inc
inc
jo
cmp
jmp
pop
add
movsl
inc
xchg
cli
in
nop
scas
lret
mov
outsb
xlat
or
out
bound
gs
jl
out
mov
mov
xchg
xchg
mov
outsl
cltd
or
mov
or
out
fwait
mov
add
dec
xchg
mov
sub
and
push
aas
pusha
push
out
xchg
dec
push
insb
sub
xor
push
fsubp
xchg
das
in
jnp
ret
pop
out
sbb
pop
repz
mov
xlat
dec
lock
addb
dec
iret
sbb
and
add
js
jecxz
repnz
aas
mov
hlt
es
inc
xchg
jge
jbe
sbb
jl
gs
adc
jl
fbld
inc
mov
lahf
int3
xor
sub
int3
dec
notl
adc
mov
shll
xor
pop
xor
xor
xor
mov
inc
push
jne
and
cmp
dec
push
test
and
xchg
or
xchg
jbe
sub
sub
or
jecxz
mov
pop
popa
ret
dec
outsl
mov
leave
add
ja
and
bnd
dec
sbb
ljmp
mov
sbb
jl
pushf
and
ss
test
push
int3
xor
aaa
add
and
movsl
xlat
mov
fiadds
mov
fisttpl
xchg
or
sub
inc
mov
sub
pop
jnp
xchg
arpl
mov
or
lahf
cmp
pop
idivl
or
inc
jg
jp
xor
in
imull
std
sbb
dec
in
aam
sarb
icebp
jae
xor
loop
jle,pn
add
arpl
xor
fnstcw
pop
mov
es
enter
fldl
pop
add
shll
loop
js
mull
repz
cmp
mov
pop
loopne
inc
fs
shlb
jbe
testl
mov
adc
popa
retw
inc
xchg
and
adc
add
ljmp
inc
mov
cmp
inc
xchg
mov
call
pop
into
inc
lods
pop
je
xchg
mov
push
arpl
lds
das
fldt
iret
dec
shrl
aas
mov
lock
js
or
mov
push
cmpsl
xchg
insl
and
sti
or
imul
out
shr
fwait
jmp
jmp
js
lods
in
jns
dec
cwtl
mov
jns
inc
das
jbe
cmp
roll
push
jo
iret
repnz
adc
pop
or
or
hlt
insl
cli
adc
cmp
pop
jmp
lods
mov
mov
jnp
and
cmpsb
mov
pop
sub
icebp
adc
jge
push
fldenv
sub
cmpsb
sub
in
cltd
shl
fucomip
pop
repz
dec
mov
mov
push
mov
clc
lds
sbb
insl
jge
or
ficoml
insl
call
or
call
andb
data16
sbb
inc
jl
cmp
fbstp
inc
rcll
sub
inc
pop
sub
and
lahf
fwait
or
shll
pop
and
mov
xrelease
mov
jne
enter
push
shrl
mov
push
repz
insl
push
imul
hlt
jecxz
pusha
mov
mov
movsb
loopne
xchg
cmp
ja
scas
mov
mov
xor
sbb
les
jg
ret
push
inc
mov
add
xchg
sahf
daa
cli
mov
mov
xchg
pop
mov
pusha
cmp
in
add
xchg
dec
inc
xlat
call
out
push
mov
fstps
pop
jecxz
loopne
bound
ss
cmp
or
movl
ja
xchg
push
das
mov
jmp
or
and
in
int3
mov
pop
add
cld
adcl
and
ljmp
inc
adc
pop
mov
sbb
sbb
cmp
ljmp
mov
lahf
bound
aas
push
js
mov
mov
inc
into
adc
jno
lret
jbe
imul
outsb
dec
rorl
dec
pop
push
xlat
hlt
jo
fldt
data16
mov
int
jo
jne
fldcw
scas
test
inc
sti
mov
imul
test
icebp
push
out
movsl
repnz
jae
and
test
push
rsm
mov
in
jo
shll
pushf
lods
mov
rcll
cmp
out
jbe
pop
in
ds
mov
jmp
mov
push
aas
arpl
dec
inc
arpl
sbb
out
nop
sbb
sbb
or
testl
xchg
and
mov
dec
adc
cs
sahf
and
adc
inc
mov
jg
ljmp
mov
test
es
sub
mov
lea
sbb
psrad
clc
gs
push
lea
stos
mov
mov
dec
adc
out
xchg
andb
icebp
sbb
push
pop
pop
sbb
inc
mov
int3
leave
cwtl
mov
mov
movsl
inc
cmp
jns
sti
or
inc
outsl
push
leave
mov
hlt
lea
sub
mov
cmpb
pop
ds
xlat
jnp
cmp
scas
rcrb
pop
mov
cmp
icebp
stos
inc
sub
hlt
mov
mov
cli
shl
call
imul
rolb
dec
adc
mov
std
js
dec
pop
insb
dec
jo
push
cmp
aaa
ja
int3
inc
pop
out
call
pop
pop
mov
push
mov
jno
and
inc
mov
pop
push
jo
mov
or
xchg
into
outsl
fdivrl
addr16
dec
mov
sub
scas
aad
movaps
xchg
pop
pop
das
movsl
lock
sbb
pop
pop
lods
cli
daa
cmp
dec
push
sub
test
imul
inc
add
fcomip
xchg
pusha
jb
inc
jp
add
jns
inc
mov
in
add
insb
test
adc
jp
fptan
stc
push
enterw
jle
pop
inc
cltd
cmc
mov
mov
rcrl
scas
jecxz
push
fwait
add
scas
scas
jge
cmp
jo
int3
adc
pop
and
pop
ds
cld
mov
xchg
pop
adc
cmp
mov
test
testb
stos
or
ficoml
push
sbb
and
xorl
into
aad
sbb
mov
jae
cmp
cmpsb
lret
dec
fwait
or
cmc
xchg
fwait
push
mov
dec
test
adc
lock
out
inc
xor
shlb
sbb
faddp
dec
outsl
subl
cmc
sbb
ds
mov
loopne
cmp
test
and
lea
and
scas
mov
cwtl
push
adc
inc
xchg
mov
cmp
icebp
imul
sub
add
aas
sub
mov
inc
aad
mov
into
and
mov
sub
dec
mov
mov
add
jg
movsl
xchg
pop
ljmp
fldl
jae
lods
sarl
scas
pushf
scas
adc
cmp
cmp
inc
in
sbb
sub
imul
xrelease
or
pop
or
xchg
dec
loope
sbb
sub
jp
test
mov
pop
int3
ljmp
fiaddl
cmp
lret
and
repz
cmp
test
enter
test
cmpsl
pop
seta
ljmp
inc
pop
pop
sub
mov
sub
pop
addb
dec
inc
jne
mov
js
mov
sub
lods
neg
push
mov
cmpsl
inc
mov
scas
movsl
into
adc
jbe
xchg
jp
lods
and
stos
imul
inc
lock
popa
xchg
or
push
sub
add
dec
jge
dec
or
jne
stos
pop
movsl
ret
sub
xlat
xor
lds
das
or
xor
adc
sbb
dec
fldt
adc
cmpsb
ret
cmp
enter
out
out
push
cmp
aad
aad
adc
dec
cmp
jne
lds
cli
mov
ljmp
jp
nop
xchg
xor
roll
jbe
int3
out
adc
mov
dec
pushf
sub
or
xor
sti
addb
jmp
jb
sbb
addr16
shll
bound
mov
sti
sti
popa
jo
add
repnz
and
out
mov
jl
int3
ljmp
repz
movsb
add
test
daa
les
mov
jns
pop
sahf
adc
sub
stos
push
sbb
lods
aam
leave
sbb
dec
adc
lods
shrb
lcall
outsl
popf
dec
out
and
and
mov
jmp
mov
out
outsb
shrb
pop
movsb
inc
out
push
jbe
insb
aaa
sbb
ds
jecxz
add
xchg
test
sbb
xor
nop
cli
sub
pushf
mov
jnp
mov
lcall
dec
xor
or
dec
and
ret
dec
dec
xchg
jns
push
or
rcll
cmpb
lret
pop
dec
push
fsubrl
mov
ret
fsub
cli
int3
movsb
mov
mov
imul
inc
shlb
loopne
mov
aaa
push
cmp
aas
ss
ret
cmp
aad
mov
push
cmc
jns
inc
das
das
push
mov
xchg
int3
js
mov
lahf
cmp
movsb
call
in
pusha
shlb
sbb
popf
cmpb
clc
sbb
fcoms
dec
in
pop
and
test
loopne
fwait
sub
cmp
rol
cltd
xor
shlb
push
out
cmp
xchg
push
push
add
sub
outsb
add
and
mov
lds
pop
dec
shr
jb
or
jp
arpl
xchg
pop
mov
blci
cli
jno
fcmove
pop
movsl
scas
xor
mov
es
adc
sub
lcall
pop
insl
out
xchg
cwtl
inc
stc
mov
decb
lahf
call
add
push
xchg
pushf
sbbl
cmp
hlt
xor
mov
jo
fldl
cwtl
push
call
jmp
mov
mov
data16
jp
popfw
sbb
pop
mov
fprem
sti
aam
into
and
and
cltd
stos
push
ljmp
push
mov
jo
fs
int
push
das
dec
scas
cmpsl
dec
icebp
stos
jl
adc
lea
jno
jbe
fldenv
scas
test
frstor
movb
push
mov
sub
add
leave
jns
sbb
cmp
xchg
sbb
cs
fists
xchg
and
int
jb
push
arpl
jl
call
stos
popf
adc
lcall
sahf
inc
insb
adc
repnz
xor
stos
cmp
xchg
xchg
int3
pop
sub
adc
push
jnp
setae
xor
push
or
sbb
out
int3
sub
cld
push
lret
adc
lret
cs
dec
test
clc
nop
rorb
mov
adc
mov
fwait
jns
arpl
and
loope
test
xor
addr16
xchg
es
hlt
pop
arpl
dec
push
cmp
sbb
mov
add
addr16
mov
jp
mov
test
cltd
addr16
sbb
jns
lea
inc
push
jg
cmpsl
push
fdivs
jmp
xchg
sub
aam
fistpll
adc
lahf
loope
push
fidivs
mov
fwait
xchg
std
les
into
jo
dec
sbb
movsl
stos
jnp
xor
lret
js
mov
ss
mov
iret
inc
call
xlat
les
std
imul
shll
fcoml
sub
adc
dec
sbb
shll
lods
mov
int3
and
cld
mov
or
lret
lods
and
cmpsl
mov
repnz
sbb
std
inc
mov
test
ret
subb
jle
test
mov
jne
and
dec
or
lret
cmp
xchg
jno
mov
nop
int
mov
pop
add
inc
repz
outsl
dec
lcall
in
push
cmp
xchg
inc
lds
mov
lret
sbb
xor
xor
popw
rorb
mov
mov
pop
ss
cmp
arpl
sbb
outsb
ja
xlat
dec
in
sar
sub
mov
or
jo
dec
dec
out
dec
aad
xor
adc
sub
and
decb
push
mov
std
push
push
dec
popa
iret
jns
mov
inc
stos
and
mov
push
pusha
xchg
in
loop
push
pop
fisubrs
or
cmpsb
sub
mov
int
jno
jnp
sbb
push
xchg
xchg
pushf
push
push
lret
mov
push
jno
popa
fcompl
sbb
rorl
push
inc
stos
stos
add
dec
lods
pop
push
rcr
mov
or
sahf
insb
inc
inc
xor
fbld
mov
cmpsl
outsl
or
data16
push
pop
test
jp
fimull
pop
pushf
xchg
fdivs
mulb
addr16
push
lret
dec
repz
int
add
shrb
repnz
les
mov
cmp
mov
shrl
and
lock
cmp
mov
push
push
pop
pop
pop
dec
fisttpll
lods
xchg
shl
add
loop
sahf
and
jnp
push
ret
nop
test
inc
outsb
inc
aam
js
ret
cmp
pop
clc
cli
jp
iret
loop
repz
mulb
jl
ss
fwait
popa
movsl
cmp
ss
pop
add
mov
mov
mov
add
jo
jne
sub
jo
fwait
fs
lods
popa
test
xchg
into
rcrl
insl
jecxz
cwtl
shll
inc
in
mov
or
loop
test
dec
adc
adc
mov
add
shrb
inc
mov
cmp
scas
shl
sbb
cltd
dec
push
cmp
cmc
xor
sbb
ret
push
and
add
repnz
loop
xor
sub
dec
aaa
fstp
inc
daa
push
mov
ret
jno
pop
rcrl
test
pop
std
popf
test
leave
hlt
out
inc
pusha
lods
mov
stos
popf
daa
fistl
in
iret
shll
sub
icebp
pop
cld
out
push
in
dec
jae
loopne
jo
jg
mov
push
mov
or
inc
cld
add
adc
pop
nop
sub
stos
sub
fisttpll
pop
out
sub
inc
push
pusha
or
fcoms
cltd
push
push
pop
xorb
test
cs
jo
xchg
arpl
xor
addb
les
jae
adc
jb
into
inc
pop
imul
cmp
or
xchg
xchg
push
jge
cmc
xchg
push
inc
bound
div
arpl
sti
xor
mov
pop
pop
out
stc
jge
xchg
test
pop
push
xor
dec
js
pop
adc
loopne
mov
out
and
or
sub
sahf
lea
addr16
dec
jge
or
or
loop
imul
arpl
addr16
sbb
cmp
add
cli
fcmovnbe
mov
test
mov
loopne
jno
xchg
inc
daa
into
or
sub
xchg
fcomi
pop
hlt
add
dec
mull
shrb
and
xor
jne
and
shrl
mov
je
dec
mov
dec
out
jg
mov
sub
ret
pop
daa
hlt
xor
repz
jno
sbb
mov
cwtl
arpl
insb
inc
dec
push
push
jne
lret
test
stc
push
loope
loope
pop
js
loope
inc
push
inc
mov
mov
fmuls
cwtl
mov
test
pop
xor
std
sbb
cmp
xlat
mov
movsb
xchg
subl
xor
gs
xchg
aas
ret
clc
lret
insl
daa
pushf
pushf
jns
sbb
xchg
mov
push
add
or
add
das
sub
dec
jb
push
test
mov
mov
pop
and
pusha
adc
lds
pop
repnz
jmp
pop
jmp
fldcw
sub
popl
sub
addr16
mov
lods
adc
test
cmp
out
adc
xchg
push
xchg
ss
call
out
sbb
aam
out
xchg
pusha
jno
cs
cmp
dec
sbb
sbb
dec
pop
adc
mov
pusha
mov
out
rorl
push
fcoms
mov
adc
les
or
repnz
insl
stc
xor
sbb
cmc
stc
cltd
or
push
sarb
idiv
xchg
gs
adc
adc
push
lret
test
scas
fstpl
out
fnsave
pop
push
sbb
adc
mov
hlt
dec
scas
sub
lahf
mov
xor
add
clc
stos
mov
push
xchg
add
rcrb
sti
jge
int
cmc
popa
xlat
adc
fldl
enter
cmpsl
shl
inc
out
push
pop
jno
xchg
gs
movsb
in
fiadds
or
call
aam
push
xchg
repz
inc
sub
mov
stc
mov
jmp
lahf
jne
xor
cmp
push
mov
sub
and
rorb
ljmp
mov
xchg
fistps
push
icebp
inc
int
cmpsb
insl
xor
xchg
leave
and
cmpsw
dec
xor
dec
imul
inc
cs
mov
aas
in
adc
pop
mov
popf
out
es
sti
fmull
mov
sbbl
lahf
movsl
jne
imul
bswap
shlb
add
sahf
mov
pop
push
popa
xor
aam
sbb
stos
xchg
popf
sbb
mov
cwtl
ds
push
xchg
popa
xlat
es
sbb
sub
cmp
loop
decb
mov
pop
jecxz
sub
ja
out
push
gs
dec
fmull
sbb
pop
dec
test
pop
add
insb
mov
push
and
pushf
shl
xchg
and
push
lds
jecxz
ljmp
mov
jp
jnp
clc
ret
cwtl
lcallw
int3
and
mov
push
scas
or
mov
shlb
or
movsb
inc
ljmp
mov
sbb
bound
mov
xlat
sub
repz
xchg
or
adc
in
std
xor
lret
ds
fstl
mov
push
or
cmp
xchg
popa
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
push
test
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
shrl
add
xchg
call
inc
sbb
sub
cmp
dec
sbbl
mov
push
test
mov
adc
js
test
cmp
nop
pop
orb
dec
push
pop
insl
dec
sarb
jg
push
je
or
inc
int3
loopne
lret
lea
pop
jp
push
pop
insl
dec
sbb
sbb
ljmp
lea
pop
jp
push
pop
insl
dec
sbb
sbb
leave
xchg
mov
loop
enter
add
sub
jge
add
aam
xchg
ss
bsf
push
je
sub
fnstenv
enter
test
jp
xor
cmpsl
ret
xchg
rolb
add
mov
ljmp
stos
jp
sbb
mov
jae
cltd
jmp
fsubrl
xchg
fcoms
lods
inc
pop
testl
cmp
sbb
mov
push
dec
adc
bound
cwtl
mov
movsl
xchg
inc
inc
mov
lds
add
nop
lret
jb
in
repnz
push
and
inc
fbstp
mov
mov
cmp
xor
clc
lcall
jge
insl
dec
sbb
sbb
ljmp
lea
sbb
cmp
adc
add
sbb
jg
jle
mov
mov
fsubrp
jmp
cmp
sub
sbb
add
sbb
dec
jg
mov
mov
jecxz
sar
fcomp
cmp
dec
cmp
aas
add
push
or
or
cli
int
std
lret
lea
pop
jp
push
pop
insl
dec
sbb
sbb
ljmp
lea
pop
jp
inc
loopne
inc
jecxz
pop
dec
stos
ljmp
sbb
cld
shrl
mov
sbb
add
and
loope
xor
mov
daa
test
mov
ds
cmp
lea
aad
loop
xchg
fldl
lret
movsl
icebp
mov
andb
mov
mov
sub
lea
outsb
or
xchg
add
sbb
lds
mov
jnp
dec
inc
mov
pop
push
mov
push
mov
and
cmp
in
out
outsl
mov
pop
cmp
xor
repnz
ret
dec
pop
repz
leave
jp
mov
ljmp
or
cmp
push
rcr
mov
cltd
iret
and
jge
cli
nop
fsubs
xchg
popa
xlat
test
iret
cmp
push
sti
jge
mov
or
pop
dec
lds
push
sub
inc
mov
popl
loope
sub
pop
xor
xor
or
in
inc
sbb
imul
jns
dec
lahf
popa
jmp
nop
jnp
fs
notl
cmp
dec
add
cmp
mov
jbe
or
aas
scas
cmp
shll
imul
or
xchg
decb
outsl
movsb
out
rcll
push
ljmp
push
pop
pop
fstpt
ja
jge
push
cs
repz
js
inc
subl
xchg
dec
mov
and
xchg
cmp
push
sbbb
push
dec
adc
xchg
cwtl
hlt
mov
or
stos
inc
subb
sbb
push
jge
hlt
gs
stos
ljmp
int
bound
aas
mov
scas
push
sbb
bound
sub
lret
pop
popa
xchg
and
inc
movsl
lock
lret
mov
aas
je
psrlq
in
jle
sahf
in
adc
fstpt
pop
imul
jmp
shlb
scas
or
mov
fdivr
cli
adc
out
jge
outsb
leave
pop
stos
xchg
sub
lcall
inc
insl
add
fwait
dec
push
pop
add
fsubs
cwtl
arpl
testl
test
pop
jne
loopne
xor
jnp
pushf
fcom
popa
cmp
mov
gs
imul
mov
repnz
stos
add
mov
push
push
sub
xor
mov
sarl
push
xchg
dec
mov
mov
sub
xchg
movsl
dec
fldpi
mov
mov
ror
outsb
jle
rorb
adc
mov
mov
jno
xchg
mov
stos
and
lods
dec
jnp
sub
fcomp
into
sbb
movsb
lahf
xchg
rolb
sub
in
pop
cwtl
xchg
test
lea
fscale
or
test
in
ds
dec
xor
std
inc
fwait
mov
ja
adc
rcll
dec
aas
xor
adc
loopne
xor
or
lods
cmovge
jecxz
lcall
inc
jns
stc
mov
addr16
pop
mov
adc
inc
push
and
loop
loopne
js
cmp
adcl
dec
mov
xchg
inc
and
testl
leave
adc
jmp
pop
cli
and
in
cmpsb
test
jge
cld
enter
inc
xchg
out
insl
mov
arpl
int3
mov
adc
hlt
pop
add
movsl
js
adc
push
jmp
ds
repz
pop
mov
adc
mov
adc
dec
mov
adcb
js
je
outsb
pushf
mov
lea
jp
ret
xchg
mov
addl
leave
ja
lret
icebp
test
push
rclb
insb
lock
sti
insl
lea
lds
or
adc
icebp
cmpl
outsl
jp
mov
rcrl
cltd
sub
in
mov
mov
pop
test
mov
jne
xor
imul
into
push
and
ss
movsl
cli
inc
mov
orb
add
sti
std
sub
mov
inc
les
decl
jno
mov
dec
add
push
cltd
pop
add
ror
fdivl
xchg
stos
lds
jecxz
lret
in
or
pushf
cmp
imul
xor
sbb
addl
aad
sbb
xor
or
out
xchg
mov
inc
inc
aaa
cmp
js
daa
adc
mov
xchg
call
pop
adc
ret
insb
lock
lahf
outsl
inc
inc
pop
rcll
je
sbb
push
scas
shll
test
inc
stos
or
je
cmpsb
movsl
out
or
dec
mov
icebp
cmp
ret
mov
aam
push
sbb
jb
cmc
clc
aaa
pop
cmp
sbb
mov
add
mov
xchg
lods
in
movsl
xchg
rcrb
mov
jecxz
hlt
sti
or
in
int
bound
stos
fnstsw
fidivl
repz
push
mov
mov
pop
insl
pop
xor
mov
test
mov
fs
call
mov
adc
push
sbb
repnz
mov
jp
jno
adc
xchg
sbbl
xor
or
add
pop
pop
inc
icebp
push
sub
pop
pop
push
push
xor
into
lods
pop
xchg
es
mov
add
xchg
repz
repz
mov
cmp
inc
test
mov
fisubs
mov
out
cmp
add
pmulhw
push
pushf
push
sub
inc
fucomip
neg
and
jne
stos
xchg
inc
push
fwait
sub
sub
mov
push
lahf
mov
movsb
and
fistpll
sbb
insl
push
jbe
shr
test
testb
inc
addb
sub
aaa
les
xchg
fs
ds
movsb
mov
jg
fimull
stos
insb
inc
mov
inc
xchg
repz
and
cmp
fsts
cmp
mov
sar
mov
sti
in
jle
cmc
cmp
xchg
jnp
xchg
and
lea
pop
sbb
lcall
push
jg
push
sub
xchg
mov
int
in
shlb
stc
gs
mov
and
lahf
lret
imulb
fmul
xor
and
test
cmp
outsb
push
rcrb
shlb
xrelease
fmul
add
xor
movsl
imull
rcr
mov
sub
cltd
pmuludq
cs
pop
add
cli
dec
outsb
pop
les
sbb
sbb
sbb
out
in
mov
xor
mov
add
inc
rcrb
fcomps
mov
push
adcl
mov
lahf
jb
mov
xlat
imul
je
or
xchg
sahf
rcrb
test
bound
idivb
hlt
and
test
and
inc
ds
loopne
mov
dec
aam
cmc
sbb
test
insb
daa
add
adc
dec
mov
and
sahf
pop
jg
sub
mov
out
clc
jbe
imul
pop
mov
dec
cs
popa
stc
xor
push
and
dec
mov
jae
and
in
jmp
sbbb
jge
es
adc
movsl
stc
xor
repnz
and
sbb
sti
shl
mov
sub
lcall
sbb
inc
lret
inc
fcom
lret
or
outsl
add
push
loope
jecxz
pusha
jb
rorb
inc
mov
in
imull
push
sub
pop
push
out
and
mov
cltd
or
jnp
or
sti
in
push
addr16
sti
adc
pop
sbb
jno
dec
pop
scas
test
fs
shlb
xlat
and
fld
xchg
sti
lods
xchg
dec
int3
inc
int3
inc
add
gs
idivb
dec
jne
cltd
inc
lret
mov
data16
in
cmpb
pop
test
xor
mov
lahf
fstpl
xlat
stos
or
dec
mov
jge
bound
cmp
pop
leave
add
xchg
add
les
xor
jns
jg
push
loopne
mov
mov
jo
mov
fnstsw
add
cli
int3
add
popa
popf
sbb
outsb
and
adc
test
mov
cmpsb
xchg
hlt
mov
call
sbbl
int3
ss
pop
fistl
cmp
mov
cltd
andb
ret
in
ja
fwait
divb
loopne
and
lds
fldcw
outsb
cmpsl
sub
pop
or
shll
adc
mov
mov
addr16
enter
xchg
or
sarb
gs
mov
daa
in
lods
xor
cmpsl
mov
je
mov
addr16
pop
dec
aas
daa
xor
clc
mov
cmp
or
lret
test
cmp
in
lcall
test
ljmp
or
lahf
call
pop
sub
fistpl
mov
cwtl
int3
mov
ljmp
dec
xchg
imul
jnp
push
adc
rcr
pusha
push
fcompl
lock
mov
test
je
repz
aas
pop
stos
push
pushf
sub
push
adc
cmp
cwtl
je
dec
test
dec
mov
stos
push
inc
sub
xchg
cmpsl
dec
lahf
adc
cltd
xor
sbb
xorb
xchg
sbb
push
clc
popf
repnz
sahf
popf
cmc
pop
es
mov
dec
nop
cwtl
into
xor
pop
out
jle
in
data16
mov
outsb
xor
stos
add
outsl
or
stos
stc
mov
add
cs
adc
dec
xor
repnz
mov
sub
and
dec
out
xor
scas
jp
rcll
mov
mov
pop
insl
pop
pop
push
mov
pop
inc
aad
mov
mov
fstl
mov
shrb
movsl
mov
add
xchg
add
pop
xor
sbb
std
jge
popa
cmp
jmp
movsl
dec
sbb
sub
fxch
lret
jne
insb
adc
sub
push
test
les
inc
mov
push
dec
sub
scas
jns
and
jae
fisttpll
ret
xchg
ret
sub
mov
sbb
pop
mov
call
ja
sahf
jnp
sub
ljmp
xor
in
push
fcmovnb
int3
aam
insl
adc
cld
mov
cs
jno
jnp
dec
nop
out
pusha
inc
test
gs
pop
mov
in
mov
adc
cmc
in
jne
dec
inc
add
ret
xlat
lret
or
mov
sbb
jnp
mov
mov
sbb
add
adc
mov
aaa
xchg
fs
jne
sub
mov
nop
inc
cs
imul
aad
cmp
jns
push
int3
cmpsl
aam
sbb
or
insb
and
push
out
popf
xchg
iret
loopne
std
xchg
das
cltd
test
jae
lcall
add
xchg
fnstsw
pop
mov
pusha
pop
outsb
sub
lahf
or
aam
add
xchg
rcll
xchg
inc
pop
mov
inc
pop
xor
or
fnsave
mov
jp
bound
mov
movsb
inc
add
dec
sbb
cmp
ja
leave
test
adc
pop
jno
adc
sbb
inc
sub
iret
sahf
and
or
or
data16
icebp
jnp
dec
adc
in
jmp
pop
or
sub
clc
mov
iret
loope
pushf
inc
inc
aas
dec
int
and
fs
call
push
addr16
mov
add
xchg
cld
xlat
or
push
aaa
and
add
pop
popa
lahf
pop
or
out
pop
push
dec
movsl
cmpsb
repnz
cmp
lock
mov
cmp
scas
loope
test
sahf
jno
sub
pusha
jo
mov
dec
scas
jb
sahf
mov
enter
ja
sbb
inc
ss
ljmp
lret
das
inc
jne
lods
push
loop
fcomi
dec
pop
aaa
pop
pop
sti
mov
mov
inc
mov
pop
cmpsb
fcomps
cmc
pop
scas
nop
jo
sub
adc
ret
jl
iret
das
cltd
cltd
lock
pop
mov
fiadds
pop
dec
into
or
inc
sub
int
xor
add
sub
das
rclb
xchg
gs
or
xor
mov
cmp
pop
sbb
cmp
stc
cld
std
and
pop
sahf
icebp
bnd
fsubrs
push
mov
shrb
sbb
or
lcall
jl
mov
mov
mov
jae
adc
jmp
jno
outsl
loopne
xor
lahf
xor
sbb
pop
stos
leave
loope
loopne
ret
sahf
sbb
adc
pop
stos
icebp
and
cmp
bound
push
or
out
loopne
push
std
dec
pop
mov
xchg
and
sub
outsb
out
shll
int
js
lds
out
xchg
ss
sbb
mov
outsb
xor
hlt
xor
push
inc
mov
pop
mov
pop
adc
xchg
mov
addr16
sub
and
je
sub
mov
jg
mov
dec
adc
xchg
pusha
ljmp
loope,pn
xchg
mov
shlb
jecxz
lea
jg
xor
fildl
push
push
in
pop
mov
mov
add
cmp
or
lods
xlat
mov
sub
mull
sbb
in
mov
mov
dec
push
stos
jmp
xchg
mov
dec
repz
popf
fwait
sarl
rcl
lret
lea
jmp
pop
rorb
jle
adc
rcl
sahf
iret
jecxz
lahf
pop
adc
jp
fistpl
jbe
mov
xor
mov
vhsubps
movsl
dec
xor
mov
sahf
out
and
sbb
jns
jmp
add
xor
mov
loopne
adc
lods
std
icebp
cmp
sub
lret
cmp
sub
outsb
lahf
icebp
jno
cmp
and
pop
add
fs
cmp
adc
pop
mov
lahf
mov
mov
dec
jp
xor
es
je
fsubrs
dec
ret
test
push
shr
dec
gs
lods
mov
out
push
pop
sub
mov
adc
outsl
insl
hlt
pop
aam
mov
push
dec
loopne
cmp
lods
in
push
sbb
jecxz
sbb
imul
in
pop
cmp
ljmp
repz
xor
mov
inc
adc
jns
mov
sub
gs
call
xchg
sbb
inc
iret
insl
lret
xchg
push
sbb
pop
mov
and
pushf
js
sbb
mov
std
mov
scas
popf
xor
cmp
ja,pt
cld
adcb
jo
push
dec
ret
mov
pushf
adc
in
inc
insb
mov
repz
dec
popf
xlat
cltd
xchg
pop
sub
cmp
xchg
test
xchg
jle
xchg
lods
inc
loop
ja
cwtl
adc
fdivr
ss
call
cld
lods
cwtl
in
frstor
xor
aam
xor
xchg
sahf
or
inc
add
mov
test
mov
insl
jmp
or
push
push
adc
popa
in
mov
mov
jg
or
mov
lret
lret
inc
sub
inc
jp
lret
jnp
mov
sub
out
xor
mov
mov
jnp
ss
mov
movsl
rorb
and
xor
xchg
pop
or
cmpsb
mov
adc
and
iret
imul
jo
add
mov
bound
sbb
xor
xlat
push
push
lahf
sar
xchg
rorl
mov
push
pusha
cwtl
pop
mov
int
inc
cmp
pop
push
in
xor
in
sub
shll
hlt
sub
nop
and
sti
popa
loope
sub
jo
or
addr16
popa
sbb
in
jnp
in
cmpl
pop
outsl
cmp
sub
mov
popf
jns
hlt
pop
out
inc
int
int
xor
adc
cwtl
adc
fisttpl
lds
repz
aad
xor
dec
popf
sbb
mov
or
inc
dec
out
repz
xchg
mov
outsl
jge
and
mov
lods
or
std
jb
pop
or
sbb
das
lret
mov
push
arpl
mov
clc
andl
out
mov
fs
sbb
movsl
xlat
add
add
dec
out
cmp
das
pop
js
mov
pop
xchg
dec
jl
fsubl
xchg
ja
mov
fcmovne
push
js
ds
xor
sbb
imul
xor
out
fwait
hlt
dec
xchg
cmpsl
scas
fnstcw
addr16
cmp
inc
sbb
adcl
stos
nop
push
xor
clc
push
cs
aaa
ss
aas
psubd
repz
dec
fiaddl
sub
sub
je
pop
std
lock
cmp
push
cmp
and
lahf
or
in
insl
ret
jecxz
es
shrl
cmp
cmpsl
or
ds
xor
sub
das
lods
xor
push
dec
stc
lock
cmpsb
dec
xlat
popa
jae
in
loopne
repnz
les
scas
mov
inc
mov
mov
jg
fmul
insb
fistpll
pop
divl
xor
jnp,pn
rorb
cld
shrl
mov
stos
stc
sub
xor
sahf
jmp
rorb
aaa
into
xchg
fldcw
xchg
fwait
sub
scas
mov
int
ror
int3
lods
push
push
adc
inc
fwait
stos
pop
mov
mov
jb
fidivrs
popf
fwait
mov
jp
ja
mov
pop
mov
jle
addr16
outsb
fcmovnbe
sbb
jp
scas
adc
nop
scas
jge
pop
dec
cmpsb
add
ret
aad
push
xchg
mov
jb
icebp
mov
adc
mov
jge
outsb
out
rolb
xor
loopne
add
cmp
dec
sub
adc
loop
shll
push
push
sub
int
inc
inc
cmp
push
fisubs
lock
daa
enter
mov
xchg
mov
out
imulb
sahf
es
mov
nop
pop
sub
add
cmp
sub
mov
push
rolb
mov
mov
stc
or
shrl
cmp
pop
fildl
add
push
icebp
inc
and
out
ja
cli
adc
aad
incl
jmp
or
and
lret
jmp
inc
adc
push
jle
dec
flds
jge
xchg
mov
mov
xlat
lcall
jl
push
and
insb
daa
inc
sbb
dec
or
call
xchg
gs
dec
cli
mov
popf
cmp
out
mov
push
add
sub
mov
cmp
push
add
mov
dec
jbe
ret
xor
push
mov
push
jb
ds
subb
in
jmp
pop
and
or
cmpl
test
inc
ja
and
jecxz
pop
ffree
test
mov
arpl
sub
mov
xchg
cmpsl
cs
and
jb,pn
test
aam
mov
adc
jp
ret
or
sub
mov
push
cmc
sub
and
data16
sbb
jg
push
lods
pop
mov
xor
lcall
mov
mov
outsb
add
sbb
sahf
imul
inc
mov
jnp
push
and
inc
add
push
out
xchg
in
sahf
je
pop
mov
mov
imulb
xchg
dec
inc
lahf
aam
insb
mov
dec
dec
sti
xor
xchg
shl
adcl
push
dec
cmp
adc
xchg
xor
pop
push
mov
lahf
pop
add
jns
test
jns
sahf
lds
jecxz
sbbl
xchg
fs
or
and
stos
imul
imul
xchg
sub
cld
jge
pop
jno
or
dec
sub
bound
xchg
mov
lret
adc
aad
cmpsb
sti
mov
ljmp
dec
repnz
jp
and
sub
jae
jge
insl
mov
fwait
jecxz
sbb
lods
shrb
je
xchg
mov
pusha
clc
and
sub
mov
mov
add
test
xor
jp
fs
jae
xchg
add
lret
pop
cmc
xor
and
movsb
sbb
mov
mov
mov
mov
sahf
mov
sub
and
insb
aaa
subb
dec
addr16
xchg
xchg
js
popa
jbe
mov
ret
mov
pop
push
push
xor
aas
cld
xor
add
mov
rcrl
push
mov
mov
dec
dec
dec
mov
or
outsl
ljmpw
dec
sbb
sbb
ljmp
lea
pop
jp
push
pop
insl
dec
sbb
sbb
ljmp
lea
pop
jp
push
pop
insl
dec
popf
cmp
or
cli
int
std
lret
lea
pop
jp
push
pop
insl
dec
sbb
sbb
inc
push
mov
int
fnsave
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
rclb
add
jb
mov
adc
ret
enter
jecxz
xchg
xchg
outsb
mov
mov
inc
push
push
inc
arpl
arpl
adc
add
xor
or
cmp
jecxz
mov
mov
inc
cmc
push
test
jb
add
adc
cmp
adc
rcl
loopne
xchg
xchg
xchg
loope
sti
in
rcr
xor
push
add
and
push
mov
cli
fnstenv
sarl
dec
push
cmc
dec
cmp
pop
push
filds
add
sbb
fdivl
or
mov
xchg
stos
cmp
cmp
insl
sub
xchg
push
lcall
js
rolb
sbb
and
test
inc
inc
ja
arpl
pop
ds
repz
jecxz
sbb
bound
mov
mov
ljmp
fildll
adc
adc
stc
cli
xchg
daa
loopne
cs
push
divl
fiaddl
and
and
xchg
mov
fists
bound
jb
add
adc
and
xor
loop
repnz
stos
mov
ss
push
sub
pop
cmp
inc
mov
outsb
gs
push
fs
nop
pusha
mov
push
xchg
xor
fsubrp
iret
mov
add
addr16
jbe
and
adc
mov
loope
repnz
lods
shlb
jl
add
push
cmovae
add
xor
and
rcl
ret
loop
repnz
xchg
xchg
andl
push
inc
bound
arpl
adc
add
xor
and
rcl
ret
loop
repnz
xchg
xchg
andl
push
adc
jno
sbb
push
lcall
popa
bound
cmp
ret
dec
cmp
lods
data16
movsl
push
inc
call
or
rcrl
repnz
imul
sub
add
push
jb
push
fisubrl
and
adc
scas
pop
mov
dec
cli
mov
hlt
or
push
lds
test
fisubrs
mov
sbb
pop
mov
mov
lods
test
adc
jl
ficoms
popf
inc
iret
std
fsts
notb
and
test
push
xchg
and
in
pop
sbb
icebp
cmpsb
push
ljmp
mov
mov
inc
mov
mov
es
pop
or
mov
and
popa
xor
xor
in
inc
pop
fnstcw
lret
testb
sub
movsb
lods
loopne
or
mov
sub
jnp
inc
mov
xchg
and
push
in
mov
movsb
jnp
and
jne
mov
cmp
sti
sbb
lcall
pop
jns
popf
push
mov
mov
pop
jno
push
das
fadds
or
lods
or
aaa
dec
mov
mov
lock
mov
xchg
inc
adc
arpl
test
add
adc
cmp
pop
push
cmp
push
xchg
nop
push
jno
push
popl
mov
push
lods
ljmp
rcll
sahf
adc
cmp
imull
cli
jb
pop
xchg
lods
mov
inc
inc
sub
xchg
dec
inc
rcr
jg
loop
add
scas
sub
daa
cs
cmp
ficoms
or
xchg
jge
lret
test
stc
int3
xor
cli
stc
lock
adcl
jmp
scas
sbb
cld
int3
or
jo
add
ss
push
inc
popf
adc
repz
movsb
add
push
pop
lea
daa
data16
lods
fildl
test
je
rolb
mov
jns
xchg
jmp
std
jp
and
test
jnp
add
insl
sub
cmp
lea
xor
dec
sbb
xchg
xor
in
xchg
adc
sbb
insl
repz
pop
loope
xchg
test
enter
sub
lret
cld
sbb
movsb
lea
adc
sbb
imul
mov
jnp
int
insl
pop
push
sub
mov
cltd
dec
pop
hlt
outsb
andl
xor
test
mov
mov
pushf
sbb
mull
movsbl
aad
lods
cld
xchg
popa
hlt
xlat
mov
aas
arpl
sbb
mov
push
lea
add
xchg
pop
test
push
fs
out
mov
inc
sbb
add
mov
aaa
mov
add
inc
inc
enter
shll
call
push
out
push
xchg
arpl
ficomps
mov
or
sub
and
mov
pop
fimull
or
sub
mov
adc
and
pop
stc
pop
mov
or
insl
inc
xchg
ret
inc
xor
inc
xor
lods
cld
jecxz
scas
inc
xchg
pop
les
out
ja
dec
test
xor
cld
fdivr
mov
arpl
mov
dec
ja
adcb
pcmpeqd
inc
jo
jmp
mov
cmp
mov
pop
push
movsb
mov
push
pusha
inc
cmpb
sbb
stos
jecxz
adc
outsl
xor
scas
arpl
rcrb
out
xor
cmp
fcmovnb
cs
dec
pop
jecxz
frstor
pop
nop
cs
into
cmpsb
fbld
cmp
push
jl
rcrb
pop
pop
lock
nop
icebp
fcoms
pop
imul
xchg
stos
jbe
cmp
in
xchg
movsl
enter
jne
popf
scas
jl
out
push
push
and
fnstcw
nop
xor
mov
mov
loopne
mov
lcall
jg
movsl
adc
lock
pusha
in
or
xchg
lods
jg
faddp
ljmp
scas
test
loop
inc
addr16
cwtl
jno
cli
cwtl
mov
jle
outsl
loope
and
frstpm(287
cmp
push
sub
xlat
or
call
jae
cld
aad
mov
sbb
lock
xchg
imul
mov
iret
sbb
insl
out
enter
pop
mov
mov
out
pop
or
gs
stos
xchg
fldt
lret
fdivrl
xor
fstpt
flds
push
dec
cmp
jecxz
pop
sbb
fsubs
sbb
xchg
sub
and
cmc
jl
mov
iret
mov
js
fstpt
jl
cld
sub
sub
cmp
jo
mov
jne
sub
test
leave
mov
push
mov
mov
arpl
mov
and
jmp
xor
dec
jl
repz
push
cld
cmp
in
push
xchg
push
dec
movsb
popa
imul
dec
jecxz
mov
dec
and
pop
sbbb
in
test
xor
jb
sahf
adc
int
mov
jns
pop
enter
mov
dec
jb
mov
and
mov
pop
xchg
add
loop
int3
out
cld
in
xchg
push
mov
inc
mov
mov
popf
lret
test
xchg
outsb
jl
ss
fcomps
pushf
cwtl
repnz
sbb
add
lods
adcb
mov
jmp
das
ficoms
ret
jns
loop
push
pop
xor
dec
ja
sbb
aam
adc
push
sub
mov
test
mov
repz
or
push
ds
push
jno
popf
jb
mov
inc
sub
gs
and
add
out
pop
shrl
push
pop
das
push
jg
shll
call
and
sarb
cmp
cmp
or
push
xor
repnz
fcoml
pop
push
jl
sub
icebp
xor
sti
insb
fcmovbe
dec
or
xor
xchg
int
scas
lds
dec
inc
mov
push
jae
ficomps
repnz
jmp
lock
sti
mov
mov
jge
mov
jp
add
mov
rcr
lods
outsl
std
jae
sbb
cmp
outsl
and
movsl
pusha
adc
repz
js
push
insb
mov
push
out
shrb
mov
sub
mov
pop
loopne
addb
jle
lahf
dec
inc
xchg
movsl
fisubs
pop
test
and
in
or
popf
aas
jmp
adc
mov
in
rcrb
imul
fisttps
and
mov
xor
xchg
inc
dec
jb
negl
shll
decl
mov
jg
inc
cmc
dec
out
lret
movsb
sbb
fstpl
int
test
lds
mov
addl
push
ret
fcmovnu
jno
nop
mov
inc
sub
stc
cmpsb
cmp
das
scas
addr16
outsl
xchg
mov
pusha
jp
pop
out
sti
jbe
mov
jle
fistpll
or
mov
jno
pop
dec
mov
imulb
lret
pop
bound
popf
insl
pushf
call
in
pop
jbe
movsb
mov
mov
lods
scas
out
int
lods
xor
cmpb
orb
pop
insl
or
add
mov
mov
mov
imul
lret
loope
add
loopne
fmul
sub
rcrb
cmp
adc
test
out
pop
in
mul
dec
lret
std
loop
lahf
dec
dec
or
inc
test
dec
bound
icebp
sahf
sahf
outsl
xor
inc
cmp
cwtl
pop
sub
fs
test
mov
inc
aad
stos
adc
pusha
pop
xor
dec
cmp
mov
sbb
jmp
mov
fs
addr16
pop
push
mov
xchg
jmp
fsincos
es
pop
inc
inc
daa
repnz
mov
lea
mov
fwait
std
mov
stos
test
jne
sub
mov
sub
inc
lret
mov
and
bound
test
pop
mov
sti
aad
loopne
and
inc
lock
loop
int
cmovp
fldenv
mov
push
rol
andl
mov
loop
loope
out
push
pop
arpl
pop
dec
aad
fisubrs
lahf
sarl
cwtl
cmpsb
cltd
movl
scas
pop
mov
dec
jae
jle
sbb
les
xor
mov
mov
in
jmp
les
or
stos
daa
sarb
imul
fwait
or
cmp
cwtl
xlat
jbe
sbb
fiadds
in
test
jp
lods
xor
mov
ds
pop
seto
ss
roll
sub
sbb
mov
cmpsl
cmp
mov
xlat
pushf
dec
movsl
xor
insb
xchg
icebp
dec
fsubrl
push
mov
lods
imul
jg
lret
dec
dec
cmpsl
sub
and
jmp
jmp
xchg
pop
sbb
gs
sbb
ficoml
orl
inc
test
pop
mov
test
sbb
and
push
or
and
cmp
out
pop
rcrb
fmull
or
insb
sarl
add
xchg
pop
mov
push
mov
jno
popa
mov
sbb
pop
lods
xlat
enter
enter
ret
xchg
nop
and
leave
and
xor
test
jo
call
rorl
in
xchg
scas
popf
jle
aam
mov
push
pop
test
pop
out
mov
jo
fcmove
lcall
je
imul
loope
sahf
pop
push
ret
push
cmpb
enter
sub
xchg
xlat
jge
and
xor
sbb
inc
mov
adc
lcall
aad
jae
push
pusha
lods
xor
lahf
inc
push
jo
mov
lods
ja
add
pop
fs
jnp
or
sti
scas
aad
adcb
jnp
sbb
mov
scas
call
mov
cmp
mov
push
cmpsl
int3
fcmovu
out
sbb
jne
or
mov
scas
jg
ret
mov
pusha
lods
into
mov
scas
xor
mov
je
sub
push
adc
mov
fimuls
fadd
aam
jmp
cli
inc
push
lret
push
loop
int
dec
icebp
add
jle
inc
punpckhbw
addr16
add
push
in
insl
fwait
dec
jno
cld
xor
jb
jnp
or
mov
fsts
leave
jnp
dec
push
insb
dec
arpl
push
dec
mov
out
into
aaa
mov
jg,pn
je
xor
shl
in
push
mov
mov
push
dec
mov
aam
push
fisttpl
idiv
push
inc
pop
sub
or
pop
jge
addl
shr
insb
mov
push
add
mov
inc
mov
push
jmp
aam
dec
std
jae
add
mov
pop
lahf
mov
xor
je
adc
and
and
pop
xchg
push
jnp
fcompl
and
cwtl
aas
push
sub
scas
jecxz
cmp
aas
orb
xor
push
call
push
popa
ds
or
xor
push
cmpsb
pop
pop
add
cmpsb
sahf
ss
cmpsl
dec
push
rol
imul
lahf
out
or
mov
inc
jbe
lds
mov
scas
jp
xchg
sub
and
int
adc
dec
mov
stos
or
arpl
mov
dec
out
pop
jns
jnp
sub
aam
scas
jne
pop
xchg
dec
jo
pop
lds
mov
xchg
sbb
jns
cmpl
je
in
cmpsb
inc
lret
or
testb
jp
iret
push
or
mov
in
or
or
xchg
and
push
mov
add
xchg
lcall
adc
mov
mov
es
or
test
lods
mov
xor
dec
aam
push
push
loop
sub
sub
add
push
sbb
cmp
movsb
call
cmp
insb
outsb
cmp
cmp
sbb
mov
movntq
mov
mov
add
xchg
lahf
sbb
fstpl
sti
push
mov
push
jl
or
xor
inc
mov
movsl
and
hlt
jle
popf
repnz
inc
or
mov
jo
xchg
mov
or
jns
xchg
popl
aas
mov
loopne
aas
or
and
mov
in
ffreep
loop
mov
sub
sbbb
stos
cmp
das
cmpb
push
mov
xchg
icebp
imul
shlb
jne
gs
shlb
xchg
testb
stos
ljmp
cli
cmp
aaa
test
arpl
pop
inc
ja
xor
xlat
sarb
fsubrl
js
pop
inc
out
xchg
pop
or
mov
cmp
add
pop
enter
jmp
cmpsl
pop
cltd
fcmovu
add
push
push
pop
xchg
popa
cmc
in
aam
mov
out
enter
xor
add
enter
pop
sbb
loope
xchg
xchg
adc
ljmp
sub
ja
xchg
push
stos
jg
daa
mov
arpl
mov
sar
int
insb
ficoms
fnstenv
lahf
pop
les
aad
clc
cmp
pop
out
frstor
and
sub
fdivrp
into
jecxz
mov
fsts
unpcklps
push
inc
jl
sbbl
pop
lods
test
cli
sub
bound
leave
repnz
xchg
inc
out
jo
sub
out
stos
add
jmp
mov
sti
mov
pop
push
mov
out
add
call
int3
test
jae
xchg
mov
sub
cmp
stc
xorb
in
sub
fisttps
ficomps
adc
mov
aam
out
popa
xchg
adc
mov
aaa
sbb
xchg
mov
sub
dec
in
negb
xor
cmp
lods
cmpsb
and
xor
mov
xor
pop
dec
test
push
or
mov
cmpsl
mov
sbb
xchg
scas
stos
push
pop
push
jo
dec
rorb
fiaddl
scas
aaa
mov
dec
mov
and
ss
xchg
push
mov
loop
cmpsb
in
adc
cli
or
rorb
test
pusha
fdivs
int3
out
pop
fistl
sarb
lcall
out
cmpb
push
test
jge
popf
push
or
push
push
test
mov
cmp
repnz
hlt
xor
jg
mov
dec
jl
jb
fistl
xor
and
jecxz
aam
sbb
mov
and
inc
int
call
rclb
and
jb
cmpsb
daa
negl
shl
xor
leave
inc
add
fwait
or
popf
xchg
test
mov
pop
adc
sbb
jne
int
aad
mov
lods
jle
loope
out
or
adc
xor
or
int
xchg
dec
daa
scas
push
push
jle
cld
mov
into
or
cmp
aam
in
icebp
pop
adc
pop
dec
adc
jecxz
inc
pop
xchg
lea
lahf
pop
inc
xchg
and
jge
fs
movsl
sub
cmp
dec
mov
xchg
mov
xchg
enter
jmp
adc
loopne
es
in
mov
enter
pop
cmp
fcompl
cmp
lret
pop
xorl
pop
xchg
test
and
mov
repnz
addr16
jae
std
inc
popf
or
pop
aad
or
sub
sub
cmpsl
nop
xor
arpl
pop
mov
xor
cli
or
fildll
dec
sub
xor
sbb
mov
je
lahf
ret
push
test
sub
sti
xchg
in
xchg
xor
adc
inc
pusha
ret
push
adc
insb
push
and
sbb
jbe
lods
scas
or
andb
leave
jg
jbe
cmp
lods
adc
lods
add
popf
cmp
mov
cwtl
ss
dec
out
xor
stos
retw
push
push
add
mov
mov
fidivrl
inc
cld
pop
jg
pop
es
mov
cmc
dec
xchg
xchg
jne
rclb
lea
push
fstpt
adc
dec
sbb
xor
cltd
xor
mov
adc
clc
xchg
movl
add
inc
mov
iret
push
inc
jo
or
xchg
scas
lcall
dec
imul
popf
imul
fistpl
mov
push
xchg
cltd
daa
and
cltd
mov
sti
and
repz
push
les
stos
vandnps
loope
sbb
in
std
cmp
popf
pop
adc
pushf
pop
pop
sub
adc
fwait
cmovne
push
jl
and
pop
rep
adc
mov
push
pop
mov
dec
sbb
cwtl
std
mov
cmp
loopne
aam
dec
pop
jo
add
stos
jns
icebp
push
or
jecxz
rcll
icebp
test
cmp
mov
out
mov
push
in
fcmove
pop
int3
cmp
adc
mov
xchg
repz
les
or
testb
mov
xchg
xchg
xchg
pop
sbb
cli
arpl
rorl
popf
pop
jbe
lret
ja
push
jo
or
ret
shll
mov
or
outsl
sub
mov
ja
mov
stos
and
sti
pushw
scas
out
enter
insl
in
pop
add
mov
adc
scas
data16
mov
mov
addb
loop
dec
xor
hlt
xchg
mov
jo
mov
xchg
loopne
mov
mov
mov
cmp
cwtl
into
jb
fmull
gs
or
mulb
out
popf
cmpsl
xor
addb
aas
mov
outsl
je
jmp
into
inc
negl
imul
push
sbb
push
cltd
test
pop
or
inc
in
daa
mov
pop
test
outsb
fcomi
insl
pop
inc
stos
xor
rcll
cmp
inc
pop
push
mov
mov
lods
adcl
outsb
lahf
in
sti
mov
push
loopne
cwtl
in
dec
dec
cmp
cmp
mov
lcall
js
rclb
adc
jmp
mov
rcrb
test
cli
pop
scas
daa
rcll
fs
cmp
mov
mov
lcall
icebp
pop
push
sub
fcmovb
pop
out
test
mov
repz
cwtl
add
ja
and
daa
pop
fisubrs
es
adc
mov
mov
outsl
fildl
lods
std
dec
test
xor
sti
lods
addl
pushl
iret
lods
jecxz
cmc
mov
stc
push
cmc
das
jl
add
dec
jmp
mov
push
and
inc
lds
sahf
inc
ljmp
sub
push
or
mov
sub
xor
pop
lock
pop
in
push
inc
push
outsl
xchg
jl
in
cmp
xchg
lods
testl
cmp
out
jmp
push
xchg
shll
jae
sti
and
sub
sbb
lret
daa
cmp
cmp
lods
fwait
push
lods
int3
aad
mov
pushf
adc
shlb
imul
pop
in
orl
arpl
sahf
orl
test
mov
jg
xchg
aas
ja
adc
inc
icebp
ror
mov
adc
cmp
push
scas
outsl
lods
bound
test
cltd
out
int3
lock
xchg
jbe
or
rclb
loop
sub
inc
jg
fistpll
mov
mov
pushf
rcrb
data16
jecxz
and
ja
call
xchg
cmp
sub
stos
shll
sub
add
and
fistps
iret
imul
lock
jns
mov
cmp
sub
mov
jmp
outsl
dec
pop
mov
cld
or
push
push
inc
add
fmull
mov
push
dec
push
xchg
fcomps
lock
es
push
outsl
idiv
mov
aam
xlat
test
cmp
add
cmc
in
xor
lret
inc
mov
mov
xor
fsubrs
loopne
bound
inc
push
movsb
sbb
clc
rcrb
cmp
add
inc
mov
test
les
or
mov
mov
sarl
inc
pop
and
inc
out
or
cld
inc
cmc
pop
cmp
or
js
jne
xor
jmp
jnp
push
push
fwait
add
sbb
mov
call
xlat
movsl
xchg
ret
movsl
adc
fcomip
mov
pop
shrl
aaa
sub
es
cwtd
mov
icebp
leave
mov
aam
jmp
aas
mov
xchg
loopne
movl
pop
insl
je
xlat
inc
mov
push
mov
pop
jnp
ds
jecxz
clc
jg
fdivrl
and
adc
arpl
jecxz
cmp
sahf
bound
pop
adc
ljmp
or
xchg
mov
sbb
ljmp
arpl
adc
add
xor
and
rcl
ret
loop
repnz
xchg
xchg
andl
push
inc
bound
arpl
adc
add
xor
and
rcl
ret
loop
repnz
xchg
xchg
andl
push
dec
bound
add
adc
aaa
xor
ret
loop
repnz
mov
inc
mov
cmpsl
arpl
adc
and
shrb
repz
cmc
jmp
sti
pop
lret
dec
fcmovnb
lret
and
lods
jmp
sti
ret
negb
jle
pop
sub
cmp
dec
or
sub
lret
pushf
fldt
fmull
pop
inc
sbb
add
jnp
jns
sbb
cmp
sbb
sub
jp
fcoml
add
or
jo
dec
adc
insb
inc
add
pop
andps
xchg
inc
inc
cltd
pop
call
xchg
pop
push
and
js
repz
or
push
xchg
loop
stos
pushf
sti
and
push
js
mov
test
imul
in
fcomi
ret
fcoml
mov
fdivrs
inc
add
out
dec
jecxz
roll
ret
scas
shll
leave
xchg
in
rcll
test
mov
mov
sbb
ret
test
pop
sahf
jns
subl
dec
popa
and
adc
xor
out
test
mov
int3
mov
movsb
rcll
pop
or
or
push
adc
jno
add
imul
cmp
leave
and
sub
fcompl
int3
mov
mov
hlt
jb
bound
inc
add
cmp
lret
ljmp
mov
fisubrs
pop
pop
jl
pop
push
and
inc
cmp
mov
ja
movsl
mov
mov
pop
ds
push
push
jns
jnp
sbb
dec
cmp
fcmovnu
std
mov
in
stos
cld
mov
sub
cmp
dec
or
sub
lret
pushf
fldt
fcompl
or
sbb
sub
cmp
dec
or
sub
lret
pop
enter
stc
addb
add
dec
shrb
sub
cli
iret
fadds
iretw
popa
mov
aam
outsl
or
inc
push
stos
imul
nop
pop
push
cli
xor
dec
xchg
cmp
repz
inc
aad
dec
popl
or
push
push
inc
loopne
out
xchg
xchg
pushw
pop
subb
cwtl
adc
inc
inc
jb
out
push
xor
sbb
lock
insl
add
jo
push
jmp
jmp
shrl
xor
decl
hlt
dec
movsb
int
jno
mov
jno
mov
addr16
xchg
mov
repnz
ficoml
xlat
sub
sub
xchg
ljmp
test
add
add
andl
cmpsb
push
nop
fdivr
call
cmc
fiaddl
jge
push
ret
ljmp
popf
cld
lods
pop
inc
jecxz
xchg
sbb
xlat
idiv
jnp
dec
rcrl
jp
push
sbb
sbbb
out
xor
xchg
cmp
xor
mov
arpl
xor
dec
cltd
iret
addl
mov
mov
sbb
scas
pop
ss
push
mov
push
lea
popa
outsb
shll
or
in
sub
jns
sbb
adc
fildl
pop
adcb
fnstenv
cmp
sbb
xor
cltd
pop
xchg
dec
data16
mov
jp
cli
fistl
std
hlt
stc
jge
adc
sub
and
pop
xchg
pop
pop
add
cwtl
fldt
xchg
cs
sbb
push
inc
mov
mov
jbe
mov
jge
xchg
fisttps
jne
in
nop
test
notb
push
mov
xchg
push
cmp
dec
into
rcrb
je
not
icebp
cmp
push
ds
arpl
arpl
pop
and
addl
popa
lds
mov
lret
pop
sub
fcoms
cmp
nop
js
pop
gs
jns
or
in
xchg
xchg
mov
leave
sub
mov
fisubs
inc
cmp
push
pop
ret
lahf
mov
sub
mov
movsbl
inc
mov
dec
xchg
das
mov
mov
loopne
add
add
push
jge
adcb
lahf
push
xor
mov
out
negb
push
jg
sbb
push
out
lahf
and
adc
pop
cmpsb
adc
fsubr
int3
cli
scas
cmpb
cmp
insl
pop
and
inc
mov
jo
rol
sub
xchg
dec
or
sub
cmpsl
loope
adc
sti
add
stos
data16
push
push
ret
pop
dec
test
pop
ucomiss
jo
adc
pop
bound
mov
sub
or
aad
rep
bound
mov
in
repnz
jbe
sahf
xor
adc
push
insb
sti
jle
sub
test
xor
push
js
sub
pushf
rcr
push
push
movsb
mov
pop
xor
mov
mov
xchg
fldenv
sub
pop
dec
and
inc
cmp
notb
or
mov
test
cmc
and
jns
es
push
mov
xor
mov
test
popa
and
and
jae
ffree
and
mov
int
ja
mov
xchg
mov
das
ds
nop
jmp
dec
or
es
fsubr
xor
in
pop
adc
stos
sbb
cs
add
add
jg
mov
cmpl
shlb
cmc
xor
popa
in
fucomi
std
loop
jae
jo
fsubl
daa
aam
shrl
xchg
enter
testl
int3
decl
fcomip
into
stos
add
fimull
cmpsb
jae
push
and
jb
inc
sbb
inc
enter
mov
cmp
push
inc
cwtl
clc
rcr
mov
pushf
or
ljmp
cmp
fsts
dec
int
cmp
stos
test
lods
jge
data16
or
cmpsl
or
mov
xchg
arpl
dec
outsb
or
mov
xlat
sbb
mov
adc
push
clc
gs
loopne
int
out
nop
lock
fucomp
xor
sbb
adc
cmp
inc
or
mov
jmp
jnp
ret
add
or
sarb
imul
stos
sub
mov
sub
add
inc
push
push
push
sub
and
mov
xchg
xchg
xchg
stc
inc
js
jg
pushf
cwtl
pop
andb
adc
out
and
aaa
xchg
mov
es
adc
and
xchg
adc
inc
aas
in
out
out
fcoms
ss
push
fstl
jne
add
sub
je
into
daa
aad
cmp
lret
loop
imul
pusha
lahf
pop
pop
test
jbe
out
pop
aas
push
xchg
xor
out
stc
pop
and
pop
cmp
inc
sub
jb
xor
sbbl
sub
xchg
test
mov
jle
lock
xor
sbb
dec
outsb
sahf
ffreep
pusha
aam
inc
movsb
and
mov
and
test
in
mov
cli
sub
cmp
scas
pop
inc
aad
pop
aam
nop
mov
mov
mov
loop
jmp
lock
out
dec
dec
push
xor
xor
jl
stos
adc
mov
pop
cmp
inc
lods
jmp
dec
adc
aad
add
pop
insb
adc
xchg
aaa
fisttpl
adc
mov
mov
inc
bound
pop
jmp
jmp
cmp
cs
push
add
sbb
cltd
rclw
and
push
xchg
outsl
sti
dec
push
nop
xor
stc
mov
pop
inc
mov
mov
pop
sub
cmpsl
push
cmpsl
push
in
mov
sbb
call
decb
mov
sti
mov
mov
popa
push
and
sub
xchg
arpl
mov
gs
outsl
sahf
ficoms
idivl
xchg
and
fstpl
jecxz
and
sub
jo
aas
add
adc
inc
cmp
gs
arpl
fsubl
out
pusha
xchg
xor
mov
dec
imul
push
sbb
mov
xchg
test
pop
dec
cmp
popf
pop
ljmp
lcall
inc
jo
sbb
pop
mov
jmp
cltd
cmpsb
incb
inc
das
enter
subb
ret
fidivl
nop
xor
out
in
aam
cwtl
inc
wrmsr
sub
adc
inc
xor
es
stos
pop
add
push
cmp
pop
rcrl
lds
xchg
inc
lods
roll
sub
jg
or
mov
or
push
testb
and
or
adc
jmp
xchg
xchg
sbb
or
out
aaa
sbb
cltd
inc
push
sti
in
add
dec
jae
aaa
sbbl
mov
jmp
loop
pop
in
cmpsl
idiv
adc
repnz
push
mov
aam
mov
out
mov
idiv
push
call
jle
pop
popf
aas
fs
or
and
cmp
sbb
sbb
xchg
nop
rcll
ret
push
adc
movsb
pop
rcll
cwtl
repz
mov
sbbl
add
gs
cmp
xor
push
jmp
out
lea
aad
pop
and
gs
and
lds
xor
push
pop
pop
xchg
pop
add
adc
jge
inc
add
fisubrs
dec
sbb
lds
sub
test
cltd
lds
ds
aam
dec
loop
mov
scas
out
jmp
mov
cmovb
vcvtsi2sdl
mov
cmpsl
push
xlat
int3
mov
enter
jne
subl
push
and
lret
mov
fmuls
js
xor
loopne
in
stos
sub
jle
test
icebp
sub
cmp
pushf
inc
leave
dec
mov
fwait
sbb
decl
push
inc
pop
inc
sbb
add
das
stc
fsubrl
ror
xchg
add
inc
mov
pusha
mov
negb
xor
mov
icebp
push
sbb
mov
nop
cmpsb
mov
movsl
pop
mov
xlat
jp
push
sub
out
mov
lret
enter
jne
aaa
and
push
or
stc
test
das
jp
repnz
and
mov
or
xor
sub
das
inc
and
jno
and
into
icebp
push
aam
mov
jae
cwtl
sub
adc
xchg
mov
fimuls
xchg
popa
out
sbb
shrl
dec
imul
popf
dec
rolb
mov
push
sbb
call
and
cmp
fwait
loop
movsl
addr16
out
or
pop
adc
sub
and
jb
xchg
mov
pop
clc
imul
subl
insl
lahf
or
outsl
jg
iret
inc
xor
jnp
cmp
lcall
je
test
mov
xor
cmp
rcrb
call
enter
lods
pop
lea
inc
sub
push
cmp
pop
mov
rcl
das
and
fmull
push
lods
test
fidivs
iret
rcl
mov
jne
jl
dec
push
mov
int
sub
mov
icebp
lods
cmp
mov
mov
test
aam
inc
loope
insb
sbb
pop
push
pop
cli
js
mov
push
addr16
outsb
cmp
add
fxch
push
push
shlb
in
js
jmp
jnp
shrb
std
sub
cmp
add
mov
ds
rdtsc
mov
divl
mov
or
out
sar
fldcw
in
push
jbe
sbb
ds
push
cld
dec
lods
mov
cltd
mov
add
pop
jae
pop
lret
or
sub
mov
clc
xchg
and
nop
pop
mov
in
add
xchg
jo
and
out
mov
sbbl
test
gs
mov
fidivrl
cmp
aas
jle
dec
dec
mov
lods
mov
cs
lock
shr
imul
xor
xor
pop
jo
push
push
mov
mov
or
negb
xorb
push
xor
lods
jecxz
inc
add
jmp
or
xchg
scas
mov
incl
or
pop
add
xor
test
xabort
int
and
jo
sub
stc
call
mov
lea
mov
ja
mov
mov
pop
xchg
cmpsb
xlat
frstor
mov
js
rolb
dec
sub
dec
add
rclb
xchg
inc
mov
or
add
cmp
imul
pusha
cmp
pop
jb
and
shrl
and
loope
mov
jl
fdivp
int3
inc
jo
or
adc
out
or
cmp
push
loope
mov
loope
data16
or
jbe
add
outsb
lea
mov
loopne
data16
aaa
in
mov
das
sub
pop
xorps
sbb
push
outsl
dec
mov
cltd
leave
mov
das
sbb
inc
shlb
in
and
lret
dec
dec
mov
test
and
push
mov
xchg
lcall
push
test
movsl
pushf
testb
add
adc
notl
movsl
cli
adc
xor
xchg
and
cwtl
cmpsb
push
gs
js
stos
sahf
daa
and
insb
xchg
shlb
dec
lahf
js
cmp
mov
les
jnp
or
es
xor
mov
xchg
adc
or
scas
sub
mov
out
test
or
div
xor
clc
les
aaa
jmp
jns
adc
andb
mov
fmul
fsubrl
repnz
or
dec
call
mov
jno
in
push
add
cmpsb
popa
test
mov
fldl
xchg
fimuls
sbb
lods
dec
enter
cli
and
pusha
movsl
mov
iret
mov
and
popa
sbb
or
mul
imul
lds
pusha
sub
pop
inc
in
ljmp
add
incl
or
popf
dec
addl
icebp
xor
mov
xor
inc
fstp
adc
add
xor
sbbl
cli
movl
imul
inc
and
pop
push
fistpll
movsb
loop
push
cmp
push
gs
mov
shll
adc
push
mov
and
test
imul
mov
adc
shr
fcomps
movsb
mov
cld
movsl
movsl
xor
mov
clc
das
movsb
jns
mov
js
cli
inc
repnz
out
xchg
dec
std
insl
loopne
inc
inc
add
mov
dec
push
adcl
pop
and
add
in
dec
mov
pusha
xor
hlt
iret
xchg
lcall
mov
pushf
xlat
cmpsb
jmp
adc
mov
test
push
fcmovb
movsl
les
cs
in
movb
sti
pop
mov
push
hlt
push
sbb
jo
adc
pop
fdivs
bound
into
mov
hlt
push
mov
fwait
mov
lcall
repz
cmp
outsb
xchg
jae
or
call
dec
lods
in
rcl
fsts
fisubl
adc
bswap
inc
stos
fiadds
movsb
hlt
lcall
gs
clc
sub
mov
cmp
lods
bound
out
inc
data16
fistpll
mov
jno
or
cmp
arpl
mov
stos
mov
xchg
fs
mov
and
outsl
push
or
lea
push
rcrl
lea
aad
ret
lea
pop
mov
mov
sub
mull
inc
mov
cmp
mov
gs
dec
inc
test
mov
and
sub
pop
pop
mov
loopne
cld
xor
or
mov
add
cmc
and
jb
setae
test
mov
mov
mov
addr16
daa
stos
lds
clc
mov
dec
jnp
jae
cmc
push
mov
testb
cs
mov
dec
ror
fwait
leave
sub
xchg
loopne
add
dec
negl
mov
rolb
mov
out
lock
and
outsb
js
roll
adc
pop
push
sub
inc
ficompl
stos
mov
in
dec
xor
sbb
lret
das
mov
xor
sub
fldenv
mov
fisubrs
fdiv
in
dec
and
andl
movsb
outsb
add
mov
repz
jno
add
insb
jle
pop
in
jae
jecxz
mov
cld
jle
outsb
add
mov
mov
add
cmp
lret
jne
scas
pop
xlat
adc
xchg
ja
dec
out
hlt
and
pop
dec
adc
sub
jge
test
addr16
mov
cli
lahf
pusha
sbb
xor
test
mov
pop
xchg
sbb
sarb
and
add
sahf
mov
arpl
dec
mov
adcb
sbb
adc
inc
fstpl
adc
insb
or
adc
dec
jae
out
icebp
push
xchg
lcall
popa
jb
jecxz
jecxz
leave
popa
or
push
push
xchg
cmpsb
pop
xchg
pop
fiadds
movsl
sub
and
pop
cs
subb
inc
xor
leave
leave
cmpl
jge
movsl
push
fcoms
add
push
rclb
cmc
dec
dec
cmc
imul
lock
xchg
rorb
lods
into
stc
mov
icebp
ret
jg
ljmp
push
add
mov
lods
pop
aas
sar
inc
add
inc
test
or
or
dec
lret
and
clc
adc
xchg
mov
ficompl
xchg
rcrb
mov
push
push
ljmp
inc
pop
outsl
int3
jecxz
je
scas
cmp
pop
enter
sti
push
sbb
pop
jb
pop
clc
push
sbb
sbb
pop
cld
mov
rcr
dec
push
push
add
jae
dec
scas
std
inc
jne
mov
jl
lcall
call
andl
lret
daa
pslld
enter
and
inc
adc
cmp
mov
scas
out
jb
lds
pop
cli
nop
push
aas
mov
dec
icebp
mov
repz
or
sar
adc
xor
xor
push
cmp
sub
xor
les
adc
push
inc
movsl
cmp
in
lret
push
adc
mov
sub
dec
mov
pop
jo
cmpsb
jno
loopne
lods
hlt
gs
pop
and
sub
sub
imul
movsl
sbb
test
ljmp
dec
mov
loope
es
aad
xor
orb
push
dec
lods
dec
imul
dec
pop
jl
and
mov
adc
leave
das
aaa
cmp
out
inc
scas
or
push
and
stos
test
outsb
mov
call
inc
test
cld
inc
sbb
mov
movsb
popf
movsl
aad
xchg
repz
es
out
icebp
push
ss
pusha
sbb
adc
mov
inc
mov
mov
mov
fsubs
test
mov
adc
int3
cmpsl
adc
loop
fcomps
fldenv
mov
adc
cld
xor
mov
aas
push
shrl
stos
js
cmp
xchg
dec
xchg
mov
outsb
dec
jl
cmpsl
in
xchg
fistpl
scas
ret
outsb
shlb
jae
sub
jns
sbb
add
sub
jmp
sub
push
out
std
ljmp
dec
xor
inc
sbb
mov
lods
or
loop
cld
sahf
lods
mov
sub
es
addr16
test
cmp
sub
sbb
dec
and
stc
push
lods
ss
lock
movsb
pushf
dec
mov
imull
mov
ret
popf
stos
xchg
fcompl
repz
add
outsl
test
xchg
sub
or
jno
jbe
push
xor
and
test
repz
adc
pop
std
ret
jnp
dec
icebp
jge
adc
repnz
std
mov
sbb
adc
in
das
add
lods
or
xchg
mov
mov
fwait
jno
push
sub
daa
js,pn
addr16
adc
xchg
cld
xor
or
f2xm1
pop
cwtl
test
lret
mov
xchg
in
push
push
add
rcll
ret
dec
out
or
push
dec
outsb
push
stos
movsb
mov
dec
mov
inc
mov
sub
sub
test
xor
xor
push
test
push
es
xchg
jnp
xchg
ret
dec
std
inc
stc
aas
cmp
aam
stos
enter
in
push
mov
stc
cmc
adc
out
inc
out
repz
sub
mov
ret
pusha
and
stos
test
ds
outsb
inc
sbb
shrl
cwtl
aam
push
pop
cs
and
push
lea
mov
push
test
push
xchg
aad
xchg
loopne
fwait
push
add
push
mov
dec
mov
pop
sub
adc
out
xchg
xchg
or
stos
divb
jge
ja
subl
add
std
icebp
scas
mov
push
loop
out
jb
push
or
movsb
mov
dec
aaa
stc
mov
outsb
push
pushf
push
dec
hlt
in
and
lock
push
adc
jle
test
and
pop
popa
test
cmp
icebp
into
cwtl
shrb
mov
out
mov
adc
sbb
sub
mov
pop
and
xchg
push
mov
mov
pop
data16
push
adc
pop
jle
stos
push
ja
icebp
lods
sbb
sub
out
add
ret
ffreep
loopne
pop
out
mov
push
xor
push
setne
inc
push
jg
push
add
and
and
and
xchg
rorl
addl
push
and
jecxz
insb
push
pop
pop
sbb
jmp
das
ja
xchg
sub
push
dec
lret
cmp
mov
mov
test
jne
ljmp
pop
push
mov
or
aam
rolb
cltd
stos
mov
adc
sub
adc
movsl
xchg
lahf
xor
out
sbb
loop
lcall
and
and
jno
inc
mov
sbb
rclb
push
mov
scas
pop
add
xor
in
cmp
fwait
aad
push
xor
in
push
hlt
adc
sbb
idivl
push
cli
add
push
sub
btr
fists
out
dec
or
cmpsb
adc
int3
cmpsb
dec
es
cmp
inc
test
mov
scas
flds
ret
and
aas
lea
and
test
cmp
push
sbb
sub
add
xchg
lret
inc
cmpsb
mov
cmpsl
xor
loope
dec
pop
fidivl
repnz
inc
scas
icebp
imull
fmuls
pushf
xor
subb
hlt
popa
jne
and
adc
xchg
push
jp
mov
sub
cmp
dec
das
pop
jns
sbb
inc
xlat
mov
popa
adc
lods
stos
repnz
and
cltd
mov
or
stc
aam
xor
into
fisubrs
sbb
jecxz
pop
ror
xchg
jb
dec
pop
aas
repnz
push
jge
leave
mov
in
cmp
push
popa
pushf
pop
jns
xchg
jmp
sti
int3
mov
fwait
in
stos
cld
mov
sub
cmp
dec
or
sub
lret
pushf
fldt
fcompl
or
sbb
sub
cmp
dec
or
sub
lret
lahf
fstpt
fcomps
or
pop
and
or
push
iret
mov
and
xchg
sti
int3
mov
fwait
in
stos
jl
or
jecxz
xchg
or
adc
xchg
push
addl
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
mov
ret
push
prefetchw
add
add
add
push
pop
or
add
add
add
pusha
add
add
add
adc
pop
add
add
dec
add
add
add
add
add
add
add
add
or
add
or
add
add
daa
add
icebp
add
push
add
add
add
add
add
push
add
add
cmp
aad
leave
add
add
add
cmp
je
fwait
add
add
aad
int3
add
add
add
dec
add
add
add
add
add
add
add
outsl
add
or
add
and
inc
add
add
add
add
add
add
lods
add
pop
add
add
sub
add
fwait
add
add
add
mov
addl
fwait
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
lret
add
add
add
add
and
cltd
add
add
outsl
add
add
add
add
or
push
add
add
add
add
add
xchg
add
add
add
add
fadds
sub
sub
cld
add
add
add
add
enter
inc
add
add
jns
rolb
add
jg
outsl
add
add
add
add
lock
add
push
add
add
add
add
sub
add
insl
add
add
add
add
add
outsl
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
testl
ja
outsl
add
fwait
add
add
add
add
add
add
add
cmp
fwait
add
add
add
icebp
add
add
add
add
add
add
add
adc
jg
dec
add
add
add
add
add
outsl
add
add
add
add
add
add
lahf
add
add
add
add
add
add
jbe
or
add
xlat
add
add
fadds
fwait
add
add
add
add
lret
add
add
outsl
add
add
add
and
in
add
iret
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
lock
add
add
dec
add
movsb
add
jbe
fwait
add
push
add
add
arpl
iret
add
add
add
iret
add
add
add
push
add
sldt
add
jl
jns
filds
rolb
scas
add
jns
add
push
add
addl
das
add
add
outsl
add
add
add
add
add
sbb
add
add
add
outsl
add
adc
bound
cmp
fwait
add
add
add
add
pop
add
outsl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
sub
outsb
add
mov
test
repnz
push
sbb
dec
inc
push
cli
or
mov
lds
sub
xor
or
pop
sub
mov
movsb
pop
adc
or
in
sub
into
pop
add
aad
addr16
pop
popl
out
jno
xorb
pusha
sti
xchg
aas
ret
popf
ss
js
cld
icebp
xor
jle
mov
push
cmp
fwait
orl
fildll
mov
movsb
xor
pop
imul
cmp
mov
push
push
and
mov
das
out
insb
xorb
jp
out
adc
mov
lahf
call
mov
int3
out
adc
xchg
rcll
rolb
dec
pop
fdivrl
arpl
out
addr16
out
test
cld
popa
sbb
or
addl
testb
jge
inc
jle
aam
mov
push
xor
fdivrs
inc
ljmp
mov
iret
pop
cmc
push
push
fwait
inc
daa
jns
ljmp
sub
clc
inc
das
popa
mov
je
sbb
jbe
mov
mov
jo
dec
mov
push
xor
sub
fcompl
loope
std
mov
and
or
sub
arpl
fs
xchg
daa
iret
popa
mov
call
jae
and
subl
je
or
adc
add
int
das
mov
cmpsl
ret
or
sub
addr16
add
sub
mov
jne
in
jne
cmp
arpl
stos
pusha
hlt
out
sbb
out
jle
fwait
movsb
inc
lcall
in
in
xlat
les
cmp
pop
xchg
cltd
out
daa
movsl
daa
mov
ss
out
xor
mov
lret
mov
mov
hlt
ret
xchg
test
inc
or
mov
push
test
and
nop
dec
rcrb
push
push
sub
pop
fbld
das
loop
jge
call
push
addr16
inc
bound
jle
pop
xor
lock
sbb
inc
mov
inc
sbb
add
dec
int3
loop
and
fsts
sub
or
mov
les
lret
ja
sub
rcr
xor
cmpsb
ss
pop
jae
add
xchg
in
push
ror
cmp
notl
fsts
fldcw
lret
jecxz
push
pop
imul
data16
cld
clc
sub
ljmp
mov
movsl
fimuls
movsl
lock
and
jmp
mov
sub
cmp
stos
out
sahf
mov
adc
jnp
xchg
fsubs
rorl
testl
test
xchg
add
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
