mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
push
popl
jno
popa
mov
inc
iret
sub
rolb
pop
icebp
das
loope
xchg
dec
sbbl
mov
lahf
jno
popa
mov
xor
and
icebp
das
out
aas
xchg
and
jg
pop
lahf
imul
and
enter
scas
pop
cltd
pop
xchg
sbb
or
add
or
cld
cs
jno
pop
mov
lock
push
in
cmp
out
inc
cltd
or
and
fdivrl
cmp
iret
add
out
cmc
push
jnp
loopne
cmp
pop
rorl
mov
pop
cs
mov
mov
mov
pop
ds
leave
jbe
outsl
xchg
pop
jge
mov
mov
mov
out
insb
add
into
test
add
shl
stos
push
fildll
andl
cld
incl
push
jl
rcr
shl
pop
push
lock
cmp
sbbl
or
out
into
add
ret
mov
mov
mov
aam
rorb
outsl
mov
lahf
jno
popa
mov
xor
cmp
enter
jmp
dec
cltd
pop
stos
outsl
mov
ficoms
adc
mov
test
lods
push
orb
xchg
or
cmp
push
int3
xor
ljmp
jge
add
xchg
inc
movsb
data16
jl
pop
xchg
and
pop
cmp
adc
sub
ficompl
add
xor
and
rorl
rcrl
das
loope
xchg
dec
sbbl
popl
jno
popa
mov
xor
and
rorl
rcrl
das
loope
xchg
dec
sbbl
outsb
test
mov
in
lock
test
xchg
aad
stc
aad
lock
fs
mov
sbb
jb
adc
iret
xor
imul
cmp
inc
cmp
bound
push
fnsave
test
imul
js
jns
in
pop
stos
ret
pop
sahf
popf
das
sub
in
cmp
mov
cwtl
hlt
mov
add
inc
lret
mov
inc
popf
push
cmp
das
andb
fsts
lret
sub
dec
pop
cmpl
call
mov
aad
mov
sub
mov
fiadds
pop
mov
mov
outsb
mov
mov
enter
je
leave
and
dec
shr
hlt
mov
fcomps
mov
dec
xchg
push
mov
xorl
xchg
mov
cmp
mov
cli
dec
ja
je
inc
mov
lret
pop
loopne
cltd
fisubrs
dec
xchg
iret
dec
cmp
sti
add
dec
ror
daa
adc
sub
jp
lahf
outsb
std
jmp
cmp
push
push
sbb
push
orl
lret
pop
shrl
ss
cwtl
cmp
jecxz
mov
data16
dec
xchg
mov
test
push
pop
fs
or
inc
inc
mov
fistps
mov
movsb
mov
shll
jbe
insb
sub
or
xor
sub
add
repz
fidivs
sub
sub
ss
sub
pop
push
lahf
xchg
inc
in
dec
not
addl
lods
test
xchg
xchg
shlb
and
mov
out
mov
clc
xchg
aaa
rclb
jge
lea
icebp
insl
push
shll
loopne
inc
pop
or
push
xchg
orl
pop
xchg
inc
lods
mov
push
pop
outsb
mov
pusha
mov
iret
ret
jno
fildll
cmpsl
push
cmc
dec
and
pop
imull
js
loopne
sub
testb
dec
or
inc
scas
cmp
sbb
or
mov
insl
dec
xor
push
fwait
dec
pushf
xchg
xlat
xchg
jns
ret
outsl
sbb
nop
fdivr
pop
fisttpll
mov
daa
mov
mov
pop
push
ret
stos
js
aam
push
mov
and
stos
add
lds
aam
fsubr
fdiv
out
scas
adc
dec
aaa
add
rcrb
xchg
cmc
leave
sbbl
mov
enter
mov
cmp
jge
jbe
pop
int
jb
rcll
or
sub
pop
aam
push
mov
mov
pusha
rcr
mov
cmpsl
or
or
insb
sub
jge
and
and
clc
xchg
jg
sub
jg
jge
push
xor
mov
out
fwait
jg
push
pushf
pop
push
out
and
dec
lods
xchg
pop
xchg
cs
mov
fsubrs
bound
int
inc
push
pop
jl
adc
add
jo
cmc
mov
jecxz
pop
les
inc
jbe
mov
test
ret
pop
fcoml
iret
popa
xchg
mov
and
imul
push
adc
aam
cmp
mov
daa
vcvtpd2dqy
push
nop
arpl
jg
loop
cmp
mov
pusha
mov
rcrl
cmc
push
push
dec
adc
xlat
xchg
fisubrl
mov
xor
pusha
enter
add
shrb
sub
pop
in
loope
rcrb
nop
add
xor
push
int
outsb
clc
arpl
popa
dec
aad
push
ret
push
lahf
out
push
mov
orb
jb
dec
rep
test
jno
outsl
inc
pop
pop
dec
add
imul
push
push
clc
neg
icebp
jg
mov
dec
mov
inc
in
aad
sbb
sbb
xchg
xor
aad
jl
mov
mov
outsl
sbb
rcrb
loopne
ret
xchg
jle
mov
xchg
adc
jae
inc
out
cmp
loope
sysenter
pushf
lcall
adc
inc
adc
test
mov
clc
mov
sbb
xchg
repnz
dec
insb
mov
pusha
jnp
je
loop
lods
inc
lcall
inc
dec
insl
outsb
xlat
aad
mov
repz
pop
mov
ret
ljmp
loop
mov
insl
scas
dec
leave
dec
cmp
adc
out
loope
movsb
popa
test
add
aas
jl
bound
in
lret
dec
xor
test
pop
fucomp
cmp
cmpsb
stos
cmp
dec
cltd
mov
push
aas
out
loopne
xor
inc
pop
mov
and
or
dec
sub
outsl
hlt
jl
sbb
sub
jge
jmp
jnp
arpl
scas
and
pop
int
push
dec
xorl
lds
mov
pushf
int3
mov
dec
in
cli
testb
sbb
negl
mov
or
cmp
jne
jbe
and
add
mov
jmp
stos
sbb
xor
fists
or
fwait
jp
cmp
push
mov
push
aas
or
repnz
inc
lea
pop
pop
inc
testb
test
jecxz
xchg
in
lcall
negl
push
xchg
loop
push
jmp
add
push
fs
adc
pop
loope
pop
ss
jmp
pop
pop
mov
push
jno
push
jp
sub
mov
pop
lret
xorl
addr16
or
add
into
out
push
into
cwtl
test
xchg
idivb
ficomps
sbb
inc
scas
push
push
sbb
ja
xchg
mov
int3
sbb
adc
cmc
int
dec
push
pop
xchg
cmp
js
or
dec
mov
push
in
pop
loope
fisttpll
push
call
pop
shlb
push
popf
clc
daa
jno
adc
push
add
test
cltd
or
das
pop
mov
cmp
sub
xor
cmp
mov
dec
sbb
mov
lret
xor
lods
xlat
add
jge
jecxz,pn
xchg
stos
mov
mov
lds
mov
add
adc
ja
loopne
mov
push
jmp
jae
fists
push
mov
stos
scas
sti
pushf
sbb
mov
fdivrl
jb
mov
dec
shrl
fdivr
xchg
jne
pop
rclb
aad
incb
xchg
mov
inc
xchg
ret
mov
or
popa
ss
pop
push
jmp
stos
xor
sbb
push
xor
push
nopl
loope
jbe
add
or
pop
adc
push
aas
clc
sti
sub
ficoml
adc
fwait
sbb
xchg
inc
sbb
aam
and
push
ret
xor
insb
cmp
jae
adc
jne
loope
mov
cmp
lock
add
pop
popa
jns
adcl
add
movsb
pop
fnstsw
mov
inc
lret
stos
xor
pop
nop
xchg
int3
mov
orb
cmp
dec
add
sub
lcall
test
push
out
sbb
mov
sti
loop
mov
pop
xor
dec
shrl
xor
jne
or
jae
add
mov
imull
cwtl
pop
mov
jg
test
insb
fnstcw
sub
add
jge
xor
xor
add
mov
cmp
rorl
repz
loopne
or
imul
into
pop
dec
inc
and
cltd
and
pushf
jg
pusha
xchg
shll
in
jg
push
lea
adcl
repnz
mov
fisttpll
js
or
rolb
les
jge
movsl
jns
mov
in
mov
xchg
stos
xor
mov
bound
dec
mov
mov
dec
imul
rorl
mov
dec
fisubrl
sarl
pop
leave
fistpll
subb
cmc
outsb
or
xchg
xor
push
jg
ds
push
dec
jne
dec
repz
fbstp
pop
mov
add
jle
ret
out
adc
xor
and
jb
daa
mov
js
xor
popf
sti
xor
xor
push
enter
popf
xchg
lret
ss
mov
inc
test
cld
in
fwait
jb
ss
sbb
dec
nop
mov
orb
arpl
pop
xchg
push
xchg
cltd
or
out
or
insl
xchg
jnp
imul
pop
xor
mov
pop
mov
popf
xlat
fmull
inc
repnz
dec
inc
mov
test
add
ret
push
push
enter
mov
push
sub
mov
repnz
in
mov
sub
fiadds
or
xchg
mov
adc
add
outsb
lock
dec
mov
cli
lret
sbb
icebp
cwtl
divb
nop
ja
lods
mov
fs
push
lds
and
outsb
fsubs
inc
repnz
shl
xchg
lret
sub
add
out
pusha
pushf
insb
xor
imul
insb
pop
xchg
or
or
mov
push
cmp
inc
jnp
fidivs
pop
pop
inc
inc
mov
xchg
push
xor
daa
stos
shll
cmc
outsl
sbb
mov
mov
xor
movsb
leave
aam
jmp
aaa
fs
ss
adc
in
jns
sub
je
inc
push
push
adc
in
decb
or
lcall
xor
pop
pushf
jne
arpl
inc
inc
lea
mov
movsl
mov
xchg
fisubrl
mov
jl
xlat
lcall
cmpsl
dec
inc
inc
mov
je
xlat
inc
xor
mov
jb
mov
jbe
dec
mov
cltd
jne
cmp
rol
nop
push
mov
push
inc
outsb
mov
jp
cli
aam
inc
out
ljmp
fisttps
adc
xchg
sub
dec
cltd
lods
in
mov
add
out
adcl
ja
xor
icebp
cli
cmp
test
int3
mov
addr16
sbb
push
add
addl
cmp
xor
adc
jp
lret
xor
mul
ret
sarb
sahf
into
add
in
add
sub
data16
lods
stos
mov
rclb
fidivs
aaa
mov
mov
add
mov
dec
xchg
sbb
xchg
xor
mov
mov
mov
push
pop
xchg
andb
ds
lds
mov
xchg
jne
jmp
sub
xchg
push
lods
jb
or
lock
test
jbe
jp
inc
lret
int3
adc
shlb
je
lahf
cmpsb
cmp
jnp
lcall
stc
dec
inc
loop
mov
pop
jbe
and
and
cmp
lret
inc
pop
std
jg
rcrb
jno
data16
mov
addr16
sbb
or
cmp
push
pushf
cmpsl
mov
popa
mov
repz
jnp
popf
hlt
mov
pop
fldenv
push
fiaddl
stc
ret
aas
test
push
hlt
mov
cmp
add
das
inc
fdivl
mov
push
sbb
xchg
in
mov
jle
and
cmpsb
lea
pusha
test
enter
orb
sbb
fisttps
test
dec
sbbb
outsl
jae
inc
mov
in
cs
sbb
aad
mov
cmp
sbb
pop
push
notb
push
lea
imul
xlat
fidivrs
test
sbb
lret
push
mov
push
sbbl
out
jge
nop
mov
pop
pop
add
outsl
fdivs
test
inc
mov
ret
mov
mov
icebp
push
sar
dec
cwtl
add
arpl
jmp
pop
aad
jbe
test
dec
jmp
mov
adc
xor
jg
pop
xchg
js
mov
sahf
and
inc
scas
fadds
int
fcoml
xchg
dec
fiaddl
sub
loope
and
push
lret
or
sbb
add
adc
xor
sub
enter
mov
push
loop
mov
pusha
insl
in
loope
pop
or
scas
daa
mov
cwtl
xchg
push
stos
sbb
movl
sub
xor
xor
int3
pop
rorb
push
jecxz
ljmp
stos
shlb
repnz
dec
adc
sub
dec
sub
adc
inc
jo
and
or
xor
je
xor
outsl
adc
adc
cmp
cmp
and
sub
imull
dec
lods
mov
mov
pusha
fildll
testl
mov
pusha
outsb
std
loope
pop
add
mov
testl
jne
cmpsb
xor
cltd
inc
ss
aas
mov
ss
cmp
and
sbb
outsb
sub
push
cmp
jo
notl
daa
or
push
pop
scas
adc
fucomi
inc
stc
enter
movsl
mov
daa
outsl
push
shrb
inc
cld
pop
push
cmpsl
insb
xchg
and
lret
cmpsb
notb
fldt
cmpsb
outsb
imul
adc
cwtl
nop
imul
out
xlat
dec
outsl
add
inc
test
dec
dec
js
mov
adc
mov
scas
push
pop
sbb
xor
lds
jg
and
cmp
ljmp
fidivrs
movb
mov
out
push
mov
sahf
in
sbb
shrb
or
ret
or
push
sbb
ret
ret
scas
adc
jp
or
push
daa
das
bound
sub
orb
int3
mov
enter
dec
lods
dec
inc
jne
push
or
insb
pop
bound
out
fwait
xchg
outsb
jae
int
sbbl
sahf
jno
aad
fisubl
ret
rcrb
je
and
lods
xchg
fistl
cmp
out
fdivrl
xchg
into
push
push
cwtl
adc
mov
out
daa
fdivl
inc
cld
cmp
insb
outsl
push
xor
fcmovnb
popa
sti
lcall
lock
inc
test
andb
xchg
mov
mov
int
mov
divl
cmpsl
pop
sbb
lods
mov
inc
dec
sub
push
addr16
mov
popf
adc
mov
rcrl
sub
fs
pushf
out
sub
fs
fwait
xor
hlt
push
push
mov
sub
lea
xchg
and
pop
and
repz
in
inc
lds
andb
mov
movsb
pop
push
daa
sbb
bound
das
dec
sti
jg
movsb
aam
mov
es
shll
cli
lds
aam
je
popf
arpl
gs
mov
jno
cmpsl
ss
add
jp
mov
cmpsl
mov
popf
popa
add
cmp
push
and
push
addl
sub
inc
mov
pop
js
sub
xor
cmovae
mov
pushf
data16
lcall
xor
into
mov
dec
enter
inc
adc
adcb
insb
popa
fcmovnu
jmp
adc
cltd
icebp
push
movsb
lods
insb
sbb
and
inc
sub
add
adc
lock
das
fstl
out
cmp
sbb
and
fimuls
fidivrs
pushf
pop
sub
push
leave
ret
mov
push
ds
inc
fsubrs
lods
mov
dec
jmp
mov
test
clc
jae
repnz
lahf
inc
inc
xor
out
lahf
jg
addr16
out
aaa
mov
fildll
clc
sub
enter
inc
sbb
les
imul
mov
and
sub
xchg
rorb
sub
sbb
sbb
dec
addl
mov
push
inc
jmp
or
hlt
sbb
cmp
ret
sub
fistl
xchg
int3
mov
and
jle
xchg
sub
xchg
js
std
aam
orl
mov
outsb
mov
push
xchg
sub
lahf
sub
es
push
inc
sar
xchg
xchg
dec
add
push
lea
fcomp
repz
cmp
shl
xor
dec
pusha
pop
out
lcall
dec
hlt
cmp
mov
and
enter
pusha
arpl
das
and
or
lods
sub
adc
andb
jno
push
adc
or
int
lret
or
insb
or
sbb
mov
ret
js
lock
sub
cmpsb
and
adc
fcoms
outsb
jns
cmp
std
inc
and
outsl
and
gs
mov
aaa
cmc
lahf
xor
imul
arpl
adcb
lcall
lret
adc
sbb
push
aas
shrb
shl
push
pop
dec
fcomps
in
mov
in
mov
lret
outsl
stc
adc
push
mov
test
adc
pusha
cmp
adc
pop
je
push
in
ret
lock
push
jg
mov
adc
test
mov
mov
lds
jbe
mov
sub
aas
lock
and
roll
cwtl
sahf
not
sarl
mov
in
das
or
aaa
adc
sbb
xchg
and
shll
xor
cmp
push
iret
fisubs
add
ljmp
shrb
out
sbb
add
mov
pusha
cwtl
push
stc
mulb
insb
inc
inc
movsl
mov
inc
daa
dec
addr16
xchg
mov
std
in
cli
insl
inc
stc
lret
lds
cmc
pop
xor
mov
jnp
pop
xchg
dec
inc
sbb
pop
fldenv
pop
dec
dec
cmp
iret
mov
jno
cs
jo
ret
cltd
fidivrl
pusha
lcall
call
xchg
pop
je
icebp
into
ja
stos
or
xchg
aaa
inc
out
loop
sbb
dec
jecxz
cwtl
fistps
cli
std
enter
out
xor
dec
inc
fisttpl
cmp
cmpsb
scas
xchg
aad
mov
fistpll
dec
xor
lds
push
mov
xor
xor
decb
pop
mov
mov
not
jg
sahf
adc
lods
andb
fmul
sub
out
ja
es
pop
test
or
scas
inc
jle
stos
pushf
fisttps
or
int3
add
or
cltd
push
ret
lods
rcrl
fs
jg
dec
repz
test
xchg
in
push
jne
jle
dec
mov
repnz
xchg
mov
scas
push
ret
in
mov
int
fs
cmp
bound
stos
incb
xchg
xor
call
add
mov
adc
pop
addr16
das
repnz
push
outsl
mov
js
and
mov
mov
or
cmp
testl
popf
movb
and
mov
xchg
sbb
dec
push
xlat
cltd
fdivrl
dec
xchg
and
out
dec
xlat
add
std
test
pop
add
push
cmp
cmp
push
loopne,pn
push
adc
sbb
sbb
fs
xor
lods
out
mov
cmpsl
sbb
sbbb
dec
sbb
cmp
sub
push
frstor
mov
je
and
int3
xchg
test
enter
mov
cmp
in
xor
cmpsl
xchg
or
fistpll
test
fdivrs
push
jae
sbb
mov
jle
jns
push
lea
dec
cmpsb
pop
adcb
rcrl
xchg
pop
adc
shl
cmp
xorl
inc
inc
xlat
or
orl
dec
pop
lock
mov
loopne
pop
arpl
xor
cmc
shlb
sbb
or
xor
cmp
daa
inc
mov
cmp
std
sarb
sub
lahf
pop
or
mov
adcl
imulb
sti
fdivrs
mov
jne
dec
or
aas
sbb
or
lahf
mov
rol
sbb
daa
imul
sbb
xor
arpl
jno
sbb
test
rcl
and
cli
mov
pop
ret
pusha
sahf
push
add
cmpsb
fwait
adc
enter
pop
or
fdivl
jbe
dec
ljmp
out
sti
dec
adc
cmp
repnz
leave
or
dec
and
mov
je
insl
gs
pop
xor
mov
outsl
push
xchg
repz
mov
mov
cmp
xchg
pop
in
cwtl
and
arpl
aam
push
pop
out
push
push
push
pop
dec
mov
shll
or
rorb
arpl
pop
adc
sbb
fs
pop
and
dec
cmpb
sbb
mov
lcall
and
dec
xchg
ret
push
and
lds
imul
push
jo
sbbb
or
mov
and
out
or
mov
cmpsb
push
xchg
cmp
insl
and
pop
adc
sbb
and
adc
pop
cmp
push
test
cltd
pop
jg
std
mov
xchg
jbe
cmpsl
xchg
repz
lahf
popf
pop
out
pop
addr16
push
push
pop
pop
into
fsubs
dec
outsb
jecxz
loope
inc
adc
and
movsb
pusha
mov
dec
adc
stos
or
pop
jle
addb
xor
hlt
js
push
lahf
jnp
popa
mov
xor
and
rorl
rcrl
das
loope
xchg
dec
sbbl
popl
jno
popa
mov
xor
and
rorl
rcrl
das
loope
xchg
dec
sbbl
popl
jno
popa
mov
xor
and
rorl
rcrl
das
loope
xchg
dec
sbbb
mov
lahf
jo
popa
mov
mov
mov
mov
das
loope
out
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
scas
test
mov
xchg
mov
add
xor
and
push
outsl
inc
jg
pop
fs
xchg
scas
test
aam
hlt
into
in
adc
add
inc
push
push
or
dec
fs
xchg
scas
test
aam
hlt
into
in
adc
add
inc
imul
cmp
daa
and
sub
sub
loop
into
fst
sti
xchg
push
les
jg
pop
fcmovnbe
lods
faddp
cld
push
ja
push
or
mov
lcall
sub
incb
incl
push
loop
sub
mov
jle
and
insb
mov
sub
mov
or
lret
or
hlt
xchg
int
adc
movsb
xchg
shll
test
aam
aam
or
mov
adc
adc
mov
jle
sahf
je
pop
imul
fidivs
xchg
outsl
gs
adc
lahf
in
add
clc
sub
lods
push
fnstcw
jno
imul
test
xor
mov
outsl
push
inc
outsb
cmp
jnp
loope
jg
je,pn
or
lret
mov
aam
hlt
into
in
adc
add
xor
and
push
outsb
inc
jle
dec
fs
scas
in
ror
rcr
test
movsl
stos
push
pop
add
push
pop
dec
outsb
xor
sub
cmp
mov
xchg
lods
test
hlt
cltd
in
jno
push
dec
jne
popa
dec
xor
adc
push
sub
out
loopne
fucomp
movsl
out
fadd
hlt
into
in
adc
add
xor
and
push
outsb
inc
jle
dec
fs
xchg
scas
test
aam
hlt
into
in
adc
add
xor
and
push
outsb
inc
jle
dec
fs
xchg
scas
and
push
sbb
dec
cltd
sti
cmp
jae
cmpsb
jl
leave
fisttpll
std
or
iret
stos
lods
fsts
sbb
fidivs
mov
int
fnstsw
add
testb
cmp
es
fidivrl
lds
cld
mov
jmp
fs
pop
sbb
mov
jg
mov
ja
mov
and
inc
dec
cmp
fstpt
xor
pextrw
sbb
out
mov
pop
dec
or
insl
fildl
ds
and
and
mov
call
insb
sbb
fiaddl
lcall
mov
fists
jb
jecxz
sbb
add
sarb
dec
call
lea
and
loope
xor
fstps
andb
jo
mov
mov
xor
out
pop
mov
outsl
imul
iret
dec
stos
jns
andl
push
lods
xchg
js
adc
in
push
mov
retw
mov
addr16
mov
fdivl
and
popa
xor
popf
cmp
adc
movsb
enter
mov
pop
std
mov
xchg
fbld
mov
or
test
jnp
fmuls
out
imul
stc
popf
fsts
jnp
jmp
xchg
and
pop
dec
push
dec
cld
push
pop
inc
jnp
mov
pop
roll
xor
push
clc
movsb
xchg
js
scas
lock
cmp
test
mov
lret
daa
mov
or
aam
icebp
push
pop
mov
mov
subb
mov
outsb
sub
and
sarb
cmp
mov
into
sbb
pop
lahf
cwtl
adc
mov
ret
xor
nop
sub
clc
xchg
mov
jae
jb
mov
jle
sbb
repnz
lds
or
inc
adc
xor
jp
xor
xlat
ss
push
adc
or
fisubl
xor
xor
ret
mov
mov
dec
mov
repz
mov
push
push
xor
rol
xlat
imul
out
push
aas
push
repz
icebp
mov
in
or
repz
shll
gs
adc
jmp
movsb
cli
push
sbb
adc
divb
sbb
scas
and
push
iret
cwtl
add
cli
arpl
and
hlt
cmp
sub
cmp
lock
lahf
daa
ret
fs
or
push
inc
xchg
aas
aas
test
xchg
sbb
inc
xchg
xlat
adc
mov
sbb
in
fbld
roll
pop
xchg
out
xor
mov
xor
mov
and
dec
rcrb
pop
cmp
push
xchg
call
addr16
xor
xor
jl
mov
fbld
stc
inc
xor
mov
out
ret
in
call
fs
fisttpl
cmp
jns
fcmovbe
sub
test
jg
mov
mov
stc
sub
and
ds
adc
fcoml
mov
ja
ljmp
inc
and
mov
iret
sbb
sbb
sbb
inc
xor
notl
xchg
outsb
xor
sbb
inc
or
pop
jo
push
stos
push
or
popf
push
daa
and
xor
cmp
cmp
mov
pop
cmpsl
loope
xlat
push
or
mov
xor
cmc
aam
add
xchg
hlt
aad
fcomi
or
cmp
cmpb
leave
mov
in
dec
subb
mov
test
inc
lods
sahf
dec
mov
shlb
je
xor
dec
or
leave
mov
clc
mov
shlb
out
mov
pop
fbld
mov
inc
push
or
adc
stos
aas
mov
fs
lret
cmpsl
lds
stc
out
lahf
adc
jmp
fildl
negb
inc
adc
testl
and
das
shrb
les
lock
mov
jecxz
popf
sbb
out
movsl
lahf
into
or
imul
add
lahf
call
mov
addr16
loope
enter
add
dec
jp
push
jns
shl
jns
add
xchg
out
popf
push
std
adc
adc
xchg
xchg
dec
das
jbe
pop
sti
leave
out
loope
fnstcw
jbe
cmp
jb
fwait
insb
enter
pop
sub
xor
cltd
flds
scas
icebp
imulb
div
out
dec
xor
fistpl
es
pmaxsw
xchg
popa
or
dec
std
lds
and
push
sbb
mov
dec
sbb
mov
int
adc
mov
scas
shll
sti
push
hlt
xchg
lea
add
iret
sbb
sub
insb
push
ds
das
pop
fadds
pop
jns
popf
test
jne
in
sti
jle
jg
xor
adc
lret
pop
add
arpl
and
outsb
mov
nop
mov
aam
sbb
aad
add
inc
mov
hlt
xchg
clc
dec
ficoms
sbb
lret
ds
pop
iret
test
repnz
cmp
xor
in
out
adc
mov
ret
sti
mov
push
inc
dec
leave
inc
shlb
shrl
lods
arpl
cld
gs
and
xor
or
pop
mov
adc
or
sbb
inc
pop
rcrl
mov
popf
mov
repz
mov
cmp
and
add
cmp
lret
insl
mov
imul
es
mov
sub
std
xchg
shrb
inc
pop
pop
inc
stc
mov
pop
movsl
or
xchg
test
jno
pop
and
fmul
data16
lods
cmpsb
sbb
into
cltd
pop
pushf
faddl
sbb
jae
dec
enter
dec
xchg
xorb
fistps
mov
add
std
bnd
jmp
popl
add
mov
xchg
jo
jecxz
mov
pop
insl
rcrl
test
jg
lds
add
xchg
pmaxub
pop
adc
mov
and
les
or
testl
negl
fdivrl
xchg
sti
mov
dec
dec
stos
leave
sub
lea
fsubrp
out
push
aaa
pop
mulb
cmc
or
aad
faddp
imul
movb
sub
cs
mulb
cmp
mov
movl
rcll
jmp
outsl
loopne
pushf
mov
ja
push
mov
xor
push
push
sbb
jp
push
push
sub
loope
cmp
inc
repz
loope
insb
cmpsl
gs
movlps
ja
cmp
mov
sub
movsb
jns
mov
dec
rorb
inc
sbb
sbb
xlat
popa
icebp
call
dec
jns
movsb
jne
push
add
cltd
mov
in
adc
sbb
daa
pop
jg
or
mov
mov
sti
es
xchg
repz
and
mov
jne
jp
test
icebp
inc
inc
pop
pop
mov
lcall
das
cmp
popf
outsb
mov
fisubrs
ffreep
push
jmp
pop
hlt
loope
push
fldt
rorl
gs
decl
add
arpl
bound
nop
cwtl
push
xchg
inc
pop
out
xor
ret
dec
inc
stos
lods
jge
or
fmulp
mov
push
nop
sti
das
dec
dec
jp
mov
mov
inc
and
je
das
fnstenv
daa
into
pop
imul
jl
loop
pop
mov
inc
icebp
add
add
pop
dec
mov
mov
mov
jnp
in
into
fisttpl
jge
cmc
sbb
neg
les
lcall
mov
sbb
imul
push
outsl
mov
inc
mov
xor
pop
out
ret
dec
jne
std
xchg
leave
mov
js
mov
mov
xchg
xor
jb
aas
push
xlat
push
inc
dec
mov
and
push
jp
ja
cs
push
xchg
xchg
out
dec
pop
pop
lret
inc
sub
cmp
shr
subb
in
lods
mov
xchg
mov
movsl
adc
and
mov
fcomp
cli
pop
push
sub
lods
adcb
mov
dec
movsb
push
cmpsl
push
shrl
push
je
push
testb
mov
add
add
add
push
mov
popf
aam
dec
push
jecxz
mov
movsl
notb
xlat
push
cmp
push
xor
jecxz
in
mov
xchg
cs
lods
push
cmp
popa
shrl
rcrl
ss
fmulp
popa
sbb
testb
fadd
jmp
pop
cmc
das
out
mov
test
in
mov
or
lea
sub
cmp
scas
push
ja
das
cltd
fstps
push
in
lds
add
je
icebp
jge
fisttpl
pop
jno
cmp
xor
leave
popf
bound
cmp
or
sub
pop
aam
cld
out
ja
fmuls
xlat
pusha
jns
loope
into
push
jg
outsl
dec
push
push
outsb
lods
mov
mov
je
pop
std
cmp
adc
adc
push
mul
adc
xchg
mov
movsl
mov
lahf
movsl
pushf
insb
jns
adc
sub
clc
or
lahf
lahf
movsb
out
and
jbe
enter
jmp
es
pop
fs
test
jbe
int
andl
rcl
push
outsb
mov
aas
popf
mov
test
xor
js
or
push
mov
aam
mov
and
cmp
fs
bound
and
and
div
and
and
out
pop
fcmovb
or
nop
and
mov
dec
data16
decl
pop
push
hlt
pop
adc
lea
mov
orb
mov
and
push
mov
xor
mov
mov
andl
mov
xor
inc
jo
fmul
mov
aaa
pushl
cs
aas
lods
xlat
mov
sub
sub
xor
jp
imul
pop
pop
lret
fstl
cmpsl
movsl
jns
pop
mov
push
dec
out
or
dec
push
sbb
lahf
mov
sbb
das
jbe
out
pop
mov
sub
testl
popa
cmc
loopne
rorb
int
popa
test
cwtl
inc
gs
shrl
addr16
xchg
jo
adc
xor
insb
xor
dec
xchg
push
mov
fwait
adc
add
sbb
aaa
rcrl
out
cmp
test
cld
adc
fidivrs
ss
inc
pop
adc
lods
push
jp
pop
sti
cmc
xorl
hlt
or
pop
sbb
insl
outsl
jno
and
iret
pop
notb
sahf
movsb
outsb
xor
insl
jge
mov
xchg
gs
inc
cmp
popa
pop
and
movsl
iret
clc
mov
jecxz
enter
sbb
xchg
imul
je
mov
shl
push
popa
dec
in
xchg
mov
and
sti
dec
pop
test
xchg
sbb
jae
fisubl
daa
cltd
arpl
or
push
push
jns
lret
sbb
into
pop
rcrl
cwtl
sbb
or
js
in
arpl
mov
push
loop
push
mov
mov
ror
lret
loope
mov
std
notb
xchg
int3
mov
jp
push
sarl
or
xor
popf
push
and
and
ds
pop
fidivrl
les
fstpt
cmp
int3
cld
mov
mov
andl
adc
push
lock
loope
imul
popa
pop
sbb
sbb
sub
or
jne
push
xor
stos
lcall
in
ret
iret
aam
out
jo
mov
cmpsb
pusha
mov
in
loopne
jecxz
adc
xchg
loop
test
xchg
xchg
adc
and
sti
pop
cmp
jl
push
xchg
mov
and
jae
inc
xlat
xchg
dec
fisubl
xchg
inc
cs
add
or
dec
or
clc
add
ret
hlt
push
push
push
stc
push
scas
std
jle
test
mov
cmpsb
push
out
pop
int
fldl
sbb
icebp
push
sub
movsb
insb
push
out
movsl
mov
into
jg
inc
scas
push
stos
or
mov
sbb
mov
out
mov
and
out
cmp
sbb
mov
cmpsl
cmp
addr16
jle
enter
fidivrs
adc
mov
mov
pop
clc
stc
fistl
test
out
ss
dec
faddp
cli
sub
xchg
dec
ss
jbe
sbb
xor
mov
gs
mov
stos
enter
out
loopne
es
mov
in
mov
cmp
jl
call
pop
mov
stos
test
loope
mov
push
mov
out
fidivrs
pop
inc
ds
loopne
or
rcrl
popf
rclb
push
adc
xchg
jbe
ja
aaa
xor
sti
xor
arpl
push
jno
sub
dec
stc
insl
or
addr16
and
mov
pop
xchg
fdivs
push
test
rcrl
sbb
add
push
adc
and
sbb
add
mov
out
test
xor
pop
pop
mov
push
mov
daa
loop
push
bound
jbe
cmpsl
mov
lahf
rep
inc
cmc
cmp
fsubr
outsl
inc
xchg
loope
sbb
cmp
divl
sarl
std
vcomisd
cmp
lds
sbb
movsb
push
jne
ret
int
xor
or
bound
sub
mov
inc
inc
jecxz
mov
xchg
cmp
push
je
loopne
and
jb
shlb
dec
sbb
mul
sub
stc
js
pop
arpl
fldenv
lds
inc
xchg
sub
addr16
push
aad
shlb
xchg
xor
inc
sbb
or
jbe
xchg
and
jmp
frstors
adc
lret
lahf
inc
das
jecxz
xor
dec
int3
inc
pusha
cltd
xor
in
pushf
mov
sbb
or
mov
sbb
rorl
adc
sub
stos
jmp
lahf
paddusb
and
pop
loop
orl
negl
adc
loope
test
mov
jmp
cmp
cmp
cmpsl
pop
into
idivb
ja
ss
ret
addr16
mov
shrb
xchg
adc
jl
loopne
movsb
or
and
dec
pop
leave
fs
adc
mov
mov
test
xlat
xchg
mov
insb
pushl
out
xor
insb
inc
mov
neg
pop
iret
ret
inc
roll
lods
les
pop
lock
mov
adc
enter
mov
stos
mov
add
add
add
jns
mov
pusha
inc
outsl
sbb
rclb
outsb
mov
pop
jge
push
fstl
hlt
xor
pop
outsb
jae
mov
fidivs
jp
insl
sub
mov
mov
scas
into
lahf
jne
es
mov
xchg
pop
xchg
sti
subl
mov
inc
cmp
je
sahf
push
aam
adc
cltd
scas
or
inc
mov
data16
int3
mov
push
call
cltd
insl
fs
add
sahf
inc
fcomps
movsb
std
cmp
jecxz
shll
jno
xchg
pop
pop
ljmp
mov
jnp
sbb
js
movsl
inc
or
push
mulb
test
sbb
aam
jno
mov
out
cmp
cwtl
sti
sbb
mov
dec
in
adc
mov
adc
arpl
dec
shlb
std
in
lods
lods
add
cmp
call
cwtl
icebp
push
pop
rorl
cmpsb
call
aaa
xor
repnz
and
popf
or
in
jl
push
push
mov
jecxz
push
push
mov
fs
inc
pop
adc
mov
xor
ds
xchg
adc
inc
popl
int3
inc
outsb
scas
xlat
mov
lods
jl
mov
sbb
aaa
xor
cmpsl
leave
mov
mov
push
pop
adc
sub
test
cli
rcll
jae
inc
jo,pt
bsf
les
idivl
outsl
fiadds
jno
arpl
adc
pop
jge
xchg
dec
jns
or
pop
or
pop
inc
xchg
pop
cmp
iret
push
lock
jnp
stos
loop
ret
hlt
dec
sbb
adcl
adc
insl
sbb
bound
fsubrl
sub
sbb
inc
pop
mov
mov
pop
push
imul
sbb
outsl
popf
jle
add
je
lahf
dec
and
xor
dec
cmp
jae
jnp
add
pop
push
dec
xchg
push
out
mov
pop
je
fnstenv
fstps
push
fs
cltd
dec
mov
repz
mov
punpckhdq
fistpl
dec
pop
push
fnsave
nop
out
push
mov
xchg
cmp
jecxz,pn
jns
pop
pop
xor
stc
xchg
mov
sub
pop
or
negl
push
xor
scas
push
ss
aad
inc
or
push
lods
pop
mov
test
fldl
xor
les
mov
incl
pop
les
xor
ljmp
call
adc
mov
in
mov
xor
and
pusha
sbb
dec
test
into
adc
das
mov
test
pop
call
mov
mov
iret
dec
pop
push
sbb
sbb
imul
into
dec
int3
lock
std
add
sub
dec
pop
and
in
adc
pushf
mov
fsub
pop
add
lds
or
push
cmp
or
push
inc
test
jno
lods
mov
xor
sahf
sbb
xor
addr16
out
or
shlb
fcoml
pop
sar
leave
movsb
mov
shl
mov
mov
fldcw
aas
xchg
inc
jbe
jl
into
push
pop
repnz
mov
mov
jb
adc
mov
adc
and
mov
push
adc
out
loop
sar
dec
push
pop
xchg
iret
addl
and
dec
jge
loopne
jl
fsub
in
outsb
bound
lds
mov
mov
push
stos
jae
push
iret
pop
cmp
mov
push
rcl
les
loop
sbb
mov
jge
orb
xchg
ss
jnp
xchg
adc
add
loopne
sbb
fs
jnp
jne
jns
ret
mov
mov
sbb
fwait
dec
dec
std
xor
aam
push
out
pop
enter
mov
sub
cli
xchg
ret
sbb
aad
lods
add
adc
inc
mov
js
aad
pop
aad
pop
sahf
sbb
push
in
adc
lock
jmp
loop
xlat
test
fsubrs
dec
mov
cmp
add
adcl
pop
cmc
mov
dec
dec
jmp
sarb
test
test
fbstp
fcomip
shlb
xor
std
inc
mov
jne
imul
mov
mov
idiv
call
outsl
xchg
xchg
xchg
repz
stos
fadds
dec
xor
adc
stos
test
and
hlt
arpl
or
sub
cli
sub
das
mov
adc
rorb
in
sbb
les
lods
mov
hlt
adc
scas
repnz
lret
or
push
mov
hlt
icebp
mov
andl
enter
xchg
cmp
xlat
ror
mov
pop
push
popa
ljmp
jle
sar
into
inc
rcr
cmpsl
aas
sarl
clc
mov
inc
cmp
jae
das
out
xor
ret
adc
inc
negl
sbb
sarb
mov
jo
xchg
xchg
fisubs
jge
inc
cmp
inc
push
fwait
add
and
or
pop
mov
call
sub
mov
adc
jl
ljmp
mov
mov
fisttps
or
push
mov
xor
push
jge
push
sbb
stos
addb
xchg
movsb
lods
in
inc
mov
mov
lcall
adc
popa
ficomps
imul
mov
xchg
dec
loope
jge
mov
inc
mov
inc
push
jno
mov
int
jmp
or
scas
mov
inc
jno
pop
mov
cmpsl
mov
adc
fmuls
arpl
jge
dec
dec
inc
mov
out
jg
cmpsl
push
jae
jge
jmp
dec
cmpsl
dec
push
fcom
adc
and
fwait
pop
scas
pop
xor
sarl
add
jmp
movsl
or
jge
xchg
aad
pop
sub
popa
das
loop
les
out
pop
or
fadds
dec
sub
xor
rcr
icebp
mov
jno
push
and
and
mov
fdivrl
arpl
iret
mov
mov
loopne
mov
les
rorl
inc
out
and
xchg
xchg
mov
jp
sbb
and
or
mov
mov
dec
lods
shll
sti
inc
dec
pop
add
lcall
loope
bound
pop
mov
aam
hlt
into
in
adc
add
xor
and
push
outsb
inc
jle
dec
fs
xchg
scas
test
aam
hlt
into
in
adc
add
xor
and
push
outsb
inc
jle
dec
fs
xchg
scas
test
aam
hlt
into
in
adc
add
xor
and
push
outsb
inc
jle
dec
fs
xchg
scas
test
aam
hlt
into
in
adc
add
sahf
push
and
and
int3
orl
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imul
adc
sbb
je
fs
test
hlt
sbb
sub
xor
add
adc
fs
je
inc
inc
push
jle
mov
xchg
nop
in
nop
lock
rcl
incb
shlb
push
cmp
push
mov
cmc
loop
mov
xchg
mov
cmpsl
mov
fs
inc
push
arpl
outsl
xor
xchg
sub
jnp
cmp
fwait
sub
arpl
cmp
popf
out
xor
mov
outsl
mov
dec
dec
jnp
jg
popa
cmc
gs
inc
dec
pop
popf
je
and
add
xchg
loopne
mov
or
mov
push
sbb
jns
aaa
adc
pop
popa
and
add
adc
mov
adcb
and
imul
aas
sub
std
aam
fwait
push
divl
sbbl
jnp
xchg
pusha
pop
mov
in
xchg
mov
iret
sti
jne
shr
mov
pop
repz
loopne
push
xchg
cli
popa
mov
mov
sub
mov
add
js
fs
xor
inc
in
ret
sbb
lods
test
ljmp
and
inc
insb
jp
or
add
rcl
cmc
repz
xchg
mov
inc
jae
jl
xor
arpl
clc
mov
mov
xchg
mov
je
push
jl
sub
jo
inc
push
push
movsb
mov
xchg
nop
in
hlt
lock
rcl
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
nop
in
hlt
lock
rcl
and
lock
jge
sub
sbb
jmp
add
add
push
addr16
stos
cwtl
addr16
xor
dec
ljmp
inc
pop
scas
xchg
inc
lret
xor
in
les
jno
jge
push
popa
insl
inc
lock
rol
in
call
out
dec
or
rol
push
test
out
leave
inc
sbb
or
adc
iret
xor
add
fwait
xor
adc
leave
scas
lock
cmp
adc
mov
aas
cmpl
inc
push
rclb
lds
mov
icebp
xchg
addr16
push
sbb
arpl
das
lret
mov
cli
or
push
pop
sub
push
jo
mov
imul
insl
aam
bound
lods
lods
push
fwait
mov
or
adc
out
fprem1
dec
pop
inc
cmp
xchg
imull
xchg
jge
lret
cli
push
jg
cmc
mov
dec
pop
test
insl
adc
sti
sti
idivl
jecxz
sub
shrl
loop
add
mov
cld
and
ret
idivb
dec
cmp
jnp
bound
fistpll
inc
jno
loopne
lds
sti
pusha
cmp
push
jns
mov
xchg
out
xor
and
in
push
lock
or
ljmp
in
rcl
loopne
ret
mov
mov
pop
rcl
bound
add
cmpsl
cld
or
lods
inc
mov
inc
xor
fcmove
xchg
mov
adc
mov
scas
cmp
jns
push
xor
mov
fwait
ss
mov
out
add
das
or
sub
fld
fwait
mov
mov
pushf
fdivl
daa
cmp
mov
fnstsw
stos
or
dec
sub
xchg
jb
or
sahf
ds
mov
enter
push
mov
sub
add
lret
bound
jl
xor
or
and
jbe
push
jle
dec
notl
and
cmp
pop
xchg
pop
cld
dec
test
fbstp
sti
popa
aaa
mov
fbstp
xor
test
and
mov
in
inc
cmpsl
addb
push
into
scas
sbb
mov
mov
pushf
jb
and
lea
push
push
popf
or
lds
ss
jnp
xor
rcrl
add
mov
ret
mov
fistpl
add
mov
stos
sarb
and
pop
std
lods
dec
fcmove
mov
push
mov
xor
mov
or
cmpsl
out
and
xor
jge
rcrb
sbb
xchg
push
add
and
nop
out
pop
xchg
or
ljmp
lahf
pushf
or
cmovns
mov
add
mov
mov
jno
push
and
les
pop
or
push
push
sub
push
in
sub
mov
xchg
dec
jb
and
aad
adc
subb
cmp
shll
lahf
or
test
inc
std
out
minps
cmp
xchg
xor
mov
nop
arpl
in
adc
hlt
fdivrp
insb
push
jno
pushf
or
stos
dec
cmc
mov
cmp
and
shlb
loope
lock
pop
sbb
mov
add
or
dec
add
bound
push
add
jno
push
mov
cli
mov
jae
sahf
or
xchg
sub
fwait
push
movzwl
pop
dec
shr
shll
stc
arpl
pop
in
push
mov
pop
sarb
pop
push
bound
ror
psrlq
adc
mov
ret
cmpsb
sbb
sub
jne
das
lods
ret
xorl
adc
ret
lcall
mov
xchg
jo
popa
or
jmp
rcrl
mov
mov
out
movsb
or
cs
jg
pop
dec
inc
and
ja
xchg
dec
sti
enter
push
lahf
adc
shl
andb
mov
dec
pop
jle
nop
in
xor
shll
cmpsb
and
pop
and
outsb
xchg
lret
lahf
clc
movb
jge
ret
fildl
mov
clc
sbb
jns
ljmp
xchg
jg
mov
dec
ljmp
push
jnp
push
push
test
mov
cmp
lcall
mov
or
shll
sub
je
imul
and
mov
push
dec
cld
in
or
ds
sub
outsb
repnz
in
mov
enter
jae
rclb
fcmovu
rclb
out
outsl
mov
rorl
iret
pusha
cmp
arpl
adc
aaa
adc
jge
in
sub
jmp
clc
out
push
xor
js
cmp
lods
test
leave
scas
sbb
mov
dec
mov
adc
dec
mov
nop
sbb
imul
das
jge
or
lahf
aaa
sahf
mov
out
mov
enter
shrb
cmpsl
mov
int3
in
push
les
ds
xorb
jae
in
pop
inc
dec
push
cmp
jp
xor
mov
sbb
loope
mulb
adc
jg
arpl
mov
xchg
and
scas
push
in
movsb
lret
in
mov
xor
inc
fidivrl
mov
gs
lock
sahf
inc
jae
pusha
pop
nop/reserved
int3
sarb
sahf
adcb
and
fiaddl
cwtl
mov
pusha
fistps
adc
adc
add
cmp
dec
jl
icebp
xor
ljmp
pop
icebp
into
test
in
rclb
lret
daa
aas
aas
jo
loop
mov
add
lret
das
mov
dec
lods
sbb
scas
bound
rcl
adc
mov
gs
push
aas
nop
cltd
outsl
std
loope
mov
xor
rcl
in
xor
push
pop
mov
dec
jae
mov
xor
test
xchg
sbb
inc
leave
insb
add
or
pop
ffreep
lods
sub
fadd
mov
cmpsl
adc
outsb
add
ljmp
add
les
aaa
cs
jae
cwtl
clc
into
movsl
xor
jns
shl
and
inc
sti
mov
mov
mov
push
dec
add
xor
dec
sarl
mov
leave
inc
gs
sbbb
xchg
and
and
pop
lods
loope
sbb
pop
push
shll
fimull
mov
test
js
addr16
xor
sarl
outsl
add
push
mov
pop
cmp
and
das
xor
or
fidivrs
mov
test
sbb
jae
fs
sbbl
add
mov
push
ja
dec
jecxz
mov
or
out
add
lcall
dec
dec
dec
stos
or
out
insl
mov
aad
inc
push
or
push
inc
adc
mov
fbld
mov
mov
icebp
subb
push
dec
add
roll
aam
jl
repnz
jb
outsl
xbegin
sub
jb
pop
mov
pop
push
jae
int
je
cmc
lods
and
jnp
jb
xchg
inc
jge,pn
xlat
jb
out
cmp
sbb
daa
fisubs
push
adc
sti
test
pushf
fimuls
cltd
rcr
jg
in
fstpl
xchg
in
pop
ds
clc
sub
sbb
loopne
xchg
subl
add
ds
mov
ret
lcall
jle
add
scas
dec
add
push
aas
jae
sbb
and
sti
xor
mov
add
pop
movsb
push
aam
outsb
lret
hlt
aam
inc
push
aaa
push
jns
adc
btc
gs
mov
outsl
ljmp
push
dec
sahf
adc
xchg
enter
push
pop
fcompl
lods
in
mov
stos
jnp
cmpsl
imul
lahf
add
jbe
xchg
shlb
cmp
push
cs
push
mov
xchg
push
pop
or
inc
int
pop
mulb
lcall
mov
mov
xlat
mov
iret
outsl
mov
repz
adcl
xor
and
sub
imul
loope
xor
movsb
dec
pushf
les
imul
vstmxcsr
loope
pushl
push
mov
out
imull
insb
adc
iret
pop
test
lahf
data16
jmp
insb
cmp
xor
sti
pop
push
adc
lods
pop
jmp
arpl
nop
jmp
mov
xor
sbbl
cmpsl
bound
xchg
test
pop
inc
adc
cmp
adc
push
in
je
cmp
sbb
in
push
adc
and
sub
or
das
psraw
push
pop
dec
sub
rorb
xor
inc
sbbb
pop
fs
ror
xchg
pop
mov
mov
pop
sbb
xchg
xchg
ds
lret
xor
pop
addr16
cmp
scas
ja
cli
test
push
mov
lret
sbb
clc
in
pop
or
js
cltd
and
mov
add
dec
loop
xor
adc
add
stos
les
or
or
push
or
lods
imul
or
adc
mov
cmp
mov
dec
out
xchg
ret
fwait
sub
int
sbb
sub
js
subl
lcall
sbb
fsts
rcr
movsl
add
add
jle
xchg
clc
cmp
daa
cmc
mov
xor
sbb
jge
push
mov
jp
sbbb
je
xchg
push
ja
shr
cwtl
into
mov
mov
shll
mov
mov
sub
jecxz
lods
cmp
fldl2e
addr16
jmp
popf
inc
mov
fisttpl
dec
dec
mov
mov
cli
push
repnz
adc
cmp
leave
cli
sub
cmp
adc
xchg
in
add
xor
mov
scas
test
mov
repz
lods
roll
mov
mov
pop
sbb
out
xor
cmp
and
subl
jecxz
add
sub
pop
pushf
pop
ja
test
int3
inc
sub
xchg
or
and
addr16
enter
inc
jmp
and
arpl
jg
inc
notl
dec
lahf
xchg
pop
mov
pop
sub
repz
sti
arpl
or
in
or
adc
lods
stos
cvtps2pd
xor
cld
xchg
pop
sub
cmp
dec
add
xchg
push
lea
adc
das
sub
add
jl
mov
gs
fs
xchg
mov
pop
pop
jecxz
jb
test
cmp
ja
xchg
lds
adc
xlat
mov
sbb
popa
sub
fsubl
cltd
es
leave
dec
aaa
hlt
cmc
insb
fstp
pop
in
xlat
addr16
testl
and
jp
add
jmp
mov
lods
sub
dec
movsb
sbb
popa
add
dec
int
adc
sub
xchg
lcall
gs
pop
push
test
mov
insl
sbb
pop
mov
fstps
lahf
mov
hlt
movsl
add
adcb
iret
mov
sbb
mov
mov
mov
into
ds
add
pop
mov
aas
ret
pop
mov
xor
mov
pop
dec
cli
sbb
xlat
xchg
xor
rclb
pop
inc
fsubl
test
adc
cmc
mov
push
and
dec
add
sbb
sahf
int3
dec
int
add
dec
pop
les
dec
fstpl
pop
movsl
lds
push
mov
dec
mov
ljmp
mov
xchg
lea
dec
or
scas
scas
dec
adc
push
int3
int
dec
xor
cmc
cwtl
and
orl
xchg
xchg
fsts
and
xchg
sbb
aaa
popa
push
ror
jbe
mov
mov
push
icebp
fsubs
pop
out
inc
aam
sub
mov
clc
mov
or
rcrl
pop
loope
or
cmp
adc
or
lcall
inc
pop
adc
in
ss
adc
cld
daa
pop
in
clc
cmc
mov
dec
cmpsb
mov
mov
cmp
rclb
dec
sti
iret
in
nop
sbb
xchg
pop
and
iret
sub
cmp
jo
neg
lods
popf
jmp
cld
jae
add
or
mov
enter
lret
jns
aam
push
das
dec
scas
test
cmp
jns
ja
pop
out
ljmp
and
imull
test
sbb
cmp
jno
jb
cld
mov
arpl
xchg
lret
scas
sbbb
or
ret
lahf
call
pusha
aas
xor
hlt
xchg
test
test
lea
scas
adcb
mov
ljmp
mov
pop
fimuls
xor
test
dec
sbb
stos
xchg
adc
stos
mov
or
les
call
mov
and
dec
pop
stos
nop
rdmsr
call
cmp
into
hlt
push
sub
xchg
jns
ret
and
mov
adc
jbe
push
add
inc
iret
loopne
push
or
xchg
cmp
xchg
cmp
in
dec
dec
outsb
jmp
hlt
xlat
ror
mov
aas
push
mov
mov
ficompl
pop
mov
sbb
cld
and
mov
rcl
and
xorb
arpl
out
scas
cmpsb
clc
sti
stos
test
xchg
dec
jl
jg
movsl
ret
add
dec
out
imul
dec
unpcklps
dec
aad
xchg
dec
push
add
or
add
lcall
int
mov
xor
nop
pop
push
in
push
jmp
stc
xor
sbb
inc
out
cmp
shll
jo
fistl
push
jl
cmp
mov
dec
mov
repnz
fs
xchg
movsl
mov
sub
clc
test
movsl
das
sbb
sbb
adc
add
sbb
adc
sub
call
cmp
fiaddl
push
cmp
push
pop
dec
outsl
clc
insb
int
repz
adc
pop
cmc
repnz
das
push
rorl
mov
mov
fimuls
jne
out
das
pop
jae
and
rcr
xlat
cs
loop
cld
xor
rcrl
and
cmp
mov
gs
es
xor
mov
fdivl
jbe
out
add
cmpsl
testb
movsl
into
jns
push
jbe
dec
mov
jg
out
xorl
repnz
and
and
pushf
data16
lock
int3
xchg
sti
out
sbb
mov
cmp
adc
sbb
adc
pop
xchg
jmp
adc
ds
cltd
dec
cmp
das
movsb
cmpsl
and
scas
fldt
xor
ret
push
mov
push
out
push
and
mov
repz
out
ret
mov
adcl
jne
sbb
mov
fs
rolb
jne
or
xchg
sbb
mov
mov
out
lret
scas
imul
bound
dec
cwtl
das
fisttpl
xchg
sbb
mov
pop
fwait
rcrb
cmc
adcl
pop
pop
pop
jmp
push
dec
addl
in
sbb
popa
test
xchg
pop
fisttpl
in
lret
pushf
rcl
or
ret
adc
cmpsl
out
add
jecxz
jp
gs
scas
sarl
adc
stos
idivl
inc
jle
jg
cmpsl
sbb
mov
fs
sub
push
push
popa
xor
dec
fwait
lods
mov
dec
fmul
enter
in
mov
loopne
lods
ljmp
out
imul
shlb
or
dec
movsb
cmp
mov
or
xchg
lods
lds
mov
jmp
sub
ljmp
dec
cmp
adc
xchg
sub
test
and
xchg
loop
sub
fwait
push
icebp
aam
add
mov
data16
xor
cmp
push
mov
mov
test
fists
add
push
inc
adc
push
mov
lcall
je
fwait
std
adc
mov
movsl
xchg
cmpsb
pusha
std
cmp
imul
mov
and
adc
xchg
dec
es
clc
mov
inc
outsb
fs
aam
cmp
enter
test
cmp
fists
push
jmp
std
mov
lods
mov
sti
and
jbe
icebp
and
repz
mov
int
mov
jge
data16
push
push
lret
lret
and
fstp
andb
inc
add
mov
sbb
sub
jnp
cmp
cld
repz
hlt
shrl
hlt
fisubrl
stos
pop
jb
ffreep
jb
cmp
or
push
xchg
aaa
loopne
ret
jge
pop
cli
jne
push
cmp
pop
jno
add
out
add
cmp
mov
cmp
mov
aaa
and
into
jae
mov
popa
jl
aaa
sub
cmp
fcmovu
mov
push
mov
icebp
mov
mov
adc
cmp
ja
jp
jmp
call
fldl
cmp
inc
pop
or
call
xchg
daa
mov
and
mov
out
xchg
push
sub
lret
cmp
push
je
test
inc
sbb
and
test
push
les
push
jp
mov
sarl
mov
pushl
out
cmp
sti
push
ret
cwtl
sub
mov
icebp
push
imul
outsb
sub
mov
js
scas
jo
or
loop
xchg
or
push
popa
adc
out
sub
push
mov
sub
fisttps
add
sub
subl
test
xorl
cmp
mov
adcl
adc
loop
jl
movsb
test
mov
mov
inc
push
mov
in
int3
and
out
sbb
jae
cmp
mov
xchg
adc
sti
dec
push
test
mov
xchg
mov
pop
inc
sub
shll
popa
nop
sti
mov
sbb
dec
sbb
sarb
sbb
cmpsl
dec
pop
aam
hlt
shll
lret
aaa
inc
push
or
jne
and
int
pushf
mov
fnsave
adc
cmpsb
push
xchg
mov
cli
repz
mov
loopne
cmp
gs
popf
pop
inc
inc
cmp
ret
inc
cmpsb
rolb
xchg
ret
cmp
dec
outsl
call
add
mov
mov
mov
insl
sub
and
shlb
push
push
or
into
ss
add
fdivl
push
pop
scas
aam
clc
not
mov
ljmp
adc
pop
cmp
nop
loope
dec
in
in
and
je
stos
popa
mov
mov
xchg
divps
xor
test
mov
sub
popa
lret
cmp
jecxz
lods
push
cli
adc
lds
mov
xchg
lret
inc
addb
sbb
sub
negb
pop
mov
pop
inc
stc
fisttpl
push
xor
push
adc
xor
fsubrl
sti
addl
inc
cwtl
int3
dec
sbb
cmp
cli
insb
stos
or
imulb
and
jae
cmp
xor
push
pop
bound
mov
push
mov
xchg
pop
clc
pop
movsb
adc
cwtl
std
das
int3
xchg
mov
pop
sbb
xor
pusha
dec
test
and
sbb
cli
jg
mov
leave
jo
mov
push
icebp
scas
scas
mov
mov
jne
stc
cld
add
or
push
add
les
mov
mov
cmpsl
push
mov
stos
xchg
mov
add
fnstenv
jp
jns
lds
inc
sub
test
inc
test
push
sbb
jp
inc
je
add
or
in
xor
push
push
rorb
imul
addr16
jg
cmpsl
mov
or
shl
int3
adc
ret
inc
js
addr16
in
cld
clc
xor
inc
out
scas
dec
mov
cltd
or
test
stos
jns
push
test
dec
mov
jmp
adc
scas
daa
fistps
mov
fcomps
cld
ret
mov
enter
xor
daa
push
sub
pop
push
fwait
mov
shlb
pop
lahf
inc
mov
cmp
lds
iret
sub
and
das
mov
push
mov
imul
arpl
and
mov
sbb
push
or
movsb
jne
les
sub
push
mov
rorl
cmpsb
xchg
jecxz
jp
dec
sub
adc
jge
mov
sub
cmp
arpl
push
cmpsb
sbb
mov
lods
mov
cmc
mov
push
cwtl
pop
faddl
push
in
leave
addr16
not
sub
popa
lock
add
ret
push
popf
movsb
je
xor
pusha
je
inc
inc
push
push
movsb
mov
xchg
nop
in
hlt
lock
rcl
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
nop
in
hlt
lock
rcl
and
aaa
ds
adc
gs
jo
inc
inc
push
push
mov
adcb
ror
xor
les
aam
in
push
fs
fs
rcl
movsb
pop
dec
sbb
adcb
mov
inc
push
jb
bound
es
adc
aaa
xchg
mov
cmc
xchg
xchg
xchg
mov
mov
push
inc
bound
pop
add
xor
and
fadd
ret
and
xchg
in
inc
mov
mov
push
push
jp
or
sbb
sub
xor
in
sahf
xchg
xchg
idivl
icebp
lret
mov
inc
inc
ds
sbb
dec
add
cmp
push
mov
mov
sbb
push
jb
jb
aad
std
jmp
sbb
aas
or
add
ret
das
cli
fistpll
mov
pop
and
fcmovnbe
inc
cmp
jb
xchg
xchg
sbb
mov
pop
push
push
xchg
addr16
xlat
fidivrl
enter
sub
pop
mov
push
mov
mov
xchg
inc
daa
ret
ja
fimull
xlat
out
loop
cmp
sbbl
cmpsl
pop
dec
mov
inc
mov
addr16
mov
rcrb
cmp
out
aam
loop
pop
mov
inc
jb
jne
add
sbb
xor
cmp
lret
iret
ljmp
xorb
daa
push
pop
pushw
jbe
push
outsl
jns
dec
dec
pop
cmpsb
scas
ret
mov
cwtl
ljmp
push
aas
inc
push
pop
pop
pusha
jb
je
and
sarb
xchg
mov
cmc
icebp
clc
ret
sarb
push
jo
pop
push
bound
push
add
xor
and
rol
ret
out
notl
cmpsl
mov
push
jb
bound
pop
add
xor
and
rol
ret
out
notl
cmpsl
mov
shrb
inc
or
jb,pn
fwait
jp
cld
push
mov
or
aad
cs
xor
data16
sbb
sbb
in
in
xchg
xor
int
sub
add
mov
dec
pop
cmp
aas
or
ljmp
sbb
test
push
and
call
lahf
mov
cmpsb
mov
repz
movsb
mov
or
cmpsb
aaa
out
shl
mov
mov
outsb
test
add
push
sub
add
cli
jge
cmp
js
andb
pushf
pop
pop
cmp
push
out
add
pop
jo
data16
push
int
inc
iret
popf
add
shll
leave
shll
pop
and
xchg
ret
and
movsl
sbb
add
xorl
jnp
std
dec
ucomiss
add
clc
inc
pushf
js
std
cmp
pop
fildl
sub
xor
or
pop
pop
stos
push
inc
mov
std
or
sti
sbb
xchg
in
dec
je
ret
inc
ret
cmp
stc
pop
jo
addr16
sub
fsubr
rcr
push
jmp
jl
in
stc
mov
mov
sbb
out
mov
xchg
flds
outsl
sbb
mov
push
cmpsb
mov
popf
jbe
xchg
loopne
mov
loop
out
lock
jge
je
xor
xor
or
xchg
push
loopne
sub
cwtl
push
movsl
sub
sbb
mov
stos
loop
fs
in
inc
mov
aam
in
aaa
loopne
and
adc
jne
sbb
jno
decb
fnsave
push
jl
mov
iret
bnd
xchg
dec
mov
add
inc
jmp
dec
or
inc
mov
add
mov
out
jl
dec
cmp
in
jne
scas
pop
ds
or
les
roll
bnd
pop
aas
aaa
ja
dec
mov
jnp
nop
inc
mov
in
mov
sub
stos
mov
sub
xor
mov
jge
testl
scas
test
cld
jno
or
ss
pop
xlat
jne
testb
movsb
sub
xor
lret
xchg
xchg
ret
dec
jo
dec
mov
mov
or
and
rorl
cmp
outsb
subb
std
sti
xchg
movsl
in
imul
pop
xchg
call
pop
loopne
mov
jo
ja
cmp
data16
inc
jmp
mov
lods
push
fisttps
push
adc
inc
xor
jecxz
jbe
add
shrl
inc
aaa
in
mov
stc
ja
push
int
movsl
js
dec
movsb
lret
mov
repz
or
inc
push
fisubs
add
int3
or
cwtl
jg
enter
mov
pop
push
aad
mov
dec
xlat
ror
test
cmp
ret
adc
mov
imul
xor
gs
or
mov
cmp
push
mov
xor
inc
das
into
mov
xchg
in
add
pop
xchg
je
mov
and
jge
mov
or
das
cltd
iret
lret
inc
add
sbb
pop
sbbl
dec
add
cmp
sub
jecxz
mov
push
xor
je
fstpt
test
mov
sub
cld
int3
jmp
out
cmpsl
mov
popa
sbb
popa
call
bound
shll
ds
cmpsb
inc
cwtl
push
lahf
mov
in
add
loop
mov
nop
jno
mov
mov
sbb
mov
sbb
mov
cmp
arpl
dec
dec
sub
lret
mov
mov
lods
fdivrl
cmpl
xor
adc
push
int3
in
in
sub
jnp
push
shlb
mov
js
iret
xchg
repz
clc
adcl
ljmp
jecxz
cmp
inc
jge
mov
push
mov
or
jle
test
rcrl
or
inc
dec
jge
push
sub
lret
shlb
ja
sbb
push
dec
mov
mov
ret
movsbl
stos
jnp
loop
jmp
pop
fcompl
inc
aas
sub
cmp
cmp
pusha
lds
ds
rcll
cmp
flds
add
mov
int3
aad
cwtl
adc
sbb
and
ja
cwtl
stos
and
push
sti
jp
fbld
ficoml
adc
dec
popf
mov
push
cli
sar
push
mov
sahf
cmpb
jne
xchg
cmpsl
jne
icebp
push
mov
cmpsl
pop
add
mov
iret
xchg
leave
js
inc
dec
lret
xor
sti
dec
inc
and
rcrl
cmpsb
mov
jns
mov
fisttps
pop
mov
add
insl
pop
jnp
pop
fcoml
cli
push
orl
dec
jp
lret
sbb
push
dec
imul
or
add
lret
mov
cmpsb
mov
test
pop
retw
pop
in
mov
scas
sub
add
and
call
in
nop
aaa
lret
sbb
xchg
jge
mov
push
ja
dec
in
lock
push
mov
push
dec
ljmp
pop
push
xlat
leave
jb
mov
shrb
je
xchg
or
dec
sarb
sub
sub
shrb
cmp
and
fs
nop
test
sub
arpl
adc
mov
sbb
cwtl
shrb
out
ljmp
add
sub
jb
mov
xchg
cwtl
mov
cmpsb
and
sbb
cmc
es
push
repnz
arpl
pop
nop
idivb
lock
es
jae
rclb
adc
cmovno
popf
jl
fsub
jns
pusha
sub
push
cltd
mov
sub
cld
jg
mov
xchg
rorl
scas
xchg
and
adc
imul
mov
jle
lds
push
dec
and
push
aad
negl
cmp
sarb
sbb
push
jmp
les
arpl
push
outsl
pop
andb
hlt
add
rorb
dec
inc
inc
cmp
test
cmp
gs
xor
in
cwtl
dec
std
pop
xchg
jg
das
dec
lret
loop
push
stos
push
imul
jno
add
stos
rol
sete
clc
mov
add
inc
dec
mov
or
push
lods
stos
sbb
push
lock
gs
rolb
mov
or
push
pop
jo
mov
dec
pop
add
insb
sub
add
popa
add
stos
std
and
xor
jle
arpl
xchg
sub
and
mov
fsubs
lret
sub
or
mov
stc
mov
jg
xchg
stos
or
test
inc
or
repz
and
cmp
mov
dec
inc
push
sbb
inc
fwait
xor
mov
push
stos
xor
push
mov
mov
jle
icebp
jmp
mov
popa
or
xorl
loopne
fwait
inc
mov
sbb
aas
or
jo
push
mov
mov
xor
add
sbb
add
mov
loope
clc
cltd
xor
cmp
sahf
lods
out
incb
rcr
stos
movsl
mov
jb
insl
add
imul
pop
mov
xlat
or
sbb
pop
inc
dec
or
cmc
js
sahf
jne
aaa
mov
mov
mov
add
mov
jmp
out
pop
inc
lods
add
aaa
mov
outsl
add
fidivrl
push
iret
or
mov
data16
daa
jp
xchg
xor
rorb
icebp
outsl
pop
cmp
push
cmp
push
idivb
adc
dec
xchg
lahf
sub
mov
pop
arpl
scas
pushf
inc
dec
add
negl
cmp
pop
scas
mov
std
inc
fists
or
mov
mov
dec
movsb
fwait
xchg
je
hlt
dec
outsl
sbbb
stos
jle
and
pop
aas
and
inc
jl
mov
inc
cmpsl
sub
fbld
and
mov
fcomi
popf
add
sub
jns
push
add
inc
xchg
jmp
fs
adc
clc
mov
and
xor
leave
iret
inc
lret
pop
cltd
mov
mov
aam
in
push
push
stos
xor
es
les
lock
insb
filds
popa
mov
inc
inc
mov
xchg
cmpsb
dec
dec
stos
lret
or
dec
mov
sub
xor
movsl
add
pop
stc
fists
xchg
mov
shrl
mov
mov
outsl
pop
cmp
cmp
jmp
mov
icebp
pop
fmuls
mov
mov
iret
out
sti
lea
mov
xor
sbb
icebp
mov
pop
xorb
ljmp
jle
outsb
fisubrs
in
cmp
sub
cltd
repz
imul
insb
mov
mov
ds
js
push
enter
in
dec
cwtl
jae
nop
nop
and
js
incb
dec
lea
incb
jecxz
cmp
mov
jno
sbb
mov
popf
xor
idivl
or
add
bound
xlat
in
fwait
or
mov
xchg
out
jmp
jecxz
mov
add
imul
neg
sbb
mov
fsubrl
sub
jmp
dec
push
popa
in
jp
fsubs
fisttpl
mov
cli
in
cmp
cmp
or
mov
int
dec
ss
mov
pop
test
sbb
mov
imul
or
xor
cmp
mov
cmp
and
test
inc
sub
icebp
xchg
daa
mov
jnp
cmp
sbb
hlt
pop
cs
repz
cld
shlb
sub
sub
or
and
ja
jo
mov
in
xor
mov
scas
and
in
push
xor
xchg
lret
xchg
fimuls
inc
mov
inc
dec
hlt
mov
das
test
jle
les
mov
punpcklwd
dec
add
lea
push
push
outsl
adc
inc
pop
sub
aam
repz
push
insl
push
mov
ficompl
addl
xchg
mov
imul
scas
jo
lods
in
mov
sub
adc
mov
xchg
jmp
daa
or
lret
mov
pusha
mov
add
call
mov
dec
ret
pop
hlt
xchg
push
lods
cmp
xor
push
repnz
jmp
sbb
xor
lds
xchg
hlt
gs
jle
adc
int
lds
movsb
in
sub
mov
sbb
xor
sti
and
ds
aad
xor
movsl
pushf
or
cmp
in
sahf
sbb
and
pop
ds
sub
xchg
jl
mov
mov
cmp
cmpsb
inc
xor
pushf
adc
cmp
daa
notb
mov
popa
pushf
loope
adcb
dec
fisttpl
inc
loop
push
div
and
clc
lea
rclb
inc
repz
xchg
cmp
gs
mov
fwait
jecxz
jbe
mov
xor
inc
xchg
or
push
out
jns
aad
and
push
push
adc
jbe
dec
jns
ds
mov
sub
hlt
cmc
scas
adc
inc
into
adc
gs
xor
push
sbb
xlat
sub
movsb
or
lret
arpl
sub
adc
dec
out
mov
or
xchg
scas
dec
lock
das
mov
xchg
orl
push
add
lret
repz
std
adc
and
mov
lods
mov
aaa
mov
inc
cmp
xchg
pop
cwtl
jo
stc
test
cli
out
cmc
jbe
popa
jno
call
pop
f2xm1
mov
xor
gs
rolb
mov
adc
stos
mov
push
pop
cmp
in
mov
dec
add
dec
and
popa
mov
xchg
mov
mov
popf
call
test
mov
sbbl
popf
fsub
gs
cmpsl
aad
xchg
jb
pushf
in
enter
push
mov
sbb
push
sti
dec
jmp
xchg
jne
pop
mov
mov
je
test
dec
subl
repnz
lds
shll
jns
inc
push
mov
pop
dec
sub
adc
arpl
sub
into
pop
xor
loope
enter
orl
out
and
pop
je
out
outsl
cmp
bound
test
push
jnp
mov
jnp
mov
pop
push
jge
mov
add
sbb
sub
sub
cmp
movb
lret
out
mov
xchg
dec
adc
dec
hlt
fdivs
pop
sub
hlt
jmp
fld
and
xchg
push
inc
push
xchg
dec
mov
in
adc
xor
rep
sbb
test
pop
mov
dec
mov
jge
sbb
cmpsl
int
xor
out
xor
jecxz
mov
jb
insb
imul
and
push
inc
js
cmp
mov
jne
xchg
popf
bound
or
outsl
stc
mov
pop
sti
mov
push
xor
inc
mov
loopne
mov
dec
cs
add
jae
data16
or
arpl
insl
or
mov
jmp
cld
testl
jge
xchg
add
neg
test
fnstsw
andb
jmp
insl
xchg
add
int
stos
jne
or
adc
mov
js
test
and
loope
cwtl
int3
iret
mov
test
jo
mov
daa
xchg
iret
fistps
xchg
add
roll
dec
adc
xor
sarl
lods
pop
mov
xlat
int3
jecxz
xchg
push
inc
arpl
in
test
aad
mov
lahf
xchg
mov
and
aaa
pusha
cld
xlat
clc
loope
fistps
cltd
pop
mov
sarw
sbb
jg
dec
bnd
leave
les
ret
testl
mov
scas
sub
jae
push
loop
bound
push
das
movl
push
jge
lods
lods
scas
imul
jle
mov
sbbb
sub
push
stos
push
sahf
popa
or
sub
cltd
ret
jb
fcoms
in
dec
popa
adc
adc
scas
push
mov
cltd
das
dec
or
adc
push
inc
jb
dec
or
push
fildl
jecxz
clc
fidivrl
lock
xchg
and
into
ficomps
das
clc
sbb
icebp
iret
or
sub
push
mov
sub
xchg
cld
test
and
xor
es
sub
scas
cmp
ret
mov
bound
adc
lock
inc
jge
inc
loope
xor
cmp
dec
frstor
xor
mov
enter
fnsave
jp
fcomps
int3
lahf
in
out
pop
rcrb
fistpll
sub
fs
add
fnstenv
inc
iret
push
notb
mov
dec
cmp
pop
adc
mov
fsts
mov
gs
mov
iret
leave
dec
mov
lret
xchg
lods
mov
inc
mov
dec
daa
inc
xor
jecxz
fldt
mov
ficoms
lcall
mov
push
pusha
int
mov
cltd
repnz
mov
mov
mov
inc
jns
adc
std
add
stos
loopne
inc
loop
push
pop
xchg
cmp
filds
adc
or
shrb
and
adc
jl
cmp
dec
sub
mov
repnz
or
pop
and
mov
lds
das
mov
inc
mov
pusha
mov
sub
xchg
loopne
sub
cmp
xor
jmp
inc
bound
mov
popf
dec
jbe
or
xchg
jg
pop
int
in
xchg
int3
and
mov
or
lret
adc
xchg
je
test
out
imulb
ss
imul
sbb
in
roll
push
dec
dec
xor
xlat
cli
andl
iret
sti
cmpsl
out
jbe
int
popa
mov
enter
pop
out
iret
imull
mov
frstor
cmp
xor
leave
repz
insb
and
push
pop
add
sbb
mov
imul
fmuls
push
sub
ss
aam
lds
loopne
adc
out
jbe
jbe
adc
sarl
sbb
dec
fcomps
daa
jne
aad
fmull
rcll
dec
imul
fwait
xor
dec
int
cmp
xchg
sub
xor
jno
jle
push
push
ffree
xor
adc
mov
cmc
and
fists
push
sbb
ret
mov
mov
iret
pop
js
stos
pop
sub
les
dec
pusha
arpl
cwtl
push
data16
dec
scas
pop
jnp
movsl
mov
pop
sbb
jge
repz
xchg
or
shrb
add
jg
dec
stc
bound
sub
push
dec
dec
mov
popa
leave
add
mov
jp
and
aad
jbe
and
inc
clc
inc
out
dec
and
add
test
fwait
test
popa
jp
movsb
gs
insl
inc
stos
ds
xor
jb
loope
mov
hlt
inc
push
adc
in
js
stos
inc
dec
rcrb
xchg
xlat
aaa
fst
roll
xchg
jg
es
ret
lahf
push
aaa
cmp
inc
xchg
mov
mov
lods
test
mov
mov
mov
std
loopne
cmp
mov
sbb
les
dec
sbb
movsb
fiaddl
and
add
enter
jns
inc
sbb
shr
push
divb
mov
divl
sub
iret
iret
stc
ret
mov
out
xor
fadds
push
or
mov
fwait
pop
jg
xchg
xchg
mov
cmpsl
fistps
aam
cltd
sbb
sbb
dec
mov
sbb
ja
daa
push
xorb
imul
or
sub
mov
imul
xor
aad
cltd
inc
inc
jns
test
das
pop
das
bound
test
dec
jecxz
leave
xor
mov
ja
movb
and
popa
punpckhwd
and
stc
es
adc
mov
in
fistpll
into
pop
das
fwait
mov
pop
inc
bound
shl
sbb
add
leave
sub
mov
sbb
clc
movsl
ljmp
pop
sbb
test
into
das
hlt
jnp
xchg
aad
jnp
lods
test
push
mov
pop
cmp
cmp
adc
daa
sub
jle
pop
adcb
mov
cmp
mov
push
jne
rorb
adc
sbb
inc
and
mov
mov
sub
lods
sub
aas
adc
push
gs
out
cmp
js
cmp
repnz
dec
inc
mov
int3
adc
push
sbb
mov
mov
inc
add
mov
push
add
imul
dec
fcoms
adc
shlb
test
neg
cmp
mov
inc
mov
fadds
push
cmp
leave
jbe
lods
pop
dec
ret
push
push
jb
lcall
add
xchg
mov
adc
loopne
cmp
ljmp
add
aad
stc
mov
dec
in
in
ret
lods
bound
cmp
adc
mov
aas
xchg
jmp
xchg
push
xlat
pop
pop
shlb
cmpsb
gs
add
and
rorl
mov
stc
jo
clc
jp
inc
ret
push
fstpl
xor
out
inc
movsb
setns
lret
inc
push
ret
int3
or
xrelease
mov
dec
sub
mov
pop
negb
inc
cmp
scas
aam
mov
outsb
int
aam
in
loop
mov
xlat
jl
mov
mov
push
inc
or
adc
addr16
xor
sub
adc
xor
fimull
sahf
cmp
pop
call
loopne
push
mov
jge
sbb
scas
cmp
rorl
sub
pop
popa
xor
mov
pop
cmc
adc
sub
in
cld
lcall
mov
dec
mov
cmp
and
rcll
int3
jmp
mov
adc
lds
test
push
add
lcall
xchg
inc
shll
and
andb
mov
xchg
int3
dec
jae
xchg
test
mov
in
cmpsb
xor
sti
lea
aad
pop
sub
add
stos
xchg
push
inc
outsb
jecxz
movsl
pop
push
xchg
mov
lods
lcall
ret
repnz
rcrb
xor
scas
push
cwtl
in
and
cmp
sub
les
pop
pop
mov
add
lret
jno
inc
pusha
test
jb
push
das
shll
add
leave
mov
test
push
jmp
inc
out
repz
sub
push
aam
ljmp
and
stos
cwtl
in
lret
shlb
add
and
push
xchg
lock
sbb
add
lods
jle
xchg
outsb
mov
scas
fs
and
cmp
jg
leave
int
xchg
adc
ja
pop
add
xor
and
rol
ret
out
notl
cmpsl
mov
push
jb
bound
pop
add
xor
and
rol
ret
out
notl
cmpsl
mov
push
jb
bound
pop
add
xor
and
rol
ret
out
notb
cmpsb
xchg
mov
inc
jbe
inc
bound
pop
add
mov
mov
jge
out
and
or
pop
pop
dec
inc
aaa
push
daa
fs
je
add
data16
sbb
xorb
xor
test
xchg
push
and
push
daa
or
je
add
adc
and
xor
les
hlt
xchg
test
cld
cmpsb
testb
pop
sbb
jg
dec
xor
mov
out
xchg
repnz
mov
call
push
fs
pusha
add
pop
test
insl
out
mov
sete
mov
test
test
in
icebp
push
sub
xchg
xchg
test
dec
mov
js
xchg
enter
dec
aas
mov
and
pop
int
push
dec
sub
pop
sbb
std
hlt
js
push
rcrl
xlat
mov
sub
adc
xor
lds
pop
pusha
push
xchg
bound
mov
fadds
jae
mov
adc
dec
push
pop
in
mov
shl
negl
inc
mov
out
mov
fistl
pop
neg
ror
insl
push
movl
pop
and
aaa
fs
je
loopne
insb
addr16
xchg
pop
add
les
xchg
int
sub
jb
bound
jp
push
cmp
fadds
loop
xchg
cli
in
mov
xor
fs
sub
and
mov
repnz
int
cmc
mov
aaa
cmp
add
inc
adc
and
xor
les
hlt
xchg
mov
inc
aaa
push
daa
fs
je
add
adc
and
xor
les
hlt
xchg
mov
inc
aaa
repnz
nop
mov
lret
cld
cld
stc
dec
cltd
xchg
pop
lods
cs
pop
xchg
jo
jge
adc
jo
jmp
cmp
scas
cmc
lahf
xchg
into
pmuludq
jns
movl
jle
gs
movsl
std
add
xor
inc
rolb
mov
test
mov
add
or
cmp
add
xchg
lock
push
push
xor
dec
or
pop
fistps
pop
sahf
push
mov
pop
fldpi
mov
jbe
mov
loopne
mov
outsl
ficompl
push
and
lret
sub
cmc
cmp
xchg
lcall
movsl
mov
je
add
fnstcw
xchg
movsl
jo
cmp
fs
mov
push
in
sar
adc
sub
push
lock
cmc
cltd
fwait
mov
stc
mov
jae
mov
sbb
mov
cmp
jg
cwtl
sti
sub
cmp
lret
imul
add
movsb
ret
cmp
jl
pop
lods
add
push
cmp
and
movsl
xchg
push
or
push
shrb
test
leave
sub
bound
add
adc
mov
pop
sub
mov
cmp
ljmp
dec
loope
int3
push
in
dec
ret
lcall
pop
dec
lret
add
icebp
pop
adc
hlt
pop
pop
push
repnz
push
mov
sbb
jl
cmpsb
dec
aas
in
outsl
das
push
jnp
mov
icebp
adcl
insb
xor
ja
mov
inc
and
loopne
adc
pop
das
sub
sbb
enter
pop
push
inc
inc
mov
or
cld
fs
jne
pushf
mov
rcr
enter
jg
jns
ret
notb
mov
loop
sub
int
icebp
inc
mov
movsl
das
mov
rcll
mov
addl
cltd
xchg
call
in
stos
mov
push
xlat
mov
jb
mov
inc
and
into
fbld
xlat
icebp
sbb
xchg
in
aas
push
loope
or
dec
and
scas
add
popf
cs
mov
and
sub
cmpb
test
idivl
xchg
add
ja
mov
lea
cmp
imul
mov
dec
insb
pop
rorb
and
mov
lods
jo
ja
jp
repz
into
cmp
jae
lea
repz
clc
dec
stc
sub
adc
dec
push
clc
imul
std
rorb
das
mov
xchg
inc
cmp
out
cmp
lock
or
sub
nop
les
jbe
and
jle
pop
test
icebp
sbbb
ret
mov
and
movsb
ficoml
push
cmp
lods
test
jnp
sarl
lock
add
sub
cmp
into
popa
push
sbb
icebp
movsb
push
fildl
add
xchg
mov
ret
push
leave
mov
scas
shl
fwait
mov
insl
inc
call
pop
out
sub
pop
mov
ljmp
mov
push
xor
lock
fdivs
pop
icebp
lods
xchg
sbb
fiaddl
fdivrl
cld
cmpsl
mov
aaa
pop
or
or
inc
std
aam
cltd
sub
jno
divb
ret
repz
pop
cs
mov
push
lahf
jl
dec
add
mov
push
jns
in
notl
xor
aaa
data16
movsb
test
lods
test
jns
inc
pop
gs
jg
jmp
arpl
xchg
mov
dec
xor
fs
rorb
daa
jge
fiadds
js
xchg
cli
lret
clc
xchg
rorl
fldl2t
jne
cmp
add
mov
scas
mov
in
arpl
xor
imul
aas
inc
mov
iret
lods
test
or
push
sub
movsl
ja
cmp
pop
xor
xlat
pop
sub
movsl
pop
mov
flds
push
adc
dec
and
sbbb
push
jp
push
addr16
push
cld
inc
ljmp
cs
mov
inc
sub
pop
ret
add
mov
sub
daa
mov
int
mov
fisubrl
nop
adc
xchg
lds
fs
mov
outsb
ljmp
mov
xlat
pop
test
sbbb
mov
clc
fnstenv
in
cmp
or
imul
xor
mul
mov
add
mov
cmp
insl
fwait
pop
or
stos
out
push
and
jle
scas
insl
push
mov
push
or
inc
cltd
adc
repnz
xor
and
dec
sub
mov
test
sub
add
fbld
mov
fdivrp
daa
mov
pop
mov
outsb
push
cmp
pop
ss
lea
jp
fmul
and
push
fstpt
add
ficoml
xor
fimuls
movsb
jno
adc
dec
hlt
movsb
push
push
les
sbb
mov
ja
push
add
xchg
cli
mov
daa
pop
push
sahf
mov
ljmp
jmp
mov
mov
and
rcrl
addr16
add
jg
cmp
xor
mov
jnp
pop
into
lahf
adc
outsl
loopne
and
and
add
jge
sti
inc
lret
mov
es
ret
dec
dec
jl
es
adc
push
pop
clc
call
pop
std
mov
jle
idivl
shll
push
add
jle
mov
push
clc
jecxz
shll
in
jo
test
sbb
dec
pop
adc
daa
push
das
xchg
fwait
in
iret
sub
scas
push
xchg
dec
adc
imul
shll
or
pop
push
inc
mov
testl
sbb
pop
xchg
test
xor
imul
pop
xor
cmpsb
js
add
pop
lea
je
mov
lret
dec
lock
divb
pop
cmpsb
push
ja
fisubs
xchg
adcl
pop
xchg
in
les
fs
roll
cli
xchg
aaa
xor
push
inc
jp
dec
add
pop
scas
arpl
rcrb
xchg
lods
subb
shll
stos
imul
arpl
jo
xchg
fstpt
jo
mov
or
pop
mov
fstps
mov
inc
jmp
add
mov
jns
lcall
fisttpl
pop
adc
divl
mov
repz
lea
sub
into
or
or
imul
xor
jo
mov
das
cmp
sbb
and
adc
jno
fiaddl
push
jno
or
xorl
xor
ja
fst
aad
outsb
adc
jns
xchg
fwait
push
push
jmp
lods
xchg
int3
mov
scas
jo
xchg
inc
es
xor
popl
in
icebp
dec
stos
mov
repnz
sub
inc
pop
lock
ret
ror
mov
fildl
loop
inc
test
iret
in
add
bound
mov
cmp
jno
and
jb
adc
hlt
adc
mov
inc
jecxz
out
adc
sbb
push
mov
mov
pusha
or
xchg
clc
xlat
sbb
aaa
mov
rep
push
push
dec
loop
mov
mov
shl
sbb
cmpsb
cmpb
ss
in
mov
insl
xor
insb
loope
imul
mov
imul
or
out
cmp
mov
fdivr
pop
faddl
das
faddl
or
pop
and
add
cwtl
cmp
lahf
xor
and
jno
inc
fwait
adc
js
cmpsl
inc
mov
mov
sahf
inc
in
aaa
jmp
dec
xchg
sub
adc
xchg
push
dec
lds
or
addr16
push
aam
xor
mov
daa
lds
in
sub
mov
shrb
pop
outsl
inc
sbb
pop
call
dec
inc
add
pextrw
jg
mov
negb
mov
dec
sbb
lcall
xchg
mov
adc
xor
aad
mov
cs
stos
in
std
dec
mov
ja
and
lret
das
cmpsb
mov
out
lret
or
mov
inc
mov
mov
mov
mov
adc
dec
mov
leave
push
lcall
fwait
call
push
adc
roll
popa
dec
gs
ret
imul
lock
inc
push
and
adc
pop
mov
push
jge
mov
xorb
aaa
dec
stos
pusha
dec
js
pop
mov
pop
pop
adc
dec
pop
inc
cli
arpl
mov
cmp
popa
inc
divl
push
push
inc
mov
cmp
das
shll
call
or
xchg
cmp
lcall
lods
sbb
les
xor
leave
gs
xor
jno
popfw
movsb
or
push
xor
sub
lods
pop
jnp
dec
push
jge
loop
push
in
fcmovu
cwtl
adc
mov
negb
iret
in
outsb
cmpb
inc
adc
push
mov
js
out
mov
arpl
nop
mov
sub
mov
pop
cmp
nop
les
cmpsl
jl
pop
mov
shlb
je
gs
sub
inc
scas
xchg
mov
and
cmp
sub
rcl
dec
int3
cmp
adc
mov
add
mov
pop
outsl
scas
test
mov
outsl
xchg
addr16
aas
dec
imul
mov
ret
sbb
pop
clc
bound
xlat
inc
sub
into
rcr
jl
sbb
arpl
cmp
aad
push
rcl
popa
and
addr16
in
jg
inc
out
or
paddsb
add
loop
sub
in
icebp
jecxz
dec
mov
lahf
xor
inc
adc
aad
ror
std
xor
and
mov
cmp
arpl
jl
outsl
and
add
pushf
cmp
mov
push
xchg
or
jp
cmpsb
cmp
test
or
ja
sbb
sbb
jbe
in
push
xchg
inc
jge
xor
adc
das
or
shlb
rorb
mov
xchg
outsl
cmp
icebp
add
out
mov
test
adcb
cld
mov
push
lods
faddp
jno
bound
aad
add
rorl
cmp
mov
jg
fidivrl
adc
xchg
pop
sbb
add
inc
scas
dec
push
out
pop
push
fwait
sbb
insl
mov
das
pop
call
out
mov
xchg
cli
scas
adc
mov
js
mov
mov
fldt
mov
xchg
inc
sbb
xor
mov
aaa
and
push
pushl
dec
mov
into
xchg
imul
and
push
inc
xchg
rcrl
xchg
jbe
push
into
test
out
xchg
jbe
adc
jo
inc
mov
push
pop
lods
or
sbb
std
test
outsb
rcrb
adc
push
mov
mov
js
loopne
cld
or
sub
and
mov
or
aad
add
or
loop
pop
lods
int
dec
pop
rolb
push
shr
inc
int
mov
jecxz
repz
jmp
popf
inc
add
cmpsl
sub
lret
sbb
and
fiaddl
jge
cmp
fs
frstor
inc
in
dec
xchg
repnz
ss
sahf
cmp
dec
movsb
sbb
inc
mov
fs
cmpsb
bnd
sub
xorb
pushf
lods
mov
sahf
rorb
inc
dec
and
repz
inc
subl
rorl
fwait
pushf
inc
mov
mov
xchg
jl
js
sub
das
dec
xchg
repnz
inc
out
shl
sbb
dec
xor
ds
mov
mov
xchg
stc
dec
mov
jb
xor
mov
popa
jb
jns
lret
gs
push
xchg
incl
cmp
inc
repz
ret
rep
int
fildl
dec
das
insb
scas
or
push
adc
enter
sahf
cmc
movl
jnp
xchg
test
mov
jne
add
push
xorb
mov
gs
push
jl
xchg
addr16
in
dec
movsl
push
jae
dec
push
daa
sbb
jne
cld
pop
notl
cmpsb
cmp
and
adc
aam
inc
ds
push
jecxz
jp
movsb
xor
leave
xor
fwait
in
mov
dec
pop
mov
pop
test
add
or
stc
aad
xchg
test
clc
lret
in
dec
pop
cld
insl
cs
out
hlt
ret
scas
jle
sub
test
sbb
shlb
pop
mov
mov
popf
mov
into
lods
test
jne
popa
test
jbe
imul
lods
int3
cld
sbb
loope
addl
test
test
xchg
pop
stos
mov
leave
outsl
and
adc
mov
xor
fmuls
out
xor
push
inc
icebp
jae
cmp
loopne
lods
and
ds
jns
mov
push
sub
lods
jl
inc
jnp
fs
xchg
fwait
mov
jmp
mov
in
in
loop
adc
jmp
mov
jecxz
out
cmp
xchg
pop
or
scas
mov
push
sbb
sbb
dec
jo
aaa
xor
mov
mov
cmpsl
leave
mov
inc
or
mov
cmpsb
xorl
jmp
mov
out
pop
mov
fimull
mov
adc
mov
arpl
data16
cmp
aad
sub
or
shr
fildll
hlt
xchg
push
xchg
adc
pop
jmp
pop
sbb
push
cmpsb
add
xor
jecxz
out
jmp
es
insl
fs
adc
add
call
adc
dec
or
add
mov
mov
aas
call
mov
int
jle
sub
fidivl
cmp
sub
and
into
inc
sahf
cwtl
push
pop
jns
ss
pop
stos
data16
fists
rorb
int
gs
leave
sub
test
jmp
pop
pushf
loop
out
dec
call
pop
mov
jo
repnz
stc
adc
and
jns
jne
mov
and
adc
movsb
mov
add
jno
addb
fwait
mov
aas
push
sbb
cmp
and
dec
push
xor
mov
jne
test
cmp
push
inc
xchg
push
jns
pop
sbbb
add
mov
and
fnsave
cld
xchg
dec
cmpsb
push
int
aad
pop
sarl
cs
xchg
mov
xchg
inc
inc
cmc
dec
js
or
js
dec
pop
shlb
dec
leave
daa
inc
ss
scas
jb
stos
in
mov
mov
fisubrl
jmp
xchg
cmpsb
shrl
mov
in
xchg
mov
hlt
out
and
lds
fistl
xchg
test
sbb
insb
sbb
loope
xor
inc
push
cltd
sub
in
sbb
mov
cmp
in
push
sahf
cld
sti
jb
test
cmp
cmpb
fs
xchg
add
push
xor
pop
or
stos
cli
ja
cmc
mov
loop
add
lods
jns
cs
aam
dec
mov
mov
inc
xchg
pop
es
mov
and
pop
movsl
adc
cmp
fs
stos
jl
gs
ds
adc
notl
lock
dec
xor
lahf
aad
mov
stos
pop
mov
sbb
mov
leave
in
pop
add
sbb
jns
ljmp
lret
sub
shlb
lds
in
push
iret
subl
ljmp
mov
fnstcw
and
adc
mov
jno
movsb
outsb
fmul
pop
movsb
push
cmp
or
xchg
push
mov
cmp
xchg
jl
jmp
leave
pop
cltd
sti
xor
rcrl
inc
fistpll
movsb
fwait
mov
jmp
cmp
movsl
or
and
shll
fwait
movsl
addr16
dec
dec
adc
test
or
push
mov
dec
xchg
cmpsl
push
pop
in
or
sbbl
sub
push
push
adc
aam
sub
out
fwait
daa
mov
lahf
cmp
aad
es
cmp
adc
in
movsl
fistpl
jb
inc
fldl
ret
cmc
fnsave
mov
pop
add
mov
ror
mov
and
jbe
xchg
test
repz
test
sub
aad
mull
div
cmc
pop
out
ljmp
sub
pop
in
adcl
ret
lock
repnz
scas
dec
mov
lock
cmpl
jg
jecxz
or
sahf
icebp
andb
jmp
sbb
and
inc
cwtl
pop
outsl
and
aas
pushf
mov
addb
inc
in
jge
insl
gs
cmp
pop
mov
push
jecxz
shl
mov
dec
cmpsb
mov
mov
inc
dec
jae
mov
ljmp
cmp
jae
aaa
mov
jp
sbb
push
int
mov
jl
and
imul
fs
fisubrs
fdivrl
xor
shll
lcall
je
cltd
cwtl
rclb
outsb
sbb
xor
dec
xchg
adc
push
add
lret
inc
movl
pop
or
scas
cld
stos
movsb
arpl
xlat
pusha
shl
sub
pop
sub
and
inc
ret
jb
cmp
inc
shrl
jbe
jmp
into
xchg
lcall
jecxz
inc
outsb
xchg
jl
xorb
push
addr16
loope
shr
cmpsl
xor
outsl
lcall
push
mov
aaa
loope
imul
daa
sti
and
push
mov
sti
add
mov
cmpsb
or
cmpsl
xor
in
and
sbb
addr16
imul
and
sbb
pop
cltd
ror
test
fcomp
inc
cmp
sbb
inc
imul
push
stos
sub
outsl
test
inc
dec
mov
cmp
mov
sub
inc
mov
das
out
push
adcl
imull
sub
fyl2xp1
jae
and
inc
mov
pop
add
jl
push
or
cmpl
push
in
sbb
in
xor
das
nop
jns
cmp
ljmp
add
xchg
shlb
out
ficompl
test
and
sbbb
jae
in
int
cmpsl
les
sti
test
outsb
out
mov
xlat
stos
lea
scas
dec
sti
cmp
cmp
xlat
jb
or
lret
pop
in
mov
lahf
jnp
aas
ljmp
add
in
xchg
mov
sub
ja
mov
jl
sarl
mov
in
xchg
adc
sub
add
stc
mov
mov
out
cltd
jmp
push
sub
scas
scas
aam
idivl
in
out
or
aad
aam
pop
fidivs
mov
pop
pop
mov
push
cmp
jb
fidivrs
inc
add
arpl
push
pusha
or
fmuls
mov
in
rorl
aas
add
push
lods
je
xor
jge
sub
ret
cmp
lcall
push
ljmp
inc
mov
xchg
imulb
fnsave
aam
sti
mov
pop
sub
movsb
dec
jp
push
and
xor
adc
dec
int3
fucom
mov
cwtl
jae
cmc
fs
mov
mov
sti
fiaddl
ljmp
add
cmpsl
hlt
int3
cmp
inc
insb
lret
lods
inc
daa
jg
add
in
cmpsb
or
ljmp
mov
sti
and
cmp
pop
je
divl
inc
xorl
mov
daa
iret
std
ss
dec
out
pop
sub
into
loopne
insb
enter
mov
ja
add
sub
mov
loopne
or
mov
je
mov
cmc
xchg
insl
pop
lds
dec
inc
rcl
adc
mov
adc
mov
push
inc
jno
jae
xchg
inc
popa
xchg
aad
in
jl
jno
sbb
xchg
lahf
rolb
mov
enter
insb
mov
mov
fisttpll
in
cmp
arpl
in
mov
xor
adc
and
mov
clc
pop
test
in
or
sub
cltd
test
and
out
dec
sti
jl
stos
lods
mov
adc
movsl
imul
jecxz
cmpsb
out
add
leave
dec
xchg
inc
push
insb
pop
xor
mov
stos
or
pusha
inc
cltd
js
jae
xorb
xlat
inc
adc
inc
mov
test
aaa
jg
xor
xor
bnd
sti
lods
rcr
push
fldenv
xor
stc
test
and
outsb
repnz
jne
das
pop
pop
bound
in
loope
pop
outsl
cmpl
fisubs
test
mov
lahf
in
xorb
and
andl
lret
xchg
movsl
mov
stc
xlat
das
rorb
ret
popa
jbe
incb
test
mov
adc
lea
jbe
xor
add
into
frndint
push
in
add
mov
popf
xchg
int3
and
aaa
mov
pop
je
add
adc
and
xor
les
hlt
xchg
mov
inc
aaa
push
daa
fs
je
add
adc
and
xor
les
hlt
xchg
mov
inc
aaa
fs
add
je
xchg
ja
addr16
hlt
inc
les
hlt
addl
ret
push
xor
and
adc
ja
addr16
mov
les
hlt
lock
cwtl
pop
test
mov
stos
insb
mov
jae
or
cmp
int3
sbb
sub
cmp
dec
mov
push
jp
mov
stos
insb
mov
sbb
sub
cmp
int3
sbb
mov
push
jp
mov
stos
insb
mov
sbb
sub
cmp
fs
inc
mov
cld
dec
leave
xor
mov
stos
add
sub
loope
add
imul
mov
dec
pop
pop
cmp
fdiv
or
xor
sub
jl
and
and
in
lds
stc
pop
jo
cld
imul
ficoml
dec
lods
fwait
iret
adc
scas
int
insb
movsb
rorb
xor
sub
add
lea
pop
rcpps
mov
ffreep
mov
iret
sbb
mov
lahf
mov
adc
mov
sbb
push
dec
xor
jp
dec
jmp
fimull
imul
dec
mov
pushf
movsl
pusha
cmp
xor
mov
or
xchg
addr16
cli
fcompl
ljmp
cltd
xlat
pop
das
mov
lcall
or
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
push
jp
lret
and
pop
ret
add
test
mov
insb
or
inc
mov
or
lcall
insb
push
lret
js
pop
test
outsl
mov
test
dec
out
xor
push
leave
paddsb
add
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
push
jp
mov
stos
insb
mov
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
push
jp
mov
aaa
ficoms
mov
jge
sub
into
jg
cltd
mov
xchg
mov
and
xchg
add
xchg
cwtl
xor
and
xchg
add
ds
inc
push
loopne
xchg
incl
xor
xchg
mov
sti
mov
mov
jmp
pop
cmc
push
ljmp
pushf
or
mov
jl
stos
repnz
mov
sbb
clc
xorl
pop
mov
dec
sbb
and
outsb
dec
test
fcomp
enter
or
repz
xor
rcrb
lods
adc
adcb
sub
fidivrl
pop
mov
jmp
cmp
fs
pop
ficoml
orb
xorb
inc
mov
jle
jnp
cmp
dec
and
mov
or
xchg
cmc
movsb
cld
mov
jl
jne
pop
test
jbe
xchg
jl
aad
scas
mov
push
roll
jle
and
mov
nop
mov
add
fisubs
addl
sub
xchg
sbb
mov
cs
jmp
mov
pop
iret
mov
adc
aas
ljmp
push
ljmp
sub
inc
mov
xchg
jle
pushf
rcrl
cld
ja
fwait
pushl
test
mov
call
push
sbb
shrl
or
dec
cmp
ja
dec
xchg
xchg
mov
sub
dec
sub
jo
bound
cmpsb
enter
xor
hlt
fildll
push
inc
pop
sub
cmc
mov
and
sbb
ja
sbb
stos
cwtl
mov
out
mov
push
add
push
fistl
stos
xchg
in
shll
js
or
sbb
pop
jns
das
stos
mov
inc
dec
cmpsl
push
cmp
adc
mov
fmull
push
inc
inc
scas
stos
jae
lods
adc
push
insb
shrl
mov
pop
cmpsl
icebp
mov
cmpsb
sbb
add
sahf
sub
jae
clc
cmp
in
jns
mov
insl
scas
add
push
pusha
lretw
sbb
add
and
lods
pushf
aaa
mov
ret
mov
xchg
movsb
sahf
cmp
mov
loop
ret
lock
addr16
out
mov
xchg
xchg
jmp
push
jge
cwtl
sahf
in
or
xorb
and
jg
sub
js
js
subb
dec
adc
inc
mov
mov
ss
add
ja
mov
xchg
xchg
fwait
out
mov
cmp
jno
rcl
mov
dec
mov
cli
mov
es
add
push
adc
movsb
mov
pop
pop
add
test
repz
push
xchg
lock
mov
and
test
pushf
add
shlb
jmp
cs
testb
dec
mov
jmp
xchg
mov
test
daa
jmp
inc
xchg
adc
cmpsb
rcr
jl
dec
and
and
arpl
imul
jbe
mov
movsb
sbb
push
cmp
or
adcb
scas
stc
sub
sub
insb
pop
sbb
add
sub
cli
mov
cmp
mov
xchg
or
pop
das
adc
bound
mov
lea
into
push
mov
add
push
aaa
or
jne
push
stos
sbb
inc
mov
cmc
mov
pop
clc
mov
push
fimull
rcr
sbb
stc
lods
xchg
icebp
jo
nop
repnz
push
mov
push
push
mov
bound
cs
and
dec
xchg
xor
iret
adc
lret
cmp
dec
mov
mov
xchg
pop
mov
stc
or
push
out
sahf
scas
jno
fnsave
jmp
push
rcrl
lcall
jge
inc
popf
push
or
in
in
jb
and
int3
imul
stos
sub
lret
outsb
ret
pop
pop
ja
dec
sub
popf
fdivrl
jb
mov
sti
or
xor
movsb
pop
mov
fs
push
enter
fldt
roll
shll
jge
loopne
cmp
sbb
add
mov
cmpsb
insb
pushf
in
jge
jne
lock
cmp
outsb
fdivl
adc
mov
fwait
bound
pop
fstl
xlat
mov
ret
inc
xor
jge
add
outsb
in
xor
mov
mov
insl
stos
mov
jo
movsb
dec
xchg
fdivs
adc
rorb
call
pop
push
cld
rcll
adc
dec
jl
and
sub
add
mov
push
je
iret
dec
sbb
lret
stos
pop
decl
scas
dec
or
add
or
sti
decb
sbb
adc
push
cmp
test
xchg
ss
fildl
jge
dec
ds
dec
xchg
mov
flds
fwait
inc
jnp
call
movsl
insl
mov
ja
jnp
mov
mov
jg
cmp
adc
and
sbb
fsubl
xchg
int3
rcrl
cmp
or
fnstenv
ss
xlat
cld
inc
inc
sub
ja
add
pop
or
clc
mov
popf
arpl
xor
mov
push
addr16
jp
add
xlat
lahf
negl
imul
xchg
enter
mov
xlat
les
xor
add
jge
ret
sarb
pop
inc
scas
mov
ret
sbbl
ljmp
xlat
cmpb
pop
push
and
insl
in
pop
sbb
sub
rolb
lcall
push
ficompl
sub
pop
push
lret
scas
inc
fwait
pop
int
add
fwait
mov
mov
xchg
push
loope
imul
cmpb
inc
pop
cmpsl
out
fisubrs
je
ret
mov
sbb
push
lods
orl
add
and
je
xchg
adc
outsb
jmp
enter
mov
xchg
jns
inc
cmp
inc
lea
xor
movsl
dec
call
pop
mov
pmuludq
or
rolb
imul
push
dec
or
pop
stos
inc
fdivl
mov
mov
adc
sarl
call
je
inc
mov
sub
push
and
mov
jo
inc
jno
and
dec
cmp
or
pop
test
cmp
mov
das
and
repz
jecxz
mov
mov
mov
mov
addl
in
jnp
dec
push
mov
lret
outsl
shll
mov
faddl
pusha
aas
sbb
movsl
outsb
cwtl
xor
insb
sbbb
fistpl
sbb
or
outsl
fs
int
or
xor
lods
adc
pushl
call
decb
mov
adcb
pop
cmp
int
and
lea
mov
imul
fsubrs
shl
mov
xlat
mulb
movsl
in
mov
add
mov
mov
push
fcom
mov
xor
mov
sar
lock
jge
mov
xchg
mov
jecxz
sbb
clc
not
adc
jl
imulb
scas
imul
cmp
pop
and
fidivrs
js
mov
add
addr16
mov
xchg
pop
fld
jno
dec
gs
dec
sbb
inc
mov
pop
hlt
fsubl
outsl
lret
sub
mov
sbb
outsl
dec
add
das
pop
mov
outsl
adc
xchg
push
enter
cmp
movsl
mov
das
sar
addr16
outsl
std
ds
cmp
xchg
or
sub
xchg
xor
imul
dec
addl
shlb
cli
mov
pop
data16
popa
fstps
push
sbb
cmp
pop
and
sub
test
repz
in
nop
sbb
mov
sub
jl
lods
cmp
mov
ja
add
jbe
add
adc
push
pop
push
push
lcall
dec
push
pop
jmp
ret
lods
lock
xlat
dec
jnp
inc
imul
cltd
push
xor
cmp
push
montmul
cmpsb
ret
and
jns
mov
das
sbb
sub
or
cmpsl
out
pop
fisttps
cmp
sub
sbb
jmp
pop
xchg
mov
fcoml
mov
inc
mov
scas
jge
jnp
popa
cmp
ret
dec
out
loop
or
and
inc
cmp
das
jp
xor
out
aas
xchg
and
pop
repz
inc
les
outsl
push
in
fnstcw
stc
and
dec
fistps
cmc
xchg
adc
cmp
ljmp
shll
jnp
cs
and
sub
sub
ds
inc
xor
test
inc
jmp
pop
mov
leave
loop
mov
setge
iret
in
jnp
cmpsl
sub
stos
mov
out
xchg
sub
pop
jecxz
fistpl
fisttpl
mov
jmp
loop
jnp
dec
mov
out
mov
idivl
outsl
out
sbb
bound
idiv
pop
adc
xor
loop
push
mov
lods
pop
mov
pop
in
xchg
push
jg
ja
lahf
mov
lret
mov
mov
and
dec
ljmp
aam
lock
loop
iret
sbb
adc
cmp
out
shr
rclb
inc
repz
imulb
sbb
out
xchg
cmp
hlt
jg
fisubs
xlat
adc
sub
jae
ds
test
adc
lret
cmpsl
push
mov
and
jg
shlb
ja
stc
sub
push
or
cld
imul
adc
sbbl
mov
sub
rcll
sub
pop
push
dec
push
push
mov
mov
aaa
scas
adc
mov
add
shll
lods
rcrl
lea
je
fs
push
cmp
scas
rolb
dec
leave
mov
pushf
inc
fadd
out
adc
mov
out
mov
or
sub
jl
xor
flds
nop
mov
xchg
pop
mov
jl
inc
push
movsb
or
dec
xchg
rcll
mov
ret
xchg
mov
sar
jo
mov
fucom
dec
gs
lret
lcall
idivl
sar
lock
ficoms
iret
in
add
push
or
push
jne
adcb
in
popa
or
add
lods
push
sbb
cli
mov
xchg
add
cmp
int3
add
lret
dec
call
icebp
fcoml
mov
and
add
dec
rclb
clc
outsl
adc
test
mov
push
push
nop
pushf
cli
adc
mov
inc
cmpl
in
lea
mov
mov
hlt
xchg
test
aas
pop
cli
inc
add
jno
les
out
sub
xor
in
inc
lods
cmp
pop
inc
sti
mov
in
pop
dec
push
fwait
repnz
cs
mov
sbb
cs
add
in
mov
sub
je
jns
ja
push
xor
inc
pop
sahf
cmp
test
adc
mov
jns
incl
mov
or
ljmp
push
pop
inc
mov
std
add
divb
out
and
dec
push
mov
dec
push
aad
neg
inc
push
dec
adc
nopl
rcl
fucomip
stos
iret
pop
int3
mov
cmp
jo
and
popa
fcoml
mov
adc
dec
adc
add
mov
jp
nop
lcall
fs
cmp
push
mov
out
test
and
popa
scas
mov
and
xchg
fstps
icebp
insb
jnp
or
sub
loope
loope
test
or
inc
aad
lahf
in
push
lahf
sarb
pushf
mov
push
dec
aaa
add
or
div
dec
add
jo
mulb
cld
or
in
pop
scas
daa
sub
dec
mov
xor
inc
mov
clc
mov
lcall
mov
pop
scas
adc
dec
insl
mov
cmp
pop
jno
pushf
xor
pop
sub
imul
ss
repnz
push
sub
les
ret
pop
sahf
add
xchg
mov
inc
popa
xorl
push
lret
fimull
xlat
inc
lret
repz
jg
sub
movsl
jb
or
imul
xor
pop
lea
mov
xor
jmp
pop
les
aam
iret
cmpsl
data16
loope
addr16
xchg
das
add
mov
fildl
ror
pop
sbb
rolb
fsub
sti
in
subl
jns
mull
inc
push
cmpsb
cmpsl
cmp
je
jmp
adc
outsl
aas
movsb
pop
dec
rcrb
arpl
add
or
inc
lahf
stos
xorl
dec
pop
sub
cmp
in
out
ljmp
cmp
pop
or
sub
add
push
subl
pop
dec
int3
cld
daa
mov
out
push
lea
dec
repz
or
mov
push
jbe
bts
sub
fs
dec
sub
in
sbb
sbb
mov
or
xor
inc
clc
adc
mov
pusha
jecxz
ljmp
lea
dec
imul
mov
mov
outsb
jle
push
xchg
mov
add
aam
in
mov
sbb
push
andl
out
dec
adc
lock
cmp
xor
into
mov
pop
test
add
iret
jmp
lcall
arpl
jns
jo
ja
mov
xor
sti
es
mov
jne
comiss
cmc
fcomps
inc
pop
je
inc
mov
movb
mov
cmp
scas
inc
aam
pop
loopne
pop
pushf
std
mov
and
fcomps
roll
fimull
in
dec
leave
lahf
in
stos
sub
jo
inc
dec
imul
add
mov
push
scas
pop
leave
cld
aad
dec
test
jb
add
popa
nop
jecxz
push
dec
inc
fwait
stc
daa
adc
adc
bound
cmp
jp
loop
jbe
push
dec
fs
ja
out
cmp
xchg
fsubrl
pop
mov
jp
dec
push
jmp
mov
push
movsl
lcall
out
bswap
dec
mov
fwait
enter
dec
sub
cmpsl
mov
jmp
mov
cmp
cwtl
outsl
sbb
mov
test
add
into
je
lock
idivb
int3
shll
push
fistl
push
sub
cmpsl
mov
xor
pop
mov
aad
ljmp
adc
mov
cmp
loope
mov
fistpl
int
test
inc
inc
adc
fldt
xchg
adc
loopne
popf
lahf
add
mov
xchg
loop
shrb
notb
or
lock
test
sbb
add
in
pop
adc
adc
leave
mov
xchg
xor
popf
lods
int
aas
jmp
sub
xchg
les
jnp
mov
ficomps
enter
popf
and
jmp
pop
cltd
mov
jbe
add
call
dec
xchg
pop
or
mov
add
ret
sbb
into
std
fldcw
pop
cld
fwait
jno
push
in
xchg
icebp
xchg
jae
outsb
dec
das
xchg
dec
mov
jge
cli
pop
or
inc
push
rcrl
pop
fisubrs
mov
jne
push
jno
or
or
xor
popa
mov
inc
inc
pop
lds
stc
ljmp
xlat
gs
fbld
mov
jp
push
xchg
fcoml
sbb
adc
pop
test
dec
in
mov
and
loopne
rclb
xor
rcrl
ss
enter
jae
fstl
push
aam
ljmp
pop
int3
cs
cmp
mov
scas
push
scas
or
mov
mov
daa
push
sub
in
or
aaa
repz
popf
aad
pushf
insb
mov
xchg
fnstcw
sub
jg
repz
xlat
es
fistpll
add
jg
jmp
or
dec
clc
dec
movsb
mov
lret
sub
and
ds
xchg
ret
pop
adc
bound
or
lret
fists
jnp
pop
or
jnp
and
in
adc
pop
and
xor
sahf
insl
sbb
push
pop
add
adc
stos
jne
push
call
ror
add
xor
sahf
sub
pop
dec
mov
or
leave
xor
pop
in
and
cmp
pop
or
sub
adc
pop
xchg
sarb
sub
pop
jae
aas
repz
sbb
pop
and
repnz
cwtl
sbb
xor
add
jle
xchg
int
cmc
fidivrs
iret
mov
or
nop
icebp
ljmp
fsubs
ja
repnz
add
pusha
faddp
and
dec
sub
mov
sbb
and
jecxz
sbb
pop
adcl
out
aas
and
add
loope
in
popa
scas
fstpl
push
clc
mov
lret
test
les
shll
jnp
jg
xchg
ds
cmc
and
pop
jle
dec
jg
fnstsw
inc
adc
lock
add
stc
push
imul
sbb
dec
aam
inc
jae
notl
lret
nop
xchg
push
nop
dec
imull
dec
push
sub
fs
pop
cld
push
mov
sbb
push
sub
inc
jnp
sahf
xchg
ljmp
insb
inc
ret
adc
xor
mov
dec
mov
cmpsb
pop
mov
push
ret
bound
push
lahf
inc
push
mov
popa
imul
icebp
lahf
dec
push
jno
inc
enter
cld
inc
jge
out
inc
mov
cld
sbb
or
lcall
and
xlat
sub
mov
pop
jnp
lret
mov
aaa
aaa
add
dec
lahf
add
mov
pop
jne
cmpsl
stc
push
aaa
cmpl
mov
loop
xorl
hlt
dec
shl
je
cmp
jns
dec
inc
aaa
popa
mov
xor
push
lret
jne
fs
push
inc
cmpsl
pusha
jnp
test
test
test
inc
cmp
mov
mov
hlt
fisubrs
and
loope
adc
nop
mov
pop
mov
incl
lahf
fs
jne
inc
aas
lahf
int
lret
push
dec
rcl
mov
jmp
pop
add
shlb
imul
syscall
je
movsb
xchg
push
inc
daa
leave
test
sub
mov
add
or
xlat
or
out
cmp
push
in
loopne
popf
xchg
movsl
outsb
xchg
cmp
dec
inc
push
out
mov
sbb
cmp
adc
shl
pusha
mulb
imul
push
in
push
cmpb
push
fldenv
push
mov
jecxz
std
cld
cmc
mov
cld
mov
xchg
mov
mov
mov
pushf
ljmp
rclb
js
outsl
inc
jge
shlb
mov
jno
sub
adc
pop
scas
lret
jg
jns
pop
movsb
movsl
popa
imul
jge
mov
sbb
mov
dec
fwait
outsl
subl
shll
pop
nop
lods
ret
sub
cwtl
lods
sbb
jmp
ret
sub
ss
mov
jbe
inc
mov
xchg
inc
shll
scas
sbb
outsl
gs
xor
mov
add
hlt
push
dec
arpl
inc
lret
in
mov
mov
in
jecxz
adc
inc
test
outsl
cmpsb
mov
bound
push
or
pop
adc
jg
jb
pushf
jno
jecxz
loope
in
jbe
inc
push
mov
cmp
js
add
iret
inc
mov
jb
mov
in
push
or
mov
dec
jecxz
xorb
inc
push
mov
in
pop
pop
mov
add
push
sbb
mov
scas
sti
out
jbe
jecxz
mov
mov
cltd
adc
jne
add
movb
pop
int
push
stos
pusha
ja
jp
lret
adc
and
cwtl
mov
sarb
sbb
mov
icebp
loop
cmp
mov
orb
repz
xchg
fdivs
jmp
pop
dec
push
adc
push
xchg
xchg
mov
inc
mov
mov
mov
xchg
mov
iret
cwtl
cmpsb
mov
xchg
pop
mov
push
adc
enter
cmpsb
or
icebp
and
xchg
psraw
sbb
pop
rorb
pop
or
cmp
push
inc
dec
mov
int
loopne
ja
in
shll
or
orl
shrl
cs
fstpt
aaa
fisttpl
es
into
icebp
pop
dec
pushf
jmp
ret
insb
pop
loopne
push
ljmp
les
ss
mov
sti
jo
int3
repz
mov
fwait
fwait
stos
ficomps
inc
femms
rcll
sub
add
movsb
jo
arpl
mov
out
mov
and
paddsb
and
xchg
mov
dec
addb
and
clc
sarl
xor
shll
notl
lahf
cmp
aad
insb
jl
add
xchg
cmp
popf
xchg
sub
test
push
jno
lcall
add
imul
sti
push
add
fwait
inc
mov
addr16
pushf
pop
stos
insb
mov
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
push
jp
mov
stos
insb
mov
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
push
jp
mov
sub
mov
pushf
ljmp
fsubrl
in
cmp
dec
mov
push
jp
mov
stos
insb
mov
sbb
sub
cmp
int3
sbb
in
cmp
sbb
inc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
pusha
inc
jo
inc
pusha
push
sbb
inc
push
sub
lock
nop
mov
mov
jo
inc
pusha
push
adc
add
xor
and
shl
shl
shl
nop
mov
mov
jo
inc
pusha
push
adc
add
xor
and
rcr
jecxz
xorb
aam
in
nop
and
and
and
mov
fildl
stos
repz
jmp
cli
shl
sbb
or
pop
mov
push
popf
scas
adc
add
int3
or
sbb
nop
push
rcrb
pusha
cmpb
xor
scas
jne
cmpsb
sbb
sarb
outsb
and
push
loopne
adc
jg
xchg
push
lahf
addr16
inc
addr16
js
jmp
imul
dec
in
ds
das
shl
loopne
jle
mov
std
lds
and
iret
int3
ljmp
icebp
jge
imul
push
mov
mov
lahf
and
xchg
lret
xor
add
mov
je
roll
mov
jo
inc
pusha
push
adc
add
xor
and
shl
shl
shl
nop
mov
mov
mov
jne
outsl
jno
movsb
pusha
mov
scas
movsl
mov
aad
shl
and
adc
pop
jne
dec
push
jne
adc
xchg
loopne
addr16
in
fprem1
lret
xor
ss
and
dec
add
xor
and
shl
shl
shl
nop
mov
mov
jo
inc
pusha
push
adc
add
xor
and
shl
shl
shl
nop
mov
mov
gs
mov
add
push
mov
xor
fwait
lea
mov
stos
mov
pop
js
js
pop
dec
aad
call
fbld
mov
mov
dec
test
out
push
xchg
cmp
out
push
leave
cli
shll
in
xchg
rorl
cmp
stos
or
lret
mov
inc
inc
fs
jmp
sahf
je
push
adc
sbb
insb
clc
mov
push
lods
gs
arpl
repz
or
loope
lds
mov
mov
std
ljmp
or
call
gs
add
into
nop
out
in
repz
icebp
sub
xchg
aas
lock
push
in
aaa
mov
cli
scas
mov
push
testl
cmp
test
mov
daa
push
jae
mov
ret
sub
test
icebp
adc
cmp
push
insl
cmp
ljmp
cmc
insb
cmp
icebp
pusha
stc
pop
aas
adc
cmpsl
loopne
sub
add
in
dec
into
popa
xchg
cmp
dec
sub
cwtl
leave
jns
scas
div
inc
adc
sub
jg
sub
es
loope
push
dec
lret
xor
rclb
push
cs
stos
sbb
pop
in
repnz
xchg
test
adc
mov
dec
loop
xor
mov
push
outsb
push
or
ficoml
int
mov
push
lcall
mov
cmp
fcompl
movsl
fs
cmp
mov
inc
test
sub
cld
jge
das
mov
ret
push
mov
out
pop
push
xchg
sbb
cli
shrl
mov
enter
pusha
popf
jg
xchg
fidivrs
jmp
shll
insb
inc
jbe
loopne
xor
add
mov
insb
and
jns
rcll
sbbl
pop
xchg
fwait
add
adc
jnp
add
in
stos
stc
cvttps2pi
dec
xadd
or
idivl
push
sbbb
lahf
lock
addl
pop
lret
andl
dec
lahf
and
mov
sbb
mov
loope
xor
mov
mov
lock
addr16
add
rcr
dec
addb
mov
xorl
in
icebp
arpl
out
xor
and
repz
lcall
popf
stos
adc
mov
into
inc
adc
push
sub
push
js
cmc
in
std
out
ljmp
fbld
in
inc
loop
sbb
and
sbb
ds
cmp
mov
test
fwait
xlat
mov
loop
mov
das
in
movsb
movsb
pop
and
xor
xlat
dec
mov
mov
dec
or
mov
adc
or
adc
lret
lret
add
fadds
jae
add
or
xchg
cmp
add
test
jg
adc
push
jg
add
adc
dec
pop
dec
xchg
lds
in
xchg
or
sbb
sbb
add
fsubrl
iret
sub
fwait
sub
mov
xchg
and
and
test
outsl
popf
pop
mov
jne
sti
xchg
push
adc
mov
notl
ja
dec
inc
out
or
and
push
and
and
and
mov
adc
pop
aam
xchg
pop
sahf
sbb
push
inc
and
ss
test
arpl
xor
adc
cmp
fucomip
jp
ffreep
leave
xchg
mov
inc
popa
stos
and
mov
rcrb
and
out
hlt
ljmp
cmp
lret
xlat
and
and
cltd
test
dec
jle
mov
icebp
or
jg
fnsave
adc
xor
ret
scas
xchg
or
sub
mov
js
jo
repz
lock
shrb
fiaddl
sbb
rcl
call
loope
or
and
xchg
in
into
bound
pop
jge
mov
mov
dec
inc
mov
bound
sbb
gs
adc
shll
sti
rcll
mov
xchg
arpl
xor
push
loope
jne
cmp
pop
sbb
cwtl
cmc
dec
sub
clc
push
push
aam
sbb
out
andl
jnp
les
mov
pop
cld
lret
jecxz
jno
imul
clc
xchg
fisttpll
lock
scas
and
fdivrp
pop
sti
dec
sar
rep
iret
ljmp
and
xlat
and
adc
std
xor
stc
mov
add
cltd
aaa
test
bound
sub
lods
inc
cmpsb
movsl
shll
cmp
push
rcrb
test
lcall
movsl
fs
mov
push
xor
dec
or
mov
pop
aam
cmpb
dec
pop
loopne
rclb
out
xor
jp
mov
xor
in
mov
fcmovne
insl
dec
jge
sbbb
xor
rorl
mov
mov
out
cmp
xor
mov
add
and
dec
pop
or
adc
sub
lds
fs
ds
sbb
ror
leave
add
in
stos
and
hlt
pop
pop
les
mov
inc
lods
stos
pop
push
add
cmp
dec
gs
adcl
and
gs
daa
pop
outsl
push
lret
addl
cmp
sub
pop
popf
outsb
jae
rcrl
sahf
cwtl
dec
jle
push
clc
fidivl
stc
in
push
mov
mov
add
ret
pop
push
mov
loop
rcll
bound
xchg
xchg
ds
xor
xor
xor
jb
xchg
sub
pop
jmp
rcll
stc
cwtl
push
and
dec
lds
psubusb
cmp
hlt
push
cld
dec
mov
add
stos
mov
pop
hlt
adc
cmp
bound
mov
idivb
mov
push
cmp
aam
sbb
cld
aaa
test
out
mov
push
loop
mov
inc
mov
mov
divl
mov
sub
dec
mov
pop
aam
addl
rep
scas
push
push
pop
test
and
or
lcall
out
sbb
lock
push
hlt
fldl2e
test
adc
out
outsl
sbb
push
add
icebp
or
pop
ljmp
sbb
daa
bnd
pop
jg
lock
icebp
cmc
movlps
and
int3
add
movsl
shrb
jno
daa
xor
xlat
pop
fistpll
pop
leave
movsb
pop
mov
mov
inc
fisttpl
pop
fsubl
mov
insl
and
mov
in
add
aaa
dec
sub
mov
stos
pusha
mov
out
push
sbb
loope
mov
push
arpl
sahf
sbb
cmpsl
out
sub
fistl
out
aam
cld
insb
jg
in
pushf
outsb
fisttpl
push
adc
sbb
mov
lods
xchg
lahf
xchg
pop
fwait
repz
imul
clc
jns
ja
xor
mov
xchg
mov
ss
test
mov
sbb
mov
jecxz
rol
scas
push
aad
fnstsw
out
inc
insl
lahf
inc
rclb
and
out
fucom
xor
dec
jne
repnz
sub
lock
dec
inc
sarl
int3
lret
jg
sbb
jbe
aam
cmc
cmp
shr
repnz
insl
movsb
pop
push
repz
addr16
in
dec
jae
inc
mov
or
les
mov
mov
pop
aam
mov
sti
pushf
test
push
xchg
cmp
push
stc
mov
mov
notb
repz
sbb
mov
nop
stos
jle
stos
xor
mov
add
adc
mov
adc
xlat
lcall
ret
and
cwtl
xchg
out
jmp
push
pop
js
push
mov
fcoml
xchg
out
loopne
lcall
fcomip
cmp
outsb
xor
mov
xchg
push
loopne
cmp
loope
xchg
imul
jb
loopne
mov
incb
sbb
test
xchg
pushf
mov
adc
inc
adc
arpl
insb
in
dec
wbinvd
sub
lea
lods
mov
pushf
xor
lea
leave
push
cmp
neg
sti
sbb
mov
iret
lret
ljmp
push
inc
bnd
sbb
out
jl
insb
test
stos
pop
aad
dec
push
pushf
enter
push
sub
and
dec
mov
fdivrl
jmp
out
stc
add
fisttpll
imul
cmpl
jp
mov
xchg
add
stos
or
push
cltd
xor
js
repnz
lds
into
addr16
out
inc
inc
nop
inc
sub
jb
cmp
outsb
das
pop
mov
and
and
mov
push
lcall
jmp
out
cltd
clc
xor
cmp
outsl
mov
jg
dec
adc
rcl
mov
jge
popa
mov
mov
or
call
loopne
iret
jmp
jne
adc
ds
sub
sub
and
inc
inc
or
stos
mov
xchg
mov
ror
and
data16
sub
xchg
or
sbb
pop
or
imul
jbe
inc
fisttps
insb
loopne
dec
mov
and
inc
jne
mov
lret
jbe
cmp
sub
and
rorl
add
and
bound
adc
lods
jae
cmp
push
inc
nop
cltd
aas
push
add
pushl
xlat
xor
xchg
push
push
shll
jge
mov
pop
filds
dec
dec
sahf
sub
cmpb
sbb
adc
shrl
pop
jns
push
aam
inc
or
arpl
jns
cs
icebp
sarl
jo,pn
cmp
scas
aam
push
fidivs
cmp
movsl
xchg
ret
loope
xchg
movsl
mov
jecxz
cmp
mov
xchg
jo
shll
fadds
or
mov
adc
push
imul
jl
push
das
or
cmp
or
loopne
inc
and
flds
sbb
fidivl
ljmp
cwtl
mov
jmp
daa
mov
mov
adc
inc
or
stc
cld
push
filds
jne
fucomp
pop
cltd
dec
outsl
shl
mov
fidivrs
cwtl
add
pushf
cmpsl
jp
lcall
popa
pop
insl
and
or
std
mov
sbb
push
sub
xchg
fs
push
aaa
xchg
push
aad
adc
ret
mov
xor
repnz
aad
lret
mov
inc
jbe
lret
push
push
cltd
outsb
outsb
jg
xchg
lcall
icebp
pop
ficompl
xchg
inc
sbb
sbb
ss
dec
cltd
inc
mov
rorl
push
sbb
or
cmp
jmp
or
xor
mov
aas
push
xchg
or
lods
addl
arpl
cld
push
shll
and
fcomi
xorl
cmp
add
test
ficomps
push
loope
mov
ret
subl
fsub
push
jp
inc
mov
push
pushf
jne
xor
jl
sub
sub
sbb
cmp
fildl
lcall
iret
or
insl
dec
out
xchg
mov
stos
pushf
sahf
cmpsl
shlb
iret
jo
cmpsl
push
adc
push
and
pop
incb
out
inc
mov
adc
stos
pop
fs
lods
sahf
mov
jg
icebp
decl
cmp
jmp
push
sub
xchg
jg
and
or
shrl
inc
pop
std
aam
sarl
jecxz
dec
shr
add
mov
xlat
dec
mov
icebp
test
jmp
mov
jbe
mov
int
xchg
lock
arpl
or
dec
out
shr
lods
jae
insl
data16
jno
mov
and
mov
jge
cli
sub
mulb
mov
in
xchg
mov
popa
movsl
dec
inc
lahf
inc
orl
out
adc
and
cmc
sbb
pop
push
sbb
insb
mov
sarb
mov
xor
cwtl
mov
sbb
mov
or
or
and
ljmp
out
lret
fldt
in
repnz
shl
nop
inc
adc
sbb
movsl
mov
xor
mov
frstor
mov
pop
and
adc
stos
mull
pop
push
sbb
mov
pop
adc
int3
pop
sub
andl
clc
daa
adc
add
popf
pop
pop
loope
pop
jae
mov
lea
out
loop
int3
in
inc
jb
daa
mov
jbe
jp
xor
fadds
jle
std
cmp
cmp
jg
mov
repz
dec
push
notb
or
cmpb
out
arpl
push
push
jno
call
mov
inc
in
ret
mov
filds
fisttpll
adc
mov
inc
fnstcw
pop
cmpsl
aad
stos
or
jno
enter
add
cltd
repz
les
arpl
jp
sti
int3
mov
gs
aad
aas
jnp
mov
popf
insb
in
out
icebp
and
xor
jecxz
in
push
rolb
ret
xlat
lret
xor
dec
leave
stos
push
mov
xchg
add
pop
shrb
xor
inc
push
iret
call
pop
sub
mov
clc
pop
push
shlb
cmc
inc
enter
insl
add
mov
cmp
xor
sbb
cltd
leave
xlat
test
mov
inc
push
push
pop
lods
add
mov
jae
popa
fcoms
dec
dec
jns
iret
mov
xchg
fisttps
fsubs
ljmp
aaa
ret
fidivs
xor
inc
add
cmp
and
push
dec
adc
jg
popf
xchg
jmp
imul
sub
clc
cmp
icebp
add
cmp
je
loope
adc
mov
and
add
ror
fistpll
jg
xchg
inc
call
jp
xlat
push
inc
mov
inc
fwait
jle
cmp
mov
aaa
push
and
imul
dec
std
mov
mov
dec
cwtl
cli
xor
test
pushw
lret
cwtl
jno
and
jp
gs
push
cli
pop
jge
scas
lret
mov
int
lret
sbb
sbb
ss
fisubrs
fadds
nop
mov
jbe
or
movq
add
out
inc
mov
xchg
test
mov
rorb
in
orb
inc
jg
push
je
jno
cltd
into
mov
jl
add
push
aad
movsl
inc
rorb
popa
cmp
lret
and
addb
into
popf
push
push
push
jo
jbe
insl
mov
push
pop
pop
data16
lods
push
adc
pop
sub
je
sbb
sbb
testb
testl
or
in
or
cwtl
cmp
test
sbbb
dec
test
cmp
les
insl
pop
pop
cmpl
ret
neg
mov
das
sahf
testb
pop
pop
xchg
sbb
std
adc
ja
and
and
sub
jae
rorl
outsl
inc
imul
push
mov
outsl
aas
mov
dec
sbb
shll
add
cld
sbb
repnz
adc
roll
dec
or
pop
fcoms
pop
cmpsl
lcall
push
jmp
and
ret
pop
pop
sbb
out
inc
mov
popa
data16
jp
imul
push
cmp
outsb
dec
es
icebp
jp
push
popf
out
pop
cmpsl
fwait
cltd
aad
pop
inc
and
mov
xchg
jae
jnp
pop
sbb
idivb
xchg
mov
or
lahf
scas
mov
loope
or
imul
cwtl
data16
cwtl
movsl
sub
cmp
jb
cmc
out
mov
ss
xlat
sahf
mov
pop
cld
mov
pop
ss
js
stc
leave
push
sbb
mov
mov
adc
clc
lahf
cli
mov
mov
adcl
fdecstp
out
push
test
data16
or
test
cmp
mov
jp
cli
call
data16
outsb
mov
roll
xorl
mov
sbb
loope
jns
xchg
fstps
aaa
test
imul
sub
nop
mov
ficomps
or
xchg
int3
flds
and
mov
push
mov
shl
dec
mov
mov
xchg
mov
push
sbb
jne
arpl
push
roll
lea
mov
cwtl
incb
mov
repz
xchg
dec
xor
aam
inc
adc
mov
dec
imul
xor
or
es
mov
jb
jo
into
ljmp
mov
mov
xor
xchg
fwait
sub
rcrb
or
mov
xchg
xor
out
xchg
js
xchg
inc
xchg
inc
inc
hlt
and
and
fistl
popf
lock
and
and
mov
push
out
and
or
adc
js
ret
xchg
dec
stos
arpl
daa
inc
ja
cmp
xchg
aaa
stc
xchg
out
and
pop
mov
test
add
dec
aas
jg
cmp
mov
mov
sbb
popf
mov
sbbl
aaa
mov
addl
jnp
xchg
lods
call
scas
call
jle
int
mov
jp
mov
adc
adc
pop
inc
fildl
and
push
scas
dec
dec
jmp
add
sub
sub
pop
imul
xlat
repz
cmp
pop
jb
push
inc
test
inc
cld
push
pop
jle
addb
gs
xchg
test
dec
fstpl
jae
mov
xor
pop
mov
loopne
loope
fwait
push
and
mov
divb
add
pop
add
in
flds
push
inc
jae
stos
ljmp
inc
push
xlat
dec
mov
cmp
cmp
dec
dec
add
xor
add
jno
call
das
mov
push
bound
cmpsb
add
ss
jmp
dec
xchg
ljmp
mov
sub
in
jo,pt
push
cmpsb
pop
in
les
adc
or
std
push
into
xchg
adc
dec
adc
cwtl
divl
cmc
ds
cmpb
jle
jno
push
mov
lret
scas
pop
out
sbb
add
hlt
adc
inc
rcrb
stc
gs
jnp
inc
mov
idiv
push
rorb
dec
mov
add
cmc
fsubp
cli
push
rclb
incb
push
jno
dec
sub
push
push
mov
jo
dec
iret
std
add
xlat
mov
xchg
je
jmp
push
mov
dec
sub
fwait
cmp
push
cwtl
push
pop
dec
inc
mov
pusha
pop
adc
addl
lods
add
out
iret
or
insb
and
ja
cs
jl
test
outsl
add
rcrb
fwait
pop
or
aas
scas
add
pop
sbb
mov
mov
out
inc
jns
jbe
in
mov
mov
xor
mov
sbb
push
sub
dec
stos
inc
xchg
aas
f2xm1
add
xchg
jecxz
inc
pop
lret
push
fcompl
pop
sahf
or
imul
pop
jne
xchg
dec
cmp
mov
repz
incb
cli
sti
xchg
enter
ljmp
into
icebp
call
mov
cmc
mov
ret
jo
aad
ss
rcrl
ror
jp
subl
sahf
clc
sahf
test
rcrl
sbb
ret
mov
shlb
test
jle
mov
inc
xchg
push
mov
fxch
push
lcall
or
lret
pushf
inc
mov
xchg
add
mov
mov
in
jp
cmc
popf
lods
fs
add
out
jnp
lea
outsb
enter
or
out
push
jmp
sub
shrl
andl
jbe
nop
jae
in
add
push
or
pop
push
jo
mov
scas
cmpsl
scas
fists
sti
imul
ret
lret
ss
mov
inc
nop
loop
arpl
sub
bound
mov
out
andb
imul
movsb
in
movsl
or
int
test
sub
lahf
fwait
popa
pop
es
inc
add
and
ja
jo
xchg
push
into
or
ds
pop
stos
sbb
push
in
rcrl
xor
mov
lods
mov
push
mov
and
lock
lock
pop
mov
push
lods
test
pop
mov
lahf
mov
fcompl
cli
scas
mov
sti
test
add
iret
jge
mov
cld
dec
pop
shrl
and
push
dec
mov
xor
cmp
pop
aas
ljmp
pop
decb
sti
insb
mov
dec
in
pop
mov
adc
push
ds
mov
mov
nop
add
jno
ret
cmp
push
cli
and
ds
call
pop
jge
jne
and
sbb
imul
cmp
mov
pop
lcall
xor
pop
fcomip
mov
inc
dec
xchg
mov
add
pop
outsl
mov
xchg
and
or
sub
dec
xchg
jmp
dec
aaa
jae
stc
inc
mov
inc
mov
std
loopne
inc
jmp
push
xor
iret
dec
xchg
loopne
push
daa
aam
in
cmp
pshufw
push
adc
add
xor
and
shl
shl
shl
nop
mov
mov
jo
inc
pusha
push
adc
add
xor
and
shl
shl
shl
nop
mov
mov
jo
inc
pusha
push
adc
add
xor
and
shl
shl
shl
nop
mov
mov
jo
inc
pusha
push
adc
add
das
pop
aas
pop
pop
shl
out
or
jg
outsl
out
call
dec
cmpsl
test
imul
out
xchg
mov
cmpsl
mov
testl
daa
aas
push
das
lret
pop
ja
adc
xchg
out
cmpsl
mov
mov
out
test
pop
lahf
dec
and
pop
cltd
movq
dec
out
in
call
scas
mov
pop
outsl
imul
pusha
bswap
in
cmp
jle
in
cmp
mov
cmp
mov
mov
sub
fwait
ds
and
mov
inc
mov
push
add
divb
cli
push
outsb
add
or
add
jg
sarl
lcall
mov
sub
imull
sbb
lret
xlat
outsl
pop
jg
mov
das
decl
xlat
fiadds
cld
cmp
add
mov
pop
jg
addr16
les
cmpsl
in
test
sbb
jo
xchg
outsl
mov
fists
out
out
leave
fwait
add
inc
mov
sahf
testl
sub
pop
lods
movntq
out
adc
inc
fbld
scas
aas
lahf
testl
or
sub
push
xchg
rcrl
mov
stos
into
lret
mov
sti
xchg
push
sub
sub
add
dec
je
sbb
lods
repnz
shrb
mov
xchg
nop
mov
inc
inc
inc
cmp
outsl
inc
jle
das
inc
pop
ja
call
fbstp
scas
lahf
testl
daa
aas
push
das
inc
pop
ja
call
fbstp
scas
lahf
testl
or
fs
sub
sub
push
mov
pop
rcll
xlat
andl
sub
movsl
movsb
mov
cs
mov
xchg
in
outsb
mov
xor
mov
mov
jge
in
into
ficompl
mov
in
xor
xor
stos
bound
xor
fdiv
rolb
adc
cmp
xchg
sub
sub
jno
xchg
fldcw
popw
pop
or
fwait
sub
inc
mov
stos
lea
test
push
xchg
or
mov
or
dec
out
mov
fdivrs
cld
sbb
or
imul
int
fcmovu
testb
imul
decl
sbb
xor
or
aad
pop
pop
push
je
cmpsl
cmp
pop
mov
fstl
mov
scas
bound
lret
in
ljmp
js
pushfw
push
arpl
pop
mov
cs
dec
sub
add
push
jb
sbb
aas
mov
jbe
ret
sysexit
lea
cld
daa
xchg
and
icebp
cltd
out
cltd
jb
sub
push
push
pop
and
dec
sahf
jbe
bnd
test
push
popa
mov
jne
jae
es
dec
jae
push
mov
addr16
hlt
pop
or
mov
loopne
xchg
scas
aam
pop
sti
shlb
dec
mov
dec
add
xchg
push
imul
jns
jns
xchg
loop
mov
mov
repz
inc
test
pop
fistps
xor
cmp
dec
jbe
add
lds
and
mov
add
push
nop
jge
xor
xor
les
popf
or
mov
pop
sub
bswap
jae
es
push
les
mov
out
rcll
clc
jno
aaa
pop
movsl
int3
lahf
and
dec
dec
mov
xor
pop
xor
test
sti
lret
jno
out
inc
and
jne
push
dec
pusha
sub
push
lds
test
or
sahf
pop
ret
mov
xchg
xor
sub
and
loopne
sbb
loope
mov
xlat
outsl
inc
or
add
sub
addr16
xchg
mov
push
cmp
aad
lods
sbb
loop
and
xor
sub
out
stos
xchg
mov
loope
jne
lret
inc
out
iret
call
jl
push
enter
fstpl
or
or
sahf
popl
dec
sbb
jbe
cmp
lock
call
mov
mov
fstl
scas
pop
sti
stc
loope
pop
mov
push
outsb
in
or
and
xchg
xor
lahf
leave
pop
dec
bndstx
movsb
vcmpsd
jl
repnz
sbb
or
or
mov
stos
push
cli
add
loop
xchg
cld
rorb
add
insl
cmp
inc
mov
orb
into
ss
mov
mov
xorl
jl
lret
mov
xchg
or
add
aas
ljmp
cwtl
sbb
mov
fucomip
mov
sbb
jb
mov
jo
sbb
aaa
inc
jecxz
adc
enter
adc
out
dec
dec
lds
mov
rorl
sub
or
xorb
dec
sbb
pop
mov
mov
dec
or
mov
dec
bound
test
xlat
push
jmp
popa
sub
dec
out
lahf
pop
mov
add
ja
fcomps
lea
int3
push
push
push
out
std
push
in
push
xor
pop
jge
test
mov
je
fmull
or
insl
and
leave
or
add
push
imul
pusha
xchg
xorl
jg
into
pop
ficoml
in
adc
dec
mov
je
sbb
cltd
fistps
outsl
mov
jmp
mov
test
dec
mov
scas
call
xchg
stos
push
cmc
mov
adc
icebp
leave
outsl
add
in
cmpsb
adc
dec
adcl
inc
mov
dec
mov
mov
inc
xor
mov
clc
mov
loopne
adc
or
ret
mov
push
jge
fsts
sbb
xor
mov
jg
push
and
rorl
jnp
xchg
jl
test
sub
xlat
and
mov
dec
or
out
sbb
xor
ds
mov
arpl
cwtl
call
std
mov
fdivrs
lcall
pop
cmp
aam
aas
enter
clc
aaa
add
mov
enter
inc
cmp
inc
inc
sub
sub
sub
out
out
ret
sub
push
xchg
inc
inc
cmpsl
push
imul
adc
pop
xchg
test
xor
movsb
pop
shl
or
inc
in
xchg
xchg
push
aad
add
jb
das
inc
jno
jl
mov
insb
mov
adc
adc
cmp
out
push
xor
cmpsb
rorl
int
dec
dec
cltd
test
and
inc
int3
test
ljmp
cli
cmc
xchg
bound
xor
mull
imul
xor
xchg
shrb
and
xor
in
lret
in
out
or
inc
dec
mov
ljmp
outsl
loop
mov
pop
dec
inc
movsl
cmp
push
push
pop
mov
rcrb
xchg
pop
repz
adc
aam
adcb
sahf
cwtl
sub
aam
mov
sbb
ds
in
shl
fisubrs
cmc
mov
scas
iret
fcomip
mov
ss
pusha
jns
xor
clc
mov
push
shrb
sub
dec
xor
push
pusha
aas
mov
addr16
pop
sbb
dec
int
js
or
lcall
xchg
sti
mov
lahf
aas
or
mov
push
imul
adc
jge
stos
call
sahf
int
andl
cli
test
int
test
popf
in
outsb
jp
mov
mov
sub
add
aam
scas
pop
sbb
not
mov
pop
cmp
mov
lods
inc
jns
jae
pop
add
mov
stos
popf
cmp
cltd
movsl
mov
jp
jge
mov
pop
stos
xchg
insb
out
mov
mov
push
jno
scas
dec
sub
adc
iret
int
xlat
pop
inc
out
mov
mov
xor
and
ficoms
mov
sbb
bnd
lret
pop
lcall
mov
and
loope
mov
push
lds
shrb
imul
lret
pop
clc
add
xlat
add
mov
push
xchg
or
out
pop
stc
pop
xor
adc
sub
lahf
imul
mov
out
sarl
test
pop
xchg
aaa
lcall
mov
add
mov
jb
repnz
add
fistpl
or
pop
adc
aam
fdivrs
cwtl
mov
test
sub
cmp
leave
mov
in
insl
jnp
aad
xchg
hlt
mov
xchg
test
aad
add
push
out
pop
xor
into
mov
cwtl
test
jns
mov
lods
jns
xor
dec
dec
xchg
push
xchg
psubd
lods
push
aad
jge
push
into
pusha
loopne
sbb
cmp
mulb
push
fnstenv
mov
sub
js
adc
and
dec
pushl
mov
or
test
mov
jl
cmpl
adc
je
sbb
push
movsb
gs
mov
sub
sti
pop
inc
cmc
xchg
jg,pn
fsubp
lcall
push
dec
sub
lret
sbb
aaa
gs
in
jns
add
imul
dec
jnp
adc
das
out
inc
sbb
lret
popf
jecxz
inc
fmuls
mov
mov
scas
push
pusha
xchg
add
enter
aas
xchg
push
fpatan
sbb
in
xchg
outsl
fstp
push
iret
out
stc
push
sub
rol
cmc
cmp
subb
out
scas
ret
mov
add
push
cmp
fisubrs
cmp
divl
mov
push
sub
dec
and
stos
jle
cmpsl
sbb
cmp
in
sbb
gs
jl
dec
lea
fistl
iret
cld
clc
ljmp
push
ficompl
sbb
mov
fs
or
pop
push
dec
inc
jnp
and
loopne
or
pop
fistpll
enter
movsb
push
mov
outsl
stos
daa
adc
lods
out
xlat
repz
out
gs
cmc
rorb
mov
out
mov
mov
lods
in
dec
sub
scas
push
lret
inc
pmaxsw
test
int
mov
push
mov
cmp
add
jg
dec
cmc
add
popa
ss
imul
adc
shrb
lret
stos
xor
mov
ds
lock
mov
pop
xor
jmp
icebp
test
aas
nop
push
pop
pop
xchg
xchg
xor
jno
push
stos
aam
jecxz
cmc
mov
jb
adc
jmp
daa
jo
popf
push
and
add
sbb
xchg
cld
add
fst
add
loop
mov
jb
xorl
and
std
sbb
enter
stos
cli
add
mov
jge
dec
mov
daa
lds
jne
and
add
iret
inc
inc
es
ja
movsl
jae
rol
and
inc
jl
cs
xor
push
jp
repz
lahf
loopne
gs
shlb
jo
shrb
pop
shl
in
push
shl
xchg
jb
ror
aas
fisttpll
test
jns
inc
pop
push
add
aad
movb
sbb
xor
or
pop
jge
stc
or
mov
loope
insb
fldl
out
iret
jmp
dec
add
or
inc
orb
fildl
es
xlat
pop
adc
lret
fisubrs
loope
xor
jae
out
push
cld
mov
and
ret
stc
out
sub
inc
icebp
subb
loopne
lret
mov
sub
sbb
mov
pop
popa
push
fdivp
dec
stos
push
mov
int
repnz
sub
fildl
cmp
popf
xor
test
pop
test
jge
xor
push
into
and
inc
sub
cmp
fbstp
inc
leave
adc
ret
xchg
inc
inc
push
or
mov
pushf
or
fsubr
lret
dec
pop
jns
imul
push
std
fsubr
add
repnz
rcll
aam
mov
hlt
int
rclb
clc
jle
in
and
std
sbb
jb
lret
mov
push
cli
ljmp
shl
jmp
repnz
mov
pop
and
pop
dec
ret
iret
adc
fnstenv
outsb
movsl
fdivrp
or
inc
ja
cmpsb
jb
or
repnz
nop
sub
pop
sbb
mov
hlt
pop
inc
mov
dec
dec
data16
flds
push
pop
call
popf
js
jl
outsl
addb
mov
cmpsl
xchg
push
cmpsb
and
cli
and
cmp
inc
mov
pusha
xchg
mov
cmp
xor
xlat
push
push
loope
mulb
icebp
lods
lcall
jno
xchg
push
mov
adc
sti
mov
push
ficompl
sub
cltd
adc
ret
jne
in
push
mov
and
cmpsl
ja
lret
xor
inc
addr16
loop
xchg
nop
fdivl
xor
xchg
inc
in
popf
or
mov
add
adc
lahf
adc
push
dec
stos
in
repz
icebp
cmc
shlb
cmp
inc
cmp
jbe
add
mov
je
fcomps
test
jmp
ja
in
push
stos
movsb
jbe
call
test
mov
jns
sub
sbb
dec
jl
sbb
test
xchg
loope
pop
stos
mov
xor
call
dec
and
or
fsubs
in
and
xchg
pop
adc
mov
sub
fwait
pop
aam
mov
push
mov
push
jecxz
sbb
mov
pop
push
add
leave
sub
leave
xchg
push
adc
movhps
shlb
dec
inc
dec
filds
cmpsb
push
or
add
mov
jnp
push
sub
ret
hlt
in
les
mov
jne
mov
sarl
mov
in
xchg
les
and
sbb
pop
mov
mov
and
or
push
mov
cmp
scas
pop
ret
loopne
shll
cmp
loop
pop
std
stos
xor
cli
adc
aas
mov
mov
sub
pusha
sub
testb
iret
xchg
and
and
sub
mov
sbb
cmp
std
stc
cmp
addr16
in
int3
loope
sub
mov
mov
sahf
loop
mov
cli
jle
shr
orb
pop
sub
xor
lock
mov
mov
push
sbb
clc
dec
cltd
jmp
sub
add
adc
icebp
inc
push
sub
outsl
mov
sbb
dec
xchg
ret
lahf
jo
mov
add
jae
sti
push
mov
sub
fnstenv
ss
mov
add
mov
mov
gs
and
inc
jae
into
pushf
in
bound
call
xor
sub
test
cli
cwtl
dec
and
adc
dec
pop
adc
xchg
leave
scas
adc
mov
inc
fcoml
mov
in
xchg
sub
sub
mov
lods
movsl
cmp
xchg
and
aaa
or
test
mov
jmp
pop
bound
out
cmc
adc
or
fstp
mov
or
cmp
cmc
out
popf
icebp
mov
sbb
dec
leave
stc
xchg
inc
dec
popa
mov
js
jmp
inc
add
jo
xor
sub
and
divl
in
xor
jnp
in
stc
nop
ret
popa
addr16
cwtl
inc
incb
mov
loope
lods
adc
lds
sub
outsb
mov
clc
or
outsl
jecxz
inc
loop
sahf
stc
push
push
add
jecxz
or
dec
fimull
sbb
fwait
jge
sbb
cwtl
call
shlb
idivb
cmp
push
fwait
lods
out
and
push
mov
inc
int
fiadds
in
jbe
aad
adc
and
enter
jl
dec
ficoml
in
repz
and
xor
fcmovnbe
mov
aad
sbb
je,pn
ret
idiv
mov
jb
outsb
std
sbb
add
sbb
and
das
mov
mov
test
hlt
xor
dec
cli
test
xchg
ret
cmc
jbe
xor
les
mov
jg
lret
hlt
js
sbb
scas
in
xchg
into
test
test
jecxz
push
sub
add
mov
sbb
jge
outsb
adc
add
cmp
mov
mov
cwtl
push
roll
xchg
ffree
mov
gs
mov
outsb
in
sub
int3
jge
xor
cmp
subb
xor
ret
pop
loope
fwait
in
sbb
sub
addr16
xor
or
stos
decl
push
cmp
fisubl
xor
mov
call
cmp
lods
dec
ret
adc
add
inc
lcall
mov
xchg
stos
clc
xchg
js
pop
mov
mov
inc
ficoms
test
push
test
addr16
adc
lock
shll
roll
pop
test
test
sub
ja
hlt
pop
mov
mov
pop
movsb
inc
dec
inc
hlt
loop
and
xchg
lret
enter
xchg
dec
ja
mov
push
js
clc
add
push
hlt
jmp
mov
xor
rorl
adc
or
hlt
in
dec
dec
sub
push
les
addr16
iret
xor
or
push
icebp
fdivs
or
push
ss
and
mov
pusha
cs
fcompl
outsb
es
xchg
fldl
movsb
cs
sub
cmp
mov
mov
aad
sbb
stos
es
ret
adc
inc
or
pop
and
sub
jp
ret
or
outsl
sarb
cltd
stc
and
sbb
pop
mov
mov
cmp
xor
es
movsl
pop
ds
jo
repz
mov
loop
xor
mov
pop
pop
fistpl
xor
sub
stc
cwtl
mov
inc
xchg
xchg
xor
adc
dec
lcall
pop
test
fwait
jb
lds
enter
or
mov
out
or
sbb
add
pop
xor
xor
xorb
sbb
mov
sbb
mov
fisttpl
dec
les
das
icebp
js
mov
stos
or
sbb
mov
mov
and
daa
push
mov
adc
add
mov
jno
xor
addr16
mov
aad
sub
cwtl
and
xchg
sbb
xchg
cmp
aaa
pop
out
xchg
add
jns
ds
mov
aaa
enter
cs
jp
insb
xchg
cld
xor
push
push
js
sub
test
add
test
sbbl
mov
adc
push
popf
sub
mov
hlt
addr16
xabort
out
in
pop
popa
push
mov
push
push
insl
mov
clc
adc
mov
jmp
mov
dec
enter
std
pop
cmp
lahf
and
dec
pop
aad
aam
pop
imul
pop
cwtl
cmp
insl
mov
dec
mov
lret
xchg
insb
sarl
add
iret
insb
popf
stos
aas
addb
and
into
loop
cmp
add
sub
mov
insb
data16
jl
inc
loop
xor
jg
sbb
xor
xchg
in
push
ja
mov
neg
adc
fs
mov
push
je
pop
adc
pop
cmpsb
mov
out
xor
cmp
in
jp
add
mov
mov
repz
jo
jle
cli
mov
das
imul
xor
rclb
das
add
pusha
pushf
mov
xchg
fnsave
dec
icebp
push
les
xor
addr16
mov
adc
iret
mov
adcb
push
stos
push
sbb
daa
sahf
pop
loope
cmp
pop
mov
sbb
push
inc
xchg
push
jg
bound
arpl
aas
dec
rcrl
adc
es
jle
pushf
xlat
in
nop
sbb
jl
gs
dec
sub
sti
int3
adc
je
xor
stos
fisubrs
insb
ss
or
pushf
shr
mov
jo
mov
mov
repz
pop
jae
xchg
mov
dec
out
xorl
pusha
sbb
nop
mov
add
or
into
mov
mov
movsb
sub
bound
icebp
scas
jno
insb
dec
xchg
call
mov
mov
dec
inc
gs
gs
clc
xchg
jo
inc
adc
and
push
mov
vcmpps
ret
sub
bound
push
push
movsb
testb
xor
xchg
ret
and
push
cmp
jae
daa
lods
ds
inc
test
roll
pop
arpl
and
push
pop
daa
inc
mov
sub
or
call
mov
sbb
stos
jae
or
push
cmp
fstps
or
mov
ret
gs
sbb
fstpt
mov
adc
fadd
push
in
fs
jo
push
adc
cld
adc
pop
xor
je
sbbl
iret
cltd
fnstsw
fbstp
sbb
rolb
adc
dec
mov
xchg
popa
jb
jge
or
xchg
sbb
js
xor
mov
push
pop
jbe
mov
iret
hlt
dec
imul
and
dec
pop
mov
inc
dec
mov
sahf
mov
lahf
out
cltd
pop
nop
inc
sti
loop,pt
xchg
push
or
pop
daa
xorb
pop
dec
call
pop
mov
cmp
sar
mov
pop
jnp
mov
int
repz
push
sbb
dec
cmp
pop
push
pop
add
xchg
stos
test
mov
mov
jp
andl
dec
jnp
or
and
pop
rcl
loop
sbb
push
pushf
cmp
bound
out
fistpll
add
lods
pop
jge
mov
mov
pop
sbbb
push
jmp
ljmp
jnp
jo
xchg
inc
popa
mov
mov
jmp
cmp
outsb
dec
mov
mov
mov
mov
hlt
lock
das
or
xchg
xchg
mov
add
sbb
cmp
fstpt
jne
mov
rcl
inc
jle
test
pop
lock
mov
rcll
pusha
or
jb
insl
xchg
cs
mov
pop
test
push
das
inc
pop
ja
call
fbstp
scas
lahf
testl
daa
aas
push
das
inc
pop
ja
call
fbstp
scas
lahf
testl
daa
aas
push
das
out
pop
ja
decl
xchg
mov
cmpsl
mov
xlat
mov
jle
outsb
pop
pop
aaa
dec
es
push
das
inc
pop
testl
sub
enter
pusha
or
and
jge
inc
push
push
lea
movsb
test
dec
outsb
inc
add
add
add
pop
push
lret
add
add
add
add
add
add
add
cmp
lret
add
add
scas
add
add
add
add
add
mov
inc
add
add
pop
add
add
add
add
add
push
add
cmp
push
add
add
add
add
add
add
add
mov
sub
sub
pop
add
add
add
mov
add
add
add
test
pop
add
xor
add
enter
fldl
or
adc
jns
xchg
add
add
push
add
enter
stos
add
add
test
movsb
add
add
add
add
add
add
scas
add
lret
add
stos
add
xor
add
add
add
add
add
iret
add
or
add
inc
add
add
add
add
add
cmp
popl
push
add
pop
add
add
pop
add
xchg
add
add
add
add
inc
pop
add
push
add
add
add
pop
int3
add
add
add
add
add
add
aaa
add
dec
add
pop
add
add
add
jns
inc
add
aas
add
pop
add
add
add
add
push
add
jo
pop
add
add
add
iret
add
sbb
xchg
add
push
add
xchg
add
add
sbb
push
add
add
arpl
movl
add
test
movsb
add
add
faddl
xor
add
cmp
or
add
add
add
add
add
add
pop
cmp
sbb
dec
add
add
movsb
add
add
add
add
cmp
pop
add
add
add
add
add
addb
add
popa
add
add
add
add
push
add
pop
add
movsl
add
push
add
mov
add
pop
add
pop
add
cld
add
add
add
add
add
add
add
adc
movl
add
add
add
add
lods
add
add
add
add
inc
add
add
add
cmpsl
add
add
movl
or
incb
bound
jnp
jnp
stos
add
inc
or
test
pop
add
add
add
add
add
add
add
sbb
nop
add
add
add
add
add
enter
enter
inc
add
pop
add
inc
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
scas
add
add
add
add
pop
add
add
add
jge
outsl
add
add
add
add
add
push
add
sub
push
add
aaa
add
push
add
push
add
pop
add
add
add
add
push
add
popf
add
add
add
insl
add
popl
cmpsl
add
push
add
pop
add
push
add
add
add
adc
and
add
jno
xchg
pop
test
fcmovne
sub
clc
add
inc
and
shlb
xorl
aaa
je
jno
std
mov
push
loope
lea
jb
sub
js
mov
mov
jmp
fidivl
stos
das
test
dec
stc
data16
xchg
popf
inc
in
cmpsb
ljmp
leave
mov
cmpsl
ja
pop
stos
adc
inc
stos
fcoms
ds
and
test
xchg
mov
cmpsb
cltd
mov
dec
cmpsl
dec
arpl
aas
inc
leave
ds
sub
cmp
lds
jnp
nop
jns
enter
and
sbb
mov
sub
bound
pop
mov
int3
sub
jnp
dec
ret
mov
sbb
lret
ja
scas
leave
mov
outsl
xor
cmp
aam
mov
cld
mov
movsl
mov
jg
mov
jae
je
andb
scas
sbb
and
add
lods
inc
xchg
ds
inc
push
in
fbstp
mov
pop
clc
dec
daa
push
repnz
and
out
pushf
std
xchg
mov
dec
insb
pop
xchg
sub
or
int3
dec
mov
and
adc
dec
test
outsl
and
add
adc
push
sub
sub
push
inc
and
and
and
push
inc
mov
and
cmpsb
inc
cmp
cmc
and
call
xchg
sbb
rorl
lods
rol
xchg
rol
mov
rorl
mov
aam
lahf
lret
xchg
mov
test
insb
xchg
mov
xor
stc
adc
test
ret
push
stos
pop
cmp
loope
repnz
sbb
sbb
dec
out
jg
push
cmc
xchg
dec
mov
subl
ljmp
aas
test
jbe
xchg
jae
mov
pushf
sub
rorb
daa
mov
sub
mov
xchg
pusha
inc
pop
dec
sbb
add
aas
jo
add
push
sbb
jmp
sbb
pop
lret
jg
xchg
sub
inc
fistps
sbb
int3
faddl
movzwl
clc
push
xor
pushf
xor
and
xor
pop
jmp
mov
add
pop
test
filds
ljmp
sbb
test
mov
sub
pop
or
inc
pop
push
pop
ss
scas
aam
push
sar
jno
push
and
push
fwait
and
adcb
ret
cld
mov
int
icebp
lock
or
leave
incb
repz
lock
adc
mov
shr
or
mov
cmp
xchg
out
enter
pop
mov
fcoms
movsb
xchg
sub
test
jecxz
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
