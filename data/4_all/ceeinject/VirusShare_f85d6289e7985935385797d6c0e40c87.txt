call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rol
shrb
pop
loopne
cltd
pop
out
lds
lods
dec
push
mov
pusha
lea
incl
out
xor
and
sarb
shrb
pop
loopne
nop
jg
outsl
mov
mov
scas
jo
pusha
adc
iret
shlb
shrb
pop
loopne
nop
data16
mov
xchg
add
add
xorl
mov
test
shrl
cwtl
xor
and
fstps
rcr
and
cmp
aas
outsb
seta
xchg
dec
aad
in
aas
int
mov
add
das
shrb
lds
push
outsl
jp
jmp
pusha
and
or
out
mov
mov
and
shrb
das
xor
out
clc
pop
jg
jmp
out
int
xchg
jg
jo
lods
add
enter
addl
into
jne
sbb
xchg
dec
movntps
xor
std
popl
andb
and
in
xor
iret
lret
les
gs
pop
mov
or
mull
and
adc
sarb
pavgb
mov
mov
mov
xchg
adc
add
xor
and
mov
cmpsb
push
cmc
sub
add
xor
and
and
loopne
xchg
inc
mov
cmpsb
inc
mov
xchg
outsl
mov
pop
cmc
cmp
and
daa
into
or
lea
pop
mov
stos
mov
rorb
test
adc
dec
push
mov
pusha
adc
add
xor
and
sarb
shrb
pop
loopne
nop
jg
outsl
mov
mov
scas
jo
pusha
adc
add
xor
and
sarb
mov
sbb
inc
jb
loopne
aas
cmpsl
jecxz
xchg
les
or
or
xchg
xchg
pop
aas
fisubrl
out
imul
jp
leave
pusha
mov
sub
es
sub
and
sahf
mov
in
mov
jmp
and
aas
rolb
mov
sub
insl
mov
je
jno
lcall
movb
push
ja
mov
pop
faddp
das
pop
or
xchg
fidivrs
cltd
mov
pop
mov
fsub
pop
push
inc
cmp
lret
lret
stos
int3
jne
push
pop
popa
shl
test
aaa
xor
push
and
ss
dec
mov
popa
arpl
das
xlat
int
popf
sahf
testl
mov
repnz
mov
jno
mov
stos
rcrb
add
ss
jle
cmp
repz
pop
jns
adc
push
xor
push
xor
stos
xor
sub
mov
add
cmp
push
icebp
push
dec
mov
in
mov
inc
xorl
push
jmp
and
test
fnsave
jl
js
fimull
mov
shll
xchg
mov
dec
ret
pop
popf
scas
sbb
arpl
adc
jp
test
adc
inc
cmc
or
mov
xchg
cmp
mov
or
add
cmp
push
or
mov
xchg
mov
jne
mov
jecxz
mov
adc
mov
out
mov
and
add
stos
mov
pop
xor
push
and
lods
add
aaa
div
mov
je
rol
add
or
push
aam
pop
or
das
int3
xchg
rorb
push
les
mov
mov
mov
or
subb
insb
lahf
cltd
sbb
js
pop
pop
sbb
mov
das
jo
xchg
rcrl
and
cmp
push
ds
pusha
lcall
mov
and
imul
push
mov
aad
out
xor
stos
ljmp
sti
mov
cmp
jp
xor
pop
pop
push
testl
into
popf
cmp
outsb
movsb
fidivrl
rcrl
mov
adc
stos
daa
adc
retw
bound
push
or
xchg
xor
jb
aad
out
gs
mov
xorl
scas
outsb
jae
das
jp
shll
jecxz
sub
lods
mov
mov
es
push
movsl
sbb
cs
rorl
jmp
and
andb
shll
dec
popa
fs
bound
or
int3
mov
pop
dec
gs
test
rclb
mov
cltd
add
sub
arpl
add
cltd
mov
sbb
ret
xor
sub
add
xlat
cwtl
sahf
push
scas
push
lret
lds
data16
sub
inc
xchg
les
sbb
jne
add
mov
cmpsl
pop
adc
or
test
xor
enter
mov
xor
dec
and
xor
sbb
lods
push
addr16
outsl
lgs
dec
add
push
cmp
lods
clc
lods
dec
add
pop
and
cli
add
cmpsb
dec
cmp
mov
scas
adc
and
test
stc
cs
sbb
adc
icebp
fstp
fwait
xor
sbb
push
dec
test
cmp
movsl
mov
push
and
and
cmp
xor
daa
dec
rolb
lret
dec
scas
cmp
scas
dec
jno
dec
pop
mov
cmp
xchg
jb
pop
test
or
and
mov
dec
lret
aaa
stc
dec
cmp
cmp
add
mov
pop
jbe
xor
ja
inc
push
xor
repz
inc
sbb
pop
pusha
lea
stc
clc
adc
dec
lret
stos
jp
dec
int3
jnp
into
popf
mov
dec
add
insb
test
testb
test
and
xorb
mov
int
fcmovnb
mov
test
jge
rcrb
out
inc
sub
add
mov
cmp
and
mov
cld
nop
sti
popw
cld
pop
mov
rcrl
add
rcrl
cs
sub
xor
pop
cld
jl
xchg
in
fcomps
push
in
loope
inc
pop
xchg
stos
fnstsw
les
ret
cmp
andb
dec
je
dec
push
cwtl
adc
fbld
mov
pop
push
mov
or
mov
test
jbe
sub
mull
adcb
xor
es
in
mov
mov
fisttpl
shll
sbb
aam
mov
out
jb
inc
test
mov
sbb
mov
into
rorl
jno
inc
cmp
dec
ja
xor
jmp
xchg
aaa
add
and
jo
or
bound
or
ljmp
jmp
push
add
test
data16
fisttpl
and
sbb
jns
cmp
daa
pop
push
out
jmp
cmp
out
stos
ret
lret
mov
test
repnz
enter
or
cmc
mov
push
xchg
mov
and
mov
nop
inc
inc
adcl
pop
jno
mov
push
jo
ss
fs
cmp
jnp
sti
jmp
fmuls
fmulp
sbb
or
mov
hlt
cld
rcrb
rorb
stc
xlat
mov
imul
xchg
xchg
rcll
mov
cmp
loop
or
or
pop
mov
push
dec
movsl
in
stos
lahf
pop
nop
nop
sub
xchg
icebp
lahf
xor
push
rcrb
and
sbb
sub
lock
subb
orl
cmp
repz
je
cmpsl
data16
or
or
mov
shlb
mov
popf
add
mov
xchg
aam
pop
icebp
or
orl
push
xchg
mov
int
adc
dec
inc
dec
sub
jge
inc
fs
xor
or
mov
xchg
jns
lcall
mov
jle
sbb
push
in
int3
enter
movl
xchg
call
lods
adc
xchg
pop
das
movzwl
dec
imul
std
test
test
scas
jge
adc
cmpb
jb
in
dec
das
jmp
outsb
adc
test
adc
mov
movsl
xor
mov
jno
add
inc
mov
xchg
mov
xchg
xor
cmc
push
jne
int
jge
dec
push
push
pop
ffree
jecxz
adc
mov
xchg
icebp
mov
jmp
int
push
xor
pop
mov
push
lods
test
fdivs
push
js
mov
pop
int3
icebp
loop
sbb
nopl
mov
ficoms
and
fildl
adc
jge
mov
pop
bound
fldenv
mov
or
inc
add
ret
in
adc
xchg
loope
pushf
cli
insl
mov
jnp
mov
scas
sbb
pop
into
in
repz
addb
fs
mov
or
jle
push
divb
cmp
sbb
ret
inc
cltd
or
test
mov
jecxz
jecxz
sahf
mov
mov
cmp
mov
cltd
int
sbb
das
cld
popa
jge
mov
out
jle
test
sub
dec
dec
mov
test
cs
adc
mov
in
xchg
push
aaa
pop
xchg
inc
hlt
nop
testb
pop
test
jb
lock
lcall
repnz
or
jae
cmpsl
jg
pop
stos
fdivl
or
add
push
inc
jb
lcall
fdivp
mov
mov
mov
sbb
pop
pop
xor
sarb
sub
pop
lcall
test
mov
mov
lahf
pop
dec
movsl
andl
xlat
mov
jge
addr16
push
in
icebp
nop
rcr
dec
in
adc
or
push
daa
jns
push
inc
xchg
insb
mov
loop
or
es
sub
or
scas
aas
sub
fadds
ljmp
mov
mov
or
push
dec
mov
movsl
cmp
pop
push
imul
rcrl
mov
rorb
jge
imul
jo
cli
dec
js
pop
pop
cmpsl
sub
insb
sbb
mov
es
adc
loop
roll
xor
cltd
cmp
mov
outsb
out
fsubs
fistpl
mov
jecxz
mov
inc
cs
lea
mov
cltd
xchg
ret
adc
mov
push
cmpsb
loopne
dec
mov
dec
dec
addr16
and
mov
mov
imul
movsb
cwtl
push
hlt
inc
fldl
fdivrl
or
test
pusha
jmp
adc
mov
xchg
push
mov
jl
push
push
or
loop
scas
scas
not
cmpsl
movsl
push
int
push
xor
pop
ljmp
and
pop
fst
inc
lea
stc
adc
int
mov
out
pop
ljmp
jle
pusha
xor
jmp
mov
mov
sub
xchg
dec
dec
lods
inc
dec
or
dec
or
fcoms
pop
test
xor
repnz
adc
add
sti
cli
cmp
xor
mov
int3
xor
pusha
xlat
jge
mov
arpl
inc
nop
pop
mov
ds
mov
movsb
in
dec
mov
cmp
sahf
adc
and
mov
xchg
mov
ljmp
or
sub
in
or
dec
xchg
adc
in
nop
sbb
call
enter
mov
mov
shll
cmp
into
inc
scas
ret
sub
gs
inc
lret
add
jge
aam
and
sbbb
sti
movsl
xor
pop
push
or
pop
cltd
xor
test
lea
xchg
xchg
ret
cmp
xchg
shlb
repnz
sub
push
leave
xchg
and
mov
xor
mov
sbb
add
xlat
sti
xor
fmul
movsl
mov
fcoml
scas
add
popf
push
mov
rcrl
nop
ljmp
add
push
xor
jcxz
rcr
dec
clc
pop
add
jno
jb
nop
loop
xchg
imul
and
inc
out
xorb
setae
pop
leave
mov
inc
test
mov
nop
insb
mov
iret
sub
enter
inc
adc
out
or
pusha
pop
push
call
jl
adc
push
test
mov
popa
lock
mov
mov
movsl
call
rcrb
adc
mov
sub
movsb
cmp
push
and
dec
enter
dec
mov
mov
je
pop
mov
pop
or
xlat
mov
xlat
sub
enter
xor
lods
jg
pop
enter
pop
sub
leave
mov
roll
jg
lds
or
xchg
xchg
inc
pop
clc
std
push
pop
fimuls
out
jmp
out
inc
inc
repz
xchg
jle
arpl
add
in
cmp
adc
inc
pusha
mov
add
call
inc
daa
outsl
pop
inc
insl
mov
xchg
inc
fs
cmp
es
mov
mov
scas
or
mov
push
out
cmpsl
cmp
or
hlt
rorb
mov
or
adc
fcomps
sti
imul
movsl
adc
or
insl
pop
out
adc
add
sbb
pop
push
movsb
adc
dec
clc
xchg
or
dec
mov
out
push
and
lahf
shl
jns
repnz
mov
in
add
aas
push
mov
gs
sbb
adc
cltd
fldl
pusha
jg
adcb
mov
or
inc
call
mov
gs
mov
out
pop
fs
sub
mov
jo
dec
xor
inc
cli
or
movsl
das
jae
jle
test
cli
out
dec
cmp
cmpsl
cmp
pop
insl
jecxz
mov
adc
fwait
pop
push
add
sbb
inc
cmp
mov
cmp
aam
mov
or
rcll
or
push
ss
sti
or
lock
push
ficomps
out
mov
xor
addr16
jne
push
arpl
mov
mov
addb
shr
scas
mov
mov
push
std
sub
push
mov
out
std
dec
scas
daa
mov
cmp
xor
push
mov
jne
call
add
inc
in
and
pusha
lret
or
mov
bnd
xor
stos
push
pop
arpl
adc
and
xor
push
ds
dec
pop
pusha
out
pop
lahf
out
into
ja
pop
hlt
jg
mov
sbb
pushl
test
mov
add
cmp
movsl
das
cmc
adc
rcrl
lcall
xchg
repnz
fcompl
in
cmp
testb
test
outsl
imul
sub
mov
mov
fistpl
cmp
in
jle
arpl
push
test
and
inc
sarb
shll
push
inc
add
push
sub
or
call
inc
call
pop
jp
mov
ds
pop
mov
xchg
movsl
jle
clc
and
cltd
xchg
sahf
popl
xchg
insl
add
or
mov
pop
cmp
pop
sub
out
mov
rolb
iret
out
pusha
xchg
data16
and
subl
in
inc
inc
mov
gs
jb
dec
xchg
ret
dec
iret
xor
xor
adcb
fisttpll
andb
push
jb
orb
clc
enter
pusha
xchg
sub
je
mov
push
testl
ljmp
xor
sbb
insl
or
aad
adc
push
int
aam
jmp
iret
or
leave
mov
loop
loope
dec
psubusb
sbbl
lods
push
xchg
mov
xchg
or
jo
xor
xchg
loop
mov
hlt
mov
jecxz
fdivrs
out
addr16
push
out
rcll
push
icebp
adc
mov
sub
sub
insl
jp
adcb
out
lahf
jae
mov
ja
jnp
pop
or
push
addr16
dec
loop
aam
fstpt
inc
mov
lods
movsl
shll
adcl
dec
mov
jb
and
xchg
mov
fstl
inc
popa
push
test
jb
in
bound
fwait
mov
mov
cmp
sbb
rol
ja
xchg
push
cmp
dec
int
xlat
mov
popf
pusha
dec
negb
ret
lcall
pop
mov
movsl
shrb
adc
lds
pop
pushl
push
xor
test
adc
xchg
enter
inc
test
cmpsb
cwtl
pop
lret
je
lret
add
nop
es
js
push
cmp
inc
pop
mov
mov
jecxz
sbb
jns
push
and
fcomp
and
jo
popl
iret
subb
push
sbb
gs
xchg
mov
lods
in
lret
xchg
int3
pop
add
cmp
fimull
dec
icebp
cmp
pusha
xor
ja
repz
fnstcw
sbb
pusha
ljmp
jp
je
or
mov
lret
sbb
push
fcomp
mov
sub
inc
dec
pusha
aaa
mov
mov
ror
adc
mov
xor
pop
lahf
mov
mov
push
jp
jle
das
enter
mov
repz
sub
stc
jns
and
or
jbe
movsl
sub
outsl
ljmp
popf
and
arpl
xor
repnz
shll
sub
dec
mov
aaa
jo
cli
mov
cwtl
xchg
es
mov
lds
lods
jne
call
stos
lahf
stos
pop
inc
sub
add
rcr
mov
ret
mov
cmp
mov
xchg
je
cmp
jo
xor
subb
mov
pop
cmp
sub
xchg
lahf
imul
pop
jge
pop
and
mov
lock
mov
mov
popa
aas
and
inc
jne
push
ljmp
mov
fs
cmpsl
out
ret
xchg
jb
pause
aas
mov
xlat
jl
mov
or
sarl
add
mov
loopne
sub
jp
fwait
lods
adc
mov
imul
mov
test
cmp
dec
imul
mov
sbb
int3
outsb
fcomps
cmc
jp
pop
or
push
loopne
shlb
add
sub
sbb
and
or
sti
scas
andb
cwtl
pop
ljmp
inc
ja
leave
sbb
popf
pop
dec
inc
shll
add
ret
dec
clc
int
test
repnz
cmp
gs
push
pop
mov
xchg
or
lods
cltd
sbb
call
sbb
stos
out
fldl
and
xor
mov
pop
adc
pop
push
adc
in
inc
mov
aas
out
fistpl
outsb
leave
repz
ret
mov
out
sbb
push
adc
add
xor
mov
xor
jl
stos
and
dec
ljmp
xor
addb
insl
outsb
add
std
ret
popf
cltd
inc
push
sub
cmpb
data16
push
rcrb
popa
pop
xor
movsb
and
jb
mov
and
mov
xchg
dec
std
mov
and
movsl
cmpsb
cmp
inc
add
aad
data16
and
xorl
ljmp
mov
xchg
xor
cmpsb
stc
pop
mov
jo
push
xchg
or
das
mov
gs
icebp
jns
repnz
test
push
cltd
mov
sti
rclb
jns
adc
push
js
sbb
mov
pop
dec
popf
je
xor
jo
sbb
bound
lods
in
dec
dec
mov
adc
add
in
xor
pop
fnstcw
lcall
push
lcall
jge
sysenter
push
jne
jecxz
daa
test
push
dec
cs
or
xchg
stc
pusha
cli
xchg
xchg
inc
xchg
pop
sbb
mov
xor
push
cmp
adc
test
jmp
xor
out
fs
dec
xchg
subl
mov
aad
leave
dec
xlat
in
pop
imul
push
jge
sub
pop
pop
iret
jb
sub
cmp
push
push
and
fdivs
sub
dec
mov
push
inc
push
sbb
and
jmp
xchg
push
cwtl
scas
add
inc
cli
xchg
ret
jns
and
and
add
lret
imul
jno
add
lahf
imul
jg
insb
popf
push
stos
lods
mov
scas
mov
lahf
mov
inc
rcr
and
fsts
subb
inc
js
test
clc
test
inc
sahf
mov
lahf
mov
clc
push
xchg
pop
cmpsb
push
bound
mov
out
mov
dec
in
and
jmp
cld
jecxz
ss
xchg
push
jbe
pushf
test
jle
test
jae
add
out
arpl
add
cmc
inc
xchg
sbb
add
lods
or
pop
sbb
pop
sub
nop
sbb
push
xchg
les
into
mov
idivl
xor
or
or
out
pop
decb
push
popa
mov
loope
cmp
repz
sub
sahf
sbb
jp
push
outsl
aaa
sahf
lea
adc
mov
sbb
pop
std
int
leave
and
lret
popf
decl
insl
ret
cmp
and
lcall
xchg
pop
insb
or
jp
xchg
pusha
fwait
in
rcrl
idivb
cwtl
pop
jbe
xorb
int
clc
ljmp
pmaxsw
movsb
mov
mov
jbe
iret
fldcw
sahf
jbe
out
out
enter
popa
les
int
or
mov
cltd
mov
or
testl
ljmp
jnp
mov
dec
rcrb
sahf
pop
xchg
mov
fwait
movsl
in
roll
dec
or
jb
jb
push
addr16
ret
es
out
cmp
mov
sub
and
and
mov
clc
int
sub
cmc
cmpl
out
push
ja
arpl
jl
loopne
push
scas
mov
test
int
dec
hlt
bound
adcb
shll
sub
sub
dec
push
adc
dec
pop
fistps
cmpsl
mov
add
push
popf
in
cltd
mov
cmp
cmp
popf
les
lcall
jne
jecxz
inc
sbb
outsb
aaa
push
das
fcomps
lcall
mov
or
xor
sub
lods
shlb
mov
imul
int3
lahf
jge,pn
popf
out
xchg
pop
fwait
ret
dec
ror
sti
xor
das
iret
lock
nop
jg
outsl
mov
mov
scas
jo
pusha
adc
add
xor
and
sarb
shrb
pop
loopne
nop
jg
outsl
mov
mov
scas
jo
pusha
adc
add
xor
and
sarb
shrb
pop
loopne
nop
jg
outsl
mov
mov
scas
jo
popa
mov
incl
out
xor
and
sarb
shrb
pop
loopne
nop
jg
outsl
xor
dec
scas
mov
pusha
clc
addr16
adc
and
xor
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
push
jle
add
pop
cmp
sub
imul
cld
fmull
mov
jl
dec
jle
push
sub
cmp
or
xor
in
fdivrp
lcall
mov
dec
lret
outsb
jle
push
sbb
je
push
ds
in
popf
lods
shrb
loopne
sar
pop
sub
sbb
and
lds
addr16
mov
mov
jae
xlat
lds
mov
and
lcall
adc
add
jnp
jno
mov
scas
pop
inc
shll
adc
pextrw
push
cld
rolb
in
mov
adc
xchg
and
pop
pop
inc
lret
pop
jle
or
sbb
pop
push
cmp
or
int3
push
xchg
into
imul
fnsave
divb
scas
jae
loopne
mov
inc
mov
das
int
loopne
iret
and
add
pushf
test
mov
subw
sahf
mov
arpl
iret
sarl
sahf
mov
mov
stc
scas
pusha
notb
loopne
pop
outsb
cmp
push
sub
cmp
or
mov
in
ficoms
loopne
nop
sahf
push
scas
xchg
mov
adc
and
xor
push
push
dec
jns
pop
scas
fimull
jmp
shr
clc
ljmp
aas
sbb
dec
jle
outsb
cs
stos
fmull
jmp
lret
jmp
cmp
pusha
push
cmp
or
sbb
in
fdivrp
out
int3
fmull
mov
jl
dec
jle
push
sub
cmp
or
sbb
in
fdivrp
out
int3
fmull
mov
sub
xor
aam
mov
xchg
movsl
and
cmpsl
mov
lods
dec
pop
dec
das
pop
outsl
aam
pop
stc
and
mov
inc
xor
mov
outsb
les
inc
pop
mov
mov
mov
je
stos
xchg
jmp
or
pop
xor
jno
dec
imul
mov
test
mov
test
jb
pop
mov
jbe
stc
jae
dec
mov
push
or
lahf
outsb
and
dec
or
adc
and
and
mov
xor
out
xor
mov
jno
test
sub
loope
stc
out
sub
adc
cmp
xor
stos
xor
jmp
mov
subl
hlt
xchg
pop
ja
ficomps
xchg
out
movsl
std
pop
cmc
movsb
pop
mov
or
mov
jecxz
pushf
and
test
mov
cmp
push
mov
add
test
inc
mov
sub
ja,pt
rorb
sub
jmp
insl
adc
sub
cli
push
arpl
ss
cwtl
jmp
test
repz
in
in
das
loopne
repz
mov
jno
test
adc
mov
dec
xor
es
fnstenv
inc
cmc
and
lock
sbb
adc
loope
push
enter
shll
jp
push
pop
pushf
or
push
in
or
or
cmp
sub
andl
mov
in
jbe
push
mov
imul
pop
inc
jb
fldl
nop
ja
jns
jno
leave
push
in
lret
addl
push
push
pusha
popa
repnz
stos
mov
data16
and
mov
loopne
outsb
adc
cmc
rorl
and
mov
dec
push
loopne
xor
push
sub
scas
add
jb
stos
mov
popf
xchg
int
mov
xor
addr16
jb
lahf
lods
or
sahf
inc
hlt
mov
and
xor
addr16
cmpsb
add
jle
jb
aad
push
adc
jno
in
in
scas
idiv
in
dec
insl
inc
xor
sbb
rep
jecxz
push
in
cmp
cmp
outsl
cmpsb
aas
loop
pop
push
aaa
outsl
inc
add
xchg
and
in
sub
mov
aas
jnp
pop
cmp
xchg
adc
and
mulb
in
mov
addr16
jge
and
add
jmp
mov
push
add
into
sub
scas
imul
rclb
aad
dec
push
adc
push
pop
addl
pop
fidivs
push
pop
or
movsb
shrl
and
sub
add
rcrb
cwtl
aas
xchg
sbb
stc
fldenv
xor
push
or
jmp
mov
mov
mov
enter
fcmove
mov
pop
cmpsb
inc
jno
pop
adc
inc
popa
xchg
mov
sbb
lods
clc
pop
cld
fcomip
jl
jbe
shll
lret
mov
pushf
sbb
sbb
stos
inc
lods
add
out
pop
ds
fsubr
pop
xchg
daa
mov
in
call
push
cmp
cmpsl
int
push
stos
xchg
fisubrl
int
js
cmp
mov
xor
ret
std
fbstp
loopne
xor
xchg
jge
mov
aas
shll
imul
mov
add
js
sti
pop
inc
xchg
push
or
movsl
jb
push
sbb
pop
push
adc
mov
xchg
rclb
lahf
pop
adc
cwtl
out
push
and
push
push
dec
leave
pop
fwait
in
xchg
xchg
xor
std
push
adc
adc
jae
add
nop
or
sarb
push
jne
rorl
lods
mov
lock
pop
xor
icebp
sahf
int
or
arpl
mov
nop
push
stos
xor
or
lret
mov
es
mov
xchg
cmc
mov
sbb
xchg
and
push
xchg
dec
fidivrl
mov
loope
sbbl
sub
dec
repz
lock
mov
icebp
pusha
push
push
push
ljmp
ret
dec
xor
jecxz
push
push
pop
or
pusha
fcmovu
loope
mov
mov
int
ja
into
jnp
rcl
adc
rolb
mov
rorl
inc
push
fsts
mov
scas
push
and
rcr
movsl
in
arpl
shrb
arpl
xchg
sub
lret
subl
adc
fdivp
cmp
mov
push
roll
pop
mov
xlat
fdivs
xchg
daa
shll
sbb
or
fdiv
adcb
jecxz
cmpsb
jne
lret
daa
push
insb
int
dec
addr16
sbb
sub
test
pop
push
or
sbb
inc
pop
sbb
stos
dec
aam
and
inc
push
loope,pt
and
clc
in
pop
je
inc
jl
xor
xchg
mov
lahf
adc
adc
das
testl
in
test
dec
pop
xlat
sarl
cltd
sub
sub
dec
stos
test
into
cmp
jmp
mov
dec
std
lret
std
ljmp
sub
daa
pop
xor
pop
push
imul
mov
rcrl
sub
inc
xchg
cmpsb
dec
jp
fsts
test
fsts
ficoml
cli
fmull
sar
xor
adc
xchg
lods
ffreep
adc
push
or
ror
test
dec
mov
shlb
dec
pop
lret
das
dec
ficoms
cltd
mov
clc
in
out
add
rorl
dec
movsb
mov
sbb
mov
jg
dec
or
xor
add
jp
shrl
cld
add
jbe
stos
popl
sub
sbb
inc
js
sbb
test
xchg
clc
pop
jge
stos
std
pop
mov
push
mov
pop
xor
fistl
sub
mov
into
cmpsb
stos
sahf
inc
push
mov
pop
mov
out
call
inc
xchg
std
gs
subl
cmc
repz
into
pop
jmp
mov
adc
dec
popa
mov
cwtl
fsubl
in
pushf
inc
movsb
xchg
ljmp
into
xchg
mov
fcompl
push
int
and
add
cmp
sbb
sub
inc
jle
push
jb
lahf
rolb
out
cmp
cmp
aaa
mov
fucomip
insl
popf
fcomps
and
sub
loope
in
arpl
sbbl
cltd
sahf
and
cmp
scas
clc
push
mov
insl
gs
mov
mov
je
pop
xchg
mov
lea
mov
add
lahf
loope
lods
xchg
sub
into
add
sub
push
mov
mov
xor
shl
sbb
outsb
push
into
push
cmpl
sub
lret
scas
nop
or
and
xchg
or
lcall
dec
bound
mov
jne
sti
and
xchg
and
pop
mov
adc
push
shrb
out
cmp
xchg
lcall
cmc
mov
mov
xchg
jmp
in
inc
int3
dec
cmc
fnstenv
xcrypt-cfb
cmpsl
out
pop
idiv
sub
add
das
push
ret
add
xor
stc
out
loop
or
js,pn
adc
rol
mov
test
rolb
clc
sbb
inc
mov
xor
inc
and
push
outsb
in
xchg
test
je
push
add
es
in
cltd
roll
push
add
enter
add
push
sti
psubsb
push
add
arpl
jmp
xor
xor
pop
add
push
adc
and
es
fstl
jge
jle
adc
bt
cli
lret
popf
xlat
shrl
stos
add
fcompl
sbb
test
cmp
xor
pop
jno
arpl
cli
jae
movsl
ret
in
cmp
inc
pop
and
jbe
mov
xchg
jmp
lods
lahf
push
pop
mov
popa
call
into
out
sti
int3
mov
add
dec
add
dec
jns
pop
popl
push
jae
sbb
leave
pop
jle
hlt
stos
gs
movsl
ds
mov
lds
in
inc
rclb
jmp
inc
lds
jg
pushf
mov
jmp
bts
adc
test
dec
mov
push
jbe
imul
imul
cmp
fisubrl
dec
sub
xchg
lods
andb
shrb
aaa
and
pop
mov
mov
jne
xor
inc
adcl
ret
outsl
mov
push
in
rcr
pop
or
sbb
sti
mov
hlt
jl
push
stc
push
dec
repz
data16
out
das
in
in
pop
jge
fistps
in
loopne
dec
bound
xchg
jne
cmpsb
rcl
inc
jb
pop
push
pop
pop
scas
cs
add
xlat
enter
cmc
sbb
movsb
das
push
sub
mov
sub
out
ret
loop
jnp
cmp
shll
int
scas
and
in
mov
stc
ret
pop
popf
test
sub
sub
imul
lods
mov
xchg
sub
aam
xor
and
in
sub
movsl
xchg
adc
xlat
xchg
sub
rcl
push
push
xor
in
rolb
xchg
aad
sbb
adc
repnz
jb
int
repnz
xor
inc
pop
in
in
ret
je
neg
cs
mov
in
aad
test
ss
out
sub
inc
data16
popa
in
and
inc
or
xor
pop
mov
cmp
bts
aaa
mov
cmpsb
cmpsl
mov
add
pop
clc
loop
jmp
lds
ret
inc
in
sti
pusha
mov
jae
mov
xlat
leave
outsw
ret
or
lock
and
sbb
jno
cltd
dec
leave
aaa
sub
dec
aas
loope
jnp
scas
pop
jmp
loop
les
dec
fcomps
cmc
icebp
js
or
jne
inc
add
cmp
jmp
push
adc
cbtw
mov
in
ljmp
mov
adc
outsb
mov
push
out
push
xchg
xor
rcll
mov
dec
movsl
jmp
lock
scas
push
adc
cmpb
ret
mov
loopne
cld
cli
push
fadd
adc
jle
mov
inc
lea
punpckhwd
xor
xchg
loope
fcomps
xchg
hlt
lahf
out
popf
jecxz
pop
mov
sbb
adc
hlt
or
xchg
jno
push
and
and
jb
test
repnz
xor
jg
ret
mov
pop
pop
cmpb
imul
fisubrs
and
xor
loopne,pt
pop
jne
pop
dec
pushf
mov
xchg
roll
test
mov
aam
rcl
xor
add
adcw
inc
loope
hlt
shrb
adc
push
mov
cmpsb
arpl
subl
js
adc
fwait
outsb
mov
xlat
jno
sbb
lcall
into
push
cltd
lds
push
mov
lcall
arpl
push
mov
xlat
push
pusha
push
aad
movsb
movsl
or
hlt
mov
loope
sub
dec
mov
test
and
jg
add
cli
jo
push
jle
mov
push
push
add
jbe
mov
aam
sbb
cmp
jne
add
into
ljmp
popf
call
sub
adc
sub
sbb
inc
ss
call
cltd
outsl
repz
jecxz
xchg
out
sarb
cmp
mov
push
xor
xor
xchg
out
jns,pn
dec
sub
or
leave
add
jae
mov
daa
adc
xor
xor
add
adc
cld
jge
jae
mov
inc
push
aam
mov
stos
and
mov
inc
fdivl
mov
xchg
cmp
dec
adc
mov
and
call
rol
jl
push
sbb
add
mov
jno
cld
stc
xchg
pushw
es
jp
mov
inc
bnd
fs
cmp
std
xor
cld
ljmp
stos
adc
loopne
imul
lret
mov
ja
into
adc
xor
int3
pop
ret
push
sbb
pop
nop
repnz
inc
sbb
jle
pop
cwtl
xlat
or
scas
mov
popa
push
pop
mov
xchg
cmp
sbb
mov
jae
xor
into
sub
jle
mov
mov
das
and
lret
inc
insb
int
fwait
rorl
sbb
mov
ret
mov
sbb
sub
je
mov
subb
std
outsl
mov
out
inc
stos
lea
cmc
out
sarb
loope
mov
fcmovne
cmp
and
pop
jge
jno
lds
popa
aaa
lds
testl
mov
scas
mov
nop
scas
fsts
clc
and
rolb
jl
jle
xorl
out
xorb
cmpb
pop
pop
jge
pop
cld
adc
lcall
movsb
xchg
gs
out
sbb
and
adc
leave
cltd
stc
je
ljmp
iret
daa
out
xor
outsb
outsl
jge
sbb
mov
icebp
mov
mov
sbb
fnstsw
es
or
mov
add
jl
movb
cmpsb
mov
imul
aaa
cs
or
clc
ds
lret
dec
xor
fists
and
push
and
leave
adcl
jmp
dec
mov
sahf
scas
pusha
out
lcall
mov
jne
movsl
mov
pushf
jo
xchg
xor
sub
outsl
jnp
mov
xchg
mov
pushw
clc
addr16
inc
and
adc
push
mov
aas
dec
imul
les
dec
cwtl
xor
jp
sbb
andl
data16
std
adc
fidivs
xchg
push
adc
jl
xchg
pop
xchg
cmc
dec
ret
test
push
push
xchg
dec
push
clc
add
dec
xor
cmc
pushf
sub
cwtl
lret
jae
mov
nop
je
jge
popa
in
mov
sbb
adc
push
jl
arpl
add
fnsave
cmp
mov
mov
rcr
fucom
mov
cld
out
call
sbb
loope
fwait
push
add
dec
xchg
xor
xor
mov
jae
fwait
movsb
cmp
pop
or
jl
popa
notb
sub
std
push
xchg
in
mov
aad
push
fdivl
adc
pop
inc
cmp
std
loop
sti
fbstp
aas
add
and
dec
xchg
stos
dec
loop
das
jo
pop
xchg
jno
popf
jecxz
popf
push
leave
jb
mov
xor
lds
dec
xor
jmp
pop
jae
in
pop
sub
cmp
jle
mov
sbb
test
mov
dec
mov
push
sahf
cmp
sbb
out
jg
imul
add
lret
cmc
pop
jp
adc
mov
mov
mov
sbbb
cmpsb
fs
inc
imul
leave
popf
mov
fildll
xchg
test
cmp
and
aad
jl
adc
xchg
dec
adc
arpl
fmull
push
adc
pushf
out
cmp
daa
pop
insl
xchg
pop
sbb
push
jo
adc
xor
xchg
lea
imul
or
popf
xchg
imul
add
shlb
and
ret
inc
pop
pop
scas
stos
jae
cmp
in
xchg
into
xchg
add
in
push
adc
fisubrs
jb
pop
in
mov
adc
sbb
cwtl
mov
jno
push
mov
pop
shrb
sbbl
fisttps
or
lock
xchg
xor
dec
fstpl
inc
les
xor
test
dec
addl
cmp
jo
iret
testb
movsl
mov
outsl
pop
pop
ss
ret
mov
mov
js
add
shrl
sub
cli
push
stc
xor
xchg
pop
or
into
nop
or
jbe
or
sbb
imulb
fimuls
loope
mov
push
or
or
outsl
hlt
in
and
mov
inc
xor
or
pop
stos
adc
xlat
aam
je
push
fisubrl
sbb
lcall
xor
test
xchg
int
dec
decl
adc
sbb
and
jno
adc
inc
cmp
xchg
lahf
pop
jmp
orl
jmp
add
jo
addr16
sbb
dec
lock
mov
arpl
icebp
cmp
push
mov
enter
dec
hlt
push
sbb
js
subl
pop
fisubrl
cmp
add
xchg
xor
pop
lcall
xorl
insl
test
mov
out
add
in
jno
push
or
sub
or
mov
push
jbe
mov
push
jl
ret
mov
cmp
adcb
add
loope
pop
push
iret
and
xorl
imul
push
fistpl
pop
fstl
dec
hlt
popl
dec
stos
mov
nop
or
mov
out
lock
jle
mov
imul
xorl
cmp
mov
xlat
out
cmp
cmp
mov
add
add
mov
push
repz
or
sbb
mov
mov
cltd
pop
ficompl
sub
push
jg
bound
inc
inc
sbb
push
out
pushl
mov
cmp
icebp
das
cs
test
jle
mov
mov
cmp
mov
xor
scas
ret
jle
add
dec
ror
fidivrs
mov
ljmp
jp
mov
jmp
or
cli
popf
cmp
iret
fildll
mov
jp
add
fstps
push
loopne
cmpl
mov
rcrl
push
fadd
loop
add
scas
inc
mov
pop
push
test
fcoms
ret
inc
test
lods
pop
and
mov
pop
pop
roll
les
sub
xor
imul
mov
adcb
mov
int
outsl
movsl
fistpl
test
push
xor
imul
fisubrl
sub
test
in
pop
dec
xchg
test
aas
test
and
test
fwait
xor
or
or
test
xchg
cmp
inc
pushf
pop
pop
orl
sbb
subb
lret
add
cld
jle
fistps
arpl
scas
clc
sbb
push
into
pusha
std
pop
mov
in
add
imul
and
shll
loopne
add
lods
or
xor
pop
dec
xlat
inc
or
sub
rclb
cmc
lods
aam
add
std
popa
xchg
adc
testb
test
push
popl
lock
out
es
sub
in
je
popa
ret
and
in
or
test
in
and
stc
fucomp
jge
jbe
pushf
fisttpll
adc
xchg
mov
xchg
push
in
ja
inc
adc
sahf
jl
and
adc
push
dec
sub
add
test
and
fdivl
jg
lds
mov
je
imul
dec
ljmp
adc
or
aas
aas
inc
int3
sbb
jbe
movsb
popa
mov
push
inc
int3
sbb
xchg
mov
popf
addb
mov
sub
rcrl
push
movsb
mov
outsb
inc
lcall
xchg
adc
adc
xchg
cli
rcr
dec
es
mov
xor
test
movsl
outsl
pop
loope
int3
mov
fcomps
mov
mov
xor
ljmp
add
and
jle
xor
push
mov
rcr
cmp
mov
aaa
loope
or
fstl
mov
sbb
inc
and
lret
int3
testb
add
imul
stc
mov
inc
push
or
imul
jl
std
pop
push
xorb
outsl
in
jno
popf
das
cld
rclb
stos
mov
inc
jge
push
xchg
es
xchg
fwait
sbb
outsl
lods
pop
insb
hlt
fidivl
icebp
jle
sbb
sub
out
iret
cltd
dec
cmp
lds
addb
pop
notl
mov
adc
inc
mov
cmp
push
cmp
lds
adc
dec
mov
das
shll
mov
push
mov
repz
idivb
cwtl
gs
aaa
lea
or
jp
mov
arpl
dec
insl
xchg
sti
out
test
mov
xchg
gs
in
and
enter
jbe
insb
mov
sbb
lcall
push
xlat
push
daa
push
xlat
pushf
mov
mov
sbb
mov
aam
push
or
pop
jp
add
and
scas
xchg
bound
gs
pop
aad
les
or
rcr
inc
ret
mov
iret
movsl
push
pop
jl
push
decl
out
mull
cmp
or
mov
dec
cmp
repz
mov
fldcw
sbb
push
enter
pop
orl
pop
cltd
sub
out
or
pop
notl
xor
xchg
incl
mov
mov
bswap
cwtl
test
into
cmp
jle
push
sub
cmp
or
sbb
in
fdivrp
out
int3
fmull
mov
jl
dec
jle
push
sub
cmp
or
sbb
in
fdivrp
out
int3
fmull
mov
jb
push
jle
push
sub
push
or
sbb
in
fdivrp
out
int3
aad
test
mov
dec
mov
outsb
test
sbb
sub
cmp
mov
fmul
adc
push
inc
int3
stos
stc
aam
les
inc
in
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
enter
call
push
imull
push
mov
dec
nop
pop
into
push
sahf
sbb
enter
call
push
cwtl
push
test
mov
into
push
repnz
rcrl
dec
lock
outsb
xchg
push
orb
ds
in
aaa
mov
fnstenv
frstor
push
mov
ds
or
jg
into
cmp
and
lock
daa
nop
and
push
cwtl
mov
stos
jno
xchg
jmp
mov
or
mov
and
sbb
push
and
js
pop
mov
mov
sub
cmp
leave
sbb
push
push
fdivrl
ja
cltd
xorps
ret
and
pop
jp
push
negl
cmp
gs
ja
addb
and
ljmp
sub
fstpt
ret
scas
outsb
pop
ja,pn
lcall
iret
aad
adc
sahf
dec
mov
rorl
clc
outsb
lahf
push
mov
test
mov
into
jo
popa
out
adc
cmp
movsb
pop
mov
outsb
sti
jnp
addr16
mov
iret
sbb
jge
pop
push
loopne
cmp
outsb
in
cwtl
inc
test
jmp
or
cmp
pop
call
mov
test
or
xor
cs
ficomps
push
sahf
sbb
enter
call
push
cwtl
push
test
mov
into
push
sahf
sbb
enter
push
xchg
mov
mov
insb
imul
gs
inc
dec
or
add
mov
sbb
repnz
add
cli
sar
insl
mov
arpl
adc
je
cmc
dec
loope
scas
cmp
or
sbb
or
mov
cmpsl
xor
clc
and
push
inc
cmpl
mov
jecxz
and
push
loopne
dec
xchg
mov
jns
out
cmp
xor
dec
into
mov
test
popf
cmc
xchg
jne
mov
adc
jmp
jns
in
sahf
dec
adc
mov
cli
outsb
lcall
rcr
or
jge
rcrb
dec
cmp
out
mov
xlat
push
not
fimull
xchg
mov
std
pop
sarb
test
dec
inc
push
sarb
mov
jge
cli
test
cmp
xchg
fsubrl
popa
mov
add
push
rcl
insl
mov
push
push
add
and
insl
cmpsl
lea
outsb
mov
aam
adc
or
cld
or
mulb
loop
stos
int
sub
dec
clc
cmp
iret
and
mov
test
add
dec
divl
test
mov
cmp
xor
inc
push
jno
shl
pop
cmc
repnz
adc
xlat
nop
loope
testb
pop
filds
xchg
dec
mov
out
mov
push
push
out
jae
xor
imul
xor
sub
maxps
or
fildl
xchg
push
push
xchg
cmp
aas
ds
dec
int3
cmp
lea
fs
jno
daa
pop
adc
leave
ret
add
out
fsubl
mov
or
pop
xchg
xchg
pop
fildll
nop
test
bound
ss
mov
test
call
fildll
cwtl
push
sbb
or
and
sub
test
adc
add
lods
daa
jne
xchg
jnp
add
add
sarl
add
xchg
dec
cltd
je
fldl
push
inc
jle
pushf
ret
lods
les
shrl
xor
dec
loope
mov
dec
push
test
in
cmpsl
nop
nop
outsb
inc
lods
xlat
xor
mov
fs
cwtl
sbb
jmp
insb
jge
push
mov
sub
push
mov
stc
das
jle
sub
push
adc
add
or
push
adc
cmp
inc
jbe
fcmovu
mov
bound
fld
adc
ss
pop
sub
mov
aas
aas
mov
dec
pop
push
int3
imul
rorb
sahf
or
sbb
stc
xchg
lcall
mov
shl
adc
inc
adc
pop
mov
mov
test
into
cmp
jne
adc
pop
sbb
and
mov
jle
out
cmp
and
mov
je
pusha
or
push
cmpsl
scas
das
out
test
stc
mov
jl
aas
inc
leave
add
rcll
sbb
loope
pop
mov
loope
add
sbb
dec
xchg
adcb
cmovo
or
out
into
xor
hlt
test
xor
daa
imul
cmp
ja
inc
push
sbb
push
mov
sahf
pop
xchg
or
sbb
int
jno
mov
jl
fs
add
and
push
gs
aaa
lret
ja
stc
pop
or
xchg
jmp
pusha
or
xor
js
sbb
pop
repnz
in
mov
inc
insl
xor
bound
dec
ljmp
mov
or
nop
pop
push
fldcw
loopne
xchg
out
test
lods
mull
cmc
and
out
inc
rclb
pop
sbb
sbb
lret
add
mov
enter
mov
loop
aaa
mov
or
ret
push
cli
pop
loop
pusha
mov
dec
in
mov
dec
dec
xor
and
xor
roll
push
mov
and
xchg
mov
push
inc
mov
pop
ja
add
push
cwtl
scas
cmp
scas
es
push
mov
jg
adc
jp
jl
xchg
dec
fsubs
ds
mov
or
stos
mov
xor
or
int3
test
pop
push
or
ret
push
xchg
dec
pop
int3
cmp
loop
push
mov
insl
call
jg
or
inc
arpl
mov
dec
mov
mov
hlt
pop
push
mov
outsl
decb
xchg
inc
fwait
jno
fs
dec
xor
lcall
inc
sub
std
xlat
stc
test
loop
gs
es
stc
addr16
imul
xor
pushf
push
clc
ds
and
xor
sub
sub
sbb
or
lods
cld
mov
jmp
jl
jmp
sub
into
and
xchg
jb
in
ret
fbstp
scas
dec
add
cmc
out
push
push
cli
out
fisubrl
out
outsb
mov
test
push
and
loopne
in
jnp
cmp
lret
loopne
xor
fimull
and
movsl
mov
mov
xor
xor
cmp
mov
push
and
std
jae
dec
and
sahf
std
fidivrs
push
cli
sahf
mov
repz
push
test
scas
push
fimuls
and
ds
repnz
dec
jne
fldl
ss
fstpt
or
pop
nop
jmp
mov
inc
mov
jo
das
test
inc
imul
popf
hlt
std
dec
aam
fldcw
lea
dec
jecxz
xchg
lods
xlat
std
pop
cld
sbb
call
pop
pop
inc
inc
adc
cmc
push
dec
mov
push
arpl
xor
sarl
rorl
push
outsb
fnstenv
test
push
jne
nop
cmp
xchg
ss
xchg
nop
xor
jp
lcall
inc
and
shufps
jle
mov
sbbl
push
pop
fstl
mov
scas
sub
out
xchg
adc
rorb
adc
aam
movsl
cmpsb
scas
push
and
mov
fiadds
cli
mov
xor
mov
lret
gs
jne
mov
clc
push
lret
cmp
mov
push
dec
xchg
adc
sbb
sbb
rolb
das
int
lods
outsl
dec
dec
in
out
adc
rcrl
lea
cwtl
imul
push
sbb
xchg
icebp
repnz
sbbl
and
mov
pop
xchg
inc
or
xor
ret
out
and
movsl
xor
jge
arpl
fcoms
mov
cmp
out
nop
mov
mov
xchg
add
and
sti
jecxz
sub
sub
sub
jnp
loop
scas
repnz
jns
push
cmp
iret
jbe
fistpll
push
sbb
dec
popa
shrw
fldcw
gs
rorb
out
push
clc
or
ror
xorl
or
pop
enter
xchg
cli
add
test
sbb
int
jecxz
in
outsl
adc
notb
in
out
or
outsb
push
mov
mov
jecxz
sbbb
cmc
lret
and
xlat
cwtl
negl
shrl
outsl
test
xor
and
mov
ja,pn
xsha1
xor
into
insb
mov
sbb
ds
jne
cmpsb
test
lods
out
mov
imul
out
jns
pusha
cmpsb
push
inc
gs
pop
scas
mov
dec
lret
addr16
sbb
imul
std
xchg
popf
sbb
leave
pop
test
stos
sbb
icebp
mov
lret
outsb
or
mov
test
dec
ljmp
dec
push
scas
imul
ret
loope
popa
and
arpl
pop
mov
push
lods
add
xorl
scas
push
repnz
and
push
add
fcoms
mov
adc
inc
inc
push
mov
imul
movb
scas
sub
mov
clc
cmp
and
mov
icebp
jbe
dec
jbe
sub
sbb
aas
pop
ds
out
sbb
ret
das
push
pop
lods
shll
lds
stc
jae
adc
mov
push
xor
movsl
clc
jb
lock
ret
das
cmp
jp
lret
add
int3
cmp
push
cmp
xchg
sbb
mov
out
test
mov
mov
cwtl
ljmp
outsl
fisubrs
inc
xchg
sbb
mov
js
aam
pop
and
pop
push
jle
or
test
push
mov
rolb
pop
pusha
jb
outsb
nop
in
sarb
pop
sbb
addl
das
loope
daa
cmpsb
in
rcl
mov
mov
cmpsb
test
add
addl
xchg
stc
dec
adc
addr16
sbb
mov
test
stc
outsb
mov
stos
xchg
cmpsl
xchg
int3
and
jae
add
dec
stos
sub
mov
mov
push
inc
cmpsb
out
add
push
adc
lcall
pop
mov
xchg
pop
adc
inc
mov
mov
pusha
sub
xor
mov
dec
dec
pushf
mov
jmp
loope
and
or
and
les
mov
ljmp
outsb
in
test
xor
xchg
mov
out
repz
sub
sub
and
xchg
dec
mov
sahf
push
subb
mov
lret
dec
push
repnz
pop
and
cmp
std
stos
es
mov
mov
xchg
popf
sbb
decb
add
je
adc
add
scas
adc
das
popf
jmp
repz
nop
outsl
std
in
jns
xchg
mov
scas
sub
in
cli
adc
dec
clc
mov
inc
in
sub
mov
or
pop
cmp
jge
in
out
sbb
xchg
push
sahf
jae
imul
in
push
push
adc
add
js
mov
fninit
lahf
in
pop
sub
mov
mov
fcmovu
movsl
into
add
sub
pushf
pop
pop
pop
mov
aam
je
cltd
mov
sbb
fldcw
popf
mov
mov
leave
and
mov
fistpl
xchg
jbe
ja
jne
rorl
shrl
push
cmp
fldt
aam
lcall
ljmp
or
xor
push
fstpl
push
jb
sbb
scas
jnp
mulb
imul
sbb
les
loope
mov
xorb
inc
shlb
out
sahf
mov
shll
shlb
xchg
test
mov
cmp
movb
jecxz
mov
stc
add
test
or
pextrw
cmp
aam
mov
dec
pop
in
enter
ja
mov
jne
add
inc
sbb
das
ret
mov
outsb
pop
scas
test
mull
add
repnz
gs
and
and
push
aam
lahf
dec
xchg
mov
jno
call
das
stos
cmp
mov
enter
or
aaa
or
push
mov
sbb
stos
push
inc
or
fmul
mov
jb
jle
mov
sub
out
gs
int3
mov
push
adc
dec
lret
bound
jns,pn
arpl
push
lret
pop
xor
xchg
fucomi
jnp
pop
loope
mov
bound
push
cmpsb
adc
sar
xchg
xchg
cmp
in
mov
pop
pop
inc
popf
lret
rcrb
scas
stos
out
inc
hlt
add
ds
add
xor
ret
xor
lock
pushf
dec
arpl
mov
mov
pop
enter
ss
dec
out
lcall
pushf
fldcw
clc
pop
in
lock
shlb
inc
sbb
fidivs
hlt
aas
imul
push
mov
mov
and
inc
shlb
dec
adcl
mov
sub
rol
shlb
aam
movsb
dec
and
cmp
loop
imul
loope
sub
mov
xchg
mov
add
pop
test
rcl
daa
mov
loopne
mov
xor
icebp
sbb
aas
lods
or
mov
sbb
stos
and
leave
mov
push
mov
or
pop
mov
xchg
data16
jns
or
out
iret
ficomps
dec
adc
dec
mov
push
mov
movsl
xchg
pop
aad
or
fucomip
mov
mov
inc
mov
rolb
rorb
jnp
dec
nop
pop
inc
decb
pop
adc
lds
notl
out
mov
and
mov
xor
js
push
int
insb
loopne
and
in
inc
jg
test
jnp
mov
mov
mov
mov
mov
cmp
fildl
push
fcmovu
pushf
xchg
lcall
jg
xchg
and
fists
pop
sbb
dec
pop
pop
mov
pop
orb
sub
shll
inc
aas
daa
xchg
lds
int
sbb
jmp
xchg
repz
aam
lcall
cmp
cmpsl
xor
xor
daa
test
sbb
sahf
cmp
mov
insl
jmp
insb
lods
pushf
arpl
pop
and
sarb
test
pop
push
mov
js
sub
iret
leave
mov
inc
mov
or
push
sbb
cmpsb
sub
repz
subb
lahf
xor
add
push
repnz
in
leave
addl
dec
push
dec
cmp
fsub
jecxz
call
jne
lock
aam
pop
test
ret
sbb
xchg
pushf
jle
daa
jmp
imul
out
sub
sahf
outsb
out
mov
inc
and
jo
js
jge
sub
add
dec
sbb
daa
notl
sbb
xchg
jno
test
or
jp
xchg
xor
push
xor
jbe
pop
enter
push
adc
mov
sbb
fsubrs
adc
subb
inc
daa
push
fidivrl
jae
scas
nop
mov
xchg
fisttpl
test
mov
sahf
xchg
xor
jb
cltd
sti
pop
pop
in
mov
mov
mov
dec
cli
adc
lcall
dec
add
loope
pop
add
lret
aaa
repnz
cmp
clc
xor
popf
outsb
hlt
sbb
mov
outsl
push
push
xor
add
cmp
addr16
sub
xchg
mov
movb
cmp
cmp
jmp
jmp
movsb
or
cmc
cwtl
push
cmpsl
mov
dec
mov
stos
sub
push
sbb
jns
sub
les
add
xchg
orl
lcall
push
push
inc
xor
mov
psubq
outsl
mov
test
fyl2xp1
lock
rcr
loop
and
lea
sbb
insb
nop
mov
sub
jp
arpl
mov
enter
sti
add
cwtl
lods
inc
mov
pop
xor
add
and
sbb
xchg
in
pop
jg
dec
imulb
sbb
mov
iret
fwait
lret
or
clc
hlt
mov
dec
imul
push
and
pop
mov
and
lods
adc
not
or
pusha
icebp
int3
in
cwtl
outsb
and
repnz
aaa
shll
in
cmpsl
push
or
dec
pop
adc
addr16
xorb
sub
les
mov
scas
xchg
add
jmp
dec
mov
and
add
pop
ds
mov
rcrb
push
les
mov
xor
loop,pt
sub
or
mov
adc
js
sub
xor
sti
pop
test
shl
pusha
test
mov
movsb
sub
ficompl
cmpsb
cmp
subb
sub
pop
cmp
outsb
ss
jns
cltd
mov
leave
lcall
sbbb
mov
dec
pushf
dec
pop
cld
popa
lret
outsb
mov
fsubrl
les
dec
aaa
lcall
cltd
movsb
movsl
loope
xlat
cwtl
and
mov
jl
mov
mov
fbld
mov
lods
ds
sbb
inc
sbb
ja
add
xchg
pop
fldl
cs
sub
leave
mov
enter
xchg
adc
cld
and
pop
imul
and
sbb
cmpsb
mov
push
jle
xorl
fmull
and
ds
testb
jae
lods
shr
jmp
shll
pop
cmp
cli
dec
pop
cmp
iret
mov
movsl
bound
pop
out
scas
stc
add
out
movsb
pop
sub
jl
xor
add
js
je
push
mov
pop
mov
mov
outsb
pop
ja
adcl
and
and
and
mov
jbe
cmp
je
roll
insl
inc
and
cli
loopne
or
push
shlb
and
sbb
push
cli
daa
mov
xchg
subl
inc
cld
jg
pop
mov
and
rol
pop
ja
push
push
mov
or
push
mov
and
mov
add
and
jb
jno
mov
xchg
stos
lock
mov
mov
call
or
scas
sub
mov
scas
out
stc
inc
fadds
push
push
out
or
dec
in
push
shr
test
pusha
dec
xor
dec
repnz
push
push
movsb
add
jnp
push
shl
aas
push
in
enter
xor
in
pop
mov
insl
add
popa
negl
cmp
mov
pop
dec
test
cmc
jle
mov
add
xchg
imul
aam
jnp
mov
jecxz
xchg
or
pusha
popa
shr
xor
mov
mov
imul
or
rolb
mov
push
dec
add
data16
add
or
jne
mov
or
xchg
push
imul
ror
iret
ds
mov
dec
ja
out
sbb
repz
xor
lret
sbb
mov
fcoms
jne
jae
xchg
sbb
and
mov
jbe
ljmp
mov
sbb
jl
mov
imul
fsubp
push
and
sub
dec
mov
xchg
push
push
and
jp
mov
push
cmpsl
mov
aam
pop
aaa
dec
inc
and
pushf
add
mov
lock
shll
mov
aad
push
fidivrl
mov
outsl
mov
mov
inc
inc
jg
mov
aas
popa
push
mov
add
push
xchg
shrb
xchg
test
es
lods
inc
jbe
jbe
xchg
sub
sub
dec
lds
mov
push
ror
jbe
test
in
pop
enter
dec
mov
xchg
and
pushf
xor
out
lcall
dec
cs
jl
loope
daa
push
fxch
iret
adc
packsswb
mov
mov
daa
lret
je
pop
jno
out
lcall
xchg
popf
push
ljmp
dec
sarb
gs
dec
mov
jbe
popa
mov
inc
push
add
sub
sbb
enter
xchg
or
sbb
je
inc
and
inc
shlb
mov
jnp
jnp
mov
cmp
sti
rorl
jmp
sub
outsb
fs
scas
or
push
push
cld
in
dec
and
stos
jb
pushf
mulb
xchg
ret
sub
stc
das
andb
repnz
loopne
xchg
mov
mov
addb
inc
xchg
sbb
pop
add
jo
das
sbb
in
adc
xchg
das
divb
mov
ret
lods
mov
jp
xor
sub
dec
imul
adc
lock
push
xchg
add
mov
mov
enter
mov
mov
push
add
shr
ficoml
aam
adc
push
mov
stos
jmp
xchg
arpl
inc
xlat
xchg
or
mov
int3
stos
ljmp
adc
push
adc
pop
ret
and
test
bound
mov
in
test
xor
lret
or
or
cltd
adc
fwait
aad
aam
es
mov
xchg
loopne
cltd
dec
mov
in
lock
leave
sub
cmc
cmp
aam
and
lcall
mov
pop
or
push
lock
scas
fisubl
pop
les
mov
sti
xor
cmp
xor
mov
iret
mov
add
out
stc
scas
pop
push
shlb
sub
ret
mov
adc
mov
xchg
shlb
push
sahf
rcll
fisttpll
pop
mov
dec
jg
test
push
pop
xor
inc
cltd
jmp
bound
out
jns
mov
xchg
gs
daa
imul
iret
fidivs
fisubs
idivb
popf
jb
sahf
pop
jnp
and
shl
sub
xor
jbe
add
cmpsl
mov
mov
and
scas
fcoms
loop
clc
outsb
mov
cwtl
push
test
mov
into
push
sahf
sbb
enter
call
push
cwtl
push
test
mov
into
push
sahf
sbb
enter
call
push
cwtl
push
test
mov
into
push
sahf
sbb
enter
jmp
push
cwtl
push
sub
cmp
mov
cmpsl
fs
cltd
jg
nop
jno
inc
push
xchg
lea
mov
fwait
mov
add
xor
dec
inc
sbb
xchg
lea
mov
cmc
in
in
adc
sub
inc
pop
jne
gs
lea
mov
cmc
in
in
adc
pop
and
cmp
or
jge
loope
mov
leave
push
sbb
dec
sbb
out
sbb
dec
mov
dec
add
fldl
pop
inc
sub
sbb
call
sub
inc
and
add
pop
rcl
pop
lcall
adc
sub
std
add
xchg
gs
jb
pushf
fildll
int
add
lods
cwtl
orb
rorl
stos
push
add
pop
push
gs
push
jnp
inc
mov
lds
jbe
mov
sbb
rcrl
push
test
sub
jbe
cs
fidivrs
in
inc
repnz
or
sub
test
pop
lea
mov
cmc
in
in
adc
sub
inc
pop
jne
gs
loopne
dec
fsubr
int3
sti
aad
mov
xchg
mov
lea
inc
pop
push
push
and
push
out
and
lock
loopne
shrb
xor
xorb
aaa
jnp
push
push
and
xor
sbb
adc
fldl
leave
cltd
mov
in
adc
sub
inc
pop
jne
gs
lea
mov
cmc
in
in
adc
sub
inc
pop
jne
gs
lea
insb
sub
lret
push
mov
xor
ss
jnp
arpl
movsl
pushf
outsb
inc
aad
mov
fstl
lods
addr16
popf
cmp
outsb
jg
nop
xchg
add
aad
repz
movsb
lea
inc
fistpll
cmp
nop
mov
sbb
jo
inc
outsl
pop
cmpsb
mov
pop
mov
pop
bound
or
addl
sbb
sub
sub
sarb
notl
cmp
test
fisttpl
push
insl
popa
in
mov
lahf
popa
sbb
inc
xchg
bound
pushf
fs
adc
testl
dec
loope
or
push
inc
adc
or
mov
lds
jno
cmp
add
mov
xorl
push
repnz
imul
add
add
sar
inc
test
sub
jg,pn
out
scas
mov
adc
jae
lcall
into
add
aas
or
fsubs
mov
in
ret
cmpsl
push
mov
adc
xor
imul
adc
aad
rcr
das
or
out
pop
sbb
gs
add
mov
xlat
push
imul
pop
sbb
inc
movsb
sub
stos
add
lock
data16
sbb
pop
lods
jmp
pop
dec
jo
data16
loop
aas
adc
jp
aad
sbb
xchg
es
sahf
sbb
into
mov
lahf
adc
jge
loop
testb
jg
sahf
mov
xlat
ja
aaa
ret
xchg
inc
fldenv
push
mov
repz
mov
test
mov
test
das
leave
inc
xor
out
inc
scas
or
add
push
jae
fsubl
dec
jo
mov
jecxz
push
and
push
add
sub
scas
pop
mov
sub
jne
xchg
ljmp
mov
add
in
mov
cmp
adc
out
sub
mov
cltd
imul
divl
fisubs
pop
cwtl
jge
mov
nop
pop
test
sub
out
rorl
jmp
hlt
bound
push
std
jnp
dec
mov
push
sbb
or
adc
and
clc
bound
inc
roll
decb
push
jmp
pop
pop
sub
stos
aas
push
push
gs
imull
ret
inc
test
adc
adc
jmp
nop
xor
adc
sub
insb
xor
sub
add
mov
xor
cld
out
sbb
fldt
aad
sbb
scas
push
in
mov
into
aam
js
sbb
addr16
mov
mov
xchg
andl
test
scas
cld
in
mov
pop
mov
lahf
jge
mov
les
je
sahf
js
aam
fistpl
sub
inc
sbb
mov
es
mov
movsb
sub
cwtl
int
adc
push
jbe
scas
out
into
jp
and
mov
pop
out
mov
add
je
enter
in
cmp
mov
inc
push
jae
xor
out
pop
jge
mov
hlt
loopne
sbb
mov
int
and
in
leave
shrl
xchg
int
mov
sbb
gs
aas
xor
je
push
pusha
dec
inc
popa
test
and
pop
xchg
inc
mov
subps
cli
sub
mov
jge
dec
mov
mov
out
loop
mov
rol
imul
lahf
inc
and
push
rcr
int3
cmpb
lahf
loop
pusha
mov
divb
pop
popf
jecxz
int3
pop
push
pusha
sbb
pop
and
jmp
adc
push
lods
ffreep
vpshufd
in
loop
jg
adcb
mov
scas
add
iret
jns
ficomps
adc
nop
ja
movsl
test
xchg
pop
or
sub
icebp
mov
in
sbb
jg
push
add
lods
shlb
aad
sub
and
cmpsb
fidivrl
test
sub
xchg
inc
xchg
xor
cltd
std
mov
jle
arpl
dec
rolb
add
dec
push
pop
jge
lods
cmpsl
fs
jne
repnz
cmp
jmp
pop
push
imull
pop
push
xchg
cli
leave
stos
int3
std
sbb
rorl
inc
leave
push
cltd
pop
push
shrl
or
mov
mov
fisubs
push
mov
mov
mov
sbb
pop
popa
mov
dec
rcl
sti
jp
aas
dec
add
push
mov
push
lock
call
into
cmpsb
dec
mov
iret
test
int
mov
push
cmp
testl
pop
xor
je
in
mov
mov
dec
into
mov
or
xchg
das
pop
fmul
mov
inc
fisttpl
inc
sub
dec
jl
cmc
adc
sub
inc
mov
es
jae
pusha
cmp
daa
mov
jnp
or
mov
jecxz
dec
loopne
enter
mov
out
imul
cmpl
out
adc
or
movsl
and
inc
pop
jo
dec
into
pop
mov
int3
or
popa
test
mov
stos
or
not
pushf
scas
add
add
mov
outsb
sarl
dec
movsl
jmp
test
fucomi
xor
test
add
and
cld
mov
or
mov
int3
sub
dec
pusha
sbbl
add
hlt
loopne
push
dec
fldt
fdiv
ret
mov
push
or
mov
faddl
or
test
or
xor
jne
add
ds
inc
cmp
sbb
lods
cli
sahf
and
je
jmp
mov
xor
dec
mov
fisubrl
hlt
sbb
daa
xor
stos
push
mov
mov
arpl
int3
jno
mov
fsubl
stos
xchg
int3
mov
pop
push
aad
push
pop
rorl
lock
or
inc
psadbw
popf
sub
mov
out
and
and
xlat
sbb
ret
mov
dec
repz
mov
rolb
add
jl
xor
movl
cmp
and
movsl
out
leave
sub
add
outsb
xor
cmpl
jb
xchg
into
cmp
inc
jb
lods
mov
mov
mov
lcall
pop
inc
push
jle
fstps
jo
test
cmp
test
popf
test
lcall
add
outsl
adc
or
in
call
orb
xchg
outsl
xor
mov
ljmp
in
jns
out
pusha
stc
and
xchg
andl
testl
mov
pop
push
pop
insb
and
mov
lret
xchg
xchg
scas
out
jmp
ret
inc
or
dec
cmp
iret
repnz
cmp
addr16
clc
xchg
pop
push
lcall
stos
notl
test
fisubrl
in
sti
inc
mov
add
outsb
shlb
mov
push
push
cmp
call
ds
xchg
xchg
fwait
mov
dec
popa
and
pusha
inc
mov
scas
loope
xor
push
or
imul
xchg
ds
dec
xchg
pushl
cmp
push
xor
js
add
sub
xor
cmp
mov
cli
sbb
scas
sbb
dec
loope
jle
mov
push
rorl
sbb
dec
mov
xor
cltd
inc
int3
repz
std
mov
into
sub
cmp
cmp
pop
out
cmp
stos
mov
sahf
std
test
xor
adcb
cmc
movsl
in
testb
xchg
lock
push
dec
mov
std
in
or
sbb
cld
mov
jp
aam
dec
add
inc
dec
adc
push
arpl
xchg
ja
movsb
pop
les
fists
pusha
fcoml
imul
leave
pop
imul
push
sub
lea
leave
sbb
imul
je
lcall
mov
andb
leave
stos
mov
outsl
cmc
dec
popa
sub
push
dec
mov
scas
dec
mov
push
jnp
push
mov
mov
pop
outsb
xchg
mov
mov
hlt
push
jns
daa
adc
mov
sbb
cmpsl
int
cmp
jp
dec
pop
mov
push
leave
add
mov
jle
out
and
xchg
pop
ss
sub
mov
push
sub
inc
and
dec
cltd
test
nop
mov
xor
outsl
loopne
data16
daa
repnz
loope
dec
fwait
mov
rcrb
lahf
fdivl
push
paddusw
fs
sarb
les
out
jmp
pop
inc
movsb
cltd
add
dec
or
and
les
cli
xlat
jge
sbb
loope
arpl
pop
mov
out
repnz
push
jp
into
pop
es
push
sarb
sub
popa
test
shr
das
incb
sbb
pop
pushf
out
push
adc
lock
xchg
sub
stc
lret
xchg
idivb
dec
inc
std
add
aam
dec
in
call
and
pop
popa
int
mov
ds
ss
xor
insb
das
rclb
sub
cwtl
mov
jmp
arpl
daa
cmp
cmp
xor
scas
outsb
shl
xlat
sbb
dec
pop
hlt
cmpsb
push
and
and
mov
mov
outsl
inc
inc
arpl
out
mov
daa
fidivs
lret
jne
sub
mov
push
cmp
mov
insb
scas
pop
cmpb
rcrl
popf
int
fadd
rcll
cli
pop
inc
aam
xor
mov
push
mov
stos
pop
or
jmp
out
add
imul
fimuls
jo
pop
mov
dec
shrl
andb
inc
int
aas
dec
clc
mull
enter
lods
pop
test
dec
xchg
repz
mov
movsl
ljmp
jle
imul
xor
dec
or
sub
mov
push
bound
icebp
push
pop
fucomi
adc
add
pusha
cmp
mov
mov
inc
inc
cmpsb
mov
jle
mov
xchg
ds
pop
pop
or
arpl
xor
dec
push
mov
mov
cld
cld
jno
cli
mov
fmull
out
fwait
dec
mov
push
inc
xchg
push
sub
xor
or
mov
xchg
mov
add
and
testb
mov
das
mov
insb
popa
shlb
cmc
gs
in
imul
enter
popl
and
int3
pop
push
cltd
or
or
popa
xchg
add
sbb
pop
mov
push
xchg
call
lahf
lds
fwait
rcll
dec
dec
sbb
hlt
cltd
adc
cmp
xor
hlt
in
roll
cmp
sub
push
xchg
add
rclb
push
std
test
sub
jb
and
icebp
or
cwtl
jl
dec
negl
fcomp
xchg
cltd
xchg
cs
mov
icebp
pop
mov
repnz
mov
test
lods
inc
push
popa
pop
addl
cmpsb
pop
inc
xorps
ljmp
aas
loop
sub
testl
adc
lods
loop
xchg
loopw
stos
xor
movsb
or
andl
loopne
xchg
stos
jno
adc
adc
dec
jns
push
and
mov
shlb
cmp
jp
js
clc
stos
cmp
and
js
into
or
jle
dec
adc
push
mov
daa
cwtl
nop
inc
mulb
repz
test
testb
adc
iret
cld
int
sbb
sub
jg
sub
stos
out
push
ror
mov
lahf
test
mov
call
adcl
in
gs
loop
dec
movsl
dec
ret
xor
xor
adc
test
popa
xchg
mov
arpl
lock
inc
jno
out
pusha
push
xor
sub
adc
sbb
jmp
inc
in
sbb
aaa
outsl
xchg
cmc
inc
cmp
inc
mov
int3
mov
dec
xchg
aam
jo
ret
mov
xor
xor
jle
mov
jne
mov
jns
or
add
negl
jb
or
jmp
sar
addr16
xchg
xchg
les
pop
pop
gs
and
push
push
lea
sbb
jb
das
and
sbb
sub
pusha
jno
pop
jg
mov
inc
out
lods
mov
stc
push
mov
je
xlat
in
sahf
insb
xchg
mov
jno
into
xor
mov
xchg
lcall
into
dec
push
mov
in
inc
mov
repz
push
out
imul
push
push
gs
inc
jno
sub
pop
inc
lcall
pop
cs
cmp
sbb
lret
xchg
fistps
iret
ljmp
xor
gs
mov
dec
lock
lods
fwait
xor
addl
mov
mov
stos
jno
fildll
rorl
icebp
push
ljmp
enter
adc
out
insl
add
xor
jae
movsl
xor
lcall
outsb
dec
arpl
pop
cmp
je
dec
mov
sbb
jb
lret
push
shl
das
jle
std
scas
jno
fidivrs
iret
jmp
fcmovne
stos
inc
gs
cs
in
or
add
sbb
in
mov
push
aam
out
iret
sub
in
les
stos
outsl
and
xor
mov
stos
xor
lret
stos
mov
ret
push
loope
sbb
outsb
mov
test
adc
push
xchg
add
add
dec
ds
jl
and
lods
icebp
add
sub
outsb
stc
imul
sub
add
adc
sbb
lret
ss
cli
das
dec
inc
inc
pushf
and
test
clc
ret
jle
mov
or
push
push
jne
jne
in
loopne
inc
fidivrs
xchg
stos
xchg
or
loopne
test
movsb
les
int3
scas
into
es
sbb
inc
sbb
popf
xlat
mov
jae
cmpsl
jno
in
dec
lods
stc
ljmp
les
sahf
ret
jno
or
push
test
fs
mov
ret
dec
push
mov
lea
pop
and
pop
dec
or
loopne
nop
add
cmp
sub
movsb
jns
in
ss
pop
push
or
repnz
inc
jb
in
jg
jle
icebp
xor
or
iret
scas
dec
lea
sub
aas
aas
dec
push
xchg
cwtl
pushf
inc
stos
push
jno
insl
jo
subl
push
je
jg
ja,pt
dec
mov
out
lea
cld
mov
push
adc
in
inc
inc
add
sbb
stos
push
push
cwtl
sbb
inc
xor
mov
jecxz
push
xchg
ror
out
lds
cmpsb
pop
inc
aam
push
sub
ror
imul
mov
call
aad
int
addr16
inc
loop
mov
push
outsb
sbb
add
ffree
into
pop
fcoms
not
mov
pop
pop
decb
dec
push
shll
push
push
je
roll
into
outsb
xor
cli
scas
mov
push
mov
push
xor
ljmp
xchg
rcrb
jns
push
aaa
cltd
cltd
dec
lods
lahf
dec
xor
mov
scas
xor
mov
enter
es
out
orl
jecxz
jno
lret
xchg
std
jg
aam
cmp
stc
je
mov
mov
xchg
insl
inc
shl
cmc
jo
sahf
jecxz
sar
mov
mov
loope
dec
aas
repnz
mov
cwtl
pop
enter
or
out
movsb
xor
or
and
pop
int
loopne
test
jg
pop
inc
sbbl
ret
xchg
xchg
cli
add
pop
dec
xchg
in
shr
fcmovnb
cli
fwait
inc
inc
je
xorl
ror
dec
push
xor
pop
rclb
xchg
shl
test
fsubrl
es
cmp
cld
das
or
add
shll
jo
sbb
cmp
js
test
push
sub
jg
jae
dec
xor
sahf
xchg
mov
jae
cwtl
adc
arpl
add
lea
imul
lea
sbb
scas
sti
lds
ds
xchg
jle
orl
dec
popa
or
push
pusha
mov
stos
std
jg
jmp
mov
nop
mov
adc
sub
mov
add
sub
xchg
mov
mov
xchg
inc
cwtl
jno
cld
loopne
dec
stos
les
rcrl
adc
cmp
mov
cli
mov
ds
jl
push
xchg
cmp
add
xchg
les
mov
xchg
xchg
mov
inc
pop
inc
rclb
shlb
orb
fwait
pop
ljmp
cmovno
nop
jle
push
dec
fwait
xor
lods
cli
lret
mov
call
in
xchg
add
pusha
and
sbb
sti
push
jg
xchg
sbb
push
push
or
mov
addr16
fldl
arpl
scas
out
iret
xlat
popf
cmpxchg
aas
sbb
cld
push
jbe
fdivl
enter
xlat
test
or
mov
jo
lods
icebp
pop
mov
data16
mov
cmp
lods
pop
sub
rcll
or
enter
sahf
pop
mov
rorb
push
gs
add
or
mov
sub
adc
adc
push
adc
dec
mov
into
lea
mov
or
adc
or
js
jecxz
and
imul
daa
cltd
sub
or
xchg
ret
fistps
push
push
popf
ljmp
ret
jo
pop
xor
xor
mov
and
sub
mov
out
push
lock
mov
inc
or
mov
cmpsl
shll
dec
ds
repz
pop
ds
lret
dec
or
lds
ds
mov
add
aam
and
faddl
arpl
xor
xor
sub
mov
sbb
lcall
mov
cmpl
mov
add
divb
orl
jg
xchg
push
xchg
pop
les
or
cmp
inc
xorl
ror
outsl
loop
rolb
and
fidivs
scas
push
out
fnsave
ret
cli
xchg
add
mov
test
pop
imul
ret
mov
sahf
stos
dec
in
shrb
add
lsl
xchg
adc
dec
mov
xchg
adc
rol
jns
or
or
or
insl
enter
jge
mov
dec
lods
fdivr
sub
push
clc
adc
add
outsl
mov
ret
inc
lods
mov
jnp
and
and
ret
out
mov
loop
aad
clc
cmp
lahf
fs
std
mov
icebp
out
and
dec
cmpb
pop
inc
aas
jno
mov
in
pop
fs
mov
lea
cmp
inc
mov
sti
aam
inc
aad
into
add
mov
push
lcall
cld
mov
jmp
and
sti
out
pushf
jne
fcomps
mov
jo
ja
cmp
bound
or
in
mov
fwait
xchg
xor
mov
push
testb
rcr
inc
push
and
xchg
mov
mov
repnz
mov
dec
or
sbb
cmpsb
mov
fs
es
dec
adc
into
xor
push
mov
pop
xor
outsb
cmp
lcall
add
sarb
sbb
fbld
fidivrl
nop
hlt
cmpsb
mov
cmp
cmp
sbb
sbb
je
add
mov
mov
movsl
in
lods
das
push
out
or
pop
push
cltd
movsb
test
mov
addl
popf
sub
pop
cltd
sbb
add
fsts
je
add
outsl
out
cmp
xchg
insb
and
jmp
xchg
and
out
notb
addl
out
inc
jg
push
pop
andl
jmp
movsb
rclb
in
add
mov
inc
mov
mov
xchg
cli
loopne
xchg
xchg
in
ljmp
data16
mov
imul
pop
rclb
and
cwtd
fwait
lods
sbb
adc
mov
lods
dec
push
js
std
fucom
add
adc
push
inc
sbb
testl
out
and
mov
lret
fldcw
pop
mov
aaa
add
cmp
int
mov
adc
xchg
out
mov
mov
jle
insl
fcompl
lock
in
shrb
test
bound
outsb
xchg
leave
fld
pop
lahf
mov
enter
pop
sti
and
clc
cmp
cli
sti
enter
cmp
sub
call
popf
mov
movsl
mov
cmc
in
in
adc
sub
inc
pop
jne
gs
lea
mov
cmc
in
in
adc
sub
inc
pop
jne
gs
mov
mov
cmc
in
gs
adc
sub
inc
pop
jne
gs
lea
mov
cmc
insl
in
adc
sub
xor
adcb
xor
add
adc
subb
lcall
lock
sub
cmp
or
sbb
push
mulb
jo
subb
lcall
lock
mov
xor
inc
push
push
inc
pusha
movsb
jo
xorb
rcl
jmp
sarb
push
insb
jg
dec
lret
pop
jo
fwait
push
inc
addb
xchg
add
push
inc
ja
jnp
push
mov
jno
inc
imul
or
ljmp
das
cmp
lret
or
sub
aas
das
adc
inc
cmp
inc
jmp
add
aas
testb
pop
jle
adc
arpl
mov
ljmp
inc
push
adc
push
push
ljmp
addl
aas
out
shlb
and
aas
pusha
inc
jo
call
dec
mov
xchg
mov
clc
ljmp
mov
or
rcl
jne
xorb
pop
pop
sub
lret
xor
inc
push
jp
nop
jo
subb
mov
rolb
loopne
lock
js
cmp
xor
push
xor
aas
call
aam
mov
pushf
mov
outsl
push
jnp
imul
add
or
ror
std
in
fsubr
aad
mov
out
mov
jl
jge
pop
adc
push
push
jp
dec
jo
subb
lcall
lock
sub
cmp
or
sbb
push
jp
dec
jo
subb
lcall
lock
sub
ss
pop
pop
adc
adc
in
in
xor
mov
xor
pop
cmp
or
dec
xlat
or
mov
or
jg
sbbb
xchg
and
jbe
jno
clc
dec
sub
mov
xor
stc
cmc
cld
pop
xchg
test
cmpsl
push
push
sbb
add
or
leave
xor
mov
push
movsb
inc
ret
pop
inc
xor
dec
sbb
mov
mov
test
cmp
cmovo
push
jecxz
divl
xor
pop
imul
mov
mov
es
fisubrs
fldenv
jns
test
mov
aam
sub
mov
ljmp
fcomi
test
call
pop
add
mov
pop
cmc
or
inc
outsl
inc
cs
in
pop
inc
inc
es
imul
orl
pop
addr16
vdivps
aam
in
mov
repnz
lfence
sub
pop
dec
push
out
clc
pop
xor
cmpsl
xchg
sti
ret
les
lret
dec
cmp
and
inc
sub
testb
mov
dec
mov
mov
pop
cmpsl
pop
mov
cltd
ret
pop
call
jmp
ja
push
adc
sbb
idivb
pushf
in
call
das
and
xchg
xchg
movsl
xchg
sub
sub
mov
push
jl
push
jo
pop
sbb
pop
xor
dec
xchg
into
mov
mov
out
lea
dec
ljmp
dec
cmp
loopne
cmp
mov
leave
dec
in
xchg
cmp
fdiv
xchg
xlat
xor
or
add
arpl
outsl
sti
mov
inc
cmc
lgs
jmp
mov
add
into
popa
lahf
int
lcall
jb
pop
cli
add
xor
orb
loop
sub
andb
test
loopne
repz
cli
push
cmp
fstl
push
pop
pop
sbb
mov
outsb
bound
shlb
push
scas
mov
or
lahf
addr16
add
stc
adc
cmpsl
out
sbb
mov
test
xchg
jno
or
fmull
sbb
and
adc
sub
or
outsl
sbb
inc
rorl
mov
js
dec
inc
mov
cmp
test
xor
arpl
xor
leave
dec
mov
cltd
aaa
rolb
fs
cmp
sahf
and
mov
push
rclb
pop
xor
fidivrs
or
mov
xchg
or
push
and
add
push
add
test
cmp
dec
push
xchg
cmp
into
xchg
fiaddl
cmp
repnz
int3
jne
mov
inc
xorb
ljmp
jb
stos
xor
lcall
jmp
int3
cs
ret
add
es
je
outsb
push
fisttpl
cmpb
xchg
inc
mov
jecxz
scas
ljmp
xchg
ret
pop
push
pop
sbbb
ret
dec
mov
das
ret
in
pop
inc
insb
or
dec
outsl
sub
pop
push
mov
or
sub
testl
mov
adc
test
xor
imul
cwtl
movsb
das
pop
addr16
hlt
orb
push
pushf
fbld
mov
pop
pop
sub
addr16
pop
and
testl
push
fwait
and
fcomps
scas
cmp
xchg
push
xor
sbb
mov
enter
lods
ror
push
mov
push
cmpsb
adc
mov
addb
ljmp
mov
or
pop
xchg
dec
jecxz
test
les
mov
push
lcall
mov
cmp
jb
add
imul
pop
inc
dec
jg
xor
scas
icebp
mov
out
jl
lcall
outsl
mov
out
xor
fwait
leave
mov
jge
jmp
jle
bound
jnp
sti
imul
repnz
ja
movsl
push
das
cmp
xor
stos
neg
sar
adc
pop
subb
aas
inc
mov
je
push
mov
jbe
or
ss
jae
shr
das
mov
jge
inc
dec
sub
out
mov
test
movsl
addr16
outsl
dec
rclb
pop
xor
popa
sub
mov
mov
mov
mov
pop
xchg
xchg
mov
loope
dec
and
mov
sub
mov
dec
ret
inc
add
xchg
push
and
lock
xor
cmpb
fiadds
in
push
sbb
mov
inc
or
nop
call
mov
es
fdivrs
xchg
adc
mov
nop
add
mov
xchg
int3
clc
add
repz
jnp
ljmp
fwait
push
into
inc
xor
pop
lods
es
ljmp
ljmp
jno
mov
cwtl
xlat
mov
add
dec
roll
xchg
cmp
add
lods
test
mov
and
lock
pop
jg
bndldx
xor
sub
fdivs
push
and
shll
into
sub
jge
dec
sti
ret
shll
jg
mov
aaa
jns
test
dec
add
mov
adc
mov
stos
cs
mov
test
xchg
aaa
aam
sbb
pusha
dec
leave
fisubrs
jg
sbb
cmp
imul
bound
and
cmpsl
les
insb
out
xor
loopne
pusha
sbb
out
aam
push
sbb
xor
mov
add
or
arpl
daa
dec
pop
clc
clc
dec
or
cmpsb
jg
cmp
sbb
jmp
shr
out
dec
or
add
jge
mov
inc
inc
lds
not
xchg
xchg
pop
lds
jge
cmp
add
mov
and
add
test
ja
adc
inc
das
filds
sub
mov
and
push
fcoml
stos
fcmovnu
xchg
mov
test
push
pushl
rclb
push
or
jmp
xorb
push
fsts
xchg
mov
insb
mov
or
pop
sub
out
adc
ror
das
lcall
mov
mov
xchg
xchg
fwait
mov
pop
and
jmp
jle
aam
xor
ja
jne
enter
int3
outsb
lods
adc
int3
inc
mov
out
jb
cmpsb
loopne
fldcw
add
jl
ficomps
dec
pop
mov
hlt
out
in
stos
jnp
lods
testb
cmp
out
xor
add
xor
inc
repnz
or
xchg
fcmovnb
lret
insl
icebp
stc
sub
adc
jecxz
data16
lods
or
loopne
xchg
shl
insb
add
mov
in
dec
sbb
fistps
imul
arpl
pop
insb
push
out
inc
testb
lcall
sbb
fbld
out
mov
add
jae
outsl
int
mov
add
or
push
inc
jle
mov
sub
loopne
popf
mov
lock
test
lods
pop
insl
and
dec
pop
movsb
jge
rcr
dec
cmp
inc
jo
adc
lea
push
fs
adc
mov
inc
pop
jo
fs
xchg
rol
xchg
leave
and
push
jne
push
popf
and
aam
cmp
outsl
jae
sbb
xor
inc
jo
push
jae
int3
xchg
push
xchg
xor
mov
dec
lods
mov
inc
dec
or
and
gs
dec
mov
add
frstor
xor
in
fsubs
inc
inc
addr16
rclb
lret
stos
cmp
negb
dec
xchg
push
int3
inc
mov
cltd
jns
pop
push
shr
lock
dec
xor
xor
mov
sbb
inc
adc
sub
ja
jb
out
adc
cmpsl
out
lcall
inc
push
rcrl
ror
add
dec
mov
xchg
psubq
sub
sbb
mov
jns
or
adc
mov
cmpl
and
pop
mov
jne
jbe
aam
int
mov
jbe
sub
fldt
mov
pop
pop
sub
dec
mov
ja
popf
sbb
outsl
or
and
lahf
es
cmp
out
lahf
fcmovne
push
pop
test
mov
int3
or
push
sub
cld
dec
test
sar
leave
xchg
or
mov
out
jecxz
sub
adc
cmp
adc
push
mov
arpl
repz
push
fstpl
push
pop
or
shrb
jle
js
jno
xor
mov
push
sub
mov
inc
mov
ss
push
scas
testb
cmp
mov
leave
sbb
enter
jmp
jmp
ja
xchg
jmp
inc
call
or
xchg
fmuls
lret
clc
stos
addr16
xchg
rcrb
out
test
fcoml
clc
mov
cmp
adc
or
jl
cmpsl
dec
enter
lcall
test
call
jne
mov
xor
gs
add
repz
and
nop
fistps
mov
data16
cli
cmp
pop
xchg
cmp
repnz
xchg
cmp
xchg
fiaddl
ss
and
mov
adc
sahf
xchg
int
data16
mov
xchg
cmp
mov
arpl
arpl
iret
jae,pt
pop
jmp
cmc
lahf
test
pop
pop
add
pop
fs
push
and
and
std
mov
mov
gs
arpl
in
sub
cmp
cmc
fidivrs
add
fmuls
pop
push
xor
pop
jle
out
js
push
lret
adc
inc
sub
xchg
push
mov
push
sub
mov
mov
push
pop
test
or
cmpsb
pop
imul
arpl
popf
data16
out
test
das
imul
jge
push
sub
out
adc
pusha
cmp
popf
testl
jb
mov
cltd
rcr
and
jno
add
clc
clc
mov
push
cwtl
pushf
mov
fsts
add
ljmp
cmpsl
in
sbb
push
negl
cmpsl
pop
mov
lret
cli
mov
in
mov
or
xchg
iret
repnz
jg
xor
pop
mov
mov
push
lahf
sarb
jae
lods
add
out
push
ret
jb
stos
inc
fisttps
test
in
jbe
stc
nop
pop
pop
ret
std
add
cld
cmpsb
lcall
je
xor
insl
mov
push
jb
inc
lods
fldenv
xlat
jp
mov
and
jno
xor
sbb
push
cmp
in
enter
pop
and
xchg
and
or
push
jae
inc
rcl
pop
cmpsb
or
xor
scas
outsl
and
lods
jge
loop
mov
mov
ljmp
pushf
and
test
insl
rolb
shlb
hlt
and
imul
mov
sbb
mov
fidivs
fstps
ds
push
lods
jl
xchg
scas
les
into
jle
jg
pop
ret
cmpsb
into
inc
int3
xlat
push
or
test
scas
sarb
mov
lods
loopne
pop
add
mov
mov
add
insb
iret
mov
adc
cmp
lret
loop
mov
mov
and
clc
pop
outsb
inc
das
and
jb
jb
push
mov
xchg
and
sub
or
aas
ret
cmpsb
js
jecxz
in
lret
pop
mov
inc
jno
mov
lret
jmp
rol
mov
sahf
clc
in
push
jno
lahf
push
dec
cmp
sub
cmpsb
adc
fdivl
les
or
test
pop
push
lods
test
or
cs
dec
je
xlat
pop
or
out
push
mov
mov
jnp
stos
mov
lods
mov
adc
push
sub
fdivp
das
movsl
or
or
fdivl
sahf
repnz
imulb
mov
mov
fs
mov
loop
cmp
imul
jb
lahf
xorl
mov
ja
sbb
insl
cwtl
in
pop
fimull
stos
lock
dec
push
out
insl
call
addl
sbb
imul
inc
xchg
nop
lods
enter
sbb
fldcw
push
and
notb
jno
sub
xchg
and
push
addl
inc
pop
adc
xchg
mov
repz
int3
inc
lahf
or
cmpsb
add
or
cwtl
ja
cmpsl
xchg
in
cmpl
cmp
test
push
and
orb
jne
or
cmpsl
xor
push
call
cmpl
lods
hlt
adc
int
in
test
out
cmpsl
mov
out
movsb
dec
cli
jae
push
data16
inc
out
out
push
js
push
out
mov
dec
xlat
jl
pushf
ljmp
cmp
sbb
inc
sub
rclb
aam
pop
insb
loopne
pop
adc
aad
call
pop
jae
xchg
pop
idivb
xor
xchg
mov
xor
data16
sub
in
fdivrl
fisubs
mov
lea
fnstsw
dec
daa
inc
movsb
adc
test
push
inc
sbb
ss
int
add
xor
mov
add
bound
dec
pop
mov
xchg
adc
jns
pop
aad
adc
mov
sbb
cltd
adc
pushf
das
push
in
mov
push
lock
imul
pop
push
push
lea
mov
sub
xchg
iret
aas
movsb
xchg
push
sbb
mov
fbstp
add
js
adc
dec
push
push
cmp
mov
jmp
sti
pop
jmp
mov
jg
out
add
push
in
dec
push
fdivl
jb
dec
or
or
jp
push
pop
movsl
mov
ds
shl
jecxz
dec
and
mov
push
pop
jo
mov
adc
dec
into
jae
cmp
cmp
jns
arpl
lock
nop
adc
push
shr
inc
aas
sub
xor
js
cmp
sub
dec
mov
es
arpl
cmp
pop
cmp
dec
sub
mov
cmp
xchg
les
push
out
xchg
stc
fs
adcb
addr16
cmp
xlat
data16
cmpl
xchg
and
repz
iret
ss
loop
ds
push
sub
mov
fs
and
out
fadds
pop
loopne
sbb
push
popa
push
push
mov
jb
clc
cwtl
scas
xor
jp
sahf
loopne
sar
or
dec
push
pusha
das
cwtl
xor
sub
xor
adcl
fnstenv
fisttpl
jecxz
push
loop
xor
rclb
xchg
jae
sub
inc
fs
xlat
stc
inc
push
mov
mov
bound
jno
pop
add
rolb
movaps
inc
mov
inc
enter
push
dec
jl
xor
imul
jge
xchg
mov
and
addb
scas
popa
mov
or
sbb
imul
push
out
fmuls
fnstcw
push
mov
imul
push
in
sbb
inc
and
mov
mov
dec
cltd
ss
popf
hlt
out
in
add
xchg
popf
xchg
xor
dec
jo
cs
mov
in
ljmp
arpl
nop
mov
stos
and
imul
cmp
mov
imul
mov
aaa
push
mov
out
aas
loop
xchg
and
or
mov
xor
fcmovu
inc
scas
mov
mov
push
mov
xor
aad
mov
fistpll
jge
fadds
and
imul
mov
push
mov
dec
fs
jle
ficoms
mov
adc
popa
rcr
adc
fadd
jl
xchg
fs
mov
aas
fiaddl
in
repz
lret
mov
mov
mov
faddp
dec
popa
sti
in
fstpl
cmp
pop
int3
sub
jb
jne
scas
inc
jno
cld
mov
and
loope
mov
sbb
ljmp
pushf
enter
or
or
xor
xchg
aaa
push
or
xor
nop
dec
sub
mov
nop
ja
sbb
pop
lahf
xor
popf
icebp
or
test
mov
cmp
or
cmp
push
hlt
clc
int3
pop
imul
int3
idivl
jge
add
repnz
daa
loope
push
or
rolb
clc
repnz
pop
mov
fstpl
fistpl
mov
push
pop
pop
hlt
imul
cmp
scas
pushl
flds
cmc
xor
sub
inc
inc
lods
insl
pop
inc
fldl
rol
sub
popf
mov
mov
test
xor
outsb
sbb
cmc
inc
cli
movsl
sbb
xor
adc
andl
shl
iret
pop
inc
fsubrl
and
aaa
shll
jbe
sub
xor
push
and
cmp
pushf
xchg
arpl
repnz
into
call
mov
mov
jp
je
xchg
aaa
dec
iret
dec
sub
cmp
push
jmp
decl
dec
fnstsw
cmp
sbb
mov
mov
pop
js
ja
shll
incl
xchg
mov
jp
rorl
xchg
adc
jmp
adc
adc
adc
divb
ja
shrb
test
lds
fstl
gs
push
and
sbb
pop
movl
les
pop
mov
mov
jmp
out
xor
pop
shll
sbb
test
std
jnp
std
std
sbb
mov
test
xor
mov
repz
addr16
imul
xor
ret
orl
loopew
pop
lods
fsubl
psadbw
imulb
lahf
outsb
mov
daa
jns
hlt
xchg
test
jp
add
jbe
cmpsl
push
adc
stc
pop
xchg
dec
and
out
xchg
add
sbbl
inc
mov
mov
ret
xchg
adc
sub
int3
sbbl
add
xor
cmp
and
xchg
push
pop
add
dec
pop
inc
out
xor
shlb
sub
repz
and
idivl
sbbl
push
shlb
mov
sbbl
sub
jle
outsl
sbb
stc
and
mov
push
mov
jl
xchg
pop
xor
inc
adc
jne
ror
cli
clc
push
dec
mov
cmp
jmp
pop
pop
rorl
mov
enter
sbb
jbe
int
mov
inc
dec
mov
jg
call
fmul
xchg
stos
xchg
xchg
mov
mov
dec
jmp
cwtl
gs
xchg
push
jge
ret
cs
push
lds
sbb
sub
push
dec
sti
fyl2x
das
not
imul
cmp
cwtl
and
xchg
push
repz
adc
sbb
insl
mov
imul
dec
sbb
dec
daa
bound
nop
andb
dec
inc
shrb
inc
lods
test
sar
mulb
out
daa
sub
in
cmp
sbb
stc
in
dec
imul
iret
xor
jo
xchg
inc
cmpsb
or
ds
pop
fcom
cltd
mov
jb
dec
adc
icebp
test
mov
test
xchg
lret
int3
push
je
cli
sub
cmp
test
dec
les
inc
lock
push
mov
cmp
leave
ja
out
aam
pop
adc
lret
mov
push
inc
mov
into
cli
sbb
adc
sub
xlat
add
mov
pop
incl
cmp
push
hlt
daa
xor
popa
xchg
sahf
add
jno
sub
sbb
fidivrs
inc
js
inc
add
jmp
stc
sbb
push
fcmovnb
dec
sub
dec
movsb
push
push
add
dec
mov
push
into
push
and
pop
mov
nop
rorl
jbe
xchg
mov
xlat
push
adc
dec
sbb
sbb
fcoms
jae
jecxz
adc
mov
int3
std
out
pushf
xchg
test
xchg
xchg
cld
add
jbe
cmpl
not
data16
js
mov
cmp
repz
shll
in
adc
outsl
movsb
stos
mov
jb
mov
dec
jp
cmp
ret
adc
nop
in
aaa
out
jbe
inc
hlt
lcall
hlt
popa
adc
xor
sbb
test
int3
lcall
sahf
xchg
and
testb
enter
xorb
inc
push
cmp
push
loope
mov
movsl
rorb
xor
fisttpll
subb
inc
mov
outsl
cld
mov
addl
mov
repnz
push
inc
jecxz
adc
les
add
add
inc
lods
sub
bound
aaa
into
stos
pop
inc
jne
in
sub
adc
or
jmp
in
ret
je
pop
dec
scas
mov
jl
jns
subl
push
jp
dec
jo
subb
lcall
lock
sub
cmp
or
sbb
push
jp
dec
jo
subb
lcall
lock
sub
jb
jb
sbb
push
shlb
jo
xorb
mov
ljmp
add
adc
and
xor
inc
push
jp
lret
adcb
or
pop
add
out
cmc
mov
movsl
repnz
sub
push
add
inc
add
mov
movsl
repz
test
xchg
cmpsb
xor
and
push
add
xor
inc
pop
mov
mov
mov
rcll
add
xor
dec
xor
mov
out
dec
mov
pop
sarb
fistps
dec
fmuls
cli
xor
xchg
mov
mov
stc
push
push
mov
xor
dec
xchg
and
fadd
in
test
cmp
mov
ret
inc
insb
mov
cmpsb
add
xor
push
adc
jo
int
sub
and
mov
jp
xchg
and
fadd
aad
xchg
arpl
inc
sbb
pop
in
dec
mov
cmp
ret
inc
int3
divb
inc
in
adc
pusha
and
mov
les
pop
push
push
xor
int3
mov
xor
mov
mov
inc
repz
test
xor
mov
adc
insl
jae
arpl
push
adc
fidivl
mov
xchg
icebp
mov
mov
inc
cmp
inc
xor
pop
pop
and
and
test
nop
iret
mov
mov
int3
mov
cmpsb
jo
shr
push
daa
push
inc
je
push
pop
push
pop
cmc
insb
ss
pop
mov
cltd
lock
testb
test
xchg
ret
xor
inc
adc
and
push
adc
mov
movsl
repz
test
xchg
ret
xor
inc
adc
and
push
adc
mov
cld
adc
pusha
jmp
aaa
daa
or
xchg
mov
call
std
les
jbe
push
sub
xchg
pop
rorb
loopne
xorb
sbb
ucomiss
mov
js
je
icebp
mov
dec
dec
xor
leave
leave
movb
jo
in
mov
gs
xchg
mov
pop
jg,pn
out
aaa
std
ret
pushf
nop
pop
jge
xchg
cs
or
jnp
cmp
repnz
lock
fdivr
pop
mov
decl
in
sub
inc
xor
test
pusha
popf
inc
sbb
xor
sub
repnz
sub
cld
mov
mov
jp
mov
pop
nop
sub
into
jae
push
in
inc
sub
mov
mov
jecxz
ja
addr16
jp
add
jecxz
fs
sub
xor
pop
push
aam
test
mov
cmp
ss
add
stos
sahf
test
xchg
mov
jb
iret
push
push
xchg
nop
insb
stos
push
out
hlt
lcall
adc
xchg
inc
mov
dec
sub
imul
cmp
mov
in
push
cmp
fnstenv
ret
insl
fildl
out
fdivs
mov
call
pop
dec
outsb
imul
movsl
add
pop
xor
mov
cmp
pop
sub
add
lret
lods
sub
pop
fmuls
outsl
sub
in
shlb
mov
push
fisttps
mov
pop
rol
popa
testb
mov
in
adc
or
xor
imul
repnz
mov
sti
mov
mov
outsl
dec
cli
outsb
ss
and
inc
xchg
test
neg
lea
sbb
sub
xlat
out
repnz
push
jb
fildll
sbb
lods
mov
scas
fwait
cld
aas
xor
mov
imul
inc
test
push
out
out
fdivs
das
movsl
add
popf
mov
dec
aaa
fmulp
ret
sub
cmp
push
shr
pop
andb
add
sbb
jb
dec
adc
and
mov
jle
movsl
push
xor
dec
aam
jnp
xor
stos
or
shlb
iret
sti
xchg
test
mov
cli
pop
and
or
leave
cmpsb
dec
imul
sbb
out
cmp
fstpl
imul
cmp
outsb
mov
stc
cmc
mov
jge
test
pop
sbb
xlat
and
das
add
sub
sbb
mov
add
out
or
xchg
mov
mov
mov
mov
in
into
inc
ljmp
xchg
pop
shll
outsb
cwtl
ret
pop
lods
xor
xchg
cmpxchg
xchg
hlt
jle
in
jmp
push
insl
sbb
enter
or
pop
cli
mov
stos
dec
mov
push
push
outsb
push
out
or
cli
sbb
aas
call
sbb
pop
lock
inc
aad
cmpsl
push
rcrb
push
outsl
xchg
je
sub
and
or
jns
cld
std
or
cltd
cwtl
jbe
out
enter
jecxz
and
xchg
add
mov
cs
hlt
jnp
shl
push
fstl
pop
cmp
and
es
scas
cmpsl
mov
out
cmpsb
mov
push
aam
add
test
push
mov
mov
sahf
sbb
add
pop
or
mov
push
iret
lods
or
jnp
jecxz
mov
and
sub
lods
dec
and
xchg
cmp
jle
inc
test
jnp
sarl
push
outsl
std
ja
or
stc
sbb
cmpsb
fldcw
ljmp
pop
lods
xchg
and
ljmp
inc
pop
xor
add
mov
jae
lcall
es
stos
or
ret
add
stos
lret
jmp
sbb
stos
add
imul
adc
jl
gs
or
mov
jle
mov
xor
imul
xchg
orl
icebp
adc
lods
ss
cmp
sub
cmp
sbb
adc
into
cld
xchg
add
dec
push
adc
dec
mov
push
mov
inc
cltd
enterw
add
cmp
push
les
ja
icebp
cld
bound
mov
sbb
cld
sbb
or
hlt
sbb
scas
and
pop
jb
sahf
mov
and
in
loop
insb
adc
and
sub
out
cmpsb
add
std
testl
mov
call
lea
inc
cmc
push
pop
fldcw
jae
mov
fists
outsl
push
das
int3
rcl
mov
in
insb
xor
add
imul
pop
adc
lock
fstps
repz
lods
inc
je
mov
and
xchg
lcall
sbb
jmp
inc
data16
pop
inc
pop
xor
mov
adc
xchg
sub
xchg
stc
sahf
pop
dec
daa
mov
dec
scas
in
icebp
jo
and
loope
sbb
adc
xchg
dec
daa
test
repnz
fcompl
push
cli
test
push
mov
cmpsb
push
jno
xor
mov
jp
cld
jo
popf
loope
ljmp
movsb
sub
ud2
les
mov
rorb
jb
push
mull
sti
pop
out
test
nop
xchg
adc
repnz
cmpsl
cmpsl
hlt
fucomp
negl
pop
aad
cmpsl
xchg
mov
fnstcw
or
pop
mov
add
mov
mov
lds
pop
mov
popf
sti
pusha
cli
pop
out
sbb
pop
fildl
sahf
sahf
sub
movsl
hlt
xor
popf
stos
jle
push
imul
jae
enter
minps
push
xor
fisubrs
mov
loopne
outsl
notb
push
insl
mov
cmp
adc
nop
inc
rcrb
mov
or
pop
push
inc
loope
jecxz
jne
add
jg
fcoml
xor
pop
pop
jno
popf
test
dec
jp
outsb
and
das
in
mov
aaa
mov
ljmp
dec
lea
sbb
les
or
adc
mov
fcomip
pop
bound
cmp
into
jmp
mov
add
pop
pop
lret
or
and
fs
lods
mov
pop
push
ds
mov
sub
push
xchg
arpl
xchg
jle
lods
out
nop
xor
cmp
sbb
lods
push
call
mov
cwtl
ljmp
jl
movsl
push
repz
cld
arpl
in
xor
gs
sub
push
mov
push
xchg
mov
std
fstps
fs
mov
and
lcall
data16
inc
jb
and
arpl
sub
enter
imul
sub
jp
xchg
jge
cltd
cltd
dec
mov
adc
sub
xor
pop
mov
cltd
pop
xchg
rcl
repz
sbb
leave
mov
scas
and
and
test
lods
push
mov
mov
inc
dec
mov
or
or
loope
push
fwait
pop
jg,pn
pop
sahf
lock
sbb
jns
pop
pop
andb
pop
or
fnstenv
test
xchg
mov
movsb
adc
in
sub
mov
gs
sbb
cmp
inc
and
sahf
jmp
pop
das
mov
ret
cmpsl
or
popa
jmp
mov
movsb
xchg
test
mov
mov
lcall
nop
push
clc
insb
not
sub
sbbl
inc
rcll
repz
xchg
test
dec
scas
sbb
push
cmp
push
push
in
jbe
or
and
inc
jbe
adc
inc
cwtl
push
push
lock
dec
loop
mov
imull
xor
xchg
dec
fwait
sbb
cmc
fwait
das
lods
sbb
out
push
and
in
mov
pushw
jne
mov
mov
dec
shl
jmp
push
aaa
test
subb
leave
je
rol
jmp
jns
dec
inc
scas
ss
or
cmc
push
dec
xor
shrb
and
out
sub
fstps
pop
adc
push
push
out
xchg
adc
jns
ret
jnp
dec
mov
stc
stc
and
movsl
aad
fistps
jo
jmp
pop
add
pop
sub
push
or
sti
push
mov
mov
push
xor
adc
cltd
xchg
inc
js
jbe
xchg
mov
es
mov
mov
mov
xchg
sub
xor
cmp
xchg
clc
addr16
sub
clc
mov
test
jae
insb
inc
jmp
or
push
test
sub
sbb
and
sub
rcll
push
or
sub
push
mov
adc
sub
int3
mov
push
and
dec
mov
mov
lret
fsubs
call
push
das
outsb
fstl
xchg
in
test
call
cld
cwtl
adc
adc
mov
mov
xor
data16
stos
dec
out
xor
repz
fcmovb
cmpsb
jmp
push
pop
dec
push
push
test
ret
push
cltd
xchg
gs
adc
sub
subb
pop
push
scas
es
aas
sub
xor
dec
fdivs
in
pop
dec
push
jno
orb
xchg
sbb
dec
mov
inc
in
inc
in
pop
mov
push
sbb
xor
iret
adc
sbb
cs
fistl
aad
arpl
adc
sbb
pop
inc
cmp
mov
push
cmp
mov
mov
jns
mov
sbb
and
cmp
cmp
sub
jne
xchg
sti
and
aam
pop
jo
cmp
rcll
xor
cltd
aad
or
pop
cwtl
xlat
push
pusha
mov
sub
dec
xchg
dec
pop
outsb
add
jg
pop
mov
cmpsl
push
xor
mov
push
movsl
fsubl
xor
jge
test
push
out
or
pmuludq
daa
pop
bound
ficompl
lock
jecxz
jb
add
pop
je
rol
mov
mov
inc
dec
or
mov
bound
pop
xor
jle
ret
repz
push
in
jns
cs
and
mov
jbe
pop
jge
stos
test
jnp
inc
ljmp
dec
fadds
repz
enter
xor
shrl
std
out
mov
cwtl
in
jo
push
cltd
xor
setg
loop
inc
dec
mov
ljmp
cmp
add
add
mov
push
sbb
cmp
jle
sti
cwtl
test
scas
incb
sbb
loop
push
dec
ret
mov
ret
iret
dec
sbb
adc
jbe
push
adc
push
sbb
xor
lcall
cmp
ja
lcall
lock
xchg
ja
jmp
or
out
vpunpcklbw
adc
xchg
cmpsl
fstpl
stos
fs
fxch
stos
sti
sbb
add
pop
aaa
mov
js
or
in
or
imul
bound
jnp
jmp
dec
xor
sbbl
lret
jne
je
mov
and
or
call
add
jbe
sub
or
adc
cmp
stc
mov
aaa
add
mov
call
popf
aaa
and
mov
je
cli
stos
adc
lea
scas
and
or
xorl
cmpsb
outsb
mov
inc
movswl
push
imul
jmp
ficompl
shll
idivl
popa
jae
shll
nop
fisubs
out
mov
popa
sub
lret
in
xchg
popa
in
or
stos
sub
ret
sbb
clc
mov
bound
pop
ret
jp
adc
and
push
add
enter
nop
xchg
jb
add
cmp
xor
jge
add
icebp
inc
loop
sbb
test
xchg
les
cmpxchg
fs
jecxz
loope
push
xchg
mov
fcmovb
jecxz
data16
push
fldenv
add
and
mov
mov
fnop
mov
outsb
push
push
cltd
inc
inc
mov
in
cmp
inc
jge
mov
adc
xor
sti
pop
jne
push
pop
mov
jmp
xor
iret
mov
loopne
shr
lock
push
cmpb
dec
mov
xchg
repz
shlb
or
cmp
xchg
adcb
jle
std
es
mov
mov
cmc
cmp
in
rcl
repz
add
pop
jle
inc
sarl
mov
pop
push
fs
jl
fsubrs
test
mov
lds
scas
insl
sub
sub
repnz
xchg
fiadds
bound
into
or
add
add
push
arpl
mov
push
jne
mov
mov
pop
add
aad
pop
xor
gs
cli
add
xor
repnz
and
push
mov
leave
inc
push
cmp
fisubrs
xchg
mov
dec
mov
pop
sub
push
xchg
aam
in
jp
stos
shll
pop
cmp
xchg
test
cmp
leave
adc
nop
dec
inc
pop
pop
dec
adc
das
sub
imul
test
xchg
or
mov
daa
cli
sbb
popa
push
mov
insl
ret
hlt
rol
test
js
mov
subb
or
cld
into
dec
stc
gs
aaa
mov
mov
and
sahf
push
ljmp
mov
leave
mov
int
dec
push
mov
ret
subl
xchg
jne
shlb
adc
xchg
mov
pop
mov
jbe
or
and
nop
aas
ret
imul
push
hlt
lock
aad
xchg
cmp
sub
mov
mov
shl
shlb
sbb
ss
dec
cli
adc
adc
pushf
sti
lahf
fidivs
mov
test
enterw
push
and
sbb
les
dec
test
and
and
sbb
mov
sub
fwait
mov
push
ret
xchg
jmp
shr
or
sahf
fisttps
jbe
jnp
push
push
lret
imulb
ror
aaa
shrb
push
and
adc
inc
popf
jg
sbb
pop
in
mov
and
ljmp
jb
jnp
ss
sbb
ret
add
aas
or
icebp
dec
scas
out
inc
imul
adc
scas
inc
xor
jns
popa
mov
mov
bound
inc
dec
movsb
mov
or
mov
cmpsl
adc
lahf
aam
cmp
mov
xor
mov
shlb
lret
jb
adc
idivl
sbb
mov
shl
addr16
out
shlb
jp
xor
lret
scas
lods
scas
xor
cmp
out
push
cmpsb
add
aas
sbb
xchg
push
inc
adcl
stc
lret
pop
sbb
sbb
or
pop
xlat
adc
sbb
test
jl
inc
dec
js
push
cmp
push
xchg
mov
outsb
jo
mov
or
icebp
scas
sub
mov
dec
aaa
add
jns
sbb
xor
adc
in
inc
in
push
aad
clc
adc
cmp
xor
out
xor
lcall
out
inc
es
cmpsb
outsb
movsb
cs
lods
fidivrs
pop
push
roll
xchg
push
test
fs
lret
das
adc
ss
mov
je
lea
das
int
sub
pop
test
cmp
lahf
insl
ficompl
pop
jns
rol
push
mov
cld
cmpsb
xchg
iret
sbbl
and
sbb
mov
inc
or
xor
pop
mov
sbb
or
leave
cmp
movsl
xchg
imul
mov
out
mov
scas
jle
in
dec
out
xchg
shll
popa
daa
xchg
cwtl
fwait
inc
insb
aaa
das
jbe
imul
sbb
dec
xchg
aaa
pop
in
dec
fistpl
aaa
mov
jmp
pop
aad
cmp
fwait
in
popf
shlb
aad
and
and
mov
push
outsb
xor
fsubl
pop
pop
stc
mov
stc
xchg
std
cwtl
xor
xor
pop
jle
arpl
jae
loopne
jno
icebp
add
sub
jns
push
jmp
test
cmc
lea
shll
mov
in
outsb
out
inc
inc
mov
dec
mov
adc
jo
mov
mov
bound
cmc
out
inc
out
cli
sbb
mov
outsb
dec
dec
out
addl
push
jecxz,pt
sahf
jo
imul
popa
xchg
mov
sub
sub
push
orb
or
call
ror
and
jge
and
andb
repnz
mov
mov
es
stos
pop
pop
out
or
push
in
inc
cmp
je
or
mov
cmpsb
ja
xor
test
sbb
stos
jle
das
dec
sub
movsb
add
sbb
jmp
movsb
jo
out
sub
mov
push
xlat
or
loope
pop
sbb
lahf
or
out
and
jle
push
sbb
out
fistpll
inc
imul
rol
je
cmp
lret
scas
adc
jb
lods
imul
xchg
dec
push
mov
mov
rolb
in
insl
into
rcll
repnz
in
sbb
popf
mov
adc
imul
adc
add
cli
rcl
ficoml
jp,pn
imul
mov
pusha
sub
das
or
jg
cmp
xchg
lret
push
xchg
in
cmp
out
scas
jle
mov
sbb
jbe
jbe
mov
adc
stos
or
xor
or
mov
ja
fs
adc
cmpsb
int
scas
imul
mov
inc
jo
in
outsl
in
repnz
pushl
cmp
xchg
fiadds
movsl
and
push
lods
adc
mov
adcl
jno
adc
loop
rcrl
aad
xor
in
xchg
lahf
pop
ds
cmpsb
movsb
pop
add
mov
insb
cmpsl
es
hlt
add
pop
aad
dec
iret
pop
hlt
push
daa
add
cli
js
inc
ret
jnp
pop
clc
sub
cmp
push
push
xor
loope
cmp
repz
dec
mov
jmp
pop
cmp
pusha
and
xchg
icebp
or
inc
cwtl
movsb
negb
cmpsb
adc
ret
test
cmc
gs
loop
filds
fiaddl
sahf
xchg
repnz
push
ss
test
subb
cld
repnz
cmp
lock
push
je
xorb
stc
mov
cmp
push
sbb
sub
stc
mov
aaa
notb
iret
push
data16
cmp
rcl
out
rcrl
fimull
push
leave
stos
mov
xor
fwait
rolb
adc
lret
fldcw
js
xlat
bound
es
and
loope
lret
xor
fwait
mulb
xchg
bound
cld
xchg
mov
nop
inc
mov
cltd
adc
aam
imul
jmp
lds
mov
cwtl
and
in
pop
pop
cmpsl
mov
push
in
in
test
pop
mov
xchg
inc
les
mov
bswap
rcrl
sub
dec
pop
fidivs
fnstcw
dec
jge
pushf
pop
cmp
arpl
adc
pusha
pusha
push
sbb
ds
xor
cwtl
mov
addr16
pop
out
cmp
jecxz
ficoml
shlb
insb
dec
mov
sbb
sbb
mov
les
movl
cmpsl
sub
dec
scas
xchg
push
lods
jae
dec
test
push
fsts
mov
into
imull
add
jae
mov
pop
pop
out
pop
jp
dec
pop
xor
call
jnp
pop
movsl
ja
outsb
bound
into
lods
imul
mov
pop
xchg
fs
divl
mov
push
sub
jp
cmp
es
or
sub
dec
lcall
hlt
imul
repnz
out
in
push
jl
aas
stos
fcmovnu
mov
arpl
fcmovbe
dec
ljmp
lret
push
repnz
out
aad
stc
jb
ss
or
aam
cmp
dec
insb
mov
std
sbbb
pop
aas
xchg
rorl
sub
pop
bound
dec
icebp
sar
inc
mov
xchg
addl
loope
jge
sbb
dec
xchg
das
out
loopne
cltd
and
cmp
jmp
dec
jns
pop
pop
and
in
lock
lock
mov
add
lds
ljmp
outsb
sahf
aad
cmp
insb
lock
insb
adc
xchg
in
sub
mov
mov
faddl
orl
pop
and
mov
movsl
repz
test
xchg
ret
xor
inc
adc
and
push
adc
mov
movsl
repz
test
xchg
ret
xor
inc
adc
and
push
adc
mov
xor
rcll
xor
mov
push
add
push
std
inc
icebp
mov
mov
movsl
rep
jecxz
rcll
mov
adc
push
sti
mov
mov
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
rcrl
dec
test
jae
fs
sbb
lret
sub
sbb
dec
fwait
sbb
imul
mov
or
cmp
sub
fistpl
stos
dec
sti
sti
jmp
fwait
pop
mov
jns
nop
pop
orb
mov
or
cmp
sub
jae
lret
inc
lahf
dec
jmp
ficoms
sbb
adc
in
xlat
cmp
fsubl
das
repnz
loope
loopne
aad
cmp
mov
imul
cwtl
es
sbb
out
cli
xor
cmc
out
push
addr16
hlt
cli
add
cltd
pop
loopne
jnp
xchg
loope
or
out
jns
push
mov
sbb
ret
inc
mov
enter
imul
int3
or
mov
aam
add
sub
je
inc
nop
imul
sbb
stc
cs
pushf
cmp
cmp
jecxz
pop
ja
inc
andl
out
xor
je
push
xchg
dec
ror
imulb
cmp
mov
jns
dec
pop
cltd
dec
test
sbb
or
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
pusha
ret
cld
dec
int3
adc
add
jne
jnp
mov
push
lods
and
mov
cltd
dec
int3
jnp
sbb
dec
mov
mov
sub
sub
sbb
jns
loopne
stos
sbb
adc
or
cmp
sub
fistpl
lret
sub
cmp
dec
fwait
pop
mov
jns
mov
dec
test
sbb
or
cmp
sub
fistpl
lret
sub
cmp
dec
fwait
pop
mov
jns
mov
add
leave
shrl
xlat
cmc
mov
inc
mov
xchg
xlat
bound
cs
push
aam
call
aas
dec
push
mov
and
in
addb
arpl
and
das
xor
jno
popf
jmp
cltd
es
ret
aam
gs
adc
loop
stc
pusha
push
jb
sub
popa
push
jo
inc
mov
daa
rcl
jle
les
mov
leave
xor
mov
push
add
out
xchg
std
repnz
and
cltd
push
pop
lock
dec
cmpsl
sbb
pop
xor
test
imul
jb
fwait
xchg
pop
xchg
fldln2
mov
popf
mov
cmp
xor
movsb
data16
shll
loopne
scas
jecxz
lcall
test
and
inc
lods
lcall
lds
sbb
mov
lea
mov
pop
popa
test
mov
daa
loope
inc
rcl
in
test
xchg
mov
mov
jns
or
adc
sti
ror
out
int
lret
mov
jl
imul
cmc
mov
push
mov
ja
xchg
mov
rol
push
inc
or
mov
cmpsb
xor
mov
jae
cltd
cmp
jb
sub
adc
adc
and
imul
sub
in
xchg
inc
adc
sti
pop
lods
stc
ret
sbb
sub
xor
mov
push
cmpsb
icebp
popa
aas
mov
lcall
lret
adcb
outsl
scas
xchg
subb
imul
jns
add
je
cmp
add
xor
and
into
and
lds
and
rolb
or
ljmp
mov
pop
mov
mov
xchg
sbb
xchg
adc
repnz
int3
lret
mov
push
lods
test
xor
leave
sub
cmp
lds
test
bound
es
fstl
out
loop
push
cld
adc
add
add
mov
decb
lea
push
int
push
ss
jp
jle
lods
mov
addl
cmp
mov
mov
jl
sahf
push
movsl
jmp
sub
loopne
push
iret
testl
loope
fistl
jmp
mov
xor
sub
das
mov
cltd
out
mov
cmpsb
xchg
push
mulb
dec
psrld
push
ds
cmp
je
jle
pushw
sahf
mov
pop
jns
xchg
lret
mov
fbstp
cs
mov
cli
cmp
mov
ret
jecxz
shll
call
ds
rcrb
in
cmpsb
mov
mov
repnz
out
mov
lds
cli
call
imul
aam
dec
push
xor
xor
sahf
stos
sti
dec
out
jmp
popa
repz
sbb
das
loopew
lods
in
dec
cwtl
pop
or
jb
icebp
fcmovnbe
popa
ss
addr16
xor
jns
outsl
xor
les
jno
sub
inc
stos
adc
adc
cmp
repnz
push
pop
bound
pushf
shlb
pusha
adc
aas
js
jp
add
adc
sbb
jecxz
dec
loop
fstpt
jge
mov
movsb
mov
pop
cmpsl
roll
or
pushf
pop
cmp
ja
sub
imul
jp
mov
inc
xlat
fstl
ljmp
imul
lcall
add
and
push
mov
or
mov
cmp
add
loop
adc
out
push
imul
inc
pushf
cmp
jl
sahf
ss
jg
add
jge
push
mov
inc
cmp
out
bound
mov
lock
mov
push
jp
outsb
pop
jmp
icebp
rorl
loope
xor
push
cmp
mov
cltd
pop
sahf
call
dec
dec
in
inc
in
xchg
push
jmp
test
add
popf
and
add
or
rol
insb
icebp
lahf
mov
cltd
sbb
dec
lock
mov
movsl
pop
imul
js
pop
xchg
xchg
imul
int3
sub
sti
xchg
sub
push
lahf
push
mov
std
pop
push
test
movsl
xor
xor
mov
imul
and
lret
icebp
das
jnp
adc
jge
or
xor
imul
lods
std
adc
mov
iret
lahf
jb
xchg
mov
mov
inc
je
push
or
iret
add
xor
fstps
cwtl
sub
or
insl
dec
xchg
lods
xor
mov
and
inc
arpl
cmp
pop
mov
mov
and
dec
cld
push
aaa
mov
mov
pop
rcl
xor
add
and
dec
add
loop
data16
mov
sti
inc
xchg
test
dec
mov
call
in
and
lahf
jno
imul
arpl
and
sub
lret
sahf
adc
mov
cmp
mov
test
test
scas
dec
ss
or
add
lods
xor
ficomps
push
add
in
enter
xorl
int
je
mov
xor
xchg
hlt
mov
andl
out
pop
inc
xor
aaa
clc
and
movsb
arpl
inc
push
mov
jmp
jge
dec
cmp
test
das
repnz
movsb
adc
adc
adc
int
movsl
xchg
jnp
or
popf
imul
pusha
dec
pop
int
iret
pushf
aas
dec
push
sbb
cmp
cld
push
pop
rolb
pop
int
int
jno
push
jb
xorl
jnp
mov
test
addb
aaa
lret
or
movsb
jb
jne
inc
popf
pop
daa
inc
lcall
push
xchg
mov
sub
add
mov
mov
inc
pop
pop
pop
stc
jmp
mov
add
push
push
adc
iret
out
shl
push
dec
pop
rclb
mov
mov
outsb
mov
outsl
scas
fmuls
add
and
hlt
js
les
xor
cmp
inc
jns
adc
fwait
xchg
daa
insb
or
push
outsb
out
push
xor
add
sbb
adc
scas
lcall
or
inc
rol
les
cmp
in
je
das
sbb
jge
out
fldenv
insb
pop
movsl
cwtl
flds
and
loope
add
push
and
mov
mov
jmp
shl
cltd
stc
aam
shrl
jo
and
data16
or
push
ret
mov
loope
mov
imul
pop
sarl
xor
add
xchg
xchg
mov
and
mov
rolb
hlt
loopne
call
jl
in
cli
xor
jl
sbb
pusha
mov
dec
lcall
mov
lock
mov
lea
or
dec
mov
stos
cmp
imull
push
inc
push
call
push
and
neg
dec
movsb
shll
push
ss
inc
jae
movsl
rol
add
jns
popw
pop
cmp
or
pop
in
call
rcl
mov
jns
cmp
xchg
das
aam
adc
cmpsb
outsl
mov
jmp
sbb
pop
rcrl
cli
lods
scas
mov
mov
cs
xor
dec
sbb
ljmp
sbb
add
adc
aam
push
insl
test
pop
push
lock
jmp
inc
das
mov
push
sarb
arpl
ja
mov
sbb
popf
adc
out
icebp
leave
fldl
jbe
scas
shll
sbb
mov
lcall
jo
push
pop
jnp
push
cmpsl
pusha
popa
arpl
addr16
xchg
ret
dec
fbstp
clc
sub
push
shr
sub
mov
in
xchg
out
jle
mov
inc
movsb
inc
ss
dec
xor
add
and
hlt
mov
mov
pop
scas
pop
jns
nop
xchg
pop
cmpsl
jb
dec
add
test
or
ffree
dec
ds
pushf
popa
cmpsb
aam
inc
dec
shrb
add
mov
fwait
push
mov
pop
fiadds
outsb
roll
movsb
loope
fisubrl
shlb
es
jmp
popa
outsl
enter
cwtl
push
xchg
bound
fmuls
inc
fisubl
push
jne
jo
add
inc
cltd
pop
movsb
bswap
adc
lods
mov
loop
loope
lret
inc
divb
sahf
jo
ja
das
jle
adc
cmpsb
push
push
xchg
inc
jno
leave
in
dec
shl
aas
scas
push
enter
repz
sub
mov
mov
imul
mov
ljmp
push
mov
shlb
pop
jo
pop
xor
dec
mov
fcompl
sti
pop
mov
or
inc
jno
mov
shl
adc
jbe
xor
inc
jne
ljmp
adc
in
cmp
adc
in
cltd
insb
call
mov
test
pop
out
call
jl
js
jne
and
xchg
pusha
ja
inc
or
and
sub
dec
outsb
jb
insl
test
dec
scas
xchg
mov
sahf
and
arpl
fwait
lcall
jnp
stc
and
push
data16
push
adc
xor
iret
jle
cs
dec
fmuls
mov
nopl
das
mov
jg
out
inc
push
scas
sbb
adc
movsb
fwait
sbb
insl
in
in
inc
sbb
sahf
jl
icebp
add
mov
fldl2t
sub
adc
jb
cmp
repz
into
shrl
push
flds
adc
lods
xor
xchg
pop
mov
sub
fs
lea
lods
nopl
es
inc
cld
or
jns
icebp
sbb
add
daa
hlt
dec
fdivrp
or
jmp
and
lea
mov
fidivl
bound
dec
es
out
ret
cmpsb
jns
cmp
and
out
mov
cwtl
fcmovnbe
scas
and
or
test
mov
mov
pop
stos
movsb
jecxz
shl
jecxz
mov
daa
movsl
mov
and
mov
lret
mov
out
repz
cli
sbb
mov
cmp
cmp
iret
in
gs
bound
jo
ja
jecxz
mov
push
aaa
sub
xchg
inc
push
jne
popa
xchg
daa
mov
pushf
sub
movsl
cmp
cmp
mov
lea
or
hlt
mov
sbb
jmp
inc
sbb
xor
test
icebp
int3
lret
orl
lods
mov
cltd
ljmp
inc
sub
adc
icebp
push
push
int
mov
xchg
xchg
cmp
or
out
mov
jecxz
es
mov
xor
sti
add
dec
sahf
cmpsb
test
pop
mov
and
cld
popa
push
jp
mov
ds
mov
rorb
push
aam
es
mov
cmp
inc
repz
pusha
jns
addr16
push
ss
fwait
test
add
add
cs
sti
push
addr16
push
sbb
mov
adc
lcall
cmpsl
arpl
sbb
mov
jle
jb
push
sub
repnz
add
fldenv
pop
test
mov
lods
fisubs
adc
fistpll
push
mov
and
imul
xor
je
cmp
xor
push
cwtl
pop
fisubrl
jge
push
ret
push
sub
fstl
jo
lods
lods
xchg
mov
roll
outsb
push
test
rcrb
sub
and
jecxz
ffree
dec
xchg
lret
rolb
popa
jle
insl
mov
cmovae
bound
cli
sub
mov
mov
xchg
js
std
push
scas
or
xor
iret
sbb
mov
mov
pop
adc
ds
push
jle
rcrl
mov
ljmp
je
cwtl
pusha
push
cmpsw
ja
jo
icebp
pop
push
outsl
push
leave
adc
imul
mulb
lods
sbb
sub
fcom
imulb
inc
and
jg
mov
aaa
adc
sub
jg
pop
subb
inc
or
mov
jecxz
sbb
mov
cmpsl
pop
xchg
in
imul
mov
sbb
insl
add
sbb
jl
andb
and
dec
movsb
push
fwait
cmp
pop
jge
xor
mov
push
xchg
mulb
xchg
cmp
xor
jo
in
iret
cmpsl
inc
in
leave
mov
add
xorb
pop
ficomps
cs
dec
xor
push
imul
or
movsb
jecxz
ljmp
jo
xor
sbbb
hlt
int3
pop
fmulp
rcr
mov
push
and
and
enter
decl
pop
cmp
mov
xchg
ret
push
lret
add
data16
loop
inc
xor
test
mov
mov
in
adc
or
add
inc
outsb
add
xor
and
inc
inc
xchg
lock
adc
mov
pushf
xchg
pop
dec
jns
mov
inc
or
fwait
scas
or
test
repz
mov
jg
add
sbb
sbb
scas
test
pusha
jns
pop
mov
shll
mov
mov
out
push
insl
ss
cmp
mov
sbb
lea
out
cmp
or
movsl
into
rcrb
sbb
xchg
out
jg
lods
mov
mov
data16
int3
push
aam
push
mov
inc
lret
fwait
inc
scas
mov
loope
lea
pusha
and
dec
push
inc
lds
leave
adc
test
cs
sub
push
aaa
inc
xchg
pop
sub
rdmsr
repz
ljmp
sbb
ret
jmp
or
dec
cld
push
mov
mov
pusha
mov
dec
nop
push
int
ret
cmp
and
das
dec
fnstsw
xor
pop
je
dec
notb
mov
out
lret
scas
jp
push
loope
dec
mov
movsb
jbe
imul
push
bound
cmp
push
daa
inc
pop
xor
btc
xchg
add
push
jae
leave
sbb
mov
cmp
sub
inc
fmul
ljmp
inc
sub
gs
cmp
cmpsl
push
loop
loopne
adc
mov
enter
mov
inc
mov
and
mulb
cmc
sbb
shl
add
stos
or
scas
shll
add
cmpsb
outsl
bound
jge
or
mov
and
sbb
add
mov
jg
fists
add
dec
mov
sbb
mov
or
adc
sahf
cltd
stos
mov
pop
rcr
mov
and
jp
pop
lcall
xor
mov
dec
popa
mov
subb
stc
inc
pop
mov
cltd
repz
data16
movsl
enter
pushf
ja
push
pop
sbb
fidivrl
aaa
mov
int3
push
outsb
xor
je
addr16
in
in
sub
xor
icebp
scas
sbb
clc
and
mov
lock
jp
out
cmpl
jo
mov
push
dec
rcr
mov
test
lret
cwtl
lds
add
lahf
dec
in
out
sahf
and
jo
xor
daa
dec
ret
or
mov
mov
mov
mov
in
lods
cmpsl
pusha
adc
rol
mov
repnz
test
inc
xlat
mov
cmp
push
loop
stos
mov
pop
cld
and
sbb
lahf
imul
aad
insl
inc
pop
ficoml
stc
pop
iret
and
in
test
push
dec
push
lods
adc
pop
mov
lods
mov
ds
cmp
xor
dec
cmp
xlat
sbb
pop
mov
sub
xchg
cmp
sbb
cmp
in
add
movb
fcomi
xor
aaa
mov
cmc
enter
aaa
hlt
call
rcr
out
cmpsl
jp
sub
test
imul
push
shlb
mov
jp
movl
aas
push
test
cltd
xor
mov
jb
xchg
outsl
dec
mov
rolb
xchg
xor
subb
mov
negb
jae
mov
xchg
xchg
mov
ret
sahf
loope
jecxz
add
popa
push
daa
mov
sbb
cmc
sbb
or
cmpsb
repnz
aaa
push
inc
pop
mov
nop
pop
cld
mov
mov
xchg
add
rorb
add
aas
xchg
cmp
xchg
pusha
xor
or
and
out
push
ret
imul
sub
sub
mov
test
mov
movsl
add
pop
pop
sbb
test
mov
stos
push
addl
iret
imull
mov
mov
in
jg
sub
insb
out
xor
loopne
clc
loopne
xchg
add
insb
and
insb
cmp
push
add
mov
scas
xchg
cmp
or
jl
push
sbb
xchg
push
sbb
sbb
ja
sub
fists
sbbb
inc
push
bound
stc
inc
jp
mov
pop
push
insb
dec
mov
xchg
xor
sarb
stc
xlat
fwait
lock
test
pop
add
sbb
jne
iret
xchg
out
sub
xchg
xor
movsl
and
idivb
mov
push
rcl
adc
data16
repnz
repnz
push
cld
enter
xchg
lret
mov
jno
bound
out
andb
idiv
sub
mov
lret
cld
mov
cmp
test
jge
cmpsl
cmpsb
or
mov
pushf
fld
cli
add
fwait
push
fwait
mov
fsub
add
or
popa
pop
or
sbb
add
or
scas
cmp
insb
das
movsl
ret
jle
lret
pop
cmp
sar
sahf
lock
aad
out
orb
out
mov
jp
clc
xchg
lret
cli
jle
inc
push
daa
addr16
lock
cmp
addb
mov
std
lahf
xchg
fidivl
xchg
xchg
popa
or
xor
pusha
sub
fsubl
fs
rclb
mov
sahf
cltd
enter
lahf
push
xchg
cmpsl
fs
inc
leave
cmp
adc
jmp
xchg
mov
test
or
xor
in
mov
xor
and
dec
jl
add
mov
lcall
leave
sbb
mov
cmp
mov
pusha
sub
xchg
push
sub
pop
mov
stos
fsubrp
inc
aam
xor
mov
mov
fcomps
push
inc
cmp
aaa
rcrb
mov
sbb
push
std
pop
jp
rcrl
xor
or
outsb
addb
hlt
hlt
std
hlt
pop
sbb
jl
arpl
inc
loop
cmp
sti
inc
xchg
mov
inc
decl
pop
fsubrl
cmp
cmc
fsubrs
decl
cmp
mov
push
sbb
jecxz
sahf
add
mov
negl
jbe
sbb
cmpsb
mov
cmpsb
test
or
xor
pusha
out
push
andl
inc
jo
hlt
mov
cmpsl
cltd
sub
scas
test
adc
dec
in
add
pop
inc
adc
mov
leave
or
sbb
insb
sbb
sub
xorb
jne
jmp
mov
gs
xchg
adc
js
int3
sub
pop
stos
jge
inc
mov
xlat
je
popf
ss
jnp
fmuls
xor
mov
out
push
fdivrl
icebp
fdivrs
and
push
cmp
out
sbb
push
pop
clc
push
bound
sub
ret
sahf
push
xchg
cmovbe
add
or
xchg
leave
test
mov
test
jo
iret
fcompl
push
fildll
shrb
mov
enter
inc
or
lahf
sub
shrl
xor
arpl
test
out
lea
int3
loop
adc
sub
out
mov
mov
xchg
out
les
ja
mov
rcl
mov
sbb
pop
cmp
or
xor
mov
inc
ljmp
loop
filds
mov
cs
mov
jbe
sub
in
adc
jo
mov
outsb
xor
mov
clc
push
mov
loope
shlb
outsb
loop
mov
mov
push
scas
mov
out
mull
add
jge
pop
int3
fsubl
shlb
cld
movsb
mov
mov
dec
cli
test
add
cmp
jle
and
imul
popa
or
push
or
dec
jbe
fwait
sub
cmp
roll
push
mov
daa
inc
int
sub
jg
inc
stos
jmp
jmp
sahf
out
sub
arpl
leave
mov
inc
addr16
fsubs
ljmp
pop
faddl
mov
fmul
push
mov
loope
xlat
lds
fcmovnbe
cmc
mull
inc
inc
pop
push
clc
incl
jb
inc
mov
mov
adc
push
xchg
inc
into
pop
and
dec
xchg
inc
imul
mov
jae
insl
inc
lcall
mov
adc
dec
lds
mov
enter
mov
cltd
cmp
ss
mov
cmp
dec
sbb
imul
jmp
fistpl
lret
sub
cmp
dec
fwait
pop
mov
jns
mov
dec
test
sbb
or
cmp
sub
fistpl
lret
sub
cmp
dec
fwait
pop
mov
jns
mov
lret
test
sbb
mov
cmp
sub
pop
sbb
sub
fwait
pop
mov
dec
stos
mov
jnp
imul
imul
out
cmp
pushf
ds
je
inc
xchg
bound
xor
and
in
repz
sbb
pop
test
jp
paddq
dec
sub
cmp
ret
add
xor
and
push
lcall
cwtl
pop
test
movsb
or
cmp
adc
cmp
lcall
jle
xchg
cmpsl
or
sbb
sub
dec
mov
push
lea
pushf
filds
jns
pop
leave
gs
cmpsl
shrl
dec
outsl
or
popf
adc
mov
cmp
gs
mov
fwait
into
imul
mov
lcall
lret
pop
jp
add
jmp
fiadds
cmp
xchg
movsl
test
jno
jge
hlt
mov
xchg
lret
scas
ja
push
gs
stos
add
jp
dec
test
xchg
sbb
or
hlt
dec
xchg
daa
sti
adc
xchg
sbb
out
jl
or
push
jns
stc
sbb
jp
dec
popa
dec
jmp
jo
int3
pop
scas
pop
fisubs
das
jne
xor
cld
mov
pop
cld
sbb
imulb
loop
add
adc
sub
fiadds
add
xchg
enter
fs
sub
pop
in
adc
jbe
push
xchg
inc
in
out
and
sub
sbb
mov
pop
fwait
jge
lret
insl
lods
inc
xor
push
sti
or
add
push
jb
sbb
psrlw
cmpsb
jns
jg
pop
xchg
jnp
mov
push
mov
inc
stos
je
fs
xchg
pop
test
jp
or
sbb
sub
cmp
lret
add
xor
and
push
lcall
xchg
pop
test
jp
or
sbb
sub
cmp
lret
pop
inc
mov
es
fcomip
fcmove
mov
jmp
dec
lods
movsl
repz
and
mov
hlt
mov
mov
call
sbb
nop
pop
popa
xor
or
insb
push
jbe
xchg
jp
cmp
leave
je
jae
or
mov
jnp
mov
xchg
mov
mov
mov
push
xor
push
in
hlt
mov
xchg
pop
or
mov
dec
jge
jbe
inc
leave
sub
mov
adcl
push
add
sub
mov
call
adc
repz
ss
fucom
and
fists
mov
and
dec
lret
dec
inc
add
stc
cmp
mov
ret
bound
sbb
pop
dec
mov
test
pop
int3
sbb
ds
mov
inc
adc
sub
and
pop
or
mov
scas
push
pop
int
rorb
or
push
pop
mov
sbb
scas
push
inc
mov
jo
movsb
push
xchg
insl
in
xor
mov
jle
sbb
dec
mov
movsb
jecxz
addb
push
fsub
mov
jp
mov
enter
jo
or
fcmovnb
adc
dec
inc
rol
pushl
cmc
out
ds
sarb
jne
xlat
or
stc
daa
gs
or
aas
movaps
pushw
mov
push
jp
xchg
mov
loope
ja
bnd
jns
pop
adc
mov
add
adc
mov
push
int3
sub
mov
movsb
pop
fxch
scas
cwtl
cmpsl
outsl
rorb
push
lcall
arpl
test
sub
push
faddl
loop
dec
fcoms
mov
clc
xor
pop
jnp
mov
lods
inc
mov
into
dec
das
hlt
lret
xchg
aaa
in
dec
pushf
lds
add
int
inc
inc
rclb
aas
lahf
mov
mov
aaa
inc
pusha
jl
xor
loop
bound
sbbl
popf
xchg
mov
sbb
in
cli
data16
sbb
xor
jno
jp
lret
cmp
dec
push
pop
aas
mov
cmp
cmp
loop
inc
fdivr
xchg
aam
xchg
mov
mov
or
cmp
rcrb
loop
into
arpl
das
nop
in
addb
into
cmpsb
inc
cmp
mov
mov
repz
xchg
data16
popf
pop
notb
cmpsb
pop
clc
fcmovb
cmp
cmp
notb
pop
stos
mov
cld
ret
mov
stc
mov
repnz
sbb
test
cmc
lock
in
mov
xor
dec
dec
int
xchg
fwait
in
and
repnz
mov
ret
lcall
inc
adc
pop
mull
add
gs
pop
aad
sub
test
cmpsl
jl
movsl
push
iret
fldl
sti
lds
dec
stos
sahf
addr16
sbb
lcall
in
sti
loop
jb
add
and
and
popf
sarb
pusha
sahf
fsubrl
push
les
cmp
lds
mov
cmp
iret
test
das
arpl
and
xor
add
iret
sti
push
popf
xchg
inc
rcr
push
repz
in
fstpl
das
je
stc
ss
iret
lret
cwtl
les
mov
das
add
int
pop
and
xorb
cli
jp
mov
int
cmp
inc
sbb
dec
repz
pop
or
cmpsb
icebp
xor
mov
ficoml
adc
pop
mov
pop
icebp
lods
enter
rolb
add
sahf
cli
add
dec
inc
and
lds
pushf
xchg
gs
adc
in
test
stos
and
lods
push
or
dec
adc
xor
ja
mov
and
aad
add
mov
daa
lahf
push
loopne
or
pop
push
mov
lahf
repnz
pop
je
sarl
pop
pusha
or
cli
mov
inc
jl
xchg
xor
lcall
xor
das
xlat
movsl
or
lds
insl
inc
add
sub
das
shlb
adc
test
jp
adc
in
lret
or
inc
cmp
pushf
sub
and
xor
mov
add
mov
je
mov
inc
jo
push
push
cmp
dec
add
mov
bound
enter
dec
pop
sarl
nop
pop
enter
xor
lds
sbb
ret
movsl
iret
fsts
or
into
mov
pop
loop
cmpl
mov
pop
mov
push
jae
or
out
pop
aad
add
es
mov
pop
jb
add
shr
mov
mov
scas
jno
mov
cmp
loop
sahf
ja
push
or
int
add
sub
mov
mov
pushf
outsl
daa
outsb
enter
add
pop
int3
push
sbb
test
xchg
shrb
sbb
js
sbb
fldt
mov
icebp
pop
dec
mov
push
std
pop
sub
inc
mov
fsubs
and
sbb
lds
jno
cwtl
daa
clc
iret
out
xchg
inc
outsl
xchg
jl
push
xchg
push
rorl
aas
test
nop
or
mov
mov
xchg
mov
imul
andl
xchg
test
ljmp
mov
mov
cwtl
bnd
xor
sub
add
inc
sbb
int3
dec
or
mov
xchg
xorl
xchg
mov
scas
jnp
rcrl
xchg
cld
xchg
dec
mov
or
mov
rclb
shrb
inc
mov
hlt
add
mov
cld
imul
add
aaa
aad
sbb
aaa
mov
shll
cmp
sub
add
mov
inc
dec
dec
int3
lock
mov
stc
lahf
cmp
mov
insl
xchg
xchg
hlt
inc
jmp
sub
lods
jmp
dec
pop
lret
add
std
add
sbb
ja
sub
jo
mov
repz
mov
js
stc
adc
cmc
cld
cmp
cwtl
jb
xchg
hlt
shrl
pop
fadd
fdivrs
jb
cmp
popa
xlat
or
cmp
pop
sub
jno
pop
xor
add
imul
inc
adc
test
pop
push
orl
into
cmp
into
adc
lret
add
lcall
fwait
xchg
xchg
pop
movsb
inc
and
lock
lret
sar
xor
cld
xor
js
add
aas
mov
dec
out
jno
or
rolb
pop
lea
push
mov
mov
jmp
rolb
and
mov
loop
jmp
add
jg
pop
adc
test
xchg
dec
mov
cmp
push
push
cmp
mov
stos
out
jns
add
aaa
or
pop
xor
cld
sub
push
xorb
mov
inc
stc
call
mov
mov
imul
cli
pop
and
dec
insl
cltd
add
push
xchg
mov
pop
aam
add
mov
mull
sbb
jbe
repz
push
sbb
cmp
daa
adcl
dec
fwait
cli
adc
insl
inc
addb
sbb
les
lret
in
jno
mov
push
mov
call
sti
jo,pt
add
push
fildll
repnz
mov
ss
std
mov
ret
rorl
inc
add
jmp
pusha
sbbl
push
cld
jl
fstpl
add
movsl
pop
push
cld
cwtl
ds
nop
or
aas
loop
fdivs
add
mov
jl
sahf
enter
sub
or
sbb
push
sub
imul
movsb
push
js
xor
mov
sub
loop
and
lea
jnp
out
inc
lock
xchg
inc
js
pusha
add
data16
cmc
addr16
xor
jecxz
mov
scas
mov
cld
adc
or
sub
test
xchg
mov
xlat
int
mov
jp
mov
cmp
mov
mov
cmc
mov
jge
dec
cmc
ds
push
nop
shll
das
jmp
add
stc
jle
popf
dec
inc
push
or
adc
pop
sbb
xchg
idivb
lahf
sbb
lds
mov
push
arpl
pop
fimull
sub
xchg
jg
mov
sbb
pop
jl
shlb
push
rcr
mov
cmpsb
cmp
pusha
xor
or
xor
bound
xchg
pop
loop
xchg
sbb
mov
sahf
arpl
into
adc
xchg
inc
or
jns
add
jo,pt
mov
or
push
cmc
loope
sub
push
jae
fisubrs
cld
jge
cmp
jecxz
dec
fildl
sahf
mov
xor
push
jnp
push
xchg
icebp
outsb
leave
daa
dec
sub
cmp
loop
add
push
push
call
fcmovbe
fistps
and
jmp
shrb
pop
and
mov
jmp
lret
stc
in
stos
jb
aas
adcl
hlt
daa
lock
add
pop
xor
cltd
fstpl
mov
enter
cmp
add
pop
lret
outsl
jge
lret
pusha
push
or
inc
cmp
aaa
cmp
sahf
jb
sub
dec
xchg
inc
lret
fs
lods
xor
pusha
pop
xor
data16
add
aam
sbb
imul
jp
inc
adc
mov
aas
call
pop
cmp
jle
insb
xchg
popa
cmpsl
ror
stc
mov
or
fdivrs
sub
pop
xchg
pop
mov
adcl
xor
add
movsl
lock
fcomp
xchg
adc
jmp
test
adc
push
pop
ffree
and
mov
cli
lret
push
jo
push
sbb
pop
add
fimull
xchg
mov
jo
xor
dec
mov
ret
fwait
jl
loopne
test
cmp
mov
das
rorb
jo
loopne
jno
insb
std
inc
add
aas
or
mov
mov
aas
jmp
fistps
in
mov
mov
aas
outsl
push
flds
xor
loopne
pusha
sbb
mov
insb
enter
lods
xor
jnp
push
std
xor
push
les
icebp
out
int
ds
rolb
aam
adc
call
ret
jnp
fs
imul
stc
aas
jle
std
sbb
dec
ja
sub
sub
adc
add
xchg
adc
in
inc
rcrl
inc
sbb
xchg
sahf
les
jp
xorl
daa
jae
xor
lods
rclb
xor
bound
and
mov
push
scas
shr
rep
cli
mov
sbb
cwtl
jmp
aam
rclb
pushf
jne
fstp
cmp
sbb
popf
xor
jo
lods
or
arpl
test
sarb
sbb
les
test
mov
movsb
inc
sbb
out
cmp
arpl
sbb
cmp
inc
mov
add
lods
aas
add
inc
xor
push
cltd
jne
mov
ljmp
into
cmp
in
mov
pop
jo
dec
imul
fidivrs
sarl
das
and
outsb
cs
lea
fadds
stos
fmulp
push
add
or
fidivl
mov
xchg
in
xchg
inc
pushf
pushf
out
jecxz
mov
scas
and
lret
xchg
sarl
dec
or
sbb
outsl
xchg
faddl
pushf
inc
das
inc
xchg
inc
mov
adc
or
rorb
arpl
push
push
or
sbb
test
mov
cwtl
inc
loope
jmp
adc
imul
cmp
adc
shrl
in
es
call
cmp
js
cmp
inc
repnz
rcrl
mov
std
mov
push
cmpsl
outsb
jle
pop
das
ds
xchg
lcall
xor
in
xchg
jnp
out
cmc
lock
test
pop
ds
jmp
cmc
jno
push
or
test
mov
dec
inc
enter
addr16
jae
repz
fildll
jae
in
movsl
inc
fcoms
xor
push
adc
push
xor
fprem1
and
fsubl
pop
sbb
ljmp
stc
and
repz
sti
push
adc
push
popa
sbb
cld
enter
add
std
in
adcb
leave
adc
sbb
stc
jmp
fwait
hlt
xchg
push
pop
mov
rclb
loopne
movsl
sub
mov
add
jb
mov
or
or
xor
aas
pop
xchg
and
arpl
jmp
fcoms
lea
pop
cmp
add
lahf
cwtl
pop
dec
outsb
jmp
outsl
pop
push
nop
out
popa
in
push
sbb
mov
mov
iret
leave
pop
dec
pop
add
or
imul
int
sbb
sahf
arpl
pop
dec
outsl
pop
test
int3
pop
cmp
dec
mov
aaa
inc
repz
pop
lds
mov
lret
icebp
xchg
mov
out
adc
pop
sbb
push
sub
xchg
dec
insl
int
dec
inc
lret
dec
jae
sub
insb
outsl
outsl
iret
sub
std
add
pop
fisttpl
mov
imul
imul
lods
ror
sar
out
cmp
int
ss
bound
leave
add
bound
cmc
and
adc
popa
or
sub
outsl
pushf
fsubrs
daa
push
dec
fxch
lret
bound
repz
lods
insb
fcmovu
lds
sbb
leave
test
sbbb
jno
jl
loopne
xlat
push
jge
cmpsb
push
cmp
adc
cmp
outsl
cmp
call
adc
lret
cmpsb
loop
mov
addr16
stos
pop
jno
xchg
dec
cmpsl
popa
inc
mov
test
xchg
xor
adc
movb
ss
xor
fdivrs
mov
xor
mulb
test
jno
inc
xchg
test
jo
pusha
aam
jmp
adcb
rcrl
lods
test
or
cmpsl
scas
sti
shl
aaa
jae
pusha
mov
ret
sbb
lods
push
mov
mov
test
fimull
aaa
outsl
or
adc
sbb
pop
inc
sub
insl
mov
push
ljmp
divb
leave
lock
pushl
or
mov
mov
push
sub
or
roll
jle
mov
pop
dec
push
xchg
push
add
mov
dec
imul
imul
loope
cmp
fs
das
push
lods
in
pop
push
mov
inc
in
push
push
mov
mov
shrb
ja
or
cld
adc
fbld
jl
xchg
adc
ljmp
daa
pusha
push
repz
ret
pop
and
cmp
or
stos
push
xlat
xor
stc
mov
sbb
jnp
pushf
adc
and
sbb
in
inc
shrb
mov
sub
dec
jl
fadds
aad
push
push
inc
insb
jno
call
jnp
xchg
lea
adc
movsl
and
ret
orl
std
pop
and
push
and
push
mov
loope
fsts
popf
inc
lret
cli
and
daa
wrmsr
jno
and
sub
in
repnz
inc
pop
push
xchg
xor
imulb
popf
mov
pop
add
mov
lret
mov
fstpt
cltd
mov
xchg
in
push
pop
out
cwtl
outsb
js
rclb
dec
sbb
test
in
movsl
call
cli
popa
mov
stos
mov
pop
sbb
mov
xor
and
loope
sub
icebp
adc
cs
inc
push
pop
mov
mov
jmp
std
sbb
out
add
inc
pop
data16
adc
scas
push
and
pop
and
es
xchg
fisubl
fucomi
fstps
sbb
xchg
mov
gs
das
fists
popa
xchg
adc
repnz
cmp
imul
sub
repnz
out
add
cmp
fcoms
dec
jle
lock
cmp
push
shll
mov
out
mov
ret
stc
rolb
inc
sub
jb
aas
and
shll
loop
and
sbb
ss
cmp
iret
aam
gs
cltd
or
jno
pop
pop
pushf
sbb
jle
rclb
cltd
ss
fs
fcompl
ret
push
pop
jecxz
movsl
data16
pop
jo
adc
xchg
xchg
pop
dec
inc
mov
add
shl
ds
aad
cmp
cwtl
mov
unpckhps
sbb
and
xchg
in
mov
sbb
cmp
xchg
inc
lret
inc
out
in
std
inc
cmpsb
pop
mov
pop
add
das
dec
xor
sub
scas
xor
mov
mov
mov
pop
adc
popa
fstl
adc
pop
xlat
imul
aas
mov
push
lods
ljmp
jmp
aas
imul
fadds
stos
jge
cmpsb
inc
bound
cltd
cmpsl
jbe
popa
xchg
loop
dec
dec
scas
jno
mov
lods
sbb
xchg
pop
in
lret
or
xor
test
sarb
xor
lock
xor
adc
imul
sbb
xor
jae
aas
cmpsl
sub
fwait
repz
xchg
fcomps
aaa
popa
inc
cli
fdivr
pop
sahf
outsl
aam
div
add
or
mov
pop
imul
push
xor
push
cmpl
sub
filds
or
cmc
mov
cmove
sbb
mov
int3
push
adc
mov
and
imul
adc
sub
lret
mov
setb
mov
cltd
mov
fdiv
dec
xor
xchg
xchg
push
pop
out
or
ljmp
pushf
jl
jnp
and
mov
push
push
jmp
mull
pop
xorb
cmpsl
bound
clc
divl
and
cmpb
xorl
cltd
in
int
mov
dec
mov
lods
js
mov
cmp
das
dec
sbbb
call
inc
es
dec
pop
and
out
pushf
mov
jb
inc
adc
movsb
jne
int3
movsl
adc
dec
mov
mov
repz
push
imul
jl
sti
mov
jecxz
orb
ffreep
daa
rep
divb
push
cli
out
mov
push
inc
ja
mov
es
pop
xchg
add
cmc
sub
orb
in
cmp
and
lret
jle
mov
pop
icebp
shlb
in
pop
and
dec
out
leave
xor
fcomps
clc
cld
pusha
fistl
xlat
push
xchg
xor
and
pop
mov
xor
int
sub
mov
xor
push
sub
daa
out
xor
and
repnz
inc
adc
inc
push
ja
lods
xor
iret
mov
insl
lcall
pushf
sahf
jecxz
push
int
int3
and
and
fildll
pop
mov
dec
sti
mov
testl
rcll
data16
cli
scas
das
test
call
js
jb
mov
fisttps
add
push
addr16
add
roll
out
out
js
mov
dec
mov
jnp
outsl
lret
add
xlat
mov
jbe
loope
push
jns
popa
inc
pop
mov
aas
imul
std
mov
inc
adc
sub
js
push
cmc
jno
pusha
pushf
into
mov
and
popa
rcl
insl
scas
pop
test
test
push
fistl
xchg
repnz
clc
mov
rcl
dec
cltd
xor
sti
cmp
stos
mov
jg
lret
inc
sub
sbb
and
cmc
fisttpll
dec
jecxz
cltd
js
test
std
pop
mov
cmp
sbb
push
add
mov
push
push
lods
mov
push
test
cmp
mov
mov
dec
adc
push
call
mov
icebp
lcall
sbb
inc
xchg
test
out
pop
push
ja
iret
mov
sahf
lcall
inc
icebp
push
jl
mov
mov
adc
pop
dec
cld
jbe
dec
das
cltd
hlt
push
fildl
rorb
cld
xor
rcll
xchg
cmp
add
jp
mov
popf
push
and
ljmp
mov
ljmp
and
stc
insb
mov
jno
add
xor
sti
lods
insl
aaa
mov
inc
ret
fisubrs
jae
pop
mov
fsub
mov
icebp
cmp
call
pop
mov
mov
fcomi
pop
push
fstl
and
movsl
js,pt
gs
xchg
roll
or
mov
loop
jecxz
rolb
pusha
les
pop
insl
or
outsb
inc
mov
adc
and
int3
in
mov
sub
mov
or
or
in
gs
push
pop
xchg
push
aaa
mulb
mov
sbb
sub
mov
pop
addb
jb
cmp
icebp
in
sti
arpl
fwait
imul
cli
mov
aaa
mov
xchg
addr16
dec
sub
rolb
mov
push
sbb
add
sahf
arpl
idivb
out
sub
rcrl
ja
dec
aaa
lods
add
xor
and
push
lcall
xchg
pop
test
jp
or
sbb
sub
cmp
lret
add
xor
and
push
lcall
xchg
pop
test
jp
or
sbb
sub
cmp
lret
add
xor
and
push
sahf
inc
stos
je
fs
xchg
pop
test
jle
or
add
cs
rclb
testb
xor
and
push
mov
cmp
mov
sarl
xchg
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lret
dec
loope
xchg
fs
adcl
add
add
add
or
add
add
add
add
inc
add
add
add
add
or
add
add
add
daa
add
lods
add
add
add
sbb
add
add
add
add
fiaddl
in
add
inc
add
add
add
addl
icebp
add
add
add
out
mov
pop
add
add
mov
add
dec
add
add
add
outsb
add
add
add
lcall
add
bound
test
rolb
or
add
popl
enter
lods
add
into
add
add
leave
add
add
mov
in
add
add
add
sub
sbb
call
add
add
test
in
add
sbb
pop
add
add
insl
add
add
add
xor
test
jle
dec
add
add
add
sbb
jno
js
and
add
popa
add
add
add
add
add
je
addl
dec
add
add
add
filds
xchg
add
add
testl
push
add
jne
lea
imul
gs
add
add
and
jl
popa
add
add
add
add
fadds
xchg
int
push
add
test
test
add
inc
add
add
add
cs
add
add
mov
add
add
push
add
add
add
push
add
add
add
add
incl
or
mov
jle
call
add
add
add
add
inc
add
add
add
adc
add
add
inc
add
add
add
add
add
add
in
add
add
add
out
push
add
add
cmp
add
add
add
add
add
add
add
add
es
add
add
add
mov
pop
add
add
add
add
add
add
inc
add
add
add
jnp
in
add
and
fadds
mov
add
add
add
add
add
add
or
mov
imul
add
in
add
mov
mov
add
add
add
int
filds
lods
add
xchg
push
add
add
add
add
add
add
lret
add
add
add
add
xchg
add
outsb
add
lret
add
add
xchg
add
and
adc
add
xchg
filds
mov
add
add
or
sbb
add
add
add
pop
add
add
add
add
mov
add
sahf
add
add
add
fwait
add
add
add
sbb
inc
add
add
inc
add
ljmp
add
pop
add
add
or
add
add
sbb
clc
add
add
add
pop
add
mov
inc
add
lods
add
add
add
add
addb
add
add
pop
add
add
add
add
add
add
add
add
adc
in
add
add
add
lods
pop
shlb
in
pop
aas
int
lret
imul
cmc
in
int
mov
pop
adc
call
jg
fdivl
imul
or
jae
std
xchg
outsb
or
bound
xchg
inc
lcall
xchg
test
inc
dec
cmp
fs
leave
scas
repnz
pop
daa
push
jge
sti
fidivl
mov
mov
movsl
mov
cmp
stos
les
inc
sbb
mov
fwait
pop
test
push
daa
in
repz
mov
xchg
cmc
adc
jl
test
addr16
adc
mov
mov
cltd
pop
inc
stos
mov
cltd
fnstcw
mov
stc
sub
fstps
adc
orl
gs
inc
popa
je
pop
xchg
stos
dec
jnp
inc
es
xchg
packuswb
cmp
add
push
xor
mov
test
mov
jle
adc
popa
cld
sub
mov
loopne
mov
jnp
dec
push
std
stos
loopne
add
mov
push
leave
leave
inc
lods
add
je
pop
int
lcall
xor
jnp
adc
movsl
out
and
test
jle
jo
arpl
jecxz
sub
mov
rcll
add
dec
and
xchg
sub
xlat
sub
inc
outsl
cld
aam
fwait
push
and
cmp
adc
cmp
lret
cwtl
mov
dec
lock
and
out
orb
adc
imul
xor
daa
inc
push
push
xchg
ljmp
sarl
int3
bound
mov
add
mov
cmp
xor
rep
sahf
xor
mov
and
inc
inc
enter
jle
mov
aad
push
pop
jbe
enter
mov
out
popf
in
push
push
jge
and
pushf
imul
mov
jle
jne
mov
shrb
cmp
sbb
femms
mov
js
jns
push
mov
dec
xchg
jnp
shll
xor
sbb
out
mov
xlat
or
sub
div
lcall
fisubrl
cli
add
mov
sbb
pop
adc
fiadds
and
mov
and
shll
outsl
insb
lcall
mov
push
imul
test
mov
jae
and
xor
pop
or
adc
movsb
and
test
sbb
int
jge
or
mov
sarl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
