call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rorb
scas
mov
mov
cmp
inc
nopl
sub
cmp
dec
pop
jg
outsl
jns
mov
mov
jmp
nopl
sub
cmp
sub
imul
cmp
xchg
shr
pop
stc
pop
or
pop
pop
dec
pop
jg
adc
or
sbb
fdivrp
scas
sar
rcr
push
jmp
in
jb
ljmp
test
dec
cmp
pop
es
fcmovu
adc
leave
xor
imul
jge
out
cmp
pop
fimull
nop
imul
xchg
mov
sarl
pop
pop
lock
shlb
mov
in
xor
fcmove
idivl
fisubrs
fdivr
sub
or
pop
out
lods
rcr
rorb
cmpsl
push
nop
js
std
jb
inc
stc
outsl
xor
inc
dec
push
mov
negb
rcl
cmp
das
imul
adc
mov
aaa
adc
push
mov
shrl
sub
dec
dec
or
imul
mov
leave
mov
jmp
popf
sbb
sub
cmp
dec
push
pop
jg
or
in
stc
fdivr
test
mov
lods
jle
dec
sbb
dec
dec
or
cmp
adc
aaa
lahf
in
pop
cld
clc
int3
fs
xchg
sbbb
jp
pop
sub
sub
aas
cs
in
int
ror
fucomi
fcompl
jmp
nopl
sub
cmp
dec
pop
jg
outsl
jns
mov
mov
jmp
nopl
sub
cmp
dec
pop
jg
outsl
jns
mov
pop
inc
lock
mov
mov
sbb
pop
lret
xchg
adc
fdivrl
sbb
xor
add
in
sub
xchg
cmpb
sarb
popf
sub
mov
fs
test
mov
adc
gs
out
cmpl
loope
ds
js
ds
lahf
loope
imul
movsb
or
jge
xchg
imul
inc
movsb
xchg
ret
jmp
das
inc
pop
dec
fisubrl
out
cmp
adc
pop
xor
insb
pop
mov
sahf
enter
pop
or
call
das
mov
pushf
arpl
clc
pop
pop
loope
push
in
fisttpll
test
addr16
jl
sbb
int
sbb
popf
mov
outsl
les
movsl
lcall
scas
fwait
loopne
stos
loope
lahf
mov
add
jno
jecxz
cs
xchg
ja
pop
adc
dec
dec
call
sar
or
aas
inc
sub
insb
imul
sti
sub
jnp
mov
or
cmp
int3
adc
push
and
dec
xlat
leave
jo
rcrb
fildll
test
jp
or
ds
aam
fs
sub
flds
sbb
cmpb
int3
arpl
pop
repnz
hlt
push
shrb
jge
push
adc
sti
jge
loopne
jo
stos
int3
sti
xchg
mov
xchg
xor
add
sbb
leave
test
fmul
jne
gs
fcoms
gs
adc
icebp
mov
imul
subl
int3
or
add
aas
jb
inc
sti
cmpb
or
subb
or
iret
jae
mov
xor
ficoms
arpl
cmpb
and
repz
inc
mov
sbb
ret
imul
je
stos
icebp
add
gs
sbb
mov
mov
data16
pop
out
scas
bound
scas
aad
jmp
movsb
pmaxub
inc
fisubs
fildll
out
inc
xchg
loopne
movsl
and
jle
adc
or
add
push
xchg
popf
jge
sub
test
orb
mov
ss
sub
or
mov
leave
rclb
xlat
ret
pop
mov
xorl
mov
lds
ret
mov
int3
ds
pop
fistl
mov
lea
push
dec
ss
mov
js
lods
dec
xchg
xor
arpl
fimull
mov
iret
ret
mov
divl
je
arpl
push
push
pop
rcl
ljmp
push
push
enter
fiadds
add
sarl
inc
jmp
orb
mov
mov
sbb
push
jp
ret
in
mov
arpl
mov
fwait
dec
mov
xchg
hlt
pop
flds
adc
jecxz
call
rclb
dec
hlt
and
ror
dec
mov
sub
push
dec
inc
mov
sub
imul
jmp
sahf
fisubl
push
inc
out
shrb
mov
cmp
push
test
pusha
shrl
pop
cld
outsl
add
inc
out
je
mov
xor
sub
mov
pop
xlat
push
ljmp
push
lock
push
shll
xchg
xor
mov
and
jae
pop
in
iret
mov
add
sub
mov
out
insl
scas
out
adc
pop
jbe
test
pushw
mov
dec
mov
or
dec
out
mov
aas
out
imul
mov
rcrl
xchg
sti
cltd
xchg
scas
arpl
mov
xor
pop
imul
xor
outsb
mov
sub
sahf
mov
mov
repnz
out
insl
sbb
sbb
in
xor
jmp
icebp
lock
lret
jmp
xlat
mul
dec
push
jnp
testl
mov
sbb
jne
jbe
mov
dec
cli
lock
hlt
ss
dec
or
and
push
movsb
mov
cmc
push
out
sbb
shlb
inc
mul
xchg
xchg
xchg
lahf
insl
inc
mov
inc
lods
outsl
xor
fisttps
sarl
repnz
nop
mov
xchg
jb
jle
sbb
aam
aad
into
cs
fistl
les
sbb
mov
sub
gs
push
jecxz
shr
mov
les
fsubr
repz
adc
inc
int3
jnp
js
icebp
movsl
imul
iret
fisubl
ss
pop
cmp
call
ficoml
shl
and
aas
mov
mov
orb
and
scas
test
cmp
sbb
enter
mov
jbe
inc
clc
mov
adc
jmp
xchg
xchg
nop
push
mov
int3
into
mov
mov
cli
mov
and
sbb
std
popf
xor
js
add
mov
cmp
xor
lds
mov
notb
or
xor
mov
xor
cltd
addr16
mov
xchg
repz
fsts
leave
jg
inc
shll
jae
test
add
adc
pop
out
je
mov
mov
cld
mov
sub
leave
test
in
imul
adc
xor
bound
cwtd
imul
jae
pop
fs
sar
push
ffree
rcrb
aad
xorl
out
mov
sbb
sbb
rclb
xchg
mov
push
or
add
imul
sbb
mov
mov
and
std
sub
ret
jmp
mov
shl
push
pop
cld
ret
mov
push
notl
push
sub
adc
xor
stos
gs
jge
repnz
bnd
cld
loop
mov
ljmp
or
call
mov
shll
adc
inc
add
icebp
cmc
fcmovb
pop
xchg
int
inc
lds
push
popa
xchg
pop
pusha
xchg
test
sbb
cmpsb
outsl
lea
jle
or
dec
stc
out
aam
xor
lds
inc
xor
les
pop
dec
aas
lret
les
sti
fistps
popf
xor
gs
xor
incl
xor
icebp
add
out
xchg
fsubl
gs
rcrl
pop
outsb
sahf
out
xchg
mov
outsl
je
jl
sti
adc
les
pop
sub
jle
pop
xor
in
mov
push
shl
in
leave
ljmp
adc
sbb
aam
out
dec
sub
push
xchg
mov
and
fmuls
ficoml
sbb
adc
lods
clc
and
mov
or
aas
or
jb
sbb
dec
pop
sbb
in
inc
jp
xor
sub
mov
mov
inc
shrl
mov
inc
mov
xor
fsubl
fsubs
ds
xor
stos
add
dec
bound
mov
mov
sbb
xchg
int3
cld
lahf
xor
cmp
adc
shll
je
lea
loopne
sub
cwtl
xchg
pop
cli
pop
xor
sbb
xchg
bound
mov
insb
lcall
cld
or
mov
or
cli
sub
in
push
mov
movsl
cs
push
setae
mov
push
inc
jne
pop
add
fnstenv
mov
sub
mov
les
xchg
inc
cmp
fsubrl
mov
add
les
in
push
push
mov
or
std
xor
pushf
hlt
bound
mov
fcompl
bound
or
add
pop
add
scas
fdivr
cmc
in
cmc
dec
push
mov
movsb
out
cwtl
mov
lock
cmpl
jl
in
jbe
pop
xchg
cmp
or
loop
arpl
cmpsw
xor
leave
xchg
pusha
mov
sub
movsl
xor
push
test
push
push
shrb
loop
iret
cli
std
shl
call
mov
lcall
stos
xchg
aam
out
xor
inc
mov
cwtl
push
adc
cmp
xchg
jno
rclb
popf
or
push
mov
jne
cmpsb
or
sbb
push
mov
pop
mov
mov
sahf
movsb
ficomps
jnp
dec
daa
pop
and
cmp
push
dec
fmuls
hlt
mov
imul
jle
xchg
incb
test
es
add
push
fisubrl
mov
inc
add
fisttpll
stc
mov
sub
add
pushf
pop
out
or
cmp
in
push
mov
lahf
inc
add
push
inc
adc
jnp
shll
xchg
insl
sarl
jno
shrb
sub
insb
out
pop
mov
mov
cli
pop
lahf
movsl
push
int
arpl
dec
in
ret
push
pop
push
mov
pop
cmp
fisubrs
mov
sarl
inc
dec
sbbl
xchg
ret
mov
lock
add
flds
cmpsb
std
in
lds
aas
xor
mov
nop
sub
mov
or
dec
jp
outsl
push
inc
or
mov
test
sub
pop
xchg
add
xor
shrl
pop
test
imul
sbb
dec
push
popf
mov
mov
sub
popa
aad
mov
jecxz
xchg
roll
xchg
fwait
mov
decl
outsb
or
sbb
push
sub
xchg
sub
sbb
xchg
stc
scas
shl
mov
stc
or
mov
add
add
hlt
test
mov
inc
mov
xchg
push
mov
xor
sbb
jge
out
mov
sub
dec
aaa
mov
in
jb
dec
dec
bound
pop
jb
mov
outsl
mov
out
andb
add
inc
ja
ds
lret
das
and
pop
fwait
test
int3
adc
ss
popa
jg
lock
inc
pop
adc
jge
lret
inc
out
jecxz
iret
xchg
cld
lret
mov
push
push
scas
icebp
pop
pop
fwait
stc
adc
sbb
mov
inc
int3
popf
rcl
mul
adc
shll
fcmovnu
lahf
add
dec
and
sub
popf
fldenv
sahf
xor
push
mov
mov
adc
fisttps
es
movups
mov
sbb
mov
movsb
mov
inc
inc
xor
sbb
insl
test
mov
ret
fsubs
pop
lahf
ds
jl
cmp
or
jbe
pop
inc
hlt
mov
cmp
push
outsl
test
xchg
or
cwtl
sbb
mov
pop
hlt
adc
lock
popf
insl
aaa
pop
xchg
ret
xchg
dec
inc
sub
ss
arpl
push
cmp
popa
xchg
mov
cmpsl
filds
fidivrl
pushf
sub
ds
push
jecxz
hlt
mov
mov
push
mov
mov
test
iret
cmp
mov
mov
repz
scas
mov
xchg
in
jl
test
add
movsb
imul
cmp
mov
sbb
int3
scas
adc
dec
in
xchg
mov
aas
repz
pop
push
jg
mov
mov
push
je
xchg
and
in
lret
cli
rolb
sub
stos
or
xor
or
mov
imull
push
adc
lds
aas
adc
mov
stc
jge
xchg
or
jle
enter
insb
imul
cmp
into
cmp
push
add
pop
shrb
add
arpl
popa
pop
and
jle
mov
push
or
xchg
inc
push
fildll
inc
mov
cmpsl
cwtl
dec
jge
sti
inc
push
jbe
xor
testl
pop
mov
and
mov
movsl
mov
adcb
das
jnp
fstpt
incb
jnp
es
cld
xchg
arpl
lods
push
lds
sbb
jg
jae
sbb
push
stos
inc
mov
into
jp
cld
adc
jb
stos
and
pop
test
pop
push
jecxz
dec
aaa
rolb
in
push
and
jmp
xchg
icebp
ret
std
rcpps
push
mov
iret
jecxz
xor
inc
jb
in
xchg
sub
subb
addr16
inc
fmull
in
mull
sub
das
or
rolb
inc
inc
out
jb
cmp
push
test
rorl
movsl
ss
addr16
roll
cli
arpl
mov
dec
xorl
lds
orb
adc
pop
pop
andb
iret
cmp
test
mov
clc
out
mov
sub
push
or
mov
pop
inc
inc
mov
arpl
dec
cmc
pusha
scas
dec
xor
add
add
mov
cmp
and
cmp
jo
push
ret
mov
mov
dec
ret
inc
mov
popa
push
outsb
out
lea
push
cwtl
jbe
push
ret
xchg
cld
or
movsb
icebp
iret
and
imul
sbb
add
dec
pop
sub
repz
repz
jle
push
push
shrl
xor
sub
sahf
mov
gs
xor
jno
lods
adc
dec
xor
sbb
addr16
rclb
sbb
jle
js
in
scas
xchg
push
sbb
mov
adc
insb
mov
scas
xchg
loope
add
scas
inc
mov
xchg
jnp
adcb
add
inc
inc
mov
dec
sahf
pop
repz
fwait
sbb
push
and
push
jl
mov
jle
mov
into
pop
leave
popa
ret
jl
sub
repz
movups
sbb
dec
jp
pop
sbb
mov
push
and
sbb
and
adc
push
popa
fdivr
xor
and
insb
shrb
cmp
clc
mov
xrelease
xchg
arpl
mov
push
ljmp
dec
jno
cmp
out
jle
mov
bound
mov
push
in
sub
dec
sub
inc
and
das
jb
ljmp
cmp
nop
inc
jge
lock
cmp
cmpsb
cmp
mov
inc
dec
mov
sub
jns
add
imul
stos
fdivrl
bound
push
cmpsb
jnp
nop
mov
and
ret
dec
pop
pop
push
sub
push
cmc
mov
xor
in
dec
inc
daa
push
outsb
inc
mov
enter
cmp
divl
dec
mov
in
adc
data16
fnstcw
sub
pop
ss
mov
or
imul
mov
push
stos
inc
xchg
mov
jge
fs
pop
hlt
mov
mov
int
sbb
lock
faddl
int
pusha
jecxz
or
insl
or
test
push
dec
fistpl
mov
add
lods
iret
push
insb
iret
push
push
repnz
sbb
aas
xchg
cmpsl
icebp
sub
les
mov
call
jnp
inc
and
out
fidivrs
inc
lret
sub
aaa
push
mov
mov
adc
ficompl
pop
lahf
pop
je
cltd
in
dec
or
mov
or
test
lods
in
and
push
mov
out
xchg
sub
cmp
imul
push
clc
ds
pushw
ljmp
mov
pop
mov
xchg
dec
xchg
int
out
inc
out
and
jns
adc
dec
ljmp
sbb
dec
js
cmp
or
cmp
push
sbb
cmp
inc
outsl
push
xor
sbb
insl
pop
push
xor
pop
addl
add
rol
sti
call
jne
jb
jle
pop
cmpb
rcll
insl
sbb
outsl
pushf
pop
jns
xchg
loope
mov
xchg
out
data16
popa
movsl
cs
jb
cmc
test
or
xchg
dec
push
outsb
dec
mov
sub
insb
les
ja
rolb
xor
pusha
mov
lret
test
jge
lret
fs
repz
out
and
jb
adc
test
jle
push
cmp
mov
xchg
push
fs
popa
inc
mov
jp
bnd
mov
inc
fucom
push
add
sti
das
or
lahf
xor
jo
adc
jno
fbstp
dec
lahf
decb
repnz
pop
call
or
shr
in
dec
ret
jb
call
pop
out
push
jae
sbb
stos
push
mov
aas
fmuls
movsb
jg
xchg
stos
mov
sbb
fiadds
mov
sti
mov
clc
xchg
mov
aam
loope
cmp
adc
aam
xchg
pop
adc
or
inc
sbbb
and
cld
xor
jmp
inc
sbb
mov
xchg
sti
mov
dec
and
pop
insl
cmp
cmp
stc
in
push
or
fistl
xor
lods
stc
fbld
pusha
add
sbb
divb
jb
adc
cmp
dec
jge
push
sbb
add
mov
into
jecxz
jle
dec
popf
jnp
call
fmull
dec
out
pop
mov
push
jp
cmp
popa
or
imul
xor
or
xor
dec
movsb
insl
subb
test
rcll
sbb
mov
push
inc
lods
lcall
pop
xchg
xlat
lret
movsl
add
lcall
rorb
mov
dec
mov
jne
fbld
cmp
jbe
sub
or
orb
pop
and
and
jge
outsb
sbb
lahf
cmp
cltd
outsl
mov
sub
cmp
loop
push
fcmovnbe
std
jae
and
jle
pusha
sbb
jle
daa
pushf
or
into
mov
push
lods
pop
in
sub
cmpsl
sub
xorb
fnstsw
addr16
sti
or
cmpsl
pop
popf
and
sub
hlt
int3
push
cmp
pop
sahf
cmpsl
adc
movsl
scas
cmpsl
mov
iret
loope
test
sti
in
cmovbe
xchg
mov
adc
mov
test
cmp
lods
pop
inc
or
xchg
test
movups
add
mov
add
repz
nop
pop
jmp
pusha
mov
adc
leave
mov
cmp
jno
mov
pushl
outsb
inc
icebp
loop
stc
pop
xchg
shl
es
pop
dec
imul
sub
arpl
aaa
pusha
pushf
mov
fimuls
mov
xchg
sub
pop
mov
lea
push
adc
fwait
adc
cmp
push
out
cmpsl
rcr
cmp
mov
sbb
mov
inc
lods
sub
add
push
mov
lcall
out
in
repz
sub
xlat
sti
shrl
js
mov
mov
repnz
cltd
inc
idiv
sub
xchg
icebp
repz
bound
or
add
cld
ficomps
movsb
outsb
mov
gs
cmpsb
and
lds
sti
and
pop
mov
incb
ja
inc
sbb
and
jbe
sar
cmp
fnstcw
daa
into
enter
inc
mov
popa
mov
mov
or
fldenv
data16
xchg
mov
es
nop
push
rclb
and
inc
or
inc
incl
scas
sbb
cmp
insl
fildll
rol
movsb
push
cmp
fisttps
insb
adc
movsl
mov
adc
stc
int
xchg
lcall
sub
out
xchg
push
pop
dec
repnz
cld
test
xchg
fstp
rcrl
nop
pop
jg
lret
sub
cli
mov
in
mov
mov
cld
pop
mov
loopne
leave
push
push
xor
movsb
pop
out
outsl
lret
std
push
comiss
mov
mov
int
fcomps
bound
pop
lea
xchg
dec
jae
sub
pop
xchg
pop
je
ss
jb
adc
xor
jge
popa
sbb
mov
test
push
lret
dec
pop
push
xchg
sub
ret
stc
mov
adc
pop
movb
lea
leave
lea
sub
fwait
xor
xchg
cli
movsl
int
jns
sbb
sub
je
mov
inc
xlat
xor
inc
push
pushf
add
mov
cld
lret
dec
mov
inc
cld
jb
xchg
lds
test
mov
scas
ljmp
mov
loop
pushf
dec
adc
jp
xchg
les
inc
out
outsl
mov
out
out
arpl
loop
je
fnstsw
sti
and
adc
jmp
fs
xchg
push
mov
outsb
mov
pop
push
js
push
unpckhps
hlt
pop
fsubs
pop
jo
dec
movsl
xchg
sub
push
push
leave
lahf
and
inc
jp
nop
push
mov
xlat
pop
aam
shl
leave
fs
push
sub
or
iret
jno
jno
pop
adc
stos
and
push
push
push
adc
or
js
int3
ja
rcr
xor
lret
movb
shlb
and
push
sbb
pop
fdivl
in
or
fndisi(8087
scas
fimuls
int3
add
aaa
out
loopne
jp
or
adcl
outsl
sahf
aaa
jle
call
jo
cli
xchg
sbb
xor
sub
stos
pop
addl
cltd
mov
shlb
sbb
fisubrl
addr16
add
xchg
inc
cwtl
ljmp
push
aaa
mov
scas
xchg
lods
mov
jne
mov
test
iret
fcos
jmp
nopl
sub
cmp
dec
pop
jg
outsl
jns
mov
mov
jmp
nopl
sub
cmp
dec
pop
jg
outsl
jns
mov
fmulp
lret
fcos
jmp
nopl
sub
cmp
push
pop
jnp
pop
jns
mov
mov
jmp
lock
sub
dec
sub
cmpsb
adcb
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
test
insl
cltd
jge
sub
jl
or
cmp
or
sbb
imul
mov
jge
or
fsts
sub
cmp
or
sbb
test
lods
pop
mov
mov
cltd
or
cmp
sub
sbb
mov
sti
cmp
aaa
fdecstp
or
sbb
ds
sbb
add
ret
cld
dec
inc
mulb
subb
xchg
sbb
mul
dec
xor
push
sbb
xchg
aaa
shlb
aam
mov
lods
xchg
cwtl
js
push
es
stc
and
in
lea
mov
inc
fldl
int
in
flds
cmp
popa
sub
pop
jp
dec
mov
jge
sbb
sub
movsb
dec
mov
cld
xchg
cwtl
cmp
lret
rcll
mov
mov
stc
sbb
in
pushf
rol
outsl
mov
xchg
push
mov
mov
sub
out
inc
pop
fnstcw
sahf
leave
idivb
xor
or
sarl
jmp
sub
cmp
out
sbb
imul
int
loopne
lock
test
jo
pop
fstpt
mov
dec
popa
sahf
push
fstps
aam
or
sbb
push
cmc
adc
pop
mov
push
dec
lods
push
int
ret
and
ds
adc
sub
cmp
or
sbb
imul
mov
jge
or
fnstcw
or
sbb
imul
pushf
or
mov
pop
push
adc
test
add
or
in
imul
cltd
cmc
push
stos
outsl
fimull
and
mov
mov
lds
stos
sahf
dec
dec
sbb
cs
push
fs
adcb
je
lret
sbb
jp
lds
fnsave
mov
mov
sub
popa
int
cmp
inc
std
test
mov
out
repz
dec
cmp
mov
cmovg
lods
outsl
xchg
aam
pop
test
jns
jo
aaa
ljmp
xor
sbb
aaa
into
mov
push
test
adc
mov
pop
cs
ds
ljmp
cmpsb
orb
adc
jp
scas
popa
pusha
sarl
ret
sub
xchg
inc
fbld
std
cld
and
int3
dec
or
mov
sbb
add
jbe
add
enter
dec
ja
or
mov
cmp
shll
sbb
aad
lret
pop
add
inc
mov
mov
in
fs
out
cmpsl
in
mov
push
mov
mov
into
lret
mov
shrb
sub
daa
dec
into
mov
mov
push
jae
js
cli
dec
dec
push
pop
icebp
int
push
popa
adc
sbb
pusha
es
iret
iretw
pop
out
adc
lcall
cmp
stos
sti
fnstenv
rcrb
dec
or
adc
lods
or
stos
pushf
sahf
jmp
inc
inc
lods
jmp
fcmovu
movsl
mov
mov
inc
dec
cltd
lret
cmp
ror
jns
add
adc
jb
popf
cwtd
sub
add
sbb
dec
shll
inc
pop
insb
mov
push
add
pop
fs
popa
popf
mov
push
jne
mov
icebp
lock
sub
arpl
leave
sbb
in
mov
iret
lods
cwtl
fwait
cltd
mov
dec
inc
sbb
push
imul
rolb
fadd
xchg
inc
rol
dec
xorl
pusha
call
adc
pop
inc
popa
clc
pushf
mov
outsl
arpl
in
repnz
fldt
and
arpl
inc
dec
out
pop
cmp
mov
or
leave
adc
and
inc
repnz
pushf
insl
xchg
ljmp
pop
out
out
mov
sbb
push
orb
lods
insl
xchg
mov
cmp
aam
push
dec
rcr
add
cwtl
adc
mov
inc
mov
sbb
cmp
and
pop
enter
inc
push
push
mov
stos
cmp
or
mov
jno
or
ret
loop
movsl
rol
push
add
mov
sub
hlt
sbb
subl
mov
adc
lea
or
stc
sub
sbb
cmp
inc
add
repnz
push
jmp
jp
notl
cmp
mov
aam
out
pop
mov
nop
mov
push
mov
xor
xchg
cmp
xchg
insl
sub
out
popa
add
ret
pop
lret
mov
push
ret
mov
cmpsl
sub
out
adc
adcb
xchg
xchg
xchg
les
adc
insw
fsubl
xor
xchg
out
and
mov
cmp
sahf
test
movsb
nop
pop
std
dec
xchg
push
lock
pop
cwtl
call
sub
mov
sub
xor
mov
xchg
jg
cltd
test
push
loope
inc
or
sub
out
enter
or
push
call
rcr
sbb
xchg
inc
and
mov
shl
inc
jae
push
add
inc
mov
aad
mov
adc
dec
xchg
jl
pop
or
and
mov
lods
notl
repz
loop
xor
or
add
shlb
and
and
sbb
pop
jl
shll
pop
dec
mov
int3
aad
mov
fisubs
shrl
js
xchg
or
jge
es
xchg
pop
lahf
fcmovu
imul
add
mov
mov
imul
rol
jl
push
add
sbb
and
inc
out
add
cld
int
das
xorl
js
stos
int3
xor
js
inc
insl
imul
outsb
xchg
cmpb
clc
pop
movsb
mov
test
daa
add
loopne
mov
inc
xchg
fwait
lea
push
pop
scas
push
adc
jo
sbb
cs
add
jae
loop
fdivrp
sub
mov
sarb
out
std
mov
pop
push
adc
mov
lods
adcl
clc
sahf
sti
jp
paddd
insb
fidivrl
in
pop
xor
sbb
iret
xor
dec
inc
dec
mov
jo
ds
movsl
movhps
outsb
or
pop
je
push
cmc
push
lahf
pop
add
or
jle
mov
cs
orb
std
jbe
sbb
adc
sti
mov
mov
clc
mov
sbb
dec
in
mov
push
aam
xor
mov
add
and
mov
add
nop
mov
cs
fisttps
dec
cmp
pop
mov
into
outsb
ficoms
jo
jle
cs
and
pop
jne
xchg
adc
sub
xchg
mov
add
sbb
or
jmp
outsl
ljmp
fsubrs
pop
dec
sub
xchg
push
sarb
xchg
fnstcw
loope
clc
pushf
or
fisttpll
mov
jg
or
test
sbb
loopne
test
adc
outsb
inc
scas
push
fmull
add
jmp
dec
adc
push
stos
sbb
lcall
push
rcrl
push
sub
mov
add
fistpll
sub
adc
int3
sub
sbb
mov
inc
out
aas
imul
jge
cltd
mov
jmp
ja
lods
sahf
and
jp
ficoms
adc
add
pop
test
loopne
push
gs
shrl
fs
lods
sub
into
imul
mov
lahf
bts
movsl
mov
mov
int
mov
mov
outsl
and
sahf
cmp
xorl
sahf
mov
jmp
sbb
popa
sbb
sbb
pushf
jo
int
push
insl
mov
jge
sbb
int3
jp
dec
xchg
iret
enter
jg
cwtl
loopne
push
lcall
pop
or
sarb
lahf
mov
jle
aas
adc
decb
mov
rorl
aas
or
dec
cmc
mov
xlat
mov
dec
add
xlat
adc
jno
loop
out
cmp
rolb
dec
mov
mov
insb
cmp
xchg
stos
lcall
inc
sbb
addl
loope
xchg
mov
adc
lds
shlb
sub
mov
mov
xchg
pop
fisubs
mov
and
lds
mov
insl
rcll
addl
mov
push
nop
hlt
and
mov
jno
pop
arpl
mov
popa
test
test
add
cmp
add
ljmp
aas
xchg
mov
jne
push
push
jecxz
jnp
insl
and
xchg
jle
mov
bound
mov
mov
int3
jmp
mov
sub
xchg
mov
scas
aaa
aam
mov
stos
or
cmp
and
pop
movsl
adc
cmpsb
enter
sbb
loope
mov
push
or
and
popf
dec
scas
dec
in
pop
loope
cmp
push
pop
xor
popf
pop
push
lahf
cwtl
add
inc
lret
mov
sbb
or
pop
inc
shlb
dec
or
test
mov
ret
lock
js
mov
or
mov
push
shll
xor
mov
fwait
push
mov
test
mov
std
cmc
enter
bound
int
mov
scas
jmp
push
mov
mov
mov
fisubl
fidivrl
repz
in
jne
jbe
clc
xor
xor
arpl
pop
sbbl
cmpsl
adc
imul
push
push
mov
lea
in
cmpsb
dec
add
cmpb
orl
js
adc
jno
subb
mov
iret
inc
xchg
pop
test
rcrb
outsl
adc
in
aam
sahf
mov
mov
xor
adc
xlat
mov
divb
cmp
jb
mov
sbb
jp
add
test
sahf
dec
lret
fs
and
lock
ds
push
insl
xchg
hlt
out
clc
sbb
sub
sbb
in
sahf
lea
mov
inc
mov
sbb
push
mov
and
je
popf
xor
push
sub
std
dec
pusha
sub
push
out
leave
adc
mov
and
mov
fsubr
xor
out
sahf
mov
out
sbb
fsts
push
cmpsb
jp
xor
add
ljmp
pop
arpl
testl
push
in
jno
jge
inc
adc
xor
arpl
inc
dec
pop
push
sub
sbb
das
mov
loopne
ret
xor
inc
movsl
xor
pop
pusha
sbb
addr16
imul
jno
stos
add
lcall
mov
aam
jns
sbb
popf
jp
xor
sub
pop
sub
sbb
pop
lea
imul
jae
pop
incb
lcall
notl
xchg
iret
out
push
mov
out
stos
mov
arpl
pop
xchg
inc
je
cld
jp
outsl
fcmovu
addr16
int3
lea
pushf
addr16
sbb
xchg
mov
xor
enter
mov
enter
and
pop
inc
shl
rol
mov
or
loope
xchg
xchg
jb
cmc
and
or
xchg
daa
cmp
xor
cli
fstl
shrl
mov
mov
jmp
insb
test
dec
and
mov
aas
xchg
pop
arpl
jnp
jae
fdivl
lahf
in
loop
int3
inc
xor
lcall
rcll
inc
sarl
dec
sub
jns
arpl
pop
xchg
and
in
dec
dec
sub
push
pop
repnz
negb
daa
data16
push
fildll
scas
out
sti
sub
mov
mov
hlt
dec
pop
adc
fs
or
shlb
out
push
insb
push
adc
inc
lods
mov
and
mov
shll
dec
sub
mov
lods
push
push
clc
mov
cmpsl
sti
xchg
inc
jo
push
data16
outsb
jne
sbb
sbb
sbb
add
push
add
test
lcall
stc
outsl
mov
andb
int
loopne
shl
xor
cltd
pushf
sbb
enter
sub
nop
fnstenv
mov
inc
daa
lcall
inc
dec
sbb
fisubl
out
pushf
fisubl
call
push
mov
loop
cmp
pop
sti
sbb
cmp
scas
or
aad
stos
inc
lea
or
or
bound
aas
lods
into
into
push
sub
loope
jno
sbb
mov
fs
popf
xchg
cmpsb
sub
add
scas
stos
movsl
mov
mov
sub
int
imul
xchg
or
aad
enter
in
popf
les
dec
sbb
sbb
pop
sub
inc
outsl
push
rcl
jle
xchg
lret
jecxz
add
adc
lods
jmp
jp
push
int
add
das
hlt
xchg
dec
arpl
out
jbe
and
imul
int
mov
lahf
idiv
mov
mov
dec
gs
ret
ds
int
inc
shlb
xchg
sub
lea
mov
mov
xchg
out
and
adc
lods
pop
or
int3
decl
sub
sahf
mov
or
clc
pop
adc
push
testl
xor
mov
lret
pop
pusha
mov
lea
inc
ret
sbb
icebp
and
les
inc
stos
movsl
cltd
jmp
popf
inc
int3
pop
mov
push
jecxz
mov
adc
mov
shrb
ja
fidivs
push
addr16
shrb
test
outsl
add
mov
icebp
mov
std
fwait
cmp
push
pop
sub
loopne
pushf
lret
sub
mov
sbb
push
and
adc
in
cld
push
lret
int
jne
js
addr16
dec
mov
ss
adc
dec
aas
out
push
rcl
sbbl
sbb
inc
andl
sbb
mov
bound
fsts
adc
test
scas
xlat
mov
sbb
popa
sub
lods
cmp
out
sbb
popa
jmp
push
inc
push
jo
pop
add
cltd
mov
or
push
fwait
mov
mov
cmp
es
shll
push
mov
adc
or
adcb
push
push
push
pusha
cltd
push
mov
leave
pop
xchg
and
and
je
nop
out
inc
mov
int3
insl
cli
mov
cmp
daa
ljmp
mov
adcl
je
sub
hlt
loope
jle
push
dec
addr16
sarl
loope
push
imul
pop
xor
inc
es
sarl
int
jae
clc
fimull
mov
sub
mov
enter
jge
cmpl
fmull
inc
iret
clc
es
stos
andl
fildll
push
jge
cmc
lahf
ror
sbb
fcoml
leave
outsb
adc
cmp
pop
xchg
or
mov
arpl
fwait
cmp
mov
xchg
fstl
ljmp
adc
pop
pop
int
add
iret
cmp
mov
add
lea
xor
lea
cmc
addr16
push
imul
jnp
jae
jge
add
pushf
push
popa
inc
mov
mov
add
call
sub
arpl
cmc
out
dec
pushf
into
mov
ds
ftst
arpl
jae
push
call
cmp
mov
addb
fs
inc
push
xor
jge
adc
arpl
add
insb
imul
imul
shll
push
sbb
jb
pushf
push
mov
hlt
ja
adc
lods
js
cmpb
out
divl
insb
cmp
ret
clc
xor
cmpsb
jns
cltd
push
push
adc
aad
mov
mov
sub
xchg
std
pop
popa
call
jae
cmc
mov
js
jnp
sti
nop
call
clc
orl
jbe
out
pusha
sub
mov
jecxz
adc
cmp
sub
push
loopne
xchg
out
mov
add
scas
mov
jne
ficompl
xor
cmp
xchg
andnps
mov
das
popf
fbstp
adc
cmpsb
movsb
xchg
shlb
cmp
or
inc
dec
aas
aad
cmpsb
mov
test
in
movsl
mov
dec
icebp
test
mov
movsb
pushf
aaa
popf
push
or
sti
pop
or
inc
ja
sar
cmp
popa
sub
mov
dec
mov
add
pop
push
xor
and
and
aas
mov
inc
les
push
lcall
sub
ret
lret
push
push
inc
lret
mov
imul
movsl
dec
jge
xchg
push
fcmovb
sahf
cmp
inc
mov
and
flds
data16
into
push
shlb
mov
or
add
cmpsb
mov
mov
pop
cmp
daa
pop
add
mov
xchg
mov
adc
mov
push
or
jmp
push
pop
sub
mov
sti
sti
push
xchg
in
xchg
ficoml
mov
sbb
cmp
sub
jl
sbb
out
jl
mov
shlb
add
jns
pop
lock
jno
or
and
das
dec
push
or
or
push
mov
popa
mov
mov
fistpll
dec
popf
jae
pop
shrl
dec
cmc
ret
mov
or
push
inc
cmpsl
adc
mov
adc
loope
mov
arpl
push
push
ss
and
cmpsl
sub
adc
mov
inc
scas
cmp
scas
pop
test
insl
cli
shr
addr16
sub
sub
aad
mov
out
cmp
dec
pushf
push
ret
lea
jbe
iret
push
rolb
cmp
cli
xlat
cmpsl
test
inc
jl
and
or
jb
xor
test
mov
es
repz
out
fisttps
sbb
dec
lahf
push
testl
aas
sbb
mov
jl
and
dec
daa
adc
insb
aas
jb
decl
je
sahf
lea
sbb
stc
mov
mov
rol
adc
sbb
imul
mov
pop
and
dec
scas
lret
dec
add
pushf
push
jo
xchg
cmpsl
mov
lea
and
xchg
push
in
pop
mov
mov
mov
xchg
adc
mov
lret
sarl
dec
mov
sahf
push
jecxz
mov
popf
les
mov
cmc
call
push
or
push
cmp
cmp
stc
test
popa
xchg
pop
mov
dec
jge
cmp
adc
and
imul
xor
inc
push
mov
push
dec
popf
scas
jns
dec
xor
rcr
mov
in
nop
or
inc
imul
cmp
mov
cs
cmc
out
ljmp
jae
jge
mov
mov
incl
xchg
mov
mov
pop
add
in
push
loop
js
mov
push
clc
fstpt
in
aas
mov
or
lds
jmp
es
jo
out
imul
in
lret
scas
add
fstpt
andb
dec
pop
jmp
mov
lret
dec
in
pop
lret
cmp
cmp
sbb
adc
mov
jle
out
adc
popa
dec
inc
sbb
sbb
xchg
sahf
jne
mov
mov
mov
xchg
ret
cwtl
dec
lock
or
lcall
ret
and
pop
hlt
push
mov
or
adc
xor
in
je
add
pop
loope
mov
jmp
int3
inc
or
stos
pop
js
add
cmpl
inc
dec
add
push
shll
mov
dec
imul
mov
cmp
iret
out
in
mov
pop
dec
cmp
jp
push
rcrl
int3
nop
push
popf
test
les
push
add
cmp
jbe
and
sub
loopne
lds
imul
scas
adc
pop
fidivrs
outsl
imul
pop
test
mov
lea
add
test
cmp
cmp
adc
sti
mov
mov
xor
lods
dec
mov
mov
data16
cli
mov
cmpsb
sbb
mov
rorl
jl
jle
fsubl
xor
cmp
xchg
popf
mov
fldt
lods
add
xor
clc
call
dec
imul
ret
xor
shll
jge
fistpl
xchg
mov
stos
jge
js
dec
sbb
stos
ljmp
xor
mov
jns
xorb
push
popa
aaa
jmp
dec
adc
xor
ret
std
inc
jno
mov
dec
jl
cltd
gs
daa
and
adc
aam
in
ds
or
out
inc
jecxz
stos
mov
shlb
les
adc
nop
in
gs
cmp
out
or
dec
inc
cmp
or
ret
inc
xchg
push
imul
aaa
imul
mov
mov
add
inc
popf
sbb
dec
pop
jbe
dec
scas
scas
jle
movsb
imul
stos
je
sahf
arpl
leave
mov
leave
jnp
mov
pop
clc
cld
push
out
test
push
lea
in
push
pusha
mov
fcomip
cli
pop
sub
fmulp
insb
jmp
int
jle
mov
cld
jo
mov
push
xchg
xor
jp
sbbl
popa
lret
dec
cs
dec
in
lret
mov
xchg
xchg
jae
cwtl
leave
fadd
sub
adc
inc
push
enter
and
daa
xchg
in
int
fcmovu
jne
cmp
xor
pop
mov
popa
daa
xor
jns
scas
dec
cmp
jg
movsb
cmp
lret
popa
jae
imul
push
inc
fs
sub
lcall
inc
in
push
inc
out
mov
inc
inc
sbb
mov
jecxz
jno
cmp
int3
je
mov
dec
mov
jge
aas
mov
push
call
sub
mov
pop
mov
cmp
push
test
lahf
sub
fbstp
jne
icebp
test
xor
cs
sub
rolb
xor
mov
mov
hlt
fwait
cmpl
inc
lods
inc
pop
mov
mov
cmpb
in
cmp
pop
dec
sub
movsl
sub
inc
pop
xchg
jbe
insb
sahf
fidivs
out
push
pop
ror
lea
dec
lgs
inc
xchg
popa
sarl
cmc
adc
fsts
and
push
stc
sbb
sub
cmp
or
sbb
imul
mov
jge
or
fnstcw
or
sbb
imul
cmp
jne
jns
or
pop
cmp
or
sbb
imul
mov
cmp
leave
lods
fscale
sub
cmp
in
sbb
cmp
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jle
outsb
ficomps
dec
jle
inc
dec
ljmp
add
fisubrs
jle
push
scas
sbb
mov
jle
outsb
ficomps
dec
mov
adc
scas
push
lret
out
jle
outsb
into
jle
popa
scas
push
sahf
outsb
mov
jle
outsb
ficomps
dec
cld
ds
mov
xchg
int
scas
xor
ja
pop
out
or
cmpxchg
daa
stos
xor
test
dec
lods
leave
ds
and
pusha
xchg
inc
xchg
iret
mov
cs
inc
imul
push
xor
das
fbstp
xor
pop
shrb
cld
cmpsb
aam
push
xor
into
jecxz
repz
out
mov
jle
dec
into
popf
decb
push
mov
testb
inc
push
mov
push
aas
pop
xor
data16
fstpt
push
fnclex
cmpsb
test
push
test
cs
popa
aas
mov
inc
push
xchg
arpl
les
out
push
inc
mov
xchg
movsb
pop
paddw
pop
mov
pop
push
hlt
mov
sahf
push
je
ds
out
cwtl
fidivrs
ss
mov
pushf
or
rcrb
inc
icebp
jno
mov
mov
mov
lods
sbb
push
outsl
pop
or
pand
lods
pop
rorb
sub
sbb
lret
push
testl
cltd
sbb
cs
push
scas
push
mov
fisubrs
jle
push
scas
push
sahf
mov
jle
outsb
ficomps
dec
mov
sahf
push
scas
push
mov
fisubrs
jle
push
scas
push
sahf
mov
jle
wbinvd
ret
dec
xor
out
pop
fdivrl
dec
mov
aam
insb
lahf
push
mov
fsubl
inc
mov
fisttpll
and
cld
mov
mov
mov
mov
cmp
dec
mov
daa
mov
pop
loop
rcll
decb
pop
jae
test
adc
cli
lcall
notl
loop
aas
sub
add
adc
xor
jo
aaa
outsb
push
pop
pusha
pop
push
and
imull
xchg
or
mov
add
sbb
jne
inc
loope
jnp
xchg
push
movsb
sub
cmp
mov
in
push
and
sub
push
cmp
test
push
mov
jmp
repnz
mov
dec
int
mov
mov
jb
xor
into
mov
in
pop
xorb
ljmp
call
mov
mov
and
scas
in
inc
mov
mov
xchg
push
inc
iret
mov
mov
lea
xchg
push
cmp
rclb
sub
daa
mov
sbb
and
jl
sbb
jle
sbb
cmpsl
mov
inc
rcr
ret
es
push
sarl
out
loop
dec
jmp
mov
sbb
push
mov
shlb
prefetcht0
sti
mov
sbb
mov
jmp
ds
or
test
sahf
pusha
es
addl
lahf
lcall
out
enter
in
add
mov
fldt
lahf
mov
inc
mov
popw
inc
add
outsl
mov
fwait
sbb
scas
fwait
push
loop
jle
adc
les
cmpsl
es
push
sti
pop
mov
loope
sub
in
pop
bound
out
leave
mov
jp
insl
jne
lds
daa
pop
shrb
jns
jb
les
dec
lea
inc
jb
jbe
sbb
mov
rcrb
fildl
icebp
aas
je
pop
xchg
rorl
push
lea
aaa
popf
dec
jnp
and
imul
leave
stos
in
sub
loope
sbb
movsl
xchg
rcrl
sub
sub
fcoms
mov
stos
push
xchg
pop
mov
inc
xchg
sbb
js
jae
push
xchg
movsl
sbb
push
hlt
dec
ret
jae
fcomps
or
outsb
movsl
orb
xchg
push
or
push
sbb
outsl
dec
jg
cmp
mov
xchg
out
cmp
dec
or
mov
mov
mov
dec
flds
xlat
jg
xchg
out
aam
pop
inc
lods
out
mov
xor
cmc
mov
add
cmp
cld
insl
jo
pusha
loopne
mov
mov
sbb
xor
sbb
mov
call
es
mov
cmp
gs
xor
or
cmp
repz
and
dec
xorb
in
sbb
pop
test
dec
adc
fdivrl
outsl
aas
xchg
mov
xchg
cmc
stos
fcmovnbe
jge
push
mov
adcb
pop
loop
inc
decl
or
popf
cmp
dec
cmp
sub
shr
xchg
sbb
dec
mov
ficoms
adc
cld
mov
mov
adc
mov
cld
insw
dec
add
mov
and
mov
mov
jp
mov
addr16
mov
push
jne
out
dec
jne
mov
cmpsl
lcall
inc
aaa
clc
clc
data16
aam
cmp
fdivrl
xchg
test
clc
jb
out
and
std
leave
int3
mov
divl
adc
cmc
xor
leave
loope
sbb
jecxz
dec
or
and
xor
push
pushf
jns
outsl
xchg
stos
push
mov
lods
es
or
imul
sbb
outsl
ret
ss
in
dec
and
adcb
not
sub
imul
aaa
andl
cmp
xlat
jmp
lods
dec
nop
push
orl
rep
lea
push
imul
aas
test
xchg
sub
les
arpl
mov
or
lret
xrelease
aaa
addr16
decb
jnp
mov
jne
fsts
out
jnp
lds
inc
addl
inc
dec
mov
add
leave
inc
lret
nop
cli
mov
imul
stc
push
test
imul
lock
shlb
scas
inc
imul
add
jg
int
stc
adc
sbbb
sbbb
xlat
ja
xor
push
fsubs
dec
mov
ficoml
lods
push
mov
jo
xchg
cwtl
sub
dec
xchg
xor
mov
out
cmpsl
mov
xor
fmuls
cmpsl
movsbl
leave
sbb
movsb
and
add
int3
test
fnstcw
mov
repnz
addr16
mov
fwait
in
push
repz
add
add
mov
pop
mov
and
mov
mov
sbb
rcrl
rcrb
sar
dec
int3
ss
mov
fwait
dec
std
lods
callw
cld
mov
cmp
shl
sub
mov
inc
push
adc
cmp
scas
test
sti
lcall
xor
add
pushf
sbb
loop
or
push
fstps
and
push
insb
fnstsw
insb
mov
inc
mov
scas
jbe
sahf
xchg
dec
sub
sbb
push
cli
icebp
or
rcll
fbstp
pop
lret
jae
movsl
pop
push
sub
js
mov
lods
scas
lea
jne
push
jmp
cmp
sahf
mov
pop
in
mov
xchg
or
pop
inc
and
xchg
enter
cmp
jcxz
ficomps
dec
push
pop
push
mov
lods
cmpsb
jge
mov
sti
nop
stos
iret
and
or
jo
xlat
fsubs
icebp
int3
subb
movsl
jne
iret
popa
popf
jge
push
adc
dec
fistl
lcall
push
std
das
addr16
in
sub
push
adc
lds
out
jge
leave
push
lds
stc
adc
data16
jne
repnz
out
adc
lahf
movsb
xchg
adc
pop
jle
jno
dec
loop
jmp
fwait
pop
push
cwtl
jmp
sub
lret
cltd
test
leave
sti
or
sub
stos
push
aas
fwait
cmp
adcb
ret
and
pop
pop
add
mov
and
outsb
dec
outsb
js
pop
cmp
adc
adc
aaa
aam
idiv
jae
imul
scas
insb
pop
push
int3
outsl
popa
sbb
sbb
stos
clc
cmp
fneni(8087
into
jmp
dec
dec
out
cmc
fsubs
mov
pop
or
sub
stos
movsl
sbb
lods
xchg
mov
shr
rclb
jae
dec
cmpsb
jnp
rcrb
rcrb
mov
nop
loop
outsb
jnp
and
ret
jo
dec
mov
loope
movsb
sbb
mov
xchg
daa
call
loopne
or
and
ljmp
mov
movsl
push
movsl
xor
movsl
pop
push
gs
mov
xchg
ss
or
and
roll
lahf
mov
arpl
push
call
xchg
shlb
pop
dec
mov
lock
fstl
cmpsl
xchg
cmp
movsb
mov
sbb
ret
daa
xor
loope
fs
pop
repz
pusha
pusha
push
jmp
cmp
fmul
popa
cs
das
movsl
fwait
cmpsb
lods
dec
js
repnz
repz
add
jo
test
pusha
jnp
mov
iret
add
out
add
cmp
push
adc
push
jno
pop
ja
xor
subb
in
sub
push
cmp
fildl
fidivrl
fs
pop
enter
push
xchg
sbb
mov
mov
imul
push
mov
xor
leave
neg
lret
addb
pop
in
pop
xchg
mov
jno
enter
xchg
int3
pop
sub
cmpsb
xchg
mov
inc
stos
out
dec
pop
movsl
and
fwait
pushf
dec
and
les
outsb
shrl
insl
or
sub
sbb
xor
frstor
adc
lods
in
pop
cmpsb
out
pop
pusha
and
xorl
jg
ss
insb
push
rorb
out
jbe
cs
jb
mov
sub
jno
push
inc
mov
add
push
sbb
les
or
mov
shlb
imull
xchg
xchg
xchg
jne
pushf
add
add
cmp
sbbb
lock
fcomip
fistpl
lods
sbb
lret
push
xor
testl
sbb
jb
and
sti
cmp
aad
cwtl
push
inc
jle
dec
sbbb
lea
jp
jg
cmp
xor
sbb
pop
bound
jne
mov
xchg
adc
inc
push
adc
xor
out
xchg
leave
sub
sti
fdivl
fsubrl
pop
push
inc
jae
xor
int
or
push
mov
and
cwtl
xor
repz
mov
jae
in
mov
mov
test
inc
adc
mov
call
cmpsl
mov
xor
push
fwait
test
lea
add
fwait
push
pop
sub
add
jl
lock
push
out
leave
loopne
cmc
daa
fbld
das
test
lret
cs
mov
jp
loope
xchg
cmp
mov
sub
out
add
ficoml
pop
stos
testl
icebp
mov
push
in
dec
loopne
sub
push
pop
ja
cltd
test
mov
or
stos
fistpll
into
jns
call
cmp
xchg
mov
pop
cmpsl
popf
or
push
leave
jl
insl
cmp
jns
mov
popa
addb
inc
int
les
jmp
stc
dec
mov
ljmp
dec
dec
movsl
out
jne
xor
pop
in
lcall
xchg
call
push
xchg
lea
dec
adc
gs
into
fmulp
jg
push
mov
mov
push
adc
push
mov
mov
inc
add
inc
dec
negb
mov
fdivs
push
mov
sahf
lods
jp
cwtl
in
adc
xchg
and
sbb
mov
or
adc
cwtl
and
jo
call
insb
scas
lret
das
ror
inc
inc
out
mov
mov
or
in
add
shrb
fisubrl
jle
lahf
in
cs
or
xchg
out
cmp
stos
mov
xchg
in
mov
jno
in
pop
add
sbb
dec
mov
dec
mov
inc
fcomps
mov
sub
mov
icebp
in
dec
jl
lahf
sbb
mov
outsl
and
shl
pop
xor
pop
imul
mov
repz
inc
lcall
cmp
push
ret
xor
daa
ds
xor
cwtl
jl
jno
dec
mov
dec
push
js
and
aad
xlat
push
pop
jecxz
add
subb
mov
sbb
inc
popa
test
fildl
fdecstp
clc
test
adc
test
pusha
bound
ds
aam
sub
lods
outsl
mov
xchg
jp
in
scas
push
popf
pop
mov
scas
sub
loope
add
sub
std
push
cmpsb
push
mov
cltd
mov
jmp
xchg
dec
sbb
fiadds
mov
nop
divl
popa
mov
dec
mov
cmp
xchg
jno
idiv
add
std
ficomps
in
xlat
mov
mov
fs
nop
incl
shl
xchg
and
popf
jg
xor
dec
and
fcom
push
cmp
adc
or
leave
jle
mov
movsb
mov
jecxz
inc
cmp
sarb
fdivr
ds
pop
mov
jns
jmp
add
adc
loop
dec
add
popa
jb
add
rolb
mov
les
lods
push
xor
cwtl
and
mov
leave
xchg
daa
pop
lock
movsl
dec
jecxz
call
es
pop
std
and
insb
inc
nop
test
lock
out
mov
jl
or
inc
or
adc
stos
sub
mov
pop
repz
xchg
cmpsl
push
leave
jmp
hlt
jb
add
xor
jg
movsl
push
std
mov
mov
push
cmp
jge
inc
mov
rcrb
scas
cmp
imul
pop
pop
icebp
movsl
pop
aad
xchg
xor
sbb
fbstp
test
scas
gs
loop
or
fsubrl
push
loop
or
xchg
orb
xor
mov
in
add
jns
inc
or
sbb
pop
add
lahf
mov
outsb
test
xchg
add
pop
jbe
cmp
int3
xor
ja
test
cwtl
lret
mov
and
mov
adc
sbb
sub
pop
test
cmpsl
add
addl
sbb
loop
mov
push
push
mov
ja
pop
mov
mov
lret
sbb
fcmovne
mov
or
hlt
mov
gs
das
cmp
dec
jns
dec
out
in
adc
lcall
fsubl
out
or
xchg
test
fstl
rcrb
lock
sti
sub
cli
into
rcr
fwait
jg
sbb
sti
push
dec
xor
xchg
and
movsb
push
and
or
or
and
inc
test
fildll
call
insb
test
daa
inc
cltd
mov
mov
popf
push
dec
stos
sub
stos
inc
add
adc
and
outsl
dec
enter
inc
int3
mov
mov
in
xchg
add
or
sar
adcl
push
and
testb
shlb
xchg
push
mov
outsl
add
lds
push
pusha
jmp
or
mov
xor
sub
or
and
ja
lock
ja
mov
sbb
dec
popf
nop
stos
lock
aaa
popa
push
bound
fs
push
dec
cltd
dec
push
ljmp
mov
and
test
and
mov
add
mov
mov
jle
push
adc
inc
shll
shrl
in
or
mov
mov
mov
inc
sti
lea
inc
and
adcl
or
lods
jle
inc
jmp
sbb
out
dec
cmp
inc
lret
test
add
jae
insb
les
sbb
repz
iret
insb
insl
xchg
jp
sub
movsb
or
add
xchg
sti
movsb
xor
pop
mov
push
mov
xchg
adc
cmp
sub
cmp
xlat
cmp
sub
jp
pop
inc
jmp
sti
jne
fs
sub
sub
inc
std
pop
movsl
dec
dec
testl
shll
stos
push
jecxz
pop
mov
leave
subl
inc
push
cmpl
stos
adc
mov
sahf
fisttps
repnz
xor
pop
add
mov
pop
cmp
call
pop
rorl
jno
inc
pop
dec
imul
fwait
cmp
and
push
leave
pop
inc
mov
xorl
pop
rorl
lods
cwtl
repz
or
dec
enter
fsubrs
js
push
imul
and
loopne
mov
cmp
adc
jmp
xor
jp
test
dec
push
cmc
jne
push
push
fisubrl
sub
mov
sub
adc
cltd
lock
xor
jnp
mov
fstl
push
es
xchg
test
ss
jno
inc
sub
adc
mov
or
push
ljmp
in
xor
test
test
sbb
enter
lret
bound
cs
push
lds
and
or
xchg
xor
pop
xor
cltd
es
mulps
lods
ss
or
sub
dec
mov
inc
jb
sub
je
fs
pop
cmp
ret
scas
mov
mov
pop
pop
or
cmpsl
js
imul
cmp
cltd
sub
add
hlt
push
or
je
inc
push
int
in
add
inc
fs
pop
mov
push
lret
jg
sbb
fdivr
and
arpl
jns
loop
adc
icebp
mov
and
hlt
and
pop
sbb
mov
gs
cmp
add
add
or
adc
sbb
inc
mov
xchg
fdivr
or
cmp
ss
mov
cmp
jge
movsb
sti
xor
dec
dec
mov
add
in
fists
and
and
cld
mov
lds
add
adc
or
and
orb
test
pop
xor
jno
and
nop
dec
ret
dec
push
fwait
enter
pop
push
mov
in
fdivrs
aad
insb
out
mov
dec
and
pop
dec
imul
shll
test
out
cmc
push
out
stc
mov
lahf
in
lods
jb
and
cmp
push
jp
cld
cmp
xchg
fwait
pop
pop
inc
addr16
rcr
jle
repnz
pop
lcall
mov
lea
cmpsb
mov
and
lock
mov
and
sub
nop
push
cld
loopne
ja
sub
jg
punpcklwd
pop
cmc
push
int
cmpsl
iret
fabs
push
cmc
inc
dec
xchg
inc
and
mov
mov
out
cmpsb
aas
ds
js
xchg
or
sbb
cwtl
adc
decb
xchg
jmp
jg
fs
hlt
out
cmp
jb
pop
and
sub
arpl
fld
out
mov
add
sub
jbe
pop
std
sbb
cli
add
stc
in
lods
sub
mov
ds
xchg
in
loopne
push
into
adc
mov
push
imul
push
ret
lds
jb
aas
xor
lock
add
mov
sub
mov
dec
jmp
inc
pushf
mov
jecxz
orl
popa
push
mov
or
clc
es
mov
dec
jo
push
imul
sahf
in
mov
dec
rol
out
cli
fisubrl
cmp
not
push
fdivl
or
fistl
imul
popa
jae
mov
mov
out
loope
cmp
int3
xchg
mov
lock
jbe
add
xchg
and
jmp
imul
push
dec
in
inc
fisttpll
aaa
movsl
fadd
lods
aaa
hlt
jmp
out
imul
xchg
out
jnp
loop
lcall
aad
out
sbb
mov
scas
lahf
mov
mov
mov
push
les
sbb
popl
ret
sub
mov
adc
jg
jp
in
pop
lds
cmp
das
popa
mov
sub
hlt
pop
and
and
or
xchg
nop
jb
cmc
pop
sub
pusha
push
push
mov
pop
nop
cmp
cmpsl
js
in
mov
rcr
sbb
ja
movsl
inc
idivl
xor
addr16
push
decb
in
js
fsubrl
inc
ud2
dec
sub
sbb
and
fdivs
pop
das
mov
popa
mov
pop
add
jge
rcr
sbb
out
cmp
data16
pop
ret
sbb
out
rorl
pop
add
and
aaa
dec
mov
mov
pop
push
pop
aas
in
xor
test
add
jp
mov
fsubrp
mov
outsb
jo
mov
cwtl
test
inc
pop
lcall
xchg
and
push
xchg
adc
push
popa
cmc
pop
clc
add
imulb
inc
push
icebp
add
mov
xor
jnp
fsubl
mov
push
aaa
iret
outsl
test
push
sbb
movsl
pop
xor
rorb
jno
push
dec
xorb
inc
jg
cmpsb
out
ficoms
lret
loopne
ret
pop
cmp
repnz
dec
mov
notl
xchg
sbb
cmp
ret
je
int
icebp
xlat
pop
jp
mov
cmpsl
lahf
cwtl
cmpsl
mov
outsb
mov
cltd
or
outsb
popf
xchg
push
imul
lods
xchg
and
mov
sbb
add
and
jl
mov
cmp
push
cmpsl
pop
dec
jg
jae
mov
repnz
sbb
dec
in
jno
sub
clc
mov
aaa
movsb
out
inc
daa
sub
cmp
ljmp
call
mov
pop
or
sbb
enter
push
sub
pop
cwtl
lret
cmp
mov
mov
jecxz
ds
mov
fcmovb
inc
test
shll
cmpsb
and
pop
in
lret
gs
ret
jp
jb
xchg
push
pop
rorb
pop
loop
add
mov
imul
cltd
lcall
sub
lcall
fists
data16
rol
xchg
jae
iret
and
push
test
and
fmull
mul
repz
imul
add
and
fimuls
mov
jle
pop
cld
ud2
adc
or
add
push
test
cmp
push
insb
or
fcmovb
sub
test
push
lds
push
cmpb
cli
sub
negl
fisubs
dec
mov
sahf
push
scas
push
mov
fisubrs
jle
push
scas
push
sahf
mov
jle
outsb
ficomps
dec
mov
sahf
push
scas
push
mov
fisubrs
jle
push
scas
push
sahf
mov
jle
outsb
xchg
pop
xchg
dec
mov
ss
scas
push
mov
fisubrs
jle
push
scas
push
lahf
push
mov
jle
outsb
ficomps
dec
mov
sahf
sahf
mov
je
into
or
xchg
loope
shll
sub
aas
ljmp
or
mov
dec
pop
imul
jmp
dec
cli
aas
ljmp
jg
dec
lcall
out
pop
lahf
dec
scas
dec
ljmp
iret
sbb
or
ret
jno
pop
mov
sbbb
jp
dec
out
cli
aas
test
pop
fwait
push
jae
movswl
imul
xchg
jns
gs
pop
adc
ret
lret
in
jae
cli
ret
pusha
rcrl
pop
ret
jne
test
xchg
or
arpl
iret
ljmp
jp
or
inc
test
mov
mov
lahf
mov
dec
rep
push
adc
nop
mov
pop
stmxcsr
popa
adc
ljmp
sarb
adc
xchg
jp
ffreep
xchg
aam
popl
stos
cmp
cmp
dec
rorl
push
and
inc
nop
xor
ficompl
imul
sbb
or
in
imul
mov
stc
xchg
imul
push
cmpsl
and
xor
add
or
dec
cwtl
jnp
scas
add
pop
out
scas
adc
cli
das
popf
pop
xchg
sub
xchg
pop
cmpl
movsl
push
mov
or
aas
out
xchg
dec
nop
sub
cli
push
ljmp
jg
dec
lcall
pop
lahf
dec
out
cmp
sub
sbb
or
cli
aas
ljmp
jg
dec
lcall
pop
lahf
dec
out
cmp
sub
sbb
or
cli
cltd
stc
int
mov
push
std
xchg
jecxz
xchg
in
inc
mov
jb
sbb
push
push
jns
test
push
idivb
mov
or
mov
aad
inc
mov
pusha
iret
enter
popa
je
jmp
push
sbb
hlt
ss
or
loopne
pop
cmpsb
mov
lds
jp
jne
ret
sub
mov
mov
or
pop
sahf
or
inc
add
cmpb
sub
js
and
and
ja
lds
sbb
daa
cli
xor
jmp
ljmp
popa
cmpsb
push
icebp
test
dec
mov
push
add
xchg
pop
inc
stc
push
mov
jp
test
adc
xchg
xor
je
test
stos
shll
xor
gs
or
scas
inc
xor
xchg
inc
inc
lds
dec
xor
push
lret
jle
test
adc
lahf
cwtl
addb
pop
shl
pop
sub
dec
gs
cltd
cli
adc
dec
pop
jnp
fidivrs
imul
movsl
mov
mov
inc
in
and
dec
adc
lea
ds
in
je
sub
mov
dec
xor
xchg
or
lahf
dec
xchg
cmp
bound
loopne
mov
jnp
dec
jne
sbb
daa
adc
and
cs
xor
stos
push
or
mov
rcll
cmp
dec
pop
out
pop
loopne
xchg
adc
lods
in
and
xchg
pop
outsb
pop
xchg
pop
movsb
loopne
in
pop
cld
mov
lret
mov
insb
pop
or
movsl
or
inc
lods
sbb
sub
inc
ljmp
imul
andl
daa
sub
iret
lcall
pop
xlat
leave
cltd
cs
and
mov
jne
mov
jl
cmp
into
mov
xchg
push
cmovge
dec
testl
sahf
jb
das
nop
xchg
inc
sub
movb
out
or
ljmp
mov
fwait
insl
testb
mov
je
mov
push
push
dec
pcmpgtw
sar
out
xchg
pop
pop
ret
mov
dec
fisubrs
fcmovbe
or
or
sahf
loope
xor
push
mov
out
test
cld
mulb
or
incb
jns
pushf
imul
imul
pop
ror
mov
mov
jb
sbb
pop
test
xchg
js
mov
add
sub
jecxz
loopne
lea
lds
cli
xchg
dec
fucomip
and
xchg
repnz
adcl
and
mov
inc
jb
jge
dec
les
gs
jp
int3
sub
mov
pop
subl
out
test
adc
push
mov
loopne
in
cmp
outsl
push
daa
jle,pt
psrlq
imul
pop
jecxz
push
adc
arpl
add
outsl
fildl
test
lods
xchg
jne
lds
sbb
inc
add
leave
inc
aas
arpl
ds
jle
pop
in
sbb
je
into
push
inc
xchg
dec
jecxz
pop
push
adc
and
sbb
or
ds
mov
scas
pop
mov
ds
cmp
mov
pop
aam
pushf
clc
and
sbb
inc
push
fdivrl
push
movsl
arpl
fidivrs
cmpsl
sbb
mov
push
sbb
sbb
jmp
xor
push
or
js
push
adcb
int
jle
mov
dec
xor
mov
cmp
enter
inc
les
push
xchg
or
sahf
dec
mov
sub
push
mov
sub
jno
lret
in
test
lods
xor
inc
mov
xchg
sub
ja
nop
push
inc
cmpsl
rol
jns
jmp
xlat
mov
xor
sarl
mov
test
adc
out
ror
add
mov
lret
mov
ds
outsl
ljmp
aaa
lods
xchg
mov
and
iret
jne
test
sbb
shll
addl
jp
sub
xchg
pop
mov
push
rcrl
pop
fwait
jo
push
xchg
inc
inc
pop
inc
mov
loope
int3
mov
test
pushf
jp
jle
test
cmc
orl
ret
dec
mov
test
inc
mov
stos
adc
outsb
dec
cs
xor
imul
or
xchg
inc
ljmp
jge
cmp
data16
add
mov
and
shll
push
xchg
adc
ror
scas
pop
add
fsubl
sar
pop
jle
and
lret
xor
pop
in
push
sbb
test
add
jg
jo
sbb
fiadds
int3
das
mov
dec
jmp
orb
xchg
push
in
jnp
cli
xchg
ret
inc
loopne
ja
outsl
push
xor
push
in
pop
test
adc
les
sarb
int3
and
std
jb
aam
xlat
mov
pop
xor
push
cmpb
in
ds
les
xchg
jle
dec
dec
lret
lret
dec
cmp
pop
call
lds
cmp
xchg
or
xchg
xchg
mov
div
out
dec
pushf
ds
xor
pop
cmp
les
js
divb
js
xor
add
inc
iret
mov
js
jb
sbb
mov
addr16
cwtl
das
mov
mov
push
push
add
cmp
cmp
insb
pop
or
jne
push
mov
lcall
ds
in
fwait
jne
leave
out
rcll
das
data16
out
cmp
xchg
insl
mov
movsl
sbb
xchg
lods
lods
imul
stos
fwait
cli
push
dec
insb
xchg
push
out
pop
dec
into
cmp
sti
cltd
cld
jns
sbb
adc
mov
ds
cmp
inc
iret
or
mov
popa
jecxz
adc
cs
aad
repnz
inc
in
push
scas
jne
xchg
sahf
arpl
ds
and
dec
iret
ss
mov
add
lcall
xorl
cmp
xchg
sub
cmp
push
in
shlb
mov
outsl
push
sub
cld
fwait
xorb
cmpsb
int3
mov
loop
or
daa
repnz
ja
dec
lock
cmpsb
adc
mov
xor
or
popf
sbb
or
pop
lods
out
cmpsl
loopne
and
scas
test
loop
mov
dec
mov
std
in
ficomps
add
mov
ds
repnz
stc
popa
mov
pop
dec
mov
fisubrs
cmpsl
xchg
loopne
or
mov
ds
rcll
jb
mov
dec
ficoms
add
xchg
enter
pop
mov
and
cmp
stos
xchg
push
ja
int
mov
loope
ljmp
push
mov
push
inc
xchg
push
inc
outsb
or
mov
call
pop
jno
popf
mov
fldenv
lds
rorb
mov
jnp
incb
cmp
mov
xor
mov
adc
cld
fistpll
and
adc
mov
push
sub
sub
enter
je
and
mov
mov
mov
mov
out
int3
xlat
or
inc
or
rol
pushf
sub
sbb
ja
gs
push
cltd
loope
jge
mov
xchg
cmp
insl
pushf
sub
stos
and
leave
and
js
push
aas
in
mov
push
mov
sbb
xchg
mov
cs
jmp
pop
std
loope
jno
int
popa
jo
cvtps2pd
clc
int
divl
or
jp
aaa
sbb
pop
cmp
fwait
popa
cmc
lds
mov
or
mov
movsl
rcll
push
adc
cld
mov
ror
push
pop
call
mov
sbb
jbe
xchg
and
pop
mov
fst
into
and
lcall
popa
add
ds
mov
js
sbbl
mov
aas
scas
fistpll
outsl
push
aaa
cld
cli
ret
rcrb
cmc
call
in
add
mov
enter
lahf
repz
shlb
jae
cld
xchg
xchg
in
and
inc
scas
js
cli
insl
mov
jns
mov
jl
sti
into
test
shlb
test
pop
jge
insb
mov
push
mov
xchg
inc
int
call
je
jge
stos
add
dec
sub
xchg
push
es
jne
mov
dec
push
jmp
js
fimuls
xchg
push
mov
es
or
cmp
popa
mov
jg
dec
movsb
inc
pop
push
movsb
bound
add
inc
push
daa
imul
sbbl
int3
jns
cwtl
rorb
inc
mov
cmp
add
xor
imul
fimull
add
inc
xchg
add
mov
je
ficoml
push
outsl
imul
addr16
faddl
jle
cwtl
cli
adc
icebp
push
push
ficompl
mov
cmp
dec
fists
loope
int
add
jmp
pusha
frstor
pop
sub
jmp
dec
lss
sbb
add
sbbl
adc
cmp
mov
in
ficomps
cmp
sub
xor
cmpsl
dec
movsl
add
cmpl
nop
mov
xchg
dec
add
lock
aas
jle
dec
mulb
out
cld
mov
test
sbb
push
jnp
or
inc
push
int
xor
pusha
or
lahf
dec
jg
cld
xor
pop
mov
loope
test
in
mov
or
inc
cmp
inc
cmp
cli
push
insl
outsl
xor
push
fstp
dec
pop
scas
pop
add
add
aam
ret
push
dec
mov
outsb
push
or
add
movl
mov
clc
adc
sbb
clc
clc
pop
or
loop
aas
pop
aad
adc
push
fstps
jbe
mov
mov
mov
xor
movsl
fstl
dec
mov
ret
sar
cmp
add
sahf
mov
in
xor
out
add
in
and
or
je
sbb
mov
mov
lods
pop
popf
imul
jle
hlt
mov
jae
addb
inc
jb
push
loop
cltd
adc
dec
sub
push
gs
dec
ljmp
pop
das
out
loopne
movsb
and
shr
push
cmp
adc
inc
ror
mov
adc
stos
cmp
mov
adc
jle
nop
sub
loop
add
out
mov
pusha
xchg
inc
pop
lock
and
popa
push
mov
mov
jns
fildl
aaa
push
addb
dec
je
or
roll
pop
lods
push
arpl
in
scas
pop
clc
lcall
mov
and
pop
mov
rorl
inc
pop
cmp
and
sarb
pushf
shlb
and
int
push
pop
je
in
mov
sbb
lods
mov
rorb
adc
rcr
stos
js
jno
fidivrl
mov
or
push
cwtl
lods
add
jns
sub
adc
xchg
outsb
cmc
inc
scas
and
ss
cltd
xor
cmp
dec
loope
mov
cmp
nop
test
xor
mov
mov
adc
xor
repz
out
sbb
insl
aad
cmpsb
or
jmp
mov
xor
adc
sub
out
or
stos
dec
push
or
jnp
mov
cmp
scas
dec
lea
or
jb
aam
push
in
shr
sbb
and
sar
dec
pop
sbb
les
pushl
xchg
mov
fdivrs
push
mov
pop
lahf
lea
adc
aaa
jb
scas
jg
ss
dec
cmpsl
aaa
sbb
sbb
test
int
mov
into
daa
dec
in
add
out
inc
push
jmp
in
rcl
fisubrs
xchg
mov
or
add
ds
out
out
test
test
push
movups
in
das
mov
dec
test
xchg
jge
dec
movsl
push
and
sbb
pop
js
mov
cmpb
ja
cmc
lahf
pop
jecxz
push
inc
pop
lret
and
es
inc
arpl
and
mov
push
stos
js
fdivl
jp
notl
into
xor
or
aas
jmp
dec
cwtl
lods
daa
mov
jg
xor
dec
std
scas
loop
int
pop
or
xorl
pushf
jle
dec
shrb
adc
add
adc
push
adc
divl
sbb
fs
mov
pop
mov
xlat
jg
add
mov
les
xor
leave
lods
mov
enter
xor
stc
in
rcll
cmc
and
ja
popa
popa
lods
leave
sbb
and
mov
cmc
and
inc
bound
xor
lret
sub
sub
je
ficoml
bound
pop
dec
scas
fisubs
testl
movb
daa
insb
test
cmpsb
nop
ljmp
push
cmp
bound
sbb
adc
lcall
fstps
je
lret
aad
nop
movsl
aaa
xchg
cltd
js
pop
fwait
jns
call
icebp
mov
ss
sub
mov
mov
sub
fxch
push
sbb
ss
push
fisubrs
adc
inc
shll
mov
push
inc
xlat
aas
sub
push
push
sbb
icebp
js
test
iret
xor
popa
jmp
mov
jmp
call
mov
loopne
and
mov
fnclex
sub
xor
out
dec
dec
in
jae
mov
ret
mov
fdivl
fdivrl
adcb
out
inc
jne
and
js
cwtl
lock
shr
mov
int3
mov
adc
push
xchg
mov
inc
shlb
xchg
cmpsb
icebp
xor
mov
jecxz
xchg
sti
ret
mov
push
xchg
fdivl
mov
adc
xchg
fldenv
cmp
mov
arpl
pop
add
sbb
iret
aam
xor
rcll
pop
test
out
cwtl
sbb
fwait
shlb
inc
dec
imul
ljmp
cmp
movb
fists
ja
add
push
xchg
xchg
mov
out
rep
aas
and
cmpsl
dec
cs
cli
inc
mov
jnp
aas
add
mov
and
cwtl
sti
je
cs
or
inc
sub
lret
in
add
dec
mov
jnp
sub
cltd
or
clc
xor
insb
scas
cmpsl
mov
mov
sahf
jmp
into
xchg
and
mov
add
cmp
xchg
sbb
sbbb
mov
push
rolb
inc
jae
and
mov
dec
shlb
mov
test
daa
jns
inc
cmpsb
jl
sbb
mov
xchg
mov
sub
jb
iret
dec
mov
shll
pop
mov
jmp
xchg
sarl
add
xchg
push
push
jo
push
in
cld
rorl
jge
cld
mov
cmpsl
cmp
jle
dec
xchg
sarb
hlt
test
in
push
fsubs
in
jge
jns
mov
cmp
adc
pop
inc
jmp
jae
imul
push
or
arpl
dec
cs
pop
lds
ds
sub
sbb
popf
mov
stc
add
sbb
pop
cmc
imul
jp
imul
insb
pop
in
jbe
push
fdivrl
iret
xchg
shl
sub
jns
pusha
jbe
push
fdivrs
pop
xchg
scas
cmp
pusha
xor
imul
and
cmpb
jl
mov
inc
xor
negb
mov
or
outsb
jmp
cli
cmp
pop
shll
jb
xchg
lret
outsb
shr
push
pushl
lret
sub
test
cwtl
fildl
xchg
sbb
sbb
dec
data16
mov
icebp
pop
push
push
jg
xchg
jp
stos
cmp
shl
sarl
xor
pop
mov
adc
lcall
or
mov
rclb
inc
jle
mov
cmp
aad
sub
imul
fstpt
dec
stc
pop
and
jmp
add
psubusb
or
pop
pop
dec
mov
test
je
cmp
stos
inc
testb
jns
lea
nop
cmp
push
cltd
add
fwait
cmpsb
add
stc
repz
add
mov
ds
aaa
cmp
jae
add
addr16
jmp
testl
mov
sbb
adc
mov
pop
addr16
lods
divb
push
or
push
xchg
mov
cmpsl
aaa
or
addr16
sub
loopne
imul
pusha
jns
jge
ss
repnz
aad
mov
mov
sbbl
sub
mov
lcall
outsb
jl
nop
mov
push
add
push
scas
xchg
test
cli
outsb
in
and
jmp
lcall
or
pop
sbb
and
or
into
inc
or
shr
cld
lds
clc
mov
out
roll
mov
xchg
adc
sarb
xchg
inc
jge
add
in
das
push
mov
mov
xor
fldenv
cwtl
lods
pusha
fst
ret
pop
mov
andb
pop
lds
cltd
pop
mov
movsl
icebp
mov
mov
mov
push
lret
push
xchg
fwait
in
mov
adc
fstpl
sub
stos
sub
push
scas
cld
aaa
inc
mov
pshufw
mov
adc
outsb
or
adc
sbb
inc
dec
out
lods
push
gs
jae
xor
rcrb
mov
aas
inc
outsl
xchg
ds
push
mov
imul
in
ret
cltd
movb
cmp
or
mov
in
pop
xor
add
pop
scas
cltd
or
sub
orl
adc
pop
mov
fldenv
fwait
addr16
pop
push
insb
inc
cltd
iret
mov
les
or
xor
cmp
lods
mov
mov
dec
jmp
stos
jg
das
ljmp
loope
mov
movsl
aaa
mov
mov
cmp
dec
xor
out
js
pusha
push
outsb
cmpb
adc
dec
mov
idivl
lahf
fidivl
push
scas
icebp
hlt
mov
xor
push
in
test
jge
pop
hlt
jle
xchg
out
sbbl
push
sahf
pop
or
int3
fwait
lret
adc
std
adc
mov
add
js
xor
jp
ss
test
adc
xorb
in
xchg
adc
adc
xchg
xor
call
mov
rcll
enter
test
mov
aad
fdivr
lea
xchg
lock
adc
int
ret
xlat
fmulp
repz
mov
jbe
hlt
xor
sub
or
pop
jne
stos
adc
dec
int
sub
incl
jae
in
sbb
xor
pop
je
dec
popf
int3
clc
and
dec
enter
push
push
xchg
lods
movsb
stos
in
in
mov
jge
xor
jns
mov
cmpsb
or
sbb
je
push
sahf
push
xchg
or
inc
adc
lahf
test
and
mov
cmpsb
pop
stc
ja
dec
in
xor
ja
aam
hlt
scas
jne
xchg
imul
shlb
mov
add
andb
or
dec
arpl
hlt
incb
hlt
jmp
rsm
inc
push
mov
xor
fnstcw
or
cmp
inc
mov
or
out
cli
and
fnstcw
ljmp
insb
call
out
push
xor
jbe
push
mov
mov
inc
push
stos
mov
mov
sub
sub
fmuls
popl
and
lret
adc
add
or
fnstsw
jmp
aam
mov
pause
hlt
loope
scas
in
sbb
and
out
mov
int3
push
adc
inc
imul
push
sub
sub
inc
int
andl
jl
cmp
mov
jl
aad
std
jne
inc
mov
jmp
push
leave
scas
cld
out
pop
outsb
xor
or
fcomip
test
cld
rcl
jmp
lds
jae
stos
subl
cltd
scas
mov
addl
adc
push
jno
in
int3
jmp
xchg
addr16
push
outsl
loop
dec
xor
inc
jnp
insl
pop
in
push
imul
adc
mov
push
push
dec
rol
inc
ret
mov
ja
cltd
push
out
test
dec
rorl
or
jle
xchg
xchg
dec
sbb
adc
mov
mov
push
call
sbb
fsincos
xlat
cwtl
subl
pop
scas
mov
xchg
leave
stos
xchg
inc
js
ret
repnz
cli
bnd
xchg
insb
popa
mov
jecxz
mov
aaa
imul
mov
cmp
shrl
insl
cli
icebp
lret
aam
stos
lahf
fldt
sbb
and
movsb
inc
dec
adc
out
jno
lcall
int
or
cld
or
mov
push
sbb
mov
mov
jecxz
shrl
ret
and
sbb
std
dec
ljmp
jg
dec
lcall
pop
lahf
dec
out
cmp
sub
sbb
or
cli
aas
ljmp
jg
dec
lcall
pop
lahf
dec
out
cmp
sub
sbb
or
cli
pminsw
pop
lret
jg
dec
lcall
jg
lahf
dec
out
cmp
sub
push
aaa
push
cmp
arpl
push
fidivrs
lret
outsl
stos
dec
lcall
and
mov
push
xor
jne
sbb
idiv
in
xlat
sub
mov
jnp
push
insb
push
sbb
push
aaa
sub
sub
fsub
int3
idiv
in
xlat
pushf
cmpsl
mov
dec
gs
ja
bound
inc
cmp
cmp
sub
mul
fcomip
into
test
lods
lea
outsl
dec
and
adc
sbb
arpl
push
jnp
mov
mov
pop
iret
dec
mov
sbb
mov
cmc
inc
xor
adc
or
dec
pop
mov
push
sub
or
gs
adcb
dec
mov
rcrl
sbb
jo
cwtl
stos
mov
icebp
or
or
mov
inc
sti
loope
sbb
lock
cmp
sub
fnsave
enter
lea
fildll
mov
xchg
test
je
enter
jge
filds
jno
or
arpl
pop
xchg
pop
ljmp
in
or
ret
pop
cmp
xor
sub
mov
popf
mov
mov
shll
cmp
pop
je
inc
cmp
sub
adc
xlat
in
int
cmpsl
pushf
mov
sahf
mov
inc
jg
outsl
fs
jne
add
adc
es
sub
mov
test
out
icebp
ljmp
push
and
movlps
cmp
imul
lods
notl
aam
test
sub
jl
sub
pop
dec
imul
cmpsb
mov
mov
mov
addr16
ja
inc
insb
push
sbb
or
cmp
sub
fsub
int3
idiv
in
xlat
pushf
cmpsl
mov
pop
addr16
ja
inc
insb
push
sbb
or
cmp
sub
fsub
jecxz
inc
out
lock
jge
or
nop
int
pop
out
pop
push
je
inc
out
jmp
loopne
cmp
push
popf
lcall
push
shrb
lds
add
lahf
in
bnd
sbb
xchg
ljmpw
sbb
sbb
in
xor
pop
hlt
test
movsl
inc
leave
xchg
xchg
insb
movzbl
xchg
cmp
sub
push
fwait
mov
dec
mov
sar
or
pop
pop
cs
sbb
ja
and
out
add
pop
jae
mov
ljmp
fs
cld
xor
lcall
bnd
hlt
inc
dec
dec
mov
dec
xor
rcr
insl
xor
jmp
inc
or
lods
xlat
mov
xor
insl
loop
xlat
dec
sbb
fldl
push
xor
addb
mov
pop
push
push
insb
mov
sub
outsl
into
pop
cmpsl
xchg
inc
xchg
add
adcb
dec
test
subl
mov
fidivs
sti
mov
or
orl
push
jne
dec
mov
xor
pop
push
push
test
xor
and
push
mov
cli
gs
scas
adcb
add
push
stos
sub
popl
mov
adc
mov
leave
mov
out
neg
dec
testb
lock
xlat
lahf
adc
je
pop
notb
xchg
xor
idivl
dec
aaa
mov
aaa
in
movsb
mov
xorb
loopne
dec
test
and
sbb
imul
and
jns
pop
adcl
jae
sub
sbbb
add
ds
sbb
rcrb
dec
sti
mov
loopne
imul
popw
dec
push
ret
sbb
dec
pusha
adc
inc
xchg
mov
inc
fdivs
icebp
and
test
insl
push
mov
inc
sub
pop
xchg
pop
scas
add
inc
dec
ja
je
or
sbb
mov
or
into
test
sbb
or
lahf
jnp
xchg
xchg
mov
push
ja
cwtl
cmp
aad
aaa
lret
data16
and
pop
jno
hlt
xchg
jecxz
movsb
inc
fucom
lcall
push
shll
out
sub
lcall
testl
pop
movsl
out
outsb
shrl
insl
mov
mov
pop
enter
enter
andb
jno
xor
cmpsb
jge
imul
std
ja
imul
dec
add
jle
daa
int3
je
inc
adc
sbb
sub
or
in
and
out
xchg
movsl
pop
je
xchg
mov
cltd
jbe
sub
cmp
push
inc
jns
fisttps
scas
or
push
add
mov
rclb
mov
les
dec
mov
loop
xchg
jo
leave
xchg
inc
cmp
dec
xlat
bound
imul
or
xlat
xlat
mov
add
movsb
mov
sbb
inc
flds
adc
in
push
dec
insl
jecxz
insb
js
mov
mov
mov
out
mov
sub
mov
ret
adc
mov
sub
xchg
cmpsl
cmpsb
mov
sub
stos
sbb
inc
repz
mov
pop
xchg
cwtl
pop
jl
mov
push
imul
les
mov
icebp
push
ljmp
pop
inc
cmc
out
out
lret
mov
mov
xor
xchg
mov
xchg
jne
sub
mov
leave
popa
mov
jo
in
movsl
pop
pop
inc
mov
hlt
stos
push
cmp
or
sub
out
cmpsb
sbb
push
out
leave
add
fbld
jmp
ss
push
in
pop
sbb
adc
or
popf
dec
test
sbb
and
divl
outsl
mov
iret
shll
movsb
fldenv
std
cmp
fcompl
movsl
lret
out
loope
ss
lret
ds
lods
nop
insl
insl
test
scas
sbb
fistl
iret
insb
cmc
lods
dec
cmp
jg
stos
ds
adc
cwtl
push
lcall
inc
mov
jnp
sti
daa
mov
mov
dec
jbe
sbb
out
mov
enter
mov
xor
xor
cs
cmc
enter
sti
mov
in
mov
dec
lret
mov
mov
xchg
xor
add
imull
push
xor
sub
out
mov
sbb
dec
les
cmpl
adc
push
xchg
dec
push
push
cmpb
cmc
cmpsb
fmuls
lcall
xor
pop
cmp
dec
fs
push
dec
ljmp
dec
jno
ret
icebp
les
das
fldt
and
pop
scas
mov
mov
mov
lea
mov
shll
nop
jl
test
xor
lret
cltd
in
push
add
cmp
movsb
inc
inc
xorb
push
in
icebp
xchg
pop
fs
mov
mov
xchg
jecxz
add
and
mov
mov
adc
xlat
cli
jle
sbb
aam
xor
mov
mov
jnp
sahf
cld
xchg
mov
jb
pop
sub
inc
mov
push
ret
in
jmp
pop
mov
ret
test
rcll
mov
inc
aas
xchg
lds
cld
ret
sub
pop
pop
jns
stc
jge
data16
adc
fs
in
mov
cltd
push
xchg
fildll
jae
fnsave
cs
inc
pop
ficoml
and
mov
ror
rcll
dec
sbb
dec
inc
lods
dec
mov
push
stos
mov
push
mov
jg
jl
pop
fidivs
fisttpll
dec
push
jg
popf
mov
scas
dec
ds
sbbb
stc
sbb
test
pop
adc
push
sub
sbb
cli
cmp
pop
jle
push
mov
mov
test
jge
pusha
or
fcoms
rcr
pushf
repz
sub
data16
data16
lock
mov
sarb
mov
das
push
or
mov
or
xor
xor
push
mov
adc
add
insl
push
lret
imull
dec
sub
jno
fwait
inc
xchg
add
aad
cmp
test
inc
cmp
xchg
cwtl
xchg
or
xchg
xchg
ja
sbb
stos
bound
xchg
push
out
mov
xchg
or
jg
aas
std
xor
hlt
push
sbb
repnz
loopne
imul
mov
push
int3
popf
test
dec
loope
lods
cmp
push
test
inc
mov
inc
fstpl
dec
xchg
add
sbb
mov
pushf
jo
inc
cltd
andl
mov
cs
and
addr16
sbb
pop
pop
sub
xor
jecxz,pt
stos
adc
lret
shlb
stc
pop
lahf
sbb
pusha
and
pop
shl
push
push
andl
jb
dec
sbb
mov
sub
pop
dec
pop
js
dec
shl
imul
in
cmpb
lods
adc
cwtl
test
jne
dec
arpl
int3
pop
leave
test
jb
dec
sub
aaa
pop
cmp
mov
inc
jmp
sub
aas
and
aam
dec
and
lahf
pop
mov
popf
mov
mov
add
call
out
std
xchg
sbb
and
xchg
lods
cwtl
pop
jb
fidivrl
in
out
lahf
cmp
adc
call
int
mov
int3
lods
cmp
cmp
fsubp
data16
ret
mov
dec
mov
jno
pop
mov
clc
add
out
or
adc
and
mov
jmp
dec
loopne
xchg
mov
jbe
test
xor
add
cwtl
sahf
ds
xchg
fisttpll
adc
jne
stos
lods
imul
scas
fs
sbb
cmpsl
or
mov
xor
jle
sbb
ljmp
sub
mov
scas
mov
jno
sarb
xchg
mov
out
push
add
ret
mov
jno
sbb
inc
lret
xor
jge
sti
es
sub
inc
xchg
nop
hlt
scas
test
sub
les
jge
xchg
push
and
inc
and
adc
jo
push
jae
xchg
push
lret
testl
inc
cmp
mov
insb
xchg
notb
stos
mov
stc
mov
xchg
hlt
mov
rorb
jne
jae
xor
sarb
sub
mov
xorl
adc
dec
mov
cld
sahf
sahf
mov
test
pop
jb
call
nop
xlat
aam
test
fwait
scas
nop
fildl
sub
mov
testb
mov
mov
dec
mov
adc
cmpsl
hlt
cmpsb
jo
jae
xchg
adc
aas
adc
insl
adc
add
xchg
or
add
push
push
std
jp
pop
les
sbb
dec
adc
out
fucomi
shl
mov
shl
dec
lods
aas
loope
sbb
add
xchg
fiaddl
test
fisubs
push
lahf
loopne
jge
mov
mov
add
inc
data16
dec
daa
dec
add
cld
push
and
mov
cld
xlat
mov
pop
mov
mov
mov
fisubs
adc
push
dec
mov
ljmp
lea
push
in
aaa
aas
adc
fcomi
jns
insl
in
test
addl
xlat
gs
mov
pop
sbb
popf
gs
add
lret
pop
clc
iret
jmp
xchg
addr16
mov
mov
mov
jle
test
repnz
and
xchg
shr
mov
movsb
mov
push
test
mov
mov
push
mov
add
lret
xchg
out
mov
add
or
xor
add
cmp
aaa
adc
lea
into
cltd
jg
gs
sahf
xor
addr16
lods
jo
sbb
ds
aas
movsb
jb
push
loop
inc
or
mov
cmp
cmp
sub
ljmp
push
jg
pop
enter
std
adc
xchg
arpl
test
add
icebp
js
jle
imul
push
lods
into
sbb
fbstp
loopne
dec
sbb
add
fprem
rolb
mov
shll
fimull
je
push
in
jecxz
lcall
fsubs
xchg
sub
mov
imulb
cld
mov
sub
int
test
sahf
jnp
cmp
sarb
rcr
insb
mov
insb
jl
sub
xchg
pop
cltd
cmp
fsubrl
data16
aad
cmp
sub
or
or
pop
pusha
dec
clc
add
out
inc
jl
imul
xchg
jmp
pushf
adc
xchg
jp
xchg
inc
dec
xor
rorl
mov
imul
push
mov
movl
std
push
aas
repz
data16
mov
stos
daa
loop
outsb
in
pusha
pop
dec
pop
lods
add
jecxz
add
gs
aas
sti
mov
sbb
add
fisubl
mov
cmp
pop
fldcw
int
cmp
js
or
push
addr16
notl
xor
lret
jnp
ljmp
and
push
jbe
inc
add
out
mov
into
ret
lret
adc
jp
mov
mov
sub
fsubl
xchg
popa
lret
cmp
mov
lret
cli
dec
int
jecxz
ret
orb
pop
in
outsl
sub
imul
push
push
ja
push
nop
push
sbb
cmp
das
jl
arpl
mov
fwait
sub
xor
vpsllw
xchg
mov
rclb
mov
movb
test
dec
pop
sub
mov
pop
aaa
insb
lret
add
addr16
movsb
jecxz
inc
sbb
cmp
mov
or
fsubrl
sbb
mov
lcall
push
lock
mov
xchg
pushl
add
icebp
fimull
cmp
lret
std
cs
mov
mov
stc
mov
inc
pop
add
mov
jmp
imull
sub
xlat
mov
movsb
repz
leave
mov
sub
adc
mov
add
add
push
push
mov
pop
sbb
ret
stc
sub
hlt
je
cmp
sbb
pop
stc
push
incl
out
jns
sub
pop
icebp
pop
aad
aaa
jp
test
push
mov
in
xor
lret
into
lods
imul
cmpsl
add
sbb
xor
and
mov
pop
or
mov
stos
std
scas
les
xchg
sbb
add
sbb
into
sub
in
scas
adc
stos
data16
or
pop
cmp
aaa
xorl
xor
cld
fwait
repnz
dec
loopne
fwait
test
mov
dec
dec
lret
sarb
mov
mov
mov
sub
push
insl
xchg
je
or
pop
push
push
inc
or
fxch
adc
test
xchg
mov
shlb
push
push
mov
and
decb
loope
sbb
cmp
loop
aas
push
enter
dec
xchg
andb
xchg
mov
call
pop
insb
adc
jns
xor
es
sbb
pushf
in
adc
outsb
aam
in
cmp
and
push
jno
mov
in
mov
popf
test
pop
pop
xor
std
or
orl
leave
push
je
and
push
or
sub
dec
aaa
insl
sbb
pop
lret
and
scas
inc
addr16
dec
std
mov
gs
lods
adc
arpl
pop
enter
inc
je
inc
push
sbbb
out
or
and
push
sbb
clc
fists
adc
inc
cli
mov
pop
mov
jns
push
sbb
es
adc
icebp
pop
sub
adc
add
clc
dec
out
mov
mov
xor
inc
test
add
mov
mov
cltd
in
rep
popa
stos
ss
mov
jp
repnz
inc
pop
push
xchg
mov
js
sbb
push
sub
mov
dec
in
leave
lds
xchg
push
aas
daa
mov
andl
cmc
jo
add
dec
push
cli
fs
and
ljmp
cmp
dec
cmp
fnsave
xor
lea
cmpb
pushf
lds
inc
add
adc
js
aam
lods
loop
insl
fsubrs
das
sbb
mov
xchg
and
ljmp
push
lea
fwait
outsl
icebp
push
mov
pusha
jns
hlt
adc
cmp
mov
stos
or
adc
mov
gs
jl
or
mov
xchg
popf
pop
sbb
push
add
icebp
out
xchg
xlat
shrl
or
aaa
inc
fwait
lea
ds
test
push
mov
in
pusha
sub
mov
mov
js
jl
push
icebp
orl
dec
sub
mov
mov
fidivl
sub
test
jl,pt
mov
negb
push
jmp
xor
sti
imul
dec
sbb
out
dec
pushf
cmp
orb
pop
pop
cmp
push
mov
xor
jae
jp
icebp
xor
ds
addb
or
nop
mov
mov
inc
std
xchg
or
ja
in
jmp
popf
orl
mov
xor
mov
test
sbb
stos
pop
lods
movsb
scas
jns
dec
add
fimull
sahf
jmp
and
inc
loopne
fistpll
xchg
rol
clc
mov
test
sub
mov
pushf
jecxz
pop
stc
pop
xchg
inc
cmp
rcrb
insb
je
jg
les
and
cmp
scas
and
cmpb
daa
movl
pop
push
or
xor
xchg
adc
sbb
gs
jnp
sub
add
test
ljmp
sbbb
add
xlat
call
inc
fcomps
pop
inc
aad
fnstsw
xchg
jno
repnz
enter
add
test
jle
jmp
insb
into
pushf
cli
mov
push
xchg
pop
das
ret
iret
repnz
xchg
out
push
es
in
mov
push
imul
jp
mov
cmp
adcb
shrl
or
xor
add
movsl
test
inc
pop
mov
sbb
sti
xchg
mov
dec
inc
fdivp
push
repnz
cmpsb
xchg
dec
fcompl
test
pop
add
lret
fcmovu
mov
aaa
ss
out
les
into
mov
mov
xchg
jge
push
inc
es
xchg
fsub
push
jmp
pop
inc
out
popf
aad
sub
lock
pushf
add
sbb
cmp
jecxz
sub
ds
jl
push
push
push
jbe
iret
orl
pop
push
rclb
subb
ljmp
sbb
dec
nop
cld
pop
ret
test
outsl
push
or
cmp
jecxz
push
lea
nop
aas
jge
data16
in
jae
inc
cmp
lahf
lds
cmp
mov
cmpsl
sub
xor
or
push
out
mov
sub
mov
xlat
and
dec
sub
mov
xor
xor
fdivs
jb
cmpb
inc
int
das
pop
pop
je
xlat
pop
push
ret
pop
xor
cmc
add
mov
add
orl
mov
adc
xlat
pop
mov
cltd
pop
push
add
out
aam
shl
xchg
dec
push
push
cmp
mov
pop
push
fs
and
sbb
stos
pushf
fisubrs
inc
push
pop
aad
subb
scas
sub
sub
lret
notl
xor
xor
pop
arpl
lods
cmpb
mov
mov
jge
dec
sub
mov
xchg
lods
dec
ret
mov
addr16
cmpsb
int3
add
jae
and
fdivrs
ljmp
mov
cmc
push
test
mov
xchg
push
cmpsb
adc
jp
cmp
outsl
add
add
cmp
data16
xchg
xchg
rclb
test
imul
push
mov
insl
adc
call
add
push
pop
push
aad
and
les
mov
jne
mov
popf
imul
fisubl
std
add
inc
xchg
insl
cwtl
stos
mov
negb
jnp
pminub
ficoms
clc
xchg
cmp
jno
lods
ljmp
push
fwait
jae
jmp
mov
mov
and
test
add
adc
pop
icebp
adc
or
scas
vcvtph2ps
dec
movsb
fwait
popa
mov
and
ds
loopne
push
jmp
or
sbb
mov
inc
addr16
ficoms
jp
cwtl
data16
test
mov
or
call
ljmp
inc
shl
dec
ljmp
lret
pop
and
adc
in
test
movsb
and
mov
mov
bound
push
mov
jno
inc
mov
out
int
fcoms
sub
arpl
xchg
imul
xor
xor
adc
daa
sbb
pop
gs
xor
or
cwtl
aas
push
jnp
outsl
mov
sub
scas
add
inc
cmp
lret
xchg
xor
add
in
sbb
jns
sti
repz
pop
sbb
sbb
mov
inc
test
stos
in
cmp
jp
test
aad
sqrtps
mov
daa
mov
and
int3
pop
xchg
xlat
enter
jge
cmp
sbbb
xor
pop
pop
inc
outsl
xchg
fisubl
xor
roll
mov
bound
mov
inc
adc
pop
jne
aas
pop
or
lret
into
int
pop
cs
fxch
cvtpi2ps
stos
es
adc
mov
aaa
pop
push
outsl
lret
mov
sub
mov
xchg
or
data16
jmp
movsb
push
jne
int3
adc
sbb
faddl
insb
push
mov
pop
icebp
int
mov
pop
pushf
ljmp
fmull
int3
cmp
xchg
stos
and
in
addr16
fdivs
push
imul
push
mov
adc
mov
cwtl
or
nop
mov
fiadds
pop
cmp
adcl
push
pop
sub
xor
add
push
push
xchg
pop
and
pop
roll
daa
push
idivl
ja
jbe
sbb
ficomps
mov
out
mov
sbb
movsb
or
xchg
sub
push
add
sahf
mov
push
mov
gs
inc
fldcw
lret
mov
repz
add
cmpsl
sub
add
cmpsl
inc
cmp
pop
out
adc
push
push
fisttpl
pop
xchg
or
add
jmp
sbb
jae
ds
pop
jg
push
cmpsb
das
push
mov
push
and
pushf
cmpsl
mov
pop
addr16
ja
inc
insb
push
sbb
or
cmp
sub
fsub
int3
idiv
in
xlat
pushf
cmpsl
mov
pop
addr16
ja
inc
insb
push
sbb
or
cmp
sub
fsub
int3
idiv
in
xlat
pushf
cmpsl
mov
pop
addr16
ja
inc
insb
push
sbb
or
pop
fsub
into
idiv
in
xlat
sahf
cmpsl
mov
mov
inc
insb
and
test
ret
clc
shr
arpl
jae
inc
icebp
push
loope
stc
inc
out
xchg
jbe
jecxz
repz
ret
jno
popa
mov
xor
roll
loope
xchg
xor
jecxz
repz
adc
and
jae
inc
icebp
push
loope
xchg
xor
jecxz
repz
mov
std
popa
lret
push
shrb
inc
std
and
shll
xor
xor
imul
and
sub
and
in
mov
jecxz
xchg
inc
mov
ficomps
or
mov
or
fnstsw
pop
cmpsb
in
andb
fwait
mov
rorl
sbb
push
jle
std
dec
jecxz
cltd
mov
add
cmp
out
push
test
les
xor
nop
and
jecxz
jecxz
dec
mov
xor
or
lods
pushf
xor
sub
cwtl
nop
cmp
lods
movlhps
mov
add
lods
pushf
inc
dec
ds
mov
fnsetpm(287
repnz
les
inc
cmp
pusha
lahf
add
movb
jae
inc
icebp
push
loope
xchg
xor
jecxz
repz
ret
jno
popa
mov
xor
shll
mov
jp
callw
mov
sbb
jb
xor
pusha
pusha
roll
ret
adc
ss
fstps
add
adc
adcb
push
jb
push
push
xchg
jno
cwtl
pop
xchg
sub
xor
jecxz
repz
ret
jno
popa
mov
xor
roll
loope
xchg
xor
jecxz
repz
ret
jno
popa
mov
xor
mov
inc
ja
stc
pop
lahf
cmp
mov
andl
nop
les
jl
movsl
mov
aaa
mov
test
dec
jg
test
iret
adc
xchg
es
test
ljmp
inc
jecxz
ja
lahf
repnz
mov
cmp
mov
cmpsb
jle
fdivr
xchg
sub
dec
pop
add
hlt
jle
in
sahf
dec
leave
fnsave
jb
lahf
bound
sbb
aad
jle
sub
cmp
mov
ss
push
xchg
and
mov
push
mov
inc
aam
enter
sub
je
popf
pop
cmp
mov
enter
sbb
push
sbb
nop
test
mov
xlat
jns
dec
pop
sbb
mov
mov
xor
ljmp
popa
stos
loop
sub
divb
lret
cltd
push
mov
inc
fucomi
insl
loopne
out
xor
add
lds
in
pop
addr16
push
icebp
mov
popf
jg
sbb
ss
call
in
inc
sti
sbb
jo
xor
fstl
pop
jae
xchg
das
movsb
shll
xor
mov
shl
pop
and
ja
arpl
push
jnp
out
outsb
out
cmp
int
in
shlb
xchg
sub
mov
dec
daa
sti
push
je
add
mov
test
xchg
pop
cs
aas
sbbl
clc
in
sub
xor
call
hlt
loope
cmpl
jmp
cmp
add
adc
hlt
sub
pusha
repnz
push
push
adc
insl
aas
pop
dec
leave
rcrb
xchg
lds
repnz
lcall
and
jmp
cli
mov
icebp
loope
movsb
ss
push
fs
adc
xlat
iret
add
fcmovnu
sub
xlat
inc
adc
cmp
int3
or
lcall
jo
sti
out
sbb
dec
outsb
jecxz
test
int
je
or
stos
jnp
pop
stc
insl
es
jmp
imul
repz
sub
pop
jns
imul
out
ss
loope
mov
icebp
or
cmpsb
pushf
jo
add
adc
mov
sub
mov
test
popa
mov
add
or
negl
push
mov
shlb
leave
mov
mov
sarl
lods
xchg
data16
push
jg
dec
movsl
dec
xchg
jl
xor
aas
xor
mov
mov
call
loope
pop
add
lret
mov
mov
mov
fildll
xchg
inc
outsb
push
lods
mov
inc
scas
jo
cltd
lea
push
sbb
dec
jge
lock
lret
scas
mov
jno
jle
xor
mov
mov
rcrb
mov
xchg
jbe
aam
xchg
dec
lock
mov
movsb
push
bound
imul
ficomps
test
xchg
in
add
jae
jl
adc
jge
or
or
rcrb
xchg
lods
inc
pop
pop
push
jle
push
mov
lahf
xchg
insl
aas
cmp
out
mov
fisttps
mov
pop
movaps
icebp
fcompl
shrb
xchg
pop
scas
sahf
mov
icebp
cmc
sub
lahf
dec
mov
imul
add
jo
adc
mov
xor
dec
dec
out
lods
xor
push
gs
aam
lea
push
mov
ss
sub
lret
cmp
sbb
out
mov
lret
lcall
stos
pusha
mov
pop
cli
repz
shlb
pop
fistpl
les
pop
stc
test
lret
movsb
or
test
fsub
jle
repnz
negl
rorl
xchg
popf
or
fldcw
gs
out
lock
fwait
and
movsb
clc
sub
dec
sub
jge
decl
cmp
pop
rcll
inc
fldenv
jae
js
dec
fs
xchg
cmp
outsl
outsb
and
mov
push
jmp
pop
fnstsw
lock
ror
mov
jp
mov
pop
add
ss
rorl
jno
jle
jno
dec
shr
push
inc
leave
push
jmp
and
adc
sub
xchg
lahf
add
addr16
dec
jbe
sti
inc
push
imulb
push
lea
mov
push
iret
test
jmp
pop
aam
lcall
mov
shl
ljmp
push
scas
ja
cs
mov
xchg
dec
fwait
jb
pop
das
jle
nop
xorl
lea
loop
sub
cwtl
out
ja
int
push
mov
sahf
test
and
dec
push
pop
dec
rol
pop
push
bound
sbb
and
pop
hlt
lcall
mov
or
inc
in
sub
push
outsb
or
xor
mov
jno
rcll
in
stos
push
out
sub
ret
mov
stos
mov
je
shlb
enter
out
iret
leave
jl
cmpsb
add
lds
inc
lods
jnp
into
mov
vandnps
sbb
pcmpgtb
sarb
lea
cmp
enter
out
clc
mov
and
xchg
sub
or
jmp
aam
jge
jno
repnz
jno
adc
xor
dec
outsl
insb
jp
cmpl
daa
repnz
adc
xor
scas
in
push
dec
imulb
shrl
inc
imul
insb
pop
jmp
jmp
or
push
lahf
mov
xorb
cmp
notb
in
and
fbstp
fs
sbb
in
xchg
xchg
into
inc
into
jmp
mov
sub
xchg
movsb
das
lcall
movl
ljmp
test
or
and
pop
stos
cmp
mov
fstpl
fstpt
push
xchg
xchg
jge
cmc
adc
je
cmc
mov
cmp
jae
lods
mov
shll
icebp
rclb
or
mov
pop
sbb
sbb
aaa
and
sbb
push
outsl
mov
mov
cs
mov
and
imul
lret
int3
jl
jb
push
cmpsw
push
cmp
outsl
mov
push
in
mov
inc
js
mov
and
repz
and
test
movsl
cmc
xor
push
mov
pop
pop
sbb
nop
fists
lahf
pop
imul
movsl
push
cmp
mov
add
fistpl
int
or
fldenv
push
lret
fstpt
aaa
and
xchg
push
rcr
mov
sub
movsb
fsubp
pop
push
jns
jo
dec
adc
addr16
cmp
mov
ds
sahf
push
inc
sahf
ljmp
fidivl
sbb
pop
or
js
je
fmulp
inc
ret
mov
daa
scas
aad
cmpsl
sbb
pop
dec
std
pusha
pushf
add
xor
mul
inc
xchg
repz
mov
push
mov
inc
push
or
cmp
cwtl
test
sub
cli
dec
adc
xchg
cli
push
imul
adc
aas
icebp
xchg
mov
xor
shll
pop
or
lods
fistl
cs
add
push
lock
xchg
pushf
push
sbb
pop
sbb
jae
in
in
das
mov
inc
sbb
and
sbb
ror
jg
jo
cmp
push
dec
mull
adc
mov
pop
push
negl
cmc
shlb
sahf
xor
xor
adc
mov
pop
lret
iret
inc
sub
sub
jg
xchg
add
add
outsb
subb
mov
dec
pop
loopne
mov
fiadds
scas
daa
pop
add
std
mov
and
cltd
mov
and
mov
mov
xor
add
addr16
hlt
pop
cmpsb
nop
and
icebp
cltd
arpl
loopne
dec
dec
jbe
test
leave
xor
shll
ret
aas
pop
dec
xchg
sbb
dec
fisubrl
out
xlat
sub
out
mov
sbb
stos
lret
adc
push
inc
repz
test
aaa
adc
cmp
hlt
lret
movsl
popa
outsb
lahf
sub
dec
sub
sub
loop
mov
fistpll
sub
pop
mov
push
lock
enter
pop
testb
fcmovne
jmp
ljmp
pop
cmc
test
xchg
mov
or
fdivrs
into
pushl
adc
test
les
xchg
dec
outsl
jno
and
imul
or
mov
out
cmpsl
outsl
cmc
call
mov
cmp
fcmovu
fdivs
dec
mov
aaa
dec
jo
xchg
push
push
push
nop
jp
in
push
sub
mov
clc
sbb
sub
shll
aad
popa
clc
test
mov
mov
cli
fwait
aas
fmuls
pop
mov
insb
and
test
int
cmp
cltd
call
inc
outsb
scas
jl
scas
mov
fisubl
inc
fwait
ljmp
add
ret
xchg
push
int
or
lods
arpl
cmp
fldt
in
loope
cmp
adc
mov
and
js
in
inc
test
stc
cmp
enter
fadds
or
fcomps
xchg
or
inc
repz
mov
mov
add
popa
sub
js
popa
daa
movsl
mov
push
fdivp
movsb
mov
pop
inc
movsl
push
in
or
rclb
adc
stos
dec
push
and
sahf
mov
sahf
adc
imul
adc
pop
in
ss
cmp
adcb
cmpb
popf
ret
cmp
cwtl
stc
fidivrs
jne
fsubrs
sbb
pop
divb
test
fwait
sub
sbb
adc
add
idivl
pop
xchg
test
xchg
pop
mov
fisubrs
mov
jnp
mov
pop
daa
das
or
popf
adcl
call
mov
dec
int3
jg
imul
fwait
jmp
jnp
cmp
xchg
incl
movsl
cwtl
sbb
testb
lret
fs
shll
push
ficomps
push
bound
push
leave
leave
xor
out
push
mov
mov
frstor
xchg
ss
mov
imul
and
add
stos
pop
pop
mov
dec
mov
outsb
inc
mov
bnd
loopne
jnp
xchg
inc
cmp
dec
scas
mov
sti
lock
fmuls
out
push
dec
call
clc
loopne
add
in
iret
faddp
ljmp
pop
cmpsb
into
xor
repnz
sahf
push
and
sahf
sbb
in
dec
lcallw
or
mov
inc
imul
mov
outsb
mov
sub
jns
lret
inc
test
cmpsl
lcall
aaa
test
jno
push
loope
cs
in
jne
inc
jecxz
sbb
fldt
cltd
xchg
ror
cltd
lock
fldenv
mov
dec
jg
add
icebp
mov
aad
shl
std
sub
cmp
dec
testb
push
adc
push
out
sub
mov
xchg
mov
icebp
pop
js
sub
jle
cmp
sub
lret
scas
jb
sbb
pop
imul
inc
ja
decl
jg
sbb
outsl
movsb
mov
fwait
add
jp
icebp
mov
loop
and
jne
cmp
scas
aad
jmp
xchg
loop
add
mov
fdivl
testl
iret
shlb
sub
test
in
xchg
jb
pop
add
dec
lahf
rcl
fcomip
adc
mov
cmp
xor
cld
jle
inc
jbe
jae
outsb
push
xor
push
in
gs
xchg
pusha
in
jge
add
add
and
jecxz
aaa
dec
ss
sub
mov
add
inc
cmp
popf
cmp
outsl
mov
or
xchg
cmp
incb
push
mov
sub
sub
jmp
xlat
push
inc
jbe
jecxz
cmp
mov
fisubs
adc
pop
dec
lds
cmpsb
sbb
scas
cltd
in
or
dec
mov
jecxz
out
sub
bound
ds
mov
fsub
fs
addr16
mov
dec
jbe
xor
scas
ja
scas
roll
es
ds
and
dec
cmp
ss
sarb
xchg
jb
mov
jo
push
pop
std
push
cli
cs
xchg
and
pop
mov
icebp
fincstp
mov
mov
jns
ja
xchg
shll
cmpsl
mov
mov
mov
dec
push
or
imul
and
xchg
dec
test
mov
pop
bound
cmc
xchg
dec
jge
push
inc
lods
popf
fildll
cs
add
movsl
push
and
adc
xchg
and
push
jp
mov
push
movsb
and
cmpsl
insb
subl
lret
dec
loop
femms
cmc
cmp
aas
inc
mov
cmpsb
push
icebp
jno
mov
shlb
cmp
mov
fisttpl
adc
inc
popf
imul
sar
ljmp
mov
call
divl
lods
xor
add
sub
or
and
or
jne
inc
in
adc
and
mov
scas
stos
addr16
mov
fs
mov
sbbb
lret
and
sbb
in
sarl
pop
mov
or
mov
stc
es
mov
out
mulb
lds
pop
repnz
out
movsl
dec
xchg
push
sbb
pop
cwtl
imul
scas
xor
jb
test
rorb
outsl
outsl
cltd
lock
xchg
orl
cltd
das
jmp
into
lret
sub
int3
fcomps
cmp
xchg
divl
jo
mov
xchg
xchg
jmp
into
adc
xchg
leave
sahf
xchg
clc
lods
and
pusha
loope
nop
xchg
loop
cmpsb
jns
cmp
sub
pop
lea
sbb
mov
int
jecxz,pn
mov
mov
gs
cmpsl
nop
mov
insb
pop
movsb
cmp
iret
push
cmp
insb
pop
clc
iret
pandn
lea
push
xchg
mov
lock
adc
and
push
adcb
mov
pop
push
or
mov
mov
aaa
mov
and
adc
sub
lods
push
dec
and
add
popf
xchg
or
pop
stc
cld
je
jmp
addr16
pop
mov
mov
int
push
aad
test
aam
push
jbe
mov
xor
scas
icebp
repz
lock
inc
ja
lcall
ret
add
nop
lea
sbb
or
sbb
cmp
dec
outsl
sbb
mov
jmp
xor
popa
xchg
stc
aaa
cmp
movsb
ja
mov
jne
ret
pop
stc
cmp
lahf
or
mov
xor
sub
adcl
fsubrp
inc
sbb
shr
mov
leave
ds
jl
adc
mov
data16
lahf
mov
bound
mov
jecxz
fidivrl
bound
out
or
int
insl
imul
lahf
icebp
push
push
ss
popa
movsl
clc
test
xchg
and
das
mov
dec
test
in
mov
add
ret
dec
insl
pop
in
rclb
aaa
sub
xchg
popa
sub
push
std
add
pop
in
xchg
push
mov
jno
sub
pop
mov
or
mov
mov
and
mov
pop
sbb
outsb
fldcw
push
pop
mov
xchg
lods
xchg
lcall
popa
push
or
les
das
fwait
pop
xchg
jg
mov
pop
sarb
mov
push
movsb
mov
pop
xor
cmp
xchg
push
cmp
xor
xor
out
xchg
out
xchg
sub
imulb
xor
enter
push
call
mov
or
sub
into
pop
addb
or
arpl
les
mov
inc
xchg
sbb
cld
mov
dec
out
aam
es
scas
jge
and
int
lret
sub
outsb
bswap
xchg
sub
fiadds
bound
xchg
inc
inc
lahf
daa
sub
mov
jge
mov
sub
rclb
out
xor
mov
dec
adcb
push
test
xchg
in
aam
dec
dec
sub
sub
std
cmpsl
jns
pop
loope
and
mov
cltd
lock
mov
xor
cltd
inc
mov
cmc
das
add
push
and
mov
jbe
ss
outsl
popa
sub
and
ret
mov
das
lret
cmp
mov
lock
jb
inc
adc
xor
dec
cli
cmp
push
fdivr
push
jecxz
and
fidivs
sbb
loopne
xor
aaa
stos
fsubrl
bnd
pusha
sbb
mov
lcall
add
xlat
fs
or
mov
out
test
sbb
inc
sub
mov
outsl
jle
enter
and
or
leave
test
push
inc
sbb
inc
shl
sbb
and
xchg
std
data16
in
cltd
in
cmpps
adc
int3
inc
jecxz
or
sar
sti
pop
sub
dec
mov
popf
pop
add
adc
or
add
xchg
mov
in
xchg
sub
push
loop
ds
sti
push
jns
sub
cltd
sbb
popf
pop
pop
mov
mov
ror
nop
adcl
scas
push
mov
outsl
push
daa
psllw
test
call
and
bound
das
inc
inc
lods
and
add
mov
int3
inc
fs
lock
in
mov
pop
pop
xor
mov
bound
ret
iret
jo
mov
ret
pop
adc
ret
cmpsl
jp
lock
mov
stos
std
repz
inc
je
and
nop
ret
repz
cmp
adc
in
sub
jo
adc
mov
leave
cmp
enter
iret
jmp
enter
sub
mov
insl
pop
mov
aaa
mov
jl
imul
lcall
cmp
or
sti
adcl
fldl
jp
enter
add
mov
sarb
pop
popf
xchg
sbb
insl
pop
mov
rcll
or
rcll
lock
add
outsl
ljmp
dec
aaa
add
ret
cmp
rorb
pop
mov
xor
out
lock
fistpll
or
pop
mov
sbb
or
or
inc
jno
iret
testl
pop
stos
add
push
jecxz
icebp
leave
pop
mov
pushf
ja
stos
mov
repnz
mov
jp
int3
inc
es
mov
test
pop
pop
nop
jbe
xor
cwtl
in
lret
leave
loopne
xchg
xchg
cmp
xor
pop
insl
sbb
iret
jnp
jecxz
cbtw
push
dec
inc
shll
int3
icebp
fisttpll
pop
out
out
sub
mov
lock
xchg
mov
or
jge
or
fnstcw
sub
pop
daa
sub
or
cmpsb
sti
daa
iret
mov
mov
dec
sub
mov
jns
lea
data16
dec
xlat
stc
jecxz
dec
xchg
scas
adc
loopne
pushf
or
or
bound
daa
mov
sbb
sub
sbb
inc
sbbb
adc
push
or
out
pop
roll
into
popf
xchg
sahf
mov
cs
inc
xchg
push
rorl
adc
insl
push
push
in
lods
lds
test
push
dec
pop
loope
int3
xchg
aaa
xor
jge
jne
les
ret
xor
dec
clc
rorl
out
pop
imul
rol
jno
lock
dec
rol
adc
push
push
dec
jp
mov
cltd
mov
cmpsl
imul
mov
js
mov
dec
repnz
out
xlat
fwait
inc
sti
cmp
adc
lods
add
xchg
push
stc
fidivrl
in
adc
bound
push
out
fdivs
jge
in
push
lea
push
lret
les
pop
sub
popa
mov
test
and
aam
push
jecxz
sub
shll
loope
cld
lahf
data16
mov
xchg
push
sub
pusha
sahf
add
xchg
push
cmpsb
sub
cmpsl
into
lods
dec
cmp
outsl
lsl
loope
jb
jo
sbb
arpl
clc
and
in
push
roll
inc
dec
lea
cmp
xchg
push
sub
pminsw
or
scas
subl
stos
stc
pop
enter
adc
pop
stos
test
clc
repz
mov
cld
rorl
stos
outsl
sub
mov
xchg
clc
xor
cs
shrl
out
pop
mov
aam
adc
ret
jmp
aad
movsb
xor
cmp
in
sbb
jb
xchg
hlt
ret
ret
dec
incb
das
push
push
push
ret
ljmp
aas
movsl
mov
stc
mov
leave
es
dec
fstl
xchg
pusha
in
int
repz
lret
clc
jle
xchg
lds
les
rcrl
loope
xchg
xor
jecxz
repz
ret
jno
popa
mov
xor
roll
loope
xchg
xor
jecxz
repz
ret
jno
popa
mov
xor
inc
inc
jno
loope
xchg
xor
add
repz
ret
jno
popa
mov
xor
roll
loope
xchg
xor
jecxz
repz
jno
push
aam
cmp
jl
insb
ficoms
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
jp
dec
js
pop
jle
push
or
sbb
lret
mov
mov
jp
dec
js
or
sbb
sub
cmp
ret
cli
mov
cmp
mov
mov
jp
dec
pusha
pop
adc
add
xor
das
sbb
aam
cmpsb
test
aad
fucomi
rcrl
and
push
mov
in
in
sbb
sar
mulb
scas
and
adc
cld
lods
bound
aad
push
shl
icebp
adc
push
daa
lcall
iret
xor
lds
lods
and
sbb
lret
add
iret
pop
sbb
fisttpll
cwtl
xchg
dec
jnp
dec
repz
sub
jecxz
dec
cld
fnstenv
and
call
mull
cmpsl
pop
sub
lds
cmc
sub
daa
sti
std
ss
jmp
and
out
pop
andb
cmc
das
mov
xchg
cmp
rcll
aaa
adc
stc
fimull
mov
lahf
mov
jp
dec
outsl
pop
sbb
add
sub
and
shr
sar
lret
nop
stos
cmpb
pop
cmp
sbb
inc
jne
sub
push
xchg
xchg
lcall
ret
int
dec
sub
or
dec
jbe
inc
gs
lret
xchg
lods
pushf
lea
fdivr
mov
push
or
inc
sbb
sub
cmp
enter
call
stos
cwtl
mov
dec
push
jp
dec
js
or
sbb
sub
cmp
enter
call
stos
cwtl
mov
dec
push
outsl
xor
xor
xchg
pop
pusha
fs
stos
ds
xchg
iret
pushf
xor
sub
movsl
jnp
fs
inc
pop
sti
popf
sbb
movsl
inc
mov
mov
test
dec
cld
das
icebp
adc
push
xchg
sub
push
fnstcw
or
jle
aad
in
jns
stos
fistpl
push
jb
icebp
out
call
shrb
adc
mov
mov
sbb
in
and
test
mov
daa
rcll
cmp
or
inc
addr16
and
nop
sub
repnz
negl
pop
cmp
push
out
leave
sub
pop
movb
sbb
in
std
xchg
push
mov
stc
mov
inc
insl
addr16
xorl
in
stos
mov
or
scas
mov
imul
je
lahf
mov
pusha
repz
fdivl
pop
into
ss
sbbb
mov
aas
dec
sahf
push
mov
int3
out
lea
xor
insl
sahf
ss
xchg
add
ss
sbb
jnp
cld
jmp
jl
sub
jno
shll
push
outsb
sub
js
inc
xor
lock
cmp
cmp
repnz
or
aad
shll
lahf
pop
add
fsubs
movsl
or
shrb
adc
gs
push
pushf
loop
cmpl
mov
sbb
fidivs
adc
mov
xchg
stos
adc
insb
lods
stc
test
fsubl
add
pop
cmp
and
les
loopne
jl
or
xor
loopne,pt
push
cli
mov
testl
mov
das
outsl
and
pop
cmp
jo
js
sbb
adc
sub
sub
cmp
xlat
imul
int
adc
movsb
sub
leave
lods
test
add
imul
stc
data16
push
adc
mov
sub
data16
pop
sub
dec
subl
sub
mov
fbstp
fcoms
std
adc
and
adcb
testb
push
lods
outsl
push
dec
and
int
xor
sbb
xchg
clc
loopne
push
mov
adc
cmp
aam
push
inc
add
lock
insb
outsl
fxch
mov
add
xchg
and
data16
jns
xchg
mov
lret
mov
pop
mov
mov
adc
fwait
xor
stos
pop
mov
in
shl
ljmp
jle
shl
or
loope
out
pop
mov
dec
adc
jne,pt
xchg
xor
addb
in
jne
test
bound
xor
adc
addl
into
imul
cmc
lret
inc
fsts
dec
ret
jnp
aad
xor
lret
int3
xor
dec
fucomp
push
movsb
xor
push
or
jne
mov
cmp
cmp
out
mov
mov
pop
xchg
pop
xchg
push
sbb
movsb
or
sbb
and
push
xchg
addr16
adc
ret
outsb
adc
jo
add
add
inc
cli
stos
dec
js
mulb
cmc
xor
push
adc
sub
or
fsubr
outsl
outsl
scas
or
add
popf
pushf
fimuls
add
pop
jnp
mov
xchg
out
xchg
aas
inc
or
pop
popf
push
sbb
push
jne
and
xchg
or
and
das
fadd
push
mov
jmp
add
cwtl
sbb
and
ret
mov
scas
cmpb
ljmp
and
in
push
cmp
fwait
pusha
mov
xorl
xor
fwait
negb
adc
inc
push
stos
xchg
ds
sahf
pop
add
aad
jb
rcrl
fstpl
out
movsb
out
jmp
mov
mov
cli
das
push
out
jns
sub
dec
repz
dec
adc
hlt
sti
pop
mov
scas
push
std
mov
mov
bound
icebp
dec
pop
inc
jmp
dec
inc
repnz
imul
mov
cmovg
cmpsb
cwtl
mov
mov
xchg
xchg
inc
jp
inc
jg
popa
aam
lret
sub
or
out
iret
xchg
inc
cmp
adc
imul
push
lea
pop
add
in
xlat
lcall
repnz
insb
mov
popa
jne
mov
arpl
in
outsb
push
sub
fldcw
dec
iret
fs
xlat
xchg
testl
ljmp
loopne
jbe
jo
adc
inc
pop
icebp
cmpsb
fisttpll
ss
dec
add
push
adc
bound
push
test
push
pop
push
scas
loop
scas
pusha
sub
jg
shl
sub
dec
or
xor
jg
cmp
repz
call
sahf
jge
imull
nop
fisubrl
cwtl
jb
icebp
aad
fcmovnu
inc
cld
sbb
mov
inc
inc
xchg
or
jge
push
ljmp
icebp
lods
inc
inc
aaa
sbb
fwait
inc
les
out
dec
test
sub
sbb
inc
push
push
xchg
cmpsb
cs
dec
mov
mov
push
or
push
pop
out
mov
mov
cmp
and
sub
jle
mov
adcb
fildll
lret
iret
insl
dec
fwait
pop
and
dec
ja
pop
es
mov
push
and
lock
sbb
mov
shr
pop
iret
cmpsb
sbb
ds
dec
push
and
dec
outsb
mov
iret
xchg
xchg
adc
das
outsl
add
das
mov
shll
aas
cmp
jmp
fnstenv
cmp
mov
rcr
cmc
jnp
mov
dec
jge
add
xchg
out
sbb
cld
adc
loopne
jle
sbb
in
imul
sub
fdivs
into
inc
sahf
and
dec
pop
std
or
inc
adcl
clc
rclb
sub
inc
mov
jge
clc
mov
pushf
fiaddl
xor
adc
repz
xchg
mov
test
xchg
mov
testl
jl
add
mov
jns
jo
or
neg
shll
jno
xchg
popf
rcll
inc
mov
xchg
cmpsl
dec
or
inc
sub
roll
push
mov
add
fdivrl
jno
cs
add
stos
aad
mov
fdivp
mov
jmp
bound
xor
mov
popf
rcl
sbb
popl
xchg
lods
aas
cmp
cmp
push
insb
flds
test
nop
mov
sbb
xor
dec
pusha
mov
add
mov
mov
out
or
push
xchg
sbb
jno
xor
push
lea
add
sarb
xor
bound
jne
xchg
mov
add
popf
xchg
test
push
xor
insl
rorl
hlt
dec
push
ja
jp
mov
cli
test
test
and
fidivrl
sbb
ljmp
mov
mov
push
sahf
xchg
ljmp
rol
mov
dec
enter
fsubl
mov
xor
cmpsb
insl
fidivrl
mov
add
popa
mul
inc
iret
dec
jg
adc
filds
std
lret
jb
mov
xor
mov
movsl
adc
inc
jbe
das
subl
sar
gs
setns
mov
jnp
push
xchg
mov
xor
xor
cltd
push
insl
lret
jge
flds
mov
inc
stos
mov
mov
icebp
sbb
xchg
mov
int3
inc
lcall
lahf
sti
dec
enter
sub
fcmovb
test
pop
std
lcall
loopne
push
mov
or
add
enter
fwait
movsl
ds
xchg
mov
pop
sbb
scas
jo
incb
fwait
inc
inc
inc
insb
test
hlt
push
scas
jmp
mov
out
xor
pop
ret
ret
push
cld
data16
cmp
jbe
in
fwait
push
jae
and
push
xchg
popa
iret
xor
mov
xchg
sub
rorl
js
and
add
shrl
push
push
mov
test
out
shr
inc
sub
fidivs
jmp
pop
repz
inc
sub
jp
test
inc
dec
sub
mov
sbb
jmp
and
cli
xorl
cmp
xchg
int
xchg
mov
cmp
push
mov
pusha
or
push
les
popa
pop
jae
xchg
adc
jnp
cmp
test
popa
adc
pop
lods
dec
xor
out
arpl
dec
sub
xor
cltd
loope
outsl
lahf
sub
insl
xor
mov
push
mov
shlb
fistps
inc
or
and
jg
mov
pop
add
jae
pop
sbb
imul
or
mov
cmp
fistpll
cmp
mov
out
cwtl
and
outsl
jp
dec
mov
ret
test
fstpt
scas
lahf
xrelease
pop
loopne
repz
xlat
push
imul
pop
fucomip
mov
mov
call
pop
xchg
adc
lret
lock
mov
test
ja
int3
shrb
dec
shlb
rcrl
inc
mov
mov
xchg
pop
scas
mov
push
push
jg
loop
pop
mov
xchg
cmpsl
add
xor
xchg
jle
or
ja
stos
lods
aaa
sbb
jae
fs
nop
jmp
sub
xchg
mov
xchg
dec
psubusw
fucomp
cmpsl
mov
dec
dec
jg
mov
pusha
stos
push
cmpsb
frstor
cmp
test
js
sub
rol
pop
pop
icebp
push
mov
repz
in
rorb
add
add
js
jmp
in
adc
push
in
stc
std
mov
cld
lret
rclb
push
scas
mov
movsb
adc
or
and
ss
pop
fstps
push
out
push
xor
ret
dec
sbb
sub
es
or
jnp
outsb
jecxz
mov
mov
in
push
imul
sub
cmp
and
cmp
dec
lahf
fwait
fwait
cmpsl
adc
mov
adc
lahf
push
mov
and
orb
mov
in
jg
shr
adc
pop
dec
xor
out
dec
outsb
or
loopne
mov
dec
test
jmp
push
out
pop
cmp
les
xchg
inc
pop
mov
sbb
arpl
xlat
and
lcall
xchg
mov
rorb
lret
leave
mov
ljmp
lea
add
jmp
jns
xor
xchg
jge
or
dec
push
pop
jle
cmpsl
incl
test
int3
push
cmp
mov
pop
cmp
or
jg
insb
fsub
sbb
or
add
add
ljmp
push
popa
out
sbbb
das
inc
mov
xchg
xor
mov
xor
movsl
rep
add
sbb
sub
and
adc
push
test
in
lods
or
pop
add
mov
stos
dec
adcl
lret
enter
mov
lret
insb
jno
imul
int3
cltd
jp
js
sbbb
movsb
in
call
cld
mov
adc
fldcw
pop
pop
das
push
sti
push
push
shrl
mov
mov
stc
xor
xchg
enter
orb
je
stc
sbb
cltd
jb
xchg
jae
scas
sub
add
xchg
mov
dec
push
lds
push
insl
inc
inc
sub
ljmp
mov
inc
jle
push
pop
sub
int3
fistpl
lcall
nop
lea
mov
push
cld
popf
imul
iret
mov
pop
pop
add
cmp
adc
add
jns
push
push
sbb
pop
adc
ror
xor
dec
sbb
pusha
cli
pusha
fmuls
push
push
in
gs
or
mov
sub
sub
decb
outsl
cmp
dec
inc
push
imull
addr16
add
adc
push
cs
pop
cmp
dec
push
sub
inc
rcr
sub
fcompl
mov
and
and
jg
pop
ljmp
jp
pushf
lods
sbb
mov
flds
add
xchg
cs
sub
push
adc
inc
mov
loopne
divb
mov
aad
test
hlt
aaa
mov
popa
mov
lods
imul
lods
loopne
adc
mov
les
pop
xchg
xor
sub
or
inc
pop
sub
mov
sbbb
je
jae
inc
mov
cmpsb
xor
das
sub
jmp
jo
lds
cli
insl
lret
pushf
lods
xchg
adc
mov
sbb
pop
fdivs
xchg
cmp
fstenv
jbe
sti
int
pmuludq
aad
xchg
xlat
fstpt
adc
and
xor
out
and
mov
out
test
scas
jp
out
shl
fcomp
imul
pop
jl
and
push
xor
sub
int
push
imul
movsb
movsb
out
int3
pop
jl
movsl
push
ror
push
seta
loop
mov
hlt
in
movsl
pop
ds
cmp
jno
clc
cwtl
lahf
jg
out
xor
repnz
pushf
jnp
dec
dec
push
adc
sbb
xchg
rcll
movsb
xor
bound
dec
clc
leave
shl
jp
out
xchg
jns
leave
jg
dec
ss
insl
xor
js
lret
cli
imul
mov
lea
lods
mov
inc
sahf
pop
mov
xor
into
xor
mov
pop
test
popf
call
jbe
sub
das
mov
outsb
notl
pop
lahf
sub
subb
dec
mov
fwait
js
cld
mov
sbb
fnstenv
sahf
mov
iret
xor
das
inc
or
neg
daa
rolb
inc
pusha
jae
iret
cwtl
xchg
jle,pt
mov
adc
stos
arpl
push
mov
dec
fnstenv
mov
pop
dec
dec
lcall
mov
sbb
ljmp
hlt
mov
xchg
push
addr16
push
notb
not
sahf
lock
and
jbe
mov
ljmp
ss
mov
adc
mov
mov
mov
pop
pop
outsb
sbb
adc
xor
pop
mov
sub
add
xor
jno
or
enter
cmp
xchg
xchg
loopne
push
dec
jno
mov
enter
ljmp
add
in
pop
mov
sub
xchg
jmp
dec
fldl2e
xor
dec
xchg
mov
sbb
out
loopne
imul
xor
ja
repnz
clc
or
dec
mov
and
and
aad
or
out
lahf
pop
and
arpl
push
sbb
call
push
inc
movaps
fdivrp
pushf
scas
xor
add
pushf
xor
xchg
fadds
in
xor
push
jbe
lock
stos
cmp
cmp
rorb
shl
in
testb
orl
out
sti
and
imul
in
mov
je
or
pop
cli
adc
and
fnstenv
rcll
loop
insl
or
jmp
cmp
fwait
jne
fwait
xchg
leave
xlat
stos
sti
lods
cld
cmp
cmp
mov
insb
testb
fadds
inc
cmpsb
mov
pop
jp
push
loop
dec
mov
imul
ja
imul
and
jns
out
popa
stc
fwait
repnz
or
mov
fadd
xchg
add
popa
cmp
xchg
xlat
mov
fcomps
cmp
xchg
jnp
xchg
mov
adc
or
out
mov
movb
push
clc
sbb
mov
aaa
jo
out
adcl
push
sbb
repnz
and
sbb
rcrl
cwtl
pop
inc
in
scas
dec
call
lret
jo
mov
and
add
xlat
or
lcall
fs
inc
add
movsb
mov
out
jl
nop
test
mov
mov
cwtl
inc
int3
push
in
cmp
aas
stc
jl
mov
jp
pop
xor
or
testl
xor
sar
cltd
push
inc
xchg
rolb
daa
insb
ret
jnp
sub
call
scas
int3
loop
dec
mov
xchg
jns
lods
icebp
mov
lods
adc
pop
incb
ja
fnstcw
sub
enter
fs
push
xor
jns
and
cmp
repz
adc
std
cmp
popf
mov
ret
cli
cmp
mov
je
std
cld
into
cmpsb
dec
leave
jno
mov
and
xchg
fmull
xchg
inc
xchg
in
mov
inc
dec
push
mov
xor
repz
pop
mov
mov
js
push
stos
imul
loopne
adc
add
add
cmp
push
xlat
movsb
cmc
jbe
test
fdivl
repz
test
fistpll
push
push
test
dec
jge
mov
loop
adc
loop
jne
cli
ja
mov
xchg
mov
ja
pop
push
scas
xchg
adc
mov
jne
push
inc
or
dec
adc
lock
cmp
push
fnstenv
test
stos
fistps
xor
xchg
push
dec
push
push
lods
adc
sub
or
in
inc
mov
mov
insl
movsl
cli
mov
mov
mov
iret
cmpl
mov
inc
movsl
fdivr
pop
lret
xorb
pop
push
xor
jecxz
imul
shr
bound
cs
inc
ds
pushf
fiaddl
adc
cmp
gs
mov
movsl
sbb
sbb
sbb
aad
xchg
sub
in
add
inc
and
clc
inc
fcompl
mov
lds
pop
adc
inc
push
xchg
repnz
xchg
add
inc
or
or
cmp
or
mov
mov
outsl
icebp
lods
or
lcall
xor
movsb
out
addl
xchg
inc
mov
aam
dec
mov
loop
push
adc
test
std
sbb
sub
outsl
jg
cmp
fdivrs
imul
xchg
dec
mov
push
push
xor
stos
loope
js
ret
or
pop
mov
enter
pop
jmp
das
ror
xchg
dec
cli
js
and
sti
dec
pop
scas
adc
fdivrs
fidivl
or
push
inc
adc
inc
jo
daa
push
adcb
add
in
int
test
and
sbb
fwait
adc
dec
fmull
cmp
dec
jg
or
xchg
xor
lret
adc
inc
sbb
and
push
mov
cmpsl
mov
dec
xor
aaa
xor
outsb
mov
sub
sbb
outsb
dec
cmp
inc
xchg
sbb
xchg
out
inc
scas
ret
pusha
xor
push
xchg
pop
jl
outsb
lds
jne
test
fidivl
dec
mov
cmp
fcoms
cli
popa
and
ret
cmovae
shlw
std
sti
mov
lock
ss
inc
pop
or
adc
push
jno
aaa
jbe
lods
stos
and
lret
inc
lods
push
inc
jge
pop
mov
pop
call
mov
or
sbb
cmp
jle
dec
push
notl
outsb
or
dec
sti
mov
lods
mov
push
arpl
mov
pop
fistl
push
xchg
call
call
or
daa
in
cli
shr
pop
sbb
jno
sub
sub
xor
cltd
xlat
and
inc
sbb
imul
les
dec
lea
js
adc
mov
inc
int
push
mov
push
push
mov
and
xor
cmp
aaa
push
lret
xchg
fistpl
xor
ror
fmuls
pop
int3
pop
xor
js
push
rolb
inc
or
push
dec
decb
popf
mov
cmpsb
fldpi
inc
pop
pop
je
or
jp
sbb
iret
mov
adc
mov
fstl
pop
xchg
adc
mov
in
pusha
or
mov
out
dec
in
and
xchg
mov
cmc
negb
jmp
out
pop
mov
sub
add
ficoml
mov
push
pushf
mov
mov
fisttpl
add
test
inc
mov
xor
sbb
stos
leave
lods
push
and
mov
mov
xor
sbb
push
xchg
andl
notl
lods
jae
popa
les
stos
std
and
bound
fnsave
cmp
dec
mov
add
loope
add
mov
or
or
fnstcw
pop
inc
add
cmp
mov
inc
dec
loopne
and
xacquire
cmp
mov
out
andb
mov
scas
sbb
sbbl
pop
arpl
adc
jmp
mov
sbb
mov
incb
insl
mov
jbe
insl
xor
ret
rcl
lea
lcall
idivb
lret
mov
lock
jmp
aad
inc
push
xchg
cmpsb
out
or
into
push
jp
xchg
and
cmp
pop
mov
and
lret
or
add
mov
sbb
movsb
insb
cmp
or
jp
dec
js
or
sbb
sub
cmp
enter
call
stos
cwtl
mov
dec
push
jp
dec
js
or
sbb
sub
cmp
enter
call
stos
cwtl
mov
dec
outsb
pop
jp
dec
js
or
sbb
sub
cmp
enter
in
lret
mov
mov
pop
dec
js
or
sbb
aaa
adc
clc
lods
jmp
adc
jne
gs
xorl
icebp
movsl
mov
daa
mov
pop
xor
jbe
push
jno
jno
xorl
rol
loope
xchg
daa
add
adc
pop
xor
ja
inc
popa
push
jno
xorl
rol
loope
icebp
daa
add
xor
jb
add
push
or
xlat
int
loope
repnz
aam
jnp
ds
in
cmpsb
xorb
enter
sahf
fdivl
repnz
cmp
sar
pop
dec
imul
and
push
mov
dec
fldcw
push
mov
jbe
mov
dec
cmp
adc
call
insl
in
adc
cmpsl
mov
out
rcr
daa
jmp
icebp
out
push
out
mov
push
and
push
adc
jno
inc
dec
outsb
aam
cmpb
xlat
icebp
dec
incb
push
ficoms
xor
pop
inc
ret
xchg
pop
fdivs
mov
aas
imul
fadds
loope
jb
lcall
popa
push
mov
xorl
rol
loope
icebp
daa
add
adc
and
xor
ja
inc
popa
push
aaa
roll
f2xm1
movsb
xchg
test
test
push
xor
and
in
hlt
std
repz
xchg
xchg
mov
fbstp
pop
arpl
jb
sub
add
pop
add
and
in
mov
cmpsb
repz
loope
icebp
daa
add
adc
and
xor
ja
inc
popa
push
jno
xorl
rol
loope
icebp
daa
add
adc
and
xor
ja
inc
popa
push
jno
xorl
push
mov
and
test
out
and
cmp
repz
xor
mov
scas
scas
adc
aam
jl
push
fiaddl
rorb
into
mov
mov
and
jmp
daa
xlat
lcall
push
jns
inc
xchg
lods
addr16
cmpsb
mov
push
adc
out
sub
xchg
inc
dec
ret
aam
xchg
loope
shll
fcmovu
adc
sbbb
add
and
mov
lea
mov
and
cmp
xor
pop
add
ljmp
sar
mov
mov
adc
xchg
out
add
adc
inc
push
cmpsl
fcomp
ficoms
dec
rcrl
sti
in
sarl
jmp
jle
popf
pop
lods
xchg
mov
or
mov
or
inc
pop
add
loope
jmp
jae,pn
dec
add
addb
jne
lcall
or
jmp
mov
jge
frstor
stos
lods
mov
adc
dec
adc
sbb
cmpsl
xchg
sarl
outsl
mov
fwait
mov
xchg
push
lock
call
and
iret
or
xchg
into
movsl
cmp
jae
bound
add
push
stos
pop
icebp
adc
in
ret
adc
shrl
lea
lahf
add
je
push
mov
push
pop
jnp
cmp
mov
sbb
jo
out
cmpsl
popf
popa
test
roll
es
sub
test
aaa
dec
cs
fwait
pop
fs
gs
cmp
jbe
dec
repz
push
jo
leave
pop
dec
sahf
xor
push
addl
jg
cs
cmpsl
insl
sahf
sub
mov
mov
mov
add
xchg
cwtl
sub
dec
sub
cmpsb
mov
sub
mov
ret
pop
in
and
repz
cmp
jae
xchg
jae
sahf
pop
test
add
xor
lcall
sbb
mov
js
xchg
push
dec
fs
loopne
stos
lret
lret
es
jae
add
adc
enter
jnp
pop
rcr
aad
lock
sub
cmovnp
loop
dec
jp
testb
jae
das
outsl
and
sbb
cmp
fdivp
js
sub
out
push
cmp
enter
xchg
cmp
mov
shlb
and
les
dec
daa
int
pusha
fwait
dec
sarb
cwtl
popf
mov
inc
mov
mov
lret
mov
shlb
jge
sahf
fists
jle
push
and
mov
push
mov
leave
popf
stos
call
mov
in
jle
out
cltd
and
push
pop
jb
call
xchg
inc
in
fsubrp
std
ret
enter
rclb
jb
enter
imul
xchg
aad
jnp
je
lods
out
sbb
dec
test
decl
push
fsubrl
rcpps
mov
cmp
fbstp
imul
mov
aaa
pop
mov
fsubrp
loope
push
das
mov
call
xor
xor
mov
xor
scas
jle
pop
cld
xchg
mov
lods
into
adc
repz
pusha
cmp
cli
cmp
popa
les
cmpl
inc
loop
jmp
add
shll
push
jge
repnz
je
push
mov
xchg
push
pop
pusha
outsb
push
add
cmp
arpl
repnz
push
mov
test
push
fdivp
fs
cmp
cmpl
mov
or
aas
dec
and
cmpsl
enter
fists
adc
fwait
in
ljmp
cmp
pop
push
scas
inc
cmp
push
mov
cmp
adc
mov
mov
add
dec
jl
sbb
test
cmpsl
mov
repnz
fwait
lahf
or
mov
mov
mov
fbld
mov
cmc
add
mov
cmp
shrl
pop
pop
test
ret
rcrb
lea
pop
xchg
or
jno
mov
jae
dec
movsb
sbb
mov
inc
xlat
mov
fstpt
sbb
test
jg
cmp
inc
xor
sbb
mov
push
pop
test
lret
imul
out
cmp
out
mov
pop
mov
out
test
jle
lds
cld
push
xchg
popa
dec
xchg
pop
ja
iret
scas
popa
cmpsl
xor
popf
push
or
gs
movsl
aaa
leave
jae
mov
inc
lock
test
mov
fcoml
test
push
ss
xchg
stos
imul
inc
cmp
sbb
push
rcr
inc
pop
shl
or
xorb
lea
cs
mov
pop
sub
subl
aam
mov
int
pop
xor
dec
popl
push
add
jno
mov
in
out
into
cmp
out
into
popa
mov
and
ud2
xor
adcb
pop
cld
stos
xor
add
jbe
xchg
pop
xchg
aad
inc
loopne
mov
add
jg
loop
stos
loopne
aad
pop
leave
mov
jle
xchg
sub
mov
mov
jns
push
dec
enter
jmp
testl
jnp
sbb
xchg
sub
cld
pusha
idivl
mov
adc
or
xchg
enter
mov
mov
fidivrl
rorl
cmpsb
xchg
jge
into
fwait
mov
adc
push
and
pop
and
inc
fsubrs
lcall
add
stos
iretw
movsb
mov
mov
fmull
push
sub
jnp
mov
xor
shlb
je
mov
fyl2x
out
cmp
jge
cmp
call
mov
pop
jmp
push
dec
sub
jo
nop
es
push
or
sarl
mov
sbb
sbb
pop
jbe
dec
mov
push
fdivrl
mov
xchg
inc
xchg
sub
ret
sbb
aad
and
pusha
xor
push
jbe
mov
fstps
xchg
push
int
pop
das
sbb
lods
popf
es
aad
push
cli
shl
enter
cld
cltd
push
imul
out
cwtl
sbb
iret
ret
jns
shll
dec
dec
mov
pop
mov
lfs
loope
pop
cs
sbb
xor
je
dec
or
insb
shrb
push
rcrb
mov
or
lods
rorl
test
mov
sbb
and
rolb
es
adc
sbb
jo
xchg
arpl
lea
mov
test
xor
jnp
orl
cs
pushf
sbb
subb
push
jg
sub
in
xor
loopne
push
push
sub
mov
pop
daa
iret
xor
pop
adc
xor
xchg
std
sub
jns
mov
lock
std
sahf
push
xor
icebp
sub
adcb
cld
les
lods
sbb
lds
dec
fwait
mov
lods
sub
adc
jge
and
mov
loopne
push
and
inc
daa
test
outsb
pushf
push
mov
xor
add
sub
xchg
jo
pop
mov
add
shrl
in
cmp
lret
sub
ja
in
push
xchg
lahf
mov
sub
xor
or
dec
xchg
sbb
mov
fs
imul
pop
div
dec
out
cmp
sub
adc
aaa
push
rcrl
fs
add
sar
enter
cwtl
mov
or
cmpsl
xchg
cmc
sar
loopne
enter
jne
orb
xchg
jmp
pop
push
iret
jge
out
inc
scas
es
fdivrp
xor
imul
pop
xor
je
sahf
fstps
xor
pusha
push
push
dec
rcrl
pop
cmp
insb
add
mov
cmp
cmp
mov
lret
jne
js
popa
jo
ret
push
pop
inc
xor
test
loopne
icebp
pop
rcr
push
aad
xor
and
push
push
push
add
push
push
jl
mov
push
std
xchg
push
cmpsl
test
adc
or
sbb
jo
mov
push
mov
xlat
add
xor
fisubrs
pop
sub
mulb
rolb
jge
les
inc
test
lea
dec
mov
sub
mov
jmp
xor
mov
inc
cs
jl
ret
call
insb
or
ffreep
jb
xchg
pop
dec
jo
cmp
pop
mov
fstpt
test
xchg
or
add
pop
scas
rcll
bound
daa
mov
adc
sbb
push
push
mov
add
jmp
daa
out
dec
gs
nop
out
sub
fwait
mov
xchg
int
fstps
in
notb
notl
sub
pop
gs
push
dec
imul
mov
add
push
sbb
fdivrp
jecxz
lods
pop
ds
loope
hlt
dec
sahf
cmp
cmovbe
pop
add
jle
push
loopne
ds
jle
mov
int
add
mov
shll
std
imul
or
lods
and
mov
jo
mov
cmp
andb
adc
fs
inc
jge
or
shlb
popa
mov
out
movsl
mov
out
repnz
movsb
lret
mov
mov
inc
xchg
imul
in
cld
ror
mull
sub
pushf
cmpsl
or
popf
hlt
lods
mov
pushf
mov
aad
mov
or
out
in
cmpl
stos
pusha
rorb
xchg
mov
mov
test
mov
leave
xor
incb
xchg
scas
or
jne
hlt
push
int
adc
mov
add
mov
scas
prefetch
sub
mov
add
jecxz
and
xchg
inc
push
loop
flds
cmp
and
enter
ret
xchg
xor
pop
add
loop
dec
fnstsw
movsb
sarl
daa
inc
arpl
add
adc
test
fcompp
aaa
lock
insb
icebp
rcl
sub
in
jmp
sub
in
push
loop
jmp
pop
test
inc
call
scas
pop
sub
aam
sub
dec
fs
mov
push
mov
pop
mov
sbb
and
push
aaa
add
jmp
call
and
jo
push
dec
jmp
out
mov
and
fidivrs
sbb
inc
jbe
add
jne
test
dec
fbstp
movl
out
mov
jnp
inc
testl
in
shll
inc
mov
cli
xchg
xor
shrl
push
imul
inc
lods
out
cmp
out
sti
rcll
mov
mov
rorl
jbe
and
ds
stos
mov
pop
out
add
test
lock
shr
hlt
sub
sbb
or
push
adcb
fdivrl
cmp
or
arpl
jle
mov
dec
lret
pop
cmpsl
sbb
mov
jmp
ljmp
mov
push
jl
jecxz
pop
leave
stc
inc
gs
scas
outsl
loopne
fstpt
or
pusha
cmp
ljmp
cmp
xchg
add
inc
dec
mov
push
cwtl
mov
jae
mov
pusha
jb
sub
jae
mov
leave
cmp
das
mov
adc
add
pop
sbb
dec
jmp
cmp
mov
aas
pop
mov
das
cmp
stos
negl
add
inc
xchg
pop
and
xchg
lret
enter
gs
cmp
pop
daa
sbb
enter
mov
rcr
ljmp
mov
sub
mov
fisubl
fcompl
test
xchg
pop
push
cmp
push
mov
test
insl
jmp
push
shr
xor
stos
adc
ja
insb
shrb
jb
hlt
pusha
pop
add
inc
jle
xor
lahf
mov
ret
sbb
call
push
pop
mov
movsb
je
mov
ljmp
push
fsubl
mov
daa
xor
call
adc
sub
nop
inc
pop
mov
mov
sub
sub
in
in
sbb
xor
out
test
or
mov
xchg
lret
pop
sub
rclb
in
mov
add
out
add
ja
jb
jge
orb
clc
mov
loope
subb
or
jne
sub
cmp
fucomip
daa
push
dec
lods
jle
int3
loope
fxch
in
fldcw
push
mov
jg
enter
daa
shll
mov
in
mov
jno
das
mov
mov
lods
mov
iret
imul
xor
les
pop
in
dec
fisubrs
and
notb
mov
mov
cltd
idiv
dec
pop
sahf
ret
das
inc
pop
popa
xchg
mov
cmpsl
fstl
and
cltd
dec
jns
insl
xchg
and
dec
fists
xchg
out
xor
pop
repnz
and
jbe
mov
outsb
adc
adc
scas
lahf
sbb
adc
sahf
add
ds
fisubs
in
mov
push
mov
cmp
adc
in
fnstenv
adcb
loopne
dec
lahf
imull
popa
in
test
movsl
jmp
aad
jp
mov
dec
pop
je
jne
mov
call
repz
imul
pop
dec
jnp
sbb
hlt
and
lcall
inc
xor
sub
jmp
sub
scas
sbb
and
dec
inc
push
jg
jmp
mov
test
aad
dec
add
cld
xchg
ret
xor
pop
adc
dec
pop
cltd
repnz
push
push
sub
lcall
movsb
testl
arpl
xchg
sbb
add
or
out
inc
dec
out
sbb
mov
je
cmp
out
repz
fsubrs
rolb
pop
addr16
movsl
out
mov
fs
pusha
jb
cmp
sti
cmp
cld
jl
fistl
or
jbe
and
pusha
scas
sbb
mov
xlat
add
xchg
cmp
jg
adc
inc
mov
lock
pop
add
rcl
out
xchg
fcmove
xorl
iret
jns
push
mov
inc
jle
or
sbb
mov
push
pop
pop
or
gs
sbbl
jl
mov
fcompl
fxam
pop
pop
pop
push
mov
adc
lret
sub
mov
push
call
sbb
and
add
sbb
pop
mov
lret
sbb
jge
movsl
fidivl
jno
addb
sahf
ret
or
mov
or
push
lds
pop
pop
jbe
movsb
aam
add
pop
cmpsb
xchg
lods
mov
dec
cmpsb
mov
pusha
mov
sub
int
lahf
mov
push
fimull
out
jns
adc
fistps
add
xchg
xor
pop
dec
sarl
mov
pushf
aas
sub
mov
xchg
in
repz
loop
xlat
xor
out
sub
add
aas
ret
negl
xlat
push
push
js
test
pop
mov
sbbl
fidivrl
stos
test
iret
fs
push
mov
add
pop
adc
stos
les
cli
mov
xor
mov
cmp
iret
sahf
and
jnp
dec
stc
mov
rcrb
rcrl
out
jae
in
cld
fsubp
les
xchg
cs
mov
loopne
adc
xor
adc
push
out
mov
in
push
jne
stos
sbb
push
data16
mov
xor
ja
adc
mov
ror
fisttps
inc
out
inc
lret
push
call
xor
clc
popa
push
dec
mov
loop
sub
subb
mov
xor
lock
cwtl
mov
dec
mov
jge
loop
sahf
shrl
adc
add
cmp
loope
repz
outsl
add
aam
mov
test
imul
loope
dec
xor
xchg
divb
pop
sbb
mov
push
aas
aaa
dec
dec
mov
fsubrl
std
loopne
jo
adc
adc
je
or
mov
nop
inc
ret
xchg
jbe
mov
fidivrl
xchg
adc
push
iret
sbb
sahf
mov
xchg
cmp
ds
jp
mov
push
daa
lcall
pop
or
mov
adc
daa
cmpsl
dec
and
sbb
mov
and
test
adc
fistpl
mov
jge
mov
push
pushf
jecxz
adc
pop
ljmp
in
mov
sbb
aaa
inc
add
mov
inc
mov
push
jle
dec
mov
shrl
mov
mov
movsl
jl
bnd
ret
pop
push
and
ja
xchg
rcrl
cltd
stc
aad
pop
adc
lcall
mov
ljmp
repnz
data16
inc
push
jns
mov
inc
mov
clc
mov
mov
lret
popa
sub
jle
into
incl
repz
in
jo
popa
repz
or
inc
jb
cs
movsb
aad
popa
adc
cli
xchg
dec
cmp
jne
cs
add
hlt
sub
sub
sub
dec
dec
aaa
out
mov
push
test
pop
scas
in
lcall
xchg
dec
sti
leave
pop
lea
test
mov
jmp
pusha
mov
mov
iret
rolb
mov
ds
cmp
sub
imul
jno
add
dec
lock
lret
mov
ss
push
out
push
xchg
adc
jecxz
sbb
lock
lea
cwtl
je
lods
in
mov
stos
fs
lea
cmp
fisubl
jnp
inc
lret
in
test
orb
cmp
and
orl
push
push
xchg
and
mov
cmp
adc
inc
stos
outsb
dec
lret
imul
icebp
or
je
mov
lea
sub
int
enter
push
push
orb
add
sub
pop
gs
sti
add
mov
or
xor
int3
aam
aas
test
dec
fidivrs
stc
out
jne
xchg
bound
or
jl
jmp
jb
jbe
and
sarl
bound
std
clc
rcl
sub
or
lcall
sub
sbb
mov
and
sub
xlat
lds
inc
adc
andb
je
cmp
adc
lret
inc
imul
js
lret
in
pushf
push
adc
xchg
rorb
dec
pop
and
pop
and
jl
stos
push
and
ljmp
movsb
outsl
jle
loop
pop
mov
sub
test
push
and
xor
xchg
mov
pusha
fldcw
ret
push
daa
aas
push
push
stos
push
and
sti
pop
scas
fwait
ja
ss
ja
pop
std
ds
push
mov
lods
stos
xchg
pusha
push
mov
mov
xor
test
push
shrl
inc
mov
iret
shrb
jo
push
mov
add
pop
mov
das
cmp
sub
insl
or
adc
sar
mov
xchg
pop
ret
pop
mov
cs
xchg
mov
outsl
out
or
mov
or
mov
dec
mov
je
dec
ljmp
enter
xchg
mov
faddl
cs
es
data16
cmp
mov
mov
inc
jl
ret
dec
cmp
cmp
mov
fidivrl
data16
mov
xlat
movsb
push
jg
inc
push
push
xchg
mov
pop
roll
lock
popa
xchg
push
pop
pop
mov
jp
scas
cltd
out
mov
pusha
jge
dec
rcl
in
js
daa
xor
mov
pushf
push
push
xor
out
xlat
mov
shlb
ret
sar
rorl
mov
add
jp
jmp
and
mov
scas
cli
pop
jae
movsl
jmp
jmp
xlat
mov
scas
pushl
and
inc
loopne
mov
or
xor
mov
adc
les
mov
xor
dec
cmp
decb
fldl
addr16
dec
lea
mov
push
lds
inc
mov
je
pop
repz
xor
insb
inc
js
mov
inc
dec
movsb
out
xorl
movsb
mov
mov
pop
inc
test
or
sub
pop
mov
daa
xchg
je
loop
xor
jo
or
or
popa
push
pop
mov
out
xchg
pop
popa
push
xchg
fiadds
sub
loopne
push
mov
adc
clc
add
mov
pop
sub
pop
or
ds
jg
pop
fsts
xchg
mov
shl
loope
icebp
daa
add
adc
and
xor
ja
inc
popa
push
jno
xorl
rol
loope
icebp
daa
add
adc
and
xor
ja
inc
popa
push
jno
xorl
rol
loope
icebp
daa
add
adc
and
xor
ja
inc
popa
push
jno
xorl
rol
loope
xor
add
mov
adc
ljmp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lahf
dec
movsl
pusha
sub
js
inc
repz
add
or
add
add
add
add
add
add
cmp
cmp
xchg
add
push
addb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
or
add
add
loop
roll
add
add
add
add
add
xchg
add
add
add
add
add
add
add
push
add
jns
push
add
add
mov
cld
add
add
add
add
add
loope
jo
lcall
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
addl
jns
dec
add
add
push
mov
adc
add
add
jns
addb
add
add
adc
or
roll
jno
roll
add
push
sub
add
inc
add
add
add
add
add
add
add
add
add
sti
add
add
add
add
add
or
mov
dec
add
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
add
icebp
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
roll
add
add
add
add
add
add
roll
add
add
icebp
add
push
lahf
add
add
push
jne
icebp
add
add
push
add
add
cmp
jns
dec
add
xchg
add
add
add
add
add
stos
add
add
add
add
add
add
add
sub
inc
add
add
push
inc
add
jns
popf
add
les
add
cld
add
push
or
xor
sub
or
sub
jae
lea
dec
add
add
add
mov
xor
fadds
and
popa
add
and
mov
inc
add
add
add
loope
int3
add
push
add
js
cwtl
add
add
add
add
add
add
js
cwtl
add
add
add
xor
push
add
add
add
push
add
add
add
add
add
add
pop
add
mov
or
sub
sbb
roll
add
repz
add
add
add
add
push
mov
inc
add
add
add
push
pop
add
add
add
jne
cmp
mov
add
add
xchg
add
dec
add
add
add
push
dec
add
inc
add
add
add
add
add
add
cmp
pop
add
or
add
sbb
cmpsl
add
add
add
add
add
or
filds
imul
add
add
lahf
add
add
ret
dec
loopne
mov
xlat
add
out
rcrl
stc
pop
shr
clc
xchg
mov
mov
dec
fsubp
lahf
dec
push
cmp
rcr
sbb
dec
adc
adc
aaa
divl
dec
mov
test
jno
inc
fstpl
out
test
push
lret
daa
pushf
and
jb
xchg
push
sbb
je
jle
push
pop
test
adc
push
mov
push
lods
dec
sbb
test
shl
or
dec
mov
and
fidivrs
adc
test
xchg
jl
ja
or
arpl
or
add
xchg
xchg
jb
xchg
pop
js
out
mov
mov
insb
and
mov
fs
aaa
jge
push
push
int3
bound
lret
add
jne
mov
xor
push
mov
xchg
jnp
out
mov
sbb
push
push
inc
dec
lea
jmp
in
adc
fwait
loopne
sarb
adc
addb
ds
dec
cmp
mov
inc
inc
xlat
cmpsb
data16
sti
repnz
xor
mov
adcb
insl
mov
icebp
shlb
dec
out
and
cld
and
fisttps
outsb
outsb
addr16
xor
cmc
mov
iret
sbb
or
test
mov
dec
mov
push
pop
test
cmp
and
push
in
xor
cmp
xchg
pusha
ljmp
dec
inc
pop
cmpsl
pop
jge
pop
repz
dec
out
push
fnstsw
out
dec
mov
mov
cmp
sub
idivb
int3
pushf
and
cmp
jmp
int
jge
cmp
cmc
adc
mov
daa
je
pusha
mov
sub
cwtl
add
jb
xor
and
push
pop
push
mov
ret
push
lods
mov
rcll
jl
dec
cmpb
and
stc
jne
sub
push
je
loop
inc
fdivr
test
sbb
cmp
mov
fisubrs
inc
test
jl
mov
pop
sub
aas
imull
xchg
mov
fidivs
jno
cmpsb
aam
mov
pop
pop
stos
sub
lret
cmp
jl
jo
cmpsb
pop
pushf
xchg
cmp
add
pop
call
dec
pop
xchg
les
push
xchg
pop
loopne
xchg
out
stos
icebp
es
add
rcll
mov
push
or
mov
int
out
in
mov
sub
jbe
cmp
jp
mov
push
movsl
je
xor
xchg
mov
jmp
scas
jne
cmp
sbb
popa
or
adc
sub
push
sub
jno
arpl
in
push
fistpll
data16
shll
leave
xor
sub
dec
adc
dec
inc
out
push
sbb
imul
push
pop
jb
push
lahf
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
