call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
push
mov
dec
test
test
pop
cmp
or
dec
into
dec
fidivrs
push
mov
cli
outsb
ljmp
mov
add
jp
pop
cld
pop
into
dec
fisubs
push
xchg
push
jecxz
bnd
inc
and
jb
jp
add
mov
lds
imul
test
lods
or
repz
mov
jb
imul
jnp
cmp
push
mov
pop
ss
rcrb
ljmp
push
add
fdivp
popa
sub
mov
inc
mov
push
imul
or
insl
scas
aad
and
xchg
dec
xchg
inc
pop
into
dec
fwait
mov
icebp
scas
dec
add
cmp
jno
adc
xor
ljmp
push
scas
repnz
push
in
inc
sbb
daa
sub
out
movsl
popf
pop
pop
push
rorl
jne
add
dec
ret
cmpsl
aam
jno
popa
aas
cmp
pop
int3
dec
fdivs
mov
lcall
jle
dec
roll
scas
xor
divb
inc
aam
cs
dec
ljmp
jnp
insb
mov
xchg
and
cmp
roll
mov
jp
paddb
mov
lret
push
cmc
jge
jno
outsb
ljmp
fimull
sbb
dec
pushf
jp
add
sub
cs
fildll
imulb
pop
mov
ljmp
scas
sub
jp
push
pop
into
dec
fidivrs
push
mov
cli
outsb
ljmp
scas
sub
jp
push
pop
into
dec
fidivrs
mov
sbb
in
loopne
orb
sbb
push
notb
ds
jge
in
fisttpl
fcomps
aas
fists
push
es
mov
sub
jne
pushf
mov
sub
dec
lock
sti
xchg
xor
cmc
xchg
pop
and
out
adc
shll
push
jge
push
mov
inc
inc
jg
and
mov
pop
subl
and
push
sbb
out
pop
or
mov
jecxz
out
push
lcall
les
dec
cmp
aam
dec
xchg
hlt
adc
aam
outsb
sbb
movsb
adc
or
xor
mov
add
in
enter
sbb
inc
jmp
arpl
das
push
call
xlat
push
push
adc
inc
loop
call
cmpsl
out
rol
aam
mov
jl
or
fidivs
inc
or
add
add
mov
and
jns
pop
loop
icebp
and
xchg
jmp
jmp
inc
add
dec
or
sarl
gs
add
mov
mov
divl
jb
fldcw
cmc
push
pop
jmp
enter
jns
mov
push
aam
out
jb
inc
scas
test
mov
dec
mov
lahf
aam
sarb
movhlps
jbe
push
push
lods
movb
cmp
test
clc
cmp
daa
xchg
mov
int
int3
popl
incb
std
ficomps
adc
scas
clc
xorl
aas
fcmovne
dec
pop
fildl
clc
sbb
inc
jmp
inc
es
pop
inc
clc
mov
sub
mov
movsb
xchg
call
sub
lods
mov
xchg
dec
pop
pcmpeqd
sti
inc
ja
xchg
push
mov
mov
dec
shl
roll
ror
hlt
xchg
fcomip
xchg
mov
push
movsb
scas
in
push
mov
lret
push
jae
xchg
aad
inc
jne
call
rorb
add
test
sbb
call
fisttpll
stc
ret
sub
pop
adc
into
lock
loop
and
das
stc
shlb
and
push
mov
clc
xor
push
sub
mov
sbb
loope
cld
stc
fwait
push
test
add
push
stos
add
js
enter
ret
mov
nop
mov
imul
test
jecxz
mov
mov
cwtl
fwait
mov
inc
dec
adc
mov
orl
into
mov
shll
inc
cld
wbinvd
lahf
dec
xchg
stos
fwait
negl
sti
js
fidivs
out
lret
int3
icebp
mov
out
xchg
jecxz
fnsave
and
lcall
pop
bound
out
push
rorb
sub
ficoms
div
jecxz
lahf
xor
xchg
bnd
dec
cmp
rcr
imul
pop
mov
pop
sub
and
mov
push
out
rcll
dec
addr16
mov
in
or
pop
addr16
jb
sbb
sbb
mov
mov
call
loope
das
inc
jae
repnz
and
sbb
ret
lods
jne
fists
mov
shlb
inc
xchg
or
cmc
aad
cmp
call
mov
popf
pushf
movb
push
lret
pop
pop
jnp
insb
aas
push
push
je
repnz
jns
jecxz
mov
push
scas
inc
mov
cltd
or
push
mov
add
and
jne
cmc
cmp
mul
lcall
xor
sahf
push
movsb
mov
fidivs
cmp
in
dec
or
roll
cmc
insl
stos
ljmp
clc
pop
sbb
jg
stc
popa
gs
jecxz
cmc
jmp
push
outsb
sbb
jge
adc
mov
notl
test
adc
loopne
out
addl
outsl
rol
and
aas
dec
int
mov
and
mov
sub
fcoml
nop
fcomps
testb
int3
sbbl
stos
adc
sti
jne
icebp
rol
or
fiadds
mov
sti
mov
lds
popa
ret
fs
lods
scas
cltd
pop
jecxz
repz
sbb
cs
les
push
jbe
out
popa
sbbb
je
push
repnz
sbb
arpl
ja
xchg
aam
and
inc
push
test
and
test
mov
pop
popa
or
outsb
sub
test
subl
std
lods
imul
add
jae
add
jnp
jns
sub
shrb
outsb
sbb
adc
dec
sub
rcrb
jmp
neg
test
inc
lret
in
sub
pop
sbb
pop
fildll
pop
jecxz
jno
jb
pop
in
hlt
mov
pushf
mov
outsb
sbbb
lcall
adc
mov
or
mov
rcrb
inc
jne
xchg
add
outsb
cmp
in
cmpsb
jnp
sbb
fisttpll
arpl
outsl
jmp
test
movsb
add
push
test
aaa
enter
enter
sbb
mov
insb
sbb
nop
push
push
sub
jbe
addr16
rsqrtps
rcrb
add
lods
sbb
les
inc
jl
sete
outsl
notb
pop
sahf
and
cmp
sub
add
fimuls
inc
ss
cli
repz
inc
fwait
xor
push
loopne
xchg
mov
dec
js
cli
mov
imul
das
mov
repz
pop
jmp
jo
orl
xchg
dec
xor
jmp
ret
das
pop
adc
add
jmp
and
dec
and
ljmp
out
mov
xchg
pop
push
pushf
cmp
icebp
fdiv
stos
sbb
mov
cmp
inc
xchg
adc
fmul
mov
mov
lret
in
sub
xorb
fwait
in
cmp
xor
push
cmp
inc
adc
sbb
insb
jae
jle
pop
fs
fsub
push
sbb
push
pop
repnz
mov
xorb
add
xchg
insl
inc
push
lods
je
scas
adc
jge
pop
jo
pusha
mov
shlb
int
xchg
xchg
cmc
push
jge
adc
clc
ret
xorl
lret
add
push
dec
test
iret
aad
mov
mov
fdivr
repz
aaa
or
sti
sub
dec
pop
xchg
and
loop
sbb
push
jg
daa
icebp
add
lock
pop
mov
loop
loopne
adc
and
mov
xchg
mov
mov
mov
pop
lret
cld
sub
mov
test
add
push
or
pop
mov
in
pop
cmp
cmpsb
cmp
jns
jge
stc
sub
xchg
push
leave
leave
push
push
pop
test
pushf
sbb
repz
xor
jbe
mov
outsb
loopne
jmp
rcll
mov
xlat
pop
cwtl
mov
push
sub
icebp
or
jmp
inc
xchg
popf
inc
fwait
sbb
pop
fbstp
pushf
xor
je
stos
mov
push
iret
push
sbb
cmp
call
push
jge
push
lea
cmpsb
repnz
dec
in
cmp
lret
xchg
xor
imul
add
sub
inc
xchg
movsb
jmp
clc
mov
lods
fsub
test
push
das
pop
lods
lcall
lods
lock
mov
sbbl
jo
popf
jae
dec
push
or
lea
add
mov
rcrb
subb
daa
xchg
and
mov
loope
xchg
or
and
aam
dec
ja
xchg
mov
sahf
je
inc
cmp
mov
insl
mov
jge
jl
mov
and
out
inc
clc
pusha
pushl
insl
mov
pop
cs
push
inc
scas
lea
dec
add
mov
out
outsb
sub
test
shlb
pop
ss
pop
mov
push
mov
xchg
out
call
sbb
mov
ret
pop
sbb
stos
mov
or
ss
movsl
or
fwait
lret
or
inc
fsubs
xorl
sbb
inc
xchg
push
cs
sti
push
loope
and
push
mov
test
mov
shll
sub
xchg
icebp
out
pop
inc
xchg
addr16
repz
pop
test
fcompl
sbb
inc
mov
mov
ds
sub
push
in
fisttpl
jp
pop
inc
lahf
leave
mov
shll
sbb
mov
pop
int3
inc
ds
cmp
popl
sub
push
pop
cmp
aam
out
ljmp
cmp
push
sbb
cltd
cmp
fstpl
js
pop
loopne
push
pop
pop
sub
aas
mov
jmp
xchg
inc
xchg
pusha
sub
sbb
lret
lcall
jbe
sub
inc
call
test
mov
lret
enter
mov
and
sub
inc
pop
insl
and
mov
dec
scas
das
add
push
lcall
sbb
xchg
jo
lods
jmp
loope
movsl
pop
bound
sbb
arpl
add
xchg
test
bound
add
test
pusha
inc
out
ds
xor
push
call
and
imul
push
xchg
idiv
push
vandps
gs
rcl
lahf
inc
pop
out
cmc
push
sub
out
jno
xchg
imul
bound
sarb
pop
dec
or
in
mov
cmpsb
rorl
je
mov
cs
sbb
jp
add
mov
das
loopne
xor
frstor
testl
les
outsb
ljmp
popf
dec
ficoml
sub
test
jmp
cmp
pusha
rcl
dec
cmp
in
xlat
push
sub
lock
pop
into
cmp
aaa
int
je
pop
sub
add
mov
push
cmp
push
lods
inc
inc
dec
mov
es
push
scas
sbb
rorb
mov
sbbb
jno
filds
xor
sarb
mov
hlt
lock
inc
and
les
outsb
out
cmpsl
mov
mov
inc
int3
lock
dec
mov
sbb
loopne
cmpl
or
adc
out
lds
cmpsb
bound
xor
mov
repz
repz
shrb
mov
in
and
bound
cwtl
in
lret
arpl
mov
inc
arpl
mov
js
lods
stos
or
add
sbb
mov
invd
shlb
push
xchg
stc
fldl
sbb
jmp
lods
insb
cmp
and
leave
add
adc
icebp
dec
and
int3
and
lods
fistpll
and
pop
mov
and
lcall
pop
fadds
es
pop
out
fs
push
jge
dec
int3
shrl
push
inc
imul
jle
pop
push
outsb
mov
add
repz
rcrl
push
sub
inc
icebp
std
xchg
fwait
nop
in
out
sub
lret
push
enter
cmpsl
fs
lcall
fbstp
rorl
hlt
sbb
fucom
ret
xor
or
stos
insl
insl
inc
stos
or
fldt
inc
popf
xor
or
dec
lods
mov
mov
dec
loop
mov
dec
push
ret
push
js
mov
call
outsl
xchg
mov
outsl
dec
sub
stc
dec
or
inc
xchg
das
inc
outsb
jb
out
or
sbb
outsb
mov
push
das
push
push
mov
pop
test
inc
and
add
jmp
inc
adc
cmpsb
outsl
shll
pop
push
test
es
popf
mov
aas
push
mov
push
shl
lock
jo
inc
rorb
loopne
pop
mov
rcrb
sub
popa
jecxz
sub
xor
dec
fnsave
inc
jbe
in
out
insb
sbb
xchg
fists
sti
in
and
adc
lods
leave
mov
mov
cli
cld
mov
sub
js
push
cmpsl
pop
sbb
xor
sbb
lahf
jne
adc
icebp
dec
push
clc
xor
ja
incb
imul
mov
inc
pop
push
push
int3
xor
fnstsw
sar
mov
cli
int3
or
aaa
jb
jns
inc
ret
push
aam
aaa
sub
out
in
es
xlat
lret
cmc
mov
add
xchg
ret
mov
mov
and
neg
cmc
repz
bnd
in
in
cmp
clc
mov
xchg
add
xor
jle
leave
in
test
pusha
fldenv
mov
cmpsl
out
leave
mov
in
fwait
pushf
xchg
jnp
and
testl
xor
pop
sbb
fcomps
push
aas
pop
fs
jl
pop
jbe
and
pop
add
aam
push
push
sbb
jg
test
inc
mov
cwtl
pop
sbb
jg
mov
pushf
test
aad
inc
cwtl
js
mov
or
pop
dec
loop
cli
orb
das
cmpb
iret
sahf
xchg
lea
sbb
fwait
and
lret
faddl
and
das
or
xor
outsb
lret
sbb
sbb
cmp
mov
dec
and
adc
ficoml
jne
pop
aaa
int3
dec
jne
ljmp
sbb
or
sub
mov
loope
sahf
stos
test
push
xchg
pushf
lcall
cmp
js
cld
dec
addr16
mov
lcall
je
inc
js
pop
or
and
scas
push
ja
mov
xor
jl
xorl
arpl
push
test
sub
das
xchg
out
adc
dec
push
shrl
and
sub
fldl
jmp
push
inc
dec
pop
cli
shrl
xchg
aad
push
jbe
daa
sahf
lock
lods
cmp
jne
adc
dec
not
popa
jb
cmpsl
xchg
jmp
inc
in
into
lods
ja
adc
xor
mov
or
sbb
mulb
in
xor
xor
adc
pop
add
dec
pop
mov
mov
sbb
mov
mov
ret
mov
lahf
mov
imul
jnp
and
mov
inc
push
pop
dec
xchg
cmp
ja
mov
lret
jbe
mov
cltd
lahf
ret
fwait
test
fwait
xor
daa
cmpsl
jle
push
or
adc
cmpsl
cmp
jne
fcomps
or
je
sub
sub
aad
inc
mov
push
outsb
lret
mov
imul
enter
test
idivl
es
in
into
adc
mov
cld
inc
inc
call
scas
lahf
jo
mov
push
les
lock
mov
enter
mov
jecxz
pop
cmp
stos
dec
jle
sbb
jmp
adc
popa
aam
adc
idivb
add
shlb
xchg
jae
xor
mov
inc
jb
or
orb
popa
xor
or
cwtl
push
or
sub
and
rclb
mov
aas
imul
orl
ret
fucomi
pusha
mov
xchg
dec
notb
or
cs
push
sbb
xchg
pop
repz
xchg
mov
nopl
jbe
daa
add
out
cltd
iret
pop
push
pop
mov
aam
mov
fstl
fildll
xor
repz
and
test
in
push
rcl
mov
fwait
inc
inc
out
popa
das
mov
jmp
cwtl
mov
js
loop
ret
ja
mov
mov
xor
arpl
lods
rclb
adc
cmp
xor
movsb
xor
mov
pop
loopne
icebp
mov
mov
or
sub
dec
ljmp
pop
inc
mov
shrl
fnstcw
jge
push
adc
ret
push
les
inc
call
cmpl
sbb
and
and
les
jp
ss
js
xchg
xor
test
lock
fyl2x
sbb
dec
iret
ja
and
sbbb
cmpb
push
fldt
fs
or
or
xchg
cmpsb
fadds
and
push
test
push
inc
repz
push
imul
ss
popa
xor
add
ljmp
jl
mov
outsb
sbb
jne
mov
push
call
xor
fdivr
pop
test
xchg
loope
imul
daa
stc
sbb
js
jmp
pop
mov
xchg
test
loop
jmp
pop
adc
cmp
neg
imul
mov
mov
pop
addr16
mov
xchg
jle
and
pop
mov
popf
clc
add
insl
and
sahf
cmp
mov
sub
or
in
hlt
shll
mov
std
and
js
push
push
jnp
addr16
sarl
mov
outsl
fs
mov
jmp
mov
xchg
xor
dec
leave
sbb
pop
js
ds
imul
dec
cs
icebp
jl
lret
push
mov
xor
adc
cli
or
test
subb
lock
sbb
lret
push
test
cmp
sub
adc
pop
jmp
in
jo
mov
xlat
inc
imul
xor
xchg
cmovl
clc
icebp
dec
mov
jbe
push
rclb
add
ror
jno
mov
movsl
or
push
cmp
aam
movsb
or
mov
sub
lods
stos
dec
jge
popl
cwtl
jp
enter
inc
dec
addl
xor
mov
sub
jecxz
dec
push
scas
shrb
orb
pop
clc
inc
out
ret
vmread
movsb
jg
sbb
or
push
data16
pop
jg
lods
loopne
imul
ret
popf
mov
adc
cltd
inc
pop
fisttpl
sbb
cmc
dec
xor
dec
mov
subb
sub
inc
ficompl
fsubrp
push
jecxz
add
push
sti
cld
in
pop
out
xchg
xchg
dec
jae
xor
lea
cmp
ret
push
stos
adc
jnp
aam
xchg
fisttpll
les
movsb
mov
mov
stc
xchg
imul
movsl
push
sahf
fistps
xor
push
sub
iret
addr16
mov
inc
and
adc
adc
jbe
fisttpll
cmc
aad
lret
mov
lods
sub
xor
add
and
sahf
sbb
inc
stos
test
sbb
insb
xor
dec
das
lods
jbe
xchg
or
jns
ds
push
cmp
or
sbb
push
and
and
imul
lea
aaa
push
pop
call
ficomps
je
adc
mov
dec
loopne
imul
fxch
repz
push
cld
or
cwtl
push
xor
popa
jnp
arpl
mov
xchg
push
push
mov
fs
pushf
imul
push
movl
lea
xor
frstor
ljmp
shll
out
in
cwtl
scas
and
cmp
call
loopne
pop
dec
je
test
jo
std
push
loopne
leave
and
js
cmp
add
lds
movsl
xchg
divl
in
jo
cld
jne
stos
adc
jb
insl
test
clc
mov
mov
xchg
inc
outsl
daa
lock
xchg
insb
mov
lods
dec
add
in
push
or
faddl
iret
jae
hlt
lcall
loope
cwtl
mov
test
push
mov
cmp
sbb
das
mov
ret
pusha
call
sbb
addr16
pusha
xchg
and
imul
outsl
bnd
dec
inc
inc
loop
cwtl
xchg
sti
mov
jnp
jne
scas
push
add
subl
in
add
mov
mov
mov
dec
lea
sbb
dec
mov
ja
push
sub
out
lods
stc
enter
add
lock
dec
sub
add
into
xor
loopne
mov
sbb
or
daa
inc
or
imul
pop
dec
dec
iret
stc
int3
xor
fwait
xchg
out
push
iret
mov
jno
jo
push
cmp
adc
daa
fsts
outsb
and
in
pop
xor
fs
loop
fcom
in
das
dec
xchg
lock
or
inc
pop
sub
mov
sbb
add
imul
jnp
fisubl
push
aaa
add
push
sbb
cmp
sub
jno
xor
xchg
fwait
mov
jb
jb
push
frstor
jo
in
pop
lods
pop
jns
sub
shll
pop
sub
leave
test
fwait
and
incb
jl
test
ret
rclb
adc
scas
test
scas
inc
dec
psubusb
mov
out
xor
push
cmp
xchg
xor
lods
or
mov
iret
pop
sarb
lea
push
pop
jb
stos
je
push
jp
icebp
cwtl
mov
pushl
mov
out
orb
mov
movsb
popa
and
adc
cmp
dec
push
lret
and
mov
xor
push
ds
push
mov
cli
outsb
ljmp
scas
sub
jp
push
pop
into
dec
fidivrs
push
mov
cli
outsb
ljmp
scas
sub
jp
push
pop
into
dec
fidivrs
push
mov
cli
outsb
ljmp
scas
sub
jp
imul
lret
mov
or
jle
dec
dec
sahf
lds
or
or
mov
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
pop
cli
mov
andb
ret
imul
ret
adc
adc
push
mov
mov
andb
loop
repnz
and
andb
xor
and
adc
inc
mov
mov
lcall
push
fcmovu
enter
or
ficomps
mov
adc
sub
pop
and
loope
sarl
mov
dec
idivl
adc
outsb
inc
imul
pop
push
mov
or
pop
out
daa
xor
pop
add
xor
lcall
ds
cmpsl
cmp
xchg
insl
jb
jb
mov
cmp
adc
std
xor
lcall
loop
sbb
lea
lcall
in
ret
jbe
push
adc
loope
popa
or
lods
xlat
lods
inc
push
lea
cli
adc
and
es
loop
pop
xor
inc
popa
mov
push
mov
loop
repnz
lcall
sbb
or
jp
gs
ss
xor
orl
mov
pushf
and
orl
cmpl
in
and
inc
in
push
fcmove
mov
repnz
rcrb
mov
xchg
jbe
push
loope
out
jecxz,pn
and
jno
add
and
push
mov
repnz
and
shlb
ret
add
adc
inc
mov
mov
andb
loop
repnz
and
shlb
ret
add
adc
inc
mov
xor
pop
fildll
push
jle
cmp
mov
pop
mov
xchg
pop
movsb
adc
cs
push
repnz
jb
hlt
mov
and
test
shl
jns
xor
lret
out
mov
xchg
aam
in
js
mov
pusha
sbb
adc
mov
lds
rcrb
dec
xchg
cld
sub
mov
cld
cmp
ss
fsubrl
popa
addr16
out
dec
cmpl
jmp
stos
mov
out
lahf
test
add
rcrl
pop
ds
test
adc
dec
xlat
in
test
inc
clc
push
dec
test
dec
testl
popf
jae
push
dec
cld
lahf
je
pop
imul
dec
hlt
ret
repz
outsl
sar
rcl
pop
xchg
fisubs
cwtl
mov
mov
orl
cmp
imul
das
xchg
stos
cmp
iret
aam
xor
push
fwait
or
test
lea
std
es
shl
jns
mov
test
ja
outsl
mov
mov
cmp
fcomps
aad
in
in
jne
cmp
je
hlt
in
test
insb
and
jecxz
call
push
add
xchg
aam
outsl
push
push
and
cmpsl
jnp
test
xchg
mov
movsb
sti
xchg
or
xchg
lahf
add
insl
cmpsb
lock
fiadds
hlt
gs
cld
lret
mov
imul
loop
pop
sub
push
into
es
ss
or
sbb
js
andl
push
loope
mov
and
push
pop
inc
push
and
xor
ficompl
xchg
xcrypt-cfb
mov
inc
adc
mov
out
stos
xchg
pop
push
imul
pop
mov
jp
mov
idivb
xor
movsb
and
sbb
popa
daa
cs
sub
imul
sub
push
dec
orb
sbb
dec
mov
add
into
iret
in
add
shrl
mov
xor
cmp
lods
test
mov
xor
ss
adc
ss
sub
das
jle
xlat
ret
xor
data16
push
les
repz
test
or
call
add
cmp
xor
sbbb
lret
push
xor
hlt
jne
xor
xor
mov
mov
je
loop
mov
mov
add
mov
das
push
jb
jecxz,pn
ljmp
sub
mov
rcrb
inc
xor
mov
hlt
mov
lret
je
push
cmp
sub
hlt
outsl
mov
jle
cltd
xor
and
out
mov
fidivrl
dec
sub
loop
mov
add
sub
imul
ds
es
call
or
out
cmp
adc
mov
pop
stc
mov
je
lret
outsb
in
mov
hlt
ret
xor
into
popf
push
movsb
jae
cmpl
pop
mov
jp
push
movsb
push
xor
xchg
or
mov
dec
pusha
sbb
mov
jns
repz
aas
xchg
insb
lods
je
and
hlt
add
mov
arpl
movsb
adc
mov
lea
xor
xchg
mov
pop
mov
sbb
jmp
std
sub
jg
out
je
fsubrs
repnz
js
push
cmp
out
mov
in
std
int
dec
push
outsl
popf
pusha
adc
jmp
imul
bound
into
or
jmp
sti
sbb
loope
test
cltd
bound
pop
cmp
popa
mov
xchg
push
cld
arpl
je
sbb
dec
adc
jl
rcr
or
push
test
out
sbb
fnstcw
jnp
pop
add
xor
push
std
loopne
and
pop
push
ss
popf
jnp
xchg
fs
jp
jl
pop
add
xor
jmp
pop
or
push
adc
adcb
mov
divl
jge
mov
cs
lret
pop
add
mov
rorb
xchg
jnp
xchg
out
scas
jmp
filds
dec
shrb
inc
outsl
outsb
js
cli
xlat
cmp
sbb
dec
pop
aad
imul
add
pop
jp
cmp
inc
lret
test
cmp
mov
xchg
xchg
shlb
fs
mov
mov
fwait
pop
push
test
mov
fiadds
shlb
sahf
inc
out
das
or
inc
sub
cli
lret
sub
fwait
mov
mov
ficomps
adc
fldl
lret
repnz
xor
addr16
std
ljmp
les
sub
cwtl
sub
shlb
sub
xorb
pushf
movsl
negl
cmpsl
xchg
push
adc
enter
cmp
jno
imul
roll
fiadds
xor
stos
and
xor
pop
or
inc
sub
add
outsb
dec
into
xchg
mov
cwtl
cltd
jns
mov
insl
jl
xchg
imul
xor
and
add
out
adc
out
dec
or
cmpsb
lahf
and
cwtl
les
cs
mov
and
mov
pop
cmp
xor
lahf
mov
or
push
daa
clc
aad
jnp
shrb
jo
pop
int
pop
cmp
imul
xchg
aaa
inc
sbbb
jl
mov
aad
outsb
dec
fidivl
pop
movsl
mov
sbb
outsb
xchg
mov
mov
in
cmpsl
out
add
ficoms
movsl
cli
pop
push
inc
adc
outsl
pop
mov
out
xchg
cli
jno
lea
out
cmp
and
inc
lods
dec
mov
fildll
loope
dec
lret
pop
fnstcw
dec
into
inc
mov
pop
add
pop
jb
in
andb
arpl
mov
xchg
imul
jecxz
xchg
je
test
jle
sarl
insb
xchg
outsl
enter
dec
and
xlat
pop
mov
jne
orl
popa
xor
dec
aaa
mov
or
adc
sub
xchg
inc
and
jb
mov
pushf
xchg
movsl
push
es
xchg
movsl
cmpsl
push
clc
xchg
jae
call
stos
add
xor
sbb
xchg
outsl
mov
xor
shl
sub
sbb
sub
mov
and
scas
adc
or
loope
adc
int
or
or
aam
lds
int
xchg
dec
pop
repnz
push
mov
push
mov
mov
loope
sbbl
sbb
dec
popa
or
movsb
push
adcl
pop
test
mov
sub
add
mov
push
fdiv
frstor
shrl
inc
out
push
cs
dec
pop
imul
addr16
xchg
insb
fwait
mov
repnz
mov
xchg
add
jg
xor
and
xchg
adc
inc
outsl
pop
dec
fdiv
cmp
addr16
pushf
add
fcmovne
mov
inc
inc
imul
dec
mov
xchg
push
cltd
nop
push
mov
dec
cmp
adc
or
scas
mov
pop
pushl
mov
and
push
int3
push
shll
sub
hlt
aaa
cmp
dec
rcrl
and
add
or
xchg
in
stos
cmpsb
xchg
push
adc
iret
xchg
movsb
push
xchg
mov
stos
shrl
sbb
mov
mov
xor
bound
or
gs
addr16
mov
int3
mov
dec
mov
aas
or
ret
lock
sbb
push
mov
shlb
stos
mov
fbld
inc
jb
arpl
imulb
insb
adc
enter
fs
rolb
scas
sub
and
je
jnp
orl
mov
out
rcrl
loop
test
test
jg
jl
push
mov
add
push
xchg
mov
call
or
inc
push
mov
not
push
xor
pop
loopne
sub
xchg
inc
adc
pop
mov
mov
mov
fwait
out
xchg
rorb
int
out
nop
jno
iret
xorl
scas
fdivrs
or
or
shl
inc
lods
fbld
es
cs
movsb
pop
jne
xor
les
inc
mov
mov
sub
call
int
jmp
outsl
push
notl
inc
es
subl
push
sarl
shll
and
or
mov
jge
push
pushfw
lods
iret
push
adc
leave
andb
and
data16
push
in
mov
mov
lahf
cmp
or
xor
loopne
jnp
mov
mov
leave
sub
das
out
aad
cmp
adc
push
bound
sbb
inc
insl
js
jmp
pusha
pop
clc
inc
adc
sub
cli
sub
xor
xor
repnz
in
sub
sbb
push
jne
in
xchg
inc
push
mov
ret
addr16
arpl
in
inc
aad
popa
iret
cltd
mov
mov
cmp
xor
jnp
mov
loope
or
das
push
sar
test
pop
adc
mov
fdivr
gs
in
aas
ficompl
push
movsb
or
lret
add
frndint
push
iret
xchg
iret
mov
stos
dec
aas
and
enter
es
inc
or
cmp
mov
shrb
inc
sti
xchg
insl
movsl
sub
scas
inc
jmp
push
push
fimull
mov
cmpsl
jnp
pop
fabs
mul
push
sub
push
sbb
out
divb
js
adcb
cli
xchg
aam
adc
test
sub
adc
mov
scas
sub
cmp
add
mov
add
mov
aaa
sbb
sbb
out
mov
gs
lds
pop
stos
mov
clc
jmp
mov
jp,pt
xchg
cli
or
stos
pop
sbb
jle
std
xchg
inc
pop
out
lods
mov
push
jns
idiv
dec
mov
stos
int
inc
sub
popf
add
dec
fwait
dec
add
daa
dec
or
aam
xchg
pop
addr16
fisubl
cmp
add
mov
mov
push
lods
add
insl
js
cmp
sbb
cli
ficoml
pop
mov
mov
aad
cmp
xchg
cs
push
add
xor
shll
inc
inc
cltd
xchg
movsl
outsb
cmpsl
cmp
jnp
xor
stos
test
xchg
mov
sub
xor
jecxz
push
lock
in
lret
jecxz
leave
outsb
and
aas
xorl
jnp
into
sub
mov
adc
dec
in
adc
mov
imul
stos
sub
popa
loopne
and
xchg
lcall
pop
lock
sbbb
xor
icebp
imul
cmpsb
sahf
and
pop
adc
jg
pushf
gs
insb
movsb
pop
imul
cwtl
mov
cmc
sub
adc
mov
stc
clc
lret
adc
sub
mov
mov
and
jno
dec
xchg
cmp
jae
or
and
fwait
rolb
xor
jmp
dec
xchg
test
or
lods
sbb
sbb
jbe
or
imul
pop
pop
loope
push
roll
cmp
pusha
pushf
or
fcoml
scas
mov
mov
int
popf
lahf
jnp
xchg
outsb
inc
jmp
xchg
pop
addr16
push
bound
pop
lods
loope
das
call
or
jns
fs
inc
dec
xchg
out
push
mov
add
mov
or
lahf
dec
mov
out
or
pop
inc
lea
cmc
cmp
leave
mov
icebp
ja
rorb
xor
push
adc
lock
mov
mov
mov
mov
cmp
or
jo
in
lea
ret
and
dec
lret
addr16
adc
pusha
scas
inc
jns
test
fiaddl
mov
cmp
mov
std
int
aas
sti
inc
ffree
jg
mov
dec
imul
ljmp
jle
inc
lahf
or
jg
lods
push
loopne
inc
dec
push
mov
inc
jbe
xor
pop
push
cmp
jl
out
sub
mov
int3
test
cmpsl
jo
std
adc
push
push
push
sbb
fs
aam
lret
and
loopne
test
fisubs
cmc
push
ljmp
mov
jmp
and
fdivs
popa
cwtl
outsb
ret
mov
nop
popa
aam
jo
sub
imul
dec
ja
add
mov
pop
jmp
into
ja
pop
sbb
rcr
pop
push
dec
std
dec
fbstp
ror
push
in
or
mov
push
std
jl
sbb
mov
jge
js
int
push
mov
cmp
js
ja
daa
adc
nop
fadds
lret
mov
test
lods
enter
mov
xchg
push
mov
daa
movsb
rol
imul
sub
sbb
fiaddl
leave
scas
test
popa
mov
xchg
fisubl
xlat
pop
shlb
mov
mov
incb
and
imul
and
out
test
jns
push
mov
outsl
pop
pop
mov
xchg
out
sbb
sbb
int
ficomps
out
mov
push
pop
inc
push
sahf
xchg
sub
add
pop
pop
and
ret
xor
pushf
push
outsb
or
rcll
mov
test
sti
mov
xlat
pop
in
and
jg
jns
push
pusha
mov
aad
adc
stos
ds
push
adc
out
mov
out
adc
mov
pop
inc
aad
aam
lcall
in
leave
out
icebp
xchg
aaa
fdiv
jno
xor
mov
dec
dec
pop
mov
mov
mov
xor
sbb
cli
rclb
lcall
jl
jns
push
cs
ljmp
shr
jecxz
add
into
inc
mov
cmpsb
adc
dec
mov
loope
xchg
imul
sbb
xchg
adc
mov
outsl
stos
das
xchg
jg
ja
outsb
dec
notb
jnp
jle
popa
jb
and
daa
xchg
sbb
outsb
mov
repnz
jle
push
fisttps
int
xor
sbb
jl
jae
ret
out
inc
or
movsl
inc
xchg
dec
push
mov
inc
sbbb
sbb
add
outsl
fistl
stos
call
sbb
pop
gs
jae
jno
mov
jecxz
repz
out
jmp
jecxz
in
adc
mov
int
movsl
shlb
push
push
mov
xchg
aam
push
push
push
pop
and
arpl
insb
pop
aam
shrb
out
mov
rorb
pop
std
sub
pop
test
inc
jae
jne
fs
bound
test
fcompl
rorb
push
test
sbb
push
into
pop
inc
lods
push
fstp
or
dec
push
pusha
and
jecxz
add
mov
shll
push
pushf
aas
dec
xchg
dec
leave
xchg
xor
or
add
and
adc
jl
xor
or
pop
sub
or
int3
mov
imul
dec
dec
push
sub
outsb
mov
adcl
shlb
mov
jge
ret
or
out
fldt
aaa
dec
shlb
rcl
push
shl
call
lods
sub
jnp
mov
adc
add
loopne
fstpl
cmp
repz
push
dec
jns
test
pop
xor
adc
push
aaa
sub
hlt
pop
dec
aam
cmp
ja
and
rclb
cld
xorl
inc
or
jb
add
or
push
std
pushf
mov
or
scas
cmp
dec
repz
mov
mov
repnz
add
inc
bound
cmp
jmp
popf
cmp
cmp
insl
push
adc
mov
ja
push
inc
and
outsb
mov
cmp
repz
rorl
add
test
lret
push
sbb
popf
enter
xor
fildl
rcr
dec
xor
es
mov
lcall
loop
fsubl
cmc
mov
rcll
adc
popf
mov
aaa
les
gs
adc
scas
and
out
mov
insb
inc
push
stos
push
add
in
ja
mov
push
lods
xchg
int3
jo
mov
dec
fwait
popf
push
out
arpl
into
push
pop
ret
icebp
xorb
fadds
push
cmpl
push
sbb
inc
push
pop
fstpl
cmp
inc
inc
mov
adcl
jno
enter
stc
mov
inc
ljmp
std
rcl
adc
jecxz
stc
in
in
outsl
xor
adc
ret
inc
adc
inc
pop
enter
jg
movsb
mov
dec
push
aaa
push
iret
in
ljmp
popa
pop
jnp
popf
inc
mov
pop
sbb
movsb
pushf
or
sbb
xchg
sub
mov
outsl
in
cmp
leave
in
jnp
mov
mov
fcmovne
dec
stc
mov
mov
nop
push
sbb
pushf
dec
push
mov
push
xor
incb
data16
jnp
and
xor
jno
sbb
inc
fnsave
inc
mov
cmpsl
fcompl
sbb
out
add
mov
in
imul
std
dec
dec
and
cmpsl
mov
roll
aas
push
daa
cmp
add
dec
movzwl
push
sti
inc
fwait
push
repz
mov
fcmovne
cltd
push
mov
or
adc
push
xchg
cltd
lea
mov
mov
icebp
stc
jmp
dec
icebp
test
cmpsb
pop
bound
xorl
or
ss
stos
mov
add
std
sbb
outsb
dec
daa
pop
imul
repnz
bswap
testl
and
adc
shrl
mull
add
dec
xchg
push
sub
mov
loope
test
cmp
xor
out
das
pop
sahf
pop
imul
sbb
bound
imul
mov
push
push
jnp
ljmp
xchg
sub
clc
jg
data16
cwtl
out
mov
enter
jmp
adc
out
out
mov
xor
mov
in
andb
int
gs
xor
xor
jns
call
push
mov
jmp
rol
xchg
fwait
pop
outsb
cltd
out
hlt
jp
xchg
mov
aas
mov
in
lea
jmp
mov
push
aas
sarl
mov
xchg
cmpsb
test
inc
pusha
lret
inc
push
inc
pop
mov
hlt
daa
dec
fistl
bound
sub
loopne
cmp
dec
jg
cmp
push
loope
sbb
fistpl
jno
negl
push
mov
sub
ret
lock
les
mov
in
imul
les
movsl
sub
mov
sub
mov
mov
insl
sbb
in
jne
add
pop
lea
xor
sti
add
shl
add
push
push
pop
dec
inc
pop
cmpsl
and
lock
pextrw
jg
std
aas
es
and
ja
cld
mov
sbb
xchg
div
dec
and
cmp
xchg
mov
fistps
add
push
popf
into
shr
loop
sahf
cld
in
decl
mov
cmp
mov
pop
sbb
imul
inc
es
cmp
test
rcr
imul
test
xor
int
dec
les
sbb
or
lcall
inc
loope
xlat
xchg
mov
inc
insb
add
pop
push
sbb
pop
les
add
in
and
cmpsb
pop
adc
sbb
mov
clc
jo
out
dec
repz
mov
loope
fincstp
cmpsl
push
js
jl
sub
dec
inc
push
cmpsb
frstor
scas
fcomip
ret
lods
sub
sub
nop
inc
into
push
leave
sub
cld
cmp
scas
jg
adc
adc
xchg
clc
and
jne
incb
sbb
pushf
jbe
dec
add
xchg
or
mov
insb
lcall
or
jbe
inc
sub
sub
pop
aad
sub
sbb
outsl
xchg
loop
mov
fcom
orb
pop
icebp
mov
fimuls
adc
in
cmp
mov
ljmp
sahf
pop
mov
sbb
mov
cmp
xchg
or
mov
push
add
push
and
iret
add
xchg
test
pop
lods
mov
jo
enter
pop
dec
jns
push
lods
and
jae
scas
add
js
mov
das
mov
inc
jmp
cmp
sti
mov
stc
ret
mov
lods
int3
iret
xchg
add
pop
nop
dec
fdivr
dec
xchg
fistl
fmuls
adc
jle
add
mov
fnsetpm(287
mov
add
adc
add
xor
and
shlb
ret
add
adc
inc
mov
mov
andb
loop
repnz
and
shlb
ret
add
adc
inc
mov
mov
andb
loop
repnz
and
and
xor
add
adc
inc
xchg
push
dec
mov
dec
xchg
adc
adc
xor
mov
cwtl
pop
add
gs
or
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
and
adc
add
jo
adc
jo
outsb
lcall
sbbb
loopne
rorb
rcrb
push
ljmp
jo
pusha
mov
mov
mov
pop
mov
loopne
rorb
rcrb
ljmp
outsb
stos
add
aam
andl
cmp
pop
fwait
js
pop
test
sbb
insb
mov
scas
imul
mov
xchg
das
iret
dec
or
loop
add
mov
pop
push
loopne
fldl
aam
adc
ljmp
into
jmp
gs
and
pop
lea
out
mov
lcall
cld
sbb
adc
in
into
stos
pusha
stos
scas
arpl
mov
mov
movsl
vmwrite
push
hlt
sarb
ja
push
xor
inc
int3
nop
das
and
mov
imul
outsl
mov
scas
popa
mov
adcl
pop
jge
mov
rcrb
ret
sbb
jbe
adc
add
xchg
stos
sbb
jbe
cmp
dec
mov
mov
or
pop
pop
xchg
mov
pop
lds
sti
and
inc
ljmp
in
addb
mov
stos
inc
mov
lret
sbb
add
lcall
clc
mov
push
mov
mov
push
scas
and
pusha
mov
mov
mov
pop
lock
cmp
or
sbb
ljmp
jo
pusha
mov
mov
mov
pop
lock
cmp
or
sbb
ljmp
mov
fucom
in
jae
mov
insl
add
push
sbb
addb
in
inc
fistl
ret
jge
adc
rorb
inc
fcoms
mov
dec
cmp
add
lret
dec
popf
inc
addl
data16
sbb
stc
and
jbe
inc
jne
xor
mov
mov
push
jg
or
cmpsl
push
adc
pop
and
pop
popf
mov
outsb
dec
jns
push
or
inc
sub
jae
out
sbb
ret
mov
je
mov
pop
lret
test
dec
ret
cltd
push
aad
mov
xor
ret
jo
cmp
and
mov
adc
mov
mov
scas
mov
inc
and
dec
push
movsb
cmp
xor
imul
inc
lahf
scas
cmp
xchg
int3
lcall
ret
call
push
data16
push
mov
xchg
clc
mov
ret
repnz
movsl
push
out
ret
and
sbb
mov
mov
ja
jp
jnp
and
mov
sti
scas
sbb
and
sub
mov
push
iret
xchg
pop
pop
sarl
mov
ret
popa
ja
xchg
insb
pop
stos
mov
lea
pop
or
sti
push
inc
rcrl
xchg
and
push
sbb
daa
jae
cmp
xor
dec
sbb
mov
mov
bound
add
mov
mov
movsl
in
add
add
pop
fsubp
test
aad
data16
or
idivb
movsl
fs
ret
in
pop
mov
inc
rolb
jmp
sahf
pop
adc
addl
mov
xorb
mov
mov
test
loope
pop
cmp
lahf
cmpsb
gs
dec
adc
or
and
cs
loope
popa
rorl
dec
mov
mov
imul
add
call
jp
out
jp
fadds
push
mov
iret
push
mov
addr16
mov
xor
decb
bound
shr
push
loopnew
dec
adc
jge
xchg
test
mov
add
inc
sbb
pusha
push
pop
insb
inc
jmp
mov
push
call
mov
pusha
test
ja
inc
xor
dec
cmp
ljmp
xlat
lock
push
fsts
loop
push
pop
xor
aad
jo
push
scas
ss
inc
aaa
add
popf
ret
sti
test
jnp
push
mov
in
arpl
adc
clc
into
imul
sub
jae
push
mov
es
mov
hlt
leave
adc
shl
mov
imul
pushf
push
int
mov
push
cmpsb
cmp
loop
popa
aad
imul
stc
lcall
addr16
jo
sti
stos
lret
mull
cmpsl
out
in
dec
lret
scas
and
arpl
jns
es
imull
xlat
xchg
shrb
sbb
imul
xor
js
mov
lock
xor
mov
xchg
aam
sahf
fldenv
out
adc
stc
sbb
dec
or
lods
mov
xor
aas
int
dec
mov
adc
aaa
pop
pushf
mov
xlat
test
jae
cmpsb
aas
fldl
ret
in
adc
in
jecxz
scas
lock
and
pop
dec
cmp
inc
fidivl
sbb
inc
cmp
popa
aad
xor
pop
jg
int3
movsl
add
loop
cmovg
test
sbb
adc
and
stc
cltd
jmp
lahf
xor
faddp
cs
pop
ja
sti
mov
xchg
cwtl
cmp
lahf
cmpsl
adc
int3
and
mov
aad
cmpsl
mov
sub
movsb
sub
push
xor
ss
xor
mov
xor
cmp
cmp
fcmovnb
je
xor
fwait
jp
and
cmpsb
leave
lret
lret
jmp
xorl
enter
xchg
lahf
mov
ret
lods
ljmp
test
add
mov
sub
lods
and
sahf
aad
mov
jmp
hlt
dec
sub
addl
inc
inc
insl
sbb
fcmovne
mov
cltd
ret
inc
inc
lahf
xchg
mov
int
dec
jbe
mov
hlt
les
sbb
sub
insb
into
and
loop
push
mov
lldt
aas
sbb
lret
data16
push
mull
jb
fdivrp
adc
loopne
ds
cltd
sub
aaa
mov
jbe
fs
mov
lods
jb
movsl
cli
or
clc
bound
fidivrl
xor
test
mov
mov
adc
aam
push
inc
cmp
cmp
dec
mov
jnp
inc
scas
punpcklbw
mov
orb
xor
mov
dec
mov
mov
push
dec
int
nop
jo
xlat
aad
push
add
mov
and
mov
mov
jg
lahf
mov
mov
mov
jbe
shlb
fdivs
mov
insl
inc
mov
popf
sbb
testb
dec
das
pop
scas
icebp
mov
push
loop
fsubrl
leave
or
jae
xchg
rcrl
rorl
adc
daa
divb
ret
cltd
xchg
cli
sahf
pop
push
jle
jmp
and
aaa
bound
xor
jo
das
test
es
sub
mov
dec
sub
jge
jno
outsb
jo
jnp
mov
mov
pushf
mov
cwtl
testl
mov
test
stos
xor
xor
lods
sub
int
adc
aad
jns
push
pop
repz
js
pusha
iret
je
xchg
push
popa
dec
push
xor
adc
push
jmp
adc
jnp
jnp
mul
addr16
pop
sub
dec
jns
jmp
leave
int3
dec
sbb
int3
mov
mov
cmp
rorl
fdivr
test
mov
pop
jg
pop
or
shrl
xchg
test
in
inc
push
out
stos
out
sbb
sub
jb
pop
sbb
cmpsl
jb
sbb
sbb
xor
setnp
shll
xchg
and
lds
std
lahf
pop
popf
add
cmp
lret
inc
addr16
jo
and
test
dec
mov
cmp
xlat
rep
add
sub
dec
xchg
and
imul
imul
mov
mov
icebp
xor
mov
mov
popf
sbb
inc
lea
sahf
xchg
aad
movsb
test
js
sti
pop
outsb
mov
outsb
sub
mov
popf
push
test
mov
shrb
jb
mov
push
es
mov
roll
push
mov
dec
mov
adc
pop
xor
inc
data16
xor
iret
mov
xor
mov
and
mov
mov
inc
mov
add
sti
cli
jbe
cmp
mov
aam
pop
xlat
inc
xchg
xchg
sub
in
pop
push
test
xchg
out
lret
jg
mov
daa
ja
pop
dec
pushf
mov
adc
sub
sbb
xor
sub
stc
les
fisubrs
pushl
les
rorb
inc
mov
in
xchg
test
mov
pcmpgtb
dec
and
pop
pusha
cltd
fwait
sub
lahf
add
mov
ja
out
pop
mov
fsubl
mov
mov
pop
dec
sbb
push
mov
popf
jecxz
jecxz
out
shll
addr16
pop
fisttps
jo
ss
mov
mov
dec
lea
stos
popf
fldl
xor
push
pusha
xor
adc
shl
scas
scas
stc
xlat
int3
jb
in
or
fsubrl
push
fbld
sub
paddw
dec
mov
lods
lahf
pop
xchg
stc
add
ror
call
bound
xchg
pop
in
pop
or
lds
mov
mov
sbb
pushf
out
hlt
sbb
sbb
mov
shrb
inc
outsb
push
aaa
insl
xor
mov
and
ss
push
cwtl
in
repz
cltd
lods
pop
rorb
mov
ja
jb
sub
add
arpl
add
xor
pushf
idiv
aam
mov
mov
push
and
inc
lcall
push
pushf
ja
mov
aaa
xchg
dec
mov
jle
popa
icebp
cmc
insb
cmp
xor
push
sub
jle
xchg
sbb
mov
mov
imul
cmp
and
inc
icebp
sbb
xchg
movsb
cwtl
nop
mov
pop
std
movsl
negl
outsb
shrl
rorl
out
ljmp
mov
adc
ljmp
rorb
xor
mov
test
push
or
push
ljmp
aaa
scas
ljmp
in
xor
out
pushf
loope
pop
sti
inc
addb
inc
adc
adc
jns
jae
or
lock
in
adc
aaa
sub
mov
fs
dec
or
mov
and
inc
mov
lret
push
pop
pop
dec
imul
jmp
mov
pmaxsw
xor
push
adc
add
popf
lcall
hlt
and
cs
pop
pop
add
ljmp
cmpsl
mov
pop
jge
aaa
nop
mov
aaa
xchg
in
dec
push
push
pop
mov
mov
in
mov
xor
mov
jae
add
add
inc
inc
push
ljmp
popf
fcompl
xorb
sbb
sub
ds
and
push
rorb
jns
add
mov
mov
jns
out
jns
or
xlat
scas
pop
mov
test
adc
inc
pop
daa
fiadds
int
test
daa
imul
mov
imul
iret
sbb
jle
xchg
outsb
int3
sbb
fucom
mov
sti
xor
push
es
std
xchg
cmp
es
stos
orb
xor
xor
dec
and
test
and
sbb
push
pop
movsl
aaa
outsb
sti
sbb
das
jge
lea
xor
push
jmp
mov
jnp
adc
add
insb
adc
je
jno
orl
inc
adc
lods
sub
lods
add
sbb
adc
in
mov
jo
sbb
jns
and
push
and
add
iret
and
sahf
xor
sub
adc
lods
fstps
imul
xchg
roll
fisttpl
lcall
mov
fwait
xor
dec
imul
bound
call
icebp
mov
les
stos
add
repz
out
imul
fsts
or
imul
js
mov
aas
sub
cmpsb
or
pop
mov
arpl
and
dec
cli
xlat
jmp
fidivs
pop
andb
inc
lahf
cmp
outsb
inc
mov
mov
rorb
push
loopne
inc
lret
into
xlat
icebp
jl
dec
out
fdiv
and
inc
fcomps
sbbb
test
and
mov
ret
addr16
mov
cmpb
aam
xor
jae
not
xor
ret
fs
hlt
mov
inc
dec
mov
je
push
mov
pop
mov
repnz
xor
cltd
adc
lods
nop
sbb
pop
int3
mov
cmp
mov
scas
lods
sub
mov
push
inc
aad
adcl
test
xor
dec
gs
dec
adc
sub
stc
int3
sbb
icebp
outsl
ret
mov
pop
icebp
cmp
jbe
sub
sahf
sbb
loopne
add
dec
mov
add
and
sahf
into
mov
cmp
or
fisubrs
mov
jmp
jp
xchg
jno
xchg
sti
mov
inc
insl
and
leave
data16
sbb
out
lock
xchg
idivl
test
sbb
rcll
push
pop
mov
xchg
inc
movsl
adc
xchg
icebp
push
mov
in
je
loope
lret
add
push
and
sub
xchg
daa
push
ficompl
test
cmp
repz
sbb
adc
mov
lret
loopne
imul
push
out
jecxz
in
ljmp
xchg
or
mov
and
add
xor
xchg
adc
jg
popl
fidivl
insb
lret
inc
mov
and
aas
jl
inc
aam
jge
in
dec
jmp
jne
dec
fistpll
test
cld
xor
xchg
stos
scas
mov
lock
adc
jo
and
sarl
xor
cwtl
dec
mov
dec
jnp
dec
movsl
rcrb
and
data16
pop
push
push
out
int3
pop
lock
lea
or
lahf
inc
cmp
add
fsubs
jnp
repz
jecxz
imul
xchg
jecxz
popa
push
ficoms
lcall
das
mov
push
inc
push
mov
add
inc
adc
add
ret
push
rcrl
aam
mov
mov
orl
push
mov
mov
mov
clc
xchg
outsl
push
divb
sbb
mov
jnp
ljmp
xchg
jae
outsb
fwait
ja
xor
adc
ret
dec
imul
mov
mov
jno
bound
fwait
jne
paddw
pop
mov
add
cld
ss
dec
insl
jl
sub
filds
inc
loopne
addr16
mov
and
jo,pn
loop
hlt
lahf
ret
in
div
in
push
lcall
lods
movsl
jne
dec
cmp
sub
xchg
push
xor
mov
subl
pop
imull
inc
cs
jno
lds
fstps
enter
and
mov
sub
push
push
push
mov
lahf
xor
aaa
sub
sub
in
dec
adc
sarl
mov
shrb
gs
je
jge
add
stos
mov
out
ficomps
push
sbb
dec
push
mov
dec
cmpsb
divl
mov
addr16
mov
ja,pn
lahf
mov
or
fcoml
repz
cwtl
loopne
es
call
lock
sbb
jns
cltd
push
push
icebp
mov
inc
cmp
lret
shrb
or
out
xor
js
fs
sub
add
bound
dec
cmp
das
leave
sbb
daa
pop
cmp
outsb
lods
aaa
adc
stc
gs
xchg
or
movsl
out
inc
push
rorb
les
pop
sub
fs
fs
incb
hlt
or
stos
inc
fbstp
out
jno
fidivrs
mov
inc
inc
dec
pushf
mov
call
and
sbb
loope
aam
sarl
mov
in
mov
push
movsl
and
imul
xor
aam
repnz
lock
push
xor
add
xchg
mov
dec
sti
adc
cld
das
inc
sbb
insl
cltd
insb
lahf
int
cmpsb
iret
rorb
cmp
mov
ds
push
cltd
xorl
sub
or
sub
andb
gs
add
stos
out
and
stos
in
dec
mov
dec
pop
stc
adcl
jb
lds
add
add
mov
lods
push
cmpsb
dec
xchg
stos
imul
xchg
xor
cmpsb
pop
and
std
jae
aad
inc
add
sub
mov
ret
pop
aaa
fsubr
mov
sub
xchg
xchg
jne,pt
push
jns
loop
sub
mov
roll
add
sub
push
pop
mov
in
outsl
ljmp
int
rorl
and
repnz
cmp
adc
in
push
cmp
test
in
dec
sbb
sub
leave
pop
sbb
pop
imul
xchg
adc
add
lret
add
stos
aas
test
push
sar
add
stos
es
aam
xor
jecxz
popa
aas
inc
cs
jmp
cmc
out
jo
cmp
or
inc
scas
push
adc
fwait
push
xor
lods
and
mov
jns
push
mov
push
ret
sysret
in
arpl
sbbl
imul
xchg
stos
mov
cmp
lods
dec
arpl
aaa
icebp
in
mov
je
in
ret
icebp
in
sub
fstl
mov
dec
or
shlb
add
lods
decl
cltd
mov
pop
fisubl
jb
mov
add
add
adc
xchg
sub
cltd
js
fcom
jo
fisubrs
test
inc
ds
filds
add
sbb
aad
sbb
cli
push
add
sbb
mov
clc
inc
or
mov
in
jno
push
into
into
push
pop
cli
cwtl
xchg
sbb
sbb
cmp
cs
cwtl
xor
inc
loope
inc
ret
push
push
xor
int
fisubs
add
movb
js
cwtl
push
pop
hlt
imul
and
dec
loope
sub
loope
orb
nop
pusha
das
lret
jmp
lods
shll
dec
add
loope
cwtl
add
and
cmp
movsb
imull
movsb
lds
aam
adc
cltd
outsb
loope
pop
mov
xor
add
jmp
add
in
inc
aam
fstps
jns
lcall
lods
cli
lcall
les
lds
mov
mov
xor
daa
sub
inc
aas
xchg
and
test
dec
testb
inc
fiadds
mov
les
xchg
pop
xor
lock
fildll
adc
dec
std
cmc
push
mov
add
dec
push
ja
inc
push
loopne
imul
fcomps
and
fbstp
jg
cmp
mov
push
push
test
ret
mov
add
sti
insb
mov
push
mov
rclb
adc
push
pop
loopne
xor
fwait
inc
daa
jp
lds
adc
xchg
jl
inc
ja
adc
sarl
out
sub
scas
mov
test
mov
cli
push
fbstp
test
cli
orb
call
je
gs
xchg
loopne
push
lods
inc
xor
fwait
adc
xchg
inc
cmp
add
mov
cmp
mov
stos
xor
jp
sub
mov
push
jbe
mov
mov
repnz
jo
int3
xchg
inc
pop
add
arpl
fmuls
jns
shll
mov
dec
jl
mov
mov
popf
mov
outsb
cmp
adc
jo
daa
xor
pop
icebp
push
std
mov
inc
sbb
scas
mov
fwait
sub
mov
ret
aaa
dec
push
push
out
popa
movsb
mov
push
testb
pop
out
cmpl
jnp
cltd
jg
push
ljmp
inc
les
std
pop
pop
mov
aas
aaa
fdivrl
jae
jp
mov
push
cmp
dec
lds
pop
dec
test
data16
jg
sub
push
xchg
or
mov
inc
adc
or
mov
lods
add
inc
bound
and
mov
pop
adc
lock
mov
cmc
in
ret
dec
mov
dec
insb
cmp
xchg
iret
das
xor
sub
sbb
dec
in
dec
push
stos
sbb
or
sbb
mov
and
iret
iret
test
ret
in
test
jo
loope
stc
lods
inc
fstpl
push
bnd
pop
inc
push
mov
aas
pop
jge
sahf
mov
sbb
jae
fisubrl
inc
call
mov
shrb
add
daa
sub
cmp
inc
pop
add
clc
mov
lods
enter
or
bound
fwait
movsb
jne
mov
ds
push
jp
mov
add
mov
and
cmpsb
dec
scas
mov
pop
dec
xchg
sbb
push
xchg
cld
and
leave
xchg
inc
add
dec
push
lahf
imul
mov
lret
in
pop
add
jl
mov
adc
in
das
mov
jne
xchg
pop
sahf
shll
jns
mov
ret
xlat
xor
and
push
cs
mov
jg
add
mov
cltd
addb
cmc
inc
mov
and
insb
out
daa
aas
cmp
cmpsb
jmp
mov
rolb
cmp
jbe
inc
or
ret
dec
xor
cmp
daa
inc
push
or
add
ret
inc
ja
or
and
lods
mov
lea
in
scas
int3
pusha
add
add
stos
dec
inc
dec
lock
rol
rorb
adc
xchg
mov
mov
jo
subl
sbb
scas
mov
pop
cmp
jg
inc
scas
cmp
and
std
addl
int3
pop
cld
int
dec
cmp
cmp
add
xchg
ss
ljmp
outsb
xchg
mov
in
sub
inc
sahf
or
jnp
or
rorb
mov
mov
xor
xor
pop
adc
inc
movsl
fbld
daa
xchg
xlat
and
data16
clc
sarl
and
pop
xchg
into
push
mov
inc
add
repnz
xor
scas
cli
push
lret
add
jo
pusha
mov
mov
mov
pop
lock
cmp
or
sbb
ljmp
jo
pusha
mov
mov
mov
pop
lock
cmp
or
sbb
out
adc
jo
add
loopne
pusha
mov
mov
mov
pop
lock
cmp
or
sbb
jl
dec
lret
jo
jo
push
or
gs
pop
sarb
dec
subb
cmc
aas
in
push
pop
inc
insl
xor
shlb
inc
push
aaa
inc
int
fmull
xlat
popf
das
lods
repnz
add
jge
or
jb
dec
int
fldl
dec
cld
popf
ret
mov
les
jge
or
js
push
int
mov
lea
roll
insl
popa
adc
pop
xchg
mov
lods
sbb
jge
lock
leave
or
into
cld
or
shll
sbb
inc
sbb
popf
xor
jle
dec
add
jb
pushf
popf
cli
jns
scas
sbb
imul
xchg
arpl
int
mov
frstor
loopne
enter
dec
adc
pop
ss
sub
jb
mov
out
inc
pop
pop
bound
dec
xchg
mov
cs
mov
fstl
inc
scas
mov
sahf
and
push
adcb
xlat
std
mov
mov
repnz
sbb
cmp
rclb
fs
fnstsw
cmp
and
jge
or
jb
lock
in
mov
sahf
out
popf
sub
ljmp
add
adc
or
pop
aas
and
in
pop
test
mov
sti
mov
push
cmp
adc
add
push
sbb
test
mov
out
loopne
xchg
mov
enter
pop
loop
pop
adc
push
sbb
int
fldl
rcrb
loop
adc
insl
xor
or
jb
int
fldl
rcrb
loop
adc
lock
push
int3
repz
lret
fucomp
clc
out
and
or
jns
stos
mov
es
addr16
gs
mov
orb
cmp
dec
stc
int
push
inc
insl
inc
subb
mov
lods
push
xchg
mov
add
mov
enter
xor
cmp
fistpl
sub
in
push
das
into
jno
jnp
call
mov
leave
nop
pop
lahf
fisttps
in
xchg
sbbl
jns
push
inc
jne
or
sarb
cmp
loopne
sti
mov
sahf
dec
inc
jne
insb
push
in
imul
loop
add
fldl
xor
andl
jae
xchg
inc
dec
xor
out
scas
jbe
dec
scas
mov
mov
out
bound
in
nop
inc
insl
test
jle
push
pop
shl
jmp
push
repnz
aaa
jg
mov
fmulp
sbb
outsb
mov
insb
mov
or
pop
dec
push
mov
xchg
scas
push
fscale
std
movsl
push
shll
mov
xchg
movsb
aas
dec
gs
mov
clc
lds
sub
jg
idivl
sbb
pop
in
sbb
cs
stos
jge
outsb
repnz
cltd
outsb
inc
lock
arpl
loope
pop
dec
push
xor
pop
adc
sbb
xchg
or
rclb
fadd
cmp
push
add
cmp
mov
mov
jl
push
push
cmp
cmpsl
sbb
es
aaa
insb
or
add
mov
je
jne
mov
push
test
cmp
mov
pop
dec
push
xchg
inc
sti
push
pand
and
add
call
je
mov
xor
enter
jne
in
loope
sub
cwtl
dec
jnp
mov
addl
sub
icebp
into
fmull
dec
inc
fdivl
js
call
cmp
add
lret
pop
adc
fisttpll
outsl
jg
xchg
jbe
sub
and
push
or
jl
mov
test
xor
lock
roll
lods
add
cmp
push
jmp
call
mov
inc
xchg
stos
pop
fcomi
scas
xchg
dec
push
addr16
push
add
mov
dec
cmp
xchg
xor
test
filds
mov
test
in
or
jne
push
lods
mov
dec
mov
jmp
ljmp
cld
push
xchg
sbb
pop
scas
repnz
pop
loopne
xor
adc
ret
cmpsl
cwtl
push
stos
pop
insl
add
or
rcrb
hlt
mov
jl
les
in
inc
dec
jnp
mov
sbb
or
sub
xor
movb
scas
push
fwait
cwtl
cli
pop
and
jmp
fld
xor
cmc
sub
popa
jns
mov
sti
push
pop
mov
cmpb
inc
sub
scas
shll
loopne
xchg
or
and
xchg
int3
push
jp
iret
and
pop
cli
loop
adc
data16
push
mov
mov
test
jl
or
jg
xchg
cli
andl
mov
imul
rorl
test
push
or
add
push
int3
sub
addr16
out
dec
and
mul
jno
lea
inc
xorb
cmp
sub
mulb
mov
movsb
jle
dec
fstp
je
xchg
in
out
or
add
pushf
in
jo
setbe
out
mov
cmp
inc
cmp
xchg
fbld
scas
jo
outsl
fildl
push
pusha
push
jge
push
pop
testb
sbb
dec
es
cmp
push
sahf
imul
and
insb
adc
push
insb
pop
or
shlb
fdivrs
test
scas
enter
cmpsb
inc
cmpsb
iret
inc
fs
pop
popf
cmp
jae
inc
cmp
aad
inc
movsb
jnp
lahf
push
inc
add
sbb
popa
jl
lahf
loop
pop
cmp
test
out
cmp
push
out
jb
mov
xlat
dec
mov
inc
ror
pop
or
or
cld
or
std
lock
jmp
pop
mov
and
sbb
addr16
mov
in
aad
stos
jb
mov
ja
push
sub
pop
loopne
insl
lds
sbb
xor
into
and
mov
dec
out
push
xchg
sbb
push
lcall
sub
adc
shll
pop
xor
jno
nop
arpl
cltd
mov
popf
nop
lret
sbb
stos
pop
popa
pop
mov
jno
clc
lock
icebp
js
add
roll
push
inc
test
shrl
pop
push
push
jnp
inc
adc
xchg
icebp
xor
sbb
dec
mov
loopne
adc
jne
jg
mov
test
xchg
lods
jle
cmpl
enter
xchg
mov
mov
fwait
mov
mov
inc
sti
add
jecxz
jmp
cmp
adc
pop
xchg
or
lret
sti
adc
jae
loope
pop
ljmp
scas
jns
stos
dec
jb
pop
or
mov
mov
push
shr
xchg
mov
lock
mov
mov
stos
push
sub
test
or
test
jge
add
mov
cmp
pop
das
lahf
out
pushf
or
push
pop
test
fwait
mov
mov
mov
push
jecxz
pushf
xor
mov
shl
scas
fsubrl
popa
jmp
rcrb
insb
sbb
ljmp
jl
repnz
lcall
cmpl
mov
in
sub
inc
stc
shl
cld
sbb
push
shl
mov
ret
fstpl
xchg
mov
mov
or
mov
jp
insl
fs
and
jae
sub
lds
adc
aaa
fs
mov
fdivrs
aas
pop
rol
adc
push
jmp
pop
and
pop
jmp
daa
popf
lahf
mov
mov
xchg
mov
lds
jmp
push
and
xchg
sub
lods
aaa
add
ds
pop
jl
lods
dec
sbb
sbb
xchg
fildll
dec
xchg
cltd
jge
fdiv
mov
mov
mov
or
fistpl
mov
pop
jp
cs
pop
push
jp
mov
inc
mov
pop
push
adc
sbb
pop
pop
lret
xor
das
pop
addl
lcall
test
push
pop
enter
xchg
mov
fidivrl
sub
jmp
push
add
je
and
add
inc
je
mov
cmpl
sub
rcrl
fisttps
repnz
sbb
ljmp
push
adc
gs
ret
mov
call
pop
fs
jl
jle
stos
add
sbb
leave
xchg
addr16
shrb
addr16
mov
das
cmp
cs
inc
movb
fdivr
xchg
cs
jo
sub
push
cmp
mov
adc
jl
push
nop
mov
mov
fcompl
lea
cmpsl
xchg
imul
lcall
push
cmpsb
fiadds
mov
repz
inc
pop
and
jp
fwait
xor
mov
fwait
dec
movsb
jo
sbb
pop
mov
dec
push
lahf
imull
mov
lcall
or
insl
push
push
bound
sub
and
xor
pop
or
mov
insl
rolb
pop
ljmp
add
adcl
cmp
shl
pop
mov
inc
cmpsb
int
stos
jno
jmp
out
jnp
jnp
rcr
js
sbb
in
pop
repz
lcall
lcall
sahf
out
adc
repnz
femms
cli
insl
scas
push
icebp
push
push
pop
mov
and
les
mov
out
jle
adc
enter
jne
incb
mov
adc
add
aad
pop
mov
daa
call
lods
pusha
dec
sbb
popf
and
sub
push
add
pop
shll
hlt
mov
inc
xchg
mov
insb
and
fmul
in
xchg
push
jbe
popf
data16
add
or
jno
fs
test
dec
dec
dec
lods
mov
out
jns
cs
test
pop
mov
mov
leave
fimull
jp
pop
fprem1
cwtl
stc
adc
sub
mov
push
ret
sub
lret
push
popa
rorl
and
xor
jno
roll
sbb
mov
sbb
mov
mov
add
cmp
lret
pop
aad
xchg
mov
push
add
ss
cmp
in
xchg
mov
sub
mov
cmc
xlat
adc
fs
insb
rol
xchg
movsb
fcos
stc
mov
lock
mov
mov
cmpsl
push
das
sbb
mov
ja
lds
insl
add
xor
sarb
sbb
out
or
mov
push
push
popa
inc
pop
lahf
sbb
mov
sub
push
and
pop
mov
shrw
aas
ja
xchg
data16
sti
cmp
dec
fidivrl
jnp
pop
add
add
test
sahf
incb
push
lods
lock
xchg
andl
imul
and
xlat
mov
adc
xchg
mov
cmp
push
or
pop
lahf
mov
push
pop
adc
vpmacssdql
cmp
pop
clc
sti
pop
cs
bound
ljmp
pushf
int3
enter
mov
in
cmp
inc
jb
pop
sub
mov
arpl
fidivrs
ret
jp
and
rorb
out
dec
cmp
or
adc
js
mov
test
insb
dec
push
add
lods
ss
xor
loope
fwait
sub
jns
mov
aaa
js
popa
call
inc
in
fs
pusha
or
pop
mov
sub
pop
xlat
jbe
mov
cli
out
cmpsl
adc
filds
jae
adc
lahf
mov
cltd
stos
lock
inc
pop
test
jle
push
mov
push
cld
dec
movsb
sbb
notb
sbb
mov
mov
daa
and
pop
mov
or
push
lcall
roll
scas
les
dec
and
repnz
or
das
inc
subl
daa
bound
push
sbb
adc
push
mov
mov
ret
insl
cmpsb
sub
shll
sahf
mov
mov
test
lret
outsl
out
or
jp
leave
je
ja
add
adc
pop
out
clc
cmp
xor
mov
fs
lahf
dec
nop
push
movsb
xchg
mov
fnstcw
mov
bound
hlt
xor
pop
cmpsb
pop
jmp
xchg
sub
xchg
into
dec
adcl
jb
aaa
pop
push
hlt
adc
test
out
sar
add
mov
cmp
pop
lret
jae
push
push
enter
xchg
push
nop
mov
mov
adc
pop
out
std
sahf
lahf
int
jo
in
mov
aaa
xchg
outsb
xlat
inc
xor
scas
push
pop
inc
addr16
aaa
or
xor
pop
sti
xchg
or
dec
aam
ljmp
cmp
jle
fwait
dec
xchg
je
fwait
inc
in
mulb
mov
sbb
lds
mov
mov
pop
or
mov
es
psubq
mov
subl
cld
fnsave
jge
pop
cmpsb
iret
ret
pop
sarl
push
pop
mov
call
pusha
push
ret
mov
mov
mov
mov
pushf
xor
lock
or
sti
jge
mov
dec
cmpsl
or
mov
int3
cmp
in
int3
cld
mov
push
inc
fstpl
adc
scas
fs
loope
jb
fdivrp
cmp
jecxz
sbb
pop
adc
sarl
xchg
ret
mov
outsb
leave
push
in
cmp
mov
sbbl
pop
imul
adc
out
mov
jge
mov
pop
or
pop
stc
lock
adc
lcall
dec
mov
iret
maxps
stos
add
scas
mov
insl
icebp
loopne
imul
inc
cmp
movsl
in
xchg
aaa
pop
dec
xor
add
es
jg
or
loop
test
inc
je
mov
or
pop
or
dec
jno
mov
test
stos
int
js
mov
test
jp
mov
mov
roll
pop
scas
mov
fadds
call
dec
dec
fbstp
or
mov
or
inc
mov
xchg
sti
jns
int
leave
jns
lea
stos
cmp
jmp
out
icebp
push
xor
pusha
testl
xor
xchg
fsubs
adc
or
loope
xor
sbb
aaa
nop
cmp
insb
push
and
mov
xchg
add
pop
pushf
arpl
fcomps
imul
shrl
inc
mov
shll
or
std
jmp
faddl
push
pop
fcmovnbe
or
fnstenv
lahf
pop
hlt
out
cmpsb
cs
in
cs
out
push
xchg
mov
cmpsb
frstor
ds
xor
data16
push
fildll
inc
inc
adc
mov
cld
sub
mov
out
jp
jae
fadds
mov
xchg
insl
cmp
lock
mov
push
daa
shll
fiadds
sbb
lock
mov
idiv
or
add
fnstcw
test
jbe
and
cld
and
pusha
cwtl
ret
and
mov
inc
push
iret
sbb
jbe
repnz
insl
pop
test
ljmp
cmpsl
leave
xor
idivl
xchg
inc
mov
icebp
int3
dec
sub
mov
jb
pop
push
pop
repz
or
xchg
popf
outsb
jb
and
pop
sahf
shlb
dec
f2xm1
fldl
lahf
sahf
imul
push
inc
iret
or
mov
mov
jnp
fdivrs
push
mov
std
xor
jg
rdmsr
mov
xor
and
pushf
out
adc
popf
and
cli
jl
sub
or
cmp
push
jne
mov
aam
add
pop
xor
hlt
sbb
xor
pop
mov
mov
data16
int3
xor
jb
inc
subb
fcmovnu
jnp
mul
and
out
enter
cltd
pop
repnz
inc
jb
adcb
sbb
pushf
pop
add
loope
in
dec
jmp
movsb
xchg
pop
jns
test
xor
mov
roll
jge
pop
bound
adc
pop
aam
into
push
inc
roll
or
or
push
jp
popf
shr
pop
jp
sahf
pop
imul
orl
sbb
xor
shlb
xchg
insl
and
cmp
add
or
test
pop
push
sahf
xchg
and
lods
into
repnz
stos
in
inc
jb
inc
mov
in
insl
mov
push
add
jecxz
xor
fmulp
popf
push
jmp
push
xorb
jbe
xchg
decl
and
popf
add
fstl
jp
inc
movsl
mov
daa
fdivrl
mov
push
sub
fildll
jmp
es
int3
mov
cmp
push
jnp
mov
cmp
aad
add
sub
jp
int3
dec
in
test
jg
std
fwait
aas
out
dec
lock
test
push
movsb
jo
adc
jg
jmp
sbb
pop
mov
ljmp
xor
je
call
push
and
jo,pt
lods
mov
or
sbb
arpl
push
xor
inc
lret
push
lods
mov
ljmp
cmp
aas
out
outsb
jp
xor
pop
adc
push
fs
mov
mov
cmc
cmpl
out
inc
sub
sbb
enter
sub
inc
jns
lds
push
push
imul
adc
sarb
and
add
mov
cmp
sub
sub
lret
addr16
js
subb
push
xchg
enter
pop
and
fdivrl
mov
jmp
sbb
outsb
add
repnz
ret
pop
add
xchg
cmp
loope
xchg
xorb
xorb
shrl
mov
mov
out
mov
push
cmp
dec
mov
popa
inc
testb
cmc
jno
je
xchg
outsb
mov
add
push
loope
add
push
jbe
ret
adc
xchg
aad
pop
js
or
jecxz
jmp
add
std
sysret
iret
ljmp
add
stos
jle
mov
ja
jbe
repz
out
lret
xor
lret
inc
insl
pop
mov
hlt
stc
lahf
rclb
mov
mov
adc
cmpsb
jnp
sub
jnp
push
lcall
pop
jbe
push
mov
push
inc
mov
jo
dec
loopne
jmp
mov
adc
les
xchg
sub
adc
mov
dec
sahf
adc
sahf
push
ficoml
sub
or
pop
repz
add
push
and
faddp
sbb
fisttpl
pop
pop
mov
push
out
cmp
mov
data16
out
mov
jbe
dec
in
fiadds
aaa
lods
lret
fistl
dec
xor
sub
mov
pushf
and
sub
call
outsb
cmp
out
push
xchg
imul
mov
sbb
test
fwait
movsb
cli
jge
cmp
mov
add
jns
or
ficomps
insl
daa
jg
jae
sbb
or
test
rclb
and
push
inc
arpl
shlb
stos
mov
ficomps
xchg
daa
movsb
and
xchg
lds
es
das
adc
mov
gs
mov
jae
dec
pop
ljmp
pop
cs
outsl
push
aad
mov
insl
fsubs
and
pop
dec
mov
dec
test
mov
test
adc
cs
repnz
test
jo
pop
mov
imul
popf
xchg
dec
add
scas
pop
lret
inc
inc
dec
cmp
sub
xchg
es
jl
lahf
lcall
insb
les
in
imull
push
pop
pop
je
cmp
xorl
out
fst
xor
mov
or
mov
les
push
and
pop
insb
mov
repnz
adc
and
xchg
das
lea
icebp
add
dec
cmp
outsl
push
and
dec
pop
xor
std
fwait
mov
movl
outsb
cmpb
shll
sub
pop
test
xor
lock
and
insb
sbb
xchg
xchg
ror
clc
gs
enter
jecxz
ret
jmp
cmpsb
rcrb
add
in
iret
out
scas
cs
jno
shrl
dec
inc
mov
pop
mov
mov
fisubl
dec
inc
out
adc
dec
jbe
jp
negb
aad
insl
aad
jns
shlb
mov
xchg
adc
sbb
mov
pusha
cmc
xchg
push
jne
dec
adc
fildl
mov
pusha
jb
mov
lcall
push
fstps
aad
dec
testl
out
sbb
insl
inc
push
mov
sub
pop
movsb
in
lea
mov
adc
rclb
lods
arpl
pushf
adc
jno
test
cmpsl
inc
mov
lods
push
repz
xchg
adc
dec
mov
or
aad
push
cwtl
pusha
xor
dec
adc
rol
xor
imul
cs
and
pop
out
push
xchg
cmp
xchg
push
push
fistpl
fisttpll
cwtl
sbb
inc
cmc
sub
jb
rolb
pop
loopne
filds
lret
xchg
insb
dec
stc
fisubrl
pusha
in
xchg
sub
push
add
sbb
jnp
ss
and
push
stos
pop
adc
push
repz
in
inc
push
push
jbe
add
sbb
scas
fnsave
push
lcall
and
cmp
sahf
das
lcall
dec
xchg
test
mov
and
xchg
out
ds
js
sbb
jae
ja
into
add
movsl
and
hlt
jle
sbb
lea
div
pop
pop
sbb
sub
xchg
dec
add
stos
lcall
fsubs
das
test
jge
sti
push
adc
mov
addr16
jl
repz
gs
adc
ljmp
dec
and
sub
jmp
xor
lret
rolb
mov
dec
jl
in
push
mov
pusha
push
jg
cmp
inc
call
add
mov
cli
inc
ja
lods
cmp
sbbb
fnstenv
dec
cltd
mov
clc
xchg
aaa
mov
icebp
pop
adc
mov
nop
sti
gs
xchg
pop
xor
subl
mov
sbb
clc
lea
inc
lock
jne
divb
out
mov
adc
jle
wrmsr
fwait
jge
pop
in
cltd
pusha
mov
stc
pop
xchg
enter
std
pop
fdivr
rcll
pop
and
daa
cli
inc
shlb
nop
and
pop
mov
test
mov
dec
xlat
mov
add
in
into
jbe
sub
insb
aaa
jge
or
jb
int
fldl
rcrb
loop
adc
insl
xor
or
jb
int
fldl
rcrb
loop
push
fisttpll
push
sbb
int
fldl
popf
ret
mov
out
jge
or
repnz
sub
std
aad
stos
in
mov
or
sbb
sub
cmp
inc
cwtl
sub
mov
cltd
inc
test
sbb
or
sub
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
jns
mov
dec
fnstsw
imul
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
jns
mov
push
sbb
pop
mov
pop
xchg
pop
inc
xchg
sbb
or
pop
data16
subb
ljmp
mov
xchg
mov
arpl
and
mov
and
cmp
ss
push
call
leave
xchg
or
sub
inc
adc
xchg
push
pop
repz
push
jg
xchg
imul
cmp
dec
push
sbb
pop
in
mov
mov
movsl
mov
aaa
or
sub
sbb
inc
push
add
repnz
push
cmpsb
gs
mov
dec
fistpl
or
leave
testb
loope
cwtl
add
pop
repz
push
or
xchg
cmc
or
pop
jmp
fstps
leave
sub
cmp
dec
cltd
pop
mov
jns
mov
dec
test
sbb
or
cmp
outsl
dec
fnstenv
dec
mov
adc
or
cmp
enter
lret
sbb
lods
dec
or
pop
mov
fidivl
xchg
cmp
cmp
push
cld
cmp
stc
jge
cwtl
jge
inc
pushf
cmp
imul
mov
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
jns
mov
dec
test
sbb
or
cmp
sub
fnstcw
xchg
insb
cmc
or
out
dec
loopne
out
push
cmp
jmp
inc
jp
bound
andb
loop
and
fwait
sahf
push
dec
addl
xor
fwait
es
fs
lea
jmp
lock
rcrb
cmp
sub
sub
in
sbbb
shlb
call
ror
lcall
lret
inc
cmp
or
add
in
shl
push
cmp
mov
sbb
xor
bound
sti
and
out
sub
orl
pop
ja
sbb
fcom
in
xlat
rcrb
jp
loop
mov
jne
ret
cmp
add
push
lods
inc
outsl
clc
rorl
sbb
push
ret
arpl
sub
pusha
iret
pop
mov
fwait
adc
xchg
cltd
sub
lea
aas
inc
dec
jl
pushf
shlb
push
sub
add
repz
xchg
aas
cmp
jecxz
xchg
shr
sbbl
dec
xchg
cltd
pushf
inc
daa
popf
push
mov
xor
cmp
into
sub
sub
js
pop
addb
mov
popf
add
mov
cmpsl
mov
mov
mov
add
imul
cmc
lret
aam
mov
sub
int3
rorb
push
sbb
dec
out
js
movsb
mov
jo
mov
adc
insl
push
sub
push
mov
enter
scas
mov
pop
adc
ljmp
cmp
imul
call
dec
jp
loopne
dec
call
lahf
loope
and
pop
mov
sbb
hlt
leave
mov
fsub
jae
push
jnp
daa
mov
xchg
cld
or
fistpll
stos
adc
or
divl
lea
arpl
push
icebp
pop
mov
cmpsl
mov
enter
inc
adc
jne
movsb
ret
mov
outsl
pop
lahf
dec
cmp
scas
cmp
sub
xor
push
inc
xchg
jne
je
mov
jns
cmp
push
les
sahf
sbb
jmp
jne
dec
xchg
mov
pop
repnz
mov
mov
cli
add
push
adc
fs
cmpb
fstl
das
fbld
push
test
jecxz
int3
sbb
add
nop
loope
mov
or
push
push
jmp
hlt
sti
aaa
add
jl
ss
jmp
out
out
mov
inc
aam
cs
rclb
mov
insb
sub
dec
imul
out
ss
orl
shll
push
test
push
dec
xchg
jne
sti
add
cli
mov
out
xchg
iret
cmp
adc
or
jp
lock
call
jg
insb
movsb
push
adc
sbb
cmp
sub
and
jbe
mov
xor
iret
ds
mov
das
dec
into
outsl
or
and
inc
dec
in
push
dec
jmp
into
je
scas
shll
rcl
adc
lea
out
jg
dec
js
cmp
xchg
jg
add
das
mov
push
mulb
inc
sahf
ss
sub
cwtl
add
jmp
cmp
and
cmp
cmp
cmp
lea
sub
dec
arpl
shlb
inc
sti
push
aas
imul
pop
imul
ss
mov
and
dec
lahf
add
pop
adc
lcall
aas
pop
addb
aaa
das
xchg
and
push
jle
xlat
push
inc
add
mov
jmp
lods
sub
test
shlb
dec
or
add
or
xor
int
mov
and
addr16
xchg
mov
mov
ja
aam
insb
mov
push
out
cmp
xor
dec
mov
dec
pushf
popf
dec
push
cmpl
pushf
mov
sub
xor
enter
fs
into
das
vcomisd
adc
add
in
hlt
mov
and
ss
hlt
or
sub
or
xchg
out
push
cmp
pop
inc
or
sahf
inc
in
ja
lods
sbb
lock
and
inc
cmp
iret
lods
mov
sarl
cmp
and
shrl
fstpl
or
lea
hlt
aaa
xor
mov
jecxz
test
out
loope
rol
int
or
nop
xor
pop
mov
mov
subb
dec
shlb
scas
dec
rcrl
push
xchg
subb
cltd
lds
mov
addb
bound
push
sub
inc
mov
push
push
cltd
fldl
dec
xor
mov
loopne
sbb
xchg
pop
arpl
xlat
mov
pop
das
hlt
push
pop
ja
mov
push
pop
xchg
sbb
lods
pop
in
aad
push
pop
jno
mov
cmpsb
sub
or
sub
dec
pop
clc
imul
and
out
xchg
test
loope
add
in
enter
inc
testb
add
or
xor
pop
sub
and
cld
iret
or
outsl
adc
movb
sub
icebp
or
divb
popf
fstl
sbb
popa
andnps
mov
repz
popa
mov
adc
aad
jb
js
pop
xor
fdivr
mov
xchg
jnp
outsb
xchg
test
clc
and
inc
fimull
inc
sarl
ret
push
test
push
sbb
xchg
outsb
hlt
lcall
mov
sub
push
add
pop
repnz
hlt
push
push
movsb
out
icebp
xlat
fnstcw
push
jo
sti
sbb
popl
push
mov
sbb
ficompl
mov
in
adc
jnp
mov
xchg
mov
inc
aad
data16
inc
fcomp
xor
fisubrs
cli
ret
and
ss
enter
out
mov
sub
pop
sub
orl
jnp
xchg
int
push
sub
dec
fildl
scas
cmp
cs
loop
divb
aaa
xor
pusha
repz
testl
mov
rol
aam
xchg
icebp
dec
aaa
dec
outsl
fists
lds
inc
dec
shll
xchg
inc
adcb
lds
scas
popa
sub
sbb
sbb
sbb
pop
cmp
jge
iret
fidivrs
into
xor
mov
out
jp
and
push
and
not
sub
int
in
cli
mov
push
popa
xor
aas
fistl
stos
add
mov
aam
push
and
popf
loopne
in
push
xor
orb
mov
shll
fdivs
push
cmpb
scas
xlat
mov
out
aaa
inc
in
iret
mov
mov
inc
mov
jmp
repz
push
and
mov
out
call
mov
or
cli
loope
inc
lcall
xchg
loope
pop
jae
leave
jbe
stos
mov
jl
xchg
xor
imul
cwtl
and
sarb
ret
insl
les
in
clc
ja
dec
movl
jae
mov
loop
sub
jb
out
push
and
fcmovnbe
popf
fsubl
jge
rcl
imul
insb
inc
push
leave
into
jno
imul
es
xor
ljmp
scas
cltd
ret
pop
test
fwait
jb
mov
je
js
fisttpl
push
fwait
or
add
xchg
jmp
ret
and
cmp
add
stos
adc
in
xchg
aaa
ss
push
adc
fldcw
loope
sub
clc
mull
int3
fldl
aas
ljmp
fsubrp
hlt
in
mov
popf
imul
scas
pop
pop
xchg
fildl
hlt
adc
mov
inc
push
or
pop
xor
scas
inc
dec
sub
shl
mov
push
fcmovu
jl
int3
push
sub
das
int3
dec
push
movsl
adc
sahf
lret
mov
lock
fiadds
and
cmp
inc
sahf
es
sub
xchg
add
int3
jg
nop
jnp
jbe
int
bound
sbb
adc
and
test
lret
sub
xor
movsb
jns
add
jbe
xor
mov
cmpsb
aas
fs
add
sub
dec
cmp
sub
cmc
fwait
ss
xor
inc
rclb
and
xor
sbb
mov
fwait
pop
aas
jnp
jno
iret
sub
sbb
into
mov
leave
jle
pop
out
push
push
in
loopne
fsubp
cltd
and
xchg
iret
call
xchg
mov
push
movsbl
mov
inc
mov
ja
insb
notb
mov
pop
xchg
rcrl
and
nop
cmp
push
rcrl
arpl
in
sub
in
cmpsl
dec
sbb
and
xchg
cmpsl
adc
mov
movsl
push
fstpt
mov
xchg
aaa
mov
pop
rcr
pop
xor
fldt
mull
mov
ljmp
and
pop
pop
mov
cmpsb
lret
and
rolb
dec
aad
xchg
fldenv
gs
ret
xchg
into
inc
cld
cmp
syscall
inc
xchg
dec
push
cmp
add
pop
mov
clc
iret
jle
dec
cli
iret
icebp
into
cmpsb
rorb
xor
addr16
stos
pusha
popa
lods
mov
mov
dec
mov
mov
pop
loopne
jl
fists
add
jge
int
adc
js
aas
push
jb
sbb
ret
mov
ljmp
insl
ja
fdivrl
or
xor
daa
push
loop
jnp
into
insl
imul
inc
inc
cmp
jb
mov
push
lea
jge
pop
and
movsb
dec
xor
pop
ss
pop
add
fistps
push
jmp
das
sbb
or
subl
iret
mov
in
cltd
xchg
jle
mov
add
push
jle
stos
push
lds
inc
jo
push
dec
cmp
xchg
cwtl
jo
dec
aas
xor
push
repnz
inc
xor
and
addl
je
dec
cld
lods
sar
orl
dec
ja
jns
jae
cmc
ror
and
xchg
pusha
rolb
fstl
inc
mov
sbb
jmp
lods
jne
mov
xchg
repnz
jle
pop
ljmp
add
adc
push
je
outsl
jae
lock
lcall
push
std
pop
cli
jae
pop
adc
in
repz
sti
xchg
inc
ret
ljmp
push
jo
out
adc
fdiv
mov
push
add
pop
setl
je
aam
int3
cmp
lods
adc
clc
hlt
push
mov
ret
les
sbb
and
or
shr
cmp
mov
jbe
fptan
dec
in
rorl
pusha
scas
xor
pop
loopne
push
ret
mov
xchg
pop
aas
xor
dec
inc
cmp
sarl
jae
cltd
mov
je
dec
xchg
jl
mov
add
test
sub
es
adc
sbb
mov
mov
jno
enter
stos
lods
mov
adc
es
test
dec
dec
out
enter
push
adc
dec
lahf
adc
jge
out
xchg
fldcw
rcr
mov
add
push
ret
sub
call
cwtl
sub
push
mov
mov
push
sub
dec
cmp
fldcw
push
rcrl
es
test
aam
push
fsubrp
scas
fldt
mov
jnp
int
sbb
adc
cmpb
mov
add
inc
mov
sbb
and
movups
xor
lods
jp
jno
cwtl
jnp
lcall
roll
mov
icebp
test
dec
mov
decl
movsl
jnp
xor
insl
pusha
mov
call
mov
push
inc
push
fiaddl
mov
sbb
cld
xchg
data16
lret
add
pusha
adc
sbb
pop
push
imul
test
dec
cmp
js,pn
xchg
nop
adc
loopne
cmp
movsb
push
inc
pop
pushf
dec
mov
int3
dec
jl
cmp
pop
mov
jecxz
cmp
cmp
cwtl
jmp
mov
mov
jns
mov
adc
push
js
aaa
aam
js
mov
cmp
dec
call
xor
cmp
fxch
es
dec
push
mov
mov
pushaw
nop
sahf
push
add
xlat
mov
lahf
cli
push
mov
cmp
dec
test
cmp
and
cmp
sub
stc
shlb
bound
mov
mov
sub
mov
enter
imul
lea
and
xchg
xor
lcall
mov
mov
fists
mov
fstl
pop
jo
push
xor
cld
sbb
cltd
ret
xor
sahf
cmp
scas
pop
movsb
and
fnstenv
pop
push
insb
add
inc
out
out
and
push
mov
leave
cwtl
push
aas
push
sahf
sbb
repnz
in
rol
negb
fs
mov
jae
mov
or
cltd
sub
mov
inc
or
sbb
jle
cmp
jg
adc
out
sbb
cmp
ja
pop
inc
jno
mov
mov
push
mov
ss
divl
popf
decb
leave
cmp
lods
xchg
mov
mov
movsb
sahf
and
and
jge
mov
sbb
and
jne
lds
aaa
scas
loop
mov
sub
sbb
enter
add
and
fld1
pop
aad
mov
cmp
fstpl
pop
popf
mov
mov
add
mov
mov
mov
sarb
jno
insl
fsubrl
or
ja
es
js
pushf
rcr
mov
adcl
mov
sti
jae
inc
das
repnz
mov
xchg
jg
dec
fdecstp
sahf
sub
outsb
int
call
mov
insl
inc
cmp
dec
iret
inc
cmp
imul
fs
mov
mov
dec
lods
int
in
lds
pop
aas
add
loope
es
and
test
and
insb
cmp
cs
sbb
cmp
repnz
mov
pop
popl
push
aam
pusha
and
sahf
gs
out
js
or
adc
sub
xlat
sub
xor
ffree
adc
sahf
in
aas
aam
cmc
imull
jp
cmp
ret
pop
inc
jno
jl
xchg
gs
cs
pop
aad
push
xchg
mov
lret
mov
or
mov
icebp
pop
jge
inc
mov
xchg
pop
cmp
aam
loopne
lods
pushf
xchg
mov
mov
cld
dec
pop
and
lock
jle
iret
or
inc
leave
testb
adc
cmp
ss
add
add
out
mov
inc
lea
outsl
or
sbb
insl
sub
xchg
mov
divb
lods
pop
das
cmp
in
jecxz
xor
mov
js
dec
sub
popa
jmp
sub
mov
push
push
jl
cmp
sub
inc
and
xor
cld
or
das
test
dec
pop
mov
xchg
pop
push
and
aas
out
movsb
cmp
pop
insb
jns
or
xchg
es
xchg
or
rol
jb
lock
fs
test
in
sti
movsl
sub
jnp
cmp
out
hlt
out
xchg
ret
loope
test
es
out
inc
push
sub
sbb
mov
mov
mov
xlat
popf
imul
mov
adc
aad
scas
cmpsb
push
push
insb
enter
cmpl
into
jge
stos
rcrb
sahf
dec
xor
xor
and
pop
inc
and
xchg
push
pop
popa
jge
leave
fwait
testl
push
adcl
adc
in
mov
xchg
mov
sbb
mov
lret
mov
xchg
ds
mov
jnp
jle
shl
mov
xor
cs
xlat
fwait
outsl
adc
xor
pop
xchg
push
or
scas
mov
into
xor
into
cmp
test
pop
jbe
mov
cli
out
push
clc
enter
xor
lcall
and
mov
add
test
flds
notl
jno
cmpsl
lock
adc
repnz
ja
aam
push
bound
and
shll
cmpsl
dec
std
sbbl
aad
add
loopne
mov
cld
mov
add
ljmp
pop
pop
arpl
add
insl
test
subl
imul
sub
bound
lret
mov
leave
or
sub
inc
pushf
stos
lret
or
push
jae
pop
stos
xor
out
pop
rcrb
lret
das
adc
leave
push
inc
nop
xor
rorl
movsl
mov
or
jp
jle
xor
jo
daa
push
push
xchg
xrstors
mov
cmpsl
ret
lock
fwait
sub
rcll
lret
push
jbe
jnp
movl
add
lcall
mov
enter
pop
cmp
test
lea
jl
cmc
fdivr
xchg
dec
mov
push
lods
adc
sub
or
mov
inc
mov
cpuid
sbb
pop
aam
inc
mov
cmpsl
cwtl
pop
dec
or
arpl
adc
cmc
rcrb
stos
push
xchg
pop
scas
js
fdivr
stos
fimuls
adc
xchg
inc
jmp
fcmovbe
out
fisttpl
es
dec
ljmp
clc
shll
cmp
mov
push
jns
dec
inc
hlt
sub
arpl
cwtl
adc
repnz
arpl
call
psraw
inc
nop
stos
test
or
test
inc
mov
pop
push
xor
xor
mov
jmp
jp
or
fsubrl
cmp
ret
lock
sbb
out
cmp
push
jmp
popa
inc
pop
lds
mov
insl
and
neg
aam
mov
cmp
scas
mov
adc
stos
mov
lods
scas
in
sarb
inc
sarl
push
mov
repnz
loope
sbb
pusha
xchg
push
dec
repz
lods
mov
adc
out
enter
sbb
sbb
inc
fiaddl
js
inc
sti
lcall
or
mov
dec
pop
jmp
nop
pop
cltd
fwait
mov
pop
loop
cmpsl
sahf
mov
in
notb
jns
xor
cmpsl
push
cmp
mov
loop
jmp
push
gs
adc
mov
jb
push
jg
into
cltd
adc
mov
shl
std
loope
sub
push
faddl
mov
xchg
mulb
popa
mov
dec
jg
in
lret
ret
mov
or
jns
ficoms
mov
int
in
adc
cmovnp
sahf
enter
mov
in
jbe
in
dec
xchg
sbb
push
sbb
mov
cli
out
and
mov
dec
adcb
or
mov
mov
rcll
jns
lds
cmp
dec
inc
cwtl
das
mov
pop
add
fsubrp
adc
and
mov
repz
lods
mov
lds
xor
push
xchg
sub
inc
call
jl
sub
lahf
aaa
mov
mov
rorb
cmp
add
dec
cmp
les
push
add
mov
lods
sub
into
ret
and
sbb
inc
add
popa
or
add
in
scas
mov
pop
jo
inc
arpl
lods
je
roll
lods
push
mov
bound
mov
jo
or
idivl
add
jl
mov
sbb
push
jo
icebp
sbb
add
add
or
pop
loop
xorl
js
or
ljmp
or
and
cmp
cli
cmp
daa
inc
aas
jmp
mov
cmp
pop
shl
mov
in
leave
mov
js
leave
mov
mov
mov
mov
jmp
test
fwait
or
and
xchg
mov
inc
inc
or
out
mov
add
maxps
fstps
xchg
pop
mov
dec
out
fcmovu
fcompl
daa
mov
mov
mov
dec
cmp
add
add
pop
lret
mov
lret
movsb
and
mov
xor
mov
or
dec
lret
inc
xchg
xor
jl
mov
push
add
mov
lcall
orl
cmp
ja
jne
pop
out
js
ret
sbb
scas
sub
dec
int
movsb
jecxz
decb
in
out
sarb
ret
push
fidivrl
pop
and
aam
sbb
das
mov
pusha
das
subl
jb
xor
popf
dec
cwtl
mov
repz
in
outsl
leave
push
push
xor
mov
cmpsb
mov
push
stc
cmp
dec
cltd
pop
mov
jns
mov
dec
test
sbb
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
jns
mov
dec
test
sbb
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
jns
mov
dec
test
sbb
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
jns
mov
jecxz
jns
push
mov
movb
pop
das
pop
aas
daa
getsec
pop
pop
pop
and
inc
outsl
sbb
scas
xchg
mov
out
xchg
jp
iret
neg
adc
pop
aas
pop
getsec
pop
inc
outsl
push
jg
dec
ja
lea
jne
out
jmp
neg
push
das
push
aas
aas
comiss
pop
outsl
dec
jg
dec
pusha
pop
xchg
pushf
mov
call
mov
pop
pusha
imul
dec
test
pushf
push
xchg
mov
xor
outsb
ficompl
mov
sub
clc
sbb
daa
imul
adcb
push
adc
adcb
lahf
jp
mov
sub
or
push
scas
jne
outsl
mov
push
push
bound
out
xchg
aas
dec
xor
push
xlat
cmp
mov
bound
jg
shlb
je
shll
test
out
call
loopne
outsb
xchg
push
pop
fmull
call
insl
call
add
rsqrtps
mov
mov
xacquire
pop
mov
pop
lahf
mov
pop
cli
cmp
fcomi
faddp
das
pop
aas
daa
mov
push
outsl
dec
jg
dec
outsb
pop
sahf
scas
mov
fucomip
iret
jmp
iret
out
mov
inc
jb
inc
push
jbe
add
jg
add
psllq
xchg
lret
aad
stos
mov
sahf
pop
das
pop
cmp
xor
cmp
or
xor
xlat
xchg
lret
ret
mov
outsb
and
addr16
jp
outsl
push
jg
dec
ja
xchg
mov
out
xlat
jmp
iret
neg
pop
das
pop
aas
daa
getsec
pop
inc
outsl
push
jg
dec
ja
xchg
mov
out
xlat
jmp
iret
neg
pop
das
aam
jle
pop
pop
push
xor
cltd
test
push
sbbb
addr16
ljmp
aas
stc
adc
test
push
cmp
sbb
mov
cld
cltd
xor
or
xchg
sbb
fcom
cmp
jle
mov
xor
mov
cmpsl
out
aad
aam
add
and
pop
aas
push
add
int3
in
cmp
stos
in
das
mov
sub
pop
cmp
jmp
xor
rcrl
shrb
adc
xchg
arpl
mov
int3
lock
lods
xchg
imul
and
mov
xchg
ss
ds
fs
cmp
dec
jle
and
mov
xor
inc
test
dec
xlat
inc
shl
out
inc
adc
sub
sbb
push
xchg
or
inc
hlt
and
cltd
jge
and
jmp
mov
lea
pop
jg
jbe
push
jnp
lds
inc
lods
mov
imull
add
hlt
enter
stos
inc
movsb
sub
mov
and
bswap
jo
mov
cmp
std
jae
sub
sbb
in
inc
test
cltd
mov
mov
pop
test
subl
inc
sti
rcll
jp
inc
sub
rclb
adc
sub
testl
bound
je
push
lret
ret
push
cmp
int
iret
push
pop
push
cmp
and
ret
xchg
rclb
xchg
mov
mov
out
pop
push
in
test
les
test
ret
test
or
les
push
loop
leave
cs
jg
in
fisttpll
inc
jnp
xchg
pop
ljmp
mov
pop
add
lahf
es
das
push
test
sbb
iret
es
cmpsl
xor
sar
ja
arpl
test
int3
push
adc
mov
or
cmp
cmpsl
sub
pop
sti
add
int3
mov
das
mov
sub
scas
mov
mov
insl
xchg
adc
call
lock
mov
movsl
insl
pop
push
std
in
scas
iret
mov
sub
sete
pop
ds
sarb
jmp
cwtl
and
jecxz
xchg
mov
mov
mov
outsb
sbb
test
push
xlat
adc
into
sbb
mov
pushf
mov
gs
mov
daa
daa
insb
push
mov
mov
fisubrs
add
and
fdivr
stos
lret
insb
sbb
pop
jb
dec
sbb
in
scas
xor
cli
jno
jo
pop
pop
scas
xor
inc
mov
and
adc
pop
cmpsb
xor
or
push
popa
insl
mov
pusha
push
adc
jae
jecxz
sub
nop
xchg
mov
addr16
mov
adc
or
xor
repnz
jp
shll
pop
loopne
mov
mov
jnp
or
popa
out
xchg
dec
pop
or
pop
mov
inc
push
cwtl
push
mov
mov
repnz
dec
mov
dec
xchg
movsl
icebp
cmpsb
sub
mov
test
and
lret
mov
mov
mov
jns
gs
test
sub
sti
push
es
mov
rorl
pop
cwtl
adc
jmp
add
cs
xchg
popa
cmp
rclb
mov
shrl
mov
cmp
mov
xlat
xchg
xlat
push
inc
adc
adc
rdtsc
fbld
xor
mov
daa
and
sbb
mov
addl
mov
test
push
ret
aad
xchg
addr16
scas
dec
vxorps
ffree
loopne
mov
outsb
mov
shll
sub
ds
push
inc
sbb
xchg
out
mov
inc
mov
push
and
add
insl
inc
ja
mov
cmp
or
aas
mulb
icebp
mov
xchg
cwtl
data16
repz
mov
dec
lahf
xchg
and
inc
lds
test
push
pop
aas
pop
call
add
sbbb
pushf
bound
and
push
xor
into
jmp
xchg
int3
cmp
mov
and
ds
mov
popf
dec
fwait
bound
ret
push
lcall
in
pop
lods
loope
xchg
sub
dec
jle
rcll
jo
pop
icebp
xchg
in
gs
scas
or
pusha
jns
mov
push
xchg
fistpl
cmp
enter
mov
mov
movsl
pushf
scas
inc
xchg
pop
dec
push
ljmp
mov
xchg
mov
push
push
leave
mov
fcmovne
lods
and
mov
lcall
xchg
dec
push
add
mov
ss
jns
hlt
cmc
mov
adc
aam
fcmovb
xchg
movsl
rorl
sub
test
arpl
sub
adc
xor
pusha
and
imul
sbb
inc
sbb
jb
fbld
xchg
or
sub
xlat
ss
lret
pusha
jecxz
cmp
out
mov
add
cmp
push
mov
les
lret
std
mov
xor
mov
in
push
pop
jne
orb
jns
fiadds
pop
daa
push
or
or
xor
in
adc
aam
ss
adc
insb
sub
loop
mov
inc
movsl
adcb
add
dec
push
xor
mov
mov
xlat
push
std
fadds
outsb
inc
pop
xor
loopne
sub
or
cli
xchg
test
cmp
add
mov
dec
dec
push
rcrb
dec
pop
cmp
push
xor
jbe
mov
pushf
into
inc
mov
add
rclb
sub
andb
das
test
cwtl
cmc
divb
push
out
es
lret
push
mov
push
adc
xor
imul
push
mov
divb
movhps
push
iret
mov
mov
stos
loop
ret
mov
mov
dec
cmp
test
and
cmpb
js
push
aad
mov
pusha
xchg
rcll
out
mov
mov
pop
xchg
sub
dec
push
fwait
enter
inc
inc
out
inc
test
mov
dec
dec
mov
pushf
pushf
push
push
ljmp
cmp
sbb
adc
insl
out
mov
call
insb
jae
cld
hlt
or
mov
out
inc
cmp
jno
pusha
mov
sbb
sub
dec
inc
test
test
ljmp
daa
adc
mov
das
scas
add
pop
inc
push
pop
jb
mov
adc
pop
jnp
add
shlb
xchg
fists
movsb
repnz
enter
dec
xor
popa
mov
andl
in
inc
jmp
mov
sti
push
jb
enter
test
jecxz
not
js
adc
loop
add
mov
cmp
pop
nop
mov
mov
sub
fildl
mov
pop
shr
inc
add
xchg
adc
xchg
and
pop
add
iret
data16
push
mov
test
insb
test
cltd
out
dec
mov
xor
mov
push
dec
cmp
sbb
outsl
rolb
jl
and
fcmovu
outsb
jnp
rcrb
cli
outsl
mov
test
insl
pushf
add
aad
and
lds
dec
pop
add
sbb
imul
lea
and
fucom
cmpsb
pop
jb
mov
lods
cld
or
inc
dec
jno
sub
adc
rorl
lahf
add
jo
xchg
stc
or
aaa
xchg
idivl
mov
push
cld
divl
or
mov
cmp
outsl
fxch
mov
add
xor
iret
jns
lock
ret
jns
xor
mov
pop
inc
mov
fwait
mov
mov
cmc
test
inc
xor
pop
or
push
sbb
pop
lods
mov
xchg
mov
and
popf
loope
adc
sbb
mov
cmpb
movsl
out
sub
push
or
es
cmp
in
int3
xor
jg
cli
enter
push
fcoml
aad
lds
sbb
lret
add
nop
shll
mov
test
push
pop
insb
pop
mov
xor
mov
pop
and
push
notl
add
mov
or
mov
mov
out
outsb
mov
dec
ss
push
divl
pop
sahf
xor
xor
or
jg
or
leave
sub
push
ss
cli
dec
cwtl
xchg
dec
and
out
flds
test
shrb
inc
stos
adc
adc
xor
ret
xor
push
sbb
int
jecxz
cmp
ror
push
addr16
out
jnp
mov
lret
add
mov
nop
fists
int3
and
pop
jno
xchg
sub
ficompl
mov
xchg
addr16
and
sub
in
xchg
or
mov
jg
push
fsts
and
xchg
ss
and
or
lcall
fwait
cmp
adc
cmpl
gs
shll
xor
cmp
pop
loop
cmpsl
sti
fstps
mov
pop
aaa
fstp
xor
xchg
and
mov
fadds
cmp
ss
jmp
cwtl
mov
inc
xchg
out
aaa
dec
popf
je
cwtl
mov
xchg
inc
mov
punpcklbw
imul
jae
lcall
add
repz
jge
sub
jns
in
jbe
and
repz
jle
ja
dec
inc
test
or
mov
dec
rolb
cmp
lods
pop
int3
push
pop
or
or
hlt
lret
xchg
in
das
add
xchg
pop
fmull
or
and
sbb
lahf
adc
nop
rcrl
add
addb
jle
jb
jo
orl
xchg
fcmovnu
ja
mov
mov
cmpsb
pop
test
mov
lock
gs
sub
in
les
mov
dec
xchg
and
cmc
outsb
cltd
out
push
fisubs
sahf
outsb
cmp
add
jg
ret
pop
outsb
cmc
xchg
faddl
test
xor
lods
enter
in
push
sbb
sub
in
mov
adc
mov
mov
out
lds
and
mov
add
out
sbb
and
dec
add
sub
mov
push
shlb
xchg
cmp
xor
inc
xchg
lret
fmul
or
mov
js
inc
ret
lcall
inc
clc
test
test
add
sbb
shlb
jno
pop
or
cs
int
jns
insl
cmp
jno
fdivrl
pop
pusha
inc
sti
pop
test
frstor
loop
into
lods
push
cmc
push
nop
jns
xor
sub
inc
loope
or
test
mov
sbb
filds
mov
dec
push
lret
cmp
ret
and
cmpsl
repz
pop
arpl
jns
loope
inc
lret
sbbb
add
orl
and
or
inc
imul
pop
pushf
inc
aaa
mov
lret
ret
stc
dec
movsb
cwtl
scas
dec
push
xor
cltd
int
pop
xchg
out
or
faddl
xchg
lea
and
pushf
sbb
cmpsl
pop
cmc
lahf
xchg
mov
loopne
xchg
pushf
mov
pop
pusha
and
xor
leave
inc
lods
lcall
rcr
into
push
mov
xlat
add
sarl
xchg
and
push
dec
jge
loopne
pop
pop
orb
stos
or
std
add
inc
ret
jbe
pop
dec
mov
add
lret
lods
loop
and
std
add
addb
fucomi
rcl
icebp
dec
pop
popa
push
mov
pop
enter
outsb
sbb
and
pop
add
and
dec
leave
and
aas
loope
es
jb
les
inc
gs
mov
test
fdivrs
mov
inc
sbb
rol
or
mov
cmp
gs
jne
push
and
int
xlat
jne
scas
lret
ljmp
jne
ds
repz
popa
xchg
cmc
mov
xchg
shlb
and
mov
cmp
pusha
ss
out
sbb
pop
push
xor
int
clc
push
mov
ja
pop
ja
cwtl
adc
pop
popf
std
inc
in
fcompl
adc
xor
or
pop
inc
sub
test
xor
fmuls
cltd
ja
cmc
mov
mov
add
or
jo
arpl
fidivrs
xchg
cmpsl
ss
data16
leave
fsubrl
stc
mov
inc
jmp
pop
and
push
xor
and
push
dec
xchg
aaa
add
sbbb
ja
ror
jo
cltd
add
in
mov
jb
jg
mov
or
lea
sub
jl
orb
cmpsl
inc
pushf
adc
cmp
sbbl
roll
adc
fdiv
pop
xchg
pop
loop
imul
hlt
inc
movsb
stc
xor
cmp
jnp
mov
clc
call
and
mov
sub
or
in
gs
adc
das
iret
inc
mov
in
imul
pushl
movsl
lahf
rclb
ljmp
xchg
inc
lds
sahf
ret
int3
push
xor
adcl
adc
xor
test
je
mov
xchg
xlat
pop
mov
out
fbstp
test
es
adc
clc
sahf
mov
cmp
cmp
add
punpcklwd
daa
pop
jbe
dec
or
lcall
sbbl
les
xchg
or
cld
or
test
xchg
xchg
imul
dec
stos
inc
jle
lods
jb
lds
xor
call
lcall
jl
pop
mov
sbbb
iret
add
mov
pmullw
pop
or
repnz
popf
jmp
repnz
or
movsl
cmp
or
mov
lods
fs
shlb
sar
pop
xor
xchg
addr16
inc
je
jge
jecxz
or
xchg
stos
jno
dec
mov
mov
push
leave
and
mov
icebp
xchg
es
push
popa
mov
mov
iret
addr16
pop
repz
out
pop
pop
jmp
mov
rorb
jle
cmp
outsb
cmp
sahf
mov
sti
or
mov
and
fmul
inc
push
idivl
stos
movsb
fwait
test
jne
dec
sbb
push
xchg
cmp
ss
lcall
xor
or
jae
fs
in
cmp
push
nop
pusha
sub
dec
inc
mov
repnz
fcompl
pop
aam
push
cmp
or
adc
gs
nop
inc
add
outsb
mov
mov
leave
push
jg
mov
sbb
sti
testl
mov
lods
lods
loopne
ror
lret
lret
mov
pop
sub
iret
sub
mov
stos
hlt
xor
xchg
push
fimuls
pushf
insl
jle
xchg
outsb
aad
or
rclb
jns
jle
sbb
inc
lds
pop
lods
or
add
pop
jno
or
dec
mov
call
scas
outsl
add
rorb
add
test
or
mov
iret
fld
xor
call
aaa
adc
mov
mov
add
push
lods
fcoms
mov
dec
and
push
jg
test
push
push
sub
add
call
lahf
in
popf
sub
add
inc
xor
and
jo
repnz
lret
pusha
daa
adc
jp
dec
xchg
clc
testl
mov
aad
mov
mov
dec
push
out
enter
into
push
add
out
lods
mov
mov
ficoms
jmp
adc
jbe
dec
mov
adc
push
sub
dec
push
cmc
sbb
mov
xor
jnp
cli
cmp
shl
lahf
out
mov
cwtl
lods
add
sahf
xchg
insb
testb
cmp
mov
and
fcoms
sub
cltd
push
xchg
pop
negb
jg
ja
nop
frstor
out
mov
dec
inc
lret
in
add
imul
jp
sbb
push
adc
push
and
cmpsb
mov
and
fstp
jg
xchg
add
mov
icebp
scas
xchg
scas
out
int
dec
mov
cmp
rcrl
pop
inc
js
cmc
cmpsb
pop
jge
daa
dec
add
mov
mov
sub
push
and
stos
sbb
stos
je
adc
div
push
mov
lret
and
xchg
dec
js
xchg
notb
stos
lahf
in
dec
cmpl
push
xor
fwait
int
hlt
aas
sbb
cmp
stos
shrl
pop
jnp
addr16
loopne
inc
mulb
sbb
out
jo
hlt
test
mov
pop
pop
xor
lods
mov
mov
gs
jae
mov
mov
sbb
cmc
pop
or
cmp
std
pop
mov
push
push
xchg
sbb
arpl
add
add
or
fld
sbb
jo
stos
int
mov
fisubrs
dec
push
int
aad
jg
push
mov
test
mov
and
and
test
stos
icebp
mov
inc
jo
lahf
stos
sub
sbb
dec
loop
movsb
insl
adc
sub
ror
mov
jnp
test
xchg
inc
sbb
out
or
jae
clc
mov
sahf
movb
push
add
in
mov
sub
ja
ror
mov
idiv
inc
daa
popf
in
inc
or
pop
xlat
fwait
outsl
roll
in
orb
sahf
push
jo
sub
pop
cli
aam
inc
filds
xchg
inc
fstpt
vmread
pop
sub
or
push
pop
fstl
mov
mov
shrl
inc
mov
push
push
addb
enter
rolb
es
das
adc
xchg
mov
add
jge
xchg
fwait
lds
jle
cmp
xchg
clc
fs
rolb
popa
sti
xor
jae
pop
in
inc
int
inc
les
rorl
rcll
hlt
sbb
arpl
pop
mov
outsl
inc
push
fucomp
lock
dec
or
pushf
push
pop
pop
mov
fisubs
ret
push
ffreep
lock
xchg
push
lea
fistl
cmpsl
or
mov
mov
cmp
push
inc
test
pusha
add
inc
and
xor
mov
fldenv
and
push
sahf
xor
jae
stc
and
push
pop
popa
xor
push
add
in
mov
xchg
leave
sbb
pop
int3
xorl
std
pop
jbe
inc
dec
mov
push
scas
push
cmc
ds
cmpsl
fisttps
dec
xchg
movsl
andps
insb
cld
loope
pop
aad
in
std
and
jp
adc
sub
addr16
mov
pop
xchg
dec
fdivl
gs
rolb
call
xchg
fimull
insl
dec
lds
outsl
xchg
pop
adc
sbb
and
out
pop
mov
ljmp
xchg
test
adc
sbb
cmp
popf
rcll
xchg
pop
cld
sbbb
pop
in
dec
repnz
arpl
cmpl
scas
pop
popf
stos
fbstp
movsb
or
mov
js
add
mov
clc
ret
add
or
mov
jle
mov
out
mov
sub
mov
ds
sub
int3
je
sbb
push
inc
lcall
mov
fdivs
push
dec
mov
mov
je
stos
xchg
mov
in
insl
jne
inc
pushf
cmp
pop
jb
or
add
cmp
jecxz
adc
dec
jg
xor
pop
cmp
jno
inc
push
adc
addb
fs
dec
and
cld
lea
sub
imul
in
imul
push
js
mov
aam
and
adc
cltd
fsub
pop
and
xlat
dec
xor
fldz
repz
inc
dec
push
aaa
add
push
or
in
dec
loop
push
ljmp
pop
mov
lcall
jno
push
xor
pop
and
sub
cwtl
loop
push
stos
cmpsb
psubw
mov
imul
dec
hlt
ficoms
jge
shll
push
lock
or
add
sub
jnp
pushf
cli
ljmp
je
scas
imulb
xchg
adc
daa
mov
mov
push
push
outsl
nop
test
or
out
cltd
jp
out
jecxz
xor
jg
lods
sbb
in
mov
sti
xchg
push
mov
push
mov
sbb
sub
lret
mov
xchg
or
call
jge
mov
jp
lahf
adc
insb
xchg
pushl
xchg
push
xchg
and
fcmovnu
adc
pop
scas
ljmp
mov
mov
add
fstps
hlt
xor
imul
or
mov
jbe
cmp
and
xor
js
lods
cs
in
pop
pusha
imul
inc
xor
jbe
push
xor
ds
cmpsb
and
ljmp
inc
or
xor
add
inc
mov
mov
rcll
iret
xor
out
scas
rcrl
xor
sahf
inc
jo
xor
pop
hlt
jae
lahf
lret
add
aas
out
aaa
pop
inc
outsl
push
jg
dec
ja
xchg
mov
out
xlat
jmp
iret
neg
pop
das
pop
aas
daa
getsec
pop
inc
outsl
push
jg
dec
ja
xchg
mov
out
xlat
jmp
iret
neg
pop
das
pop
mov
inc
outsl
push
jmp
ja
xchg
xchg
mov
out
sar
out
fbstp
das
and
adc
aaa
pop
inc
outsl
push
jg
dec
negl
scas
push
call
sbb
or
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
inc
push
push
les
stc
push
inc
jb
sbb
hlt
cmc
in
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
test
adc
jo
hlt
test
cmpsl
test
ja
inc
cld
push
inc
daa
or
sbb
cli
pop
sbb
sub
xchg
jecxz
int
loopne
test
je
or
adc
add
in
or
int
rolb
rcl
fimull
push
stos
clc
daa
xor
incl
sarl
cmp
rcll
cwtl
jne
popa
sub
addr16
int
dec
pop
jns
popa
xlat
pop
push
dec
cmpsb
xchg
cmp
add
xchg
xchg
addr16
je
inc
push
cld
dec
xor
dec
pop
out
pop
sti
pop
or
es
cmp
mov
pop
jg
sbb
xor
repnz
pop
stos
rcr
pop
popa
sti
sbb
add
cmpsl
push
dec
adc
out
movsl
js
xchg
jnp
mov
fnstcw
test
or
mov
clc
mov
sub
pop
inc
xchg
xchg
add
push
dec
daa
xor
and
into
pop
test
jb
and
xlat
mov
xchg
xchg
ljmp
adc
inc
pop
dec
push
mov
mov
and
not
loop
out
adc
add
inc
pop
jl
inc
jp
push
mov
in
call
add
ja
add
daa
bound
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
push
mov
imull
push
push
dec
mov
xor
mov
mov
outsb
mov
xchg
push
push
lods
xorb
mov
mov
jg
mov
scas
jmp
add
shlb
pop
dec
or
loopne
mov
ret
cmp
cmp
stos
jae
cmpsb
leave
push
loope
ljmp
jbe
pop
cmp
fistpll
sub
jmp
cmp
pop
testb
fs
push
cs
push
call
ss
nop
jecxz
mov
icebp
or
mov
mov
mov
mov
daa
mov
call
sub
jp
mov
cmp
inc
std
js
xchg
fcmovbe
shl
dec
in
daa
dec
sub
jle
sarb
push
add
xchg
fidivs
movsl
rclb
jecxz
stos
and
pop
dec
pop
js
in
jl
mov
icebp
stos
sarl
loope
dec
mov
xchg
data16
ja
dec
js
stos
cwtl
cwtl
adc
inc
ljmp
fnstenv
cs
pusha
inc
movsl
mov
aaa
pop
out
pop
adc
sbb
inc
movb
rcrb
ds
sub
imul
adc
push
incb
mov
fs
int
pop
pusha
pop
xchg
jg
jp
stc
mov
fs
insb
jns
popf
aas
pop
cmp
dec
daa
xchg
cmp
mov
add
daa
aam
add
cmp
in
inc
xchg
xor
mov
mov
pop
cmp
pop
fistl
xchg
and
das
or
ljmp
pushf
daa
inc
hlt
mov
xchg
jae
mov
adc
popa
inc
shl
jp
data16
or
push
cld
cltd
je
sbb
int
pop
xchg
add
loop
and
xor
fistl
leave
mov
mov
lcall
icebp
leave
jo
adc
adc
out
and
cmp
lcall
lret
and
adc
xorl
mov
adc
std
mov
adcl
std
inc
out
adc
fstp
pusha
and
cmp
and
adc
in
dec
inc
cmp
es
stos
rcrb
mov
imul
adcl
or
in
icebp
push
loope
pushf
test
and
sub
jnp
adc
adc
cmpsb
xchg
mov
icebp
hlt
sbb
stc
mov
icebp
xor
sub
push
push
movsl
hlt
sbb
dec
mov
lret
xchg
andb
pop
and
mov
into
test
push
sbb
movsb
jno
jae
nop
insl
stos
aam
lods
rol
add
ret
inc
xor
into
pusha
imul
in
sarl
lock
push
push
dec
incl
jo
xlat
xchg
in
cmp
out
mov
dec
int3
push
repz
adc
jno
cld
dec
movsl
imul
jns
pushl
int
into
lods
mov
rcrb
and
or
scas
int3
leave
cmpsl
mov
push
cmc
mov
cmp
lods
inc
ja
dec
decl
mov
and
popf
dec
push
stos
in
adc
cltd
add
cli
repz
or
xor
pop
test
xchg
out
jge
pop
bound
stc
mov
shll
cmpsl
addl
pop
inc
xor
sbbb
fwait
push
xor
sahf
xor
xor
je
inc
mov
fadd
pop
jns
shl
rorb
sub
push
mov
mov
mov
int3
dec
test
shr
fidivrl
mov
pop
repz
jecxz
lock
add
outsl
adc
stc
sarl
xchg
push
bound
int3
test
popl
add
sub
sub
or
insl
sbb
insl
push
mov
dec
movsb
inc
cmp
and
xor
icebp
cmp
scas
push
xchg
repnz
imul
push
js
arpl
cmp
pushf
jge
pop
adc
lods
mov
int3
repnz
repnz
pop
sti
out
inc
stos
push
test
fisubrl
and
sbb
cmpsb
jae
arpl
jne
jp
push
stos
movl
or
rorl
xor
xor
push
out
rol
push
sbb
out
pop
or
dec
pusha
call
sbb
insl
sbb
out
shrb
adc
xor
sbb
test
push
xor
inc
addb
sahf
ret
jg
pop
pop
aam
cmp
jmp
nop
int3
jl
test
arpl
pop
cmp
ficomps
or
lods
insb
sbb
xchg
inc
clc
sbb
in
les
pushf
sti
sbb
jge
push
cmovg
and
aaa
pop
mov
pop
sarb
push
add
push
test
lret
jbe
pop
subl
cmp
cmp
movsl
jp
iret
ret
mov
mov
jns
mov
ret
inc
add
xchg
fistpll
mov
imul
icebp
jle
sarb
shll
add
mov
dec
mov
int
out
jle
cmp
rorl
es
stos
iret
pop
outsl
sub
movsl
pop
test
or
jg
add
outsl
mov
aaa
mov
pop
or
push
xchg
add
pop
popf
jbe
call
mov
push
lods
inc
mov
or
aam
mov
jge
insb
sub
xor
jbe
mov
mov
in
inc
add
and
adc
loopne
cmpsl
pop
cmp
out
mov
rolb
pop
repz
mov
sbb
and
sbb
push
enter
mov
aam
jae
pop
add
or
ret
imul
adc
aad
cmp
push
and
daa
jns
or
pop
push
add
cmc
out
mov
fs
call
mov
inc
insl
mov
inc
mov
adc
fcoms
pop
sahf
subl
inc
sub
adc
scas
into
pop
test
loope
cmp
mov
paddusw
xor
sbb
push
dec
fs
mov
ds
aas
or
lods
cwtl
add
push
xchg
arpl
pop
cld
imul
xor
shr
sub
scas
mov
xchg
mov
sub
pop
fcmovnb
pop
cmp
fdivrl
mov
lea
or
xor
loope
je
add
lcall
test
xor
lods
sarl
jmp
or
in
iret
sub
out
jmp
mov
xor
xchg
bound
cmp
pop
dec
jp
sbb
push
mov
lcall
daa
jns
sti
inc
xchg
clc
cltd
rcll
xchg
idivb
push
sahf
pop
dec
xchg
fildll
les
vxorps
dec
cmpl
cwtl
fldcw
loop
lcall
dec
pop
pop
dec
xlat
clc
pusha
mov
call
in
fldl
in
adc
or
mov
and
adc
cli
div
fisubrs
mov
fcmovnbe
push
and
adc
aaa
arpl
je
imul
jno
int
sbb
outsl
test
or
cld
adc
or
jo
aas
addr16
push
mov
imul
xor
mov
gs
std
jg
jnp
scas
fists
or
jge
sub
std
pop
dec
clc
test
fpatan
pop
adc
cli
cs
fisttpll
jmp
hlt
insl
mov
pop
cmp
and
add
insb
movsl
xchg
int
mov
add
aad
inc
jno
fcom
dec
push
leave
inc
std
les
mov
shll
mov
cltd
imul
xchg
loopne
mov
js
test
es
jle
xchg
mov
or
mov
into
js
idivl
mov
outsl
rolb
fstpl
pop
dec
dec
mov
orl
lcall
mov
outsb
inc
add
mov
dec
push
roll
mov
mov
out
int3
cmp
ret
cmp
mov
push
dec
mov
inc
loope
jge
das
scas
stos
dec
js
stc
jno
adc
testb
jns
xchg
push
adc
imulb
sbb
dec
aad
mov
pushf
mov
jp
jg
je
out
int3
and
jmp
inc
pop
or
arpl
jge
cld
xchg
push
cmpsl
jle
adc
daa
inc
sbb
popa
jne
ja
cmp
add
ret
shl
sub
imulb
icebp
jmp
xchg
arpl
es
or
cwtl
cmpsl
insb
scas
mov
aaa
or
lahf
in
xchg
ds
andb
mov
and
fsubrp
xchg
test
rolb
push
out
fdivl
or
testb
jo
rclb
push
cltd
add
pop
mov
push
or
int3
insb
adc
xchg
mov
mov
cs
les
inc
sbb
xchg
loope
nop
sbb
and
push
cmpb
inc
ja
push
xor
jns
mov
nop
mov
fisubl
ret
add
cmp
lods
inc
sub
ret
push
add
rcll
mov
jmp
stos
addl
xchg
mov
loop
and
outsl
and
mulps
outsb
mov
insl
jbe
cmp
jns
insl
dec
mov
nop
push
adc
inc
shrb
call
push
xchg
inc
adc
sbb
mov
mov
aad
das
leave
dec
hlt
mov
mov
imul
repz
cmp
jecxz
xor
daa
imulb
inc
add
lret
lock
mov
jb
inc
and
and
fsubs
je
pop
and
repnz
in
sbb
lea
jge
call
dec
js
lret
mov
jbe
mov
test
pop
jle
das
test
lds
xlat
in
cmp
mov
sti
fsubr
or
sub
push
jle
sbb
int3
je
stc
inc
jecxz
aaa
pushf
or
sbb
test
mov
sub
data16
test
pop
rcrb
pop
sbb
fcmovbe
mov
scas
mov
mov
lahf
cmpl
or
mov
sbb
gs
sahf
fisubrs
pand
fiaddl
inc
loope
aad
fstl
popf
mov
clc
pop
sub
clc
jnp
aad
notl
xor
mov
pop
or
imul
or
xor
jecxz
fisttps
imul
inc
push
lret
int3
jl
hlt
jl
cmpl
jb
lock
xlat
push
sbb
vmwrite
xor
jb
inc
cmc
mov
sbb
xor
sbb
test
jmp
nop
lock
jae
dec
loope
mov
std
jbe
mov
loope
jle
xchg
add
popf
or
dec
popl
jnp
insl
xor
movsb
pop
push
jae
icebp
push
inc
mull
mov
flds
xchg
xor
xor
cmpsb
nop
mov
and
xchg
pop
and
adc
movl
or
or
out
cmpsl
subl
or
pop
cmc
dec
out
mov
sbb
xchg
mov
bound
lahf
and
cmp
mov
sub
repz
inc
test
xor
popa
loop
mov
lret
jg
out
mov
mov
sub
lods
daa
mov
ja
add
jecxz
in
pop
iret
scas
out
add
inc
pop
lds
clc
mov
jb
dec
jp
adc
addl
outsl
and
jle
mov
add
in
fld
clc
ja
data16
add
jge,pn
or
mov
mov
iret
adc
mov
inc
cmp
das
sub
lret
xlat
xlat
sti
mov
jne
nop
adc
rorb
es
jbe
cli
pop
add
orb
cmp
jl
fld
mov
dec
out
xchg
xchg
cmc
jl
fists
call
sti
mov
or
jl
jg
adc
cmp
aaa
iret
sub
aad
out
in
in
loop
call
mov
orl
je
sub
loop
or
inc
sub
mov
test
xor
sbb
xchg
jb
lcall
push
fnstcw
fisubs
fs
rcrb
fmuls
sbb
jle
push
iret
scas
rcl
loopne
push
jne
cwtl
rcrb
pop
xchg
adc
jne
es
lret
mov
push
btr
jmp
js
adc
imull
pop
or
mov
insl
popf
push
mov
pop
inc
bound
dec
xlat
stos
mov
dec
jns
fimuls
sbb
andl
cltd
aad
sub
shll
xor
xchg
int3
xor
cs
or
and
dec
enter
outsb
into
pushf
mov
mov
pop
jns
pop
jo
cltd
and
pop
and
push
dec
pusha
jns
into
ss
xor
mov
fisubl
scas
lods
fwait
sbb
lret
cmp
jmp
loopne
mov
or
mov
mov
movsb
push
dec
cmp
orl
push
add
test
out
lock
mov
fldl
push
or
aam
divb
add
out
cmp
clc
je
in
out
pop
add
dec
aam
scas
push
cmp
adc
scas
dec
pop
cmpsl
mov
mov
adc
icebp
jg
cs
lret
insb
inc
add
add
dec
stc
pop
rcrl
push
adc
outsb
lea
sub
dec
lock
inc
outsl
adc
add
sbb
cmp
test
jns,pt
in
aaa
stos
mul
pop
imul
mov
je
push
xor
ja
scas
in
cmpsb
dec
outsl
jmp
add
dec
mov
xchg
dec
cmp
imul
sbb
or
insl
fucomp
push
lcall
cli
add
out
rcr
cmpsl
movups
cmp
fcompl
cmp
clc
or
push
add
outsb
sbb
jnp
stc
pop
int
aaa
push
dec
outsb
out
or
jo,pn
or
mov
xchg
and
mov
in
iret
mov
mov
lods
cld
xor
push
cmpsb
add
or
dec
push
loopne
scas
push
adc
push
clc
iret
jno
jnp
leave
mov
mov
roll
outsl
adc
push
cmp
jb
lods
fldcw
jmp
and
test
fdiv
fs
inc
push
addr16
mov
mov
cld
add
scas
fldl
and
arpl
popf
and
inc
mov
and
rcl
lods
sub
mov
hlt
icebp
imul
cmp
or
and
adc
test
mov
mov
dec
jge
push
pop
xlat
imul
mov
repnz
out
stos
push
inc
rcr
js
call
dec
xor
loopne
subl
mov
inc
rcrl
sub
pop
je
sub
clc
ret
xlat
arpl
dec
push
inc
mov
add
inc
in
iret
into
sahf
stc
xorb
shlb
and
int3
repnz
xlat
insb
and
push
jo
xchg
out
add
scas
loope
aaa
mov
push
aas
dec
mov
inc
xchg
dec
loope
lods
sub
iret
dec
dec
push
push
icebp
mov
cmp
sbb
pop
push
jp
test
inc
mov
out
xchg
pusha
into
push
inc
dec
pop
xor
stos
and
scas
ja
es
stc
je
inc
test
xor
inc
sbb
jge
push
out
mov
add
pop
mov
cmpsl
ret
in
push
cmp
mov
xor
aam
int
test
lods
dec
jbe
mov
xchg
mulb
add
outsb
sub
cmpsb
add
popf
dec
out
bound
pop
sub
in
sub
movsb
cmp
xor
out
out
arpl
nop
movsb
xorl
and
lcall
jg
push
enter
fstpl
testl
dec
xor
or
gs
cwtl
mov
adc
fsubr
jne
xchg
fisubrl
les
test
sbbb
inc
pop
es
pop
cmp
aam
and
push
outsl
mov
aam
clc
aam
push
scas
daa
popf
pop
cwtl
add
andb
outsb
sbb
jae
mov
in
imul
inc
test
test
imul
push
or
stos
pop
ljmp
and
arpl
add
inc
add
jb
ror
loopne
cwtl
dec
sarb
paddusw
aas
cmp
mov
xchg
inc
icebp
ds
and
pop
filds
mov
jb
dec
sub
test
fiadds
aam
sbb
xor
insb
fmuls
mov
or
pop
fidivrl
and
dec
add
jge
rcrb
cmpsl
aaa
fisubs
in
xchg
mov
in
scas
push
ljmp
rorb
push
adc
sub
popf
call
in
mov
pop
xor
mov
fbld
ja
sub
inc
push
push
pop
xor
sub
add
inc
xor
cmpsb
int
or
fs
push
cmp
iret
sbb
iret
mov
stc
jle
imul
add
popf
dec
ljmp
addr16
and
push
bound
xchg
stos
jns
xchg
mov
mov
push
jle
xor
sub
push
movsl
dec
xchg
ja
popa
icebp
mov
mov
mov
cs
inc
arpl
xchg
ret
sub
mov
and
add
sub
cmp
jmp
or
ljmp
das
mov
xchg
movsl
aam
mov
xchg
fwait
push
add
nop
mov
sub
push
or
jb
cmp
sahf
rcrb
adc
or
lods
mov
or
rolb
inc
cmpsl
fldl
or
sub
push
or
dec
pop
dec
insl
dec
xchg
stos
jb
push
imul
jle
push
xor
out
fsubrs
mov
cmp
sub
scas
imul
rcrl
call
data16
leave
rorl
fstpt
sbb
xchg
call
cltd
mov
sbb
xor
aam
mov
out
je
jp
repz
jmp
sbb
movsb
sbb
rolb
jmp
mov
nop
push
popa
push
ficoms
adc
jl
adc
push
inc
rcrl
loop
push
shll
dec
jp
mov
ja
and
push
dec
cmp
dec
insb
rolb
sahf
push
loopne
fwait
iret
xor
jb
or
xchg
add
rcll
dec
sub
push
fnstcw
aas
mov
xor
mov
icebp
sbb
lea
testb
mov
xchg
loopne
out
fstps
mov
or
adc
dec
in
jo
and
cmpsb
add
in
cmc
adc
data16
popa
push
lret
sbb
cmp
mov
fldt
mov
jmp
xor
sbb
psrlq
dec
sbb
add
pop
mov
push
cmpsl
push
imul
fimull
dec
fcmovnb
imul
call
movsl
add
pop
pop
push
mov
outsb
pop
xchg
repnz
repz
daa
in
cwtl
roll
in
cmpsb
xor
add
adc
int3
push
dec
repz
fwait
rcll
sub
inc
inc
test
sti
mov
or
pop
push
and
push
cli
push
int
inc
fisubs
xor
xlat
ficomps
mov
loopne
jo
jmp
cmpsl
cwtl
mov
push
cmp
mov
bound
into
jl
and
fsubl
cmc
mov
or
inc
ficompl
into
pop
fbstp
je
jge
cwtl
push
lcall
xchg
push
rorb
xlat
add
sbb
push
push
lods
shlb
out
or
inc
xchg
sbb
sarb
inc
add
adc
pushf
jge
push
jg
inc
xchg
xor
pop
pushf
sub
fistl
mov
xchg
inc
push
sub
repz
arpl
xchg
stos
fisubrs
fisttps
rcrl
out
ret
adc
test
popa
push
sarl
movsb
sbb
push
arpl
les
lret
and
push
inc
or
pop
fadd
clc
cltd
jae
mov
inc
aam
call
shr
ret
iret
jle
ret
cmp
add
xor
out
daa
lds
mov
jbe
mov
xchg
pop
mov
mov
mov
leave
lds
inc
push
mov
push
dec
jmp
idivl
daa
mov
pop
add
xor
movsb
jae
push
jle
cmp
push
pop
idivb
mov
sbb
sub
dec
cld
push
or
adc
cld
aad
clc
xor
mov
call
mov
ret
testl
pushf
fistps
jmp
ret
mov
adc
fsubr
jmp
mov
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
sub
inc
daa
xor
mov
adc
add
sub
in
aam
les
mov
test
ja
inc
push
push
inc
daa
xor
and
xchg
xchg
add
or
dec
insl
aam
mov
cmp
pop
jg
outsl
jnp
sar
ror
adc
lcall
push
jp
dec
jo
pusha
sub
cmp
sbb
sbb
ljmp
loopne
nop
mov
fsubrs
jp
sub
pusha
sub
or
sbb
ljmp
loopne
nop
mov
mov
sub
aas
add
push
push
sub
push
lcall
loopne
mov
test
test
xor
es
scas
adc
xchg
jg
xorl
lods
fwait
gs
nop
mov
add
test
xlat
adc
leave
add
loop
outsl
sar
int
lcall
add
cmc
push
sub
sbb
movsl
xor
pop
cwtl
sub
fdivs
mov
xor
pop
jp
mov
or
imul
pop
movsb
add
insl
inc
sbb
addb
sbb
push
add
push
cli
dec
inc
loopne
mov
jb
pop
in
inc
lods
adc
mov
jne
adc
push
or
sbb
lret
loopne
nop
mov
mov
dec
jo
pusha
sub
cmp
or
sbb
aam
andl
idiv
hlt
add
enter
ds
push
jbe
addr16
outsb
outsb
mov
mov
loopne
cld
fmulp
mov
loop
cmp
pop
cmp
and
add
pop
add
xchg
aam
test
mov
lcall
jo
pusha
sub
cmp
or
sbb
ljmp
loopne
nop
mov
mov
dec
jo
pusha
sub
cmp
or
sbb
ljmp
and
in
outsl
clc
aas
outsb
loop
mov
pop
add
adc
mov
sahf
mov
jge
imul
mov
inc
ret
push
push
roll
adc
test
jae
jo
aam
jbe
dec
mov
cwtl
and
pop
jp
mov
addr16
js
mov
mov
gs
push
xor
inc
leave
inc
or
or
jecxz
dec
inc
test
xchg
daa
sbb
call
fidivrl
inc
jae
pop
icebp
mov
mov
addr16
or
or
xor
jl
addr16
inc
push
push
les
popa
jnp
push
test
and
adc
cmp
or
sub
sbb
into
pop
sbb
pop
or
xor
outsb
cld
repnz
fmull
xchg
xchg
adc
inc
clc
or
ficomps
clc
push
aad
in
subps
ds
sub
aad
mov
loope
fisubrs
push
mov
jmp
push
add
or
sbb
stc
inc
inc
mov
and
test
icebp
cmp
push
mov
sbb
jp
pushl
mov
insb
xchg
aas
jb
inc
inc
xchg
push
xor
ret
nop
test
push
cmc
lds
hlt
stc
dec
xor
dec
movsl
aam
xchg
dec
dec
cmp
popf
jns
lcall
sarl
mov
fs
pop
push
xlat
das
xor
mov
mov
arpl
mov
add
adc
jmp
push
mov
pop
outsb
xchg
jle
push
mov
xchg
pop
ljmp
outsl
sbbb
stos
jmp
ret
sahf
sbb
or
dec
jl
inc
es
lret
out
xchg
out
daa
add
sti
sbb
and
fiaddl
xchg
out
enter
mov
out
dec
stos
mov
xchg
add
jl
push
add
adc
lds
iret
loopne
dec
data16
xchg
in
sbb
cmp
mov
xlat
fsubr
subb
cmp
hlt
or
iret
pop
ret
jle
imul
insb
mov
lds
jnp
sbb
xor
and
sarb
pop
cmp
push
jecxz
or
and
enter
ret
mov
or
xor
push
jmp
jnp
mov
repnz
pop
adc
mov
ficoms
aas
cmp
popf
test
jmp
int
std
pushf
or
mov
rcll
push
lahf
ret
inc
aad
mulb
pop
hlt
addb
xchg
push
or
push
pusha
fsubs
mov
loop
je
mov
imul
int
jns
mov
xchg
dec
pushf
loope
lcall
adc
mov
addl
cld
sub
pop
push
stc
dec
cwtl
nop
inc
subl
dec
repz
lret
pop
ss
jge
andb
mov
cmp
out
movsb
iret
fnsave
mov
or
pop
xchg
shrb
fldenv
or
mov
das
push
daa
lods
mov
ja
ret
shrl
sbb
fisubrl
cwtl
shrl
arpl
mov
pop
xlat
push
add
push
daa
mov
fcmovnu
mov
jno
sti
adc
into
mov
adc
add
lods
repz
adc
nop
xor
addl
mov
cmc
mov
xchg
hlt
mov
and
jecxz
mov
push
in
fidivrs
push
adc
xchg
xor
fwait
jl
or
arpl
loop
stos
fndisi(8087
arpl
out
sti
mov
lahf
lock
jp
add
pop
inc
inc
adc
stos
jno
xchg
enter
xor
add
push
adc
js
xchg
or
testb
fs
hlt
dec
xchg
mov
test
or
lods
push
push
push
cli
cmc
cmc
loope
les
mov
mov
dec
out
xchg
xchg
jae
int
mov
cmp
rcll
jp
xchg
adc
xlat
inc
shrl
repz
mov
sub
add
xor
cmp
jl
xchg
popf
orb
pop
sub
imul
fwait
clc
int3
xchg
stos
push
jmp
cld
jne
lcall
mov
inc
fcmove
xchg
insl
push
fsts
outsl
inc
sbb
hlt
push
cmpsl
dec
aad
push
shrb
cmp
cmpsb
adc
push
outsb
outsl
jne
ror
in
lock
dec
sbb
ret
scas
mov
push
mov
pop
xchg
fucomi
ss
and
jmp
pop
cltd
xor
push
mov
outsb
rcr
inc
mov
xor
jle
fidivrl
cmpsb
insb
fcos
jbe
popf
push
push
cld
pop
mov
jo
std
xchg
js
push
mov
sti
stos
test
lret
dec
push
or
xlat
adc
jle
testb
lds
dec
push
enter
dec
clc
es
xchg
and
ret
or
inc
mov
xchg
fwait
adcb
xchg
pop
push
aam
jno
and
ret
mov
dec
loop
ljmp
and
dec
loope
inc
mov
or
ljmp
enter
cmp
out
jb
fsubl
xor
fcomps
or
sub
mov
lods
cwtl
mov
imulb
insb
mov
jmp
adcb
add
scas
xchg
movsb
mov
jnp
shrl
xor
fldl
pop
scas
pop
hlt
insb
test
popa
xchg
daa
jl
jnp
mov
cmp
sbbl
scas
inc
xchg
mov
dec
hlt
jp
inc
pop
aaa
mov
jl
add
outsb
in
mov
mov
inc
cltd
push
sbb
daa
mov
sbb
inc
dec
push
pop
push
push
inc
adc
mov
call
leave
test
sub
mov
cmp
xor
fbstp
cmc
stos
lcall
lds
and
push
pop
adc
mov
add
ss
and
mov
mov
in
lds
xlat
xchg
lds
aaa
arpl
push
dec
inc
mov
jnp
mov
cmp
mov
aas
clc
sbb
mov
mov
bound
aas
mov
insl
add
pop
arpl
repnz
push
cmpsb
add
mov
pop
lea
sub
outsl
repz
mov
and
lods
sbb
addb
stos
or
rcll
stos
ds
add
sbb
aam
cmp
xbegin
push
xchg
jnp
push
push
dec
inc
jmp
fcmovne
jl
lock
dec
add
das
xchg
and
ja
pop
out
mov
mov
in
inc
sahf
ss
xchg
fsubs
xchg
add
mov
test
adc
fstp
dec
hlt
test
aaa
addr16
cmpsl
push
pmulhw
aaa
push
aad
addr16
jl
shlb
decb
aam
mov
cmp
test
stos
out
push
lods
inc
popf
je
repnz
mov
roll
aam
loopne
rcrl
xchg
jp
insb
inc
cmp
jg
in
xchg
andl
out
xchg
mov
xor
xor
inc
imul
pop
cwtl
adc
mov
aas
mov
sub
popa
cmpsb
mov
mov
jae
fwait
xor
out
sub
popa
mov
lods
push
xchg
mov
sub
loopne
cmp
and
push
ror
sub
and
cld
mov
or
mov
pop
mov
xor
xor
xor
jae
and
lcall
shrb
imul
push
xor
mov
ljmp
add
idivl
into
adcl
and
mov
mov
aam
das
mov
aas
dec
stos
shrl
mov
loop
pusha
cmp
xor
movsl
sbb
pop
inc
jmp
mov
inc
cltd
mov
cmp
or
add
lock
sbbb
fstp
or
xor
sbb
fwait
xor
aam
or
xchg
lcall
push
outsl
mov
sub
daa
mov
repz
inc
cmp
mov
xchg
inc
sbb
pop
push
scas
mov
ret
lret
rcr
sub
xor
fs
push
inc
ss
xchg
rcll
cmp
and
and
orb
in
mov
dec
icebp
pop
pop
cmp
pop
adc
mov
sub
mov
clc
mov
loopne
mov
mov
inc
fistpl
mov
inc
in
mov
sub
jecxz
outsl
sti
push
mov
mov
fildl
inc
add
sahf
push
pop
fwait
push
sbb
jp
add
mov
and
dec
jnp
cmp
nop
fdivl
mov
inc
mov
pop
cwtl
outsl
in
ss
fprem
out
jg
testl
subl
mov
cli
mov
sub
pop
push
fldt
loopne
jne
add
adc
in
inc
js
inc
push
dec
loopne
movsb
mov
ljmp
adc
and
xchg
mov
xchg
or
test
rclb
inc
jae
mov
mov
dec
out
adc
mov
inc
ficoml
mov
push
loopne
push
lcall
int
mov
cld
das
push
je
test
adc
repnz
adc
mov
jns
or
hlt
fnclex
mov
jge
mov
cmp
out
sub
mov
sub
xchg
mov
sub
cmp
ret
adc
dec
fadds
and
cmp
mov
fstpt
push
ss
js
loopne
dec
xchg
pop
xlat
fwait
push
cmp
mov
into
mov
out
cmp
daa
lea
mov
repz
and
insl
mov
leave
fnsave
push
or
add
lods
mov
jl
sub
xlat
push
and
movsb
aaa
icebp
scas
shlb
cwtl
dec
push
in
mov
cs
mov
mov
test
mov
xor
pop
pop
test
add
repz
cmp
insl
test
bound
insl
inc
clc
xor
aam
es
iret
lock
push
adc
sbb
and
outsl
push
data16
push
fmul
mov
andb
dec
fs
jmp
xchg
into
cld
xchg
js
pusha
out
inc
add
xchg
fiaddl
lock
test
lcall
mov
xchg
lods
mov
es
dec
jb
pop
lea
fistpll
jae
test
test
mov
bound
pop
jge
sub
cmc
push
jmp
xor
rdpmc
push
push
aam
add
fsubl
mov
loope
in
clc
ret
repz
hlt
mov
lea
arpl
cs
push
or
testb
fistl
cltd
nop
mov
adc
sarl
hlt
jmp
or
jmp
add
pop
push
movsb
mov
and
jnp
mov
sub
lods
sbb
pop
imul
add
dec
icebp
shll
lock
cmp
out
aam
jp
inc
mov
lret
pop
jmp
mov
aam
xchg
xlat
push
outsl
mov
imul
dec
popa
add
sub
aad
push
jg
sar
sti
jle
and
aas
xchg
outsl
inc
mov
out
pop
mov
rclb
outsb
test
sub
xor
cli
push
jmp
push
loopne
mov
mov
lcall
push
and
imul
dec
jno
stc
cwtl
mov
daa
loop
test
shrb
sbbl
sahf
lods
pop
sub
inc
pop
popf
scas
pop
aaa
cmpsl
inc
jno
inc
mov
call
and
sbbb
clc
jp
jge
test
lock
out
ret
out
inc
sub
test
xchg
add
test
mov
pop
sub
out
xchg
jbe
sub
cs
cld
into
outsl
arpl
sbb
cmp
pop
divb
aam
dec
cwtl
rcrl
std
mov
adc
xchg
insl
cmp
xor
insb
mov
pop
sbb
sbb
mov
cmp
sub
dec
divl
inc
scas
cmp
popa
jge
jns
int
test
lcall
push
jle
mov
lods
jnp
cwtl
inc
cmp
stos
xor
cmpsb
sbb
test
push
mov
loopne
repnz
ss
jp
mov
pop
or
add
adc
xchg
insb
push
jg
and
pop
xchg
mov
in
insb
mov
adc
std
fiaddl
push
out
iret
sahf
mov
insl
fs
cmp
jbe
xchg
lock
dec
xor
push
popa
mov
sub
aaa
int
imul
leave
pop
xchg
inc
enter
in
mov
lret
cmp
cmp
inc
mov
lret
sbb
ss
add
jmp
sub
and
sub
insb
push
fldcw
cmp
and
pavgw
fistl
test
jle
or
mov
or
inc
dec
fdivrl
cld
jp
mov
mov
testb
mov
hlt
and
cmp
loopne
mov
repz
xchg
xchg
scas
sti
mov
leave
lods
pop
das
push
mov
lods
sub
jp
xchg
aad
leave
mov
rclb
enter
das
xor
and
sahf
xchg
jg
das
into
pop
sub
push
mov
mov
xchg
pop
mov
mov
mov
mov
pop
pusha
addr16
push
cli
aas
jl
mov
sarb
sar
pop
into
xor
aad
es
mov
ss
in
dec
imul
int
clc
xchg
mov
fistpl
js
mov
and
push
std
adc
sbb
and
insb
and
inc
ss
mov
adc
mov
scas
sbb
mov
xor
inc
mov
lret
add
jno
push
sbb
ds
dec
mov
adc
jl
scas
icebp
xchg
xchg
jmp
aam
fdivs
add
cli
mov
push
stc
mov
out
sub
and
add
rcll
cmc
adc
cmp
cmp
adc
aad
test
inc
mov
dec
push
push
add
or
ja
add
and
cltd
fdivl
rcl
inc
xchg
cmp
cwtl
ljmp
mov
fldenv
sbb
das
cmp
pop
dec
xchg
dec
mov
leave
sub
fnstcw
scas
cli
xor
mov
cmp
pop
outsl
imul
lcall
push
lock
mov
and
sti
out
es
jbe
int3
int
jns
imul
add
daa
cmp
lods
pop
xchg
outsl
sbb
xchg
lahf
cmp
jge
aaa
lret
shr
fnstcw
sti
push
dec
std
sahf
lods
cmpsl
cmpb
call
dec
sub
int3
xchg
fwait
cmp
test
out
sub
cmpsb
inc
dec
sbb
jbe
imul
cmc
cmp
test
dec
mov
cmpb
movsb
shlb
fidivrl
movsb
cltd
pop
scas
dec
in
add
test
push
shrl
stos
lods
jo
daa
call
inc
xor
dec
negl
cmp
inc
repz
xor
lret
insb
stos
mov
outsb
pop
push
jmp
mull
xor
icebp
xor
imul
sti
push
negl
jg
or
test
xor
out
fstl
xchg
xchg
aam
addr16
lods
lods
loopne
pop
sub
cli
pop
push
pop
hlt
jl
aad
add
ror
or
xchg
jbe
arpl
hlt
sub
sub
jb
cmpsl
popa
mov
les
or
setb
repnz
push
arpl
movsb
test
xor
jp
pop
icebp
push
mov
rorb
jbe
inc
jmp
movsl
push
push
mov
add
add
outsl
sti
repz
call
icebp
inc
fdecstp
jg
movl
fs
or
mov
cmp
mov
mov
out
push
mov
cwtl
testl
arpl
dec
pop
push
cltd
popf
int
aad
insb
adc
cmpsl
dec
xor
les
fildll
mov
cld
adc
sbb
in
cmpsb
pushf
mov
inc
sahf
addb
pop
xor
out
aas
mov
aam
mov
cmpsl
push
mov
mov
add
adc
ljmp
out
sub
int3
inc
sub
test
mov
cli
pop
stos
orl
sti
mov
xchg
xlat
cmp
int
fcompl
xchg
in
pop
ret
fldl
cltd
xchg
daa
fstp
push
jcxz
jg
jae
and
test
scas
pop
mov
xchg
add
lret
cmp
and
push
aad
out
hlt
adc
out
mov
repz
repnz
xor
lret
mov
jno
xchg
adc
push
decl
sbb
rol
sub
loopne
aad
aaa
mov
je
subl
out
pushf
imul
xchg
lahf
test
push
arpl
aaa
push
sbb
sti
adc
pop
mov
mov
fst
xchg
mov
rcll
testb
pusha
jecxz
xlat
jle
iret
adc
xor
xchg
std
and
lods
scas
xor
fisubl
popa
in
cmp
arpl
mov
sub
push
test
dec
sub
dec
mov
out
mov
popf
cmp
hlt
addr16
test
push
shll
fwait
cs
imul
loop
js
out
push
sbb
xchg
movsb
hlt
mov
test
test
outsl
xor
xchg
test
clc
sub
mov
add
ret
cmpsb
insl
mov
add
mov
out
popf
pushf
mov
bound
dec
pushl
imul
gs
addr16
add
xlat
dec
fstpl
movsl
xor
out
push
shrl
pop
fs
add
sbb
xor
sbb
push
ficompl
and
movsb
mov
sbb
mov
xchg
dec
jle
mov
cmpsl
mov
dec
sahf
jne
jge
fs
je
cs
mov
stos
cmpsl
dec
push
lret
lods
cli
fs
movsb
dec
aaa
movsb
dec
jo
mov
mov
sub
jmp
call
mov
ret
jge
rorl
push
outsl
enter
dec
das
scas
jmp
aas
cmpsl
xlat
inc
lods
leave
ds
push
pop
and
stc
and
and
daa
add
xchg
or
inc
popf
mov
mov
aaa
insb
fisttpl
push
jbe
inc
sbb
jecxz
ds
mov
inc
push
andb
lahf
mov
or
inc
fdivs
xor
dec
loop
xchg
sahf
in
jg
sahf
jl
call
popa
mov
xchg
push
xchg
fisubl
lods
fs
in
jmp
call
add
or
jo
shrb
push
mov
cmp
addr16
mov
enter
adc
insb
lcall
or
inc
mov
xlat
adc
sub
int
inc
jns
mov
lods
and
cmp
cld
xor
pop
enter
xor
mov
xlat
shlb
aaa
dec
add
jb
mov
xchg
push
mov
inc
dec
lret
cltd
xchg
jo
rcl
in
gs
mov
cmp
mov
flds
push
dec
lods
mov
adc
adc
cwtl
mov
popf
out
stos
inc
lcall
paddsb
out
rorb
sbb
sub
and
jle
jnp
leave
cmpb
jbe
jno
push
imul
push
add
push
xchg
and
inc
sbb
ljmp
xchg
iret
jecxz
cwtl
mov
inc
ret
sub
movsl
push
pcmpgtb
xchg
xchg
jl
and
jl
sub
cmp
stc
pop
mov
adc
and
sti
cwtl
mov
scas
sbb
std
mov
leave
cmp
lcall
in
sub
inc
loope
sarl
mov
movsl
xchg
iret
ljmp
inc
hlt
mov
push
nop
out
or
mov
aaa
mov
xor
in
and
dec
jbe
mov
push
push
bound
or
outsb
cwtl
dec
int
pop
mov
test
loope
push
ds
push
das
cli
aaa
sub
xchg
mov
loopne
dec
bound
inc
fs
jb
adc
out
push
das
mov
in
mov
pop
ss
or
rcrb
ficoms
and
mov
into
mov
stc
push
je
lahf
mov
pop
insl
sub
inc
push
es
push
add
test
cmp
icebp
inc
call
jle
arpl
out
cld
mov
fidivs
test
jae
addl
shll
jle
ja
les
sub
jns
aaa
lds
push
cmp
ljmp
nop
mov
mov
dec
jo
pusha
sub
cmp
or
sbb
ljmp
loopne
nop
mov
mov
dec
jo
pusha
sub
cmp
or
sbb
ljmp
loopne
nop
mov
mov
dec
jo
pusha
sub
cmp
or
sbb
jmp
sti
ror
stos
nop
mov
mov
loopne
pop
pop
pop
cwtl
mov
cmc
iret
in
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
push
call
dec
sbb
rcr
js
in
add
or
add
add
push
inc
add
add
add
dec
add
aad
jo
cld
add
add
add
add
add
insl
add
add
add
xor
add
add
add
add
add
add
mov
xor
add
add
add
add
add
add
add
add
cmp
iret
add
add
mov
cmp
and
roll
add
add
add
pop
add
sbb
int
int
sbb
cmp
lock
add
add
sub
int3
add
add
add
add
add
add
add
add
rolb
cmp
pop
add
add
add
and
add
add
add
add
add
add
add
xor
filds
roll
add
jmp
xor
inc
add
sub
roll
add
add
add
add
add
add
add
add
add
or
inc
add
or
add
add
add
add
add
cmp
es
add
add
add
add
add
add
add
js
push
add
add
add
add
jnp
sbb
fwait
add
add
add
add
dec
add
add
add
add
add
add
add
add
ret
add
cmp
mov
rolb
fwait
add
add
add
or
rolb
loopne
arpl
addl
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
mov
dec
add
jp
inc
add
add
add
add
add
add
pop
add
add
mov
arpl
mov
sub
xchg
add
das
add
add
add
add
jp
fwait
add
add
add
mov
add
add
add
add
add
add
add
add
jns
verr
movsb
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
mov
filds
or
xor
add
add
add
add
add
xor
mov
add
add
add
add
imul
add
cltd
add
or
inc
add
add
add
pop
add
das
add
add
add
dec
add
out
add
dec
add
sldt
add
add
add
add
add
add
leave
add
cmp
addl
or
add
add
add
add
mov
sub
fwait
add
add
add
add
add
add
dec
add
add
add
pop
add
xor
int
int
push
add
add
add
ljmp
add
das
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
pop
mov
mov
fsubrp
or
jge
pop
inc
mov
inc
sub
lahf
inc
xor
xor
mov
jmp
mov
ljmp
inc
jp
stos
dec
sti
loopne
lds
cli
mov
daa
sbb
lret
xor
lcall
shl
xchg
repz
cs
cmp
mov
and
xor
in
cmp
bnd
lret
or
cmc
hlt
pop
out
push
mov
xchg
mov
sbb
mov
push
or
idivl
icebp
repnz
pop
push
lahf
lods
lret
out
add
push
add
dec
decl
push
out
add
bound
jmp
inc
hlt
clc
cli
cmovno
xchg
outsl
and
das
lods
add
cmp
psrlw
mov
insl
push
out
pop
mov
rol
cmc
cmc
sub
repz
pop
mov
fwait
aad
fldcw
mov
addr16
dec
ficompl
neg
mov
loope
pop
pop
cmpsb
mov
aas
and
outsl
sub
adc
fldl
punpcklwd
mov
or
movsb
jl
sub
push
adc
add
jno
mov
mov
xor
in
leave
xor
inc
cmp
fiaddl
cmpsb
and
rcrl
insl
adc
mov
adc
bound
leave
insb
or
xor
dec
push
xchg
mov
and
divl
or
aas
inc
mov
dec
xchg
adc
sbb
sarl
imul
mov
push
adc
xchg
imul
inc
insl
aas
insl
jl
mov
test
xchg
insl
das
sub
jl
or
movsb
sti
jg
cmp
and
pop
dec
and
cmc
or
sub
sbb
sub
imul
dec
adc
inc
pop
mov
pop
mov
stc
loope
and
ja
scas
sbb
xor
mov
cmp
cmp
fwait
sub
adc
xor
scas
in
xchg
mov
fsub
dec
arpl
add
sub
cli
repnz
lods
push
inc
pushf
dec
jmp
mov
int3
call
pop
mov
pop
orl
lcall
pop
icebp
les
xor
imul
mov
in
pushf
in
xchg
sub
mov
and
xor
hlt
jg
xchg
repnz
push
adc
jno
lahf
les
lret
int3
mov
xor
popf
mulb
sar
ret
popa
sarb
popf
rolb
enter
pop
testl
imul
out
imul
add
add
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
