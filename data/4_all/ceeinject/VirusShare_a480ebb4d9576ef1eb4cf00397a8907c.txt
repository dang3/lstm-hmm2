testb
mov
mov
add
mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
outsb
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
mov
movb
mov
movb
movb
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
movzbl
sub
je
inc
cmp
mov
jbe
call
mov
mov
movzbl
jmp
movzbl
sub
je
call
incl
call
mov
mov
movzbl
sub
jne
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
mov
pop
ud1
dec
jecxz
ljmp
lahf
inc
xor
daa
out
pop
iret
pop
iret
aas
out
xlat
pop
movzwl
outsl
xchg
pop
xchg
daa
mov
inc
aaa
lcall
sub
pop
add
cmpsl
jg
outsl
mov
mov
es
mov
je
mov
pop
xchg
dec
mov
cmp
loop
xchg
pop
test
cmp
push
pop
int3
in
jbe
lcall
mov
out
jne
and
pop
loop
xlat
add
repz
lcall
out
mov
xchg
mov
imul
xlat
int
enter
mov
aaa
mov
mov
shl
push
pop
add
or
outsl
xchg
push
test
inc
pop
mov
lar
sbb
sub
pop
add
and
rorl
iret
dec
mov
aaa
mov
les
das
jb
out
sub
pop
in
aad
mov
inc
jo
out
daa
mov
les
out
xlat
pop
stos
movzwl
outsl
xchg
pop
aas
dec
test
pop
push
cmp
pop
fbld
test
xchg
push
xchg
pop
test
sbb
es
int3
lcall
dec
test
lods
inc
stos
notl
inc
nop
push
or
fidivrs
sub
or
popa
dec
fisubl
fnsave
clc
sub
inc
lcall
test
jl
jp
ja
dec
cmpsl
outsl
xchg
pop
xchg
mov
inc
aaa
jmp
out
pop
filds
iret
idivl
out
xlat
pop
movzwl
outsl
xchg
pop
xchg
mov
inc
aaa
jmp
out
pop
filds
iret
idivl
and
jg
cwtl
enter
rcrb
mov
sahf
mov
push
sti
push
mov
adcl
enter
sub
fs
out
das
adc
add
jnp
imul
lds
sahf
add
push
mov
mov
pushf
int3
or
fs
mov
cli
out
sub
clc
ja
jg
lret
dec
mov
inc
adcl
imul
and
jecxz
pop
adcb
or
stos
and
or
xchg
jo
and
push
int
sbb
in
jns
jge
mov
out
fdivl
push
or
mov
jg
js
add
push
mov
sar
and
shrb
fsubs
cmpsl
cmp
lock
xlat
enter
loopne
fstpt
lcall
adc
je
push
or
adc
mov
cmp
xchg
jecxz
xchg
ja
lcall
mov
mov
add
dec
call
nop
mov
cmp
xor
jae
adc
hlt
inc
mov
xor
popf
fidivrs
jne
dec
lahf
insb
loope
imul
idiv
jae
mov
in
aam
maskmovq
imull
dec
cwtl
mov
cld
call
mov
push
push
sbb
add
aad
mov
pop
adc
in
push
sub
sub
fwait
out
pop
mov
ds
xor
xor
dec
push
push
das
cmp
jecxz
push
into
loopne
lods
pop
xchg
adc
inc
xchg
nop
cwtl
adc
lcall
stos
mov
cmc
cmp
xor
add
lret
and
jne
lcall
fnclex
inc
jnp
push
mov
pop
mov
mov
negb
inc
nop
inc
inc
jecxz
cli
jp
jno
je
cli
daa
mov
pop
xor
add
push
xor
mov
sub
sbb
push
push
idivl
or
pop
sub
push
mov
cmp
pusha
mov
sahf
and
les
inc
enter
mov
lret
mov
xchg
cmp
out
loop
dec
jb
mov
mov
sub
test
scas
xor
lret
dec
mov
iret
sbb
cmp
out
jge
movsb
mov
in
sub
test
or
std
cmp
and
je
and
in
je
inc
aaa
jp
daa
stos
mov
mov
gs
add
arpl
push
aaa
push
mov
pop
jecxz
mov
jmp
jbe
movsb
rol
mov
cmpsb
ret
pop
xchg
inc
pop
mov
ffree
lret
jge
xor
pushf
adcb
cmpl
enter
push
sbb
add
mov
test
mov
int3
and
push
xor
sbb
pusha
mov
cmp
pop
sub
push
leave
pop
push
out
push
shr
shr
sbb
aas
jmp
inc
arpl
xchg
fadd
mov
movsb
mov
sbb
push
ljmp
lret
xchg
test
jl
sbb
or
inc
jge
inc
insl
mov
sub
mov
rcrl
push
aaa
pusha
adcl
add
jbe
fmull
push
mov
xor
gs
lret
imul
sbb
mov
mov
sub
sbb
push
movsl
or
push
into
outsl
mov
mov
dec
push
push
add
cmp
out
pop
dec
mov
fists
inc
inc
outsl
push
dec
repnz
outsb
adc
insl
jno
sbb
pop
test
and
push
dec
cmp
dec
inc
xchg
lret
pop
insb
scas
xchg
mov
cmp
jle
pop
xchg
jmp
cmp
sub
sbb
out
outsl
icebp
xchg
mov
cmp
insb
or
and
outsb
cmp
add
scas
lock
jbe
or
xchg
cmp
aaa
repnz
cmp
push
inc
cli
xchg
loope
in
inc
rcrl
test
es
addl
add
mov
cmc
sbb
push
into
add
insb
push
divb
mov
sbb
push
scas
xchg
cmp
push
out
mov
xor
pop
ljmp
pop
test
adc
je
pop
aaa
fcomps
cld
push
jnp
add
cmc
lds
jnp
fbstp
lcall
test
movsb
jbe
mov
cmpl
lret
xchg
pop
cs
in
mov
xor
add
popf
and
sahf
jno
or
imul
out
sbb
push
push
loopne
imul
push
inc
rolb
sbb
in
in
mov
or
sbb
fistpll
xchg
fidivl
scas
xchg
or
leave
mov
pop
in
push
insl
xchg
ja
push
in
push
mov
xchg
cmpsl
sub
addr16
pop
pop
sbb
lods
les
jecxz
mov
call
and
push
mov
scas
xlat
ss
popf
sub
inc
ss
pop
arpl
push
lahf
movsl
add
ret
inc
push
xchg
fildl
inc
jnp
cmp
iret
stos
das
cmpb
out
lods
scas
inc
xchg
jbe
xchg
in
daa
inc
movsb
stc
gs
add
mov
xchg
dec
fs
jle
dec
test
nop
inc
mov
scas
push
cltd
fildll
jmp
and
int
pop
arpl
repnz
iret
mov
mov
pop
out
push
xchg
sub
mov
xor
sbb
push
dec
jb
mov
jle
sbbb
sub
fmull
and
cli
push
xor
adc
rorb
mov
das
clc
test
mov
inc
fwait
xchg
lahf
in
das
cmp
mov
dec
nop
mov
sub
leavew
shlb
fiaddl
mov
cwtl
icebp
ret
dec
stos
sbb
inc
jl
call
in
jnp
pop
addl
dec
inc
out
sub
lahf
fidivl
xchg
lock
fsts
mov
insb
mov
cmp
testl
inc
fdivrs
mov
sti
mov
dec
mov
xchg
sub
adc
call
mov
pop
add
xchg
jecxz
mov
and
in
mov
inc
pushl
fwait
in
jae
pushf
in
daa
or
lret
inc
inc
or
dec
and
inc
js
inc
or
ss
in
xchg
insl
pop
mov
or
push
adc
insb
pop
xchg
mov
xchg
aad
gs
shrb
insl
add
sbb
fs
in
loope
mov
test
mov
mov
lods
xlat
js
fs
cld
lods
cmpsl
loop
and
popa
push
pop
cmp
pop
imul
dec
stc
movsl
out
loop
outsb
mov
pushf
sti
pop
call
mov
inc
or
cmpsl
lea
cmp
out
mov
loope,pt
aas
dec
daa
in
cld
xor
lret
repz
cld
mov
pop
fisttps
ljmp
and
cmp
or
add
push
or
push
outsb
in
mov
es
lods
cli
inc
dec
lods
xchg
jge
test
je
push
mov
add
or
dec
add
push
inc
dec
pop
subb
and
cmpsl
aad
pop
sub
insl
bound
test
sbb
scas
and
jb
jmp
dec
dec
fdivrl
sbb
xchg
in
sbb
insl
cmpsl
or
ja
std
mov
mov
xor
dec
add
xchg
in
sahf
inc
lea
call
mov
das
and
out
jb
sbb
ja
call
cmp
test
pop
out
xchg
scas
or
push
loopne
out
fs
mov
pop
test
das
mov
and
not
std
pop
fstl
pushf
jmp
ss
icebp
inc
adc
ret
mov
lods
out
xor
ss
call
push
push
sahf
lcall
or
arpl
or
fcoml
mov
jl
les
aad
in
push
push
jns
cwtl
push
add
mov
sbb
test
pop
cmpsl
lock
sub
push
pop
and
mov
adc
push
jecxz
mov
arpl
inc
xchg
sbb
cmp
cld
icebp
jle,pn
xchg
add
outsb
adc
or
pop
pop
fisubrs
sahf
mov
enter
cld
mov
sbb
addl
sub
aam
arpl
aas
outsl
movsl
xor
int3
or
outsb
iret
idivb
xchg
dec
scas
nop
push
hlt
mov
jmp
outsl
inc
dec
adc
stc
mov
ds
inc
out
int3
std
out
imul
out
sub
hlt
or
mov
mov
fwait
sti
addl
loope
jge
dec
ret
push
movb
pop
clc
sub
mov
jecxz
push
push
mov
push
dec
push
push
cmp
sbb
cmp
sub
or
add
loop
adcl
insl
or
pop
push
addr16
movsb
add
xchg
js
icebp
fstpt
in
xchg
jecxz
pop
xchg
lret
dec
pushf
mov
aad
stos
mov
fstpl
dec
fistl
ret
jmp
jbe
mov
icebp
mov
test
xchg
mov
cmc
jge
imul
aaa
test
roll
in
mov
mov
mov
add
out
out
test
rolb
mov
stos
jne
lds
cmp
push
lcall
stos
repz
jl
or
jmp
push
scas
rorb
cmc
arpl
pop
jnp
insb
jae
shl
lcall
add
pushf
std
test
inc
xchg
push
adc
and
movsl
jmp
or
mov
jmp
fldcw
fldt
jnp
adc
in
nop
mov
test
popa
into
jb
jp
pushf
mov
mov
hlt
sub
mov
sahf
popf
shrb
sbb
cli
adc
xchg
cmc
jne
outsb
mov
xchg
out
sbb
mov
jne
mov
add
repnz
dec
test
stos
dec
mov
or
dec
out
sub
icebp
inc
mov
je
nop
movsb
mov
jo
into
es
imul
lock
push
adc
movsl
in
lahf
jns
in
fnsave
push
xor
daa
xchg
popa
in
sbb
push
push
lret
cmp
shlb
jo
shll
sbbb
mov
insb
in
and
adc
in
lcall
mov
test
mov
sbb
cmpb
adc
lahf
je
pop
gs
jmp
xchg
add
iret
and
dec
rorl
cmpsl
mov
and
mov
leave
iret
mov
xor
arpl
hlt
stos
cli
cmp
mov
pop
idiv
xchg
scas
cmp
fstl
lds
out
cld
jmp
cmp
xchg
xchg
movsb
addr16
icebp
orb
cmpsb
xchg
lcall
insl
mov
mov
jnp
xor
clc
aad
push
adc
jns
cmp
xchg
call
aas
adc
inc
push
std
js
pushf
cmpsl
and
cmp
rorb
cli
aaa
xor
sahf
stos
dec
inc
vmovd
jge
aas
lret
push
and
push
ret
mov
jp
into
out
jae
shl
dec
inc
mov
add
push
mov
iret
mov
leave
pop
xor
xor
fs
mov
xorl
dec
mov
jmp
sbb
mov
adc
loope
in
stos
and
dec
movlps
mov
add
dec
fsubs
adc
dec
push
jbe
sbbl
jg
jge
dec
push
xor
test
test
pop
in
je
stc
add
ficoms
xchg
cmpl
ss
daa
addl
mov
jl
add
hlt
enter
pop
jmp
je
imul
movsb
inc
lret
mov
sub
dec
mov
sahf
xor
stos
inc
fwait
mov
inc
push
pop
mov
xchg
mov
push
dec
mov
loop
dec
addl
outsb
mov
jno
mov
add
repnz
push
ss
mov
imulb
clc
mov
popa
ss
jg
loop
lcall
ljmp
sbb
sbb
aaa
out
mov
push
jbe
mov
mov
mov
icebp
out
call
push
jge
loopne
leave
dec
lahf
cmpsb
fiadds
mov
jp
fdivrs
dec
pop
mov
and
add
loop
push
xor
push
leave
push
xor
sahf
add
or
xchg
jge
out
adcb
pop
cmp
adc
push
or
inc
mov
scas
insl
fiaddl
push
pop
addr16
lea
lds
rolb
mov
xor
adc
sbb
or
out
mov
rcl
outsl
or
out
cli
mov
je
add
xorb
imul
rcll
bound
out
inc
scas
inc
add
pop
imul
hlt
jnp
dec
cltd
push
int
push
jge
fidivl
sbb
xchg
hlt
dec
mov
cld
adc
call
cwtl
cmpsl
cmpsl
sbb
dec
hlt
xor
stos
out
add
pop
loope
xor
inc
pop
pop
sbb
jg
lds
lret
jp
pop
xchg
pop
mov
push
or
shll
xchg
test
int3
sub
cmp
cwtl
sbb
xchg
or
rcr
jo
jle
fcompl
adc
xchg
stos
fcoms
inc
pop
pop
popf
imul
cmp
adc
xchg
das
jae
repnz
ja
inc
clc
into
cmp
dec
leave
test
loopne
or
mov
xchg
adc
shll
push
push
pop
push
xchg
xchg
hlt
dec
lcall
lock
inc
inc
xlat
dec
inc
push
out
xchg
adc
cmp
pop
jle
xor
in
or
mov
orl
and
inc
loopne
mov
xlat
add
aaa
mov
jp
pop
jne
mov
insb
pop
aam
outsb
lret
mov
inc
push
sbb
xchg
fdivs
lret
adc
jecxz
push
dec
rorl
loopne
cltd
sbb
das
xlat
in
add
in
or
jle
out
add
decb
inc
nop
xor
jmp
test
scas
in
sarl
aad
mov
addr16
loop
mov
shrl
mov
pop
popf
and
lds
mov
xor
or
push
inc
fsubrl
sbb
jne
add
fistpll
sti
or
loop
pusha
pop
insb
in
push
ja
fdivl
inc
lcall
outsb
das
pusha
ret
and
aaa
ret
push
movsb
jl
xor
cs
add
push
scas
aad
sub
inc
popf
sbb
test
jbe
out
lahf
gs
mov
test
es
rorl
outsb
lahf
aam
mov
and
add
xchg
jns
mov
mov
push
mov
mov
mov
push
xchg
popa
mov
xor
mov
shlb
xor
jnp
add
stos
push
push
mov
js
loope
mov
cwtl
vmread
inc
in
adc
lcall
testl
ds
xchg
faddl
and
push
test
jge
sbb
leavew
ficompl
xchg
aaa
xchg
out
mov
xor
jno
sbb
sub
mov
fcoml
cmp
shrb
inc
push
xlat
mov
mov
sbb
dec
push
adcl
ret
lods
jecxz
scas
cmc
shlb
jnp
fwait
xchg
or
lock
xor
or
add
mov
fstpl
call
ficoml
mov
test
mov
or
push
popf
xchg
in
daa
imul
dec
movl
xchg
cli
mov
inc
fistpll
inc
or
dec
jbe
nop
jle
cs
or
push
mov
jp
and
pop
lret
mov
hlt
jecxz
sbb
data16
arpl
mov
push
pop
das
xchg
pushf
hlt
xor
mov
inc
jns
mov
jnp
sbb
cs
pop
or
cmp
mov
xor
add
mov
imull
roll
jns
and
push
sub
push
cmp
fildll
jnp
dec
mov
mov
and
xor
ljmp
sub
mov
sub
pop
jge
rcll
mov
aad
sarl
or
fnstcw
jbe
ret
loopne
in
rorl
lods
ret
test
jo
or
stos
sub
xor
xor
jmp
outsl
clc
jae
xlat
xor
lret
outsb
jmp
stos
out
in
shl
dec
dec
enter
enter
mov
ret
or
in
int
outsb
sbb
xchg
mov
dec
add
mov
jae
push
mov
sbb
fsubrp
fstpt
adc
std
jne
mov
inc
mov
push
shl
test
lret
xchg
popf
jno
xor
add
mov
jp
push
push
jle
testl
mov
adc
popf
and
ret
pop
lds
out
mov
test
and
fsubl
rol
shlb
xor
jg
int3
mov
push
imull
stos
jne
dec
jecxz
test
xchg
pop
movq
data16
pop
mov
adcl
in
rcrb
or
dec
stos
cmp
cmp
inc
add
and
adc
sbb
pushf
fadd
data16
jp
lods
push
dec
roll
pop
dec
sub
in
data16
xchg
sbb
insl
mov
fists
test
mov
push
pop
cwtl
test
ficoml
push
jns
dec
and
call
gs
pusha
inc
xchg
xor
mov
cld
loop
push
std
jmp
lahf
or
or
je
sbb
adc
push
shrl
xchg
inc
and
testl
inc
cmp
int3
in
push
jp
shrb
mov
mov
lahf
nop
mov
andb
sub
scas
pop
lahf
test
sub
loop
or
add
xchg
je
jno
cltd
push
add
xor
jb
fwait
negb
nop
inc
add
cs
decl
ljmp
mov
pushf
fdivrs
out
pushf
shlb
sbb
js
xor
cld
sub
mov
in
scas
imul
movsl
cmp
scas
adc
pop
xorb
hlt
push
xor
dec
sti
je
jg
aas
pushf
test
cli
push
aas
jne
jp
jp
sbb
leave
fs
cmpsl
push
into
adc
jns
adc
mov
daa
push
jnp
test
std
xchg
push
and
mov
insl
cmp
iret
pop
xchg
sbb
cmpsb
push
cmp
sub
pop
xchg
cmpsl
mov
fldcw
loope
add
fcomps
bound
and
test
mov
lods
pop
mov
arpl
outsl
lods
test
shll
cmpb
cli
push
clc
jge
jb
roll
xor
or
into
dec
mov
loope
pop
mov
imull
jae
or
mov
iret
out
xchg
add
das
out
add
cmp
dec
adc
push
rcrl
aam
arpl
scas
mov
or
fs
sub
icebp
nop
fistpll
mov
test
pop
out
outsb
adc
movsl
int3
pop
mov
mov
movsl
movsb
pop
push
repz
push
nop
mov
xor
andl
mov
xor
mov
out
js
insl
test
and
dec
ret
cmp
pusha
mov
mov
cmp
mov
xor
mov
xchg
sub
and
repz
std
inc
negb
scas
or
cmp
aaa
pop
dec
adc
mov
js
xchg
cmp
stos
add
push
lea
cmpsb
xchg
lock
loop
push
push
test
scas
fnstsw
mov
roll
xchg
add
jl
notb
or
fdivrs
scas
adc
test
out
mov
dec
fs
or
mov
pop
prefetch
int3
aad
jo
ss
pushf
fcomps
outsb
xchg
pop
test
jns
mov
out
fwait
cmc
or
sbb
dec
sbb
push
arpl
pushf
cmp
jl
cwtl
mov
and
jno
mov
or
push
mov
pop
fwait
daa
jno
sbb
mov
int
or
mov
lret
jae
aaa
fidivrl
addb
popa
movsl
adc
outsl
jge
es
sbb
xchg
test
std
mov
push
pushf
loopne
pop
inc
dec
sbb
das
push
lods
xchg
sti
pop
pop
cmp
mov
ss
out
jmp
scas
mov
ljmp
jno
mov
rolb
or
push
call
fcmovnb
mov
popa
fstps
add
int
adc
mov
and
aad
push
mov
sbbb
jae
out
mov
xor
das
loope
fisttpl
mov
cmpsl
outsl
xchg
pop
xchg
mov
inc
aaa
jmp
out
pop
filds
iret
idivl
out
xlat
pop
movzwl
outsl
xchg
pop
xchg
mov
inc
aaa
jmp
out
pop
filds
iret
idivl
in
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
aaa
ds
adc
aaa
iret
out
aas
lret
das
pop
pop
out
movzwl
outsl
xchg
pop
pop
ja
cwtl
add
inc
ja
adc
and
xor
in
sub
movb
movb
movb
movb
movb
movb
movb
call
mov
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
and
cmp
add
es
dec
dec
mov
mov
lods
repz
and
std
ret
in
xor
add
push
jge
inc
mov
mov
lods
repz
sar
ret
in
xor
add
insl
arpl
mov
subb
mov
mov
inc
dec
adc
dec
jl
xor
mov
push
mov
incl
cmp
test
in
dec
shlb
arpl
scas
subb
insl
inc
jl
movsb
enter
jbe
mov
jns
dec
frstor
mov
mov
lea
or
mov
push
sub
sbb
add
sbb
jge
mov
cs
jb
jl
mov
add
pusha
lret
cmpsb
lock
sar
mov
dec
scas
mov
stos
ficompl
pop
or
mov
fsubrs
ret
pusha
psrad
repnz
std
pop
adc
mov
hlt
into
out
arpl
pop
mov
mov
roll
dec
add
push
jge
pushl
mov
jecxz
shl
ret
fists
inc
bound
inc
inc
push
clc
or
cmp
sub
faddp
std
loopne
into
jne
mov
test
push
dec
jo
inc
inc
push
movaps
push
adc
pop
sar
clc
out
out
sbbl
cwtl
test
in
push
push
inc
adc
push
jge
insl
mov
mov
lods
repz
int
std
ret
in
xor
add
push
jge
insl
mov
mov
lods
repz
int
std
ret
in
xor
jl
mov
xor
add
push
ret
mov
arpl
rorl
test
imul
lods
or
inc
fcomps
sub
and
dec
jle
pop
out
ljmp
jno
pop
inc
jbe
in
test
inc
test
jo
sub
icebp
jne
mov
mov
jnp
enter
hlt
dec
mov
xchg
repz
into
out
mov
pop
add
cld
mov
fsubrl
ftst
fs
add
fcoms
adc
inc
pop
call
add
inc
mov
loopne,pn
cld
mov
lahf
push
mov
movsb
push
ja
xor
push
sti
in
mov
loopne
cmp
incb
fbstp
movsl
popf
fwait
sti
dec
ret
adc
fmul
scas
dec
xchg
enter
mov
inc
in
fidivs
sahf
pushf
xchg
shlb
in
jo
push
push
lds
cltd
fwait
xlat
mov
pop
aas
push
in
jecxz
jmp
insb
pop
pop
in
imul
add
or
dec
jl
addl
js
decb
loopne
call
aad
push
add
shll
pop
cmp
pop
push
out
lcall
or
add
in
xlat
pop
dec
test
pextrw
inc
lahf
or
fisubs
xchg
mov
js
loope
mov
jbe
inc
mov
fldenv
jbe
cs
sbb
jae
mov
insl
outsl
pushf
and
lahf
dec
addr16
jne
push
add
je
ljmp
ret
and
std
adc
cltd
fcmovne
loope
jg
test
push
mov
mov
pop
inc
mov
call
sub
mov
mov
hlt
pop
int3
mov
movb
hlt
cmp
pushf
aad
clc
sbb
mov
jl
inc
pusha
imul
out
mov
mov
les
jbe
out
ja
dec
xor
jmp
aas
pop
push
fsub
jge
mov
pushf
enter
outsl
and
jnp
cld
lods
aam
scas
pop
les
push
std
add
xchg
lea
mov
rorl
adc
push
jnp
leave
mov
or
daa
push
lds
xor
jg
pop
add
sbb
pop
push
inc
lahf
lods
xorb
imul
pop
push
bound
test
or
jbe
pop
mov
loopne
ret
je
push
mov
out
ljmp
cs
sbb
shrl
cmp
mov
push
mov
cmp
adc
leave
aaa
lods
add
xor
cltd
mov
imul
cmp
and
hlt
mov
out
xchg
sub
in
push
jmp
popf
pop
cmpsl
mov
sub
sbb
pop
stos
and
sahf
sbb
add
adc
xchg
add
pop
pop
fdivrl
pop
jg
mov
add
inc
lahf
je
xchg
adc
lea
data16
sub
ret
call
pop
mov
sub
iret
inc
mov
into
push
push
cmp
jns
dec
lret
inc
inc
sbb
inc
or
ret
push
ds
jns
ss
addr16
fadds
arpl
aam
xor
mov
and
mov
push
mov
sub
ds
fucomp
and
xchg
pop
cmp
movsl
pop
sub
and
fcompl
xor
aam
jae
icebp
or
sub
out
ljmp
out
inc
jl
aas
sub
xor
data16
clc
ds
insl
lret
mov
adc
ret
mov
xchg
push
fstl
xchg
jne
mov
push
jmp
cltd
mov
and
loopne
add
sbb
fldt
adc
dec
fisubl
inc
ret
mov
jle
sub
xlat
insl
xor
sbb
aad
jge
dec
dec
pop
xchg
lods
lea
adc
insb
pop
add
lret
mov
mov
mov
ror
mov
je
xchg
jmp
cld
push
addr16
or
outsl
lds
xlat
push
mov
stc
int
dec
jnp
addb
mov
popa
mov
mov
pop
sub
cli
testb
or
and
in
fwait
sub
loopne
hlt
jne
push
loop
adc
shll
pusha
js
push
in
aam
fs
mov
mov
xor
jae
xor
repz
stc
adc
std
pop
pop
and
inc
leave
xchg
adc
mov
dec
inc
push
mov
sbb
movsb
ss
inc
hlt
dec
icebp
mov
test
cli
insl
sbb
mov
fs
fwait
je
gs
add
aam
movsb
add
sub
loopne
pop
repnz
mov
out
cltd
aaa
bound
push
movsl
dec
or
mov
mov
outsl
stc
jmp
push
lret
pushf
jmp
fbstp
aad
adc
xor
push
insb
or
dec
pop
insb
mov
movsl
mov
ljmp
fdivl
std
inc
jbe
push
mov
popf
call
push
call
lods
inc
sub
mov
xor
filds
xlat
cmp
dec
pusha
jne
xchg
out
mov
fldl
sarl
inc
mov
rolb
aas
jne
sbb
out
test
out
out
push
mov
xor
cmpsl
test
push
popf
out
lret
jle,pt
dec
jge
mov
xor
mov
dec
pop
inc
sbb
faddl
ret
lds
std
cmc
sarb
rcl
mov
or
ljmp
cmp
fwait
sbb
sbb
call
aad
jno
sbb
dec
popa
pusha
ss
mov
out
ret
add
jg
mov
cmp
mov
les
xlat
test
es
mov
jo
loopne
mov
sub
dec
inc
lds
stos
xor
out
mov
into
out
mov
xor
out
sbb
movsl
push
es
in
cmp
scas
pop
lds
lret
mov
mov
sbb
popa
and
insb
push
sbb
rcl
adc
in
adc
std
hlt
js
fcmovu
sub
pop
add
clc
inc
fnstsw
repnz
xchg
sbb
adc
mov
inc
outsl
iret
inc
in
mov
push
xchg
mov
scas
sarl
add
js
mov
push
ljmp
fstpl
pushf
xchg
mov
push
xchg
add
jg
sbb
sub
cwtl
pop
stc
lods
dec
push
xor
jbe
cmp
mov
loopne
inc
cmp
push
cs
jp
jl
scas
pop
mov
mov
popa
mov
jecxz
sbbb
dec
push
cli
jmp
mov
adc
xor
jbe
lea
sub
push
push
or
lds
out
xor
mov
dec
scas
sub
cld
or
sub
sti
pop
mov
rcl
mov
jp
mov
xchg
sbb
inc
dec
ror
cmp
xchg
add
jnp
fistl
leave
inc
xor
or
push
cs
mov
popf
in
mov
ss
add
mov
mov
cmp
mov
loop
or
ss
repz
movl
movsb
fmuls
test
shl
or
or
mov
cmp
and
ss
lahf
arpl
jl
jmp
inc
xor
cmpsl
out
xchg
cmp
sti
add
xchg
divb
pop
cli
adc
sub
notl
dec
lods
popl
ret
int3
jg
push
push
sub
sahf
mov
dec
fwait
lcall
xchg
jae
les
inc
jbe
pop
push
outsl
mov
rorb
cmp
mov
movsb
mov
sub
pusha
pop
dec
push
dec
sbb
or
sbb
or
mov
and
cmp
mov
pop
aam
sub
bound
insl
inc
js
movsl
sbb
leave
mov
dec
das
mov
stos
out
lods
adc
addr16
movsl
sbb
in
inc
popf
outsb
pop
push
pop
mov
jbe
push
sbb
daa
push
push
ret
sti
push
dec
test
mov
mov
and
cwtl
pop
mov
pop
xor
or
divb
fsts
popf
out
lret
stos
xchg
xor
pusha
les
jne
out
pop
cmp
xchg
xor
das
pop
mov
daa
inc
icebp
fs
dec
icebp
mov
and
add
jmp
and
pop
repnz
jnp
inc
inc
cmp
add
rolb
inc
clc
sbb
loopne
jg
inc
mov
loope
fsubrl
pop
ljmp
push
mov
dec
cmp
pop
xor
pop
dec
sbb
scas
cmpsb
xchg
imul
outsb
mov
in
bound
mov
xchg
aas
das
jno
addr16
insl
repnz
hlt
arpl
leave
imul
imul
mov
aas
sti
push
bound
fs
inc
in
jo
call
mov
mov
sbb
ja
mov
fistps
popa
jo
cltd
insl
pusha
inc
mov
mov
adc
cmp
xchg
add
add
cmpsl
aam
lods
and
add
je
fistps
popa
fldt
sub
adc
shll
xlat
mov
sub
dec
dec
out
das
push
push
or
int3
and
pushf
bound
mov
mov
or
lahf
xchg
out
xor
mov
les
xchg
les
add
mov
insb
jmp
ljmp
or
xor
cmc
cs
lods
pop
out
aas
jae
or
rcrl
fcoms
cmpsb
xchg
cltd
out
rclb
add
and
mov
fmuls
mov
int3
push
loop
incb
fdivrl
scas
add
outsb
fldenv
pop
jmp
push
xor
aad
imul
out
dec
add
testl
mov
mov
mov
hlt
inc
or
aas
mov
or
adc
fstpl
mov
xchg
jg
cwtl
jno
add
das
incl
out
pop
xor
sbb
test
xor
lahf
sti
push
mov
stos
jge
aam
test
sarl
arpl
jne
xchg
pop
cmp
lock
fs
test
pop
stos
rorb
xchg
jo
cltd
call
jecxz
jno
dec
jp
or
out
mov
js
add
pop
jle
rorb
imul
xor
ret
pop
fisttpll
adc
sbb
inc
pop
dec
lret
jnp
push
and
push
cmp
add
xor
adc
addr16
xchg
lods
movd
sbb
sarl
pop
imul
insl
out
xlat
mov
inc
xchg
les
outsl
pop
adc
or
cmp
adc
push
cli
inc
push
xorl
sbb
pop
nop
jle
mov
movsl
iret
pop
pushf
adc
lods
cmc
adc
rcl
xchg
js
inc
inc
lcall
inc
fistl
pop
sarl
popf
pop
jnp,pt
inc
mov
adc
jge
inc
push
lcall
out
lods
cmpsb
je
ljmp
jb
in
insb
lcall
lcall
xchg
add
add
std
fsts
aas
jnp
mov
arpl
or
sbb
addb
arpl
and
stc
pop
lock
sub
shll
jne
mov
xor
jp
adc
xchg
dec
sbb
fcmovu
cmpb
call
add
dec
cmc
pusha
cmp
jnp
xchg
dec
cmc
sti
loop
mov
add
cmp
mov
out
rcrl
mov
jge
jb
xlat
test
pop
cmpsl
push
jnp
repz
pop
movsl
dec
out
xchg
mov
xor
mov
lret
mov
mov
cmp
xchg
cmp
push
insl
pop
iret
pop
jnp
push
mov
int
jl
lret
out
push
aaa
sti
and
mov
arpl
push
mov
add
xor
add
dec
dec
sbb
out
aam
add
in
lret
out
dec
mov
dec
add
addr16
pop
cmp
mov
in
xor
adc
aas
sbb
stos
nop
lds
in
sub
lret
sub
jno
jns
sbb
sub
sub
pop
nop
jp
imul
lret
xabort
add
xor
jmp
or
inc
jns
push
cmp
push
jne
jg
xlat
sti
fwait
in
cmpb
mov
add
lret
xchg
leave
jne
stos
aaa
xchg
lahf
or
cmp
aas
dec
into
cmp
adc
push
popa
cmpps
std
leave
aad
xchg
dec
call
dec
lret
inc
mov
scas
cmp
xor
xchg
imul
psllw
cmp
idivb
sub
and
ret
push
orb
shll
inc
lds
lea
jmp
adc
sbb
ret
popa
mov
push
mov
add
addr16
fwait
inc
mov
aaa
xchg
mov
fldenv
dec
push
test
jns
lret
in
sbb
scas
pop
mov
sub
jns
sahf
pop
shlb
test
xchg
test
movsb
sub
or
xor
dec
rolb
sbb
cmpsb
outsl
adc
lock
js
in
inc
push
inc
sub
mov
mov
inc
or
test
test
lods
dec
mov
out
jb
in
pop
cmp
roll
mov
shll
mov
shrb
dec
adc
loope
stos
in
es
imul
cmpsb
mov
mov
dec
cmp
lret
out
mov
cmpsl
jge
cld
add
mov
jno
jae
mov
testl
daa
rcrl
push
adc
ja
add
lods
std
xor
in
cmp
mov
imul
out
mov
lret
dec
cmpb
jae
fistl
lret
xor
and
dec
mov
aam
jo
jp
shrb
inc
inc
bound
jmp
gs
mov
int
cwtl
imul
add
mov
repz
imull
test
push
insb
mov
jns
push
aaa
push
add
sbb
xchg
sub
and
adc
lods
int3
xorl
adc
cltd
jbe
loop
pop
cld
inc
ret
mov
repnz
out
or
adc
pop
and
inc
fcmovne
and
pop
sub
mov
jo
cmp
xor
movsl
mov
add
loope
arpl
and
xchg
cmp
mov
js
sbb
xchg
ds
lods
fldcw
push
std
add
data16
arpl
adc
add
loope
decb
aad
xchg
adc
das
mov
pop
jecxz
int
mov
pop
inc
popa
dec
clc
mov
mov
mov
repnz
xchg
cmp
inc
xchg
mov
pop
mov
sbbl
jp
pop
xchg
es
icebp
popf
data16
xchg
addr16
enter
mov
lods
mov
enter
sub
int
cmp
lret
insl
mov
push
test
enter
jae
mov
ljmp
int
push
rclb
addr16
mov
fwait
mov
into
popa
icebp
out
inc
mov
lcall
clc
jno
sub
stos
popf
mov
lcall
push
xchg
test
hlt
insb
cmp
mov
add
jnp
movsl
sbb
pop
mov
andl
push
dec
jnp
sbb
lods
mulps
cltd
aas
notb
mov
dec
jle
outsb
mov
ds
and
cmp
jne
xchg
js
outsb
dec
out
outsb
lret
mov
in
ljmp
subl
ss
sahf
xchg
cs
movsl
lret
dec
cld
inc
inc
dec
add
xor
insb
cmpb
pop
mov
dec
out
push
and
inc
push
rcll
pusha
push
shll
and
or
lea
shrl
xchg
pop
inc
pushf
sbb
xchg
lods
imul
shrb
movsb
or
insl
test
inc
mov
inc
mov
push
jmp
loopne
out
and
js
ret
pop
mov
sar
rorb
roll
xchg
inc
and
push
fsubs
push
jb
repnz
dec
mov
pop
flds
mov
jae
movsl
lock
arpl
in
int
orb
dec
pop
movsb
leave
movd
push
jl
js
mov
mul
lods
icebp
jns
fiadds
js
jnp
push
mov
and
cli
push
cs
je
mov
mov
and
ret
jb
pop
xchg
sbb
jp
je
inc
es
inc
pop
out
xor
pop
in
mov
ret
fs
dec
and
popa
jb
and
arpl
cmp
cltd
mov
add
jbe
or
mul
sub
pop
inc
loop
sub
push
int
std
std
sbb
in
out
loope
fadds
repz
pop
push
mov
cltd
ss
mov
popl
outsb
dec
xchg
xor
fidivrs
mov
adc
mov
mov
pop
and
pusha
stc
pop
icebp
pop
sub
cmp
adc
lea
sbb
pop
jnp
leave
pand
pusha
jb
adc
xor
add
mov
push
ljmp
cmp
cld
sbb
sbb
rol
test
cmp
mov
ss
test
lahf
stc
fs
mov
or
les
test
enter
pusha
adc
push
loope
loopne
das
ljmp
adc
mov
lret
ret
sbb
clc
inc
xchg
ja
fcmovu
mov
sbb
pop
jno
aam
ja
mov
inc
lods
xchg
push
dec
adc
movsb
or
cmpsb
push
ja
insl
aaa
es
aas
pop
add
movsl
fsubs
bound
adc
cmp
mov
dec
addr16
push
gs
inc
inc
cwtl
pop
mov
clc
mov
and
lret
insl
bound
int3
push
imul
pop
dec
outsb
inc
cld
jecxz
imul
int
inc
xchg
mov
sub
pop
pop
xor
stos
sti
xor
dec
push
push
xor
imul
mov
loopne
stc
fwait
fs
fidivl
addr16
icebp
and
sbb
bound
cmp
add
and
aad
xchg
clc
out
pop
popa
pop
xorb
ret
pop
pop
iret
jno
rolb
push
andb
pop
or
cmpsl
jae
add
or
out
insl
sbb
or
stc
push
adc
scas
mov
pusha
inc
cmc
sbb
in
scas
cmpsb
in
jno
lret
mov
loop
dec
adc
lods
cltd
imul
dec
xchg
mov
adcb
push
js
mov
xchg
mov
cld
aad
dec
dec
or
mov
cmp
adc
xor
filds
jae
adc
adc
cli
movsl
je
cmp
out
ljmp
cld
adc
adc
and
mov
and
int
dec
arpl
jmp
fwait
add
inc
or
and
adc
jmp
incb
mov
push
pop
sbb
fbstp
and
dec
aam
cmp
cvtpi2ps
xchg
adc
mov
popf
loope
inc
leave
js
mov
mov
fstpl
shl
fistpll
fidivrl
xor
jmp
fwait
cmpsl
add
and
mov
scas
lret
pop
pop
aas
jmp
xchg
cli
push
xor
int3
clc
hlt
adc
rcrl
inc
sahf
xor
ja
test
shll
mov
mov
mov
insl
mov
inc
pop
or
cmc
or
imul
out
aad
jae
jno
push
jmp
inc
sahf
dec
mov
dec
xor
mov
fadds
cmp
aaa
repnz
adc
sbb
fisubrs
imul
insb
cmc
dec
pop
mov
dec
xor
cmpsb
jecxz
lea
mov
inc
or
loope
push
cmp
xor
enter
pop
loopne
aad
xchg
sbb
sbb
mov
xchg
jns
popa
push
jg
pop
jnp
jge
or
lock
mov
add
pop
or
xor
mov
out
insl
sub
iret
movsb
dec
pop
ss
push
rolb
call
pop
jns
sbb
daa
fwait
sbb
push
jae
cli
arpl
stos
dec
xor
ja
mov
mov
sub
pushf
inc
subl
mov
icebp
push
and
fnsave
loope
ret
add
addb
stos
xchg
mov
and
push
outsl
cld
sbb
movsl
add
mov
mov
shrb
aad
test
sahf
ficomps
push
mov
mov
cmp
mov
or
cmp
push
test
pusha
nop
test
out
xchg
pop
jp
mov
inc
inc
loope
setns
lods
mov
out
pop
std
mov
dec
out
inc
lea
inc
es
jge
push
or
jae
arpl
jge
insl
mov
mov
lods
repz
int
std
ret
in
xor
add
push
jge
insl
mov
mov
lods
repz
int
std
ret
in
xor
and
adc
bound
push
jns
insl
mov
mov
movsb
repz
int
hlt
ret
or
stc
and
adc
add
pop
arpl
std
ret
lods
dec
bound
mov
imul
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
lea
movb
push
movb
call
mov
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
push
call
call
call
mov
call
mov
xor
cmp
setne
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movb
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
int3
insb
cld
jl
mov
cmp
dec
aad
lods
int3
imul
jl
sbb
cmpl
int3
insl
cld
jl
or
sbb
sub
cmp
int3
push
fmull
cld
insb
mov
push
lods
cmp
sub
lds
in
hlt
or
sbb
sub
cmp
int3
pop
fsubrl
add
cmc
js
dec
roll
nop
pop
mov
xchg
xlat
pop
cmovae
filds
jecxz
lods
outsl
and
xchg
ret
aaa
push
sbb
roll
cmc
cmp
jg
inc
dec
push
mov
sub
xchg
jno
arpl
int3
inc
aam
inc
pop
cmpsl
arpl
sbb
cmpsl
cmpsl
pop
mov
add
das
cmp
imul
pushf
xor
mov
adc
insb
and
mov
mov
cwtl
in
adc
sub
cmp
movsb
mov
cld
aad
push
hlt
sbb
outsl
inc
test
out
stc
data16
push
aam
aam
cli
cld
xor
es
xorl
xor
in
lods
ds
fsubrl
in
or
sbb
sub
cmp
int3
pop
fcoml
cld
jne
add
adc
es
mov
dec
sahf
jns
imul
leave
movsb
xor
cmpl
clc
jns
push
rcll
adc
xor
imul
sub
out
or
pop
mov
int3
sets
scas
sbb
sub
cmp
int3
pop
fmull
cld
insb
mov
or
cmp
sub
fcompl
cld
jl
or
sbb
sub
cmp
int3
pop
fmull
cld
insb
mov
or
cmp
sub
fcompl
loope
cs
jg
ds
enter
jbe
pop
out
cmp
or
iret
aad
cmpsl
sbb
cmpsl
jp
nop
mov
push
mov
aas
cmpsb
movsl
inc
data16
push
loope
or
push
and
cmp
imul
pop
and
sub
adc
pop
push
adc
sti
aad
pop
sbb
mov
repnz
icebp
scas
dec
push
dec
pop
loop
inc
insb
jne
xchg
cwtl
pop
xchg
scas
cmpsl
jg
bound
mov
jns
xchg
and
loopne
aam
subl
jae
fildl
fbstp
adc
xchg
shrb
sub
cmp
pushl
loope
dec
cs
fucom
cmpsl
pop
mov
hlt
sub
mov
push
popa
inc
pusha
add
testl
inc
pop
or
dec
imul
out
jbe
dec
notb
out
mov
push
add
scas
ret
adc
or
mov
pop
dec
inc
movsb
cmp
les
test
daa
lods
cmp
int3
icebp
xchg
dec
je
xchg
int
jp
shll
mov
sbb
jmp
aam
jle
je
mov
add
test
loopne
decb
fdivrp
mov
xor
or
imul
stos
cmpsb
mov
push
and
adc
jb
push
jle
movsb
lret
movsl
adc
dec
mov
ret
mov
or
dec
push
sbb
sub
stc
out
sbb
cmpsl
cs
mov
xor
pop
adc
xor
mov
ss
lods
sbb
fadds
push
pop
idivl
lret
sub
mov
hlt
dec
push
in
sarb
inc
or
cmp
or
je
jno
push
mov
inc
sbbb
imul
in
ljmp
inc
movsl
icebp
push
inc
cltd
mov
jno
and
shrb
and
xchg
cli
insl
testb
mov
sbb
adc
jecxz
imul
and
xchg
push
clc
jb
mov
mov
jbe
repz
add
arpl
repnz
ret
cmp
jmp
jp
in
movsb
xchg
loope
jmp
lods
pusha
pop
mov
sub
sub
out
sub
add
in
mov
int3
dec
and
xchg
mov
sbb
mov
add
cmp
fdivrs
iret
mov
stc
push
mov
xchg
enter
jl
mov
decl
data16
cmc
push
sub
mov
loopne
mov
hlt
jno
shlb
mov
out
jecxz
imul
mov
cmp
cmp
push
or
rorl
or
lahf
shrb
jmp
mulb
sahf
mov
movsb
adc
out
fistpl
mov
sub
sbb
mov
mov
sub
add
js
dec
fidivl
push
cs
push
flds
ss
out
cmp
xchg
jle
dec
mov
push
iret
and
xchg
cmp
sbb
addr16
cli
or
push
loope
jo
sbb
ffreep
cmpsb
roll
sbb
mov
cs
out
or
sub
idivl
call
cmp
ucomiss
dec
push
popf
add
inc
add
jge
pop
pop
mov
in
mov
cmp
pop
jp
dec
ds
sub
ds
mov
fsubrl
std
pop
mov
cmpsb
gs
js
push
aam
xor
jp
push
lea
inc
insb
scas
mov
cli
scas
rcrl
add
inc
or
mov
test
adc
mov
lret
mov
cmp
setge
or
ljmp
mov
xchg
lock
jne
and
mov
movsb
mov
fisubrs
or
or
pop
lock
int3
pop
inc
pushf
shrb
mov
test
lods
les
inc
dec
roll
ficomps
dec
dec
imul
mov
ret
inc
mov
or
movsb
mov
loopne
cmp
sub
adc
cmc
xchg
sbb
jg
or
adc
bound
jb
xchg
shrl
mov
add
gs
nop
xchg
lea
into
jns
jae
inc
ljmp
and
cmp
mov
mov
sub
mov
add
mov
call
sub
xchg
mov
data16
push
fsubs
mov
and
pop
insb
sbb
sbb
sbb
xor
cmp
pusha
movsb
shl
cmp
call
fsts
or
mov
xchg
push
cmp
dec
shll
pushl
inc
xor
outsl
xor
addb
mov
cld
scas
mov
push
movsb
or
adc
cmpb
out
pushf
pop
lret
lods
rorb
mov
lds
adc
icebp
or
cmpsb
clc
xchg
sub
sub
fimuls
push
xlat
xchg
popf
xchg
stos
cmpsl
inc
out
icebp
lea
mov
push
in
or
gs
jg
sub
popf
lahf
in
jno
lahf
and
jno
in
scas
jecxz
lahf
hlt
push
pop
scas
stc
loopne
cs
add
iret
and
xor
pop
lret
cmpsb
mov
gs
testl
xchg
sti
pop
lcall
ja
outsb
outsb
mov
dec
jbe
enter
popa
sbb
sub
mov
inc
mov
mov
pop
out
jmp
or
sub
arpl
sahf
gs
outsl
stc
push
outsl
lods
mov
into
push
sbb
jbe
mov
pushf
ljmp
shr
ljmp
bound
jmp
push
cmp
pop
lds
stos
jmp
cmc
fmulp
mov
pop
mov
jnp
inc
imul
fwait
into
jmp
fadd
jmp
adc
sti
fisubs
pop
test
insb
mov
and
movsb
cmp
cmp
pop
out
xor
dec
xor
hlt
pop
int3
xor
mov
fwait
ret
scas
es
in
pop
sbb
ret
add
shrl
cmp
add
push
jp
sub
dec
dec
xor
sub
jns
sar
sbb
jle
fcoml
lock
pop
ss
sbb
gs
ss
mov
test
enter
lods
xor
xorb
dec
in
jns
orb
xor
shll
cmp
mov
mov
shr
outsl
jae
push
adc
and
xor
cmp
call
jle
cmp
jb
dec
stos
clc
test
push
shlb
lods
leave
add
shlb
mov
aad
push
fstpt
xor
pop
stos
int3
aas
mov
es
lods
mov
testb
jno
mov
leave
loopne
jle
aad
mov
inc
sub
xchg
fsts
dec
std
outsb
mov
pop
sbb
cmp
sbb
jmp
pushf
adc
and
jns
insb
jl
rcl
sbb
fstpt
push
fiadds
rorl
jge
fldt
outsb
cmp
movsb
sub
cmpsl
adc
pop
cwtl
push
int
jmp
mov
ret
mov
jg
out
loope
cmc
pop
sub
arpl
mov
or
mov
fisubl
sub
push
sbb
fimull
xchg
pop
mov
inc
insb
pop
ljmp
testl
aad
test
dec
outsb
mov
xchg
iret
inc
pop
dec
movsb
icebp
idivl
sub
and
sbb
mov
aaa
inc
in
adc
adc
repnz
movsb
sahf
xor
add
arpl
and
into
jo
mov
lret
jae
les
inc
lds
jbe
ja
daa
adc
sti
jg
sbb
scas
dec
pushf
cs
andb
dec
idivb
inc
fwait
push
pop
cmp
mov
adc
fadds
sbb
js
pop
fsts
or
repz
and
sub
pop
sub
and
mov
inc
sbb
mov
pusha
fs
sub
and
dec
pop
enter
mov
jmp
movsb
sbb
cs
push
ret
test
mov
fidivs
pop
cmp
adc
or
fsubs
cmp
inc
ret
lret
lds
imul
jnp
dec
jno
ret
test
pop
xor
or
xlat
movsl
and
pop
lret
jo
inc
leave
ret
fistl
mov
dec
les
mov
cmp
push
scas
popf
js
sub
sti
loopne
ret
lock
out
cmp
roll
loop
add
sub
push
pusha
mov
add
pop
mov
xlat
jno
mov
mov
push
lret
push
lret
push
sbb
push
and
mov
incb
pop
dec
test
test
dec
sbb
and
sti
cmp
out
mov
adc
mov
add
test
int3
fistps
mov
cli
cmp
push
fs
and
int3
sub
mov
add
jnp
dec
outsl
xchg
and
lcall
mov
outsl
xchg
in
dec
inc
std
fbstp
in
pop
ret
xchg
fdivl
xchg
sbb
adc
imul
mov
jnp
xchg
and
xlat
mov
sti
push
add
icebp
scas
pop
fistl
dec
pop
dec
call
fstl
mov
jp
mov
ss
push
out
mov
jge
mov
adc
xadd
aam
subb
ljmp
insb
xor
xchg
sub
aaa
and
mov
cmpsl
mov
mov
fdivs
gs
jb
pop
ss
mov
loope
js
and
or
cmpsb
mov
out
adc
test
cmp
xchg
mov
outsl
jne
loopne
hlt
jecxz
and
adc
lahf
adc
iret
icebp
mov
or
cmp
add
mov
pop
pop
cld
mov
cltd
lret
pop
sub
stc
push
add
jns
loop
test
or
xor
aad
mov
cmp
mov
dec
push
lahf
cmp
scas
ss
addl
popa
and
dec
imul
add
fcmovnu
fistpl
push
push
lret
in
mov
clc
dec
iret
inc
jl
xchg
push
dec
in
mov
dec
js
pop
dec
and
push
jp
jp
cli
mov
pop
rcll
xor
push
enter
cld
cmp
sbb
mov
sub
mov
outsb
stos
add
push
cltd
mov
push
jne
xchg
js
pop
inc
sub
fcoms
mov
sub
lods
or
inc
cmp
mov
sbb
pop
loope
je
cmp
xor
sub
ljmp
or
mov
fcomps
add
sub
sbb
jae
stos
and
fnsave
iret
mov
and
mov
jmp
movsb
ret
dec
jae
mov
xor
mov
or
mov
adc
int3
pop
mul
lahf
lods
inc
in
mov
adc
ja
mov
push
pop
and
out
ror
jbe
mul
and
ja
xor
shl
xchg
jge
cwtl
and
push
mov
push
jecxz
orl
insl
rdtsc
cmpsb
push
push
fidivl
sbb
jecxz
movsb
leave
pop
add
push
rcrl
icebp
out
pop
fwait
mov
out
out
out
iret
ja
cmp
or
and
sbb
dec
outsb
in
jbe
fdivrl
adc
lods
testl
jns
into
out
insl
push
or
stos
mov
push
shrl
xchg
sub
xchg
cmpsb
add
negb
in
inc
adc
or
and
fadds
mov
loopne
xor
rcll
jo
mov
mov
movsl
jg
push
adc
mov
sub
and
dec
neg
iret
dec
xchg
mov
bound
dec
dec
mov
sub
incl
pop
iret
or
jge
jae
orb
cld
push
dec
icebp
xor
jg
in
mov
ljmp
mov
adc
cwtl
lcall
in
sub
pop
pop
enter
popa
and
cwtl
cmp
pop
add
add
sar
roll
dec
fimull
mov
xor
sbb
inc
data16
addr16
fdiv
jbe
pop
insl
sbb
je
mov
dec
lret
cmp
pop
in
and
scas
je
xchg
dec
movsl
shl
ja
sbb
fs
jp
popf
jg
or
es
push
out
insb
cmp
repnz
adc
dec
add
adc
inc
sub
jle
mov
call
xor
outsl
dec
adc
cmpsb
mov
adc
ret
movsb
sub
jb
dec
cmp
xor
jns
jle
push
sbb
mov
std
mov
jbe
outsb
in
pusha
loopne
pop
popf
sub
cmp
insl
mov
leave
add
outsl
add
jecxz
dec
pop
inc
ret
and
xor
adc
loop
cli
les
sbb
int3
sarb
push
sbb
sub
int3
lret
inc
dec
mov
sub
push
push
and
jl
data16
loop
scas
js
sbb
mov
or
xor
adc
cld
out
pop
aaa
cmp
inc
xor
jbe
shrl
pusha
adcb
incl
ja
out
pop
popa
loop
enter
xchg
fistps
loope
add
mov
sub
dec
and
ret
popf
mov
cmp
jne
lock
push
clc
sbb
jl
jbe
and
fists
outsb
cs
out
nop
xchg
inc
aam
push
and
cmp
add
jbe
sub
mov
xor
fdivs
xor
mov
iret
mov
mov
and
int3
test
or
pushw
enter
push
es
lret
sbbb
mov
movsb
lods
mov
push
and
or
xorl
xchg
cli
and
movsl
adc
jp
outsb
dec
sbb
int3
jle
and
mov
ja
mov
arpl
stos
push
mov
rclb
lahf
aaa
movsb
test
push
popf
enter
dec
sub
aas
inc
ja
inc
xor
inc
lcall
sbb
lret
or
push
test
popf
ljmp
incb
sbb
inc
cmc
fwait
stos
lea
cld
jo
jae
push
pop
xchg
and
lds
shr
ja
pop
andb
cmpsl
push
lahf
add
inc
xor
fs
jmp
mov
add
xchg
cli
hlt
sbb
int3
pop
sbb
sub
ja
xchg
cs
pop
test
inc
mov
lea
xor
les
enter
mov
push
imulb
out
and
cmpsb
pop
in
xor
test
cmp
mov
dec
test
mov
lods
dec
pop
or
ret
call
scas
mov
mov
inc
sub
icebp
mov
fmuls
pop
leave
lahf
mov
mov
ja
add
cltd
addr16
hlt
mov
popf
sbb
mov
jg
inc
imul
idivl
jge
cmc
sub
fnclex
lock
push
ljmp
sbb
jb
push
or
jmp
nop
pop
sbb
push
sbb
adc
xchg
pop
cwtl
dec
loope
xlat
mov
sbb
daa
testl
das
jmp
mov
or
adc
rcrb
movsb
inc
stos
mov
iret
mov
clc
loopne
or
pop
sbb
jg
dec
stos
daa
fisubrs
repz
sub
xchg
and
loope
orl
mov
imul
xchg
dec
inc
in
jb
addr16
mov
inc
iret
lret
xchg
push
add
ret
cmp
iret
cwtl
aaa
loopne
mov
insl
xchg
js
inc
ds
and
lret
or
std
xchg
insl
repnz
mov
xor
aad
sbb
decb
adc
stos
add
call
cli
imul
popa
cmp
test
mul
iret
in
xchg
mov
sbb
push
aaa
aam
enter
push
dec
pop
loopne
cmp
sahf
leave
rolb
add
mov
xchg
sahf
loope
sub
jg
or
and
adc
add
inc
and
fstps
mov
jecxz
mov
je
pop
stc
jb
test
nop
mov
push
push
mov
leave
dec
xor
mov
stos
xchg
jge
pop
cmp
pusha
outsb
fwait
arpl
testl
jle
std
aad
mov
lods
repnz
sarb
es
insb
insl
lcall
mov
dec
std
sbb
pushl
fdivs
push
dec
cmp
inc
fsubrl
mov
xlat
dec
ds
mov
aas
xchg
push
pop
out
arpl
xor
sbb
lret
or
das
pop
and
jge
xor
or
push
or
dec
jo
int
push
stos
xchg
ret
cmp
and
add
outsl
xlat
add
push
mov
sub
mov
outsl
insb
sbb
jp
je
es
stos
movsb
mov
inc
mov
aad
and
inc
mov
sbb
repz
out
inc
mov
cmp
adc
cmp
inc
fbld
pop
or
loopne
repz
pop
ficompl
outsl
fisubs
mov
inc
fs
es
dec
mov
repz
out
pop
xor
xchg
outsl
pop
sbb
insb
jb
mov
adc
rorl
xchg
xor
mov
jmp
mov
loopne
jno
pop
imul
jecxz
idivb
jne
in
fcompl
scas
inc
mov
pop
xor
test
mov
icebp
adc
push
xor
push
into
fstp
jl
xchg
ljmp
xlat
stos
cmp
nop
outsl
loop
rorl
dec
sub
mov
pop
mov
pop
sub
movsb
ljmp
cs
fadds
loop
and
ljmp
data16
and
and
orl
bound
cs
add
cmp
test
sbb
setge
jecxz
add
push
dec
push
inc
sahf
lahf
mov
int
popf
and
insb
pop
mov
cld
mov
sub
push
fmul
mov
ret
adc
fdivs
sti
pop
mov
sbb
outsl
sbb
mov
mov
cmpsl
or
frstor
loope
imul
outsb
movsl
sub
scas
and
jecxz
mov
jmp
pop
or
mov
mov
sub
das
ret
enter
lods
aaa
add
cmpsl
mov
push
into
add
stos
mov
dec
loopne
push
inc
inc
aad
jno
fldcw
cmpb
sbb
jg
int
test
pop
push
stos
imul
int
ret
mul
loopne
pop
ljmp
rol
sbb
das
test
ds
dec
imul
leave
mov
clc
out
pop
sbb
push
test
and
mov
jge
push
mov
inc
or
and
mov
outsb
repz
cmc
jns
or
cmp
push
add
test
mov
stos
lret
leave
ret
push
pusha
jl
jle
bound
pop
repnz
or
leave
mov
cwtl
pop
jmp
mov
or
push
push
iret
sbb
mov
mov
sahf
sti
add
mov
lret
adc
and
sbb
sbb
das
or
inc
data16
pop
dec
pusha
or
inc
jmp
cmp
and
sahf
inc
sbb
imul
das
sahf
inc
fsts
sub
aas
mov
fcompl
fisubrs
movsb
stos
gs
sbb
outsl
mov
mov
mov
enter
push
add
jbe
jecxz
fdivrs
mov
jb
cmp
ja
push
mulb
jnp
test
cld
mov
cld
xor
fsts
movsl
or
mov
sub
xor
mov
aas
je
dec
in
add
rcr
dec
pop
hlt
xor
outsb
inc
jl
lea
cmp
mov
imulb
xor
xorb
out
pop
std
mov
sti
sbb
sahf
and
xor
xlat
push
or
jb
and
cmc
sbb
loope
rolb
sarb
lret
sbb
cltd
jge
sub
in
fdivrl
rclb
sub
je
fldcw
popf
fstl
cmc
cmp
sbb
into
push
imul
js
jle
mov
clc
stos
lcall
add
outsl
jge
jg
and
pop
arpl
xchg
jmp
mov
lods
xor
sbb
jl
dec
cmp
xor
mov
inc
add
mov
pop
push
xchg
push
scas
shr
lret
push
xor
shlb
dec
loopne
cld
xor
sub
int
enter
pop
js
sub
sub
push
pop
push
lods
xlat
inc
loop
subl
and
jb
and
dec
jae
loope
jmp
lret
sub
sbb
sbb
fdivrl
mov
pushf
sbb
sub
cmp
int3
pop
fmull
cld
insb
mov
or
cmp
sub
fcompl
cld
jl
or
sbb
sub
cmp
int3
pop
fmull
cld
insb
mov
or
cmp
sub
fcompl
cld
jl
or
sbb
sub
cmp
int3
pop
fmull
cld
push
lods
cmp
enter
in
or
sbb
sub
cmp
int3
pop
fsub
inc
jl
sbb
xchg
adc
push
inc
inc
push
mov
fisttpl
lds
jnp
sbb
dec
jp
push
pop
or
mov
fisttpl
stos
ficompl
sub
jnp
dec
jp
push
pop
sbb
mov
ret
mov
cli
mov
lret
cwtl
sub
cs
adc
inc
adc
and
repz
stos
sub
clc
inc
mov
add
lock
pop
pop
sbb
xlat
out
push
xor
pop
aaa
shlb
outsb
push
rcll
cmp
int3
sti
add
xchg
dec
dec
test
mov
inc
add
insb
push
test
scas
movsb
in
sti
stos
cmpsl
out
and
cmp
inc
stos
in
pusha
into
fisubrl
jecxz
aas
in
or
stos
stos
jmp
fisttpl
sti
cli
fwait
cli
imul
je
sub
xchg
xchg
mov
add
pop
xchg
dec
popa
inc
ret
fimuls
lock
sub
loope
fcmovne
lret
mov
not
imul
orl
push
hlt
inc
hlt
xchg
or
fldt
add
inc
push
push
inc
jg
dec
dec
pop
inc
push
and
in
stos
cld
lcall
stos
fiaddl
sub
inc
or
and
pop
sbb
cld
sahf
ret
jmp
lret
mov
out
adc
adc
data16
push
add
sbb
mov
jmp
stos
out
into
mov
dec
out
add
or
dec
or
dec
ds
sub
outsb
sarl
mov
ficompl
sub
pop
or
cmp
pop
sbb
mov
fisttpl
stos
ficompl
sub
pop
or
cmp
pop
sbb
mov
cli
scas
fsubs
xchg
scas
xchg
fdivp
mov
ljmp
mov
loopne
mov
clc
ss
pop
shlb
ficomps
stc
jns
daa
mov
test
mov
aaa
orb
and
sbb
xor
arpl
ss
cmc
data16
dec
movsl
mov
cmp
pop
sub
loopne
or
mov
sti
dec
int3
jne
clc
std
add
push
out
lea
movsb
imul
jge
loop
scas
imul
xlat
aaa
sub
mov
lret
or
stos
or
mov
mov
jle
aad
jp
aaa
out
xchg
nop
pop
clc
jne
fwait
and
subl
push
subl
aad
inc
orl
negl
rclb
xor
push
fwait
jb
mov
iret
lret
xchg
mov
clc
push
sub
clc
add
fisubrs
push
jp
mov
push
pop
mov
pop
mov
dec
cmp
stos
dec
mov
sub
mov
adc
fisubrs
jg
mov
add
add
repz
fsts
adc
cmp
lds
mov
cltd
test
dec
aas
jecxz
fildll
imul
mov
cli
cmp
push
daa
xchg
push
rcrl
mov
add
cmp
mov
and
cli
adc
stos
cmp
mov
fwait
dec
xor
add
xor
or
cwtl
imul
in
loop
xorb
push
test
jne
sbb
mov
lock
lcall
add
push
mov
sbbb
fs
scas
test
pop
clc
les
inc
or
int
out
or
mov
mov
fidivrl
add
pusha
sub
ficoms
imul
movsb
push
js
loop
je
mov
xchg
xchg
mov
incb
mov
sub
std
add
or
int3
sub
cmc
loope
and
cmp
mov
dec
xlat
cmp
aaa
sub
xchg
push
pushf
imul
jl
xlat
jmp
pop
push
bsr
jmp
pusha
mov
cmc
mov
sub
adc
aaa
das
cmc
ret
shl
push
mov
popf
add
icebp
stos
mov
cmp
test
add
les
inc
lahf
int3
outsl
inc
jge
stos
sahf
fiaddl
mov
movsl
test
push
rep
fdivr
inc
add
imul
in
popf
rclb
cld
add
mov
lahf
mov
mov
lock
sub
lock
xlat
mov
or
xor
xor
out
sbb
or
mov
mov
mov
adc
pop
test
ret
pavgb
mov
lret
push
jae
xchg
cld
out
and
std
jne
sbb
in
scas
lret
inc
and
xlat
sahf
xor
mov
xchg
repnz
or
jl
hlt
int
es
jae
jno
and
or
push
sub
icebp
or
fldenv
out
das
das
sub
jmp
mov
addr16
cmp
push
lret
int3
xchg
ljmp
rcrb
xchg
sub
sahf
fcmovne
adc
xchg
bound
sbb
clc
int
stc
add
lahf
pop
adc
sub
jnp
inc
jge
stos
ss
adc
pop
sbb
jbe
xchg
adc
xor
inc
shl
lods
xchg
push
cmp
int3
add
add
popa
movsb
xor
nop
icebp
cltd
or
push
loop
mov
mov
mov
jae
xlat
adc
mov
scas
out
loope
jbe
aam
xor
aaa
pop
ds
fwait
lahf
cmp
ja
mov
sbb
pop
mov
ja
out
push
leave
lods
xchg
cltd
shr
push
sti
or
mov
pop
stos
dec
loope
mov
pop
mov
push
stos
repz
inc
ljmp
loop
fisubs
dec
popa
sbb
cwtl
sbb
cmpsb
icebp
or
mov
sbb
fidivrl
mov
psrlw
sbb
and
ret
mov
cwtl
mov
cld
push
outsl
lods
pusha
jno
dec
les
cmp
frstor
stos
jnp
inc
and
jnp
orl
cmp
jl
jae
xchg
pop
xor
mov
dec
xchg
jnp
pop
xchg
lahf
adc
xor
jle
es
jmp
cmpsb
lods
mov
mov
jnp
push
mov
jge
push
fisubrs
adc
test
loope
and
leave
push
rclb
daa
pop
cmc
pop
mov
adc
pusha
rorb
clc
push
das
mulb
xor
push
outsl
push
jmp
xchg
and
mov
mov
jnp
inc
mov
jle
popf
xchg
push
scas
hlt
sub
imul
mov
sahf
lret
and
push
and
dec
mov
pusha
rcrb
addr16
and
fs
in
pop
mov
fdivrl
sti
daa
inc
push
jo
mov
jae
mov
or
pop
xchg
ret
mov
cmp
sbb
call
ljmp
add
dec
push
cmp
daa
mov
sbb
jle
int
out
imul
loop
idivl
lods
jnp
sub
lret
add
cmpsl
cmp
push
clc
fisubl
sub
xor
inc
mov
sub
out
pop
imul
pop
mov
pop
mov
fdivrl
mov
imul
mov
xor
fcoms
xor
repz
or
xchg
push
jns
or
dec
xchg
push
or
ljmp
adcl
pushf
and
pusha
mov
out
js
das
ds
ret
pop
pop
sub
stc
dec
stc
fwait
pop
arpl
sub
pop
mov
xor
sarb
lods
mov
sbb
mov
out
and
imul
mov
adc
pop
sub
scas
stc
shr
pop
xchg
cwtl
int3
or
xor
lock
mov
jmp
lods
inc
mov
repz
sbb
adc
push
outsl
or
icebp
lock
sahf
push
and
call
hlt
cltd
call
mov
dec
out
mov
xor
outsl
xor
stos
shll
xor
mov
inc
and
inc
xchg
jle
inc
in
pop
mov
adc
lret
adc
or
sub
jge
pusha
xchg
pop
jp
xchg
dec
add
lds
mov
dec
ljmp
mov
sbb
jle
sub
repnz
mov
aam
xchg
pop
out
fldl
mov
cmp
mov
mov
pop
mov
mov
xchg
push
or
jg
imul
sti
ss
cmpsb
lret
das
jb
sti
push
cmpsb
loop
cmp
ret
movsb
mov
xchg
lock
fidivrs
icebp
dec
sub
inc
cli
jecxz
sub
sub
xor
lods
push
mov
mov
sahf
or
xor
mov
in
add
jae
cmp
push
mov
call
xor
and
arpl
and
cmp
inc
rcrl
loope
sub
xchg
push
xchg
loop
sbb
lods
push
pop
xor
and
or
pop
dec
loope
sbb
jnp
or
jg
push
call
pop
pushf
adc
popa
imul
dec
cmpl
stos
push
ret
mov
in
sbb
adc
jle
dec
or
insl
test
inc
pop
xor
cs
lahf
js
lods
push
ds
mov
jae
jge
inc
adc
insl
xlat
repz
hlt
scas
xchg
cmpsb
or
nop
sbb
jnp
xchg
call
pop
out
sbb
cwtl
dec
sbb
insl
movsb
cwtl
rcl
in
sub
stos
cmp
stos
add
stc
clc
or
sahf
inc
mov
repnz
in
mov
notl
mov
iret
notb
jno
punpcklbw
outsl
inc
and
loop
push
call
shl
or
adc
enter
movsl
xor
lret
mov
jmp
pop
sarb
cmp
outsb
jl
or
jnp
pusha
aas
cmp
xchg
push
hlt
xor
mov
cmc
mov
ljmp
cmpsb
pop
mov
loop
lock
lods
fsubl
dec
lods
ja
cwtl
fldenv
jne
bound
or
push
or
mov
clc
adc
and
gs
test
xchg
lret
sub
and
cmp
mulb
pop
in
int3
xor
sbb
stos
dec
insl
pop
push
mov
cmpsl
les
cltd
sub
test
or
loop
loopne
xor
fwait
sbb
decb
mov
cmp
xor
push
imul
xor
sbb
xor
cltd
cmp
cmp
dec
iret
sub
cmpsl
jg
hlt
insl
cltd
lds
xor
addr16
mov
clc
fxam
pushf
or
mov
cmp
repz
cmp
sbbb
stos
push
cmp
sub
xor
push
je
xchg
sti
test
jo
jbe
dec
and
mov
lret
ret
mov
hlt
add
lcall
aam
and
mov
or
out
inc
icebp
aas
sbb
push
daa
jb
bound
cmp
push
mov
xchg
in
mov
mov
jne
adc
dec
test
push
xor
fdivs
jo
ss
pop
add
jp
in
les
sbb
and
in
je
roll
cmp
fdivp
mov
movsb
push
mov
cli
fnstsw
jo
push
push
fcomps
or
mov
push
cltd
xchg
aad
rcrl
xor
cmp
xchg
clc
mov
pop
ret
xor
mov
or
xchg
and
sbb
dec
ljmp
or
mov
scas
call
and
call
inc
mov
cltd
xchg
mov
stos
clc
ljmp
shll
mov
sub
mov
lds
jge
movsl
jne
jns
xchg
hlt
ret
mov
pop
pusha
mov
pusha
call
in
hlt
sbb
sbb
cmp
jle
add
adc
mov
sub
jno
jno
jp
sub
pop
jns
xchg
dec
dec
std
mov
jmp
or
sub
dec
mov
popa
int
and
push
jle
daa
test
xchg
shll
aas
sbb
mov
xor
adc
push
mov
repz
xor
in
xor
mov
ret
loope
into
sbb
jns
mov
sub
or
mov
push
push
adc
pop
sub
push
and
pop
aas
jo
mov
and
in
push
aaa
faddl
movsb
out
imul
dec
xchg
xchg
fldl
xor
xchg
shl
inc
sahf
in
scas
js
fs
mov
fcomp
or
sub
add
xor
xchg
hlt
inc
xchg
pop
in
inc
sbbb
call
int
push
xchg
loope
inc
movsb
int3
sbb
repz
outsb
xchg
test
adc
les
lret
cmp
sahf
in
stc
xchg
adc
outsl
dec
cmpsb
cmpsb
jne
bound
mov
xchg
jae
js
xchg
add
lods
cltd
insl
bound
dec
testl
inc
fnstenv
insl
xchg
aam
add
ljmp
push
divl
adc
mov
sbb
xchg
push
movsl
sahf
push
xchg
mov
into
jl
sub
cmp
imul
lock
mov
fdiv
test
test
out
js
insb
cmc
push
in
lods
push
sub
mov
mov
gs
mov
outsb
jmp
aam
cmp
push
fldl
outsb
jno
shl
push
pop
lods
test
dec
inc
adc
push
jecxz
or
jl
mov
inc
testb
pop
mov
jle
add
fidivrl
add
mov
or
adc
push
pushf
bound
sbb
ljmp
mov
xchg
fldt
daa
push
xchg
or
push
clc
popl
lods
lds
in
or
shl
dec
sarb
fadds
mov
nop
std
aaa
adc
cwtl
dec
mov
gs
pop
leave
mov
mov
mov
enter
pop
jne
push
repz
pop
pushf
sub
or
dec
test
in
xor
xlat
iret
ret
inc
out
lret
lret
mov
push
push
pop
movsl
insl
lea
nop
hlt
int3
add
pop
dec
rolb
xor
loopne
es
data16
or
xor
push
add
pushl
fiadds
adc
cli
jmp
int
ret
pushf
movsb
loop
pushf
mov
cmp
mov
test
add
lret
ljmp
out
sbb
mov
stos
loop
sub
xchg
imull
push
mov
adc
xor
pusha
jns
enter
mov
pop
cli
push
and
lds
jbe
and
rep
scas
xchg
test
and
pop
add
scas
mov
jno
cwtl
mov
lock
xchg
idivl
das
push
add
insb
out
outsl
shrl
pop
call
outsb
or
cmp
aas
jmp
scas
mov
jmp
xor
xor
andl
inc
inc
ljmp
dec
loopne
lods
rcrb
xchg
or
xor
cmp
leave
scas
xor
mov
cmpl
mov
out
lods
add
in
popa
test
cmp
xor
test
jb
lret
sahf
pop
rclb
adc
adc
pop
adc
mov
cmpsb
fcomi
scas
in
mov
mov
es
inc
dec
xor
lods
test
sbb
fwait
xor
mov
sub
jo,pn
stc
cwtl
or
mov
pusha
dec
xor
cmpb
xor
add
ret
clc
sbb
adc
stos
iret
and
mov
nop
ja
ficomps
add
xchg
cmp
push
aam
adc
xchg
mov
loop
ret
or
push
mov
cmp
pusha
hlt
loope
mov
data16
add
dec
stos
pop
mov
test
repnz
jnp
mov
sbb
jg
adc
dec
daa
shl
adc
sbb
cld
subb
repz
jnp
inc
aad
jb
cld
mov
sbb
push
mov
repz
mov
fnstenv
aam
inc
lock
xor
je
ficoml
jae
add
js
mov
or
fnstsw
scas
cld
sbb
sbb
fstps
mov
pop
test
sub
xchg
mov
add
shl
ffreep
sarl
nop
add
xchg
lea
psrlw
lds
or
mov
int
negl
mov
test
adc
sbb
xchg
fisubs
pop
outsb
sbb
aas
mov
jb
push
cli
cld
jno
jg
dec
dec
aad
xor
sbb
and
mov
push
sub
ds
jbe
std
data16
xchg
gs
sbb
xchg
repz
sbb
push
aas
mov
mov
mov
mov
in
dec
fwait
push
or
outsb
push
popa
dec
jae
repnz
arpl
pop
xchg
fwait
lock
push
pop
je
clc
xor
scas
loopne
mov
mov
push
outsl
mov
cmp
fistl
imul
xor
xchg
lock
mov
jo
push
nop
insb
divl
inc
dec
mov
jne
jle
cmc
fs
fsubrs
test
popa
out
jae
out
jnp
popf
enter
testb
push
jecxz
int
mov
lret
aad
mov
rcl
mov
add
or
mov
ftst
jno
sub
loope
jne
mov
push
in
sbb
mov
js
or
xchg
sahf
in
add
push
push
jnp
insb
xor
and
xor
pop
rorb
or
cmc
ret
int3
in
imul
cmp
pop
fnsave
cmp
sahf
cmp
insl
mov
fstl
rorl
mov
mov
ljmp
mov
sbb
repz
cmp
aas
mov
test
dec
in
mov
sbb
sti
mov
mov
out
jp
cmp
rorl
shll
cltd
inc
jne
lods
jle
cmp
ss
cmp
jl
cmp
stos
fcompl
in
and
fwait
mov
xlat
push
lahf
es
xchg
adc
rcll
sub
mov
adc
xchg
push
mov
loope
sbb
or
call
xchg
stos
idivb
xor
mov
dec
xor
out
dec
or
sti
xchg
pop
ds
fdivrs
fidivs
test
shlb
imul
leave
push
inc
fldt
jp
nop
xchg
lcall
movsb
mov
mov
dec
dec
out
popf
push
sub
lcall
mov
cld
add
jne
jo
data16
mov
or
call
mov
and
rorb
aam
test
fisttpll
mov
push
js
stc
rolb
jmp
mov
adc
mov
imul
push
cld
loope
or
jns
insl
enter
neg
test
rorl
notl
mov
fldl
mov
movsl
stc
cmpb
leave
stos
sbb
sbb
lcall
jg
push
push
or
gs
ret
pop
pusha
push
insb
push
insb
dec
add
ret
or
jnp
outsl
or
test
push
xor
fldl
push
mov
inc
int3
push
test
sub
sub
mov
cltd
outsb
add
xchg
sbb
ljmp
xor
scas
mov
add
ja
aam
rolb
js
pop
or
xor
xchg
pop
and
ja
jbe
pop
enter
fldenv
loopne
dec
pop
mov
mov
cmp
loope
aaa
insb
sub
xor
lret
test
repz
je
cltd
pushf
int
insb
dec
loop
call
cmp
dec
es
xor
repz
movsl
xor
jb
loopne
sti
push
mov
fsubs
dec
xchg
mov
mov
out
lods
mov
stos
xlat
push
insl
add
lret
mov
pop
xor
in
and
mov
mov
sahf
push
int
gs
jbe
jo
jecxz
mov
sub
and
mov
xchg
lret
push
add
das
scas
xor
movsb
loop
mov
insl
testl
cwtl
movsb
cmp
nop
scas
fists
cmp
fwait
cmp
outsl
in
dec
sbb
js
mov
jne
movb
imul
popf
fnstsw
mov
and
mov
pop
cmp
and
xchg
xchg
cmc
and
cli
les
xchg
mov
test
mov
mov
adc
js
mov
dec
xor
mov
ja
rcrl
dec
lds
imul
stc
pop
xor
pop
adc
clc
repnz
popf
scas
adcb
data16
ljmp
pop
push
es
adc
mov
aam
loope
lret
jae
sahf
push
andl
mov
cmp
cmpsl
add
cmc
or
test
jle
inc
das
test
sub
int3
into
inc
xor
mov
daa
out
cltd
mov
addl
xor
loope
nop
cmp
xor
insb
gs
jmp
cmp
out
and
xlat
pop
cmpsb
push
scas
outsl
lret
sub
and
popa
roll
scas
jp
add
in
add
icebp
cmpsl
addr16
and
gs
mov
shll
jnp
pop
cmpsb
jae
mov
mov
lret
or
mov
push
js
push
jle
popf
mov
add
xchg
rcrl
fwait
xor
cmp
mov
dec
subb
stc
dec
test
mov
jmp
enter
add
ss
inc
pop
test
cmp
daa
sub
jb
lcall
loop
ds
orl
dec
ja
fwait
jbe,pt
cmp
push
inc
stos
push
leave
sbb
ljmp
inc
and
mov
sbb
push
scas
adc
ss
mov
ljmp
jnp
movsl
cltd
nop
sub
cmc
or
or
fdivs
lds
loopne
scas
lods
cmp
jge
js
and
lods
sbb
loope
xor
test
dec
sbb
mov
orl
inc
ficoml
push
inc
rorb
lret
xlat
test
fmuls
push
test
test
xchg
lcall
xchg
outsb
and
out
mov
add
push
mov
sbb
test
popf
add
adcl
pop
nop
mov
ja
mov
popf
mov
cmpsl
cmpsb
dec
in
dec
lret
scas
add
dec
clc
push
xorl
int3
or
mov
data16
rcrl
push
int
jb
jmp
xor
lret
cli
mov
lret
jnp
imul
or
cmp
pop
sbb
mov
fisttpl
stos
ficompl
sub
pop
or
cmp
pop
sbb
mov
fisttpl
stos
ficompl
sub
pop
or
cmp
pop
sbb
mov
fisttpl
stos
ficompl
sub
mov
or
in
hlt
mov
ljmp
test
dec
sub
push
jp
or
dec
sub
mov
ljmp
fldt
sub
push
jp
gs
sbb
dec
cmp
inc
xchg
clc
loop
repz
ret
inc
lret
mov
inc
xor
add
pop
pop
sbb
ror
les
mov
or
mov
test
cmp
push
subl
cmp
lret
jecxz
aaa
inc
rorl
pop
clc
mov
add
push
or
pop
sub
push
fldcw
push
or
xor
fbld
out
idivl
xchg
sbb
dec
sub
cli
scas
inc
add
ljmp
mov
or
pop
hlt
xchg
dec
imul
mov
repz
sbb
dec
sbb
imul
cmp
push
or
fdivr
je
add
jmp
inc
les
xor
pop
bound
or
in
sub
jb
mov
fwait
outsb
mov
in
mov
lcall
xor
es
inc
sub
xlat
cwtl
into
test
cmc
xchg
ret
lret
fistpll
or
pop
push
gs
outsb
sub
pop
aam
lret
mov
fists
les
or
cmovp
sub
pushf
popf
idivl
jmp
fldt
sub
push
jp
or
pop
sub
mov
ljmp
fldt
sub
push
jp
or
pop
sub
mov
dec
clc
xchg
adc
mov
pop
adc
movsb
mov
push
mov
mov
mov
mov
loopnew
in
jmp
popa
lds
jp
and
movsl
icebp
mov
add
inc
andb
fdivrl
mov
ficomps
pop
inc
mov
outsb
test
and
mov
shrb
sub
jg
cmc
jmp
add
shll
jne
arpl
dec
add
inc
xor
xchg
mov
and
outsl
pop
or
sbb
and
test
cmp
cld
xor
pushf
js
inc
xchg
adc
loope
in
jecxz
popf
in
stc
aas
sub
in
cld
pop
push
mov
pusha
imul
sbb
out
out
cmp
push
in
sti
sbb
inc
inc
mov
nop
sarl
cltd
dec
ror
out
repnz
lea
or
test
sbb
and
sti
popa
clc
adc
jle
cmc
mov
sarl
adc
jg
inc
addr16
out
xchg
sbb
psllq
cmp
push
cli
push
push
enter
rol
and
pushf
cld
leave
pop
push
pop
rcll
fmull
aam
dec
dec
lret
arpl
out
xchg
jnp
sub
mov
mov
xor
jb
pushf
dec
dec
int
pop
add
xchg
ret
push
inc
iret
push
pop
jne
push
mov
arpl
mov
aas
sbb
sub
insl
in
add
xor
sbb
dec
out
inc
push
mov
xchg
mov
push
and
inc
sub
loop,pn
lcall
push
xlat
lahf
imul
mov
inc
insb
rcrl
pop
stos
into
pop
cli
popa
add
dec
cltd
pop
add
cmp
xor
lret
bound
roll
cmpsb
mov
mov
push
andb
movsb
fwait
dec
rcrb
roll
icebp
bnd
dec
or
out
imul
loope
cs
test
pop
pop
popf
push
loop
ljmp
pop
popa
adc
inc
jo
call
cli
jp
inc
dec
std
xchg
sub
dec
rol
out
mov
jne
adc
mov
mov
scas
sti
rcll
xchg
cmp
xor
subb
aas
in
std
loope
es
lret
adc
loop
out
fucomp
add
or
incl
push
mov
lods
cwtl
sbb
repnz
push
das
lret
out
cmpl
jns
aas
adc
pop
leave
dec
mov
ds
and
loopne
jmp
lret
insl
movsl
lds
clc
add
aad
fisttpll
ds
sbb
add
adc
rorb
jns
or
js
pushf
xchg
scas
dec
pusha
out
aam
lcall
add
out
or
inc
ss
cli
push
in
ret
fscale
stos
nop
scas
push
mov
jp
cltd
sar
aad
push
out
or
push
push
clc
push
jle
int
inc
add
or
js
ljmp
cmp
fdivr
leave
rclb
add
cmp
test
push
and
mov
jp
xor
cmp
dec
lret
xchg
xchg
cmp
mov
jle
mov
jmp
xor
loop
jne
mov
addb
cmp
mov
iret
les
xlat
xchg
cwtl
in
xchg
and
mov
aad
lock
imul
inc
ljmp
insl
push
jb
loope
fcoml
cmpsl
inc
cmp
dec
dec
cs
dec
mov
dec
mov
push
jo
leave
inc
outsl
stos
lds
movsb
lcall
cmp
aad
cmp
xchg
repz
int
loopne
stos
mov
loop
imul
nop
loope
or
test
and
inc
je
lret
clc
xchg
jns
repnz
in
inc
inc
xchg
mov
cmpl
xor
push
jmp
or
rcrl
mov
data16
rclb
cmp
mov
xchg
xchg
cmc
mov
mov
testl
jge
enter
dec
imul
or
js
fisttpl
call
mov
lock
mov
xchg
sub
mov
jnp
jp
jns
cs
push
cmc
pop
les
cwtl
mov
decl
repnz
dec
fildl
lahf
leave
mov
add
mov
and
sahf
jns
mov
jbe
mov
lods
insl
pop
in
xchg
push
test
movsl
or
es
dec
mov
arpl
inc
negl
sub
cwtl
dec
lcall
xchg
mov
push
or
jae
clc
js
and
subb
push
mov
adc
stc
cltd
push
jecxz
ja
push
xor
xchg
cmp
jp
imul
push
push
push
movsb
shlb
add
enter
dec
imul
and
pop
in
mov
fnsave
ret
inc
jns
adc
pop
pop
dec
mov
in
pop
lea
lock
adc
xor
add
or
addr16
lea
in
inc
and
jle
push
enter
xor
out
pop
mov
and
aas
cwtl
mov
movsb
cmp
lahf
sbb
cmc
in
out
push
inc
and
mov
adc
sub
xor
sbb
nop
bound
pusha
and
popf
push
mov
adc
leave
push
mov
jmp
mov
icebp
imul
int
out
push
jg
push
jns
xor
push
push
jo
mov
pop
fmul
or
js
add
add
xlat
or
lret
aad
mov
or
cwtl
notl
subb
shrl
pop
pushl
clc
jge
cmp
sahf
jg
or
jecxz
inc
lods
sub
mov
pop
mov
mov
imul
clc
fmuls
out
and
imul
mov
and
test
xor
cmp
out
ja
in
inc
out
xchg
mov
notb
jbe
dec
jo
in
push
jle
scas
sti
adc
cmpsb
mov
loope,pt
xchg
jp
xlat
das
jl
fisttps
pop
cmp
clc
cli
xor
push
lods
sub
pop
mov
jl
es
shrb
fwait
arpl
jp
ss
xchg
pop
xor
je
jge
pop
ror
movsb
push
jno
jmp
popf
div
pop
push
movsb
fcmovnbe
mov
cmpsl
sbb
mov
movsb
and
neg
pop
rorb
dec
cmp
stc
jno
or
xchg
mov
ja
mov
mov
mov
jmp
fnstcw
shrl
pop
mov
push
inc
pop
push
dec
hlt
test
nop
aas
xchg
or
add
add
in
test
into
dec
adc
push
cmp
loopne
xchg
add
mov
mov
jl
aas
lcall
icebp
jae
iret
push
xchg
jo
and
andnps
add
xchg
pop
pop
sbb
adc
jbe
hlt
dec
push
sti
inc
sbb
jbe
cltd
add
sbb
lret
das
fdivp
shll
push
push
push
or
and
hlt
pop
pushf
leave
rorb
ss
test
inc
and
outsl
cs
mov
shrb
xchg
mov
sar
enter
into
nop
mov
aam
adc
cmp
clc
sub
xlat
stc
lds
bound
pop
dec
jge
bound
test
pop
add
xor
sbb
sbb
or
imul
xchg
jg
fidivl
cmp
xor
insb
dec
jecxz
or
sbb
imul
and
jbe
mov
mov
cmp
dec
pusha
sub
rcrb
inc
jmp
cld
add
jecxz
pop
das
in
jb
add
cld
and
adc
push
push
inc
jle
lods
jb
cltd
shrb
int3
mov
outsl
jnp
xor
testl
or
aad
add
mov
and
repnz
pop
dec
xor
mov
or
inc
mov
lock
lea
sub
mov
pushl
cmpsb
test
mov
cmp
hlt
jmp
dec
inc
leave
mov
adcl
jg
cwtl
xchg
add
fimull
lret
pop
xor
mov
repz
sbb
xor
sahf
daa
mov
jp
cli
xlat
mov
sub
xor
pop
testb
sub
rcrb
mov
xor
xchg
sbb
pop
cmp
push
out
out
lcall
pop
pop
add
addr16
xchg
mov
xor
shlb
fs
fdivrs
push
dec
cmp
stc
das
push
mov
jecxz
in
dec
xchg
or
es
xchg
and
cmp
jb
pop
hlt
aam
ja
push
enter
xor
add
mov
dec
stos
jmp
mov
mov
bound
stc
jl
insl
push
mov
and
insb
rolb
and
sbb
jae
movsb
xlat
xlat
xchg
dec
sahf
dec
and
dec
cmp
scas
push
std
jle
mov
in
pop
dec
cmp
rorl
repz
lret
mov
and
imul
mov
enter
pop
aad
dec
andl
in
or
inc
dec
jnp
aam
sbb
jns
sbb
xchg
test
ljmp
mov
int3
push
fbstp
mov
dec
sbb
mov
arpl
ljmp
adc
into
or
in
jle
lock
ds
jbe
cmpsl
scas
stos
bound
cmp
test
mov
rolb
xlat
mov
int3
dec
in
jnp
sbb
in
xlat
std
popf
pop
xor
aam
test
pushf
jbe
xchg
out
jmp
jge
out
cli
and
sbb
sub
jns
aas
out
les
loope
sbb
hlt
mov
mov
and
mov
mov
pop
add
js
mov
and
dec
in
cld
jg
in
add
mov
es
fnstsw
jge
popa
adc
gs
movlps
pop
push
sub
dec
inc
jge
aam
lock
addr16
dec
leave
inc
shll
and
mov
lret
cmpsl
les
lock
fcmovne
cld
add
xchg
ss
xchg
adc
sbb
dec
mov
scas
xor
cli
xor
pop
cs
push
insl
adc
enter
mov
testl
neg
add
adc
arpl
xchg
stos
adc
mov
lods
jnp
hlt
adcb
mov
dec
in
lret
in
sbb
scas
or
sbb
sbb
mov
std
test
cli
xor
cmpsl
mov
cmpsb
js
dec
fidivl
shl
adc
ss
jle
nop
ja
scas
sarl
fucomip
leave
lods
enter
xchg
aad
inc
xor
sbb
out
fstps
iret
xchg
sbb
mov
dec
pop
cwtl
fisttpll
ret
jo
mov
pop
rcrb
mov
dec
mov
int
pop
loopne
out
cmpsl
fidivs
shrl
movsb
inc
mov
sub
xchg
sub
add
ljmp
aaa
test
or
movsb
pushf
cmp
cld
jns
int3
sub
push
outsl
fistpll
and
or
mov
jne
mov
sti
pushf
mov
jle
mov
leave
das
aas
or
data16
pusha
mov
sbb
filds
testl
xor
inc
cli
dec
jle
idiv
aaa
insl
daa
add
xorw
mov
lahf
mov
lidtl
jp
test
out
xchg
cmc
nop
sub
test
xor
les
push
push
mov
xchg
adc
mov
int3
sub
scas
inc
push
mov
inc
fdivrl
pop
loope
bound
fmul
sbb
cmp
test
jge
sarl
lcall
outsl
dec
insl
pop
js
das
xor
add
mov
roll
sub
push
fistps
lods
push
push
xchg
pop
enter
jne
add
out
inc
std
shll
mov
dec
shr
or
cli
jmp
lock
push
pop
sub
pop
xchg
mov
push
cmpsb
pushf
cmp
je
dec
rorb
rep
sbb
vmwrite
cltd
sbb
and
jmp
das
push
cmp
xor
pop
int3
lea
xchg
mov
pop
sub
shl
mov
pushf
into
dec
jmp
test
mov
scas
test
jne
sub
es
xchg
mov
stos
mov
or
stos
cmp
push
das
fiaddl
and
cmp
or
rcr
aaa
sbb
xorl
sar
push
mov
fmul
push
popa
xorb
mov
test
icebp
push
add
lods
out
mov
or
xchg
add
loop
shl
cmp
xchg
jb
ret
sub
mov
data16
adc
aas
pop
add
jecxz
lods
das
cli
sub
imull
push
push
rcrl
and
imul
mov
lds
mov
sti
das
and
testb
out
lcall
rclb
in
jb
rorl
dec
ret
das
fisubrs
decl
fisubrs
mov
pop
out
ss
push
push
mov
fists
add
or
loopne
nop
incb
leave
mov
dec
push
sub
loope
and
nop
je
mov
or
popf
inc
push
in
add
repnz
shlb
test
mov
inc
xlat
mov
jbe
push
clc
push
or
jmp
add
je
inc
sbb
sbb
das
mov
sbb
xchg
jo
orl
pop
stos
inc
mov
mov
ljmp
mov
and
rorb
shll
mov
mov
push
lods
cmp
mov
sti
gs
es
ljmp
cwtl
jne
xlat
mov
xchg
les
clc
rol
sbb
andl
push
cwtl
adc
push
xchg
daa
out
inc
leave
xor
loop
orb
stos
es
inc
loopne
sub
cmp
mov
scas
jecxz
test
lock
pop
out
scas
sbb
movsl
jbe
xchg
xchg
aam
pop
inc
adc
repnz
int3
inc
cltd
in
mov
out
cmc
mov
aas
gs
shrb
mov
lods
lcall
loope
sub
ds
sbb
scas
dec
or
sbb
test
loopne
xchg
std
jmp
movb
lock
outsb
pop
fisttpll
in
mov
pop
adc
pusha
jl
lahf
push
add
mov
add
in
cmpsb
pop
adc
fidivrl
jno
mov
daa
jmp
stos
xchg
lret
jbe
fld
sbb
add
xchg
arpl
lcall
fs
lock
and
out
ret
mov
fadds
in
mov
pop
cmc
dec
mov
push
rcll
sub
xlat
movsl
inc
orl
mov
pusha
or
pop
xor
or
jecxz
je
or
pop
fcmovnbe
and
lea
adc
rcrb
ret
xchg
cmpsl
dec
ja
dec
jbe
push
iret
icebp
enter
dec
pop
into
lcall
insb
imul
inc
add
xchg
rol
jo
push
ss
ret
pushf
fldt
in
cmp
sahf
mov
mov
into
gs
fucom
cltd
repnz
nop
out
sub
or
leave
std
inc
ss
pushf
add
imul
sub
mov
lea
out
sbb
imul
sub
sub
imul
les
bound
cli
or
dec
or
adc
xor
dec
lods
cs
pop
cli
repz
lea
sbb
push
arpl
repz
xor
adc
xchg
add
xor
jnp
pop
mov
xchg
gs
xor
mov
push
add
jno
mov
pushf
jnp
adc
pop
jecxz
shrl
sub
xchg
cmpb
dec
cmp
iret
inc
cld
insb
stos
mov
add
xchg
or
popa
aam
pop
cmp
xor
fadds
pop
mov
icebp
negl
ret
mov
scas
int
mov
xchg
xchg
push
ret
push
insb
inc
rcrl
cmpsb
imul
xor
loope
data16
adc
inc
dec
into
mov
and
lds
pop
or
mov
ss
fadds
stos
and
jl
mov
movsl
es
jge
mov
ljmp
orl
nop
scas
add
shlb
sti
aad
sarb
adc
dec
int
pop
jle
popa
xchg
shrb
pop
cld
enter
test
mov
daa
out
pop
sub
xor
pop
std
inc
or
lods
ds
ja
cmp
test
pop
mov
loope
sbb
add
xchg
sbb
sar
fdivs
pop
scas
dec
pushl
daa
cmp
pop
mov
dec
aas
iret
hlt
mov
repnz
dec
out
movsb
push
cltd
jge
push
pop
sub
xor
jge
mov
pusha
rolb
xchg
push
ja
push
xor
jno
xor
add
and
jmp
sub
fs
mov
sbbb
lahf
insl
push
stos
cs
in
insb
or
andb
pop
mov
and
jb
cmp
sub
movsb
and
je
sub
xor
sub
inc
lds
es
mov
push
mov
xchg
or
mov
mov
xchg
inc
mov
test
xchg
or
jno
les
in
sbb
sub
push
aaa
xchg
addr16
imul
inc
mov
xchg
or
cmc
dec
push
adc
xor
data16
mov
and
fldcw
ret
xchg
in
or
mov
lds
les
jp
in
iret
lcall
fdivl
aaa
ret
out
mov
inc
mov
mov
icebp
cmp
negl
xlat
pop
xor
enter
xor
aaa
inc
inc
lock
cmc
test
pop
mov
sbb
xor
xchg
pop
or
or
push
cltd
clc
push
ja,pn
push
imul
int
and
sub
int3
jp
xor
sbb
cmp
ret
jg
jp
nop
and
xchg
vmovlps
push
mov
outsb
ret
ljmp
mov
nop
aam
mov
jle
mov
ljmp
mov
mov
mov
push
or
and
pop
mov
jnp
das
fs
pop
inc
fdivrs
jecxz
pop
dec
lock
jecxz
xchg
sahf
cmp
lods
cs
data16
ficompl
loope
stos
cli
ss
jge
push
nop
shll
jmp
in
add
mov
mov
push
sub
adc
dec
dec
add
jg
sahf
insl
add
cld
mov
push
lret
les
sbb
jge
cltd
outsl
out
inc
faddl
cld
xchg
pop
mov
xchg
sub
pop
fs
shlb
dec
push
xor
jle
and
jmp
ja
popf
adc
add
mov
xchg
cmc
mov
xor
push
insb
mov
jmp
stos
push
stos
pusha
sbb
fdivs
hlt
inc
sub
fcmove
int
mov
pop
pushf
aam
into
push
loope
lret
dec
les
dec
mov
inc
std
jnp
hlt
fidivrl
ret
mov
hlt
lds
ss
jecxz
gs
mov
push
push
lods
sub
or
bnd
and
cmpsl
pushf
icebp
bound
stc
jp
xchg
push
sbb
fwait
xchg
call
or
mov
fwait
push
xchg
sbb
insl
dec
mov
fcomip
loop
xchg
lcall
push
mov
in
mov
lahf
and
jl
xchg
in
and
into
fdivrl
mov
test
fidivrl
aas
fsub
dec
out
push
xor
pop
push
lret
stos
lret
cmp
repnz
testb
shll
cli
pop
jbe
and
adc
loope
and
enter
test
lahf
cwtl
shrl
xchg
movsl
push
lods
xchg
dec
pop
hlt
mov
push
mov
mov
pop
jnp
outsb
cmp
jl
lea
testb
sarb
stos
and
loope
inc
cld
mov
fwait
icebp
out
stos
add
mov
push
out
aam
and
flds
rorb
fwait
sub
jns
dec
jb
mov
imul
aam
sub
sub
je
out
or
push
fiaddl
xor
push
or
arpl
or
and
sbb
cmc
cmp
dec
sbb
ds
in
adc
mov
sarl
pop
lods
xlat
aad
in
pop
aas
flds
inc
mov
adc
lret
into
cmpb
sub
dec
cmpsl
ret
or
subb
call
adc
in
cmp
lods
mov
cmpsb
lock
push
mov
inc
jne
lret
xchg
mov
fcmovnu
inc
sub
xor
xchg
in
sahf
sahf
or
ficompl
adc
push
in
cs
sahf
and
inc
dec
test
aad
inc
mov
mov
xor
ficoml
mov
lcall
sub
push
jp
or
pop
sub
mov
ljmp
fldt
sub
push
jp
or
pop
sub
mov
xchg
mov
sti
mov
xor
stos
lret
mov
sbb
jp
or
pop
or
mov
ljmp
pop
sub
les
or
movsb
aad
lds
jle
outsb
stc
push
fwait
insl
stc
push
out
jne
leave
into
sbb
or
jns
imul
cmc
jle
outsb
stc
push
jmp
push
cmp
sub
js
or
cmp
imul
or
outsb
out
mov
ds
cs
fimuls
in
jno
insb
adc
sbb
or
sub
loopne
std
ds
movsl
jle
sbb
cmp
imul
sbb
or
xlat
push
imul
pushf
jmp
mov
mov
in
inc
in
adc
push
ror
cli
jnp
mov
inc
or
or
xchg
cmp
gs
push
push
cmp
mov
leave
sarb
and
xor
sahf
imul
sub
add
push
inc
push
sbb
stos
sbbb
dec
ljmp
inc
push
inc
cwtl
outsb
ja
push
pop
add
es
imul
sub
sti
hlt
sahf
cmp
pop
mov
decl
jle
outsb
sbb
outsl
cs
fidivs
out
xor
dec
rcrb
paddsw
outsb
xchg
jnp
lods
js
jp
cmpsl
jp
jl
insb
lcall
sub
hlt
cmp
sub
sbb
outsb
nop
jb
inc
sub
pushf
dec
pop
xchg
jnp
sbb
push
xor
or
aad
lds
clc
or
or
ds
cs
sub
sbb
or
jns
imul
cltd
jle
outsb
stc
push
jmp
cs
sub
sbb
or
jns
imul
pop
xchg
dec
lods
ss
jge
add
adc
sahf
mov
xlat
dec
mov
pop
inc
cs
popa
pop
pop
in
add
mov
pop
arpl
negl
xchg
aas
repz
dec
add
test
nop
cmpsb
xchg
nop
out
out
pusha
insb
fsubrl
lcall
dec
rolb
clc
leave
sbb
imul
push
xchg
test
cmp
add
cmp
lock
inc
outsl
jne
movsb
test
adc
fs
hlt
mov
jae
rorb
pop
cmp
xchg
dec
xchg
xor
fsubl
push
xchg
jo
popf
inc
jmp
leave
dec
lea
xchg
cmpl
adcl
daa
and
sub
xor
add
push
rorl
ficomps
dec
das
popf
mov
inc
or
mov
jno
loopne
jne
xchg
xchg
out
sbb
mov
mov
andl
add
les
mov
mov
inc
stos
insb
cmpsl
das
fs
ja
sahf
in
or
pop
fnstsw
ljmp
mulb
out
out
sub
rcll
dec
sbb
stos
jmp
xorb
sub
cli
and
sub
test
mov
xchg
sub
adc
xor
xchg
lahf
aam
cmp
ret
jbe
dec
jb
arpl
fsubl
popf
cmp
cmp
inc
cmp
add
in
cli
sbb
xchg
inc
sub
mov
pusha
cmp
mov
add
rclb
ds
xchg
dec
or
insl
and
out
cld
out
aad
jo
shll
sub
test
or
movsb
and
rcll
xchg
outsb
lock
mov
das
das
sub
mov
adc
leave
aas
adc
sbb
xor
jmp
mov
sub
mov
adcl
mov
and
mov
lds
add
lods
iret
mov
hlt
loop
out
dec
jp
lock
add
xchg
je
and
test
pop
xor
hlt
insb
mov
add
daa
dec
adc
sub
mov
jmp
es
lea
fildl
xor
je
adc
sbb
arpl
pop
push
or
faddl
inc
xor
out
test
lret
push
jle
jl
stc
pop
lret
ds
jo
or
ds
or
movsl
sbb
xor
jbe
idivl
jne
sahf
lret
movsb
xor
lock
xor
mov
mov
xor
mov
inc
add
addl
pavgb
cmp
daa
cmc
adc
sbb
cmp
xlat
push
sub
jno
inc
fists
adc
mov
cmp
aaa
fbld
or
insl
lock
xor
pop
cmp
jg
jl
push
mov
cltd
in
jecxz
lret
push
or
dec
push
fstl
push
pop
push
lret
imul
dec
mov
jns
clc
add
or
mov
adc
out
movsl
and
aam
push
or
hlt
xchg
fmuls
daa
adc
jge
mov
jmp
mov
pop
jnp
insb
ljmp
sub
xchg
push
es
lcall
cmpsb
pusha
dec
mov
push
int3
mov
inc
and
scas
push
scas
xor
pop
lret
and
cmpsl
push
cld
add
add
dec
jp
aad
stos
push
cmpsb
lea
or
dec
popa
push
or
aad
ret
subl
pusha
jb
rol
mov
fucomip
loopne
push
mov
repz
sub
cltd
push
lret
lods
pcmpgtb
jae
mov
jbe
mov
nop
testb
cmp
and
imul
out
sub
pushf
inc
outsl
movsb
jns
addr16
inc
subl
test
fbstp
cld
push
mov
dec
jmpw
inc
cwtl
test
outsb
mov
pop
dec
mov
jle
fwait
lock
inc
ret
ljmp
out
jge
xchg
mov
imul
pop
insb
xchg
adc
fidivrs
js
mov
das
movsb
adc
dec
xor
and
xchg
dec
cmp
push
push
aaa
cltd
cmpsb
and
insl
cmpsb
lahf
sahf
jo
insb
aas
insl
imul
sub
push
test
gs
addr16
push
xchg
or
dec
stc
fldenv
sub
push
mov
in
sub
pop
sub
jmp
not
push
bound
popf
sub
cmp
dec
or
fdivrp
repz
std
jno
ss
xor
cmp
xchg
xchg
movb
daa
pop
pop
add
pop
cmp
test
sub
push
mov
cmp
jle
mov
add
iret
add
jmp
popf
stos
mov
repz
rorb
push
std
loop
add
mov
pushf
stos
jns
jo
out
arpl
pop
dec
adc
mov
jbe
pop
jnp
shlb
pop
je
test
jmp
rol
mov
pop
popa
and
test
mov
cltd
pop
jns
pop
jns
jb
pushl
stos
pop
pop
rol
lods
adc
shl
and
cmp
test
mov
pop
mov
adc
icebp
movsl
movsl
and
sub
js
mov
in
inc
cmovle
gs
loop
pop
fwait
std
shll
add
cmpsl
xchg
rorl
cld
dec
dec
ret
gs
push
jle
daa
inc
aaa
pop
add
adc
aam
mov
repnz
lock
pandn
dec
out
sbb
in
or
ffreep
sbb
lcall
shlb
enter
adc
popa
rcll
ja
mov
mov
out
push
jecxz
xchg
xlat
jg
inc
add
pop
cld
test
xor
xchg
push
orl
mov
inc
gs
pop
pop
xchg
aas
or
cmpsl
lret
or
ret
movl
push
ds
cmp
and
js
dec
rolb
lods
sub
enter
fldl
cwtl
dec
pop
test
rorb
push
mov
pop
cli
addr16
mov
inc
lret
pop
xchg
lds
std
in
adc
incl
jge
cmp
sbb
sbb
shll
mov
add
ljmp
pop
push
mov
std
add
sub
fsubl
and
or
pop
sub
icebp
push
mov
aad
call
push
imul
mov
mov
repnz
add
lahf
push
aam
orb
lods
adcl
push
mov
icebp
scas
mov
incl
aad
bswap
jle
lahf
addl
rcr
repnz
inc
add
mov
add
jl
lahf
stos
loopne
sub
mov
js
daa
add
push
fimull
sub
pop
int
mov
pop
pop
pop
mov
add
cmp
and
or
push
jo
in
jle
mov
inc
stos
pop
enter
std
or
dec
fsubrl
sarb
dec
movsb
pop
cmp
jb
push
mov
fstpt
sbb
inc
adc
stos
adc
xlat
dec
lods
sub
repz
xchg
gs
add
mov
mov
adc
or
and
push
inc
xchg
add
and
aaa
test
lahf
call
andb
push
fcoms
push
sbb
lds
dec
cmpsl
gs
push
push
pop
sub
mov
idivb
es
dec
imul
sub
cmp
jmp
xor
push
push
cmp
sbb
mov
sbb
mov
insb
mov
jo
jbe
adc
and
lahf
pop
mov
jmp
xchg
or
and
or
or
push
leave
out
inc
pop
fs
das
mov
repz
lods
jp
outsb
clc
cli
jo
aaa
push
cmp
js
dec
xchg
or
pop
rcll
sbb
jno
stos
notl
pop
fldcw
dec
xor
cmp
cmp
mov
inc
fmul
or
movsl
mov
add
sbb
xchg
mov
ds
jo
outsb
inc
xor
lea
ljmp
jecxz
push
cmp
out
or
ds
shll
fnstenv
shl
stos
lahf
pusha
std
out
ret
add
jecxz
xlat
or
jbe
mov
push
xlat
pushf
jns
push
xor
gs
out
jno
out
add
dec
test
mov
scas
push
cmc
sahf
jbe
pop
sbb
movsl
iret
xchg
mov
inc
insl
repnz
and
mov
js
ss
fadd
icebp
adc
ret
jecxz
or
mov
bound
mov
mov
inc
ds
jp
fistps
sbb
aas
roll
daa
cli
add
or
jmp
sbb
movsb
mov
popa
lcall
sti
into
enter
imul
data16
xor
jb
imul
pop
lret
popa
fsts
jae
pop
xchg
fwait
insl
jecxz
movsl
cmp
adc
rcrl
stos
ja
cmpsl
mov
adc
push
cmpsb
in
cli
movsl
jbe
cmpsb
xlat
cs
in
sbb
mov
inc
les
jae
jmp
in
jns
lods
leave
pop
movsl
push
push
xchg
lcall
sbb
leave
shr
push
out
mov
stos
test
mov
dec
xor
or
repz
adc
push
xor
pop
cmc
dec
mov
push
ret
sub
jno
mov
or
dec
lahf
les
pop
mov
es
imul
cli
xor
rorl
enter
stos
into
xor
adc
mov
cltd
leave
xchg
les
mov
loop
push
fadds
int3
jge
jecxz
js
pop
fs
lods
mov
cmp
push
popf
mov
js
mov
loopne
lods
lods
mov
aas
fisubl
mov
mov
push
lret
sub
imul
adc
inc
enter
arpl
mov
cmc
pop
popa
std
int3
inc
or
xchg
shll
jns
mov
jo
cmp
ud1
jne
dec
jmp
push
fcomps
out
add
jnp
inc
test
int
mov
add
es
jo
sahf
dec
adcb
xchg
data16
out
test
scas
mov
or
jl
ss
xor
mov
inc
pop
popa
push
push
cmp
gs
sub
jo
sti
jle
aam
mov
sbb
ror
test
imulb
aas
cmp
mov
add
sub
or
mov
fistpl
int
nop
mov
jp
pop
ret
jge
notl
ljmp
mov
int3
add
xor
stc
cmpsb
stos
xchg
xor
sbb
sbb
rcrb
sub
jecxz
test
in
xchg
aam
jecxz
adc
mov
xchg
leave
fdivrp
lods
in
ret
push
negl
jle
loope
push
sbbb
rep
test
lcall
dec
push
xor
add
lret
mov
and
pop
out
sbb
mov
push
inc
and
push
add
jg
adc
out
jge
shr
bound
mov
pop
scas
jl
push
pop
jmp
mov
lcall
jnp
xorl
ret
mov
xchg
ljmp
cs
fimull
mov
cld
pusha
adc
test
fwait
ret
push
scas
pop
fs
xor
xchg
mov
sti
aad
pop
int3
cmp
jbe
jnp
aam
mov
ja
jg
sbb
dec
ds
rorl
fldl
popa
jp
inc
test
push
hlt
and
xchg
mov
push
cmp
mov
in
in
cmp
test
pop
adc
ljmp
mov
repz
jmp
dec
pushf
subb
movsb
sarl
leave
and
jmp
adc
add
js
push
aad
xchg
xor
or
mov
cmp
cmpsl
pop
pop
repz
xchg
daa
xor
adcl
ror
mov
sbb
push
je
cmp
xor
daa
test
jb
stc
movsb
aas
scas
dec
jno
jl
push
pop
aad
jbe
mov
ss
cmp
rcrl
or
orb
nop
push
cmp
sti
movnti
fcomi
mov
sbb
sub
out
shlb
push
enter
xchg
adc
fwait
jno
xchg
je
or
cmp
shll
sub
pop
dec
stos
push
adc
int3
cmp
and
enter
fwait
inc
fsts
sub
insl
int
cmp
aam
mov
dec
fsubs
dec
sbb
or
mov
jecxz
jb
sbb
pop
jmp
mov
int
cmpsb
dec
lods
out
lahf
jmp
into
jg
out
es
mov
cmp
dec
jo
sbb
into
dec
scas
rcll
push
sbbl
stos
data16
push
pop
cmp
adc
jmp
shrl
or
testb
mov
jmp
imul
cmp
stos
fstp
jecxz,pn
sbb
add
mov
inc
repnz
inc
jg
mov
repz
xchg
mov
dec
xchg
sub
in
inc
orb
dec
add
jnp
lret
das
loope
push
lcall
es
sbb
xchg
addb
or
inc
xor
sbb
push
out
cmc
rcl
jo
pop
decl
mov
test
fsubr
xchg
pop
pop
inc
mov
jns
and
cs
nop
mov
andb
or
scas
stc
enter
adc
pop
xchg
jge
arpl
fstl
mov
xor
add
adc
mov
in
shll
mov
ds
mov
lahf
jp
out
jbe
xchg
popa
shlb
xor
fstps
bound
xchg
xchg
add
fidivl
jp
in
pushf
lcall
pop
decl
add
movsb
test
and
scas
jnp
mov
inc
in
nop
scas
dec
jae
add
or
mov
stos
sahf
xchg
cmc
jle
mov
mov
dec
xchg
hlt
add
test
dec
and
jl
jnp
sub
inc
ds
mov
fmuls
mov
sub
enter
rorl
inc
orb
cmpsb
loop
jnp
mov
mov
cmp
movsb
ss
push
sbb
mov
iret
and
call
shlb
push
jg
int
pop
jns
and
sar
aaa
mov
xorl
mov
mov
aas
jae
repz
leave
xor
cmc
gs
inc
dec
into
mov
xor
xlat
and
mov
sbb
jbe
lds
mov
mov
jo
cmp
pop
sub
jp
std
adc
xchg
and
fs
jmp
adc
imulb
addl
mov
not
repz
inc
mov
mov
push
add
fcomp
jbe,pn
hlt
mov
data16
dec
jg
cmpsl
push
push
shrb
aas
pop
sarl
repz
sub
cwtl
movsl
sbb
xchg
jmp
fists
divl
jo
add
nop
mov
int
or
es
hlt
in
push
dec
fidivl
out
insl
push
leave
pop
es
push
xor
or
movsb
lcall
mov
xchg
loope
in
xor
and
je
popf
call
pop
jmp
xchg
jns
jno
pop
icebp
lcall
mov
cltd
bound
sbbb
mov
rclb
sub
mov
xchg
les
ja
mov
into
in
add
inc
push
cmp
sub
and
arpl
mov
add
out
ss
addl
dec
adc
mov
lcall
add
adc
in
and
mov
in
push
sbb
push
int
mov
xchg
and
add
movsl
xchg
nop
fcomp
cs
sbb
cmpl
fwait
xchg
jg
push
lods
jnp
gs
jmp
inc
test
mov
test
lods
subl
scas
inc
jle
sbb
pop
popl
xchg
lahf
fwait
lock
inc
std
repz
or
mov
adc
fistpl
pop
addr16
xchg
rcr
xor
jg
popf
and
xor
movsb
notb
into
pop
sub
test
adc
jns
jo
sbb
mov
sub
cmp
cli
aaa
cmp
stos
xchg
cltd
shrb
sarb
jl
mov
call
push
icebp
sub
mov
repz
popf
inc
mov
adc
xchg
sbb
add
imul
mov
imul
and
cmp
xchg
mov
cli
rorb
xchg
cltd
jns
adc
xchg
xchg
fisttpl
inc
jne
dec
js
xchg
dec
aad
xchg
mov
fimuls
adc
or
xchg
ljmp
dec
lea
sbb
incl
pop
repz
repz
and
mov
pop
orl
or
std
cmp
jecxz
stos
or
cmp
es
hlt
inc
sbb
test
call
push
scas
movsl
xor
dec
lret
sbb
mov
clc
dec
ss
movsb
adc
cwtl
adc
push
lock
outsb
xchg
lret
or
leave
mov
int3
mov
xchg
add
sub
adc
mov
test
mov
leave
dec
test
in
cltd
xchg
adc
pop
insb
push
dec
xchg
add
scas
test
sbb
adc
in
test
push
out
lds
subb
inc
shl
repnz
sbb
adc
sti
or
lds
test
into
xor
out
push
mov
test
lcall
jecxz
rolb
mov
mov
cmovp
push
mov
das
notb
xchg
push
xchg
lock
dec
lret
jne
cmp
std
movsw
pop
test
mov
sub
fsubrl
pop
adc
int3
jae
lcall
pop
test
mov
xchg
dec
popf
inc
inc
adc
aam
sahf
cmc
lahf
rcrl
pop
and
pop
repnz
pop
pop
sub
inc
ss
sbb
jg
aam
sub
jecxz
shlb
fstpl
push
insb
sti
pop
sub
push
push
shr
jb
jmp
das
enter
pop
jmp
repnz
adc
adc
cmp
and
dec
and
lods
and
nop
ret
mov
xor
or
jmp
shlb
push
xlat
sti
orb
hlt
mov
mov
or
mov
stos
or
and
scas
cmpsb
mov
hlt
ret
adc
cmp
iret
out
popf
push
mov
cld
inc
in
out
cltd
push
mov
fdivrl
sbb
out
dec
push
mov
dec
cmpsb
or
jg
mov
lret
or
pushf
jecxz
add
adc
add
adc
pop
add
adc
sbb
mov
inc
mov
addr16
mov
inc
cs
mov
sub
fnstcw
stos
jo
jbe
sbbb
mov
and
dec
add
mov
dec
pop
ret
push
inc
sub
popf
faddp
arpl
xor
cltd
ja
outsb
push
cmp
in
fucomip
push
or
cmp
push
mov
sub
dec
movsb
push
jb
adc
into
imul
adc
test
test
pop
inc
add
lret
cwtl
push
mov
das
inc
pop
add
std
cltd
in
or
and
push
pop
sub
mov
jp
sub
into
add
call
popf
pop
fldl
pushf
js
xchg
adc
iret
mov
popf
js
cmc
xchg
nop
sbb
jo
push
jo
sahf
fidivrs
mulb
mov
push
inc
iret
sbb
cli
xchg
call
fdivs
xor
sbb
xchg
ja
cmpsb
int3
cmpsl
xchg
cltd
adc
cmpsl
pop
sti
mov
insb
jp
inc
test
push
mov
push
out
mov
jmp
rcrl
add
leave
pop
bound
in
push
clc
mov
or
cmc
mov
sub
imul
xchg
rorb
outsb
inc
lea
add
sbb
arpl
rolb
dec
pop
lods
push
fcoms
sub
mov
fisubrl
jmp
aas
push
fs
jae
shlb
jmp
popf
or
into
push
push
inc
jge
stc
inc
fucom
cmpsb
mov
mov
lret
mov
icebp
scas
out
sbb
fists
mov
lea
adc
shlb
ja
sub
mov
mov
mov
inc
sbbl
mov
hlt
push
in
sub
addr16
mov
test
outsl
xor
popf
out
stos
ds
addb
fidivrl
jae
add
pop
test
or
lret
sub
test
or
or
add
or
cli
xor
lret
out
add
dec
fidivrs
outsb
stc
push
jmp
cs
sub
sbb
or
jns
imul
cltd
jle
outsb
stc
push
jmp
cs
sub
sbb
or
jns
imul
stc
jle
outsb
imul
or
cmp
sub
jmp
sahf
jns
pop
mov
cmc
dec
ret
jle
outsb
stc
push
stc
push
fnstcw
dec
cs
fs
or
cmpsb
inc
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
push
push
pushl
call
push
mov
pushl
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
lcall
cmc
test
test
sbb
jge
insl
dec
sbb
jp
mov
lcall
popf
fimull
or
sub
mov
jp
mov
lcall
popf
fimull
or
cmp
sbb
insl
dec
pop
xor
sub
stos
xchg
mov
loope
add
mov
ficompl
xchg
xor
adc
fwait
inc
adc
mov
lahf
mov
jl
loopne
push
idivl
xchg
fildll
adc
inc
or
cli
nop
sbb
int
ret
mov
lcall
pushf
iret
lea
cli
push
xchg
push
cmp
jmp
cmp
inc
adc
test
loop,pn
dec
sbb
or
jnp
ja
xor
xor
call
cli
dec
pop
sub
dec
aad
adc
xlat
lret
cli
sub
fstpl
in
lret
ljmp
dec
sub
insl
dec
sbb
jp
lret
mov
int
xchg
roll
repz
std
or
jg
sub
pop
jle
aas
cmp
out
iret
iret
std
lahf
lret
jmp
outsl
and
cmp
dec
jle
pushw
pop
out
xchg
lcall
popf
fimull
or
dec
sub
insl
dec
sbb
jp
mov
lcall
popf
fimull
or
dec
sub
insl
dec
sbb
jp
mov
mov
stos
xor
jg
mov
aam
fs
xchg
aam
out
fstp
dec
mov
popf
lea
pop
push
dec
mov
mov
xchg
jg
call
lahf
pop
pop
pop
jne
popa
insb
jnp
jae
sahf
lods
insl
jno
fsts
gs
mov
pop
add
inc
add
xor
fisttpl
sbb
sti
pop
dec
inc
dec
ljmp
sbb
dec
out
hlt
enter
lods
lock
negl
cwtl
sbb
dec
add
hlt
inc
push
adc
mov
nop
push
add
pushf
and
and
inc
call
push
sub
xor
aaa
xchg
add
mov
cmp
xchg
lds
add
jne
pop
pop
sbb
xchg
cmp
iret
xor
bnd
std
sub
jecxz
mov
mov
cwtl
jp
inc
jg
scas
or
mov
pop
cmp
dec
and
pop
jecxz
mov
ficoml
and
sar
inc
je
cwtl
scas
rorb
jne
and
mov
adc
push
mov
jecxz
xor
mov
sub
jnp
xchg
imul
jmp
push
mov
jmp
mov
sbb
add
fcoml
sbb
stos
fbld
jns
sahf
mov
jp
cld
mov
js
adc
pusha
clc
int3
jne
mov
or
sbb
push
js
roll
dec
addb
pusha
fnstcw
loopne
into
pop
aaa
cmp
xor
out
lods
sbb
push
inc
mov
imul
nop
pop
cmp
add
xlat
daa
inc
pop
out
ret
mov
add
push
xchg
in
es
sarb
imul
mov
rcll
mov
mov
mov
lods
cs
fimuls
sbb
in
int
negb
loopne
xor
arpl
or
xor
jecxz
pop
sti
mov
into
and
add
mov
not
loop
xchg
sbb
inc
pushl
repz
jg
es
add
sbb
xor
insl
or
xor
xor
ret
jg
sbb
in
dec
dec
jmp
xor
dec
lods
push
ds
sbb
push
cld
insl
xchg
mov
call
out
xor
lods
sub
aam
repz
jnp
aaa
xchg
mov
ror
ja
push
push
test
cmp
call
sar
mov
jnp
insb
xchg
adc
push
es
or
hlt
loope
xor
pop
push
int
mov
xchg
jecxz
pop
pop
das
andb
adc
cmc
fnstenv
xchg
adc
leave
dec
mov
dec
ljmp
mov
pushf
xlat
dec
mov
ss
movsb
or
sbb
jl
and
loop
sbb
js
fcmovnu
lcall
imulb
xor
rorl
dec
mov
sbb
lock
cmp
adc
xlat
and
mov
and
scas
ficomps
add
sbb
push
xchg
bnd
xor
insl
cmpl
call
xchg
sub
add
test
fisttpll
or
ror
repnz
xchg
test
xchg
aam
adc
out
inc
lret
out
sbb
int
add
add
ret
cmp
ja
out
and
nop
mov
xchg
cmpsl
nop
nop
add
les
adc
shl
push
lahf
inc
pop
inc
sbbl
mov
rcll
adc
mov
in
jp
lods
push
inc
cmp
nop
push
xlat
stos
jge
orl
sub
divb
into
out
daa
mov
aad
jg
pusha
fstl
lock
fsubr
clc
cld
rolb
push
xor
cmp
mov
incb
jnp
lds
icebp
push
aam
mov
sbb
cli
mov
out
push
ljmp
cmp
out
lret
ret
sub
xchg
adc
cmc
ret
adc
jp
push
cld
pop
xchg
jle
xchg
adc
sahf
or
dec
cmp
inc
mov
test
dec
sbb
dec
out
ja
out
dec
pop
sbb
mov
adc
pushf
pop
push
movsb
adc
mov
aad
sbb
add
repz
sub
mov
out
test
mov
addr16
dec
mov
xchg
js
stc
dec
xor
in
jb
pop
jae
jns
mov
lret
popl
jno
fdiv
in
jns
mov
aas
pop
jns
and
fdivr
pushf
cwtl
or
in
mov
xchg
lret
cmp
mov
popf
jp
sub
outsb
loopne
or
ss
push
insl
cmpsl
lds
xchg
jl
js
add
stos
fs
addr16
pop
mov
sub
mov
test
icebp
pop
cmp
or
repnz
inc
outsl
fistpl
xchg
inc
jle
lret
xor
or
add
rcll
shlb
filds
lods
dec
test
out
dec
mov
mov
fldl
or
pop
push
jns
lods
mov
popf
xchg
mov
lahf
lods
mov
mov
test
push
test
lods
cmp
addr16
pop
inc
mov
xchg
cmpsl
inc
outsb
cmp
loope
mov
das
push
inc
outsb
lock
cli
mov
test
jg
mov
lret
xchg
adc
and
mov
frstor
add
mov
cmp
stos
inc
out
adc
fwait
gs
inc
fcomp
lods
ficomps
mov
or
imul
add
inc
pop
mov
call
add
dec
loope
xchg
cmp
addr16
mov
adc
jp
jge
dec
xor
dec
mov
sbb
mov
cmp
dec
rclb
sub
enter
imul
jnp
loopne
int3
push
mov
pop
call
pause
mov
aas
or
clc
leave
out
cmc
test
jbe
mov
daa
pop
mov
nop
jecxz
test
xlat
and
push
aad
dec
insl
jl
stc
out
roll
divl
popf
push
sbb
dec
mov
sub
sbb
ffreep
icebp
mov
push
mov
push
xor
mov
adc
adc
pop
aas
sub
mov
jecxz
rcll
and
nop
sbb
xor
fidivs
push
stos
outsb
in
or
mov
jmp
cmpsb
sbb
mov
mov
popf
loope
insl
test
neg
and
dec
or
popf
inc
inc
insl
jle
insl
loopne
or
xchg
sbb
nop
imul
scas
dec
movd
ljmp
rcl
fmulp
cmc
mov
dec
add
xor
mov
pop
int3
rcrl
dec
cmp
out
mov
outsl
dec
push
sub
iret
jnp
mov
lea
cld
push
dec
pusha
arpl
movl
in
cmp
xchg
fisttpll
add
mov
and
push
xor
test
loop
sbb
arpl
push
xlat
push
push
jb
dec
into
xchg
aaa
sti
cld
sbb
sub
or
cmp
adc
xlat
inc
adc
jne
and
loop
fdivrl
xlat
inc
sub
ljmp
imul
dec
iret
inc
inc
shll
das
loop
xchg
in
xor
stos
xchg
xor
jb,pt
adc
sahf
cmp
dec
jp
and
cmpb
cwtl
mov
repz
jle
and
xchg
cmc
jb
rorb
in
mov
inc
icebp
inc
lahf
mov
xchg
mov
pop
dec
out
aam
cmp
subl
in
lds
or
mov
jae
mov
mov
sub
push
jmp
aam
ss
fwait
sbb
add
fwait
imul
mov
shlb
mov
int
ljmp
or
loope
clc
in
cwtl
aaa
mov
jns
mov
arpl
out
jmp
push
lcall
out
and
sbb
xor
cwtl
fisubl
cwtl
cmpsb
mov
adc
push
mov
dec
lret
mov
jne
repz
pop
fs
loopne
push
cli
fcmovne
pop
push
movsl
fidivrl
sbb
sarl
lea
es
xchg
mov
add
cld
js
xchg
shr
or
mov
mov
rcl
cmp
ja
fnstcw
jo
and
dec
hlt
insl
std
cwtl
bswap
jo
arpl
push
mov
sbbl
aaa
xor
xchg
in
and
mov
jne
arpl
mov
xor
xchg
cmp
shlb
int3
sbb
enter
repnz
out
rcrb
aad
xor
lock
ret
cmpsb
sbb
rorb
xchg
jo
mov
dec
jp
std
popf
and
dec
xor
jne
out
xorl
sbb
jbe
push
outsb
cmpsb
sbb
add
mov
adc
aaa
xlat
and
popf
test
jno
fnstenv
call
in
mov
push
aaa
mov
xchg
in
shrb
jl
lock
dec
jecxz
jb
sub
loop
mov
shrl
or
inc
inc
in
ds
in
add
cs
popf
inc
movsl
imul
inc
push
sub
fbstp
scas
mov
movsl
ss
out
pushl
sub
sti
aad
jns
cmp
aas
mov
cmp
lods
ret
iret
cmp
xchg
fcompl
xchg
jno
inc
sbb
jo
mov
cmp
out
cmp
in
out
into
int3
loope
mov
pop
mov
repz
in
in
mov
out
add
dec
in
in
aas
push
scas
das
divb
shrl
push
imul
and
mov
loopne
push
std
ret
mov
aam
jle
std
fucomp
add
jge
dec
or
dec
loopne
xor
mov
in
movsb
push
inc
fld
inc
fs
call
sbb
loope
xor
rcll
pop
sahf
or
pop
call
push
sub
fdivp
push
pushf
daa
pop
mov
mov
ds
into
xchg
loope
js
sti
pushf
pop
insl
subl
and
adc
fbstp
sti
jmp
dec
out
mov
mov
xor
jp
or
in
bound
sbb
xchg
popf
outsb
mov
mov
ret
push
es
xor
pushl
sub
mov
mov
orb
test
sbb
or
push
jo
jl
neg
jo
push
lock
jg
inc
negb
adc
xchg
dec
add
dec
stos
out
push
and
push
clc
xor
push
sub
cmp
push
xchg
xor
or
mov
push
js
sub
and
inc
lock
ss
test
scas
pop
inc
sti
mov
fs
lods
jle
pop
rep
pop
jns
data16
shlb
sti
pop
sahf
jg
cmp
adc
mov
ss
adcl
lods
xchg
imul
inc
insb
add
xchg
inc
sub
daa
out
xor
cmp
movsb
xchg
and
mov
xchg
and
orb
pop
pop
jne
pop
mov
xchg
fisttpll
repnz
cmp
push
loop
scas
add
in
arpl
mov
add
xchg
or
jg
loopne
jl
daa
arpl
mov
xchg
fsts
in
jp
jns
push
enter
das
cmp
mov
ret
repnz
sbb
add
lret
std
push
sub
sbb
sub
or
adc
mov
pop
icebp
xchg
jecxz
cmpsb
mov
loope
jnp
int3
jo
sub
pop
xrelease
int3
je
xor
xor
enter
hlt
hlt
xchg
jno
lods
ficompl
lock
imul
push
fbstp
pop
cs
jo
lea
sti
lcall
mov
stos
cld
mov
imull
lahf
push
decb
stc
push
and
in
xchg
and
enter
and
jge
sbb
pop
push
popl
dec
pop
sbb
cmpsb
lret
xor
mov
xchg
in
push
add
sbb
loope
pop
nop
lret
lcall
push
pop
cmp
jmp
cld
mov
ljmp
push
ljmp
hlt
ss
adc
xchg
test
arpl
jmp
sbb
jl
les
add
push
aad
in
xchg
lds
xchg
ret
fidivl
les
pop
sarl
cs
sub
or
xchg
mov
je
jnp
push
insl
dec
jg
je
push
rolb
sub
sub
and
or
jecxz
pop
fdiv
jecxz
lock
ss
mov
stc
pop
sbb
mov
dec
cmp
mov
sbb
jp
movsb
push
rep
repnz
gs
ret
push
and
jno
stos
mov
xor
je
dec
push
aas
ret
lcall
movsb
jmp
xchg
flds
cmpsb
lcall
mov
mov
vpsubusb
imul
push
pop
mov
cmp
xchg
adc
mov
repz
pushl
ss
ficomps
add
and
lret
xor
adc
xor
inc
xchg
cmp
scas
xchg
bound
cmp
xchg
or
pop
sub
test
fdivs
dec
cmp
dec
cwtl
das
in
mov
cmp
fdivrp
inc
ret
cmp
scas
test
scas
pop
sahf
xchg
call
pop
out
int3
lods
fbstp
psubw
cmp
les
mov
lds
movl
in
aad
mov
or
lcall
int
fwait
in
test
and
xor
or
cltd
dec
pop
xchg
cmc
mov
xor
pop
add
ret
test
add
daa
adc
ss
jno
jge
lock
aad
aam
inc
loopne
shl
ss
stc
cwtl
inc
popa
das
sub
outsb
dec
push
xchg
push
aad
mov
sbb
fistpl
add
outsl
mov
flds
movsb
jne
mov
jecxz
jb
inc
faddl
push
xchg
lret
mov
dec
ret
add
inc
jl
push
jge
loopne
inc
test
mov
lea
xor
mov
push
outsb
js
add
xchg
jl
jmp
ret
mov
int
rcr
loop
ja
pop
call
mov
inc
es
sahf
cmp
xchg
scas
jmp
mov
popa
iret
loop
cmpsl
shr
dec
sbb
xor
sub
addr16
int
mov
shrb
sub
lods
mov
repz
mov
add
stos
int3
mov
or
popf
cmp
mov
cld
sbb
cld
mov
pop
aaa
push
mov
out
sti
pop
push
loopne
outsb
into
pop
mov
sahf
fisubl
xchg
into
les
aam
sti
xor
cs
xor
gs
mov
aas
inc
dec
mov
ror
ror
push
jp
jmp
shlb
jb
leave
pushf
push
shll
out
es
dec
adc
ljmp
jmp
push
out
popa
mov
shlb
inc
lret
cld
jbe
dec
mov
xchg
clc
pop
lods
inc
push
loope
imulb
cld
frstor
push
jecxz
mov
lcall
cltd
sahf
adc
in
mov
cmpsb
mov
pop
into
mov
mov
aaa
pop
fcoms
sub
adc
loopne
int
out
callw
inc
pop
xlat
cmpsl
xchg
scas
stc
sbb
test
mov
or
mov
fwait
int3
stos
scas
mov
xchg
pop
je
test
fisttpl
cmp
mov
shrb
ds
sbb
mov
leave
cmp
add
iret
xchg
and
mov
ss
mov
arpl
lods
sahf
and
iret
popa
sub
pop
dec
lods
std
jno
outsb
ds
std
les
xchg
lock
mov
cmp
or
mov
xchg
lcall
aam
sub
xor
std
inc
mov
or
and
jge
outsl
jge
pop
jno
adc
pop
jle
push
dec
push
sarb
and
xchg
or
test
add
jp
inc
mov
pop
inc
inc
xchg
pop
jne
shl
add
and
pop
scas
mulb
jnp
cmp
and
jns
sbb
clc
test
test
leave
cs
imulb
das
call
lods
shll
mov
push
in
pop
and
cmp
rclb
pop
stos
mov
mov
in
mov
cmpsb
xchg
xchg
pop
stc
outsb
xchg
add
aad
mov
mov
in
push
loop
push
push
add
inc
int3
jo
xor
pop
push
or
in
in
out
or
sti
mov
push
sbb
jp
addr16
aas
pop
cltd
dec
push
stc
in
arpl
jae
mov
icebp
lret
idivl
pop
ss
pusha
outsb
repz
aas
movsb
jb
lods
push
loopne,pt
xor
aas
test
adc
aam
decl
mov
adcl
mov
sub
bound
sub
and
dec
rcr
or
xorb
or
divl
iret
mov
addl
sbbl
dec
and
pushf
nop
add
in
dec
stos
repz
mov
cwtl
iret
cmp
sub
xor
xchg
fdivl
mov
jns
fildll
popa
mov
push
mov
fstps
popf
push
fcmovne
pop
out
lret
cs
push
in
into
in
push
scas
test
jne
div
mov
mov
or
dec
call
dec
divl
call
adcl
fwait
out
inc
das
int
mov
into
adc
push
mov
cmpsb
imul
mov
lret
adc
adc
sub
push
mov
jle
sbb
enter
xor
push
add
cmpl
inc
dec
out
gs
test
insb
nop
jecxz
mov
sbb
dec
outsb
xor
stos
clc
cmp
mov
int3
mov
lcall
in
into
and
dec
jl
pop
imul
push
rcr
xchg
pop
imul
sbb
stos
xchg
cmp
or
push
inc
in
sbb
icebp
inc
sbb
stos
lods
xchg
scas
add
pushf
fildll
je
inc
push
jle
mov
mov
pop
fisttpl
xchg
mov
sub
and
jae
and
adc
jp
dec
into
jmp
pop
xlat
sti
lahf
hlt
xor
dec
adc
pop
cwtl
pop
movsb
sbb
cmp
pop
lahf
sub
test
xchg
mov
or
fnstsw
icebp
or
mov
dec
cltd
sahf
in
pop
pusha
xchg
xchg
cltd
addr16
adc
cltd
xchg
mov
mov
mov
or
mov
inc
aam
push
repz
cmp
jb
sbb
mov
pop
mov
mov
test
orb
push
or
mov
into
adc
mov
sbb
ficoml
fs
add
hlt
push
xor
or
enter
adc
hlt
xchg
sbb
mov
test
push
mov
xor
fs
fldl
mov
scas
jge
cmpsb
push
cmp
inc
sub
xor
addr16
xchg
inc
rorl
lock
aam
cmp
mov
rclb
loopne
imul
add
dec
cmc
je
sbb
mov
dec
inc
iret
dec
shrl
int
xchg
inc
out
out
or
add
lret
inc
mov
sti
xor
insl
mov
dec
or
sti
mov
mov
adc
mov
enter
add
adc
imulb
fsubp
adc
aad
xlat
int
xchg
mov
push
mov
pop
inc
jmp
enter
or
mov
xchg
leave
or
push
inc
xchg
adc
cmp
lea
adc
cmp
inc
in
push
or
icebp
push
mov
iret
xchg
mov
stos
into
cld
pop
xor
push
jge
cmp
mov
pop
xor
imull
mov
pop
in
sub
popl
mul
mov
ds
les
ljmp
outsb
sub
les
imul
mov
jae
jnp
jno
xor
xor
pop
xlat
fmul
add
push
js
inc
lods
int3
pop
jmp
push
xor
pop
sub
ja
scas
add
lcall
stos
fidivrs
sub
mov
das
pop
rcll
jnp
in
xchg
nop
xchg
stos
cmp
data16
push
jle
mov
pop
cwtl
cmp
dec
jns
adc
imul
jne
mov
lock
ljmp
loop
dec
push
or
pop
les
mov
cmp
pusha
xchg
imulb
push
in
icebp
push
bound
shrl
mov
fcmovbe
dec
pop
dec
add
aam
sar
lds
fstl
add
fcoms
mov
clc
inc
rcll
or
sahf
mov
aam
cld
xor
jb
cmp
dec
mov
cli
int
add
inc
lods
mov
push
cmp
int
std
mov
ljmp
dec
sub
insl
dec
sbb
jp
mov
lcall
popf
fimull
or
dec
sub
insl
dec
sbb
jp
mov
sbb
jge
in
dec
popf
fimull
or
sbb
jge
insl
dec
sbb
jp
mov
lcall
popf
fimull
or
out
jge
sbb
xchg
sub
sbb
or
rorb
insb
stos
jl
pop
mov
cmp
int3
or
cmp
or
pop
mov
fdivrl
push
lea
mov
fimull
sbb
sub
cmp
int3
or
pop
in
call
pushf
jp
push
orl
insb
mov
ret
or
sbb
sub
cmp
repnz
jne
pop
clc
or
add
or
nop
ror
ss
das
adc
loope
repnz
in
stos
mov
jne
inc
pop
sbb
jge
sbbl
and
jno
mov
out
sbb
inc
pop
pop
mov
xchg
pop
lret
xchg
call
or
and
aad
movsl
mov
scas
rclb
mov
pop
insl
and
or
ljmp
adc
sbb
cmp
popf
jp
jne
jecxz
fiadds
ljmp
adc
iret
lock
dec
fincstp
lods
xchg
in
jp
mov
movl
in
cmc
int
call
pop
push
pop
dec
mov
mov
sbb
sub
cmp
int3
adc
and
xor
inc
mov
jp
jae
jmp
sub
cmp
dec
xchg
or
ss
in
psubusw
insb
test
scas
imul
jg
pop
nop
aas
jecxz
repz
push
repz
sub
sbb
sbb
sub
cmp
int3
or
cmp
sub
pop
mov
jp
push
lcall
jl
or
sbb
sub
cmp
int3
or
cmp
sub
pop
mov
jp
push
lcall
lods
cmc
leave
pop
xlat
cmp
or
push
xor
daa
sti
pop
daa
push
jno
out
jbe
nop
lret
fldl
fisubrl
int3
test
mov
nop
xchg
pop
mov
inc
dec
xlat
inc
das
mov
jl
mov
jno
mov
mov
outsb
nop
daa
addr16
dec
out
je
dec
adc
ss
xor
js
outsl
in
xchg
fucomip
and
iret
clc
xchg
stc
aaa
stos
inc
rcpps
mov
inc
sbbl
lahf
mov
xchg
add
add
cmc
sub
loope
mov
cmpsb
jne
ret
jl
dec
xchg
in
mov
inc
add
fisubl
in
adc
or
lret
fnstsw
jecxz
test
jmp
mov
xchg
or
shlb
dec
sub
imul
je
lahf
sub
push
mov
jmp
lahf
xabort
adc
cmp
lahf
or
test
lock
orb
adc
dec
ret
test
lds
mov
jb
inc
in
cli
and
or
rolb
mov
jmp
pop
xchg
in
lods
and
mov
stc
sub
xchg
movb
negb
fwait
and
xchg
inc
rorb
sub
push
push
adc
out
fs
push
and
cmp
jno
das
ret
push
call
xor
les
test
sub
icebp
pop
fucomp
push
insl
mov
mov
addr16
enter
pop
dec
fnsave
add
push
clc
stos
test
xchg
stc
loopne
std
push
lods
movsl
iret
jbe
add
xchg
inc
xchg
mov
jae
xor
jbe
cmc
mov
mov
fdivl
xor
rorl
mov
or
hlt
stos
xor
xchg
lock
inc
mov
je
shrl
shr
dec
push
cmpsw
jge
in
dec
xchg
movsl
jbe
shll
pop
fmull
push
sbb
push
pop
cmp
mov
jno
add
inc
jno
scas
inc
xchg
cli
div
enter
dec
pusha
push
xchg
xchg
repz
bound
pop
xor
bound
rcrl
repz
sbb
cltd
and
xor
iret
inc
pop
iret
adc
push
lcall
js
stc
cmpsl
addr16
scas
movsl
push
mov
jo
mov
mov
xchg
stos
push
push
es
inc
jb
adc
jmp
jp
cmc
mov
outsb
pop
popa
in
out
in
mov
mov
pop
jle
sbb
cmp
sti
adc
fs
xchg
in
dec
pop
outsl
fiaddl
jnp
subl
lds
fistpl
adcl
inc
idivl
iret
pop
adc
scas
sub
dec
push
sub
in
push
pop
jb
or
aam
add
popf
xlat
adc
mov
insb
enter
jle
scas
pop
insl
sti
aaa
stc
shlb
or
sbb
mov
das
pop
not
ret
test
sub
repz
add
arpl
pop
je
int
daa
sub
cmp
jl
stos
cmpsb
mov
mov
jnp
data16
push
push
subb
and
push
and
push
inc
or
adcb
insb
outsl
movsb
sub
mov
mov
xor
and
cmp
inc
pop
push
push
repnz
sub
iret
pop
jmp
mov
arpl
sub
xchg
and
mov
fistpl
out
lret
fisttpll
hlt
bound
inc
push
fldl
cmpsl
sub
loope
lcall
jns
cltd
add
test
lea
or
xor
inc
push
and
cwtl
insl
sub
dec
aaa
into
mov
fwait
out
mov
and
popa
mov
jg
mov
aad
jmp
fwait
cmp
jne
pmaddwd
jmp
inc
rorl
adc
xchg
push
test
call
mov
cmp
idivl
nop
mov
movsb
or
clc
push
jge
jb
movsb
push
movsl
xchg
sbb
test
xchg
enter
addr16
repnz
cmp
xlat
fcmovu
cs
mov
push
seto
call
dec
ljmp
rorb
or
sbb
xor
dec
into
ret
jo
je
sbb
gs
push
movsb
lods
xchg
pop
into
inc
cmpl
add
mov
adc
cmp
imul
aam
mov
sarl
jae
aaa
sub
cwtl
nop
jns
mov
cs
testl
jg
test
stc
stos
add
sbb
xlat
in
mov
xchg
xchg
mov
in
enter
sbb
test
lods
loope
hlt
mov
pushf
cmp
mov
xor
ss
subb
popa
dec
pop
loope
nop
daa
out
stos
mov
add
and
or
and
mov
into
adc
mov
sbb
dec
xor
es
mov
mov
cmp
add
or
pop
push
sti
adc
pushf
jo
repnz
cld
add
ja
cmp
clc
leave
mov
orb
pop
push
ss
push
fisttpl
adc
in
sub
lea
sahf
sub
loope
push
shl
ret
int
pop
mov
int
cwtl
es
sub
stos
mov
or
stos
aaa
push
pushf
push
sbb
cli
mov
cmc
pop
sub
push
dec
mov
popf
mov
je
adc
outsb
gs
lods
dec
fnstcw
test
popl
outsb
jns
imul
movsl
cmpsb
push
and
and
mov
fstps
add
mov
jne
inc
push
adc
push
add
mov
data16
dec
inc
lret
stos
push
imul
shll
mov
pop
fdivp
xchg
push
pop
add
lret
mov
popa
fs
push
aam
cmp
push
dec
and
scas
xchg
jle
fxch
test
pop
les
ds
sbbb
sbb
aas
aam
mov
iret
ss
add
pop
fmull
aas
inc
mov
mov
lods
sub
mov
adc
or
and
loopne
pop
into
push
mov
hlt
stc
push
dec
fs
pop
sti
adc
push
dec
daa
popf
in
fists
mov
mov
xor
insl
push
xchg
push
aad
clc
xchg
testl
cmp
pop
or
cmpsl
in
clc
fldcw
mov
fwait
out
dec
sub
cs
and
out
aad
or
sub
jns
or
imul
in
or
aaa
repz
mov
mov
cmp
fwait
adc
mov
mov
int3
out
mov
flds
push
mov
and
jecxz
mov
or
jge
insb
sub
repnz
adc
insb
clc
daa
mov
pop
mov
mov
add
pop
push
pop
int3
adc
test
jp
and
push
icebp
or
inc
ljmp
mov
out
push
ljmp
adc
add
adc
inc
push
in
fcmove
push
mov
dec
cmp
xchg
cmpl
or
cmc
sbb
int
bound
mov
mov
stc
cmp
dec
xchg
add
neg
cmp
push
std
inc
jnp
push
add
inc
mov
sbb
lret
lcall
aaa
test
jns
sub
xlat
icebp
push
pushl
sbb
pop
ret
jmp
cltd
jnp
mov
data16
cwtl
test
movsb
jnp
jo
jmp
pushf
outsb
adc
mov
not
imul
pop
or
or
inc
jmp
adc
adc
faddp
orb
cs
aaa
aad
imul
ljmp
xor
cmc
sub
fsubs
repz
jl
rorl
test
add
mov
mov
enter
push
insl
xchg
daa
mov
ret
jle
stos
xchg
dec
movsb
inc
and
or
pop
dec
popa
or
sub
into
adc
fmuls
gs
xor
loop
push
movsl
jb
pop
sub
mov
push
xchg
mov
pushf
jne
push
daa
xchg
mov
jo
cmp
dec
loopne
sbb
ja
dec
mov
adc
push
fmul
push
div
mov
out
mov
jnp
xor
push
fisttpl
inc
cld
and
into
out
xchg
repnz
das
xor
cmp
jnp
lods
mov
and
fdivrp
mov
lcall
jns
mov
or
int
ja
ret
mov
nop
fs
gs
push
mov
jecxz
sub
test
std
push
dec
addr16
in
lock
out
pop
in
mov
idivb
add
into
cmp
xchg
negb
dec
add
pop
subl
out
iret
jecxz
xchg
into
add
rcll
or
pop
test
rcrl
adc
jmp
das
arpl
movsl
push
adc
fmul
sub
cwtl
pop
mov
and
mov
jb
inc
or
push
xchg
iret
repnz
and
cmpsl
out
hlt
je
in
call
push
rcrb
hlt
mov
ljmp
xor
cmpsb
enter
cltd
loop
ja
sub
push
mov
cmp
mov
out
cmpsb
stos
gs
in
movsl
scas
idiv
ss
and
pop
mov
xchg
pop
out
mov
jge
pop
and
ret
das
dec
jnp
int3
ja
mov
mov
xchg
sub
mov
iret
notb
lahf
and
sub
cld
push
cld
mull
dec
inc
jle
mov
jmp
mov
mov
out
fs
das
loopne
pop
xchg
pop
jge
push
fdivrp
pop
pop
popf
mov
sbb
inc
jb
push
jmp
notb
pushf
stos
nop
addr16
add
inc
cmp
outsb
sbb
jge
fs
lods
xchg
aad
sub
mov
xchg
sar
push
scas
inc
jns
aaa
adc
adc
iret
test
fnclex
xchg
gs
and
lcall
cmp
scas
sbb
into
cltd
pop
jno
cltd
or
into
xchg
pusha
rcll
ret
out
iret
cld
cmpsl
xchg
fbld
push
aad
sbb
lock
out
in
into
pop
sbb
pusha
push
mov
ss
fistpl
mov
int3
mov
stc
and
loope
lret
fldenv
ss
mov
ja
loope
mov
cmpl
push
lret
adc
idivb
std
stos
inc
orb
loopne
mov
clc
cmp
sahf
ljmp
jns
hlt
or
lret
outsl
test
sbb
cmp
xchg
int3
inc
fwait
rcll
lods
mov
push
mov
mov
popf
jmp
add
inc
jg
cmp
cmp
sarb
pop
dec
loop
movsl
andb
arpl
jae
push
jo
jge
es
cmp
or
xor
and
mov
jno
push
sub
mov
pop
enter
push
and
cmp
clc
jg
push
cmp
daa
subl
aas
sub
adc
cmp
push
pop
push
lods
loopne
iret
les
pusha
jg
push
pop
adc
sub
shrl
stos
mov
fdiv
loope
in
out
mov
imul
jle
xchg
xor
pop
int3
in
jbe
out
pusha
leave
nop
lods
sbb
into
das
enter
add
testb
dec
fcom
ss
add
mov
cltd
es
xor
mov
dec
lret
out
dec
out
sub
stos
sbb
int3
loop
pop
add
dec
orl
sti
roll
out
mov
mov
into
cmpsl
jle
fs
shll
add
lods
xchg
fwait
sbb
sub
pop
mov
add
sub
cmp
inc
ds
negl
dec
mov
pop
pop
fs
push
xchg
std
mov
pop
push
ret
and
ja
aam
in
pop
ret
xchg
cmpl
sti
mov
fdivrs
jg
rcll
insl
mov
sub
pop
insb
popa
or
add
adc
in
push
test
cmpsb
imul
popa
dec
and
orb
and
sahf
ret
rcll
xor
dec
mov
mov
mov
push
pop
and
mov
call
sahf
xlat
das
sub
sub
mov
or
cmp
out
stos
sub
fstpl
popf
push
aam
dec
js
popf
lods
test
cmpsl
cmp
fisttps
dec
pop
cmp
mov
mov
outsl
repnz
inc
pop
add
int3
push
cmpsb
lret
sbb
jg
ja
stos
push
in
fcoml
imul
mov
cmc
xchg
pop
cmp
inc
pusha
into
sub
dec
and
aas
lret
iret
repnz
rclb
ror
in
sbb
mov
pop
add
loope
insb
mov
sub
adc
lods
es
lods
shrb
pop
xor
inc
mov
sub
push
ret
cmp
xchg
cmp
mov
hlt
dec
cwtl
sti
xchg
es
addl
mov
jp,pn
pop
int3
js
cmp
pop
sbbl
pop
and
dec
mov
or
mov
idivb
xor
push
xor
pushf
add
cwtl
aas
mov
in
fidivs
cwtl
fmul
std
xchg
push
outsb
xchg
adc
pop
jnp
testl
and
mov
fcoml
dec
je
push
add
call
mov
adc
fsubrs
outsl
xor
or
imulb
data16
repz
call
jg
add
sbb
cmpsb
cmpsb
xor
or
sti
add
out
fs
mov
cld
push
lahf
push
lods
sbbl
mov
xchg
imul
lods
adc
lret
dec
test
push
ret
dec
inc
pop
adc
out
sub
cmp
lahf
mov
test
jmp
sbb
mov
jle
xor
hlt
mov
movsb
jbe
or
xor
out
mov
pop
sub
rorb
imul
push
cmp
andb
mov
mov
test
cmp
fwait
and
shr
scas
lahf
pop
jae
inc
inc
jbe
xor
shll
negb
xchg
jp
sti
jo
mov
sub
sub
inc
fnstsw
dec
repz
fstpl
fwait
xchg
mov
lcall
cli
std
push
jle
dec
in
cmc
xchg
arpl
testb
adc
js
or
mov
out
xlat
mov
mov
cmp
dec
fimull
pop
add
cmp
das
mov
sahf
xchg
ljmp
xor
jecxz
sahf
cmp
inc
jl
dec
ss
shrl
shl
inc
cmpb
imull
add
aaa
test
out
push
movsb
ljmp
je
rorl
in
jne
jg
es
ljmp
push
shl
lea
xor
gs
lds
cli
sbb
push
pop
pushf
loope
push
mov
jmp
jl
sbb
sbb
pop
xchg
cld
jmp
mov
lods
test
or
sub
adc
ret
lret
fbstp
loope
pop
jno
scas
js
imul
addr16
fisubrs
dec
jns
xchg
mov
inc
inc
adc
mov
stc
jp
mov
imul
cmp
pop
lret
out
sub
push
push
ljmp
and
inc
sbb
inc
xor
pusha
mov
jb
sub
pop
pop
pop
ljmp
adc
push
idiv
pop
xor
mov
test
sub
shl
stos
xor
add
push
push
fstp
idiv
lahf
fbstp
jp
and
daa
arpl
or
xchg
out
into
jns
aas
int3
cmp
or
push
and
mov
cmp
mov
js
aad
inc
mov
call
ret
add
dec
ret
xchg
or
sarl
in
xor
movsl
or
push
sub
sub
icebp
cmpsb
enter
dec
out
sbb
test
push
xor
mov
jle,pt
mov
add
and
stc
test
push
sbb
gs
fwait
mov
or
fs
and
cld
test
imul
leave
test
out
mov
mov
push
mov
cwtl
jb
outsb
lcall
mov
je
ljmp
mov
insb
jle
cmp
mov
cmp
push
scas
ret
mov
lods
test
xchg
adc
push
out
push
out
push
ja
ljmp
xlat
xchg
cmpl
mov
pop
adcl
mov
fnclex
mov
xor
ja
push
jg
dec
sbb
cmp
cmpsl
and
dec
sarl
shlb
pop
stc
cmp
icebp
cmp
lea
sub
jno
mov
js
sbb
xor
cltd
mov
std
inc
sub
jle
cmp
jae
test
or
mull
cmpsl
js
inc
inc
cli
movl
mov
adcl
lods
fcompl
adc
xor
dec
or
xchg
jecxz
cmpsl
rcrw
xor
out
stc
sub
cmp
test
negb
sbb
divb
loopne
xchg
mov
sbb
mov
shl
negl
inc
jmp
jp
scas
add
dec
ja
js
push
lcall
fimuls
jle
or
jne
or
div
push
cmp
adc
sub
push
fiaddl
inc
xor
in
mov
rcr
lock
mov
push
or
inc
out
repnz
xlat
inc
gs
in
jp
mov
add
test
stos
adc
test
and
pop
jns
fdivs
pop
imul
and
jo
xchg
push
add
push
stos
into
lock
jmp
inc
inc
push
push
out
jnp
shl
lods
aaa
fnstenv
push
add
dec
loope
inc
sahf
cmp
inc
cs
adc
or
mov
scas
sbb
mov
sub
data16
add
fdiv
inc
nop
dec
mov
test
adc
jp
xor
inc
pop
les
movsl
lea
sti
pop
xchg
mov
mov
cmc
push
pushf
jmp
add
jnp
sbb
lcall
rcll
jl
pusha
adc
lea
dec
mov
and
push
stos
int
cmpb
sub
cmp
dec
xchg
js
add
or
movsb
mov
jnp
movsb
jno
mov
test
fsts
push
xchg
lahf
pushf
inc
ljmp
call
jle
jae
cld
ret
cli
push
xor
mov
adc
jg
sahf
sub
xchg
fwait
mov
and
and
bound
mov
cmp
out
mov
inc
push
maxps
sbb
cwtl
inc
mov
data16
andb
mull
xor
repnz
add
xor
mov
in
mov
jp
fbstp
mov
push
add
daa
ljmp
das
in
sub
outsb
test
cld
rolb
mov
pop
pop
pop
clc
mov
mov
push
je
add
jnp
jb
xchg
jle
or
lret
mov
test
and
jae
pop
daa
loop
mov
xchg
cmp
in
mov
jo
out
loop
in
int
ja
pop
int3
xlat
xor
pop
jecxz
pushf
xor
cmpsb
in
popf
ss
enter
push
aas
cmpsb
icebp
mov
cltd
cvtsd2si
push
dec
jnp
into
sub
ja
clc
dec
adc
lods
icebp
aas
jo
stc
sbb
test
xchg
mov
jge
adc
mov
mov
adc
jne
lahf
jnp
les
mov
xchg
cmp
cmc
sbb
mov
jge
fwait
inc
lea
cmp
insl
xor
jmp
pusha
jo
xchg
decl
xor
pop
inc
lahf
xor
mov
pop
test
mull
xchg
rcll
outsb
imul
rorb
stos
pop
xchg
jl
cltd
icebp
insb
push
test
mov
aaa
std
push
xchg
mov
and
mov
xor
dec
jp
enter
movsl
mov
cmp
sub
cwtl
outsb
addl
adc
xchg
ret
pop
sbb
out
pushf
ljmp
in
enter
xlat
mov
roll
repnz
jne
inc
rorb
xchg
or
scas
divb
int
sbb
mov
add
test
out
cld
das
je
stos
dec
sti
fdiv
jne
xor
popa
lahf
jge
sub
das
ret
add
ret
mov
mov
or
add
lock
jno
les
push
cmpsb
dec
push
cmp
cld
ss
xchg
xchg
dec
movsb
fisttpll
movsb
or
iret
pop
jmp
scas
ljmp
inc
test
insb
movsl
sub
mov
je,pt
pop
imull
jl
or
sbb
sub
cmp
int3
or
cmp
sub
pop
mov
jp
push
lcall
jl
or
sbb
sub
cmp
int3
or
cmp
sub
pop
mov
jp
push
lcall
jge
or
sbb
sub
or
ds
sub
pop
lea
jp
pop
mov
mov
fimull
pushf
jp
push
in
cmc
jbe
in
sub
test
inc
negl
xor
push
testb
or
add
add
add
add
add
add
filds
movb
add
insl
add
add
add
add
add
add
add
cmp
inc
add
pop
add
add
add
add
add
push
add
add
add
pop
add
add
add
add
add
addl
sbb
sub
pop
add
add
add
add
add
mov
jne
mov
xor
adc
add
add
iret
add
add
add
add
jmp
xor
mov
jecxz
xchg
add
add
jecxz
push
add
add
faddl
mov
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
cmp
add
sbb
add
pop
add
add
xchg
add
add
add
hlt
add
cmp
adc
pop
add
add
xchg
add
add
add
jnp
xor
sbb
sbb
inc
add
mov
cmp
add
add
add
enter
imul
or
jo
pop
add
stos
add
add
xchg
dec
add
add
add
adc
lret
add
add
filds
stc
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
mov
pop
add
mov
test
add
das
add
stos
add
xor
sbb
test
and
jge
into
add
jg
iret
add
add
mov
dec
add
add
add
dec
add
jmp
jbe
rolb
add
add
add
add
add
mov
fildl
sbb
mov
or
jne
or
insb
add
add
add
add
add
xor
add
add
filds
sub
and
loopne
add
or
push
add
pop
add
add
add
jnp
lret
add
add
add
pop
add
add
inc
add
add
add
add
cwtl
add
ja
xor
testb
add
add
add
add
lret
add
fildl
sbb
cwtl
add
add
add
or
add
add
testb
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
add
sbb
push
add
add
stos
add
push
add
add
inc
add
or
add
test
xchg
add
ss
add
add
add
add
add
add
lret
add
add
add
add
add
fadds
imul
add
insl
add
add
add
mov
mov
test
mov
dec
add
add
addr16
xchg
add
scas
add
add
add
add
add
add
mov
fistpll
aad
sti
or
neg
jecxz
pushf
sahf
push
repnz
data16
sub
mov
repz
sub
int3
jnp
insb
inc
xor
cmc
test
and
jae
or
fs
pusha
scas
xchg
adc
rcr
jns
mov
in
jnp
fs
in
out
push
lret
inc
test
dec
add
sbb
xchg
scas
mov
adc
sbb
stos
pop
stos
push
pop
or
dec
sub
cmpsb
imul
mov
out
lods
lahf
and
imul
jae
mov
dec
sbbl
enter
pop
pop
in
pop
dec
xchg
ret
mov
mov
movsb
mov
out
arpl
lds
inc
pop
lock
pop
test
in
je
cwtl
push
sub
jp
dec
je
imul
loope
shlb
fdivl
cmp
dec
sbbb
xchg
popf
xlat
push
and
popa
xchg
sbb
pop
out
pusha
fsubl
ja
inc
imul
add
je
inc
bnd
je
mov
test
xchg
ljmp
cmpsl
lret
jmp
shll
cwtl
aad
cwtl
cmc
stos
rcr
fistl
sub
std
aaa
xchg
lock
rorl
in
xor
les
jl
mov
pop
je
fwait
inc
inc
adcl
sub
fwait
mov
cltd
mov
push
lods
in
dec
rcl
nop
adc
sarb
fidivrl
cmp
dec
xchg
icebp
or
int
test
lahf
lcall
dec
ljmp
add
mov
mov
sub
js
test
mov
xchg
mov
jbe
insb
inc
mov
sbb
or
sbb
add
xor
sub
sub
lahf
out
mov
enter
sbb
stos
cmp
fistpl
sti
inc
aad
mov
out
mov
and
sbb
in
jae
repz
int
pop
or
fs
inc
cli
ljmp
dec
xchg
and
push
mov
jae
fistl
or
sub
mov
ds
mov
aaa
iret
xor
daa
in
xor
outsb
push
sbbl
rcrb
push
ja
test
push
frstors
jb
pop
les
ss
adc
or
xor
jl
js
jle
push
std
push
loopne
pop
sub
push
or
lahf
or
insl
in
push
aas
std
push
das
sbb
out
jle
cmc
outsl
gs
and
pop
xchg
jns
pop
enter
iret
cmp
mov
rcrl
pop
testl
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
orl
movl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
push
pushl
call
mov
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
hlt
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
movsb
hlt
add
pushf
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
hlt
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
cmc
add
mov
cmc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
testb
dec
testb
push
testb
pop
testb
testb
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
testb
cwtl
testb
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
clc
add
or
add
add
add
cld
testl
add
testl
add
testl
in
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
clc
add
dec
clc
add
pusha
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdivr
add
clc
clc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
stc
add
pushf
stc
add
movsb
stc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sar
add
fdivr
add
call
stc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
