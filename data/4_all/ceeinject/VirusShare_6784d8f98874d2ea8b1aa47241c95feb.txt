call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jne
sub
inc
or
xor
pusha
dec
cmc
mul
test
mov
movsl
jmp
jne
sub
inc
or
pop
add
test
mov
movsl
jmp
jne
sub
inc
or
pop
add
mov
lods
mov
cmp
gs
es
or
and
ret
aas
fcompl
mov
lds
mov
jns
in
push
push
repz
add
lret
push
pop
mov
dec
stc
mov
xchg
fnstcw
lea
out
and
jae
packssdw
jmp
cmc
out
and
shrb
lock
inc
jno
jl
or
xor
xor
cmc
inc
cmc
push
pop
sbb
int
xchg
roll
jns
dec
jge
mov
loopne,pn
xor
in
sbb
lds
lea
stos
cmpsl
jmp
mov
dec
int
in
ljmp
cli
sub
stc
movsb
mov
sub
sub
inc
or
pop
add
test
mov
movsl
jmp
xor
and
pop
sbb
add
inc
sbb
mov
test
mov
mov
pop
dec
add
adc
add
rclb
icebp
call
sbb
add
imul
and
dec
cmc
mov
lds
xchg
flds
sub
inc
or
pop
add
test
mov
movsl
jmp
jne
rolb
popa
lret
out
or
sbb
pushf
push
xchg
xor
xchg
in
cmp
adc
push
arpl
add
sub
cmc
mov
mov
mov
repnz
aas
push
sbb
xchg
xchg
mov
inc
fadds
jae
and
ss
repnz
and
mov
div
fnstsw
ljmp
jns
scas
scas
pop
push
sub
sub
mov
ja
adc
cmp
in
jecxz
xchg
xchg
test
add
ljmp
cld
jecxz
js
outsb
inc
xacquire
stos
je
mov
jmp
pop
or
xor
pop
dec
call
lods
mov
daa
mov
repnz
pop
or
add
jle
cwtl
xor
dec
leave
push
pushf
in
je
out
push
rcrb
adc
repz
ret
mov
or
icebp
cmpl
mov
push
enter
xor
jbe
sbb
lock
push
stos
add
lods
outsl
shrl
and
ret
fistpll
cs
les
xor
mov
mov
jp
xchg
cmp
mov
lahf
pop
dec
mov
add
or
lahf
ljmp
lds
gs
and
and
mov
dec
call
je
pop
pop
ficoms
adc
loope
int
subb
int
mov
sub
cld
pop
clc
ret
adc
xchg
cmp
shrb
xchg
loopne
and
pop
or
arpl
inc
add
add
mov
and
add
popf
xor
fdiv
inc
add
add
nop
sub
xchg
push
inc
or
and
mov
mov
xchg
sbb
xchg
cmp
fsts
imul
mov
jg
push
push
std
xchg
add
adc
or
jbe
inc
call
aam
sbb
or
sub
aas
dec
xor
push
mov
pop
add
ret
fmull
out
shr
lock
andl
enter
sbb
xchg
fcompl
lock
jmp
sbb
pop
idiv
ss
add
push
cltd
cli
aaa
xchg
pop
xchg
iret
pushf
addr16
loopne
push
and
mov
mov
aas
aad
sub
sub
cmpsb
addb
jl
push
and
mov
out
inc
mov
push
addb
in
cmc
les
jl
jp
addr16
inc
and
fldt
sub
movsb
daa
nop
inc
repz
mov
gs
inc
cltd
data16
dec
xchg
cmp
inc
fistpl
xor
in
xlat
sub
push
pop
xchg
out
pop
repnz
stc
push
stos
in
cmp
cmp
dec
je
sub
xlat
sub
test
jmp
inc
ljmp
stc
ljmp
popa
dec
insl
in
xchg
push
fmuls
mov
call
cmpl
push
mov
out
sbb
or
jb
scas
lret
inc
push
jae
or
cmp
stos
and
inc
jne
push
push
mov
mov
sti
xor
notl
daa
jno
push
cmp
cmp
cmp
dec
pop
sub
mov
jno
btr
hlt
xor
rolb
push
out
cmp
jecxz
mov
dec
cmp
push
fdivl
hlt
fcomi
pop
mov
push
cmp
std
mov
mov
fwait
lret
ja
outsb
pop
xchg
xchg
js
mov
sbb
xchg
mov
inc
leave
xchg
ljmp
testl
lcall
repnz
jne
lret
sub
mov
fdivr
ss
sbb
loope
mov
cmp
scas
xchg
pop
push
ljmp
in
mov
movl
and
cmp
jo
sarl
sbb
pop
mov
sbb
cmp
mov
pop
int
sub
ds
mov
icebp
and
mov
and
pop
mov
adcb
popa
fcomp
pop
lahf
test
scas
adcb
xor
and
xchg
xchg
jl
cmp
xchg
push
int3
push
inc
mov
dec
fwait
bound
jmp
aad
pop
fisubrl
fs
cmp
adc
and
xchg
push
inc
cmp
fistpl
add
pop
push
test
cmp
jb
add
mov
insl
aam
mov
mov
mov
dec
and
rcl
pop
daa
sahf
mov
add
sbb
fimuls
ret
js
sti
les
popf
pop
add
jb
cmp
and
push
push
push
ds
and
push
iret
push
bound
fiaddl
inc
adc
out
imul
les
das
bswap
push
imul
push
mov
xor
andl
xor
jle
dec
jo
sub
hlt
into
mov
xchg
mov
push
or
jo
aas
mov
mov
fmull
jo
push
and
pop
aaa
aad
mov
mov
repz
sbb
shll
add
xchg
mov
outsb
pop
sbbl
rcll
ret
xor
loope
stc
idivb
aaa
sbb
loopne
cmpsb
aas
push
imul
mov
push
sahf
jae
sbb
into
mov
and
sbb
cmp
cmp
adc
popf
xchg
ss
push
and
stc
nop
push
or
negl
data16
and
pop
aad
sbb
adc
cmp
jle
test
pop
aam
popf
into
and
dec
mov
call
add
cmp
negl
jbe
pop
bound
fdivrs
mov
mov
add
jae
in
mov
in
xor
and
mov
stc
cltd
in
outsl
jg
lock
jno
jnp
cltd
pop
sub
adc
filds
cmp
inc
push
lret
push
out
popf
jecxz
adc
inc
pop
and
xchg
lds
popa
imul
ja
daa
mov
icebp
inc
and
lahf
mov
pop
mov
mov
mov
outsb
ffreep
jns
subl
or
cmp
or
mov
sbb
daa
lcall
add
pop
dec
out
jnp
iret
les
xchg
cmp
test
lea
adcb
rcrb
lcall
add
dec
or
xor
pop
add
xchg
roll
loope
mov
mov
mov
int3
pop
pop
or
sahf
mov
mov
ror
xchg
add
push
movsb
mov
jb
imul
in
dec
jno
mov
adc
aaa
stos
int3
pop
rolb
cmc
dec
cltd
xchg
hlt
xchg
data16
loop
rclb
cmp
mov
cli
cmp
cmp
xor
cmp
sub
jecxz
movsb
enter
cmp
mov
push
cmp
daa
cltd
mov
fildl
icebp
dec
xchg
vrcpss
cmp
loopne
cld
loopne
jbe
cmpsb
fdivrp
mov
test
push
imul
shrb
mov
xor
and
pop
rorb
mov
insl
sbb
sbb
enter
aad
adc
dec
stos
mov
pop
jns
ljmp
test
pop
outsl
pop
xchg
push
in
pop
sub
sbb
out
mov
std
lods
aad
mov
les
xchg
push
pop
pushf
lea
mov
into
ret
rcrb
lret
repz
outsb
mov
pop
pop
pusha
inc
lea
jbe
sub
xchg
jmp
shrb
sub
pop
test
orb
enter
push
sbb
xor
xchg
or
add
clc
or
mov
adc
jno
insl
xchg
adc
pop
loopne
or
loope
xchg
lds
inc
adc
repz
pop
pop
or
and
xchg
pop
sub
mov
je
popw
xchg
repnz
add
fwait
stos
shlb
push
int3
and
pop
fisubs
xchg
cmpsl
lods
arpl
push
dec
adc
and
xchg
add
jmp
sbbl
jno
int3
cwtl
xor
aad
cmp
or
and
les
pop
lcall
ret
xor
and
or
lock
xor
adc
jns
xchg
cmc
aad
out
pop
aas
int
pusha
add
mov
push
xor
sub
shll
inc
xor
aas
dec
nop
leave
xlat
cmp
inc
lret
mov
mov
into
or
add
jecxz
clc
xchg
mov
bnd
dec
vmovntps
adc
rolb
push
or
jns
testb
dec
jl
enter
jp
test
mull
ja
fisubl
js
sub
adc
inc
test
dec
movsb
cld
and
pop
stc
iret
push
adc
ljmp
push
sbb
jne
jp
push
lods
push
outsb
mov
fcomps
inc
mov
enter
jmp
mov
push
and
das
mov
clc
lret
fnstcw
pop
xor
in
xor
xchg
js
and
sub
mov
mov
fcoms
loop
imul
mov
aas
mov
in
test
in
jb
xorl
ds
adc
shl
mov
out
aad
xchg
sbb
cld
cltd
out
jl
leave
sbb
lea
jmp
jp
adc
adc
in
inc
frstor
xchg
jmp
mov
pop
inc
orl
pushaw
ja
divl
sub
xchg
mov
popf
insb
insb
scas
je
or
or
adc
lahf
mov
ret
push
ficoml
cmpsb
rclb
and
fstp
jb
ficomps
and
add
add
ljmp
dec
rcll
sbbl
xor
test
and
push
mov
mov
or
push
mov
es
pusha
out
aam
jmp
mov
adc
dec
shrb
adc
movsb
cli
out
sahf
sti
mov
cmpl
bnd
sarl
sbb
push
add
inc
cli
xchg
mov
or
lods
pop
movsb
add
or
or
push
xchg
cmp
adc
popa
ficomps
fsubrl
dec
cwtl
jnp
jge
fs
inc
jl
ficomps
sbb
dec
mov
int3
fwait
sub
testl
cmc
jmp
push
mov
dec
jl
repz
adc
fildll
adc
push
jae
call
push
cmp
roll
loopne
cmp
fsubrl
push
jge
adc
lahf
fidivl
dec
sahf
xor
and
daa
or
and
push
clc
lods
fsubl
xchg
lock
sub
inc
push
lret
icebp
idiv
push
xor
xchg
leave
push
push
mov
fidivl
ja
nop
or
and
mov
divl
pop
ja
jbe
test
ljmp
xor
push
stos
mov
push
test
stos
outsl
dec
mov
cmp
cmp
shll
xor
xchg
test
cld
xchg
push
hlt
pop
sub
inc
in
shll
jl
in
in
hlt
lret
enter
aas
jmp
fcoms
and
mov
add
xchg
mov
jmp
cmpl
adc
pop
or
leave
add
imul
sub
cmp
mov
aaa
pusha
adc
ret
stos
ret
inc
mov
jb
jb
adc
xchg
mov
mov
repnz
in
or
inc
push
push
lods
lods
or
lahf
mov
pushf
pop
sbb
cli
idivb
push
out
arpl
and
addl
hlt
in
insl
lea
xor
jns
popa
mov
jecxz
dec
lock
leave
inc
mov
movsb
ja
mov
add
insl
call
repnz
and
outsb
mov
jae
imul
int3
and
push
pcmpeqd
pop
daa
mov
cmp
xchg
out
aas
ret
dec
mov
rcrb
jecxz
xchg
pop
jmp
inc
xor
jns
pop
xlat
mov
or
pop
cmp
jle
inc
fcoml
cmp
sar
xor
les
stc
lods
lods
sti
cmp
loopne
jle
cmc
jae
stos
int3
mov
jb
mov
repz
nop
dec
xor
cs
popf
popa
sarl
loopne
dec
mov
pop
xchg
leave
push
lret
or
mov
les
pop
inc
lock
pushf
popa
outsl
jl
pop
xor
repnz
sub
push
lods
shr
xchg
mov
adc
or
jle
sti
mov
push
outsl
add
add
jge
fsubrl
pop
sti
ret
shrl
sti
stos
or
add
add
popa
es
sbb
loop
daa
lcall
pop
xlat
fsubp
out
inc
stos
jmp
mov
dec
hlt
jmp
jge
ret
xor
pop
clc
lahf
jl
into
adc
stos
jnp
pop
jle
into
dec
js
bound
pop
mov
enter
xchg
mov
push
fdivrs
sbb
dec
cmc
jns
adc
mov
aas
scas
insb
xchg
dec
adc
outsl
xor
mov
mov
pusha
sbb
jmp
sahf
mov
xchg
push
aas
mov
cld
dec
scas
out
sub
cmp
negb
lahf
call
adc
test
cmpsb
push
outsl
in
orb
daa
mov
out
sub
popa
enter
sbb
out
jo
jnp
mov
jne
jae
dec
sbb
sub
call
sbb
and
rorb
pop
incl
and
mov
mov
add
push
call
xor
fadds
xchg
mov
push
out
cmp
icebp
sub
jge
push
test
jle
mov
mov
xor
or
xor
je
cmp
aaa
add
ret
cs
or
stos
xchg
xchg
adc
push
push
enter
out
scas
or
or
xchg
mov
or
jne
es
mov
pop
shlb
or
roll
aas
loopne
int3
nop
rclb
xor
dec
sarb
popf
mov
pop
aas
pop
daa
mov
gs
sbb
stos
xor
xorb
pop
enter
lahf
movsl
lds
sub
popa
xlat
jbe
jo
fbstp
loopne
in
addb
int3
xchg
cmp
cmp
jmp
push
pop
mov
xlat
je
pop
pushf
stc
fcomps
call
mov
shrl
decl
inc
es
in
jmp
shlb
push
add
insb
xchg
out
or
add
pop
test
idivl
mov
dec
sti
jnp
add
cli
fs
mov
add
adc
push
test
test
pop
push
shrl
push
bound
and
test
xor
xchg
out
das
pop
pop
enter
stos
mov
stos
mov
sub
outsl
arpl
xor
jo
lcall
cmpsb
push
das
outsl
ljmp
loopne
lret
pusha
sbb
cmp
xchg
adc
xor
dec
add
clc
icebp
and
jp
inc
insb
dec
mov
jge
push
movsb
jg
inc
sub
jo
add
insb
js
xor
inc
jno,pt
insl
idivl
xor
or
cwtl
bound
mov
js
ljmp
jp
jecxz
or
or
mov
add
arpl
dec
cltd
out
mov
pop
cli
out
shlb
shlb
in
adc
inc
jae
jae
scas
adc
mov
lcall
xchg
lahf
xlat
jge
inc
jns
addr16
in
test
xor
movsb
cmpsb
push
repz
gs
push
ror
aam
mov
ljmp
sbb
repz
cmpsb
fdivs
lea
and
sub
or
in
cmp
mov
cmc
fdivs
jecxz
push
sbb
mov
pop
out
enter
sbb
jmp
ljmp
pop
ljmp
xor
jl
adc
cmp
pop
cmpsl
shlb
push
pop
dec
sub
mov
iret
enter
and
cld
push
test
mov
jne
fisubrl
lret
inc
push
arpl
movl
pushl
adc
gs
inc
sahf
frstor
xchg
jg
and
std
sub
and
jl
cmp
sub
lea
xchg
xchg
cmp
scas
adc
mov
xchg
push
dec
cmp
cmp
push
outsl
stos
outsb
out
mov
mov
in
jl
or
mov
jnp
pushf
ja
xchg
lods
cltd
inc
jp
scas
adc
mov
sub
mov
dec
sbb
inc
xorl
mov
jne
mov
mov
jp
xor
xabort
push
xchg
xchg
pop
push
sub
in
sbb
xor
mov
push
mov
gs
adc
lret
loope
dec
out
inc
adc
sbb
testb
mov
push
mov
loop
inc
pop
dec
add
jge
in
pop
sub
mov
sub
push
sub
aas
sti
mov
sub
or
aaa
lods
cmp
adc
mov
outsl
in
push
pop
add
pop
dec
outsl
cmp
pop
fsub
mov
sub
mov
xor
push
or
mov
aaa
jnp
out
or
add
fucomip
jecxz
ljmp
aad
test
addr16
in
inc
loop
adc
add
xchg
xor
jne
out
push
cmp
or
js
xchg
mov
dec
fisttpll
shll
lds
mov
aam
js
or
jge
xor
sbb
dec
pop
pop
clc
jmp
add
fwait
rcrl
das
jns
cmpsl
movsb
scas
icebp
push
imulb
leave
ja
lock
leave
jl
aaa
data16
xchg
mov
sti
mov
stc
push
insb
sbb
fdivl
das
sbb
adc
xlat
xor
or
adc
push
mov
inc
pop
or
mov
loope
insl
cmc
and
push
adcl
jnp
scas
or
jne
imul
fwait
movsb
cmp
dec
sbb
cmp
fbstp
pop
insl
pop
inc
shl
dec
sub
lea
sbb
mov
sbb
pop
scas
sbbb
ret
flds
pusha
push
jbe
add
or
outsb
mov
and
std
jns
std
inc
gs
pop
aam
daa
sbb
in
dec
les
jb
inc
data16
insl
xor
cmp
jns
dec
pop
jne
test
mov
add
imul
sahf
lcall
mov
mov
jbe
lods
nop
mov
pop
addr16
divl
arpl
test
lahf
mov
mov
mov
bound
xchg
ucomiss
mov
cs
stc
mov
push
sub
ret
and
mov
dec
xchg
mov
nop
pop
out
mov
xchg
mov
out
pop
adc
shlb
loopne,pt
push
cs
into
lret
or
faddl
dec
and
pop
mov
ljmp
das
lods
mov
mov
sbb
jg
xchg
jle
leave
xchg
mov
mov
xchg
hlt
cmpsl
inc
jo
cmp
loop
lret
mov
pop
add
lret
fsubp
add
jae
pop
xlat
roll
mov
shll
sahf
aaa
xor
jg
pusha
or
imul
mov
cld
lret
cmc
push
jecxz
push
add
cmp
les
arpl
add
std
pop
fwait
mov
mov
enter
xchg
push
cltd
aas
std
addr16
adc
movsb
xor
addl
or
movsb
push
cmp
scas
scas
jg
imul
xlat
xor
stos
das
mov
add
rorb
icebp
sbb
ret
pop
arpl
movaps
out
mov
or
aad
xchg
arpl
cmp
push
mov
sbb
repnz
test
clc
ret
fistps
cmpb
popa
pop
and
jg
xor
sbb
sbb
stos
cwtl
cmpsl
and
rcll
icebp
jl
roll
test
mov
add
cmp
gs
lea
mov
test
fwait
stc
xor
int
or
push
adc
and
dec
jle
insb
sbb
cmp
cltd
or
and
or
push
and
fdivrp
fwait
adc
xchg
jl
clc
pop
or
in
push
lea
rol
stos
aam
sbb
push
fdivs
imul
loope
inc
adc
push
mov
mov
bnd
bts
insb
dec
fistpll
rol
xchg
imul
insb
packssdw
test
push
rdmsr
sbb
test
leave
and
into
nop
dec
or
cld
xor
scas
mov
dec
iret
test
ljmp
fisttpl
shrb
aam
dec
rcr
fucom
pushl
popf
pop
adc
scas
jnp
xchg
jne
xlat
mov
or
adc
push
daa
popa
pop
and
lcall
stc
scas
cmpsl
je
fcompl
movsl
sbb
aad
movsl
call
mov
xor
shrl
popf
ficomps
aaa
fs
jne
mov
xor
push
into
pop
scas
push
dec
sbb
xor
pop
add
test
mov
movsl
jmp
jne
sub
inc
or
pop
add
test
mov
movsl
jmp
jne
sub
inc
or
pop
add
test
mov
movsl
jmp
jne
sub
inc
or
pop
add
add
vcmpnle_uqss
push
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
and
sbb
in
jbe
lret
xor
and
push
pop
jo
pusha
ficoms
mov
lret
adc
and
or
cmp
push
pop
xor
add
pop
orb
push
mov
les
lret
iret
or
outsl
outsl
push
adc
sbb
push
add
pusha
aam
out
lcall
dec
add
loope
jge
sbb
aas
lods
push
pop
xor
push
xchg
sbb
nop
shrl
push
mov
mov
lahf
pop
divb
test
sbbl
in
inc
xchg
out
test
stos
pushf
mov
subl
insb
popf
sub
push
das
inc
xchg
mov
jo
push
ret
mov
ljmp
out
sub
add
push
pop
cwtl
dec
xor
cmpsl
push
push
hlt
bound
sbb
adc
testl
mov
push
aaa
cmp
add
mov
sbb
adc
push
notl
mov
loope
cld
jo
xor
stos
push
rclb
pusha
cld
xchg
mov
insb
and
push
push
ret
out
repz
cltd
lret
push
jns
jg
outsl
dec
or
add
xor
das
add
aad
shr
jmp
xchg
mov
lahf
mov
js
sbb
inc
add
add
or
mov
sti
loopne
ret
test
lock
adc
add
xor
and
push
pop
jo
pusha
mov
mov
mov
lret
adc
add
xor
and
push
pop
jo
pusha
mov
adc
xor
scas
push
push
out
mov
in
xchg
jp
mov
mov
stos
cmc
shrl
scas
divb
add
leave
mov
aam
mov
or
sbb
dec
out
fs
addl
loop
push
and
mov
jns
push
mov
adc
sbb
outsl
mov
flds
ret
xorb
sbb
test
push
jns
repnz
loope
mov
fcmovne
sbb
outsl
xlat
aaa
and
push
cmp
and
adc
xchg
cltd
out
mov
or
testb
xchg
and
movb
daa
xchg
xchg
push
inc
mov
dec
int3
pop
fidivrl
movsl
xor
sbb
and
pop
pop
push
add
leave
aaa
adc
cmp
aas
mov
pushf
cmpb
cltd
ja
add
pop
xlat
je
in
aad
sub
popf
popa
or
lahf
ficoml
lds
add
aas
add
mov
xchg
sub
add
into
pushf
in
pop
cli
sub
out
adcl
cwtl
or
call
pop
fstpl
movsb
in
push
sbb
sub
add
cmp
movsl
les
mov
shll
nop
inc
mov
roll
add
scas
sbb
add
pop
cli
es
mov
mov
pop
inc
sahf
mov
push
push
pop
imul
xchg
stc
and
cmp
aam
mov
sbb
sub
daa
mov
out
push
int3
jge
jl
and
mov
xor
lods
xchg
cli
mov
out
push
mov
mov
pop
lret
scas
mov
dec
cmpb
inc
ds
sbb
adcb
inc
cli
pusha
js
jns
aas
inc
jbe
cltd
jmp
cwtl
inc
xchg
outsl
imul
push
pop
bound
push
jne
ss
les
xchg
cmp
loope
movsb
mov
ret
int
sahf
push
shl
les
stos
cmp
sbbl
xchg
sbb
imul
mov
pop
stos
loop
sub
sub
push
scas
mov
push
push
test
lret
repz
adc
and
es
lock
fwait
insb
cmp
push
jmpw
nop
cmp
fwait
shlb
adc
xor
lock
fsubrs
jp
xor
mov
push
sub
inc
or
les
fsubrl
test
cld
movsl
jne
push
repnz
push
call
imull
shrb
rol
pushf
pop
lret
or
pop
pop
or
imul
sbb
jge
aam
push
and
cld
xorb
movsl
ljmp
xchg
add
jecxz
xor
fiadds
js
in
out
sub
fadds
and
or
sub
or
dec
jmp
mov
fwait
stos
push
ret
or
movsl
push
mov
cmp
neg
mov
push
dec
clc
adc
or
mov
push
push
cli
sub
int3
cwtl
jle
sub
sub
movsl
negb
xchg
lock
imul
mov
ret
sub
repnz
mov
push
cmp
enter
dec
pop
inc
dec
push
notb
dec
inc
or
cmp
in
cmp
cltd
sahf
xchg
lods
jno
daa
mov
test
mov
cwtl
movsb
push
dec
sbb
jbe
xor
mov
mov
and
ja
sbb
sbb
or
shlb
fmull
scas
arpl
add
lds
aaa
sbb
lock
adc
adc
and
out
pop
and
clc
push
pop
sub
sbb
dec
push
adc
leave
int3
mov
push
mov
xlat
mov
mov
jb
inc
enter
pop
ds
sub
xor
lret
push
insl
inc
and
cmc
pop
dec
pop
stc
int
or
popa
test
mov
dec
lea
std
or
ds
cmc
add
adc
mov
fwait
pop
das
dec
cmpsl
sbb
insb
jno
jbe
mov
faddl
ret
mov
filds
dec
aas
out
lods
push
inc
pop
cs
sahf
cli
into
jno
test
sarb
sahf
cli
aaa
mov
out
cld
add
sar
xchg
aad
mov
sbb
stos
fadds
dec
mov
lcall
popf
in
into
push
mov
adc
cli
inc
mov
movsl
push
adc
cli
in
out
aaa
stos
mov
push
cwtl
cmp
leave
dec
insl
imul
jae
add
xchg
and
adc
push
push
dec
or
ljmp
mov
pusha
mov
hlt
push
cmp
push
lea
sbb
xchg
cmpl
pop
pop
jecxz
mov
arpl
pop
bound
jp
ja
js,pt
xor
sub
dec
int3
mov
es
push
jo
xor
int
imul
insl
add
iret
sar
push
mov
cmpsl
add
adc
jge
movsl
mov
add
jae
or
test
pop
out
loopne
add
adc
dec
sbb
fiadds
xlat
out
loop
dec
mov
dec
adc
add
sub
sub
mov
add
stc
pushf
cmpsl
pop
and
imul
scas
jmp
push
sub
mov
mov
jl
mov
mov
jmp
jae
ret
loope
inc
in
aad
add
dec
xchg
sbb
mov
push
sbbb
push
pop
pop
add
repnz
in
lret
push
popa
cmc
xchg
pop
mov
fists
inc
cmp
push
jl
fnsave
and
inc
adc
ret
or
add
lods
in
lcall
icebp
push
mov
inc
imul
pop
shll
ret
ret
arpl
rcrl
add
add
pusha
lods
fistpll
lods
mov
nop
mul
cmp
les
lret
adc
popf
inc
mov
test
pop
cmp
test
fsts
inc
inc
push
or
jle
mov
jle
cld
ja
xchg
pusha
sarl
aaa
pop
or
and
cwtl
or
fcos
dec
mov
mov
xor
pop
scas
push
cmp
sbb
aam
mov
int3
mov
adc
sbb
aas
push
jae
je
fmuls
jb
dec
dec
leave
cs
iret
mov
dec
or
pop
into
cmpsb
add
or
outsb
sti
inc
repnz
adc
lods
cld
sarb
pusha
fsubrl
into
cli
lds
or
nop
ja
pop
lods
or
mov
movb
mov
mov
fiaddl
sub
roll
arpl
cmp
int3
aaa
pop
xor
in
loope
inc
mov
xchg
cmpsl
loop
xchg
inc
mov
dec
scas
xlat
and
push
jp
enter
icebp
push
mov
lea
ds
pop
push
fidivrs
mov
dec
pushf
test
pop
pushf
out
outsl
test
and
dec
les
out
ss
das
pop
sbb
cmpsl
jbe
fs
cmp
xchg
in
push
bound
popa
mov
fimuls
stos
cwtl
clc
mov
pop
decl
mov
mov
hlt
xchg
div
xchg
cli
mov
and
and
sub
jg
sbbb
out
cld
cld
cmpb
jo
imul
and
cmpb
cmpsb
hlt
adc
mov
dec
ljmp
in
ficoml
cmp
scas
jl
mov
mov
mov
mov
mov
jo
adc
mov
inc
out
cmp
inc
pushf
mov
inc
add
in
sub
bound
in
mov
nop
jl
stos
xor
outsb
scas
push
sub
in
in
dec
pushf
jbe
iret
mov
orl
sbb
movsb
ljmp
pop
ror
jmp
add
sub
xchg
add
das
and
sub
jnp
roll
push
cmpsl
push
insb
jb
jge
xor
pop
xchg
lahf
push
jl
mov
inc
les
daa
xor
ljmp
adc
je
adc
jge
outsb
test
jb
insl
je
add
out
neg
out
cmp
into
add
stos
icebp
mov
sub
in
mov
fwait
es
jnp
add
jecxz
lahf
xor
sbb
cmp
sbb
lea
cmp
adcl
push
shrb
sbb
or
jp
or
std
sub
jbe
inc
cmpsl
fimuls
adc
jecxz
mov
push
dec
clc
je
inc
loop
xchg
fnstenv
movsb
nop
pop
mov
cli
insb
jl
roll
mov
xorb
adc
dec
sub
cmove
add
dec
pop
rclb
dec
insl
hlt
and
pop
pop
pop
push
jmp
lahf
pop
mov
hlt
dec
push
jl
adc
rclb
push
xor
xchg
aam
mov
mov
cltd
cmpsl
push
lock
std
movsb
iret
jb
mov
aas
rolb
and
cmp
pop
je
add
sub
out
fnstcw
sub
shlb
ret
out
aad
mov
cmp
inc
pop
shrl
into
and
cld
jbe
push
shl
xchg
aad
daa
ljmp
xor
stos
jnp
outsb
mov
in
sar
ljmp
mov
fstpl
addr16
out
lods
dec
out
fnstsw
lahf
lea
cltd
cmpl
xor
push
or
mov
mov
inc
xor
xor
xchg
ret
jp
lret
imul
sti
addr16
lcall
jle
out
mov
cld
pop
and
inc
lods
out
and
xor
out
and
adc
fcmovb
pop
arpl
stos
lods
mov
xchg
sub
cmp
mov
les
or
xor
xchg
mov
fadd
imull
sub
cmpsl
test
les
pusha
adc
push
ret
outsl
mov
imul
or
or
loopne,pt
mov
idivb
pop
les
sbb
xchg
dec
mov
aaa
mov
iret
mov
test
push
pop
cmpsl
dec
lods
es
lret
mov
stos
and
xchg
idivl
bound
lea
pop
clc
arpl
les
mov
in
out
jnp
in
stc
add
xchg
or
push
clc
pop
sbb
pop
mov
lock
sub
fdivrp
mov
outsb
loope
mov
xchg
sbb
ds
sbb
sbb
jo
dec
inc
sbb
loopne
ss
mov
inc
xchg
inc
xchg
mov
push
mov
mov
rcrl
stos
mov
cwtl
xor
jmp
loope
bound
mov
mov
push
imul
mov
xchg
lret
sbb
mov
jno
xlat
pop
or
mov
adc
in
mov
cld
fabs
jecxz
andb
cmp
jb
add
cmc
push
xor
ds
insb
push
aad
adc
lods
add
jl
fdivrs
es
popa
stos
lds
mov
push
sbb
push
shll
mov
outsl
add
sbb
in
stc
inc
inc
xor
pop
clc
out
pushf
add
or
shrl
adc
sti
lock
xchg
cmp
ror
sti
or
fdivrs
test
sub
js
cwtl
push
lahf
sbb
jmp
inc
jae
test
pop
mov
xor
cmp
xchg
std
mov
and
cmp
cli
mov
es
aaa
lds
adc
inc
into
cmp
add
mov
jno
cmp
mov
cmp
xchg
lock
pop
push
arpl
xor
movsl
ret
sub
jle
sub
dec
xor
movsb
inc
or
movsb
sbbb
cs
pop
bound
jecxz
das
xchg
iret
mov
adc
popf
sub
arpl
les
das
mov
div
cmp
jmp
lret
icebp
adc
adc
sbb
sbb
inc
jns
stos
cmpsl
lods
lds
mov
and
dec
jg
add
icebp
rcll
adc
ljmp
lea
sub
aad
insl
out
push
test
pop
sbb
stos
gs
add
pop
inc
into
mov
inc
fmuls
insl
aas
je
stos
mov
test
adc
sbb
dec
movsb
and
dec
jb
sarb
lods
cmp
pop
jno
cli
xchg
push
push
mov
push
push
loope
xchg
js
xor
push
xchg
and
in
lret
inc
mov
pop
adc
out
jmp
push
xchg
adc
test
cltd
and
mov
dec
pop
mov
sub
cmp
sbb
push
cltd
repnz
inc
lds
pop
lods
xlat
sti
loopne
mov
pushf
into
jecxz
and
push
push
mov
mov
jb
aad
imul
dec
loop
cmpsb
pop
and
sub
aad
cld
outsb
rolb
mov
cmp
mov
jae
faddl
lock
xor
fs
push
push
int3
lret
push
rol
into
ret
xlat
mov
outsb
jnp
lcall
cmpsb
cltd
adc
jne
jnp
dec
lret
sbb
inc
jge
lds
movlps
jle
call
push
stc
push
clc
add
in
or
fcoms
sbb
xor
mov
fwait
inc
and
xchg
fcmovnb
cmp
cltd
xchg
rorb
sahf
dec
pop
dec
movsl
into
loope
into
xor
push
outsl
jle
les
cmpsl
dec
add
fcoml
in
or
xchg
in
pop
pushf
into
imul
adc
push
jg
cmp
jmp
sbb
popa
fistl
mov
xor
adc
pop
dec
mov
mov
clc
sbb
push
rorl
adc
xchg
xchg
mov
cmp
rorl
pminub
xor
orl
lcall
jno
cmp
lcall
push
inc
sub
pop
aad
test
jns
pop
stc
cmp
inc
fdivl
and
push
nop
inc
add
xchg
push
xchg
stc
fcmove
shl
lods
in
inc
int
sbb
add
cmp
stos
test
mov
or
sbb
es
fs
aam
cmp
inc
mov
cwtl
cmp
adc
mov
lods
or
sbb
ljmp
push
and
loope
ficoms
mov
jg
inc
adc
sbb
xchg
xchg
push
int3
fcoml
xor
or
rol
jbe
clc
je
push
cmpsb
pop
in
jo
xor
pop
dec
inc
mov
mov
out
add
in
mov
xlat
sub
ficompl
xor
js
cld
or
xchg
jge
daa
das
loope
ljmp
mov
xlat
lods
and
std
out
xchg
jl
stc
lret
lahf
in
inc
sub
sbb
dec
inc
cmp
push
mov
xchg
pushf
fistps
cmc
mov
fwait
pop
lret
out
xchg
cmp
imul
and
mov
jne
inc
aaa
insl
jl
movnti
pop
stc
jbe
push
xchg
call
jne
sahf
stc
or
inc
loope
out
pop
data16
pushf
jnp
in
xor
xor
hlt
imul
test
clc
and
arpl
or
mov
je
lahf
or
out
pop
loop
mov
cmp
ret
loope
inc
mov
mov
cmp
adc
call
cltd
repz
syscall
mov
in
xchg
pop
addr16
lret
sub
jns
cmp
xchg
inc
imul
xchg
insl
insl
and
add
lea
mov
out
mov
xchg
dec
lcall
ljmp
mov
cmpsb
cmpsl
jle
lcall
shrb
mov
stos
das
jno
jg
loope
add
je
add
xlat
push
mov
rcl
repz
mov
sbb
sub
push
in
ror
out
dec
bound
test
mov
sti
loope
daa
dec
aas
loop
mov
push
mov
inc
jg
xor
stos
or
daa
xor
jne
lret
cld
cmc
fiadds
lods
lods
loope
jp
movsl
pop
push
adc
jge
xor
push
test
fwait
movsb
sbb
xchg
push
sarb
xor
scas
ret
push
sub
lret
push
and
rcl
mov
repnz
pop
sarb
mov
mov
cmp
jmp
mov
stc
out
xchg
bound
and
mov
loop
lret
jmp
cs
xchg
or
scas
push
pop
or
xchg
pop
arpl
mov
loope
mov
popa
mov
inc
adc
sti
push
insl
jecxz
mov
mov
test
lcall
fs
xor
adc
aad
cltd
aad
adc
sub
mov
mov
jae
popf
mov
insb
ljmp
sti
pop
std
inc
sbb
xlat
sbb
add
cld
das
xchg
and
lea
push
dec
sbb
hlt
xchg
inc
pusha
cmpsl
xchg
and
ljmp
cmpsb
adc
fisttpl
and
movsl
test
les
cli
push
sub
popa
out
push
das
jecxz
or
enter
pusha
out
lret
mov
pusha
jle
or
and
insb
sbb
sbb
lods
xchg
adc
xchg
fstl
ljmp
and
cmpsb
fs
push
inc
movsb
xchg
xchg
bound
scas
dec
or
mov
sub
js
xor
dec
inc
mov
and
lods
test
loopne
mov
lahf
in
xchg
les
sub
or
jne
xor
mov
or
shlb
dec
jbe
or
jbe
mov
movsb
fbld
mov
fsubr
pop
sbb
pop
movsl
xchg
mov
mov
stc
jmp
dec
ret
int
daa
les
or
xchg
pop
cli
adc
cmpsl
gs
movsl
mov
rolb
rcrl
xor
rorb
cmpl
insb
ja
push
stos
ja
sub
xchg
mov
sbb
adc
push
xor
orb
dec
ss
aaa
mov
jae
fwait
xor
fdivrl
popa
dec
pop
lret
push
call
inc
xor
jb
xchg
xor
dec
xor
shlb
in
xchg
push
cmpsl
mov
mov
in
ret
cmpsb
inc
clc
test
jecxz
sub
aad
jge
lea
jae
je
xor
mov
in
mov
sub
and
push
add
imul
xchg
outsb
mov
test
and
or
inc
sbb
and
imul
rorb
jp
jp
je
pop
mov
push
loopne
daa
lret
xchg
or
imul
cmp
and
repz
jecxz
pop
sbb
cltd
xchg
adc
daa
repnz
fmuls
sub
xchg
fbstp
addr16
mov
rolb
mov
outsl
xchg
lret
dec
xor
nop
pop
add
outsl
dec
rorl
cmpsb
fxam
add
mov
lcall
sub
fdivl
out
stos
adc
sub
push
aad
mov
mov
push
sti
push
xchg
dec
loope
aaa
mov
sub
push
add
pop
adc
enter
frstor
inc
jecxz
lret
inc
or
fnsave
mov
out
int
push
push
enter
add
pop
pop
cld
adc
iret
jo
das
mov
dec
outsb
ret
mov
ljmp
lock
jne
sub
scas
sub
mov
subb
fs
int3
sbb
fwait
pusha
scas
and
mov
xor
aam
stos
aas
inc
aaa
mov
test
imull
sahf
scas
jns
test
jae
mov
jl
mov
mov
pushf
icebp
fnstenv
adc
push
fwait
mov
cmpsl
mov
inc
movsl
lock
xor
push
sbb
cs
les
cmpsl
es
adc
and
adc
dec
pop
dec
and
leave
jns
sub
push
lcall
jb
jp
ret
stos
mov
and
out
push
jae
std
mov
xchg
cli
inc
lahf
jbe
sbb
std
xchg
ss
xchg
mov
aam
cmp
dec
push
mov
loope
push
bound
push
movsl
outsl
rol
pop
nop
push
mov
xor
sub
xchg
shrb
dec
xchg
vmwrite
sbb
insb
clc
inc
mov
test
mov
rorl
call
mov
and
std
ds
ud0
jp
aas
xchg
jns
xchg
lcall
push
inc
call
mull
and
push
or
arpl
das
pusha
cli
pop
das
push
add
bound
sbb
mov
lret
adc
add
xor
and
push
pop
jo
pusha
mov
mov
mov
lret
adc
add
xor
and
push
pop
jo
pusha
mov
enter
shr
push
cmp
sub
ljmp
inc
pop
push
mov
add
stos
mov
fidivl
loopne
out
aad
mov
or
fsub
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
popf
cmp
sub
sbb
or
xor
dec
add
cltd
pop
stc
push
data16
fnstenv
leave
sarb
xlat
sub
sbb
or
pop
mov
dec
mov
test
pop
mov
jmp
fnstenv
leave
fisubs
into
xor
add
adc
inc
mov
mov
loopne
cld
sub
pop
cmpsb
mov
xlat
pop
stos
jl
outsb
mov
test
mov
scas
in
popf
fwait
mov
jmp
das
cmp
out
out
inc
or
push
cmpsb
jle
mov
push
cwtl
leave
jp
mov
sub
inc
scas
sub
inc
mov
scas
adc
mov
mov
pop
push
push
f2xm1
mov
addr16
pop
out
pop
mov
sub
aas
push
sub
add
insb
addr16
daa
mov
cmpl
push
sbb
push
cmpsl
and
test
jb
ja
lods
sti
push
stc
stos
mov
dec
daa
xlat
pop
test
jp
cmp
sbb
inc
pop
pushf
sbb
data16
roll
or
iret
pop
xlat
cmp
add
or
pop
scas
push
pop
mov
outsb
nop
pop
loope
icebp
daa
ret
cs
pop
cmpb
jnp
or
push
test
imul
push
xlat
inc
subb
repz
daa
lret
sub
push
int3
and
add
push
mov
in
cmpb
decl
imul
cltd
ja
pop
stc
pop
jmp
cmp
sub
sbb
or
pop
mov
inc
mov
ja
pop
stc
pop
jmp
cmp
mov
repnz
push
imul
inc
fidivrs
xchg
lcall
cmp
mov
jae
fidivs
mov
jl
inc
mov
out
popf
lock
rcrl
jmp
inc
imul
cmp
loope
sbb
or
sub
sti
fwait
hlt
sbb
insb
mov
sub
xor
cmp
repnz
xchg
fildll
mov
cmc
push
sbb
add
push
jno
movsl
pop
lods
mov
loope
jne
or
and
repz
mov
loope
adc
mov
vcvtps2dq
jecxz
cmp
stos
aaa
mov
out
int3
sbb
sbb
add
pop
push
lcall
lcall
test
ds
xlat
gs
jl
xchg
add
lret
out
sub
dec
cmc
shrb
mov
push
and
mov
fildll
out
mov
push
jg
addl
mov
insl
pusha
cmp
movl
mov
cli
imul
xor
jo
out
pusha
pusha
arpl
push
mov
adc
add
and
int3
je
test
mov
mov
sti
mov
sbb
cmp
jb
out
and
xchg
sub
pop
mov
bound
lods
jle
push
inc
mov
inc
aas
out
and
adc
mov
scas
sub
in
cmpsl
js
mov
sub
je
aam
pop
andb
lcall
inc
jecxz
and
data16
xor
bound
aam
mov
sbb
inc
mov
fcomps
sbb
mov
push
and
std
int
or
dec
jecxz
xchg
sub
or
pop
dec
pop
mov
fldt
mov
stc
mov
dec
mov
ds
pop
fdivs
in
leave
or
sub
mov
mov
push
cmp
pop
mov
gs
mov
sbb
arpl
jmp
jp
pusha
mov
jns
fwait
repz
sahf
mov
movsb
and
flds
les
ljmp
add
insl
addr16
lcall
cwtl
xchg
and
shlb
inc
loopne
cwtl
adc
mov
fmulp
jge
mov
or
xor
cmp
add
iret
jecxz
add
push
xchg
xchg
dec
fs
cmpsb
fisubrl
das
fmull
sti
dec
jmp
movsb
mov
mov
int3
scas
mov
dec
cmp
xchg
xchg
push
es
mov
xchg
repz
nop
mov
pop
sbb
ljmp
test
and
xor
outsl
jae
push
or
jmp
sbb
push
fadds
pop
out
and
je
xchg
pop
in
cmp
adc
lock
ljmp
fsubrs
sub
or
push
mov
jg
fiaddl
dec
mov
sub
mov
or
dec
int3
push
push
mov
jb
cmp
lds
iret
aam
das
mov
and
mov
js,pt
mov
movb
pop
sbb
stc
lods
mov
into
xor
xchg
mov
pusha
adc
push
or
inc
sbb
lds
pop
xchg
ficomps
sbb
adcl
outsl
imul
int
mov
xor
jb
fistl
out
xlat
ja
dec
into
fisttps
mov
insb
inc
or
add
pop
dec
and
aas
into
idiv
test
ljmp
inc
call
pusha
repz
push
xorb
cmp
xchg
negl
ja
push
repnz
faddl
jae
mov
and
pushf
test
lock
pop
add
add
push
cld
ds
dec
pop
add
push
out
dec
or
mov
fisubrs
out
pop
shrb
mov
mov
int3
bound
inc
and
adc
or
pushf
addr16
cwtl
or
xor
adc
inc
rcr
mov
jmp
mov
stc
clc
inc
and
cmpsl
sub
std
inc
sub
sub
fimull
stos
sbb
and
in
arpl
lea
orl
mov
call
sbb
mov
in
rorl
out
test
or
or
mov
adcl
lock
notb
stos
scas
dec
push
sbb
shrb
fisubs
mov
push
lret
mov
stc
movsl
int3
arpl
mov
mov
ss
ror
aaa
pop
shll
test
and
mov
sbb
imul
dec
aam
xlat
andb
jp
inc
sbb
imul
subl
stos
jbe
dec
popa
or
movsb
inc
dec
mov
add
cs
inc
xchg
dec
dec
push
lret
sbbb
mov
lea
std
xchg
nop
in
mov
jecxz
cmc
dec
les
leave
and
push
xor
pushf
ja
mov
clc
shlb
jecxz
stos
sbb
xchg
cmpsb
xor
xchg
std
xchg
lret
fwait
sete
loope
imul
jo
jg
add
in
push
andl
mov
loop
sbb
pop
out
daa
loope
cld
test
pop
or
test
jb
mov
xchg
ljmp
int
hlt
xlat
xor
int
adc
iret
cs
sbb
push
cltd
jge
jg
lock
fmulp
out
mov
pushf
xchg
jg
loopne
cmpsb
dec
adc
inc
int3
jge
mov
mov
rcll
pop
cltd
mov
ror
or
test
call
fcomps
sysexit
cmp
test
lcall
or
ds
hlt
aam
sbb
push
mov
and
cltd
jb
lret
sub
cwtl
shrb
jnp
and
cmp
push
jae
enter
ljmp
scas
xor
mov
popl
loop
andb
lretw
jecxz
adc
mov
aad
add
dec
jge
adcl
std
into
adc
sub
icebp
out
jg
fst
sar
cmpsl
test
adc
daa
gs
add
xchg
sub
xor
sub
push
lcall
and
jecxz
pop
rolb
in
sbb
loopne
mov
aad
js
int
in
and
cmp
adc
add
test
icebp
stos
addr16
notl
sub
sbb
jecxz
shrb
notl
fildl
dec
cmp
sbb
lds
or
xchg
push
ror
ret
push
mov
inc
dec
sbb
out
addr16
push
fwait
push
repz
mov
sbb
in
les
xlat
xor
fisubl
aaa
mov
and
aam
mov
inc
mov
mov
bound
pop
xor
cld
fs
or
mov
jl
and
cmp
repz
mov
jl
roll
mov
add
lret
mov
push
xor
shl
mov
lods
and
pop
add
je
shll
xchg
adc
mov
push
cmp
rcll
lock
dec
sbb
sbb
aas
gs
je
cmpsb
shrb
mov
jp
mov
bound
sbb
xlat
push
xchg
shrb
sbb
and
mov
and
popf
push
mov
mov
ds
stos
add
jg
pop
add
iret
xlat
pop
or
shrl
xchg
push
icebp
shll
aas
jnp
nop
movsb
cs
into
or
in
push
dec
in
sbb
aad
faddp
sub
sbb
dec
mov
rcr
xchg
rorl
jg
hlt
lods
je
bound
aad
inc
rcrb
or
xlat
int
pop
hlt
dec
loopne
test
les
mov
push
stos
arpl
fidivrs
mov
mov
hlt
mov
jns
fcomps
shrl
es
dec
fcoml
dec
and
stc
pop
mul
mov
loop
adc
divb
rolb
movsb
pop
cwtl
out
pop
leave
mov
stos
inc
das
daa
dec
jns
xor
cmp
jecxz
xchg
lock
add
or
jecxz
mov
inc
cmpsl
cmp
insl
imul
insl
mov
call
in
sbb
pop
cmp
xor
test
cs
ret
shl
dec
pushf
xchg
pop
test
xchg
mov
push
int3
inc
mov
testb
loope
pusha
in
lock
mov
fsubp
test
xchg
inc
ret
enter
hlt
inc
dec
push
out
inc
pop
dec
les
mov
cwtl
fldl
lret
test
lods
dec
mov
push
out
pop
lret
and
mov
xor
out
or
jno
mov
movsb
fadds
cmc
dec
push
stos
mov
pop
js
shll
sub
orl
or
adc
push
add
dec
mov
xor
push
add
inc
add
jae
cmp
and
pop
pop
mov
insl
cmp
lahf
inc
popa
cs
int
sub
stos
movsl
movsb
jmp
into
jns
ret
daa
mov
and
or
jmp
sub
lods
lods
push
daa
mov
xchg
arpl
popf
or
call
pop
jl
cmc
sti
jecxz
mov
loop
pushf
jb
je
cmp
sarb
ja
inc
pop
xor
sbb
daa
in
cltd
call
mov
repz
push
adc
scas
pop
insl
mov
out
movsl
push
into
mov
outsb
fcomps
rcll
fisttps
into
dec
fidivrl
sub
and
notb
pop
xchg
lods
stos
push
or
mov
dec
jg
mov
cld
mov
inc
dec
out
inc
mov
fwait
push
mov
jle
loopne
stc
jg
mov
push
add
sub
movsl
aaa
fistpll
mov
out
mov
pop
mov
xchg
mov
mov
sub
clc
mov
and
xchg
xchg
push
dec
lock
outsl
xchg
in
mov
int3
mov
sub
mov
sbb
addl
xor
cmc
nop
xchg
push
rcl
out
mov
xor
and
in
dec
sahf
ret
icebp
xor
and
inc
ret
jle
decb
xchg
cmpsb
sub
mov
rclb
push
jnp
enter
mov
push
out
xchg
or
rol
mov
iret
mov
xchg
ja
xor
cmpsl
mov
jb
or
cli
hlt
fisttpll
inc
loopne
and
mov
loope
lods
xor
repnz
jle
scas
cmpsb
test
out
ds
cld
inc
movsb
fsubl
dec
enter
add
in
lea
cli
imul
jno
mov
in
cld
add
es
cmc
adc
arpl
movsl
jmp
in
es
push
jbe
inc
das
jmp
xchg
shl
mov
out
xchg
xor
cmp
xor
or
mov
pslld
sti
mov
push
sbb
fwait
sbb
fildl
push
push
movsb
outsb
push
pop
dec
rcrl
fnstsw
aad
fadds
xchg
pop
mov
dec
inc
dec
mov
mov
outsb
test
notb
dec
mov
fnstcw
push
imul
mov
push
fs
in
jg
in
sub
fsubs
or
imul
lods
and
dec
mov
xchg
stc
sub
pushw
rolb
int
cmc
push
divl
cld
dec
add
adc
jp
jge
imull
jecxz
in
pop
and
popl
jnp
repz
dec
shlb
mov
push
loopne
xchg
cmc
movsb
add
popf
pop
mov
mov
adc
mov
inc
cwtl
lods
notb
movsb
cmp
mov
inc
dec
cmpsl
push
outsb
jno
stos
dec
pop
add
cmc
ret
aaa
add
jmp
ds
sbb
mov
xor
jno
or
jge
jnp
outsb
push
mov
jge
in
dec
sbb
in
inc
and
dec
cmp
fucom
iret
aad
lcall
pop
fstl
or
mov
pop
push
mov
pop
and
fwait
cmp
sbb
nop
adcl
jo
sub
insb
mov
pop
clc
sub
std
call
inc
stos
jnp
dec
mov
dec
mov
movsb
js
jle
int
lods
movsl
xchg
stos
inc
push
nop
es
push
mov
add
js
out
call
mov
std
push
das
lods
test
pop
fcmovnb
aaa
xor
inc
lret
ja
lcall
jmp
sbb
push
fmuls
mov
inc
outsl
sub
stos
cmp
mov
jne
sbb
push
sub
inc
sub
loop
sbb
unpckhps
pop
dec
fcoml
lret
jno
in
in
cli
mov
icebp
sbb
mov
dec
inc
mov
inc
lret
in
fnstsw
jae
jmp
decl
jp
out
shll
sbb
xor
arpl
jb
ljmp
lcall
mov
outsl
dec
adc
movsb
inc
adc
xchg
loope
stc
sti
and
ss
out
mov
mov
dec
loopne
mov
xchg
dec
sub
jb
lea
repz
jmp
loopne
jle
xchg
enter
adc
and
cmpsb
popa
sbb
mov
push
or
add
lahf
jae
sbb
pop
mov
push
cmpb
aam
xchg
sub
sub
ja
inc
and
test
stos
sahf
jle
push
xor
leave
jmp
mov
js
sbb
push
adc
pop
cmp
dec
lahf
jbe
data16
sub
dec
stos
cmp
pop
pop
scas
in
fdivrp
adc
jo
pop
inc
insb
ss
mov
xchg
bound
lods
pop
mov
idivb
mov
push
loope
add
mov
das
sub
lock
or
mov
xchg
aas
jno
fs
popf
repz
insb
and
test
add
enter
shlb
inc
cmc
cmp
jge
inc
loope
mov
xlat
mov
es
or
sub
xor
mov
jbe
inc
ret
roll
pop
test
icebp
mov
inc
dec
sti
or
pushf
rcrb
cli
jmp
jmp
jle,pt
xchg
sahf
xor
cld
mov
mov
cmpsl
add
enter
dec
stc
mov
sbb
bound
js
mov
cmc
rorl
push
xchg
insb
inc
lds
xor
push
mov
jno
mov
dec
jg
cmp
pushf
jae
int3
add
mov
shll
lahf
bound
aad
mov
sub
in
cmp
mov
lods
filds
jmp
adc
push
cmp
repnz
rorl
pop
mov
pop
pop
dec
mov
jo
popf
lea
push
shlb
icebp
xor
pop
aas
pusha
daa
ljmp
cmp
jne
jle
es
xor
push
xchg
mov
cli
mov
sahf
cmpsb
mov
xchg
adc
push
push
cmp
ja
aad
imul
push
and
jns
daa
dec
jns
call
jecxz
rcl
fcom
pop
aaa
mov
sub
es
push
mov
or
jo
or
gs
imul
in
ss
icebp
adc
mov
cli
adc
mov
fildl
mov
add
in
xchg
mov
cld
lods
adc
xchg
mov
jae
lds
js
sub
stc
adc
aaa
push
into
push
adc
mov
xchg
dec
js
int
cli
in
push
xor
stc
dec
rcl
lods
sti
push
inc
in
dec
or
fmul
dec
lret
bswap
push
push
bound
and
outsb
out
add
hlt
and
mov
fists
cmp
mov
jns
inc
cmp
inc
shlb
xlat
sbbl
jns
cmp
push
lret
or
jnp
imul
lock
sti
cli
lods
dec
test
or
fxam
sbb
loope
jne
clc
sub
psadbw
dec
mov
xchg
pop
idivb
cmp
dec
rolb
xchg
push
adc
xchg
not
mov
push
add
or
fwait
loope
clc
mov
inc
cmp
or
inc
mov
cmpsl
pop
sahf
je
adc
imul
imul
rolb
sahf
gs
mov
pop
aad
lret
insl
mov
repnz
sbb
clc
int
jge
push
sub
pusha
mov
and
test
enter
dec
lahf
repz
xchg
les
inc
and
add
adc
aaa
adc
lcall
sbb
out
xor
sahf
fistl
adc
bound
ret
cmp
repnz
lcall
mov
cmpb
imul
sahf
mov
mov
jno
fwait
cmp
xchg
das
cmp
test
add
das
lods
jae
xor
mov
dec
xlat
rorb
adc
test
sbb
xor
hlt
sub
cmpsl
mov
inc
add
das
pop
sub
es
mov
mull
adc
stos
es
pop
in
push
out
stc
xor
or
sbb
mov
add
jo
add
in
in
jo
dec
jbe
xchg
lret
mov
mov
mov
clc
jne
mov
lcall
push
mov
jg
pushf
jbe
lret
and
mov
vprotd
lods
imul
daa
insl
mov
xor
mulb
push
adc
push
push
cmp
cmpsb
test
cltd
mov
je
jp
jno
pop
sbb
hlt
incl
or
test
neg
imul
call
and
je
mov
ljmp
test
lahf
cs
into
mov
out
push
test
adc
test
pushf
movsl
mov
sbb
incl
test
aad
and
mov
mov
xchg
mov
insb
js
fisubrs
adc
fcmovne
mov
in
xchg
mov
aad
sbb
jbe
rcll
fisubs
cmpsl
cmp
cltd
test
fistps
mov
lahf
pop
push
daa
jl
push
ret
dec
fcomip
stos
xchg
cmpsl
mov
and
push
cmp
dec
jnp
jl
jno
aad
idivl
adc
mov
or
inc
mov
clc
rcr
iret
sub
out
scas
cmc
adc
fs
sbb
or
popf
pusha
stos
xchg
dec
add
fs
cmpl
add
jmp
adc
jle
jnp
insb
clc
aaa
dec
mov
xchg
iret
add
lret
in
cmp
ss
insl
xor
shll
or
loope
xchg
inc
clc
das
repnz
jbe
sbb
out
cmp
mov
xchg
xor
push
pop
hlt
rcr
push
pop
ja
or
mov
pop
in
sbb
ret
out
ret
adc
xchg
iret
rclb
test
fisttpll
fnstenv
dec
mov
repnz
cmpsb
sbb
push
push
outsl
mov
repz
cmp
inc
in
xor
jae
push
push
mov
xor
xor
popf
popa
mov
pop
cmc
outsl
adcb
xchg
ja
cwtl
clc
stos
xchg
xchg
out
mov
sub
imul
mov
lds
in
out
jl
sbb
pop
pop
add
insb
call
pop
iret
and
mov
xchg
pop
fnstsw
les
push
fldt
fs
loop
push
stos
or
adc
std
push
out
mov
jge
and
das
icebp
sbb
shlb
jns
out
xchg
jno
lods
mov
sbb
test
movsb
in
dec
int
movsl
sub
cld
cmp
mov
lret
std
imul
inc
arpl
mov
lock
xor
xchg
int
loop
adc
mov
cmp
add
pop
mov
shll
cmp
lret
ljmp
jno
out
inc
or
mov
adc
adc
daa
stc
dec
hlt
mov
fiadds
cmp
sbb
dec
ret
cmovl
out
fsubp
fsts
sbb
insl
push
pop
mov
mov
rcl
jae
mov
jmp
xchg
scas
fsubrl
out
in
loop
mov
adc
in
lods
mov
push
fs
and
mov
adc
movsl
pushf
jp
pop
mov
xchg
lret
pop
fs
addl
lock
in
clc
jecxz
das
imul
push
fstpl
mov
xchg
sbbb
stc
xor
inc
stc
xor
notb
dec
adc
pop
mov
out
jmp
inc
pop
inc
pop
pop
inc
push
dec
mov
imulb
jp
lcall
mov
ret
xchg
fs
cwtl
xlat
mov
ja
mov
inc
xor
xor
iret
fwait
vandps
cvtps2pi
or
sub
sub
jns
imul
cltd
ja
pop
stc
pop
jmp
cmp
sub
sbb
or
pop
mov
inc
mov
ja
pop
stc
pop
jmp
cmp
sub
sbb
or
pop
mov
inc
mov
ja
pop
stc
adc
daa
fldl
int
cmp
testl
daa
pop
aaa
mov
cltd
ja
jo
lahf
xchg
fsubs
pusha
daa
push
pop
inc
pop
std
push
push
or
or
mov
stos
rolb
mov
jo
pusha
daa
push
pop
inc
pop
xor
adc
inc
lock
cmpsl
shlb
mov
jo
pusha
daa
push
cmovo
xor
jg
dec
add
push
ret
popf
mov
mov
mov
sub
dec
push
arpl
stc
cwtl
stos
mov
xchg
cmp
sub
xchg
add
hlt
sbb
fcmovnb
sub
or
mov
cltd
out
iret
or
xchg
xchg
mov
mov
enter
dec
xor
addr16
and
lock
loopne
fucom
cmc
sub
daa
cmp
inc
aaa
pop
push
xor
mov
ja,pn
js
movsb
loopne
adc
lods
jo
out
push
and
sbb
mov
push
sarb
push
xlat
cmpl
xchg
pop
lret
int3
repnz
rolb
cmpsl
mov
mov
sub
loopne
sub
xlat
mov
pop
inc
sbb
adc
pop
lock
loopne
rorb
mov
mov
cmp
sub
xor
push
or
sub
fiadds
call
repz
stos
adc
addr16
xor
sub
jecxz
les
mov
pusha
inc
aas
jbe
jb
sbb
adc
inc
lock
cmpsl
rclb
mov
jo
pusha
daa
push
pop
inc
pop
xor
adc
inc
lock
cmpsl
rclb
mov
jo
inc
mov
into
dec
and
sti
jmp
scas
xchg
ror
rcrl
ror
inc
cli
mov
adc
fwait
scas
ret
enter
lret
stc
jp
mov
das
jmp
dec
xchg
jg
jbe
fisubrs
jb
mov
sub
adc
arpl
out
jecxz
or
cwtl
cmpsl
sbb
addr16
or
ds
adc
nop
cmp
aad
pop
add
aad
rol
mov
notl
cmp
xchg
ret
add
or
or
or
bound
mov
push
ljmp
push
cmp
mov
mov
imul
inc
mov
es
adc
test
inc
adc
push
loop
orb
sbb
out
sarl
es
add
sbb
rclb
push
imul
xor
dec
lret
mov
cmp
dec
and
mov
sti
je
and
xlat
outsl
stos
into
push
loopne
mov
push
sub
mov
pop
add
cmp
mov
cld
sbb
nop
jbe
mov
cmp
adc
push
mov
bound
mov
xchg
lret
xlat
lahf
sbb
or
call
aas
mov
xchg
nop
mov
sub
addr16
add
add
ljmp
lock
lock
add
insb
fnstenv
adc
call
mov
sub
add
adc
push
pop
and
push
out
mov
sbb
out
dec
div
les
dec
push
pushf
add
push
mov
lods
sbb
mul
sub
call
xor
cmpsb
es
setg
mov
mov
mov
loopne
mov
adc
lret
fs
hlt
test
data16
gs
jno
xor
cwtl
push
outsl
dec
fmuls
push
mov
dec
iret
in
xlat
pop
fcomps
int3
add
pop
popf
out
add
mov
jle
bound
add
pusha
ret
bound
mulb
shl
aaa
jo
test
add
stos
outsb
iret
jmp
pop
sub
push
inc
aam
stos
lock
mov
dec
jp
lods
out
lea
mov
or
call
xor
movsb
jle
jb
popa
add
pop
test
mov
daa
cmc
mov
cmpsl
dec
sbb
push
dec
adcb
sub
or
pusha
aaa
lods
leave
outsl
pusha
rclb
adc
mov
sti
mov
out
xchg
ret
aam
call
add
cmp
ss
pop
jns
cwtl
sbbl
cli
lahf
sbbl
shrl
fnstcw
pop
shr
xchg
cmp
mov
xchg
ds
xchg
aad
nop
mov
ss
xchg
mov
xchg
fcmovu
das
stos
sub
add
push
mov
movsl
pop
mov
out
out
addl
pop
arpl
xchg
enter
mov
xor
movl
add
fstpt
sub
arpl
mov
mov
shr
aaa
push
cmp
leave
testb
fwait
ja
adc
and
addr16
js
jl
in
idivl
dec
xchg
pop
mov
mov
clc
nop
pop
inc
in
add
sbb
fadds
sbbl
and
arpl
pop
add
ljmp
mov
daa
xor
nop
mov
imul
data16
lock
or
xchg
mov
jbe
and
icebp
xchg
add
and
xchg
jl
dec
inc
out
imul
andl
lret
sahf
xor
mov
jmp
cmpsb
sbb
xor
mov
or
or
pop
das
aad
int3
xor
xor
rolb
ja
shrb
or
or
jo
mov
mov
mov
push
jmp
adc
mov
es
mov
lods
xchg
testl
mov
stc
int3
sub
xchg
mov
insb
pop
jecxz
orl
imul
mov
push
cmp
add
mov
aaa
sbb
lret
aas
cmpsb
adc
lock
loop
mov
xchg
push
loopne
add
in
cmpsb
push
pop
adc
mov
and
adc
ljmp
xchg
mov
jae
mov
cs
ja
andb
sub
mov
push
jle
movsl
lea
mov
cvtps2pi
mov
out
mov
adc
and
dec
cld
inc
pop
xor
movsl
xchg
adcb
sti
jo
add
mov
pop
xchg
xor
ds
add
mov
cmp
or
dec
or
xlat
sub
pmaxub
cwtl
cmp
jp
pop
pop
inc
mov
xchg
sbbb
push
rolb
sbb
xor
addb
push
nop
mov
jl
into
icebp
sub
out
or
movsb
mov
outsl
es
fisubl
adc
inc
shrb
rcr
xor
mov
loop
pop
xchg
aad
dec
repnz
sub
repnz
out
leave
adc
jge
pop
shlb
mov
dec
lds
fmul
sar
mov
mov
mov
jmp
ljmp
push
lcall
jno
or
jle
sub
js
xor
dec
in
sbb
lret
mov
es
lock
rclb
in
mov
rcll
add
loop
cltd
xor
push
dec
out
out
jae
test
sbb
aad
mov
dec
and
fadds
sub
sub
inc
inc
jle
jno
adc
pop
out
out
repz
push
push
pushf
mov
test
scas
mov
push
fiadds
or
mov
hlt
dec
or
in
cmpsl
dec
js
filds
or
inc
fmull
movsb
lret
fistpl
adc
add
xchg
mov
push
jne
push
add
mov
stos
jo
jmp
add
push
jb
sahf
mov
sbb
mov
mov
loope
test
jno
repnz
stos
lcall
jg
or
mov
fistl
outsb
cmpsb
movsb
add
pop
in
loopne
loop
ja
cmpsb
movsb
repz
std
aas
inc
sbb
loopne
pop
lock
imul
mov
jg
sbb
cltd
mov
out
add
mov
mov
dec
adc
mov
mov
into
loop
add
xchg
shl
xor
stc
cmp
cmpsb
aam
icebp
fwait
lock
ror
xchg
sahf
stos
les
jo
cmp
sbb
jp
les
and
inc
and
jo
mov
pop
sbb
sub
movsl
xor
dec
scas
cmpsl
mov
mov
mov
xchg
adc
lcall
mov
int
sbb
pop
lret
add
stos
int3
push
xor
fsubs
xchg
mov
insl
mov
pop
orl
mov
mov
icebp
sub
clc
cmpsl
mov
outsb
rorl
popa
std
jns
sbb
cli
inc
pop
enter
loope
jae
mov
mov
outsl
inc
loope
rolb
inc
jns
pop
mov
mov
xorl
add
xor
inc
int
mov
in
cltd
mov
push
insb
sbb
outsl
lods
fistpl
aad
insb
hlt
mull
xchg
jne
loopne
add
std
push
sub
mov
std
mov
scas
mov
cld
icebp
xchg
stos
sub
push
out
push
loopne
out
xchg
stos
cmp
addl
add
test
xor
not
pop
xor
fiadds
xor
sub
ds
call
push
pop
push
popf
mov
pop
addr16
cmp
jae
push
test
xor
mov
fisubrs
mov
push
ja
into
scas
push
jne
add
lods
lods
rorb
das
sbb
in
stc
sub
mov
mov
sbb
pop
ljmp
jg
fldcw
and
sub
inc
jns
mov
test
cmp
imul
sti
dec
test
iret
mov
aam
fcompl
cltd
or
jmp
nop
cltd
mov
or
cmc
sbb
imul
cmp
mov
and
les
dec
xor
sbb
or
cmp
nop
xor
pop
and
sbb
adc
in
out
mov
scas
sub
jecxz
stos
pop
mov
xchg
les
test
aad
popf
add
iret
je
bound
sub
mov
adc
vhsubpd
lret
cmp
loopne
push
pop
leave
inc
xchg
and
imul
mov
shl
push
pop
mov
mov
cmc
mov
push
xor
adc
hlt
jo
subb
js
adc
sbb
mov
sbb
mov
dec
lret
shll
jb
iret
xchg
ss
ror
sti
mov
push
in
popf
mov
shr
andl
push
stc
jge
mov
lret
push
xorb
ljmp
test
or
sub
lahf
add
add
xor
out
push
jbe
lret
das
ss
loopne
in
dec
jne
adc
jae
in
pop
fwait
hlt
jbe
xlat
sub
pop
stc
xchg
sub
mov
nop
shlb
or
push
ljmp
mov
subl
mov
add
pop
fsub
decb
sub
rcrb
push
lods
sub
push
loope
mov
mov
mov
cld
sbb
in
or
es
fbstp
pop
sbb
and
loope
push
dec
sub
pusha
lcall
ds
xchg
push
aad
pushf
mov
insl
lcall
add
sbb
subl
push
xor
lock
pop
pop
in
mov
repz
cmc
jno
pop
push
mov
aad
das
cld
cli
add
mov
pop
rorl
mov
les
push
dec
popa
add
mov
insb
fwait
incl
mov
mov
lock
mov
xchg
repz
xor
jno
mov
push
mov
iret
push
enter
sub
loop
mov
jmp
pop
ret
shlb
fsubs
pop
out
aam
dec
int
add
add
pushf
push
xchg
add
mov
adc
data16
fsubs
inc
sbb
jne
cmp
jmp
cmpsl
mov
mov
sahf
push
inc
or
jl
jp
mov
or
jnp
mov
or
or
mov
rorl
pop
rol
xchg
movsl
in
inc
add
adc
mov
add
or
jnp
xchg
jle,pn
dec
loopne
imul
pop
push
sahf
jp
mov
orb
ds
mov
into
push
mov
icebp
xor
cmp
addb
aad
push
daa
cmp
fs
jge
mov
push
pushf
shl
mov
dec
jg
jns
cmp
shr
mov
sar
adcb
in
fwait
push
lds
dec
cmpsl
mov
dec
xchg
mov
sbb
cltd
xor
shl
cli
sbb
dec
dec
ja
pop
test
push
cmc
jle
pushf
sub
aam
jo
je
xor
sub
or
and
pushf
and
sarb
or
out
out
aas
add
clc
dec
fsubrs
push
pop
dec
jecxz
insl
push
mov
rorb
incb
in
mov
pushf
stos
sub
test
xchg
xchg
scas
ja
cmp
dec
xor
aad
sbb
sbb
jb
jmp
mov
add
sbb
sti
jg
cmp
jl
inc
dec
jl
push
imul
sbb
mov
mov
loope
loopne
mov
sbb
pop
jno
inc
sbb
cmpsb
int
jnp
ja
pop
add
mov
test
inc
sbb
pop
mov
dec
mov
in
fildl
cmc
ret
std
jl
cld
ss
dec
test
pop
pusha
jmp
dec
cltd
push
imul
cmp
xchg
out
sub
jbe
cmp
scas
xchg
mov
pop
enter
inc
cmp
dec
cs
jle
xor
xor
adc
daa
rorb
add
clc
xchg
xor
stos
mov
add
push
inc
pop
xchg
aam
sub
add
sub
sub
lret
pop
dec
or
pop
icebp
pop
cmp
push
xchg
mov
inc
dec
add
fistpll
xchg
pop
add
mov
cmp
xchg
into
dec
sbb
loop
dec
fimull
xchg
cli
rcrb
rcrb
jle
in
jno
inc
xchg
mov
jge
imull
add
add
sbb
push
push
cli
lock
dec
mov
adc
pop
xor
outsl
int3
mov
popf
je
je
pop
mov
jmp
cmp
adc
adc
or
lret
lods
dec
jecxz
mov
jae
scas
addr16
mov
test
cld
sub
sbb
sbb
sarl
bound
cmp
mov
cli
mov
in
inc
movsb
or
jl
scas
pop
jae
gs
fnsave
adc
add
adc
stos
jp
mov
aas
adc
aam
lret
lds
push
jmp
mov
sbb
in
cmp
jnp
gs
lret
pop
cmp
cld
movsb
dec
fsubl
pop
mov
dec
push
xor
mov
cmp
xchg
out
adc
cmpl
enter
movsl
push
mov
xchg
les
xchg
fnstsw
fadd
xor
movsl
mov
jnp
or
loopne
mov
inc
inc
xchg
imul
push
dec
inc
aad
daa
out
jg
clc
lret
pop
pop
data16
push
ret
test
popa
repnz
xchg
outsb
inc
jmp
cwtl
je
inc
movsl
addr16
gs
stos
cmc
cmpsb
cli
iret
in
jp
push
pop
daa
je
xchg
sub
jo
nop
sbb
pop
rorb
in
negl
jns
sahf
fildl
lret
xor
push
mov
rol
out
fwait
fwait
loopne
wrmsr
sub
sbb
fmuls
dec
cwtl
pusha
roll
pop
roll
mov
aad
in
push
cmp
js
cmp
mov
pop
mov
cmp
sub
sub
insb
pop
sub
nop
outsb
jmp
sti
adc
scas
xor
cmp
xchg
jno
mov
jnp
cmp
imul
insb
nop
loop
push
sbb
jmp
out
adc
dec
fs
scas
in
adc
mov
fiaddl
scas
jp
xchg
mov
cs
insl
scas
mov
jae
xchg
xlat
mov
xor
aam
mov
fbld
std
inc
sub
adc
push
mov
test
push
test
fmuls
out
push
addb
mov
insb
mov
insb
mov
inc
shll
or
movsb
addr16
adcl
adc
mov
mov
dec
xor
xchg
int
roll
ja
sub
ds
fnstsw
cmpsb
mov
cmpsb
out
or
and
push
pushf
in
addr16
mov
aas
jl
fs
in
fstl
adc
xchg
pop
repnz
mov
push
push
fidivl
mov
insb
xchg
inc
mov
es
jl
mov
inc
lds
call
movsl
sahf
pop
inc
pop
and
sub
and
fcomip
mov
sbb
aad
pop
dec
adc
or
insl
mov
mov
sub
jnp
sbbb
movsb
cmpsb
jg
mov
scas
pop
pop
test
dec
lret
out
and
in
call
push
pusha
jp
push
pop
xchg
stos
mov
cmpsl
inc
xor
addr16
int3
cltd
fdivp
ret
push
mov
nop
adc
inc
addr16
sub
insl
dec
mov
push
dec
inc
push
sub
lock
shlb
and
nop
dec
add
inc
inc
jns
push
xlat
orl
inc
xchg
or
mov
inc
roll
pop
jbe
cmp
and
pop
in
gs
popa
xor
jno
lret
sbb
int3
scas
push
xchg
sub
mov
aad
xor
test
push
rcll
add
jb
fxch
fistps
and
int
shll
cltd
incb
insl
push
and
cmp
inc
push
cmp
lahf
or
das
faddp
andl
shll
push
aaa
ljmp
xor
test
fs
xor
adc
add
cmp
test
mov
jg
push
jmp
into
test
loop
xchg
dec
pop
lea
and
mov
xchg
repz
mov
or
sbb
subb
jnp
push
push
mov
jo
mov
xlat
ljmp
ja
pop
cmpsb
or
add
mov
mov
push
dec
out
and
aad
int3
outsl
xlat
int3
popa
sbb
mov
or
in
xlat
add
sti
mov
pop
dec
stos
adc
cmp
loope
lcall
sub
lea
mov
xor
ja
sti
sub
pop
jmp
addl
xchg
mov
inc
jb
mov
mov
enter
in
subb
ss
xor
cmpsl
inc
add
adc
jp
enter
cld
push
or
aas
cmp
fldenv
mov
fsubs
movsb
outsl
cmpsb
ret
fsubl
mov
insl
in
add
pop
xchg
daa
push
sub
and
imul
pop
repz
and
cld
inc
loope
enter
and
push
mov
sub
stos
sbb
inc
lahf
xchg
popa
cmp
pop
outsb
xchg
mov
into
test
repz
jp
ljmp
push
fwait
sbb
jne
pop
popa
push
daa
lods
mov
adc
push
pop
repnz
mov
arpl
sti
les
bound
loope
sub
xchg
adc
mov
mov
add
sub
fildl
mov
clc
cltd
dec
jp
es
or
xchg
dec
sub
pop
add
xor
cmp
adc
sub
popa
sub
push
pop
cmpsb
inc
push
inc
imul
jne
movsl
loopne
aad
nop
inc
cmc
inc
add
mov
loopne
add
jne
cmp
loopne
mov
bound
push
and
hlt
xor
push
fisttpl
jg
cmp
ret
mov
cmpsl
dec
shl
dec
xchg
bound
ret
lds
hlt
stos
sub
loope
jo
pop
subb
mov
imul
in
lcall
jge
jns
push
push
jmp
fstl
fisubl
xchg
out
xchg
jo,pn
in
dec
fidivrl
js
je
fsubl
and
ret
dec
mov
cltd
mov
xchg
and
faddl
push
sub
aam
repz
pop
push
pop
loopne
cmp
mov
or
pop
push
or
jns
mov
leave
xor
aas
xor
or
xchg
mov
mov
jo
add
in
xchg
gs
rclb
ljmp
xchg
pop
xchg
xor
push
ja
or
dec
inc
out
dec
daa
jae
fcomp
loope
outsb
jmp
stc
mov
stos
scas
pop
out
inc
movsb
sti
out
test
bnd
push
ss
mov
ret
pop
daa
or
int3
mov
mov
test
and
dec
pop
out
lods
adc
movsl
or
push
loop
in
repnz
test
sarl
lahf
adc
push
cli
stc
cmpsb
inc
add
cmp
push
icebp
xchg
lcall
mov
and
insl
sub
in
and
dec
push
mov
outsl
add
mov
or
rcrb
andb
mov
lds
xchg
xlat
dec
in
cmp
test
pop
or
jl
pop
xchg
mov
xchg
sarl
in
push
lcall
leave
pop
jns
ss
or
push
mov
jmp
sbb
push
cmp
fadd
cmp
aas
and
lds
or
xchg
jno
xlat
push
scas
daa
mov
sub
leave
add
mov
sbb
inc
sub
mov
pop
adc
ret
repz
dec
adc
or
push
fldenv
push
mov
push
insl
push
in
mov
sbb
mov
lods
xchg
or
jge
addl
push
jl
movsb
inc
sub
xorb
bound
and
stos
push
sub
sbbb
dec
jne
pushl
push
daa
push
clc
inc
pop
xor
adc
inc
lock
cmpsl
rclb
mov
jo
pusha
daa
push
pop
inc
pop
xor
adc
inc
lock
cmpsl
rclb
mov
jo
loopne
rclb
inc
pop
mov
and
push
addb
loopne
rclb
mov
jo
pusha
daa
push
pop
inc
pop
xor
adc
inc
lock
or
sarb
loopne
lock
repz
jecxz
xchg
in
mov
push
cmp
jae
arpl
jns
pop
xor
stos
sarl
jecxz
xchg
sti
or
or
arpl
dec
add
pop
and
repz
xchg
jecxz
shll
sbb
push
add
imul
pop
push
or
ret
mov
xchg
in
push
sti
inc
or
rclb
jae
xor
adc
fistl
fildl
loop
sbb
imul
dec
mov
adc
divl
bound
shrl
dec
xor
js
fisttpll
inc
mov
and
mov
imul
xor
pop
and
repnz
xchg
xor
mov
in
xchg
inc
jnp
ror
add
dec
ss
push
and
jecxz
xchg
sub
std
inc
or
jnp
mov
dec
jae
push
pop
cmp
repnz
adc
stc
cmpb
shll
aam
mov
jbe
dec
arpl
in
sub
dec
es
and
mov
jecxz
xchg
jmp
lret
mov
mov
adc
arpl
arpl
push
xor
mov
out
movsl
cwtl
cld
popf
ret
fcmovnbe
sub
push
sub
jg
imul
cmp
fimull
xchg
sti
lods
lret
fmull
das
or
adc
aas
dec
into
adc
out
repz
mov
mov
mov
or
arpl
jnp
dec
xor
stos
sarl
jecxz
xchg
sti
or
or
arpl
jnp
dec
xor
stos
rcll
xchg
xchg
leave
in
fisttpll
dec
jnp
out
push
and
add
xor
or
out
xchg
adc
mull
out
lods
jbe
dec
cmp
push
sub
aam
sbb
add
mov
andl
mov
ss
adc
pop
icebp
shlb
cmpsl
jge
inc
movsb
pop
push
arpl
inc
pop
lcall
and
movsb
ljmp
mov
push
enter
jbe
insb
jecxz
jge
frstpm(287
xchg
enter
mov
xchg
pop
pop
sbb
pop
loope
xchg
cmp
mov
test
fs
dec
inc
mov
cmp
xchg
mov
js
jae
inc
sbb
ffreep
push
outsl
notl
cwtl
in
imul
mov
movsl
or
mov
adc
or
sbb
out
sbb
sub
fmuls
sub
or
xorl
call
push
and
push
add
ljmp
std
mov
sbb
addr16
inc
jne
mov
rcrl
cli
insb
pop
inc
add
xchg
sbb
shlb
and
pop
pop
mov
fcoml
adc
jae
int
ds
test
bound
xor
std
mov
dec
insl
inc
mov
push
mov
out
loope
jnp
jb
inc
add
inc
in
mov
cwtl
push
sbb
popa
xor
xor
decl
cmpsb
dec
iret
lahf
repz
mov
adc
jns
or
leave
jns
cmp
ds
mov
mov
jb
js
push
mov
setnp
pushf
jle
cwtl
rclb
das
std
or
out
xor
arpl
int
aad
cmp
movsb
lock
push
add
fs
and
mov
cmpsb
adc
xchg
jns
sub
or
or
test
cmpsb
xlat
fisubrl
outsl
jns
in
lea
les
fidivs
pop
xor
addl
dec
xrelease
jno
sub
lcall
sbb
rorb
sub
loope
mov
adc
or
mov
sub
dec
pop
icebp
out
icebp
sbb
xor
jle
mov
xorl
and
popa
out
mov
fadd
adc
sbb
imul
jnp
sub
cmp
nop
cmp
xchg
in
hlt
mov
aam
sahf
lahf
cld
add
mov
cmpsl
push
mov
imul
adc
pop
cwtl
xchg
mov
jle
xchg
or
repnz
nop
cmc
andl
dec
dec
mov
xor
stos
mov
ficoms
mov
xor
shll
jno
mov
xchg
mov
test
or
pop
cmp
leave
jnp
movsb
fidivs
outsb
sbb
xchg
js
nop
test
xor
repz
adc
ss
lock
insl
pusha
jge
fstpt
mov
daa
dec
xor
cmp
mov
flds
int3
in
lret
inc
out
cmp
scas
notl
test
insl
rorl
in
adc
clc
sub
mov
into
or
cs
jle
in
ret
mov
xchg
jmp
in
std
push
xchg
daa
rcll
pop
test
jno
jg
mov
sahf
or
jbe
mov
dec
push
push
xchg
and
insl
idivl
out
inc
xlat
movb
pusha
pop
or
push
sti
xchg
jl
push
push
jecxz
in
inc
mov
lods
sarl
iret
das
jb
push
setne
imul
mov
test
cmpsl
test
jp
scas
call
jle
xor
cmp
xor
cmp
dec
jecxz
pop
lea
adc
add
and
sbb
rcll
lcall
xchg
fistps
add
mov
pop
int
scas
pop
scas
aas
test
les
aaa
decl
push
sarb
xor
inc
mov
inc
mov
jp
je
mov
inc
test
push
dec
sbb
fidivrs
into
jbe
xor
xchg
repnz
in
mull
sbb
ds
stc
shll
mov
mov
and
jnp
mov
inc
out
dec
stc
std
out
and
sbb
es
lds
stos
lods
and
cmp
out
scas
jmp
push
or
loopne
xorb
jae
push
test
inc
dec
push
lea
sbb
fstpt
in
adc
jl
mov
lods
in
jae
adc
pop
xor
loop
push
inc
and
mov
mov
jb
mov
sarl
pusha
dec
sbbl
xchg
mov
fcmovnbe
test
addr16
adc
clc
flds
cmc
insb
cmp
test
imul
nop
int
or
push
jbe
pushf
scas
cmpl
imul
mov
jle
jbe
or
cmpsb
in
push
mov
shl
or
push
fsubrs
cwtl
jo
ret
lcall
addb
scas
insb
test
push
add
dec
popf
nop
push
nop
push
jecxz
adc
mov
jmp
out
ret
aam
loop
push
sub
scas
out
cmp
rcl
loop
and
adc
mov
push
mov
dec
add
bound
in
mov
pop
push
mov
out
loopne
in
mov
or
cli
inc
mov
mov
cli
push
mov
and
daa
fiadds
push
bnd
rcll
stos
xor
lea
rcl
int3
lret
mull
lock
cmp
pop
test
push
add
test
div
jne,pt
out
xor
orb
aaa
aam
loope
pusha
mov
int
fwait
inc
mov
inc
mov
push
sub
sti
push
xchg
daa
mov
lea
mov
mov
add
mov
xor
xor
daa
ds
mov
testb
xor
leave
clc
mov
inc
or
xchg
or
mov
jmp
sbb
push
add
mov
pop
out
xchg
je
push
cmpsb
pop
add
in
adc
pop
negl
fcomip
dec
lcall
je
xlat
mov
outsl
or
jg
mov
push
and
xchg
or
push
addr16
sarb
ljmp
data16
stc
rcrb
outsl
cld
inc
lret
pop
call
hlt
sub
mov
pop
mov
xchg
xor
pop
ljmp
js
test
pushf
mov
fwait
mov
xor
iret
jb
iret
andb
cs
mov
push
xor
es
jb
cmp
fs
lds
jle
test
sbb
push
mov
outsl
dec
pop
push
adc
or
mov
sub
shlb
sbb
adc
movsl
xor
dec
loope
mov
stos
outsl
adc
dec
cmp
sub
mov
adcl
mov
lea
loope
mov
out
fsubrl
sub
jp
fcomps
push
movsb
fcoml
inc
fadd
pop
add
fimuls
popf
push
mov
jae
mov
test
insb
aaa
sarl
roll
jecxz
aas
mov
xchg
xchg
ss
mov
mov
std
xchg
stc
hlt
mov
push
xor
mov
add
mov
fnstsw
das
shlb
adc
jecxz
mov
lahf
mov
mov
outsb
je
push
outsl
cmp
and
imul
dec
cmp
jb
dec
add
out
fldenv
push
loope
pop
sub
cltd
jns
aad
icebp
xor
lret
mov
sarl
or
xor
mov
aam
js
adc
test
sub
mov
mov
nop
add
shrl
adc
sarl
scas
loope
sub
or
dec
sbbb
jg
push
dec
fisubs
sub
lret
sub
ret
jle
sti
sub
into
mov
lahf
dec
fldl
in
xchg
sub
aas
push
sub
adc
enter
dec
push
mov
das
adc
bound
dec
inc
ret
cld
add
test
mov
xchg
in
pop
scas
nop
clc
bound
push
jge
jp
shll
add
fdivr
enter
mov
mov
mov
mov
fisubs
fnstsw
fpatan
pop
aad
add
add
mov
sti
movsb
addr16
in
sub
repz
xor
add
loope
orb
mov
gs
stos
adc
mov
push
mov
pop
stos
xor
sbb
push
rorl
test
jbe
hlt
int
or
cld
or
push
adc
aad
xchg
or
in
cmpsb
push
insb
mov
sahf
jns
mov
or
mov
lret
xor
xor
stos
out
cli
mov
xor
shll
mov
sbb
push
icebp
out
scas
adc
rep
add
adc
xlat
outsb
jl
stos
sbb
jge
push
mov
jb,pn
je
or
fstl
mov
and
inc
push
jg
fs
push
roll
insb
movsb
sahf
out
adc
adc
or
jno
inc
dec
std
insb
dec
pop
adc
mov
loop
or
je
testb
and
mov
nop
inc
cmp
or
xchg
mov
jo
sbb
out
push
cs
ds
pop
xchg
push
sub
in
aas
outsl
je
inc
add
pushf
and
push
fsub
cli
test
lahf
xchg
mov
mov
ja
xor
ret
xchg
es
jno
push
lods
shlb
das
adc
jle
mov
xchg
jbe
cmpsb
hlt
bound
pop
add
add
inc
xchg
xor
sub
push
loopne
push
outsb
out
cltd
pop
cmp
or
jmp
inc
push
cmp
sub
cmp
push
cmp
dec
mov
into
lcall
imul
adc
add
test
pop
mov
mov
fisttpl
mov
inc
addr16
inc
stos
push
sub
fs
sub
add
push
xchg
xchg
inc
cmp
sbb
sub
sbb
insl
imul
cmp
test
sbb
enter
and
or
in
adc
nop
inc
out
lcall
xor
mov
arpl
fiaddl
jg
fwait
sbb
adc
js
es
pop
movsl
mov
pop
lock
mov
arpl
test
aam
push
ja
test
mov
dec
stc
mov
stc
mov
or
pop
mov
gs
aam
jns
jmp
mov
push
jge
fisubrl
lea
cmpsb
pop
in
repz
pop
subl
les
jns
js
fcomps
in
ret
mov
and
pop
cmpsb
adc
cmp
stos
xchg
loop
jmp
out
ja
push
mov
lcall
xchg
repnz
xchg
mov
sbb
push
pop
mov
idiv
out
popf
inc
xchg
add
gs
mov
imul
cmp
pushf
pop
movsb
mov
xchg
xchg
pushf
and
mov
int3
and
inc
push
mov
lock
enter
dec
jno
cmp
jnp
dec
loope
or
out
add
jge
cmp
add
and
mov
xor
imul
cli
jmp
ljmp
ror
rorb
subl
fistpll
cmp
push
push
daa
sbb
mov
xor
dec
jp
scas
in
adc
mov
pusha
dec
jecxz
mov
cltd
push
mov
movb
rol
clc
mov
xchg
cmpsb
sbb
insl
xor
loop,pn
push
jne
les
xchg
inc
cmp
pop
xor
push
insl
and
mov
cmp
cmp
add
enter
jg
stos
stos
push
aam
inc
incl
aad
sbb
fcoms
pusha
mov
pop
in
fiaddl
in
pop
add
cmp
pop
and
out
xor
cld
mov
push
mov
or
sub
out
ds
xor
xchg
imul
mov
iret
rdtsc
ljmp
js
pop
push
aad
mov
fdivs
test
adc
xchg
cli
mov
sbb
stc
in
std
pop
sbb
jecxz
cld
add
lock
pop
xchg
pop
dec
hlt
add
jle
ret
pop
aam
mov
ds
xchg
lods
jae
mov
jae
sbb
sub
ljmp
cmp
xchg
lret
call
xor
mov
das
clc
xor
repz
xchg
jl
and
shl
enter
stc
add
or
jp
scas
sub
sub
lods
loop
lods
je
daa
jb
psubq
addr16
push
repnz
fdivr
ds
fs
sub
xorb
push
mov
dec
inc
xor
sub
add
jge
flds
or
cmpsl
sbb
sub
daa
push
mov
push
lods
inc
sub
sub
adcb
dec
sbb
xor
aaa
mov
in
xor
pop
insl
sahf
add
fiadds
mov
mov
imul
jo
sbb
dec
rcl
mov
rorb
push
rclb
or
jnp
mov
rorb
inc
cld
shrl
nop
lds
xlat
incl
jnp
push
pop
xor
mov
mov
pushf
push
sub
into
sbb
aas
cmpsl
nop
push
push
stos
jg
mov
fiadds
shl
push
iret
push
cs
add
inc
aad
xchg
adc
mov
dec
mov
and
ret
inc
pusha
ficoms
xchg
les
push
inc
xor
imul
pop
je
ret
fsubl
repz
lds
test
cmp
jmp
mov
fwait
nop
mov
xchg
int
leave
cmc
ja
xor
imul
jmp
xchg
enter
fisttpl
push
inc
push
in
cmc
sbb
inc
pop
idivb
stos
mov
in
testl
jle
rcr
inc
lds
and
cmp
fidivl
arpl
mov
sbbb
lahf
popa
jle
pop
lcall
das
pop
stos
inc
les
imul
add
icebp
mov
push
js
pop
aas
xor
or
jns
leave
adc
xor
adc
cmp
xchg
fcoms
and
add
push
cld
dec
jb
add
xor
shl
mov
scas
cmc
aam
imul
aad
xor
addb
insl
dec
arpl
jmp
mov
jg
test
or
sub
out
push
cmp
mov
mov
mov
jb
push
js
pop
negb
mov
decl
popf
jl
jae
fs
inc
sbbb
push
cmp
jb
nop
sarb
es
inc
popf
xchg
aam
es
mov
dec
mov
orb
mov
adc
sahf
fwait
clc
push
dec
and
dec
mov
push
lret
xchg
cmp
pop
lds
jne
enter
sarb
add
shlb
pusha
sub
push
ljmp
add
jmp
dec
int
sub
push
dec
and
leave
xchg
inc
jb
add
jecxz
movsl
movsb
push
movsl
or
lcall
jnp
jns
mov
inc
inc
pop
jl
sub
lret
push
leave
mov
cmp
push
notb
sub
or
jge
mov
add
aam
push
jl
fnsetpm(287
mov
push
mov
push
adcl
out
adcb
cltd
jnp
adc
sbb
sbb
ljmp
cmp
xchg
dec
and
and
call
xchg
enter
loopne
push
int
cld
test
adc
in
clc
pop
fs
movsb
pop
mov
dec
in
inc
addl
jecxz
cmpsl
dec
add
popf
xor
insb
mov
jle
lea
mov
sub
dec
rclb
sub
mov
adc
cmpsb
mov
das
lea
data16
mov
adc
fnstsw
pop
jl
and
jecxz
outsb
into
lock
cld
addr16
or
sub
js
push
xor
dec
pop
dec
jb
pop
dec
clc
loope
lcall
int
loop
cld
popf
mov
push
jb
xchg
sti
xchg
stos
movsb
int3
mov
sbb
inc
push
pop
dec
stc
arpl
or
cmp
fiaddl
jae
lods
sub
pop
mov
test
rorl
imulb
in
dec
push
mov
or
loopne
clc
aam
repnz
push
or
insl
and
pop
out
int
ficompl
dec
lock
clc
pop
cltd
cmp
push
ljmp
inc
xor
imul
imul
fnstenv
shlb
mov
add
pop
cmp
bound
out
div
jge
or
data16
fwait
mov
xor
out
out
or
sub
shll
mov
dec
cmp
test
add
dec
stc
out
jno
sub
inc
fimuls
mov
ror
sahf
xorb
rcr
mov
sub
insb
out
and
mov
sti
sub
shr
jmp
insb
pop
lcall
xor
pushf
xchg
jo
shr
pop
and
aaa
pop
sbb
clc
push
jbe
add
pop
lds
mov
push
out
pop
rcll
jp
sbb
xchg
push
mov
fisubs
int3
das
das
or
arpl
pusha
ss
xchg
repnz
fld
xchg
add
adc
fistpl
mov
outsb
jns
mov
movsb
fidivs
lret
stos
out
into
mov
mov
aam
adc
lock
popf
insb
lock
mov
addr16
fbld
adc
jno
xchg
loope
call
mov
xor
lods
xor
cwtl
or
mov
sti
notb
into
cmc
push
and
in
and
dec
mov
sahf
inc
mov
jne
sbb
or
in
pusha
xchg
jecxz
jmp
fiadds
mov
cltd
jmp
push
dec
std
dec
cmp
mov
and
mov
adc
js
pop
xchg
pop
xlat
jp
lcall
xor
rcrl
or
sbb
cmpsl
lods
sub
jecxz
add
jle
pop
mov
daa
and
jecxz
fdivs
mov
jecxz
mov
pop
lcall
adc
test
cmc
mov
inc
ret
xchg
aam
or
xor
xchg
adc
loop
std
xor
out
mov
bound
fstl
push
stos
dec
dec
add
xor
sbb
std
push
and
test
hlt
stos
jb
in
bound
add
rcrb
mov
sub
dec
jmp
aas
in
mov
add
insl
addb
cld
push
daa
lock
xor
cld
aam
int
lret
sbb
out
mov
add
ja
cli
fs
aam
sbb
shlb
roll
orb
pop
outsb
js
lods
lock
xor
jecxz
mov
push
jl
dec
push
add
in
pop
push
lods
roll
jl,pn
insl
lds
inc
adc
jl
add
pop
movl
adc
neg
inc
pushf
outsl
push
icebp
sahf
lods
mov
push
fs
xchg
imull
outsl
sbb
mov
pop
sub
mov
mov
es
or
mov
dec
xchg
in
std
jl
dec
jmp
data16
aas
add
jle
nop
shl
and
or
test
ljmp
xchg
pop
lock
int
xor
push
sbb
int
and
push
orl
fs
cwtl
stos
xchg
int
ret
fwait
mov
in
sahf
jg
dec
sub
loop
fs
jne
ret
addr16
jnp
sub
mov
nop
inc
lods
xchg
fisttpl
icebp
add
xor
push
pop
xchg
fdiv
outsl
jmp
xor
adc
ss
adc
stos
in
xchg
mov
or
arpl
cmp
and
sbb
xchg
add
jb
mov
mov
lds
call
sbb
subb
sbb
cmp
test
inc
call
pop
inc
enter
dec
shlb
in
push
inc
ret
or
jl
js,pt
mov
inc
and
mov
enter
jecxz
cmpl
xor
insl
mov
pop
mov
subl
in
mov
aaa
xor
pop
negl
adc
mov
adc
xchg
sub
in
fstpl
and
in
sbb
aam
dec
fistpll
inc
ds
cli
add
aas
imul
movsb
mov
mov
inc
ja
loop
push
stc
andb
push
lahf
data16
repz
hlt
cmp
mov
inc
fwait
sbb
jg
xor
jns
sub
jns
inc
adc
or
ror
pop
dec
lahf
in
sti
das
adc
or
roll
dec
data16
cmp
sbb
fwait
jg
pushf
sub
insb
xor
int
mov
cmp
jmp
inc
xchg
js
xor
sti
or
or
arpl
jnp
dec
xor
stos
sarl
jecxz
xchg
sti
or
or
arpl
jnp
dec
xor
stos
xlat
mov
loop
xchg
sti
or
or
arpl
jp
dec
xor
stos
sarl
out
xchg
sti
add
pop
pop
aam
jmp
sbb
repz
mov
movsb
fmull
pop
std
outsb
lea
pop
int3
jns
pop
in
xor
int
fdivl
out
cmp
sahf
nop
scas
dec
mov
mov
push
in
push
std
cs
repz
sub
sbb
scas
dec
mov
jnp
pop
jle
push
fstpl
mov
ds
into
sub
fwait
outsl
mov
in
sbb
aas
xlat
cmp
jmp
pop
clc
add
dec
add
dec
mov
push
cmpsb
cmc
ret
stc
testb
adc
push
mov
stc
andl
push
jbe
xor
and
push
rcll
add
js
and
out
adc
aam
insl
pop
add
add
cmp
lret
sub
sahf
adc
lcall
jns
data16
loope
ja
ds
ds
fisttpll
repnz
js
lock
mov
and
jo
rorb
push
in
jne
fiadds
push
push
jb
cmpsb
inc
push
clc
orl
mov
fwait
insl
push
fistl
imul
jle
push
in
push
std
cs
dec
into
sub
and
push
mov
shrb
loope
icebp
imul
inc
mov
mov
jle
sub
adc
cmp
xor
jmp
sti
or
mov
jnp
mov
pop
sub
sub
cs
pop
pop
sub
sbb
dec
mov
ds
sub
sbb
scas
dec
mov
mov
push
in
push
std
cs
sub
sbb
scas
dec
mov
jmp
lock
mov
hlt
jle
mov
inc
rcrl
xchg
adc
fcomip
das
push
push
mov
mov
inc
das
xorb
stc
sbb
mov
mov
mov
fisttpl
jle
cwtl
add
pop
inc
lcallw
sbbl
xchg
call
pop
pushf
mov
inc
push
push
mov
lods
in
into
call
stos
mov
lahf
sbb
shll
add
fcompl
or
xor
mov
pusha
lcall
adc
lds
jl
jno
pop
add
cmpsl
out
inc
jmp
mov
das
sti
js
stc
adc
push
pop
add
mov
sbb
test
fisttps
lahf
insl
ret
xchg
sqrtps
nop
ss
iret
jbe
add
inc
jnp
cs
xor
out
xchg
jge
fdivs
pop
popf
xor
loopne
sbb
int
fsubr
sub
xor
xor
dec
cli
stos
outsl
xchg
fwait
ljmp
sahf
or
cmpsl
pop
leave
push
xchg
aam
pop
push
scas
mov
push
add
xor
outsb
inc
jge
pop
stos
push
orl
fistps
sub
fwait
arpl
imul
xor
cmp
pop
mov
jg
sub
add
aam
xor
cmp
lcall
adc
mov
shrb
ljmp
cli
xchg
jp
mov
and
sbb
jl
fwait
jmp
dec
xor
test
mov
jecxz
popf
jae
dec
fstps
insb
push
mov
add
cwtl
pop
inc
cmp
jge
test
div
decb
outsb
pushl
subl
adc
jge
cmpsb
mov
xorb
fsts
lds
mov
les
jmp
ret
mov
jg
inc
mov
test
mov
push
fbstp
or
or
fsubp
cwtl
sbb
or
or
dec
adc
in
mov
lds
outsb
adc
jb
sbb
das
push
adc
lret
mull
cmp
sbb
adc
push
movswl
clc
fiaddl
jecxz
sub
fistpll
leave
dec
lret
dec
in
or
mov
and
sbb
std
hlt
lahf
fstl
subb
cwtl
jecxz
leave
cltd
sub
js
es
test
dec
in
roll
cmp
sub
pop
jo
mov
in
pushf
ficoms
inc
dec
mov
ljmp
cli
rorb
adc
fdiv
or
mov
dec
mov
mov
insb
stc
inc
lods
or
fldcw
in
mov
in
pop
lahf
fisttps
in
dec
popa
xchg
inc
inc
lret
xchg
les
sbb
xor
xchg
inc
adc
scas
inc
jno
mov
rcrb
xor
pop
cmp
sti
sub
xor
sbb
jae
sub
sub
jne
mov
sbb
sbb
enter
mov
pop
imul
or
imul
gs
lods
in
cld
add
mov
into
mov
mov
adcl
test
ljmp
pop
mov
ret
nop
push
mov
mov
xchg
repnz
adc
jle
dec
xor
jp
std
pop
cmp
adc
jg
adc
add
data16
dec
cmp
fnsave
pop
insb
push
int3
ja
shrl
fdecstp
jp
or
and
lods
jo
inc
outsl
jge
subl
in
cmp
inc
ljmp
push
cmp
dec
lods
das
cmp
jo
sub
ja
sahf
mov
popa
fdivrl
cltd
add
mov
insl
je
xor
dec
add
or
cli
push
incl
pusha
jbe
mov
pop
outsb
sub
pop
jg
lcall
ljmp
flds
int3
push
push
je
mov
xchg
jbe
mov
or
dec
xchg
rcll
jae
outsl
aam
insb
or
test
inc
testb
inc
xchg
arpl
ljmp
xor
dec
ja
mov
inc
pop
sti
movsl
outsl
ret
pop
in
inc
les
push
cmp
inc
pop
inc
push
push
stos
jp
cmp
mov
xor
jg
cmp
scas
xchg
add
xchg
aaa
push
repnz
dec
inc
popf
or
mov
push
sahf
push
push
test
test
pushf
sbb
js
inc
adc
das
mov
mov
mov
mov
popf
lock
out
sbbb
into
sbb
outsl
and
jecxz
and
xchg
and
into
mov
and
cltd
sub
cmp
sbb
loop
fisttps
insl
push
mov
lods
enter
test
shrb
repz
sbb
sub
das
xor
int
fiadds
fcmovnbe
push
pop
mov
cmpsb
and
mov
mov
or
push
lods
mov
stos
xchg
scas
pop
sub
dec
fsubl
jae
add
sbb
out
xchg
mov
or
leave
cmp
dec
mov
adc
fbstp
or
mov
das
xor
push
jecxz
pop
addr16
aam
xchg
pop
fisubrs
add
and
rorb
or
jmp
stos
jb
lock
shll
int3
in
sub
cli
dec
out
js
push
sbb
bound
aas
xchg
inc
adc
push
adc
or
or
and
imull
jl
in
mov
jecxz
mov
pop
lret
push
xchg
and
dec
ja
into
jle
fldenv
stos
cmc
jae
jne
cmp
sub
xchg
push
dec
clc
test
repnz
adc
cmp
cwtl
or
adc
popf
cld
push
cmp
adc
mov
mov
sub
fistpl
add
vpunpcklwd
add
push
enter
dec
mov
or
dec
pop
push
std
fisttpl
pop
push
cmp
or
outsb
bound
jns
mov
imul
cli
int3
push
mov
stos
jns
mov
inc
pop
cmp
mov
xor
adc
xor
test
xor
mov
adc
imul
sub
dec
push
fwait
mov
mov
pop
loop
sub
js
outsb
aam
test
mov
dec
dec
mov
sbb
aas
jmp
dec
hlt
or
cld
aad
push
jo
fdivrp
mov
in
into
stc
inc
pop
call
pushf
daa
adc
mov
ss
cmpsb
dec
jge
nop
add
jnp
sub
mov
push
ja
sub
mov
popf
test
dec
sbb
enter
add
fiaddl
lahf
cmp
dec
int
lods
xor
dec
xlat
add
shll
data16
mov
add
daa
lret
xchg
rcl
imul
repz
stos
pop
icebp
jb
out
enter
adc
cmpsb
jecxz
out
mov
xchg
insl
xchg
inc
and
adc
dec
xchg
xor
mov
pop
push
arpl
xor
push
push
sar
sbb
xchg
test
in
popa
cwtl
push
inc
fwait
sub
or
std
pop
jmp
dec
imul
mov
cmp
pop
je
roll
mov
add
jp
push
add
fldl
adc
std
pop
mov
insl
scas
test
outsl
pop
xor
insb
adc
mov
sbb
sahf
sub
mov
sub
cs
imul
shlb
dec
dec
sbb
sub
stos
pop
pusha
arpl
jo
and
inc
adc
cmp
dec
push
das
mov
mov
shlb
adc
adc
xor
ss
or
js
xor
lcall
in
retw
sub
clc
add
in
sbb
add
sub
push
push
shr
pop
je
mov
add
out
or
mov
mov
xor
cmp
pop
movsb
gs
sbb
testb
sarb
mov
push
and
mov
cmp
dec
mov
fwait
add
push
test
les
xchg
out
out
fnstcw
fsub
addr16
pop
mov
addr16
or
pop
sar
push
or
nop
dec
jmp
adc
bound
xchg
or
scas
loop
push
mov
ret
jge
shlb
sbb
rolb
lds
mov
icebp
pop
xor
cmp
call
add
sub
xchg
cltd
mov
dec
inc
icebp
data16
cltd
xchg
andl
mov
aam
and
pop
or
xchg
mov
dec
jg
xlat
cmc
jns
mov
not
cmpsl
sub
jne
push
pop
popa
js
push
mov
add
sub
hlt
into
mov
mov
xchg
pop
cmp
add
fildl
mov
mov
iret
aas
push
mov
adc
push
pop
sti
xorl
xor
xchg
mov
cmpsb
jmp
add
jp
push
push
imull
jne
daa
sub
ret
pop
jo
adc
and
dec
inc
and
out
sub
int3
ficompl
ror
data16
jbe
movl
lcall
inc
nop
inc
jns
call
cmp
das
cmpsb
add
cltd
dec
out
in
cmp
ja
ss
test
incb
xchg
movsl
fisubrs
fucom
xchg
out
or
sbb
ds
cmp
ret
ss
ficoms
faddl
insl
cmpb
imul
sub
jno
mov
cltd
mov
xorb
frstor
jns
inc
jno
lea
sub
cmpsl
mov
jmp
jnp
pop
mov
loope
sub
inc
lret
sub
mov
lods
mov
arpl
jmp
push
push
push
cmp
test
push
lcall
and
xchg
mov
je
sub
cmp
mov
push
pop
pop
movsl
pusha
mov
into
jb
cmp
int3
scas
jp
testb
daa
insl
adc
stc
mov
pop
scas
jmp
idivb
sbb
sub
pop
aas
das
clc
push
test
daa
scas
mov
outsb
ss
jmp
das
mov
dec
or
mov
pop
cmp
mov
dec
std
push
js
lret
aas
int
hlt
popa
push
mov
mov
and
in
sub
js
mov
adc
xor
push
lock
push
clc
xchg
outsl
in
and
xchg
and
stos
mov
mov
les
jb
xchg
cmp
mov
jge
push
inc
aaa
dec
push
ljmp
dec
or
fstpt
les
cmp
iret
dec
sahf
insb
or
or
jno
cmp
out
lods
lcall
xor
lods
or
ficompl
and
dec
sbb
pop
ss
xor
int3
mov
addb
pop
leave
fisubrs
push
insb
popa
sbb
in
jns
hlt
stos
pop
pop
sub
mov
or
into
xor
data16
inc
pop
mov
lds
jle
inc
mov
daa
inc
fwait
and
xchg
push
sti
push
imul
enter
sub
test
mov
sbb
jmp
mov
adc
push
mov
mov
and
lods
dec
sub
jb
shr
repnz
sub
pop
dec
lcall
out
out
sti
and
lods
mov
pop
in
out
test
add
push
addb
pop
jns
mov
inc
lock
push
das
lods
or
pop
inc
pop
xor
mov
jae
jle
xor
sub
and
sahf
jae
out
push
pop
push
pop
xchg
cmp
out
shll
lods
lcall
mov
xor
adc
repnz
cmp
jl
test
jmp
aaa
add
mov
xlat
xor
or
sbb
lcall
cmp
and
into
in
pop
xchg
pop
nop
ror
popf
push
push
loopne
mov
or
adc
int
xor
push
xor
mov
sar
push
mov
out
das
mov
mov
jb
lret
sub
or
mov
insl
fdivrl
dec
sahf
cmpsb
stos
push
inc
push
push
pop
adc
inc
mov
inc
mov
push
and
test
mov
lcall
inc
mov
fldt
inc
std
xchg
xor
lret
sub
sti
repz
xchg
cmp
lock
cmpb
sbb
lcall
adc
xchg
inc
ret
lods
jecxz
in
mov
xor
adc
push
inc
pop
rcr
xor
add
jnp
out
push
xor
pop
aam
lock
repz
int
sub
test
sahf
int
mov
push
or
mov
clc
jb
fistpl
jmp
mov
mov
ror
call
sbb
sub
mov
sub
lahf
ret
sub
cmpsb
imul
lods
pop
bound
jmp
pop
jbe
dec
mov
push
scas
adc
inc
fs
popa
in
jl
and
in
lret
jle
shll
add
inc
in
insb
jbe
mov
stos
int
cltd
loop
sti
adc
push
call
insl
test
mov
inc
fidivrs
leave
andl
xchg
cmp
xchg
add
fstpl
cli
inc
sbb
imul
mov
pusha
mov
push
inc
lock
outsb
into
mov
sbb
push
stos
out
mov
leave
aas
xchg
mov
clc
movsb
cmc
xchg
inc
rorb
sub
lods
pop
mov
pusha
insb
push
adc
inc
pop
xor
out
sub
insl
rcr
scas
inc
ret
pop
push
sub
dec
adc
insl
or
adc
mov
int3
mov
jge
shll
lods
cmp
fwait
mov
cwtl
cmp
mov
xchg
inc
add
mov
push
and
fists
and
jge
lds
xchg
fisubrs
hlt
sar
rcrl
mov
sub
lcall
popf
pop
inc
jns
sub
push
cli
jo
mov
xchg
cmovp
jmp
fidivrl
loop
cwtl
mov
or
xor
pop
fildll
lea
jne
mov
cmpsb
mov
xlat
and
mov
enter
enter
cli
in
sub
in
mov
mov
xchg
add
mov
mov
cli
aaa
and
jbe
sub
vorps
movsb
ja
inc
out
shlb
movsb
jns
mov
inc
mov
mov
and
adc
xchg
push
scas
sbb
jl
inc
je
test
fs
cmp
lcall
arpl
pop
mov
fnstsw
push
jb
daa
xor
fwait
and
cs
lcall
clc
daa
das
stc
jbe
mov
mov
and
iret
out
sub
andl
gs
pushf
xorl
shl
inc
cs
cltd
out
mov
pop
cmp
pop
bound
cmp
js
xlat
cmp
cmp
dec
sbb
test
add
inc
repz
stos
and
leave
pushf
xchg
jl
into
cmpsl
test
dec
aad
aad
mov
fisttpl
mov
cmp
sahf
pusha
imulb
dec
sbb
in
jne
jae
and
ljmp
inc
in
sbb
xchg
jae
stos
outsb
adc
das
push
out
push
mov
insl
mov
enter
push
mov
adc
cmc
lret
arpl
add
cmp
dec
xlat
jno
dec
xor
sbb
inc
mov
mov
dec
hlt
mov
lods
in
push
mov
es
mov
xor
sub
xor
and
call
cmp
mov
stc
adc
xchg
cmp
dec
or
daa
outsb
imul
fsubrl
mov
jae
in
cmp
jg
mov
fsubrs
dec
mov
push
pop
sbb
and
jns
enter
jbe
lds
iret
lret
je
icebp
mov
xchg
in
es
sub
adc
sub
add
je
sti
mov
lcall
orb
fcomip
xor
and
aad
pop
dec
js
xlat
mov
push
lock
ss
loop
cli
or
or
sub
push
pop
in
fwait
call
sub
or
jecxz
dec
add
cmp
cmp
pushf
inc
add
sub
jp
push
inc
out
in
outsl
xor
sbb
aas
push
sbb
push
insl
jmp
push
ljmp
sub
movsb
adc
getsec
xor
rol
jge
pop
frstor
repnz
inc
movsb
insl
mov
mov
std
mov
lea
mov
sub
mov
mov
les
cli
jl
mov
jg
fsubp
cmpb
xchg
fistpl
xor
or
push
cmp
dec
dec
bnd
jnp
gs
je
out
mov
lock
imul
and
inc
push
repnz
out
cmp
cmpsl
inc
test
cmpsl
imull
mov
inc
mov
mov
pop
push
inc
xchg
fstpl
sbb
xor
lret
xchg
fsubp
test
or
ss
inc
sub
xor
lds
pop
mov
into
mov
or
push
and
dec
lock
cmc
or
popa
out
pop
out
jecxz
push
mov
jo
pop
mov
mov
mov
jmp
adcb
sub
cwtl
or
popa
rolb
or
lds
sbb
mov
or
scas
cmp
in
xchg
js
fisubs
mov
xchg
push
jecxz
mov
adc
test
or
inc
gs
and
out
mov
clc
imul
add
ja
loopne
xchg
les
sarl
xor
sbb
jecxz
mov
shl
mov
sub
int3
jg
mov
inc
xchg
xor
pop
cmp
sbb
sbb
test
cmp
adc
lods
add
leave
mov
sub
orl
xchg
xchg
mov
aam
jae
cmp
or
int3
fidivrs
fistpl
outsl
adc
insb
cmp
in
and
xor
rolb
or
or
cmp
cmp
cmp
ret
xchg
adc
inc
test
scas
xchg
push
fnstenv
inc
xchg
push
or
pop
and
mov
in
hlt
fidivrs
cld
push
xchg
popa
inc
jbe
adc
and
fcoml
test
pop
jnp
sbb
mov
pop
adcl
inc
xor
int
mov
pop
int
mov
inc
shr
cmp
dec
sbb
inc
lock
dec
pusha
jno
cmpb
sar
into
mov
xor
sub
pusha
into
rclb
jno
mov
mov
jg
adc
add
fwait
stos
and
adc
std
xor
mov
cmp
dec
movb
lods
dec
imul
pusha
xor
and
pushl
add
lret
jle
or
sbb
add
or
movsb
or
jnp
adc
jno
jg
iret
sbb
xor
and
sub
push
jp
inc
jmp
ror
cmpsb
inc
pop
push
test
mov
lods
mull
movsb
push
cmp
in
xor
xchg
add
mov
in
jecxz
test
fstps
outsl
repnz
jmp
dec
pushf
or
cmpsb
das
hlt
mov
mov
sub
mov
jo
jmp
add
loopne
lret
ret
arpl
dec
adc
pop
adc
cmp
sub
dec
out
mov
mov
xor
daa
aam
jo
pop
mov
jmp
scas
inc
ror
inc
shll
or
cmp
jle
push
outsb
jge
sti
mov
andb
cmc
mov
mov
pop
fiaddl
add
ror
fisttpl
lds
adc
jmp
lea
lea
push
ds
sarl
push
imul
xor
cmpsl
jl
pop
sbb
mov
and
xor
and
imul
hlt
nop
inc
mov
push
outsl
add
cmp
add
mov
ss
xchg
mov
mov
flds
ljmp
ret
sarb
insl
sbb
ljmp
loope
arpl
insl
arpl
fcmove
insb
loop
imul
cmpsb
fwait
push
pop
mov
rcll
jecxz
in
lcall
jl
jno
out
inc
paddd
int
cmc
mov
push
out
loopne
pop
or
xchg
xor
dec
shl
sub
inc
xor
das
test
fildl
cli
xchg
jbe
jge
push
push
outsl
out
arpl
cmpsl
dec
inc
dec
inc
lods
mov
adc
add
fidivrs
es
idivb
fwait
mov
mov
cmp
pop
jae
jmp
dec
cmpsl
dec
nop
inc
pop
roll
daa
push
sbbb
gs
add
vcvtps2pd
lret
aam
fbstp
push
iret
xor
dec
imulb
jecxz
test
mov
push
mov
int3
fwait
icebp
dec
mov
push
out
sub
scas
pop
add
xchg
stos
xor
movsl
pop
faddl
or
mov
xchg
push
inc
add
xchg
add
xor
bswap
out
sti
addr16
push
in
push
std
cs
sub
sbb
scas
dec
mov
mov
push
in
push
std
cs
sub
sbb
scas
dec
mov
mov
xchg
jle
push
in
pop
xchg
cs
ds
sub
cmp
or
sahf
jge
inc
mov
pop
outsb
imul
scas
dec
mov
xchg
inc
or
push
add
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
sub
sbb
mov
push
stos
push
fstpt
outsl
ljmp
scas
cmp
dec
out
jp
push
lcall
push
ficompl
lret
pop
ljmp
sahf
sub
jp
push
lcall
pusha
mov
cmp
fidivs
jp
roll
sbb
mov
mov
sti
inc
negl
lods
mov
xchg
pop
out
inc
arpl
push
pop
inc
out
jne,pn
jecxz
daa
sbb
outsb
xor
pop
lahf
scas
or
dec
dec
dec
pop
mov
and
add
fisubrl
in
sbb
orl
sbb
or
pop
jmp
lcall
sarl
outsb
cltd
mov
sub
dec
out
cmc
push
imul
add
push
repnz
ljmp
jle
ss
mov
mov
push
lods
inc
gs
sub
imul
scas
outsl
lret
pop
jmp
inc
mov
sub
jp
push
lcall
push
fidivrl
outsb
cli
pop
ljmp
fbld
mov
btr
cmp
aad
into
jle
or
sub
dec
ret
in
aas
mov
adc
enter
ret
pop
xchg
sbb
sbb
std
pop
sti
or
sbb
dec
out
jp
push
lcall
push
fidivrl
outsb
cli
pop
ljmp
sahf
sub
jp
push
lcall
push
fidivrl
outsb
cli
pop
ljmp
icebp
js
sub
inc
insl
or
shll
cmp
fistpl
dec
xor
std
xor
mov
pusha
in
scas
mov
xchg
push
xchg
adc
dec
lahf
bound
cmc
leave
push
js
xor
les
xlat
fsubs
adc
sbb
sbb
mov
leave
xor
xchg
mov
enter
test
xlat
leave
dec
dec
pop
cmpb
xor
pop
dec
cmpsb
inc
outsb
jb
pmulhw
mov
subl
xchg
adc
mov
adc
scas
es
notl
mov
pop
lret
push
iret
adc
cld
mov
repz
sub
push
jns
inc
mov
mov
cmp
cwtl
xor
and
sub
jne
cmp
ret
sub
and
addl
sbb
test
cmp
jne
xor
mov
add
add
jg
test
push
mov
loope
rcrl
pop
loopne
pop
push
cmp
jne
cltd
into
push
les
or
pop
push
xor
fsubrl
sti
mov
inc
mov
in
bound
mov
lahf
add
sub
insb
sub
in
scas
dec
out
subl
loop
xor
inc
insl
mov
and
mov
jecxz
addl
dec
xchg
pop
mul
sbb
dec
mov
sbb
cmp
stos
stos
je
ja
lds
out
cmpsl
bnd
cmp
jae
rolb
jo
dec
sub
mov
and
mov
out
loop
sbb
pop
loope
or
not
push
or
pop
mov
push
je
pop
push
out
jge
sub
mov
leave
loop
pop
daa
pop
sbb
lock
leave
fistpll
jb
mov
inc
in
mov
mov
adc
sub
pop
push
shrb
push
xchg
xchg
jmp
xor
dec
iret
notl
push
jmp
fldcw
xor
lret
sbb
pop
and
fsubs
fisubs
outsl
push
in
fcompl
pop
mov
shrl
inc
popa
jge
lods
add
test
mov
push
cmpb
leave
sarl
xor
and
xchg
std
ja
push
movsl
rcrb
int3
fsubs
es
mov
dec
jge
mov
loop
mov
shll
cwtl
xchg
roll
fistpll
js
bound
cmpsl
pop
push
or
lds
mov
xor
loopne
xor
scas
push
aaa
inc
popa
mov
mov
dec
enter
shll
xor
add
adcb
test
std
add
fistps
xchg
mov
ljmp
pop
sub
fstp
je
xor
xor
xor
subb
jl
xchg
xchg
xor
or
leave
add
lock
cmp
outsb
sub
xchg
cmpsb
fisttps
fistps
mov
insl
xlat
cmp
mov
das
adc
fld
leave
xchg
cmc
mov
leave
push
lcall
mov
sub
sbb
adc
mov
push
or
fsubl
adc
pop
imul
adc
add
cmp
shll
loopne
dec
sbb
sbb
roll
roll
adc
xor
cmp
cmc
into
mov
icebp
xorb
jmp
aad
out
inc
nop
std
pop
cmpsl
pop
push
xor
cmp
xchg
int3
stc
icebp
leave
cmpl
push
mov
jge
dec
imul
loopne,pt
cmp
fiadds
arpl
addr16
loopne
cs
xor
int
sbbl
xor
sub
xor
mov
js
lods
out
add
mov
mov
scas
orb
cmp
imul
and
jp
add
adc
xor
pop
cli
add
gs
or
pop
add
flds
or
xlat
loop
cmp
icebp
sub
adc
adc
pop
xchg
stc
test
cmp
push
jecxz
loope
or
pop
or
sub
dec
sub
out
ljmp
inc
pop
mov
jnp
loope
outsb
test
push
and
jmp
adc
sub
clc
mov
add
sub
ret
fnstsw
dec
subl
sbb
test
mov
mov
sub
dec
pop
mov
mov
jbe
xchg
mov
inc
adc
or
cmpsl
lea
jge
and
test
stos
in
or
sti
push
jnp
adc
pop
lods
test
add
hlt
adc
pop
nop
loope
negb
clc
jecxz
mov
movsl
in
clc
daa
or
adc
push
jp
mov
mov
cld
movsb
cmp
push
mov
in
adc
xchg
gs
xchg
cmp
dec
mov
notb
xor
push
out
ss
nopl
dec
inc
inc
notb
sbb
sub
int
or
and
add
jp
jo
xlat
scas
jae
sbb
push
adcb
cli
aam
jns
outsl
inc
jns
push
test
jecxz
scas
jno
imul
fists
cmp
pop
adc
bound
ja
notl
jnp
sub
adcl
jb
bound
sub
xor
mov
push
or
ss
movsb
xchg
jne
cmpsb
inc
pop
pop
movsl
cs
shlb
mov
stos
cmp
mov
lods
mov
sbb
dec
push
jno
ja
jp
aaa
sub
push
mov
sbb
test
jbe
pop
inc
lock
in
fdivrs
mov
push
jae
dec
mov
movsb
loope
pop
ds
dec
lock
ss
sbb
fcomps
loope
mov
and
aas
aaa
or
inc
pop
push
sbb
adc
cmp
xor
lcall
outsl
nop
pusha
jg
int
data16
lahf
dec
add
lock
and
push
cmp
add
mov
push
je
xchg
ja
adc
jae
call
into
push
push
nop
sahf
das
cmp
and
adc
rcrl
or
push
push
mov
imul
lret
movsb
xchg
inc
sbb
xchg
jbe
cmp
sbb
ljmp
cmc
dec
leave
mov
in
add
popf
les
in
and
xor
push
xchg
bound
in
push
sub
mov
xchg
inc
int
push
scas
inc
xor
lock
mov
cmp
inc
or
cmc
sbb
jp
push
sub
mov
cli
dec
sub
mov
insl
fs
repnz
popf
jge
hlt
push
mov
cmp
inc
push
push
xor
addr16
jge
add
and
inc
clc
xchg
lret
cmpsl
jmp
cmpsl
jge
lahf
leave
dec
pop
sub
adc
cmc
invd
push
or
bound
sbb
popl
jg
or
pop
and
mov
adc
xchg
mov
push
sbb
mov
mov
mov
or
xlat
jae
xchg
ja
out
lds
test
mov
insb
add
cmpsb
push
arpl
adc
sbb
lods
xchg
mov
mov
inc
cmp
add
push
gs
or
fimuls
add
mov
daa
rcr
jo
movsl
dec
mov
cmpsb
lods
cltd
into
pop
dec
pop
dec
movsl
rorb
mov
gs
imul
cs
idivl
pop
push
or
enter
xchg
adc
ret
or
cmpsl
test
lret
hlt
push
mov
sbb
xor
rcrl
aad
repz
aas
jo
enter
out
das
dec
ret
stc
sbb
test
les
bound
in
cmp
inc
sub
mov
dec
jae
ret
push
pop
push
fs
loopne
push
imul
dec
fs
mov
mov
mov
inc
loop
negl
je
sbb
movsb
push
sarl
jp
dec
mov
jl
nop
cmp
insb
nop
stc
xchg
scas
sub
cmpsb
fistps
stc
mov
mov
pop
fcmovne
in
add
js
xchg
fs
cmc
and
sti
outsb
and
add
mov
cmp
pop
gs
add
pop
pusha
les
mov
xchg
push
mov
sbb
test
sbb
fwait
xchg
das
mov
test
outsl
das
ror
mov
stc
cld
add
stos
lret
inc
push
add
xchg
imul
pop
and
fcoml
aam
scas
mov
xlat
cmp
ja
ds
into
pushf
movsb
add
cld
inc
dec
push
mov
sub
sub
subl
mov
pop
sbb
jl
jge
paddusb
fiadds
shl
outsb
pop
add
inc
jecxz
ret
fidivrs
pushf
mov
inc
mov
lods
and
dec
mov
pop
sahf
out
lods
loop
push
jns
cmc
adc
adc
decl
ret
jecxz
pop
adc
mov
sti
orb
lret
std
sub
mov
mov
xor
push
out
into
inc
ds
out
jne
pop
sbb
push
add
xchg
cmp
jl
hlt
sbb
ret
loopne
sbb
lods
ljmp
pop
orb
rorb
pop
cmpsl
imul
xchg
cld
rcr
jae
sti
xor
notb
xchg
sub
xchg
jl
xchg
ds
ret
lcall
int3
dec
xlat
imul
xchg
sub
xchg
dec
push
jle
mov
push
jbe
push
mov
and
cs
push
push
in
es
adc
inc
jmp
mov
out
aam
in
aam
movsl
xor
cltd
popl
insl
popf
sarb
cmp
leave
sub
sbb
ss
jb
mov
ret
clc
not
mov
mov
mov
out
lods
sbb
mov
dec
fwait
adc
xchg
xchg
jmp
mov
push
pop
pop
dec
negb
mov
xchg
cs
push
sub
fidivrs
es
adc
dec
repz
nop
out
mov
test
push
jg
out
nop
mov
and
dec
sbb
loopne
push
push
jae
jbe
inc
mov
sbbl
jg
in
xchg
mov
in
inc
push
sbb
mov
outsl
mov
adc
xadd
inc
mov
pop
sti
or
int
jb
int3
cmp
data16
cmp
fisubs
pop
adc
cmp
inc
sub
aaa
jecxz
mov
mov
arpl
lods
outsb
cmp
sbb
add
ljmp
lret
test
fdivs
cli
xchg
lcall
jecxz
mov
push
lock
push
jne
pusha
sti
adc
xor
lret
arpl
mov
je
das
sarb
inc
xor
jl
popf
mov
mov
push
arpl
test
mov
xor
xchg
adc
fadds
mov
in
push
cmpl
cmp
lds
icebp
iret
out
outsl
mov
push
jno
dec
pop
rorl
lahf
test
and
ret
xor
movswl
ds
gs
xor
xor
mov
mov
sbb
ds
lret
out
adc
popf
pop
pop
dec
xchg
leave
jg
pop
jno
mov
jo
push
adc
xor
dec
sti
jo
idivl
test
or
loope
mov
std
fcompl
in
inc
add
lea
or
insl
jmp
les
cmp
rcll
stc
adc
stos
cs
mov
pop
xor
mov
ja
jle
arpl
out
decl
mov
jl
sbbl
ret
jbe
or
stos
or
cmpsb
loop
ljmp
dec
fs
mov
sbb
scas
sbb
popf
stos
es
jl
mov
xor
xchg
or
push
lods
cmpsl
xchg
sbb
scas
fwait
mov
sahf
add
ljmp
inc
sub
mov
divb
in
push
pop
mov
sti
mov
iret
mov
leave
mov
cltd
and
lock
std
add
sub
cmp
sbb
cmpsb
cmp
sbb
jmp
in
ja
ficoms
rorl
int3
gs
inc
mov
sbb
mov
and
ret
push
scas
push
and
outsl
sti
notl
mov
ljmp
ljmp
inc
pop
jb
aad
xor
int3
leave
repnz
or
push
leave
push
stc
mov
and
mov
icebp
inc
xchg
popf
or
dec
rclb
shlb
jbe
xor
insl
dec
fs
push
add
dec
stc
out
bound
int
leave
mov
call
fsubs
jns
icebp
mov
xchg
mov
xor
lds
adc
dec
out
mov
adc
mov
incl
push
out
inc
or
mov
into
push
aas
xorb
ficomps
pusha
adc
push
fmuls
xor
mov
pop
or
pop
mov
or
inc
or
test
xchg
xor
jo
xor
push
das
repnz
dec
jl
sahf
enter
bound
inc
lahf
mov
out
out
sub
inc
dec
mov
les
sbb
cmpsl
test
mov
int
adc
xor
ds
lcall
cmp
xchg
xlat
pop
or
sti
lret
out
jns
push
repz
xor
jae
js
push
rcrb
xchg
int3
cmp
mov
loopne
jl
mov
xor
mov
push
xchg
scas
sarb
lds
adc
pop
and
mov
stos
je
notl
imul
test
dec
push
adc
fidivrs
mov
ja
jae
push
jp
gs
mov
pop
test
out
je
pop
inc
stos
and
add
aas
sahf
dec
jnp
jle
cld
aad
ret
xchg
or
mov
xchg
ret
mov
lods
sub
xor
push
rcll
int3
xchg
lret
inc
movsb
mov
jns
cli
lcall
cli
xorl
mov
lcall
movsb
ret
dec
mov
xchg
mov
sahf
mov
add
xor
daa
sbb
scas
rclb
arpl
lods
lcall
nop
mov
jno
add
mov
sbb
jmp
sub
sti
inc
hlt
leave
dec
and
xor
jae
jne
mov
mov
out
cwtl
js
xchg
cmpb
mov
fs
xor
call
pop
filds
mov
mov
cmp
stos
scas
insl
out
mov
xchg
loop
mov
cmp
mov
pop
mull
in
fsubl
dec
dec
pop
mov
test
fdivrl
in
loop
push
outsb
mov
xchg
incb
das
ja
and
cli
pop
pop
xchg
cmp
push
insb
loop
imul
jae
jl
xor
xchg
negl
mov
mov
jb
out
shll
addb
mov
pop
sbb
sahf
push
sub
sbb
icebp
mov
int
mull
loope
dec
lds
test
inc
out
popa
repnz
xchg
cltd
jle
cld
in
pop
and
fldt
sbb
and
outsl
pop
sbb
nop
fdiv
scas
xchg
ret
adc
sbb
or
mov
inc
xchg
cmp
inc
in
pushf
inc
mov
pop
push
xchg
jne
adc
dec
iret
push
fs
lds
scas
inc
sbb
insb
daa
adc
sarl
imul
xor
push
cmp
in
ds
mov
add
inc
jecxz
jecxz
add
cwtl
push
push
mov
mov
iret
mov
xor
call
int3
shl
fsub
ds
push
jb
loopne
push
fisttpll
push
push
push
mov
or
xlat
xchg
insl
mov
stos
mov
adc
scas
pop
push
jmp
pop
aaa
pop
xchg
imul
rcrb
fstl
pop
js
sbb
notb
fsubl
sub
orb
lods
pop
pop
dec
xchg
enter
mov
or
pusha
ja
cmp
or
pop
js
sbb
int3
xchg
sub
je
outsb
jle
mov
inc
lods
add
and
rcll
jnp
add
in
repz
sahf
inc
pushf
decl
inc
mov
inc
ret
and
test
std
cmp
sbb
mov
and
and
push
push
pop
pushf
push
hlt
shlb
mov
adc
mov
push
push
sub
repz
jecxz
add
sub
aad
scas
iret
int3
out
std
arpl
mov
outsb
mov
or
mov
mov
jmp
jecxz
adc
ljmp
mov
add
mov
mov
lret
lret
cmc
push
mov
inc
dec
sbb
pusha
xor
lods
negl
dec
imul
xchg
mov
imul
pop
fimull
pop
sub
dec
sahf
and
push
or
std
loop
iret
jecxz
fs
dec
sub
fidivrl
sub
rorl
jg
cmp
es
int3
cwtl
test
sbb
push
stos
movsb
test
cwtl
hlt
enter
sbb
and
sub
ljmp
loopne
adc
fstp
das
push
pop
mov
xchg
scas
adc
inc
movsl
ljmp
test
xor
jno
cmpsb
cmp
std
dec
jl
pop
add
fdivrl
or
mov
mov
mov
fidivrl
call
pop
gs
push
jg
lds
andl
popa
xlat
enterw
clc
inc
xor
push
mov
push
repz
jb
push
dec
pop
mov
sbb
fldt
dec
cmpsb
mov
test
adc
fdivrs
cs
pushf
fs
bnd
clc
xchg
sub
loop
jns
test
mov
inc
jns
mov
clc
fs
jecxz
outsl
aaa
jl
mov
cltd
add
pop
in
out
push
add
insb
cld
cltd
sbb
fnstenv
outsb
lret
js
sub
and
push
cmp
and
lods
pop
iret
and
sub
and
fcomps
xor
js
mov
push
arpl
out
daa
ds
aad
outsb
testl
jno
dec
inc
sub
dec
movsb
aam
cmp
in
or
xchg
mov
pushf
mov
jle
and
lock
add
shl
or
enter
sbb
mov
xchg
mov
addr16
add
js
into
imul
add
clc
or
pop
sbb
adc
add
insb
pop
dec
bound
push
mov
cmpsb
lcall
daa
loope
push
or
pop
loop
in
notl
push
sahf
scas
call
call
mov
pusha
jbe
push
jnp
std
sub
test
cmp
cmc
dec
icebp
stos
fistpl
cmp
or
sbb
cmpsb
pcmpeqw
dec
nop
cmp
jl
fwait
xor
leave
out
std
xor
movsl
push
dec
stos
dec
hlt
mov
inc
inc
dec
jge
in
push
lds
nop
push
scas
add
rclb
lds
les
jl
cmp
cmpl
inc
pop
enter
int
fidivs
adc
dec
cmp
adc
cmc
out
fsubrl
sub
push
push
adc
rcr
bound
clc
stos
arpl
jne
pushf
das
xlat
sbb
push
lahf
aad
cmpb
bound
cli
mov
cs
inc
test
push
sbb
fs
dec
popf
loope
mov
xor
loope
stos
scas
inc
adc
in
xchg
lcall
mov
les
in
ja
ja
mov
xlat
cmp
inc
movsl
lock
mov
nop
loop
xchg
imul
pop
dec
mov
jecxz
and
cltd
inc
cmpsl
dec
add
shl
xchg
aas
rorl
xchg
jae
mov
rcr
out
das
and
or
sbb
ljmp
scas
jl
negb
jns
sti
adc
inc
push
and
out
xor
stos
jecxz
sub
mov
leave
jmp
inc
mov
jp
int
jp
add
fidivl
or
push
loopne
fsubrs
into
ds
std
and
adc
pop
fldenv
push
test
arpl
xor
test
int3
mov
dec
dec
je
mov
lock
pop
out
imul
inc
rcrl
mov
mov
mov
ja
test
xor
shll
clc
xor
jp
ret
hlt
sahf
incl
adc
push
cwtl
loopne
pop
xchg
mov
and
inc
addr16
ret
movsb
negb
jl
leave
dec
jg
mov
pop
sbb
ret
lret
and
jns
mov
call
mov
jecxz
jle
int
ss
ljmp
adcb
push
pusha
outsb
push
jp
mov
pop
mov
shrl
fistps
popf
pop
cwtl
xor
jmp
bound
add
xor
mov
inc
cmp
je
and
push
popf
repz
cmpsb
and
rol
aaa
popf
and
test
adc
in
int3
jb
rcrb
xor
out
xchg
adc
flds
inc
sbb
cmp
sub
into
ljmp
lea
xor
outsl
mov
aaa
mov
fldenv
ficompl
dec
out
jp
push
lcall
push
fidivrl
outsb
cli
pop
ljmp
sahf
sub
jp
push
lcall
push
fidivrl
outsb
cli
pop
ljmp
sahf
sub
jp
push
lcall
push
fidivrl
outsb
cli
pop
jmp
sbb
sub
jp
push
lcall
jns
testb
mov
xchg
pusha
mov
xor
decb
mov
cmp
dec
push
ds
push
test
mov
dec
call
mov
cmp
dec
lcall
mov
mov
call
rcrb
call
or
lods
js
mov
dec
imul
dec
xor
popf
xchg
mov
mov
mov
mov
ss
xchg
inc
ds
andl
sub
inc
out
sub
imul
sub
mov
pop
sahf
aam
inc
wbinvd
cmp
inc
out
call
jae
cmp
popf
inc
sbb
dec
mov
dec
addr16
pop
mov
xlat
popa
push
fistl
ret
addr16
sub
std
int
std
push
jnp
hlt
out
dec
jno
popf
clc
sbb
xchg
stos
cmc
stos
push
ds
into
mov
push
lret
popf
cmpsl
sbb
inc
sbb
pop
lahf
mov
sbb
test
mov
dec
call
sub
push
sub
pop
into
push
dec
cwtl
dec
shll
movsb
or
pop
cmpsb
aas
test
insl
ljmp
jle
sub
cmp
mov
lret
pop
mov
xchg
jo
insl
jmp
repnz
popf
sub
sub
lret
jle
pop
enter
call
mov
cmp
dec
pop
into
push
ds
push
test
mov
dec
call
mov
cmp
dec
pop
into
push
cli
shll
add
fs
cmp
in
ljmp
jp
insl
pop
mov
sbb
pop
push
shll
in
test
fstps
dec
fsubl
add
push
lods
imul
sub
in
sub
cmp
cld
rorb
xchg
mov
jge
repnz
mov
xchg
push
push
push
xchg
mov
sbb
cmp
dec
dec
push
in
dec
or
in
push
mov
xchg
mov
mov
aad
push
pop
inc
cmc
lods
pop
push
bound
pop
or
fmull
fdivl
cmp
xchg
mov
ja
out
insb
movsb
adc
push
scas
add
inc
shlb
sbbl
or
push
fistpll
loop
push
inc
push
jae
lods
push
arpl
xchg
inc
push
fildl
data16
fcmovu
fwait
ret
int
dec
stc
sbb
out
shr
js
int
pusha
mov
or
and
sub
mov
inc
neg
les
and
outsb
push
pop
and
cmp
cmpsl
pop
mov
jno
adc
dec
aas
push
aam
lahf
jle
mov
or
inc
lcall
int
jmp
std
cmpsb
rep
pop
and
rcr
push
lcall
lahf
scas
lret
data16
sub
repz
push
sarl
into
cvtpi2ps
inc
adc
lret
sbb
xor
out
ljmp
adc
out
cmpsb
mov
mov
nop
lds
dec
mov
movsl
xor
in
sbb
int
hlt
in
sub
fadd
and
and
inc
fimull
mov
movsl
ret
jno
sub
sub
into
insl
popa
call
push
fsave
sbb
add
popf
scas
dec
mov
xchg
mov
xchg
leave
lods
jb
out
and
and
insb
or
rcr
rdtsc
xchg
sbb
pop
pop
ret
rcrb
leave
mov
inc
jle
xor
shll
push
add
test
xchg
and
les
js
add
or
adc
nop
mov
mov
fmuls
or
dec
inc
inc
movsl
jmp
and
dec
inc
adc
icebp
jg
dec
dec
out
ficoml
nop
fsubs
mov
jp,pn
dec
test
sbb
or
sbb
cmp
ja
movsb
out
jo
jmp
jge
jnp
mov
lea
add
call
push
xchg
lea
push
or
scas
push
xchg
sbb
inc
or
sub
mov
push
lods
xchg
dec
out
pop
in
fdivr
sub
icebp
in
xchg
mov
mov
adc
pop
push
test
dec
push
mov
xor
nop
push
imul
push
cli
ficomps
in
or
lret
push
mov
lret
sarl
sbb
push
gs
dec
flds
inc
lahf
leave
stc
ja
adc
pop
xlat
adc
adc
lret
iret
pop
dec
adc
mov
fistl
push
pop
jg
dec
scas
push
ljmp
in
ret
push
sub
push
in
daa
mov
leave
inc
push
cmp
push
xacquire
sbb
out
mov
out
pop
scas
scas
pusha
scas
mov
xchg
movsb
push
lret
aaa
popa
ss
xor
dec
repnz
or
sub
mov
xchg
fisubs
cmp
dec
sarb
pop
adc
ja
pop
ljmp
dec
sub
testl
cmpsl
sub
fstpl
cwtl
and
dec
in
stos
ret
xchg
jmp
mov
jne
jnp
clc
enter
in
mov
lahf
inc
add
mov
daa
or
push
std
cmpsb
stc
pop
ds
xorb
int3
xchg
stos
mov
cmp
cmp
sbb
imul
insb
aam
sbb
xchg
mov
or
jecxz
xchg
imul
adc
test
roll
test
xchg
lock
iret
lods
pop
xchg
or
outsl
push
pop
loopne
insb
and
lock
mov
pop
xchg
out
lret
sub
sub
add
xchg
leave
xchg
repz
shrl
jno
cmp
pushl
and
add
mov
std
xor
push
ret
or
xchg
lods
cmp
sbb
push
and
pop
and
pop
xor
pop
inc
popa
int
test
arpl
and
jne
pusha
pop
sub
lods
pop
xchg
adc
lods
mov
cld
add
mov
dec
pushf
push
andl
add
fisubl
fiaddl
popa
mov
push
out
add
add
lock
loop
jle
mov
pop
popa
jecxz
mov
addb
nop
pop
inc
mov
mov
mov
add
pop
dec
js
movsl
pop
divb
inc
push
subb
xchg
aad
dec
jbe
out
xor
adc
repz
js
cmc
stc
pop
push
cmp
xlat
add
and
stos
cmp
pusha
popa
xor
sti
jp
bound
rcrl
xchg
and
popa
jno
cmpsb
stc
mov
loop
cmp
xchg
adcb
arpl
insb
push
test
nop
je
lret
movsb
rclb
jne
or
int
pusha
jmp
xchg
mov
fsubrl
adc
fwait
leave
mov
and
ljmp
fisubs
inc
cmp
mov
and
daa
xchg
andl
lahf
ret
sub
outsl
dec
push
push
repnz
cmpsl
and
add
jnp
pop
rcll
mov
sbb
lds
fistpl
sub
pushf
ds
ret
imul
pop
mov
lock
jle
jae
test
inc
adc
mov
fcmovnu
jb
das
mov
mov
pop
jl
cmp
out
roll
push
mov
and
bound
xor
clc
push
shrb
aaa
jnp
cwtl
loop
cli
filds
test
dec
jg
gs
add
lods
sbb
ljmp
dec
test
dec
push
push
loop
xchg
mov
lahf
push
je
out
in
mov
les
xor
fisubs
mov
movsb
mov
mov
andb
jnp
jp
xlat
shlb
sbb
hlt
lds
mov
mov
ret
jae
xchg
sahf
sbb
das
shl
popf
sub
push
in
adc
rcrb
hlt
cmp
in
mov
fwait
sub
pop
pop
fcoml
cmc
hlt
xchg
push
test
pop
notb
xor
adc
orl
insb
adcl
jnp
ja
fwait
push
ror
outsl
xorb
inc
mov
int3
sahf
adc
ds
dec
daa
cmp
add
jns
pop
cmpsl
cmp
cltd
adc
push
lds
jl
adc
dec
xorb
jle
arpl
mov
mov
pop
hlt
jmp
loope
ja
fldenv
mov
lods
insl
fimull
xchg
xor
hlt
mov
sbbb
mov
push
mov
subl
sbb
iret
adc
xlat
xchg
or
ljmp
jno
loopne
mov
test
imul
push
icebp
xchg
adc
mov
xor
out
cmpsb
sbb
xchg
jl
vmovdqu
sbb
dec
mov
dec
cmp
movsl
in
loope
jo
pop
add
xchg
call
mov
in
orl
mov
icebp
shlb
pop
push
loopne
popa
push
and
add
pop
push
imul
js
jbe
loop
lock
shlb
cmp
sahf
call
dec
pop
lahf
xchg
lock
adc
sbb
cld
pop
enter
shrb
cs
cwtl
pop
setp
sbb
sti
repnz
pop
fbld
add
mov
pop
enter
hlt
lods
sub
lds
sbb
popf
adc
jge
hlt
aam
adc
push
mov
xor
mov
int3
sub
sub
cwtl
and
and
jl
lea
xor
int
call
inc
inc
jns
inc
cmp
and
mov
into
xor
nop
mov
xlat
push
iret
les
movsl
gs
in
jmp
ja
pop
mov
imul
mov
cs
outsl
fistpll
xor
sbb
sbb
cld
imul
jne
jnp
cmc
int3
ret
fisubrs
xor
add
push
mov
fistl
and
mov
test
cmpsl
push
xor
jnp
or
das
mov
sub
push
mov
lock
xchg
into
xor
gs
fwait
lret
in
mov
inc
cmp
aaa
andl
ds
leave
je
aas
out
enter
adc
push
dec
adc
out
and
stc
push
pop
xchg
das
mov
mov
in
fcmovbe
xor
jle
pop
out
faddl
push
jno
dec
bound
adc
popa
aad
enter
xchg
mov
cmc
test
shl
or
cmp
js
dec
fdecstp
shlb
sub
pop
or
in
add
cmpsb
push
icebp
xchg
in
es
je
aam
and
loopne
add
lods
mov
xchg
sbb
jae
test
and
divb
add
inc
push
pop
sbb
adc
daa
lahf
popf
mov
scas
adc
popf
push
inc
jbe
out
movsb
pop
je
nop
add
rorb
mov
jmp
sbbb
mov
fcompl
inc
insl
xchg
fsubrl
sahf
in
inc
shlb
jns
aad
popf
adc
lock
in
adc
js
mov
adc
test
lds
popa
adc
addr16
cltd
repnz
and
mov
jnp
add
mov
fildl
xchg
inc
add
pop
or
sbb
mov
push
insl
dec
sbb
sbb
cmp
push
pop
aaa
mov
loop
xchg
insb
mov
add
inc
sub
sti
push
sarl
mov
loope
lods
lock
xchg
inc
out
mov
pop
ja
fbstp
xchg
sbb
pop
cmp
sbb
loop
sbb
mov
fcoml
mov
into
xchg
loope
xchg
add
sub
xchg
or
aad
ds
jge
push
stos
push
scas
sbb
call
repz
js
fadds
jle
pop
lods
bound
sbb
jnp
addr16
or
cmpsl
dec
adc
mov
jb
sbb
imul
fninit
aad
movsl
cs
inc
xor
push
ret
push
and
rcrl
adc
lods
dec
das
movsb
int3
mov
pop
addr16
mov
test
jle
fisttpll
addr16
inc
inc
lods
cmp
mov
out
push
das
popf
jnp
or
add
faddl
lock
or
mov
or
pop
das
out
add
icebp
jle
push
sahf
fnstcw
xor
loope
out
test
xor
mov
mov
or
dec
cmp
dec
push
xchg
pusha
xor
ljmp
aad
clc
dec
fbstp
add
xchg
out
jp
enter
jge
aaa
xchg
ljmp
cmp
loope
inc
pop
test
cli
add
mov
push
mov
inc
jl
xor
lahf
pop
xor
test
movb
lcall
adc
cmpsl
inc
or
sahf
pusha
inc
dec
addl
mov
mov
and
or
cmp
sub
aas
lret
or
pop
in
xchg
pop
mov
cli
inc
sbb
cmp
call
jg
cmp
and
fucomi
fwait
xchg
psubq
lods
es
std
pop
je
imul
push
pushl
stc
push
xchg
xchg
scas
and
mov
adc
adc
flds
mov
adc
addr16
pop
enter
mov
out
adc
movsl
jl
sub
xchg
in
je
mov
jno
xchg
fs
cmp
lahf
adc
fisubl
cmpsl
popf
add
inc
adc
negb
jno
test
pop
lret
sub
test
xorb
sub
mov
pop
sbb
movsb
stos
push
imull
popf
outsl
rorb
mov
adc
pop
xchg
pop
pusha
xchg
cmp
mov
cmp
lret
mov
mov
mov
inc
xlat
jnp
je
mov
cmp
mov
iret
fdivrl
addr16
cs
push
sbb
mov
mov
jp
mov
sbb
jp
cmp
mov
push
lds
inc
sub
pop
int3
test
cmpsb
xchg
add
xlat
test
es
sub
add
push
cwtl
pop
push
js
ja
iret
sarl
clc
outsb
dec
imul
lahf
loope
movsb
dec
jecxz
fidivrs
mov
inc
cwtl
or
jbe
test
push
movsl
sahf
dec
rorb
push
sub
sbb
stc
pop
mov
imul
ret
cmc
out
test
inc
xor
arpl
test
pop
in
pop
cmp
sbb
mov
shlb
lea
je
out
sbb
add
lea
adc
ficomps
xor
or
xlat
dec
sti
xor
cmc
adc
jle
scas
daa
mov
mov
js
pop
js
xor
lods
movsl
das
sahf
call
imul
into
lcall
adc
push
xor
sbbl
pop
mov
int
cli
bound
mov
and
iret
lods
or
xchg
jp
push
add
add
jecxz
ja
mov
scas
sahf
jge
negb
rcrb
rcrb
mov
cltd
xchg
iret
dec
dec
jecxz
subb
xchg
pop
pop
dec
loopne
nop
ret
jecxz
idivl
arpl
cs
lahf
lea
lods
aad
xchg
test
mov
pop
push
insl
cmp
imul
lods
jmp
sarb
xchg
xor
sub
clc
jne
push
je
jns
daa
sub
add
cmp
pop
in
cli
jmp
jp
addb
mov
and
push
cwtl
sub
xchg
inc
mov
scas
je
sbb
dec
jle
fisttps
inc
out
pop
adc
push
pop
or
mov
nop
imul
mov
pop
int3
xor
and
aas
mov
cli
test
add
mov
rcrb
xor
pop
pop
mov
insb
repz
jle
push
sub
test
fisubrs
ja
movsl
rolb
in
fsubl
inc
mov
incb
adc
sub
xchg
rcrl
insb
outsl
repnz
rcrl
stos
pushf
push
xor
ja
push
jge
or
loop
add
out
imull
cmc
in
adc
loop
repz
insb
cmp
pushf
and
sbb
loope
pop
jg
adc
ffree
das
lcall
inc
cwtl
popa
push
pusha
dec
fisubrl
pop
cwtl
call
adc
ds
sbb
imul
jmp
lea
je
cmp
inc
cmp
ficoml
pop
call
ret
jnp
jb
mov
shrb
movsb
or
fadd
push
lcall
out
mov
mov
add
sbb
mov
fsubs
cwtl
adc
hlt
pop
add
dec
fwait
xchg
mov
or
push
sub
jge
mov
aaa
xchg
jno
outsl
cld
out
mov
stos
xchg
adc
enter
enter
lds
repnz
fidivl
imul
jno
xchg
mov
add
loop
jg
not
aam
ds
mov
pop
scas
iret
cmp
ds
ljmp
xor
adc
sbb
decl
repz
lea
mov
ret
lcall
pop
and
cmp
int
inc
test
push
mov
xor
and
scas
xchg
mov
shll
push
adc
mov
push
loop
xor
outsb
mov
lret
fildl
mov
cmc
cltd
ret
cltd
push
pop
mov
call
xor
add
lret
xchg
popa
subb
push
sub
cmp
and
in
movb
adc
call
arpl
test
ficompl
cmpb
in
test
inc
or
lock
sub
imul
mov
mov
cs
das
pop
jne
subl
xlat
lret
shrl
jns
jmp
mov
clc
mov
adc
jge
subl
or
aas
xor
pop
xlat
comiss
and
mov
aaa
sbb
xchg
call
cmpsb
lahf
fstl
dec
jg
mov
out
in
js
sbb
fcmovnb
push
xchg
jl
sarb
inc
lret
call
test
xchg
jmp
rorl
fisubrl
inc
xchg
and
pop
mull
cmp
pop
jmp
jle
lret
dec
nop
mov
movsb
test
mov
and
jle
addr16
mov
and
pop
jnp
xchg
dec
mov
add
leave
sahf
mov
sbb
inc
je
and
push
dec
mov
pusha
cwtl
sbb
add
int3
pop
repz
out
leave
sub
ja
sbb
adc
mov
xor
add
push
pusha
mov
sub
sbb
or
jmp
repnz
xchg
inc
int
leave
push
call
mov
mov
mov
adc
lret
pop
cli
sub
insb
lds
scas
jno
fs
mov
mov
xor
mov
pusha
jmp
daa
andl
clc
inc
push
sub
stc
sahf
push
jbe
jno
in
dec
outsb
xchg
in
adc
dec
or
sbb
push
add
gs
or
xor
scas
out
sahf
data16
dec
repz
adc
pop
jecxz
sbb
out
leave
jnp
int3
cs
xchg
out
fisubs
add
in
scas
aaa
out
daa
xchg
xchg
xchg
leave
adc
into
push
mov
test
dec
insl
cli
cmpb
mov
push
push
lahf
jl
lahf
push
addr16
test
out
jg
cli
pop
sub
pop
mov
mov
pop
jmp
sahf
mov
arpl
rorl
sti
out
sti
fsubrp
roll
mov
out
dec
scas
jl
scas
fstpl
xchg
pop
mov
xchg
data16
loop
or
xor
aam
push
xlat
mov
mov
repz
outsb
popf
popf
cli
enter
xor
enter
sbb
sbb
add
jno
popf
push
jno
testl
cmp
stos
cmpl
shll
mov
pop
xor
jl
repz
and
dec
mov
mov
out
push
push
jne
mov
xchg
lea
je
sti
xchg
mov
es
popf
push
daa
xchg
push
push
cld
mov
lock
xchg
xchg
pop
pop
add
aam
enter
addr16
aas
push
add
dec
mov
rcrb
or
or
je
lods
inc
mov
loopne
ja
push
movsb
mov
scas
std
or
inc
cmp
je
mov
adc
jg
sbb
fmul
pop
es
adc
xchg
pop
popf
xchg
xor
ljmp
test
mov
lea
lods
add
sarl
cmp
ret
push
sbb
ljmp
sbb
loope
shl
sti
fcmovnb
push
roll
cltd
mov
aam
sbb
gs
push
mov
adcb
iret
in
push
repz
dec
cmp
bswap
add
sbb
mov
aas
lret
outsb
cmpsb
jo
cmp
jb
lret
loopne
scas
in
mov
jl
loope
and
movsb
cwtl
jecxz
pop
dec
jle
insb
xchg
dec
adcl
xchg
sbb
cmp
lret
jecxz
sarl
lret
dec
adc
push
pop
addr16
cld
xor
fimuls
mov
mov
mov
add
inc
jo
mov
in
rol
stc
test
iret
sti
xor
adc
imul
jbe
pop
movhlps
mov
in
test
mov
jmp
jno
or
leave
mov
push
mov
mov
in
jae
and
daa
das
sub
ja
aad
repz
clc
mov
jmp
xor
and
std
push
repz
jg
xchg
cmp
jne
loop
jo
notl
test
adc
jo
sbb
dec
inc
mov
or
rcl
inc
dec
push
imul
mov
xor
out
cmp
sub
cpuid
out
ficomps
imul
xor
scas
sbb
jle
or
pop
sub
xchg
jns
xor
xchg
imul
popa
insl
xchg
cli
and
cmp
cmpb
push
mov
pop
and
sub
xchg
out
push
adc
imul
fstps
lods
mul
sbb
sbb
xchg
pop
dec
xchg
mov
popa
push
mov
out
les
xchg
popa
mov
push
ret
hlt
in
xor
xor
xchg
out
or
cmp
xchg
sub
cmp
fst
ret
pop
ret
mov
mov
ret
sub
xchg
cmpsb
fistpl
shll
push
xor
pusha
sub
iret
xor
xor
push
lds
outsb
enter
call
mov
cmp
dec
pop
into
push
ds
push
test
mov
dec
call
mov
cmp
dec
pop
into
push
cmp
mov
dec
call
mov
cmp
dec
out
lret
js
mov
cwtl
xchg
outsb
fmuls
fdivrp
scas
or
and
sahf
dec
cltd
shlb
xchg
and
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cs
sbb
scas
dec
ja
xor
or
pop
add
add
pop
add
add
or
cmc
add
add
add
insl
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
bound
add
xchg
add
add
add
dec
add
cmp
add
adc
add
mov
sub
pop
add
add
add
add
add
add
add
add
add
test
pop
add
add
add
add
add
add
add
ret
add
inc
add
add
add
add
add
ret
add
add
add
add
add
add
add
cmp
and
stc
add
add
add
mov
and
sub
sub
popa
add
pusha
add
mov
add
add
add
add
add
mov
add
add
addl
cmp
filds
in
lcall
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
cmpsl
add
add
dec
add
add
add
sub
add
or
imul
outsl
add
add
add
add
add
add
add
sub
sub
jo
jecxz
and
mov
cmc
add
add
add
add
add
add
pop
add
add
mov
add
add
in
add
add
add
add
add
str
mov
add
or
dec
add
lret
add
add
add
add
add
roll
imul
int3
add
sub
mov
jo
inc
add
add
rolb
xchg
mov
mov
add
add
add
incb
add
add
add
add
sbb
testl
sub
sub
sub
dec
add
add
add
add
add
push
add
add
add
in
add
add
add
add
add
add
push
add
add
and
add
add
add
add
push
add
add
add
add
add
or
dec
add
add
in
fadds
fadds
sub
jne
or
jno
sub
add
add
add
add
add
add
add
sti
add
add
add
add
add
add
add
add
popl
and
add
add
add
aaa
add
add
add
add
add
add
adc
mov
mov
add
jle
pop
add
roll
mov
add
sub
sub
daa
add
add
add
add
add
add
add
add
add
insl
add
add
add
pop
add
add
add
add
cmpsl
add
stos
add
add
add
add
div
push
iret
lds
movsl
aaa
xchg
mov
xorb
or
scas
cmp
stos
fwait
mov
xor
mov
jb
data16
mov
iret
imul
mov
push
xchg
pop
sbb
push
and
mov
pop
jb
mov
mov
mov
and
inc
mov
push
sbb
test
add
mov
add
mov
xor
int3
lock
js
xchg
cmp
cld
in
mov
test
lods
lods
int3
cld
cmpsl
enter
out
sub
adc
mov
aas
movsl
and
mov
aas
pop
jne
add
mov
or
cmp
out
or
lret
sub
adc
jne
and
xor
lods
out
lcall
insb
adc
push
int3
js
xor
mov
cmp
movsl
es
cmpsl
dec
sti
lock
dec
rolb
aaa
cmp
dec
mov
fidivrl
and
in
and
sbb
popf
jle
les
mov
repnz
add
aam
xchg
clc
jle
sbb
add
shlb
out
rcll
test
pop
fcmovne
cs
lcall
bound
loop
ret
imul
negl
or
ljmp
add
in
in
cmp
mov
sub
in
or
mov
fbld
js
mov
std
add
shll
mov
push
inc
ret
sbb
push
xchg
nop
ss
pop
mov
sub
inc
outsb
inc
push
inc
sub
sub
popf
push
enter
sti
lcall
rcll
pop
mov
lds
and
lds
shrb
mov
pusha
xor
arpl
push
fs
xchg
lds
cli
fldl
xchg
xchg
and
outsb
push
lea
gs
cmp
push
pop
xchg
mov
clc
add
call
mov
mov
or
sbb
xor
mov
in
sbbl
push
mov
mov
push
mov
push
cmp
icebp
and
sar
ret
insl
add
std
lds
jns
cmp
mov
push
lahf
add
cmp
xchg
lret
imul
push
hlt
ds
outsl
leave
sub
pop
and
mov
outsb
lahf
lods
dec
sti
popa
std
inc
in
cmp
or
icebp
add
jp
mov
leave
sub
sti
lds
add
mov
dec
jmp
mov
xchg
push
or
push
cltd
testb
jmp
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
