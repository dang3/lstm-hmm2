call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
loope
icebp
lcall
mov
movsl
pushf
cli
bound
jae
inc
cmp
and
pop
add
jp
mov
lcall
mov
sub
jno
inc
or
and
xor
loope
icebp
lcall
mov
xor
push
and
pop
xor
and
inc
xor
cmp
jp
mov
xor
je
cmp
cs
insb
lods
mov
push
and
and
mov
pusha
jns
fisttpll
scas
cmp
xor
push
push
aaa
push
jne
sbb
hlt
pushf
arpl
dec
sahf
into
push
fisttps
aam
and
pop
adcb
add
dec
sbb
mov
add
mov
sbb
movsl
stc
loopne
adc
push
sub
pop
ljmp
pusha
xchg
int3
outsl
fidivrl
jno
mov
push
test
test
jp
stos
jno,pn
lock
and
or
mov
cmp
lds
bound
xchg
adc
mov
sarl
fiaddl
adc
inc
xor
and
dec
add
push
test
xchg
lcall
fidivs
arpl
xor
push
cmpsl
daa
jo
fs
pop
xchg
repnz
les
aam
adc
jnp
pop
push
jns
cmp
push
jnp
xchg
icebp
incl
cmpsb
mov
sub
jno
inc
sub
and
pop
add
jp
mov
lcall
mov
sub
jno
inc
sub
and
pop
add
jp
mov
test
rcll
adc
pushf
mov
or
add
inc
mov
inc
push
pop
fstl
stc
and
xchg
and
jg
bound
sarb
sbb
lods
push
or
xchg
xchg
add
xchg
popa
xor
pop
shll
sbb
shr
push
popl
cmovae
loopne
imul
nop
cli
mov
mov
xor
subb
lret
dec
push
pop
xor
divl
cld
mov
jnp
in
adc
aam
jmp
mov
outsb
cmp
mov
jne
or
dec
lahf
cmp
imul
movsl
mov
mov
or
imul
icebp
ret
xor
shlb
pop
int
push
xlat
jb
aas
int3
rcrb
mov
fs
int3
jno
dec
mov
imul
mov
xchg
in
cmp
jnp
sub
inc
sub
mov
loop
pop
xor
push
arpl
call
push
sbb
cmp
mov
and
mov
or
pop
jge
gs
adc
call
mov
jecxz
outsl
js
insb
dec
adc
testb
push
out
pop
xchg
sub
push
addb
mov
in
mov
lahf
xor
out
sub
ja
jmp
add
fistps
cmpsl
and
add
mov
xor
jge
jecxz
cli
addb
ja
test
dec
repz
in
clc
xor
cmp
nop
xchg
cmpsl
call
or
mov
xchg
mov
cld
mov
adc
inc
shlb
int
push
lds
clc
pop
int
outsb
testb
lret
mov
cmc
pop
inc
fistpll
push
sbb
rol
add
xchg
cld
inc
push
mov
push
bound
mov
push
push
lret
fisttps
and
imul
or
iret
in
les
jge
sti
jno
mov
rorb
lds
jnp
sbb
inc
lea
fidivrs
outsl
inc
hlt
inc
sbb
cltd
mov
or
dec
push
rcl
jne
das
gs
shl
js
data16
sub
mov
jnp
or
sub
sub
inc
cmp
aaa
pop
sub
sub
inc
ret
mov
inc
and
mov
cwtl
iret
push
mov
push
in
sub
jge
sahf
cli
mov
mov
lds
repz
dec
mov
aaa
cltd
xor
add
lret
mov
js
bound
pusha
pusha
and
mov
xchg
testb
shrb
rolb
pop
push
repz
in
jb
test
mov
mov
mov
pusha
push
fwait
mov
cli
out
cld
popf
and
xor
dec
aam
jb
sbb
mov
pop
adc
lret
mov
dec
inc
je
mov
aaa
test
inc
in
cmp
and
lret
or
lcall
imul
test
inc
loop
lock
mov
push
xchg
cltd
xor
xlat
roll
aas
sete
cmp
icebp
jp
addr16
repnz
movsl
fistpl
mov
sbb
scas
inc
mov
xor
adc
shl
cltd
arpl
pusha
xchg
mov
mov
dec
imul
adc
in
mov
mov
jl
fsubs
lcall
out
cmp
lret
pushf
xor
push
cmp
sbb
mov
fadd
xchg
in
add
pop
cmc
cmp
js
inc
xor
mov
mov
repnz
mov
dec
pop
jecxz
fdivrl
cmp
or
xchg
cwtl
adc
movsb
repnz
xor
push
fstpl
lcall
daa
les
or
push
out
fistpl
pushf
repnz
sub
fists
popa
rolb
std
hlt
cld
or
bound
jb
ss
xor
daa
je
add
jge
adc
sub
mov
dec
aaa
sahf
outsl
or
testb
sarl
pusha
xlat
jp
mov
or
jmp
fidivrl
in
mov
out
add
inc
sub
jecxz
enter
rcrb
inc
les
lahf
add
mov
mov
in
js
and
pop
jle
je
test
xchg
sub
es
pop
lods
jnp
cltd
cmp
sub
popa
pop
mov
or
cld
stos
mov
in
icebp
movsb
jg
or
xor
xor
in
inc
or
or
sbb
loopne
movsl
icebp
pop
adc
adc
pop
cld
in
sub
sbb
mov
mov
test
jmp
movsb
adcl
sbb
push
imul
xchg
pop
cmpsb
movsl
bound
pop
ret
mov
and
and
add
imul
dec
iret
out
ret
roll
cmp
scas
dec
out
cwtl
mov
mov
mov
out
sub
inc
sub
lock
sub
in
inc
fwait
icebp
or
inc
lcall
mov
ds
lock
aam
call
call
cltd
pop
pushf
call
push
dec
pop
stos
inc
and
mov
cmp
adc
pavgb
push
loopne
outsb
lret
in
xlat
xlat
out
ja,pn
mov
add
pop
or
sbb
popf
loope
lea
lea
inc
xchg
in
inc
inc
cmp
xchg
leave
pop
imul
mov
aam
test
inc
lret
add
xchg
mov
dec
pop
cmp
or
adc
cmp
cmp
fiadds
pusha
dec
icebp
xor
leave
mov
mov
imul
jb,pn
popa
pop
mov
mov
rcrl
and
adc
insb
iret
lods
cmp
cmp
cmp
cmp
fxch
dec
or
in
dec
xchg
nop
ja
ficomps
or
xchg
movsb
pop
mov
inc
mov
or
sbb
or
and
and
aam
shll
fs
leave
dec
ljmp
add
xchg
pop
xchg
int3
lcall
xor
jns
xor
iret
movsl
pop
push
mov
loope
sub
xchg
cld
adc
mov
ljmp
sbb
mov
jns
and
cmpsb
pop
nop
inc
cmpsb
push
dec
js
je
cwtl
pop
pop
dec
push
popa
pushf
out
add
test
ret
xor
subb
lahf
jge
rol
cmpsl
mov
fcompl
fnstenv
inc
sbb
imul
cmpsb
xchg
mov
inc
mov
jmp
jae
jno
add
inc
dec
cmp
cmp
nop
mov
jp
mov
jnp
adc
lcall
push
cld
sbb
push
into
mov
lods
das
mov
shrl
xchg
lock
lret
mov
lea
push
test
in
and
leave
rol
in
mov
ror
hlt
mov
mov
xchg
dec
in
pop
add
nop
mov
jno
movsb
sti
mov
ja
add
mov
dec
mov
or
pop
hlt
push
fwait
dec
fwait
add
test
iret
xchg
sub
iret
popa
mov
pop
ja
jmp
mov
lahf
cltd
jo
mov
jle
mov
test
lods
imul
cmovnp
xbegin
add
pop
dec
add
loop
fisubs
mov
pop
popa
stos
and
push
inc
mov
mov
inc
jbe
jno
or
and
add
push
mov
cmpsl
int
sub
sub
push
call
cmc
fs
inc
fnstcw
rorl
jmp
mov
pushf
mov
decl
jmp
inc
in
aam
sbb
cmpl
pop
push
xlat
lods
pop
dec
aam
leave
jne
out
mov
cltd
aaa
imul
and
hlt
nop
lahf
aam
mov
loop
repnz
std
stc
mov
lahf
pusha
mov
imull
mov
jbe
jp
xchg
pop
pop
orb
fwait
push
cmpsl
stc
mov
icebp
mov
call
mov
sbb
std
lods
fstl
insb
stc
imul
mov
pop
xor
aad
jl
dec
mov
leave
lods
jge
push
out
sbbl
addb
add
lock
nop
pop
outsb
cwtl
fbstp
mov
lds
sub
shl
cmp
push
xor
popa
jmp
mov
inc
test
ret
rolb
sar
push
pop
sbb
xlat
jnp
adc
inc
nop
mov
mov
les
inc
ret
or
mov
loope
pushaw
mov
in
or
stc
push
mov
push
stos
push
and
add
std
inc
dec
out
adc
mov
frstor
into
pop
or
and
fwait
daa
int
xchg
ss
scas
fstenv
push
inc
mov
or
push
xor
loop
lret
jg
pop
in
test
inc
pop
insb
std
ret
xchg
add
dec
pop
into
sbb
sbb
jmp
xchg
cltd
jns
out
mov
push
sub
mov
loopne
out
inc
test
adc
jl
mov
xor
cmpsb
pop
in
lods
repnz
inc
addr16
or
add
pop
adc
dec
sbb
lods
fs
outsb
nopl
lods
mov
pop
sub
jmp
leave
sti
xchg
mov
push
ljmp
stos
dec
sub
dec
dec
mov
push
adc
jp
dec
push
int3
loope
mov
and
and
and
sub
jecxz
jne
mov
mov
iret
loopne
push
push
mov
and
ret
cmp
xchg
test
add
push
xor
and
orb
bound
jecxz
cmpsl
fldl
clc
cmp
xlat
cli
cmpl
daa
cmp
jne
mov
rcl
test
mov
int3
imul
inc
imul
orl
jle
pop
orb
addr16
popl
mov
js
mov
mov
scas
nop
push
mov
movsl
aam
push
bound
lds
cmp
adc
xchg
gs
lcall
mov
mov
cmc
xlat
push
into
fnstenv
xchg
cmp
test
push
jmp
push
mov
jne
sbb
adc
shrl
mov
imul
stos
movsb
and
push
out
inc
iret
loopne
jmp
push
xchg
cltd
mov
pop
xchg
lahf
pop
lret
lods
in
add
jne
lods
sbb
sbb
mov
lahf
fs
fwait
lods
cld
in
inc
add
inc
jmp
sbb
cwtl
test
push
stos
pop
imul
pop
and
hlt
or
push
sub
mov
les
out
idiv
inc
or
test
inc
pop
pop
mov
jbe
xor
loop
jbe
mov
xor
sahf
mov
enter
mov
movsl
jecxz
add
outsb
adc
inc
icebp
sub
sti
shlb
int
xorl
cltd
xor
cmp
outsl
mov
push
lea
dec
add
push
roll
data16
pop
lods
add
popa
divb
adc
jns
pop
and
les
sub
nop
scas
push
mov
adc
push
adc
mov
arpl
xor
or
loop
push
lret
imul
adc
sahf
cs
sub
imul
sbb
mov
fidivrs
iret
mov
clc
fdivr
cmp
insl
sub
in
sub
stc
mov
arpl
xor
or
out
xchg
in
shl
xor
dec
mov
lock
daa
scas
sbb
jge,pt
les
pusha
mov
test
add
push
ds
inc
xor
lea
and
or
lds
shll
and
icebp
pop
pop
adc
dec
std
mov
stos
dec
sbb
shll
fucom
aam
scas
mov
or
dec
sub
pop
sub
scas
decb
jge
dec
adc
fdiv
data16
mov
test
lock
out
or
shll
mov
jl
sub
dec
cli
jge
int3
repz
mov
aad
stos
fbld
insb
dec
adc
iret
and
xchg
adc
jecxz
xchg
jae
push
mov
test
sub
mov
sbb
inc
daa
hlt
xlat
sub
inc
add
pop
xchg
stc
lods
sbb
cmp
pop
ja
sub
mov
adc
les
stc
cwtl
lret
jae
ja
roll
pop
add
test
je
add
push
repnz
push
pop
repnz
push
subl
les
mov
int
in
test
test
test
cltd
shll
inc
ss
int3
scas
add
mov
push
pop
enter
and
fisubl
mov
outsl
movsb
insl
and
mov
hlt
outsb
xor
mov
popf
aas
push
mov
fmuls
nop
mov
sbb
mov
rolb
and
xor
mov
sbb
push
or
lcall
mov
and
test
inc
adc
pop
dec
es
pop
lcall
jne
sbb
ret
push
aaa
popa
pop
iret
inc
push
sbb
leave
mov
or
out
or
es
xor
cmc
mov
out
icebp
add
mov
insl
mov
aaa
pop
push
mov
mov
pop
in
and
jmp
pop
cmpsl
jb
xor
xor
sub
push
fnstsw
or
int3
mov
and
stc
test
cmp
out
xchg
push
outsl
aaa
fs
mov
cltd
mov
jle
xor
inc
fs
xlat
sub
sub
mov
adc
add
xchg
rorl
jbe
push
mov
fstps
dec
fldl
sbb
stos
jns
dec
or
inc
aam
scas
jge
and
aad
jg
test
cmpsl
xchg
pop
inc
inc
dec
or
mov
mov
push
pop
lds
ja
out
inc
sub
mov
inc
push
mov
sub
cld
imul
jge
inc
std
rcrl
xchg
fnsave
setno
fiadds
lods
adc
outsb
mov
xor
push
sub
stos
rorb
mov
icebp
cli
insl
adc
cmc
pop
push
adc
repnz
sub
sbb
push
dec
cmp
mov
popf
outsl
xchg
cli
shrb
jg
sbb
ret
pop
imul
data16
aas
jg
iret
repz
sti
sbb
mov
lods
mov
gs
in
js
xchg
or
arpl
dec
and
cwtl
bndstx
mov
mov
or
insb
sbb
mov
shll
pop
pop
insl
shlb
push
jmp
jns
and
cli
adc
lcall
into
iret
add
and
sahf
and
mov
mov
repz
stc
shlb
pop
fistps
cli
push
pushf
fisubrs
jecxz
push
enter
sub
std
out
int
mov
inc
jo
push
fmull
inc
imul
ret
jb
cltd
and
stos
sbbl
outsl
adc
pop
iret
ja
mov
enter
rcr
stos
or
push
lea
mov
jo
lods
mov
mov
push
je
mov
ljmp
js
push
push
mov
push
add
mov
cmp
cltd
mov
and
scas
and
sbb
inc
mov
lret
std
sub
es
xchg
mov
and
xchg
add
enter
fidivs
pusha
cwtl
or
repz
cs
add
pop
or
sub
pop
and
leave
or
dec
xor
call
xor
sub
xor
cmpsb
pushf
and
and
sahf
insb
mov
stc
sub
jo
add
pop
or
repz
fnstsw
fucomp
jp
andl
rol
pop
cmpsl
out
bound
push
fnsave
cmpb
jle
repz
cmp
cmp
mov
or
push
sti
loope
sti
push
fidivs
xchg
dec
or
mov
xchg
int
pop
pop
popf
push
repnz
lods
push
jne
loope
add
testb
rcll
out
ds
cwtl
outsb
lods
arpl
stos
andb
loop
adc
fsub
jo
bound
addr16
xchg
test
and
sub
cmpsl
movsl
jle
inc
jne
outsb
leave
cmp
dec
sub
cmp
push
mov
js
xchg
shrl
inc
loope
mov
loope
dec
jnp
test
sbb
mov
les
xor
adc
cmp
add
enter
xchg
sub
sub
leave
inc
sub
xchg
fdiv
lret
cmp
xor
sub
ret
fdivrs
mov
repnz
and
xchg
fisttpll
out
sub
inc
push
mov
addr16
jmp
inc
outsl
dec
into
mov
jg
sti
push
dec
jl
mov
pushf
movsb
rcl
out
ja
call
ss
sub
cs
pop
sub
push
enter
or
les
sbb
push
lahf
mov
scas
lret
mov
sahf
mov
and
inc
pop
insb
push
mov
and
test
inc
mov
in
mov
xor
mov
icebp
out
xor
cmpsb
xor
xor
jbe
add
mov
and
inc
xchg
adc
pop
mov
repz
xor
inc
pop
icebp
and
cmpsl
adc
xor
mov
adc
sub
std
mov
int3
xchg
icebp
mov
or
mov
aas
daa
call
xchg
push
aam
out
int
sub
sahf
xor
mov
pusha
sahf
xor
mov
scas
ficoms
movsl
fildll
arpl
notl
push
mov
daa
mov
nop
popa
sti
dec
mov
ds
mov
jnp
loope
insl
push
je
ja
jae
movsl
push
pop
nop
add
dec
xchg
lcall
push
xor
add
lret
pop
jmp
imul
pop
pusha
mov
mov
out
pop
sbb
cmpsb
fimull
jp
inc
dec
lods
out
jl
aam
les
cmp
cli
xchg
rcl
push
adc
jmp
in
lcall
sbb
xlat
scas
scas
mov
cltd
ret
mov
into
aad
adc
sub
imul
push
mov
mov
mov
in
mov
jecxz
cmc
in
mov
sbb
gs
std
sbb
xor
pop
sbb
mov
flds
pminsw
dec
outsl
xchg
mov
test
adc
adc
jl
movsl
pop
cmp
push
cmp
mov
push
add
pushf
jo
cmp
lock
pop
lods
pop
mov
je
lds
lods
adc
cmp
movsb
mov
ljmp
or
lcall
loope
sbb
shll
pop
push
dec
out
jns
call
or
cli
imul
sub
cmpsl
xor
cmpsl
mov
or
insb
add
mov
dec
fwait
cmp
or
ja
clc
pop
inc
and
loop
xor
mov
mov
pop
or
insl
xchg
push
arpl
pop
andb
mov
jo
sub
mov
mov
mov
fcmovu
sbb
hlt
nop
push
or
push
iret
stos
jno
or
cmc
inc
ds
push
loope
out
out
jbe
jnp
mov
adcl
xor
fbld
mov
xchg
dec
xchg
and
repz
push
dec
call
iret
mov
jns
repnz
loop
mov
pop
mov
les
mov
or
test
adc
cmp
push
mov
cmp
sbb
sub
cmp
dec
jge
jns
mov
fldcw
test
lds
mov
pop
addb
push
and
fs
or
sub
sbb
sahf
push
dec
cmp
sub
mov
jecxz
fidivrl
mov
xor
cltd
out
push
fildl
push
ds
xchg
dec
js
and
mov
repnz
xlat
pop
call
shll
jne
inc
sbb
mov
clc
test
mov
or
outsl
inc
jne
fnstcw
inc
rorb
cmpsb
adc
push
xchg
ret
in
into
push
inc
icebp
jl
push
inc
mov
push
push
mov
xor
rorl
daa
loope
test
jbe
in
pop
sbb
ficoms
or
mov
push
rcll
adc
hlt
leave
repnz
addr16
movsl
les
cmp
or
out
pop
adc
adc
enter
dec
add
push
jo
inc
push
xchg
or
loopne
cltd
lcall
mov
sub
jno
inc
sub
and
pop
add
jp
mov
lcall
mov
sub
jno
inc
sub
and
pop
add
jp
mov
lcall
mov
sub
jno
inc
sub
and
pop
add
jp
mov
lcall
mov
add
adc
sahf
or
dec
push
ret
stc
xchg
jmp
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
xor
adc
nop
xor
pusha
shlb
lock
lock
add
xor
pusha
shlb
and
adc
pusha
loopne
loopne
lock
sbb
sub
js
jo
cltd
push
mov
pushl
adc
xor
push
imul
push
xor
cmp
sub
call
test
lret
rcrl
xchg
mov
sbb
in
in
add
add
nop
mov
shrd
in
shlw
cld
xorl
push
xlat
loopne
into
cwtl
add
sub
loopne
lock
add
mov
adcl
lahf
sub
or
xchg
and
aas
xor
and
lock
cmp
shrb
loopne
cvtps2pi
addb
cld
inc
and
test
xor
call
or
repz
or
jg
sbb
adc
push
lock
leave
mov
xor
pusha
shrb
and
adc
pusha
enter
lock
insb
int
arpl
inc
xor
jo
orb
outsb
aam
rorb
xor
dec
addb
test
pusha
scas
and
ret
gs
pop
mov
btc
xchg
xor
jl
dec
hlt
pop
in
mov
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
xor
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
inc
inc
sub
xor
bound
shl
dec
pop
lods
push
cmp
and
idivb
fwait
xchg
mov
es
push
mov
into
cmp
cmp
pop
call
dec
xchg
lcall
sbb
mov
sbb
fbld
xor
mov
jle
push
std
push
cmpsb
sbb
int3
imul
lahf
cli
es
scas
addr16
inc
mov
and
inc
xchg
mov
shl
mov
ss
push
sbbl
inc
add
nop
dec
loop
push
std
and
or
mov
loop
inc
mov
int3
icebp
cmp
dec
mov
dec
xchg
pop
leave
popf
and
repnz
sbb
cmp
lret
fs
add
or
cmp
pop
clc
push
fimuls
ss
shlb
sub
pusha
repz
mov
in
xchg
mov
and
pop
lea
test
movsl
repnz
aam
push
pop
push
mov
adc
repz
int
das
nop
and
movsl
mov
pop
pop
lret
lret
and
xor
outsb
inc
add
ja
outsb
pop
in
stos
jnp
inc
sti
movsl
imul
pop
repnz
push
lahf
insb
and
cs
mov
dec
dec
scas
mov
and
stos
and
fs
imul
push
inc
arpl
icebp
sub
cmp
sarl
sub
aas
inc
adc
xchg
sbb
mov
xor
sub
rolb
adc
and
mov
jo
pushf
sbb
add
mov
jmp
cltd
pusha
and
jp
mov
push
daa
out
rorl
and
arpl
loope
push
xor
pop
jl
das
out
test
or
jmp
push
or
lret
mov
lods
and
sbb
shlb
icebp
push
adc
cmp
stos
mov
dec
rorl
cmc
push
or
xchg
pusha
mov
fnsave
repz
mov
xor
cltd
in
int
sarl
add
mov
sub
sbb
fs
push
jne
sub
imul
mov
dec
popf
cld
insl
sbb
dec
jg
cmp
dec
push
scas
add
mov
dec
clc
pop
ret
pusha
test
pop
cwtl
lea
adc
and
pop
mov
pop
mov
push
adc
mov
add
int3
xchg
mov
cli
and
pop
adc
aam
xor
leave
sub
popf
add
mov
cmp
movsb
jecxz
jg
aas
stos
and
cmp
call
sbb
mov
and
repnz
push
mov
pop
subb
add
out
dec
mov
rcl
fcompl
pop
mov
sub
fwait
lahf
xchg
ss
insb
add
push
ja
jb
dec
jb
add
lds
jecxz
call
sub
mov
sub
call
add
cwtl
lea
jns
cs
sbb
sub
popa
cld
adc
xchg
add
push
pushf
mull
xchg
jecxz
mov
jl
push
pop
pop
fdivrl
adc
and
mov
mov
jb
pop
mov
fistpl
mov
push
adc
push
inc
notb
out
scas
lahf
repnz
jno
out
push
and
xchg
cmpsl
jmp
adc
pop
lock
mov
pusha
in
pop
adc
ljmp
pusha
sar
dec
cmp
cld
mov
sbb
mov
lds
fcmovbe
andb
ret
imul
jb
mov
ds
add
cmp
pop
sbb
xorb
mov
sti
ja
mov
cmp
jae
mov
loop
scas
mov
icebp
loop
cld
or
jmp
imul
mov
stos
sbbb
mov
dec
daa
imul
xchg
in
or
pop
lcall
addb
cmpsl
xchg
shlb
mov
xor
jnp
pop
dec
test
xor
mov
scas
jb
fdiv
loop
ds
pop
mov
jnp
xchg
jnp
aaa
aas
cs
push
xchg
filds
ror
mov
mov
mov
or
dec
jp
scas
cmp
or
mov
stos
subb
xlat
in
arpl
pushf
popa
test
rolb
inc
jl
nop
jg
enter
inc
dec
shll
roll
push
loopne
inc
jns
dec
mov
jns
lcall
mov
adc
scas
or
daa
mov
nop
mov
jg
ret
sbb
shll
mov
mov
mov
lcall
inc
add
lret
pop
popa
mov
sahf
int
loopne
mov
mov
sub
mov
push
movsl
dec
shrb
and
int
or
sub
xchg
adc
rcl
notl
sbbb
sub
inc
and
xor
dec
xchg
outsb
mov
fdivrs
pop
pop
cltd
pop
fstl
sbb
cwtl
rcrl
mov
bound
mov
mov
jp
and
pop
dec
loop
mov
mov
or
pop
daa
adc
inc
or
bound
push
inc
scas
test
and
mov
cmp
rcll
shrb
jg
lods
or
or
gs
or
outsl
or
scas
popf
push
xchg
push
int3
inc
out
les
inc
inc
mov
or
fldt
test
es
mov
push
inc
mov
xor
pop
shl
into
adc
lods
lahf
test
inc
mov
sub
mov
mov
push
dec
and
shrb
in
arpl
jg
sbb
cmp
ja
pushw
test
stos
mov
sti
hlt
lcall
pop
and
js
out
inc
adc
movsl
dec
aad
mov
dec
test
pushf
fwait
sbb
push
ja
ljmp
mov
inc
mov
push
gs
xor
sbb
int3
dec
mov
not
mov
sahf
in
add
dec
xchg
popf
cld
in
fs
mov
adc
push
sbb
mov
and
jle
mov
jmp
xor
and
out
push
loopne
es
push
push
cltd
insl
call
pop
cmp
mov
push
pop
pushf
xor
aaa
mov
mov
mov
xchg
adc
mov
push
imul
xor
shrb
jb
cmp
mov
mov
rorb
lds
inc
lock
je
fcoms
xchg
ret
sub
sbb
gs
out
sub
push
push
fisubs
lea
xor
cmp
and
jno
imul
lea
or
push
roll
in
jnp
out
xor
xor
xor
sbb
adc
xor
rep
sbb
mov
stos
cmpb
cmp
xorl
idivb
adc
pop
test
or
mov
push
xchg
fnstenv
test
mov
imul
add
je
mov
daa
fistl
mov
cmp
xor
jae
xchg
bound
call
into
fadds
pop
in
lods
sbb
es
add
cltd
sahf
jno
negl
mov
orl
inc
jo
in
inc
adc
cmpsb
mov
test
push
cmp
xor
out
repnz
mov
inc
jae
adc
sbb
or
jb
ljmp
aad
scas
fcmovnu
inc
or
add
add
pop
fcomps
fdivrp
or
pop
jae
sub
pop
rorl
dec
test
cmp
lahf
sub
popa
xchg
outsl
add
daa
insb
test
jns
or
fsub
sbb
and
xchg
dec
cwtl
xchg
cmp
jne
jmp
cmp
xor
mov
call
xor
popf
add
mov
and
and
ret
in
lahf
xor
shrb
sbb
push
pop
ret
insb
sub
lock
aam
mov
pop
xchg
mov
xchg
sarl
out
inc
add
rolb
jmp
stc
movsl
adc
dec
or
outsb
rcl
in
loope
into
pop
lods
dec
popa
or
jle
sahf
mov
xchg
popa
push
int
lea
out
jb
xlat
mov
pop
mov
xor
pop
push
mov
jo
data16
stos
jg
cld
mov
xchg
popa
inc
sarl
ret
inc
mov
cld
and
mov
or
bound
out
in
inc
sbbl
divl
hlt
and
sahf
push
push
ds
adc
jle
scas
jp
pop
imul
jbe
mov
pop
mov
ljmp
xor
push
test
popa
xor
mov
ficoms
adc
sbb
mov
add
stc
lret
push
imul
dec
dec
test
pop
and
or
pop
faddp
pop
sub
and
les
test
mov
inc
xchg
add
lods
and
loop
dec
arpl
jmp
orl
mov
add
in
push
leave
fisttpl
sub
shrl
std
loop
jl
decl
pop
loope
das
fwait
adc
xchg
dec
enter
subb
rcr
jle
sbb
icebp
repz
cmp
push
pop
dec
rclb
jns
and
icebp
fiaddl
sub
lcall
nop
fdivl
sub
adc
push
lahf
mov
mov
fimull
in
dec
inc
iret
push
xor
fidivs
out
pop
arpl
jge
ds
push
sbb
xchg
jne
push
pop
pushf
lret
nopl
out
sti
xchg
mov
mov
cmp
enter
dec
out
mov
add
sub
sti
scas
jno
shlb
mov
pop
jo
pop
dec
loope
rcrb
pop
sub
dec
in
jno
add
pop
or
inc
dec
stc
inc
or
imul
sahf
push
aad
pop
stc
clc
movsl
lds
mov
mov
add
in
daa
ljmp
mov
xchg
adcb
xor
inc
inc
fstl
decl
cli
jae
dec
dec
cmpsb
ljmp
mov
pop
movsb
into
inc
mov
jae
jne
inc
cmp
mov
mov
mov
bound
das
addr16
and
test
xor
imul
mov
icebp
call
jo
hlt
in
adc
scas
cmpsb
xchg
fdivs
mov
xor
cmp
dec
push
cmpsb
or
jmp
scas
push
pop
mov
mov
rcrb
fdivs
out
dec
mov
xchg
loopne
adc
loop
outsl
jle
ljmp
aad
xor
dec
push
sub
ret
mov
aad
or
pop
mov
in
mov
pop
hlt
push
jne
cld
sarl
xlat
or
mov
sbb
shrl
jle
frstor
or
popa
insb
stos
das
cmp
and
and
jae
stos
in
or
xor
mov
mov
lods
sbb
ds
or
icebp
or
cmp
cmpsb
fmull
push
addr16
sbb
xor
sbb
push
cmpsl
sti
jl
ss
xor
icebp
outsb
push
sub
push
call
mov
out
lods
xchg
cld
outsl
sub
push
insb
sbb
cli
in
xchg
sahf
insl
packsswb
and
dec
jns
pop
xor
mov
imul
movsl
mov
add
xorl
fisubl
imul
xlat
loope
jae
mov
push
lds
scas
fs
fs
icebp
rcll
in
add
sub
roll
pop
inc
lcall
sbb
in
cli
std
pop
fcmovu
push
ret
stos
add
cli
xchg
xlat
mov
cmp
sarb
shr
cmp
adc
pop
adc
inc
test
sbb
nop
mov
add
and
or
pop
js
ds
fcomps
rclb
lret
xor
sbb
sti
dec
sbb
ja
cltd
into
test
loopne
mov
cmp
pop
test
outsl
insb
pop
cmpsl
sub
shll
cmp
popl
xorb
adc
lahf
xchg
add
sbb
fldenv
mov
mov
ss
ficompl
adc
xchg
mov
stos
jne
mov
inc
ljmp
pop
int3
mov
fstl
hlt
daa
shrb
insl
ffree
rclb
mov
xchg
cwtl
cld
jmp
xor
jnp
notb
lcall
pop
cmp
dec
xchg
ja
out
xchg
movl
jecxz
and
jmp
and
jne
sub
frstor
jbe
xchg
mov
mov
sub
push
les
iret
inc
pop
ds
add
insb
pushf
lret
cmp
scas
jb
es
nop
pop
icebp
je
ss
sub
and
gs
mov
mov
jae
adc
fs
loopne
pop
mov
jo
enter
add
out
sub
in
lods
dec
cmp
test
jg
in
loop
jno
pop
jle
push
popf
xchg
stc
xchg
cmp
pop
jns
xor
xchg
mov
cmc
sbb
sbb
dec
push
pop
mov
and
sub
cmp
and
inc
iret
sbb
test
jge
lods
imul
mov
pop
add
ja
pushf
adc
sahf
pop
lds
in
js
rclb
push
and
inc
and
mov
sub
ret
push
popa
mov
jg
mov
dec
stos
jle
inc
pushf
push
mov
and
xchg
sbb
stos
in
mov
and
dec
cmp
loop
stos
or
ret
shrl
dec
mov
data16
pop
scas
jecxz
sub
push
js
mov
xor
cwtl
pop
add
test
adc
popf
aaa
and
and
insl
mov
nop
sbb
or
in
icebp
mov
sbb
and
lcall
sbb
fldcw
pop
or
or
dec
inc
xor
stos
inc
and
push
out
sbb
cltd
xor
ss
lea
test
out
lret
sub
jbe
ret
mov
out
dec
push
adc
mov
in
out
and
pop
jbe
ret
inc
xchg
xorb
or
negb
rorl
sub
mov
push
loope
into
aam
and
jmp
sbb
scas
mov
bound
mov
push
add
fdivrl
adc
lods
insb
icebp
jle
inc
bound
int3
adc
jno
push
mov
xlat
cmc
mov
and
notb
push
or
clc
mov
jg
push
add
inc
int3
cmpsb
orb
cmp
sbb
gs
notl
out
jae
lret
jmp
negl
push
orl
sub
mov
scas
mov
jge
stc
test
pop
jno
adc
sbb
shll
push
mov
pop
outsl
inc
inc
sub
scas
inc
shlb
std
mov
insb
sub
mov
jp
ljmp
sub
jmp
xchg
fdivr
jne
xor
cltd
mov
xor
inc
add
dec
pop
jne
cmpsb
sahf
cmp
mov
adc
push
movsb
push
ds
call
andb
sub
add
addr16
sub
cwtl
push
repz
lds
dec
dec
inc
nop
mov
int
sbb
mov
mov
pop
mov
sbb
add
aam
sbb
test
pop
xorl
mov
fwait
pushw
pop
insb
mov
cmpsb
int3
pop
adc
push
popf
cmp
push
push
jae
mov
push
add
loopne
movsl
test
js
cmpsb
std
daa
push
dec
sbb
xlat
inc
push
ja
inc
xchg
imul
sti
inc
call
lahf
jmp
adc
sahf
stc
jo
jecxz
pop
ds
imul
xchg
daa
mov
lods
sub
ret
inc
test
jbe
shrl
cmpsl
mov
push
sub
fistpll
pop
inc
push
and
adc
lcall
add
sbb
sub
fnsave
test
jp
ds
pop
mov
jge
xchg
or
aas
push
fwait
pop
movsb
aam
fisubs
mov
lods
push
or
in
hlt
enter
daa
jl
loopne
cmp
mov
jne
cmpb
xor
inc
sbb
sbb
out
hlt
push
and
sub
dec
test
add
and
addb
outsb
push
mov
or
int3
sub
mov
adc
adcb
out
movsl
imul
pop
in
sub
inc
mov
fwait
cmp
addr16
mov
scas
lret
jecxz
jo
js
mov
lods
xchg
push
mov
ja
testb
push
jge,pt
ret
iret
jge
mov
jbe
cmpb
je
cli
inc
scas
mov
xchg
sub
adc
out
jecxz
rcrb
es
insb
dec
add
sbb
into
mov
adc
es
dec
cld
repz
jnp
add
js
sti
je
xchg
mov
daa
xchg
xchg
sbb
jbe
imul
sbb
fildll
adc
adc
xchg
sub
mov
bound
add
push
jno
rclb
test
daa
loopne
mov
int
mov
xor
sarb
xor
pop
stos
notrack
sub
mov
sbb
pop
inc
xchg
imul
jno
mov
bound
mov
add
popf
mov
lret
mov
mov
fs
jge
pusha
not
jne
insb
cmc
mov
sahf
push
dec
mov
xchg
mov
mov
aas
xor
inc
int3
nop
fistpl
inc
out
fdiv
in
xor
mov
pop
stos
pop
lods
sbb
push
sbb
stc
orl
cld
pop
cmpsl
insl
sti
jnp
fidivs
and
pop
mov
mov
or
and
insb
mov
push
and
movl
or
gs
pop
jo
cltd
loope
pushf
dec
adc
mov
xor
pop
shrb
std
and
lahf
dec
inc
ret
dec
cli
sub
and
jle
stos
out
ja
pop
ja
add
adc
and
out
xor
js
hlt
pusha
mov
test
int3
mov
cwtl
push
or
out
negb
pop
arpl
movsb
inc
test
push
xlat
mov
adc
in
cmp
add
clc
inc
push
or
and
mov
sbb
jle
fcomps
cltd
sbbb
ja
test
cmp
loop
pop
add
mov
xchg
adc
int3
pop
lahf
mov
sub
xor
push
or
and
sbb
cmp
aad
pop
frstor
pop
movsl
leave
sbb
insl
fwait
leave
or
fisttpl
mov
mov
ds
jecxz
xchg
insl
inc
hlt
imul
lea
adc
mov
dec
push
mov
push
inc
stos
dec
pop
lds
push
in
cmp
xchg
popf
adc
fldl
sub
loop
sahf
cltd
in
negb
jp
jge
in
fsubrl
xchg
sbb
dec
mov
scas
sub
sub
and
mov
and
inc
aas
pop
in
mov
bsr
mov
insb
fcoml
pop
js
and
and
or
adc
mov
sarl
or
cwtl
out
inc
sbb
shlb
jo
cmp
testb
pop
movsl
jo
mov
push
sub
mov
push
sbbb
fwait
cmpsl
insb
call
insl
sub
push
jg,pn
into
jmp
sti
xchg
or
arpl
loop
sub
out
ret
xlat
xor
ss
sbb
pop
dec
imul
cmp
pop
lods
mov
push
push
cmp
push
or
es
sub
and
cmp
adc
mov
loopne
fistpll
jae
stc
dec
jae
shr
adc
cltd
cmc
shll
inc
pop
sbb
adc
pop
add
jnp
pop
outsb
jns
sub
cli
sub
in
push
stc
pop
sbb
movb
jae
not
cmp
push
jne
mov
in
dec
pushf
mov
push
inc
pop
ljmp
and
sbb
push
andb
test
push
add
mov
xchg
xchg
out
inc
xor
mov
push
mov
cmpsl
out
enter
add
test
loope
insb
sub
imul
dec
push
inc
aam
mov
mov
out
jo
sub
ficoml
test
jmp
shlb
push
cltd
sbb
xchg
and
hlt
jmp
pop
add
or
outsb
scas
ret
in
dec
negl
lods
pop
dec
das
dec
ds
jmp
rcl
mov
cmp
ret
jne
adc
lret
push
push
cmp
lret
fwait
adc
clc
pop
stos
xchg
cld
mov
xorl
lock
shlb
and
adc
pusha
shlb
inc
lock
add
xor
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
xchg
inc
loopne
lock
shll
and
adc
popa
shll
inc
repnz
add
xor
inc
lock
jg
outsl
lcall
pop
pop
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fldz
xchg
mov
scas
mov
sahf
inc
rclb
je
dec
adc
das
adc
arpl
jae
xchg
out
xchg
xchg
into
mov
ret
scas
sarl
or
jle
dec
icebp
pop
inc
dec
push
arpl
jae
lcall
scas
lret
mov
sahf
add
pop
dec
sub
insb
push
sbb
mov
fnstsw
rorb
jmp
ljmp
dec
imul
fiaddl
movsb
mov
xor
push
cmp
jle
sbb
ds
mov
dec
push
xchg
ds
jo
push
jmp
add
jg
dec
int3
mov
leave
xorl
fstpt
mov
scas
mov
aaa
xchg
jnp
and
add
and
push
arpl
insb
add
xor
rcll
sahf
or
xor
jge
cs
mov
arpl
ds
jle
pop
xor
cld
outsb
in
jp
cmp
mov
orl
loope
out
xchg
mov
scas
leave
mov
sbb
jle
dec
sub
cs
arpl
push
lock
testb
jmp
sahf
ljmp
pop
cs
pop
aaa
jns
jl
jnp
adcb
mov
mov
mov
or
or
sub
es
and
ljmp
cmpsb
mov
mov
sahf
add
jle
dec
xor
cs
arpl
jae
sub
mov
scas
sarl
add
jle
dec
xor
cs
arpl
jae
sub
cli
mov
cmp
sub
cmp
mov
dec
jecxz
outsb
mov
mov
mov
cwtl
in
imul
mov
aas
mov
decb
dec
dec
nop
out
cmp
pushf
xchg
cld
out
xor
cmpsl
adc
jle,pn
popf
add
inc
xor
outsl
fbstp
sub
pop
aas
pop
fdivrs
test
lret
dec
fadd
dec
cmp
jne
dec
and
or
leave
xchg
pop
sahf
jle,pn
pop
rorl
inc
lock
jb
mov
jnp
jne
test
rclb
mov
adc
or
je
sti
pushf
cmc
inc
shlb
shrb
mov
xchg
or
and
fdivl
lahf
fnstenv
jae
or
movsl
lock
xorl
inc
pop
mov
push
in
xor
push
xchg
xor
js
arpl
popl
icebp
sbb
push
adc
sbb
xchg
mov
pop
es
cmp
mov
mov
adc
movsb
insb
int
sub
xchg
or
mov
mov
push
jns
pushf
inc
or
sti
add
scas
cmp
adc
mov
lods
aam
lods
adc
jne
test
cmp
sub
iret
jnp
in
in
notb
nop
and
dec
lret
inc
lock
popf
sub
pop
mov
jl
adc
xor
jo
jns
add
push
push
xchg
les
cwtl
rcrb
xor
inc
scas
add
out
mov
pop
cmp
and
push
call
add
mov
iret
inc
push
out
or
inc
sbb
lods
aaa
aas
imul
push
xchg
icebp
cmpl
loopne
and
das
fstps
lahf
xorl
mov
int3
dec
lret
pop
hlt
lahf
nop
jle
pop
imul
push
sti
mov
out
test
sahf
mov
pop
scas
shll
data16
and
inc
xlat
lods
or
push
jns
das
or
push
outsl
das
popf
clc
jnp
cltd
test
adc
xor
arpl
dec
hlt
adc
mov
and
sub
pop
mov
adc
daa
ss
mov
inc
sub
xor
mov
dec
xchg
stos
jbe
and
or
fs
or
mov
and
mov
add
jle
retw
das
mov
inc
sbb
inc
sti
arpl
jl
hlt
fsubrs
inc
dec
test
xchg
mov
fistpll
cld
cmp
push
mov
fnstsw
mov
pop
int3
xlat
clc
push
pop
jl
jge
icebp
aas
insl
outsl
fs
push
and
decl
push
mov
xchg
cmp
das
add
mov
addb
movsb
mov
aam
setne
mov
testb
ret
push
xor
jbe
aad
cmpsb
pop
fldt
push
sahf
add
cld
ret
aam
rcr
cmp
sbb
orb
add
jbe
cmp
push
stos
xchg
pushf
popa
mov
inc
push
or
mov
cmp
dec
enter
jl
jbe
out
test
or
mov
clc
mov
pop
jb
mov
xchg
xchg
push
in
or
repz
inc
aad
mov
xorb
js
adc
sbb
jbe
sub
and
add
addr16
mov
sub
rcll
push
clc
mov
ljmp
mov
mov
jmp
xchg
push
mov
mov
clc
movsl
test
es
fld
dec
aaa
adc
adc
xor
in
insl
repnz
mov
mov
adc
test
jl
in
cmpsl
mov
push
xchg
inc
imul
mov
mov
imul
insl
pop
leave
push
or
addb
mov
out
pushf
push
sarb
js
jnp
mov
sarl
stos
adc
push
pushf
into
sbb
add
movsb
out
fmuls
cmpsb
je
stos
inc
cmc
or
and
pop
enter
fxch
push
push
xor
sub
sbb
mov
xchg
pop
ret
add
sbb
and
enter
mov
inc
je
bound
push
js
pop
clc
mov
push
inc
pop
pop
pushf
mov
dec
js
push
mov
es
mov
cmp
inc
jle
mov
mov
cs
test
push
dec
rol
sub
pushf
mov
int
outsb
xor
pop
aaa
inc
pop
xchg
scas
adc
orb
adc
mov
adc
mov
adc
cmp
push
lods
incb
fnsave
dec
dec
arpl
arpl
loopne
xchg
pop
sub
adc
subl
das
lods
push
push
inc
sahf
xor
mov
xor
jnp
push
xor
imul
jmp
cmp
lret
daa
sub
push
cmp
xor
lahf
dec
movsl
add
xchg
lret
add
iret
pop
jns
mov
pop
ret
aad
cwtl
repz
mov
cltd
mov
inc
mov
cmp
dec
mulb
out
negb
fldenv
jne
inc
sahf
or
adc
mov
adc
leave
mov
loopne
mov
inc
fidivl
bound
mov
repz
push
lods
fisttpll
movsb
pop
mov
jno
ror
push
jp
push
pop
xchg
xor
psubw
cmp
ss
push
inc
out
adc
sbb
xchg
pop
cmc
addr16
push
xchg
mov
push
push
xlat
fs
in
pop
jb
dec
xchg
xchg
das
lahf
or
incb
mov
das
sahf
cmp
dec
out
inc
mov
jno
sbb
cmpsl
mov
or
loop
lret
imul
shll
or
push
scas
cwtl
and
add
cli
push
adcl
xchg
in
pop
lea
out
cmp
andl
data16
inc
lock
jecxz
shrl
call
inc
adc
xchg
aas
mov
sub
mov
and
or
pop
push
jecxz
leave
inc
mov
mov
cmp
decl
std
mov
cmc
mov
add
sbb
mov
dec
xor
adc
hlt
dec
addr16
sub
add
jb
sbb
add
int
pop
push
sbb
in
repz
ds
or
jp
das
pop
jo
mov
mov
or
scas
dec
mov
push
mov
mov
jle
je
cmp
mov
out
push
stos
mov
xor
lods
fisttpll
call
mov
in
and
jge
movsl
clc
ss
jbe
in
out
push
test
out
mov
dec
int3
aaa
shll
movsl
sub
cmp
xlat
sbb
push
dec
lcall
negl
push
or
xchg
push
xor
addl
mov
jmp
shl
shl
scas
cmpsl
xchg
lret
jns
lea
jg
cmp
pop
adc
cmp
fiaddl
jnp
pop
mov
push
inc
shrb
cmpsb
out
jl
aam
cmp
icebp
jge
mov
mov
sub
push
inc
cltd
popa
fs
cs
insb
fcmovbe
pop
inc
shl
lods
addr16
xlat
test
xchg
out
mov
pushf
lds
lds
pop
adc
frstor
xor
xchg
or
popf
loopne
call
fistpl
add
add
in
cmp
lea
pop
fsub
lret
push
pop
imul
int
gs
jecxz
fs
xor
xchg
cmc
mov
xor
in
mov
xchg
gs
pop
or
jmp
jnp
pcmpeqb
jno
push
clc
call
sti
int
push
pop
test
mov
jmp
dec
inc
pop
xchg
adc
aaa
pop
dec
mov
sbb
jle
mov
cmp
je
sub
cs
cmc
push
sub
ds
pop
shll
jle
xchg
sbb
divb
mov
or
sbb
insl
and
sbb
outsb
lock
imul
or
sbb
add
inc
fwait
inc
int
mov
cmp
jmp
movsl
shrl
push
pop
in
loop
repnz
fwait
and
shlb
push
cmpsl
cmp
pushf
jnp
jmp
lcall
scas
sti
in
inc
ljmp
fwait
mov
stos
subb
adc
mov
out
lret
aam
dec
mov
leave
dec
ljmp
cmpsb
mov
mov
aad
mov
lds
sti
lock
stc
push
aad
push
int3
inc
ljmp
push
fsubrs
mov
icebp
pop
scas
cmp
dec
lahf
push
sahf
bound
push
out
jl
inc
fsubr
data16
push
loop
mov
pop
ret
mov
lds
fcoms
fcoml
fwait
scas
push
or
or
jecxz
out
rolb
add
inc
dec
std
loopne
add
adc
or
loopne
mov
adc
push
push
mov
jg
mov
xchg
aam
pop
sub
xchg
jle
rorl
das
and
lahf
or
movsb
fildl
adc
cmpsb
dec
ja
push
xor
xchg
pop
stos
xchg
outsb
inc
and
les
enter
jo
fsubs
dec
mov
fdivrl
lods
jmp
dec
rcll
and
in
or
cmp
cwtl
inc
push
push
add
adc
outsb
fldl
ret
mov
dec
mov
repz
fidivrs
push
dec
cmc
fwait
pop
popl
std
xor
cmp
mov
scas
jns
jecxz
fs
add
scas
fbld
xchg
cmp
nop
cmp
popf
insl
sbb
push
pop
sbb
push
lret
enter
cltd
das
aad
rclb
imul
xor
outsl
or
jb
jno
test
mov
add
or
xchg
xor
icebp
ret
sbb
aad
clc
test
cltd
adc
jecxz
cmp
frstor
adc
imul
add
dec
sahf
or
stos
leave
add
inc
jg
sub
pop
cltd
fucom
pop
mov
fnstcw
icebp
and
sbb
pop
imul
xchg
lods
hlt
mov
mov
xor
sahf
ffreep
andl
aam
loopne
filds
mov
sahf
mov
add
mov
movsl
fldl
xrstor
test
or
jne
cltd
into
popa
popf
inc
cmpsb
inc
and
jbe
add
arpl
aaa
add
mov
xchg
sti
pop
rcl
cli
push
push
xor
int
in
aaa
mov
mov
out
cmp
insl
jecxz
inc
aam
mov
movsb
arpl
iret
psraw
popf
xor
sub
push
mov
or
into
loope
pop
jb
mov
mov
pop
push
das
sub
loopne
xor
adc
xor
inc
mov
lahf
jmp
cwtl
dec
jb
pop
adc
push
or
insb
das
cmc
pop
dec
pop
and
and
mov
lahf
mov
mov
mov
dec
stos
push
scas
jne
pop
xor
fstpl
sbb
adc
or
nop
dec
ret
adc
sbb
test
mov
xchg
clc
xchg
xor
test
push
aas
lahf
cmp
fstpt
in
adc
dec
xor
mov
jns
shl
cs
xchg
lcall
leave
sub
push
fstpl
xor
lock
xchg
push
mov
adc
jg
gs
mov
push
sbb
scas
pop
nop
hlt
sbb
mov
lcall
adc
sbb
sbb
lds
je
add
xor
push
push
dec
jns
insl
fadds
add
in
xchg
or
fsubrp
xchg
ds
in
cmp
rcr
das
mov
in
push
sbb
mov
ret
lret
inc
jbe
sbb
cmp
insb
js
adc
pop
sbbb
ds
add
jb
push
sbb
jnp
sub
mov
mov
pop
movb
jo
xchg
out
sub
pop
aam
repz
pop
loopne
hlt
pop
jnp
mov
xlat
scas
mov
fwait
xor
pop
jle
inc
movsl
mov
sbb
ja
test
cld
or
lahf
pop
fisttpl
in
sbb
push
jl
test
int
push
and
into
loop
cmpsb
out
xchg
adc
xchg
sbb
loopne
lret
sahf
xchg
push
loop
pop
cmpsb
pop
pushf
mov
mov
sbb
sbb
xlat
cmpsb
pop
pusha
adc
ficoms
push
cmp
jg
sbb
hlt
les
xorl
xor
mov
inc
sub
cmp
popf
rcr
push
je
pop
stos
clc
call
xor
out
mov
pop
sti
decl
pop
pop
ja
xchg
dec
adcl
mov
xchg
std
xchg
nop
mov
loop
mov
fld
lock
fldt
dec
pop
add
lcall
int
mov
add
xchg
push
inc
add
dec
roll
mov
in
lock
mov
cmp
jl
jae
cmp
pop
aad
outsb
dec
imul
pusha
dec
xchg
push
mov
ret
pusha
sti
inc
negl
aam
or
mov
daa
dec
adc
pop
out
fstl
fs
add
pushf
inc
add
outsb
adc
leave
jnp
ret
out
clc
sub
pop
fcmove
js
ret
mov
xor
jo
mov
popf
add
inc
ret
xchg
adc
dec
int3
or
xor
cli
sbb
movsl
xor
mov
nop
mov
fxch
pop
into
insl
fsubr
inc
xor
xchg
lret
pop
cmpsl
or
lods
dec
subb
inc
jo
std
xchg
sbb
mov
mov
inc
add
lds
ret
xchg
jbe
xlat
adcb
and
pop
arpl
daa
sub
filds
pop
insl
or
pop
aam
push
pop
lret
cmp
les
fisttpl
mov
sbb
adc
sbb
in
rolb
pop
outsl
lahf
jp
push
or
mov
ss
pop
into
inc
lcall
add
mov
sbb
test
pop
sbb
cli
push
mov
mov
and
and
push
das
enter
sbb
pop
repnz
xor
scas
rcrb
out
dec
jne
push
in
xchg
or
and
mov
loop
sti
ret
pushl
mov
push
loop
insb
push
jmp
dec
add
jbe
or
das
push
ret
mov
fsubr
cmp
mov
xor
jb
xlat
push
adcb
adc
repz
lret
sbb
pop
pop
sub
cmp
mov
loope
leave
es
push
movsb
mov
das
into
mov
xor
cli
push
cld
push
or
das
lock
dec
scas
enter
movsl
jp
dec
ror
dec
jae
fnstcw
clc
fs
shrl
jmp
sub
pop
push
adc
gs
pop
leave
cmp
stos
test
mov
in
dec
out
mov
jbe
fisttps
jb
mov
lret
dec
adc
enter
jnp
jg
jle
jmp
ljmp
pop
out
cmp
ljmp
fimuls
loop
lods
fdivr
daa
sbb
jo
cmp
push
ss
lret
add
fwait
stos
das
push
jns
js
push
push
std
mov
ljmp
jecxz
mov
lods
es
out
aas
xchg
lock
out
stos
mov
mov
out
bound
sti
jp
mov
hlt
xchg
jae
ret
mov
jns
adc
mov
fdivs
rolb
add
loop
fsubs
and
lea
insb
jle
mov
push
fdivrs
xor
subl
add
add
clc
cmc
and
rclb
aas
sub
and
scas
lods
add
ror
and
ret
stos
scas
xlat
jbe
pop
pop
sub
adc
xchg
or
call
adc
movsb
mov
pop
cltd
jae
movsb
test
int3
xor
push
cmp
popa
sub
fcomps
movsl
cmp
test
pop
sub
xchg
lods
mov
sbb
sub
icebp
lahf
mov
lea
inc
mov
xor
test
aaa
mov
out
repz
pop
roll
cmp
jnp
jb
test
adc
incl
pop
std
adcl
out
aam
mov
mov
push
pop
xchg
pop
fistl
lds
jnp
insl
mov
mov
xchg
cmp
sub
cli
mov
dec
pop
ud0
hlt
aad
cmp
and
jns
dec
jb
gs
add
rcrl
sub
repz
sub
cmp
push
cli
jo
in
adc
lea
push
and
mov
xorb
les
repnz
je
pop
adc
xor
lret
push
xor
std
arpl
inc
clc
jno
mov
cmp
subb
push
fcomps
sub
scas
jns
ds
ljmp
popa
out
shll
fwait
iret
test
repnz
jno
sub
shrl
loopne
inc
inc
mov
aad
jle
insl
out
pop
inc
xchg
outsl
mov
and
sbb
inc
out
or
loope
dec
push
in
hlt
jns
mov
sbbb
cmpsb
stc
lcall
add
into
adc
cmpl
fisttpl
out
js
lock
stos
stc
addr16
mov
xor
jcxz
mov
jle
adc
sbb
add
pop
dec
mov
sub
adc
mov
xorb
fxch
fldcw
imul
cmpsl
cmp
pop
dec
enter
cmp
dec
test
int3
jmp
xchg
mov
sbb
fwait
or
push
jne
or
cli
jns
shlb
icebp
aad
aam
pop
cmpsb
lret
cltd
xor
adc
sbb
lods
scas
mov
mov
inc
jle
and
aam
jnp,pt
or
pop
fcoml
addr16
pop
test
out
jecxz
fsubs
lret
in
push
mov
loope
shl
jecxz
push
mov
cmp
cmc
pushw
and
xor
and
and
jmp
out
inc
pushf
or
lods
ja
jae
xchg
sub
clc
pop
iret
lock
out
movsl
inc
jae
cmp
jl
insb
mov
std
roll
in
in
dec
ja
mov
cwtl
cmp
testl
out
xor
and
incb
push
imul
xchg
fistl
jno
or
lods
movsl
xlat
cmp
sub
pop
aad
dec
push
lods
mov
ja
test
pop
push
arpl
sbb
out
mov
lock
jp
add
imul
jb
test
scas
hlt
mov
cmp
lock
test
into
adc
push
in
pop
enter
adc
push
xchg
pushf
adc
cmp
xor
push
xchg
sbb
pop
mov
bound
aad
lods
fmuls
sbb
es
push
sti
cld
xor
subl
or
aas
mov
lret
dec
xor
lods
or
pop
add
in
sub
fsubr
mov
insb
xchg
pop
loop
test
mov
mov
dec
inc
jge
xchg
ret
hlt
data16
sub
pop
jmp
sub
xchg
sahf
in
mov
xorl
sahf
push
push
pop
lcall
out
fwait
pop
ss
push
repz
ss
rep
fldcw
cmc
clc
pop
test
mov
xor
pop
mov
jg
mov
fstpt
sbb
data16
xchg
sti
lahf
daa
int3
gs
mov
adc
loope
mov
js
push
and
test
mov
shll
sbb
in
sub
insl
nop
mov
jnp
lret
adcb
test
std
lds
sahf
mov
add
ja
nop
nop
or
lahf
push
test
rclb
arpl
imulb
xor
mov
jae
stos
cld
ret
xchg
pop
scas
jns
mov
push
push
mov
dec
cltd
mov
pusha
jg
ss
dec
inc
sbb
add
sbb
sub
jmp
repz
test
mov
sub
aam
adc
mov
aad
js
into
in
cmpsb
mov
xor
fcomp
cmp
push
jne
negb
les
inc
daa
pop
fdivl
cmp
inc
inc
loop
xchg
cli
stos
divl
loop
mov
pop
imul
and
and
iret
mov
pop
or
sbb
xor
push
mov
cmp
mov
dec
push
push
add
pop
jae
xchg
push
cmp
dec
mov
mov
mov
dec
mov
lahf
insl
js
cld
or
or
int3
popa
aas
dec
mov
jo
shrl
jp
jecxz
xchg
lock
jl
sbb
mov
sahf
sbb
fwait
or
je
dec
cmpsl
or
dec
sarb
or
rcrb
clc
jmp
mov
or
decb
mov
ret
scas
sarl
add
jle
dec
xor
cs
arpl
jae
sub
mov
scas
sarl
add
jle
dec
xor
cs
arpl
jae
sub
mov
scas
sarl
add
jle
dec
xor
cs
arpl
inc
push
mov
cmpsl
xchg
into
mov
ret
scas
sarl
cld
outsb
in
aam
dec
xor
xor
fcmovnb
pushf
icebp
mov
enter
call
sti
call
mov
push
adc
xchg
xor
and
rcr
ret
call
xchg
cwtl
subl
pop
and
js
or
sbb
sub
and
rcr
ret
call
xchg
cwtl
subl
pop
inc
sbb
push
arpl
jnp
inc
push
and
pushf
mov
and
cmpsl
mov
orb
sub
adc
mov
test
xchg
jne
mov
mov
jecxz
mov
std
out
mull
out
sub
jb
mov
and
push
mov
repz
dec
dec
scas
xor
adc
stos
flds
aas
jns
mov
rcrb
dec
das
in
pop
xor
jns
cld
sub
cmp
xorb
xor
mov
adc
mov
mov
enter
aaa
inc
loopne
scas
xchg
sbb
jo
pop
push
push
xor
xor
arpl
les
daa
push
and
repz
jecxz
xchg
cwtl
subl
pop
inc
push
adc
add
xor
dec
mov
mov
call
or
stc
repz
pop
aaa
or
adc
insl
jb
jo
xor
shrl
xchg
into
fcomi
out
les
sub
cmp
push
mov
fwait
stc
xchg
mov
mov
push
adc
add
xor
and
rcr
ret
call
xchg
cwtl
subl
pop
inc
push
adc
add
xor
and
sarl
push
inc
fsubl
int
and
sub
jmp
popa
and
inc
dec
dec
mov
sub
mov
sbb
pop
pop
cmpsb
cld
imulb
and
mov
mov
add
push
jo
inc
pop
sub
stc
inc
popf
bound
mov
int
mov
pop
pop
add
and
sbb
mov
lds
mov
dec
cs
int3
pop
imul
and
mov
iretw
dec
iret
pusha
xchg
int3
js
inc
test
pop
fwait
int
repz
mov
add
or
jnp
mov
loope
sbb
out
subl
dec
add
adc
mov
cmc
push
xchg
lock
movsl
xchg
xchg
call
push
roll
fxch
fdivl
out
loop
and
jno
out
inc
hlt
mov
mov
jnp
mov
sbb
nop
mov
mov
mov
imul
pop
sti
and
sarb
imul
inc
adc
xchg
sub
xor
add
or
add
lods
gs
pusha
cwtl
or
int3
jecxz
xlat
jo
xor
mov
cmpsb
xor
push
mov
dec
cli
lods
dec
mov
das
mov
outsb
xchg
xchg
sti
lea
lea
cmp
mov
add
pop
sbb
dec
xor
fcoms
and
je
movsb
mov
mov
mov
pop
bound
mov
js
dec
push
loop
push
sbb
and
imul
cwtl
adc
inc
mov
aam
movsl
push
and
ret
xchg
jnp
pop
dec
sub
adc
mov
icebp
frstor
pop
pop
xor
xchg
xlat
add
add
and
fwait
aaa
adc
repnz
inc
sub
repz
int3
pop
sub
or
call
sbb
mov
cmp
sub
adc
xchg
mov
mov
loopne
inc
lahf
aam
sbb
or
sbb
mov
mov
lcall
pusha
movsl
aam
sub
or
js
jno
ljmp
push
or
mov
insb
xchg
orb
sbb
addb
fisubs
lock
shlb
and
iret
inc
or
add
sub
or
mov
shrl
cwtl
ret
cmpsb
xor
fidivl
ja
test
out
scas
sbb
push
jecxz
fdiv
sub
sub
scas
clc
ficomps
mov
jp
jae
sub
cmc
push
aaa
movsb
mov
xor
aad
xchg
test
pusha
mov
pop
adc
jb
test
sar
loope
cmp
fisubrl
shr
jne
sahf
iret
cmp
insb
idiv
ja
inc
push
xchg
mov
movsl
fisubs
sbb
ss
and
jmp
dec
int
dec
add
aaa
push
xor
and
ja
xor
mov
and
in
dec
shlb
jg
push
xlat
repz
imul
mov
je
jnp
adc
fadd
push
or
xor
insl
mov
imul
cmp
fxtract
aaa
aad
sub
loope
mov
iret
iret
mov
test
and
popa
push
adc
shl
pushf
enter
fs
clc
sub
in
inc
mov
and
cmp
iret
std
mov
adc
add
movsl
mov
push
jb
adc
or
rcll
sub
call
std
movsl
jp
test
dec
cmp
cld
mov
call
inc
lret
cmpsl
ljmp
push
jne
stc
mov
dec
mov
scas
xchg
arpl
cltd
adc
and
push
xor
pushf
jo
pop
push
mov
leave
aaa
mov
dec
outsl
sahf
lods
inc
aad
dec
push
push
repz
addr16
inc
rcl
loop
jmp
push
add
arpl
nop
adc
add
scas
fwait
ret
sahf
xchg
mov
push
pop
mov
pop
mov
aam
mov
adc
mov
mov
std
cmp
push
das
es
js
movsb
jecxz
pop
ss
out
mov
mov
in
ja
in
outsl
repz
addr16
xor
push
jno
sbbl
mov
shlb
sbb
pop
pop
mov
rolb
push
movsl
jle
mov
movsb
lock
lret
xor
les
mov
jo
jmp
repnz
jns
js
nop
dec
push
popf
push
out
out
js
push
xchg
inc
inc
jmp
stc
xor
fs
inc
cwtl
test
out
xchg
pop
and
pushf
mov
out
push
dec
sub
int3
test
nop
dec
pop
add
add
movsb
add
out
icebp
xorl
mov
and
iret
sbb
add
ja
neg
xchg
cmpsb
sarl
ljmp
je
shlb
cmc
scas
sahf
daa
or
xchg
xor
dec
and
out
fs
sub
sbb
cmp
gs
sbb
fstpl
fimuls
aad
addr16
jmp
pop
mov
stc
lcall
inc
push
test
xchg
jns
and
mov
jl
xchg
scas
cmpsl
daa
sub
inc
lret
cmp
jl
and
hlt
xchg
xor
out
cltd
lret
dec
mov
jp
cmp
sbb
dec
loope
dec
dec
cmp
mov
test
xchg
out
add
shll
call
inc
jb
movsb
fsub
hlt
dec
push
add
gs
pop
cs
test
mov
orb
in
push
mov
in
pop
lret
pop
xor
out
lods
and
mov
sbb
push
and
arpl
push
push
and
sarb
sarb
imul
mov
daa
adcb
shll
ds
mov
lea
mov
push
xchg
popa
xchg
push
or
scas
adc
xor
adc
nop
xor
mov
ljmp
insl
push
push
into
rcll
test
lahf
aas
cmp
pop
pop
cs
cmp
xchg
mov
lcall
xchg
lret
adc
push
stos
fdivr
dec
fstp
cld
xorl
or
pop
aam
push
mov
push
jne
cmp
jb
inc
and
test
pop
cs
add
add
or
mov
xchg
jle
hlt
out
mov
icebp
add
xchg
add
enter
jge
insb
lods
sub
in
xchg
push
pusha
data16
cmpsl
shll
adc
movsb
add
mov
and
lret
stos
xchg
mov
mov
xor
sub
pop
or
repnz
inc
sarl
ja
and
mov
add
dec
mov
pop
mov
nop
mov
pushf
xor
movsb
jecxz
add
jns
popf
mov
push
jecxz
xchg
mov
mov
pushl
cmpps
dec
fsubrl
xlat
sbb
jns
xlat
jmp
push
cmp
pop
xor
adc
pop
ret
in
mov
loopne
inc
push
rorb
push
mov
aaa
hlt
stos
mov
loop
sbb
dec
xchg
imul
pop
or
test
push
cltd
mov
sub
pop
rcll
stos
cmp
mov
push
and
fs
int
pop
dec
and
pop
jne
icebp
sub
les
push
sahf
in
mov
dec
in
push
xor
test
mov
sbb
addr16
insb
stc
push
cmc
addl
mov
pop
push
sti
call
push
data16
movsb
and
lock
pushf
add
mov
pop
test
cli
stos
int
push
sub
ljmp
push
sub
push
xchg
mov
or
iret
dec
fidivs
shr
xchg
or
jo
aaa
test
adc
mov
jb
jbe
adc
sbb
inc
lock
into
mov
and
push
stos
inc
mov
xchg
mov
test
adc
pop
fldl
pop
stos
sub
and
fcoml
sti
movb
push
iret
inc
push
repz
jle
loopne
jne
push
stc
pushf
ror
sbb
xchg
adc
mov
mov
xor
shll
cltd
daa
cli
adc
repnz
adc
xchg
sarb
je
fdivs
push
mov
bound
fldt
xchg
dec
fisubrs
mov
fldt
mov
mov
mov
mov
xor
in
sbb
jns
xchg
push
in
cmp
sub
mov
sbb
push
and
jp
inc
int
inc
bound
lods
sub
in
lea
cli
and
pop
pop
or
leave
sub
ds
xchg
daa
call
xlat
jge
data16
jle
and
pop
fisubrs
jbe
jbe
out
mov
outsl
fwait
test
mov
jmp
push
sti
inc
mov
cmpsl
out
cmp
movb
repz
lret
adc
or
es
insl
xor
pop
jae
out
mov
adcb
cmp
sbb
xor
mov
cmp
push
xor
jg
lret
lea
fimull
mov
lods
int3
cld
dec
repnz
lods
and
and
loopne
int
mov
cli
fmull
inc
outsl
test
jl
loopne,pt
lret
xor
inc
xchg
aaa
icebp
jp
mov
mov
repz
jne
shll
data16
inc
aam
push
or
and
pop
cltd
cmp
add
adc
jp
or
fwait
or
xor
lods
sti
push
xchg
mov
sub
sub
inc
ret
mov
cmp
adc
scas
pop
fldcw
xor
rorb
roll
xchg
cmpsl
imul
insl
inc
adc
in
sub
fmul
cli
xor
sbb
dec
and
dec
mov
add
jg
stos
xor
add
mov
jbe
xlat
lods
xor
lcall
scas
jle
xchg
jnp
push
jle
stos
and
shl
pop
sbb
cmp
cld
sub
push
sub
insl
hlt
mov
mov
sbb
sbb
mov
shrl
xchg
lahf
mov
lret
js
pop
push
fcoml
jmp
xchg
je
push
cmp
pop
jne
jp
rol
mov
xchg
push
js
cltd
jnp
sub
es
incl
rcrl
and
mov
mov
sahf
sbb
xchg
inc
dec
mov
bound
lret
movl
push
xchg
adc
fsubrs
fisttpl
movsl
cmp
in
into
rolb
fsubrs
sub
imul
pusha
lock
mov
dec
repz
cld
cmp
outsb
fisubl
jae
ficompl
dec
inc
xor
jmp
repz
push
mov
insl
std
sub
fisubs
mov
es
ja
scas
shr
sub
ja
and
push
cmp
jge
xchg
xor
add
test
push
ret
int
and
mov
mov
adc
insb
pushf
daa
inc
sti
adc
mov
je
clc
mov
imull
xor
lods
out
push
adc
sub
iret
mov
rcrl
and
xorb
dec
mov
pop
rclb
insb
and
jo
test
sahf
and
cmp
dec
pop
and
jbe
mov
cmc
xor
add
popa
test
movsb
jno
clc
divl
xorb
add
rcl
jmp
lcall
inc
scas
popa
mov
sbb
out
adc
imul
loop
aam
push
add
aam
gs
push
cltd
or
xor
jle
popa
movsl
cwtl
shrb
lods
push
test
jae
in
movsb
sarb
popa
ss
sbb
testb
nop
in
loope
pop
inc
inc
inc
dec
mov
inc
fnstenv
or
pop
and
mov
inc
mov
push
pop
xor
pop
fdivs
fwait
arpl
sub
int
insb
xchg
cmc
call
ds
dec
daa
sbb
pushf
mov
lds
jae
clc
mov
xchg
shl
outsl
outsl
mov
jge
in
and
lahf
mov
jno
sbb
dec
ds
adc
dec
insl
pop
xlat
scas
cmpsl
sbb
test
xchg
loopne
mov
clc
jg
cmp
stos
adc
cmp
cli
popf
fisubl
movsb
pop
js
cmp
xchg
push
and
shl
or
adc
mov
popa
out
in
fimuls
ja
sahf
sahf
push
add
xor
pop
dec
mov
mov
int
mov
add
jle
xchg
ret
cwtl
pop
mov
in
hlt
sbb
or
jle
add
mov
aas
lods
xlat
gs
out
or
gs
hlt
outsb
dec
xor
mov
mov
test
pop
push
sbb
aam
ds
out
lcall
stos
addr16
add
ss
xlat
pop
pop
sti
in
ret
into
popa
push
lods
mov
rcr
into
sbb
adc
xchg
mov
pushf
adc
les
mov
pushf
shlb
mov
loop
xchg
jae
sbb
or
out
cmpsb
adc
jns
xchg
inc
jle
std
inc
mov
cmp
mov
add
fstl
aaa
mov
and
ja
sbb
cmp
ja
repz
cmc
inc
inc
insb
popf
adc
sti
fldpi
add
out
push
ljmp
in
cmp
in
aaa
iret
rol
dec
jle
out
arpl
aaa
lods
sub
pop
decl
jmp
push
stos
lar
hlt
fisubl
add
mov
sbb
xlat
xchg
ljmp
pop
shrb
and
nop
sub
or
lock
cmp
movsb
push
and
divb
pop
xlat
mov
imul
sbb
scas
jmp
lahf
mov
movsb
xor
add
ds
mov
enter
icebp
cmp
test
pop
movsl
push
cmc
adc
mov
sbb
lret
pop
fisttpl
mov
and
jge
and
lock
mov
inc
mov
in
enter
daa
outsb
ficomps
je
cltd
dec
mov
lcall
mov
fisttps
push
push
inc
sbb
out
xor
gs
mov
pop
xlat
stos
lahf
lock
dec
add
jb
sarl
adc
mov
pop
pop
das
xchg
and
xchg
shll
pop
mov
nopl
test
xorl
pop
jno
jecxz
mov
mov
or
ljmp
pushf
xchg
lret
pop
in
push
cmp
lock
mov
xor
add
push
dec
mov
push
ja
or
or
jo
and
out
aaa
jg
stos
stc
jecxz
je
dec
les
out
inc
pushf
test
inc
out
cmpsl
or
arpl
test
push
xchg
push
xchg
or
out
jne
sub
push
sbb
icebp
movsl
push
repnz
sbbb
sub
jmp
pop
shrb
jno
test
adcb
divb
imull
push
jmp
popf
fmuls
add
imul
lret
xchg
inc
jns
je
test
inc
test
jb
aas
or
jmp
stos
xor
les
movl
ljmp
aam
into
out
in
xchg
outsl
repz
lret
xchg
xor
fcomi
jnp
incb
jb
cld
push
dec
or
mov
imul
pop
enter
mov
mov
cmp
inc
dec
inc
je
push
mov
add
in
pop
repz
andb
dec
inc
jne
and
stos
xchg
sbb
je
dec
mull
out
lcall
xor
push
or
sub
pop
push
iret
arpl
sbb
push
movb
das
dec
movsl
xchg
lcall
rcrb
pop
jae
aad
push
mov
pusha
sub
xor
xor
jns
ss
mov
fidivrl
pushf
and
push
outsb
xchg
jecxz
jmp
dec
push
add
movsl
or
subb
jl
adc
lock
add
and
enter
cmp
sar
mov
xor
dec
jo
cld
pop
xchg
sbb
xchg
lret
cmp
fisttpl
ret
mov
push
inc
mov
pop
mov
cmp
pop
pextrw
or
cmp
sbb
push
lods
mov
mov
inc
sub
popa
je
and
xchg
xchg
test
in
add
xchg
std
or
jb
testl
bound
xor
aas
cmp
jecxz
lds
push
repz
lcall
xor
sbb
loop
pop
jns
xchg
xor
movsbl
push
scas
outsl
in
dec
scas
jo
sub
add
sarl
jb
movsl
mov
xor
out
pop
adc
adc
mov
enter
pop
pop
jb
sahf
shrl
popf
adc
icebp
scas
outsb
cmp
adc
aam
jno
jbe
imul
aad
and
sub
pop
mov
or
stos
jecxz
dec
dec
std
aaa
dec
mov
insb
and
ss
xchg
adc
out
or
push
test
push
movsl
out
fsubrl
in
push
sbb
repz
mov
lcall
fwait
mov
fmulp
sbb
into
add
sbb
inc
dec
dec
xchg
loop
fs
int3
js
subl
push
stc
cmpsb
imul
shr
add
aaa
xlat
ja
scas
repnz
mov
jle
and
stos
mov
clc
or
mov
outsb
or
pop
push
xchg
lahf
inc
faddl
jns
add
stos
push
adc
aam
test
mov
fsubr
add
pop
leave
daa
pop
jnp
jno
mov
test
outsb
and
dec
ret
pop
pop
in
in
mov
sbb
push
les
lcall
sbb
test
nop
je
outsb
sub
movsb
inc
sub
insl
fwait
pushf
cwtl
pop
incl
inc
fcmovnu
mov
mov
imul
cltd
push
add
jnp
pop
cli
push
imul
daa
ror
fcompl
fwait
out
jne
fstpl
mov
mov
sbb
dec
data16
andb
daa
pop
mov
inc
arpl
pop
push
sbb
xchg
push
add
fcoml
dec
adc
adc
test
sahf
push
out
lret
hlt
add
push
dec
icebp
pop
adc
aas
call
mov
inc
jl
push
mov
pop
cmc
aam
mov
std
inc
pop
mov
adc
pop
add
jns
and
dec
popa
lock
dec
movsl
sbb
addb
dec
cmp
xchg
ss
jne
push
push
int
xor
cmp
lcall
ja
loopne
add
lret
or
sbb
rorb
mov
or
scas
jl
dec
cwtl
cld
inc
fisubrl
sub
into
rorl
div
push
and
jge
xchg
inc
ror
mov
jno
pop
daa
in
xor
in
cmp
sub
subl
mov
pop
je
insb
stos
je
aas
nop
cmp
stc
push
pop
sub
cmpps
out
in
arpl
rolb
out
push
jg
push
clc
mov
mov
data16
xchg
movl
mov
in
xor
repz
jnp
adc
mov
fs
dec
jb
ljmp
mov
mov
jnp
movsb
shl
mov
rcrl
xchg
test
movsl
pop
mov
push
andl
scas
pop
scas
sbb
sub
in
mov
or
fxch
dec
dec
xor
leave
mov
lret
cmp
sbb
adc
or
test
outsb
orl
fistl
stos
mov
imul
mov
inc
adc
push
fs
js
pop
xchg
push
dec
cmp
popf
outsl
loop
shll
enter
inc
icebp
aam
cmp
cmp
push
ljmp
mov
and
jae
xchg
int
jg
mov
sbb
arpl
and
push
jl
ljmp
adc
jns
lods
sbb
adc
rcrb
mov
fwait
cli
fwait
adc
add
insb
data16
mov
scas
xchg
dec
cmc
sub
pop
daa
addr16
fimuls
jmp
fists
pop
mov
push
shll
and
insb
popa
shll
imul
jp
fistps
in
cld
cmp
cmp
push
mov
and
iret
dec
sbb
push
sbb
pop
cltd
movsb
hlt
xchg
add
lds
sbb
test
push
filds
pusha
adc
out
push
mov
fldpi
lock
je
jnp
std
pop
sub
sbb
sub
cmp
cmp
js
xchg
xchg
aam
arpl
lods
lret
aam
enter
je
pop
xchg
repnz
adc
icebp
shl
mov
dec
pop
rorb
and
mov
cwtl
ss
sbb
xor
inc
lcall
fbstp
and
mov
inc
repz
jecxz
xchg
cwtl
subl
pop
inc
push
adc
add
xor
and
rcr
ret
call
xchg
cwtl
subl
pop
inc
push
adc
add
xor
and
rcr
inc
call
xchg
cwtl
add
rcrl
push
adc
add
xor
and
rcr
ret
call
xchg
cwtl
subl
pop
jmp
jg
nop
cld
xlat
int3
fmul
jns
imul
sub
cmp
mov
jmp
cltd
mov
test
pop
jns
imul
or
cmp
sub
stc
enter
call
test
pop
jns
imul
or
cmp
sub
fdivr
enter
lea
cwtl
test
and
cmp
sbb
sub
xchg
sbb
notl
mov
mov
or
add
pop
lods
mov
pop
add
int3
lods
gs
push
fcomp
jns
fs
or
xor
pop
fsubrs
pop
cltd
lods
dec
test
lahf
cmp
dec
pop
jno
push
sbb
sub
enter
stc
pop
add
js
fistl
xchg
mov
cmp
or
lock
mov
mov
mov
int
ljmp
mov
dec
in
or
cmp
loope
adc
dec
daa
call
gs
mov
test
imul
or
cmp
sub
fdivr
enter
call
test
sub
or
adc
es
pop
pop
insl
inc
jg
dec
pop
mov
jp
xchg
mov
int3
aad
fadd
pop
sbb
or
cmp
dec
jge
insb
cmp
insl
mov
lea
iret
mov
cs
dec
sub
pop
or
cmp
sub
fdivr
enter
call
test
pop
jns
imul
or
cmp
sub
fdivr
enter
call
test
pop
jns
add
mov
mov
add
dec
xchg
fmull
adc
lods
cltd
fildll
cmpsb
and
and
or
or
fidivl
jle
bound
fs
sbb
out
aam
nop
cmc
xchg
mov
insl
sub
push
cmpsb
push
add
pop
and
aam
inc
aas
push
ds
mov
push
dec
xchg
push
jl
hlt
mov
lods
fwait
imul
cld
cwtl
mov
ret
outsl
iret
jecxz
mov
jns
pop
cmp
push
xchg
out
sub
sbb
imull
adc
push
jp
ds
add
imul
stc
inc
mov
test
dec
mov
push
outsb
roll
nop
repz
xor
cmpsl
and
pop
mov
jl
adc
mov
pop
fdivr
mov
xchg
pop
aad
inc
jl
movsb
inc
iret
or
push
aaa
lods
arpl
pop
push
test
add
mov
loopne
outsb
lcall
push
push
insb
je
fistpll
sbb
dec
pop
aam
loopne
aad
lods
pop
jp
idivl
cld
aad
xchg
std
jle
pusha
sub
test
adc
test
pop
gs
shlb
lcall
outsb
out
inc
pop
lea
and
sbb
leave
fisubrs
popf
dec
adc
add
cmc
adc
mov
jg
out
dec
in
les
std
mov
imul
lods
mov
sahf
xchg
cmpsl
adc
iret
ds
sbb
sbb
cld
xor
add
lds
bnd
sub
mov
xchg
js
shll
sbb
icebp
pop
das
jno
sahf
cmp
es
mov
mov
cmpsb
push
dec
pop
jno
mov
lea
iret
aaa
stc
push
xchg
xchg
fwait
pop
cltd
movsl
fwait
pop
xchg
repnz
bound
sub
or
aas
jns
push
mov
pop
addr16
sub
push
test
cmpsl
sysenter
shrb
or
or
arpl
jecxz
push
adc
or
imul
movsl
out
mov
lds
cmpsl
repz
fisttpl
sub
das
xlat
xchg
jg
in
mov
pushf
shlb
inc
and
out
cld
and
mov
inc
rcl
push
xchg
push
daa
and
dec
je
data16
cs
gs
ljmp
cmp
lods
arpl
cmc
jo
ja
aam
pushf
sbb
out
sti
push
mov
stos
clc
pop
cwtl
xchg
sbb
xchg
movsb
lahf
jae
pop
jo
es
push
jl
imul
add
pop
jle
pop
mov
insl
arpl
mov
bound
xchg
xchg
or
std
cld
xchg
add
push
pop
lods
mov
pop
and
repnz
test
xlat
and
or
aam
jmp
test
xor
or
pop
mov
and
xor
fiadds
nop
enter
leave
cwtl
fsubs
ret
popa
rorl
sbb
std
mov
jnp
xchg
stc
lea
sub
add
iret
push
fists
jmp
mov
adc
lock
movsb
cmp
leave
pop
jns
filds
call
and
inc
aam
push
inc
test
sbb
xchg
xchg
orl
cmpsl
push
dec
fdivrs
or
cmp
lret
ficompl
cmp
mov
xchg
dec
xor
xchg
mov
pop
dec
push
lahf
sbb
push
jge
inc
pop
jae,pn
push
push
jns
repz
adc
test
lods
cmp
xor
or
mov
adc
sbb
jns
out
call
lock
bound
xor
imul
sub
adc
iret
aaa
icebp
in
mov
adc
cs
cmp
mov
gs
add
pop
mov
jns
dec
leave
lret
xor
mov
mov
cmp
adc
and
push
xchg
mov
jb
ds
xchg
lds
jae
jno
adc
fdivr
or
test
out
sbb
lea
lods
jns
scas
test
sbb
and
cmpsb
jp
nop
push
iret
mov
nop
xchg
movsb
test
mov
mul
lods
xor
ss
outsb
daa
jns
js
mov
aas
ffree
push
adc
bound
xchg
aas
popl
xchg
sahf
je
push
xor
add
jmp
lds
iret
cmc
mov
repz
add
shrd
mov
shrb
adc
insl
in
mov
pop
je
push
mov
sbb
dec
into
mov
inc
cmp
cs
cmc
fldcw
pop
jo
add
fiadds
xorl
stos
shl
frstor
pusha
sahf
or
cmc
dec
je
shr
cmpsb
cli
push
mov
add
jge
cli
js
clc
cli
shl
push
sbb
shrd
add
push
ficompl
or
je
int3
test
adc
test
xchg
test
orb
daa
pop
lahf
fstps
xchg
mov
ret
mov
xlat
jns
and
popf
push
mov
pop
or
pop
xchg
push
fistpl
mulb
inc
ds
pop
cmp
mov
ret
add
xor
sub
js
inc
inc
lret
push
aas
cmp
mov
scas
movsb
andl
jmp
inc
outsl
dec
cltd
xor
add
and
int3
sti
pushf
inc
es
jo
adc
lds
clc
outsb
lods
fistl
pop
push
pop
push
cltd
mov
fmulp
xorl
push
sub
cltd
sub
dec
repz
push
and
push
ds
xor
out
enter
dec
rep
sbb
inc
inc
sub
pushw
insb
dec
cmp
lret
sbb
cmp
sbb
das
and
inc
scas
and
adcl
sbb
je
and
and
mov
data16
sbb
outsl
sub
imul
push
jo
je
xchg
inc
inc
inc
out
mov
lahf
ficompl
adc
rcrb
stos
sub
or
inc
xchg
jg
enter
insb
cwtl
xor
mov
js
adc
icebp
fcoms
scas
jecxz
pop
inc
add
ljmp
xor
cmp
cmp
jmp
call
popf
les
jmp
mov
push
dec
add
cld
mov
int
shll
adc
or
imul
sbb
jecxz
push
jo
cmpsl
cli
rol
shr
into
cltd
gs
insb
imul
mov
add
imul
pop
mov
add
loopne
outsl
addr16
cmc
leave
jg
jmp
xchg
xchg
xchg
bound
mov
pop
and
sbb
outsl
std
xor
loopne
in
pop
scas
ret
dec
jns
iret
mov
fs
lea
leave
xchg
add
test
test
call
cmc
cmp
xchg
push
fisubs
push
stos
sub
int
add
cmp
insl
add
mov
cmp
or
lds
sub
or
jle
pusha
lock
sbb
pop
cmp
cmp
movsl
lahf
jmp
jp
lods
push
adc
cmp
mov
jl
stos
xor
dec
xchg
jecxz
inc
adc
idivl
scas
jecxz
push
sbb
sbb
inc
pop
mov
sbb
movsl
ret
lea
hlt
push
insl
mov
inc
test
mov
in
or
pop
mov
mov
std
xchg
sti
add
dec
and
adc
fdivrs
xor
in
mov
pop
push
pop
fucom
mov
xlat
cmp
stc
push
test
sub
mov
inc
jnp
sbb
icebp
xchg
ret
dec
pop
cs
add
mov
jmp
dec
pop
push
jb
out
jno
fidivrl
jg
jno
mov
add
xchg
push
inc
dec
aaa
push
andl
addb
xor
pusha
rorl
sti
cwtl
js
sbb
sub
fdivrl
mov
andb
pop
inc
out
xchg
in
outsl
ret
je
jg
pushf
fadd
mov
loopne
fcoml
movsl
jmp
in
sub
push
and
and
and
jbe
mov
test
push
cli
or
icebp
push
push
fs
push
adc
insl
push
push
insl
popa
fwait
or
or
push
imul
add
xor
test
and
stc
and
clc
in
cmpsl
mov
sub
or
xchg
sub
xchg
sub
test
loopne
push
mov
jae
xchg
scas
push
test
xor
or
bound
or
scas
cwtl
jae
jp
imul
mov
add
imul
or
fwait
add
pop
and
test
sbb
aad
rcll
sub
lods
adc
jo
sub
jmp
dec
pop
cld
outsl
mov
jbe
fistps
mov
imul
movsl
in
and
shl
sub
inc
test
stos
minps
xor
pop
insb
pop
sbb
popf
xchg
out
icebp
cs
ljmp
xchg
ds
lods
iret
in
sti
popf
xchg
outsl
cs
mul
jno
adc
inc
ss
fimuls
or
movsb
lret
xchg
xlat
ljmp
mov
sub
pop
jnp
xchg
lahf
cmp
addr16
leave
dec
mov
inc
sti
xchg
lret
inc
iret
fwait
push
or
mulb
ror
or
lods
sub
cmp
rcll
insl
in
std
cmp
js
and
push
jno
mov
outsl
enter
or
xchg
xlat
xor
aad
mov
aas
js
or
lea
jns
fdivs
add
cmp
mov
mov
mov
sub
adc
mov
bnd
mov
ds
mov
lret
xor
mov
loop
mov
and
hlt
push
pushf
frstor
adc
mov
addr16
pop
notb
xchg
push
jns
rclb
mov
std
fnsave
cmpsl
jg
mulb
fs
jb
push
into
inc
in
jp
pop
cmp
cli
pop
jg
mov
push
xchg
xor
shl
adc
fsts
adc
les
jle
lock
fwait
leave
add
lret
inc
jns
scas
enter
cmp
js
cmp
push
jg
lods
inc
test
mov
cmp
mov
push
dec
rcr
outsb
out
jae
mov
dec
cmpb
arpl
fdivs
inc
jae
push
add
cli
adc
mov
sbb
pop
lock
sti
call
dec
sub
pop
out
aad
sbb
inc
js
ror
fwait
xor
enter
xchg
push
shrl
iret
mov
add
add
mov
add
push
mov
mov
adc
pop
enter
xchg
push
imul
xor
sbb
clc
jbe
loop
in
xchg
mov
push
mov
aad
fcoms
rorl
fisubrl
xor
sub
mov
cmp
mulb
lahf
shlb
nop
ret
and
mov
pop
insl
ficomps
dec
loop
les
les
cmp
mov
in
jp
sbb
dec
mov
lods
imul
ds
cmc
and
rorl
je
sbb
or
ss
in
mov
pop
rorl
je,pn
add
add
pop
jecxz
mov
push
aaa
mov
cmp
xor
cmp
push
in
lret
adc
insb
int3
mov
cmp
mov
push
cmp
and
and
xor
mov
sub
daa
pop
or
mov
jmp
add
jle
pop
lds
mov
in
cmpsb
sbb
fbld
mov
js,pn
sub
add
jmp
or
jmp
test
xchg
ss
std
adc
hlt
push
jp
cmp
cmpsb
push
xchg
std
in
stos
imul
cmp
sbb
xor
lret
inc
das
add
ljmp
cld
xchg
orl
xor
ljmp
dec
sahf
cmp
xchg
lock
pop
dec
jbe
icebp
pusha
cli
nop
std
pop
sbb
loope
mov
and
ds
jmp
fidivrs
sbb
push
ja
dec
adc
cwtl
hlt
jns
fists
xor
iret
push
xchg
out
pusha
sub
add
mov
inc
aam
push
adc
jecxz
add
mov
pop
mov
push
ds
ss
xchg
or
out
sbbb
mov
cmp
stc
add
xchg
fistl
jl
jbe,pt
push
int3
xor
inc
cmp
push
jb
jb
mov
icebp
out
fcmovnu
inc
and
sub
mov
push
dec
mov
jne
in
rolb
mov
gs
pop
dec
loop
inc
pop
inc
xor
mov
jmp
sub
fisubs
xchg
lds
cmp
jl
rdmsr
fidivrl
imul
int
pop
mov
pop
lock
mov
dec
mov
xchg
jb
and
add
cmpsb
mov
jecxz
and
fistps
dec
push
xchg
mov
inc
adc
xchg
test
cmpsb
fmuls
aam
sub
cmp
xchg
rcr
fdivl
shrl
dec
fsubs
cmp
nop
shr
inc
jno
cltd
movsl
std
repz
hlt
test
xchg
mov
das
repz
push
push
mov
sbb
push
aam
roll
xchg
out
push
in
adc
addr16
fisttpl
sub
scas
repz
outsl
mov
repnz
ret
ret
movsb
je
or
push
cs
repz
cmp
sarl
test
cmp
mov
dec
aas
clc
loope
ret
cs
cs
xchg
mov
inc
loope
xchg
sbb
mov
mov
leave
push
cmpsl
sbb
or
push
xor
lahf
add
aad
lahf
xchg
jp
mov
pop
ret
sub
aaa
pminsw
jl
mov
test
dec
lret
dec
test
lock
jp
lcall
inc
ss
stos
pop
mov
test
push
fldt
mov
lds
outsb
adc
inc
add
imul
mov
mov
xor
fmull
inc
pop
add
fs
xor
sub
xchg
xorb
ret
push
sub
sub
mov
out
lret
fnsave
sub
inc
dec
adc
mov
out
cs
test
cs
out
push
jp
push
repnz
mov
es
sub
orb
aaa
cmc
mov
jg
into
leave
lret
pop
or
lcall
test
bound
mov
in
mov
call
mov
mov
pop
push
add
pop
add
rolb
mov
pop
inc
mov
dec
es
cs
xlat
movsb
fcomps
dec
pop
movsb
cld
mov
jae
inc
out
pop
in
std
fcmovne
cli
xchg
int3
lret
inc
xchg
addr16
repnz
arpl
sub
test
or
xlat
lods
pushf
aad
test
in
subb
push
sub
sbb
mov
push
icebp
mov
sarl
push
jmp
dec
jmp
in
adc
and
stc
out
mov
xor
push
js
adc
cmp
sub
subb
xchg
xchg
add
repnz
int
iret
andl
ja
adc
lcall
iret
outsl
jge
inc
hlt
cmc
cmpsb
rcrl
rorl
inc
cmp
in
xchg
in
mov
pop
pusha
cld
cmpsl
sahf
lret
push
mov
mov
jecxz
push
pop
insb
mov
ds
imul
outsl
sub
stos
or
xchg
push
push
mov
adc
push
sbb
inc
pushf
or
mov
ret
xor
cs
push
pop
ljmp
mov
rorb
test
jo
add
cmp
mov
shrb
add
ss
dec
xchg
xchg
imulb
push
mov
pop
mov
rcrb
xchg
in
sub
das
jmp
sbb
or
mov
scas
jmp
test
ds
xor
pop
dec
leave
ljmp
xlat
cld
xchg
mov
sbb
pop
jo
jl
sub
push
icebp
xor
add
xchg
xor
in
or
dec
leave
and
xchg
or
push
and
lret
mov
or
movsl
inc
mov
jmp
add
cmp
mov
jg
and
mov
inc
pusha
in
cld
lods
jo
lcall
sbbl
stc
mov
cld
stos
xor
add
cmpsb
mov
sub
mov
jg
push
push
pop
or
jge
jg
aam
mov
ljmp
ljmp
pop
add
inc
test
scas
push
or
adc
mov
and
pop
xor
mov
adcl
dec
hlt
setge
fistps
inc
shll
out
and
inc
lds
push
jb
popa
negl
enter
fcmovnu
test
ja
ret
pop
mov
insb
ljmp
out
loopne
xor
xchg
dec
mov
stos
out
fisttpl
or
cmp
cmpsb
cmp
and
daa
mov
or
fwait
aam
mov
and
into
jge
out
cmpsb
mov
dec
pop
and
push
lret
inc
pushf
cmp
push
lods
lea
xor
pop
mov
out
xor
pusha
test
sbb
xor
xchg
or
mov
sub
xchg
js
sub
fsubl
or
xchg
and
cld
imul
mov
and
inc
jge
icebp
cmp
das
lods
adc
stc
mov
xchg
inc
shlb
arpl
mov
pop
and
scas
jecxz
loopnew
pop
dec
xchg
pop
insl
or
cltd
xor
es
shll
jo
mov
sbb
xor
sub
or
add
into
pushf
mov
in
loopne
mov
push
sub
sarb
xchg
sub
out
scas
mov
not
or
stos
mov
cmpsb
inc
mov
ret
out
cmp
lods
push
add
clc
dec
mov
hlt
cs
mov
inc
or
ret
inc
lahf
cwtl
adc
adc
jnp
leave
mov
xadd
ljmp
negl
pop
fistl
repnz
fcoml
repz
add
rclb
push
jnp
sbb
ja
xor
xchg
stc
or
mov
mov
pop
sbb
cs
out
push
imul
lcall
cmpsl
jle
ret
stc
cmpsl
aaa
and
inc
in
jno
pop
jl
testb
sub
pop
lret
sahf
lods
lods
fldenv
fildll
xchg
sbb
dec
lcall
and
add
fmuls
xchg
cmpsb
inc
xchg
xchg
adc
mov
cmp
push
ss
roll
fdiv
sbb
xchg
add
add
cmp
scas
push
ret
push
cmp
lcall
xor
mov
roll
add
sbb
jmp
mov
inc
in
add
popf
inc
repnz
xchg
add
sub
roll
ret
daa
inc
bound
cmp
and
ds
cmpsl
jge
popf
sbb
mov
pop
lds
js
jbe
push
adc
stc
adc
icebp
fcoml
insb
adc
outsb
sbb
leave
shll
mov
loope
mov
data16
outsl
cltd
adc
mov
lds
add
cmp
test
or
mov
mov
call
pop
rcrb
mov
into
mov
or
jns
xchg
aas
jne
aad
out
xor
pop
inc
sbb
adcl
mov
xchg
lods
and
fwait
jecxz
in
repz
push
push
pushf
imulb
xchg
xchg
imul
insb
jbe
das
nop
xor
jge
inc
add
cmp
ljmp
insl
iret
mov
movsl
addr16
jo
jbe
adc
push
aad
stos
xor
outsb
add
add
adc
mov
push
mov
push
mov
jg
ficomps
push
sbb
xorl
xchg
cwtl
negb
xchg
dec
ljmpw
dec
sbb
adc
out
dec
jmp
add
es
jp
fs
jg
mov
add
ss
orb
pusha
fstps
js
push
or
insl
into
shlb
pop
mov
shl
lahf
pop
fcomip
inc
cmc
je
pushl
js
ds
pop
dec
add
outsl
je
pop
stc
shl
ret
cwtl
fnstsw
call
call
call
shll
inc
and
sbb
mov
sub
mov
jb
xor
inc
jmp
xor
call
sbb
lret
add
lock
mov
push
lahf
cmp
daa
imul
adc
fisttps
cs
adcb
sarl
pop
push
and
jmp
ret
call
mov
add
ret
test
outsl
cmp
testb
inc
push
push
int3
ljmp
pusha
jg
and
imul
aas
xor
jae
fldcw
adcb
out
inc
call
push
test
dec
subl
pop
jb
lods
imul
cmp
sub
sbb
or
stc
enter
call
test
pop
jns
imul
or
cmp
sub
fdivr
enter
call
test
pop
jns
imul
or
cmp
sub
fdivr
enter
call
test
pop
jns
imul
or
cmp
sub
fdivr
enter
call
push
inc
push
jbe
test
mov
loopne
mov
shr
jns
lds
adc
inc
gs
roll
test
aad
add
xor
popa
inc
jno
daa
push
push
pop
cmp
jmp
test
push
add
xor
pusha
inc
push
adc
aaa
add
sbb
xchg
repnz
aam
into
in
punpckldq
xor
push
out
dec
arpl
pop
push
sahf
inc
cmp
pop
push
adc
aam
pop
pop
push
dec
push
ret
push
in
nop
fdivrp
popa
mov
push
ljmp
loopne
xchg
inc
cmp
movsb
sub
adc
stos
arpl
and
iret
gs
lods
popf
mov
mov
or
mov
aad
loope
and
jl
test
xor
sahf
inc
or
mov
sbb
repnz
rcrb
dec
or
adc
sub
lods
xor
dec
jle
outsb
xchg
aam
popa
or
lock
push
and
div
pop
clc
sub
adc
lea
out
or
test
aad
arpl
add
or
addr16
inc
faddl
std
fstpl
xchg
lds
jo
pusha
push
pop
push
or
cmp
and
clc
mov
fstpl
nop
ret
ja
adc
push
or
add
add
repnz
jno
int
frstor
loope
icebp
xor
and
push
push
popa
inc
jno
andl
rcl
loope
icebp
xor
and
push
push
popa
inc
jno
addl
pop
cmp
addr16
pop
dec
imul
movsl
call
cmp
jl
ret
pop
cmp
jae
sar
cld
mov
mov
sbb
aas
shl
jnp
ss
xchg
xchg
divb
inc
jecxz
jae
loope
iret
sbb
loop
pushf
xchg
sbb
add
aas
sub
int
push
inc
mov
ret
mov
xor
shlb
xchg
loopne
test
dec
mov
sbb
xchg
ret
push
loop
testb
jae
pushf
mov
mov
jmp
mov
mov
test
sbb
mov
pop
mov
scas
and
adc
push
fimull
xchg
cltd
sarl
ljmp
sub
mov
cmpsb
push
aad
mul
popf
sbb
xchg
push
nopl
stos
mov
ss
mov
cmp
adc
push
rol
lock
xchg
pop
leave
paddq
push
and
repz
jns
jg
mov
cld
into
mov
push
test
cld
stos
inc
jecxz
xchg
xlat
loop,pn
fadd
cmp
in
mov
cmpl
movsb
fadds
cmp
shll
bound
jno
mov
std
jp
mov
int3
push
inc
outsl
push
mov
push
sarb
aaa
xchg
sbb
pop
mov
test
sub
pop
shlb
mov
xlat
cltd
daa
adc
mov
ljmp
test
mov
sub
cmpsb
out
sub
iret
lods
es
in
mov
fidivrl
in
fstpt
cs
nop
xchg
scas
jbe
jne
into
push
jne
add
inc
jno
and
leave
mov
sti
das
jecxz
sub
nop
fstl
jg
push
sbb
push
sub
cmp
divb
sub
dec
inc
aaa
sbb
pop
mov
iret
sahf
rorl
test
aam
call
jge
in
in
cmp
enter
mov
sti
std
stos
in
mov
and
enter
pop
inc
and
cmp
je
dec
xor
les
insl
mov
gs
cltd
bswap
cmp
sub
lcall
lcall
and
cwtl
repnz
jecxz
sbb
xchg
pop
jg
adc
adc
and
push
lock
xchg
scas
into
jne
negb
dec
insb
mov
pushf
push
push
add
int3
gs
adcb
insb
mov
in
mov
scas
inc
out
xchg
lahf
in
sti
imul
dec
leave
outsl
pop
in
jne
lds
mov
and
jb
add
popa
and
and
into
mov
and
add
out
les
xchg
in
dec
jbe,pt
sbb
enter
inc
shr
sbb
test
pop
or
or
fdivrl
sub
push
lret
mov
add
inc
imulb
lods
mov
hlt
xor
xchg
and
inc
pop
addr16
std
js
hlt
fisttps
and
push
jae
pop
sub
cs
and
add
je
sbb
jnp
sbb
das
jbe
js
mov
clc
sbb
xchg
cltd
iret
subl
in
out
or
sahf
cmp
decl
dec
ds
fxch
push
mov
dec
cmp
negl
mov
mov
sub
cmp
icebp
aaa
stos
das
sub
xchg
inc
dec
lahf
mov
imul
mov
add
shrl
jecxz
jo
into
rorl
out
in
and
and
mov
adc
fs
pop
gs
xchg
push
dec
cld
push
dec
call
and
sbb
enter
in
xchg
shlb
iret
mov
mov
dec
fcmovnu
in
pop
pop
sbb
mov
jmp
jp
mov
andl
leave
inc
roll
dec
fs
mov
dec
rorb
mov
pop
in
push
in
fcmove
out
xchg
xchg
mov
dec
sti
pusha
test
cld
add
add
in
cmp
mov
sahf
stos
stc
pop
mov
and
sbb
cmpl
in
jb
test
sub
shl
stos
xor
mov
add
or
xlat
popf
jg
bound
pop
inc
or
mov
push
incl
inc
push
repnz
pop
add
int3
in
repnz
and
das
push
mov
loop
loopne
cmp
ljmp
ss
popf
pop
cli
scas
outsl
dec
ror
push
jle
mov
or
into
adc
mov
pop
lret
push
loop
sahf
movsb
sbb
adc
mov
dec
push
sbb
cltd
sub
mov
cmc
xor
outsb
sbb
jmp
pop
push
cld
cltd
pop
adc
xchg
inc
mov
pop
xor
sarl
or
fdivl
xor
je
xchg
fwait
movsb
out
movsb
femms
les
jl
cmpsb
add
mov
test
lods
out
add
sbb
inc
lea
xchg
jg
mov
mov
ss
dec
jo
pop
xchg
push
cmp
pop
cld
mov
rorl
loope
popa
fisttps
pop
push
repz
cmp
inc
je
lock
icebp
xchg
test
jmp
fnstsw
into
add
cli
rorb
js
push
outsb
lds
xchg
cmpsb
push
inc
scas
js
lds
cmp
pusha
adc
jbe
mov
inc
mov
fdivrl
mov
movups
outsb
mov
and
dec
movsl
push
out
ljmp
clc
jbe
mov
adc
mov
and
stos
xchg
fistps
mov
iret
dec
mov
mov
or
negl
cld
pop
xlat
inc
mov
aam
movsb
push
notb
pop
imul
sub
add
ret
or
add
mov
adc
dec
adc
in
pop
jge
sub
jl
xchg
sti
add
adc
cmp
nop
repz
or
es
jb
inc
leave
pop
lods
xchg
dec
mov
cmc
stc
hlt
push
mov
mov
int
lods
mov
add
dec
lret
pop
mov
jns
push
xor
mov
cmp
mov
adc
push
aaa
sbb
push
popf
ret
sbb
cli
test
xchg
sub
sub
mov
mov
addr16
sub
pop
mov
and
int3
lods
lret
call
jle
ret
outsl
lods
push
subl
jmp
cmp
or
repnz
imul
push
xor
sub
cwtl
hlt
dec
mov
gs
jbe
pop
dec
dec
addb
jno
lahf
mov
aam
mov
test
lret
out
gs
imul
and
insl
cs
mov
iret
dec
push
lcall
popf
mov
dec
pop
movsl
push
lret
sbb
ja
sub
dec
dec
mov
pop
andb
jo
dec
push
pop
push
enter
into
push
aas
rol
dec
loope
sbb
pop
inc
mov
in
push
adc
xor
sbb
mov
out
js
aas
arpl
leave
sub
adc
leave
cmc
mov
iret
jle
stos
faddl
xor
adc
and
cmp
xchg
sbb
xchg
ss
and
ret
icebp
push
popa
adcb
cld
loop
or
xlat
jle
xorl
mov
cmpsb
je
and
jne
or
and
adc
bswap
into
stos
insl
mov
xchg
or
push
sbb
inc
movsl
or
cmpsb
inc
loopne
mov
test
jno
fs
mov
cltd
xor
scas
icebp
lods
loope
adc
mov
gs
xchg
jecxz
push
pop
aaa
fistpl
stos
mov
dec
je
adc
test
cli
mov
pop
xchg
sbb
and
aas
xchg
out
mov
lock
clc
sub
or
adc
xchg
pop
and
movsb
pop
loope
xor
xchg
mov
push
insb
xchg
and
out
pusha
inc
fldl
sbb
jb
jne
int3
fs
add
cmp
xchg
subl
movb
push
sbb
xchg
pop
out
cmpsl
test
adc
js
xor
and
ret
in
push
pop
lea
ja
out
je
fsub
testl
sbb
jne
je
push
mov
les
leave
jbe
jp
mov
adc
xor
push
xchg
bswap
pop
mov
fnstenv
hlt
shlb
jae
jle
out
nop
and
iret
les
not
std
daa
adc
sub
xor
push
mov
call
iret
add
mov
arpl
sub
data16
jl
loopne
mov
mov
cmp
push
sbb
jns
push
mov
push
sbb
sub
xchg
push
ja
fsubrs
xor
xor
mov
push
push
stos
repz
mov
adc
lret
repz
jo
shl
add
idiv
dec
pusha
sbb
or
fmuls
adc
cld
pop
das
mov
sub
cmp
test
pusha
and
test
jle
mov
dec
fstpt
vcvtsd2si
xchg
inc
in
shlb
je
pop
sub
pop
out
jns
push
jno
sub
mov
jnp
gs
ja
xor
and
into
adc
pop
nop
pop
xor
or
push
movl
or
outsl
les
aad
adc
test
outsb
dec
ljmp
pop
stos
nop
hlt
lods
jb
ret
xchg
pop
test
xor
push
inc
mov
inc
mov
jb
ret
push
imul
sbb
mov
mov
repz
imul
in
pop
jbe
adcl
ja
ret
jge
xor
add
daa
cmp
jb
jnp
sub
sbb
sbb
mov
xor
call
les
xlat
shrb
insl
jmp
adc
inc
or
and
insl
cmp
sbb
cmp
es
push
jge
mov
xchg
stos
push
mov
mov
shlb
and
push
rolb
in
jge
aaa
test
and
push
gs
mov
enter
insl
mov
dec
jo
jne,pt
push
xor
mov
mov
dec
xor
stc
pop
dec
lret
inc
btrl
iret
loope
mov
jecxz
fs
inc
xor
xchg
sub
jbe
sub
pop
stos
out
incb
pop
mov
imul
adc
pop
shrl
lret
cwtl
inc
pop
jg
sbb
idiv
aad
jg
push
dec
sbb
or
aam
push
cmp
sbb
data16
push
push
add
jnp
inc
inc
mov
xor
pop
mov
ret
or
push
loopne
push
mov
cli
in
mov
repnz
loopne
stos
sub
outsb
adc
dec
dec
jl
xchg
mov
mov
mov
arpl
adc
or
fistpll
inc
lret
movsb
xchg
iret
fisubl
lock
xlat
dec
jae
lret
inc
movsl
popf
and
jmp
lret
mov
jg
cmp
in
cmp
xor
mov
dec
leave
adc
add
fwait
sub
ja
stos
cmpsb
test
and
mov
rcr
das
mov
push
negb
imul
in
pop
leave
fistps
lret
aam
inc
pop
pop
fdivrl
test
test
mov
fildll
aaa
pop
pop
iret
inc
imul
jmp
mov
adc
push
fidivs
xlat
add
add
es
mov
or
fmull
out
push
pop
or
rcrl
or
andl
mov
sti
out
fcompl
mov
ja
push
fmull
data16
push
mov
hlt
sub
in
add
into
mov
pusha
les
mov
and
or
insb
into
leave
cmp
push
je
mov
sub
push
add
add
jb
pop
gs
jmp
add
mov
mov
stos
pop
out
mov
sbb
cmp
mov
dec
pop
inc
push
push
mov
inc
mov
jns
push
loop
rolb
dec
in
out
daa
dec
movsl
or
in
std
mov
add
sub
filds
int3
gs
js
lods
jl
or
add
in
push
pusha
call
inc
cmpsl
dec
pop
stos
xor
jmp
decb
cld
rolb
dec
xchg
or
mov
xchg
cld
cmp
pop
cmp
add
mov
outsl
pop
repz
ss
pop
and
sub
data16
mov
add
cmp
cmp
and
aaa
stos
xchg
dec
cmp
out
push
sbb
icebp
arpl
xchg
dec
pushf
adc
and
sbb
pop
xchg
bound
pop
push
jb
das
int
or
push
aas
mov
cwtl
cmp
push
dec
adc
incl
in
js
push
xchg
int
jle
out
popa
push
bound
test
xchg
xchg
lahf
and
in
mov
jns
rcrl
ljmp
push
jno
sbb
sub
mov
jo
sbb
pop
invlpg
jbe
lds
mov
dec
mov
cmpsb
fimuls
int
popf
shlb
nop
mov
rolb
dec
cmp
adc
sub
std
lea
and
std
jae
inc
stos
sub
lock
sub
insl
test
add
jge
es
lret
movsb
cmp
and
xchg
ljmp
stos
imul
popf
sahf
cmp
adc
sub
lret
fnstcw
icebp
dec
inc
cld
inc
fdiv
mov
or
rcll
arpl
jns
mov
and
lcall
jge
or
roll
xchg
imul
and
sub
mov
subb
nop
scas
xchg
movsl
ds
or
inc
imul
add
pop
push
arpl
inc
pop
gs
std
in
arpl
sbb
mov
bound
push
int3
int3
and
mov
icebp
xor
mov
jne
inc
int
mov
jbe
test
jle
in
cmp
and
aam
popf
or
xchg
imul
cmc
inc
or
pop
loopne
mov
mov
test
in
and
test
add
sbb
jp
adc
stos
adc
stos
std
pop
insl
inc
jo
lret
mov
jp
add
jecxz
aas
cmpsb
jno
std
cli
mov
in
add
jno
gs
push
pop
insb
dec
popf
lea
push
xchg
sub
mov
sub
dec
mov
jbe
data16
inc
enter
xchg
in
in
mov
lcall
pop
mov
orl
imul
mov
mov
cmpsb
mov
inc
xor
icebp
inc
jns
sub
push
int3
inc
and
jae
jmp
inc
xchg
test
inc
imul
movsl
or
mov
iret
movd
mov
daa
insl
sub
subl
cmp
call
jp
mov
sbb
xchg
cmp
mov
ja
jl
scas
insl
mov
cmp
ljmp
cmpsb
mov
sub
adc
sub
mov
pop
enter
push
das
ret
sub
sbb
pop
scas
pushf
lods
inc
clc
roll
loopne
test
nop
int
sarl
jae
popa
loope
lods
mov
cmp
jl
pop
int3
push
mov
jns
mov
out
push
cmp
outsb
andb
mov
mov
aad
daa
lret
jne
and
and
adcb
sti
je
rcr
idiv
cs
in
add
inc
mov
idiv
push
test
popa
nop
inc
lock
ja
nop
arpl
push
nop
and
inc
test
or
xor
push
jle
ljmp
adc
pop
stos
push
leave
and
or
stc
dec
pushf
scas
inc
mov
outsl
cmp
mov
pop
pop
mov
iret
xchg
jmp
daa
fstpt
jmp
into
popf
mov
push
hlt
push
cmpsl
rclb
iret
arpl
jns
sbb
pop
push
pop
xor
lods
add
les
into
add
mov
sahf
mov
inc
xchg
cmp
mov
mov
xor
xchg
sub
mov
movsl
arpl
mov
insb
ljmp
dec
cli
mulb
add
hlt
iret
and
push
cmpsl
jmp
in
xchg
enter
or
push
sbb
in
ds
adc
cmp
sub
push
insb
xchg
cmp
inc
sbb
aaa
jmp
sbb
pop
data16
xchg
call
popw
test
fisttpl
lea
mov
rcll
or
in
movl
add
stos
pop
push
xor
sti
fcoml
jb
mov
rol
adc
jnp
sbb
sbb
test
xchg
mov
pop
psrld
mov
mov
in
adc
imul
push
cmpl
in
popa
cld
mov
rcrl
mov
sbb
mov
stc
and
gs
movsl
test
lock
loope
aam
mov
jae
xor
add
rcll
add
imul
sub
cltd
sub
stc
insl
out
ret
xor
fsubrs
and
jecxz
daa
sbb
jo
mov
xor
aas
cli
mov
std
test
nop
std
insb
int3
shll
test
sbb
jne
lret
or
fwait
xor
lods
mov
lods
mov
lcall
cmp
repnz
imul
push
mov
cmpsl
push
pop
sti
jns
orl
test
mov
movsb
fstp
cmp
test
outsb
pop
jo
je
xor
test
repnz
xchg
jne
scas
je
out
mov
mov
jl
or
mov
outsl
int3
mov
popa
shlb
or
sbb
or
add
stos
pop
jmp
mov
cmpsl
sarb
in
adc
inc
ret
or
sbb
out
cli
push
sbb
push
dec
shl
pop
adc
insb
mov
xor
mov
lea
mov
fcomi
push
or
orb
xchg
fprem
lret
mov
inc
test
pop
divl
xlat
lret
sub
fcmove
mov
test
sbb
frstor
xorb
loop
fcom
mov
jge
push
sbb
shrb
loope
movsl
jg
xor
jmp
mov
pop
scas
push
imul
jg
sbb
sub
dec
fnsave
imul
lods
roll
mov
or
add
sti
dec
xchg
inc
mov
mov
push
sub
pushf
mov
push
movsl
mov
fdivrl
dec
sub
ret
fstpt
jecxz
adc
popa
out
idiv
mov
mov
push
push
cmp
enter
cld
xchg
lock
roll
xorl
mov
loope
clc
pop
ss
or
jge
inc
xchg
call
cmpl
mov
mov
xchg
mov
rcl
xchg
push
data16
push
call
push
in
sahf
sbb
lahf
inc
adc
adc
lods
repnz
or
mov
insl
daa
ljmp
xor
iret
idivl
add
cld
fbstp
dec
jno
cmc
popf
orl
adc
sbb
cmp
jo,pn
xor
jnp
mov
and
sub
mov
push
mov
shrb
ret
shlb
andb
and
outsb
cmp
lds
pop
push
push
mov
fstpl
hlt
dec
or
mov
les
aaa
sbb
and
inc
push
and
push
inc
mov
dec
jae
pop
nop
sbb
sub
sbb
push
xchg
lret
inc
jg
fisubl
jmp
loopne
sub
pushf
lods
sbb
lods
jae
leave
orb
imulb
rol
roll
jo
imul
and
adc
adc
in
cld
pop
mov
jno
loope
and
icebp
pop
mov
adc
out
jmp
mov
or
loop
cli
add
loop
test
push
aad
cwtl
pusha
cmp
mov
or
pop
sbb
in
loopne
inc
sar
imul
mov
stos
adc
or
imul
lret
hlt
add
inc
insl
jecxz
stos
pop
and
div
call
movsb
lock
sahf
aad
push
loope
xor
stos
lds
imul
mov
inc
nop
clc
js
sub
and
mov
pop
jne
mov
fcmovne
mov
sbb
jge
lods
mov
dec
dec
cmpsl
adcl
insb
movl
shlb
dec
negb
push
test
cmp
add
std
cmpsb
and
adc
mov
movsb
cltd
cmpsl
mov
xor
sbb
popa
scas
or
rorl
lahf
pop
in
xchg
cmp
add
and
out
dec
stos
inc
ss
jg
mov
psubsw
or
mov
movsb
push
cld
pop
sbb
push
push
sbb
ja
sbb
xchg
push
mov
addb
fstl
lods
fs
shl
out
dec
cmpsl
sbb
sbb
mov
mov
shl
aad
add
xor
gs
push
popa
inc
jno
andl
rcl
loope
icebp
xor
and
push
push
popa
inc
jno
test
mov
shl
aad
add
adc
jne
jne
push
push
stc
jne
inc
movsl
icebp
cmc
shl
aad
inc
xor
and
sub
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
add
sub
mov
push
sub
nop
mov
mov
lock
loopne
adc
sbb
sub
cmp
dec
inc
shlb
pusha
or
lods
mov
fdiv
lods
loopne
adc
and
push
jo
pusha
jo
pusha
fs
push
mov
iret
rcrb
mov
dec
or
jb
pop
dec
imul
dec
cmp
cld
xchg
xor
mov
insb
jbe
subb
popf
ds
test
pop
lods
das
int
pop
cmpsl
in
insl
jno
or
push
adc
pop
xor
notl
and
sub
fcoml
int3
add
cmp
test
push
xor
xchg
pusha
sbbl
lret
int
and
aad
out
sbb
hlt
sarb
mov
repz
mov
lahf
aas
frstor
int3
jmp
xchg
or
add
jo
dec
push
mov
in
pusha
js
or
in
xor
inc
pop
jo
pusha
cld
nop
or
hlt
shl
shlb
loopne
push
pop
je
pop
outsl
dec
adc
xor
adc
bound
nop
lret
mov
fcom
shll
cmpsb
popf
jne
gs
push
dec
dec
sbb
add
adc
jmp
mov
nop
pushf
lea
pop
pop
jl
pop
sbb
inc
pop
jo
pusha
jl
mov
mov
lock
loopne
adc
sbb
sub
cmp
dec
inc
pop
jo
pusha
jl
mov
mov
lock
loopne
adc
adc
xor
hlt
mov
cltd
push
push
scas
mov
and
xor
shl
jae
push
jl
xor
jmp
cmp
xlat
pop
outsb
mov
in
mov
mov
jae
add
out
lret
xchg
sbb
test
ret
jge
clc
pop
inc
pop
insl
repz
call
lret
and
push
mov
rorb
xchg
push
pop
movsb
nop
popf
push
mov
dec
data16
enter
add
jge
mov
js
xor
mov
clc
cmp
cmp
inc
and
jmp
and
mov
mov
fsubrl
jae
and
or
fnstsw
jg
or
sti
push
test
test
cmpsb
inc
cmpb
test
mov
jnp
sbb
cmc
shrb
and
repz
inc
cmp
aad
repz
cmp
popf
pusha
dec
or
orb
aad
mov
push
mov
gs
and
inc
adc
xor
es
inc
cmpsl
popa
sbb
cmc
ret
sti
stos
cli
cmc
xchg
bound
mov
fists
pop
jge
shl
push
mov
addr16
sbb
outsl
jb
in
jl
pop
mov
orb
cmpsl
leave
push
mov
jle
pop
add
das
push
hlt
jg
lods
aas
push
xchg
dec
mov
add
stc
clc
stos
outsl
jne
sbb
in
int3
fstpt
jae
in
xchg
jns
das
std
xchg
fdivrl
sub
pusha
and
xchg
ds
lds
clc
cmp
pop
scas
popa
or
rolb
lods
mov
xor
or
divb
xchg
lea
pop
jae
cmp
inc
cmpsl
fucomp
inc
sbb
adc
push
and
add
jne
std
lods
jne
lock
lcall
into
outsb
fsubl
insw
enter
pop
jle
leave
xchg
pushf
xchg
imul
push
mov
or
ss
sbb
jne
hlt
add
inc
cmc
stc
int
push
sub
push
mov
cmp
dec
jge
lods
push
push
mov
repz
add
jb
and
push
lahf
fwait
jo
xor
cltd
mov
pushf
jmp
pop
aad
js
dec
ds
pop
dec
mov
dec
insl
out
pop
mov
and
jp
aas
dec
in
lcall
xchg
mov
cmp
fwait
mov
jns
adc
in
or
pusha
jo
mov
mov
sti
xlat
test
fnstenv
cs
and
sub
push
testl
test
icebp
xchg
xchg
inc
dec
lret
mov
lds
ret
and
jbe
xor
sub
rolb
cli
xor
lods
cs
lahf
test
sub
test
jg
xor
adc
xchg
out
cli
loope
out
cld
xor
js
lds
cmc
mov
fwait
hlt
test
movsb
inc
cmpsb
in
pushf
pop
pushf
jmp
mov
pop
mov
or
movsl
adc
lret
stos
fs
sbb
cmpsl
xlat
shll
frstor
lds
pop
and
imul
push
xchg
mov
out
jecxz
pushf
cld
pop
inc
out
movsl
adc
inc
pusha
and
xor
mov
push
test
add
push
cmp
shll
add
pop
add
das
push
cmp
out
ljmp
or
pusha
into
fnstcw
xor
add
mov
pop
inc
push
pusha
jl
mov
hlt
xor
push
inc
or
cmpsl
inc
inc
inc
sarl
pusha
das
lcall
mov
dec
mov
rorb
mov
or
xchg
addb
stc
jae
sub
jnp
lcall
mov
adc
leave
pop
mov
jg
cmp
pop
push
push
or
cmpsl
jo
ljmp
loop
repz
mov
imul
xchg
lods
ljmp
xchg
fsubs
xchg
cmp
sbb
sbb
repnz
push
sub
inc
add
jmp
ret
je
sub
call
outsb
mov
adc
loopne
xorb
mov
lret
dec
sbb
and
addr16
fiaddl
iret
fwait
inc
mov
lds
mov
mov
mov
nop
dec
xor
or
addr16
jae
mov
sub
push
jae
scas
inc
call
lods
aam
or
push
or
push
fstpt
mov
pop
ret
scas
jae
cmpsb
dec
fstl
cs
xchg
into
scas
inc
hlt
adc
push
fadds
or
jne
xchg
fidivl
mov
add
push
loope
mov
xchg
addr16
jbe
jp
jbe
mov
cmpb
lea
xchg
adc
fsub
fldcw
jmp
ret
mov
or
inc
adc
iret
insb
sub
iret
bound
leave
jecxz
cli
mov
in
pushf
mov
fnstsw
xor
lds
sub
clc
insb
imul
jne
mov
setge
jb
aad
mov
testb
push
sbb
insl
push
jo
push
mov
cmpsl
mov
lcall
xorl
push
stos
into
add
sar
xchg
pop
jp
inc
dec
mov
loop
outsb
add
lcall
xor
sti
jbe
int
test
push
pop
mov
pusha
push
mov
out
push
pop
mov
mov
add
jle
pop
lcall
jbe
mov
mov
into
movsl
push
pop
js
dec
out
push
inc
fcoml
stc
inc
mov
loopne
lods
jmp
loopne
fwait
sbb
fistpl
shlb
push
rclb
std
pop
aas
arpl
dec
xchg
sbb
data16
push
nop
pop
cmp
aas
mov
scas
inc
hlt
js
cwtl
xchg
and
daa
inc
pop
bound
inc
stos
push
push
repnz
adc
lock
mov
mov
pushl
and
mov
and
push
adc
lcall
cmpsl
jg
cmp
cmp
pop
push
popfw
cltd
das
push
in
cltd
add
fnstenv
cmpsb
xchg
das
insb
or
xor
mov
popl
mov
or
jp
js
fidivs
hlt
pop
adc
in
nop
lret
addr16
test
inc
das
xchg
mov
cmp
loop
xchg
jnp
pop
mov
jmp
xor
push
or
idivl
lods
out
inc
add
movsb
loope
sti
add
jae
pop
mov
lahf
out
inc
aad
cmpsb
jbe
xor
cltd
jo
add
adc
add
dec
hlt
jae
jmp
jb
mov
inc
xor
insl
jnp
int
loop
mov
pop
inc
imul
mov
jns
cmpsb
stos
dec
sbb
xchg
std
jp
out
lock
jnp
arpl
push
add
pop
xchg
adc
xorb
add
cmp
push
jns
jg
gs
xor
cli
pop
jb
rcll
push
adc
incl
mov
test
fmuls
ljmp
int3
inc
clc
or
pop
movsb
mov
or
xchg
mov
es
cld
adc
sti
push
pushf
iret
xchg
xchg
fmull
mov
jmp
outsl
pop
pusha
cmp
fucomip
mov
or
or
pop
jge
adc
xor
dec
mov
pop
fwait
mov
pop
mov
lea
mov
lahf
jecxz
sub
pop
sbb
mov
out
mov
push
cmpsl
ja
xor
gs
xor
and
cmpl
xchg
scas
mov
adc
fucomp
jne
lret
fildll
popa
inc
xchg
cmp
adc
jle
cmp
call
dec
dec
pop
mov
mov
jle
sbb
std
dec
xchg
pop
out
into
ss
call
cmp
fwait
xchg
repz
push
adc
test
cmp
pop
bound
push
mov
insb
insb
call
mov
repz
cmp
jl
or
mov
mov
fimuls
in
sbb
inc
addb
pop
pop
mov
sub
shll
pop
arpl
sbb
sbb
cs
aad
jne
jle
scas
mov
sub
or
dec
and
lods
or
jnp
xor
shll
jne
sub
and
push
int3
ja
inc
jbe,pn
sbb
jb
lcall
sbb
adc
mov
mov
sub
mov
mov
mov
adc
subb
movsb
ret
pop
cmp
bound
pop
call
mov
into
jp
sbb
adc
sbb
faddl
mov
adc
ljmp
adcb
inc
or
dec
mov
push
jp
test
dec
filds
clc
imul
ret
adc
pop
jge
int
cwtl
pop
pop
stc
push
mov
mov
xchg
clc
jecxz
dec
sti
movsb
fucomip
pop
fwait
mov
int
popf
pop
add
pop
lea
dec
jecxz
test
xor
das
mov
daa
adc
push
add
pop
in
orl
xchg
push
mov
ja
jno
fmull
pop
and
xlat
mov
data16
sub
dec
dec
stc
popf
out
loopne
mulb
repnz
dec
mov
dec
mov
or
push
fildl
lea
inc
addl
push
sahf
mov
divb
outsl
inc
les
sub
push
mov
arpl
cld
stc
shll
out
mov
pop
xchg
lods
cmc
mov
or
enter
push
rcrb
cmp
push
and
sub
ret
cmp
mov
out
or
pushl
sbb
stc
mov
dec
cs
jae
pop
cmp
mov
adc
js
inc
cmp
pushf
inc
cmp
mov
subb
stos
push
xchg
shll
push
imul
pusha
mov
in
in
adc
jns
icebp
and
adc
test
lods
push
and
jmp
push
aas
jl
dec
push
orl
push
loopne
mov
push
aas
dec
iret
mov
mov
inc
popa
dec
stc
daa
sarl
loop
inc
push
or
loop
jo
dec
xchg
sbb
dec
pop
fcoml
clc
sbb
ret
push
mov
cmpw
notl
push
arpl
mov
arpl
ffreep
loop
push
nop
cmp
jbe
inc
mov
jecxz
and
add
pop
test
insb
mov
mov
movsl
sub
add
shr
dec
xorb
outsb
imul
ficoml
subl
push
jg
fimuls
and
fsubrl
sahf
push
dec
add
movmskps
sbb
xor
cmp
push
push
jle
adc
jae
lds
sbb
fcompl
mov
xor
mov
mov
mov
test
mov
jne
push
ret
sbb
dec
out
xor
jle
sub
push
and
in
pop
sub
mov
cmp
gs
stos
mov
mov
pop
aas
clc
shl
dec
xlat
loope
pop
shrl
test
outsb
loope
sbb
xchg
enter
aas
jecxz
sub
addb
lods
fldcw
outsl
push
xchg
test
cld
pop
fdivs
mov
xchg
es
lret
add
cmp
cmp
lods
hlt
pop
and
sarl
lods
subb
stos
push
push
loop
pop
jl
shr
and
dec
jb
leave
test
clc
lret
mov
pop
sbb
sbb
xchg
and
test
stos
aad
push
sbb
add
jmp
ljmp
je
out
cmpb
int
sub
cwtl
jmp
dec
stc
in
test
cld
dec
and
jne
push
cltd
jns
pop
pop
xchg
movsb
sbb
jmp
xor
pop
fsubs
pop
add
shlb
lock
jo
dec
movsl
lcall
hlt
inc
repnz
dec
jb
insl
call
adc
mov
push
xor
lods
je
mov
js
jb
int3
cmpsb
aas
loopne
gs
xchg
popa
testl
int
jmp
mov
je
jmp
lock
mov
pop
in
popa
arpl
popf
lock
clc
mov
mov
push
icebp
push
jbe
push
jbe
outsb
or
fwait
test
insb
aas
jbe
dec
mov
pop
jecxz
mov
cmp
leave
pushf
push
movsb
cmpsl
mov
sbb
sbb
sub
adc
adc
push
cld
jg
fwait
jmp
adc
mov
lock
sarb
xchg
add
inc
mov
push
int
shlb
mov
insb
sbb
punpckhdq
jmp
push
scas
mov
cwtl
enter
dec
arpl
push
pop
js
or
sbb
idiv
decl
mov
push
int3
mov
inc
daa
mov
out
sub
mov
mov
sbb
bound
jp
loope
push
xor
enter
repz
cld
mov
std
icebp
push
sub
sti
cmp
mov
fdivr
push
inc
je
push
test
mov
mov
push
push
es
and
push
jns
popl
add
ja
jp
push
lahf
test
mov
ljmp
and
push
loop
cs
mov
push
cmpb
and
xor
mov
stc
lds
ja
xchg
repz
pop
inc
shlb
jo
xor
inc
test
lret
xor
mov
fwait
xchg
xchg
or
cmp
xor
in
test
fisubs
inc
xchg
jbe
imul
data16
xchg
inc
push
lcall
sbb
mov
adc
push
stos
insb
in
sbb
jbe
jb
sti
pop
push
jb
lds
pop
je
push
mov
push
shlb
sub
push
or
cmp
cmpsl
jg
and
daa
pusha
cmpsb
dec
xchg
sbb
xchg
mov
arpl
and
inc
cmp
clc
or
inc
imul
mov
movsl
cld
or
and
dec
cld
ret
pusha
and
out
xor
loopne
scas
sarl
xchg
push
aam
mov
leave
add
add
xchg
dec
adc
in
xchg
das
es
cmp
adc
cmp
cld
xlat
xchg
loope
sbb
cs
cmpsl
xchg
subl
shrb
xchg
lret
gs
stc
xchg
cli
aam
aam
push
sbb
xor
repz
mov
or
mov
pop
pusha
mov
or
testl
and
xor
fcmovnbe
inc
out
and
cs
leave
and
xchg
sahf
inc
cmc
mov
insb
xchg
rolb
cltd
call
testl
xor
cmp
xor
cwtl
adcb
arpl
xchg
mov
pop
fnstcw
cmc
inc
movzwl
cmp
mov
cmpsb
adc
cmpsb
pop
pushf
mov
dec
test
pop
mov
pushw
push
sti
adc
push
jo
inc
dec
call
push
sbb
mov
cltd
rcrl
out
push
jge
inc
loop
test
xor
jl
jbe
push
daa
notb
enter
pop
mov
pop
cmp
into
pop
pop
push
fbld
out
mov
int
lock
mov
int
mov
adc
mov
pushl
popa
fldpi
jle
pop
adc
adc
mov
in
or
adc
add
lahf
gs
fcmove
adc
icebp
jmp
dec
lock
or
loope
pop
mov
mov
movsbl
sti
scas
jg
lods
in
mov
cmp
sbb
mov
imul
jae
mov
aaa
push
stos
pop
addr16
repz
fs
pop
jecxz
pop
inc
loop
cltd
cltd
pop
imul
dec
in
pop
dec
pop
mov
sub
loopne
inc
and
mov
cwtl
jge
fcompl
cmpsb
les
sub
mov
negl
lahf
jmp
sbb
jmp
inc
adc
sub
pop
xchg
xchg
daa
mov
push
subl
sub
jl
jo
cltd
jb
mov
mov
xchg
fstpl
ficoml
inc
push
jb
test
in
aas
inc
test
aas
fisttpll
sti
cmp
arpl
popf
sar
out
xor
test
dec
jge
movsb
aam
test
inc
lods
jecxz
jg
xchg
test
hlt
jb
mov
add
push
push
jbe
jno
xor
ret
xor
mov
fists
mov
fdivr
jecxz,pt
imul
push
push
xchg
cmp
fsub
fsubs
enter
pusha
or
lcall
push
scas
insb
dec
aas
adc
cmpsl
std
lret
fwait
pop
data16
dec
jb
out
sub
js
mov
push
dec
lahf
mov
xor
fcom
pop
push
nop
adc
stos
inc
sub
out
and
in
adc
addr16
xchg
add
cmp
rorb
pop
loop
mov
aam
jnp
xor
dec
or
mov
jno
pop
xor
outsb
pop
and
fs
pop
jle
lea
lret
mov
cmc
or
sub
frstor
add
in
movsb
imul
sbb
cltd
aas
sbb
push
mov
pop
outsl
mov
je
insl
int3
push
clc
inc
pop
out
cmp
imul
jbe
addb
inc
jmp
xchg
jp
and
scas
fcoml
xor
pop
cmpsl
mov
shr
fcoms
jge
aaa
insl
cmp
adc
cmp
cmpsb
fistps
dec
pop
cmp
pop
push
dec
das
rcrl
mov
lock
add
xor
inc
sub
add
push
push
imul
loopne
cwtl
stos
out
jbe
or
cmp
outsl
mov
mov
fists
loope
pop
mov
mulb
xchg
cmpsb
lret
gs
mov
movl
and
and
sub
nop
add
jecxz
cmp
xor
lahf
cs
sbb
push
mov
lock
dec
xor
sbbl
sarb
mov
fnstsw
inc
mov
adc
std
out
in
add
repz
or
sub
cmp
nop
push
mov
test
xchg
shlb
jnp
jmp
adc
stc
les
loope
add
cmp
call
mov
pop
ja
idivb
lods
mov
or
push
out
fucom
rcrb
cld
mov
in
xchg
push
les
cmpsl
push
mov
pop
stos
loope
sub
jno
in
cli
cmp
and
dec
sub
or
dec
les
jecxz
and
addr16
pusha
sbb
das
scas
mov
lahf
inc
and
mov
in
xor
lahf
sahf
add
add
jbe
or
cmpsb
and
insl
and
sar
adc
jbe
sbb
inc
add
cmp
mov
jle
jecxz
subl
nop
xchg
mov
dec
gs
lds
lock
sbb
test
jecxz
xlat
pop
cmp
pop
push
stc
clc
push
mov
iret
mov
mov
dec
negb
xor
mov
xor
mov
cmp
gs
punpckhbw
dec
flds
lahf
dec
je
cmpl
mov
out
pop
aaa
mov
js
repnz
xor
and
fsubr
inc
push
xchg
aam
jle
idiv
cli
insb
dec
mov
test
push
mov
lock
inc
and
mov
aam
arpl
dec
cmp
inc
cli
int3
xor
shrl
fcomp
lods
mov
push
ficoml
xchg
mov
ficomps
add
cmpb
js
pop
sbb
sub
xchg
xor
or
test
xlat
or
push
sub
or
imul
lds
cmc
stos
xchg
repnz
and
cld
dec
loopne
jmp
jae
rorb
rorl
xchg
push
lahf
insl
jb
and
mov
inc
inc
lcall
cmp
mov
std
xor
data16
and
cmp
gs
push
mov
jl
test
test
dec
inc
jb
aaa
scas
xchg
inc
sbb
or
cmc
cmp
out
or
mov
mov
xchg
imul
or
adc
aad
pop
inc
mov
je
ljmp
pop
push
mov
sub
push
movsb
loope
cli
xor
lds
sub
arpl
daa
arpl
sub
enter
xchg
mov
nop
test
rcr
sbb
and
push
sbb
rcl
sbb
adc
pop
jmp
test
dec
jae
cmpsb
inc
hlt
cmp
mov
out
or
mov
in
repz
adc
adc
imul
mov
xor
cmp
dec
inc
pop
jo
pusha
jl
mov
mov
lock
loopne
adc
sbb
sub
cmp
dec
inc
pop
jo
pusha
jl
mov
mov
lock
loopne
adc
push
mov
and
dec
inc
hlt
jo
loopne
nop
push
sbbb
rcr
int3
loopne
adc
sbb
sub
cmp
jo
pusha
jl
jae
sbb
and
or
sbb
sub
cmp
hlt
adc
cmp
mov
cltd
lods
in
int3
stc
push
leave
in
frndint
and
sbb
sub
cmp
dec
jns
dec
insb
pop
or
cmpb
jmp
in
frndint
repz
fbld
push
xor
mov
mov
leave
andl
push
dec
outsb
pop
loop
cmp
dec
pop
xchg
lcall
mov
mov
call
xchg
xor
xchg
sub
cld
jb
insb
lods
push
add
nop
sub
pop
cltd
arpl
or
pop
popa
and
mov
jbe
addr16
push
imul
push
inc
jecxz
rorl
dec
xchg
pop
stc
mov
push
xor
pop
fcoml
es
lods
mov
jecxz
rcr
dec
xchg
mov
sub
jo
arpl
lcall
mov
cmp
aam
mov
movb
push
in
testb
stc
cmp
out
leave
cli
sbb
cmp
xor
cmp
gs
mov
test
xchg
leave
idivb
outsb
dec
dec
ja
pop
dec
or
pop
add
sbb
jecxz
pushf
fldcw
xchg
fidivrs
gs
dec
pop
rclb
dec
sbb
and
clc
clc
stc
in
leave
cmc
mov
mov
or
sbb
dec
pop
jns
jg
pop
dec
insb
pop
jl
mov
mov
leave
in
frndint
sub
sbb
sub
cmp
dec
jns
dec
insb
pop
jl
mov
mov
leave
in
frndint
sub
ds
mov
or
mov
jmp
cmp
push
cmp
sub
outsl
call
jmp
pop
cs
add
push
jecxz
push
pop
and
jp
loop
push
aad
negb
pop
loop
xor
and
xchg
ficoml
pop
dec
rcrb
xchg
addr16
shlb
icebp
neg
sub
xchg
hlt
xor
test
in
lods
lods
loope
aaa
dec
xchg
bound
pop
fdivrl
push
testb
pop
mov
imul
stos
inc
mov
dec
pop
pushf
fwait
mov
push
pop
fs
lods
call
mov
mov
lock
insb
sti
outsb
gs
loop
mov
cmpsl
mov
dec
sbb
rorb
data16
and
add
sti
jb
push
into
fisttpll
iret
push
fwait
testb
stc
sbb
pop
pop
int
and
inc
push
xlat
pop
push
data16
jb
or
ret
cli
rol
stos
lea
or
popa
jle
push
jne
cmpsl
mov
jo
add
lcall
add
jns
jae
cmc
xchg
push
cmp
xchg
arpl
or
add
cmp
add
pop
mov
pop
inc
lcall
fistps
jnp
loope
fadds
jl
mov
ds
pop
repnz
dec
aaa
push
jo
imul
fdivrs
cld
outsb
xor
dec
sbb
lahf
sbb
inc
xchg
xchg
mov
xchg
adc
test
jg
push
push
mov
int3
and
jbe
mov
std
nop
adc
repnz
cli
int3
xchg
jge
adc
shlb
shll
jmp
lahf
in
mov
mov
sub
sub
push
inc
rcr
lcall
cs
movsb
test
cmpsb
lock
out
push
popf
in
fnstcw
lds
pop
mov
xchg
or
inc
push
mov
dec
mov
in
es
mov
push
daa
fcomps
imul
xor
sub
ss
cmp
and
idiv
aad
pop
fwait
jle
dec
mov
xlat
sbb
dec
out
dec
stc
hlt
push
cmp
xchg
adc
addr16
and
shrl
pop
stc
int3
sub
idivb
or
pop
or
xor
int
and
and
insb
add
adc
or
addb
js
inc
adc
inc
sti
aas
or
loopne
je
dec
fcmovnbe
push
cmp
lods
jns
xchg
jno
idivl
lret
mov
pop
pop
mov
or
in
inc
mov
insl
pop
popa
adc
fisttpll
call
out
push
bound
inc
decl
pop
loope
testl
lods
popf
xor
test
out
xor
loope
cld
test
mov
pop
outsl
shll
mov
jns
pop
int3
cltd
and
dec
in
shlb
lock
lods
and
xchg
in
inc
push
imul
xorl
pop
or
andb
add
aaa
sbb
roll
fistps
das
sub
dec
in
fidivs
jnp
les
sbb
fidivl
filds
xlat
jno
cmpsl
in
test
pop
nop
imul
les
mov
fsub
outsl
lea
popa
js
ja
loopne
adc
int3
and
scas
fwait
cmp
icebp
fbstp
mov
cmpsb
les
cmp
out
les
fwait
sub
aam
xchg
pop
mov
mov
xor
sbb
ljmp
mov
mov
icebp
test
outsl
fidivrl
cmp
inc
bound
push
cmp
xor
jo
aaa
ja
fmuls
sub
arpl
add
mov
ljmp
lods
mov
mov
dec
leave
cwtl
in
inc
lods
pop
add
daa
lock
jbe
mov
lcall
movsl
sbb
je
mov
cmp
and
jg
int
data16
inc
inc
inc
shrl
fwait
jmp
outsl
insl
jle
xor
mov
xchg
inc
lea
sbb
test
mov
das
dec
mov
negl
push
mov
adc
pop
sub
jne
mov
mov
rcrl
adc
mov
js,pn
movsl
inc
jp
leave
mov
or
push
mov
test
pop
stos
add
or
adc
sbb
pop
and
push
and
shr
sbb
les
pop
pop
fnstsw
xchg
push
ret
and
mov
in
xchg
repnz
in
fnstenv
sub
nop
andb
rclb
mov
push
dec
rcll
inc
jne
mov
mov
mov
call
mov
scas
mov
clc
jb
cmp
cmp
loopne
iret
pop
popa
call
and
stos
mov
mov
pop
push
or
add
sbb
dec
mov
or
stc
ficompl
xchg
ffreep
rcrb
mov
lret
dec
fdivl
popf
xchg
dec
adc
addr16
jp
iret
popf
shll
mov
add
xchg
aad
mov
mov
repnz
xor
dec
sarl
sti
jne
sub
sbb
fcmovu
mov
pop
jne
mov
in
lock
loop
cli
andl
sub
push
xor
adc
lcall
movsb
pop
xlat
loop
or
push
sahf
call
sub
stos
or
rcrl
mov
addb
jnp
inc
mov
sub
and
adc
leave
cmp
dec
jo
and
cli
xlat
mov
fisubrs
sub
imul
cmp
test
test
push
or
mov
push
jge
cmp
lret
dec
pop
mov
arpl
mov
or
or
jns
or
dec
cwtl
fnstenv
call
aam
repz
mov
jb
test
or
pop
inc
sbb
gs
mov
aas
jecxz
daa
fdivr
lds
adc
fwait
or
insl
lret
sarw
ds
rcrb
scas
push
dec
pop
jmp
adc
cmc
or
dec
push
js
adc
scas
add
adc
popf
push
and
scas
cmpsl
xchg
and
das
sub
mov
adc
sbb
jne
fbld
fisttps
dec
data16
adc
shlb
ret
xor
icebp
daa
popf
cmpsl
cs
shrb
sub
and
fwait
jae
data16
dec
std
sarl
xchg
xor
popf
inc
lret
or
dec
or
mov
lcall
cmp
jbe
push
in
mov
fnstenv
cli
lea
and
mov
push
push
and
inc
sbbb
pop
push
inc
les
bound
push
lret
fcmovb
clc
inc
loop
xor
fisttpl
fucomip
add
or
movb
xor
xor
jne
inc
lcall
pop
mov
fildl
xchg
push
push
dec
hlt
or
mov
daa
pusha
daa
mov
push
push
dec
mov
mov
and
out
xor
js
clc
mov
dec
sar
pop
and
push
cwtl
pop
arpl
iret
mov
fldt
xchg
and
xor
into
cwtl
push
popa
xchg
mov
jle
fwait
mov
imul
enter
stos
daa
jo
pop
stos
cltd
aaa
push
jne
daa
adc
push
ret
pop
jae
dec
or
sbb
shrb
stos
fsubrs
ret
fists
inc
das
sarl
xchg
inc
cs
and
push
cli
lea
mul
jnp
pop
cwtl
icebp
in
lock
lret
sub
xchg
nop
xor
sahf
lea
mov
bound
mov
dec
imul
sahf
fiadds
mov
cmp
ljmp
stos
push
jae
test
inc
shl
cmp
in
dec
imul
enter
lds
lods
outsb
test
mov
call
pop
ds
or
mov
jg
lret
lock
mov
fs
push
dec
pushf
push
and
imul
pop
or
fcomps
std
xchg
pop
sahf
cmc
sub
cmp
jbe
and
cmp
jno
stos
js
mov
push
gs
sbb
adc
das
cli
sarl
daa
lock
sub
adc
jb
mov
aaa
jl
test
testb
or
arpl
fucomp
push
scas
pop
jo
sub
xchg
xchg
push
dec
inc
inc
in
test
gs
lret
cmp
sbb
pop
mov
mov
lock
pop
pop
add
and
movsl
addr16
test
mov
push
into
push
mov
mov
scas
pop
pop
xchg
jne
sahf
add
es
lods
imul
sbb
test
mov
movl
nop
test
and
ret
nop
call
xchg
lret
pop
dec
sub
fstpl
fisubrs
mov
pop
sahf
mov
test
jbe
aad
xor
push
outsl
test
mov
mov
push
aas
iret
rcr
or
mov
gs
js
mov
push
jb
jnp
and
or
arpl
adc
push
mov
push
cs
fcomps
add
sub
movsl
shl
dec
cmp
sbb
jmp
mov
cmp
insb
or
test
jg
push
int3
fldt
into
bound
lds
jb
add
cmp
dec
xchg
popf
imul
push
push
das
arpl
lods
mov
sbb
dec
xchg
pop
push
add
subl
lds
mov
pop
js
push
mov
stos
sub
and
loope
ret
push
notb
cmpsb
sub
inc
icebp
and
sbb
lods
sahf
or
pop
lahf
cld
cmp
adc
adc
cmpsb
xchg
not
pop
das
aam
mov
push
and
sbb
mov
add
mov
into
pop
iret
outsl
fsubl
jb
andb
std
pop
mov
imull
arpl
xor
mov
popf
jb
fdiv
adc
push
mov
fsub
in
loopne
dec
jns
mov
jae
and
insl
xchg
add
inc
push
mov
cmp
or
in
pop
movsl
into
imul
idivl
jns,pt
jecxz
and
xchg
inc
mov
call
and
scas
adc
fldt
popf
dec
pop
shrl
fidivl
cmpsb
les
add
inc
shufps
sub
mov
scas
sbb
add
aaa
dec
pop
push
repz
cld
ret
xor
fcmovbe
rcl
outsl
pop
cmp
cmpl
mov
addl
mov
ret
xor
cmp
jns
cmpsl
pop
sbb
outsl
into
outsb
sub
mov
dec
sub
fisubs
in
loop
call
scas
mov
std
add
and
jge
push
jne
in
push
dec
cmp
push
inc
jne
test
and
out
push
sub
pop
nop
and
test
loop
addb
inc
jnp
inc
dec
add
pusha
lcall
mov
out
pop
adc
or
mov
clc
loope
mov
fwait
sub
and
pop
fcoml
cmpsb
sbb
push
aam
fmull
lcall
lock
sti
sbb
cli
out
fnstcw
jne
call
cld
or
mov
dec
sbb
adc
xchg
cmp
push
fwait
adc
xlat
sub
sbb
sub
cmp
into
adc
mov
lcall
out
mov
rolb
lahf
and
fwait
jb
dec
into
nop
insb
mov
cmc
lock
mov
sub
fmul
cmp
or
sbb
sbb
inc
push
aam
fiadds
or
call
pop
lret
mov
ds
ret
or
pop
mov
outsl
sbb
cmp
xchg
sub
lods
outsl
pushf
mov
in
lcall
jecxz
ss
and
outsl
mov
or
add
int3
fnstcw
mov
pop
arpl
clc
stos
sahf
or
xchg
cmp
cmp
testb
lock
push
jmp
ja
sbb
int3
push
mov
jo
and
jg
loope
dec
aam
stos
xlat
repz
clc
jns
faddp
jne
pop
mov
stos
outsb
fistl
xor
and
mov
aam
divl
pushf
test
das
pop
popf
jns
jp
orb
jnp
lcall
aad
aad
inc
arpl
lods
aad
dec
pop
sti
lcall
xor
jne
stc
mov
push
pop
cmpsb
mov
out
lds
insl
divl
shr
lods
jo
sbb
push
lahf
cmpl
call
xchg
cmp
and
cmp
aas
gs
out
cld
xchg
mov
test
hlt
mov
loopne
loopne
mov
cmp
nop
or
dec
adc
aad
xor
adc
mov
aas
adc
push
stos
lahf
sahf
and
dec
enter
or
add
add
mov
mov
push
mov
ficomps
xchg
add
aas
in
sub
orl
xor
xchg
mov
mov
mov
mov
pop
mov
sub
mov
aas
into
pop
xchg
mov
dec
pop
or
outsl
pop
imul
lahf
in
sbbb
pop
addl
scas
cmp
sub
adcl
lcall
pop
fsts
jb
or
in
in
insb
jae
daa
test
sahf
mov
loop
rcrl
sbb
loope
push
das
bound
pop
outsl
movsb
pop
in
pop
nop
sahf
ja
cmp
ljmp
rcll
cmpsl
pop
jno
sbb
dec
mov
sub
xor
aas
push
add
fsubl
mov
mov
mov
mov
sarb
mov
xlat
sbb
add
sbb
loopne
push
das
stc
xchg
mov
nop
insl
jmp
iret
out
jmp
mov
icebp
xchg
xor
push
push
ss
xchg
mov
data16
mov
les
inc
std
dec
add
xor
ret
or
mov
cs
loope
push
xor
mov
mov
fmuls
ffreep
jbe
popf
mov
call
in
and
pop
pop
sub
cwtl
gs
sub
cmp
out
xchg
inc
mov
ljmp
inc
fimull
xchg
mov
lcall
lods
es
cmp
ja
add
push
bound
push
adc
push
iret
jb
mov
sub
cmpsb
add
pop
movsb
add
sbb
inc
clc
xor
lgs
movsb
lahf
hlt
leave
mov
stos
or
inc
xchg
mov
ret
or
or
jge
xchg
cmp
lock
setle
movsb
ss
test
int3
mov
bound
add
dec
das
movsb
lock
mov
push
jl
rorl
in
push
das
in
mov
repz
addr16
dec
push
push
sub
sahf
sti
mov
and
inc
push
fimull
pop
xlat
mov
call
ret
aam
mov
mov
or
fimull
mov
fadd
push
cmc
xchg
ss
clc
mov
jns
mov
inc
aad
jp
xlat
dec
pushf
lds
movsb
cli
push
and
inc
test
add
jg
es
in
mov
icebp
cli
adc
ljmp
xchg
pop
test
clc
inc
jmp
mov
jnp
sbb
dec
rolb
xchg
arpl
sbb
sahf
pop
push
pop
out
or
scas
fisubrl
ja
push
and
inc
int
pusha
cltd
add
push
into
gs
movsl
andb
out
leave
lret
mov
xchg
pop
xchg
pop
rorb
mov
ret
cmpb
hlt
lods
nop
lods
push
test
cmp
or
jo
xor
iret
aas
jmp
push
lret
loope
xorl
pop
push
mov
mov
stos
iret
gs
in
shrl
outsb
cmpsl
cmp
mov
mov
jne
lret
subb
xchg
div
sti
ss
int3
dec
inc
iret
and
sbb
mov
push
jl
mov
nop
push
push
jae
sub
fucomi
ret
lods
add
adc
stos
jl
pop
adc
arpl
push
jmp
xchg
daa
xor
call
cmp
push
mov
jo
ret
ja
ds
push
xchg
or
sbb
repnz
xor
lret
xor
xchg
and
stos
jp
push
push
jmp
int3
xchg
pop
dec
mov
pop
mov
inc
clc
popa
adc
sbb
pop
pop
int3
xor
pop
mov
add
mov
lods
das
popa
scas
mov
jne
sub
push
sbb
repnz
hlt
int3
xor
xchg
fstp
lahf
repnz
stc
push
xchg
outsl
jnp
vpackssdw
fiaddl
loope
mov
sub
in
lds
out
testb
adc
sub
pop
sarb
jp
shlb
test
mov
cmpsb
pop
cmp
es
outsl
int
xorb
into
imul
je
aad
sbb
out
xor
andb
pusha
sbb
imul
mov
mov
adc
fbld
dec
dec
cli
pop
cmp
insl
out
mov
gs
push
adcl
movsb
in
jo
push
mov
jmp
test
dec
pop
adc
and
in
sti
cli
mov
cmpsl
aas
xchg
sti
fadd
xor
add
mov
mov
cltd
rolb
cwtl
xor
scas
cmc
mov
add
hlt
sub
mov
dec
dec
and
lods
push
pusha
dec
icebp
jmp
mul
or
push
cmp
out
sti
popl
les
call
push
sarb
dec
and
lods
cmovs
push
add
sub
inc
in
dec
jb
push
popa
pop
xchg
orb
out
div
outsl
sahf
jl
add
icebp
xchg
addl
adc
inc
stos
xchg
imul
addr16
cmp
jb
and
push
dec
aaa
test
icebp
movsb
mov
loope
lock
inc
mov
loopne
cli
icebp
mov
sub
add
adc
add
or
jae
subb
mov
or
xlat
int
xchg
and
lahf
xor
add
notb
xorb
arpl
fdivr
xchg
push
adc
ss
xchg
cmp
stc
sbb
jae
fistpll
xlat
xchg
pop
inc
fimull
insl
inc
clc
std
popaw
pushf
add
dec
hlt
xor
out
fnstsw
inc
and
jns
sub
or
cs
gs
lret
xchg
arpl
in
fidivl
fdivr
mov
clc
cmc
aaa
mov
loop
in
rcr
in
xchg
ljmp
outsl
or
sbb
daa
or
jb
jl
inc
mov
cli
push
inc
or
stc
and
data16
loope
dec
adc
cltd
scas
popa
adc
mov
andb
inc
mov
inc
cmp
pop
push
fwait
adc
add
arpl
ja
les
pop
inc
ret
xchg
movsl
imul
std
and
nop
xchg
sti
xchg
shrb
std
insl
dec
fisttpll
sbb
and
in
repnz
pop
jae
movsl
mov
inc
add
or
adc
add
gs
push
jnp
pop
fucom
lods
adc
ljmp
mov
xchg
repz
fmuls
push
and
in
jns
xchg
push
xchg
repz
in
imul
sub
popf
stc
popa
out
add
xlat
fiaddl
lcall
sbb
add
shll
daa
addb
into
rcl
push
roll
les
push
and
aas
in
scas
or
nop
movsb
mov
push
push
hlt
sbb
mov
fidivs
loope
mov
xor
jle
adc
jns
roll
mov
cmp
xorb
sbbb
setbe
or
mov
sub
sbb
insl
push
adc
sbb
jae
lods
or
js
push
sub
push
cmc
arpl
sbb
cmpsb
jle
aam
mov
mov
inc
dec
xchg
add
stc
test
mov
mov
fisttpl
fsts
pop
lods
adc
loope
sub
pop
fistpl
mov
out
jp
ret
jge
out
cmp
dec
mov
adc
jp
sahf
loop
jne
aas
inc
xor
insl
dec
push
mov
loope
or
xchg
xchg
or
xchg
loope
push
mov
mov
imul
imul
sbb
cmpsl
sbb
sub
mov
shll
pop
dec
add
fidivs
push
es
ja
fwait
sub
jbe
and
ret
cs
pusha
out
cmpb
add
push
sbb
decb
lret
cmp
dec
jns
dec
insb
pop
jl
mov
mov
leave
in
frndint
sub
sbb
sub
cmp
dec
jns
dec
insb
pop
jl
mov
mov
leave
in
frndint
sub
sbb
sub
cmp
dec
jge
dec
insb
pop
jl
mov
mov
int
jmp
sbb
dec
imul
inc
and
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
out
mov
scas
fmull
add
pop
push
or
add
cmp
jl
lds
sbb
sbb
adc
imul
faddl
pop
add
add
lds
addb
add
add
add
add
add
add
aam
push
add
add
add
jle
stc
add
add
add
add
or
add
jno
pushf
add
add
or
movsb
add
add
xchg
add
add
ds
add
add
add
add
add
add
add
add
imul
out
fiaddl
lds
lods
add
add
add
insb
add
add
add
add
add
add
add
add
add
jb
lods
add
and
and
sbb
add
add
add
add
lods
add
add
cmp
mov
dec
add
add
roll
jns
addb
add
add
fwait
add
add
roll
js
or
add
add
add
add
add
or
add
xchg
add
add
adc
inc
add
add
add
aad
fwait
add
add
mov
add
add
leave
add
add
jb
in
add
add
cmp
cmp
push
add
add
cwtl
add
add
add
in
addb
add
add
add
add
inc
add
add
add
add
test
out
out
out
add
lods
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
inc
add
add
add
add
adc
add
add
pop
add
add
add
add
test
repz
add
imul
out
fwait
add
add
push
add
or
add
add
inc
add
add
mov
js
cmp
mov
add
add
add
add
add
add
add
or
xchg
add
add
or
add
add
add
add
imul
dec
add
add
add
add
add
add
add
popl
inc
add
ret
add
add
add
add
add
add
ljmp
add
add
pop
add
add
add
add
add
add
add
fildl
adc
fs
add
popl
pop
add
add
add
add
lret
add
add
cmp
add
add
stos
add
add
add
out
cmpsb
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
and
jno
test
repz
add
add
add
incb
sub
out
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
mov
add
add
add
add
dec
pop
fs
lea
repnz
imul
nop
and
jns
pop
call
sub
imul
loope
mov
cs
in
dec
sub
sbb
adc
inc
xchg
mov
mov
rcrl
iret
insb
adc
repz
lahf
sub
les
sti
xchg
jmp
mov
pop
pop
xchg
adc
inc
mov
fwait
jl
pop
mov
stos
ret
or
xor
js
fcmovb
out
mov
nop
fs
std
mov
mov
xchg
sbb
dec
mov
adc
lea
inc
lea
jmp
cmp
cmp
xor
inc
pop
pushf
push
jp
mov
pop
push
jae
test
jmp
push
ret
cmp
stos
jmp
fwait
jbe
cltd
out
mov
and
mov
or
fdiv
in
mov
repz
rorl
ret
and
jecxz
sti
sbb
leave
xchg
pop
xchg
cmp
xor
scas
scas
jno
inc
dec
cmpsl
mov
repz
jnp
rcll
mov
aad
add
loop
ret
xchg
scas
aad
cmp
mov
in
in
pop
adc
mov
aam
cmp
cwtl
jmp
mov
outsl
adcl
lods
push
dec
fmulp
jo
gs
movsb
xchg
mov
lret
mov
jno
adc
cmpl
lock
inc
lds
stos
cli
ret
test
mov
push
leave
aaa
jl
call
movsl
sti
jmp
lods
dec
dec
mov
sub
insl
call
push
call
aam
test
inc
insb
cmp
xor
and
dec
mov
into
stc
fwait
in
jo
xchg
test
inc
push
push
ret
rcr
popa
adc
jne
cmp
and
fisubs
push
stc
add
fcmovnbe
xchg
pop
xchg
mov
sub
xor
cmc
lcall
addr16
mov
clc
add
mov
cmp
lock
mov
or
xor
push
mov
xor
xchg
ljmp
sub
outsb
lahf
push
not
icebp
icebp
mov
lods
inc
lret
sbb
shrd
cmovg
push
fildl
fstl
mov
cli
or
repz
jae
sbb
fcmovu
push
sbb
pop
orl
popa
into
xor
mov
mov
inc
fcmove
sbb
popa
lea
jmp
movsl
push
nop
push
enter
popa
mov
loopne
xchg
adc
sub
stos
push
fisttpl
mov
mov
pop
and
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
