in
mov
in
mov
movl
mov
inc
add
incb
pop
ret
int3
add
idiv
mov
or
add
test
incl
push
add
lcall
push
call
add
movl
incb
imul
sbb
enter
xor
shl
and
incl
dec
repz
in
jmp
lea
call
movsb
mov
cmp
mov
jbe
movsb
push
mov
pop
std
pushl
mov
mov
shr
push
mov
sub
or
inc
push
mov
or
sub
cmpsl
push
pushf
rorb
movsb
pop
adc
outsl
mov
negb
inc
les
lock
addb
add
andb
cs
xchg
fs
and
sbb
sub
jnp
ret
add
push
mov
adc
cmp
cmp
lea
add
adc
rcrb
cli
lea
mov
daa
xchg
inc
add
fistpl
dec
adc
out
out
sbb
fildll
push
inc
push
pop
enterw
xor
pop
rcl
sti
sbb
jmp
add
mov
or
push
inc
mov
loope
jne
dec
rcrl
xchg
jnp
jmp
add
movsl
cmp
xchg
xor
outsb
js
fcmovb
lret
add
jl
lahf
xchg
cli
out
lret
mov
je
inc
push
push
add
push
vunpcklps
insb
mov
inc
cli
or
or
cmp
add
adc
rcr
cmp
and
push
adc
ret
clc
xlat
push
mov
xor
inc
sbb
out
xchg
mov
int
xchg
pop
pusha
pusha
lods
cld
pop
mov
cmp
in
xchg
mov
movsb
push
movsb
xor
dec
xchg
repnz
sbb
xchg
loopne
mov
mov
add
movsb
test
aad
push
je
clc
adc
lea
ljmp
sub
decl
and
sbb
and
stos
sub
pop
pop
dec
inc
mov
mov
das
rclb
sbb
sbb
add
lods
push
insb
mov
stos
add
adc
pop
test
sbbl
jb
lahf
jno
cmp
fsts
and
inc
cld
in
shl
adc
cmpsl
fcoml
sahf
pop
rol
loopne
dec
enter
mov
arpl
or
pop
mov
pop
mov
add
insb
fistl
ljmp
rcl
stos
or
push
pop
pop
cld
add
orl
adc
dec
es
cmp
stos
mov
insb
cmp
mov
jg
outsl
shrl
dec
add
pop
mov
adc
inc
push
sub
mov
or
addr16
lock
ret
jmp
dec
inc
mov
jmp
lret
fdivrs
test
sbb
or
or
cwtl
mov
aaa
iret
insb
dec
inc
divb
scas
jno
out
lds
jae
ret
lahf
mov
mov
jmp
adc
std
in
sbbb
insl
add
dec
dec
adc
jo
push
cmp
fmuls
out
test
stc
sbb
fcompl
inc
push
mov
sarb
dec
cmp
inc
xor
push
sarl
jbe
push
out
mov
xchg
out
repnz
shl
or
cmp
inc
add
sbb
xchg
push
or
lahf
jmp
mov
inc
sbb
cmp
xchg
add
push
ds
cmp
ja
clc
add
and
mov
mov
notb
add
mov
fsub
and
clc
loopne
mov
cmp
jne
loopne
xchg
test
and
nop
sbb
and
stos
fsubl
adc
js
decl
jg
flds
pop
mov
jno
inc
movsb
loopne
cmp
dec
mov
in
and
pop
movzbl
outsl
adc
cmpsl
notl
add
xor
roll
fistpll
ljmp
pushf
push
mov
and
and
cmpsb
jns
add
or
mov
or
nop
std
inc
xchg
cmp
nop
dec
push
or
fmuls
lods
adc
pop
fs
mov
mov
xchg
insb
aad
xor
or
mov
add
sbb
outsb
or
or
bound
repnz
fchs
fsts
les
iret
push
arpl
cs
jge,pt
inc
sub
jb
sbb
cmpsl
or
cmc
test
mov
push
test
lods
push
or
xchg
mov
add
cs
cmpsl
inc
inc
roll
mov
sti
test
mov
sbb
aam
mov
nop
fs
push
stos
xchg
adc
push
and
cmp
mov
xor
hlt
jnp
xchg
scas
iret
pop
add
pop
outsl
into
insb
mov
jno
imul
push
mov
imul
inc
sbb
fnstsw
add
and
cmp
mov
push
les
fs
in
popa
xchg
test
popa
gs
adcb
mov
pop
xchg
and
push
test
xchg
cmp
nop
insl
icebp
pop
xor
inc
or
ret
inc
inc
or
pusha
cmp
dec
add
loopne
lret
inc
xor
shl
aas
add
mov
gs
adc
lea
push
arpl
xorl
pop
leave
inc
enter
inc
nop
inc
push
mov
lods
dec
mov
ret
arpl
ret
jb
pop
out
clc
mov
ret
ss
mov
sbb
dec
adc
loope
xchg
cmpl
sahf
mov
pop
mov
xchg
inc
lea
lea
cmp
dec
xorb
fucomp
push
inc
subb
dec
in
push
jne
aas
lods
xor
mov
push
mov
push
mov
push
or
or
add
or
or
fwait
insb
aad
jmp
jle
jg
add
jnp
jbe
mov
push
rcr
movb
cmp
scas
clc
add
lea
fadds
push
and
stos
push
inc
push
imul
dec
jno
adc
pop
sarb
movsb
in
lea
inc
test
adc
out
or
or
sub
dec
or
lea
xchg
outsl
or
jo
daa
add
or
adc
scas
insl
addr16
je
xchg
push
pop
lock
xor
jo
push
dec
das
mov
mov
addr16
mov
test
gs
cmpsl
add
jbe
rcrl
pop
cmp
repz
xchg
pop
jno
lds
test
cmpsl
push
cmc
push
nop
loopne
inc
xchg
jge
aaa
movsb
daa
xchg
addl
mov
mull
mov
cmpl
insl
lret
nop
push
cli
outsl
xchg
xchg
int
inc
rcll
mov
lahf
je
and
mov
lahf
sub
sbb
sub
sbb
mov
loop
sub
xor
sub
ror
lea
xchg
inc
adc
aas
push
sbb
xor
rolb
cs
adc
pop
mov
negl
sub
and
push
pushf
push
mov
stc
in
rolb
and
mov
jns
xchg
xchg
and
mov
addr16
pop
lock
fldl
mov
pop
pop
xchg
mov
sbb
into
jae
sub
icebp
push
pusha
jb
sub
shrl
push
ss
and
dec
push
mov
xchg
hlt
popa
mov
aaa
shlb
rcrb
jno
inc
cmp
add
jmp
jmp
les
or
or
cmp
cmp
push
mov
push
push
mov
aaa
sbb
cmp
hlt
mov
mov
add
les
lcall
sbb
aam
in
test
lret
mov
jmp
pusha
cmp
or
lock
es
dec
xor
cs
gs
stc
hlt
hlt
and
pop
mov
lret
rorl
and
nop
fdivr
mov
dec
pop
cmc
shl
pop
push
imul
jge
rol
or
in
adc
hlt
add
or
pop
or
mov
je
and
xchg
lea
adcl
dec
push
or
pop
insb
ja
jae
in
into
or
jmp
mov
in
sbb
test
rolb
enter
call
and
fistpl
es
push
les
mov
test
and
fs
in
aad
in
mov
invd
into
push
push
push
sbb
addb
lret
outsb
shlb
sbb
lahf
and
nop
pusha
fisubl
imul
mov
mov
xorl
push
add
je
rcrl
icebp
mov
sub
cld
jecxz
sub
roll
adc
lcall
leave
movsl
rclb
fcomp
mov
cmp
xchg
add
fcmovu
and
addr16
test
ret
rorl
pop
addr16
adc
adc
mov
sub
push
or
nop
aaa
aad
sub
flds
lahf
adc
scas
in
add
mov
popa
clc
in
jl
jecxz
inc
sbb
inc
imul
add
lods
mov
mov
pop
and
or
fcomps
rolb
testb
push
inc
push
call
cmovo
and
nop
or
sbb
les
fnstenv
inc
pushl
leave
and
jmp
push
lds
and
sbb
inc
mov
stos
add
pushf
adcb
mov
xchg
push
push
sbb
cmp
add
sub
mov
lods
push
repz
popa
aam
cltd
push
repnz
clc
add
lods
pop
add
cmpsl
or
jne
xchg
clc
cmpb
add
cmpsl
or
lahf
mov
gs
fildl
ret
sbb
sarb
cmp
push
xlat
mov
pop
fsubs
dec
fsubl
inc
imul
call
cwtl
cmp
stc
andl
and
in
imul
popw
cmp
inc
fmull
call
xor
ror
aad
sbb
sub
sub
mov
jns
and
add
pushf
mov
scas
push
dec
in
push
in
add
aam
pop
sarb
pop
sbb
pusha
out
mov
aam
sahf
dec
adc
mov
in
mov
add
push
lock
xor
xorb
and
mov
sbb
cmp
or
add
fs
or
mov
pop
lock
adc
sarb
mov
mov
enter
sbb
aam
dec
sub
es
mov
adc
shlb
xchg
push
and
cmp
sub
xchg
and
outsb
jns
and
mov
mov
leave
das
mov
incl
mov
sbb
mov
test
bswap
daa
loopne
test
mov
fdiv
mov
cmpsl
mov
in
adc
ds
lods
sub
sub
mov
jns
pop
movsl
inc
fmull
pusha
adc
push
xchg
jbe
mov
mov
fs
jo
adc
ret
adc
mov
sub
sub
hlt
mov
mov
lods
push
aad
pop
push
cld
cmp
in
stos
inc
js
incl
jnp
lcall
add
je
mov
jmp
dec
fistpl
push
cld
lret
dec
pop
lods
je
mov
ss
ficoms
sub
cmp
add
push
lock
cmp
jp
cmpl
adcb
mov
in
dec
adc
movsb
clc
pusha
dec
push
mov
push
push
xor
push
and
stos
inc
add
in
into
push
inc
imul
cmp
or
xchg
dec
push
cmp
jge
sub
sub
movsb
adc
and
jge
jmp
es
out
pop
jbe
scas
testl
js
or
cmpl
push
aam
add
add
add
add
add
adc
or
call
aad
cltd
jno
jo
add
dec
pop
dec
or
jge
jne
push
rorl
dec
loopne
aaa
imul
loopne
cmp
ss
and
lods
xorb
cwtl
jmp
jae
pop
fucomi
cmp
les
les
ljmp
in
push
pushf
mov
xchg
add
push
jmp
or
inc
and
push
mov
std
mov
sub
mov
xchg
bound
mov
sbb
add
test
push
es
jl
aas
push
mov
in
and
cmpl
and
mov
ja
movsb
mov
rorb
mov
sub
shr
push
jae
test
mov
call
add
mov
enter
int3
xor
shr
cmp
mov
rclb
lods
rcll
sar
and
add
jbe
insb
push
adc
or
int3
data16
insl
push
hlt
and
int3
fisubrs
adc
and
adc
push
push
mov
lahf
xchg
push
sbb
cmp
aam
or
mov
mov
add
jmp
mov
or
shrb
jmp
ret
cmovle
jo
pop
or
add
sub
sbb
add
fsubs
push
sub
xor
mov
pop
add
adc
aad
test
xor
or
call
push
repz
pushl
out
push
sti
pop
cmp
lds
cld
je
shr
mov
or
aad
cs
cmpl
push
cltd
sub
push
cld
fdivl
cld
jae
adc
xlat
aas
sub
hlt
in
add
into
in
leave
out
in
mov
hlt
sbb
and
sub
aam
mov
mov
inc
sbb
push
loop
cli
pusha
lock
adc
cmpsb
clc
lahf
jle
or
in
or
or
cmpb
xchg
mov
test
sub
sub
dec
add
andl
shlb
cmp
xchg
int3
rcr
or
fs
cmp
mov
mov
cmp
scas
in
clc
sbb
rolb
loop
jmp
cs
hlt
xchg
sbb
jg
sub
sbb
xchg
and
mov
or
loope
in
std
adc
jns
xchg
test
or
cmp
and
dec
sub
ja
fldt
jle
add
mov
loopne
clc
and
dec
mov
arpl
stos
loop
pop
cmp
aas
stos
loopne
orl
pushf
outsb
sbb
inc
adc
adc
mov
jo
into
cmpsl
push
test
in
test
ficoml
jno
or
jge
mov
lret
cmpsl
dec
cmp
js
test
pop
les
ss
cmp
sub
fs
lods
orl
xor
sub
iret
or
pop
pop
cmpsb
adcl
and
lea
std
mov
insb
out
aas
mov
sbb
adc
int
outsb
pushf
inc
daa
push
stc
add
out
push
ret
adc
mov
add
fnstsw
sbb
loop
sbb
test
inc
push
pop
sbb
in
enter
xchg
test
out
push
loop
xchg
dec
imul
sti
fwait
inc
jne
push
xchg
inc
pop
sbb
test
push
mov
jg
mov
stos
jl
add
or
fdiv
out
xor
adc
adc
push
mov
dec
test
sbb
in
lea
sub
xchg
or
sbb
xchg
jecxz
negl
push
rcrl
ja
int
jb
das
push
cltd
mov
sbb
lahf
add
xchg
xchg
shrl
push
mov
arpl
push
addr16
mov
movsb
pop
sbb
dec
push
adc
das
sub
sbbb
or
je
jno
push
mov
repz
nop
pop
ja
mov
inc
mov
pushf
sbb
xor
sub
jae
mov
lea
xor
push
inc
mov
clc
xchg
pop
inc
out
dec
aam
mov
lret
pop
mov
call
jge
imul
mov
push
cmp
leave
xor
jns
mov
mov
hlt
push
push
inc
lock
mov
stc
sbb
add
xchg
arpl
xor
imul
dec
sbb
les
mov
push
inc
testl
outsl
add
fildl
mov
lahf
orl
cmpb
jne
xor
dec
dec
repz
cwtl
cwtl
sti
jae
mov
in
cmp
test
mov
lahf
jns
add
clc
iret
add
pusha
or
mov
scas
dec
add
push
dec
cmpl
jb
lret
dec
xor
mov
das
les
aas
pop
hlt
mov
mov
in
push
push
data16
mov
repnz
scas
les
int
das
roll
sbb
fadds
int3
jno
jnp
or
sub
js
and
lock
rolb
mov
in
in
add
mov
popf
sahf
or
or
pop
push
mov
insl
gs
push
inc
fdivl
mov
into
data16
mov
ret
scas
int
mov
sub
push
es
jne
cmp
push
mov
pop
or
adc
loop
in
lahf
sub
adc
fs
cmp
jae
push
add
mov
xchg
aas
dec
rcrb
xchg
loope
adc
test
je
mov
mov
mov
mov
sub
sbb
mov
and
mov
mov
or
jnp
popa
clc
les
jl
std
lock
loopne
pop
mov
push
or
scas
lods
sub
dec
lods
lods
add
out
xchg
in
cmpl
cltd
nop
xchg
test
test
push
jb
pop
movsb
test
movsb
push
sbb
push
aad
jg
add
leave
enter
cmp
jns
shll
mov
sbb
pop
pop
mov
push
flds
sbb
arpl
dec
jae
pop
mov
or
popf
scas
mov
fbld
mov
clc
or
push
xor
hlt
xchg
lret
jo
cs
adc
mov
push
mov
xor
jne
mov
in
xor
cld
int
sub
push
stc
adc
pop
sbb
cmp
adc
cltd
arpl
mov
cwtl
dec
xor
or
mov
daa
sbb
mov
xlat
ds
xor
cmpl
mov
test
cs
lret
and
movsl
jb
mov
inc
addl
mov
sub
rcrb
or
in
rorl
cmpl
sbb
int
and
ret
jecxz
xchg
lret
in
in
push
cs
jo
and
fsub
stc
cmp
cmpsl
in
mov
push
or
shlb
mov
loopne
pusha
jns
pop
imul
sahf
push
push
shrl
dec
mov
in
xchg
mov
ret
mov
movsl
sbb
jmp
jns
sbb
dec
pop
xor
inc
clc
cld
test
sub
fdivr
add
sbb
repnz
jo
cwtl
iret
jns
insl
cmp
add
and
add
cld
sub
aad
xchg
adc
xchg
loopne
jae
push
loopne
jle
push
leave
sub
or
fidivrs
je
cwtl
or
jae
cs
shlb
in
loope
push
aam
orl
bound
stos
loopne
pop
jmp
bound
jne
call
enter
add
loopne
sbb
rcl
movsb
out
mov
cld
loopne
xor
sbb
shl
icebp
add
inc
enter
push
imul
rorb
add
push
push
adc
push
enter
cmp
js
enter
xchg
xchg
enter
and
les
lret
enter
es
jmp
sbb
dec
shll
fcmovu
adc
rolb
iret
enter
lret
and
mov
jb
mov
in
mov
outsb
jge
xchg
out
loopne
xlat
cmp
loopne
dec
sub
popa
ret
push
andb
rorl
shll
out
inc
pushf
mov
or
andl
sti
mov
call
div
sub
dec
sbb
jmp
and
jae
fcomp
pop
fmuls
in
adc
mov
and
ss
in
fdivl
jmp
cli
and
rcll
fisubrs
enter
cmp
dec
sub
dec
cs
scas
mov
jnp
add
test
xchg
dec
inc
dec
adc
pop
and
sbb
inc
sub
xor
push
aas
insb
dec
inc
and
ror
sub
test
movsb
das
mov
xor
sbb
and
gs
mov
outsb
test
test
call
push
adc
or
in
add
inc
push
lods
stos
mov
pop
test
or
mov
push
ret
adc
push
xchg
xlat
data16
lahf
push
lods
adc
sbb
sub
je
xchg
lret
and
cld
fucom
add
cmp
clc
jb
push
xorl
cld
hlt
cld
pusha
or
cmc
ja
add
add
jmp
or
pop
adc
adcb
mov
ss
mov
inc
mov
int3
ret
ss
clc
add
xchg
lea
lea
lcall
xchg
loop
push
mov
enter
mov
hlt
jecxz
test
cmp
mov
mov
and
test
mov
lahf
or
je
ss
add
pop
add
aaa
mov
mov
add
aad
pop
mov
sbb
hlt
stc
and
push
jge,pt
push
add
xchg
clc
clc
enter
sbb
jbe
icebp
bound
add
movb
sub
jge
mov
xadd
cli
pop
clc
adc
mov
repnz
inc
flds
mov
lret
sub
cmp
xor
icebp
dec
or
mov
mov
adc
jb,pt
mov
jp
pushf
stos
mov
test
je
insb
or
add
jecxz
lea
in
incb
enter
sub
mov
or
or
mov
mov
cmp
inc
or
pop
and
jnp
popf
xor
xor
and
inc
push
cmpb
sub
js
jbe
or
int3
fistpll
cmp
test
or
xlat
insb
mov
add
or
scas
push
jmp
imul
dec
bound
mov
sbb
add
add
imul
and
jmp
adcl
mov
pusha
arpl
push
iret
shrb
sub
dec
mov
cmp
inc
aam
mov
repnz
movsb
bound
or
push
cmp
dec
push
lods
inc
mov
xor
les
push
dec
inc
cltd
pusha
aaa
in
sub
scas
js
psraw
sbb
inc
push
cmp
test
inc
jge
std
shlb
jmp
cmpsl
xor
pop
cli
pop
jle
roll
stos
mov
mov
or
push
add
sahf
xchg
sbb
jbe
adc
and
fs
xchg
xchg
pusha
cmp
aaa
repnz
sbb
insb
ret
add
xor
dec
das
lret
test
in
mov
fs
lods
imul
cmpl
andl
repz
dec
mov
and
in
je
mov
fs
inc
cmp
inc
mov
cwtl
dec
or
push
adc
mov
cmpsl
push
outsb
push
mull
cmp
add
mov
lret
pop
inc
and
ja
andl
or
aad
mov
dec
mov
jne
or
dec
push
movsb
subl
adc
xchg
mov
adcl
push
subb
xchg
andl
lret
test
pop
xchg
test
xor
push
movsb
mov
dec
stos
in
sub
xchg
je
addb
adc
sub
pop
sub
pop
add
inc
push
dec
gs
mov
testl
inc
mov
jns
inc
mov
jmp
iret
pop
xchg
subl
pop
add
pusha
add
rcl
roll
add
loopne
pusha
cmp
cmpsl
pop
push
leave
and
imul
jae
fs
push
xor
adc
ja
and
jae
sub
add
pop
add
out
mov
xchg
push
cmpsb
mov
pop
sbbb
push
xchg
aaa
jge
add
push
or
xchg
sbb
dec
dec
shlb
dec
push
aam
pop
decl
adc
inc
rcrl
arpl
pop
pop
push
inc
cs
daa
fs
pop
clc
xchg
dec
cmp
shl
dec
or
push
xchg
push
mov
addb
les
movsb
rorl
jnp
lea
inc
jo
testl
into
and
pushf
jecxz
add
test
jg
cwtl
nop
andb
ret
add
and
mov
pop
pop
sub
and
jne
cmp
xor
and
and
je
sbb
mov
dec
jb
popa
sar
pop
rol
in
push
xchg
xchg
clc
xor
push
stos
inc
ret
dec
mov
shrb
jp
enter
dec
adcl
dec
sbb
add
pop
mov
push
insl
sbb
inc
mov
sti
fmuls
add
loope
or
call
mov
sbb
pop
push
cmp
loop
test
sbb
cmp
std
pop
loop
pushf
pushf
xor
pop
nop
int
inc
mov
repnz
std
adc
add
or
rorb
xchg
stc
enter
adc
movsl
xchg
mov
lods
lock
pop
xor
cmp
adc
fldl
pop
cmpsb
in
sub
enter
fs
mov
dec
fucom
push
mov
push
sbb
test
sbb
nop
mov
test
xchg
loope
out
add
lods
ret
inc
mov
imul
adc
pop
je
adc
dec
pop
cmp
popa
jo
sub
or
cld
aad
adc
outsl
jb
push
mov
jecxz
xor
dec
push
xchg
mov
pop
into
repz
jecxz
jp
sti
xchg
cmp
dec
add
adc
push
fstps
or
dec
sahf
cmpsb
in
add
movsl
xor
pop
pop
shlb
adc
pop
adc
lahf
nop
dec
cwtl
inc
mov
fadd
adc
add
mov
sbb
pop
push
fstl
mov
mov
cmp
sub
pusha
or
pop
push
pop
lret
test
nop
iret
pop
or
mov
push
mov
push
mov
in
ljmp
mov
movsl
in
inc
fmull
sbb
sub
xchg
pop
sbb
jmp
cmc
mov
les
or
lods
daa
dec
lods
insb
xor
mov
in
sbb
jno
test
in
push
test
js
and
cmp
insb
ss
mov
add
sub
sbb
lods
mov
lea
lea
push
lea
dec
outsb
mov
aam
mov
mov
push
xchg
sbb
jno
dec
lea
lcall
es
push
sbb
pop
lods
mov
leave
movsl
xchg
lods
aas
js
movsl
pop
push
test
push
inc
mov
outsl
les
adc
sub
int3
movsl
fwait
xchg
test
xchg
cmp
fiaddl
or
dec
rolb
mov
or
aas
push
sub
inc
test
addr16
and
lock
addl
lds
mov
mov
insb
cmc
outsb
mov
xchg
push
cmp
repz
jno
out
xchg
adcl
xor
or
fs
or
add
jb
rolb
aam
popa
sub
or
mov
jo
test
aas
pop
jmp
fisubrs
adc
jnp
popf
repnz
push
orb
in
pop
jo
or
cmp
pop
pusha
in
add
jae
dec
xor
inc
fists
push
pusha
jo
xor
mov
mov
iret
dec
pusha
fsts
mov
pop
shl
jo
xor
jmp
cli
clc
add
add
pop
test
cltd
pop
push
push
mov
add
leave
inc
add
pop
test
movsl
or
add
shl
sbb
or
out
push
jecxz
ja
sbb
popf
popa
sbb
addb
popa
data16
ss
stos
sub
inc
pop
dec
push
in
pop
dec
or
fnstsw
push
shl
rcr
xchg
add
and
enter
movsb
add
cmp
add
ret
insb
cli
xor
adc
xchg
pop
cmp
outsl
and
cmpl
push
xor
cmp
push
pop
adc
pusha
push
mov
add
adc
or
jl
pop
enter
fwait
movsl
movsb
jecxz
mov
xchg
mov
and
aas
in
cli
add
cld
test
push
stc
sbb
stos
scas
int3
std
movsb
jb
or
pusha
mov
mov
cld
or
rorl
ret
xor
pusha
xor
push
arpl
inc
insb
cmpsb
pop
sbb
jo
mov
cmp
push
scas
add
push
fwait
mov
xor
movsb
pop
mov
add
pop
mov
jp
sub
add
clc
cld
pop
jo
dec
sbb
mov
in
int3
mov
dec
or
push
test
daa
push
lods
inc
cltd
sbb
rorb
aam
sub
in
jbe
push
rolb
addl
sub
push
test
jge
mov
cmp
xor
mov
mov
popf
fsubrs
mov
jb
nop
push
xchg
push
push
push
lcall
sub
mov
jmp
popf
sbb
add
aam
push
xchg
mov
mov
test
mov
fstpt
push
add
sub
dec
mov
fcomps
pusha
cld
lods
and
mov
iret
lret
test
subb
sub
inc
and
push
adc
mov
arpl
add
movsb
xor
xor
bnd
ds
and
adc
and
jmp
fimuls
dec
mov
dec
aam
aas
bound
sahf
lock
add
xorl
nop
arpl
xor
fisubrs
imul
rol
mov
dec
addr16
test
sub
popa
mov
mov
sarl
aad
fisttpll
mov
xor
movsb
rcll
aas
add
push
xorb
sub
sbb
pop
jne
fcoml
ja
shrb
sbb
roll
or
inc
lods
pop
shlb
fidivrl
xorl
jge
dec
and
daa
and
rol
push
add
adc
mov
enter
mov
loop
lret
add
ja
sbb
mov
mov
add
mov
xor
cmc
fwait
or
add
pop
add
cld
inc
mov
cs
xor
pop
adc
mov
pop
shll
cmp
and
mov
insl
xor
push
xchg
lret
mov
xor
pop
xorl
lret
shlb
shl
mov
pop
jnp
add
mov
add
mov
fbld
sbb
rorb
mov
jno
cmp
xlat
xlat
inc
loopne
sbb
dec
push
dec
repnz
andb
rcrb
mov
inc
and
and
inc
push
jns
adc
push
sub
aaa
popa
sub
inc
mov
and
dec
shlb
pop
lea
push
mov
mov
sbb
xchg
mov
ss
pop
add
mov
cmp
and
outsl
adc
xchg
movsb
mov
adc
push
shll
inc
cmpsb
pop
xchg
jne
loopne
xchg
xchg
sub
dec
cmp
push
push
pop
cmc
popa
mov
sub
dec
and
pop
pop
xchg
es
iret
sbb
or
xchg
jg
call
pop
repz
int
inc
in
mov
mov
das
pop
pushf
hlt
insb
arpl
je
imul
xor
nop
arpl
mov
cmp
in
adc
dec
adc
dec
adc
cwtl
xchg
mov
pop
imul
dec
std
stos
cmp
jl
pop
add
dec
lods
and
push
xchg
fnstsw
out
pushf
cli
adc
jo
xor
sbb
mov
adc
xchg
ud2
das
sub
loopne
pop
sbb
nop
push
enter
mul
popa
lea
dec
xor
mov
mov
je
jnp
pop
icebp
push
popf
inc
sub
fisttpll
jno
sbb
pop
jne
sbb
dec
sbb
add
dec
dec
jae
add
jnp
fadds
loopne
mov
or
test
inc
lret
clc
pop
sti
gs
cmp
aam
mov
enter
bound
adc
icebp
add
pop
jno
in
loopne
push
lods
movsb
aad
xor
test
push
cmp
mov
push
pop
or
add
test
imul
fsts
out
pop
push
sar
jmp
sub
cmp
inc
dec
add
test
lods
in
roll
inc
cmp
add
ret
jo
mov
cmpsl
enter
dec
cmp
xlat
jae
out
lds
add
aad
inc
lea
push
test
push
inc
add
pop
pop
xchg
imul
sbb
push
xor
nop
push
rolb
addb
mov
js
mov
les
push
jl
out
cld
push
dec
mov
or
xor
dec
cmpsb
jl
or
iret
push
into
ficoms
out
je
insb
adc
insb
dec
shll
repz
adcl
insb
clc
sub
xchg
add
jae
inc
add
in
jecxz
cmpsb
mov
sbb
adc
xlat
dec
add
dec
ja
xor
cmc
iret
cmp
push
mov
ljmp
sbb
mov
mov
imul
add
adc
lea
mov
test
pop
push
ret
pusha
adc
sbb
pushf
rorb
mov
dec
mov
dec
and
jmp
mov
popa
mov
sub
jb
adc
test
and
add
dec
out
sbb
xchg
fistl
add
faddl
push
add
test
call
popa
and
rcrb
fs
test
inc
jo
push
pop
mov
xor
and
mov
notl
test
mov
adcl
test
pop
rorb
pop
inc
cltd
add
loope
mov
xor
fdivr
adc
cmp
nop
cmp
cld
and
inc
addl
shr
add
out
inc
push
adc
jne
movsb
insb
movsl
ss
stos
repz
jge
outsl
cld
cld
push
or
adc
sbb
sbb
clc
clc
and
sub
repz
dec
mov
add
repnz
nop
pop
inc
push
sahf
push
push
fists
inc
fisubs
or
dec
push
hlt
xor
hlt
adc
inc
test
lret
aad
lcall
pop
nop
clc
out
jge
add
jne
lea
rsqrtps
adc
pop
sub
mov
mov
add
adc
out
add
and
pop
shrl
test
dec
dec
shrl
mov
xor
or
imul
jno
add
or
loope
adc
xchg
and
shlb
imul
clc
andb
or
cmpsb
sub
je
mov
loope
mov
dec
or
and
movsb
fnstsw
push
add
dec
out
or
test
add
xor
rclb
or
push
mov
mov
fidivrl
jne
mov
mov
fdivl
add
sbb
js
insb
out
add
std
jge
xor
mov
outsl
mov
adc
pop
adc
rcrl
fs
cmc
mov
mov
fdivs
test
hlt
or
lahf
sbb
sub
cmpl
mov
movzbl
jo
cli
jmp
push
xchg
push
jge
push
movsb
mov
adc
inc
dec
or
jl
enter
push
inc
or
xorb
loope
jecxz
dec
lock
ja
out
adc
or
jge
ja
iret
out
add
add
je
jmp
or
adc
or
bound
mov
lds
inc
ljmp
shll
sbb
jo
or
iret
dec
dec
inc
mov
lock
cmp
or
mov
or
or
add
shll
xor
push
jp
pushf
movsb
daa
ja
xlat
push
jp
jne
hlt
jecxz
mov
imul
push
and
test
fildl
push
cmc
or
mulb
add
pop
out
or
in
int
add
push
dec
sti
push
cmpsb
push
mov
push
xchg
je
sbbb
lahf
pop
loope
add
jg
xchg
sub
andl
and
add
int3
xchg
add
fldcw
or
sub
inc
pop
in
stos
lahf
add
lea
cli
sahf
xchg
adcl
pop
mov
xchg
dec
mov
cs
xor
test
adc
jno
xchg
adc
test
xchg
cs
int3
lods
in
sbb
rorb
int
test
cmpsb
fsubrl
lret
cmpb
dec
push
lock
stos
push
jmp
cld
push
hlt
add
cmpsl
bnd
adc
sub
add
in
or
cmp
les
push
mov
cmpsb
shll
adc
push
push
shll
or
push
fdivr
call
movsb
jl
pushf
jge
push
jl
mov
fadd
mov
cmp
movsb
fcoml
movb
mov
pop
int3
or
fdivrl
add
push
jp
xchg
mov
hlt
mov
push
inc
pop
cmp
call
xchg
pop
add
jmp
push
outsl
xchg
adc
ret
jg
jmp
push
js
in
xor
add
xchg
xchg
jg
lock
out
leave
add
or
dec
sbb
mov
sub
or
sub
shl
xchg
push
pop
fs
prefetcht1
loop
outsb
fdivrs
sub
xor
pop
add
pop
pop
or
mov
pop
js
xor
imul
int3
mov
push
mov
jmp
xor
sahf
add
sbb
mov
cmp
push
ficompl
sub
mov
adcl
mov
pop
aad
add
shll
std
pcmpgtd
dec
cmp
push
inc
add
adc
add
stc
mov
xlat
divl
and
add
adc
sub
mov
mov
test
jl
mov
test
loop
or
je
mov
inc
shrb
rorl
outsb
adc
mov
adc
jbe
jbe,pt
push
jge
and
pop
pusha
xchg
mov
dec
sbb
mov
lds
mov
ss
add
mov
and
push
cmpsb
shll
sbb
sbb
popf
test
cmp
xor
stc
or
sbb
add
aad
sbb
cwtl
insb
cltd
popf
insb
daa
pop
les
je
ficompl
shlb
scas
add
pop
daa
mov
lods
jecxz
xchg
adc
and
loopne
rorl
in
popf
aam
jmp
push
jl
add
and
dec
cmp
inc
cmpsb
sbb
add
cmp
push
jg
sbb
xchg
adc
std
or
adc
lahf
loope
xchg
or
or
ret
add
adc
movsl
push
hlt
dec
mov
dec
nop
int3
int3
sti
dec
daa
xchg
fiadds
test
xchg
andl
push
xchg
test
push
pop
and
jle
cmp
push
adc
fsubs
mov
sbb
arpl
es
subl
jl
and
push
jmp
push
and
popf
xchg
push
pop
lahf
popa
scas
mov
cmp
and
sbb
mov
imul
cmp
daa
icebp
mov
les
mov
xor
or
mov
jmp
push
pusha
cmp
push
ret
jmp
add
loope
nop
pop
xchg
mov
push
in
sarl
push
xchg
unpcklps
imul
xchg
jb
imul
add
test
mov
xchg
add
add
add
xchg
mull
push
pop
or
adc
or
add
or
loope
dec
insb
add
adc
lock
jbe
je
add
xor
out
fisttpll
pushl
xor
xchg
inc
push
popf
jl
negb
js
loope
or
inc
mov
pause
mov
and
stc
jns
sbb
lods
adc
and
in
xchg
dec
xchg
cltd
mov
add
mov
mov
sub
in
repnz
add
jmp
add
push
or
mov
rorl
enter
mov
xor
cld
es
jo
loop
cwtl
ficoml
dec
lret
xor
jb
repnz
cmp
sbb
pop
sub
cltd
push
jl
jne
call
fs
xchg
cmpsb
je,pn
mov
or
mov
adc
dec
lcall
add
jo
cmp
jne
test
mov
cs
in
pop
fadds
divl
in
and
and
popf
or
pop
jg
fimull
add
loope
rorb
out
push
pop
pop
xchg
in
lahf
mov
adc
lea
dec
jno
jmp
lcall
rsm
add
imul
jo
or
sbb
or
jl
mov
add
fdivr
addl
push
fmuls
mov
cwtl
mov
sbb
sti
scas
cmp
pusha
sbb
in
repnz
adc
jns
mov
xor
xor
xor
xchg
je
sub
lret
repz
push
sbb
sub
and
inc
mov
xor
mov
mov
stc
add
insl
es
cs
dec
loope
adc
enter
imul
lea
sahf
jbe
and
or
xor
dec
pop
or
xchg
cmpsb
cltd
mov
cmpsl
or
jl
sbb
loopne
fadds
mov
mov
push
push
xor
stos
loop
mov
gs
adc
inc
mov
loopne
mov
push
sbb
stc
js
add
in
jbe
ljmp
jbe
jmp
sbb
test
lods
mov
or
xorb
cmp
rcrl
adc
xchg
sti
jmp
push
mov
mov
movsb
imul
mov
sub
loop
dec
movl
push
pop
cmp
jne
jmp
adc
sub
or
lcall
idivb
je
add
push
push
or
cwtl
jl
jmp
sbb
lret
pop
xchg
push
sbb
push
arpl
int
mov
xchg
int3
and
adc
lods
and
movlps
push
add
jg
mov
popa
ret
push
pusha
popa
movsb
add
xor
bound
stc
add
lcall
pushf
pop
movsb
cmp
adc
or
or
or
xchg
pop
jne
push
xchg
add
fldenv
pop
adc
and
or
aaa
jmp
sarl
push
rorb
sbb
fdivp
cli
adc
inc
das
or
mov
mov
add
or
and
xchg
loope
push
or
xchg
fstpt
jbe
loope
neg
sbb
push
mov
enter
or
in
lods
inc
cmpsl
call
add
adc
cwtl
int3
or
add
jns
clc
mov
int3
or
or
cmpsl
add
fsubrs
shrl
push
jno
lret
add
sbb
dec
test
inc
xor
or
fwait
std
dec
cmp
cmp
pushf
inc
add
stc
cmp
cmpsl
push
sub
js
setge
sti
sub
pop
add
add
add
inc
pop
or
jo
test
lock
cmp
mov
mov
and
xchg
xor
jne
fdivr
add
cmp
cmp
lods
into
mov
enter
mov
insl
mov
mov
out
cld
jmp
add
jo
xchg
and
adc
cmp
sti
clc
push
xchg
push
and
sub
je
insb
pop
fdivl
sbb
lds
js
cs
clc
push
push
xchg
loopne
fiaddl
adc
xchg
sbb
pop
sub
fwait
adc
push
jl
in
out
imul
add
jae
dec
pop
cmp
pop
lds
xchg
xchg
push
out
int3
cs
cli
add
cmp
dec
test
jne
inc
addl
cli
mov
leave
add
out
or
add
push
sub
scas
lock
rolb
cmp
insl
xor
lret
gs
hlt
mov
or
jns
test
or
pop
clc
lahf
dec
in
lock
mov
fdivrl
js
mov
adc
jle
pop
gs
mov
mov
shll
orl
lret
mov
push
sub
cmp
pop
jne
ds
aad
loop
adc
push
movsl
cmc
add
popa
add
inc
inc
or
leave
stos
lock
lock
in
adc
pop
inc
mov
hlt
cmp
icebp
add
sbb
or
les
cmp
xor
inc
xchg
aaa
push
lock
inc
hlt
push
std
pop
repnz
lock
popa
pop
mov
adc
test
mov
or
pop
dec
jmp
aaa
sbb
stos
push
test
inc
or
pop
mov
clc
jne
push
or
sub
icebp
aad
adcl
sub
push
addl
clc
ss
add
add
movsb
jl
js
mov
mov
push
cmp
jp
sub
push
sbb
jae
rorl
sub
and
mov
bnd
stos
add
mov
jmp
adc
xchg
sarb
add
pop
pusha
or
jmp
faddp
adc
adc
add
or
shlb
mov
pusha
sub
lock
push
outsl
push
add
into
call
cmp
int
loope
sbb
xchg
ss
xor
mov
add
xor
pop
cs
je
dec
mov
aas
pushf
add
enter
mov
cwtl
mov
loope
arpl
add
and
mov
and
cmp
or
lds
sbb
mov
arpl
aam
jo
mov
pop
dec
mov
cld
dec
push
xor
loopne
nop
sub
mov
or
cld
ljmp
sub
xchg
push
sbb
jb
add
mov
fs
lcall
fcoms
ja
or
dec
call
mov
enter
push
and
out
and
push
mov
dec
test
push
push
scas
in
scas
in
insl
ficompl
or
adc
popa
mov
adc
hlt
cmp
jne
and
xor
ret
clc
icebp
inc
loopne
xchg
xor
adc
add
ret
sub
jg
movsb
sub
or
pop
cmp
cmpl
xchg
pop
or
sub
or
sub
mov
cld
jp
movsb
shlb
leave
sti
and
xchg
jmp
or
mov
lea
scas
xor
data16
adc
add
jl
mov
or
xor
aas
or
pop
mov
cmp
inc
jbe
mov
or
je
adc
test
sub
sbbl
pusha
jo
push
out
pusha
out
movsb
push
push
or
push
popa
dec
mov
sub
pop
jo
call
div
add
adc
add
add
mov
dec
jo
rolb
pop
inc
sbb
jne
mov
or
insb
sarl
ljmp
jb
mov
mov
js
jmp
clc
or
lock
je
or
push
sbb
stos
push
gs
xor
adc
add
stc
cmp
iret
push
add
cld
data16
popf
movsb
lret
sti
xchg
or
lahf
lock
out
dec
sub
add
mov
pop
mov
sahf
inc
add
cld
or
arpl
scas
and
dec
sub
mov
in
lea
in
hlt
je
add
std
imul
jae
aas
shrl
push
inc
test
push
inc
cld
lea
cmp
push
bound
cld
imul
daa
or
jge
push
xchg
mov
dec
test
inc
scas
add
mov
adcl
add
test
adc
push
and
adc
dec
sbb
inc
in
vsqrtsd
inc
add
les
mov
or
inc
test
in
sub
test
call
loopne
mov
or
add
call
jmp
test
push
fldt
cmp
and
ror
jmp
or
or
std
push
xchg
aaa
adc
call
adc
push
out
ret
jne
out
cmp
mov
fs
test
inc
push
inc
das
push
pop
pop
mov
lds
push
dec
dec
pop
daa
inc
and
out
mov
pop
pop
add
pushf
cwtl
jle
adc
or
sbb
and
or
add
es
jmp
cmp
inc
add
push
xor
adc
xor
cmp
mov
imul
mov
or
xchg
mov
pop
and
sbb
jl
mov
sub
xor
push
jbe
and
adc
dec
adc
push
add
insl
insl
int3
mov
addb
jge
js
add
shrl
mov
push
enter
pusha
push
mov
loopne
clc
pop
cmp
xchg
arpl
fadd
jb
sbb
pop
js
das
clc
jne
lahf
cmp
xchg
pop
test
xor
pop
adc
add
mov
lret
and
stos
insb
cmpsb
push
jecxz
cmp
shlb
lods
inc
in
sub
jb
push
xor
and
push
icebp
adc
dec
dec
sbb
add
jmp
xlat
push
loopne
add
push
push
sbb
xchg
xchg
sahf
xchg
inc
mov
ljmp
xchg
push
in
pop
faddl
inc
out
jb
call
jne
sbb
or
sbbl
mov
jns
xchg
xchg
mov
pusha
and
outsb
or
or
rorl
mov
and
push
dec
mov
adc
pop
repnz
ss
lods
dec
test
fld1
mov
rorb
std
rcr
dec
xor
mov
ja
xchg
jnp
or
imul
jne
or
nop
repnz
or
cmp
xchg
or
jnp
fistl
or
mov
push
adcb
pop
lea
inc
mov
add
pusha
push
cmp
sub
cmpsl
mov
addl
adc
pop
push
or
mov
inc
clc
xor
push
xchg
nop
and
push
pusha
sbb
xor
inc
dec
and
xchg
or
test
test
cli
fisttpll
jbe
ret
adc
addr16
cmp
inc
or
mov
jecxz
mov
ljmp
test
test
in
cwtl
cmp
shr
xchg
out
xor
push
int3
mov
test
inc
loopne
sbb
test
bswap
xor
dec
push
jmp
jbe
pop
es
mov
cmp
pop
add
in
add
push
sarl
sbb
adc
ljmp
fisubrl
xchg
lea
insl
add
dec
jge
insb
push
jo
pop
insb
insb
push
and
push
jbe
dec
jmp
sub
mov
fsubp
jne
dec
xlat
in
addr16
neg
mov
mov
lds
movsl
add
mov
shl
push
or
push
pop
dec
xchg
dec
movsl
out
fsub
xor
add
add
movl
stc
clc
xor
repnz
push
push
call
shlb
dec
dec
insb
shr
aam
add
popa
add
stos
mov
imul
ret
add
fdivs
test
stos
pop
cli
dec
or
arpl
inc
pop
fadds
daa
fidivs
push
push
shll
dec
repz
fildl
lea
flds
xor
pop
fsubr
sbb
or
inc
cmp
stos
sub
xchg
lret
jmp
mov
sub
lcall
hlt
cmp
sbb
popa
cmpsl
imul
rcll
add
mov
ret
dec
sbb
jp
mov
jb
outsl
jmp
ja
xor
cmp
and
mov
mov
pop
xchg
mov
fcoms
mov
les
inc
repnz
jne,pn
daa
dec
jne
dec
enter
jne
adc
mov
add
orb
aaa
cwtl
pop
adc
adc
loopne
cmp
jge
mov
cmp
out
sbb
fsubr
push
mov
insl
popf
shlb
jae
dec
and
push
test
in
inc
add
push
movsb
push
ficompl
push
movsl
pop
fldt
movsb
mov
sub
cmp
popa
adc
push
push
or
xchg
call
fcmovb
lea
mov
push
sbb
in
pop
aad
push
push
sbb
mov
das
mov
mov
cmpsl
das
push
pop
or
mov
push
adc
adc
jecxz
movsb
add
add
mov
popa
xor
xorl
sub
sub
mov
arpl
mov
mov
mov
sbb
cmp
fldl
dec
lret
dec
icebp
out
je,pn
or
je
cmp
cmp
pop
add
adc
hlt
shlb
leave
jmp
cs
push
add
lahf
test
push
mov
or
xor
sldt
push
test
je
in
lock
ljmp
in
mov
aad
and
sbb
lcall
and
cs
inc
enter
jp
xchg
pop
add
push
add
xor
mov
ds
movsb
jp
lcall
pop
dec
mov
add
mov
gs
or
push
pop
jmp
mov
in
mov
sbb
addb
sub
add
rol
fnstcw
mov
movsl
outsl
ret
dec
mov
nop
js
insl
add
push
jno
inc
cwtl
inc
sbb
ja
test
push
push
adc
dec
mov
call
cld
ja
pusha
iret
scas
sbb
jl
subb
mov
inc
lock
push
fdivrs
hlt
mov
sub
cmc
xchg
les
adc
dec
leave
fdiv
hlt
jns
xchg
xchg
clc
or
push
cmp
push
sti
jnp
push
jb
dec
xchg
in
sbb
xorb
and
mov
insl
enter
mov
or
imul
mov
out
dec
cmp
sti
mov
outsl
fcmovne
inc
leave
push
jns
adcb
jo
xor
inc
mov
or
mov
aaa
xchg
xchg
mov
lea
add
or
loop
add
in
sbb
mov
pushf
dec
in
or
sub
test
cmpsb
int3
sbb
push
in
mov
inc
sub
hlt
mov
adc
jmp
pop
xchg
test
inc
je
add
push
aad
lock
mov
dec
and
push
test
jl
and
push
dec
adc
movsb
es
push
fs
jo
xor
mov
adc
xchg
xor
clc
lods
mov
or
mov
sahf
pushf
dec
jnp
xchg
xor
mov
imul
fs
lcall
pop
enter
push
stc
mov
xchg
or
and
mov
push
fisubrl
aas
push
popa
pop
in
inc
pop
sti
cmp
jns
andb
imul
pop
mov
repnz
pop
jle
je
mov
das
mov
fmuls
xchg
jmp
pop
mov
cs
mov
sbb
into
jo
xchg
and
imul
pop
out
mov
xchg
dec
jae
aaa
sub
das
or
sub
inc
sbb
insl
xor
dec
push
cmp
xlat
adc
pop
or
mov
jns
or
or
and
or
daa
jne
xchg
dec
mov
bound
jecxz
shl
mov
inc
jg
push
pop
jle
pop
adc
cmpl
xor
inc
inc
jmp
stos
cmp
test
call
push
inc
mov
out
aaa
cmp
push
xchg
outsl
hlt
adc
push
aaa
or
loop
sbb
loopne
sub
cltd
ret
rcrl
lock
xadd
mov
push
adc
add
push
test
or
stos
jg
fwait
popf
mov
fdiv
and
lock
lret
xchg
lock
pop
insb
sub
loopne
adc
cmp
jl
fld
mov
outsb
push
in
mov
andb
fadds
loop
jo
add
jle
adc
mov
dec
adc
pop
mov
jbe
pop
imul
hlt
shr
jb
dec
jae
xor
inc
jl
and
pop
into
adc
test
jg
fcoms
cmp
dec
arpl
das
cld
popa
cld
cmp
push
test
pop
push
js
popa
rol
jmp
sti
imul
and
dec
xchg
jecxz
mov
cld
xor
pop
call
inc
cmp
pop
nop
bound
decb
xchg
rorb
and
jno
add
vpunpckhbw
push
jmp
insb
inc
mov
or
loopne
mov
daa
pop
cmp
fsubrl
ret
xchg
xor
rorb
mov
jbe
std
xor
mov
jno
sub
or
sub
hlt
jb
scas
jge
leave
test
add
adc
push
pop
jne
jae
jmp
add
add
lcall
mov
xchg
cmpsb
and
lods
nop
daa
ja
sub
clc
push
pusha
push
add
push
jne
sub
pop
jmp
cmc
and
push
in
fsubr
es
hlt
out
push
xchg
xchg
sub
movsb
outsl
dec
cld
pusha
mov
xor
jne
mov
add
cld
push
jg
cmp
adc
sbb
cld
je
jp
inc
fst
sub
or
jl
aas
clc
xchg
les
pop
sbb
lret
lods
add
pop
fs
insb
cmp
sbb
push
pop
adc
jno
jge
push
je
adc
rcr
inc
add
pop
adc
xor
dec
and
cmp
push
mov
notl
hlt
and
hlt
add
jge
hlt
push
jle
push
jmp
je
pop
mov
jnp
xor
dec
sbb
testl
dec
pusha
fmull
js
and
out
jo
dec
cs
add
stc
addr16
dec
ljmp
or
jns
xor
int
xchg
call
cld
scas
and
push
stos
test
mov
jecxz
push
or
mov
fxch
xor
jmp
mov
push
jg
stos
adc
or
in
or
rorl
dec
add
sar
jns
pusha
push
jbe
add
add
add
test
inc
dec
ja
mov
cmp
fs
jp
subb
mov
add
mov
xchg
in
stc
outsb
inc
inc
add
push
mov
rcrl
mov
mov
mov
jnp
xchg
push
pop
je
mov
and
aaa
shrl
mov
xor
pop
sub
arpl
sub
gs
xor
repz
xchg
add
and
cmp
aam
aas
lret
or
xor
cmp
adc
sbb
fdivrs
rclb
cmpsl
sub
inc
rorl
jp
mov
jmp
jg
sbb
jnp
scas
push
iret
pop
mov
or
or
push
dec
out
mov
insl
test
push
sub
iret
pop
insl
sahf
sub
lret
push
inc
movups
addb
inc
pop
bound
mov
push
shl
push
jns
int3
add
cld
mov
daa
adc
or
jge
jne
jo
lsl
jle
lea
or
cmp
stos
cmp
xchg
andb
push
fadd
inc
and
adc
or
incl
push
aam
lret
in
or
jb
shrl
inc
in
test
sbb
dec
or
inc
or
add
mov
ret
mov
fimull
das
and
mov
gs
xchg
push
mov
pushf
sbb
dec
ss
mov
scas
test
mov
xor
inc
aas
movsl
mov
stc
fldl
jns
fiaddl
fdivs
ret
or
inc
add
shl
push
add
jb
and
mov
add
je
add
adc
ret
mov
lcall
pop
adc
mulb
push
orl
repz
xchg
je
ret
rcl
adc
loop
adc
mov
aaa
pop
mov
inc
jo
xchg
push
cmpsl
imul
dec
and
or
sti
inc
icebp
mov
sbbb
pop
mov
and
or
pop
mov
lock
sub
sbb
push
push
and
adc
mov
fists
and
xchg
or
xor
push
push
and
nop
rcrb
les
loopne
jae
iret
loopne
pop
dec
add
les
dec
and
sub
xor
lock
cmp
mov
mov
outsb
lods
cmp
lret
mov
sbb
cmp
mov
xchg
adcb
and
lock
and
jo
mov
add
mov
sub
pushf
add
out
test
add
lcall
cmp
pop
aam
call
out
add
mov
xor
movl
shl
adc
sub
and
inc
or
fwait
inc
loopne
das
inc
sub
push
cmp
dec
gs
pop
cmp
cmp
add
icebp
sbb
lahf
sarb
push
lea
sub
cmpsb
mov
xchg
test
mov
pop
sbb
jmp
mov
add
jg
arpl
out
push
or
pop
ret
mov
loopne
dec
fistpll
lcall
add
xor
jo
cmpsb
ss
aaa
clc
mov
dec
stos
ret
outsl
add
inc
cmp
mov
sbbb
jb
and
stc
hlt
sub
nop
add
mov
adc
cmp
push
pop
enter
jmp
dec
repz
orb
sbb
cld
or
push
test
sbb
out
mov
inc
pusha
test
fst
imul
push
stc
or
push
xor
and
in
cmp
push
or
push
loopne
cmp
pop
cs
or
shlb
out
add
ss
ret
loopne
and
jne
int3
push
push
les
sub
mov
and
test
or
push
dec
mov
test
push
and
mov
dec
sub
test
orl
adc
add
ss
lret
movsb
mov
cmp
imul
daa
std
fdivr
lcall
cmp
adc
cmp
mov
es
inc
cmp
or
clc
jmp
sahf
imul
and
cld
mov
lea
fcompl
jne
mov
cmp
pop
repnz
jne
push
push
pop
xchg
push
enter
or
or
cmp
jmp
push
les
in
addb
sub
movsl
push
dec
scas
jae
aad
sbb
push
jecxz
sub
push
shrl
and
sbb
int3
call
xorb
pop
loopne
push
pushf
push
push
jne
mov
pop
xchg
add
xor
push
mov
inc
xchg
pop
call
push
int
cmpl
xchg
les
adc
nop
xchg
arpl
mov
sub
adc
test
data16
and
add
daa
cmp
push
fnstenv
push
mov
push
arpl
stos
movsl
cltd
data16
loopne
mov
add
pop
sub
cmp
inc
cvtdq2ps
mov
mov
lcall
sbb
lods
hlt
iret
lcall
in
lahf
xor
xchg
and
xchg
mov
mov
ds
adc
inc
loopne
pop
adcb
push
lret
adc
inc
dec
cmpsl
loop
std
adcb
sahf
dec
push
pop
push
iret
pop
jg
lds
cmp
rclb
lret
rclb
or
dec
jecxz
in
shlb
mov
push
push
sbb
sahf
sub
dec
jg
sbb
sbb
inc
cmpsl
lods
or
jg
repnz
jg
in
xor
test
add
and
ja
add
jl
push
in
les
movl
dec
add
inc
sub
inc
fnstsw
inc
adc
xchg
jmp
pop
scas
sbb
jnp
adc
add
jl
add
int
xlat
lods
adc
xor
lock
jg
imul
movzwl
mov
fstpl
add
aas
mov
adc
test
adc
push
adc
or
movl
and
je
push
adc
push
pop
jp
adc
insb
mov
push
jne
mov
out
shrl
imul
add
out
jbe
cltd
sub
mov
sar
stos
adc
clc
sub
pop
dec
lods
enter
jne
lock
jecxz
xor
fdivl
pop
push
add
in
sub
mov
cmpsl
sub
sub
push
decl
jnp
mov
mov
or
and
lea
insb
outsb
gs
outsl
sub
inc
jno
or
add
das
outsb
lret
or
outsl
or
dec
xchg
inc
and
in
mov
enter
adc
fsubs
sub
movsb
dec
shlb
xchg
fisubl
or
dec
mov
mov
test
and
lods
test
mov
addb
pushf
mov
pushf
sub
or
add
jb
call
insl
mov
dec
mov
stos
xor
add
jne
sbb
test
inc
dec
and
or
in
jmp
mov
movsl
cltd
stos
stc
pop
rorb
adc
je
jmp
sub
adc
adc
jecxz
or
sub
jne
loope
inc
aaa
add
or
push
js
push
sbb
fnstenv
pop
add
and
je
jl
enter
xor
sub
lock
adcb
sub
neg
stc
cltd
mov
pop
inc
ss
ja
sub
outsl
shlb
into
aas
sbb
push
shlb
pop
out
lea
ljmp
imul
pop
add
mov
push
fdivr
outsl
xor
mov
inc
pop
js
pop
xorl
push
xor
pop
sbb
push
mov
insb
mov
ret
mov
pop
xchg
push
adc
mov
push
add
andb
clc
sub
sbb
sub
xor
frstor
nop
shrl
test
pop
mov
pop
mov
test
loopne
or
test
lock
xchg
cmp
xor
loopne
lods
cmpb
movsl
xor
mov
push
mov
dec
ret
and
add
pusha
push
je
movsl
stc
push
pushf
shl
dec
nop
cmpsl
inc
sub
pop
or
and
and
xchg
inc
imul
cwtl
lret
cmpsl
fsubrs
mov
adc
adc
loope
add
jnp
out
push
xchg
inc
xchg
popa
pusha
sbb
jle
mov
in
jo
lods
lods
outsl
mov
cmp
ficomps
and
imul
cmp
test
cmp
or
adc
ret
pop
add
idivl
jmp
addr16
enter
adc
rorb
jge
and
dec
mov
mov
and
push
inc
icebp
scas
adc
in
cmpsb
lock
je
jae
push
push
mov
pop
push
jae
xor
sbb
test
dec
jnp
jecxz
or
adc
cmp
jge
push
lahf
pop
push
and
inc
xorl
nop
and
xchg
pop
sbb
push
data16
or
call
push
push
mov
jmp
dec
sarb
adc
daa
fildl
pop
sub
xor
loop
outsl
push
cwtl
xchg
daa
loopne
movsb
add
inc
lock
cwtl
push
xor
mov
add
cwtl
jle
or
clc
sub
decb
pop
jmp
add
add
sbb
rcrl
aam
fcomp
dec
cmc
mov
xchg
cmp
inc
stos
les
jne
add
jbe
ja
sbb
add
leave
cmp
movsl
mov
jmp
cmp
in
je
stos
xchg
jmp
adc
mov
mov
inc
push
mov
cwtl
or
iret
lods
in
pop
sbb
mov
arpl
enter
sub
add
inc
in
dec
jns
or
in
ds
popa
jmp
cli
inc
mov
imul
or
int
pop
shrb
in
xchg
test
call
xlat
add
and
pusha
shrl
scas
movsb
enter
orps
or
sbb
sbb
mov
sub
jle
ret
stc
mov
pop
roll
add
mov
push
mov
push
cmpl
or
fwait
ja
je
mov
push
xor
out
fstl
sbb
add
sbb
adc
pop
jg
and
mov
imul
shlb
ds
roll
dec
xchg
jmp
push
xor
push
xchg
dec
shlb
lahf
loope
push
add
dec
rol
push
and
outsl
mov
adc
push
xchg
add
push
or
inc
and
jbe
jl
adcb
and
push
leave
inc
jno
add
xchg
cmpb
aas
pop
adcb
mov
pop
inc
lods
xchg
mov
inc
sbb
test
push
lea
push
push
sbb
ret
sbb
mov
mov
imul
push
negb
cli
dec
test
mov
mov
add
push
inc
xchg
in
add
sub
cs
jmp
lret
lods
cltd
shl
cmp
sub
sbb
stos
mov
das
add
sarb
rorb
add
xor
dec
mov
sbb
xor
cmp
mov
fst
mov
and
imul
add
dec
push
stos
lea
push
mov
sahf
repnz
loope
lcall
add
add
fdivs
in
sbb
xor
lret
push
push
xor
lock
inc
sti
lods
enter
xor
int3
rorb
sbb
int
mov
imul
pop
adc
dec
inc
ret
data16
inc
icebp
mov
cltd
fsubrs
mov
imul
dec
enter
pop
loopne
cmp
int3
adc
xchg
and
add
pop
sbb
or
fdivrl
rcrl
insb
add
cli
or
or
fmul
push
dec
cmp
inc
mov
or
push
testb
mov
int
sub
mov
jmp
fdivs
cmpsl
mov
insl
fnstsw
push
sbb
xlat
out
jne
dec
jmp
dec
in
lret
out
and
ljmp
jns
mov
cmp
xor
stos
push
mov
std
pop
jmp
lahf
or
sub
add
leave
xor
imul
push
or
jecxz
jmp
push
fnstenv
adc
inc
cmp
outsl
cmp
adc
inc
add
mov
gs
cmc
data16
mov
push
popf
or
fmull
es
and
mov
nop
lcall
xchg
mov
xor
lock
mov
test
or
xor
mov
aad
mov
mov
dec
fistl
xor
in
sub
push
dec
xchg
pop
adc
sub
xor
xor
adc
mov
mov
ret
mov
adc
outsl
pop
sub
pop
sbb
push
push
mov
movsb
jns
push
adc
sar
fldenv
jo
sti
push
aam
dec
and
xor
sub
pusha
lcall
push
push
mov
outsl
bound
xchg
xor
xor
hlt
call
xor
mov
mov
mov
pop
jg
mov
pop
dec
fmuls
lea
dec
pop
add
cmpsb
inc
lock
mov
pop
cmp
push
cli
cs
mov
jl
mov
loopne
hlt
hlt
xchg
mov
stc
cmp
jne
push
movsb
lcall
jmp
movsl
rclb
mov
jmp
je
jp
hlt
test
and
stos
bswap
test
pop
xor
pop
out
orb
adc
aam
decb
loope
jne
inc
pop
pop
add
xchg
push
or
insb
jbe
cmp
fdivrl
fcoml
xlat
orb
sbb
cltd
mov
stos
mov
dec
mov
jmp
push
orl
call
inc
xor
dec
pop
ficomps
mov
loopne
jbe
push
add
cmpb
push
xor
std
inc
mov
adc
incb
stc
sub
lea
fstpt
or
test
mov
inc
dec
jne
test
pop
jne
dec
mov
sbb
pop
or
mov
test
fcompl
push
mov
mov
xor
mov
push
out
cs
shl
dec
sbb
xor
push
push
and
imul
dec
call
or
in
push
push
pushl
testl
xor
xor
mov
js
lret
sti
jge
sbb
stc
cwtl
aam
jg
lea
cmp
sbb
inc
jmp
push
xor
lea
popf
sar
add
jge
mov
mov
dec
cld
inc
leave
ret
daa
fs
or
jg
push
mov
push
push
mov
jne
cmp
mov
out
enter
je
fcoms
mov
and
push
lods
jbe
sub
push
mov
insl
and
iret
ss
push
and
mov
mov
xlat
ficoml
adc
shlb
movsb
loopne
pop
push
jmp
or
dec
and
mov
lcall
into
aam
push
xchg
mov
std
or
mov
mov
cmp
jb
neg
pusha
cmpsl
pop
add
rorl
data16
fimull
mov
shl
rorl
jmp
mov
or
rcrb
aaa
mov
push
clc
sub
das
push
les
shlb
enter
clc
push
jb
dec
shrl
xchg
mov
add
add
bswap
push
push
cmc
push
faddl
pop
jl
mov
xchg
mov
mov
arpl
loopne
leave
sub
mov
xchg
pusha
movsl
sub
fs
arpl
psubd
jne
add
ljmp
lock
mov
std
pusha
les
cmp
sub
sbb
fs
mov
mov
push
add
fbld
adcl
fs
rol
inc
mov
xor
sbb
leave
dec
dec
mov
outsb
jbe
jns
adc
mov
jbe
gs
push
addl
sti
jo
inc
jecxz
pop
add
inc
xor
jno
fdivs
js
add
xor
push
subl
pop
mov
fwait
loope
push
push
mov
out
pop
xchg
mov
addb
mov
int3
cli
mov
or
push
aam
add
pushl
inc
aam
pop
xchg
enter
andb
push
mov
in
mov
mov
mov
ret
cltd
adc
dec
pop
out
inc
pusha
lcall
lahf
test
inc
and
inc
jmp
jmp
in
xor
jle
jo
or
sbb
gs
in
inc
js
mov
fcmovnu
mov
loopne
and
sbb
push
xchg
cs
bound
sbb
imul
jnp
scas
push
cmp
ja
mov
pop
dec
lahf
imul
sub
adc
jl
mov
rclb
dec
add
add
push
xchg
jle
inc
adc
or
clc
jge
insl
ljmp
xor
ja
cmp
jbe
jecxz
insb
cmc
addl
xchg
sbb
cwtl
inc
add
mov
sub
sbb
or
or
xchg
jle
repnz
inc
xchg
loope
sub
jg
adc
dec
add
mov
add
lcall
cmpsb
mov
add
cmp
inc
data16
pop
int3
inc
shr
call
push
adcl
fadds
pushfw
dec
mov
ds
sbb
sbb
xchg
add
loopne
sub
sbb
mov
pop
inc
xor
push
inc
jge
fidivl
push
add
ret
lahf
clc
lods
imul
enter
jnp
push
clc
xchg
icebp
movsb
adc
or
jle
das
sbb
test
cs
scas
pushl
push
lea
xor
xor
xor
xor
xor
rcrb
mov
xor
lret
cmp
test
jo
push
sbb
xor
fstp
cwtl
push
pushf
push
adc
or
or
xor
pop
mov
mov
or
mov
inc
push
adc
pop
sub
pop
pop
push
sub
mov
add
mov
push
push
sbb
jecxz
roll
or
ja
pop
mov
loopne
movsl
xor
pop
sub
or
add
pop
imul
add
jne
add
addb
mov
jle
aaa
nop
xchg
push
movl
mov
arpl
cmp
rolb
push
push
or
stc
cld
aaa
clc
or
add
xor
sub
fcomps
rcrb
push
mov
ja
sbb
add
movb
jbe
clc
jb
jle
jmp
and
and
dec
pop
pop
rorl
cmpsb
adc
sti
push
lock
mov
stc
or
das
pop
sub
add
mov
mov
cmp
loopne
add
mul
sub
ds
in
push
clc
es
dec
push
and
mov
mov
mov
mov
or
xlat
xor
add
mov
jnp
dec
push
dec
add
xchg
mov
xchg
add
push
movsb
rolb
mov
sahf
mov
mov
sahf
xlat
jno
jp
in
and
call
jns
in
lock
sarb
out
clc
clc
cld
sub
add
lock
fnstcw
pop
jmp
sbb
in
push
clc
or
mov
mov
ret
pusha
pop
sti
and
adc
push
lea
jl
cld
or
sub
leave
and
std
cld
out
jo
or
popf
insl
neg
adc
and
test
sub
pop
nop
test
test
rcr
add
dec
gs
out
add
sub
ret
out
push
add
nop
dec
dec
adc
cmpsl
imul
ficomps
or
push
xor
pop
jl
out
dec
push
add
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
fiadds
lods
add
lds
push
push
add
pop
prefetchw
lock
cmp
push
sbb
jge
adc
les
xor
push
push
cmp
idivl
sbb
push
pop
mov
push
add
jecxz
cmpsb
testb
adc
cmp
movsb
sbb
jb
push
jge
subl
xlat
test
jl
and
js,pn
jmp
popf
and
jmp
push
addl
cld
push
stc
xchg
mov
inc
icebp
sub
loopne
sbb
push
or
incb
mov
push
xor
add
fmull
stc
movl
sbb
ljmp
inc
lock
mov
fdivr
insl
stos
inc
add
adc
xor
push
shll
inc
imul
push
out
adc
mov
mov
adc
mov
fbld
sub
cmp
loopne
aam
add
inc
push
push
stc
in
daa
clc
inc
push
inc
sbb
jae
insl
sahf
inc
testl
ss
pop
jns
sahf
or
scas
jns
je
pushl
mov
sbb
inc
cwtl
add
push
loopne
xor
test
adc
push
cs
or
les
cmp
hlt
or
sub
sbb
mov
sbb
out
testb
ja
mov
sbb
and
or
es
mov
fildl
push
int3
leave
mov
notl
mov
dec
adc
mov
les
cmp
jne
inc
inc
inc
inc
jmp
fidivs
call
shrl
xchg
sub
out
or
xchg
js
je
and
std
mov
mov
inc
inc
sbbb
sbb
adc
loopne
mov
inc
or
dec
rol
shr
rep
adc
data16
mov
movb
arpl
fisubrs
or
dec
add
push
cmp
testl
mov
dec
pop
jnp
clc
adc
add
adc
aas
test
cmpsl
mov
testb
adc
add
add
inc
add
loopne
jo
outsl
mov
inc
and
xor
mov
cmp
add
jae
or
jae
mov
ret
add
and
jp
mov
sbb
ljmp
mov
mov
adc
adc
xor
mov
imul
andb
pusha
jo
mov
dec
or
shll
ja
mov
and
sub
push
push
inc
aas
add
mov
xor
push
clc
adc
or
jge
xor
mov
fmul
pop
jae
data16
aaa
insl
arpl
add
cld
cmp
xchg
lret
or
push
add
adc
lea
stc
fistl
and
shlb
cmp
or
hlt
idivb
sti
inc
imul
push
and
movq
jl
cmp
jb
cmp
jl
jg
add
mov
jbe
and
fisubl
punpcklbw
cmp
movsl
popf
out
push
or
xor
and
sbb
push
ficomps
sub
jl
clc
incl
das
out
jbe
fcomps
sbb
push
mov
or
hlt
std
lahf
push
bound
test
xchg
je
pop
fsts
jno
mov
xor
add
xlat
fidivs
push
lock
imul
inc
and
sbb
fcoms
stc
add
sbb
xor
push
cltd
test
jbe
in
xchg
adc
sub
mov
sbb
xchg
jmp
sub
push
sub
js
push
push
mov
xor
jge
add
add
push
adc
insl
cmp
arpl
cmp
clc
sub
mov
mov
fisubl
data16
imul
or
call
mov
sbb
sarb
scas
leave
jbe
jl
sahf
push
cltd
push
adc
add
mov
or
lods
int3
cld
jl
dec
jg
jl
out
lea
fisubs
lret
dec
push
push
adc
add
or
decl
or
adc
mov
test
cwtl
stos
adc
xchg
jbe
xchg
rcrb
lret
enter
mov
mov
aaa
cmpsl
add
push
adc
sti
dec
push
push
xchg
dec
cmp
push
jg
cmp
addb
hlt
movd
add
cmp
push
inc
aas
cmp
xor
repnz
push
inc
or
dec
in
mov
sbb
pop
stos
pop
stos
ja
cld
mov
or
cmp
cmp
cmpl
cmp
ljmp
push
inc
loopne
xor
cmp
cli
in
push
mov
in
inc
push
mov
sti
jle
or
call
push
les
out
cmp
mov
inc
dec
cmp
pop
xor
rolb
pushf
mov
adc
mov
or
inc
loopne
mov
or
cmp
lcall
push
inc
addl
mov
lods
push
push
mov
push
pop
movsb
or
sbb
nop
push
push
jp
jl
add
mov
jle
and
dec
lret
mov
bound
cmp
filds
pusha
sub
adc
adc
and
cmp
dec
popa
je
mov
push
loopne
xchg
and
add
ret
jmp
loop
pop
loope
jle
or
jmp
shr
lea
sub
adc
and
inc
push
pusha
jo
ret
lea
mov
jle
push
lods
adc
xor
sub
cmpl
andl
cmp
int3
cmp
and
mov
fldcw
inc
mov
cwtl
into
sub
inc
add
sub
jbe
cmpsb
out
cltd
ds
hlt
rep
ss
neg
enter
ret
lcall
add
sub
imul
mov
stc
xbegin
pushf
clc
in
push
data16
mov
mov
cmp
sbb
pop
add
dec
sbb
inc
jo,pt
test
lcall
mov
popf
pushf
pop
sub
je
push
popf
pop
je
push
fisubs
mov
jle
dec
jne
push
data16
pop
testl
std
cmp
mov
je
and
roll
mov
jle
stos
push
enter
adc
jmp
fdivrp
aas
loop
cs
add
jmp
lock
lea
cmpb
mov
or
in
pushf
adc
or
imul
add
push
add
or
int
je
xor
or
test
xchg
mov
or
dec
dec
inc
loopne
sbb
jne
mov
int3
cs
pop
push
and
inc
negl
add
adc
inc
inc
nop
inc
pop
adc
rorb
jg
mov
fcmove
or
insl
pop
cmp
das
outsl
aam
movsb
jle
cmp
jl
shl
shll
pop
dec
or
xor
sbb
js
sahf
add
mov
mov
sbb
pushl
loope
and
sbb
stos
icebp
flds
add
jmp
gs
fldt
inc
mov
pusha
sub
inc
arpl
pop
or
cmp
cmp
sub
pop
sub
cmp
je
push
and
fsubrl
inc
sbb
xor
push
mov
adc
out
push
sbb
push
cmp
and
sbb
loopne
aas
pop
cmpsb
jle
pushl
aam
pop
mov
jne
mov
mov
xor
test
out
mov
insl
in
lock
push
jl
lock
mov
dec
cmpsb
xor
or
add
add
sbb
or
or
xchg
inc
or
jg
aas
add
dec
and
push
push
arpl
ret
outsb
pushf
sbb
xor
fdivs
into
andb
clc
jno
pop
fs
add
clc
decb
push
pop
jg
jmp
nop
add
or
inc
cmp
jl
pop
pop
mov
leave
lock
test
lret
ret
xlat
leave
xchg
or
fstl
mov
sbb
fcmovnu
loopne
adcb
incl
loopne
repz
int3
les
and
push
push
fdivr
jbe
or
add
call
fmul
mov
loopne
pop
sbb
pop
aaa
loope
fdivs
aaa
lods
push
outsl
cmp
sbb
mov
incl
jbe
sub
in
outsl
and
aam
gs
xchg
arpl
pop
cmp
and
fisttpll
mov
jo
adc
inc
or
sbb
pop
add
push
mov
jle
test
bound
dec
shlb
nop
fsin
repz
in
jbe
push
and
adc
imul
add
xchg
lods
cmpsl
and
inc
cwtl
or
outsb
fmuls
das
inc
lret
adc
inc
orl
cld
adc
test
test
mov
jne
mov
inc
ret
xor
sbb
fldl
outsl
rcrb
sbb
je
or
or
shrb
int
fisubl
cmp
dec
std
sbb
adc
or
test
test
inc
ret
xor
add
pushl
mov
xlat
or
sbb
repnz
push
push
sbb
iret
pop
repnz
outsb
push
push
push
cmpb
test
je
addr16
scas
pop
inc
clc
ja
push
push
cmpl
jne
imul
jl
or
pushf
cmp
or
xor
cmp
push
mov
xor
mov
sbb
jmp
outsl
sub
imul
pop
pusha
mov
orb
int3
add
and
dec
mov
push
dec
popa
jecxz
add
dec
jo
cld
mov
shll
pusha
rclb
out
dec
xchg
ficompl
xchg
adc
repz
mov
enter
push
je
dec
jne
hlt
add
sti
add
and
push
or
sbb
rolb
cmp
and
push
mov
add
fsubrl
and
add
hlt
jne
push
sub
and
push
add
push
icebp
enter
add
inc
cs
arpl
mov
pop
sub
sbb
xchg
jns
inc
roll
popa
popa
or
or
fcmovu
filds
aas
sbb
pop
je
pop
shlb
cmc
and
and
cmpsl
rcrb
int3
push
leave
lcall
push
ss
ja
xor
arpl
xor
in
adc
inc
cmp
jae
push
cmp
jl
mov
mov
mov
inc
sahf
jp
adc
mov
cmpsl
sti
pop
test
lea
testb
jne
clc
push
stc
scas
inc
jno
lock
into
add
roll
lods
mov
jb
pop
pop
pop
push
or
pop
sub
add
je
nop
sbb
mov
push
add
movsl
xlat
pushf
in
dec
or
push
xor
leave
mov
lods
int3
subb
add
mov
repz
push
lret
cmc
cmp
je
or
dec
incl
fisubl
sbbl
or
mov
pop
stc
shll
mov
inc
push
xchg
xlat
jns
pop
pop
out
xlat
jne
jmp
frstpm(287
or
rolb
mov
mov
dec
dec
mov
mov
xchg
pop
loopne
cmpb
jle
sbbb
jg
mov
push
pop
push
cs
inc
add
sub
inc
fadds
sub
out
cmc
adc
dec
aam
std
sti
push
sbb
jno
imul
mov
add
mov
mov
jne
dec
inc
push
lock
jae
rolb
cmp
jl
xor
ret
inc
fiaddl
insb
aam
pop
cmpsb
pop
rcrl
jbe
add
test
sbb
fnstenv
add
dec
jg
adc
orl
call
lret
pop
hlt
add
mov
dec
jne
aad
mov
or
rolb
sbb
sbb
add
ss
push
push
std
loopne
repz
pop
std
jb
aam
jg
inc
xchg
or
pop
test
mov
lock
xchg
bound
ljmp
and
sbb
push
mov
or
lock
adc
lea
cmpl
inc
jp
add
clc
push
cs
stos
mov
add
and
xor
adc
mov
xchg
dec
and
jmp
je
adc
xlat
je
cmp
scas
stc
jg
adc
cmp
jb
testb
xchg
insb
testb
mov
inc
nop
int3
lods
sbb
dec
rcll
push
rcr
lret
inc
movb
clc
out
clc
aas
je
cmp
jne
cmpl
sub
pop
adc
daa
mov
loopne
lods
push
or
flds
push
push
call
call
push
sub
xor
lcall
js
add
xor
pop
fidivl
and
mov
je
push
cmp
adc
xor
jmp
mov
lock
jo
mov
loope
and
loopne
mov
loopne
sbb
jbe
push
lds
sbb
testl
inc
leave
add
or
outsl
pop
cmpsl
lods
cs
out
call
push
jne
and
adc
cwtl
fisttpll
inc
mov
cmc
sbb
push
shrl
jbe
in
outsb
orl
push
lods
cs
inc
jl
sbbl
jge
loop
adc
and
mov
jle
ret
sub
cwtl
and
sbb
sti
repz
ret
add
cld
mov
dec
mov
jo
xchg
inc
or
add
xor
and
or
test
lcall
das
addb
lock
or
fiadds
cld
mov
jl
bound
lods
pop
arpl
loop
sbb
push
mov
popa
jnp
adc
xchg
mov
idivb
push
push
daa
and
or
push
push
movsb
les
sahf
pushl
dec
sbb
mov
mov
inc
loopne
or
xor
push
fildll
push
sarb
dec
add
loop
repnz
mov
cmp
test
cmp
testb
mov
push
in
pop
sbb
cmp
push
in
inc
inc
arpl
pmulhuw
cmp
unpcklps
mov
test
push
or
outsl
icebp
dec
movsb
jno
dec
or
dec
push
scas
and
jbe
and
cmp
cmp
fistl
push
gs
jne
cs
sub
jg
fsubrl
pushf
add
addl
subb
adc
mov
pop
xor
mov
loopne
push
jle
and
pop
inc
cs
or
into
inc
jbe
mov
imul
or
jge
dec
and
daa
test
and
jno
sbb
dec
ja
mov
stos
xchg
mov
push
das
mov
cmp
out
sub
scas
int
out
mov
inc
sub
sbb
xor
shll
jb
add
or
push
xor
pop
sarb
mov
pop
and
ja
std
inc
js
push
mov
mov
ds
adc
dec
fnstenv
add
xchg
lock
adc
cwtl
push
mov
imul
push
in
mov
mov
mov
jl
shrb
mov
add
pop
es
jmp
fists
jle
jne
mov
pop
pop
leave
inc
mov
sub
mov
add
push
cmovle
dec
or
add
aaa
sub
insb
pushf
test
pusha
mov
and
adc
mov
push
push
testl
les
stos
cld
xor
jbe
repz
push
push
das
and
ret
sub
adc
lock
pop
out
or
ret
push
push
push
add
push
lea
idiv
push
jmp
jbe
or
test
mov
jl
sub
push
cmp
lock
lea
mov
mov
push
dec
cmp
pop
and
mov
mov
ret
notl
movsb
jmp
insl
add
ss
mov
cmpl
pop
int3
push
or
push
or
push
or
jle
test
dec
push
mov
adc
xlat
dec
or
or
push
push
pop
pop
fsubr
shlb
push
sub
mov
mov
cmc
das
mov
add
or
lea
push
not
loope
les
sub
scas
mov
or
add
es
add
lret
push
aaa
je
testl
and
mov
lret
iret
and
fimuls
pop
push
sbb
insb
lock
test
pop
mov
sbb
rorb
adc
adc
sbbb
mov
xor
mov
cld
aas
pop
adc
testb
ret
mov
fdivs
mov
shlb
mov
mov
add
outsl
clc
mov
add
xlat
mov
jge
cmp
mov
push
mov
jb
mov
int
cmp
jae
add
add
rcl
xorl
test
inc
fiaddl
add
loopne
xchg
in
mov
test
fs
cmp
xchg
and
lea
or
add
fcomip
and
cmp
and
fdivrs
jp
fs
push
sbb
mull
push
mov
lods
loopne
mov
pop
lods
imulb
xlat
push
mov
pop
mov
js
mov
sbb
xchg
cmpsb
test
add
cmp
popf
loopne
add
je
aaa
lea
jl
sub
mov
jns
jmp
push
outsl
sti
mov
adc
inc
mov
das
jecxz
pushf
mov
jg
out
cmpsl
fwait
cmp
sbb
mov
jle
xchg
cmp
cli
inc
cmp
jle
push
add
call
mov
xor
add
mov
fwait
push
dec
lods
sub
clc
rclb
jl
out
or
sahf
push
enter
fs
mov
inc
mov
xor
lcall
aam
cmp
in
push
xchg
fidivrl
sbb
outsb
daa
mov
cmpb
std
jmp
out
jge
mov
pop
cmp
movsb
or
mov
mov
cmp
inc
mov
test
jle
int3
std
sbb
cmp
je
dec
sub
sbb
clc
jb
icebp
clc
inc
int3
sub
pop
mov
hlt
jg
mov
sub
or
xchg
stos
loopne
pop
lea
mov
icebp
and
mov
mov
pop
sub
jne
mov
outsb
push
adc
pop
clc
rcrb
lock
les
shrb
and
or
xor
xor
lret
push
inc
jge
jp
push
dec
xchg
das
mov
jp
and
or
and
ljmp
mov
push
cmp
jbe
push
cltd
add
jnp
sbb
sbb
or
shr
lds
and
xor
ret
popa
inc
inc
cmp
cmp
loope
cmp
and
inc
cmp
jne
add
mov
call
ljmp
pushf
js
nop
sbb
shl
mov
ret
xchg
inc
jecxz
mov
js
fsubrl
in
out
dec
add
and
inc
dec
lds
rol
clc
aaa
decb
shll
push
outsl
movdqa
int3
shl
push
dec
adc
push
and
loope
fnstsw
dec
push
pop
outsl
inc
or
cmp
shl
pusha
jle
or
aad
stc
repz
jo
mov
subb
sbb
adc
adc
ret
push
jno
shlb
sub
and
or
dec
mov
or
jne
test
push
ds
or
mov
sub
inc
inc
loop
push
push
xchg
mov
mov
mov
sahf
ljmp
out
in
add
sub
lock
in
cld
xor
rep
insb
push
cmp
jne
addl
and
adc
popf
enter
shlb
fildll
sub
push
push
ret
inc
xor
and
out
loopne
dec
rep
mov
test
faddp
hlt
rcll
popa
cltd
movsb
push
adc
inc
jmp
inc
push
icebp
mov
lods
repz
iret
int3
or
pop
jb
dec
xor
xlat
fsubrl
or
push
push
mov
je
pushf
outsl
push
adc
fcoms
mov
in
shlb
sbb
mov
add
inc
inc
xor
mov
aas
sbbb
add
push
sub
mov
sbb
and
cmp
pusha
sbb
xor
sub
lret
dec
loopne
fcoml
out
iret
lret
mov
clc
or
lret
lret
popf
enter
shrb
jmp
test
int
lea
shrl
dec
cmp
enter
dec
cld
adc
cmpsl
in
fdivrs
pop
add
rol
jo
xchg
adc
sbb
fcoms
nop
xor
sub
int
jmp
pop
push
push
sbb
and
xchg
test
mov
pop
jmp
jge
mov
mov
pushf
ret
outsl
incl
inc
cmp
jb
lea
push
adc
push
pop
out
dec
in
mov
mov
add
pop
inc
pop
jle
and
call
xchg
add
push
mov
xor
pop
idivl
sbb
sub
sub
aas
adc
stos
cmp
js
or
pop
sub
xchg
adc
in
in
mov
fisttpl
push
sar
iret
repz
sub
sub
adc
cld
push
or
push
jno
subb
fimuls
test
mov
push
loopne
pop
subb
or
subb
sahf
out
out
xor
cmp
inc
dec
push
pop
add
icebp
jns
ja
pop
lahf
mull
inc
nop
or
adcl
aam
cmp
or
pusha
ja
scas
es
adc
xor
stos
or
push
adc
sbb
fimull
jne
inc
inc
cmp
inc
dec
jne
jo
sub
bound
xorl
ljmp
push
xor
and
mov
sbb
adc
loope
jg
adc
lahf
cmp
ja
xchg
push
mov
jbe
cmp
sbb
popa
push
inc
adc
jne
ds
add
mov
jmp
and
iret
pop
cmp
push
cmp
mov
add
mov
pop
icebp
xlat
mov
xchg
cs
les
mov
les
adc
or
jmp
gs
inc
aaa
or
push
dec
push
xor
icebp
daa
xor
pop
outsl
aam
sub
xchg
shl
and
add
test
add
add
mov
add
sbbl
icebp
lock
ret
add
add
jb
inc
pusha
divb
test
mov
xor
ja
mov
mov
lea
lret
sub
leave
and
std
cld
sub
cmpsl
mov
mov
test
iret
nop
pop
cmp
sub
adc
inc
add
fs
jp
sti
push
pop
fwait
dec
push
ds
jae
mov
dec
je
push
push
cmp
jb
out
nopl
iret
lea
sub
mov
sti
add
xor
mov
dec
sub
rcrl
cmp
mov
mov
add
xor
pop
pusha
fistps
icebp
push
ljmp
sub
pop
out
sbbl
push
pop
pop
ret
andl
push
and
or
daa
mov
adc
or
sbb
dec
push
and
in
lock
pop
icebp
lods
add
jns
mov
sub
cmp
add
aad
test
push
adcl
dec
pop
add
cmp
sub
pop
subl
xor
pop
hlt
test
addr16
enter
push
cmp
je
or
out
add
and
les
mov
idiv
xchg
ret
jmp
adc
inc
mov
or
jbe
cltd
cmc
push
call
divb
inc
push
push
sub
xchg
jne
lea
ds
mov
cmp
inc
cmp
dec
clc
js
or
cmp
adc
lock
jno
gs
vmaxsd
jne
adc
adc
mov
fists
fcomps
std
jle
pushl
push
pop
cmp
ja
pop
jbe
lea
insb
sbb
shl
mov
jbe
add
leave
cmp
jae
insb
iret
dec
jo
or
jb
push
clc
jbe
add
add
sbb
and
dec
dec
test
or
add
jne
sbb
push
pop
int
cs
cmp
pop
mov
jmp
push
xlat
mov
add
sbb
and
hlt
push
push
mov
or
es
mov
stos
mov
arpl
mov
jmp
and
mov
add
arpl
mov
sbb
inc
divl
inc
dec
push
add
or
in
xor
sbb
cmp
mov
dec
jmp
and
rcr
sub
call
inc
adc
roll
adc
or
test
fdivs
data16
mov
enter
add
or
loope
or
lea
stos
add
jnp
pop
sub
mov
mov
inc
dec
jne
lea
sahf
out
mov
call
mov
add
jo
add
outsl
mov
stos
roll
scas
inc
div
mov
notl
and
jbe
lea
fwait
movsl
ja
add
enter
push
in
lea
push
or
inc
mov
inc
in
fdivrs
cmpb
cld
ficoml
push
xlat
hlt
roll
jo
mov
push
or
jns
std
push
cmp
mov
scas
data16
inc
inc
cld
jbe
testb
dec
and
mov
or
int
rorl
mov
lods
jmp
and
je
and
arpl
push
xchg
or
test
add
mov
jmp
mov
mov
leavew
sub
mov
imul
lea
sti
rorb
push
xchg
and
and
mov
and
jmp
push
inc
cmp
jb
shrb
rolb
test
lret
stos
clc
mov
adc
je
cmpl
or
and
pop
and
sbb
fwait
sarb
popf
ss
jb
inc
pusha
sbb
push
or
imul
mov
mov
push
orb
jmp
adc
fstl
push
cmp
cmc
movsl
add
lock
hlt
xor
divl
movl
fidivl
push
popa
insb
jmp
inc
jnp
push
in
jne
sarb
fldt
mov
cmp
les
clc
loope
mov
or
push
push
dec
lock
mov
or
push
push
mov
and
or
sbbl
cmp
cli
and
jmp
xor
jle
jb
or
inc
mov
insb
pusha
es
adc
push
es
push
out
push
and
xor
jp
das
orl
inc
in
imul
inc
jae
cmp
jbe
scas
js
movsb
iret
push
jne
mov
test
sbb
pop
leave
inc
dec
les
lds
xor
mov
aaa
jmp
push
jmp
sub
shr
sbb
inc
scas
cmp
inc
cmp
clc
jbe
add
mov
cmpb
shrl
dec
mov
loopne
cmp
incb
xor
inc
daa
mov
subl
mov
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
and
out
stc
int3
add
divb
xchg
fdivs
jo
mov
aaa
rorl
inc
dec
jne
fisubrl
loope
push
into
cwtl
scas
dec
addb
cmp
cmovge
mov
adc
rolb
dec
loopne
adc
insl
sub
pop
mov
ficoms
jp
loop
push
adc
push
sub
fisttps
pop
rcll
fcmovbe
sub
sahf
sbb
int3
pop
decl
and
pop
jno
in
addl
cmp
fdiv
aaa
pop
or
inc
adc
sbb
mov
int3
cmp
daa
mov
jo
insb
ljmp
xor
std
and
sarb
or
rol
or
clc
add
loopne
or
cmp
sub
jmp
xor
dec
sbb
mov
push
inc
mov
bound
pop
lods
insb
pop
ret
ss
arpl
jmp
rcl
insl
adc
jne
es
xor
or
and
push
cs
rcll
shll
mov
push
std
in
mov
sub
call
lcall
and
imul
push
cmp
jne
sbb
pop
adc
mov
ds
imul
mov
xor
lahf
jno
push
shlb
fidivl
inc
inc
sbb
sub
cmp
and
rcrb
cwtl
rolb
mov
mov
cwtl
mov
jne
push
lea
loop
push
push
cmpl
adc
shlb
cmp
sbb
xchg
adc
dec
subl
ret
jecxz
push
out
xor
xchg
mov
movsl
movsb
push
sbb
add
lea
jnp
test
aaa
cmpl
andl
pop
ret
jo
testl
push
movsb
add
sub
sub
test
mov
xor
divl
mov
mov
push
loope
loop
push
add
xor
pop
in
gs
in
push
jbe
outsb
lock
dec
jle
test
adc
sub
test
xor
test
fsubr
jmp
jmp
popa
addb
sbbl
insb
xchg
sbb
sar
jge
and
gs
adc
loopne
loop
mov
adcb
pushl
xor
sbb
ret
leave
xchg
cltd
sarl
mov
adc
add
add
adc
xor
in
fsub
push
ss
cmp
fs
jecxz
xchg
or
xor
fsubrs
push
imul
mov
pushf
outsl
dec
loope
cmp
mov
push
dec
imul
repz
cmp
je
mov
xor
xchg
and
xchg
loop
xor
aas
and
mov
pop
mov
imul
dec
xor
push
aas
add
xor
out
xor
push
jo
and
js
gs
popa
cmp
jnp
or
loop
mov
cmp
mov
push
imul
add
sub
mov
adc
sub
movsb
mov
loop
push
jo
cmpb
pushl
push
push
aas
rolb
cmp
cmp
jne
insl
idivb
mov
jmp
adc
outsl
jo
in
jbe
fimull
jae
adc
cmp
dec
or
or
or
cs
movsl
test
fcomp
dec
or
popf
mov
aam
test
mov
sbb
test
push
mov
rorl
cmpb
pop
dec
cmp
lds
cmp
pop
xor
xchg
and
or
inc
dec
mov
cmp
inc
jmp
xor
les
xchg
cmp
imul
in
pop
inc
jo
jge
aas
push
adc
sbb
dec
enter
das
in
mov
sbbl
pop
adc
sbb
jle
push
inc
inc
cmpsb
sarb
mov
adc
lea
sub
notl
push
fiadds
insl
adc
pop
sbb
and
and
lock
cmc
or
inc
hlt
or
push
cltd
pop
idiv
mov
out
addb
insb
pop
cmp
mov
dec
and
add
ret
sub
sub
or
sti
insb
pop
sub
lea
mov
inc
xlat
xchg
xor
ret
cltd
imull
sub
mov
lea
cltd
es
mov
jp
imul
lea
in
fs
dec
js
ja
cli
pop
sub
add
sbb
lea
jmp
add
lods
dec
adc
add
or
pop
sbb
jo
andb
xor
lock
sub
jmp
icebp
xchg
out
shll
sbb
mov
pop
adc
outsl
sarl
add
imul
dec
and
and
leave
call
pusha
adc
add
xor
push
jmp
mov
cs
push
filds
or
out
jbe
mov
add
jmp
stos
decl
add
pushl
cmp
jl
sub
incl
sub
xor
hlt
cwtl
mov
push
add
aas
and
push
mov
add
rorb
adc
cs
popf
mov
xor
pop
push
idivb
mov
or
setb
dec
idivl
mov
mov
cmp
notb
jmp
pop
push
push
push
push
mov
xor
inc
cmp
push
dec
dec
cmp
mov
cmp
ja
xor
push
mov
cli
idivl
cli
imul
hlt
ret
popf
or
jge
push
pop
mov
pop
int3
movsl
xorb
movsb
ja
pop
push
push
jnp
outsl
jnp
jecxz
loop
push
das
stos
dec
outsl
fsubs
mov
sbb
push
cmp
jl
cmp
jg
push
jle
jge
adc
mov
or
and
repnz
jle
push
daa
cwtl
or
jb
inc
insb
sub
aad
jle
pop
jmp
jne
test
push
or
add
je
sbb
inc
add
xor
js
xchg
xchg
and
cmp
mov
and
sbb
shll
daa
scas
test
pop
push
push
int3
push
add
mov
aaa
dec
cmp
shrb
rolb
xor
push
cmp
rcrb
test
or
test
inc
je
mov
or
pushf
mov
inc
pop
adc
jl
inc
push
bnd
aas
dec
or
jg
push
jmp
es
xchg
ja
push
push
push
push
push
jmp
add
lea
push
and
push
push
sub
cmp
lret
add
movsb
sub
adc
jo
lock
push
lea
inc
cltd
push
insb
in
call
bound
sbb
push
mov
and
xor
push
mov
jg
jb
inc
mov
or
jns
jbe
ret
stc
dec
icebp
or
inc
mov
out
xchg
pop
fbld
add
fs
fsubr
outsl
jmp
ss
or
mov
jmp
jb
adc
adc
add
sbb
xor
sub
imul
mov
ret
ja
cmp
jge
ss
sbb
jl
fnstcw
decl
dec
adc
add
test
call
sub
pushl
mov
xor
inc
mov
test
ljmp
push
sbb
lock
call
mov
jle
push
dec
inc
inc
fldcw
jbe
cmpsb
push
sbb
mov
push
out
pop
das
jp
add
sbb
dec
fstp
cmpsb
sbb
or
mov
pusha
out
sbb
pop
mov
cs
pusha
pop
call
jge
push
push
add
or
jge
inc
out
fnstcw
neg
sbb
mov
sbb
sbb
add
jne,pn
sbb
jg
pop
xor
xor
pop
inc
push
shr
inc
cld
out
dec
ja
xor
jmp
ljmp
divb
lods
lock
xor
add
jb
cmp
or
cmp
dec
cwtl
add
jae
out
dec
pop
fsub
sbb
mov
inc
stos
sbb
push
bound
and
movsl
jns
sarb
adc
pop
pop
out
pop
pop
push
or
or
loopne
ret
jns
jmp
popa
cmp
loopne
orb
sbb
fnstcw
jbe
sub
adc
push
cmpl
rolb
outsb
and
les
ret
jl
mov
or
aas
cld
cmp
cmp
or
push
shlb
mov
rcr
roll
xchg
out
repz
adcl
mov
iret
sub
sahf
adc
mov
stos
xorl
xor
inc
add
mov
xor
sub
js
mov
pop
inc
mov
mov
jmp
ja
ficomps
inc
sub
lock
nop
adc
idiv
shrb
sti
mov
fistl
sbb
add
repz
je
push
imul
cmpsb
inc
js
push
lock
push
jl
addb
mov
jb
cmc
pop
mov
clc
into
push
test
inc
sbb
call
in
mov
nop
aam
in
sub
sbb
pop
clc
sub
add
fldcw
movsb
stos
sbbl
iret
loopne
aam
inc
push
clc
movsl
int
sub
and
mov
bound
inc
pop
or
scas
or
jb
add
sbb
fmull
sbb
xor
pop
cmp
inc
cmp
dec
dec
imul
sbb
adc
adc
test
push
cli
add
in
sub
fsubrl
in
sub
std
incb
jb
mov
je
sbb
ss
push
jp
mov
call
test
xor
inc
loopne
cltd
je
cmpsb
cmpsb
fcompl
ret
mov
leave
pop
movsb
dec
mov
and
lock
movsb
and
popl
mov
ja
mov
movsl
sbb
subl
mov
xchg
or
sub
in
jns
dec
add
mov
sbb
sbb
mov
inc
xchg
and
sbb
or
aad
inc
push
jecxz
mov
lcall
cs
xchg
or
std
clc
data16
rolb
sbb
or
xorl
sub
add
cmp
cmpsb
or
sbb
sti
cld
clc
push
ret
adc
call
push
mov
jp
push
push
aad
mov
or
stc
sub
movb
fiaddl
shl
es
pop
and
loop
cmp
pop
inc
cmp
cmp
jl
add
push
mov
hlt
jb
int3
mov
enter
inc
inc
and
adc
test
inc
dec
push
cld
inc
sub
push
imul
dec
sti
adc
adc
add
mov
inc
jo
and
push
mov
add
idivb
and
sti
in
pop
dec
dec
lar
ljmp
lods
push
adc
add
pop
pop
test
out
pop
pop
mov
push
push
cmp
das
orl
aaa
xchg
push
cmp
mov
imul
fisttpll
xor
imul
push
cmp
jae
push
add
xchg
loope
adc
fisubrl
mov
jl
rcll
test
fmuls
or
out
dec
lea
cwtl
mov
push
les
call
fldt
or
mov
add
cmp
jge
imul
mov
mov
cmp
xor
arpl
popa
mov
add
push
fs
out
mov
sbbl
pop
andl
cmp
xchg
pop
sbb
lret
cmp
cmp
sub
pop
mov
bound
dec
jbe
dec
rcrl
inc
or
mov
jmp
leave
push
sbb
pusha
mov
mov
cmp
inc
sub
xor
and
sbb
ja
xchg
loopne
enter
fidivl
leave
adc
push
add
enter
mov
test
inc
jmp
push
fmull
cmp
mov
enter
mov
mov
xor
in
loopne
sbb
inc
movsb
cmp
scas
dec
cltd
aad
inc
sbb
loopne
clc
ljmp
pusha
fs
fisubrs
mov
push
jmp
popa
mov
inc
orb
xor
push
pop
dec
arpl
loopne
pop
sbb
iret
out
xor
push
add
add
adc
add
ret
add
pop
loopne
addr16
dec
decl
and
jne
mov
mov
out
mov
and
movl
adc
push
add
adc
xor
push
fdivs
aam
mov
push
add
sub
incl
cld
or
mov
jo
mov
sahf
ret
push
inc
mov
sbb
incl
mov
dec
rcr
add
mov
and
or
xchg
add
inc
push
pop
pushf
mov
ja
out
adc
push
ss
jmp
xor
js
pusha
add
add
sub
lods
dec
inc
inc
inc
pop
je
pusha
and
sub
push
or
sarb
cmpb
nop
shll
lock
push
mov
loopne
jmp
pop
cld
pop
divps
insb
sbb
icebp
xchg
xchg
or
xor
pop
add
je
sarb
sub
pop
and
or
sarl
out
mov
xor
and
jae
fiadds
pop
add
adc
push
out
push
push
into
push
addl
pop
add
adcl
sbb
fists
sbb
mov
pop
sub
sbb
push
and
cli
mov
hlt
addb
stos
cmp
movsb
aas
jae
aam
pushl
jno
cld
das
dec
shl
lea
cmp
jb
loope
cmp
add
push
jmp
dec
mov
loope
cmc
push
mov
call
add
je
cmp
jne
xchg
adc
cs
cmp
and
dec
or
lock
mov
jmp
adc
and
pcmpeqw
inc
inc
mov
cmp
je
inc
inc
or
jne
add
fisubl
leave
inc
push
sar
inc
push
push
adc
inc
and
inc
int3
sub
xchg
cmp
addb
fs
xchg
add
add
cmp
cld
pushf
pusha
pop
ret
jmp
jbe
jo
sbb
and
sbb
xchg
fisubl
inc
aam
mov
imulb
out
int
push
faddl
bound
je
fstl
xor
icebp
invd
mov
push
push
or
pushf
mov
outsb
and
daa
call
clc
pop
xlat
loop
orb
mov
fbstp
pop
xorb
es
or
or
and
push
and
cmp
daa
cmpsb
mov
inc
bound
pop
in
js
into
mov
jmp
shlb
xor
cmp
mov
mov
pusha
jo
sbb
sarb
pop
sbb
jbe
clc
orl
add
mov
sub
jg
mov
add
adc
cmp
jb
ja
test
mov
cmp
mov
adc
insl
mov
push
xor
ret
sub
push
mov
fmull
sbb
sub
add
test
add
rcrb
shl
add
pusha
mov
in
hlt
inc
add
mov
jle
mov
cld
jo
leave
fiaddl
adc
sti
hlt
inc
adcl
jl
je
or
repz
pop
test
outsl
in
push
orb
jmp
xchg
adcl
inc
ret
ret
dec
mov
cmpsb
pop
roll
in
xchg
sarl
aaa
xor
ds
loopne
adc
jmp
lret
or
je
and
pop
loopne
xor
add
mov
jmp
scas
and
mov
repz
mov
loopne
call
or
jae
mov
jmp
jae
jo
sahf
jb
testb
and
dec
cmp
cmp
add
jbe
call
outsl
adc
sub
icebp
and
outsb
inc
mov
mov
mov
lcall
daa
adc
cld
dec
shrb
adc
xor
jnp
fwait
hlt
fidivrl
pop
push
cmp
jbe
push
lock
push
scas
and
ret
xchg
std
xor
mov
add
xor
push
adc
or
cmpsb
imulb
lock
dec
shr
mov
or
cmp
sbbb
fwait
leave
mov
cld
dec
xchg
insl
loop
rolb
dec
jge
adc
int3
push
outsb
and
pop
ror
jg
sbbb
into
js
cltd
and
push
add
add
xor
push
dec
mov
leave
into
arpl
jb
xor
cmp
cltd
mov
push
sbb
cmp
or
pop
pusha
loop
xor
pop
or
jmp
rorl
inc
lock
pop
dec
or
lock
loopne
xchg
mov
push
or
mov
or
lods
lret
test
mov
and
lods
sar
inc
add
push
push
mov
mov
andb
not
mov
xchg
push
inc
xchg
and
lock
jge
cmove
dec
lock
sub
mov
dec
xor
and
mov
dec
mov
or
or
mov
addr16
std
not
push
rcrl
loopne
lds
sub
mov
sbb
cld
in
out
fwait
je
mov
sbb
clc
je
out
gs
in
pushf
popl
pop
repz
mov
insl
push
mov
add
adc
add
or
bound
add
sbb
lea
std
xor
rcl
in
js
push
scas
mov
sarl
jne
ret
inc
or
lea
popa
cmp
sub
sub
and
into
mov
ret
inc
out
jmp
push
jae
pop
insb
imul
scas
push
hlt
insl
inc
jmp
inc
lods
cmp
mov
cmc
or
jl
xlat
push
clc
ss
or
mov
or
arpl
inc
cmp
jl
or
and
in
icebp
sarl
sbb
es
mov
ficoms
cmpl
fcoms
shll
or
scas
add
imul
push
jne
push
aas
out
sub
outsb
add
pop
push
cmp
mov
push
imul
arpl
pop
jl
mov
xchg
les
mov
sbb
xchg
adc
mov
pop
mov
or
jne
sbb
push
jp
adc
push
imul
xchg
mov
or
popl
dec
cmpsb
pop
orb
leave
or
inc
mov
dec
in
mov
adc
lds
xorb
xor
arpl
mov
and
scas
xor
lods
daa
cmp
push
cltd
daa
lock
lea
icebp
adc
mov
push
lret
mov
mov
cwtl
add
mov
ret
xchg
jae
and
sbb
je
or
xor
jne
mov
xchg
mov
push
mov
mov
aaa
or
dec
or
push
adc
nop
test
sub
jo
jne
add
add
mov
mov
repz
mov
push
xor
call
sbb
inc
mov
stc
cmp
adc
mov
movsl
es
push
popa
inc
pop
ds
adc
cmpsl
inc
fists
cmp
shll
addr16
jne
xor
mov
outsb
test
cmpb
add
jno
push
dec
das
jmp
dec
or
test
jbe
and
mov
aaa
ljmp
shlb
add
xchg
fprem
sub
jb
in
lahf
or
or
addb
ja
or
mov
cs
pop
push
xor
cmp
and
call
cmp
shrb
and
dec
lock
stos
xchg
push
mov
sarl
adc
cmpl
push
push
js
pop
xchg
push
fs
ret
lret
mov
xor
or
sub
sbb
ds
jmp
cmp
mov
sub
in
lea
or
fisttpll
push
data16
inc
gs
xchg
movsb
jmp
popl
push
divl
pop
or
sbb
jo
and
push
pop
sub
test
ja
dec
xor
add
sub
pop
je
out
push
loop
mov
aas
popf
add
push
rcrl
ljmp
roll
leave
xor
xchg
sahf
shl
pop
loope
cmp
push
adcl
push
push
and
push
push
or
jecxz
or
imul
outsb
les
jmp
lret
or
push
xor
mov
mov
adc
bound
adc
outsl
lret
mov
adc
mov
je
cld
shr
mov
imul
std
jp
add
mov
gs
sbb
stos
shl
pop
mov
xor
sbb
mov
clc
push
cld
clc
scas
outsl
dec
rclb
mov
test
je
cli
add
out
xchg
out
stos
sub
mov
cmp
jne
fsubrs
test
mov
je
shr
lea
add
shll
pop
mov
mov
and
jmp
lea
xor
repnz
pop
add
push
dec
mov
roll
add
pop
and
pusha
ljmp
and
jmp
adc
pop
pop
clc
and
into
outsb
push
xor
sti
add
in
pop
shlb
lret
cmp
jbe
mov
mov
imul
aas
sarl
cmp
je
fwait
lret
cmpsb
loopne
jno
jno
mov
fs
not
and
jne
mov
xor
sbb
pop
xor
push
jle
pop
dec
pusha
mov
xor
dec
pop
add
and
sub
jne
xor
or
out
outsl
adc
lock
mov
out
imul
pop
dec
or
adc
negl
ss
mov
mov
inc
mov
mov
xchg
and
push
xchg
lods
push
loopne
sti
call
inc
dec
or
jmp
repnz
in
lock
adc
fs
ljmp
push
mov
mov
xor
insb
decl
icebp
nop
add
int
rolb
and
call
cmp
shl
add
mov
jp
adc
aas
gs
cmc
mov
sbb
movsb
mov
lea
decb
adc
inc
outsb
ljmp
and
daa
shll
out
and
and
sarb
insb
hlt
mov
adc
push
lea
and
jbe
insb
jo
loopne
ret
push
loopne
add
insl
or
mov
or
mov
push
out
daa
lock
imul
lock
rclb
pop
test
add
push
add
mov
or
out
push
sarl
add
xchg
cmp
negb
les
sbb
ret
imul
push
mov
mov
and
adc
ret
adc
cmp
xor
int
jmp
orl
mov
orb
mov
and
xchg
push
mov
add
loope
je
movb
inc
dec
stc
ljmp
rorb
incb
pop
mov
add
inc
dec
jne
repz
push
inc
cmp
adc
add
sub
sbb
or
add
xchg
jno
test
add
push
cli
ja
clc
push
inc
ffreep
sub
shr
inc
orl
orl
in
lea
push
out
inc
inc
fdivl
lock
call
dec
jne
push
push
gs
add
inc
mov
sarl
fs
inc
mov
lock
inc
mov
lock
scas
ds
pop
push
mov
jne
or
lds
notl
add
shlb
int3
les
adc
repz
adc
inc
lcall
pop
shr
fisttpll
sub
and
icebp
cs
jnp
stos
mov
and
jbe
mov
adc
clc
cmp
ret
int3
inc
jp
add
pop
cmp
hlt
sar
add
xchg
push
mov
int3
push
pop
inc
lcall
inc
stc
xchg
add
iret
clc
rolb
rcr
sub
pop
add
cmp
fimuls
sub
nop
dec
or
xchg
into
add
xchg
push
add
mov
int3
pop
adc
xor
pusha
push
fstpl
mov
push
lea
jbe
pop
jg
imul
pop
push
jns
cmpsb
pop
push
pop
adc
add
adc
scas
mov
pop
js
and
and
js
cmp
sub
push
mov
push
xor
add
cld
mov
and
inc
and
clc
jl
cmpsb
add
or
loop
pop
sub
pop
xor
push
sar
dec
lock
pusha
push
jp
movsb
pop
not
push
or
jo
inc
cwtl
xor
cmp
pusha
sbb
iret
dec
je
fisttps
add
push
fnstenv
ja
ja
dec
xor
pop
ficoms
add
mov
loope
sbb
arpl
or
mov
and
mov
jbe
mov
inc
lods
push
cmp
lods
push
mov
mov
dec
in
rdmsr
cmp
mov
sbb
sub
jb
add
adc
jp
insb
and
cmp
and
add
cmp
push
push
push
cmc
mov
call
out
adc
jmp
in
rclb
stos
dec
or
out
fldcw
push
nop
cmp
and
sti
mov
push
or
cmp
jb
push
rcrl
sbb
clc
jae
fnstenv
jmp
sub
daa
iret
xor
lock
aaa
fsubrl
lock
lock
fsubs
xchg
ret
or
sub
pop
lcall
mov
cmp
je
mov
ficompl
mov
cmp
lock
and
mov
dec
cmp
dec
xor
pusha
or
data16
mov
xor
test
jmp
dec
mov
and
jne
mov
push
pop
loop
fisubrs
inc
test
inc
push
pushf
mov
sub
jbe
out
icebp
sbb
sahf
push
dec
add
sbb
lcall
pushf
stos
ss
push
dec
cmp
into
in
and
mov
decb
jne
cmpsw
pop
sbb
repnz
jmp
jp
mov
inc
cltd
adc
jne
add
push
and
dec
xlat
into
xor
dec
jp
call
mov
mov
or
pop
fsubrs
xor
sub
jge
roll
jle
push
rcll
or
dec
cld
or
xor
out
push
in
pop
ficoml
mov
out
or
sub
popf
stos
mov
call
pop
addr16
add
scas
and
sbb
mov
lea
pop
or
ds
cmp
push
pop
call
andl
add
add
dec
mov
push
cmp
pop
rorb
filds
push
inc
adc
sbb
adc
push
sub
cmp
mov
inc
andl
and
data16
cwtl
add
pusha
xor
pushf
push
sub
add
or
dec
pop
imull
cmpsl
pop
and
pop
mov
out
pop
ret
sbb
jae
rolb
sub
adc
shll
ret
std
add
mov
xchg
add
xor
jge
push
js
sub
pop
lock
pop
jb
mov
leave
mov
dec
inc
pop
mov
jb
xor
sub
dec
orl
and
movsb
ss
jb
xchg
lret
ret
outsl
sub
or
push
nop
out
xchg
xchg
sbb
jae
fnsave
push
sub
mov
inc
adc
and
lods
loopne
pop
push
sbb
xchg
xor
jbe
jbe
add
sub
aas
mov
jnp
push
adc
xor
push
ret
stos
dec
loope
push
or
inc
and
add
mov
lcall
mov
inc
je
inc
or
push
loopne
punpckhdq
inc
adc
int3
cmp
push
inc
cmp
adc
or
cmp
jbe
dec
movsb
adc
fistl
mov
adc
or
movsb
mov
cs
rorl
mov
or
add
dec
jmp
push
shlb
xchg
adc
pusha
mov
outsb
cmc
icebp
cmp
push
xor
mov
push
dec
int3
and
mov
cmp
push
out
xor
movl
dec
adc
cmc
mov
test
cmp
pop
inc
cmp
jne
or
lea
push
adc
dec
fdivrs
jmp
popf
sbb
pop
je
lods
mov
sbb
int3
add
sbb
xchg
push
rolb
xor
pop
pop
sub
adc
sbb
pop
add
cmpb
xorb
mov
mov
inc
push
push
pop
div
mov
aas
or
sub
add
pop
mov
sbb
test
pusha
ficoms
or
pusha
cwtl
loope
push
fiadds
xchg
dec
imul
hlt
hlt
mov
stos
mov
xor
xlat
cltd
shl
pop
jecxz
daa
and
sbb
pop
sub
call
cmc
in
imul
sub
adc
cmpsl
xchg
pusha
fildl
inc
jge
dec
dec
push
cmp
push
hlt
cmp
je
movl
sbb
sbb
mov
inc
or
fiaddl
movl
add
jmp
adc
push
movb
out
jle
div
pop
jbe
test
inc
data16
xor
lock
arpl
pop
sbbl
in
push
imul
sti
outsb
cmp
shlb
mov
adc
addr16
xorb
push
mov
loope
mov
mov
xchg
push
gs
xor
cmpl
enter
shrl
cmp
je
movl
sbb
call
fsubs
lds
sbb
jecxz
add
dec
add
and
lock
ds
inc
and
or
pop
pop
sub
push
ficomps
mulb
jl
xor
ljmp
andl
orl
cmp
into
cli
adc
daa
lea
push
cmpsb
adc
dec
pop
pop
pop
adc
sbb
bound
mov
mov
arpl
addr16
push
xor
jmp
hlt
aad
xor
cmp
aam
push
xlat
test
movsb
ljmp
ljmp
mov
sbb
jg
add
add
add
test
sbb
adc
sbb
stos
stos
lods
lcall
ja
ja
mov
push
divb
aas
push
stos
jae
mov
fidivrs
mov
rcrb
push
sbb
add
js
lret
jmp
sbb
pop
sbb
mov
mov
cmp
mov
cltd
inc
push
mov
push
inc
add
push
and
pop
or
adc
lcall
jns
jno
and
data16
loope
lods
movsb
sbb
in
mov
adc
in
movsb
push
or
adc
fldt
sbb
sbb
xchg
xchg
xchg
sub
xor
movsb
xchg
xchg
sbb
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
in
pop
pop
inc
aad
adc
dec
xor
and
mov
xchg
cwtl
pushf
shlb
dec
mov
jno
mov
mov
push
cmp
adc
add
hlt
mov
je
clc
and
dec
dec
imul
data16
cld
adc
push
add
xor
int
or
out
push
dec
and
adc
ljmp
pop
or
pusha
stos
insb
pop
ret
jmp
mov
push
jo
add
add
ret
inc
cld
fwait
xchg
cmp
sarb
sbb
dec
jne
adc
jg
out
mov
mov
jle
sbb
and
and
jo
das
add
test
or
add
and
icebp
mov
push
jp,pn
push
xor
adc
jae
mov
dec
leave
adc
adcb
enter
cmp
mov
jne
aad
cmc
loopne
or
jmp
mov
rcll
testb
jne
mov
aam
gs
cmp
or
or
out
jns
rcr
mov
outsl
adc
bound
push
mov
pop
addl
cwtl
or
add
mov
nop
or
lea
repz
mov
mov
subb
mov
arpl
cmp
nop
fdivp
jge
mov
dec
inc
pop
ret
je
orb
loop
adc
imul
jbe
xchg
cmp
push
cmpb
jne
xchg
addr16
and
mov
or
daa
test
push
push
lea
jmp
movb
cwtl
push
loopne
aam
jb
add
fdivr
sub
ss
rolb
clc
aam
fcoms
fsub
fcmovnb
jle
dec
or
add
adc
mov
add
rclb
xorb
dec
or
add
adc
pushl
or
ret
mov
int
jmp
pushf
sti
or
aaa
mov
dec
insb
add
shll
jecxz
fdivrs
jne
lret
lock
loopne
mov
push
mov
inc
mov
ja
mov
mov
outsl
fbstp
mov
xchg
sub
je
or
je
dec
test
aaa
mov
cmp
push
mov
jmp
loopne
lcall
pop
pop
das
pusha
inc
ret
pop
xor
sbb
inc
popf
je
push
in
rolb
jo
cld
scas
add
cltd
xor
mov
dec
aaa
in
jnp
jl
mov
jne,pn
sbb
inc
cs
andb
lea
es
fcoml
mov
sbb
add
cmp
jge
or
and
mov
adc
cmp
outsl
rorb
fcomps
push
push
dec
sub
add
mov
insb
int3
and
inc
addb
xor
sub
arpl
sub
cmp
hlt
inc
push
test
clc
cmp
mov
or
daa
jmp
add
sub
adcl
pop
pop
test
push
int3
push
sbb
fdivl
sbb
lret
mov
ret
xchg
sub
push
adc
push
add
stos
ss
sbb
mov
add
add
jns
ret
sti
xchg
add
mov
addr16
or
out
or
cmp
lods
xor
daa
stos
sbb
sub
sub
sbb
dec
sbb
push
or
add
inc
insb
sub
push
div
jne
orl
and
mov
or
fldenv
cltd
std
adc
add
adc
cld
aas
repnz
adc
inc
rorl
jb
pop
dec
into
jl
xorb
or
adc
inc
call
sub
xchg
dec
mov
das
mov
pusha
movsl
mov
cs
sub
lock
inc
imul
mov
jecxz
or
and
cmp
push
jo
rolb
add
add
jb
sbb
add
mov
pop
xor
jbe
push
pop
les
leave
fidivrl
in
nop
ss
or
jbe
inc
out
jae
mov
pop
pusha
dec
xor
mov
and
addr16
insl
cld
ja
orl
dec
sbb
mov
cmp
mov
mov
fistpll
or
and
push
std
inc
sbbl
mov
dec
cmp
out
xor
adc
jge
xchg
dec
cmc
and
pop
mov
test
hlt
das
int3
adc
or
dec
push
sbb
push
cmp
idivl
rcl
push
hlt
sub
inc
stos
or
or
and
or
cli
xchg
pop
pop
fdivrl
sbb
mov
inc
arpl
jmp
loope
int
or
push
scas
xor
sti
inc
daa
mov
dec
pop
jecxz
ja
add
aam
out
xor
sbb
lds
dec
es
hlt
or
push
pop
adc
mov
adc
cltd
adc
add
test
jne
xorl
push
ljmp
push
dec
push
mov
pop
ja
sub
mov
cmp
insb
jae
in
je
pop
ja
dec
je
dec
add
jno
add
and
inc
repnz
cmp
lds
lock
out
add
dec
jle
mov
lea
cli
mov
lret
jbe
mov
ds
dec
test
or
inc
pop
mov
xchg
sbb
mov
cmpsb
dec
out
pop
fwait
mov
addl
adc
repz
push
ret
icebp
cwtl
adc
cmp
inc
mov
fwait
push
mov
inc
cli
pusha
sbb
rolb
in
xchg
or
stos
pushl
or
rol
fidivs
dec
adc
in
and
push
sbb
imul
jo
add
cs
cmp
or
push
add
add
pop
inc
push
inc
inc
out
pop
xchg
inc
pop
fiadds
dec
and
inc
add
dec
call
dec
call
inc
dec
fs
hlt
jle
cmp
ss
popf
out
stc
je
sub
add
or
cmc
add
push
fldenv
xchg
nop
in
sbb
or
cli
je
lea
into
in
push
push
dec
xlat
shll
jg
int3
sbb
rcrl
inc
adc
test
ficompl
test
inc
add
add
je
push
pushf
mov
rcrb
push
sub
and
jl
aad
loopne
test
or
add
or
inc
add
es
dec
and
fisttps
sub
jmp
test
or
out
add
cwtl
fsubs
sub
pop
cmp
xchg
or
jno
pop
or
and
lea
out
pop
adc
pop
sub
aad
mov
cs
mov
cwtl
jg
jns
int3
je
add
lret
mov
push
add
push
xor
adc
sbb
je
imul
dec
mov
lock
lods
jmp
and
pop
lret
pop
loopne
shlb
nop
push
js
and
int
lock
adc
outsb
inc
rcll
adc
mov
adcl
addr16
adc
daa
incl
leave
out
lea
push
cmpsb
jle
cmpl
or
push
ljmp
jle
pop
insl
inc
out
xchg
aas
xor
loopne
sub
incl
sbb
cmp
pop
fstpl
add
pop
fisttps
dec
ret
test
and
push
cmp
sub
adc
xor
pop
cmp
je
cmp
mov
adc
or
adc
int
inc
dec
add
add
lds
push
cltd
pop
xor
mov
dec
test
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
repnz
add
cmp
jae
enter
insl
jb
movsb
cmp
jbe
pop
and
and
aaa
or
adc
fldcw
add
add
adc
pushl
mov
sbb
xchg
push
sbb
xor
add
dec
imul
xlat
jne
cwtl
into
insl
jge
mov
or
fdivrs
adc
push
cmp
jns
aas
les
dec
xchg
hlt
mov
sbb
aam
add
ss
js
sub
pop
movb
add
adcl
mov
std
mov
and
shrb
or
jl
iret
lods
movsb
adc
es
xchg
jo
sub
es
sbb
popf
push
push
fimull
push
push
cwtl
mov
add
xor
mov
dec
cmp
mov
movsb
jb
dec
test
mov
inc
iret
jge
je
adc
push
in
push
pop
leave
jne
shll
jo
cld
fdiv
inc
jmp
push
xlat
add
push
iret
or
add
sbb
pop
add
imul
xchg
push
gs
or
mov
in
and
add
dec
fldl
loopne
enter
aad
test
xor
fmull
or
gs
jg
cwtl
sti
adc
jg
mov
mov
movb
je
aaa
int
lcall
add
inc
inc
jo
xor
add
push
push
pop
or
rcrb
or
push
pop
pushf
outsl
pop
pop
mov
insb
add
stc
cli
or
add
lock
cli
ror
fists
or
je
xchg
scas
das
cmc
stos
ds
mov
mov
into
es
push
pop
subb
clc
out
mov
push
cmp
ja
add
cmp
adc
cmp
jne
jae
pop
add
adc
cmc
jnp
fidivrl
dec
inc
leave
icebp
out
adc
addb
ja
add
popa
mov
jne
cmp
or
clc
or
or
stc
cmc
insb
in
movsb
push
in
int
mov
and
stc
test
inc
gs
test
test
nop
lahf
or
pop
dec
addb
test
cmc
dec
and
lea
adc
pop
mov
imul
mov
pop
fdivl
cmp
and
mov
out
or
cmp
add
adc
add
es
jg
mov
xchg
cmp
jle
add
add
sub
adc
outsl
push
inc
xorl
hlt
mov
and
stc
stc
add
push
icebp
xor
enter
mov
dec
push
hlt
dec
sbb
mov
mull
jb
jne
inc
mov
dec
insl
adc
lcall
jmp
push
push
lock
sbb
or
pop
dec
mov
fistpll
out
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
mov
call
jle
mov
inc
lds
arpl
cmp
or
jbe
or
loope
into
adc
adc
or
inc
lods
adc
dec
aam
test
inc
or
mov
adc
pop
test
repz
mov
movl
mov
rorl
cmp
jno
lods
test
push
loopne
push
in
mov
jmp
cmpsb
xchg
mov
cmpl
inc
repnz
pop
test
out
mov
pop
push
xor
mov
loope
test
pushf
loope
leave
push
loopne
push
loopne
pop
inc
test
in
mov
leave
and
shr
add
adc
lret
outsl
jp
fsubl
hlt
daa
fsubs
sbb
xchg
inc
sbb
push
es
clc
jmp
aam
mov
lea
adc
fcmove
push
pusha
push
pop
mov
cltd
enter
dec
inc
fisubl
and
pusha
xor
pop
adc
jmp
jae
roll
test
inc
jmp
inc
adc
push
push
push
js
aas
mov
or
sub
jge
push
push
ret
test
imul
sbb
xlat
aaa
imul
add
mov
or
aam
fsts
mov
pop
sub
fsubrs
mov
jmp
fsts
xor
mov
inc
fwait
mov
or
or
shrl
cld
add
loope
lods
lock
dec
mov
jmp
xor
lods
lahf
push
cmp
push
sub
test
adc
pop
ret
sbb
sbb
mov
mov
fisubl
sbb
mov
in
push
inc
pop
pusha
inc
imul
clc
mov
test
add
adc
and
pusha
jns
cmp
dec
sbb
dec
shll
incb
fisttps
loop
test
sbb
enter
xor
sahf
cmc
sub
mov
cs
test
jb
jl
jb
lea
loop
jne
ss
int3
or
dec
ffree
imul
lock
mov
mov
ss
cmp
loopne
pop
cmp
stos
push
shl
jmp
mov
loop
jge
fisttps
frstor
mov
sub
sub
js
mov
jmp
mov
mov
inc
pop
adcb
leave
inc
xchg
add
js
sbb
jae
dec
pop
inc
sar
fsubl
push
ficompl
pop
mov
add
sub
dec
nop
inc
add
mov
inc
and
and
push
jno
mov
xor
pushl
popa
or
push
and
xchg
mov
cmpsb
dec
in
or
pushf
add
btc
sub
cmp
loopne
xor
push
inc
push
loopne
popa
adc
mov
or
in
adc
fisubs
pop
sub
cmp
cld
or
shr
incl
testb
inc
mov
cmp
je
movzwl
es
jle
lock
or
or
or
sbb
fst
imul
inc
data16
ds
push
les
aam
push
fs
push
jmp
jns
mov
cld
lds
popa
fdivr
lea
pop
ret
mov
or
ret
out
orb
scas
es
sub
out
mov
lret
je
push
sub
mov
fsubs
ret
shl
push
adc
or
dec
xor
adc
or
incl
iret
xor
jo
and
xchg
fstpl
dec
xchg
inc
jp
out
jne
lods
inc
daa
orl
ss
and
jecxz
daa
mov
out
fcmovbe
jb
adc
or
aam
xchg
pop
addr16
outsb
or
xor
rolb
inc
adc
add
and
fadds
or
nop
or
xor
mov
loop
pop
xor
movl
insb
shl
fisubrs
or
jb
jp
mov
xor
push
mov
pop
dec
loope
lods
mov
pop
fcoml
shlb
mov
and
in
mov
xchg
ret
outsb
ret
sbb
ja
add
lret
aas
popf
pop
pop
xchg
cmp
jl
inc
mov
ret
or
push
inc
mov
or
pop
push
enter
outsl
je
add
adc
push
lods
inc
sub
inc
fstpl
mov
push
movsl
into
adc
xor
pop
fadd
hlt
daa
and
mov
sbb
mov
mov
mov
rcr
add
dec
in
iret
sub
loop
shlb
cld
mov
stc
lods
mov
mov
scas
fs
xor
mov
xchg
jmp
adc
push
sti
mov
cmpb
mov
xor
imul
dec
in
push
fistl
inc
inc
mov
in
and
push
jae
lods
movsb
int
cmp
mov
lahf
mov
add
push
xchg
mov
adc
add
or
push
dec
cmp
dec
add
idiv
pop
bound
and
insb
outsl
arpl
imul
arpl
jg
fs
popa
imul
push
fs
pop
je
jns
dec
dec
inc
imul
lcall
pop
dec
ja
js
outsb
push
dec
jne
dec
push
inc
jne
ja
inc
inc
je
inc
push
data16
pushl
inc
push
fs
pushw
jns
pop
dec
pop
dec
push
dec
inc
jns
push
dec
push
gs
push
ljmp
jmp
dec
pop
dec
imul
push
inc
fs
push
je
dec
push
dec
pop
push
pop
pop
push
dec
inc
xchg
cli
push
je
push
jne
jb
push
imul
dec
jno
mov
dec
push
push
push
imul
je
dec
push
arpl
jbe
dec
dec
push
insb
dec
fs
push
cmp
js
push
inc
dec
je
xor
push
xchg
popa
dec
jp
jp
pusha
push
inc
inc
dec
inc
push
jb
js
pop
inc
mov
mov
inc
cld
call
push
popa
dec
jp
insl
inc
jns
imul
inc
jo
dec
insl
gs
je
push
imul
bound
pop
fmull
dec
inc
ja
gs
dec
js
jno
jo
push
ret
pushl
push
jbe
push
dec
push
inc
imul
push
arpl
ja
jp
dec
dec
addr16
jnp
add
inc
gs
gs
jo
push
inc
lret
or
dec
outsb
push
pop
adc
addr16
inc
jno
mov
bound
jno
dec
push
outsl
inc
jp
imul
push
jle
data16
mov
dec
jb
inc
pop
js
insl
and
in
pop
xor
outsb
jbe
ja
je
dec
inc
pop
outsb
fs
addr16
dec
jg
mov
inc
jo
popa
js
push
inc
inc
js
jne
dec
fs
push
push
push
push
jo
push
jno
dec
dec
bound
push
jb
inc
je
fs
outsl
je
clc
jg
jbe
push
inc
dec
enter
dec
bound
jns
push
arpl
fistps
faddp
addr16
dec
bound
push
push
pop
inc
cmp
data16
pop
sti
jmp
dec
dec
ja
inc
jne
ja
push
push
fmuls
pushw
gs
addl
mov
dec
push
sbb
std
add
pop
push
push
jge
cmp
dec
jno
pop
pop
push
add
xor
mov
dec
push
add
inc
outsl
sti
mov
push
jbe
jbe
pop
pop
mov
adc
jns
js
and
mov
push
das
xchg
daa
push
cld
inc
lock
je
push
je
ss
pop
lods
imulb
add
into
jns
pop
push
outsl
addr16
lea
iret
push
mov
mov
mov
out
push
push
inc
add
mov
pop
push
jb
jbe
jne
gs
daa
mov
push
xchg
dec
fstl
push
aas
daa
fidivs
pop
aas
and
or
popa
jns
das
addr16
inc
insb
xchg
out
xchg
jp
pop
mov
aas
pop
ja
in
pop
add
sub
gs
and
pop
out
outsb
je
insb
cs
push
movsb
adc
push
push
outsb
in
jp
mov
sub
arpl
mov
dec
adc
rorb
shlb
popa
and
mov
stos
dec
andb
xor
push
ljmp
add
push
jmp
out
cmp
jmp
call
pop
dec
push
std
lcall
push
dec
inc
pop
jnp
inc
inc
cmp
xor
sub
sub
out
mov
aaa
sub
xor
inc
aaa
inc
jge
dec
outsb
jo
lods
addb
cmp
push
add
add
lds
mov
imul
adc
mov
add
ljmp
jo
and
sbb
sub
mov
inc
outsb
arpl
gs
outsl
in
pop
lock
dec
and
push
add
dec
add
add
add
fcmovnu
adc
add
inc
insb
jae
mov
gs
pop
inc
push
jb
dec
daa
ja
pop
pop
pop
sbb
or
or
push
movups
adc
call
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
clc
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
filds
ss
push
pop
pop
pop
pop
pop
aaa
cld
or
pop
pop
pop
pusha
popa
bound
addr16
imul
jno
mov
decl
js
jp
jl
jle
add
add
add
xchg
scas
xchg
inc
and
adc
in
push
test
adcl
in
add
stos
ljmp
dec
push
test
add
add
mov
cltd
add
pop
test
push
incl
adc
pop
pop
cmp
aaa
add
addb
lahf
push
fimull
and
add
incl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
cld
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
loope
add
xor
jmp
movsb
fsubs
jne
xor
push
cmp
std
jg
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
dec
popa
outsb
dec
mov
inc
bound
jb
jo
or
dec
add
inc
jne
push
gs
arpl
cmp
icebp
je
outsl
jbe
xchg
jb
js
je
fwait
insl
rorb
gs
insl
add
xor
mov
out
jb
add
add
push
jb
outsb
je
insl
and
push
adc
jb
or
jg
ja
push
push
and
inc
add
inc
mov
and
xor
adc
and
jo
hlt
inc
insb
imul
sub
ljmp
je
gs
jo
and
insb
outsl
es
push
pop
mov
mull
mov
xor
stos
popa
cmpsb
es
jns
or
xorb
fldt
popa
arpl
sbb
pop
mov
pop
xor
and
insl
push
xchg
dec
lock
pop
aas
xor
and
jne
dec
mov
mov
jo
rolb
les
out
fisttpl
xor
add
fs
xchg
and
jbe
mov
mov
sbb
jp
push
push
jl
ficomps
fs
or
addr16
mulb
jns
je
and
push
loopne
test
ds
gs
popf
jb
je
outsl
mov
sbb
jp
push
daa
sub
dec
imul
insb
jb
cmp
add
sbb
dec
popa
sbb
mov
loopne
ret
mov
imul
out
xor
int3
or
inc
inc
inc
push
pop
add
pusha
mov
xor
mov
mull
xor
fadd
push
push
fistps
push
or
pop
aaa
xor
ss
shll
mov
sbb
add
add
imul
nop
ss
fs
jo
cli
jbe
inc
and
mov
xchg
push
mov
sbb
das
mov
inc
lock
sarl
dec
je
in
outsl
jo
xlat
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
push
inc
aaa
xchg
mov
ljmp
das
pop
mov
outsb
popa
pop
or
push
jmp
rclb
push
leave
nop
xor
sub
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
js
pusha
jo
sub
push
mov
rorb
fsubrs
push
sub
lret
inc
sub
pop
in
jne
jo
jmp
add
jp
movsb
cmp
sub
inc
jne
jno
dec
arpl
out
gs
dec
and
fmuls
arpl
in
sbb
add
mov
or
cs
xchg
xchg
push
add
mov
xor
jbe
dec
lock
scas
dec
bound
mov
lock
mov
push
daa
inc
ss
movsb
and
sbb
repnz
xor
imul
ds
in
push
movsb
and
pop
mov
fimull
mov
add
loopne
dec
adc
cmp
cmp
aam
addr16
jbe
mov
addl
fisubs
jbe
push
push
push
cmp
lahf
fs
and
arpl
mov
xor
push
pop
add
gs
adc
mov
daa
lret
pop
push
dec
lahf
pushf
rorl
lock
inc
xchg
sbb
jnp
pop
pop
push
push
jae
loopne
mov
cmp
cmp
sbb
jae
addr16
subl
ja
mov
data16
xchg
mov
pop
bound
push
push
push
dec
testl
mov
int
dec
je
outsb
pusha
cmp
push
ret
push
fildll
dec
jge
lcall
and
shl
xor
xor
fistpll
xchg
inc
outsl
jae
pop
cmp
in
xchg
jg
inc
adc
inc
popa
cmp
adcl
push
pop
aaa
mov
pusha
push
or
aad
sbb
je
outsl
xchg
or
arpl
daa
xchg
mov
data16
jns
arpl
pop
cmp
cmp
add
idivl
xor
sub
cmp
push
addr16
jle
sub
xor
in
dec
sub
push
push
cmp
add
sub
ds
add
sub
sub
in
popf
xlat
pop
sub
mov
cmp
xchg
add
push
cmp
and
add
xchg
dec
pop
pop
test
addr16
xor
xor
ss
mov
push
fcomps
test
xor
int3
cmp
jo
sub
mov
sub
lahf
addr16
mov
rolb
iret
repz
enter
out
repz
stos
ds
lret
movsb
mov
push
sahf
out
ficomps
mov
out
js
jo
push
fs
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
out
sahf
adc
add
hlt
mov
call
repz
repz
jl
cmp
out
sahf
out
mov
sahf
out
sahf
push
xor
and
or
sarl
shlb
xor
loopne
out
sahf
cmpsl
les
std
cs
or
cmp
cmp
mov
fs
dec
and
jns
add
in
mov
adc
push
dec
push
inc
rolb
adc
push
gs
ja
cmpsb
mov
push
sub
je
hlt
jne
xchg
xchg
outsb
gs
hlt
call
ljmp
push
fistps
into
mov
into
cmp
jns
jg
addr16
pop
add
xor
hlt
adc
jb
daa
push
movsb
daa
shlb
sbb
out
sahf
dec
dec
mov
sahf
jbe
jae
pop
dec
inc
aas
add
jp
lea
ja
cmp
pop
sub
das
push
cmpsb
jb
dec
cli
hlt
sbb
fcmovnb
ss
push
inc
arpl
push
sub
daa
pop
lea
ret
mov
imul
push
push
inc
push
cli
inc
dec
dec
lds
out
cmp
adc
push
mov
gs
adc
jb
add
test
adc
and
add
inc
add
inc
mov
push
lock
das
pop
dec
in
ret
cmpsl
jge
push
scas
add
push
or
push
and
push
add
aas
and
outsl
inc
add
je
add
orl
lahf
pop
jnp
subb
insb
push
jl
mov
cmp
ds
mov
add
daa
add
push
in
lds
or
mov
xchg
insb
dec
enter
adc
and
xor
lods
and
outsl
mov
in
daa
add
and
sahf
mov
test
add
mov
rcr
push
and
ja
mov
lock
cli
push
js
pushf
std
xchg
and
out
ss
pop
push
adc
inc
pop
sahf
out
sahf
jo
cwtl
mov
or
and
xor
adc
cmp
pusha
dec
mov
xor
ja
aas
pop
movsb
cmp
insb
scas
add
jl
mov
aas
cmpsl
adc
push
or
xchg
lahf
out
roll
iret
dec
cmpb
xchg
xchg
pushf
dec
push
fs
repnz
pop
mov
mov
out
iret
mov
push
add
mov
stc
cmp
adc
add
popa
dec
push
cmp
bsf
xchg
pop
je
aas
pop
or
nop
dec
enter
lds
ds
inc
pop
out
mov
imulb
aaa
sub
mov
rorl
mov
cmp
scas
cmpsb
es
lahf
decb
out
sub
push
pop
out
or
scas
jns
aaa
dec
aam
or
leave
rorb
ret
mov
fsubs
jmp
inc
jbe
push
inc
pop
inc
adc
aaa
leave
mov
daa
movsb
and
in
push
aas
mov
jl
das
jg
out
fdivrp
adc
sub
push
jg
fsts
adc
lret
and
lret
mov
scas
sbb
pop
insl
out
pmaxsw
pop
std
dec
repnz
mov
inc
jne
mov
xchg
pop
enter
leave
mov
mov
add
pop
and
aas
and
rorl
sub
das
es
jb
xor
int3
icebp
inc
repnz
adc
cmpl
rcrb
inc
jg
dec
enter
inc
lcall
nop
dec
mov
cmp
add
popf
dec
push
popf
dec
arpl
arpl
jo
mov
into
jg
jbe
pop
jo
cmpb
xorb
mov
test
lcall
fstpl
aaa
add
fdiv
int
data16
or
in
sub
fwait
aaa
les
into
pop
and
inc
ficoml
xchg
cld
scas
xor
ja
add
popf
pop
dec
into
push
test
add
adc
or
xchg
sub
sahf
cmp
rorl
or
icebp
jo
inc
pop
add
outsb
jbe
mov
mov
mov
jns
dec
pop
sti
push
xorl
xor
lcall
aas
or
jne
adc
push
jns
or
sub
xor
and
cmp
outsb
xor
jns
sbb
jg
lcall
daa
jns
pop
push
push
pop
mov
icebp
mov
mov
std
xchg
push
cmc
lods
dec
mov
stos
inc
sarb
mov
jne
adc
nop
xchg
inc
mov
call
lea
mov
test
push
cmpsl
push
mov
jae
fs
hlt
nop
inc
stc
addr16
enter
adc
sbb
push
sub
add
jne
arpl
lcall
or
push
imul
push
dec
push
ret
clc
rcr
gs
pop
add
out
xchg
jg
ja
dec
dec
inc
dec
ja
dec
dec
sar
fwait
jno
inc
je
inc
sub
fistpll
inc
je
push
sahf
mov
repnz
aaa
mov
jl
pop
out
add
sub
call
cli
inc
jne
ljmp
dec
or
inc
enter
dec
sub
add
insb
jle
ret
jb
shlb
dec
or
adc
and
adc
add
dec
pop
add
incb
fs
gs
add
jo
inc
push
dec
push
xor
add
fbld
xchg
push
inc
sahf
je
fs
lods
je
mov
nop
addr16
add
aaa
ret
push
xchg
jl
inc
jp
mov
or
les
and
push
imul
sbb
dec
inc
and
pop
dec
jp
lcall
dec
push
sub
inc
test
aas
push
adc
dec
adcb
mov
int
lods
sahf
jb
out
jae
cwtl
and
and
inc
out
push
mov
stc
js
lods
add
insl
xor
or
mov
ljmp
cmpsb
cmpsl
mov
fwait
mov
mov
js
je
push
ret
test
adc
stc
jmp
xchg
pusha
pop
jp
or
xor
fnstcw
jno
loopne
stos
lret
or
call
ds
pop
ret
popf
dec
xchg
std
or
mov
dec
inc
fwait
call
push
daa
shll
pop
lds
dec
pop
pop
xchg
pop
les
bswap
dec
call
es
xchg
jp
mov
and
push
xlat
cmove
push
decl
and
add
les
add
and
pop
xlat
lcall
xor
sub
lds
pusha
dec
inc
cltd
add
cwtl
mov
pop
jnp
loop
push
inc
idivb
mov
adc
arpl
xor
sbb
cmp
inc
xor
adc
adc
xor
lret
inc
or
push
stc
das
jmp
mov
dec
icebp
mov
adc
pop
and
inc
push
jmp
or
scas
dec
jo
mov
lcall
fxch
push
paddd
outsl
and
sub
cmp
xor
push
imul
push
ret
cmp
sbb
dec
push
les
jg
int
mov
dec
pop
inc
les
adc
mov
jo
mov
jmp
sbb
shrb
inc
and
and
xor
add
stos
aaa
ja
pushl
call
es
cmp
dec
add
inc
fsts
ljmp
shlb
and
fstl
ja
emms
je
jns
pop
out
and
lcall
mov
xor
out
xchg
inc
in
cmp
inc
cld
xchg
adc
sbb
mov
je
ljmp
call
add
xor
sub
inc
xchg
push
push
cmpsl
xchg
mov
ljmp
lcall
lea
out
insl
js
aam
adc
and
sub
ljmp
jmp
dec
add
and
jne,pt
and
jg
mov
adc
push
mov
jne
lods
push
ja
lahf
ljmp
pop
cld
sbb
pop
bound
pushf
movb
add
das
mov
cmpsl
mov
cmpsb
popf
mov
and
data16
lcall
decl
jge
sahf
mov
inc
sub
xor
adc
outsl
push
pop
sub
sbbl
mov
lea
adc
sub
xchg
inc
lods
fadds
pusha
fsubl
push
jge
cmpl
push
movsb
xchg
dec
xchg
mov
jmp
mov
incl
push
sub
cwtl
adcb
jbe
fwait
mov
std
call
loopne
imulb
and
cmpsb
imul
mov
inc
aam
mov
jb
enter
adc
outsb
mov
gs
call
mov
inc
inc
push
rcrb
pop
adc
lea
orb
jg
shrl
les
lret
and
sbb
dec
inc
jns
sub
ljmp
jns
mov
push
dec
cmp
pop
outsl
and
adc
mov
inc
jno
mov
lcall
pushf
and
jo
inc
and
nop
xchg
loope
arpl
push
cli
sub
pop
jge
outsb
ljmp
mov
or
daa
inc
addr16
jle
ja
daa
les
lcall
xchg
adc
fs
add
icebp
scas
pop
scas
or
decl
dec
out
and
outsb
icebp
or
roll
push
fmuls
test
xchg
mov
xchg
sub
inc
loopne
data16
push
jo
clc
xchg
mov
inc
push
decl
cmp
sbb
repz
adc
aas
jb
and
cs
pushl
xchg
xlat
xchg
jg
subl
and
leave
jmp
xlat
mov
jmp
cmp
leave
adc
xor
popa
pushl
jg
adc
fcmovu
push
les
in
push
outsb
dec
xchg
pop
lret
jmp
aaa
pop
adc
sub
jns
out
int3
mov
fsts
push
push
lcall
jl
jge
daa
pop
ljmp
dec
mov
lea
fadds
dec
push
test
jno
pusha
sub
fbstp
in
lahf
cmpsl
movsl
mov
and
test
icebp
stos
cld
imul
jne
sub
xchg
iret
and
inc
cli
mov
arpl
dec
scas
mov
jmp
cmp
dec
cmp
pop
pop
jno
movsl
push
xor
mov
out
add
fabs
jne
adc
push
fwait
jle
incl
or
add
iret
mov
les
outsl
lahf
nop
cmpsb
pushl
sti
pop
insb
inc
les
push
outsl
decl
fs
out
dec
inc
ret
and
lock
ljmp
fisubl
lahf
sub
xchg
into
pop
jle
in
adc
xchg
mov
push
push
dec
rcll
mov
repnz
sbb
je,pt
dec
mov
xor
inc
lock
xor
pop
ret
repz
pop
pop
xchg
add
inc
xchg
sbb
lods
dec
push
loopne
inc
mov
cmp
call
test
push
push
inc
repnz
sbb
pop
xor
mov
adc
add
xor
decl
mov
inc
lea
mov
mov
mov
ljmp
cs
imul
data16
mov
ljmp
in
sbb
inc
sbb
or
test
shll
or
jg
call
add
stos
mov
rorb
push
jle
arpl
cltd
cmpb
jmp
pop
filds
dec
pop
and
inc
adc
scas
dec
mov
push
push
mov
add
or
xchg
xchg
push
adc
mov
or
adc
das
pop
clc
push
jl
add
iret
xor
stc
adcb
stos
adc
jp
icebp
inc
incl
and
mov
cli
scas
jnp
test
sbb
cmpl
scas
scas
xchg
or
inc
mov
arpl
mov
push
sti
sub
xor
mov
jg
or
scas
jp
dec
xchg
or
outsl
mov
je
pop
fs
cmp
mov
inc
imul
pop
clc
lahf
adc
pushf
test
stc
jmp
mov
jb
test
sti
pop
data16
jle
add
mov
jo
mov
loopne
imul
aas
xor
inc
out
popl
mov
push
pop
andb
test
pushf
mov
jg
fbld
test
fs
stc
jg
and
mov
bound
subb
enter
dec
call
pop
ret
les
lret
scas
shll
popa
sub
jmp
adc
pop
pop
xchg
jle
inc
sbb
pushf
jbe
leave
or
mov
xlat
add
cmp
cmp
add
pop
jp
xchg
lret
test
inc
lahf
jno
decl
ret
cmp
lea
out
arpl
imul
inc
adcl
cmp
popa
aad
dec
mov
jge
push
adc
aas
into
es
xchg
repz
ficompl
test
xchg
movsl
fwait
cmpsl
xor
gs
imul
xor
jge
jbe
nop
lods
in
out
jle
push
push
clc
and
lods
dec
jg
inc
in
pop
or
jmp
push
and
scas
enter
rolb
lods
mov
es
xchg
aaa
incl
faddl
imul
aaa
jl
pop
pop
cmp
insl
push
leave
call
pop
fcomip
aas
add
stos
cmp
fstl
push
push
sbb
out
cli
jmp
fwait
jmp
push
aam
cmpsl
add
xor
or
or
pop
cmp
insb
les
adcl
add
clc
xchg
stc
pushl
in
xchg
jb
xadd
mov
mov
cli
adc
sub
repz
add
in
mov
fisubl
insb
icebp
inc
out
pop
dec
add
sbb
lock
js
jne
fldt
sub
lcall
inc
dec
insl
mov
adc
inc
xchg
es
push
jecxz
sbb
lods
adc
push
aam
dec
mov
cld
lcall
lock
adc
and
xor
sbb
cwtl
cmpsl
shlb
std
incl
test
or
pusha
popa
or
pushw
jmp
mov
in
push
movsb
outsb
jb
push
xchg
stos
movsb
mov
pushl
sbb
add
cltd
in
das
jno
or
inc
lods
pop
inc
insb
push
inc
adcb
ljmp
frstor
inc
fdivl
inc
fbld
inc
lods
clc
mov
fwait
and
call
lods
lock
dec
dec
lahf
pop
inc
test
dec
dec
fstl
pop
jp
addr16
add
int3
nop
sahf
push
imul
decl
out
pusha
out
nop
lods
push
dec
cmp
sub
add
mov
dec
inc
push
or
incl
loop
jb
and
or
mov
ljmp
mov
sub
lds
mov
and
ljmp
push
int3
jno,pt
cmp
nop
shll
inc
out
sub
test
test
incl
test
pusha
data16
sub
inc
ss
push
mov
add
inc
stc
mov
jl
sbb
popa
decl
mov
and
and
ja
aaa
jge
jbe
jno
xchg
clc
orps
test
pop
in
ss
inc
ds
lcall
mov
xchg
mov
pop
sbbb
mov
popl
popf
lahf
sbbl
mov
outsl
or
jecxz
inc
xor
and
fcomps
stos
push
push
xchg
xchg
fiaddl
and
push
push
adc
jmp
push
mov
in
push
inc
shrb
inc
dec
push
arpl
pop
push
sub
adc
incl
push
insb
cmp
adc
cmpsb
data16
in
jae
jl
ficompl
jg
mov
adc
scas
rclb
stc
hlt
inc
jl
sar
mov
ret
mov
add
inc
imul
jno
lahf
dec
adc
ds
fisubrs
dec
inc
ja
shrl
mov
les
xor
xor
ret
ljmp
jg
out
dec
xor
xchg
and
and
ret
sub
in
sbb
call
in
add
cmp
fistps
pop
adc
rorl
repz
ret
jo
cmp
cltd
addr16
out
pop
shl
ljmp
jns
insb
adc
ret
jns
mov
push
sub
popf
clc
fildll
movsb
out
push
push
insl
cmp
inc
inc
sbb
lahf
jbe
stos
pop
dec
cmc
pop
dec
push
mov
push
neg
cld
ljmp
shlb
pop
add
stos
mov
inc
and
and
pop
push
fidivl
arpl
out
pop
push
insb
pop
fstpl
add
push
jbe
lds
push
shrb
lcall
and
nop
mov
les
push
inc
data16
mov
pop
dec
es
xor
adc
xchg
or
stc
jns
call
push
sbb
gs
mov
lods
xor
insl
mov
bound
decl
popa
sub
sbb
insb
std
jbe,pt
add
mov
cmpsl
outsb
fsub
inc
lret
ljmp
rcrl
pop
and
je
rorb
pop
lret
pop
inc
imul
js
lcall
dec
lcall
stos
jnp
inc
adc
lods
mov
inc
data16
pushl
shlb
push
push
inc
jno
ljmp
pop
push
or
sarb
inc
push
fs
fwait
lcall
das
jge
bound
push
jno
pop
outsl
adc
jmp
jmp
bound
movsb
xor
push
imul
push
ret
cmc
inc
xlat
sub
add
push
adc
adc
xchg
adc
pop
sti
mov
push
mov
adc
dec
je
popf
jg
inc
cmp
cmpsb
xchg
inc
xchg
adc
push
ja
jge
outsb
and
sub
dec
pop
mov
push
loopne
mov
dec
ss
repz
in
addb
mov
push
xchg
das
push
pop
bound
outsl
jle
cmp
xor
xor
repnz
je
pop
aam
push
xor
fdivrl
mov
in
fdivrl
xchg
and
sbb
mov
jnp
xor
or
loopne
clc
sbb
sub
pop
dec
fsubrl
pop
fmuls
pop
loopne
fwait
call
lock
sub
js
stos
sbb
outsb
jle
ljmp
and
inc
jl
mov
or
xor
push
lcall
jb
jns
addb
adc
insl
inc
dec
arpl
mov
aam
add
adc
icebp
mov
adc
bound
decl
sbb
push
inc
push
push
into
cmp
arpl
outsb
daa
push
insb
dec
insb
cli
mov
insb
jno
movl
out
adc
pushl
adc
mov
jae
add
jle
dec
adc
mov
clc
and
adc
mov
mov
push
dec
or
push
subb
arpl
push
sub
fcomip
ljmp
adc
add
pop
lahf
enter
mov
and
fldenv
inc
inc
and
testl
nop
bound
or
fs
incl
push
mov
addr16
jns
mov
in
cmpsb
mov
push
insl
js
gs
lcall
mov
sbb
add
jo
andb
in
add
std
mov
sub
inc
fwait
cmpsb
push
and
push
std
iret
fwait
add
xchg
or
mov
popa
pop
call
push
sbb
jne
lods
inc
aas
inc
pop
hlt
lea
add
jbe
adc
ljmp
fidivl
jb
sbb
ss
add
sbb
xor
sbb
jo
lods
fdivr
ja
inc
sbb
dec
pop
push
sahf
and
push
out
mov
push
testb
cld
popa
push
fwait
mov
les
call
fsubl
sub
outsb
and
mov
notb
push
pop
inc
cltd
mov
xchg
mov
mov
jmp
push
outsl
outsb
sbb
pusha
out
inc
ja
fists
fistpl
mov
cld
sub
jle
lock
jmp
mov
jg
bound
iret
repnz
dec
inc
leave
pop
dec
pop
lods
roll
mov
lcall
dec
outsb
notb
into
mov
mov
addr16
fbstp
or
dec
js
js
or
and
inc
mull
jg
les
lea
ja
imul
fistpll
inc
arpl
insl
push
push
jae
xor
sub
stc
hlt
pop
loopne
xchg
adc
rolb
inc
push
ret
icebp
incl
add
mov
dec
rorl
dec
loop
push
cmp
mov
mov
push
cmp
mov
incl
mov
inc
push
jbe
dec
inc
and
xor
jle
test
sar
icebp
lock
inc
scas
sbbb
mov
mov
js
mov
jne
andl
js
dec
es
xor
inc
leave
add
decl
push
xor
das
notl
test
pop
mov
lret
je
adc
popf
dec
dec
in
dec
pop
ret
mov
loope
dec
rcr
push
in
sub
lods
out
sub
fldenv
mov
inc
add
les
or
ljmp
jmp
pop
inc
mov
push
test
dec
push
push
je
fbstp
lods
data16
in
lea
pop
cli
ja
mov
ljmp
movsb
aas
dec
repnz
movsl
sbb
pop
mov
jge
cld
mov
push
rorl
lret
push
lcall
rcll
fisttpll
js
iret
nop
push
fsub
jl
data16
sub
add
lcall
aaa
call
dec
dec
mov
out
test
lods
xchg
xchg
pop
sbb
clc
lds
sub
push
add
test
or
cmp
jge
fcomip
jne
dec
cmpb
cs
sbb
ret
jmp
jg
lock
push
movsb
xor
mov
cli
pop
inc
or
out
call
imul
push
push
xchg
jp
lret
pushl
and
mov
cwtl
jg
sbb
mov
cmp
cld
and
subl
push
push
dec
xor
or
sub
jne
cmp
adc
lcall
cmp
in
out
scas
sub
push
adc
andl
push
pop
cmc
call
dec
inc
jns
mov
mov
xchg
aam
dec
add
jne
mov
dec
les
xchg
dec
inc
out
in
mov
les
adc
int
data16
insl
add
dec
ds
dec
xchg
adc
push
in
adc
jg
ja
iret
adc
pop
jae
and
imul
nop
pop
sub
cmp
jmp
aas
dec
or
rcrb
pop
pop
add
pop
call
cmp
jns
or
mov
inc
jo
push
pop
xor
jne
sbb
jmp
or
in
and
cmc
jmp
pop
cmp
insl
push
inc
ja
push
lods
mov
pushf
sbb
icebp
aas
inc
mov
add
lcall
pop
push
mov
ljmp
pop
addr16
test
push
fs
jne
repz
enter
dec
mov
and
aas
push
xlat
incl
outsb
cmpps
xor
ud0
out
and
add
inc
xor
and
sar
outsl
les
cmpsl
jnp
push
dec
enter
dec
push
test
sbb
mov
push
dec
shll
dec
add
rclb
adc
bound
mov
dec
jp
sti
cmp
jecxz
ja
mov
cwtl
fists
xchg
shll
arpl
orl
out
pusha
cmp
pop
loopne
loopne
inc
jl
sub
ljmp
clc
ljmp
mov
mov
xor
jbe
iret
dec
or
mov
in
add
or
cmp
mov
pushf
jne
xchg
pushl
cmp
push
jnp
adc
mov
out
mov
adc
incl
add
add
add
sbb
out
es
mov
arpl
in
or
inc
cli
lcall
scas
add
mov
cld
and
arpl
mov
pushl
jle
mov
inc
lock
add
inc
pop
int
ljmp
mov
nop
cmp
dec
rcll
insb
sub
sbb
addr16
push
dec
shlb
pop
sub
xchg
cmpsb
xchg
pop
decl
sub
lcall
mov
xchg
mov
or
ljmp
dec
or
dec
lds
inc
mov
movsb
lahf
mov
add
lds
inc
push
clc
outsb
into
sub
repz
or
cmp
stos
mov
pop
push
mov
add
into
or
std
incl
push
pop
inc
mov
jb
aam
or
sbb
sub
out
dec
push
ja
out
mov
push
lcall
sarl
fsubs
inc
ret
inc
repz
outsb
insl
push
and
pop
mov
adc
inc
sbb
jno
loope
push
bound
pop
jp
add
mov
decl
scas
incl
cmpsb
pop
push
or
outsl
cmp
sbb
repnz
cld
lods
sbb
push
push
mov
bound
addb
lret
jbe
inc
nop
cs
cs
enter
aas
add
add
or
fadd
inc
in
sahf
mov
rclb
jmp
ret
pop
fisubrs
jae
push
popf
adc
push
push
push
pop
jl
push
cmp
call
mov
push
movsb
dec
insb
icebp
dec
std
push
lcall
rclb
les
mov
jp
pop
enter
adc
cmpb
cmp
repz
or
loope
jb
and
jbe
fsubr
dec
adc
pushl
jno
sti
jb
xchg
push
jns
sub
jge
imul
repnz
les
xchg
push
push
xchg
roll
sub
mov
xchg
mov
xchg
jae
mov
xchg
incl
stc
cmp
push
and
aaa
pop
mov
incl
cld
ljmp
dec
cmp
mov
jbe
xchg
push
dec
bound
mov
xor
iret
xchg
push
lret
movsb
insb
je
xchg
adcl
inc
mov
xchg
push
add
cld
jge
dec
pop
inc
adc
push
ja
xlat
mov
jg
pop
ficomps
sbbl
mov
mov
sbb
decl
cmpsb
dec
pop
push
push
call
sbb
daa
adc
fsubp
je
xchg
sbb
pop
fcomip
decl
cmp
addr16
pop
clc
sub
mov
cmpsb
adc
int3
cmp
jmp
mov
push
mov
movsb
clc
xor
xchg
lods
fsts
jp
xchg
jg
leave
push
cli
inc
or
mov
das
arpl
xor
cmpsb
enter
leave
xchg
outsl
sub
mov
cmp
cwtl
dec
dec
xchg
cmp
ds
call
jle
fldenv
jno
cmp
or
jb
aaa
dec
shrl
dec
dec
jmp
sahf
ja
xor
pop
mov
lds
push
sbb
ja
lcall
ljmp
lret
pop
xor
cwtl
add
scas
pop
pushf
jg
lret
scas
pop
jge
add
or
jg
push
enter
pop
jg
decl
jne
cmp
inc
aam
adc
pop
es
rcll
pop
push
nop
dec
iretw
xchg
sub
or
pushl
jle
lods
push
jae
mov
aas
cmp
dec
fistps
dec
out
jae
lea
push
call
mov
mov
mov
js
scas
push
ret
jno
or
jne
dec
hlt
jle
pop
lds
ja
and
or
push
into
mov
ljmp
sbb
inc
xor
mov
sbbl
das
or
outsl
push
sbb
mov
pushl
fidivl
insl
dec
inc
and
sbb
ds
fisttpl
jb
adc
xor
call
ficomps
xor
inc
daa
mov
dec
dec
in
dec
sbb
fnstenv
aam
cld
sbb
add
cs
push
push
std
call
inc
jne
cld
and
dec
fs
loope
dec
leave
movsl
inc
scas
test
pushl
push
jo
jp
and
lret
pop
cmpsl
fisubl
and
dec
xor
incl
jb
add
imull
mov
add
push
lcall
dec
ficoms
jo
cmp
les
pop
outsl
int
xor
cmpsl
adc
stc
push
mov
pop
pushl
xor
scas
loopne
jo
sub
ljmp
roll
mov
fidivrl
sub
cmp
dec
in
cli
cmp
sbb
repz
jbe
aam
jl
xor
addr16
les
or
stc
add
jg
and
push
jno
bswap
mov
and
outsl
fbstp
mov
mov
jle
movsb
in
inc
imul
pushl
mov
inc
es
filds
ja
repnz
xor
sub
cmpb
decl
and
inc
jo
cmp
mov
mov
lds
imul
fisubrl
imul
sub
inc
jb
push
out
push
dec
subb
pop
lcall
cld
xchg
fisttps
dec
nop
cmpsb
jge
pop
popl
mov
ja
cld
jae
jae
push
xchg
jle
movl
aam
cmpsb
add
rcll
arpl
push
outsb
jp
cmp
jmp
decl
or
aas
fdivrs
mov
pop
fimull
ja
sbb
adc
mov
rsm
repz
ss
movl
dec
std
dec
in
and
test
mov
jl
ret
loopne
ja
mov
xor
dec
jo
lds
or
adc
incl
pushf
js
xor
dec
mov
xlat
cmpsb
jno
or
pop
fdivrl
jg
push
cld
decl
lods
push
dec
popa
and
mov
jecxz
push
mov
cld
ljmp
dec
mov
stos
mov
and
repz
pop
stos
mov
incl
sub
xor
xchg
jp
jge
jbe
jo
xchg
push
xchg
jle
fwait
dec
adc
inc
fildll
inc
rcrl
lcall
aam
push
daa
data16
pop
pusha
xchg
sbb
xchg
mov
sbb
mov
push
lds
incl
nop
test
add
popa
jle
pushf
add
loopne
jb
lret
pushf
insl
in
filds
call
lods
cmp
inc
ret
xor
mov
jae
and
add
adcl
pop
cs
in
push
orb
lds
mov
lea
iret
push
jp
adc
insb
lret
jmp
and
push
mov
out
daa
aaa
xor
repnz
les
outsb
dec
inc
decl
popa
xchg
or
mov
dec
ret
cmovl
push
orl
fiadds
pop
arpl
lods
ja
lcall
cmp
ds
push
or
mov
mov
or
cmp
mov
or
push
jl
mov
mov
in
testb
jg
outsb
push
mov
cmp
mov
push
push
shrl
push
fwait
fs
add
lea
push
or
inc
es
daa
inc
mov
inc
jne
shll
push
outsl
mov
jne
cmovb
iret
cltd
pushf
push
jne
call
mov
sub
and
jne
lcall
jle
test
mov
sbb
mov
adc
inc
adc
mov
dec
cmc
aaa
outsb
sbb
xchg
lahf
sub
in
sub
test
jae
pushf
addr16
pop
pop
aaa
lock
dec
das
popw
jp
inc
andl
sbb
icebp
mov
or
dec
push
jo
call
test
int3
xor
es
pushl
cli
sbbl
bound
cmpsb
pop
cmp
mov
cmpsl
push
aas
fildll
sar
mov
test
jnp
dec
loope
arpl
add
mov
inc
clc
mov
pop
push
out
or
mov
das
inc
outsl
scas
cli
pop
lock
mov
mov
sbb
mov
loope
pushl
push
jno
sub
push
jnp
cmp
in
scas
sub
ljmp
mov
add
mov
mov
pop
sti
pop
inc
or
decl
add
push
or
push
cmc
ds
push
dec
push
push
jmp
mov
adc
lds
mov
xchg
xchg
ss
dec
mov
aad
jg
decl
xchg
pop
inc
jo
pop
rclb
je
mov
mov
mov
pop
push
jecxz
in
jle
xchg
in
push
push
icebp
xor
call
aad
insb
dec
aaa
push
icebp
mov
mov
icebp
aas
mov
das
mov
lret
test
cmp
mov
call
pop
decb
push
or
push
inc
pop
movsl
adc
mov
xchg
scas
loope
mov
in
add
jno
aam
decl
dec
or
subb
psubq
pop
lret
cs
adc
call
in
mov
fwait
les
dec
lahf
hlt
movsl
dec
ret
xor
loope
decl
push
in
ret
movsb
cmpsl
out
xchg
mov
movsl
mov
sub
mov
mov
push
nop
push
jmp
data16
popa
jge
add
dec
loop
scas
push
lcall
and
push
int
push
rcrb
movsl
pushl
lahf
mov
andb
out
fwait
add
cmp
ljmp
push
cmp
mov
jmp
and
dec
aam
pop
mov
out
pop
incb
xchg
clc
das
mov
or
sub
and
ret
jae
fwait
cld
sub
lcall
jns
mov
add
cmp
ss
ljmp
imul
incl
int
jne
or
sbb
xor
jae
inc
hlt
xchg
popa
inc
inc
cmc
cmp
lcall
jecxz
jmp
outsb
sti
or
inc
loope
movsl
outsb
dec
ja
aaa
xor
push
sub
cmp
rcll
cmp
cmpsl
fisttps
sbb
add
xor
cmpsl
add
push
jne,pn
xor
iret
fldl
jle
jb
add
cmpsl
mov
fs
stos
movsb
les
mov
cwtl
out
or
cwtl
add
sahf
inc
test
mov
push
jmp
cmp
add
nop
xor
aas
add
lcall
xchg
jo
out
aas
dec
inc
sub
incl
xchg
inc
pop
ss
push
cmc
xchg
xchg
cmp
ret
push
in
and
pop
incl
or
enter
cmp
cld
call
sub
cmp
int
inc
insb
xchg
pop
aad
in
dec
lcall
push
pop
and
push
out
arpl
pop
gs
inc
adcl
add
lcall
pop
dec
push
ja
jne
clc
pop
jp
or
call
mov
jo
mov
push
arpl
fs
jo
push
hlt
ja
rorb
push
cmp
insb
rcll
enter
lcall
imul
mov
push
dec
ja
or
inc
ret
les
sahf
imul
sahf
jg
lcall
adc
cltd
adc
popf
lods
or
ja
xor
mov
inc
fnstenv
cmp
dec
xchg
dec
inc
call
fdivl
add
mov
sub
ljmp
sbbb
xor
sub
std
ja
push
dec
movsb
enter
ljmp
xor
adc
iret
ds
rcrl
inc
adcl
pop
push
dec
in
add
lcall
dec
jg
mov
mov
clc
and
ret
ds
and
stc
mov
fwait
aad
std
push
shrb
sbb
jecxz
sub
jmp
popl
inc
sbb
cwtl
std
adc
divb
cmpb
insb
pop
mov
lret
push
sti
int
ja
cmc
push
outsb
insl
pop
loope
stc
or
cs
imul
jno
mov
ja
cmpsl
rolb
dec
in
jbe
roll
or
pop
adc
cld
xchg
fldl
insb
repz
int3
mov
jb
call
jg
test
gs
jecxz
jl
adcb
icebp
xchg
mov
decl
fiaddl
pusha
rclb
insb
lods
bound
jo
pusha
mov
mov
rcrl
mov
nop
out
shll
lcall
xlat
add
add
int
push
je
lcall
pop
imul
or
sbb
jg
adcb
pop
arpl
xor
sbb
scas
push
cmpsl
test
jae
jg
inc
ret
ljmp
rclb
sub
notb
xor
inc
sub
cmc
jae
xor
sbb
ds
xor
push
adc
jmp
cmp
pop
sbb
mov
shrl
jl
cmp
push
into
arpl
and
idivl
outsl
push
jne
mov
push
inc
sbb
fdivr
jmp
cmp
loop
push
sbb
adc
out
adc
xor
into
mov
cmp
add
inc
push
sbb
cmp
jl
mov
rorl
xor
addr16
cmp
mov
sahf
mov
shll
repz
ds
add
and
pop
inc
mov
cmc
cld
aaa
jg
pop
rol
clc
jo
ljmp
insb
outsb
decl
incl
icebp
imul
mov
gs
push
pushl
mov
adc
bound
pushl
iret
mov
das
jle
das
add
pop
jecxz
sbb
push
pop
stos
dec
jbe
loope
decl
packsswb
mov
lock
cmp
mov
pushl
push
scas
push
fs
int
or
shll
add
scas
mov
add
loop
fsubl
inc
pop
daa
mov
xchg
gs
shll
inc
jns
jmp
imul
scas
rorb
stos
cld
imul
lcall
inc
cmpsl
repnz
jne
cli
das
popa
sub
push
dec
push
xor
arpl
add
pop
pop
mov
push
ds
push
fists
jmp
push
or
fstpl
dec
aas
cld
aam
fs
ja
or
mov
push
adc
and
daa
test
jg
cltd
popa
mov
fsubr
jno
push
xchg
loopne
in
repz
stc
filds
and
pop
nop
daa
arpl
mov
scas
xlat
push
out
jmp
inc
mov
aaa
dec
fs
or
add
sub
es
push
fisttpll
xchg
incb
inc
rcrb
ds
inc
cmpsb
mov
movd
ljmp
jo
mov
mov
adc
xchg
dec
popf
sbbb
jl,pn
outsb
mov
in
cmp
push
imul
loop
and
sahf
movsb
stc
outsb
loope
enter
ds
xor
xchg
push
mov
je
hlt
lahf
pop
adc
cmp
mov
dec
jae
inc
mov
dec
rcrb
mov
clc
sub
adc
and
add
pushl
les
jge
dec
sbb
int
adc
daa
or
mov
cmpsl
pop
cmp
loope
cmc
repnz
pop
inc
push
fstpt
add
cld
jae
pushl
cmpsl
je
imul
arpl
loop
in
repz
stc
xor
adc
dec
mov
stos
in
ja
dec
jg
imul
outsl
into
cmp
jb
sub
sub
daa
loope
jmp
cld
sahf
lods
xor
push
stc
or
mov
std
ss
outsb
mov
mov
pushl
imul
aaa
jge
sbb
stos
incl
cld
push
cmpsb
pushf
mov
mov
push
loopne
cmp
repz
shll
or
popf
mov
divb
inc
outsl
mov
cmp
mov
mov
movsb
jns
and
dec
cmp
decl
cmp
insb
psubusw
sahf
pushf
fs
pushl
add
inc
cmpsb
enter
rcll
icebp
adc
lds
mov
mov
inc
loopne
sub
mov
aas
pop
sarb
int3
sub
clc
mov
lea
std
pushf
xor
aas
mov
mov
int
mov
cmp
jg
dec
xchg
enter
js
mov
filds
lds
jge
scas
add
stos
call
mov
mov
mov
jg
mov
shll
cltd
shll
dec
and
pop
mov
pop
insb
inc
push
and
push
pop
jae
mov
decl
lock
dec
adc
fsts
pop
lods
stos
push
popl
dec
nop
lahf
fdivs
jg
lcall
repnz
sbb
mov
mov
sub
xor
cld
decl
push
xchg
push
xchg
shll
pop
ljmp
test
stos
filds
cmpsl
jbe
clc
call
push
out
or
movsb
or
das
pushf
addl
inc
and
sbbb
dec
aas
push
inc
int3
xchg
sbb
mov
fisttpll
cmp
out
jmp
mov
inc
or
cmp
stos
mov
push
stc
push
dec
je
jecxz
jge
jnp
and
sbb
xor
das
jo
ficompl
data16
fcomip
xor
mov
lods
pushf
scas
clc
xor
mov
lcall
inc
fnsave
std
pusha
lret
or
pop
sub
sti
pushf
adc
sbbl
and
dec
push
ds
add
lea
add
hlt
xor
outsb
push
pop
nop
cld
xor
adc
add
in
pop
jmp
sub
popf
lds
stos
and
cmpsb
call
sarb
mov
add
xchg
dec
iret
jle
filds
stos
sub
xchg
mov
inc
fs
or
jmp
xchg
je
add
rorl
mov
das
fcompl
test
in
pop
fcomip
decl
mov
xor
fldcw
add
nop
inc
mov
andb
aaa
std
mov
push
sbb
jo
jge
jno
dec
cli
lods
call
in
mov
outsl
sarl
arpl
cmp
out
jae
std
or
adc
dec
out
cld
ja
cmp
add
stc
aas
mov
dec
dec
pop
ds
lods
sub
sbb
test
stos
and
inc
cmp
or
jae
push
mov
lds
pop
cli
pop
ljmp
bound
call
pop
jns
outsb
out
jo
push
cmp
popf
or
ljmp
shrl
jns
sub
daa
mov
sbb
adc
popa
xchg
hlt
sbb
ds
in
inc
adc
lcall
outsb
and
mov
cmp
ss
xchg
jg
filds
xchg
repz
sbb
nop
cs
jmp
push
sbb
sbbl
cmp
or
imull
call
ret
push
push
xlat
mov
in
daa
xchg
inc
inc
push
mov
or
pop
mov
mov
or
jge
add
mov
out
test
and
shrl
jnp
shrl
mov
mov
mov
xchg
sub
cld
or
sbb
sub
fwait
adc
mov
in
jle
lahf
pop
inc
stc
mov
adc
cmp
mov
ljmp
mov
jb
push
lret
mov
jnp
ja
js
insb
lret
mov
sub
jg
aaa
std
sub
les
out
push
inc
pushf
enter
arpl
sub
lcall
lock
cli
or
andl
cmp
ss
ja
inc
jne
dec
mov
or
cmpsb
mov
in
jg
cmp
mov
cwtl
dec
testb
push
xor
mov
mov
fs
mov
xchg
jmp
push
push
cmpsl
sarb
pusha
pushl
or
pop
les
mov
and
dec
xchg
out
jo
das
dec
call
adc
call
xor
cmpsb
cmpsb
test
mov
mov
cs
sbb
cmp
mov
mov
fwait
ret
sub
jg
lock
inc
or
xchg
and
adc
out
add
pop
arpl
lcall
out
sub
cli
icebp
cmp
push
jp
mov
pop
daa
jecxz
stc
xor
mov
pop
push
rol
pushl
jmp
cmp
add
icebp
mov
cmp
ret
es
inc
or
decb
jo
sbb
xchg
ja
pop
std
es
cmp
decl
push
dec
fiadds
outsl
ljmp
add
xor
add
cmp
scas
add
pop
mov
mov
popa
push
xchg
movsb
dec
mov
pop
push
dec
aaa
icebp
inc
popa
out
and
cmpsl
les
jmp
daa
pop
in
push
inc
push
mov
inc
decl
aam
out
push
sbb
push
jge
xchg
repz
xor
adc
push
ds
sub
pusha
inc
xchg
pop
nop
mov
fisttps
aas
add
adc
jo
dec
shlb
mov
inc
loop
mov
dec
dec
push
stos
or
imul
decl
stos
test
jp
sahf
data16
ja
or
roll
adc
jg
xor
aam
psrad
pop
idiv
incl
out
aam
pop
xor
sub
daa
fdivrp
mov
inc
sub
ljmp
das
divl
adc
push
fyl2x
mov
fistpll
mov
add
subl
pop
pop
cld
and
flds
loop
sbb
xchg
pop
dec
fdiv
dec
fldenv
push
mov
pop
pushl
push
decb
movb
xor
mov
xchg
imul
mov
push
and
int3
sbb
xchg
mov
jne
push
int
inc
fsubl
push
nop
ja
in
adc
icebp
pop
dec
xchg
call
icebp
xchg
aas
fdivrl
add
sub
push
clc
aas
jmp
mov
daa
gs
mov
xchg
mov
adc
adc
aas
push
icebp
incl
insl
pop
cltd
or
dec
loope
inc
lods
fimuls
mov
jne
sar
add
gs
popf
sub
cs
popa
popa
ret
pop
pop
shll
fisttpll
jg
daa
inc
stc
dec
rcrl
pushf
fiaddl
inc
jae
incl
popw
roll
inc
out
lcall
or
inc
pop
insl
sub
lock
mov
xor
dec
mov
dec
addr16
jno
xor
inc
push
jp
in
mov
lds
ja
out
mov
sbb
pop
push
roll
inc
shrb
lret
xchg
ret
mov
push
push
xchg
mov
mov
lcall
mov
inc
dec
lahf
add
addb
cmpsb
mov
ficoml
lcall
xor
add
insl
mov
ret
add
push
fdivs
jnp
popa
loope
lcall
xor
pop
cli
push
into
ds
sbb
pop
pop
into
cmp
sti
pusha
pushf
daa
int
pushl
cld
stc
add
mov
jns
and
pop
inc
mov
push
push
ljmp
incl
fdivs
mov
mov
les
lds
rcll
mov
or
inc
out
daa
pop
rolb
push
lahf
jno
std
and
ret
adc
scas
dec
in
dec
fisubrs
pop
push
ljmp
pop
out
fnstenv
inc
mov
les
and
arpl
aas
nop
rolb
call
divb
in
cmp
inc
mov
loope
hlt
or
jl
or
or
insb
testb
sub
pop
fisubs
out
cli
mov
fnstcw
xor
jle
lret
cs
arpl
test
xor
jg
inc
and
fisubrl
jne
pop
int
popf
pop
jg
pop
lds
faddl
test
test
push
pop
adc
lcall
cli
pop
shll
xor
cmp
ljmp
pop
js
inc
sbb
sbb
test
push
das
push
add
pushl
mov
ja
test
je
adc
push
add
into
cs
repnz
fistpl
lds
out
pop
ficoml
out
aam
loopne
pop
mov
lcall
jmp
push
out
and
cmp
sbb
sub
push
or
loop
clc
mov
jns
imul
lcall
dec
iret
dec
jae
push
ret
aaa
js
sub
daa
pop
pop
insb
int3
cmp
ljmp
push
push
nop
jne
insl
mov
dec
das
pop
fistps
repnz
js
fdivl
push
add
addr16
inc
inc
pop
fnstcw
je
ret
stos
in
fcmovbe
sbb
adc
sbb
adc
hlt
aaa
ljmp
mov
adc
scas
outsl
jle
cmp
fwait
jne
lock
xor
ljmp
lret
mov
out
decb
pop
cli
pop
iret
add
popa
pop
mov
jb
sub
mov
lcall
cmp
inc
shll
push
insl
rep
inc
andl
add
dec
pop
dec
jp
ret
cs
jns
test
push
xor
pop
jge
mov
fstpt
push
pop
popa
mov
call
sahf
iret
xchg
push
out
xor
outsl
shll
jp
ljmp
adc
push
hlt
call
pop
push
mov
jl
add
dec
mov
mov
push
jecxz
or
imul
mov
aas
fs
pop
push
add
lea
in
adc
pop
repnz
inc
outsb
stc
cmp
js
add
mov
jae
mov
jb
dec
lret
fsubs
mov
push
iret
decl
add
cli
dec
adc
ret
ljmp
fsubrl
sub
leave
push
fstpl
or
xchg
outsb
movsb
sub
pop
movsb
call
call
cld
jmp
fbld
movsb
jbe
add
sbb
pop
out
inc
out
fdivr
pushl
repz
xchg
jns
sub
test
mov
inc
rolb
idiv
aaa
pop
iret
or
or
mov
xchg
adc
mov
xchg
dec
cmpb
sub
ljmp
xchg
mov
arpl
xor
pop
std
add
cmp
pop
pushl
das
push
push
cmc
and
cld
das
cmp
lcall
clc
lcall
inc
and
xchg
push
ja
mov
inc
pop
mov
outsl
loop
lcall
into
mov
sbb
xchg
cmpb
xchg
and
mov
mov
popa
cmp
pop
gs
stos
inc
jecxz
or
and
fs
stos
add
pop
ds
pusha
add
jmp
jmp
lds
test
dec
jg
or
sub
add
cld
xor
rolb
jb
in
inc
fdivrl
nop
jno
cmp
jl
add
outsl
xor
dec
xchg
dec
js
fisubrs
lods
push
dec
arpl
sar
inc
shlb
jae
jns
inc
out
sub
mov
insb
jmp
icebp
clc
test
ss
pop
inc
cmp
pop
sub
jp
mov
pop
jb
adc
out
incl
stc
cwtl
adc
lret
push
push
inc
mov
insb
cs
jmp
xchg
iret
sub
call
or
fldcw
inc
sti
daa
dec
mov
imul
test
ret
cmp
pop
push
jle
ja
pop
pop
cmp
out
adc
pextrw
mov
push
jmp
mov
iret
sub
xorl
loope
pop
pop
add
cmp
mov
sbb
fisubl
mov
call
daa
test
or
gs
ljmp
out
mov
push
imul
clc
es
adcb
sar
decl
loop
adc
jmp
icebp
adc
mov
in
and
jbe
cld
cmp
dec
pop
sbb
fs
cmpsb
cmp
out
fdivs
adc
jnp
loop
and
jbe
push
jge
call
imul
fistpll
pop
or
enter
fdiv
stc
add
cvtss2sd
cwtl
stc
pcmpgtw
cli
push
dec
outsl
pushf
test
push
pop
add
loope
decl
adc
jnp
adc
adc
push
jae
fbstp
jno
jo
addb
decl
test
add
push
jnp
cmp
ret
inc
movsb
xor
mov
push
ljmp
sbbb
or
icebp
xor
pop
popa
daa
les
or
int
jmp
dec
inc
push
push
sbb
ljmp
and
sbb
rclb
jo
sub
sub
test
xor
pop
jle
loop
in
decb
call
into
sahf
cld
sbb
push
mov
and
fdivl
addr16
cli
scas
scas
test
scas
push
clc
xchg
testb
in
mov
or
inc
dec
jbe
mov
mov
xchg
push
add
cmp
clc
add
fwait
in
icebp
sbb
lds
dec
sub
daa
push
and
leave
add
add
jmp
lods
mov
mov
push
sbb
xor
mov
sub
ljmp
cltd
cs
adc
iret
xor
xor
cmc
pushl
fldcw
mov
add
and
push
fdivl
inc
call
jne
cmp
outsb
jb
push
inc
js
push
inc
iret
and
dec
int
jnp
shlb
aaa
cld
incl
cld
cmp
cmp
sbb
and
test
je
inc
jb
mov
stos
nop
mov
xchg
int3
nop
ret
pushf
inc
gs
pushl
xor
mov
fdivs
jae
enter
fnsave
lcall
outsb
mov
dec
rorl
test
xor
add
call
xchg
imul
pop
cltd
inc
js
mov
shll
jne
subl
and
dec
or
cs
adc
sbb
aaa
jecxz
inc
jae
or
cmp
and
enter
sub
mov
les
pop
js
xlat
or
stos
lds
stos
xchg
scas
sahf
imulb
jg
push
add
push
out
add
add
mov
daa
mov
inc
daa
fisubrs
inc
adc
imul
pop
inc
test
push
and
sar
add
push
pop
movb
in
add
out
cwtl
or
jmp
movsb
insb
arpl
test
call
leave
and
in
cmp
dec
scas
push
fildll
gs
mov
jns
repnz
rcll
jle
fldl
dec
repnz
sbb
mov
pop
sbbb
xchg
rclb
dec
add
popa
xor
inc
das
clc
fbld
or
sbb
push
fidivrl
data16
mov
arpl
notrack
lcall
xor
cli
sub
or
jg
add
inc
loope
nop
clc
ja
sahf
fistps
jl
sbb
adc
das
sarb
jae
lods
push
mov
sub
dec
cld
pushl
or
pop
push
jne
inc
mov
xchg
inc
out
sub
pushl
xor
xchg
testl
pusha
dec
mov
mov
jnp
add
roll
pop
ret
and
adc
sbb
pop
push
and
iret
inc
xchg
arpl
and
ss
mov
mov
mov
dec
inc
xlat
and
daa
ss
scas
scas
push
clc
adc
push
xor
sub
cwtl
lods
pop
jo
imul
sub
sbb
mov
adcb
call
cld
mov
lret
adc
sbb
rcll
dec
cmp
out
dec
xor
call
daa
idivb
pop
inc
aam
jb
mov
clc
sbb
sbb
add
jecxz
decl
cmpsb
jae
out
pusha
ret
sbb
add
xor
or
fwait
decb
push
push
out
cmp
pop
lahf
push
data16
iret
movsb
adc
insb
cltd
add
xchg
jmp
cmp
push
bound
ficompl
popa
ss
sub
aaa
jle
ficoml
push
frstor
inc
aaa
ret
ljmp
sarb
push
dec
push
in
pop
and
icebp
pop
mov
dec
push
cmpsb
add
cmp
pop
cmp
pop
dec
cli
adc
xor
ljmp
adc
pop
arpl
cmp
testb
xor
inc
je
repnz
mov
push
inc
cmpsl
stos
mov
in
mov
negb
outsb
addr16
lcall
enter
jecxz
push
stc
xor
pop
inc
add
cmp
and
roll
inc
jmp
add
inc
rclb
popa
mov
or
aas
jge
pop
adc
mov
decl
inc
cmp
mov
inc
push
adc
jns
pop
ds
sub
xchg
outsl
shrb
sar
lds
scas
cmpsb
push
push
fbstp
xchg
ret
pop
adc
cmpsl
rorb
mov
add
call
cmp
sbb
stc
sbb
stc
incl
adc
add
divl
jbe
dec
inc
jo
ja
push
cli
mov
lcall
or
jns
mov
push
pop
jne
dec
nop
imul
repz
mov
int
lods
pop
clc
lods
push
jb
mov
mov
sub
jg
mov
mov
aas
lods
fwait
mov
mov
sbb
scas
nop
scas
pop
into
loopne
pushl
aaa
xchg
inc
gs
mov
ds
test
mov
mov
imul
rolb
cmpsb
mov
and
std
pushl
xchg
test
push
push
sbb
fmull
ljmp
sub
xlat
mov
push
adc
idivb
mov
mov
mov
push
push
mov
mov
imul
lret
incl
push
add
sub
ret
sub
lahf
jae
add
scas
arpl
mov
jp
les
push
fs
cmp
sub
pop
ret
adc
repz
mov
dec
repz
lcall
mov
fs
stos
lret
and
jno
and
mov
push
imul
outsb
xor
mov
inc
xchg
push
bound
outsb
adc
sbb
adc
ljmp
aas
dec
pop
jmp
cld
adc
ljmp
xor
shll
jns
ljmp
lds
mov
fbld
in
les
push
pop
shlb
and
mov
pop
vpcmpeqw
lock
ljmp
in
adc
jge
out
xor
fnstcw
arpl
mov
inc
lods
adc
pop
jbe
xor
inc
hlt
pushl
dec
jg
mov
jno
push
pusha
call
lds
jmp
pop
pop
xchg
inc
sahf
jl
pop
inc
push
int3
mov
mov
push
mov
decl
sub
bound
cmpsb
dec
push
stos
lods
xchg
test
addl
pushl
subl
xchg
xchg
mov
bound
cmp
pusha
mov
sar
pushl
mov
test
lods
xchg
mov
xor
mov
cld
mov
aad
or
mov
mov
push
xor
mov
ja
and
xchg
jg
xchg
mov
imulb
stc
or
dec
fwait
sub
pushl
mov
stos
mov
mov
xor
popa
push
sub
scas
cs
cmp
and
mov
pop
es
xchg
scas
je
cmp
jmp
add
cwtl
push
arpl
shrb
aas
mov
call
mov
xor
sub
lret
xchg
stc
decl
pop
adc
push
aas
push
lods
adc
outsb
xor
orl
sbb
es
das
cmp
popa
dec
dec
fisubl
push
out
cmp
mov
cmp
xor
inc
inc
fcmovu
inc
or
aas
sub
loop
pop
notb
lock
incl
movl
lods
push
pop
insb
inc
sti
lahf
das
mov
subb
cli
stos
xchg
out
cmp
and
rcrl
imul
xor
or
or
add
and
add
pop
mov
cmp
add
mov
ljmp
rorl
clc
sbb
jp
push
inc
dec
or
sbb
dec
inc
loopne
xor
popf
push
cld
stos
es
test
cwtl
add
jg
incb
push
xchg
sahf
pusha
js
imul
dec
inc
cli
and
push
xchg
cmp
loopnew
psraw
xchg
push
jmp
jae
es
hlt
dec
das
sar
mov
cmp
movsl
jb
scas
gs
sbb
cmp
aam
inc
fmull
mov
test
mov
arpl
int
cmpsb
jle
mov
inc
in
dec
insb
jle
int
icebp
xorl
inc
or
adc
or
lods
push
test
fwait
js
test
or
aaa
pop
icebp
incl
push
std
and
cmp
into
cmp
push
inc
ret
sub
push
frstor
ud2
call
or
rcrb
cmc
repz
mov
iret
aas
pop
ljmp
inc
movsb
push
lahf
outsl
gs
fldcw
push
int
inc
arpl
std
jg
xor
adc
mov
xchg
inc
jne
inc
pushl
das
pusha
ret
push
inc
and
stos
ds
sub
push
pop
jo
fcoms
imul
sub
add
adc
ret
jmp
shrb
fucom
inc
rclb
inc
fimull
jb
lds
pop
gs
stos
mov
lcall
dec
movsb
jne
les
stos
fildll
mov
out
idiv
mov
inc
roll
loopne
call
pop
popa
lds
inc
pushl
call
scas
mov
xor
and
mov
cs
call
cld
jne
mov
jbe
clc
incl
loopne
add
pushf
loopne
imul
inc
test
lahf
sbb
clc
pop
hlt
iret
ret
ja
dec
cmp
shll
sti
movsl
stos
mov
mov
subl
pop
jg
and
out
sub
pop
imul
fdivrp
cmpsb
xchg
outsb
out
push
pop
shl
inc
pop
adc
dec
inc
mov
je
lret
pop
cmpsl
iret
dec
dec
jne
xor
lret
aaa
cld
mov
xor
or
dec
mov
push
mov
fs
jb
jbe
imul
inc
adc
sub
xchg
mov
fbstp
out
cmpsb
daa
enter
les
cmp
lds
jno
rclb
call
iret
adc
fidivl
aad
push
jae
dec
jecxz
mov
or
aam
push
stc
push
push
decb
dec
add
loope
sbb
sar
mov
jge
xchg
bound
xchg
dec
fsubl
pop
jmp
sar
outsl
pop
leave
xor
mov
sar
inc
fsub
icebp
jmp
out
icebp
sbb
arpl
xorb
push
lret
jb
lcall
out
dec
in
aam
mov
inc
dec
inc
pushf
addr16
in
insb
aad
out
clc
mov
xchg
add
mov
addr16
cmp
sar
inc
xor
stos
cmp
xchg
cwtl
mov
stc
push
pop
mov
lret
dec
mov
call
dec
xor
dec
ss
cmp
fcomip
pop
sbb
into
and
sub
sub
fists
mov
in
and
cwtl
xor
push
jp
fiaddl
sbb
push
aam
jb
mov
adc
push
pop
xor
fldt
push
dec
sub
mov
push
repz
test
call
push
out
push
daa
incl
imul
mov
in
ja
loope
lret
stc
into
cld
inc
bnd
aam
pop
jns
pop
rcr
adc
leave
sbb
mov
jg
pop
insl
mov
aaa
jp
mov
jb
insl
fimull
std
decl
cmp
movsl
dec
je
rcll
outsl
xor
add
rclb
and
jge
pop
jle
gs
out
into
xor
jno
jg
pushl
les
push
xor
fdivl
inc
dec
and
pop
pop
out
dec
std
rorl
ret
pop
fldl
cmp
pop
cli
int
fstpt
mov
insl
ror
icebp
dec
call
movsl
clc
repnz
pop
sbbb
pushf
lret
les
iret
pop
insb
loope
imul
xchg
inc
dec
loop
out
clc
out
jbe
xchg
jl
in
dec
sbb
add
aaa
jecxz
mov
shlb
outsl
ja
dec
cmpsb
xor
int
clc
daa
in
xor
fisubrl
outsb
aam
cld
jnp
cmpsl
mov
push
incb
std
dec
clc
ljmp
filds
call
lds
push
fimuls
adc
roll
aas
cmc
das
jle
mov
cmpb
push
mov
ljmp
jecxz
arpl
push
inc
jo
dec
out
dec
testl
mov
jle
sahf
cld
xlat
inc
int
leave
pop
push
out
out
sbb
push
in
jecxz
inc
cmp
out
stos
lock
push
xor
je
sub
loop
jecxz
les
fisttps
and
or
jge
mov
ret
dec
loope
outsl
fisubrs
fsubr
decb
push
fcoms
pusha
shl
dec
fsubs
inc
or
aas
sbb
loopne
pop
loopne
data16
aaa
inc
out
cli
insl
dec
adcb
mov
rep
clc
pusha
jp
hlt
decl
or
sbb
outsl
and
sub
mov
test
jns
out
push
sarl
push
fdivrp
jl
addr16
aas
incb
push
pop
addr16
pop
std
lds
and
jl
daa
cld
dec
cld
push
pusha
mov
jp
jne
push
fs
loope
mov
cld
out
ds
inc
fsub
push
aam
rorb
incl
dec
xchg
pusha
pop
psrlw
mov
push
int3
jo
dec
aas
xor
cmp
ret
cltd
inc
popa
stc
icebp
sub
std
pop
push
sbb
loope
ret
add
int
lcall
faddl
jl
in
and
cmp
cli
or
mov
fsub
test
inc
inc
mov
adc
pop
jg
adc
test
leave
cs
stc
jle
in
push
adc
fsubl
xor
mov
pop
repnz
mov
rcr
sub
inc
js
out
dec
rorl
add
lds
push
or
shrb
or
push
out
cli
xchg
cli
jp
mov
sarb
inc
jmp
inc
outsb
pop
jl
adc
and
mov
das
add
push
lods
scas
pop
push
sbb
filds
shll
dec
add
or
push
adc
stc
pop
ja
addb
pop
cmpb
ds
add
rorl
and
jb
bound
rolb
sbb
cmpl
xchg
lcall
adc
scas
lcall
dec
xor
lea
es
fstpl
fs
and
fistpll
jg
xchg
int
dec
pusha
push
and
adc
sub
out
data16
xor
sub
stc
mov
pop
add
adc
jp
add
sbb
ljmp
test
sbb
add
cltd
incl
in
pop
loope
bound
or
add
push
mov
loopnew
push
fs
and
push
repnz
inc
or
add
clc
jmp
ret
xor
fisubrs
jl
mov
mov
pop
dec
cli
decl
mov
mov
pusha
sub
ljmp
push
clc
call
aas
push
inc
cld
scas
lods
imul
xor
mov
mov
push
dec
leave
and
mov
int3
xor
mov
pop
loopne
dec
call
loopne
and
jmp
bound
scas
mov
dec
js
repz
inc
sub
clc
imul
dec
push
add
dec
jae
cmp
add
sbb
insb
adcb
dec
cmpsl
inc
sbb
pop
dec
fistps
ret
pop
fists
push
pop
cld
test
inc
jg
das
xor
pop
sbb
leave
lds
jo
pop
add
cmp
dec
sub
rolb
outsl
aad
jg
push
sbb
inc
push
fidivl
push
push
cmp
sub
add
mov
hlt
fsubl
repnz
xchg
sbb
movsl
lds
lret
xlat
mov
incl
add
sbb
es
add
mov
xchg
imul
adc
xor
jecxz
gs
popa
gs
stc
loope
dec
or
sbb
sar
lcall
test
dec
movsl
xor
mov
jp
and
cs
xorl
mov
and
mov
outsb
int3
mul
inc
push
inc
outsl
and
mov
push
xor
aaa
push
and
xor
pushf
shlb
mov
and
or
dec
jmp
push
jno
cmp
adc
add
dec
add
movsb
xchg
test
loop
fs
pop
mov
ret
add
jg
call
ja
pop
pop
mov
dec
sbb
push
inc
push
push
jmp
leave
scas
out
pop
jb
dec
mov
mov
dec
out
add
pop
aas
rcrl
pop
jge
les
pop
sub
ljmp
rorb
aaa
push
mov
daa
jge
out
data16
test
mov
push
jge
pop
mov
pop
jle
add
pop
clc
das
lock
jb
dec
pop
jno
fadd
push
out
in
les
cld
int
dec
les
loop
push
out
push
call
sbb
pop
mov
or
testb
push
push
jno
cld
outsb
loopne
mov
fisubl
orb
cli
ljmp
sub
push
add
sub
jb
xchg
xchg
je
mov
lods
ret
ss
popa
adc
push
dec
push
cmp
mov
xor
mov
ds
push
pop
pop
rcrb
cmp
dec
out
and
pop
xor
cmpsl
js
push
jmp
pop
push
int3
jp
cmc
test
push
std
popf
xor
cli
mov
and
sbb
dec
mov
sub
mov
lds
shlb
pop
sub
pop
fisttpll
xor
out
push
dec
bound
repnz
add
imul
inc
sbb
lods
sub
cli
jg
ret
and
cmp
pushf
sub
jg
insb
in
pop
rclb
pop
fstpt
pop
imul
lahf
dec
shll
adc
push
jecxz
or
or
jae
shrl
push
popf
push
cmp
jmp
jmp
jo
nop
xor
scas
jg
fisubrl
xor
ds
xor
cld
mov
ljmp
jecxz
icebp
jb
or
enter
clc
push
mov
mov
pop
and
ds
jbe
aad
out
push
push
mov
cmc
cld
sbb
rclb
movzwl
insl
cld
stc
jae
mov
inc
bound
inc
or
cmp
jecxz
lret
call
loop
cmp
clc
xchg
cmpsb
jmp
cs
mov
mov
cmp
push
lahf
mov
mov
subb
pop
lret
jl
or
lahf
dec
jle
xchg
adc
push
jmp
sub
jnp
pop
jae
decl
cld
xchg
fisttpll
inc
jg
pop
popa
std
jmp
inc
and
call
push
inc
enter
jmp
inc
xchg
sub
loope
pushl
clc
jmp
inc
les
mov
ds
xchg
mov
sahf
test
sbb
xchg
inc
inc
mov
pushl
jl
mov
jle
popa
ret
xor
cmp
fbld
cmpsb
out
add
xchg
shll
dec
testl
lea
add
add
ljmp
lods
or
aas
xor
hlt
test
xor
ss
dec
xchg
adc
popl
push
jecxz
inc
shl
rclb
jmp
movsl
int3
xchg
scas
aas
jo
adc
inc
jne
xor
addb
leave
es
sub
test
jecxz
mov
dec
mov
aas
stc
sbb
cmpsl
dec
das
jne
xor
and
push
mov
pop
into
cmp
mov
or
sarb
add
push
pextrw
pushf
or
inc
or
inc
push
nop
pop
jg
mov
lods
xchg
ja
jle
js
or
push
mov
fs
ljmp
jg
mov
outsl
inc
leave
pop
out
xor
or
push
addb
ds
jg
clc
test
sbbl
into
push
push
jle
sub
inc
movsb
lods
mov
add
jg
fwait
movsl
outsb
and
test
jg
shlb
incl
push
repnz
inc
xchg
fidivrs
push
jno
xchg
fwait
cmp
fdivrl
mov
popa
mov
scas
cmp
ss
xchg
nop
cwtl
fwait
mov
fcmove
rcll
out
mov
sbb
jbe
and
mov
mov
xchg
fistpl
dec
dec
sbb
inc
shlb
js
sub
pop
subb
jmp
pushl
inc
push
jmp
push
cltd
insb
int3
cmpsl
movl
cmp
cli
mov
or
dec
mov
push
sahf
sbb
std
dec
push
fs
pop
fnstenv
das
ljmp
cs
pop
incl
cmp
push
dec
mov
faddl
inc
push
fdivl
inc
iret
or
inc
out
clc
lcall
push
clc
push
movsl
jae
movsb
jl
adc
push
push
xchg
cmp
xchg
outsl
call
jne
and
push
jo
jne
inc
push
lds
inc
pop
mov
fwait
lds
mov
lods
cmc
jb
cmp
dec
adc
or
and
das
repnz
and
js
sub
or
jg
ret
ds
dec
int3
add
in
mov
and
fmuls
mov
movsl
mov
lcall
icebp
mov
popa
sti
jbe,pt
mov
addr16
cld
out
xchg
add
lea
push
and
mov
pop
push
mov
inc
scas
pop
push
ret
mov
push
sub
or
decl
push
cmp
mull
int
pop
adc
aas
imul
xor
fistpll
dec
jne
pop
push
pop
mov
mov
rorl
fnstsw
lea
orl
xchg
cmp
incb
push
xor
mov
jmp
mov
fistps
dec
sub
les
addr16
cmpsb
pop
mov
inc
jmp
inc
sbb
daa
inc
lret
mov
dec
pushl
and
inc
mov
decl
lock
push
jge
push
cmpb
jb
iret
sbb
shlb
ljmp
pushl
mov
icebp
icebp
inc
push
push
fisubl
dec
and
outsb
loop
jmp
sbb
mov
dec
rcll
add
or
js
mov
sar
or
mov
dec
dec
in
add
xchg
das
push
shll
pop
sub
call
or
fwait
push
xchg
sbb
dec
gs
lcall
test
leave
sbb
and
add
icebp
out
or
rorl
push
jge
les
xchg
faddl
dec
fcmovb
gs
inc
push
or
nop
daa
xchg
jp
out
mov
jae
adc
adc
outsb
lcall
pop
test
lods
push
fistps
movsb
cltd
jns
ss
mov
mov
mov
or
clc
pushl
fwait
addr16
mov
nop
imul
loope
js
push
mov
or
and
das
ljmp
clc
mov
into
add
sub
jg
xor
and
inc
push
xor
call
icebp
gs
js
jb
xor
lods
mov
fildll
fnsave
movsl
popf
lret
js
into
lcall
sti
pop
cmpsb
jne
or
std
jge
sbb
daa
push
imul
call
vmwrite
pop
mov
loopne
pop
cwtl
dec
fcompl
sub
sahf
inc
call
add
dec
fisttps
insb
mov
out
add
mov
pop
insl
scas
and
inc
mov
mov
cmp
pop
mov
call
lea
insl
lret
je
movsl
mov
sbb
xchg
scas
mov
int3
push
cld
sbb
push
push
jno
inc
sar
xchg
cmp
pop
jo
or
sbb
xor
pop
jg
cwtl
sub
sbb
lds
add
mov
out
inc
clc
jg
pushl
mov
scas
out
out
and
jb
iret
or
xor
push
inc
sbb
in
xor
ljmp
dec
fisubl
xor
jo
cmp
dec
lret
pusha
cli
ja
in
scas
insl
iret
jge
mov
mov
cmp
jge
dec
mov
cs
or
rol
sub
sbb
flds
dec
aas
pop
push
adc
cmpl
stos
popf
cmpsb
xor
call
lods
and
mov
xchg
lods
or
ljmp
std
xor
jne
sbb
fwait
inc
and
out
pop
pushf
jns
pop
xchg
sbb
xor
mov
and
xchg
sub
dec
jb
add
jmp
sub
out
or
jbe
int3
inc
adc
inc
les
pop
pop
es
cmp
lcall
loopne
mov
sub
outsl
add
mov
dec
inc
push
stc
sub
push
loopne
dec
pop
jle
push
ror
inc
mov
lcall
adc
jle
pop
inc
dec
popa
jmp
or
pop
fsubl
ja
jmp
iret
das
ja
cmp
test
adc
sbb
mov
stos
dec
inc
test
xchg
in
in
xchg
sbb
incl
scas
sbb
ss
add
mov
cli
idivb
sub
adc
dec
cltd
and
and
cltd
js
out
dec
dec
push
cwtl
lret
les
outsb
pop
fsubrs
ljmp
mov
lcall
push
and
xor
push
jno
adc
push
xor
add
filds
add
test
xchg
mov
lcall
jp
incl
cs
mov
mov
jg
dec
inc
aaa
clc
add
and
xchg
pop
or
mov
xchg
add
mov
xchg
es
fsubrl
std
push
dec
dec
stos
dec
popf
repnz
push
jns
fs
call
pop
aaa
push
lds
pop
inc
push
js
push
ret
lcall
fwait
outsl
sahf
push
imul
cli
mov
popa
push
or
icebp
pop
dec
inc
fdivl
js
cmp
cltd
bound
push
xor
push
jecxz
push
or
jnp
push
jb
jbe
notl
inc
les
inc
or
pop
xor
xor
and
jp
push
mov
sahf
lcall
mov
inc
sti
mov
pop
decl
push
arpl
es
push
jns
cmp
fs
jbe
add
shl
and
or
loope
jg
lcall
push
dec
insl
fistl
dec
jbe
xchg
das
mov
lock
incl
arpl
mov
in
dec
jecxz
insl
popa
lahf
and
push
or
mov
insb
out
mov
xchg
mov
mov
decl
xor
inc
push
or
adc
movsb
xchg
mov
push
repz
mov
pop
ds
fidivl
lds
jg
or
rorl
mov
push
cld
out
fldt
out
rol
inc
int3
int
pushl
push
pushf
shrl
pop
into
cmpsl
arpl
dec
push
ja
rcrb
out
pushl
insb
addr16
push
pop
rcrb
push
ret
cmp
push
les
pushl
jmp
dec
pop
cwtl
push
fldl
push
imul
outsb
out
pop
jno
sahf
fbstp
sbb
decl
mov
stos
pop
jo
loopne
fld
adc
dec
addl
mov
lret
ljmp
ss
out
movsb
cmpsl
pop
cs
push
iret
lods
mov
addr16
fistpl
jo
push
cmp
sbb
jmp
adc
ss
and
js
shll
fistpll
es
xor
lret
adc
adc
inc
loopne
xchg
imull
enter
mov
cli
sti
dec
inc
sub
push
push
out
lret
je
add
xchg
sbb
fildl
push
jo
int
and
into
sbb
adc
out
in
jmp
incl
xchg
inc
push
popf
pop
call
out
push
loopne
mov
push
stc
icebp
pop
xchg
outsl
pushl
leave
sbb
xchg
js
scas
mov
push
shrl
test
insb
lcall
fneni(8087
scas
xchg
mov
inc
fimull
data16
int
das
rcll
push
inc
cwtl
setge
mov
add
dec
in
je
fwait
aaa
mov
and
out
and
movsb
mov
xchg
cwtl
repz
incl
hlt
adc
and
push
push
popf
pop
jae
loopne
jge
mov
cli
insb
fsubr
inc
ret
fcompl
sub
pop
xor
cmp
fisttpl
cmp
mov
pop
ds
push
call
adc
in
test
inc
lea
incl
push
cmp
jae
gs
addr16
fwait
incl
mov
movsb
jb
scas
insl
fists
adc
inc
das
pop
leave
aas
incl
dec
fs
mov
loopne
push
sub
adc
sub
clc
adc
call
mov
aad
mov
mov
pop
inc
jo
stc
mov
lret
and
fsubs
inc
repz
jge
cmp
add
sbb
lea
fnstsw
je
push
fcoml
cli
and
cmpsb
jge
or
pushf
out
cli
pop
shlb
fnsave
adc
mov
push
orl
into
mov
hlt
and
sub
mov
decl
jns
xchg
dec
xchg
jae
jns
cmp
test
scas
adcb
js
mov
push
push
rolb
test
fs
mov
lcall
jmp
mov
jge
dec
lcall
nopl
add
mov
jg
pop
push
mov
ljmp
incl
loope
jmp
mov
mov
xchg
dec
push
rcrl
mov
jl
inc
sub
dec
add
mov
enter
pusha
pop
pop
mov
icebp
mov
into
xchg
xor
std
movsl
sub
test
ljmp
xchg
or
mov
dec
push
loope
mov
fimuls
jg
cmp
sub
fisttpl
shrl
inc
mov
punpcklwd
dec
nop
scas
jno
pop
mov
cmpsb
stos
inc
xor
rcrb
push
nop
test
dec
cmp
mov
popf
shll
cmp
nop
cmp
inc
push
mov
pop
arpl
xor
jl
sbb
int3
xor
pushl
cmp
mov
xchg
fs
push
or
mov
cltd
xchg
fwait
les
xor
and
pop
push
arpl
add
jo
fwait
incl
js
pop
inc
fcompl
pop
faddl
jnp
cmp
adc
sub
fists
mull
cwtl
xlat
incl
mov
xchg
sbb
cmpb
sub
es
xchg
rcrb
inc
in
mov
sbb
pushl
add
mov
inc
inc
adc
std
xchg
cs
cltd
ja
lock
cmp
cwtl
fisubrs
push
int
pop
lcall
push
jno
incl
das
daa
adc
scas
ds
mov
inc
mov
pushl
push
jne
inc
lret
clc
adc
push
std
lea
sarl
ficoms
lods
push
cmpsl
sarb
outsl
lds
jmp
fldenv
pop
or
adc
scas
mov
jle
mov
outsb
push
adc
sarb
outsl
xchg
ss
and
jg
pop
push
les
mov
aaa
jmp
pop
ljmp
xor
jns
push
popf
mulb
insl
cwtl
sub
int3
xchg
cmpsb
lods
xor
leave
and
pop
adc
iret
xchg
cmc
dec
push
shlb
dec
pop
sub
mov
mov
test
popa
jmp
push
cld
jl
stos
add
xchg
mov
jl
mov
xchg
insl
pop
out
stos
ss
decl
js
imul
mov
xchg
psrld
ljmp
sbb
sbb
cmpl
scas
inc
jo
lea
ficompl
jmp
addr16
sbb
dec
jno
dec
cmp
aaa
dec
xor
mov
lcall
mov
xchg
xchg
jmp
bound
push
test
mov
adc
lods
decl
dec
xor
bound
prefetch
sbb
lds
sbb
or
push
and
inc
pop
sbb
arpl
scas
je
sbbl
inc
clc
ljmp
mov
pop
add
cs
arpl
pop
ds
xchg
leave
incl
or
outsl
sarl
or
nopl
mov
or
mov
or
cmp
jge
jl
dec
popf
cmp
jb
cmpsb
faddl
sbb
xor
test
inc
in
fsubrl
push
cmp
pop
add
mov
push
dec
xor
jge
mov
sahf
sub
xchg
pop
cmc
dec
je
outsb
sti
mov
and
inc
lea
pop
mov
decl
pusha
adc
mov
pop
inc
mov
adc
js
cmpl
push
sbb
sbb
jp
mov
add
roll
lcall
xor
pop
das
shll
mov
lcall
inc
dec
mov
push
pop
fstpt
mov
or
mov
fstps
in
inc
jl
aam
mov
popf
xchg
mov
scas
push
inc
je
add
mov
pushl
jg
fwait
jle
mov
adc
mov
add
adc
mov
ds
fwait
pop
adc
insb
lods
jecxz
push
mov
ja
xchg
lds
lds
adc
push
decl
sbb
jge
andl
mov
adc
outsl
testl
ljmp
mov
sub
and
pop
inc
popa
pop
clc
daa
sub
data16
sub
inc
ja
mov
fnstsw
xor
int
fnstenv
stos
inc
jbe
out
adc
xor
mov
mov
xchg
jg
leave
inc
jg
subl
movsb
pushl
les
inc
popf
pop
push
mov
jle
inc
cs
mov
decl
jo
or
fwait
mov
jp
fucomp
push
jne
enter
std
cmp
add
mov
push
adc
cmc
dec
pop
scas
cwtl
push
add
pushl
les
movnti
cwtl
nop
movsb
scas
mov
notl
push
sub
andb
fwait
lcall
lods
adc
mov
sub
pop
pop
enter
repnz
inc
ljmp
mov
scas
rclb
xchg
shl
mov
or
mov
cmp
lods
ret
push
clc
roll
xchg
mov
cld
out
mov
xor
fst
jnp
cmpsl
mov
icebp
movsl
mov
pushf
into
lds
stc
xchg
cltd
xchg
pop
adc
call
mov
sahf
cmpsb
cli
sar
mov
int3
mov
idiv
sahf
movsl
mov
lods
lea
fwait
mov
incl
mov
fcmovu
in
pushf
mov
call
ffreep
in
inc
std
xor
stos
loopne
mov
jmp
mov
mov
iret
cli
cmpsl
cwtl
sahf
mov
test
pushl
cmpsb
ret
cld
mov
in
mov
scas
test
mov
jg
pop
int3
ret
mov
mov
les
push
dec
repnz
cltd
pop
jae
push
cli
fdivl
std
mov
push
xchg
lock
gs
and
mov
das
inc
pushf
pushl
je
push
adc
data16
push
pop
in
push
inc
adc
jbe
or
mov
sar
incl
lcall
pop
dec
jnp
addl
cmp
pop
mov
xchg
dec
mov
outsl
pop
push
pop
shl
mov
and
add
jmp
sbbl
out
sub
inc
cmp
ja
add
and
cmp
out
call
xor
cwtl
aaa
push
mov
adc
sub
shlb
or
stc
jo
mov
dec
mov
fnstenv
lcall
into
adc
idivl
jp
popl
ja
mov
inc
jbe
outsl
arpl
int3
mov
cmc
or
cli
mov
xchg
lcall
das
xor
pop
adc
cwtl
add
js
push
dec
mov
out
xchg
push
insl
mov
xchg
bound
cmpsb
in
sbb
mov
clc
pop
fs
lods
push
fs
cmpsl
sbb
addr16
lcall
inc
out
pop
dec
test
jae
push
int3
mov
dec
mov
orb
out
mov
dec
outsb
inc
in
mov
inc
sub
push
je
and
lcall
jnp
mov
sbb
dec
mov
and
pop
add
js
jb
dec
or
stos
inc
ret
dec
outsl
jae
dec
push
fs
push
popf
xchg
popa
adcb
push
inc
mov
sahf
arpl
lcall
movsb
sbb
imul
push
mov
pop
push
insl
adcb
dec
js
lcall
inc
nop
mov
bound
and
cmp
jmp
mov
inc
or
inc
jo
sub
popa
shrb
dec
incl
cmp
or
mov
lcall
sbb
adc
aaa
pop
decl
lock
cmp
cld
xor
call
aam
aaa
cld
cmp
in
push
mov
incl
dec
pushl
clc
insb
gs
loopne
insb
cli
adc
hlt
cmpsl
jno
ljmp
pusha
fimull
aad
add
add
mov
or
xor
jmp
lods
enter
test
loop
xchg
or
out
jg
lods
les
add
cmp
add
mov
and
jg
mov
push
hlt
dec
jbe
xchg
and
jg
push
or
push
lock
dec
add
xor
ds
pop
mov
stos
rcll
nop
xor
arpl
pop
xlat
dec
call
adc
es
repnz
decl
mov
sub
sbb
ljmp
ss
inc
sbb
popf
mov
push
cmpsb
mov
arpl
dec
sbb
stc
or
incl
outsl
subl
push
inc
or
out
pop
lcall
pop
sbbl
insb
decl
int
push
out
leave
movsl
push
jp
sti
enter
call
inc
int
filds
incl
ja
jo
push
jle
pusha
dec
dec
ret
push
rcll
dec
cmp
pop
test
incl
arpl
ret
jg
jle
lds
dec
push
push
adc
push
repz
incl
add
into
inc
jg
push
cli
jmp
pop
fsts
inc
in
push
in
cmp
incl
pop
dec
inc
rolb
repnz
dec
push
jne
rolb
arpl
jge
inc
gs
icebp
mov
inc
pop
addr16
out
fs
pop
jo
xchg
mov
dec
jo
push
cmp
or
hlt
andl
mov
and
fcomip
loop
mov
inc
pop
call
push
imul
pushl
jg
js
outsl
push
dec
push
inc
jae
pop
addr16
xor
mov
push
call
sub
outsl
inc
ficoml
adc
jg
mov
loopne
push
dec
inc
mov
imul
fwait
out
clc
pushl
mov
stos
je
inc
and
mov
je
sub
dec
adc
pop
std
mov
or
mov
testb
jne
loope
das
jb
lcall
lds
jne
ja
mov
test
xchg
mov
mov
mov
rcrb
orb
into
pusha
movsb
shrb
fwait
add
cwtl
pushf
fiaddl
adc
mov
xchg
mov
insb
or
add
aaa
mov
adc
dec
aam
orb
sub
movsl
ja
mov
loope
push
push
dec
adc
inc
xorb
jg
imulb
add
gs
jne
xor
jge
gs
pop
shrb
push
int
pushl
js
sbb
mov
arpl
scas
push
pop
lods
jg
pop
icebp
mov
pusha
inc
pop
mov
out
jle
jbe
insb
mov
inc
scas
jnp
cwtl
xchg
or
scas
push
pushf
jae
jge
insb
cmp
inc
jg
bound
jmp
pushl
fnstsw
jbe
andl
xlat
dec
test
ffreep
jmp
push
rcrb
mov
mov
cmp
lock
imul
jg
fnstenv
sub
mov
mov
ja
push
mov
cld
xchg
sub
pushl
jmp
mov
outsb
addr16
jg
fwait
ss
push
jge
adc
xchg
xchg
aas
movsb
and
lcall
inc
fiaddl
sub
mov
mov
out
mov
fisubs
cwtl
aas
cld
fildll
push
iret
adc
xchg
shll
dec
dec
sub
jg
ja
ljmp
mov
mov
adc
and
jg
scas
sub
es
test
xor
addr16
mov
ljmp
test
loopne
stc
sbb
orb
popa
pop
sbb
sbb
pop
icebp
xor
inc
lods
xchg
and
xor
jle
cmp
fisttps
sub
test
mov
stos
inc
jne
pop
xchg
lods
and
decl
jecxz
test
or
sub
and
add
icebp
jg
cmpsl
orb
dec
jge
mov
test
jmp
mov
lods
push
outsl
xor
daa
xchg
mov
stos
test
popf
fistl
cmp
cwtl
mov
mov
or
call
push
mov
jge
jl
mov
and
scas
jecxz
jo
iret
push
mov
fucomp
clc
iret
insb
push
xor
insb
dec
aam
fisttps
stos
mov
bound
push
lcall
dec
adc
lcall
pop
int3
arpl
call
call
imulb
pop
push
push
add
jp
jnp
add
jbe
mov
lods
dec
mov
xchg
fildll
cwtl
push
les
imul
popw
loopne
inc
ds
cmp
lcall
mov
dec
lret
test
jno
inc
in
outsl
cmp
pop
push
add
into
je
sti
adc
inc
movl
xlat
pop
push
iret
jg
and
pop
scas
cli
add
shll
fwait
cmpl
xchg
ljmp
and
jno
sub
incl
not
lahf
inc
cmp
nop
cltd
lcall
push
cs
pop
clc
dec
daa
pop
inc
jae
imul
xchg
cwtl
movsb
ljmp
inc
loope
loopne
js
outsl
cmp
outsl
push
add
adc
sub
jg
jmp
or
cmp
mov
sbb
jno
xor
pop
lock
popf
xchg
test
push
add
xor
pop
mov
scas
inc
lock
inc
shr
ljmp
xor
dec
sub
cwtl
test
xor
popa
test
cmp
lds
in
push
ds
sbb
icebp
xchg
pop
or
cmp
decl
imul
cld
mul
gs
call
pushl
or
outsb
repz
gs
outsb
in
adc
dec
int3
ret
std
filds
test
jns
pop
pop
cld
sbb
ljmp
jmp
push
into
das
inc
in
je
aas
jbe
inc
fnstsw
xchg
jb
sbb
imul
addr16
test
gs
xchg
jnp
shlb
test
inc
cwtl
mov
pop
jae
sub
pop
jl
cmp
outsb
fstl
imul
push
bswap
es
sbb
jmp
sbb
lahf
mov
iret
rcrb
pop
add
filds
je
fucom
jmp
pushf
sarb
push
inc
outsb
xlat
outsb
mov
movsb
movsb
flds
int
jle
scas
push
pop
or
xchg
lds
xchg
ds
aas
insb
pop
jg
ja
cltd
std
push
into
xchg
dec
inc
out
and
inc
das
imul
repnz
push
push
dec
fcoml
inc
loop
pop
js
jle
jb
es
pop
loopne
and
lods
cmpsl
ja
pop
out
push
jmp
ja
and
dec
loopne
outsb
mov
jmp
pop
outsb
pop
fidivrs
cmc
pushf
xchg
js
jmp
decl
jg
dec
clc
das
push
jecxz
mov
stc
pop
pop
inc
push
movl
mov
out
pusha
cli
or
push
cmp
adc
call
jmp
cli
adc
sbb
adc
jns
sbb
js
ja
popf
adc
dec
push
cli
jg
out
xchg
jle
jne
pop
fcomps
cli
push
mov
jns
pop
lea
push
jno
jp
mov
push
ljmp
imul
dec
lcall
inc
fcomp
sub
jne
dec
pop
data16
push
and
arpl
call
add
scas
popa
inc
fs
pop
pusha
leave
push
jb
jbe
dec
mov
or
ret
fbstp
lcall
sarl
push
pop
adc
mov
je
outsl
scas
sar
cwtl
pop
or
inc
adc
and
rol
push
test
pop
pop
inc
rorl
int
popa
inc
rcrb
push
mov
jle
jo
jnp
mov
mov
sti
lcall
mov
or
gs
adc
lods
cs
xor
das
ret
pop
push
jae
das
test
int3
cmp
dec
lcall
pop
adc
push
dec
mov
pusha
xchg
jmp
fisttps
pop
dec
test
loopne
cld
aad
jnp
loopne
jle
repnz
cmp
loopne
lcall
xor
adc
adc
pop
jp
mov
jb
xor
xchg
pop
cwtl
std
mov
mov
imul
loopne
pop
out
gs
imul
inc
cld
push
mov
lds
inc
out
call
cwtl
push
cmp
imul
inc
je
je
cmp
jg
jne
mov
sub
outsb
addr16
test
out
xchg
and
inc
data16
outsb
aaa
push
pop
jmp
push
mov
pop
add
sbb
pop
cmpsl
lret
pop
push
in
stc
incl
hlt
mov
aaa
mov
inc
pop
push
rorb
push
mov
lods
pop
cmpsl
mov
push
imul
lds
call
jg
decl
push
fstps
sarl
arpl
add
fisubrl
dec
add
or
sub
fildll
mov
icebp
int
andb
xchg
mov
push
jmp
add
xor
or
jmp
adc
and
fstpl
cmp
cmp
adc
and
daa
repnz
jo
pop
call
jg
roll
push
gs
les
pop
cmp
sahf
fildll
dec
xchg
mov
adc
fidivrs
addr16
xor
or
fcoml
fstpl
call
pop
lret
ja
dec
in
jbe
add
flds
ljmp
jae
dec
xor
or
out
sbb
aaa
and
xor
lea
jmp
cmp
lods
popf
jne
sarl
out
or
inc
jle
fmuls
decl
jmp
mov
les
lcall
pusha
iret
sbb
jno
adc
loop
ja
add
sbb
in
jo
add
cmp
ljmp
mov
or
shll
out
push
jg
xchg
mov
dec
xor
xor
rolb
lds
inc
repz
jle
jbe
sub
sbb
and
push
inc
xor
decb
jp
push
les
jp
sub
test
incl
clc
mov
add
insl
adc
test
push
loop
mov
add
pop
cli
sub
and
lret
jo
inc
out
cs
leave
in
les
test
xor
in
mov
sar
data16
stos
aam
fmuls
xor
or
shl
fcomip
incl
and
test
and
adc
sub
mov
and
pop
cld
outsb
mov
inc
sarb
fs
mov
adc
roll
lods
fdivrs
inc
movsb
clc
jg
mov
inc
roll
xchg
fidivl
push
addb
jbe
ror
cmc
jg
shlb
mov
mov
dec
and
dec
and
and
dec
sbb
and
lcall
add
bound
xchg
movsb
mov
xor
xchg
xchg
imul
rorl
mov
sbb
pusha
jb
movsb
fs
and
xchg
movsl
stc
sub
dec
mov
add
inc
cmovae
jp,pt
cs
iret
sbb
push
jp
ud0
mov
sbb
xor
leave
and
adc
repz
xchg
les
cld
jg
pushl
out
add
aaa
push
adc
xor
cs
out
sub
lcall
adc
pop
pop
ss
ds
dec
fisttpll
fs
and
outsb
rorb
inc
or
xor
in
in
mov
call
jg
and
sbb
in
add
cmp
or
lret
dec
adc
std
shlb
js
lods
call
jge
repnz
pop
adc
decl
adc
or
mov
mov
xchg
aad
inc
je
sbb
dec
push
bnd
decl
xchg
pop
in
cmpsl
std
mov
pop
pop
cmp
test
add
inc
repnz
pushf
mov
mov
dec
in
lcall
stos
mov
mov
lret
jne
pop
out
mov
cld
lcall
cli
push
addr16
push
lahf
push
movsb
sbb
mov
bound
push
or
decl
test
fsubs
xor
jo
push
in
fildll
pop
xchg
or
dec
in
sub
jo
inc
out
cmpsb
pop
std
pop
pop
push
lods
jb
jbe
cmp
subb
ret
push
int3
mov
add
repz
jmp
jle
mov
movsl
jg
sbb
cmc
cltd
xchg
scas
cld
mov
decl
call
pushf
pop
retw
mov
pushl
pop
clc
sbb
push
xchg
mov
push
mov
dec
inc
iret
ss
jnp
adc
out
xchg
push
insb
repnz
clc
call
mulb
pop
bound
mov
or
fldcw
cmpsb
dec
xchg
jg
cwtl
lret
lret
xor
sub
xchg
adc
std
incl
out
aam
ljmp
or
fldl
incl
ficompl
jae
push
loop
xchg
add
es
mov
or
xchg
js
das
cmpsb
add
and
jne
into
cwtl
adc
sbbb
or
call
jmp
push
icebp
aaa
mov
jmp
inc
sbb
jge
jbe
push
or
dec
es
xlat
mov
incl
ja
lea
divl
inc
mov
sbb
cmp
mov
pop
fs
incb
mov
add
push
sbb
mov
ret
std
shlb
in
or
xchg
xchg
dec
jecxz
pop
pop
cld
cmp
loopne
mov
push
mov
insl
cmp
mov
aas
outsb
xor
clc
outsl
adc
push
or
pop
int
mov
cmp
or
icebp
add
aaa
jbe
insb
lds
pop
lret
lcall
and
int
dec
pop
sbb
mov
sub
sbb
push
dec
push
push
in
aas
std
das
es
sahf
cmpsl
test
dec
ret
flds
in
or
mov
push
push
pop
sbb
and
xchg
xchg
inc
aaa
push
fistps
xchg
aad
out
mov
fsubrs
test
sarl
lea
sar
lret
popa
int
cmp
cwtl
insb
into
and
in
add
call
push
fnsave
mov
dec
fmull
je
testb
pushl
and
leave
sbb
jbe
xor
jmp
push
jo
add
push
xor
jle
jecxz
adc
int
pop
and
popa
rcrl
and
jg
push
or
push
adc
xor
jg
mov
sub
xor
mov
out
or
scas
repz
aas
mov
sub
sub
adc
mov
xor
leave
rcrb
adc
mov
inc
xchg
and
call
fdivrl
je
test
xor
pop
push
dec
xchg
push
popa
mov
mov
pop
adc
mov
les
fwait
push
jl
decb
push
cmp
fs
jl
or
jle
cmp
adc
sub
sarb
daa
cld
and
das
ljmp
jle
aas
test
mov
cld
cmp
fdivrl
push
mov
xchg
test
add
push
sti
aas
mov
mov
mov
xor
out
cwtl
repnz
call
sti
aaa
dec
outsb
stos
jl
jb
das
xchg
mov
jmp
inc
inc
mov
pusha
imul
cli
sbb
ljmp
std
jg
mov
loopne
push
cmp
xchg
jae
push
sbb
insl
adc
mov
mov
lock
dec
xor
inc
in
inc
pop
jbe
stos
cmp
jbe
movb
inc
dec
inc
in
aaa
bound
inc
es
sub
addr16
cmp
and
stos
int3
xchg
cmpsl
fs
cmp
fadds
scas
in
or
out
cli
lcall
popa
sbb
push
lock
mov
add
sqrtps
pop
dec
call
push
dec
insl
pushf
jecxz
xor
xor
arpl
movsb
mov
cmp
mov
pop
pop
pop
out
or
cmpsl
bound
std
mov
mov
jo
lods
mov
xchg
test
jl
push
cmp
push
test
jg
and
pop
mov
or
cmpsl
mov
sbb
jb
and
sub
mov
mov
stc
call
mov
xchg
cmp
mov
filds
aas
je
adc
decl
mov
ljmp
sbb
ret
mov
das
xor
aas
filds
cmp
fists
xchg
popa
icebp
add
push
mov
decl
jo
pop
mov
mov
mov
mov
stos
test
adc
stos
lods
jl
into
add
mov
xchg
xchg
xchg
pop
loopne
clc
lahf
sbb
rorb
les
fbld
hlt
add
push
loope
je
gs
push
dec
jnp
daa
jne
int
inc
pop
or
push
push
pop
mov
jnp
dec
xor
push
ljmp
aam
xchg
stc
test
mov
xchg
mov
mov
idiv
mov
cmpsl
add
mov
inc
jmp
shlb
adc
dec
mov
call
insl
push
xchg
mov
mov
and
sbb
mov
push
mov
pop
lcall
lcall
test
dec
sti
xchg
sub
dec
std
pop
test
incl
sbb
mov
pushf
xorb
hlt
popf
push
pop
mov
mov
dec
dec
or
pop
and
mov
sti
es
xchg
mov
int3
xor
inc
jmp
out
xchg
add
lea
and
out
adc
shrb
loop
pop
decl
xchg
xchg
xchg
jae
inc
inc
jne
ss
test
cmpsb
adc
mov
sbb
sti
lock
adc
dec
sbb
das
inc
movsl
cmp
cltd
rolb
ficompl
imul
jg
add
faddl
cltd
into
sbb
inc
jno
mov
pop
add
jge
fildll
fisttpll
push
mov
stc
sub
lret
inc
call
aaa
inc
aam
ret
imul
push
test
push
insb
push
mov
jo
lods
loop
mov
mov
jg
sahf
pop
loop
jnp
mov
mov
test
mov
rorl
in
outsl
sbbb
test
mov
ret
push
mov
les
out
imul
std
decl
int
pop
out
sub
ret
shll
lahf
add
mov
iret
outsb
ljmp
aaa
aam
push
or
jb
outsl
pop
pop
std
sub
ljmp
inc
xor
fsts
ja
sbb
pop
sub
cmpsl
aad
js
std
stos
bound
rolb
sbb
aaa
out
sbb
fdivrl
js
fldl2e
scas
ljmp
jge
push
int3
mov
pop
aam
call
inc
fimuls
fcoml
je
push
int3
push
pop
sar
call
pop
dec
jne
in
inc
fbstp
adc
dec
clc
cmp
stos
mov
loope
jo
cmpl
lcall
cwtl
std
mov
push
leave
push
jae
add
fwait
rcll
out
sub
dec
fcomip
push
ss
dec
mull
mov
int3
jne
jp
ljmp
loope
fiadds
inc
nop
fwait
ja
xchg
pop
lahf
dec
push
leave
sbb
pop
les
push
popa
fdivr
ljmp
dec
jno
insl
push
sub
inc
pusha
xchg
lret
insl
jne
icebp
dec
inc
mov
dec
jb
fstpl
or
inc
fsubs
out
lods
sarb
frstor
out
sahf
stc
push
call
call
in
lcall
rcll
push
ljmp
and
mov
das
call
pop
shlb
pop
dec
sahf
push
pop
push
loope
mov
xchg
popa
je
outsb
out
push
inc
les
ds
pop
pop
pop
cmp
movsl
clc
pusha
icebp
inc
rorl
push
adc
test
push
out
pop
push
in
and
pop
inc
xor
pushl
or
cld
inc
shlb
dec
fmull
pop
fistps
pop
fimuls
push
adc
mov
dec
roll
lods
out
dec
test
jae
xor
push
xlat
mov
fisttpl
movsb
mov
mov
aam
int3
push
jl
fwait
fwait
mov
push
ret
push
int3
pop
je
sahf
leave
insb
fistps
in
cmpl
outsb
mov
push
ffree
rolb
data16
bnd
lret
inc
jl
sbb
ljmp
dec
push
fdivl
push
inc
cltd
lock
ljmp
jno
mov
pop
std
mov
not
filds
add
adc
inc
sarl
aaa
pop
mov
push
ljmp
stos
imul
jmp
mov
fdivrp
loopne
dec
xor
mov
xor
xor
inc
loope
jbe
lcall
insl
sti
mov
hlt
mov
dec
idivl
mov
xchg
dec
in
leave
fcomip
incl
inc
or
push
inc
sub
pushf
imul
dec
rorl
cmc
push
pop
ret
loop
inc
ret
loopne
pop
rorl
in
fldt
ficomps
add
insb
into
push
clc
push
cli
outsl
fisttps
aam
rcrb
fldenv
cli
inc
ds
jbe
das
fidivrl
or
test
lods
xchg
repnz
or
push
fstl
in
cli
arpl
call
loopne
inc
mov
fmul
fs
lods
mov
pop
and
js
mov
out
arpl
pop
push
test
ljmp
jo
pop
je
add
cwtl
mov
xor
add
sub
sub
push
push
dec
leave
adc
cmpl
adc
ds
out
dec
cld
or
inc
test
cld
cmp
xchg
cltd
addl
es
outsb
ljmp
stos
in
imul
add
test
xchg
jne
push
sub
ljmp
inc
icebp
inc
dec
pop
inc
pop
jno
mov
je
push
push
add
or
dec
loopne
mov
inc
imul
addr16
fs
push
std
icebp
mov
pop
mov
loope
lock
rorl
stos
lea
movsb
push
pop
dec
test
movsl
push
inc
mov
jmp
out
jo
inc
fadd
out
inc
inc
mov
rorb
pop
loopne
bound
push
sti
push
les
arpl
xor
int3
jl
mov
cli
pop
hlt
mov
loopne
inc
add
mov
loopne
push
incl
js
mov
jmp
jb
lods
push
sub
lahf
pop
loop
js
cmpl
test
mov
fld
fdivs
call
int3
imul
jnp
xchg
push
int
push
repnz
cmp
xchg
mov
loop
dec
outsl
inc
lret
xor
ret
push
jnp
bound
sahf
pop
sbb
ja
call
call
dec
popa
pusha
stc
push
jmp
push
fisubl
fsubl
in
mov
and
call
test
and
stos
decl
negl
mov
and
dec
test
jmp
out
rcll
leave
out
xor
pushf
ds
lock
jbe
lock
into
push
and
push
pop
inc
or
ljmp
nop
decb
fbld
cmp
sbbb
fildl
int
jne
pop
jg
or
fsubl
fbstp
push
rorb
mov
lcall
imul
stos
mov
mov
sub
pushf
lahf
je
clc
cmp
dec
cmc
mov
cmp
fcomip
and
dec
iret
cmp
scas
stos
nop
popa
in
in
push
adc
mov
mov
scas
inc
ss
shll
rolb
shl
into
insb
push
dec
pop
fcmovb
movb
ja
add
inc
push
test
sub
lcall
pushl
lea
mov
test
cltd
sahf
insb
fcompl
inc
aad
decl
bound
fimull
addb
js
movsb
dec
in
push
cmp
mov
fcomps
pop
sub
push
dec
std
sub
sub
xor
icebp
ljmp
call
inc
jmp
jo
shlb
lea
lcall
pop
xchg
gs
jns
inc
jmp
inc
mov
pop
pop
mov
inc
imul
push
je
rorb
mov
pop
inc
imul
je
shll
dec
push
fiaddl
adc
inc
jle
adc
pop
fdivl
fmuls
ss
inc
loopne
std
inc
xor
enter
fistpl
das
jmp
push
cld
jg
xor
inc
jle
adc
lds
push
daa
or
jnp
aam
mov
dec
clc
nop
jne
arpl
icebp
sbb
lds
es
jb
cld
adc
mov
sar
xchg
loop
ds
rolb
gs
sub
and
inc
push
jmp
lret
sub
sub
sbb
out
or
inc
pop
push
pop
pop
cmovnp
xor
and
pop
daa
xchg
mov
push
sbb
arpl
jmp
pushl
fiadds
popf
jp
ds
fwait
jbe
cmp
cmpsl
add
push
insl
iret
cs
incl
ja
sbb
push
sarb
pop
mov
xor
sbb
roll
test
sbb
test
repz
mov
lds
and
mov
ret
out
adc
push
push
inc
mov
fwait
pop
and
inc
insl
jne
jns
xchg
cs
sbb
jo
mov
insb
mov
mov
xchg
and
push
add
xchg
les
scas
ds
push
lods
stos
test
loop
ret
outsb
test
andl
fdivrl
jp
fwait
lret
mov
popf
add
mov
mov
inc
cmp
cmp
fs
scas
inc
dec
jnp
mov
mov
nop
dec
xor
mov
jmp
int3
sub
xorl
loopne
dec
repz
dec
push
sarb
mov
or
dec
xor
in
shlb
mov
insl
dec
push
loopne
insb
add
popf
mov
lods
fwait
out
out
jmp
es
insb
jne
inc
xor
cld
ffreep
aam
mov
f2xm1
imul
xchg
repz
rep
pop
and
aas
aas
fdiv
mov
xchg
ret
jmp
jg
leave
xchg
stos
mov
and
aad
outsb
cmpsl
adc
inc
cmp
rcl
test
push
xchg
movsl
stos
rcr
lcall
add
outsl
and
rcrl
pop
xchg
stos
stos
test
cwtl
mov
mov
cmc
test
outsl
lcall
mov
js
rol
dec
cmp
cmpsb
das
push
call
gs
test
orl
push
cld
shlb
std
cmpsb
mov
add
stc
jge
lea
dec
adc
sub
jle
stos
xor
or
mov
inc
imul
xorb
lcall
jmp
or
xchg
shrl
ficoms
icebp
jbe
sub
mov
ror
out
jmp
cmp
cltd
lcall
xorl
cmp
in
std
push
roll
insb
daa
xchg
xchg
lret
dec
andb
pushl
lea
push
dec
bound
cmc
sbb
dec
cmp
inc
cld
call
pop
lcall
sub
lods
and
testl
mov
fimuls
call
inc
and
and
fimuls
push
gs
xchg
xlat
filds
inc
xor
push
jae
mov
lret
mov
and
mov
cli
in
cld
mov
xchg
mov
dec
adc
or
lret
mov
mov
cmp
mov
add
movsl
xchg
jmp
cmp
xor
icebp
push
and
sub
push
lret
cmp
mov
xor
outsl
lock
popa
or
mov
nop
pop
or
insl
adc
ret
and
faddp
mov
adc
iret
lods
xor
test
xchg
mov
push
lret
dec
jno
call
inc
xor
insb
sub
iret
outsl
inc
cmp
pop
sub
pushl
mov
lock
addr16
pop
dec
pushf
xor
in
jp
icebp
xchg
sbb
mov
ficompl
sub
jg
push
sar
decl
cmp
pusha
mov
lcall
lcall
movl
inc
shrb
fs
xor
push
aad
and
dec
subl
dec
cli
adc
negb
adcl
imul
jbe
cmpsl
lcall
mov
cmp
ret
loope
dec
mov
mov
push
ss
xchg
jno
call
dec
ljmp
xchg
mov
xchg
dec
test
pop
orb
pop
and
icebp
cmp
mov
fsub
mov
cmpsb
in
inc
js
push
jnp
mov
movsl
test
les
jbe
out
jmp
cmp
inc
dec
jmp
lcall
dec
xchg
xor
and
mov
inc
ret
popf
push
ljmp
mov
hlt
sub
jg
out
test
push
fdivrs
jecxz
pop
jg
cs
outsl
pop
mov
dec
adc
mov
or
jg
push
add
scas
lods
movsl
or
out
fcomps
andb
mov
mov
mov
decl
stos
stos
js
cwtl
movsb
cmpsb
test
mov
inc
imulb
cmp
cwtl
push
arpl
dec
das
ss
jmp
mov
mov
test
test
cmpsl
lahf
cwtl
dec
out
outsb
mov
cmc
sbb
in
enter
mov
roll
call
sbb
jmp
lcall
push
xchg
cmpsl
mov
xchg
sbb
in
or
in
stos
jb
inc
mov
shlb
xor
xchg
push
dec
xchg
decb
mov
pop
cmp
sbb
and
xchg
mov
lds
daa
add
aas
fisttps
les
and
mov
lahf
lea
pushl
in
mov
loopne
das
jae
mov
dec
scas
xor
incl
insl
pop
dec
dec
je
bound
sbb
lock
push
add
lcall
les
ret
adcb
and
mov
lods
das
add
pusha
jp
fsubs
aaa
ficoml
sbb
cmp
aaa
mov
cmp
sbb
stc
jnp
and
lods
sbb
fcmove
hlt
mov
add
add
xor
lcall
adc
cmp
lods
pop
sbb
negl
jmp
or
xchg
sub
inc
adc
repnz
push
xor
out
mov
inc
push
cmp
push
xchg
repz
iret
xchg
call
mov
adc
adc
xchg
and
rcrl
lock
dec
mov
rcrl
xchg
cmp
arpl
incl
mov
xchg
mov
repnz
cmp
inc
int3
and
xchg
or
sub
ret
incl
iret
xchg
scas
or
add
aad
cmp
decl
lock
push
addl
es
xchg
lods
cmpsb
mov
mov
orps
cmp
out
jg
imul
mov
mov
int3
adc
inc
cmp
add
das
jle
pop
pop
ds
mov
or
lods
cmp
outsb
stos
fwait
cwtl
fisttpl
lods
cmp
scas
out
inc
daa
je
xor
add
dec
pop
or
push
lcall
incb
push
jae
ret
or
je
iret
pusha
adc
das
mov
adc
sbb
fs
gs
push
sbb
adc
mov
jmp
jbe
aas
lods
sahf
and
push
out
arpl
je
push
push
sub
inc
push
jb
loopne
les
add
jg
cmc
mulb
adc
in
mov
jg
sbb
int3
xor
lea
mov
xor
mov
mov
out
and
lret
inc
mov
je
adc
push
in
xor
add
push
leave
push
addr16
dec
pop
dec
daa
ss
dec
mov
in
movsl
testl
or
lock
ja
xor
sub
inc
push
lock
add
mov
arpl
cmpsb
xchg
mov
les
cmp
inc
movsl
cmp
movsl
mov
lods
add
pushl
pop
enter
rclb
xchg
lahf
or
mov
in
jns
aam
incl
lea
ja
push
inc
cmp
imul
stos
or
movsb
add
ljmp
dec
mov
add
xchg
or
or
clc
xor
enter
pop
and
sbb
cmp
aas
sar
mov
xchg
les
mov
push
bound
mov
lret
and
rcll
push
push
xor
les
xchg
mov
orb
jmp
rcl
adc
adc
add
add
lcall
je
mov
in
lea
nop
mov
aad
ja
sub
jp
add
iret
pop
mov
add
inc
lret
out
cmp
in
loopne
or
and
inc
mov
addr16
lock
sub
sub
mov
pop
pop
xor
xor
pushf
out
mov
mov
ljmp
aaa
je
xchg
sub
bound
fsubl
gs
loopne
xor
sar
jg
andl
push
int3
xor
push
dec
data16
jmp
xchg
or
shlb
stos
mov
pop
es
adc
pop
add
lcall
push
shlb
pop
xchg
cli
cmp
mov
cld
call
mov
outsb
fucomp
loopne
xor
adc
jg
add
sub
mov
or
lock
pop
fbld
lea
dec
jg
push
cltd
cs
jp
test
ret
mov
incl
stc
push
scas
xchg
mov
arpl
fnsave
mov
push
and
mov
pop
jmp
nop
outsb
loope
jb
inc
faddp
cmp
movsb
sbb
in
decb
incb
lahf
dec
jle
add
movsl
rcll
js
jg
shlb
add
mov
and
hlt
scas
push
js
sbb
stos
jbe
mov
fbld
cltd
adc
clc
mov
movsbl
pop
rolb
inc
arpl
xor
rcr
or
hlt
add
push
lcall
out
sub
cmpsb
lods
test
lods
fwait
mov
ret
inc
sub
test
mov
sahf
test
aam
and
sbb
xor
fwait
jbe
xchg
lret
mov
dec
mov
adc
pushf
aaa
cmpsl
inc
mov
mov
iret
lods
iret
cwtl
movsl
push
in
xchg
outsl
push
jmp
dec
les
adc
stos
lcall
dec
and
std
cmp
clc
adc
les
test
es
int
mov
outsb
clc
dec
les
cmp
cmpb
pop
push
dec
out
mov
gs
cwtl
mov
adc
push
insl
mov
es
jp
sub
out
sbb
mov
nop
sbb
shlb
orb
lret
popf
decb
decl
cmp
bound
cs
mov
repnz
and
sub
loopne
mov
cld
decl
loope
xchg
xchg
xchg
push
call
rclb
lock
les
cmpsl
cltd
xchg
jmp
ret
mov
sar
call
rolb
mov
ja
mov
or
cmp
outsl
clc
jo
xlat
movzbl
sub
sarb
mov
lcall
mov
call
jne
xor
mov
js
mov
pop
pop
xor
mov
rorb
pop
out
jmp
repz
push
mov
pop
cli
sub
addr16
sub
call
mulb
cmpsb
mov
scas
lea
movsl
incl
push
repz
jp
pop
lret
mov
int
jg
mov
iret
pop
mov
aas
dec
out
imul
jo
lock
call
mov
sbb
dec
inc
adc
pop
xchg
popl
adc
shrl
xchg
sbb
outsb
fdivrs
gs
clc
cmpxchg
imul
adc
movsl
mov
loopne
mov
mov
clc
fdivrl
mov
push
clc
jae
fists
cld
cmp
out
incl
and
pusha
loope
sbb
es
jmp
lods
pop
adc
push
xchg
dec
sub
push
ret
stos
daa
push
sbb
dec
and
imul
cld
decl
inc
out
mov
dec
jp
mull
outsl
ljmp
mov
xchg
cmp
pushl
jge
std
out
pop
addl
addr16
mov
shrb
lahf
push
mov
push
dec
out
insb
push
das
push
jl
insl
iret
push
dec
std
out
aam
push
data16
push
shl
es
decl
std
test
push
das
mov
in
icebp
pop
push
aas
shrl
xchg
pop
in
and
xor
push
fadd
sub
jg
fwait
push
jmp
xor
shll
xchg
jl
call
rcll
call
addr16
inc
sahf
dec
mov
dec
dec
iret
scas
add
outsl
mov
dec
adc
test
cmpsb
lock
ja
and
and
lock
mov
mov
sbb
stos
movsb
inc
mov
inc
cmp
inc
push
in
xor
int3
and
lock
aas
mov
cmpsl
mov
mov
scas
loope
call
mov
je
popf
ret
loopne
pop
ds
jno
jg
into
mov
andb
inc
insl
test
dec
pop
pushf
mov
mov
sar
xchg
xchg
push
lds
je
shll
xchg
dec
lea
jbe
scas
pop
movsb
movsb
lock
sarb
inc
aad
jb
int
pop
pusha
cmp
inc
scas
into
loop
jl
arpl
or
clc
add
outsb
lret
loopne
mov
pop
outsb
out
pop
adc
popf
aas
sbb
xchg
int
lea
clc
aam
pop
lds
sub
jl
std
cmpsb
decb
mov
inc
mov
push
repz
arpl
decl
lret
xchg
jg
jbe
rorl
push
xchg
xor
jmp
cmp
dec
into
aas
andb
sti
jg
out
or
jns
mov
or
insl
push
loope
jg
mov
lods
ja
ss
mov
push
gs
clc
loop
add
jp
shrl
pop
push
ds
push
call
sub
adc
out
inc
xor
cmpsl
sub
or
cmp
nop
pop
push
and
les
leave
fimull
aaa
cld
fbstp
fwait
push
mov
jle
leave
and
lock
aam
dec
inc
cmp
ja
dec
iret
add
push
add
cs
gs
sarb
pop
mov
dec
cltd
mov
sbb
mov
sarl
scas
pushl
and
jno
lds
mov
or
stos
and
call
int
call
xchg
xor
popl
push
add
clc
ss
mov
mov
mov
nop
adc
push
fwait
insb
stos
out
scas
xchg
aad
lods
or
cli
or
mov
or
inc
arpl
sbb
mov
pushf
or
xor
inc
xchg
sub
lods
cmp
psraw
jg
sahf
push
and
xchg
xchg
mov
mov
add
lcall
inc
xchg
push
push
sbb
daa
xor
mov
filds
into
xchg
xchg
movsb
jnp
inc
push
mov
daa
mov
into
xchg
mov
rorb
xor
push
lods
daa
js
push
sub
jl
mov
sub
scas
jl
mov
inc
xchg
sub
nop
movsb
add
bswap
sahf
lods
mov
cwtl
ret
decl
xchg
iret
or
pushl
ffree
jg
out
lcall
dec
add
fs
fisttps
jmp
or
mov
pop
mov
jp
clc
es
sub
mov
push
push
cmp
mov
xchg
push
pop
ret
cld
ljmp
mov
lods
lcall
inc
scas
jne
cmpsl
arpl
pop
jnp
outsb
cld
arpl
pop
negb
inc
mov
incl
push
bound
movsl
push
andb
stos
mov
mov
mov
fistpll
test
incl
jbe
push
push
sbb
movsb
faddl
movsl
cmpl
into
stos
mov
sbb
adc
and
push
cmpsl
mov
lcall
roll
lods
xlat
sub
mov
in
test
mov
ljmp
and
adcl
inc
or
push
inc
shlb
jns
iret
lods
ljmp
sbb
stos
and
loop
inc
pushf
xchg
mov
les
aas
pop
out
pushf
and
inc
push
sbb
loopne
shrl
in
mov
cli
push
sbb
mov
inc
pop
push
inc
adc
dec
shlb
lea
xor
aas
repnz
insl
test
fnsave
pushl
lds
clc
pop
pop
mov
ret
mov
inc
rclb
dec
leave
mov
push
push
aaa
dec
incl
xchg
mov
mov
sub
mov
and
pop
adc
clc
cld
mov
inc
sbb
ljmp
int
pop
and
je
dec
ret
icebp
mov
dec
push
icebp
cmp
in
and
sbb
gs
mov
adc
pop
mov
inc
out
mov
xchg
adc
das
cli
dec
ljmp
pusha
pop
inc
test
or
jl
pop
inc
cmpsb
dec
jg
lock
out
addr16
fdivl
scas
dec
cs
and
mov
push
jmp
xorb
addb
pop
mov
jg
ljmp
jge
aad
push
dec
fs
mov
mov
mov
jg
cmpsb
movsb
test
push
sub
je
lcall
sub
mov
inc
cmpsb
fldl
cmpsb
push
es
lcall
pop
out
add
sub
dec
dec
or
cmp
push
jb
pop
dec
pushl
clc
mov
ret
rorb
pop
mov
out
aam
jmp
cmp
test
mov
xor
test
je
dec
and
sbb
cmpw
sbb
les
mov
sbb
pop
jno
ret
dec
das
dec
pushf
push
xchg
xchg
xchg
and
aas
lcall
cs
xchg
xor
clc
outsb
pushf
jne
lock
mov
and
cltd
mov
aaa
mov
pop
mov
mov
xor
das
jg
pop
stos
or
jg
andb
mov
cwtl
lea
xchg
incl
xchg
inc
pop
cmc
dec
popa
popf
push
imul
lds
mov
push
ljmp
decl
and
dec
dec
cmp
mov
sub
mov
je
cli
lcall
js
pop
sbb
dec
mov
lea
es
pop
lcall
movsl
sbb
mov
hlt
pop
dec
mov
push
xchg
lahf
movsl
mov
pushl
pop
mov
test
cld
cmp
mov
xchg
loopne
sbb
mov
sar
es
or
ds
dec
jno
jbe
or
mov
push
push
subl
stos
call
jne
mov
rorl
incl
adc
pushf
shll
loop
sub
movsb
xchg
fisttps
xchg
mov
add
out
mov
push
cmpsb
repz
fbld
mov
adc
pop
fcomip
jg
adc
mov
cmp
or
push
cmp
sbb
int3
sbb
je
ljmp
test
inc
push
decb
popf
cwtl
xor
xor
decl
out
sbb
pop
and
push
jnp
mov
jnp
mov
xchg
inc
pop
add
mov
xor
call
mov
push
dec
xor
lret
mov
inc
mov
push
fisttpll
fcomip
adc
addr16
xchg
inc
jl
fs
lea
dec
push
and
pop
dec
pcmpeqb
test
add
outsl
js
xor
cmpsb
movsl
inc
adc
lret
lods
cmpsl
gs
ret
mov
jl
sub
mov
daa
inc
aas
dec
cmpl
outsb
fimull
cld
mov
rclb
je
pop
and
ja
insb
psubw
jg
ss
scas
push
pop
mov
mov
ja
inc
fs
xchg
ret
decl
cmp
xchg
jb
mov
cmp
mov
pushl
mov
loopne
nop
dec
enter
push
cmp
mov
push
pop
mov
inc
stos
sbb
pop
xor
rcrl
xor
push
pop
cli
lcall
es
bound
jbe
sbb
in
or
cmp
call
xor
push
gs
sbb
out
cmp
add
js
mov
add
pop
dec
ss
sbb
arpl
dec
decl
stc
inc
cld
repz
fisubl
addr16
pusha
push
fs
insb
adc
popa
push
adc
lcall
imul
rolb
lds
jmp
lods
mov
ljmp
jne
aad
push
icebp
ljmp
jp
push
push
bound
jg
jbe
bound
clc
decl
sahf
addb
je
movsl
mov
testl
adc
jmp
xor
dec
jle
in
pop
jno
fs
out
jg
push
cmp
pusha
cld
jg
aam
adc
js
push
pop
inc
je
jecxz
lcall
rorb
pop
imull
cmp
mov
clc
mov
fidivl
adc
inc
push
cld
xchg
call
push
pop
inc
cmpsb
test
cmc
inc
mov
cld
call
xchg
stos
pop
sbb
jae
inc
nop
frstor
incl
loop,pn
xor
pushf
jb
sbbb
iret
mov
sub
xchg
les
cmp
cmpsb
je
fiaddl
cmp
mov
std
mov
js
add
mov
mov
mov
add
push
outsl
push
xchg
ss
cli
pushl
bnd
pop
dec
jge
mov
aaa
lods
cmpl
popf
popf
shrl
js
out
ficoml
test
aad
outsb
xlat
lcall
pop
xchg
fdivr
jmp
outsb
or
cmp
pop
jno
push
push
out
lahf
pop
mov
mov
xor
pop
sbb
inc
pop
cs
fisttpll
gs
mov
add
mov
xchg
lods
pop
jno
inc
xor
in
cmpsl
mov
or
lret
popf
cmpsb
cltd
xor
into
pop
inc
dec
mov
inc
mov
cwtl
clc
decl
mov
mov
std
lret
dec
or
std
imul
ja,pn
lds
jg
fsubs
jbe
stos
mov
mov
lret
push
outsl
push
fucomi
jg
incl
rcrb
sbb
inc
adcl
aaa
lahf
fs
movsb
dec
ficoml
xchg
inc
xchg
push
xchg
andb
sahf
pop
repz
test
push
sub
das
ss
cwtl
xchg
mov
cltd
test
gs
pop
mov
xchg
xor
adc
inc
incl
push
sub
xchg
inc
sbb
lea
iret
in
call
bound
adc
cmp
fstps
push
in
or
cmp
jg
int
in
jbe
cmc
xor
mov
add
cs
jmp
jno
popa
mov
aad
fiadds
or
mov
inc
fucom
js
ljmp
gs
inc
pop
outsb
loopne
pop
out
adc
into
and
pop
push
call
dec
rcll
push
rclb
in
aad
push
mov
mov
pop
clc
lahf
decb
inc
loopne
xchg
scas
push
cld
pop
pop
push
lahf
cmpsb
mov
mov
add
int3
insl
sbb
cld
adc
add
vpcmpeqb
loopne
adcl
lcall
insl
lds
stc
xchg
popf
fstpt
lret
pcmpeqd
and
inc
insb
xor
xchg
pop
movsb
lock
dec
inc
xchg
push
push
cmp
pushf
dec
sbb
xor
fcompl
imul
pop
pop
or
adc
or
pop
dec
es
icebp
incl
xor
shrl
outsb
lret
push
clc
lcall
jp
sub
ret
xor
mov
push
clc
jnp
movb
mov
fidivrl
sti
xchg
xlat
mov
mov
insb
call
leave
test
mov
mov
mov
push
aam
jp
js
arpl
ja
ljmp
dec
arpl
adc
jns
call
mov
dec
or
call
cmp
inc
mov
push
adc
jmp
pop
and
and
mov
pop
call
dec
pop
lahf
pop
lds
inc
insb
xlat
pushf
test
push
cld
and
incl
xchg
outsb
pop
sub
push
jge
repz
incl
icebp
mov
xchg
pushf
xchg
icebp
cmp
shrb
and
dec
icebp
cmp
sarl
push
iret
dec
ja
lcall
je
daa
dec
into
imul
pusha
cmp
and
stos
mov
jl
sub
outsl
pop
mov
incl
data16
inc
push
mov
adc
popa
dec
inc
mov
adc
sbb
jae
cmp
arpl
jo
dec
mov
dec
fdivs
gs
mov
adc
fildll
and
mov
mov
push
dec
scas
pop
adc
dec
mov
aas
sub
push
pop
movsb
lock
add
mov
call
and
in
pop
bound
jecxz
inc
push
jmp
js
push
xchg
mov
push
adc
xchg
push
pop
pushl
cmpsl
mov
jg
lcall
mov
shll
lods
outsl
mov
push
push
mov
pop
fidivl
mov
or
fisttps
pop
mov
in
cwtl
mov
pop
xlat
xchg
jnp
xor
mov
arpl
aas
and
scas
sub
and
xor
adc
cmpsb
sbb
cmpsb
mov
pushl
sbb
fwait
xchg
or
rcrb
dec
das
mov
inc
fists
add
call
dec
mov
inc
add
mov
xchg
adc
cmp
adc
push
push
fbld
test
scas
popa
int
popf
mov
sbb
aas
dec
dec
mov
inc
pushl
je
inc
cltd
push
mov
mov
je
sbb
and
and
cmp
daa
cld
dec
decl
xchg
push
inc
mov
dec
pop
call
mov
mov
mov
xchg
sbb
pop
es
cli
addl
mov
jmp
cmp
cmpsb
aaa
loopne
push
push
scas
les
popf
movsl
mov
mov
enter
cmp
dec
cmp
inc
adc
mov
fmul
pop
lds
mov
inc
push
dec
inc
ss
inc
cmp
frstor
in
test
mov
mov
add
mov
scas
ficomps
or
xor
icebp
push
movsl
cmp
add
in
mov
dec
daa
jmp
adc
lods
or
jo
leave
cmpsb
ja
mov
arpl
push
jns
xchg
sahf
lds
fwait
cld
xchg
sbb
adc
or
push
mov
xor
test
jb
stos
sub
ljmp
cltd
adc
icebp
xchg
xor
push
cs
sbb
jne
inc
outsl
jne
imul
loope
arpl
mov
orb
dec
pop
push
pop
leave
mov
lcall
sbb
lods
enter
xchg
enter
dec
sbb
lods
xor
ljmp
es
scas
push
cmp
nop
cmp
jg
xchg
iret
mov
cld
xchg
pop
jo
in
push
jbe
jg
int3
inc
test
sbb
jo
mov
lcall
sbb
mov
mov
sbb
dec
xor
jmp
ss
insb
rolb
daa
mov
pop
cli
push
jg
lcall
mov
icebp
mov
sbb
jnp
xchg
jo
pop
int3
push
xchg
sbb
loopne
loope
test
push
mov
mov
jecxz
and
xchg
daa
loope
xchg
lock
mov
inc
xchg
mov
bound
cmp
ljmp
cmpsl
and
test
aaa
pop
inc
mov
pop
filds
cmc
mov
js
inc
clc
lcall
adc
or
xchg
adc
mov
jg
mov
sti
mov
jb
jecxz
dec
dec
adc
outsl
sahf
cmp
out
clc
mov
pusha
xor
hlt
inc
jnp
aaa
lret
push
jae
lock
jmp
push
je
pop
mov
dec
push
lods
arpl
rcrb
lahf
ja
mov
or
sub
add
gs
stos
jg
or
sbb
cmpsb
push
bound
inc
fwait
dec
dec
jbe
dec
xchg
mov
push
sub
xchg
js
mov
aas
insb
cwtl
andl
jno
push
imul
lret
fists
jmp
enter
ret
push
push
pop
jae
lret
in
incl
jae
push
inc
mov
mov
mov
cmp
je
fisubs
lcall
cli
sbb
jne
mov
out
lea
ja
and
mov
mov
mov
andb
inc
test
lret
cwtl
mov
mov
cmpsl
sbb
mov
and
incl
xchg
daa
imul
lods
icebp
daa
xchg
clc
sbb
adc
stc
das
xchg
mov
imul
lock
int3
pushl
sub
out
iret
sbb
pop
nop
pop
pop
push
outsb
loopne
and
fisubrl
xor
ja
jl
push
sub
mov
call
popa
mov
out
jbe
add
dec
mov
mov
ljmp
xchg
xor
mov
pop
es
daa
gs
mov
mov
dec
xor
pop
mov
testl
decl
hlt
movsl
sbb
adc
add
adc
icebp
decl
test
sbb
nop
add
inc
sbb
xor
sub
dec
outsb
push
mov
sbbl
sbb
cmpsl
jns
mov
mov
jg
data16
repz
mov
jnp
stos
add
xchg
or
ljmp
push
adc
lea
stos
cli
incl
jl
fmull
dec
dec
in
jo
jno
jl
jns
popa
aad
push
jg
cmp
or
call
pushaw
fmuls
imul
inc
test
je
shll
dec
mov
iret
mov
loopne
xlat
jp
dec
iret
mov
xor
pop
mov
adc
cmp
out
pop
mov
cltd
mov
rorl
int3
pusha
out
sub
pop
dec
popa
mov
dec
enter
aaa
lock
push
lods
push
jo
cmp
or
insb
add
xchg
scas
sbb
incl
adc
cmp
jp
inc
call
pop
repnz
popa
push
sbb
fdivl
push
imul
loopne
xchg
cmpb
inc
call
xor
imul
inc
hlt
orl
imul
and
push
pusha
imul
cmpsb
ss
jl
jmp
jp
and
js
push
jo
hlt
xor
mov
mov
dec
in
xchg
xor
enter
call
push
adc
dec
pushf
jle
iret
push
push
pop
push
jg
push
out
cmp
mov
stos
inc
jb
repz
arpl
test
cmp
jbe
push
ljmp
inc
out
dec
cmp
movsb
mov
pop
sub
insb
cmpsl
pop
xchg
push
cli
xor
pushl
mov
in
test
mov
pop
lock
les
lea
call
mov
adc
xor
in
cmp
sub
scas
xor
jmp
add
inc
repz
push
jne
lods
out
cmpsl
xor
aas
sbb
xchg
sub
shl
fs
jge
jo
lret
loopne
int
inc
and
sbb
mov
push
push
push
repz
fldl
ret
inc
cmc
or
mov
mov
sub
mov
lret
pop
push
lods
les
repnz
inc
dec
ret
add
jo
inc
insb
test
hlt
lcall
arpl
push
xchg
sub
mov
decl
test
out
shrl
out
cld
xchg
pop
jbe
rolb
ljmp
int3
or
pop
jg
and
adc
inc
fsubs
decl
out
xchg
sbbb
mov
movsl
outsb
rorb
incl
add
in
dec
incb
je
jl
xor
in
inc
lds
pop
and
push
loop
pop
xchg
cwtl
and
mov
xor
and
ss
push
xchg
xor
xor
cli
decl
mov
rcrl
inc
loopne
and
push
mov
das
pop
stos
xchg
scas
mov
xorb
mov
ljmp
push
sbb
mov
leave
mov
pop
cmp
lock
jmp
dec
std
mov
pop
addr16
cmp
daa
aaa
and
js
mov
push
leave
mov
mov
mov
in
insb
inc
push
cmpsb
and
push
pushl
outsl
inc
in
pusha
hlt
gs
jle
mov
pop
jno
pop
ret
sbb
aaa
shlb
or
test
ljmp
shrb
pop
jae
popa
mov
ds
addl
cmp
sbb
das
xor
sbb
pop
jmp
push
vmwrite
frstor
popf
testb
ja
push
push
xchg
out
gs
clc
inc
mov
repz
iret
mov
shlb
lock
push
dec
frstor
pop
fwait
sub
insb
and
int3
sub
sbb
or
bound
sub
in
xor
or
mov
jae
lcall
rolb
cmp
scas
inc
ss
cmpl
fs
pop
int3
push
cmp
xor
pop
mov
lock
jnp
add
inc
das
push
pop
mov
add
pop
icebp
xchg
mov
sub
push
pop
pop
lds
ss
icebp
pop
mov
mov
mov
mov
push
xlat
pop
sbb
shll
mov
xor
push
dec
int3
or
popa
push
sbb
xchg
test
cltd
push
ja
mov
xor
and
pusha
cmp
subl
add
mov
int3
mov
call
addr16
jb
adc
icebp
xchg
and
jp
mov
push
int
push
gs
mov
jmp
cmp
jae
mov
iret
es
insb
stos
fnstenvs
ja
or
es
add
scas
add
cmpsl
pop
mov
inc
or
fsubl
decl
outsb
js
out
inc
les
push
pushf
popa
mov
push
insb
sbb
faddl
inc
jb
inc
mov
dec
adc
sbb
clc
imul
cmp
add
dec
pop
bnd
push
push
jge
adc
pop
cld
js
loopne
stc
loop
clc
lea
jbe
in
push
insl
cltd
cmp
pushl
adc
insl
imul
clc
pop
lahf
clc
cmp
pop
add
and
pop
add
cmc
test
es
pop
and
fdivrs
mov
add
mov
addr16
scas
or
adc
sub
and
iret
sbb
push
movsb
adc
leave
adc
popl
scas
lds
scas
jb
add
add
imul
andb
adc
cld
decl
call
out
inc
sbb
sarl
clc
jno
mov
mov
push
xchg
mov
push
pop
mov
lret
pop
dec
adc
test
jno
mov
decl
imul
pushf
imul
testb
fbld
jle
add
mov
adc
scas
scas
mov
lret
pop
ja
push
inc
cmp
cmp
dec
lcall
or
inc
sahf
add
daa
into
pop
xorl
lcall
mov
fwait
les
mov
mov
stos
cmp
adc
sbb
push
push
mov
jg
mov
sbb
rorb
fwait
jns
repz
repz
sbb
mov
adc
decl
xor
pushf
jnp
ficompl
ljmp
cmpsl
mov
adc
or
pushl
cld
xor
hlt
mov
data16
push
mov
jp
out
out
add
imul
mov
jmp
lods
jo
call
cs
sub
lret
push
push
aad
xchg
imul
test
decl
jp
dec
loop
cs
xchg
movsl
shll
mov
cmp
decl
mov
lcall
iret
jb
mov
inc
mov
push
xchg
mov
cmp
fnstcw
adc
cltd
xchg
stos
lret
sar
decl
sbb
les
shlb
loopne
add
push
mov
pushf
push
hlt
cmp
decl
xchg
sub
mov
lahf
push
pop
arpl
jle
stos
and
ffree
push
mov
jo
adc
inc
cmpsl
popf
mov
fdivrp
mov
xor
enter
lods
sub
jg
cmc
inc
inc
lock
out
adc
insl
xor
icebp
cmp
lock
fisttpl
jne
scas
inc
jbe
push
xor
incl
sub
and
jmp
mov
insb
jne
imul
fistpl
xchg
clc
sbb
ret
dec
repz
dec
jo
pop
push
ret
or
test
xchg
add
xor
into
cmpsl
mov
dec
ret
fs
lcall
push
ret
or
jg
dec
fs
dec
mov
jno
sub
push
mov
decb
addb
call
loope
push
cld
daa
pop
xchg
cmp
fstpl
xchg
cmp
sbb
aaa
push
stos
push
xor
sub
call
es
out
pop
je
movsl
movsb
ret
add
pop
cmp
xchg
test
pop
popa
mov
xor
cmp
outsb
mov
cmc
lcall
cmpsb
les
sub
mov
inc
int
xchg
ljmp
rclb
mov
inc
sbb
das
shll
xchg
incl
scas
xchg
call
and
clc
cmp
mov
mov
pop
cli
cmp
inc
fsubrl
jg
repnz
insb
push
int
pop
inc
mov
popf
ja
cli
dec
pop
roll
or
xchg
pusha
and
aas
jbe
mov
mov
aas
in
mov
mov
fs
ss
mov
sbb
movb
or
push
jno
adc
dec
gs
out
sahf
mov
inc
mov
push
cmp
xchg
or
mov
shlb
je
jmp
out
cmp
imul
xchg
cmpsb
lret
xchg
stos
dec
dec
imul
cmp
push
fdivl
sub
dec
popf
adc
cs
adc
movsl
stc
test
mov
aas
imul
cmp
mov
sub
push
and
or
mov
idivb
jns
push
inc
cmpsb
ret
add
clc
cmp
popa
cld
dec
pop
pop
popa
and
lods
fcoml
cmp
push
add
test
inc
shrl
inc
pop
dec
loop
insl
inc
jo
mov
sub
adc
in
js
rclb
ljmp
insb
push
inc
and
mulb
mov
xchg
mov
push
fisttps
add
iret
clc
jmp
add
popa
jbe
addl
cmp
mov
push
addr16
test
out
and
mov
push
cmp
pop
fs
outsl
stos
sbb
inc
pushl
nop
sbb
lret
xchg
pop
xor
add
in
push
add
inc
cld
xor
mov
dec
gs
mov
pop
sub
lods
adc
pop
iret
scas
dec
das
inc
push
push
mov
and
or
mov
fisubrl
sbb
std
je
or
aas
jge
sbb
xchg
inc
les
adc
sbb
mov
inc
sar
hlt
mov
pushf
jae
repnz
pop
add
cmpsl
pushf
jo
jmp
stos
xor
aaa
xchg
pushf
xchg
sti
mov
jnp
adc
fcomps
add
das
icebp
mov
mov
jns
rorb
rcrb
mov
imul
hlt
das
xchg
pop
loop
mov
lcall
pop
xor
lcall
inc
cmp
adc
arpl
push
cmp
mov
pop
aas
inc
addl
push
cmp
mov
mov
dec
gs
pop
aas
js
scas
cmpsb
pushf
fs
mov
lea
push
pushl
pop
mov
dec
arpl
or
xor
cmp
sub
push
fisubs
incl
or
xchg
imul
sub
pushl
lahf
push
fidivrs
rol
pusha
pop
inc
fstps
and
dec
push
push
jge
mov
and
movsb
cmp
arpl
iret
or
inc
roll
xor
ja,pn
cmp
ret
movsb
or
imul
aas
fisttps
fsubl
dec
mov
mov
sti
mov
push
inc
repz
pop
adc
imul
push
incl
sbb
pop
iret
or
jno
lcall
sub
mov
inc
mov
inc
cltd
outsl
sahf
mov
decl
loope
arpl
adc
outsl
fisttpll
decl
enter
cs
push
shll
pop
mov
jge
cmp
dec
incl
mov
scas
pop
aas
mov
add
loopne
jo
mov
inc
xchg
dec
mov
cmp
add
lods
mov
daa
js
xor
inc
addb
xchg
nop
jge
pop
xchg
sbb
jne,pn
ja
scas
stc
je
decl
mov
jmp
sub
test
or
repz
pop
jmp
mov
lcall
sarb
or
je
cmp
dec
and
xchg
add
fisttpll
pop
inc
xchg
cmc
test
jp
xor
cmp
jb
dec
pop
pop
sub
sarb
pop
fs
sbbl
mov
and
push
mov
pop
pop
inc
ret
adc
mov
pusha
ljmp
incl
dec
icebp
cmp
mov
stos
dec
andl
pop
in
inc
jp
or
or
adcl
mov
lret
gs
pop
dec
sub
decl
jmp
xor
or
shrb
mov
mov
sbb
add
fbld
or
mov
mov
incl
jo
mov
mulb
xor
sbb
jg
outsl
je
ja
push
add
ds
les
jns
sub
jns
mov
scas
mov
push
jecxz
xchg
out
fsubrs
or
adc
jg
fs
insl
push
subb
incl
dec
xchg
fdivrl
mov
cld
pop
pop
sar
aas
adc
stos
sub
ss
add
jg
test
push
cld
sub
cmpsb
push
add
inc
cmc
dec
incl
pop
jbe
dec
or
or
gs
insb
adc
dec
aas
push
push
add
decl
cmp
jne
xor
add
pop
or
lds
or
lds
jge
add
loopne
addr16
decl
lock
int3
mov
lahf
int3
xchg
inc
arpl
sub
int
shr
and
incl
popa
addb
mov
in
incl
fidivs
sahf
aam
adc
dec
mov
setbe
out
and
lcall
dec
orb
lock
pop
adc
ljmp
xor
pop
js
mov
xchg
xor
jb
aaa
push
pop
ljmp
ret
enter
stos
pop
pop
pusha
lds
push
mov
mov
js
sub
jg
push
lods
jns
or
lds
pop
fs
dec
data16
jle
dec
jne
lcall
into
test
mov
cli
pop
mov
or
adc
and
std
mov
sub
mov
cld
or
mov
lds
in
pop
arpl
jp
jecxz
cld
or
std
adc
xchg
push
and
inc
xchg
dec
out
movsl
sti
sub
cwtl
clc
test
mov
pop
in
lret
add
addl
inc
sbb
sub
sub
decl
js
arpl
cwtl
add
inc
int3
push
dec
jns
fwait
and
jle
das
mov
xor
push
fidivrl
jno
pushf
dec
ljmp
and
movsb
popa
rol
push
add
jb
jbe
sub
incl
push
aas
jl
adc
ja
imul
xor
cmp
dec
sub
add
jmp
or
and
and
daa
imul
sbb
imul
xor
sbb
sub
fdivr
sub
out
lret
aam
in
rorb
shll
std
pop
sub
mov
fildll
mov
daa
lods
loopne
jg
call
dec
dec
test
xlat
mov
imul
lcall
lods
inc
bound
pop
mov
push
lret
andb
and
push
xchg
sbb
test
xor
xchg
bound
mov
iret
add
scas
cli
lcall
into
cmp
jl
mov
mov
sub
incl
or
inc
lahf
sbb
add
mov
pop
mov
xor
clc
repz
scas
cmp
pop
popa
sub
cmp
adc
mov
and
mov
iret
sahf
inc
in
pop
decl
repnz
add
mov
mov
stos
jmp
cmpsb
sti
scas
insl
mov
fistps
mov
cld
incl
xchg
into
cmp
out
cmpsl
xor
cltd
cltd
stc
cmpsb
int3
sub
imul
fs
insb
arpl
fbld
add
in
pushf
test
lret
pushl
pop
dec
sahf
mov
adc
cmp
push
mov
fs
nop
xor
mov
xchg
cmp
movsl
scas
sar
ret
aaa
xor
pop
pop
dec
xchg
psubusw
cmpsl
cmp
lahf
out
cs
fwait
lret
call
and
sbb
and
inc
dec
mov
daa
push
and
cmc
aas
test
stos
jmp
jns
cli
adc
mov
push
stos
push
lods
sbb
icebp
pop
std
mov
aaa
inc
xor
dec
mov
mov
aas
mov
popf
ret
call
add
pop
sahf
aad
mov
or
push
and
aas
lea
out
xchg
xor
lcall
push
inc
pusha
xchg
into
sub
xor
mov
aaa
out
cli
mov
jg
hlt
xor
and
aam
test
outsb
push
inc
icebp
decl
or
inc
mov
mov
cmp
insl
mov
pop
cmp
push
adc
sub
mov
aas
popa
aas
inc
cld
incl
daa
jns
xor
jmp
movsb
hlt
add
xor
call
cld
ljmp
and
das
test
test
sub
xlat
or
cmp
lcall
push
test
and
pop
lods
fisubrl
mov
mov
insl
std
decl
insb
dec
outsl
xchg
in
dec
pop
adc
xchg
or
xchg
jle
or
ret
lock
xor
add
jg
subl
sub
incl
addl
insl
inc
jb
out
daa
pop
sub
call
lcall
add
push
mov
sbb
les
xorl
and
fbld
cmp
cli
xchg
fdivl
xchg
sub
pop
inc
xchg
clc
adc
or
aas
mov
mov
or
add
inc
loope
pop
cmp
add
cmp
sub
je
fs
and
mov
incl
adc
mov
or
mov
and
adc
ljmp
pusha
mov
push
or
mov
add
inc
test
mov
cmp
aas
mov
push
jno
push
push
es
out
mov
ljmp
xchg
daa
adc
jp
inc
test
decl
adc
add
cmp
dec
xor
nop
out
sub
sub
bound
andl
inc
sbb
dec
dec
test
incl
xor
xor
sub
pop
cltd
lds
cmp
mov
sub
das
adc
jle
out
in
mov
lods
adc
sbb
imul
cmp
push
xchg
loopne
xor
popf
repnz
push
mov
repz
daa
cmp
shlb
rorb
dec
ja
add
fcompl
xchg
sbb
stos
loope
mov
inc
add
ss
lret
call
and
jbe
mov
cmpsb
cmp
inc
jns
stos
jmp
rcl
add
xor
movsl
cmp
adc
mov
rcl
repnz
test
shlb
and
rcl
andb
icebp
outsl
into
hlt
outsl
xchg
mov
inc
and
cmpsl
pop
inc
mov
int3
jmp
ljmp
cld
xor
ja
add
adc
fs
lcall
test
cmp
test
push
lods
mov
inc
push
jns
cmc
aad
aaa
cmp
jae
jb
scas
cmp
sbb
popa
xchg
lret
push
add
stos
pop
loop
lea
dec
sbb
mov
jae
pop
es
mov
hlt
clc
sub
ljmp
mov
cmp
push
aam
outsb
hlt
dec
dec
addr16
dec
xchg
pop
pusha
std
movsl
add
lret
rolb
cmpsb
mov
sbb
shl
mov
mov
inc
lods
ror
fdivl
insb
mov
into
xchg
xchg
push
call
jb
into
ret
clc
incl
inc
xchg
sar
movsl
mov
gs
push
imull
adc
mov
cmp
cmp
pushf
and
mov
inc
mov
ret
adc
icebp
mov
int
sub
popf
adc
and
andl
lcall
mov
mov
arpl
dec
add
nop
icebp
push
call
mov
mov
leave
add
and
outsl
adc
xor
fwait
jle
mov
and
xchg
jb
stos
inc
jl
adc
and
cwtl
enter
inc
adc
aaa
xchg
out
fistpll
cmp
mov
les
mov
lock
ja
pop
mov
xlat
lods
mov
repnz
outsl
dec
aam
push
mov
sahf
int3
std
cmp
and
push
cmp
inc
mov
outsl
xchg
outsb
mov
rclb
pop
fs
jp
loope
nop
mov
fldl
adc
test
fbld
sar
jb
inc
cmpb
xor
inc
loop
xchg
mov
push
repnz
subb
xchg
push
dec
sbb
ret
or
shr
push
jmp
int
fs
iret
add
sbb
jo
push
cmpsb
lods
and
incl
and
leave
mov
aaa
mov
into
mov
cli
incl
cmpsl
dec
xchg
inc
and
sbb
lahf
sbbl
mov
lds
iret
mov
ss
ja
out
adc
loop
sbb
aam
bound
mov
lods
call
cli
ljmp
loope
dec
ljmp
pusha
jg
jb
mov
cld
movsl
or
or
mov
shl
push
das
push
push
loopne
dec
push
ror
cld
std
add
jno
mov
loopne
push
xor
call
adc
pop
in
rorl
jno
push
mov
sub
pusha
cmp
imul
dec
cmp
cmp
mov
pushl
gs
adcl
sbb
outsb
test
lods
lret
aas
dec
outsb
inc
mov
das
inc
imul
or
out
clc
cwtl
cld
mov
cmpsb
sub
xchg
cmp
sub
mov
sub
incl
outsb
jne
rorb
jne
mov
or
inc
xchg
xor
push
cmpb
test
mov
or
ljmp
adc
in
or
int3
and
inc
int
mov
xor
sub
push
adc
add
incl
test
jno
lcall
movsl
in
push
jb
pop
push
jecxz,pn
mov
ja
sub
sbb
dec
sbb
scas
dec
inc
jmp
xchg
sub
sbb
cmp
xchg
test
push
jo
jle
stos
jp
push
jmp
cli
scas
clc
jp
pop
jecxz
popa
ljmp
cmc
jae
adc
jge
mov
stos
roll
pop
in
inc
dec
loopne
mull
sub
pushf
mov
inc
pop
mov
pushl
or
jp
mov
fs
or
inc
mov
jbe
sbb
fadds
push
sub
outsb
repnz
les
shl
jg
test
xchg
pusha
adc
pop
pop
sub
xchg
xchg
out
add
outsb
add
movsl
cmp
call
mul
mov
lea
cmovo
pop
repz
and
fwait
cmp
xor
lret
fdiv
ljmp
out
repz
pusha
mov
sub
ljmp
out
xor
add
pop
insl
jne
jns
jb
sub
filds
out
mov
inc
popa
inc
es
jge
xchg
ret
in
pop
jge
mov
pop
inc
jno
mov
pop
inc
aas
mov
out
adc
decl
insb
jno
and
or
or
daa
push
jb
push
mov
add
add
cmp
dec
push
inc
cmp
fwait
cmp
jo
xchg
aas
jmp
dec
xor
pop
cltd
hlt
jle
mov
xchg
sub
cld
pushl
out
int3
addb
cld
cmp
nop
push
mov
adc
lcall
sbb
in
and
roll
push
mov
pop
std
jmp
jae
push
mov
mov
cmp
xchg
sub
lcall
jbe
mov
test
mov
fcompl
insl
mov
dec
lods
ret
xchg
testb
repz
arpl
inc
nop
pusha
lods
stos
stos
push
loop
mov
pop
add
imul
xorl
pushl
lds
repz
jbe
and
push
ds
ljmp
mov
pop
or
clc
mov
xor
adc
pop
adc
aaa
test
push
or
jnp
cmp
sub
fsubl
adc
test
fs
lret
push
pop
jb
stc
push
add
decl
jle
pop
dec
lret
jl
call
inc
sbb
sbb
mov
lcall
ss
mov
aas
xor
mov
cmpsl
xchg
sbb
dec
gs
fbld
jl
push
sbb
clc
and
or
dec
loop
cmp
cmp
cli
or
clc
lahf
add
hlt
add
add
push
and
aam
push
pushl
xlat
or
push
sbb
push
xor
pop
inc
mov
pop
add
jmp
lcall
inc
or
pop
mov
add
iret
adc
or
decl
aas
fcompl
jp
out
xor
adc
sbb
pop
daa
sub
ljmp
lds
cmp
and
and
clc
data16
push
pop
jns
lock
jl
mov
pop
stos
int3
mov
push
es
sub
rolb
xchg
ret
adcb
test
sti
cmp
ja
jl
test
fwait
popa
and
lcall
loope
dec
or
mov
add
xchg
sub
fisttps
popf
aad
push
test
cwtl
pop
inc
push
fnstcw
jle
test
mov
outsb
dec
repz
clc
pop
sbb
out
inc
jae,pt
mov
iret
xor
clc
test
dec
xchg
addr16
sbb
lcall
xchg
xor
pop
scas
enter
rolb
jl
cmp
pop
loopne
pop
push
stos
pop
aaa
fsts
rcl
push
pop
lahf
aas
jns
xchg
dec
es
push
rcl
adc
loope
and
divb
push
mov
sub
fisubrl
test
clc
arpl
push
sub
pop
es
loop
jo
xchg
cmp
adc
push
incl
mov
add
or
sbb
cmp
daa
sarb
repz
or
das
int
or
outsl
inc
jo
cld
fcomip
xor
push
push
dec
sbb
push
jns
cmp
sub
adc
xchg
stos
and
clc
das
or
inc
out
mov
out
pop
andb
scas
paddd
mov
lea
fimull
xor
adc
mov
inc
cmp
push
mov
clc
dec
jnp
ret
movsb
int
xchg
mov
xor
fbld
and
fidivl
inc
adc
add
jge,pt
mov
ss
je
ljmp
sarb
adc
dec
xor
inc
fs
cmp
jmp
mov
add
dec
xchg
fadds
mov
inc
pop
and
pop
dec
aaa
cld
lcall
pop
stos
fildll
mov
mov
xlat
dec
inc
lret
lcall
sub
jg
lcall
dec
jb
out
lock
dec
clc
daa
mov
inc
jle
mov
incl
push
pop
aad
mov
testl
push
inc
into
jns
jg
xor
lcall
dec
aaa
mov
sahf
or
cmp
jp
jb
ds
jecxz
incl
inc
scas
pop
test
addr16
test
pop
sub
xchg
outsb
xchg
jle
mov
nop
out
cltd
loope
fwait
cmp
xor
adc
addl
xor
sbb
adc
pop
pop
sbb
scas
jo
or
icebp
out
jns
jle
sub
pop
and
outsb
push
mulb
sbb
in
or
incl
hlt
outsl
movsb
je
punpcklwd
push
fmull
or
push
or
xor
out
ljmp
push
inc
mov
adc
ja
daa
mov
and
and
decl
loopne
sbb
sbb
or
repz
call
cs
or
in
jle
sbb
test
in
or
push
inc
sub
cmpsb
push
loopne
pop
mov
cmp
add
push
mov
fiadds
mov
inc
clc
dec
dec
xor
inc
sub
sub
icebp
inc
dec
or
xor
aaa
inc
subb
sub
sub
std
jg
movsb
int
js
or
adc
fbstp
lcall
xchg
lods
roll
mov
jp
adc
or
mov
mov
dec
aas
xor
dec
insb
test
jo
aam
inc
jbe
outsl
sbbb
ficomps
cli
fstl
pop
sbb
nop
cmpsb
jg
mov
ret
jle
lods
aas
stos
leave
pushf
jle
add
xchg
fimull
mov
push
leave
js
outsb
lcall
out
mov
call
lea
mov
xor
clc
sub
in
aam
aam
inc
inc
in
sub
out
call
adc
xor
mov
les
lcall
loopne
mov
lods
adc
mov
cmpsb
leave
call
xchg
movsb
pop
out
xchg
data16
or
adc
and
xor
outsb
xchg
lcall
pop
and
inc
pop
lcall
aad
outsb
stos
out
fwait
inc
lock
inc
push
mov
adc
or
cld
mov
std
std
jnp
mov
fcmovnbe
dec
stos
or
jg
mov
sbb
sub
mov
test
jg
jmp
push
push
inc
addr16
or
xchg
ds
addr16
adc
pushl
int
push
cmpsb
mov
xor
jmp
imul
dec
mov
out
and
fs
aaa
mov
add
push
lcall
shll
sti
fcomip
pop
lds
dec
ja
jg
xchg
rorb
pop
lret
je
jecxz
test
outsl
cli
stos
imul
or
imul
stc
pusha
pop
pushw
imul
notb
inc
jns
jmp
pushl
adc
sbb
mov
push
jno
cmp
push
loop
movsl
cwtd
push
loope
in
test
or
or
xor
mov
pop
mov
xor
fcom
dec
mov
xlat
nop
pop
out
imul
loope
cli
dec
inc
bound
pop
adc
cmp
ljmp
adc
jne
sti
jg
es
aaa
std
lcall
sahf
sbb
test
ja
in
mov
les
clc
dec
jmp
sub
mov
cmp
pusha
sarl
dec
lods
xchg
mov
aad
lahf
cli
ret
iret
test
lods
lcall
push
fdivl
cltd
mov
incl
push
pop
repnz
stos
sbb
and
movsb
mov
pop
jb
cld
jg
mov
shll
repz
push
andl
aad
decl
xor
and
sarb
jns
inc
mov
push
outsb
inc
pop
mov
lods
aaa
pusha
aam
xchg
mov
lret
test
mov
and
mov
enter
or
mov
daa
push
xor
fcomip
fxch
cmpsb
stos
addb
inc
push
je
and
mov
pop
shl
ds
push
mov
cld
pushl
fdivrs
popa
imul
mov
add
cmp
call
sti
out
mov
ljmp
inc
fistps
jb
frstor
jnp
xor
and
scas
sbb
xlat
cmpsl
mov
js
popf
rolb
test
imul
stos
fbld
and
loope
mov
push
inc
dec
mov
fcomip
dec
stos
jb
inc
loop
push
inc
pop
ret
fwait
mov
mov
mov
sub
ja
jg
call
ret
push
pop
movsl
and
stos
pop
mov
idiv
lcall
js
mov
std
fistpl
mov
out
outsl
adc
sub
mov
push
mov
add
mov
or
lcall
xchg
adc
sar
out
ljmp
and
insl
jnp
dec
cld
jnp
fs
scas
popa
xor
jbe
rorl
pop
mov
adc
mov
and
arpl
or
jmp
push
test
sub
fs
pop
hlt
orb
popf
pop
test
pop
test
inc
nop
and
mov
cmpsb
es
jmp
jle
dec
inc
in
addb
insl
movsl
lea
dec
push
rorb
push
call
mov
jo
pop
adc
xor
call
dec
jg
pop
std
cli
mov
adc
push
jnp
pop
pop
mov
xchg
call
add
test
pop
cli
sbb
cmpsb
jae
inc
dec
inc
lcall
xchg
pop
aaa
lods
add
xor
shrl
jmp
xchg
testb
addr16
rorb
mov
repz
ret
sbb
push
loopne
jb
in
aas
pusha
push
xchg
in
movsl
lcall
adcb
adc
jbe
dec
push
jbe
ret
jmp
mov
jnp
mov
lds
mov
divb
repz
pop
aam
sbb
pop
cmpb
dec
rcll
inc
push
jne
mov
test
incl
lret
mov
out
insb
inc
js
or
add
or
insb
ret
mov
and
loopne
mov
push
loope
dec
and
nop
jns
mov
mov
int3
adc
or
inc
add
pop
cld
outsl
xor
fmuls
mov
dec
cmc
es
push
mov
pop
inc
hlt
adc
sarb
add
and
sbb
loopne
push
xor
aam
ljmp
mov
push
pop
loopne
arpl
mov
jp
jecxz
flds
mov
loope
lcall
or
popa
ret
adc
pop
popa
mov
xchg
sbb
jmp
ja
mov
scas
or
in
xchg
inc
testb
push
int
mov
pop
inc
scas
sub
jecxz
andl
push
enter
sub
loop
mov
xor
jb
aaa
fidivrl
and
sarl
lods
test
lcall
in
cmp
or
sub
pop
pop
xor
test
incl
mov
or
and
push
xchg
int
in
cmp
mov
imul
inc
mov
jb
inc
out
les
mov
jg
cmc
or
in
leave
pusha
inc
arpl
jae
std
and
fists
mov
sub
pop
movsb
push
lea
movsb
mov
hlt
pusha
xchg
xlat
mov
xchg
scas
mov
mov
fwait
xchg
mov
or
push
inc
popf
jmp
push
jbe
dec
dec
repz
hlt
scas
test
and
dec
jno
adc
and
cmc
xchg
pop
shrb
loopne
fs
fldenv
es
gs
mov
movb
loop
push
not
mov
cmp
pop
and
mov
push
call
push
adc
xchg
std
mov
or
jecxz
dec
cmp
xor
inc
dec
mov
mov
aam
xorb
jg
hlt
pop
inc
out
test
sub
inc
mov
mov
ficomps
pop
data16
xor
inc
inc
incl
pop
jbe
loopne
call
notb
dec
popa
push
mov
mov
sub
adc
ja
int3
inc
adc
dec
add
mov
mov
dec
or
into
or
add
js
test
stos
inc
inc
jnp
pop
push
pop
push
std
lock
pushl
xchg
push
pop
mov
pop
pushl
inc
jg
dec
xchg
sbb
jg
lock
pushf
cmpsb
les
jg
mov
mov
mov
fisttps
pop
mov
fucomi
stos
mov
aaa
std
xchg
fwait
xchg
and
loopne
jge
push
cmp
xchg
mov
pushf
nop
shrl
push
mov
sbb
ja
sub
xchg
jg
or
mov
dec
ret
push
imul
subb
stos
lock
repnz
mov
jmp
dec
inc
push
int3
push
test
in
xchg
shll
lcall
mov
adc
sbb
mov
push
adc
xchg
scas
sub
flds
and
pop
jmp
aad
jb
xchg
lahf
jle
add
mov
mov
js
ja
or
mov
scas
and
add
pop
inc
pop
add
jl
cs
decl
int
lds
sbb
cmp
mov
mov
jp
lods
add
lcall
pop
aaa
inc
dec
xchg
xor
mov
lock
mov
add
dec
xchg
bound
sub
ss
sbb
call
or
popf
popf
fistpl
mov
dec
lock
cli
jmp
outsl
mov
jb
dec
mov
mov
fstpt
jb
or
call
outsl
add
cld
inc
cmp
pop
xchg
dec
and
jb
stos
jmp
push
and
insl
dec
mov
iret
idivb
xchg
xor
and
cmp
push
add
lock
push
mov
dec
test
push
inc
test
jmp
into
push
les
sub
mov
mov
add
push
cmp
jl
add
ret
pop
mov
mov
test
pop
mov
inc
leave
adc
push
mov
movsb
popa
add
sub
jg
call
dec
lds
pop
push
pop
cmp
add
push
out
sbb
sbb
xor
movsl
jl
lock
in
xchg
jp
mov
lcall
jecxz
dec
mov
adc
pop
sbb
mov
push
push
cmp
cwtl
adcb
inc
jmp
add
and
lret
andb
cmp
test
std
aaa
sbb
ret
push
pop
insl
ret
jle
dec
loopne
call
jmp
adc
cmp
or
or
lcall
jmp
adc
cmp
xchg
or
xor
and
stos
stos
fidivrl
pop
loopne
dec
mov
lods
mov
lea
insb
mov
push
aaa
and
call
test
mov
loope
je
sar
push
mov
clc
incl
leave
movsb
fwait
addr16
push
pop
fnstenv
cmpl
nop
cld
ljmp
cmp
mov
jle
adc
xor
xchg
jbe
incl
rcrb
out
scas
jnp
xchg
mov
pop
roll
and
cmpsb
cmp
cmp
push
aam
sub
out
pop
xor
scas
lcall
mov
sub
mov
movsb
mov
xchg
loopne
test
inc
call
loopne
stos
int3
sub
and
mov
shll
inc
push
push
lcall
into
sahf
cs
xor
pop
mov
push
inc
dec
mov
mov
add
jne
mov
push
dec
xor
mov
or
cld
pushf
add
sbb
add
add
test
shlb
add
rorb
lea
jle
lcall
cmp
cmpsl
jle
cwtl
mov
xchg
sub
aas
movsb
inc
sub
loop
mov
das
cld
sub
push
pop
fisttps
cmp
fs
and
mov
std
incl
or
pusha
lea
xorb
sbb
xor
cli
add
inc
push
fistps
in
mov
out
and
mov
push
sbbb
fiadds
lea
sub
mov
decl
mov
test
dec
data16
ret
sbb
cmp
jge,pn
scas
jmp
xchg
mov
fdivs
ljmp
mov
push
xchg
in
arpl
mov
enter
popa
mov
inc
inc
pushf
clc
mov
sbb
adc
mov
out
daa
jno
pop
xchg
mov
sbb
and
and
outsl
popf
sbb
bound
xchg
jecxz
add
dec
bnd
add
pmaddwd
pushl
sub
movsl
mov
push
arpl
push
decl
lock
inc
adc
adc
lock
cmp
and
pop
or
icebp
pushl
cwtl
push
inc
ja
add
add
imul
xchg
ret
ljmp
andl
pop
fwait
outsl
in
jl
lock
push
ret
loop
inc
inc
pop
pop
cmp
aas
dec
fildll
sbb
daa
jns
stos
in
mov
pop
int
push
sarb
decl
pop
sbb
cmp
jne
pop
pop
push
pop
test
push
or
loopne
cld
push
adc
inc
mov
jbe
mov
fwait
dec
cld
jmp
pop
jbe
sbb
mov
dec
es
das
xchg
cli
inc
adc
outsl
inc
xor
and
cltd
sub
iret
xor
jp
popa
fdivrs
jge
push
and
add
dec
jmp
inc
sub
and
or
mov
sub
sub
daa
stos
lcall
push
jbe
inc
and
clc
or
xor
fidivrl
lcall
mov
or
test
xlat
mov
dec
ljmp
ljmp
pcmpeqd
jg
sbb
scas
popf
push
xchg
mov
xchg
dec
repnz
cmp
lcall
mov
scas
sbb
fwait
int3
mov
push
jb
in
pop
xchg
cmp
mov
mov
push
mov
lods
test
mov
lds
sbb
jmp
push
mov
pop
mov
inc
inc
fs
fwait
pop
cmp
and
adc
scas
or
pop
shll
xor
imul
test
and
or
adc
jg
xor
xor
add
sbb
push
mov
pop
adc
ljmp
call
sub
repz
clc
sbb
dec
add
jo
test
mov
push
sub
pusha
sarb
lret
fiaddl
pop
sbb
call
cwtl
jp
mov
xor
push
jnp
insl
lret
popf
cmpsl
fldenv
xchg
out
push
dec
cmp
or
pushl
pop
sub
frstor
or
sbbb
mov
mov
dec
ja
sbb
xchg
pusha
mov
dec
dec
inc
loopne
lcall
insb
ficomps
pop
dec
add
dec
sbb
jg
xchg
mov
mov
call
xchg
out
xor
xor
push
or
lret
mov
lea
jecxz
push
lock
add
dec
pop
cmp
gs
mov
add
sahf
or
mov
mov
jecxz
decl
jp
xchg
pop
jbe
and
mov
jae
push
lock
dec
or
inc
ljmp
repnz
inc
jecxz
dec
add
and
inc
cmpsb
insl
js
mov
dec
lds
aas
aaa
lcall
pop
cmp
das
lds
jle
dec
or
movsb
mov
xchg
push
mov
ja
clc
cmp
ret
jb
aam
push
call
je
inc
imul
lods
adc
add
pop
pop
cs
mov
add
mov
mov
sti
push
aaa
add
call
popf
adc
and
xchg
xchg
fwait
jmp
dec
sbb
fisubl
pusha
mov
test
dec
pop
mov
les
ja
push
insb
xchg
pop
test
xchg
decl
jl
jbe,pn
pop
dec
imul
lcall
adc
mov
scas
pop
mov
mov
aam
mov
repnz
mov
or
add
push
dec
loopne
outsl
jmp
fisttpl
pop
fucom
push
xchg
loopne
adc
cli
dec
call
or
sbb
xchg
icebp
lcall
pop
mov
cwtl
js
out
inc
repz
pop
aaa
out
jl
loope
adc
ss
or
or
and
sbb
mov
pop
shlb
lock
jnp
ret
addr16
ja
jge
cmp
xchg
mov
inc
xor
popl
cmc
decl
sbb
and
adc
aam
xchg
pop
pop
and
lcall
inc
imul
jp
enter
sbb
sbb
pop
pop
jno
sbb
popf
mov
mov
adc
jmp
push
aas
dec
add
adc
mov
cmp
jg
scas
xor
sub
and
movsl
mov
loopne
and
clc
and
cld
stos
sti
cmpsl
ljmp
sub
or
jmp
jle
inc
cmp
lock
test
js
or
cmp
pop
xlat
clc
jo
mov
push
add
xor
movsb
xor
addr16
jo
sbb
call
mov
shlb
dec
mov
cmpsb
fdivr
in
ljmp
push
je
loope
push
sub
cwtl
and
xchg
hlt
xchg
insb
in
scas
lret
and
mov
rorl
push
repnz
jo
pop
aad
sub
adc
lahf
cmp
fwait
lcall
addl
out
pop
mov
xchg
faddl
js
out
sub
int3
cld
das
clc
lcall
pop
subl
dec
into
mov
dec
movsl
into
xchg
scas
outsb
jb
incl
dec
inc
sbb
dec
inc
add
fnsave
imul
push
sub
sahf
adc
xchg
aad
jp
mov
ret
sbbl
cld
add
and
jg
or
inc
jns
rcrl
ljmp
cmpsb
cld
xchg
incl
popa
ret
and
in
sub
pop
decl
xchg
js
mov
adc
inc
lock
push
inc
jp
pop
insb
dec
div
ljmp
imul
test
adc
lret
fs
and
dec
fistpll
and
xor
and
sbb
adc
push
std
add
es
cltd
loope
pop
jmp
xlat
sar
ljmp
push
stos
lds
pop
inc
push
jnp
daa
jl
in
adc
das
pop
pop
inc
inc
mov
xchg
mov
sbb
cmpsl
jo
fstpl
je
lcall
push
incl
adc
rcrb
repnz
in
movsl
jp
mov
mov
jl
inc
imul
int3
sub
clc
and
addb
inc
shll
das
xchg
sub
shll
cmc
mov
mov
lcall
and
or
aas
jbe
sbb
loope
jl
mov
iret
cmpsb
fs
jmp
js
fsubl
dec
ja
cmp
pop
dec
xchg
add
xchg
rcr
sar
cmpsb
lock
js
fiaddl
lods
mov
add
jp
mov
jae
xchg
or
lcall
push
mov
mov
cwtl
pop
int3
add
dec
ret
pop
js
repz
lcall
mov
lods
lret
lods
fdivs
icebp
nop
jbe
or
incl
or
cmp
cmp
push
or
mov
cwtl
sub
xchg
dec
iret
mov
push
insb
mov
mov
jg
inc
pop
ret
incl
loopne
pop
pop
mov
mov
xor
lds
push
jne
je
stc
lock
jmp
jno
das
push
popa
mov
jmp
cmc
sub
icebp
xchg
push
testb
popa
into
jl
pop
loope
ljmp
mov
arpl
shll
outsb
xchg
test
les
cld
filds
add
cmp
adc
sbb
push
pop
mov
js
xchg
icebp
mov
jns,pt
mov
lret
decl
push
inc
into
sub
out
sub
xchg
adc
mov
ss
pushf
loope
jecxz
movsb
mov
addr16
rcrb
pop
rolb
dec
filds
adc
xchg
in
mov
das
inc
pushl
popa
aad
je
dec
pop
repnz
push
pop
xchg
ss
mov
mov
sbb
std
pushl
fldenv
in
subb
pop
mov
hlt
decl
dec
daa
xor
xor
roll
push
mov
dec
popa
mov
mov
ficoml
lock
inc
cmpsl
lret
lods
pop
fcoml
push
loope
pop
pop
ret
cmovae
push
xor
fists
mulb
das
jbe
repz
cmp
ljmp
dec
insb
icebp
adc
aas
inc
pop
xchg
loope
addr16
mov
and
xchg
iret
mov
scas
cmpsb
out
scas
outsb
fdivl
push
out
cmp
mov
ljmp
mov
or
mov
push
mov
mov
call
adc
jmp
cmp
es
push
push
push
push
testl
scas
mov
pop
pop
mov
test
adc
shrl
js
adc
jmp
inc
popa
subb
out
jns
xchg
or
in
out
mov
adc
push
fwait
scas
cli
jns
test
loope
push
jmp
hlt
dec
mov
mov
add
insb
cld
adc
into
push
jno
mov
ljmp
xor
sbb
cmpl
inc
stos
dec
cli
mov
mov
repnz
pop
adc
mov
incl
stos
dec
dec
lods
mov
outsb
push
inc
out
adc
add
pop
clc
test
mov
xchg
out
or
inc
nop
adc
mov
cs
xchg
fiadds
incl
insb
lds
mov
movsl
pop
bound
mov
sarl
lcall
into
and
mov
cltd
aam
jmp
rclb
jl
sub
imul
scas
int3
and
jg
ljmp
icebp
mov
aam
clc
add
scas
push
push
scas
add
fucomip
fistl
inc
xchg
ja
mov
mov
pop
ja
ret
jg
rolb
xchg
stos
insl
xlat
push
fwait
pop
cld
add
inc
popf
aaa
jg
mov
cmpsl
js
mov
mov
test
cwtl
jp
dec
jle
iret
add
out
clc
pop
orl
ja
lods
fstpl
inc
repnz
jmp
mov
xorl
sbb
sahf
xlat
movsl
dec
sti
fwait
jmp
call
repnz
dec
imul
out
adc
daa
mov
add
je
repnz
or
shll
movsl
sub
incl
or
adcl
inc
mov
xchg
flds
hlt
cld
xchg
pushl
adc
inc
sarb
cld
cmp
inc
mov
out
cli
dec
mov
in
or
out
ja
jmp
sahf
mov
repz
mov
push
bound
or
pop
dec
jmp
jle
sti
mov
jle
cmp
das
xor
adc
sub
mov
mov
pop
cmp
pushf
out
push
lds
or
fcoms
push
mov
outsb
shlb
popa
cmpsl
xor
xchg
out
xor
xchg
cli
mov
mov
call
popa
mov
mov
fs
jb
push
scas
inc
call
icebp
mov
repnz
mov
es
mov
inc
mov
xchg
int3
xor
lods
pop
push
jnp
lods
adc
test
fdivr
pushl
pop
adc
or
jp
adc
cmpsb
ret
xchg
ret
push
inc
clc
call
dec
rcl
mov
cmp
jne
cmp
push
call
fmuls
mov
add
loopne
repnz
jnp
xor
pushl
mov
dec
sahf
sbb
inc
popf
std
xchg
add
jae
clc
popf
rcrb
cmpsb
outsb
adc
clc
or
pop
movsb
xor
nop
aam
jp
xchg
xlat
adc
mov
add
push
push
mov
mov
in
xchg
jp
scas
xchg
call
mov
iret
pop
xchg
dec
mov
insl
add
lcall
sub
pop
test
call
pop
mov
ljmp
gs
icebp
xchg
mov
xchg
mov
fildll
mov
dec
mov
repnz
jl
mov
cmp
in
int3
cmpl
mov
mov
adc
push
mov
cwtl
dec
testl
cld
lea
push
popl
inc
test
add
cmp
incl
push
stos
inc
in
sbb
pop
jno
int3
cwtl
cli
sbb
inc
mov
xchg
pop
clc
push
mov
pop
movsb
mov
pop
in
xchg
ret
and
jo
idivb
and
pop
fisttpll
mov
pop
fs
mov
add
sbb
mov
xchg
insb
gs
mov
jb
mov
cltd
push
decb
jg
mov
cltd
pushf
push
ja
leave
andb
mov
filds
cltd
dec
sub
mov
inc
mov
jg
xchg
ljmp
ja
fisubrs
ret
int3
lret
lahf
insb
inc
cmp
push
xor
arpl
fldl
and
shll
dec
repz
pushf
xchg
lahf
push
andb
jnp
orb
lcall
mov
aas
mov
incl
xchg
fs
movsl
out
mov
jmp
iret
cmp
mov
mov
fs
cwtl
adc
mov
xchg
pop
mov
xor
loopne
clc
cmpsb
inc
cmc
sub
jb
loope
push
aam
sarl
decb
aad
mov
ds
fwait
jg
iret
mov
mov
clc
lcall
cmp
jl
out
inc
jmp
xchg
les
mov
xchg
dec
idivl
sahf
outsb
sub
dec
test
scas
outsb
sarl
sbb
roll
cmpsl
jge
jg
or
adc
jp
xchg
push
pop
pop
clc
mov
add
jb
out
ljmp
lock
lret
mov
xchg
dec
aad
mov
insl
out
sub
lcall
jp
fistpll
jo
std
adc
pop
rcl
mov
incl
push
xlat
sub
imul
and
xchg
leave
mov
cmpsb
mov
pop
xorb
mov
addr16
lock
ljmp
and
jecxz
xchg
jnp
nop
jecxz
popa
ret
ljmp
fbstp
fwait
adc
in
mov
mov
mov
sti
stos
mov
jmp
loopne
xlat
fwait
pop
in
scas
mov
pop
dec
push
cld
mov
push
and
xchg
rolb
push
pop
xchg
decl
jl
mov
mov
sub
push
cmpsb
decl
lds
push
mov
mov
test
ja
sbb
clc
pushl
sbb
jmp
jne
fwait
in
sbb
icebp
sbbl
cld
mov
or
les
mov
clc
dec
cmpsb
call
lret
mov
push
mov
scas
xchg
jp
adc
mov
add
mov
mov
or
xchg
fists
ljmp
xchg
pusha
cmc
sbb
dec
mov
pop
jl
leave
lods
inc
icebp
mov
xor
mov
xor
xchg
cwtl
js
add
sarl
inc
movsl
lret
ljmp
adc
test
jecxz
xchg
pop
add
xor
shrb
mov
stc
sub
bound
xchg
jmp
mov
mov
mov
aaa
xchg
incl
dec
gs
jecxz
pop
jmp
fisubl
mov
movsl
movl
insl
aad
xchg
dec
into
pop
dec
cmpsb
and
movsl
loop
adc
add
adc
lret
lret
dec
decl
stc
or
xchg
sub
xchg
popa
out
aam
jae
call
add
scas
int3
roll
test
adc
decl
clc
xor
dec
mov
push
lcall
fisubrs
push
nop
fdivl
mov
mov
fldl
decl
cmpsb
mov
inc
and
xlat
push
arpl
outsb
repz
mov
dec
fstpl
incl
xor
inc
cltd
lret
jle
and
shrl
pushl
push
mov
mov
jl
pop
mov
cmp
fwait
lock
mov
data16
out
mov
pop
sahf
lea
pop
mull
dec
test
ret
mov
rorl
in
lret
mov
or
cmp
sbb
xchg
cs
push
fs
call
mov
push
inc
mov
test
test
lcall
cmp
lcall
gs
fldl
add
ret
test
mov
fwait
xchg
addr16
stos
pushl
mov
ljmp
dec
cmpsb
ljmp
scas
mov
push
cmp
pop
les
ja
push
in
mov
cli
mov
jecxz
dec
addb
int3
and
or
cltd
xor
incl
xchg
repnz
push
mov
sub
mov
stos
cmc
pushf
pop
out
orl
fistpll
mov
cwtl
and
mov
push
jl
fsts
cmp
dec
sbb
sbb
mov
fsts
addr16
cld
cltd
shlb
push
jo
xchg
xchg
ss
incl
push
mov
sahf
jnp
mov
lds
mov
fwait
cwtl
rcrl
clc
aaa
cld
dec
sub
mov
adc
xchg
inc
and
inc
jge
fst
leave
mov
adc
leave
movsl
lock
scas
xchg
pop
lds
cwtl
inc
scas
sarb
xchg
mov
and
fcoml
scas
fisttps
rcrb
pop
ret
push
push
cwtl
xor
aam
xchg
aaa
jl
aaa
cld
incl
inc
call
mov
cli
adc
xchg
call
ds
mov
es
jae
xchg
int
jnp
sub
aas
mov
scas
push
stc
xchg
push
nop
push
dec
imul
xor
iret
xchg
mov
dec
clc
scas
xor
cmp
pop
adcl
movsl
rcrl
imul
xorb
dec
fnsave
xchg
sub
mov
and
and
cld
outsl
jle
andl
fdivrl
jg
aaa
addl
pop
popa
add
stc
xor
sarl
pop
nop
mov
xorb
push
in
inc
xor
scas
xchg
dec
inc
fwait
sarl
add
movsl
icebp
mov
lock
mov
jne
sbb
jmp
dec
xchg
pop
js
stos
lret
mov
or
cwtl
pushl
faddl
out
clc
sbb
imul
cmp
or
pop
xchg
les
cmp
call
fsubrl
call
mov
add
addr16
arpl
lods
dec
add
adc
cld
stc
mov
cmpsl
outsb
int
adcl
jbe
cmp
adcb
faddp
cmp
sbb
daa
test
and
sahf
inc
stc
ss
pop
nop
xchg
mov
xor
out
cmpsl
scas
pop
mov
add
subl
nop
pop
inc
lcall
mov
outsl
clc
or
sub
lea
fs
rorb
dec
stos
sbbb
push
out
filds
and
insl
in
jbe
dec
mov
loope
adcb
adc
push
int3
xchg
cmp
mov
jp
mov
lcall
cld
stos
push
repnz
incl
xchg
inc
test
push
mov
cmpsb
loope
addr16
mov
pushf
int3
cld
mov
cmpsb
aaa
std
ljmp
add
jbe
or
stos
aam
inc
enter
jbe
mov
sar
sahf
scas
mov
push
lods
inc
aas
ret
jo
cmpsl
mov
sbbb
pop
test
clc
lcall
stos
js
and
push
jnp
push
into
scas
ret
xchg
fadds
decl
mov
outsb
out
add
push
mov
mov
and
mov
pop
mov
sbb
jg
and
inc
cmp
jmp
scas
int3
sub
mov
cld
mov
lcall
and
add
mov
push
notb
mov
subl
and
inc
jg
mov
sbb
mov
sarb
int
loop
push
imul
cld
lahf
mov
push
mov
jg
add
mov
push
leave
xchg
ljmp
int3
stc
mov
sub
insb
test
dec
jge
enter
xchg
rolb
roll
ja
xchg
loop
inc
fistpll
cmpsb
lods
out
incl
repnz
stos
inc
sahf
push
imul
mov
cmp
or
inc
loop
mov
lcall
jg
pop
adcl
push
lds
stos
inc
xchg
sbb
mov
in
lcall
jecxz
daa
pusha
in
int3
push
orb
dec
ficoml
fbstp
lahf
push
orb
jge
roll
jg
cwtl
out
mov
rclb
addl
jg
aas
mov
mov
mov
adc
push
adc
es
std
call
dec
mov
xlat
xchg
push
lds
mov
push
lret
mov
fimull
mov
mov
xchg
jmp
mov
idiv
ja
lcall
xchg
mov
in
xchg
push
sarb
xchg
jl
lret
mov
pop
pop
andb
les
adc
sbb
movsb
pop
mov
data16
lcall
cmp
inc
mov
lcall
xor
mov
jmp
push
sahf
jae
adc
ficoms
push
pop
scas
out
add
add
jno
xchg
repnz
fcomip
mov
inc
mov
jbe
stos
call
decb
stos
lcall
scas
mov
lea
and
push
push
addr16
or
pop
out
xchg
in
sbb
mov
sub
jmp
mov
pushf
fs
mov
sbb
jae
xchg
xchg
sar
xchg
mov
cmp
cwtl
pop
shll
pop
mov
push
cli
lcall
push
int
aad
data16
xchg
mov
mov
iret
jmp
push
xchg
jnp
add
xchg
leave
lcall
xchg
cmp
pop
divl
jae
xchg
fistpll
pop
imul
mov
cld
mov
cli
sbb
iret
mov
mov
loope
out
jp
inc
addb
xor
xchg
mov
stos
out
call
movsb
dec
into
mov
ljmp
xchg
daa
dec
lret
les
repz
lods
or
pop
in
add
or
jne
mov
mov
mov
lahf
lcall
push
repz
inc
arpl
es
mov
hlt
xchg
outsb
xlat
mov
loope
ret
ret
cmpsl
cmpb
and
fcomip
decl
sub
jle
iret
xchg
cmpsl
mov
rorl
incl
jg
adc
in
push
dec
frstor
inc
inc
xchg
insb
out
lret
lcall
cmpsl
inc
lds
rcrl
rcrl
add
adc
pop
inc
sarl
sbb
cmpsl
repnz
pop
loop
jns
lret
add
add
les
inc
inc
mov
es
jb
fsubl
adc
rorl
or
push
sbb
xor
loope
mov
pop
inc
loopne
pop
les
ret
pslld
inc
pop
test
add
add
test
fstpl
jb
shrb
fcompl
add
push
fs
jle
sub
lcall
push
xchg
sub
ret
mov
pop
push
test
repz
inc
pop
jg
cmp
jg
test
jp
inc
nop
dec
push
loopne
add
inc
inc
sti
mov
js
mov
push
mov
xchg
push
pop
mov
jp
push
cmpsb
jns
jmp
lods
outsl
inc
sub
xchg
in
imul
bound
mov
push
jne
scas
dec
push
jno
jno
test
xchg
jb
fidivl
push
filds
and
mov
ss
shll
mov
pop
jbe
pop
adc
decl
clc
mov
ret
sbb
or
sub
lods
jbe
adc
ljmp
inc
inc
push
push
mov
imul
cmpl
or
imul
cmpsb
push
les
pop
or
inc
out
xchg
js
cmpsl
dec
aam
or
dec
push
shlb
out
sbb
pop
rorl
cmp
adc
jnp
ret
out
inc
xchg
insb
pop
pop
test
dec
js
mov
cmp
inc
lea
dec
add
fmuls
out
xor
jg
pop
rclb
cmovle
sbb
jle
jb
fs
stos
add
mov
mov
pushl
push
jo
arpl
mov
or
push
jge
inc
movsb
mov
cld
incl
xchg
dec
sti
mov
stc
dec
outsl
cmp
dec
xor
leave
cmpb
sahf
cmp
add
pop
dec
popf
mov
sub
mov
jg
adc
ja
ret
add
lcall
mov
cmpsb
or
sub
pop
push
outsl
cld
pop
clc
sbb
fs
mov
jg
pop
insl
les
out
jae
xor
out
push
and
sahf
icebp
lcall
cmpsl
adc
js
daa
jmp
push
or
ss
mov
jg
shlb
test
popa
scas
aaa
jo
and
mov
inc
lcall
movsl
and
enter
mov
sbb
sub
mov
pop
std
mov
xorb
mov
ss
movsb
cmc
lods
pop
mov
mov
sub
pusha
int3
add
sub
nop
xor
pusha
test
movq
jg
mov
jns
sub
pushl
sbb
loop
xchg
and
out
pushf
sbb
mov
aam
jg
pop
lret
outsl
pop
cmp
fbstp
pop
std
jg
cmp
push
mov
shlb
mov
or
aas
mov
pop
adcb
pushf
cmovb
pop
cltd
enter
dec
add
xchg
mov
pop
jl
std
lcall
mov
push
add
dec
js
adc
jp
ds
scas
pop
jnp
add
fildll
pop
xchg
inc
in
mov
lcall
adc
adc
cmpsb
pop
out
push
shll
and
jno
cmp
adc
sbb
dec
rorb
xchg
clc
outsl
outsl
xchg
lahf
mov
cld
xchg
push
mov
cmpsl
and
andb
and
jg
add
je
cld
xor
push
push
jmp
inc
enter
iret
push
decl
dec
jle
sub
insb
int
pop
sub
mov
cmp
sub
jg
std
xchg
push
bound
sbb
dec
lea
inc
xlat
xchg
dec
xchg
adc
and
adc
jle
sbb
xor
test
nop
movsl
cmpsb
sbb
jnp
ja
push
xchg
cmp
cmp
xor
xor
xchg
stos
cmp
or
call
jecxz
adcl
push
push
mov
sarl
and
push
out
sub
cltd
mov
scas
dec
clc
jg
jg
and
add
xchg
gs
jl
pop
stos
push
jno
into
mov
mov
mov
adcl
mov
inc
mov
xchg
mov
mov
filds
loope
add
and
adc
loop
mov
in
fs
mov
pop
mov
and
call
cmpsl
cmp
test
and
inc
fisttpll
mov
adc
mov
pop
sbb
cs
add
mov
mov
stc
push
ljmp
jmp
jno
pushf
pop
aam
jle
lds
stc
sbb
adc
mov
insb
cmp
addr16
decl
incl
lahf
mov
and
xor
xchg
push
pop
xchg
popl
int
cmpsl
mov
inc
dec
imul
loope
add
pop
nop
sahf
xorl
xchg
or
lcall
data16
mov
mov
cmpsb
jp
adc
sbb
out
cs
push
pop
mov
aam
push
outsb
push
push
test
or
jmp
daa
je
testl
scas
clc
mov
lods
xchg
xor
adc
mov
cli
xchg
inc
into
popf
lcall
dec
jl
pop
or
sub
out
inc
cmpsb
xor
jbe
dec
mov
inc
pop
cmp
cmpsb
sub
mov
dec
test
dec
mov
icebp
mov
sbb
jns
das
cmp
mov
push
pop
movsb
lahf
sub
pop
les
inc
add
mov
mov
nop
add
inc
aam
xor
shl
xchg
xchg
call
cwtl
jo
fwait
cld
test
mov
jne
mov
int
add
incl
movl
push
dec
and
dec
mov
xchg
mov
push
add
imul
push
mov
pushl
ljmp
add
lods
outsl
push
outsb
subb
incl
sahf
test
pop
in
movsl
mov
or
mov
push
repnz
mov
push
test
xchg
scas
jae
mov
sbb
insl
lods
mov
cmpsl
xchg
xchg
lock
sbbl
out
mov
mov
jbe
test
dec
rcr
sub
scas
lods
or
jno
aaa
push
cmpsl
mov
cmp
cmpsl
stos
push
push
in
pushf
dec
das
mov
hlt
mov
nop
add
push
ss
pop
push
sbb
pushl
jp
push
pop
fwait
sub
jge
or
inc
add
clc
pop
pusha
loopne
jnp
cld
inc
ret
jo
push
dec
push
in
inc
loopne
outsl
shrb
push
push
jne
adc
and
push
nop
dec
daa
push
in
jb
test
push
cmc
mov
mov
aas
dec
call
dec
cwtl
ja
jbe
sahf
cmp
lock
std
cmp
fcomip
incl
test
jl
dec
jge
rolb
cmp
jle
cmpsl
movsl
jle
ret
ret
dec
mov
jmp
lcall
int3
xor
out
xchg
lea
push
decl
insb
out
ss
inc
shlb
xchg
call
cld
incl
in
push
jnp
mov
mov
fidivl
dec
insb
or
in
jge
std
and
pop
push
inc
sub
pop
pushf
cmp
and
add
stc
push
pushf
mov
mulb
sbb
mov
jecxz
sub
dec
xlat
leave
sub
test
pusha
xchg
xlat
pop
sub
mov
pop
fucomp
push
xchg
push
mov
dec
inc
ljmp
add
shlb
mov
mov
mov
pop
sarl
inc
xlat
js
repz
inc
js
incl
movsl
cmp
adc
mov
sbb
das
mov
addb
testb
imul
test
stc
jns
clc
mov
jl
mov
fldcw
push
ret
pop
jge
cld
mov
or
inc
inc
push
dec
mov
dec
call
inc
add
xchg
clc
pop
pop
cmc
iret
jb
stos
mov
stos
ja
jmp
lock
cwtl
sbb
dec
jecxz
pop
rcr
pop
test
add
outsl
jl
mov
lahf
push
insl
je
pop
cmpsl
and
jg
lock
inc
icebp
cmpsl
mov
rorb
mov
cmpsl
imul
xchg
rclb
and
clc
mov
decl
inc
inc
cs
dec
and
bound
xor
mov
or
iret
out
ljmp
sbb
in
lock
inc
je
movsl
stos
gs
and
inc
and
mov
lock
fwait
les
xor
fmull
mov
mov
xchg
cwtl
mov
ljmp
bound
popa
pop
xor
in
cld
cmp
dec
imul
das
mov
inc
pop
pop
popa
mov
jge
mov
sub
add
leave
adc
std
pop
mov
mov
add
xchg
jbe
mov
ljmp
icebp
push
movsb
xchg
int3
jle
or
stos
dec
push
imul
fs
xorb
lcall
js
fidivl
dec
call
and
shll
fsub
push
mov
sahf
inc
cmp
loope
pop
dec
outsb
sahf
push
out
in
jb
mov
jmp
cmp
jmp
rcrb
inc
cmc
jnp
scas
mov
repnz
mov
mov
ss
icebp
jle
mov
orl
test
in
inc
addl
jg
jecxz
stos
enter
inc
and
fcomi
das
aas
lcall
sbb
inc
push
fs
and
sbb
cmpl
jmp
jnp
mov
cmp
push
mov
gs
mov
pop
mov
xchg
pop
shrl
pop
ja
inc
arpl
mov
push
mov
scas
xchg
icebp
imul
push
shl
push
mov
insl
xchg
nop
mov
es
clc
adc
js
jb
repnz
pushl
cmp
orb
aas
js
dec
test
lock
in
lods
in
int3
cmp
jmp
dec
aas
insl
dec
ret
lret
sub
pop
xor
ljmp
xor
insl
xor
sub
mov
rclb
scas
mov
js
sub
lcall
out
push
sbb
lret
into
cld
dec
xorl
sbb
fdivr
jecxz
ja
mov
jne
cli
fistps
mov
add
call
cltd
cltd
and
lods
mov
inc
popa
xchg
out
scas
adc
out
les
cs
lcall
mov
call
or
ljmp
mov
jg
fs
aad
test
mov
pop
jle
pop
cli
ret
or
dec
orb
jl
jae
mov
popf
xchg
loopne
cmpsl
mov
push
iret
aam
les
hlt
push
cld
pop
push
pop
scas
sub
mov
push
and
push
inc
xchg
jae
out
lds
push
movsb
popl
test
int3
insl
test
jns
aam
cltd
add
sbb
ljmp
insl
gs
mov
out
adc
out
js
mov
sbb
fwait
sbb
xor
call
arpl
repnz
inc
iret
mov
popf
gs
or
jp
into
std
jg
arpl
jns
or
lock
sahf
cltd
mov
int
dec
xchg
cmpsb
mov
mov
pop
jg
jnp
mov
xchg
xor
ret
incl
mov
mov
dec
shrb
loope
adc
bound
mov
mov
cmpsb
loopne
outsl
cmpb
cld
and
fadds
inc
xchg
fs
movsl
mov
stos
cmp
in
lock
mov
aad
dec
dec
inc
loopne
pop
jmp
xor
shrl
pushf
imul
or
add
xchg
lods
jne
xlat
add
hlt
jmp
add
cmp
xchg
add
les
sbb
stos
pop
add
pop
mov
scas
test
mov
mov
ret
mov
mov
push
inc
xor
mov
dec
push
pop
mov
pop
or
add
or
push
jg
lcall
inc
jbe
lcall
aam
test
dec
cld
incl
add
cli
xor
decl
and
xchg
push
lahf
jne
cld
sub
xchg
scas
cmp
lahf
popf
es
test
lds
push
imul
push
lods
inc
jge
mov
jb
mov
jg
test
iret
jns
dec
cmp
movsl
ljmp
fwait
cwtl
lahf
sarb
add
lods
sbb
aad
ljmp
push
hlt
lea
xchg
ficoms
pop
fcmovbe
adc
mov
ljmp
lea
pop
inc
iret
cs
ja
cmpsl
jns
repz
mov
out
sar
cmp
inc
inc
dec
aas
inc
xchg
cmp
pop
decl
or
mov
jo
inc
mov
sub
or
scas
xor
cmpsb
add
push
lcall
rcrl
inc
jecxz
push
mov
fimull
cmpsb
mov
mov
push
inc
inc
outsl
push
test
xchg
out
mov
inc
imul
std
jb
pop
movsl
arpl
data16
rolb
sub
jmp
xor
inc
xchg
loop
cld
jmp
ss
inc
mov
push
pop
jg
and
jns
adc
xor
mov
sbb
hlt
xchg
xchg
popa
mov
xchg
jecxz
xchg
cmpsl
adc
pushf
inc
mov
retw
push
and
out
xor
xor
adc
pop
inc
incl
adc
xchg
insb
ds
out
inc
push
cmpsl
mov
roll
decl
test
out
dec
fst
fs
mov
sbb
add
sub
ljmp
rorl
arpl
and
cmp
mov
inc
rorb
push
mov
jae
mov
jecxz
jmp
sub
mov
xor
xor
jp
cmpl
out
call
adc
popa
pop
addr16
ljmp
dec
sub
mov
mov
roll
inc
call
fistpll
loop
pop
imull
mov
adc
or
cmp
jmp
ret
xchg
ret
mov
mov
pushl
push
gs
lea
inc
outsb
sbbb
stos
and
pusha
hlt
mov
mov
pop
adc
xlat
push
cwtl
cmpsb
movsl
xor
dec
iret
jnp
insb
jne
jae
dec
lahf
mov
scas
jl
bound
or
fwait
pop
jecxz
cs
outsb
fiadds
incl
inc
js
mov
notb
roll
inc
cli
lcall
mov
out
inc
pop
int3
push
xchg
mov
cmp
push
adc
pop
int
imulb
pop
shrl
add
pushaw
daa
outsl
repnz
or
gs
test
xor
test
pushf
push
sub
push
xchg
out
xor
jmp
test
xor
inc
xchg
inc
push
jne
adc
mov
sti
cmp
xor
mov
jb
test
add
in
dec
adc
cli
scas
incl
je
mov
nop
cli
xchg
jg
sub
arpl
aaa
add
clc
cs
lcall
pop
sub
jmp
outsb
pop
test
xchg
inc
xor
popa
add
ljmp
dec
aam
lcall
mov
mov
xor
cld
pushl
mov
iret
xchg
arpl
adc
mov
sar
pop
lock
fmuls
lock
in
lcall
adc
jbe
mov
dec
push
push
pop
dec
in
nop
fmuls
or
dec
pop
cmp
cltd
xor
sub
or
push
lcall
mov
inc
rcrb
adc
push
std
pop
fs
movsl
test
popl
cs
dec
xchg
cmp
imul
mov
and
sbb
xor
and
and
jmp
popa
les
push
stc
sub
fwait
pop
out
pushf
in
mov
jne
fnstenv
call
jg
mov
jae
mov
dec
dec
addl
jns
cld
ffreep
stc
mov
test
test
insl
and
and
cli
decl
adc
mov
daa
pop
scas
pop
or
filds
dec
xchg
and
pop
sbb
xor
cmp
loopne
incl
xor
popa
lahf
dec
adc
bound
xchg
jp
sbb
lea
std
out
in
aas
mov
mov
dec
je
and
mov
hlt
inc
jne
or
pop
hlt
sub
xchg
loope
add
pop
mov
fiadds
lret
clc
call
pop
or
and
inc
fisttpll
jne
ljmp
and
push
pop
call
dec
popa
mov
mov
scas
rolb
lcall
outsb
push
movsl
jmp
mov
daa
xor
add
cltd
dec
cld
cmp
mov
pop
fdivrl
les
pop
xchg
inc
inc
mov
fwait
adc
in
mov
mov
sahf
dec
mov
daa
jmp
decl
add
lods
push
repz
xor
mov
pop
lock
insl
jp
insl
inc
sub
jo
or
mov
mov
fistl
movsl
cmp
inc
cmp
adc
decl
jle
mov
outsb
inc
iret
das
dec
dec
pop
xchg
fisubrl
mov
lods
xorb
dec
sarl
pop
inc
mov
sar
pop
add
push
pop
ret
inc
test
xchg
cltd
pop
cld
jg
aaa
pushf
popf
mov
mov
add
int3
mov
xchg
mov
adc
mov
jp
cmp
sub
inc
ja
pop
jle
pop
cmpb
dec
jg
call
je
mov
adcb
rolb
incl
xor
pop
push
lock
and
jno
mov
add
sarb
pop
js
mov
inc
pop
fnstsw
test
push
cmp
loopne
dec
jno
test
hlt
decl
add
jmp
jb
aaa
jg
in
jg
jbe
jb
and
pop
cmp
test
icebp
mov
cld
incl
aaa
ret
mov
mov
dec
jmp
imul
inc
insb
arpl
inc
jmp
sbb
adc
mov
jg
and
insl
ljmp
ljmp
rclb
arpl
mov
mov
mov
orb
push
add
cld
add
pextrw
add
cmp
xor
mov
inc
leave
clc
fisttps
les
sahf
fwait
mov
inc
cld
cltd
out
int3
mov
loope
xchg
mov
mov
mov
movsl
mov
stos
in
loop
mov
mov
fcompl
nop
scas
mov
mov
cmpsb
jmp
cmpsb
cmpsb
xchg
dec
jo
pop
mov
js
xchg
and
or
sub
add
nop
int3
cmp
rcl
movsl
mov
mull
mov
mov
or
sbb
mov
jmp
xchg
pop
arpl
mov
jne
andb
fwait
insb
stc
test
test
mov
inc
push
jle
jo
push
lea
mov
ffreep
clc
lcall
scas
mov
push
repnz
mov
dec
stc
ljmp
pusha
jmp
lret
xor
or
or
popa
xchg
jle
sub
gs
xlat
xchg
test
out
mov
mov
xchg
loop
cmpsl
mov
std
mov
sbb
inc
imul
add
xor
xchg
repz
mov
mov
push
jg
pushl
pop
popf
inc
ret
pcmpeqb
movsb
jge
mov
push
inc
ret
in
in
fwait
xchg
pop
cmc
push
inc
loop
clc
xchg
push
pop
cmp
cmp
into
lcall
movb
call
scas
mov
inc
push
pop
push
mov
rcrl
fisttpll
scas
xchg
stos
cli
rcr
mov
test
repz
xchg
int
jmp
jmp
js
gs
or
inc
sub
pop
hlt
jg
pop
sub
push
stc
fwait
jno
repnz
dec
dec
in
mov
loopne
les
ret
fmuls
imul
popa
lret
testl
hlt
mov
or
mov
push
mov
mov
mov
jns
dec
js
mov
sub
call
stos
iret
adc
lret
jecxz
xlat
cltd
sahf
xchg
scas
repnz
jne
mov
rol
sahf
mov
lcall
addl
cld
jg
push
pop
mov
clc
xor
int
mov
incl
jmp
cltd
jb
xchg
push
sarl
mov
lock
xchg
mov
sub
lcall
pop
dec
call
sbb
sbbb
mov
cltd
pop
sub
incl
mov
xor
cld
shll
mov
mov
pop
es
adc
or
scas
cmp
inc
negl
imul
clc
cwtl
nop
jmp
sahf
mov
aaa
insb
inc
ljmp
mov
pushf
outsb
push
pusha
or
cmp
jg
adc
mov
jg
adc
scas
lea
outsb
jae
decl
jno
bound
jo
add
xor
add
je
jo
and
cli
pushl
fsubr
outsl
push
adc
leave
add
add
xor
aad
xchg
mov
repz
fisubrs
jne
sub
ljmp
mov
jne
or
jns
pop
and
scas
pusha
ja
dec
sub
repz
outsb
insb
xor
test
jp
sti
push
inc
jne
das
fs
xchg
iret
mov
hlt
lcall
xchg
mov
push
int3
loope
les
jbe
cwtl
pop
mov
jg
cmp
xchg
rorb
rol
lret
movsb
lods
jg
icebp
xchg
fdiv
mov
mov
les
rol
xchg
mov
mov
add
add
div
xchg
fdivr
test
clc
pushf
mov
push
js
js
mov
mov
insb
enter
das
add
inc
aad
dec
fs
jmp
es
orb
lock
and
push
mov
ljmp
adc
jb
cmp
das
and
push
mov
cmpsl
mov
out
int
inc
cld
lods
mov
aad
mov
xchg
outsl
lahf
decl
test
and
stos
lahf
popf
cmpsl
ror
aad
call
and
popf
iret
xor
pop
stos
fwait
icebp
dec
push
inc
pushf
ljmp
je
clc
popa
jne
rorl
fistpl
sbb
mov
out
xchg
mov
mov
mov
fldl
mov
stos
lock
out
mov
jl
orb
movsl
mov
cmpsb
cltd
js
data16
out
cmpsl
mov
cmp
mov
inc
mov
lret
pop
cmp
pop
leave
xchg
sub
int3
jne
lods
fyl2x
mov
or
xor
mov
test
subl
mov
jbe
mov
call
and
xchg
pop
rorl
cwtl
cmp
inc
rcrb
sbb
dec
cmpsb
jmp
decl
clc
xlat
cwtl
mov
jl
add
pop
in
lret
mov
repnz
mov
mov
mov
jbe
outsl
mov
xchg
inc
push
mov
imul
in
jmp
cmc
cltd
mov
lcall
lcall
iret
lods
mov
mov
stc
xlat
mov
lcall
ds
and
aam
pushf
test
outsb
cld
outsb
cli
aas
rcr
push
cmp
dec
mov
mov
adc
cmpsb
adcb
mov
mov
je
jecxz
sahf
jns
lret
jecxz
xchg
mov
test
mov
scas
and
aas
push
shll
pushf
add
inc
in
dec
imul
ss
ljmp
and
and
lods
aaa
sub
pop
icebp
fsts
sbbb
lods
leave
addb
cli
loopne
pop
or
cmc
pop
hlt
incl
imul
aam
inc
add
jg
fists
cld
push
icebp
xchg
movsb
mov
repz
lahf
pushl
jp
repnz
push
mov
shrb
pusha
ret
hlt
int
enter
loope
sahf
or
lea
out
add
ret
std
mov
mov
dec
inc
out
pop
das
mov
lcall
dec
mov
xor
stos
subb
or
add
mov
xor
repnz
popa
xchg
mov
dec
jmp
cmp
in
ret
cmpsb
mov
stos
and
lcall
popf
add
stos
mov
add
mov
mov
jecxz
sbb
inc
rcl
hlt
xor
int3
andb
pop
or
pop
push
lcall
fiaddl
jg
clc
mov
cmpsl
stos
cmpsb
or
jmp
sub
scas
fisubrl
icebp
mov
decl
xchg
cmpsl
and
int3
stos
bound
adc
mov
or
lahf
out
rcrl
mov
lds
movb
xchg
xchg
push
xchg
nop
mov
inc
lcall
inc
cltd
xchg
xor
lcall
insl
aam
cmp
test
test
mov
testb
pop
nop
scas
xor
popa
pusha
cmp
cli
mov
lcall
jecxz
incl
sbb
fwait
push
mov
mov
jecxz
rcrl
incl
sub
into
scas
fwait
cmpsl
adc
std
inc
sar
mov
js
les
ja
std
jmp
scas
mov
xor
push
scas
shl
dec
shll
or
xchg
push
fld
shlb
jo
mov
add
fwait
cwtl
sarb
mov
sbbb
xchg
scas
mov
inc
inc
mov
repnz
loop
pop
mov
sub
mov
mov
incl
int3
adc
loope
pop
fists
stos
popf
cltd
lcall
aaa
adc
movsb
push
push
xchg
sbbl
cmpsl
xor
outsb
roll
call
lahf
mov
cmpsb
sahf
dec
mov
divl
mov
faddl
rep
sbb
outsb
mov
shlb
rolb
mov
hlt
mov
xor
lret
xchg
jg
imul
es
int3
mov
cmpsb
inc
mov
add
js
fsubr
adc
stc
adcl
mov
jl
mov
ja
jmp
scas
inc
ret
es
mov
pusha
mov
lock
mov
scas
adc
xchg
sub
and
inc
loop
cmp
or
xlat
cmc
cmp
dec
mov
push
incl
jg
pop
data16
xchg
out
stos
test
rcrl
call
lea
lret
pop
push
mov
mov
aaa
jge
jbe
adc
ss
fisubrl
adc
xor
add
ljmp
xchg
int3
test
push
js
data16
fst
mov
lock
in
icebp
mov
jb
and
cmpsb
pop
lret
or
cld
mov
clc
in
clc
rcrb
cmp
insb
icebp
div
mov
add
jo
jb
cs
mov
lahf
lcall
dec
out
and
in
xchg
ret
inc
sbb
cmc
lods
les
pop
jle
loope
adcb
dec
cld
cmp
mov
movsl
popa
in
xchg
in
lods
mov
xor
lret
int
adc
les
out
push
mov
test
add
mov
test
xor
mov
dec
xor
arpl
test
fwait
lea
push
aam
mov
cmpsb
dec
les
mov
in
fwait
int3
xchg
ret
pushl
fsubp
in
movsl
cmp
leave
roll
decl
arpl
test
test
cmp
and
aam
jle
mov
and
fistpl
jge
addb
loop
mov
ret
shrl
aam
aas
and
mov
add
lds
mov
xchg
inc
xchg
int3
cs
cld
in
incl
mov
cmpsb
push
mov
cwtl
mov
mov
jg
fwait
repnz
outsb
pop
push
cmp
cwtl
mov
ja
lock
lock
adc
mov
mov
aam
mov
mov
cmp
or
xor
int
je
lcall
decl
cld
lcall
test
mov
mov
jmp
sbb
sbb
rcll
popf
les
les
ret
and
adc
push
jns
fwait
nop
xchg
mov
out
std
or
shrl
mov
insb
bnd
xlat
sub
xchg
mov
pop
adc
imul
mov
jb
jbe
pusha
inc
pop
inc
aas
push
push
pop
movsb
add
decl
dec
pop
je
inc
inc
jae
xor
arpl
inc
jo
or
add
stos
cmpb
mov
cmpsb
ljmp
data16
adc
fwait
mov
mov
ret
and
cld
call
push
xor
das
sub
test
mov
xchg
mov
cmp
int3
adc
add
jge
fildll
add
inc
mov
xor
cli
mov
test
decb
push
pop
lcall
xor
popa
mov
adcb
and
mov
les
loopne
or
mov
mov
mov
adc
fwait
sub
jb
rcrb
jg
scas
imul
sbb
dec
mov
fwait
lcall
cld
mov
sahf
add
jnp
cmpsb
ja
push
adc
xchg
les
jecxz
mov
pop
rcrb
adc
mov
add
jmp
fstps
pop
sub
lea
mov
das
pop
rcrb
xchg
mov
ret
pop
inc
pop
test
out
fcmovb
mov
mov
stos
mov
mov
and
das
xchg
stos
fdivl
push
repnz
push
sbb
mov
mov
jns
mov
pop
test
addb
sub
pop
jns
pop
lock
loopne
pop
ja
mov
shlb
inc
inc
push
inc
cwtl
cmp
test
pop
lret
sub
les
lock
mov
ret
out
call
pop
jp
outsb
push
jnp
pop
xor
or
hlt
xchg
imul
pop
xchg
mov
push
sbb
inc
cmp
inc
or
aaa
dec
fisubs
xchg
sbb
icebp
decl
ja
mov
pop
movsl
aas
mov
daa
movsl
data16
out
clc
inc
repnz
mov
cmp
sub
mov
lcall
int3
xor
out
addr16
push
cmp
push
fwait
dec
add
clc
mov
mov
movb
sbb
addr16
xor
ds
mov
loope
add
mov
lret
cmpsl
lods
jns
incl
imulb
mov
popf
and
int
insl
loopne
popf
iret
or
push
ljmp
outsb
jbe
mov
movntq
lret
inc
out
push
dec
nop
push
xor
mov
addr16
mov
addb
push
pop
push
lahf
add
mov
jp
andl
dec
pop
mov
fldl
jne
adc
push
into
jbe
adc
lcall
sbb
clc
aas
fdivl
xor
xchg
pushl
mov
hlt
scas
add
sbb
lods
jg
incl
jg
ret
imul
decl
xchg
inc
insb
gs
push
mov
ret
ljmp
mov
leave
xor
mov
mov
mov
or
jo
ljmp
imul
mov
scas
adc
decl
sahf
les
cmp
pop
jl
inc
js
outsl
cli
imul
fsubl
rorl
andb
jbe
lods
cmp
mov
ljmp
cli
fwait
sbb
and
mov
push
aam
push
mov
adc
decl
xchg
mov
push
mov
mov
sahf
ficomps
subb
fisubrl
mov
fdivl
xchg
cmp
sub
pop
jns
lods
decl
ja
push
les
divb
mov
mov
xchg
sbb
xor
sbb
movsb
sub
sarb
scas
test
rorl
outsl
jne
dec
incl
sti
bound
in
inc
addr16
or
sbb
pusha
push
iret
cs
ljmp
addr16
inc
and
jno
inc
in
mov
daa
insb
fistpl
decl
sub
dec
cwtl
cmp
sbb
mov
mov
jnp
repnz
mov
test
jae
scas
sbb
rcrb
mov
stos
scas
lcall
mov
mov
xor
fmuls
cmpsb
jp
jmp
lcall
sbb
pushf
and
xchg
mov
sub
mov
stos
ss
repnz
push
jnp
adc
stos
movsl
dec
jbe
add
or
dec
loop
pop
roll
sbb
ret
mov
mov
mov
js
cmp
pop
mov
call
mov
or
lock
pushl
add
inc
inc
shll
jo
push
push
jb
roll
dec
push
mov
js
outsl
jmp
imul
pusha
cmp
scas
loop
scas
cmp
std
scas
adc
fnstenv
test
ss
mov
adcb
sub
aaa
cmp
scas
and
xchg
aaa
idiv
lcall
enter
push
leave
xchg
jle
popa
jmp
sub
or
add
add
flds
mov
mov
sbb
in
mov
inc
lret
xchg
imul
pop
xchg
daa
push
filds
lahf
adc
adc
xchg
pushl
in
inc
xchg
xor
call
add
mov
xor
xor
lods
sub
pushl
test
xor
dec
mov
movsb
daa
mov
test
inc
enter
cmp
xchg
push
add
xor
int
negl
sub
push
mov
ret
pusha
inc
inc
lods
mov
ds
pop
cmpb
out
sbb
notl
pop
shl
fdivp
sbb
add
loope
dec
cmp
push
popa
jge
out
js
loop
cmp
push
clc
and
or
icebp
mov
sbb
xchg
sbb
call
jecxz
sbb
pcmpgtw
cmpsl
push
push
pop
dec
in
shll
adc
jae
out
inc
jnp
and
aam
cmp
mov
push
mov
xor
incl
xchg
mov
push
jecxz
mov
adc
jg
xchg
daa
push
push
scas
and
and
sub
cmp
ljmp
and
and
xor
sar
and
and
sbb
cmp
fwait
xor
repnz
xchg
dec
mov
orb
and
pop
sbb
lds
insl
mov
iret
jns
dec
mulb
add
or
test
mov
out
clc
out
ret
or
dec
or
nop
adc
xor
fstl
ss
cmp
push
pop
push
and
jmp
mov
mov
fsts
repz
std
push
jge
cmpsb
inc
sbb
cmp
lahf
sarl
pushw
icebp
cmp
inc
iret
sub
cld
sbb
xor
leave
subb
decl
jo
shll
jle
mov
mov
pushl
js
mov
push
mov
dec
xor
cwtl
xchg
call
dec
jle
push
sbb
dec
outsl
clc
inc
shlb
sbb
mov
dec
clc
and
subl
dec
fisubrs
je
setb
daa
jp
cmp
dec
es
das
add
sbb
or
jbe
push
or
push
pushl
mov
lcall
or
pop
sub
stos
cmpsl
pushf
cli
or
pop
popf
cmp
push
es
lret
xchg
dec
pusha
popa
aas
mov
mov
cmp
mov
dec
cmc
jl
mov
call
pop
push
jl
out
mov
sti
je
cld
cmpb
je
pop
dec
mov
decl
xchg
std
test
dec
push
inc
clc
jbe
sub
popl
and
dec
aaa
jl
mov
lcall
clc
std
mov
cmp
and
adcl
lcall
pop
xor
cmp
daa
mov
mov
clc
stos
test
jg
add
adcl
rcl
lcall
push
jae
push
mov
add
fisttps
pushf
mov
jnp
addr16
sbb
loopew
ja
jp
imul
aas
lahf
daa
mov
inc
ja
jp
leave
xchg
mov
sbb
fdivr
mov
icebp
cltd
or
mov
push
into
xor
add
pop
call
pop
sbb
out
cli
imul
pop
addr16
push
outsb
pop
mov
fs
insb
mov
data16
add
out
xchg
pop
jo
mov
xchg
in
xor
arpl
loop
fisttps
int
pop
xchg
cmp
mov
inc
ss
inc
pop
pushf
cmpsb
fmuls
sbb
push
cmp
lea
ljmp
sub
lcall
sti
aaa
jp
bound
loop
js
popa
ret
filds
lcall
push
into
repz
jb
movsl
jle
dec
inc
loop
stc
jmp
pusha
dec
mov
mov
xor
push
pop
cs
dec
les
mov
mov
scas
aas
ficompl
and
dec
imul
and
pushl
pop
dec
adc
xor
lcall
push
dec
mov
in
inc
push
pop
ja
pop
push
jecxz
test
cld
add
les
jno
jecxz
inc
sub
cld
ret
aaa
lock
ficoml
imul
pop
repz
jo
ds
adc
dec
dec
clc
adc
sbb
cmp
sbb
insb
fldcw
sub
das
jno
xor
fsubp
add
or
fdivr
fcomip
sbb
les
pop
arpl
dec
jo
dec
arpl
inc
in
add
je
jecxz
cmp
or
std
sub
adc
insb
arpl
outsl
adc
icebp
cld
push
clc
add
jnp
adc
iret
or
pop
lcall
ror
and
push
sti
ja
xchg
jns
and
scas
jb
push
loopne
nop
clc
aaa
imul
pop
outsb
jmp
inc
xor
out
cli
ljmp
ljmp
lea
mov
and
stos
test
cmovle
ss
jg
and
jle
and
sbb
or
xchg
das
push
je
test
pop
add
mov
or
pop
arpl
ljmp
mov
ja
mov
mov
mov
jno
int3
sub
pop
movsb
mov
fs
mov
pop
daa
inc
xchg
movsl
addr16
add
sbb
push
push
jmp
jo
mov
or
sbb
mov
imul
inc
ja
push
and
bound
sbb
adc
stos
inc
or
loop
xor
pop
aaa
inc
and
mov
clc
jecxz
lock
or
lods
inc
xor
jno
mov
jp
pop
fildll
aas
push
xor
sub
push
jg
cmp
dec
outsb
cmpsl
sar
decl
add
pop
jae
fmuls
push
testl
mov
std
pop
add
push
sbb
test
ljmp
cmp
mov
mov
push
es
ljmp
js
pushl
or
inc
xchg
jae
pusha
cmp
pop
inc
insb
call
adc
fwait
rorb
mov
inc
inc
mov
rolb
or
sbb
mov
pusha
dec
pop
inc
ret
jge
ja
inc
add
xor
cmpsl
cmc
out
addb
mov
pop
scas
dec
sahf
shlb
std
jg
mov
pushf
dec
sbb
lea
inc
test
clc
push
out
das
adc
lcall
and
imul
dec
loopne
js
mov
sar
jg
ret
and
mov
lock
push
enter
mov
jne
jo
xor
cmp
test
mov
mov
fwait
jl
jns
mov
mov
jne
fildll
push
sbb
lock
neg
pop
sar
pop
test
push
mov
mov
cmp
pop
jge
test
pop
lock
add
clc
jge
push
xchg
push
int3
adc
arpl
push
orb
test
je
fisttps
fistpl
addl
push
sbb
sub
push
push
push
inc
call
jmp
movsl
mov
sbbl
mov
sbb
sub
mov
out
inc
jnp
fwait
stos
and
push
sub
clc
incl
sbb
sbb
xor
dec
xchg
jnp
cmp
fwait
cmpsb
aas
xchg
add
sub
adc
in
sbb
in
cmp
or
pop
inc
push
push
fldcw
add
adc
pop
inc
mov
fisttps
inc
adc
clc
call
adc
lods
mov
dec
inc
mov
xchg
jle
or
mov
daa
push
ret
push
mov
push
sbb
dec
cmpsl
icebp
imul
ja
jp
add
cmp
dec
lret
dec
jp
mov
add
addl
cmpsb
adc
xchg
or
dec
push
gs
jp
jnp
push
fisubrl
stos
bound
xchg
mov
inc
fdivs
or
adc
xchg
enter
xchg
stos
pop
jmp
out
mov
subb
test
das
mov
lcall
jo
xorb
mov
dec
lcall
scas
and
cmp
cli
or
mov
test
fistps
out
cwtl
iret
xchg
dec
mov
inc
nop
dec
add
movsl
mov
cmpsb
pop
xchg
mov
outsb
into
and
cld
cwtl
sub
mov
push
js
cmpsb
int3
stos
dec
adc
cmp
add
or
sub
mov
adc
test
adc
and
add
add
mov
sub
fwait
inc
mov
xchg
jmp
sbb
add
cmp
lods
mov
mov
and
sbb
cmpsl
add
xor
int
pop
mov
scas
dec
orb
jb
push
lds
scas
repnz
mov
mov
cmp
sti
or
loopne
fcomip
stc
jb
sbb
xor
fwait
jnp
pop
into
in
rcrl
testl
pop
repz
mov
jbe,pt
mov
sahf
xor
xorb
loope
and
cld
aaa
cld
ljmp
pop
jecxz
mov
mov
pop
repnz
sbb
inc
cwtl
or
cmp
outsl
clc
cmp
in
add
pop
push
mov
in
les
sarb
das
gs
add
adc
repz
cmpsb
sbb
pop
cld
or
int
xchg
hlt
cmp
mov
pop
pop
ja
jg
and
adc
pop
cli
sub
incl
dec
jbe
cmovae
pushf
inc
shrb
push
test
sub
mull
scas
dec
mov
addr16
mov
mov
clc
inc
cs
das
ret
jo
or
mov
dec
test
jp
ljmp
xchg
bound
jno
jl
pop
xchg
dec
cmp
das
sbb
pop
add
subl
mov
jp
cmp
cs
das
add
sahf
and
arpl
es
aas
daa
mov
and
push
jge
and
lds
push
inc
mov
push
dec
and
add
pop
addr16
jmp
mov
mov
and
sbb
and
jg
lods
je
push
mov
xor
dec
inc
ficomps
cmpsl
incl
sbb
cmpsl
lds
call
add
adc
mov
scas
xchg
popa
nop
shlb
xchg
outsb
jmp
or
adc
and
lcall
sub
nop
sub
xor
imul
fwait
jne
lock
stos
cmpsb
je
pusha
cmpl
test
pop
shlb
stc
and
pushf
ss
jnp
data16
das
push
lcall
sbb
mov
popf
cmp
jmp
mov
cli
or
mov
jno
cmp
jb
pop
movsl
or
mov
in
in
add
mov
dec
mov
lea
pop
and
aaa
call
sar
outsb
outsb
xchg
push
pushf
insb
mov
notb
adc
mov
leave
clc
cmpsl
ud0
pusha
gs
pusha
cmp
cmpsl
lret
jecxz
push
mov
and
add
and
sbb
xchg
xchg
movsb
mov
pop
cmpsl
jne
xor
sub
push
jb
jg
sub
push
inc
push
dec
add
push
movsb
inc
sub
movsl
jg
in
mov
rorl
jg
push
psrld
add
sbb
cmp
and
sbb
mov
pusha
inc
fists
aaa
orl
add
scas
push
pop
cmp
filds
icebp
inc
andb
addr16
and
mov
nop
pop
adc
fs
cltd
outsl
or
mov
xor
xchg
out
jl
mov
incl
fdivrs
icebp
mov
subl
push
loop
jg
stos
pushf
lods
lds
inc
leave
mov
mov
mov
push
and
inc
mov
xor
push
bound
and
or
ds
ret
int
inc
adc
pop
repz
pop
push
into
insb
and
stos
jge
xor
adc
xchg
inc
jne
mov
cld
mov
iret
cltd
in
or
mov
out
mov
ret
sbb
insl
es
lods
xor
cmpsb
adc
sub
mov
jp
fbld
dec
dec
hlt
adc
pop
pop
imul
add
add
dec
push
cmp
sbb
push
mov
test
cmp
and
mov
mov
mov
xor
mov
pushf
lcall
push
repz
iret
or
std
and
clc
sub
ljmp
lcall
call
jnp
imul
mov
or
sar
xchg
inc
jp
dec
mov
inc
inc
cld
sbb
sbb
mov
add
rol
rolb
call
popf
push
popf
pop
push
movsl
fwait
int3
mov
cmp
sbb
aas
lods
lahf
xor
mov
mov
dec
xchg
sbb
sbb
ja
xchg
and
jo
sbb
stc
or
pop
dec
dec
pop
cli
pop
cld
inc
imul
mov
loopne
out
je
and
mov
loope
ja
inc
jne
pop
cmp
mov
mov
js
cld
fistps
lea
adcb
mov
mov
push
js
and
dec
jecxz
mov
rorl
mov
in
cmpsb
pop
cmp
lahf
xlat
jae
add
movsl
and
mov
and
push
mov
push
mov
push
mov
cwtl
insb
mov
push
and
loope
call
mov
movsl
sbb
jno
enter
mov
lahf
cmp
outsb
xlat
in
ljmp
push
add
sbb
mov
mov
fiaddl
adc
pop
lods
icebp
mov
pop
mov
xchg
adc
adc
xchg
push
mov
clc
jl
popf
push
mov
mov
add
xor
lods
jl
mov
ja
call
pop
mov
xchg
cs
into
setne
or
sub
mov
incl
or
xor
xor
jge
xor
and
dec
jp
sbb
mov
iret
test
dec
out
pop
jbe
lcall
je
outsl
jmp
jno
mov
dec
push
daa
je
popa
cltd
sbb
in
out
pop
dec
decl
and
mov
inc
add
insl
or
ja
xor
cmpsl
xchg
push
mov
popa
arpl
jbe
loopne
lcall
dec
fstps
cmpsb
mov
test
xchg
pop
inc
mov
andl
out
es
mov
scas
popf
xor
xchg
add
outsl
fs
sbb
inc
dec
test
sub
xchg
push
mov
pop
js
roll
aad
pop
lea
repz
jbe
mov
mov
aaa
jb
aaa
and
sub
cmp
int
mov
cld
mov
loope
lcall
sbb
aas
adc
jno
jno
mov
lcall
lcall
jmp
jae
jnp
in
jns
push
pop
clc
dec
jle
pop
add
mov
decl
pop
or
xorb
jge
push
cmp
jp
ja
dec
mov
and
pushf
fiadds
insl
into
xor
and
push
leave
shrl
ljmp
cmpsl
or
popf
inc
cmpl
pop
outsl
fdiv
dec
push
push
jmp
movsl
bound
hlt
out
decl
ficomps
test
jno
sub
js
add
stos
mov
dec
cmp
mov
cltd
mov
dec
ret
inc
pop
mov
dec
adc
dec
xor
sbb
ficompl
mov
sub
mov
clc
mov
xor
shrl
inc
movsb
xor
fcomip
arpl
scas
dec
push
aad
scas
adc
ret
cld
call
sbb
loop
mov
adc
sub
sbb
jb
lcall
clc
ja
fs
cmp
movsl
pop
pop
push
xlat
lcall
mov
push
adc
xor
je
ret
sarb
jnp
repz
pushl
jb
cli
pop
les
cwtl
jbe
lock
clc
dec
cs
sbb
and
mov
sbbb
repnz
outsb
in
fs
aas
xchg
je
adc
scas
stos
mov
fnstcw
sbb
mov
ljmp
shrb
pop
subb
push
pop
sbb
push
bound
inc
lds
pop
lea
push
lea
std
dec
fs
add
pop
inc
loopne
jae
je
mov
inc
and
sbb
incl
cwtl
fs
inc
adc
inc
jae
nop
cmp
sub
inc
xchg
sub
mov
add
outsl
mov
js
ds
negb
shll
cmpsb
mov
int3
loopne
testb
cmp
jmp
ret
mov
sahf
cmp
jo
sbb
inc
mov
movsl
les
mov
push
add
shl
cmpsb
xor
imul
mov
repz
rclb
sahf
outsb
repnz
lods
push
ret
mov
and
ljmp
or
push
fs
pop
mov
jle
and
xchg
fbld
test
adc
js
xchg
adc
sbb
inc
ret
incl
mov
gs
arpl
mov
inc
js
xchg
cwtl
pop
ljmp
mov
clc
lahf
fcoml
push
mov
imul
dec
mov
add
clc
push
push
inc
pop
push
dec
jg
inc
lcall
jne
in
xorb
les
js,pt
nop
xor
clc
push
decl
lock
jne
mov
dec
leave
push
mov
mov
adc
mov
ret
and
clc
aaa
mov
dec
cld
sub
and
push
js
pop
push
rclb
rol
call
jge
ss
push
adc
test
fbstp
sahf
or
add
std
mov
out
movsl
outsl
and
inc
xor
dec
jb
and
fdiv
pushl
mov
and
bound
jecxz
fs
in
xchg
pop
mov
pop
inc
scas
mov
popf
push
incl
mov
and
xor
mov
mov
mov
lock
incl
push
clc
pop
inc
cld
movsb
clc
scas
insl
arpl
add
addr16
mov
out
add
cmp
lea
imul
add
inc
mov
ljmp
movsb
xor
xchg
movsl
mov
mov
test
fmuls
pop
loope
sub
jmp
mov
mov
out
pop
dec
inc
fwait
mov
shll
inc
xlat
sub
rcrb
lds
adc
and
mov
stc
mulps
mov
push
in
mov
popa
sbb
aam
mov
pushl
dec
sbb
aam
mov
popa
pop
sub
inc
call
adc
mov
lods
xor
xchg
pop
cld
inc
mov
cs
cwtl
or
stos
mov
jmp
rorl
push
je
dec
imul
sbb
lcall
ja
push
push
rorl
or
daa
xor
push
mov
add
pop
xchg
call
decl
jnp
inc
fcmovu
sub
mov
push
pop
jb
outsl
cmp
xchg
lods
fwait
cmpsl
add
mov
jle
incl
js
or
jnp
pop
subl
xchg
mov
inc
jg
lock
mov
jno
xor
ret
pop
mov
es
lea
mov
dec
testl
jg
lcall
or
hlt
fcompl
fiaddl
xorb
push
incl
xchg
xchg
xor
xchg
and
cmpl
or
or
xchg
mov
and
decb
sbb
jl
adc
lods
dec
mov
jecxz
jp
xor
jns
mov
pop
dec
push
pop
fwait
mov
mov
or
roll
xchg
or
lea
xchg
mov
decl
push
dec
sub
cmp
notl
push
jnp
mov
lds
mov
push
fsts
mov
sbb
filds
add
sub
sub
mov
js
clc
jg
call
mov
jp
repnz
pop
cld
ret
mov
dec
sbb
mov
movsb
sub
push
ds
mov
and
adc
pop
movsl
je
sbb
push
fdivr
add
js
push
inc
pop
nop
imul
addr16
rclb
mov
sub
test
mov
stc
mov
adc
adc
sbb
adc
adc
add
bound
pop
fidivrs
push
sbbb
pop
mov
scas
pop
adc
jb
shlb
jo
push
out
or
and
jg
pop
mov
in
stos
addb
pop
pop
aad
inc
rorl
incl
arpl
cwtl
mulb
orb
pop
dec
mov
mov
xor
fwait
js
xchg
lea
push
and
xor
mov
jmp
jle
mov
outsl
rcrl
push
loop
push
sbb
das
jae
pop
xor
xor
cmp
ljmp
bound
dec
fmuls
jno
xchg
shlb
loope
popf
sahf
mov
std
jmp
pop
ret
outsb
ss
subl
loopne
mov
mov
loopne
jmp
dec
popa
das
mov
pop
popf
cmpxchg
mov
insb
decl
rcll
movsb
pop
mov
ja
add
jnp
push
subb
cmp
in
and
xchg
fldt
and
sbb
xchg
and
fidivl
mov
decl
cmp
shrb
cwtl
mov
pop
pop
mov
cmp
je
mov
sbb
jg
outsb
push
inc
mov
inc
mov
imul
jae
pop
and
jnp
jbe
lahf
inc
sar
or
pop
mov
mov
scas
les
loop
mov
aas
inc
pop
cwtl
jge
cmpsl
pop
jno
sub
jb
js
mov
stos
sar
jg
call
outsb
jp,pn
hlt
pushf
ss
jno
jne
cmpsl
and
ja
lock
lock
mov
das
add
hlt
ret
lds
dec
dec
push
ret
lds
out
lcall
fsubrs
mov
decl
mov
rclb
leave
fwait
mov
loop
sbb
fildll
cmc
or
int3
orl
andb
fists
ret
xchg
sub
mov
lods
lcall
or
xchg
stos
call
adc
jp
ror
jb
fucomip
popa
mov
sbb
hlt
incl
mov
mov
sbb
sti
cmpb
stos
movsl
push
push
loop
les
lret
push
arpl
lret
pop
ret
fwait
add
jbe
push
mov
ret
lcall
outsl
incl
and
mov
add
push
jo
cmp
mov
dec
lods
decl
xchg
mov
push
mov
mov
divb
lcall
retw
aaa
mov
and
xchg
mov
sti
int
add
push
inc
push
push
push
rcll
icebp
call
mov
popa
and
test
mov
lahf
add
mov
mov
jb
add
mov
and
jg
outsb
dec
xor
and
add
push
sub
push
out
mov
pop
jmp
jl
roll
cmp
or
sbb
xlat
jo
jb
inc
dec
and
mov
call
test
imul
mov
nop
cmp
ljmp
mov
pop
stos
adcb
xchg
mov
fcompl
cmpl
out
cmpl
mul
pop
jg
clc
push
fs
cmp
cwtl
test
addl
mov
lcall
outsb
out
ja
mov
add
lds
mov
call
add
sbb
mov
pop
push
xor
xor
mov
or
test
stc
xchg
fidivrs
pop
scas
cmc
adc
incl
dec
loope
dec
mov
inc
lret
cmp
stos
mov
aas
imul
pop
xorb
ljmp
aaa
enter
mov
in
pop
out
mov
and
pop
jl
loop
mov
dec
fsubl
repz
pop
in
jmp
sbb
inc
cltd
xor
xor
xor
cmp
stos
cmpsb
adc
jp
pop
push
inc
stos
dec
cmpsb
jae
lcall
inc
aam
mov
dec
sbb
imul
inc
adc
push
push
pop
fnstenv
jle
outsl
adc
xchg
jnp
in
xchg
and
and
lcall
jne
sbb
aas
dec
cmp
and
outsl
outsl
mov
lods
outsl
cltd
and
icebp
pushl
cmp
or
and
js
jns
dec
je
ljmp
pushf
xchg
xrelease
adc
mov
stos
xchg
dec
scas
push
adc
jle
xor
jo
push
scas
shlb
cli
test
fwait
or
xchg
xor
cmc
cmp
cmpsl
iret
nop
pop
push
sbb
sub
adc
or
cmp
xchg
and
fwait
cmp
or
cmpsl
xchg
addr16
jg
das
pop
xchg
add
pop
xchg
fists
and
adc
inc
mov
mov
mov
stos
adc
xor
push
mov
dec
cld
iret
and
inc
sbb
cmpsb
pushl
lods
xor
cmpsb
adc
imul
call
push
adc
push
mov
movsb
xchg
leave
fwait
adc
cwtl
les
das
pop
aam
jecxz
jg
mov
or
pop
dec
jb
push
es
fiadds
cltd
loope
filds
pop
fs
xor
adc
lods
fistl
adcb
cmp
in
mov
pop
ja
outsb
sbb
scas
jne
jle
pop
in
into
jmp
gs
xchg
out
dec
scas
mov
adc
negb
and
inc
ljmp
and
pop
aas
mov
dec
add
in
jno
push
dec
fiaddl
mov
fld
cwtl
sub
mov
pushl
scas
les
iret
xchg
inc
out
and
and
jge
daa
lahf
aaa
push
xor
jbe
mov
rorb
mov
call
mov
or
mov
pop
mov
and
adc
or
mov
ret
push
cmp
sbb
push
out
loopne
outsl
adc
decl
mov
inc
imul
inc
in
mov
test
jmp
add
pop
cmp
sbb
test
xor
cmpsl
fnstenv
sub
je
adc
jl
adc
lret
sub
adc
pop
popf
xchg
movsb
mov
addb
ss
jnp
xor
xor
mov
dec
xchg
cs
ljmp
ffreep
lret
out
cld
fimull
push
pusha
mov
incl
mov
data16
outsl
sti
mov
jl
cltd
add
pop
xchg
insb
xorl
js
add
nop
lock
jno
mov
and
jno
ljmp
mov
inc
mov
sbb
pop
push
mov
jbe
ljmp
stos
sbb
lods
jo
jmp
mov
test
dec
lcall
pusha
pusha
lret
jmp
hlt
cltd
test
outsb
inc
jg
lcall
add
lea
std
call
sbb
subb
in
inc
and
pop
test
lock
inc
cmp
mov
adc
in
push
and
insl
mov
xlat
cmp
ret
std
mov
fidivrs
mov
mov
mov
or
lods
and
pop
ficompl
or
xor
mov
push
sbb
jae
pushl
xor
sbb
adc
or
jne
cmpsl
sub
mov
push
or
mov
lods
les
fs
mov
xchg
imul
scas
arpl
push
lcall
call
adcb
scas
cltd
jns
adc
in
jl
aaa
sahf
mov
xchg
aaa
mov
fldl
and
push
mov
xor
or
mov
inc
mov
pop
aam
mov
icebp
push
mov
add
mov
or
pop
loopne
sbb
jo
cwtl
mov
stos
movsb
rclb
nop
movsl
popf
out
lcall
jg
jbe
insl
jne
or
and
mov
push
ljmp
cli
adc
aaa
stos
inc
call
cltd
mov
push
int3
pop
aam
dec
jbe
repnz
clc
fldcw
enter
add
ret
adc
lods
xor
scas
ljmp
add
push
addb
jae
and
and
sbb
js
call
pop
pop
idivl
jge
jo
ljmp
mov
or
jle
cmp
lods
or
xchg
mov
insb
popa
adc
clc
dec
and
mov
add
mov
pop
les
mov
incb
push
clc
jmp
test
adc
cmpsb
stos
dec
pop
push
jl
hlt
das
and
add
imul
or
fbstp
cmp
or
in
or
filds
loope
jge
into
xor
sbb
inc
jmp
and
cmp
or
and
loopne
pop
and
inc
sub
xor
js
aas
push
or
sbb
add
sub
stos
into
inc
inc
loopne
push
scas
xor
pop
cmpsl
xor
testl
mov
pop
cli
push
test
inc
or
adc
mov
ss
lcall
or
cmp
sbb
aas
scas
mov
pop
aam
jns
cmpl
cmc
jo
xor
pushl
mov
and
sbb
data16
push
mov
pop
clc
lcall
dec
ficoml
sub
inc
mov
pop
pop
cmpsb
cltd
clc
out
push
inc
add
fdivrs
fsubl
pop
rcrb
fnstsw
scas
and
xor
jne
ljmp
icebp
jbe
icebp
insl
inc
inc
outsb
jle
pushf
jb
xchg
test
jl
cmpsb
les
and
mov
adc
mov
adc
sub
cmp
mov
insb
lods
clc
lcall
xchg
or
cmpsl
sti
das
pop
loope
mov
sub
cwtl
dec
add
mov
fcos
das
test
adcb
inc
mov
inc
je
jecxz
jne
int
lock
js
aas
push
xchg
dec
ds
decl
and
adc
daa
lods
mov
popa
aam
jp
aam
jnp
sarl
movsl
jg
pop
inc
jmp
xchg
in
or
lcall
cmp
inc
lods
xor
dec
cs
cmpsb
mov
pop
stos
mov
mov
lcall
les
mov
xchg
stos
outsb
movsb
jecxz
std
jmp
mov
mov
xchg
cmp
mov
filds
loope
data16
into
outsl
sti
and
ljmp
pusha
mov
hlt
mov
scas
clc
sub
xchg
sbb
inc
in
repz
movlps
loope
adc
leave
inc
dec
incl
bound
or
adc
inc
ret
inc
xchg
jg
fiadds
leave
xchg
inc
push
movsb
aaa
movsl
shrl
jns
ljmp
push
xchg
cmp
xchg
movsl
mov
insb
repz
xchg
sbb
cld
cwtl
clc
scas
jge
outsl
mov
mov
ja
pop
mov
xchg
test
imul
pop
inc
test
mov
lahf
ja
inc
gs
adc
cmp
jg
inc
iret
das
mov
adc
dec
xchg
nop
adc
push
fmull
es
outsl
clc
dec
aad
adc
cmp
test
stos
sar
ljmp
or
test
xor
das
mov
fsts
cmp
push
sub
into
mov
or
ja
shll
jg
mov
push
daa
aam
push
dec
fs
mov
data16
ljmp
cmpsl
stc
jo
push
push
popf
sub
mov
xchg
mov
pop
insl
daa
cli
inc
sarb
sub
cmp
push
ljmp
addr16
xchg
lret
push
insl
inc
push
or
adc
insb
sarl
mov
or
lods
cmp
popa
or
jmp
das
stc
xchg
adc
xchg
enter
outsb
sub
or
dec
dec
sbb
push
call
xor
sub
xor
dec
xor
roll
adcl
fwait
test
jo
push
or
stc
cmpsb
mov
push
mov
jecxz
cmp
movsl
mov
or
icebp
ja
clc
jle
mov
mov
imul
ja
stos
out
add
dec
fistpll
cmpsl
cmpsb
ss
jne
ret
sub
jg
sbb
addb
mov
ds
scas
cmp
cmp
jp
addr16
out
and
mov
addr16
pop
dec
or
add
mov
in
cmp
cmovo
test
push
mov
pop
dec
popa
cmp
push
dec
aaa
ret
mov
dec
push
push
lcall
decl
lock
imul
push
leave
jns
dec
push
cmpsl
dec
cli
dec
jns
add
cwtl
cmpsl
mov
lcall
dec
jmp
cs
fisubs
lret
jno
cs
cli
push
cwtl
pop
sbbb
inc
ficoms
enter
out
cmpsl
add
scas
mov
scas
fwait
add
cmp
imul
lds
or
push
push
cmp
call
cld
nop
pushf
jnp
mov
mov
leave
fsubrl
jbe
xchg
nop
mov
inc
je
cmpsb
sbb
xchg
jmp
mov
stos
test
mov
gs
dec
das
inc
add
loop
cld
aaa
inc
sbb
xor
repnz
movsl
stos
add
jbe
pop
rclb
fbld
jmp
mov
bound
and
xchg
pop
lret
push
adc
xchg
ret
sub
push
push
add
das
xor
xor
repz
dec
mov
add
addl
cmp
xchg
roll
.byte
in
mov
in
mov
movl
mov
inc
add
incb
pop
ret
int3
add
idiv
mov
or
add
test
incl
push
add
lcall
push
call
add
movl
incb
imul
sbb
enter
xor
shl
and
incl
dec
repz
in
jmp
lea
call
movsb
mov
cmp
mov
jbe
movsb
push
mov
pop
std
pushl
mov
mov
shr
push
mov
sub
or
inc
push
mov
or
sub
cmpsl
push
pushf
rorb
movsb
pop
adc
outsl
mov
negb
inc
les
lock
addb
add
andb
cs
xchg
fs
and
sbb
sub
jnp
ret
add
push
mov
adc
cmp
cmp
lea
add
adc
rcrb
cli
lea
mov
daa
xchg
inc
add
fistpl
dec
adc
out
out
sbb
fildll
push
inc
push
pop
enterw
xor
pop
rcl
sti
sbb
jmp
add
mov
or
push
inc
mov
loope
jne
dec
rcrl
xchg
jnp
jmp
add
movsl
cmp
xchg
xor
outsb
js
fcmovb
lret
add
jl
lahf
xchg
cli
out
lret
mov
je
inc
push
push
add
push
vunpcklps
insb
mov
inc
cli
or
or
cmp
add
adc
rcr
cmp
and
push
adc
ret
clc
xlat
push
mov
xor
inc
sbb
out
xchg
mov
int
xchg
pop
pusha
pusha
lods
cld
pop
mov
cmp
in
xchg
mov
movsb
push
movsb
xor
dec
xchg
repnz
sbb
xchg
loopne
mov
mov
add
movsb
test
aad
push
je
clc
adc
lea
ljmp
sub
decl
and
sbb
and
stos
sub
pop
pop
dec
inc
mov
mov
das
rclb
sbb
sbb
add
lods
push
insb
mov
stos
add
adc
pop
test
sbbl
jb
lahf
jno
cmp
fsts
and
inc
cld
in
shl
adc
cmpsl
fcoml
sahf
pop
rol
loopne
dec
enter
mov
arpl
or
pop
mov
pop
mov
add
insb
fistl
ljmp
rcl
stos
or
push
pop
pop
cld
add
orl
adc
dec
es
cmp
stos
mov
insb
cmp
mov
jg
outsl
shrl
dec
add
pop
mov
adc
inc
push
sub
mov
or
addr16
lock
ret
jmp
dec
inc
mov
jmp
lret
fdivrs
test
sbb
or
or
cwtl
mov
aaa
iret
insb
dec
inc
divb
scas
jno
out
lds
jae
ret
lahf
mov
mov
jmp
adc
std
in
sbbb
insl
add
dec
dec
adc
jo
push
cmp
fmuls
out
test
stc
sbb
fcompl
inc
push
mov
sarb
dec
cmp
inc
xor
push
sarl
jbe
push
out
mov
xchg
out
repnz
shl
or
cmp
inc
add
sbb
xchg
push
or
lahf
jmp
mov
inc
sbb
cmp
xchg
add
push
ds
cmp
ja
clc
add
and
mov
mov
notb
add
mov
fsub
and
clc
loopne
mov
cmp
jne
loopne
xchg
test
and
nop
sbb
and
stos
fsubl
adc
js
decl
jg
flds
pop
mov
jno
inc
movsb
loopne
cmp
dec
mov
in
and
pop
movzbl
outsl
adc
cmpsl
notl
add
xor
roll
fistpll
ljmp
pushf
push
mov
and
and
cmpsb
jns
add
or
mov
or
nop
std
inc
xchg
cmp
nop
dec
push
or
fmuls
lods
adc
pop
fs
mov
mov
xchg
insb
aad
xor
or
mov
add
sbb
outsb
or
or
bound
repnz
fchs
fsts
les
iret
push
arpl
cs
jge,pt
inc
sub
jb
sbb
cmpsl
or
cmc
test
mov
push
test
lods
push
or
xchg
mov
add
cs
cmpsl
inc
inc
roll
mov
sti
test
mov
sbb
aam
mov
nop
fs
push
stos
xchg
adc
push
and
cmp
mov
xor
hlt
jnp
xchg
scas
iret
pop
add
pop
outsl
into
insb
mov
jno
imul
push
mov
imul
inc
sbb
fnstsw
add
and
cmp
mov
push
les
fs
in
popa
xchg
test
popa
gs
adcb
mov
pop
xchg
and
push
test
xchg
cmp
nop
insl
icebp
pop
xor
inc
or
ret
inc
inc
or
pusha
cmp
dec
add
loopne
lret
inc
xor
shl
aas
add
mov
gs
adc
lea
push
arpl
xorl
pop
leave
inc
enter
inc
nop
inc
push
mov
lods
dec
mov
ret
arpl
ret
jb
pop
out
clc
mov
ret
ss
mov
sbb
dec
adc
loope
xchg
cmpl
sahf
mov
pop
mov
xchg
inc
lea
lea
cmp
dec
xorb
fucomp
push
inc
subb
dec
in
push
jne
aas
lods
xor
mov
push
mov
push
mov
push
or
or
add
or
or
fwait
insb
aad
jmp
jle
jg
add
jnp
jbe
mov
push
rcr
movb
cmp
scas
clc
add
lea
fadds
push
and
stos
push
inc
push
imul
dec
jno
adc
pop
sarb
movsb
in
lea
inc
test
adc
out
or
or
sub
dec
or
lea
xchg
outsl
or
jo
daa
add
or
adc
scas
insl
addr16
je
xchg
push
pop
lock
xor
jo
push
dec
das
mov
mov
addr16
mov
test
gs
cmpsl
add
jbe
rcrl
pop
cmp
repz
xchg
pop
jno
lds
test
cmpsl
push
cmc
push
nop
loopne
inc
xchg
jge
aaa
movsb
daa
xchg
addl
mov
mull
mov
cmpl
insl
lret
nop
push
cli
outsl
xchg
xchg
int
inc
rcll
mov
lahf
je
and
mov
lahf
sub
sbb
sub
sbb
mov
loop
sub
xor
sub
ror
lea
xchg
inc
adc
aas
push
sbb
xor
rolb
cs
adc
pop
mov
negl
sub
and
push
pushf
push
mov
stc
in
rolb
and
mov
jns
xchg
xchg
and
mov
addr16
pop
lock
fldl
mov
pop
pop
xchg
mov
sbb
into
jae
sub
icebp
push
pusha
jb
sub
shrl
push
ss
and
dec
push
mov
xchg
hlt
popa
mov
aaa
shlb
rcrb
jno
inc
cmp
add
jmp
jmp
les
or
or
cmp
cmp
push
mov
push
push
mov
aaa
sbb
cmp
hlt
mov
mov
add
les
lcall
sbb
aam
in
test
lret
mov
jmp
pusha
cmp
or
lock
es
dec
xor
cs
gs
stc
hlt
hlt
and
pop
mov
lret
rorl
and
nop
fdivr
mov
dec
pop
cmc
shl
pop
push
imul
jge
rol
or
in
adc
hlt
add
or
pop
or
mov
je
and
xchg
lea
adcl
dec
push
or
pop
insb
ja
jae
in
into
or
jmp
mov
in
sbb
test
rolb
enter
call
and
fistpl
es
push
les
mov
test
and
fs
in
aad
in
mov
invd
into
push
push
push
sbb
addb
lret
outsb
shlb
sbb
lahf
and
nop
pusha
fisubl
imul
mov
mov
xorl
push
add
je
rcrl
icebp
mov
sub
cld
jecxz
sub
roll
adc
lcall
leave
movsl
rclb
fcomp
mov
cmp
xchg
add
fcmovu
and
addr16
test
ret
rorl
pop
addr16
adc
adc
mov
sub
push
or
nop
aaa
aad
sub
flds
lahf
adc
scas
in
add
mov
popa
clc
in
jl
jecxz
inc
sbb
inc
imul
add
lods
mov
mov
pop
and
or
fcomps
rolb
testb
push
inc
push
call
cmovo
and
nop
or
sbb
les
fnstenv
inc
pushl
leave
and
jmp
push
lds
and
sbb
inc
mov
stos
add
pushf
adcb
mov
xchg
push
push
sbb
cmp
add
sub
mov
lods
push
repz
popa
aam
cltd
push
repnz
clc
add
lods
pop
add
cmpsl
or
jne
xchg
clc
cmpb
add
cmpsl
or
lahf
mov
gs
fildl
ret
sbb
sarb
cmp
push
xlat
mov
pop
fsubs
dec
fsubl
inc
imul
call
cwtl
cmp
stc
andl
and
in
imul
popw
cmp
inc
fmull
call
xor
ror
aad
sbb
sub
sub
mov
jns
and
add
pushf
mov
scas
push
dec
in
push
in
add
aam
pop
sarb
pop
sbb
pusha
out
mov
aam
sahf
dec
adc
mov
in
mov
add
push
lock
xor
xorb
and
mov
sbb
cmp
or
add
fs
or
mov
pop
lock
adc
sarb
mov
mov
enter
sbb
aam
dec
sub
es
mov
adc
shlb
xchg
push
and
cmp
sub
xchg
and
outsb
jns
and
mov
mov
leave
das
mov
incl
mov
sbb
mov
test
bswap
daa
loopne
test
mov
fdiv
mov
cmpsl
mov
in
adc
ds
lods
sub
sub
mov
jns
pop
movsl
inc
fmull
pusha
adc
push
xchg
jbe
mov
mov
fs
jo
adc
ret
adc
mov
sub
sub
hlt
mov
mov
lods
push
aad
pop
push
cld
cmp
in
stos
inc
js
incl
jnp
lcall
add
je
mov
jmp
dec
fistpl
push
cld
lret
dec
pop
lods
je
mov
ss
ficoms
sub
cmp
add
push
lock
cmp
jp
cmpl
adcb
mov
in
dec
adc
movsb
clc
pusha
dec
push
mov
push
push
xor
push
and
stos
inc
add
in
into
push
inc
imul
cmp
or
xchg
dec
push
cmp
jge
sub
sub
movsb
adc
and
jge
jmp
es
out
pop
jbe
scas
testl
js
or
cmpl
push
aam
add
add
add
add
add
adc
or
call
aad
cltd
jno
jo
add
dec
pop
dec
or
jge
jne
push
rorl
dec
loopne
aaa
imul
loopne
cmp
ss
and
lods
xorb
cwtl
jmp
jae
pop
fucomi
cmp
les
les
ljmp
in
push
pushf
mov
xchg
add
push
jmp
or
inc
and
push
mov
std
mov
sub
mov
xchg
bound
mov
sbb
add
test
push
es
jl
aas
push
mov
in
and
cmpl
and
mov
ja
movsb
mov
rorb
mov
sub
shr
push
jae
test
mov
call
add
mov
enter
int3
xor
shr
cmp
mov
rclb
lods
rcll
sar
and
add
jbe
insb
push
adc
or
int3
data16
insl
push
hlt
and
int3
fisubrs
adc
and
adc
push
push
mov
lahf
xchg
push
sbb
cmp
aam
or
mov
mov
add
jmp
mov
or
shrb
jmp
ret
cmovle
jo
pop
or
add
sub
sbb
add
fsubs
push
sub
xor
mov
pop
add
adc
aad
test
xor
or
call
push
repz
pushl
out
push
sti
pop
cmp
lds
cld
je
shr
mov
or
aad
cs
cmpl
push
cltd
sub
push
cld
fdivl
cld
jae
adc
xlat
aas
sub
hlt
in
add
into
in
leave
out
in
mov
hlt
sbb
and
sub
aam
mov
mov
inc
sbb
push
loop
cli
pusha
lock
adc
cmpsb
clc
lahf
jle
or
in
or
or
cmpb
xchg
mov
test
sub
sub
dec
add
andl
shlb
cmp
xchg
int3
rcr
or
fs
cmp
mov
mov
cmp
scas
in
clc
sbb
rolb
loop
jmp
cs
hlt
xchg
sbb
jg
sub
sbb
xchg
and
mov
or
loope
in
std
adc
jns
xchg
test
or
cmp
and
dec
sub
ja
fldt
jle
add
mov
loopne
clc
and
dec
mov
arpl
stos
loop
pop
cmp
aas
stos
loopne
orl
pushf
outsb
sbb
inc
adc
adc
mov
jo
into
cmpsl
push
test
in
test
ficoml
jno
or
jge
mov
lret
cmpsl
dec
cmp
js
test
pop
les
ss
cmp
sub
fs
lods
orl
xor
sub
iret
or
pop
pop
cmpsb
adcl
and
lea
std
mov
insb
out
aas
mov
sbb
adc
int
outsb
pushf
inc
daa
push
stc
add
out
push
ret
adc
mov
add
fnstsw
sbb
loop
sbb
test
inc
push
pop
sbb
in
enter
xchg
test
out
push
loop
xchg
dec
imul
sti
fwait
inc
jne
push
xchg
inc
pop
sbb
test
push
mov
jg
mov
stos
jl
add
or
fdiv
out
xor
adc
adc
push
mov
dec
test
sbb
in
lea
sub
xchg
or
sbb
xchg
jecxz
negl
push
rcrl
ja
int
jb
das
push
cltd
mov
sbb
lahf
add
xchg
xchg
shrl
push
mov
arpl
push
addr16
mov
movsb
pop
sbb
dec
push
adc
das
sub
sbbb
or
je
jno
push
mov
repz
nop
pop
ja
mov
inc
mov
pushf
sbb
xor
sub
jae
mov
lea
xor
push
inc
mov
clc
xchg
pop
inc
out
dec
aam
mov
lret
pop
mov
call
jge
imul
mov
push
cmp
leave
xor
jns
mov
mov
hlt
push
push
inc
lock
mov
stc
sbb
add
xchg
arpl
xor
imul
dec
sbb
les
mov
push
inc
testl
outsl
add
fildl
mov
lahf
orl
cmpb
jne
xor
dec
dec
repz
cwtl
cwtl
sti
jae
mov
in
cmp
test
mov
lahf
jns
add
clc
iret
add
pusha
or
mov
scas
dec
add
push
dec
cmpl
jb
lret
dec
xor
mov
das
les
aas
pop
hlt
mov
mov
in
push
push
data16
mov
repnz
scas
les
int
das
roll
sbb
fadds
int3
jno
jnp
or
sub
js
and
lock
rolb
mov
in
in
add
mov
popf
sahf
or
or
pop
push
mov
insl
gs
push
inc
fdivl
mov
into
data16
mov
ret
scas
int
mov
sub
push
es
jne
cmp
push
mov
pop
or
adc
loop
in
lahf
sub
adc
fs
cmp
jae
push
add
mov
xchg
aas
dec
rcrb
xchg
loope
adc
test
je
mov
mov
mov
mov
sub
sbb
mov
and
mov
mov
or
jnp
popa
clc
les
jl
std
lock
loopne
pop
mov
push
or
scas
lods
sub
dec
lods
lods
add
out
xchg
in
cmpl
cltd
nop
xchg
test
test
push
jb
pop
movsb
test
movsb
push
sbb
push
aad
jg
add
leave
enter
cmp
jns
shll
mov
sbb
pop
pop
mov
push
flds
sbb
arpl
dec
jae
pop
mov
or
popf
scas
mov
fbld
mov
clc
or
push
xor
hlt
xchg
lret
jo
cs
adc
mov
push
mov
xor
jne
mov
in
xor
cld
int
sub
push
stc
adc
pop
sbb
cmp
adc
cltd
arpl
mov
cwtl
dec
xor
or
mov
daa
sbb
mov
xlat
ds
xor
cmpl
mov
test
cs
lret
and
movsl
jb
mov
inc
addl
mov
sub
rcrb
or
in
rorl
cmpl
sbb
int
and
ret
jecxz
xchg
lret
in
in
push
cs
jo
and
fsub
stc
cmp
cmpsl
in
mov
push
or
shlb
mov
loopne
pusha
jns
pop
imul
sahf
push
push
shrl
dec
mov
in
xchg
mov
ret
mov
movsl
sbb
jmp
jns
sbb
dec
pop
xor
inc
clc
cld
test
sub
fdivr
add
sbb
repnz
jo
cwtl
iret
jns
insl
cmp
add
and
add
cld
sub
aad
xchg
adc
xchg
loopne
jae
push
loopne
jle
push
leave
sub
or
fidivrs
je
cwtl
or
jae
cs
shlb
in
loope
push
aam
orl
bound
stos
loopne
pop
jmp
bound
jne
call
enter
add
loopne
sbb
rcl
movsb
out
mov
cld
loopne
xor
sbb
shl
icebp
add
inc
enter
push
imul
rorb
add
push
push
adc
push
enter
cmp
js
enter
xchg
xchg
enter
and
les
lret
enter
es
jmp
sbb
dec
shll
fcmovu
adc
rolb
iret
enter
lret
and
mov
jb
mov
in
mov
outsb
jge
xchg
out
loopne
xlat
cmp
loopne
dec
sub
popa
ret
push
andb
rorl
shll
out
inc
pushf
mov
or
andl
sti
mov
call
div
sub
dec
sbb
jmp
and
jae
fcomp
pop
fmuls
in
adc
mov
and
ss
in
fdivl
jmp
cli
and
rcll
fisubrs
enter
cmp
dec
sub
dec
cs
scas
mov
jnp
add
test
xchg
dec
inc
dec
adc
pop
and
sbb
inc
sub
xor
push
aas
insb
dec
inc
and
ror
sub
test
movsb
das
mov
xor
sbb
and
gs
mov
outsb
test
test
call
push
adc
or
in
add
inc
push
lods
stos
mov
pop
test
or
mov
push
ret
adc
push
xchg
xlat
data16
lahf
push
lods
adc
sbb
sub
je
xchg
lret
and
cld
fucom
add
cmp
clc
jb
push
xorl
cld
hlt
cld
pusha
or
cmc
ja
add
add
jmp
or
pop
adc
adcb
mov
ss
mov
inc
mov
int3
ret
ss
clc
add
xchg
lea
lea
lcall
xchg
loop
push
mov
enter
mov
hlt
jecxz
test
cmp
mov
mov
and
test
mov
lahf
or
je
ss
add
pop
add
aaa
mov
mov
add
aad
pop
mov
sbb
hlt
stc
and
push
jge,pt
push
add
xchg
clc
clc
enter
sbb
jbe
icebp
bound
add
movb
sub
jge
mov
xadd
cli
pop
clc
adc
mov
repnz
inc
flds
mov
lret
sub
cmp
xor
icebp
dec
or
mov
mov
adc
jb,pt
mov
jp
pushf
stos
mov
test
je
insb
or
add
jecxz
lea
in
incb
enter
sub
mov
or
or
mov
mov
cmp
inc
or
pop
and
jnp
popf
xor
xor
and
inc
push
cmpb
sub
js
jbe
or
int3
fistpll
cmp
test
or
xlat
insb
mov
add
or
scas
push
jmp
imul
dec
bound
mov
sbb
add
add
imul
and
jmp
adcl
mov
pusha
arpl
push
iret
shrb
sub
dec
mov
cmp
inc
aam
mov
repnz
movsb
bound
or
push
cmp
dec
push
lods
inc
mov
xor
les
push
dec
inc
cltd
pusha
aaa
in
sub
scas
js
psraw
sbb
inc
push
cmp
test
inc
jge
std
shlb
jmp
cmpsl
xor
pop
cli
pop
jle
roll
stos
mov
mov
or
push
add
sahf
xchg
sbb
jbe
adc
and
fs
xchg
xchg
pusha
cmp
aaa
repnz
sbb
insb
ret
add
xor
dec
das
lret
test
in
mov
fs
lods
imul
cmpl
andl
repz
dec
mov
and
in
je
mov
fs
inc
cmp
inc
mov
cwtl
dec
or
push
adc
mov
cmpsl
push
outsb
push
mull
cmp
add
mov
lret
pop
inc
and
ja
andl
or
aad
mov
dec
mov
jne
or
dec
push
movsb
subl
adc
xchg
mov
adcl
push
subb
xchg
andl
lret
test
pop
xchg
test
xor
push
movsb
mov
dec
stos
in
sub
xchg
je
addb
adc
sub
pop
sub
pop
add
inc
push
dec
gs
mov
testl
inc
mov
jns
inc
mov
jmp
iret
pop
xchg
subl
pop
add
pusha
add
rcl
roll
add
loopne
pusha
cmp
cmpsl
pop
push
leave
and
imul
jae
fs
push
xor
adc
ja
and
jae
sub
add
pop
add
out
mov
xchg
push
cmpsb
mov
pop
sbbb
push
xchg
aaa
jge
add
push
or
xchg
sbb
dec
dec
shlb
dec
push
aam
pop
decl
adc
inc
rcrl
arpl
pop
pop
push
inc
cs
daa
fs
pop
clc
xchg
dec
cmp
shl
dec
or
push
xchg
push
mov
addb
les
movsb
rorl
jnp
lea
inc
jo
testl
into
and
pushf
jecxz
add
test
jg
cwtl
nop
andb
ret
add
and
mov
pop
pop
sub
and
jne
cmp
xor
and
and
je
sbb
mov
dec
jb
popa
sar
pop
rol
in
push
xchg
xchg
clc
xor
push
stos
inc
ret
dec
mov
shrb
jp
enter
dec
adcl
dec
sbb
add
pop
mov
push
insl
sbb
inc
mov
sti
fmuls
add
loope
or
call
mov
sbb
pop
push
cmp
loop
test
sbb
cmp
std
pop
loop
pushf
pushf
xor
pop
nop
int
inc
mov
repnz
std
adc
add
or
rorb
xchg
stc
enter
adc
movsl
xchg
mov
lods
lock
pop
xor
cmp
adc
fldl
pop
cmpsb
in
sub
enter
fs
mov
dec
fucom
push
mov
push
sbb
test
sbb
nop
mov
test
xchg
loope
out
add
lods
ret
inc
mov
imul
adc
pop
je
adc
dec
pop
cmp
popa
jo
sub
or
cld
aad
adc
outsl
jb
push
mov
jecxz
xor
dec
push
xchg
mov
pop
into
repz
jecxz
jp
sti
xchg
cmp
dec
add
adc
push
fstps
or
dec
sahf
cmpsb
in
add
movsl
xor
pop
pop
shlb
adc
pop
adc
lahf
nop
dec
cwtl
inc
mov
fadd
adc
add
mov
sbb
pop
push
fstl
mov
mov
cmp
sub
pusha
or
pop
push
pop
lret
test
nop
iret
pop
or
mov
push
mov
push
mov
in
ljmp
mov
movsl
in
inc
fmull
sbb
sub
xchg
pop
sbb
jmp
cmc
mov
les
or
lods
daa
dec
lods
insb
xor
mov
in
sbb
jno
test
in
push
test
js
and
cmp
insb
ss
mov
add
sub
sbb
lods
mov
lea
lea
push
lea
dec
outsb
mov
aam
mov
mov
push
xchg
sbb
jno
dec
lea
lcall
es
push
sbb
pop
lods
mov
leave
movsl
xchg
lods
aas
js
movsl
pop
push
test
push
inc
mov
outsl
les
adc
sub
int3
movsl
fwait
xchg
test
xchg
cmp
fiaddl
or
dec
rolb
mov
or
aas
push
sub
inc
test
addr16
and
lock
addl
lds
mov
mov
insb
cmc
outsb
mov
xchg
push
cmp
repz
jno
out
xchg
adcl
xor
or
fs
or
add
jb
rolb
aam
popa
sub
or
mov
jo
test
aas
pop
jmp
fisubrs
adc
jnp
popf
repnz
push
orb
in
pop
jo
or
cmp
pop
pusha
in
add
jae
dec
xor
inc
fists
push
pusha
jo
xor
mov
mov
iret
dec
pusha
fsts
mov
pop
shl
jo
xor
jmp
cli
clc
add
add
pop
test
cltd
pop
push
push
mov
add
leave
inc
add
pop
test
movsl
or
add
shl
sbb
or
out
push
jecxz
ja
sbb
popf
popa
sbb
addb
popa
data16
ss
stos
sub
inc
pop
dec
push
in
pop
dec
or
fnstsw
push
shl
rcr
xchg
add
and
enter
movsb
add
cmp
add
ret
insb
cli
xor
adc
xchg
pop
cmp
outsl
and
cmpl
push
xor
cmp
push
pop
adc
pusha
push
mov
add
adc
or
jl
pop
enter
fwait
movsl
movsb
jecxz
mov
xchg
mov
and
aas
in
cli
add
cld
test
push
stc
sbb
stos
scas
int3
std
movsb
jb
or
pusha
mov
mov
cld
or
rorl
ret
xor
pusha
xor
push
arpl
inc
insb
cmpsb
pop
sbb
jo
mov
cmp
push
scas
add
push
fwait
mov
xor
movsb
pop
mov
add
pop
mov
jp
sub
add
clc
cld
pop
jo
dec
sbb
mov
in
int3
mov
dec
or
push
test
daa
push
lods
inc
cltd
sbb
rorb
aam
sub
in
jbe
push
rolb
addl
sub
push
test
jge
mov
cmp
xor
mov
mov
popf
fsubrs
mov
jb
nop
push
xchg
push
push
push
lcall
sub
mov
jmp
popf
sbb
add
aam
push
xchg
mov
mov
test
mov
fstpt
push
add
sub
dec
mov
fcomps
pusha
cld
lods
and
mov
iret
lret
test
subb
sub
inc
and
push
adc
mov
arpl
add
movsb
xor
xor
bnd
ds
and
adc
and
jmp
fimuls
dec
mov
dec
aam
aas
bound
sahf
lock
add
xorl
nop
arpl
xor
fisubrs
imul
rol
mov
dec
addr16
test
sub
popa
mov
mov
sarl
aad
fisttpll
mov
xor
movsb
rcll
aas
add
push
xorb
sub
sbb
pop
jne
fcoml
ja
shrb
sbb
roll
or
inc
lods
pop
shlb
fidivrl
xorl
jge
dec
and
daa
and
rol
push
add
adc
mov
enter
mov
loop
lret
add
ja
sbb
mov
mov
add
mov
xor
cmc
fwait
or
add
pop
add
cld
inc
mov
cs
xor
pop
adc
mov
pop
shll
cmp
and
mov
insl
xor
push
xchg
lret
mov
xor
pop
xorl
lret
shlb
shl
mov
pop
jnp
add
mov
add
mov
fbld
sbb
rorb
mov
jno
cmp
xlat
xlat
inc
loopne
sbb
dec
push
dec
repnz
andb
rcrb
mov
inc
and
and
inc
push
jns
adc
push
sub
aaa
popa
sub
inc
mov
and
dec
shlb
pop
lea
push
mov
mov
sbb
xchg
mov
ss
pop
add
mov
cmp
and
outsl
adc
xchg
movsb
mov
adc
push
shll
inc
cmpsb
pop
xchg
jne
loopne
xchg
xchg
sub
dec
cmp
push
push
pop
cmc
popa
mov
sub
dec
and
pop
pop
xchg
es
iret
sbb
or
xchg
jg
call
pop
repz
int
inc
in
mov
mov
das
pop
pushf
hlt
insb
arpl
je
imul
xor
nop
arpl
mov
cmp
in
adc
dec
adc
dec
adc
cwtl
xchg
mov
pop
imul
dec
std
stos
cmp
jl
pop
add
dec
lods
and
push
xchg
fnstsw
out
pushf
cli
adc
jo
xor
sbb
mov
adc
xchg
ud2
das
sub
loopne
pop
sbb
nop
push
enter
mul
popa
lea
dec
xor
mov
mov
je
jnp
pop
icebp
push
popf
inc
sub
fisttpll
jno
sbb
pop
jne
sbb
dec
sbb
add
dec
dec
jae
add
jnp
fadds
loopne
mov
or
test
inc
lret
clc
pop
sti
gs
cmp
aam
mov
enter
bound
adc
icebp
add
pop
jno
in
loopne
push
lods
movsb
aad
xor
test
push
cmp
mov
push
pop
or
add
test
imul
fsts
out
pop
push
sar
jmp
sub
cmp
inc
dec
add
test
lods
in
roll
inc
cmp
add
ret
jo
mov
cmpsl
enter
dec
cmp
xlat
jae
out
lds
add
aad
inc
lea
push
test
push
inc
add
pop
pop
xchg
imul
sbb
push
xor
nop
push
rolb
addb
mov
js
mov
les
push
jl
out
cld
push
dec
mov
or
xor
dec
cmpsb
jl
or
iret
push
into
ficoms
out
je
insb
adc
insb
dec
shll
repz
adcl
insb
clc
sub
xchg
add
jae
inc
add
in
jecxz
cmpsb
mov
sbb
adc
xlat
dec
add
dec
ja
xor
cmc
iret
cmp
push
mov
ljmp
sbb
mov
mov
imul
add
adc
lea
mov
test
pop
push
ret
pusha
adc
sbb
pushf
rorb
mov
dec
mov
dec
and
jmp
mov
popa
mov
sub
jb
adc
test
and
add
dec
out
sbb
xchg
fistl
add
faddl
push
add
test
call
popa
and
rcrb
fs
test
inc
jo
push
pop
mov
xor
and
mov
notl
test
mov
adcl
test
pop
rorb
pop
inc
cltd
add
loope
mov
xor
fdivr
adc
cmp
nop
cmp
cld
and
inc
addl
shr
add
out
inc
push
adc
jne
movsb
insb
movsl
ss
stos
repz
jge
outsl
cld
cld
push
or
adc
sbb
sbb
clc
clc
and
sub
repz
dec
mov
add
repnz
nop
pop
inc
push
sahf
push
push
fists
inc
fisubs
or
dec
push
hlt
xor
hlt
adc
inc
test
lret
aad
lcall
pop
nop
clc
out
jge
add
jne
lea
rsqrtps
adc
pop
sub
mov
mov
add
adc
out
add
and
pop
shrl
test
dec
dec
shrl
mov
xor
or
imul
jno
add
or
loope
adc
xchg
and
shlb
imul
clc
andb
or
cmpsb
sub
je
mov
loope
mov
dec
or
and
movsb
fnstsw
push
add
dec
out
or
test
add
xor
rclb
or
push
mov
mov
fidivrl
jne
mov
mov
fdivl
add
sbb
js
insb
out
add
std
jge
xor
mov
outsl
mov
adc
pop
adc
rcrl
fs
cmc
mov
mov
fdivs
test
hlt
or
lahf
sbb
sub
cmpl
mov
movzbl
jo
cli
jmp
push
xchg
push
jge
push
movsb
mov
adc
inc
dec
or
jl
enter
push
inc
or
xorb
loope
jecxz
dec
lock
ja
out
adc
or
jge
ja
iret
out
add
add
je
jmp
or
adc
or
bound
mov
lds
inc
ljmp
shll
sbb
jo
or
iret
dec
dec
inc
mov
lock
cmp
or
mov
or
or
add
shll
xor
push
jp
pushf
movsb
daa
ja
xlat
push
jp
jne
hlt
jecxz
mov
imul
push
and
test
fildl
push
cmc
or
mulb
add
pop
out
or
in
int
add
push
dec
sti
push
cmpsb
push
mov
push
xchg
je
sbbb
lahf
pop
loope
add
jg
xchg
sub
andl
and
add
int3
xchg
add
fldcw
or
sub
inc
pop
in
stos
lahf
add
lea
cli
sahf
xchg
adcl
pop
mov
xchg
dec
mov
cs
xor
test
adc
jno
xchg
adc
test
xchg
cs
int3
lods
in
sbb
rorb
int
test
cmpsb
fsubrl
lret
cmpb
dec
push
lock
stos
push
jmp
cld
push
hlt
add
cmpsl
bnd
adc
sub
add
in
or
cmp
les
push
mov
cmpsb
shll
adc
push
push
shll
or
push
fdivr
call
movsb
jl
pushf
jge
push
jl
mov
fadd
mov
cmp
movsb
fcoml
movb
mov
pop
int3
or
fdivrl
add
push
jp
xchg
mov
hlt
mov
push
inc
pop
cmp
call
xchg
pop
add
jmp
push
outsl
xchg
adc
ret
jg
jmp
push
js
in
xor
add
xchg
xchg
jg
lock
out
leave
add
or
dec
sbb
mov
sub
or
sub
shl
xchg
push
pop
fs
prefetcht1
loop
outsb
fdivrs
sub
xor
pop
add
pop
pop
or
mov
pop
js
xor
imul
int3
mov
push
mov
jmp
xor
sahf
add
sbb
mov
cmp
push
ficompl
sub
mov
adcl
mov
pop
aad
add
shll
std
pcmpgtd
dec
cmp
push
inc
add
adc
add
stc
mov
xlat
divl
and
add
adc
sub
mov
mov
test
jl
mov
test
loop
or
je
mov
inc
shrb
rorl
outsb
adc
mov
adc
jbe
jbe,pt
push
jge
and
pop
pusha
xchg
mov
dec
sbb
mov
lds
mov
ss
add
mov
and
push
cmpsb
shll
sbb
sbb
popf
test
cmp
xor
stc
or
sbb
add
aad
sbb
cwtl
insb
cltd
popf
insb
daa
pop
les
je
ficompl
shlb
scas
add
pop
daa
mov
lods
jecxz
xchg
adc
and
loopne
rorl
in
popf
aam
jmp
push
jl
add
and
dec
cmp
inc
cmpsb
sbb
add
cmp
push
jg
sbb
xchg
adc
std
or
adc
lahf
loope
xchg
or
or
ret
add
adc
movsl
push
hlt
dec
mov
dec
nop
int3
int3
sti
dec
daa
xchg
fiadds
test
xchg
andl
push
xchg
test
push
pop
and
jle
cmp
push
adc
fsubs
mov
sbb
arpl
es
subl
jl
and
push
jmp
push
and
popf
xchg
push
pop
lahf
popa
scas
mov
cmp
and
sbb
mov
imul
cmp
daa
icebp
mov
les
mov
xor
or
mov
jmp
push
pusha
cmp
push
ret
jmp
add
loope
nop
pop
xchg
mov
push
in
sarl
push
xchg
unpcklps
imul
xchg
jb
imul
add
test
mov
xchg
add
add
add
xchg
mull
push
pop
or
adc
or
add
or
loope
dec
insb
add
adc
lock
jbe
je
add
xor
out
fisttpll
pushl
xor
xchg
inc
push
popf
jl
negb
js
loope
or
inc
mov
pause
mov
and
stc
jns
sbb
lods
adc
and
in
xchg
dec
xchg
cltd
mov
add
mov
mov
sub
in
repnz
add
jmp
add
push
or
mov
rorl
enter
mov
xor
cld
es
jo
loop
cwtl
ficoml
dec
lret
xor
jb
repnz
cmp
sbb
pop
sub
cltd
push
jl
jne
call
fs
xchg
cmpsb
je,pn
mov
or
mov
adc
dec
lcall
add
jo
cmp
jne
test
mov
cs
in
pop
fadds
divl
in
and
and
popf
or
pop
jg
fimull
add
loope
rorb
out
push
pop
pop
xchg
in
lahf
mov
adc
lea
dec
jno
jmp
lcall
rsm
add
imul
jo
or
sbb
or
jl
mov
add
fdivr
addl
push
fmuls
mov
cwtl
mov
sbb
sti
scas
cmp
pusha
sbb
in
repnz
adc
jns
mov
xor
xor
xor
xchg
je
sub
lret
repz
push
sbb
sub
and
inc
mov
xor
mov
mov
stc
add
insl
es
cs
dec
loope
adc
enter
imul
lea
sahf
jbe
and
or
xor
dec
pop
or
xchg
cmpsb
cltd
mov
cmpsl
or
jl
sbb
loopne
fadds
mov
mov
push
push
xor
stos
loop
mov
gs
adc
inc
mov
loopne
mov
push
sbb
stc
js
add
in
jbe
ljmp
jbe
jmp
sbb
test
lods
mov
or
xorb
cmp
rcrl
adc
xchg
sti
jmp
push
mov
mov
movsb
imul
mov
sub
loop
dec
movl
push
pop
cmp
jne
jmp
adc
sub
or
lcall
idivb
je
add
push
push
or
cwtl
jl
jmp
sbb
lret
pop
xchg
push
sbb
push
arpl
int
mov
xchg
int3
and
adc
lods
and
movlps
push
add
jg
mov
popa
ret
push
pusha
popa
movsb
add
xor
bound
stc
add
lcall
pushf
pop
movsb
cmp
adc
or
or
or
xchg
pop
jne
push
xchg
add
fldenv
pop
adc
and
or
aaa
jmp
sarl
push
rorb
sbb
fdivp
cli
adc
inc
das
or
mov
mov
add
or
and
xchg
loope
push
or
xchg
fstpt
jbe
loope
neg
sbb
push
mov
enter
or
in
lods
inc
cmpsl
call
add
adc
cwtl
int3
or
add
jns
clc
mov
int3
or
or
cmpsl
add
fsubrs
shrl
push
jno
lret
add
sbb
dec
test
inc
xor
or
fwait
std
dec
cmp
cmp
pushf
inc
add
stc
cmp
cmpsl
push
sub
js
setge
sti
sub
pop
add
add
add
inc
pop
or
jo
test
lock
cmp
mov
mov
and
xchg
xor
jne
fdivr
add
cmp
cmp
lods
into
mov
enter
mov
insl
mov
mov
out
cld
jmp
add
jo
xchg
and
adc
cmp
sti
clc
push
xchg
push
and
sub
je
insb
pop
fdivl
sbb
lds
js
cs
clc
push
push
xchg
loopne
fiaddl
adc
xchg
sbb
pop
sub
fwait
adc
push
jl
in
out
imul
add
jae
dec
pop
cmp
pop
lds
xchg
xchg
push
out
int3
cs
cli
add
cmp
dec
test
jne
inc
addl
cli
mov
leave
add
out
or
add
push
sub
scas
lock
rolb
cmp
insl
xor
lret
gs
hlt
mov
or
jns
test
or
pop
clc
lahf
dec
in
lock
mov
fdivrl
js
mov
adc
jle
pop
gs
mov
mov
shll
orl
lret
mov
push
sub
cmp
pop
jne
ds
aad
loop
adc
push
movsl
cmc
add
popa
add
inc
inc
or
leave
stos
lock
lock
in
adc
pop
inc
mov
hlt
cmp
icebp
add
sbb
or
les
cmp
xor
inc
xchg
aaa
push
lock
inc
hlt
push
std
pop
repnz
lock
popa
pop
mov
adc
test
mov
or
pop
dec
jmp
aaa
sbb
stos
push
test
inc
or
pop
mov
clc
jne
push
or
sub
icebp
aad
adcl
sub
push
addl
clc
ss
add
add
movsb
jl
js
mov
mov
push
cmp
jp
sub
push
sbb
jae
rorl
sub
and
mov
bnd
stos
add
mov
jmp
adc
xchg
sarb
add
pop
pusha
or
jmp
faddp
adc
adc
add
or
shlb
mov
pusha
sub
lock
push
outsl
push
add
into
call
cmp
int
loope
sbb
xchg
ss
xor
mov
add
xor
pop
cs
je
dec
mov
aas
pushf
add
enter
mov
cwtl
mov
loope
arpl
add
and
mov
and
cmp
or
lds
sbb
mov
arpl
aam
jo
mov
pop
dec
mov
cld
dec
push
xor
loopne
nop
sub
mov
or
cld
ljmp
sub
xchg
push
sbb
jb
add
mov
fs
lcall
fcoms
ja
or
dec
call
mov
enter
push
and
out
and
push
mov
dec
test
push
push
scas
in
scas
in
insl
ficompl
or
adc
popa
mov
adc
hlt
cmp
jne
and
xor
ret
clc
icebp
inc
loopne
xchg
xor
adc
add
ret
sub
jg
movsb
sub
or
pop
cmp
cmpl
xchg
pop
or
sub
or
sub
mov
cld
jp
movsb
shlb
leave
sti
and
xchg
jmp
or
mov
lea
scas
xor
data16
adc
add
jl
mov
or
xor
aas
or
pop
mov
cmp
inc
jbe
mov
or
je
adc
test
sub
sbbl
pusha
jo
push
out
pusha
out
movsb
push
push
or
push
popa
dec
mov
sub
pop
jo
call
div
add
adc
add
add
mov
dec
jo
rolb
pop
inc
sbb
jne
mov
or
insb
sarl
ljmp
jb
mov
mov
js
jmp
clc
or
lock
je
or
push
sbb
stos
push
gs
xor
adc
add
stc
cmp
iret
push
add
cld
data16
popf
movsb
lret
sti
xchg
or
lahf
lock
out
dec
sub
add
mov
pop
mov
sahf
inc
add
cld
or
arpl
scas
and
dec
sub
mov
in
lea
in
hlt
je
add
std
imul
jae
aas
shrl
push
inc
test
push
inc
cld
lea
cmp
push
bound
cld
imul
daa
or
jge
push
xchg
mov
dec
test
inc
scas
add
mov
adcl
add
test
adc
push
and
adc
dec
sbb
inc
in
vsqrtsd
inc
add
les
mov
or
inc
test
in
sub
test
call
loopne
mov
or
add
call
jmp
test
push
fldt
cmp
and
ror
jmp
or
or
std
push
xchg
aaa
adc
call
adc
push
out
ret
jne
out
cmp
mov
fs
test
inc
push
inc
das
push
pop
pop
mov
lds
push
dec
dec
pop
daa
inc
and
out
mov
pop
pop
add
pushf
cwtl
jle
adc
or
sbb
and
or
add
es
jmp
cmp
inc
add
push
xor
adc
xor
cmp
mov
imul
mov
or
xchg
mov
pop
and
sbb
jl
mov
sub
xor
push
jbe
and
adc
dec
adc
push
add
insl
insl
int3
mov
addb
jge
js
add
shrl
mov
push
enter
pusha
push
mov
loopne
clc
pop
cmp
xchg
arpl
fadd
jb
sbb
pop
js
das
clc
jne
lahf
cmp
xchg
pop
test
xor
pop
adc
add
mov
lret
and
stos
insb
cmpsb
push
jecxz
cmp
shlb
lods
inc
in
sub
jb
push
xor
and
push
icebp
adc
dec
dec
sbb
add
jmp
xlat
push
loopne
add
push
push
sbb
xchg
xchg
sahf
xchg
inc
mov
ljmp
xchg
push
in
pop
faddl
inc
out
jb
call
jne
sbb
or
sbbl
mov
jns
xchg
xchg
mov
pusha
and
outsb
or
or
rorl
mov
and
push
dec
mov
adc
pop
repnz
ss
lods
dec
test
fld1
mov
rorb
std
rcr
dec
xor
mov
ja
xchg
jnp
or
imul
jne
or
nop
repnz
or
cmp
xchg
or
jnp
fistl
or
mov
push
adcb
pop
lea
inc
mov
add
pusha
push
cmp
sub
cmpsl
mov
addl
adc
pop
push
or
mov
inc
clc
xor
push
xchg
nop
and
push
pusha
sbb
xor
inc
dec
and
xchg
or
test
test
cli
fisttpll
jbe
ret
adc
addr16
cmp
inc
or
mov
jecxz
mov
ljmp
test
test
in
cwtl
cmp
shr
xchg
out
xor
push
int3
mov
test
inc
loopne
sbb
test
bswap
xor
dec
push
jmp
jbe
pop
es
mov
cmp
pop
add
in
add
push
sarl
sbb
adc
ljmp
fisubrl
xchg
lea
insl
add
dec
jge
insb
push
jo
pop
insb
insb
push
and
push
jbe
dec
jmp
sub
mov
fsubp
jne
dec
xlat
in
addr16
neg
mov
mov
lds
movsl
add
mov
shl
push
or
push
pop
dec
xchg
dec
movsl
out
fsub
xor
add
add
movl
stc
clc
xor
repnz
push
push
call
shlb
dec
dec
insb
shr
aam
add
popa
add
stos
mov
imul
ret
add
fdivs
test
stos
pop
cli
dec
or
arpl
inc
pop
fadds
daa
fidivs
push
push
shll
dec
repz
fildl
lea
flds
xor
pop
fsubr
sbb
or
inc
cmp
stos
sub
xchg
lret
jmp
mov
sub
lcall
hlt
cmp
sbb
popa
cmpsl
imul
rcll
add
mov
ret
dec
sbb
jp
mov
jb
outsl
jmp
ja
xor
cmp
and
mov
mov
pop
xchg
mov
fcoms
mov
les
inc
repnz
jne,pn
daa
dec
jne
dec
enter
jne
adc
mov
add
orb
aaa
cwtl
pop
adc
adc
loopne
cmp
jge
mov
cmp
out
sbb
fsubr
push
mov
insl
popf
shlb
jae
dec
and
push
test
in
inc
add
push
movsb
push
ficompl
push
movsl
pop
fldt
movsb
mov
sub
cmp
popa
adc
push
push
or
xchg
call
fcmovb
lea
mov
push
sbb
in
pop
aad
push
push
sbb
mov
das
mov
mov
cmpsl
das
push
pop
or
mov
push
adc
adc
jecxz
movsb
add
add
mov
popa
xor
xorl
sub
sub
mov
arpl
mov
mov
mov
sbb
cmp
fldl
dec
lret
dec
icebp
out
je,pn
or
je
cmp
cmp
pop
add
adc
hlt
shlb
leave
jmp
cs
push
add
lahf
test
push
mov
or
xor
sldt
push
test
je
in
lock
ljmp
in
mov
aad
and
sbb
lcall
and
cs
inc
enter
jp
xchg
pop
add
push
add
xor
mov
ds
movsb
jp
lcall
pop
dec
mov
add
mov
gs
or
push
pop
jmp
mov
in
mov
sbb
addb
sub
add
rol
fnstcw
mov
movsl
outsl
ret
dec
mov
nop
js
insl
add
push
jno
inc
cwtl
inc
sbb
ja
test
push
push
adc
dec
mov
call
cld
ja
pusha
iret
scas
sbb
jl
subb
mov
inc
lock
push
fdivrs
hlt
mov
sub
cmc
xchg
les
adc
dec
leave
fdiv
hlt
jns
xchg
xchg
clc
or
push
cmp
push
sti
jnp
push
jb
dec
xchg
in
sbb
xorb
and
mov
insl
enter
mov
or
imul
mov
out
dec
cmp
sti
mov
outsl
fcmovne
inc
leave
push
jns
adcb
jo
xor
inc
mov
or
mov
aaa
xchg
xchg
mov
lea
add
or
loop
add
in
sbb
mov
pushf
dec
in
or
sub
test
cmpsb
int3
sbb
push
in
mov
inc
sub
hlt
mov
adc
jmp
pop
xchg
test
inc
je
add
push
aad
lock
mov
dec
and
push
test
jl
and
push
dec
adc
movsb
es
push
fs
jo
xor
mov
adc
xchg
xor
clc
lods
mov
or
mov
sahf
pushf
dec
jnp
xchg
xor
mov
imul
fs
lcall
pop
enter
push
stc
mov
xchg
or
and
mov
push
fisubrl
aas
push
popa
pop
in
inc
pop
sti
cmp
jns
andb
imul
pop
mov
repnz
pop
jle
je
mov
das
mov
fmuls
xchg
jmp
pop
mov
cs
mov
sbb
into
jo
xchg
and
imul
pop
out
mov
xchg
dec
jae
aaa
sub
das
or
sub
inc
sbb
insl
xor
dec
push
cmp
xlat
adc
pop
or
mov
jns
or
or
and
or
daa
jne
xchg
dec
mov
bound
jecxz
shl
mov
inc
jg
push
pop
jle
pop
adc
cmpl
xor
inc
inc
jmp
stos
cmp
test
call
push
inc
mov
out
aaa
cmp
push
xchg
outsl
hlt
adc
push
aaa
or
loop
sbb
loopne
sub
cltd
ret
rcrl
lock
xadd
mov
push
adc
add
push
test
or
stos
jg
fwait
popf
mov
fdiv
and
lock
lret
xchg
lock
pop
insb
sub
loopne
adc
cmp
jl
fld
mov
outsb
push
in
mov
andb
fadds
loop
jo
add
jle
adc
mov
dec
adc
pop
mov
jbe
pop
imul
hlt
shr
jb
dec
jae
xor
inc
jl
and
pop
into
adc
test
jg
fcoms
cmp
dec
arpl
das
cld
popa
cld
cmp
push
test
pop
push
js
popa
rol
jmp
sti
imul
and
dec
xchg
jecxz
mov
cld
xor
pop
call
inc
cmp
pop
nop
bound
decb
xchg
rorb
and
jno
add
vpunpckhbw
push
jmp
insb
inc
mov
or
loopne
mov
daa
pop
cmp
fsubrl
ret
xchg
xor
rorb
mov
jbe
std
xor
mov
jno
sub
or
sub
hlt
jb
scas
jge
leave
test
add
adc
push
pop
jne
jae
jmp
add
add
lcall
mov
xchg
cmpsb
and
lods
nop
daa
ja
sub
clc
push
pusha
push
add
push
jne
sub
pop
jmp
cmc
and
push
in
fsubr
es
hlt
out
push
xchg
xchg
sub
movsb
outsl
dec
cld
pusha
mov
xor
jne
mov
add
cld
push
jg
cmp
adc
sbb
cld
je
jp
inc
fst
sub
or
jl
aas
clc
xchg
les
pop
sbb
lret
lods
add
pop
fs
insb
cmp
sbb
push
pop
adc
jno
jge
push
je
adc
rcr
inc
add
pop
adc
xor
dec
and
cmp
push
mov
notl
hlt
and
hlt
add
jge
hlt
push
jle
push
jmp
je
pop
mov
jnp
xor
dec
sbb
testl
dec
pusha
fmull
js
and
out
jo
dec
cs
add
stc
addr16
dec
ljmp
or
jns
xor
int
xchg
call
cld
scas
and
push
stos
test
mov
jecxz
push
or
mov
fxch
xor
jmp
mov
push
jg
stos
adc
or
in
or
rorl
dec
add
sar
jns
pusha
push
jbe
add
add
add
test
inc
dec
ja
mov
cmp
fs
jp
subb
mov
add
mov
xchg
in
stc
outsb
inc
inc
add
push
mov
rcrl
mov
mov
mov
jnp
xchg
push
pop
je
mov
and
aaa
shrl
mov
xor
pop
sub
arpl
sub
gs
xor
repz
xchg
add
and
cmp
aam
aas
lret
or
xor
cmp
adc
sbb
fdivrs
rclb
cmpsl
sub
inc
rorl
jp
mov
jmp
jg
sbb
jnp
scas
push
iret
pop
mov
or
or
push
dec
out
mov
insl
test
push
sub
iret
pop
insl
sahf
sub
lret
push
inc
movups
addb
inc
pop
bound
mov
push
shl
push
jns
int3
add
cld
mov
daa
adc
or
jge
jne
jo
lsl
jle
lea
or
cmp
stos
cmp
xchg
andb
push
fadd
inc
and
adc
or
incl
push
aam
lret
in
or
jb
shrl
inc
in
test
sbb
dec
or
inc
or
add
mov
ret
mov
fimull
das
and
mov
gs
xchg
push
mov
pushf
sbb
dec
ss
mov
scas
test
mov
xor
inc
aas
movsl
mov
stc
fldl
jns
fiaddl
fdivs
ret
or
inc
add
shl
push
add
jb
and
mov
add
je
add
adc
ret
mov
lcall
pop
adc
mulb
push
orl
repz
xchg
je
ret
rcl
adc
loop
adc
mov
aaa
pop
mov
inc
jo
xchg
push
cmpsl
imul
dec
and
or
sti
inc
icebp
mov
sbbb
pop
mov
and
or
pop
mov
lock
sub
sbb
push
push
and
adc
mov
fists
and
xchg
or
xor
push
push
and
nop
rcrb
les
loopne
jae
iret
loopne
pop
dec
add
les
dec
and
sub
xor
lock
cmp
mov
mov
outsb
lods
cmp
lret
mov
sbb
cmp
mov
xchg
adcb
and
lock
and
jo
mov
add
mov
sub
pushf
add
out
test
add
lcall
cmp
pop
aam
call
out
add
mov
xor
movl
shl
adc
sub
and
inc
or
fwait
inc
loopne
das
inc
sub
push
cmp
dec
gs
pop
cmp
cmp
add
icebp
sbb
lahf
sarb
push
lea
sub
cmpsb
mov
xchg
test
mov
pop
sbb
jmp
mov
add
jg
arpl
out
push
or
pop
ret
mov
loopne
dec
fistpll
lcall
add
xor
jo
cmpsb
ss
aaa
clc
mov
dec
stos
ret
outsl
add
inc
cmp
mov
sbbb
jb
and
stc
hlt
sub
nop
add
mov
adc
cmp
push
pop
enter
jmp
dec
repz
orb
sbb
cld
or
push
test
sbb
out
mov
inc
pusha
test
fst
imul
push
stc
or
push
xor
and
in
cmp
push
or
push
loopne
cmp
pop
cs
or
shlb
out
add
ss
ret
loopne
and
jne
int3
push
push
les
sub
mov
and
test
or
push
dec
mov
test
push
and
mov
dec
sub
test
orl
adc
add
ss
lret
movsb
mov
cmp
imul
daa
std
fdivr
lcall
cmp
adc
cmp
mov
es
inc
cmp
or
clc
jmp
sahf
imul
and
cld
mov
lea
fcompl
jne
mov
cmp
pop
repnz
jne
push
push
pop
xchg
push
enter
or
or
cmp
jmp
push
les
in
addb
sub
movsl
push
dec
scas
jae
aad
sbb
push
jecxz
sub
push
shrl
and
sbb
int3
call
xorb
pop
loopne
push
pushf
push
push
jne
mov
pop
xchg
add
xor
push
mov
inc
xchg
pop
call
push
int
cmpl
xchg
les
adc
nop
xchg
arpl
mov
sub
adc
test
data16
and
add
daa
cmp
push
fnstenv
push
mov
push
arpl
stos
movsl
cltd
data16
loopne
mov
add
pop
sub
cmp
inc
cvtdq2ps
mov
mov
lcall
sbb
lods
hlt
iret
lcall
in
lahf
xor
xchg
and
xchg
mov
mov
ds
adc
inc
loopne
pop
adcb
push
lret
adc
inc
dec
cmpsl
loop
std
adcb
sahf
dec
push
pop
push
iret
pop
jg
lds
cmp
rclb
lret
rclb
or
dec
jecxz
in
shlb
mov
push
push
sbb
sahf
sub
dec
jg
sbb
sbb
inc
cmpsl
lods
or
jg
repnz
jg
in
xor
test
add
and
ja
add
jl
push
in
les
movl
dec
add
inc
sub
inc
fnstsw
inc
adc
xchg
jmp
pop
scas
sbb
jnp
adc
add
jl
add
int
xlat
lods
adc
xor
lock
jg
imul
movzwl
mov
fstpl
add
aas
mov
adc
test
adc
push
adc
or
movl
and
je
push
adc
push
pop
jp
adc
insb
mov
push
jne
mov
out
shrl
imul
add
out
jbe
cltd
sub
mov
sar
stos
adc
clc
sub
pop
dec
lods
enter
jne
lock
jecxz
xor
fdivl
pop
push
add
in
sub
mov
cmpsl
sub
sub
push
decl
jnp
mov
mov
or
and
lea
insb
outsb
gs
outsl
sub
inc
jno
or
add
das
outsb
lret
or
outsl
or
dec
xchg
inc
and
in
mov
enter
adc
fsubs
sub
movsb
dec
shlb
xchg
fisubl
or
dec
mov
mov
test
and
lods
test
mov
addb
pushf
mov
pushf
sub
or
add
jb
call
insl
mov
dec
mov
stos
xor
add
jne
sbb
test
inc
dec
and
or
in
jmp
mov
movsl
cltd
stos
stc
pop
rorb
adc
je
jmp
sub
adc
adc
jecxz
or
sub
jne
loope
inc
aaa
add
or
push
js
push
sbb
fnstenv
pop
add
and
je
jl
enter
xor
sub
lock
adcb
sub
neg
stc
cltd
mov
pop
inc
ss
ja
sub
outsl
shlb
into
aas
sbb
push
shlb
pop
out
lea
ljmp
imul
pop
add
mov
push
fdivr
outsl
xor
mov
inc
pop
js
pop
xorl
push
xor
pop
sbb
push
mov
insb
mov
ret
mov
pop
xchg
push
adc
mov
push
add
andb
clc
sub
sbb
sub
xor
frstor
nop
shrl
test
pop
mov
pop
mov
test
loopne
or
test
lock
xchg
cmp
xor
loopne
lods
cmpb
movsl
xor
mov
push
mov
dec
ret
and
add
pusha
push
je
movsl
stc
push
pushf
shl
dec
nop
cmpsl
inc
sub
pop
or
and
and
xchg
inc
imul
cwtl
lret
cmpsl
fsubrs
mov
adc
adc
loope
add
jnp
out
push
xchg
inc
xchg
popa
pusha
sbb
jle
mov
in
jo
lods
lods
outsl
mov
cmp
ficomps
and
imul
cmp
test
cmp
or
adc
ret
pop
add
idivl
jmp
addr16
enter
adc
rorb
jge
and
dec
mov
mov
and
push
inc
icebp
scas
adc
in
cmpsb
lock
je
jae
push
push
mov
pop
push
jae
xor
sbb
test
dec
jnp
jecxz
or
adc
cmp
jge
push
lahf
pop
push
and
inc
xorl
nop
and
xchg
pop
sbb
push
data16
or
call
push
push
mov
jmp
dec
sarb
adc
daa
fildl
pop
sub
xor
loop
outsl
push
cwtl
xchg
daa
loopne
movsb
add
inc
lock
cwtl
push
xor
mov
add
cwtl
jle
or
clc
sub
decb
pop
jmp
add
add
sbb
rcrl
aam
fcomp
dec
cmc
mov
xchg
cmp
inc
stos
les
jne
add
jbe
ja
sbb
add
leave
cmp
movsl
mov
jmp
cmp
in
je
stos
xchg
jmp
adc
mov
mov
inc
push
mov
cwtl
or
iret
lods
in
pop
sbb
mov
arpl
enter
sub
add
inc
in
dec
jns
or
in
ds
popa
jmp
cli
inc
mov
imul
or
int
pop
shrb
in
xchg
test
call
xlat
add
and
pusha
shrl
scas
movsb
enter
orps
or
sbb
sbb
mov
sub
jle
ret
stc
mov
pop
roll
add
mov
push
mov
push
cmpl
or
fwait
ja
je
mov
push
xor
out
fstl
sbb
add
sbb
adc
pop
jg
and
mov
imul
shlb
ds
roll
dec
xchg
jmp
push
xor
push
xchg
dec
shlb
lahf
loope
push
add
dec
rol
push
and
outsl
mov
adc
push
xchg
add
push
or
inc
and
jbe
jl
adcb
and
push
leave
inc
jno
add
xchg
cmpb
aas
pop
adcb
mov
pop
inc
lods
xchg
mov
inc
sbb
test
push
lea
push
push
sbb
ret
sbb
mov
mov
imul
push
negb
cli
dec
test
mov
mov
add
push
inc
xchg
in
add
sub
cs
jmp
lret
lods
cltd
shl
cmp
sub
sbb
stos
mov
das
add
sarb
rorb
add
xor
dec
mov
sbb
xor
cmp
mov
fst
mov
and
imul
add
dec
push
stos
lea
push
mov
sahf
repnz
loope
lcall
add
add
fdivs
in
sbb
xor
lret
push
push
xor
lock
inc
sti
lods
enter
xor
int3
rorb
sbb
int
mov
imul
pop
adc
dec
inc
ret
data16
inc
icebp
mov
cltd
fsubrs
mov
imul
dec
enter
pop
loopne
cmp
int3
adc
xchg
and
add
pop
sbb
or
fdivrl
rcrl
insb
add
cli
or
or
fmul
push
dec
cmp
inc
mov
or
push
testb
mov
int
sub
mov
jmp
fdivs
cmpsl
mov
insl
fnstsw
push
sbb
xlat
out
jne
dec
jmp
dec
in
lret
out
and
ljmp
jns
mov
cmp
xor
stos
push
mov
std
pop
jmp
lahf
or
sub
add
leave
xor
imul
push
or
jecxz
jmp
push
fnstenv
adc
inc
cmp
outsl
cmp
adc
inc
add
mov
gs
cmc
data16
mov
push
popf
or
fmull
es
and
mov
nop
lcall
xchg
mov
xor
lock
mov
test
or
xor
mov
aad
mov
mov
dec
fistl
xor
in
sub
push
dec
xchg
pop
adc
sub
xor
xor
adc
mov
mov
ret
mov
adc
outsl
pop
sub
pop
sbb
push
push
mov
movsb
jns
push
adc
sar
fldenv
jo
sti
push
aam
dec
and
xor
sub
pusha
lcall
push
push
mov
outsl
bound
xchg
xor
xor
hlt
call
xor
mov
mov
mov
pop
jg
mov
pop
dec
fmuls
lea
dec
pop
add
cmpsb
inc
lock
mov
pop
cmp
push
cli
cs
mov
jl
mov
loopne
hlt
hlt
xchg
mov
stc
cmp
jne
push
movsb
lcall
jmp
movsl
rclb
mov
jmp
je
jp
hlt
test
and
stos
bswap
test
pop
xor
pop
out
orb
adc
aam
decb
loope
jne
inc
pop
pop
add
xchg
push
or
insb
jbe
cmp
fdivrl
fcoml
xlat
orb
sbb
cltd
mov
stos
mov
dec
mov
jmp
push
orl
call
inc
xor
dec
pop
ficomps
mov
loopne
jbe
push
add
cmpb
push
xor
std
inc
mov
adc
incb
stc
sub
lea
fstpt
or
test
mov
inc
dec
jne
test
pop
jne
dec
mov
sbb
pop
or
mov
test
fcompl
push
mov
mov
xor
mov
push
out
cs
shl
dec
sbb
xor
push
push
and
imul
dec
call
or
in
push
push
pushl
testl
xor
xor
mov
js
lret
sti
jge
sbb
stc
cwtl
aam
jg
lea
cmp
sbb
inc
jmp
push
xor
lea
popf
sar
add
jge
mov
mov
dec
cld
inc
leave
ret
daa
fs
or
jg
push
mov
push
push
mov
jne
cmp
mov
out
enter
je
fcoms
mov
and
push
lods
jbe
sub
push
mov
insl
and
iret
ss
push
and
mov
mov
xlat
ficoml
adc
shlb
movsb
loopne
pop
push
jmp
or
dec
and
mov
lcall
into
aam
push
xchg
mov
std
or
mov
mov
cmp
jb
neg
pusha
cmpsl
pop
add
rorl
data16
fimull
mov
shl
rorl
jmp
mov
or
rcrb
aaa
mov
push
clc
sub
das
push
les
shlb
enter
clc
push
jb
dec
shrl
xchg
mov
add
add
bswap
push
push
cmc
push
faddl
pop
jl
mov
xchg
mov
mov
arpl
loopne
leave
sub
mov
xchg
pusha
movsl
sub
fs
arpl
psubd
jne
add
ljmp
lock
mov
std
pusha
les
cmp
sub
sbb
fs
mov
mov
push
add
fbld
adcl
fs
rol
inc
mov
xor
sbb
leave
dec
dec
mov
outsb
jbe
jns
adc
mov
jbe
gs
push
addl
sti
jo
inc
jecxz
pop
add
inc
xor
jno
fdivs
js
add
xor
push
subl
pop
mov
fwait
loope
push
push
mov
out
pop
xchg
mov
addb
mov
int3
cli
mov
or
push
aam
add
pushl
inc
aam
pop
xchg
enter
andb
push
mov
in
mov
mov
mov
ret
cltd
adc
dec
pop
out
inc
pusha
lcall
lahf
test
inc
and
inc
jmp
jmp
in
xor
jle
jo
or
sbb
gs
in
inc
js
mov
fcmovnu
mov
loopne
and
sbb
push
xchg
cs
bound
sbb
imul
jnp
scas
push
cmp
ja
mov
pop
dec
lahf
imul
sub
adc
jl
mov
rclb
dec
add
add
push
xchg
jle
inc
adc
or
clc
jge
insl
ljmp
xor
ja
cmp
jbe
jecxz
insb
cmc
addl
xchg
sbb
cwtl
inc
add
mov
sub
sbb
or
or
xchg
jle
repnz
inc
xchg
loope
sub
jg
adc
dec
add
mov
add
lcall
cmpsb
mov
add
cmp
inc
data16
pop
int3
inc
shr
call
push
adcl
fadds
pushfw
dec
mov
ds
sbb
sbb
xchg
add
loopne
sub
sbb
mov
pop
inc
xor
push
inc
jge
fidivl
push
add
ret
lahf
clc
lods
imul
enter
jnp
push
clc
xchg
icebp
movsb
adc
or
jle
das
sbb
test
cs
scas
pushl
push
lea
xor
xor
xor
xor
xor
rcrb
mov
xor
lret
cmp
test
jo
push
sbb
xor
fstp
cwtl
push
pushf
push
adc
or
or
xor
pop
mov
mov
or
mov
inc
push
adc
pop
sub
pop
pop
push
sub
mov
add
mov
push
push
sbb
jecxz
roll
or
ja
pop
mov
loopne
movsl
xor
pop
sub
or
add
pop
imul
add
jne
add
addb
mov
jle
aaa
nop
xchg
push
movl
mov
arpl
cmp
rolb
push
push
or
stc
cld
aaa
clc
or
add
xor
sub
fcomps
rcrb
push
mov
ja
sbb
add
movb
jbe
clc
jb
jle
jmp
and
and
dec
pop
pop
rorl
cmpsb
adc
sti
push
lock
mov
stc
or
das
pop
sub
add
mov
mov
cmp
loopne
add
mul
sub
ds
in
push
clc
es
dec
push
and
mov
mov
mov
mov
or
xlat
xor
add
mov
jnp
dec
push
dec
add
xchg
mov
xchg
add
push
movsb
rolb
mov
sahf
mov
mov
sahf
xlat
jno
jp
in
and
call
jns
in
lock
sarb
out
clc
clc
cld
sub
add
lock
fnstcw
pop
jmp
sbb
in
push
clc
or
mov
mov
ret
pusha
pop
sti
and
adc
push
lea
jl
cld
or
sub
leave
and
std
cld
out
jo
or
popf
insl
neg
adc
and
test
sub
pop
nop
test
test
rcr
add
dec
gs
out
add
sub
ret
out
push
add
nop
dec
dec
adc
cmpsl
imul
ficomps
or
push
xor
pop
jl
out
dec
push
add
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
fiadds
lods
add
lds
push
push
add
pop
prefetchw
lock
cmp
push
sbb
jge
adc
les
xor
push
push
cmp
idivl
sbb
push
pop
mov
push
add
jecxz
cmpsb
testb
adc
cmp
movsb
sbb
jb
push
jge
subl
xlat
test
jl
and
js,pn
jmp
popf
and
jmp
push
addl
cld
push
stc
xchg
mov
inc
icebp
sub
loopne
sbb
push
or
incb
mov
push
xor
add
fmull
stc
movl
sbb
ljmp
inc
lock
mov
fdivr
insl
stos
inc
add
adc
xor
push
shll
inc
imul
push
out
adc
mov
mov
adc
mov
fbld
sub
cmp
loopne
aam
add
inc
push
push
stc
in
daa
clc
inc
push
inc
sbb
jae
insl
sahf
inc
testl
ss
pop
jns
sahf
or
scas
jns
je
pushl
mov
sbb
inc
cwtl
add
push
loopne
xor
test
adc
push
cs
or
les
cmp
hlt
or
sub
sbb
mov
sbb
out
testb
ja
mov
sbb
and
or
es
mov
fildl
push
int3
leave
mov
notl
mov
dec
adc
mov
les
cmp
jne
inc
inc
inc
inc
jmp
fidivs
call
shrl
xchg
sub
out
or
xchg
js
je
and
std
mov
mov
inc
inc
sbbb
sbb
adc
loopne
mov
inc
or
dec
rol
shr
rep
adc
data16
mov
movb
arpl
fisubrs
or
dec
add
push
cmp
testl
mov
dec
pop
jnp
clc
adc
add
adc
aas
test
cmpsl
mov
testb
adc
add
add
inc
add
loopne
jo
outsl
mov
inc
and
xor
mov
cmp
add
jae
or
jae
mov
ret
add
and
jp
mov
sbb
ljmp
mov
mov
adc
adc
xor
mov
imul
andb
pusha
jo
mov
dec
or
shll
ja
mov
and
sub
push
push
inc
aas
add
mov
xor
push
clc
adc
or
jge
xor
mov
fmul
pop
jae
data16
aaa
insl
arpl
add
cld
cmp
xchg
lret
or
push
add
adc
lea
stc
fistl
and
shlb
cmp
or
hlt
idivb
sti
inc
imul
push
and
movq
jl
cmp
jb
cmp
jl
jg
add
mov
jbe
and
fisubl
punpcklbw
cmp
movsl
popf
out
push
or
xor
and
sbb
push
ficomps
sub
jl
clc
incl
das
out
jbe
fcomps
sbb
push
mov
or
hlt
std
lahf
push
bound
test
xchg
je
pop
fsts
jno
mov
xor
add
xlat
fidivs
push
lock
imul
inc
and
sbb
fcoms
stc
add
sbb
xor
push
cltd
test
jbe
in
xchg
adc
sub
mov
sbb
xchg
jmp
sub
push
sub
js
push
push
mov
xor
jge
add
add
push
adc
insl
cmp
arpl
cmp
clc
sub
mov
mov
fisubl
data16
imul
or
call
mov
sbb
sarb
scas
leave
jbe
jl
sahf
push
cltd
push
adc
add
mov
or
lods
int3
cld
jl
dec
jg
jl
out
lea
fisubs
lret
dec
push
push
adc
add
or
decl
or
adc
mov
test
cwtl
stos
adc
xchg
jbe
xchg
rcrb
lret
enter
mov
mov
aaa
cmpsl
add
push
adc
sti
dec
push
push
xchg
dec
cmp
push
jg
cmp
addb
hlt
movd
add
cmp
push
inc
aas
cmp
xor
repnz
push
inc
or
dec
in
mov
sbb
pop
stos
pop
stos
ja
cld
mov
or
cmp
cmp
cmpl
cmp
ljmp
push
inc
loopne
xor
cmp
cli
in
push
mov
in
inc
push
mov
sti
jle
or
call
push
les
out
cmp
mov
inc
dec
cmp
pop
xor
rolb
pushf
mov
adc
mov
or
inc
loopne
mov
or
cmp
lcall
push
inc
addl
mov
lods
push
push
mov
push
pop
movsb
or
sbb
nop
push
push
jp
jl
add
mov
jle
and
dec
lret
mov
bound
cmp
filds
pusha
sub
adc
adc
and
cmp
dec
popa
je
mov
push
loopne
xchg
and
add
ret
jmp
loop
pop
loope
jle
or
jmp
shr
lea
sub
adc
and
inc
push
pusha
jo
ret
lea
mov
jle
push
lods
adc
xor
sub
cmpl
andl
cmp
int3
cmp
and
mov
fldcw
inc
mov
cwtl
into
sub
inc
add
sub
jbe
cmpsb
out
cltd
ds
hlt
rep
ss
neg
enter
ret
lcall
add
sub
imul
mov
stc
xbegin
pushf
clc
in
push
data16
mov
mov
cmp
sbb
pop
add
dec
sbb
inc
jo,pt
test
lcall
mov
popf
pushf
pop
sub
je
push
popf
pop
je
push
fisubs
mov
jle
dec
jne
push
data16
pop
testl
std
cmp
mov
je
and
roll
mov
jle
stos
push
enter
adc
jmp
fdivrp
aas
loop
cs
add
jmp
lock
lea
cmpb
mov
or
in
pushf
adc
or
imul
add
push
add
or
int
je
xor
or
test
xchg
mov
or
dec
dec
inc
loopne
sbb
jne
mov
int3
cs
pop
push
and
inc
negl
add
adc
inc
inc
nop
inc
pop
adc
rorb
jg
mov
fcmove
or
insl
pop
cmp
das
outsl
aam
movsb
jle
cmp
jl
shl
shll
pop
dec
or
xor
sbb
js
sahf
add
mov
mov
sbb
pushl
loope
and
sbb
stos
icebp
flds
add
jmp
gs
fldt
inc
mov
pusha
sub
inc
arpl
pop
or
cmp
cmp
sub
pop
sub
cmp
je
push
and
fsubrl
inc
sbb
xor
push
mov
adc
out
push
sbb
push
cmp
and
sbb
loopne
aas
pop
cmpsb
jle
pushl
aam
pop
mov
jne
mov
mov
xor
test
out
mov
insl
in
lock
push
jl
lock
mov
dec
cmpsb
xor
or
add
add
sbb
or
or
xchg
inc
or
jg
aas
add
dec
and
push
push
arpl
ret
outsb
pushf
sbb
xor
fdivs
into
andb
clc
jno
pop
fs
add
clc
decb
push
pop
jg
jmp
nop
add
or
inc
cmp
jl
pop
pop
mov
leave
lock
test
lret
ret
xlat
leave
xchg
or
fstl
mov
sbb
fcmovnu
loopne
adcb
incl
loopne
repz
int3
les
and
push
push
fdivr
jbe
or
add
call
fmul
mov
loopne
pop
sbb
pop
aaa
loope
fdivs
aaa
lods
push
outsl
cmp
sbb
mov
incl
jbe
sub
in
outsl
and
aam
gs
xchg
arpl
pop
cmp
and
fisttpll
mov
jo
adc
inc
or
sbb
pop
add
push
mov
jle
test
bound
dec
shlb
nop
fsin
repz
in
jbe
push
and
adc
imul
add
xchg
lods
cmpsl
and
inc
cwtl
or
outsb
fmuls
das
inc
lret
adc
inc
orl
cld
adc
test
test
mov
jne
mov
inc
ret
xor
sbb
fldl
outsl
rcrb
sbb
je
or
or
shrb
int
fisubl
cmp
dec
std
sbb
adc
or
test
test
inc
ret
xor
add
pushl
mov
xlat
or
sbb
repnz
push
push
sbb
iret
pop
repnz
outsb
push
push
push
cmpb
test
je
addr16
scas
pop
inc
clc
ja
push
push
cmpl
jne
imul
jl
or
pushf
cmp
or
xor
cmp
push
mov
xor
mov
sbb
jmp
outsl
sub
imul
pop
pusha
mov
orb
int3
add
and
dec
mov
push
dec
popa
jecxz
add
dec
jo
cld
mov
shll
pusha
rclb
out
dec
xchg
ficompl
xchg
adc
repz
mov
enter
push
je
dec
jne
hlt
add
sti
add
and
push
or
sbb
rolb
cmp
and
push
mov
add
fsubrl
and
add
hlt
jne
push
sub
and
push
add
push
icebp
enter
add
inc
cs
arpl
mov
pop
sub
sbb
xchg
jns
inc
roll
popa
popa
or
or
fcmovu
filds
aas
sbb
pop
je
pop
shlb
cmc
and
and
cmpsl
rcrb
int3
push
leave
lcall
push
ss
ja
xor
arpl
xor
in
adc
inc
cmp
jae
push
cmp
jl
mov
mov
mov
inc
sahf
jp
adc
mov
cmpsl
sti
pop
test
lea
testb
jne
clc
push
stc
scas
inc
jno
lock
into
add
roll
lods
mov
jb
pop
pop
pop
push
or
pop
sub
add
je
nop
sbb
mov
push
add
movsl
xlat
pushf
in
dec
or
push
xor
leave
mov
lods
int3
subb
add
mov
repz
push
lret
cmc
cmp
je
or
dec
incl
fisubl
sbbl
or
mov
pop
stc
shll
mov
inc
push
xchg
xlat
jns
pop
pop
out
xlat
jne
jmp
frstpm(287
or
rolb
mov
mov
dec
dec
mov
mov
xchg
pop
loopne
cmpb
jle
sbbb
jg
mov
push
pop
push
cs
inc
add
sub
inc
fadds
sub
out
cmc
adc
dec
aam
std
sti
push
sbb
jno
imul
mov
add
mov
mov
jne
dec
inc
push
lock
jae
rolb
cmp
jl
xor
ret
inc
fiaddl
insb
aam
pop
cmpsb
pop
rcrl
jbe
add
test
sbb
fnstenv
add
dec
jg
adc
orl
call
lret
pop
hlt
add
mov
dec
jne
aad
mov
or
rolb
sbb
sbb
add
ss
push
push
std
loopne
repz
pop
std
jb
aam
jg
inc
xchg
or
pop
test
mov
lock
xchg
bound
ljmp
and
sbb
push
mov
or
lock
adc
lea
cmpl
inc
jp
add
clc
push
cs
stos
mov
add
and
xor
adc
mov
xchg
dec
and
jmp
je
adc
xlat
je
cmp
scas
stc
jg
adc
cmp
jb
testb
xchg
insb
testb
mov
inc
nop
int3
lods
sbb
dec
rcll
push
rcr
lret
inc
movb
clc
out
clc
aas
je
cmp
jne
cmpl
sub
pop
adc
daa
mov
loopne
lods
push
or
flds
push
push
call
call
push
sub
xor
lcall
js
add
xor
pop
fidivl
and
mov
je
push
cmp
adc
xor
jmp
mov
lock
jo
mov
loope
and
loopne
mov
loopne
sbb
jbe
push
lds
sbb
testl
inc
leave
add
or
outsl
pop
cmpsl
lods
cs
out
call
push
jne
and
adc
cwtl
fisttpll
inc
mov
cmc
sbb
push
shrl
jbe
in
outsb
orl
push
lods
cs
inc
jl
sbbl
jge
loop
adc
and
mov
jle
ret
sub
cwtl
and
sbb
sti
repz
ret
add
cld
mov
dec
mov
jo
xchg
inc
or
add
xor
and
or
test
lcall
das
addb
lock
or
fiadds
cld
mov
jl
bound
lods
pop
arpl
loop
sbb
push
mov
popa
jnp
adc
xchg
mov
idivb
push
push
daa
and
or
push
push
movsb
les
sahf
pushl
dec
sbb
mov
mov
inc
loopne
or
xor
push
fildll
push
sarb
dec
add
loop
repnz
mov
cmp
test
cmp
testb
mov
push
in
pop
sbb
cmp
push
in
inc
inc
arpl
pmulhuw
cmp
unpcklps
mov
test
push
or
outsl
icebp
dec
movsb
jno
dec
or
dec
push
scas
and
jbe
and
cmp
cmp
fistl
push
gs
jne
cs
sub
jg
fsubrl
pushf
add
addl
subb
adc
mov
pop
xor
mov
loopne
push
jle
and
pop
inc
cs
or
into
inc
jbe
mov
imul
or
jge
dec
and
daa
test
and
jno
sbb
dec
ja
mov
stos
xchg
mov
push
das
mov
cmp
out
sub
scas
int
out
mov
inc
sub
sbb
xor
shll
jb
add
or
push
xor
pop
sarb
mov
pop
and
ja
std
inc
js
push
mov
mov
ds
adc
dec
fnstenv
add
xchg
lock
adc
cwtl
push
mov
imul
push
in
mov
mov
mov
jl
shrb
mov
add
pop
es
jmp
fists
jle
jne
mov
pop
pop
leave
inc
mov
sub
mov
add
push
cmovle
dec
or
add
aaa
sub
insb
pushf
test
pusha
mov
and
adc
mov
push
push
testl
les
stos
cld
xor
jbe
repz
push
push
das
and
ret
sub
adc
lock
pop
out
or
ret
push
push
push
add
push
lea
idiv
push
jmp
jbe
or
test
mov
jl
sub
push
cmp
lock
lea
mov
mov
push
dec
cmp
pop
and
mov
mov
ret
notl
movsb
jmp
insl
add
ss
mov
cmpl
pop
int3
push
or
push
or
push
or
jle
test
dec
push
mov
adc
xlat
dec
or
or
push
push
pop
pop
fsubr
shlb
push
sub
mov
mov
cmc
das
mov
add
or
lea
push
not
loope
les
sub
scas
mov
or
add
es
add
lret
push
aaa
je
testl
and
mov
lret
iret
and
fimuls
pop
push
sbb
insb
lock
test
pop
mov
sbb
rorb
adc
adc
sbbb
mov
xor
mov
cld
aas
pop
adc
testb
ret
mov
fdivs
mov
shlb
mov
mov
add
outsl
clc
mov
add
xlat
mov
jge
cmp
mov
push
mov
jb
mov
int
cmp
jae
add
add
rcl
xorl
test
inc
fiaddl
add
loopne
xchg
in
mov
test
fs
cmp
xchg
and
lea
or
add
fcomip
and
cmp
and
fdivrs
jp
fs
push
sbb
mull
push
mov
lods
loopne
mov
pop
lods
imulb
xlat
push
mov
pop
mov
js
mov
sbb
xchg
cmpsb
test
add
cmp
popf
loopne
add
je
aaa
lea
jl
sub
mov
jns
jmp
push
outsl
sti
mov
adc
inc
mov
das
jecxz
pushf
mov
jg
out
cmpsl
fwait
cmp
sbb
mov
jle
xchg
cmp
cli
inc
cmp
jle
push
add
call
mov
xor
add
mov
fwait
push
dec
lods
sub
clc
rclb
jl
out
or
sahf
push
enter
fs
mov
inc
mov
xor
lcall
aam
cmp
in
push
xchg
fidivrl
sbb
outsb
daa
mov
cmpb
std
jmp
out
jge
mov
pop
cmp
movsb
or
mov
mov
cmp
inc
mov
test
jle
int3
std
sbb
cmp
je
dec
sub
sbb
clc
jb
icebp
clc
inc
int3
sub
pop
mov
hlt
jg
mov
sub
or
xchg
stos
loopne
pop
lea
mov
icebp
and
mov
mov
pop
sub
jne
mov
outsb
push
adc
pop
clc
rcrb
lock
les
shrb
and
or
xor
xor
lret
push
inc
jge
jp
push
dec
xchg
das
mov
jp
and
or
and
ljmp
mov
push
cmp
jbe
push
cltd
add
jnp
sbb
sbb
or
shr
lds
and
xor
ret
popa
inc
inc
cmp
cmp
loope
cmp
and
inc
cmp
jne
add
mov
call
ljmp
pushf
js
nop
sbb
shl
mov
ret
xchg
inc
jecxz
mov
js
fsubrl
in
out
dec
add
and
inc
dec
lds
rol
clc
aaa
decb
shll
push
outsl
movdqa
int3
shl
push
dec
adc
push
and
loope
fnstsw
dec
push
pop
outsl
inc
or
cmp
shl
pusha
jle
or
aad
stc
repz
jo
mov
subb
sbb
adc
adc
ret
push
jno
shlb
sub
and
or
dec
mov
or
jne
test
push
ds
or
mov
sub
inc
inc
loop
push
push
xchg
mov
mov
mov
sahf
ljmp
out
in
add
sub
lock
in
cld
xor
rep
insb
push
cmp
jne
addl
and
adc
popf
enter
shlb
fildll
sub
push
push
ret
inc
xor
and
out
loopne
dec
rep
mov
test
faddp
hlt
rcll
popa
cltd
movsb
push
adc
inc
jmp
inc
push
icebp
mov
lods
repz
iret
int3
or
pop
jb
dec
xor
xlat
fsubrl
or
push
push
mov
je
pushf
outsl
push
adc
fcoms
mov
in
shlb
sbb
mov
add
inc
inc
xor
mov
aas
sbbb
add
push
sub
mov
sbb
and
cmp
pusha
sbb
xor
sub
lret
dec
loopne
fcoml
out
iret
lret
mov
clc
or
lret
lret
popf
enter
shrb
jmp
test
int
lea
shrl
dec
cmp
enter
dec
cld
adc
cmpsl
in
fdivrs
pop
add
rol
jo
xchg
adc
sbb
fcoms
nop
xor
sub
int
jmp
pop
push
push
sbb
and
xchg
test
mov
pop
jmp
jge
mov
mov
pushf
ret
outsl
incl
inc
cmp
jb
lea
push
adc
push
pop
out
dec
in
mov
mov
add
pop
inc
pop
jle
and
call
xchg
add
push
mov
xor
pop
idivl
sbb
sub
sub
aas
adc
stos
cmp
js
or
pop
sub
xchg
adc
in
in
mov
fisttpl
push
sar
iret
repz
sub
sub
adc
cld
push
or
push
jno
subb
fimuls
test
mov
push
loopne
pop
subb
or
subb
sahf
out
out
xor
cmp
inc
dec
push
pop
add
icebp
jns
ja
pop
lahf
mull
inc
nop
or
adcl
aam
cmp
or
pusha
ja
scas
es
adc
xor
stos
or
push
adc
sbb
fimull
jne
inc
inc
cmp
inc
dec
jne
jo
sub
bound
xorl
ljmp
push
xor
and
mov
sbb
adc
loope
jg
adc
lahf
cmp
ja
xchg
push
mov
jbe
cmp
sbb
popa
push
inc
adc
jne
ds
add
mov
jmp
and
iret
pop
cmp
push
cmp
mov
add
mov
pop
icebp
xlat
mov
xchg
cs
les
mov
les
adc
or
jmp
gs
inc
aaa
or
push
dec
push
xor
icebp
daa
xor
pop
outsl
aam
sub
xchg
shl
and
add
test
add
add
mov
add
sbbl
icebp
lock
ret
add
add
jb
inc
pusha
divb
test
mov
xor
ja
mov
mov
lea
lret
sub
leave
and
std
cld
sub
cmpsl
mov
mov
test
iret
nop
pop
cmp
sub
adc
inc
add
fs
jp
sti
push
pop
fwait
dec
push
ds
jae
mov
dec
je
push
push
cmp
jb
out
nopl
iret
lea
sub
mov
sti
add
xor
mov
dec
sub
rcrl
cmp
mov
mov
add
xor
pop
pusha
fistps
icebp
push
ljmp
sub
pop
out
sbbl
push
pop
pop
ret
andl
push
and
or
daa
mov
adc
or
sbb
dec
push
and
in
lock
pop
icebp
lods
add
jns
mov
sub
cmp
add
aad
test
push
adcl
dec
pop
add
cmp
sub
pop
subl
xor
pop
hlt
test
addr16
enter
push
cmp
je
or
out
add
and
les
mov
idiv
xchg
ret
jmp
adc
inc
mov
or
jbe
cltd
cmc
push
call
divb
inc
push
push
sub
xchg
jne
lea
ds
mov
cmp
inc
cmp
dec
clc
js
or
cmp
adc
lock
jno
gs
vmaxsd
jne
adc
adc
mov
fists
fcomps
std
jle
pushl
push
pop
cmp
ja
pop
jbe
lea
insb
sbb
shl
mov
jbe
add
leave
cmp
jae
insb
iret
dec
jo
or
jb
push
clc
jbe
add
add
sbb
and
dec
dec
test
or
add
jne
sbb
push
pop
int
cs
cmp
pop
mov
jmp
push
xlat
mov
add
sbb
and
hlt
push
push
mov
or
es
mov
stos
mov
arpl
mov
jmp
and
mov
add
arpl
mov
sbb
inc
divl
inc
dec
push
add
or
in
xor
sbb
cmp
mov
dec
jmp
and
rcr
sub
call
inc
adc
roll
adc
or
test
fdivs
data16
mov
enter
add
or
loope
or
lea
stos
add
jnp
pop
sub
mov
mov
inc
dec
jne
lea
sahf
out
mov
call
mov
add
jo
add
outsl
mov
stos
roll
scas
inc
div
mov
notl
and
jbe
lea
fwait
movsl
ja
add
enter
push
in
lea
push
or
inc
mov
inc
in
fdivrs
cmpb
cld
ficoml
push
xlat
hlt
roll
jo
mov
push
or
jns
std
push
cmp
mov
scas
data16
inc
inc
cld
jbe
testb
dec
and
mov
or
int
rorl
mov
lods
jmp
and
je
and
arpl
push
xchg
or
test
add
mov
jmp
mov
mov
leavew
sub
mov
imul
lea
sti
rorb
push
xchg
and
and
mov
and
jmp
push
inc
cmp
jb
shrb
rolb
test
lret
stos
clc
mov
adc
je
cmpl
or
and
pop
and
sbb
fwait
sarb
popf
ss
jb
inc
pusha
sbb
push
or
imul
mov
mov
push
orb
jmp
adc
fstl
push
cmp
cmc
movsl
add
lock
hlt
xor
divl
movl
fidivl
push
popa
insb
jmp
inc
jnp
push
in
jne
sarb
fldt
mov
cmp
les
clc
loope
mov
or
push
push
dec
lock
mov
or
push
push
mov
and
or
sbbl
cmp
cli
and
jmp
xor
jle
jb
or
inc
mov
insb
pusha
es
adc
push
es
push
out
push
and
xor
jp
das
orl
inc
in
imul
inc
jae
cmp
jbe
scas
js
movsb
iret
push
jne
mov
test
sbb
pop
leave
inc
dec
les
lds
xor
mov
aaa
jmp
push
jmp
sub
shr
sbb
inc
scas
cmp
inc
cmp
clc
jbe
add
mov
cmpb
shrl
dec
mov
loopne
cmp
incb
xor
inc
daa
mov
subl
mov
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
and
out
stc
int3
add
divb
xchg
fdivs
jo
mov
aaa
rorl
inc
dec
jne
fisubrl
loope
push
into
cwtl
scas
dec
addb
cmp
cmovge
mov
adc
rolb
dec
loopne
adc
insl
sub
pop
mov
ficoms
jp
loop
push
adc
push
sub
fisttps
pop
rcll
fcmovbe
sub
sahf
sbb
int3
pop
decl
and
pop
jno
in
addl
cmp
fdiv
aaa
pop
or
inc
adc
sbb
mov
int3
cmp
daa
mov
jo
insb
ljmp
xor
std
and
sarb
or
rol
or
clc
add
loopne
or
cmp
sub
jmp
xor
dec
sbb
mov
push
inc
mov
bound
pop
lods
insb
pop
ret
ss
arpl
jmp
rcl
insl
adc
jne
es
xor
or
and
push
cs
rcll
shll
mov
push
std
in
mov
sub
call
lcall
and
imul
push
cmp
jne
sbb
pop
adc
mov
ds
imul
mov
xor
lahf
jno
push
shlb
fidivl
inc
inc
sbb
sub
cmp
and
rcrb
cwtl
rolb
mov
mov
cwtl
mov
jne
push
lea
loop
push
push
cmpl
adc
shlb
cmp
sbb
xchg
adc
dec
subl
ret
jecxz
push
out
xor
xchg
mov
movsl
movsb
push
sbb
add
lea
jnp
test
aaa
cmpl
andl
pop
ret
jo
testl
push
movsb
add
sub
sub
test
mov
xor
divl
mov
mov
push
loope
loop
push
add
xor
pop
in
gs
in
push
jbe
outsb
lock
dec
jle
test
adc
sub
test
xor
test
fsubr
jmp
jmp
popa
addb
sbbl
insb
xchg
sbb
sar
jge
and
gs
adc
loopne
loop
mov
adcb
pushl
xor
sbb
ret
leave
xchg
cltd
sarl
mov
adc
add
add
adc
xor
in
fsub
push
ss
cmp
fs
jecxz
xchg
or
xor
fsubrs
push
imul
mov
pushf
outsl
dec
loope
cmp
mov
push
dec
imul
repz
cmp
je
mov
xor
xchg
and
xchg
loop
xor
aas
and
mov
pop
mov
imul
dec
xor
push
aas
add
xor
out
xor
push
jo
and
js
gs
popa
cmp
jnp
or
loop
mov
cmp
mov
push
imul
add
sub
mov
adc
sub
movsb
mov
loop
push
jo
cmpb
pushl
push
push
aas
rolb
cmp
cmp
jne
insl
idivb
mov
jmp
adc
outsl
jo
in
jbe
fimull
jae
adc
cmp
dec
or
or
or
cs
movsl
test
fcomp
dec
or
popf
mov
aam
test
mov
sbb
test
push
mov
rorl
cmpb
pop
dec
cmp
lds
cmp
pop
xor
xchg
and
or
inc
dec
mov
cmp
inc
jmp
xor
les
xchg
cmp
imul
in
pop
inc
jo
jge
aas
push
adc
sbb
dec
enter
das
in
mov
sbbl
pop
adc
sbb
jle
push
inc
inc
cmpsb
sarb
mov
adc
lea
sub
notl
push
fiadds
insl
adc
pop
sbb
and
and
lock
cmc
or
inc
hlt
or
push
cltd
pop
idiv
mov
out
addb
insb
pop
cmp
mov
dec
and
add
ret
sub
sub
or
sti
insb
pop
sub
lea
mov
inc
xlat
xchg
xor
ret
cltd
imull
sub
mov
lea
cltd
es
mov
jp
imul
lea
in
fs
dec
js
ja
cli
pop
sub
add
sbb
lea
jmp
add
lods
dec
adc
add
or
pop
sbb
jo
andb
xor
lock
sub
jmp
icebp
xchg
out
shll
sbb
mov
pop
adc
outsl
sarl
add
imul
dec
and
and
leave
call
pusha
adc
add
xor
push
jmp
mov
cs
push
filds
or
out
jbe
mov
add
jmp
stos
decl
add
pushl
cmp
jl
sub
incl
sub
xor
hlt
cwtl
mov
push
add
aas
and
push
mov
add
rorb
adc
cs
popf
mov
xor
pop
push
idivb
mov
or
setb
dec
idivl
mov
mov
cmp
notb
jmp
pop
push
push
push
push
mov
xor
inc
cmp
push
dec
dec
cmp
mov
cmp
ja
xor
push
mov
cli
idivl
cli
imul
hlt
ret
popf
or
jge
push
pop
mov
pop
int3
movsl
xorb
movsb
ja
pop
push
push
jnp
outsl
jnp
jecxz
loop
push
das
stos
dec
outsl
fsubs
mov
sbb
push
cmp
jl
cmp
jg
push
jle
jge
adc
mov
or
and
repnz
jle
push
daa
cwtl
or
jb
inc
insb
sub
aad
jle
pop
jmp
jne
test
push
or
add
je
sbb
inc
add
xor
js
xchg
xchg
and
cmp
mov
and
sbb
shll
daa
scas
test
pop
push
push
int3
push
add
mov
aaa
dec
cmp
shrb
rolb
xor
push
cmp
rcrb
test
or
test
inc
je
mov
or
pushf
mov
inc
pop
adc
jl
inc
push
bnd
aas
dec
or
jg
push
jmp
es
xchg
ja
push
push
push
push
push
jmp
add
lea
push
and
push
push
sub
cmp
lret
add
movsb
sub
adc
jo
lock
push
lea
inc
cltd
push
insb
in
call
bound
sbb
push
mov
and
xor
push
mov
jg
jb
inc
mov
or
jns
jbe
ret
stc
dec
icebp
or
inc
mov
out
xchg
pop
fbld
add
fs
fsubr
outsl
jmp
ss
or
mov
jmp
jb
adc
adc
add
sbb
xor
sub
imul
mov
ret
ja
cmp
jge
ss
sbb
jl
fnstcw
decl
dec
adc
add
test
call
sub
pushl
mov
xor
inc
mov
test
ljmp
push
sbb
lock
call
mov
jle
push
dec
inc
inc
fldcw
jbe
cmpsb
push
sbb
mov
push
out
pop
das
jp
add
sbb
dec
fstp
cmpsb
sbb
or
mov
pusha
out
sbb
pop
mov
cs
pusha
pop
call
jge
push
push
add
or
jge
inc
out
fnstcw
neg
sbb
mov
sbb
sbb
add
jne,pn
sbb
jg
pop
xor
xor
pop
inc
push
shr
inc
cld
out
dec
ja
xor
jmp
ljmp
divb
lods
lock
xor
add
jb
cmp
or
cmp
dec
cwtl
add
jae
out
dec
pop
fsub
sbb
mov
inc
stos
sbb
push
bound
and
movsl
jns
sarb
adc
pop
pop
out
pop
pop
push
or
or
loopne
ret
jns
jmp
popa
cmp
loopne
orb
sbb
fnstcw
jbe
sub
adc
push
cmpl
rolb
outsb
and
les
ret
jl
mov
or
aas
cld
cmp
cmp
or
push
shlb
mov
rcr
roll
xchg
out
repz
adcl
mov
iret
sub
sahf
adc
mov
stos
xorl
xor
inc
add
mov
xor
sub
js
mov
pop
inc
mov
mov
jmp
ja
ficomps
inc
sub
lock
nop
adc
idiv
shrb
sti
mov
fistl
sbb
add
repz
je
push
imul
cmpsb
inc
js
push
lock
push
jl
addb
mov
jb
cmc
pop
mov
clc
into
push
test
inc
sbb
call
in
mov
nop
aam
in
sub
sbb
pop
clc
sub
add
fldcw
movsb
stos
sbbl
iret
loopne
aam
inc
push
clc
movsl
int
sub
and
mov
bound
inc
pop
or
scas
or
jb
add
sbb
fmull
sbb
xor
pop
cmp
inc
cmp
dec
dec
imul
sbb
adc
adc
test
push
cli
add
in
sub
fsubrl
in
sub
std
incb
jb
mov
je
sbb
ss
push
jp
mov
call
test
xor
inc
loopne
cltd
je
cmpsb
cmpsb
fcompl
ret
mov
leave
pop
movsb
dec
mov
and
lock
movsb
and
popl
mov
ja
mov
movsl
sbb
subl
mov
xchg
or
sub
in
jns
dec
add
mov
sbb
sbb
mov
inc
xchg
and
sbb
or
aad
inc
push
jecxz
mov
lcall
cs
xchg
or
std
clc
data16
rolb
sbb
or
xorl
sub
add
cmp
cmpsb
or
sbb
sti
cld
clc
push
ret
adc
call
push
mov
jp
push
push
aad
mov
or
stc
sub
movb
fiaddl
shl
es
pop
and
loop
cmp
pop
inc
cmp
cmp
jl
add
push
mov
hlt
jb
int3
mov
enter
inc
inc
and
adc
test
inc
dec
push
cld
inc
sub
push
imul
dec
sti
adc
adc
add
mov
inc
jo
and
push
mov
add
idivb
and
sti
in
pop
dec
dec
lar
ljmp
lods
push
adc
add
pop
pop
test
out
pop
pop
mov
push
push
cmp
das
orl
aaa
xchg
push
cmp
mov
imul
fisttpll
xor
imul
push
cmp
jae
push
add
xchg
loope
adc
fisubrl
mov
jl
rcll
test
fmuls
or
out
dec
lea
cwtl
mov
push
les
call
fldt
or
mov
add
cmp
jge
imul
mov
mov
cmp
xor
arpl
popa
mov
add
push
fs
out
mov
sbbl
pop
andl
cmp
xchg
pop
sbb
lret
cmp
cmp
sub
pop
mov
bound
dec
jbe
dec
rcrl
inc
or
mov
jmp
leave
push
sbb
pusha
mov
mov
cmp
inc
sub
xor
and
sbb
ja
xchg
loopne
enter
fidivl
leave
adc
push
add
enter
mov
test
inc
jmp
push
fmull
cmp
mov
enter
mov
mov
xor
in
loopne
sbb
inc
movsb
cmp
scas
dec
cltd
aad
inc
sbb
loopne
clc
ljmp
pusha
fs
fisubrs
mov
push
jmp
popa
mov
inc
orb
xor
push
pop
dec
arpl
loopne
pop
sbb
iret
out
xor
push
add
add
adc
add
ret
add
pop
loopne
addr16
dec
decl
and
jne
mov
mov
out
mov
and
movl
adc
push
add
adc
xor
push
fdivs
aam
mov
push
add
sub
incl
cld
or
mov
jo
mov
sahf
ret
push
inc
mov
sbb
incl
mov
dec
rcr
add
mov
and
or
xchg
add
inc
push
pop
pushf
mov
ja
out
adc
push
ss
jmp
xor
js
pusha
add
add
sub
lods
dec
inc
inc
inc
pop
je
pusha
and
sub
push
or
sarb
cmpb
nop
shll
lock
push
mov
loopne
jmp
pop
cld
pop
divps
insb
sbb
icebp
xchg
xchg
or
xor
pop
add
je
sarb
sub
pop
and
or
sarl
out
mov
xor
and
jae
fiadds
pop
add
adc
push
out
push
push
into
push
addl
pop
add
adcl
sbb
fists
sbb
mov
pop
sub
sbb
push
and
cli
mov
hlt
addb
stos
cmp
movsb
aas
jae
aam
pushl
jno
cld
das
dec
shl
lea
cmp
jb
loope
cmp
add
push
jmp
dec
mov
loope
cmc
push
mov
call
add
je
cmp
jne
xchg
adc
cs
cmp
and
dec
or
lock
mov
jmp
adc
and
pcmpeqw
inc
inc
mov
cmp
je
inc
inc
or
jne
add
fisubl
leave
inc
push
sar
inc
push
push
adc
inc
and
inc
int3
sub
xchg
cmp
addb
fs
xchg
add
add
cmp
cld
pushf
pusha
pop
ret
jmp
jbe
jo
sbb
and
sbb
xchg
fisubl
inc
aam
mov
imulb
out
int
push
faddl
bound
je
fstl
xor
icebp
invd
mov
push
push
or
pushf
mov
outsb
and
daa
call
clc
pop
xlat
loop
orb
mov
fbstp
pop
xorb
es
or
or
and
push
and
cmp
daa
cmpsb
mov
inc
bound
pop
in
js
into
mov
jmp
shlb
xor
cmp
mov
mov
pusha
jo
sbb
sarb
pop
sbb
jbe
clc
orl
add
mov
sub
jg
mov
add
adc
cmp
jb
ja
test
mov
cmp
mov
adc
insl
mov
push
xor
ret
sub
push
mov
fmull
sbb
sub
add
test
add
rcrb
shl
add
pusha
mov
in
hlt
inc
add
mov
jle
mov
cld
jo
leave
fiaddl
adc
sti
hlt
inc
adcl
jl
je
or
repz
pop
test
outsl
in
push
orb
jmp
xchg
adcl
inc
ret
ret
dec
mov
cmpsb
pop
roll
in
xchg
sarl
aaa
xor
ds
loopne
adc
jmp
lret
or
je
and
pop
loopne
xor
add
mov
jmp
scas
and
mov
repz
mov
loopne
call
or
jae
mov
jmp
jae
jo
sahf
jb
testb
and
dec
cmp
cmp
add
jbe
call
outsl
adc
sub
icebp
and
outsb
inc
mov
mov
mov
lcall
daa
adc
cld
dec
shrb
adc
xor
jnp
fwait
hlt
fidivrl
pop
push
cmp
jbe
push
lock
push
scas
and
ret
xchg
std
xor
mov
add
xor
push
adc
or
cmpsb
imulb
lock
dec
shr
mov
or
cmp
sbbb
fwait
leave
mov
cld
dec
xchg
insl
loop
rolb
dec
jge
adc
int3
push
outsb
and
pop
ror
jg
sbbb
into
js
cltd
and
push
add
add
xor
push
dec
mov
leave
into
arpl
jb
xor
cmp
cltd
mov
push
sbb
cmp
or
pop
pusha
loop
xor
pop
or
jmp
rorl
inc
lock
pop
dec
or
lock
loopne
xchg
mov
push
or
mov
or
lods
lret
test
mov
and
lods
sar
inc
add
push
push
mov
mov
andb
not
mov
xchg
push
inc
xchg
and
lock
jge
cmove
dec
lock
sub
mov
dec
xor
and
mov
dec
mov
or
or
mov
addr16
std
not
push
rcrl
loopne
lds
sub
mov
sbb
cld
in
out
fwait
je
mov
sbb
clc
je
out
gs
in
pushf
popl
pop
repz
mov
insl
push
mov
add
adc
add
or
bound
add
sbb
lea
std
xor
rcl
in
js
push
scas
mov
sarl
jne
ret
inc
or
lea
popa
cmp
sub
sub
and
into
mov
ret
inc
out
jmp
push
jae
pop
insb
imul
scas
push
hlt
insl
inc
jmp
inc
lods
cmp
mov
cmc
or
jl
xlat
push
clc
ss
or
mov
or
arpl
inc
cmp
jl
or
and
in
icebp
sarl
sbb
es
mov
ficoms
cmpl
fcoms
shll
or
scas
add
imul
push
jne
push
aas
out
sub
outsb
add
pop
push
cmp
mov
push
imul
arpl
pop
jl
mov
xchg
les
mov
sbb
xchg
adc
mov
pop
mov
or
jne
sbb
push
jp
adc
push
imul
xchg
mov
or
popl
dec
cmpsb
pop
orb
leave
or
inc
mov
dec
in
mov
adc
lds
xorb
xor
arpl
mov
and
scas
xor
lods
daa
cmp
push
cltd
daa
lock
lea
icebp
adc
mov
push
lret
mov
mov
cwtl
add
mov
ret
xchg
jae
and
sbb
je
or
xor
jne
mov
xchg
mov
push
mov
mov
aaa
or
dec
or
push
adc
nop
test
sub
jo
jne
add
add
mov
mov
repz
mov
push
xor
call
sbb
inc
mov
stc
cmp
adc
mov
movsl
es
push
popa
inc
pop
ds
adc
cmpsl
inc
fists
cmp
shll
addr16
jne
xor
mov
outsb
test
cmpb
add
jno
push
dec
das
jmp
dec
or
test
jbe
and
mov
aaa
ljmp
shlb
add
xchg
fprem
sub
jb
in
lahf
or
or
addb
ja
or
mov
cs
pop
push
xor
cmp
and
call
cmp
shrb
and
dec
lock
stos
xchg
push
mov
sarl
adc
cmpl
push
push
js
pop
xchg
push
fs
ret
lret
mov
xor
or
sub
sbb
ds
jmp
cmp
mov
sub
in
lea
or
fisttpll
push
data16
inc
gs
xchg
movsb
jmp
popl
push
divl
pop
or
sbb
jo
and
push
pop
sub
test
ja
dec
xor
add
sub
pop
je
out
push
loop
mov
aas
popf
add
push
rcrl
ljmp
roll
leave
xor
xchg
sahf
shl
pop
loope
cmp
push
adcl
push
push
and
push
push
or
jecxz
or
imul
outsb
les
jmp
lret
or
push
xor
mov
mov
adc
bound
adc
outsl
lret
mov
adc
mov
je
cld
shr
mov
imul
std
jp
add
mov
gs
sbb
stos
shl
pop
mov
xor
sbb
mov
clc
push
cld
clc
scas
outsl
dec
rclb
mov
test
je
cli
add
out
xchg
out
stos
sub
mov
cmp
jne
fsubrs
test
mov
je
shr
lea
add
shll
pop
mov
mov
and
jmp
lea
xor
repnz
pop
add
push
dec
mov
roll
add
pop
and
pusha
ljmp
and
jmp
adc
pop
pop
clc
and
into
outsb
push
xor
sti
add
in
pop
shlb
lret
cmp
jbe
mov
mov
imul
aas
sarl
cmp
je
fwait
lret
cmpsb
loopne
jno
jno
mov
fs
not
and
jne
mov
xor
sbb
pop
xor
push
jle
pop
dec
pusha
mov
xor
dec
pop
add
and
sub
jne
xor
or
out
outsl
adc
lock
mov
out
imul
pop
dec
or
adc
negl
ss
mov
mov
inc
mov
mov
xchg
and
push
xchg
lods
push
loopne
sti
call
inc
dec
or
jmp
repnz
in
lock
adc
fs
ljmp
push
mov
mov
xor
insb
decl
icebp
nop
add
int
rolb
and
call
cmp
shl
add
mov
jp
adc
aas
gs
cmc
mov
sbb
movsb
mov
lea
decb
adc
inc
outsb
ljmp
and
daa
shll
out
and
and
sarb
insb
hlt
mov
adc
push
lea
and
jbe
insb
jo
loopne
ret
push
loopne
add
insl
or
mov
or
mov
push
out
daa
lock
imul
lock
rclb
pop
test
add
push
add
mov
or
out
push
sarl
add
xchg
cmp
negb
les
sbb
ret
imul
push
mov
mov
and
adc
ret
adc
cmp
xor
int
jmp
orl
mov
orb
mov
and
xchg
push
mov
add
loope
je
movb
inc
dec
stc
ljmp
rorb
incb
pop
mov
add
inc
dec
jne
repz
push
inc
cmp
adc
add
sub
sbb
or
add
xchg
jno
test
add
push
cli
ja
clc
push
inc
ffreep
sub
shr
inc
orl
orl
in
lea
push
out
inc
inc
fdivl
lock
call
dec
jne
push
push
gs
add
inc
mov
sarl
fs
inc
mov
lock
inc
mov
lock
scas
ds
pop
push
mov
jne
or
lds
notl
add
shlb
int3
les
adc
repz
adc
inc
lcall
pop
shr
fisttpll
sub
and
icebp
cs
jnp
stos
mov
and
jbe
mov
adc
clc
cmp
ret
int3
inc
jp
add
pop
cmp
hlt
sar
add
xchg
push
mov
int3
push
pop
inc
lcall
inc
stc
xchg
add
iret
clc
rolb
rcr
sub
pop
add
cmp
fimuls
sub
nop
dec
or
xchg
into
add
xchg
push
add
mov
int3
pop
adc
xor
pusha
push
fstpl
mov
push
lea
jbe
pop
jg
imul
pop
push
jns
cmpsb
pop
push
pop
adc
add
adc
scas
mov
pop
js
and
and
js
cmp
sub
push
mov
push
xor
add
cld
mov
and
inc
and
clc
jl
cmpsb
add
or
loop
pop
sub
pop
xor
push
sar
dec
lock
pusha
push
jp
movsb
pop
not
push
or
jo
inc
cwtl
xor
cmp
pusha
sbb
iret
dec
je
fisttps
add
push
fnstenv
ja
ja
dec
xor
pop
ficoms
add
mov
loope
sbb
arpl
or
mov
and
mov
jbe
mov
inc
lods
push
cmp
lods
push
mov
mov
dec
in
rdmsr
cmp
mov
sbb
sub
jb
add
adc
jp
insb
and
cmp
and
add
cmp
push
push
push
cmc
mov
call
out
adc
jmp
in
rclb
stos
dec
or
out
fldcw
push
nop
cmp
and
sti
mov
push
or
cmp
jb
push
rcrl
sbb
clc
jae
fnstenv
jmp
sub
daa
iret
xor
lock
aaa
fsubrl
lock
lock
fsubs
xchg
ret
or
sub
pop
lcall
mov
cmp
je
mov
ficompl
mov
cmp
lock
and
mov
dec
cmp
dec
xor
pusha
or
data16
mov
xor
test
jmp
dec
mov
and
jne
mov
push
pop
loop
fisubrs
inc
test
inc
push
pushf
mov
sub
jbe
out
icebp
sbb
sahf
push
dec
add
sbb
lcall
pushf
stos
ss
push
dec
cmp
into
in
and
mov
decb
jne
cmpsw
pop
sbb
repnz
jmp
jp
mov
inc
cltd
adc
jne
add
push
and
dec
xlat
into
xor
dec
jp
call
mov
mov
or
pop
fsubrs
xor
sub
jge
roll
jle
push
rcll
or
dec
cld
or
xor
out
push
in
pop
ficoml
mov
out
or
sub
popf
stos
mov
call
pop
addr16
add
scas
and
sbb
mov
lea
pop
or
ds
cmp
push
pop
call
andl
add
add
dec
mov
push
cmp
pop
rorb
filds
push
inc
adc
sbb
adc
push
sub
cmp
mov
inc
andl
and
data16
cwtl
add
pusha
xor
pushf
push
sub
add
or
dec
pop
imull
cmpsl
pop
and
pop
mov
out
pop
ret
sbb
jae
rolb
sub
adc
shll
ret
std
add
mov
xchg
add
xor
jge
push
js
sub
pop
lock
pop
jb
mov
leave
mov
dec
inc
pop
mov
jb
xor
sub
dec
orl
and
movsb
ss
jb
xchg
lret
ret
outsl
sub
or
push
nop
out
xchg
xchg
sbb
jae
fnsave
push
sub
mov
inc
adc
and
lods
loopne
pop
push
sbb
xchg
xor
jbe
jbe
add
sub
aas
mov
jnp
push
adc
xor
push
ret
stos
dec
loope
push
or
inc
and
add
mov
lcall
mov
inc
je
inc
or
push
loopne
punpckhdq
inc
adc
int3
cmp
push
inc
cmp
adc
or
cmp
jbe
dec
movsb
adc
fistl
mov
adc
or
movsb
mov
cs
rorl
mov
or
add
dec
jmp
push
shlb
xchg
adc
pusha
mov
outsb
cmc
icebp
cmp
push
xor
mov
push
dec
int3
and
mov
cmp
push
out
xor
movl
dec
adc
cmc
mov
test
cmp
pop
inc
cmp
jne
or
lea
push
adc
dec
fdivrs
jmp
popf
sbb
pop
je
lods
mov
sbb
int3
add
sbb
xchg
push
rolb
xor
pop
pop
sub
adc
sbb
pop
add
cmpb
xorb
mov
mov
inc
push
push
pop
div
mov
aas
or
sub
add
pop
mov
sbb
test
pusha
ficoms
or
pusha
cwtl
loope
push
fiadds
xchg
dec
imul
hlt
hlt
mov
stos
mov
xor
xlat
cltd
shl
pop
jecxz
daa
and
sbb
pop
sub
call
cmc
in
imul
sub
adc
cmpsl
xchg
pusha
fildl
inc
jge
dec
dec
push
cmp
push
hlt
cmp
je
movl
sbb
sbb
mov
inc
or
fiaddl
movl
add
jmp
adc
push
movb
out
jle
div
pop
jbe
test
inc
data16
xor
lock
arpl
pop
sbbl
in
push
imul
sti
outsb
cmp
shlb
mov
adc
addr16
xorb
push
mov
loope
mov
mov
xchg
push
gs
xor
cmpl
enter
shrl
cmp
je
movl
sbb
call
fsubs
lds
sbb
jecxz
add
dec
add
and
lock
ds
inc
and
or
pop
pop
sub
push
ficomps
mulb
jl
xor
ljmp
andl
orl
cmp
into
cli
adc
daa
lea
push
cmpsb
adc
dec
pop
pop
pop
adc
sbb
bound
mov
mov
arpl
addr16
push
xor
jmp
hlt
aad
xor
cmp
aam
push
xlat
test
movsb
ljmp
ljmp
mov
sbb
jg
add
add
add
test
sbb
adc
sbb
stos
stos
lods
lcall
ja
ja
mov
push
divb
aas
push
stos
jae
mov
fidivrs
mov
rcrb
push
sbb
add
js
lret
jmp
sbb
pop
sbb
mov
mov
cmp
mov
cltd
inc
push
mov
push
inc
add
push
and
pop
or
adc
lcall
jns
jno
and
data16
loope
lods
movsb
sbb
in
mov
adc
in
movsb
push
or
adc
fldt
sbb
sbb
xchg
xchg
xchg
sub
xor
movsb
xchg
xchg
sbb
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
in
pop
pop
inc
aad
adc
dec
xor
and
mov
xchg
cwtl
pushf
shlb
dec
mov
jno
mov
mov
push
cmp
adc
add
hlt
mov
je
clc
and
dec
dec
imul
data16
cld
adc
push
add
xor
int
or
out
push
dec
and
adc
ljmp
pop
or
pusha
stos
insb
pop
ret
jmp
mov
push
jo
add
add
ret
inc
cld
fwait
xchg
cmp
sarb
sbb
dec
jne
adc
jg
out
mov
mov
jle
sbb
and
and
jo
das
add
test
or
add
and
icebp
mov
push
jp,pn
push
xor
adc
jae
mov
dec
leave
adc
adcb
enter
cmp
mov
jne
aad
cmc
loopne
or
jmp
mov
rcll
testb
jne
mov
aam
gs
cmp
or
or
out
jns
rcr
mov
outsl
adc
bound
push
mov
pop
addl
cwtl
or
add
mov
nop
or
lea
repz
mov
mov
subb
mov
arpl
cmp
nop
fdivp
jge
mov
dec
inc
pop
ret
je
orb
loop
adc
imul
jbe
xchg
cmp
push
cmpb
jne
xchg
addr16
and
mov
or
daa
test
push
push
lea
jmp
movb
cwtl
push
loopne
aam
jb
add
fdivr
sub
ss
rolb
clc
aam
fcoms
fsub
fcmovnb
jle
dec
or
add
adc
mov
add
rclb
xorb
dec
or
add
adc
pushl
or
ret
mov
int
jmp
pushf
sti
or
aaa
mov
dec
insb
add
shll
jecxz
fdivrs
jne
lret
lock
loopne
mov
push
mov
inc
mov
ja
mov
mov
outsl
fbstp
mov
xchg
sub
je
or
je
dec
test
aaa
mov
cmp
push
mov
jmp
loopne
lcall
pop
pop
das
pusha
inc
ret
pop
xor
sbb
inc
popf
je
push
in
rolb
jo
cld
scas
add
cltd
xor
mov
dec
aaa
in
jnp
jl
mov
jne,pn
sbb
inc
cs
andb
lea
es
fcoml
mov
sbb
add
cmp
jge
or
and
mov
adc
cmp
outsl
rorb
fcomps
push
push
dec
sub
add
mov
insb
int3
and
inc
addb
xor
sub
arpl
sub
cmp
hlt
inc
push
test
clc
cmp
mov
or
daa
jmp
add
sub
adcl
pop
pop
test
push
int3
push
sbb
fdivl
sbb
lret
mov
ret
xchg
sub
push
adc
push
add
stos
ss
sbb
mov
add
add
jns
ret
sti
xchg
add
mov
addr16
or
out
or
cmp
lods
xor
daa
stos
sbb
sub
sub
sbb
dec
sbb
push
or
add
inc
insb
sub
push
div
jne
orl
and
mov
or
fldenv
cltd
std
adc
add
adc
cld
aas
repnz
adc
inc
rorl
jb
pop
dec
into
jl
xorb
or
adc
inc
call
sub
xchg
dec
mov
das
mov
pusha
movsl
mov
cs
sub
lock
inc
imul
mov
jecxz
or
and
cmp
push
jo
rolb
add
add
jb
sbb
add
mov
pop
xor
jbe
push
pop
les
leave
fidivrl
in
nop
ss
or
jbe
inc
out
jae
mov
pop
pusha
dec
xor
mov
and
addr16
insl
cld
ja
orl
dec
sbb
mov
cmp
mov
mov
fistpll
or
and
push
std
inc
sbbl
mov
dec
cmp
out
xor
adc
jge
xchg
dec
cmc
and
pop
mov
test
hlt
das
int3
adc
or
dec
push
sbb
push
cmp
idivl
rcl
push
hlt
sub
inc
stos
or
or
and
or
cli
xchg
pop
pop
fdivrl
sbb
mov
inc
arpl
jmp
loope
int
or
push
scas
xor
sti
inc
daa
mov
dec
pop
jecxz
ja
add
aam
out
xor
sbb
lds
dec
es
hlt
or
push
pop
adc
mov
adc
cltd
adc
add
test
jne
xorl
push
ljmp
push
dec
push
mov
pop
ja
sub
mov
cmp
insb
jae
in
je
pop
ja
dec
je
dec
add
jno
add
and
inc
repnz
cmp
lds
lock
out
add
dec
jle
mov
lea
cli
mov
lret
jbe
mov
ds
dec
test
or
inc
pop
mov
xchg
sbb
mov
cmpsb
dec
out
pop
fwait
mov
addl
adc
repz
push
ret
icebp
cwtl
adc
cmp
inc
mov
fwait
push
mov
inc
cli
pusha
sbb
rolb
in
xchg
or
stos
pushl
or
rol
fidivs
dec
adc
in
and
push
sbb
imul
jo
add
cs
cmp
or
push
add
add
pop
inc
push
inc
inc
out
pop
xchg
inc
pop
fiadds
dec
and
inc
add
dec
call
dec
call
inc
dec
fs
hlt
jle
cmp
ss
popf
out
stc
je
sub
add
or
cmc
add
push
fldenv
xchg
nop
in
sbb
or
cli
je
lea
into
in
push
push
dec
xlat
shll
jg
int3
sbb
rcrl
inc
adc
test
ficompl
test
inc
add
add
je
push
pushf
mov
rcrb
push
sub
and
jl
aad
loopne
test
or
add
or
inc
add
es
dec
and
fisttps
sub
jmp
test
or
out
add
cwtl
fsubs
sub
pop
cmp
xchg
or
jno
pop
or
and
lea
out
pop
adc
pop
sub
aad
mov
cs
mov
cwtl
jg
jns
int3
je
add
lret
mov
push
add
push
xor
adc
sbb
je
imul
dec
mov
lock
lods
jmp
and
pop
lret
pop
loopne
shlb
nop
push
js
and
int
lock
adc
outsb
inc
rcll
adc
mov
adcl
addr16
adc
daa
incl
leave
out
lea
push
cmpsb
jle
cmpl
or
push
ljmp
jle
pop
insl
inc
out
xchg
aas
xor
loopne
sub
incl
sbb
cmp
pop
fstpl
add
pop
fisttps
dec
ret
test
and
push
cmp
sub
adc
xor
pop
cmp
je
cmp
mov
adc
or
adc
int
inc
dec
add
add
lds
push
cltd
pop
xor
mov
dec
test
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
repnz
add
cmp
jae
enter
insl
jb
movsb
cmp
jbe
pop
and
and
aaa
or
adc
fldcw
add
add
adc
pushl
mov
sbb
xchg
push
sbb
xor
add
dec
imul
xlat
jne
cwtl
into
insl
jge
mov
or
fdivrs
adc
push
cmp
jns
aas
les
dec
xchg
hlt
mov
sbb
aam
add
ss
js
sub
pop
movb
add
adcl
mov
std
mov
and
shrb
or
jl
iret
lods
movsb
adc
es
xchg
jo
sub
es
sbb
popf
push
push
fimull
push
push
cwtl
mov
add
xor
mov
dec
cmp
mov
movsb
jb
dec
test
mov
inc
iret
jge
je
adc
push
in
push
pop
leave
jne
shll
jo
cld
fdiv
inc
jmp
push
xlat
add
push
iret
or
add
sbb
pop
add
imul
xchg
push
gs
or
mov
in
and
add
dec
fldl
loopne
enter
aad
test
xor
fmull
or
gs
jg
cwtl
sti
adc
jg
mov
mov
movb
je
aaa
int
lcall
add
inc
inc
jo
xor
add
push
push
pop
or
rcrb
or
push
pop
pushf
outsl
pop
pop
mov
insb
add
stc
cli
or
add
lock
cli
ror
fists
or
je
xchg
scas
das
cmc
stos
ds
mov
mov
into
es
push
pop
subb
clc
out
mov
push
cmp
ja
add
cmp
adc
cmp
jne
jae
pop
add
adc
cmc
jnp
fidivrl
dec
inc
leave
icebp
out
adc
addb
ja
add
popa
mov
jne
cmp
or
clc
or
or
stc
cmc
insb
in
movsb
push
in
int
mov
and
stc
test
inc
gs
test
test
nop
lahf
or
pop
dec
addb
test
cmc
dec
and
lea
adc
pop
mov
imul
mov
pop
fdivl
cmp
and
mov
out
or
cmp
add
adc
add
es
jg
mov
xchg
cmp
jle
add
add
sub
adc
outsl
push
inc
xorl
hlt
mov
and
stc
stc
add
push
icebp
xor
enter
mov
dec
push
hlt
dec
sbb
mov
mull
jb
jne
inc
mov
dec
insl
adc
lcall
jmp
push
push
lock
sbb
or
pop
dec
mov
fistpll
out
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
mov
call
jle
mov
inc
lds
arpl
cmp
or
jbe
or
loope
into
adc
adc
or
inc
lods
adc
dec
aam
test
inc
or
mov
adc
pop
test
repz
mov
movl
mov
rorl
cmp
jno
lods
test
push
loopne
push
in
mov
jmp
cmpsb
xchg
mov
cmpl
inc
repnz
pop
test
out
mov
pop
push
xor
mov
loope
test
pushf
loope
leave
push
loopne
push
loopne
pop
inc
test
in
mov
leave
and
shr
add
adc
lret
outsl
jp
fsubl
hlt
daa
fsubs
sbb
xchg
inc
sbb
push
es
clc
jmp
aam
mov
lea
adc
fcmove
push
pusha
push
pop
mov
cltd
enter
dec
inc
fisubl
and
pusha
xor
pop
adc
jmp
jae
roll
test
inc
jmp
inc
adc
push
push
push
js
aas
mov
or
sub
jge
push
push
ret
test
imul
sbb
xlat
aaa
imul
add
mov
or
aam
fsts
mov
pop
sub
fsubrs
mov
jmp
fsts
xor
mov
inc
fwait
mov
or
or
shrl
cld
add
loope
lods
lock
dec
mov
jmp
xor
lods
lahf
push
cmp
push
sub
test
adc
pop
ret
sbb
sbb
mov
mov
fisubl
sbb
mov
in
push
inc
pop
pusha
inc
imul
clc
mov
test
add
adc
and
pusha
jns
cmp
dec
sbb
dec
shll
incb
fisttps
loop
test
sbb
enter
xor
sahf
cmc
sub
mov
cs
test
jb
jl
jb
lea
loop
jne
ss
int3
or
dec
ffree
imul
lock
mov
mov
ss
cmp
loopne
pop
cmp
stos
push
shl
jmp
mov
loop
jge
fisttps
frstor
mov
sub
sub
js
mov
jmp
mov
mov
inc
pop
adcb
leave
inc
xchg
add
js
sbb
jae
dec
pop
inc
sar
fsubl
push
ficompl
pop
mov
add
sub
dec
nop
inc
add
mov
inc
and
and
push
jno
mov
xor
pushl
popa
or
push
and
xchg
mov
cmpsb
dec
in
or
pushf
add
btc
sub
cmp
loopne
xor
push
inc
push
loopne
popa
adc
mov
or
in
adc
fisubs
pop
sub
cmp
cld
or
shr
incl
testb
inc
mov
cmp
je
movzwl
es
jle
lock
or
or
or
sbb
fst
imul
inc
data16
ds
push
les
aam
push
fs
push
jmp
jns
mov
cld
lds
popa
fdivr
lea
pop
ret
mov
or
ret
out
orb
scas
es
sub
out
mov
lret
je
push
sub
mov
fsubs
ret
shl
push
adc
or
dec
xor
adc
or
incl
iret
xor
jo
and
xchg
fstpl
dec
xchg
inc
jp
out
jne
lods
inc
daa
orl
ss
and
jecxz
daa
mov
out
fcmovbe
jb
adc
or
aam
xchg
pop
addr16
outsb
or
xor
rolb
inc
adc
add
and
fadds
or
nop
or
xor
mov
loop
pop
xor
movl
insb
shl
fisubrs
or
jb
jp
mov
xor
push
mov
pop
dec
loope
lods
mov
pop
fcoml
shlb
mov
and
in
mov
xchg
ret
outsb
ret
sbb
ja
add
lret
aas
popf
pop
pop
xchg
cmp
jl
inc
mov
ret
or
push
inc
mov
or
pop
push
enter
outsl
je
add
adc
push
lods
inc
sub
inc
fstpl
mov
push
movsl
into
adc
xor
pop
fadd
hlt
daa
and
mov
sbb
mov
mov
mov
rcr
add
dec
in
iret
sub
loop
shlb
cld
mov
stc
lods
mov
mov
scas
fs
xor
mov
xchg
jmp
adc
push
sti
mov
cmpb
mov
xor
imul
dec
in
push
fistl
inc
inc
mov
in
and
push
jae
lods
movsb
int
cmp
mov
lahf
mov
add
push
xchg
mov
adc
add
or
push
dec
cmp
dec
add
idiv
pop
bound
and
insb
outsl
arpl
imul
arpl
jg
fs
popa
imul
push
fs
pop
je
jns
dec
dec
inc
imul
lcall
pop
dec
ja
js
outsb
push
dec
jne
dec
push
inc
jne
ja
inc
inc
je
inc
push
data16
pushl
inc
push
fs
pushw
jns
pop
dec
pop
dec
push
dec
inc
jns
push
dec
push
gs
push
ljmp
jmp
dec
pop
dec
imul
push
inc
fs
push
je
dec
push
dec
pop
push
pop
pop
push
dec
inc
xchg
cli
push
je
push
jne
jb
push
imul
dec
jno
mov
dec
push
push
push
imul
je
dec
push
arpl
jbe
dec
dec
push
insb
dec
fs
push
cmp
js
push
inc
dec
je
xor
push
xchg
popa
dec
jp
jp
pusha
push
inc
inc
dec
inc
push
jb
js
pop
inc
mov
mov
inc
cld
call
push
popa
dec
jp
insl
inc
jns
imul
inc
jo
dec
insl
gs
je
push
imul
bound
pop
fmull
dec
inc
ja
gs
dec
js
jno
jo
push
ret
pushl
push
jbe
push
dec
push
inc
imul
push
arpl
ja
jp
dec
dec
addr16
jnp
add
inc
gs
gs
jo
push
inc
lret
or
dec
outsb
push
pop
adc
addr16
inc
jno
mov
bound
jno
dec
push
outsl
inc
jp
imul
push
jle
data16
mov
dec
jb
inc
pop
js
insl
and
in
pop
xor
outsb
jbe
ja
je
dec
inc
pop
outsb
fs
addr16
dec
jg
mov
inc
jo
popa
js
push
inc
inc
js
jne
dec
fs
push
push
push
push
jo
push
jno
dec
dec
bound
push
jb
inc
je
fs
outsl
je
clc
jg
jbe
push
inc
dec
enter
dec
bound
jns
push
arpl
fistps
faddp
addr16
dec
bound
push
push
pop
inc
cmp
data16
pop
sti
jmp
dec
dec
ja
inc
jne
ja
push
push
fmuls
pushw
gs
addl
mov
dec
push
sbb
std
add
pop
push
push
jge
cmp
dec
jno
pop
pop
push
add
xor
mov
dec
push
add
inc
outsl
sti
mov
push
jbe
jbe
pop
pop
mov
adc
jns
js
and
mov
push
das
xchg
daa
push
cld
inc
lock
je
push
je
ss
pop
lods
imulb
add
into
jns
pop
push
outsl
addr16
lea
iret
push
mov
mov
mov
out
push
push
inc
add
mov
pop
push
jb
jbe
jne
gs
daa
mov
push
xchg
dec
fstl
push
aas
daa
fidivs
pop
aas
and
or
popa
jns
das
addr16
inc
insb
xchg
out
xchg
jp
pop
mov
aas
pop
ja
in
pop
add
sub
gs
and
pop
out
outsb
je
insb
cs
push
movsb
adc
push
push
outsb
in
jp
mov
sub
arpl
mov
dec
adc
rorb
shlb
popa
and
mov
stos
dec
andb
xor
push
ljmp
add
push
jmp
out
cmp
jmp
call
pop
dec
push
std
lcall
push
dec
inc
pop
jnp
inc
inc
cmp
xor
sub
sub
out
mov
aaa
sub
xor
inc
aaa
inc
jge
dec
outsb
jo
lods
addb
cmp
push
add
add
lds
mov
imul
adc
mov
add
ljmp
jo
and
sbb
sub
mov
inc
outsb
arpl
gs
outsl
in
pop
lock
dec
and
push
add
dec
add
add
add
fcmovnu
adc
add
inc
insb
jae
mov
gs
pop
inc
push
jb
dec
daa
ja
pop
pop
pop
sbb
or
or
push
movups
adc
call
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
clc
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
filds
ss
push
pop
pop
pop
pop
pop
aaa
cld
or
pop
pop
pop
pusha
popa
bound
addr16
imul
jno
mov
decl
js
jp
jl
jle
add
add
add
xchg
scas
xchg
inc
and
adc
in
push
test
adcl
in
add
stos
ljmp
dec
push
test
add
add
mov
cltd
add
pop
test
push
incl
adc
pop
pop
cmp
aaa
add
addb
lahf
push
fimull
and
add
incl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
cld
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
loope
add
xor
jmp
movsb
fsubs
jne
xor
push
cmp
std
jg
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
dec
popa
outsb
dec
mov
inc
bound
jb
jo
or
dec
add
inc
jne
push
gs
arpl
cmp
icebp
je
outsl
jbe
xchg
jb
js
je
fwait
insl
rorb
gs
insl
add
xor
mov
out
jb
add
add
push
jb
outsb
je
insl
and
push
adc
jb
or
jg
ja
push
push
and
inc
add
inc
mov
and
xor
adc
and
jo
hlt
inc
insb
imul
sub
ljmp
je
gs
jo
and
insb
outsl
es
push
pop
mov
mull
mov
xor
stos
popa
cmpsb
es
jns
or
xorb
fldt
popa
arpl
sbb
pop
mov
pop
xor
and
insl
push
xchg
dec
lock
pop
aas
xor
and
jne
dec
mov
mov
jo
rolb
les
out
fisttpl
xor
add
fs
xchg
and
jbe
mov
mov
sbb
jp
push
push
jl
ficomps
fs
or
addr16
mulb
jns
je
and
push
loopne
test
ds
gs
popf
jb
je
outsl
mov
sbb
jp
push
daa
sub
dec
imul
insb
jb
cmp
add
sbb
dec
popa
sbb
mov
loopne
ret
mov
imul
out
xor
int3
or
inc
inc
inc
push
pop
add
pusha
mov
xor
mov
mull
xor
fadd
push
push
fistps
push
or
pop
aaa
xor
ss
shll
mov
sbb
add
add
imul
nop
ss
fs
jo
cli
jbe
inc
and
mov
xchg
push
mov
sbb
das
mov
inc
lock
sarl
dec
je
in
outsl
jo
xlat
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
push
inc
aaa
xchg
mov
ljmp
das
pop
mov
outsb
popa
pop
or
push
jmp
rclb
push
leave
nop
xor
sub
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
js
pusha
jo
sub
push
mov
rorb
fsubrs
push
sub
lret
inc
sub
pop
in
jne
jo
jmp
add
jp
movsb
cmp
sub
inc
jne
jno
dec
arpl
out
gs
dec
and
fmuls
arpl
in
sbb
add
mov
or
cs
xchg
xchg
push
add
mov
xor
jbe
dec
lock
scas
dec
bound
mov
lock
mov
push
daa
inc
ss
movsb
and
sbb
repnz
xor
imul
ds
in
push
movsb
and
pop
mov
fimull
mov
add
loopne
dec
adc
cmp
cmp
aam
addr16
jbe
mov
addl
fisubs
jbe
push
push
push
cmp
lahf
fs
and
arpl
mov
xor
push
pop
add
gs
adc
mov
daa
lret
pop
push
dec
lahf
pushf
rorl
lock
inc
xchg
sbb
jnp
pop
pop
push
push
jae
loopne
mov
cmp
cmp
sbb
jae
addr16
subl
ja
mov
data16
xchg
mov
pop
bound
push
push
push
dec
testl
mov
int
dec
je
outsb
pusha
cmp
push
ret
push
fildll
dec
jge
lcall
and
shl
xor
xor
fistpll
xchg
inc
outsl
jae
pop
cmp
in
xchg
jg
inc
adc
inc
popa
cmp
adcl
push
pop
aaa
mov
pusha
push
or
aad
sbb
je
outsl
xchg
or
arpl
daa
xchg
mov
data16
jns
arpl
pop
cmp
cmp
add
idivl
xor
sub
cmp
push
addr16
jle
sub
xor
in
dec
sub
push
push
cmp
add
sub
ds
add
sub
sub
in
popf
xlat
pop
sub
mov
cmp
xchg
add
push
cmp
and
add
xchg
dec
pop
pop
test
addr16
xor
xor
ss
mov
push
fcomps
test
xor
int3
cmp
jo
sub
mov
sub
lahf
addr16
mov
rolb
iret
repz
enter
out
repz
stos
ds
lret
movsb
mov
push
sahf
out
ficomps
mov
out
js
jo
push
fs
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
out
sahf
adc
add
hlt
mov
call
repz
repz
jl
cmp
out
sahf
out
mov
sahf
out
sahf
push
xor
and
or
sarl
shlb
xor
loopne
out
sahf
cmpsl
les
std
cs
or
cmp
cmp
mov
fs
dec
and
jns
add
in
mov
adc
push
dec
push
inc
rolb
adc
push
gs
ja
cmpsb
mov
push
sub
je
hlt
jne
xchg
xchg
outsb
gs
hlt
call
ljmp
push
fistps
into
mov
into
cmp
jns
jg
addr16
pop
add
xor
hlt
adc
jb
daa
push
movsb
daa
shlb
sbb
out
sahf
dec
dec
mov
sahf
jbe
jae
pop
dec
inc
aas
add
jp
lea
ja
cmp
pop
sub
das
push
cmpsb
jb
dec
cli
hlt
sbb
fcmovnb
ss
push
inc
arpl
push
sub
daa
pop
lea
ret
mov
imul
push
push
inc
push
cli
inc
dec
dec
lds
out
cmp
adc
push
mov
gs
adc
jb
add
test
adc
and
add
inc
add
inc
mov
push
lock
das
pop
dec
in
ret
cmpsl
jge
push
scas
add
push
or
push
and
push
add
aas
and
outsl
inc
add
je
add
orl
lahf
pop
jnp
subb
insb
push
jl
mov
cmp
ds
mov
add
daa
add
push
in
lds
or
mov
xchg
insb
dec
enter
adc
and
xor
lods
and
outsl
mov
in
daa
add
and
sahf
mov
test
add
mov
rcr
push
and
ja
mov
lock
cli
push
js
pushf
std
xchg
and
out
ss
pop
push
adc
inc
pop
sahf
out
sahf
jo
cwtl
mov
or
and
xor
adc
cmp
pusha
dec
mov
xor
ja
aas
pop
movsb
cmp
insb
scas
add
jl
mov
aas
cmpsl
adc
push
or
xchg
lahf
out
roll
iret
dec
cmpb
xchg
xchg
pushf
dec
push
fs
repnz
pop
mov
mov
out
iret
mov
push
add
mov
stc
cmp
adc
add
popa
dec
push
cmp
bsf
xchg
pop
je
aas
pop
or
nop
dec
enter
lds
ds
inc
pop
out
mov
imulb
aaa
sub
mov
rorl
mov
cmp
scas
cmpsb
es
lahf
decb
out
sub
push
pop
out
or
scas
jns
aaa
dec
aam
or
leave
rorb
ret
mov
fsubs
jmp
inc
jbe
push
inc
pop
inc
adc
aaa
leave
mov
daa
movsb
and
in
push
aas
mov
jl
das
jg
out
fdivrp
adc
sub
push
jg
fsts
adc
lret
and
lret
mov
scas
sbb
pop
insl
out
pmaxsw
pop
std
dec
repnz
mov
inc
jne
mov
xchg
pop
enter
leave
mov
mov
add
pop
and
aas
and
rorl
sub
das
es
jb
xor
int3
icebp
inc
repnz
adc
cmpl
rcrb
inc
jg
dec
enter
inc
lcall
nop
dec
mov
cmp
add
popf
dec
push
popf
dec
arpl
arpl
jo
mov
into
jg
jbe
pop
jo
cmpb
xorb
mov
test
lcall
fstpl
aaa
add
fdiv
int
data16
or
in
sub
fwait
aaa
les
into
pop
and
inc
ficoml
xchg
cld
scas
xor
ja
add
popf
pop
dec
into
push
test
add
adc
or
xchg
sub
sahf
cmp
rorl
or
icebp
jo
inc
pop
add
outsb
jbe
mov
mov
mov
jns
dec
pop
sti
push
xorl
xor
lcall
aas
or
jne
adc
push
jns
or
sub
xor
and
cmp
outsb
xor
jns
sbb
jg
lcall
daa
jns
pop
push
push
pop
mov
icebp
mov
mov
std
xchg
push
cmc
lods
dec
mov
stos
inc
sarb
mov
jne
adc
nop
xchg
inc
mov
call
lea
mov
test
push
cmpsl
push
mov
jae
fs
hlt
nop
inc
stc
addr16
enter
adc
sbb
push
sub
add
jne
arpl
lcall
or
push
imul
push
dec
push
ret
clc
rcr
gs
pop
add
out
xchg
jg
ja
dec
dec
inc
dec
ja
dec
dec
sar
fwait
jno
inc
je
inc
sub
fistpll
inc
je
push
sahf
mov
repnz
aaa
mov
jl
pop
out
add
sub
call
cli
inc
jne
ljmp
dec
or
inc
enter
dec
sub
add
insb
jle
ret
jb
shlb
dec
or
adc
and
adc
add
dec
pop
add
incb
fs
gs
add
jo
inc
push
dec
push
xor
add
fbld
xchg
push
inc
sahf
je
fs
lods
je
mov
nop
addr16
add
aaa
ret
push
xchg
jl
inc
jp
mov
or
les
and
push
imul
sbb
dec
inc
and
pop
dec
jp
lcall
dec
push
sub
inc
test
aas
push
adc
dec
adcb
mov
int
lods
sahf
jb
out
jae
cwtl
and
and
inc
out
push
mov
stc
js
lods
add
insl
xor
or
mov
ljmp
cmpsb
cmpsl
mov
fwait
mov
mov
js
je
push
ret
test
adc
stc
jmp
xchg
pusha
pop
jp
or
xor
fnstcw
jno
loopne
stos
lret
or
call
ds
pop
ret
popf
dec
xchg
std
or
mov
dec
inc
fwait
call
push
daa
shll
pop
lds
dec
pop
pop
xchg
pop
les
bswap
dec
call
es
xchg
jp
mov
and
push
xlat
cmove
push
decl
and
add
les
add
and
pop
xlat
lcall
xor
sub
lds
pusha
dec
inc
cltd
add
cwtl
mov
pop
jnp
loop
push
inc
idivb
mov
adc
arpl
xor
sbb
cmp
inc
xor
adc
adc
xor
lret
inc
or
push
stc
das
jmp
mov
dec
icebp
mov
adc
pop
and
inc
push
jmp
or
scas
dec
jo
mov
lcall
fxch
push
paddd
outsl
and
sub
cmp
xor
push
imul
push
ret
cmp
sbb
dec
push
les
jg
int
mov
dec
pop
inc
les
adc
mov
jo
mov
jmp
sbb
shrb
inc
and
and
xor
add
stos
aaa
ja
pushl
call
es
cmp
dec
add
inc
fsts
ljmp
shlb
and
fstl
ja
emms
je
jns
pop
out
and
lcall
mov
xor
out
xchg
inc
in
cmp
inc
cld
xchg
adc
sbb
mov
je
ljmp
call
add
xor
sub
inc
xchg
push
push
cmpsl
xchg
mov
ljmp
lcall
lea
out
insl
js
aam
adc
and
sub
ljmp
jmp
dec
add
and
jne,pt
and
jg
mov
adc
push
mov
jne
lods
push
ja
lahf
ljmp
pop
cld
sbb
pop
bound
pushf
movb
add
das
mov
cmpsl
mov
cmpsb
popf
mov
and
data16
lcall
decl
jge
sahf
mov
inc
sub
xor
adc
outsl
push
pop
sub
sbbl
mov
lea
adc
sub
xchg
inc
lods
fadds
pusha
fsubl
push
jge
cmpl
push
movsb
xchg
dec
xchg
mov
jmp
mov
incl
push
sub
cwtl
adcb
jbe
fwait
mov
std
call
loopne
imulb
and
cmpsb
imul
mov
inc
aam
mov
jb
enter
adc
outsb
mov
gs
call
mov
inc
inc
push
rcrb
pop
adc
lea
orb
jg
shrl
les
lret
and
sbb
dec
inc
jns
sub
ljmp
jns
mov
push
dec
cmp
pop
outsl
and
adc
mov
inc
jno
mov
lcall
pushf
and
jo
inc
and
nop
xchg
loope
arpl
push
cli
sub
pop
jge
outsb
ljmp
mov
or
daa
inc
addr16
jle
ja
daa
les
lcall
xchg
adc
fs
add
icebp
scas
pop
scas
or
decl
dec
out
and
outsb
icebp
or
roll
push
fmuls
test
xchg
mov
xchg
sub
inc
loopne
data16
push
jo
clc
xchg
mov
inc
push
decl
cmp
sbb
repz
adc
aas
jb
and
cs
pushl
xchg
xlat
xchg
jg
subl
and
leave
jmp
xlat
mov
jmp
cmp
leave
adc
xor
popa
pushl
jg
adc
fcmovu
push
les
in
push
outsb
dec
xchg
pop
lret
jmp
aaa
pop
adc
sub
jns
out
int3
mov
fsts
push
push
lcall
jl
jge
daa
pop
ljmp
dec
mov
lea
fadds
dec
push
test
jno
pusha
sub
fbstp
in
lahf
cmpsl
movsl
mov
and
test
icebp
stos
cld
imul
jne
sub
xchg
iret
and
inc
cli
mov
arpl
dec
scas
mov
jmp
cmp
dec
cmp
pop
pop
jno
movsl
push
xor
mov
out
add
fabs
jne
adc
push
fwait
jle
incl
or
add
iret
mov
les
outsl
lahf
nop
cmpsb
pushl
sti
pop
insb
inc
les
push
outsl
decl
fs
out
dec
inc
ret
and
lock
ljmp
fisubl
lahf
sub
xchg
into
pop
jle
in
adc
xchg
mov
push
push
dec
rcll
mov
repnz
sbb
je,pt
dec
mov
xor
inc
lock
xor
pop
ret
repz
pop
pop
xchg
add
inc
xchg
sbb
lods
dec
push
loopne
inc
mov
cmp
call
test
push
push
inc
repnz
sbb
pop
xor
mov
adc
add
xor
decl
mov
inc
lea
mov
mov
mov
ljmp
cs
imul
data16
mov
ljmp
in
sbb
inc
sbb
or
test
shll
or
jg
call
add
stos
mov
rorb
push
jle
arpl
cltd
cmpb
jmp
pop
filds
dec
pop
and
inc
adc
scas
dec
mov
push
push
mov
add
or
xchg
xchg
push
adc
mov
or
adc
das
pop
clc
push
jl
add
iret
xor
stc
adcb
stos
adc
jp
icebp
inc
incl
and
mov
cli
scas
jnp
test
sbb
cmpl
scas
scas
xchg
or
inc
mov
arpl
mov
push
sti
sub
xor
mov
jg
or
scas
jp
dec
xchg
or
outsl
mov
je
pop
fs
cmp
mov
inc
imul
pop
clc
lahf
adc
pushf
test
stc
jmp
mov
jb
test
sti
pop
data16
jle
add
mov
jo
mov
loopne
imul
aas
xor
inc
out
popl
mov
push
pop
andb
test
pushf
mov
jg
fbld
test
fs
stc
jg
and
mov
bound
subb
enter
dec
call
pop
ret
les
lret
scas
shll
popa
sub
jmp
adc
pop
pop
xchg
jle
inc
sbb
pushf
jbe
leave
or
mov
xlat
add
cmp
cmp
add
pop
jp
xchg
lret
test
inc
lahf
jno
decl
ret
cmp
lea
out
arpl
imul
inc
adcl
cmp
popa
aad
dec
mov
jge
push
adc
aas
into
es
xchg
repz
ficompl
test
xchg
movsl
fwait
cmpsl
xor
gs
imul
xor
jge
jbe
nop
lods
in
out
jle
push
push
clc
and
lods
dec
jg
inc
in
pop
or
jmp
push
and
scas
enter
rolb
lods
mov
es
xchg
aaa
incl
faddl
imul
aaa
jl
pop
pop
cmp
insl
push
leave
call
pop
fcomip
aas
add
stos
cmp
fstl
push
push
sbb
out
cli
jmp
fwait
jmp
push
aam
cmpsl
add
xor
or
or
pop
cmp
insb
les
adcl
add
clc
xchg
stc
pushl
in
xchg
jb
xadd
mov
mov
cli
adc
sub
repz
add
in
mov
fisubl
insb
icebp
inc
out
pop
dec
add
sbb
lock
js
jne
fldt
sub
lcall
inc
dec
insl
mov
adc
inc
xchg
es
push
jecxz
sbb
lods
adc
push
aam
dec
mov
cld
lcall
lock
adc
and
xor
sbb
cwtl
cmpsl
shlb
std
incl
test
or
pusha
popa
or
pushw
jmp
mov
in
push
movsb
outsb
jb
push
xchg
stos
movsb
mov
pushl
sbb
add
cltd
in
das
jno
or
inc
lods
pop
inc
insb
push
inc
adcb
ljmp
frstor
inc
fdivl
inc
fbld
inc
lods
clc
mov
fwait
and
call
lods
lock
dec
dec
lahf
pop
inc
test
dec
dec
fstl
pop
jp
addr16
add
int3
nop
sahf
push
imul
decl
out
pusha
out
nop
lods
push
dec
cmp
sub
add
mov
dec
inc
push
or
incl
loop
jb
and
or
mov
ljmp
mov
sub
lds
mov
and
ljmp
push
int3
jno,pt
cmp
nop
shll
inc
out
sub
test
test
incl
test
pusha
data16
sub
inc
ss
push
mov
add
inc
stc
mov
jl
sbb
popa
decl
mov
and
and
ja
aaa
jge
jbe
jno
xchg
clc
orps
test
pop
in
ss
inc
ds
lcall
mov
xchg
mov
pop
sbbb
mov
popl
popf
lahf
sbbl
mov
outsl
or
jecxz
inc
xor
and
fcomps
stos
push
push
xchg
xchg
fiaddl
and
push
push
adc
jmp
push
mov
in
push
inc
shrb
inc
dec
push
arpl
pop
push
sub
adc
incl
push
insb
cmp
adc
cmpsb
data16
in
jae
jl
ficompl
jg
mov
adc
scas
rclb
stc
hlt
inc
jl
sar
mov
ret
mov
add
inc
imul
jno
lahf
dec
adc
ds
fisubrs
dec
inc
ja
shrl
mov
les
xor
xor
ret
ljmp
jg
out
dec
xor
xchg
and
and
ret
sub
in
sbb
call
in
add
cmp
fistps
pop
adc
rorl
repz
ret
jo
cmp
cltd
addr16
out
pop
shl
ljmp
jns
insb
adc
ret
jns
mov
push
sub
popf
clc
fildll
movsb
out
push
push
insl
cmp
inc
inc
sbb
lahf
jbe
stos
pop
dec
cmc
pop
dec
push
mov
push
neg
cld
ljmp
shlb
pop
add
stos
mov
inc
and
and
pop
push
fidivl
arpl
out
pop
push
insb
pop
fstpl
add
push
jbe
lds
push
shrb
lcall
and
nop
mov
les
push
inc
data16
mov
pop
dec
es
xor
adc
xchg
or
stc
jns
call
push
sbb
gs
mov
lods
xor
insl
mov
bound
decl
popa
sub
sbb
insb
std
jbe,pt
add
mov
cmpsl
outsb
fsub
inc
lret
ljmp
rcrl
pop
and
je
rorb
pop
lret
pop
inc
imul
js
lcall
dec
lcall
stos
jnp
inc
adc
lods
mov
inc
data16
pushl
shlb
push
push
inc
jno
ljmp
pop
push
or
sarb
inc
push
fs
fwait
lcall
das
jge
bound
push
jno
pop
outsl
adc
jmp
jmp
bound
movsb
xor
push
imul
push
ret
cmc
inc
xlat
sub
add
push
adc
adc
xchg
adc
pop
sti
mov
push
mov
adc
dec
je
popf
jg
inc
cmp
cmpsb
xchg
inc
xchg
adc
push
ja
jge
outsb
and
sub
dec
pop
mov
push
loopne
mov
dec
ss
repz
in
addb
mov
push
xchg
das
push
pop
bound
outsl
jle
cmp
xor
xor
repnz
je
pop
aam
push
xor
fdivrl
mov
in
fdivrl
xchg
and
sbb
mov
jnp
xor
or
loopne
clc
sbb
sub
pop
dec
fsubrl
pop
fmuls
pop
loopne
fwait
call
lock
sub
js
stos
sbb
outsb
jle
ljmp
and
inc
jl
mov
or
xor
push
lcall
jb
jns
addb
adc
insl
inc
dec
arpl
mov
aam
add
adc
icebp
mov
adc
bound
decl
sbb
push
inc
push
push
into
cmp
arpl
outsb
daa
push
insb
dec
insb
cli
mov
insb
jno
movl
out
adc
pushl
adc
mov
jae
add
jle
dec
adc
mov
clc
and
adc
mov
mov
push
dec
or
push
subb
arpl
push
sub
fcomip
ljmp
adc
add
pop
lahf
enter
mov
and
fldenv
inc
inc
and
testl
nop
bound
or
fs
incl
push
mov
addr16
jns
mov
in
cmpsb
mov
push
insl
js
gs
lcall
mov
sbb
add
jo
andb
in
add
std
mov
sub
inc
fwait
cmpsb
push
and
push
std
iret
fwait
add
xchg
or
mov
popa
pop
call
push
sbb
jne
lods
inc
aas
inc
pop
hlt
lea
add
jbe
adc
ljmp
fidivl
jb
sbb
ss
add
sbb
xor
sbb
jo
lods
fdivr
ja
inc
sbb
dec
pop
push
sahf
and
push
out
mov
push
testb
cld
popa
push
fwait
mov
les
call
fsubl
sub
outsb
and
mov
notb
push
pop
inc
cltd
mov
xchg
mov
mov
jmp
push
outsl
outsb
sbb
pusha
out
inc
ja
fists
fistpl
mov
cld
sub
jle
lock
jmp
mov
jg
bound
iret
repnz
dec
inc
leave
pop
dec
pop
lods
roll
mov
lcall
dec
outsb
notb
into
mov
mov
addr16
fbstp
or
dec
js
js
or
and
inc
mull
jg
les
lea
ja
imul
fistpll
inc
arpl
insl
push
push
jae
xor
sub
stc
hlt
pop
loopne
xchg
adc
rolb
inc
push
ret
icebp
incl
add
mov
dec
rorl
dec
loop
push
cmp
mov
mov
push
cmp
mov
incl
mov
inc
push
jbe
dec
inc
and
xor
jle
test
sar
icebp
lock
inc
scas
sbbb
mov
mov
js
mov
jne
andl
js
dec
es
xor
inc
leave
add
decl
push
xor
das
notl
test
pop
mov
lret
je
adc
popf
dec
dec
in
dec
pop
ret
mov
loope
dec
rcr
push
in
sub
lods
out
sub
fldenv
mov
inc
add
les
or
ljmp
jmp
pop
inc
mov
push
test
dec
push
push
je
fbstp
lods
data16
in
lea
pop
cli
ja
mov
ljmp
movsb
aas
dec
repnz
movsl
sbb
pop
mov
jge
cld
mov
push
rorl
lret
push
lcall
rcll
fisttpll
js
iret
nop
push
fsub
jl
data16
sub
add
lcall
aaa
call
dec
dec
mov
out
test
lods
xchg
xchg
pop
sbb
clc
lds
sub
push
add
test
or
cmp
jge
fcomip
jne
dec
cmpb
cs
sbb
ret
jmp
jg
lock
push
movsb
xor
mov
cli
pop
inc
or
out
call
imul
push
push
xchg
jp
lret
pushl
and
mov
cwtl
jg
sbb
mov
cmp
cld
and
subl
push
push
dec
xor
or
sub
jne
cmp
adc
lcall
cmp
in
out
scas
sub
push
adc
andl
push
pop
cmc
call
dec
inc
jns
mov
mov
xchg
aam
dec
add
jne
mov
dec
les
xchg
dec
inc
out
in
mov
les
adc
int
data16
insl
add
dec
ds
dec
xchg
adc
push
in
adc
jg
ja
iret
adc
pop
jae
and
imul
nop
pop
sub
cmp
jmp
aas
dec
or
rcrb
pop
pop
add
pop
call
cmp
jns
or
mov
inc
jo
push
pop
xor
jne
sbb
jmp
or
in
and
cmc
jmp
pop
cmp
insl
push
inc
ja
push
lods
mov
pushf
sbb
icebp
aas
inc
mov
add
lcall
pop
push
mov
ljmp
pop
addr16
test
push
fs
jne
repz
enter
dec
mov
and
aas
push
xlat
incl
outsb
cmpps
xor
ud0
out
and
add
inc
xor
and
sar
outsl
les
cmpsl
jnp
push
dec
enter
dec
push
test
sbb
mov
push
dec
shll
dec
add
rclb
adc
bound
mov
dec
jp
sti
cmp
jecxz
ja
mov
cwtl
fists
xchg
shll
arpl
orl
out
pusha
cmp
pop
loopne
loopne
inc
jl
sub
ljmp
clc
ljmp
mov
mov
xor
jbe
iret
dec
or
mov
in
add
or
cmp
mov
pushf
jne
xchg
pushl
cmp
push
jnp
adc
mov
out
mov
adc
incl
add
add
add
sbb
out
es
mov
arpl
in
or
inc
cli
lcall
scas
add
mov
cld
and
arpl
mov
pushl
jle
mov
inc
lock
add
inc
pop
int
ljmp
mov
nop
cmp
dec
rcll
insb
sub
sbb
addr16
push
dec
shlb
pop
sub
xchg
cmpsb
xchg
pop
decl
sub
lcall
mov
xchg
mov
or
ljmp
dec
or
dec
lds
inc
mov
movsb
lahf
mov
add
lds
inc
push
clc
outsb
into
sub
repz
or
cmp
stos
mov
pop
push
mov
add
into
or
std
incl
push
pop
inc
mov
jb
aam
or
sbb
sub
out
dec
push
ja
out
mov
push
lcall
sarl
fsubs
inc
ret
inc
repz
outsb
insl
push
and
pop
mov
adc
inc
sbb
jno
loope
push
bound
pop
jp
add
mov
decl
scas
incl
cmpsb
pop
push
or
outsl
cmp
sbb
repnz
cld
lods
sbb
push
push
mov
bound
addb
lret
jbe
inc
nop
cs
cs
enter
aas
add
add
or
fadd
inc
in
sahf
mov
rclb
jmp
ret
pop
fisubrs
jae
push
popf
adc
push
push
push
pop
jl
push
cmp
call
mov
push
movsb
dec
insb
icebp
dec
std
push
lcall
rclb
les
mov
jp
pop
enter
adc
cmpb
cmp
repz
or
loope
jb
and
jbe
fsubr
dec
adc
pushl
jno
sti
jb
xchg
push
jns
sub
jge
imul
repnz
les
xchg
push
push
xchg
roll
sub
mov
xchg
mov
xchg
jae
mov
xchg
incl
stc
cmp
push
and
aaa
pop
mov
incl
cld
ljmp
dec
cmp
mov
jbe
xchg
push
dec
bound
mov
xor
iret
xchg
push
lret
movsb
insb
je
xchg
adcl
inc
mov
xchg
push
add
cld
jge
dec
pop
inc
adc
push
ja
xlat
mov
jg
pop
ficomps
sbbl
mov
mov
sbb
decl
cmpsb
dec
pop
push
push
call
sbb
daa
adc
fsubp
je
xchg
sbb
pop
fcomip
decl
cmp
addr16
pop
clc
sub
mov
cmpsb
adc
int3
cmp
jmp
mov
push
mov
movsb
clc
xor
xchg
lods
fsts
jp
xchg
jg
leave
push
cli
inc
or
mov
das
arpl
xor
cmpsb
enter
leave
xchg
outsl
sub
mov
cmp
cwtl
dec
dec
xchg
cmp
ds
call
jle
fldenv
jno
cmp
or
jb
aaa
dec
shrl
dec
dec
jmp
sahf
ja
xor
pop
mov
lds
push
sbb
ja
lcall
ljmp
lret
pop
xor
cwtl
add
scas
pop
pushf
jg
lret
scas
pop
jge
add
or
jg
push
enter
pop
jg
decl
jne
cmp
inc
aam
adc
pop
es
rcll
pop
push
nop
dec
iretw
xchg
sub
or
pushl
jle
lods
push
jae
mov
aas
cmp
dec
fistps
dec
out
jae
lea
push
call
mov
mov
mov
js
scas
push
ret
jno
or
jne
dec
hlt
jle
pop
lds
ja
and
or
push
into
mov
ljmp
sbb
inc
xor
mov
sbbl
das
or
outsl
push
sbb
mov
pushl
fidivl
insl
dec
inc
and
sbb
ds
fisttpl
jb
adc
xor
call
ficomps
xor
inc
daa
mov
dec
dec
in
dec
sbb
fnstenv
aam
cld
sbb
add
cs
push
push
std
call
inc
jne
cld
and
dec
fs
loope
dec
leave
movsl
inc
scas
test
pushl
push
jo
jp
and
lret
pop
cmpsl
fisubl
and
dec
xor
incl
jb
add
imull
mov
add
push
lcall
dec
ficoms
jo
cmp
les
pop
outsl
int
xor
cmpsl
adc
stc
push
mov
pop
pushl
xor
scas
loopne
jo
sub
ljmp
roll
mov
fidivrl
sub
cmp
dec
in
cli
cmp
sbb
repz
jbe
aam
jl
xor
addr16
les
or
stc
add
jg
and
push
jno
bswap
mov
and
outsl
fbstp
mov
mov
jle
movsb
in
inc
imul
pushl
mov
inc
es
filds
ja
repnz
xor
sub
cmpb
decl
and
inc
jo
cmp
mov
mov
lds
imul
fisubrl
imul
sub
inc
jb
push
out
push
dec
subb
pop
lcall
cld
xchg
fisttps
dec
nop
cmpsb
jge
pop
popl
mov
ja
cld
jae
jae
push
xchg
jle
movl
aam
cmpsb
add
rcll
arpl
push
outsb
jp
cmp
jmp
decl
or
aas
fdivrs
mov
pop
fimull
ja
sbb
adc
mov
rsm
repz
ss
movl
dec
std
dec
in
and
test
mov
jl
ret
loopne
ja
mov
xor
dec
jo
lds
or
adc
incl
pushf
js
xor
dec
mov
xlat
cmpsb
jno
or
pop
fdivrl
jg
push
cld
decl
lods
push
dec
popa
and
mov
jecxz
push
mov
cld
ljmp
dec
mov
stos
mov
and
repz
pop
stos
mov
incl
sub
xor
xchg
jp
jge
jbe
jo
xchg
push
xchg
jle
fwait
dec
adc
inc
fildll
inc
rcrl
lcall
aam
push
daa
data16
pop
pusha
xchg
sbb
xchg
mov
sbb
mov
push
lds
incl
nop
test
add
popa
jle
pushf
add
loopne
jb
lret
pushf
insl
in
filds
call
lods
cmp
inc
ret
xor
mov
jae
and
add
adcl
pop
cs
in
push
orb
lds
mov
lea
iret
push
jp
adc
insb
lret
jmp
and
push
mov
out
daa
aaa
xor
repnz
les
outsb
dec
inc
decl
popa
xchg
or
mov
dec
ret
cmovl
push
orl
fiadds
pop
arpl
lods
ja
lcall
cmp
ds
push
or
mov
mov
or
cmp
mov
or
push
jl
mov
mov
in
testb
jg
outsb
push
mov
cmp
mov
push
push
shrl
push
fwait
fs
add
lea
push
or
inc
es
daa
inc
mov
inc
jne
shll
push
outsl
mov
jne
cmovb
iret
cltd
pushf
push
jne
call
mov
sub
and
jne
lcall
jle
test
mov
sbb
mov
adc
inc
adc
mov
dec
cmc
aaa
outsb
sbb
xchg
lahf
sub
in
sub
test
jae
pushf
addr16
pop
pop
aaa
lock
dec
das
popw
jp
inc
andl
sbb
icebp
mov
or
dec
push
jo
call
test
int3
xor
es
pushl
cli
sbbl
bound
cmpsb
pop
cmp
mov
cmpsl
push
aas
fildll
sar
mov
test
jnp
dec
loope
arpl
add
mov
inc
clc
mov
pop
push
out
or
mov
das
inc
outsl
scas
cli
pop
lock
mov
mov
sbb
mov
loope
pushl
push
jno
sub
push
jnp
cmp
in
scas
sub
ljmp
mov
add
mov
mov
pop
sti
pop
inc
or
decl
add
push
or
push
cmc
ds
push
dec
push
push
jmp
mov
adc
lds
mov
xchg
xchg
ss
dec
mov
aad
jg
decl
xchg
pop
inc
jo
pop
rclb
je
mov
mov
mov
pop
push
jecxz
in
jle
xchg
in
push
push
icebp
xor
call
aad
insb
dec
aaa
push
icebp
mov
mov
icebp
aas
mov
das
mov
lret
test
cmp
mov
call
pop
decb
push
or
push
inc
pop
movsl
adc
mov
xchg
scas
loope
mov
in
add
jno
aam
decl
dec
or
subb
psubq
pop
lret
cs
adc
call
in
mov
fwait
les
dec
lahf
hlt
movsl
dec
ret
xor
loope
decl
push
in
ret
movsb
cmpsl
out
xchg
mov
movsl
mov
sub
mov
mov
push
nop
push
jmp
data16
popa
jge
add
dec
loop
scas
push
lcall
and
push
int
push
rcrb
movsl
pushl
lahf
mov
andb
out
fwait
add
cmp
ljmp
push
cmp
mov
jmp
and
dec
aam
pop
mov
out
pop
incb
xchg
clc
das
mov
or
sub
and
ret
jae
fwait
cld
sub
lcall
jns
mov
add
cmp
ss
ljmp
imul
incl
int
jne
or
sbb
xor
jae
inc
hlt
xchg
popa
inc
inc
cmc
cmp
lcall
jecxz
jmp
outsb
sti
or
inc
loope
movsl
outsb
dec
ja
aaa
xor
push
sub
cmp
rcll
cmp
cmpsl
fisttps
sbb
add
xor
cmpsl
add
push
jne,pn
xor
iret
fldl
jle
jb
add
cmpsl
mov
fs
stos
movsb
les
mov
cwtl
out
or
cwtl
add
sahf
inc
test
mov
push
jmp
cmp
add
nop
xor
aas
add
lcall
xchg
jo
out
aas
dec
inc
sub
incl
xchg
inc
pop
ss
push
cmc
xchg
xchg
cmp
ret
push
in
and
pop
incl
or
enter
cmp
cld
call
sub
cmp
int
inc
insb
xchg
pop
aad
in
dec
lcall
push
pop
and
push
out
arpl
pop
gs
inc
adcl
add
lcall
pop
dec
push
ja
jne
clc
pop
jp
or
call
mov
jo
mov
push
arpl
fs
jo
push
hlt
ja
rorb
push
cmp
insb
rcll
enter
lcall
imul
mov
push
dec
ja
or
inc
ret
les
sahf
imul
sahf
jg
lcall
adc
cltd
adc
popf
lods
or
ja
xor
mov
inc
fnstenv
cmp
dec
xchg
dec
inc
call
fdivl
add
mov
sub
ljmp
sbbb
xor
sub
std
ja
push
dec
movsb
enter
ljmp
xor
adc
iret
ds
rcrl
inc
adcl
pop
push
dec
in
add
lcall
dec
jg
mov
mov
clc
and
ret
ds
and
stc
mov
fwait
aad
std
push
shrb
sbb
jecxz
sub
jmp
popl
inc
sbb
cwtl
std
adc
divb
cmpb
insb
pop
mov
lret
push
sti
int
ja
cmc
push
outsb
insl
pop
loope
stc
or
cs
imul
jno
mov
ja
cmpsl
rolb
dec
in
jbe
roll
or
pop
adc
cld
xchg
fldl
insb
repz
int3
mov
jb
call
jg
test
gs
jecxz
jl
adcb
icebp
xchg
mov
decl
fiaddl
pusha
rclb
insb
lods
bound
jo
pusha
mov
mov
rcrl
mov
nop
out
shll
lcall
xlat
add
add
int
push
je
lcall
pop
imul
or
sbb
jg
adcb
pop
arpl
xor
sbb
scas
push
cmpsl
test
jae
jg
inc
ret
ljmp
rclb
sub
notb
xor
inc
sub
cmc
jae
xor
sbb
ds
xor
push
adc
jmp
cmp
pop
sbb
mov
shrl
jl
cmp
push
into
arpl
and
idivl
outsl
push
jne
mov
push
inc
sbb
fdivr
jmp
cmp
loop
push
sbb
adc
out
adc
xor
into
mov
cmp
add
inc
push
sbb
cmp
jl
mov
rorl
xor
addr16
cmp
mov
sahf
mov
shll
repz
ds
add
and
pop
inc
mov
cmc
cld
aaa
jg
pop
rol
clc
jo
ljmp
insb
outsb
decl
incl
icebp
imul
mov
gs
push
pushl
mov
adc
bound
pushl
iret
mov
das
jle
das
add
pop
jecxz
sbb
push
pop
stos
dec
jbe
loope
decl
packsswb
mov
lock
cmp
mov
pushl
push
scas
push
fs
int
or
shll
add
scas
mov
add
loop
fsubl
inc
pop
daa
mov
xchg
gs
shll
inc
jns
jmp
imul
scas
rorb
stos
cld
imul
lcall
inc
cmpsl
repnz
jne
cli
das
popa
sub
push
dec
push
xor
arpl
add
pop
pop
mov
push
ds
push
fists
jmp
push
or
fstpl
dec
aas
cld
aam
fs
ja
or
mov
push
adc
and
daa
test
jg
cltd
popa
mov
fsubr
jno
push
xchg
loopne
in
repz
stc
filds
and
pop
nop
daa
arpl
mov
scas
xlat
push
out
jmp
inc
mov
aaa
dec
fs
or
add
sub
es
push
fisttpll
xchg
incb
inc
rcrb
ds
inc
cmpsb
mov
movd
ljmp
jo
mov
mov
adc
xchg
dec
popf
sbbb
jl,pn
outsb
mov
in
cmp
push
imul
loop
and
sahf
movsb
stc
outsb
loope
enter
ds
xor
xchg
push
mov
je
hlt
lahf
pop
adc
cmp
mov
dec
jae
inc
mov
dec
rcrb
mov
clc
sub
adc
and
add
pushl
les
jge
dec
sbb
int
adc
daa
or
mov
cmpsl
pop
cmp
loope
cmc
repnz
pop
inc
push
fstpt
add
cld
jae
pushl
cmpsl
je
imul
arpl
loop
in
repz
stc
xor
adc
dec
mov
stos
in
ja
dec
jg
imul
outsl
into
cmp
jb
sub
sub
daa
loope
jmp
cld
sahf
lods
xor
push
stc
or
mov
std
ss
outsb
mov
mov
pushl
imul
aaa
jge
sbb
stos
incl
cld
push
cmpsb
pushf
mov
mov
push
loopne
cmp
repz
shll
or
popf
mov
divb
inc
outsl
mov
cmp
mov
mov
movsb
jns
and
dec
cmp
decl
cmp
insb
psubusw
sahf
pushf
fs
pushl
add
inc
cmpsb
enter
rcll
icebp
adc
lds
mov
mov
inc
loopne
sub
mov
aas
pop
sarb
int3
sub
clc
mov
lea
std
pushf
xor
aas
mov
mov
int
mov
cmp
jg
dec
xchg
enter
js
mov
filds
lds
jge
scas
add
stos
call
mov
mov
mov
jg
mov
shll
cltd
shll
dec
and
pop
mov
pop
insb
inc
push
and
push
pop
jae
mov
decl
lock
dec
adc
fsts
pop
lods
stos
push
popl
dec
nop
lahf
fdivs
jg
lcall
repnz
sbb
mov
mov
sub
xor
cld
decl
push
xchg
push
xchg
shll
pop
ljmp
test
stos
filds
cmpsl
jbe
clc
call
push
out
or
movsb
or
das
pushf
addl
inc
and
sbbb
dec
aas
push
inc
int3
xchg
sbb
mov
fisttpll
cmp
out
jmp
mov
inc
or
cmp
stos
mov
push
stc
push
dec
je
jecxz
jge
jnp
and
sbb
xor
das
jo
ficompl
data16
fcomip
xor
mov
lods
pushf
scas
clc
xor
mov
lcall
inc
fnsave
std
pusha
lret
or
pop
sub
sti
pushf
adc
sbbl
and
dec
push
ds
add
lea
add
hlt
xor
outsb
push
pop
nop
cld
xor
adc
add
in
pop
jmp
sub
popf
lds
stos
and
cmpsb
call
sarb
mov
add
xchg
dec
iret
jle
filds
stos
sub
xchg
mov
inc
fs
or
jmp
xchg
je
add
rorl
mov
das
fcompl
test
in
pop
fcomip
decl
mov
xor
fldcw
add
nop
inc
mov
andb
aaa
std
mov
push
sbb
jo
jge
jno
dec
cli
lods
call
in
mov
outsl
sarl
arpl
cmp
out
jae
std
or
adc
dec
out
cld
ja
cmp
add
stc
aas
mov
dec
dec
pop
ds
lods
sub
sbb
test
stos
and
inc
cmp
or
jae
push
mov
lds
pop
cli
pop
ljmp
bound
call
pop
jns
outsb
out
jo
push
cmp
popf
or
ljmp
shrl
jns
sub
daa
mov
sbb
adc
popa
xchg
hlt
sbb
ds
in
inc
adc
lcall
outsb
and
mov
cmp
ss
xchg
jg
filds
xchg
repz
sbb
nop
cs
jmp
push
sbb
sbbl
cmp
or
imull
call
ret
push
push
xlat
mov
in
daa
xchg
inc
inc
push
mov
or
pop
mov
mov
or
jge
add
mov
out
test
and
shrl
jnp
shrl
mov
mov
mov
xchg
sub
cld
or
sbb
sub
fwait
adc
mov
in
jle
lahf
pop
inc
stc
mov
adc
cmp
mov
ljmp
mov
jb
push
lret
mov
jnp
ja
js
insb
lret
mov
sub
jg
aaa
std
sub
les
out
push
inc
pushf
enter
arpl
sub
lcall
lock
cli
or
andl
cmp
ss
ja
inc
jne
dec
mov
or
cmpsb
mov
in
jg
cmp
mov
cwtl
dec
testb
push
xor
mov
mov
fs
mov
xchg
jmp
push
push
cmpsl
sarb
pusha
pushl
or
pop
les
mov
and
dec
xchg
out
jo
das
dec
call
adc
call
xor
cmpsb
cmpsb
test
mov
mov
cs
sbb
cmp
mov
mov
fwait
ret
sub
jg
lock
inc
or
xchg
and
adc
out
add
pop
arpl
lcall
out
sub
cli
icebp
cmp
push
jp
mov
pop
daa
jecxz
stc
xor
mov
pop
push
rol
pushl
jmp
cmp
add
icebp
mov
cmp
ret
es
inc
or
decb
jo
sbb
xchg
ja
pop
std
es
cmp
decl
push
dec
fiadds
outsl
ljmp
add
xor
add
cmp
scas
add
pop
mov
mov
popa
push
xchg
movsb
dec
mov
pop
push
dec
aaa
icebp
inc
popa
out
and
cmpsl
les
jmp
daa
pop
in
push
inc
push
mov
inc
decl
aam
out
push
sbb
push
jge
xchg
repz
xor
adc
push
ds
sub
pusha
inc
xchg
pop
nop
mov
fisttps
aas
add
adc
jo
dec
shlb
mov
inc
loop
mov
dec
dec
push
stos
or
imul
decl
stos
test
jp
sahf
data16
ja
or
roll
adc
jg
xor
aam
psrad
pop
idiv
incl
out
aam
pop
xor
sub
daa
fdivrp
mov
inc
sub
ljmp
das
divl
adc
push
fyl2x
mov
fistpll
mov
add
subl
pop
pop
cld
and
flds
loop
sbb
xchg
pop
dec
fdiv
dec
fldenv
push
mov
pop
pushl
push
decb
movb
xor
mov
xchg
imul
mov
push
and
int3
sbb
xchg
mov
jne
push
int
inc
fsubl
push
nop
ja
in
adc
icebp
pop
dec
xchg
call
icebp
xchg
aas
fdivrl
add
sub
push
clc
aas
jmp
mov
daa
gs
mov
xchg
mov
adc
adc
aas
push
icebp
incl
insl
pop
cltd
or
dec
loope
inc
lods
fimuls
mov
jne
sar
add
gs
popf
sub
cs
popa
popa
ret
pop
pop
shll
fisttpll
jg
daa
inc
stc
dec
rcrl
pushf
fiaddl
inc
jae
incl
popw
roll
inc
out
lcall
or
inc
pop
insl
sub
lock
mov
xor
dec
mov
dec
addr16
jno
xor
inc
push
jp
in
mov
lds
ja
out
mov
sbb
pop
push
roll
inc
shrb
lret
xchg
ret
mov
push
push
xchg
mov
mov
lcall
mov
inc
dec
lahf
add
addb
cmpsb
mov
ficoml
lcall
xor
add
insl
mov
ret
add
push
fdivs
jnp
popa
loope
lcall
xor
pop
cli
push
into
ds
sbb
pop
pop
into
cmp
sti
pusha
pushf
daa
int
pushl
cld
stc
add
mov
jns
and
pop
inc
mov
push
push
ljmp
incl
fdivs
mov
mov
les
lds
rcll
mov
or
inc
out
daa
pop
rolb
push
lahf
jno
std
and
ret
adc
scas
dec
in
dec
fisubrs
pop
push
ljmp
pop
out
fnstenv
inc
mov
les
and
arpl
aas
nop
rolb
call
divb
in
cmp
inc
mov
loope
hlt
or
jl
or
or
insb
testb
sub
pop
fisubs
out
cli
mov
fnstcw
xor
jle
lret
cs
arpl
test
xor
jg
inc
and
fisubrl
jne
pop
int
popf
pop
jg
pop
lds
faddl
test
test
push
pop
adc
lcall
cli
pop
shll
xor
cmp
ljmp
pop
js
inc
sbb
sbb
test
push
das
push
add
pushl
mov
ja
test
je
adc
push
add
into
cs
repnz
fistpl
lds
out
pop
ficoml
out
aam
loopne
pop
mov
lcall
jmp
push
out
and
cmp
sbb
sub
push
or
loop
clc
mov
jns
imul
lcall
dec
iret
dec
jae
push
ret
aaa
js
sub
daa
pop
pop
insb
int3
cmp
ljmp
push
push
nop
jne
insl
mov
dec
das
pop
fistps
repnz
js
fdivl
push
add
addr16
inc
inc
pop
fnstcw
je
ret
stos
in
fcmovbe
sbb
adc
sbb
adc
hlt
aaa
ljmp
mov
adc
scas
outsl
jle
cmp
fwait
jne
lock
xor
ljmp
lret
mov
out
decb
pop
cli
pop
iret
add
popa
pop
mov
jb
sub
mov
lcall
cmp
inc
shll
push
insl
rep
inc
andl
add
dec
pop
dec
jp
ret
cs
jns
test
push
xor
pop
jge
mov
fstpt
push
pop
popa
mov
call
sahf
iret
xchg
push
out
xor
outsl
shll
jp
ljmp
adc
push
hlt
call
pop
push
mov
jl
add
dec
mov
mov
push
jecxz
or
imul
mov
aas
fs
pop
push
add
lea
in
adc
pop
repnz
inc
outsb
stc
cmp
js
add
mov
jae
mov
jb
dec
lret
fsubs
mov
push
iret
decl
add
cli
dec
adc
ret
ljmp
fsubrl
sub
leave
push
fstpl
or
xchg
outsb
movsb
sub
pop
movsb
call
call
cld
jmp
fbld
movsb
jbe
add
sbb
pop
out
inc
out
fdivr
pushl
repz
xchg
jns
sub
test
mov
inc
rolb
idiv
aaa
pop
iret
or
or
mov
xchg
adc
mov
xchg
dec
cmpb
sub
ljmp
xchg
mov
arpl
xor
pop
std
add
cmp
pop
pushl
das
push
push
cmc
and
cld
das
cmp
lcall
clc
lcall
inc
and
xchg
push
ja
mov
inc
pop
mov
outsl
loop
lcall
into
mov
sbb
xchg
cmpb
xchg
and
mov
mov
popa
cmp
pop
gs
stos
inc
jecxz
or
and
fs
stos
add
pop
ds
pusha
add
jmp
jmp
lds
test
dec
jg
or
sub
add
cld
xor
rolb
jb
in
inc
fdivrl
nop
jno
cmp
jl
add
outsl
xor
dec
xchg
dec
js
fisubrs
lods
push
dec
arpl
sar
inc
shlb
jae
jns
inc
out
sub
mov
insb
jmp
icebp
clc
test
ss
pop
inc
cmp
pop
sub
jp
mov
pop
jb
adc
out
incl
stc
cwtl
adc
lret
push
push
inc
mov
insb
cs
jmp
xchg
iret
sub
call
or
fldcw
inc
sti
daa
dec
mov
imul
test
ret
cmp
pop
push
jle
ja
pop
pop
cmp
out
adc
pextrw
mov
push
jmp
mov
iret
sub
xorl
loope
pop
pop
add
cmp
mov
sbb
fisubl
mov
call
daa
test
or
gs
ljmp
out
mov
push
imul
clc
es
adcb
sar
decl
loop
adc
jmp
icebp
adc
mov
in
and
jbe
cld
cmp
dec
pop
sbb
fs
cmpsb
cmp
out
fdivs
adc
jnp
loop
and
jbe
push
jge
call
imul
fistpll
pop
or
enter
fdiv
stc
add
cvtss2sd
cwtl
stc
pcmpgtw
cli
push
dec
outsl
pushf
test
push
pop
add
loope
decl
adc
jnp
adc
adc
push
jae
fbstp
jno
jo
addb
decl
test
add
push
jnp
cmp
ret
inc
movsb
xor
mov
push
ljmp
sbbb
or
icebp
xor
pop
popa
daa
les
or
int
jmp
dec
inc
push
push
sbb
ljmp
and
sbb
rclb
jo
sub
sub
test
xor
pop
jle
loop
in
decb
call
into
sahf
cld
sbb
push
mov
and
fdivl
addr16
cli
scas
scas
test
scas
push
clc
xchg
testb
in
mov
or
inc
dec
jbe
mov
mov
xchg
push
add
cmp
clc
add
fwait
in
icebp
sbb
lds
dec
sub
daa
push
and
leave
add
add
jmp
lods
mov
mov
push
sbb
xor
mov
sub
ljmp
cltd
cs
adc
iret
xor
xor
cmc
pushl
fldcw
mov
add
and
push
fdivl
inc
call
jne
cmp
outsb
jb
push
inc
js
push
inc
iret
and
dec
int
jnp
shlb
aaa
cld
incl
cld
cmp
cmp
sbb
and
test
je
inc
jb
mov
stos
nop
mov
xchg
int3
nop
ret
pushf
inc
gs
pushl
xor
mov
fdivs
jae
enter
fnsave
lcall
outsb
mov
dec
rorl
test
xor
add
call
xchg
imul
pop
cltd
inc
js
mov
shll
jne
subl
and
dec
or
cs
adc
sbb
aaa
jecxz
inc
jae
or
cmp
and
enter
sub
mov
les
pop
js
xlat
or
stos
lds
stos
xchg
scas
sahf
imulb
jg
push
add
push
out
add
add
mov
daa
mov
inc
daa
fisubrs
inc
adc
imul
pop
inc
test
push
and
sar
add
push
pop
movb
in
add
out
cwtl
or
jmp
movsb
insb
arpl
test
call
leave
and
in
cmp
dec
scas
push
fildll
gs
mov
jns
repnz
rcll
jle
fldl
dec
repnz
sbb
mov
pop
sbbb
xchg
rclb
dec
add
popa
xor
inc
das
clc
fbld
or
sbb
push
fidivrl
data16
mov
arpl
notrack
lcall
xor
cli
sub
or
jg
add
inc
loope
nop
clc
ja
sahf
fistps
jl
sbb
adc
das
sarb
jae
lods
push
mov
sub
dec
cld
pushl
or
pop
push
jne
inc
mov
xchg
inc
out
sub
pushl
xor
xchg
testl
pusha
dec
mov
mov
jnp
add
roll
pop
ret
and
adc
sbb
pop
push
and
iret
inc
xchg
arpl
and
ss
mov
mov
mov
dec
inc
xlat
and
daa
ss
scas
scas
push
clc
adc
push
xor
sub
cwtl
lods
pop
jo
imul
sub
sbb
mov
adcb
call
cld
mov
lret
adc
sbb
rcll
dec
cmp
out
dec
xor
call
daa
idivb
pop
inc
aam
jb
mov
clc
sbb
sbb
add
jecxz
decl
cmpsb
jae
out
pusha
ret
sbb
add
xor
or
fwait
decb
push
push
out
cmp
pop
lahf
push
data16
iret
movsb
adc
insb
cltd
add
xchg
jmp
cmp
push
bound
ficompl
popa
ss
sub
aaa
jle
ficoml
push
frstor
inc
aaa
ret
ljmp
sarb
push
dec
push
in
pop
and
icebp
pop
mov
dec
push
cmpsb
add
cmp
pop
cmp
pop
dec
cli
adc
xor
ljmp
adc
pop
arpl
cmp
testb
xor
inc
je
repnz
mov
push
inc
cmpsl
stos
mov
in
mov
negb
outsb
addr16
lcall
enter
jecxz
push
stc
xor
pop
inc
add
cmp
and
roll
inc
jmp
add
inc
rclb
popa
mov
or
aas
jge
pop
adc
mov
decl
inc
cmp
mov
inc
push
adc
jns
pop
ds
sub
xchg
outsl
shrb
sar
lds
scas
cmpsb
push
push
fbstp
xchg
ret
pop
adc
cmpsl
rorb
mov
add
call
cmp
sbb
stc
sbb
stc
incl
adc
add
divl
jbe
dec
inc
jo
ja
push
cli
mov
lcall
or
jns
mov
push
pop
jne
dec
nop
imul
repz
mov
int
lods
pop
clc
lods
push
jb
mov
mov
sub
jg
mov
mov
aas
lods
fwait
mov
mov
sbb
scas
nop
scas
pop
into
loopne
pushl
aaa
xchg
inc
gs
mov
ds
test
mov
mov
imul
rolb
cmpsb
mov
and
std
pushl
xchg
test
push
push
sbb
fmull
ljmp
sub
xlat
mov
push
adc
idivb
mov
mov
mov
push
push
mov
mov
imul
lret
incl
push
add
sub
ret
sub
lahf
jae
add
scas
arpl
mov
jp
les
push
fs
cmp
sub
pop
ret
adc
repz
mov
dec
repz
lcall
mov
fs
stos
lret
and
jno
and
mov
push
imul
outsb
xor
mov
inc
xchg
push
bound
outsb
adc
sbb
adc
ljmp
aas
dec
pop
jmp
cld
adc
ljmp
xor
shll
jns
ljmp
lds
mov
fbld
in
les
push
pop
shlb
and
mov
pop
vpcmpeqw
lock
ljmp
in
adc
jge
out
xor
fnstcw
arpl
mov
inc
lods
adc
pop
jbe
xor
inc
hlt
pushl
dec
jg
mov
jno
push
pusha
call
lds
jmp
pop
pop
xchg
inc
sahf
jl
pop
inc
push
int3
mov
mov
push
mov
decl
sub
bound
cmpsb
dec
push
stos
lods
xchg
test
addl
pushl
subl
xchg
xchg
mov
bound
cmp
pusha
mov
sar
pushl
mov
test
lods
xchg
mov
xor
mov
cld
mov
aad
or
mov
mov
push
xor
mov
ja
and
xchg
jg
xchg
mov
imulb
stc
or
dec
fwait
sub
pushl
mov
stos
mov
mov
xor
popa
push
sub
scas
cs
cmp
and
mov
pop
es
xchg
scas
je
cmp
jmp
add
cwtl
push
arpl
shrb
aas
mov
call
mov
xor
sub
lret
xchg
stc
decl
pop
adc
push
aas
push
lods
adc
outsb
xor
orl
sbb
es
das
cmp
popa
dec
dec
fisubl
push
out
cmp
mov
cmp
xor
inc
inc
fcmovu
inc
or
aas
sub
loop
pop
notb
lock
incl
movl
lods
push
pop
insb
inc
sti
lahf
das
mov
subb
cli
stos
xchg
out
cmp
and
rcrl
imul
xor
or
or
add
and
add
pop
mov
cmp
add
mov
ljmp
rorl
clc
sbb
jp
push
inc
dec
or
sbb
dec
inc
loopne
xor
popf
push
cld
stos
es
test
cwtl
add
jg
incb
push
xchg
sahf
pusha
js
imul
dec
inc
cli
and
push
xchg
cmp
loopnew
psraw
xchg
push
jmp
jae
es
hlt
dec
das
sar
mov
cmp
movsl
jb
scas
gs
sbb
cmp
aam
inc
fmull
mov
test
mov
arpl
int
cmpsb
jle
mov
inc
in
dec
insb
jle
int
icebp
xorl
inc
or
adc
or
lods
push
test
fwait
js
test
or
aaa
pop
icebp
incl
push
std
and
cmp
into
cmp
push
inc
ret
sub
push
frstor
ud2
call
or
rcrb
cmc
repz
mov
iret
aas
pop
ljmp
inc
movsb
push
lahf
outsl
gs
fldcw
push
int
inc
arpl
std
jg
xor
adc
mov
xchg
inc
jne
inc
pushl
das
pusha
ret
push
inc
and
stos
ds
sub
push
pop
jo
fcoms
imul
sub
add
adc
ret
jmp
shrb
fucom
inc
rclb
inc
fimull
jb
lds
pop
gs
stos
mov
lcall
dec
movsb
jne
les
stos
fildll
mov
out
idiv
mov
inc
roll
loopne
call
pop
popa
lds
inc
pushl
call
scas
mov
xor
and
mov
cs
call
cld
jne
mov
jbe
clc
incl
loopne
add
pushf
loopne
imul
inc
test
lahf
sbb
clc
pop
hlt
iret
ret
ja
dec
cmp
shll
sti
movsl
stos
mov
mov
subl
pop
jg
and
out
sub
pop
imul
fdivrp
cmpsb
xchg
outsb
out
push
pop
shl
inc
pop
adc
dec
inc
mov
je
lret
pop
cmpsl
iret
dec
dec
jne
xor
lret
aaa
cld
mov
xor
or
dec
mov
push
mov
fs
jb
jbe
imul
inc
adc
sub
xchg
mov
fbstp
out
cmpsb
daa
enter
les
cmp
lds
jno
rclb
call
iret
adc
fidivl
aad
push
jae
dec
jecxz
mov
or
aam
push
stc
push
push
decb
dec
add
loope
sbb
sar
mov
jge
xchg
bound
xchg
dec
fsubl
pop
jmp
sar
outsl
pop
leave
xor
mov
sar
inc
fsub
icebp
jmp
out
icebp
sbb
arpl
xorb
push
lret
jb
lcall
out
dec
in
aam
mov
inc
dec
inc
pushf
addr16
in
insb
aad
out
clc
mov
xchg
add
mov
addr16
cmp
sar
inc
xor
stos
cmp
xchg
cwtl
mov
stc
push
pop
mov
lret
dec
mov
call
dec
xor
dec
ss
cmp
fcomip
pop
sbb
into
and
sub
sub
fists
mov
in
and
cwtl
xor
push
jp
fiaddl
sbb
push
aam
jb
mov
adc
push
pop
xor
fldt
push
dec
sub
mov
push
repz
test
call
push
out
push
daa
incl
imul
mov
in
ja
loope
lret
stc
into
cld
inc
bnd
aam
pop
jns
pop
rcr
adc
leave
sbb
mov
jg
pop
insl
mov
aaa
jp
mov
jb
insl
fimull
std
decl
cmp
movsl
dec
je
rcll
outsl
xor
add
rclb
and
jge
pop
jle
gs
out
into
xor
jno
jg
pushl
les
push
xor
fdivl
inc
dec
and
pop
pop
out
dec
std
rorl
ret
pop
fldl
cmp
pop
cli
int
fstpt
mov
insl
ror
icebp
dec
call
movsl
clc
repnz
pop
sbbb
pushf
lret
les
iret
pop
insb
loope
imul
xchg
inc
dec
loop
out
clc
out
jbe
xchg
jl
in
dec
sbb
add
aaa
jecxz
mov
shlb
outsl
ja
dec
cmpsb
xor
int
clc
daa
in
xor
fisubrl
outsb
aam
cld
jnp
cmpsl
mov
push
incb
std
dec
clc
ljmp
filds
call
lds
push
fimuls
adc
roll
aas
cmc
das
jle
mov
cmpb
push
mov
ljmp
jecxz
arpl
push
inc
jo
dec
out
dec
testl
mov
jle
sahf
cld
xlat
inc
int
leave
pop
push
out
out
sbb
push
in
jecxz
inc
cmp
out
stos
lock
push
xor
je
sub
loop
jecxz
les
fisttps
and
or
jge
mov
ret
dec
loope
outsl
fisubrs
fsubr
decb
push
fcoms
pusha
shl
dec
fsubs
inc
or
aas
sbb
loopne
pop
loopne
data16
aaa
inc
out
cli
insl
dec
adcb
mov
rep
clc
pusha
jp
hlt
decl
or
sbb
outsl
and
sub
mov
test
jns
out
push
sarl
push
fdivrp
jl
addr16
aas
incb
push
pop
addr16
pop
std
lds
and
jl
daa
cld
dec
cld
push
pusha
mov
jp
jne
push
fs
loope
mov
cld
out
ds
inc
fsub
push
aam
rorb
incl
dec
xchg
pusha
pop
psrlw
mov
push
int3
jo
dec
aas
xor
cmp
ret
cltd
inc
popa
stc
icebp
sub
std
pop
push
sbb
loope
ret
add
int
lcall
faddl
jl
in
and
cmp
cli
or
mov
fsub
test
inc
inc
mov
adc
pop
jg
adc
test
leave
cs
stc
jle
in
push
adc
fsubl
xor
mov
pop
repnz
mov
rcr
sub
inc
js
out
dec
rorl
add
lds
push
or
shrb
or
push
out
cli
xchg
cli
jp
mov
sarb
inc
jmp
inc
outsb
pop
jl
adc
and
mov
das
add
push
lods
scas
pop
push
sbb
filds
shll
dec
add
or
push
adc
stc
pop
ja
addb
pop
cmpb
ds
add
rorl
and
jb
bound
rolb
sbb
cmpl
xchg
lcall
adc
scas
lcall
dec
xor
lea
es
fstpl
fs
and
fistpll
jg
xchg
int
dec
pusha
push
and
adc
sub
out
data16
xor
sub
stc
mov
pop
add
adc
jp
add
sbb
ljmp
test
sbb
add
cltd
incl
in
pop
loope
bound
or
add
push
mov
loopnew
push
fs
and
push
repnz
inc
or
add
clc
jmp
ret
xor
fisubrs
jl
mov
mov
pop
dec
cli
decl
mov
mov
pusha
sub
ljmp
push
clc
call
aas
push
inc
cld
scas
lods
imul
xor
mov
mov
push
dec
leave
and
mov
int3
xor
mov
pop
loopne
dec
call
loopne
and
jmp
bound
scas
mov
dec
js
repz
inc
sub
clc
imul
dec
push
add
dec
jae
cmp
add
sbb
insb
adcb
dec
cmpsl
inc
sbb
pop
dec
fistps
ret
pop
fists
push
pop
cld
test
inc
jg
das
xor
pop
sbb
leave
lds
jo
pop
add
cmp
dec
sub
rolb
outsl
aad
jg
push
sbb
inc
push
fidivl
push
push
cmp
sub
add
mov
hlt
fsubl
repnz
xchg
sbb
movsl
lds
lret
xlat
mov
incl
add
sbb
es
add
mov
xchg
imul
adc
xor
jecxz
gs
popa
gs
stc
loope
dec
or
sbb
sar
lcall
test
dec
movsl
xor
mov
jp
and
cs
xorl
mov
and
mov
outsb
int3
mul
inc
push
inc
outsl
and
mov
push
xor
aaa
push
and
xor
pushf
shlb
mov
and
or
dec
jmp
push
jno
cmp
adc
add
dec
add
movsb
xchg
test
loop
fs
pop
mov
ret
add
jg
call
ja
pop
pop
mov
dec
sbb
push
inc
push
push
jmp
leave
scas
out
pop
jb
dec
mov
mov
dec
out
add
pop
aas
rcrl
pop
jge
les
pop
sub
ljmp
rorb
aaa
push
mov
daa
jge
out
data16
test
mov
push
jge
pop
mov
pop
jle
add
pop
clc
das
lock
jb
dec
pop
jno
fadd
push
out
in
les
cld
int
dec
les
loop
push
out
push
call
sbb
pop
mov
or
testb
push
push
jno
cld
outsb
loopne
mov
fisubl
orb
cli
ljmp
sub
push
add
sub
jb
xchg
xchg
je
mov
lods
ret
ss
popa
adc
push
dec
push
cmp
mov
xor
mov
ds
push
pop
pop
rcrb
cmp
dec
out
and
pop
xor
cmpsl
js
push
jmp
pop
push
int3
jp
cmc
test
push
std
popf
xor
cli
mov
and
sbb
dec
mov
sub
mov
lds
shlb
pop
sub
pop
fisttpll
xor
out
push
dec
bound
repnz
add
imul
inc
sbb
lods
sub
cli
jg
ret
and
cmp
pushf
sub
jg
insb
in
pop
rclb
pop
fstpt
pop
imul
lahf
dec
shll
adc
push
jecxz
or
or
jae
shrl
push
popf
push
cmp
jmp
jmp
jo
nop
xor
scas
jg
fisubrl
xor
ds
xor
cld
mov
ljmp
jecxz
icebp
jb
or
enter
clc
push
mov
mov
pop
and
ds
jbe
aad
out
push
push
mov
cmc
cld
sbb
rclb
movzwl
insl
cld
stc
jae
mov
inc
bound
inc
or
cmp
jecxz
lret
call
loop
cmp
clc
xchg
cmpsb
jmp
cs
mov
mov
cmp
push
lahf
mov
mov
subb
pop
lret
jl
or
lahf
dec
jle
xchg
adc
push
jmp
sub
jnp
pop
jae
decl
cld
xchg
fisttpll
inc
jg
pop
popa
std
jmp
inc
and
call
push
inc
enter
jmp
inc
xchg
sub
loope
pushl
clc
jmp
inc
les
mov
ds
xchg
mov
sahf
test
sbb
xchg
inc
inc
mov
pushl
jl
mov
jle
popa
ret
xor
cmp
fbld
cmpsb
out
add
xchg
shll
dec
testl
lea
add
add
ljmp
lods
or
aas
xor
hlt
test
xor
ss
dec
xchg
adc
popl
push
jecxz
inc
shl
rclb
jmp
movsl
int3
xchg
scas
aas
jo
adc
inc
jne
xor
addb
leave
es
sub
test
jecxz
mov
dec
mov
aas
stc
sbb
cmpsl
dec
das
jne
xor
and
push
mov
pop
into
cmp
mov
or
sarb
add
push
pextrw
pushf
or
inc
or
inc
push
nop
pop
jg
mov
lods
xchg
ja
jle
js
or
push
mov
fs
ljmp
jg
mov
outsl
inc
leave
pop
out
xor
or
push
addb
ds
jg
clc
test
sbbl
into
push
push
jle
sub
inc
movsb
lods
mov
add
jg
fwait
movsl
outsb
and
test
jg
shlb
incl
push
repnz
inc
xchg
fidivrs
push
jno
xchg
fwait
cmp
fdivrl
mov
popa
mov
scas
cmp
ss
xchg
nop
cwtl
fwait
mov
fcmove
rcll
out
mov
sbb
jbe
and
mov
mov
xchg
fistpl
dec
dec
sbb
inc
shlb
js
sub
pop
subb
jmp
pushl
inc
push
jmp
push
cltd
insb
int3
cmpsl
movl
cmp
cli
mov
or
dec
mov
push
sahf
sbb
std
dec
push
fs
pop
fnstenv
das
ljmp
cs
pop
incl
cmp
push
dec
mov
faddl
inc
push
fdivl
inc
iret
or
inc
out
clc
lcall
push
clc
push
movsl
jae
movsb
jl
adc
push
push
xchg
cmp
xchg
outsl
call
jne
and
push
jo
jne
inc
push
lds
inc
pop
mov
fwait
lds
mov
lods
cmc
jb
cmp
dec
adc
or
and
das
repnz
and
js
sub
or
jg
ret
ds
dec
int3
add
in
mov
and
fmuls
mov
movsl
mov
lcall
icebp
mov
popa
sti
jbe,pt
mov
addr16
cld
out
xchg
add
lea
push
and
mov
pop
push
mov
inc
scas
pop
push
ret
mov
push
sub
or
decl
push
cmp
mull
int
pop
adc
aas
imul
xor
fistpll
dec
jne
pop
push
pop
mov
mov
rorl
fnstsw
lea
orl
xchg
cmp
incb
push
xor
mov
jmp
mov
fistps
dec
sub
les
addr16
cmpsb
pop
mov
inc
jmp
inc
sbb
daa
inc
lret
mov
dec
pushl
and
inc
mov
decl
lock
push
jge
push
cmpb
jb
iret
sbb
shlb
ljmp
pushl
mov
icebp
icebp
inc
push
push
fisubl
dec
and
outsb
loop
jmp
sbb
mov
dec
rcll
add
or
js
mov
sar
or
mov
dec
dec
in
add
xchg
das
push
shll
pop
sub
call
or
fwait
push
xchg
sbb
dec
gs
lcall
test
leave
sbb
and
add
icebp
out
or
rorl
push
jge
les
xchg
faddl
dec
fcmovb
gs
inc
push
or
nop
daa
xchg
jp
out
mov
jae
adc
adc
outsb
lcall
pop
test
lods
push
fistps
movsb
cltd
jns
ss
mov
mov
mov
or
clc
pushl
fwait
addr16
mov
nop
imul
loope
js
push
mov
or
and
das
ljmp
clc
mov
into
add
sub
jg
xor
and
inc
push
xor
call
icebp
gs
js
jb
xor
lods
mov
fildll
fnsave
movsl
popf
lret
js
into
lcall
sti
pop
cmpsb
jne
or
std
jge
sbb
daa
push
imul
call
vmwrite
pop
mov
loopne
pop
cwtl
dec
fcompl
sub
sahf
inc
call
add
dec
fisttps
insb
mov
out
add
mov
pop
insl
scas
and
inc
mov
mov
cmp
pop
mov
call
lea
insl
lret
je
movsl
mov
sbb
xchg
scas
mov
int3
push
cld
sbb
push
push
jno
inc
sar
xchg
cmp
pop
jo
or
sbb
xor
pop
jg
cwtl
sub
sbb
lds
add
mov
out
inc
clc
jg
pushl
mov
scas
out
out
and
jb
iret
or
xor
push
inc
sbb
in
xor
ljmp
dec
fisubl
xor
jo
cmp
dec
lret
pusha
cli
ja
in
scas
insl
iret
jge
mov
mov
cmp
jge
dec
mov
cs
or
rol
sub
sbb
flds
dec
aas
pop
push
adc
cmpl
stos
popf
cmpsb
xor
call
lods
and
mov
xchg
lods
or
ljmp
std
xor
jne
sbb
fwait
inc
and
out
pop
pushf
jns
pop
xchg
sbb
xor
mov
and
xchg
sub
dec
jb
add
jmp
sub
out
or
jbe
int3
inc
adc
inc
les
pop
pop
es
cmp
lcall
loopne
mov
sub
outsl
add
mov
dec
inc
push
stc
sub
push
loopne
dec
pop
jle
push
ror
inc
mov
lcall
adc
jle
pop
inc
dec
popa
jmp
or
pop
fsubl
ja
jmp
iret
das
ja
cmp
test
adc
sbb
mov
stos
dec
inc
test
xchg
in
in
xchg
sbb
incl
scas
sbb
ss
add
mov
cli
idivb
sub
adc
dec
cltd
and
and
cltd
js
out
dec
dec
push
cwtl
lret
les
outsb
pop
fsubrs
ljmp
mov
lcall
push
and
xor
push
jno
adc
push
xor
add
filds
add
test
xchg
mov
lcall
jp
incl
cs
mov
mov
jg
dec
inc
aaa
clc
add
and
xchg
pop
or
mov
xchg
add
mov
xchg
es
fsubrl
std
push
dec
dec
stos
dec
popf
repnz
push
jns
fs
call
pop
aaa
push
lds
pop
inc
push
js
push
ret
lcall
fwait
outsl
sahf
push
imul
cli
mov
popa
push
or
icebp
pop
dec
inc
fdivl
js
cmp
cltd
bound
push
xor
push
jecxz
push
or
jnp
push
jb
jbe
notl
inc
les
inc
or
pop
xor
xor
and
jp
push
mov
sahf
lcall
mov
inc
sti
mov
pop
decl
push
arpl
es
push
jns
cmp
fs
jbe
add
shl
and
or
loope
jg
lcall
push
dec
insl
fistl
dec
jbe
xchg
das
mov
lock
incl
arpl
mov
in
dec
jecxz
insl
popa
lahf
and
push
or
mov
insb
out
mov
xchg
mov
mov
decl
xor
inc
push
or
adc
movsb
xchg
mov
push
repz
mov
pop
ds
fidivl
lds
jg
or
rorl
mov
push
cld
out
fldt
out
rol
inc
int3
int
pushl
push
pushf
shrl
pop
into
cmpsl
arpl
dec
push
ja
rcrb
out
pushl
insb
addr16
push
pop
rcrb
push
ret
cmp
push
les
pushl
jmp
dec
pop
cwtl
push
fldl
push
imul
outsb
out
pop
jno
sahf
fbstp
sbb
decl
mov
stos
pop
jo
loopne
fld
adc
dec
addl
mov
lret
ljmp
ss
out
movsb
cmpsl
pop
cs
push
iret
lods
mov
addr16
fistpl
jo
push
cmp
sbb
jmp
adc
ss
and
js
shll
fistpll
es
xor
lret
adc
adc
inc
loopne
xchg
imull
enter
mov
cli
sti
dec
inc
sub
push
push
out
lret
je
add
xchg
sbb
fildl
push
jo
int
and
into
sbb
adc
out
in
jmp
incl
xchg
inc
push
popf
pop
call
out
push
loopne
mov
push
stc
icebp
pop
xchg
outsl
pushl
leave
sbb
xchg
js
scas
mov
push
shrl
test
insb
lcall
fneni(8087
scas
xchg
mov
inc
fimull
data16
int
das
rcll
push
inc
cwtl
setge
mov
add
dec
in
je
fwait
aaa
mov
and
out
and
movsb
mov
xchg
cwtl
repz
incl
hlt
adc
and
push
push
popf
pop
jae
loopne
jge
mov
cli
insb
fsubr
inc
ret
fcompl
sub
pop
xor
cmp
fisttpl
cmp
mov
pop
ds
push
call
adc
in
test
inc
lea
incl
push
cmp
jae
gs
addr16
fwait
incl
mov
movsb
jb
scas
insl
fists
adc
inc
das
pop
leave
aas
incl
dec
fs
mov
loopne
push
sub
adc
sub
clc
adc
call
mov
aad
mov
mov
pop
inc
jo
stc
mov
lret
and
fsubs
inc
repz
jge
cmp
add
sbb
lea
fnstsw
je
push
fcoml
cli
and
cmpsb
jge
or
pushf
out
cli
pop
shlb
fnsave
adc
mov
push
orl
into
mov
hlt
and
sub
mov
decl
jns
xchg
dec
xchg
jae
jns
cmp
test
scas
adcb
js
mov
push
push
rolb
test
fs
mov
lcall
jmp
mov
jge
dec
lcall
nopl
add
mov
jg
pop
push
mov
ljmp
incl
loope
jmp
mov
mov
xchg
dec
push
rcrl
mov
jl
inc
sub
dec
add
mov
enter
pusha
pop
pop
mov
icebp
mov
into
xchg
xor
std
movsl
sub
test
ljmp
xchg
or
mov
dec
push
loope
mov
fimuls
jg
cmp
sub
fisttpl
shrl
inc
mov
punpcklwd
dec
nop
scas
jno
pop
mov
cmpsb
stos
inc
xor
rcrb
push
nop
test
dec
cmp
mov
popf
shll
cmp
nop
cmp
inc
push
mov
pop
arpl
xor
jl
sbb
int3
xor
pushl
cmp
mov
xchg
fs
push
or
mov
cltd
xchg
fwait
les
xor
and
pop
push
arpl
add
jo
fwait
incl
js
pop
inc
fcompl
pop
faddl
jnp
cmp
adc
sub
fists
mull
cwtl
xlat
incl
mov
xchg
sbb
cmpb
sub
es
xchg
rcrb
inc
in
mov
sbb
pushl
add
mov
inc
inc
adc
std
xchg
cs
cltd
ja
lock
cmp
cwtl
fisubrs
push
int
pop
lcall
push
jno
incl
das
daa
adc
scas
ds
mov
inc
mov
pushl
push
jne
inc
lret
clc
adc
push
std
lea
sarl
ficoms
lods
push
cmpsl
sarb
outsl
lds
jmp
fldenv
pop
or
adc
scas
mov
jle
mov
outsb
push
adc
sarb
outsl
xchg
ss
and
jg
pop
push
les
mov
aaa
jmp
pop
ljmp
xor
jns
push
popf
mulb
insl
cwtl
sub
int3
xchg
cmpsb
lods
xor
leave
and
pop
adc
iret
xchg
cmc
dec
push
shlb
dec
pop
sub
mov
mov
test
popa
jmp
push
cld
jl
stos
add
xchg
mov
jl
mov
xchg
insl
pop
out
stos
ss
decl
js
imul
mov
xchg
psrld
ljmp
sbb
sbb
cmpl
scas
inc
jo
lea
ficompl
jmp
addr16
sbb
dec
jno
dec
cmp
aaa
dec
xor
mov
lcall
mov
xchg
xchg
jmp
bound
push
test
mov
adc
lods
decl
dec
xor
bound
prefetch
sbb
lds
sbb
or
push
and
inc
pop
sbb
arpl
scas
je
sbbl
inc
clc
ljmp
mov
pop
add
cs
arpl
pop
ds
xchg
leave
incl
or
outsl
sarl
or
nopl
mov
or
mov
or
cmp
jge
jl
dec
popf
cmp
jb
cmpsb
faddl
sbb
xor
test
inc
in
fsubrl
push
cmp
pop
add
mov
push
dec
xor
jge
mov
sahf
sub
xchg
pop
cmc
dec
je
outsb
sti
mov
and
inc
lea
pop
mov
decl
pusha
adc
mov
pop
inc
mov
adc
js
cmpl
push
sbb
sbb
jp
mov
add
roll
lcall
xor
pop
das
shll
mov
lcall
inc
dec
mov
push
pop
fstpt
mov
or
mov
fstps
in
inc
jl
aam
mov
popf
xchg
mov
scas
push
inc
je
add
mov
pushl
jg
fwait
jle
mov
adc
mov
add
adc
mov
ds
fwait
pop
adc
insb
lods
jecxz
push
mov
ja
xchg
lds
lds
adc
push
decl
sbb
jge
andl
mov
adc
outsl
testl
ljmp
mov
sub
and
pop
inc
popa
pop
clc
daa
sub
data16
sub
inc
ja
mov
fnstsw
xor
int
fnstenv
stos
inc
jbe
out
adc
xor
mov
mov
xchg
jg
leave
inc
jg
subl
movsb
pushl
les
inc
popf
pop
push
mov
jle
inc
cs
mov
decl
jo
or
fwait
mov
jp
fucomp
push
jne
enter
std
cmp
add
mov
push
adc
cmc
dec
pop
scas
cwtl
push
add
pushl
les
movnti
cwtl
nop
movsb
scas
mov
notl
push
sub
andb
fwait
lcall
lods
adc
mov
sub
pop
pop
enter
repnz
inc
ljmp
mov
scas
rclb
xchg
shl
mov
or
mov
cmp
lods
ret
push
clc
roll
xchg
mov
cld
out
mov
xor
fst
jnp
cmpsl
mov
icebp
movsl
mov
pushf
into
lds
stc
xchg
cltd
xchg
pop
adc
call
mov
sahf
cmpsb
cli
sar
mov
int3
mov
idiv
sahf
movsl
mov
lods
lea
fwait
mov
incl
mov
fcmovu
in
pushf
mov
call
ffreep
in
inc
std
xor
stos
loopne
mov
jmp
mov
mov
iret
cli
cmpsl
cwtl
sahf
mov
test
pushl
cmpsb
ret
cld
mov
in
mov
scas
test
mov
jg
pop
int3
ret
mov
mov
les
push
dec
repnz
cltd
pop
jae
push
cli
fdivl
std
mov
push
xchg
lock
gs
and
mov
das
inc
pushf
pushl
je
push
adc
data16
push
pop
in
push
inc
adc
jbe
or
mov
sar
incl
lcall
pop
dec
jnp
addl
cmp
pop
mov
xchg
dec
mov
outsl
pop
push
pop
shl
mov
and
add
jmp
sbbl
out
sub
inc
cmp
ja
add
and
cmp
out
call
xor
cwtl
aaa
push
mov
adc
sub
shlb
or
stc
jo
mov
dec
mov
fnstenv
lcall
into
adc
idivl
jp
popl
ja
mov
inc
jbe
outsl
arpl
int3
mov
cmc
or
cli
mov
xchg
lcall
das
xor
pop
adc
cwtl
add
js
push
dec
mov
out
xchg
push
insl
mov
xchg
bound
cmpsb
in
sbb
mov
clc
pop
fs
lods
push
fs
cmpsl
sbb
addr16
lcall
inc
out
pop
dec
test
jae
push
int3
mov
dec
mov
orb
out
mov
dec
outsb
inc
in
mov
inc
sub
push
je
and
lcall
jnp
mov
sbb
dec
mov
and
pop
add
js
jb
dec
or
stos
inc
ret
dec
outsl
jae
dec
push
fs
push
popf
xchg
popa
adcb
push
inc
mov
sahf
arpl
lcall
movsb
sbb
imul
push
mov
pop
push
insl
adcb
dec
js
lcall
inc
nop
mov
bound
and
cmp
jmp
mov
inc
or
inc
jo
sub
popa
shrb
dec
incl
cmp
or
mov
lcall
sbb
adc
aaa
pop
decl
lock
cmp
cld
xor
call
aam
aaa
cld
cmp
in
push
mov
incl
dec
pushl
clc
insb
gs
loopne
insb
cli
adc
hlt
cmpsl
jno
ljmp
pusha
fimull
aad
add
add
mov
or
xor
jmp
lods
enter
test
loop
xchg
or
out
jg
lods
les
add
cmp
add
mov
and
jg
mov
push
hlt
dec
jbe
xchg
and
jg
push
or
push
lock
dec
add
xor
ds
pop
mov
stos
rcll
nop
xor
arpl
pop
xlat
dec
call
adc
es
repnz
decl
mov
sub
sbb
ljmp
ss
inc
sbb
popf
mov
push
cmpsb
mov
arpl
dec
sbb
stc
or
incl
outsl
subl
push
inc
or
out
pop
lcall
pop
sbbl
insb
decl
int
push
out
leave
movsl
push
jp
sti
enter
call
inc
int
filds
incl
ja
jo
push
jle
pusha
dec
dec
ret
push
rcll
dec
cmp
pop
test
incl
arpl
ret
jg
jle
lds
dec
push
push
adc
push
repz
incl
add
into
inc
jg
push
cli
jmp
pop
fsts
inc
in
push
in
cmp
incl
pop
dec
inc
rolb
repnz
dec
push
jne
rolb
arpl
jge
inc
gs
icebp
mov
inc
pop
addr16
out
fs
pop
jo
xchg
mov
dec
jo
push
cmp
or
hlt
andl
mov
and
fcomip
loop
mov
inc
pop
call
push
imul
pushl
jg
js
outsl
push
dec
push
inc
jae
pop
addr16
xor
mov
push
call
sub
outsl
inc
ficoml
adc
jg
mov
loopne
push
dec
inc
mov
imul
fwait
out
clc
pushl
mov
stos
je
inc
and
mov
je
sub
dec
adc
pop
std
mov
or
mov
testb
jne
loope
das
jb
lcall
lds
jne
ja
mov
test
xchg
mov
mov
mov
rcrb
orb
into
pusha
movsb
shrb
fwait
add
cwtl
pushf
fiaddl
adc
mov
xchg
mov
insb
or
add
aaa
mov
adc
dec
aam
orb
sub
movsl
ja
mov
loope
push
push
dec
adc
inc
xorb
jg
imulb
add
gs
jne
xor
jge
gs
pop
shrb
push
int
pushl
js
sbb
mov
arpl
scas
push
pop
lods
jg
pop
icebp
mov
pusha
inc
pop
mov
out
jle
jbe
insb
mov
inc
scas
jnp
cwtl
xchg
or
scas
push
pushf
jae
jge
insb
cmp
inc
jg
bound
jmp
pushl
fnstsw
jbe
andl
xlat
dec
test
ffreep
jmp
push
rcrb
mov
mov
cmp
lock
imul
jg
fnstenv
sub
mov
mov
ja
push
mov
cld
xchg
sub
pushl
jmp
mov
outsb
addr16
jg
fwait
ss
push
jge
adc
xchg
xchg
aas
movsb
and
lcall
inc
fiaddl
sub
mov
mov
out
mov
fisubs
cwtl
aas
cld
fildll
push
iret
adc
xchg
shll
dec
dec
sub
jg
ja
ljmp
mov
mov
adc
and
jg
scas
sub
es
test
xor
addr16
mov
ljmp
test
loopne
stc
sbb
orb
popa
pop
sbb
sbb
pop
icebp
xor
inc
lods
xchg
and
xor
jle
cmp
fisttps
sub
test
mov
stos
inc
jne
pop
xchg
lods
and
decl
jecxz
test
or
sub
and
add
icebp
jg
cmpsl
orb
dec
jge
mov
test
jmp
mov
lods
push
outsl
xor
daa
xchg
mov
stos
test
popf
fistl
cmp
cwtl
mov
mov
or
call
push
mov
jge
jl
mov
and
scas
jecxz
jo
iret
push
mov
fucomp
clc
iret
insb
push
xor
insb
dec
aam
fisttps
stos
mov
bound
push
lcall
dec
adc
lcall
pop
int3
arpl
call
call
imulb
pop
push
push
add
jp
jnp
add
jbe
mov
lods
dec
mov
xchg
fildll
cwtl
push
les
imul
popw
loopne
inc
ds
cmp
lcall
mov
dec
lret
test
jno
inc
in
outsl
cmp
pop
push
add
into
je
sti
adc
inc
movl
xlat
pop
push
iret
jg
and
pop
scas
cli
add
shll
fwait
cmpl
xchg
ljmp
and
jno
sub
incl
not
lahf
inc
cmp
nop
cltd
lcall
push
cs
pop
clc
dec
daa
pop
inc
jae
imul
xchg
cwtl
movsb
ljmp
inc
loope
loopne
js
outsl
cmp
outsl
push
add
adc
sub
jg
jmp
or
cmp
mov
sbb
jno
xor
pop
lock
popf
xchg
test
push
add
xor
pop
mov
scas
inc
lock
inc
shr
ljmp
xor
dec
sub
cwtl
test
xor
popa
test
cmp
lds
in
push
ds
sbb
icebp
xchg
pop
or
cmp
decl
imul
cld
mul
gs
call
pushl
or
outsb
repz
gs
outsb
in
adc
dec
int3
ret
std
filds
test
jns
pop
pop
cld
sbb
ljmp
jmp
push
into
das
inc
in
je
aas
jbe
inc
fnstsw
xchg
jb
sbb
imul
addr16
test
gs
xchg
jnp
shlb
test
inc
cwtl
mov
pop
jae
sub
pop
jl
cmp
outsb
fstl
imul
push
bswap
es
sbb
jmp
sbb
lahf
mov
iret
rcrb
pop
add
filds
je
fucom
jmp
pushf
sarb
push
inc
outsb
xlat
outsb
mov
movsb
movsb
flds
int
jle
scas
push
pop
or
xchg
lds
xchg
ds
aas
insb
pop
jg
ja
cltd
std
push
into
xchg
dec
inc
out
and
inc
das
imul
repnz
push
push
dec
fcoml
inc
loop
pop
js
jle
jb
es
pop
loopne
and
lods
cmpsl
ja
pop
out
push
jmp
ja
and
dec
loopne
outsb
mov
jmp
pop
outsb
pop
fidivrs
cmc
pushf
xchg
js
jmp
decl
jg
dec
clc
das
push
jecxz
mov
stc
pop
pop
inc
push
movl
mov
out
pusha
cli
or
push
cmp
adc
call
jmp
cli
adc
sbb
adc
jns
sbb
js
ja
popf
adc
dec
push
cli
jg
out
xchg
jle
jne
pop
fcomps
cli
push
mov
jns
pop
lea
push
jno
jp
mov
push
ljmp
imul
dec
lcall
inc
fcomp
sub
jne
dec
pop
data16
push
and
arpl
call
add
scas
popa
inc
fs
pop
pusha
leave
push
jb
jbe
dec
mov
or
ret
fbstp
lcall
sarl
push
pop
adc
mov
je
outsl
scas
sar
cwtl
pop
or
inc
adc
and
rol
push
test
pop
pop
inc
rorl
int
popa
inc
rcrb
push
mov
jle
jo
jnp
mov
mov
sti
lcall
mov
or
gs
adc
lods
cs
xor
das
ret
pop
push
jae
das
test
int3
cmp
dec
lcall
pop
adc
push
dec
mov
pusha
xchg
jmp
fisttps
pop
dec
test
loopne
cld
aad
jnp
loopne
jle
repnz
cmp
loopne
lcall
xor
adc
adc
pop
jp
mov
jb
xor
xchg
pop
cwtl
std
mov
mov
imul
loopne
pop
out
gs
imul
inc
cld
push
mov
lds
inc
out
call
cwtl
push
cmp
imul
inc
je
je
cmp
jg
jne
mov
sub
outsb
addr16
test
out
xchg
and
inc
data16
outsb
aaa
push
pop
jmp
push
mov
pop
add
sbb
pop
cmpsl
lret
pop
push
in
stc
incl
hlt
mov
aaa
mov
inc
pop
push
rorb
push
mov
lods
pop
cmpsl
mov
push
imul
lds
call
jg
decl
push
fstps
sarl
arpl
add
fisubrl
dec
add
or
sub
fildll
mov
icebp
int
andb
xchg
mov
push
jmp
add
xor
or
jmp
adc
and
fstpl
cmp
cmp
adc
and
daa
repnz
jo
pop
call
jg
roll
push
gs
les
pop
cmp
sahf
fildll
dec
xchg
mov
adc
fidivrs
addr16
xor
or
fcoml
fstpl
call
pop
lret
ja
dec
in
jbe
add
flds
ljmp
jae
dec
xor
or
out
sbb
aaa
and
xor
lea
jmp
cmp
lods
popf
jne
sarl
out
or
inc
jle
fmuls
decl
jmp
mov
les
lcall
pusha
iret
sbb
jno
adc
loop
ja
add
sbb
in
jo
add
cmp
ljmp
mov
or
shll
out
push
jg
xchg
mov
dec
xor
xor
rolb
lds
inc
repz
jle
jbe
sub
sbb
and
push
inc
xor
decb
jp
push
les
jp
sub
test
incl
clc
mov
add
insl
adc
test
push
loop
mov
add
pop
cli
sub
and
lret
jo
inc
out
cs
leave
in
les
test
xor
in
mov
sar
data16
stos
aam
fmuls
xor
or
shl
fcomip
incl
and
test
and
adc
sub
mov
and
pop
cld
outsb
mov
inc
sarb
fs
mov
adc
roll
lods
fdivrs
inc
movsb
clc
jg
mov
inc
roll
xchg
fidivl
push
addb
jbe
ror
cmc
jg
shlb
mov
mov
dec
and
dec
and
and
dec
sbb
and
lcall
add
bound
xchg
movsb
mov
xor
xchg
xchg
imul
rorl
mov
sbb
pusha
jb
movsb
fs
and
xchg
movsl
stc
sub
dec
mov
add
inc
cmovae
jp,pt
cs
iret
sbb
push
jp
ud0
mov
sbb
xor
leave
and
adc
repz
xchg
les
cld
jg
pushl
out
add
aaa
push
adc
xor
cs
out
sub
lcall
adc
pop
pop
ss
ds
dec
fisttpll
fs
and
outsb
rorb
inc
or
xor
in
in
mov
call
jg
and
sbb
in
add
cmp
or
lret
dec
adc
std
shlb
js
lods
call
jge
repnz
pop
adc
decl
adc
or
mov
mov
xchg
aad
inc
je
sbb
dec
push
bnd
decl
xchg
pop
in
cmpsl
std
mov
pop
pop
cmp
test
add
inc
repnz
pushf
mov
mov
dec
in
lcall
stos
mov
mov
lret
jne
pop
out
mov
cld
lcall
cli
push
addr16
push
lahf
push
movsb
sbb
mov
bound
push
or
decl
test
fsubs
xor
jo
push
in
fildll
pop
xchg
or
dec
in
sub
jo
inc
out
cmpsb
pop
std
pop
pop
push
lods
jb
jbe
cmp
subb
ret
push
int3
mov
add
repz
jmp
jle
mov
movsl
jg
sbb
cmc
cltd
xchg
scas
cld
mov
decl
call
pushf
pop
retw
mov
pushl
pop
clc
sbb
push
xchg
mov
push
mov
dec
inc
iret
ss
jnp
adc
out
xchg
push
insb
repnz
clc
call
mulb
pop
bound
mov
or
fldcw
cmpsb
dec
xchg
jg
cwtl
lret
lret
xor
sub
xchg
adc
std
incl
out
aam
ljmp
or
fldl
incl
ficompl
jae
push
loop
xchg
add
es
mov
or
xchg
js
das
cmpsb
add
and
jne
into
cwtl
adc
sbbb
or
call
jmp
push
icebp
aaa
mov
jmp
inc
sbb
jge
jbe
push
or
dec
es
xlat
mov
incl
ja
lea
divl
inc
mov
sbb
cmp
mov
pop
fs
incb
mov
add
push
sbb
mov
ret
std
shlb
in
or
xchg
xchg
dec
jecxz
pop
pop
cld
cmp
loopne
mov
push
mov
insl
cmp
mov
aas
outsb
xor
clc
outsl
adc
push
or
pop
int
mov
cmp
or
icebp
add
aaa
jbe
insb
lds
pop
lret
lcall
and
int
dec
pop
sbb
mov
sub
sbb
push
dec
push
push
in
aas
std
das
es
sahf
cmpsl
test
dec
ret
flds
in
or
mov
push
push
pop
sbb
and
xchg
xchg
inc
aaa
push
fistps
xchg
aad
out
mov
fsubrs
test
sarl
lea
sar
lret
popa
int
cmp
cwtl
insb
into
and
in
add
call
push
fnsave
mov
dec
fmull
je
testb
pushl
and
leave
sbb
jbe
xor
jmp
push
jo
add
push
xor
jle
jecxz
adc
int
pop
and
popa
rcrl
and
jg
push
or
push
adc
xor
jg
mov
sub
xor
mov
out
or
scas
repz
aas
mov
sub
sub
adc
mov
xor
leave
rcrb
adc
mov
inc
xchg
and
call
fdivrl
je
test
xor
pop
push
dec
xchg
push
popa
mov
mov
pop
adc
mov
les
fwait
push
jl
decb
push
cmp
fs
jl
or
jle
cmp
adc
sub
sarb
daa
cld
and
das
ljmp
jle
aas
test
mov
cld
cmp
fdivrl
push
mov
xchg
test
add
push
sti
aas
mov
mov
mov
xor
out
cwtl
repnz
call
sti
aaa
dec
outsb
stos
jl
jb
das
xchg
mov
jmp
inc
inc
mov
pusha
imul
cli
sbb
ljmp
std
jg
mov
loopne
push
cmp
xchg
jae
push
sbb
insl
adc
mov
mov
lock
dec
xor
inc
in
inc
pop
jbe
stos
cmp
jbe
movb
inc
dec
inc
in
aaa
bound
inc
es
sub
addr16
cmp
and
stos
int3
xchg
cmpsl
fs
cmp
fadds
scas
in
or
out
cli
lcall
popa
sbb
push
lock
mov
add
sqrtps
pop
dec
call
push
dec
insl
pushf
jecxz
xor
xor
arpl
movsb
mov
cmp
mov
pop
pop
pop
out
or
cmpsl
bound
std
mov
mov
jo
lods
mov
xchg
test
jl
push
cmp
push
test
jg
and
pop
mov
or
cmpsl
mov
sbb
jb
and
sub
mov
mov
stc
call
mov
xchg
cmp
mov
filds
aas
je
adc
decl
mov
ljmp
sbb
ret
mov
das
xor
aas
filds
cmp
fists
xchg
popa
icebp
add
push
mov
decl
jo
pop
mov
mov
mov
mov
stos
test
adc
stos
lods
jl
into
add
mov
xchg
xchg
xchg
pop
loopne
clc
lahf
sbb
rorb
les
fbld
hlt
add
push
loope
je
gs
push
dec
jnp
daa
jne
int
inc
pop
or
push
push
pop
mov
jnp
dec
xor
push
ljmp
aam
xchg
stc
test
mov
xchg
mov
mov
idiv
mov
cmpsl
add
mov
inc
jmp
shlb
adc
dec
mov
call
insl
push
xchg
mov
mov
and
sbb
mov
push
mov
pop
lcall
lcall
test
dec
sti
xchg
sub
dec
std
pop
test
incl
sbb
mov
pushf
xorb
hlt
popf
push
pop
mov
mov
dec
dec
or
pop
and
mov
sti
es
xchg
mov
int3
xor
inc
jmp
out
xchg
add
lea
and
out
adc
shrb
loop
pop
decl
xchg
xchg
xchg
jae
inc
inc
jne
ss
test
cmpsb
adc
mov
sbb
sti
lock
adc
dec
sbb
das
inc
movsl
cmp
cltd
rolb
ficompl
imul
jg
add
faddl
cltd
into
sbb
inc
jno
mov
pop
add
jge
fildll
fisttpll
push
mov
stc
sub
lret
inc
call
aaa
inc
aam
ret
imul
push
test
push
insb
push
mov
jo
lods
loop
mov
mov
jg
sahf
pop
loop
jnp
mov
mov
test
mov
rorl
in
outsl
sbbb
test
mov
ret
push
mov
les
out
imul
std
decl
int
pop
out
sub
ret
shll
lahf
add
mov
iret
outsb
ljmp
aaa
aam
push
or
jb
outsl
pop
pop
std
sub
ljmp
inc
xor
fsts
ja
sbb
pop
sub
cmpsl
aad
js
std
stos
bound
rolb
sbb
aaa
out
sbb
fdivrl
js
fldl2e
scas
ljmp
jge
push
int3
mov
pop
aam
call
inc
fimuls
fcoml
je
push
int3
push
pop
sar
call
pop
dec
jne
in
inc
fbstp
adc
dec
clc
cmp
stos
mov
loope
jo
cmpl
lcall
cwtl
std
mov
push
leave
push
jae
add
fwait
rcll
out
sub
dec
fcomip
push
ss
dec
mull
mov
int3
jne
jp
ljmp
loope
fiadds
inc
nop
fwait
ja
xchg
pop
lahf
dec
push
leave
sbb
pop
les
push
popa
fdivr
ljmp
dec
jno
insl
push
sub
inc
pusha
xchg
lret
insl
jne
icebp
dec
inc
mov
dec
jb
fstpl
or
inc
fsubs
out
lods
sarb
frstor
out
sahf
stc
push
call
call
in
lcall
rcll
push
ljmp
and
mov
das
call
pop
shlb
pop
dec
sahf
push
pop
push
loope
mov
xchg
popa
je
outsb
out
push
inc
les
ds
pop
pop
pop
cmp
movsl
clc
pusha
icebp
inc
rorl
push
adc
test
push
out
pop
push
in
and
pop
inc
xor
pushl
or
cld
inc
shlb
dec
fmull
pop
fistps
pop
fimuls
push
adc
mov
dec
roll
lods
out
dec
test
jae
xor
push
xlat
mov
fisttpl
movsb
mov
mov
aam
int3
push
jl
fwait
fwait
mov
push
ret
push
int3
pop
je
sahf
leave
insb
fistps
in
cmpl
outsb
mov
push
ffree
rolb
data16
bnd
lret
inc
jl
sbb
ljmp
dec
push
fdivl
push
inc
cltd
lock
ljmp
jno
mov
pop
std
mov
not
filds
add
adc
inc
sarl
aaa
pop
mov
push
ljmp
stos
imul
jmp
mov
fdivrp
loopne
dec
xor
mov
xor
xor
inc
loope
jbe
lcall
insl
sti
mov
hlt
mov
dec
idivl
mov
xchg
dec
in
leave
fcomip
incl
inc
or
push
inc
sub
pushf
imul
dec
rorl
cmc
push
pop
ret
loop
inc
ret
loopne
pop
rorl
in
fldt
ficomps
add
insb
into
push
clc
push
cli
outsl
fisttps
aam
rcrb
fldenv
cli
inc
ds
jbe
das
fidivrl
or
test
lods
xchg
repnz
or
push
fstl
in
cli
arpl
call
loopne
inc
mov
fmul
fs
lods
mov
pop
and
js
mov
out
arpl
pop
push
test
ljmp
jo
pop
je
add
cwtl
mov
xor
add
sub
sub
push
push
dec
leave
adc
cmpl
adc
ds
out
dec
cld
or
inc
test
cld
cmp
xchg
cltd
addl
es
outsb
ljmp
stos
in
imul
add
test
xchg
jne
push
sub
ljmp
inc
icebp
inc
dec
pop
inc
pop
jno
mov
je
push
push
add
or
dec
loopne
mov
inc
imul
addr16
fs
push
std
icebp
mov
pop
mov
loope
lock
rorl
stos
lea
movsb
push
pop
dec
test
movsl
push
inc
mov
jmp
out
jo
inc
fadd
out
inc
inc
mov
rorb
pop
loopne
bound
push
sti
push
les
arpl
xor
int3
jl
mov
cli
pop
hlt
mov
loopne
inc
add
mov
loopne
push
incl
js
mov
jmp
jb
lods
push
sub
lahf
pop
loop
js
cmpl
test
mov
fld
fdivs
call
int3
imul
jnp
xchg
push
int
push
repnz
cmp
xchg
mov
loop
dec
outsl
inc
lret
xor
ret
push
jnp
bound
sahf
pop
sbb
ja
call
call
dec
popa
pusha
stc
push
jmp
push
fisubl
fsubl
in
mov
and
call
test
and
stos
decl
negl
mov
and
dec
test
jmp
out
rcll
leave
out
xor
pushf
ds
lock
jbe
lock
into
push
and
push
pop
inc
or
ljmp
nop
decb
fbld
cmp
sbbb
fildl
int
jne
pop
jg
or
fsubl
fbstp
push
rorb
mov
lcall
imul
stos
mov
mov
sub
pushf
lahf
je
clc
cmp
dec
cmc
mov
cmp
fcomip
and
dec
iret
cmp
scas
stos
nop
popa
in
in
push
adc
mov
mov
scas
inc
ss
shll
rolb
shl
into
insb
push
dec
pop
fcmovb
movb
ja
add
inc
push
test
sub
lcall
pushl
lea
mov
test
cltd
sahf
insb
fcompl
inc
aad
decl
bound
fimull
addb
js
movsb
dec
in
push
cmp
mov
fcomps
pop
sub
push
dec
std
sub
sub
xor
icebp
ljmp
call
inc
jmp
jo
shlb
lea
lcall
pop
xchg
gs
jns
inc
jmp
inc
mov
pop
pop
mov
inc
imul
push
je
rorb
mov
pop
inc
imul
je
shll
dec
push
fiaddl
adc
inc
jle
adc
pop
fdivl
fmuls
ss
inc
loopne
std
inc
xor
enter
fistpl
das
jmp
push
cld
jg
xor
inc
jle
adc
lds
push
daa
or
jnp
aam
mov
dec
clc
nop
jne
arpl
icebp
sbb
lds
es
jb
cld
adc
mov
sar
xchg
loop
ds
rolb
gs
sub
and
inc
push
jmp
lret
sub
sub
sbb
out
or
inc
pop
push
pop
pop
cmovnp
xor
and
pop
daa
xchg
mov
push
sbb
arpl
jmp
pushl
fiadds
popf
jp
ds
fwait
jbe
cmp
cmpsl
add
push
insl
iret
cs
incl
ja
sbb
push
sarb
pop
mov
xor
sbb
roll
test
sbb
test
repz
mov
lds
and
mov
ret
out
adc
push
push
inc
mov
fwait
pop
and
inc
insl
jne
jns
xchg
cs
sbb
jo
mov
insb
mov
mov
xchg
and
push
add
xchg
les
scas
ds
push
lods
stos
test
loop
ret
outsb
test
andl
fdivrl
jp
fwait
lret
mov
popf
add
mov
mov
inc
cmp
cmp
fs
scas
inc
dec
jnp
mov
mov
nop
dec
xor
mov
jmp
int3
sub
xorl
loopne
dec
repz
dec
push
sarb
mov
or
dec
xor
in
shlb
mov
insl
dec
push
loopne
insb
add
popf
mov
lods
fwait
out
out
jmp
es
insb
jne
inc
xor
cld
ffreep
aam
mov
f2xm1
imul
xchg
repz
rep
pop
and
aas
aas
fdiv
mov
xchg
ret
jmp
jg
leave
xchg
stos
mov
and
aad
outsb
cmpsl
adc
inc
cmp
rcl
test
push
xchg
movsl
stos
rcr
lcall
add
outsl
and
rcrl
pop
xchg
stos
stos
test
cwtl
mov
mov
cmc
test
outsl
lcall
mov
js
rol
dec
cmp
cmpsb
das
push
call
gs
test
orl
push
cld
shlb
std
cmpsb
mov
add
stc
jge
lea
dec
adc
sub
jle
stos
xor
or
mov
inc
imul
xorb
lcall
jmp
or
xchg
shrl
ficoms
icebp
jbe
sub
mov
ror
out
jmp
cmp
cltd
lcall
xorl
cmp
in
std
push
roll
insb
daa
xchg
xchg
lret
dec
andb
pushl
lea
push
dec
bound
cmc
sbb
dec
cmp
inc
cld
call
pop
lcall
sub
lods
and
testl
mov
fimuls
call
inc
and
and
fimuls
push
gs
xchg
xlat
filds
inc
xor
push
jae
mov
lret
mov
and
mov
cli
in
cld
mov
xchg
mov
dec
adc
or
lret
mov
mov
cmp
mov
add
movsl
xchg
jmp
cmp
xor
icebp
push
and
sub
push
lret
cmp
mov
xor
outsl
lock
popa
or
mov
nop
pop
or
insl
adc
ret
and
faddp
mov
adc
iret
lods
xor
test
xchg
mov
push
lret
dec
jno
call
inc
xor
insb
sub
iret
outsl
inc
cmp
pop
sub
pushl
mov
lock
addr16
pop
dec
pushf
xor
in
jp
icebp
xchg
sbb
mov
ficompl
sub
jg
push
sar
decl
cmp
pusha
mov
lcall
lcall
movl
inc
shrb
fs
xor
push
aad
and
dec
subl
dec
cli
adc
negb
adcl
imul
jbe
cmpsl
lcall
mov
cmp
ret
loope
dec
mov
mov
push
ss
xchg
jno
call
dec
ljmp
xchg
mov
xchg
dec
test
pop
orb
pop
and
icebp
cmp
mov
fsub
mov
cmpsb
in
inc
js
push
jnp
mov
movsl
test
les
jbe
out
jmp
cmp
inc
dec
jmp
lcall
dec
xchg
xor
and
mov
inc
ret
popf
push
ljmp
mov
hlt
sub
jg
out
test
push
fdivrs
jecxz
pop
jg
cs
outsl
pop
mov
dec
adc
mov
or
jg
push
add
scas
lods
movsl
or
out
fcomps
andb
mov
mov
mov
decl
stos
stos
js
cwtl
movsb
cmpsb
test
mov
inc
imulb
cmp
cwtl
push
arpl
dec
das
ss
jmp
mov
mov
test
test
cmpsl
lahf
cwtl
dec
out
outsb
mov
cmc
sbb
in
enter
mov
roll
call
sbb
jmp
lcall
push
xchg
cmpsl
mov
xchg
sbb
in
or
in
stos
jb
inc
mov
shlb
xor
xchg
push
dec
xchg
decb
mov
pop
cmp
sbb
and
xchg
mov
lds
daa
add
aas
fisttps
les
and
mov
lahf
lea
pushl
in
mov
loopne
das
jae
mov
dec
scas
xor
incl
insl
pop
dec
dec
je
bound
sbb
lock
push
add
lcall
les
ret
adcb
and
mov
lods
das
add
pusha
jp
fsubs
aaa
ficoml
sbb
cmp
aaa
mov
cmp
sbb
stc
jnp
and
lods
sbb
fcmove
hlt
mov
add
add
xor
lcall
adc
cmp
lods
pop
sbb
negl
jmp
or
xchg
sub
inc
adc
repnz
push
xor
out
mov
inc
push
cmp
push
xchg
repz
iret
xchg
call
mov
adc
adc
xchg
and
rcrl
lock
dec
mov
rcrl
xchg
cmp
arpl
incl
mov
xchg
mov
repnz
cmp
inc
int3
and
xchg
or
sub
ret
incl
iret
xchg
scas
or
add
aad
cmp
decl
lock
push
addl
es
xchg
lods
cmpsb
mov
mov
orps
cmp
out
jg
imul
mov
mov
int3
adc
inc
cmp
add
das
jle
pop
pop
ds
mov
or
lods
cmp
outsb
stos
fwait
cwtl
fisttpl
lods
cmp
scas
out
inc
daa
je
xor
add
dec
pop
or
push
lcall
incb
push
jae
ret
or
je
iret
pusha
adc
das
mov
adc
sbb
fs
gs
push
sbb
adc
mov
jmp
jbe
aas
lods
sahf
and
push
out
arpl
je
push
push
sub
inc
push
jb
loopne
les
add
jg
cmc
mulb
adc
in
mov
jg
sbb
int3
xor
lea
mov
xor
mov
mov
out
and
lret
inc
mov
je
adc
push
in
xor
add
push
leave
push
addr16
dec
pop
dec
daa
ss
dec
mov
in
movsl
testl
or
lock
ja
xor
sub
inc
push
lock
add
mov
arpl
cmpsb
xchg
mov
les
cmp
inc
movsl
cmp
movsl
mov
lods
add
pushl
pop
enter
rclb
xchg
lahf
or
mov
in
jns
aam
incl
lea
ja
push
inc
cmp
imul
stos
or
movsb
add
ljmp
dec
mov
add
xchg
or
or
clc
xor
enter
pop
and
sbb
cmp
aas
sar
mov
xchg
les
mov
push
bound
mov
lret
and
rcll
push
push
xor
les
xchg
mov
orb
jmp
rcl
adc
adc
add
add
lcall
je
mov
in
lea
nop
mov
aad
ja
sub
jp
add
iret
pop
mov
add
inc
lret
out
cmp
in
loopne
or
and
inc
mov
addr16
lock
sub
sub
mov
pop
pop
xor
xor
pushf
out
mov
mov
ljmp
aaa
je
xchg
sub
bound
fsubl
gs
loopne
xor
sar
jg
andl
push
int3
xor
push
dec
data16
jmp
xchg
or
shlb
stos
mov
pop
es
adc
pop
add
lcall
push
shlb
pop
xchg
cli
cmp
mov
cld
call
mov
outsb
fucomp
loopne
xor
adc
jg
add
sub
mov
or
lock
pop
fbld
lea
dec
jg
push
cltd
cs
jp
test
ret
mov
incl
stc
push
scas
xchg
mov
arpl
fnsave
mov
push
and
mov
pop
jmp
nop
outsb
loope
jb
inc
faddp
cmp
movsb
sbb
in
decb
incb
lahf
dec
jle
add
movsl
rcll
js
jg
shlb
add
mov
and
hlt
scas
push
js
sbb
stos
jbe
mov
fbld
cltd
adc
clc
mov
movsbl
pop
rolb
inc
arpl
xor
rcr
or
hlt
add
push
lcall
out
sub
cmpsb
lods
test
lods
fwait
mov
ret
inc
sub
test
mov
sahf
test
aam
and
sbb
xor
fwait
jbe
xchg
lret
mov
dec
mov
adc
pushf
aaa
cmpsl
inc
mov
mov
iret
lods
iret
cwtl
movsl
push
in
xchg
outsl
push
jmp
dec
les
adc
stos
lcall
dec
and
std
cmp
clc
adc
les
test
es
int
mov
outsb
clc
dec
les
cmp
cmpb
pop
push
dec
out
mov
gs
cwtl
mov
adc
push
insl
mov
es
jp
sub
out
sbb
mov
nop
sbb
shlb
orb
lret
popf
decb
decl
cmp
bound
cs
mov
repnz
and
sub
loopne
mov
cld
decl
loope
xchg
xchg
xchg
push
call
rclb
lock
les
cmpsl
cltd
xchg
jmp
ret
mov
sar
call
rolb
mov
ja
mov
or
cmp
outsl
clc
jo
xlat
movzbl
sub
sarb
mov
lcall
mov
call
jne
xor
mov
js
mov
pop
pop
xor
mov
rorb
pop
out
jmp
repz
push
mov
pop
cli
sub
addr16
sub
call
mulb
cmpsb
mov
scas
lea
movsl
incl
push
repz
jp
pop
lret
mov
int
jg
mov
iret
pop
mov
aas
dec
out
imul
jo
lock
call
mov
sbb
dec
inc
adc
pop
xchg
popl
adc
shrl
xchg
sbb
outsb
fdivrs
gs
clc
cmpxchg
imul
adc
movsl
mov
loopne
mov
mov
clc
fdivrl
mov
push
clc
jae
fists
cld
cmp
out
incl
and
pusha
loope
sbb
es
jmp
lods
pop
adc
push
xchg
dec
sub
push
ret
stos
daa
push
sbb
dec
and
imul
cld
decl
inc
out
mov
dec
jp
mull
outsl
ljmp
mov
xchg
cmp
pushl
jge
std
out
pop
addl
addr16
mov
shrb
lahf
push
mov
push
dec
out
insb
push
das
push
jl
insl
iret
push
dec
std
out
aam
push
data16
push
shl
es
decl
std
test
push
das
mov
in
icebp
pop
push
aas
shrl
xchg
pop
in
and
xor
push
fadd
sub
jg
fwait
push
jmp
xor
shll
xchg
jl
call
rcll
call
addr16
inc
sahf
dec
mov
dec
dec
iret
scas
add
outsl
mov
dec
adc
test
cmpsb
lock
ja
and
and
lock
mov
mov
sbb
stos
movsb
inc
mov
inc
cmp
inc
push
in
xor
int3
and
lock
aas
mov
cmpsl
mov
mov
scas
loope
call
mov
je
popf
ret
loopne
pop
ds
jno
jg
into
mov
andb
inc
insl
test
dec
pop
pushf
mov
mov
sar
xchg
xchg
push
lds
je
shll
xchg
dec
lea
jbe
scas
pop
movsb
movsb
lock
sarb
inc
aad
jb
int
pop
pusha
cmp
inc
scas
into
loop
jl
arpl
or
clc
add
outsb
lret
loopne
mov
pop
outsb
out
pop
adc
popf
aas
sbb
xchg
int
lea
clc
aam
pop
lds
sub
jl
std
cmpsb
decb
mov
inc
mov
push
repz
arpl
decl
lret
xchg
jg
jbe
rorl
push
xchg
xor
jmp
cmp
dec
into
aas
andb
sti
jg
out
or
jns
mov
or
insl
push
loope
jg
mov
lods
ja
ss
mov
push
gs
clc
loop
add
jp
shrl
pop
push
ds
push
call
sub
adc
out
inc
xor
cmpsl
sub
or
cmp
nop
pop
push
and
les
leave
fimull
aaa
cld
fbstp
fwait
push
mov
jle
leave
and
lock
aam
dec
inc
cmp
ja
dec
iret
add
push
add
cs
gs
sarb
pop
mov
dec
cltd
mov
sbb
mov
sarl
scas
pushl
and
jno
lds
mov
or
stos
and
call
int
call
xchg
xor
popl
push
add
clc
ss
mov
mov
mov
nop
adc
push
fwait
insb
stos
out
scas
xchg
aad
lods
or
cli
or
mov
or
inc
arpl
sbb
mov
pushf
or
xor
inc
xchg
sub
lods
cmp
psraw
jg
sahf
push
and
xchg
xchg
mov
mov
add
lcall
inc
xchg
push
push
sbb
daa
xor
mov
filds
into
xchg
xchg
movsb
jnp
inc
push
mov
daa
mov
into
xchg
mov
rorb
xor
push
lods
daa
js
push
sub
jl
mov
sub
scas
jl
mov
inc
xchg
sub
nop
movsb
add
bswap
sahf
lods
mov
cwtl
ret
decl
xchg
iret
or
pushl
ffree
jg
out
lcall
dec
add
fs
fisttps
jmp
or
mov
pop
mov
jp
clc
es
sub
mov
push
push
cmp
mov
xchg
push
pop
ret
cld
ljmp
mov
lods
lcall
inc
scas
jne
cmpsl
arpl
pop
jnp
outsb
cld
arpl
pop
negb
inc
mov
incl
push
bound
movsl
push
andb
stos
mov
mov
mov
fistpll
test
incl
jbe
push
push
sbb
movsb
faddl
movsl
cmpl
into
stos
mov
sbb
adc
and
push
cmpsl
mov
lcall
roll
lods
xlat
sub
mov
in
test
mov
ljmp
and
adcl
inc
or
push
inc
shlb
jns
iret
lods
ljmp
sbb
stos
and
loop
inc
pushf
xchg
mov
les
aas
pop
out
pushf
and
inc
push
sbb
loopne
shrl
in
mov
cli
push
sbb
mov
inc
pop
push
inc
adc
dec
shlb
lea
xor
aas
repnz
insl
test
fnsave
pushl
lds
clc
pop
pop
mov
ret
mov
inc
rclb
dec
leave
mov
push
push
aaa
dec
incl
xchg
mov
mov
sub
mov
and
pop
adc
clc
cld
mov
inc
sbb
ljmp
int
pop
and
je
dec
ret
icebp
mov
dec
push
icebp
cmp
in
and
sbb
gs
mov
adc
pop
mov
inc
out
mov
xchg
adc
das
cli
dec
ljmp
pusha
pop
inc
test
or
jl
pop
inc
cmpsb
dec
jg
lock
out
addr16
fdivl
scas
dec
cs
and
mov
push
jmp
xorb
addb
pop
mov
jg
ljmp
jge
aad
push
dec
fs
mov
mov
mov
jg
cmpsb
movsb
test
push
sub
je
lcall
sub
mov
inc
cmpsb
fldl
cmpsb
push
es
lcall
pop
out
add
sub
dec
dec
or
cmp
push
jb
pop
dec
pushl
clc
mov
ret
rorb
pop
mov
out
aam
jmp
cmp
test
mov
xor
test
je
dec
and
sbb
cmpw
sbb
les
mov
sbb
pop
jno
ret
dec
das
dec
pushf
push
xchg
xchg
xchg
and
aas
lcall
cs
xchg
xor
clc
outsb
pushf
jne
lock
mov
and
cltd
mov
aaa
mov
pop
mov
mov
xor
das
jg
pop
stos
or
jg
andb
mov
cwtl
lea
xchg
incl
xchg
inc
pop
cmc
dec
popa
popf
push
imul
lds
mov
push
ljmp
decl
and
dec
dec
cmp
mov
sub
mov
je
cli
lcall
js
pop
sbb
dec
mov
lea
es
pop
lcall
movsl
sbb
mov
hlt
pop
dec
mov
push
xchg
lahf
movsl
mov
pushl
pop
mov
test
cld
cmp
mov
xchg
loopne
sbb
mov
sar
es
or
ds
dec
jno
jbe
or
mov
push
push
subl
stos
call
jne
mov
rorl
incl
adc
pushf
shll
loop
sub
movsb
xchg
fisttps
xchg
mov
add
out
mov
push
cmpsb
repz
fbld
mov
adc
pop
fcomip
jg
adc
mov
cmp
or
push
cmp
sbb
int3
sbb
je
ljmp
test
inc
push
decb
popf
cwtl
xor
xor
decl
out
sbb
pop
and
push
jnp
mov
jnp
mov
xchg
inc
pop
add
mov
xor
call
mov
push
dec
xor
lret
mov
inc
mov
push
fisttpll
fcomip
adc
addr16
xchg
inc
jl
fs
lea
dec
push
and
pop
dec
pcmpeqb
test
add
outsl
js
xor
cmpsb
movsl
inc
adc
lret
lods
cmpsl
gs
ret
mov
jl
sub
mov
daa
inc
aas
dec
cmpl
outsb
fimull
cld
mov
rclb
je
pop
and
ja
insb
psubw
jg
ss
scas
push
pop
mov
mov
ja
inc
fs
xchg
ret
decl
cmp
xchg
jb
mov
cmp
mov
pushl
mov
loopne
nop
dec
enter
push
cmp
mov
push
pop
mov
inc
stos
sbb
pop
xor
rcrl
xor
push
pop
cli
lcall
es
bound
jbe
sbb
in
or
cmp
call
xor
push
gs
sbb
out
cmp
add
js
mov
add
pop
dec
ss
sbb
arpl
dec
decl
stc
inc
cld
repz
fisubl
addr16
pusha
push
fs
insb
adc
popa
push
adc
lcall
imul
rolb
lds
jmp
lods
mov
ljmp
jne
aad
push
icebp
ljmp
jp
push
push
bound
jg
jbe
bound
clc
decl
sahf
addb
je
movsl
mov
testl
adc
jmp
xor
dec
jle
in
pop
jno
fs
out
jg
push
cmp
pusha
cld
jg
aam
adc
js
push
pop
inc
je
jecxz
lcall
rorb
pop
imull
cmp
mov
clc
mov
fidivl
adc
inc
push
cld
xchg
call
push
pop
inc
cmpsb
test
cmc
inc
mov
cld
call
xchg
stos
pop
sbb
jae
inc
nop
frstor
incl
loop,pn
xor
pushf
jb
sbbb
iret
mov
sub
xchg
les
cmp
cmpsb
je
fiaddl
cmp
mov
std
mov
js
add
mov
mov
mov
add
push
outsl
push
xchg
ss
cli
pushl
bnd
pop
dec
jge
mov
aaa
lods
cmpl
popf
popf
shrl
js
out
ficoml
test
aad
outsb
xlat
lcall
pop
xchg
fdivr
jmp
outsb
or
cmp
pop
jno
push
push
out
lahf
pop
mov
mov
xor
pop
sbb
inc
pop
cs
fisttpll
gs
mov
add
mov
xchg
lods
pop
jno
inc
xor
in
cmpsl
mov
or
lret
popf
cmpsb
cltd
xor
into
pop
inc
dec
mov
inc
mov
cwtl
clc
decl
mov
mov
std
lret
dec
or
std
imul
ja,pn
lds
jg
fsubs
jbe
stos
mov
mov
lret
push
outsl
push
fucomi
jg
incl
rcrb
sbb
inc
adcl
aaa
lahf
fs
movsb
dec
ficoml
xchg
inc
xchg
push
xchg
andb
sahf
pop
repz
test
push
sub
das
ss
cwtl
xchg
mov
cltd
test
gs
pop
mov
xchg
xor
adc
inc
incl
push
sub
xchg
inc
sbb
lea
iret
in
call
bound
adc
cmp
fstps
push
in
or
cmp
jg
int
in
jbe
cmc
xor
mov
add
cs
jmp
jno
popa
mov
aad
fiadds
or
mov
inc
fucom
js
ljmp
gs
inc
pop
outsb
loopne
pop
out
adc
into
and
pop
push
call
dec
rcll
push
rclb
in
aad
push
mov
mov
pop
clc
lahf
decb
inc
loopne
xchg
scas
push
cld
pop
pop
push
lahf
cmpsb
mov
mov
add
int3
insl
sbb
cld
adc
add
vpcmpeqb
loopne
adcl
lcall
insl
lds
stc
xchg
popf
fstpt
lret
pcmpeqd
and
inc
insb
xor
xchg
pop
movsb
lock
dec
inc
xchg
push
push
cmp
pushf
dec
sbb
xor
fcompl
imul
pop
pop
or
adc
or
pop
dec
es
icebp
incl
xor
shrl
outsb
lret
push
clc
lcall
jp
sub
ret
xor
mov
push
clc
jnp
movb
mov
fidivrl
sti
xchg
xlat
mov
mov
insb
call
leave
test
mov
mov
mov
push
aam
jp
js
arpl
ja
ljmp
dec
arpl
adc
jns
call
mov
dec
or
call
cmp
inc
mov
push
adc
jmp
pop
and
and
mov
pop
call
dec
pop
lahf
pop
lds
inc
insb
xlat
pushf
test
push
cld
and
incl
xchg
outsb
pop
sub
push
jge
repz
incl
icebp
mov
xchg
pushf
xchg
icebp
cmp
shrb
and
dec
icebp
cmp
sarl
push
iret
dec
ja
lcall
je
daa
dec
into
imul
pusha
cmp
and
stos
mov
jl
sub
outsl
pop
mov
incl
data16
inc
push
mov
adc
popa
dec
inc
mov
adc
sbb
jae
cmp
arpl
jo
dec
mov
dec
fdivs
gs
mov
adc
fildll
and
mov
mov
push
dec
scas
pop
adc
dec
mov
aas
sub
push
pop
movsb
lock
add
mov
call
and
in
pop
bound
jecxz
inc
push
jmp
js
push
xchg
mov
push
adc
xchg
push
pop
pushl
cmpsl
mov
jg
lcall
mov
shll
lods
outsl
mov
push
push
mov
pop
fidivl
mov
or
fisttps
pop
mov
in
cwtl
mov
pop
xlat
xchg
jnp
xor
mov
arpl
aas
and
scas
sub
and
xor
adc
cmpsb
sbb
cmpsb
mov
pushl
sbb
fwait
xchg
or
rcrb
dec
das
mov
inc
fists
add
call
dec
mov
inc
add
mov
xchg
adc
cmp
adc
push
push
fbld
test
scas
popa
int
popf
mov
sbb
aas
dec
dec
mov
inc
pushl
je
inc
cltd
push
mov
mov
je
sbb
and
and
cmp
daa
cld
dec
decl
xchg
push
inc
mov
dec
pop
call
mov
mov
mov
xchg
sbb
pop
es
cli
addl
mov
jmp
cmp
cmpsb
aaa
loopne
push
push
scas
les
popf
movsl
mov
mov
enter
cmp
dec
cmp
inc
adc
mov
fmul
pop
lds
mov
inc
push
dec
inc
ss
inc
cmp
frstor
in
test
mov
mov
add
mov
scas
ficomps
or
xor
icebp
push
movsl
cmp
add
in
mov
dec
daa
jmp
adc
lods
or
jo
leave
cmpsb
ja
mov
arpl
push
jns
xchg
sahf
lds
fwait
cld
xchg
sbb
adc
or
push
mov
xor
test
jb
stos
sub
ljmp
cltd
adc
icebp
xchg
xor
push
cs
sbb
jne
inc
outsl
jne
imul
loope
arpl
mov
orb
dec
pop
push
pop
leave
mov
lcall
sbb
lods
enter
xchg
enter
dec
sbb
lods
xor
ljmp
es
scas
push
cmp
nop
cmp
jg
xchg
iret
mov
cld
xchg
pop
jo
in
push
jbe
jg
int3
inc
test
sbb
jo
mov
lcall
sbb
mov
mov
sbb
dec
xor
jmp
ss
insb
rolb
daa
mov
pop
cli
push
jg
lcall
mov
icebp
mov
sbb
jnp
xchg
jo
pop
int3
push
xchg
sbb
loopne
loope
test
push
mov
mov
jecxz
and
xchg
daa
loope
xchg
lock
mov
inc
xchg
mov
bound
cmp
ljmp
cmpsl
and
test
aaa
pop
inc
mov
pop
filds
cmc
mov
js
inc
clc
lcall
adc
or
xchg
adc
mov
jg
mov
sti
mov
jb
jecxz
dec
dec
adc
outsl
sahf
cmp
out
clc
mov
pusha
xor
hlt
inc
jnp
aaa
lret
push
jae
lock
jmp
push
je
pop
mov
dec
push
lods
arpl
rcrb
lahf
ja
mov
or
sub
add
gs
stos
jg
or
sbb
cmpsb
push
bound
inc
fwait
dec
dec
jbe
dec
xchg
mov
push
sub
xchg
js
mov
aas
insb
cwtl
andl
jno
push
imul
lret
fists
jmp
enter
ret
push
push
pop
jae
lret
in
incl
jae
push
inc
mov
mov
mov
cmp
je
fisubs
lcall
cli
sbb
jne
mov
out
lea
ja
and
mov
mov
mov
andb
inc
test
lret
cwtl
mov
mov
cmpsl
sbb
mov
and
incl
xchg
daa
imul
lods
icebp
daa
xchg
clc
sbb
adc
stc
das
xchg
mov
imul
lock
int3
pushl
sub
out
iret
sbb
pop
nop
pop
pop
push
outsb
loopne
and
fisubrl
xor
ja
jl
push
sub
mov
call
popa
mov
out
jbe
add
dec
mov
mov
ljmp
xchg
xor
mov
pop
es
daa
gs
mov
mov
dec
xor
pop
mov
testl
decl
hlt
movsl
sbb
adc
add
adc
icebp
decl
test
sbb
nop
add
inc
sbb
xor
sub
dec
outsb
push
mov
sbbl
sbb
cmpsl
jns
mov
mov
jg
data16
repz
mov
jnp
stos
add
xchg
or
ljmp
push
adc
lea
stos
cli
incl
jl
fmull
dec
dec
in
jo
jno
jl
jns
popa
aad
push
jg
cmp
or
call
pushaw
fmuls
imul
inc
test
je
shll
dec
mov
iret
mov
loopne
xlat
jp
dec
iret
mov
xor
pop
mov
adc
cmp
out
pop
mov
cltd
mov
rorl
int3
pusha
out
sub
pop
dec
popa
mov
dec
enter
aaa
lock
push
lods
push
jo
cmp
or
insb
add
xchg
scas
sbb
incl
adc
cmp
jp
inc
call
pop
repnz
popa
push
sbb
fdivl
push
imul
loopne
xchg
cmpb
inc
call
xor
imul
inc
hlt
orl
imul
and
push
pusha
imul
cmpsb
ss
jl
jmp
jp
and
js
push
jo
hlt
xor
mov
mov
dec
in
xchg
xor
enter
call
push
adc
dec
pushf
jle
iret
push
push
pop
push
jg
push
out
cmp
mov
stos
inc
jb
repz
arpl
test
cmp
jbe
push
ljmp
inc
out
dec
cmp
movsb
mov
pop
sub
insb
cmpsl
pop
xchg
push
cli
xor
pushl
mov
in
test
mov
pop
lock
les
lea
call
mov
adc
xor
in
cmp
sub
scas
xor
jmp
add
inc
repz
push
jne
lods
out
cmpsl
xor
aas
sbb
xchg
sub
shl
fs
jge
jo
lret
loopne
int
inc
and
sbb
mov
push
push
push
repz
fldl
ret
inc
cmc
or
mov
mov
sub
mov
lret
pop
push
lods
les
repnz
inc
dec
ret
add
jo
inc
insb
test
hlt
lcall
arpl
push
xchg
sub
mov
decl
test
out
shrl
out
cld
xchg
pop
jbe
rolb
ljmp
int3
or
pop
jg
and
adc
inc
fsubs
decl
out
xchg
sbbb
mov
movsl
outsb
rorb
incl
add
in
dec
incb
je
jl
xor
in
inc
lds
pop
and
push
loop
pop
xchg
cwtl
and
mov
xor
and
ss
push
xchg
xor
xor
cli
decl
mov
rcrl
inc
loopne
and
push
mov
das
pop
stos
xchg
scas
mov
xorb
mov
ljmp
push
sbb
mov
leave
mov
pop
cmp
lock
jmp
dec
std
mov
pop
addr16
cmp
daa
aaa
and
js
mov
push
leave
mov
mov
mov
in
insb
inc
push
cmpsb
and
push
pushl
outsl
inc
in
pusha
hlt
gs
jle
mov
pop
jno
pop
ret
sbb
aaa
shlb
or
test
ljmp
shrb
pop
jae
popa
mov
ds
addl
cmp
sbb
das
xor
sbb
pop
jmp
push
vmwrite
frstor
popf
testb
ja
push
push
xchg
out
gs
clc
inc
mov
repz
iret
mov
shlb
lock
push
dec
frstor
pop
fwait
sub
insb
and
int3
sub
sbb
or
bound
sub
in
xor
or
mov
jae
lcall
rolb
cmp
scas
inc
ss
cmpl
fs
pop
int3
push
cmp
xor
pop
mov
lock
jnp
add
inc
das
push
pop
mov
add
pop
icebp
xchg
mov
sub
push
pop
pop
lds
ss
icebp
pop
mov
mov
mov
mov
push
xlat
pop
sbb
shll
mov
xor
push
dec
int3
or
popa
push
sbb
xchg
test
cltd
push
ja
mov
xor
and
pusha
cmp
subl
add
mov
int3
mov
call
addr16
jb
adc
icebp
xchg
and
jp
mov
push
int
push
gs
mov
jmp
cmp
jae
mov
iret
es
insb
stos
fnstenvs
ja
or
es
add
scas
add
cmpsl
pop
mov
inc
or
fsubl
decl
outsb
js
out
inc
les
push
pushf
popa
mov
push
insb
sbb
faddl
inc
jb
inc
mov
dec
adc
sbb
clc
imul
cmp
add
dec
pop
bnd
push
push
jge
adc
pop
cld
js
loopne
stc
loop
clc
lea
jbe
in
push
insl
cltd
cmp
pushl
adc
insl
imul
clc
pop
lahf
clc
cmp
pop
add
and
pop
add
cmc
test
es
pop
and
fdivrs
mov
add
mov
addr16
scas
or
adc
sub
and
iret
sbb
push
movsb
adc
leave
adc
popl
scas
lds
scas
jb
add
add
imul
andb
adc
cld
decl
call
out
inc
sbb
sarl
clc
jno
mov
mov
push
xchg
mov
push
pop
mov
lret
pop
dec
adc
test
jno
mov
decl
imul
pushf
imul
testb
fbld
jle
add
mov
adc
scas
scas
mov
lret
pop
ja
push
inc
cmp
cmp
dec
lcall
or
inc
sahf
add
daa
into
pop
xorl
lcall
mov
fwait
les
mov
mov
stos
cmp
adc
sbb
push
push
mov
jg
mov
sbb
rorb
fwait
jns
repz
repz
sbb
mov
adc
decl
xor
pushf
jnp
ficompl
ljmp
cmpsl
mov
adc
or
pushl
cld
xor
hlt
mov
data16
push
mov
jp
out
out
add
imul
mov
jmp
lods
jo
call
cs
sub
lret
push
push
aad
xchg
imul
test
decl
jp
dec
loop
cs
xchg
movsl
shll
mov
cmp
decl
mov
lcall
iret
jb
mov
inc
mov
push
xchg
mov
cmp
fnstcw
adc
cltd
xchg
stos
lret
sar
decl
sbb
les
shlb
loopne
add
push
mov
pushf
push
hlt
cmp
decl
xchg
sub
mov
lahf
push
pop
arpl
jle
stos
and
ffree
push
mov
jo
adc
inc
cmpsl
popf
mov
fdivrp
mov
xor
enter
lods
sub
jg
cmc
inc
inc
lock
out
adc
insl
xor
icebp
cmp
lock
fisttpl
jne
scas
inc
jbe
push
xor
incl
sub
and
jmp
mov
insb
jne
imul
fistpl
xchg
clc
sbb
ret
dec
repz
dec
jo
pop
push
ret
or
test
xchg
add
xor
into
cmpsl
mov
dec
ret
fs
lcall
push
ret
or
jg
dec
fs
dec
mov
jno
sub
push
mov
decb
addb
call
loope
push
cld
daa
pop
xchg
cmp
fstpl
xchg
cmp
sbb
aaa
push
stos
push
xor
sub
call
es
out
pop
je
movsl
movsb
ret
add
pop
cmp
xchg
test
pop
popa
mov
xor
cmp
outsb
mov
cmc
lcall
cmpsb
les
sub
mov
inc
int
xchg
ljmp
rclb
mov
inc
sbb
das
shll
xchg
incl
scas
xchg
call
and
clc
cmp
mov
mov
pop
cli
cmp
inc
fsubrl
jg
repnz
insb
push
int
pop
inc
mov
popf
ja
cli
dec
pop
roll
or
xchg
pusha
and
aas
jbe
mov
mov
aas
in
mov
mov
fs
ss
mov
sbb
movb
or
push
jno
adc
dec
gs
out
sahf
mov
inc
mov
push
cmp
xchg
or
mov
shlb
je
jmp
out
cmp
imul
xchg
cmpsb
lret
xchg
stos
dec
dec
imul
cmp
push
fdivl
sub
dec
popf
adc
cs
adc
movsl
stc
test
mov
aas
imul
cmp
mov
sub
push
and
or
mov
idivb
jns
push
inc
cmpsb
ret
add
clc
cmp
popa
cld
dec
pop
pop
popa
and
lods
fcoml
cmp
push
add
test
inc
shrl
inc
pop
dec
loop
insl
inc
jo
mov
sub
adc
in
js
rclb
ljmp
insb
push
inc
and
mulb
mov
xchg
mov
push
fisttps
add
iret
clc
jmp
add
popa
jbe
addl
cmp
mov
push
addr16
test
out
and
mov
push
cmp
pop
fs
outsl
stos
sbb
inc
pushl
nop
sbb
lret
xchg
pop
xor
add
in
push
add
inc
cld
xor
mov
dec
gs
mov
pop
sub
lods
adc
pop
iret
scas
dec
das
inc
push
push
mov
and
or
mov
fisubrl
sbb
std
je
or
aas
jge
sbb
xchg
inc
les
adc
sbb
mov
inc
sar
hlt
mov
pushf
jae
repnz
pop
add
cmpsl
pushf
jo
jmp
stos
xor
aaa
xchg
pushf
xchg
sti
mov
jnp
adc
fcomps
add
das
icebp
mov
mov
jns
rorb
rcrb
mov
imul
hlt
das
xchg
pop
loop
mov
lcall
pop
xor
lcall
inc
cmp
adc
arpl
push
cmp
mov
pop
aas
inc
addl
push
cmp
mov
mov
dec
gs
pop
aas
js
scas
cmpsb
pushf
fs
mov
lea
push
pushl
pop
mov
dec
arpl
or
xor
cmp
sub
push
fisubs
incl
or
xchg
imul
sub
pushl
lahf
push
fidivrs
rol
pusha
pop
inc
fstps
and
dec
push
push
jge
mov
and
movsb
cmp
arpl
iret
or
inc
roll
xor
ja,pn
cmp
ret
movsb
or
imul
aas
fisttps
fsubl
dec
mov
mov
sti
mov
push
inc
repz
pop
adc
imul
push
incl
sbb
pop
iret
or
jno
lcall
sub
mov
inc
mov
inc
cltd
outsl
sahf
mov
decl
loope
arpl
adc
outsl
fisttpll
decl
enter
cs
push
shll
pop
mov
jge
cmp
dec
incl
mov
scas
pop
aas
mov
add
loopne
jo
mov
inc
xchg
dec
mov
cmp
add
lods
mov
daa
js
xor
inc
addb
xchg
nop
jge
pop
xchg
sbb
jne,pn
ja
scas
stc
je
decl
mov
jmp
sub
test
or
repz
pop
jmp
mov
lcall
sarb
or
je
cmp
dec
and
xchg
add
fisttpll
pop
inc
xchg
cmc
test
jp
xor
cmp
jb
dec
pop
pop
sub
sarb
pop
fs
sbbl
mov
and
push
mov
pop
pop
inc
ret
adc
mov
pusha
ljmp
incl
dec
icebp
cmp
mov
stos
dec
andl
pop
in
inc
jp
or
or
adcl
mov
lret
gs
pop
dec
sub
decl
jmp
xor
or
shrb
mov
mov
sbb
add
fbld
or
mov
mov
incl
jo
mov
mulb
xor
sbb
jg
outsl
je
ja
push
add
ds
les
jns
sub
jns
mov
scas
mov
push
jecxz
xchg
out
fsubrs
or
adc
jg
fs
insl
push
subb
incl
dec
xchg
fdivrl
mov
cld
pop
pop
sar
aas
adc
stos
sub
ss
add
jg
test
push
cld
sub
cmpsb
push
add
inc
cmc
dec
incl
pop
jbe
dec
or
or
gs
insb
adc
dec
aas
push
push
add
decl
cmp
jne
xor
add
pop
or
lds
or
lds
jge
add
loopne
addr16
decl
lock
int3
mov
lahf
int3
xchg
inc
arpl
sub
int
shr
and
incl
popa
addb
mov
in
incl
fidivs
sahf
aam
adc
dec
mov
setbe
out
and
lcall
dec
orb
lock
pop
adc
ljmp
xor
pop
js
mov
xchg
xor
jb
aaa
push
pop
ljmp
ret
enter
stos
pop
pop
pusha
lds
push
mov
mov
js
sub
jg
push
lods
jns
or
lds
pop
fs
dec
data16
jle
dec
jne
lcall
into
test
mov
cli
pop
mov
or
adc
and
std
mov
sub
mov
cld
or
mov
lds
in
pop
arpl
jp
jecxz
cld
or
std
adc
xchg
push
and
inc
xchg
dec
out
movsl
sti
sub
cwtl
clc
test
mov
pop
in
lret
add
addl
inc
sbb
sub
sub
decl
js
arpl
cwtl
add
inc
int3
push
dec
jns
fwait
and
jle
das
mov
xor
push
fidivrl
jno
pushf
dec
ljmp
and
movsb
popa
rol
push
add
jb
jbe
sub
incl
push
aas
jl
adc
ja
imul
xor
cmp
dec
sub
add
jmp
or
and
and
daa
imul
sbb
imul
xor
sbb
sub
fdivr
sub
out
lret
aam
in
rorb
shll
std
pop
sub
mov
fildll
mov
daa
lods
loopne
jg
call
dec
dec
test
xlat
mov
imul
lcall
lods
inc
bound
pop
mov
push
lret
andb
and
push
xchg
sbb
test
xor
xchg
bound
mov
iret
add
scas
cli
lcall
into
cmp
jl
mov
mov
sub
incl
or
inc
lahf
sbb
add
mov
pop
mov
xor
clc
repz
scas
cmp
pop
popa
sub
cmp
adc
mov
and
mov
iret
sahf
inc
in
pop
decl
repnz
add
mov
mov
stos
jmp
cmpsb
sti
scas
insl
mov
fistps
mov
cld
incl
xchg
into
cmp
out
cmpsl
xor
cltd
cltd
stc
cmpsb
int3
sub
imul
fs
insb
arpl
fbld
add
in
pushf
test
lret
pushl
pop
dec
sahf
mov
adc
cmp
push
mov
fs
nop
xor
mov
xchg
cmp
movsl
scas
sar
ret
aaa
xor
pop
pop
dec
xchg
psubusw
cmpsl
cmp
lahf
out
cs
fwait
lret
call
and
sbb
and
inc
dec
mov
daa
push
and
cmc
aas
test
stos
jmp
jns
cli
adc
mov
push
stos
push
lods
sbb
icebp
pop
std
mov
aaa
inc
xor
dec
mov
mov
aas
mov
popf
ret
call
add
pop
sahf
aad
mov
or
push
and
aas
lea
out
xchg
xor
lcall
push
inc
pusha
xchg
into
sub
xor
mov
aaa
out
cli
mov
jg
hlt
xor
and
aam
test
outsb
push
inc
icebp
decl
or
inc
mov
mov
cmp
insl
mov
pop
cmp
push
adc
sub
mov
aas
popa
aas
inc
cld
incl
daa
jns
xor
jmp
movsb
hlt
add
xor
call
cld
ljmp
and
das
test
test
sub
xlat
or
cmp
lcall
push
test
and
pop
lods
fisubrl
mov
mov
insl
std
decl
insb
dec
outsl
xchg
in
dec
pop
adc
xchg
or
xchg
jle
or
ret
lock
xor
add
jg
subl
sub
incl
addl
insl
inc
jb
out
daa
pop
sub
call
lcall
add
push
mov
sbb
les
xorl
and
fbld
cmp
cli
xchg
fdivl
xchg
sub
pop
inc
xchg
clc
adc
or
aas
mov
mov
or
add
inc
loope
pop
cmp
add
cmp
sub
je
fs
and
mov
incl
adc
mov
or
mov
and
adc
ljmp
pusha
mov
push
or
mov
add
inc
test
mov
cmp
aas
mov
push
jno
push
push
es
out
mov
ljmp
xchg
daa
adc
jp
inc
test
decl
adc
add
cmp
dec
xor
nop
out
sub
sub
bound
andl
inc
sbb
dec
dec
test
incl
xor
xor
sub
pop
cltd
lds
cmp
mov
sub
das
adc
jle
out
in
mov
lods
adc
sbb
imul
cmp
push
xchg
loopne
xor
popf
repnz
push
mov
repz
daa
cmp
shlb
rorb
dec
ja
add
fcompl
xchg
sbb
stos
loope
mov
inc
add
ss
lret
call
and
jbe
mov
cmpsb
cmp
inc
jns
stos
jmp
rcl
add
xor
movsl
cmp
adc
mov
rcl
repnz
test
shlb
and
rcl
andb
icebp
outsl
into
hlt
outsl
xchg
mov
inc
and
cmpsl
pop
inc
mov
int3
jmp
ljmp
cld
xor
ja
add
adc
fs
lcall
test
cmp
test
push
lods
mov
inc
push
jns
cmc
aad
aaa
cmp
jae
jb
scas
cmp
sbb
popa
xchg
lret
push
add
stos
pop
loop
lea
dec
sbb
mov
jae
pop
es
mov
hlt
clc
sub
ljmp
mov
cmp
push
aam
outsb
hlt
dec
dec
addr16
dec
xchg
pop
pusha
std
movsl
add
lret
rolb
cmpsb
mov
sbb
shl
mov
mov
inc
lods
ror
fdivl
insb
mov
into
xchg
xchg
push
call
jb
into
ret
clc
incl
inc
xchg
sar
movsl
mov
gs
push
imull
adc
mov
cmp
cmp
pushf
and
mov
inc
mov
ret
adc
icebp
mov
int
sub
popf
adc
and
andl
lcall
mov
mov
arpl
dec
add
nop
icebp
push
call
mov
mov
leave
add
and
outsl
adc
xor
fwait
jle
mov
and
xchg
jb
stos
inc
jl
adc
and
cwtl
enter
inc
adc
aaa
xchg
out
fistpll
cmp
mov
les
mov
lock
ja
pop
mov
xlat
lods
mov
repnz
outsl
dec
aam
push
mov
sahf
int3
std
cmp
and
push
cmp
inc
mov
outsl
xchg
outsb
mov
rclb
pop
fs
jp
loope
nop
mov
fldl
adc
test
fbld
sar
jb
inc
cmpb
xor
inc
loop
xchg
mov
push
repnz
subb
xchg
push
dec
sbb
ret
or
shr
push
jmp
int
fs
iret
add
sbb
jo
push
cmpsb
lods
and
incl
and
leave
mov
aaa
mov
into
mov
cli
incl
cmpsl
dec
xchg
inc
and
sbb
lahf
sbbl
mov
lds
iret
mov
ss
ja
out
adc
loop
sbb
aam
bound
mov
lods
call
cli
ljmp
loope
dec
ljmp
pusha
jg
jb
mov
cld
movsl
or
or
mov
shl
push
das
push
push
loopne
dec
push
ror
cld
std
add
jno
mov
loopne
push
xor
call
adc
pop
in
rorl
jno
push
mov
sub
pusha
cmp
imul
dec
cmp
cmp
mov
pushl
gs
adcl
sbb
outsb
test
lods
lret
aas
dec
outsb
inc
mov
das
inc
imul
or
out
clc
cwtl
cld
mov
cmpsb
sub
xchg
cmp
sub
mov
sub
incl
outsb
jne
rorb
jne
mov
or
inc
xchg
xor
push
cmpb
test
mov
or
ljmp
adc
in
or
int3
and
inc
int
mov
xor
sub
push
adc
add
incl
test
jno
lcall
movsl
in
push
jb
pop
push
jecxz,pn
mov
ja
sub
sbb
dec
sbb
scas
dec
inc
jmp
xchg
sub
sbb
cmp
xchg
test
push
jo
jle
stos
jp
push
jmp
cli
scas
clc
jp
pop
jecxz
popa
ljmp
cmc
jae
adc
jge
mov
stos
roll
pop
in
inc
dec
loopne
mull
sub
pushf
mov
inc
pop
mov
pushl
or
jp
mov
fs
or
inc
mov
jbe
sbb
fadds
push
sub
outsb
repnz
les
shl
jg
test
xchg
pusha
adc
pop
pop
sub
xchg
xchg
out
add
outsb
add
movsl
cmp
call
mul
mov
lea
cmovo
pop
repz
and
fwait
cmp
xor
lret
fdiv
ljmp
out
repz
pusha
mov
sub
ljmp
out
xor
add
pop
insl
jne
jns
jb
sub
filds
out
mov
inc
popa
inc
es
jge
xchg
ret
in
pop
jge
mov
pop
inc
jno
mov
pop
inc
aas
mov
out
adc
decl
insb
jno
and
or
or
daa
push
jb
push
mov
add
add
cmp
dec
push
inc
cmp
fwait
cmp
jo
xchg
aas
jmp
dec
xor
pop
cltd
hlt
jle
mov
xchg
sub
cld
pushl
out
int3
addb
cld
cmp
nop
push
mov
adc
lcall
sbb
in
and
roll
push
mov
pop
std
jmp
jae
push
mov
mov
cmp
xchg
sub
lcall
jbe
mov
test
mov
fcompl
insl
mov
dec
lods
ret
xchg
testb
repz
arpl
inc
nop
pusha
lods
stos
stos
push
loop
mov
pop
add
imul
xorl
pushl
lds
repz
jbe
and
push
ds
ljmp
mov
pop
or
clc
mov
xor
adc
pop
adc
aaa
test
push
or
jnp
cmp
sub
fsubl
adc
test
fs
lret
push
pop
jb
stc
push
add
decl
jle
pop
dec
lret
jl
call
inc
sbb
sbb
mov
lcall
ss
mov
aas
xor
mov
cmpsl
xchg
sbb
dec
gs
fbld
jl
push
sbb
clc
and
or
dec
loop
cmp
cmp
cli
or
clc
lahf
add
hlt
add
add
push
and
aam
push
pushl
xlat
or
push
sbb
push
xor
pop
inc
mov
pop
add
jmp
lcall
inc
or
pop
mov
add
iret
adc
or
decl
aas
fcompl
jp
out
xor
adc
sbb
pop
daa
sub
ljmp
lds
cmp
and
and
clc
data16
push
pop
jns
lock
jl
mov
pop
stos
int3
mov
push
es
sub
rolb
xchg
ret
adcb
test
sti
cmp
ja
jl
test
fwait
popa
and
lcall
loope
dec
or
mov
add
xchg
sub
fisttps
popf
aad
push
test
cwtl
pop
inc
push
fnstcw
jle
test
mov
outsb
dec
repz
clc
pop
sbb
out
inc
jae,pt
mov
iret
xor
clc
test
dec
xchg
addr16
sbb
lcall
xchg
xor
pop
scas
enter
rolb
jl
cmp
pop
loopne
pop
push
stos
pop
aaa
fsts
rcl
push
pop
lahf
aas
jns
xchg
dec
es
push
rcl
adc
loope
and
divb
push
mov
sub
fisubrl
test
clc
arpl
push
sub
pop
es
loop
jo
xchg
cmp
adc
push
incl
mov
add
or
sbb
cmp
daa
sarb
repz
or
das
int
or
outsl
inc
jo
cld
fcomip
xor
push
push
dec
sbb
push
jns
cmp
sub
adc
xchg
stos
and
clc
das
or
inc
out
mov
out
pop
andb
scas
paddd
mov
lea
fimull
xor
adc
mov
inc
cmp
push
mov
clc
dec
jnp
ret
movsb
int
xchg
mov
xor
fbld
and
fidivl
inc
adc
add
jge,pt
mov
ss
je
ljmp
sarb
adc
dec
xor
inc
fs
cmp
jmp
mov
add
dec
xchg
fadds
mov
inc
pop
and
pop
dec
aaa
cld
lcall
pop
stos
fildll
mov
mov
xlat
dec
inc
lret
lcall
sub
jg
lcall
dec
jb
out
lock
dec
clc
daa
mov
inc
jle
mov
incl
push
pop
aad
mov
testl
push
inc
into
jns
jg
xor
lcall
dec
aaa
mov
sahf
or
cmp
jp
jb
ds
jecxz
incl
inc
scas
pop
test
addr16
test
pop
sub
xchg
outsb
xchg
jle
mov
nop
out
cltd
loope
fwait
cmp
xor
adc
addl
xor
sbb
adc
pop
pop
sbb
scas
jo
or
icebp
out
jns
jle
sub
pop
and
outsb
push
mulb
sbb
in
or
incl
hlt
outsl
movsb
je
punpcklwd
push
fmull
or
push
or
xor
out
ljmp
push
inc
mov
adc
ja
daa
mov
and
and
decl
loopne
sbb
sbb
or
repz
call
cs
or
in
jle
sbb
test
in
or
push
inc
sub
cmpsb
push
loopne
pop
mov
cmp
add
push
mov
fiadds
mov
inc
clc
dec
dec
xor
inc
sub
sub
icebp
inc
dec
or
xor
aaa
inc
subb
sub
sub
std
jg
movsb
int
js
or
adc
fbstp
lcall
xchg
lods
roll
mov
jp
adc
or
mov
mov
dec
aas
xor
dec
insb
test
jo
aam
inc
jbe
outsl
sbbb
ficomps
cli
fstl
pop
sbb
nop
cmpsb
jg
mov
ret
jle
lods
aas
stos
leave
pushf
jle
add
xchg
fimull
mov
push
leave
js
outsb
lcall
out
mov
call
lea
mov
xor
clc
sub
in
aam
aam
inc
inc
in
sub
out
call
adc
xor
mov
les
lcall
loopne
mov
lods
adc
mov
cmpsb
leave
call
xchg
movsb
pop
out
xchg
data16
or
adc
and
xor
outsb
xchg
lcall
pop
and
inc
pop
lcall
aad
outsb
stos
out
fwait
inc
lock
inc
push
mov
adc
or
cld
mov
std
std
jnp
mov
fcmovnbe
dec
stos
or
jg
mov
sbb
sub
mov
test
jg
jmp
push
push
inc
addr16
or
xchg
ds
addr16
adc
pushl
int
push
cmpsb
mov
xor
jmp
imul
dec
mov
out
and
fs
aaa
mov
add
push
lcall
shll
sti
fcomip
pop
lds
dec
ja
jg
xchg
rorb
pop
lret
je
jecxz
test
outsl
cli
stos
imul
or
imul
stc
pusha
pop
pushw
imul
notb
inc
jns
jmp
pushl
adc
sbb
mov
push
jno
cmp
push
loop
movsl
cwtd
push
loope
in
test
or
or
xor
mov
pop
mov
xor
fcom
dec
mov
xlat
nop
pop
out
imul
loope
cli
dec
inc
bound
pop
adc
cmp
ljmp
adc
jne
sti
jg
es
aaa
std
lcall
sahf
sbb
test
ja
in
mov
les
clc
dec
jmp
sub
mov
cmp
pusha
sarl
dec
lods
xchg
mov
aad
lahf
cli
ret
iret
test
lods
lcall
push
fdivl
cltd
mov
incl
push
pop
repnz
stos
sbb
and
movsb
mov
pop
jb
cld
jg
mov
shll
repz
push
andl
aad
decl
xor
and
sarb
jns
inc
mov
push
outsb
inc
pop
mov
lods
aaa
pusha
aam
xchg
mov
lret
test
mov
and
mov
enter
or
mov
daa
push
xor
fcomip
fxch
cmpsb
stos
addb
inc
push
je
and
mov
pop
shl
ds
push
mov
cld
pushl
fdivrs
popa
imul
mov
add
cmp
call
sti
out
mov
ljmp
inc
fistps
jb
frstor
jnp
xor
and
scas
sbb
xlat
cmpsl
mov
js
popf
rolb
test
imul
stos
fbld
and
loope
mov
push
inc
dec
mov
fcomip
dec
stos
jb
inc
loop
push
inc
pop
ret
fwait
mov
mov
mov
sub
ja
jg
call
ret
push
pop
movsl
and
stos
pop
mov
idiv
lcall
js
mov
std
fistpl
mov
out
outsl
adc
sub
mov
push
mov
add
mov
or
lcall
xchg
adc
sar
out
ljmp
and
insl
jnp
dec
cld
jnp
fs
scas
popa
xor
jbe
rorl
pop
mov
adc
mov
and
arpl
or
jmp
push
test
sub
fs
pop
hlt
orb
popf
pop
test
pop
test
inc
nop
and
mov
cmpsb
es
jmp
jle
dec
inc
in
addb
insl
movsl
lea
dec
push
rorb
push
call
mov
jo
pop
adc
xor
call
dec
jg
pop
std
cli
mov
adc
push
jnp
pop
pop
mov
xchg
call
add
test
pop
cli
sbb
cmpsb
jae
inc
dec
inc
lcall
xchg
pop
aaa
lods
add
xor
shrl
jmp
xchg
testb
addr16
rorb
mov
repz
ret
sbb
push
loopne
jb
in
aas
pusha
push
xchg
in
movsl
lcall
adcb
adc
jbe
dec
push
jbe
ret
jmp
mov
jnp
mov
lds
mov
divb
repz
pop
aam
sbb
pop
cmpb
dec
rcll
inc
push
jne
mov
test
incl
lret
mov
out
insb
inc
js
or
add
or
insb
ret
mov
and
loopne
mov
push
loope
dec
and
nop
jns
mov
mov
int3
adc
or
inc
add
pop
cld
outsl
xor
fmuls
mov
dec
cmc
es
push
mov
pop
inc
hlt
adc
sarb
add
and
sbb
loopne
push
xor
aam
ljmp
mov
push
pop
loopne
arpl
mov
jp
jecxz
flds
mov
loope
lcall
or
popa
ret
adc
pop
popa
mov
xchg
sbb
jmp
ja
mov
scas
or
in
xchg
inc
testb
push
int
mov
pop
inc
scas
sub
jecxz
andl
push
enter
sub
loop
mov
xor
jb
aaa
fidivrl
and
sarl
lods
test
lcall
in
cmp
or
sub
pop
pop
xor
test
incl
mov
or
and
push
xchg
int
in
cmp
mov
imul
inc
mov
jb
inc
out
les
mov
jg
cmc
or
in
leave
pusha
inc
arpl
jae
std
and
fists
mov
sub
pop
movsb
push
lea
movsb
mov
hlt
pusha
xchg
xlat
mov
xchg
scas
mov
mov
fwait
xchg
mov
or
push
inc
popf
jmp
push
jbe
dec
dec
repz
hlt
scas
test
and
dec
jno
adc
and
cmc
xchg
pop
shrb
loopne
fs
fldenv
es
gs
mov
movb
loop
push
not
mov
cmp
pop
and
mov
push
call
push
adc
xchg
std
mov
or
jecxz
dec
cmp
xor
inc
dec
mov
mov
aam
xorb
jg
hlt
pop
inc
out
test
sub
inc
mov
mov
ficomps
pop
data16
xor
inc
inc
incl
pop
jbe
loopne
call
notb
dec
popa
push
mov
mov
sub
adc
ja
int3
inc
adc
dec
add
mov
mov
dec
or
into
or
add
js
test
stos
inc
inc
jnp
pop
push
pop
push
std
lock
pushl
xchg
push
pop
mov
pop
pushl
inc
jg
dec
xchg
sbb
jg
lock
pushf
cmpsb
les
jg
mov
mov
mov
fisttps
pop
mov
fucomi
stos
mov
aaa
std
xchg
fwait
xchg
and
loopne
jge
push
cmp
xchg
mov
pushf
nop
shrl
push
mov
sbb
ja
sub
xchg
jg
or
mov
dec
ret
push
imul
subb
stos
lock
repnz
mov
jmp
dec
inc
push
int3
push
test
in
xchg
shll
lcall
mov
adc
sbb
mov
push
adc
xchg
scas
sub
flds
and
pop
jmp
aad
jb
xchg
lahf
jle
add
mov
mov
js
ja
or
mov
scas
and
add
pop
inc
pop
add
jl
cs
decl
int
lds
sbb
cmp
mov
mov
jp
lods
add
lcall
pop
aaa
inc
dec
xchg
xor
mov
lock
mov
add
dec
xchg
bound
sub
ss
sbb
call
or
popf
popf
fistpl
mov
dec
lock
cli
jmp
outsl
mov
jb
dec
mov
mov
fstpt
jb
or
call
outsl
add
cld
inc
cmp
pop
xchg
dec
and
jb
stos
jmp
push
and
insl
dec
mov
iret
idivb
xchg
xor
and
cmp
push
add
lock
push
mov
dec
test
push
inc
test
jmp
into
push
les
sub
mov
mov
add
push
cmp
jl
add
ret
pop
mov
mov
test
pop
mov
inc
leave
adc
push
mov
movsb
popa
add
sub
jg
call
dec
lds
pop
push
pop
cmp
add
push
out
sbb
sbb
xor
movsl
jl
lock
in
xchg
jp
mov
lcall
jecxz
dec
mov
adc
pop
sbb
mov
push
push
cmp
cwtl
adcb
inc
jmp
add
and
lret
andb
cmp
test
std
aaa
sbb
ret
push
pop
insl
ret
jle
dec
loopne
call
jmp
adc
cmp
or
or
lcall
jmp
adc
cmp
xchg
or
xor
and
stos
stos
fidivrl
pop
loopne
dec
mov
lods
mov
lea
insb
mov
push
aaa
and
call
test
mov
loope
je
sar
push
mov
clc
incl
leave
movsb
fwait
addr16
push
pop
fnstenv
cmpl
nop
cld
ljmp
cmp
mov
jle
adc
xor
xchg
jbe
incl
rcrb
out
scas
jnp
xchg
mov
pop
roll
and
cmpsb
cmp
cmp
push
aam
sub
out
pop
xor
scas
lcall
mov
sub
mov
movsb
mov
xchg
loopne
test
inc
call
loopne
stos
int3
sub
and
mov
shll
inc
push
push
lcall
into
sahf
cs
xor
pop
mov
push
inc
dec
mov
mov
add
jne
mov
push
dec
xor
mov
or
cld
pushf
add
sbb
add
add
test
shlb
add
rorb
lea
jle
lcall
cmp
cmpsl
jle
cwtl
mov
xchg
sub
aas
movsb
inc
sub
loop
mov
das
cld
sub
push
pop
fisttps
cmp
fs
and
mov
std
incl
or
pusha
lea
xorb
sbb
xor
cli
add
inc
push
fistps
in
mov
out
and
mov
push
sbbb
fiadds
lea
sub
mov
decl
mov
test
dec
data16
ret
sbb
cmp
jge,pn
scas
jmp
xchg
mov
fdivs
ljmp
mov
push
xchg
in
arpl
mov
enter
popa
mov
inc
inc
pushf
clc
mov
sbb
adc
mov
out
daa
jno
pop
xchg
mov
sbb
and
and
outsl
popf
sbb
bound
xchg
jecxz
add
dec
bnd
add
pmaddwd
pushl
sub
movsl
mov
push
arpl
push
decl
lock
inc
adc
adc
lock
cmp
and
pop
or
icebp
pushl
cwtl
push
inc
ja
add
add
imul
xchg
ret
ljmp
andl
pop
fwait
outsl
in
jl
lock
push
ret
loop
inc
inc
pop
pop
cmp
aas
dec
fildll
sbb
daa
jns
stos
in
mov
pop
int
push
sarb
decl
pop
sbb
cmp
jne
pop
pop
push
pop
test
push
or
loopne
cld
push
adc
inc
mov
jbe
mov
fwait
dec
cld
jmp
pop
jbe
sbb
mov
dec
es
das
xchg
cli
inc
adc
outsl
inc
xor
and
cltd
sub
iret
xor
jp
popa
fdivrs
jge
push
and
add
dec
jmp
inc
sub
and
or
mov
sub
sub
daa
stos
lcall
push
jbe
inc
and
clc
or
xor
fidivrl
lcall
mov
or
test
xlat
mov
dec
ljmp
ljmp
pcmpeqd
jg
sbb
scas
popf
push
xchg
mov
xchg
dec
repnz
cmp
lcall
mov
scas
sbb
fwait
int3
mov
push
jb
in
pop
xchg
cmp
mov
mov
push
mov
lods
test
mov
lds
sbb
jmp
push
mov
pop
mov
inc
inc
fs
fwait
pop
cmp
and
adc
scas
or
pop
shll
xor
imul
test
and
or
adc
jg
xor
xor
add
sbb
push
mov
pop
adc
ljmp
call
sub
repz
clc
sbb
dec
add
jo
test
mov
push
sub
pusha
sarb
lret
fiaddl
pop
sbb
call
cwtl
jp
mov
xor
push
jnp
insl
lret
popf
cmpsl
fldenv
xchg
out
push
dec
cmp
or
pushl
pop
sub
frstor
or
sbbb
mov
mov
dec
ja
sbb
xchg
pusha
mov
dec
dec
inc
loopne
lcall
insb
ficomps
pop
dec
add
dec
sbb
jg
xchg
mov
mov
call
xchg
out
xor
xor
push
or
lret
mov
lea
jecxz
push
lock
add
dec
pop
cmp
gs
mov
add
sahf
or
mov
mov
jecxz
decl
jp
xchg
pop
jbe
and
mov
jae
push
lock
dec
or
inc
ljmp
repnz
inc
jecxz
dec
add
and
inc
cmpsb
insl
js
mov
dec
lds
aas
aaa
lcall
pop
cmp
das
lds
jle
dec
or
movsb
mov
xchg
push
mov
ja
clc
cmp
ret
jb
aam
push
call
je
inc
imul
lods
adc
add
pop
pop
cs
mov
add
mov
mov
sti
push
aaa
add
call
popf
adc
and
xchg
xchg
fwait
jmp
dec
sbb
fisubl
pusha
mov
test
dec
pop
mov
les
ja
push
insb
xchg
pop
test
xchg
decl
jl
jbe,pn
pop
dec
imul
lcall
adc
mov
scas
pop
mov
mov
aam
mov
repnz
mov
or
add
push
dec
loopne
outsl
jmp
fisttpl
pop
fucom
push
xchg
loopne
adc
cli
dec
call
or
sbb
xchg
icebp
lcall
pop
mov
cwtl
js
out
inc
repz
pop
aaa
out
jl
loope
adc
ss
or
or
and
sbb
mov
pop
shlb
lock
jnp
ret
addr16
ja
jge
cmp
xchg
mov
inc
xor
popl
cmc
decl
sbb
and
adc
aam
xchg
pop
pop
and
lcall
inc
imul
jp
enter
sbb
sbb
pop
pop
jno
sbb
popf
mov
mov
adc
jmp
push
aas
dec
add
adc
mov
cmp
jg
scas
xor
sub
and
movsl
mov
loopne
and
clc
and
cld
stos
sti
cmpsl
ljmp
sub
or
jmp
jle
inc
cmp
lock
test
js
or
cmp
pop
xlat
clc
jo
mov
push
add
xor
movsb
xor
addr16
jo
sbb
call
mov
shlb
dec
mov
cmpsb
fdivr
in
ljmp
push
je
loope
push
sub
cwtl
and
xchg
hlt
xchg
insb
in
scas
lret
and
mov
rorl
push
repnz
jo
pop
aad
sub
adc
lahf
cmp
fwait
lcall
addl
out
pop
mov
xchg
faddl
js
out
sub
int3
cld
das
clc
lcall
pop
subl
dec
into
mov
dec
movsl
into
xchg
scas
outsb
jb
incl
dec
inc
sbb
dec
inc
add
fnsave
imul
push
sub
sahf
adc
xchg
aad
jp
mov
ret
sbbl
cld
add
and
jg
or
inc
jns
rcrl
ljmp
cmpsb
cld
xchg
incl
popa
ret
and
in
sub
pop
decl
xchg
js
mov
adc
inc
lock
push
inc
jp
pop
insb
dec
div
ljmp
imul
test
adc
lret
fs
and
dec
fistpll
and
xor
and
sbb
adc
push
std
add
es
cltd
loope
pop
jmp
xlat
sar
ljmp
push
stos
lds
pop
inc
push
jnp
daa
jl
in
adc
das
pop
pop
inc
inc
mov
xchg
mov
sbb
cmpsl
jo
fstpl
je
lcall
push
incl
adc
rcrb
repnz
in
movsl
jp
mov
mov
jl
inc
imul
int3
sub
clc
and
addb
inc
shll
das
xchg
sub
shll
cmc
mov
mov
lcall
and
or
aas
jbe
sbb
loope
jl
mov
iret
cmpsb
fs
jmp
js
fsubl
dec
ja
cmp
pop
dec
xchg
add
xchg
rcr
sar
cmpsb
lock
js
fiaddl
lods
mov
add
jp
mov
jae
xchg
or
lcall
push
mov
mov
cwtl
pop
int3
add
dec
ret
pop
js
repz
lcall
mov
lods
lret
lods
fdivs
icebp
nop
jbe
or
incl
or
cmp
cmp
push
or
mov
cwtl
sub
xchg
dec
iret
mov
push
insb
mov
mov
jg
inc
pop
ret
incl
loopne
pop
pop
mov
mov
xor
lds
push
jne
je
stc
lock
jmp
jno
das
push
popa
mov
jmp
cmc
sub
icebp
xchg
push
testb
popa
into
jl
pop
loope
ljmp
mov
arpl
shll
outsb
xchg
test
les
cld
filds
add
cmp
adc
sbb
push
pop
mov
js
xchg
icebp
mov
jns,pt
mov
lret
decl
push
inc
into
sub
out
sub
xchg
adc
mov
ss
pushf
loope
jecxz
movsb
mov
addr16
rcrb
pop
rolb
dec
filds
adc
xchg
in
mov
das
inc
pushl
popa
aad
je
dec
pop
repnz
push
pop
xchg
ss
mov
mov
sbb
std
pushl
fldenv
in
subb
pop
mov
hlt
decl
dec
daa
xor
xor
roll
push
mov
dec
popa
mov
mov
ficoml
lock
inc
cmpsl
lret
lods
pop
fcoml
push
loope
pop
pop
ret
cmovae
push
xor
fists
mulb
das
jbe
repz
cmp
ljmp
dec
insb
icebp
adc
aas
inc
pop
xchg
loope
addr16
mov
and
xchg
iret
mov
scas
cmpsb
out
scas
outsb
fdivl
push
out
cmp
mov
ljmp
mov
or
mov
push
mov
mov
call
adc
jmp
cmp
es
push
push
push
push
testl
scas
mov
pop
pop
mov
test
adc
shrl
js
adc
jmp
inc
popa
subb
out
jns
xchg
or
in
out
mov
adc
push
fwait
scas
cli
jns
test
loope
push
jmp
hlt
dec
mov
mov
add
insb
cld
adc
into
push
jno
mov
ljmp
xor
sbb
cmpl
inc
stos
dec
cli
mov
mov
repnz
pop
adc
mov
incl
stos
dec
dec
lods
mov
outsb
push
inc
out
adc
add
pop
clc
test
mov
xchg
out
or
inc
nop
adc
mov
cs
xchg
fiadds
incl
insb
lds
mov
movsl
pop
bound
mov
sarl
lcall
into
and
mov
cltd
aam
jmp
rclb
jl
sub
imul
scas
int3
and
jg
ljmp
icebp
mov
aam
clc
add
scas
push
push
scas
add
fucomip
fistl
inc
xchg
ja
mov
mov
pop
ja
ret
jg
rolb
xchg
stos
insl
xlat
push
fwait
pop
cld
add
inc
popf
aaa
jg
mov
cmpsl
js
mov
mov
test
cwtl
jp
dec
jle
iret
add
out
clc
pop
orl
ja
lods
fstpl
inc
repnz
jmp
mov
xorl
sbb
sahf
xlat
movsl
dec
sti
fwait
jmp
call
repnz
dec
imul
out
adc
daa
mov
add
je
repnz
or
shll
movsl
sub
incl
or
adcl
inc
mov
xchg
flds
hlt
cld
xchg
pushl
adc
inc
sarb
cld
cmp
inc
mov
out
cli
dec
mov
in
or
out
ja
jmp
sahf
mov
repz
mov
push
bound
or
pop
dec
jmp
jle
sti
mov
jle
cmp
das
xor
adc
sub
mov
mov
pop
cmp
pushf
out
push
lds
or
fcoms
push
mov
outsb
shlb
popa
cmpsl
xor
xchg
out
xor
xchg
cli
mov
mov
call
popa
mov
mov
fs
jb
push
scas
inc
call
icebp
mov
repnz
mov
es
mov
inc
mov
xchg
int3
xor
lods
pop
push
jnp
lods
adc
test
fdivr
pushl
pop
adc
or
jp
adc
cmpsb
ret
xchg
ret
push
inc
clc
call
dec
rcl
mov
cmp
jne
cmp
push
call
fmuls
mov
add
loopne
repnz
jnp
xor
pushl
mov
dec
sahf
sbb
inc
popf
std
xchg
add
jae
clc
popf
rcrb
cmpsb
outsb
adc
clc
or
pop
movsb
xor
nop
aam
jp
xchg
xlat
adc
mov
add
push
push
mov
mov
in
xchg
jp
scas
xchg
call
mov
iret
pop
xchg
dec
mov
insl
add
lcall
sub
pop
test
call
pop
mov
ljmp
gs
icebp
xchg
mov
xchg
mov
fildll
mov
dec
mov
repnz
jl
mov
cmp
in
int3
cmpl
mov
mov
adc
push
mov
cwtl
dec
testl
cld
lea
push
popl
inc
test
add
cmp
incl
push
stos
inc
in
sbb
pop
jno
int3
cwtl
cli
sbb
inc
mov
xchg
pop
clc
push
mov
pop
movsb
mov
pop
in
xchg
ret
and
jo
idivb
and
pop
fisttpll
mov
pop
fs
mov
add
sbb
mov
xchg
insb
gs
mov
jb
mov
cltd
push
decb
jg
mov
cltd
pushf
push
ja
leave
andb
mov
filds
cltd
dec
sub
mov
inc
mov
jg
xchg
ljmp
ja
fisubrs
ret
int3
lret
lahf
insb
inc
cmp
push
xor
arpl
fldl
and
shll
dec
repz
pushf
xchg
lahf
push
andb
jnp
orb
lcall
mov
aas
mov
incl
xchg
fs
movsl
out
mov
jmp
iret
cmp
mov
mov
fs
cwtl
adc
mov
xchg
pop
mov
xor
loopne
clc
cmpsb
inc
cmc
sub
jb
loope
push
aam
sarl
decb
aad
mov
ds
fwait
jg
iret
mov
mov
clc
lcall
cmp
jl
out
inc
jmp
xchg
les
mov
xchg
dec
idivl
sahf
outsb
sub
dec
test
scas
outsb
sarl
sbb
roll
cmpsl
jge
jg
or
adc
jp
xchg
push
pop
pop
clc
mov
add
jb
out
ljmp
lock
lret
mov
xchg
dec
aad
mov
insl
out
sub
lcall
jp
fistpll
jo
std
adc
pop
rcl
mov
incl
push
xlat
sub
imul
and
xchg
leave
mov
cmpsb
mov
pop
xorb
mov
addr16
lock
ljmp
and
jecxz
xchg
jnp
nop
jecxz
popa
ret
ljmp
fbstp
fwait
adc
in
mov
mov
mov
sti
stos
mov
jmp
loopne
xlat
fwait
pop
in
scas
mov
pop
dec
push
cld
mov
push
and
xchg
rolb
push
pop
xchg
decl
jl
mov
mov
sub
push
cmpsb
decl
lds
push
mov
mov
test
ja
sbb
clc
pushl
sbb
jmp
jne
fwait
in
sbb
icebp
sbbl
cld
mov
or
les
mov
clc
dec
cmpsb
call
lret
mov
push
mov
scas
xchg
jp
adc
mov
add
mov
mov
or
xchg
fists
ljmp
xchg
pusha
cmc
sbb
dec
mov
pop
jl
leave
lods
inc
icebp
mov
xor
mov
xor
xchg
cwtl
js
add
sarl
inc
movsl
lret
ljmp
adc
test
jecxz
xchg
pop
add
xor
shrb
mov
stc
sub
bound
xchg
jmp
mov
mov
mov
aaa
xchg
incl
dec
gs
jecxz
pop
jmp
fisubl
mov
movsl
movl
insl
aad
xchg
dec
into
pop
dec
cmpsb
and
movsl
loop
adc
add
adc
lret
lret
dec
decl
stc
or
xchg
sub
xchg
popa
out
aam
jae
call
add
scas
int3
roll
test
adc
decl
clc
xor
dec
mov
push
lcall
fisubrs
push
nop
fdivl
mov
mov
fldl
decl
cmpsb
mov
inc
and
xlat
push
arpl
outsb
repz
mov
dec
fstpl
incl
xor
inc
cltd
lret
jle
and
shrl
pushl
push
mov
mov
jl
pop
mov
cmp
fwait
lock
mov
data16
out
mov
pop
sahf
lea
pop
mull
dec
test
ret
mov
rorl
in
lret
mov
or
cmp
sbb
xchg
cs
push
fs
call
mov
push
inc
mov
test
test
lcall
cmp
lcall
gs
fldl
add
ret
test
mov
fwait
xchg
addr16
stos
pushl
mov
ljmp
dec
cmpsb
ljmp
scas
mov
push
cmp
pop
les
ja
push
in
mov
cli
mov
jecxz
dec
addb
int3
and
or
cltd
xor
incl
xchg
repnz
push
mov
sub
mov
stos
cmc
pushf
pop
out
orl
fistpll
mov
cwtl
and
mov
push
jl
fsts
cmp
dec
sbb
sbb
mov
fsts
addr16
cld
cltd
shlb
push
jo
xchg
xchg
ss
incl
push
mov
sahf
jnp
mov
lds
mov
fwait
cwtl
rcrl
clc
aaa
cld
dec
sub
mov
adc
xchg
inc
and
inc
jge
fst
leave
mov
adc
leave
movsl
lock
scas
xchg
pop
lds
cwtl
inc
scas
sarb
xchg
mov
and
fcoml
scas
fisttps
rcrb
pop
ret
push
push
cwtl
xor
aam
xchg
aaa
jl
aaa
cld
incl
inc
call
mov
cli
adc
xchg
call
ds
mov
es
jae
xchg
int
jnp
sub
aas
mov
scas
push
stc
xchg
push
nop
push
dec
imul
xor
iret
xchg
mov
dec
clc
scas
xor
cmp
pop
adcl
movsl
rcrl
imul
xorb
dec
fnsave
xchg
sub
mov
and
and
cld
outsl
jle
andl
fdivrl
jg
aaa
addl
pop
popa
add
stc
xor
sarl
pop
nop
mov
xorb
push
in
inc
xor
scas
xchg
dec
inc
fwait
sarl
add
movsl
icebp
mov
lock
mov
jne
sbb
jmp
dec
xchg
pop
js
stos
lret
mov
or
cwtl
pushl
faddl
out
clc
sbb
imul
cmp
or
pop
xchg
les
cmp
call
fsubrl
call
mov
add
addr16
arpl
lods
dec
add
adc
cld
stc
mov
cmpsl
outsb
int
adcl
jbe
cmp
adcb
faddp
cmp
sbb
daa
test
and
sahf
inc
stc
ss
pop
nop
xchg
mov
xor
out
cmpsl
scas
pop
mov
add
subl
nop
pop
inc
lcall
mov
outsl
clc
or
sub
lea
fs
rorb
dec
stos
sbbb
push
out
filds
and
insl
in
jbe
dec
mov
loope
adcb
adc
push
int3
xchg
cmp
mov
jp
mov
lcall
cld
stos
push
repnz
incl
xchg
inc
test
push
mov
cmpsb
loope
addr16
mov
pushf
int3
cld
mov
cmpsb
aaa
std
ljmp
add
jbe
or
stos
aam
inc
enter
jbe
mov
sar
sahf
scas
mov
push
lods
inc
aas
ret
jo
cmpsl
mov
sbbb
pop
test
clc
lcall
stos
js
and
push
jnp
push
into
scas
ret
xchg
fadds
decl
mov
outsb
out
add
push
mov
mov
and
mov
pop
mov
sbb
jg
and
inc
cmp
jmp
scas
int3
sub
mov
cld
mov
lcall
and
add
mov
push
notb
mov
subl
and
inc
jg
mov
sbb
mov
sarb
int
loop
push
imul
cld
lahf
mov
push
mov
jg
add
mov
push
leave
xchg
ljmp
int3
stc
mov
sub
insb
test
dec
jge
enter
xchg
rolb
roll
ja
xchg
loop
inc
fistpll
cmpsb
lods
out
incl
repnz
stos
inc
sahf
push
imul
mov
cmp
or
inc
loop
mov
lcall
jg
pop
adcl
push
lds
stos
inc
xchg
sbb
mov
in
lcall
jecxz
daa
pusha
in
int3
push
orb
dec
ficoml
fbstp
lahf
push
orb
jge
roll
jg
cwtl
out
mov
rclb
addl
jg
aas
mov
mov
mov
adc
push
adc
es
std
call
dec
mov
xlat
xchg
push
lds
mov
push
lret
mov
fimull
mov
mov
xchg
jmp
mov
idiv
ja
lcall
xchg
mov
in
xchg
push
sarb
xchg
jl
lret
mov
pop
pop
andb
les
adc
sbb
movsb
pop
mov
data16
lcall
cmp
inc
mov
lcall
xor
mov
jmp
push
sahf
jae
adc
ficoms
push
pop
scas
out
add
add
jno
xchg
repnz
fcomip
mov
inc
mov
jbe
stos
call
decb
stos
lcall
scas
mov
lea
and
push
push
addr16
or
pop
out
xchg
in
sbb
mov
sub
jmp
mov
pushf
fs
mov
sbb
jae
xchg
xchg
sar
xchg
mov
cmp
cwtl
pop
shll
pop
mov
push
cli
lcall
push
int
aad
data16
xchg
mov
mov
iret
jmp
push
xchg
jnp
add
xchg
leave
lcall
xchg
cmp
pop
divl
jae
xchg
fistpll
pop
imul
mov
cld
mov
cli
sbb
iret
mov
mov
loope
out
jp
inc
addb
xor
xchg
mov
stos
out
call
movsb
dec
into
mov
ljmp
xchg
daa
dec
lret
les
repz
lods
or
pop
in
add
or
jne
mov
mov
mov
lahf
lcall
push
repz
inc
arpl
es
mov
hlt
xchg
outsb
xlat
mov
loope
ret
ret
cmpsl
cmpb
and
fcomip
decl
sub
jle
iret
xchg
cmpsl
mov
rorl
incl
jg
adc
in
push
dec
frstor
inc
inc
xchg
insb
out
lret
lcall
cmpsl
inc
lds
rcrl
rcrl
add
adc
pop
inc
sarl
sbb
cmpsl
repnz
pop
loop
jns
lret
add
add
les
inc
inc
mov
es
jb
fsubl
adc
rorl
or
push
sbb
xor
loope
mov
pop
inc
loopne
pop
les
ret
pslld
inc
pop
test
add
add
test
fstpl
jb
shrb
fcompl
add
push
fs
jle
sub
lcall
push
xchg
sub
ret
mov
pop
push
test
repz
inc
pop
jg
cmp
jg
test
jp
inc
nop
dec
push
loopne
add
inc
inc
sti
mov
js
mov
push
mov
xchg
push
pop
mov
jp
push
cmpsb
jns
jmp
lods
outsl
inc
sub
xchg
in
imul
bound
mov
push
jne
scas
dec
push
jno
jno
test
xchg
jb
fidivl
push
filds
and
mov
ss
shll
mov
pop
jbe
pop
adc
decl
clc
mov
ret
sbb
or
sub
lods
jbe
adc
ljmp
inc
inc
push
push
mov
imul
cmpl
or
imul
cmpsb
push
les
pop
or
inc
out
xchg
js
cmpsl
dec
aam
or
dec
push
shlb
out
sbb
pop
rorl
cmp
adc
jnp
ret
out
inc
xchg
insb
pop
pop
test
dec
js
mov
cmp
inc
lea
dec
add
fmuls
out
xor
jg
pop
rclb
cmovle
sbb
jle
jb
fs
stos
add
mov
mov
pushl
push
jo
arpl
mov
or
push
jge
inc
movsb
mov
cld
incl
xchg
dec
sti
mov
stc
dec
outsl
cmp
dec
xor
leave
cmpb
sahf
cmp
add
pop
dec
popf
mov
sub
mov
jg
adc
ja
ret
add
lcall
mov
cmpsb
or
sub
pop
push
outsl
cld
pop
clc
sbb
fs
mov
jg
pop
insl
les
out
jae
xor
out
push
and
sahf
icebp
lcall
cmpsl
adc
js
daa
jmp
push
or
ss
mov
jg
shlb
test
popa
scas
aaa
jo
and
mov
inc
lcall
movsl
and
enter
mov
sbb
sub
mov
pop
std
mov
xorb
mov
ss
movsb
cmc
lods
pop
mov
mov
sub
pusha
int3
add
sub
nop
xor
pusha
test
movq
jg
mov
jns
sub
pushl
sbb
loop
xchg
and
out
pushf
sbb
mov
aam
jg
pop
lret
outsl
pop
cmp
fbstp
pop
std
jg
cmp
push
mov
shlb
mov
or
aas
mov
pop
adcb
pushf
cmovb
pop
cltd
enter
dec
add
xchg
mov
pop
jl
std
lcall
mov
push
add
dec
js
adc
jp
ds
scas
pop
jnp
add
fildll
pop
xchg
inc
in
mov
lcall
adc
adc
cmpsb
pop
out
push
shll
and
jno
cmp
adc
sbb
dec
rorb
xchg
clc
outsl
outsl
xchg
lahf
mov
cld
xchg
push
mov
cmpsl
and
andb
and
jg
add
je
cld
xor
push
push
jmp
inc
enter
iret
push
decl
dec
jle
sub
insb
int
pop
sub
mov
cmp
sub
jg
std
xchg
push
bound
sbb
dec
lea
inc
xlat
xchg
dec
xchg
adc
and
adc
jle
sbb
xor
test
nop
movsl
cmpsb
sbb
jnp
ja
push
xchg
cmp
cmp
xor
xor
xchg
stos
cmp
or
call
jecxz
adcl
push
push
mov
sarl
and
push
out
sub
cltd
mov
scas
dec
clc
jg
jg
and
add
xchg
gs
jl
pop
stos
push
jno
into
mov
mov
mov
adcl
mov
inc
mov
xchg
mov
mov
filds
loope
add
and
adc
loop
mov
in
fs
mov
pop
mov
and
call
cmpsl
cmp
test
and
inc
fisttpll
mov
adc
mov
pop
sbb
cs
add
mov
mov
stc
push
ljmp
jmp
jno
pushf
pop
aam
jle
lds
stc
sbb
adc
mov
insb
cmp
addr16
decl
incl
lahf
mov
and
xor
xchg
push
pop
xchg
popl
int
cmpsl
mov
inc
dec
imul
loope
add
pop
nop
sahf
xorl
xchg
or
lcall
data16
mov
mov
cmpsb
jp
adc
sbb
out
cs
push
pop
mov
aam
push
outsb
push
push
test
or
jmp
daa
je
testl
scas
clc
mov
lods
xchg
xor
adc
mov
cli
xchg
inc
into
popf
lcall
dec
jl
pop
or
sub
out
inc
cmpsb
xor
jbe
dec
mov
inc
pop
cmp
cmpsb
sub
mov
dec
test
dec
mov
icebp
mov
sbb
jns
das
cmp
mov
push
pop
movsb
lahf
sub
pop
les
inc
add
mov
mov
nop
add
inc
aam
xor
shl
xchg
xchg
call
cwtl
jo
fwait
cld
test
mov
jne
mov
int
add
incl
movl
push
dec
and
dec
mov
xchg
mov
push
add
imul
push
mov
pushl
ljmp
add
lods
outsl
push
outsb
subb
incl
sahf
test
pop
in
movsl
mov
or
mov
push
repnz
mov
push
test
xchg
scas
jae
mov
sbb
insl
lods
mov
cmpsl
xchg
xchg
lock
sbbl
out
mov
mov
jbe
test
dec
rcr
sub
scas
lods
or
jno
aaa
push
cmpsl
mov
cmp
cmpsl
stos
push
push
in
pushf
dec
das
mov
hlt
mov
nop
add
push
ss
pop
push
sbb
pushl
jp
push
pop
fwait
sub
jge
or
inc
add
clc
pop
pusha
loopne
jnp
cld
inc
ret
jo
push
dec
push
in
inc
loopne
outsl
shrb
push
push
jne
adc
and
push
nop
dec
daa
push
in
jb
test
push
cmc
mov
mov
aas
dec
call
dec
cwtl
ja
jbe
sahf
cmp
lock
std
cmp
fcomip
incl
test
jl
dec
jge
rolb
cmp
jle
cmpsl
movsl
jle
ret
ret
dec
mov
jmp
lcall
int3
xor
out
xchg
lea
push
decl
insb
out
ss
inc
shlb
xchg
call
cld
incl
in
push
jnp
mov
mov
fidivl
dec
insb
or
in
jge
std
and
pop
push
inc
sub
pop
pushf
cmp
and
add
stc
push
pushf
mov
mulb
sbb
mov
jecxz
sub
dec
xlat
leave
sub
test
pusha
xchg
xlat
pop
sub
mov
pop
fucomp
push
xchg
push
mov
dec
inc
ljmp
add
shlb
mov
mov
mov
pop
sarl
inc
xlat
js
repz
inc
js
incl
movsl
cmp
adc
mov
sbb
das
mov
addb
testb
imul
test
stc
jns
clc
mov
jl
mov
fldcw
push
ret
pop
jge
cld
mov
or
inc
inc
push
dec
mov
dec
call
inc
add
xchg
clc
pop
pop
cmc
iret
jb
stos
mov
stos
ja
jmp
lock
cwtl
sbb
dec
jecxz
pop
rcr
pop
test
add
outsl
jl
mov
lahf
push
insl
je
pop
cmpsl
and
jg
lock
inc
icebp
cmpsl
mov
rorb
mov
cmpsl
imul
xchg
rclb
and
clc
mov
decl
inc
inc
cs
dec
and
bound
xor
mov
or
iret
out
ljmp
sbb
in
lock
inc
je
movsl
stos
gs
and
inc
and
mov
lock
fwait
les
xor
fmull
mov
mov
xchg
cwtl
mov
ljmp
bound
popa
pop
xor
in
cld
cmp
dec
imul
das
mov
inc
pop
pop
popa
mov
jge
mov
sub
add
leave
adc
std
pop
mov
mov
add
xchg
jbe
mov
ljmp
icebp
push
movsb
xchg
int3
jle
or
stos
dec
push
imul
fs
xorb
lcall
js
fidivl
dec
call
and
shll
fsub
push
mov
sahf
inc
cmp
loope
pop
dec
outsb
sahf
push
out
in
jb
mov
jmp
cmp
jmp
rcrb
inc
cmc
jnp
scas
mov
repnz
mov
mov
ss
icebp
jle
mov
orl
test
in
inc
addl
jg
jecxz
stos
enter
inc
and
fcomi
das
aas
lcall
sbb
inc
push
fs
and
sbb
cmpl
jmp
jnp
mov
cmp
push
mov
gs
mov
pop
mov
xchg
pop
shrl
pop
ja
inc
arpl
mov
push
mov
scas
xchg
icebp
imul
push
shl
push
mov
insl
xchg
nop
mov
es
clc
adc
js
jb
repnz
pushl
cmp
orb
aas
js
dec
test
lock
in
lods
in
int3
cmp
jmp
dec
aas
insl
dec
ret
lret
sub
pop
xor
ljmp
xor
insl
xor
sub
mov
rclb
scas
mov
js
sub
lcall
out
push
sbb
lret
into
cld
dec
xorl
sbb
fdivr
jecxz
ja
mov
jne
cli
fistps
mov
add
call
cltd
cltd
and
lods
mov
inc
popa
xchg
out
scas
adc
out
les
cs
lcall
mov
call
or
ljmp
mov
jg
fs
aad
test
mov
pop
jle
pop
cli
ret
or
dec
orb
jl
jae
mov
popf
xchg
loopne
cmpsl
mov
push
iret
aam
les
hlt
push
cld
pop
push
pop
scas
sub
mov
push
and
push
inc
xchg
jae
out
lds
push
movsb
popl
test
int3
insl
test
jns
aam
cltd
add
sbb
ljmp
insl
gs
mov
out
adc
out
js
mov
sbb
fwait
sbb
xor
call
arpl
repnz
inc
iret
mov
popf
gs
or
jp
into
std
jg
arpl
jns
or
lock
sahf
cltd
mov
int
dec
xchg
cmpsb
mov
mov
pop
jg
jnp
mov
xchg
xor
ret
incl
mov
mov
dec
shrb
loope
adc
bound
mov
mov
cmpsb
loopne
outsl
cmpb
cld
and
fadds
inc
xchg
fs
movsl
mov
stos
cmp
in
lock
mov
aad
dec
dec
inc
loopne
pop
jmp
xor
shrl
pushf
imul
or
add
xchg
lods
jne
xlat
add
hlt
jmp
add
cmp
xchg
add
les
sbb
stos
pop
add
pop
mov
scas
test
mov
mov
ret
mov
mov
push
inc
xor
mov
dec
push
pop
mov
pop
or
add
or
push
jg
lcall
inc
jbe
lcall
aam
test
dec
cld
incl
add
cli
xor
decl
and
xchg
push
lahf
jne
cld
sub
xchg
scas
cmp
lahf
popf
es
test
lds
push
imul
push
lods
inc
jge
mov
jb
mov
jg
test
iret
jns
dec
cmp
movsl
ljmp
fwait
cwtl
lahf
sarb
add
lods
sbb
aad
ljmp
push
hlt
lea
xchg
ficoms
pop
fcmovbe
adc
mov
ljmp
lea
pop
inc
iret
cs
ja
cmpsl
jns
repz
mov
out
sar
cmp
inc
inc
dec
aas
inc
xchg
cmp
pop
decl
or
mov
jo
inc
mov
sub
or
scas
xor
cmpsb
add
push
lcall
rcrl
inc
jecxz
push
mov
fimull
cmpsb
mov
mov
push
inc
inc
outsl
push
test
xchg
out
mov
inc
imul
std
jb
pop
movsl
arpl
data16
rolb
sub
jmp
xor
inc
xchg
loop
cld
jmp
ss
inc
mov
push
pop
jg
and
jns
adc
xor
mov
sbb
hlt
xchg
xchg
popa
mov
xchg
jecxz
xchg
cmpsl
adc
pushf
inc
mov
retw
push
and
out
xor
xor
adc
pop
inc
incl
adc
xchg
insb
ds
out
inc
push
cmpsl
mov
roll
decl
test
out
dec
fst
fs
mov
sbb
add
sub
ljmp
rorl
arpl
and
cmp
mov
inc
rorb
push
mov
jae
mov
jecxz
jmp
sub
mov
xor
xor
jp
cmpl
out
call
adc
popa
pop
addr16
ljmp
dec
sub
mov
mov
roll
inc
call
fistpll
loop
pop
imull
mov
adc
or
cmp
jmp
ret
xchg
ret
mov
mov
pushl
push
gs
lea
inc
outsb
sbbb
stos
and
pusha
hlt
mov
mov
pop
adc
xlat
push
cwtl
cmpsb
movsl
xor
dec
iret
jnp
insb
jne
jae
dec
lahf
mov
scas
jl
bound
or
fwait
pop
jecxz
cs
outsb
fiadds
incl
inc
js
mov
notb
roll
inc
cli
lcall
mov
out
inc
pop
int3
push
xchg
mov
cmp
push
adc
pop
int
imulb
pop
shrl
add
pushaw
daa
outsl
repnz
or
gs
test
xor
test
pushf
push
sub
push
xchg
out
xor
jmp
test
xor
inc
xchg
inc
push
jne
adc
mov
sti
cmp
xor
mov
jb
test
add
in
dec
adc
cli
scas
incl
je
mov
nop
cli
xchg
jg
sub
arpl
aaa
add
clc
cs
lcall
pop
sub
jmp
outsb
pop
test
xchg
inc
xor
popa
add
ljmp
dec
aam
lcall
mov
mov
xor
cld
pushl
mov
iret
xchg
arpl
adc
mov
sar
pop
lock
fmuls
lock
in
lcall
adc
jbe
mov
dec
push
push
pop
dec
in
nop
fmuls
or
dec
pop
cmp
cltd
xor
sub
or
push
lcall
mov
inc
rcrb
adc
push
std
pop
fs
movsl
test
popl
cs
dec
xchg
cmp
imul
mov
and
sbb
xor
and
and
jmp
popa
les
push
stc
sub
fwait
pop
out
pushf
in
mov
jne
fnstenv
call
jg
mov
jae
mov
dec
dec
addl
jns
cld
ffreep
stc
mov
test
test
insl
and
and
cli
decl
adc
mov
daa
pop
scas
pop
or
filds
dec
xchg
and
pop
sbb
xor
cmp
loopne
incl
xor
popa
lahf
dec
adc
bound
xchg
jp
sbb
lea
std
out
in
aas
mov
mov
dec
je
and
mov
hlt
inc
jne
or
pop
hlt
sub
xchg
loope
add
pop
mov
fiadds
lret
clc
call
pop
or
and
inc
fisttpll
jne
ljmp
and
push
pop
call
dec
popa
mov
mov
scas
rolb
lcall
outsb
push
movsl
jmp
mov
daa
xor
add
cltd
dec
cld
cmp
mov
pop
fdivrl
les
pop
xchg
inc
inc
mov
fwait
adc
in
mov
mov
sahf
dec
mov
daa
jmp
decl
add
lods
push
repz
xor
mov
pop
lock
insl
jp
insl
inc
sub
jo
or
mov
mov
fistl
movsl
cmp
inc
cmp
adc
decl
jle
mov
outsb
inc
iret
das
dec
dec
pop
xchg
fisubrl
mov
lods
xorb
dec
sarl
pop
inc
mov
sar
pop
add
push
pop
ret
inc
test
xchg
cltd
pop
cld
jg
aaa
pushf
popf
mov
mov
add
int3
mov
xchg
mov
adc
mov
jp
cmp
sub
inc
ja
pop
jle
pop
cmpb
dec
jg
call
je
mov
adcb
rolb
incl
xor
pop
push
lock
and
jno
mov
add
sarb
pop
js
mov
inc
pop
fnstsw
test
push
cmp
loopne
dec
jno
test
hlt
decl
add
jmp
jb
aaa
jg
in
jg
jbe
jb
and
pop
cmp
test
icebp
mov
cld
incl
aaa
ret
mov
mov
dec
jmp
imul
inc
insb
arpl
inc
jmp
sbb
adc
mov
jg
and
insl
ljmp
ljmp
rclb
arpl
mov
mov
mov
orb
push
add
cld
add
pextrw
add
cmp
xor
mov
inc
leave
clc
fisttps
les
sahf
fwait
mov
inc
cld
cltd
out
int3
mov
loope
xchg
mov
mov
mov
movsl
mov
stos
in
loop
mov
mov
fcompl
nop
scas
mov
mov
cmpsb
jmp
cmpsb
cmpsb
xchg
dec
jo
pop
mov
js
xchg
and
or
sub
add
nop
int3
cmp
rcl
movsl
mov
mull
mov
mov
or
sbb
mov
jmp
xchg
pop
arpl
mov
jne
andb
fwait
insb
stc
test
test
mov
inc
push
jle
jo
push
lea
mov
ffreep
clc
lcall
scas
mov
push
repnz
mov
dec
stc
ljmp
pusha
jmp
lret
xor
or
or
popa
xchg
jle
sub
gs
xlat
xchg
test
out
mov
mov
xchg
loop
cmpsl
mov
std
mov
sbb
inc
imul
add
xor
xchg
repz
mov
mov
push
jg
pushl
pop
popf
inc
ret
pcmpeqb
movsb
jge
mov
push
inc
ret
in
in
fwait
xchg
pop
cmc
push
inc
loop
clc
xchg
push
pop
cmp
cmp
into
lcall
movb
call
scas
mov
inc
push
pop
push
mov
rcrl
fisttpll
scas
xchg
stos
cli
rcr
mov
test
repz
xchg
int
jmp
jmp
js
gs
or
inc
sub
pop
hlt
jg
pop
sub
push
stc
fwait
jno
repnz
dec
dec
in
mov
loopne
les
ret
fmuls
imul
popa
lret
testl
hlt
mov
or
mov
push
mov
mov
mov
jns
dec
js
mov
sub
call
stos
iret
adc
lret
jecxz
xlat
cltd
sahf
xchg
scas
repnz
jne
mov
rol
sahf
mov
lcall
addl
cld
jg
push
pop
mov
clc
xor
int
mov
incl
jmp
cltd
jb
xchg
push
sarl
mov
lock
xchg
mov
sub
lcall
pop
dec
call
sbb
sbbb
mov
cltd
pop
sub
incl
mov
xor
cld
shll
mov
mov
pop
es
adc
or
scas
cmp
inc
negl
imul
clc
cwtl
nop
jmp
sahf
mov
aaa
insb
inc
ljmp
mov
pushf
outsb
push
pusha
or
cmp
jg
adc
mov
jg
adc
scas
lea
outsb
jae
decl
jno
bound
jo
add
xor
add
je
jo
and
cli
pushl
fsubr
outsl
push
adc
leave
add
add
xor
aad
xchg
mov
repz
fisubrs
jne
sub
ljmp
mov
jne
or
jns
pop
and
scas
pusha
ja
dec
sub
repz
outsb
insb
xor
test
jp
sti
push
inc
jne
das
fs
xchg
iret
mov
hlt
lcall
xchg
mov
push
int3
loope
les
jbe
cwtl
pop
mov
jg
cmp
xchg
rorb
rol
lret
movsb
lods
jg
icebp
xchg
fdiv
mov
mov
les
rol
xchg
mov
mov
add
add
div
xchg
fdivr
test
clc
pushf
mov
push
js
js
mov
mov
insb
enter
das
add
inc
aad
dec
fs
jmp
es
orb
lock
and
push
mov
ljmp
adc
jb
cmp
das
and
push
mov
cmpsl
mov
out
int
inc
cld
lods
mov
aad
mov
xchg
outsl
lahf
decl
test
and
stos
lahf
popf
cmpsl
ror
aad
call
and
popf
iret
xor
pop
stos
fwait
icebp
dec
push
inc
pushf
ljmp
je
clc
popa
jne
rorl
fistpl
sbb
mov
out
xchg
mov
mov
mov
fldl
mov
stos
lock
out
mov
jl
orb
movsl
mov
cmpsb
cltd
js
data16
out
cmpsl
mov
cmp
mov
inc
mov
lret
pop
cmp
pop
leave
xchg
sub
int3
jne
lods
fyl2x
mov
or
xor
mov
test
subl
mov
jbe
mov
call
and
xchg
pop
rorl
cwtl
cmp
inc
rcrb
sbb
dec
cmpsb
jmp
decl
clc
xlat
cwtl
mov
jl
add
pop
in
lret
mov
repnz
mov
mov
mov
jbe
outsl
mov
xchg
inc
push
mov
imul
in
jmp
cmc
cltd
mov
lcall
lcall
iret
lods
mov
mov
stc
xlat
mov
lcall
ds
and
aam
pushf
test
outsb
cld
outsb
cli
aas
rcr
push
cmp
dec
mov
mov
adc
cmpsb
adcb
mov
mov
je
jecxz
sahf
jns
lret
jecxz
xchg
mov
test
mov
scas
and
aas
push
shll
pushf
add
inc
in
dec
imul
ss
ljmp
and
and
lods
aaa
sub
pop
icebp
fsts
sbbb
lods
leave
addb
cli
loopne
pop
or
cmc
pop
hlt
incl
imul
aam
inc
add
jg
fists
cld
push
icebp
xchg
movsb
mov
repz
lahf
pushl
jp
repnz
push
mov
shrb
pusha
ret
hlt
int
enter
loope
sahf
or
lea
out
add
ret
std
mov
mov
dec
inc
out
pop
das
mov
lcall
dec
mov
xor
stos
subb
or
add
mov
xor
repnz
popa
xchg
mov
dec
jmp
cmp
in
ret
cmpsb
mov
stos
and
lcall
popf
add
stos
mov
add
mov
mov
jecxz
sbb
inc
rcl
hlt
xor
int3
andb
pop
or
pop
push
lcall
fiaddl
jg
clc
mov
cmpsl
stos
cmpsb
or
jmp
sub
scas
fisubrl
icebp
mov
decl
xchg
cmpsl
and
int3
stos
bound
adc
mov
or
lahf
out
rcrl
mov
lds
movb
xchg
xchg
push
xchg
nop
mov
inc
lcall
inc
cltd
xchg
xor
lcall
insl
aam
cmp
test
test
mov
testb
pop
nop
scas
xor
popa
pusha
cmp
cli
mov
lcall
jecxz
incl
sbb
fwait
push
mov
mov
jecxz
rcrl
incl
sub
into
scas
fwait
cmpsl
adc
std
inc
sar
mov
js
les
ja
std
jmp
scas
mov
xor
push
scas
shl
dec
shll
or
xchg
push
fld
shlb
jo
mov
add
fwait
cwtl
sarb
mov
sbbb
xchg
scas
mov
inc
inc
mov
repnz
loop
pop
mov
sub
mov
mov
incl
int3
adc
loope
pop
fists
stos
popf
cltd
lcall
aaa
adc
movsb
push
push
xchg
sbbl
cmpsl
xor
outsb
roll
call
lahf
mov
cmpsb
sahf
dec
mov
divl
mov
faddl
rep
sbb
outsb
mov
shlb
rolb
mov
hlt
mov
xor
lret
xchg
jg
imul
es
int3
mov
cmpsb
inc
mov
add
js
fsubr
adc
stc
adcl
mov
jl
mov
ja
jmp
scas
inc
ret
es
mov
pusha
mov
lock
mov
scas
adc
xchg
sub
and
inc
loop
cmp
or
xlat
cmc
cmp
dec
mov
push
incl
jg
pop
data16
xchg
out
stos
test
rcrl
call
lea
lret
pop
push
mov
mov
aaa
jge
jbe
adc
ss
fisubrl
adc
xor
add
ljmp
xchg
int3
test
push
js
data16
fst
mov
lock
in
icebp
mov
jb
and
cmpsb
pop
lret
or
cld
mov
clc
in
clc
rcrb
cmp
insb
icebp
div
mov
add
jo
jb
cs
mov
lahf
lcall
dec
out
and
in
xchg
ret
inc
sbb
cmc
lods
les
pop
jle
loope
adcb
dec
cld
cmp
mov
movsl
popa
in
xchg
in
lods
mov
xor
lret
int
adc
les
out
push
mov
test
add
mov
test
xor
mov
dec
xor
arpl
test
fwait
lea
push
aam
mov
cmpsb
dec
les
mov
in
fwait
int3
xchg
ret
pushl
fsubp
in
movsl
cmp
leave
roll
decl
arpl
test
test
cmp
and
aam
jle
mov
and
fistpl
jge
addb
loop
mov
ret
shrl
aam
aas
and
mov
add
lds
mov
xchg
inc
xchg
int3
cs
cld
in
incl
mov
cmpsb
push
mov
cwtl
mov
mov
jg
fwait
repnz
outsb
pop
push
cmp
cwtl
mov
ja
lock
lock
adc
mov
mov
aam
mov
mov
cmp
or
xor
int
je
lcall
decl
cld
lcall
test
mov
mov
jmp
sbb
sbb
rcll
popf
les
les
ret
and
adc
push
jns
fwait
nop
xchg
mov
out
std
or
shrl
mov
insb
bnd
xlat
sub
xchg
mov
pop
adc
imul
mov
jb
jbe
pusha
inc
pop
inc
aas
push
push
pop
movsb
add
decl
dec
pop
je
inc
inc
jae
xor
arpl
inc
jo
or
add
stos
cmpb
mov
cmpsb
ljmp
data16
adc
fwait
mov
mov
ret
and
cld
call
push
xor
das
sub
test
mov
xchg
mov
cmp
int3
adc
add
jge
fildll
add
inc
mov
xor
cli
mov
test
decb
push
pop
lcall
xor
popa
mov
adcb
and
mov
les
loopne
or
mov
mov
mov
adc
fwait
sub
jb
rcrb
jg
scas
imul
sbb
dec
mov
fwait
lcall
cld
mov
sahf
add
jnp
cmpsb
ja
push
adc
xchg
les
jecxz
mov
pop
rcrb
adc
mov
add
jmp
fstps
pop
sub
lea
mov
das
pop
rcrb
xchg
mov
ret
pop
inc
pop
test
out
fcmovb
mov
mov
stos
mov
mov
and
das
xchg
stos
fdivl
push
repnz
push
sbb
mov
mov
jns
mov
pop
test
addb
sub
pop
jns
pop
lock
loopne
pop
ja
mov
shlb
inc
inc
push
inc
cwtl
cmp
test
pop
lret
sub
les
lock
mov
ret
out
call
pop
jp
outsb
push
jnp
pop
xor
or
hlt
xchg
imul
pop
xchg
mov
push
sbb
inc
cmp
inc
or
aaa
dec
fisubs
xchg
sbb
icebp
decl
ja
mov
pop
movsl
aas
mov
daa
movsl
data16
out
clc
inc
repnz
mov
cmp
sub
mov
lcall
int3
xor
out
addr16
push
cmp
push
fwait
dec
add
clc
mov
mov
movb
sbb
addr16
xor
ds
mov
loope
add
mov
lret
cmpsl
lods
jns
incl
imulb
mov
popf
and
int
insl
loopne
popf
iret
or
push
ljmp
outsb
jbe
mov
movntq
lret
inc
out
push
dec
nop
push
xor
mov
addr16
mov
addb
push
pop
push
lahf
add
mov
jp
andl
dec
pop
mov
fldl
jne
adc
push
into
jbe
adc
lcall
sbb
clc
aas
fdivl
xor
xchg
pushl
mov
hlt
scas
add
sbb
lods
jg
incl
jg
ret
imul
decl
xchg
inc
insb
gs
push
mov
ret
ljmp
mov
leave
xor
mov
mov
mov
or
jo
ljmp
imul
mov
scas
adc
decl
sahf
les
cmp
pop
jl
inc
js
outsl
cli
imul
fsubl
rorl
andb
jbe
lods
cmp
mov
ljmp
cli
fwait
sbb
and
mov
push
aam
push
mov
adc
decl
xchg
mov
push
mov
mov
sahf
ficomps
subb
fisubrl
mov
fdivl
xchg
cmp
sub
pop
jns
lods
decl
ja
push
les
divb
mov
mov
xchg
sbb
xor
sbb
movsb
sub
sarb
scas
test
rorl
outsl
jne
dec
incl
sti
bound
in
inc
addr16
or
sbb
pusha
push
iret
cs
ljmp
addr16
inc
and
jno
inc
in
mov
daa
insb
fistpl
decl
sub
dec
cwtl
cmp
sbb
mov
mov
jnp
repnz
mov
test
jae
scas
sbb
rcrb
mov
stos
scas
lcall
mov
mov
xor
fmuls
cmpsb
jp
jmp
lcall
sbb
pushf
and
xchg
mov
sub
mov
stos
ss
repnz
push
jnp
adc
stos
movsl
dec
jbe
add
or
dec
loop
pop
roll
sbb
ret
mov
mov
mov
js
cmp
pop
mov
call
mov
or
lock
pushl
add
inc
inc
shll
jo
push
push
jb
roll
dec
push
mov
js
outsl
jmp
imul
pusha
cmp
scas
loop
scas
cmp
std
scas
adc
fnstenv
test
ss
mov
adcb
sub
aaa
cmp
scas
and
xchg
aaa
idiv
lcall
enter
push
leave
xchg
jle
popa
jmp
sub
or
add
add
flds
mov
mov
sbb
in
mov
inc
lret
xchg
imul
pop
xchg
daa
push
filds
lahf
adc
adc
xchg
pushl
in
inc
xchg
xor
call
add
mov
xor
xor
lods
sub
pushl
test
xor
dec
mov
movsb
daa
mov
test
inc
enter
cmp
xchg
push
add
xor
int
negl
sub
push
mov
ret
pusha
inc
inc
lods
mov
ds
pop
cmpb
out
sbb
notl
pop
shl
fdivp
sbb
add
loope
dec
cmp
push
popa
jge
out
js
loop
cmp
push
clc
and
or
icebp
mov
sbb
xchg
sbb
call
jecxz
sbb
pcmpgtw
cmpsl
push
push
pop
dec
in
shll
adc
jae
out
inc
jnp
and
aam
cmp
mov
push
mov
xor
incl
xchg
mov
push
jecxz
mov
adc
jg
xchg
daa
push
push
scas
and
and
sub
cmp
ljmp
and
and
xor
sar
and
and
sbb
cmp
fwait
xor
repnz
xchg
dec
mov
orb
and
pop
sbb
lds
insl
mov
iret
jns
dec
mulb
add
or
test
mov
out
clc
out
ret
or
dec
or
nop
adc
xor
fstl
ss
cmp
push
pop
push
and
jmp
mov
mov
fsts
repz
std
push
jge
cmpsb
inc
sbb
cmp
lahf
sarl
pushw
icebp
cmp
inc
iret
sub
cld
sbb
xor
leave
subb
decl
jo
shll
jle
mov
mov
pushl
js
mov
push
mov
dec
xor
cwtl
xchg
call
dec
jle
push
sbb
dec
outsl
clc
inc
shlb
sbb
mov
dec
clc
and
subl
dec
fisubrs
je
setb
daa
jp
cmp
dec
es
das
add
sbb
or
jbe
push
or
push
pushl
mov
lcall
or
pop
sub
stos
cmpsl
pushf
cli
or
pop
popf
cmp
push
es
lret
xchg
dec
pusha
popa
aas
mov
mov
cmp
mov
dec
cmc
jl
mov
call
pop
push
jl
out
mov
sti
je
cld
cmpb
je
pop
dec
mov
decl
xchg
std
test
dec
push
inc
clc
jbe
sub
popl
and
dec
aaa
jl
mov
lcall
clc
std
mov
cmp
and
adcl
lcall
pop
xor
cmp
daa
mov
mov
clc
stos
test
jg
add
adcl
rcl
lcall
push
jae
push
mov
add
fisttps
pushf
mov
jnp
addr16
sbb
loopew
ja
jp
imul
aas
lahf
daa
mov
inc
ja
jp
leave
xchg
mov
sbb
fdivr
mov
icebp
cltd
or
mov
push
into
xor
add
pop
call
pop
sbb
out
cli
imul
pop
addr16
push
outsb
pop
mov
fs
insb
mov
data16
add
out
xchg
pop
jo
mov
xchg
in
xor
arpl
loop
fisttps
int
pop
xchg
cmp
mov
inc
ss
inc
pop
pushf
cmpsb
fmuls
sbb
push
cmp
lea
ljmp
sub
lcall
sti
aaa
jp
bound
loop
js
popa
ret
filds
lcall
push
into
repz
jb
movsl
jle
dec
inc
loop
stc
jmp
pusha
dec
mov
mov
xor
push
pop
cs
dec
les
mov
mov
scas
aas
ficompl
and
dec
imul
and
pushl
pop
dec
adc
xor
lcall
push
dec
mov
in
inc
push
pop
ja
pop
push
jecxz
test
cld
add
les
jno
jecxz
inc
sub
cld
ret
aaa
lock
ficoml
imul
pop
repz
jo
ds
adc
dec
dec
clc
adc
sbb
cmp
sbb
insb
fldcw
sub
das
jno
xor
fsubp
add
or
fdivr
fcomip
sbb
les
pop
arpl
dec
jo
dec
arpl
inc
in
add
je
jecxz
cmp
or
std
sub
adc
insb
arpl
outsl
adc
icebp
cld
push
clc
add
jnp
adc
iret
or
pop
lcall
ror
and
push
sti
ja
xchg
jns
and
scas
jb
push
loopne
nop
clc
aaa
imul
pop
outsb
jmp
inc
xor
out
cli
ljmp
ljmp
lea
mov
and
stos
test
cmovle
ss
jg
and
jle
and
sbb
or
xchg
das
push
je
test
pop
add
mov
or
pop
arpl
ljmp
mov
ja
mov
mov
mov
jno
int3
sub
pop
movsb
mov
fs
mov
pop
daa
inc
xchg
movsl
addr16
add
sbb
push
push
jmp
jo
mov
or
sbb
mov
imul
inc
ja
push
and
bound
sbb
adc
stos
inc
or
loop
xor
pop
aaa
inc
and
mov
clc
jecxz
lock
or
lods
inc
xor
jno
mov
jp
pop
fildll
aas
push
xor
sub
push
jg
cmp
dec
outsb
cmpsl
sar
decl
add
pop
jae
fmuls
push
testl
mov
std
pop
add
push
sbb
test
ljmp
cmp
mov
mov
push
es
ljmp
js
pushl
or
inc
xchg
jae
pusha
cmp
pop
inc
insb
call
adc
fwait
rorb
mov
inc
inc
mov
rolb
or
sbb
mov
pusha
dec
pop
inc
ret
jge
ja
inc
add
xor
cmpsl
cmc
out
addb
mov
pop
scas
dec
sahf
shlb
std
jg
mov
pushf
dec
sbb
lea
inc
test
clc
push
out
das
adc
lcall
and
imul
dec
loopne
js
mov
sar
jg
ret
and
mov
lock
push
enter
mov
jne
jo
xor
cmp
test
mov
mov
fwait
jl
jns
mov
mov
jne
fildll
push
sbb
lock
neg
pop
sar
pop
test
push
mov
mov
cmp
pop
jge
test
pop
lock
add
clc
jge
push
xchg
push
int3
adc
arpl
push
orb
test
je
fisttps
fistpl
addl
push
sbb
sub
push
push
push
inc
call
jmp
movsl
mov
sbbl
mov
sbb
sub
mov
out
inc
jnp
fwait
stos
and
push
sub
clc
incl
sbb
sbb
xor
dec
xchg
jnp
cmp
fwait
cmpsb
aas
xchg
add
sub
adc
in
sbb
in
cmp
or
pop
inc
push
push
fldcw
add
adc
pop
inc
mov
fisttps
inc
adc
clc
call
adc
lods
mov
dec
inc
mov
xchg
jle
or
mov
daa
push
ret
push
mov
push
sbb
dec
cmpsl
icebp
imul
ja
jp
add
cmp
dec
lret
dec
jp
mov
add
addl
cmpsb
adc
xchg
or
dec
push
gs
jp
jnp
push
fisubrl
stos
bound
xchg
mov
inc
fdivs
or
adc
xchg
enter
xchg
stos
pop
jmp
out
mov
subb
test
das
mov
lcall
jo
xorb
mov
dec
lcall
scas
and
cmp
cli
or
mov
test
fistps
out
cwtl
iret
xchg
dec
mov
inc
nop
dec
add
movsl
mov
cmpsb
pop
xchg
mov
outsb
into
and
cld
cwtl
sub
mov
push
js
cmpsb
int3
stos
dec
adc
cmp
add
or
sub
mov
adc
test
adc
and
add
add
mov
sub
fwait
inc
mov
xchg
jmp
sbb
add
cmp
lods
mov
mov
and
sbb
cmpsl
add
xor
int
pop
mov
scas
dec
orb
jb
push
lds
scas
repnz
mov
mov
cmp
sti
or
loopne
fcomip
stc
jb
sbb
xor
fwait
jnp
pop
into
in
rcrl
testl
pop
repz
mov
jbe,pt
mov
sahf
xor
xorb
loope
and
cld
aaa
cld
ljmp
pop
jecxz
mov
mov
pop
repnz
sbb
inc
cwtl
or
cmp
outsl
clc
cmp
in
add
pop
push
mov
in
les
sarb
das
gs
add
adc
repz
cmpsb
sbb
pop
cld
or
int
xchg
hlt
cmp
mov
pop
pop
ja
jg
and
adc
pop
cli
sub
incl
dec
jbe
cmovae
pushf
inc
shrb
push
test
sub
mull
scas
dec
mov
addr16
mov
mov
clc
inc
cs
das
ret
jo
or
mov
dec
test
jp
ljmp
xchg
bound
jno
jl
pop
xchg
dec
cmp
das
sbb
pop
add
subl
mov
jp
cmp
cs
das
add
sahf
and
arpl
es
aas
daa
mov
and
push
jge
and
lds
push
inc
mov
push
dec
and
add
pop
addr16
jmp
mov
mov
and
sbb
and
jg
lods
je
push
mov
xor
dec
inc
ficomps
cmpsl
incl
sbb
cmpsl
lds
call
add
adc
mov
scas
xchg
popa
nop
shlb
xchg
outsb
jmp
or
adc
and
lcall
sub
nop
sub
xor
imul
fwait
jne
lock
stos
cmpsb
je
pusha
cmpl
test
pop
shlb
stc
and
pushf
ss
jnp
data16
das
push
lcall
sbb
mov
popf
cmp
jmp
mov
cli
or
mov
jno
cmp
jb
pop
movsl
or
mov
in
in
add
mov
dec
mov
lea
pop
and
aaa
call
sar
outsb
outsb
xchg
push
pushf
insb
mov
notb
adc
mov
leave
clc
cmpsl
ud0
pusha
gs
pusha
cmp
cmpsl
lret
jecxz
push
mov
and
add
and
sbb
xchg
xchg
movsb
mov
pop
cmpsl
jne
xor
sub
push
jb
jg
sub
push
inc
push
dec
add
push
movsb
inc
sub
movsl
jg
in
mov
rorl
jg
push
psrld
add
sbb
cmp
and
sbb
mov
pusha
inc
fists
aaa
orl
add
scas
push
pop
cmp
filds
icebp
inc
andb
addr16
and
mov
nop
pop
adc
fs
cltd
outsl
or
mov
xor
xchg
out
jl
mov
incl
fdivrs
icebp
mov
subl
push
loop
jg
stos
pushf
lods
lds
inc
leave
mov
mov
mov
push
and
inc
mov
xor
push
bound
and
or
ds
ret
int
inc
adc
pop
repz
pop
push
into
insb
and
stos
jge
xor
adc
xchg
inc
jne
mov
cld
mov
iret
cltd
in
or
mov
out
mov
ret
sbb
insl
es
lods
xor
cmpsb
adc
sub
mov
jp
fbld
dec
dec
hlt
adc
pop
pop
imul
add
add
dec
push
cmp
sbb
push
mov
test
cmp
and
mov
mov
mov
xor
mov
pushf
lcall
push
repz
iret
or
std
and
clc
sub
ljmp
lcall
call
jnp
imul
mov
or
sar
xchg
inc
jp
dec
mov
inc
inc
cld
sbb
sbb
mov
add
rol
rolb
call
popf
push
popf
pop
push
movsl
fwait
int3
mov
cmp
sbb
aas
lods
lahf
xor
mov
mov
dec
xchg
sbb
sbb
ja
xchg
and
jo
sbb
stc
or
pop
dec
dec
pop
cli
pop
cld
inc
imul
mov
loopne
out
je
and
mov
loope
ja
inc
jne
pop
cmp
mov
mov
js
cld
fistps
lea
adcb
mov
mov
push
js
and
dec
jecxz
mov
rorl
mov
in
cmpsb
pop
cmp
lahf
xlat
jae
add
movsl
and
mov
and
push
mov
push
mov
push
mov
cwtl
insb
mov
push
and
loope
call
mov
movsl
sbb
jno
enter
mov
lahf
cmp
outsb
xlat
in
ljmp
push
add
sbb
mov
mov
fiaddl
adc
pop
lods
icebp
mov
pop
mov
xchg
adc
adc
xchg
push
mov
clc
jl
popf
push
mov
mov
add
xor
lods
jl
mov
ja
call
pop
mov
xchg
cs
into
setne
or
sub
mov
incl
or
xor
xor
jge
xor
and
dec
jp
sbb
mov
iret
test
dec
out
pop
jbe
lcall
je
outsl
jmp
jno
mov
dec
push
daa
je
popa
cltd
sbb
in
out
pop
dec
decl
and
mov
inc
add
insl
or
ja
xor
cmpsl
xchg
push
mov
popa
arpl
jbe
loopne
lcall
dec
fstps
cmpsb
mov
test
xchg
pop
inc
mov
andl
out
es
mov
scas
popf
xor
xchg
add
outsl
fs
sbb
inc
dec
test
sub
xchg
push
mov
pop
js
roll
aad
pop
lea
repz
jbe
mov
mov
aaa
jb
aaa
and
sub
cmp
int
mov
cld
mov
loope
lcall
sbb
aas
adc
jno
jno
mov
lcall
lcall
jmp
jae
jnp
in
jns
push
pop
clc
dec
jle
pop
add
mov
decl
pop
or
xorb
jge
push
cmp
jp
ja
dec
mov
and
pushf
fiadds
insl
into
xor
and
push
leave
shrl
ljmp
cmpsl
or
popf
inc
cmpl
pop
outsl
fdiv
dec
push
push
jmp
movsl
bound
hlt
out
decl
ficomps
test
jno
sub
js
add
stos
mov
dec
cmp
mov
cltd
mov
dec
ret
inc
pop
mov
dec
adc
dec
xor
sbb
ficompl
mov
sub
mov
clc
mov
xor
shrl
inc
movsb
xor
fcomip
arpl
scas
dec
push
aad
scas
adc
ret
cld
call
sbb
loop
mov
adc
sub
sbb
jb
lcall
clc
ja
fs
cmp
movsl
pop
pop
push
xlat
lcall
mov
push
adc
xor
je
ret
sarb
jnp
repz
pushl
jb
cli
pop
les
cwtl
jbe
lock
clc
dec
cs
sbb
and
mov
sbbb
repnz
outsb
in
fs
aas
xchg
je
adc
scas
stos
mov
fnstcw
sbb
mov
ljmp
shrb
pop
subb
push
pop
sbb
push
bound
inc
lds
pop
lea
push
lea
std
dec
fs
add
pop
inc
loopne
jae
je
mov
inc
and
sbb
incl
cwtl
fs
inc
adc
inc
jae
nop
cmp
sub
inc
xchg
sub
mov
add
outsl
mov
js
ds
negb
shll
cmpsb
mov
int3
loopne
testb
cmp
jmp
ret
mov
sahf
cmp
jo
sbb
inc
mov
movsl
les
mov
push
add
shl
cmpsb
xor
imul
mov
repz
rclb
sahf
outsb
repnz
lods
push
ret
mov
and
ljmp
or
push
fs
pop
mov
jle
and
xchg
fbld
test
adc
js
xchg
adc
sbb
inc
ret
incl
mov
gs
arpl
mov
inc
js
xchg
cwtl
pop
ljmp
mov
clc
lahf
fcoml
push
mov
imul
dec
mov
add
clc
push
push
inc
pop
push
dec
jg
inc
lcall
jne
in
xorb
les
js,pt
nop
xor
clc
push
decl
lock
jne
mov
dec
leave
push
mov
mov
adc
mov
ret
and
clc
aaa
mov
dec
cld
sub
and
push
js
pop
push
rclb
rol
call
jge
ss
push
adc
test
fbstp
sahf
or
add
std
mov
out
movsl
outsl
and
inc
xor
dec
jb
and
fdiv
pushl
mov
and
bound
jecxz
fs
in
xchg
pop
mov
pop
inc
scas
mov
popf
push
incl
mov
and
xor
mov
mov
mov
lock
incl
push
clc
pop
inc
cld
movsb
clc
scas
insl
arpl
add
addr16
mov
out
add
cmp
lea
imul
add
inc
mov
ljmp
movsb
xor
xchg
movsl
mov
mov
test
fmuls
pop
loope
sub
jmp
mov
mov
out
pop
dec
inc
fwait
mov
shll
inc
xlat
sub
rcrb
lds
adc
and
mov
stc
mulps
mov
push
in
mov
popa
sbb
aam
mov
pushl
dec
sbb
aam
mov
popa
pop
sub
inc
call
adc
mov
lods
xor
xchg
pop
cld
inc
mov
cs
cwtl
or
stos
mov
jmp
rorl
push
je
dec
imul
sbb
lcall
ja
push
push
rorl
or
daa
xor
push
mov
add
pop
xchg
call
decl
jnp
inc
fcmovu
sub
mov
push
pop
jb
outsl
cmp
xchg
lods
fwait
cmpsl
add
mov
jle
incl
js
or
jnp
pop
subl
xchg
mov
inc
jg
lock
mov
jno
xor
ret
pop
mov
es
lea
mov
dec
testl
jg
lcall
or
hlt
fcompl
fiaddl
xorb
push
incl
xchg
xchg
xor
xchg
and
cmpl
or
or
xchg
mov
and
decb
sbb
jl
adc
lods
dec
mov
jecxz
jp
xor
jns
mov
pop
dec
push
pop
fwait
mov
mov
or
roll
xchg
or
lea
xchg
mov
decl
push
dec
sub
cmp
notl
push
jnp
mov
lds
mov
push
fsts
mov
sbb
filds
add
sub
sub
mov
js
clc
jg
call
mov
jp
repnz
pop
cld
ret
mov
dec
sbb
mov
movsb
sub
push
ds
mov
and
adc
pop
movsl
je
sbb
push
fdivr
add
js
push
inc
pop
nop
imul
addr16
rclb
mov
sub
test
mov
stc
mov
adc
adc
sbb
adc
adc
add
bound
pop
fidivrs
push
sbbb
pop
mov
scas
pop
adc
jb
shlb
jo
push
out
or
and
jg
pop
mov
in
stos
addb
pop
pop
aad
inc
rorl
incl
arpl
cwtl
mulb
orb
pop
dec
mov
mov
xor
fwait
js
xchg
lea
push
and
xor
mov
jmp
jle
mov
outsl
rcrl
push
loop
push
sbb
das
jae
pop
xor
xor
cmp
ljmp
bound
dec
fmuls
jno
xchg
shlb
loope
popf
sahf
mov
std
jmp
pop
ret
outsb
ss
subl
loopne
mov
mov
loopne
jmp
dec
popa
das
mov
pop
popf
cmpxchg
mov
insb
decl
rcll
movsb
pop
mov
ja
add
jnp
push
subb
cmp
in
and
xchg
fldt
and
sbb
xchg
and
fidivl
mov
decl
cmp
shrb
cwtl
mov
pop
pop
mov
cmp
je
mov
sbb
jg
outsb
push
inc
mov
inc
mov
imul
jae
pop
and
jnp
jbe
lahf
inc
sar
or
pop
mov
mov
scas
les
loop
mov
aas
inc
pop
cwtl
jge
cmpsl
pop
jno
sub
jb
js
mov
stos
sar
jg
call
outsb
jp,pn
hlt
pushf
ss
jno
jne
cmpsl
and
ja
lock
lock
mov
das
add
hlt
ret
lds
dec
dec
push
ret
lds
out
lcall
fsubrs
mov
decl
mov
rclb
leave
fwait
mov
loop
sbb
fildll
cmc
or
int3
orl
andb
fists
ret
xchg
sub
mov
lods
lcall
or
xchg
stos
call
adc
jp
ror
jb
fucomip
popa
mov
sbb
hlt
incl
mov
mov
sbb
sti
cmpb
stos
movsl
push
push
loop
les
lret
push
arpl
lret
pop
ret
fwait
add
jbe
push
mov
ret
lcall
outsl
incl
and
mov
add
push
jo
cmp
mov
dec
lods
decl
xchg
mov
push
mov
mov
divb
lcall
retw
aaa
mov
and
xchg
mov
sti
int
add
push
inc
push
push
push
rcll
icebp
call
mov
popa
and
test
mov
lahf
add
mov
mov
jb
add
mov
and
jg
outsb
dec
xor
and
add
push
sub
push
out
mov
pop
jmp
jl
roll
cmp
or
sbb
xlat
jo
jb
inc
dec
and
mov
call
test
imul
mov
nop
cmp
ljmp
mov
pop
stos
adcb
xchg
mov
fcompl
cmpl
out
cmpl
mul
pop
jg
clc
push
fs
cmp
cwtl
test
addl
mov
lcall
outsb
out
ja
mov
add
lds
mov
call
add
sbb
mov
pop
push
xor
xor
mov
or
test
stc
xchg
fidivrs
pop
scas
cmc
adc
incl
dec
loope
dec
mov
inc
lret
cmp
stos
mov
aas
imul
pop
xorb
ljmp
aaa
enter
mov
in
pop
out
mov
and
pop
jl
loop
mov
dec
fsubl
repz
pop
in
jmp
sbb
inc
cltd
xor
xor
xor
cmp
stos
cmpsb
adc
jp
pop
push
inc
stos
dec
cmpsb
jae
lcall
inc
aam
mov
dec
sbb
imul
inc
adc
push
push
pop
fnstenv
jle
outsl
adc
xchg
jnp
in
xchg
and
and
lcall
jne
sbb
aas
dec
cmp
and
outsl
outsl
mov
lods
outsl
cltd
and
icebp
pushl
cmp
or
and
js
jns
dec
je
ljmp
pushf
xchg
xrelease
adc
mov
stos
xchg
dec
scas
push
adc
jle
xor
jo
push
scas
shlb
cli
test
fwait
or
xchg
xor
cmc
cmp
cmpsl
iret
nop
pop
push
sbb
sub
adc
or
cmp
xchg
and
fwait
cmp
or
cmpsl
xchg
addr16
jg
das
pop
xchg
add
pop
xchg
fists
and
adc
inc
mov
mov
mov
stos
adc
xor
push
mov
dec
cld
iret
and
inc
sbb
cmpsb
pushl
lods
xor
cmpsb
adc
imul
call
push
adc
push
mov
movsb
xchg
leave
fwait
adc
cwtl
les
das
pop
aam
jecxz
jg
mov
or
pop
dec
jb
push
es
fiadds
cltd
loope
filds
pop
fs
xor
adc
lods
fistl
adcb
cmp
in
mov
pop
ja
outsb
sbb
scas
jne
jle
pop
in
into
jmp
gs
xchg
out
dec
scas
mov
adc
negb
and
inc
ljmp
and
pop
aas
mov
dec
add
in
jno
push
dec
fiaddl
mov
fld
cwtl
sub
mov
pushl
scas
les
iret
xchg
inc
out
and
and
jge
daa
lahf
aaa
push
xor
jbe
mov
rorb
mov
call
mov
or
mov
pop
mov
and
adc
or
mov
ret
push
cmp
sbb
push
out
loopne
outsl
adc
decl
mov
inc
imul
inc
in
mov
test
jmp
add
pop
cmp
sbb
test
xor
cmpsl
fnstenv
sub
je
adc
jl
adc
lret
sub
adc
pop
popf
xchg
movsb
mov
addb
ss
jnp
xor
xor
mov
dec
xchg
cs
ljmp
ffreep
lret
out
cld
fimull
push
pusha
mov
incl
mov
data16
outsl
sti
mov
jl
cltd
add
pop
xchg
insb
xorl
js
add
nop
lock
jno
mov
and
jno
ljmp
mov
inc
mov
sbb
pop
push
mov
jbe
ljmp
stos
sbb
lods
jo
jmp
mov
test
dec
lcall
pusha
pusha
lret
jmp
hlt
cltd
test
outsb
inc
jg
lcall
add
lea
std
call
sbb
subb
in
inc
and
pop
test
lock
inc
cmp
mov
adc
in
push
and
insl
mov
xlat
cmp
ret
std
mov
fidivrs
mov
mov
mov
or
lods
and
pop
ficompl
or
xor
mov
push
sbb
jae
pushl
xor
sbb
adc
or
jne
cmpsl
sub
mov
push
or
mov
lods
les
fs
mov
xchg
imul
scas
arpl
push
lcall
call
adcb
scas
cltd
jns
adc
in
jl
aaa
sahf
mov
xchg
aaa
mov
fldl
and
push
mov
xor
or
mov
inc
mov
pop
aam
mov
icebp
push
mov
add
mov
or
pop
loopne
sbb
jo
cwtl
mov
stos
movsb
rclb
nop
movsl
popf
out
lcall
jg
jbe
insl
jne
or
and
mov
push
ljmp
cli
adc
aaa
stos
inc
call
cltd
mov
push
int3
pop
aam
dec
jbe
repnz
clc
fldcw
enter
add
ret
adc
lods
xor
scas
ljmp
add
push
addb
jae
and
and
sbb
js
call
pop
pop
idivl
jge
jo
ljmp
mov
or
jle
cmp
lods
or
xchg
mov
insb
popa
adc
clc
dec
and
mov
add
mov
pop
les
mov
incb
push
clc
jmp
test
adc
cmpsb
stos
dec
pop
push
jl
hlt
das
and
add
imul
or
fbstp
cmp
or
in
or
filds
loope
jge
into
xor
sbb
inc
jmp
and
cmp
or
and
loopne
pop
and
inc
sub
xor
js
aas
push
or
sbb
add
sub
stos
into
inc
inc
loopne
push
scas
xor
pop
cmpsl
xor
testl
mov
pop
cli
push
test
inc
or
adc
mov
ss
lcall
or
cmp
sbb
aas
scas
mov
pop
aam
jns
cmpl
cmc
jo
xor
pushl
mov
and
sbb
data16
push
mov
pop
clc
lcall
dec
ficoml
sub
inc
mov
pop
pop
cmpsb
cltd
clc
out
push
inc
add
fdivrs
fsubl
pop
rcrb
fnstsw
scas
and
xor
jne
ljmp
icebp
jbe
icebp
insl
inc
inc
outsb
jle
pushf
jb
xchg
test
jl
cmpsb
les
and
mov
adc
mov
adc
sub
cmp
mov
insb
lods
clc
lcall
xchg
or
cmpsl
sti
das
pop
loope
mov
sub
cwtl
dec
add
mov
fcos
das
test
adcb
inc
mov
inc
je
jecxz
jne
int
lock
js
aas
push
xchg
dec
ds
decl
and
adc
daa
lods
mov
popa
aam
jp
aam
jnp
sarl
movsl
jg
pop
inc
jmp
xchg
in
or
lcall
cmp
inc
lods
xor
dec
cs
cmpsb
mov
pop
stos
mov
mov
lcall
les
mov
xchg
stos
outsb
movsb
jecxz
std
jmp
mov
mov
xchg
cmp
mov
filds
loope
data16
into
outsl
sti
and
ljmp
pusha
mov
hlt
mov
scas
clc
sub
xchg
sbb
inc
in
repz
movlps
loope
adc
leave
inc
dec
incl
bound
or
adc
inc
ret
inc
xchg
jg
fiadds
leave
xchg
inc
push
movsb
aaa
movsl
shrl
jns
ljmp
push
xchg
cmp
xchg
movsl
mov
insb
repz
xchg
sbb
cld
cwtl
clc
scas
jge
outsl
mov
mov
ja
pop
mov
xchg
test
imul
pop
inc
test
mov
lahf
ja
inc
gs
adc
cmp
jg
inc
iret
das
mov
adc
dec
xchg
nop
adc
push
fmull
es
outsl
clc
dec
aad
adc
cmp
test
stos
sar
ljmp
or
test
xor
das
mov
fsts
cmp
push
sub
into
mov
or
ja
shll
jg
mov
push
daa
aam
push
dec
fs
mov
data16
ljmp
cmpsl
stc
jo
push
push
popf
sub
mov
xchg
mov
pop
insl
daa
cli
inc
sarb
sub
cmp
push
ljmp
addr16
xchg
lret
push
insl
inc
push
or
adc
insb
sarl
mov
or
lods
cmp
popa
or
jmp
das
stc
xchg
adc
xchg
enter
outsb
sub
or
dec
dec
sbb
push
call
xor
sub
xor
dec
xor
roll
adcl
fwait
test
jo
push
or
stc
cmpsb
mov
push
mov
jecxz
cmp
movsl
mov
or
icebp
ja
clc
jle
mov
mov
imul
ja
stos
out
add
dec
fistpll
cmpsl
cmpsb
ss
jne
ret
sub
jg
sbb
addb
mov
ds
scas
cmp
cmp
jp
addr16
out
and
mov
addr16
pop
dec
or
add
mov
in
cmp
cmovo
test
push
mov
pop
dec
popa
cmp
push
dec
aaa
ret
mov
dec
push
push
lcall
decl
lock
imul
push
leave
jns
dec
push
cmpsl
dec
cli
dec
jns
add
cwtl
cmpsl
mov
lcall
dec
jmp
cs
fisubs
lret
jno
cs
cli
push
cwtl
pop
sbbb
inc
ficoms
enter
out
cmpsl
add
scas
mov
scas
fwait
add
cmp
imul
lds
or
push
push
cmp
call
cld
nop
pushf
jnp
mov
mov
leave
fsubrl
jbe
xchg
nop
mov
inc
je
cmpsb
sbb
xchg
jmp
mov
stos
test
mov
gs
dec
das
inc
add
loop
cld
aaa
inc
sbb
xor
repnz
movsl
stos
add
jbe
pop
rclb
fbld
jmp
mov
bound
and
xchg
pop
lret
push
adc
xchg
ret
sub
push
push
add
das
xor
xor
repz
dec
mov
add
addl
cmp
xchg
roll
lcall
dec
stc
cmp
repz
pop
enter
icebp
out
punpcklwd
insl
pop
stos
push
push
clc
aas
pop
test
lods
popf
mov
bound
mov
inc
iret
sub
pusha
pop
outsb
push
dec
jno
and
inc
js
dec
inc
adc
out
lahf
test
call
pop
and
push
mov
mov
js
or
insb
inc
sbb
mov
aaa
mov
xor
pop
inc
pop
pushf
ljmp
sbb
pushl
ljmp
jg
repnz
pop
sbb
lcall
mov
sbb
push
lcall
inc
dec
and
enter
ss
sbb
cmpsb
add
xchg
hlt
incl
je
xchg
cmp
mov
lds
adc
xor
mov
nop
ljmp
loop
jae
push
lea
pop
in
gs
cmp
jg
jmp
dec
fwait
jno
xchg
pushf
iret
aam
ret
inc
push
aas
movsb
mov
or
or
pushl
repz
mov
insl
inc
insb
jecxz
pop
pop
repnz
jns
sub
pop
inc
repnz
insb
fidivl
je
dec
pop
cmpsl
out
push
scas
xchg
sub
out
sub
ljmp
or
sbb
les
data16
rcll
cmp
cmp
nop
mov
and
fldl2e
fimull
aaa
rcll
std
mov
adc
mov
lds
lock
dec
lcall
sbbl
sub
cmp
sbb
lcall
addl
and
push
pop
mov
pop
fiadds
push
incl
imul
push
cltd
jb
xchg
fdivr
jg
movsl
add
push
bound
and
dec
gs
lret
mov
inc
lcall
xor
dec
and
lcall
insb
out
sub
mov
pop
fiaddl
pushf
arpl
push
cmp
inc
stos
push
decl
ljmp
push
cli
xor
icebp
sbb
inc
mov
jl
pop
ss
lods
dec
iret
mov
mov
rolb
sahf
outsb
leave
xor
mov
lcall
or
sbb
lods
cs
outsl
pop
sub
call
cmp
or
mov
mov
sbbb
outsb
fbld
in
lahf
inc
ljmp
xchg
aaa
arpl
daa
lods
mov
jb
mov
cmp
pop
or
out
incl
adc
jg
jne
cmp
xchg
xchg
cld
sub
call
sahf
or
das
mov
cwtl
cmp
jns
jb
inc
push
fwait
or
js
std
cltd
push
jl
push
add
decb
dec
mov
addr16
fldt
pop
leave
mov
popf
and
lea
sub
jns
aam
nop
add
inc
adc
lock
jg
mov
pop
movsb
jle
lcall
mov
outsl
std
add
mov
or
test
pushl
mov
add
jnp
or
jne
xchg
lock
xchg
push
fwait
popf
ds
pop
pop
repz
mov
jmp
in
mov
repnz
cmp
add
jg
mov
jmp
add
aas
mov
scas
dec
das
lcall
pushl
cmp
loop
jbe
dec
rcrl
loop
mov
fidivl
cltd
pop
mov
inc
in
das
mov
imul
jne
mov
pop
mov
jg
adc
cmp
inc
fcompl
jns
xor
jecxz
incl
push
gs
mov
lret
add
push
add
or
test
fcomip
in
aam
push
out
cmpb
cli
movsl
es
hlt
sub
call
adc
xchg
mov
adc
movsb
jecxz
fcmovu
xor
dec
mov
nop
andb
data16
lahf
repnz
add
push
jg
mov
cmp
out
pop
loope
les
push
sbb
adc
add
icebp
es
xor
jg
test
lods
mov
jl
pop
push
in
add
enter
aaa
mov
dec
cmp
aam
lret
loop
clc
dec
out
mov
push
adcb
pop
pop
stc
jg
or
stos
movsl
fldenv
mov
in
addr16
pop
dec
sub
mov
mov
stos
jb
pop
inc
push
pushf
pop
mov
cmp
push
push
sar
mov
andb
lret
nop
push
xchg
incb
and
pop
rorl
mov
jg
imul
scas
pushf
insl
jle
pop
jg
jg
imul
sbb
ja
shlb
cmp
or
jle
dec
inc
cmpsb
xchg
cmpsl
cmpsb
frstor
test
xor
cmpsl
stc
ja
scas
mov
es
xor
movsb
pushl
add
mov
arpl
clc
mov
scas
sbb
popf
cmpb
mov
je
pusha
add
test
imul
scas
dec
jns
popf
andb
orb
xchg
je
mov
outsl
mov
data16
dec
adc
jbe
mov
stos
pop
and
mov
test
inc
pop
sbb
jne
mov
movsl
pop
ja
jmp
dec
pop
int
or
mov
pusha
sbbl
xor
fisubrs
push
pop
scas
push
mov
mov
push
dec
sbb
ljmp
mov
adc
mov
pop
cmpsl
fsts
imul
scas
andl
aam
xor
mov
xorb
jmp
push
cmp
or
adc
aaa
mov
xor
scas
ljmp
mov
adc
or
sbb
mov
mov
aas
inc
sbbb
cmp
xchg
aad
icebp
push
arpl
clc
aaa
lret
cwtl
xchg
std
xor
jle
mov
insb
jmp
jns
cmc
aas
addw
pusha
dec
fwait
negb
add
hlt
mov
mov
add
or
mov
popf
into
ljmp
inc
fisttpll
inc
pop
cmp
mov
jno
sahf
sbb
icebp
cwtl
cmp
loopne
xchg
mov
and
call
sub
mov
add
cld
fsubl
mov
pop
shrb
mov
or
shrb
mov
mov
xor
pop
add
push
adc
sub
xor
hlt
aad
fwait
stos
inc
gs
push
inc
sbb
cwtl
test
xchg
repz
lds
mov
sbbb
jbe
xor
jmp
push
lret
push
pop
add
test
push
pop
imul
adc
fidivrl
test
cli
dec
or
movsb
daa
mov
incl
aam
and
cmp
pop
fwait
mov
xchg
adc
pushl
inc
inc
lret
mov
jg
je
lcall
sbb
inc
pop
pushf
fadds
mov
and
mov
xchg
fcmovbe
mov
dec
iret
test
adc
aaa
jns
xchg
push
int3
and
dec
std
lret
call
aam
sub
repnz
addr16
add
or
push
fwait
and
pushl
sub
inc
cmpsl
mov
fwait
add
sbb
cmp
andl
lret
push
xchg
clc
incl
xchg
and
sahf
mov
jns
sbb
fldenv
fsts
push
inc
paddsb
sbb
aas
cld
xor
sub
sub
xchg
xor
test
xchg
jno
xor
mov
add
incl
add
xor
adc
pop
aas
and
xchg
pop
mov
scas
ss
inc
xchg
inc
out
sbb
rclb
xchg
fisubl
fwait
pop
mov
lds
pop
and
test
bound
push
or
sar
mov
outsb
scas
sbb
add
pushf
add
imul
rolb
cmpsb
sbb
jae
in
xor
cmp
jg
xor
add
mov
jbe
and
sub
sub
xor
call
xor
add
mov
mov
mov
aas
push
cs
mov
sbb
insl
out
mov
push
jmp
lods
shll
mov
out
ret
outsl
je
or
xlat
pop
cmp
popa
mov
lcall
cmpsb
fidivl
jno
xor
mov
cmc
sarb
std
or
subb
lcall
sti
sub
push
adc
push
pop
ret
in
out
inc
jecxz
mov
outsl
mov
jg
call
rorl
xchg
adc
pop
mov
roll
push
jg
push
mov
incl
jae
mov
cs
rcrb
mov
pusha
push
ljmp
xchg
sbb
js
inc
mov
jnp
sub
ds
lock
adc
sub
je
cmp
mov
jg
cld
imul
pop
cli
das
dec
ret
or
sub
nop
xor
sbb
cld
imulb
les
adc
pop
sbb
lods
and
and
stc
mov
fimull
mov
sub
push
popa
xchg
test
mov
mov
out
mov
xor
pop
dec
das
sar
ds
iret
xor
sti
movsb
mov
pop
cwtl
xchg
add
fiadds
xchg
call
jle
dec
je
inc
and
in
mov
inc
repnz
out
cli
cmp
sbb
push
xchg
lds
js
pop
fisttpl
or
mov
fcomip
pushl
ljmp
cmpsb
insw
adcb
or
decl
push
xor
cmp
xchg
sbb
inc
inc
fwait
loopne
int
ret
andl
incl
lret
aam
je
pop
or
mov
or
int3
xlat
in
clc
cltd
jo
arpl
ds
cmp
and
xchg
fs
add
les
jmp
or
aam
push
adc
ljmp
pop
cli
out
push
mov
sbb
repz
dec
test
roll
push
daa
mov
fisubrl
dec
repz
stos
stos
lock
jmp
pop
pushf
popa
out
sbb
xor
mov
movb
aaa
cld
filds
out
and
sarb
add
push
xor
ret
sbb
insl
jecxz
hlt
arpl
popf
or
inc
cmp
or
mov
inc
incl
shlb
mov
aam
fisttpl
sar
mov
mov
inc
dec
inc
push
pop
jne
xchg
mov
int3
sub
mov
cmp
cmpb
mov
cmp
aaa
out
xor
sbb
popf
outsl
clc
push
ret
fs
frstor
mov
jbe
xchg
and
xor
jb
aas
lods
xchg
xchg
ret
xor
popa
call
fistps
mov
and
cmp
push
sub
in
and
cmp
sar
pushl
mov
push
mov
jb
mov
lods
mov
sub
mov
icebp
xchg
stos
inc
add
jae
mov
and
jnp
outsb
subb
int3
mov
inc
pop
sbb
xor
add
push
dec
lcall
jmp
add
jmp
ds
stos
adc
mov
es
jg
sti
arpl
mov
sub
cmp
scas
sub
xchg
push
push
loopne
fistps
pop
mov
push
cmp
sar
mov
pop
mov
sbb
sub
xchg
mov
mov
push
test
adc
das
fs
add
das
sub
shl
ret
pushf
mov
mov
aas
cmpsb
lods
ljmp
cmp
cmpsb
add
js
sub
inc
cld
ja
pushl
cmp
jnp
adcl
pop
jae
xor
xor
or
or
jno
lret
or
pop
xchg
int3
cmp
aas
scas
mov
insl
ret
fdivrp
decl
je
sub
sbb
jmp
xchg
push
jg
cs
lods
mov
test
sub
mov
imul
movsb
stos
add
jnp
pop
ljmp
jno
je
or
js
adc
sbb
or
lcall
bound
mov
imul
ret
leave
adc
jo
sub
push
clc
das
sarb
int
mov
scas
pushl
js
push
popa
aas
jp
push
mov
nop
mov
pushf
jb
cwtl
mov
or
call
cs
lds
mov
test
loopne
decl
lods
dec
and
cltd
outsb
mov
inc
jmp
ljmp
sub
jmp
jbe
xor
adc
mov
jl
dec
cmp
mov
aas
push
int
jnp
aad
push
decb
jae
sub
movsl
stos
push
pop
add
lock
out
dec
push
push
mov
int3
pop
xchg
int
push
pop
cltd
jns
xchg
int
inc
leave
popf
and
popa
adc
sbb
or
cld
movsl
cmp
push
push
push
push
fisubrl
mov
sub
pushf
sbb
lahf
nop
xchg
jg
dec
jp
mov
pop
dec
rorl
nop
or
mov
sbb
leave
push
daa
ficoml
jns
out
cmp
mov
inc
sti
xor
push
jge
inc
pop
push
add
mov
lods
pop
rcr
jle
mov
xchg
aaa
cld
jg
push
daa
fldenv
mov
cwtl
inc
xchg
jge
std
ljmp
or
aas
mov
imulb
sahf
pop
mov
es
sub
push
push
mov
aas
push
xchg
or
int3
jae
add
cs
sbb
ss
xor
add
or
jmp
push
inc
adc
dec
mov
decl
stos
gs
sbb
bound
loopne
aas
iret
adc
in
mov
rclb
mov
mov
mov
loop
ss
cmp
jbe
sahf
mov
cmpsb
clc
pushf
add
aaa
xchg
or
pushf
aaa
xchg
push
jg
test
sbb
and
std
fucomi
lods
bound
mov
mov
jl
xchg
lahf
imul
jle
add
pop
popf
sbb
insl
cld
jmp
aaa
push
cmpsb
pushf
lods
ficoml
repz
les
push
xlat
iret
js
mov
pushf
outsb
add
fs
adc
setbe
rclb
pusha
orl
inc
or
lahf
dec
jecxz
mov
pop
and
daa
jl
movsl
add
lcall
shlb
mov
js
add
or
lahf
subl
xor
jne
sar
mov
das
pop
rcrb
out
mov
icebp
adc
ss
fcoms
inc
out
mov
in
sbb
sub
decl
xchg
push
addr16
and
popa
mov
pop
es
fisttpll
outsb
iret
sbb
aas
rcrb
repnz
xchg
and
dec
mov
mov
jae
or
cmp
cld
add
mov
or
lahf
rorb
arpl
lcall
push
cmp
mov
popf
xchg
pop
mov
lods
imul
int
lcall
icebp
jg
push
sub
fisttpll
cmc
push
and
pop
mov
sub
jmp
cmp
or
jo
out
push
insb
gs
ficoml
push
inc
fistl
jle
or
call
xchg
jb
push
stos
xor
out
xchg
stos
pushf
scas
and
in
jno
ds
xor
cmp
cmp
insb
pop
mov
mov
cmp
dec
mov
icebp
fwait
sub
push
adc
jnp
or
xor
or
mov
in
loop
icebp
outsl
clc
pushl
jns
pop
les
inc
rorl
pop
in
adc
push
mov
ss
pop
sbb
mov
push
push
sub
or
dec
dec
pop
add
adc
mov
jg
pop
or
and
pop
iret
xchg
pop
push
cmp
int
jle
push
ljmp
pop
inc
mov
push
cld
outsb
push
or
jae,pt
sarb
sbb
test
ljmp
pop
or
jae
add
dec
enter
cmp
xchg
into
and
push
mov
outsb
jo
jg
ljmp
mov
xor
mov
push
and
mov
call
pop
mov
dec
dec
dec
pop
shrb
sbb
mov
jbe
dec
jo
lods
cmp
adc
adc
and
mov
xchg
pop
mov
inc
xchg
dec
mov
fdivl
mov
call
sub
mov
add
inc
pusha
loop
xchg
jb
ret
fistps
nop
popa
jbe
inc
xor
xchg
add
sbb
xorl
andb
call
scas
fmuls
mov
dec
data16
daa
fwait
sarb
sbbl
xchg
scas
jno
lods
lods
arpl
lods
lcall
movsl
mov
pop
add
sub
inc
andb
fisubrs
pop
movsl
jnp
sub
adc
inc
pop
aam
movsb
ja
add
pop
pushf
xor
pop
pop
incl
inc
sbb
sub
outsb
and
jne
jne
pop
ljmp
mov
cmpsb
cmpsb
cmp
sub
mov
fcoml
lcall
sub
outsb
sub
pop
vcvtss2sd
cwtl
xchg
mov
mov
mov
inc
adc
push
movsl
movzwl
xor
popf
cmpsl
xchg
jbe
mov
jns
cmp
jnp
clc
nop
sub
dec
jnp
add
push
pushf
pop
pop
add
sahf
dec
mov
insb
mov
lcall
les
fstl
incl
or
and
inc
int
mov
aas
push
adc
mov
cltd
in
addl
daa
inc
xor
mov
incl
les
sub
fdivrs
pop
in
push
fadds
xchg
aaa
test
pop
int3
cmp
xor
mov
sbb
out
fbstp
mov
insb
and
jo
sub
lock
xchg
push
sub
and
cmp
movsl
xchg
mov
and
mov
test
decl
jns
or
inc
sbb
cmp
aas
loopne
xor
adc
mov
stos
mov
mov
push
mov
jg
xor
jge
lcall
fimuls
sub
or
rcrl
lock
fsubs
inc
dec
aas
insb
cli
push
loope
cli
or
js
add
int3
popf
adc
sbb
and
mov
jae
int
mov
inc
leave
stos
imul
ja
mov
sbb
sub
sub
cld
add
xor
outsb
sbb
outsl
loopne
mov
test
cltd
jb
inc
adc
jmp
sbb
shrb
pusha
negl
es
outsl
test
jl
or
push
push
and
cmp
lods
push
addr16
call
clc
aaa
loopne
push
pop
int3
imul
pushl
iret
adc
xchg
add
ja
dec
pop
pop
dec
ja
loop
insb
notb
push
iret
sub
fldl
ljmp
stc
ret
imul
push
jne
nop
mov
jmp
int3
push
xchg
ss
into
mulb
sbb
filds
push
movsb
mov
js
mov
inc
test
outsl
cmp
inc
cmp
inc
test
inc
jecxz
cmp
insl
jno
dec
push
jle
sbb
pop
das
dec
mov
add
mov
in
and
xlat
dec
push
sbb
sar
cmc
push
loope
cli
mov
xchg
add
jmp
lcall
shlb
rorb
jae
xor
push
jno
jne
mov
out
test
and
stos
jp
dec
test
es
lods
xor
mov
nop
mov
sahf
lcall
push
lods
mov
and
cwtl
cmp
out
xor
add
lret
and
test
rcrl
in
inc
ja
shlb
mov
mov
push
addr16
outsl
clc
push
push
dec
inc
insb
dec
dec
pop
out
cmp
dec
loopne
inc
jbe
int3
hlt
leave
cli
jmp
or
mov
inc
push
fwait
movsb
mov
sub
fisttps
shlb
aas
xchg
jge
loopne
movl
test
ficoml
je
push
icebp
push
pop
stos
dec
adc
xor
int3
sub
xor
xor
xchg
incl
cld
lock
cmpsl
sub
dec
push
mov
xchg
call
mov
xchg
push
add
mov
test
jp
mov
mov
xor
adc
mov
dec
cmpsl
das
push
and
cltd
cmp
cs
jbe
push
sbb
je
cmp
cmp
and
inc
cld
les
dec
popf
and
pusha
push
inc
ljmp
mov
fdivrs
fstps
je
adc
pop
dec
std
sub
mov
test
dec
ror
sar
filds
rorl
cmpsb
lods
xchg
dec
jg
inc
ret
insl
dec
fsubr
les
insl
jmp
loop
lock
ret
add
stos
pop
not
jecxz
arpl
in
fistl
out
push
adc
movb
jecxz
aam
fucomip
rorb
loopne
pushl
inc
insb
jecxz
gs
lock
les
add
scas
imul
xchg
sub
add
aam
pop
mov
sbb
rolb
pusha
pop
dec
repnz
jl
mov
fs
fdivrl
dec
lcall
push
es
jbe
pop
mov
dec
and
sbbb
push
std
xchg
xor
stos
stos
pushf
sar
pushl
mov
in
mov
fsts
xchg
cld
shrb
inc
mov
cs
dec
ja
sbb
and
stos
inc
xchg
rorl
cmpsl
fwait
inc
dec
movsb
repnz
fsts
sbb
fcomip
jg
loop
insl
out
or
rcrl
mov
xorl
xlat
adc
je
mov
push
call
popa
scas
adc
dec
loope
push
lods
ss
xor
jns
and
std
jg
inc
aam
dec
pop
cmp
adc
mov
outsb
mov
cltd
ljmp
mov
jnp
add
inc
inc
xchg
leave
mov
fmuls
pop
ljmp
push
add
aaa
bound
pop
push
sbb
adc
shlb
inc
mov
push
outsb
jge
add
bound
das
push
cltd
xor
jbe
jmp
int
jbe
dec
sahf
les
dec
pop
nop
and
or
xchg
adc
incl
cmc
and
js
lea
adc
mov
mov
pop
imul
mov
leave
mov
das
pop
loopne
pop
and
decb
inc
xor
cmp
xor
mov
cmp
shrb
push
dec
outsl
xchg
test
mov
sbb
jo
jne
xor
mov
scas
xchg
xchg
cmp
pop
fdivr
ljmp
or
xor
lcall
inc
out
out
inc
inc
mov
pop
pop
add
call
xchg
inc
fdivrl
jbe
xchg
dec
out
pop
dec
dec
pop
addr16
nop
jno
stos
je
fcoml
push
dec
add
repnz
test
inc
mov
xchg
dec
pop
xchg
push
fwait
xchg
lcall
lds
pop
nop
xchg
mov
adc
mov
xchg
push
and
jo
inc
fwait
stc
bound
aam
push
xchg
jno
xor
pop
ljmp
and
xchg
dec
push
jb
lcall
repz
bound
dec
fstpt
mov
xor
mov
stc
imul
xchg
out
adc
xor
ret
mov
adc
dec
sbb
nop
inc
idivl
mov
cltd
push
pop
push
or
iret
lcall
jecxz
or
lock
inc
out
inc
sbb
pusha
std
push
out
cltd
call
jp
std
mov
es
add
sbb
hlt
or
mov
xchg
ret
les
xchg
popf
xor
xor
sub
mov
push
incl
sub
in
dec
das
shrb
fcompl
pop
xor
jle
flds
xor
dec
xchg
cmp
pop
in
test
adc
lea
jo,pn
fiadds
pushf
sub
fstpl
lods
incl
rcr
push
bound
stc
dec
je
cmp
jb
int3
jb
push
stos
or
shll
or
xor
pushl
mov
xchg
mov
dec
xchg
insb
mov
adc
mov
ja
call
daa
xchg
mov
rcl
xor
lea
insb
adc
jg
sbb
pop
loope
mov
lcall
xchg
cmp
ljmp
xchg
loop
imul
mov
dec
push
loopne
inc
jmp
sahf
roll
mov
aas
xor
sub
sahf
add
jecxz
mov
decl
lock
jae
mov
inc
mov
mov
das
popf
sahf
bound
pop
ret
in
add
das
and
sub
xor
aaa
imul
pusha
add
aaa
outsb
mov
ljmp
sub
xor
cwtl
in
push
or
or
mov
push
lods
or
jo
cmp
je
mov
mov
nopl
fnsave
inc
dec
cmpsb
test
or
incl
push
rorl
mov
xor
test
xchg
cmpsl
push
adcb
pop
cmp
cld
and
les
add
jmp
cmpsl
jbe
xchg
lods
pop
insl
xchg
lret
ljmp
es
test
lock
jg
cltd
push
xchg
jg
jl
cltd
cld
scas
inc
pop
cmpl
mov
cmp
push
insb
sti
mov
jl
dec
outsl
fildl
push
loop
jbe
adc
sub
int
add
mov
sub
sub
lds
pop
rorb
mov
jle
dec
push
mov
push
dec
sbb
fs
mov
mov
push
bound
adc
clc
xor
bound
cwtl
jns,pn
sub
clc
pop
push
decb
cmp
adc
pushl
mov
or
add
notl
xor
and
jl
mov
jmp
ss
ljmp
dec
std
xor
aaa
sbbl
int
inc
aas
jae
cmp
xchg
clc
aaa
std
out
scas
in
lcall
jle
cmp
inc
hlt
jle
add
sub
adc
or
cmpsb
adc
mov
xchg
push
daa
mov
hlt
fisttps
jo
adc
push
mov
and
outsl
clc
xchg
mov
in
and
jle
mov
jg
or
aaa
cmp
fmuls
inc
adc
adc
add
ds
xchg
dec
dec
jbe
sar
jg
jbe
lods
xor
inc
lea
xor
jg
or
mov
mov
push
ret
aas
fs
orb
loopne
call
loopne
aam
push
dec
out
lods
mov
pop
arpl
push
into
mov
jne
mov
push
push
fwait
cmp
and
sbb
es
xchg
leave
sub
data16
pop
mov
call
js
mov
sbb
dec
dec
mov
jno
push
movsb
pop
xchg
adc
cwtl
daa
xchg
or
mov
add
xchg
mov
ljmp
mov
and
mov
mov
xchg
mov
adc
mov
out
dec
das
pop
movsl
cmp
jne
es
mov
fcomi
or
push
pop
ret
rorl
cld
jg
les
xchg
popf
adc
ja
jp
inc
add
lcall
stos
dec
sub
or
mov
inc
ja
and
call
fistps
xor
pop
and
lock
iret
add
lds
test
adc
jg
pop
mov
jns
pop
xor
stos
clc
aaa
dec
hlt
xchg
dec
orb
xchg
cli
pushl
cvtps2pd
sub
mov
sub
leave
push
clc
adc
call
out
mov
push
inc
jo
insl
cmpsl
push
xchg
dec
sbbb
mov
adc
int3
ret
and
lahf
clc
lcall
andb
push
loope
mov
out
inc
cmp
xor
dec
xchg
test
dec
lcall
fs
pop
je
std
jecxz
mov
jmp
xor
add
out
imul
push
imul
ret
inc
add
ja
andl
push
mov
les
mov
push
push
pop
jp
fiadds
push
pushf
sub
dec
pop
icebp
subb
push
loop
fimull
adc
lods
push
decb
xchg
push
sahf
cmp
push
pop
add
sub
inc
cmp
mov
out
ljmp
adc
push
adc
xchg
movsl
into
mov
inc
mov
call
test
inc
loope
inc
lds
mov
and
shlb
xchg
dec
dec
aam
mov
push
inc
scas
dec
test
xor
xchg
sbb
and
pcmpeqd
inc
movsl
dec
push
ljmp
mov
arpl
dec
out
int3
aas
jge
push
scas
add
out
mov
add
popa
popl
repz
ljmp
es
mov
pop
jg
xlat
pop
jne
or
roll
dec
cmp
push
cmpsl
gs
or
push
xor
ds
jp
decl
pop
jo
lds
xchg
sti
and
or
stos
lods
inc
xor
cld
decl
add
out
aaa
lcall
mov
aaa
push
std
push
adc
movzbl
dec
dec
sbb
outsb
adc
push
dec
mov
pop
push
or
call
mov
add
cmp
pop
fldcw
je
pop
sahf
mov
inc
loope
incl
pop
rep
ja
gs
loop
movsl
inc
stos
xchg
fbld
je
xor
int3
sub
test
aas
pop
cmp
popf
dec
lods
mov
mov
fcomip
jg
xor
sahf
sti
pop
inc
pop
sarb
sarl
xor
dec
leave
lcall
ret
push
mov
inc
insb
jb
pop
lea
dec
or
pop
icebp
popa
test
inc
and
cmp
outsl
jl
and
fwait
sub
sub
scas
xorb
mov
insb
lock
lcall
or
daa
je
xchg
adc
and
sbb
outsb
gs
push
sbb
insb
pop
xor
shlb
sbb
jno
mov
dec
adcl
add
and
lods
clc
ljmp
and
shlb
or
test
mov
icebp
mov
aam
cli
cs
and
adc
stos
pop
cld
incl
add
jo
icebp
inc
rcrl
stos
or
mov
and
push
jge
xchg
gs
loopne
fdivs
adc
pop
fldcw
mov
add
lods
inc
xchg
sub
popf
movsl
movsl
decl
add
adc
ds
pushl
jl
loopne
sbb
mov
mov
jns
xlat
js
mov
in
sar
push
xchg
adc
sbb
cltd
ljmp
or
repnz
ja
pop
pop
dec
xchg
fnstcw
call
clc
xorl
jb
xor
mov
mov
insb
adc
ljmp
jno
or
iret
nop
adc
lds
outsl
sub
dec
mov
es
xchg
mov
incl
lods
outsl
cmp
mov
out
jmp
jae
adc
jmp
fists
fsubs
fs
or
pop
adc
push
and
cld
stos
nop
pop
xchg
scas
mov
and
and
dec
stos
js
aas
xchg
push
pop
hlt
push
or
push
aaa
xchg
jg
push
aas
nop
movsl
jecxz
out
and
xor
stos
fldenv
bound
bound
sbb
xor
pop
iret
sub
add
jmp
es
dec
movsl
gs
push
push
mov
xchg
lods
das
push
call
out
or
and
ljmp
xlat
nop
incl
sahf
pushf
cmp
mov
mov
push
addr16
addr16
lcall
andb
ljmp
in
mov
dec
test
push
cmpsb
jne
ret
mov
mov
jg
xchg
jg
xor
inc
mov
dec
cld
adc
sbb
sbb
movsl
andl
dec
cs
cmc
lcall
out
mov
loopne
cmpsb
fldenv
movsl
test
mov
movsb
jns
dec
cld
add
scas
js
aaa
lcall
add
push
arpl
inc
cmp
fdivrl
test
clc
push
lahf
ss
dec
xchg
inc
mov
jle
idiv
daa
jmp
mov
jl
out
bound
jno
add
push
decl
arpl
subb
jmp
xor
lods
in
mov
cltd
in
movsb
dec
jbe
lcall
pushl
mov
and
or
decl
push
movb
adc
dec
lret
mov
mov
cs
incl
jge
mov
add
mov
lods
fmull
xchg
cmpsl
add
add
lret
mov
jl
loopne
testb
push
stc
and
sbb
jg
cld
call
cmpsb
sub
mov
push
xchg
out
lret
shrd
sub
add
mov
fnsave
icebp
incl
xor
subl
and
mov
push
scas
push
push
pop
outsb
cmpsl
sbb
push
out
pop
cmc
jmp
mov
sub
jmp
daa
push
xor
ss
push
jp
call
shlb
lods
adc
add
add
jmp
push
xchg
adc
push
push
cmpsb
add
mov
push
xor
push
mov
dec
fsubrl
jo
ret
mov
push
inc
mov
pop
inc
pop
and
inc
lods
cmp
xor
mov
cld
ljmp
mov
inc
pop
pop
dec
cld
scas
movsbl
inc
nop
jecxz
inc
push
adcb
and
cmp
clc
jns
mov
cli
mov
jno
mov
lcall
insl
pop
mov
cmpsl
movsb
add
cwtl
cli
sbb
or
scas
xor
addb
inc
mov
icebp
ljmp
test
inc
movsl
push
jb
insl
push
xor
adc
testb
aam
push
adc
loop
addb
mov
xor
lods
nop
aas
stos
jle
leave
loop
dec
popl
das
pop
lahf
xchg
fdiv
xchg
dec
insl
inc
pop
or
pop
nop
mov
loope
mov
mov
push
loopne
and
sbbb
dec
jle
cld
and
jg
cld
push
mov
cld
adc
mov
leave
xor
std
fisttps
adc
out
mov
ds
jge
mov
mov
dec
sar
inc
cmp
adc
dec
and
lods
adc
pop
movsb
jmp
pop
push
inc
add
inc
popa
or
cmpsb
aam
cmpsl
es
call
push
cmp
xor
push
loopne
xchg
in
xor
shr
push
add
js
stos
icebp
aas
movsl
or
lds
dec
sub
sub
sahf
mov
xlat
add
sub
sub
ret
pop
mov
call
or
sub
fiaddl
subb
test
call
mov
data16
incl
lock
pop
cmp
cmp
fistl
sbb
jge
lods
inc
push
jae
call
mov
test
mov
cwtl
xor
loop
loopne
shlb
ja
adcl
shlb
pop
sbb
pop
icebp
fisttps
add
sub
mov
mov
mov
in
sub
cmp
sbb
out
and
xchg
scas
jns
sbb
xchg
movsl
mov
pop
sbb
mov
or
xchg
test
subb
sub
ret
incl
pop
popa
xchg
inc
sub
xchg
pop
inc
add
mov
jnp
mov
call
push
pop
aad
data16
pop
pop
mov
dec
hlt
adcb
dec
push
pop
xor
jge
xor
mov
jne
mov
out
inc
dec
and
inc
dec
cmp
pusha
and
out
mov
mov
dec
ret
lods
sbb
push
loope
jno
lcall
mov
mov
mov
pushl
sbb
and
out
sbb
cmpsb
add
and
aad
pop
push
ret
jg
dec
out
gs
ljmp
push
inc
scas
pushl
pop
rcll
fisttps
fisttpll
mov
lds
mov
scas
es
hlt
jmp
mov
jo
inc
orb
or
ljmp
push
xchg
cmp
dec
pushf
and
sub
into
or
in
sbb
xchg
push
out
jae
jg
lea
imul
mov
insb
xchg
push
cmp
add
enter
dec
dec
xchg
cmp
out
inc
out
pushf
push
cmpsb
xchg
xchg
aam
cmpsb
test
jo
pop
lock
jecxz
incl
pop
pusha
lcall
sub
call
xchg
pop
test
cmpsb
into
or
add
adc
push
movsl
sbb
xor
adc
or
mov
nop
div
aas
lea
or
push
stc
lahf
jle
pop
incl
cmpsb
iret
mov
popf
inc
inc
pop
inc
in
xor
adc
lret
or
call
cs
repz
imul
sbb
cwtl
aam
lcall
outsb
aad
add
mov
sbb
lret
lea
lea
stc
sbb
ljmp
lahf
adc
lcall
xor
jns
push
dec
call
and
sbb
nop
scas
scas
test
cmp
decl
sbb
pusha
imul
jle
mov
jb
add
push
fildl
gs
cmpsb
sbb
push
push
jle
call
fsubl
gs
xchg
xchg
sarl
jbe
fimull
je,pt
mov
or
rclb
jae
push
inc
mov
incl
xchg
add
xchg
and
fistps
cmp
stos
shll
cmp
push
inc
pop
sub
inc
ss
mov
pop
push
inc
inc
mov
sub
jle
jge,pn
sub
jge
mov
push
iret
dec
decl
mov
pushf
or
inc
fwait
fwait
xchg
sbb
mov
ljmp
inc
lea
addr16
dec
mov
sub
push
mov
ljmp
cld
fwait
imul
cmp
push
xchg
stos
xchg
sahf
push
pop
inc
jmp
xchg
movsb
xchg
lahf
mov
push
mov
cmp
outsl
clc
ljmp
mov
add
std
dec
xchg
cwtl
mov
sub
cmp
push
ljmp
nop
cld
push
subl
push
xor
fwait
aaa
fs
mov
incl
or
outsb
inc
loope
push
test
sub
adc
xor
sarb
pop
shrl
push
sbb
xchg
ljmp
jg
or
mov
adc
out
cwtl
test
sahf
test
pushl
mov
add
sbb
xchg
inc
mov
fs
mov
sub
scas
and
lret
mov
aaa
cld
incl
mov
push
cmc
or
ljmp
inc
call
mov
cmp
std
rcr
jno
dec
inc
inc
clc
cmp
ss
roll
mov
xchg
xlat
xchg
dec
popa
dec
cli
std
xor
call
lret
cltd
or
sbb
xchg
and
mov
dec
test
mov
incb
mov
lds
xor
repz
jmp
subb
rolb
stc
lea
xchg
cmpsl
xor
test
cmp
jns
dec
mov
mov
dec
into
mov
add
out
sub
cmp
xchg
aaa
mov
xchg
out
jae
cwtl
icebp
or
mov
dec
sbb
push
dec
popl
mov
cmpsb
dec
xlat
add
lods
enter
cmp
adc
xchg
adc
sbb
sub
xchg
cmp
movq
inc
lds
test
outsb
iret
sbb
insl
sub
pushl
adc
adc
outsl
or
lret
add
lods
jg
or
in
dec
dec
and
jmp
fisubl
gs
or
add
or
gs
inc
sbb
inc
js
jp
aaa
test
and
xchg
shl
sarb
lret
mov
lods
pop
cld
call
rol
xor
out
mov
push
les
mov
addb
fisttps
addb
stos
cli
imul
ja
call
push
cld
flds
into
and
mov
fnstenv
data16
adc
cmpsl
mov
lea
add
jne
jo
pop
fnstcw
inc
adc
xchg
imul
popf
pusha
mov
push
gs
or
add
cmp
test
movsb
mov
mov
mov
inc
jns
fimull
mov
lods
mov
jb
pop
addl
cmpsl
xor
andb
jg
popf
mov
sbb
lcall
jno
imul
mov
xor
lods
shr
hlt
lcall
push
mov
lods
add
sbb
cmc
call
mov
dec
inc
jge
dec
xchg
cmpsl
in
jmp
push
lcall
inc
mov
add
addl
dec
icebp
push
or
filds
push
insb
negl
fcoml
dec
mov
mov
outsb
and
xchg
in
les
add
mov
xchg
and
mov
inc
sbb
out
out
mov
es
loopne
aas
imul
stc
xchg
push
dec
movsl
mov
hlt
dec
incl
add
add
sub
adc
and
sti
adcb
adc
decl
jo
push
sti
xchg
pop
int3
cmpsb
outsl
popf
fimull
shrb
push
cmp
pushl
mov
ret
sarl
scas
xor
addl
pop
xchg
es
lcall
push
mov
mov
push
icebp
xchg
push
out
xchg
mov
jae
mov
pushl
cwtl
aam
dec
daa
push
cmp
dec
fisttpl
ret
ret
clc
fmulp
xor
clc
jmp
imul
loopne
xor
pop
cmp
jmp
xchg
movb
xchg
lret
xchg
mov
mov
xchg
out
repnz
inc
repnz
call
mov
ljmp
xchg
mov
mov
push
leave
or
jae
jmp
xchg
sbb
push
test
cmp
dec
mov
jge
jle
cmp
stos
test
add
or
mov
leave
popf
cmp
lds
jnp
jle
push
je
jg
sub
inc
in
ja
push
daa
lea
cwtl
and
decl
test
addr16
in
mov
mov
xor
xor
cltd
lods
adc
out
mov
movsl
cmpsb
fldenv
call
inc
jo
xchg
pusha
add
pop
lds
leave
jg
pushl
fists
mov
ds
inc
or
ljmp
fistps
incl
mov
pushf
xor
and
cmp
dec
movsl
mov
push
cmp
xchg
xor
cli
sbb
mov
popa
add
incl
mov
sbb
or
add
pop
push
mov
out
pushf
lea
inc
iret
mov
jmp
jp
jnp
xor
pusha
out
add
add
cld
pop
data16
mov
lret
add
inc
shlb
fwait
sti
fnsave
xchg
add
cmc
sahf
jle
fmuls
pusha
push
call
jmp
jne
sub
pop
test
adc
into
jne
scas
mov
imul
mov
call
cwtl
pop
cmp
add
decb
mov
xchg
mov
pop
stos
inc
and
ljmp
les
movsb
mov
insb
je
dec
xchg
xor
rorb
mov
dec
lcall
cmp
out
into
gs
pop
addr16
pop
ficomps
inc
xchg
mov
push
incb
push
jmp
xorb
lcall
sbb
lds
mov
push
popf
and
mov
push
arpl
jmp
decl
xorl
in
add
mov
movb
lcall
adc
dec
sub
push
cwtl
test
jp
cli
sub
aad
mov
lret
pop
mov
fcomip
ljmp
pop
mov
cmp
scas
out
xchg
and
pop
push
sub
pop
mov
loopne
cmp
mov
aad
out
mov
clc
jmp
ret
and
xor
popf
imul
cmpsb
aas
mov
jmp
mov
jge
jne
pop
mov
cld
sub
xchg
cld
jg
nop
mov
mov
or
inc
sub
or
movsl
push
push
sbbb
dec
data16
jmp
in
push
inc
lret
imul
imul
ds
cli
clc
out
push
and
addb
pop
push
inc
aam
xor
cld
xlat
or
xchg
jmp
xchg
xchg
mov
xchg
jg
and
sub
lock
scas
xor
push
xchg
sbb
test
xchg
lcall
cld
movsb
xorb
adc
mov
loope
into
xchg
les
cli
movsb
addr16
cmp
jecxz
xchg
jae
lods
rclb
lgs
jne
jg
and
lret
and
stos
fsubrs
inc
std
aaa
lcall
cmpb
pop
ljmp
push
and
mov
cmp
cmpsl
imul
decl
lods
fistpl
dec
pusha
jb
xlat
add
xchg
rolb
mov
mov
popa
idiv
pop
mov
mov
icebp
jg
stos
dec
cmpsl
or
adcb
jg
loopne
mov
sbb
mov
xchg
ja
pop
add
xchg
out
adc
stos
adc
test
add
mov
call
sbb
mov
insb
pop
insl
cmp
mov
sbb
aas
inc
push
lock
jle
push
lahf
adc
test
imul
and
mov
dec
pop
hlt
jg
hlt
arpl
adc
mov
push
sbb
mov
pop
decl
aam
fbld
stos
dec
cmpsl
cmp
loope
jb
inc
dec
mov
frstor
movsb
adc
mov
jg
jbe
xchg
pusha
dec
rclb
out
imul
and
les
pushl
cli
jnp
dec
sbb
jecxz
cwtl
insb
jno
cld
xchg
insl
jne
shll
inc
sub
inc
cmpsb
mov
push
int
pop
jno
scas
mov
mov
xchg
addr16
clc
ljmp
lcall
call
xchg
outsb
cwtl
or
rcl
mov
sub
lods
stc
pop
ljmp
xchg
lods
minps
push
addr16
jecxz
xchg
push
cmp
adc
test
xor
pushf
pop
mov
ljmp
fldcw
int3
xchg
pop
add
test
sub
sbb
xor
mov
push
repz
gs
lret
inc
add
movsb
aam
mov
int
pop
scas
sub
mov
mov
sbb
add
push
ljmp
lcall
fsts
mov
ficompl
xchg
test
mov
lcall
push
add
mov
out
aas
out
int
lds
mov
ljmp
cmp
and
pushf
adcb
jb
xor
sbb
mov
pop
mov
popa
jecxz
xchg
add
or
inc
roll
ret
movsb
scas
dec
inc
xor
fldcw
jns
pop
leave
pop
in
push
arpl
push
sbb
icebp
sbb
outsl
jne
adc
hlt
xor
rcrl
je
out
mov
mov
test
pop
jo
sub
addr16
mov
lahf
outsl
rorb
mov
mov
lods
mov
mov
pop
push
pop
dec
inc
jnp
movsb
lods
mov
sar
stos
cmpsb
sub
xchg
cli
adc
cld
cmpsb
stos
mov
or
ljmp
cmp
jno
sbb
out
pushf
xor
sar
jmp
scas
add
test
dec
repnz
fidivrl
ret
push
out
int
pop
incl
push
call
nop
sub
pop
push
dec
mov
jg
cld
mov
mov
pop
mov
jle
dec
jae
push
cs
jg
push
cmp
cmp
dec
fidivs
inc
pop
push
push
decl
je
jno
xchg
mov
pop
mov
cmp
mov
dec
test
ljmp
filds
int3
movl
add
add
leave
adc
and
lret
or
fdivrs
repz
dec
enter
sbb
ficomps
shl
stc
pop
adc
dec
sbbl
sbb
xorl
loopne
jle
pop
lods
aad
cmp
jnp
push
fbld
pop
sub
xor
inc
pop
inc
cs
push
js
sbb
adc
jmp
mov
dec
mov
add
aam
call
mov
xchg
jg
inc
sub
or
in
outsl
stc
out
lcall
mov
pop
pop
adc
arpl
lods
popf
inc
in
xlat
movsl
push
and
adc
addr16
pushf
xchg
sub
ljmp
lret
pop
mull
push
and
sbb
cmc
mov
sarl
icebp
call
cmp
call
es
fdivrp
jg
arpl
inc
movsb
cli
pop
insb
cmp
jge
aas
jne
mov
aad
adc
inc
jo
inc
jge
or
out
push
lock
pusha
lret
pop
bound
inc
cmp
out
lock
cld
lcall
dec
movsl
cmp
fisubrl
cld
and
push
fisubrl
repz
fsub
bound
ret
and
pop
mov
ss
mov
hlt
mov
dec
decl
push
jne
and
jae
push
mov
inc
sub
inc
xchg
xor
loopne
xor
les
push
out
mov
incl
imul
dec
jb
shlb
sbb
cmpsb
push
scas
mov
hlt
xor
inc
cld
sbb
loop
loop
sub
in
inc
test
fs
lods
xor
sbb
mov
adcb
std
frstor
decl
inc
cld
outsl
cmpsl
sbb
insl
dec
imul
mov
lcall
stos
cmpsb
aam
mov
or
decb
mov
or
shlb
sbb
pop
icebp
lods
lds
pop
dec
hlt
ja
lret
vxorps
sbb
mov
lock
sub
cwtl
or
mov
mov
xchg
cld
lcall
push
sbb
xchg
pop
shll
inc
xchg
mov
dec
pop
xor
push
test
mov
call
mov
bound
push
outsb
idivb
and
call
xor
sbb
les
lds
repnz
int
inc
ja
vmwrite
jo
out
cmp
fmuls
mov
movsl
add
push
push
ficoms
out
jbe
dec
mov
incl
aas
rcrl
mov
movl
inc
jb
adc
cmpsl
pop
inc
lret
xchg
sbb
out
mov
push
inc
je
dec
loop
cmp
sbb
test
lds
xor
pop
jbe
add
xchg
cs
mov
jmp
push
push
ss
enter
movsl
add
mov
add
adc
mov
daa
loop
imul
inc
jnp
push
insl
add
push
pop
pop
or
jmp
push
inc
inc
stc
arpl
push
push
decl
popa
incl
sar
loope
mov
lcall
jne
mov
dec
jp
ja
mov
enter
std
icebp
pushf
sbb
push
adc
adcl
or
mov
cmc
xchg
ss
push
xchg
in
jmp
scas
clc
jmp
outsb
out
and
mov
cld
add
pop
lcall
cmp
repnz
hlt
jg
jno
inc
xor
add
fnstcw
mov
sub
fnstenv
add
mov
pmaxub
pop
mov
pop
lods
les
in
or
es
jge
dec
sar
mov
jne
dec
push
sti
mov
ja
enter
aaa
clc
gs
stos
and
mov
push
pushw
xor
jbe
jp
jg
lock
dec
xor
jbe
pop
dec
push
gs
ljmp
sbb
popa
lods
fadds
lods
int3
decb
push
jne
jge
stos
lahf
and
mov
mov
in
sub
pop
dec
setns
inc
dec
and
or
cmp
push
imul
test
and
mov
cmp
sbb
inc
cmp
mov
mov
cmp
scas
icebp
xadd
mov
das
sbb
cld
add
psubw
sbb
push
push
mov
cmp
int3
xor
mov
adc
iret
adc
icebp
xor
inc
into
fs
push
pop
lock
sub
gs
fisttpl
push
arpl
aas
dec
jno
add
mov
decl
lret
fstl
mov
cs
inc
jmp
cmp
push
or
dec
sbb
sbb
fwait
adc
jne
test
ja
call
repz
les
pushf
sub
mov
movsb
jnp
dec
xchg
cmpsl
fwait
add
cmpsb
jno
xchg
mov
lahf
rorl
xchg
rcrl
lahf
sub
rclb
mov
mov
dec
out
inc
mov
push
cmpsb
sbb
lds
cwtl
fmull
lcall
ljmp
pushf
pop
mov
daa
mov
mov
cmpsb
inc
xchg
sbb
push
cmp
mov
idivl
popf
clc
mov
insl
mull
xchg
dec
daa
nop
ss
ljmp
das
sub
repnz
push
stc
sbbl
dec
stc
push
movsb
cmpsl
incl
jge
and
xchg
inc
movb
insb
clc
popl
js
aas
stos
das
mov
ljmp
mov
dec
cmp
xchg
call
dec
jmp
aas
push
xchg
pop
or
jle
mov
adc
incl
mov
stos
sbb
sbb
mov
rorb
inc
pminub
clc
jmp
mov
iret
lods
adc
es
movsl
imul
adcl
int3
xor
xchg
mov
xchg
pop
sahf
mov
jmp
push
dec
loope
xchg
cld
ljmp
clc
pop
mov
cmp
mov
and
dec
or
push
cli
mov
je
sbb
jge
xchg
sbb
cmp
jnp
adc
push
insb
testb
mov
add
sub
pop
xor
sub
cld
and
int3
cmp
adc
or
adc
pop
cmpb
jg
hlt
test
mov
cli
pop
xor
adc
jb
sbbb
jle
or
aaa
fcos
pop
dec
pop
cmp
or
or
or
sub
mov
jl
add
dec
push
push
cwtl
icebp
jg
sbb
push
push
pop
xchg
into
xor
push
and
pop
xchg
sbb
in
rcll
fsubrs
imul
fsts
ljmp
repnz
xchg
cmpsl
test
das
cmpl
and
jmp
mov
mov
sahf
cmpsl
mov
or
outsl
mov
sti
aas
inc
into
out
sti
and
mov
jp
test
jcxz
mov
es
jecxz
add
mov
fbstp
aaa
mov
stos
lods
inc
push
dec
jp
loop
fisubrl
push
test
inc
push
mov
pop
inc
pushl
test
roll
imul
jne
popa
pushf
jge
into
mov
adc
mov
nop
jo
lea
adc
and
adc
mov
jl
jbe
add
mov
cmp
jg
cmc
cmp
xchg
shlb
push
or
insb
jne
fbld
mov
dec
dec
pop
lods
orl
xor
inc
or
inc
cld
sub
jle
cmpsl
push
jl
pushl
push
sub
test
mov
xor
xchg
xchg
lea
clc
or
movsl
add
icebp
mov
jnp
std
lcall
xor
cld
subb
test
stos
mov
lods
movl
fs
fwait
lahf
inc
repnz
movsb
push
lret
outsl
and
cltd
ds
jg
xchg
mov
js
xchg
ja
pusha
enter
cmp
mov
in
push
into
sub
call
rclb
mov
sbb
xchg
pop
leave
fistpll
push
xor
inc
push
data16
nop
fldenv
pop
icebp
aam
imul
mov
sahf
fidivrl
shrb
dec
rcll
push
sbbb
pop
push
clc
das
insl
jg
push
sub
and
or
mov
mov
repz
fstpt
pop
inc
xchg
cmp
int
mov
and
mov
loopne
jp
jp
sti
sub
iret
call
jb
push
scas
fisubrs
imul
les
ljmp
mov
repnz
dec
adc
jbe
enter
stc
dec
insl
add
mov
fsub
gs
dec
sub
mov
mov
add
stc
pop
mov
xchg
lock
cli
mov
jb
jns
push
mov
das
mov
jg
ds
pop
cmp
test
cmpsb
lock
jmp
aas
dec
cmp
pcmpgtd
std
ljmp
jge
imul
jl
add
arpl
and
imul
mov
ret
fistps
dec
cltd
rclb
fsubl
call
addb
fldcw
leave
lcall
push
inc
mov
sub
push
aam
pop
jne
ss
dec
andl
pop
call
sbb
push
icebp
dec
clc
and
pop
outsb
and
push
call
push
lea
aam
testl
pop
add
or
sti
or
inc
ds
pop
mov
inc
push
out
sub
inc
scas
mov
cli
push
pop
shll
jg
jmp
xor
test
lcall
aas
sahf
adc
cmpl
incl
cmc
stos
mov
sub
cmpsl
add
mov
popf
bound
enter
cld
xchg
xchg
mov
mov
sbb
sahf
xor
flds
lods
iret
push
fwait
enter
pop
test
leave
clc
movsb
movsl
inc
xchg
push
mov
mov
dec
aam
inc
add
fildll
mov
sbb
mov
cmp
mov
mov
mov
imul
cltd
sbb
pop
int3
daa
mov
xor
dec
out
lcall
mov
add
ljmp
stos
add
add
lods
mov
fsubp
outsl
lcall
xor
push
into
flds
mov
xchg
pop
es
in
inc
fcoms
mov
mov
testb
idivb
jl
push
mov
mov
xor
iret
sbb
jp
ljmp
xchg
mov
clc
shlb
ja
add
jg
fsubs
stos
int3
xor
decl
stc
mov
stos
bound
rolb
mov
dec
inc
in
jmp
std
cmpsb
or
adc
mov
pop
andl
mov
mov
jo
outsl
xchg
outsb
icebp
inc
push
dec
push
cld
aam
inc
push
pop
lcall
out
popf
add
decl
mov
fs
mov
cmp
aad
mov
cld
sub
cld
pop
mov
popa
mov
test
add
sarb
cs
dec
dec
push
or
shlb
sbbb
inc
jl
sub
ss
movsb
or
lcall
insb
stos
sbb
dec
jb
test
push
imul
aaa
insl
and
xor
inc
es
outsb
mov
or
decb
or
push
jne
scas
and
test
jg
loopne
cmc
adc
cmp
nop
cs
jb
cmpsb
jg
outsl
inc
les
lret
int3
add
lret
and
cmp
call
leave
add
lret
pusha
bnd
fnstenv
cmp
popa
inc
rorb
jmp
aad
pop
jg
ds
push
push
jg
pop
stc
or
pop
into
jp
adc
dec
stc
sbb
inc
cmp
xchg
or
aam
fdivrl
push
cmp
lcall
ror
xorb
popa
cs
mov
stos
sbb
aaa
cmpsb
rcrl
mov
jmp
nop
sahf
jle
mov
or
jno
outsl
lcall
lds
mov
mov
aas
lret
adcl
jne
sub
mov
sub
jnp
subb
cmp
pushl
add
pop
stos
lret
in
cmp
fwait
scas
inc
lahf
mov
mov
call
outsl
lods
adc
movsb
loop
mov
and
and
cmp
push
negb
je
add
test
int
incl
lods
dec
icebp
arpl
pop
lds
aam
stos
ja
or
sub
or
mov
insb
dec
add
test
mov
mov
scas
pusha
pushf
sub
ret
sbb
mov
addr16
bound
mov
dec
std
int3
and
sbb
dec
mov
jecxz
scas
test
cmp
data16
adc
adc
jmp
mov
pushl
call
jns
ds
mov
mulb
sbb
pop
cwtl
ljmp
pop
xchg
dec
and
clc
lcall
or
pop
push
out
pop
mov
mov
inc
dec
int
loopne
dec
xchg
add
call
mov
stos
xchg
out
push
adc
mov
cmp
loopne
pop
sub
insb
push
fdivrs
mov
mov
cltd
cld
inc
push
pushl
adc
mov
adc
out
cmpsb
aaa
cs
mov
stos
dec
jbe
push
xchg
shrb
pop
hlt
mov
pushf
jl
and
and
std
mov
cwtl
xor
fisubrl
cmpsl
out
xor
stos
test
push
movsl
mov
in
mov
push
mov
cli
aaa
mov
pop
cmc
cmp
fiaddl
test
add
les
push
cmp
inc
and
ljmp
loop
push
xchg
adc
sahf
adc
outsb
bound
sbb
int
xchg
mov
fwait
jae
shll
inc
arpl
inc
roll
stos
sbbb
loop
jg
xchg
testl
jno
push
dec
jmp
inc
mov
dec
int3
mov
pop
add
jmp
ret
ret
cld
cmp
push
xchg
xor
lcall
sbb
jp
stos
cmpsl
cwtl
jno
mov
pop
rclb
mov
adc
into
pop
cmpsl
fwait
cmpsl
dec
dec
mov
stc
nop
arpl
nop
movsb
test
inc
sbb
in
in
xor
fildl
icebp
jmp
js
or
xchg
add
inc
push
jle
pop
ds
push
rol
mov
or
outsl
or
mov
dec
mov
enter
cmc
lcall
jno
repz
iret
loop
aas
push
xor
ljmp
mov
fstps
cmovo
dec
stos
sub
fwait
and
mov
inc
in
inc
jo
dec
das
rorl
test
test
incl
js
stos
and
pushf
mov
pop
cmp
insl
adc
mov
incl
xlat
stos
imul
test
mov
ljmp
or
dec
in
mov
je
jns
inc
xchg
clc
imul
pop
jp
mov
ljmp
outsb
and
dec
mov
sbb
dec
je
test
test
loop
lcall
jmp
ja
or
dec
push
dec
ss
xchg
cmpsb
push
outsb
orl
movsb
pop
dec
pop
dec
pop
pop
cmp
xchg
mov
addr16
sub
jl
sbb
call
adcl
jo
xchg
popf
xchg
ja
dec
jl
addr16
mov
dec
cmp
push
arpl
xchg
mov
cmp
dec
adc
in
cmc
dec
push
xor
scas
push
jae
or
lret
clc
ljmp
inc
mov
dec
pop
test
dec
inc
mov
and
dec
test
mov
arpl
popa
jo
lret
jp
xor
push
cmpb
sti
lret
test
jp
push
out
lods
cmp
ja
dec
sbb
movsl
aas
pop
data16
bound
flds
sar
stos
and
mov
xchg
jle
xor
in
stos
das
mov
ficomps
xchg
pop
xchg
pushf
xchg
bound
push
sbb
dec
adc
andb
insb
sub
testl
cmp
lods
jne
mov
cmp
xchg
dec
add
lcall
fs
movsl
cld
push
mov
push
pusha
pop
data16
pop
ret
inc
cmp
inc
outsl
mov
imul
pop
sar
leave
or
addr16
mov
ljmp
hlt
pop
ret
xor
mov
aam
pop
push
dec
scas
push
insl
std
push
mov
push
pop
mov
push
pop
push
iret
mov
int
cld
pop
std
fwait
mov
scas
cmpsl
inc
mov
les
mov
adc
mov
push
push
testb
repz
movsl
push
pushf
mov
jnp
jno
addr16
dec
ss
icebp
mov
adc
mov
push
dec
inc
pushf
jae
mov
mov
test
sbb
mov
inc
ret
sbb
dec
cmpb
pop
mov
imul
pop
pop
mov
data16
insb
jbe
mov
insl
clc
fcom
aad
gs
push
lret
pushl
xchg
sbb
popf
pop
pop
je
or
out
dec
inc
push
pushf
pop
repnz
dec
xor
ja
lds
mov
sarb
add
out
repnz
mov
loop
jo
dec
in
sar
pop
mov
in
cmp
lock
movb
aad
xor
sqrtps
int
cld
jmp
or
cmp
pushf
gs
inc
pusha
inc
push
add
xchg
add
push
subb
je
inc
out
ss
mov
ja
lods
push
xchg
clc
sbb
test
push
mov
das
inc
outsl
into
adc
xor
cmovo
mov
test
jge
xor
sbb
cld
aas
adc
xor
ja
addr16
adc
imul
popa
ret
pop
insb
rolb
in
push
push
arpl
mov
out
cltd
out
mov
jge
mov
ss
cli
mov
jb
push
mov
addr16
add
and
lcall
call
daa
movsl
inc
mov
mov
add
ja
mov
sar
call
add
xchg
dec
subb
jbe
test
mov
jmp
sahf
ja
mov
js
inc
jmp
scas
out
dec
shlb
jp
outsl
and
and
xchg
dec
jecxz
icebp
adc
subl
mov
pop
jl
ja
fnstcw
test
and
mov
repz
inc
dec
lcall
dec
cmpsl
push
aad
or
incl
inc
jge
inc
mov
push
js
enter
ljmp
add
andb
test
repz
xor
adc
push
mov
lock
scas
int
enter
or
aaa
incl
sbb
inc
xlat
daa
or
repnz
lahf
fidivrl
sar
incl
test
pop
out
jbe
push
pushf
ret
cld
mov
ljmp
and
clc
and
add
jb
nop
xchg
scas
je
mov
cld
cmp
jbe
dec
sar
pushl
imul
rorl
jo
xor
mov
inc
push
pushf
add
mov
mov
sbb
dec
dec
adc
push
mov
popa
rcll
and
lcall
inc
in
xchg
es
add
adc
cmp
repnz
mov
incl
rcll
pop
leave
popf
sub
out
or
sub
dec
xlat
cld
xchg
stos
push
rolb
dec
pop
pop
fldl
stc
mov
pushl
pop
cli
outsb
js
iret
jo
xor
fisttpll
arpl
jne
jno
fidivs
mov
dec
jmp
jae
xor
mov
test
pop
pushl
lcall
pop
mov
mov
pop
ficompl
mov
xor
aas
push
sub
inc
adc
sub
cltd
add
push
mov
jecxz
jne
stos
mov
mov
mov
pop
test
lahf
cwtl
clc
call
pop
xchg
test
lods
mov
mov
std
mov
dec
jae
push
add
out
jb
fdivl
pop
in
loope
push
add
fs
pushl
cld
pushw
test
push
aad
dec
inc
mov
cs
les
std
lea
mov
es
int3
mov
cmp
adc
or
nop
cmp
dec
pop
cmc
sub
mov
dec
cld
pusha
jnp
daa
sbb
das
popa
dec
cs
imul
pushl
push
and
pop
ret
rcll
pop
imul
xchg
add
push
jns
stos
ljmp
push
mov
push
fwait
out
arpl
dec
inc
dec
push
push
enter
mov
adc
mov
mov
pop
out
sub
std
and
aaa
popf
mov
mov
loop
cwtl
mov
lret
shlb
jg
adc
popf
scas
int
xchg
cli
aas
push
adc
mov
fidivl
dec
mov
and
scas
xchg
mov
ljmp
push
adc
mov
lret
mov
fucomp
cmpsb
loope
inc
imul
lcall
pop
test
cmpsl
stos
pushf
out
xchg
jmp
mov
and
mov
cltd
mov
xchg
ds
daa
jge
lcall
adc
les
jp
lahf
xchg
mov
inc
push
mov
incl
pop
int3
es
in
and
xchg
movsb
mov
nop
jg
js
mov
fsubrs
mov
xchg
rolb
dec
shlb
dec
fstpt
jmp
mov
mov
loope
orl
lods
iret
cmp
jle
cmp
cmc
jmp
pop
lahf
data16
nop
cwtl
dec
inc
mov
jmp
add
pusha
fidivs
rol
incl
cmp
mov
mov
jle
int3
jg
add
mov
pushf
int3
mov
fisubl
xchg
call
ficomps
mov
mov
mov
cmpsb
test
iret
xchg
mov
cmp
push
subb
ficoml
mov
cs
lahf
mov
xor
sbb
pushf
incl
leave
xchg
js
or
xchg
stos
push
push
hlt
mov
cltd
mov
jmp
adc
es
mov
xchg
or
filds
dec
xorb
inc
xlat
xchg
sahf
xchg
mov
ljmp
push
jo
outsl
icebp
xchg
xchg
punpckldq
mov
scas
dec
aad
lods
lret
pop
or
dec
outsb
fisubs
andb
pop
aam
lcall
inc
outsl
aad
mov
movsl
mov
int3
iret
xorl
lods
loopne
cmpsb
xchg
fldl
xchg
ljmp
ret
es
pop
out
sbb
popf
push
stos
fwait
sub
lea
pushl
jnp
int3
fisttpll
xchg
out
mov
lret
je
mov
test
mov
nop
xchg
testl
enter
inc
sahf
lods
inc
xchg
mov
push
dec
lods
sbb
xchg
mov
loop
pop
sahf
dec
hlt
sub
and
xchg
mov
mov
mov
cmpsl
xor
out
fcomps
cmpsl
movsl
dec
fsubs
subb
mov
pop
xchg
mov
pop
dec
mov
std
ljmp
and
test
fadd
xorb
push
inc
pop
sub
add
cmc
outsl
cli
in
mov
cmp
enter
cwtl
pop
mov
xor
mov
mov
inc
mov
xchg
mov
ficompl
dec
cmp
in
or
xor
movsl
fldenv
test
inc
add
mov
dec
dec
mov
sti
das
sub
rclb
stos
inc
and
mov
rorl
shll
add
pop
add
sbb
shrl
ljmp
ret
jp
fisttpll
fildll
lea
aas
in
or
adc
cltd
into
xor
int3
repnz
incl
mov
mov
movsb
lcall
lods
clc
mov
push
cltd
cmp
lcall
inc
cld
add
mov
lods
les
xchg
jmp
mov
pusha
js
rcl
mov
test
ds
xchg
jne
mov
dec
les
call
lds
rcll
insb
cmpsb
mov
movsb
push
in
cmp
outsb
andb
aaa
adc
mov
xor
sub
clc
call
ret
push
xchg
enter
test
cld
nop
pop
pop
pop
add
pop
xor
xchg
scas
cmp
jg
cmc
mov
pop
ljmp
xchg
icebp
sbb
stos
pushf
or
jg
pushf
lret
fidivrl
movsl
sub
test
outsb
or
rcrb
jmp
fcomip
test
sbb
inc
pushl
fsubr
and
dec
sbb
add
stc
mov
sarl
mov
ret
pop
mov
push
stc
popl
popf
add
add
or
loopne
sti
popf
xchg
mov
das
mov
mov
and
in
or
repz
inc
ret
cmc
mov
ds
add
mov
cmpsb
sar
iret
dec
sarb
xor
in
pop
scas
jle
mov
decl
loope
mov
sbb
sahf
mov
fs
stc
fists
xchg
add
fiaddl
adc
sub
pop
fwait
mov
inc
pop
pushl
add
mov
xlat
xchg
push
pop
mov
out
sbbb
sbb
mov
stos
add
add
pop
mov
fistl
data16
pop
mov
pop
adc
xchg
ret
pop
aas
adc
and
cmpb
sbb
xchg
loopne
or
inc
dec
insb
fisubrl
jl
mov
mov
inc
fsubrl
xchg
sbb
std
cmp
mov
xchg
mov
fbstp
incl
aad
rol
into
inc
fwait
lea
xchg
mov
stos
mov
lods
mov
pop
mov
aaa
or
call
test
xchg
scas
cli
sub
pushf
xchg
fildl
not
pushf
xorb
lock
inc
add
fdivs
loopne
xor
sbb
cld
es
subb
test
fcomip
in
xchg
jbe
jle
xchg
xchg
shrb
icebp
xchg
mov
mov
incl
xchg
mov
sub
filds
xchg
dec
cltd
mov
movl
sbb
sbb
cmc
pushl
fidivrl
sarb
pushl
test
cli
ss
jnp
les
xchg
jo
adc
fstpl
sub
ljmp
out
mov
dec
inc
test
xchg
xchg
lds
lock
inc
int3
add
add
xchg
mov
push
sbb
mov
cmc
orb
inc
fwait
mov
lods
movsl
inc
jmp
aas
cli
add
popa
lret
pop
popl
mov
fiadds
mov
ret
sahf
lret
sti
dec
aaa
inc
mov
mov
mov
xlat
gs
rcl
popf
imul
in
sahf
mov
xlat
xor
inc
test
xor
pop
rorb
xchg
jnp
push
cwtl
inc
cmpsl
lahf
xchg
xchg
mov
imul
shll
xor
inc
push
ja
jmp
mov
mov
lea
push
inc
movsb
add
mov
es
cs
loopne
mov
fsts
mov
cmp
cmpsl
push
test
push
hlt
incl
xchg
cmp
stos
mov
sbb
repz
fsts
shlb
inc
mov
xchg
dec
sar
jmp
pop
leave
add
and
push
ljmp
fistpl
jnp
sbb
mov
mov
mov
loope
inc
jl
movsb
into
cltd
aaa
aas
sbb
mov
mov
mov
sbb
pop
loopne
sbbb
mov
lcall
inc
outsl
xchg
int3
movsl
mov
out
mov
mov
xchg
loopne
jg
and
cld
xor
imul
xchg
mov
stc
pop
push
cmc
or
xor
dec
ret
repnz
xchg
fdivrs
rcrl
push
mov
push
sarl
rol
add
pop
push
test
lret
cwtl
xchg
decl
stos
mov
repnz
mov
lcall
movsl
hlt
ret
mov
jl
mov
fld
xchg
cwtl
mov
cld
hlt
mov
hlt
movsl
push
cltd
add
mov
xchg
sar
fs
sbb
ret
hlt
test
or
int
push
xchg
rclb
enter
sahf
xchg
div
rcr
icebp
mov
lea
mov
xchg
xlat
jmp
jg
test
jmp
test
ret
je
scas
mov
jmp
xchg
int3
hlt
ljmp
mov
orl
pushf
popf
aad
loope
jno
push
cs
cmc
xchg
lret
cs
cltd
loope
push
sti
incb
lahf
mov
stos
out
out
mov
mov
hlt
mov
in
xchg
jmp
mov
xchg
mov
enter
cli
jl
test
in
push
addr16
jmp
pop
adc
ret
scas
lcall
lcall
dec
out
adc
xchg
movsb
mov
ds
push
nop
inc
loopne
fst
pop
add
xlat
pushf
xchg
mov
adc
repz
inc
aaa
inc
aam
fcomps
test
mov
jb
jmp
repz
dec
xchg
decl
scas
push
hlt
jg
scas
add
lea
test
sarl
jmp
in
adc
sti
bound
and
mov
fneni(8087
jae
lahf
jmp
xchg
lret
sub
aad
bound
shl
jnp
cmpsb
jmp
insb
nop
lock
mov
sar
notb
cli
fbstp
dec
fs
repnz
mul
fs
dec
movsb
sub
jo
rep
clc
dec
pop
xchg
hlt
in
inc
leave
scas
inc
pusha
jno
out
std
xor
jp
stc
fcmovnb
incl
addr16
pop
mov
mov
pushl
mov
push
movsl
scas
push
gs
mov
sub
mulb
scas
pop
xchg
mov
sbb
ljmp
pop
jmp
mov
addr16
rcll
les
call
bound
mov
push
push
inc
mov
dec
push
sub
scas
dec
push
push
sti
decl
ljmp
rep
jne
out
outsb
inc
cmpsb
xchg
cmpsb
xchg
jg
mov
xchg
pop
ja
mov
jae
inc
mov
inc
mov
jae
xor
inc
push
add
xchg
add
push
repz
jo
test
gs
fcomip
cmc
xchg
dec
push
jbe
bound
lods
inc
ja
addb
pop
dec
das
mov
pusha
jbe
mov
push
in
mov
mov
nop
pusha
jp
lods
dec
addr16
pushl
dec
jns
mov
je
data16
fwait
pop
dec
sub
mov
push
inc
out
pop
lock
jne
repnz
data16
mov
lcall
addr16
inc
cmpsb
pop
dec
jle
inc
jns
mov
push
fs
mov
pop
cmp
pop
incb
xor
out
mov
dec
push
cmpb
and
dec
incb
test
loopne
and
pop
addr16
inc
pop
leave
ljmp
ja
iret
dec
je
rcll
mov
inc
dec
cmp
jg
or
pop
jno
cmpsb
jns
inc
ja
cmp
out
test
cmp
aam
mov
dec
pop
and
and
push
jp
or
adc
or
mov
sahf
jg
add
jecxz
idivb
cmp
sahf
mov
pop
add
je
push
filds
inc
jo
push
cmp
or
xor
or
sub
mov
sub
adc
push
or
daa
push
and
pop
decl
lcall
pop
or
and
sub
or
add
loope
hlt
iret
push
push
inc
lahf
lret
in
and
call
jno
push
pop
mov
cmc
je
jb
jae
jo
ljmp
jb
subb
dec
inc
je
push
pop
xchg
jne
dec
xchg
arpl
mov
arpl
pop
and
mov
inc
inc
jge
push
jg
dec
addr16
push
dec
dec
xchg
pop
pusha
push
lcall
push
pop
mov
inc
outsl
pop
dec
inc
dec
bound
mov
jp
pusha
inc
imul
sub
call
add
ds
and
add
pop
push
and
pop
xor
or
sbb
adc
sub
push
sbb
sub
push
cmp
or
or
sbb
ds
cmp
xor
sbb
push
sbb
prefetchnta
push
aaa
xor
xor
jns
daa
ret
inc
pop
jo
adc
lock
out
inc
je
sbb
xor
and
and
incl
cli
and
inc
xor
cmp
add
push
pusha
inc
push
pop
dec
fwait
ljmp
xor
xor
xor
cmp
cmp
jecxz
pop
xor
xor
incl
cmp
or
aaa
adc
add
das
sub
cmp
and
and
dec
add
and
dec
or
movl
xchg
stc
lcall
sub
je
pop
pop
outsl
insb
jp
aaa
adc
push
insb
inc
clc
dec
sbb
inc
pop
inc
pusha
inc
push
pusha
jle
aas
adc
inc
js
stos
lods
out
push
dec
and
and
push
pop
pop
fisubrs
and
nop
jg
sbb
jne
inc
push
decl
pop
xor
and
or
or
call
pop
imul
arpl
bound
push
jg
out
push
adc
mov
dec
mov
inc
or
pop
add
ja
js
outsb
xor
sbb
inc
cmp
pushf
insb
andb
push
lock
pop
xorb
push
movsl
dec
cld
enter
push
lods
pop
clc
dec
push
mov
je
enter
xchg
jge
jae
mov
push
push
xchg
arpl
decl
mov
sbb
sbb
adc
fs
push
push
sub
inc
aas
fbld
les
adc
and
add
sbb
cld
xchg
pushl
pop
sub
or
popa
dec
adc
pop
inc
inc
push
add
aas
push
shlb
js
push
jnp
inc
adc
ljmp
adc
xor
sub
das
sbb
pop
aaa
sub
inc
add
push
aaa
daa
and
std
lcall
sub
cmp
xor
imul
and
sbb
add
das
std
mov
adc
outsl
das
add
jb
add
popa
add
fs
pushl
pop
sbb
and
add
addps
xor
or
or
cmp
sbb
inc
inc
push
and
and
mov
xor
sub
add
aam
pop
jg
iret
adc
sbb
gs
pop
inc
dec
cwtl
xor
es
ljmp
insb
push
adc
jne
and
das
push
push
sub
insb
xor
cmp
js
stos
hlt
pushl
outsl
adc
jno
cmp
add
sbb
pop
push
cmp
push
sub
or
adc
xor
sub
js
pop
std
jg
fs
sbb
aas
ss
and
push
adc
outsb
pop
add
inc
outsl
mov
inc
sbb
pop
add
imul
push
dec
sbb
outsb
push
cld
aaa
std
decl
xor
and
push
pop
ss
adc
aaa
push
dec
aaa
add
cld
pop
out
jne
add
das
inc
dec
or
sbb
sub
insb
jb
or
shll
dec
je
xchg
out
and
or
xor
outsl
cli
stos
cmp
or
imul
push
sub
push
or
std
dec
pushw
das
inc
and
add
or
jge
outsb
cmp
pop
sbb
push
dec
add
outsb
cmp
aaa
pop
xor
and
add
jne
pop
cmp
push
fsubr
sub
insb
out
stos
cmp
xor
das
cmp
add
or
call
pop
icebp
inc
or
dec
pusha
pop
pop
jne
add
cmp
je
jg
push
xor
sub
push
sbb
xor
and
popa
or
lcall
sub
and
push
or
dec
mov
pop
sub
inc
pop
sub
fiaddl
cmp
jle
and
jmp
sbb
xor
adc
sbb
jno
xor
inc
fimull
cmp
inc
and
pop
in
xchg
sbb
cmp
inc
adc
pop
pop
lock
cli
inc
inc
push
jp
rclb
push
xor
sbb
pop
xor
push
das
add
das
push
dec
and
js
mov
pop
inc
mov
clc
jmp
push
push
pop
insl
pop
sbb
insb
sub
add
xor
ds
xchg
das
adc
ljmp
aas
cmp
and
sub
sbb
push
clc
xchg
outsb
sub
or
int3
add
imul
dec
pop
mov
outsl
clc
sub
ss
cmp
add
push
fldl
cmp
or
sbb
cmp
cmp
push
pop
pop
lock
pop
mov
xor
pop
and
mov
cmpb
adc
push
or
pop
sub
and
aaa
sbb
and
cmp
lock
dec
push
sbb
pop
jnp
inc
jae
or
cvtpi2ps
mov
adc
jns
xchg
or
dec
push
adc
and
sbb
ja
and
call
and
cmp
ss
adc
aas
aas
dec
insb
mov
inc
dec
pusha
ja
pop
aad
inc
inc
adc
push
add
push
add
add
inc
mov
sub
es
mov
jmp
aaa
push
js
inc
push
inc
pop
js
xor
clc
push
mov
adc
fiadds
or
sbb
cli
ret
scas
dec
and
adc
dec
inc
or
scas
push
out
adc
das
fidivrl
pop
adc
cmp
and
outsb
add
das
clc
sbb
sub
push
pop
daa
push
dec
adc
aaa
cs
imul
adc
inc
pop
dec
bound
cmp
push
sbb
push
das
jp
das
aaa
sub
xchg
stc
lds
or
or
pop
dec
push
jmp
pushl
sub
pop
cmp
daa
cmp
bound
das
jo
ljmp
sub
push
xor
jne
cmp
sbb
cmp
mov
or
and
addr16
sbb
and
sbb
es
cmp
sbb
imul
or
mov
inc
aaa
sub
push
pop
js
es
fbld
cmpsb
and
cmp
add
pushl
daa
aaa
sbb
pop
daa
or
or
dec
mov
sub
adc
sbb
sbb
fld
pop
popa
xor
outsb
push
jo
ss
fisttpl
or
cmp
sbb
dec
daa
adc
jb
cmp
dec
or
mov
add
add
hlt
insb
jp
dec
pop
outsb
jne
sbb
or
push
and
xor
push
lock
sbb
cmp
mov
cmp
sbb
add
dec
push
adc
dec
cmpsb
add
jg
dec
push
or
pop
sub
push
pop
sbb
dec
or
aas
cmp
ja
cs
add
add
cmp
push
push
and
and
sub
sbb
cs
repnz
gs
cmpsb
fildl
pop
and
sbb
insb
ds
pop
std
mov
push
push
jns
inc
js
bound
sbb
sbb
sub
add
fidivl
and
dec
cmpsb
and
push
jne
or
scas
mov
cmpsl
mov
pop
push
loope
sub
ss
pop
jg
mov
in
add
shll
push
adc
cmp
jp
adc
sub
inc
bound
mov
cmp
or
ja
es
or
cmp
sbb
or
pop
or
imul
push
sub
loope
and
pop
push
push
pop
lock
lods
add
es
jle
and
adc
cld
cmpsb
or
into
and
cmpb
pop
and
data16
ja
data16
add
add
ds
push
cmpsb
adc
dec
add
and
sbb
jp
clc
mov
push
inc
sub
sbb
jne
and
cmp
cli
push
add
in
sbb
and
cmp
push
adc
adc
add
cwtl
mov
xor
cmp
ss
fdivrp
imulb
mov
cmp
xor
es
cmp
push
or
dec
das
or
mov
sub
xor
das
and
mov
mov
sbb
push
ds
inc
bswap
push
std
mov
xor
cmp
or
sbb
jp
cmp
cli
fwait
jbe
adc
push
adc
daa
sub
add
push
sbb
rorb
inc
ret
outsl
cli
add
or
adc
cmpb
sbb
inc
adc
jg
sub
push
add
outsb
inc
in
xchg
pusha
xchg
enter
cmp
cmp
mov
adc
push
adc
sbb
push
cmp
dec
cmp
add
adc
and
imul
sbb
add
or
and
rcrl
aaa
jle
add
or
and
xor
aad
push
hlt
or
mov
leave
push
aaa
inc
sub
or
pop
icebp
xor
sub
push
and
pushl
cmp
or
or
jo
sub
cmp
lock
push
push
jbe
and
jno
sbb
icebp
pushl
xor
adc
pop
push
mov
sub
xor
or
sbb
pop
xor
lcall
or
cmp
push
and
fistl
cld
sbbb
dec
js
cmp
cmp
sbb
push
mov
and
add
loope
dec
inc
inc
adc
and
pop
es
or
sbb
or
fistpl
jg
push
cmp
aas
xor
sbb
add
push
push
add
clc
jg
ss
add
ss
add
jb
sbb
adc
cmpsb
inc
call
mov
pop
adc
add
add
cmp
in
cmc
jmp
push
add
add
cmp
push
pop
sub
adc
cmp
add
movlps
gs
adc
clc
sbb
and
fdivp
push
pop
push
dec
and
jo
xor
cmp
pop
push
pop
xor
cmp
aas
andb
sub
inc
aaa
xor
adc
push
sub
outsl
clc
cmp
and
sub
push
cs
xor
pop
inc
push
and
sarl
and
das
sbb
xchg
cmp
adc
sbb
or
dec
aas
jno
es
adc
mov
popa
and
mov
mov
or
pop
and
outsb
or
sbbb
adc
pop
or
aaa
sbb
sbb
cmpsb
daa
enter
sbb
and
xor
addb
sbb
jbe
xor
jmp
or
xor
xor
inc
mov
mov
insl
lcall
add
or
cmp
sbb
inc
les
sub
push
xor
adc
adc
das
loopne
imul
lar
cmp
shrb
pop
and
inc
push
or
or
gs
outsb
add
adc
je
cmovnp
ja
lods
sbb
shrb
outsl
sub
insb
hlt
aaa
les
and
jnp
iret
jnp
ja
inc
cmp
xor
jle
movsb
dec
adc
sbb
mov
les
push
inc
push
cmp
repz
push
aaa
adc
xor
or
add
adc
xchg
and
add
clc
incl
cmp
or
inc
pop
pop
sbb
dec
xor
incl
inc
jb
insb
jb
inc
push
pop
into
add
inc
sbb
dec
inc
jl
mov
fs
addr16
push
cmp
or
shlb
inc
js
jne
dec
add
jae
inc
dec
and
xor
jbe
pop
jo
pop
push
cmp
or
shrb
jbe
into
sarb
adcl
inc
pop
push
fs
push
xchg
test
push
mulb
rclb
mov
sbb
lcall
dec
fbstp
dec
outsl
ja
lcall
inc
inc
push
or
or
cld
aaa
push
popa
or
sbb
pop
xor
xchg
pop
clc
dec
or
xor
push
and
or
hlt
notb
jae
je
adc
es
sbb
adc
mov
xorb
jb
push
xor
sbb
ljmp
and
xor
xor
adc
adc
adc
xchg
xchg
cmp
les
sub
jno
sbb
das
pop
into
out
add
dec
push
lret
inc
decl
push
cld
inc
inc
jbe
jns
mov
out
xchg
xchg
aad
pop
lcall
and
je
test
in
outsb
inc
mov
js
iret
fisttps
inc
cli
push
ljmp
pop
cli
fcomps
call
push
jmp
push
lds
rcr
jae
out
inc
jnp
in
mov
mov
push
stc
aad
pop
fcmovne
dec
dec
fcmovb
je
call
je
enter
jmp
fcomps
and
loopne
inc
cmp
jmp
jg
les
lret
inc
js
xlat
js
cmp
incl
leave
jae
sbb
dec
inc
or
gs
xor
jne
call
push
pop
or
push
in
mov
clc
fs
adc
cmc
dec
jnp
std
and
inc
inc
inc
lcall
gs
dec
dec
jge
pop
inc
push
inc
inc
push
in
push
gs
bound
push
ja
dec
popa
sahf
jg
movsb
dec
jb
mov
dec
pop
mov
jl
data16
loope
jae
ja
xor
push
jl
lret
imul
push
mov
ret
xlat
ret
jns
dec
hlt
pusha
pop
push
call
jbe
add
dec
push
insl
fbstp
testl
fistpll
cmp
pushl
int
push
push
imul
shll
jmp
push
jnp
loop
jb
icebp
dec
pop
stos
in
jbe
fxch
dec
pop
loopne
dec
fldt
and
bound
fdivrl
inc
or
adc
cld
incl
inc
pop
jp
imul
dec
imul
add
lcall
jl
dec
jbe
push
bound
imul
inc
push
ja
lods
add
dec
dec
outsl
insb
jb
ss
bound
mov
data16
imul
jae
dec
xor
jle
enter
addr16
lcall
js
inc
fs
push
jbe
imulb
push
loopne
aad
lcall
push
fimuls
dec
inc
dec
push
jns
push
pop
insb
inc
inc
fs
lret
cmc
jg
int
sub
ret
les
inc
pop
ja
mov
push
pop
pop
cld
inc
inc
inc
push
jne
scas
mov
push
xchg
push
dec
jno
clc
xchg
adc
mov
push
inc
imul
or
hlt
fs
arpl
dec
hlt
inc
enter
int
out
push
push
jne
js
mov
dec
je
pop
jno
inc
mov
jp
pop
pop
arpl
inc
sub
pop
jne
inc
inc
loop
jb
or
or
push
insb
push
jo
mov
xchg
sub
and
lock
lds
sar
outsl
clc
dec
gs
js
jbe
fs
bound
jne
sbb
xchg
add
dec
inc
ret
jno
pushl
shlb
push
cmp
inc
dec
push
addr16
dec
decl
push
dec
jne
bound
pop
dec
dec
pop
dec
push
ja
gs
pop
js
dec
popa
hlt
incl
inc
bound
bound
push
imul
push
out
aad
in
lcall
enter
icebp
push
loopne
pusha
jns
push
std
call
pop
dec
jae
dec
imulb
dec
out
push
enter
push
pop
icebp
mov
xor
inc
jne
inc
imul
outsl
inc
xchg
subl
mov
js
pop
dec
pop
dec
push
dec
or
mov
push
push
out
push
shlb
dec
pop
jbe
cmp
push
pop
add
mov
inc
push
repnz
je
fs
push
imul
and
xor
dec
dec
or
pop
xor
outsb
ds
inc
mov
outsl
clc
push
jne
outsl
js
fs
outsb
lcall
xchg
inc
dec
pop
inc
pop
scas
adc
insb
inc
jno
pop
je
adc
pop
jle
insb
popa
xorb
adc
push
pop
inc
inc
jno
popa
dec
xchg
push
lock
cmp
inc
pusha
jns
insl
mov
dec
jb
mov
pop
dec
pop
inc
addr16
jne
dec
push
jp
jb
data16
js
mov
jnp
inc
imul
mov
dec
pop
into
je
cli
pop
pop
jne
js
addr16
dec
inc
push
jbe
jb
dec
jbe
dec
outsl
push
dec
loope
lock
pop
push
inc
inc
addr16
inc
push
push
push
mov
jne
aam
mov
jnp
push
sti
push
inc
fisttps
inc
push
data16
pop
push
insb
push
inc
data16
rorb
je
jne
dec
pop
sub
popf
xor
inc
les
repnz
shr
shl
ror
stc
outsl
jmp
clc
loope
test
dec
loope
in
int3
fcmovbe
jmp
ljmp
sar
in
fadd
jmp
inc
shr
fptan
rcr
aam
in
fimuls
mov
pushl
mov
xchg
mov
mov
mov
xchg
mov
stos
sahf
xchg
mov
jmp
cmpl
xchg
mov
mov
dec
dec
inc
je
pusha
cld
xchg
mov
inc
jge
jle
inc
jae
rolb
pop
jb
incb
jge
jno
inc
pop
push
outsb
imul
dec
ja
inc
outsl
js
ret
or
jle
pop
dec
addr16
or
sbb
xor
ds
sbb
sbb
lcall
sbb
xor
aaa
sub
xor
mov
mov
sub
and
and
xor
cmp
sbb
lcall
and
fcmovnbe
jmp
fsin
int3
cli
fcmovnu
lret
lret
fdiv
fmul
out
fcos
dec
call
fdiv
iret
lock
out
enter
call
out
fsubrp
rcr
push
jmp
stc
divl
test
cltd
mov
xchg
nop
pushf
cmpsl
mov
movsl
mov
add
cmpsl
dec
scas
cwtl
cmpsb
sahf
xchg
xchg
ljmp
scas
mov
mov
fwait
mov
lcall
jle
mov
shl
ljmp
fxch
loopne
fdivr
icebp
fstpl
repnz
aad
vpsubsb
in
not
cmp
icebp
jmp
fdiv
in
rol
in
in
std
rcl
call
jmp
stos
nop
mov
mov
test
std
mov
mov
lods
mov
mov
stos
test
fcomip
scas
xor
mov
popf
fdivrs
fwait
mov
xchg
pop
popf
addb
push
pop
popa
pusha
adc
insb
jb
push
inc
push
pop
inc
pop
push
insl
inc
in
shrb
inc
push
jp
dec
jp
ja
dec
insb
jp
pop
jge
lret
idivb
insw
insb
into
jge
dec
jmp
or
adc
and
sub
push
pop
add
cmp
movhps
push
adc
cmp
or
adc
or
pushl
cmp
aaa
sbb
sbb
add
int3
stc
sar
cmc
sar
fdivr
mov
ror
loop
ljmp
ljmp
not
repnz
pushl
or
rol
call
sar
ror
fnop
stc
ret
bnd
fsub
lcall
mov
addl
mov
sbb
call
es
mov
orl
lods
cmpsl
jmp
fwait
mov
mov
nop
fwait
mov
add
jne
and
xor
adc
fcmovnb
pop
loop
or
sub
push
sahf
pop
pop
or
lock
arpl
aaa
outsb
fs
jl
pusha
ret
sub
sub
add
and
incl
in
xor
or
cmp
sbb
xor
fildll
sub
xor
pusha
pop
das
sub
or
and
out
aas
add
or
and
push
sbb
adc
popf
clc
or
add
and
add
or
insl
push
add
cvttps2pi
sbb
sbb
push
jg
dec
xor
cmp
sub
pop
sbb
cmpsb
or
or
call
and
pop
add
jp
or
jns
or
sbb
xor
fwait
pusha
ret
cmp
in
aaa
bound
push
sub
pop
mov
aas
cs
cmp
push
aas
xor
femms
cmp
or
lcall
add
jne
cmp
outsb
jne
add
adc
jmp
inc
cmp
adc
sub
ja
pop
and
cmp
ja
cmp
ss
or
aaa
or
push
or
inc
daa
cmp
inc
adc
cld
in
ljmp
pop
and
cs
sub
adc
mov
repnz
add
lock
add
sub
cmp
and
aaa
and
jmp
add
xor
sbb
cmp
inc
add
dec
inc
sbb
adc
outsb
adc
sub
sub
insb
sbb
pop
sub
sbb
dec
rolb
or
sbb
incb
and
add
sbb
sub
and
aas
push
jne
cmp
movsb
push
pop
cld
jg
cmp
cmp
aas
add
and
and
sbb
mov
sub
sub
bound
and
and
or
cmc
ljmp
sub
push
xor
aas
das
daa
sub
add
add
jne
pusha
jp
and
aas
sub
add
pop
lock
ffreep
adc
or
cmp
sbb
pop
and
add
cmp
movq
cmp
sbb
pop
and
xor
or
adc
push
dec
push
xor
sbb
pop
sub
push
sbb
aas
cmp
arpl
cmp
and
xor
or
std
or
sub
ja
or
cmpsb
add
sub
add
jns
cmp
cmp
cmpsb
and
aaa
xor
ja
aam
les
ret
adc
clc
push
fcoms
daa
test
add
push
adc
fcomip
incl
pop
daa
dec
add
aaa
adc
das
sbb
ljmp
clc
sub
inc
sub
adc
sbb
adc
sbb
cmp
loop
sbb
and
xor
add
ss
and
pop
sbb
ds
sub
xor
or
decl
push
add
add
xor
pop
dec
adc
cmp
and
xor
add
sbb
dec
add
add
push
add
or
xor
incl
daa
push
sbb
dec
adc
add
clc
das
lret
cmp
adc
incl
sbb
adc
daa
add
push
sub
cmp
sbb
jg
mov
xor
add
adc
or
sbb
aaa
push
cld
xor
push
or
pop
cmp
and
pusha
xor
mov
es
xor
push
pushl
adc
and
sub
das
test
aas
test
jl
inc
sub
pop
and
sub
push
jmp
cmp
cmp
add
or
and
xor
addl
out
jbe
sub
mov
cmp
or
xor
lret
call
sbb
add
sbb
or
sub
sub
mov
or
dec
aaa
sbb
subb
push
and
and
adc
sub
rcr
loope
hlt
cmp
sbb
and
cld
outsl
clc
pop
cmp
push
cmp
adc
sbb
adc
pop
sbb
mov
and
add
add
sub
xor
push
pop
adc
aas
test
add
mov
fidivrs
orb
and
push
push
mov
outsb
adc
pop
push
jmp
out
cmpb
or
lcall
pop
loopne
inc
xor
bound
cmp
aas
and
or
lods
lret
fs
comiss
ds
outsb
call
inc
adc
add
aas
sub
or
and
jne
adc
add
xor
xor
xor
pop
sub
push
and
adc
and
push
pop
cmp
sub
stos
push
pusha
shrl
push
sbb
sbb
sbb
cmp
mov
hlt
call
adc
sub
jo
sbb
daa
xor
pop
outsb
and
inc
ljmp
jns
add
push
das
sbb
dec
adc
cld
cmp
or
aaa
mov
and
das
fimuls
xor
pop
adc
or
sub
or
cmp
in
and
jne
or
adc
sbb
adc
pop
sbb
push
call
stos
ss
xor
sub
subl
adc
daa
adc
push
sub
loopne
hlt
decl
sbb
sub
push
sub
push
xor
rcll
push
cmp
and
daa
or
cmp
out
sub
pop
push
cmp
cmp
xor
andb
xor
or
sbb
mov
mov
cmp
aaa
xor
sbb
aas
or
and
cs
add
fwait
insl
mov
jne
mov
inc
mov
outsl
push
xchg
inc
ret
ljmp
cmp
ja
sti
inc
pop
pop
pop
xor
in
pop
push
sub
cs
fadd
jae
adc
roll
pusha
pop
and
push
xor
sar
push
insb
jne
cmp
push
out
lret
cmp
adc
cmc
inc
adc
xor
pop
sar
jg
cmp
frstor
xor
push
push
jl
outsb
push
and
push
enter
add
jmp
in
jle
sbb
pop
push
lret
dec
imul
aad
addr16
sbb
sar
jg
jns
sub
or
icebp
push
push
push
imul
and
cld
addr16
decl
into
sbb
push
and
xor
push
pop
add
dec
aam
inc
imul
je
push
push
pop
and
pop
pop
pop
pop
fs
mov
in
dec
pop
add
data16
jne
adc
sbb
int3
jnp
sub
iret
stos
call
pop
xor
adc
xchg
das
xor
leave
inc
pop
adc
or
cld
dec
pop
mov
mov
lock
cmp
cld
dec
fs
and
aad
jle
xor
jnp
xor
mov
jmp
push
add
test
push
incl
int
bound
add
jno
ss
jge
imul
sbb
out
clc
incl
les
and
dec
inc
je
mov
dec
push
xor
and
cmc
mov
mov
jo
call
dec
xchg
clc
push
push
cmp
arpl
in
jbe
aas
mov
add
lock
pop
fs
jne
loop
dec
aaa
cli
push
pop
cmp
xor
cmp
lret
insl
push
and
dec
inc
add
das
stc
inc
add
cmp
lds
and
jb
jg
push
inc
add
add
enter
or
pop
mov
dec
push
sub
adc
inc
fistps
dec
stos
imull
pop
and
inc
mov
push
add
dec
mov
pop
add
call
sub
fs
add
push
xor
push
sub
jae
cmc
jo
and
inc
mov
mov
inc
pop
or
jne
test
inc
clc
int
pop
or
ds
int3
xlat
imul
pushf
jno
incl
cmp
push
jae
imul
dec
push
sar
lcall
jb
int3
push
push
pop
add
push
push
into
jns
sbb
add
mov
dec
and
jo
xor
xor
pusha
sar
jg
push
sub
lret
js
sub
gs
and
jb
dec
pop
or
ret
repz
push
adc
jb
mov
jnp
add
les
cmp
rclb
clc
xor
mov
cmpb
inc
js
adc
inc
inc
imul
push
arpl
push
dec
lcall
cld
push
ss
dec
adc
add
adc
sub
add
aaa
cmp
incl
sbb
loopne
pop
pop
pop
push
lret
ret
call
sar
decl
pusha
add
and
pop
dec
imul
add
in
inc
pop
je
jge
sbb
into
fisttps
pop
outsb
data16
adc
jo
jle
repnz
test
mov
or
jnp
inc
add
cmp
lock
xchg
add
ja
jl
inc
push
fs
cmp
sub
and
push
sbb
or
cmpsb
adc
out
sub
ljmp
push
sub
add
das
pop
adc
adc
xor
and
ret
mov
sahf
pusha
mov
dec
je
aas
sub
or
mov
sub
sbb
sub
or
adc
ljmp
sub
adc
cmp
ss
fsubs
dec
push
push
xor
aas
cmp
ljmp
add
ja
adc
add
aaa
push
adc
pop
sub
sub
sbb
adc
pop
or
xor
push
add
sub
ljmp
rorb
bound
pop
jle
inc
je
pop
imul
aaa
xchg
dec
inc
movsl
add
call
pushf
gs
or
pop
rcrb
push
jge
mov
shlb
inc
dec
int3
or
sub
sub
cmp
inc
push
sbb
incl
cmp
push
xor
push
adc
add
pop
adc
and
cmp
sbb
inc
pop
lea
dec
inc
jge
fs
xor
outsl
sbb
cmp
mov
push
or
or
xor
xor
sbb
and
ljmp
das
and
xor
xor
dec
imul
push
decl
gs
push
add
pop
sbb
adc
push
cmp
dec
jmp
ljmp
add
xor
and
push
adc
and
sub
outsb
pop
add
adc
and
push
sbb
aaa
ja
add
dec
sub
dec
sub
sub
orl
add
or
es
pop
cmp
jg
lock
xor
push
or
jmp
sub
push
adc
push
sub
outsb
inc
inc
adc
add
add
jp
add
pop
pop
ss
push
or
add
adc
outsl
insl
arpl
add
cmpsb
and
lods
push
adc
jg
jg
fistpll
push
add
daa
inc
push
sbb
imul
sbb
sub
push
or
mov
push
pop
nop
sub
cmp
sub
cld
jg
sub
sub
es
add
ss
xor
add
lock
xor
and
jg
mov
movsb
and
pusha
push
pop
and
psrlw
cmp
add
aas
cs
adc
sbb
aam
rclb
or
jle
mov
out
out
sbb
mov
or
cmp
ret
dec
and
imul
jae
add
insb
js
push
push
dec
xor
repz
add
aaa
mov
xor
push
jbe
push
imul
decl
jno
push
cmp
pop
inc
inc
inc
in
pop
pop
cli
imul
movsb
push
cli
dec
jg
cmpsl
jl
pop
push
imul
jbe
jle
lcall
jp
jb
pop
cmpsb
push
arpl
dec
insl
push
cmp
dec
inc
fs
dec
out
je
pop
jb
mov
pop
jmp
insb
pop
push
dec
push
popa
or
inc
pop
push
adcl
pusha
push
dec
in
lods
push
jne
jae
or
sbb
nop
adcb
push
pop
bound
incl
inc
rcrl
in
push
jns
fwait
push
outsl
inc
xchg
gs
pop
jae
xchg
lock
lods
imul
bound
pop
dec
pop
out
test
outsl
pushf
sbbl
dec
loopne
push
jb
fdivl
add
inc
mov
and
scas
aam
jp
jne
call
cld
jmp
add
std
mov
jbe
add
pop
cmp
leave
add
enter
jns
ja
lcall
or
inc
push
les
js
jns,pt
imul
push
ljmp
cmp
enter
or
or
jle
xor
add
dec
jnp
loope
inc
daa
dec
jne
inc
xchg
xor
push
das
adc
aaa
cmc
test
and
daa
sbb
adc
sub
jmp
cmp
xor
sbb
stc
aaa
cmp
bound
push
push
xor
inc
jg
sub
xor
push
dec
xor
xor
ja
or
pusha
cmpsl
adc
xchg
dec
popa
ja
xor
sbb
test
sub
fisttps
cmp
mov
clc
add
cmp
xor
pop
cmp
sub
cmp
call
das
or
pop
cmp
add
and
mov
sbb
xor
dec
incb
and
fs
out
mov
dec
adc
imul
mov
sub
out
jge
xlat
xchg
push
cltd
mov
sbb
mov
inc
xor
fisubs
ds
arpl
sub
dec
pusha
mov
fwait
outsl
cmp
jo
imul
repz
xchg
jl
outsl
push
xchg
inc
add
add
cmovns
insb
push
in
and
cld
mov
aaa
mov
pop
pop
imul
leave
fwait
out
sahf
mov
pushf
bound
lods
gs
jmp
dec
loop
dec
imul
adc
push
push
sub
repz
pop
pop
mov
jns
scas
js
in
mov
dec
dec
inc
stc
out
fbstp
xchg
push
dec
icebp
lahf
dec
jbe
cwtl
jne
les
fidivrs
mov
mov
daa
inc
xchg
push
gs
jp
inc
mov
dec
sub
test
adc
xchg
inc
mov
mov
imul
xchg
push
test
dec
dec
ret
pusha
aam
aas
sahf
arpl
mov
push
jae
cwtl
aaa
push
lret
mov
xchg
pop
das
outsb
push
pop
ror
mov
data16
mov
xchg
jl
and
inc
add
je
imul
scas
lods
mov
sahf
xchg
add
pop
inc
dec
xchg
push
pop
pop
jno
aas
lcall
jb
mov
push
imul
jbe
mov
repnz
add
add
add
fsubrl
inc
push
push
mov
decl
jno
push
mov
dec
js
outsl
push
inc
daa
cmpl
call
dec
mov
dec
fsubl
dec
insb
fbld
je
dec
stos
dec
dec
push
mov
aaa
or
jns
jbe
int
and
add
jmp
in
je
push
inc
movsb
dec
inc
pop
lea
outsl
sahf
cld
mov
pop
pop
mov
lcall
adc
pop
inc
jp
inc
inc
pushf
ja
pop
lret
dec
popa
cs
jb
lds
jnp
repz
inc
mov
mov
daa
call
and
inc
xchg
scas
cld
incl
fnstsw
inc
jbe
mov
push
popa
push
imul
test
jnp
push
pusha
dec
pop
mov
ljmp
add
push
mov
inc
jp
scas
imul
jnp
ret
mov
pop
testb
stc
pop
dec
push
dec
dec
push
outsl
xchg
xchg
dec
fisubs
inc
push
jb
inc
je
lahf
call
adc
mov
outsl
adcb
fwait
gs
pop
mov
jge
push
and
inc
inc
jbe
cmp
arpl
mov
jo
mov
repz
push
movsl
xchg
movsb
andb
sahf
je
call
inc
js
jno
push
mov
pop
ja
incl
cmovo
push
cmpsb
lahf
jae
fcoml
push
addr16
aaa
int
dec
jne
aad
push
aas
push
inc
pusha
jnp
add
sbb
bts
jns
jb
sbb
inc
leave
mov
cmp
push
jecxz
dec
jbe
imul
xor
push
pop
adcl
hlt
pop
pusha
test
jae
xor
xchg
ss
xchg
int
cltd
mov
in
enter
push
gs
inc
shufps
mov
xorl
push
bound
push
lods
mov
jge
lahf
jg
jno
xorl
lds
push
add
out
mov
cmpsl
ss
push
out
pop
insb
dec
enter
cmp
test
mov
mov
and
fiaddl
jg
sbbl
ja
pop
test
sub
mov
sbb
push
lret
cmpb
aam
push
jns
pop
add
lcall
pop
jae
int3
imul
call
jb
xchg
push
inc
test
inc
push
pushl
jne
jns
push
xorb
jp
lock
dec
inc
fnsave
dec
ret
jnp
add
js
nop
stos
push
int3
outsb
push
mov
mov
loope
fsubrl
out
arpl
dec
dec
jle
push
gs
dec
js
jo
or
lcall
out
bound
jae
and
inc
imul
ja
cmc
je
aaa
call
cmp
loope
xlat
pop
je
jmp
add
filds
adc
andb
mov
mov
aad
outsl
add
add
push
ja
jae
xor
sub
pop
mov
dec
push
cmpsl
lods
xchg
mov
das
pop
addr16
test
int3
mov
stc
mov
pop
and
popa
pop
adc
pop
ret
pop
stc
inc
pop
inc
xchg
mov
pushf
mov
repnz
pop
xor
push
dec
add
mov
mov
or
pop
inc
push
pop
hlt
cld
adc
lods
movsl
mov
iret
pop
add
scas
sahf
mov
mov
inc
jg
cld
stc
repz
lcall
mov
dec
popa
iret
lahf
aas
jg
sahf
mov
mov
push
and
fisubrl
cmp
push
fmull
xchg
cwtl
mov
je
mov
pop
in
lock
fldt
inc
aad
inc
dec
mov
xchg
stos
pop
cwtl
mov
xorl
mov
shll
loop
stos
repnz
push
push
call
popf
pushf
mov
pop
pushl
push
adcl
inc
insb
mov
xchg
pop
popa
ds
outsb
mov
out
xchg
mov
popw
fdivl
scas
push
xor
xor
int3
sbb
pop
movsb
push
popa
fimull
pop
fildl
mov
push
cltd
std
int
les
dec
inc
jecxz
outsl
jecxz
jl
push
inc
scas
mov
movsl
mov
movsb
pop
pop
fmull
rol
xchg
mov
out
stos
mov
and
push
add
jl
xor
inc
mov
stos
mov
repz
cmpsl
push
mov
xchg
insl
mov
sbb
mov
outsl
incl
cmpsl
stc
xor
sahf
mov
mov
adcb
push
addl
out
jl
inc
push
mov
ds
lahf
popa
loop
arpl
lahf
mov
cmpsl
test
dec
mov
bound
xor
out
mov
xchg
xchg
mov
pop
mov
out
out
inc
ja
mov
xchg
repz
xchg
push
inc
inc
xchg
scas
inc
cmp
pop
mov
mov
mov
ja
inc
mov
sarl
dec
lods
mov
stc
xor
pushl
imul
xchg
mov
test
iret
aas
int
inc
mov
jns
jge
inc
movsb
out
jl
mov
mov
inc
stos
mov
pusha
out
pop
mov
inc
ds
imul
jl
push
ret
xchg
inc
cld
xchg
dec
jne
push
mov
xchg
inc
inc
js
dec
jne
mov
add
sub
jb
imul
mov
cmpsb
mov
push
push
loopne
dec
int3
dec
inc
popa
jo
jns
add
aas
adc
sbb
dec
sarl
pop
inc
lahf
mov
mov
cmp
push
push
addr16
ja
dec
les
dec
gs
mov
lods
je
push
cmp
aaa
in
inc
js
jge
sub
and
inc
inc
clc
jae
dec
push
stos
sub
sub
or
in
inc
inc
push
inc
leave
outsb
dec
push
dec
mov
or
out
arpl
xchg
push
fld
push
jae
dec
in
dec
pop
mov
insl
js
push
test
or
aas
mov
jbe
inc
fistps
push
xlat
popl
out
push
imul
pop
cltd
fwait
arpl
test
and
mov
iret
jbe
sbb
mov
dec
clc
mov
adc
or
gs
fwait
dec
push
stos
mov
ja
sti
cmpsb
dec
addr16
loopne
pop
inc
push
adc
gs
xchg
ret
add
les
les
push
dec
inc
push
es
push
jne
jmp
fwait
inc
sbb
pop
pop
push
push
dec
mov
push
pop
jo
jp
pop
mov
push
pop
jge
cmp
inc
pop
bound
push
mov
pop
cmp
jecxz
scas
cld
jmp
gs
inc
sub
imul
jno
mov
sahf
xor
lea
inc
pop
add
lahf
and
add
mov
xchg
punpckhdq
pushf
stc
repz
pusha
repnz
dec
js
mov
jno
push
cmpsb
test
or
mov
je
test
daa
test
cmpsl
mov
iret
lahf
mov
push
dec
gs
cmp
jmp
jbe
cmpsb
or
je
xchg
xchg
xchg
cmpsb
lcall
xchg
and
pop
pop
pop
scas
xchg
test
clc
cli
ja
js
xchg
push
scas
add
mov
dec
inc
aas
push
lcall
mov
xorb
and
xchg
push
inc
rolb
or
jp
mov
clc
inc
icebp
cmp
mov
mov
in
in
call
pop
jp
xchg
push
inc
push
pop
jno
mov
in
dec
push
jns
mov
int3
mov
inc
dec
push
mov
jne
popa
test
test
lods
mov
dec
sbb
jno
pushf
subb
or
andps
jmp
xorl
lods
push
fiadds
sub
dec
inc
test
fs
lahf
dec
push
loopne
jp
pop
xchg
les
insl
jl
cld
out
dec
dec
and
pop
dec
pop
imul
dec
scas
adc
cmp
lds
dec
xor
dec
xor
jno
pop
sar
test
push
push
out
bound
jae
push
dec
out
jg
dec
hlt
mov
inc
je
pushf
inc
pop
pop
pop
mov
lea
std
push
push
dec
rorl
fdivl
cmpsl
rclb
dec
fs
xor
adc
call
std
or
daa
in
dec
push
shlb
enter
out
pop
ret
jb
push
ja
pop
add
int3
mov
stc
xchg
xchg
pushl
push
xchg
loope
push
jbe
bnd
adc
mov
inc
arpl
xchg
mov
pop
pop
pop
sub
test
scas
push
int3
insb
imul
pop
rorl
inc
inc
inc
push
stos
or
cld
data16
les
pop
xchg
jns
scas
in
push
jl
les
sbb
aam
jae
inc
push
push
inc
lahf
in
sbb
inc
pop
inc
jg
ljmp
lcall
add
jl
push
incl
jnp
imul
jbe
and
pop
dec
push
add
arpl
push
mov
cld
call
push
dec
push
daa
into
sarb
cmpsb
pop
lods
mov
sub
dec
leave
push
push
stos
ret
adc
in
cwtl
popf
and
je
lea
push
pop
push
mov
insb
pushf
movsb
mov
xchg
ljmp
xchg
mov
jns
out
outsl
push
push
enter
clc
fistps
cmp
or
push
inc
xchg
xor
jae
popa
dec
loopne
loope
jne
mov
pop
jmp
scas
aam
mov
outsl
jno
and
lahf
add
push
pop
push
mov
push
jl
data16
lret
repnz
jae
mov
aam
js
arpl
pop
pop
dec
fisubs
pushf
xchg
inc
imul
les
cltd
fimull
or
inc
pop
lahf
mov
push
cmpsl
fstl
mov
shlb
and
cmc
sub
push
adc
jb
inc
nop
negl
inc
dec
jmp
es
jno
mov
imull
push
pop
jno
loop
pop
inc
or
xchg
leave
aaa
jge
es
xchg
clc
jbe
les
lea
add
imul
stc
pop
dec
clc
out
jmp
dec
inc
mov
lret
inc
inc
sti
jae
xor
inc
and
aad
clc
test
stos
xchg
jmp
stos
jecxz
push
repz
mov
and
jbe
jbe
leave
dec
pop
fnsave
push
repnz
push
fs
cmpsl
add
jl
inc
call
stc
inc
pop
mov
jecxz
sub
dec
jmp
imul
mov
rclb
dec
lea
lret
adc
pushf
push
cmp
in
and
out
aam
cli
ret
lcall
loope
test
shl
jb
jae
dec
dec
int3
lret
sahf
sbb
xor
mov
subb
outsb
xchg
push
jnp
in
jns
test
xchg
sub
push
int3
cmpsb
inc
in
mov
fsubs
lcall
jne
dec
xchg
insb
arpl
dec
jbe
lahf
aaa
pop
test
pop
mov
sbbl
aas
cmp
inc
ja
ja
push
mov
push
aaa
stos
inc
test
and
dec
push
adc
cmp
mov
icebp
dec
push
inc
fistpl
gs
jne
xorb
mov
dec
pop
pop
pop
fldcw
push
repnz
mov
lcall
xchg
aaa
dec
aas
inc
dec
fcompl
outsb
mov
mov
and
sbbb
imulb
fdivrp
pop
pop
movsb
cwtl
lret
outsl
inc
ljmp
aam
out
pop
les
cmp
jnp
repz
adc
jno
inc
outsb
push
xor
lods
outsb
push
dec
data16
popa
add
movsl
inc
push
fwait
push
inc
scas
iret
jae
inc
jno
inc
sarb
inc
sti
push
and
mov
pop
test
test
out
ds
dec
orb
addb
inc
shlb
lds
pop
fisubrs
shlb
mov
pop
shll
push
andb
cld
aas
cmovo
mov
je
push
out
pop
jle
push
in
add
mov
push
dec
jno
cmp
pop
aad
push
maskmovq
inc
mov
data16
je
leave
mov
pop
test
xchg
jns
cmpsl
xchg
mov
jo
pop
sahf
jmp
sub
mov
jnp
js
jecxz
jno
jmp
push
jg
inc
inc
addr16
jge
jmp
je
fs
pusha
fisttpl
les
inc
fwait
aad
add
sub
sbb
pusha
sbb
mov
jg
push
xor
aam
add
out
lock
bound
enter
xor
aam
lahf
jg
lret
in
push
inc
lock
mov
test
pusha
lcall
jo
push
inc
arpl
test
xchg
mov
pop
inc
orb
enter
lret
push
xchg
pop
bound
loope
push
inc
shrl
cmpsb
or
lcall
mov
mov
mov
lock
std
addb
fcoml
aas
outsb
std
es
push
lret
test
jo
and
jnp
cmp
push
adc
jne
andl
sbb
lods
cld
mov
pushf
fs
mov
mov
pop
je
popf
cmp
pop
fsubrs
inc
imul
jae
stos
and
outsl
push
fstps
lcall
je
loope
inc
addb
pushf
js
lods
xorb
mov
call
push
movsb
gs
jle
ficoml
pop
dec
sbb
push
push
adc
data16
in
mov
add
insb
push
lock
enter
arpl
inc
push
js
push
jne
mov
push
dec
mov
out
mov
adc
ss
imul
je
test
push
arpl
scas
ja
lods
push
insb
jecxz
dec
jmp
mov
mov
pusha
pop
addr16
mov
sbb
mov
jbe
lret
inc
stc
xchg
je
cmpl
jo
xchg
incl
mov
scas
xchg
jle
inc
jns
addl
scas
jno
or
jg
mov
bound
dec
dec
fsubrs
dec
dec
enter
lcall
push
mov
ja
mov
mov
pop
mov
insl
mov
popa
cmpsb
add
test
mov
cmp
call
js
push
movsl
dec
inc
jmp
fwait
dec
outsb
sahf
stos
je
shl
pop
or
out
clc
decl
inc
cmp
adc
or
adc
es
and
incl
cld
cmp
outsl
xor
or
lcall
adc
sub
dec
incl
push
or
sub
and
je
pop
cmp
sbb
push
xor
dec
sbb
ss
dec
add
and
cmp
cmp
or
or
push
sub
adc
cmp
cld
ljmp
push
sbb
sbb
xor
sbb
add
xor
and
push
xor
fistps
inc
add
add
push
or
aaa
or
and
inc
push
js
pop
and
adc
cmp
fwait
add
das
cmp
sub
clc
sub
or
hlt
pop
push
and
xor
sub
cmp
add
or
cmp
jecxz
cld
js
sbb
inc
pop
push
or
add
sbb
decl
es
das
and
out
gs
sub
xor
add
and
and
add
cmp
sub
adc
or
push
loopne
xor
and
add
sub
mov
bound
add
or
pushf
add
or
push
or
pushl
cmp
or
pop
push
ss
xor
push
sub
and
insb
sbb
cmp
daa
pop
mov
lock
cld
xor
aaa
xor
xor
cmp
push
jecxz
and
or
outsl
cli
pop
loop
and
add
adc
adc
les
dec
xor
or
add
add
lcall
sbb
sbb
push
adc
sub
sbb
js
stc
pop
sub
sbb
jg
mov
inc
pop
sbb
or
cmp
and
or
les
xor
daa
cld
mov
sbb
sbb
push
and
sub
jns
outsl
sub
adc
call
xor
push
or
cmp
sbb
and
dec
dec
mov
insb
cld
aaa
mov
sbb
sub
pop
add
mov
test
arpl
adc
aas
cmpsb
and
push
xor
cmp
decl
decl
or
ja
xlat
pop
push
adc
sbb
sub
test
sbb
pop
fdiv
and
sbb
orb
xor
pop
add
push
cmp
std
data16
loop
cmpsb
sbb
adc
sub
and
aam
or
adc
sub
adc
popf
popw
cs
add
daa
add
jmp
cld
jg
sub
and
push
cmp
adc
xor
sarl
add
cmp
dec
cs
pop
push
adc
cld
jg
xor
arpl
sub
adc
sub
shrb
out
add
loopne
or
add
ljmp
les
add
or
xor
cmovle
jle
push
cmp
dec
decl
sbb
sub
xor
cwtl
jns
addb
cmp
cld
incl
add
sub
xor
or
adc
xor
and
and
stos
pop
fcoms
sub
push
es
adc
jl
cmp
cmp
xor
daa
adc
adc
add
loope
mov
or
adc
or
xor
call
lods
mov
lcall
ss
jmp
xor
add
or
jecxz
aaa
sbb
ss
aas
cld
mov
inc
and
subps
xor
xor
aaa
cmpsb
cmp
pop
add
and
add
add
sbb
push
sbb
out
lcall
xor
xor
xchg
pop
inc
dec
xchg
es
sbb
aas
clc
sbb
pop
sub
cmp
jo
daa
outsb
pop
or
xor
sbb
sbb
push
add
add
or
daa
shlb
sub
push
sbb
and
outsb
aaa
js
jecxz
adc
add
push
push
pop
or
push
add
adc
scas
and
shl
or
adc
adc
and
rclb
sub
cmp
call
sbb
and
aad
sbb
and
adc
jne
or
adc
sub
jg
dec
adc
add
adc
jbe
xchg
sub
rol
xor
cmp
and
inc
add
jecxz,pt
stos
add
sbbb
sbb
aam
mov
or
adc
and
fidivs
sub
add
and
or
push
mov
cmp
add
xor
loope
dec
les
sub
inc
mov
cmp
and
xor
dec
sbb
aam
inc
mov
adc
jg
mov
subb
add
adc
nopl
jmp
and
inc
or
aas
add
cmp
jo
cmpl
cmp
add
sub
outsb
js
pop
or
adc
and
cmp
enter
je
ss
jbe
pop
xor
clc
or
lret
ss
sbbb
cs
sub
xor
dec
and
adc
mov
and
js
and
sub
ss
dec
add
xor
sbb
cmp
push
stos
push
or
and
sbb
pop
sbb
sbb
cmp
dec
pop
fsubrl
add
xor
sub
jne
mov
adc
push
adc
or
push
lret
jno
cmp
xor
sbb
repz
daa
adc
pop
cmp
and
sbb
adc
adc
ss
dec
or
ds
cmp
lea
cmp
xor
daa
sub
pop
ja
push
or
pushl
mov
inc
adc
mov
or
pop
cmp
jno
push
loopne
hlt
bound
cmp
adc
dec
add
add
das
and
clc
mov
or
or
ret
mov
add
or
jne
inc
inc
dec
cltd
clc
dec
rcll
inc
mov
mov
ss
push
popa
js
je
dec
xchg
mov
mov
add
sbb
fsubrl
adc
cmp
mov
dec
js
xor
mov
stos
jns
movsl
clc
pop
add
cmp
sbb
js
add
add
mov
decl
aam
inc
push
popa
shll
push
imul
insl
inc
jg
cli
jg
fcmove
imul
dec
push
jnp
dec
pusha
jb
pop
dec
pop
xor
test
dec
stos
dec
popa
aam
pop
and
mov
shl
jp
adc
push
iret
repz
ja
outsl
imul
iret
repz
inc
fs
repz
repz
insb
dec
iret
repz
inc
pop
dec
dec
inc
cmp
repz
jne
pop
inc
repz
repz
push
push
pusha
iret
repz
jns
xor
iret
repz
imul
iret
repz
gs
imul
jp
add
or
jg
imul
mov
xlat
fs
rcrb
lcall
mov
std
inc
loop
push
jae
insb
arpl
insb
ss
push
rorb
mov
imul
inc
push
cmpsb
push
inc
aad
xchg
sub
insb
pusha
pop
out
inc
test
fnsave
push
adc
push
push
dec
and
dec
and
dec
xor
xor
dec
inc
sub
push
add
sar
xor
icebp
push
fs
or
addr16
xchg
adcl
or
xchg
pop
xor
pop
test
movsb
push
xchg
cld
pop
cltd
push
jb
push
pusha
pushl
add
jge
das
cltd
cld
jbe
xor
outsl
dec
std
incl
int
pop
adc
je
inc
cwtl
inc
push
jne
pop
mov
push
sub
js
nop
jae
cmpsb
fisubrs
lret
jne
mov
in
pop
aas
aad
iret
xor
pop
pop
inc
aas
out
cmp
dec
inc
fistpll
lahf
jg
stc
stos
frstor
jp
jns
push
pop
in
jnp
bound
out
push
inc
xchg
repnz
jbe
push
fcmovu
pop
xchg
jmp
leave
dec
push
push
ret
inc
mov
pop
pop
lds
inc
test
or
pop
out
loope
fs
add
push
out
das
push
inc
pop
ds
ja
dec
xchg
leave
inc
jp
cld
add
mov
adc
xchg
out
outsl
gs
iret
aas
lcall
gs
jg
jbe
or
dec
jle
aas
cld
mov
mov
gs
xchg
mov
cmc
imul
std
je
fsubrl
mov
dec
cmpsl
loopne
inc
test
idivl
out
gs
pop
dec
cld
xor
pop
mov
push
nop
into
ds
repz
pop
clc
push
out
pop
dec
div
addr16
ret
into
inc
inc
in
inc
push
jnp
leave
push
pop
cmc
fdivr
in
ljmp
in
cld
jns
xor
push
inc
adc
jbe
add
dec
push
std
dec
sub
inc
add
ljmp
gs
jmp
push
adc
jne
adc
outsb
push
sub
outsl
push
jbe
ljmp
lods
shlb
inc
pop
pop
jmp
gs
jmp
pop
cmc
ljmp
es
jae
test
call
lret
push
cmpsl
psubsw
clc
out
inc
pusha
jo
daa
sub
nop
cmpsb
stc
and
dec
repnz
jg
push
dec
pop
dec
pop
inc
pop
push
imul
inc
je
dec
pop
dec
pop
jnp
inc
pop
lock
push
addr16
imul
inc
fs
ja
jbe
insb
cmpb
loope
pop
jno
inc
dec
movsb
adc
xchg
pushl
daa
adc
adc
add
adc
push
sbb
pop
xor
sub
xchg
cmp
or
sbb
or
sbb
adc
aaa
xor
add
out
xor
inc
gs
je
fs
sbb
mov
pop
pop
push
jnp
dec
arpl
addr16
pop
jle
subl
sbb
bound
pop
sub
lcall
inc
inc
push
dec
addr16
insb
jb
popa
inc
jns
incl
inc
add
ss
xor
add
sub
cmp
add
pop
adc
sub
decb
push
aas
cmp
cmp
and
repnz
decl
and
or
and
cmp
cmp
sbb
and
or
add
jne
sub
addr16
decl
pusha
outsb
js
jecxz
xchg
lock
out
shrb
icebp
in
xchg
das
loope
add
nop
call
imul
pop
enter
mov
stos
idivb
and
xchg
ss
rorl
leave
dec
xchg
leave
pop
inc
xchg
stos
lret
cwtl
cld
sbb
xor
xchg
fisubs
adc
cmpsl
dec
pop
jo
out
cld
jg
test
jge
sti
scas
into
pop
push
inc
jae
xchg
cld
out
inc
pop
push
bound
push
dec
push
dec
pusha
js
push
inc
mov
jne
adc
cli
jg
and
jbe
inc
inc
pusha
pop
pop
jnp
mov
dec
dec
push
inc
inc
imul
push
imul
leave
scas
mov
push
fadds
aas
scas
orb
mov
xor
cwtl
ret
add
clc
pop
push
aad
pop
pop
xor
ss
add
mov
mov
mov
push
inc
mov
and
jns
addr16
ss
xchg
mov
and
pusha
pop
add
mov
add
push
in
mov
out
sahf
out
cmp
lcall
jns
pop
sbb
push
cmovb
inc
xchg
decl
dec
mov
dec
imul
sbb
and
jp
xor
dec
or
sbb
and
xchg
inc
xchg
push
push
cwtl
clc
addr16
je
sbb
cmp
and
xor
and
ljmp
daa
and
sub
sbb
lock
fdivr
ljmp
add
aas
cmp
sub
and
and
or
jp
xchg
hlt
cmpsl
imul
and
and
cmp
jg
and
pop
adc
sub
add
test
ret
mov
add
aaa
add
or
jno
dec
outsb
dec
jl
inc
pop
push
das
clc
pop
andb
cmp
pop
xor
adc
or
lcall
daa
and
pop
and
pop
push
adc
cmp
cmp
adc
sub
add
jle,pn
xor
ljmp
call
adc
add
adc
cs
push
pop
pop
jo
nop
clc
jmp
rcll
push
adc
or
adc
pop
or
das
push
cmp
and
xor
lock
mov
jb
popa
push
adc
dec
push
and
sub
pop
add
add
pop
push
popw
sbb
daa
pop
or
sbb
push
xor
outsl
clc
ljmp
jle
xor
adc
or
cmp
and
add
or
sub
aas
adc
pop
xor
pop
subb
push
and
sbb
test
cld
pushl
cmp
adc
pop
adc
push
and
test
ljmp
fs
push
pop
pop
xor
xor
push
and
paddb
lock
cld
add
push
mov
push
pop
pop
sbb
or
adc
mov
sbb
add
or
push
xor
dec
mov
add
daa
adc
and
pop
push
cmp
and
sbb
and
xchg
out
ljmp
inc
pop
push
and
or
ds
push
adc
or
ljmp
add
pop
sbb
cs
and
outsl
jmp
xor
push
sbb
xor
pop
adc
fdivr
lret
test
outsl
inc
jp
xor
dec
dec
daa
and
or
aas
inc
sub
add
or
insb
gs
xor
sbb
adc
xor
sub
or
adc
xor
gs
or
lcall
sub
jo
add
aaa
dec
pop
dec
inc
inc
test
and
cs
mov
cmp
pop
add
sub
incb
sbb
add
and
or
cmp
or
adc
pop
stc
add
lret
inc
push
pop
push
add
pop
dec
sbb
sub
add
cli
mov
adc
or
outsb
push
push
and
adc
jle
sbb
ss
push
aas
jg
loope
xor
jg
pusha
push
and
dec
lcall
dec
outsb
xor
push
daa
add
dec
ja
or
cmp
cmp
xor
pop
mov
sbb
and
or
sub
ss
jnp
je
das
and
pop
adc
sbb
das
cmp
aaa
pop
clc
jle
or
cmp
sub
andb
adc
loop
into
mov
bound
xchg
sub
adc
sub
add
or
xor
and
and
movsb
ljmp
jg
and
push
cmpsb
xor
clc
pop
or
sub
stos
aad
pop
inc
adc
incl
xor
sbb
xor
add
xor
inc
incl
sub
inc
jo
cmp
or
sbb
stos
add
add
pusha
inc
test
call
lcall
adc
add
sbb
dec
fcompl
bound
loop
outsb
lahf
out
add
outsb
stos
mov
popf
pop
cmpsb
stc
or
sahf
mov
jns
loopne
lcall
in
pslld
aaa
cs
inc
xor
adc
lcall
pop
xchg
pop
pop
in
in
push
pop
pop
hlt
xchg
push
in
adc
test
mov
rcrl
lret
in
sub
lret
or
stos
jg
push
lock
aas
out
divb
arpl
jcxz
adc
aam
cmc
call
loope
or
jge
in
sahf
xchg
push
jnp
stos
xorb
roll
stc
in
decl
cmp
aam
adc
cld
xchg
call
and
inc
lcall
inc
pop
call
lea
mov
or
add
fucomi
jnp
sti
sbb
sub
dec
add
jecxz
xorb
adc
mov
push
into
sarb
decl
pop
loope
in
test
in
mov
lret
stc
gs
repnz
inc
adc
mov
mov
mov
adc
aam
jmp
lock
andl
jmp
jne
insb
xor
mov
add
jae
stc
mov
adc
jbe
ss
and
mov
mov
mov
cs
scas
xor
mov
jae
add
in
jmp
daa
or
ljmp
rcrl
pushf
mov
pop
mov
lret
cwtl
push
cld
addr16
sub
movsb
add
jne
xchg
aas
je
sub
dec
mov
sti
pop
icebp
dec
fimull
hlt
insl
fimuls
mov
icebp
or
jmp
jne
pusha
into
daa
insb
lea
loop
adcl
mov
adc
test
jmp
into
mov
adc
or
sub
ljmp
push
ss
ja
lea
sbb
insb
cmp
frstor
ljmp
aam
xor
ljmp
xor
fstpt
jo
jecxz
sbb
decl
in
daa
push
xorl
imul
leave
leave
lods
das
xchg
lret
shr
xlat
ret
sar
pushl
cmp
add
dec
xor
jmp
sbb
std
cmpsb
mov
sbb
test
insl
in
sbb
das
add
mov
ret
les
adc
push
clc
incl
dec
fwait
iret
mov
repnz
push
int
fs
push
jne
pop
xor
dec
aad
gs
mov
add
popw
inc
ja
jns
pop
xor
lret
jbe
and
jl
inc
push
ret
jno
mov
push
push
push
add
aas
mov
les
mov
jg
push
std
push
add
and
clc
dec
adc
adc
push
jbe
std
jmp
xor
add
sbb
adc
and
and
cmp
ds
lcall
jnp
push
jp
aaa
sub
and
xor
and
cs
je
jnp
pop
inc
mov
imul
and
and
and
adc
pop
cmp
add
and
pushl
cmp
sbb
push
pop
aaa
and
and
and
or
pusha
push
jno
jnp
fs
loopne
icebp
mov
cli
cmp
sbb
add
pop
add
inc
outsb
pop
gs
sub
testb
and
cmp
xor
cmp
xor
add
or
dec
ja
jno
bound
jno
je
adc
sbb
pop
and
lahf
add
or
aas
adc
xor
push
cmp
pop
lock
adc
cmp
add
jg
pop
add
ja
and
add
emms
pop
push
jle
add
add
cmp
sub
psadbw
aaa
push
push
and
js
insl
push
jns
pop
lods
and
dec
adc
cmc
decl
adc
adc
daa
sbb
decl
fcoml
sbb
xor
xor
insb
pop
addr16
nop
and
aaa
xor
sub
incl
imul
or
add
shll
or
sbb
xor
or
add
std
lcall
xor
add
ds
sysexit
sub
or
daa
es
mov
sbb
hlt
push
nop/reserved
or
aas
sub
out
inc
xor
adc
or
aam
dec
pop
imul
push
cs
ret
jb
jne
jge
arpl
inc
clc
popa
push
cld
ss
jne
dec
cmp
jns
popa
enter
jb
pop
jns
push
daa
jg
outsl
cld
decl
jbe
pop
dec
pop
imul
inc
jbe
jno
dec
divps
jae
inc
jno
outsl
pushl
cld
push
jbe
dec
dec
inc
outsb
jge
jp
cmp
imul
pop
mov
cld
push
jne
js
mov
cmp
lcall
sbb
pop
cld
jle
bound
and
jbe
pop
lock
fnsave
push
lcall
pop
and
fstl
pop
mov
jbe
outsb
movsl
push
movsl
pop
sub
jne
jo
jae
inc
mov
insl
jl
jle
pop
frstor
push
imul
fstl
jmp
inc
mov
dec
imul
addr16
jae
inc
int
stc
inc
imul
data16
daa
push
nop
pop
mov
popa
dec
pop
stos
inc
inc
inc
jge
incl
sbb
jl
pop
in
pop
push
dec
dec
push
jnp
dec
bound
jmp
push
xchg
inc
push
in
js,pt
dec
repz
imul
ljmp
jo
fwait
inc
inc
inc
add
inc
hlt
push
orb
je
int3
xchg
icebp
ljmp
jae
dec
pop
repz
mov
pop
loop
lods
jo
jl
imul
or
dec
imull
pop
insb
dec
or
jp
push
cltd
push
cmpsb
pop
imul
pop
mov
pop
les
xchg
xchg
loope
push
push
pop
inc
mov
lods
jo
push
scas
test
inc
jmp
xor
jne
incl
jae
pop
pushl
push
push
dec
inc
pop
jne
jle
popa
or
push
ret
inc
mov
imul
sarl
call
push
lret
push
mov
mov
pop
fnstenv
jo
inc
out
outsl
aam
in
mov
outsl
pop
jns
call
jae
inc
dec
outsl
or
je
inc
cmc
push
cmpsb
dec
lods
jbe
pop
dec
dec
push
jg
ja
insl
push
insl
jb
decl
adc
in
jge
dec
jmp
jae
push
mov
mov
arpl
pop
add
js
pop
sub
addr16
pop
cmp
inc
loopne
aad
dec
ljmp
mov
mov
jg
xor
inc
mov
pop
popa
aas
js
inc
pushl
pop
jns
out
rolw
call
xlat
inc
aam
into
inc
loop
shrl
jl
jnp
inc
pushf
leave
clc
add
mov
push
push
inc
arpl
mov
pop
addr16
dec
and
push
cmp
pop
pusha
mov
dec
push
lcall
and
adc
jge
pop
or
int3
inc
cli
jl
std
decl
pop
cmc
jb
push
sbbl
xorb
pop
outsb
pop
push
add
or
jne
insl
add
imul
or
dec
mulb
fidivs
push
mov
jmp
imul
dec
add
outsb
cmp
pushl
cld
outsl
repz
dec
ret
xchg
dec
fsubrl
insl
mov
mov
pop
scas
push
cmpsl
inc
movsb
je
insb
pop
loopne
mov
imul
jecxz
ss
cs
ljmp
push
ja
mov
mov
test
pop
pop
test
dec
arpl
jle
je
inc
ljmp
addr16
inc
lods
dec
mov
push
jb
push
inc
cmp
gs
dec
inc
dec
push
outsl
dec
pop
pop
inc
add
pop
jno
pop
pop
sbb
lock
leave
jp
clc
jg
pop
int
ficoms
outsl
mov
arpl
push
push
jg
insb
int3
inc
leave
inc
mov
out
jl
jb
lcall
mov
xchg
js
jnp
jge
inc
xor
insl
les
inc
ficoms
aaa
ret
and
pop
sbb
jg
call
sti
inc
rcll
jno
dec
subb
sub
pop
dec
inc
jnp
push
decl
push
inc
outsb
pop
push
dec
pop
cmp
push
pop
aad
clc
dec
nop
inc
inc
pusha
push
pusha
insl
outsb
gs
mov
jns
imul
pop
cmp
in
jno
jbe
arpl
push
mov
mov
xchg
cmp
mov
jle
jno
push
jg
dec
fildll
push
xor
icebp
or
xor
pop
clc
jns
cld
pushl
push
xchg
jp
push
inc
dec
mov
pop
je
jg
inc
and
push
jno
push
ja
push
push
orb
dec
push
pop
dec
sub
inc
rolb
js
gs
adc
sbb
adcb
jbe
cmp
pushf
ds
jg
jb
dec
adc
push
pop
jnp
imul
add
jmp
mov
xchg
add
mov
ja
or
dec
cmp
leave
ljmp
pop
clc
inc
ja
rcrb
test
fwait
dec
stos
call
jle
imul
dec
fdivl
pcmpgtb
incl
push
and
cmp
pop
fnstenv
push
mov
jno
push
jo,pt
outsl
aas
dec
in
xor
jnp
push
ja
inc
inc
pop
xor
and
mov
lock
dec
arpl
jge
inc
pop
pop
push
inc
jbe
jle
jg
jl
mov
daa
fsubl
jo
push
ret
subb
loope
shll
push
mov
push
jl
ja
inc
stos
mov
mov
inc
push
pop
inc
dec
inc
clc
outsl
xchg
push
inc
push
arpl
cmp
push
ja
sar
sub
jle
data16
sti
inc
stc
jge
or
jb
add
out
push
movsl
pop
popf
jp
cmp
add
test
rcrl
fimull
outsl
or
jae
inc
imul
jl
jp
jg
inc
loopne
stc
pop
mov
jae
adc
inc
add
mov
test
lods
mov
popl
push
jl
push
jo
add
pop
or
pushl
jl
imul
pusha
mov
outsl
dec
pop
inc
dec
add
jg
push
mov
pop
pop
inc
insl
or
pop
sbb
jae
jo
ja
dec
pusha
pop
adc
jo
dec
test
outsl
js
cmp
sbb
dec
stc
inc
jmp
mov
dec
jns
add
jp
dec
push
ret
cmpb
je
inc
jge
bound
push
sub
lcall
jg
icebp
imul
andl
push
add
lock
jns
jle
imul
lcall
jno
jbe
inc
and
jp
jge
pop
insl
test
jo
inc
dec
bound
inc
jns
dec
push
lcall
lcall
inc
cmp
add
inc
fidivl
jo
popa
popa
sub
push
sbb
popa
push
jno
push
inc
cmpl
js
pop
das
sub
inc
pushl
jns
push
mov
pop
roll
pusha
add
mov
dec
and
jns
xchg
dec
rcrl
inc
sbb
fnsave
dec
data16
mov
bound
outsb
jge
inc
sbb
lcall
lcall
mov
in
dec
lahf
pop
andb
inc
jo
dec
push
ljmp
inc
jbe
cmpsl
push
mov
outsl
test
aaa
jl
push
push
loope
fistpll
je
pop
xchg
gs
andb
push
push
jg
clc
push
pop
pop
inc
push
idivb
pop
int
test
inc
sbb
jne
pop
dec
pop
sbb
push
mov
dec
jp
cs
pop
imul
push
pop
std
push
or
jmp
int
cld
jge
jle
dec
push
addr16
fnstenv
lea
incl
bound
call
and
inc
andb
into
pusha
subl
fsubrs
mov
cld
popa
cmp
push
outsb
scas
outsb
pusha
dec
and
push
cmp
mov
push
pop
pusha
inc
test
jecxz
lcall
movsb
push
sbbl
mov
jae
inc
pushw
leave
incb
into
jo
outsl
cli
push
jge
jbe
inc
pop
pushl
stos
pop
ja
pop
adc
push
maxps
inc
sub
bound
lcall
push
daa
dec
or
pop
in
std
je
dec
lock
mov
add
js
push
mov
mov
sbb
jle
insl
incl
cld
sbb
insl
mov
inc
jg
push
mov
sbb
pop
leave
outsl
mov
sub
push
cmp
add
mov
mov
push
sub
sbb
rcrb
js
inc
lcall
mov
xorl
pop
inc
dec
or
ds
adc
sub
fnstcw
popa
mov
push
mov
imul
pushl
sbb
push
int3
bound
je
bound
push
cmpsb
jg
jnp
dec
inc
dec
jbe
cwtl
mov
imul
add
pop
xchg
loopne
mov
jl
push
inc
mov
jge
mov
fs
imul
fdivl
inc
inc
jg
fs
sub
data16
inc
xchg
jno
add
cmp
sbb
jae
push
aas
dec
sbb
sub
jg
rorb
cltd
inc
ja
bound
jnp
xor
fs
mov
jg
incl
inc
in
jbe
outsl
mov
sbb
push
out
std
insl
in
dec
leave
je
call
sahf
mov
push
dec
cmpsb
pop
xchg
bound
dec
jno
dec
dec
pop
cmp
xor
jno
arpl
push
mov
jne
or
imul
dec
roll
jbe
pop
pushf
addr16
push
jle
pop
jg
lock
dec
iret
inc
rcrb
outsl
inc
imul
jp
sbbl
jmp
jp
jno
pop
mov
ja
push
xor
dec
out
fcoms
push
bound
push
jns
jmp
push
fs
addr16
jbe
ja
je
inc
aas
push
outsb
in
fstps
popa
jecxz
loop
popf
imul
pop
mov
cmp
xor
popa
cli
in
insl
mov
imul
dec
mov
movsb
push
dec
ljmp
push
dec
bound
insl
out
dec
mov
inc
sub
cmp
fbstp
cmp
jns
pop
call
pop
xchg
inc
xchg
dec
xchg
pop
mov
mov
shrl
pop
add
sub
fwait
sahf
insb
nop
jnp
jo
inc
in
pop
hlt
cmpb
sub
inc
fisttpll
mov
xor
push
add
pop
jl
aaa
push
adc
push
daa
push
cmp
das
mov
pop
jae
jbe
push
adc
or
jne
jp
inc
mov
outsl
bound
push
testb
lret
pop
les
ja
hlt
decl
push
pop
sub
dec
call
je
jo
pop
ljmp
fdivl
push
imul
out
mov
fwait
xchg
js
dec
inc
and
inc
shll
mov
mov
xchg
ljmp
inc
push
cld
shlb
push
repz
rolb
dec
xchg
outsb
fistps
cmpsb
outsb
mov
pop
js
pusha
pusha
dec
push
or
jns
insb
xchg
pop
sub
pushl
lret
arpl
ja
insb
mov
mov
dec
mov
ljmp
and
add
loopnew
mov
insl
js
jb
pusha
push
insb
inc
imul
sar
call
js
inc
and
jns
push
add
or
lods
movsl
push
adc
int
inc
jae
pop
ja
jmp
inc
fldenv
ja
jbe
jae
dec
sahf
dec
addr16
gs
push
jo
dec
sbb
push
popa
jl
xchg
cli
ljmp
xor
pop
cs
dec
insl
jae
cmc
pop
shll
jae
jne
lcall
add
aas
push
out
inc
out
out
add
jno
jg
jmp
pop
mov
jb
pop
pop
arpl
es
sub
pop
and
add
pushl
dec
push
je
push
in
pop
dec
jmp
push
rolb
out
jbe
adc
pop
dec
aam
fcompl
push
mov
push
js
pusha
ficoms
pop
xchg
jne
je
ja
inc
inc
push
mov
jp
pop
mov
push
loope
insb
or
insl
lret
jp
dec
je
lcall
aam
sub
push
data16
adc
out
and
in
dec
mov
add
inc
mov
ds
push
pop
jnp
jb
js
push
data16
mov
dec
lcall
jb
inc
int
lds
bound
pusha
mov
jg
je
inc
push
cmp
jne
jae
inc
cld
std
dec
imul
mov
inc
scas
inc
xchg
pusha
mov
push
mov
je
inc
dec
bound
pop
lcall
in
pop
inc
sub
pop
add
dec
add
push
repz
push
popa
in
push
les
push
mulb
ret
popf
incl
push
adc
popa
cmp
inc
pop
jg
jl
jp
inc
ss
xor
jge
inc
ljmp
adc
pop
push
imull
movb
fistps
jns
inc
shll
lret
inc
ret
jne
inc
call
jb
pop
rorb
cmpsb
inc
stos
ja
jl
arpl
inc
mov
push
mov
decl
push
mov
push
jge
push
je
push
dec
decl
imul
jg
push
ljmp
xchg
lret
adc
dec
add
inc
or
inc
or
ja
jg
gs
pop
ficoms
je
out
rcrb
jg
jle
pop
hlt
aad
faddl
jg
push
in
inc
xlat
je
push
outsb
mov
adc
mov
inc
dec
jo
ljmp
inc
inc
inc
arpl
jne
je
jno
dec
adc
jle
or
js
inc
std
jno
pop
lret
ja
inc
testl
inc
lcall
push
inc
inc
cmp
ljmp
idivb
dec
jp
imul
cmp
jb
adc
inc
loope
decl
jp
push
aam
ljmp
inc
lea
push
pushf
jle
pop
xchg
inc
test
add
mov
jge
jbe
pop
inc
pop
jge
pushl
push
or
dec
and
push
sbb
xor
shll
imul
in
push
fnstenv
jge
jl
ljmp
addr16
arpl
jne
inc
insb
arpl
decl
pop
imul
inc
jae
inc
cmp
outsb
sub
push
or
je
incl
inc
push
insb
adc
packsswb
arpl
inc
adc
pop
ds
xor
jmp
aad
out
cli
inc
push
fistpll
ja
jge
pop
out
rcrb
sti
dec
leave
pop
clc
cmp
outsl
mov
xor
outsl
test
jae
inc
cmp
cmp
andl
mov
push
inc
cmpsb
pop
insl
dec
push
push
pop
push
inc
bound
data16
rorb
push
inc
pop
jne
lcall
pop
jnp
pop
jo
dec
push
pop
sub
jge
pop
sub
insl
sub
jno
fs
push
lock
fdivrl
insl
jbe
sbb
insb
negb
dec
cli
jb
jl
push
adcl
mov
pop
out
ss
jae
dec
push
arpl
je
dec
xor
jg
lcall
pusha
sti
pusha
dec
lock
out
push
clc
jo
dec
lahf
insl
nop
dec
mov
jl
dec
xchg
jnp
push
push
add
outsb
imul
lea
lock
push
inc
xor
outsb
rcr
call
jl
pushl
pop
jbe
pop
mov
jbe
arpl
jle
test
push
lods
addr16
jp
push
outsb
or
jg
incl
cld
cmp
insb
add
out
cmc
push
std
dec
in
jne
pop
mov
jne
ljmp
arpl
imul
dec
add
insl
and
push
sbb
or
js
jmp
dec
scas
jns
pop
mov
pop
scas
inc
mov
dec
pop
jns
clc
lcall
jno
insb
pop
dec
dec
outsb
outsb
lcall
inc
sub
imul
in
mov
std
jl
push
jp
dec
cltd
pop
mov
cmc
add
outsb
pop
inc
add
ljmp
or
inc
sub
or
rcrb
insb
repnz
scas
jge
imul
mov
jne
lret
fcomip
add
adc
cmp
leave
dec
shll
or
jne
fstpl
pop
lea
push
dec
pop
inc
dec
xor
push
push
pop
xlat
pop
shlb
jo
push
test
incl
bound
sbb
popa
xor
push
shrl
push
jne
jp
sbb
lock
imul
repnz
xor
inc
mov
gs
popa
mov
push
jae
dec
data16
popa
add
inc
ss
ret
push
repz
lcall
mov
pop
mov
inc
dec
dec
gs
pop
ja
inc
pop
outsl
xor
pop
das
stos
mov
dec
add
jae
inc
out
push
hlt
jb
decl
stos
insb
insl
push
je
jne
ss
sub
ljmp
adc
push
enter
int
pop
out
pop
out
mov
sbbb
sbb
ljmp
pop
push
ss
jle
lcall
pop
pop
or
bound
dec
or
ss
adc
dec
jb,pn
jl
push
out
push
xchg
pop
cmpsb
imul
ja
jne
andb
arpl
je
dec
or
jg
add
das
cli
jecxz
decb
xchg
push
mov
outsb
adc
dec
add
mov
js
push
mov
dec
xchg
jge
sti
fwait
push
pushf
push
dec
and
popa
add
outsl
int
fldcw
lcall
cld
jbe
pop
cltd
outsb
pushf
lcall
insl
jle
jns
dec
aaa
or
jb
ljmp
xchg
js
dec
inc
push
imul
inc
adc
dec
add
dec
in
shlb
fcos
imul
pop
test
mov
adc
sbb
push
les
jno
dec
ljmp
jo
pop
jno
pop
push
xor
inc
in
fisttps
dec
lcall
mov
jb
lock
jg
jno
dec
outsb
dec
gs
sub
js
inc
jmp
ja
addr16
inc
push
sbb
mov
inc
mov
outsl
lcall
dec
jl
jnp
inc
jg
push
jns
dec
push
jnp
imul
arpl
fcoml
cli
outsl
pop
jb
xlat
pop
mov
mov
xchg
decl
mov
inc
pop
dec
inc
push
js
jle
pop
inc
sbb
je
loope
jle
pop
xor
ds
sbb
jle
pop
int
mov
pop
ret
pop
rorb
jno
pop
mov
icebp
dec
push
jne
jbe
pusha
xor
call
jns
dec
lds
arpl
jne
push
shrl
mov
lcall
mov
push
mov
inc
mov
dec
outsl
pop
insb
dec
arpl
pusha
incl
outsb
outsl
cmpb
das
pusha
cmp
inc
xor
pop
push
dec
adc
pushl
xor
inc
or
jp
push
aas
jge
je
jle
pop
push
loopne
ret
inc
fisttpl
pop
fdivs
out
inc
lds
jmp
dec
loope
fnstsw
jo
inc
mov
jno
ja
inc
test
fisubrl
push
lods
pop
mov
jbe
out
in
lock
jg
call
addl
mov
fidivs
dec
jno
pop
add
cmp
and
insb
lods
pop
cwtl
jbe
dec
jno
aaa
jge
shl
push
pop
xor
je
pop
pop
inc
push
mov
lcall
call
inc
pop
jge
jle
js
inc
xchg
push
pushf
push
fadd
outsl
mov
inc
jg
jne
and
add
inc
or
add
les
adc
std
inc
and
adc
popa
ret
pop
or
js
cmc
dec
retw
pop
insb
or
and
adc
in
sbb
cmp
xor
or
and
xor
pop
sbb
sub
addps
ss
daa
add
ljmp
adc
jbe
imul
decl
push
cmc
xor
aad
push
outsl
into
adc
lock
outsl
repnz
lds
xor
cmp
sti
ljmp
clc
daa
inc
inc
sti
adc
ret
sub
jg
sub
fiaddl
fs
and
mov
ds
inc
incl
adc
inc
outsb
cs
jge
call
decl
or
out
jge
into
aas
pop
pop
ljmp
ja
pop
push
lret
data16
jbe
pushl
jns
call
pop
pop
jnp
sbb
cmp
das
inc
shrl
arpl
or
outsl
sub
decb
dec
push
or
mov
mov
incl
pop
jo
inc
push
mov
out
add
push
xor
orl
js
push
jne
jle
in
jae
jns
xchg
aas
scas
pop
push
pusha
jne
pop
pusha
inc
insl
inc
arpl
jnp
fs
xchg
dec
test
in
push
sub
xchg
or
bound
sub
add
xor
int
movsl
mov
pop
pop
pushf
push
jge
lock
jo
jge
adc
add
aad
push
andl
pusha
inc
push
outsb
xchg
inc
decb
cmp
add
jmp
jne
insb
scas
sbb
sub
pop
lds
mov
add
outsl
outsb
out
lcall
jns
imul
and
outsl
push
push
xor
stos
or
loope
call
mov
fisttpl
and
aaa
sub
scas
cmpsl
incl
xchg
cmp
ljmp
out
mov
cli
adc
inc
cmp
mov
or
mov
scas
xchg
xor
xor
push
pop
repz
das
push
cs
outsl
jne
std
lods
lret
lfs
or
call
aas
pop
std
mov
add
and
je
ret
or
push
jmp
movsl
sbb
cmp
dec
pop
xchg
cwtl
fldl
shlb
stos
inc
bound
aaa
call
sbb
cwtl
popf
xchg
cmp
insl
ds
push
push
cmp
push
in
mov
out
lret
add
xor
std
lcall
jecxz
imul
dec
push
popa
sbb
js
jmp
incl
arpl
push
xor
cmp
xor
imul
pop
lcall
push
shrb
xor
mov
ret
cmp
cmp
jge
push
push
fwait
push
arpl
lcall
stos
push
mov
jo
pop
cltd
lods
inc
jp
loop
and
cmp
and
out
cmp
jnp
popa
lret
push
xlat
movsl
dec
xchg
mov
inc
jae
and
scas
xor
cmc
xchg
mov
dec
loope
xchg
shrl
ds
xchg
insl
cld
cld
jmp
repz
negb
mov
rorl
dec
mov
repnz
jl
sbb
jmp
cmp
popa
mov
cmpsb
stos
adc
cmp
dec
jge
add
pusha
jae
mov
push
cltd
push
mov
pop
clc
inc
enter
mov
jbe
or
adc
jnp
or
nop
sbb
inc
cli
popa
sub
ds
push
sarb
jp
pop
and
fs
adc
in
dec
add
push
jge
ja
sub
add
ljmp
cmp
dec
jle
or
inc
or
sbb
pusha
or
jae
mov
add
ljmp
inc
xchg
and
xor
fdivrs
arpl
gs
and
adc
push
xchg
pop
inc
cmp
lcall
cs
pop
rorb
and
add
inc
and
jp
rcrb
or
dec
pushl
pop
data16
pushl
sub
inc
out
pop
sub
sbb
adc
pop
fs
or
mov
or
gs
cmp
dec
jp
jno
xor
and
lods
pop
incl
inc
fwait
add
push
cmp
in
jno
push
and
pop
dec
and
push
insb
clc
pushl
pop
ret
add
lds
jno
pusha
out
xor
aas
mov
sbb
mov
pop
faddl
int
push
pcmpeqb
data16
test
lcall
jns
sbb
movsl
xor
cmpsl
fwait
inc
insl
adc
sahf
xchg
and
jno
pop
mov
dec
pushl
test
jo
cli
mov
xor
fsubl
in
push
test
ljmp
xchg
mov
imul
addl
xor
pop
inc
or
movsb
notl
xchg
in
imul
test
pushl
int3
fwait
and
push
in
inc
xchg
jle
lcall
xchg
mov
call
sub
jne
jae
mov
inc
stc
bound
fwait
mov
fwait
out
and
inc
incb
push
pop
dec
pop
push
cmp
xor
mov
imul
jg
ja
push
mov
mov
jp
rol
pop
and
inc
popa
lds
jno
outsl
pusha
loopne
pushl
mov
xchg
cwtl
dec
cmp
aad
jo
dec
and
pop
arpl
sub
scas
xor
lret
xchg
scas
lcall
push
test
inc
ds
sub
or
mov
cwtl
mov
dec
sub
xchg
inc
setb
pop
pop
inc
lods
xchg
outsl
outsb
ss
arpl
incl
test
pop
scas
mov
decb
in
adc
hlt
das
mov
sbb
or
mov
pop
fstl
dec
inc
aaa
popa
clc
inc
sbb
nop
and
mov
mov
incl
dec
mov
inc
js
jbe
cld
xor
jne
bound
mov
test
dec
out
xor
mov
pushf
fstl
outsl
lcall
subb
dec
dec
clc
add
pop
lahf
mov
xchg
fwait
mov
pushl
mov
jg
push
and
cli
scas
jmp
sahf
or
fsubrs
mov
ljmp
ficomps
inc
push
inc
pushl
jbe
sub
fists
pushf
cmp
jmp
fiaddl
nop
pusha
sarb
sub
ljmp
or
int3
xchg
add
insb
push
sbb
sbb
jbe
scas
sbb
jmp
add
std
incl
mov
js
movsw
xor
sub
ljmp
insb
sbb
xchg
stos
add
mov
shll
push
and
push
push
dec
push
inc
inc
xchg
sbb
bound
mov
mov
cld
pushl
mov
adc
shrl
decl
pop
dec
mov
jno
jle
inc
fs
and
push
pushl
jns
fs
jne
add
add
stos
sub
pop
ds
insb
inc
pop
je
sar
decl
pop
dec
dec
and
sub
pop
xchg
inc
insb
inc
loopne
popa
aam
incl
sub
int
imul
xchg
push
fs
sbb
das
mov
xchg
xor
and
jnp
add
dec
outsl
and
sub
add
loope
cmc
decl
jb
xor
imul
sbb
movsl
mov
xchg
gs
addr16
ds
fwait
jle
sub
aam
or
dec
fs
push
cmp
imul
ljmp
repz
add
and
subl
cmp
or
arpl
push
adc
sbb
mov
js
ja
jge
pusha
xchg
popa
lock
jmp
jo
push
xlat
mov
repz
lcall
or
dec
dec
leave
mov
mov
hlt
in
lods
sub
mov
scas
lahf
push
mov
enter
sbb
dec
lcall
mov
das
lcall
movsl
pop
add
loope
dec
dec
sbb
inc
push
add
dec
dec
outsl
clc
stos
mov
cmp
fadds
jl
cmp
pop
dec
inc
pop
cld
push
xor
gs
jmp
aam
ljmp
ss
mov
mov
fldl
lea
adc
jae
sbb
pop
dec
dec
xor
je
cmovne
xchg
in
mov
push
stos
and
ljmp
mov
dec
bound
jecxz
xchg
mov
adc
cmp
dec
xchg
ja
cmpsb
pusha
mov
add
scas
sub
adc
sub
data16
std
call
jne
mov
mov
popf
pushf
cltd
add
movsb
fs
inc
pop
pop
cli
ljmp
aaa
loop
dec
or
andb
mov
pushf
mov
mov
das
cld
xor
imul
mov
mov
mov
incl
xor
add
data16
rorl
lret
stos
cmpsb
call
std
mov
cmp
pop
les
push
inc
mov
mov
outsb
inc
jp
sub
decl
xchg
dec
inc
gs
or
leave
fwait
mov
mov
inc
insl
enter
mov
addr16
and
and
lret
test
pop
pop
ja
repnz
pop
sub
ljmp
arpl
test
and
insb
push
clc
inc
lret
sbb
xlat
dec
sub
jbe
fs
fnstsw
pushl
jb
fiadds
inc
add
gs
mov
push
addr16
jmp
decb
sub
jmp
and
and
bound
sti
jno
fdivl
call
cmp
scas
iret
mov
das
xchg
adc
ds
push
je
push
cmpsb
cli
imul
loope
sahf
xor
incl
add
out
mov
jg
jle
jle
dec
jmp
push
fildll
mov
andps
fs
decl
sbb
icebp
loopne
mov
imul
mov
mov
sahf
mov
bound
pop
adc
or
xor
inc
inc
sub
jle
sbb
decb
lock
or
das
arpl
jbe
or
mov
jl
push
xchg
mov
je
je
push
inc
insl
push
cltd
jbe
dec
bound
add
pusha
incb
outsb
cmpsl
sbb
decl
mov
xchg
addr16
out
hlt
stc
mov
pushf
mov
fbstp
std
cwtl
popf
cmp
push
mov
test
loop
jg
and
mov
sbb
mov
mov
dec
pushw
outsl
decl
mov
addr16
test
sub
jno
push
push
dec
inc
mov
fs
fnsave
fstl
mov
sbb
iret
mov
cmp
push
jne
mov
push
aad
popf
ljmp
push
xor
push
ds
adc
test
test
mov
pop
lock
decl
test
push
cmp
lret
xchg
loopne
aad
js
pop
incb
out
scas
push
ret
jne
scas
mov
mov
jae
ja
jbe
cwtl
pop
adc
and
xchg
pop
icebp
mov
cmp
stos
ja
lock
cmp
cld
incl
inc
mov
test
pop
push
push
pop
cmp
ss
jns
sub
pop
lock
sub
add
adc
imul
pushl
fwait
scas
insl
cmp
sbb
pusha
je
adc
bound
sbb
pop
push
cmp
fcomps
lea
cmp
filds
jmp
add
pop
xchg
insb
mov
movd
cld
jg
pop
je
inc
dec
fs
cmp
inc
js
adc
stos
pop
loopne
cmpsb
lcall
pop
pop
add
aas
xor
ds
cli
jmp
outsb
ds
es
test
pusha
dec
mov
pop
or
das
push
popa
add
cmp
stos
movsb
xchg
pop
inc
outsl
into
dec
xchg
dec
fadds
xchg
lret
scas
xor
mov
mov
mov
ja
ss
inc
sbb
lcall
mov
xchg
add
jo
outsl
nop
js
lcall
pop
gs
fistl
mov
fnstenv
sbb
jl
mov
ja
inc
cld
jg
ds
adc
dec
xchg
psubb
mov
aas
stos
scas
push
insl
pop
out
shll
xchg
and
xor
add
das
ret
xchg
mov
cmp
je
lds
mov
outsl
clc
dec
clc
xor
mov
xor
fs
loopne
mov
ss
and
pop
std
lcall
jmp
pop
cmp
inc
mov
fstps
scas
ljmp
scas
cmp
mov
mov
lcall
lcall
push
daa
daa
pop
cld
and
jne
movsb
cmp
mov
add
lcall
mov
xor
and
fucomi
xchg
jne
lcall
inc
pusha
cmpsl
cmpsl
sbb
xor
inc
cltd
sub
sub
sti
lcall
sub
jne
icebp
mov
enter
jmp
dec
icebp
mov
cmp
aad
jo
jmp
push
out
push
imul
int
decb
adc
adc
jmp
and
call
xlat
adc
xchg
mov
or
lods
in
aam
cltd
pushf
xor
mov
jae
stos
faddl
outsl
or
mov
rorl
popa
inc
inc
dec
dec
ret
hlt
test
fwait
xor
jl
jmp
call
cli
cmpsl
xchg
cwtl
cmp
xor
aad
test
fwait
pop
aaa
or
leave
mov
mov
orps
outsl
popa
insb
inc
or
mov
movsl
ret
xchg
mov
lods
push
cmp
jo
cmp
sbb
ss
jg
gs
cs
xchg
mov
loopne
xchg
decl
sahf
ret
fnsave
bound
test
lea
mov
push
xchg
lods
xor
mov
jo
push
outsl
sbb
sbb
mov
inc
adc
pop
mov
sahf
inc
push
pusha
dec
lods
and
cmp
or
test
lcall
cmpsl
dec
scas
nop
xchg
inc
dec
push
loop
rep
mov
inc
mov
or
pop
incl
xlat
popf
xchg
lods
add
mov
test
mov
arpl
push
mov
sub
cmovs
xchg
sub
pop
mov
hlt
jp
fs
dec
icebp
scas
scas
clc
das
shrb
jp
sbb
jle
jno
jbe
inc
dec
cmp
pop
lock
mov
mov
cld
push
xchg
or
es
inc
add
clc
ja
jle
mov
push
push
inc
cli
lcall
cmp
push
gs
sbb
jne,pt
mov
cltd
jmp
scas
nop
lea
pushl
imul
mov
inc
jno
idivb
or
jnp
xor
jge
hlt
xor
add
push
and
lcall
mov
mov
mov
xchg
mov
mov
jmp
xchg
jae
xor
sub
mov
adc
pop
add
arpl
xor
aaa
mov
movsl
and
mov
popa
and
inc
push
je
mov
arpl
push
adc
in
dec
add
or
sbb
out
inc
dec
aas
dec
add
or
push
gs
cltd
jle
or
ljmpw
sbbb
cmp
mov
mov
mov
or
incb
sub
and
add
xchg
add
xchg
repz
lock
fldt
incb
xor
sub
test
jl
inc
cld
fst
pop
inc
cmp
jle
fdivrp
or
pop
lds
push
jns
outsl
inc
aam
cmpsl
lods
xor
loopne
std
dec
jmp
stos
pop
jp
pop
icebp
ret
shll
cltd
mov
aad
mov
push
aaa
cwtl
pop
sbb
dec
insb
jns
lea
call
das
sbb
and
je
mov
rorb
xchg
mov
add
xor
jg
add
xor
and
push
and
incl
mov
jmp
lcall
dec
insl
rcll
sti
fwait
xchg
cmpsl
movsb
push
mov
enter
xchg
xchg
push
mov
dec
dec
dec
jmp
xchg
xor
mov
outsl
sbb
dec
inc
test
jns
push
pop
test
mov
adc
inc
lahf
mov
ret
mov
jg
mov
test
xchg
clc
or
cli
decl
imul
mov
imul
test
jmp
or
mov
loop
xchg
add
jb
dec
out
mov
call
mov
lds
mov
mov
orb
sbb
jbe
mov
mov
xor
cli
mov
addb
mov
adc
daa
faddl
dec
insb
push
jp
cmp
xchg
stc
mov
sbb
imul
mov
dec
mov
call
xchg
push
push
scas
mov
xlat
xchg
nop
cmp
jg
lock
daa
bound
push
and
or
popf
jl
outsb
push
pusha
lods
clc
inc
lds
jp
aad
clc
cmp
xor
jge
push
pop
test
clc
aaa
incb
incl
sbb
addr16
outsb
dec
fs
nop
adc
test
lods
push
push
add
pop
lock
xor
ljmp
pusha
jb
test
jno
imul
push
jge
and
and
in
gs
jle
inc
data16
repnz
decl
push
fwait
fwait
mov
out
xchg
adc
mov
cld
ljmp
pop
push
call
in
jb
mov
outsl
dec
bound
cmp
ljmp
mov
bnd
dec
outsl
ficompl
mov
lea
pop
cmp
mov
mov
out
mov
push
addr16
jge
aam
out
inc
ret
incb
jmp
pop
inc
int3
xchg
negb
addr16
mov
ja
mov
mov
cli
xor
pop
hlt
call
fcom
movsl
jmp
cltd
ret
daa
jo
push
enter
mov
dec
add
pop
insl
test
adc
jg
iret
addr16
push
push
das
cmp
push
xor
add
dec
cmp
sbb
popa
mov
or
sub
adc
jo
pop
inc
mov
int3
push
adc
cs
adc
mov
inc
jns
lahf
dec
push
loope
dec
pop
xor
pop
and
xchg
dec
jns
pop
inc
and
incb
jg
incl
sbb
push
xchg
decb
jae
xchg
test
loop
pop
mov
mov
aaa
jb
leave
dec
lahf
mov
add
out
add
pop
jmp
inc
loope
addr16
mov
loopne
popf
sbb
dec
fmuls
sbb
mov
adc
ljmp
clc
jae
mov
icebp
notl
jne
popa
inc
popa
es
sbb
jg
cmp
cld
icebp
subl
cld
dec
push
dec
in
icebp
pushl
jg
out
movsb
xchg
cmpsb
jnp
push
call
fwait
push
or
add
pop
inc
jp
add
mov
test
mov
pop
jne
jmp
aad
sbb
xor
cmp
cmpsb
push
loopne
das
clc
incl
cmpsl
imul
inc
push
inc
sbb
pop
andl
pop
mov
std
adc
push
cmp
arpl
adc
jp
pushl
fsubs
jnp
sbb
jo
mov
mov
shll
fwait
es
inc
lds
andl
xor
pop
xchg
and
and
xchg
pop
cmp
cmc
call
inc
push
dec
adc
cmpsb
and
dec
sub
ja
insb
mov
and
inc
pop
mov
fs
inc
mov
jle
mov
and
call
mov
mov
adcb
clc
mov
mov
and
test
mov
cmp
lock
lea
inc
pop
lock
std
pushl
out
aam
jbe
xchg
inc
popa
inc
jle
rcl
xchg
cwtl
and
shl
cmc
fistps
out
in
xchg
mov
hlt
cmc
xorl
cmp
pop
mov
dec
pop
js
add
sbb
lahf
mov
dec
xor
push
lock
nop
and
data16
mov
mov
in
fwait
pushf
mov
dec
loope
daa
jmp
push
shrl
fs
incl
cmp
pop
mov
lcall
enter
dec
jb
or
jp
iret
jo
fsubs
fwait
xor
jmp
dec
jge
fs
xlat
mov
bound
cmpsb
push
cmp
xor
fdivs
mov
cmp
call
in
pusha
jae
pop
fwait
mov
xchg
mov
lret
inc
inc
pop
fs
dec
je
or
jg
mov
aaa
jnp
es
outsb
mov
xchg
xchg
lea
add
pop
lock
jmp
mov
mov
dec
loop
mov
jne
inc
jno
adc
mulb
dec
mov
jg
pop
push
sahf
sahf
jge
cmp
jecxz
pop
push
jmp
jne
push
inc
mov
jno
push
js
pop
out
pop
push
and
mov
stc
mov
lock
in
ljmp
mov
mov
push
scas
xor
mov
call
mov
cmp
pop
fisubrs
inc
push
cli
mov
push
arpl
arpl
insl
fucomip
xchg
xchg
stos
scas
xor
loopne
into
sbb
adc
decl
je
pop
lret
xlat
push
je
dec
dec
dec
out
mov
mov
pop
sbb
je
popa
add
add
adc
out
mov
gs
xchg
mov
dec
das
decb
in
mov
jb
test
fwait
mov
cmc
subb
xor
push
sub
sbb
or
jg
das
lods
xchg
xor
mov
scas
nop
adc
pop
orl
mov
outsb
pop
dec
or
cld
in
loopne
push
or
inc
pop
inc
scas
push
mov
mov
jge
lfs
adc
fwait
inc
mov
mov
outsb
loopne
insb
out
fidivrs
cmp
ljmp
push
pop
inc
mov
jno
inc
rcrb
inc
add
fcoms
mov
lcall
dec
out
fwait
daa
pextrw
ja
fadds
pop
add
and
aas
pop
clc
lock
rorl
jne
sbb
decl
pop
mov
pushl
arpl
gs
inc
adc
repz
mov
paddd
in
pop
add
xorb
and
addr16
ljmp
pop
jmp
pop
jmp
out
xchg
sbb
cmp
push
push
divl
xchg
add
sub
pop
add
xchg
pop
or
in
pusha
jbe,pn
shrb
push
sti
inc
insl
mov
cli
lcall
or
or
jecxz
jno
stos
jbe
aam
lcall
mov
push
movsb
pusha
lds
mov
push
inc
int3
fwait
aaa
dec
mov
add
push
jne
inc
jns
int3
mov
ljmp
aam
inc
mov
aaa
test
pushf
sub
dec
outsl
fsubr
mov
lods
mov
cmp
out
js
cmpsl
cmpsl
add
movsl
stos
push
adc
das
xchg
dec
sbb
hlt
rcll
das
shl
pop
mov
bound
repnz
mov
lock
cmpsb
leave
decl
incb
mov
inc
add
leave
push
push
aad
inc
inc
cmpsl
cmp
imul
rdmsr
je
loope
mov
jl
mov
jmp
cmp
cmp
push
mov
push
push
and
xlat
pop
pop
mov
cltd
sub
mov
int
lcall
scas
mov
icebp
mov
pop
inc
gs
add
gs
incl
push
pop
inc
jbe
xor
jmp
push
inc
jle
push
jl
jo
and
sub
bound
mov
jns
cmp
gs
stc
shll
test
ffreep
inc
movsb
daa
pop
cmp
push
outsl
inc
sbb
int
lcall
push
jae
std
pusha
pop
pop
clc
out
jb
cmp
cwtl
pop
dec
arpl
mov
push
jmp
stos
dec
push
ja
jecxz
lods
xchg
and
jno
xor
ljmp
decl
mov
sub
jb
mov
cmovs
lcall
mov
sbb
inc
sub
cmp
subl
dec
shll
xor
fisubrs
cmp
call
and
cwtl
mov
jns
and
and
xchg
adc
leave
xor
add
popa
push
clc
inc
incb
shrb
inc
xchg
mov
pop
stos
sbb
inc
mov
movsb
jle
ljmp
scas
dec
movsb
mov
je
fcomip
inc
pop
mov
cwtl
push
inc
pop
pop
mov
dec
mov
push
push
jo
jge
xor
inc
or
popa
push
push
lods
inc
mov
mov
daa
jg
andb
push
imul
push
mov
gs
or
call
jns
cmpb
cwtl
xor
jb
jb
push
insl
dec
in
mov
xor
jo
mov
ret
mov
mov
cld
cmpl
inc
cld
stos
lahf
decl
call
push
jg
shrb
arpl
iret
inc
inc
es
stos
or
incl
inc
movsl
mov
pop
cmp
jmp
pushl
jae
adc
bound
ds
and
inc
data16
rorb
inc
add
popa
xchg
mov
incb
loopne
push
mov
mov
loop
jmp
pop
incb
jne
pushl
cs
out
incb
push
sub
jmp
leave
lret
xchg
adc
cmp
fcoml
xor
jg
incl
cwtl
mov
push
pop
pusha
jns
out
je
pushf
scas
inc
outsl
mov
enter
loop
xchg
xchg
sarb
xlat
std
lods
xchg
fists
popf
fsubr
xchg
mov
cli
es
mov
xchg
test
lahf
or
mov
das
cld
mov
push
fs
or
popa
pop
es
push
lahf
inc
loope
decb
fs
push
mov
mov
fdivr
lahf
xor
scas
lret
jmp
pop
jbe
jl
push
loopne
cltd
and
movsl
inc
jmp
inc
push
pop
dec
ret
jno
dec
sbb
jno
stos
adc
scas
mov
cmp
jp
js
jne
nop
cmp
movsl
scas
loop
outsb
stos
mov
scas
in
shrb
roll
dec
addr16
xor
mov
push
add
dec
lea
inc
roll
lods
jg
incb
adc
inc
cmp
mov
and
or
aaa
mov
mov
push
adc
ljmp
mov
xchg
bound
daa
cwtl
das
pop
or
test
cld
mov
cmpsl
xor
imul
mov
jge
pop
add
xor
decb
or
ljmp
push
mov
xchg
adc
jmp
jb
or
cmp
push
je
mov
inc
push
ja
xor
cmp
jbe
pop
nop
les
aad
stos
push
sahf
leave
cmpsb
movsl
fwait
xchg
gs
lods
xchg
popf
push
lahf
test
ljmp
cli
leave
push
jnp
jno
popa
sti
in
mov
cmp
rorb
jmp
orb
fwait
pop
push
xchg
adc
jns
fidivrs
stos
or
cld
adc
iret
fcoml
sarl
out
mov
es
dec
bound
loopne
cld
jg
pusha
iret
icebp
push
mov
add
lret
xchg
sbb
sbb
pop
mov
cld
dec
inc
lcall
xchg
decb
out
daa
jnp
fdivrs
add
stos
xchg
jae
push
mov
incl
inc
fsubp
jo
ss
dec
dec
hlt
xchg
into
stc
call
js
cld
icebp
inc
scas
mov
or
icebp
test
rcr
jmp
pop
dec
popa
into
in
pop
xchg
movsl
xchg
or
nop
adc
int
sub
ljmp
push
ds
repnz
mov
xchg
cwtl
mov
test
lcall
stos
mov
mov
test
pop
sub
decl
icebp
jecxz
adcl
lods
xor
shlb
das
inc
test
mov
jle
jno
push
mov
dec
mov
mov
push
push
mov
int
xchg
xchg
decl
std
and
dec
cmpsl
outsl
sbb
push
jbe
jmp
mov
mov
jg
loopne
sbb
jnp
out
arpl
aad
insl
push
call
lcall
inc
cmp
inc
push
dec
lret
nop
mov
xor
movl
fwait
clc
xchg
lcall
cmp
inc
cltd
negb
test
xchg
sarb
nop
stos
imul
out
popa
in
jg
jmp
xor
and
adc
push
lcall
testl
call
fdivr
mov
sbb
fisubrs
insb
int
xor
outsl
xor
adc
mov
push
filds
aas
cwtl
jbe
fidivrl
xor
lret
std
mov
cmpsb
loop
xor
xchg
outsl
inc
sbb
sahf
clc
scas
lods
cmp
push
ss
call
clc
fnsave
sbb
jns
dec
mov
aam
push
bound
cmp
mov
in
jae
inc
cli
popf
adc
xchg
or
pushf
out
jp
sbb
in
dec
test
inc
adc
pushfw
cltd
stos
sbb
mov
mov
nop
xlat
xchg
je
ret
mov
cltd
xchg
pop
mov
push
jle
mov
stos
test
adc
dec
std
aaa
out
insb
addr16
fdivs
enter
dec
popa
enter
icebp
jp
jecxz
cmp
fscale
pop
or
loop
pusha
test
int3
ficoms
inc
jmp
jo
call
call
clc
add
scas
fidivrl
in
cmc
mov
sbb
fdivl
mov
push
sti
mov
xchg
clc
xchg
loopne
sahf
lahf
sbb
shlb
movsl
cmpsb
xchg
fwait
pushf
cwtl
repnz
incb
dec
das
test
ja
mov
cmpsl
fmull
cmp
mov
outsb
mov
fstl
fs
bound
push
imul
mov
mov
xchg
xor
mov
lret
jae
xor
sbb
pop
nop
adc
xor
jae
or
lcall
clc
leave
ja
stos
lods
xor
dec
and
scas
mov
sbb
push
jg
pushl
je
push
and
je
mov
out
mov
les
mov
sub
call
repnz
pop
push
insl
rcll
das
add
bound
int
jg
in
push
inc
addr16
je
jno
adc
or
pop
cmc
lret
sub
gs
scas
xor
xor
mov
ljmp
mov
xchg
repnz
pop
sub
pop
add
ljmp
add
es
lahf
xchg
mov
out
test
das
push
mov
cmp
scas
call
push
push
es
imul
cld
mov
or
ja
pop
jg
cld
call
daa
mov
adc
scas
or
idiv
push
dec
jp
adc
and
add
mov
cmp
cltd
movsb
xchg
pushl
movsb
push
pop
add
sub
pop
inc
dec
add
clc
stos
in
push
pop
mov
mov
gs
cwtl
movsb
cltd
sbb
xchg
lcall
jb
and
or
mov
xchg
cmpsb
jmp
inc
addr16
or
rcrb
icebp
xchg
stos
outsl
inc
pushl
fdivr
stos
dec
and
popa
call
jmp
scas
inc
jne
dec
mov
daa
es
bsf
cmpsl
sbb
adc
mov
mov
loopne
jle
popf
or
cmp
int
call
pusha
xor
mov
inc
lcall
lahf
das
mov
fsubrl
sbb
add
mov
mov
jg
je
inc
test
xchg
push
push
push
pop
mov
call
inc
dec
cmp
sub
aad
dec
dec
pushaw
cmpsb
sub
sbb
dec
je
dec
lock
sar
insl
pop
mov
pop
pop
js
dec
xchg
pushl
incb
enter
mov
fldl
fbld
xchg
mov
add
es
push
inc
test
popf
sahf
mov
xor
cmp
inc
fxch
push
inc
cli
jl
gs
jle
lock
adc
jl
cmp
mov
mov
das
loop
dec
mov
inc
xchg
leave
repz
jp
cmp
mov
mov
jg
pushf
mov
gs
sub
dec
mov
mov
loopne
adc
cmp
aaa
std
decl
dec
mov
lret
sub
mov
sub
and
decb
lock
pop
lcall
sbb
fdivrs
pop
jb
ja
dec
cltd
mov
data16
jl
mov
pop
or
push
pop
mov
dec
jbe
mov
mov
and
pop
sub
insl
inc
mov
xchg
and
jb
jne
cmpsb
std
mov
sbb
and
mov
push
pushf
push
fwait
test
dec
pop
iret
jno
loope
mov
xor
enter
cmp
movsl
bound
add
test
pop
or
test
out
sbb
push
sbb
test
push
imul
add
push
xchg
rcrl
incb
xchg
mov
jb
cmpsl
xor
dec
pop
cmc
pushl
ds
sbb
cmpsb
popf
mov
cmp
aaa
cld
incl
mov
sbb
lods
pop
jbe
ljmp
pop
test
scas
or
xchg
push
jg
loope
arpl
ret
inc
or
push
pop
bound
std
inc
decl
and
enter
jae
ds
incb
mov
mov
loopne
jno
cli
mov
push
mov
jg
push
stos
pop
cs
gs
pop
je
lds
int3
mov
cld
dec
lahf
stos
mov
lcall
sub
or
pop
and
and
inc
push
loope
and
sbb
jp
imul
jnp
test
push
mov
nop
jmp
push
or
jno
or
push
jge
jbe
xchg
test
and
icebp
push
pop
loopne
bound
stos
arpl
ja
decl
jb
dec
push
inc
mov
mov
mov
decl
sbb
fdivrp
xchg
std
push
jns
mov
bound
mov
ss
push
out
push
xchg
dec
jge
scas
addr16
and
xchg
lret
jae
and
decl
and
cmp
and
cmp
mov
clc
nop
inc
push
daa
push
cmp
xchg
imulb
in
jbe
sub
adc
xchg
call
test
push
jge
outsl
mov
sbb
incl
sbb
xor
inc
sarl
sbb
adc
xor
inc
nop
sbb
xchg
je
jge
mov
xchg
xchg
lahf
push
mov
enter
sbb
aaa
scas
cmp
lahf
sbb
ret
and
movsb
in
fbstp
shll
stos
xor
dec
popa
push
inc
lea
mov
jo
cwtl
cmp
jb
mov
scas
lahf
jae
lcall
lods
lea
ds
mov
xor
jmp
scas
push
push
mov
icebp
aad
std
cmp
jecxz
test
stos
and
push
test
ror
out
clc
jmp
mov
out
je
int
dec
data16
dec
pop
cltd
mov
xchg
out
leave
mov
jbe
ds
lcall
push
movsl
pop
je
rclb
decl
stos
out
scas
pop
out
jmp
xor
insb
in
mov
stos
jmp
loopne
enter
push
movsb
adc
fs
sbb
jmp
cmpsb
xchg
stc
mov
ljmp
mov
dec
xchg
dec
inc
cmp
arpl
clc
lahf
mov
lahf
decb
notl
push
je
jmp
mov
inc
pusha
movsb
test
pop
jp
popf
cmp
ljmp
in
inc
jge
mov
mov
push
bound
inc
or
mov
outsl
xor
push
dec
inc
add
imul
das
clc
jnp
adcb
push
xchg
adc
loope
outsl
add
pusha
inc
mov
pushl
fwait
pushf
cltd
cmp
push
jne
sub
mov
stos
lods
or
push
dec
pop
or
sbb
ljmp
sbb
das
and
jae
dec
xchg
test
mov
adc
cli
scas
and
pop
sub
andb
pop
or
lock
call
scas
mov
xor
je
fs
pushl
test
test
test
in
fmuls
clc
aaa
cmpb
popa
or
outsb
mov
nop
adc
das
add
mov
decb
scas
repnz
imul
adc
inc
lcall
pop
lods
les
je
shll
lcall
iret
or
ljmp
pop
stos
xchg
arpl
enter
je
fs
decb
aaa
push
orb
sahf
mov
in
cmc
aam
mov
jbe
jns
ja
out
icebp
add
push
incb
jmp
mov
pop
bound
aas
cmpsl
rclb
inc
std
stos
mov
incl
aam
dec
pop
daa
scas
sti
mov
ret
mov
test
sbb
call
das
clc
test
add
hlt
lcall
mov
push
dec
xchg
mov
mov
mov
popa
fsts
xchg
incb
lock
pusha
sub
push
je
test
repnz
push
in
mov
add
fimuls
push
add
aaa
imul
mov
push
mov
push
outsl
push
call
jne
pushf
std
mov
cmpsb
xor
pusha
dec
gs
movsb
fsin
ds
sbb
jnp
decb
push
cmp
lcall
mov
sub
sarb
adc
add
mov
pop
lock
and
xchg
pop
loop
pushl
shrl
stos
inc
gs
xor
data16
hlt
xchg
call
cld
decl
pop
fs
adc
es
insb
pop
push
arpl
push
push
cmp
mov
jle
mov
sbb
repnz
mov
mov
fwait
pop
data16
add
mov
lods
lcall
adc
shlb
dec
pop
pop
cmp
lods
ja
in
ret
outsb
movsb
jbe
xchg
clc
aas
lcall
cmc
cmp
xchg
mov
gs
loope
mov
jg
fbstp
inc
scas
mov
loope
test
cld
jg
call
push
popa
js
rcr
xor
fldenv
ror
test
std
fildll
sub
lea
mov
scas
hlt
jg
test
aaa
adc
int
fwait
xchg
jae
je
adc
call
mov
add
xchg
xchg
mov
adc
cld
iret
mov
inc
fldt
dec
mov
test
inc
clc
lcall
inc
mov
lcall
pop
fcmovne
test
sub
movsb
repnz
int3
cld
mov
hlt
cmp
in
decb
cmp
sbb
cli
incl
or
push
dec
dec
es
mov
sar
andnps
js
push
mov
inc
pusha
xchg
sbb
sbb
jne
dec
das
mov
movsl
outsl
jle
sbb
popa
cmpsl
enter
int
xchg
xchg
stos
cmp
and
pop
fwait
mov
in
adc
cmpl
mov
sbb
lcall
push
enter
sub
cmp
mov
lret
adc
cld
dec
dec
repnz
cltd
pop
lods
repz
pushl
sbbl
cmpsb
sbb
mov
jne
lret
sbb
push
pusha
shll
add
pushl
pop
scas
aaa
jl
vmread
inc
sub
dec
stos
lcall
daa
pop
fwait
aas
jae
and
or
and
nop
xor
scas
add
lods
adc
das
es
cltd
xor
mov
sub
inc
xchg
sbb
push
incb
jmp
adcb
int
push
inc
cmp
arpl
mov
lcall
push
and
es
popa
lods
in
popf
xchg
sbb
mov
push
sbb
mov
sub
sbb
pop
pusha
push
bound
cltd
xchg
add
data16
lcall
push
test
pushf
decb
push
add
or
dec
mov
incl
sub
shll
mov
cmpsb
out
jmp
ds
xchg
nop
mov
pushf
jge
mov
mov
mov
inc
jl
aad
cmp
xchg
movsl
xchg
inc
jg
enter
fstpl
test
rclb
push
pop
test
mov
mov
incb
incl
test
push
adc
imul
nop
jge
das
addr16
xchg
cmp
ljmp
mov
ds
inc
dec
adc
jo
in
je
ficomps
outsl
jmp
mov
ja
mov
jb
aaa
xchg
mov
lods
mov
cltd
test
mov
jmp
push
aad
jo
inc
clc
das
xchg
cli
pop
sub
mov
push
loope
negb
bound
sbb
jno
daa
jbe
incl
ja
int3
in
xchg
jns
xlat
sub
xchg
sti
lea
movsb
outsl
cbtw
xchg
ljmp
fistps
push
aaa
cmpsl
inc
dec
mov
mov
mov
cli
cwtl
adc
xor
and
sub
clc
movsl
out
sub
movsb
xchg
stos
xchg
mov
sbb
sub
and
call
xor
jle
fists
inc
cmp
jge
out
ja
pushw
ljmp
jno
adc
sbb
addr16
xchg
pop
lret
stos
pop
rolb
imul
incl
iretw
sbb
iret
sub
push
fs
cmp
out
ret
or
in
cmpsb
jno
xor
mov
add
sub
fstps
loopne
call
cmpsl
scas
cmp
fildl
test
add
mov
sub
xlat
js
pop
lock
sbb
push
mov
mov
mov
pop
test
in
decl
jmp
and
xchg
xlat
xchg
fstps
movsb
bound
cmp
call
ja
pushl
iret
lahf
outsb
fstl
cwtl
sahf
mov
ja
aas
xchg
or
jb
jp
push
cmpsb
push
ds
dec
fstpl
mov
push
movsb
ljmp
std
push
mov
push
xchg
sub
decl
test
adcb
mov
add
insl
out
repz
adc
jmp
pop
and
das
pop
push
mov
sub
out
ljmp
subb
xchg
mov
mov
mov
lcall
xchg
sbb
add
mov
rcrb
clc
repz
shl
scas
mov
les
out
in
out
call
outsb
scas
mov
rorb
aam
lods
xchg
loop
stos
cwtl
cwtl
jecxz
stos
decl
add
push
sub
call
in
ljmp
jmp
xlat
js
mov
mov
cltd
sar
loope
out
dec
std
dec
pushf
sahf
mov
mov
scas
loop
lods
cmpsl
mov
icebp
mov
mov
iret
mov
std
mov
call
mov
clc
xlat
mov
int
cltd
lea
sarl
jg
cmpsb
stc
cmc
mov
fildll
dec
int3
call
mov
loopne
call
inc
jbe
out
mov
jge
pop
inc
inc
daa
outsb
mov
jmp
jno
and
mov
dec
cmc
incl
sbbl
movsb
enter
cmpsl
mov
out
stos
scas
ret
mov
push
incb
inc
push
mov
incb
aad
mov
imull
inc
test
aad
jns
test
loop
movsb
stos
cwtl
in
out
lods
xchg
mov
sub
lahf
call
scas
lcall
mov
pop
std
fmull
add
std
mov
gs
stc
ljmp
mov
js
repnz
lock
xchg
cltd
sarl
repz
inc
mov
lock
clc
repz
pop
shl
mov
fs
repnz
mov
popa
loop
mov
mov
mov
int
lcall
push
jp
aad
mov
loope
dec
rcl
mov
enter
lret
push
into
lret
xchg
das
adc
fwait
incb
mov
push
call
incl
mov
xchg
dec
xchg
sbb
call
pop
mov
shr
shr
mov
cmc
push
dec
pusha
out
je
push
fs
mov
dec
inc
into
pop
scas
and
sahf
fdivr
mov
mov
rol
popf
mov
mov
jg
scas
hlt
icebp
fs
dec
inc
jmp
jb
cld
call
loope
cld
mov
jg
push
push
in
mov
in
cltd
mov
cld
dec
movsl
mov
rcrl
fcmovnb
decl
cmpsl
fidivl
scas
out
mov
mov
mov
mov
cmpsb
jg
pop
sub
push
ljmp
pop
push
mov
out
nop
test
lcall
test
loop
cmpsl
mov
push
mov
repz
incl
jg
push
fsubrl
push
inc
mov
mov
jle
loop
pushl
out
inc
shll
jp
lret
mov
call
mov
push
out
xlat
pop
mov
out
hlt
push
gs
jb
lcall
jmp
jg
fdivrs
dec
jnp
pop
fsub
shlb
outsl
push
xchg
jg
rcrb
cltd
popf
xchg
fldenv
jge
push
je
mov
in
mov
pushf
cltd
fstpl
addr16
gs
cli
xchg
arpl
jg
sti
pop
pop
inc
outsl
jp
scas
push
cli
ret
adc
jmp
pop
jb
arpl
int
nop
shll
outsl
mov
ljmp
mov
sti
push
in
jp
jle
rclb
or
xchg
mov
fbstp
pushl
add
pop
loopne
outsb
decb
lock
lcall
test
test
scas
les
mov
mov
pop
jbe
jg
and
xlat
xchg
mov
shlb
xchg
dec
jns
fcompl
ljmp
sub
jge
pop
add
imul
inc
mov
decl
popf
outsb
test
dec
nop
scas
xchg
mov
int3
mov
outsl
mov
mov
jle
cmpsl
push
adc
outsb
rcr
xchg
aad
sub
xchg
and
inc
push
dec
mov
push
mov
mov
rcll
sub
mov
mov
fucomip
lahf
mov
inc
sbb
dec
pop
dec
out
inc
fs
cmp
cmc
in
mov
fcompl
ljmp
lret
pop
xchg
test
std
aam
incb
inc
push
fbld
push
mov
cli
lods
sahf
fwait
jle
ljmp
outsb
ljmp
mov
cmpsl
xchg
dec
std
mov
iret
clc
or
xchg
mov
fs
ret
int3
mov
fwait
dec
test
mov
ljmp
lds
inc
dec
pusha
jae
in
ljmp
std
outsl
cmpsb
call
jg
bound
fs
mov
test
clc
std
pop
push
push
push
jns
nop
jo
out
mov
cld
jg
addr16
inc
cmpsb
lea
nop
out
xchg
fsts
cmc
incl
mov
cwtl
stos
mov
jae
push
popa
dec
scas
mov
out
std
mov
insl
aad
loope
call
xchg
insb
push
push
clc
pop
clc
jo
inc
pop
inc
dec
jecxz
cmp
ret
pop
call
loopne
jno
cs
cld
mov
jp
inc
jge
jne
test
cmpsb
mov
xlat
mov
repz
dec
icebp
jle
shll
mov
iret
popf
out
jo
push
imul
dec
xchg
dec
xchg
aas
adc
adc
inc
jne
ljmp
cld
or
xor
sahf
mov
mov
add
mov
push
cmp
jmp
inc
jo
imul
fimull
push
push
pop
aaa
outsl
fistpll
movsl
jmp
dec
movsb
gs
jmp
ljmp
sti
and
mov
in
xor
cmp
incl
xor
sub
jno
mov
dec
fsubrs
mov
push
inc
imul
nop
mov
ss
and
int3
daa
loopne
xorb
fmuls
js
sbb
mov
sbb
add
cmp
loope
divl
into
xor
and
rolb
popa
sarb
jno
aad
sbb
push
lods
cwtl
dec
dec
push
outsl
cmpl
sub
mov
shrb
lcall
cmpsl
data16
test
adc
and
int
mov
push
pop
push
std
daa
test
push
dec
mov
jno
out
loop
inc
scas
xchg
aam
inc
jo
test
cwtl
sti
adc
cmpsl
and
mov
je
fs
popa
pop
scas
mov
inc
xchg
fcoms
mov
sub
lcall
jecxz
out
bound
cwtl
pushl
fsubl
adc
push
xchg
push
pop
rorb
pusha
pusha
jecxz
lcall
or
leave
push
mov
call
add
mov
ss
sub
push
xor
push
stos
repz
pop
cmc
call
stos
les
movsl
jecxz
jbe
adc
stos
lds
push
cwtl
push
push
data16
ljmp
popf
sub
and
mov
xchg
jmp
call
sbb
ljmp
test
fs
ljmp
xor
and
inc
fdivs
jg
jbe
movsb
inc
dec
mov
adc
aaa
jp
fwait
jl
adc
dec
fisttpll
imul
test
push
std
pop
gs
fs
jne
inc
incb
incl
flds
xchg
jl
in
arpl
and
mov
inc
call
push
mov
and
daa
mov
aaa
jg
cmpsb
fisubs
outsl
push
das
dec
fstl
inc
fildl
movsb
int3
and
je
or
lret
or
xor
pop
jp
dec
loope
mov
sbb
outsl
cli
add
pop
dec
call
decl
stos
movb
cmpl
push
dec
mov
jmp
lcall
fdivrl
mov
movsl
inc
pop
mov
sub
mov
inc
dec
outsb
fists
flds
pushf
out
inc
je
cltd
outsb
push
je
push
cld
jg
aas
push
xchg
test
mov
js
push
movsb
mov
pop
mov
decl
add
pop
cmpsl
pushf
dec
push
into
mov
out
inc
imul
addr16
mov
dec
pop
mov
out
aas
js
pop
repnz
jl
bound
xor
fistpl
jns
test
jg
mov
jmp
inc
pusha
jne
out
int3
or
cmp
fbstp
mov
outsb
push
pop
dec
fidivrl
mov
sbb
push
call
xor
sub
aas
lahf
aaa
jb
sub
or
adc
movsb
into
pop
hlt
add
pop
inc
js
mov
arpl
inc
jmp
pusha
das
xchg
push
sbb
cli
or
cmpb
mov
jne
push
dec
push
cwtl
call
dec
adc
xchg
into
pop
pusha
movsl
pushf
dec
inc
incl
dec
scas
mov
incl
shll
inc
lcall
decl
and
push
fidivs
sahf
ficomps
inc
mov
lods
in
xchg
cmp
ret
sbb
in
add
cs
ljmp
mov
repz
pop
mov
push
dec
adc
dec
pop
pop
push
ljmp
decl
lods
jns
adc
fs
gs
js
outsl
js
push
int
test
int3
pop
push
insb
arpl
mov
jo
push
xor
add
jb
mov
fcomip
add
cld
imul
mov
pop
call
ljmp
inc
out
add
pusha
pop
dec
jbe
pop
repnz
push
jo
jnp
negb
sbb
jle
cli
sbb
ljmp
stos
xor
xor
cli
jne
stos
lods
dec
push
mov
mov
js
inc
movl
jo
push
out
cltd
stc
mov
fldcw
sbb
das
xchg
adc
or
sub
aad
hlt
pushl
push
out
das
mov
sbb
mov
sarl
out
jg
fsubs
xchg
call
or
cmp
mov
repz
cmpb
outsb
sti
add
sahf
filds
mov
inc
aam
mov
movsb
add
jno
pop
fstps
pop
lods
push
clc
or
shlb
pusha
fcompl
add
into
add
mov
add
push
cli
mov
in
popf
cld
sahf
out
lods
mov
fistl
scas
pop
jg
aam
testb
mov
pop
sub
jge
fcoms
lea
inc
repnz
adcb
inc
inc
or
fisttpll
mov
test
repz
lods
jmp
decl
mov
sbb
jle
fcoms
jo
mov
sti
push
fisubrl
ljmp
xchg
fstps
cwtl
out
mov
inc
rcrl
mov
fneni(8087
pushl
inc
jo
xchg
lahf
out
ljmp
xor
add
pop
fidivl
int
xchg
loopne
je
scas
push
inc
out
nop
in
sti
pushl
mov
xchg
inc
std
push
inc
popaw
imulb
add
flds
lcall
mov
xchg
ja
pushl
aam
jnp
outsb
jl
faddl
sbb
mov
or
scas
decb
sub
mov
int3
xor
dec
jg
jmp
cltd
cld
inc
into
popf
dec
jb
addr16
icebp
cwtl
dec
sbb
daa
xchg
out
pop
fwait
jg
loop
jle
cmp
mov
push
and
dec
loopne
jne
in
cmp
dec
cmp
xor
xor
jecxz
lcall
mov
mov
mov
and
out
sub
aaa
xchg
out
and
xor
push
bound
or
cmpsl
call
dec
movsl
mov
xchg
icebp
jno
jbe
cmp
and
fwait
xchg
test
fildl
outsl
das
clc
jae
cmp
pop
cmpsb
xchg
jne
add
push
test
jg
std
dec
je
test
mov
loop
js
or
fsubrl
call
adc
aam
push
lods
stos
jge
sub
sub
pushl
scas
outsb
push
js
or
cmpsb
out
mov
xchg
pop
cli
ljmp
jge
shlb
jne
lea
aas
jg
ret
push
xorb
jnp
or
int3
jl
cwtl
ret
jle
and
mov
or
out
popf
stc
sub
call
xor
jge
add
rorb
pop
pop
sar
mov
mov
and
out
lea
sub
jnp
daa
inc
push
xchg
in
push
in
lcall
in
cltd
ljmp
mov
adc
pushl
jp
lock
inc
cwtl
mov
and
mov
jnp
cmp
cmpsb
pop
loop
jae
cld
or
xor
int3
or
jmp
and
xlat
mov
lret
cmp
subl
xchg
out
popa
pop
clc
mov
mov
dec
pop
shrl
bound
mov
mov
cld
outsb
inc
ret
jb
jbe
loop
pop
loopne
incb
popf
jg
ljmp
mov
ret
jmp
lds
fwait
cli
and
pop
out
arpl
or
mov
call
je
inc
rolb
fs
cmpsb
jns
ficomps
jno
call
cmp
push
push
inc
enter
mov
cli
lcall
xchg
in
xor
call
fstpt
lea
pop
je
pop
inc
dec
decl
outsb
sub
xlat
cmpsl
push
dec
xlat
jbe
inc
dec
ja
and
clc
jg
pop
jbe
xor
mov
test
outsl
orb
std
and
inc
ret
pusha
pusha
fs
inc
shrl
nop
jp
and
adc
incl
fistpll
push
outsl
je
fsts
inc
dec
push
push
jns
and
incl
cld
mov
aaa
xor
fistl
adc
inc
rorb
decb
mov
mov
pop
push
int
icebp
fsubs
mov
mov
pop
mov
aad
sahf
shrl
je
lret
cmpsb
xchg
dec
push
ret
sbb
dec
adc
fstps
xor
scas
mov
aad
dec
dec
dec
sti
add
test
rorl
and
sbb
imul
xchg
inc
dec
in
call
lods
scas
lods
bound
lcall
push
push
out
dec
jmp
jecxz
fisubrl
xorl
test
insb
jo
mov
xchg
mov
jl
cld
cltd
pop
sti
je
push
ja
cli
cmp
lock
fsts
shl
adc
mov
cmpsb
fstps
test
pop
or
lea
rcrb
jns
xchg
mov
ljmp
pop
inc
out
jno
push
lds
test
popa
insl
sarl
loopew
jg
fwait
push
jbe
inc
dec
dec
jge
add
les
xor
pop
mov
cmp
pop
arpl
and
aad
lods
lods
push
arpl
xor
cmpb
add
mov
fcompl
and
or
push
loope
xchg
xchg
test
mov
inc
adc
int3
push
mov
mov
ret
xchg
mov
loopne
mov
pusha
push
jne
xor
push
adc
cli
xchg
pop
decb
mov
fs
fstps
jnp
pop
call
xorb
sub
movsl
into
add
inc
jo
pop
inc
pop
ret
adc
mov
xchg
jg
out
inc
push
push
sti
add
aad
dec
je
adc
decl
popa
inc
pop
out
lcall
ss
lcall
stos
mov
jl
fsts
adc
pusha
jge
pusha
inc
dec
jb
pop
mov
scas
aas
int
imul
out
mov
je
std
js
arpl
loop
lods
fbstp
gs
fldl
fadds
mov
cmpsl
jp
sub
mov
insb
test
push
scas
icebp
bound
and
cs
cmp
sahf
jg
stc
push
popa
dec
pop
cs
je
data16
adc
push
or
pop
ja
clc
decl
in
mov
mov
xor
push
outsb
ret
imul
pop
mov
mov
push
dec
push
jnp
xchg
mov
mov
inc
fsubrl
push
pop
repnz
push
decl
add
mov
sub
filds
jg
push
cmpsb
inc
jns
mov
das
cli
mov
imul
inc
sarl
je
ret
jge
arpl
add
xchg
inc
outsb
icebp
pop
dec
inc
jns
mov
das
ret
out
pop
jmp
mov
sbb
in
sub
out
popa
jns
roll
push
inc
roll
test
scas
addr16
les
loope
and
jg
cmpl
test
jp
pop
or
push
ja
jp
dec
inc
repz
decl
jecxz
xlat
clc
scas
int3
xchg
incb
mov
add
pop
loope
aad
pusha
in
dec
dec
pop
jle
adc
lods
push
pop
xlat
pusha
jle
mov
scas
inc
popa
loop
jg
jg
call
data16
je
lds
test
scas
inc
lds
fsubs
push
hlt
data16
ljmp
in
and
xchg
push
xchg
ja
jmp
pop
jno
std
and
add
fsubs
bound
add
jg
mov
dec
push
or
sti
xor
int
lcall
ljmp
in
js
cmp
frstor
jnp
lock
and
cli
mov
stos
incb
mov
dec
loopne
jo
inc
push
mov
clc
and
decb
and
inc
jnp
dec
jne
mov
inc
xchg
stos
xorb
mov
stos
jg
decb
cmc
sahf
jl
aam
inc
jg
sub
jmp
loope
arpl
sbb
fwait
jle
sbb
mov
sti
sbb
imul
push
addr16
mov
mov
stc
cmpsl
decb
lea
stc
pop
dec
call
or
rcll
lahf
pop
ja
shlb
xor
test
and
adc
mov
aas
jb
rcr
jl
jne
jle
mov
pop
pop
int
sub
add
jp
xlat
inc
je
mov
and
jp
idivl
push
stc
push
loope
mov
mov
sbb
add
js
pushw
xchg
mov
mov
imul
sub
testb
jg
loop
jp
push
push
lods
in
aas
sahf
movsb
cmpsb
mov
sub
fsubrs
cmpsb
cwtl
adcb
outsl
pop
or
lea
lods
push
jo
jg
lcall
rolb
stos
fnsave
popf
cmpsb
fwait
push
sub
leave
inc
inc
inc
jg
lock
sub
mov
jg
out
push
inc
decb
stos
orl
mov
jns
inc
pusha
cmp
sub
mov
pusha
ret
pop
push
fsubrl
fwait
lea
les
clc
xor
add
push
lahf
add
das
sbb
xchg
mov
addr16
add
cld
out
test
lea
data16
in
xchg
mov
jb
push
imul
fwait
mov
cmp
sub
add
inc
loopne
pop
fidivrs
push
dec
fstpt
pop
dec
fldt
mov
or
cmpsb
nop
stos
mov
sub
pop
leave
sub
add
and
jp
adc
adcb
xchg
inc
push
hlt
pushl
add
and
lcall
in
in
cltd
ljmp
xchg
cmpsb
pop
call
mov
or
mov
sbb
scas
mov
jg
ljmp
jg
and
cld
pop
icebp
mov
loopne
jge
cld
or
xchg
cltd
pop
mov
ret
jmp
in
pop
outsl
push
lods
stos
pushf
out
add
dec
pop
repz
incb
lea
movsl
imul
cmp
pop
icebp
fbstp
es
sbb
je
pop
jns
push
ljmp
mov
jne
cmp
cmpb
push
jle
sub
adc
lods
xchg
xchg
fldt
pushf
lds
jl
inc
les
mov
jns
lret
and
push
testl
and
test
or
test
ret
cmp
cmp
dec
jmp
pop
push
ja
or
lock
clc
cmp
lcall
stc
daa
addl
shrb
es
cwtl
mov
and
pushl
popa
jne
jp
data16
cmpxchg
scas
push
test
dec
adc
sub
adc
sarl
pusha
push
jecxz
mov
dec
std
sub
adc
loope
mov
cmp
push
fdivrp
add
sub
pusha
loope
mov
pop
stc
lret
fwait
mov
imul
inc
push
fiaddl
mov
sub
movsl
cli
cmp
push
jbe
jns
int
sub
aam
mov
mov
aam
mov
icebp
sbb
repz
addr16
js
in
ljmp
inc
add
enter
sbb
mov
add
orb
mov
int
inc
cmpsb
mov
and
jb
dec
lcall
lods
cmpsb
cmpsl
mov
push
jecxz
int3
and
jo
ret
lock
daa
decl
mov
loop
push
shll
sti
adc
loope
aaa
push
mov
fbld
mov
inc
loop
xchg
mov
mov
sub
ja
call
jecxz
pop
cmp
fdivs
fs
repnz
mov
cltd
inc
outsb
into
andl
sub
dec
push
popa
pushl
cmp
xlat
mov
lret
and
orl
and
jb
mov
inc
popf
test
enter
fcompl
mov
jns
lret
frstor
xchg
in
cmp
jge
and
lea
in
outsl
pop
xor
inc
cmp
aaa
jg
mov
push
cwtl
mov
in
adc
lret
sbb
aam
push
test
mov
popl
fidivs
rol
dec
push
lds
mulb
addr16
out
xchg
leave
lods
inc
adc
fisttps
cmpsl
movsb
cltd
jo
shlb
jg
dec
pop
jmp
aaa
pushl
pushf
mov
lret
popa
outsl
out
lea
loope
add
shrl
cmpsl
push
jmp
mov
push
mov
stos
add
es
xchg
in
lods
out
popa
lods
out
dec
sbb
js
rorl
and
mov
retw
pop
lcall
pop
nop
push
rolb
mov
mov
xlat
leave
sub
jns
inc
push
xorb
jecxz
pop
lock
dec
lcall
cltd
imul
loop
out
xor
mov
loop
sti
pop
mov
ja
add
out
data16
stos
push
mov
lcall
push
mov
push
push
icebp
xor
push
pop
sarb
stos
enter
scas
inc
fisubl
mov
xorl
lahf
cli
add
repz
jg
addr16
cmpb
pop
mov
xorb
inc
dec
in
dec
inc
pop
jle
cmp
imul
fidivrs
mov
dec
dec
std
cmpsb
fisttps
fstps
pusha
pop
arpl
push
popa
sbbl
inc
inc
ret
and
mov
inc
dec
push
fsubl
test
gs
jmp
xchg
mov
lcall
jmp
dec
jg
imull
decb
mov
mov
clc
dec
xchg
jg
cmc
incl
adc
jle
cmpl
mov
jnp
pop
inc
int3
sbb
movsb
jp
in
das
sub
imul
ja
inc
ret
pop
popf
xchg
mov
je
cmc
js
outsl
stos
aaa
and
xchg
mov
inc
arpl
inc
inc
pushl
mov
lock
inc
popa
sub
xchg
sbb
enter
mov
push
data16
push
ret
inc
inc
jecxz
and
test
fisttpl
fwait
xchg
mov
cmp
scas
inc
decb
pop
jmp
pushl
mov
jns
xchg
imul
movsb
inc
push
inc
pop
fisubrl
decl
fistpll
ja
jno
pop
addl
inc
decl
pop
shll
pop
jle
xchg
inc
push
xchg
xor
incl
ljmp
nop
jge
add
pop
mov
push
test
inc
pop
int3
mov
add
jo
push
in
decb
jle
lock
ljmp
dec
fnstcw
stos
xchg
jae
rorl
pop
push
jge
shrb
and
stc
movsb
call
jg
xchg
inc
inc
movsl
pop
in
pushf
jge
int3
jbe
outsl
jne
add
mov
fstps
das
add
popa
inc
inc
inc
mov
js
adc
incl
pop
cld
push
pop
pop
jbe
mov
scas
int3
sub
clc
mov
pop
ret
ja
xchg
cmpsb
inc
mov
incb
stos
push
imul
in
adc
bound
repnz
loop
test
pushl
cmp
sub
mov
inc
leave
xor
adc
sub
or
add
lahf
stos
ret
sbb
out
je
jg
inc
into
cmp
cmp
lret
std
sbb
pop
inc
fidivl
into
add
mov
imul
pusha
lret
mov
push
push
adc
push
jmp
mov
cld
sub
xor
jne
fistpl
dec
iret
and
jecxz
mov
adc
cmp
ljmp
jp
shrl
and
scas
stc
push
imul
aaa
add
sub
lods
inc
push
inc
mov
mov
loope
scas
xor
ljmp
pop
lea
imul
push
outsb
mov
jb
mov
decl
mov
fcomps
inc
sbb
popf
in
and
iret
xor
data16
and
push
arpl
punpcklbw
ljmp
std
pushl
mov
fdivs
je
cmpsb
jmp
lcall
inc
adc
stc
xor
mov
inc
mov
outsl
cmp
je
sbb
dec
cmp
das
jp
mov
jl
and
mov
incl
mov
xor
daa
movsl
fnstenv
gs
xor
mov
and
inc
lods
mov
outsl
sbb
and
subb
ret
incb
test
lock
fidivl
cwtl
lds
mov
pop
push
push
inc
clc
add
dec
push
cmc
jg
sbb
aaa
stos
shll
push
rcrl
scas
jl
push
ret
lea
lock
mov
mov
mov
push
mull
push
push
adc
popa
pop
stc
adc
mov
fldt
mov
js
jg
pop
jg
mov
jno
shlb
push
scas
jge
int3
mov
jnp
fs
adc
cmp
jg
jae
lock
mov
nop
dec
pop
shrl
push
push
lea
inc
push
cmpsb
jb
lds
or
jle
pop
in
fwait
mov
pop
dec
clc
sbbb
js
addr16
pop
iret
incl
dec
addr16
ja
push
ja
daa
xchg
fnstcw
mov
xchg
rorl
popf
sti
cmp
jle
test
push
dec
addr16
push
xchg
les
pop
or
jb
jp
or
mov
shrb
inc
jg
jle
push
cmpsb
jl
fdivrl
xor
xchg
roll
out
add
rolb
and
test
mov
out
arpl
loopne
push
pop
pusha
fstl
mov
lcall
aam
inc
push
je
hlt
decl
mov
jns
jecxz
push
inc
frstor
dec
inc
pusha
xchg
mov
cmpsb
jmp
dec
into
xor
mov
stc
xchg
in
xor
lds
ljmp
mov
push
inc
fwait
imul
inc
bound
and
adcb
sar
mov
aad
jne
je
push
lcall
in
lods
into
or
mov
mov
bound
dec
mov
and
sbbl
ljmp
pushl
rcrl
xchg
fwait
pop
push
lds
dec
dec
sarl
jbe
dec
pop
incb
cmpsl
stos
incb
scas
mov
lods
sahf
loope
imul
pop
cld
ja
call
inc
sbb
push
pop
js
je
pushf
pusha
jmp
clc
dec
loopne
push
pusha
dec
pop
jle
sub
mov
pop
push
dec
fwait
pusha
fistps
mov
lods
push
incl
pop
scas
out
jl
gs
push
imul
cltd
jle
out
ja
fdivrp
out
add
mov
fsubrs
decl
pushl
inc
jbe
repnz
decb
jle
es
cld
cmp
call
mov
cmovs
in
jp
inc
pusha
xor
xchg
mov
inc
jns
pop
and
push
cld
jo
inc
aaa
nop
clc
lea
testb
xor
push
inc
push
test
xor
add
pop
incb
push
data16
jb
inc
and
incl
out
xchg
push
je
pop
outsb
inc
sub
mov
dec
jp
cmpsb
pop
push
je
dec
daa
decb
loop
rol
cli
pop
in
es
loope
mov
sbb
mov
dec
inc
frstor
inc
and
cli
mov
dec
sub
sub
mov
lcall
lods
jge
std
inc
inc
inc
push
sti
adc
push
inc
rol
adc
inc
lods
pop
mov
and
lea
ret
jle
sar
push
pop
jne
outsb
jle
and
mov
pop
dec
sarb
jns
outsl
or
lret
mov
ret
dec
push
adc
and
pop
ljmp
mov
rorl
fstps
push
scas
clc
jmp
inc
pop
les
mov
mov
lret
outsb
test
stos
data16
mov
mov
outsb
les
call
mov
outsb
push
fildll
rolb
adc
mov
decl
stos
dec
cli
push
pop
jo
cld
and
std
cwtl
push
outsb
inc
lods
ljmp
jg
add
inc
inc
inc
lock
cli
popf
xor
jle
dec
je
or
jmp
sbb
stos
shrl
mov
push
loopne
jbe
jne
or
inc
dec
int3
mov
jp
dec
stos
mov
test
stos
inc
jno
je
push
inc
incb
jg
or
jne
sarl
rolb
inc
call
push
inc
ljmp
dec
out
mov
mov
inc
jp
arpl
add
mov
jmp
imul
imul
push
rclb
mov
ret
jge
je
rcrb
ljmp
incb
cltd
pop
mov
sub
dec
fildl
shlb
cmpb
jnp
dec
inc
mov
cmp
ljmp
and
arpl
push
jne
js
shlb
andb
addr16
inc
lds
sbb
xorb
push
mov
xor
dec
jmp
rcrb
mov
fs
ret
inc
add
jne
std
xorb
jmp
jnp
cwtl
jp
fldenv
insl
dec
imul
lret
imul
mov
and
mov
xchg
int3
push
xchg
fisttps
inc
popa
inc
loope
jg
iret
xor
mov
inc
out
pop
pop
out
mov
xchg
mov
pusha
jg
jae
ljmpw
test
decb
push
fsts
and
pushl
ret
or
scas
mov
roll
jnp
push
cmc
pop
jns
inc
loopne
dec
push
xorl
lcall
das
shlb
out
lcall
jne
cmp
mov
mov
aad
in
pop
lods
in
das
pop
pop
clc
pop
jne
orb
jne
push
outsl
push
pop
push
orl
push
jg
lcall
lea
je
je
out
mov
lea
jecxz
sbb
jl
int
loopne
inc
add
lea
xchg
mov
movsb
lea
lods
jg
fildl
pop
stc
xchg
out
add
and
int
xchg
scas
mov
int
outsl
test
test
arpl
outsl
cli
scas
cld
sub
int
mov
mov
sub
pushl
fstpt
push
int3
pop
jp
aaa
cwtl
sbbl
stc
cmpsl
push
incb
xorl
pop
out
jae
jecxz
mov
inc
push
fcoml
fwait
aas
add
mov
fcmovu
addr16
inc
out
jp
mov
jg
xor
stc
cmpsl
gs
scas
mov
rcrl
push
stos
mov
and
add
or
lcall
add
push
call
fwait
repnz
aaa
lcall
lods
mov
push
lds
push
aaa
mov
scas
loopne
mov
mov
mov
aad
xchg
mov
xchg
imul
scas
repnz
lock
call
xor
mov
mov
test
fnstsw
mov
and
fnsave
pop
jno
jl
lcall
jae
out
add
jns
test
mov
push
fs
jbe
or
push
decb
call
push
pop
jnp
inc
fidivl
add
movsl
ljmp
inc
data16
pop
dec
sub
das
cli
jg
cli
and
movsl
dec
pop
jl
jecxz
xor
jo
fbstp
imul
cltd
pop
icebp
lcall
dec
dec
stc
sbb
mov
sbb
clc
es
jne
ljmp
mov
orb
incl
push
int
stc
lret
gs
mov
enter
and
out
out
cmp
inc
data16
and
xchg
mov
lret
mov
xchg
and
or
out
cmp
loope
xchg
mov
push
shll
pop
pop
inc
cmpsl
add
call
je
push
dec
int3
and
rcrb
aaa
mov
mov
push
jle
jne
dec
or
icebp
sub
xchg
enter
outsl
test
mov
test
dec
push
js
pop
push
dec
push
cwtl
fwait
mov
lahf
add
dec
popa
out
xchg
pop
dec
jp
mov
mov
cld
mov
pop
ret
inc
in
sbbb
dec
je
fsubrl
mov
decl
movsb
dec
mov
cmp
decl
addr16
lret
fwait
mov
sub
mov
cmpsl
ja
in
cmp
jg
movsl
jne
scas
jg
decl
popf
repz
mov
add
flds
pop
inc
push
call
mov
lret
fwait
push
push
cltd
mov
xor
lcall
cltd
fistps
inc
gs
inc
call
ret
shlb
and
sub
ret
nop
pusha
out
sbb
enter
mov
mov
mov
sbb
cmp
jae
lcall
lock
ret
sbb
in
js
imul
push
loopne
pop
outsb
lcall
xchg
push
outsl
les
jo
ret
xchg
mov
inc
lcall
pop
les
pop
arpl
adc
into
or
decl
lret
sub
testb
and
icebp
and
scas
lods
mov
int
stos
ja
mov
rcll
cld
fwait
jg
movb
jp
out
fs
incb
fwait
repnz
ret
clc
xor
cmpb
and
jmp
test
in
fwait
lods
xor
sbb
mov
lret
adc
pop
and
mov
repnz
aaa
scas
add
mov
xchg
pop
imul
loop
lcall
sub
adc
addr16
xchg
mov
sahf
mov
dec
fiadds
xchg
mov
mov
outsb
cli
cli
call
inc
aam
pushf
into
add
inc
dec
dec
dec
inc
jle
clc
out
nop
pop
in
lods
out
xchg
sub
cltd
dec
pop
imull
inc
fwait
jg
mov
test
mov
jg
pop
aad
jp
adc
lods
jnp
ret
insb
xlat
out
add
xor
push
inc
xlat
jbe
inc
popf
into
adc
add
std
xchg
rorl
imul
cmp
mov
jl
inc
jno
cmp
pop
in
inc
inc
clc
inc
jmp
and
addr16
push
js
je
sub
scas
push
pop
fbld
hlt
and
out
push
decb
stos
jg
mov
cmp
je
nop
outsb
or
js
cmpsl
pop
or
jg
inc
arpl
xor
cmpsl
mov
xor
cmp
dec
cmp
in
jg
scas
cltd
sahf
js
loopne
inc
pop
pop
test
or
seto
lcall
jle
inc
into
push
xchg
sbb
rcll
sti
or
loope
cli
sub
addr16
push
inc
mov
clc
insl
repz
inc
jp
mov
ljmp
lcall
cld
scas
clc
sti
je
push
ja
add
scas
fcmovbe
mov
add
jno
out
add
jl
mov
mov
out
inc
das
cli
daa
mov
mov
inc
jns
pusha
das
inc
sar
jmp
jbe
addr16
pop
mov
mov
mov
aaa
rcrl
in
pop
jle
push
xchg
push
pushl
mov
fs
pop
ret
stos
lea
popl
popa
pop
add
fwait
das
push
mov
sbb
pushf
test
or
sti
mov
jge
fs
jbe
cmp
shll
push
std
jg
push
sbb
out
mov
ja
sbb
imul
xor
fldenv
ret
cs
repz
or
stos
xchg
fwait
mov
ljmp
into
sbb
es
push
pushf
incb
scas
inc
add
dec
cld
mov
movsl
dec
loopne
and
aam
insb
incb
lock
test
mov
fnsave
or
xchg
inc
enter
decl
jne
mov
add
dec
sbb
icebp
cs
cmpsb
mov
push
call
movsl
mov
imul
adc
mov
loop
ret
push
imul
pop
push
mov
pop
push
je
clc
sbb
scas
mov
add
ljmp
shll
nop
jbe
inc
out
xor
lcall
jecxz
repz
jb
inc
lods
cmpsl
jne
cmpsb
test
xor
enter
lods
xor
xchg
mov
test
test
hlt
jne
xchg
in
movsb
scas
lods
sbb
mov
cli
pop
inc
push
sub
inc
and
mov
mov
lcall
mov
fs
push
mov
mov
lea
ljmp
xchg
jp
imul
dec
xlat
mov
ret
push
popa
cld
adc
jg
mov
push
les
jns
push
stc
and
les
inc
jecxz
pop
fmuls
mov
cmp
loop
or
or
cs
adc
mov
inc
sub
xor
xor
push
dec
decl
sahf
sbbb
and
enter
dec
cli
or
insb
and
cli
aas
jg
sbb
lcall
mov
pop
decb
inc
cmp
hlt
mov
dec
aas
push
fisubrs
scas
movsb
lcall
fldl
test
mov
pop
out
push
pop
mov
and
daa
inc
fidivrl
fbld
cli
iret
lahf
push
stos
jl
test
lahf
push
jne
jecxz
mov
data16
adc
mov
data16
pop
cld
xor
jmp
insl
pop
jle
into
pop
loop
cmp
insb
jp
inc
je
jns
inc
jne
decl
push
inc
push
push
pusha
dec
rcrl
cmp
ret
jns
push
bound
adc
lcall
rclb
ret
dec
pop
jae
jb
inc
push
mov
inc
cmp
lock
andl
mov
push
lcall
add
push
push
mov
sbb
pop
cmp
adc
decb
loopne
filds
and
fwait
or
cmp
jg
jg
and
mov
jae
imul
outsb
xchg
pusha
icebp
incl
pusha
push
mull
push
lods
cwtl
xchg
sbbb
pop
pop
xorb
mov
jno
rcll
dec
jp
outsl
repz
cmp
jno
mov
adc
in
xor
nop
mov
ljmp
push
ss
mov
pop
rclb
inc
dec
mov
sbb
ljmp
test
cmpsl
cmp
add
or
sbb
pop
and
ljmp
lret
lret
push
dec
jo
test
ljmp
adc
mov
ljmp
pop
xorl
cld
adc
pop
pop
incb
popa
dec
lcall
mov
out
cmp
mov
daa
pop
ja
jbe
xor
pusha
ljmp
inc
scas
adc
cmpsb
aas
out
mov
xor
pop
jp
js
inc
xor
dec
call
mov
sbb
inc
lea
or
or
push
gs
xchg
rcrb
push
jle
cwtl
push
mov
ljmp
mov
mulb
push
insb
inc
stc
sub
je
subb
std
pop
inc
or
mov
mov
mull
daa
addr16
push
insl
popa
add
aas
jbe
xor
cmpsb
mov
push
jne
dec
clc
xor
pushf
mov
pusha
stc
adc
das
pushl
xchg
fisttpll
mov
xor
add
adc
cmp
lods
lods
scas
repz
popa
notb
pop
dec
pop
ret
push
sti
cmpsl
sub
movsl
mov
lcall
out
pop
xor
fisubs
dec
out
es
mov
in
xor
mov
xor
push
imul
aad
jno
push
fstpl
dec
or
and
decl
xchg
mov
loope
push
dec
pop
lcall
pop
and
aaa
sahf
outsb
call
shll
mov
adc
jg
sub
cmp
cwtl
fs
mov
roll
sti
xor
or
sub
std
ljmp
xor
scas
mov
cmp
ds
and
pop
mov
jmp
stc
in
or
lea
bound
fs
sub
shrl
mov
jg
cmc
mov
ljmp
push
push
add
xor
call
cmp
sbb
mov
and
inc
inc
jns
in
pop
pop
aaa
mov
xchg
lods
xchg
leave
test
decb
cwtl
in
mov
pushf
in
dec
shlb
sarb
decl
mov
sbb
popa
sbb
sbb
dec
dec
repnz
fwait
lock
push
pop
push
scas
insb
xchg
cwtl
test
call
outsb
cmp
inc
and
push
setle
jns
call
popa
pop
out
aas
add
aad
dec
fcomps
push
push
push
mov
push
add
test
add
scas
push
cltd
sti
cmp
ljmp
jmp
ds
test
sti
int3
adc
dec
cmp
pop
inc
pop
or
add
pop
lods
lods
jo
add
jg
je
xor
mov
jb
pop
mov
mov
sbb
ljmp
es
jnp
mov
movsl
test
lea
mov
aas
icebp
push
inc
sbb
xchg
lcall
out
aaa
jge
and
pop
addr16
push
fists
std
or
adc
fmuls
mov
sub
and
cmp
repnz
ljmp
imul
stos
int3
decl
enter
xor
cmp
test
push
jne
mov
ljmp
and
dec
add
dec
push
fsts
insb
cmp
mov
xchg
add
ljmp
dec
jae
movsl
repz
rclb
decl
jle
jne
adc
xor
xor
shll
jge
rorl
icebp
je
adc
pop
sbb
bsf
jp
xor
incl
sbb
lods
repz
fistl
mov
cmp
cmp
clc
decl
jmp
jno
and
xor
push
int3
or
pop
xchg
aaa
inc
repnz
ss
and
jmp
mov
add
sti
sub
fiadds
jge
out
sbb
add
dec
inc
rorb
jne
out
sbb
out
xchg
incl
push
hlt
inc
mov
addr16
pop
fisttpl
xor
sbb
inc
mov
dec
cmp
mov
pop
jbe
xchg
push
insl
inc
scas
data16
mov
mov
shlb
fisttps
pop
aas
mov
out
arpl
call
mov
pop
pop
xchg
je
push
push
jg
xchg
inc
push
clc
adc
xor
xor
movd
scas
test
ljmp
xchg
dec
xlat
add
test
ret
or
push
hlt
subb
xor
repnz
inc
pop
imul
cld
pop
ljmp
jle
inc
mov
incl
pop
ja
adc
leave
cmp
les
pop
cmp
shrb
pusha
push
mov
push
call
lahf
adc
sbb
add
dec
call
push
pop
lea
mov
inc
push
pushf
iret
fsubrs
mov
pop
out
daa
sahf
jmp
mov
cmp
rclb
aaa
sub
mov
int3
sbb
pop
aas
xor
sub
cli
call
test
lea
cmp
dec
sbb
orl
out
jb
lods
test
mov
mov
sub
movsb
in
add
and
cmpsl
dec
or
incl
jae
inc
jp
insb
in
pop
ja
icebp
xchg
sub
cli
incl
mov
adc
lcall
jno
push
inc
scas
insb
cmp
sbb
dec
je
cmp
mov
mov
pop
lret
jge
insl
pop
movsb
inc
cli
dec
into
jp
or
pop
inc
in
sub
mov
shll
dec
pop
inc
jg
subl
fimuls
mov
pusha
mov
push
outsl
jp
and
inc
popa
lds
outsl
and
cmp
xchg
iret
mov
mov
mov
xchg
mov
movsb
mov
mov
scas
inc
lret
ret
pushl
je
inc
insl
lods
ss
sub
mov
test
or
adc
and
push
or
push
jno
int3
pop
fldenv
cmpsl
pop
in
adc
out
sub
test
mov
enter
pushl
cld
sbb
jbe
or
cmpsb
mov
sbb
dec
call
adc
sti
mov
test
cwtl
inc
das
js
loope
pop
scas
xlat
or
cmp
push
std
pop
icebp
pop
jb
dec
adc
push
insl
inc
imul
jl
ljmp
pop
jbe
bound
sahf
pop
out
and
adc
icebp
out
add
fwait
outsl
mov
jl
and
cld
mov
nop
add
stos
rclb
sub
popa
and
dec
cmpb
scas
fcoml
mov
pop
scas
or
dec
in
or
inc
ss
rcr
adc
ljmp
push
inc
push
jg
je
fs
add
or
cli
incl
cmpl
dec
in
push
xchg
in
push
popf
popa
add
inc
or
mov
into
add
clc
xor
orb
pop
jle
sarb
jge
pop
std
xchg
and
fcomip
syscall
jmp
das
pop
push
add
bound
pop
pusha
outsl
clc
cmpsl
add
add
adc
inc
inc
lds
dec
jg
push
popa
push
mov
dec
hlt
sbb
push
adc
sub
add
mov
jo
mov
incb
fbstp
push
sbb
mov
or
push
pop
movsb
popa
clc
jnp
dec
es
jne
push
movsb
lea
add
pop
lock
xchg
pop
aaa
outsb
fstps
push
outsb
sub
stos
inc
and
popf
adc
inc
push
xchg
or
cltd
cli
lcall
call
dec
mov
pusha
jge
mov
repnz
dec
ljmp
xchg
jo
inc
in
xor
loopne
lahf
pop
xor
pop
inc
test
aas
and
aas
jnp
xor
adc
in
jl
in
add
es
imul
mov
add
lahf
or
push
out
pop
lods
fistpll
lret
loopne
lods
and
cmp
fidivrl
xchg
push
cltd
mov
jg
cld
ljmp
fdivs
fsts
pushw
push
xchg
and
repz
cmc
imul
and
mov
cwtl
lahf
jmp
and
jmp
adc
mov
dec
xchg
dec
bound
ja
andl
adc
insb
and
mov
xchg
cmpsb
in
ss
xor
sub
mov
popa
pop
decb
pop
inc
ljmp
jae
jle
xchg
and
lcall
jo
sbb
mov
add
shlb
fbstp
insl
je
adc
jg
dec
push
pop
jb
push
shl
out
push
inc
jb
lahf
mov
insb
ljmp
or
cmp
adc
arpl
sar
or
adc
nop
cltd
in
insb
mov
xor
lret
mov
outsb
in
or
mov
out
insb
les
mov
sub
cmp
push
cld
cwtl
movsl
mov
punpcklwd
sub
mov
fildll
xchg
dec
mov
mov
cs
cli
hlt
adc
xor
mov
popf
lock
mov
fisttpll
stos
bound
or
push
aam
xchg
or
roll
adc
punpckhdq
in
pop
cmp
scas
out
inc
rcrl
insb
sarl
or
pop
ja
insl
add
sub
stos
pop
out
daa
mov
mov
lds
and
cmp
or
pushw
mov
lret
lds
jmp
clc
jl
test
xchg
inc
test
push
or
jmp
mov
xchg
jns
and
das
mov
decl
mov
insb
sbb
mov
fsts
mov
cwtl
mov
cmp
or
daa
mov
and
push
subb
loope
call
sbb
pop
lods
adc
jmp
mov
add
mov
jmp
xchg
push
test
out
dec
ret
loope
xchg
sbb
adcb
cli
das
repz
incl
and
lods
outsl
xchg
mov
and
add
test
push
andb
cmpsb
fldt
lods
jne
aaa
mov
decl
mov
sub
insb
in
pop
or
pop
push
jmp
test
xchg
call
insl
dec
inc
std
pushl
pop
sti
cmp
and
mov
inc
cld
sbb
mov
repnz
call
xchg
mov
decb
pushl
mov
out
nop
jne
sub
add
dec
jmp
scas
call
mov
adcl
cmpsb
jns
insl
dec
mov
ljmp
cmpb
cmp
rorl
imul
mov
mov
inc
clc
pushl
movsl
and
push
mov
insb
decl
in
es
loope
cmpsl
insl
aaa
addr16
jne
dec
inc
sahf
sub
jmp
adc
sbb
add
jns
cltd
movsl
in
popf
pop
out
popf
dec
decl
mov
js
adc
add
and
dec
ljmp
mov
aaa
mov
and
aas
inc
sahf
push
sub
incl
out
inc
jecxz
mov
mov
mov
sub
ljmp
xchg
lret
cwtl
pop
out
xor
jmp
addb
xor
mov
and
rcll
icebp
fbld
mov
jg
pop
loopne
rolb
sti
and
or
das
mov
and
mov
cld
popa
sub
mov
ljmp
and
mov
push
test
addb
mov
xor
decl
sbb
add
mov
nop
mov
mov
adc
sbb
out
aas
sbbl
mov
iret
mov
loope
scas
sarl
xchg
outsb
cmp
mov
data16
sbb
aaa
mov
test
hlt
pop
out
gs
mov
sbb
mov
loopne
imul
xchg
sub
mov
gs
push
jno
xor
mov
inc
push
cmp
scas
cmpsl
cwtl
mov
lods
lds
inc
clc
or
xchg
and
pop
cmpsb
shll
and
mov
push
sti
pop
jl
xor
incl
jns
push
dec
jne
sbb
incb
adc
repz
popa
cld
sub
and
mov
ljmp
lods
out
mov
mulb
fs
push
sbbl
cmp
ljmp
aam
stos
incb
push
jne
cmpl
xchg
add
ljmp
push
mov
add
mov
stos
add
aam
jnp
or
int3
push
lcall
jb
mov
fistl
fcompl
pop
dec
scas
cmp
add
test
rcrb
sbb
scas
call
mov
lods
outsl
scas
out
iret
xor
pushl
xor
jle
ljmp
mov
pop
call
or
cmp
cmpsl
or
std
push
imul
repnz
ja
adc
scas
mov
and
mov
rcll
jecxz
xchg
pop
sub
stc
lcall
and
push
inc
ss
insl
sbb
mov
cmpsl
jge
sub
sbb
ljmp
pop
icebp
or
decb
mov
adc
out
subl
mov
or
xlat
stos
pop
in
sub
es
out
imul
repnz
pop
push
arpl
pop
and
icebp
push
gs
sbb
lods
xchg
jle
es
pop
call
and
lods
xchg
mov
inc
cld
sub
add
mov
and
push
ja
or
or
sub
jmp
negb
test
jmp
scas
inc
les
popf
lock
jae
pop
and
mov
adc
and
in
xchg
adc
cmp
cmp
jg,pn
mov
nop
cwtl
popf
out
dec
pop
popa
or
sub
mov
dec
movsb
out
add
xor
jge
xchg
and
push
inc
xor
jbe
mov
repnz
xlat
lahf
dec
cld
jmp
sub
lahf
cs
lcall
inc
dec
cmp
icebp
incl
sub
pop
lods
lods
cld
pop
cli
mov
fs
xchg
inc
push
inc
dec
inc
inc
and
fiaddl
add
add
dec
mov
aas
xchg
jg
pushl
push
cs
out
adc
add
mov
decl
sbb
inc
jno
mov
imul
pop
in
pusha
add
sbb
pop
das
pop
push
cwtl
out
lahf
ljmp
mov
hlt
xchg
test
fcomip
add
pop
dec
imul
cmp
add
sub
sahf
push
out
and
sbb
push
adc
xchg
clc
jno
mov
pushf
or
xor
incl
enter
aas
xchg
cmpsl
pop
decb
mov
mov
jmp
jne
sbb
scas
sub
add
and
outsl
incl
test
jns
jbe
mov
and
push
inc
inc
fiaddl
leave
push
ljmp
ljmp
push
test
and
sbb
or
add
mov
cmp
rolb
mov
sub
iret
stos
jnp
xor
mov
mov
lcall
inc
sub
xor
in
sbb
cmp
test
push
pop
mov
fcomip
mov
dec
les
imul
daa
mov
lahf
movsb
adc
stos
inc
push
sti
jmp
arpl
test
les
cmp
outsb
sub
int3
fcoml
test
movsb
add
xor
cmp
out
jle
test
hlt
orl
jl
aaa
inc
pop
sub
das
test
cmc
punpckhwd
dec
mov
adc
mov
xor
mov
decl
mov
mov
lods
fidivrl
in
shrb
test
push
dec
pop
mov
dec
lock
push
add
inc
in
cmpb
sahf
mov
mov
mov
pusha
dec
adc
sub
add
jo
insl
insl
outsb
lea
in
das
bound
mov
mov
mov
fbstp
cltd
cs
mov
popf
insb
out
aas
stos
fisttpl
and
jno
push
dec
ljmp
cwtl
in
fsts
movsl
push
sbb
daa
bound
out
and
das
adc
inc
or
pop
in
je
dec
movsl
aam
decl
mov
popf
fsubrl
mov
xchg
lcall
push
mov
mov
les
xchg
cmc
lods
orb
decb
cmp
loop
add
mov
sub
daa
mov
mov
mov
xor
sbb
stc
push
fists
cld
mov
push
cmp
fstpt
mov
mov
inc
bound
jl
jo
cmp
jle
das
dec
gs
mov
scas
ljmp
mov
push
add
pop
incl
xchg
hlt
jg
jns
mov
fwait
xchg
nop
enter
xor
enter
mov
and
dec
mov
xor
or
out
push
adc
punpcklbw
add
sub
inc
sbb
xchg
mov
aad
popa
lds
push
popa
mov
call
add
and
and
scas
push
loopne
movsl
test
movsl
imul
lahf
ret
push
or
incb
cwtl
mov
test
aas
adc
sub
sbbb
lea
sbb
inc
sti
lcall
fsts
mov
into
add
loope
jb
aas
cwtl
test
in
mov
push
or
into
or
pop
jmp
xor
jg
bsr
and
xchg
out
adc
sbb
push
imul
push
mov
test
ljmp
popa
int3
xchg
adc
push
call
js
pop
imul
push
add
xchg
shll
push
mov
bound
scas
out
lahf
jno
dec
mov
and
inc
push
cwtl
addl
pop
scas
imul
cmp
incl
mov
add
push
pusha
jg
inc
dec
cmp
inc
insb
and
add
mov
icebp
mov
push
xchg
inc
add
pop
inc
add
adc
icebp
jmp
cltd
push
mov
rolb
push
jp
ret
sbb
mov
incl
stos
loopne
test
aaa
fwait
hlt
mov
cmp
cmp
add
repz
xchg
filds
movsl
dec
ud0
mov
mov
push
mov
movsb
int
inc
clc
or
mov
loop
roll
lods
dec
pop
cmp
ja
lods
ret
dec
mov
lcall
jge
cmp
pop
adc
push
in
pusha
pop
mov
push
dec
jns
mov
or
cs
and
scas
ror
adc
cli
orb
lcall
jno
jbe
push
mov
pop
dec
cld
pushl
ja
xor
mov
repz
decb
sub
xchg
xchg
popa
ljmp
or
rcll
push
jg
ud0
push
pop
cmp
fmuls
inc
add
pushl
ds
loope
pop
sahf
lahf
pop
popa
imul
cli
sub
int
inc
jne
mov
pcmpeqw
lea
in
cmp
gs
out
cs
cmp
xchg
pop
imul
push
lret
ljmp
icebp
push
dec
popf
out
xor
or
ds
sarl
push
pop
out
push
xor
insl
and
fnstenv
mov
mov
sbb
pop
mov
lcall
cld
scas
stos
clc
mov
mov
rorb
xchg
rolb
cld
call
xor
jns
bound
adc
add
sub
pop
dec
pushf
lds
and
dec
daa
xchg
sbb
cmp
dec
xor
fisubrs
imul
decl
mov
inc
mov
push
xor
std
mov
movsb
stc
push
arpl
inc
insl
mov
inc
sbb
stos
pop
js
jo
dec
sbb
imul
mov
movsb
scas
mov
call
pop
mov
subb
ljmp
test
adc
dec
xor
cmpsl
and
add
loope
mov
xchg
jb
cmp
mov
into
adc
or
cmp
push
pop
xchg
sub
add
xor
decl
cmp
clc
pop
fcoml
mov
xchg
stc
js
and
or
call
xchg
fstl
xlat
iret
aaa
pop
push
mov
sbb
jg
jmp
sbb
leave
subl
es
mov
out
ss
call
enter
lods
cmp
inc
outsb
adc
xchg
jae
sbb
xchg
pop
imul
adc
clc
add
fs
in
rclb
push
lock
jg
cli
mov
pusha
std
and
cmpb
incl
sahf
add
or
jg
inc
hlt
mov
rcrl
pop
out
xor
inc
sbb
insl
iret
cmpsb
push
int
lock
jmp
jl
aad
in
pop
std
mov
es
push
gs
lods
adc
decl
xor
imul
les
cli
sub
adc
sub
push
std
jmp
add
cmp
pop
push
in
push
jle
data16
jg
jb
or
inc
cmp
pop
lods
incl
mov
inc
xchg
in
mov
call
pop
pop
add
lea
sub
xlat
jl
or
mov
mov
pop
out
imul
mov
das
lahf
add
rcll
outsl
fs
xchg
fsubs
ljmp
xchg
aam
inc
out
and
out
push
mov
mov
test
movsl
dec
jnp
loope
cmp
add
aas
xor
xchg
add
aas
xchg
mov
call
movsb
gs
pop
mov
add
pop
shrb
pop
or
cld
ljmp
pusha
jmp
mov
insl
scas
scas
fsubrs
ja
xchg
mov
aad
subb
xchg
incl
or
jmp
inc
bound
fbld
std
je
xchg
mov
sti
xchg
push
in
es
jg
lock
sahf
push
lods
push
je
mov
pop
mov
cmpsb
test
mov
mov
lcall
ret
lds
mov
and
jl
pop
gs
sub
dec
and
sar
inc
fsubs
pushf
aas
dec
mov
mov
cmpsl
jne
test
and
subb
stos
aam
pop
std
push
pop
sub
in
cmpsl
xorps
sbbl
cwtl
cmc
in
aaa
lcall
lea
loop
outsb
or
adc
cmp
or
incl
fidivl
cmp
mov
sub
cmpsb
lcall
mov
adc
in
divl
and
outsl
mov
add
decl
jmp
jns
add
mov
jmp
dec
push
insb
xchg
add
xchg
adc
mov
stc
cmc
inc
call
stos
notl
outsl
inc
xchg
jo
sarl
icebp
lods
xchg
lcall
adc
stos
pop
dec
xchg
and
call
movsl
jp
xor
stos
inc
jg
mov
dec
loope
jmp
mov
cld
out
clc
cmp
test
dec
inc
icebp
push
movsb
mov
dec
enter
or
rcrb
jge
push
sbb
sbb
sbb
mov
outsl
cli
sub
fstpt
mov
icebp
jg
ret
sbb
mov
inc
adc
test
ss
push
call
std
inc
roll
pop
push
jecxz
mov
push
dec
sti
or
addr16
mov
mov
cmp
mov
jbe
fmuls
mov
out
popa
jno
pop
lea
xchg
movsl
sub
arpl
rolb
cmp
decl
push
out
dec
clc
and
hlt
daa
xchg
ret
idivl
cmp
sub
and
add
loop
movsb
xchg
mov
push
xchg
fldenv
orb
movsb
out
adcl
or
cld
push
xchg
fistps
xchg
ljmp
mov
adc
jno
sbb
sub
pop
imul
movsb
jb
decb
pop
adc
jbe
xchg
out
push
adc
adc
mov
add
call
inc
js
mov
ret
xchg
push
cli
adc
imul
leave
xor
mov
adc
test
out
xor
sub
data16
call
call
inc
sbb
xchg
outsb
decb
bound
jg
ljmp
cwtl
cmp
xor
inc
pop
add
jmp
lods
and
jle
gs
mov
add
inc
mov
ret
pushl
and
scas
pop
pop
clc
decl
xor
mov
in
mov
sub
inc
mov
cli
xadd
and
or
incl
sbb
xchg
adc
movsb
xchg
stos
test
pextrw
scas
pop
lods
sti
mov
pusha
stos
push
pushl
lea
xor
lock
fcompp
xor
andb
xchg
mov
pop
cltd
decl
mov
cltd
sti
sub
adc
jmp
cmp
dec
das
stos
loopw
sub
cltd
dec
nop
mov
add
mov
push
incb
ljmp
jle
lret
lods
test
test
rcrb
xchg
andb
ficompl
outsb
incb
insb
test
adc
dec
movsl
lds
push
out
sub
sub
sbb
shll
test
scas
cltd
xchg
imul
pusha
mov
daa
decb
pop
push
popf
inc
test
mov
push
loopne
push
rcrb
push
xor
jns
dec
jo
and
mov
or
inc
sahf
scas
xor
loope
mov
pushl
adc
add
loop
mov
aaa
inc
outsb
das
xchg
aas
arpl
in
dec
gs
ljmp
mov
sbb
in
add
dec
lea
dec
inc
or
xchg
xor
and
decl
test
jle
adc
inc
adc
das
or
add
xchg
sbb
push
clc
fnsave
xchg
pushl
sub
outsl
xor
addb
test
push
popa
fsubrs
data16
jmp
lcall
std
aas
lea
loop
incl
or
sti
and
shlb
fsts
repnz
push
stc
cmp
xchg
js
fsubrs
xchg
mov
cmpsb
ja
cmp
xor
mov
fnstcw
in
push
out
adc
call
jg
sub
repnz
dec
adc
movsl
cmpsl
inc
stos
pop
std
paddd
scas
or
mov
stos
fwait
enter
inc
mov
jne
push
addl
xchg
test
or
out
popf
mov
add
shl
aas
dec
outsb
and
jp
loope
fistpll
and
data16
shrl
sti
xor
test
call
out
cmp
cld
stos
sub
inc
add
jo
xor
ja
add
pop
decl
dec
cmc
or
dec
sti
sbb
call
imul
xor
hlt
lods
out
adc
xchg
clc
push
jbe
or
test
outsl
jg
sbb
xor
lcall
jge
popa
cltd
mov
mov
push
out
loopne
sbb
jmp
stos
mov
scas
pop
orl
ljmp
lahf
cltd
mov
pushl
mov
andl
int
xchg
mov
pop
ds
inc
andl
cmp
pop
add
pop
out
mov
xchg
cmc
stos
pop
pop
out
test
cwtl
loope
jmp
pop
pop
fstpt
movsb
cmp
sub
push
dec
pop
pop
add
cs
mov
call
pop
in
inc
sub
int
mov
adc
cmp
and
pushl
call
shlb
xor
push
iret
cmp
xchg
daa
addr16
jl
add
rorl
pop
add
push
add
cmp
fnsave
je
pop
aaa
imul
fildll
mov
add
dec
push
test
and
sahf
rolw
fwait
out
sub
call
mov
dec
out
cmp
push
mov
divb
jae
and
ljmp
xor
jecxz
xchg
sbb
push
mov
inc
cmp
mov
fwait
and
test
push
dec
and
lcall
fldenv
pusha
jl
rolb
incb
pop
imul
nop
mov
jp
out
imul
mov
cmc
mov
jo
imul
ljmp
arpl
std
xor
roll
push
add
jno
stos
mov
call
sbb
inc
mov
scas
rcrb
test
pop
data16
push
dec
mov
or
and
out
xchg
sarl
adc
icebp
add
mov
mov
inc
mov
cmpb
pop
push
push
scas
aas
je
push
inc
sbb
add
cltd
and
movsl
cltd
jb
add
xor
mov
and
inc
shrb
add
dec
inc
repz
mov
in
and
or
shlb
adc
ljmp
mov
icebp
mov
jo
mov
and
and
pop
mov
mov
inc
sti
dec
xor
ret
cmpsb
pop
push
incl
sti
cmp
cmpsl
jo
xchg
mov
test
mov
and
incb
movsb
scas
ljmp
mov
pushf
movsl
stos
in
arpl
inc
out
popf
filds
pusha
fistl
scas
and
jg
cmpsl
bound
cld
ds
fidivl
mov
push
mov
call
rolb
jb
or
test
enter
sbb
pushl
mov
and
xor
dec
inc
sbb
in
setb
pop
imul
in
in
cltd
push
pop
sti
add
pop
push
into
cmpsl
decl
and
fs
outsl
sbb
aaa
cmpsl
loop
add
test
pushl
pop
popa
or
cmp
inc
sarb
add
pushl
test
adc
mov
insb
int3
sbb
cmp
fldl
jle
cmpsb
lcall
pop
mov
incb
inc
aam
notb
test
out
pop
push
loopne
test
xchg
out
imul
lock
xchg
imul
test
xor
loope
lcall
cld
and
sti
pushl
dec
lds
clc
punpcklbw
and
in
xor
pop
pop
incl
cmpsb
les
pop
jmp
jp
jp
push
xchg
ret
sahf
pusha
imull
pushl
xor
dec
xor
or
mov
into
add
inc
dec
sbb
mov
cmp
iret
and
fdivr
sub
mov
pop
add
cwtl
dec
bound
rolb
mov
outsl
push
xchg
outsb
leave
and
dec
and
mov
icebp
es
iret
or
in
sub
sub
fisttpll
add
mov
inc
sar
mov
mov
push
pusha
nop
cltd
mov
into
add
mov
mov
mov
and
inc
push
mov
stos
adc
dec
cmp
xlat
push
mov
dec
sub
mov
mov
hlt
xchg
add
enter
push
push
adc
pop
jg
pushl
dec
rolb
clc
xor
mov
push
shll
cwtl
into
adc
out
jl
mov
mov
pop
lea
in
movsl
out
cmp
out
ljmp
stc
sbb
and
push
out
pop
data16
mov
jl
ficoms
and
adc
ret
adc
in
sbb
add
hlt
pop
mov
mov
sbb
into
mov
aas
ret
jmp
pop
mov
aas
lods
cwtl
mov
pushl
inc
mov
mov
pop
loopne
fwait
shrl
sbb
and
jmpw
pop
mov
fdivr
data16
mov
dec
loope
rcrl
fwait
in
jae
mov
call
mov
insb
les
xchg
in
dec
dec
add
xor
mov
cli
jmp
push
rcrb
cmp
xor
push
mov
das
ljmp
decl
lock
jmp
stc
xchg
pop
lahf
and
add
je
xor
jecxz
and
mov
daa
xchg
rcrl
pushf
dec
jg,pn
push
decb
outsb
fldl
mov
xchg
clc
repnz
mov
es
bound
cmp
sbb
xchg
loopne
mov
ds
xor
lods
sub
mov
xchg
inc
stos
mov
roll
fwait
scas
jne
jle
insl
test
mov
fisubrs
cmpsl
test
pushf
push
pop
aad
inc
add
mov
cmpsl
clc
dec
stos
stc
adc
outsl
sub
scas
pop
xchg
scas
xchg
dec
test
add
pop
pop
pop
pop
daa
xchg
cmp
sbb
dec
adc
add
dec
cld
ja
pop
fdivs
mov
decb
in
cs
lcall
cmpsl
xor
incl
lea
sarb
pusha
xor
sub
dec
pop
cld
jo
add
pop
icebp
aas
adc
out
popa
sti
cmp
call
outsb
sbb
mov
mov
mov
sub
call
jne
sbb
hlt
int
add
jle
pop
popa
jns
in
iret
or
int
adc
jns
pushl
pushf
jo
insb
sti
sbb
push
push
mov
icebp
sbb
sub
mov
in
pop
mov
xor
das
lods
clc
add
sar
mov
jl
push
test
xor
mov
inc
inc
xchg
incl
jl
pushf
loope
cld
ss
fisubs
popf
xchg
sub
push
call
jecxz
push
and
leavew
push
add
mov
sbb
pop
loopne
and
xchg
mov
push
push
ret
cwtl
jbe
push
xchg
scas
adc
xlat
jnp
and
fisttpll
mov
cmp
cmp
push
lods
shll
pop
out
test
add
lcall
incl
aas
cltd
mov
rorb
out
mov
pop
call
add
pop
test
rorb
push
push
js
xchg
push
mov
and
sarb
inc
in
mov
cmp
rcrl
mov
mov
scas
mov
xchg
push
out
clc
call
lea
pusha
flds
xchg
stc
add
fbstp
loopne
imul
sub
push
dec
lret
cld
out
jecxz
xchg
pop
sub
aas
mov
cmpl
fimuls
or
or
jg
or
dec
decb
out
lcall
std
sbb
decb
aas
jg
lret
pop
dec
lods
mov
shl
xor
sbb
inc
loop
incb
sub
pop
addr16
sbb
das
xchg
mov
xchg
jae
ret
jmp
cmp
lods
incl
adc
daa
xchg
fstpt
cmpsl
iret
das
fwait
loopne
mov
mov
in
pop
xor
scas
pop
inc
out
xor
mov
add
std
push
pushl
add
incb
int3
or
movl
sbb
fistpl
in
sti
or
mov
insl
fbstp
decb
fsubs
pusha
push
dec
cmp
pop
movsl
xor
dec
bound
xor
cmp
add
lcall
push
push
and
lcall
mov
incl
pop
mov
sti
add
mov
pop
shrb
xor
fistps
loop
addl
test
mov
insb
mov
nop
mov
and
incl
outsb
sbb
pop
bound
xchg
push
out
daa
push
xor
std
xchg
pop
mov
jno
mov
push
dec
lods
stos
xchg
stos
fwait
popa
adc
vxorps
sub
stc
and
and
sbb
cmp
lods
lods
mov
cmp
cli
ss
xor
leave
xor
loopne
adc
cmp
repnz
dec
dec
outsb
cld
clc
incb
cmp
cli
mov
fwait
outsl
aas
jl
outsl
loope
mov
in
adc
fsubs
lock
test
jle
pushf
ds
in
xor
scas
clc
fldcw
and
adc
cs
pop
and
stos
dec
cmpsb
pop
incb
add
ljmp
xchg
in
add
out
es
daa
dec
cltd
sahf
xchg
fs
mov
mov
pushf
in
cmp
cli
add
dec
add
mov
gs
call
sbb
pop
enter
mov
sbb
scas
and
dec
iret
xor
fisubrs
fdivp
push
lods
push
jbe
cwtl
out
rclb
je
pusha
and
icebp
decl
inc
popa
popa
jmp
test
adc
fildl
leave
in
cmp
jb
xchg
icebp
and
in
add
rcll
sbb
mov
pop
or
fistl
mov
or
mov
rcrb
loop
call
in
mov
jg
cmc
cwtl
push
adc
hlt
cltd
rorb
sub
pop
cld
mov
arpl
jmp
fcomp
push
pop
les
addr16
ljmp
or
inc
pushf
data16
mov
mov
jmp
mov
sub
out
ss
loope
rcrb
clc
and
pop
adc
fsubs
inc
inc
cmpsl
mov
push
cmc
incl
inc
jecxz
mov
lcall
pop
sti
cld
fistpl
clc
inc
add
sahf
sbb
fstps
and
ss
call
cli
xor
cli
es
fstpt
xchg
iret
mov
decl
incb
stos
lret
sub
hlt
pop
xchg
or
add
mov
push
pop
dec
dec
int
dec
rorb
add
mov
dec
ljmp
js
xor
mov
call
or
les
lea
inc
sbbb
es
rcrb
inc
jl
aaa
out
xchg
jg
icebp
xor
push
fsubrl
xchg
jmp
jecxz
scas
fwait
decl
pop
fs
lcall
jg
or
enter
pop
cmpsb
incb
mov
xor
aaa
movl
clc
scas
cmpsl
inc
fs
enter
add
push
shlb
dec
add
cmp
xor
jmp
loop
stos
popf
mov
iret
mov
sbbl
scas
dec
gs
jg
ljmp
fstl
fstps
test
jle
xchg
lcall
cli
and
xor
cltd
scas
xor
mov
sbbl
sbb
or
les
dec
mov
mov
and
insl
lahf
les
decl
xchg
and
mov
dec
out
pop
mov
and
out
inc
pop
xchg
stc
adc
jo
lahf
das
mov
std
or
dec
fsubs
mov
dec
popf
inc
loop
movsl
xchg
lgs
and
mov
and
fbld
popa
ss
shlb
lds
test
cmp
sub
dec
repnz
lods
xor
ds
pushf
pop
in
mov
push
push
std
cmp
scas
clc
mov
xor
decb
jb
incl
cli
inc
shll
stc
jle
call
cmpsl
in
mov
push
pop
gs
jae
xchg
mov
and
jns
cli
decl
jo
imul
pop
les
jb
call
dec
test
sti
imul
clc
and
rorl
sub
cmp
js
sbb
fsubl
mov
test
add
xchg
cmp
dec
push
test
adc
stc
xor
push
pop
mov
mov
insl
sub
xchg
pop
out
aad
mov
inc
push
mov
pop
in
outsb
add
jg
and
push
mov
outsb
decb
dec
movsl
jmp
dec
loopne
or
aaa
dec
jp
cmpsl
incb
lcall
movsl
fisubrs
inc
out
jp
mov
repz
pop
lret
push
inc
insl
insl
imul
mov
adc
dec
lcall
stos
adc
dec
jecxz
xor
xchg
xchg
pushf
mov
jo
mov
mov
sbb
incb
push
or
incb
cmp
and
aaa
mov
mov
mov
insl
pslld
ljmp
jo
inc
test
mov
jb
lahf
call
imul
cmp
sahf
xlat
ss
clc
push
dec
clc
ss
divb
mov
push
mov
sub
aad
inc
decl
jb
movsb
sub
cwtl
stos
jg
hlt
scas
mov
cmpsb
js
mov
xchg
lds
or
movsl
movsb
dec
sahf
cli
jg
mov
or
aas
cmpb
adc
ljmp
push
faddp
sub
pop
pop
xor
shrb
fcomip
mov
fwait
loope
lcall
xchg
popa
jo
fbstp
int
int
xchg
mov
lcall
mov
mov
inc
inc
out
data16
and
mov
int
mov
jg
stc
mov
jns
push
roll
mov
in
lea
xchg
xor
add
test
dec
cmp
jg
cld
stos
pop
add
or
aaa
mov
cltd
pop
rcrl
pop
scas
mov
pop
insb
mov
jnp
and
mov
sbb
in
mov
jmp
mov
cwtl
inc
outsb
dec
push
movsl
call
push
adc
scas
mov
mov
xchg
sbb
or
scas
ret
movsb
xor
shrb
xchg
rclb
and
fwait
sbb
or
rcrb
xchg
jle
fxch
ljmp
sbb
push
imul
cmp
mov
arpl
stos
cs
gs
sbb
mov
repz
orl
xchg
arpl
or
sbb
cld
jmp
mov
test
push
imul
insl
xlat
jg
jge
pop
jl
scas
cmp
cs
lcall
lcall
das
movsl
rcll
cld
xor
arpl
jmp
mov
mov
fs
mov
push
fisttps
mov
cwtl
hlt
pop
push
push
adc
push
popf
in
ljmp
sbb
mov
and
jo
push
mov
call
push
mov
inc
add
shll
pop
pop
cltd
mov
sbb
call
fsubl
ljmp
jo
and
decb
lcall
mov
or
imul
ljmp
mov
cltd
jns
insl
add
sub
mov
aam
sbbb
dec
in
js
and
xorl
movsw
mov
mov
push
add
pop
xor
jnp
and
xchg
push
jb
xchg
scas
jg
pop
pusha
mov
mov
lahf
adc
pop
addr16
jbe
sbb
out
and
mov
je
ja
mov
mov
cmpsb
je
adc
jg
decl
add
mov
xchg
fwait
call
add
sub
jns
mov
adc
jg
jmp
pop
pop
out
xchg
lcall
ljmp
push
pop
pop
inc
fists
add
test
jns
push
push
mov
dec
push
incl
rcll
push
arpl
mov
xchg
add
and
ljmp
sbbb
cwtl
std
add
push
mov
clc
call
dec
jo
call
fwait
inc
or
call
mov
fcmovu
popf
xchg
lock
jle
inc
inc
stos
pop
mov
xchg
arpl
lahf
mov
push
fsubrl
lahf
pop
dec
add
insl
rcll
gs
lods
and
int3
sub
decl
dec
daa
leave
push
lea
pop
and
xor
push
ja
push
cli
sbb
mov
stc
mov
test
int
xor
clc
jg
incl
add
mov
inc
popa
sti
sub
push
adcl
incb
xchg
sub
mov
pop
in
cmp
ljmp
or
cmpl
sahf
sahf
cmc
movsl
inc
test
popf
sbb
or
scas
inc
push
js
add
mov
js
push
push
mov
mov
loop
lods
scas
sti
or
sbb
push
js
je
and
sub
inc
cld
mov
adc
sub
jg
pop
mov
lods
test
fwait
xchg
ljmp
or
out
xor
lods
xchg
lcall
out
lea
cmc
pop
std
sbb
mov
cmpsl
push
mov
cwtl
icebp
out
cmp
push
push
sub
decl
jno
sub
pop
and
jp
aaa
sbbb
pop
mov
mov
mov
mov
scas
fistpll
xchg
lods
xchg
repz
pop
sub
push
dec
pop
sahf
repnz
mov
in
and
and
adc
or
insb
inc
cmp
dec
push
sub
int
aaa
mov
mov
mov
mov
inc
imul
movsl
mov
loopne
test
aas
add
mov
loopne
arpl
adc
cli
push
sbb
xchg
mov
scas
and
lcall
jbe
decb
or
pop
lds
and
mov
jg
jl
push
jge
rorb
ljmp
dec
mov
cltd
data16
loopne
fwait
xor
push
sub
fidivl
jp
mov
sbb
jmp
or
and
add
inc
and
subb
mov
mov
push
mov
loop
arpl
mov
call
shlb
roll
push
jne
and
in
sub
loopne
mov
jl
imul
mov
jno
push
add
cmpsl
cltd
push
pop
inc
add
xor
in
clc
decl
and
shll
test
mov
js
and
das
and
outsb
int
nop
int
lods
mov
inc
jo
sar
fdivr
lcall
aas
xchg
mov
mov
pop
cmpsb
xchg
clc
xchg
xor
cwtl
pop
jg
mov
mov
sub
enter
jl
xor
sbb
aaa
fwait
lahf
dec
mov
ljmp
shrb
movsl
pop
rcrl
outsl
lcall
mov
and
pushf
xchg
or
inc
and
mov
and
mov
push
or
ljmp
cli
aas
xorl
add
inc
fildl
mov
hlt
cmpsb
lods
or
add
cmova
and
sub
out
cmp
stos
push
adc
mov
ljmp
decb
sub
mov
add
push
sbb
push
out
push
arpl
sub
mov
lret
and
lcall
orl
cmp
pop
inc
incb
xchg
out
or
cwtl
cld
mov
mov
jns
mov
add
cwtl
push
xchg
incb
sar
add
pop
fbstp
dec
jmp
scas
mov
icebp
jmp
call
and
xchg
adc
fwait
mov
push
cltd
and
inc
and
daa
xchg
lea
xchg
lcall
mov
in
mov
xchg
decl
addb
loope
popl
push
cmp
jmp
xchg
test
int3
scas
xor
pushl
sbb
mov
stos
cmpl
cmpsb
repnz
sub
xchg
mov
mov
movsl
inc
push
or
pushl
lods
cwtl
ja
stos
mov
out
push
inc
call
lea
mov
push
cmpb
add
decb
imul
inc
add
incb
add
cld
mov
shll
insb
dec
decl
xchg
rolb
negb
sub
aas
push
or
push
iret
adc
in
aaa
mov
test
call
mov
mov
cmp
sbbb
xchg
pusha
adc
inc
jmp
test
xlat
lods
movsl
adc
sub
add
lea
xchg
std
scas
mov
xor
mov
cltd
mov
jg
mov
cmp
fs
and
add
mov
mov
sub
arpl
cmp
loope
mov
std
sbb
loope
dec
fwait
jge
sub
lret
lds
sbb
pop
cmpsb
test
popa
jg
and
cmp
scas
lea
lods
jbe
xchg
lcall
mov
mov
icebp
xchg
cltd
stos
stos
lcall
cmp
mov
decl
mov
inc
fsubrs
xchg
cmpsb
jnp
cltd
xchg
push
and
ja
or
fs
push
out
mov
cmpsl
ljmp
hlt
mov
pop
xchg
sarb
mov
lods
std
or
mov
or
pop
shrl
mov
mov
push
xchg
push
repnz
xchg
fsts
mov
or
cli
ljmp
decb
cmp
adc
mov
out
into
mov
in
sbbl
inc
iret
sbb
mov
das
ret
and
icebp
jno
xor
int
dec
cmp
iret
xchg
pop
add
scas
jle
das
movsb
push
sti
add
push
dec
xor
clc
popf
add
dec
sbb
decl
add
xchg
jne
mov
lcall
mov
imul
cmp
imul
mov
cmp
add
mov
sbb
sub
mov
add
aad
jae
outsl
sarb
aaa
call
sbb
jmp
push
and
clc
mov
hlt
ret
pop
mov
adc
dec
xchg
mov
jmp
mov
or
call
jb
sahf
sahf
dec
and
xor
or
das
shrb
xchg
out
ja
popf
cmp
pop
inc
lcall
xchg
push
jmp
inc
repz
or
adc
movsb
sti
decb
adc
sbb
nop
mov
mov
loop
std
stos
mov
shrb
jo
xchg
test
xor
cmpsb
loop
movsl
push
jmp
les
add
jmp
sub
dec
js
and
dec
ja
sbb
add
push
cmp
call
xchg
cmp
stos
dec
lods
mov
fcomps
inc
push
inc
add
sbb
cltd
fldcw
add
and
int
je
and
or
push
dec
in
outsb
pop
inc
clzero
cmp
and
je
ret
adc
inc
inc
cmp
testl
in
lret
or
inc
cld
inc
repz
imul
jmp
pushl
ret
jo
arpl
and
cmp
repnz
or
push
adc
cmp
xchg
inc
push
push
stc
add
xchg
jle
icebp
cmpsb
pushf
pop
mov
lcall
lcall
stos
xchg
sub
cmp
ret
adc
or
popa
or
arpl
push
repz
clc
scas
add
and
movsb
mov
xor
push
mov
call
adc
cmpsl
std
decl
call
enter
pop
clc
push
mov
and
inc
gs
stos
push
lcall
and
add
dec
fisttps
stos
in
pop
pop
icebp
mov
das
outsl
lock
out
pusha
mov
cli
dec
or
int3
jb
cmpl
push
mov
ljmp
push
int3
cmp
xor
add
push
jp
adc
ja
bound
shrl
sti
push
stos
sub
divb
mov
sub
inc
inc
lret
mov
pop
loopne
cmp
nop
rclb
add
pushl
retw
daa
mov
es
pop
loop
mov
dec
stos
push
subl
rcrb
push
rcrb
xor
adc
pusha
jo
inc
ret
loope
dec
inc
add
push
stc
pop
popa
loop
cwtl
scas
icebp
ss
or
inc
mov
adc
lret
xchg
ljmp
jb
cmp
scas
in
sbb
push
test
jmp
fldt
nop
lds
je
push
enter
sbb
dec
push
aad
imul
and
iret
xor
in
jle
sub
lcall
ljmp
cmp
popa
popa
cmc
movsl
dec
lret
and
cmp
adc
fisttpl
inc
push
ret
leave
jb
out
xor
jg
icebp
daa
jno
add
push
out
bound
sbb
clc
scas
pop
test
insl
clc
add
adc
jg
lock
in
lahf
inc
ja
sbb
inc
test
push
mov
ja
mov
fwait
dec
shrl
cwtl
mov
incl
sub
dec
addr16
xchg
fwait
int
inc
inc
hlt
ljmp
test
decb
pop
pop
dec
inc
xchg
das
int
pop
cmc
xor
push
lods
imull
test
out
xchg
insb
mov
clc
push
nop
fstps
mov
ja
ja
ljmp
ljmp
cltd
cmpsl
push
fs
xchg
fwait
movsb
mov
jno
sbb
push
test
xor
xor
adc
mov
mov
mov
mov
mov
incl
flds
lds
fstpl
popf
call
pop
js
mov
pusha
pop
out
jge
les
lcall
ret
ljmp
jae
adc
adc
push
xchg
lea
incb
xorb
hlt
pop
cltd
clc
adc
fiadds
lret
sub
decb
fimuls
cmpsb
cld
cmpsl
movsb
cmp
call
xchg
imul
push
cmpsb
xchg
scas
stos
mov
cli
pop
decb
jecxz
jbe
aad
cwtl
lods
ljmp
mov
mov
sbb
out
mov
incl
cmp
jb
fsts
mov
pushl
insl
addr16
xor
jmp
mov
scas
add
inc
in
test
mov
leave
xchg
pop
loope
sbb
iret
sub
push
test
mov
mov
cmp
cmp
icebp
das
stos
xorl
add
repz
push
in
and
and
dec
dec
and
sar
xchg
rcll
stos
lds
sbbb
decl
insl
push
incb
call
xor
pushf
jae
test
add
pop
daa
orps
call
mov
jmp
incl
test
and
andb
notl
xchg
sub
loopne
jae
sar
incl
pop
inc
xchg
mov
mov
mov
jg
jmp
mov
mov
xor
cmpb
lods
call
repz
cld
pop
xchg
and
jl
dec
adc
je
mov
ljmp
sub
insb
cwtl
cmp
loope
sbb
dec
push
call
pushf
dec
out
clc
and
mov
subb
xor
mov
and
cwtl
pop
xchg
popf
stos
ret
mov
ds
pop
incl
sbb
aas
clc
mov
push
cld
sub
pop
ret
loopne
les
lds
lea
cld
es
bound
mov
adc
dec
or
jle
add
xlat
add
fmull
mov
push
shlb
mov
stos
test
and
scas
daa
stos
test
ljmp
ljmp
mov
push
add
cmp
jmp
jle
pop
dec
jae
pop
sbb
or
scas
cmpsl
lods
sbb
sub
pusha
push
adc
inc
ret
and
or
pusha
incb
mov
mov
or
decb
daa
mov
mov
adc
lcall
inc
fsubrs
js
rolb
add
incl
cwtl
out
jo
fs
mov
mov
mov
shl
mov
push
cltd
xchg
movsl
pop
pop
xchg
sub
adc
insb
lds
mov
incl
lock
push
push
decb
data16
lea
loope
aas
and
in
xchg
cmp
decl
xor
or
cld
jecxz
popa
loop
movb
std
or
inc
jecxz
pushl
es
and
inc
or
cmp
decl
test
sbb
push
lock
sbb
xchg
jo
add
addb
cli
cmp
sti
setl
mov
push
imul
push
into
sbb
add
jle
stc
mov
in
mov
mov
daa
je
or
or
mov
es
xchg
cli
or
call
aas
mov
sub
jae
and
adc
inc
push
sub
jecxz
cmpsb
data16
add
sub
xchg
aam
lock
lcall
stc
and
fstpl
mov
push
ret
jp
rorb
mov
loop
mov
add
push
decb
add
nop
push
loop
test
aas
dec
mov
out
push
mov
sbb
add
mov
loope
pop
icebp
sbb
lock
dec
rclb
push
fisttps
inc
xchg
add
or
pushl
mov
sbb
lods
int
movsb
clc
adc
les
icebp
lcall
lcall
jg
loopne
and
xchg
test
das
add
mov
mov
out
cmp
sub
or
dec
add
push
jge
lahf
sbb
lods
fwait
add
jmp
jbe
pusha
icebp
mov
icebp
ds
adcb
adc
mov
test
push
push
xor
dec
sbb
or
xchg
clc
mov
and
inc
call
mov
mov
test
movsl
and
sbb
clc
lods
xchg
mov
add
gs
mov
mov
xchg
ljmp
mov
cltd
std
add
inc
fucomip
and
inc
mov
sub
scas
or
pushf
mov
mov
test
fnstcw
mov
aaa
js
xchg
aaa
cmpsb
inc
outsl
cld
jg
icebp
xchg
adc
mov
mov
out
and
mov
or
sub
mov
mov
push
mov
dec
xchg
mov
sub
sub
jg
lcall
fwait
cli
mov
push
cmp
aaa
stos
mov
xchg
mov
hlt
shll
adc
inc
movsb
add
mov
rcrb
dec
scas
js
mov
test
cltd
mov
pop
sbb
test
fdivrs
push
arpl
cmp
inc
outsb
cmpb
mov
mov
mov
mov
repz
fwait
imul
xor
push
xor
jo
popa
sbb
sbb
rolb
xchg
clc
sbb
sti
push
andb
inc
pushl
nop
in
xlat
mov
fwait
inc
push
push
incl
add
mov
ret
ja
inc
sbb
pop
fisubs
mov
aad
scas
lcall
pop
icebp
aas
inc
insb
popf
xchg
stos
or
pop
or
shll
dec
inc
scas
cmpsl
dec
fsubrs
je
inc
pop
xchg
cli
ds
or
out
adc
imul
jp
decb
pop
lods
decl
mov
or
jge
stos
mov
mov
inc
js
ret
incl
jl
out
add
inc
mov
sahf
mov
mov
mov
ljmp
sub
mov
push
jp
mov
mov
mov
cmp
mov
jg
mov
ljmp
inc
xchg
pop
incb
cmp
jbe
mov
pop
decl
adc
shlb
or
jp,pn
jl
xchg
dec
jg
lcall
data16
add
mov
xchg
jne
jg
sub
push
inc
sbb
pop
add
jmp
clc
cwtl
jno
add
insb
jno
inc
mov
lahf
mov
test
pop
imul
cmp
lods
xchg
mov
stos
push
jge
and
flds
xchg
int
xchg
pop
lahf
jns
incb
ljmp
inc
mov
lcall
fwait
loopne
xchg
clc
pop
jp
testl
in
jnp
jl
add
dec
fs
test
adc
lea
fdivl
icebp
scas
push
in
loope
cmpsb
lcall
cld
mov
fildl
xchg
cltd
in
or
lock
pop
cltd
xchg
mov
test
sub
xor
jmp
cwtl
popl
adc
out
repz
movsl
xchg
out
call
mov
cmpsl
xchg
xor
mov
jmp
mov
gs
lock
mov
jmp
call
mov
mov
fisttps
scas
mov
lock
popf
mov
pop
insb
cld
out
movsl
stos
mov
lods
cltd
inc
in
std
mov
pop
pop
push
out
xchg
cmp
pop
pusha
xlat
ljmp
lcall
sub
cltd
mov
pushf
jb
push
jl
popa
cmpsl
inc
lods
mov
lcall
imul
dec
dec
mov
cmpsb
cltd
movsl
in
mov
mov
paddd
aam
mov
lea
pop
hlt
mov
icebp
movsl
mov
gs
loop
fcomip
in
shll
mov
rorl
in
mov
loopne
xchg
xchg
pushf
ljmp
ljmp
cli
cmpsl
mov
repz
outsl
fwait
mov
mov
scas
cmp
cmpsl
popa
sar
push
stc
in
mov
mov
lock
cld
inc
mov
aad
jo
hlt
jmp
or
mov
xchg
notl
push
jecxz
ljmp
mov
xchg
cld
push
addr16
in
loop
lods
push
fabs
test
loopne
std
mov
mov
notb
inc
jge
cs
icebp
test
test
in
fsts
stos
jmp
mov
jo
inc
mov
fwait
loope
mov
movl
mov
mov
xchg
inc
scas
adc
das
cmpsl
xchg
in
fstpt
out
xchg
incb
dec
incl
test
movsb
scas
ljmp
lods
mov
jg
in
in
cld
fsubrl
add
out
loopne
shll
fisttpl
mov
jp
divb
insb
icebp
mov
jne
ret
int3
mov
push
movsb
call
mov
ja
fldenv
xchg
mov
jg
loope
jl
loop
mov
imul
mov
jge
call
pop
repnz
shrl
xchg
lods
outsb
mov
push
decb
jmp
pop
punpckhbw
mov
and
rcrl
cwtl
mov
bound
jg
addr16
dec
in
fs
mov
xchg
mov
pushl
in
mov
dec
ror
lea
jmp
xchg
cmpsb
stos
push
lret
push
cmc
mov
iret
mov
decl
in
xchg
out
loopne
jle
mov
inc
imul
add
fsubr
mov
lods
xchg
std
icebp
mov
or
in
jg
inc
decb
cmpsb
xchg
or
mov
jg
cmp
xor
mov
divl
shrl
or
cmc
cmp
fcmovb
popa
inc
test
adc
dec
incb
cmp
inc
cmpsb
out
imul
and
adc
dec
addb
pusha
push
sbb
mov
js
xor
pushf
call
and
in
push
pop
cli
call
ret
push
aaa
cmpsl
shll
out
xor
mov
enter
shll
lods
mov
out
stos
pop
add
sbb
mov
push
call
ret
shlb
or
adc
lods
push
or
stos
mov
pop
adc
or
nop
movsl
mov
pushl
mov
mov
notl
or
es
mov
fbld
clc
cmovle
xchg
mov
mov
jle
push
mov
pop
mov
mov
subb
and
test
sbb
insl
fstl
js
mov
xchg
shrl
mov
stos
stc
add
inc
loopne
push
jge
iret
mov
decl
adc
cltd
jmp
fwait
cli
cmp
and
dec
cmp
lcall
or
or
cwtl
shrb
and
or
insb
xchg
lock
mov
repnz
mov
sub
lcall
xchg
sti
and
xor
test
test
xor
jg
or
mov
bound
stos
in
out
mov
fildl
subl
decl
pop
dec
adc
in
sbb
jae
pop
mov
cmp
movsb
xchg
outsb
ret
adc
cs
push
popa
int
dec
loope
lahf
push
or
jmp
xor
es
push
lods
jno
lds
inc
mov
pusha
xor
jmp
jns
and
sbb
int3
xor
sbb
mov
xor
fbstp
lcall
or
decb
call
sub
dec
mov
fs
jmp
outsl
pop
cli
ljmp
mov
fs
and
aam
xchg
les
scas
jge
aad
jmp
add
pop
out
and
push
ljmp
xlat
xor
dec
push
jmp
mov
ljmp
test
mov
xchg
and
push
jp
aas
xor
or
dec
inc
notb
in
call
loopne
fisubrs
pop
ss
aas
cmpsl
lds
jmp
nop
ret
or
incl
pop
mov
sbb
cmp
xlat
mov
jge
and
incb
lock
lcall
pop
xchg
jae
outsl
scas
js
pop
cmpsb
in
pop
sbb
dec
sbb
pop
incl
mov
insl
add
or
xor
cld
lcall
or
add
or
jnp
stc
mov
incl
clc
adc
in
outsb
sub
dec
sbb
mov
sbb
lods
out
xchg
call
fisubrs
sbb
jl
xor
pop
push
adc
cli
lret
mov
out
push
decb
clc
pop
jg
or
adc
loop
ja
add
and
mov
xchg
mov
js
ljmp
int
xchg
dec
bound
adc
and
pop
mov
push
push
jmp
fcmovne
imul
push
or
sub
pop
xchg
mov
mov
clc
movsl
nop
adcb
cmp
mov
and
repz
or
mov
ret
data16
out
sub
mov
fildll
add
push
gs
cs
decb
icebp
xchg
sub
inc
aam
sub
decl
test
incb
cltd
mov
in
xchg
shll
sub
mov
pop
cmp
ljmp
clc
cwtl
and
or
push
int3
sub
mov
and
decl
test
sub
xchg
sub
jg
push
xchg
push
push
inc
jo
in
in
decl
sti
cmp
push
fistpl
cmovb
or
mov
mov
mov
jg
xor
dec
push
sbbl
lock
movb
in
iret
stc
in
xchg
and
push
fs
decl
into
stos
mov
cld
jmp
mov
out
out
mov
scas
fdiv
incl
cmp
xor
scas
gs
jne
jg
push
fldl
xor
fisttpl
int3
xchg
inc
pop
mov
or
jge
xchg
xor
popl
lods
xor
push
push
add
out
lret
mov
cmc
call
movsl
sbb
inc
sub
popaw
stc
rol
loope
loopne
or
pop
nop
pusha
shlb
jo
call
jmp
data16
orl
and
lock
hlt
xchg
outsl
push
stc
ret
inc
mov
pop
decb
or
push
and
js
ret
les
mov
incb
stos
jbe
jns
clc
aad
adc
rcr
incb
cmc
xchg
push
sti
int3
in
ret
cmpb
std
mov
mov
pop
lret
addr16
jno
ficompl
insl
jb
nop
clc
mov
add
popa
mov
ljmp
jecxz
adc
sbb
inc
cli
shrb
dec
and
aad
xchg
mov
and
out
imul
xchg
mov
loop
adc
test
ljmp
dec
incl
jecxz
rolb
out
stc
mov
xlat
in
jecxz
or
incb
ret
push
inc
and
jp
je
xchg
pop
hlt
imul
iret
out
jecxz
xchg
call
adc
adc
decl
cs
out
repz
out
hlt
mov
add
jbe
mov
decl
xor
out
xchg
stos
mov
scas
stos
je
or
out
out
xchg
push
and
in
mov
and
xchg
or
push
adc
hlt
cmpsb
pop
add
jb
lea
std
or
and
add
lock
decl
sar
xchg
xor
aas
rcrb
and
push
enter
or
ljmp
xchg
and
sub
sub
movsl
gs
push
mov
aad
jp
ds
mov
scas
mov
shll
and
push
test
dec
call
ret
shlb
incb
mov
dec
loopne
scas
mov
ljmp
aam
nop
and
lock
aad
push
push
std
fyl2xp1
aaa
decl
cld
scas
jo
sbb
scas
gs
inc
mov
pop
mov
push
add
inc
sti
vmread
jmp
or
or
mov
out
cmp
out
jecxz
inc
lods
adc
sar
jg
or
xchg
pop
fs
cmp
push
pushf
sti
pop
sub
decl
inc
sbb
pop
cli
mov
cmp
mov
lret
aam
pushl
push
jecxz
xchg
jl
pop
fisttpll
push
jg
dec
and
sub
aas
xor
push
jae
popf
xor
mov
lods
push
and
in
add
pop
push
jmp
lcall
inc
cmc
movsb
arpl
inc
call
xchg
pushf
mov
pop
adc
sub
cmp
leave
lock
test
incl
dec
test
dec
lahf
jmp
lea
icebp
push
out
mov
nop
mov
sbb
and
je
inc
out
nop
popa
jmp
movsb
jle
mov
jbe
fcomip
jg
xor
xor
ljmp
inc
pop
xchg
lahf
sub
or
out
jmp
pushl
pop
adc
fdivp
mov
sbb
das
insl
sbb
lret
fwait
mov
hlt
lcall
orl
das
pop
out
stc
mov
jnp
fcompl
addr16
jecxz
xchg
sub
jg
das
mov
jmp
push
mov
and
cmp
jl
push
push
imul
mov
pop
scas
ss
pop
sub
ds
cmp
or
jg
mov
xchg
pushf
sahf
adc
inc
rol
pop
mov
mov
mov
mov
inc
cmp
test
sbb
adc
add
mov
or
icebp
mov
push
mov
les
jmp
xchg
jno
jmp
xorb
dec
inc
movsb
test
decl
lcall
or
outsl
inc
push
fs
pusha
sub
jo
scas
jo
push
xor
xchg
jg
movsb
decl
cmp
outsl
xchg
mov
adc
push
cld
mov
or
xchg
test
sbb
sub
std
push
lcall
sahf
out
cmp
adc
mov
movsl
lea
mov
cmp
clc
fbstp
sti
add
outsl
outsb
popa
mov
add
incb
xor
movsl
xor
insl
push
test
das
pushf
mov
incb
ret
es
add
in
mov
inc
sbb
out
xchg
mov
cld
ret
cmc
or
and
jbe
push
jp
inc
mov
push
xor
xchg
les
shll
pop
decb
mov
or
or
mov
push
call
mov
sub
mov
inc
cltd
inc
xchg
pop
add
nop
xchg
lods
adc
nop
mov
mov
pop
popf
decb
cli
mov
dec
aam
cmpsb
lcall
mov
ret
ds
ljmp
cmpsl
ds
std
mov
mov
pop
mov
pusha
hlt
jle
cmpb
incb
xlat
nop
add
test
jb
add
adc
lea
sub
gs
xchg
fsubp
mov
call
jns
push
arpl
repnz
cmpsb
cwtl
cwtl
xor
pusha
in
stos
inc
inc
mov
dec
andb
jmp
aaa
mov
mov
jo
aaa
fnstsw
pop
jmp
cltd
mov
sub
fdivp
pop
ret
lret
cmpsb
scas
and
stc
hlt
mov
decl
mov
mov
lea
xlat
ljmp
lcall
cltd
pusha
mov
nop
mov
dec
push
int3
push
sahf
fstp
cmp
test
jo
loope
sar
jmp
xchg
sbb
add
pop
mov
push
jp
sahf
sahf
daa
xchg
out
xchg
dec
and
lahf
cmp
dec
aam
adcb
xchg
jae
adcb
mov
xchg
loopne
mov
jne
dec
fs
mov
shlb
jb,pt
ljmp
cli
inc
stc
out
mov
mov
gs
lods
arpl
bound
jbe
incl
arpl
clc
stos
scas
ss
inc
cld
cmpsl
fs
in
adc
cmpsl
push
pop
clc
xorb
pushf
push
cmpsb
mov
sar
shll
nop
mov
test
scas
and
aad
inc
inc
jg
out
mov
fcmovnb
loopne
jecxz
inc
or
mov
das
rcrb
xor
mov
jmp
mov
popl
loop
push
mov
xor
fnstenv
loopne
in
hlt
lcall
popf
sbbl
mov
push
test
cmp
push
jnp
sub
sbb
mov
jns
cmc
lret
mov
movsb
movsl
dec
pop
aam
pushl
clc
ss
xchg
scas
lcall
std
or
es
loopne
popf
jmp
decl
lock
dec
orl
push
lods
mov
jno
movsl
test
cmp
iret
scas
jb
adc
in
repnz
sbb
mov
mov
movsl
stos
mov
mov
fiadds
cmp
test
jle
out
cld
movsl
jne
jmp
repz
mov
test
aaa
mov
in
xor
mov
into
hlt
test
xchg
xchg
jmp
aam
movsl
imul
test
sub
rol
mov
mov
call
jmp
cmpsb
add
mov
incb
gs
orb
fsubp
ljmp
leave
and
push
lcall
loopne
mov
jecxz
in
movsb
cwtl
mov
movsb
lods
mov
fxch
cld
mov
cmpsl
pushf
mov
jmp
pushl
scas
cmp
or
cmpl
xor
dec
ret
xlat
lcall
lods
mov
cli
repz
and
lea
lods
add
mov
cmpsl
mov
repz
push
mov
pop
jge
imul
lds
adc
das
or
pop
rolb
cltd
clc
incl
dec
fidivrs
mov
lcall
mov
daa
mov
add
push
pop
loope
push
ljmp
pop
shrb
mov
pop
pusha
repnz
movsb
ljmp
mov
pop
xchg
and
dec
sarb
add
cltd
inc
sbb
popa
loopne
lock
mov
mov
insl
fbstp
pop
mov
mov
cmp
fiadds
sub
lods
xor
lcall
in
xchg
incb
lcall
mov
jle
and
xchg
push
sbb
iret
add
popf
dec
in
mov
jle
mov
test
jae
pop
stos
daa
mov
inc
mov
xchg
pusha
push
or
int
sub
push
cmpsl
icebp
inc
ret
inc
decb
inc
push
mov
call
sar
push
or
ds
pop
divl
jecxz
and
clc
inc
incb
push
clc
lds
xchg
iret
xchg
call
mov
loopne
xchg
cmpsb
and
sbb
aas
std
or
call
sbb
pushf
and
mov
sahf
sub
iret
mov
xchg
cmp
adc
xchg
ret
popf
adc
or
mov
mov
decl
jo
xchg
mov
mov
mov
add
call
sti
scas
and
pop
decb
mov
jmp
cltd
xor
imul
cmp
das
sub
lcall
jnp
cwtl
aam
movl
mov
sbb
mov
int
cmpsb
jecxz
xchg
cltd
insb
sbbb
lea
test
loopne
and
ljmp
sarl
cmp
test
inc
or
incl
jmp
lock
cmp
mov
sub
push
imul
fidivs
rorl
add
xchg
push
arpl
movsl
nop
add
outsl
hlt
je
lahf
cs
fisttpll
pop
pop
clc
decl
push
gs
or
and
sti
popa
adc
call
popa
push
cli
add
popf
jl
mov
pusha
mov
sub
fstpl
scas
sbbb
mov
sti
cmp
adc
jae
decb
loope
ss
ja
mov
pop
call
xchg
mov
scas
addr16
pushf
dec
fisubrs
pushl
xchg
add
jno
scas
add
mov
lcall
jno
xchg
imul
packuswb
and
les
mov
adc
bound
mov
dec
popa
enter
stos
and
jmp
push
loopne
sbb
sub
inc
mov
bound
aas
and
jge
lcall
and
push
mov
test
mov
push
fldt
push
sub
and
pushf
jo
dec
pop
int3
sub
push
ret
loop
push
cmpsl
jmp
mov
lcall
jo
push
cmp
mov
xchg
inc
pop
int
sub
push
jg
sbb
mov
sbb
test
movsb
inc
test
sbb
push
out
nop
jge
mov
mov
xor
inc
jb
std
push
imul
fcomi
mov
test
mov
mov
push
incb
xor
jb
and
sbb
and
mov
test
lock
inc
loope
add
decl
xor
xor
rorl
sbbl
and
cli
call
mov
xor
xor
outsl
lock
in
xchg
stos
test
xchg
mov
pop
fs
jb
fldenv
out
ljmp
mov
sarb
fwait
popf
fiadds
outsl
inc
push
push
xchg
stc
icebp
mov
push
call
stos
mov
ffreep
test
incl
inc
fst
popf
addl
rol
mov
fwait
and
repnz
mov
inc
jbe
dec
jno
rcrb
fnsave
rol
cmpb
sbb
push
lcall
stos
and
pop
clc
sbb
ret
xchg
mov
sti
push
mov
jg
xorl
xchg
add
scas
pop
insl
out
jl
decb
and
cli
sbb
data16
insb
dec
xchg
mov
push
mov
mov
mov
sbb
ljmp
inc
pop
icebp
es
mov
js
mov
aaa
lcall
int3
mov
mov
fdivl
pop
xorb
mov
jo
fxch
mov
mov
cmpsb
sbb
cwtl
mov
orb
pop
adcb
inc
nop
jne
in
mov
lods
call
cli
fwait
mov
xchg
outsb
add
xchg
decb
xchg
mov
sti
add
sub
flds
out
mov
test
sti
clc
mov
push
xchg
inc
scas
in
call
insl
in
mov
scas
push
or
data16
stc
in
movsl
jg
sbb
aam
cmc
repnz
movsb
outsl
mov
mov
repnz
shrb
ror
test
mov
mov
inc
xchg
out
jle
cmpsb
fstl
icebp
pop
add
mov
push
add
cli
stc
add
test
ljmp
ffree
test
cltd
adc
jp
test
incb
lret
ljmp
movsb
jo
fwait
sbb
mov
nop
fwait
mov
int
mov
loop
movsl
sbb
push
mov
xchg
incb
mov
dec
lea
scas
mov
int3
mov
popl
cmpsl
dec
lcallw
test
inc
mov
push
push
fscale
xchg
nop
stos
lock
loope
arpl
shrl
jnp
aam
jg
loop
rorb
xchg
test
ret
sbbl
loop
nop
lods
xchg
or
fwait
inc
pusha
in
mov
inc
scas
les
imul
lahf
mov
push
push
decl
ret
jmp
mov
mov
in
mov
jg
lock
mov
add
xchg
add
add
or
dec
cmp
inc
pop
test
lods
hlt
les
xchg
stos
decl
stc
enter
xchg
pop
dec
flds
lcall
jns
fmuls
sti
mov
test
xchg
incb
adc
mov
je
es
scas
push
mov
and
and
dec
adc
js
mov
cmpsl
jg
xlat
xchg
adc
inc
test
inc
push
fdivrp
mov
loopne
mov
lret
gs
incl
adc
daa
cwtl
push
loop
fwait
mov
out
lcall
sub
xchg
sbb
lcall
daa
addr16
pop
push
aas
push
pusha
lcall
mov
pop
test
push
imul
add
xor
add
lahf
xchg
or
fcomps
mov
ljmp
dec
popa
xchg
and
shrl
and
arpl
or
icebp
fldl
test
push
adc
mov
aad
fs
sub
and
inc
mov
fsubrp
lret
hlt
mov
and
sahf
xchg
mov
popf
jle
add
push
iret
cmp
ja
fsubrs
inc
mov
fsin
xchg
pop
cmp
lods
mov
cmpsl
data16
loop
les
aam
ljmp
incb
mov
push
push
dec
dec
ja
push
mov
and
in
out
clc
push
pop
sub
cli
adc
lcall
jnp
dec
sbb
out
fidivrl
push
movsb
pushl
mov
jnp
aad
sar
test
push
test
fucomip
fsubp
iret
int
stos
inc
incb
call
mov
xchg
scas
clc
loope
mov
ds
popaw
std
rcl
xor
sbb
icebp
mov
in
in
fnstsw
cmp
lods
mov
sub
xchg
test
out
mov
aaa
mov
aam
loopne
mov
jbe
mov
test
push
repz
jmp
sbb
sbb
add
mov
push
cmpb
ret
push
movsl
xor
push
ds
hlt
rclb
incl
push
addr16
daa
adc
jge
aad
and
incl
jo
or
mov
mov
add
adc
fdivr
push
cmpl
outsl
dec
fnsave
lahf
and
cmp
inc
fisubrl
xchg
mov
sbb
in
sub
fwait
out
in
lcall
and
sbb
stc
out
mov
pop
xchg
in
cmp
shlb
adc
cmpsb
dec
dec
jmp
jg
pop
adc
loop
inc
sbb
inc
sub
lret
and
call
ret
sbb
inc
int
jp
mov
and
outsb
mov
push
sbb
dec
or
sub
push
add
and
lods
adc
js,pt
push
clc
pop
lods
sar
cmp
pop
inc
sub
adc
pop
xor
push
leave
repnz
mov
xchg
arpl
inc
out
mov
pop
push
cltd
jbe
mov
lcall
clc
or
fstl
xchg
cltd
sbb
loopne
daa
mov
mov
notl
js
cmp
ffreep
mov
scas
adc
xchg
pop
lahf
icebp
call
orl
mov
mov
rcrl
or
nop
in
loope
movsb
dec
out
mov
das
mov
loopne
mov
stos
xor
pop
mov
push
adc
jno
and
pop
push
call
out
clc
xchg
xlat
sahf
mov
ja
call
sub
in
dec
jg
cmp
mov
add
jmp
sub
ljmp
adc
cmc
in
lcall
pop
or
mov
jg
push
pusha
bound
popf
cmp
out
sti
scas
mov
aam
cmpsb
mov
outsb
incl
inc
clc
fbstp
addb
xlat
adc
test
sar
lds
pop
mov
sarl
mov
mov
mov
xor
jo
std
pop
decb
and
cltd
mov
ljmp
sbb
cmpsb
add
lods
lcall
push
lods
aad
movsb
lods
mov
leave
int3
xchg
and
mov
shll
test
xchg
popa
pushl
add
popf
dec
push
outsl
int
call
add
jg
in
sub
mov
sbb
sub
push
test
jno
incl
jg
mov
or
mov
push
push
in
int3
aam
mov
aad
jbe
jg
lods
shll
mov
cmp
lock
push
mov
imul
sar
icebp
adc
int
insl
fildl
xchg
loope
test
push
inc
mov
mov
out
incb
movsb
mov
std
cwtl
fchs
ljmp
lret
cmp
mov
pop
jnp
outsl
and
lahf
jb
stc
adc
or
ljmp
test
decb
jg
fnstcw
lret
xchg
andl
rcrb
pop
mov
sbb
cmpsb
movsb
inc
je
out
xor
xorb
loopne
cltd
push
jmp
xchg
movsb
lock
adc
je
cmp
push
test
and
sti
je
xor
lss
add
shl
icebp
not
adc
mov
iret
iret
aam
mov
shr
fwait
ljmp
mov
sub
fmul
cwtl
int3
jns
jg
fistl
clc
mov
xchg
push
cld
enter
fwait
adc
mov
sbb
add
clc
push
push
ret
ficomps
sbb
or
xchg
mov
pop
loop
jmp
inc
jl
bound
mov
stos
idiv
sbb
loop
lods
cmpsb
sub
push
and
mov
jo
jmp
push
mov
stos
test
decb
je
loop
push
dec
fwait
pop
popf
mov
lcall
test
lcall
filds
pop
mov
popf
and
shrb
rcrl
iret
iret
pop
mov
mov
cwtl
mov
iret
iret
iret
or
cmpsb
or
inc
leave
cmp
xchg
aad
push
test
stc
or
mov
ljmp
bound
xorb
scas
stos
lcall
xchg
fwait
lods
fcmovnbe
loopne
xchg
adc
sar
pushf
jae
and
fdivrp
in
sti
mov
lods
data16
pop
fdivrl
pop
adc
ds
pop
pop
jecxz
inc
mov
mov
jmp
in
fimull
rclb
iret
in
jecxz
dec
pop
mov
andl
dec
cld
ret
clc
call
loop
stc
decb
push
shrb
je
rorl
sub
dec
pop
cld
jb
jg,pt
push
call
sbb
scas
in
test
scas
inc
lret
push
mov
cld
lods
stc
mov
mov
jnp
mov
push
repz
mov
or
incb
outsl
xchg
in
lahf
sub
int
push
mov
lods
adc
int
jmp
lcall
out
ret
lea
nop
add
lcall
jg
add
repz
push
add
push
mov
incl
xor
mov
jmp
icebp
mov
jae
repnz
dec
pop
scas
test
mov
jbe
and
enter
out
adc
aaa
jns
repnz
jno
dec
dec
lea
loopne
and
pop
pop
sti
out
adc
dec
cld
decl
mov
inc
sub
jmp
out
int
pop
lods
les
incb
stos
icebp
lcall
in
mov
adc
out
mov
push
mov
jmp
incl
addb
loop
mov
push
inc
rcl
fisubrs
mov
xchg
cmpl
ss
loope
adc
mov
test
rcr
repz
xor
xlat
leave
decb
out
clc
lcall
jmp
popf
xlat
nop
add
mov
ss
std
push
cmp
or
and
xor
int3
cmpb
lods
repz
arpl
mov
push
addr16
insb
pop
out
in
scas
inc
adc
mov
add
or
mull
mov
and
lcall
jne
or
pop
mov
xorl
push
mov
das
xchg
repz
jg
repnz
fs
cmpsb
and
xchg
sbb
and
jl
adc
out
and
sbb
fldl
sbb
decl
mov
movsb
jo
fsubl
fidivrl
clc
xchg
outsl
lock
cmp
ret
aam
fwait
lods
xchg
out
imul
std
lock
jecxz
mov
dec
leave
xor
repz
add
push
xor
or
push
fsubr
aam
lret
push
and
lds
pushf
pushl
lock
insl
int3
pop
shll
insb
sti
fdivr
sub
sub
push
and
ljmp
jl
enter
xchg
push
pushf
insl
popf
rcrb
call
push
fstpl
iret
sub
jecxz
ds
dec
mov
or
inc
push
xor
add
int
decb
daa
rcl
inc
pop
ljmp
dec
jg
and
mov
hlt
add
incl
outsb
pop
stos
cmp
sbb
inc
mov
inc
mov
int3
loope
scas
movsb
icebp
push
sub
mov
xchg
sub
add
inc
jmp
pop
es
std
push
clc
incl
lcall
or
lods
jmp
cli
pushf
and
dec
fdivrs
pushl
and
outsb
outsl
pop
cmc
out
adc
xchg
adc
hlt
popf
rclb
adc
mov
mov
xchg
mov
cmp
pop
loop
out
add
fdivrp
into
stos
popa
inc
pop
loop
hlt
cld
sbb
incb
loopne
loope
fdivl
decb
mov
mov
ss
mov
pop
adc
mov
push
jecxz
adc
xchg
mov
repnz
jbe
shr
xchg
add
bound
incb
push
aad
aam
xchg
shll
mov
jne
mov
mov
jne
or
rcrb
mov
pop
sbbb
call
jb
jmp
decb
push
frstor
rclb
mov
lret
xchg
xchg
pushf
jo
cmc
decl
test
mov
cmc
ds
lods
sbb
mov
xor
cmpsb
decb
xor
push
rcr
stc
xchg
adc
cwtl
jp
incl
shrl
in
mov
out
lret
xchg
and
mov
inc
mov
mov
mov
mov
stos
add
cmc
jmp
lret
xor
sbb
mov
outsl
mov
lret
and
shll
cmpsb
add
xchg
loop
mov
test
pushf
stos
cli
aam
addb
pop
and
test
leave
sub
push
push
insl
loop
repz
aas
xchg
or
iret
int
lcall
scas
cld
ret
mov
xlat
mov
std
or
lea
add
fxtract
push
dec
divl
xchg
sbb
lds
outsl
fwait
aaa
lods
subl
in
nop
mov
aam
out
adc
hlt
push
sbb
in
adcb
inc
sti
icebp
repnz
jecxz
hlt
mov
inc
pop
sbb
cld
ss
in
and
lcall
add
mov
lcall
xchg
es
sub
mov
sbb
call
adc
inc
push
jns
out
and
mov
add
cmp
clc
jg
or
sahf
mov
into
loopne
jns
mov
add
cmc
mov
loope
loopne
adc
add
cltd
sbb
jno
ljmp
lock
sbb
or
ljmp
mov
xchg
into
mov
cltd
xchg
ret
movsl
cltd
xlat
inc
stos
and
ret
xlat
and
and
fabs
sbb
fldenv
mov
test
mov
cmp
ret
aas
leave
testl
or
mov
clc
lcall
jecxz
cltd
es
sahf
inc
jge
and
fs
incl
push
fucom
and
sub
movsb
pop
test
and
push
mov
shlb
adc
scas
mov
xchg
lcall
mov
stc
out
scas
sbbl
int
push
cld
scas
clc
adc
in
incb
jbe
xlat
fdivrs
xchg
mov
test
rolb
clc
and
rep
mov
pop
les
xchg
xchg
lcall
adc
test
push
adc
in
cmpsb
xchg
or
movsb
mov
int
push
pushf
repnz
and
mov
popa
out
push
hlt
repnz
int
outsl
mov
test
jecxz
lods
mov
mov
lea
jmp
and
in
cli
nop
mov
stc
lds
mov
incl
cmpsl
and
push
mov
xorb
jb
stc
das
sbb
push
mov
lret
shl
rcll
and
xchg
repnz
mov
cli
mov
les
out
cmp
lea
mov
std
pop
ljmp
add
adcl
cmp
fidivrs
jge
psraw
mov
fs
roll
shll
pop
pop
lods
mov
xor
inc
aaa
jg
cmp
in
scas
cmp
les
sbb
mov
fwait
jbe
scas
sar
mov
pop
fwait
jno
dec
fisttpll
scas
or
shl
jg
incb
or
dec
cld
push
mov
cmpsb
xchg
sub
inc
call
lock
decb
mov
fistpl
fprem
lahf
or
push
mov
jns
inc
jne
lret
repz
add
sub
sbb
sbb
js
call
and
mov
test
rcrb
fcmove
cmpsb
sub
mov
add
mov
rorb
loop
pushf
sti
xor
push
in
addr16
xor
mov
mov
bswap
sub
mov
xlat
cmp
add
xchg
stc
sub
cld
cld
test
xchg
xchg
and
and
and
ss
dec
loop
sbb
dec
pop
dec
cld
aad
pop
aam
xchg
push
xchg
incb
test
stc
push
fbstp
stos
stc
andb
cmpsl
ljmp
xchg
or
lcall
incb
aam
mov
sub
mov
dec
cli
sub
and
push
mov
ljmp
lds
mov
lret
inc
dec
cld
pop
cld
std
sub
shrl
sub
push
nop
clc
inc
ds
lahf
push
fdivr
sbb
in
movsl
push
clc
sub
pop
lock
cmpsl
and
adcb
out
sbb
jmp
pop
pop
mov
daa
xchg
ljmp
push
inc
dec
mov
daa
mov
and
loopne
sbb
in
mov
je
push
dec
and
xchg
in
sbb
add
adc
in
incl
in
xchg
and
das
clc
rclb
and
mov
adc
test
mov
dec
pop
loopne
push
push
incb
and
jb
icebp
ljmp
lds
cmpb
adc
test
ljmp
cmpsb
sbb
cmp
bound
cmp
xchg
std
inc
add
and
in
xchg
add
add
mov
das
add
pop
mov
pushl
shrb
ret
dec
popa
icebp
adc
js
jno
mov
fstps
sub
int3
cmpsb
insl
cli
adc
inc
mov
mov
fdivrs
add
add
jg
rcll
lahf
in
daa
popf
lcall
push
sbb
adc
or
or
xor
jmp
add
and
push
mov
mov
ljmp
and
mov
fcoms
pop
cmpb
mov
add
sub
data16
decl
or
call
les
fisubl
ljmp
jmp
stos
fwait
movsl
adc
aad
or
movsl
inc
call
mov
or
ljmp
cmp
mov
sbb
outsl
pop
and
jo
lds
cmp
jb
sbb
shrb
lods
adcb
cwtl
mov
push
popf
jl
and
call
leave
and
daa
outsl
push
imul
call
in
pushf
sbbb
and
pushf
bound
mov
cmc
jg
xchg
sub
js
mov
inc
fcoml
dec
test
aas
sub
push
dec
mov
mov
mov
sahf
orl
jge
cld
mov
jnp
sbb
push
xor
je
cmp
scas
dec
mov
dec
popa
sub
mov
pop
cld
das
xchg
push
and
push
inc
jp
and
adc
sub
inc
jecxz
mov
test
mov
popa
in
pop
out
xor
mov
add
jo
cld
add
sti
sub
stos
sar
sub
and
push
mov
jmp
or
sbbb
aaa
pushl
mov
sbb
jg
mov
les
sahf
mov
sbb
dec
jb
dec
mov
sub
paddd
dec
orl
icebp
jg
xchg
xchg
sub
sbb
insb
insb
adcb
std
call
pop
pop
fdivrs
cwtl
into
or
sbb
and
decb
jecxz
xchg
and
xchg
inc
js
jp
outsl
dec
incb
mov
stos
pop
mov
inc
sar
mov
mov
sti
add
stos
jno
mov
mov
inc
mov
cs
jo
xor
pushl
mov
lahf
pusha
setbe
adc
decb
aaa
add
pushf
xchg
cwtl
das
add
add
stc
sbb
cld
sbb
mov
mov
jmp
loopne
jns
cmp
sar
das
clc
jg
fldenv
daa
xor
dec
and
lret
call
test
decl
mov
cmp
repnz
call
ljmp
sahf
push
pop
cltd
ss
into
xor
test
add
lret
adc
jl
test
mov
or
cmp
cmp
xor
fimull
cli
and
lea
outsl
icebp
push
mov
dec
roll
movsl
push
push
xorl
cltd
incb
xchg
andl
xor
xchg
dec
dec
hlt
incl
sub
test
lock
sub
or
cmpsl
mov
std
and
jnp
stc
pop
mov
mov
aaa
lcall
aaa
test
lret
enter
arpl
cmc
sub
jg
pop
lods
jae
loopne
mov
pop
orl
fwait
mov
lods
outsl
sti
add
cmp
mov
sub
push
test
xlat
sbb
and
lahf
jo
pop
inc
jmp
jnp
mov
push
fidivs
int
jmp
mov
sbbb
mov
aaa
ljmp
pop
jnp
jno
push
stos
dec
lret
aam
lcall
mov
les
cmc
add
mov
add
ljmp
xchg
sbb
jb
in
pop
cmpsb
outsb
inc
lcall
incb
adc
add
pop
decb
xor
jmp
pop
stos
scas
mov
and
push
lcall
push
adc
inc
cmp
sub
cld
dec
dec
mov
inc
incl
mov
mov
cld
stc
add
fisubl
loope
xchg
lock
jbe
ja
mov
test
aas
adc
cmpsl
mov
mov
xchg
mov
lahf
fisttps
inc
pop
popf
dec
movsb
xchg
loopne
in
mov
dec
mov
test
test
out
shrb
mov
daa
leave
cmp
lcall
mov
cmp
mov
mov
adc
mov
decl
mov
js
lods
mov
cmp
mov
sbb
leave
cwtl
dec
fs
out
lea
subl
movsl
adcb
jns
aas
mov
mov
sbb
pop
add
insl
outsb
adc
push
sarl
pop
lcall
clc
dec
stc
mov
cld
mov
shrb
data16
or
int
sbb
icebp
jbe
adc
inc
loopne
into
scas
xor
jne
call
xor
jmp
mov
mov
cmpb
outsl
mov
and
loopne
add
call
mov
or
xchg
xchg
and
arpl
jg
stc
xchg
lock
push
pop
pushf
inc
push
dec
or
decl
rcr
mov
sarb
sahf
ds
mov
mov
dec
jnp
mov
xor
add
xchg
xor
push
dec
clc
cmp
incb
in
test
mov
dec
pop
inc
lea
and
iret
jecxz
mov
incl
inc
gs
lahf
and
fcomps
scas
push
sti
inc
mov
cli
pop
xchg
sub
stos
lcall
mov
mov
inc
sbb
loope
ja
mov
and
out
xorb
decb
scas
js
cld
mov
cltd
mov
xchg
lods
aas
shl
push
scas
mov
xchg
lret
cltd
stos
ror
mov
scas
ljmp
cltd
xchg
out
cwtl
mov
mov
sub
cmp
lods
shrb
cwtl
neg
mov
pop
sar
sbb
jmp
movsb
test
jmp
mov
icebp
bound
mov
fwait
push
xlat
std
mov
mov
mov
fdivl
incl
adc
scas
pushf
shl
mov
int
mov
loopne
xchg
add
adc
decb
jle
xchg
mov
and
add
incb
push
cwtl
push
in
add
xchg
cs
and
out
sbb
push
cld
dec
cmp
xchg
out
mov
insb
fistpl
push
scas
inc
rclb
adc
je
pop
lahf
mov
je
add
inc
jl
push
jo
movsb
xor
lcall
int3
test
xor
or
int3
fwait
cmp
push
mov
sub
decl
aas
int3
sub
xchg
fs
sarl
cli
dec
mov
cmp
das
jp
mov
int
mov
call
push
xchg
cmp
cmp
and
xlat
decl
sahf
sahf
loop
popa
clc
pop
dec
adc
es
xor
add
cmp
adc
cmp
das
pop
dec
cld
cmp
jbe
fstps
pushf
and
fcomip
mov
lret
pop
ds
sti
addb
aaa
cmpsb
cltd
rorb
mov
call
shll
mov
and
xor
loop
add
ds
push
inc
aas
push
lcall
mov
cltd
inc
dec
test
cmp
stos
cmpsb
imul
loope
mov
mov
xchg
push
fdivs
test
cmp
mov
mov
jge
fistpl
xchg
sub
pop
mov
int3
dec
mov
decb
test
xchg
inc
insl
test
cmc
pop
imul
decb
sbb
outsb
incb
lods
jo
adc
mov
jg
push
ljmp
xchg
pop
push
xor
sub
xor
ljmp
pop
inc
mov
decl
add
pop
sub
ret
adc
xchg
in
test
int3
or
add
imul
mov
sub
xchg
popf
add
scas
clc
pop
add
inc
loope
lahf
cmp
jle
mov
loop
mov
push
shlb
es
call
xchg
in
movsl
sarl
shll
sbbl
cmc
ljmp
mov
and
push
cmp
add
push
incb
nop
pop
ret
popa
std
push
mov
add
test
or
mov
inc
adc
rolb
lods
andb
scas
add
jle
xchg
mov
cmp
pop
sar
insl
jecxz
inc
adc
data16
xlat
loopne
mov
cmpsl
xchg
inc
call
sbb
fsubr
cmp
lods
add
sub
lcall
cmp
push
push
jo
test
mov
pop
ljmp
roll
add
sub
or
adc
incb
lea
incb
std
jg
stos
inc
or
dec
pop
stc
addr16
test
dec
jmp
add
test
call
mov
xlat
pop
inc
dec
test
pop
mov
popf
repz
xchg
xor
mov
dec
lcall
dec
mov
sub
and
xor
mov
test
xor
sahf
ja
int
cld
pop
lock
movsb
mov
jo
ljmp
xchg
adc
std
decl
or
add
lock
inc
jge
fldcw
adc
push
repnz
cwtl
andb
xchg
cmp
decl
and
es
icebp
cs
in
dec
arpl
loope
mov
decb
gs
aam
dec
mov
xchg
insl
movsl
hlt
sbbl
mov
pushf
int
push
mov
icebp
cli
or
ficoml
lods
incb
call
mov
scas
cmpsl
mov
or
lds
and
lcall
jb
adcb
nop
xchg
and
dec
subb
cmpl
and
dec
sar
push
cld
ds
fdivl
lods
je
adc
sahf
decl
mov
sbb
icebp
inc
pop
push
cmp
cmp
xchg
adc
aad
rcll
mov
test
ljmp
mov
decb
aas
add
jae
pmaddwd
decb
inc
push
cltd
out
js
adc
decl
stos
cmpsb
outsl
mov
xchg
mov
adc
mov
test
clc
addb
pop
mov
mov
mov
cld
addl
sti
mov
jg
aaa
dec
les
dec
cmp
js
xchg
cmp
push
push
sbb
dec
inc
push
inc
pop
lods
scas
mov
or
ds
mov
mov
pop
sbb
call
rolb
pushl
sbb
mov
inc
cmp
in
movsb
outsb
pop
xor
mov
ljmp
jmp
les
and
pop
adc
fs
push
cwtl
inc
pop
jg
icebp
aas
decb
mov
sahf
decb
mov
adc
jne
ret
mov
out
cltd
mov
loop
lcall
lods
cmpsl
mov
xor
ss
sti
mov
stos
jo
mov
scas
shrl
shll
cld
decb
xchg
add
scas
mov
movsb
loopne
std
mov
cmpsb
fisttpl
push
lods
movsb
jo
scas
adc
lods
mov
imul
fwait
or
mov
data16
stos
test
sub
les
adc
icebp
pop
std
push
inc
push
lea
jg
or
ja
mov
fs
add
test
rorl
push
pop
mov
push
cld
dec
pop
das
cmp
or
scas
addr16
xchg
icebp
incl
into
sbb
sahf
jne
push
pop
stos
dec
pop
rorb
mov
xchg
xor
push
sub
incl
pop
add
test
movsl
dec
jb
es
and
cmpsb
cwtl
imul
push
rol
mov
inc
cli
incb
mov
into
addr16
push
in
scas
mov
out
fwait
aaa
out
mov
int3
in
pushf
mov
repz
out
test
jmp
lcall
int
adcb
cmp
pop
add
andl
mov
lcall
and
icebp
mov
movsl
sbb
test
pusha
shll
adc
mov
sub
mov
icebp
dec
add
cmpsb
mov
les
je
adc
lcall
mov
loope
pop
mov
mov
cmp
out
cs
sub
cmp
inc
sti
add
dec
mov
pusha
sbb
lea
dec
fistpl
std
cmpsl
in
xchg
nop
pusha
pushl
jmp
jle
rolb
enter
scas
inc
mov
cmpsb
pop
adcb
incl
push
out
push
and
out
addb
inc
test
push
xchg
lcall
int3
call
mov
aad
push
std
mov
insl
inc
add
jge
outsl
scas
xchg
and
pop
nop
mov
mov
incl
xchg
cmpl
adc
cmpsb
incb
and
xchg
mov
jg
decb
stos
pop
fwait
incl
jle
sbb
mov
cmp
enter
pop
mov
cmc
xor
mov
mov
pop
sbbl
in
xor
fildl
jo
addr16
push
lods
sarl
mov
cmpsl
lock
mov
push
test
lahf
and
cmpsb
fwait
mov
pop
int
mov
icebp
push
mov
sub
mov
std
push
pushl
and
pop
inc
lcall
sbb
dec
call
aas
das
mov
push
mov
aad
xchg
mov
xor
lods
xchg
stc
icebp
fs
xor
pop
adc
lock
hlt
pop
pop
and
xor
clc
xor
call
adc
lahf
scas
loopne
mov
fdivrl
fsub
arpl
or
lock
je
cmpsl
cmp
lods
push
or
call
js
ret
clc
rclb
fldcw
mov
nop
pop
loop
add
inc
ret
push
mov
std
in
sub
sub
out
inc
scas
andb
fsin
xlat
jns
ljmp
adc
fucomi
inc
in
std
js
cltd
pushf
mov
xlat
mov
sub
xor
incl
mov
jp
cltd
mov
mov
ljmp
jge
lret
push
scas
push
xchg
sbb
jl
and
mov
cld
and
cmpb
rcr
gs
xchg
jno
hlt
mov
cmc
push
stc
rclb
test
fst
dec
stos
and
stos
fwait
or
add
adc
fisubrs
aad
imul
push
in
testb
sub
int
cmpb
data16
out
stos
add
sub
mov
aad
push
inc
sti
loopne
mov
mov
scas
jb
xchg
rclb
sti
clc
lods
mov
fldl
mov
mov
jmp
daa
call
fidivrl
jp
fadds
inc
add
call
mov
test
out
pop
lods
xchg
mov
dec
les
std
in
cltd
fdivr
jg
fisttpll
jno
fstps
adc
mov
mov
cld
sbb
out
clc
fsubrs
fcmovnb
and
xchg
add
lret
mov
and
jo
sti
pushf
sub
lea
movsl
nop
adc
cld
fwait
lahf
adc
jno
leave
add
jno
sub
push
inc
mov
pop
sbb
adc
lret
popa
out
pop
mov
test
clc
cs
xchg
and
mov
ret
adc
or
jge
and
inc
jmp
mov
and
aas
xchg
jno
lock
cmpl
lds
decb
mov
movsb
incl
xchg
xor
fwait
gs
cld
aaa
pushf
dec
jbe
daa
cltd
lds
add
stos
or
hlt
das
lcall
fldl
cwtl
call
dec
sbb
xchg
shrl
xchg
dec
test
decl
es
in
jl
clc
jecxz
scas
cwtl
cli
push
adc
push
popa
and
xor
in
insl
loop
pusha
push
sub
inc
dec
cmc
rcll
daa
outsl
xchg
testl
sub
rorb
dec
stc
leave
call
idivb
push
pusha
iret
call
push
decb
xchg
sub
std
mov
cmp
and
or
call
pop
push
in
outsb
call
pop
incb
lcall
dec
cmp
xor
test
loop
or
sub
lods
jo
test
xor
cli
call
sub
xor
inc
adc
jp
fcmovne
rclb
push
mov
sarl
cmpsl
pop
aas
lock
jg
lds
pusha
push
test
xchg
dec
inc
testl
aad
insb
out
cmp
push
decl
out
xchg
xchg
popa
outsb
jg
adc
pop
arpl
out
sbb
sub
das
pop
or
in
into
adc
std
add
add
cmp
and
xchg
adc
cmpsl
scas
int3
incb
out
add
mov
rolb
fcomip
xor
sub
js
xor
sub
loopne
sbb
or
jp
mov
fmuls
mov
je
add
adc
repnz
cmp
jbe
pop
xchg
in
imul
cli
flds
mov
rorb
and
adc
lds
dec
in
das
sahf
mov
dec
add
mov
pushf
or
add
test
scas
cmpsb
repnz
decl
dec
pop
add
xor
jae
push
lcall
dec
adc
mov
push
ret
fidivl
or
in
cli
stos
test
pop
sbb
lcall
fs
lods
push
jg
aas
scas
loop
mov
cmp
xchg
add
sub
dec
inc
js
xor
or
dec
and
sbb
inc
es
icebp
mov
mov
scas
inc
cmp
xor
mov
lods
repnz
sahf
stos
jg
pop
sub
mov
inc
fwait
jg
das
incb
das
xchg
and
pop
mov
popa
sub
dec
xchg
sbb
cmp
jns
ljmp
sbb
lods
and
cmc
xchg
mov
and
das
lahf
pop
or
mov
shll
pusha
adc
inc
pop
int3
mov
pop
or
decb
incb
out
cld
inc
ljmp
pop
or
add
jmp
sub
xchg
adc
jo
jbe
adc
ret
out
rclb
je
gs
xor
jle
andl
xor
cld
and
incb
sbb
jmp
jecxz
data16
xor
fsubs
pop
outsl
mov
inc
nop
jl
pushl
cmpsl
loopne
jb
mov
pop
mov
mov
lods
push
adc
rcrb
inc
clc
stos
push
xchg
outsl
inc
xchg
dec
imul
test
push
nop
sbb
fsubr
decl
mov
cmp
sbb
test
mov
pop
test
pop
adc
sub
sbb
rolb
hlt
mov
mov
mov
loope
outsb
mov
cwtl
in
push
mov
dec
cmp
mov
lods
push
sub
incb
jg
mov
pop
jmp
ss
cmpsb
xor
sbb
int
sbb
inc
insl
mov
movsb
andl
jb
insl
loop
push
lock
test
jl
pusha
sarb
mov
rorb
pusha
cs
mov
ds
loopne
mov
push
incb
inc
mov
bound
ja
xchg
aaa
jge
push
inc
fcmovb
cld
inc
adc
cld
addb
pushl
aas
pop
add
scas
pusha
sbb
out
xor
and
or
call
addr16
push
aas
pop
or
pop
push
pop
fwait
popa
jmp
dec
pop
mov
mov
sub
cltd
adc
call
xor
dec
xor
mov
inc
rorl
stos
cmp
add
aad
mov
incb
sbb
stos
mov
imul
xchg
cs
xorb
into
jl
push
cmpsb
insl
fimull
mov
scas
test
pusha
daa
push
clc
cmpsb
dec
repnz
mov
inc
cld
imul
decb
mov
shll
dec
std
mov
and
dec
xor
loopne
pusha
stc
js
add
pop
je
cmpsb
inc
lds
xchg
incb
int
cli
pusha
jbe
or
aad
jg
aas
fistps
inc
gs
sub
stos
into
sahf
stos
jg
test
nop
out
adcl
xchg
movb
outsb
dec
je
fwait
dec
orb
mov
ja
push
dec
mov
dec
je
mov
cmp
push
xor
inc
insb
decl
stos
scas
xor
jnp
test
rorl
aam
sahf
jb
je
dec
add
or
dec
push
push
fs
jmp
jg
cmp
adc
xor
pop
cmpsb
ret
bound
pusha
pop
incb
xchg
test
xchg
incb
aad
bound
dec
push
decb
test
dec
mov
or
jmp
adc
mov
ljmp
sbb
outsl
add
cmp
push
push
xchg
out
nop
dec
pop
test
sub
jmp
adc
pop
pop
xchg
add
std
fbld
sbb
mov
hlt
data16
xor
es
inc
testb
addb
inc
cltd
cmp
or
movsl
das
mov
repz
outsl
jnp
lretw
cmpsb
aad
clc
addr16
inc
dec
fs
ret
das
mov
dec
loope
mov
adc
mov
and
xor
mov
xor
adc
mov
push
inc
outsl
push
xchg
mov
mov
out
aaa
pop
shll
push
inc
jg
repz
aas
and
xor
adc
pop
jbe
inc
pop
pop
lds
std
and
add
test
or
add
add
insl
mov
loop
mov
repnz
jo
jne
fcmovbe
or
movsl
fnstenv
pop
add
xor
pushl
sub
faddp
ds
popa
addr16
stc
xchg
fisttps
push
addr16
xchg
pop
lret
mov
addr16
push
stc
push
jne
fists
je
jmp
js
jae
sbb
inc
popa
popa
call
dec
adc
pop
sbbb
inc
pop
mov
mov
sbb
xor
xor
and
sub
pop
push
mov
in
aaa
ljmp
adc
mov
mov
mov
jge
xor
sub
lcall
lods
decb
and
mov
mov
mov
lcall
jne
insb
incb
push
inc
jp
inc
mov
and
jo
test
inc
xor
data16
ljmp
push
aaa
movsb
lds
cmp
sti
and
adc
lcall
mov
push
in
popf
xor
bound
push
inc
cli
mov
pop
inc
sub
mov
lods
movsl
mov
clc
stos
cmp
xor
jg
inc
lea
mov
mov
mov
mov
bound
jg
incb
mov
inc
cld
and
hlt
dec
shll
subl
sbb
inc
shlb
in
test
or
pop
jge
je
insb
pop
callw
pop
xchg
push
ljmp
arpl
add
mov
popa
loope
aam
dec
cmp
sbb
lods
push
insb
repz
int3
push
xchg
mov
stos
decb
jb
test
jo
outsl
sbb
push
sub
xor
or
loope
push
imul
mov
xor
jl
sub
pop
testl
dec
sbb
fadds
addb
bound
push
push
jo
lock
lcall
cld
bound
fbstp
nop
insb
mov
push
loop
mov
stos
xor
scas
xchg
jbe
dec
xor
pop
cltd
imul
jmp
aas
mov
lock
fs
cmpsl
cltd
xor
inc
clc
sbb
pop
dec
hlt
mov
xchg
push
ss
or
adc
inc
incb
das
clc
push
test
dec
push
jp
cli
xor
ss
sbb
inc
aam
push
sub
dec
es
out
cli
dec
lcall
adc
mov
and
loopne
adc
push
xor
push
push
insl
or
shl
andl
pop
fs
adc
xor
outsb
or
clc
jg
dec
xor
fwait
int3
inc
insl
inc
add
and
sarb
adc
pushf
or
mov
xor
jecxz
cld
out
xchg
mov
lret
dec
inc
pusha
push
push
add
ljmp
imul
dec
bound
clc
add
addb
dec
add
cmpsb
or
popf
fisttps
pushl
mov
scas
xor
xchg
pop
add
and
sti
insl
jo
inc
shlb
xchg
fildll
push
pop
pop
test
iret
popf
daa
ljmp
mov
pop
add
xchg
push
dec
push
push
mov
add
rclb
pop
sarb
xchg
add
incb
cwtl
rcl
fsqrt
mov
push
movsl
pop
loopne
incb
je
sub
jno
jno
inc
cmp
loopne
mov
and
jmp
js
jmp
push
xor
pop
call
xchg
jno
mov
push
cs
das
mov
or
shlb
test
fprem1
cli
sub
clc
shll
fwait
pop
and
icebp
repz
sbb
mov
xchg
ret
push
jbe
jbe
jecxz
jae
out
insl
pop
jmp
out
jecxz
decl
adc
fs
and
inc
mov
xchg
sbb
mov
cmp
lret
xor
push
cmp
mov
jmp
dec
cltd
dec
fcomps
loope
fs
repnz
jle
in
popf
pop
jmp
xor
xchg
leave
mov
adc
fnstcw
sahf
jo
inc
outsl
incl
ja
add
cli
lock
or
insl
push
repz
rcrb
loop
mov
in
lds
sbb
pop
push
and
cld
mov
decb
sub
ja
sbb
decb
mov
cli
loopne
fcmovb
mov
int3
mov
shll
out
lret
lcall
std
test
sub
das
mov
mov
sbb
mov
mov
and
push
andb
incl
test
clc
into
mov
xchg
xchg
push
mov
hlt
sahf
jg
cli
jmp
sub
xchg
push
xchg
pushl
add
aam
jns
xor
popf
xchg
call
ret
lcall
push
scas
out
outsl
push
pop
and
jg
stos
mov
adc
jo
fnstenv
and
lahf
inc
ljmp
mov
push
and
and
push
cltd
jbe
dec
rcrl
inc
sub
pop
inc
call
mov
scas
test
hlt
jg
call
pop
rorl
and
lods
subl
dec
call
loop
sbb
popa
jae
jg
mov
mov
inc
pop
inc
imul
incl
incl
and
push
cld
add
wrmsr
jecxz
xor
sbb
sbb
xchg
cmc
mov
dec
test
inc
xor
mov
incb
icebp
movsl
and
sbb
cmpsb
jge
lcall
test
push
movsl
lods
sbb
cmpsb
insl
call
mov
mov
cltd
stc
sub
adc
inc
pop
out
mov
movl
outsl
jb
cld
and
jno
and
jne
decb
cmp
mov
jae
mov
in
movsb
pop
cld
sub
jl
xchg
test
xchg
ja
mov
mov
add
and
mov
or
or
and
pop
cmp
sub
push
xor
inc
dec
dec
or
sbb
lcall
mov
mov
push
stos
pop
es
movsl
jnp
lcall
mov
decb
out
movsb
or
cmp
bound
add
sub
mov
mov
cld
or
insb
pop
push
dec
addr16
incb
lcall
add
xor
out
cmp
pop
sbb
inc
jecxz
bound
decl
js
test
mov
lods
scas
push
stos
sahf
or
call
cltd
movsb
arpl
adc
cmp
dec
inc
clc
mov
in
imul
add
bound
fsts
div
and
pushl
inc
mov
decb
and
decb
mov
cmp
mov
xchg
mov
pop
decb
jno
incb
std
push
es
sbbb
ljmp
stos
adc
jno
les
mov
or
xchg
xor
les
js
mov
fldenv
out
ss
and
mov
pop
mov
pop
incb
popf
into
xor
arpl
aas
fwait
decb
mov
sub
or
sarb
and
bound
sar
outsl
mov
push
fs
je
jl
inc
loopne
decb
lods
mov
or
jmp
or
outsl
mov
xchg
jl
inc
adc
out
sub
sahf
mov
or
decl
pop
dec
xchg
add
add
subl
aaa
jg
outsb
out
add
scas
xchg
shrb
mov
xor
push
rep
aam
sub
das
call
xchg
pop
cmp
xor
inc
pop
je
std
xor
pop
xor
loopne
adc
mov
mov
cmpsb
in
clc
pop
and
int3
subb
incl
push
sbb
add
pop
or
cwtl
mov
ficomps
adc
xor
mov
dec
movsb
fidivrl
imul
adc
and
aaa
push
add
xchg
xor
or
cmpsl
mov
push
aad
sar
pop
push
mov
pop
ss
xchg
and
adc
or
subl
pop
sub
mov
filds
subb
mov
mov
les
push
stos
pextrw
sub
or
push
nop
sbb
cmpsb
lcall
cld
iret
rcr
loopne
mov
pusha
mov
lcall
aaa
mov
jno
push
pop
cmp
aad
movsl
sub
or
jb
ret
int3
and
and
sub
rcrl
jo
pop
and
aaa
pop
mov
fsin
aad
pop
inc
adc
call
gs
fs
push
add
repz
jge
cmc
pop
adc
decb
adc
mov
inc
cltd
ja
popf
push
cld
sub
clc
xor
mov
dec
jg
decl
dec
outsb
and
mov
enter
es
pop
add
shlb
decb
call
lret
mul
popa
std
das
rol
sbb
or
or
push
stc
and
jg
inc
popf
lock
pusha
sub
pop
pop
cli
jg
adc
sub
mov
dec
mov
sbb
rcrb
sub
das
push
jnp
lea
push
mov
mov
xchg
ja
popa
shrb
pop
mov
push
incl
mov
or
mov
lods
mov
mov
cmpsb
in
dec
fnstenv
mov
sub
movsb
outsb
mov
in
out
push
jmp
push
clc
das
and
test
mov
mov
cwtl
xlat
test
mov
insl
bound
int
jg
incl
lods
dec
mov
jae
je
sbb
rorb
movsl
mov
cmp
xchg
pushf
loop
push
push
mov
cld
pop
lret
jmp
mov
mov
sub
movsb
pop
movsb
dec
mov
gs
fiaddl
xchg
insl
fimuls
lock
dec
stos
push
jp
loope
call
push
ljmp
filds
mov
decl
rcrb
add
push
nop
in
ja
mov
imul
mov
lds
aad
dec
sub
jge
int3
faddl
loope
fstpt
xchg
lock
aas
mov
outsl
push
mov
ljmp
add
fists
mov
mov
cmpsb
xor
add
sbb
incl
add
xchg
insb
or
call
xor
lcall
jecxz
sub
cmpsl
gs
call
jmp
sarb
outsb
push
inc
mov
dec
lcall
inc
pushf
test
dec
mov
inc
jg
and
stc
jg
jmp
add
mov
inc
rcrl
pusha
pop
andb
das
pop
cld
incl
pop
cmp
sub
xchg
outsb
or
add
push
dec
pushl
cmpsl
fs
adc
dec
or
gs
mov
cmp
clc
mov
fisubs
fstl
dec
incl
test
lods
filds
push
int
clc
pop
dec
loope
lret
subl
movsb
sti
push
loope
mov
or
mov
inc
aad
pusha
iret
push
pop
jmp
dec
cmpsl
jae
mov
movsb
loop
insl
popa
fidivs
mov
lds
add
aas
test
aad
insb
fs
add
cmpsb
fsubl
nop
push
lret
sub
scas
js
mov
mov
xchg
cmp
sub
sub
pusha
incb
mov
das
inc
cld
push
xchg
inc
into
outsl
je
sahf
rorl
ja
sar
test
or
in
data16
push
lcall
inc
cli
mov
mov
test
inc
mov
decb
test
mov
xchg
xchg
and
jbe
lods
pusha
lret
jbe
ficomps
adc
movsb
sub
sbb
jmp
loope
xlat
jg
call
fcoml
cmp
jo
ss
dec
jo
xchg
or
je
pushf
mov
addr16
and
cli
pop
push
ds
mov
icebp
push
arpl
pusha
sbb
sar
inc
ret
bound
lcall
jbe
mov
decl
insl
aas
movl
adc
mov
fdivs
mov
mov
add
dec
mov
repnz
xor
sti
pushl
out
and
in
push
jmp
es
call
hlt
mov
mov
adc
icebp
sub
clc
fbld
mov
rclb
mov
push
inc
adc
jp
sti
mov
push
pop
dec
std
inc
incb
aaa
or
lret
in
xor
jno
or
jg
out
dec
scas
mov
std
add
adc
mov
jb
pop
cmc
fnstenv
loope
out
incl
push
adc
and
fnstsw
outsl
addr16
in
outsb
pop
xor
call
insb
jbe
xor
cmpb
jne
popl
ss
pop
inc
ret
mov
dec
mov
incl
outsb
fs
and
xor
jecxz
pop
cmpb
aam
mov
or
pcmpeqw
xor
jmp
jbe
ds
adc
pop
loopne
pop
sbb
icebp
bswap
fistps
es
in
sub
cli
cmc
cmp
in
daa
fcomi
push
mov
cli
decl
sbb
or
adc
decl
mov
sbb
jno
orl
call
lahf
mov
dec
mov
mov
inc
mov
pusha
jmp
mov
ret
mov
xor
cmpsl
push
push
pop
sbb
dec
addr16
mov
je
or
inc
and
stos
dec
incb
pop
inc
mov
fisubl
adc
jg
push
movsb
push
decb
popf
mov
aaa
mov
xchg
inc
jb
clc
jmp
call
insl
jb
out
aad
ja
jne
lods
pop
imul
fwait
push
iret
pushl
sub
int3
decl
xor
movsl
shrl
xchg
imul
and
dec
cmp
out
inc
fiadds
aas
in
push
call
scas
xor
in
mov
test
nop
sub
popf
nop
in
test
call
cmp
lcall
pusha
movsb
inc
push
sbb
jmp
iret
fwait
and
sbb
mov
std
inc
pop
add
out
clc
outsb
ret
lds
repnz
jg
mov
movsl
imul
test
jle
in
repnz
cltd
jb
cmp
mov
dec
add
cmp
in
decl
decb
or
adc
pop
xchg
xchg
xor
cmp
into
out
addb
repz
inc
and
mov
out
mov
sbb
jb
dec
adc
pop
std
popf
cmp
xchg
push
dec
test
es
inc
mov
je
rorb
lahf
out
and
incb
cmp
add
push
xor
sub
scas
mov
or
and
xor
add
add
pop
inc
xor
in
outsl
push
cmp
or
mov
mov
mov
mov
pop
push
push
or
idivw
cmpl
pop
stc
mov
scas
add
add
outsb
or
jmp
dec
leave
sbb
add
aaa
mov
and
fst
or
std
sub
mov
mov
sub
inc
lock
inc
aaa
pop
cmp
adc
jg
incl
or
xor
jnp
cmc
add
cld
and
pop
mov
js
mov
and
mov
mov
sub
iret
loopne
xchg
mov
lock
add
xor
push
dec
aas
xor
push
int3
mov
sbb
xchg
repz
mov
mov
dec
decb
xchg
cld
jg
movsb
decb
aas
jg
stos
shll
test
lds
rolb
xchg
out
inc
jp
jmp
push
incb
sarb
mov
adc
loope
push
jb
aas
lcall
sar
insb
xchg
push
ljmp
push
aas
clc
aas
adc
sbb
cmpsb
ja
jnp
push
dec
push
xchg
imul
mov
add
fsubl
xchg
iret
sahf
jne
sbb
repz
test
pop
mov
adcl
cmp
push
sbbl
repz
gs
pushl
fistl
xor
mov
and
scas
xor
pop
xchg
pop
and
decb
repnz
fisubrs
std
ljmp
fnsave
pop
xor
sub
adc
mov
iret
arpl
jno
popa
incb
push
insl
inc
gs
pop
fs
loop
incb
mov
mov
ljmp
xchg
xor
mov
mov
stos
push
pop
addr16
repnz
sub
xor
ja
and
decl
push
mov
dec
shll
ljmp
mov
ja
cmp
fwait
out
pause
arpl
cmp
cmp
inc
test
mov
decl
and
cwtl
fnsave
insl
cmpsl
xchg
loop
xlat
xchg
jno
scas
sbb
dec
lods
fsubrs
push
decb
fwait
push
mov
nop
and
dec
push
fisubs
and
push
push
ret
ja
push
push
int
roll
lret
sar
mov
movsl
add
iret
lods
jo
mov
push
push
pushf
out
andb
incb
faddl
pop
mov
ljmp
dec
xor
fnstenv
sbb
mov
add
lods
roll
mov
popf
arpl
mov
daa
dec
pop
decb
outsb
cld
jbe
ljmp
jb
inc
mov
addr16
movsl
int3
pushf
inc
mov
mov
dec
jae
call
clc
rcll
mov
addr16
xchg
inc
xchg
push
pop
xor
mov
scas
pushf
scas
or
cmpsl
cltd
fcoms
cli
jmp
sbb
sbb
iret
lods
jle
jbe
gs
mov
and
adc
mov
push
dec
push
or
dec
ss
lcall
pop
movsl
xchg
ret
mov
add
in
repnz
imul
ret
cmp
push
xchg
int
xor
jge
incl
adc
cwtl
cmc
insb
jno
mov
out
lcall
xchg
sub
xchg
enter
jmp
push
cld
dec
cmpsl
push
push
mov
xor
push
and
cmp
fstpl
fdivr
pop
adc
imull
stc
leave
ja
fmull
ljmp
mov
stos
sti
add
inc
arpl
call
ret
cmpl
imul
mov
sub
fdivs
mov
icebp
decl
jo
lods
and
rolb
loopne
int3
sti
xor
decl
push
mov
push
into
adc
aas
data16
sahf
jmp
loope
rorl
fwait
pop
lock
xchg
arpl
out
sub
and
and
sahf
fdivrs
pushf
jl
sbb
pop
push
sbb
mov
push
push
stos
sbb
loope
ja
inc
repz
aam
dec
in
push
jno
add
ljmp
and
ja
mov
cmp
pushl
sub
add
fdivl
xor
out
add
test
icebp
stos
xor
jl,pt
inc
xor
mov
ss
das
idiv
push
add
xchg
inc
or
lcall
lds
callw
dec
sub
xor
js
ljmp
jbe
pop
push
mov
inc
ret
sbb
in
in
sub
add
sbb
pushf
dec
popa
mov
inc
jp,pt
push
int3
cmc
pop
xchg
jb
cmp
dec
jmp
cli
push
icebp
mov
iret
imul
sbb
push
lea
dec
dec
int3
decl
outsb
mov
mov
test
dec
mov
push
pop
int3
ljmp
insl
add
xlat
push
mov
testb
clc
test
mov
push
cmc
mov
mov
adc
xchg
addl
inc
xchg
lds
test
dec
dec
lcall
inc
sbbl
in
or
xor
or
je
dec
jg
cld
or
test
inc
cltd
cli
test
lods
push
pop
push
cld
inc
push
xor
adc
cmpsb
js
dec
jl
sbb
ljmp
call
mov
jae
adc
dec
mov
jle
xchg
inc
lret
mov
mov
mov
clc
iret
icebp
gs
push
pop
jb
loop
pop
jo
scas
ja
jae
andl
incb
cmp
mov
xchg
lcall
incl
arpl
in
push
aam
inc
cmp
outsl
push
fs
mov
or
xchg
stos
mov
nop
decb
cs
jmp
loopne
mov
and
inc
aad
inc
loop
jg
push
mov
imul
mov
mov
cmp
or
jg
hlt
in
mov
jns
dec
mov
lahf
lcall
mov
dec
dec
lods
fstpl
xchg
push
jae
shlb
out
mov
adc
test
mov
je
and
inc
mov
jmp
jg
scas
jns
fimuls
mov
xchg
inc
scas
jns
pop
jns
mov
dec
lret
sahf
pop
aad
enter
lods
dec
jne
repnz
xchg
enter
pop
adc
cmp
fiaddl
add
es
inc
lcall
sahf
sub
adc
mov
adc
outsb
xchg
dec
incb
in
out
xchg
push
fists
mov
xchg
in
mov
sub
in
gs
jp
pop
jmp
jle
pop
jo
mov
mov
adc
ljmp
sahf
mov
and
add
jnp
xor
sahf
pushf
lods
push
in
addb
loope
jmp
cmpsl
decl
nop
xor
mov
cmpsb
inc
xchg
sub
cmpsl
stc
push
in
dec
lahf
jmp
jb
mov
cmp
sub
decb
hlt
pop
inc
loopne
xchg
sub
jmp
jae
pop
fs
rcrb
out
call
inc
xchg
jmp
lcall
cmp
aaa
aaa
push
movsb
adc
or
notl
decb
add
inc
mov
jo
xchg
push
fcomip
pushl
mov
xorl
cmp
mov
jae
xchg
dec
jg
inc
xor
pop
ja
into
xchg
add
jp
clc
incl
and
jo
push
les
inc
ret
incl
shlb
mov
repz
outsl
add
sub
cmp
fbld
movsl
subb
ljmp
jno
xchg
adc
mov
fcompl
call
decb
scas
or
add
addr16
mov
in
test
imul
mov
fwait
lret
imul
clc
dec
out
jne
outsb
jae
fisttpll
and
sbb
aad
sbb
inc
lret
cmpsl
imul
sbb
sbb
mov
sub
push
push
xor
sbb
xchg
js
push
cmpb
push
cmpsl
in
repnz
lret
jle
cwtl
incb
xchg
in
ret
incl
pushl
insb
in
movsb
gs
inc
lea
repz
jl
in
add
push
sbb
sbb
push
aas
sub
adc
mov
mov
mov
mov
sub
ljmp
dec
call
mov
mov
push
test
icebp
cld
mov
xchg
fs
ret
push
jmp
adc
inc
fwait
push
mov
out
incb
mov
incl
out
dec
sbb
ss
mov
mov
mov
ret
lds
push
xchg
xor
push
call
dec
xchg
mov
test
mov
mov
mov
imul
out
pop
nop
ljmp
ror
push
cltd
dec
push
lahf
shrb
lods
scas
xchg
daa
adc
pop
xor
mov
test
ljmp
adc
mov
jbe
or
mov
jae
lea
inc
call
jo
gs
xchg
std
mov
and
cwtl
shr
cmp
adc
mov
mov
sub
cltd
idiv
pop
enter
nop
xchg
repnz
jmp
sar
adc
je
xor
mov
push
shlb
addr16
xchg
jg
mov
cli
test
int
inc
jno
inc
xor
cmp
pop
or
sub
mov
adc
xor
sbb
mov
clc
jg
mov
mov
packssdw
pushf
inc
rol
add
xchg
jb
stos
mov
test
into
movsl
cmpsb
decb
inc
add
decl
pop
jnp
jle
push
nop
adc
loop
inc
mov
nop
loop
loopne
jg
jmp
popf
inc
pop
mov
ja
insl
mov
icebp
jp
mov
sub
outsl
or
lcall
mov
scas
stc
mov
dec
mov
ljmp
dec
push
inc
mov
mov
mov
jmp
jge
and
leave
push
inc
incb
mov
das
aam
out
mov
mov
inc
imul
xchg
mov
ljmp
cltd
cmp
sbb
cld
xchg
cli
push
loop
mov
mov
sbb
lods
dec
jb
add
mov
push
roll
cmc
mov
movsl
and
sub
push
sbb
lods
dec
jb
sbb
out
stos
inc
fisubs
lea
decl
lea
call
inc
cmpsl
sbb
mov
mov
mov
cmp
pop
push
pop
pop
sbb
lcall
or
mov
scas
xor
mov
add
mov
xchg
sub
mov
je
std
call
pop
repz
repz
mov
aaa
test
out
xrelease
mov
pusha
jg
test
push
cwtl
das
dec
and
and
cwtl
adc
lods
sbb
pop
add
ret
repz
sar
pop
sbb
popf
inc
repz
cmp
or
fs
sbb
jp
xchg
fisubl
jmp
mov
pop
mov
xchg
or
popa
and
mov
pop
cli
push
je
cld
decl
add
xchg
xchg
aad
dec
and
clc
jg
xchg
adc
add
dec
out
lahf
push
pop
inc
repnz
jp
das
push
mov
and
inc
lods
pop
cmp
fs
imul
inc
jmp
loop
arpl
inc
js
lcall
dec
xchg
adc
cmpsl
cmp
fwait
test
sub
xchg
or
mov
outsb
sub
addr16
adc
nop
clc
fistl
lods
stc
or
enter
mov
jnp
notb
in
jbe
xorb
lods
enter
sub
mov
or
inc
add
pusha
cld
sub
xor
dec
out
or
filds
bswap
sbb
outsb
call
cld
inc
scas
cmp
mov
cli
pop
inc
in
dec
xchg
in
jno
mov
out
cld
jmp
lcall
addr16
pop
ljmp
push
pop
test
mov
cmp
add
mov
add
dec
sub
inc
pop
cmp
loop
shl
inc
jg
mov
inc
lret
dec
xlat
orl
and
adc
incl
arpl
push
in
cmp
push
nop
add
cmp
xor
xor
mov
jg
jb
cwtl
jl
mov
mov
jne
lret
lahf
pop
in
and
jg
cmpsl
xor
xlat
test
and
gs
pop
xor
adc
out
lcall
jmp
pop
mov
lods
cmp
xchg
cwtl
test
adc
xor
push
or
test
mov
mov
call
scas
push
int3
sub
in
and
mov
inc
lret
xor
ljmp
stos
and
add
and
mov
xor
mov
push
jns
imul
and
ljmp
cmpb
mov
push
cmc
arpl
dec
xor
jecxz
jbe
imul
sub
push
cmpsl
xchg
jne
sbb
pushf
stc
mov
popf
mov
outsb
out
adc
and
or
push
fwait
decb
push
loop
jbe
lods
push
je
push
ljmp
mov
adc
xor
or
repnz
cmp
dec
inc
pop
mov
mov
inc
pop
cld
clc
mov
mov
sub
pop
stos
mov
pop
jae
mov
push
inc
scas
scas
jnp
repz
shrb
adc
dec
mov
add
pop
and
mov
mov
push
push
push
dec
mov
lea
scas
and
outsl
jmp
adc
cmp
stos
pop
sbb
adc
rcl
incl
dec
in
pop
cmp
mov
jns
lret
out
aas
movsb
mov
xchg
shlb
mov
pop
inc
pop
cmp
fs
mov
and
push
mov
lret
adc
mov
movsb
mov
decb
hlt
push
or
add
mov
mov
movsb
push
loopne
lahf
ljmp
fildl
dec
test
fistpl
fisttps
je
dec
cmp
xchg
push
adc
jno
inc
inc
aad
daa
dec
pusha
push
jbe
movsb
push
xchg
lret
xorb
testb
push
mov
jae
cmp
leave
cmp
cmp
stos
cmc
mov
int
dec
ss
dec
loope
pusha
mov
mov
scas
shrl
adc
mov
dec
int
andb
lcall
mov
jg
aas
dec
push
stos
andl
adc
cmp
test
jns
push
aad
inc
mov
push
loopne
ljmp
fbstp
mov
lcall
mov
pop
xchg
cwtl
fwait
incb
mov
dec
call
popf
mov
in
add
jno
add
outsb
cmp
or
rclb
mov
jnp
repnz
sarl
hlt
imul
lcall
jns
add
lds
pop
fsubrl
arpl
hlt
lcall
cmp
into
jo
jge
inc
stos
add
jmp
xchg
push
test
cmp
cmpsb
dec
es
jg
jne
test
fidivrl
lahf
push
mov
sub
out
incb
or
loope
loopne
arpl
test
aam
fs
lret
or
pushl
outsl
dec
je
or
lcall
popa
in
xchg
push
popf
arpl
sub
sahf
xchg
sar
mov
inc
jo
inc
popf
xor
int
jl
test
into
in
insl
insl
lcall
sbb
fs
xchg
popa
popf
pop
mov
push
xor
cli
dec
adc
ds
fnsave
mov
jne
push
mov
xlat
lods
dec
or
inc
dec
xchg
in
lock
ja
icebp
jne
cmp
decl
sbb
lahf
jl
inc
test
xchg
lock
or
pushl
bound
sbb
dec
enter
aas
pop
in
dec
decb
fsubrs
aad
inc
loope
mov
shll
pop
aas
and
repz
mull
int3
imul
stos
int3
jg
dec
mov
jle
and
mov
jmp
pop
add
out
test
adc
les
in
mov
cmpl
test
sbb
aad
sahf
adc
lret
mov
xor
mov
mov
sub
fwait
sub
negl
lcall
sarl
cmp
in
xchg
pop
mov
test
mov
cli
jae
mov
sbb
sbb
xor
stos
leave
jne
aam
inc
push
incl
repnz
jmp
mov
mov
mov
mov
call
inc
add
jo
sti
movsb
push
mov
inc
cmpsl
loop
and
out
jne
pusha
pop
or
lds
xchg
pop
mov
lcall
call
sahf
je
pop
mov
dec
insl
push
push
pop
inc
push
jo
lcall
pop
sbb
cmp
mov
adc
sarb
cltd
rol
cwtl
xor
out
sbb
cld
lcall
pop
push
repnz
cmp
shlb
gs
daa
jl
pop
test
mov
push
jo
in
push
xlat
add
mov
mov
aad
outsb
xor
fnstenv
push
pop
xchg
outsl
jle
sbb
inc
mov
cmp
decb
fildl
inc
push
push
pop
mov
dec
in
jb
inc
ja
xor
test
jle
sbb
mov
mov
or
jle,pn
mov
inc
pushf
mov
dec
pushl
mov
imul
inc
sbb
xor
cmp
push
incl
inc
lea
xchg
imul
adc
pusha
push
mov
jne
dec
jno
inc
scas
es
push
bound
jg
xchg
ja
stos
cmpb
inc
jl
pop
push
lcall
outsl
test
push
mov
jo
lods
inc
push
xchg
mov
ljmp
and
mov
stos
push
push
push
and
push
pop
mov
inc
cmpsl
push
and
pop
fwait
push
pop
adc
push
and
movsl
dec
push
insb
les
mov
push
push
mov
sbb
push
push
test
or
aad
xchg
jno
lods
push
inc
fwait
dec
pop
adc
sub
call
scas
push
out
lods
push
jg
pop
xlat
mov
mov
shrb
decb
jl
cmpsb
add
scas
popa
in
decb
mov
mov
clc
mov
inc
jecxz
dec
cld
hlt
test
cmpsb
jno
sahf
jle
jae
pop
sar
jg
fwait
ja
mov
push
xchg
jno
cmpsl
dec
pop
popf
dec
imul
xchg
mov
dec
xor
mov
jg
jno
xchg
pop
push
stos
inc
dec
subb
pop
pop
ljmp
mov
je
jb
xchg
push
mov
mov
mov
pop
je
imul
jg
enter
jo
mov
xorb
outsb
scas
fwait
jb
mov
lods
inc
dec
add
xchg
xchg
inc
ds
fs
pusha
push
fs
popa
incl
lret
pop
adc
out
insb
loopne
mov
sub
xchg
inc
jp
mov
cmp
push
outsl
pop
add
xchg
pusha
orb
or
add
iret
test
cmp
outsl
incb
mov
mov
data16
incb
out
lea
cmc
mov
dec
lods
jle
dec
not
xchg
aaa
inc
loope
xchg
jo
jbe
mov
dec
enter
popa
arpl
cld
push
jbe
pop
xor
ljmp
icebp
das
lret
bound
pop
lret
cmpsb
dec
outsl
insb
imul
cmp
loope
int
jge
inc
outsl
jns
push
push
jg
dec
ljmp
push
push
sbb
inc
xor
dec
pop
data16
dec
sti
outsl
incb
mov
fs
dec
lret
dec
popw
fstl
dec
fs
xchg
dec
push
jp
mov
sbb
shrb
cmpsl
std
je
adc
enter
ja
js
jmp
in
pop
int
pusha
push
pop
shl
inc
push
or
das
es
jo
into
scas
push
sbb
xchg
xchg
fwait
xchg
in
arpl
call
test
jne
sbb
jne
loope
or
ljmp
negl
aas
stos
and
gs
cld
out
push
std
std
pop
and
dec
pop
mov
fidivrs
pop
fs
push
push
pop
jo
rorl
inc
cmp
push
pop
in
popa
inc
dec
dec
jmp
loopne
dec
jne
test
rclb
popa
dec
fdivr
scas
adc
movsb
hlt
add
sbbb
incl
loopne
cmp
mov
incb
sbb
movl
ja
lret
and
icebp
pop
dec
jecxz
jge
adc
add
pop
clc
out
out
inc
jmp
lock
incb
rcl
jg
pop
outsl
xchg
mov
movsb
cld
mov
or
inc
push
rorb
gs
ja
cld
pop
icebp
fnsetpm(287
je
pop
jle
dec
adc
loop
push
fcmovnbe
je
pop
movsl
sub
dec
adcb
popl
sbb
das
mov
push
es
loop
jle
mov
inc
pop
cmp
les
add
cwtl
jbe
test
fadds
call
inc
and
pop
cmpsb
nop
xchg
mov
fcom
inc
lock
ljmp
out
shll
imul
jmp
push
loopne
inc
jmp
call
dec
fldcw
mov
sub
cld
or
xor
mov
bound
sbb
xchg
dec
xchg
fldcw
insl
aaa
pushl
pop
icebp
xchg
add
sahf
out
cmpsb
ret
rorb
push
cmp
adc
cld
push
xchg
scas
dec
rcll
lcall
push
movsb
inc
fisubrl
push
sub
cmp
adc
sub
stos
push
sarw
jge
and
push
cmp
xchg
mov
js
dec
jo
cld
mov
jg
sbb
sub
in
jg
je
pop
mov
mov
mov
nop
shlb
es
xor
nop
cli
sub
cli
cmp
mov
jl
out
push
add
push
int
pusha
adc
mov
jbe
into
dec
pop
sti
ljmp
pop
loope
repnz
movsb
mov
push
sahf
pop
or
fcmovnbe
inc
dec
insl
or
loope
dec
popf
sbb
fldl
sar
adc
ret
pop
push
imul
cmp
in
addr16
jmp
jmp
shll
bound
jmp
imul
cmpsl
clc
js
call
aas
pop
cmp
leave
lds
aad
mov
out
in
clc
roll
sbb
clc
mov
mov
jmp
cli
lcall
pop
je
dec
ror
jne
push
pop
push
insl
into
jecxz
push
inc
xchg
adc
inc
je
push
scas
stos
test
outsl
push
mov
out
mov
add
out
push
add
mov
mov
ret
xchg
scas
or
scas
incb
stos
ret
clc
mov
daa
sbb
dec
jle
mov
sub
shr
push
dec
outsb
inc
or
adc
inc
call
jmp
jae
js
ficoms
fisubl
pop
mov
jne
xchg
sub
add
loop
adc
jmp
insb
repz
aam
call
pop
hlt
jg
jb
mov
mov
inc
scas
ljmp
leave
jbe
push
ret
add
loope
jo
fbstp
aam
dec
push
jne
les
xchg
inc
out
adc
lods
ret
inc
test
insl
fsubl
pop
shr
ja
std
pop
mov
xor
push
out
dec
imul
adc
mov
scas
es
and
hlt
pop
out
inc
push
dec
jp
and
jmp
je
decl
push
push
outsl
inc
stos
jae
push
pop
out
aad
push
clc
das
xchg
lock
inc
data16
fs
fld
gs
loopne
pop
jae
icebp
outsb
jo
cwtl
jns
loopne
xor
hlt
lcall
ljmp
push
inc
stc
lret
push
push
and
shl
push
push
jo
fisttpl
stc
decl
inc
aaa
mov
jb
push
push
outsb
pop
iret
and
fdivrs
push
loop
add
inc
and
push
rep
ja
pop
add
movb
popa
push
xchg
inc
pop
testb
jbe
add
mov
incb
dec
inc
push
mov
lock
dec
sbb
jno
or
cmp
sub
andb
mov
cli
out
push
mov
popf
shrl
mov
inc
pop
adc
andl
scas
clc
fildl
sub
push
jo
fcompl
mov
call
nop
nop
shll
mov
loop
sbb
outsb
push
sbb
pushf
mov
test
insl
xchg
mov
xchg
pushf
sahf
and
ljmp
inc
inc
jne
lock
inc
mov
pop
jmp
inc
lds
adc
cmp
push
xchg
mov
bound
pop
cmpsb
inc
mov
clc
pop
ud0
sar
out
ja
pop
push
int3
enter
lret
jp
push
jns
bound
outsl
ret
cwtl
jmp
aas
je
je
andl
xor
das
jp
out
ljmp
jae
add
scas
loop
dec
dec
dec
mov
loope
mov
mov
decl
mov
mull
dec
into
inc
jecxz
push
push
jecxz
sub
lods
int3
inc
pop
dec
pop
insb
in
and
les
es
and
rorl
fstpl
mov
outsl
sahf
push
adc
xchg
insb
insl
out
jo
daa
pusha
popf
sbb
jg
push
adc
insl
cmp
adc
mov
sahf
adc
mov
in
mov
push
clc
cmp
inc
fs
adc
ja
push
jge
cmpsl
pusha
cld
lcall
scas
nop
mov
mov
xchg
mov
clc
jg
sarl
pop
jmp
dec
gs
lea
pop
fwait
add
mov
clc
inc
in
test
pop
inc
jp
outsb
in
faddl
addr16
in
jne
mov
in
out
dec
pop
inc
cmp
call
push
lcall
stos
xchg
in
pusha
mov
mov
adc
notl
fs
jo
icebp
ror
dec
fistpll
shl
jo
jmp
mov
mov
js
insl
aaa
adc
movsl
fwait
xchg
lods
inc
xor
popf
scas
adc
fadds
lds
lds
adc
lahf
in
dec
pushl
jg
fmulp
push
push
push
sbb
icebp
pop
dec
mull
out
popf
loop
inc
scas
js
jns
cmp
pop
fwait
in
mov
ja
cmp
call
mov
and
outsb
push
sbb
and
ds
test
or
mov
daa
cs
add
lcall
and
iret
pop
imul
pop
jmp
rorl
jbe
test
scas
xchg
lock
and
in
in
dec
pusha
adc
pop
cld
push
push
sbb
fldt
loopne
dec
dec
ja
insl
incl
sbb
movsb
sbb
mov
sbb
adc
sub
sub
shlb
decl
dec
leave
push
mov
in
js
lods
mov
inc
fwait
movsb
jb
ret
aaa
ds
lcall
pop
add
pushl
add
daa
dec
je
mov
ja
pop
nop
xor
or
or
adc
stc
sti
inc
lret
insb
mov
or
ljmp
adc
jle
xor
mov
and
pop
decb
cmp
jb
test
lcall
movsb
xchg
push
imul
cmp
ret
push
fcomi
aas
sar
int3
out
clc
dec
into
in
jg
fs
fldcw
mov
lds
fcom
dec
cmp
mov
jmp
jg
pop
cld
inc
or
fldcw
or
xchg
in
ficomps
sti
mov
clc
test
hlt
mov
test
and
enter
lret
inc
dec
jno
jle
mov
in
jb
leave
jno
icebp
pushl
insb
out
ja,pn
jnp
add
sarb
inc
ret
dec
cli
jg
popa
popf
push
ljmp
out
dec
pusha
fs
jno
push
lret
inc
ljmp
xchg
lock
das
jle
addr16
inc
add
arpl
imulb
push
outsl
jg
int
or
sbb
ret
ret
fisttps
push
imul
gs
cltd
movsb
dec
dec
mov
sahf
js
insb
inc
mov
mov
inc
jae
pushf
sub
xor
es
inc
outsl
mov
or
adc
bound
jne
imulb
cmpb
aas
jo
cli
push
cmp
in
dec
outsb
loop
jg
loop
sbb
decb
fsub
or
loopne
push
push
mov
rcll
rol
inc
dec
pop
fwait
adc
les
jo
inc
inc
xchg
aad
sbb
mov
test
iret
xor
jae
jp
cmp
in
jge
push
pop
incb
jne
sub
in
jg
or
jle
ds
das
insl
or
lods
fiadds
jmp
add
add
out
xorb
imul
fstps
mov
decl
mov
out
pop
popf
stos
add
inc
mov
lock
jp
test
dec
mov
pusha
inc
icebp
or
mov
imul
lds
sub
cmp
mov
sub
dec
inc
int
pop
inc
pop
xor
xchg
lea
test
jg
jl
out
jecxz
dec
sahf
lcall
movsl
cmpsb
jo
mov
pop
jg
jmp
xor
ss
lock
call
in
cmp
lcall
xchg
pop
fcmovnbe
push
inc
gs
mov
in
stos
mov
pop
mov
in
test
inc
pop
adc
imul
pop
js
mov
in
das
push
jbe
pop
roll
lods
push
jmp
xor
shrl
dec
push
fisttpll
inc
push
enter
cmp
pop
out
push
in
ds
stos
inc
decl
shll
pop
decb
add
xchg
sarb
cmpsl
das
repz
ljmp
je
push
mov
iret
ss
push
lret
fs
fimull
pop
mov
mov
jg
or
mov
mov
je
int3
pop
pop
outsl
pop
mov
roll
sti
notl
jo
lret
call
lret
mov
mov
mov
dec
push
jp
jmp
and
nop
jg
imul
call
pusha
push
mov
push
imul
pop
popa
addr16
mov
mov
mov
cmc
xor
push
mov
lahf
incl
cld
mov
cmp
hlt
sub
jge
enter
ljmp
mov
loope
or
js
out
aam
push
ret
jmp
add
add
loope
gs
insl
lret
mov
push
scas
test
scas
inc
shll
fsts
imul
fists
cmpsb
stos
in
in
push
xor
fldt
dec
repz
gs
jl
jb
leave
jno
divl
fcomps
pop
js
fs
iret
jmp
pop
clc
mov
fs
dec
dec
sbb
sub
sbb
or
pushl
inc
scas
fnstsw
push
pop
hlt
dec
in
std
push
mov
rcr
je
call
mov
xor
ja
je
out
or
out
mov
insl
into
add
sub
hlt
mov
jge
cs
pop
in
aam
rclb
push
dec
dec
sbb
ffreep
jo
insb
scas
sti
xor
add
cmpsb
outsl
pushf
xchg
adc
cmpsl
in
nop
jg
loop
incb
or
xor
cmp
loope
and
icebp
cmp
repz
lret
ja
das
les
push
pop
xchg
sbb
shll
or
xchg
xchg
xchg
mov
lahf
ss
rcll
jg
dec
jo
dec
outsb
insl
sbb
dec
jae
and
adc
imull
jge
xchg
mov
lock
and
cmp
xor
pop
lock
adc
cltd
mov
push
jle
adc
mov
xchg
dec
inc
clc
addl
pop
adc
jno
ja
push
dec
repz
ja
stos
clc
incl
or
sbb
scas
jae
jmp
push
sbb
push
dec
sub
push
cld
jo
call
inc
mov
pop
popa
outsb
push
and
add
mov
hlt
sbb
push
decb
sub
cli
fildll
inc
adc
shrl
inc
push
jecxz
ss
mov
adc
inc
cmp
fsubrs
nop
xchg
xchg
out
test
ljmp
cmc
mov
push
cwtl
mov
mov
dec
dec
test
pop
sub
jecxz
jb
aaa
es
movsb
sti
loope
lea
fidivl
xchg
push
mov
dec
mov
fdivl
and
out
sub
dec
xchg
jae
and
cmpb
cmp
js
mov
jg
mov
xchg
sahf
sahf
dec
mov
dec
mov
ret
mov
aad
add
icebp
pop
push
xor
ss
idiv
call
or
dec
sbb
sub
fisttps
scas
fisubrs
inc
add
add
xchg
shlb
jle
jns
decb
insl
imul
push
fs
jne,pn
std
call
lahf
andl
mov
adcb
daa
push
jae
xchg
push
insl
leave
xchg
push
ljmp
out
cmp
ret
rcr
fcomip
pop
mov
add
jb
enter
out
jp
int3
mov
rclb
pop
jb
clc
xor
bound
mov
adc
mov
ficoms
movl
ljmp
decb
inc
push
inc
xchg
cld
out
pop
jae
faddl
inc
dec
mov
add
mov
adc
stos
fsubl
inc
jnp
sub
jg
lcall
inc
cltd
mov
and
in
mov
cmpsl
inc
xchg
add
cwtl
jg
adc
xor
lock
lcall
cmpsl
sbb
sbb
and
cmp
int
movsb
js
std
ljmp
cmp
lret
inc
or
out
pushf
mov
outsl
cltd
dec
add
push
shrb
lret
fisubrl
mov
jb
pusha
push
std
pshufw
jae
in
nop
add
mov
push
push
pop
aad
add
add
test
sub
and
repz
fmuls
push
jle
mov
movsb
xor
test
mov
cltd
aad
jg
adc
shl
inc
push
mov
mov
pusha
cltd
lret
cltd
or
rcrb
dec
jmp
xchg
fwait
mov
mov
test
repz
shrb
in
mov
push
xchg
or
jl
cmpsb
ja
adc
lcall
fdivrl
pop
inc
ljmp
std
mov
fldt
daa
std
mov
cmpsl
push
mov
inc
pop
popa
dec
inc
mov
in
jl
lods
pusha
call
push
loopne
xor
and
lds
call
clc
add
leave
mov
inc
push
mov
push
into
mov
and
cmpsl
push
mov
sbb
fwait
popl
cs
or
push
fistl
jl
xor
decb
das
xor
cmp
and
mov
icebp
inc
pop
scas
loope
push
sbb
cli
cs
fildll
std
or
jg
or
ja
push
or
cmpsb
lods
sti
mov
call
loopne
sbb
enter
ljmp
jecxz
or
sbb
addr16
push
ds
mov
dec
ja
and
test
and
sahf
out
pop
jg
cld
push
mov
and
mov
ljmp
jns
pushl
mov
and
icebp
aaa
clc
pushl
push
pop
push
xchg
int
push
popa
sbb
pop
imul
sub
out
dec
dec
decb
push
icebp
clc
pushl
sbb
xor
imul
push
cmp
xchg
data16
scas
aaa
scas
mov
adc
stos
lods
in
inc
sub
out
test
xor
incb
call
cmp
cmp
xchg
jp
sub
xchg
mov
mov
xorl
jae
sub
cmp
fisubrs
or
or
in
mov
lock
lds
push
data16
pop
xor
push
push
push
clc
lcall
sub
pushf
jae
inc
dec
sub
outsl
hlt
mov
cmp
sbb
loopne
push
sbb
mov
gs
jbe
sbb
mov
lret
inc
aas
ret
icebp
aaa
push
push
aaa
cmp
in
xor
inc
inc
std
pushl
xchg
sti
push
push
xchg
mov
and
adc
adc
sti
mov
dec
sub
fcomi
lcall
mov
jl
aad
and
add
loopne
dec
fidivl
inc
jns
sub
jl
rcpps
sbb
sub
jo
adc
mov
arpl
loope
jmp
loop
jne
arpl
mov
loope
incb
pop
daa
cli
mov
dec
push
mov
or
shll
xor
xchg
sbb
pop
dec
outsb
xor
push
clc
pop
pop
cwtl
mov
dec
push
jle
jg
sub
cmpl
ljmp
xor
mov
movsb
fwait
popf
insb
xchg
cmovs
push
stos
xor
pop
ljmp
mov
push
jno
and
les
int
popa
push
clc
daa
in
clc
lods
sbb
pop
out
jg
pop
pop
jl
push
and
dec
fs
sub
mov
call
std
dec
sbb
sub
push
add
cmpsl
fwait
rolb
push
in
dec
add
jmp
xchg
outsb
mov
cmp
mov
lods
cmp
pop
xchg
ljmp
and
sub
push
mov
pop
aad
mov
imul
das
hlt
mov
and
xor
movsb
xchg
rorb
mov
repz
dec
subb
sbb
icebp
pop
inc
aad
and
dec
dec
fcomip
xor
mov
and
insl
cmp
xchg
push
adc
sti
cwtl
mov
pushl
or
test
mov
inc
cli
cmp
loope
push
or
xchg
repnz
popf
cmpl
in
inc
jno
sub
adc
stos
cmp
inc
pushf
pop
push
cmc
adc
into
dec
and
out
lahf
loopne
hlt
jg
fs
popa
js
adc
enter
lods
es
lea
dec
repnz
push
hlt
pusha
in
leave
ja
imul
lret
push
mov
repnz
arpl
dec
es
mov
pop
jecxz
xorl
jne
out
in
aaa
sub
aaa
lret
int
pushl
jb
decl
adc
les
xchg
mov
jmp
xchg
loope
push
jp
sub
das
subb
pop
inc
pop
push
add
jmp
loopne
push
push
mov
push
lcall
pop
decb
push
ffreep
push
push
pop
fmull
insl
addr16
add
inc
rol
in
das
cmpsb
push
decb
arpl
add
daa
out
lds
ljmp
push
incb
add
dec
scas
test
and
mov
ljmp
lret
jg
push
sbb
and
jg
clc
jns
push
pop
push
xchg
sti
add
lea
in
push
xor
std
xor
into
cmpl
sub
incb
loopne
push
jno
incb
out
dec
or
rcl
cmp
lcall
pop
xorb
iret
insl
aaa
push
daa
loop
ja
cwtl
jb
mov
sar
add
jmp
dec
incb
test
and
lcall
js
frstor
call
sbb
test
inc
pop
jle
sbb
mov
and
push
or
hlt
fstps
push
mov
adc
insl
and
and
test
or
je
xchg
mov
pop
mov
std
decb
and
cld
dec
adc
shlb
repnz
ret
scas
shll
inc
fs
fistpll
ja
test
cmp
mov
jg
mov
mov
lods
xchg
sti
incl
mov
andl
std
cmp
loopne
dec
jmp
pop
pop
rcll
mov
test
mov
cmp
add
push
mov
jns
or
cmp
or
ficoml
sbb
das
push
cld
test
fwait
popl
shlb
int
dec
clc
or
inc
stc
clc
jb
loopne
fadds
or
sbb
mov
std
pushl
add
pop
dec
cmpsb
mov
int3
mov
aas
add
xor
roll
pop
add
cmp
push
ljmp
dec
inc
cmp
xchg
adc
xor
loop
jno
adc
cmp
ret
and
popa
aaa
loopne
and
mov
gs
sbb
xor
decb
in
leave
movsb
pop
or
xor
jg
and
cmp
scas
and
xor
popl
push
mov
pop
dec
decb
xor
push
adc
loop
pop
mov
xchg
pop
mov
pop
loopne
jg
fsubr
ja
jne
fs
es
cli
add
jb
mov
cltd
aas
addr16
popf
sbb
inc
xchg
cmp
push
fwait
and
js
adc
inc
mov
xchg
mov
rorb
outsb
dec
imul
arpl
das
or
cmp
dec
mov
popf
jecxz
aas
fimull
test
add
into
lds
xchg
enter
pop
mov
inc
and
into
and
or
aas
or
pop
aam
pushl
dec
shll
cwtl
insl
out
adc
int
popf
xor
out
test
or
aaa
lret
lea
and
jmp
jl
hlt
in
leave
and
lods
lret
sub
mov
or
incl
bound
add
or
dec
add
loope
mov
push
enter
inc
dec
and
pop
or
jns
sub
arpl
clc
sub
add
lcall
into
push
pop
push
pusha
aam
dec
jb
inc
repnz
and
xchg
pop
mov
adc
loopne
mov
xchg
punpckldq
xchg
aas
inc
inc
xchg
jne
mov
push
fs
mov
or
imul
inc
mov
imul
adc
and
and
xchg
lea
lods
sub
pop
movsb
dec
sbb
sub
decl
fstps
jle
sub
xchg
xor
lea
mov
ljmp
popa
mov
add
cwtl
in
inc
jp
cmpsb
dec
inc
or
sbb
sbb
jnp
pop
ds
sbb
inc
xor
jg
mov
dec
out
pop
iret
sub
mov
std
xor
popa
fistl
fwait
add
jbe
decb
std
dec
xlat
cmc
push
pop
xor
ljmp
inc
add
sbb
scas
xor
xor
mov
outsb
cli
pop
subb
pop
movsb
adc
or
loopne
mov
inc
imul
xchg
pop
mov
sbb
or
mov
decb
push
push
lcall
cld
dec
cmp
dec
cmp
or
dec
pop
movsl
lret
call
cmp
lcall
outsb
sbb
cmp
mov
cmpsl
jne
pop
jl
leave
cmp
or
dec
xchg
cmp
mov
dec
lods
call
popf
out
xchg
sahf
jg,pn
lahf
int3
cmp
insb
inc
ds
mov
out
das
arpl
adc
inc
mov
fimuls
lret
jg
pop
mov
out
test
pusha
std
loop
xchg
ljmp
push
iret
and
clc
stc
pop
std
add
mov
push
and
incl
lods
call
push
aas
fsts
popf
push
pop
sbb
add
jb
cmp
je
jmp
cmp
push
inc
adc
ds
lea
mov
popf
idivb
sbb
adc
test
pushl
add
jb
dec
xchg
sbb
and
pop
push
pop
daa
clc
mov
incl
dec
pop
sub
into
push
inc
sbb
jbe
sub
xor
mov
cmpsb
sbb
inc
sbb
fstpt
decl
rolb
jns
and
stos
mov
in
fstpl
sbb
jae
out
or
js
pop
nop
jg
mov
hlt
inc
test
clc
cld
repnz
cmp
cmpsl
push
xchg
xor
arpl
sub
dec
jg
dec
int3
xor
loopne
outsl
pop
xor
dec
cli
out
mov
push
pop
mov
jle
jns
pop
sar
es
adc
out
add
lcall
jne
cmp
xor
test
cs
jmp
inc
inc
push
test
add
and
lock
faddl
cmp
jge
das
mov
out
mov
mov
decl
jmp
xor
and
das
jge
adc
xchg
adc
sub
loope
incb
decl
sbb
lea
test
pop
gs
mov
jo
in
jg
push
ret
mov
jns
nop
mov
incl
insl
les
movsl
inc
xlat
out
adc
jne
ljmp
pop
cs
dec
adc
push
pop
mov
in
pop
les
mov
inc
stc
and
xchg
cmp
mov
iret
test
int3
push
fldl
jg
imul
addr16
lds
mov
pop
lock
inc
imulb
add
mov
mov
or
jge
subb
inc
mull
call
ljmp
xchg
fs
jo
std
stos
in
fwait
jbe
mov
adc
or
push
jae
mov
decb
adc
jg
imul
jb
sbb
decl
out
push
fiaddl
in
loop
fidivrs
jecxz
call
xchg
out
adc
mov
lds
loopne
fsubs
mov
or
ret
add
mov
addr16
pop
ljmp
add
jns
jb
mov
ja
std
add
imul
dec
pop
push
decb
pushf
scas
xlat
out
je
and
das
lahf
xchg
shl
cmpb
int3
int
outsl
fcompl
dec
mov
cld
push
xor
mov
push
jg
fidivl
outsl
les
outsb
into
cmp
loope
jbe
sub
sbb
popf
sti
sbb
decl
popa
xchg
lods
ja
cwtl
jo
mov
dec
mov
cld
movsb
xchg
sub
fildll
inc
pop
std
lea
je
jns
dec
mov
lret
shrl
mov
outsb
xorl
fwait
call
in
add
sti
ljmp
adc
outsl
cld
mov
mov
cmpsb
mov
mov
and
lods
movsb
std
mov
sub
fcos
pushl
std
add
push
popf
ljmp
push
fldenv
jb
mov
out
dec
repnz
int
imul
ljmp
mov
xchg
push
leave
loop
jns
mov
clc
ljmp
inc
fmull
data16
add
ret
or
stos
push
and
mov
out
test
icebp
xchg
pop
push
sbb
mov
mov
push
mov
push
pop
and
xor
sbb
arpl
cmp
outsl
pop
or
inc
push
and
dec
dec
cmp
incb
inc
cld
jmp
out
jge
and
lret
add
mov
jg
jp
aaa
sti
arpl
xor
pop
rcrl
imul
stc
jle
fimull
or
jo
mov
pop
enter
aad
jmp
mov
insl
and
out
inc
cwtl
add
decb
stos
cmp
fwait
mov
and
and
xor
icebp
int
icebp
fisubl
push
fists
ss
and
ljmp
xchg
pop
sub
insb
fcoml
cli
or
add
jmp
push
ss
mov
sbb
cs
adc
push
mov
pop
fcoml
call
sbb
mov
pop
popf
pop
xchg
jmp
bound
sub
aam
decl
pop
dec
sarl
lcall
add
ja
add
jno
add
mov
dec
jno
ss
jmp
jmp
pop
push
dec
pop
add
jno
incb
push
cmpsl
popl
je
in
aam
call
call
jg
jne
dec
int3
cmp
jle
cs
cwtl
xor
lcall
stos
mov
cmpsl
lea
adcb
decb
add
ror
sub
jb
ja
push
xor
xor
data16
xlat
and
decl
pop
movsl
mov
mov
mov
imul
pop
inc
aaa
cwtl
pop
popa
fildll
stos
cmp
add
cmp
fnstsw
mov
loopne
lcall
shlb
sahf
push
jo
add
movsl
jno
test
clc
sub
fstpt
xchg
and
inc
mov
sub
mov
jmp
inc
add
mov
jg
push
rolb
stc
dec
add
sbb
sbb
sarl
loopne
inc
cmp
dec
and
pop
or
push
jne
mov
push
int3
and
cmc
lea
and
jg
cld
jle
sahf
cmp
xchg
cli
xor
ljmp
rcrb
aaa
mov
mov
push
popa
js
jg
xchg
xchg
jne
cmp
add
test
jno
push
inc
lds
stos
ja
xchg
xor
movsb
and
jae
sub
out
roll
mov
icebp
out
leave
jbe
gs
int3
xchg
pushf
jg
or
mov
inc
negb
mov
jg
pop
decl
adc
in
mov
jo
test
mov
pop
arpl
fwait
stc
sub
mov
call
and
bound
lcall
dec
movsl
lea
sti
mov
sbb
test
push
inc
hlt
decb
and
mov
decb
sbb
push
jns
mov
lcall
pop
push
in
pop
cmpsl
xor
xor
lcall
in
mov
cld
incl
nop
mov
fisubl
cmp
add
movsb
push
and
orb
pop
jg
js
lcall
inc
jge
jp
dec
dec
out
sub
pop
cwtl
test
jo
lock
mov
lock
insb
lea
pop
dec
shlb
dec
push
dec
pop
addr16
shlb
pop
addr16
pop
mov
pushl
inc
jbe
jo
sbb
mov
or
call
jmp
mov
adc
pusha
xor
je
inc
mov
adc
xor
xchg
inc
rolb
fwait
pop
xchg
inc
es
add
jmp
aaa
icebp
mov
or
cmp
xor
incl
gs
ss
mov
dec
push
lods
mov
xor
call
inc
jo
inc
movsl
adc
add
jg
push
mov
pop
push
dec
or
push
push
ret
loope
pop
mov
ljmp
in
inc
sub
out
xor
dec
push
orl
aas
jg
icebp
incl
mov
and
idiv
mov
and
sti
cld
sbb
and
sbb
daa
mov
mov
pop
nop
jmp
mov
mov
push
sbb
mov
outsl
stc
popf
cs
add
mov
mov
push
aad
and
dec
adc
cld
ds
addr16
jns
add
cmp
ret
jmp
xor
lcall
rcrb
cltd
out
pop
add
cmp
mov
cs
jno
loopne
in
mov
ljmp
ret
inc
push
xor
lcall
dec
mov
aam
insl
incb
push
popa
aaa
call
ja
jg
dec
aas
mov
call
pop
daa
int3
jg
pop
inc
dec
jns
movsb
decl
push
fwait
aaa
inc
jbe
pop
adc
pop
push
add
jg
jb
cli
mov
mov
mov
push
fildll
cmc
mov
pmaxsw
cli
xchg
pop
aaa
roll
add
daa
loopne
and
jnp
pop
call
js
test
mov
std
fdivs
out
mov
pop
mov
sahf
add
popa
rclb
pop
mov
mov
pop
push
dec
clc
mov
int3
outsl
aaa
inc
push
jge
ljmp
push
xlat
lods
clc
inc
ds
push
push
mov
mov
jo
mov
and
and
push
movsb
pop
cmp
pop
jne
imul
in
inc
roll
fimuls
jle
fsin
vmovntps
push
sub
iret
cmp
fsubrl
aad
push
subb
mov
das
sbb
push
cmovne
inc
xchg
add
pop
sbb
pop
icebp
dec
clc
jnp
sbb
jne
sub
add
jg
ss
sbb
push
mov
mov
loopne
incl
jmp
outsb
in
xchg
ficomps
mov
add
inc
int
pop
mov
adc
call
sub
mov
or
int
inc
push
test
stos
les
es
scas
cli
cmpsb
fs
jnp
insl
push
mov
fistl
push
xor
push
jmp
out
sub
cmovae
in
aas
dec
jb
sub
pop
rclb
in
je
or
subl
inc
ret
mov
mov
je
sbb
test
call
ja
dec
or
or
call
rclb
imul
mov
scas
xor
jmp
xor
mov
nop
pop
out
insl
or
or
lods
call
iret
aas
pop
ss
adc
cmp
outsb
xor
cmp
sub
add
sbb
imul
jb
inc
in
jae
xor
jnp
jg
adcl
mov
inc
mov
jns
mov
dec
call
dec
fwait
bound
or
decl
sub
jno
jmp
stos
jne
add
cld
decl
jg
cmpsl
pop
jl
je
xlat
ds
and
xchg
or
call
sub
mov
mov
push
out
mov
adc
lret
dec
popa
iret
ss
adc
sub
scas
hlt
jle
adc
pop
adc
nop
jl
sub
push
lds
push
pop
ret
cmpsb
xor
xorb
aas
pop
adc
filds
mov
or
lret
mov
int3
cmpsl
cmp
add
inc
clc
mov
mov
cli
xor
dec
loop
insb
clc
pushl
pusha
inc
sub
stos
cmp
jno
punpckhdq
mov
jmp
ret
xor
pushl
jb
sbbb
pop
idivb
clc
pop
dec
cli
jne
fists
notb
jne
filds
decb
and
pop
cli
inc
sub
mov
mov
and
mov
hlt
jl
jno
cmp
push
cmp
fwait
jg
ret
call
push
xchg
jl
xor
movsl
and
mov
scas
xchg
mov
nop
inc
cmp
xchg
pop
clc
dec
xlat
mov
cmp
and
mov
add
inc
and
xor
mov
outsl
scas
jbe
cmp
add
fwait
push
jns
cmp
js
xchg
mov
inc
xchg
adc
sub
call
mov
xchg
das
jb
sbb
sbb
dec
xchg
scas
lcall
sub
jno
cmp
outsl
push
mov
adc
xor
incl
jl
push
pop
subb
xor
pop
mov
test
lcall
fwait
mov
mov
sub
test
je
movsl
xchg
xorb
sbb
jmp
pusha
xchg
xchg
inc
scas
loopne
or
nop
and
push
mov
mov
push
inc
movsb
pop
add
ret
lods
and
dec
push
lea
lods
push
decl
sub
push
push
in
mov
aaa
lcall
push
dec
pop
cmpsl
cmpsb
push
adc
inc
in
insb
xchg
cmp
sbb
and
inc
mov
lods
popa
adc
out
imul
xchg
xchg
mov
icebp
mov
xorl
mov
xchg
in
lods
fildl
testl
or
jg
pop
push
in
xor
gs
decl
cmc
cmp
mov
repnz
cltd
fsts
push
mov
aaa
adc
call
mov
cmc
mov
mov
imul
popa
int3
scas
cmp
jg
daa
insl
ljmp
sbb
lret
das
mov
cmpsb
ljmp
lods
divl
mov
sub
test
mov
and
push
cmp
cmp
jbe
je
sub
mov
insb
add
mov
hlt
incl
test
add
subb
fisubrl
push
pop
fadds
push
sbb
push
dec
cli
jnp
cmp
gs
pop
cmpsw
movsb
push
lods
adc
pop
and
mov
mov
inc
into
or
pop
lcall
stos
mov
inc
cmp
pop
mov
adc
add
push
pop
icebp
das
cli
xchg
xchg
push
or
adc
push
daa
cmp
xchg
mov
sub
add
dec
movsb
mov
mov
sbb
popf
mov
mov
in
adc
mov
dec
sub
pop
decl
mov
mov
insl
stos
adc
mov
xor
and
sub
lcall
test
push
mov
adc
iret
add
int
movsl
fsts
in
lock
jg
add
sahf
stos
decb
jb
sbb
cmp
js
fidivrs
imul
xchg
mulb
cmp
nop
push
jg
pop
fstps
dec
pop
mov
addl
xor
fwait
call
test
dec
loop
insb
jecxz
les
ja
movsl
and
test
push
enter
test
mov
cmpsb
ja
outsl
imul
mov
mov
pop
add
dec
mov
xor
lcall
and
sub
pop
jns
jbe
jb
inc
xchg
adc
mov
jnp
xor
incl
pop
cwtl
loope
xchg
or
push
out
cltd
sti
sub
das
xor
popf
mov
push
adc
adc
pop
cmc
mov
aad
insb
jmp
in
clc
pop
in
rclb
sub
sar
fisubl
cltd
push
lods
sub
mov
jp
xor
mov
movsb
pop
sar
jg
mov
std
add
sahf
repnz
add
push
adc
push
rorl
decl
xor
xor
enter
jbe
imul
or
inc
dec
jae
jg
call
repz
xchg
movsl
dec
dec
out
add
add
adc
xchg
fildl
mov
xor
and
xor
xor
inc
movsb
jge
shlb
push
mov
push
fcomip
lret
out
cmp
pop
clc
frstor
dec
mov
imul
pop
notl
pop
std
sub
jmp
rorb
and
pop
lods
xor
les
adc
dec
stc
aas
mov
icebp
ljmp
pop
mov
ret
dec
jno
xchg
mov
out
pop
pop
fildl
lcall
adc
xchg
add
cmpsb
mov
rol
inc
pop
fcmovbe
loopne
jge
in
jnp
aaa
sbb
data16
jb
pop
dec
pushl
adc
jle
dec
dec
push
jl
dec
xor
sbb
push
and
jl
jg
cwtl
jo
mov
dec
mov
or
negb
adc
lahf
cltd
mov
or
mov
pop
sub
sbb
lahf
data16
cld
jbe
in
pop
pop
call
push
push
sarb
push
inc
push
push
dec
das
xchg
mov
mov
je
pop
xlat
dec
inc
out
stos
imul
lcall
jge
add
and
jbe
add
add
jnp
mov
outsl
and
push
outsb
jno
xor
jecxz
popa
fnstsw
in
arpl
scas
mov
ret
push
loope
test
xor
mov
fs
inc
jno
or
mov
adc
jg
inc
sub
dec
ss
xchg
fdivr
sahf
mov
xor
lods
sbb
inc
insl
jmp
jg
notb
outsb
ja
bnd
hlt
ret
ljmp
popf
aam
adc
inc
add
push
cmp
std
mov
and
xchg
inc
fidivrl
or
mov
ds
ljmp
jl
pop
decb
add
mov
adc
adc
inc
mov
mov
adc
or
jno
or
jnp
push
jo
aam
push
adc
mov
insb
decb
outsl
loop
pop
xchg
jbe
aam
fs
adcb
jbe
adc
test
push
cmpsb
push
jg
dec
ljmp
mov
incb
lea
decl
lcall
mov
jo
fsubrl
pop
and
and
test
or
into
pop
and
jb
cmpsl
push
nop
xor
movsb
cltd
mov
jno
push
jle
decb
leave
and
pop
mov
cld
pop
xor
push
inc
adc
cmp
mov
cli
scas
jl
mov
data16
sub
aaa
or
add
xor
xchg
mov
dec
insl
in
aad
movb
pop
imul
lods
or
xchg
mov
loope
inc
mov
mov
sub
out
and
cmpl
mov
jg
test
lods
out
mov
push
mov
scas
jle
or
push
pop
ljmp
xchg
sbb
clc
ss
sbb
mov
adc
in
jg
dec
cld
dec
dec
cmp
mov
sahf
push
sbb
xor
lcall
fwait
cmp
and
movsl
mov
fildll
rcll
out
jo
adc
std
ret
xor
fsubrp
adc
ljmp
cmpsl
mov
cmp
or
adc
imul
jbe
jbe
int
inc
fsubs
pop
sbb
repz
mov
jo
idivb
add
ss
jb
es
insl
push
inc
decb
cs
imul
xor
pusha
aad
cli
call
mov
arpl
fisttpl
jecxz
jae
and
sbb
or
xchg
pop
icebp
push
sub
push
xchg
js
decb
jg
sub
push
pop
cmc
inc
addr16
lods
adc
push
add
jmp
push
adc
das
addr16
add
stos
pop
dec
cmp
incl
sub
aaa
popa
inc
fists
pop
mov
cs
pop
mov
pop
inc
dec
leave
imul
add
xor
fists
nop
cmp
mov
dec
mov
mov
incb
movsb
in
subb
nop
pop
sbb
in
test
ljmp
pop
jg
jmp
inc
das
cmp
es
mov
add
mov
insb
fsubrl
dec
shll
repnz
and
pop
stc
sbb
sbb
mov
lods
pusha
lcall
incl
outsb
stos
aas
pushf
shll
pusha
jbe
mov
decl
lock
js
pop
test
push
pushf
add
sub
das
dec
std
fldenv
xchg
xchg
and
and
xchg
in
push
push
adc
push
pushf
sub
clc
inc
hlt
stos
dec
fcom
mov
jmp
cmpsl
clc
or
sarb
mov
inc
or
xor
ljmp
lods
mov
adc
int3
xor
sbb
cmpsb
sbbb
scas
insb
adc
jle
mov
jle
decb
incl
dec
cli
push
test
jno
jbe
sahf
xor
fld
decl
xor
add
xor
cmp
outsl
mov
adc
add
sbb
adc
push
xor
ss
popa
or
call
pop
add
adc
sbb
and
sti
push
jno
cmp
xchg
je
loop
push
adc
mov
lcall
dec
cmp
cmp
cmp
cmpsl
or
lea
adc
lods
sbb
inc
jmp
scas
adc
or
sbb
clc
pushl
mov
outsl
pushw
aad
dec
popa
ret
ja
adc
outsl
mov
xchg
ljmp
les
mov
sub
inc
push
es
sbb
mov
gs
lock
dec
pop
inc
call
xor
bound
jmp
mov
xor
movsl
hlt
test
andl
nop
arpl
jo
and
xor
pop
cmc
push
incb
add
adc
mov
fisttpl
cmp
mov
cmc
mov
cmp
inc
jecxz
ss
test
lea
js
ficoms
decl
clc
inc
dec
xchg
gs
push
aad
pop
sbb
lock
mov
push
push
inc
mov
jg
lcall
pusha
test
lods
insb
call
pop
add
adc
inc
imul
and
xlat
imul
out
jne
out
push
je
push
sub
addr16
push
inc
data16
xchg
adc
jo
push
clc
or
push
fisubl
js
dec
adc
sub
jmp
lcall
jecxz
ret
loop
pop
mov
add
jns
dec
xchg
add
xchg
cmp
inc
ds
rcll
jle
xchg
pusha
fists
cmp
lock
stc
adc
push
les
xlat
aas
inc
push
mov
jl
push
push
mov
sbb
jp
and
pop
or
dec
xchg
sub
pushl
mov
mov
cli
mov
sub
scas
js
lret
mov
movsb
mov
xchg
int
cmpsl
jb
sbb
push
call
mov
rorl
sbb
lcall
or
aaa
sbb
mov
add
mov
imul
inc
dec
push
jg
jo
pusha
mov
jle
in
test
out
clc
incl
xlat
outsb
fwait
and
fstpt
inc
jl
xor
loopne
pop
add
out
mov
ljmp
sahf
test
jge
ljmp
ss
mov
inc
ljmp
cmp
bound
lock
rol
pop
push
pop
add
inc
jecxz
negb
into
fcoms
ja
jg
push
rcr
inc
mov
sub
in
xchg
imul
stc
addl
push
arpl
pushl
in
mov
sbb
xchg
dec
add
cs
insb
out
jno
dec
ja
mov
xor
pop
test
or
xor
iret
loopne
sub
pavgb
add
lahf
jp
call
decb
loop
jo
pop
loopne
jnp
pop
cmp
jg
cltd
inc
inc
lret
push
add
addl
fstpl
and
jg
push
cs
scas
cmp
mov
popa
addr16
out
insb
test
push
or
cld
adc
push
jmp
cmp
ret
xchg
repnz
cld
das
mov
lock
jg
or
inc
jmp
insb
gs
int
xorl
lret
cwtl
cli
imul
fnstcw
popf
ret
in
cmp
sub
sub
dec
movsl
add
dec
cli
pop
out
inc
sub
out
ret
popa
out
lret
mov
cmp
scas
pop
aam
push
aam
sub
jmp
test
nop
jle
xchg
imul
pop
sub
scas
mov
sub
jmp
ss
idivb
mov
jl
je
cmp
pop
outsb
out
xchg
ja
inc
pushl
jns
sbb
push
push
out
fs
add
data16
inc
aaa
add
sbb
jg
subb
xchg
inc
je
pop
jl
inc
jmp
pop
popa
xor
cs
lods
xor
cld
dec
mov
xchg
stos
jb
pop
imul
insl
dec
push
cmp
pop
inc
pop
pop
addr16
dec
xlat
data16
js
ljmp
loopne
dec
dec
dec
pop
xor
aad
jno
repnz
ljmp
hlt
arpl
sbb
push
adc
inc
pop
stc
test
sub
jecxz
mov
into
cmp
cltd
jno
movsl
cltd
shlb
cmpsl
decl
test
fildl
jo
and
lock
push
jl
test
mov
movsb
repnz
std
jmp
jle
or
mov
inc
fucomp
inc
decb
add
aaa
pop
out
scas
popa
decb
add
stos
mov
xor
jns
inc
mov
mov
mov
outsl
xor
aas
mov
iret
cwtl
xchg
push
das
decb
neg
lods
push
push
mov
lods
clc
mov
lret
xor
jmp
imul
enter
adc
repnz
mov
jns
push
insl
lea
out
js
test
test
mov
loopne
add
call
add
js
lods
decb
roll
movsl
jp
sub
ds
cli
ds
rcl
call
dec
arpl
sbb
leave
xorb
cmp
xchg
jg
lods
decl
jmp
cmpsb
or
cmp
pop
enter
das
adc
xchg
out
dec
incb
and
js
test
adc
cmp
push
popa
push
push
repnz
pop
xor
pop
add
jmp
outsb
in
push
in
sti
mov
fdivs
fdivr
xchg
mov
test
fs
pop
fwait
iret
or
inc
les
aas
cwtl
fsubl
fildll
mov
bound
adc
jmp
sub
sub
pusha
lret
dec
xchg
sbbb
inc
in
imul
mov
xchg
mov
jg
or
push
repnz
inc
shlb
and
sbb
lcall
adc
adc
cmpsl
jns
inc
jae
fs
xor
adc
jmp
mov
xlat
jg
test
pop
fcomps
ljmp
and
dec
inc
dec
dec
hlt
xorl
and
sbb
sub
out
addb
call
shl
mov
stc
inc
stos
xor
in
xchg
push
mov
xchg
in
call
pop
inc
cli
and
lods
sbb
pop
insb
jmp
sub
sub
loopne
hlt
mov
int3
jge
push
stos
loopne
jne
pop
sub
xor
cmp
and
xchg
outsl
jecxz
jne
sub
push
jmp
lcall
xor
jp
dec
popa
adc
rcrb
mov
leave
push
mov
sub
mov
lret
div
xchg
push
vpaddd
andb
sbb
mov
and
cmp
mov
decb
test
sbb
incb
ljmp
xor
push
add
sarl
jno
adc
mov
add
mov
hlt
mov
imul
inc
add
int
push
ljmp
xchg
cli
jp
pop
xor
mov
mov
pop
incb
pop
inc
es
aaa
stos
shlb
ljmp
mov
mov
sbb
out
xor
xorl
mov
jbe
mov
cltd
add
inc
decb
movsl
adc
scas
mov
loope
mov
cmpsb
scas
fwait
mov
sub
subl
push
push
inc
sbb
repz
das
cli
sub
jp
outsl
inc
lds
adc
jmp
cltd
nop
pop
xlat
mov
inc
insl
push
xchg
jg
incb
subb
movsl
lret
pop
fisubs
adcb
fwait
pusha
std
repnz
jl
ja
adcb
adc
cli
jmp
mov
sub
enter
sbb
fwait
repz
scas
loop
and
ljmp
jae
dec
push
xchg
xor
sub
mov
inc
aad
enter
lcall
cltd
pop
scas
fcoml
gs
adc
lcall
iret
add
std
jbe
outsb
xlat
cwtl
jl
scas
pop
in
std
sti
pushf
cli
lahf
sub
sbb
stc
ja
aaa
jmp
mov
push
add
adc
adc
push
leave
test
jge
or
and
clc
cmp
add
sbb
mov
in
push
push
addb
mov
jle
xor
popl
xchg
jno
imul
lahf
mov
push
jnp
xor
inc
mov
std
mov
into
cmp
inc
adc
inc
cmp
mov
mov
icebp
jg
jle
stos
ljmp
fsubrl
push
mov
inc
or
iret
push
lds
sbb
inc
adc
cmp
adc
mov
lds
sub
inc
sub
pop
or
adc
loopne
push
out
sub
rorb
cmp
pop
lcall
incb
lea
std
fwait
jle
push
add
mov
sub
mov
ljmp
incb
jmp
mov
push
mov
scas
scas
mov
xor
outsl
sbb
mov
xlat
ret
adc
call
cltd
sahf
mov
mov
dec
decl
add
lods
clc
sub
and
mov
mov
pushf
mull
inc
mov
jle
pop
cmc
flds
sbb
cld
cwtl
jno
jnp
mov
pop
mov
sbb
out
mov
ljmp
pop
push
imul
xchg
mov
jb
xor
js
or
cmp
add
sub
push
push
inc
inc
and
pusha
leave
out
adc
outsl
in
rorl
add
outsl
push
fwait
dec
jo
sbb
add
out
out
add
popa
and
xor
pushl
sub
sbb
jns
std
pop
in
dec
je
push
jns
dec
leave
or
pushl
aas
imul
sub
push
mov
loop
repnz
jg
call
fnsave
inc
pop
out
pop
iret
xchg
jbe
scas
arpl
mov
inc
sbb
stos
jle
test
iret
mov
ljmp
imul
incl
int3
mov
mov
push
aad
std
xor
mov
inc
cli
lea
cmp
mov
xor
pusha
dec
adc
mov
cmc
ljmp
xlat
mov
add
push
push
sub
das
sbb
and
xor
sbbl
jle
incb
pop
add
fs
stos
rcrl
dec
dec
out
es
mov
push
lahf
scas
sub
repz
decb
pop
sub
sbb
jg
sarb
scas
arpl
xchg
push
ja
or
pop
pop
js
scas
es
mov
fs
aaa
mov
or
mov
jae
scas
push
xchg
mov
jg
mov
mov
add
xlat
adcl
sub
outsl
call
mov
mov
repnz
xor
push
jg
outsl
mov
xchg
int
mov
jns
sub
test
and
ljmp
xchg
mov
dec
jae
hlt
mov
ret
cmpsl
cmp
jno
mov
cmc
xchg
mov
pushf
mov
fadd
das
xchg
push
jne
push
cwtl
xchg
pushf
lcall
push
or
inc
pop
dec
push
js
mov
out
movsb
ljmp
aam
scas
jbe
scas
mov
loope
mov
push
inc
push
push
jbe
push
pop
push
fistpll
inc
test
jle
pop
dec
loopne
cmp
push
pop
dec
add
popf
sub
outsl
push
movsb
sub
xchg
mov
pop
sbb
pop
lea
imul
pop
incb
inc
dec
cmp
sub
decl
pushf
mov
dec
pop
cltd
dec
mov
push
jge
les
dec
push
jne
pop
lock
ja
and
lea
dec
dec
inc
jmp
cmp
test
ficoms
and
jae
popa
shll
test
mov
or
decl
mov
cmpsb
xchg
insl
push
push
push
test
jg
jne
dec
adcl
loope
sahf
call
mov
push
mov
daa
push
xchg
hlt
lods
cs
sbbl
push
pop
xor
call
sbb
inc
mov
mov
mov
jg
push
jp
flds
pop
ficompl
insl
pop
inc
inc
xor
sub
jp
aas
push
ja
stos
sbb
into
or
out
push
arpl
jecxz
fwait
jmp
es
hlt
xchg
popa
testb
out
punpcklbw
jmp
pop
data16
pop
jg
inc
inc
mov
mov
pop
les
jg
arpl
repnz
mov
test
jge
dec
pop
iret
jg
pop
pushl
sbb
jbe
pushf
push
dec
out
jne
nop
adc
mov
add
call
mov
or
cmp
adc
je
and
jne
or
jg
mov
push
add
cmp
inc
mov
lcall
mov
lods
jp
ljmp
inc
adc
jb
ja
aas
push
shrb
insb
es
dec
idivl
or
mov
sub
incl
or
mov
arpl
mov
jg
push
loopne
pusha
loopne
pop
insb
sbb
xor
pop
sub
mov
xchg
mov
arpl
cmpsl
add
inc
loop
sbb
leave
push
xor
popa
inc
push
sub
out
addr16
dec
dec
adcb
push
daa
mov
mov
pusha
adc
test
insb
mov
inc
movsb
mov
push
dec
mov
dec
clc
sub
push
dec
pop
jb
xor
and
mov
inc
inc
push
leave
movsb
sub
mov
cmp
xchg
sub
jmp
scas
mov
mov
icebp
pop
inc
filds
inc
rclb
inc
pop
loopne
in
xor
jmp
loop
rorb
inc
in
and
shll
mov
out
sbb
call
in
xor
ficompl
inc
insl
xor
pushf
idivl
dec
rcrb
bound
push
cltd
lahf
push
aad
nop
jle
mov
pop
mov
lock
mov
daa
push
push
cwtl
and
das
mov
das
sar
dec
ljmp
les
and
pop
into
mov
mov
push
lock
orps
cmp
incl
popa
mov
and
fistl
lret
arpl
hlt
pop
lock
jmp
test
pop
push
dec
pop
mov
inc
and
test
mov
inc
push
pop
inc
sbb
clc
aaa
jl
sbb
push
xorl
jg
mov
mov
aaa
pushf
mov
dec
loope
push
push
fcomip
adc
sbb
je
incl
jae
cmpsb
pop
les
rcrl
mov
dec
pop
decl
push
cli
sahf
xor
sub
or
les
inc
xor
jb
int3
mov
jle
mov
mov
jo
inc
ret
push
push
fsubs
fisubrs
sarb
int
pop
mov
lods
std
incl
or
popf
inc
pop
fs
repz
push
inc
jge
xor
jp
jmp
aaa
add
dec
icebp
inc
jae
gs
cmpsl
incb
add
lcall
fsub
das
adc
popa
ficoms
nop
pop
fcoml
add
mov
inc
or
addr16
test
mov
dec
in
adcl
inc
shlb
jmp
cs
inc
and
add
ret
test
and
jmp
and
sbb
jmp
sbb
adcl
icebp
nop
scas
adc
add
das
js
mov
mov
pop
add
aaa
push
ljmp
cltd
cmp
inc
fwait
push
mov
inc
jbe
sub
hlt
data16
enter
add
movsl
in
mov
and
clc
sbb
icebp
out
mov
iret
pop
fs
push
bound
cmp
mov
adc
popa
mov
lock
push
xchg
cmc
lret
cmpl
push
jae
decl
pop
in
mov
outsb
add
js
sbb
cmp
orb
add
cwtl
es
dec
adc
mov
mov
pop
cltd
out
xor
cli
inc
cld
clc
xor
mov
mov
enter
in
decb
dec
incl
and
lock
dec
shr
in
sbb
jmp
sbb
sub
cmp
cwtl
into
leave
ljmp
aad
jno
push
jecxz
addr16
pusha
jmp
or
mov
divl
in
icebp
or
fs
ret
mov
add
rcll
les
sbb
mov
pushl
out
lcall
adc
les
test
dec
mov
add
jmp
add
mov
add
in
and
jg
xchg
and
ljmp
mov
jle
in
decb
cmpsb
mov
lods
xlat
sub
bound
stos
decl
nop
les
in
fwait
sub
pop
pop
sarl
cmp
push
fwait
clc
data16
fiadds
out
jge
call
hlt
fistps
les
lahf
out
mov
mov
aas
add
bound
mov
enter
sar
push
icebp
xor
adc
push
sbb
jno
xor
mov
jge
fisttpll
mov
imul
lret
fsts
inc
nop
lcall
fwait
xor
cmp
sbbb
ds
fstl
mov
mov
les
push
pop
ret
fisubs
popa
jge
lods
adc
out
push
arpl
fwait
add
lret
shl
or
adc
cld
mov
add
fnsave
push
sub
call
stc
cmpb
inc
data16
lcall
stos
jle
lods
ss
hlt
mov
mov
imul
pusha
adc
fwait
call
loop
aad
test
stc
icebp
sbb
addr16
shrl
bound
pop
cli
or
das
add
add
fadd
sub
popf
dec
imul
and
rorb
out
jg
test
inc
ds
repnz
cmc
mov
repz
outsb
and
aaa
rcll
cs
mov
aas
adc
insb
outsl
pop
dec
bound
mov
mov
jno
sub
das
clc
dec
enter
push
adc
int3
add
mov
sub
dec
jnp,pn
leave
and
outsl
cli
test
inc
lock
inc
std
pushl
sahf
xor
sbb
insl
push
jle
mov
xchg
jb
xchg
js
fstpl
cwtl
lret
icebp
push
pop
out
xchg
xor
in
jmp
ds
lock
lcall
cwtl
xchg
xchg
xchg
mov
fwait
jmp
inc
push
or
xor
std
sbb
inc
loop
and
push
test
or
mov
enter
out
lock
dec
iret
arpl
loope
xor
sub
cltd
ret
dec
xchg
jmp
or
push
aaa
cwtl
test
xor
mov
shll
jae
jne
in
sub
pop
lcall
orl
in
stc
pop
movsl
jecxz
nop
nop
mov
loope
cmp
aad
and
mov
mov
add
outsb
repnz
jle
sub
movsl
cld
hlt
sbb
adc
mull
int
mov
scas
cmp
add
mov
xor
movsb
cmc
xchg
dec
lods
out
pop
idivl
adc
pop
shrb
fwait
push
js
repnz
and
sahf
movsb
mov
inc
mov
adc
or
fwait
push
out
mov
xor
lcall
mov
rolb
fisubrl
push
jns
push
fs
data16
decb
add
test
decb
push
or
sub
pop
stos
sbb
call
jl
inc
mov
jl
shll
lcall
rorl
xor
lahf
pushf
add
pop
inc
jno
sbb
int3
sti
cmp
call
lock
dec
in
xor
mov
pop
xchg
fcompl
mov
push
call
ljmp
and
inc
rcl
sub
sub
cwtl
fs
pusha
jae
add
out
cli
mov
dec
aad
xor
in
cmp
mov
mov
lods
out
sbb
neg
xor
ljmp
incb
add
lahf
rcrb
jecxz
push
ljmp
or
cli
adcb
add
ja
pop
pop
pusha
jmp
sti
cwtl
jbe
int
repz
outsb
and
mov
xchg
in
pop
ss
fldenv
push
call
inc
dec
push
xchg
call
loopne
shr
mov
test
loop
push
call
cmp
pop
clc
lock
jg
jle
push
xor
outsb
fildll
push
xchg
inc
out
xlat
pop
icebp
js
xor
clc
xlat
pop
mov
sub
mov
ds
icebp
mov
or
orl
test
xchg
roll
mov
test
lock
movsl
lods
jg
sub
xchg
add
add
mov
mov
sub
hlt
and
add
iret
push
mov
adc
push
sbb
mov
mov
add
repz
decb
jae
lahf
outsb
push
call
popf
push
in
fnstenv
aaa
add
add
clc
jmp
inc
stos
pop
aaa
dec
jne
das
andb
aam
sbb
or
daa
jbe
subl
in
pusha
clc
jg
and
dec
clc
mov
inc
aam
ljmp
fwait
mov
pushf
out
stos
push
push
mov
pop
dec
add
stos
das
lcall
int3
pop
lret
sahf
fcomip
sub
pop
sarb
imul
popa
lcall
loope
cli
and
sti
jae
or
int
test
dec
pop
je
scas
nop
cmc
push
lret
adc
shll
cs
adc
rolb
fisttpl
ret
mov
push
mov
inc
cmpsb
cmp
roll
mov
lods
and
ror
and
inc
push
inc
loop
add
fidivl
mov
mov
and
incb
scas
js
cs
repz
hlt
jb
dec
cmc
cli
lcall
push
sbb
aas
adc
shrl
mov
dec
out
jb
dec
lds
jmp
decl
pushf
icebp
xchg
inc
inc
mov
mov
repz
pop
loopne
dec
rep
js
icebp
xor
xorb
mov
out
out
adc
adc
cli
pop
callw
mov
inc
inc
pop
mov
nop
push
pop
loopne
dec
cld
mov
push
jle
mov
imul
adc
add
push
test
cld
mov
pushf
or
jle
inc
sub
jbe
jmp
cmc
nop
les
jmp
jg
ljmp
gs
jp
mov
shr
xor
outsb
and
jmp
out
jl
and
sbb
fs
mov
les
cli
inc
outsl
mov
repz
and
and
lcall
int
test
cmp
aas
pop
scas
xchg
mov
decb
fdivs
dec
fsubs
sbb
lret
jb
cli
aad
decb
in
daa
incb
pop
xchg
call
aas
xor
xchg
jmp
mov
dec
movsl
pop
xchg
adc
sbb
mov
loop
sbb
inc
pop
sahf
lahf
decb
lds
loope
je
mov
mov
mov
js
cld
repz
cmp
jle
xlat
incl
icebp
adc
cmp
xor
jmp
lcall
add
mov
out
xor
inc
push
sbb
xor
inc
mov
lahf
mov
dec
mov
pop
xor
mov
outsb
adc
xlat
cmp
nop
cmc
sub
popa
out
bound
jg
pop
inc
cs
sti
sti
sub
lock
ret
sbb
sbb
dec
add
mov
cltd
xor
js
xchg
arpl
loope
dec
stos
pusha
incb
leave
sbb
jnp
sbb
outsb
mov
xor
adc
pop
dec
fidivrl
arpl
scas
data16
adc
pop
mov
aaa
adc
out
decb
hlt
jnp
mov
idiv
leave
fucomi
xchg
lcall
push
push
pop
dec
ljmp
mov
jnp
cwtl
or
and
push
push
dec
je
cmp
cltd
hlt
push
add
fsubs
aaa
mov
int3
xor
add
das
mov
pusha
push
fsts
not
popl
cmp
lahf
push
push
ss
xor
xchg
int
ja
dec
rol
lock
ljmp
xor
fcomps
xchg
iret
daa
pushf
mov
jmp
push
dec
fldcw
stos
sub
sub
mov
push
sbb
ljmp
and
or
fwait
dec
int3
and
insl
adc
mov
addb
out
lret
rcr
sbb
jle
aam
dec
mov
xlat
or
out
test
cltd
decb
repz
out
pop
jecxz
xlat
inc
ss
mov
or
incb
std
or
ds
pusha
shrb
pop
mov
loop
and
jae
gs
jae
mov
xor
cmp
dec
fs
jmp
xchg
fstpl
rep
test
jno
cmp
test
dec
or
in
in
rclb
rolb
clc
repz
push
and
cli
out
add
sbb
in
xor
mov
out
xchg
push
mov
out
inc
aad
fdivr
std
lret
adc
xchg
push
addr16
jg
push
cld
push
dec
cmc
inc
pusha
jmp
repz
cmp
cmp
and
dec
pop
arpl
jg
jbe
stos
js
dec
or
clc
daa
insl
dec
inc
shlw
addb
stc
pushf
sbb
push
pushf
pop
pop
aad
xchg
icebp
cmp
enter
mov
jg
lods
jmp
out
stos
shl
pushf
push
xlat
outsb
or
dec
pushl
ret
xor
movsb
mov
pop
cmp
lcall
jl
jo
jne
ret
cltd
sbb
mov
int3
scas
push
cmpsl
pushf
push
outsb
movsb
jecxz
mov
in
cli
out
adc
iret
inc
stc
enter
push
sbb
or
loopne
int3
sub
push
and
jmp
icebp
lret
insb
loopne
ret
incb
jnp
jmp
test
ljmp
int
scas
inc
out
push
fsqrt
mov
lea
mov
inc
sub
jp
inc
adc
jne
test
push
dec
in
mov
xchg
in
cmp
ja
aam
mov
xlat
lea
jbe
out
and
movsb
pop
gs
cmpsb
call
adc
cwtl
loop
lock
das
jno
daa
fistpl
or
add
lock
addr16
lods
loopne
mov
jecxz
dec
movsl
popa
cmp
call
ljmp
dec
fistpll
jb
lret
ret
xor
lods
sbb
cmpsl
adc
xor
test
icebp
aad
mov
clc
push
nop
adc
mov
and
mov
insl
dec
std
lods
fists
push
je
aaa
pop
mov
and
add
sbb
call
gs
inc
sub
sub
pop
fwait
pop
dec
loopne
sahf
add
pop
pushl
loopne
inc
insl
sbb
mov
popa
repz
incb
jbe
out
push
loop
cmp
add
fnstsw
stos
mov
shrb
dec
out
jge
xor
divw
jecxz
adc
xlat
dec
push
push
lods
lock
out
push
cwtl
push
push
decb
repnz
and
out
mov
xchg
daa
iret
lods
and
aad
add
jmp
xor
icebp
push
dec
cmp
ljmp
test
jno
push
mov
loopne
sarb
jns
mov
cli
pop
cmp
js
push
sub
jno
call
lret
push
inc
gs
mov
sub
lcall
and
dec
lret
or
pop
insl
movsl
pop
test
es
and
xor
ja
jb
rclb
dec
pop
pop
pop
cmp
dec
cs
je
cmc
mov
imul
scas
imul
sarl
insl
or
jne
sbb
repnz
jl
cmp
dec
popa
nop
fnstcw
sub
pusha
lret
ss
pusha
data16
cld
int
add
mov
js
mov
pusha
dec
test
pop
mov
movsb
jo
add
scas
incl
xor
push
mov
cmpsl
ret
les
add
stos
aas
jg
cmovae
movsl
movsl
js
inc
cli
call
xchg
xchg
push
push
push
adc
incb
jle
sarl
dec
faddl
fs
or
or
dec
mov
push
movsb
sbb
xor
int3
movl
mov
sbb
mov
imul
sbb
ljmp
scas
das
xchg
xchg
mov
and
push
incb
pop
nop
pop
popf
out
scas
pop
insl
inc
jg
orb
inc
xor
push
inc
xor
lock
pushl
movb
mov
in
push
out
iret
lea
imulb
push
ljmp
xchg
das
sub
aas
rcll
aam
inc
aad
add
fs
mov
js
stos
cmp
in
or
ficoml
js
icebp
pushl
xchg
xchg
sub
inc
jle
add
xor
pop
push
ret
jg
rorb
pop
push
push
push
mov
lcall
or
stos
lods
cmp
in
insb
push
cmpsb
cmp
ror
dec
cmp
decl
test
jg
sub
cmpsl
cmp
jbe
push
dec
pop
and
inc
or
and
dec
call
out
and
push
insl
cmp
push
sets
into
dec
sbb
sbb
test
clc
mov
mov
ljmp
mov
inc
push
leave
push
ljmp
fs
fs
inc
lock
push
pop
xor
push
pop
mov
dec
lahf
sub
pushf
cmp
sub
jae
das
push
ja
test
lcall
and
ljmp
jo
cld
dec
ret
push
decl
into
add
loope
jnp
dec
ret
adc
cwtl
out
movsb
push
movl
xlat
xchg
outsl
lock
sbb
mov
fwait
leave
dec
scas
mov
arpl
xchg
cmp
jmp
jle
push
push
aaa
mov
adc
data16
mov
repnz
mov
push
outsl
in
inc
add
hlt
mov
sub
cld
pushl
pop
jno
jnp
inc
ret
fsts
cld
push
xchg
and
lea
dec
or
orb
mov
rcl
pop
cld
decl
in
sub
sti
sbb
aas
jp
fnstsw
lock
incl
jl
adc
cwtl
mov
pop
stc
cs
jo
inc
loop
pop
pop
jno
cld
lcall
push
mov
jno
dec
or
sbb
jg
cmp
repz
pop
add
fwait
jbe
adc
std
fcomip
lcall
pop
aad
inc
xor
pop
xlat
mov
ret
xchg
and
ret
xchg
jmp
lods
call
add
sub
xchg
jo
pop
int
adc
push
fiadds
and
je
movsl
push
cwtl
popa
adc
xchg
mov
shrl
call
inc
and
jne
decl
inc
jo
dec
push
cmp
mov
xor
push
or
push
mov
xor
xor
pop
add
jmp
dec
js
push
pop
xor
test
dec
popa
inc
xchg
dec
inc
mov
xor
pop
gs
bound
in
push
mov
and
dec
dec
fistps
rcll
or
cmp
add
ja
out
xchg
mov
cmp
add
pop
loopne
adcb
mov
xchg
loopne
insl
repz
cmp
mov
shlb
sub
mov
inc
sbb
in
mov
ds
sub
xor
jnp
push
push
arpl
mov
gs
push
add
ljmp
shlb
push
imul
jge
xor
pop
std
movsl
sbb
incb
xchg
fwait
pop
mov
xlat
idivb
add
es
mov
pop
in
adc
orl
lods
xchg
lcall
adc
add
lcall
movsb
mov
xchg
mov
adc
push
cmp
or
inc
dec
mov
push
add
dec
movsb
mov
enter
jle
scas
xor
ficoms
shll
push
push
sub
pop
adc
cld
sbb
xor
incb
mov
ljmp
cld
scas
fs
jae
or
das
movsl
xor
dec
pop
call
add
mov
push
scas
xchg
sub
inc
cld
jg
sub
xchg
mov
jle
and
pop
sub
add
sti
jno
decl
jb
dec
mov
dec
cmp
jg
cmpsl
int
outsl
xorb
aad
incb
addr16
push
push
push
nop
inc
xchg
pop
inc
inc
mov
sbb
sti
lods
out
jp
push
imul
popw
adc
aas
gs
xchg
mov
insb
stos
xor
jle
movsl
adc
mov
pop
add
jecxz
and
jl
mov
pop
sbb
filds
sbb
mov
adcl
push
mov
cmp
mov
lret
pop
cmp
cmp
movsl
sbb
cmp
lea
movsl
add
inc
xchg
xchg
ljmp
push
ret
dec
push
jb
cmp
movsl
ss
jo
fisubs
imul
xor
jne
fwait
push
nop
adc
dec
es
sub
push
call
and
clc
pushf
and
shlb
arpl
jns
cmp
scas
inc
mov
incl
dec
imul
or
or
mov
inc
daa
sub
or
std
xchg
ja
sarb
stos
xor
pusha
sbb
and
jns
das
sahf
call
test
insb
cwtl
mov
push
pop
mov
lcall
stos
bound
ja
sbbb
pop
aaa
cmpsb
push
je
mov
call
lods
das
adcl
jnp
imul
stc
push
lea
stos
int
in
cmpsl
std
nop
clc
decl
pop
cmpsl
movsb
addl
and
enter
jmp
sbbb
or
lods
fists
jmp
test
bts
ljmp
pcmpeqw
jne
push
xor
test
popa
shrl
jo
popa
push
addb
test
mov
icebp
add
jl
and
jb
arpl
lret
repnz
push
cli
scas
sbb
shrl
mov
in
cmp
cmpsl
pop
movsl
js
xlat
mov
loopne
in
inc
pop
sbb
rorl
fsts
pop
rcrl
mov
into
or
xchg
test
mov
sub
pop
imul
inc
push
dec
stos
xor
pop
jne
lock
gs
clc
call
inc
insl
shrl
out
pop
mov
les
inc
push
pop
cmp
pop
sub
xlat
movsl
cmp
or
subb
jge
je
xor
mov
adc
lea
mov
jg
jmp
or
jno
sbb
jle
pop
push
mov
jo
xchg
xor
mov
cwtl
ret
cmc
pusha
dec
jle
incb
sahf
jo
mov
mov
lret
ljmp
mov
dec
outsl
mov
jno
jbe
fstpt
arpl
sub
mov
push
jbe
popf
jae
sub
push
cmp
pop
or
push
jl
xlat
mov
add
xchg
incb
adc
xchg
ljmp
dec
dec
pushl
xchg
pop
jo
push
dec
lods
clc
pop
or
es
push
mov
loope
inc
addr16
ss
push
dec
inc
inc
add
out
decb
lock
and
or
mov
sub
xor
movsl
loope
xchg
sub
jl
decl
cmp
xor
addb
and
or
imul
and
push
inc
rolb
insb
pop
push
rol
mov
adc
stc
push
int3
aas
mov
pop
mov
aaa
pop
add
inc
mov
jo
pop
movsb
push
sub
xchg
jmp
cmp
sub
cmp
adc
fiadds
jle
mov
jno
inc
pop
and
mov
into
or
aas
std
paddb
cli
dec
sbb
daa
data16
addb
pop
add
dec
mov
xor
inc
decl
imul
es
addr16
push
mov
shrb
dec
ret
pop
test
pop
out
inc
out
out
stc
xchg
inc
ljmp
jge
das
arpl
insl
mov
dec
sub
and
dec
movsb
decb
or
or
mov
loope
inc
inc
lds
xor
test
xor
mov
push
add
sar
xor
jl
dec
adc
xchg
les
push
inc
js
jmp
scas
xor
add
mul
jge
daa
gs
lcall
xchg
jp
mov
inc
pop
sbb
iret
stos
inc
push
pushf
in
xorl
test
jle
pop
push
cld
jne
lret
xchg
dec
cmp
call
pop
mov
into
dec
pop
inc
scas
pop
ja
mov
adc
pop
jns
lods
xor
mov
scas
adc
add
es
call
sahf
insl
jo
fs
jg
gs
in
push
cmpsb
jno
cmp
dec
cmp
sub
sti
test
dec
xchg
incb
sub
inc
cmp
mov
mov
test
mov
aas
jecxz
popa
aas
fs
ljmp
adc
mov
mov
jg
movsb
movsl
jmp
scas
xchg
xchg
add
pop
decb
dec
jp
jmp
cmpsl
lea
sub
xchg
cmp
loope
adc
xor
mov
xchg
jne
xchg
loopne
cmc
sbb
in
mov
insb
dec
push
test
das
adc
jg
jne
dec
pop
sbb
inc
push
movsl
sub
popf
pusha
mov
ret
and
fcom
mov
scas
mov
and
mov
mov
jle
sahf
je
xchg
icebp
bound
jmp
xor
fdivr
xchg
cmp
sub
leave
pushf
aam
sahf
movsb
out
jmp
jmp
in
and
daa
pop
cmp
cmp
inc
js
incb
or
jg
test
sbb
push
push
adcl
cmp
adc
or
or
negb
mov
pusha
ds
push
inc
imul
sbb
imul
jle
pop
inc
jg
add
stos
lock
inc
or
loop
mov
cmp
mov
lcall
andl
mov
stos
dec
push
xor
dec
lahf
cmp
enter
inc
lahf
sub
adcb
and
sub
inc
incl
cmp
xchg
pop
idivb
js
adc
lods
add
mov
stos
adc
jg
pushl
jno
fidivrs
push
pop
jle
in
stc
outsb
fstps
pop
outsl
cmp
les
movsb
call
std
test
mov
das
and
jg
push
push
jno
or
adc
sub
out
pop
jo
gs
sub
adc
push
or
movsb
fists
cmpsl
xchg
stos
pop
jg
movsl
mov
jg
cli
xor
mov
scas
imul
pop
int
scas
scas
and
lods
dec
nop
or
imul
xor
cmp
dec
add
dec
mov
rorl
add
stos
jg
test
lahf
pop
stos
out
sub
out
xor
addr16
shl
dec
lods
and
xor
les
dec
dec
dec
cmp
cmp
in
mov
and
pop
mov
nop
loop
rcrb
dec
inc
xchg
mov
inc
imul
jb
mov
and
scas
in
xor
aas
inc
cmp
cmpsl
mov
xor
mov
out
clc
ljmp
and
jo
jb
push
subl
mov
popf
je
adc
fnstsw
jmp
pop
popa
and
jbe
imul
jg
add
cltd
jbe
pushf
sub
loopne
test
add
jmp
push
push
out
das
pop
pop
sbb
adc
sarb
xorb
sbb
out
cmpl
adc
add
add
push
decb
imul
decb
push
roll
in
int
or
cltd
filds
insl
arpl
sar
decl
inc
mov
int3
xor
cmp
adc
cli
cmp
add
add
fsubrs
pop
inc
aad
lcall
cli
sbb
jg
fsts
push
sbb
mov
cmpsb
xchg
jge
xor
mov
std
pushl
into
add
xor
inc
das
jmp
out
aas
pop
sarl
fildll
stc
xor
movsb
mov
inc
loop
mov
jg
mov
mov
push
mov
inc
test
decl
push
out
xor
or
mov
pop
out
pop
add
or
rcrl
mov
lds
jno
lret
in
mov
lcall
in
ljmp
or
fisubrs
xor
incl
xchg
sti
xorb
push
out
sub
sbb
and
out
inc
movsb
nop
js
sbbl
mov
push
dec
jmp
push
mov
das
sahf
in
add
mov
sbbb
mov
add
xchg
sar
repz
push
mov
movsb
sbb
dec
ljmp
sbbl
decl
pusha
rcll
adc
cmpsb
jg
inc
imul
ljmp
add
dec
mov
jo
test
sbb
cwtl
and
clc
std
lds
mov
out
and
and
xor
aam
xor
cmpsb
push
dec
loopne
movsb
adc
jbe
cld
xor
sbb
mov
dec
mov
test
inc
mov
sahf
push
pop
sub
cmc
or
add
dec
rcrb
cmpsl
lock
sub
clc
or
pop
sub
insl
clc
push
das
mov
sub
call
sahf
mov
push
cmp
push
lcall
cmp
xchg
scas
sahf
jle
jmp
das
xor
call
mov
sbb
sub
xor
decl
jnp
dec
and
dec
sar
mov
sub
cwtl
push
ja
mov
pop
movsb
repnz
pop
or
incb
sub
jb
popa
mov
in
or
xchg
pop
dec
lock
inc
fisttps
xchg
and
xor
push
add
rcll
jo
aam
xchg
dec
ret
lock
jg
dec
mov
inc
insl
mov
dec
sar
lcall
inc
pop
rcrl
movsb
and
aaa
pop
mov
xor
push
std
or
arpl
add
add
sub
lret
cmpl
jb
mov
sbb
incl
pop
repnz
loope
pusha
mov
movsb
and
lcall
adc
test
mov
jg
push
jmp
ljmp
fsubrl
int
inc
add
xorl
incl
cld
jne
test
pushw
cmpsl
push
in
inc
xor
dec
je
sbbb
js
call
jp
out
in
jne
push
fs
or
adc
xchg
jo
adc
test
fimull
adc
incl
mov
daa
dec
jae
into
jl
outsb
cli
xor
mov
call
pushl
dec
adc
mov
xchg
cltd
fiadds
pop
mov
lds
mov
in
scas
xor
mov
in
out
jg
call
gs
ljmp
push
loope
arpl
fidivl
xchg
hlt
jmp
cli
imul
jnp
sbb
sti
sub
push
sub
push
mulb
dec
shll
mov
xchg
js
mov
imul
shrb
lds
xchg
jg
test
rolb
call
or
mov
ss
push
in
out
xor
fsubs
decl
test
or
mov
dec
out
rorl
push
fisubs
insb
in
pushl
adc
aaa
jb
fisubs
push
lods
sbb
pop
add
xchg
adc
dec
es
scas
mov
xchg
int3
mov
incl
movsb
mov
xchg
mov
jnp
decl
lds
outsl
je
push
addr16
mov
jno
ljmp
xchg
inc
mov
je
mov
dec
mov
int
repz
ds
push
popa
aad
rol
lcall
sub
cmpsl
rcll
int
push
lea
addb
test
cmpsb
stos
inc
repnz
push
jge
or
mov
jae
or
push
ret
push
pushl
lods
ja
cwtl
insl
xlat
stos
insb
add
mov
ret
xchg
xchg
inc
fnstenv
loope
popa
fsubrp
and
adc
out
ss
stc
aaa
jbe
adc
scas
xchg
push
shlb
imul
dec
out
inc
lret
inc
repz
cld
test
push
jne
outsb
adc
jmp
cli
loop
inc
jnp
outsl
inc
sbb
lods
sub
popaw
and
jo
or
arpl
jg
mov
sub
data16
movb
fdivl
rcll
jne
dec
push
xor
shll
jnp
data16
hlt
outsb
fsin
jnp
push
popf
pushf
lds
lods
fcmovb
adc
jmp
or
jg
bound
adc
push
int
push
adc
sbb
dec
call
ud0
icebp
or
lods
movb
clc
das
dec
in
and
decl
std
add
std
or
adc
das
xchg
icebp
cmpsb
out
and
pop
ret
in
xor
das
fldl
add
add
sbb
mov
je
lea
ljmp
mov
xchg
rclb
fwait
mov
push
mov
mov
cmpb
push
inc
lret
rorb
sar
sbb
xor
push
fs
jg
ljmp
cmpb
lret
andb
pushf
popf
cmp
scas
push
lock
lods
inc
sbb
gs
mov
ret
aas
sar
dec
loop
jns
nop
xchg
pop
mov
sti
xchg
bound
pushf
mov
lcall
test
inc
repnz
bound
aad
xchg
cmpsb
push
push
lret
cltd
and
or
adc
inc
mov
sbb
lods
mov
pop
popa
or
jno
cmp
ljmp
push
pop
sbb
daa
inc
pop
adc
call
xor
cld
scas
push
cmc
xchg
push
out
pushf
in
and
adc
stos
sbb
stos
or
cmp
ljmp
iret
add
push
mov
xor
fisubl
jl
lret
js
lcall
out
jne
mov
gs
outsl
bound
inc
jnp
aam
jne
mov
ljmp
dec
inc
xor
pusha
mov
cltd
cmp
scas
nop
add
add
cwtl
sub
orl
xchg
mov
push
leave
xor
push
int
ljmp
push
and
enter
sub
jne
sub
mov
jbe
ja
insl
gs
and
test
pop
push
xlat
mov
mulb
pop
mov
mov
nop
xor
inc
sbb
mov
or
jb
ljmp
push
push
insl
ret
xor
sub
hlt
mov
xchg
incb
pop
cmp
mov
push
fidivl
rclb
incl
lcall
mov
jno
xchg
fistps
inc
shlb
enter
fcoms
lds
sbb
adc
mov
iret
std
mov
in
aaa
xchg
push
xor
or
mov
push
aaa
or
test
sar
popa
popf
imul
adc
sub
xchg
push
mov
add
inc
jne
call
imul
retw
arpl
out
bound
inc
out
movq
mov
mov
push
sub
call
jne
filds
xchg
push
push
adc
mov
add
mov
lret
fiadds
add
pop
and
or
incb
loop
xlat
mov
ljmp
popf
mov
jp
or
shrb
pop
mov
cld
pushl
mov
xchg
xchg
xchg
lods
fldenv
lea
pop
mov
cmc
mov
ljmp
test
add
cmp
test
jmp
insl
int3
mov
mov
lods
dec
and
popa
sub
xchg
dec
xor
scas
jb
fwait
decl
fs
repnz
pusha
addb
inc
sahf
add
inc
cs
ficompl
sbb
fs
push
jo
pop
imulb
stc
dec
bound
pushf
add
insl
fs
stc
jno
push
jbe
mov
ret
mov
jo
dec
outsl
cmp
jl
es
mov
movsb
movsb
inc
imul
mov
pop
jg
sbb
fldt
lods
dec
and
xchg
push
jl
push
inc
je
mov
dec
insb
cmpsb
jae
jns
sbbl
je
scas
push
add
jl
mov
and
mov
gs
insl
jo
dec
loope
push
repnz
jp
ja
jns
xor
jmp
or
ds
aad
fs
xor
cmpsb
cmp
lods
adc
pop
inc
ja
jnp
pop
push
add
sub
and
push
fnsave
incb
arpl
lcall
pushf
jno
inc
pop
mov
nop
pop
je
inc
or
popa
jns
outsl
xor
shll
or
lds
stos
push
pop
add
ljmp
inc
mov
jge
cmp
xchg
or
lods
adc
mov
cmp
dec
jg
mov
cmp
mov
les
inc
jle
pop
stc
jle
ss
movsb
add
or
int
pop
fs
imull
pusha
jp
jae
pusha
pop
push
scas
sub
jge
hlt
add
dec
sbb
outsl
incl
cmp
fwait
inc
inc
stos
cmp
add
int3
incb
imul
leave
out
xor
jg
mov
pushf
inc
aaa
cmp
cwtl
ja
mov
pop
scas
cwtl
push
push
sar
inc
or
or
lahf
jne,pt
inc
jns
cmp
jg
gs
sbb
dec
cmp
pusha
mov
push
ljmp
pushw
push
inc
adc
push
aad
inc
fisubrl
cmpsb
jecxz
cli
incl
cmpsl
in
mov
stos
lods
movsb
pop
sbb
out
jo
xchg
fs
dec
das
xchg
aad
inc
jo
cmp
mov
repnz
gs
dec
and
push
sub
sbb
mov
rcll
lcall
inc
add
arpl
mov
jns
call
cwtl
icebp
mov
mov
mov
outsb
inc
push
adc
xor
and
adc
xchg
and
adc
push
push
aam
lods
inc
in
insb
inc
std
lcall
dec
push
lahf
clc
xchg
sub
sub
ds
mov
outsb
dec
push
xor
imul
incb
xor
ljmp
movsb
jb
pop
mov
push
rorl
lock
jbe
xchg
imul
add
pushl
addl
aaa
lods
pop
add
ret
lods
int3
mov
popf
popa
add
or
pop
jnp
inc
incl
inc
lahf
ljmp
cmp
inc
loop
mov
adc
pop
pop
jmp
mov
in
ljmp
fwait
push
aam
jbe
into
lahf
mov
xor
fs
das
sti
xchg
cmpsb
add
scas
ss
out
push
jae
hlt
cwtl
int3
cmp
push
mov
lcall
adc
or
decl
xchg
das
sbbl
movsb
cs
xor
sbb
dec
mov
cltd
cli
jmp
dec
jns
or
loopne
adc
mov
xor
jle
lock
int3
push
pop
lock
inc
add
xchg
adc
gs
cld
fisubrl
es
jb
fs
dec
push
gs
jns
jns
mov
pop
sahf
xchg
or
rcll
scas
push
jl
rcrb
aaa
insl
mov
mov
jne
xchg
or
addl
dec
mov
pushf
pop
mov
cli
cmp
lahf
add
imul
sbb
sbb
dec
cmp
hlt
add
sbb
outsb
and
hlt
out
xchg
sbb
cltd
or
or
inc
nop
ss
mov
mov
aaa
inc
add
and
xchg
aas
pop
inc
mov
jbe
or
inc
or
or
test
clc
jg
call
popa
lret
cmp
pushf
push
xchg
pop
lcall
adc
xor
sub
adc
mov
stos
dec
dec
arpl
pushl
adc
jnp
jl
or
popaw
decb
pop
and
push
inc
cwtl
push
xorb
bound
scas
scas
jae
enter
ss
lds
and
cmp
lods
insb
nop
mov
mov
sbb
and
push
scas
mov
mov
and
pop
jl
and
cmp
pop
ret
scas
add
mov
and
sahf
shlb
mov
adc
les
ja
ja
scas
adc
lods
lcall
insl
pop
sbb
jecxz
inc
push
mov
into
mov
mov
lods
sbb
mov
push
pop
fisttps
mov
imul
push
insl
insb
adc
test
icebp
cmp
outsl
ja,pt
imul
jnp
dec
ja
and
push
insl
cmpl
pop
dec
cld
int
into
mov
mov
daa
adc
inc
mov
call
add
ja
mov
push
add
loop
mov
pop
loopne
sbb
rcr
jmp
adc
lds
sub
pop
jo
mov
jl
les
js
and
xchg
push
sub
sub
or
jb
inc
mov
movsl
and
adc
mov
push
xor
push
jg
ljmp
and
stos
fdivl
adc
add
cmp
dec
das
je
ja
ret
add
jg
adc
jecxz
jmp
dec
idiv
push
movsl
sbb
xor
mov
push
mov
sbb
fsts
cmc
pop
imul
incb
cld
pushl
fnclex
sub
enter
adc
adc
mov
dec
xchg
cmp
icebp
and
fbstp
xchg
scas
dec
nop
cwtl
faddl
mov
or
gs
ja
xchg
jo
mov
and
test
inc
mov
adc
add
push
jbe
dec
adc
jne
popa
sti
jne
add
jecxz
add
shll
xchg
fnstcw
adc
dec
sbb
insb
arpl
or
decl
push
jnp
push
shl
push
aaa
insb
jne
lds
outsb
push
xor
mov
pop
pop
out
outsl
gs
mov
xchg
push
mov
jae
sbb
pop
hlt
incl
ss
adc
fildll
lcall
mov
ret
cld
out
movd
cmp
repz
movsb
jnp
lcall
into
push
xor
into
push
js
pop
clc
push
pushf
shll
cmpsb
out
cld
pop
sub
adc
cmp
add
sub
icebp
mov
xor
imul
sbb
outsl
add
mov
mov
add
lcall
fwait
dec
adc
add
sub
mov
jmp
movsb
mov
mov
dec
out
mov
mov
ljmp
int3
adc
sub
sbb
mov
ljmp
ds
flds
js
ds
clc
or
push
cmp
mov
lcall
and
mov
xchg
jg
ret
jg
cmp
mov
sbb
adc
mov
data16
fwait
xchg
mov
outsl
popf
sarb
xor
daa
cmp
add
pop
adc
cmp
mov
jg
out
cmp
mov
outsb
xor
sub
ss
pop
add
sbb
fdivr
incl
push
les
lods
mov
out
popf
fwait
ds
pushl
scas
lds
js
es
icebp
aas
inc
fbstp
inc
in
pop
lds
out
and
add
sub
jg
cmc
pop
in
sub
cmpsl
push
in
jb
adc
je
addr16
dec
loope
jmp
xchg
inc
xchg
in
das
jg
decl
dec
in
push
int
push
cmp
adc
adc
cmp
inc
dec
int3
xchg
xchg
lds
push
push
adc
add
out
cwtl
jmp
ljmp
and
imul
ret
mov
loop
shll
push
dec
scas
push
adc
adc
jo
cli
ret
call
rcrl
outsl
outsb
cmp
daa
stos
xlat
push
subb
incb
outsl
xchg
insl
cmp
dec
inc
stos
adc
and
dec
scas
or
in
push
adc
lcall
sub
inc
jae
and
adc
cmp
push
push
fdiv
repnz
cmp
cltd
mov
push
or
shrl
xor
je
xchg
mov
mov
nop
jnp
pop
out
or
mov
add
aas
adc
frstor
das
push
incb
adc
cmp
into
or
fsubs
jle
ljmp
jbe
inc
roll
mov
xchg
bndldx
sbb
mov
stc
cs
cwtl
aaa
pop
sbb
xchg
pop
sub
cmp
cmp
ret
cld
call
dec
imul
stos
enter
pusha
imul
dec
add
pop
inc
xchg
jne
addr16
jb
popa
push
daa
loope
pop
inc
push
add
sbb
pop
push
and
call
call
adc
cld
jno
or
aas
das
adc
pusha
pop
lds
call
xchg
push
mov
dec
xor
inc
or
fs
mov
jle
mov
lods
lods
jo
jg
decb
scas
les
or
je
adc
inc
loopne
push
pop
lock
xor
mov
mov
add
pop
sbb
addr16
fnsave
shll
test
pop
push
adc
scas
mov
sub
jmp
or
dec
bound
push
insl
adc
sub
xor
das
mov
ljmp
jle
bound
and
lea
cmpsl
mov
push
pop
add
lcall
ljmp
push
inc
sti
add
ret
xlat
jns
ret
ss
adc
std
jg
adc
fdivs
add
mov
add
mov
push
cmpsl
pop
push
incl
gs
jmp
pop
fsts
mov
jmp
es
inc
add
mov
jno
mov
push
inc
fs
lods
inc
adc
dec
into
jno
es
inc
jno
jnp
mov
decl
sub
lods
lds
mov
ret
mov
sbb
mov
out
push
dec
movsl
std
stos
or
test
fistl
or
push
cwtl
popf
push
lds
sahf
inc
push
outsl
inc
jp
imul
pop
adc
push
xchg
imul
mov
cmp
subps
cmp
adc
add
inc
or
loopne
pop
out
cli
aaa
std
pop
cld
xor
loopne
mov
adc
jae
and
ljmp
int
xchg
clc
xchg
sub
decl
inc
std
xor
adc
jp
lds
jns
es
jb
flds
inc
loope
dec
es
jo
mov
cmpsl
and
push
fcmovbe
inc
and
out
cs
jmp
lods
mov
movsb
mov
ja
loop
push
sti
cld
jecxz
cltd
inc
shlb
mov
push
inc
incl
jb
js
inc
leave
bound
adc
gs
mov
jl
cmp
fildll
out
pop
xchg
rorb
imul
outsb
loope
xor
inc
or
mov
push
inc
or
loope
mov
das
pop
loopne
push
push
adc
cli
shrl
lds
jg
lock
cmpsl
lahf
inc
aaa
pusha
std
or
pop
imul
das
mov
sub
shll
rcll
ja
xorb
rcl
aas
test
inc
out
aad
push
cmp
decb
jns
sbb
mov
sub
das
test
push
xor
or
mov
in
sub
sub
and
xor
fwait
add
ds
outsb
outsl
pop
cmp
and
inc
scas
xchg
lcall
add
fstpt
jp
ss
ja
dec
incb
mov
in
movsl
mov
arpl
or
xor
jecxz
jns
ds
idivl
iret
or
ljmp
in
aaa
pop
push
sub
mov
inc
add
push
inc
out
imul
call
pop
fimuls
int3
push
test
sub
adc
in
inc
mov
mov
push
rcr
leave
push
cmp
aaa
sub
push
call
in
sub
leave
call
sarl
int
cmp
bound
mov
cmc
xlat
incb
test
mov
sub
pop
repz
jno
push
insb
daa
adc
mov
incl
dec
cmp
loop
xchg
xchg
pushf
dec
or
popa
cld
cmpsl
pop
xor
and
cmpsb
jle
sbb
fisttpl
addl
inc
sti
repnz
xchg
pop
mov
je
adc
fwait
or
xor
xor
ljmp
stc
aas
inc
ret
imul
mov
pusha
sub
push
adc
test
test
push
jle
adc
push
lds
enter
jns
and
adc
add
or
out
fbld
jbe
or
ss
push
sub
fstps
xchg
lock
sahf
out
sbb
fnsave
scas
pop
rcll
mov
cmp
jecxz
mov
add
adc
leave
fucomp
cmp
cmp
sar
cmpsl
lods
inc
pop
shlb
bound
lcall
inc
mov
xor
xor
mov
filds
popa
mov
test
sbbl
lea
decl
ret
cmp
fisubrl
in
or
out
ret
lahf
test
cs
cwtl
mov
in
sub
xchg
jns
xchg
add
les
mov
pushf
push
enter
call
pushf
push
mov
xchg
popa
jmp
mov
xchg
push
xor
ljmp
inc
rclb
aaa
stos
jnp
arpl
push
mov
adc
andb
ljmp
adcb
sbb
inc
ret
les
mov
fcoml
decb
lods
inc
pushf
pop
lahf
add
mov
xchg
decb
mov
sub
sar
lret
loopne
inc
adc
jge
les
xchg
add
jmp
xchg
test
ja
mov
mov
jae
cmpsl
push
mov
lock
mov
decl
sub
enter
adc
popa
jg
cmp
jae
xor
aad
push
sbb
push
pop
clc
cmp
adc
imul
rolb
adc
icebp
and
pop
pop
bound
sbb
bound
pop
out
mov
icebp
incl
mov
or
test
inc
mov
cld
ljmp
scas
cwtl
cld
adc
dec
add
loope
jne
popa
int
pushf
push
pop
imul
inc
mov
cmp
call
lcall
mov
inc
add
clc
lcall
fisubrl
adc
pop
adc
pop
roll
std
out
adc
or
push
push
cmp
aad
dec
fdivrl
icebp
sbb
lods
test
cmpb
stc
sub
adc
add
pavgw
data16
scas
in
sub
bound
jae
inc
enter
test
cli
cli
cld
cmp
mov
je
mov
push
mov
aaa
mov
jo
sbb
inc
or
xchg
test
daa
pop
cli
aas
dec
sbb
pop
dec
jg
push
jbe
jl
sbb
incb
cmpsl
in
ljmp
jecxz
enterw
adc
es
pop
arpl
xor
daa
dec
push
push
pop
adc
fstl
popa
add
clc
and
stos
imul
inc
inc
or
adc
adc
jp
pop
mov
ljmp
sbb
cwtl
mov
jge
fimuls
lods
jo
sbb
sub
repz
mov
mov
inc
jge
cmc
xlat
rcl
xchg
jmp
mov
fs
lcall
test
lods
ret
pop
rolb
jne
mov
and
outsb
or
xchg
lock
inc
outsl
lds
dec
scas
loop
add
nop
lret
loop
inc
call
pop
imul
inc
jbe
push
push
dec
or
jmp
pcmpeqb
push
adc
dec
rclb
and
mov
filds
out
addb
jae
cs
push
cmp
ljmp
mov
enter
or
adcl
push
adc
lods
mov
sub
xor
bound
dec
cld
jno
aaa
popf
js
fisttps
out
test
dec
lcall
mov
xorb
lcall
test
sub
cs
dec
into
push
mov
repnz
stos
adc
push
mov
add
push
push
adc
jg
nop
mov
sbb
insl
sub
ljmp
fmul
inc
gs
pop
add
dec
dec
shl
jae
push
sub
cld
and
ffree
shrl
pop
aad
sub
mov
sti
test
rcl
adc
ljmp
rorb
ret
popa
sti
loope,pt
repnz
inc
mov
pusha
dec
or
repz
lock
pop
or
xchg
and
dec
and
ljmp
pushaw
xchg
loopne
inc
arpl
jg
clc
inc
movsb
pushl
push
mov
fldpi
insb
push
imul
call
sub
inc
ror
push
jns
das
out
pop
cli
lret
pop
push
addr16
out
std
mov
ljmp
fidivl
xlat
mov
or
movsl
pop
or
cld
pop
ret
std
pop
aaa
sub
lods
mov
mov
xchg
call
sbb
es
cmp
adc
and
ja
ret
mov
pop
pop
cmp
pop
fisttpll
in
jne
lds
xor
pop
mov
enter
pop
je
dec
jmp
data16
sub
ljmp
stc
mov
lods
jmp
pop
dec
stos
adc
gs
std
dec
cmpl
mov
fdivrp
imul
cmp
int
clc
call
adc
enter
jno
sbb
iret
sub
adc
mov
mov
inc
mov
pushl
test
dec
jmp
add
in
add
dec
push
rcrb
or
xchg
loopne
jo
cld
fucomp
addr16
rorl
sarb
dec
ja
jg
test
fwait
add
pop
push
sub
push
fadd
out
mov
push
push
insl
mov
inc
decl
push
mov
push
inc
popl
sbb
push
cmp
lret
pop
test
inc
dec
mov
sbb
pop
jle
out
lcall
adc
adc
sub
lock
repz
push
popa
pop
insl
std
jp
mov
inc
ljmp
decl
outsl
subb
add
pusha
imul
push
jge
jle
pop
fnstcw
pop
push
int3
cmp
inc
or
les
pop
out
sub
repnz
in
xchg
add
call
fsubl
in
stc
pop
in
mov
test
sbb
xchg
push
adc
jg
int3
mov
add
hlt
mov
jbe
inc
cld
adc
inc
cmpxchg
lods
aad
decl
xor
jecxz
mov
pop
stos
adc
mov
mov
pop
xlat
nop
shrb
push
mov
push
add
xchg
sub
jmp
inc
call
pop
fcoms
pop
cld
rcrb
std
cmp
lcall
pop
out
push
in
aad
mov
out
data16
sub
push
loop
adc
hlt
xor
add
pushf
stos
insl
scas
push
lock
cmp
xorb
movsb
aaa
jb
pop
jg
lret
ljmp
out
imul
lahf
popf
dec
mov
xchg
push
lret
inc
aaa
dec
jmp
jg
and
xor
out
movsl
and
lret
call
rclb
push
sub
xchg
sbb
push
mov
xchg
xchg
adc
push
cltd
xor
icebp
push
mov
mov
es
ljmp
std
inc
sub
pop
add
push
stc
mov
into
push
ret
pop
push
xchg
and
test
mov
int
imul
sbb
pop
gs
cmp
sbb
lods
pop
cld
and
nop
popf
xchg
sub
sbb
push
in
pop
or
je
mov
adc
cmp
mov
push
add
lcall
jb
inc
out
push
xchg
and
fisttps
sub
jnp
xchg
adc
push
es
add
lods
push
insl
or
mov
clc
dec
push
mov
pop
push
pop
jae
mov
sbb
add
aaa
arpl
pushl
popa
aas
inc
imul
sbb
xor
arpl
inc
xlat
stos
outsl
ljmp
sar
fmull
add
push
daa
popa
pop
or
std
mov
sbb
lcall
jg
inc
jo
in
andb
imul
jle
pop
cs
iret
jmp
cwtl
adc
push
popa
out
jne
iret
mov
pop
mov
cli
xchg
and
jg
or
jmp
incb
mov
es
test
sarb
fildll
std
lods
es
lods
iret
xor
lcall
inc
sbb
push
lcall
xchg
out
mov
leave
stos
inc
incl
lret
mov
stc
and
lods
dec
cmp
divl
decb
cld
dec
or
insb
ret
push
xchg
ss
mov
cmc
cmpsb
jo
decl
and
mov
ss
icebp
push
mov
mov
sbb
push
inc
orl
or
xor
mov
bound
add
mov
lcall
or
mov
dec
inc
mov
inc
and
cmp
popa
jecxz
movsb
ds
lods
sbb
incl
xchg
mov
lret
test
jecxz
leave
sub
xchg
call
adc
icebp
std
cmp
and
mov
dec
or
mov
xchg
cltd
shlb
incl
add
adc
adc
dec
lcall
or
lea
pop
lock
dec
out
imul
incl
add
fiaddl
jns
test
xorl
test
scas
bnd
xchg
add
pop
push
mov
lock
hlt
adc
mov
push
adc
fists
outsl
jne
jle
inc
popa
in
enter
sarb
push
out
loop
push
repz
stos
sub
in
mov
sub
shlb
adc
xchg
pop
jmp
popa
aad
gs
data16
sub
jg
decb
push
or
cld
mov
fcoms
mov
cmpsl
mov
lods
incb
lock
jmp
cld
cmp
fbstp
scas
cmpsb
test
fcomps
mov
lret
ss
shrb
cld
jns
mov
das
push
mov
out
fnsave
inc
or
cltd
sub
clc
dec
add
jbe
jl
ret
cwtl
mov
hlt
sub
jmp
push
mov
sub
and
and
mov
add
lcall
fs
cmpsl
xchg
scas
xchg
and
add
dec
cld
push
sbb
stos
jg
call
aas
addr16
push
dec
xor
loopne
mov
pop
xor
in
cmpsl
das
add
adc
mov
adc
push
inc
mov
inc
scas
ss
mov
cli
lret
xor
lcall
dec
and
push
and
push
shl
bound
push
das
popa
fs
clc
neg
mov
call
and
pusha
lcall
push
xor
jmp
rorb
sbb
sub
push
ja
sub
inc
in
jbe
jle
fisubl
clc
xor
push
mov
out
or
loop
pushl
cltd
or
inc
ret
es
push
lods
push
test
cli
or
decb
bound
call
sbb
test
dec
gs
es
ret
popa
mov
stos
mov
sarb
push
bound
mov
add
inc
cwtl
clc
lcall
mov
pusha
andl
scas
or
lods
jg
or
add
jle
adc
decl
mov
xor
mov
arpl
push
pop
sub
rolb
xchg
adc
pop
or
scas
mov
xchg
jne
insb
cmc
cmp
dec
mov
inc
loope
out
adc
js
pop
insl
loop
xor
adc
das
xor
xchg
inc
push
jo
gs
decb
decb
adc
mov
les
or
mov
push
xor
dec
fs
inc
jecxz
call
xchg
pop
push
lcall
in
in
jns
in
dec
out
cmp
or
mov
cli
push
aaa
inc
mov
cmc
push
cmp
xchg
fcmovnu
imul
mov
std
aad
out
pusha
lret
adcl
pop
gs
fistl
push
dec
clc
lcall
fbld
xchg
enter
dec
jg
sti
push
push
push
push
scas
adc
mov
in
pop
adc
sub
lcall
xor
andb
dec
jbe
dec
mov
adc
rol
jl
je
jle
dec
jbe
iret
dec
sub
push
aam
inc
cld
cmp
stc
dec
or
dec
mov
mov
cwtl
jp
fnstsw
das
and
pop
inc
mov
dec
pop
jns
push
movsl
sub
lds
cmp
fidivrs
lods
dec
out
pop
cs
inc
lock
inc
pop
imul
xor
mov
push
incb
inc
clc
test
mov
scas
xchg
mov
notb
mov
mov
add
mov
push
mov
inc
rclb
imul
fimuls
and
cmp
xchg
call
sar
mov
push
call
aaa
inc
push
inc
jge
jle
test
sub
stos
cwtl
adc
xchg
sub
xorb
insl
sti
stos
les
lahf
stos
aas
inc
dec
adc
testb
loop
inc
mov
dec
cltd
das
bound
iret
mov
cmpsb
cmp
inc
pop
movsl
fildll
dec
push
stos
inc
les
push
das
and
push
aad
inc
mov
call
mov
push
insb
rorb
pop
insb
std
das
pop
pusha
pop
sarl
adc
test
xor
nop
fs
nop
shlb
pop
adc
out
cmp
pop
add
jne
ljmp
adc
and
dec
or
push
mov
mov
mov
dec
and
jg
jno
fldl
add
xor
jns
shll
rol
push
mov
fs
ret
test
push
push
dec
jg
pusha
inc
push
outsb
push
stos
es
adc
in
ljmp
je
and
sbb
jle
sbb
sub
push
lods
insb
cmp
add
repnz
push
je
sar
pusha
sub
inc
loope
fmull
ret
outsb
jno
ljmp
or
movsb
jae
xchg
cmc
pushf
ds
xor
xor
test
lock
xor
stos
push
jge
push
out
sbb
inc
cli
jg
add
mov
or
jae
rolb
call
push
subsd
push
adc
stc
jg
pop
gs
stos
add
fcmovb
dec
test
jno
flds
je
test
mov
leave
sub
push
lds
ljmp
nop
icebp
sub
in
adc
dec
js
adc
ljmp
and
cmp
mov
orb
idivl
int
adc
lret
cltd
jnp
dec
jne
leave
jg
jno
xchg
add
popa
out
sub
rcrl
imul
lahf
das
dec
daa
lret
mov
shlb
jg
add
test
jb
inc
push
sbb
xor
and
jp
js
decb
adc
shlb
jg
fdivr
loop
jle
xchg
inc
push
sbb
add
cmpsb
lret
mov
lret
jne
xor
mov
mov
lods
jnp
xlat
repz
dec
push
cmpsb
mov
jno
inc
cmc
clc
add
jg
push
and
mov
or
not
es
bound
pop
or
add
push
mov
ljmp
cwtl
mov
incl
fsubrs
sahf
push
cmp
add
xchg
gs
adc
sub
sub
outsl
loop
pop
or
inc
fs
inc
dec
mov
inc
call
or
idivb
push
dec
mov
loop
cmp
test
cmp
mov
in
pusha
incb
or
add
sar
add
xor
push
sub
xchg
push
inc
std
adc
mov
xor
das
incb
mov
pop
push
jae
xchg
incb
outsb
jge
pop
movsl
mov
sar
lea
enter
inc
testb
pop
lcall
mov
data16
xor
sbb
aad
jo
ljmp
jmp
push
int3
sbbb
stc
xchg
pop
lock
iret
jne
movsb
ret
popa
sbb
add
movsl
lods
test
out
out
dec
fstps
incl
mov
dec
daa
mov
jb
add
add
push
rcrl
sbb
js
mov
pop
fiaddl
fisttpl
xor
cmp
jo
mov
mov
iret
arpl
mov
pushl
jne
ds
fisttpll
adc
mov
jns
push
xor
xchg
lcall
enter
push
jo
jp
jg
stos
mov
or
gs
inc
inc
mov
outsl
test
cld
ljmp
loope
loope
push
cli
movsl
imul
hlt
test
loop
fisttps
inc
incb
inc
or
sete
pop
or
mov
dec
mov
mov
mov
inc
mov
jbe
push
std
or
decl
mov
sbb
sarl
xchg
cs
dec
xorl
cmpsb
jo
mov
mov
add
dec
mov
push
add
xor
testb
mov
insl
xchg
dec
nop
mov
enter
leave
lods
incb
mov
pop
clc
dec
or
jp
pop
shlb
aas
es
sar
int3
jg
sub
push
xchg
push
sbb
hlt
mov
dec
xchg
add
mov
in
decb
mov
incl
add
in
mov
jmp
filds
mov
cld
mov
cmp
and
daa
lods
js
dec
add
push
js
add
mov
lods
cmpsb
fwait
pushf
lcall
xchg
pop
mov
cltd
clc
outsl
clc
add
mov
or
sub
dec
rcrb
decb
add
fdivrs
test
test
push
std
inc
mov
pop
mov
gs
xor
jmp
int3
cmp
mov
mov
pop
cld
pushl
lahf
mov
js
das
pusha
shll
out
pcmpeqd
push
pusha
jl
in
rorl
ss
imul
aad
decb
pusha
pop
cmpsl
lcall
dec
push
bound
add
cwtl
push
pop
outsl
dec
pop
or
fwait
jmp
adc
mov
in
mov
scas
xor
test
xchg
pop
pop
rorb
mov
scas
sub
and
mov
mov
stc
mov
cs
scas
xchg
cvtdq2ps
jo
je
mov
inc
popf
push
dec
xchg
and
and
lcall
push
and
inc
xchg
add
jbe
popa
sbb
lcall
imul
pop
sahf
add
fs
lock
xchg
leave
xchg
sub
outsb
imul
adcb
lcall
pop
aaa
insb
leave
push
popa
xor
imul
jb
pop
pushf
out
mov
mov
bound
inc
pop
and
into
scas
aaa
decb
sbb
pop
incb
push
lock
aad
inc
int3
mov
jno
xchg
out
daa
mov
cmp
add
lods
aaa
push
push
pop
insl
pop
and
adc
inc
movsb
push
cmp
shll
xor
mov
dec
mov
lahf
shrl
mov
call
mov
cli
sbb
xchg
adcl
aam
mov
mov
adc
sti
sub
pushf
jb
ror
scas
lods
fisttpl
xchg
out
mov
jne
push
inc
and
icebp
dec
adc
lock
sbb
inc
cmp
push
xchg
cwtl
das
inc
xor
pop
push
xchg
aas
dec
stos
inc
hlt
push
ljmp
cmp
pop
sbb
mov
cmpsl
mov
jnp
call
gs
stos
xchg
in
xor
mov
cltd
push
pop
jle
pop
dec
push
dec
inc
ret
lock
or
stc
mov
imul
lcall
adc
aas
mov
jecxz
iretw
xchg
push
out
fwait
call
rorb
fcoml
mov
or
sbb
jo
xchg
pushf
push
mov
mov
lcall
and
mov
imul
dec
and
aam
cmpsb
cmpsl
aaa
in
xor
ss
arpl
mov
cmpsb
xchg
pushf
popl
push
jg
mov
ljmp
cmp
outsb
add
dec
mov
and
mov
ss
sbb
dec
jp
fwait
decl
xchg
and
pop
lea
or
lahf
sub
lcall
stos
adc
mov
sbb
pop
mov
mov
push
lea
bound
inc
out
mov
add
jns
xor
jb
lods
adc
jo
and
add
push
mov
mov
cmp
addl
pop
dec
dec
loope
aaa
sbb
nop
rolb
sbb
dec
loop
out
xor
jg
adc
gs
arpl
test
in
es
nop
outsb
in
add
decl
out
sub
movsl
lods
lods
and
adc
in
cmp
test
addl
mov
push
incb
jp
sbb
jge
ljmp
lods
jle
xchg
mov
stos
lea
leave
mov
cmp
push
stos
or
xchg
mov
xchg
icebp
sub
bound
lcall
xchg
adc
popa
scas
inc
sahf
mov
inc
inc
mov
jp
test
lcall
xchg
sbb
cltd
pop
dec
lcall
fs
jb
mov
mov
popf
mov
pop
daa
xchg
sub
aas
lods
mov
fwait
mov
mov
inc
cltd
das
mov
cmpsb
and
adc
fwait
pop
ds
push
inc
loopne
dec
mov
mov
inc
xchg
and
xchg
ds
mov
adc
mov
mov
cld
filds
imul
daa
dec
jl
inc
pop
jnp
lock
outsl
push
lods
adc
mov
push
shlb
scas
adc
xor
sub
movsb
das
and
jge
outsl
mov
in
inc
sub
and
jge
call
or
gs
aam
incb
cld
fbstp
fnstenv
inc
sbb
lcall
aam
add
add
das
insl
and
xchg
lret
sti
call
sbb
hlt
mov
jmp
out
fldt
jg
sbb
ljmp
enter
mov
scas
inc
loope
sub
jecxz
popa
lds
jns
mov
cmp
jne
aas
cmp
and
scas
les
lcall
push
insb
mov
push
cwtl
movsl
inc
mov
or
pop
xor
jo
or
das
pop
addr16
mov
insl
cmpsb
cmp
mov
cli
ljmp
jmp
fldenv
push
add
xor
mov
rolb
xchg
push
push
or
xor
clc
call
cmp
mov
pushf
and
dec
push
shlb
xchg
inc
iret
adc
inc
incb
mov
jmp
sbb
mov
aaa
cwtl
jo
add
jo
and
call
rclb
popf
sti
imul
cmpb
std
ljmp
cmpsb
mov
push
push
in
sbb
push
cli
scas
cmp
inc
xor
pop
scas
mov
ljmp
pop
js
cmpsb
das
in
das
xchg
add
daa
imul
test
int3
ljmp
push
dec
std
sub
movsb
adc
mov
mov
sbb
sub
in
daa
ljmp
sar
fldenv
test
pop
int3
fists
jmp
out
adc
adc
jmp
inc
and
scas
pop
add
xor
nop
jge
dec
sub
loope
and
std
outsl
loop
jge
enter
pop
ret
push
cli
push
push
cmc
xchg
dec
sub
dec
cmp
pop
mov
data16
pop
pop
and
pop
push
adc
dec
sbb
scas
push
cmp
pop
sub
sub
es
pop
cmc
int3
incl
or
es
cmp
sub
imul
push
jecxz
ljmp
jo
dec
cmp
repz
sbb
pushf
pop
sbb
push
arpl
aam
clc
lock
fs
scas
cmp
repnz
out
scas
adc
enter
mov
sahf
das
xor
mov
sbb
sbb
loop,pt
add
push
dec
mov
bound
sbb
out
jbe
std
scas
call
imul
fimuls
cmpsb
cmpsb
sahf
inc
popa
aad
lock
xor
sti
xchg
mov
notl
xor
call
movsb
movd
and
or
adc
test
push
pop
sbb
pop
push
inc
xchg
jg
or
std
inc
adc
xchg
mov
mov
mov
add
pop
test
dec
dec
or
sbb
or
mov
sub
cld
jg
or
dec
or
mov
add
xchg
sbb
lods
das
and
loopne
push
mov
mov
repnz
push
push
popa
ljmp
or
push
es
movsb
call
sub
test
ljmp
stos
push
lea
std
jo
mov
inc
loop
test
into
mov
lret
scas
rcll
mov
dec
push
sarb
fcoml
push
movsb
mov
jg
jg
sub
adcl
sbb
jge
shll
jae
xor
push
fstl
gs
fstl
or
jg
xchg
pop
sysenter
dec
iret
cmpsb
mov
sub
cmp
in
lods
jns
in
jp
clc
jmp
and
push
fidivrl
lret
jmp
es
xchg
add
cmc
ja
leave
arpl
cli
mov
stc
pop
ljmp
mov
out
lahf
inc
sub
mov
or
aas
movsl
lods
test
or
decb
inc
sub
xor
fsubrl
or
mov
ds
in
out
fdivl
dec
cmc
or
mov
pop
pusha
adc
xlat
test
pop
rcr
mov
lock
in
jne
sub
das
decb
shrb
pop
jg
scas
into
test
ja
pop
jbe
pop
stc
cld
jg
incb
jmp
jle
cwtl
or
xchg
jo
les
cmp
or
push
xor
adc
add
sbb
cli
aam
adc
inc
inc
inc
fcoms
xor
adc
sub
incl
pop
insb
incb
rorb
int3
add
mov
decb
aas
fidivl
ss
push
dec
aam
sbb
das
dec
xor
popa
or
cltd
add
adcb
clc
cmp
es
or
cli
incl
mov
insb
jb
mov
das
mov
nop
and
xchg
outsl
loopne
adcl
jb
lcall
cs
sbb
mov
and
sbb
and
adc
or
ss
dec
decl
insb
jle
cmpsl
mov
pop
sbb
and
jno
cli
sbb
movsb
mov
ss
xchg
imul
lock
pop
clc
mov
dec
repnz
call
loope
movsl
lock
popa
xchg
and
dec
incb
xor
jle
je
sub
out
in
ja
sbb
push
mov
or
xchg
nop
mov
test
call
data16
pushl
incl
gs
pop
push
movsl
leave
outsl
push
jbe
das
sti
dec
pop
arpl
outsl
je
sbb
ljmp
adc
inc
pusha
sbb
xchg
sarl
jb
mov
inc
and
xor
into
xor
repz
sbb
push
insb
test
xchg
add
jmp
xchg
movsb
mov
cmpsl
sahf
mov
xor
scas
stos
pop
xchg
xchg
adc
pushl
mov
xor
das
clc
mov
inc
mov
xor
sub
mov
pop
arpl
pop
decl
cmp
inc
dec
fstpl
xor
hlt
mov
jb
sub
pop
in
and
insl
xor
test
decb
das
ja
adc
into
cmpsl
and
mov
or
push
adc
lea
mov
incl
outsl
cmp
out
and
mov
xchg
cltd
mov
and
sub
xchg
pop
jne
push
sub
mov
mov
imul
jo
jo
mov
fstpt
stos
inc
ret
sbb
mov
sbb
jle
push
mov
dec
add
iret
scas
mov
shrl
xor
out
imul
sbb
call
xlat
xchg
push
lcall
add
or
adc
ljmp
decb
cmp
in
pop
jle
lds
push
jle
mov
xor
mov
clc
ljmp
sub
pop
sti
adc
mov
and
test
jecxz
xchg
xor
sar
andl
cwtl
sub
mov
adcb
cmp
xchg
xor
push
xor
cmp
pop
into
and
ljmp
sbb
inc
push
add
xchg
xor
push
mov
ljmp
mov
stos
mov
mov
add
push
icebp
jg
lock
adc
push
aaa
ret
lahf
daa
fstpt
fldcw
sbb
inc
loop
imul
insb
aas
pop
fwait
es
pop
xchg
jmp
xchg
push
scas
fs
je
in
xor
fsubs
jmp
xchg
mov
cwtl
fwait
popf
mov
mov
pushl
inc
cmp
adc
mov
pop
das
or
cltd
scas
and
aaa
imul
je
jmp
fs
ficoms
dec
pop
inc
cmp
jbe
inc
call
pop
fidivl
cmp
push
jbe
pushl
es
pop
pop
jmp
inc
popa
pop
xchg
cmp
push
imul
fistps
lcall
in
push
int3
mov
sub
add
jmp
int3
stos
bound
add
jns
lods
jno
push
lock
jno
insb
push
ds
and
xchg
add
inc
sbbb
inc
incb
data16
push
lods
pop
in
cli
inc
loopne
add
pop
addb
test
cltd
imul
or
das
js
mov
fdivs
loop
cwtl
or
stc
mov
pop
popf
jbe
fdivrp
call
push
mov
stos
call
js
je
pop
insb
xlat
mov
add
mov
dec
fisttps
adc
lret
xor
decl
pusha
pop
dec
dec
mov
mov
dec
imul
fdivs
jno
push
aad
sbb
fcomps
outsb
dec
pop
cli
dec
lods
jge
mov
cmp
cmp
jp
call
push
inc
push
icebp
xchg
les
mov
push
inc
jmp
mov
jg
pusha
test
sbb
xchg
sbb
mov
lret
nop
inc
add
pusha
rclb
pop
jp
inc
dec
or
sub
out
dec
js
das
inc
mov
sbb
mov
sbb
pusha
dec
push
add
incl
incb
inc
loope
xchg
aad
cmp
idivb
push
jno
dec
add
dec
dec
dec
bound
and
jmp
adc
cmp
mov
lea
push
icebp
mov
adc
push
ja
out
loopne
dec
inc
and
scas
pop
and
out
dec
je
movsb
add
cmp
fsts
dec
dec
xchg
mov
decl
xor
imul
test
xchg
inc
inc
jl
cmpsb
test
icebp
mov
inc
cwtl
enter
mov
dec
xchg
clc
ljmp
incb
pushf
imul
pop
jecxz
jo
and
movq
lcall
push
dec
xchg
nop
popaw
cwtl
decl
lcall
mov
mov
mov
jae
cmp
into
sub
adc
sahf
lahf
sbb
cmc
or
cld
sub
jle
scas
cmp
adc
jb
fwait
lcall
mov
jle
mov
push
fs
gs
xchg
aad
mov
mov
clc
sete
xor
mov
out
test
pop
inc
stos
incb
lods
cmp
aaa
andl
cmp
sub
mov
call
mov
mov
outsl
adc
mov
mov
jecxz
ljmp
xchg
incb
xchg
mov
mov
les
push
add
ljmp
inc
or
jmp
lcall
or
cmc
inc
lret
fs
mov
movsb
nop
popf
scas
mov
mov
xor
sbb
scas
and
movsb
loopne
mov
lcall
xor
cmc
mov
pop
adc
inc
inc
adc
mov
mov
mov
jle
aas
data16
nop
and
out
mov
cmp
mov
call
pop
imul
add
stos
stc
xchg
addr16
and
inc
int
xchg
mov
or
xchg
or
incb
out
cli
add
xor
leave
or
cmp
xchg
roll
inc
jg
jg
push
cmp
xorb
sti
loopne
sbb
out
arpl
mov
push
int
push
push
mov
pop
pop
push
mov
push
mov
push
cmp
push
fsts
pop
xor
xchg
popf
arpl
sbbb
mov
es
push
add
mov
or
or
lock
ss
je
xor
and
stos
fisttpll
int3
pop
hlt
call
imul
xor
pop
push
loop
decl
or
sahf
cmp
dec
enter
dec
ja
inc
mov
fs
or
add
pop
or
pop
or
call
adc
fistl
outsl
inc
xchg
mov
out
xchg
pcmpeqw
xchg
je
stc
test
dec
jb
repz
adc
and
enter
ljmp
test
out
fnstenv
movsb
sub
ret
dec
xchg
das
insl
pop
data16
arpl
dec
addr16
hlt
cmpsl
stos
nop
xor
mov
push
lret
pop
dec
sub
sbb
adc
adc
add
cmpsl
mov
ret
call
jg
sarl
mov
inc
dec
cmp
loope
sahf
sarl
jmp
lcall
and
or
pushl
inc
ss
test
and
test
incb
call
adc
call
in
in
and
fwait
std
add
and
shrl
push
stos
and
xchg
dec
loopne
aam
mov
xor
inc
ss
sbb
pop
jg
incl
mov
cmc
ret
lcall
push
mov
dec
xchg
jecxz
je
arpl
loop
cli
pop
sbb
loopne
xchg
pop
sbb
xor
push
cli
shl
xchg
xchg
push
sub
outsl
cmpsb
inc
jecxz
push
inc
cmp
or
je
dec
rorb
or
jmp
imul
daa
jmp
and
andl
cmp
mov
ljmp
pushl
jns
pop
test
inc
js
arpl
push
cwtl
and
push
pop
and
jne
js
aam
pop
pop
dec
xchg
pop
das
xor
add
pop
add
inc
cli
popa
dec
adc
pop
or
loopne
pop
jle
pop
imul
les
pushl
dec
imul
push
int
inc
rclb
cmpsb
into
or
pop
inc
call
fistl
popf
jmp
mov
insb
jge
data16
mov
lcall
decb
dec
daa
pushf
cmp
fisubrl
mov
sarl
outsl
out
nop
pusha
add
mov
adc
lahf
xor
pop
sub
xchg
cmp
stos
add
push
test
ja
mov
push
or
jecxz
fimull
jmp
lods
es
xor
bound
cmp
xor
push
inc
and
pushl
movl
push
xor
dec
inc
lcall
pop
or
xchg
sub
test
mov
pop
and
pop
sar
inc
mov
insl
adc
pop
aam
xchg
add
push
cli
bound
jg
imul
pop
imul
out
lods
int3
and
sub
movsl
je
inc
mov
mulb
mov
mov
fidivl
push
es
cmp
filds
sbb
sbb
jl
push
gs
xor
mov
mov
dec
fwait
inc
jp
call
xchg
test
pushf
add
outsl
or
cmp
xchg
lods
mov
jne
lods
js
adcb
mov
pop
cmc
in
pop
clc
fs
out
sub
lea
push
leave
decb
jnp
shlb
ljmp
ljmp
cmp
jns
mov
out
push
dec
enter
clc
ljmp
adc
test
mov
ss
mov
or
stos
sub
push
push
xchg
popl
cli
jmp
decb
sub
sub
mov
dec
push
ljmp
popa
add
scas
sbb
stc
xchg
call
xor
call
je
mov
jge
ficompl
mov
ljmp
dec
xchg
cmp
cwtl
pop
scas
out
clc
jg
jmp
jbe
nop
adc
lahf
xchg
jmp
arpl
into
cmp
pop
mov
dec
and
inc
pushf
lods
stos
scas
add
pop
std
subl
cltd
fdivr
xchg
cmp
imul
xor
stos
inc
and
stos
sbb
fwait
dec
mov
clc
cmc
dec
or
loopne
or
sub
filds
nop
and
add
xchg
pop
imul
or
push
dec
repz
subb
sub
adc
mov
lods
adc
cmp
push
test
stos
decb
cmp
or
xchg
jae
and
cmp
dec
incl
inc
lock
dec
addl
adc
mov
out
mov
aam
add
fcoml
ljmp
test
loop
mov
sub
jbe
fiaddl
inc
or
sbb
ljmp
mov
adc
std
cmp
push
in
cwtl
mov
jmp
stc
xchg
jmp
inc
jp
push
out
ds
and
push
fwait
or
cld
xor
cmp
cmpsb
rorb
sti
xor
sub
popa
and
stos
pushl
mov
clc
stos
push
icebp
incl
stos
sbb
jbe
fstpt
inc
xlat
subb
mov
pop
inc
in
addr16
das
idivb
ljmp
push
push
iret
mov
pop
sbb
dec
and
mov
stos
aam
xchg
adc
inc
subl
call
sbb
js
cmp
sub
sbb
call
push
jg
pop
js
das
js
sub
ds
adc
popa
adc
inc
and
pop
arpl
push
add
xor
in
mov
cld
xor
mov
sub
sub
dec
adc
pop
sub
insl
in
cmp
incl
addl
decl
roll
pop
cwtl
jbe
mov
xchg
mov
fisubs
daa
xchg
sbb
mov
mov
lret
imul
out
dec
inc
outsl
cs
sbb
inc
mov
add
adc
push
outsl
ljmp
decl
lret
sub
in
loopne
aas
push
sbb
ja
jp
or
stos
dec
sbb
call
inc
out
or
lahf
jle
mov
push
cmpsb
jnp
jb
push
mov
add
cmpsl
mov
lcall
cmpsb
out
cmpsl
dec
cmp
imul
sbb
aaa
sahf
jne
fwait
dec
pop
dec
push
xlat
cli
incl
pop
js
cmp
aaa
movsb
fs
sbb
xor
xchg
mov
ljmp
decb
push
popa
push
mov
xchg
dec
fldcw
mov
and
test
sbb
and
or
cwtl
iret
inc
incl
out
jb
sub
lods
xor
ss
mov
mov
push
cli
incl
cmp
stos
push
icebp
mov
cli
sub
call
pop
xor
mov
sbb
test
pushf
js
or
ljmp
aam
pop
rcrl
jne
imul
mov
sbb
call
mov
mov
cld
pushl
xor
fisubrl
inc
cmp
mov
std
incl
xorl
pop
and
push
stc
inc
push
ret
push
out
push
fadds
fs
clc
pushl
mov
add
roll
movsl
adc
pop
dec
pop
call
cmp
pop
cltd
pop
sub
mov
or
sub
call
mov
nop
popl
add
cmp
or
xor
and
jmp
bnd
clc
aas
mov
jns
jmp
jne
test
inc
nop
jns
add
mov
mov
test
pop
sub
out
push
adc
je
pop
xchg
stos
mov
je
mov
sub
add
scas
pusha
add
and
movsl
adc
decb
ljmp
inc
cld
scas
outsb
inc
loopne
mov
jbe
add
sbb
out
fnstcw
lods
ds
jae
cs
xor
sub
adc
inc
mov
mov
in
push
dec
insl
or
inc
inc
push
cmp
jns
jbe
and
cmpl
andl
or
dec
pop
sbb
aaa
dec
push
lea
push
jecxz
pop
lea
outsb
incb
add
xor
lods
push
mov
and
jge
imul
popf
push
sub
sar
push
push
das
push
xchg
arpl
lret
mov
jecxz
gs
outsb
lea
popf
cltd
fiaddl
mov
lods
decl
dec
push
decb
mov
push
or
les
mov
lcall
lret
or
xchg
movsb
mov
dec
jno
dec
je
ficoml
xor
mov
jae,pt
ja
or
loop
xchg
mov
movsb
cmp
jb
or
cmp
sub
nop
aam
sahf
decb
addb
mov
mov
movsb
dec
adc
movsl
xlat
jbe
je
add
pop
add
cmpsb
in
jmp
cmp
mov
test
pop
inc
pop
add
jle
lock
imul
cwtl
add
call
or
shlb
gs
punpckldq
bound
mov
out
call
stos
inc
loop
sbb
mov
cmp
sbb
out
and
mov
call
and
sbb
nop
aaa
pop
mov
xor
jg
xor
movsb
xor
push
js
aaa
sbb
push
push
pop
cmp
mov
int
jae
enter
sti
xchg
push
pop
lahf
xor
jle
test
push
add
mov
inc
dec
mov
push
pop
icebp
cltd
inc
add
pop
jg
jmp
xchg
sbb
test
fldt
mov
shrb
bound
mov
cmp
lock
mov
mov
jmp
cltd
lcall
jmp
xchg
es
mov
into
fcmovnbe
mov
xchg
mov
push
hlt
dec
fidivrl
divl
pop
jbe
aas
sub
jg
push
aas
mov
rolb
mov
fmul
mov
cmp
xchg
loope
dec
cwtl
int3
stos
sub
push
jg
ljmp
push
fwait
in
mov
xor
pushl
fidivrl
mov
jne
lahf
xor
cld
aam
int3
add
xor
inc
mov
xchg
mov
dec
push
aas
cs
mov
sbb
and
mov
push
sub
incl
inc
mov
int3
pop
lods
movsl
inc
les
loope
fs
test
mov
pop
or
pop
sub
xchg
mov
out
push
aas
add
std
mov
into
sub
cmp
lcall
cmp
lea
fistpl
mov
cmpsb
in
and
sbbl
xchg
aad
xor
aaa
cld
aaa
mov
ret
or
mov
lret
lcall
mov
leave
call
fisubrs
mov
or
xchg
inc
xor
lods
lcall
std
sub
ret
cmpsl
jp
scas
iret
mov
test
sahf
mov
ljmp
and
outsb
imul
aaa
mov
inc
adc
mov
mov
mov
stos
test
push
mov
das
fs
orl
jg
stos
add
dec
jg
incb
lahf
adcb
mov
outsl
cli
call
cli
sub
xchg
fbld
cmpsb
test
lcall
lea
mov
mov
loop
int
mov
jmp
call
cwtl
sti
xchg
popf
mov
loop
stos
test
std
mov
sar
mov
jb
sub
and
movsl
push
stos
xchg
xlat
jmp
incb
pop
insb
call
cltd
adc
loopne
add
in
push
lods
mov
sbbb
mov
inc
cmpb
sbb
inc
imul
dec
sbb
cltd
pop
mov
outsl
lcall
lahf
sub
in
xchg
aaa
push
out
jns
push
inc
mov
lea
mov
and
xchg
lcall
rcll
mov
fisubrl
push
jnp
adc
lock
mov
outsb
cmp
incl
cmpsl
pop
mov
add
jb
mov
in
daa
xchg
leave
push
cld
call
mov
mov
fcmovnbe
imul
or
adc
call
scas
lods
inc
cwtl
test
adc
movsl
mov
pop
cld
or
repnz
loope
fisubs
mov
mov
mov
pop
push
push
inc
push
jae
sbb
lcall
aam
ljmp
jecxz
jecxz
inc
xorb
xchg
iret
shlb
pop
add
popf
sahf
in
sti
or
lahf
ret
mov
xchg
or
mov
lret
push
mov
xor
lret
test
mov
lret
mov
clc
call
xchg
sub
cmpsb
mov
fbld
mov
imull
imul
stos
jmp
fwait
mov
cmpb
lods
push
test
lcall
scas
dec
cmp
test
out
adc
test
cld
sbb
cmpb
popf
jbe
stos
in
xor
insb
sub
ljmp
mov
idivl
xchg
nop
push
andb
call
outsl
inc
pop
jns
push
xor
xchg
pop
push
inc
push
jns
push
pop
inc
insb
push
inc
push
push
xchg
addr16
dec
jae
cwtl
clc
lcall
jnp
dec
loopne
inc
jp
arpl
fisubl
pop
lds
dec
push
push
ljmp
scas
mov
push
jo
ja
les
jae
clc
out
push
mov
outsb
or
push
addr16
dec
je
call
pop
add
dec
arpl
push
arpl
jne
dec
push
mov
pushl
cltd
push
jae
dec
inc
pusha
imul
push
add
rclb
add
gs
mov
dec
push
jb
ja
push
push
addr16
push
int
outsl
push
cld
insb
sbb
jo
clc
ljmp
dec
dec
xchg
dec
inc
jne
jg
push
push
insl
jb
pop
jg
add
dec
inc
dec
and
push
inc
xchg
cli
call
js
inc
cmp
pop
push
outsb
js
lret
inc
lock
data16
call
orb
js
push
pop
pop
decb
ss
push
pop
lret
inc
xchg
dec
fwait
int
mov
imul
cmc
fidivs
imul
arpl
fwait
int
jle
addr16
inc
jbe
xchg
inc
mov
jno
fldcw
pop
fdivrl
dec
jmp
pushw
inc
cmp
pop
jbe
inc
insb
pop
data16
insb
pop
pop
jge
push
pop
push
jp
ss
int
popa
lcall
pop
int
mov
hlt
ja
push
movq
inc
data16
imul
dec
fwait
int
mov
jnp
push
out
dec
mov
insb
ss
outsl
adc
jge
inc
lcall
ss
dec
fs
fmuls
int3
push
jno
or
lret
repz
push
outsb
insb
ss
adc
js
inc
pop
inc
sub
cmpsl
fsts
jg
and
int3
mov
je
fs
dec
outsl
xchg
int3
data16
pop
insl
jb
jb
mov
out
ja
jge
inc
push
push
dec
call
mov
cmp
and
xor
cmp
incl
add
and
cmp
es
adc
pop
push
and
add
cmp
call
pop
adc
jno
dec
jg
dec
push
inc
pop
arpl
cmp
inc
shr
or
or
push
mov
mov
inc
pushf
dec
pop
push
xor
pop
push
inc
data16
dec
push
pusha
jns
dec
dec
inc
push
sub
imul
pop
inc
pop
pop
or
push
inc
adc
sub
or
ljmp
jbe
push
sub
cmp
push
adc
sbb
cmp
and
call
xor
add
add
sub
aaa
or
sub
or
cmp
sbb
sub
xor
push
push
add
push
cmp
pop
fdivrs
or
add
outsl
subb
xor
sbb
sub
or
sbb
adc
sub
and
pop
sub
cmpsb
pop
pop
push
inc
jns
cli
lcall
dec
push
jge
dec
dec
insb
push
pop
pop
jne
outsb
add
aas
push
das
add
dec
gs
cmp
inc
pop
jmp
outsl
mov
cmp
nop
pop
je
stos
jle
dec
sbb
bound
jl
pop
arpl
add
ljmp
xor
add
incb
or
ss
cmp
incb
sbb
add
mov
add
out
add
add
cmp
inc
push
decb
pop
jp
sbb
sbb
sub
pop
jno
mov
sub
je
dec
xor
push
outsb
scas
push
push
rcrb
sbb
push
jp
add
clc
cmp
pop
push
sub
xor
sbb
aas
add
xor
ds
add
and
add
inc
or
adc
mov
in
and
xor
xor
daa
sbb
decl
sub
xor
and
and
sbb
cmp
ss
lcall
aam
aaa
sub
adc
push
sbb
je
sub
loop
push
decb
and
sbb
decl
lock
mov
push
inc
push
mov
jns
dec
or
ja
push
mov
xchg
incb
mov
push
and
xor
sbbl
inc
fs
popa
push
pop
ljmp
or
dec
push
inc
jmp
out
mov
push
daa
cmp
das
aaa
sbb
and
push
pop
mov
pop
insl
inc
and
cmp
jp
aaa
cmp
and
pop
add
push
hlt
add
and
and
ja
call
xchg
sbb
add
jno
ss
sub
out
mov
pop
addr16
decb
sbb
adc
cmp
xor
inc
mov
lock
sbb
jmp
sub
and
xor
xor
ljmp
and
sub
and
or
adc
cmp
cmp
sbb
adc
and
dec
add
ljmp
xor
imul
push
pop
adc
or
aas
mov
push
fsubrp
inc
incl
add
or
sub
add
or
sbb
dec
and
adc
cs
mov
cmp
push
add
sub
pop
sbb
add
call
iret
or
adc
and
sub
je
and
das
add
hlt
inc
sub
cmp
or
out
inc
outsb
add
xor
imul
adc
pop
and
cmp
cmp
push
movzbl
pushf
or
ud0
jne
daa
add
xor
adc
sbb
sub
xor
push
sbb
incl
adc
cmp
sbb
add
pop
outsl
adc
mov
aaa
xor
xor
adc
fdivp
adc
push
adc
push
adc
aas
cmp
jg
mov
adc
and
sbb
pop
ds
xor
sub
push
aas
or
aad
sub
jp
xor
or
and
add
cmp
push
cld
dec
jns
dec
popa
dec
adc
add
push
inc
adc
mov
cmc
test
sbb
cmpsb
hlt
push
mov
ljmp
pop
sub
sbb
incl
popa
movsl
sub
or
or
js
cmp
jo
add
jg
sbb
sub
pop
jp
jo,pn
aaa
sub
adc
cwtl
js
ljmp
cld
aaa
xor
pop
or
and
jbe
sbb
lcall
inc
das
insl
imul
xchg
adc
incb
sub
adc
or
pusha
enter
push
pop
ds
jne
pop
and
jmp
adc
sub
mov
sub
or
pop
loopne
dec
or
xor
addr16
push
add
out
std
out
and
fs
or
sbb
pop
add
sub
jl
inc
or
jo
push
daa
test
push
push
jb
jns
push
add
sub
cmp
jae
sbb
cmp
adc
or
sub
adc
daa
sub
sub
mov
call
xor
inc
or
cmp
pop
fists
sub
xor
in
sub
adc
push
adc
sar
adc
and
sbb
pop
imul
outsl
cmp
gs
incb
cwtl
inc
dec
push
jb
imul
adc
inc
jle
push
pop
pusha
inc
bound
push
cmpsb
pop
mov
inc
enter
sub
jne
imul
pop
and
icebp
incl
or
aaa
jle
or
sbb
cmp
je
adc
push
push
pop
adc
push
xor
les
dec
add
aas
add
ss
dec
sub
or
cmc
stos
cmp
xor
sub
xor
pop
push
push
and
push
popa
push
inc
dec
cld
filds
pop
mov
sub
pop
dec
xor
push
cld
sub
or
or
ljmp
dec
daa
sub
add
adc
xor
inc
cmp
add
pushf
adc
add
pop
cli
call
lds
and
sbb
adc
daa
push
inc
or
scas
dec
sbb
adc
push
loopne
ds
adc
add
pop
sub
incl
cmp
sub
cmp
add
or
or
push
call
loopne
and
ss
pop
xor
ficoms
or
or
icebp
jle
add
lcall
int
sub
push
cmp
inc
decb
or
clc
call
or
sub
push
outsb
sbb
xor
pusha
sub
cld
xchg
movsb
decb
and
push
cmp
dec
jbe
sub
push
add
mov
add
push
das
sbb
mov
sub
pop
lcall
or
and
adc
cmp
jmp
cmp
daa
or
and
cmp
sub
sub
loopne
jnp
and
push
dec
push
cld
jg
aas
sub
cmp
sub
jg
sbb
jb
dec
adc
imul
aaa
or
push
cmp
aaa
cmp
and
ds
stc
add
imul
push
dec
insb
inc
or
ljmp
push
movsb
jnp
sbb
or
inc
pop
pop
adc
out
mov
bound
and
cmp
addr16
pop
loopne
pop
inc
xor
dec
shrb
cmp
adc
sti
pusha
xor
xor
push
jnp
adc
std
sub
decl
cmp
add
and
daa
cmp
inc
adc
dec
mov
or
sbb
sub
jbe
insl
push
push
call
pop
inc
dec
jns
dec
dec
insl
pushw
cmp
or
daa
es
inc
lds
in
xor
outsb
add
push
push
decl
inc
cmp
and
or
cmp
sbb
sub
sub
call
sub
cmp
pop
jne
push
add
xor
or
push
cmp
and
or
cmp
and
xor
push
test
and
pop
jns
sub
es
sub
decl
sub
adc
or
aaa
cmp
jle
or
dec
push
push
add
dec
adc
xor
mov
outsl
pop
push
es
sbb
push
pop
and
inc
or
adc
sub
adc
or
adc
gs
jp
jo
cmp
jne
push
push
add
incl
jbe
add
sbb
sbb
ds
outsl
push
aas
push
push
jo
xor
jns
js
pop
or
inc
adc
imul
pop
popa
or
je
or
or
inc
dec
bound
fcos
pushl
adc
add
bndstx
inc
push
push
pop
inc
and
push
ds
inc
shll
sub
add
jbe
adc
sub
pusha
dec
jl
inc
addr16
add
decl
push
dec
insb
adc
pop
outsb
addr16
sbb
xor
xor
cmpb
push
cs
inc
sub
sbb
insb
xor
and
rorw
scas
dec
add
add
dec
add
out
jmp
hlt
push
aaa
pop
or
push
es
adc
shll
nopl
ret
les
sbb
jg
add
scas
cmp
dec
sub
push
push
jl
inc
cmp
decl
push
adc
xor
and
sysret
sub
cli
mov
fs
add
shlb
sub
xor
pushl
cmp
das
es
and
sub
add
cmp
ret
jg
add
or
dec
or
cmp
add
sbb
cmp
or
ja
lods
adc
decl
and
and
pop
sbb
lock
call
sbb
pop
push
pop
jg
popa
cmp
and
cmp
or
and
ljmp
sub
jo
or
and
dec
inc
or
aaa
mov
add
or
push
cmpsb
add
sbb
xor
and
and
adc
jne
sbb
cmp
pop
sbb
mov
sub
cmp
bound
or
xor
into
pushl
or
or
aaa
and
jne
sbb
jle
jle
add
xor
cmp
jg
pop
mov
sub
or
daa
or
push
pop
pusha
inc
add
sbb
pop
js
stos
cmp
pop
cmc
sbb
xor
decb
add
sub
das
es
ds
fwait
add
push
and
jg
repnz
addr16
inc
jae
push
xchg
jae
lock
lahf
adc
add
daa
sub
and
fdivs
mov
cmp
andb
push
stos
add
movsl
enter
nop
xchg
aaa
lcall
ss
push
dec
adc
adc
rol
inc
decb
pop
jle
inc
rolb
decb
push
adc
call
popa
inc
lods
insb
pshufw
arpl
call
fwait
scas
xor
xchg
pop
push
push
or
cld
decb
or
bound
push
insl
xor
adc
cmpsb
push
das
lock
ss
insb
or
arpl
dec
jb
jae
sbb
inc
pop
add
adc
push
jl
pop
jbe
fs
push
std
pop
cmp
jnp
sbb
ss
pop
or
and
dec
push
inc
inc
and
dec
inc
inc
pusha
ljmp
mov
cli
imul
adc
sbb
push
jle
and
push
push
daa
add
jge
jmp
sbb
adc
add
inc
incb
pusha
jno
adc
lock
mov
lock
push
pop
and
xchg
xchg
repz
ja
iret
ja
or
mov
pop
nop
pop
or
pop
push
inc
fs
push
sbb
adc
cmp
fldl
push
and
cmpsb
sbb
sub
pushl
cwtl
or
xchg
rorb
mov
das
xor
inc
push
xor
decl
or
rol
and
add
and
sbb
push
cld
jmp
adc
sbb
and
add
add
cmp
push
das
sti
decl
imul
add
sbb
aas
dec
adc
ss
add
lret
fwait
jle
sbb
pop
dec
or
xor
pushf
or
push
call
push
push
push
push
cmp
cmp
sbb
insl
and
cs
xor
fwait
jle
aas
pop
sbb
sub
jne
daa
and
sbb
fdivp
jg
and
ds
push
sbb
dec
and
add
add
sub
sbb
adc
shlb
jb
xor
jle,pn
pop
push
add
out
ret
decl
pop
ja
sub
cmp
xor
cmpb
gs
xor
or
push
xor
push
cmp
pushl
add
pop
sub
add
jns
nop
push
inc
inc
clc
incl
xor
push
or
insl
aas
fsubrs
jl
data16
dec
sub
adc
and
xor
push
sub
cmp
cmp
and
dec
ret
push
dec
and
push
add
jo
fwait
mov
cmpsb
jbe
pop
push
jle
push
xor
in
mov
and
xor
cs
cmp
add
pop
test
pop
subl
dec
jg
jns
and
push
outsb
add
adc
enter
xor
incl
or
daa
inc
adc
sub
xchg
fdiv
or
push
insb
imul
inc
mov
dec
mov
dec
add
xor
punpcklbw
push
add
fwait
pop
loop
and
pop
cmp
and
push
sbb
jl
adc
insb
jb
adc
inc
pusha
inc
outsb
jg
and
adc
adc
sub
dec
sbb
adc
bound
sbb
and
pop
aam
test
mov
pop
sub
or
adc
aas
xor
pop
jbe
test
xor
sub
sbb
std
inc
jl
es
inc
push
inc
pop
gs
dec
push
dec
add
rorb
or
ljmp
add
sub
cmp
cmp
inc
pop
inc
xor
cmp
incl
ljmp
cmp
das
add
pop
ljmp
add
dec
and
adc
xor
mov
les
sbb
push
add
add
cmp
add
xor
shrl
pop
push
adc
cmp
or
bndldx
es
push
adc
sub
and
xor
adc
push
add
sub
sub
sub
or
jo
stos
add
insb
xor
add
clc
inc
push
sbb
sbb
sub
cmp
or
pop
xor
cwtl
mov
dec
call
inc
pop
push
push
mov
cmp
cmp
outsb
ss
or
inc
loop
std
pop
mov
das
cvtps2pd
or
mov
and
test
sbb
inc
insb
dec
inc
sbb
cmpsb
cmp
cmp
pop
je
adc
inc
mov
scas
outsb
js
xor
pop
add
and
lods
push
mov
fs
add
mov
mov
lock
sbb
and
aaa
dec
ss
or
pusha
dec
push
cld
and
sub
push
push
push
sbb
jns
mov
aas
adc
add
mov
sub
xor
pop
arpl
cmp
es
or
dec
sub
adc
add
inc
mov
xor
sub
decb
dec
add
and
loope
cmp
inc
push
or
insb
add
ficomps
jb
inc
insb
or
jmp
jne
dec
inc
push
pop
push
inc
rclb
imul
push
decl
outsl
outsl
jno
push
pop
jae
outsb
push
dec
gs
push
or
lcall
mov
mov
dec
dec
bound
fs
push
dec
inc
jne
js
jbe
jbe
pop
dec
addr16
push
jne
ljmp
mov
inc
fs
dec
sbb
out
gs
cmc
dec
loopne
stos
lods
idiv
cmc
push
dec
sarb
jno
inc
inc
dec
stos
js
dec
je
cli
js
inc
dec
in
ret
dec
int
ret
pop
outsb
pop
push
insb
push
or
push
outsl
push
cli
push
sub
lcall
sub
pop
pop
mov
gs
data16
jo
push
inc
pop
or
jle
inc
jno
dec
inc
sub
bnd
outsl
lret
or
pop
lds
imul
pushf
je
dec
jo
inc
pop
jp
outsl
inc
push
ljmp
mov
jbe
je
inc
dec
dec
pop
pop
outsb
lds
shl
jo
addr16
hlt
jb
inc
xor
sub
pusha
dec
jno
inc
push
inc
push
xchg
or
inc
inc
imul
addr16
sbb
sbbl
dec
dec
dec
int
ret
fldt
push
insb
inc
fs
lds
pop
jno
push
inc
jnp
dec
push
jp
push
pop
dec
push
push
gs
adcb
loop
push
mov
outsb
lret
shrl
sbb
sbb
jp
cmp
ja
js
jbe
jne
dec
inc
mov
ds
jae
stos
inc
lcall
scas
mov
push
push
push
jo
je
fisttpl
dec
popa
cmp
shrb
sti
pop
add
dec
inc
jp
jno
inc
inc
jmp
inc
dec
dec
dec
dec
jo
pop
jns
jo
addr16
jmp
push
jo
dec
mov
outsb
inc
jnp
push
dec
pop
inc
fs
push
bound
decl
arpl
push
bound
jno
mov
das
mov
std
int3
inc
fst
cs
push
pop
or
jmp
xor
or
cmp
push
out
cmp
sbb
call
sbb
and
aaa
or
cmp
sub
xor
cmp
xor
sbb
lcall
das
sub
das
pop
daa
aas
or
sub
sub
add
adc
dec
or
adc
or
and
cmp
sbb
add
push
cs
add
aaa
pop
pop
sbb
inc
inc
and
and
lret
mov
mov
jle
loope
push
mov
movsl
pop
out
int3
adc
dec
inc
dec
dec
ljmp
jg
mov
popa
shll
data16
outsl
pop
popa
dec
out
mov
jns
add
add
aaa
stc
pop
inc
sub
xor
pop
pop
cmp
add
sbb
or
sbb
or
jns
sbb
push
xor
or
pop
lock
and
or
add
das
pop
cmp
pop
es
xor
xor
mov
add
push
aaa
sbb
adc
or
push
and
and
cmp
xor
cmp
ja
push
jl
push
push
or
cmp
adc
cmp
inc
and
add
and
sub
push
je
pop
movsb
pushl
or
cmp
daa
adc
dec
adc
add
or
das
jbe
lcall
mov
xor
add
cmp
sub
inc
dec
push
add
push
push
std
in
aas
adc
inc
xor
xor
add
sub
add
xor
mov
lcall
insb
and
pop
sbb
add
push
or
insb
and
ljmp
cmp
or
outsl
add
decl
gs
sub
or
add
sub
inc
xor
dec
and
push
or
sub
or
or
and
add
clc
jg
inc
je
and
inc
sbb
cmp
pop
add
add
jns
and
cld
pop
mov
or
cmp
pop
scas
incl
lar
and
push
or
or
and
incb
dec
sub
clc
inc
adc
cmp
add
adc
cmp
daa
or
outsb
add
adc
push
or
in
out
xchg
addb
jbe
and
push
push
dec
imul
inc
js
movsl
push
cmp
push
mov
dec
dec
call
rclb
rorb
dec
xchg
inc
push
add
mov
popf
xchg
je
lods
stos
int
jnp
movsb
bound
xchg
fdivrp
aaa
xchg
mov
repnz
push
add
iret
decl
imul
push
push
inc
adc
push
mov
mov
addr16
pop
mov
inc
imul
imulb
loop
dec
pop
jns
push
mov
xchg
jo
inc
data16
outsb
mov
pop
dec
or
mov
mov
call
out
push
repnz
les
mov
outsl
inc
cmp
add
mov
lahf
aas
push
inc
dec
mov
jno
leave
cmpsl
jns
xor
ds
scas
int
mov
push
push
ja
test
aas
clc
inc
inc
mov
gs
pop
sahf
test
push
ljmp
dec
incb
push
jnp
mov
pop
subl
push
lret
cmp
inc
test
addb
clc
popl
addr16
fcoms
clc
mov
push
loopne
das
cltd
push
pop
je
pop
push
aad
push
repnz
jnp
xchg
jl
cmp
add
js
mov
sbb
add
mov
dec
repz
jbe
nop
pop
loope
outsb
jae
pusha
pop
pop
jle
add
xorb
and
ss
popf
jno
ds
ret
dec
xchg
sub
add
mov
push
mov
insl
pusha
jl
fbstp
call
popa
jecxz
dec
push
gs
pop
jo
sub
arpl
cmpsb
dec
dec
adc
mov
js
gs
mov
push
loope
push
dec
mov
pop
jo
stos
pop
cwtl
jns
rorl
incl
jae
mov
mov
xor
push
jnp
mov
and
dec
push
inc
jae
inc
jp
inc
ja
nop
lahf
mov
ljmp
enter
repnz
into
mov
icebp
movsb
test
arpl
and
jns
dec
outsl
inc
mov
scas
movsb
jmp
lods
ljmp
push
lahf
call
repnz
test
js
cmpl
jno
cmpsb
dec
inc
inc
insl
cwtl
push
inc
addr16
sub
nop
jo
push
sbb
mov
push
daa
mov
imul
xchg
insb
push
jo
out
jo
jne
pop
call
xchg
andl
popa
jge
insb
pop
cmp
push
mov
add
call
mov
popa
pushl
inc
add
test
pop
xchg
rolb
cld
aas
enter
jne
xchg
outsb
push
pop
addr16
dec
jae
xorl
dec
push
fmuls
test
imul
adc
test
inc
imul
pop
cmp
leave
dec
push
push
aaa
pop
ljmp
inc
xchg
outsl
dec
call
and
imul
jmp
and
inc
dec
sub
xor
mov
pop
inc
je
push
popa
push
inc
push
arpl
pop
arpl
and
insb
cmp
pop
jb
lods
jle
inc
lcall
inc
stc
inc
pusha
imul
push
push
push
add
sbb
dec
jge
push
push
push
addr16
outsl
push
xor
push
fadds
dec
jo
pop
mov
rclb
inc
inc
sahf
sbb
aaa
mov
dec
fs
bound
jne
jbe
jae
dec
inc
inc
jns
out
sub
inc
idivb
outsl
cmp
push
es
mov
inc
dec
dec
les
push
outsl
inc
leave
jp
arpl
pop
cld
outsl
jle
push
inc
scas
jp
inc
insb
push
stos
inc
pusha
fs
dec
jae
jg
xor
fbld
insb
dec
adc
add
je
dec
pop
sub
lock
in
dec
inc
sarb
insb
push
cld
pop
js
orb
pusha
jl
ja
jnp
cmpsb
push
mov
flds
inc
lcall
jle
dec
repnz
jecxz
aaa
dec
fwait
int
mov
push
and
imul
jle
imul
mov
jg
pop
cmpsl
addr16
int
mov
dec
call
inc
sbb
fldcw
dec
sbb
push
inc
ss
int
pop
imul
insl
jnp
jno
data16
insb
mov
jns
inc
insb
ss
int
inc
into
jl
imul
push
jg
data16
jns
jle
jp
test
ss
inc
mov
into
dec
out
into
jge
int
mov
arpl
gs
ds
repz
lret
outsl
arpl
jecxz
insl
lds
test
popf
fdivr
cli
gs
imul
js
push
pop
mov
adc
movsl
test
lcall
inc
test
mov
mov
push
push
bound
push
pop
and
bound
jnp
dec
pop
push
mov
or
cmp
ret
xor
xor
and
or
or
inc
jg
inc
adc
push
cwtl
or
push
sbb
or
incl
or
inc
sbb
or
mov
ljmp
and
sbb
decl
and
sub
sbb
xchg
outsb
pop
cmp
and
sbb
adc
daa
ss
jg
adc
or
and
adc
or
es
inc
add
daa
or
cmp
add
sub
and
outsb
xor
sbb
unpckhps
or
cld
add
pop
adc
add
in
push
and
sub
push
addr16
xor
jg
inc
jl
das
push
sub
arpl
mov
ret
sbb
add
cmp
push
sbb
hlt
aaa
rol
pop
cld
adc
sbb
push
cmp
ljmp
cli
push
push
or
adc
adc
sbb
adc
push
cmp
push
add
dec
insb
and
adc
add
scas
add
pop
adc
lcall
sub
decb
call
cld
cmp
or
das
add
sbb
or
cmp
xor
inc
adc
xor
sbb
lock
decl
sub
cmp
cmp
or
das
cmp
sub
adc
aaa
or
adc
inc
icebp
jae
ljmp
pop
cmp
xor
push
aaa
and
add
xor
daa
or
sub
sub
call
pop
xor
mov
xor
jne
or
ds
daa
adc
push
adc
add
adc
add
and
decl
adc
pop
adc
dec
xchg
pop
pop
or
xor
sbb
adc
sbb
adc
cltd
adc
adc
add
mov
dec
and
push
sbb
push
adc
adc
xchg
jg
imul
and
push
prefetchnta
mov
xor
sub
mov
mov
sub
or
incl
add
cmp
pop
push
es
cmp
xor
push
insb
cmp
push
das
cmp
sti
ljmp
cmp
adc
add
add
daa
adc
lock
jg
sub
xor
or
jo
and
or
sub
xor
push
pop
cmp
add
aas
and
sub
add
fldenv
and
call
or
and
adc
lock
das
add
add
imul
aas
cld
adc
push
push
add
or
mov
push
adc
xor
in
sbb
sbb
add
and
in
ret
cmp
cmp
add
jnp
sub
pop
jl
sbb
fstl
ss
jb
icebp
ja
pop
cmp
sbb
xor
cli
add
adc
sarl
add
sub
pop
push
mov
std
out
add
push
cmp
ss
gs
dec
or
es
sub
adc
cld
jne
jbe
xor
xor
fcompl
cld
jg
add
sub
inc
daa
daa
push
pop
add
fdivrl
jmp
lods
adc
dec
adc
sbb
cvtpi2ps
sbb
xor
ja
cmp
xchg
sbb
mov
decb
mov
and
xor
jb
push
adc
sbb
sub
push
or
and
popa
jg
sbb
and
adc
bound
push
sbb
out
xor
xchg
jle
cmp
sbb
ret
sbbl
je
ss
push
adc
or
loope
mov
sub
ret
inc
dec
fbstp
hlt
sub
pop
pop
sbb
push
xor
adc
and
pop
xor
or
movsb
lcall
bound
aaa
xor
jbe
incl
or
and
decb
or
or
push
pop
xor
add
jle
sub
and
cmp
arpl
add
xor
push
sbb
push
ss
call
sbb
adc
push
dec
daa
add
adc
sbb
scas
adc
cmp
sub
pop
lcall
xchg
dec
ds
in
sub
add
outsb
push
push
sub
adc
sub
aas
sbb
ss
pop
dec
adc
push
lea
clc
sub
or
or
push
xor
and
and
add
ss
jp
add
adc
and
and
add
adc
cmp
sub
and
mov
out
dec
adc
and
sbb
sub
xor
adc
jle
push
adc
mov
adc
adc
pop
push
adc
jp
jp
sub
and
pop
and
pop
lcall
enter
pop
aam
stos
decl
sub
xor
add
cmp
or
or
sub
push
mov
xor
add
loopne
cmp
xchg
inc
adc
sub
pop
or
adc
cmp
inc
subl
adc
pop
and
sbb
xor
cs
mov
and
xor
ds
push
es
dec
adc
adc
pop
sub
aaa
jge
adc
sub
inc
jb
mov
cmp
decl
cmp
sub
pop
push
mov
add
and
cmpsb
jl
outsl
enter
or
sub
mov
stos
stos
and
popa
or
pop
push
mov
jae
add
bound
push
sub
xor
jmp
push
sbb
add
or
pop
out
js
and
mov
and
adc
sub
ja
push
add
and
mov
dec
sub
adc
cmpsb
incl
push
das
or
dec
jb
addr16
push
add
cmp
mov
cmp
pop
in
and
rorb
inc
jle
mov
fs
or
or
add
sbb
add
arpl
push
cmp
sbb
sub
and
xor
xor
or
adc
sbb
dec
bound
jp
pusha
clc
push
or
das
push
or
incl
add
lock
outsl
fmuls
xchg
dec
cmp
sub
xchg
inc
sbb
daa
and
and
outsb
dec
mov
call
incb
add
dec
pop
xor
pop
add
dec
adc
or
xor
jo
adc
out
jno
sbb
sub
lock
jno
nopl
adc
cmp
mov
cmp
nopl
push
jne
or
add
adc
sbb
ret
rolb
sbb
pop
add
je
addr16
push
hlt
pop
aaa
xor
push
adc
or
inc
dec
sub
sbb
add
push
add
daa
and
adc
and
je
cwtl
cmp
pop
pop
push
push
aam
aaa
add
ss
cmp
add
add
pop
js
push
jp
jo
mov
or
xor
mov
or
inc
adc
adc
mov
adc
and
lcall
or
inc
xor
and
pop
loopne
inc
or
mov
xor
xor
and
or
ljmp
pop
pop
pop
or
ljmp
adc
daa
or
pop
sub
and
fcomip
fwait
outsb
cmp
sub
sbb
and
ss
push
and
ds
sbb
sbb
inc
aas
push
std
int
call
or
pop
sbb
add
xor
dec
dec
add
cmp
and
lods
mov
sub
mov
or
sbb
adc
inc
dec
cmp
sub
hlt
add
or
decb
into
adc
add
das
sar
adc
dec
push
add
xor
or
add
mov
dec
das
sbb
add
out
mov
push
dec
pop
or
adc
scas
clc
cmp
and
sbb
jp
xor
xor
cmp
sbb
mov
jg
inc
cmc
movntps
push
xor
and
add
and
mov
dec
push
cld
dec
sub
out
ficoml
or
cmp
and
gs
add
xor
and
jo
mov
mov
pusha
xor
add
incl
cmpsb
mov
inc
pop
and
xor
add
sub
push
decl
icebp
sbb
add
outsb
add
cmp
push
sub
loop
cmp
push
and
xor
add
sub
adc
mov
sbb
and
adc
outsl
mov
pop
lcall
or
pop
loope
add
push
js
sub
movsb
je
sbb
cmp
roll
push
and
jne
test
or
rorb
cs
or
push
ljmp
and
or
jnp
adc
pop
aas
lcall
adc
pop
je
pushl
ss
push
inc
les
sahf
pop
add
add
push
push
test
pop
daa
cmp
add
cmp
push
lds
cmp
sbb
pushf
insl
push
push
add
xor
in
mov
adc
loopne
add
add
test
outsl
daa
push
movsb
pop
jg
xor
out
push
addr16
js
sub
arpl
repz
inc
push
xor
jae
sbb
sbb
sbb
sub
xor
sbb
inc
and
aad
outsl
inc
aad
incl
mov
ss
outsl
inc
loope
push
inc
sub
dec
sbb
jo
push
push
ljmp
cli
and
add
pop
adc
add
aas
ss
push
ficompl
inc
sbb
imul
mov
mov
and
or
sbb
sbb
popa
loope
xchg
ds
sbb
es
ljmp
out
adc
sub
jo
sbb
cmp
in
adc
imul
dec
mov
jg
mov
inc
push
or
jle
xor
dec
outsl
data16
decl
outsb
jns
sbb
hlt
ja
xor
adc
inc
inc
inc
insb
dec
sbb
sub
push
and
or
add
xorb
push
je
dec
call
aam
pop
mov
cmp
or
or
testb
sub
cs
sub
add
sub
sbb
cmp
or
push
cmp
xor
cmpsb
add
ljmp
jnp
push
cmp
push
cmp
aas
call
sarl
and
mov
clts
add
add
clc
xchg
xor
push
xor
pushl
sbb
mov
or
and
sbb
std
pop
lock
jno
adc
pop
xor
sbb
xor
adc
sub
stos
decl
or
cmp
cld
xor
adc
mov
sub
cmp
push
aas
xor
push
cmp
add
inc
push
decl
and
push
push
or
xadd
add
mov
and
xor
add
movsl
push
sbb
add
xchg
icebp
pop
and
or
or
xor
sub
cmp
push
cmp
imul
rclb
sbb
and
push
or
and
lock
das
xor
adc
sub
sub
inc
push
add
ss
sub
sbb
xor
and
pop
add
jecxz
ja
js
and
add
or
sub
lds
xor
or
int3
mov
dec
add
xor
imul
or
sahf
hlt
or
and
scas
xor
daa
xor
and
adc
cs
jg
ret
cmp
cmp
and
sahf
or
pop
push
or
or
and
push
adc
incb
sbb
and
clc
call
and
and
add
and
push
push
out
incl
pop
lock
aaa
cmp
and
sub
sub
pop
sub
clc
or
cmp
adc
adc
fsubs
push
pop
jo
ret
outsb
or
xor
add
pop
es
gs
mov
sbb
les
sub
imul
xor
xor
cmp
es
das
push
sbb
pop
and
ds
aam
loopne
adc
add
xor
cmp
sbb
lds
pop
adc
or
ljmp
push
jno
inc
adc
jnp
bound
mov
inc
and
jge
pop
inc
inc
pushl
push
es
sub
add
add
sarb
cmp
cld
adc
add
xor
and
ds
mov
or
adc
aaa
sbb
cmp
add
push
mov
cmp
lcall
incl
data16
add
adc
xor
sub
fdiv
inc
sbb
sbb
je
loopne
das
test
aas
sbb
sub
pop
aas
pop
daa
or
add
js
nop
xor
add
or
cmp
daa
sub
or
add
push
push
adc
adc
sbb
xor
lret
push
lcall
xor
xor
imul
inc
cmp
cmp
sbb
pop
sbb
push
das
and
loop
sbb
pop
loopne
popa
jbe
sbb
xor
icebp
pop
dec
js
xor
pop
xor
pop
sbb
add
das
addb
sbb
repnz
sbb
sub
hlt
mov
add
and
add
sub
xor
push
adc
or
adcb
cmpsb
add
cmp
mov
or
or
adc
or
sbb
or
cmp
decl
pop
pop
add
sbb
jno
mov
cld
cmp
jp
add
and
jg
aaa
or
or
or
lcall
adc
sbb
push
add
xor
jne
decl
pusha
xor
aas
push
sbb
xor
or
xor
cmp
mov
cmp
jno
sub
inc
lock
sbb
or
or
icebp
add
jp
xchg
pop
adc
decb
adc
std
bound
sub
dec
sub
add
cmp
addr16
sbb
jns
cmp
add
hlt
jle
or
sbb
sub
lock
cmp
pop
xor
je
sub
add
and
jo
or
dec
call
push
and
sub
cmp
push
or
incl
pop
syscall
pop
push
push
or
xor
sbb
ljmp
push
push
xor
or
dec
adc
sub
call
sbb
es
push
aas
push
sub
mov
arpl
sarb
aas
adc
or
sub
or
cmp
dec
es
adc
or
mov
xor
pop
sub
decl
xor
sub
es
es
adc
aaa
or
push
add
icebp
sbb
cmp
mov
sbb
add
sbb
xor
push
sbb
and
xor
adc
das
cli
inc
adc
das
add
and
or
mov
es
ljmp
clc
sub
add
daa
fidivrs
adc
jns
cmp
sbb
sub
shlb
push
adc
bound
push
push
push
cmp
sbb
or
add
sub
hlt
push
cld
dec
sbb
and
mov
sub
sbb
or
lcall
adc
add
or
insl
sbb
sub
xor
sub
push
or
imul
in
outsl
clc
scas
xchg
sub
add
and
sbb
and
add
mov
push
sbb
add
pop
and
cmp
or
daa
js
sub
xor
arpl
and
daa
cmp
jbe
ja
and
xor
jb
add
cmp
or
adc
cmp
aaa
add
mov
sbb
cmp
sbb
push
or
jmp
and
sub
xor
jae
or
adc
adc
sar
lcall
inc
and
push
xor
sbb
push
sbb
xor
lcall
pop
cmp
push
sub
sbb
add
das
adc
or
sbb
push
scas
mov
mov
add
add
or
sbb
or
cmp
mov
add
pop
inc
jg
or
adc
cmp
daa
push
jp
push
adc
sbb
out
add
adc
push
pop
mov
and
push
pop
fdivrs
push
dec
add
push
pop
push
add
push
dec
aas
push
sub
jno
jno
cmp
xor
and
or
test
push
or
mov
and
cmp
cld
inc
outsl
dec
imul
adc
sbb
sar
sbb
sub
push
add
push
xor
outsb
push
sub
lcall
pop
adc
sbb
or
xor
sbbb
pop
add
xor
adc
inc
sub
or
xor
sbb
xor
add
adc
adc
fldt
ljmp
xor
adc
adc
mov
sub
and
cmp
adc
loopne
sub
adc
xor
jmp
shll
fcompl
pop
push
pop
or
inc
test
xor
inc
incl
push
sub
and
or
gs
popa
lcall
data16
inc
jbe
jl
outsl
bound
fimuls
or
cmp
adc
adc
dec
pop
adc
outsl
lret
add
xor
call
xchg
pop
sbb
push
add
sub
add
pop
cmp
cmp
inc
es
xor
and
out
clc
stos
push
inc
add
jo
adc
or
pop
paddw
outsl
fsubrs
dec
sub
imul
xor
data16
add
inc
imul
outsb
cmp
xor
orb
cmp
sbb
mov
push
sbb
pop
ja
call
and
sbb
and
pop
jg
sbb
into
bound
sub
add
and
sub
add
sar
xchg
inc
daa
or
add
ja
adc
insl
push
and
mov
or
xor
xor
add
popa
prefetchw
push
pop
cmp
adc
and
mov
das
sub
push
sub
add
nopl
jbe
pop
pop
and
outsl
sub
xor
xor
jp
enter
xor
incb
cmp
adc
pushl
sbb
and
ja
and
xor
es
stos
mov
gs
out
cmp
and
inc
push
sahf
sub
adc
imul
popa
cmp
cmp
sbb
sub
cmp
or
and
daa
inc
dec
dec
sbb
ljmp
fimuls
testb
push
nop
inc
push
test
jns
cmp
push
xchg
or
and
adc
sub
sub
sub
call
add
and
inc
jl
pop
sbb
jmp
aas
add
jo
sub
sbb
sub
decl
nop
and
push
sbb
and
aas
push
nop
incl
aaa
push
pop
add
adc
or
and
adc
loopne
or
ds
pop
adc
fisubl
test
xor
and
pop
add
and
or
or
ss
mov
repnz
incl
pop
add
sub
adc
push
pop
sub
daa
ss
cmp
add
sub
or
cmp
adc
add
cmp
es
inc
jg
decl
add
sbb
sbb
sbb
dec
mov
push
nop
or
add
aaa
add
ljmp
add
cmp
xor
femms
adc
sub
sub
sbb
lahf
and
pop
sbb
and
sbb
xor
sub
pop
adc
or
jnp
bound
and
sbb
dec
adc
cmp
dec
or
adc
adc
or
sbb
push
pop
pop
cmc
inc
inc
add
addr16
jns
jbe
inc
lds
outsl
sbb
or
and
dec
xor
add
sbb
and
pushw
inc
sbb
in
push
add
or
xchg
adc
adc
mov
mov
pushf
stos
insb
push
mov
inc
jnp
das
add
lcall
cmp
das
adc
jle
push
inc
adcb
add
pushl
cmp
add
daa
pop
dec
adc
adc
mov
bound
sbb
sub
daa
xor
adc
cs
popa
arpl
fisttps
push
inc
push
outsb
jne
push
inc
daa
cmp
ds
sbb
ret
dec
push
or
inc
push
and
pop
xor
adc
sbb
sub
decl
pusha
xor
add
adc
push
add
aas
sbb
arpl
cmp
and
decl
sbb
cmp
or
es
sub
aad
mov
nop
or
inc
das
sar
dec
outsl
jg
sbb
sbb
xor
or
sub
cs
jns
es
push
dec
pop
pop
xor
dec
cmp
adc
add
push
sbb
fildll
cli
and
mov
out
into
cmpsl
popa
out
repnz
jae
scas
mov
ljmp
mov
fnstcw
mov
push
aam
sub
adc
xchg
ret
xor
insl
cs
push
stos
punpcklbw
push
call
and
movl
pusha
xchg
out
je
cld
push
jnp
lret
sahf
shrb
sti
dec
jb
jg
sub
bound
mov
insb
inc
test
xchg
push
inc
pop
mov
pusha
enter
inc
xor
jg
daa
inc
gs
jbe
push
inc
pop
and
imul
adcb
fwait
xchg
add
out
imul
insb
dec
ss
imul
cmp
pushf
frstor
leave
out
jae
mov
out
inc
adc
cmc
xchg
gs
fwait
xchg
lahf
dec
inc
gs
je
ja
pop
jg
stc
cmp
push
pop
insb
fstpt
dec
lahf
jp
mov
fistpll
imul
pop
into
xchg
pop
jle
adc
repz
jbe
mov
mov
sahf
popaw
push
repz
stc
xchg
arpl
and
inc
push
add
dec
dec
pop
or
ffreep
xchg
pusha
jno
incb
jbe
les
add
shlb
adc
sbb
aas
fwait
jle
inc
sub
jno
insl
push
dec
mov
xchg
inc
cmp
inc
jo
jns
imul
pop
bound
hlt
jl
sbb
push
pop
int3
test
push
xor
push
push
mov
enter
cld
xchg
xchg
xor
hlt
mov
inc
subl
jmp
lcall
in
dec
push
push
movsl
into
mov
pop
loope
fwait
pushl
lahf
into
inc
insl
inc
lahf
out
int3
pusha
jae
lret
and
xchg
aad
sbb
rorl
incl
push
cmp
das
lahf
imul
mov
mov
pop
add
mov
push
imul
loopne
decb
fs
outsb
gs
loop
imul
rcll
pop
outsl
push
pop
dec
xor
shll
shll
push
jb
cmp
inc
jg
push
inc
pop
inc
sub
iret
pop
push
gs
push
hlt
cmp
out
dec
inc
push
cmp
sahf
mov
pop
jb
jns
int
and
adc
jns
iret
mov
jnp
js
cs
pop
cmp
out
inc
outsb
add
sbb
jae
outsb
popa
jnp
push
repz
repz
iret
repz
pop
out
jl
inc
in
cmp
repz
leave
pop
repnz
repz
repz
out
je
mov
lods
dec
inc
dec
push
call
insb
or
cmpsl
dec
sbb
daa
aas
stc
leave
inc
add
fdivrs
sbb
inc
jle
sahf
inc
push
jecxz
loopne
xor
add
push
int
pop
cli
pop
and
fwait
xchg
popf
pop
mov
rcl
xor
loope
out
decl
aaa
mov
test
cmpb
je
out
adc
repnz
sbb
std
inc
loopne
and
ret
call
int
adc
pop
movsl
call
adc
xchg
ret
mov
cmp
hlt
lcall
push
jno
lret
scas
sbb
out
scas
rcrl
paddsw
jae
fst
popa
or
dec
add
jns
popf
lret
mov
mov
cmpsl
mov
push
and
popf
adc
mov
ffreep
dec
xchg
adc
or
jns
and
cmp
sub
cli
call
pop
push
xor
stos
pop
pop
andb
lcall
scas
sbb
sahf
fistl
jmp
sar
jno
cltd
movsb
shll
test
cmp
mov
adc
push
repz
mov
mov
or
jge
jmp
js
data16
xchg
push
xor
test
test
push
pop
mov
cltd
lock
pop
sub
mov
js
call
add
xor
imul
and
lods
call
std
and
in
fcomip
incl
jnp
test
pop
int3
or
lods
mov
aad
stos
jno
mov
sbb
jmp
mov
pop
cmp
clc
int
xorl
js
out
push
or
call
and
jo
lcall
jne
adc
sub
xchg
cmp
cmp
imul
lahf
es
mov
movsl
imul
pop
dec
xor
sti
add
sub
adc
and
fiaddl
mov
push
xor
mov
jbe
ljmp
mov
aaa
rcr
mov
dec
movsl
loop
dec
imul
fwait
repz
xchg
xor
daa
jmp
pop
jl
and
push
xchg
les
dec
in
aam
sbb
out
lods
cmp
je
movsl
call
cmp
es
imul
outsb
sbb
ljmp
loop
imul
mov
test
cmp
lds
daa
shll
cmp
add
loope
fstpl
jnp
dec
xchg
sarl
add
add
and
popa
jae
sar
out
push
fldcw
loopew
movb
lahf
jp
gs
pop
sbbb
push
jbe
push
arpl
gs
pop
cmp
pop
loopne
test
jg
pop
imul
mov
push
pushf
jno
ljmp
push
jb
jo
jno
pop
addl
pop
inc
jno
or
pop
ss
pushl
ret
jp
inc
or
sti
jp
dec
iret
arpl
push
icebp
dec
mov
dec
incl
jg
gs
addr16
jb
js
or
sub
inc
dec
pop
enter
dec
call
adc
pop
hlt
push
pop
inc
push
gs
inc
lock
cli
pusha
loop
mov
outsb
test
push
insb
sub
call
js
dec
je
pop
inc
push
leave
sub
mov
mov
push
sbb
jp
jae
pop
mov
mov
dec
ja
pop
jno
adc
bound
dec
add
jae
dec
insl
jbe
jae
dec
ds
rcrl
push
subb
push
add
je
jno
inc
loop
or
fs
jnp
cmpb
inc
inc
pop
clc
decl
push
sbb
data16
mov
js
inc
inc
sbb
push
popf
pop
mov
push
add
inc
es
jne
jbe
ja
pop
stos
inc
jle
inc
or
pop
insl
rcrb
cld
push
xchg
js
inc
xchg
aam
pushl
jns
dec
adc
dec
rolb
jl
addr16
cmpsl
jae
popa
dec
jae
jns
pop
or
sub
iret
push
in
pop
jae
add
add
filds
mov
jnp
dec
push
inc
pop
insl
sbb
push
push
adc
arpl
push
loope
out
jo
mov
js
out
jno
jg
pusha
jo
cs
add
daa
jno
push
adc
jg
jbe
pop
int
lock
mov
jp
jbe
pusha
cmp
push
push
icebp
decl
mov
in
cld
jne
dec
xchg
push
lea
push
mov
or
dec
je
inc
pop
je
xor
dec
outsb
mov
outsb
xorb
imul
pop
aaa
pop
out
leave
dec
stos
jo
push
mov
pop
push
mov
dec
push
aam
negb
push
fs
or
cmc
es
mov
dec
data16
jp
je
outsb
es
ljmp
js
pop
jp
imul
or
ja
jge
dec
clc
fists
pop
clc
incl
js
arpl
decb
jge
pop
pop
data16
sbb
pop
xchg
pop
mov
popa
nop
push
jg
out
subb
inc
jg
dec
sub
cmp
pop
push
ljmp
addr16
push
mov
dec
jae
inc
push
jnp
push
cs
sbb
add
cld
sub
inc
cmp
rclb
push
mov
aad
jp
jae
jp
push
adcb
dec
mov
jp
insb
cmp
mov
push
jp
jns,pn
inc
fdivrs
cli
inc
test
lret
pusha
mov
mov
add
insb
pop
pusha
ja,pn
shlb
stc
lds
pusha
lret
pop
flds
loopne
mov
push
mov
inc
outsl
jnp
pop
pop
dec
arpl
mov
xor
push
cwtl
push
mov
xchg
push
jg
and
adc
jle
jge
jl
dec
lcall
mov
mov
jb
popa
lods
push
jne
adc
jne
dec
xor
jg
add
pushl
inc
shrb
inc
gs
inc
jle
jg
mov
jl
outsl
cmpsb
xor
stc
outsl
out
fisttpl
pop
clc
push
dec
and
push
gs
jns
sub
pop
cmp
inc
sub
gs
mov
push
popa
fistl
test
inc
xor
push
or
pushl
out
fldl
scas
gs
push
lods
jg
js
pop
push
push
xor
je
jge
push
les
js
jl
movsl
test
test
jnp
jg
dec
dec
addr16
inc
sbb
jns
inc
idivl
or
push
ficomps
cld
jmp
jo
inc
push
addr16
popa
lods
jbe
dec
sbb
in
lret
je
outsb
ret
mov
jl
pop
popf
pop
mov
mov
xlat
jg
or
out
push
mov
arpl
decl
jnp
pop
pop
or
into
js
dec
xchg
jl
jg
jle
push
dec
enter
decl
dec
cmpsb
jbe
gs
push
outsl
dec
jae
cmp
push
cmp
or
movsb
pushl
inc
ret
push
movsb
dec
xchg
pop
outsb
ljmp
jnp
jno
adc
repnz
rorb
pop
in
popf
push
stos
addr16
ljmp
jp
sub
dec
sbb
sbb
clc
scas
stos
pop
aad
scas
jne
imul
cmp
bound
mov
inc
cmp
aas
push
out
jns
pop
ficoml
jle
ja
lcall
pop
jae
dec
xor
jb
jle
push
cld
inc
je
jg
test
jge
inc
stos
js
jge
inc
clc
push
gs
add
jne
cmc
mov
add
push
lcall
jne
ljmp
sub
ja
push
lds
fs
stos
jg
lcall
stos
pop
js
push
pop
imul
pop
pop
or
push
push
xlat
jbe
inc
imull
jb
jno
pushl
pop
push
push
inc
inc
inc
jge
adc
xor
sbb
push
out
movb
lahf
jae
jns
dec
mov
imul
fs
data16
leave
jmp
jae
jns
pop
fwait
bound
push
arpl
pop
outsb
xor
adc
pop
loope
std
fcomip
gs
bound
inc
pop
pop
push
jb
insb
cmp
sarb
dec
jmp
mov
subb
push
dec
and
pop
sub
daa
jo
insl
or
adc
pop
in
ja
jle
pop
popf
push
xchg
jb
movsb
xchg
push
and
pop
push
imul
jbe
mov
jbe
cs
inc
pop
or
pushl
data16
xor
imul
jp
add
add
ja
push
data16
mov
add
imul
push
loopne
out
push
mov
addr16
pop
or
decl
inc
pop
push
pop
cmp
jge
adc
jns
std
test
loope
inc
scas
dec
xchg
dec
orl
pop
outsb
enter
test
sbb
jg
jbe
jl
dec
and
dec
flds
jns
bound
fs
push
jle
pop
cmp
decl
into
push
ret
pop
fisubrs
je
bound
lock
call
pusha
pop
jle
dec
xor
push
push
enter
nop
push
add
or
inc
insb
jl
push
dec
addr16
mov
inc
xor
push
fnstsw
jp
pop
mov
mov
jp
push
decl
or
jg
dec
adc
ja
jnp
insl
les
lea
jno
js
inc
pop
jl
subb
pusha
jns
push
pop
pop
push
aaa
xor
ljmp
push
mov
arpl
bound
lds
jp
pusha
adc
inc
loopne
push
jmp
inc
fwait
jp
pop
push
mov
pop
adc
push
cs
jecxz
cld
push
fdivrp
fisttps
push
xchg
jne
outsb
jl
jo
jge
dec
push
xor
dec
add
add
jb
popa
std
push
xchg
pop
xchg
je
dec
js
mov
pop
add
jne
insb
xor
inc
or
std
imul
jg
dec
jg
insl
lods
jl
jbe
push
adc
push
dec
aaa
pop
and
push
arpl
jg
mov
test
mov
push
dec
es
ljmp
fcomps
imul
pop
jmp
dec
mov
imul
ljmp
pop
dec
adc
push
out
movsb
push
mov
stos
das
clc
scas
test
inc
pop
inc
push
and
inc
push
xor
jno
idiv
xchg
lcall
insl
fisttpl
jnp
jb
dec
dec
jbe
jae
dec
bound
mov
add
icebp
fs
jno
lcall
inc
lock
lea
push
pop
pop
inc
ljmp
push
mov
jle
pop
mov
rcrb
subps
inc
push
cs
add
jbe
inc
add
mov
or
jno
cmp
inc
aad
cmpl
lcall
jp
inc
repnz
hlt
jo
jp
dec
xchg
arpl
inc
sbb
cmp
or
divb
jmp
arpl
push
ss
rorl
dec
aam
test
pusha
sbb
xor
dec
bound
nop
pop
mov
lcall
ljmp
fs
data16
mov
jle
push
mov
jo
inc
push
out
cli
lock
mov
jb
pop
cmc
push
jmp
jge
push
ljmp
jg
dec
xchg
jbe
jp
insb
out
push
bound
inc
and
jp
inc
xchg
mov
xlat
inc
loop
push
arpl
insl
test
outsb
cltd
pop
jb
or
add
jp
lcall
insl
frstor
pop
xchg
push
mov
jg
pop
orb
add
push
sub
jno
xor
ds
pop
rcrl
xorb
hlt
mov
pop
fdivr
into
sub
stos
mov
inc
push
xchg
inc
stos
mov
dec
test
jns
pop
adc
cmp
out
or
inc
icebp
jl
cmp
and
js
pop
mov
inc
cmp
mov
push
and
popa
xchg
jge
push
pushl
loop
aam
pop
adc
jne
inc
bound
pop
jne
pop
push
decl
mov
dec
loope
xlat
pop
and
sub
dec
mov
xorb
les
mov
pop
sbb
dec
cmp
out
aam
pop
push
mov
dec
mov
push
lahf
inc
xor
mov
or
decl
js
jge
inc
mov
push
sbbl
or
decl
dec
inc
dec
bound
push
sbb
fs
jae
inc
xchg
data16
or
jg
pop
cmp
std
push
int
lcall
jecxz
incl
pop
orb
inc
mov
fwait
jmp
add
jnp
dec
fisubl
jg
stos
jle
lds
dec
adc
jo
jp
jg
add
pop
cltd
ja
dec
jmp
jno
inc
lret
push
test
ja
insb
and
pop
rcl
icebp
js
jp
jo
mov
test
ljmp
dec
lcall
push
mov
mov
gs
movsl
call
inc
bound
jl
inc
inc
dec
push
push
daa
push
daa
bound
jle
pusha
dec
ret
adc
jb
inc
orb
adc
jle
mov
mov
out
jo
push
out
fcomip
call
jle
ja
pop
mov
inc
mov
jns
jne
arpl
mov
dec
adc
inc
dec
or
ja
dec
mov
incl
jb
push
dec
push
cwtl
insl
jbe
sub
mov
lock
outsb
dec
push
mov
fwait
sub
adc
xchg
inc
test
mov
jl
cs
les
inc
xor
pop
push
std
ljmp
push
xchg
sub
push
jne
jbe
ja
pop
mov
jmp
inc
sub
jle
insl
ret
pop
lret
inc
out
push
lcall
jae
jns
dec
xor
push
xor
pop
push
xor
inc
mov
pusha
pushaw
jp
jmp
jae
jns
pop
inc
bound
add
push
add
pop
sub
jae
fs
pop
pop
je
pushl
mov
jnp,pt
dec
ss
cmp
push
or
gs
jge
arpl
push
frstor
fistps
sub
jo
sbb
jnp
dec
sub
insl
cmc
pop
shlb
pusha
push
dec
pop
add
je
jge
jb
pop
or
lret
jg
jle
jb
fs
or
jnp
ljmp
dec
jmp
sbb
jo
insl
push
aaa
push
js
dec
enter
xchg
mov
pop
push
inc
mov
push
jnp
sub
jbe
sbb
add
inc
xchg
ret
mov
inc
adc
fwait
jge
pop
iret
dec
ret
pop
ljmp
push
adc
mov
inc
outsb
imul
add
inc
out
push
out
out
imul
pushf
jle
inc
xchg
pop
test
je
jg
dec
jae
or
inc
jge
lcall
callw
cmp
jno
jnp
pop
xchg
pusha
lcall
pop
outsb
pop
xor
lcall
jo
or
pop
xor
jns
mov
mov
push
insl
pop
decl
nop
and
outsl
sub
ja
pop
dec
insl
ljmp
decb
jo
jnp
dec
dec
mov
pop
push
je
jae
push
sbb
je
jge
je
pop
aad
dec
push
ss
inc
and
js
je
insl
sarl
rcrb
out
jns
sub
jne
jo
dec
lods
ljmp
pop
cmp
pop
jne
inc
cmc
decb
pop
ds
push
insl
sub
dec
lds
and
cli
outsl
ret
ja
insl
ret
dec
ret
popa
std
jg
cmpsb
insb
lcall
inc
mov
cwtl
dec
cmpsb
push
mov
jg
jl
insl
pop
fs
push
jle
dec
pusha
gs
jp
jns
js
push
cmp
dec
cmp
jbe
cmp
dec
cmp
jo
dec
pop
push
sarb
jo
inc
imul
dec
ljmp
call
push
mov
ljmp
dec
lcall
imul
pop
lods
aaa
inc
pop
loope
lret
jne
inc
sbb
mov
addr16
push
mov
inc
xchg
jl
push
pusha
pusha
inc
jge
jbe
inc
pop
inc
sti
popa
test
jae
cli
mov
push
mov
jo
jns
xchg
pop
inc
adc
ljmp
or
cmp
dec
cwtl
jl
out
cli
jmp
jae
jbe
dec
jbe
add
push
fldcw
jge
dec
loop
cmc
pop
call
test
es
jnp
dec
mov
outsb
mov
push
jecxz
sti
adc
loope
rcrl
jmp
push
pop
bound
push
test
push
fs
push
lcall
inc
jle
dec
shlb
jp
jns
js
adc
sub
decl
dec
or
fs
push
jmp
jae
cmp
jns
jae
inc
sub
jmp
jmp
rolb
dec
mov
insl
stos
outsl
jns
add
inc
sar
jmp
xchg
pop
inc
or
mov
pop
inc
push
pop
je
push
cld
cmp
jg
or
jle
dec
mov
mov
push
aas
popa
mov
push
outsb
arpl
jae
inc
or
insb
loope
or
pusha
aam
ret
inc
jge
xor
pop
jmp
pop
push
test
jns
divl
or
pop
test
jnp
lock
adc
cs
out
push
dec
out
jns
mov
call
dec
ret
push
pop
mov
adc
jmp
outsl
push
fnstsw
inc
or
jns
addr16
js
arpl
jno
mov
outsl
hlt
dec
je
push
hlt
inc
out
leave
dec
add
hlt
fwait
push
lods
popa
ss
push
mov
jg
pop
gs
dec
adc
jg
jl
jge
mov
pop
dec
cmp
arpl
push
fisttps
pop
pushf
jbe
dec
xchg
push
stos
jl
loope
xchg
sub
outsb
and
dec
das
mov
jge
outsl
aad
in
mov
dec
xchg
dec
mov
mov
gs
incl
outsl
call
bound
jo
inc
cwtl
dec
pop
addr16
outsl
dec
hlt
filds
inc
aas
pop
sub
jns
dec
inc
add
data16
jp
and
sub
jl
jnp
pop
stc
push
jmp
push
jae
js
push
sahf
push
insb
pushl
inc
push
dec
or
jne
arpl
cltd
jns
jno
dec
sbb
cmp
cmc
clc
fcomip
pop
mov
je
dec
dec
pop
outsb
or
push
ljmp
incl
ljmp
ss
sub
fildll
ljmp
lods
cli
lcall
aam
pop
sahf
inc
mov
push
pop
pop
rsqrtps
push
incl
pop
movb
into
ja
je
jne
pop
xchg
inc
xchg
inc
inc
js
imul
jmp
pop
push
adc
pop
je,pt
jle
dec
lret
addr16
push
outsb
jp
popa
shlb
jne
fadd
clc
addr16
fwait
jl
pop
jge
cmpsb
inc
pop
push
mov
shrb
jno
rclb
pop
lcall
dec
inc
inc
pop
outsl
adc
push
packuswb
clc
out
push
cmp
incl
jo
inc
sub
push
push
arpl
jle
push
mov
call
jbe
jno
push
or
jbe
jg
jbe
pop
lcall
decl
jp
jbe
pusha
negl
push
dec
xchg
jns
jno
dec
mov
stos
dec
lods
push
jg
mov
mov
movsl
push
outsb
adc
jg
decl
push
leave
push
jne
jb
push
scas
fisttpl
inc
stos
pop
push
xor
jae
push
int3
inc
cli
push
mov
dec
dec
push
mov
push
pop
jb
inc
pop
decl
mov
pop
pop
add
inc
testb
push
pop
imulb
mov
push
hlt
add
pop
add
cli
call
add
rorl
inc
ret
jl
addr16
gs
bound
jae
push
subb
aad
sbb
push
inc
push
dec
incl
add
imul
adc
scas
xor
push
je
dec
jmp
pop
int
mov
lea
jmp
pop
loopne
inc
pop
ljmp
aas
pop
add
jae
js
mov
mov
outsb
pop
mov
inc
mov
jae
jp
jae
daa
jbe
adc
jb
call
cld
xor
fldt
fidivrl
jno
dec
xchg
cltd
dec
test
push
pop
xchg
sub
imul
scas
test
lock
pop
ds
push
jne
ljmp
in
push
push
mov
jbe
push
loopne
fs
add
sub
pop
fildl
cmp
lock
xchg
insb
movsb
push
pop
mov
push
pop
jne
inc
adc
jno
jb
jae
imul
inc
nop
inc
jmp
in
jb
pusha
aad
mov
sub
jg
mov
sub
add
pop
iret
inc
out
mov
jle
dec
jge
outsl
mov
incl
outsl
xchg
dec
mov
nop
pop
sub
gs
jns
outsl
lods
pop
xchg
push
mov
jg
pusha
mov
and
pop
or
jg
ljmp
ja
imul
jp
dec
movsl
jb
pop
fwait
inc
ja
jl
dec
adc
ljmp
fstps
jo
ja
push
lods
pop
xchg
jns
jo
pop
jnp
jg
dec
inc
insb
int
test
dec
pop
jl
jo
pushfw
pop
inc
imul
mov
push
inc
fcompl
push
loopne
mov
inc
push
jle
insb
imul
jo
inc
adc
jmp
jp
gs
jge
addr16
pop
fadds
jne
push
adcb
mov
test
and
stos
jle
dec
fdivrl
pop
pop
pop
imul
xor
push
clc
jno
jg
jmp
jne
jbe
ja
jp
pop
inc
cmp
jle
insl
pop
pop
jg
push
add
pop
ret
jae
jns
dec
in
mov
jg
loopne
inc
jmp
or
arpl
insb
jns
dec
incl
xor
bound
pop
das
push
lret
outsb
lcall
lcall
incb
pop
push
mov
imul
xor
cmp
imul
stos
dec
std
jbe
jge
dec
dec
pop
mov
incb
xchg
sbb
jbe
jg
push
outsb
pop
or
ds
incl
clc
add
jno
sbb
push
out
xchg
inc
cmpsl
ja
inc
push
aad
jle
mov
jle
mov
push
push
adc
push
data16
call
incl
inc
lods
scas
js
addr16
js
bound
inc
pop
jo
push
cmp
push
push
arpl
inc
idivl
pop
cmpsl
jp
inc
add
insb
test
jg
dec
cld
pop
mov
push
mov
jo,pt
lcall
jae
jb
pop
jmp
sti
jl
outsl
mov
jns
jl
or
inc
or
add
into
cltd
dec
push
insl
fstpl
inc
dec
dec
push
jo
jb
in
jg
insl
mov
push
cmpsl
outsb
xchg
dec
add
push
lock
into
fs
jne
call
sti
pop
cld
insb
or
inc
icebp
dec
fsubs
pop
test
insl
insl
lcall
scas
loope
lahf
inc
cmp
in
imul
or
movb
ljmp
pop
cwtl
push
inc
jge
outsb
pop
notb
jge
jae
jp
push
lds
jg
dec
jae
jg
lock
jne
inc
decb
sub
push
mov
sbb
into
pop
sbb
pop
adc
mov
push
popa
adc
xlat
jo
inc
frstor
jp
gs
sub
cli
mov
sub
insb
lods
dec
outsb
out
xor
add
dec
insb
push
pusha
sbb
jmp
pop
stos
push
push
imul
dec
or
js
jnp
inc
lds
into
push
repnz
out
loopne
jmp
push
fsubs
jns
pop
jns
jae
nop
hlt
incl
pop
pop
add
jbe
insl
outsl
or
call
imul
out
rorb
dec
sbb
mov
inc
ds
pop
inc
push
push
bound
pop
dec
pop
inc
and
outsl
mov
push
push
aas
fsubr
jp
rclb
jg
or
mov
push
in
jns
jb
inc
insb
inc
incl
adc
jg
js
pop
loop
fdivrl
jbe
enter
mov
ljmp
inc
pushf
jb
jge
imul
js
inc
ja
jle
inc
add
jle
inc
das
pop
and
sub
incb
jo
incl
fs
jno
inc
insl
fs
push
ljmp
cmp
xor
push
sbb
xchg
xor
push
jle
dec
xlat
pop
clc
inc
les
cmp
ljmp
push
lret
pop
into
push
leave
push
ficoml
inc
cld
mov
jb
jb
xchg
pop
xchg
inc
cmp
inc
jb
popa
dec
push
clc
orb
jae
push
inc
dec
xchg
adc
je
push
fdivs
jo
pop
or
dec
push
and
cmp
inc
xchg
pop
outsl
push
push
push
sub
stc
or
je
ds
add
add
aam
push
pushf
stos
mov
push
jge
xlat
into
inc
inc
pop
pop
aas
inc
push
test
mov
mov
inc
push
sub
out
inc
inc
aaa
xchg
filds
push
aaa
add
xor
push
pushl
aam
add
or
or
add
dec
or
divb
or
jne
sbb
pusha
lcall
add
adc
adc
add
push
cmp
incl
or
add
xor
push
jp
inc
and
or
ds
pop
daa
and
push
add
cmp
sbb
add
or
add
imul
or
sbb
xor
jo
xor
jmp
add
and
cmp
sbb
das
or
push
jp,pn
push
adc
unpcklps
sbb
lcall
cld
add
xor
cmp
adc
add
and
xor
cmp
xor
or
xor
lcall
pop
push
xor
out
or
es
or
xor
pusha
cld
add
and
xor
sar
fstpt
movaps
pop
rclb
cmp
sub
sbb
cmp
or
and
cmp
lcall
pop
es
sub
push
pop
add
and
pop
or
push
cmc
subb
cld
or
sbb
sbb
out
and
mov
insb
fbstp
iret
pop
aas
and
daa
and
mov
cmpsl
inc
add
std
das
cmp
and
adc
cmp
dec
adc
xor
cmp
idivb
and
or
adc
adc
xor
adc
icebp
push
fsubs
fwait
loopne
lds
mov
sbb
jb
xchg
add
push
push
sbb
and
into
adc
ljmp
rorl
add
dec
xor
mov
adc
sbb
xor
sbb
jnp
popa
jo
push
or
push
xor
and
push
fmull
insl
dec
popa
jo
jno
and
call
dec
insl
jo
pop
inc
jo
push
pop
inc
push
inc
insl
addr16
mov
inc
mov
in
jo
sti
pushl
dec
arpl
inc
dec
dec
inc
dec
push
jne
jp
fs
push
dec
je
imul
mov
popa
inc
je
ja
insb
push
popa
jbe
push
push
push
mov
js
dec
test
or
jo
popa
add
and
push
add
jns
adc
or
out
sahf
out
sbb
sbb
sahf
out
sahf
pop
and
and
sub
sahf
out
sub
out
sahf
out
xor
aas
pop
sahf
out
sahf
inc
inc
push
push
push
push
add
sarl
je
je
lcall
cld
add
repz
adc
adc
iret
repz
push
sub
iret
repz
xor
cmp
repz
repz
dec
dec
push
push
iret
repz
pop
pop
fs
insb
jo
iret
repz
js
orb
movhps
dec
adcb
xchg
ja
lock
loopne
adc
popl
dec
sub
out
push
or
out
arpl
das
insl
xchg
dec
add
imul
adc
pop
add
std
add
cli
testl
push
sbb
or
add
int
push
imul
movsb
push
and
sti
add
mov
push
or
xchg
scas
pop
out
mov
push
sub
push
data16
jae
push
ja
jb
add
arpl
jb
mov
pop
jecxz
insb
xor
inc
arpl
jo
insl
push
outsb
cmpsl
aaa
jbe
fistpl
subb
je
outsl
aaa
mov
imul
insb
neg
sbb
mull
push
bound
das
push
xlat
scas
cmp
imul
jne
insl
xlat
loopne
das
inc
mov
loopne
mov
data16
addr16
mov
mov
inc
jg
fidivs
add
je
jns
sbb
inc
fsubp
jns
inc
inc
inc
insl
insb
add
push
rcr
lock
push
jp
add
out
cmp
loope
pop
push
arpl
addr16
cmp
outsl
push
jae
popa
lock
sub
mov
cmp
or
pop
arpl
ficomps
cli
dec
push
popa
xchg
cmp
push
adc
or
dec
ja
rcll
fimuls
je
insl
aaa
adc
jnp
dec
xchg
pop
das
push
xlat
or
sbb
xchg
pop
das
and
cs
pop
inc
arpl
cmpsl
and
mov
ja
popf
mov
fs
sti
outsl
fwait
add
xchg
pop
xor
leave
fs
enter
or
inc
add
push
cmp
jb
add
and
mov
pxor
jae
jb
fsubrl
and
push
adcb
push
xchg
sbb
push
lods
mov
push
inc
arpl
push
pmaddwd
ret
pop
sub
arpl
add
pop
inc
jnp
fstpt
push
mov
cmp
bt
in
add
inc
dec
out
inc
cmovo
lret
push
aaa
add
add
add
imul
mov
push
jbe
rolb
jp
xor
pop
dec
push
push
sbb
test
push
out
incl
pusha
fstpt
bound
push
jns
cmpsl
pop
sbb
out
or
or
outsb
leave
in
in
or
or
or
daa
adc
jmp
pop
inc
fucomi
jbe
inc
push
addr16
das
push
nop
outsb
mov
mov
insl
push
and
iret
repz
jb
pop
orb
or
jb
jns
or
xchg
sub
cmp
ss
mov
pop
addr16
inc
lds
adc
fwait
push
or
adc
movsb
adc
mov
leave
add
aad
stos
and
push
enter
cld
inc
rcrb
add
add
movsb
add
in
leave
pop
lods
pusha
cmpb
cmpsb
fisttps
mov
jl
lahf
loopne
inc
jle
test
shll
push
mov
mov
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
add
and
scas
out
lods
add
sbb
mulb
adc
add
pushf
imulb
push
lock
js
scas
flds
fdivs
pop
movups
shl
jbe
pusha
sub
xorb
icebp
daa
add
jo
push
jo
movsb
jle
push
in
cld
ret
lahf
add
jo
inc
int
jns
inc
push
or
or
repz
adc
imul
adc
mov
pushf
sbb
sbb
add
cmp
sarl
push
mov
iret
repz
and
mov
repz
xrelease
iret
repz
push
cld
push
incl
push
icebp
add
or
orb
xchg
mov
subb
dec
aam
pop
aas
sbb
cmp
add
ret
push
sarb
lods
movsb
pushf
iret
repz
out
test
insb
push
fs
pop
pop
push
repz
repz
dec
dec
inc
inc
ja
cmp
cmp
sbb
push
iret
sarl
add
shl
fdivrs
repz
rol
mov
mov
add
xchg
push
in
pop
fistl
js
jg
daa
aam
ja
ja
fbld
jb
pop
xchg
push
mov
repz
add
dec
insl
add
jns
out
push
pop
ja
mov
lahf
out
in
dec
das
push
dec
insb
mov
nop
inc
mov
lods
test
out
mov
mov
aas
jp
mov
outsb
addr16
inc
aas
outsl
jne
sub
mov
pop
jb
dec
gs
cmp
add
pop
or
xchg
push
add
mov
dec
add
xchg
hlt
add
orb
push
xor
or
lahf
out
and
add
jae
testb
adc
fstp
rolb
and
add
ret
mov
daa
das
sbbl
push
add
ja
add
dec
outsb
cmpsl
sub
addb
pop
jbe
popa
subb
pusha
pop
out
pusha
pusha
cwtl
mov
jle
jbe
mov
insl
pop
pop
out
aas
add
in
lods
frstor
pop
andl
push
andl
or
push
add
sbbl
cmp
test
xchg
fcomps
push
out
pop
out
sbbl
add
sbbl
add
out
outsb
add
xchg
jnp
data16
jmp
push
mov
clc
add
push
int3
ljmp
stc
cwtl
mov
ror
pushf
pushf
pushf
jl
shl
clc
sbbl
fsubrl
in
dec
cmc
iret
adc
addb
pop
aam
or
jo
sti
rcrl
and
jo
pop
push
xlat
pop
jle
xchg
mul
pop
jg
cmp
push
out
jnp
mov
pop
inc
ja
push
inc
jle
loopne
adc
and
push
sbb
xchg
push
mov
add
cs
inc
mov
outsl
das
jns
scas
add
xor
add
scas
adc
pop
dec
push
pop
popa
xchg
pushl
sub
mov
pop
or
ja
mov
fwait
add
das
cmp
in
xchg
sub
out
jle
addr16
pop
mov
jmp
aas
movsl
icebp
lea
das
pop
nop
pop
pop
sahf
nop
mov
mov
mov
faddp
das
pop
mulb
sarl
movsl
pop
rorl
sub
shrl
mov
rcrl
mov
das
sarl
pop
sarl
shrd
das
rorl
dec
xor
das
shlb
cwtl
lea
outsl
shl
cwtl
mov
roll
mov
shrl
subl
das
cmpl
add
scas
notb
sarl
filds
or
data16
out
out
or
add
jmp
xlat
xor
or
test
in
je
out
mov
add
mov
fadds
jb
mov
rclb
and
loopne
clc
and
jb
cld
jb
inc
jb
add
jb
pop
loopne
clc
ret
leave
jae
cld
add
aas
insl
or
adc
lret
rorl
mov
push
fdiv
lret
add
fwait
int
add
add
adc
push
add
mov
insb
add
add
add
dec
mov
cltd
int
inc
add
jle
or
push
pop
fs
es
int3
add
out
adc
test
jnp
push
cwtd
int3
sbb
cmp
xor
xor
inc
push
xor
cltd
int3
insb
incl
sub
cwtd
int3
xchg
inc
jns
cmpsl
push
xor
int3
sub
xchg
jge
push
dec
aad
pushw
cltd
cmp
pop
ja
std
push
xor
repz
repz
xor
xor
repz
xor
xor
xor
cmp
repz
xor
xor
in
cmp
repz
xor
xchg
adc
out
es
xor
mov
mov
add
data16
out
data16
sahf
out
data16
pushf
sub
out
mov
xor
xor
int3
push
into
repz
incl
data16
sahf
jbe
dec
test
add
into
mov
push
popw
cmp
repz
es
push
cs
repz
negb
jns
cs
cltd
cmp
ja
xor
pop
das
decl
push
sub
pop
adc
add
loopew
xchg
xor
scas
inc
movsb
bound
mov
pcmpgtd
rol
cmp
mov
push
in
cmp
int3
int3
int3
add
iret
repz
int3
mov
int3
int3
int3
lcall
call
int3
int3
pop
ja
pop
sbb
es
cmp
repz
push
cmp
repz
dec
repz
mov
cltd
int3
cmp
repz
int3
int3
icebp
cmp
repz
decb
mov
data16
push
int
mov
and
movsl
add
add
xchg
xchg
add
insb
ss
lret
add
add
stos
int3
data16
ljmp
push
and
jbe
mov
ss
add
cmp
rolb
pop
in
cmp
icebp
mov
inc
lcall
xor
mov
nop
out
pop
movsb
mov
pop
std
mov
push
mov
push
fidivrl
arpl
inc
mov
fneni(8087
inc
add
fildl
sarl
call
imulb
ret
icebp
jg
or
sarl
aas
pop
ss
outsb
jae
insl
mov
ret
mov
jns
or
push
mov
add
cmp
mov
fisttpl
add
inc
sbb
or
push
adc
mov
add
pop
lret
add
mov
jg
iret
mov
sbbl
mov
ds
ret
sbb
rcl
fnsave
and
mov
fldt
out
or
icebp
jg
loop
add
push
aas
subl
adc
imul
adc
icebp
jg
cmpl
add
pop
inc
pop
jbe
add
push
cmpl
inc
cmc
inc
sbb
inc
loop
aas
mov
pop
mov
add
mov
push
add
mov
dec
jb,pn
push
pop
push
xor
mulb
mov
in
add
jo
pop
mov
cltd
inc
dec
or
addb
mov
adc
scas
mov
mov
hlt
add
xchg
add
and
pop
hlt
xor
aam
nop
add
inc
jg
icebp
add
insb
lds
add
mov
add
add
cmpl
push
add
dec
jns
test
sub
shll
loope
pop
push
loop
jae
pop
push
sbb
bound
daa
cmpl
lcall
fs
jg
loopne
or
loopne
jno
fsubrl
loopne
fs
daa
jbe
cmp
push
xchg
xor
dec
inc
xchg
xor
pop
push
or
popa
mov
xor
addr16
fistpl
mov
push
bound
mov
dec
lods
pop
or
and
loopne
insl
add
sbb
popa
sub
push
cmp
bound
fcoml
mov
popa
loope
mov
and
xorl
ja
pusha
fs
outsb
loope
mov
pop
pop
jo
imul
sbb
or
imul
loopne
outsb
imul
loope
loopne
or
and
rcrl
fidivrs
icebp
roll
xorb
daa
shl
outsb
add
and
iret
sbb
rorw
insl
jp
fisubl
repnz
or
rorb
and
ret
pop
mov
add
or
rcrl
xlat
pop
adc
inc
repnz
dec
mov
outsb
lea
push
lock
out
or
icebp
or
mov
popa
sbb
jae
add
pop
xrelease
ret
push
fldcw
shll
orb
xchg
or
push
je
mov
frstor
and
rol
mov
add
xor
sbb
pusha
int
scas
sbb
add
pop
imul
pop
add
pop
int
pop
mov
jae
into
sbb
push
bound
adc
popa
pop
pop
lds
jnp
xchg
imul
rorl
in
outsb
add
int3
loop
andl
pop
pop
pop
push
clc
or
pop
sbb
pop
or
xor
outsl
in
or
or
xorb
push
add
adc
test
mov
dec
add
adc
mov
les
jl
pop
or
pop
outsb
push
push
mov
xor
pop
and
push
mov
loopne
push
pop
aas
mov
scas
push
mov
inc
cmp
mov
pop
mov
pop
fistpl
repnz
mov
mov
ja
pop
mov
stc
adc
push
cmc
mov
add
dec
xchg
das
and
insb
in
add
add
mov
push
inc
push
sahf
fstps
clc
add
addb
mov
imul
xchg
fcmovnb
aas
in
push
nop
nop
lock
add
sbb
and
insb
testb
call
sbb
or
mov
xor
push
cmp
jbe
test
ss
sbb
outsb
pop
sbb
dec
repz
add
pop
or
and
fimuls
ja
inc
xor
and
or
jae
fdivrs
inc
dec
add
and
cmp
fnstenv
and
fisubl
dec
popl
and
inc
dec
mov
in
mov
and
jb
push
loopne
cmpsl
inc
xchg
sbb
inc
pop
js
je
sub
mov
negl
push
enter
xchg
pop
pop
jnp
popa
enter
dec
je
pop
sti
es
aaa
add
es
imul
inc
add
cmp
gs
push
add
inc
cs
mov
insb
aaa
add
fs
push
scas
cmp
sub
jae
push
mov
xor
sub
loopne
cmpsb
ss
dec
push
sub
dec
in
ficompl
inc
fnstenv
mov
loop
insl
sbb
add
stc
mov
das
inc
add
jbe
xor
xor
jb
out
mov
sbb
cmpsb
pop
mov
and
pusha
adc
rcr
adc
add
xor
jo
jae
push
gs
or
jp
int
dec
dec
and
in
pcmpeqb
xchg
out
adc
xor
sub
add
xchg
or
xor
add
dec
pop
adc
fstps
rolb
aaa
cmp
pop
sahf
push
inc
xchg
cmp
add
jl
cmp
inc
cmove
mov
loop
mov
lds
or
add
mov
scas
push
es
sbb
jne
jae
fidivrs
sbb
inc
xchg
arpl
jb
scas
ficomps
mov
aad
adc
outsb
cmpsb
insl
dec
jge
mov
inc
popa
xchg
fildll
repnz
mov
rcrl
cwtl
call
outsb
add
inc
jo
and
je
pop
jb
arpl
mov
and
inc
sub
jnp
subl
loop
xor
push
pop
mov
xor
jnp
scas
ss
push
push
jle
mov
inc
jle
push
dec
add
push
push
ja
mov
subl
cmp
or
addr16
mov
adc
bound
lret
mov
adc
or
bound
in
jnp
stos
or
pcmpeqw
in
ret
sub
sub
das
jmp
jecxz
scas
xchg
adc
lret
pop
movsb
fldpi
dec
repnz
mov
fidivrs
inc
stos
push
scas
loopne
push
scas
fs
inc
rorl
sub
pop
ja
ja
jmp
pusha
inc
mov
je
ret
aas
shr
mov
fldt
pop
fs
adc
mov
fiadds
mov
push
das
sub
fcomi
mov
sub
mov
xchg
and
adc
add
pop
xchg
scas
dec
jae
mov
cmp
jmp
ret
and
out
jae
out
outsb
mov
jns
jle
jb
loope
arpl
ret
sub
mov
sub
mov
fwait
push
pop
lods
jp
adc
sbb
mov
repnz
out
mov
insb
andl
subb
jb
jmp
lds
je
xor
add
addb
sbbl
fimull
xchg
adc
cmp
loop
iret
pop
dec
js
pop
scas
or
jmp
mov
lds
outsl
and
or
cmp
push
addr16
insl
push
insl
add
fisubs
xchg
jbe
sti
mov
adc
dec
jo
jg
mov
jb
push
fisubrs
gs
fstpt
jae
pop
pusha
inc
xor
inc
push
lods
cmpl
cmp
imul
je
insb
jb
addb
out
gs
sarl
jnp
psrad
xchg
pop
cs
lret
inc
inc
out
jbe
or
aas
sub
add
test
jae
add
inc
sti
inc
daa
pop
or
sahf
sbb
push
adc
jmp
sub
sub
fwait
pusha
ret
xchg
adc
mov
push
push
sbb
test
inc
filds
insb
ja
insb
push
nop
imul
jns,pn
or
cmpsl
sbb
or
addr16
pop
add
cmp
xchg
sti
mov
dec
icebp
add
jbe
push
dec
pop
add
mov
sub
lods
out
stos
sub
and
mov
iret
jbe
push
test
xlat
call
add
jg
jne
nop
and
pop
add
rcrl
mov
jae
adc
mov
and
sbbb
movsb
cli
or
rcrb
mov
sahf
ja
inc
pop
mov
mov
jmp
jo
adc
inc
pop
es
fists
adc
push
out
inc
rcl
andb
xchg
mov
push
arpl
mov
pop
sbb
mov
imull
bound
subl
xor
out
push
inc
pop
pop
shll
sbb
mov
sti
call
popa
scas
lahf
insl
stos
ret
ja
popa
xchg
bound
add
adcb
xor
push
pop
xorl
ja
or
imul
jno
add
mov
jg
ret
insb
das
pop
sbb
lcall
add
dec
or
mov
add
push
push
push
jbe
or
roll
ret
or
pop
jae
fcomps
shlb
pop
xchg
xchg
sub
xchg
repz
sub
inc
sbb
scas
insl
cmpsl
push
fwait
mov
insb
and
or
mov
pop
fistl
scas
aas
pop
jno
sbb
sbb
out
and
push
gs
lea
xor
and
add
shrl
adc
xchg
inc
outsl
bound
aam
sbb
stos
or
scas
inc
shll
add
rorl
push
add
ficoml
pop
loop
mov
out
pop
lods
cmp
pop
push
add
sbb
inc
cmp
and
inc
dec
and
mov
jle
pop
mov
loopne
movb
sbb
jae
or
push
push
push
inc
stc
mov
inc
dec
inc
es
imul
outsl
dec
push
inc
jmp
imul
dec
xorl
inc
imul
or
push
mov
imul
push
gs
mov
fadds
arpl
gs
pop
scas
xor
xchg
sbb
and
insb
test
popa
push
pop
sub
mov
push
mov
mov
imul
insl
mov
mov
adcl
adc
fisttps
jae
inc
inc
push
dec
adc
adc
lock
loopne
mov
imul
push
imul
xchg
outsl
lret
push
fmull
push
dec
mov
adc
ffree
fisubl
rcrb
jle
negb
movsb
push
fldl
test
mov
xchg
rcrb
pop
xor
push
sbb
dec
gs
adc
mov
and
inc
movsl
in
mov
push
jmp
lds
mov
jne
dec
and
dec
fisttpl
or
add
push
jne
jns
cmpl
add
xchg
and
push
sub
nop
xchg
scas
push
insl
add
mov
or
add
pusha
jg
mov
cmp
ret
fldenv
or
pop
mov
hlt
mov
jne
rorl
mov
enter
and
mov
cmp
and
shlb
inc
lsl
add
orl
mov
setnp
inc
ret
mov
in
imul
mov
jb
dec
add
xchg
int3
dec
lods
cltd
jmp
test
imul
xchg
jae
cmpsl
adc
sbb
popa
clc
jo
and
xor
jl
pusha
es
stos
inc
jae
shl
cmp
int
push
in
ljmp
and
jmp
ret
jns
stos
mov
icebp
push
xor
or
outsb
sub
cmpsl
roll
jb
push
mov
lock
jo
fcmovnbe
jb
push
pop
inc
data16
or
add
sub
dec
jo
sbb
sub
jbe
pop
jne
repz
jne
push
pop
pop
arpl
jge
add
pop
ja
lret
jbe
out
pushf
js
xor
je
outsb
jb
jne
jo
sbb
push
loop
popa
jno
andl
dec
arpl
out
insl
fsubrp
movsl
pusha
mov
push
int3
pop
loopne
leave
loope
push
fwait
es
insb
cmpl
mov
add
push
fs
cmp
inc
je
or
movb
ret
push
cmc
idivl
mov
test
jo
fistl
mov
or
es
pop
rol
jnp
push
dec
gs
cmp
jno
fadds
ret
dec
outsb
push
push
stos
jnp
and
mov
stos
js
imul
push
inc
insb
push
add
sub
xor
rorl
test
popa
icebp
int
and
xchg
mov
xchg
jnp
addl
sbb
shrl
pop
adc
lock
xor
inc
lods
dec
inc
push
push
inc
push
outsb
arpl
inc
mov
adc
sti
or
or
andb
ret
xchg
inc
adc
fsubs
jnp
insb
dec
and
loop
jnp
imul
push
mov
inc
push
and
ss
inc
jo
and
sbb
loopne
sbb
outsl
or
xor
lds
xchg
rol
dec
inc
inc
push
and
pop
and
inc
dec
push
outsb
fistl
cmp
fs
imul
inc
dec
mov
rclb
insb
je
adc
faddl
mov
fs
ret
pusha
pusha
movsb
sbb
addr16
push
in
push
in
lds
clc
repz
xchg
push
xchg
scas
jno
push
adc
pushf
inc
imul
bound
dec
cli
outsl
add
mov
pop
cmp
imul
xor
or
insl
das
into
lret
xchg
adc
insl
lret
shlb
roll
mov
jae
test
inc
push
test
rcll
insb
imul
rolb
jo
imul
iret
pop
insb
sub
cmc
cmc
sub
insl
inc
sar
push
arpl
rorb
push
inc
mov
push
iret
pop
mov
bound
add
inc
cs
pop
push
jmp
ret
lea
jo
rcl
pop
inc
mov
mov
and
pop
outsl
fmul
and
test
inc
add
jo
clc
decb
sbb
inc
jbe
push
pop
cmp
dec
push
jo
mov
xor
test
jo
mov
jne
aaa
and
and
icebp
push
fcomps
shrl
mov
push
jo
arpl
dec
in
jnp
push
and
adc
adc
dec
clc
add
int3
test
imul
inc
rorl
sub
inc
dec
lods
cmp
add
in
jne,pt
jle
shrb
jb
dec
popa
jns
movsb
xchg
ret
out
sbb
dec
insb
jp
int3
cmp
push
jne
xor
repz
inc
mov
dec
pop
jl
pusha
inc
ss
pop
lret
jmp
cmp
or
mov
push
popl
rorl
or
dec
outsb
dec
jbe
mov
and
xchg
push
outsl
imul
and
cmp
sbb
enter
imul
mov
test
push
hlt
pop
clc
mov
jno
aaa
insb
dec
xchg
xchg
jo
pop
in
xchg
inc
and
cld
or
inc
cmp
sbb
inc
or
fs
roll
sbb
inc
ds
gs
rorb
or
adc
and
push
inc
sbbb
and
imul
or
or
imull
add
or
add
cmpsb
inc
cmp
jns
add
aaa
inc
xlat
adcb
or
add
sahf
mov
inc
rolb
ret
mov
mov
dec
clc
add
cmp
bound
sbb
aaa
fmull
outsl
add
add
jge
popa
adc
inc
testl
out
inc
cs
inc
fwait
jbe
int
mov
dec
jl
rcrb
jb
pop
inc
out
dec
push
push
lock
jnp
add
es
jg
filds
add
add
mov
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
add
lds
adc
