call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
xchg
dec
rcrb
mov
rclb
or
loop
xor
and
push
mov
jb
idivb
push
sarb
ret
sbb
or
cli
add
push
clc
and
adc
inc
js
cwtl
bound
and
push
int3
and
adc
and
pop
lods
inc
enter
es
ds
js
add
xlat
ret
xchg
leave
push
jae
arpl
scas
sahf
pop
push
inc
xchg
jbe
sarw
jle
xor
daa
mov
mov
jg
outsl
and
jbe
mov
fmulp
lods
cmp
popf
lds
out
movl
subl
insb
shl
inc
jge
sub
and
test
test
pop
mov
ljmp
sbb
call
adc
fdivl
lods
jmp
push
jae
vpshufbitqmb
sbb
jns
imul
xor
inc
and
insl
ja
mov
add
leave
or
stc
push
cld
mov
jmp
fnsave
popa
cwtl
leave
js
jg
dec
mov
sub
add
loopne
lock
rcll
sbb
in
sti
sbb
fimull
outsb
lods
inc
xchg
adc
inc
cmpsl
and
sub
sbb
out
shrb
dec
mov
jl
fs
push
mov
lods
pop
mov
lret
sbb
and
cmp
or
adcl
adc
add
xor
and
push
mov
bound
mov
mov
sub
sbb
or
clc
add
xor
and
push
mov
bound
jo
bound
add
inc
loopne
outsb
icebp
adcl
iret
ret
stos
mov
mov
sub
cmpsb
mov
add
push
call
repnz
push
ljmp
es
dec
xor
negl
jnp
pop
outsb
cmc
pop
mov
pusha
mov
lods
out
lods
cli
mov
inc
arpl
aas
cs
push
xor
shlb
jnp
jae
dec
in
sbb
inc
loopne
test
adc
js
sbb
cmpsl
push
cmp
sahf
pop
out
add
or
cmpl
jge
insl
fldenv
pcmpeqb
loopne
mov
sub
xlat
mov
add
xchg
mov
and
arpl
cmp
sub
dec
mov
and
jge
pop
in
hlt
xchg
cmp
add
ret
sub
dec
loop
out
xor
out
inc
enter
or
nop
sahf
mov
pop
sub
xchg
aas
inc
addr16
add
mov
rorb
std
and
lods
jmp
out
mov
shlb
or
js
push
pop
xor
mov
sub
xlat
xorb
dec
inc
jmp
mov
mov
push
test
std
jmp
sbb
fmuls
xchg
pop
sub
jmp
lea
xor
jb
pop
and
fidivrs
loopne
xor
data16
sbb
fadds
push
mov
movsl
lods
aas
mov
mov
lcall
jge
or
aam
push
test
mov
inc
mov
lcall
pop
and
cltd
ds
pop
push
inc
inc
jmp
mov
sub
shrb
rclb
add
push
xor
aaa
cmp
outsb
lea
pusha
cld
or
jo
cltd
push
mov
mov
in
sar
fdivrl
pop
mov
push
lds
mov
je
cmc
cmc
mov
inc
into
dec
xor
out
adc
popa
pop
and
pushf
mov
adcl
or
xor
pushf
xchg
and
jp
test
pusha
push
mov
mov
lret
in
outsl
jae
pop
das
pushf
jmp
mov
subb
mov
stc
push
scas
push
ljmp
push
into
push
les
popf
adc
enter
sub
iret
pop
xchg
push
pop
out
pop
popa
xlat
jbe
mov
popf
mov
icebp
adc
dec
xor
and
inc
cmp
daa
inc
add
shrl
jg
outsb
inc
push
jnp
lods
in
push
pop
mov
xchg
cmpsl
add
in
push
incb
fisttpl
push
dec
out
std
push
xchg
xchg
test
enter
or
jle
cmp
ret
jnp
push
inc
fmuls
sub
and
sti
mov
mov
pop
imul
xchg
icebp
xchg
clc
xchg
mov
xchg
fidivl
inc
xchg
cmp
cli
fwait
mov
sub
mull
jge
fisubrl
in
cmpsb
aas
adcl
mov
fwait
cmpsb
clc
pop
xchg
cs
mov
fistpll
push
sub
roll
imul
scas
cld
mov
jo
cld
clc
pop
sub
outsl
cwtl
cmp
adc
out
addr16
inc
push
inc
loopne
addr16
fs
mov
stos
jo,pn
fs
push
in
rorl
insb
mov
add
push
mov
jge
or
push
or
and
add
push
mov
push
xor
daa
iret
lds
movsb
loop
jb
scas
iret
repz
popf
cld
and
adc
push
mov
dec
mov
jecxz
hlt
pop
daa
clc
insb
xor
call
loope
push
jg
push
pop
jecxz
jl
jne
pop
aad
jae
xchg
xor
inc
pushl
ds
loopne
outsl
cwtl
rcll
dec
call
lock
daa
roll
mov
call
mov
mov
mov
cmovb
sbb
dec
and
push
pop
not
or
imul
outsl
ret
sub
dec
inc
cli
mov
or
jecxz
aam
fstpt
xlat
adc
cmp
hlt
insl
daa
repz
jmp
sub
cmp
lcall
data16
inc
inc
loop
lcall
cmc
aad
dec
ja
fwait
decl
test
mov
lods
mov
push
hlt
out
aad
test
in
cmp
jo
jmp
sbb
test
cli
pop
add
vpmacsww
test
fnsave
mov
mov
lahf
cmp
push
popf
cmp
ja
sti
xchg
xchg
push
add
scas
into
mov
mov
and
pop
into
inc
int3
sub
cwtl
sub
decb
mov
sbbl
mov
dec
mov
dec
mov
and
fadds
inc
call
mov
push
jne
xor
sbb
dec
and
and
add
jo
fst
cmp
pushl
push
push
testl
mov
pop
push
sti
rorb
sbb
mov
mov
lea
pusha
jmp
popf
pop
stos
mov
out
shll
pop
add
loop
arpl
repz
les
sbb
sub
ret
aas
lods
mov
in
mov
xchg
inc
add
repz
lcall
arpl
jb
push
inc
push
push
or
ja
loope
nop
fucom
mov
jmp
xchg
xor
into
sbbb
ljmp
popf
fistl
and
movsl
mov
pop
jnp
xor
test
push
lods
popa
out
cmpsb
mov
jp
cmc
add
cmp
loope
mov
pop
aam
notl
mov
idivb
std
xchg
in
add
xchg
sarb
or
pop
aas
pop
adc
clc
pop
fs
mov
mov
jb
xchg
fisttps
addl
fcomps
jne
daa
loopne
jge
dec
push
sub
mov
lock
xor
pop
dec
sahf
aad
mov
sub
xor
or
sti
mov
inc
cmpsl
call
push
xor
scas
out
add
into
push
sarl
js
dec
cmpsb
adc
mov
push
sub
cmp
aas
idivl
repz
pop
jg
mov
cld
lret
jbe
loopne
xor
sbb
mov
inc
push
fdivl
and
loope
and
adc
mov
jg
inc
sti
mov
mov
push
arpl
sub
or
aad
xchg
pushf
filds
subb
push
movsl
out
push
push
imul
lods
aaa
add
jmp
mov
mov
sbb
stos
call
dec
mov
mov
cmpb
pusha
rclb
fisubs
lds
fs
xchg
into
pop
imul
mov
sub
mov
mov
pop
lcall
out
js
cltd
or
push
jge
dec
push
je
imul
push
push
xchg
sub
out
into
sub
mov
jbe
push
or
and
sbb
jle
mov
push
push
int
cmp
aaa
adc
and
cmpl
dec
bound
xor
pop
lahf
dec
pop
imul
ss
mov
xlat
aas
add
cs
adc
sbb
pop
xor
inc
mov
mov
push
mov
fucomp
xchg
xor
cmp
jecxz
mov
movzwl
sahf
xor
shrl
mov
sahf
repz
xchg
adcl
xorb
xor
test
adc
fcomp
xor
movsl
mov
jmp
popa
loopne
outsb
test
push
addr16
inc
addr16
popa
daa
popf
xchg
sbb
cmp
or
fcomip
mov
add
add
out
jle
xor
fmul
out
xlat
jecxz
mov
int
imul
pusha
popf
pop
cmp
pop
inc
or
dec
shrb
xchg
sti
or
pop
ja
mov
insb
add
add
adc
retw
iret
cmp
ja
jne
dec
inc
pop
jns
lahf
repz
stos
outsb
in
int3
jbe
in
inc
sbb
adc
stc
imul
pop
std
stos
mov
data16
pop
pop
mov
mov
fwait
dec
xlat
fbld
dec
mov
adc
cmpsl
subb
inc
xchg
sbb
jnp
mov
pop
sub
or
dec
fnstcw
hlt
call
jo
faddl
dec
cli
cltd
fistpll
imul
insl
popa
sbb
rcrb
dec
or
and
jb
jmp
lea
mov
out
inc
cmpsl
divl
pop
movsl
jp
das
pop
out
xchg
call
push
xor
inc
push
and
cmp
push
jp
out
xchg
std
mov
lcall
sub
cmp
icebp
stos
jle
sbb
and
or
loop
dec
mov
enter
out
pop
in
adc
lcall
flds
push
inc
xor
andb
or
cmp
adc
or
outsb
dec
popf
xchg
mov
dec
xchg
push
repz
adc
lcall
ret
lret
mov
incb
mov
pop
push
mov
data16
out
stos
add
movsl
sbb
push
scas
mov
dec
cmp
pop
movsl
jge
pop
aaa
push
nop
test
jb
jmp
mov
push
mov
nop
rol
push
cmp
cmp
pop
jg
xorb
call
jp
mov
pop
test
stc
sti
sbbl
adc
or
push
dec
enter
lret
rorl
sub
out
int3
js
hlt
mov
jns
jmp
mov
loope
cmp
mov
out
add
dec
pop
fsubs
jbe
out
pop
cld
lods
test
push
mov
les
jmp
jge
sub
dec
xor
cmpsb
and
clc
pop
sub
cmpsb
mov
mov
jo
dec
dec
xlat
pop
outsb
sub
stos
packsswb
out
ja
clc
xchg
stc
pop
or
les
inc
adc
popf
je
and
cmp
cmp
scas
jb
mov
scas
inc
lahf
adc
popa
or
xor
jge
jo
or
scas
imul
add
mov
stos
out
xchg
js
loopne
sub
cli
or
out
mov
lods
add
into
jmp
popa
inc
pop
xchg
cmpsb
pop
and
xchg
pop
pop
push
sbb
sbb
out
vmovupd
mov
popf
mov
push
sub
decl
xchg
mov
jl
jl
and
sahf
clc
lret
cltd
sbb
mov
jo
xchg
movsl
aaa
ret
insl
sbb
and
pop
jmp
pop
push
das
xchg
lds
sub
ja
push
pushf
inc
xchg
dec
mov
fisubrs
and
pop
pop
outsl
aam
push
jae
jl
insb
or
xor
sub
gs
inc
iret
sub
insb
lock
iret
push
into
sub
loop
and
scas
sbb
push
pop
mov
ret
pushf
faddl
testb
mov
cmp
stc
mov
loopne
into
mov
add
inc
sub
and
shrb
push
repz
bound
rcr
adc
dec
fdivp
das
sbb
loope
pop
add
dec
imul
mov
sub
xor
cwtl
leave
out
nop
mov
call
mov
add
inc
aaa
mov
and
in
shr
push
sub
repz
sbb
cwtl
cmp
sbb
dec
mov
in
clc
lods
jle
cli
sbb
jbe
cmp
test
ficompl
push
inc
out
xor
cmp
ret
sbb
adc
lahf
lret
movb
mov
add
lret
mull
test
ss
inc
call
rcr
clc
rcll
movsl
pop
mov
jle
mov
aad
mov
inc
push
mov
je
xchg
mov
fcompl
ret
mov
dec
mov
sbb
bound
mov
mov
sub
ret
aas
pop
ret
sarb
sbb
mov
les
cmp
inc
xor
adc
lret
mov
dec
sbb
aad
loop
repz
mov
dec
jmp
sahf
sub
cmp
lahf
call
jbe,pn
xchg
dec
sti
imulb
cmp
mov
pop
aad
int
bound
in
mov
aad
or
xor
sbb
ret
jne
and
push
mov
stos
arpl
jge
out
cmp
std
sub
insl
xchg
mov
add
rep
mov
push
stos
popf
lock
jmp
mov
fwait
subl
sub
inc
xor
fmuls
scas
add
pop
leave
loopne
xchg
jns
cmpsl
sbb
mov
pop
jl
cs
bound
andps
dec
inc
loope
push
pop
movl
data16
sub
shl
push
fstpl
cmp
push
push
and
cmpsl
stos
into
pop
stos
jno
jge
cmp
cmpl
std
sub
addr16
mov
push
movsb
mov
loop
inc
xor
pop
lods
in
or
mov
fadd
test
adc
lea
pop
mov
test
cltd
and
xorb
xchg
cmp
arpl
lods
call
xchg
je
ret
fdivr
jb
enter
sbb
test
push
push
mov
adc
xchg
cmpsl
sub
test
orps
aam
xchg
mov
mov
xor
mov
lcall
xchg
data16
rclb
outsb
inc
in
mov
jno
cmp
push
mov
mov
push
stc
push
sub
in
cmp
sub
push
inc
xchg
dec
mov
pusha
shrb
cmp
mov
cmp
adc
mov
movsl
and
lea
test
adc
add
call
push
icebp
shrb
mov
mov
cmp
lret
add
out
repnz
stos
hlt
aaa
nop
and
jb
sub
push
or
mov
jg
imul
mov
jg
shlb
lahf
xchg
mov
xor
loop
clc
inc
dec
testb
push
lret
or
jg
leave
push
sub
ss
mov
mov
sub
ret
insb
scas
mov
mov
lcall
xchg
jp
inc
jmp
test
sub
pop
jnp
mov
sub
xor
addb
out
sub
ljmp
cmp
imul
std
mov
xchg
es
inc
jge,pt
push
sub
jge
lahf
nop
outsl
int3
mov
mov
pavgw
add
push
pop
mov
mov
pop
mov
stos
inc
sbb
xchg
cmp
dec
push
sahf
add
pop
ja
mov
aam
out
cmp
sbb
jae
push
test
loopne
push
push
push
out
jge
adc
int3
jns
add
int3
rolb
sbb
mov
scas
adc
sbb
dec
mov
lcall
stc
or
ss
incl
xchg
insl
mov
popa
ret
test
inc
and
das
mov
adcb
lods
divl
push
or
or
data16
lcall
sti
loope
call
adcb
lcall
and
add
lcall
in
in
push
lock
movsl
arpl
loop
jne
lods
inc
push
dec
aad
mov
push
lret
ret
xchg
push
jmp
sbb
es
lcall
ret
jmp
sbb
add
out
jnp
adc
xor
in
jno
daa
push
mov
dec
les
xor
scas
push
cmpsl
inc
test
xor
popf
loop
push
mov
sbb
jge
outsl
push
push
and
gs
sub
sbb
hlt
es
std
test
push
jle
mov
cmp
inc
xor
das
lret
pushf
jnp
and
ljmp
mov
lods
repnz
or
sbbb
mov
push
repnz
jns
push
and
rcll
sbb
test
pop
adc
int
pop
bound
cmp
mov
out
in
sbb
dec
xchg
ljmp
mov
repnz
cmp
add
xchg
arpl
lcall
pop
sbb
loope
push
xor
or
fdivp
sub
dec
cs
and
in
push
arpl
pop
adc
sub
adc
mov
in
mov
jae
inc
cmp
icebp
cmp
and
icebp
and
lods
mov
adc
rorl
adcl
shll
cmp
mov
lds
call
lds
dec
and
add
push
stos
add
dec
ds
aad
iret
insl
jmp
pop
int
aad
cli
jecxz
xor
mov
adc
dec
mov
sub
add
test
mov
je
dec
jmp
dec
cmp
out
pop
adc
lret
xchg
jno
jo
push
dec
cwtl
rcr
inc
shll
push
mov
jmp
jb
pop
inc
mov
xor
int
sub
addb
mov
cmpb
mov
or
and
mov
imul
lret
jae
jne
cmp
xor
popa
out
imul
mov
and
dec
std
xor
lcall
xchg
scas
mov
mov
xchg
cmpsl
mov
push
ds
or
ret
inc
push
cmp
pop
hlt
mov
sub
xlat
xchg
shlb
cmp
mov
jnp
or
das
mov
dec
mov
or
inc
dec
cmpsl
xchg
mov
cmp
push
cwtl
xchg
int3
mov
mov
sbb
mov
clc
test
mov
dec
jo
sub
lcall
in
data16
sbb
test
loopew
nop
sahf
xlat
ds
in
push
daa
addr16
mov
insl
aad
push
test
in
mov
loopne
movsb
push
jb
adc
lods
std
cmp
int
stos
outsb
shl
or
pop
sbb
xchg
push
cmpsl
pushf
push
and
or
aas
popa
aad
ror
les
dec
xchg
gs
repnz
fisttps
adc
ds
xchg
cmp
lods
fistl
stos
pusha
sbb
test
cmp
adc
inc
sbb
mov
pop
mov
fidivrs
lahf
mov
mov
ss
inc
dec
outsb
adc
stc
sbb
jne
inc
or
pop
outsl
pop
lock
int
sbb
ss
fdivs
mov
adc
in
aad
mov
test
in
insb
pop
and
push
push
nop
xchg
inc
loop
cwtl
stos
repnz
les
insb
cmpsl
and
shl
ss
push
mov
subl
nop/reserved
fs
jb
xlat
test
orl
dec
int
cmp
mov
dec
and
in
jno
pusha
jge
mov
rcr
cmp
push
push
sub
mov
inc
xchg
pusha
jmp
jns
jne
cmp
out
mov
mov
adc
popa
pop
les
aaa
into
dec
pusha
xchg
sbb
movsb
popa
cmpsl
mov
sbb
pop
xor
or
add
popf
arpl
insb
sbb
cmp
jo
jno
cltd
fstps
xor
adc
daa
jmp
por
lcall
pop
sub
rorb
call
xchg
jae
cltd
ret
jno
add
ljmp
imul
and
sub
mov
push
xchg
fmull
cmp
adc
fildl
das
popf
jecxz
loope
addr16
test
jmp
cmp
into
mov
inc
push
nop
ret
or
inc
imul
mov
leave
push
sbb
imul
decl
or
pop
aam
push
test
sub
mulb
stos
stos
repz
or
sbb
sbb
adc
insl
out
dec
pop
sbb
repnz
loop
jae
sbb
mov
rcrb
sbb
sub
ret
in
push
idivb
lahf
sti
jne
push
xchg
jno
mov
out
test
dec
xchg
movsl
lods
movsb
insl
xchg
aad
into
sub
lcall
mov
and
mov
data16
mov
call
jle
add
jns
loopne
gs
pop
inc
popa
pop
ficompl
inc
cmp
aam
lods
and
js
jno
mov
jmp
dec
pushf
pushf
in
mulb
xchg
jae
insb
sarl
leave
and
push
push
nop
pop
adc
jmp
cmpsl
test
sti
adc
or
out
jg
rolb
mov
in
xchg
dec
pusha
je
rorb
rcrl
dec
xor
xchg
push
loop
add
pop
mov
cwtl
inc
jae
xor
mov
xchg
xchg
jle
xor
les
mov
fstpl
call
ret
out
add
adc
aad
pop
in
sahf
sub
jg
cmc
mov
dec
sarb
ret
sbb
or
clc
add
xor
and
push
mov
bound
mov
mov
sub
sbb
or
clc
add
xor
and
push
mov
bound
rcrb
dec
inc
cmp
sub
sbb
or
clc
add
ret
leave
push
mov
mov
call
cmp
sub
sbb
adc
std
inc
cwtl
fsubs
mov
lea
ja
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
stos
aaa
mov
js
inc
xchg
stc
mov
dec
cmp
push
js
pop
sub
stos
enter
call
cli
adc
test
int3
cmp
js
push
dec
sbb
pop
cmp
inc
cmp
mov
movsb
rolb
mov
push
aaa
bound
push
adc
cmp
enter
popf
in
lods
mov
mov
pusha
lods
dec
shl
stos
inc
cmp
jnp
xchg
insl
imul
inc
leave
repnz
inc
rorb
cli
scas
insl
adc
testb
push
dec
sub
fnstsw
sub
jle
inc
push
sbb
jge
in
cmc
push
xchg
dec
call
stos
enter
inc
adc
push
fildl
mov
or
pop
in
xchg
or
rol
imul
aaa
xor
mov
loop
xchg
cld
dec
or
jp
mov
dec
movl
gs
clc
sbb
call
mov
ja
dec
pusha
das
or
out
sub
arpl
mov
repnz
mov
cwtl
lret
cmp
into
and
jb
loopne
sub
lcall
cltd
cld
pushf
testl
sbb
adc
pop
insb
cmp
pop
lds
ljmp
mov
imul
adc
ds
iret
sahf
lahf
out
repnz
mov
test
mov
or
js
or
dec
sub
stos
enter
call
cli
cwtl
lret
mov
or
js
or
dec
sub
stos
enter
dec
jmp
mov
or
pop
rclb
mov
mov
xchg
fisttpll
hlt
fs
fwait
cmp
adc
xchg
dec
dec
inc
mov
mov
ja
mov
push
clc
aad
pop
push
hlt
pushf
xor
addb
add
cmp
lods
hlt
dec
cmp
notb
in
push
addb
sbb
pushf
leave
ljmp
aam
fidivrl
pusha
push
mov
sbb
mov
dec
cmpsb
imul
ror
cmp
cwtl
ja
pop
fstps
mov
adc
aam
sbb
cmp
cmc
xor
push
out
es
data16
lock
das
and
jp
and
stos
mov
rorl
jno
into
sbb
mov
scas
jae
rolb
lds
lahf
fstpl
test
stc
sub
xchg
sub
stos
sub
test
mov
movl
in
adc
in
sbbb
mov
dec
out
cmp
imul
pop
add
adc
imul
stos
jge
dec
out
cmp
xor
mov
ret
enter
cwtl
cli
cmp
in
lods
add
lds
call
mov
pop
xchg
push
jo
out
cs
out
aam
cmp
mov
fldl
lahf
inc
out
lock
dec
push
mov
add
std
pop
out
movntq
sahf
and
int3
xlat
pop
mov
adc
leave
clc
cmpsb
nop
jno
mov
or
cmp
xchg
lcall
insb
xor
add
cli
jmp
add
dec
andb
decb
pusha
jne
bswap
ret
mov
dec
nop
cli
jo
xchg
fsubs
je
jns
movsl
push
fwait
push
ja
test
popf
xchg
orb
xlat
sub
idivl
sbb
mov
mov
loopne
xchg
add
add
andl
sbb
inc
loope
cmc
inc
mov
add
dec
jge
pop
loopne
popf
sti
push
in
inc
mov
ljmp
adc
inc
testl
add
add
push
mov
or
dec
arpl
bound
or
test
cmp
cmp
aad
call
lea
fidivrl
and
adc
adc
cmpb
icebp
ret
cmp
jno
shl
fsubrp
mov
jnp
jae
xchg
fs
in
pop
inc
ss
test
cmovle
jg
cmp
mov
mov
xlat
bound
xchg
fdivr
sarl
mov
jmp
dec
imul
cmp
clc
mov
dec
test
in
lods
dec
int3
push
int
or
and
jmp
pop
in
adc
daa
sbb
adc
pusha
xor
dec
or
fsubrs
sbb
push
push
push
cmp
orl
inc
cld
scas
shll
adc
std
dec
mov
jmp
mov
pusha
cmp
cmpsl
sahf
cld
ja
outsb
icebp
pop
movsl
inc
lea
mov
inc
cmp
adc
loop
cmp
scas
filds
sarb
mov
sub
xchg
aas
mov
cld
mov
push
test
pop
inc
adc
cmp
sbb
movsl
lret
jno
imul
gs
mov
in
dec
push
mov
loope
psubsb
xlat
mov
xchg
mov
inc
insl
lret
add
adc
xchg
xchg
cmc
inc
dec
cli
sbbb
mov
cli
xchg
and
ret
lds
lahf
pop
ljmp
pop
add
sbb
xchg
cmp
cmp
ret
and
pop
jns
mov
pop
inc
dec
xchg
cli
enter
pop
adc
in
lret
push
xor
cmp
xchg
push
outsb
and
hlt
adc
dec
es
mov
or
cmp
in
scas
popa
dec
cmp
mov
leave
xchg
outsl
lahf
fcoms
iret
scas
lds
adc
pushl
aaa
hlt
cmc
lret
cmp
lret
std
adc
imul
pop
mov
cmp
data16
incl
mov
sbb
pop
arpl
adc
dec
jmp
sbb
inc
pop
or
aam
inc
roll
or
popf
bound
add
mov
in
push
nop
fists
icebp
sbb
iret
mov
jno
jae
or
pop
ret
out
inc
aad
lret
rol
xchg
jns
bound
psubusw
out
dec
shlb
cs
addl
fucomip
or
clc
mov
addl
lock
cmc
test
pusha
lea
out
je
adcb
fnstcw
daa
outsb
leave
fnstcw
out
jnp
cli
notb
outsl
cmp
xchg
mov
sub
add
ljmp
stc
std
jnp
nop
adc
dec
add
icebp
jne
test
inc
push
xchg
pusha
adc
sbb
gs
jmp
fs
push
push
add
loop
lret
pop
jno
pop
rcll
leave
pop
mov
aas
mov
dec
sarb
inc
loopne
insl
cli
inc
sub
test
jecxz
mov
adc
rcrl
lods
push
mov
mov
sub
or
and
jmp
sub
mov
push
cmc
pop
jmp
jge
or
mov
cmp
pop
loopne
cmpl
ret
ss
mov
or
call
loop
lds
ret
jb
adc
push
sbb
aam
test
jae
jecxz
stc
mov
frstor
mov
leave
sub
mov
imul
sarl
pushf
xchg
fs
pop
les
clc
push
adc
imul
insl
aad
sbb
dec
mov
dec
fsub
pop
aam
pop
inc
es
sbb
xchg
jns
lods
dec
repz
cld
mov
inc
push
lock
sub
dec
pop
pop
pop
pop
xchg
jl
mov
js
mov
outsb
mov
repnz
pop
xor
loope
inc
cld
pop
scas
mov
mov
hlt
lret
jo
lock
xchg
enter
cmp
clc
pop
cmp
adc
fucomp
inc
jecxz
cltd
ret
cmp
jns
mulb
mov
pop
pop
and
and
mov
push
sbb
cmp
sub
ja
pusha
or
xchg
add
mov
aaa
movsb
std
jno
mov
or
fsubr
fsubrl
in
fnstenv
test
stos
pop
subl
insl
add
clc
pand
lahf
mov
sbb
cmp
jo
adc
mov
lret
jl
pop
pushl
xor
aam
lahf
repz
jmp
int
inc
xor
add
mov
lods
push
cmp
push
mov
inc
mov
and
xor
insl
cmpl
jbe
jbe
jbe
andb
cmp
mov
ja
xor
jle
icebp
push
or
lods
daa
dec
aam
out
cmp
loopne
cli
mov
call
sub
rorl
out
sti
xor
sti
mov
loope
stos
cli
test
sbb
cmpl
ret
call
out
push
sarb
sbb
out
push
mov
or
xor
cld
fdivrp
cmp
insb
and
stos
scas
cwtl
push
in
mov
mull
inc
aas
dec
dec
adc
push
ret
sub
aaa
jno
jae
mov
std
pushf
js
das
pushf
mov
in
cmpsl
popa
mov
call
pop
insb
mov
add
ret
add
call
sbb
loopne
sub
mov
sbb
adc
outsb
inc
add
pushf
add
jns
insl
push
call
sbb
les
pusha
jge
inc
mov
inc
arpl
xlat
loopne
push
js
xchg
sub
addr16
icebp
es
stos
out
mov
mov
xchg
xlat
push
fildl
loope
add
lahf
mov
pop
mov
hlt
imul
mov
lret
into
xor
orl
pop
push
fsubs
xor
sbb
adc
aas
jne
mov
push
mov
add
and
push
inc
add
sub
cmp
repnz
cmc
das
xor
push
lock
scas
push
imul
sub
jl
jnp
jbe
mov
icebp
rolb
popl
in
fisubrl
pop
dec
test
fistpl
imul
lcall
fcomip
in
and
inc
cwtl
push
enter
jecxz
sarb
inc
mov
data16
and
add
das
test
push
xchg
fmuls
and
lock
popa
lret
les
xorl
adc
or
xchg
push
scas
popf
push
lret
adc
enter
push
jb
in
inc
addr16
test
inc
test
sbb
lods
mov
jbe
xchg
loopne
repz
sub
jle
xor
xchg
cmpsb
inc
loop
sarb
mov
fldl
mov
add
cmp
jne
jne
sub
and
pop
cmp
pusha
sti
loop
dec
or
push
data16
sub
mov
scas
push
jmp
div
mov
pop
inc
adc
and
cmpsb
cmp
push
sub
shr
inc
fs
movsl
jns
xlat
mov
jbe
jle
mov
cmp
test
bound
test
into
fwait
cs
and
out
mov
pop
jmp
jns
ja
push
out
push
dec
mov
xchg
nop
add
jle
sub
xchg
sub
xchg
add
aaa
jecxz
jg
pop
sti
mov
fdivrs
and
xchg
aam
pop
mov
mov
mov
sub
push
adcb
jno
fimull
xor
dec
jbe
adc
clc
addr16
popf
scas
test
icebp
sbb
rclb
sbb
pop
subb
sub
xchg
lahf
sbbb
mov
jns
ret
cmpsb
stos
loope
bnd
mov
or
or
insb
inc
jle
movsl
fcompl
inc
mov
push
add
push
fnstsw
xchg
inc
pusha
lea
add
add
xor
mov
pop
xchg
jp
sbb
stos
outsl
cli
xor
out
adcl
mov
push
insl
aam
ja
pop
cmpsb
cwtl
xchg
xchg
daa
les
or
xchg
jmp
je
jge
test
pop
mov
lret
sti
inc
cmpsl
mov
xchg
dec
repz
leave
out
push
add
ret
test
jge
add
scas
call
mov
jne
hlt
mov
js
and
pop
jmp
push
xor
inc
mov
add
mov
stos
push
shlb
mov
lcall
push
push
inc
out
imul
jmp
push
cmp
push
in
push
xchg
leave
sti
fwait
sbb
xchg
mov
pushf
push
lahf
shlb
sub
inc
adc
pop
push
mov
and
repz
sbb
repnz
xchg
mov
jecxz
int3
shll
repz
jmp
dec
lock
test
lcall
mov
xchg
dec
lahf
std
jecxz
shrl
xchg
aaa
dec
aaa
nop
cli
js
and
cmp
fmuls
repnz
movsb
sub
or
roll
push
sbb
adc
add
jne
and
pop
add
push
jg
mov
nop
fs
mov
and
popa
lods
mov
mov
inc
dec
or
in
cwtl
outsl
movsl
sbb
insl
cmp
neg
lcall
bound
test
shlb
movsb
inc
cwtl
fnstsw
dec
adc
mov
push
fucomip
jp
into
or
jle
jmp
add
shrl
and
lods
shrb
in
pop
ds
test
push
inc
call
xorl
cmp
cwtl
aam
inc
cld
push
mov
hlt
add
pop
loope
repnz
or
out
test
mov
mov
mov
imul
pop
sub
adc
sbb
test
xor
or
fsubs
ret
ljmp
aaa
loop
mov
rcl
jno
xchg
jmp
testl
xchg
and
sbb
shlb
sub
dec
push
cmp
mov
loop
pop
pop
sahf
jp
aam
jmp
cmp
jl
imul
or
out
mov
in
cmp
std
pop
mov
xchg
pushf
lea
jo
ror
aas
xor
push
dec
sbb
das
movsb
loopne
stos
sub
cmpsl
in
pushf
lahf
cli
aaa
test
dec
jecxz
xor
jno
sbb
add
fcoml
inc
inc
jp
lret
jle
ret
lret
adc
xchg
pop
mov
xchg
pop
mov
arpl
pop
mov
xlat
imul
loope
sub
mov
imul
popf
pop
cltd
inc
clc
push
into
rorb
and
mov
cmpl
jnp
inc
push
stos
mov
cmp
movsb
inc
jns
xor
pop
mov
mov
mov
mov
les
pop
test
mov
and
f2xm1
cmp
movsl
ds
clc
xor
jmp
jp
mov
dec
push
stc
pushf
test
int
arpl
mov
aas
test
jae
mov
pusha
dec
cmp
fsubp
leave
inc
jbe
dec
movsb
lods
mov
cmp
lcall
out
bound
test
jge
pop
stos
inc
sbb
in
add
cli
adc
fidivrl
roll
fucomp
scas
push
jmp
addr16
xchg
mov
out
pop
cmp
pushf
stos
lahf
sbb
scas
adcl
xor
push
loop
cltd
idivb
enter
fcomps
out
adc
inc
mov
mov
push
test
mov
cmp
out
cmpsl
loopne
sti
mov
or
mov
mov
popf
pusha
adc
loope
push
mov
lock
jae
imull
leave
pop
cmpl
cmpsb
movsl
xchg
push
fsubrl
and
popa
orl
inc
or
mov
shrl
cmp
jno
xchg
sub
std
fiaddl
das
lds
cli
adc
dec
aaa
xor
in
mov
filds
mov
mov
sarl
sbb
mov
out
push
xor
push
dec
push
aam
fmull
insb
add
cmp
adc
pop
cmp
out
cmpsl
and
cmp
gs
pushf
fists
fistpl
stos
arpl
loopne
inc
int3
insb
push
outsl
cltd
inc
ficompl
xor
int
jg
inc
test
pop
xchg
lar
faddl
push
pop
mov
jns
fdivr
mov
lret
jge
and
inc
push
inc
popa
movups
mov
sbb
pop
or
jns
popf
imul
in
jg
sbbb
aad
js
dec
jne
mov
push
andl
cmp
xor
movsl
insl
xchg
out
sbb
rclb
jmp
arpl
push
int
enter
fcom
xchg
inc
mov
popf
pop
cmp
mov
loop
repnz
bound
lahf
rcrl
and
push
cmp
call
inc
add
inc
push
mov
mov
adc
inc
imul
out
push
adc
cld
sti
jae
fwait
out
dec
cltd
pop
outsb
call
cli
cmp
in
stos
sbb
sbb
sahf
xor
aaa
ret
jb
xlat
jle
scas
push
rolb
test
imul
xchg
out
push
iret
mov
jmpw
cld
stos
xor
mov
adc
ja
or
adc
adc
dec
fstpl
movsl
push
cld
hlt
xor
sbb
shr
aam
test
scas
sbb
cli
xor
into
mov
lea
lods
add
aas
shld
pop
push
adc
cwtl
xor
xor
ljmp
in
xchg
xor
negb
push
push
ljmp
es
jp
aaa
cmpb
and
fs
stc
push
inc
mov
daa
subl
test
ret
cmp
gs
mov
repz
test
and
stc
lcall
pop
push
or
dec
mov
push
sub
mov
inc
jmp
adc
ret
jae
je
dec
jp
inc
popa
test
mov
dec
lds
mov
inc
pop
sbb
pop
xor
mov
sbbl
cmpsb
fsubrl
dec
jno
inc
sbb
fadds
das
int3
pop
or
idivb
pop
push
dec
add
sahf
xor
out
insb
scas
xchg
push
test
mov
idivb
cld
lods
leave
or
mov
inc
mov
pushf
int
lret
adcl
cmp
push
mov
cmp
mov
xor
int3
movaps
das
jl
mov
stc
hlt
ret
repnz
add
jo
ss
shll
xlat
inc
pop
imul
das
lret
adc
jno
mov
addr16
sbb
sub
pop
jno
mov
and
push
xor
jmp
inc
jnp
lock
push
icebp
jnp
out
xor
ret
cmp
push
inc
lods
lods
shrb
xor
push
push
xor
gs
xor
jnp
push
add
cli
mov
divb
out
sbb
iret
pop
mov
inc
mov
aam
xlat
in
jb
sbb
mov
imul
inc
lahf
test
mov
mov
xchg
outsl
aad
rcl
enter
in
mov
and
mov
xchg
xchg
and
sub
mov
cmc
enter
test
push
fisttps
or
sbb
lods
mov
and
dec
cmp
rorb
push
aam
sbb
cmp
mov
push
lea
repnz
sub
add
add
popa
fwait
out
fnstenv
pop
push
adc
lahf
mov
repz
scas
jmp
jle
or
ficoml
enter
icebp
mov
push
cs
dec
notb
push
insb
mov
mov
pop
push
fmull
push
mov
pop
stos
xchg
push
sar
inc
and
out
pop
push
xor
pop
test
aad
das
enter
mov
push
imul
std
pop
pop
mov
or
lds
push
scas
fisubrs
pusha
sub
mov
mov
inc
aam
sbb
sarl
popf
lret
popf
std
jns
mov
insl
loop
xchg
ljmp
push
and
xor
mov
dec
les
fadd
adc
stc
xchg
pop
leave
fstl
insl
inc
jb
pop
dec
outsl
push
out
jg
fisttpl
cmp
cmp
gs
lret
sti
cmp
pop
bound
je
insb
dec
mov
insb
fldcw
mov
lahf
mov
adc
sbb
push
outsl
loopew
popl
cltd
push
mov
out
aad
inc
pop
or
popa
jp
jno
dec
inc
cwtl
mov
aam
pop
sub
popa
jnp
and
lods
repz
push
lock
nopl
fisubrs
xchg
sbb
outsb
xchg
aaa
pushf
and
mov
fidivl
aas
mov
push
or
dec
rorl
mov
je
mov
shrl
popa
mov
in
js
les
mov
push
or
cmp
xchg
xchg
xchg
jbe
mov
inc
mov
sbb
xchg
test
sbb
daa
mov
adc
sahf
lods
int
fistpl
sbb
pop
enter
adc
mov
sbb
and
jbe
mov
into
mov
xchg
cmp
scas
mov
push
adc
daa
aaa
loop
mov
subl
cmc
lds
mov
mov
jg
lret
pop
subb
push
fcomps
ljmp
add
mov
or
jg
fisttps
fdivrl
mov
or
les
mov
rcll
mov
loopne
jl
ss
add
inc
pushf
pop
cmc
cmp
lods
push
xchg
dec
pop
cmp
or
push
ss
hlt
sub
jo
addr16
jecxz
xor
lds
add
das
xchg
push
iret
fldcw
int
xchg
movsl
xchg
xchg
xchg
pop
jnp
iret
loopne
sti
int3
push
cmp
imul
stos
jb,pn
repz
add
mov
jbe
movsl
xor
mov
movsb
jnp
mov
inc
shlb
pop
mov
sbbl
add
les
lret
sbb
cltd
add
bound
xchg
cmp
jne
push
xlat
xor
loopne
popf
std
xor
inc
aam
out
mov
shl
jecxz
loop
or
cwtl
xlat
mov
xor
push
fstpt
jmp
inc
and
mov
movsb
lea
popa
mov
out
addr16
in
mov
xchg
in
nop
xor
adc
out
add
jg
addb
lret
mov
or
js
or
dec
sub
stos
enter
call
cli
cwtl
lret
mov
or
js
or
dec
sub
stos
enter
nop
lcall
test
mov
or
js
or
dec
or
stos
enter
call
cli
cwtl
dec
sub
aad
push
repnz
xlat
movsl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
divb
jle
outsb
adc
dec
sub
mov
out
sbbl
scas
rcll
dec
xor
outsb
adc
arpl
arpl
inc
cs
mov
out
xchg
sahf
xchg
ljmp
cmp
sub
sbb
imul
dec
fisubs
out
lods
rolb
pop
outsl
outsb
inc
cmp
je
stos
dec
mov
mov
int
icebp
xchg
inc
sbb
js
cmp
stos
push
and
mov
dec
adc
adcb
xor
roll
lods
aas
xor
sub
mov
out
dec
xchg
call
push
push
sahf
mov
adc
add
ret
icebp
xchg
sbb
int3
add
cmp
arpl
arpl
aaa
sub
lret
inc
popf
dec
out
jl
push
adc
mov
cmp
ret
scas
loopew
lea
jp
cmp
pop
sahf
dec
add
sub
mov
out
nop
fistl
fmull
cmp
not
mov
lret
ss
jl
insb
sbb
mov
sti
sarl
jle
add
push
arpl
ds
xchg
dec
sub
pop
stos
es
mov
and
inc
cmp
jbe
popa
jnp
sub
int3
mov
xchg
icebp
lret
mov
cmp
jl
arpl
push
aaa
pop
popa
out
fwait
out
xchg
in
xchg
jmp
lret
movsb
out
cmpsl
sub
jge
push
addr16
push
pop
push
push
jae
inc
cs
fisubs
out
xchg
sahf
jecxz
repz
and
jle
outsb
adc
arpl
jae
inc
cs
fisubs
out
xchg
sahf
jecxz
repz
and
adc
popa
in
pop
lea
popf
cmp
fstps
sbb
and
test
lods
cmp
lods
xchg
pop
xchg
push
cs
sbb
add
and
push
xlat
mov
outsb
dec
adc
loopw
or
mov
aam
pop
enter
leave
ljmp
arpl
inc
mov
inc
xchg
aaa
lock
fcomp
cmovl
dec
fbstp
jns
orl
xchg
hlt
es
jl
xchg
xchg
dec
mov
fbld
rolb
add
mov
into
add
add
push
fsubrl
xor
outsb
mov
push
sub
dec
xor
dec
jb
aad
sarl
cmovp
jp
inc
mov
je
pushf
mov
je
lret
xor
inc
in
mov
popf
sub
xchg
loope
mov
int
outsl
push
sbb
sarl
leave
and
and
aam
ficoms
sbb
out
fisubrs
mov
cmpsb
mov
adc
or
cld
mov
adc
pop
test
xchg
lods
pop
daa
ds
lock
jp
sub
cmp
add
pop
and
mov
mov
jp
aaa
shr
inc
out
push
pop
jmp
mov
or
ret
popa
or
inc
outsb
lds
inc
out
fadds
dec
int
aas
pushf
movsb
jbe
push
mov
adc
or
out
ds
roll
jge
je
arpl
aaa
or
inc
imul
add
mov
sbb
and
pop
dec
test
daa
jno
mov
repnz
mov
and
dec
clc
xchg
cwtl
movsl
ror
mov
scas
jl
jno
sbb
rorb
scas
fstps
call
les
cmp
fs
fistpll
ret
sub
jns
daa
pop
xchg
push
push
aam
mov
sti
jns
adc
je
addl
and
sbb
nop
cmp
sbb
or
or
cmp
jb
pop
mov
sub
push
or
push
in
cltd
mov
mov
inc
fsubr
in
rcr
mov
stos
addr16
dec
sub
pop
sub
test
lds
or
shll
and
loopne
bsr
push
mov
push
pop
lds
pop
pop
popa
shlb
mov
daa
addr16
mov
jmp
icebp
cmpsb
fidivs
je
dec
neg
pop
loop
dec
cmp
out
pop
mov
les
mov
je
leave
or
or
mov
mov
out
fidivrl
pop
mov
pop
cmpsb
sbb
in
add
xchg
xchg
mov
loop
cmc
xchg
inc
out
xchg
test
sbb
adc
sahf
pop
popa
ss
dec
cmc
sub
push
adc
cmpsl
adc
arpl
push
jmp
push
xchg
pop
inc
jno
lret
shrb
pop
cmp
cli
mov
aaa
mov
and
movsl
loope
mull
push
push
icebp
push
mov
inc
and
ret
push
je
add
dec
sub
fsub
jno
aas
dec
lret
jnp
loopne
dec
mov
cmp
mov
pop
out
ljmp
xchg
leave
fnsave
cmp
je
mov
lahf
scas
inc
popa
pop
rcr
mul
jns
jg
cmpsl
dec
test
and
xchg
insl
mov
sahf
mov
push
pusha
cmp
nop
inc
jge
in
pop
add
insb
imul
xlat
insl
sbb
push
and
int
test
fstps
add
mov
test
xor
xchg
or
in
cmpb
loope
insl
push
clc
push
pop
inc
mov
pushf
push
push
arpl
lahf
out
std
int
test
outsl
test
out
dec
jnp
call
mov
xor
inc
push
sub
jecxz,pn
lods
cmp
scas
in
pop
movsl
lds
in
sbb
int3
lcall
dec
movsb
loopne
addr16
clc
adc
jae
adc
stos
mov
ret
adc
push
adc
push
jmp
out
rorl
pop
adc
out
aam
add
or
push
xchg
push
sti
mov
mov
stc
mov
clc
in
std
mov
pop
mov
inc
cmp
in
jle,pt
inc
xchg
sbb
sbb
and
or
fbld
jp
test
push
mov
mov
loope
scas
push
push
fstpt
dec
test
clc
addr16
xor
xlat
stc
mov
push
cmp
push
icebp
int
inc
out
test
movb
jnp
xor
out
ss
or
das
cld
loope
out
pop
mov
and
sbb
mov
mov
ljmp
cmc
or
sahf
popf
incb
movsl
and
xor
xchg
xchg
bswap
aam
mov
movsl
mov
sub
pop
sahf
daa
outsl
jmp
cwtl
sbb
enter
into
or
add
sub
pushf
sub
lock
add
pop
test
pop
cmp
packuswb
les
fxch
jns
and
xor
imul
insb
insb
ror
sub
mov
lods
jp
or
sbb
mov
ljmp
pop
jge
mov
in
inc
pusha
mov
stc
int3
pop
sbb
ja
insl
int
cmp
push
ss
out
adc
push
cmp
pusha
jb
cmp
pop
out
adc
or
jmp
jmp
sub
negl
jle
fstl
std
lds
xlat
je
arpl
add
out
bswap
mov
push
test
mov
or
xchg
scas
or
sub
adc
sahf
lcall
xor
lods
jb
jnp
ret
mov
ret
jo
scas
shll
cmc
gs
mov
push
ret
mov
roll
mov
movb
insl
cmp
lcall
push
enter
xor
mov
sti
int3
cmp
addr16
mov
imull
mov
inc
push
xchg
add
bound
clc
pop
test
and
sub
leave
shlb
mov
fiadds
jl
sbb
out
xchg
cmp
test
jne
into
mov
ljmp
pusha
stos
and
cmp
in
fdivs
adc
push
and
cmpsb
es
fwait
xorl
sbb
pop
popa
test
repnz
mov
push
jbe
mov
push
xlat
mov
xchg
daa
xchg
jp
jmp
insl
xor
xor
adc
jne
xor
aam
add
push
sahf
xor
xchg
sub
pushf
push
mov
rclb
cs
and
inc
enter
xor
adc
mov
pop
xchg
loope
fsubr
cmpsl
outsl
arpl
or
popf
test
lret
mov
call
movsb
cmp
lahf
pop
mov
push
xorb
out
cmp
int3
add
test
push
jne
mov
sub
xchg
mov
iret
cmp
nop
jge
repnz
inc
lret
sbb
cmp
test
xlat
out
jnp
adc
adc
pop
shll
add
std
fistpll
inc
and
jl
push
push
adc
mov
cltd
jg
pushf
jne
xchg
int
mov
dec
jle
in
mov
mov
mov
test
insl
jl
sbb
cmp
mov
ret
sti
cmp
sub
sbb
out
xorl
rcll
cmpsl
mov
out
sub
xadd
lods
ret
push
push
mov
push
jle
mov
addb
popa
add
mov
stc
xchg
xchg
sbbb
sub
call
adcl
in
in
sub
mov
mov
adcb
xor
pop
or
cmp
jg
push
hlt
rorl
pop
testb
jne
aad
jb
addl
icebp
bound
xchg
mov
xor
cmp
and
sti
adc
cld
jo
or
insb
dec
push
dec
lahf
push
mov
lea
test
inc
rclb
popa
or
adc
out
hlt
daa
mov
push
jnp
inc
adc
popa
xor
add
xchg
jmp
subb
test
push
into
mov
insb
hlt
pop
push
pop
push
jo
push
sbb
fwait
xor
push
dec
adc
dec
add
or
jmp
shlb
mov
and
rorb
dec
fldl
loopne
jecxz
fisttps
nop
xchg
jmp
sub
jmp
flds
int
and
push
aam
sahf
cli
adc
pop
fmuls
xchg
addb
mov
and
mov
lret
jbe
clc
orb
sbb
mov
or
pop
fst
mov
shll
inc
insb
test
aam
push
jns
jae
out
inc
sbb
test
cmp
fnstcw
inc
pushf
hlt
dec
mov
dec
sub
pusha
and
enter
mov
pop
jecxz
scas
push
jo
lods
lock
inc
daa
ret
xchg
ljmp
mov
repz
mov
mov
jb
jbe
sub
jae
xor
mov
bound
aam
fdivrl
adc
jb
or
mov
aad
sbb
adc
loop
lods
test
push
fists
jb
rcrb
sub
aas
and
bound
push
sub
pop
loope
and
jp
sti
sub
loopne
mov
sub
lcall
and
pop
stc
rorl
mov
push
repnz
sahf
xchg
sbb
and
pop
bound
add
jge
adc
xor
clc
jae
inc
je
add
adc
mov
cmp
mov
mov
push
les
cmp
mov
jb
test
in
sub
fisubl
xor
xchg
jne
mov
jmp
mov
test
and
pop
js
pusha
cli
adc
in
adc
out
mov
mov
dec
cmpsb
in
adc
cmp
mov
sub
idivb
xlat
leave
loop
pusha
sarb
jne
cmp
lods
lcall
mov
and
jl
sub
push
jbe
dec
ds
out
test
cmp
stos
ret
adc
out
aad
jmp
mov
int3
adc
popa
mov
test
out
je
cltd
sub
sub
lcall
adc
int
lret
adc
mov
fsubl
aad
scas
sbb
in
mov
in
into
movsl
xchg
aam
xchg
pushf
cs
adc
inc
or
adc
sbb
inc
push
xchg
stc
pusha
mov
jns
xchg
or
jb
outsb
cmp
enter
loope
push
add
push
sub
sarb
pop
cmp
jl
test
cs
je
mov
push
es
mov
popa
jns
lcall
push
ss
bnd
jmp
sub
pop
mov
mov
add
adc
and
and
jg
out
or
lea
sub
lods
cmp
xchg
mov
sbb
push
mov
lret
cmp
sub
jg
push
ret
pusha
stc
pop
xchg
lods
in
loope
push
mov
cwtl
das
jns
fcmovu
lods
fnstcw
frstor
fsubl
out
call
orb
pop
outsl
stc
jb
sahf
js
jmp
pop
cmp
in
aad
jb
jae
dec
jecxz
int
xor
in
popf
call
mov
je
inc
push
mov
jecxz
pop
jl
das
cmpsl
push
mov
stos
and
adcl
je
mull
fsubs
push
push
les
loope
dec
jnp
dec
cwtl
repz
fistpll
pop
xlat
sbbb
xor
imul
mov
cwtl
fs
dec
bound
or
popa
loop
ret
dec
insb
dec
clc
jno
ds
stc
inc
inc
push
sbbl
adc
xchg
addl
sar
cmpsb
jl
adc
mov
inc
mov
and
jae
stos
push
fldcw
loope
jecxz
xor
sbb
lahf
sbb
jmp
movsb
in
jg,pt
pop
xor
and
lods
pop
mov
sub
cmc
push
lret
jl
mov
adc
out
jg
inc
xor
xchg
sub
lock
aaa
nop
push
sbb
dec
mov
test
xchg
pop
test
aaa
insb
call
out
fisubl
orb
insb
sub
xor
shr
adc
cld
pusha
gs
adc
sbb
dec
pop
fstps
ja
mov
pop
insl
iret
pop
push
add
inc
sub
or
mov
or
dec
popf
inc
xchg
xchg
adc
add
rorl
jmp
iret
mov
sub
js
ds
and
js
mov
or
cmp
sub
dec
cwtl
out
test
test
sbb
mov
mov
xchg
sbb
push
in
mov
mov
sar
dec
push
adc
sub
mov
xchg
gs
push
dec
inc
adc
pushf
mov
cwtl
es
out
sbb
iret
outsl
fstl
inc
sub
icebp
cmpsb
mov
inc
fcoml
and
ljmp
and
clc
jg
mov
pop
jne
sbbb
cmp
aam
scas
les
js
addr16
movsl
push
in
frstor
add
sbb
mov
push
pop
xchg
mov
mov
hlt
rclb
insl
aas
hlt
clc
negb
ja
dec
enter
pop
push
fisttpl
or
js
cltd
in
jl
outsb
in
lret
add
jecxz
and
inc
adc
cmp
jge
testb
sub
jg
and
addr16
mov
fstl
pop
push
add
mov
cmpsb
and
mov
stos
or
cmp
jne
std
icebp
test
cwtl
test
or
adcb
mov
cmp
movsl
push
inc
or
dec
cmp
in
lret
mov
mov
ja
or
pusha
cmova
xor
aad
cld
cltd
repnz
sbb
idivl
frstor
lret
mov
jb
xchg
loope
out
roll
mov
or
add
mov
out
iret
sub
insl
cli
mov
aaa
popf
and
push
pop
shrb
sub
rcl
jno
addr16
sub
lock
jmp
fwait
das
rorb
sbb
les
ss
sarl
subb
loop
jg
sbb
mov
sbb
cltd
sub
fisttpl
inc
push
cmp
push
lret
pop
push
aad
test
xchg
mov
mov
ljmp
dec
dec
mov
out
adc
bswap
push
and
mov
sub
ja
sub
mov
mov
les
pusha
dec
mov
jno
insl
sbb
inc
jbe
jg
sbb
call
in
pop
dec
mov
mov
cs
shl
sub
xchg
adc
xchg
sbb
pop
push
adc
orl
sub
push
fld
out
outsl
adc
pushf
sub
rorb
add
adc
pushf
adc
negb
mov
push
lods
xchg
popa
adc
jno
lods
jle
fstpl
mov
fs
outsl
xchg
out
adc
cmp
aas
mov
enter
je
les
adc
mov
fisubrs
fwait
imul
adc
cltd
sub
pop
mov
dec
mov
sti
jno
iret
jne
fwait
jne,pn
xor
addr16
das
insb
inc
rorb
lahf
mov
test
and
jmp
mov
xor
cmp
jg
adc
push
mov
testl
mov
stc
push
push
jmp
lret
ficomps
outsl
dec
dec
scas
pushf
xor
xchg
daa
jne
and
and
xchg
das
cltd
fldenv
mov
repnz
lds
dec
dec
fcomps
push
jb
inc
cmpsl
sub
in
sahf
add
jmp
jecxz
ja
adc
sbb
daa
dec
add
bnd
xchg
sbb
lret
xchg
sbb
andb
icebp
mov
jnp
xchg
adc
sbb
js
adc
pop
neg
pop
dec
dec
sub
cmp
or
test
cmp
incb
out
or
jmp
mov
mov
xchg
xchg
sbb
inc
mov
inc
mov
or
arpl
dec
mov
mov
cmp
decb
shr
ror
dec
inc
movb
cmp
mov
mov
mov
mov
out
xchg
subb
shlb
addr16
mov
inc
std
xchg
mov
test
push
mov
xor
push
xor
mov
ret
stc
push
push
xchg
adc
sti
dec
add
shlb
cld
call
xchg
call
and
cmp
xorl
in
dec
cmp
mov
enter
and
mov
cli
outsl
ds
pop
fdivrs
addr16
nop
fdivr
insl
popf
and
fisubs
adc
jmp
out
popf
std
pop
and
jae
and
cmp
ficoml
and
sbb
negw
je
add
int
ljmp
mov
sub
pushf
movl
orb
pop
xchg
or
ret
clc
xor
add
cld
repz
cmp
pop
jecxz
addr16
pop
or
push
insb
push
push
sarl
jo,pt
xchg
xlat
xchg
shl
lcall
into
clc
mov
push
mov
push
xor
call
pop
in
movsb
imull
ljmp
popa
imul
mov
xchg
insl
cmpsl
ret
leave
in
clc
inc
xchg
push
jbe
andl
jp
hlt
std
bound
mov
frstpm(287
adc
outsb
fwait
ss
sbb
mov
or
mov
es
addr16
icebp
sti
add
mov
dec
ret
sbb
dec
xor
fs
inc
mov
and
jbe
sbb
and
je
and
icebp
vpcomuw
loope
xor
or
aaa
lea
fsubr
dec
in
mov
push
lcall
scas
sub
subb
pop
in
out
roll
mov
inc
sbb
lret
inc
adc
dec
scas
adc
and
xchg
sbb
repnz
int
dec
xchg
inc
fsubl
or
int3
lcall
stos
iret
roll
or
dec
xchg
fnstsw
inc
or
mov
mov
push
outsl
ffreep
jg
lds
scas
xchg
hlt
loope
and
and
cmp
ljmp
sbb
jg
in
jb
pop
push
mov
inc
jo
mov
mov
push
add
ss
rcrb
mov
mov
mov
mov
mov
or
fbstp
push
inc
mov
xchg
push
int
lahf
inc
into
fdivrl
inc
cmp
test
cmpl
outsb
push
dec
or
sbb
pop
or
jb
stos
pop
arpl
pop
int
mov
sbb
stos
in
xchg
scas
shll
outsb
cmpsb
test
jo
or
rclb
and
and
mov
inc
jns
test
outsl
xchg
out
les
jle
adc
push
xor
add
or
mov
pop
popf
push
ret
je
enter
fs
adc
push
mov
pop
jp
mov
pop
dec
ja
mov
shr
inc
lods
pop
jmp
sub
int3
dec
fistpl
mov
sub
leave
in
call
incl
adc
test
shr
dec
outsb
push
jns
mov
call
mov
sbb
in
or
inc
inc
jecxz
scas
data16
mov
lret
lret
mov
jae
es
mov
call
pop
jp
sub
sti
nop
mov
cltd
lahf
les
xchg
stc
ret
jae
dec
inc
or
fbld
aas
int
jae
arpl
inc
mov
inc
shrl
and
in
sub
in
pop
inc
sub
xchg
fdivl
mov
ds
add
ret
dec
and
in
insl
stc
push
sar
xchg
add
xchg
sahf
jecxz
jg
jl
aam
dec
push
loop
xlat
sti
imul
dec
iret
fidivs
popl
js
dec
xchg
push
orl
cmovns
jnp
or
out
pop
pop
pop
sarb
imul
mov
xchg
jecxz
push
cmc
pusha
addb
xchg
negb
fwait
ljmp
or
adcb
inc
bound
imul
lock
dec
loop
repnz
cmp
add
xchg
dec
fnstcw
negl
or
lods
test
mov
dec
in
cli
lds
jmp
mov
jo
xor
add
push
arpl
jae
inc
cs
fisubs
out
xchg
sahf
jecxz
repz
and
jle
outsb
adc
arpl
jae
inc
cs
fisubs
out
xchg
sahf
jecxz
repz
and
outsb
add
pop
arpl
jae
inc
das
push
fisubl
ljmp
sahf
xlat
inc
daa
bound
testb
adc
arpl
jae
inc
scas
xchg
fisubs
out
in
imul
inc
mov
pop
mov
add
xor
lret
and
adc
add
push
mov
mov
or
sbb
sub
cmp
leave
xor
inc
jmp
jo
pusha
test
mov
mov
or
sbb
sub
cmp
leave
cwtl
cli
and
xor
rolb
mov
ljmp
adc
push
aaa
dec
add
or
sub
inc
incb
inc
pop
incb
xchg
testb
roll
pop
adc
fiadds
call
mov
addr16
pop
jge
xor
nop
data16
int
sarb
jno
mov
dec
movsl
jle
stos
pop
jle
popa
icebp
out
jo
cmp
cmp
push
dec
or
push
push
fstps
cltd
lahf
push
scas
xor
sbb
pop
in
adc
cmp
aad
mov
enter
fs
jb
fldenv
pushf
push
scas
mov
pop
push
testb
lea
pushf
and
add
cmpsl
outsb
inc
mov
mov
or
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
mov
insb
pushf
jbe
inc
sahf
mov
push
lcall
adc
push
leave
add
mov
mov
insb
mov
jl
mov
jno
outsl
jle
cld
or
xor
pop
repz
clc
sbb
dec
lock
sub
cmp
leave
xor
and
adc
add
push
mov
mov
or
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
jmp
fnstcw
pop
jns
cmpsb
push
jp
or
mov
xchg
es
pop
fwait
jmp
lds
mov
xor
xor
lcall
xlat
adc
shlb
xor
mov
jle
push
cmpsl
jne
mov
pop
jle
imul
push
or
pop
inc
or
scas
dec
and
mov
jecxz
cmp
cmovle
loopne
mov
mov
popw
cmpsb
rcr
or
dec
icebp
adc
in
xor
in
pushf
outsb
push
scas
or
or
add
xor
cs
mov
rcll
jno
es
pop
jmp
jne
test
das
cmpsl
xchg
pushf
cld
repnz
out
cmp
mov
mov
cmpsb
dec
das
loop
rcll
loopne
inc
push
and
or
movsl
test
in
pop
xchg
out
push
test
icebp
shrb
dec
cmp
adc
pop
mov
pushf
adc
ficoml
push
xchg
push
sub
jp
cwtl
mov
or
or
int
lock
pop
push
push
inc
sbb
push
ret
dec
xchg
inc
sti
scas
xchg
int
out
cmpl
mov
mov
mov
fsubrp
or
es
insl
or
sti
out
or
outsl
mov
cld
xor
add
adc
xlat
jnp
pusha
mov
pop
mov
sbb
jb
popf
aam
cmp
test
adc
push
pop
inc
pusha
sbb
cmp
mov
push
test
mov
mov
ret
sub
jb
scas
js
ret
inc
push
add
sbb
mov
push
shl
push
push
push
cmpsb
aad
imul
push
add
or
xchg
mov
arpl
scas
in
and
test
outsb
mov
cmp
test
clc
sbbb
int3
jle
sbb
jbe
fisttpl
pop
js
add
xor
sbb
aaa
ss
pop
div
cltd
aaa
xchg
cmp
xchg
add
push
sbb
out
sub
call
jle
dec
push
scas
and
cmp
sbb
push
jne
push
dec
repnz
loopne
jne
cltd
xor
lods
xchg
test
cwtl
jmp
and
test
ss
mov
outsb
rolb
push
cmp
jne
sub
jecxz
dec
jmp
roll
in
bound
mov
fmull
mov
mov
dec
sbb
call
or
pop
test
bound
in
pop
or
outsb
adc
shll
push
js
inc
xor
fwait
mov
jmp
mov
call
pop
push
dec
imul
jno
lds
aad
mov
aaa
les
pop
movb
xchg
pop
movb
cmpsb
outsl
jne
cmp
mov
push
outsb
jge
jecxz
out
stos
mov
lea
popa
ret
jp
jge
int3
in
enter
fs
mov
push
sub
dec
and
add
sub
cmp
sub
cmp
sahf
scas
jbe
ds
lea
enter
dec
loop
mull
sbbb
xchg
adc
add
cmc
push
sub
xchg
and
fdivrl
popf
aad
daa
push
mov
out
cmp
mov
lcall
in
pop
ljmp
sub
xor
insb
scas
xor
push
test
stos
jnp
mov
sbb
pop
test
insl
and
dec
mov
insl
movsb
rcl
inc
push
shlb
cmc
out
push
sti
mov
ror
jo
jae
popa
mov
sbb
mov
or
sahf
add
push
fisubl
or
mov
pop
and
out
ret
lds
jnp
add
add
in
pop
adc
xchg
xchg
ret
sub
pop
mov
mov
nop
mov
ret
subb
cli
and
mov
into
xchg
lods
sbb
jge
rcll
xor
mov
sub
shlb
jge
pop
push
outsb
jbe
jl
cmpsl
push
cmpsl
and
sbb
cmc
xor
adc
add
xchg
cmpsl
pop
std
xor
sbb
xor
notb
out
sub
int
aad
sbb
rcll
fidivrl
push
repnz
mov
incb
add
or
sbb
fdivrl
dec
dec
je
rclb
pusha
rsqrtps
in
mov
test
inc
sbb
fs
sar
in
insl
add
das
add
pop
in
adc
push
jo
inc
imul
mov
pop
push
inc
fwait
mov
dec
pop
mov
adc
pop
notb
mov
subl
add
mov
sub
mov
xchg
test
cmp
pop
pcmpeqb
mov
pop
dec
pop
adc
cmp
and
gs
jge
xor
mov
cwtl
mov
xor
mov
cmp
stos
mov
sub
add
jns
test
fcompl
xor
fdivrl
pop
mov
enter
push
xor
jmp
xor
inc
jl
adc
push
sub
sbb
sub
movsl
jg
or
xchg
or
sub
push
sub
js
outsb
daa
insb
outsl
stc
andb
nop
andb
inc
loope
inc
pop
das
and
lods
push
dec
push
push
mov
push
call
xchg
faddl
sahf
xchg
xchg
aaa
jno
sub
push
data16
dec
and
and
xor
push
jle
jmp
shlb
fstl
cmp
lods
icebp
jae
mov
mov
cmpsl
cmpb
orl
in
int3
mov
push
push
movsb
xchg
mov
push
movl
std
je
push
lret
or
aad
int
out
fnstcw
and
stos
xor
sub
dec
cmpsl
cmp
push
push
lcall
dec
jmp
lcall
filds
or
push
cmp
lea
mov
pop
andb
out
jne
mov
sub
xchg
mov
sub
dec
jo
xchg
sbb
jno
mov
mov
xchg
pop
sub
jl
mov
cli
ljmp
sarb
xor
xlat
stos
cli
push
fiaddl
enter
cmp
push
popf
loop
scas
push
sbb
mov
jle
inc
cld
loop
std
adc
cmpsl
js
and
mov
push
clc
and
dec
pop
push
shll
es
and
jle
sub
std
push
pop
js
xlat
mov
and
push
cwtl
rorb
insl
out
inc
mov
jae
test
push
and
insb
cli
cmp
push
out
dec
sbb
mov
lret
test
mov
mov
adc
fisubs
add
pop
fidivrl
sub
pop
push
add
mov
mov
xchg
mov
pop
in
jmp
or
rcrb
and
aam
jbe
and
stos
or
imul
xchg
push
mov
clc
push
sahf
lock
pop
mov
aam
out
adc
in
lods
jae
cmp
popf
adc
lods
ret
add
cltd
arpl
mov
sbb
push
mov
dec
fsin
test
in
lods
inc
fcmovnb
clc
cmpsb
and
push
scas
pop
cmp
popf
push
jmp
xchg
jp
push
stos
inc
mov
ljmp
and
pop
into
cmc
xor
js
push
xor
lcall
imul
and
pop
inc
sub
or
rol
jl
inc
loop
pop
jle
mov
les
pop
jmp
ret
pop
sub
dec
pop
mov
pop
push
mov
out
mov
cli
fwait
int
pop
leave
out
add
jg
xlat
jg
cmp
cmpsb
push
mov
test
cmpsl
sbb
adc
mov
fsts
push
sbb
sbb
pop
xor
mov
jg
sub
xchg
mov
push
and
js
cli
mov
jae
pop
jp
loope
push
fs
mov
adc
dec
movsb
sbb
adc
into
inc
stos
mov
fcoms
mov
mov
push
or
out
or
xchg
movsl
mov
mov
out
jmp
lahf
gs
xor
and
out
inc
jle
mov
cltd
sarl
in
or
or
pop
or
push
pop
jno
test
adc
add
ja
or
je
pushf
fisttpl
xchg
xchg
out
stos
push
jbe
aam
mov
add
leave
fidivs
int
mov
rol
insl
rorl
lods
in
push
add
inc
mov
aaa
adc
sti
inc
icebp
js
pop
or
pop
testl
movsl
loope
stc
lret
pop
test
or
add
into
bound
fdivrl
push
jg
sbb
pop
setl
fcomps
adc
aaa
inc
icebp
cld
jp,pt
orb
loopew
outsb
cmp
cmc
gs
push
popa
fisubl
icebp
lcall
sbb
int
movsb
pop
mov
pop
mov
pusha
jle
cmp
fdivrl
andl
cmc
xor
ret
adcl
sub
add
sbb
mov
pop
sti
mov
pop
cltd
cmp
incl
fs
ljmp
xchg
flds
xlat
out
jno
in
cli
cltd
lds
cmp
imul
push
push
iret
bound
inc
push
mov
lods
mov
out
stc
nop
hlt
iret
xor
mov
inc
es
lcall
cmp
sbb
notb
call
jge
repz
ficomps
xor
shrl
pop
push
call
shlb
inc
add
pushf
sbb
push
and
and
out
or
ss
mov
jecxz
in
mov
lahf
and
lock
sbb
xchg
pop
lret
cmp
or
int
push
pushf
pop
fwait
js
jns
dec
adc
mov
mov
andb
notl
and
adc
mov
add
add
xorb
mov
das
lret
popf
imul
inc
jle
jmp
xlat
int3
cs
int3
dec
dec
scas
xchg
das
dec
icebp
js
mov
add
jp
stc
mov
inc
ficoml
xchg
xor
sub
lds
into
dec
mov
fwait
incb
insb
cmp
dec
pop
out
cmpsb
xchg
dec
jns
mov
pop
dec
roll
jnp
es
adc
pop
imull
incb
lea
xchg
dec
add
test
jle
cmp
dec
into
xchg
pop
jbe
fbld
jge
add
neg
inc
mov
lea
rcrl
in
pop
rep
xlat
xor
cmc
cmp
cltd
hlt
mov
shlb
xchg
pop
aaa
xchg
mov
pop
imul
psrlw
out
pop
or
rol
aam
xchg
pop
pop
dec
dec
push
loop
incl
aaa
push
sub
and
jbe
inc
mov
pop
mov
push
push
cmp
repnz
push
add
test
push
shll
xor
icebp
jns
push
je
enter
push
jae
inc
push
mov
jle
inc
iret
sbb
mov
mov
sbb
clc
mov
mov
fiadds
mov
push
gs
jl
ja
flds
fistpl
mov
and
pop
or
mov
dec
in
idivb
jnp
inc
test
and
imull
jle
fcompl
out
fbld
clc
cld
mov
test
sub
cmp
or
push
pop
lahf
cmpsb
mov
sbb
ja
aas
cli
mov
jge
sarl
pop
sar
mov
jmp
addr16
dec
push
jle
out
test
jl
cs
cld
push
cmpsb
push
jne
add
lods
pop
mov
dec
xlat
jmp
sar
adc
call
rcr
faddl
mov
lock
cli
gs
fcmovbe
dec
lret
popa
sarl
jns
bound
arpl
retw
hlt
mov
data16
mov
lahf
xchg
fbld
cmp
push
dec
aas
push
sub
sbb
divb
and
outsb
lret
xchg
mov
mov
push
mov
sahf
cmpsl
and
pop
ret
leave
fsubs
mov
in
nop
mov
cmpsl
test
xchg
call
push
clc
out
sub
inc
inc
into
clc
mov
adc
xchg
das
or
or
mov
lods
mov
out
cmp
insb
lock
mov
push
ljmp
xchg
push
int
lahf
ljmp
rorb
lea
adc
std
imul
or
push
xchg
cmp
xor
sahf
jle
adc
cmp
ja
fcompl
sbb
es
adc
sbb
pop
lea
je
enter
mov
mov
lret
lods
jbe
rorb
and
je
cs
loope
icebp
out
fidivl
aam
lahf
mov
call
mov
push
lods
fucomi
push
mov
lea
adc
fildll
cwtl
jo
jg
sbb
add
test
push
dec
mov
dec
adc
fucomp
adc
rolb
sbb
push
inc
pop
ficompl
mov
xor
fnclex
lcall
adc
ret
cmpsl
sub
mov
or
rorl
add
testb
jae
and
and
div
xor
jbe
popa
pop
les
mov
dec
jno
inc
ja
xor
lret
push
sub
sbb
loope
adc
xorl
das
jb
xchg
subl
outsb
dec
test
sub
out
pop
jbe
cmp
mov
mov
int
adc
fcoms
bnd
push
call
jno
cmpsl
sti
mov
iret
xchg
mov
add
xor
pop
loope
xchg
adc
sub
dec
out
shlb
sti
repz
out
cwtl
insl
adc
aam
rcrb
outsb
dec
push
jmp
xor
addr16
movsb
aad
push
pushf
mov
sub
in
movsb
and
sahf
mov
push
push
xor
push
ret
or
iret
xor
sub
cmp
scas
ret
lret
js
sub
repz
mov
pop
xchg
sbb
push
inc
jmp
in
pop
leave
scas
lea
mov
jg
rcr
icebp
cmp
mov
jp
popa
xor
aad
xor
inc
push
xchg
dec
test
mov
jmp
jbe
roll
mov
adc
mov
inc
adc
dec
dec
sub
lret
adc
push
es
add
cmpsl
add
nop
lcall
std
mov
and
das
pop
imul
outsb
ret
fcoms
push
mov
mov
insl
ljmp
ja
xor
fwait
movsl
push
add
pop
lods
fwait
mov
mov
cmp
aam
xchg
sbb
popa
add
fld
dec
jns
enter
inc
fidivs
aaa
and
ss
and
dec
xchg
cld
dec
sub
inc
aaa
std
push
fisubs
xlat
mov
clc
popf
fildll
out
jno
push
pop
mov
ret
call
mov
cwtl
and
push
icebp
dec
push
outsl
mov
enter
xlat
pop
cmp
stos
inc
xchg
mov
or
addl
in
xchg
mov
add
inc
pop
stos
xor
jb
add
xorl
outsl
scas
std
mov
lds
lods
xchg
dec
sbb
mov
fsub
test
out
in
aam
cmp
enter
mov
xchg
bound
xchg
cwtl
mov
dec
sbb
lock
dec
xor
pop
xchg
sbb
lcall
jns
add
aad
pop
dec
hlt
rcrl
rol
mov
fistl
jbe
and
pop
ss
and
loop
mov
or
or
xor
pop
sbbb
mov
mov
in
xchg
mov
xchg
cmc
jge
and
fldcw
enter
cld
stc
jo
xchg
and
lock
pop
imull
mov
ss
incb
cmp
pop
imul
sub
std
pop
or
sbb
cmp
dec
lock
xor
das
loope
adc
leave
pop
mov
and
imul
push
scas
dec
shlb
adc
aad
aas
adc
test
pop
test
xor
loop
add
cmpb
push
sahf
xlat
aaa
ficoml
jb
xchg
xchg
add
jo
cwtl
cmpsl
ret
dec
mov
cmp
mov
aaa
pop
das
aaa
push
out
add
aaa
pop
scas
mov
shr
mov
in
push
int
pop
adc
js
mov
adcb
cmp
test
inc
mov
mov
arpl
cmp
jns
mov
loop
push
push
movsb
icebp
daa
sub
xor
xor
inc
mov
xor
and
rolb
lret
or
push
jnp
cmove
lret
mov
or
fiaddl
sbb
lock
mov
shrb
push
dec
ss
push
ret
push
sahf
outsl
fwait
jge
lahf
push
enter
mov
mov
insb
outsb
add
push
add
cmp
xor
mov
nop
pop
inc
push
ja
mov
jge
sub
sbb
cmp
mov
dec
out
push
sub
jle
sub
cmp
and
push
sti
sub
fs
sub
js
mov
enter
mov
mov
add
stos
das
fisubl
mov
push
dec
lock
xchg
test
adc
addr16
fbld
repz
dec
lret
pusha
mov
ficompl
or
xchg
and
loopne
sahf
jmp
jnp
dec
lret
and
insl
push
cld
scas
or
add
ljmp
add
les
scas
xchg
cmpsl
push
inc
inc
push
jb
jne
mov
fdivrs
xor
and
outsl
xor
inc
stos
adc
loope
xlat
inc
mov
jg
and
push
gs
jmp
mov
mov
sahf
mov
fwait
or
adc
adc
dec
fwait
dec
ret
or
mov
mov
add
out
jno
dec
mov
jg
or
push
nop
into
outsl
lea
rorl
mov
movsl
push
mov
dec
ret
loop
and
aaa
pusha
jbe
xchg
xchg
fcompl
lea
repz
rcll
push
jnp
xchg
inc
pop
inc
inc
xor
cmp
out
or
cmp
dec
pop
pop
and
xor
adc
mov
sti
jmp
mov
pop
rorb
xor
xchg
pop
mov
dec
sahf
cmp
nop
push
mov
inc
aad
out
inc
je
mov
call
mov
jl
mov
and
daa
jl
sub
sarb
scas
nop
sub
loop
push
test
mov
insb
mov
daa
aad
push
lcall
mov
dec
mov
mov
subl
xlat
add
insb
jnp
or
lret
testl
dec
xchg
inc
jnp
inc
lods
mov
push
push
das
movsl
popf
mov
mov
int3
cld
std
adc
into
rolb
les
call
inc
adc
mov
stos
push
es
jl
pusha
ret
pop
and
add
mov
addr16
xor
and
das
xor
insl
scas
nop
outsb
loop
add
and
lcall
pop
js
sub
and
mov
xchg
popa
adc
push
pop
shll
pop
dec
out
lret
mov
xchg
lea
int3
dec
ds
fs
sub
cmp
add
lret
xchg
in
imul
sbb
rcr
jns
leave
pusha
adc
test
pop
or
xchg
loope
add
stos
mov
in
mov
mov
pop
jns
xchg
ljmp
ss
add
insl
or
fcmovbe
jns
mov
sbb
xor
mov
sub
mov
push
push
fldl
mov
and
bound
sub
fiaddl
shrb
mov
in
scas
rcr
dec
cmpsl
or
push
loop
in
test
loope
adc
int
dec
jl
icebp
divb
push
jnp
pop
ss
mov
pushf
loop
mov
push
bound
in
cli
sbb
adc
pop
cmp
aam
in
int
mov
mov
movsb
adc
test
fbstp
out
jno
test
pop
inc
rcrl
jle
fsubrl
inc
stos
hlt
daa
add
shrl
hlt
lods
adc
cltd
pop
sti
loope
filds
cld
dec
aas
xchg
insb
jg
inc
aad
add
add
popf
movsl
push
mov
inc
jg
xchg
ja
or
push
mov
mov
jo
mov
mov
jg
cwtl
sbb
jne
dec
sub
sub
pop
add
sbb
pop
inc
pop
arpl
sub
cmpsl
pop
pushf
inc
stc
mov
adc
mov
or
mov
shll
mul
scas
pop
xchg
lock
in
or
cmp
mov
shlb
push
les
ljmp
jbe
adc
or
aas
pop
dec
or
or
mov
sbb
xorb
rclb
jmp
imul
shll
mov
add
mov
push
xchg
stos
mov
or
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
mov
or
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
and
jns
or
sbb
sarb
ror
fldenv
jmp
jo
pusha
test
mov
mov
or
sbb
test
xor
mov
stc
ja
clc
adc
stc
pop
jmp
das
je
imull
outsl
jns
push
scas
cmp
sub
stc
pop
jmp
das
mov
jg
outsl
jns
imul
sbb
or
stc
pop
jmp
das
mov
jg
outsl
jns
dec
shll
lea
insb
lcall
fstps
ret
jo
and
sbb
mov
jge
insb
pop
dec
je
es
bound
cs
test
test
in
out
cmpsb
mov
sub
test
test
enter
or
les
js
out
jns
cmp
outsl
imul
or
stc
loopne
push
mov
leave
cmp
xchg
mov
hlt
lods
in
lcall
imul
cmp
ss
pop
test
cmp
inc
xor
push
mov
or
sbb
inc
pop
jnp
pop
dec
adc
mov
cs
cltd
sahf
cmpsb
mov
movsb
cmp
out
xor
aas
leave
das
mov
jg
outsl
jns
imul
sbb
or
mov
mov
push
std
sbb
out
shll
sarl
sub
pushf
pop
mov
aas
movsl
js
cmp
popa
loope
fldt
fidivrl
jecxz
jmp
inc
mov
pushf
dec
jmp
pop
cmc
xor
outsl
jns
imul
sbb
or
stc
pop
jmp
das
mov
jg
outsl
jns
imul
sbb
or
stc
pop
int3
sbb
incb
stos
pop
jb
jle
push
xchg
pop
in
jmp
leave
push
add
je
sbb
std
mov
mov
mov
lods
outsl
nop
cmpsb
scas
sub
daa
pop
shll
or
iret
mov
cs
adc
or
mov
xor
roll
out
xchg
xor
cli
rorl
int3
mov
pop
jl,pn
sarb
pop
data16
xor
mov
insb
cli
inc
out
mov
sbb
sbb
sti
or
mov
loopne
fdivl
mov
sbb
cmp
mov
adc
mov
movsb
clc
inc
sub
mov
xor
repnz
jns
and
xor
pop
or
mov
adc
mov
insl
fstps
cltd
or
clc
xchg
and
push
xchg
or
jb
in
ds
push
add
enter
das
icebp
mov
xchg
adc
xchg
shr
out
cmc
mov
sub
fidivrs
fimull
jno
mov
xor
mov
and
dec
xchg
mov
lods
iret
inc
inc
add
mov
les
pop
shr
or
adc
sbbl
push
jnp
adc
out
int
lahf
add
cmp
add
loopne
sbb
cmp
sbb
push
pop
mov
addl
inc
sub
in
lods
mov
ret
fdivrs
pusha
or
insb
adc
sarb
scas
inc
pop
mov
jnp
out
dec
shrb
and
cmpsb
adc
mov
jg
lea
leave
dec
adc
imul
lds
cmp
shl
les
imul
shlb
cmp
cmp
sbb
jge
mov
and
push
ret
cld
lock
out
xchg
xchg
push
sbbb
mov
iret
fisubl
iret
add
mov
push
test
xor
inc
arpl
shl
add
sub
cmp
ret
mov
pop
ret
movsl
jge
into
xchg
or
inc
loopne
clc
sbb
push
cmp
push
leave
cmp
xchg
js
hlt
adc
out
push
sub
scas
mov
out
stos
enter
sub
cmp
cmp
jmp
scas
sub
xor
cmp
out
inc
lods
test
sti
call
and
imul
push
cmpsb
jnp
pop
xchg
ja
in
push
ficompl
inc
test
or
sahf
cmp
pop
cli
adc
xor
jno
daa
fwait
ret
fimuls
mov
mov
jmp
mov
xchg
mov
lret
dec
mov
push
lcall
decb
hlt
xchg
push
pusha
aam
adc
mov
lret
sub
xchg
mov
call
loopne
scas
je
push
push
dec
test
add
mov
adc
dec
mov
lahf
push
add
push
sub
mov
and
stc
add
pop
xchg
push
popf
cmp
scas
sub
loopne
daa
sbb
cmpsb
adc
int3
rcll
push
inc
in
lret
and
dec
mov
in
pop
mov
jbe
pop
shr
sar
jbe
gs
testl
scas
xchg
push
push
dec
pop
mov
testl
ret
test
int3
sub
jbe
xor
fdivrl
shll
scas
mov
and
sbb
sbb
loopne
or
xor
xor
pop
cmp
adc
rcll
push
dec
fidivs
xchg
out
mov
nop
mov
movsb
loop
lea
ljmp
cltd
ja
in
jnp
mov
notb
xor
mov
adc
fsubl
js
mov
xor
in
icebp
jo
pop
mov
cmp
jmp
outsb
sbb
jl
scas
mov
cmp
test
test
cli
pushf
call
fwait
enter
xlat
daa
dec
dec
shl
jbe
and
pop
mov
mov
mov
xchg
sbb
addr16
lds
idivl
ljmp
pushf
pusha
inc
ret
out
cmovno
add
jg,pt
mov
sbb
fmull
pop
xor
fistl
in
aam
idivb
in
inc
mov
dec
pushf
scas
mov
scas
test
outsb
cmp
inc
psrad
ret
push
imul
in
mov
mov
fs
push
repz
shlb
js
imul
ss
lret
dec
push
cmp
insb
jb
jmp
movsb
leave
out
push
push
sbb
add
sbb
call
inc
daa
or
adc
xor
jbe
out
movsl
fs
cmpsb
jns
test
cmp
jmp
mov
leave
mov
rcll
xchg
push
xchg
cmp
insl
add
push
hlt
pop
lret
add
stos
and
add
mov
fdivrp
mov
cwtl
mov
pop
jae
cmp
aad
ret
clc
mov
mov
sbb
push
mov
and
js
enter
lcall
out
sbb
cmpsb
jl
cmpsb
aad
cmp
xorb
add
sub
rolb
or
cmc
in
int3
jo
push
adc
xor
std
dec
lcall
fnsave
andl
lods
popl
mov
sbb
fmulp
arpl
cld
int3
mov
cmp
out
xorl
push
in
pop
push
jo
xchg
add
scas
into
dec
add
cmp
push
inc
ss
test
or
cmc
or
pop
xchg
add
push
shl
adcb
enter
outsl
je
pop
fiadds
in
insl
inc
dec
mov
out
xchg
mov
hlt
sbbb
sbb
decl
and
imul
lret
incb
xchg
ljmp
cmp
and
pop
cmc
aad
cmp
fucom
jae
cmp
inc
mov
xor
pushf
push
jle
aad
outsl
xchg
mov
ret
jo
jne
daa
aaa
jg
cmp
into
fsts
xor
loope
out
aad
pop
cmp
lea
pop
mov
fadd
nop
pop
ss
aad
lods
sbb
jge
aam
bound
pop
aaa
sub
into
sahf
mov
cmp
add
mov
incl
xchg
inc
push
sub
daa
jecxz
cmpsl
test
xchg
or
lods
out
mov
jl
scas
nop
pop
sbb
sahf
jne
fwait
pop
dec
adc
fucomip
xor
sbb
enter
sar
lcall
mov
dec
lea
xchg
pusha
daa
cwtl
repnz
cmc
cmp
test
mov
pusha
out
arpl
lds
push
jp
push
imulb
sar
gs
sarl
mov
mov
popa
imulb
xor
cmp
mov
mov
lret
push
fwait
jbe
cmp
mov
mov
mov
leave
popa
and
pop
paddb
sbb
icebp
xchg
sar
sub
shl
sarl
and
popa
pusha
testb
test
cld
or
lret
add
cwtl
pop
fstps
loop
jb
dec
stos
sbb
jle
xor
lahf
add
fwait
pop
and
testl
sub
push
stos
sahf
or
loop
repnz
loopne
faddp
jbe
sub
aas
hlt
pop
popl
xchg
cmp
lcall
mov
outsb
adc
mov
stos
imul
cmp
jecxz
mov
leave
sbb
icebp
sbb
int
sub
mov
jbe
push
adc
cs
adc
test
dec
jmp
repz
mov
arpl
xchg
push
faddp
push
mov
or
into
inc
repz
lcall
jb
xor
push
shrl
scas
jle
scas
sub
jae
ljmp
ja
cmp
lcall
std
xchg
xor
cmpsl
imul
cmp
sub
filds
pop
xchg
pop
test
sbb
sbb
mov
fcoms
sbb
dec
pop
aas
xor
sbb
or
xchg
lcall
lret
adc
mov
xlat
pop
lock
scas
xchg
sbb
xor
aad
ficomps
adc
jno
insl
in
test
xchg
insb
out
popf
inc
popa
jnp
jecxz
push
mov
mov
sahf
or
xchg
sub
insb
or
add
jae
rcll
jbe
test
les
sbb
mov
inc
add
xor
movsl
pop
inc
shlb
loopne
xor
adc
pusha
xchg
out
dec
ret
cmp
xchg
xlat
push
xchg
pop
mov
cmp
in
xchg
inc
xor
xchg
mov
imull
and
mov
stos
inc
mov
pop
in
mov
xor
or
fisttpl
shlb
sbb
inc
fmull
lods
xchg
lcall
mov
ja
mov
stc
jbe
in
mov
cmp
inc
hlt
inc
mov
je
scas
sbb
push
scas
dec
pmullw
sarl
fxch
jb
shll
in
pop
inc
dec
push
repnz
pop
mov
mov
addl
jmp
jg
stc
adc
mov
cmpsb
scas
and
cmp
xchg
cmc
popa
xor
lea
push
enter
cmpsb
sub
cmpsl
push
inc
shll
sahf
sti
ja
outsb
mov
pop
dec
ficoml
sti
negl
popa
cmp
out
sarb
int3
lcall
mov
pop
cmpsl
mov
hlt
or
push
icebp
xor
stc
es
xchg
push
test
in
push
push
ds
int
vpsrlvd
mov
das
adc
mov
in
popf
imul
push
shlb
cltd
cmp
loope
or
mov
adc
inc
test
cmp
cmp
shll
mov
cli
dec
push
mov
sub
jmp
and
jg
gs
mov
or
scas
dec
pushf
rcr
test
and
aas
lcall
ss
mov
xchg
inc
pop
adc
repz
fdivl
outsb
outsl
cltd
xor
fdivrs
xchg
ficomps
cmpsb
shlb
mov
lret
pop
cmp
imul
add
fs
enter
cmp
loop
fnstcw
aaa
out
mov
cmp
mov
mov
mov
inc
out
cmp
lcall
and
jne
cld
fmulp
or
xor
inc
je
pushf
scas
arpl
mov
pop
outsl
pop
loopne
pop
mov
ret
int3
lds
adc
arpl
push
pop
mov
aad
mov
hlt
and
fisubs
rorl
fistps
adc
aam
fdivs
sbb
jg
add
mov
mov
scas
add
mov
test
fimuls
mov
popa
mov
push
int
or
es
imul
sub
pop
mov
jnp
or
xor
inc
mov
or
mov
loopne
movsl
stos
clc
ja
dec
cmp
nop
or
mov
jb
adc
shrb
pop
jne
es
ja
cmp
fistps
add
lea
or
push
add
mov
xor
bound
mov
loop
js
add
jl
sahf
or
loope
mov
adc
mov
jbe
dec
add
ljmp
je
mov
fninit
jb
hlt
test
jbe
into
jmp
jo
je
arpl
push
adcl
shlb
xlat
andl
iret
mov
add
push
sti
in
xor
lds
mov
or
int3
cmpsb
jge
arpl
int3
imul
or
lods
imul
add
mov
shlb
int3
aaa
sub
clc
jae
ret
mov
jp
into
xchg
cmpsb
fwait
cmovbe
gs
cmpb
roll
jno
push
xor
into
xlat
push
pushf
sub
sti
cmp
fdivrl
inc
pop
insb
out
and
movsl
xchg
dec
ja
xor
push
ja
dec
clc
xchg
cld
jl
xacquire
push
jae
mov
adc
cmp
mov
push
mov
push
mov
pop
xchg
lahf
mov
js
mov
pop
ljmp
out
int3
adc
mov
lods
inc
add
loope
nop
lcall
cmpsl
ds
sbb
lock
adc
outsl
int3
test
inc
ret
adc
faddl
add
scas
inc
xlat
jecxz
cld
mov
dec
add
pop
fnstenv
aam
jae
pop
into
jns
cmp
pop
out
test
lea
push
es
sub
data16
popf
xchg
std
inc
mov
in
sti
pushf
in
lahf
pop
je
mov
sub
sbb
mov
movsl
shll
call
push
clc
sbb
pusha
and
and
xchg
imul
in
stos
nop
add
sub
adc
adc
and
mov
fstpt
das
or
dec
inc
out
ret
add
lds
mov
shlb
sub
cmp
mov
push
iret
adc
mov
shll
xchg
xor
fs
mov
test
sbb
xchg
lods
insb
push
test
jnp
stos
adc
out
sub
rolb
call
pop
in
add
test
push
mov
cld
ret
sbb
mov
fwait
pop
xchg
sbb
pop
fsts
jae
xchg
out
and
push
lods
cmp
sub
sub
jl
sub
xchg
fsubrs
popa
lahf
xor
imul
sub
cmp
out
dec
fstl
cmp
movsb
pop
lret
ficomps
mov
dec
xchg
jge
shrl
dec
mov
int
lods
ror
and
fildl
or
inc
clc
pushf
and
ja
inc
cmp
outsb
push
andl
test
push
jb
sbb
bound
jbe
out
mov
inc
xchg
bound
lret
or
mov
xor
loope
lea
dec
gs
je
push
inc
jle
jp
shrl
in
cmc
or
and
mov
inc
adc
inc
xor
pop
sub
mov
movsb
iret
out
sbb
fstps
aam
imul
dec
stos
mov
jns
cli
enter
call
or
loope
lods
push
lret
hlt
fcmovbe
mov
and
test
fwait
leave
xor
adc
or
inc
xor
lds
aam
mov
or
loop
ds
dec
ficoml
xchg
jl
mov
cmp
mov
inc
fwait
ret
inc
fdivrs
push
or
push
inc
repz
sti
sti
inc
jbe
push
xor
mov
dec
mov
push
xchg
stc
cmp
mov
out
and
mov
call
testl
mov
ret
insl
clc
mov
and
in
repnz
insl
sub
mov
mov
insl
jl
addr16
lods
fwait
push
sub
lret
or
push
lcall
cltd
sbb
fwait
sti
xlat
inc
xor
sbb
outsb
mov
xchg
sub
adc
mov
inc
cmp
jb
and
pushf
sub
or
ret
add
and
mov
clc
mov
out
sbb
push
mov
hlt
xor
lods
sbb
mov
mov
cmp
sub
mov
hlt
sahf
or
adc
xor
idivb
jg
sub
xchg
sbb
or
inc
xchg
repz
sbb
pusha
jbe
mov
addl
inc
mov
mov
sahf
mov
push
out
cmp
sbb
jmp
push
in
or
iret
mov
pop
dec
pop
dec
lahf
enter
pop
repz
jmp
jmp
fnstcw
shrb
int
cmp
jp
shll
daa
fdivp
pop
stos
testl
fisttpll
mov
push
mov
stos
popa
mov
fimuls
ret
add
repnz
cld
incl
jnp
mov
dec
sarl
pusha
cltd
enter
loop
xchg
cli
lret
enter
xor
mov
mov
mulb
pop
inc
or
push
dec
mov
insl
movsb
mov
mov
rolb
pop
in
sub
push
ljmp
adc
push
jp
mov
fs
ja
bound
pop
subl
adc
in
add
cs
js
dec
jp
cmpsl
stos
cmp
movsl
rcll
xchg
add
data16
enter
adc
popa
adc
ds
in
push
sahf
cwtl
pop
xchg
adc
lea
cmpsl
sbb
xchg
dec
mov
adc
in
out
or
add
cli
mov
push
addr16
push
sarl
jl
mov
cmp
push
int3
clc
lret
loop
adc
icebp
out
cmp
sti
fistpll
add
mov
push
int3
sbb
jae
sub
sahf
sbb
mov
pop
xchg
add
pusha
push
clc
adcl
push
mov
addr16
ret
lds
movsl
inc
sbbl
push
data16
loopne
fdivl
ljmp
je
jg
pop
mov
add
imul
fisubrl
stos
mov
mov
pop
add
jo
or
pop
dec
bound
lods
rcrb
jp
in
out
arpl
fisubrl
mov
push
mov
dec
push
jb
jbe
jmp
inc
repnz
or
ljmp
andb
ljmp
pop
mov
cli
rcll
daa
repz
testl
sarb
lret
adc
pop
ret
inc
arpl
sbb
or
int3
and
sbb
pop
les
mov
push
cmpsb
mov
sti
sub
popf
cmp
inc
pop
mov
sub
and
sahf
jo
or
cmp
arpl
jmp
add
and
xchg
out
xor
repz
imul
cltd
mov
adc
xchg
inc
and
in
mov
stos
and
loop
mov
pop
mov
jecxz
mov
ss
pop
fisubrl
xchg
lods
inc
imul
inc
or
andb
aaa
dec
cmpsl
mov
imul
mov
mov
pop
imull
lock
je
xchg
jg
loope
movsl
xchg
ljmp
xor
mov
gs
sbb
sub
out
clc
adc
dec
test
popf
pop
pop
or
adc
mov
push
pop
sub
xchg
dec
imul
or
dec
add
jl
or
push
iret
xor
mov
test
outsl
push
add
pop
xchg
dec
cmpsb
out
mov
push
dec
mov
sub
sub
out
loopne
inc
cmpsb
sahf
js
mov
mov
rolb
lret
cli
add
cmp
adc
pusha
xchg
jmp
ret
out
insl
push
xor
sti
dec
ja
movswl
and
lock
dec
xchg
dec
pop
jae
in
xchg
in
jbe
ds
pop
xchg
into
scas
jb
lret
loopne
wbinvd
sti
das
push
fucomip
das
mov
push
insb
sub
loop
cmp
jne
and
dec
mov
cmp
pusha
pop
sbb
sub
shll
in
add
jl
jge
movsb
imul
inc
movsb
inc
sti
xchg
iret
xchg
cmp
fldenv
cmp
jle
jns
std
gs
test
jmp
and
xchg
and
cwtl
sbb
add
jg
push
stos
in
xchg
add
xor
inc
cltd
test
sbb
inc
mov
test
test
adc
add
aam
outsb
add
or
ficoml
mov
jg,pt
icebp
adc
sub
cmp
lds
jg
nop
fwait
ror
call
push
pop
movsl
xchg
xchg
insl
sbb
fisubs
jle
fldl
pmaddwd
into
iret
mov
stc
pop
pop
or
and
xlat
outsl
sbbl
sbb
inc
pop
and
jno
fcoms
jae
packssdw
inc
pop
mov
dec
sub
test
cmp
pop
mov
cmp
ret
mov
imul
inc
mov
sub
add
leave
dec
jne
add
int
setae
xchg
cmovg
stos
adc
ret
scas
or
mov
pop
scas
nop
pop
sahf
fmuls
add
fisubrs
imul
mov
xchg
fisttpl
jno
inc
add
in
push
dec
nop
dec
fwait
insb
jp
out
dec
test
inc
or
cmp
cmc
jmp
in
xor
popa
inc
loope
push
push
int3
imul
xchg
mov
out
shll
cmpsl
pushl
jecxz
dec
cli
lcall
cmp
push
fbld
sti
pop
adc
pop
or
rorb
and
jo
inc
inc
test
sbb
out
xor
pop
inc
or
dec
rcrl
psubusb
leave
das
mov
jg
outsl
jns
imul
sbb
or
stc
pop
jmp
das
mov
jg
outsl
jns
imul
sbb
or
stc
sbb
pop
aas
leave
cmp
dec
cltd
jle
outsl
jns
imul
sbb
or
stc
pop
jmp
sub
decl
and
dec
push
pop
xor
jns
jo
cmp
or
sbb
jne
or
push
xor
dec
mov
imul
mov
sub
sti
sbb
push
jp
dec
mov
mov
imul
sti
or
cmp
sub
lret
adc
add
jae
arpl
stos
pop
mov
out
out
or
dec
mov
mov
test
addb
jmp
mov
mov
ds
mov
adc
mov
je
mov
outsb
lods
fwait
test
mov
das
inc
mov
outsb
xchg
orps
lods
ret
push
jp
fstpt
movb
in
and
jnp
pop
dec
inc
test
inc
fisubl
cmp
mov
sub
ljmp
mov
movsb
shlb
sbb
sub
scas
lds
cmp
mov
mov
test
or
and
lret
inc
inc
jmp
stos
xlat
lcall
push
dec
inc
sbb
fwait
jle
sbb
pop
sub
fidivrl
ljmp
jmp
fwait
pusha
mov
inc
stos
mov
mov
imul
loop
lret
inc
pop
fistps
outsl
sti
jle
push
pop
loop
std
aaa
fisubs
mov
pop
xchg
outsb
scas
inc
mov
scas
outsl
sahf
sbb
push
notl
rcrb
iret
test
mov
push
jne
or
lahf
or
adc
pop
stos
stos
pop
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
sub
mov
inc
out
push
fs
xor
jmp
je
lods
push
push
lds
movl
faddl
adc
sahf
into
das
mov
jge
cwtl
dec
xchg
pop
pop
mov
test
ret
xchg
push
and
dec
and
or
and
popf
nop
adc
xchg
sbbb
xlat
mov
dec
fwait
mov
shlb
adc
or
cmpsb
mov
jecxz
mov
add
xorl
mov
sarb
pop
loopne
shrl
push
daa
pop
leave
jo
pop
cmpsl
xor
mov
dec
fcompl
sbb
fisubl
push
dec
leave
in
arpl
sbb
enter
jo
rol
dec
je
roll
fiadds
mov
loop
shrb
fs
mov
notl
xchg
jp
test
and
mov
cmp
add
pusha
dec
add
mov
imul
andb
mov
xor
xor
mov
aad
jne
fs
push
lcall
lret
adc
mov
lret
inc
mov
rol
lcall
loope
sbb
arpl
leave
jmp
clc
mov
xchg
xchg
mov
je
cmp
movsl
rcrb
mov
fldenv
mov
out
les
jecxz
mov
aas
lret
pushw
pop
iret
dec
cwtl
jle
add
sub
pop
mov
push
test
mov
hlt
insl
ja
inc
movsl
dec
and
jb,pn
xchg
shlb
in
mov
mov
stc
mov
or
sbbb
popf
pop
jmp
lods
inc
adc
call
aam
mov
sbb
cmp
test
adc
push
fsubl
dec
lret
pop
push
test
test
fisttpll
xor
cmp
dec
pop
pop
mov
fistl
xor
addb
push
aam
mov
xchg
test
int
jge
aam
and
cmp
shr
cmp
rolb
push
cs
cmc
in
jnp
dec
sub
std
cmp
lods
xchg
pushf
in
mov
mov
out
andl
mov
lcall
scas
arpl
xor
cltd
js
loop
sbb
push
imul
ja
push
call
push
loop
loopne
adc
in
insl
xchg
push
repnz
add
test
les
jg
pop
lret
xor
rolb
in
adc
sbb
or
mov
pop
scas
stc
insb
push
xor
cmp
inc
nop
xchg
jl
inc
jno
aam
out
mov
add
pop
roll
xchg
cmp
repnz
mov
or
jbe
lock
sbb
gs
mov
insl
mov
call
mov
cmp
test
pop
pop
test
in
push
mov
push
bound
pusha
cwtl
fwait
pushf
and
push
xchg
nop
push
push
adc
fstpl
mov
clc
sub
pop
scas
pop
lods
cmpsl
rcll
dec
cmc
jge
xor
mov
lahf
pushf
cmpsb
cmpsb
push
jbe
repnz
xchg
jnp
imul
inc
sub
fidivl
insl
xor
into
xor
scas
push
and
aaa
push
icebp
ss
lods
mov
mov
out
mov
arpl
es
fildl
es
xorb
daa
ss
aam
add
lret
jmp
mov
mov
test
xor
and
push
popl
xchg
sub
sub
add
iret
jns
mov
dec
dec
pop
movsl
int3
jbe
aas
or
jae
xchg
rcrl
cwtl
cmp
inc
inc
sub
jl
hlt
es
sbb
sbb
mov
mov
fdivs
icebp
cmpsb
sub
aad
insl
sub
push
adc
sbb
ljmp
cmpsb
adc
xchg
mov
jb
test
push
inc
fwait
arpl
popf
jge
jo
xorb
mov
rclb
dec
negl
jge
inc
shlb
rol
jae
add
or
insb
or
sub
cwtl
sti
xchg
mov
jo
loope
mov
adc
mov
mov
mov
rcrl
cmp
les
in
adc
and
inc
dec
mov
adc
lahf
mov
push
dec
inc
push
mov
lret
fsubs
push
sbb
xor
bound
ja
xchg
sbb
lret
or
mov
call
mov
sub
and
push
mov
pop
jecxz
ja
jo
push
insb
insb
xchg
mov
sbb
popa
iret
mov
cld
stos
jp
insb
xlat
in
jbe
les
lods
pop
dec
sbb
insl
and
inc
cmp
mov
push
mov
rcrb
test
mov
scas
lds
fs
loopne
rol
pop
popf
popf
or
sahf
push
cmc
or
movsl
faddl
fs
inc
ja
fs
and
jmp
adc
stos
jl
das
out
shrl
add
rcrl
add
xor
sub
inc
addr16
popf
add
xor
imul
pop
aad
aas
jmp
fwait
adc
adcl
dec
inc
dec
mov
add
js
mov
sahf
cmp
arpl
mov
clc
dec
fwait
xor
add
lcall
jg
test
shrl
push
mov
lret
push
sub
cmpsb
cmpsb
mov
inc
mov
jp
sti
push
shl
sub
movsb
push
inc
jmp
outsb
inc
adc
imul
mov
xchg
sbb
jl
mov
xor
lret
cmpsl
call
hlt
fldcw
stos
cli
mov
mov
push
scas
bound
cmp
test
addr16
aas
mov
lcall
arpl
cld
pop
jecxz
into
xchg
xor
dec
bound
pop
cld
popl
aad
push
and
or
cmp
mov
cwtl
mov
dec
mov
fstl
or
ret
push
daa
jmp
xchg
xchg
and
movsb
lret
xor
inc
nop
xchg
arpl
cmp
ret
ja
add
test
cmp
insb
and
fsubr
sub
sub
cmp
into
dec
loopne
icebp
cmovns
enter
sub
cmp
mov
add
mov
enter
mov
sbb
mov
cwtl
in
mov
pop
adc
fisubl
cmp
sub
mov
int3
mov
shll
clc
fs
push
push
fs
ja
cmp
decb
mov
test
insb
cs
shll
stc
cmp
xor
sti
cmp
sub
stos
mov
xor
mov
aam
shl
lods
and
clc
orl
scas
iret
aam
shlb
sbbb
mov
or
push
sbb
out
pushf
cmp
pusha
xlat
mov
loop
sbb
dec
push
mov
lods
mov
repz
or
add
or
mov
jmp
and
inc
jg
fisubrs
lds
or
into
jmp
sti
sbb
adc
mov
sbb
cli
rorb
pop
ret
cmp
daa
scas
pxor
mov
add
pop
add
cmp
xorb
adc
fadds
mov
pop
or
stc
andl
dec
cltd
pop
or
scas
add
jnp
insb
sti
pop
addb
aas
mov
inc
mov
aam
adc
inc
push
inc
mov
rol
test
fldt
pusha
lcall
imul
lahf
mov
mov
sbb
adc
cmp
outsl
je
cmpsl
xlat
xchg
enter
js
fwait
pop
pop
sub
decb
sbb
pushl
push
test
pop
adc
sub
mov
push
jp
push
mov
lret
dec
sti
hlt
push
jae
out
xchg
repz
inc
ja
cs
adc
lret
mov
lret
jle
mov
cmc
and
dec
fildll
push
push
and
or
insl
mov
jbe
divl
scas
shll
test
mov
jge
dec
add
in
or
fnsave
stos
xchg
xchg
adc
cltd
sbb
pop
and
jecxz
pop
adc
lret
shr
xchg
push
lds
mov
mov
repz
inc
xchg
test
xor
adc
subl
push
sbb
mov
loope
xor
add
aaa
movsb
or
xor
lcall
sbb
xrelease
gs
mov
dec
out
leave
lods
push
ja
stos
dec
sub
ds
jno
push
mov
lods
cmp
or
clc
pop
lcall
movsb
mov
mov
packuswb
lods
mov
pop
mov
sub
xor
lods
cmpsl
lcall
lahf
and
add
mov
mov
and
xchg
inc
into
jle
push
repz
sbb
lret
sbb
int3
add
sahf
mov
arpl
add
dec
jo
push
in
shrl
add
dec
movsl
sub
popf
scas
pop
in
adc
mov
jmp
dec
cmp
inc
xchg
jne
es
adc
imulb
popf
sbb
cmp
pop
repz
dec
sbb
adc
test
insl
lea
leave
and
adc
add
divl
lock
adc
gs
jmp
xlat
shll
inc
dec
dec
jbe
xchg
add
add
mov
scas
pusha
cld
mov
xor
jno
push
fwait
je
sub
inc
std
xor
and
or
xor
stc
lret
and
xor
pop
filds
and
lahf
repnz
test
cmp
inc
loope
orl
cmc
mov
scas
xor
mov
jo
in
sub
lcall
fiadds
out
push
cltd
mov
xchg
sarb
cmpsl
xchg
pop
out
pop
rcrb
jp
fnsave
xor
jae
and
inc
les
test
mov
inc
in
sti
mov
aas
sahf
push
dec
push
stos
jge
loopne
scas
int
leave
js
mov
mov
xor
insl
sbb
adc
mov
push
cmp
mov
xor
pop
adc
push
test
xor
push
pusha
outsl
andl
pop
ljmp
mov
ljmp
push
and
push
cmp
mov
xor
cli
scas
out
stos
and
sub
loope
or
pop
fadd
sub
mov
xchg
push
inc
pop
cld
push
cmp
sub
xchg
sbb
fcompl
mov
push
push
call
lret
adc
test
cmp
sub
adc
popf
cmc
aas
leave
sahf
add
sbb
popa
mov
pop
test
cwtl
xor
jp
xchg
sub
or
fidivl
aad
jnp
mov
inc
mov
jle
stc
in
add
pop
mov
mov
inc
test
scas
mov
push
mov
cld
pop
jo
jmp
fs
in
testb
mov
add
xchg
cmpsl
test
add
fimull
or
nop
sti
dec
mov
jg
pop
out
add
cs
mov
lock
jg
in
push
pop
xor
addr16
sub
sub
mov
dec
xchg
movsl
aam
lea
mov
loopne
sub
ljmp
pop
test
int
fnstcw
insb
repz
lods
push
test
cmp
adcl
fstl
scas
jae
gs
shll
mov
add
les
out
cmp
loope
aam
push
notb
out
mov
xor
inc
dec
mov
xor
xor
popa
jle
fistps
dec
xchg
in
mov
roll
insb
xchg
add
pushf
jecxz
pop
and
push
dec
cwtl
push
jl
ret
mov
aaa
and
push
das
loop
rorl
hlt
cli
and
jg
enter
jne
aaa
fdivrs
inc
shlb
sbb
add
push
and
lret
mov
pop
xchg
push
push
es
sub
xor
jg
adc
dec
fiadds
int
addr16
mov
cltd
out
sbb
shl
mov
adc
and
inc
mov
lcall
lds
ucomiss
adc
loope
enter
mov
and
jae
lea
mov
sub
or
fs
push
rolb
adc
shlb
pop
jmp
fistpl
mov
sbb
dec
mov
call
add
xor
cmp
lods
sub
inc
lods
jge
dec
ret
arpl
or
stc
sub
adc
jmp
out
mov
lds
jecxz
push
jle
mov
sub
sub
pop
andl
rorb
push
lahf
mov
pusha
mov
xor
dec
xchg
in
mov
add
push
dec
iret
pop
or
clc
cmp
sahf
icebp
insl
pop
mov
cltd
pushf
mov
add
adc
js
jle
orl
lock
andl
clc
lods
iret
fdiv
mov
lahf
in
adc
fisttps
int
icebp
ret
jmp
sub
ja
in
ficoml
push
int
mov
sti
dec
stos
mov
daa
pop
stc
fisubs
mov
pop
mov
test
loopne
rcll
and
jns
cmp
dec
xchg
inc
lds
adc
inc
and
pop
punpckhdq
jle
ret
movsl
push
add
jo
pusha
call
dec
fdivl
sub
into
or
sbb
mov
xor
xchg
enter
xchg
sbb
xor
js
int3
sbbl
mov
addr16
or
sbb
jle
mov
out
in
xchg
jmp
out
cmp
lods
xor
jbe
lods
xor
ficomps
xchg
inc
lret
mov
xchg
cmpsl
inc
xchg
xchg
mov
or
lcall
mov
push
aas
mov
imul
in
mov
int
sahf
mov
and
sbb
mov
in
cmp
es
mull
jns
dec
lds
test
and
add
setne
cmc
stos
adc
shlb
jle
push
data16
inc
lret
or
jns
ret
dec
xchg
inc
sbb
xchg
jge
data16
cmp
cmp
je
xor
daa
iretw
mov
dec
mov
and
dec
push
loope
pop
mov
out
inc
and
dec
inc
add
push
adcb
repnz
adc
cmc
cmp
in
fwait
scas
cmp
mov
dec
or
repnz
insb
cli
or
jne
test
lods
insl
insb
sti
jge
adc
jecxz
xor
dec
das
push
xor
sub
mov
mov
cmpsl
xor
xor
sahf
mov
pop
cltd
lret
ret
jp
mov
lods
sarb
push
sahf
or
imul
dec
fwait
jg
pop
jb
jb
lock
aas
iret
loop
cmp
jecxz
lret
in
mov
xor
dec
jmp
mov
cmp
or
test
decb
adcl
lock
sub
jle
ds
inc
pop
pop
jp
push
lret
jbe
add
loopne
add
dec
mov
int
mov
jno
xchg
and
dec
inc
jle
adc
push
gs
lret
inc
mov
into
rcll
stc
mov
test
dec
pop
lods
pop
ljmp
xchg
fcmovnb
or
mov
mov
jmp
sub
and
insb
sub
push
icebp
mov
addr16
pop
loopne
adc
push
jmp
outsl
movsl
pop
into
xchg
sub
pusha
mov
test
pop
orl
dec
mov
pop
fst
pushl
lock
popa
adc
and
jns
pop
out
test
nop
xor
xor
add
mov
test
sahf
je
lds
call
lods
inc
cmp
cli
mov
xchg
or
sbb
hlt
gs
cmp
pop
pop
fiaddl
pop
lcall
shl
mov
test
dec
push
mov
and
cmpsb
je
mov
push
stos
xchg
cli
xor
add
mov
inc
sti
enter
jnp
test
mov
movsb
lock
rep
add
int
mov
test
xor
fsubl
dec
sub
add
cli
adc
jg
out
xor
lret
loop
das
repnz
xor
jp
push
cltd
mov
xchg
mov
xchg
lea
inc
mov
push
xchg
lods
test
ficoml
rclb
jne
fadd
ss
dec
repnz
jmp
mov
ret
xchg
mov
xchg
sarl
sbb
sarl
cwtl
add
cmp
mov
cmc
adc
cmp
in
sbb
lock
dec
sbb
xlat
test
daa
aam
int
mov
and
pusha
and
loope
sbb
jmp
mov
js
adc
in
cmp
jmp
popl
scas
inc
cmc
xchg
sub
mov
sbb
fsubl
xchg
and
scas
cld
popf
dec
ret
inc
push
fldcw
mov
fldl
out
pop
inc
sbb
dec
data16
enter
jbe
push
scas
and
repz
push
jg
adc
xchg
test
movsb
popf
xor
mov
std
or
sub
sbb
pop
sub
sub
jns
jmp
mov
and
mov
jb
aam
pop
pop
sbb
mov
sbb
cs
cs
or
add
sbb
push
mov
xchg
xchg
add
jl
enter
push
ja
inc
or
mov
push
inc
mov
dec
das
int
jg
pop
out
adc
aam
fnstsw
add
jge
js
fsts
jecxz
inc
adc
jmp
notl
and
rcll
or
lds
pop
call
adc
out
jge
nop
in
push
xchg
push
or
xchg
add
in
push
lds
cmp
orl
push
jg
pop
filds
sbb
mov
or
ror
stc
fcomps
lea
push
jae
pop
xchg
cmp
mov
push
and
sbb
sub
or
pop
clc
call
movsl
rcll
std
sbb
xor
sarb
mov
pop
fidivs
ss
sbb
lods
and
dec
cmpsb
mov
xchg
mov
shl
faddl
inc
cld
loop
adc
clc
shrb
hlt
scas
pop
lock
icebp
inc
xor
arpl
aaa
fnstenv
push
pusha
jno
jp
fsubrs
xor
lret
or
dec
and
and
aad
lock
fdivl
aad
jmp
lods
addl
repz
xor
pop
inc
and
test
pop
pop
inc
and
idivb
lahf
pop
idivb
jo
sbb
xchg
aaa
sahf
es
mov
jge
shrb
add
cmp
mov
pop
ret
cld
jecxz
or
xchg
rcr
jmp
andb
jp
or
push
incl
fadds
imul
fistps
xor
ja
addr16
pop
xor
mov
aam
jle
stc
into
addl
pop
repz
rcrb
mov
push
mov
fcompl
ds
inc
test
add
cmpl
faddl
dec
mov
movsb
lcall
xchg
sub
jg
jno
cmp
mov
push
insb
jge
add
cs
cwtl
push
sub
out
pop
popa
es
andb
les
int3
outsb
ret
mov
test
mov
jl
jl
push
cmp
jle
sbb
pushf
and
out
cmp
dec
outsb
xchg
jmp
andb
out
popa
sti
adc
and
cmp
inc
or
jae
je
jmpw
movl
notb
jo
mov
and
dec
xchg
sbb
cmc
inc
xlat
xchg
sub
aas
push
iret
iret
jmp
int3
jp
jno
std
jno
jns
xchg
inc
insl
inc
add
outsl
inc
sub
imul
pop
dec
xlat
xor
adc
jno
mov
jp
adc
add
xchg
out
pop
cltd
pop
inc
cmp
out
xchg
adc
ljmp
mov
and
movsb
cmp
into
cli
xor
cmp
xchg
scas
inc
sti
cmc
out
adc
mov
inc
daa
inc
scas
and
addr16
jne
mov
sahf
fists
lret
in
ja
sub
lret
jg
sub
and
sahf
pop
dec
inc
gs
mov
je
xor
pop
xlat
push
pop
adc
cmp
and
dec
jne
or
outsb
mov
sub
fildll
xchg
fmul
mov
insl
ss
cmpsl
outsl
outsb
pop
aas
xor
out
inc
lock
mov
mov
mov
gs
mov
sahf
les
push
rcl
mov
loopne
mov
push
sub
cmpsb
dec
or
test
or
sarb
or
neg
mov
das
cmp
in
jnp
cmp
aad
lea
test
mov
test
jge
es
sub
mov
sub
jecxz
push
mov
push
in
adc
call
jae
adc
push
out
pop
mov
dec
pop
bnd
cli
sti
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
decb
lret
sub
fisttpl
lret
cmp
sbb
push
jp
lret
stos
push
pop
inc
loope
jnp
sbb
xchg
jb
xor
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
movsb
push
mov
test
or
stos
push
aam
lcall
andl
mov
movsb
push
mov
test
add
adc
and
xor
xchg
add
xchg
je
inc
mov
inc
movsb
push
mov
test
add
adc
and
xor
ret
and
pop
nop
popa
fnstsw
and
sub
and
and
call
add
inc
pop
adc
test
enter
or
sub
pop
or
addl
mov
out
movsb
xchg
out
sbb
hlt
xchg
jns
dec
lds
xor
lret
outsb
sti
jbe
jl
xchg
mov
mov
je
push
sti
push
pop
test
fstl
ret
and
xor
and
jae
push
sub
adc
in
hlt
pop
xor
fadd
lret
outsb
ret
jge
sti
xchg
mov
fs
dec
or
cltd
mov
xchg
xor
rcr
das
and
sti
jp
push
aaa
xchg
fs
sub
mov
std
imul
stos
sarb
dec
mov
xor
jno
jmp
jne
and
inc
fldt
arpl
hlt
and
xor
ret
and
xor
add
adc
fs
je
inc
mov
add
lds
aad
mov
jb
adcb
push
lahf
fs
cli
xor
ss
inc
enter
int3
push
testl
xor
cmpsb
inc
roll
arpl
loop
and
out
loope
in
add
adc
and
xor
ret
and
xor
add
adc
fs
je
inc
mov
inc
movsb
push
mov
test
add
adc
and
xor
ret
and
xor
add
adc
fs
je
inc
mov
inc
movsb
negb
adc
xor
jbe
ret
or
and
ljmp
jle
fldt
adcb
ss
shlb
aas
fimuls
and
push
xchg
mov
add
insb
test
adc
cmpsb
inc
cmp
sub
pop
imul
push
fnstenv
xchg
loop
xchg
testb
addr16
adc
xchg
jnp
in
bound
push
divb
xchg
lea
cli
rclb
shll
adc
pushf
pop
call
xchg
test
nop
popf
sbb
dec
shlb
in
es
lcall
clc
push
inc
xor
ficoml
sti
imul
sbb
loopne
aad
cmpsl
dec
mov
and
sbb
negb
popa
rclb
ss
jns
insl
xor
scas
ret
repnz
jmp
push
out
dec
fiadds
add
or
jns
out
jo
pop
ljmp
mov
cmp
cmp
pop
xor
int3
jge
inc
enter
stc
out
stos
sub
pop
fmulp
icebp
jae
sbb
sub
adc
inc
test
mov
stos
shll
mov
fwait
lods
xor
mov
xor
or
in
sub
repnz
jl
xor
push
shl
jno
gs
mov
in
cmp
int
inc
cmc
push
and
xor
push
mov
add
leave
scas
push
cmp
adc
cmpsb
pop
dec
xchg
push
pushf
stos
dec
daa
inc
xor
jnp
stc
xchg
rclb
pop
or
push
cmpsb
sbb
lahf
add
inc
vpunpcklbw
add
das
inc
imul
lret
xchg
fistps
xor
mov
icebp
xchg
pusha
mov
dec
shl
aad
or
adc
adc
mov
cmp
sub
dec
stos
or
jne
andb
mov
daa
jl
fidivrs
hlt
imul
jno
lcall
push
aad
mov
xchg
mov
cmp
sbb
mov
lret
dec
nop
mov
outsl
enter
stos
sar
sbb
call
cltd
nop
popf
aas
inc
sarb
mov
movsb
push
jecxz
aam
mov
push
and
dec
mov
jp
hlt
lds
sbb
add
pop
fimuls
nop
fildll
mov
insl
outsl
add
add
or
push
in
sbb
pop
sbb
jns
cmp
and
pop
mov
add
adc
mov
jo
loope
inc
aad
pusha
xor
xchg
cmp
std
jno
xchg
test
insb
aam
xchg
fnstsw
insb
stos
stos
mov
insl
addr16
xor
pop
xor
adc
pop
cld
cmp
xchg
sarb
lret
push
scas
andb
test
xchg
int3
lcall
or
jnp
nop
imul
jg
mov
loope
jnp
adc
ja
mov
insb
fsts
xchg
mov
pop
jnp
or
push
adc
loop
fisubrs
and
push
rcll
xor
cmpsb
sub
pop
push
sbb
push
inc
addr16
out
push
or
sub
xor
lret
jo
push
xor
rcrl
and
lods
fisttpl
dec
adc
mov
mov
addr16
or
lcall
xchg
iret
mov
inc
mov
mov
insl
xor
sbb
test
xchg
shll
decb
sbb
sbb
lock
xchg
sub
lods
cs
int
inc
jge
inc
fstp
cmp
push
adc
and
xor
xchg
mov
out
ret
mov
aaa
mov
jmp
rcrb
mov
hlt
adc
sbb
fcompl
cmp
mov
mov
push
fisttpll
lods
stos
ja
and
inc
add
push
imul
dec
or
out
pop
dec
and
xchg
xor
mov
inc
pop
sti
pop
bound
lahf
repnz
mov
sbb
xor
or
inc
ret
mov
pop
cmpsb
mov
mov
lods
out
pop
insb
pop
sbb
xchg
mov
pop
scas
adc
js
aaa
test
data16
jmp
cmpsl
loop
or
pop
push
adc
nop
jns
rcr
xor
xlat
fistps
push
inc
std
pop
mov
ret
sbb
sub
imul
into
mov
and
faddl
push
push
cli
add
test
ss
stc
imull
divb
addb
mov
repz
dec
adc
outsb
cli
lea
push
pop
mov
fbstp
unpcklps
sbb
stc
lock
mov
push
sahf
mov
cmpl
and
scas
mov
stos
xchg
inc
ret
rol
push
fsubr
in
and
dec
lret
pop
and
push
mov
dec
add
adc
jle
sub
rcrl
nop
mov
mov
mov
enter
push
mov
cmp
shll
xlat
mov
mov
movsb
popf
jo
es
rclb
fsubl
jne
imul
push
mov
rorl
popf
repnz
insb
aas
jmp
or
mov
mov
and
xor
ds
xchg
cwtl
inc
or
insb
cmp
addr16
and
mov
mov
mov
aad
and
sbb
daa
int3
cmp
dec
push
int3
mov
subl
dec
insl
stos
pop
repnz
and
push
cmpsl
jb
les
testb
fcoml
and
repz
xor
outsb
dec
jmp
iret
sahf
and
mov
and
jecxz
sbb
xlat
add
insb
fstpt
jbe
and
rorb
push
fistpl
mov
jnp
mov
pop
fwait
cmp
push
out
test
std
push
pop
adc
les
xchg
lea
dec
inc
test
jg
xchg
fs
sub
fistps
fisttps
mov
mov
inc
jb
or
mov
iret
pushf
ficompl
or
mov
insl
mov
push
mov
mov
outsb
ds
mov
jmp
mov
clc
loop
jns
sti
push
adc
insl
mov
sbb
push
loopne
mov
or
movsl
fisubrl
shll
push
sbbl
mov
imul
push
xchg
or
shrb
js
imul
xlat
pop
add
das
fsts
jg
inc
fs
mov
data16
jge
mov
repnz
xorl
sti
test
adc
mov
pop
jnp
ljmp
sub
sbb
mov
mov
cmpsl
popf
mov
pusha
mov
lret
push
jno
push
clc
or
testb
and
add
xor
xlat
jne
inc
dec
xor
inc
or
fsubr
inc
pop
lcall
neg
lea
sahf
addl
call
mov
test
aas
mov
dec
mulb
stc
rcll
pop
inc
mov
push
inc
add
mov
jne
sti
jge
or
adc
pop
imul
pop
jecxz
jle
and
xor
fnstsw
or
addb
clc
icebp
pop
add
jnp
adc
xchg
out
xchg
dec
push
gs
sti
jecxz
xorl
mov
movsb
xor
movsl
inc
je
push
jge
mov
das
fistpl
stos
push
sar
adc
sbb
inc
dec
mov
pop
dec
cmpsl
mov
mov
imul
or
andl
dec
sbb
rcr
xor
icebp
popa
enter
xor
sub
cmp
dec
call
insl
mov
scas
sbb
fdivrp
or
pushf
dec
dec
out
jnp
rcrl
inc
mov
mov
mov
imul
aad
or
cmp
stc
mov
mov
addb
push
xor
sbbb
mov
xchg
jge
xchg
xor
movlps
lcall
js
jp
sub
outsl
push
faddl
adc
stos
adc
dec
xchg
mov
movsl
hlt
loopne
jno
jmp
push
testl
push
fsubrl
jmp
jns
arpl
inc
push
push
mov
pop
movsb
jne
aam
lds
rcll
inc
insl
adc
jne
sbb
sub
push
rcrb
call
mov
shr
lahf
adc
mov
notb
nop
inc
pop
aad
std
adc
popl
dec
inc
mov
xor
je
ss
rcrb
and
test
out
sahf
dec
movsb
ss
fldcw
cltd
inc
repz
stos
xchg
lret
cmp
sub
mov
lods
adc
sub
outsl
sbbl
movsb
mov
loop
lods
rcll
out
mov
lcallw
faddl
rorl
filds
lods
jae
div
add
imul
stos
push
pusha
sarb
shrl
or
jg
mov
add
push
in
cmp
or
pop
cmp
lcall
pusha
push
or
fisubl
testl
adc
mov
imul
jne
cmc
rcrl
cmpsb
sub
xlat
ret
stc
inc
call
sahf
out
int3
mov
inc
adc
pop
mov
add
xchg
scas
cmp
add
int
jmp
ja
dec
or
push
jle
and
jne
leave
push
dec
rorb
lods
lret
and
xchg
cmc
stos
cmp
imul
pop
push
int3
fidivrs
dec
out
pop
and
sti
rolb
das
and
sarl
in
mov
cltd
subl
cmpsb
push
pusha
or
mov
adc
cli
fisttpll
sbb
call
scas
in
movsl
lahf
mov
xchg
ret
mov
sti
popf
cmp
das
jns
inc
ja
fidivrl
ss
cmp
fs
movsb
inc
fwait
cmp
loope
gs
daa
cmp
enter
cs
ja
add
out
out
dec
add
mov
mov
cwtl
cmp
fst
mov
aad
sbb
jl
push
dec
ss
in
and
push
scas
movd
or
mov
add
dec
clc
jle
add
popf
push
and
mov
mov
js,pn
mov
sbb
cwtl
mov
dec
cmp
xchg
leave
fstl
jecxz
add
in
sub
push
pop
adc
inc
or
or
or
insb
mov
and
sbb
and
jo
jp
inc
and
or
mov
sahf
test
xor
in
cld
cmp
mov
lock
lcall
mov
and
in
add
movsl
aad
mov
movsb
cmp
or
out
inc
cmpsb
mov
mov
inc
push
mov
cli
cwtl
fdivs
cli
in
mov
out
push
push
or
dec
aad
pop
imul
aaa
repz
rorb
or
inc
sarl
xchg
hlt
in
mov
adc
adc
sarl
push
hlt
pop
lret
lahf
popa
add
das
push
aas
gs
andb
loopne
dec
fsubrs
int
adc
pop
nop
lcall
test
ret
xchg
cmp
push
push
push
xchg
fbld
lods
adc
xor
xor
sbb
fstl
sub
xchg
pushf
xor
outsb
outsb
cmp
mov
inc
or
cmp
mov
push
jmp
in
cli
mov
push
scas
lret
cs
stc
mov
xor
add
push
or
inc
mov
cli
xor
pop
mov
adc
mov
sarl
mov
push
xor
sbb
stos
stos
addr16
rcrl
cmp
popf
leave
into
push
and
aas
or
ljmp
or
mov
lods
xchg
out
mov
dec
mov
push
dec
sbb
cltd
or
orb
repz
cmpsb
pop
jae
cli
xchg
dec
js
in
mov
hlt
fimuls
lcall
fldl
xor
jne
pop
dec
xchg
incb
xlat
mov
adcl
xor
rcrb
ja
lods
cmpsb
xchg
and
test
or
movsb
sbb
xchg
lret
cwtl
sbb
jo
xchg
fidivl
test
sbbl
mov
push
push
fisttps
jecxz
dec
add
pop
lahf
mov
xchg
jle
ret
mov
icebp
insl
cmp
mov
insl
mov
sbb
out
loope
ficomps
sarb
into
or
orb
sbb
and
es
insl
cli
dec
shrl
xchg
xchg
pop
jbe
push
mov
push
or
lret
repz
sub
outsb
test
adc
mov
xchg
loopne
lds
cmpsb
mov
add
jno
and
pop
sbb
test
lahf
outsb
test
and
test
int3
int
sti
sub
addr16
fidivrs
dec
push
fildll
jb
xchg
add
xor
mov
idivl
add
fcoml
popf
cmp
push
adc
cli
xchg
movsl
call
lahf
or
inc
and
sbb
lcall
xchg
inc
into
cli
inc
lds
adc
and
or
sub
movsl
inc
pusha
mov
fstl
mov
cmc
ret
jne
push
mov
lods
es
mov
stc
aas
mov
cltd
cmp
les
daa
das
xor
sbb
fnsave
pop
dec
popa
or
add
lret
add
jp
dec
xchg
pop
or
in
sub
sub
jns
aam
xor
jb
sbb
adc
fcomp
dec
dec
xor
shll
out
or
cmp
cmpsl
out
out
add
xlat
pop
dec
cmp
stos
mov
and
sub
sahf
mov
mov
mov
push
pop
jge
sbb
test
lds
aam
push
roll
inc
aaa
push
ds
inc
inc
or
in
jae
mov
fcomps
out
mov
push
jecxz
pop
adc
add
rcrl
mov
js
je
fimuls
mov
sahf
and
ret
jmp
dec
test
adc
adc
lret
dec
jo
mov
mov
or
cmp
xor
out
and
std
and
sbb
enter
jle
push
adc
movd
cmp
jmp
mov
idivl
xor
dec
ds
arpl
dec
add
mov
pop
push
or
lret
roll
or
shll
in
subb
xlat
and
xor
out
fidivrs
lret
jp
popf
jecxz
push
push
and
push
jbe
sbb
cmp
daa
aad
out
xlat
add
pop
stc
xchg
mov
sub
fsubrs
mov
cmpxchg
xchg
adc
inc
mov
insb
ds
adc
fdivrs
jbe
stos
test
pop
aaa
je
mov
and
sbb
addr16
popf
test
adc
adc
js
jmp
daa
icebp
sbb
pushf
push
add
xchg
xchg
push
jne
push
sbb
mov
leave
push
pop
fidivrs
pop
push
mov
aas
sub
callw
mov
sbb
jp
bound
test
aad
and
and
icebp
push
sti
out
ret
je
mov
push
cltd
lock
mov
les
cmp
outsb
sbb
movb
mov
jle
mov
andl
cmp
les
outsl
xorb
ja
shll
mov
mov
sbb
mov
aas
sahf
fists
dec
subb
lahf
arpl
aaa
aam
lock
dec
sub
dec
jle
fcomps
dec
pusha
popa
mov
ja
pop
pushaw
mov
popf
cmp
jbe
cmpsb
sub
daa
stos
jge
sbb
mov
cmpsl
insl
movsl
push
xchg
push
outsl
push
mov
dec
wbinvd
push
or
popa
mov
adc
sub
or
xchg
adc
pop
sbb
fists
pop
inc
daa
or
sarb
andb
cld
in
cmp
iret
mov
aad
stos
and
int
rol
or
jg
pop
stos
pop
xchg
jge
jl
or
mov
ds
mov
xor
pop
dec
ror
cmp
adc
xchg
pop
aad
mov
lds
or
lcall
out
sbb
mov
out
popw
sub
cmc
pop
pop
or
sub
pop
mov
mov
adc
bound
pop
stc
out
mov
lahf
nop/reserved
or
mov
mov
lahf
rcrb
inc
cli
ds
shlb
and
add
clc
add
cmp
sub
inc
jl
push
push
aas
mov
andl
adc
notb
mov
fwait
jmp
mov
out
mov
mov
xor
sbb
push
mov
movb
pop
jae
cmp
lds
or
aaa
out
and
ror
mov
addr16
adc
cmp
aas
dec
adc
cmp
pop
fs
cmp
sbb
inc
jns
xor
push
sub
call
rclb
mull
dec
bound
mov
arpl
clc
loope
hlt
out
mov
repz
arpl
or
mov
mov
or
add
lcall
cmp
test
mov
pop
mov
fwait
imul
stc
shlb
negl
in
sub
push
addr16
push
aad
addl
mov
lock
rcl
ret
mov
aas
aad
xchg
mov
xchg
add
iret
subl
outsb
int3
sbb
jmp
push
sti
jae
push
int
push
arpl
mov
sub
icebp
push
pusha
add
sub
cld
lahf
enter
cmp
dec
in
mov
mov
stc
sub
cmp
sub
es
add
mov
pop
icebp
xlat
jne
popa
mov
insb
fdivrl
int3
mov
rcrl
daa
pop
pop
mov
add
nop
notb
in
pop
jb
sbb
and
cltd
mov
cli
ret
cmp
stc
xchg
push
jae
dec
xor
loop
mov
sbbb
cmp
xor
nop
push
ljmp
out
push
out
jnp
mov
jne
or
test
fstpl
dec
stos
inc
mov
dec
mov
xchg
int3
inc
ret
mov
cmp
sub
jmp
sbb
xchg
stc
jge
pop
cmp
push
insl
sbb
enter
jno
dec
mov
loopne
inc
add
push
js
mov
pop
shrd
orb
iret
out
nop
jbe
and
xchg
push
mov
loopne
rcll
and
adc
sti
test
jmp
pop
add
jl
push
into
addr16
int
mov
add
cmp
push
pop
cltd
pusha
cltd
fcomi
add
mov
xchg
cmc
cmp
pop
sub
adc
jge
lret
fbld
test
in
jl
mov
push
cmc
std
das
loop
pop
add
jns
sbb
rol
or
popa
cli
push
cmp
es
lds
js
xor
push
fs
cmp
aaa
xchg
adc
inc
cmp
mov
mov
xor
jne
mov
or
and
push
ret
mov
das
test
fistpl
insl
dec
add
pop
movsl
cmc
repz
mov
cmp
lock
mov
adc
mov
add
and
lea
sti
sbb
or
cltd
xchg
sbb
std
xchg
add
cmp
imul
push
lcall
jg
and
out
sub
sti
repnz
mov
mov
and
xchg
pop
mov
xchg
xlat
pop
push
loop
sahf
gs
mov
outsb
out
leave
in
ds
outsb
mov
or
cs
pushf
imul
mov
js
xchg
pushf
jnp
xor
icebp
ficomps
mov
out
xchg
sbb
imul
inc
sahf
pusha
and
scas
lret
fisttps
movsl
mov
ror
xchg
dec
mov
inc
rcrb
pop
add
out
arpl
sbbl
lds
leave
fcoml
sub
mov
xchg
adcl
jne
inc
dec
jne
nop
negb
test
xchg
inc
cld
cmp
fs
mov
adc
add
mov
fbstp
sub
imul
fld
bound
addr16
lret
insl
cmc
sub
mov
shll
lahf
mov
out
push
fcompl
arpl
in
add
cmp
ljmp
call
or
sarl
fistpl
cmp
clc
loop
ljmp
das
jecxz
lret
sub
mov
sbb
in
call
pop
mov
insl
fiadds
cmp
and
lds
cmc
mov
cmp
out
sbb
stc
pop
sub
mov
mov
add
xchg
pop
loop
push
push
push
imul
aam
mov
cs
jnp
sbb
xlat
dec
and
sbb
ficomps
es
pushf
into
mov
xchg
test
add
adc
and
xor
ret
and
xor
add
adc
fs
je
inc
mov
inc
movsb
push
mov
test
add
adc
and
xor
ret
and
xor
add
adc
fs
je
inc
mov
inc
movsb
push
mov
test
add
adc
and
xor
ret
and
xor
add
adc
fs
je
inc
mov
inc
movsb
push
mov
test
add
adc
and
xor
and
sahf
dec
add
arpl
in
sbb
xchg
jge
sub
pop
xor
sbb
add
pop
sub
mov
mov
xrelease
jns
imul
cmp
arpl
jae
cmp
jmp
ret
xchg
shrl
add
adc
inc
or
arpl
jae
cmp
lret
mov
ret
jmp
in
jae
adc
outsl
or
enter
cwtl
lcall
lods
fwait
loop
iret
popa
inc
movsl
mov
js
push
jp
stos
push
sub
pop
mov
testb
adc
lods
sub
jmp
or
xchg
adc
sub
push
mov
call
clc
ret
stc
cmc
fmuls
dec
adc
dec
mov
les
imul
sub
jae
xchg
jl
or
lods
andb
stc
cmc
scas
in
xchg
jo
es
or
arpl
jae
jmp
out
repz
mov
sti
xchg
xchg
test
jbe
ficompl
stos
inc
mov
mov
shr
loop
repnz
cmc
adc
sub
push
sub
jae
cmp
inc
mov
test
inc
jecxz
repz
dec
xor
ss
and
push
dec
jmp
and
mov
lahf
mov
xchg
pop
aas
push
das
push
sub
imul
arpl
cmp
cwtl
pushf
fisttpl
mov
cli
jne
cmp
and
arpl
jae
cmp
jmp
ret
mov
xrelease
jns
imul
cmp
arpl
jae
cmp
jmp
ret
mov
xrelease
jns
aas
scas
and
cmpsl
xor
and
mov
ss
mov
xchg
and
pop
ret
adc
rcll
or
sbb
int
add
sbb
cmp
jl
movsl
inc
and
scas
push
inc
fwait
pop
push
mov
push
push
fimull
jo
aas
cld
jns
clc
hlt
mov
fcomps
dec
xor
je
dec
cmp
cmp
inc
jecxz
pop
push
jbe
icebp
xchg
mov
sbb
aam
or
mov
mov
cmp
addl
xchg
stos
aaa
cld
subb
sti
pop
in
and
scas
loopne
inc
xchg
das
add
pop
mov
fmuls
imul
or
jecxz
pop
pop
mov
xchg
push
or
sbb
mov
dec
aam
loop
add
add
bound
gs
in
shll
pop
dec
in
fcoms
enter
cmpsb
fcompl
faddl
adc
out
jnp
cmp
jno
mov
test
bnd
shl
sub
lods
add
rcrl
fstpt
adc
inc
sbb
adc
cwtl
jmp
ljmp
jbe
jl
idivb
ja
scas
icebp
mov
ds
cmp
rol
push
bound
negl
mov
in
adc
idivl
cmp
push
push
jns
adc
fiadds
or
sbb
mov
mov
xorl
int
adc
inc
and
inc
xor
jmp
outsb
mov
aam
mov
mov
icebp
out
and
pop
js
popa
out
jp
jo
jno
xorb
adc
pop
inc
lcall
mov
and
xchg
aaa
je
addl
push
in
roll
xor
test
xchg
sbb
roll
xchg
or
adc
outsb
fcmovbe
adc
push
mov
jo
ficompl
lods
inc
adc
xlat
aam
sub
add
lcall
negb
mov
in
inc
mul
lods
mov
insl
rcll
push
cmc
imul
das
js
xor
hlt
test
mov
cmc
add
movsl
mov
push
addl
push
push
enter
jg
lea
insb
mov
xor
adc
jl
sbb
inc
pop
lock
adc
inc
addl
cmp
cmpsl
dec
and
mov
pop
or
fdiv
outsb
fwait
lea
cmpsb
out
mov
add
bound
push
jbe
and
stos
test
repnz
clc
rolb
fildll
popa
push
divb
int3
add
int3
pushf
lods
inc
inc
hlt
scas
pop
aas
push
mov
push
adc
test
mov
mov
fs
fcmovnbe
mov
orb
aam
leave
fdiv
nop
cld
cmpsb
mov
push
lahf
mov
test
and
push
outsb
add
aad
push
pop
pop
push
inc
mov
pop
jge
xor
or
push
cltd
push
pop
shr
mov
leave
test
cmpsl
cmpsl
andl
popa
xor
sub
jle
jp
cmp
lret
out
rol
push
sbb
fs
mov
loopne
aaa
loop
push
push
bound
mov
int
jp
roll
aam
push
aam
mov
lds
scas
inc
jnp
in
mov
jns
aam
push
icebp
or
leave
enter
sub
shrl
leave
arpl
push
mov
loopne
popf
jns
xor
cmp
push
adc
dec
inc
mov
or
jnp
inc
adc
pop
pop
nop
loop
addr16
mov
mov
ret
ret
pop
jb
je
xchg
insl
xor
adc
loop
dec
ret
and
sbb
test
pop
dec
repz
loop
cmp
push
adcl
ret
mov
aad
adc
jg
into
ja
hlt
lods
imul
add
imul
jp
ror
xor
adc
gs
js
add
cmp
cltd
lret
mov
mov
scas
pop
xchg
add
jge
pop
es
mov
jnp
mov
add
stos
shll
xor
movl
pop
jnp
jo
jp
cli
les
outsl
fneni(8087
inc
lea
mov
shrb
dec
arpl
and
scas
int
arpl
push
scas
stc
mov
mov
icebp
adc
std
aad
mov
fisubrl
add
add
sub
sub
imul
inc
cs
add
pop
push
addr16
mov
lahf
add
push
cs
aam
cld
pop
idivb
out
dec
adc
add
jns
aas
rolb
enter
push
mov
dec
gs
sarb
inc
xchg
icebp
and
ljmp
cmpsl
and
or
dec
nop
outsl
cmc
repnz
mov
das
loope
add
or
inc
pusha
mov
nop
cmp
les
xchg
add
fwait
sub
inc
cmp
nop
fldenv
add
inc
je
fisubl
push
mov
ss
inc
xchg
sbb
jle
inc
in
frstor
aad
outsl
mov
shlb
aad
add
mov
ja
inc
push
js
arpl
dec
xchg
adc
lods
outsl
bsr
scas
cmpsb
mov
test
cmpsl
sahf
or
pusha
jge
sub
addr16
add
inc
or
mov
add
int3
cmp
es
lds
aam
ret
aas
mov
push
movsb
aas
mov
lret
clc
mov
mov
pusha
or
pop
cmp
mov
std
cmc
aas
jno
sti
and
jae
into
lcall
or
shr
push
cwtl
div
push
sbb
fdecstp
inc
mov
subb
enter
xor
ja
loopne
and
aam
push
sub
mov
bound
sbb
pop
lods
sbb
mov
imul
mov
sahf
cmpsl
add
sahf
push
popf
ljmp
adc
or
mov
inc
push
das
push
decl
imul
jnp
mov
sbb
mov
ds
fs
leave
or
js
inc
jne
fstps
loope
mov
pop
mov
jge
jmp
pop
add
cli
inc
pop
stos
jle
mov
clc
xchg
cltd
add
dec
adc
fimull
mov
inc
subl
ret
pop
loop
jg
insl
push
insl
jg
sbb
js
xchg
sbb
cmp
jecxz
jge
mov
sub
cltd
bound
mov
icebp
loop
rclb
or
adc
loopne
mov
mov
jl
mov
or
ret
xchg
sahf
sub
mov
sub
mov
xorb
xor
adcl
sti
std
ss
mov
jno
xchg
jp
sbb
leave
sbb
cmpsl
das
adc
xchg
dec
xchg
call
mov
test
sahf
fwait
outsb
mov
aad
aaa
sub
mov
cmpsb
adc
sbb
add
cli
test
inc
nop
insb
loop
xor
int
fstpl
sahf
loopne
mov
call
adc
mov
out
mov
jle
punpcklbw
jno
push
or
xchg
sub
adc
push
ljmp
mov
es
inc
js
mov
scas
in
and
and
movsl
add
stos
xchg
jmp
jl
xor
rorl
pop
push
cld
cld
dec
inc
mov
out
jnp
and
add
and
in
aam
push
fcmovnb
xor
cmp
imul
adc
lock
xor
xlat
jnp
mov
popl
pusha
mov
mov
jmp
pop
out
pop
nop
xor
test
popa
enter
xchg
iret
fwait
push
cmp
xchg
dec
ja
lret
mov
pop
out
and
lock
cmpsb
popf
clc
push
ds
xor
in
mov
xchg
das
shll
mov
mov
lds
sbbb
cmc
int3
leave
rcrb
call
add
inc
sbb
mov
daa
push
ret
mov
mov
xchg
testb
adc
pop
sbb
pop
jns,pt
les
cmc
leave
jno
rol
test
ss
fisttpl
pcmpgtb
mov
movsb
or
roll
dec
dec
ret
ret
icebp
sub
mov
filds
or
rorb
out
call
or
insb
fiaddl
push
push
clc
and
imul
fistps
gs
mov
mov
sub
push
aad
and
and
lds
xor
test
imul
push
jl
and
orb
filds
and
es
mov
dec
das
es
call
orl
dec
iret
testl
nop
ret
push
jp
mov
fwait
push
add
loopne
mov
mov
dec
sahf
shll
rcrb
xchg
mov
lds
adc
mov
sub
jno
pop
push
je
pop
movsb
call
les
test
pop
into
fnstcw
add
pop
mov
mov
jmp
mov
fsubrs
maxps
sub
xchg
or
call
enter
ret
and
aaa
jae
xchg
push
cld
pusha
and
adc
aas
out
mov
and
stos
mov
xchg
test
inc
xchg
lds
jno
inc
push
lahf
adc
inc
add
and
mov
add
incl
cli
mov
xor
inc
xor
inc
inc
jo
mov
out
sahf
cmp
xlat
ss
jmp
mov
adc
movsb
aam
and
js
jne
dec
cmc
add
push
sbb
xorb
mov
jbe
sbb
insb
in
test
push
xchg
mov
in
xchg
jae
dec
jae
pop
mov
cmp
push
mov
xchg
cs
or
sbb
fldl
hlt
jecxz
jo
loop
ljmp
jp
mov
push
sub
jle
jp
xchg
das
arpl
sub
mov
fists
sub
sbbb
jbe
sub
stos
dec
mov
sbb
and
cs
leave
mov
jl
sbb
rol
jle
pop
and
mov
dec
cs
dec
inc
push
ret
pushf
push
inc
cmp
popf
aam
popa
and
mov
cmp
jns
cmpsb
inc
add
xchg
mov
and
icebp
xor
cmp
insl
mov
leave
xchg
xchg
lods
adcl
add
cs
inc
stos
cmp
mov
stos
and
sub
es
xchg
add
jl
inc
xlat
fimull
gs
mov
es
out
xchg
xor
xor
xor
cmp
je
xor
xchg
push
lods
dec
adc
cwtl
mov
jle
mov
jns
mov
iret
mov
lea
js
hlt
mov
fcoml
cli
btc
mov
mov
and
lods
add
popf
adc
in
ja
adc
je
cmp
adc
pop
or
add
enter
ss
mov
xchg
int3
pop
dec
push
jecxz
push
fisttpll
pop
in
sub
cmpsb
jne
mov
leave
xchg
sub
repz
loop
sti
ret
xchg
ss
mov
faddl
in
mov
sub
sub
mov
lods
hlt
push
cmpsb
loope
lock
movsb
and
xchg
outsb
cmc
movsb
movsb
in
ficomps
and
add
clc
mov
push
fwait
adc
clc
mov
or
lods
xor
or
mulb
out
sub
ficoms
push
lcall
inc
push
testb
addl
lret
int3
push
jg
clc
jo
test
push
push
inc
lock
mov
or
mov
ja
pcmpeqd
xchg
mov
push
xchg
aaa
ljmp
xor
int
mov
jge
in
out
pop
inc
jle
mov
cli
clc
scas
dec
sub
lahf
xchg
xor
pop
sub
je
mov
addr16
push
push
xchg
lods
das
sbb
data16
ret
sub
pop
sub
stc
ds
lea
stos
faddl
lcall
mov
ret
lods
cmp
mov
cltd
mov
pop
lcall
mov
imul
out
rsm
push
xchg
mov
and
xor
out
sub
popf
push
and
pop
push
cmp
into
xor
aad
ret
and
fmull
add
enter
fildll
aad
fstl
or
mov
lock
sti
push
repnz
pusha
movsl
cmc
adc
or
cmpb
rol
mov
insl
push
gs
cmpsb
push
xor
sbb
push
mov
xchg
jmp
dec
je
mov
and
add
adc
fldenv
add
jg
mov
adc
out
inc
dec
ljmp
sub
adcl
dec
loopne
dec
mov
aad
addl
inc
add
mov
pop
sub
lret
xlat
iret
mov
data16
arpl
in
pop
lods
mov
xchg
mov
stos
adc
shrl
xorl
dec
mov
pop
pop
xor
mov
enter
push
cmp
clc
dec
scas
sbb
rclb
sub
pusha
and
stos
push
es
out
xchg
idivb
test
int3
outsl
popf
cmc
and
leave
mov
jle
mov
jbe
lds
loopne
jnp
xchg
push
and
mov
dec
pop
adc
sub
inc
jns
inc
psadbw
xchg
mov
push
cli
mov
sub
shl
cltd
sbb
enter
push
and
cmp
fdivrl
and
lea
incb
jp
push
into
insl
sbb
add
outsl
dec
inc
or
mov
xchg
and
mov
scas
and
daa
push
aam
xor
jmp
incl
jne
jl
adc
cmp
outsl
bound
sti
lcall
dec
dec
jle
pop
mov
xor
imul
mov
clc
out
push
mov
fcomps
mov
mov
adc
imul
adc
fstps
lods
jl
mov
mov
jmp
mov
int
push
inc
aaa
loop
ficoml
gs
sbb
jecxz
inc
clc
call
outsl
push
push
sbb
add
jbe
xchg
adc
push
mov
and
js
outsb
sbb
push
push
pop
dec
dec
test
xchg
push
ficoml
outsb
xchg
call
rclb
dec
pop
push
sub
push
scas
jnp
push
inc
test
dec
dec
push
or
mov
mov
mov
mov
sarb
inc
dec
fistl
mov
decl
int3
sbb
out
out
call
sahf
ljmp
cmc
movsb
jae
or
divl
jge
pop
mov
dec
movsb
dec
add
and
push
or
pop
enter
push
sub
jne
nop
push
pavgb
stos
jl
dec
mov
jg
xchg
cmpsl
pop
addr16
in
enter
pop
repnz
fidivs
push
push
jbe
das
mov
movsb
add
scas
out
xor
ljmp
movsb
push
pop
mov
mov
push
add
das
xor
dec
inc
inc
pop
imul
mov
test
dec
fwait
pop
add
test
mov
inc
mov
xchg
dec
aas
sbb
gs
cmp
mov
xchg
and
sbb
repnz
dec
js
cmp
cmc
loopne
jle
push
hlt
pop
cmpxchg
repnz
push
add
loope
sub
es
mov
xor
cmpsb
test
cmp
adc
inc
insl
mov
movsl
sbb
in
add
cmp
pop
xor
mov
sub
sete
and
clc
sti
cmp
out
adc
lock
std
cwtl
outsb
xchg
add
jl
nop
pop
dec
add
mov
pop
and
sahf
add
insl
sub
dec
insb
enter
cmp
imulb
test
scas
adc
insl
cmpsb
cmp
lds
add
scas
mov
jne
jo
or
or
or
repnz
ror
xchg
rolb
loope
divl
mov
lret
incl
sub
fisttpl
push
push
add
clc
dec
out
jb
mov
inc
push
jecxz
movsl
idivl
aaa
mov
and
lret
push
insb
movsl
xchg
int
mov
inc
shll
int3
jne
push
enter
sub
jle
inc
call
insb
std
cmpsl
push
push
ret
jle
mov
out
mov
into
adc
xor
inc
stos
sub
shl
arpl
stos
in
cmp
sub
divl
dec
cmp
push
mov
mov
aam
push
cmp
cmc
loope
mov
and
sub
aam
stos
adc
add
adc
mov
ret
add
adc
movsl
mov
subb
pop
hlt
push
iret
mov
inc
and
sub
pop
push
out
lcall
ja
push
js
add
dec
fmull
add
lcall
or
sub
inc
push
pop
mov
cmpsb
xchg
fstpl
lret
andb
jae
mov
jmp
imul
and
dec
popf
lret
aam
scas
or
fists
cmp
inc
aaa
ljmp
stc
inc
sub
icebp
cs
or
fldcw
out
push
xor
popf
mov
jge
push
dec
out
sarl
push
jmp
xchg
sahf
mov
xor
mov
mov
aad
push
add
popa
mov
and
and
das
and
pop
inc
jno
inc
in
push
adc
push
aas
mov
jge
stos
sbb
mov
adc
push
and
or
iret
mov
add
xor
or
rol
and
mov
cmp
adc
mov
xor
fnstcw
push
xchg
inc
aaa
out
xchg
cmc
int3
je
sbb
es
sbb
push
pop
testl
sub
lcall
mov
psubd
cmpsb
mov
xchg
push
outsl
lock
std
sbb
fistps
lahf
cmc
add
push
rcrl
clc
hlt
notl
leave
jnp
dec
sub
inc
fwait
push
fmuls
mov
fimull
dec
data16
add
repnz
sbb
mov
gs
sbb
push
movsb
orb
push
pop
push
iret
test
out
cmp
pop
mov
push
push
mov
xchg
imul
adc
pop
mov
fcmove
lcall
inc
js
lret
mov
jl
xor
nopl
cmpsb
xchg
add
stc
sti
sub
xchg
jns
repnz
mov
test
push
sub
mov
cs
flds
dec
mov
inc
xor
shll
or
and
lcall
lods
push
inc
sbb
inc
and
stos
add
cmp
mov
cmp
pop
out
dec
cli
mov
push
out
add
xchg
pop
rol
jecxz
cmc
mov
inc
xchg
cld
iret
stos
adc
adc
pop
loop,pt
mov
or
push
fdivr
sbb
cmpsl
mov
aas
mov
push
or
mov
lcall
cmp
ret
push
inc
mov
es
mov
dec
repnz
jle
leave
sub
scas
inc
or
pop
dec
dec
jns
pop
jo
mov
adc
test
shll
mov
mov
add
mov
mov
xchg
or
sub
test
jns
push
cmpsl
dec
aas
out
int
add
sub
sub
lahf
aas
adc
incb
shl
jecxz
mov
xchg
lret
dec
sbb
andl
adcb
fs
out
jo
cld
movsl
pop
pop
loope
into
push
stos
jb
ljmp
insb
cmp
mov
lods
outsb
test
fists
loope
fwait
sti
mov
mov
cld
pop
mov
int3
lret
mov
pusha
out
and
mov
js
mov
add
sbb
cld
repnz
scas
jg
cld
pop
push
dec
xchg
movsb
es
inc
dec
nop
pslld
das
in
sbb
xchg
xchg
mov
push
or
rcl
mov
xchg
mov
fwait
or
pop
daa
lret
into
cmc
and
add
inc
test
in
or
rclb
ds
cmp
xchg
and
adc
out
stos
lret
xchg
sarb
or
sub
pop
jno
pop
addr16
add
xchg
cmp
fnsave
loope
cmpsb
std
xchg
lret
mov
inc
add
push
adc
dec
scas
pop
andb
pushf
and
add
pop
iret
jge
pop
sbb
push
imul
and
movsb
xor
fstpt
aaa
dec
imul
in
jnp
neg
shlb
insb
sbb
outsb
popf
aam
xor
xor
adc
jmp
in
dec
test
sbb
cmp
or
mov
mov
or
mov
cmpsl
xchg
icebp
lods
adc
push
mov
in
and
xchg
imul
push
sub
jae
cmp
jmp
ret
mov
xrelease
jns
imul
cmp
arpl
jae
cmp
jmp
ret
mov
xrelease
jge
and
dec
inc
cmp
arpl
xchg
in
mov
mov
repnz
add
xor
inc
cmp
arpl
xchg
inc
or
mov
mov
pop
rcrl
or
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
sub
inc
xchg
scas
dec
jno
scas
rol
jne
mov
add
add
or
pop
push
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
add
add
add
cld
add
add
add
add
add
movsl
add
add
add
add
add
add
mov
add
add
and
xor
add
add
push
inc
add
add
add
add
fadds
inc
add
add
add
add
movsb
add
add
add
xor
or
out
lcall
add
test
jg
jo
jne
pop
add
add
jecxz
pop
add
add
add
cld
add
add
add
add
add
out
out
add
push
add
add
add
add
add
bound
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
pop
add
add
mov
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
mov
cmp
add
and
push
add
add
jno
bound
mov
add
add
add
add
add
add
js
test
addl
add
testb
add
bound
bound
sbb
push
add
add
add
pop
movb
add
add
add
mov
add
add
add
add
jecxz
xchg
add
add
add
add
and
js
bound
inc
add
sub
add
add
add
add
add
add
xchg
mov
add
inc
add
repnz
dec
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
jle
jbe
test
mov
add
add
add
add
add
add
bound
into
add
add
jae
movb
add
add
add
add
stos
add
add
into
add
add
add
add
add
add
add
lret
add
add
add
add
or
add
add
add
xchg
add
add
pop
add
das
add
jo
loopne
jne
in
push
add
add
jo
out
sbb
push
add
add
add
add
lods
add
add
add
add
out
ds
add
xchg
push
add
add
add
add
roll
add
add
add
out
jge
adc
ret
add
add
jecxz
incl
imul
add
add
aaa
add
add
or
add
jp
add
add
mov
add
add
add
add
add
add
add
add
aas
add
add
add
lcall
add
add
sub
aaa
add
add
dec
add
add
add
add
add
mov
ret
jo
push
std
js
mov
insl
lods
data16
insb
sbb
in
mov
fmull
mov
inc
push
subb
cli
out
xchg
and
xchg
call
xchg
xchg
imul
test
ja
aaa
add
dec
mov
mov
mov
leave
xor
cltd
inc
dec
push
out
cmp
pop
sbb
rcr
cmp
arpl
decb
sbb
mov
fimull
xchg
cmp
lret
push
mov
inc
in
addl
movsb
call
negb
cmp
or
aam
repz
push
adc
mov
outsl
push
loop
repz
jb
fsts
mov
push
push
mov
pop
adc
xor
xor
jb
and
insl
mov
sub
clc
pop
cmpsb
sub
aas
jbe
outsl
sbb
inc
fcmovnu
rorb
pop
jbe
test
gs
mov
bound
shl
dec
jb
mov
sub
jb
jecxz
xorl
das
and
mov
test
insl
jmp
jns
adc
daa
sbbl
popa
push
cmp
adc
pop
rorb
add
add
cld
add
inc
in
repz
dec
inc
dec
out
sbb
daa
ljmp
push
imul
int
ds
push
inc
rcl
mov
cmp
add
jecxz
push
mov
lret
loopne
sbb
pop
mov
cmp
fstl
and
cli
mov
sbb
repz
mov
mov
inc
dec
push
pusha
add
or
pop
push
mov
movsl
fmul
aas
add
or
and
push
pusha
lcall
aad
es
push
xor
and
inc
dec
cli
stos
leave
stc
jns
movsb
and
xchg
inc
lea
add
push
in
ljmp
in
js
call
pop
add
xlat
pop
dec
xchg
in
and
repnz
push
lahf
mov
aas
mov
mov
add
repz
or
shll
into
xchg
mov
dec
mov
lret
insl
dec
loope
push
sbb
and
ss
or
jbe
fcomps
ret
test
jg
lock
and
pop
lret
mov
sbb
add
mov
test
ds
cmp
and
aaa
xchg
fldcw
outsl
cwtl
and
sbb
xorl
aad
or
out
mov
cli
mov
add
cld
dec
test
in
add
stos
xchg
fidivl
dec
out
jl
xchg
ss
dec
fstps
shlb
pusha
std
andl
pop
in
pushf
xor
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
