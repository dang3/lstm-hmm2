fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
in
hlt
scas
les
les
jno
das
inc
pop
push
jg
outsl
add
adc
in
hlt
scas
les
mov
test
xchg
mov
aas
je
xor
push
adc
add
adc
in
hlt
scas
les
mov
test
xchg
iret
fs
je
aaa
insl
jp
dec
sub
dec
xor
lods
int3
hlt
out
mull
ljmp
scas
pop
mov
pop
ja
cmp
mov
push
adc
dec
daa
xor
pop
or
xlat
lds
or
imul
and
sbb
jg
or
pop
mov
mull
lcall
ds
test
outsl
popa
fcmovbe
mull
mov
fsubs
cld
xor
ror
fwait
jb
fidivrl
xchg
add
push
dec
sbb
cmp
iret
in
add
ja
test
mov
loopne
or
pop
add
orl
daa
jnp
pop
mov
push
jl
out
sbb
jg
cmp
pop
jl
mov
lahf
aam
movsb
pushl
fs
je
inc
pop
push
jg
outsl
add
adc
mov
lahf
mov
enter
loope
aad
and
jp
jnp
cmp
or
inc
add
fiaddl
loop
fsubs
add
add
adc
jbe
adc
sti
nop
out
in
aad
movsb
shll
fs
je
inc
pop
push
jg
outsl
add
adc
in
hlt
scas
les
mov
test
xchg
iret
fs
je
inc
pop
push
jg
outsl
add
adc
in
push
jg
lock
jle
sbb
cmp
add
mov
lea
push
xchg
mov
iret
push
int
sub
mov
sahf
inc
cmc
or
inc
push
mov
sbb
mov
jne
call
cli
push
add
hlt
jnp
sbbb
scas
jbe
jae
add
ficompl
mov
fcmovbe
push
lcall
bound
sbb
mov
cmc
mov
mov
dec
or
push
testl
scas
xor
rcrl
icebp
xor
and
ret
inc
addr16
xor
inc
adc
jae
mov
daa
out
sbb
in
cmp
pushf
sbb
test
test
loopne
sub
cwtl
test
cld
out
jge
inc
xor
roll
and
sub
jmp
push
les
cmp
jge
mov
rolb
mov
cli
dec
scas
inc
mov
push
mov
dec
mov
sub
pop
mov
mov
sub
pop
outsl
imul
movsl
loopne
mov
xlat
mov
mov
lods
sub
arpl
sub
faddl
or
pop
mov
lret
subb
pushf
mov
cmp
dec
ljmp
pop
mov
mov
ja
jge
out
jp
das
dec
inc
mov
mov
scas
test
inc
lahf
xor
mov
mov
pop
comiss
xor
aaa
mov
mov
test
pop
push
aas
shl
xor
rcrb
jne
push
lahf
pop
push
ljmp
xchg
jg
test
fwait
dec
movsl
push
jns
jo
jbe
mov
jmp
in
aaa
sbb
adc
add
in
push
push
dec
dec
leave
cwtl
cltd
xor
mov
test
cmp
mov
js
jnp
mov
dec
pop
push
in
subl
pop
jns
mov
jns
insb
rolb
add
lds
into
xchg
add
gs
pusha
and
lock
pusha
dec
lret
stc
pushf
sub
jge
repnz
push
test
xor
std
das
stos
test
inc
mov
bound
sahf
jp
xchg
adc
ss
mov
jmp
mov
pop
inc
mov
adc
xor
mov
out
sub
jmp
mov
popa
mov
xchg
int
push
es
mov
mov
mov
mov
movsb
cmpsl
int
mov
stos
xchg
sbb
loopne
mov
xor
out
jns
or
push
leave
iret
out
clc
clc
xor
mov
adc
mov
fwait
dec
lret
lcall
pop
jae
scas
in
ja
or
iret
into
sub
test
fxch
jns
mov
mov
pushf
mov
inc
or
push
mov
fbstp
add
inc
jno
fldenv
or
in
ds
icebp
das
scas
mov
lods
cmp
xor
dec
push
pushf
cwtl
mov
add
lahf
add
shll
es
xor
add
pop
xor
xchg
mov
jnp
lret
push
in
test
pop
aam
xchg
mov
inc
shr
les
push
lahf
shlb
adc
rcr
mov
cld
pop
jle
sbb
or
outsl
and
xchg
dec
pop
mov
sbb
mov
shlb
mov
cld
leave
ret
gs
jg
lds
push
outsl
in
pause
and
push
cmp
cmpb
cmp
sbb
loopne
adc
cmpsl
dec
movsl
sub
dec
das
xchg
orb
es
enter
fisubl
decl
push
js
or
pop
push
loop
xchg
and
mov
aas
mov
nop
add
or
mov
sbb
xchg
ljmp
pop
jae
push
push
mov
xchg
cmp
mov
ja
movsb
jo
sarl
pop
inc
mov
cld
shrb
inc
pop
inc
mov
cmpsl
push
pop
fwait
mov
jp
mov
lods
lcall
lret
mov
xor
mov
mov
sbb
and
lahf
loop
aaa
mov
adc
jge
call
mov
inc
fs
repz
leave
stos
mov
aas
lcall
push
mov
adc
rorl
loope
push
cmpsb
xchg
mov
add
add
idiv
aas
inc
lret
xor
push
leave
fcomip
and
loop
jecxz
add
jge
dec
xchg
aad
in
sub
dec
xchg
dec
out
ret
push
rorb
jbe
xchg
call
js
xor
xor
mov
lods
cwtl
fisttps
pusha
pop
xor
stc
enter
mov
scas
adc
fwait
out
les
andb
mov
aam
insl
aas
clc
test
or
xchg
faddl
jo
orb
add
inc
dec
xor
divl
addr16
mov
dec
pop
stos
cmp
push
stos
mov
xor
lds
push
in
mov
clc
xor
inc
mov
rcll
adc
hlt
scas
lods
cmc
mov
xor
gs
add
jg
aas
add
mov
clc
xchg
add
pop
repz
push
sbb
repnz
mov
aas
inc
and
dec
or
jmp
add
test
icebp
mov
lret
sub
cmp
push
repz
adc
nop
push
fiadds
or
in
test
lahf
and
mov
ret
insb
imul
add
xchg
je
ror
cmc
cmp
stos
xchg
or
add
cwtl
mov
in
push
sbb
mov
arpl
mov
lret
test
push
pop
rcrb
cmpl
inc
lret
dec
inc
mov
enter
pop
lock
ficoms
jnp
sbb
test
leave
rorb
lret
rolb
fwait
cmc
rorb
push
out
xchg
sub
icebp
push
jmp
je
lea
test
pop
shr
fidivs
pop
cmp
or
and
add
inc
outsb
inc
mov
dec
mov
scas
sahf
lret
lock
divl
and
ss
lock
out
sub
sbb
dec
pop
loope
xchg
add
ja
data16
push
scas
add
je
pusha
cmc
pop
out
adc
lock
mov
mov
enter
cmp
in
cmp
cmp
push
pop
jge
andb
das
xor
ret
jo
push
mov
adc
push
cs
cmp
mov
adc
mov
or
pushw
and
popf
popa
xchg
push
xchg
and
xchg
cmp
and
or
add
mov
lret
mov
cwtl
xchg
jo
clc
sbb
pushf
cmp
mov
sub
cmp
aam
mov
dec
jle
std
lret
movsl
adc
cmpsb
mov
pop
cmp
adc
orb
mov
sub
cmp
push
sub
fs
add
add
shrl
scas
sub
outsb
sub
dec
aam
sarb
scas
sub
push
outsl
cmpl
xchg
xor
das
mov
pop
dec
pushf
rorb
jge
cmp
adc
inc
std
int3
adc
mov
mov
xchg
les
pop
dec
xchg
fstpt
jnp
cwtl
cmp
xchg
sbb
sub
repz
add
cmpsb
inc
sti
loopne
mov
testb
insl
mov
jmp
stc
jns,pn
and
sub
pop
jecxz
dec
add
popa
mov
lret
push
xchg
stc
hlt
and
pusha
inc
ja
sahf
scas
or
pop
fwait
dec
push
stos
imul
jmp
sub
inc
jge
insb
pop
jl
adcb
loop
fidivrl
les
bound
lret
das
jae
sbb
cmp
pushf
scas
cmp
in
int
imull
mov
je
cmc
ficompl
xor
lods
inc
dec
test
dec
inc
jno
xlat
xor
pop
pop
movsb
decl
push
jl
pop
orb
pop
mov
xchg
popf
call
inc
xchg
in
xchg
scas
inc
cmp
popf
shl
sub
pop
je
inc
decl
jbe
sbb
aam
jns
mov
pop
in
js
xchg
lods
and
rclb
inc
push
jecxz
add
xchg
adc
inc
mov
imul
int
and
ret
fwait
push
sti
and
cmp
jb
pushf
mov
mov
ret
dec
sbb
dec
pop
sbb
adc
sbb
movl
repz
mov
mov
jns
cmp
jnp
mov
xchg
imul
sbbl
addb
loopne
jle
mov
dec
popa
out
cmc
bound
and
adc
mov
loopne
jmp
imulb
sub
mov
das
shll
cld
dec
push
cmc
mov
addr16
xchg
loop
xchg
int3
scas
xor
sbb
cwtl
arpl
shrb
inc
aam
sub
cmp
les
mov
test
xchg
imulb
and
lret
mov
or
outsl
lods
xchg
add
push
jb
movsb
addr16
mov
mov
jno
into
arpl
xor
and
lcall
scas
rorb
xlat
divl
push
sub
out
xor
test
pop
cli
movsb
sub
ss
pop
cmp
lahf
sub
jl
cmp
inc
pop
add
and
mov
push
out
push
xor
mov
mov
mov
push
or
dec
push
push
mov
dec
dec
pop
rcrb
and
mov
xor
out
test
lods
data16
or
pusha
push
jo
fbstp
jns
or
ljmp
xchg
out
push
fsubrl
push
pop
jbe
out
dec
mov
icebp
pop
les
shlb
cmpsb
shll
sbb
addr16
data16
and
int3
inc
stos
dec
lock
cli
mov
xor
lock
mov
or
push
test
popf
in
gs
subl
pop
pushf
mov
inc
or
aaa
or
mov
mov
mov
mulb
sub
mov
push
pushf
mov
stos
inc
push
mov
mov
out
sti
push
stc
addr16
jnp
lock
mov
push
mov
add
dec
popl
lods
cld
test
repz
negl
les
inc
adc
xor
test
nop
rorw
cmc
mov
xlat
cld
push
ljmp
out
xor
test
adc
jmp
loopne
xlat
pop
jbe
dec
sub
rcl
adc
das
rcrl
mov
and
insb
or
or
cmp
jg
daa
pop
adc
and
inc
test
or
out
sarl
addb
and
shrl
push
push
scas
sbb
inc
xor
sub
sub
scas
add
xchg
dec
or
outsb
push
or
popa
jg
mov
mov
rcrl
lds
sarb
aaa
jae
jno
andl
test
and
push
imul
xchg
mov
idivl
lahf
push
mov
fs
jo
imul
lds
addr16
dec
fcmovnbe
popa
dec
cmp
cld
fcoms
test
or
repnz
or
inc
int
cmp
cld
imul
jb
sbb
push
ss
jl
cs
jne
and
enter
sbb
ret
pop
mov
inc
aam
gs
stos
push
mov
sub
mov
mov
arpl
cmpsl
and
pop
lods
arpl
repnz
jmp
in
mov
call
sti
mov
into
mov
scas
and
sti
sbb
out
aas
pop
test
mov
add
and
adc
ret
out
lds
or
addb
cmp
dec
lods
and
loop
jp
popa
inc
ret
scas
dec
fcmovbe
mov
lods
cmp
push
mov
dec
lock
insb
and
aad
je
and
dec
inc
test
movsl
es
cwtl
popa
sti
outsb
fiadds
pushf
mov
aam
mov
or
push
ret
xor
adc
ret
mov
mov
iret
cmp
jno
outsl
js
jno
gs
or
sbb
push
cmp
jbe
enter
xchg
in
arpl
sbb
fnstsw
xchg
mov
movsb
mov
and
test
inc
sbb
inc
pop
call
push
jbe
xchg
ds
mov
mov
dec
leave
rcrb
inc
lods
aas
jae
cmp
push
adc
inc
jb
daa
in
mov
mulb
adc
mov
push
insl
dec
fdivr
jnp
sbb
jbe
adc
movsl
data16
sub
cmp
je
in
cmpb
sbb
aas
pop
mov
dec
xchg
pop
addl
mov
pop
lret
mov
pushf
mov
mov
cmp
imul
test
addb
enter
fidivrs
pop
inc
aaa
pop
push
jbe
cmp
add
jle
xchg
test
jno
mov
es
jp
mov
add
lock
jecxz
test
sar
lds
in
sahf
or
xchg
dec
add
loopne
push
cmp
cmpsl
mov
mov
outsb
imulb
mov
jae
push
mov
mov
jge
stos
jb
cli
pop
fdivr
mov
hlt
add
cmp
sub
mov
loop
sub
lret
dec
inc
aas
cmpsb
mov
and
dec
lret
aad
cmp
cld
call
imul
mov
pop
dec
mov
cwtl
andps
mov
test
sub
faddl
test
mov
aas
imul
loope
nop
pop
mov
clc
shrl
fisubrl
ret
aaa
mov
sbb
cmp
mov
add
push
jne
pop
lahf
cmp
fdivrs
enter
lock
pop
popa
lea
ss
pop
mov
pop
cmp
arpl
lods
adc
mov
and
jb
pop
xchg
nop
jbe
jg
xor
daa
push
lcall
shrl
jmp
xor
cmc
xchg
sub
lods
add
and
movsb
rcl
loope
imul
mov
add
mov
or
add
xor
dec
je
fisttpll
or
xlat
out
dec
xor
adc
notb
pop
shlb
sub
adc
ret
les
pusha
push
jmp
out
xor
ljmp
cld
mov
jbe
popa
mov
sub
in
and
xorb
pop
jmp
adc
test
pushf
sar
jp
int3
mov
xor
cmpsb
in
sub
sbb
arpl
lock
adc
addr16
and
dec
sahf
pop
repz
cmc
sahf
loop
lods
xchg
pop
mov
mov
xchg
mov
adc
loopne
ja
jo
shrb
cmp
pop
sbb
or
test
dec
push
mov
nop
pop
loopne
vpxor
xor
rorb
xchg
repnz
jae
js
aas
movswl
cmc
push
pop
push
rcr
sub
sahf
jg
xchg
in
fcompl
push
cmc
ret
sti
mov
insl
mov
into
test
loopne
popa
mov
or
jno
enter
mov
or
pusha
adc
cmp
cltd
call
sub
push
aad
in
xchg
je
xor
xor
fcoml
mov
or
cmp
xchg
sub
ja
imul
stos
fcompl
mov
inc
cwtl
insb
pop
imul
add
int
pop
out
jo
lods
lahf
testb
scas
cmc
test
clc
pop
jmp
andb
push
push
mov
stos
movsl
mov
push
ds
jmp
outsb
mov
les
gs
mull
sub
xchg
jmp
orl
add
pop
jg
lea
shrl
dec
dec
xchg
idivb
mov
add
cmp
hlt
add
jb
sbb
in
dec
arpl
dec
fisubl
mov
lods
sbb
jae
xor
dec
shl
push
jns
insl
cmp
in
mov
and
icebp
and
popf
add
adc
and
rcl
jge
cs
mov
inc
xchg
mov
push
push
inc
jb
test
inc
movsl
js
add
insb
push
insl
dec
js
jg
lds
jmp
add
icebp
xchg
push
das
int
test
mov
jp
mov
or
jbe
jo
pop
mov
lahf
stc
mov
jne
inc
push
popf
cmp
xor
adc
pop
dec
imull
mov
cli
add
inc
fwait
and
ja
test
mov
test
adc
rol
je
fildll
mov
xchg
clc
repnz
jne
jmp
fldt
cmp
and
insl
xchg
insl
or
mov
xor
dec
xlat
mov
dec
shl
or
sbb
mov
xor
int
push
aam
lret
shll
or
add
inc
jl
cmp
int
mov
out
pusha
lods
movsb
xchg
xor
mov
arpl
inc
or
mov
jae
sub
mov
push
lret
mov
sub
push
jo
ret
cmp
adc
stc
adc
xchg
lret
cmp
xor
out
rcrb
out
mov
dec
inc
push
lock
cwtl
push
in
push
ret
test
pop
pop
out
loope
cmp
mov
fisubl
sarl
dec
leave
add
in
mov
adc
sub
mov
or
insb
aaa
xor
je
xor
add
out
push
pop
sahf
adc
lret
rcl
or
cmpsb
and
sbb
icebp
sub
sbb
mov
mov
cmc
dec
out
rcrb
cmc
add
insb
pop
xchg
inc
out
lods
out
fmull
jb
test
cs
xchg
loop
subl
push
push
xchg
shlb
sbb
dec
lock
xor
ja
xchg
xchg
adc
push
dec
or
xor
sbb
lret
add
dec
movsb
imul
in
mov
out
lret
test
cmpsb
jge
pop
imul
mov
push
ds
out
adc
and
push
ljmp
or
add
xor
cmc
call
cmc
insb
scas
pusha
daa
ret
fs
int
fistpl
sti
ljmp
test
aam
pusha
imul
in
pop
and
pop
inc
sbb
sub
test
mov
enter
mov
dec
notl
cmp
lret
int3
popf
jmp
imul
dec
icebp
das
xor
test
and
add
stos
jns
xchg
in
out
jbe
stc
loopne
in
mov
nop
push
dec
cltd
mov
xchg
cs
mov
daa
call
cs
lcall
add
das
mov
xchg
lock
call
out
call
sbb
rcll
jl
lahf
je
lods
sarb
scas
aad
inc
cmp
xlat
fucomip
clc
mov
mov
push
arpl
or
das
mov
sbb
dec
repz
das
cs
test
sub
inc
insl
lods
ljmp
test
nop
outsb
dec
mov
mov
inc
push
outsb
aas
mov
pop
mov
dec
js
nop
mov
rcrb
and
fcoms
push
cmp
in
xor
push
les
add
dec
dec
fs
jne
cwtl
mov
popa
adcb
push
icebp
xor
dec
or
mov
imul
loopne
xchg
cmp
xchg
pop
mov
dec
lock
mov
bound
int3
sub
pusha
mov
aad
jb
sbb
sahf
std
stos
iret
pop
or
pop
jae
xlat
xchg
decb
or
push
cmpsb
orl
push
dec
hlt
out
mov
clc
lds
popf
or
imul
pop
roll
mov
xchg
jb
cld
adc
xchg
mov
jl
sbb
enter
test
addr16
fnstsw
mov
push
test
sahf
std
push
outsl
shlb
mulb
ja
push
fsubrl
mov
dec
dec
sahf
cmp
pop
scas
aaa
jp
jno
in
inc
aad
adc
or
mov
sub
jge
dec
mov
push
cmp
mov
xor
inc
jb
out
in
or
test
fists
dec
add
lods
cmp
in
adc
add
in
and
je
or
push
lret
clc
lea
popa
js
mull
gs
and
or
sub
xchg
or
jb
in
bound
mov
pop
cmpsl
mull
scas
jae
xchg
out
nop
aad
add
dec
mov
das
outsb
and
jge
movsb
sbb
orb
dec
inc
outsb
aas
sub
in
rcrb
es
loopne
push
fisubs
shll
adc
or
jl
jle
cmpsb
aas
ljmp
lahf
aam
movsb
pushl
fs
je
inc
pop
push
jg
outsl
add
adc
in
hlt
scas
les
mov
test
xchg
iret
fs
je
inc
pop
push
jg
outsl
add
adc
in
hlt
scas
les
mov
test
xchg
iret
fs
je
inc
pop
push
jg
outsl
add
adc
in
hlt
scas
les
mov
test
xchg
iret
fs
je
out
pop
push
js
idivl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
loopne
add
jae
and
jge
cmp
icebp
push
mov
mov
inc
mov
jae
add
adc
and
xor
cmp
rep
loopne
inc
dec
mov
cmp
push
sbb
sub
xchg
jl
dec
ret
cmp
cs
inc
popf
cmp
pop
ljmp
mov
ds
add
xchg
movsl
mov
cmp
mov
jmp
mov
test
sarb
repz
call
mov
lods
aam
cmp
pop
gs
mov
mov
inc
ret
pop
jecxz
xchg
xchg
lock
mov
adc
push
lock
inc
in
and
ror
jnp
int3
cmp
loop
loopne
jg
pop
sub
mov
pushf
pop
xchg
adc
jle
mov
xor
dec
insl
shl
cmpsb
push
repz
jmp
push
sbb
dec
mov
mov
dec
sbb
aad
negb
out
pop
dec
mov
lea
imul
cmp
scas
lret
aad
add
or
mov
lret
push
leave
jb
push
mov
dec
mov
stos
pop
mov
pushf
add
adc
cmp
xor
jbe
jo
and
mov
jno
push
icebp
sbb
cmp
sbb
filds
mov
std
add
push
test
std
adc
and
xor
jecxz
rep
cmpl
mov
mov
jae
add
adc
and
xor
jecxz
rep
cmpl
mov
jns
and
ds
jbe
lahf
mov
mov
stc
stc
out
mov
int
int
jns
sbb
scas
mov
add
sbb
in
lea
inc
and
repnz
enter
int3
js
in
jmp
mov
pushf
pop
jbe
icebp
daa
nop
mov
cli
es
pop
push
xor
ror
iret
push
pop
xchg
ja
xchg
cmp
lds
fstps
mov
je
fwait
jnp
xlat
inc
xchg
adc
add
in
inc
adc
add
arpl
add
jne
aad
nop
sbbl
scas
data16
std
push
inc
inc
rolb
stos
adc
or
lea
mov
mov
fwait
or
ss
punpckhdq
sti
push
or
sub
notl
test
jge
mov
dec
ljmp
iret
into
test
inc
and
je
adc
push
push
dec
adc
outsb
mov
mov
ljmp
jg
cmp
into
nop
push
mov
shrl
cmp
dec
repz
imul
and
fwait
outsl
addr16
enter
adc
in
inc
lret
sar
add
movsb
mov
rcll
call
rclb
mov
and
stos
fildll
mov
les
cmc
cmpsl
call
dec
mov
push
sub
inc
mov
sbb
scas
mov
mov
push
xchg
dec
jo
dec
enter
ljmp
dec
mov
jae
adc
movsl
or
pop
lea
jbe
push
and
adc
js
nop
mov
push
mov
cmp
pop
add
imul
dec
push
leave
sub
cld
dec
ss
in
roll
jno
mov
or
insb
push
push
arpl
mov
rsm
add
push
mov
inc
push
cmp
std
pusha
insl
xchg
dec
mov
scas
cs
pop
xchg
in
jle
dec
popf
dec
sbb
add
adc
mov
rcrb
xor
adc
rol
enter
xor
ja
adc
sbb
xor
mov
sti
push
or
push
fdivrl
enter
cmc
or
push
mov
adc
and
cmpsl
pop
mov
xor
xor
decb
and
popf
movups
pop
inc
and
jp
jne
jns
mov
inc
sahf
jmp
mov
mov
ds
out
push
rol
addr16
inc
aam
sbb
cltd
push
enter
js
mov
sub
dec
mov
cmp
sub
test
jne
out
push
xor
loop
ds
rcl
sub
shlb
sbb
je
push
push
in
dec
ss
jb
ds
xchg
mov
or
loop
insl
sbb
ret
rorl
insl
out
clc
sub
xor
xchg
into
movsl
in
ds
mov
in
daa
fistpl
lret
inc
inc
int
and
es
jb
popa
cmp
sarb
xchg
dec
enter
popa
aam
mov
cmp
dec
div
mov
and
subb
mov
outsb
sub
sub
insl
sbb
lock
sahf
and
cs
xchg
sti
adc
cmp
xor
in
jecxz
xor
dec
pusha
xchg
mov
aad
push
std
in
imul
sbb
push
int3
mov
arpl
mov
and
into
jp
frstor
mov
jg
ljmp
pop
mov
mov
xchg
repnz
inc
adc
loope
ret
mov
iret
mov
lea
mov
pop
dec
mov
fsubs
adc
inc
ds
mov
sahf
push
bnd
inc
or
sub
popa
cmp
scas
movl
mov
cwtl
adc
cwtl
cmp
mov
jle
sub
jp
fbld
push
mov
lds
jmp
repnz
icebp
or
sub
push
jle
cmp
test
call
es
pop
outsl
push
js
loopne
int
mov
addr16
mov
mov
jo
bound
mov
and
jmp
push
xchg
push
xor
dec
mov
dec
rcl
rcrb
dec
int
lahf
sub
sub
scas
dec
lods
aad
fiadds
or
sbb
sbb
sbbl
xor
out
xor
mov
pop
test
push
cmp
xor
lret
sbb
decb
push
hlt
sub
repnz
insb
sbb
and
inc
adc
imul
adc
lahf
fnstcw
push
mov
xchg
test
hlt
and
lret
out
dec
adcl
clc
sarl
cli
sub
lahf
cld
rclb
mov
loope
jp
sbb
pop
or
mov
pop
jle
push
mov
push
or
mov
out
pop
mov
add
and
inc
insl
sarb
xor
mov
repz
inc
fidivrs
out
xor
xchg
adc
mov
in
callw
clc
xor
add
cmpsl
jecxz
pushf
xor
xchg
fdivrl
xlat
cmpsl
and
mov
xchg
ds
xlat
or
leave
fwait
dec
mov
iret
adc
sbb
and
sub
das
stc
mov
add
xchg
cmp
and
xlat
sti
pop
clc
dec
imul
jno
lds
cmp
sub
push
cmc
jns
popf
mov
adc
xor
jl
add
sbb
xchg
cltd
adc
and
fcmovnbe
adc
cmp
mov
cli
aaa
cmp
movsl
jmp
fwait
add
out
faddl
sub
fldcw
enter
lock
add
xor
fsubs
mov
out
xor
cld
loop
pushf
mov
add
stos
xor
mov
add
push
clc
add
test
jle
pushf
mov
arpl
cmp
out
and
adc
sbb
imul
popa
stc
aad
jge
lods
pop
mov
addb
js
imul
sub
shld
inc
xor
cmp
jmp
xor
movsb
sub
jl
push
or
dec
movsl
xor
jge
out
add
adc
pop
int3
cmp
xor
aad
add
fldenv
clc
cs
jns
iret
jecxz
mov
pop
ficoml
sbb
xchg
sarl
mov
scas
movsb
mov
push
or
pop
jle
out
lret
mov
pop
lahf
or
jp
inc
packssdw
decl
push
dec
insb
sbb
and
mov
outsb
mov
in
popf
xorb
mov
dec
movsl
inc
sbbb
fmull
xchg
call
mov
xchg
cmp
mov
dec
icebp
cmpsl
add
add
test
imul
mov
rclb
rclb
lahf
mov
shrb
adcl
adc
fadds
pop
and
dec
dec
cmp
and
dec
fdivrp
std
adc
mov
push
jg
pop
int3
aad
cmp
int
mov
pop
mov
xchg
aad
cmpsb
loopne
xor
movsl
dec
xchg
cmc
inc
and
movsl
mov
daa
xchg
nop
jne
mov
jmp
mov
adc
mov
sahf
xchg
shrl
test
inc
xor
lods
dec
and
outsb
mov
in
test
cltd
pushf
loope
insl
imulb
jle
pusha
enter
cmp
lahf
or
xor
mov
mov
test
shrl
das
mov
dec
dec
inc
jbe
int
inc
faddl
fstpt
dec
clc
rolb
xchg
cmpl
mov
xchg
fisubs
loop
add
sub
jl
aad
cwtl
fucomi
jne
insl
and
aaa
mov
ffree
repz
outsb
mov
dec
cli
ret
in
pop
mov
jmp
call
iret
cmp
xchg
push
into
shll
dec
sub
push
dec
mov
sbb
jne
test
push
iret
fldt
lret
out
lds
cmp
jmp
fs
popf
call
insl
sti
adc
adc
fsubl
lahf
jae
insl
cmp
pop
cmp
jl
cwtl
cmp
sbb
mov
rcr
daa
cmpsl
jbe
dec
push
fst
jo
ljmp
sti
sarb
mov
jecxz
mov
adc
mov
fadd
mov
inc
andl
mov
xchg
sbb
dec
iret
and
aaa
stos
inc
in
adc
adc
dec
sbb
mov
mov
test
and
mov
gs
inc
or
test
push
sbb
push
xor
mov
js
sahf
cmp
jp
jg
in
lret
js
push
clc
mov
insb
pop
fimuls
xchg
sub
sub
cmp
cwtl
shl
add
cmp
das
insl
dec
hlt
out
mov
push
push
insb
insb
pop
pushl
fnstenv
cmc
inc
or
test
lret
dec
cmp
xchg
ja
mov
lods
mov
fdivl
addr16
faddl
adc
subl
add
sahf
pop
xor
jb
mov
sub
or
pop
cmpsb
dec
mov
mov
dec
stc
xchg
or
or
inc
mov
xor
aam
rcll
test
push
and
fldenv
je
push
les
mov
pop
xlat
mov
jmp
pop
sbb
inc
add
sbb
adc
adc
out
push
jnp
add
jno
push
enter
stc
add
inc
lock
mov
iret
and
push
inc
lret
xor
pushf
jbe
stc
push
je
xchg
mov
push
mov
push
push
sbb
ss
jmp
pusha
mov
jbe
aam
out
addr16
jl
testb
cmc
push
filds
jle
xor
dec
imul
lds
movsb
cmp
imul
mov
add
loop
sbb
cmp
inc
xor
sbbb
push
ror
jecxz
pushf
xchg
cwtl
push
daa
push
jns
inc
stos
fbstp
into
xchg
pop
or
shrl
hlt
imul
loop
pop
inc
mov
lods
outsl
fldt
xchg
and
outsl
inc
out
mov
dec
aam
push
adc
add
push
mov
daa
lret
xchg
repnz
cmpb
push
sbb
xchg
in
imul
inc
fs
fimuls
add
adc
fstl
jp
sbb
dec
cmpsl
mov
jbe
add
je
sbb
popf
lods
xor
pop
int3
push
std
stos
push
adc
sub
xor
imul
lds
in
mov
inc
cld
test
pop
xor
jle
sar
adc
jo
cmpsl
fisttpl
xchg
in
mov
repz
inc
daa
mov
or
lea
xchg
xor
in
sbb
mov
pop
ret
xchg
add
mov
lahf
es
into
mov
js
fstpt
push
mov
cli
dec
aam
cmp
jge
dec
jle
sub
sbb
cmp
or
dec
pushl
cli
cli
mov
mov
dec
bound
dec
faddl
add
fildl
test
aam
adc
and
jge
lods
out
pop
add
add
add
test
xor
inc
or
xchg
out
jo
gs
pop
pop
inc
loope
bound
inc
stos
mov
lcall
leave
jnp
test
ret
jmp
rclb
push
mov
cmpsl
mov
iret
inc
cltd
stos
rclb
and
cmp
and
push
sbb
aad
push
and
sbb
fldcw
ror
in
jno
fwait
xchg
divb
pop
xchg
jo
inc
sub
in
push
movsb
rcrl
popa
push
dec
jo
cli
js
insb
ss
lods
pop
jmp
pop
out
dec
addr16
mov
aam
mov
sub
lret
loopne
loope
pusha
sub
jge
nop
fs
dec
andl
mov
dec
push
pusha
aas
inc
addr16
and
mov
push
sub
add
xchg
lods
repnz
xchg
int
mov
mov
push
rolb
xor
outsl
push
sub
outsl
fiaddl
jno
pop
sub
inc
mov
push
xor
mov
rcrl
gs
jle
push
lods
inc
push
pop
xor
fnstsw
lods
mov
lcall
cmp
pop
mov
lds
dec
aas
lahf
mov
ror
push
loop
fxch
sti
mov
jle
cmp
push
jp
xor
sbbl
das
das
push
aam
test
pop
mov
push
fwait
into
out
mov
mov
fstpt
rclb
inc
aaa
sub
sbb
adcb
lock
pop
xchg
push
push
in
mov
addl
xchg
xchg
in
cld
les
mov
inc
xor
int
mov
aam
xlat
aas
outsl
out
push
jmp
fisttpl
sbb
mov
int3
movsb
add
bound
sub
in
inc
aad
or
jo
adc
xor
sub
js
fistl
add
jnp
aam
add
movsl
imul
mov
ja
inc
add
fwait
add
inc
inc
roll
das
je
jmp
mov
cmpsl
fsubs
push
xchg
daa
ss
popf
fistps
push
inc
mov
mov
pop
adc
dec
fnsave
lods
sbb
gs
dec
aad
dec
jmp
mov
jge
jb
pop
aam
pop
push
enter
in
jnp
imul
aad
push
loop
test
fsubp
cwtl
scas
jae
sub
sub
lods
inc
jnp
mov
lcall
mov
out
mov
jbe
jno
popa
sbb
cmpsl
test
jne
dec
fisubrs
out
adc
mov
pop
jns,pt
aaa
pop
jne
ljmp
stc
mov
sbb
out
mov
loopne
mov
je
sbb
jno
and
xor
es
incb
push
call
jge
aas
mov
shrl
push
mov
pop
sbb
sbb
push
gs
cmp
sub
int
push
inc
imul
gs
adc
jae
mov
mov
mov
mov
test
lret
imul
push
push
xchg
dec
jle
mov
adcl
pusha
jge
dec
mov
loope
add
loop
scas
or
mov
pop
hlt
mov
rcll
stos
jle
daa
ret
shll
std
mov
push
xchg
lret
stc
iret
popa
imul
arpl
jbe
inc
out
push
lds
jl
xchg
xchg
push
subl
sub
add
ficompl
das
fdivp
sbb
mov
mov
sahf
adc
push
test
sbb
xchg
mov
push
cli
adc
sub
nop
jno
add
lret
adc
lret
popl
leave
jbe
das
add
fiaddl
or
add
je
xchg
daa
mov
pusha
cmc
xchg
sbb
add
insb
sbb
dec
and
jle
xchg
daa
pop
jmp
orl
jns
xchg
mov
jecxz
mov
dec
lods
loope
adc
mov
test
jae
xchg
inc
and
dec
cmp
in
mov
fnsave
push
gs
xor
mov
mov
inc
cmp
fwait
loopne
jae
jns
push
push
arpl
or
cmc
or
push
dec
lock
repnz
push
cli
adc
es
add
js
ds
stos
leave
sub
leave
and
mov
cld
movb
cltd
cltd
dec
pop
jbe
cmp
test
movsb
push
int3
aaa
push
mov
and
cmpsb
fdivrs
xchg
cmp
les
jbe
push
sub
mov
addr16
sub
lcall
xchg
inc
sbb
jp
lods
adc
cmpsl
iret
push
mov
adc
xor
fildll
popf
mov
ficompl
pop
scas
aas
cltd
icebp
push
pop
xchg
icebp
test
jle
xor
lcall
mov
jne
test
fidivrs
lcall
sbb
push
movsb
jns
and
xorl
dec
mull
jle
sbb
movsl
sbb
dec
xchg
lret
sub
loop
dec
sbb
call
pop
movsl
cvtdq2ps
inc
xchg
and
cmc
test
aad
xchg
stos
jnp
pop
insl
push
jno
lret
dec
jmp
cs
and
mov
lret
leave
lods
adc
jb
add
sub
sar
int
in
repz
setp
push
loop
push
loop
inc
int3
adc
mov
push
push
mov
cmpb
push
popf
in
pop
push
sbb
aam
lret
popf
int
int3
ret
std
jns
lods
divb
frndint
sub
and
fstpt
mov
in
outsl
lahf
add
jns
and
xlat
add
and
and
dec
push
xor
movl
nop
dec
leave
pop
xchg
cmpsl
mov
sbbb
jg
data16
lahf
mov
xor
outsl
sti
mov
mov
or
or
fdivrs
xchg
pop
fisubl
inc
jmp
mov
or
push
pop
stos
adc
and
mov
xchg
xchg
mov
cmc
sub
xor
jbe
andl
into
push
pop
pop
shl
clc
xlat
imul
or
aaa
in
inc
adc
sub
mov
mov
xlat
inc
xorb
movsl
fsts
shll
push
gs
add
scas
jne
push
leave
cs
inc
dec
push
pop
test
mov
movsl
add
cmc
in
or
in
or
fwait
test
aam
insl
hlt
in
sbb
cltd
ret
pop
int
and
mov
cmp
and
shr
pcmpeqb
test
cs
push
aad
push
adc
mov
cmp
call
addr16
xor
daa
fidivs
push
gs
jb
and
xlat
ret
push
in
mov
in
sbb
mov
out
add
insl
test
pop
aad
xor
mov
lock
push
xor
sbb
stos
fs
test
mov
test
sub
or
cmp
and
inc
repz
push
es
mov
fstps
testb
leave
dec
lock
adcl
mov
jb
std
push
imul
mov
pop
test
rolb
rcl
add
fwait
jg
cmp
xlat
les
jle
call
push
add
xor
cmp
add
repz
inc
lods
enter
pop
pushf
push
dec
mov
jno
rcll
sub
xchg
xchg
fcomps
jne
sbb
pop
fwait
cmp
repz
push
add
aam
adc
das
scas
and
jbe
sub
das
shlb
cmp
imul
imul
lds
jb
pop
rcrl
xchg
or
inc
mov
dec
pop
jg
fidivl
test
test
pop
ds
pusha
mov
sbb
and
pop
bswap
std
stc
lock
add
adc
add
xor
mov
test
xchg
fisubrl
or
imul
push
xchg
div
lods
lds
and
jnp
sti
in
adc
push
out
outsl
xchg
stos
gs
ja
das
je
sbb
jle
incb
roll
sub
or
xchg
jg
adc
psubsb
mov
adc
lods
xchg
leave
jp
pop
mov
cwtl
dec
stos
adc
mov
adc
push
aas
movsl
sbb
push
cmc
out
cmp
adc
fwait
mov
movups
enter
cmp
es
ficomps
arpl
lods
into
pop
lds
sbb
jne
das
inc
inc
xor
and
xchg
xchg
and
sub
insb
cmp
hlt
pusha
jl
mov
aam
std
movsl
movsl
jle
push
dec
ja
cmp
scas
add
inc
sub
dec
push
xchg
sbb
mov
rcl
pusha
cmpsl
nop
fists
in
add
xchg
or
enter
jne
mov
pop
mov
xor
loop
pusha
mov
scas
inc
pop
repnz
in
adc
push
cltd
sbb
xchg
mov
sbb
mov
and
xor
je
call
and
mov
sbb
jg
pop
shll
push
test
sub
jns
dec
and
cmp
add
je
pop
add
mov
xlat
and
out
cs
inc
lea
cmc
aaa
adc
sbb
xchg
adc
dec
shll
rcrl
jnp
dec
in
fwait
inc
pop
jmp
imul
imul
in
add
adc
and
xor
jecxz
rep
cmpl
mov
mov
jae
add
adc
and
xor
jecxz
rep
cmpl
mov
mov
jae
add
adc
and
xor
ret
cmp
repnz
andl
insl
mov
inc
xchg
push
add
add
adc
and
sub
jecxz
test
or
insb
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
icebp
cmp
sub
sbb
or
jge
dec
pushl
mov
pusha
cmpsb
push
pushf
inc
mov
std
and
adc
add
icebp
cmp
sub
sbb
or
jl
insb
xchg
pop
subl
push
popf
inc
mov
cltd
and
adc
add
icebp
cmp
sub
sbb
or
jl
insb
xchg
pop
orl
inc
loop
mov
outsl
mov
rorl
imul
jns
adc
scas
push
fadd
add
jne
cltd
inc
and
cmp
jbe
orl
jl
mov
cltd
into
in
and
mov
into
mov
cmp
aam
sbb
xor
jae
add
push
add
icebp
mov
cmp
jge
insb
adc
subl
in
popa
or
test
add
xor
ds
mull
dec
cltd
inc
aaa
mov
bound
add
gs
cmp
mov
push
out
add
scas
jmp
lods
mov
cmp
sbb
or
jl
insb
xchg
pop
orl
inc
mov
cld
and
adc
add
mov
cmp
sbb
cmp
mov
iret
cmp
xor
inc
test
mov
lods
outsl
mov
in
jmp
fnstenv
ficoms
inc
fidivs
cltd
dec
jp
mov
loope
mov
dec
mov
dec
jno
popa
lods
push
pushf
inc
mov
cld
and
adc
add
icebp
cmp
sub
sbb
or
jl
insb
xchg
pop
orl
inc
mov
cld
and
adc
add
icebp
cmp
add
jae
lret
dec
mov
test
lods
push
mov
out
js
mov
push
xchg
or
shll
jp
xchg
push
mov
push
insb
out
addps
jmp
daa
inc
mov
add
xchg
push
sbb
mov
cltd
fisttpll
std
loopne
mov
int
loopne
adc
mov
ljmp
mov
int
in
and
jg
pop
out
js
mov
jne
or
or
ror
mov
sarl
or
fs
fnstcw
insl
mov
fisttps
inc
mov
xorb
mov
outsl
les
sbb
jecxz
fisubl
mov
and
jb
fsubs
std
inc
pop
mov
test
sbb
sbbb
jecxz
mov
mov
fcoml
aas
cmp
sahf
mov
adc
imul
mov
int
and
es
mov
mov
inc
xor
out
push
sti
dec
in
push
out
pusha
fadds
test
minps
adc
cmp
sti
xchg
add
inc
pop
mov
or
dec
cmpsl
addr16
or
ljmp
add
es
gs
jge
xlat
cmp
push
outsb
out
mov
in
mov
test
cmpsl
jg
arpl
jecxz
push
pop
divb
loopne,pt
hlt
xchg
mov
or
into
pop
rcrl
mov
push
push
mov
enter
outsb
lea
in
mov
mov
stc
sub
mov
jp
cld
and
sbb
fwait
fs
and
bound
xchg
and
and
subb
insl
cwtl
movsl
js,pn
int
mov
push
mov
dec
xor
or
mov
ja
and
test
cld
jns
mov
push
int
pop
dec
xchg
pop
aaa
or
mov
rorb
bound
ficompl
enter
mov
cltd
sbb
push
addl
fmuls
jne
ret
movsb
sub
add
nop
call
mov
mov
outsb
in
add
lods
mov
or
sub
xor
fcompl
adc
idivl
and
pop
movsb
jmp
mov
pop
scas
jp
and
ret
cltd
ja
add
push
sub
incb
bound
xchg
lods
shl
xlat
inc
ljmp
or
sbb
faddl
sub
xor
sub
mov
inc
push
movsl
cmp
dec
and
cwtl
add
lahf
xchg
sti
or
adc
stos
and
mov
and
mov
sar
jl
sbb
push
ret
scas
xchg
cmpsb
data16
adc
das
loopne
data16
andps
add
push
ss
add
xor
loopne
sbb
pop
jb
pop
inc
add
dec
push
std
cmpsb
cld
sub
fcmovbe
push
aad
jmp
js
testb
xchg
adc
sarb
sbb
xchg
out
add
cmp
imul
out
lods
xchg
mov
call
lea
call
repnz
mov
mov
jb
inc
mov
sbb
les
pop
ss
fidivs
mov
cmpl
inc
push
cmpsb
test
in
orl
aad
lcall
xchg
dec
and
in
fcmovnb
dec
jae
and
jae
jno
dec
cld
sti
jnp
mov
aaa
stc
cmc
popf
ds
stos
pop
push
dec
cwtl
mov
imul
or
jle
or
std
inc
hlt
fs
insl
add
push
aas
pop
sarl
xor
pop
mov
mov
stc
into
jge
or
inc
mov
std
fistpl
cmp
pushf
cmc
popf
mov
outsl
lret
jg
inc
nop
mov
dec
sbb
into
inc
jp
fs
movsl
and
jle
iret
jmp
mov
repnz
js
xchg
and
inc
dec
out
retw
aam
sar
stos
mov
mov
icebp
lcall
shrb
mov
outsb
dec
push
arpl
or
jmp
pop
cs
and
mov
xchg
inc
mov
es
or
add
movsb
or
sbb
mov
data16
pop
shll
into
int3
adc
xchg
icebp
fidivrs
mov
movl
in
in
cmp
xchg
fldl
lahf
xchg
fisubrs
mov
push
push
jmp
fsubl
mov
adc
xchg
cltd
xor
add
into
out
adc
push
xchg
mov
dec
mov
jge
sub
pop
ja
or
pop
lods
js
xchg
loop
jp
adc
outsl
cli
insb
pop
and
or
nop
xlat
sub
jne
sub
lss
push
and
ficoml
add
mov
pop
mov
or
push
mov
aaa
subb
outsl
adc
mov
fnstenv
sub
mov
push
or
stc
je
cmpsl
mov
fimull
push
pop
cmp
mov
punpckhdq
enter
cmc
sahf
push
cwtl
addr16
push
adc
and
insl
xor
dec
rolb
xchg
std
aam
ja
push
sbb
cli
rol
pop
jne
out
insl
inc
cmc
ret
xor
pop
iret
dec
adc
insb
and
adc
ljmp
and
push
xchg
mov
mov
and
aad
mov
ja
pop
xor
mov
push
cwtl
pusha
lcall
mov
ss
jo
add
inc
ja
sub
xor
movsl
movsb
or
mov
jmp
out
lret
iret
adc
popl
push
pop
sub
sub
cli
in
sub
enter
or
jecxz
adc
xor
dec
cli
push
leave
cltd
jmp
mov
ficomps
and
push
testb
pop
xchg
mov
mov
or
cmp
add
pushf
fs
call
dec
iret
pusha
dec
ss
sbb
dec
daa
movsl
push
inc
iret
pop
in
fidivrs
ret
call
lock
sub
pop
cwtl
lret
sub
sbb
das
sbb
mov
mov
mov
int3
jo
daa
inc
xchg
sbb
or
nopl
add
shrl
cmp
fmull
daa
or
fisubrl
test
mov
jno
dec
dec
iret
leave
sahf
icebp
add
adc
jge
pop
jb
aaa
in
hlt
sbb
sbb
call
les
jecxz
ds
adc
jle
in
xor
or
aam
or
pop
aaa
push
addr16
in
and
sbb
lret
xorb
mov
es
mov
in
mov
or
out
mov
sub
outsb
mov
ja
jmp
dec
sub
sbb
xchg
inc
mov
pushf
push
jne,pn
cmp
jge
pop
enter
repz
lock
xchg
scas
std
pushf
sub
inc
scas
mov
mov
pop
cli
mov
or
push
cmp
aaa
pop
lods
xchg
jg
adc
movsb
jo
pop
jbe
lret
out
sub
push
lock
add
push
sar
arpl
mov
fmuls
inc
addb
xor
mov
jge
mov
outsl
ffree
add
inc
aaa
fnclex
or
xor
shll
btc
push
lods
aaa
mov
sbb
add
stos
xchg
jl
inc
mov
sbb
sub
sbb
sti
stc
pushf
into
mov
daa
and
add
inc
dec
add
cmp
xchg
inc
stos
gs
lret
jl
pop
cmp
sbb
jns
mov
addr16
lahf
push
jp
mov
outsb
cmp
rcrb
pop
sub
fnstsw
xchg
mov
inc
sub
mov
imul
or
ja
jnp
and
push
imul
push
in
int
rcll
xchg
push
imul
cmpsl
mov
mov
negb
and
stos
sahf
sbb
mov
mov
stos
mov
jno
adc
push
call
sbb
pop
shrl
mov
mov
insl
mov
adc
xor
leave
int3
jl
cmp
xor
lock
or
fisttpl
xor
sub
std
std
sbb
out
test
mov
pop
jbe
lret
ss
in
jbe
mov
sbb
jecxz
mov
shll
cmp
lds
arpl
inc
lret
jbe
and
jl
outsb
jnp
test
push
outsl
aad
adc
cmp
mov
stos
inc
sub
jb
lods
pop
insb
push
ret
enter
adc
in
dec
test
mov
and
shrb
out
pop
in
arpl
cs
push
cli
cmp
pop
ret
mov
in
iret
xor
fwait
dec
push
xor
mov
push
icebp
pop
fisttpll
aas
mov
push
addr16
out
xor
push
pop
xchg
les
mov
xor
push
mov
lock
inc
push
push
xor
cmpsb
push
daa
inc
scas
xor
push
sbb
fidivrl
es
movsl
gs
scas
jge
mov
cmp
lods
addr16
leave
lret
inc
jg
and
scas
adc
mov
dec
adc
hlt
into
inc
push
xchg
lods
es
dec
data16
xor
lret
fildl
mov
jmp
or
push
cmp
iret
stc
inc
dec
push
jae
jae
cmp
rorl
cld
jo
lock
mov
loope
cmpsl
mov
mov
hlt
push
inc
mov
dec
lahf
ret
add
push
scas
push
pop
fwait
out
mov
cmpsl
lahf
cltd
in
cmpsb
mov
xchg
loope
in
mov
mov
xchg
repnz
lods
jo
mov
jnp
stc
push
dec
popa
mov
mov
into
inc
orb
lret
aas
push
lds
orb
xor
ljmp
pop
inc
aam
push
fsubs
stc
stos
fldenv
or
xchg
lds
int
seto
mov
jmp
stos
iret
fdivl
cmpsl
push
test
nop
jle
inc
mov
xorb
push
push
pop
push
xor
mov
fldcw
ret
lods
dec
pop
dec
je
movsb
or
pop
xor
adc
jmp
andb
mov
daa
ds
rclb
push
sub
adc
ret
add
and
shlb
add
pop
add
cmpsb
stos
in
and
call
jle
mov
add
lods
lds
clc
test
out
lea
arpl
out
sbb
aad
outsb
adc
cltd
loopne
inc
fldcw
xchg
hlt
cmp
xor
push
stos
mov
pop
popf
in
imul
mov
fldl
mov
and
cmpsl
sbb
inc
sti
push
into
icebp
and
pop
add
addb
jns
sbb
mov
ret
inc
mov
jnp
fcmovnbe
jl
stos
pushaw
xlat
movsl
cli
in
cwtl
test
lahf
sub
sbb
add
scas
cmp
and
outsb
mov
adc
inc
cmp
rolb
mov
cmpsb
repz
shrb
mov
test
jmp
hlt
icebp
fdivrs
jbe
inc
xor
inc
popf
insl
xor
cmp
cld
ret
dec
sub
xchg
aad
push
sub
in
mov
xchg
adc
ja
sbb
inc
push
cmc
out
inc
je
or
aam
cli
cmp
push
sub
sbbb
cwtl
cli
scas
shll
push
or
xchg
test
in
js
dec
cmpsl
jo
enter
sahf
std
mov
jg
add
dec
adc
jnp
xor
push
mov
and
sub
ret
inc
push
lods
sbb
test
cmp
inc
mov
lahf
ja
and
sbb
and
mov
pop
or
das
ljmp
pop
je
xchg
stos
enter
mov
pop
inc
mov
outsl
or
push
maxps
push
rorl
jecxz
pop
vpshlq
pop
adc
ss
rcll
popa
daa
jns
lret
clc
lret
insb
les
enter
mov
xchg
pusha
std
cs
xor
xchg
mov
aad
stc
push
pop
les
loop
shll
sbb
pop
movsb
dec
sub
scas
rcll
mov
adc
cmp
xchg
out
pop
xchg
sub
shlb
insb
clc
sub
shll
push
icebp
inc
mov
sarb
fiaddl
lahf
dec
movsl
cmp
cwtl
pushf
scas
push
ret
and
pop
push
dec
push
pushf
inc
fcomip
jl
mov
mov
push
xchg
int3
xchg
sbb
stos
xor
lret
jbe
add
push
clc
jge
rclb
popf
lret
je
fs
iret
jnp
fs
xor
cli
jnp
jo
jl
cmp
jl
xchg
mov
jmp
fldt
xchg
or
ret
sub
push
mov
mov
cmpsl
iret
ja
movsb
xchg
pop
shrb
inc
xor
pop
pcmpeqw
and
xchg
sbb
jb
clc
notl
xchg
cmp
je
shll
or
mov
and
stc
and
jge
mov
add
inc
je
adc
or
add
out
jle
sarl
push
shrl
lret
push
orl
mov
mov
jecxz
cmp
es
fwait
xor
out
mov
mov
aad
add
xor
jbe
test
fwait
xlat
enter
adc
xor
adc
lcall
add
add
int3
rcrl
movl
sbb
out
inc
js
push
ds
ficoms
sbb
in
cmpsb
xor
push
cli
mov
jo
push
stc
sbb
and
adc
mov
push
xchg
pop
or
dec
test
pand
scas
adc
mov
dec
ljmp
mov
jno
enter
stos
push
test
jp
inc
in
xor
fiaddl
or
es
mov
pushf
imul
and
testb
repnz
xorl
push
jae
mov
call
mov
push
lcall
aam
push
ljmp
or
mov
pop
icebp
cmpl
into
jg
xchg
xchg
jno
ds
int3
mov
adc
divb
xchg
mov
fidivrs
cmp
test
test
pop
stos
cli
rclb
ret
cmpsb
add
pop
sbb
mov
jecxz
loopne
aam
arpl
inc
adc
lret
lods
add
mov
xchg
and
test
lret
fstpt
testl
jb
les
dec
jmp
add
xlat
inc
cmp
mov
sarl
ds
push
sub
jo
cli
in
sbb
cs
cmp
sub
outsl
fsubs
out
xchg
jg
or
mov
pop
mov
stos
xchg
mov
pop
aam
mov
or
or
inc
xor
mov
fs
push
fidivrl
fwait
and
push
inc
mov
and
scas
jge
pop
js
lock
leave
mov
jb
aam
stos
xor
xchg
sbb
sub
mov
lock
add
fs
cmp
mov
sbb
mov
and
mov
xor
sub
js
fwait
pop
adc
xchg
adc
mov
cwtl
lcall
sarl
sub
cli
jle
ror
fwait
ss
fcomp
je
outsb
ret
ja
dec
outsb
clc
cmpsb
imul
cmp
mov
sub
fdivl
int
push
movsl
sahf
dec
jp
add
lds
jle
mov
xlat
push
aaa
icebp
xchg
push
loopne
add
sbb
or
inc
push
jae
mov
cmp
jb
into
inc
xlat
push
add
lret
in
aad
ret
and
push
push
jae
sub
cmp
pop
lea
pop
mov
xor
or
xchg
cmp
xchg
inc
push
inc
movsl
jge
sub
sbb
xor
pop
sub
cmp
and
lea
scas
pop
mov
cmp
stos
cwtl
xor
lock
imul
xorl
lods
mov
int3
cld
lds
pushf
add
dec
push
sbb
jmp
aam
ss
xchg
sbb
inc
incl
pop
out
push
xchg
jle
sub
push
lret
ja
scas
pop
push
push
mov
jl
sbb
adc
jo
aad
mov
push
stc
dec
add
mov
cltd
rcll
outsb
iret
cwtl
stos
lock
and
jl
jecxz
jo
xor
repz
pop
pop
mov
outsb
and
xlat
xchg
mov
outsl
sbb
dec
and
inc
mov
and
rcll
ret
xor
sbb
push
std
add
cwtl
addr16
js
jne
xchg
fs
sub
mov
dec
add
or
ljmp
mov
stos
lods
cmpsl
in
push
adc
outsl
in
mov
fcmovne
and
fisubs
xchg
test
xor
data16
das
repnz
mov
push
addr16
inc
pop
sub
sub
fnstsw
in
or
mov
jg
stos
loopne
cmp
dec
dec
sub
xchg
xchg
cmpl
loop
inc
push
rcl
test
mov
mov
adc
shlb
adc
in
sbb
lret
lret
js
mov
sti
mov
xchg
or
cmpsl
mov
push
inc
push
cmp
cwtl
inc
jle
mov
dec
lea
jmp
ret
fsubrl
lock
fs
mov
dec
push
mov
sub
inc
int
xchg
cmp
and
lock
cmp
ljmp
or
loope
in
scas
cmp
aas
mov
into
xor
dec
jmp
add
xor
and
in
push
in
push
and
outsl
adc
pop
addb
adc
call
push
enter
push
sbb
xchg
rcrl
xchg
fcompl
xor
scas
das
push
scas
mov
lods
inc
dec
lock
mov
cmc
addr16
jbe
int3
insl
cli
fwait
jmpw
mov
pop
lods
pop
pop
fidivrs
xorl
out
shrl
ss
std
test
cmp
int
fidivrl
or
mov
pop
cmpsb
sbb
adc
inc
jo
adc
xor
dec
daa
cmp
and
inc
xchg
cltd
and
jp
sbb
pop
ja
push
and
and
dec
xor
inc
popa
push
xchg
push
cltd
cwtl
jae
js
and
xchg
push
in
cmpsl
xor
sbb
out
lds
xchg
ja
inc
shlb
icebp
popa
jecxz
jl
scas
outsb
cmp
cmp
pop
out
sub
cmpsl
inc
push
cltd
cltd
add
xchg
mov
cwtl
test
and
xor
mov
in
dec
adc
dec
mov
mov
xchg
stos
shrb
mov
xor
int3
fmuls
ficoml
test
pop
popa
jns
scas
lret
scas
das
ret
movsl
sbb
std
dec
fistpl
test
ret
ds
inc
mov
xor
or
sbb
gs
rol
inc
cmp
lahf
mov
in
adc
int
inc
jle
sub
cmp
push
xchg
jmp
sub
sbb
pop
push
insb
cmp
fdivp
xchg
xchg
cmpsl
dec
sbb
xor
clc
imul
ficompl
cli
and
rep
outsl
scas
jns
cwtl
add
cmpsl
inc
loope
pusha
ds
fadd
sub
adcb
stc
enter
faddl
mov
scas
daa
xchg
xchg
testb
repnz
addb
xchg
sahf
sbb
inc
or
clc
movsl
int
fildll
jae
fisubrl
cmp
pop
ds
call
cmp
arpl
jecxz
cmp
xlat
loope
shr
push
rclb
test
dec
addr16
pop
pop
dec
repz
pop
fucom
sub
leave
mov
pushf
notb
je
or
mov
xchg
xor
ss
icebp
aas
outsb
mov
mov
push
loopne
popf
nop
lcall
sbbl
jae
mov
loope
je
inc
adc
push
mov
or
jno
hlt
mov
push
repnz
mov
movsl
mov
lods
pop
xchg
test
cli
jno
ret
lret
cmp
lret
mov
xor
sti
pop
mov
inc
mov
jne
cltd
arpl
push
sbb
aad
xor
jge
int3
inc
shlb
jbe
cmpsl
test
fldl
or
call
jmp
pop
pusha
and
mov
add
fsts
push
adc
xchg
inc
int
cltd
jb
push
mov
sbb
fucomip
es
adc
add
addb
or
mov
mov
in
std
xchg
jg
sbb
popa
and
jl
gs
int3
push
mov
rorb
imul
inc
add
sub
sbb
or
jl
insb
xchg
pop
orl
inc
mov
cld
and
adc
add
icebp
cmp
sub
sbb
or
jl
insb
xchg
pop
orl
inc
mov
cld
and
adc
add
icebp
cmp
sub
sbb
or
jl
insb
xchg
pop
add
popa
lods
push
pushf
inc
mov
cld
and
adc
add
icebp
cmp
sub
sbb
or
jl
insb
xchg
pop
orl
je
adc
jno
int3
or
sbb
sub
cmp
add
cltd
insb
mov
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
cwtl
insb
test
mov
sub
cmp
int3
adc
add
xor
and
mov
mov
or
outsl
lods
outsl
lcall
in
dec
xchg
pop
addl
xchg
test
aad
lods
jnp
xorl
jnp
and
and
mov
pushf
stos
push
xchg
push
xchg
ja
xchg
clc
addl
sbb
jp
insl
add
xchg
mov
xchg
mov
fld
dec
jae
pop
jecxz
repnz
jl
stc
inc
or
call
sti
out
xlat
sti
imul
arpl
sbb
std
mov
push
xorl
pop
mov
lahf
lea
imul
mov
adc
push
loopew
testl
sarl
and
rolb
mov
ret
or
sub
loopne
repnz
push
push
inc
call
ljmp
in
xor
cmp
mov
subb
or
sbb
sub
cmp
test
dec
mov
cmp
add
sbb
pop
lods
cmp
mov
dec
xchg
mov
pop
mov
push
jmp
cld
cmp
adc
jl
sti
mov
push
mov
dec
cltd
jge
jnp
pop
lods
push
pop
cwtl
insb
test
mov
sub
cmp
int3
or
sbb
sub
cmp
mov
cwtl
insb
test
mov
sub
cmp
int3
or
cmp
cld
cmpsb
and
adc
out
and
movsl
sti
jl
pop
addr16
lret
out
jp
xchg
outsb
push
loopne
jmp
dec
mov
xor
fwait
daa
jp
sbbb
bound
jns
xchg
cmpsl
and
fistps
sub
addr16
aas
sub
out
xchg
int
sbb
insb
repnz
pop
lds
push
ja
iret
add
stos
nop
sbb
pop
fstpl
mov
out
sbb
push
ret
jge
jmp
and
imul
je
popa
andb
test
jp
xchg
pop
mov
jp
je
push
addr16
mov
or
adc
arpl
cmc
lock
sbb
mov
and
dec
scas
add
roll
mov
cmp
sbb
fisttpll
xchg
push
mov
xchg
or
mov
outsb
inc
data16
js
test
pop
inc
scas
push
addr16
cmp
ffree
mov
movsb
mov
xchg
lods
loope
inc
ret
rcrb
pop
jmp
sbb
ret
lods
insb
jg
ljmp
fmull
sub
pop
lds
outsb
cwtl
or
mov
hlt
xorl
popf
fwait
jns
fsubs
pusha
mov
les
mov
es
sub
loopne
repnz
mov
lods
mov
lods
sub
ret
pop
dec
stos
push
cmp
lret
pop
mov
sub
sbb
add
in
adc
in
lret
sub
lods
add
cmp
lea
mov
xchg
sti
mov
mov
repz
xchg
add
pop
mov
nop
fdiv
adc
leave
lea
lcall
mov
xchg
aad
push
jne
jle
jo
xchg
clc
sarb
rcll
mov
push
cwtl
push
adc
adcb
in
fwait
and
or
fidivl
test
cmp
dec
js
cmp
and
mov
cmp
sub
dec
loope
add
jns
and
bound
inc
dec
faddp
sahf
lock
and
cld
je
add
push
mov
push
out
and
es
jb
or
push
mov
xchg
jge
das
int3
gs
mov
xchg
leave
push
xchg
lret
int3
ficompl
sub
daa
in
or
aas
jmp
mov
das
int
pop
daa
call
sbb
mov
cmp
shrb
rcrw
loop
xor
rcll
cld
insb
aaa
add
lds
xchg
add
call
xchg
and
call
test
inc
push
or
mov
mov
add
sub
dec
in
fcmove
push
add
pop
lock
cmp
lds
add
sub
or
mov
mov
mov
aad
je
lds
pusha
sub
add
in
sbb
push
icebp
sub
add
add
shlb
cli
loope
enter
int3
cld
mov
aam
adc
xchg
mov
xchg
dec
xchg
jnp
mov
ret
sarb
fmul
test
test
pop
aam
in
hlt
mov
mov
inc
mov
jns
lret
jno
xlat
clc
insb
aaa
imul
lods
fsts
or
cld
push
jne
xchg
int3
xor
repz
dec
imul
adc
push
jp
and
inc
mov
pop
xchg
dec
xor
out
adc
dec
cmpsl
mov
stos
out
dec
cmp
xor
popa
shrb
adc
xor
mov
xchg
cmpsb
push
loopne
mov
repz
fldl
cmpsb
or
inc
stos
lds
mov
aam
in
jp
outsb
pusha
add
push
cltd
fucom
cmpsb
pop
push
dec
add
movsb
push
andl
bound
scas
mov
cwtl
rcll
jge,pt
cmp
cmpsb
mov
adc
lods
mov
daa
add
hlt
push
mov
pop
pop
popf
xor
jg
or
jge
nop
std
pop
cmp
pop
xor
inc
and
dec
sbb
push
fdivrs
and
lds
int
imul
inc
test
sub
xlat
xor
sarl
jge
adc
mov
leave
cmp
adc
xchg
and
mov
adc
test
leave
sbb
addr16
outsb
pop
cltd
xchg
xor
das
push
inc
daa
iret
mov
pop
arpl
ret
in
sub
or
ja
mov
sbb
mov
cmpsl
cmp
clc
in
push
clc
inc
faddp
push
inc
sbb
add
sub
mov
xchg
insb
xor
pop
in
xchg
cmpsl
or
mov
mov
out
arpl
jle
pushf
jl
andl
push
push
stos
in
push
mov
inc
jmp
jg
sbb
test
inc
cmp
iret
andl
xchg
mov
cmp
lods
jmp
imul
and
roll
jbe
xchg
cmp
mov
xor
mov
fdivrs
sub
in
xchg
ljmp
daa
pop
or
and
adc
push
cmpsl
imul
popa
imul
mov
in
imul
cmpsl
cmpsb
aaa
stos
call
adc
sti
inc
test
into
lods
xor
outsb
xchg
push
jge
mov
add
add
test
gs
or
push
popf
cmp
jb
mov
jbe
jne
mov
mov
push
sbb
push
les
mov
sbb
js
test
inc
dec
lock
push
je
fiaddl
push
add
sbb
repnz
add
lea
mov
das
int3
icebp
cli
lods
cmpsb
cwtl
xor
fnstenv
dec
pop
sbb
xchg
lret
jecxz
lret
cmpsl
test
xchg
sti
lahf
in
dec
mov
addl
jle
arpl
adc
arpl
sbb
out
xchg
mov
mov
popf
dec
mov
popf
imul
mov
dec
or
sbb
cmpb
and
enter
jo
pop
pop
rolb
adc
inc
sub
mov
stos
push
jb
imul
mov
and
push
dec
ss
push
cmp
mov
jge
adc
adc
test
xchg
push
push
loop
sti
xchg
cwtl
sub
stos
lcall
jae
jmp
and
fwait
mov
std
leave
inc
das
add
dec
fs
cmpl
fs
test
lret
add
cmp
cmpsl
outsb
jnp
in
sub
inc
push
lock
hlt
xchg
aaa
outsb
out
push
rolb
adc
insb
cli
into
xchg
dec
or
xor
dec
cli
inc
or
divl
inc
leave
cmp
popa
iret
idivb
in
das
loopne
mov
lahf
or
add
mov
icebp
lret
sub
mov
fisubl
xchg
iret
cmc
lret
lds
lret
adc
outsl
add
imul
push
adc
push
xchg
fmulp
mov
into
lahf
push
stc
ret
outsl
mov
pop
shlb
movsl
ret
inc
add
mov
add
inc
aaa
jecxz
mulb
xor
xchg
dec
in
test
fnstcw
mov
sub
call
mov
xor
or
inc
xchg
imul
js
jns
push
sarb
push
aaa
add
scas
jg
push
fstl
imul
arpl
pop
mov
sahf
inc
push
andb
push
lods
dec
dec
out
scas
jno
or
push
add
pop
lret
shlb
push
les
sti
pop
add
inc
dec
and
cli
mov
ds
sub
mov
bswap
add
mov
inc
test
enter
cmpsb
push
fmul
scas
leave
in
push
jno
out
ja
fsts
cmp
cmp
imul
inc
or
mov
push
sahf
add
mov
xchg
mov
aad
jmp
mov
add
fidivrs
push
and
dec
clc
xchg
fcmovnu
sub
lahf
pop
into
jp
sahf
loopne
into
and
testl
test
jo
in
stos
pusha
jmp
mov
shlb
dec
add
inc
shlb
adc
mov
mov
or
fdivrs
rolb
fsubs
push
cmc
lret
cli
lods
fimuls
test
dec
lock
add
mov
mov
adc
std
iret
and
les
sbb
add
mov
inc
js
cmpsb
sbb
mov
pop
sub
bound
jbe
sub
es
iret
jo
fcmovu
loopne
sub
adc
cmp
sub
call
pause
push
push
sbb
repnz
iret
jno
cltd
push
hlt
jg
lret
sub
dec
loopne
sbb
or
adc
push
repnz
lcall
inc
pop
test
ss
lahf
cltd
xchg
roll
sbb
dec
mov
mov
test
fwait
inc
dec
loop
outsl
jns
xor
push
inc
adc
idivl
lea
iret
xor
pop
push
das
shlb
sub
sbb
sub
fidivrl
imul
out
push
pusha
arpl
push
dec
and
push
lcall
std
aam
mov
fdivrs
sarl
jecxz
aam
sbb
push
mov
mov
sbb
scas
or
mov
and
xchg
inc
sub
into
jecxz
rcll
cmp
mov
add
out
rcr
sarb
push
std
sub
jge
fldcw
lods
add
mov
outsb
dec
dec
mov
test
and
dec
push
inc
add
jns
fistpl
js
test
add
push
and
jecxz
popf
call
adc
xchg
hlt
movsl
rcrl
mov
aam
pop
mov
and
inc
jl
imul
lock
icebp
push
or
xor
into
xchg
sbb
pop
sahf
movsl
lods
xchg
jo
outsb
lock
mov
gs
inc
bound
ret
pop
adc
or
inc
adc
out
mov
mov
and
stc
mov
imull
pop
in
adc
dec
test
pop
adc
fs
or
sbb
xchg
loop
xchg
in
in
in
lods
sbbb
mov
fstpt
mov
cltd
lret
lahf
pop
lock
out
adc
push
aaa
adc
xlat
jp
push
xlat
and
ja
mov
inc
mov
sbb
icebp
ret
and
adc
add
sub
adc
fwait
mov
adc
sub
hlt
test
mov
into
mov
mov
mov
lret
push
and
fistpll
fcmovb
mov
ja
adc
add
cmc
xor
push
jno
cmp
lret
lds
mov
adc
in
out
cmp
idivl
data16
mov
mov
pushf
mov
add
mov
mov
ret
pop
cld
fs
sub
call
imul
jmp
fwait
cmpsl
mov
scas
or
jno
sbb
aam
out
mov
rcl
push
fdivrl
pop
xlat
ljmp
ret
sub
pop
nop
jp
dec
push
push
shrb
clc
mov
and
lcall
mov
loopne
out
fildll
lea
adc
fwait
xor
and
lret
aas
push
stos
mov
lds
es
cwtl
xchg
xchg
adc
xchg
movups
jmp
clc
cmpsl
add
jns
mov
lret
mov
xchg
adc
lods
push
inc
stos
inc
les
cmp
icebp
in
lret
jo
pop
push
pop
in
cmp
outsb
lea
out
clc
add
adc
insb
mov
or
loopne
pop
xchg
test
adc
sbb
bound
ja
in
loopne
and
fildll
jns
mov
cltd
ss
cmp
stc
aas
push
shll
push
fisubrs
cmp
adc
xor
mov
int3
dec
ret
subps
bound
sahf
sub
cmp
xchg
inc
inc
push
xor
mov
in
ja
inc
jl
cmp
mov
js
inc
lock
xlat
push
xchg
das
pop
cmp
stos
adc
sub
mov
mov
sub
pop
test
and
push
mov
xchg
pop
mov
pusha
sahf
sub
lods
adc
adc
mov
sti
dec
fcompl
inc
arpl
xlat
ret
testl
mov
cmp
les
push
push
push
jb
sti
xor
jp
push
xchg
setb
jo
adc
dec
lea
pop
mov
and
cmp
cmp
fldt
pop
hlt
arpl
or
loop
repnz
shlb
inc
repnz
adc
add
push
fisttpll
jo
cmp
cmp
inc
pop
and
mov
and
mov
out
mov
mov
fwait
dec
push
xchg
xchg
enter
test
mov
xlat
insb
rcll
clc
push
push
pop
fwait
loope
mov
fdivl
aam
orb
in
sbb
out
roll
jmp
cmpsl
out
jnp
push
testl
xchg
ja
jmp
dec
xchg
lcall
mov
repnz
in
pusha
xor
cmpsb
sbb
dec
cmp
mov
push
scas
xchg
push
add
cmc
sbbl
pop
inc
pop
inc
subb
daa
push
mov
std
mov
gs
xchg
sub
fisubs
pop
cwtl
js
sub
aam
sbb
mov
nop
stos
jecxz
inc
xchg
xchg
pusha
mov
adc
push
das
dec
ljmp
push
xchg
dec
aad
dec
inc
into
in
jle
dec
les
mov
mov
xchg
xchg
fsubrs
cld
mov
add
sub
mov
sub
mov
adc
rcr
or
testb
jb
mov
push
xor
scas
sub
push
pop
pop
insl
fistps
aad
xor
pushf
push
sub
jl
notl
cmc
enter
repnz
adc
les
inc
divl
imul
xchg
adc
or
stc
inc
data16
rorb
loope
and
icebp
xchg
mov
scas
cmp
cmpsl
bound
les
adc
aaa
bound
cmp
xor
stc
repz
or
imul
int3
iret
incl
test
jno
cld
add
sub
lahf
add
mov
or
sub
sub
aas
mov
popa
xchg
and
add
fldcw
fidivl
lret
jno
into
add
stc
call
in
outsl
dec
inc
sub
insb
xchg
cmp
adc
mov
mov
fs
int
push
fisubrl
repz
fprem
pop
fwait
mov
dec
push
sub
inc
xor
sahf
cltd
out
mov
lock
pop
and
pop
stc
std
sub
add
and
and
cmpb
out
mov
mov
mov
dec
imul
xchg
out
testl
cmp
fcompp
pop
out
mov
lods
jge
loope
stc
dec
mov
js
mov
fildl
ret
jb
and
jecxz
dec
jge
inc
into
in
cmp
adc
aam
imul
ja
jne
jecxz
xchg
pushf
popa
leave
lea
jg
add
adc
shrl
mov
idivl
fnstcw
cltd
shrb
cltd
daa
loope
insb
stos
aam
daa
data16
jle
cltd
add
ss
push
and
xor
sahf
pop
test
cmc
arpl
in
daa
pop
adc
sahf
scas
inc
mov
inc
cltd
mov
push
mov
or
fidivrs
test
aaa
mov
xor
jo
sbb
mov
dec
aas
pop
sub
push
inc
lret
xchg
pop
rol
test
loopne
dec
ret
xor
pop
out
jno
push
mov
xchg
je
sbb
ljmp
cmpsb
ret
jl
cmc
and
mov
dec
xor
push
enter
cmp
lods
sub
mov
cmp
mov
cld
pop
ret
mov
rolb
fmul
rorb
stc
outsb
out
orb
mov
sub
push
outsl
mov
mov
insl
cwtl
xor
push
test
rorb
fnsave
stc
cmp
scas
jg
xchg
sub
and
test
mov
test
sbb
fxch
mov
pop
outsb
sub
scas
dec
iret
clc
stos
lods
adc
fstl
cmc
dec
out
loop
and
stos
es
repnz
mov
dec
or
or
jp
or
jne
gs
repz
ss
hlt
mov
fstl
loop
fiaddl
add
pop
js
pop
add
adc
sti
pop
jo
fsts
gs
xchg
scas
push
jbe
mov
inc
cmpsb
push
adc
negl
sub
loope
cli
pop
or
fs
mov
cltd
or
mov
movsl
or
je
dec
pusha
int3
in
mov
mov
mov
adc
pop
sub
pop
lds
call
loopne
mov
push
add
mov
xchg
popf
gs
xchg
lret
mov
xor
mov
and
pop
dec
popa
dec
jno
out
sbbl
outsl
pop
xor
les
pop
daa
fsubr
add
leave
adc
cld
lds
push
jae
icebp
leave
add
mov
inc
js
hlt
jno
mov
add
fiaddl
mov
adc
stos
jge
jmp
into
jae
shl
pop
pop
xor
mov
outsl
lock
ds
aad
fcoms
andl
out
lods
inc
pop
and
leave
push
sub
shll
and
adc
push
inc
jns
sarl
and
loopne
test
pop
pusha
xchg
iret
push
push
icebp
fildl
faddl
repz
jmp
inc
jp
adc
xor
ds
jbe
or
mov
xchg
mov
xchg
push
xor
dec
xor
outsl
sub
adc
sbb
sub
cmovnp
call
adc
jne
jmp
in
dec
mov
int
stos
outsl
imull
pop
mov
and
cli
cmp
push
or
jmp
hlt
sti
lahf
mov
sarb
je
xor
stos
sahf
xchg
fwait
mov
xor
rorl
arpl
notb
dec
mov
push
cltd
mov
std
stos
add
pop
loop
shlb
jns
mov
arpl
jecxz
mov
xor
pop
lahf
ljmp
leave
shll
icebp
fsubrl
xchg
jecxz
adc
sub
test
loopne
mov
mov
jmp
push
outsl
push
sub
sbb
xchg
mov
lock
mov
dec
into
add
mov
push
cmp
sbb
mov
xchg
daa
push
callw
cmc
popa
ljmp
adc
testl
dec
cli
xchg
push
mov
daa
xchg
repz
sub
bswap
add
xchg
pop
rorl
mov
mov
clc
addr16
das
add
jnp
cld
pop
adc
ja
mov
popf
push
adc
das
imul
dec
push
jbe
mov
ds
mov
dec
fcompl
jae
je
sub
xor
imul
test
in
xchg
je
push
mov
lret
add
roll
cwtl
call
jle
mov
cli
mov
pop
mov
mov
or
push
xor
mov
jnp
dec
xchg
ffree
xor
jns
and
pushl
sbb
pop
pop
cmp
std
push
gs
jns
jmp
aaa
sbb
in
inc
clc
lcall
pop
ds
push
and
push
ret
and
mov
fs
lods
cli
add
adc
cs
popa
out
dec
sbb
scas
pop
in
jnp
dec
dec
mov
cmp
and
sbb
outsl
sbb
sub
and
xor
std
sqrtps
loope
pop
push
bound
dec
sbb
push
lret
fcmovu
repz
push
xchg
stos
mov
push
imul
jmp
pop
or
mov
push
addr16
and
lds
jmp
jno
inc
and
aaa
xchg
push
lea
sbb
cmp
adc
mov
leave
cmp
push
cmp
mov
sti
shll
int
popf
jb
mov
push
daa
add
or
jb
out
outsb
or
popa
dec
shlb
jo
push
out
jg
fstl
repz
jo
shlb
lea
fldcw
lret
cli
out
add
xchg
xor
ljmp
nop
pop
fldl
add
int3
inc
icebp
cmp
jp
or
into
mov
lods
sbb
sub
cmp
mov
cwtl
insb
test
mov
sub
cmp
int3
or
sbb
sub
cmp
mov
cwtl
insb
test
mov
sub
cmp
int3
or
sbb
sub
cmp
mov
cwtl
insb
test
mov
sub
or
sbb
sub
cmp
cmp
mov
mov
iret
jnp
xchg
cmpsl
aam
les
mov
imul
ds
cs
jle
jle
cli
or
cmp
dec
into
pop
push
push
cwtl
pop
mov
dec
fdivrs
outsb
clc
es
jl
sub
jbe
sarb
loopne
out
dec
jp
sub
lret
cmp
sub
ret
jnp
pop
fiaddl
mov
pop
add
push
sbb
dec
aam
pop
push
jb
jb
ds
sub
lock
dec
shll
arpl
mov
fstl
xchg
xchg
mov
pusha
lret
inc
lret
jno
enter
mov
dec
mov
mov
test
or
cmp
aas
inc
or
sbb
inc
cmp
pop
into
push
pop
or
sarb
jg
outsb
test
and
aad
and
pop
jne
test
stos
iret
ds
imul
dec
int
mov
adc
mov
pop
daa
stos
add
fstpt
fisttpl
enter
rcl
mov
insl
xchg
lds
cmp
dec
mov
push
xchg
xor
push
test
hlt
inc
ss
lock
lret
cld
ja
inc
push
mov
mov
aas
push
lret
pop
call
sub
and
rorl
pop
int3
pop
iret
push
mov
stos
or
add
in
ds
push
mov
xchg
fcoms
lea
mov
jnp
clc
filds
lea
pop
push
push
cwtl
ds
mov
jle
outsb
clc
sahf
or
cmp
dec
into
pop
push
push
cwtl
ds
mov
jle
outsb
clc
sahf
or
dec
jl
outsb
adc
es
nop
rorl
std
loop
cmp
arpl
jnp
sub
idivb
imul
and
jmpw
push
add
loop
loope
xchg
mov
inc
enter
push
jle
pusha
add
adc
add
pop
sbb
xor
pop
stos
pop
jne
loop
aaa
cld
xchg
ret
outsb
iret
rcl
jnp
pop
std
ss
push
int
push
stos
inc
lock
clc
sbb
push
add
fcmovnbe
mov
inc
mov
xchg
dec
dec
daa
bound
sbbb
bound
add
loopne
mov
inc
data16
loopne
je
and
out
push
xchg
sbb
aam
mov
call
outsb
push
cmp
cmc
aas
sti
sub
mov
adc
pop
mov
out
aad
sbb
cmp
scas
sarb
mov
out
ds
popl
outsb
xchg
and
and
sbb
lds
sti
popf
mov
adcl
push
pop
shll
adc
inc
cwtl
sub
fcompl
add
push
stc
sarb
leave
inc
fldl
fsqrt
xchg
jp
xchg
les
sbb
sti
clc
xchg
cmp
mov
cmp
or
into
dec
ret
cs
idivb
cmp
outsb
push
in
mov
dec
mov
mov
mov
aas
je
es
jno
pop
clc
adc
or
sub
aaa
xchg
jbe
int3
cli
and
mov
adc
jp
out
jle
xor
lea
lahf
mov
fnstenv
shrl
mov
icebp
les
in
fwait
arpl
popa
aam
sub
mov
cld
mov
fwait
sarl
mov
add
sbbb
pop
cmp
mov
in
lcall
negl
jle
vmovhps
es
scas
pop
int3
popf
sub
int
aaa
fwait
inc
mov
mov
sub
add
xchg
sbb
rcrb
inc
push
call
cld
loop
inc
jmp
cmp
push
ret
mov
fprem
insl
jno
sub
xor
cltd
fdivrl
pop
or
mov
fcomps
sbb
fstps
sar
mov
shlb
or
into
inc
sbb
adc
dec
pop
cld
outsl
or
cmp
hlt
push
xchg
jecxz
dec
jns
push
cwtl
or
call
out
jmp
jmp
repz
or
mov
sub
inc
push
adc
mov
sub
stc
dec
sub
ljmp
adc
inc
lods
push
jecxz
ret
push
sub
add
pop
cmc
cli
xorl
sub
or
push
inc
push
mov
push
inc
mov
push
push
lcall
rorl
cmp
cmc
jb
xchg
inc
jno
push
inc
mov
xor
stos
pop
adc
fistps
ja
sbb
std
add
xor
xchg
scas
mov
mov
mov
cmpsl
pop
mov
dec
pop
lock
pushf
nop
and
sub
cmp
aad
jb
fsubs
add
nop
cmc
lods
test
push
aaa
sbb
cmp
movsl
arpl
sub
cld
push
jbe
orb
ficoml
and
or
jmp
or
jo
xor
repnz
shlb
pop
in
inc
clc
and
mov
cmp
inc
in
incl
cwtl
mov
popf
mov
lock
or
sti
xlat
ds
mov
call
jge
aad
mov
pop
push
sub
pusha
or
cmp
push
enter
movsl
jp
ds
clc
repnz
in
movsl
dec
in
aad
shrb
aad
fidivrl
jns
cld
in
inc
add
and
adc
clc
jp
js
cli
in
test
push
in
sbb
fcoml
ret
inc
jb
xchg
sbb
fadds
fs
push
sbbl
pop
add
inc
sbb
jge
pop
and
mov
fdivr
cmp
out
movsb
mov
ja
xchg
repz
test
test
cli
jns
xchg
popa
sub
jnp
gs
dec
out
mov
push
adc
ljmp
aam
data16
icebp
lret
mov
xor
push
sub
icebp
adc
lcall
or
sub
dec
icebp
imul
and
cld
jbe
jns
push
or
pop
adc
popf
shll
adcb
bound
cmp
add
inc
adc
sti
pusha
mov
test
cld
push
scas
popf
add
in
pop
jp
adc
rorl
jne
dec
popa
mov
gs
xchg
jnp
mov
jle
adc
sub
das
jecxz
stc
cmpsb
and
adc
add
add
mov
sub
rcrb
pusha
out
lret
ret
jl
xor
cmc
xchg
enter
fsubl
imull
outsl
or
lcall
adc
and
pop
push
or
mov
pop
stc
das
xor
push
push
push
push
cwtl
repnz
js
cltd
insb
mov
sbb
outsl
cltd
test
dec
cmp
add
xchg
and
std
cmc
dec
lods
dec
mov
jns
sub
jnp
xchg
mov
adc
and
cmc
out
add
jle
scas
push
push
icebp
movsl
mov
adc
cs
pop
push
out
mov
imul
pop
sti
je
outsb
arpl
pushw
cmpsl
or
mov
sahf
mov
dec
cmpsl
mull
push
ficoms
adc
add
and
mov
int
adc
or
fs
ficompl
jmp
mov
or
and
push
int3
push
sub
sbb
sahf
push
dec
jl
cmpsb
fcom
ja
xchg
pusha
aam
mov
ss
and
out
pop
or
aas
test
push
in
jbe
fwait
dec
jp
push
jmp
jecxz
cmp
mov
gs
repnz
or
xchg
shr
lods
cmpsb
shll
mov
mov
ret
add
jbe
addr16
mov
push
dec
mov
push
iret
and
mov
mov
jmp
outsb
jae
fmull
imul
and
mov
xchg
mov
or
pop
and
jae
in
rep
test
sbb
jns
test
jge
out
scas
out
push
cltd
imul
shrl
sbb
or
arpl
les
repnz
sbb
loop
pop
pop
mov
push
or
std
das
iret
jl
lcall
xor
scas
add
xchg
xchg
cli
xor
fbld
pop
pop
xlat
pop
ljmp
add
push
insb
inc
jg
push
sbb
movsb
inc
jecxz
push
xlat
adc
ja
insl
jg
xor
arpl
clc
xlat
dec
mov
mov
xrelease
add
dec
xchg
sbb
imul
jg
jl
sbb
xor
movsl
es
outsl
movsb
test
or
push
clc
outsb
out
in
sbb
shlb
pop
pop
sbb
or
pop
push
rcll
fwait
or
add
movsb
or
cmp
in
inc
ret
pop
popa
mov
xchg
aaa
mov
inc
push
sbb
and
xchg
and
mov
xchg
inc
lahf
icebp
mov
push
mov
pop
movsb
loopne
ret
pop
js
pop
arpl
mov
test
lahf
inc
outsl
sbb
out
test
xor
sahf
pop
sbbl
notb
aaa
mov
sbb
es
shrl
mov
lods
repnz
cmp
xor
adc
and
es
cmp
jbe
inc
dec
mov
adc
int
lahf
out
pop
stc
mov
mov
pop
add
xchg
or
out
add
and
daa
sbb
dec
ficoms
imul
mov
loope
or
jo
pop
lcall
in
lock
mov
lret
hlt
das
cmp
repz
or
jmp
xor
popa
rcl
in
sbb
xor
cld
mov
andb
fcmovnu
negb
jle
iret
or
sub
sbb
sub
scas
test
dec
lods
or
or
jecxz
mov
out
in
lock
movsb
pushf
sti
pop
or
daa
les
fcmove
inc
mul
add
dec
ret
and
ja
jae,pt
cli
lds
mov
leave
xchg
mull
in
movsl
lods
pop
daa
andl
icebp
mov
outsb
mov
ljmp
mov
mov
mov
adc
outsb
cmp
call
loopne
popa
leave
fdivl
dec
cmp
mov
sub
xchg
push
cmpsb
scas
stos
rcl
imul
icebp
stos
test
dec
fsubl
add
lret
push
push
push
pop
push
and
aam
inc
inc
mov
popa
xchg
lret
adc
push
ds
insb
fcmovnu
xor
adc
sbb
addr16
or
lds
cmp
push
xchg
mov
movsl
rcll
sarb
pinsrw
mov
in
inc
pop
mov
mov
xor
mov
pop
test
or
pop
and
inc
fdivrl
jne
xor
ret
sbb
jl
divl
sbb
pop
cli
sbb
sbb
sarl
cwtl
ljmp
jne
mov
add
pop
pop
lds
push
xor
push
fiadds
aas
clc
jp
jno
mov
insl
repnz
lds
xor
xor
mov
popa
mov
ret
js
out
rcrb
sub
mov
jecxz
sbb
testb
ljmp
lds
mov
popl
out
mov
push
pop
sahf
stos
outsb
add
fmull
cld
mov
xor
imul
jmp
les
jns
mov
inc
popf
sarl
pop
push
sub
sub
or
push
rolb
movaps
jg
hlt
aam
gs
lock
notb
lret
data16
jl
xor
pop
cmp
insl
xor
and
jl
or
mov
into
dec
call
adc
cmc
fsubl
in
nop
fadd
sbb
push
roll
in
xor
loope
push
loop
jp
inc
add
in
xor
push
mov
fiaddl
or
les
ret
push
mov
fwait
imul
dec
or
and
mull
dec
dec
add
or
sbb
cmp
test
jns
jmp
dec
gs
jmp
jge
or
xchg
jg
gs
stos
iret
scas
xor
push
data16
out
inc
dec
sub
dec
sub
push
pop
fdiv
mov
les
loop
sahf
orl
jne
popa
cs
lods
cmp
ret
rcll
addb
iret
add
sarl
add
std
dec
rcl
add
shlb
mov
call
lea
bswap
idivb
or
ret
pop
popa
mov
js
xor
jp
pusha
data16
sub
sbbl
xchg
insb
cltd
adc
sub
push
pop
xlat
fnstcw
lret
add
faddp
push
dec
cld
dec
xlat
or
fistpl
movsl
cmp
or
add
aam
arpl
les
mov
sub
std
mov
cmp
inc
sub
lods
ljmp
orl
sbb
dec
mov
cli
and
ss
cmp
mov
int3
pop
dec
and
xchg
cmp
add
popf
sahf
adcl
dec
movsb
aas
aam
mov
cmp
in
mov
imul
sbb
fcmovbe
arpl
popf
cli
loop
adc
jecxz
scas
lods
inc
jno
inc
push
dec
fdivs
jmp
shl
arpl
jmp
pop
subb
scas
sub
mov
mov
enter
jbe
push
leave
movsb
imul
lea
dec
lret
mov
add
out
jno
shl
std
sbbb
push
add
xor
add
mov
cld
jmp
or
adc
push
sbb
push
cmpsl
or
cmc
adc
addr16
mov
imul
in
inc
mov
lods
or
push
cmp
push
push
jge
out
dec
mov
faddl
jo
sub
mov
push
ss
nop
mov
xchg
cwtl
scas
nop
pushf
das
sub
pop
test
sbb
js
and
xor
pop
movsb
out
fmulp
adc
out
sar
lcall
lock
mov
adc
lcall
or
js
enter
jne
jb
pop
pop
push
xchg
fidivrl
xchg
out
add
out
das
rcll
push
sbbb
inc
cmp
jle
jns
add
pop
hlt
cltd
icebp
cmp
mov
cmp
lret
clc
into
sti
andl
dec
jno
pop
dec
and
ret
jae
xlat
je
lahf
cld
dec
dec
lahf
sahf
mov
out
cmp
out
js
dec
mov
mov
mov
jecxz
mov
jbe
je
xor
scas
push
sbb
popf
lret
pushf
push
xor
add
bound
fidivrl
inc
sub
sbb
nop
xchg
xchg
fwait
lods
lret
call
cmp
insl
pop
and
dec
mov
sub
xchg
cmp
jbe
icebp
mov
jg
lock
dec
aam
xor
adc
cmp
mov
stos
pop
xchg
add
pushw
orb
rcrb
adcl
xchg
jbe
dec
mov
in
test
mov
fsubs
dec
mov
xchg
or
adc
push
pop
fsubl
cmc
cwtl
dec
arpl
sbb
push
es
adc
roll
out
paddusb
add
dec
sub
adc
jne
into
movsl
xchg
int
movsb
and
outsl
out
sub
adc
arpl
cmp
pop
dec
ret
lock
fnstenv
adc
clc
xchg
adc
inc
mov
mov
mov
jbe
dec
xchg
or
jae
mov
adc
shlb
dec
in
lock
inc
pop
pusha
test
sbb
cmp
mov
sbb
hlt
sbb
pushf
add
sub
xor
aas
inc
jb
xchg
push
roll
test
cmp
pop
jmp
je
negl
xor
cmp
orl
xor
push
es
cmp
aaa
int
push
adc
inc
mov
adc
out
mov
fcmovne
adc
adc
mov
inc
insl
js
aam
xchg
adc
mov
inc
stos
cmpsl
adc
test
loope
movsb
adc
mov
inc
and
mov
cli
adc
pop
or
inc
cltd
js
sbb
add
out
push
xchg
xchg
pop
pop
mov
data16
loop
mov
sub
mov
pushl
mov
sub
loopne
arpl
mov
insl
rorl
mov
in
push
out
dec
icebp
movb
out
xchg
mov
add
adc
pop
mov
jns
and
popf
pop
in
mov
test
or
pop
leave
push
pop
or
sub
adc
sub
pop
pop
into
sub
ret
or
inc
push
jb
mov
subb
mov
in
inc
aaa
std
mov
lds
mov
mov
jg
bnd
adc
mov
popf
sub
or
mov
aas
fnstsw
push
fnstsw
aad
sbb
mov
push
mov
orl
and
mov
lahf
cmp
jmp
pushf
fistps
js
or
adc
mov
decb
push
or
sub
cltd
adcl
ljmp
adc
inc
jo
repz
lret
xchg
or
and
push
mov
cmp
sti
mov
sahf
in
push
mulb
rorb
jp
jo
xor
imul
stos
test
mov
push
push
fiadds
xor
es
push
and
mov
insl
stos
test
dec
mov
add
xor
imul
jl
xchg
xchg
shl
outsl
cmp
push
popa
xchg
test
hlt
rol
sbb
cmp
sahf
mov
xchg
and
lcall
xor
pusha
inc
sub
mov
dec
mov
scas
lret
or
dec
popf
nop
mov
mov
ja
pop
cld
jb
add
notl
mov
add
div
les
dec
jp
lods
sbbl
movsl
les
xor
push
adc
jne
inc
imul
js
in
push
lods
mov
cmp
cmp
mov
mov
push
inc
leave
mov
out
mov
movsl
ds
leave
in
int3
imul
out
in
repz
xor
pmulhw
or
mov
cmp
and
push
orb
arpl
push
je
push
xor
sub
je
or
mov
jp
mov
lods
cmpb
mov
cmpsl
ret
bound
lea
xor
int
sahf
jbe
lds
loop
jb
fwait
xorb
add
xor
jae
mov
mov
sti
jo
mov
and
cmp
cmpsb
xchg
sbb
xor
sub
lcall
scas
dec
das
rcrb
sarb
ja
jno
xchg
and
add
push
xchg
or
pop
xchg
xor
enter
jno
es
mov
dec
scas
push
repnz
mov
and
jne
pop
fistl
inc
out
jns
in
add
jb
mov
mov
cwtl
and
push
sub
int3
imul
sub
daa
bound
icebp
mov
iret
movsb
ds
fstpl
mov
cld
dec
popf
sbb
sub
jbe
jp
mov
test
in
test
enter
out
sub
dec
sub
xchg
fists
inc
notb
adc
sub
sub
out
jae
jb
cs
dec
repnz
adc
jle
cli
cltd
inc
rcrb
jl
xchg
jl
ret
xchg
lods
jmp
stc
jg
cwtl
push
sbb
add
push
mov
repnz
jp
into
insb
and
mov
dec
movsb
mov
nop
push
push
dec
push
ret
xchg
adc
clc
push
pop
sahf
jnp
jmp
aaa
ljmp
hlt
div
mov
aaa
dec
mov
ljmp
xchg
push
xor
aas
push
orb
insb
inc
adc
mov
incb
scas
js
cmpl
fsubrp
pop
xchg
js
xchg
subl
add
xor
mov
push
data16
xor
stos
pop
xor
inc
fnstenv
aas
sub
sub
clc
pop
mov
nop
inc
sbb
mov
and
fistl
iret
mov
pop
push
call
mov
insl
stos
dec
sti
dec
xchg
arpl
inc
inc
pop
and
loopne
cmp
outsb
stc
add
dec
and
mov
pop
mov
faddl
repnz
push
xor
enter
pushf
pop
out
leave
in
rcr
add
fldl
imul
mov
aas
pop
mov
je,pt
xlat
xor
dec
adcb
push
imul
mov
pop
inc
sub
adc
sub
ret
or
fwait
dec
add
jp
cmp
xchg
das
sub
mov
mov
xchg
arpl
out
push
cs
in
scas
popa
mov
jmp
jp
movsb
ret
ret
lret
lret
pop
scas
fld
imul
dec
xchg
dec
dec
mov
ret
pop
mov
orl
movsb
pop
sub
xor
repz
adc
aam
addr16
pop
dec
cmc
jecxz
ljmp
daa
test
pop
test
rorb
or
mov
sbb
lret
sti
aas
lret
adc
xor
push
hlt
ret
jle
imul
and
sbb
jnp
pusha
and
inc
loopne
xor
ret
test
test
jae
ret
loopne
xchg
cmpsl
or
push
jnp
jbe
fsubl
xor
cmp
cmp
inc
imull
inc
lds
lret
lods
jmp
push
outsb
xchg
mov
movsl
jnp
stc
mov
adc
sub
dec
add
sub
test
inc
jnp
fldenv
jmp
addr16
in
mov
cli
pop
cmp
lcall
push
jae
sahf
fwait
mov
mov
sbb
pop
jg
mov
mov
cmp
jecxz
jne
xor
insl
jnp
ja
sbb
pop
pop
mov
arpl
jns
stc
sub
into
pop
push
push
cwtl
ds
mov
jle
outsb
clc
sahf
or
cmp
dec
into
pop
push
push
cwtl
ds
mov
jle
outsb
clc
sahf
or
push
fidivs
scas
cmp
dec
into
xor
insb
js,pn
mov
pushf
into
test
mov
int3
pop
fdivrs
xchg
in
sar
in
mov
dec
ficomps
call
icebp
xor
mov
cmp
mov
jmp
test
mov
dec
or
imul
pop
sub
stc
lcall
mov
cmp
jns
imul
pop
sub
stc
lcall
mov
cmp
or
insl
push
xor
mov
popa
pop
fimull
mov
cmp
push
out
rcrl
shll
mov
call
cmc
jbe
mov
mov
push
jns
push
inc
cmp
pop
test
sti
test
into
jo
inc
mov
push
pop
jl
test
leave
pop
sub
mov
std
ljmp
stc
cmp
pop
or
sub
push
or
inc
xor
add
inc
sbb
dec
pop
test
pop
cmp
adc
movsl
jns
pop
mov
pushf
or
mov
jb
sub
cmpsb
in
pop
jg
xchg
imul
sub
sub
fnstcw
jmp
lret
test
or
imul
pop
outsl
fidivs
scas
test
fdivrl
and
jle
push
je
jo
mov
stc
cmp
sarb
lret
test
jb
jg
and
data16
fmull
mov
mov
mov
cmp
jns
imul
pop
sub
stc
lcall
mov
cmp
jns
imul
pop
sub
or
cmp
out
xlat
cmp
and
imul
pop
push
enter
loope
dec
scas
mov
mov
pushf
inc
push
lcall
mov
jp
jl
insb
shl
movsl
push
add
mov
push
hlt
flds
jg
jl
shll
or
addr16
imul
jbe
hlt
ja
cwtl
das
adc
sbb
push
add
popa
imulb
mov
callw
fldenv
cmp
pop
add
pop
aas
stos
imul
nop
icebp
push
mov
xor
gs
jmp
cmp
test
shrl
pop
scas
movsb
adc
jmp
rorl
notl
lock
aaa
in
mov
pop
aaa
mov
jl
add
outsl
xor
cmp
pusha
je
inc
sarl
in
push
sub
rcl
scas
scas
es
xchg
pusha
cld
pop
mov
pop
test
add
mov
mov
dec
fldl
mov
mov
or
push
cmpsb
lcall
cmp
cli
sub
shl
sbb
rclb
add
mov
out
sub
or
rcrb
push
cltd
ja
mov
popf
aad
and
test
bound
sbb
cli
mov
mov
xchg
test
sbb
mov
and
add
aam
push
cs
dec
icebp
pop
add
jns
out
sti
push
imul
push
push
aad
jmp
in
xor
int
stos
mov
inc
fisubrl
adcb
fnsave
xchg
aad
xorl
mov
jno
push
xchg
and
and
int
mov
dec
repnz
xor
mov
scas
rolb
dec
imul
iret
cmc
sahf
cli
mov
lea
lea
out
repz
lock
cmc
xor
iret
or
adc
mov
mov
sub
ljmp
xchg
mov
repz
into
fnstsw
push
sbb
mov
popf
mov
xchg
loop
inc
in
clc
push
ljmp
test
jmp
hlt
mov
push
std
in
sbb
xchg
stc
js
popa
mov
rcrb
dec
mov
and
sub
addr16
int3
nop
in
push
scas
ret
jae
fldlg2
pop
sbb
sbb
mov
mov
fadd
sbb
cmp
les
jecxz
or
add
pop
insb
ret
sbb
xchg
sub
push
push
jl
dec
and
sbb
dec
inc
pop
out
loop
leave
push
or
sbb
push
and
out
pusha
pop
add
int
push
je
jno
mov
fnsave
cmpsb
pusha
popw
push
into
xor
jbe
jl
lock
cwtl
in
jle
cmp
mov
xor
mov
push
aaa
push
jbe
adc
pushf
push
ret
subb
push
adc
jmp
jecxz
lcall
jne
adc
loop
aam
fnstcw
lret
jae
orb
js
cmp
push
lahf
inc
jno
pop
dec
inc
test
dec
adc
jle
mov
xchg
icebp
jmp
xor
push
jp
fcoms
cmc
in
jo
jns
sub
aaa
test
sbb
ret
mov
push
loope
mov
aaa
mov
into
stc
push
inc
jns
add
dec
add
mov
mov
in
mov
lcall
idivl
notl
or
rcrb
push
mov
clc
pushf
shl
or
mov
xor
push
pop
mov
and
je
push
stos
aaa
std
dec
cmpsl
loopne
pop
in
jne
xor
add
add
and
mov
out
xlat
mov
xchg
or
fldl2e
pop
and
or
mov
push
sub
mov
push
in
xchg
and
or
rolb
in
cmpl
jne
leave
mov
mov
lcall
xchg
xor
and
adc
push
xchg
jbe
and
lret
push
out
bound
sub
orl
xor
or
cli
inc
push
jb
cmc
popf
mov
inc
and
enter
push
out
mov
scas
in
inc
imull
jmp
fsubrp
mov
xor
bound
jg
mov
mov
mov
or
adc
nop
adc
mov
vmulpd
jecxz
movsb
lds
jne
dec
lcall
lahf
mov
imul
leave
inc
push
insb
mov
push
mov
fucom
xchg
je
lahf
jno
fadd
push
xchg
mov
daa
jmp
jle
insl
int
push
cmp
aad
cwtl
inc
adc
mov
mov
in
rorl
popf
push
dec
jge
movsb
pop
adc
stos
cltd
cmpsb
mov
mov
aam
sub
inc
stos
sbb
pop
or
xchg
lret
jecxz
ja
adc
fstpl
push
movsb
push
daa
imul
mov
jge
sub
dec
or
sub
decb
or
ss
cmpsb
xor
mov
loopne
mov
adc
inc
test
enter
test
xchg
pushf
es
in
jge
cwtl
test
adc
mov
push
xchg
or
push
jbe
xchg
push
pop
loope
jecxz,pt
jge
cli
jne
mov
jg
mov
imul
mov
cmp
dec
movsl
lock
ret
sub
hlt
lock
scas
push
sub
out
mov
lods
lods
mov
lods
dec
mov
inc
lea
jne
aad
mov
mov
lods
jb
adc
jbe
nop
loop
mov
adc
iret
mov
lds
jno
mov
xchg
movsl
add
loopne
shl
fs
pop
xchg
pop
fistpll
mov
sub
jo
or
in
lods
push
orb
int3
scas
je
gs
addr16
mov
xor
mov
xchg
addr16
xor
loope
dec
clc
jne
imul
clc
ret
inc
sub
ret
or
pushf
jmp
sbb
sub
rep
jae
sbb
adc
xchg
pop
gs
fs
out
inc
cmp
pop
in
push
sub
sbb
inc
add
xor
xchg
lret
xchg
gs
push
adc
push
jae
int3
fsubr
sbb
xchg
dec
sbb
fistl
lret
je
sbb
add
fidivs
or
in
stc
jo
cld
pop
jno
inc
fs
ja
sbb
cmpsl
es
ret
divl
pop
ss
rcr
push
mov
or
and
sbb
pop
mov
push
fwait
out
mov
xchg
adc
bound
incl
leave
lcall
jge
pusha
jmp
stos
stos
add
jno
push
ljmp
scas
push
fildll
imul
lahf
out
and
sbb
add
pop
xchg
shlb
cmp
movsl
pop
mov
insl
popf
adc
aas
dec
jb
jb
loop
mov
mov
push
push
cmp
cs
in
movsl
push
aaa
es
xor
or
dec
shlb
adc
inc
into
jae
or
pop
jmp
mov
and
cltd
adc
insl
dec
dec
ret
mov
fnclex
ljmp
mov
mov
dec
mov
push
cmp
sarl
and
cmp
pop
arpl
pop
mov
inc
dec
xchg
sbb
pop
enter
lret
lcall
cld
imul
cmp
insb
cmp
sbbl
add
jmp
ret
in
push
pop
pushf
push
sub
lock
jae
enter
add
xor
test
xor
pop
mov
push
xor
cmp
mov
test
imul
stos
lret
jne
ljmp
loop
test
frstor
scas
xor
sbb
push
xchg
fnsave
data16
shrl
add
mov
pop
std
lods
mov
cltd
dec
mov
or
scas
test
mov
mov
fsub
int
pushf
adc
or
sbb
jne
mov
stos
aad
xlat
outsl
jae
jno
rcl
mov
push
pop
movsl
mov
sbb
push
jl
mov
ljmp
dec
sbb
mov
inc
cmpsb
xlat
leave
fs
mov
out
xchg
push
sbb
lahf
jno
call
xchg
xor
fmull
fadds
nop
lcall
daa
int
test
cs
sub
sbb
fnstenv
outsb
inc
movsb
bound
jp
add
jb
lret
into
lds
imul
adc
mov
pop
push
xchg
mov
dec
fucomi
in
repz
test
adc
stos
xchg
push
jb
aas
scas
gs
stc
mov
cmp
mov
shrl
rcr
out
jle
popa
sbb
push
and
pushf
xor
sbb
pop
js
popl
push
dec
sub
inc
lds
xchg
dec
pushf
jae
pop
xchg
imull
jp
jl
push
movsl
sub
ret
leave
scas
jo
xor
out
aam
push
je
jecxz
push
shrl
arpl
hlt
pop
mov
adc
pop
mov
rcrl
shr
stc
sbb
cld
xchg
dec
sbbb
pop
movsl
les
hlt
jo
and
dec
mov
test
or
add
inc
enter
enter
jp
push
testl
mov
aas
insb
shrb
pop
sarl
fcompl
inc
shl
ret
inc
repz
ret
xchg
dec
sahf
jns
pop
adc
mov
imul
push
data16
hlt
and
cmp
fnstenv
mov
and
out
and
int3
mov
fcomp
dec
roll
mov
pop
out
or
add
imul
jb
jb
arpl
adc
lahf
adc
out
xor
enter
dec
jno
inc
loop
pop
mov
xchg
call
pop
cmp
pop
sub
imul
pop
dec
adcl
xor
adc
lock
dec
mov
idivl
jmp
xlat
bound
repnz
adc
or
push
lods
adc
inc
filds
sahf
pop
cmp
mov
lcall
repnz
push
das
pop
and
hlt
sbb
inc
pushf
cli
cmp
js
add
pop
inc
inc
stos
out
loop
mov
pushl
or
jecxz
bound
inc
leave
adc
popa
jns
dec
adc
pop
and
icebp
jl
ficompl
shlb
cmp
xor
cmp
jle
shll
das
sub
or
dec
push
cmp
out
sub
fsts
stc
sbb
inc
insl
push
sub
push
sbb
iret
adc
loope
sbb
cltd
test
call
es
subl
rcrl
sbb
dec
sbb
or
icebp
out
pop
sahf
mov
xor
mov
gs
jbe
popf
sub
or
in
pop
cmp
cmc
jmp
movsl
push
les
inc
dec
mov
cmp
jecxz
inc
jbe
adc
adc
push
inc
pop
scas
dec
and
jb
sti
xchg
xchg
cmp
mull
repz
sub
pop
pop
jo
sub
cs
xchg
sub
add
mov
pop
leave
cmp
faddp
out
cmp
push
or
int
add
insw
push
mov
sub
fiadds
ss
repz
sti
jecxz
ret
add
pop
scas
pop
ret
or
xchg
outsb
in
addr16
andl
mov
in
sbb
push
dec
xchg
jle
mov
mov
outsb
pop
cmp
cltd
loope
out
xor
xchg
lret
sbb
lret
xor
addb
sub
data16
test
push
cmpsb
faddl
cld
out
lds
jl
sub
icebp
dec
hlt
cmp
cld
sti
mov
add
or
js
push
dec
insb
or
jmp
mov
testl
les
leave
inc
jno
cmpsl
imul
sub
xor
mov
mov
pop
jle
pop
push
insb
adc
test
jmp
adc
pop
mov
jl
mov
mov
daa
or
and
addl
mov
xchg
cmp
mov
inc
hlt
and
call
les
and
pusha
mov
incb
nop
xor
push
in
js
pop
std
mov
clc
xor
lcall
movsl
in
push
pop
aam
adc
push
aam
ret
std
les
icebp
adc
push
xor
mov
pop
cmc
shll
pop
jmp
and
cmp
fs
sahf
lods
adc
loopne
mov
outsl
int3
sub
incb
out
das
inc
jnp
jecxz
xchg
movsb
outsb
es
jg
and
jo
jge
mov
or
dec
fwait
adc
sub
out
popa
ret
outsl
ja
mov
repz
aas
fildl
push
pusha
pop
data16
int3
sbb
setnp
int3
scas
jecxz
ret
popf
xchg
dec
cmp
pop
std
in
aaa
jecxz
fwait
sbb
push
jp
ss
mov
xchg
push
leave
aaa
xor
lock
and
rclb
enter
sarl
cmp
test
sbb
sub
cmp
shl
or
xchg
shr
stos
in
ss
outsl
ret
and
xor
adc
arpl
aas
stos
jmp
and
lods
addr16
xchg
int3
fadds
lock
sub
je
jge
push
jbe
lods
dec
lea
sub
adc
es
cmp
arpl
mov
mov
lret
push
or
ss
fsubl
out
sub
jecxz
bound
xchg
ljmp
das
push
out
inc
add
xorl
scas
add
jp
les
push
push
add
outsb
out
arpl
hlt
mov
pop
jmp
or
push
inc
jl
xor
add
enter
movl
or
idivl
out
jl
pop
xchg
shll
or
movsl
ret
adc
addr16
lds
repz
mov
xchg
lret
add
repnz
xor
test
mov
lret
push
xchg
or
aaa
loopne
ds
jbe
and
ret
ds
gs
push
push
test
repnz
jno
add
xlat
mov
mov
push
ljmp
xlat
cltd
outsb
inc
mov
fistps
insb
add
movsl
dec
sbb
push
sarl
popf
inc
scas
mov
xchg
or
or
jae
test
sbb
fdivp
stos
xchg
mov
sti
mov
popa
xor
sbb
inc
daa
pop
cmpsb
mov
xchg
pop
mov
pop
testb
dec
sbb
out
sub
add
daa
ljmp
popa
orl
cmpsb
cmpl
pop
test
testl
sub
out
sbb
jo
shrl
fstl
add
sub
rcrb
iret
hlt
lret
push
mov
sbb
das
daa
push
cmp
xchg
push
mov
jl
pop
lret
icebp
in
push
inc
xor
and
out
ss
lahf
mov
lock
rol
fmull
xor
subl
cmpsl
out
jae
jnp
ds
push
pop
mov
gs
jecxz
sbb
int
stos
cwtl
call
imul
pop
stos
push
dec
and
pop
jns
inc
xor
and
xor
and
mov
push
cli
jmp
mov
enter
scas
shlb
push
adc
pop
push
out
and
ljmp
push
fisubl
mov
cs
sbb
xchg
xor
sbb
leave
inc
in
inc
imul
mov
xor
pop
push
arpl
inc
jge
sbb
push
and
arpl
ja
in
test
mov
int3
sub
mov
xor
ret
jecxz
arpl
jne
pop
ret
jl
lret
out
fdivrs
scas
das
sbb
push
mov
xchg
sub
jmp
mov
repnz
jo
aaa
das
jae
xor
js
xor
and
adc
jmp
dec
test
jecxz
add
or
in
lcall
push
and
jg
into
dec
inc
jge
and
adc
stc
dec
mov
mov
dec
arpl
mov
int3
sub
push
and
pop
fs
ror
jle
mov
out
repnz
mov
daa
mov
es
add
mov
test
xchg
fisubs
dec
addb
lahf
xor
jg
jle
cmp
iret
inc
mov
push
lahf
lock
rcll
int
outsl
add
call
xor
sub
jge
sahf
sbb
pop
cltd
daa
or
testb
xlat
mov
das
lock
lock
xlat
mov
fimuls
push
dec
xor
cmp
inc
mov
cmpsb
pop
cmpsb
xor
lahf
mov
cmp
mov
lods
sub
lock
shrb
mov
int3
and
and
addr16
loop
repnz
jp
jg
mov
inc
hlt
sahf
int3
loope
rcr
xchg
ficompl
leave
aas
sarb
or
push
ja
xchg
add
xchg
outsb
xor
movb
filds
jge
inc
mov
mul
mov
movsb
inc
inc
nop
push
push
add
or
inc
je
push
mov
test
imul
cmp
or
addr16
cmp
mov
enter
adc
and
ja
nop
sbbb
push
mov
jge
mov
xsha1
cmpsb
dec
or
cmp
dec
insl
orb
test
push
sbb
cmp
or
jbe
inc
and
mov
stos
pushf
imul
xchg
push
int3
cmp
add
bound
inc
aam
imul
dec
inc
mov
test
and
leave
jbe
rcrb
or
dec
push
or
xchg
scas
xchg
mov
aas
adc
xor
loopne
fwait
sbb
jns
xchg
addr16
push
iret
cmpsl
xchg
loope
sbb
xchg
cli
dec
jb
adc
mulb
and
lea
ss
data16
insb
subl
in
push
inc
or
xor
xlat
lret
out
pop
aaa
pop
sub
jbe
dec
fcompl
or
aad
lock
popw
fwait
cmp
mov
mov
int3
fwait
test
or
clc
pop
mov
dec
call
insl
frstor
orl
repz
lods
sti
popa
stos
cld
adc
jp
and
aad
lea
mul
imul
ds
stc
loope
sub
into
test
mov
add
aas
inc
push
lahf
sti
retw
fcom
inc
push
aad
rol
aas
in
enter
xchg
adcl
fnstenv
dec
sbb
push
pop
push
movsb
sbb
push
sbb
std
aaa
sahf
hlt
popa
push
data16
out
mov
pop
in
sub
xor
subb
fsubs
xor
repnz
and
insb
sti
leave
scas
mov
outsb
ds
jp
pusha
imul
lcall
inc
rclb
fwait
jecxz
sbbl
cmp
add
jl
das
or
fmull
rclb
mov
mov
lock
sbb
pop
and
gs
and
lock
jo
or
call
scas
pop
aaa
jp
mov
rcll
xchg
cmc
cmpsb
xchg
in
mov
arpl
xchg
insb
out
lock
pop
xchg
ss
pop
xor
xchg
movsl
pop
push
jns
or
mov
cmp
jo
add
sub
lahf
jg
pop
fdiv
test
sbb
aaa
call
aaa
push
cmp
xchg
divl
cli
lahf
mov
pop
inc
test
adc
lcall
cli
mov
int3
and
xchg
xchg
dec
fs
and
lret
push
mov
adc
and
dec
xchg
in
cli
loop
adc
pushf
shlb
nop
bound
ror
int3
cmp
test
push
sahf
dec
cs
iret
insl
sub
sub
ds
ljmp
xor
mov
pop
dec
add
mov
in
add
mov
adc
add
push
sarl
lcall
push
mov
adc
mov
xchg
aam
sbb
mov
xor
pop
loope
cmpsb
cmpsb
jl
pop
adc
adc
insb
add
xor
hlt
dec
jp
mov
pusha
cmpsb
imul
xchg
addr16
xchg
sahf
insl
cmp
jno
jns
mov
stos
in
lcall
inc
dec
xor
xchg
dec
orb
js
mov
sub
data16
call
jnp
out
sbb
mov
pusha
jmp
mov
pop
aam
scas
adc
icebp
mov
cmp
push
lcall
cmp
or
cmovae
jno
dec
adc
cmp
mov
dec
enter
inc
cmpsl
dec
jmp
testb
mov
std
mov
lcall
mov
cmp
jns
imul
pop
sub
stc
lcall
mov
cmp
jns
imul
pop
sub
stc
lcall
mov
cmp
jns
imul
pop
sub
stc
lcall
cmp
push
sub
sbb
sbb
movsl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
in
test
mov
movsb
frstor
stos
rolb
insl
add
xor
and
push
sub
fs
mov
movsb
fst
lods
les
add
add
xor
sub
sub
fs
lods
int
lods
fdivrl
or
sub
push
xor
mov
rorb
push
and
mov
ljmp
adc
stos
sbb
les
mov
xchg
test
rolb
push
shll
dec
imul
mov
and
jg
and
inc
nop
sti
orb
std
je
fs
xchg
clc
xchg
jle
add
mov
lahf
mov
adc
mov
or
push
fs
les
inc
and
lods
fsubrl
adc
ret
mov
popf
lods
cmp
je
jl
fs
stos
pop
and
fadd
xor
clc
in
jge
sbb
pop
adc
pop
cli
je
fs
in
popf
std
mov
movsb
ffree
lods
aam
hlt
std
popf
or
dec
cmp
cmp
clc
and
shll
mov
adc
push
sbb
dec
push
wbinvd
pop
sti
in
in
fcmovne
aam
mov
cli
mov
push
adc
xor
push
add
dec
icebp
movsb
call
mov
hlt
in
adc
add
xor
and
push
sub
fs
mov
movsb
fst
lods
les
adc
add
xor
and
push
sub
fs
or
lcall
and
popl
aam
cwtl
scas
ficoms
cmp
or
aad
jecxz
sbb
pop
inc
or
aam
das
xchg
int
jle
push
shll
stos
stos
cmp
int3
loope
aam
data16
mov
imul
cmp
mov
fdivrl
scas
sbb
das
inc
dec
in
adc
out
imul
mov
push
mov
jne
mov
popa
xchg
inc
mov
sbb
or
add
jns
mov
imul
movsl
push
and
pop
ljmp
scas
rclb
je
mov
mov
jns
or
test
mov
das
out
inc
imul
jns
push
push
scas
xchg
pop
mov
mov
and
es
mov
xchg
sbb
add
aam
aad
fsub
mov
push
pop
jge
xor
cmpsl
xor
sbb
dec
xadd
mov
call
popa
movsl
cli
inc
clc
movsb
aam
insb
fsts
push
jns
loop
lret
shl
pop
loope
sbb
mov
daa
jnp
pop
pusha
sub
push
xorl
fldcw
ja
cli
outsb
scas
scas
sbb
ret
ret
xlat
xchg
cmpsl
xor
inc
mov
in
mov
scas
adc
jg
testb
sbb
mov
dec
xchg
scas
subl
mov
add
loopne
jge
jne
fwait
cmpsb
and
ret
fdivl
nop
cmp
sbb
lahf
div
insb
ss
icebp
stos
mov
loop
insl
lahf
push
mov
mov
les
mov
mov
and
dec
and
or
push
sbb
enter
imulb
jp
mov
roll
lret
xor
nop
addb
imul
scas
into
mov
and
in
into
xorb
lret
dec
or
lcall
aas
sbb
in
xchg
aam
movsb
push
and
jbe
out
cmpl
or
cmp
pop
pushf
mov
and
jl
mov
adc
dec
fisttps
test
sti
pop
sbb
dec
dec
ljmp
inc
cwtl
stc
in
icebp
faddl
idivl
lret
jo
inc
fisubrs
dec
decb
mov
testb
cwtl
or
xchg
ret
adc
arpl
xor
mov
add
mov
adcl
insb
push
lds
popa
adc
adc
ret
xchg
push
cmp
adc
dec
jne
add
add
push
push
xlat
jbe
or
mov
popf
ss
push
jo
jb
lods
loopw
aaa
dec
sbb
loop
rcrl
outsb
adcb
fwait
pop
jl
dec
or
jl
out
jecxz
insb
popf
pop
xchg
movsl
pop
clc
add
andl
js
jle
test
jnp
xchg
stos
sahf
mov
jg
sub
pop
sbb
cmc
cs
insb
ja
loope
adc
or
ss
int3
or
jecxz
in
xchg
mov
outsl
push
test
mov
loop
scas
aam
cmpsl
cli
sbb
daa
jb
ja
bound
das
dec
sbbl
inc
leave
leave
dec
fld
lret
push
movsb
fdivs
jbe
imul
pop
lcall
xor
cltd
pusha
cwtl
or
adc
pop
test
lcall
ja
add
add
mov
out
je
fs
shlb
out
mov
bound
cli
lock
cli
add
hlt
and
sbbb
rcrl
ja
jle
enter
push
jns
mov
inc
mov
dec
xor
stos
int3
cltd
inc
loopne
pop
data16
xor
adc
push
lcall
sub
mov
daa
outsb
sbb
movsl
cmp
cltd
hlt
adc
or
in
outsb
jp
push
fdivrl
orb
mov
xchg
into
xchg
dec
out
cmp
cs
and
add
push
mov
movsl
pusha
mov
orl
adc
mov
das
psubb
pop
in
pop
xchg
jg
dec
icebp
push
pop
shlb
push
aad
repz
int
sub
std
xor
sub
data16
out
imul
cmc
jo
jno
pop
faddl
jb,pt
ret
and
jp
aas
stc
jo
jge
inc
or
adc
stos
in
jl
sar
xchg
pusha
xchg
sub
mov
inc
jae
orb
adc
xchg
fsubs
mov
mov
mov
clc
movsl
into
cmp
cmp
mov
dec
mov
insb
leave
scas
in
sahf
inc
loop
xchg
sbb
clc
cmp
test
aad
les
in
jae
call
cltd
nop
add
push
movsl
xchg
mov
repz
outsb
addr16
or
xchg
icebp
xchg
clc
insb
test
and
mov
mov
mov
inc
add
sbb
paddusw
mov
in
pop
insb
cli
jge
jnp
and
call
fdivs
js
xchg
ret
add
add
icebp
xor
popa
push
incl
and
nop
inc
and
rcll
xchg
sbb
ret
repz
mov
lahf
shr
test
pop
out
lahf
push
adcb
out
pop
mov
jbe
ljmp
mov
pop
lds
fwait
push
loope
xchg
ds
sbb
xchg
push
adc
in
out
lcall
fcompl
stc
ds
add
int3
mov
pop
push
insb
add
faddl
inc
lcall
adc
xor
mov
pop
out
fsubrl
aaa
imul
push
xchg
mov
sbb
mov
fucomi
sbb
cmp
cmp
inc
add
fstl
or
scas
movl
cwtl
pop
mov
xchg
test
mov
push
mov
add
loopne
add
repnz
jns
scas
lret
jo
leave
test
shl
insb
repz
cli
mov
clc
sbb
xorb
xor
ds
in
sbbl
cwtl
test
mov
pop
in
mov
lds
xchg
mov
iret
stos
dec
das
jo
mov
iret
and
push
push
lret
mov
jo
sarl
mov
ja
lods
arpl
je
dec
scas
gs
push
incb
xchg
repz
pop
leave
jl
divb
mov
jb
mov
xor
outsl
outsb
fisubrs
jnp
fisttps
sbb
outsl
jmp
aas
ja
pop
mov
lahf
sbb
lcall
inc
arpl
xchg
push
pop
fcomps
jbe
adc
fmuls
lahf
dec
xor
pop
jmp
scas
dec
xchg
hlt
in
ljmp
cmp
stos
fadds
test
sbbb
dec
shrb
pop
movsl
pop
push
fisttpll
lret
dec
pop
pop
orb
enter
mov
mov
aam
or
aaa
cmpsb
pop
cmp
cmpsl
and
cmp
loope
push
xchg
sti
dec
inc
addr16
fwait
mov
dec
xor
adc
xor
loopne
adc
mov
shrl
jl
arpl
push
adc
mov
icebp
push
cmpsb
or
mov
dec
adc
test
dec
loope
and
xor
out
sbb
mov
cmp
jne
pop
mov
lock
xlat
sub
or
mov
and
pop
and
xor
sbb
add
sbb
shrb
xchg
fs
adc
testl
scas
lcall
inc
xor
negl
arpl
mov
pop
popa
test
or
icebp
data16
adc
ds
or
jp
lds
cmc
lret
repnz
int3
sahf
xorl
out
out
xor
dec
pop
xchg
outsl
xor
lea
mov
rolb
insb
nop
jl
and
mov
bound
push
mov
mov
lcall
xlat
jl
or
insb
push
or
sub
mov
test
ja
orb
into
adc
xor
es
aam
cmp
popf
jae
js
ret
inc
push
bound
sbb
mov
or
in
mov
loopne
rcr
movsb
mov
dec
test
pop
cmp
and
cwtl
cmp
loope
mov
test
pop
inc
repz
test
daa
dec
sub
cmp
xlat
jnp
dec
mov
mov
insb
push
pop
cmpsb
sub
mov
addl
push
mov
dec
xchg
dec
adc
fisubrs
nop
add
mov
test
popf
aaa
cltd
pop
add
jae
dec
pop
int
mov
or
aaa
insb
rol
push
dec
jo
jle
ds
dec
mov
ljmp
nop
and
and
sbb
fildll
adc
int3
loopne
addl
jmp
mov
mov
pop
add
ret
imul
imulb
int
movsb
nop
lods
mov
shrl
push
in
and
addr16
push
int
cmp
mov
shll
mov
in
cmpb
test
push
dec
loopne
mov
inc
ret
jns
imul
jge
cmp
sbb
out
int
inc
or
xor
xlat
loope
lods
mov
push
xchg
fwait
mov
jnp
push
inc
stos
into
pop
push
aam
sub
jp
mov
adc
or
adc
nop
xchg
fidivrs
fwait
jae
test
dec
enter
push
dec
rcl
jo
adc
mov
es
mov
lods
addr16
cmp
sub
or
or
cli
jae
sahf
pop
test
xchg
fwait
xchg
jecxz
sbb
ftst
jge
inc
mov
movsb
sarl
mov
test
mov
mov
pop
call
sub
jb
in
stos
pop
repz
in
leave
out
call
mov
pop
cmp
or
aam
cli
aaa
popf
movq
xor
cmp
stos
imul
lods
sbb
and
popa
in
mov
xchg
xchg
fisubl
adc
sbb
inc
or
mov
jne
cmp
ja
out
jecxz
xor
xchg
or
push
inc
push
xchg
sahf
mov
inc
loope
mov
or
dec
loope
adc
dec
cmc
jecxz
out
sub
mov
cmp
xchg
pop
push
jns
dec
imul
dec
push
out
int
ficompl
idivl
out
push
test
insb
iret
out
jge
leave
std
jbe
xor
outsl
je
les
mov
xor
xor
in
sub
loopne
pop
push
push
jl
in
test
iret
adc
js
sub
add
mov
out
shll
ret
pmaxsw
xchg
push
js
inc
sbb
das
iret
push
sahf
es
mov
imul
cmpsl
cmp
out
es
mov
cmp
sbb
leave
mov
into
xchg
or
lds
sub
jge,pn
jecxz
push
popf
xchg
mov
add
in
mov
ljmp
push
xchg
or
pop
pop
dec
aaa
dec
pop
push
xchg
aad
sti
add
adc
movsl
and
xor
mov
dec
mov
sbb
std
ja
xchg
xor
movsl
inc
fnsave
sti
lea
and
cmpsb
in
push
cmpsl
addr16
testl
dec
xchg
shlb
popf
mov
adc
sbb
inc
xchg
and
in
test
fiadds
sbb
pop
inc
push
mov
mov
call
rorl
aam
dec
cltd
testl
xor
mov
dec
pop
xor
xchg
movsb
shlb
movsl
lods
jns
or
adc
jecxz
std
addr16
fwait
adc
mov
push
fstpt
js
sbb
mov
arpl
mov
add
xor
ds
xor
sbb
mov
or
pop
mov
ret
mov
cmp
jb
fwait
std
lods
mov
int
push
out
addb
das
data16
lret
pop
pop
sbb
ret
push
jg
xor
frstor
mov
inc
je
dec
ljmpw
xchg
negl
loopne
std
xchg
test
inc
ja
into
mov
and
stos
in
roll
push
es
ja
mov
rorb
ret
fnstsw
add
loop
and
push
mov
sar
in
mov
sarl
mov
push
in
pop
mov
jne
ss
stos
cmp
sbb
pop
sbb
shlb
lcall
sbb
sub
mov
popa
pop
ret
jo
adc
dec
lcall
dec
sbb
jl
xchg
add
cmpsb
xor
ds
imul
popa
pop
xlat
fwait
daa
pop
andb
jne
aam
nop
mov
xor
cld
mov
pop
fistpll
lock
pusha
int3
popa
aas
icebp
xor
push
push
dec
mov
jae
xchg
outsb
dec
cmpsb
cli
sub
inc
mov
jmp
jg
addr16
xchg
lods
test
sbb
jae
pop
dec
ss
mov
jecxz
mov
cltd
call
xor
pop
mov
popa
pop
mov
or
push
mov
push
movsb
ds
adc
stc
xchg
fwait
hlt
dec
pop
xlat
test
adc
pop
aas
ljmp
adc
sub
sub
lock
sub
std
mov
and
push
xor
lock
dec
gs
jo
shl
ss
into
sbb
mov
pop
or
cwtl
xchg
cmp
clc
icebp
push
aaa
and
ret
sbb
call
in
add
mov
sub
xchg
int3
pop
xor
push
jmp
jge
lods
jl
mov
sub
test
sub
bound
std
scas
lds
jns
dec
or
das
mov
movsl
sbb
dec
in
lods
jmp
iret
test
mov
lret
fistpl
adc
insb
jo
rorb
dec
or
fucomp
pushf
test
stc
mov
jecxz
shl
ret
add
je
into
mov
xor
lcall
out
xchg
dec
test
xor
or
pop
pop
add
outsl
xchg
xor
orl
pop
cmpsb
shl
iret
addr16
cmp
lcall
inc
imul
cmp
xchg
dec
mov
mov
or
mov
mov
outsl
inc
repnz
fdivrl
jns
cmc
inc
mov
int3
hlt
push
packsswb
stc
test
xchg
out
shlb
fisubl
scas
inc
ja
or
mov
cmp
ds
js
push
leave
scas
push
popf
push
rcll
mov
mov
cmp
jp
push
add
jle
mov
add
cld
cmc
mov
lret
mov
cli
nop
les
adc
imul
dec
lods
sbb
les
lcall
or
xchg
ret
test
mov
aaa
shll
push
aad
adc
fucom
sbb
pop
mov
pop
mov
xor
sub
shl
inc
call
or
cmc
or
test
insl
inc
xchg
jbe
xor
push
ret
add
mov
cmp
mov
mov
inc
enter
adc
jle
xchg
fstl
push
and
lock
sarl
xchg
sbb
cmp
adc
xor
gs
push
xor
sub
mov
movaps
push
cmc
inc
in
pop
cli
stc
aaa
mov
mov
xlat
test
fisttpll
sbb
idivl
sub
pop
xchg
or
pop
xor
or
lret
and
jns
fldl
xor
inc
lds
int3
shll
gs
xor
mov
cmp
cmp
mov
mov
and
xchg
sahf
pop
pop
mov
cvtdq2ps
and
lds
les
xor
sbb
pop
xor
push
in
rol
mov
push
mov
pop
aam
xlat
add
xor
loopne
cld
ret
xchg
sbb
xchg
jo
mov
jns
mov
push
cmp
push
out
xor
icebp
das
scas
mov
jl
adcl
pop
jae
pop
push
mov
movsb
push
sbb
lds
push
mov
int3
or
cwtl
or
ds
cmpl
cmp
pushf
jmp
push
and
jge
lahf
ror
or
adc
stos
fs
popf
sbb
sub
or
mov
mov
xor
in
inc
movb
sbb
subb
or
rcrb
cld
adc
cmp
gs
mov
cmp
in
repnz
and
fadds
sbb
enter
test
repz
fwait
xchg
stc
jae
push
mov
adc
xchg
dec
sub
es
sbb
test
insb
or
out
xchg
loop
cmp
mov
push
sbb
cmp
cmp
jnp
and
fs
mov
dec
addb
cmp
push
bound
int3
ficoml
dec
cld
std
pushf
xlat
jmp
jmp
ds
push
outsb
fnstsw
dec
incl
mov
hlt
test
icebp
es
mov
outsl
jne
out
dec
in
mov
stos
mov
jno
sbb
ficoml
int3
jmp
popf
pushf
in
inc
push
scas
push
pop
lea
arpl
and
lods
insl
sub
arpl
pop
cmp
fs
mov
jmp
test
dec
pop
lcall
fnsave
mov
inc
shll
lock
jmp
repz
sahf
dec
movsl
add
lock
mov
push
das
out
std
in
std
in
adcl
and
arpl
repz
push
rcll
call
scas
pop
das
pop
lods
les
data16
outsl
cmpsb
loop
sbb
repnz
ss
mov
or
mov
push
or
fucomip
pop
pop
movsl
iret
xor
in
inc
lahf
sbb
xchg
or
push
aam
mov
loop
std
jle
dec
mov
sbbl
mov
mov
mov
outsl
xchg
adc
push
adc
jmp
js
mov
mov
jg
pop
gs
stos
lods
sbb
mov
mov
inc
pop
fiaddl
pop
fcmovbe
testl
repz
mov
fwait
add
xadd
jecxz
pop
sub
outsb
andb
fsubrs
fldcw
xchg
mov
repnz
xchg
pop
pop
hlt
dec
xor
pop
pop
sbb
inc
in
lcall
xchg
or
dec
ljmp
cmp
adc
sub
out
hlt
mov
adcb
push
stos
insb
sub
sbb
jle
cmp
movsl
div
lcall
xchg
addr16
pop
mov
xor
ror
test
xchg
and
lds
movsl
cmp
inc
scas
jp
rcr
xchg
or
and
add
ds
mov
cmp
mov
jnp
repz
sahf
add
xor
push
in
sub
xchg
push
mov
adcl
repz
test
ja
ffree
lcall
pushf
cmpsb
shl
fldt
add
in
pop
les
push
mov
repnz
mov
dec
insb
and
inc
sub
mov
or
outsb
xor
in
jo
or
lea
add
jb
test
out
ficomps
aam
jne
add
in
fistpl
shr
decl
cmp
adc
arpl
in
js
fstl
inc
sbb
bound
out
mov
lock
stc
movsl
xor
inc
add
inc
xchg
pop
dec
mov
mov
jge
xor
jg
int
addr16
lods
xorb
daa
xor
add
dec
jmp
ret
inc
xchg
call
or
scas
xor
and
sub
add
subl
movsl
jnp
mov
or
add
cmpsb
and
ret
out
sub
mov
mov
out
jb
and
shll
ljmp
clc
pop
loope
or
incb
adc
adc
cmp
nop
cltd
jnp
xor
jns
pop
outsl
idivb
test
mov
push
mov
bound
jae
mov
arpl
mov
and
jb
xor
cmp
shrb
repz
jbe
mov
fcompl
aam
dec
add
sbb
test
adc
lds
cmp
shlb
pop
movl
pusha
xchg
add
push
imull
sub
push
jmp
icebp
jnp
add
or
bound
int3
repz
lcall
clc
jecxz
inc
xchg
das
add
xchg
orb
mov
int3
negb
push
jnp
addr16
int
fst
lods
les
adc
add
xor
and
push
sub
fs
mov
movsb
fst
lods
les
adc
add
xor
and
push
sub
fs
mov
movsb
fst
lods
les
adc
add
xor
and
push
sub
sbb
xchg
mov
movsb
fst
lods
les
jmp
sti
xlat
sahf
dec
and
and
fwait
loop
or
in
aad
inc
dec
js
les
or
mov
xchg
xor
out
add
pop
in
aad
lds
inc
sub
addr16
popf
jne
inc
rcll
inc
xlat
pop
and
push
addr16
in
jge
dec
mov
outsl
jnp
popf
xchg
stos
mov
fisttpl
shll
clc
bound
add
jnp
dec
nop
pop
cmpb
insb
jbe
fistpll
dec
add
call
pop
pop
jle
hlt
aaa
aaa
jns
mov
pop
xchg
scas
pop
push
js
dec
cmp
nop
out
adc
mov
iret
in
sbb
inc
popf
xor
xchg
clc
js
out
pop
enter
and
xor
lods
jge
mov
int
outsb
addr16
mov
xor
push
xor
fidivl
loopne
or
pop
xchg
xchg
addr16
ja
lahf
es
mov
data16
and
add
cli
divl
stos
ljmp
jns
jne
or
pop
xor
ficoml
adc
pop
adc
inc
mov
movsl
ja
jle
mov
lahf
mov
iret
sbb
adc
in
xchg
inc
jmp
shrl
jne
or
jecxz
xchg
lds
leave
sub
pop
mov
fs
mov
movsb
push
mov
loopne
fisubrl
xchg
sbb
and
xchg
adc
and
je
outsb
jle
xor
cmpsb
das
roll
ja
test
gs
cmpsl
inc
xlat
xor
out
pop
cmc
pop
in
aad
lds
inc
movsl
ja
test
gs
cmpsl
inc
xlat
xor
out
pop
cmc
les
outsb
jbe
jmp
enter
mov
xor
xor
outsl
push
test
test
bound
mov
xchg
icebp
jle
lcall
dec
movsb
popa
cltd
sbb
dec
es
push
daa
aad
jnp
je
push
xchg
xchg
and
xchg
xchg
fdivrs
test
dec
pop
call
xlat
cltd
jge
jnp
lahf
cmp
mov
mov
mov
enter
fsubrl
imul
mov
lods
mov
stc
push
push
sti
add
stos
xor
push
pushf
fs
push
in
imul
mov
push
cmp
subl
fwait
jg
dec
mov
dec
xor
xor
icebp
sub
adc
test
loope
add
mov
sbb
jae
cmpsb
inc
pop
jg
xor
mov
mov
clc
in
in
lahf
dec
test
inc
repz
ret
loopne
scas
or
daa
leave
leave
test
daa
aas
or
mov
in
fisubrl
shrl
sar
jg
jno
xchg
add
popf
push
xchg
stc
jmp
and
lret
aad
mov
lret
fyl2x
pop
add
jnp
mov
mov
cmc
add
jl
pop
test
aas
insl
cmp
scas
loope
bound
out
dec
fadd
inc
and
mov
xor
ljmp
out
lods
xor
test
dec
fwait
xchg
mov
and
inc
sbb
adc
andl
xor
mov
adc
mov
ss
xor
pop
adc
clc
xor
push
push
pushl
mov
pop
je
repz
push
jmp
test
stos
cmp
stos
hlt
dec
xor
jnp
imul
or
rorb
popa
xchg
fisttps
mov
nop
inc
mov
arpl
sub
xor
out
dec
pmulhrw
testb
push
inc
sbb
je
sbb
sbb
cmp
xchg
or
cli
add
push
fcomps
push
jns
mov
movsb
or
sahf
lret
pusha
push
sub
jl,pn
jno
xor
sarl
loopne
ret
mov
ds
mov
push
lods
pop
aas
adc
inc
push
or
push
sub
rcr
cld
out
pop
paddw
push
mov
or
sarb
xchg
mov
loopne
rol
shrb
int3
and
add
add
sarl
call
rcll
daa
add
xor
push
mov
jl
and
jne
dec
pusha
and
mov
popa
pop
je
dec
cmp
add
incb
add
cmc
fidivrs
dec
mov
xor
cs
push
pop
xor
addb
cmp
inc
add
xor
movb
loop
sbb
xchg
mov
xchg
jo
push
mov
mov
and
pop
popa
lea
clc
ffreep
sbb
or
push
inc
mov
fsubrs
adc
fwait
mov
inc
ljmp
inc
cltd
ss
inc
fsubl
jb
shll
int3
cmp
adc
add
das
js
mov
jp
inc
adc
in
icebp
xchg
push
ret
mov
or
xor
aaa
in
xor
xchg
lea
and
pop
add
dec
stc
arpl
loopne
push
fwait
mov
jmp
stos
mov
mov
jp
rcl
sbb
cmp
fcoms
mov
sbb
rdpmc
dec
negb
jl
sub
jne
fsubp
inc
push
dec
xchg
cwtl
dec
xchg
jmp
mov
mov
in
aad
idivl
cmpsl
ret
and
dec
out
pop
fidivrs
aas
orps
mov
clc
add
sub
shr
int
sarl
mov
sub
pusha
cmp
jmp
lahf
add
add
mov
push
out
lods
dec
mov
sbb
into
shr
mov
or
cmc
xchg
or
mov
cld
sbb
aaa
addr16
push
push
adc
sub
push
mov
push
push
in
push
subl
pusha
aas
imull
mov
shrl
repz
sahf
aaa
mov
mov
lods
int3
push
lock
inc
mov
or
arpl
popf
mov
aam
xor
cli
hlt
xchg
inc
jne
aas
push
std
or
xor
scas
aad
jno
inc
std
or
xchg
ljmp
add
lods
call
fsts
in
fldt
leave
ret
pop
out
inc
ret
or
loope
push
mov
pop
pushaw
jae
push
jecxz
xchg
decb
jge
out
leave
stos
ljmp
popa
mov
rclb
push
bound
cmp
and
stos
xchg
mov
jno
les
test
push
daa
mov
scas
je
cmp
movsl
fildl
ja
insb
push
in
rcll
arpl
popf
push
es
insb
cs
iret
imul
popa
std
aaa
lods
dec
daa
sub
push
ffree
push
sti
std
sbb
pop
cmp
popa
cld
fldcw
jg
pushf
sahf
jne
push
mov
roll
cli
pop
and
imul
comiss
test
cmp
sub
outsl
inc
pusha
push
xor
out
stos
test
das
adc
sbb
sub
sbb
add
roll
mov
mov
jbe
push
rorb
sub
lret
or
lcall
bound
mov
fisttpl
leave
jmp
sarb
mov
mov
movsb
fidivl
imul
orb
jo
inc
hlt
in
or
pop
or
or
cmp
mov
push
ja
mov
jl
add
pop
daa
loope
jmp
in
fs
test
jnp
dec
dec
idiv
add
icebp
add
mov
xchg
aas
aaa
movsb
repnz
movsl
push
pop
and
loop
shll
lea
call
push
dec
sub
loope
movsl
arpl
cmp
ja
mov
xlat
xor
mov
das
jae
rorl
jge
mov
sbb
pop
sti
iret
sub
out
into
adc
rcll
mov
pop
mov
xor
popa
adc
lret
xor
pop
cld
lcall
push
ficoml
inc
dec
ret
in
push
loope
in
mov
push
ret
lcall
arpl
cld
outsl
xor
pop
add
adc
dec
push
push
xor
mov
lock
dec
mov
inc
test
lea
jbe
jbe
xorl
push
inc
faddl
stos
scas
pop
sti
xchg
insl
loope
ss
cmovae
popa
mov
and
sbb
mov
cmp
xchg
cmp
mov
aaa
mov
mov
rorl
push
sub
and
pop
lret
jl
aas
mov
inc
mov
daa
pushf
ljmp
das
xchg
adc
mov
adc
cltd
jo
inc
lods
je
daa
cmp
dec
aaa
out
insb
lret
xor
mov
inc
sub
mov
clc
iret
xor
jle
int
je
fistps
add
mul
ja
scas
pop
mov
test
shrl
cmpb
loop
ja
repnz
add
cmp
dec
test
std
and
gs
add
adc
gs
mov
push
cmpsl
cli
fiadds
lea
sbb
jge
inc
stos
sbb
sub
xchg
imul
xchg
iret
fimuls
aaa
js
cmp
mov
orb
frstor
push
enter
inc
cmp
int3
addr16
and
lods
jb
arpl
mov
fbld
test
aam
jb
cmp
int
in
into
jg
push
pop
hlt
mov
xchg
sbb
out
out
out
int3
pop
call
outsb
jp
pop
mov
and
lret
mov
mov
xor
pop
cli
std
push
mov
jnp
sbb
std
xlat
push
xor
loopne
arpl
add
mov
pushf
js
xor
push
xchg
xor
push
inc
cmp
adc
stos
sarb
scas
xlat
int3
mov
mov
repnz
ficomps
cmp
shll
icebp
cmp
pop
mov
fsubrs
pusha
sub
mov
lret
add
mov
inc
clc
add
popl
sbb
out
lret
sub
lcall
xchg
scas
aam
mov
cld
mov
sbb
sub
or
mov
stc
shrl
out
mov
sbb
imul
pop
sbb
cmpsl
cmp
mov
xchg
jmp
mov
or
rcrl
leave
aas
pop
movsb
icebp
dec
insl
pop
adc
and
cwtl
xor
int
pusha
push
jecxz
jmp
dec
test
rcl
int
pop
sarb
cmpsb
pop
divb
aad
stc
dec
je
pop
push
add
push
dec
add
addb
repz
cli
fdivrs
lret
push
cld
jp
mov
sbb
popf
and
sbb
loop
xchg
and
pop
sti
mov
pop
lret
xchg
add
and
cmp
fisttps
push
xchg
pop
mov
mov
iret
push
dec
mov
mov
mull
sub
adc
push
shll
xor
inc
jnp
mov
mov
lock
push
fnstenv
lea
ja
sti
and
inc
fs
aad
mov
dec
push
fcmovbe
ret
mov
inc
fs
lods
sbb
mov
xor
shlb
pop
je
and
cmp
ja
dec
push
ja
push
inc
lods
gs
ret
vpaddb
lea
add
outsb
das
ret
enter
js
nop
into
notl
rorl
loope
lds
cmp
jmp
cmp
push
cltd
push
adc
js
xor
cli
out
xchg
mov
leave
pop
add
fdivl
cmpsl
add
adc
insb
jno
in
or
mov
mov
shrl
mov
stos
stos
ret
inc
xor
adc
nop
loope
cmp
and
dec
mov
inc
xchg
inc
loop
pushf
repnz
mov
fisubs
cmp
sbb
xor
lock
mov
sahf
test
fwait
push
jns
dec
mov
inc
adc
inc
ds
mov
test
leave
test
xor
inc
push
hlt
bound
jnp
es
imul
xchg
push
popf
inc
sub
or
inc
jo
sti
xor
lods
xor
cltd
cmp
adc
imul
addl
out
pop
shl
sbb
push
pusha
loope
insl
push
sub
xchg
push
xchg
jae
stos
rcl
lock
nop
sub
cli
push
dec
fldenv
sbb
cmpsl
cmpsl
data16
mov
out
stc
out
and
int3
pop
pop
mov
pop
fdivp
jb
sbb
ret
jb
jecxz
arpl
mov
jmp
inc
jge
mul
in
test
mov
xor
in
and
jg
sub
pop
clc
or
fucomp
iret
and
push
inc
repnz
inc
std
sub
adc
stos
fninit
lds
lret
inc
adc
nop
jl
out
aaa
pop
stos
cmp
cli
call
and
xlat
xchg
out
cmp
cmpsb
xchg
and
mov
push
or
jo
ret
cmp
push
jns
jg
icebp
or
mov
mov
jg
or
out
mov
sahf
pop
push
mov
cli
mov
dec
adc
orb
inc
jno
out
push
rcll
mov
sub
popa
dec
sub
popf
ret
scas
sbb
mov
mov
insb
push
inc
xchg
push
int
incb
ficompl
pop
pop
dec
sbb
test
lods
sub
pop
outsl
xchg
ja
xchg
rcll
out
out
aas
add
add
push
xor
addl
pop
sub
outsl
sub
or
movsl
fdivr
out
sbb
sub
sub
stc
push
mov
mov
mov
sbb
dec
and
mov
xchg
das
repnz
sub
in
mov
imul
jecxz
nop
movsb
jo
jns
pop
enter
mov
mov
adcl
jbe
aad
mov
jae
jae
fisttps
dec
xor
xlat
inc
test
pusha
int
stc
ret
fistl
push
hlt
pushf
and
mov
cmp
dec
or
cmp
cwtl
imul
mulb
mov
jnp
popf
dec
out
ss
lods
decb
jae
sbb
int
jmp
in
mov
jl
and
pop
adc
lock
cmp
xlat
mov
loop
pushf
add
pop
add
push
idiv
mov
pop
enter
xor
fdiv
loop
std
das
in
jp
loope
int3
pop
fstp
test
das
mov
aam
push
mov
push
dec
ss
adc
add
out
dec
loope
enter
xchg
push
xor
insl
clc
sub
pop
mov
mov
popa
scas
arpl
dec
push
sahf
add
dec
fwait
loop
xchg
sbb
into
jns
jle
mov
and
mov
incb
mov
jae
jno
dec
adc
lock
addr16
jns
and
xchg
jns
imull
xor
ret
sbb
imul
out
xchg
mov
loope
fs
pop
xor
mov
das
lret
jbe
cli
and
xor
int
xor
subb
sbb
lods
mov
push
idivl
cmp
pop
lods
sbb
dec
cmp
cmp
sti
fistps
test
xor
jnp
and
mov
xchg
jne
test
xchg
pop
inc
out
fldcw
aas
push
push
ljmp
icebp
lret
inc
loope
jns
js
mov
lock
mov
lahf
inc
add
mov
roll
inc
inc
pop
xchg
std
jbe,pt
add
test
xchg
lock
es
popa
cwtl
sub
mov
dec
jns
in
sub
jp
cld
fsubp
sbb
test
and
sub
pop
ljmp
rcl
bound
in
lock
push
push
stos
and
fists
ds
push
xor
scas
jne
xchg
cmp
xchg
cmp
push
sahf
outsl
out
jnp
xor
lahf
xchg
data16
leave
sti
mov
int3
shlb
cli
push
adc
aad
inc
cs
cli
xchg
test
test
leave
lcall
dec
inc
rcrl
in
fsts
sub
sub
ds
inc
jo
testb
jns
ja
mov
adc
cmp
adcb
jae
pop
daa
enter
shl
out
jo
jnp
sbb
mov
enter
inc
mov
sbb
lea
pop
pop
imul
cmp
jnp
lahf
scas
punpckldq
mov
pop
cmp
insb
or
xchg
fwait
inc
push
jl
mov
pop
mov
cli
inc
cmc
pop
lods
xchg
xchg
jne
add
inc
adc
push
out
test
mov
jge
popa
bound
add
stos
or
int
jb
pushf
pushf
xchg
addw
leave
mov
fstps
sub
out
dec
push
shlb
daa
and
xlat
setle
lds
mov
xchg
je
push
cmc
int3
push
mov
push
outsb
mov
inc
mov
sub
loop
mov
bound
sbb
testl
pop
cmpsl
mov
push
inc
fiadds
jnp
dec
xchg
out
aam
push
mov
sub
clc
loop
jb
roll
mov
mov
adc
pusha
out
xor
cmp
xchg
rcrb
loop
jecxz
mov
cmpsb
out
pop
sbbl
gs
push
adc
shrl
adc
sub
iret
push
or
hlt
jecxz
scas
mov
sti
loop
or
push
dec
mov
jae
cmpsb
pusha
fstps
rcl
sub
lret
aam
int3
in
addr16
mov
popf
clc
xor
mov
mov
lock
mov
bound
aam
mov
push
outsb
mov
sbb
or
xor
cmc
inc
call
xor
jg
cs
ret
xchg
pushf
pop
data16
xor
bt
mov
cwtl
lods
test
dec
or
cltd
les
cmpsl
xlat
fisttpll
pushf
lcall
lret
xchg
mov
push
cmp
push
xchg
std
in
shlb
push
pop
shll
js
call
test
orb
xor
div
cld
add
jp
clc
adcl
xlat
push
xor
sbb
popa
xor
push
xchg
aaa
lcall
xor
rcrb
sbb
jge
in
sbb
imul
mov
jmp
insl
in
aam
aaa
or
imul
jno
mov
xlat
mov
push
mov
stos
add
or
into
mov
jp
mov
cld
xor
inc
dec
int3
data16
enter
xchg
test
cwtl
mov
pusha
mov
inc
imul
lods
hlt
lds
fidivrs
fsubp
pop
repz
pop
mov
iret
xchg
call
cmovno
pop
loope
mov
ja
lds
xchg
daa
dec
lcall
lods
xchg
mov
popf
loope
mov
cmp
mov
inc
pop
cwtl
lds
lock
das
popf
adc
into
jbe
mov
or
sarb
fildl
shl
jnp
mov
push
pop
das
outsb
add
dec
xor
je
xchg
inc
xor
filds
lds
sub
xor
sarl
push
mov
out
lcall
and
and
dec
jne
addb
cs
push
test
rcrb
or
lahf
cmpsb
push
or
mov
adc
mov
cmp
inc
je
fcomp
add
pop
cmpsb
out
movsb
mov
xchg
jle
push
mov
jbe
movsb
test
gs
lods
cmpsb
popf
rol
pop
mov
or
jg
popf
mov
push
adc
or
and
test
out
pop
mov
insl
out
jne
cmpsb
and
daa
in
lods
cwtd
test
out
push
sub
imul
jecxz
jnp
out
into
popf
fisttps
xchg
and
lods
cmp
call
or
add
loopne
mov
cmp
mov
jp
jmp
das
pop
xchg
flds
mov
out
mov
aad
xor
mulb
or
repnz
adc
addl
sub
sub
in
xor
fidivs
out
pop
movsl
push
jno
lea
mov
dec
mov
movsl
and
and
add
mov
popf
cmovne
and
scas
xchg
int3
cmp
mull
das
in
mov
xchg
jp
xor
stc
js
and
mov
push
cmp
cwtl
push
cltd
pop
sbb
inc
cmp
pop
out
cmp
movsl
lcall
add
je
hlt
cltd
sub
cld
xor
jecxz
xor
loope
out
in
sbb
enter
xchg
dec
push
mov
call
inc
loopne
mov
pop
inc
mov
cmpsb
mov
in
mov
push
fs
sub
pop
out
cmp
or
stos
cmp
sub
imul
inc
xor
mov
popf
jmp
jmp
jae
fisttps
xor
xor
fidivs
jnp
adc
gs
shrd
push
jns
ja
lcall
add
sbbb
lret
imul
cltd
mov
fdivl
mov
or
test
pop
punpckldq
cmp
jbe
adc
lock
je
mov
sub
out
mov
mov
adc
popa
movsl
and
sbb
xor
fmull
add
in
call
mov
jo
cmpsl
and
sbb
and
rorl
pop
push
sub
sbb
xor
push
into
scas
rclb
mov
in
aad
xor
outsl
imul
or
mov
int
imul
and
inc
jne
mov
es
sub
push
jmp
dec
cld
mov
dec
sbb
and
cmpsb
mov
sarl
jae
and
jo
push
jne
dec
mov
mov
inc
dec
test
mov
ja
adc
jb
add
movsb
mov
mov
push
leave
lods
mov
push
dec
call
fimuls
cmp
jne
pop
mov
pop
int3
xor
pop
add
xchg
jl
mov
insb
std
cltd
xor
sbb
or
rcr
jo
lea
cmpb
pop
xor
push
arpl
mov
rorb
sar
js
mov
call
icebp
and
mov
sub
sbbl
dec
adc
outsb
jo
pop
jnp
pushf
ret
mov
sbb
mov
ficomps
sahf
push
cld
jo
sbb
sub
mov
dec
adc
nop
cmpb
mov
in
mov
inc
movsl
ja
test
gs
cmpsl
inc
xlat
xor
out
pop
cmc
pop
in
aad
lds
inc
movsl
ja
test
gs
cmpsl
inc
xlat
xor
out
pop
cmc
pop
lods
aaa
lods
daa
lds
inc
or
xchg
lods
xchg
push
cmpsl
inc
xlat
xor
add
add
daa
les
inc
movsl
notl
js
sbb
mov
sbb
lods
push
test
lcall
mov
dec
xlat
loop
or
add
add
add
add
pop
scas
add
inc
add
add
aas
add
add
test
aam
adc
add
add
add
pop
add
add
add
add
stos
add
add
add
add
add
add
popl
xchg
add
add
hlt
add
add
pop
add
test
popf
add
jnp
mov
add
roll
mov
cmp
stos
add
pop
add
add
add
add
add
lea
addr16
add
xor
movsb
add
imul
pop
add
add
add
add
dec
add
add
insl
add
test
addr16
add
add
add
and
clc
add
add
add
add
add
inc
add
xchg
add
add
add
jnp
call
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
mov
add
add
addb
add
add
add
add
pop
add
mov
scas
add
add
add
add
sbb
add
add
add
add
pop
add
imul
dec
add
add
push
add
lods
add
add
add
add
add
add
mov
pop
add
imul
stos
add
mov
add
or
add
add
add
add
add
outsb
add
add
and
loop
add
add
add
mov
adc
int
imul
popa
add
add
leave
add
add
add
add
rolb
add
add
add
xor
add
roll
or
imul
imul
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
pop
add
add
add
iret
add
add
add
pop
add
add
imul
mov
mov
add
and
hlt
add
add
add
add
add
add
pop
add
add
stos
add
add
aaa
add
add
add
add
add
add
add
add
fildl
pop
add
sbb
add
pushf
add
add
add
lcall
add
add
add
add
aad
xchg
add
add
add
add
adc
mov
or
sub
in
dec
add
adc
add
movsb
add
add
add
add
add
add
push
add
add
mov
insl
add
imul
mov
test
addb
add
push
add
movsb
add
and
pop
add
add
add
lret
add
add
add
imul
and
add
add
add
add
add
pushf
inc
addr16
inc
mov
pop
push
rolb
lods
push
add
mov
ficoms
add
mov
xchg
or
popf
aaa
int
jmp
add
push
loope
aad
pusha
cwtl
add
mov
dec
aad
pop
out
inc
ljmp
aad
adc
push
in
inc
hlt
cltd
xlat
lods
cmpsl
sarl
cmp
lcall
mov
fsubp
mov
lcall
jae
arpl
xor
in
jnp
pop
lea
jno
pushf
das
dec
cltd
rol
xor
cmp
mov
loope
call
shlb
inc
mov
je
xchg
das
mov
outsl
mov
mov
cmp
xchg
sub
push
mov
or
cmp
and
and
sbb
pop
mov
sysret
mov
pop
shll
pop
xchg
addr16
cwtl
int3
jp
lock
ja
cmp
or
ja
sbb
pop
inc
jmp
bound
mov
push
push
cmc
int
aam
push
shlb
inc
adc
loope
in
push
arpl
pop
xorl
dec
xchg
mov
cltd
popf
std
inc
stos
fmulp
cmp
push
rcll
inc
test
js
mov
hlt
lods
sbb
insb
xlat
andb
pop
leave
jge
and
xchg
push
outsb
push
xchg
lcall
repnz
mov
adc
dec
xor
je
add
or
pop
or
pop
fisttpll
dec
fs
scas
std
inc
pop
pop
add
sbb
pop
aaa
jg
cmp
cmp
movb
cltd
jae
in
push
jnp
or
ret
add
outsl
and
clc
iret
int
pop
pop
shrl
stos
dec
sahf
out
xor
in
mov
stc
mov
outsl
inc
pushf
out
in
notb
inc
lds
repnz
filds
mov
inc
aaa
dec
add
shrl
sub
sbb
arpl
fcmovb
ja
xor
int3
sti
popf
jo
lea
add
sub
int
or
ds
mov
int
sub
cwtl
mov
or
hlt
lods
adc
jns
push
mov
pusha
pop
loop
jle
repz
or
lahf
jge
pop
insb
loope
test
mov
jg
testb
sub
xchg
imul
addl
push
push
leave
ret
or
jae
pop
push
sbb
jnp
nop
sbb
push
sub
xchg
sbb
aad
pop
or
jns
fcoms
pop
aas
xchg
cmp
je
je
mov
pop
imul
and
test
and
pop
outsb
lods
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
