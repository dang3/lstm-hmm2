call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
faddl
jl
mov
cmp
dec
ficomps
int3
jp
push
pop
cld
dec
lea
popf
sub
pop
ljmp
sbb
sub
cmp
int3
jp
dec
lea
dec
mov
sub
pop
ljmp
sbb
sub
cmp
int3
movsl
fmull
lea
cmc
inc
mov
or
pop
test
scas
sub
xchg
rsqrtps
jecxz
lods
or
pop
aaa
push
sbb
sti
sbb
adc
fimull
mov
xor
jno
arpl
movsb
sbb
sti
pop
out
arpl
sbb
xchg
cmpsl
cmp
add
testl
das
sbb
lret
or
xor
int3
popa
cmp
faddl
adc
insb
cmp
aad
repnz
mov
mov
dec
in
adc
sub
cmp
movsb
sub
dec
fildll
sub
or
mov
pop
push
out
stc
lock
std
aam
aam
cli
jbe
jp
add
cmp
adc
pop
sbb
rorb
stos
sub
cmp
int3
cld
fsubrl
push
pushf
shrb
sbb
add
jns
imul
out
movsb
cmp
das
subl
and
push
rcrb
pop
enter
pop
stos
sbb
js
sub
inc
out
pop
mov
xchg
aas
cltd
sub
cld
jnp
popa
cmp
test
sub
cmp
int3
jp
push
pop
cld
dec
mov
pushf
sub
pop
ljmp
sbb
sub
cmp
int3
jp
push
pop
cld
dec
mov
pushf
sub
pop
cmp
jg
pop
mov
enter
test
outsl
cmp
loopne
pop
lret
cmp
jae
stos
xchg
js
sbbw
mov
mov
xchg
insb
data16
nop
or
subb
push
inc
adc
scas
mov
clc
imul
push
jno
push
adc
xchg
lret
pop
sbb
mov
push
or
dec
cli
sub
rorl
pusha
fndisi(8087
mov
dec
test
shll
xor
pop
cmp
and
leave
mov
add
mov
adc
xchg
leave
inc
jns
movsb
pusha
mov
in
daa
addl
jno
ficomps
dec
loopne
add
movsl
aaa
addr16
push
sub
pop
xor
fldl
push
sub
jb
mov
aaa
fwait
inc
dec
divb
cltd
sbb
shl
mov
outsl
hlt
ret
sub
push
adc
cmpsb
and
aas
sbb
das
fimuls
cmp
ja
fbstp
imul
imul
nop
shrl
scas
push
outsl
sbbl
outsl
fs
pop
dec
imul
sub
push
jnp
sub
push
lcall
lcall
es
cmp
jns
or
repnz
pop
inc
call
aam
adc
aas
inc
xchg
xchg
cmp
inc
sub
and
subb
decb
test
cwtl
stos
and
data16
push
pop
mov
and
xchg
sbb
enter
pop
lea
inc
pop
ljmp
popf
imul
test
aad
mov
xchg
xchg
mov
pop
popa
idivl
insl
push
sbb
pop
int3
pop
in
lret
fsubp
jnp
aam
lahf
clc
cwtl
add
cmp
xchg
mov
mov
rclb
dec
movb
iret
pop
sbb
mov
aad
or
les
jle
jmp
xor
stos
push
or
mov
sub
xchg
or
jp
test
dec
lret
cmpsl
test
jae
and
incb
xchg
push
and
and
xchg
jne
cmp
in
xor
fnstcw
sbb
gs
test
iret
xchg
notl
sbb
xchg
or
xor
sub
ljmp
aam
stos
mov
pop
inc
fsubs
and
and
jecxz
subl
out
es
aam
int3
jbe
cmp
cmp
andl
xor
inc
inc
rorb
cs
lods
pushf
pusha
mov
pop
push
jns
movsl
cld
push
ret
scas
cwtl
mov
add
inc
fdiv
lock
or
aas
das
inc
xchg
cmc
add
into
es
test
mov
and
adc
and
mov
mov
jno
adc
stos
lret
jne
lods
sub
repz
fwait
cli
push
or
sti
mov
push
cwtl
idivl
ret
push
cmp
vmread
jbe
adc
sub
ret
or
mov
in
loope
in
xchg
fnstenv
jmp
add
test
iret
push
das
stos
daa
pop
or
adc
mov
xor
push
or
mov
mov
or
aas
mov
push
jne
cmpsl
mov
mov
jb
sub
ds
sub
mov
fwait
arpl
sub
sbb
mov
adc
and
push
sub
ror
cltd
mov
pop
push
mov
ljmp
fs
xlat
pop
lock
arpl
jo
or
out
sbb
leave
loope
xchg
or
bound
add
add
push
adc
adc
jo
sub
pop
lahf
pop
fwait
jp
sbb
or
icebp
lock
push
sub
sub
repnz
shll
xor
jo
pop
cltd
mov
popa
xchg
out
ljmp
add
shlb
push
movsl
js
in
xchg
mov
pop
inc
mov
aaa
shlb
jle
mov
xchg
and
cmp
lahf
cmp
inc
push
leave
sbb
xchg
mov
cmp
ret
imul
mov
adc
sub
ret
pushw
sbb
push
inc
jecxz
mov
push
fdivs
mov
jno
sbb
xor
xchg
xlat
push
jp
mov
sub
xchg
insb
repnz
adc
rcr
rcr
cltd
loop
into
imul
cmp
sbb
icebp
or
pop
pop
or
add
jns
cmp
adc
xor
jne
sub
push
scas
xchg
stc
mov
sub
inc
push
mov
fimull
inc
hlt
jmp
jmp
loopne
inc
add
push
nop
pop
push
sar
lret
or
in
cs
and
test
test
cltd
mov
sbb
clc
or
jecxz
xor
jne
mov
scas
push
mov
or
gs
sbbl
sbbl
xchg
ret
stc
popa
push
push
mov
adc
cmpsl
ret
aam
clc
divl
push
lret
test
leave
fmulp
adc
adc
data16
add
test
sbb
and
adc
faddp
movsb
mov
out
mov
pop
lahf
push
ja
dec
in
hlt
rep
popf
xchg
cmp
ret
cmpsl
jns
sub
jg
inc
imul
lock
aam
xchg
shlb
icebp
dec
jbe
fdivl
in
mov
mov
das
sahf
pop
ret
in
jecxz
movl
fisubs
pop
inc
les
ljmp
decb
dec
clc
cmp
dec
jnp
add
mov
incb
cld
int3
ja
sub
fwait
cmp
fadds
mov
js
xchg
mov
jne
rclb
lahf
add
daa
push
mov
push
or
or
in
lahf
xchg
sbb
xor
jbe
dec
mov
and
stos
xchg
add
inc
lods
jb
cmp
stc
jns
scas
int3
mov
popa
ds
in
adc
add
push
sbb
and
out
scas
adc
inc
mov
pop
repnz
push
repz
push
ss
pop
mov
mov
xchg
pop
fdivs
ficompl
inc
fwait
sbb
and
cmp
xchg
mov
inc
pusha
add
push
add
sbb
jmp
leave
lret
in
mov
cli
dec
das
jl
cld
or
dec
popa
lret
push
int3
lret
andb
xor
or
sti
fdivr
mov
stc
pop
ljmp
fbld
and
mov
fsubr
push
or
xor
inc
in
sahf
mov
xor
rclb
in
rorb
movsl
les
scas
sysexit
adcb
jg
mulb
or
out
sbb
hlt
push
jl
xor
dec
sbb
aas
xor
shrb
jl
mov
pop
or
mov
and
sar
mov
stos
mov
in
mov
push
lret
or
jecxz
fistpl
jl
adc
pop
int
enter
imul
add
pushf
mov
dec
sti
dec
pop
dec
push
nop
negl
les
in
mov
mov
cmc
mov
cvttps2pi
shl
std
ret
movsl
lcall
xchg
mov
outsb
jae
xor
rcrl
in
lea
inc
mov
push
call
add
jmp
popa
loope
add
pop
add
mov
push
das
test
int
clc
nop
pop
insb
jae
insb
or
jmp
mov
out
push
enter
aam
in
and
bound
sub
mov
jmp
aaa
das
push
inc
call
outsl
dec
lret
mov
inc
ja
jecxz
sbb
and
sbb
hlt
push
cmpsl
cmpl
adc
scas
jnp
fbstp
xor
mov
add
pop
out
push
sbb
ja
or
fwait
inc
in
mov
cmp
jle
mov
mov
or
jecxz
loop
cld
mov
popa
clc
mov
leave
dec
and
stc
dec
lret
xlat
stos
daa
inc
nop
scas
jmp
sub
out
pusha
lret
out
pusha
dec
popl
testb
jns
cld
xchg
pop
mov
adc
jl
fwait
sbb
icebp
cmp
sub
jno
pop
sbb
scas
dec
subl
mov
fdivp
mov
mov
lock
sahf
or
and
sub
iret
mov
loope
pop
inc
dec
pop
fidivs
dec
lods
mov
jb
or
cmp
pop
lods
stos
clc
arpl
pop
mov
cwtl
cmc
cli
push
ss
jg
pop
mov
scas
aas
int
shr
in
push
jge
mov
bound
xchg
mov
mov
mov
fwait
clc
in
dec
roll
scas
mov
mov
in
shll
mov
sub
pop
cmc
push
loope,pt
pushf
shll
or
cmpsl
aaa
xchg
or
sub
add
sub
cli
cmp
lahf
cmp
js
inc
cwtl
xchg
test
mov
mov
je
mov
dec
fwait
push
sub
fisubrs
jg
push
sbb
xchg
push
sbb
or
cmp
or
jmp
and
int3
and
dec
arpl
lcall
inc
inc
dec
jle
shlb
push
sub
push
stos
pop
and
dec
adc
pop
std
mov
nop
int3
aad
loopne
gs
dec
out
adc
insb
std
movsb
xchg
xor
js
mov
ret
out
and
rcpps
dec
mov
ljmp
pop
xor
cmpsl
iret
fstp
lret
or
ljmp
dec
pop
or
fists
in
push
cltd
les
sarl
add
shl
cmc
xchg
jbe
incl
imul
loopne
cli
inc
and
push
andl
lds
push
ja
lret
fs
push
xor
int3
lds
mov
jae
scas
jbe
cmp
jp
pop
push
inc
hlt
lcall
mov
mov
pusha
ret
add
int3
jg
nop
cmp
sbb
and
or
push
daa
push
addr16
xor
sbb
out
cmpsl
aaa
mov
sub
push
test
addb
mov
sbb
pop
mov
xorl
fbld
or
pop
insl
sbb
mov
mov
pushf
xchg
dec
dec
cmp
cmpsl
sub
lret
lods
nop
sub
stos
add
xor
dec
mov
xchg
cmp
pop
push
add
pushf
cmp
inc
ret
clc
add
scas
dec
movsb
lcall
ficompl
mov
mul
mov
cmp
ret
mov
and
dec
push
xchg
std
lea
imul
mov
xchg
jmp
mov
stos
shl
jbe
les
jg
and
sti
dec
outsl
fdivr
idivb
fiaddl
jle
add
xchg
mov
lahf
push
ret
stc
orl
jo
or
rcr
loopne
repnz
inc
movsl
add
jge
mov
pop
push
dec
ss
pop
cmp
mov
test
popf
mov
movsl
fadds
mov
sti
repz
or
loope
out
pop
je
pop
arpl
testl
add
fwait
inc
in
pop
aam
aad
xchg
cmp
ret
in
or
dec
js
out
pmuludq
daa
add
xchg
inc
test
aam
mov
std
sti
dec
jecxz
adcb
cmp
mov
xchg
lock
insb
divl
sbbb
pusha
cmp
push
fs
stc
aaa
cltd
cmpb
addr16
xor
push
push
sub
mov
push
or
das
push
js
adcl
shr
dec
lcall
inc
sub
dec
repz
jmp
lret
orl
mov
das
in
push
pusha
loopne
or
and
roll
xchg
xchg
dec
mov
add
pavgw
test
mov
cmpsb
subb
cld
sbb
xor
aas
nop
fwait
int
scas
jmp
add
and
insb
mov
test
ret
sub
icebp
xor
mov
repz
adc
sarl
push
mov
es
push
mov
pop
or
mov
movsl
movsl
das
add
repnz
aad
stos
shll
imul
mov
pop
in
pop
out
adc
push
sbb
cmc
cs
enter
push
xor
sub
dec
xor
inc
test
js
mov
movsb
movsl
mov
push
inc
sub
imulb
rol
out
jne
into
or
idiv
mov
dec
enter
xlat
sbb
sub
pop
and
aad
ret
lock
je
push
jmp
dec
pop
xchg
ljmp
psrlq
push
push
int3
cs
fldenv
mov
pop
or
ret
mov
lcall
dec
cmp
lret
or
aam
aad
jmp
and
cmp
int3
mov
daa
test
stos
or
inc
fs
push
pop
add
ja
rclb
stos
xor
mov
sbb
mov
sbb
stc
sub
sub
mov
add
jnp
into
imul
jg
push
mov
lahf
test
stos
stos
jecxz
or
push
push
inc
pushf
sahf
push
sub
les
xchg
fs
outsb
mov
in
mov
push
xchg
xor
ficompl
repz
inc
mov
mov
pop
imul
jle
movsb
dec
test
push
cmc
pop
addl
data16
add
inc
pop
mov
loopne
jnp
pop
dec
int
xchg
jp
adc
adc
jns
and
mov
add
mov
adc
mov
cmc
cmc
xchg
imul
pop
sbb
inc
and
sub
int3
rorb
xor
lret
xchg
jns
out
add
push
pop
movsl
cmp
mov
or
jb
in
dec
out
divb
fisubs
push
mov
sub
popf
or
movsl
aam
push
clc
sbb
pop
jb
in
scas
cmpsl
dec
push
cli
mov
pop
pop
inc
popf
popa
cmpsb
sub
hlt
hlt
or
or
sbb
scas
xor
in
cmp
cli
enter
mov
jnp
dec
cld
sbb
int
push
or
pop
dec
notb
add
into
cli
xchg
cmp
jns
lahf
fldenv
subb
lods
into
push
sbb
pop
movsb
push
inc
out
xor
out
mov
movsl
xchg
divl
lea
outsl
cltd
lods
int3
inc
cmp
or
push
mov
jbe
push
nop
sbb
add
add
jns
sbb
lret
ljmp
scas
dec
les
insb
test
testl
pop
push
sbb
negb
shlb
cmp
inc
stos
xchg
rdtsc
outsb
push
jle
mov
jns
lods
int
jns
mov
into
pop
or
mov
aaa
mov
and
dec
jbe
arpl
xchg
les
cmp
test
pusha
cmpsl
dec
mov
push
jecxz
in
ficoms
ficoms
xchg
fnstcw
adc
stc
jo
xor
mov
int
daa
push
pop
frstor
adc
stos
test
xchg
scas
pop
adc
dec
rcll
inc
fsubrs
or
insb
sub
ja
push
popa
cwtl
es
pushf
mov
flds
mov
dec
mov
dec
andl
pusha
orps
cmp
out
aaa
lret
ret
icebp
repnz
lea
push
and
nop
pusha
cmp
insl
cmc
out
sahf
mov
mov
inc
cmpsl
out
fldl
sbb
or
call
cmp
jae
xchg
mov
loop
cltd
lods
xor
push
adc
xlat
sbb
mov
lods
or
shrl
adc
imul
call
negl
pop
movsb
fisubrs
mov
mov
mov
test
pop
ja
fldenv
sub
pop
cmp
ljmp
sub
call
jo
cld
mov
fsts
pop
jns
jns
mov
dec
addr16
jmp
lods
push
neg
xchg
lcall
es
shlb
pop
dec
pop
addr16
icebp
je
add
jp
inc
jns
ljmp
pop
adc
mov
mov
xlat
adc
hlt
mov
fisttps
lcall
cmc
addr16
in
cltd
jge
out
pop
aaa
js
shrb
insl
es
push
inc
popf
sbb
xorl
push
jmp
fdivp
sub
cmp
jle
mov
mov
cmp
lahf
and
pop
pop
sub
loopne
insl
fstl
push
lods
inc
ja
inc
xor
mov
shll
sbb
ret
and
xchg
fwait
js
jo
or
mov
jge
sub
cmp
and
inc
clc
pop
jb
xor
bound
sbbl
adc
mov
mov
lods
push
call
add
push
sub
add
js
jns
and
jecxz
mov
mov
out
aaa
and
inc
mov
jmp
sub
cmp
rorl
cmp
mov
testb
scas
sahf
leave
jl
sbb
pop
cmp
or
jns
scas
mov
jne
imull
test
mov
in
lock
jg
leave
push
and
dec
push
shl
mov
fnstenv
imul
out
pop
iret
mov
lret
lds
sub
ds
and
or
cmpsb
popf
fists
aam
jae
adc
cmp
out
sarl
mov
adc
or
in
pop
loope
rorl
mov
xchg
mov
push
das
pusha
sbb
inc
repnz
scas
xchg
add
pop
lahf
icebp
jns
test
mov
mov
gs
fsts
ret
fldenv
mov
shlb
push
xchg
push
fidivs
imul
inc
or
std
je
fbld
iret
test
pop
xchg
sub
ja
repz
lods
and
insl
dec
insb
jno
popf
cld
pop
mov
push
lods
adc
jp
push
cs
aas
add
mov
fs
outsl
mov
ja
ss
rclb
out
mov
push
mov
movsl
or
or
das
mov
push
dec
pop
jae
stos
add
pop
jne
rcl
jle
mov
dec
xchg
add
sbb
xchg
lds
addr16
sahf
pop
mull
push
and
aam
mov
mov
movsl
aaa
jle
jo
mov
adc
imul
cwtl
jle
cs
add
pop
sbb
aad
mov
aam
repnz
pop
xchg
adc
outsb
lahf
mov
inc
push
mov
aam
cmp
in
pop
xchg
or
mov
or
cmp
xorl
inc
mov
xchg
mov
out
or
aam
sbb
push
jg
pusha
xor
icebp
add
cmp
rclb
inc
arpl
pop
clc
bound
mov
inc
add
sub
cmp
ficomps
push
enter
and
sub
sbb
test
sub
jle
adc
or
cwtl
mov
dec
sub
dec
insl
fnstsw
pop
push
mov
push
sarl
cmc
test
pop
mulb
push
fists
jno
jb
mov
sub
rolb
addr16
jmp
push
xor
addr16
pop
jecxz
xchg
xor
or
pop
mov
adc
xchg
push
dec
jnp
loope
mov
das
xchg
shlb
nop
push
mov
lea
dec
lret
mov
mul
mov
dec
mov
insb
std
mov
bound
xchg
scas
cmc
add
subl
push
mov
not
ret
bound
mov
call
bound
xlat
leave
mov
xchg
mov
xchg
hlt
adc
push
orb
sub
jle
in
pop
push
and
dec
sarb
dec
adc
cwtl
or
aaa
cmp
leave
mov
aam
add
cwtl
out
cltd
pop
stc
mov
ds
add
pop
out
aaa
test
xchg
cmp
pop
adc
or
jp
adcb
es
rol
neg
or
lods
push
sbb
out
xor
jbe
jb
jbe
push
push
icebp
mov
popa
out
add
pop
andb
insb
arpl
cmp
fldl
outsl
cld
push
mov
loope
lcall
xchg
ret
lcall
mov
and
insb
stos
sub
dec
addr16
pusha
dec
stos
sbb
mov
inc
sbb
scas
aaa
mov
loop
push
jmp
xor
pop
rcrb
and
fists
sub
in
xchg
xlat
add
push
mov
add
pop
push
mov
inc
es
and
icebp
iret
or
mov
mov
sub
lods
push
aaa
shr
xor
in
sbb
lock
insb
sahf
sub
sub
outsb
scas
jl
test
lock
push
pop
icebp
scas
pop
pop
iret
rclb
mov
fcomp
mov
pusha
xchg
inc
pop
pop
aaa
pop
jmp
js
inc
js
fnsave
mov
pop
das
jbe
cmp
xchg
mov
ss
pushf
inc
popa
fldl
scas
jns
mov
icebp
jg
scas
sbbl
xchg
and
mov
adc
notl
sbb
std
ret
iret
dec
sahf
ljmp
sbb
sub
cmp
int3
jp
push
pop
cld
dec
mov
pushf
sub
pop
ljmp
sbb
sub
cmp
int3
jp
push
pop
cld
dec
mov
pushf
sub
pop
mov
or
sbb
sub
cmp
int3
mov
cld
dec
mov
pushf
sub
pop
ljmp
sbb
sub
cmp
int3
test
rolb
cmp
push
in
cmc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
sbb
sub
cmp
clc
add
jno
lea
insb
lods
dec
mov
mov
or
sbb
sub
cmp
dec
mov
jl
pushf
jno
insl
lods
pop
mov
int3
dec
in
das
in
sbb
add
aad
movsb
inc
mov
test
jge
dec
repz
cmp
jb
pop
mov
stos
bound
jae
sub
dec
stos
pop
jne
insb
lods
jle
bound
cmpsl
and
pop
in
xor
int
std
jecxz
push
aam
popf
data16
pop
jmp
xorb
pushf
pop
int3
jae
in
add
repz
loopne
fucomip
jp
fadds
fstpt
insl
xchg
aaa
xor
in
sbb
or
in
sbb
xchg
jmp
popf
xchg
cltd
mov
fsubrl
pop
js
adc
jge
fsubs
xchg
mov
mov
dec
hlt
xor
fdivrl
in
cld
cltd
imul
or
adc
in
mov
adc
cld
or
ljmp
pop
mov
gs
xchg
jge
jne
inc
movsl
push
aam
les
pusha
std
jns
dec
mov
cmp
and
jl
mov
lock
fistps
sub
pop
mov
popa
arpl
mov
insb
jmp
stc
or
mov
lcall
in
inc
mov
pop
lods
insb
popf
jl
mov
insl
lods
pop
mov
sub
or
sbb
sub
cmp
dec
mov
jl
mov
insl
lods
pop
mov
sub
or
xor
xchg
pop
dec
iret
and
xor
mov
xchg
inc
inc
mov
out
movsb
push
xchg
pop
gs
js
jecxz
mov
mov
fs
das
loop
mov
xor
loopne
pop
adc
into
ds
xchg
ss
stos
nop
dec
subb
mov
pop
and
fnstenv
add
push
xchg
lods
js
sahf
aad
cmpsl
add
loopne
push
xor
out
mov
dec
or
ds
xchg
jp
addl
cmpsl
adc
cmp
pop
push
xor
add
cwtl
daa
into
mov
dec
ret
or
stc
fldenv
fs
jb
mov
mov
loopne
jecxz
adc
ss
in
fsub
adc
mov
pop
rcrb
pop
les
outsb
in
dec
rcr
std
xor
or
cwtl
pop
shlb
mov
jg
jbe
mov
sub
jo
movsl
fistpll
arpl
loopne
cwtl
lahf
repnz
bound
mov
das
push
inc
out
jbe
push
pusha
cltd
sahf
or
mov
sahf
inc
fdivs
in
or
jae
dec
mov
scas
stos
les
xchg
repz
stos
into
mov
inc
iret
daa
stos
outsb
inc
into
stos
daa
mov
bound
mov
mov
cmc
cmp
jp
mov
in
sub
mov
and
inc
nop
nop
dec
pop
iret
ret
nop
add
push
mov
lcall
les
pcmpeqb
outsb
xchg
iret
addr16
mov
lds
mov
add
push
mov
divl
in
daa
mov
cmp
xlat
stc
cmp
scas
pop
repz
je
cld
jns
mov
ret
cmp
add
lock
enter
jno
shll
dec
dec
pop
and
outsl
dec
scas
pop
adc
cmp
divl
js
xchg
test
dec
mov
inc
adc
pop
jnp
cwtl
leave
and
sarl
arpl
fsubrl
xchg
or
repnz
loop
cltd
hlt
outsl
and
and
or
pop
out
pushf
pop
test
mov
mov
rorl
je
inc
iret
mov
pop
addb
pusha
imul
cmpsl
jns
leave
mov
and
fsub
cli
jno
test
int3
test
dec
sub
push
sub
xor
rep
xor
dec
es
or
lahf
mov
add
adc
sarb
and
stos
inc
cmp
dec
repz
mov
mov
test
cmp
sbb
clc
push
jno
and
outsb
or
mov
es
lret
push
dec
test
rol
clc
pop
in
jbe
std
out
inc
add
pop
test
rorb
pop
or
sub
and
stos
sti
in
rcrb
xchg
sub
idivb
cmpsb
icebp
xor
movsl
mov
fstpl
adcb
cltd
adc
jae
xor
sbb
cmc
mov
sbb
push
push
sarl
inc
or
xor
shlb
xchg
mov
out
adc
push
xor
mov
imul
push
int
mov
inc
and
in
pop
insl
or
mov
xor
test
fwait
jae
inc
xor
cmc
inc
cmpsb
adc
or
sahf
add
ficomps
pop
mov
sbb
sti
ret
test
pop
repnz
sbbl
sub
sbbb
jecxz
scas
jo
push
pop
xor
nop
mov
testl
sbb
arpl
jg
fwait
mov
sar
mov
adc
out
ds
addr16
inc
repnz
mov
scas
out
pop
inc
in
push
out
pop
imul
ret
test
lods
mov
add
loop
loope
add
add
bound
test
adc
xchg
jecxz
in
pop
cwtl
sub
mov
push
pop
mov
cwtl
addr16
pop
jge
push
lcall
ljmp
sub
dec
rol
outsb
int
push
arpl
out
cld
icebp
push
int3
and
idiv
cmp
jp
out
out
das
dec
push
jp
sub
add
shrb
rorl
stos
fldl
cs
push
mov
negl
cmp
add
push
dec
jo
jp
mov
in
mov
pop
mov
popf
or
fcmovu
out
testb
daa
fcomi
in
mov
test
aad
jecxz
inc
es
xor
xor
mov
pop
jge
fs
and
add
xchg
clc
dec
or
fcomps
jo
jl
movsl
lcall
leave
push
sahf
sbb
clc
imul
rcll
dec
call
cld
mov
scas
xchg
add
or
add
imul
mov
out
mov
iret
sarb
mov
repz
lret
mov
xchg
lea
test
adc
xchg
enter
movsb
mov
mov
mov
pop
adc
cli
and
jp
shlb
shll
cmpsl
cli
repnz
insl
cmpl
push
inc
inc
push
jae
cmc
mov
fcompl
sti
fstp
iret
cwtl
add
cld
lret
sbbb
int3
xchg
cltd
les
sub
in
adcb
call
shl
sti
and
sbb
aaa
aam
mov
mov
icebp
mov
sbbb
add
push
mov
push
scas
xchg
stc
sub
shll
cmc
adc
add
test
inc
test
and
and
mov
jge
out
lcall
out
iret
int
imul
cmpsl
mov
and
mov
cmc
lods
aam
or
scas
stos
cmp
pop
shlb
fwait
push
pop
xchg
mov
push
add
mov
and
mov
lret
call
sti
xor
mov
fnstenv
cmpsb
cmpsb
arpl
addr16
inc
push
enter
icebp
lcall
push
lahf
outsl
les
loopne
xchg
stos
mov
push
stos
dec
popa
jecxz
jns
movsb
pushl
shlb
push
pop
ja
sub
call
push
loope
in
inc
data16
les
dec
cltd
push
in
paddsb
push
mov
fidivl
jl
stos
pop
insl
or
sbb
aaa
aas
jbe
loop
jns
dec
addr16
cwtl
scas
mov
outsb
sbb
push
pop
inc
shlb
mov
shl
jmp
inc
rcll
xor
je
xor
pop
nop
test
or
cld
push
inc
xlat
mov
into
popf
mov
xlat
mov
cmp
and
cmp
inc
adc
and
adc
lret
and
jno
and
inc
aam
push
xor
pop
xchg
jns
insl
jno
or
test
pop
jl
test
xchg
sbb
push
enter
out
popa
sbb
es
and
gs
mov
shrl
mov
fistl
in
xchg
test
fucom
pop
sahf
jmp
xchg
es
mov
adc
lret
mov
or
decb
mov
in
and
movsb
mov
lock
or
adcb
mov
mov
mov
jmp
jmp
jb
js
nop
test
repz
jp
xlat
faddl
jnp
jns
out
xchg
mov
mov
cmc
fimull
pushf
jns
jecxz
cli
enter
out
sbb
aad
cld
pop
cmpl
lods
or
xchg
dec
push
sbb
ffree
jae
pop
gs
cli
xchg
adc
andb
mov
and
push
enter
sbb
shlb
xchg
xor
push
jl
popa
mov
lds
adc
rorl
push
in
fistps
adc
and
js
stos
pop
inc
daa
aas
jge
jmp
sarb
push
inc
ds
ficompl
mov
cmp
in
inc
mov
xchg
xchg
into
adc
leave
jmp
mov
aam
fsubr
jg
shrb
ds
imulb
in
mov
lcall
outsl
sub
ds
sub
fisttpl
enter
xchg
mov
andl
add
jp
xlat
push
dec
stos
and
loopne
push
insl
test
sbb
mov
mov
and
mov
or
pop
push
movsl
pop
shll
movsl
das
xchg
mov
inc
pushf
pop
loope
fcompl
fsubs
and
dec
out
mov
xchg
shll
cld
jae
sub
pop
leave
xor
cmpsb
movb
cmp
arpl
push
adc
jnp
push
cmpl
loop
mov
jle
fimuls
es
fwait
cmc
lods
jns
inc
ss
xchg
dec
lret
in
push
push
jl
xchg
fidivrl
ficompl
mov
ljmp
daa
out
imul
outsb
jmp
imul
push
sarb
popa
dec
test
xchg
push
or
xchg
pop
movsb
push
test
stos
xor
dec
pop
push
push
or
shrl
jno
or
xchg
pop
lods
sub
lock
and
push
addr16
and
loope
pop
jp
mov
rcr
inc
popa
insb
arpl
adc
shlb
out
outsb
xchg
lock
out
dec
and
rclb
loop
and
dec
stos
or
scas
subb
jns
xchg
xlat
jnp
test
test
xor
scas
mov
movsl
repz
and
roll
mov
mov
popf
leave
cwtl
decl
and
pop
ret
jb
lods
jnp
mov
mov
add
call
cmp
and
and
loope
dec
push
lcall
outsb
nop
fildl
inc
mov
jmp
cwtl
adc
pop
hlt
and
pusha
add
push
jle
mov
xchg
xchg
sub
into
pop
push
test
adc
cmp
lds
xchg
insb
sahf
jmp
sub
sbb
enter
xor
fadd
les
jne
xchg
push
and
in
cmp
testb
inc
andb
arpl
sub
sbb
sub
arpl
pop
inc
push
test
jp
mov
mov
mulb
test
or
pop
adc
jmp
xorb
gs
jp
push
mov
dec
cld
xor
jae
call
add
cmc
or
sbb
xor
dec
add
js
in
cltd
sbb
bound
dec
dec
imul
scas
dec
add
add
pop
mov
mov
int3
ror
mov
int3
mov
vaddpd
mov
jmp
imul
sbb
lods
sarb
cmp
xor
or
out
out
fistpl
sub
out
or
xor
sbb
js
mov
je
mov
jns
or
das
sbb
cmc
mov
pop
adc
pushf
imul
loopne
xchg
mov
popa
sub
mov
push
adc
and
in
push
xchg
pop
movsb
mov
pusha
cmp
push
pushf
pop
pusha
scas
jp
lcall
scas
jg
and
int
sbb
xorb
js
fildll
xchg
dec
jae
sbb
xor
cld
jle
and
sbb
jnp
rolb
and
sti
test
addb
pop
push
in
push
in
hlt
loop
mov
in
or
cli
addb
test
and
lods
push
cmp
push
jmp
lret
pushl
dec
cmp
call
xchg
out
outsl
cltd
ja
inc
push
movsb
or
pop
scas
pop
and
shll
jbe
test
mov
cmp
cmpsl
mov
cmp
jae
fsts
and
mov
movntq
out
scas
ss
bound
jp
pop
mov
mov
ficoms
rcl
dec
lods
or
pop
lret
cmp
push
loopne
cli
outsb
aad
rcl
sbb
or
mov
sub
push
xchg
rcl
pop
imul
mov
aaa
push
pop
inc
int
sbb
add
jb
pop
out
mov
clc
rclb
xor
xchg
push
push
add
xor
sbb
jno
inc
add
add
or
xchg
jle
and
lods
hlt
pop
add
mov
pusha
das
jg
loop
jle
sub
dec
cmp
lret
test
sbb
jmp
pop
xchg
jecxz
mov
bound
stc
jp
xchg
jp
add
add
jle
pop
mov
mov
mov
out
pop
add
xchg
and
imul
mov
daa
pop
mov
lret
pop
cmpl
mov
in
stos
xor
or
lcall
lret
mov
nop
xchg
decb
sub
dec
lods
push
xorl
xchg
push
and
mov
adc
imul
jae
inc
ljmp
xchg
or
sub
aaa
jo
shrb
push
nop
rcrb
add
push
aam
xorl
mov
fsubs
lock
mov
loope
lret
stos
clc
sarl
ficoml
popa
mov
loope
fcoms
rolb
pop
daa
sarb
mov
icebp
xchg
mov
not
mov
mov
neg
mov
ljmp
dec
inc
imul
jl
add
cmp
aad
mov
icebp
lods
adc
cmp
push
out
nop
inc
add
mov
faddl
xor
push
movsb
lods
jge
loope
mov
xor
into
inc
push
adc
outsl
shr
lea
jno
gs
push
aas
mov
dec
cltd
jnp
add
out
arpl
leave
inc
popl
cmpsl
mov
mov
cmp
pop
fwait
mov
pop
pop
dec
loopne
jno
decb
icebp
ja
xchg
movsb
mov
cmpsl
xor
dec
je
shlb
bound
outsb
lock
dec
and
cmp
repz
inc
call
jb
pushf
iret
shlb
dec
jno
or
lret
add
stos
pavgw
fnstcw
dec
sbb
adc
push
xchg
xchg
inc
enter
mov
int3
lods
add
sti
push
xchg
aam
test
mov
rolb
sbb
test
xchg
mov
mov
imul
inc
pop
arpl
scas
jnp
xchg
pop
dec
dec
cltd
into
sub
arpl
and
lock
insb
pop
pop
mov
in
or
sub
jg
pop
jno
and
cwtl
add
push
add
test
xor
rcrb
add
and
jno
nop
into
lcall
test
sbb
sub
repz
and
sub
je
sbb
in
cmp
push
popf
add
sub
mov
daa
push
int
enter
std
xor
push
fidivl
js
jl
push
xor
adc
enter
and
mov
mov
jnp
mov
and
push
test
pop
xor
pop
xchg
fxch
push
ja
aam
popf
sarb
dec
mov
andl
or
pop
jns
xor
and
and
dec
cmp
je
out
fwait
xchg
sbb
mov
push
push
lar
mov
jne
xor
or
mov
mov
das
sti
or
ret
pusha
and
iret
leave
aad
into
lock
cmp
aam
pop
adc
push
inc
add
mov
scas
xlat
mov
sub
adc
inc
cmpsl
pop
repz
jp
push
mov
lods
nop
test
in
outsb
pop
or
in
add
in
xchg
in
das
shlb
sub
into
cmp
pop
insb
repnz
pop
add
repz
cli
pusha
mov
loop
loop
aam
mov
enter
daa
push
push
pop
std
out
pop
adc
pusha
out
nop
lcall
jl
out
gs
loope
sub
xchg
outsl
sbb
mov
rcll
and
xor
xor
les
mov
outsl
ljmp
cmp
xchg
inc
mov
pop
cmpsl
jmp
loopne
xchg
in
xchg
ljmp
outsl
insb
cs
cltd
jbe
adc
push
call
add
sub
pop
dec
dec
notl
pop
daa
stc
jg
cld
aad
xor
mov
enter
jg
mov
add
lea
andl
and
lods
or
adc
mov
pop
xlat
jge
inc
aas
lcall
and
dec
cmc
pop
push
ja
inc
jno
sub
shll
gs
push
ret
aaa
mov
add
xor
stc
scas
inc
mov
insl
pop
or
xor
scas
xor
pop
icebp
jmp
xor
aam
xchg
jo
fsubrl
mov
out
repz
jbe
sbb
mov
cli
adc
pop
mov
daa
mov
test
cmpsb
mov
sbb
and
pop
pop
push
loop
adc
out
push
movsb
test
add
pop
dec
popf
push
mov
xchg
popf
data16
in
sub
repnz
pusha
cmp
scas
pop
mov
mov
loopne
inc
sub
mov
shlb
repnz
adc
mov
push
addl
cmpsl
repz
pop
lods
in
aaa
loopne
jle
mov
repnz
xchg
arpl
xchg
imul
add
loope
inc
adc
dec
jnp
cmp
sarl
jbe
lods
jl
in
or
fbld
pop
mov
sbb
cld
icebp
xchg
add
sub
xor
mov
xor
xchg
insb
ret
int3
inc
out
out
mov
jb
or
cmp
and
xor
mov
dec
sub
push
insb
mov
scas
ds
inc
mov
and
mov
mov
add
movsl
jp
push
or
iret
stos
mov
mov
push
idiv
les
cld
add
rolb
xchg
pop
scas
inc
jbe
pushf
jmp
xor
jo
es
jnp
insb
jb
ljmp
xor
mov
jno
fidivs
pop
mov
or
js
pop
jbe
shlb
mov
cmpsb
pop
shll
aas
add
jnp
outsb
xor
pusha
push
jp
adc
pushf
std
push
add
insb
mov
fs
sbb
testb
fisttps
xor
orb
push
out
shrb
int
sarb
mov
xchg
test
idiv
clc
inc
sahf
fcmovnu
pop
pmuludq
icebp
jae
std
push
aas
stos
dec
dec
aad
out
fdivrs
mov
clc
iret
fidivrl
clc
ret
andb
enter
xchg
mov
sbb
out
leave
mov
inc
push
imul
inc
inc
mov
sbb
jmp
mov
xor
imul
cmp
or
gs
stos
mov
cmp
cltd
add
nop
inc
jmp
pop
push
mov
stc
repz
fidivrs
dec
push
movsl
jne
add
jns
add
roll
lret
and
or
or
fwait
lock
dec
push
inc
sbb
aad
push
loopne
dec
and
movsl
mov
aas
negl
inc
push
pushf
xorb
pop
xor
xchg
mov
pop
add
cmpsl
mov
imul
popf
xchg
sbb
out
jg
cmpsb
jp
movsb
inc
sub
jge,pt
push
push
pop
or
testb
adc
xlat
xchg
repz
lods
cli
or
lret
mov
xchg
cmp
xchg
jmp
mov
jge
pop
ret
lret
lods
lret
or
ret
test
jns
pusha
movb
mov
movsb
inc
ret
mov
sbb
adc
xchg
cmp
mov
imul
xor
in
push
enter
add
mov
scas
cmp
sahf
pop
out
imul
pop
ja
mov
or
adc
xor
sub
shr
mov
mov
fisubrs
push
jo
xchg
dec
bound
xchg
sbb
mov
dec
jae
and
pop
ja
xchg
sub
xchg
fucomi
pop
test
mov
ret
mov
mov
push
fcoms
movsb
dec
pop
popf
inc
outsb
in
in
out
ret
dec
outsl
lods
pop
inc
ret
lret
pop
or
into
movl
mov
in
mov
cmp
movsl
nop
inc
icebp
sub
xorl
jmp
cmp
and
mov
arpl
adc
lcall
jns
and
ficoml
cmp
lock
cmp
jecxz
pop
dec
cmc
out
fiaddl
ds
sbb
push
daa
sbb
pop
js
mov
popa
jne
and
icebp
imul
test
sub
scas
mov
cmp
call
adc
or
push
inc
cmpsl
xchg
jmp
movsl
lods
jmp
mov
cmpsl
jg
ja
jg
aam
enter
mov
sub
testb
jmp
jns
lea
iret
daa
rcll
pop
icebp
cmp
inc
adc
sahf
xor
xchg
push
push
cmc
aam
loope
inc
out
dec
xchg
out
mov
adc
push
icebp
jecxz
cmp
add
scas
cmc
push
out
icebp
mov
enter
jmp
jne
pop
xchg
dec
daa
out
mov
mov
add
jp
mov
mov
sub
insb
or
shll
adc
js
cs
fnstsw
insb
popf
jl
mov
insl
lods
pop
mov
sub
or
sbb
sub
cmp
dec
mov
jl
mov
insl
lods
pop
mov
sub
or
sbb
sub
cmp
dec
mov
jl
mov
insl
lods
pop
mov
sub
or
push
jmp
dec
mov
cld
dec
jae
arpl
push
pop
mov
push
adc
jb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
jl
insb
jae
sbb
sub
bound
in
std
popf
in
dec
sbb
sbb
or
cmp
dec
mov
std
in
std
stc
in
mov
mov
sub
insb
jge
insl
or
cmp
sub
fsubrl
adcb
mov
cmp
das
jg
cmp
aas
mov
jg
ja
push
cmpsl
fisubs
push
inc
lea
pop
xchg
pop
call
or
adcl
xorl
add
stc
add
std
lds
aad
test
and
mov
int
cli
out
pop
arpl
xor
pop
imul
jge
jge
mov
and
imul
leave
iret
lods
ret
mov
xorl
pop
insl
dec
sub
and
lea
add
jo
out
pushf
cmp
add
in
test
xchg
fadd
enter
adc
in
mov
sub
insb
jge
insl
or
cmp
sub
fsubrl
in
std
pushf
in
mov
mov
inc
xor
adc
js
pop
or
cld
lods
test
pushf
cwtl
call
cltd
leave
xor
dec
xor
pop
add
imul
mov
enter
mov
clc
push
sbb
or
jge
insl
or
cmp
sub
fsubrl
in
std
pushf
in
mov
mov
sub
insb
jge
insl
or
cmp
sub
fsubrl
in
std
pushf
in
mov
mov
mov
sub
in
push
enter
rorb
mov
cmp
out
pop
push
mov
mov
fadd
dec
jmp
adc
movsb
in
sbb
add
out
imul
mov
lret
push
and
or
es
stos
es
sbb
pop
in
js
fldt
inc
ja
pop
mov
out
jb
xorl
sti
ds
push
inc
test
push
adc
cmpsb
mov
xor
pop
sbb
aad
sub
dec
pop
inc
lock
arpl
and
adcl
mov
ret
mov
and
stc
in
andl
dec
mov
mov
cmp
mov
sarl
test
mov
push
and
cmp
in
sub
arpl
push
xchg
stos
xor
jle
enter
lock
pop
inc
in
jns
sbb
jno
sbb
sub
test
push
mov
xor
mov
jge
mov
lahf
jbe
cwtl
test
out
mov
loopne
repnz
mov
and
filds
aam
cmp
test
cld
cld
leave
jmp
or
dec
in
sbb
imul
ljmp
and
movb
sub
leave
sbb
idivl
and
sbb
push
mov
or
xor
insl
outsb
xor
out
jmp
jno
and
dec
push
daa
out
and
xor
aas
sarb
push
push
inc
jle
out
xor
pop
jns
js
cmp
dec
cmp
nop
icebp
sbb
sbb
mov
push
mov
push
js
mov
out
pop
sbb
xchg
mov
sbb
lret
shll
push
or
jo
fmuls
mov
mov
lods
pop
cmpl
repnz
ret
sbbb
scas
mov
lahf
movsb
das
mov
push
dec
cmpsb
adc
adc
cmc
inc
bound
jno
mov
push
cmp
mov
out
fistpll
xchg
pop
and
mov
ljmp
push
mov
mov
dec
fsubr
xor
stos
mov
mov
mov
sub
cmp
pop
mov
lret
fcmovu
or
jg
movsl
ds
sarl
lods
adc
xor
ret
add
or
add
xor
outsb
mov
push
xor
xchg
das
cmp
xorb
ds
pop
insb
push
mov
jns
push
or
popa
push
mov
sub
push
inc
lcall
scas
cmp
push
jle
insb
jge
fldcw
and
imul
orb
and
test
cmpsb
cmpsb
add
adc
sarl
inc
jle
roll
sti
in
bound
lret
aad
cmc
rcrl
cmc
into
dec
mov
aaa
repz
cli
jo
stos
pop
pmulhuw
mov
mov
fyl2x
xor
jo
aad
lahf
arpl
mov
sbb
in
add
mov
mov
pushf
mov
outsb
add
cmp
pop
push
mov
xchg
rclb
loop
ret
lods
test
sbb
popl
stos
shrl
xlat
jmp
inc
mov
adc
push
sub
pusha
cmp
or
or
add
arpl
mov
add
jnp
xor
mov
mov
test
roll
out
mov
stos
rorl
and
xchg
lret
lret
je
sbb
les
push
mov
mov
stc
xchg
xchg
imul
sub
jge
pop
fisttpl
retw
sahf
dec
cli
xchg
ret
jae
in
mov
mov
xor
inc
xchg
jnp
add
pop
jbe
mov
add
fwait
xchg
mov
push
ret
sub
push
icebp
sbb
mov
or
stc
in
shrl
pop
and
fcompl
or
sub
int3
test
dec
jae
mov
cwtl
fs
sbb
add
mov
repz
pop
cld
lods
fistps
test
outsb
cmp
adc
aas
xchg
scas
jl
repz
pop
in
mov
or
jmp
cli
fwait
cltd
outsl
pusha
pop
xor
aam
and
leave
pop
xor
add
inc
cmp
enter
xor
sbb
cmpsl
inc
dec
xchg
lea
and
mov
fwait
je
push
jnp
cmp
jne
sbb
mov
push
or
sbb
into
in
ss
dec
gs
sbb
jns
adcl
jb
and
adc
mov
mov
aaa
cmp
push
xchg
std
addb
pop
push
xchg
push
inc
mov
or
fs
das
and
or
sub
cmp
sub
out
cmp
xchg
xchg
xor
mov
lods
and
xor
and
mov
and
xor
sub
adc
add
das
lock
aad
sbb
xchg
push
frstor
xchg
insb
jg
sub
lds
and
push
xchg
iret
xor
inc
lcall
jle
xor
push
lcall
xchg
pop
xchg
xor
out
sub
negb
lahf
fwait
add
jnp
loope
or
mov
sarb
pushf
mov
data16
fisttpl
repz
hlt
stc
cmp
cmp
push
imul
inc
push
mov
in
leave
fisttps
xchg
lea
orl
loope
stos
pop
sti
jb
call
or
mov
ss
cmp
lock
out
push
in
into
rcll
pushf
mov
jmp
out
pop
out
das
cmpsl
fldlg2
test
mov
arpl
in
xchg
or
push
das
loope
popf
les
push
sete
pushf
mov
push
daa
jp
xchg
sbb
out
sub
adc
push
xchg
dec
or
sub
add
or
es
push
jmp
inc
loopne
cld
div
xor
mov
cmc
jne
xchg
sub
ret
fdiv
mov
lret
cli
add
test
outsl
andb
dec
dec
xor
or
or
mull
mov
push
daa
sbb
or
fldcw
in
push
ret
mov
movsb
data16
and
stos
out
sti
sub
dec
cs
test
or
jmp
lods
nop
jns
gs
arpl
test
cmc
bound
dec
int
jae
hlt
fisubl
adc
imul
data16
push
push
xor
add
push
xor
push
popl
adc
cld
dec
lret
mov
sbb
pushf
jmp
mov
or
bound
imul
pop
iret
inc
xor
inc
pop
mov
add
cmp
hlt
daa
loop
fs
cmp
pop
lret
popf
mov
add
mov
push
sbb
gs
mov
ss
sub
mov
loope
mov
dec
dec
xor
data16
push
dec
push
ljmp
leave
cwtl
rcl
aaa
xchg
cwtl
xchg
add
xchg
lcall
push
icebp
dec
shl
adc
stos
dec
cli
stc
xchg
xor
sbb
les
testb
js
push
pop
add
shl
lea
in
pop
outsl
sbb
cmc
inc
scas
lret
fwait
xor
mov
adc
sahf
adc
xor
pop
xor
hlt
mov
xchg
mov
pop
push
and
scas
jbe
lret
jo
cmp
dec
xor
cmpsb
aad
outsb
out
lcall
lea
and
sbb
cmp
xchg
std
pop
rcl
inc
add
xchg
dec
xor
jp
jmp
adc
insl
inc
cli
jne
push
cli
int
data16
sbb
clc
adc
xchg
scas
cmpsl
mov
xorb
jmp
mov
jp
xchg
idivb
xchg
pop
push
incl
push
pop
ret
nop
xchg
mov
out
ds
mov
lods
int
adc
jne
mov
cmp
and
or
sub
lret
push
in
push
sbb
dec
call
icebp
xchg
sarb
fadd
cmp
dec
or
inc
sbbl
and
jae
push
and
pop
fldl
subl
push
test
int3
adc
mov
pop
fwait
xlat
dec
inc
ret
xor
lret
test
bound
arpl
or
jno
cld
popf
jecxz
cld
fimull
popa
adc
sbb
mov
les
pop
add
insl
fisubrs
mov
or
lcall
push
cmp
push
pop
cltd
push
shlb
and
sub
or
xchg
sbb
jo
push
popf
mov
or
xchg
sbb
pop
les
int3
loope
jno
push
sbb
mov
clc
loope
stos
mov
mov
in
xor
mov
scas
mov
or
jbe
std
popa
lret
push
fldcw
lret
ds
mov
in
je
ret
out
xor
push
icebp
push
lret
pop
addr16
jl
inc
vrsqrtps
jnp
jbe
pop
test
jb
fsubrl
shll
add
sub
adc
mov
in
push
pusha
mov
cmp
sbb
mov
adc
loope
cld
xor
jmp
xor
push
or
cld
sbb
push
mov
loopne
jle
adcl
xor
mov
mov
in
das
dec
and
js
imul
push
fwait
adc
adc
mov
mov
fsubl
xor
sub
stos
dec
mov
hlt
int
pop
lahf
jp
mov
lods
mov
jl
dec
jae
xor
outsb
mov
mov
scas
push
imul
xchg
sbb
mov
jl
pop
lcall
xor
mov
dec
xor
mov
int
repnz
mov
stos
imul
pop
dec
mov
or
lret
daa
dec
fsubrs
or
inc
sub
shrb
xchg
out
jmp
mov
rclb
mov
pop
mov
fcomi
hlt
mov
mov
sti
mov
test
outsl
xchg
push
sbb
clc
jle
xor
push
and
in
push
inc
push
nop
cmc
stos
inc
fildl
pop
cmc
ja
pop
sbb
frstor
popa
lret
xchg
mov
push
cli
xchg
sbb
sub
adc
xor
repnz
push
bound
sbb
rorb
int3
dec
negb
int
or
daa
popf
adc
push
enter
pop
rorb
adc
subl
popa
aad
popf
adc
dec
adc
ret
outsl
sahf
test
cmp
and
xor
ja
mov
xchg
sbb
pop
std
mov
outsl
push
xchg
push
xor
cmp
sbbb
test
repnz
popa
into
xlat
add
into
push
dec
into
cmpsl
push
leave
sub
sar
pop
jo
xchg
in
cltd
rcrb
adcb
iret
stos
mov
std
ja
xchg
stos
call
dec
cli
xor
mov
sub
xchg
mov
sbb
jne
sti
addb
sbb
inc
clc
clc
mov
push
push
mov
leave
outsl
mov
sbb
loope
mov
stc
movsb
test
dec
xlat
orl
pop
or
or
jg
subb
cmp
jo
mov
insb
pop
add
dec
lcall
aaa
std
sarl
lahf
mov
fldenv
adc
dec
sbb
ret
mov
jne
cmp
and
cmp
pop
aaa
es
push
cmp
mov
xchg
mov
xor
jp
push
test
jmp
or
inc
je
inc
cmp
dec
jmp
and
es
xchg
or
xchg
pusha
sbb
rcrl
int3
rorb
adc
mov
mov
adc
movsl
mov
ds
dec
pop
mov
cwtl
int3
mov
jle
push
inc
pop
in
ret
cli
repz
mov
lahf
push
aas
push
dec
ja
ret
push
dec
jb
pop
sub
fcmovu
push
dec
clc
fcoml
decb
pop
cmc
push
mov
jmp
mov
icebp
and
mull
adc
je
enter
mov
or
mov
jbe
xchg
push
loope
xchg
dec
cmp
scas
inc
push
cmp
mov
and
movsb
push
iret
jmp
cmpsl
pop
pop
xor
daa
xor
or
jmp
lahf
and
cmpsb
sub
inc
in
out
js
ljmp
ret
xchg
fldenv
xor
arpl
adc
dec
or
mov
xor
aad
cs
pop
out
push
dec
push
cmp
sub
jno
addr16
mov
cmp
mov
int3
subl
and
andl
fldenv
jg
cmpl
adc
mov
xchg
outsb
pushf
orb
push
mov
ret
divl
dec
scas
ss
insl
cwtl
xor
push
pop
sbb
push
test
movsb
ds
fidivl
dec
jns
add
mov
fisubs
jle
int3
and
mov
lret
jb
add
pop
jnp
push
mov
test
fisubrl
push
adc
repz
sbb
stos
addr16
lea
sbb
cmp
decb
push
mov
mov
jecxz
bound
ljmp
adc
jecxz
cmp
xchg
inc
bound
bound
cmpsl
div
mov
mov
xor
insb
inc
xor
dec
inc
inc
cltd
ja
sbb
mov
out
dec
shlb
out
mov
jbe
fnstenv
mov
and
sbb
xchg
test
daa
dec
lahf
shlb
mov
mov
mov
and
inc
mov
loop
clc
pop
add
push
out
xchg
xchg
mov
add
test
jo
cmp
pop
mov
les
fadds
push
out
sbb
jmp
xor
fs
ret
orl
mov
xor
nop
not
jo
orb
movsb
push
add
repnz
xchg
call
mov
fnstsw
je
push
xchg
jl
pop
cmp
adcl
aas
pop
lcall
mov
mov
in
inc
sub
add
cmpsb
mov
push
mov
mov
cwtl
sbbl
ret
and
cs
hlt
xchg
fiaddl
push
xchg
mov
or
xchg
lret
pop
fs
add
pop
aam
popa
int
mov
push
fstl
int
in
pop
add
leave
jg
dec
sub
mov
pushf
inc
gs
ljmp
add
push
cwtl
std
add
jl
jge
pop
inc
dec
fidivrs
lret
jo
cmp
add
sbb
jno
xchg
jbe
fwait
mov
addl
add
repz
mov
sbb
push
in
pop
mov
mov
push
aas
sbb
adc
xchg
push
shl
and
fisubrl
daa
xor
mov
mov
scas
pop
sub
ret
jne
gs
orl
adc
mov
mov
xchg
pop
test
sub
or
pop
sbb
fistl
pusha
test
test
ja
push
xor
out
inc
xor
cmp
fidivl
lods
jge
sbb
lcall
loopne
mov
jecxz
pushf
dec
addr16
mov
js
pop
sbb
insl
mov
and
stos
ficompl
adc
xchg
xor
mov
mov
fsts
or
xchg
cmp
sub
xor
gs
pop
in
je
dec
stc
lcall
jp
out
sbb
pop
cwtl
in
ficompl
jno
adc
mov
xlat
les
and
sbb
fsubrl
scas
movsl
cmp
or
out
push
mov
in
repz
scas
hlt
js
testl
pop
cmp
cmc
into
pop
pop
sbb
xorb
and
pop
sbb
shrl
xor
in
daa
into
int
and
addr16
in
mov
mov
dec
into
movsb
jecxz
xchg
in
push
decb
clc
std
ret
cmp
sbb
repnz
add
cmp
arpl
dec
inc
xchg
cmp
repnz
sub
mov
push
mov
stos
fnstenv
mov
dec
pop
add
or
hlt
inc
mov
sbb
mov
icebp
xlat
push
mov
mov
dec
mov
insl
push
or
mov
dec
fmull
and
dec
iret
decl
xchg
mov
jo
push
test
cmpsl
fisubrs
nop
sbb
inc
iret
repz
xchg
sbb
jmp
outsl
das
mov
mov
scas
and
andl
mov
outsl
aam
inc
mov
repnz
in
xchg
popf
gs
jae
jns
push
xchg
aad
mov
adc
lret
jnp
jle
inc
mov
jecxz
stc
mov
iret
xchg
fistl
lea
inc
pop
in
mov
mov
es
mov
jmp
xor
add
scas
inc
ljmp
mov
sub
andb
js
add
lret
jg
mov
add
mov
icebp
pop
push
jg
sbb
mov
and
push
xchg
push
dec
push
sub
cwtl
adc
add
leave
test
fldl
adc
cmp
mov
cltd
mov
or
ljmp
movsb
not
add
ds
bound
or
jb
fnsave
jno
and
xorl
repz
push
jp
and
inc
push
xor
inc
call
fiaddl
push
test
cmpsl
inc
push
push
shll
mov
push
int
push
cmp
inc
jmp
loope
mov
pop
xchg
dec
jns
sbb
add
jnp
in
adc
jne
ljmp
es
lods
inc
mov
jmp
sahf
add
fistpll
xchg
xchg
sub
loope
mov
push
mov
xchg
inc
and
or
out
rolb
jae
jnp
jbe
movsl
cmp
aam
pop
adc
xchg
aam
cmpsb
jne
mov
sbb
loop
pop
ret
out
test
mov
xor
dec
stos
xlat
mov
iret
imul
outsl
call
pop
cmpsb
push
mov
sub
cli
shr
std
loop
jl
lcall
mov
lods
dec
xchg
bnd
jle
sahf
leave
pmaxsw
xchg
bound
loope
lret
insl
fs
in
scas
rorb
ret
call
mov
add
addr16
xchg
mov
aam
xchg
mov
add
fdivl
xor
ljmp
dec
mov
add
aam
push
aaa
cltd
xchg
int
and
outsl
sbb
scas
out
fs
xchg
adc
jae
inc
clc
gs
fisttpl
mov
in
outsb
cld
mov
in
mov
scas
mov
mov
pop
inc
xor
mov
jne
imul
cwtl
test
mov
dec
push
in
push
jge
gs
sub
iret
or
push
or
in
or
insl
loop
and
mov
ja
outsb
push
sub
loop
hlt
mov
arpl
xchg
jg
xor
stc
cmp
sbb
or
and
lea
inc
fistps
data16
shrl
jp
cmpsl
icebp
std
mov
dec
or
inc
out
push
mov
mov
out
ficompl
idivb
jo
mov
xlat
adc
shlb
outsb
iret
pop
ljmp
mov
dec
divl
add
fadds
push
scas
pop
rcr
jo
sub
add
test
push
mov
repz
mov
cmp
push
pop
arpl
into
adc
fsubr
ficoml
adc
xchg
sub
mov
outsb
and
pop
push
out
dec
push
sub
jle
les
jne
push
inc
jnp
outsl
fadd
inc
inc
jnp
add
push
mov
ficomps
xorb
inc
xor
sub
cs
dec
test
cmp
lods
dec
xchg
inc
mov
in
rorl
fs
push
push
lret
cs
pusha
dec
fs
xor
bound
iret
mov
jbe
in
movsl
and
cwtl
les
leave
xchg
or
popa
call
aas
xor
xchg
test
push
shlb
test
arpl
fadds
push
nop
dec
in
adc
mov
rol
mov
std
adc
out
inc
lahf
test
jns
inc
or
xor
mov
cmpsb
mov
xlat
into
sub
pushf
inc
call
ret
data16
sarb
add
aam
outsl
xchg
cmp
shlb
loopne
rclb
add
inc
fsts
loopne
and
sbbl
push
negl
mov
call
adc
arpl
xchg
add
cmp
fstps
repz
sub
bound
rorl
jno
cld
cmpsl
sub
xor
mov
stc
jo
sub
mov
fstpt
lret
in
pop
mov
pop
mov
xchg
xor
lret
sbb
add
insl
inc
and
fnstsw
mov
jl
inc
push
xchg
ds
dec
insb
sub
or
mov
sbb
icebp
rcll
sub
popf
jl
sbb
xor
enter
mov
xlat
ljmp
call
jmp
or
or
cmp
sub
fsubrl
in
std
pushf
in
mov
mov
sub
insb
jge
insl
or
cmp
sub
fsubrl
in
std
pushf
in
mov
mov
sub
insb
jge
insl
or
cmp
sub
fsubrl
in
std
pushf
in
mov
mov
sub
insb
jge
insl
or
cmp
in
mov
cld
lea
and
push
dec
call
jge
or
cmp
adcl
xlat
popf
lods
out
out
pop
pop
pop
add
jge
or
ja
addr16
fldl
int
popf
pop
lods
idivl
pop
ljmp
movsl
adc
pop
xor
jge
je
mov
out
out
test
and
adc
inc
adc
or
push
cmpsb
mov
or
mov
icebp
enter
test
dec
mov
fcompl
out
cmp
test
cmpsl
jb
rcll
call
imul
pop
inc
and
adc
inc
clc
or
and
or
pop
mov
xchg
pop
bnd
xchg
das
cmp
js
push
add
test
lea
enter
ja
mov
in
sbb
in
repnz
dec
push
divl
out
aaa
sub
insl
hlt
cmpsb
rorb
ljmp
or
lods
or
adc
jge
jmp
outsb
fwait
jle
popl
fwait
scas
int
rcrb
jb
pop
sbb
add
sub
cmp
decl
mov
fmuls
pop
inc
sbb
fs
jne
adc
stos
out
out
ret
test
hlt
movsl
repnz
fwait
cld
andb
xor
push
cs
pop
cmp
addr16
fldl
xlat
popf
lods
idivl
pop
insl
aaa
jge
or
ja
addr16
fldl
xlat
popf
lods
idivl
subb
cmc
and
lahf
movsb
add
in
mov
jns
je
sbb
xchg
mov
inc
pop
push
jbe
loope
dec
push
movsb
pop
out
movsb
dec
push
inc
inc
mov
in
insl
sahf
lahf
mov
bound
dec
sbb
mov
pop
es
lods
repz
sbb
pop
add
mov
mov
std
mov
fs
imul
xor
xlat
cmpb
push
dec
movsb
dec
or
and
mov
pop
add
and
or
repz
ljmp
pop
lfs
mov
divb
xchg
cmp
lds
jg
xchg
pop
lret
push
mov
lcall
cmc
icebp
jmp
or
ja
daa
or
xchg
dec
cs
mov
dec
add
jb
scas
push
mov
mov
lea
std
adc
scas
mov
hlt
push
mov
ret
wbinvd
in
or
adc
dec
negl
mov
test
mov
scas
ss
cmp
or
mov
or
iret
sarl
test
push
fistl
mov
in
outsb
push
in
jle
imul
inc
rcl
gs
sbb
jb
icebp
addl
lahf
sbb
test
mov
std
mov
js
shr
fwait
mov
enter
fs
mov
cmp
inc
sub
push
lods
rorb
jne
or
pop
mov
and
jge
loopne
das
scas
test
jo
push
and
aaa
pop
jns
mov
mov
jecxz
scas
sbb
push
lods
push
inc
sbb
lds
stc
mov
cmp
pop
push
sti
mov
fnstsw
popf
push
mov
and
mov
std
and
pop
in
push
test
cwtl
int3
vminsd
in
fwait
xchg
emms
repz
push
inc
push
jmp
mul
mov
adc
or
pop
dec
push
push
xchg
sahf
add
xor
stc
add
jp
rolb
or
xchg
jg
jnp
and
mov
inc
push
add
lea
mov
fidivrl
pop
cmp
jp
stos
push
clc
stos
fstpl
sbb
pusha
fs
xchg
cmpsb
push
aaa
pusha
mov
cmpsl
adc
mov
mov
xchg
das
mov
ss
mov
out
sbb
repz
jnp
sbb
push
sahf
imul
add
shll
ss
push
pop
lahf
jmp
push
rcrb
and
sub
xchg
out
rcrb
or
jne
dec
les
cld
stos
movl
or
and
data16
pop
cmp
inc
mov
sbb
ja
xchg
jecxz
in
cmp
leave
sbb
or
jmp
inc
out
xchg
rol
sub
in
test
add
loop
xchg
adc
add
push
movsb
loopne
nop
mov
jbe
jnp
sbb
addb
stos
dec
outsb
push
cmpsb
mov
inc
stos
je
out
mov
lret
andb
add
outsl
mov
gs
les
lods
adc
mov
out
stc
loope
gs
std
pushf
push
stos
mov
test
adc
addr16
xchg
sti
push
mov
dec
mov
outsb
dec
out
sbb
fnstcw
mov
sub
mov
clc
xchg
push
cmpsb
mov
leave
sbb
mov
shrb
xchg
cmc
pop
sub
jge
lea
in
jno
repz
call
mov
subb
daa
cmp
stc
mov
je
ja
push
mov
int
pushf
mov
mov
shll
test
cmp
push
fsubl
sub
push
scas
inc
imul
inc
pop
pop
fwait
sbb
and
loope
popa
pop
add
hlt
mov
fldl
inc
mov
push
addr16
jge
inc
cli
leave
cmp
jecxz
fneni(8087
mov
lods
loope
inc
inc
outsl
add
clc
jne
mov
mov
pop
mov
jle
cmp
icebp
out
mov
pop
fstpt
mov
mov
ja
mov
push
adc
or
lods
mov
fcom
js
pop
inc
data16
int
xchg
mov
mov
inc
add
pop
pusha
dec
dec
adc
out
loop
or
jg
pusha
jb
sub
or
in
arpl
jmp
mov
pop
sbb
push
sub
inc
inc
int
xor
insb
mov
cmp
popf
popf
lods
fsubr
fdivrs
mov
mov
jg
mov
pop
pop
sbb
insb
pop
mov
ja
leave
mov
add
popf
sub
sub
jmp
test
mov
sbb
enter
fwait
dec
xchg
xchg
inc
sbb
in
frstor
xchg
fsts
arpl
jo
call
fistl
add
push
add
xor
inc
icebp
movsb
cmp
arpl
shr
sub
dec
push
sarb
sub
and
fcmovu
push
mov
jg
test
push
icebp
mov
cmc
cmp
jne
test
scas
jle
outsb
scas
add
cmp
cld
cs
icebp
pop
sarl
adcl
scas
cwtl
clc
mov
mov
popf
lods
cmp
xorb
dec
sub
cmp
frstor
jno
mov
and
into
pcmpgtd
jo
ss
sub
add
pop
fmulp
push
sbb
mov
mov
jp
in
lahf
andl
cmpsb
jbe
bound
cltd
aad
mov
addb
mov
dec
rcr
aas
hlt
and
mov
inc
adc
cli
addb
loope
pop
shll
in
inc
push
push
xor
xor
jo
and
fiadds
or
pop
std
fistl
sbb
je
insl
and
scas
push
es
adc
popl
loope
lea
add
xlat
in
ret
jmp
les
imul
mov
push
push
loopne
xchg
fdivs
adc
outsb
add
jmp
sbb
mov
mov
repz
insb
xor
int
cld
xor
mov
push
in
roll
mov
or
hlt
and
push
cmp
int
push
ljmp
std
jno
push
jnp
add
shrl
sbb
cmp
frstor
das
and
aaa
or
mov
push
xor
push
pushf
sbb
push
pop
mov
mov
sbb
cmp
mov
int
lods
inc
xchg
bnd
push
fistpl
in
jge
xchg
test
xor
scas
aas
bound
leave
mov
adc
mov
add
sarl
and
and
icebp
stos
push
aad
cmp
pop
bswap
bound
mov
sar
cmc
and
orl
pushf
or
lcall
cmpsl
cmp
aas
adc
mov
out
jb
call
inc
pop
ds
xor
in
dec
vpaddw
or
test
xor
jbe
and
out
lods
test
mov
cmp
add
mov
dec
and
dec
cld
xchg
icebp
cld
jns
scas
mov
shll
mov
roll
mov
js
es
je
xchg
icebp
sbb
ds
in
xor
mov
dec
inc
arpl
xor
adcb
mov
jo
xor
and
imul
punpckhbw
push
push
lods
or
adc
push
mov
add
cmpsb
aam
movsl
ljmp
mov
pushf
adc
popf
pushl
lcall
shl
sub
out
into
lcallw
or
jl
mov
mov
xchg
mov
lret
mov
xor
pop
and
in
jb
cmp
pop
adc
pop
shl
inc
cmc
dec
cmp
out
call
cs
fsubrl
outsl
cmp
incl
xlat
sub
and
popa
xor
push
lods
mov
jp
push
adc
in
mov
push
mov
imul
pop
out
in
ds
lahf
xchg
xchg
xchg
lret
cmp
cmpsl
dec
lret
mov
pop
fwait
xor
test
mov
pop
xor
mov
sub
xor
sub
pop
inc
push
fmulp
es
adc
push
xchg
loope
or
imul
mov
xor
sub
inc
lcall
mov
out
in
dec
xor
jmp
aam
mov
and
filds
adc
test
les
sub
mov
scas
add
xchg
outsl
js
std
mov
xchg
dec
mov
fmull
dec
repz
stc
dec
cli
add
daa
and
popa
sbb
aad
mov
xor
mov
xor
cmp
fimull
cmp
mov
push
mov
mov
dec
lret
into
loop
negl
popf
mov
add
bound
push
out
movsl
mov
insb
out
in
cmpsb
loopne
jl
push
int3
sub
jne
and
jnp
push
push
jbe
mov
cmc
fisubl
test
jns
dec
jge
loop
popf
gs
push
aas
push
add
mov
cmp
push
push
mov
or
mov
pop
mov
or
loop
inc
xchg
adc
ja
cmp
lods
cld
pop
rep
imul
add
jecxz
sub
jne
pop
cmp
adc
idiv
out
or
sahf
and
push
add
inc
sbb
jne
mov
mov
sbb
jecxz
ud1
dec
inc
push
divb
mov
lds
out
mov
andb
cmovge
inc
and
inc
call
test
mov
jp
popf
mov
xchg
dec
mov
in
insb
mov
inc
test
and
and
dec
sub
ds
test
lds
mov
aam
js
cs
cmc
cmpsb
sahf
fildll
or
cli
cmpl
movsb
dec
mov
pop
and
xor
and
imul
mov
and
and
sub
mov
cmc
sub
xor
cmp
jmp
sub
and
outsl
clc
lods
addr16
and
imull
push
adc
mov
push
test
cmovp
sbb
ss
jmp
xchg
int3
cli
pop
pushf
loop
mov
roll
cmpsl
mov
daa
xchg
arpl
cli
loope
dec
dec
and
aad
int
maxps
daa
das
out
pop
enter
push
rol
outsl
add
sbb
pop
dec
sub
jb
ds
adc
les
test
cmp
mov
push
mov
fs
mov
sbbl
pop
mov
btc
xchg
inc
fwait
lea
incl
mov
xor
imull
xor
or
sub
jp
xor
dec
loop
jbe
in
pop
int
xor
sahf
jo
sub
mov
aad
xlat
gs
lock
into
jge
mov
xlat
jmp
popa
xor
shlb
sbb
push
nop
mov
jecxz
jmp
dec
ljmp
pop
cld
fimuls
add
push
xchg
std
rcr
mov
jo
jmp
sbbb
mov
in
pushfw
mov
lret
mov
rolb
adc
dec
mov
inc
inc
mov
inc
xchg
cmpsl
add
ja
and
mov
mov
mov
mov
pop
xchg
and
mov
cli
out
adc
insl
cmp
dec
cmp
ret
fwait
repnz
aas
icebp
inc
cmp
mov
imul
xor
inc
repnz
jecxz
fbstp
push
mov
mov
fnstenv
pop
rorb
lahf
adc
jp
enter
push
pop
imul
fidivl
nop
mov
clc
cmp
pop
movsl
push
mov
xchg
inc
inc
inc
dec
in
pop
sbb
aas
push
xor
ret
xor
movsb
jbe
dec
dec
enter
test
push
ja
lods
cld
mov
mov
negl
mov
arpl
mov
js
into
iret
add
push
cmpsb
push
hlt
dec
dec
stos
jecxz
xor
pusha
cli
cmp
cmpsb
mov
cs
dec
xchg
mov
lcall
mov
movsb
sahf
push
push
lret
xchg
or
rorb
jecxz
push
leave
subl
jb
pop
mov
shrl
scas
mov
pop
fists
mov
mov
fsubrp
out
shrb
dec
lods
js
mov
filds
or
pop
bound
dec
aam
cmp
jns
mov
add
mov
in
in
ret
sbb
cmp
push
or
adc
icebp
pop
cmp
sarl
mov
inc
adc
and
and
fisttpl
out
pushf
cmpsb
mov
out
xchg
mov
sbb
mov
out
inc
pop
stos
call
xlat
test
or
cmp
cwtl
out
fisubrl
xchg
fstpt
loope
or
sbb
in
test
inc
inc
das
pop
scas
mov
inc
or
cwtl
loope
push
sbb
cmc
leave
out
add
pop
mov
ret
pop
dec
or
and
push
and
mov
push
mov
xchg
push
sbb
in
scas
dec
hlt
popl
jg
jae
pop
arpl
cmp
push
insb
adcl
mov
cmpsl
inc
hlt
fstl
dec
sti
stos
push
pop
mov
mov
and
jg
jg
mov
lea
push
add
pop
lods
stos
xchg
loope
pop
cld
lods
mov
mov
aam
sahf
aam
and
cli
xchg
pop
lods
insl
add
das
inc
in
test
into
cmc
adc
ss
or
lods
or
nop
call
popf
jecxz
lock
mov
pop
imull
pushf
mov
inc
push
jmp
cmp
iret
inc
pushf
and
mov
stc
ficoml
cmpsb
in
mov
mov
mov
mov
mov
test
pop
cli
sub
xchg
setle
out
jnp
es
mov
bound
in
out
jg
or
cs
xor
icebp
or
lock
push
mov
cmp
pop
mov
xorb
xchg
xor
sub
push
inc
popf
jmp
stc
movsl
ja
ret
push
out
mov
dec
sbb
pop
stos
add
sub
xor
push
movsl
mov
stos
jp
jg
addr16
add
dec
insl
jp
or
jge
sub
enter
lahf
sbb
andl
gs
sub
mov
pop
aas
icebp
cmpsl
fildl
mov
test
in
dec
daa
imul
xor
hlt
movsb
add
xor
xlat
adc
leave
fsubl
inc
mov
pushf
xchg
fnstsw
mov
mov
and
icebp
add
pop
adc
mov
add
scas
xchg
add
jo
cmp
popf
mov
inc
pop
cmpsb
push
xchg
dec
rolb
pushf
cmc
mov
repz
orb
testb
mov
pop
jg
jo
mov
jno
sbb
cld
cld
es
lret
cmp
arpl
mov
sahf
addr16
sar
out
push
mov
jbe
pop
xor
enter
mov
inc
jne
repz
jno
and
adc
push
or
gs
pop
ds
mov
outsb
push
adc
sbb
push
and
pop
rcrb
out
cltd
imul
inc
dec
jge
in
jns
or
mov
rcrl
inc
out
or
or
jnp
add
ljmp
popa
jae
xchg
mov
movsl
push
test
and
shrl
mov
rcrb
sti
or
mov
jae
sub
sub
pop
mov
insb
or
mov
imul
jmp
leave
mov
pop
xchg
mov
push
jnp
rorb
test
sar
ficomps
pop
xchg
sub
es
xchg
and
lods
lds
pop
mov
xchg
sub
pop
pop
add
xor
pop
mul
addr16
cwtl
in
insl
popf
in
jnp,pt
xchg
mov
in
push
and
js
mov
data16
rcll
aaa
fisubl
xchg
or
push
or
push
mov
lret
fwait
jb
jle
cmpsb
sarl
enter
jmp
mov
jge
xor
or
jbe
ss
test
mov
lcall
cwtl
pop
shlb
dec
and
sub
inc
sub
inc
cmp
or
xor
and
sub
les
push
xor
loope
mov
sub
mov
mov
andb
dec
cmp
mov
add
mov
pop
popa
in
push
and
jle
shrl
nop
mov
pop
pushf
or
leave
out
insb
les
dec
xchg
loope
sbb
movsl
repz
movsb
mov
mov
cmpb
aas
adc
add
or
jnp
or
shll
sar
push
adc
mov
jl
mov
fimull
outsb
pop
sarl
jmp
or
mov
xchg
lods
cltd
mov
mov
sbb
jns
or
fcompl
mov
inc
xlat
test
sbb
pop
rclb
sar
imul
pop
vfrczpd
dec
push
mov
nop
incl
subl
push
lcall
xor
cld
outsl
mov
aad
xchg
cmp
push
test
test
repnz
aad
nop
cwtl
cli
dec
mov
jnp
mov
push
push
or
cld
mov
in
lahf
mov
inc
mov
cmpsb
add
sub
mov
sarl
add
dec
loop
cmp
cmp
mov
test
negl
push
jle
rorb
dec
outsb
sbb
and
cwtl
lods
imul
jnp
inc
and
xor
lahf
loope
shlb
jecxz
sub
sub
xor
fisttpl
loopne
jno
adc
popa
fyl2x
sub
call
jmp
push
out
pop
arpl
outsl
call
push
pop
cmp
popl
cmpb
ret
xlat
mov
mov
pop
push
scas
inc
lds
fisttpl
jg
bound
xchg
inc
cltd
and
pop
ret
movsb
hlt
add
mov
dec
loope
add
jl
adc
fs
nop
xor
sub
pushf
in
mov
sti
lock
and
mov
js
and
jno
out
aam
and
xchg
imul
mov
insb
rcrb
or
mov
push
cmpsl
mov
call
cmp
fdivrl
jp
lock
cli
cs
cltd
sub
stos
das
fidivrl
outsl
pop
xlat
mov
mov
rol
aas
and
cs
add
xchg
push
fcoml
pop
out
mov
push
and
mov
gs
cmp
es
int3
dec
and
sub
cmp
mov
sbb
imul
div
xchg
lods
push
adc
fcmove
pop
scas
dec
loope
lahf
jl
stos
test
ss
or
mov
cli
or
es
fmul
fsts
fiadds
mov
ja
sub
imul
ds
inc
pop
into
or
clc
mov
mov
not
pop
lea
mov
mov
ja
cli
sub
cltd
dec
mov
lods
outsl
cwtl
sbb
test
xor
add
movswl
push
imul
dec
nop
pop
arpl
test
fildll
test
mov
jne
inc
or
dec
mov
xchg
clc
push
and
mov
ja
pop
push
lcall
hlt
stos
add
jmp
mov
fwait
sbb
pop
sub
cmp
int
loope
ffreep
mov
and
push
sub
je
or
mov
fidivrs
mov
push
ds
xlat
andl
mov
arpl
das
xchg
xchg
jbe
ret
jns
out
pop
fldl
sub
lods
add
pop
adc
or
je
lret
xor
lcall
dec
jbe
into
sbb
sbb
fsubrs
mov
xchg
call
or
out
add
pop
stos
lock
addr16
js
and
outsl
xor
push
sbb
sub
and
sbbl
sbb
mov
add
popf
rorl
stos
fisttps
pushf
imul
jbe
cmp
push
enter
rorw
fildll
mov
jno
dec
push
cs
popf
lods
adc
lret
in
inc
jno
iret
mov
cli
mov
mov
mov
mov
mov
adcl
or
pop
mov
mov
mov
xchg
outsl
es
stos
insl
popa
dec
xchg
inc
inc
jle
call
lea
outsb
jp
mov
dec
pop
cmp
pop
pusha
lea
mov
aam
jle
dec
jns
test
aaa
jmp
rolb
xchg
sbb
out
push
outsb
lods
cwtl
aam
leave
add
mov
subl
sbb
iret
push
loope
cmpsl
mov
fdivrs
or
ja
addr16
fldl
xlat
popf
lods
idivl
pop
insl
aaa
jge
or
ja
addr16
fldl
xlat
popf
lods
idivl
pop
or
push
sbb
addr16
fldl
xlat
lods
notb
pop
pop
add
aaa
aaa
pop
daa
or
ja
addr16
and
cli
pop
adc
sbb
add
adc
jp
add
jae
pop
inc
push
jno
iret
ficoml
pop
lcall
add
push
jp
or
push
sub
or
mov
shrl
add
adc
and
push
popa
ret
xorl
xchg
jb
pop
cs
or
push
cs
in
jno
push
test
shr
mov
push
jge
mov
inc
in
add
jnp
cmc
daa
outsb
adc
rorl
sub
aaa
mov
push
cli
aaa
orb
pop
xchg
add
xlat
and
loope
aam
rcrl
in
cmove
xor
or
in
sub
cmp
cli
and
cwtl
das
mov
jne
inc
xchg
jno
mov
outsb
or
or
fstl
xchg
lcall
test
xchg
xor
jno
inc
loop
scas
imul
ret
cli
movsb
xadd
in
add
push
push
xor
inc
pop
push
sub
jno
orl
ljmp
cwtl
cmp
adc
fs
cmp
daa
pop
and
mov
xor
ficomps
shlb
mov
arpl
dec
adc
repnz
aam
scas
call
fbstp
imul
outsl
sbb
popa
cmp
sbb
mov
rcrl
dec
add
push
jp
or
push
sub
jno
sbb
mov
rcrl
dec
add
repz
xor
pop
xor
loope
aam
pop
or
pop
or
loope
dec
lods
jbe
shr
push
xchg
push
cmp
bound
jno
jmp
sbb
clc
fcomp
add
aam
mov
sub
jae,pt
cmpsl
aam
adc
popa
in
push
sub
sti
push
add
inc
shlb
incl
add
xchg
jae
notl
adc
mov
or
lods
test
push
insl
mov
push
add
jl
jo
cld
mov
fwait
or
imul
sbb
sarb
pop
or
push
mov
mov
movsl
test
push
cld
push
jns
scas
outsl
sahf
mov
xchg
out
lret
icebp
neg
cmpsl
std
lea
daa
test
xor
in
mov
fcom
daa
popf
or
sub
pop
in
push
arpl
mov
push
roll
and
and
imul
outsl
sahf
mov
cmpsl
es
loopne
jbe
cwtl
clc
je
ja
and
in
cmpsl
dec
dec
out
out
cmp
cmpb
es
inc
inc
dec
aaa
push
lret
cmp
and
fisttps
xchg
lret
gs
mov
mov
mov
adc
sbb
shlb
fnstcw
lds
movsl
jmp
push
subb
jmp
and
and
cld
mov
in
sub
push
push
imul
into
xchg
lret
or
ljmp
jge
test
add
push
xchg
out
lods
dec
pop
imul
push
sahf
rcrb
sub
xor
mov
fcmovnbe
cmpsl
scas
inc
jbe
or
cmp
xchg
jp
inc
xlat
fcoml
jnp
xchg
pop
shll
sbb
es
adc
push
mov
push
testl
outsb
jp
imul
fidivrs
loope
or
inc
int3
insl
xchg
mov
mov
push
inc
jb
jmp
sub
enter
pop
or
sbb
xchg
mov
in
icebp
scas
mov
xchg
push
xchg
cmp
pop
push
add
js
jl
jge
lahf
cmp
aam
dec
push
out
out
and
adc
xchg
nop
adc
cmp
xchg
push
test
mov
jg
cli
dec
ret
neg
movsb
dec
data16
or
hlt
and
and
xor
fnstsw
shlb
mov
sub
fs
call
enter
xchg
stos
cmp
mov
mov
popa
fnsetpm(287
xor
mov
mov
push
or
stos
fstp
push
sub
dec
fisttpl
cltd
push
iret
mov
mov
cmp
mov
mov
ljmp
popf
mov
int
pushf
ficompl
mov
out
cwtl
rolb
pop
dec
mov
adc
and
mov
aam
xchg
jg
pop
mov
mov
xchg
xchg
ret
jle
mov
in
mov
jno
cmc
test
cmp
xchg
xor
sti
std
popf
or
sub
jnp
sbb
in
icebp
arpl
fldl
inc
jae
int
mov
dec
aaa
mov
dec
or
rcll
andl
js
insb
push
add
repnz
add
ss
ret
cmp
imul
popf
or
add
sbb
sbb
xor
sub
ljmp
bound
jmp
lret
mov
add
int
hlt
pop
dec
cmpb
sbb
inc
ffree
clc
and
enter
fiadds
push
repz
ds
jg
xor
push
cmc
cs
pop
pop
outsb
jge
inc
push
and
pop
test
cmp
add
out
nop
mov
mov
xlat
xor
cmp
aam
lret
rclb
arpl
test
rcrb
out
push
pop
dec
push
or
adc
cwtl
mov
sbb
sub
fwait
xchg
cmp
ret
pop
pop
mov
pop
mov
cmpsb
adc
add
jnp
xchg
pop
pop
je
test
lods
mov
pop
add
adc
loope
outsb
mov
inc
cmpsl
std
pop
int
rol
pop
filds
fidivrs
negl
mov
divl
les
insl
inc
cmp
in
in
stos
addr16
enter
lods
aad
loope
outsb
push
sti
addr16
push
pop
adc
and
inc
pop
dec
popa
push
out
out
mov
mov
add
fstl
loop
outsl
push
clc
addr16
repnz
bound
aad
sbb
pop
pop
jg
pop
inc
iret
test
mov
xlat
mov
pop
aaa
pop
loope
call
int
push
mov
es
leave
sub
cmp
sbb
insb
repz
inc
pop
mov
jg
enter
shlb
ss
notl
cld
data16
push
pop
jb
aad
xlat
add
or
or
jns
jo
push
jmp
rcr
lea
inc
stos
sub
mov
mov
in
decl
add
or
xor
inc
bound
sti
pop
setb
test
inc
hlt
push
iret
mov
jge
hlt
test
jp
pop
cli
lock
mov
lea
aas
adc
shl
mov
push
mov
cmp
push
push
add
outsl
mov
dec
push
mov
mov
inc
cmp
shlb
mov
jo
test
in
das
inc
cmp
and
nop
lock
dec
jp
dec
mov
sarl
and
aam
inc
inc
cmp
lret
push
aad
in
sarb
pop
test
test
adc
mov
lret
xor
jmp
adc
xchg
enter
add
fstl
fsubp
lcall
add
stos
mov
push
sub
or
lahf
iret
andb
xor
imul
lahf
adc
das
push
adc
mov
xlat
mov
clc
push
stos
mov
js
xchg
sbb
mov
gs
xor
xor
test
or
cmp
cmp
mov
pop
inc
icebp
repz
popa
stos
and
movsb
enter
int
sub
sarb
adc
je
lods
pushw
mov
in
cmp
test
adc
and
nop
add
or
addr16
cmc
movsl
jns
sub
stc
fsubrp
cmp
push
icebp
mov
enter
sbb
outsb
sub
jbe
cmp
dec
test
es
xor
out
jb
or
fildll
mov
cltd
aaa
loope
pop
sbb
mov
orl
cmp
mov
popl
pusha
sbb
adc
je
xchg
jne
les
mov
xchg
data16
fwait
out
movsb
sarb
sahf
sbb
add
aam
imul
icebp
xlat
add
lret
dec
mov
stos
or
lahf
pop
ljmp
dec
stc
or
gs
mov
add
sbb
jbe
inc
dec
mov
sbb
dec
push
enter
jl
aas
mov
data16
adc
test
loopne
adc
push
fidivl
dec
insl
pop
stos
repnz
xlat
sbb
jbe
xchg
sbb
pop
out
sarl
call
mov
mov
out
xchg
ja,pt
mov
pop
test
xchg
in
arpl
aad
mov
pusha
aaa
lret
jge
adc
push
mov
fists
push
sbb
cld
movsl
pop
mov
add
popa
lcall
into
adc
and
cmc
outsb
cmp
movsl
mov
mov
sbb
add
es
mov
popf
jnp
lahf
cwtl
jb
add
mov
and
adc
mov
in
std
xor
mov
shrl
mov
cmp
lock
in
sbb
mov
or
dec
mov
and
dec
jnp
stc
scas
outsl
dec
push
xchg
mov
nop
repz
in
inc
sbb
mov
add
add
pop
lods
xor
xor
insl
shrb
js
and
lret
cltd
adc
pop
mov
mov
loop
or
pop
rclb
fstl
sbb
adc
pop
jns
mov
mov
lret
cmp
pop
aam
and
mov
pushl
into
aas
push
call
cmp
cmc
mov
pop
aaa
sub
sbb
push
mov
arpl
push
xchg
cmp
adc
in
loope
aad
ljmp
dec
mov
xchg
or
lahf
lret
pop
movsb
sbb
sarl
push
pop
push
pop
xchg
add
cmp
dec
mov
or
cmpsb
lods
mov
xor
jp
add
movsb
jle
aad
mov
sbb
test
dec
cmp
test
and
in
inc
dec
mov
fistps
arpl
adc
out
push
add
mov
arpl
dec
mov
dec
mov
jne
pusha
xchg
sti
pop
jecxz
inc
or
push
lods
cmovg
sub
adc
cmp
sahf
enter
repz
leave
jbe
inc
lahf
add
and
cs
or
push
sub
adc
pushf
add
adc
dec
push
daa
mov
outsl
xor
cli
dec
sbb
shrl
insb
add
fs
sarl
popf
iret
ficompl
out
xlat
sbbl
or
nop
adc
inc
push
and
lcall
sbb
ror
jl
cltd
std
arpl
dec
scas
add
test
inc
pop
jge
jo
dec
fcmovnu
iret
pop
sub
or
mov
rolb
dec
cmp
rclb
add
movsb
and
mov
mov
dec
call
out
mov
inc
lds
push
hlt
test
inc
mov
adc
xchg
push
inc
and
lods
xchg
push
lret
loop
push
and
rclb
int
lods
int3
and
cli
imul
adc
fs
cmpsl
xorl
adc
add
fmull
addr16
dec
aaa
pop
xchg
or
jno
mov
rcll
push
lods
mov
push
sub
dec
push
std
outsl
dec
gs
pop
adc
and
fcmove
xor
hlt
xchg
mov
mov
pusha
mov
jae
arpl
dec
scas
sub
jecxz
pop
loope
mov
loopne
aam
ja
adc
gs
ljmp
dec
fidivrl
jmp
ljmp
jno
inc
sbb
loopne
icebp
sbb
add
repnz
xchg
mov
pusha
lock
sbb
pop
xor
mov
pop
lock
cli
mov
push
idivb
jmp
int3
push
add
push
and
push
xchg
aam
sbb
mov
fldenv
stos
int3
aaa
xchg
or
inc
adc
in
cwtl
fsubl
mov
lret
stc
popa
sub
scas
pushf
xor
inc
shlb
popf
pop
in
xorb
into
out
push
fildll
push
sarl
int3
push
sub
cmp
lcall
jp
inc
rorb
adc
sbb
lds
in
or
in
jnp
pop
movsl
lea
lcall
jo
push
cmpsb
int3
mov
pop
dec
sub
xlat
mov
es
sub
lods
lahf
aad
leave
scas
cwtl
pop
jg
scas
mov
xchg
cmovbe
mov
pusha
mov
push
cltd
dec
xchg
mov
adc
shl
jnp
or
outsl
push
andb
pushf
cmp
ljmp
mov
loope
sarb
pop
mov
adc
add
add
das
hlt
or
loopne,pt
adc
loopnew
pop
in
xchg
mov
mov
jl
dec
sbbl
loop
push
aam
inc
lea
inc
jb
shrb
add
and
xchg
lds
push
xchg
mov
sarb
cmp
pusha
insl
enter
aaa
mov
sbb
sbb
pop
pusha
xchg
push
mov
out
loopne
and
lods
les
cmc
jno
mov
addb
outsl
ret
aas
adc
push
jns
fdivs
fwait
sti
std
dec
mov
and
push
push
in
mov
mov
sbb
cli
ljmp
inc
xor
pop
int
push
aas
and
ret
icebp
aam
mov
cmp
add
inc
mov
inc
mov
mov
popf
sar
data16
mov
cmpsl
or
sbb
xchg
gs
ds
pop
adc
in
int
test
loope
insl
xor
test
fidivl
jnp
or
mov
jno
xor
iret
cmpsl
stos
out
call
and
xchg
mov
fldcw
dec
add
adc
xor
sub
xorb
notb
mov
dec
mov
mov
adc
in
std
cmp
scas
das
test
pop
lock
je
inc
cmp
pop
sub
push
insb
orb
stc
push
mov
test
push
push
scas
jne
xchg
mov
mov
and
outsl
inc
mov
or
outsb
dec
pop
std
sub
cwtl
into
mov
jmp
inc
enter
stos
nop
pop
pop
cmp
aaa
ror
adc
stos
mov
in
fs
imul
dec
sub
inc
enter
imul
imul
sub
dec
movsl
fidivrl
lret
icebp
jmp
push
dec
test
jg
addb
in
hlt
and
leave
enter
incb
and
loopne
aaa
xor
pusha
lahf
mov
insl
or
lahf
push
xorb
mov
roll
negl
inc
gs
jb
outsl
or
lods
aad
ficoms
addr16
pop
stc
mov
xlat
aad
cli
adc
ss
adc
ss
rcll
dec
iret
fidivs
popa
dec
in
rolb
rcll
fcomi
mov
div
sub
adc
push
test
sar
cmc
cmc
push
rorb
in
add
popf
lcall
jmp
out
jmp
cmc
jae
and
es
pop
stos
neg
push
jae
or
or
dec
aas
adc
test
cmp
mov
loop
insb
push
push
push
popf
dec
loop
mov
mov
sbb
test
push
roll
mov
outsb
jge
pusha
stc
aam
cmp
enter
xchg
push
inc
lods
scas
push
add
mov
cmp
add
sti
in
jbe
dec
add
add
stc
push
pusha
hlt
lret
mov
jae
iret
push
int3
pop
popf
mov
adc
leave
outsb
repnz
inc
push
mov
aam
cmp
in
insb
popa
fidivrs
in
je
add
add
shlb
pop
xchg
sub
mov
shrb
pusha
aam
cmc
jno
or
daa
pop
push
lods
notb
mov
loopne
movsb
mov
js
sarl
fwait
lret
push
ja
sti
mov
or
mov
inc
lea
push
ret
jg
imul
cld
jnp
jae
mov
pop
and
push
push
pop
insb
sbb
pop
loope
sbb
fidivrs
sahf
rcrb
cwtl
repz
stos
cmp
pusha
mov
mov
xor
sbb
mov
outsl
mov
cmp
push
mov
lods
stos
inc
in
out
sub
cmp
test
imull
ret
push
std
lret
fiaddl
or
mov
cltd
enter
jl
push
xchg
lret
lock
and
adc
sub
outsl
dec
push
jnp
and
stc
bound
cmc
fs
cmp
cltd
sbb
clc
jmp
in
push
push
xor
or
mov
lret
aad
sahf
jae
daa
sub
ret
xchg
mov
scas
and
pop
or
jmp
push
and
xlat
pop
fwait
and
sbb
call
xchg
and
push
xchg
cld
icebp
ljmp
add
mov
jno
lcall
call
dec
inc
and
adc
cwtl
cli
jne
fistpll
mov
stos
je
leave
mov
movsb
push
cmp
aad
addr16
ljmp
loope
xor
lahf
jmp
xchg
xchg
out
cmp
mov
aas
pop
stc
cli
pop
cwtl
shl
adc
loopne
data16
sub
cmp
jno
adc
std
mov
xchg
ljmp
jo
jp
pop
pop
adc
xchg
lods
sbb
push
inc
mov
mov
jne
and
adc
aad
sahf
xlat
subb
mov
pusha
or
add
cmp
fsubrl
xchg
call
lret
sbb
stos
rcrl
jae
mov
jnp
rorl
mov
mov
push
cmp
testl
imul
enter
mov
daa
in
mov
stos
xchg
stos
adc
clc
xchg
movl
adc
imul
cmp
mov
push
inc
mov
jbe
shl
icebp
popa
lods
cmp
inc
std
add
mov
enter
push
aaa
sbb
scas
addr16
fsubrl
cwtl
repnz
mov
std
jp
or
push
in
imul
aaa
rorl
scas
xor
mov
mov
xor
lock
xchg
add
dec
imul
int3
cmpsl
ja
dec
inc
loope
inc
add
in
imul
arpl
push
xor
mov
cmpsl
jmp
xchg
sub
xchg
dec
pop
sbb
arpl
addr16
sub
xor
test
ss
sbb
ret
ljmp
movl
popf
sub
mov
icebp
stos
jns
dec
iret
repz
push
sbb
lods
dec
mov
pop
xor
or
mov
outsb
insb
sbb
jg
cmp
movsl
es
or
daa
mov
jb
test
fsts
xlat
pop
fs
cmp
mov
mov
test
inc
mov
je
xchg
pop
js
xchg
pop
push
dec
jp
xor
mov
cmp
dec
cmp
or
cwtl
lahf
add
aaa
movsl
push
sbb
mov
sti
leave
les
mov
xchg
add
mov
push
jmp
enter
lea
dec
in
and
pop
rorl
shll
inc
vpshufhw
stos
or
push
leave
mov
inc
mov
int3
mov
shl
mov
mov
cmp
sub
mov
cmp
and
mov
sbb
jmp
shrl
cmp
nop
push
pop
xor
ss
mov
call
jmp
push
lods
mov
dec
pop
adc
pop
mov
insb
adc
xchg
sbb
bound
sbb
mov
pop
roll
cmp
int3
dec
ds
je
ljmp
and
mov
xchg
or
lods
jne
pusha
std
lods
mov
js
push
or
in
movsl
xchg
jge
ja
stc
pushf
mov
xchg
sbb
mov
push
sbb
stos
mov
shl
add
packuswb
ljmp
adc
mov
out
out
std
mov
dec
mov
add
jnp
lret
mov
push
mov
mov
fwait
dec
cmpsb
std
pop
pop
add
mov
jmp
rorl
and
movsl
sbbb
in
gs
add
dec
push
pop
lahf
sub
daa
idivl
add
jge
pusha
mov
mov
fwait
mov
out
jo
fldcw
adc
pop
adc
inc
or
ljmp
cmc
int3
out
xchg
pop
lahf
fstp
cmp
adc
dec
jp
xchg
cmpsb
jmp
inc
mov
or
fisubl
inc
xchg
cmp
shrb
stos
cmp
mov
or
xlat
push
roll
and
mov
sbb
lds
sbb
and
fldl
repz
sub
dec
aam
xor
movsl
sub
xor
dec
push
adc
in
jmp
in
sbb
or
add
jo
aam
sub
std
je
dec
lret
add
in
movsl
js
adc
mov
mov
cmpsb
cmc
dec
lods
push
fdiv
bound
daa
lahf
call
adc
pop
loopne
aaa
mov
cmpsl
push
cmpsb
in
dec
scas
sarb
stos
xchg
jns
adc
mov
xlat
xchg
or
lcall
sbb
sti
nop
aaa
xchg
popa
mov
xchg
pop
dec
test
and
pop
xchg
jnp
sbb
test
pop
sbb
jmp
xlat
or
mov
mov
pop
jae
dec
pusha
push
aad
fstpt
ja
xchg
sub
xchg
cmpsl
mov
or
scas
xchg
pushf
dec
pushf
insb
inc
daa
push
pusha
lcall
lret
stos
or
outsb
mov
aas
adc
xchg
loopne
or
add
js
fidivl
popa
ret
and
aas
scas
mov
fidivs
in
in
jge
jo
cwtl
icebp
mov
adc
das
mov
stos
mov
in
ljmp
loop
sub
lods
dec
pop
int
frstor
inc
movsb
pushf
sub
in
mov
push
xor
fsubrp
adc
cmp
jmp
gs
test
xchg
jmp
mov
mov
mov
stos
lock
xchg
loop
adcl
add
sub
das
mov
ficoms
ds
in
insl
add
mov
scas
jmp
repnz
mov
mov
lahf
jne
je
outsl
sub
les
and
ljmp
inc
sbb
popa
cmp
sbb
mov
rcrl
dec
add
push
jp
or
push
sub
jno
sbb
mov
rcrl
dec
add
jp
jp
or
push
sub
jno
sbb
mov
roll
push
add
loop
push
xor
inc
or
popa
mov
cmp
cli
std
dec
adc
push
push
inc
push
ja
addr16
push
mov
push
mov
testl
xor
pusha
xchg
andb
mov
daa
rclb
loopne
lock
xor
cmpsl
push
xchg
and
nop
push
mov
daa
rclb
loopne
lock
xor
adc
jo
addb
push
iret
sub
incb
lods
xor
push
xchg
sahf
sub
pop
jne
mov
xchg
fcmovnb
push
in
adc
mov
das
jmp
call
cmp
shlb
and
fsubrs
push
push
xor
mov
mov
mov
xlat
loopne
int
inc
ficoml
ja
adc
insb
inc
mov
shll
xchg
outsl
pop
sub
lods
pusha
dec
sub
scas
adc
mov
mov
outsl
mov
mov
lds
mov
push
fistpll
lods
lahf
xchg
mov
cwtl
outsl
xchg
int3
dec
cmc
mov
pop
lcall
adc
xor
xor
push
sub
mov
mov
daa
rclb
loopne
lock
xor
pusha
xchg
ss
adc
aaa
lods
push
shlb
add
xlat
dec
mov
and
xor
addb
xor
bound
js
gs
pop
mov
leave
cmp
add
addr16
cmp
sub
jnp
daa
rclb
loopne
lock
xor
pusha
xchg
andb
mov
daa
rclb
loopne
lock
xor
pusha
xchg
addb
adc
leave
or
insb
cld
sahf
lock
dec
aam
cmc
xor
mov
add
push
pop
jb
cli
cmp
cmp
das
int
mov
rclb
dec
mov
mov
mov
add
mov
js
movsl
pop
negl
and
cmp
push
aas
int
sbb
adc
loope
call
fsub
cmpb
in
stos
sub
dec
mov
fdivs
jge
insl
xchg
cmpsl
fimull
mov
adc
loope
sarl
inc
arpl
hlt
insl
add
js
stos
mov
sub
jle
inc
pop
aam
jns
cmpsb
mov
pop
cltd
mov
mov
and
mov
mov
pop
sbb
mov
and
adc
in
cltd
subl
add
mov
sub
faddl
cmp
adc
insl
pushf
shlb
clc
in
and
out
mov
inc
xor
into
jmp
sahf
pop
sub
roll
pop
push
dec
nop
addr16
sbb
test
xchg
xlat
arpl
mov
push
xchg
mov
push
fwait
outsb
lahf
push
sub
addl
pop
cmc
scas
jp
jb
and
mov
dec
rorb
cmpsb
lock
clc
pop
imul
outsb
cmpsb
sbb
movsb
jbe
lahf
cmp
shrl
push
pop
ret
inc
test
test
jne
loopne
xor
lods
fistps
inc
xor
inc
jno
jmp
and
push
dec
mov
add
fsubl
leave
cmp
shll
in
popf
jmp
lods
pop
test
lea
imul
leave
mov
cmpsb
cmp
jle
inc
js
repz
dec
clc
fldenv
lret
fmull
adc
or
cmp
mov
clc
jns
je
insl
rol
dec
mov
dec
shrl
xlat
in
shrb
sub
inc
fcompl
mov
jbe
loop
fwait
sbb
mov
pop
imul
and
or
sbb
mov
lods
arpl
lock
hlt
xchg
jge
jle
and
in
and
loope
jnp
fildll
jge
or
adc
out
fnstenv
adc
xchg
in
push
jno
mov
rorb
cs
mov
pop
cmp
iret
xchg
ds
ja
int3
mov
xchg
mov
daa
xchg
mov
repnz
int
inc
mov
jecxz
xchg
loopew
mov
and
push
hlt
mov
mov
push
xchg
xor
pop
xchg
pop
pop
je
pop
in
pop
aam
lods
jle
push
jge
mov
push
jp
pushf
xchg
in
out
orl
sbb
lahf
jp
cmp
hlt
fsubl
sahf
mov
push
aam
int
adc
add
test
dec
xchg
mov
add
add
in
push
icebp
movsb
cmp
popf
clc
ds
mov
cmp
add
add
add
sub
sbb
inc
dec
out
testb
js
pop
ja
cs
sub
jmp
popf
movsb
call
mov
inc
jg
js
test
fldpi
sub
cmp
fisttpl
pop
sbb
es
daa
lods
insl
lds
fisubs
xor
notb
adc
cld
jecxz
push
jne
data16
rcrl
pushf
push
sbb
pop
lods
sbb
xchg
adc
pushf
ja
jae
stos
loopne
add
fcmovbe
xor
mov
inc
mov
orb
xor
inc
les
popf
sahf
cltd
cmp
aas
fcmovnbe
xchg
and
cmc
xorl
iret
jl
imul
jge
xor
inc
rcrl
inc
mov
cltd
pop
and
lret
popf
out
mov
icebp
or
adc
xor
push
jb
and
inc
xor
out
mov
dec
pop
pop
jp
and
pop
push
iret
ficoml
pop
or
or
xchg
mov
jae
inc
and
out
dec
dec
aam
shrb
sub
stc
xchg
movsb
push
jne
xchg
sub
das
mov
sbb
mov
mov
and
jo
in
mov
mov
and
fistl
pop
add
gs
push
ret
cli
dec
aas
inc
mov
test
adc
mov
jg
mov
push
jne,pt
xor
add
mov
lods
scas
iret
pop
and
xchg
pop
or
dec
mov
lret
stc
pop
loopne
add
movsl
cmpl
pop
shll
mov
cmpsl
cmp
mov
add
fisttps
inc
das
mov
into
pop
lods
fisubl
iret
push
push
adc
mov
scas
xlat
aas
sbb
loope
adc
or
negl
sub
mov
jl
xchg
inc
cltd
inc
in
lret
bound
inc
and
push
test
inc
sub
sub
adc
lahf
fwait
pop
scas
arpl
inc
xor
movsb
rolb
subb
push
je
es
mov
sbb
lret
ud0
ljmp
mov
shr
fs
jl
cmp
ja
add
mov
push
repnz
movsb
mov
andb
test
cmp
push
ja
jecxz
mov
cmp
leave
inc
and
sub
rol
movsl
jmp
pop
cli
jecxz
pop
je
jge
push
popa
roll
mov
sbb
mov
dec
push
jb
lahf
jnp
iret
sub
loope
pusha
xorb
add
mov
sub
pushf
mov
movsl
inc
add
pop
lds
ucomiss
push
push
xor
movsl
pop
imul
in
mov
lds
jns
and
aas
mov
cmp
aad
sbb
test
mov
sarl
jecxz
out
pop
jbe
daa
cmp
fnstsw
pop
push
mov
mov
cmc
mov
cmp
fimuls
xchg
jge
loopne
cmpsb
out
les
pop
scas
sub
mov
sub
icebp
outsl
jo
rcll
int3
adc
sub
xorl
divb
stos
lret
xor
push
je
cmp
insl
sbb
and
les
mov
fldt
mov
es
xchg
ja
push
fcmove
inc
sbb
int3
xchg
lods
xchg
jecxz
jl
mov
xchg
test
aas
adc
jae
xlat
loop
cld
out
xor
stos
ja
add
repz
shll
sub
mov
out
aad
dec
and
cmp
cmp
daa
fidivs
jp
fildl
push
cmp
push
fildll
loopne
aad
enter
inc
jge
add
ret
leave
loope
xchg
lock
pop
adc
mov
sub
jg
lcall
lcall
jmp
mov
mov
hlt
push
lret
out
dec
idivb
xor
cmpsl
add
jbe
and
adc
inc
popa
shrb
jecxz
sub
mov
es
pop
int3
sbb
outsb
in
mov
popa
mov
cmp
das
shll
mov
xor
in
add
pop
fdivrl
shlb
lods
sbb
mov
dec
pop
sbb
add
adc
lahf
jns
aam
mov
xlat
xchg
mov
xchg
insl
adc
and
lret
add
ss
imul
jle
fwait
and
add
jne
or
rclb
xchg
sub
and
ret
dec
sub
in
xor
ret
aaa
inc
cmpsl
adc
int3
jmp
xor
jbe
fistl
ret
sbb
into
adc
sbb
ss
dec
mov
cmpsl
clc
fsubr
push
js
das
push
jge
aaa
stos
jl
push
out
sbb
stos
and
add
cmp
mov
mov
ds
and
push
and
mov
shrl
dec
pop
push
xchg
push
cmp
addr16
daa
xchg
ret
shll
inc
stos
pusha
das
pop
adc
sbb
and
cwtl
jbe
mov
and
xor
mov
mov
xchg
mov
and
mov
adc
test
adc
jl
pop
sbb
addr16
ja
and
xor
dec
faddl
add
adc
popa
inc
outsl
mov
sbb
mov
dec
adc
shll
mov
adc
pop
imul
jno
enter
hlt
sti
pop
dec
cmpsl
jns
ss
repz
aam
inc
push
aad
xchg
pop
test
mul
loope
pop
daa
sarb
push
and
nop
dec
inc
int
bound
sahf
bound
xchg
test
push
cmp
into
xchg
inc
andb
pop
loopne
dec
jae
adc
in
mov
fimuls
jbe
decl
and
ret
push
push
jmp
lods
jno
gs
movsb
in
pop
fists
mov
push
in
sbb
push
jp
dec
popf
lcall
or
cld
pop
mov
inc
fadds
popf
fucomi
pusha
or
cmpsb
add
imul
ret
mov
xor
mov
cmpl
adc
fwait
push
or
shlb
enter
lock
pop
cli
adc
jbe
scas
pushf
insb
rcrl
sbb
sbb
les
xchg
adc
cmpb
in
push
mov
mov
mov
test
dec
sub
xchg
jo
lcall
lret
fcomip
rclb
xchg
mov
mov
icebp
mov
sbb
ss
aas
cltd
or
lahf
and
nop
leave
pop
or
and
jae
mov
push
mov
int
nop
pusha
shrl
mov
lcall
xchg
cli
lds
rcrb
or
and
int
cmp
dec
xor
cli
stc
dec
and
sbb
jns
and
outsb
jbe
mov
or
outsl
sub
pop
sbb
mov
ja
mov
lea
mov
sub
and
mov
mov
out
cmp
test
std
popf
arpl
pop
adc
push
repz
js
inc
adc
xchg
jl
not
lods
sbb
lea
inc
inc
jmp
add
in
scas
dec
sbb
xchg
adc
mov
fs
mov
jnp
ja
inc
pop
loopne
les
adc
adc
es
lea
push
or
and
pop
add
arpl
ret
add
add
pop
xchg
xchg
shr
xchg
or
ret
cli
into
test
cmp
pop
test
dec
enter
sahf
mov
or
scas
int
mov
std
fsubs
insl
inc
divl
or
imul
mov
int3
in
or
adc
int3
in
daa
sahf
jae
xor
jecxz
dec
in
inc
push
or
cwtl
rcl
pop
and
into
add
sbb
sub
jae
xlat
dec
sbb
xchg
loopne
mov
orl
aam
hlt
out
dec
pushf
add
shll
movb
jae
mov
ss
lds
filds
les
dec
lods
negb
gs
xchg
fs
orb
and
adc
lahf
dec
push
push
inc
popa
inc
mov
gs
jg
mov
cmc
andl
ret
push
loope
cmpsl
sub
es
mov
in
pop
xor
cmp
adc
xor
mov
movsb
pop
imul
and
mov
pop
pop
inc
sub
loopne
push
repz
stos
push
das
loopne
sti
push
jnp
mov
push
es
pop
cld
enter
lock
in
jnp
shll
push
jno
sbb
push
push
sub
adc
lret
addr16
dec
hlt
cmp
pop
mov
jns
xchg
inc
testl
push
mov
fnstcw
pop
xor
xchg
mov
push
pop
scas
xchg
test
push
int
xchg
dec
add
bnd
nopl
add
arpl
lret
in
das
les
movsb
popl
mov
js
daa
andb
dec
mov
dec
or
xchg
or
inc
jmp
mov
sub
push
in
sbbb
loope
lds
shl
xchg
aas
lock
jge
sarl
mov
mov
inc
arpl
xchg
sti
dec
pop
inc
mov
hlt
and
mov
dec
imull
or
ficoms
add
or
insb
mov
leave
or
lods
movsb
leave
cmp
xor
mov
cmp
push
add
lcall
mov
inc
cmp
repnz
adc
mov
xchg
dec
sahf
addr16
mov
pop
bound
hlt
fsubs
mov
add
xor
push
mov
sbb
sbbl
sub
mov
pop
xchg
pop
pop
jo
sarl
sbb
and
ret
or
and
test
sub
xlat
outsl
dec
test
push
and
sbb
dec
mov
jecxz
push
aas
lret
and
cmp
mov
andb
or
ret
and
dec
dec
mov
xchg
das
out
test
dec
pop
xor
int
addr16
sarb
xchg
sti
ja
or
notl
inc
fisttpll
loopne
sub
out
pop
and
push
xor
dec
dec
pop
jg
fdivp
cmpsl
lret
inc
repnz
xor
fsubrl
mov
xchg
xchg
test
stos
xor
pop
ret
fdivrs
xor
xor
push
push
xor
push
push
jl
aad
hlt
je
and
hlt
es
fucomi
or
mov
inc
jno
jns
pop
test
test
mov
mov
ja
add
por
lret
jle
scas
daa
sub
and
and
shl
loopne
jl
lds
xchg
mov
jge
cwtl
mov
test
push
lret
push
xchg
out
mov
arpl
mov
test
rorb
jne
fcoml
jns
and
inc
insb
loop
cmpsl
ret
add
mov
data16
sub
leave
into
pop
sub
or
pop
jo
outsb
addl
sbb
mov
and
and
adc
mov
dec
pop
xchg
lahf
sub
xchg
cld
dec
sbb
shl
addb
mov
je
imul
adc
imul
dec
subb
stos
cmp
cmpsl
mov
sub
sbb
or
cmp
ret
lods
xor
add
xor
insb
out
test
adc
push
cwtl
jp
repnz
ret
inc
sbb
jae
fs
imul
lea
jo
ss
cmp
pop
mov
jmp
rorb
jp
add
xchg
jbe
jne
stos
mov
jmp
push
mov
adc
andb
adc
inc
mov
dec
test
mov
xchg
and
repnz
add
cmp
xchg
pop
xchg
jns
sbb
cmp
fstp
popf
gs
fidivrs
pop
add
adc
jne
outsb
ja
mov
mov
ss
inc
test
mov
jbe
test
insb
data16
cmp
and
popl
ret
aaa
xchg
xor
or
push
cmp
or
loope
push
mov
pop
jg
repz
pusha
pop
pop
data16
ljmp
inc
fcomps
pusha
cwtl
mov
mov
xchg
shl
fcomps
push
icebp
mov
pop
inc
push
movsl
daa
inc
sbb
add
pop
fiaddl
jo
jge
popa
xchg
mov
jmp
cmp
lods
cmc
addr16
scas
icebp
xor
mov
rolb
lret
out
xlat
mov
aaa
outsl
imul
pop
push
or
mov
add
rolb
fsubr
mov
fstpl
cli
jge
mov
cs
push
push
ss
int
mov
ret
js
xor
sarl
das
or
rorb
incb
movl
sub
rcrl
repz
cli
xchg
repnz
cwtl
push
mov
adc
fs
lods
mov
xor
cmp
in
cmp
or
out
int3
xor
out
loope
cli
in
int3
xchg
pop
cmpsb
mov
int3
lcall
lds
and
cmp
xchg
push
lahf
or
xchg
test
andb
int3
call
or
pop
mov
ret
inc
or
jb
xchg
push
lret
sbb
stc
mov
test
lret
negb
jno
inc
stos
int
sbb
mov
xchg
lahf
shl
and
popa
dec
arpl
sbb
cltd
into
lods
jl
jo
pop
inc
xchg
jno
test
mov
adc
pop
dec
popf
fs
sbb
int3
imul
jmp
jle
shl
jae
add
jns
std
in
aad
xchg
out
jne
jmp
xor
sbb
fldcw
pop
clc
dec
inc
popf
xor
test
inc
pop
stos
lret
mov
lret
mov
popa
sbb
iret
mov
cld
loop
add
mov
in
pop
cmp
and
fistpll
jecxz
int3
rcrl
fs
pop
add
gs
sahf
subl
mov
push
ljmp
out
mov
shll
jle
jno
jno
imul
pop
cmc
int
movsb
das
mov
mov
popf
sub
cmp
rorl
ficompl
andb
push
sub
sbb
pop
repnz
xchg
cmp
xlat
loop
push
cwtl
jl
imul
div
aaa
shll
inc
les
in
or
jmp
sub
or
jl
das
fidivrs
loope
ja
mov
daa
lock
mov
std
gs
xor
sbb
add
mov
sub
xchg
mov
jb
jg
test
inc
or
setbe
repnz
addr16
decb
pop
popf
inc
add
and
add
in
pusha
cwtl
mov
push
fbld
sub
fistl
lds
fisubrs
lods
mov
bound
inc
mov
scas
nop
sbb
xchg
andb
push
movsl
dec
pushf
lret
inc
sahf
xchg
jle
repz
inc
leave
mov
add
test
aam
dec
int
sbb
add
popf
add
sarl
xor
mov
inc
push
fs
mov
sbb
mov
jmp
loopne
cmpb
inc
jle
rcrl
sub
inc
sub
mov
int
stos
fidivrs
sarl
imul
stos
push
gs
cmp
ret
xchg
adc
aam
jle
mov
mov
lret
es
or
mov
push
fsubrl
sbb
ljmp
sbb
push
lods
and
mov
push
cmp
scas
and
mov
sub
in
cmpsb
dec
mov
pop
outsl
sarb
adc
pop
pop
mov
jb
jp
pop
jns
or
hlt
add
aaa
movsb
push
stos
pusha
movsl
movsl
lahf
inc
push
mov
into
cmp
jae
cmpsl
or
test
pop
call
pop
mov
movsl
sarl
cmp
xchg
outsl
popa
out
jle
loope
cld
push
fstps
cmc
dec
fldenv
out
stos
pop
enter
mov
jp
mov
jmp
sub
or
imul
pop
pop
fsub
cmp
jmp
je
inc
je
push
cmp
stc
or
and
lea
cmpsl
push
fucomp
jg
out
sub
sbb
xchg
int3
scas
jp
jp
and
insb
cmpsl
inc
dec
bnd
mov
push
std
cs
pop
stos
fsubl
push
pop
int3
push
fcompl
daa
add
sbbb
shl
mov
sub
jbe
mov
or
push
push
pop
das
sbb
divl
mov
or
jno
mov
pop
or
push
aaa
mov
xor
or
add
cmp
mov
cmc
push
jno
pop
ja
sti
xor
add
std
ret
mov
add
in
push
jnp
fdivs
jbe
mov
data16
fidivl
push
or
adc
adc
ss
orl
adc
jo
inc
ss
fisubrs
jno
push
mov
push
pop
js
pop
or
or
xchg
dec
push
daa
dec
jle
inc
aas
add
jmp
cmp
ja
bound
test
mov
and
jl
jge
pop
xchg
out
adc
sub
jns
stos
test
clc
inc
jae
test
fistpl
push
in
mov
add
ss
cmpb
negb
or
pop
mov
push
xor
stos
fdivl
lods
inc
jo
pushf
jns
outsl
insb
cmp
xchg
push
or
or
mov
sub
imul
repz
pop
inc
and
dec
inc
adc
insb
inc
mov
jg
fwait
sub
faddl
sub
mov
jb
xchg
cwtl
dec
sub
es
push
mov
jae
ss
pop
stc
sub
hlt
or
aaa
shlb
pop
loopne
lock
xor
pusha
xchg
andb
mov
daa
rclb
loopne
lock
xor
pusha
xchg
and
xlat
and
mov
daa
push
pop
loopne
lock
cmpsl
push
xchg
pusha
xchg
andb
mov
daa
rclb
loopne
lock
movl
lahf
testl
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
xor
adc
and
adc
pusha
shlb
loopne
lock
add
xor
pusha
shlb
and
adc
pusha
shll
inc
lock
add
xor
pusha
shlb
push
mov
shlb
adc
xor
push
je
jno
and
pop
jl
es
xor
cmp
gs
add
test
lret
mov
in
test
lock
push
setl
cwtl
fdivrs
dec
adc
inc
mov
dec
ja
cld
adc
das
push
loopne,pt
into
mov
xor
inc
arpl
aaa
mov
xorl
loopne
sub
jo
sbb
out
nop
xor
and
mov
xchg
dec
movsl
push
int
mov
aas
sti
xchg
cld
cmp
nop
test
xor
cmp
call
in
sub
repz
pusha
push
and
ficoml
and
addl
adc
inc
loopne
lock
shlb
and
adc
pusha
shlb
inc
lock
gs
arpl
jbe
and
movsl
hlt
mov
shrl
jle
or
xorb
xorb
test
fisubs
negl
mov
aaa
lgs
mov
adc
data16
push
in
mov
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
xor
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
dec
inc
nop
and
out
scas
xor
inc
hlt
lahf
pop
fstl
dec
loope
fdivl
cli
out
mov
and
add
xchg
rclb
roll
repz
adc
lea
fwait
pop
pop
or
push
pop
rcl
xchg
or
cwtl
cwtl
xchg
xor
sub
jmp
stos
xor
lcall
and
in
inc
fwait
push
sbb
or
popf
mov
add
adc
fwait
sbbl
jge
ljmp
ret
popf
push
test
sbb
mov
test
adc
ja
das
xor
ja
or
icebp
mov
cli
fsub
and
mov
push
clc
push
jno
lea
sub
popa
inc
lret
mov
cmp
clc
push
popf
fxch
mov
pushf
mov
fisubrs
inc
fisubrs
mov
inc
pop
rcl
in
sarl
cmp
xchg
xor
adc
add
fs
rcrl
ret
sub
test
fildll
pop
in
out
movsb
lods
jno
fcompl
scas
mov
xor
jbe
insb
pop
in
add
aas
sti
inc
pop
aaa
mov
and
loop
sub
and
iret
orl
xchg
jge
add
mov
ljmp
lcall
adc
out
dec
sbb
adc
inc
mov
mov
xchg
xor
inc
nop
fdiv
ror
xchg
cli
inc
inc
in
movsb
movsb
dec
dec
mov
test
and
xor
sti
repnz
out
add
or
mov
push
lock
adc
mov
in
fcompl
sub
xor
in
fisubs
js
pop
xlat
jbe
mov
lods
fistpl
xchg
outsl
push
imul
pop
scas
jae
dec
push
aas
cli
les
gs
testb
inc
stos
cmp
cld
inc
ret
loop
pop
jno
js
xchg
fcmovne
xor
add
sub
mov
aaa
clc
mov
push
jo
repz
hlt
outsb
sbb
cmc
xorl
outsl
xor
aaa
enter
inc
sbb
sbb
lds
xlat
std
mov
in
jl
aad
ja
test
cmp
inc
cwtl
sub
popa
outsl
xchg
arpl
lahf
xchg
mov
es
jp
imul
inc
pop
outsl
es
clc
loop
ret
xor
pop
push
lds
iret
sub
test
stos
xor
stos
iret
xchg
pusha
jae
jecxz
pop
test
cmpsl
mov
push
jne
ljmp
mul
ret
or
shll
and
rol
jp
pop
mov
mov
mov
outsl
push
loope
into
jmp
dec
in
repnz
fcomp
jbe
mov
inc
nop
adc
stos
mov
cld
popf
ss
mov
sbb
cmc
inc
sbb
mull
fidivl
xor
cmp
shl
negb
aas
pushf
add
and
test
enter
xchg
mov
roll
jnp
sub
movsl
lahf
mov
dec
mov
in
sub
sarl
push
sahf
pop
pop
jl
test
fwait
adc
out
pop
xor
leave
sahf
push
mov
pop
lret
lret
out
mov
aad
push
addl
out
lea
dec
and
push
mov
jmp
int3
inc
jecxz
jnp
out
pop
xlat
dec
mov
idiv
loopne
sbb
sbb
inc
add
dec
cmpl
mov
xor
scas
jp
xchg
test
push
mov
les
iret
sub
sbb
jbe
xor
divl
fwait
push
sbb
mulb
insl
xchg
shlb
jbe
rcrl
dec
out
jnp
cmp
adc
push
dec
cmp
mov
sub
out
out
lods
and
add
inc
cwtl
sbb
jge
push
lret
push
icebp
and
xchg
add
loope
vpunpcklbw
jo
sub
pop
lock
loop
testb
sti
dec
test
cmpsl
lahf
mov
pop
jno
ss
or
add
aas
mov
xor
lods
ret
sub
jne
mov
outsl
jle
dec
mov
mov
in
inc
je
add
push
hlt
cmp
loopne
mov
xor
lahf
scas
push
jno
dec
inc
mov
dec
rcr
pop
test
shlb
lcall
cltd
mov
out
cmc
lods
dec
ljmp
cmp
jl
sahf
xchg
pop
loope
fldl
daa
adcl
mov
adc
inc
pop
mov
add
push
cltd
push
cmp
in
out
mov
push
pop
test
ss
cltd
push
nop
xlat
add
xchg
enter
push
ds
inc
push
loopne
mov
jno
jecxz
push
mov
lret
les
scas
aaa
add
das
or
xchg
incb
and
mov
in
testb
pop
xchg
cmp
sahf
sbb
add
cld
dec
xchg
push
xor
pop
mov
lret
mov
sahf
xchg
lret
xchg
cltd
in
jns
inc
loop
push
xchg
mov
cmpsb
das
std
push
cmp
lea
and
or
dec
loopne
loopne
test
mov
inc
adc
sub
insb
xchg
jbe
test
push
arpl
fwait
mov
dec
repnz
sub
push
pusha
cmpsl
lock
jns
xor
xor
adc
jno
fdivrs
jp
pushf
ret
adc
adc
sbb
lea
or
ds
daa
call
dec
or
dec
push
inc
enter
mov
xlat
xchg
aad
xor
cmp
loop
xchg
add
and
cld
push
ret
iret
std
cmp
lahf
pop
ljmp
fcoml
pop
jp
jg
dec
cmp
xor
or
adc
inc
icebp
sub
xor
movsl
call
push
addps
pop
mov
add
lret
fidivs
jno
dec
stos
cmp
mov
xor
mov
dec
dec
iret
scas
sbb
xchg
lea
jns
into
lcall
jae
dec
jle
inc
addr16
xchg
jnp
jg
fdivrs
stos
cli
mov
outsb
mov
cmc
and
xchg
sti
ss
dec
hlt
dec
xchg
sub
outsb
fbstp
mov
add
ljmp
jg
jns
mov
fiadds
dec
add
call
sbb
loope
jmp
dec
jp
stc
sub
mov
inc
rolb
add
lcall
sbb
or
gs
mov
mov
lret
into
hlt
movsl
ficompl
pop
fsubr
cwtl
mov
adc
mov
repnz
in
jle
xchg
cltd
stos
inc
out
int
jle
mov
out
faddl
lret
jecxz
cld
lret
hlt
testb
pop
push
mov
fnstenv
out
dec
movsl
cmp
push
dec
push
or
cltd
fimuls
enter
push
dec
dec
fsubr
loope
jnp
fisttps
in
adc
fadds
sbb
inc
pop
test
dec
sahf
jne
jno
jle
inc
xor
fnsave
clc
jmp
inc
testl
inc
mov
xlat
jae
mov
lret
decb
out
shll
cmp
sti
aaa
adc
std
icebp
imul
sti
push
push
push
rolb
and
dec
and
aam
fimull
pop
insb
jne
leave
mov
fisttpll
push
pop
dec
jecxz
add
mov
fistps
jnp
mov
mov
xchg
movb
int3
pop
mov
jns
push
dec
cld
repnz
sti
and
or
push
sbb
mov
test
cmp
ret
scas
mov
cmp
ficompl
cltd
or
jmp
dec
pop
hlt
fdivrl
and
xor
mov
xor
inc
in
loop
or
push
jl
xchg
inc
dec
sbb
stos
mov
add
fisttps
push
xor
inc
xchg
jns
cmp
std
sbb
dec
xor
push
cmp
sub
mov
pop
mov
dec
or
fwait
or
pusha
scas
ja
xchg
test
mov
insl
mov
int
subb
or
or
leave
jge
xchg
mov
cmp
add
in
lcall
insl
and
imul
outsb
inc
sub
fmull
das
and
or
xchg
out
arpl
jno
clc
mov
push
mov
dec
pop
push
push
adc
dec
xor
dec
xor
xlat
mov
rcl
mov
add
mov
cmpl
jb
and
xchg
sarl
out
clc
and
sub
shl
lret
xor
je
dec
inc
in
or
mov
outsl
or
adc
pop
rol
jl
mov
movsb
or
repnz
inc
aas
movsb
in
test
jg
repnz
in
inc
jmp
cmpsl
clc
aad
and
dec
fisubs
jmp
testb
xor
xchg
mov
xor
mov
xor
push
cmpsl
jb
add
in
int3
dec
dec
cmpsb
dec
out
cmpsb
xchg
pop
jno
dec
jmp
pusha
mov
mov
jle
out
punpcklwd
cmp
cmp
mov
jbe
add
lods
or
xor
add
push
out
fs
call
xor
xchg
out
jo
pushf
sbb
into
popa
cwtl
pop
xchg
sbb
into
fidivs
shll
shll
sub
cmp
scas
idivb
je
cmp
imul
rcrl
ja
cmp
stos
rolb
dec
mov
int
pop
lea
mov
sub
mov
repnz
sbb
scas
jno
rcrl
fidivrl
jno
cmp
push
mov
cmp
xchg
or
push
sub
xor
mov
repnz
mov
pop
and
in
cmp
aaa
sbb
insl
enter
mov
adc
in
push
flds
lret
mov
xlat
xor
nop
mov
dec
and
xor
imul
push
int
fwait
pop
xlat
dec
push
fsubrl
jne
sarl
jae
adc
and
icebp
mov
pop
adc
mov
push
hlt
mov
aad
xlat
lret
shrb
sbb
cld
pop
lahf
adc
outsb
test
cmp
hlt
xor
mov
bndldx
sub
cwtl
xchg
xchg
scas
pop
push
cltd
or
gs
sub
incb
mov
pop
ror
jbe
xchg
outsl
leave
ss
cmp
jge
in
nop
arpl
psubusw
jg
inc
insb
add
imul
pushf
push
test
xchg
rorb
repz
iret
mov
add
icebp
mov
cmpsb
lahf
fisttpl
aaa
in
mov
repz
sbb
sbb
aad
push
vpsrlw
cmpsb
lcall
inc
cmp
or
ret
adc
fistl
scas
dec
adc
xchg
scas
cmp
into
adc
push
mov
push
inc
adc
add
push
testb
pusha
int3
jns
mov
xor
mov
jb
xchg
adc
mov
dec
test
cltd
loope
or
add
mov
outsl
int3
movsl
arpl
jns
enter
pop
mov
dec
lahf
cwtl
xchg
mov
aas
jb
xlat
das
mov
sub
fdivrl
mov
pop
insl
out
pop
popf
mov
xchg
xor
jnp
mov
imul
xchg
mov
sbbb
fists
stos
pop
movswl
mov
sub
xor
inc
in
call
adc
shlb
mov
dec
push
ret
sbb
in
xchg
xor
push
push
popf
shll
loopne
lret
scas
or
xor
mov
rclb
ss
jp
mov
aas
inc
pop
xor
in
and
loop
mov
dec
std
movsb
stc
mov
in
jmp
inc
xor
add
push
imul
adcl
or
lcall
fidivs
mov
push
mov
lcall
mov
add
in
pop
ja
lock
sbb
and
adc
fnsave
dec
mov
mov
test
out
cs
ds
add
add
jge
sbbl
xor
xchg
es
push
sub
inc
xchg
movsl
outsb
imul
push
pop
cmc
sbb
inc
adc
add
jecxz
and
aam
lea
sbb
shr
enter
inc
dec
cmp
std
xchg
push
cmpsb
iret
adc
fimull
dec
out
stc
pop
sbb
add
or
xor
pop
cmp
sub
or
adc
into
sbb
loop
aaa
add
adc
pop
jp
test
push
out
lods
cmpsl
pop
jmp
cmpsb
or
nop
mov
cmpsb
int
dec
sbb
stos
mov
pop
push
mov
in
or
cmp
sub
daa
cmp
sbb
scas
shll
stos
push
pop
add
pop
jnp,pt
ret
mov
jmp
stc
mov
cwtl
dec
adc
pop
test
mov
shrb
imul
sti
insl
inc
add
dec
mov
dec
add
xchg
pop
xchg
sbb
sbb
xor
in
orl
sti
cmp
push
pop
subl
inc
pop
ja
imul
out
popa
sti
sbb
push
popl
cmc
insb
insb
pop
ljmp
jmp
push
xchg
dec
xchg
ret
cmp
sub
sbb
sbb
iret
push
testb
xor
xor
push
xchg
lret
and
mov
and
dec
dec
cltd
imul
adc
fsubrp
and
mov
bnd
sub
repnz
add
shlb
push
repnz
stos
jb
jnp
sbb
dec
jge
test
cmp
lahf
or
arpl
cmpsb
mov
fstpt
iret
jge
mov
or
mov
aam
pop
jnp
and
sub
fcoml
fwait
xchg
insl
cltd
add
mov
fxch
mov
cld
mov
or
adc
xchg
cwtl
cmp
cld
decb
rol
push
outsb
pop
push
mov
mov
aas
in
iret
mov
cmpl
ffreep
cmp
fdiv
int3
xor
loopne
xchg
cmp
wrmsr
cwtl
adc
int3
push
xchg
sahf
adc
push
xchg
sbb
std
adc
mov
pop
test
mov
sub
outsb
inc
sub
es
mov
aad
jbe
sbb
mov
mov
lds
lret
jmp
dec
ficomps
lahf
testl
cmp
popf
fadd
lret
jnp
pop
data16
imul
fcompl
clc
inc
int
fistpll
pop
sub
aas
jae
and
scas
jp
or
cli
inc
xchg
mov
or
push
test
les
xor
sbb
sbb
mov
adcl
aad
push
mov
sbb
cmp
dec
out
sarb
jp
xchg
cld
outsl
fwait
shl
maxps
int
lods
xchg
mov
in
add
xchg
cmp
xor
lea
and
jno
sub
pop
adc
je
pop
icebp
retw
pushf
xor
lahf
ljmp
mov
mov
stos
scas
stos
dec
or
mov
out
push
insl
addb
cs
lock
int
jl
push
jl
inc
in
or
pop
mov
push
push
aaa
cmp
iret
aaa
in
mov
sbb
xchg
lret
jne
movsb
push
push
xchg
mov
arpl
adc
hlt
ljmp
shl
sub
out
aad
ret
es
or
xchg
std
repnz
add
fcmovne
icebp
sbb
test
cs
mov
fistl
jl
or
pop
rorl
icebp
xor
iret
out
es
adc
outsl
lea
xorb
into
push
movsl
mov
push
icebp
cmp
cmp
xchg
ret
leave
sub
test
push
bound
adc
ret
xor
xor
subb
jnp
adc
inc
repnz
add
pushf
cli
xchg
jns,pt
add
push
fidivs
xor
mov
call
sub
jns
andb
shl
mov
mov
or
stos
push
loope
dec
mov
sub
jae
cmpsl
js
dec
insb
aad
add
push
fstps
xchg
jge
clc
sbb
mov
out
std
ss
fwait
in
or
lret
push
jge
push
in
mov
and
icebp
test
sti
add
int3
fs
jno
push
out
mov
push
dec
sbb
inc
nop
dec
and
loop
dec
push
inc
in
push
jne
xor
es
addr16
js
loopne
testb
shl
and
xor
shll
cli
ds
nop
pop
scas
imul
pop
sbb
adc
and
push
arpl
xchg
mov
adc
inc
jne
outsl
adc
mov
hlt
rclb
aas
std
pop
pop
inc
mov
std
std
aam
pop
and
or
push
out
addb
jne
and
sbb
cs
pop
inc
test
mov
inc
lea
mov
jb
xor
std
mov
sub
xor
jmp
aad
add
push
jb
call
ja
std
or
fs
push
daa
pop
jmp
add
imul
mov
fwait
cmp
inc
ljmp
mov
sahf
pop
scas
adc
sar
icebp
push
int3
adc
or
xchg
lock
ja
aas
cmp
pop
and
jp
daa
cmp
test
inc
ds
out
movsb
sti
sub
inc
in
mov
cld
push
mov
dec
cmp
jl
inc
jb
push
xchg
and
pop
adc
push
mov
lods
xor
or
xchg
or
sbb
fwait
jae
dec
and
sbb
rcl
jmp
jo
addps
cmp
jmp
repnz
lcall
sbb
xor
xchg
jl
rcll
jl
add
xchg
adc
mov
xchg
xlat
push
push
sti
sbb
test
cltd
sub
adc
stos
and
push
imul
pop
mov
in
pop
inc
cmp
sbb
inc
addr16
pop
jp
mov
sbbb
cmp
outsl
jl
mov
sbbb
pop
and
fisttpll
loop
loope
jne
sbbb
adcl
and
in
cmp
adcb
jo
dec
pop
sti
xor
push
pop
sahf
iret
and
and
push
dec
std
stos
mov
mulb
mull
push
bound
cmp
je
mov
jno
out
sub
and
roll
aaa
imul
push
dec
cmp
aas
xchg
icebp
outsb
mov
shl
jge
mov
sbb
jle
in
cmp
mov
cmp
fmull
push
xor
cmp
mul
inc
out
jmp
pop
dec
or
mov
mov
jge
sbbb
scas
gs
ret
mov
jmp
jl
iret
dec
mov
and
int3
das
sub
jae
sub
pop
lcall
xchg
lea
mov
inc
mov
cli
jmp
pop
lods
ds
mov
or
out
pop
int
jmp
add
pop
lret
sub
gs
popa
add
fnsave
addl
aad
pop
or
or
out
rcrl
cmpsb
lds
or
gs
xor
ljmp
fs
push
addr16
push
dec
mov
mov
push
sbb
add
push
mov
or
lret
mul
xor
and
insl
cmp
xchg
dec
adc
xchg
std
dec
pop
xchg
sbb
jo
push
pusha
sub
test
jno
fidivs
xchg
jmp
add
jns
aas
or
js
rcr
lea
xlat
sbb
dec
jo
push
adc
xor
and
jecxz
pop
ja
dec
out
clc
or
andl
clc
out
fnsave
lahf
inc
mov
mov
leave
or
or
repz
int
pop
sub
inc
xor
jne
sub
insl
sbb
enter
or
shlb
and
aas
xor
dec
movsb
xchg
xor
and
or
fildl
jecxz
in
test
mov
adc
or
test
out
and
mov
fwait
jnp
inc
sar
ret
dec
loope
jno
fcomi
pop
add
cmpsl
xlat
int3
popa
nop
pop
sub
sar
mov
push
or
dec
out
cmp
ljmp
aaa
call
xor
fdivrl
in
popa
and
pop
dec
sub
xor
aaa
xor
fistps
pop
dec
push
imul
data16
aam
pop
leave
lock
or
call
sbb
cmp
push
add
mov
sub
cmp
jns
jbe
dec
pop
test
and
mov
scas
or
ret
ret
mov
dec
push
and
rcll
in
insl
or
outsb
aaa
sub
cmp
mov
push
clc
lret
xchg
jmp
je
adc
add
pop
xorl
lock
shlb
and
adc
pusha
shlb
inc
lock
add
xor
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
xchg
inc
loopne
lock
shll
and
adc
popa
shlb
inc
lock
add
xor
inc
lock
jg
outsl
lcall
pop
sbb
xchg
testb
imul
cmpsb
dec
xchg
inc
cmpsb
data16
cmpsb
jmp
ss
es
es
testb
jbe
data16
inc
mov
inc
data16
out
ss
es
jo
add
insb
push
nop
outsl
cmpsb
jg
dec
mov
lods
gs
pop
repnz
inc
stos
pusha
movsl
inc
scas
inc
inc
xchg
xchg
push
jg
xor
pop
mov
or
or
leave
leave
insl
ss
add
mov
cltd
or
jg
pop
mov
dec
add
imul
les
cmp
jg
inc
pop
std
mov
pop
push
ja
cwtl
or
mov
loope
ss
div
out
xorb
jbe
sub
mov
addr16
mov
xchg
leave
das
pop
add
cmp
jb
movsl
cmpsb
xchg
push
pop
mov
xchg
xchg
pop
gs
sub
cmp
mov
lret
fldln2
jne
insl
cmpsl
dec
add
xchg
jle
inc
ss
dec
negb
out
adcb
xchg
jl
push
mov
xor
push
mov
pop
out
sub
call
inc
inc
test
adc
or
push
ret
sub
ret
ss
call
imul
test
add
or
cmp
add
shll
push
xchg
pop
xchg
push
cmpsb
push
push
pop
movsl
adc
jae
push
mov
fisubl
push
mov
cmpsb
mov
cmpsb
inc
xchg
jbe
data16
out
ss
es
es
push
testb
jbe
data16
inc
cmpsb
mov
cmpsb
inc
xchg
jbe
data16
out
ss
es
in
dec
mov
pop
icebp
dec
cltd
cwtl
sbb
cmp
out
repnz
lock
mov
out
inc
test
xchg
pop
notb
loop
mov
adc
fists
adc
vpunpcklbw
add
xchg
or
icebp
lods
jp
ds
nop
cmpsl
xchg
test
fs
xorb
mov
inc
jbe
mov
bound
mov
sbb
outsb
push
push
cmpsb
push
xchg
out
pop
and
hlt
scas
mov
cs
xor
ja
clc
lret
fmuls
lret
std
add
pushl
scas
out
mov
cmc
mov
inc
aas
lret
ljmp
pop
mov
stos
jbe
mov
movsl
jo
sub
lahf
setp
lret
cmp
pop
mov
insl
shl
dec
cmovge
dec
push
mov
mov
pop
cmp
test
and
js
xchg
das
adc
frstor
xor
sbb
jle
ret
push
aas
adc
mov
mov
cmp
cmp
outsl
push
addr16
inc
aad
repz
push
insl
lea
sbb
mov
sbb
out
and
cli
adcl
fs
jno
ljmp
les
or
es
sbbl
xchg
inc
xor
and
push
leave
xor
out
cmp
aad
cli
imul
lret
mov
mov
pop
or
lret
outsl
ret
out
not
add
cli
ret
cltd
daa
or
test
sahf
popa
fmulp
pop
push
fs
cltd
cld
mov
ret
pop
orl
or
jns
xor
popf
arpl
cld
sub
mov
outsl
dec
sbb
or
jo
push
fistps
and
outsl
loopne
xchg
jnp
or
lret
bound
aaa
or
pop
cmp
xchg
andl
dec
cmp
shrl
push
sub
inc
shrb
loopne
push
insl
push
dec
mov
movsl
adc
in
mov
sbb
lea
enter
cmp
addr16
pop
call
test
add
xor
adc
dec
stos
out
jae
clc
sbb
mov
lock
pop
mov
mov
sub
loop
mov
outsl
lret
push
cltd
pop
lock
loop
inc
pop
fwait
dec
xchg
and
loope
out
sub
popa
mov
push
jl
jae
and
push
outsb
push
call
jno
jae
test
sub
jb
loop
mov
push
andl
push
mov
and
jnp
adc
mov
push
pop
push
cmp
add
les
and
jo
aaa
addr16
jne
pop
mov
push
sti
iret
sbb
imul
inc
cmp
cs
daa
inc
dec
lret
enter
mov
mov
add
pop
sub
xchg
push
pop
jmp
jecxz
push
adc
in
decl
push
push
in
dec
aaa
sub
push
add
or
and
mov
and
push
ds
hlt
scas
jg
jns
xor
dec
inc
shll
adc
lahf
cmp
or
repnz
dec
insl
sbb
add
mov
mov
xor
dec
in
das
fs
insb
fldcw
mov
jge
mov
iret
add
test
icebp
xchg
ds
push
mov
fcom
and
nop
nop
lock
adc
ja
mov
js
adc
fisubs
adc
lds
mov
cmp
xchg
inc
fstpl
cmp
dec
popa
outsl
cmp
xorl
pop
pop
dec
inc
xchg
ret
jmp
adc
dec
fmuls
inc
aam
dec
xor
nop
rol
sarl
mov
inc
cmp
or
push
frstor
push
cwtl
mov
or
lea
add
xor
and
popa
pop
or
cld
cmp
adc
lret
jp
imul
dec
xor
mov
xor
xor
xor
dec
out
mov
and
loop
mov
pop
mov
out
into
stos
mov
and
ds
push
xor
dec
into
mov
pop
ds
add
xor
fisubrs
imul
ds
mov
and
fcmove
call
or
scas
lea
scas
push
mov
popf
cmpsl
shlb
or
es
adc
dec
repnz
aad
sub
pop
bound
inc
test
push
push
pop
sahf
lods
mov
out
js
or
jecxz
add
jmpw
or
sub
cmpsl
jno
mov
or
xor
inc
add
loope
and
cld
ret
lods
in
lds
cmpsb
xor
addr16
jg
out
ljmp
clc
lret
int3
repz
sub
roll
xlat
movsl
out
ljmp
les
push
cmp
adc
sub
ret
mov
dec
pop
rcl
negb
cmc
xchg
nop
mov
xor
outsl
jge
xchg
sti
sbb
pop
push
mov
loope
test
into
add
std
xchg
ret
and
mov
into
dec
aas
arpl
inc
fwait
inc
in
in
inc
icebp
mov
cmp
inc
js
movsb
push
sbb
mov
jbe
jp
inc
scas
cld
ja
clc
scas
jmp
movsl
mov
dec
mov
loop
sbb
adc
addr16
lods
ss
roll
out
cmp
or
adc
mov
lea
sbb
adc
mov
out
dec
test
xor
sbb
inc
in
fists
xchg
ljmp
jns
das
inc
mov
mov
lahf
outsb
fmuls
dec
fs
stc
call
ret
loop
push
and
jne
fdivrl
inc
out
enter
adc
or
mov
loope
push
dec
add
out
mov
rolb
stos
js
movsl
out
sbb
repz
scas
add
scas
in
negl
mulb
test
and
cmpsb
fwait
or
and
push
pop
push
inc
xchg
enter
mov
and
push
xor
jae
add
and
sbb
pop
pop
inc
jge
jo
and
sbb
sub
xor
lea
test
fwait
sbb
xchg
inc
inc
cmp
or
fnsave
clc
sbb
arpl
lds
stos
and
inc
xor
cmp
enter
pop
add
jl
sbb
adcl
ficoml
cmpsb
inc
rorb
mov
pusha
sub
jp
div
sahf
sbb
mov
xchg
mov
jl
cmpsb
test
scas
enter
jle
push
xchg
call
test
scas
rcrb
or
cmpsl
add
cmp
pop
sub
dec
test
addr16
push
arpl
outsb
mov
and
sbbb
ret
cmp
jmp
ret
adc
test
divl
sub
aaa
clc
repz
pop
fbld
push
xchg
dec
pop
lret
sbb
cmp
jae
data16
jae
fsubrs
addl
adc
ja
cmp
jae
lock
add
loopne
mov
outsl
fistpll
mov
push
xor
dec
sti
inc
sbb
lcall
push
addb
test
dec
push
or
push
dec
mov
mov
ja
dec
mov
into
ret
mov
lds
test
lret
xchg
dec
xchg
cli
or
jl
es
rol
dec
fwait
cs
lods
xor
xor
adc
ja
scas
dec
and
mov
subb
lods
cmp
jne
add
adc
xchg
dec
out
xor
jmp
dec
mov
cli
aaa
or
insl
jae
dec
mov
jns
rcr
dec
sub
pop
sub
mov
cwtl
and
roll
arpl
mov
jle
pushf
xchg
xor
add
cmpsb
and
into
ficompl
cmp
xchg
sub
dec
pop
bound
add
in
adc
sahf
pop
ret
mov
xchg
adc
inc
sbb
popa
push
mov
inc
mov
and
xchg
jge
push
pop
lcall
push
xchg
and
in
iret
xor
fs
ffreep
mov
adc
stos
and
push
mov
add
imul
cmpsl
and
or
sub
cmpsb
mov
in
sub
cmp
js
jb
cwtl
or
out
arpl
je
cltd
push
xchg
inc
jo
and
das
jmp
mov
dec
mov
in
jl
adc
mov
mov
sub
jnp
dec
xlat
inc
aam
mov
add
lock
out
jle
nop
mov
mov
push
sbb
add
aam
rorb
addb
repnz
pop
inc
adc
daa
and
loop
leave
imul
std
push
lcall
nopl
and
sub
mov
imul
and
cmp
adc
fwait
out
pop
test
fildll
push
cwtl
rcrl
in
adc
shrb
mov
mov
pushf
movsb
mov
loop
and
jae
aaa
mov
sub
mov
subb
js
xor
pop
xchg
mov
push
cltd
cmpsb
mov
fnstsw
ljmp
bound
add
aaa
std
in
cmp
jp
xchg
push
xor
jle
lret
rorl
fdivs
dec
pushf
into
je
lock
sub
out
or
jns
inc
sub
inc
mov
inc
mov
stc
movsl
pop
hlt
iret
xchg
out
pop
lds
lock
pop
mov
sarb
sbb
mov
inc
or
icebp
insb
clc
fldln2
dec
jae
mov
inc
sti
fnstsw
pop
inc
iret
cli
adc
testl
test
or
sub
cwtl
dec
ret
pop
push
xchg
rorb
insl
mov
push
pushf
scas
and
cmp
repz
add
aam
xchg
leave
xchg
scas
cmpsl
inc
lock
fsub
dec
xchg
mov
inc
mov
outsb
add
or
adc
mov
dec
test
lods
xor
inc
or
aam
jb
movsb
sahf
inc
adc
subl
lea
sbb
pop
sub
pop
jb
ret
sub
push
in
fistl
sub
mov
lea
les
adcb
insb
shlb
shll
mov
test
mov
popf
push
or
jge
pop
or
imul
add
jp
or
mov
xor
out
mov
add
lcall
pop
fisubs
xor
shll
dec
ret
xor
into
sarl
idivl
dec
mov
mov
pushf
jb
and
lods
inc
inc
call
lcall
lods
clc
gs
jo
divl
mov
mov
dec
cwtl
mov
jbe
or
inc
popf
adc
dec
push
test
out
fldl
mov
mov
cmp
jp
mov
out
mov
mov
xchg
mov
adc
test
leave
pop
adc
imul
pop
jp
sub
push
mov
fiaddl
pop
jnp
cs
fcompl
and
fstpl
fnstsw
cld
and
push
xchg
test
xor
jecxz
mov
or
loope
in
cmp
mov
repnz
push
adc
loope
rcr
add
int3
test
dec
clc
pop
cmc
insb
xchg
adc
adc
pop
add
in
push
lods
mov
ret
pop
or
inc
movsl
hlt
or
sbb
ljmp
jle
cmp
mov
ljmp
sub
mov
std
in
lods
ffreep
cmc
insb
cli
imul
push
adc
cmpl
rolb
push
aam
ljmp
test
movsb
adc
pop
xchg
loopne
mov
dec
xlat
sahf
add
adc
xlat
jns
cltd
enter
in
adc
inc
push
push
lahf
rorl
sti
addr16
mov
addr16
cmp
lahf
and
push
adc
mov
cmp
cmp
fidivl
cmpsl
imul
rcrb
sub
push
and
lock
call
inc
mov
or
xchg
mov
pushf
lcall
jle
leave
sbb
stos
inc
mov
mov
add
mov
lcall
rorl
cld
cs
aaa
decb
or
sbb
pop
repnz
cmp
cmp
or
cmp
push
aas
lock
adc
loopne
ss
sbb
fbstp
push
ss
clc
jmp
inc
je
sbb
fisubrs
xacquire
sub
leave
or
xor
pusha
xor
stos
dec
test
sbbl
clc
pop
sbb
pusha
pop
xchg
stos
in
into
inc
cmp
pcmpgtb
inc
loop
mov
nop
outsl
and
insl
sub
push
jg
loop
aam
and
nop
ret
inc
pop
and
push
mov
sbb
arpl
xchg
insb
dec
inc
push
test
mov
je
jmp
aaa
aad
pop
sub
xchg
in
push
out
arpl
cli
push
lock
push
xlat
jmp
ret
inc
lods
cwtl
lods
into
out
or
hlt
dec
clc
dec
push
jbe
mov
push
fldenv
mov
sbb
mov
jle
test
xor
push
fnstcw
cmpl
adc
enter
push
push
jae
push
cltd
xchg
call
icebp
outsl
subl
or
pop
lock
lcall
lods
enter
mov
mov
jns
xchg
push
mov
mov
stos
rolb
mov
leave
call
outsl
and
add
shll
jbe
cmc
rorl
call
adc
push
jge
lcall
int3
mov
dec
data16
dec
lock
lahf
and
pop
mov
push
sbb
cmp
enter
adc
dec
inc
js
movsb
int3
mov
sarl
mov
push
xchg
jmp
inc
aad
jo
in
aaa
loop
ja
repz
mov
pop
jmp
inc
in
inc
cmpsl
and
scas
cmp
lea
xor
mov
sub
sub
push
jge
cmp
pop
sub
imul
fidivl
mov
les
and
add
insl
sbb
negl
sub
repz
dec
dec
mov
push
cmp
out
movsb
adc
or
icebp
fistl
mov
jmp
je
inc
les
cmp
lret
sub
inc
pop
rcll
int3
sbb
pop
es
push
fildll
aad
ja
mov
jecxz
test
cmp
xchg
mov
cwtl
mov
clc
or
sub
and
out
and
inc
cltd
jge
jg
push
orb
or
fadds
aas
mov
outsl
fldl
lcall
ss
dec
xor
mov
rcll
push
push
mov
jl
sti
xchg
lcall
lds
mov
cltd
je
dec
daa
cltd
mov
rcrb
cltd
js
xchg
jecxz
fimull
scas
cwtl
pop
adc
fld
xor
ret
cmc
out
adc
lods
mov
mov
adc
mov
addr16
les
shl
mov
adc
adc
and
sti
push
adc
icebp
mov
sub
fcomi
bound
inc
stos
clc
xor
dec
adc
add
mov
lods
add
mov
jbe
xchg
inc
in
xor
ss
xchg
bswap
and
mull
mov
inc
test
push
clc
push
mov
and
test
mov
ja
negl
and
pop
mov
lods
int
xchg
out
aaa
jae
inc
dec
out
sub
das
jl
mov
popl
jmp
or
add
fcmovnu
ss
arpl
in
pop
add
ficompl
lods
ret
pop
mov
add
enter
mov
mov
cmp
push
fldt
lods
lock
and
push
mov
dec
lock
jnp
call
mov
fwait
je
rcll
jl
pop
adc
and
mov
mov
inc
and
mov
dec
lds
in
pop
xchg
jns
rolb
mov
mov
nop
mov
and
or
movb
xor
dec
sbb
mov
sbb
push
mov
pop
add
sub
sbb
cmp
movsl
dec
into
cltd
xchg
mov
stos
sub
adc
dec
cld
out
sub
fstpt
xor
push
lahf
pop
or
fstpt
sbb
jg
mov
rcrl
mov
pop
jb
test
incl
mov
cmc
pop
add
sbb
repnz
mov
movsb
testl
jge
fdivl
jno
inc
inc
aas
test
sbb
mov
mov
mov
push
cmp
adc
sub
add
fbstp
jbe
cmp
push
xor
insb
adc
fnstcw
nop
iret
cli
rolb
fistpl
jo
cmp
xchg
lock
leave
push
xchg
jl
dec
mov
inc
sub
into
stc
jge
arpl
popf
sbb
cmpsl
repz
fcos
sbb
outsb
cmpsl
pop
mov
cs
aaa
pusha
pop
xor
mov
push
sub
push
pusha
sbb
mov
mov
mov
xchg
pushf
sbb
push
dec
shll
push
insb
xchg
insb
das
jne
mov
add
rclb
pop
push
jno
out
into
shrl
add
push
pop
repz
xor
lock
cmp
jae
roll
jae,pn
sub
in
negb
mov
push
jle
mov
in
inc
fsub
insb
cwtl
int3
ljmp
decl
xchg
pop
or
and
pushf
scas
mov
adc
sar
push
lds
das
outsb
or
fildll
or
cwtl
jmp
xor
or
mov
jp
sti
xchg
sarl
pop
cmpsb
jge
std
incl
adc
std
push
js
push
lret
sub
out
sbb
jp
pop
push
sbb
mov
add
inc
add
test
inc
movsl
fisubrl
arpl
or
scas
xchg
dec
div
addb
popa
lock
push
pop
pop
jae
movsl
sbb
addl
sbb
and
sbb
dec
js
mov
jb
imul
outsl
add
mov
loop
repz
lahf
sub
cmpsl
xchg
pop
jl
xchg
or
fstl
xor
cmp
outsb
iret
je
jnp
gs
cmp
enterw
mov
jl
xchg
adc
xchg
or
and
dec
xor
add
rorb
int3
stos
mov
flds
pushf
dec
int
movsb
inc
and
xor
mov
mov
adc
cmp
sbb
das
rcr
lods
stc
dec
dec
mov
push
fcoms
sbbb
push
push
pushf
imul
leave
test
ja
loopne
jge
jo
ds
cmpsb
dec
loope
lea
js
div
jecxz
and
cs
pop
icebp
loope
adcb
mov
imul
scas
icebp
mov
xchg
gs
mov
sub
cmp
in
cmp
sbb
in
outsb
sbb
pop
popf
or
adc
addl
xchg
sub
pop
test
jp
or
jnp
sti
or
out
jno
int
cmp
ss
in
inc
lds
popa
sbb
bound
or
push
push
addr16
rcl
test
sar
jl
add
mov
ret
inc
std
push
out
movsl
ja
xchg
je
mov
mov
outsl
inc
loope
push
inc
insl
in
push
loope
mov
pop
lahf
pop
add
and
iret
sbb
incl
fcoms
push
xchg
leave
enter
jae
sbb
and
dec
fsub
and
es
or
adc
inc
pop
inc
shll
ljmp
rorb
mov
ret
push
fwait
jecxz
fcmove
mov
xchg
out
inc
add
lock
mov
mov
add
push
lahf
lds
pop
push
dec
test
mov
enter
or
out
aad
out
test
or
ss
add
xchg
mov
fisubl
and
aam
stos
leave
imul
inc
mov
shr
std
fsubs
and
jnp
dec
lock
incl
popf
jae
das
push
je
pushf
mov
cmp
add
mov
shrl
dec
nop
pop
int
push
mov
mov
pusha
icebp
mov
pop
clc
xor
es
leave
loope
mov
add
int3
movb
out
xchg
data16
inc
cmpsb
mov
cmpsb
inc
xchg
jbe
data16
out
ss
es
es
push
testb
jbe
data16
inc
cmpsb
mov
cmpsb
inc
xchg
jbe
data16
out
ss
es
enter
loop
xchg
in
push
mov
cmpsb
mov
cmpsb
inc
xchg
jbe
outsl
notb
loop
aas
test
and
push
cmpsb
jbe
data16
ss
dec
test
xchg
subl
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
aaa
dec
ds
or
jo
hlt
push
or
sbb
add
pop
push
or
add
inc
add
pop
add
add
or
leave
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
push
lahf
add
add
add
add
add
or
and
jns
jnp
rolb
add
push
add
add
add
add
add
pop
add
add
js
xor
lcall
add
add
add
add
cmp
add
add
add
add
and
and
jns
cli
add
sbb
rolb
add
add
add
add
add
add
add
add
or
add
add
add
sub
int3
add
add
add
add
mov
and
arpl
inc
add
or
pop
add
add
jb
mov
add
arpl
test
jo
mov
add
xchg
add
add
add
add
mov
add
add
cmpsl
add
add
daa
add
cwtl
add
add
add
add
test
jnp
or
in
add
addb
add
add
add
pop
add
and
jle
insb
add
push
add
push
add
add
add
jb
js
push
add
xchg
add
stos
add
add
add
pop
add
add
add
add
add
lea
int3
add
add
add
add
js
sbb
roll
mov
add
jle
sbb
or
and
test
js
iret
add
add
add
add
loope
movsl
add
rolb
add
add
rolb
add
cmp
jl
js
push
add
add
add
add
jb
stos
add
add
jbe
or
movsl
add
or
mov
add
add
jl
ret
add
add
movsb
add
add
push
lea
cwtl
add
add
add
add
or
sbb
cmp
add
or
popa
add
add
add
add
dec
add
add
add
add
add
test
into
add
test
test
je
cwtl
add
add
or
and
popf
add
add
mov
add
add
add
add
stos
add
add
add
add
add
add
and
and
inc
add
add
add
add
pop
add
inc
push
popf
add
add
mov
inc
add
add
test
test
cmp
xor
adc
lock
add
add
js
add
mov
add
add
rolb
int3
add
cmp
aaa
add
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
jmp
xor
add
add
jle
pop
add
add
add
mov
mov
fisubrl
loopne
dec
jno
sbb
and
add
rolb
cwtl
nop
fimuls
dec
mov
push
sub
adc
xor
jo
cmc
loop
ficoml
shll
inc
orl
fcoms
inc
lods
and
sub
cmpsl
aad
push
jle
or
int
and
mov
dec
or
shll
in
movsl
clc
mov
xor
adcb
lods
decl
pop
loope
divl
imul
sbb
lods
fnstsw
mov
cmp
or
lret
jne
mov
and
jmp
pop
lds
jb
sbb
inc
shr
mov
pushf
add
sbb
pusha
test
movsl
rcr
sbb
daa
mov
mov
pop
je
jo
les
mov
dec
push
enter
mov
sub
add
mov
hlt
subb
aad
out
cmp
or
xchg
inc
pusha
pop
push
jge
and
pop
push
mov
add
xor
mov
cltd
cwtl
mov
jbe
xor
lret
sub
mov
dec
pop
sbb
loopne
fsubrs
pop
stos
push
sub
pusha
pushf
loope
mov
outsb
je
push
pop
mov
xor
pusha
cmpsl
mov
cmp
jge
lret
test
jbe
insl
or
adc
nop
lea
xor
orb
in
mov
cld
repz
mov
out
cmp
jo
dec
xlat
pop
mov
in
shl
mov
pop
testl
int
mov
ds
out
mov
mov
dec
xor
adc
rcll
aam
hlt
xchg
mov
mov
mov
dec
and
adc
push
add
or
ja
xchg
pop
dec
call
sbb
ficomps
arpl
fs
scas
or
xchg
shrl
mov
stc
jns
or
ljmp
loopne
and
hlt
dec
inc
lret
xor
jge
inc
xor
lock
fldln2
inc
jge
add
adc
int3
lock
ljmp
xchg
ret
sahf
gs
or
jp
clc
pop
push
popa
mov
and
repnz
jle
pop
test
shrb
xor
lock
cld
inc
xlat
inc
test
cltd
scas
lcall
lea
pop
jmp
mov
shrl
das
les
lahf
decb
jp
repz
out
xchg
std
sbb
popa
jecxz
dec
mov
xor
mov
movsb
in
in
cmpsl
repnz
dec
into
mov
and
enter
mov
pop
ficomps
dec
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
