call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
rolb
jne
gs
mov
out
xchg
inc
adc
lds
inc
in
xchg
adc
es
inc
jne
gs
xchg
add
mov
push
lds
jle
xchg
cmp
es
jo
add
gs
adc
mov
lds
pop
lret
adc
inc
out
sti
inc
lret
inc
sbb
inc
xchg
movsl
pop
adcl
jg
xor
pop
mov
push
into
xchg
or
leave
in
stc
add
aas
addl
and
pusha
ss
nop
pop
mov
pop
imul
in
push
dec
jp
jg
inc
lret
std
aad
scas
push
or
cwtl
xor
loop
loope
inc
movb
in
adc
jbe
sub
rcl
cmpsb
js
ret
imul
mov
add
cmp
or
scas
movsl
push
xchg
and
lds
adc
xchg
insb
xchg
sbb
push
gs
stos
sub
xor
les
scas
cmpsl
test
mov
inc
mov
int
or
out
andb
xchg
add
xor
push
je
pop
xchg
sub
adc
sub
adc
dec
jmp
ret
fs
adc
mov
icebp
inc
icebp
dec
push
nop
aaa
andb
imul
mov
xor
roll
push
movsl
push
cmp
and
sbb
mov
mov
cmpsb
aad
lds
jbe
xchg
push
test
mov
movsl
es
inc
jne
gs
xchg
add
cmpsb
aad
lds
jbe
xchg
push
test
mov
movsl
es
loopne
into
mov
iret
icebp
test
cltd
mov
out
repnz
xor
je
cmp
stc
ds
cmp
lret
repz
push
xor
xorl
in
repnz
dec
gs
pop
mov
pop
fidivl
and
cmp
mov
push
mov
adc
adc
rcll
cwtl
push
mov
adc
or
xlat
jns
aas
jb
mov
mov
xor
dec
ss
mov
dec
push
jo
loope
pusha
cmp
mov
mov
ja
push
dec
and
inc
dec
data16
sub
mov
sahf
pop
push
lea
jl
and
mov
in
jle
dec
mov
ret
clc
mov
sub
inc
pop
clc
mov
fwait
mov
cwtl
mov
rcll
cwtl
es
fwait
xor
mov
test
icebp
xchg
cmp
repz
ja
in
mov
sub
lcall
scas
xor
popa
ja
out
add
jmp
or
sub
inc
mov
dec
shrl
inc
xor
stc
loope
pop
inc
or
cs
cmp
shl
rcr
pop
movsb
or
fwait
mov
cmc
aas
cwtl
fbstp
lods
jge
jg
call
filds
or
inc
mov
xchg
out
shlb
dec
les
idivl
or
dec
stos
xor
in
xchg
dec
push
push
int
aaa
ret
cmp
and
dec
shlb
movsl
stos
cmp
inc
fcoml
pop
or
inc
xor
sar
sbb
sbb
lock
mov
sub
xor
mov
sbbl
addr16
pushf
jp
mov
xor
add
cld
push
lret
xorb
ljmp
and
inc
mov
je
into
xchg
push
dec
mov
jg
pop
nop
pusha
push
mov
pop
mov
das
popf
idivb
out
lods
mov
loope
mov
mov
adc
stc
xor
dec
xchg
cltd
jo
add
jns
mov
insb
je
leave
iret
mov
orl
lds
insl
mov
cs
sbb
gs
leave
ss
js
inc
out
and
sub
cli
int3
mov
in
fdivrl
pop
jno
cmp
sbb
xor
sahf
repz
pusha
stos
test
lcall
repnz
inc
ljmp
xor
ret
rcrb
pop
call
cmpsb
lock
rcll
in
push
inc
stc
push
cwtl
imull
imul
sub
push
daa
stos
push
hlt
push
sbb
sahf
jge
adc
mov
mov
jg
movsl
mov
loop
mov
sahf
pop
int
or
pop
adc
in
ja
clc
repz
imul
ja
or
outsb
jnp
sbb
cltd
add
mov
mov
movsb
xchg
xor
push
js
jp
sbb
sahf
aam
mov
js
cmpsb
pop
std
cmp
sbb
mov
cld
inc
add
pop
inc
xor
js
xchg
mov
xchg
sbb
popa
xchg
rcrl
and
out
cld
and
ljmp
mov
push
ljmp
cmp
lret
arpl
sbb
insb
push
dec
ds
pop
scas
fiaddl
fsubl
xor
nop
hlt
pop
test
and
lds
adc
xor
popf
cmp
xchg
daa
adc
push
loope
fcomip
xor
lcall
sbb
into
sarl
aam
cli
lret
cmpsl
sbb
cld
push
cltd
cmp
repz
mov
and
ds
cmpb
mov
mov
cmp
dec
icebp
jbe
fmull
push
addr16
loop
dec
jecxz
aas
pop
sub
ret
inc
xchg
xor
stc
mov
mov
repnz
sbb
shr
sbb
rorl
push
data16
das
stos
pop
mov
cmp
cltd
push
xchg
mov
add
nop
adc
push
jb
add
sbb
cmp
sub
sub
sarl
push
enter
add
mov
jg
jo
cwtl
mov
or
jl
daa
pop
cmp
jl
lods
cld
andb
aam
and
adcl
cmp
je
xchg
adc
jb
push
andb
in
fidivs
add
cwtl
popf
pop
out
mov
xor
push
into
mov
sbb
jmp
fistpll
mov
pop
adc
sarl
idivb
inc
or
push
fwait
int3
and
cmpsb
lret
imul
lods
inc
out
ja
out
jg
arpl
pop
push
je
cmp
rcll
pusha
popa
mov
in
stc
mov
or
xchg
ja
push
inc
cmp
test
cld
in
into
mov
std
adc
repnz
mov
loope
xor
into
adc
in
cwtl
xor
inc
popa
mov
xor
mov
xchg
jo
mov
imulb
push
cli
jae
push
or
in
jno
pusha
out
cmc
inc
jbe
pop
xchg
ret
pop
mov
das
ljmp
movsl
pop
jle
fstpt
inc
pop
lret
sub
adc
in
rcll
jbe
jp
daa
dec
andb
in
lret
fisttps
aam
inc
add
push
and
out
bound
xchg
or
mov
test
mov
test
sti
out
mov
mov
cmc
inc
jmp
mov
mov
mov
dec
or
fstpt
popa
lret
mov
out
xchg
xchg
leave
or
pusha
jle
stos
mov
jmp
cmpsb
xchg
fwait
sahf
lcall
test
stos
je
jnp
int
fistpl
push
incl
dec
cmp
stc
cmp
lock
ficompl
ja
dec
push
out
stos
cwtl
in
repnz
sbb
cmp
adcb
add
sbb
test
adc
fldcw
adc
push
mov
pop
jo
fsubs
add
jb
and
xchg
aad
xchg
jg
lcall
push
or
out
push
push
mov
mov
mov
rclb
ret
stc
out
popl
mov
imull
adc
inc
fcomps
push
fcmove
inc
sbb
xchg
sbb
faddp
scas
adc
aaa
rorb
dec
cltd
movsb
xchg
pop
icebp
mov
mov
push
push
push
in
sub
push
fdivs
enter
jo
sarl
test
sub
inc
and
mov
stos
or
mov
push
or
les
add
lea
push
lods
sbb
dec
js
fisubrl
cli
out
adc
ds
cltd
push
jge
in
js
xor
or
arpl
stc
test
mov
sbb
insl
orl
int3
inc
insb
dec
push
fadd
xor
stos
dec
leave
subl
pop
les
aaa
add
push
mov
xor
mov
mov
mov
inc
xchg
stos
decl
xchg
pushf
mov
movsl
repz
jmp
loope
push
fwait
bound
sub
mov
loope
cmp
mov
les
fwait
mov
xlat
xchg
lods
or
adc
or
mov
sbb
ss
adc
adc
cmp
mov
sub
clc
pop
add
adc
test
call
add
xchg
mov
or
push
mov
sub
and
rorl
sbb
inc
adc
fiaddl
adc
jle
and
fs
dec
jb
push
mov
sub
cmp
pop
mov
sub
rorb
scas
movsb
mov
test
mov
or
push
call
xchg
xor
fs
mov
or
aam
aaa
lret
and
fsubrs
lods
into
movsl
shll
out
in
xchg
xlat
pop
pop
mov
pushf
in
sbb
pop
in
test
inc
je
rcll
xor
mov
sbb
lea
gs
jecxz
lods
lea
xor
jmp
add
mov
repz
push
lea
sub
push
lahf
mov
push
add
push
repz
movsb
rcll
add
push
ja
mov
xor
add
enter
popf
pop
push
or
fstps
sbb
dec
aaa
pop
pop
and
ffreep
push
fildll
icebp
ss
sub
push
mov
xchg
clc
jmp
jae
push
xor
data16
mov
fisttpll
scas
outsb
nop
sbb
shr
pushf
or
lret
lret
pop
fwait
pop
push
bound
xor
sbb
lods
sub
mov
push
sub
mov
mov
lahf
sbb
aam
sub
je
icebp
stc
pop
inc
aas
jno
jl
jo
adc
loope
lods
aam
shl
xor
lea
icebp
push
outsl
inc
movb
mov
outsl
movsb
pushf
test
or
dec
testb
int
sarb
pusha
push
xchg
pop
js
and
cmc
jmp
push
cmp
mov
xorl
cltd
stc
in
jecxz
shrb
jmp
pop
jl
jae
scas
xchg
push
push
insb
and
cmpsl
mov
sahf
or
pop
outsl
push
popa
outsb
push
jmp
aad
dec
cmpsl
mov
sbb
fdivs
call
popa
pop
cmp
sarb
xchg
dec
xor
imul
ficoms
cmp
int
movsb
fnstenv
call
int3
insl
scas
jns
mov
mov
mov
jl
add
rolb
add
adc
fnstenv
or
movsl
sub
gs
mov
sbb
jcxz
dec
xchg
leave
clc
hlt
mov
adc
adc
or
xchg
cmpsl
xchg
jge
xchg
mov
in
js
push
fld
pop
test
push
mov
pxor
pop
sbb
inc
scas
repz
dec
jg
mov
mov
dec
adc
out
cmp
in
shrb
pop
add
test
aam
hlt
das
fistl
fs
loop
and
sbb
imulb
cmp
ficoms
sub
adc
dec
arpl
sub
or
hlt
ljmp
or
xchg
fsubrs
lret
ret
popa
getsec
jne
cmp
jge
jnp
aam
lods
sbb
mov
mov
bound
lret
mov
add
es
dec
repz
pop
lahf
push
mov
stc
fs
aad
inc
cmp
fildll
jge
jno
lock
cli
lcall
lock
cmp
cmp
outsl
out
and
mov
addr16
sub
cmp
cs
and
mov
ficomps
loop
pop
mov
js
and
mov
jge
dec
fcmovnbe
lods
jge
push
out
or
inc
repnz
lods
popa
adc
ficoml
ret
fwait
rorl
cmc
cmc
leave
mov
fwait
dec
or
bound
stos
in
fisttpl
rcrb
les
jg
sbb
pop
sti
mov
push
sub
pop
enter
sbb
mov
das
jecxz
dec
fnop
push
push
subb
mov
fisttps
mov
mov
int
pop
xchg
mov
out
push
xchg
lds
movsl
jl
out
xor
inc
mov
adc
cmc
movsb
sarb
movsb
and
aas
loop
dec
insb
mov
or
bound
imul
ret
pop
lahf
pop
mov
dec
stc
les
out
mov
es
add
fwait
xchg
fcoml
mov
inc
inc
adc
jge
mov
adc
and
fwait
inc
push
test
aad
popf
cmp
addl
cmp
lahf
jl
jo
lahf
mov
mov
cltd
and
insb
fidivs
mov
jle
xor
test
rcl
icebp
mov
insl
cvttps2pi
push
daa
adc
inc
xor
int3
inc
js
jp
sbb
or
out
arpl
xor
stc
dec
xchg
pushf
jmp
adc
out
xchg
icebp
lods
outsb
mov
pop
dec
dec
add
add
jg
pushf
fisttpl
mov
lock
adc
inc
sbb
cmp
mov
push
les
pop
and
lahf
inc
mov
mov
fstp
mov
xor
dec
imul
push
outsl
push
and
xchg
add
or
out
sub
adc
ds
popf
out
fists
adc
pop
or
cmp
push
cwtl
mov
push
sbb
cs
std
xor
popl
inc
addr16
inc
dec
jecxz
into
enter
test
dec
inc
cmp
das
pushf
lds
mov
xor
jecxz,pn
sbb
sub
mov
sti
sub
jl
scas
jge
mov
je
jbe
insl
cmp
sbb
sbb
mov
xchg
cld
hlt
mov
mov
push
xchg
scas
ret
movsl
aad
lods
arpl
aaa
clc
push
xor
fstpl
out
sbb
repz
mov
loop
in
dec
add
sub
mov
in
add
repnz
ret
pop
xchg
mov
adc
mov
or
or
dec
sti
push
aas
insl
mov
xor
dec
subb
into
cmpsb
sub
cmpb
pop
mov
outsl
push
mov
jo
lea
out
push
sbb
js
jns
lock
mov
fcomi
dec
shll
jle
jp
adc
sub
cmp
in
mov
push
pop
lcall
fdivl
test
bound
push
arpl
addr16
and
jle
jb
js
jle
out
lds
stos
pushl
mov
push
mov
scas
outsb
scas
insl
xchg
in
imul
inc
jnp
xchg
test
jnp
lahf
mov
ret
jns
inc
mov
or
or
mov
mov
addr16
shll
repz
out
sbb
dec
inc
repz
inc
dec
pop
movsl
mov
popa
iret
mov
insb
nop
pushf
in
adcb
mov
adc
sbb
jne
sbb
sti
icebp
cli
aaa
ret
and
pop
lds
add
xor
push
pop
dec
pop
icebp
push
and
lock
xchg
add
pop
pop
and
ss
jo
xor
imul
out
xchg
xchg
dec
rcrb
mov
dec
mov
out
aas
stos
std
aas
push
lret
mov
aad
popf
sbb
sub
aam
jle
jae
jmp
pop
std
and
iret
movsb
inc
lods
dec
repnz
aaa
nop
pop
cmp
out
fbld
and
cwtl
fbstp
xchg
xchg
mov
hlt
cwtl
je
push
ss
imul
mov
nop
in
test
mov
pop
add
dec
insl
stos
jp
dec
jmp
js
pop
stos
jle
mov
pushf
mov
jp
fidivrs
cmp
ficoms
push
mov
jecxz
inc
cltd
mov
push
aaa
lock
cmp
jns
sub
or
pop
ljmp
inc
dec
and
out
push
lods
test
lods
lahf
adc
mov
pop
and
adc
lods
dec
xchg
sbb
jg
jno
dec
pushf
shrl
pop
push
push
lock
mov
iret
xor
xchg
sahf
rorb
aad
jp
mov
dec
and
pushf
movsb
adc
add
pop
or
xchg
repz
fcoml
inc
pusha
cmp
push
int3
subb
jbe
fdiv
fisttps
outsb
sub
mov
test
scas
add
jno
pop
sbb
jnp
mov
divl
jg
in
sbb
jp
push
or
call
rolb
xor
adcb
mov
ret
addr16
cs
mov
and
xor
mov
mov
std
icebp
in
cmpsb
loop
in
repz
arpl
lret
cs
fisubrs
shrb
dec
bound
inc
and
jmp
mov
sbb
fcomp
pop
es
mov
lods
pop
out
pop
mov
aaa
pushf
loopne
sub
fs
mov
mov
shrl
pop
in
popa
je
add
repnz
lcall
push
mov
pop
and
or
inc
addr16
cmc
mov
notl
xchg
lea
int
mov
test
movsl
jbe
jle
sub
lods
pushf
stos
out
pushf
jae
pusha
pop
and
fwait
xchg
daa
in
jb,pt
push
push
in
enter
xchg
movsb
or
aam
pop
push
enter
fldenv
bound
fs
xchg
std
std
cli
sub
outsb
mov
cltd
adc
movsl
ret
aas
cld
mov
and
inc
xchg
mov
shlb
xor
ror
xchg
pop
in
test
or
pop
mov
and
cwtl
cmp
xchg
or
jnp
rclb
pop
dec
pop
insb
daa
mov
lods
lcall
les
negl
xor
cmp
icebp
in
push
pop
sbb
out
orb
scas
mov
and
mov
mov
dec
scas
add
mov
cmp
push
adc
jmp
nop
dec
cmpsl
enter
cwtl
mov
mov
mov
xchg
jg
mov
je
loopne
lea
and
test
imul
pop
sbb
pop
xorb
pushf
jge
xchg
arpl
mov
xor
mov
adc
inc
jbe
xchg
decb
mov
jle
in
mov
or
ror
pop
mov
dec
dec
add
stc
in
jmp
out
mov
mov
rolw
and
or
out
clc
cmp
insl
push
sub
lock
xor
or
jns
popf
xlat
sub
cmp
rclb
mov
jnp
mov
subb
sub
push
mov
pop
sub
mov
leave
pop
cli
add
dec
sub
mov
orb
outsb
dec
aam
sbb
repz
data16
add
sub
add
aad
into
nop
cmpsb
dec
lahf
inc
or
mov
adc
outsl
data16
mov
adc
and
add
ja
sub
sbb
out
push
sbb
imul
dec
gs
mov
and
movsb
mov
jg
pop
pop
xor
lea
push
xlat
sbb
mov
pop
mov
les
xor
adc
leave
aam
pop
fs
enter
insb
call
insb
cmc
jmp
mov
addb
jl
inc
cli
jae
push
orl
shll
enter
xchg
shlb
push
arpl
add
xchg
push
ss
test
push
cwtl
testb
adc
or
in
mov
sarl
repnz
mov
inc
bound
daa
dec
push
arpl
inc
gs
loope
insb
lea
dec
cmp
ds
jb
pop
imul
fisttpl
imul
pop
rcrb
or
pop
fisubrl
or
sub
pusha
cmc
and
add
xor
xchg
ljmp
inc
stos
sub
add
xchg
jne
push
scas
out
jmp
sub
cltd
imul
in
mov
adc
add
bound
xchg
stos
push
mov
mov
insb
mov
jecxz
lret
inc
mov
push
rorb
outsl
in
in
lcall
add
sbb
inc
mov
cmc
xor
pop
add
mov
enter
movl
and
xchg
cmc
jbe
fstpt
or
sub
roll
test
dec
jge
mov
xor
loopne
sub
out
pop
and
add
outsl
sbb
jno
push
daa
jp
aaa
or
inc
or
icebp
int3
orb
sub
insl
cmova
mov
aam
lock
jno
js
add
sbb
xor
jmp
adc
cld
jle
mov
jnp
sbb
adc
mov
cwtl
ds
pushw
aas
add
lds
jle
and
bound
xchg
imul
arpl
pop
or
adc
cmpsb
xlat
jmp
or
shrl
mov
adc
out
add
push
in
cmp
stc
dec
sbb
shlb
lock
gs
jb
xchg
sub
xchg
adc
sbb
pop
dec
mov
aas
sbb
xchg
adc
aaa
cmpsb
faddl
mov
xchg
fcomps
lods
dec
sahf
in
imul
mov
call
ja
cmpsl
cmp
or
lods
mov
mov
cli
das
mov
in
dec
jbe
sub
lods
sub
push
inc
loope
roll
fistl
mov
xor
cmp
notb
cltd
mov
pushf
sbb
daa
lahf
push
push
fistps
sbb
mov
mov
or
push
imul
hlt
pop
inc
jg
or
add
or
in
dec
rcl
es
rcrb
inc
and
repz
xchg
add
cmpsb
aad
lds
jbe
xchg
push
test
mov
movsl
es
inc
jne
gs
xchg
add
cmpsb
aad
lds
jbe
xchg
push
test
mov
movsl
es
rolb
jne
gs
xchg
add
cmpsb
aad
lds
jbe
outsl
xchg
adc
ret
inc
and
cmpsb
adc
ss
in
pop
jbe
adc
outsb
or
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jmp
sti
xor
add
adc
adc
mov
sbbb
loop
mov
ret
jmp
sti
xor
add
adc
inc
fwait
push
imul
xchg
sub
cmp
or
sbb
jmp
sti
xor
add
adc
inc
fwait
push
imul
sub
jb
lahf
and
movsb
movsb
in
mov
inc
adc
inc
sbbb
mov
jecxz
pop
sbb
sub
xor
es
stos
lcall
xlat
pop
not
mov
movsb
xchg
jl
cmp
ret
adc
xchg
in
cmc
xchg
jle
xor
rcl
bound
pop
xchg
push
sub
mov
mov
fdivl
or
faddl
ret
arpl
stos
fwait
add
jl
insl
jnp
cmp
mov
aam
out
push
bound
add
out
mov
jle
mov
hlt
ret
sbb
icebp
add
subb
xlat
sub
mov
iret
sbb
sbb
sub
sti
xor
add
adc
inc
fwait
push
imul
xchg
sub
cmp
or
sbb
inc
popf
push
into
or
pop
and
into
push
fstpt
in
push
cld
lods
jp
outsb
inc
imul
add
pop
into
sub
sbb
ss
fmull
jno
mov
inc
lea
data16
push
mov
push
imul
xchg
sub
cmp
or
sbb
jmp
sti
xor
add
adc
inc
fwait
push
imul
xchg
sub
cmp
or
sbb
jmp
lcall
cmpsl
dec
fistl
test
je
ss
int3
or
les
cmp
mov
cmpsl
js
adc
cmpsl
pop
out
pop
xchg
adc
cs
jno
test
cmp
push
js
mov
fldcw
cli
or
mov
sub
mov
rcr
stos
push
pop
cmpsl
es
jo
and
dec
ljmp
add
xchg
pop
xor
mov
or
cmpsl
sub
scas
push
dec
iret
push
xchg
xor
mov
icebp
cmp
jnp
mov
aas
repz
mov
xor
jmp
jae
dec
sbb
popw
sbb
fcmovne
pop
fiaddl
pop
push
ss
sbbb
adc
test
fisubrs
jnp
and
push
gs
mov
pop
mov
adcl
fs
and
xor
sbb
stc
xchg
add
mov
xchg
negb
orb
fmull
dec
rolb
pushf
jo
sub
fistpll
dec
aas
and
or
call
push
test
and
cmp
clc
cld
or
pop
sbb
or
push
ffree
icebp
inc
or
add
aaa
xor
in
add
jle
js
clc
xchg
sbb
sbb
push
aam
mov
test
dec
idivb
das
stos
gs
shl
and
pmulhuw
das
inc
out
xchg
dec
inc
movsb
mov
aad
sbb
mov
fsubrs
icebp
fdivp
push
push
mov
movsl
mov
sub
popf
stos
fcompl
cli
and
outsb
sub
fiaddl
lea
adc
sub
int3
lock
iret
inc
jg
repz
bound
mov
jmp
scas
xchg
mov
ret
in
cld
mov
cwtl
dec
or
cld
decl
mov
or
clc
lret
inc
pop
xor
das
cmp
cmc
mov
mov
fsub
fbld
add
adc
push
fs
inc
lock
xchg
sbb
adc
mov
xor
ja
cmpsb
add
dec
mov
bound
popa
mov
rcl
push
xor
pop
out
xor
add
bound
nop
dec
dec
push
popf
or
xchg
and
dec
or
jno
push
loop
repnz
nop
push
cmpsb
cmpsb
fmuls
pop
xchg
jb
in
sbb
xchg
sarl
xchg
pop
gs
int
outsb
add
push
dec
push
lea
insb
dec
xchg
or
dec
in
xchg
add
jbe
sub
push
sti
cwtl
movsl
hlt
push
dec
sbb
mov
xchg
and
fbstp
sahf
cwtl
insl
mov
loopne
push
pop
js
mov
mov
jne
xchg
lcall
aas
or
mov
nop
add
lods
sub
std
mov
push
xor
js
das
jg
mov
std
add
pop
roll
data16
mov
pop
or
add
loopne
inc
lcall
xchg
mov
push
fsubrl
push
jo
icebp
ja
leave
ljmp
cmp
pop
bound
dec
aad
mov
popf
cmp
xchg
bnd
nop
xor
call
lods
mov
jge
inc
mov
jl
pushf
jbe
pop
gs
or
mov
ret
fnstenv
lods
pop
popa
or
xchg
lret
and
mov
mov
inc
and
cmp
out
aas
jp
sub
out
aaa
nop
inc
fwait
gs
or
push
mov
fwait
scas
loop
pandn
cli
mov
lret
in
andl
roll
sbb
cwtl
inc
fwait
mov
lcall
outsb
mov
in
test
mov
mov
mov
ficoml
push
jnp
das
push
adcl
xchg
mov
adc
mov
cmp
lods
inc
jo
pop
add
mov
cli
pop
sub
addr16
dec
jp
fimull
jg
hlt
mov
push
mov
inc
mov
mov
enter
repz
adc
scas
in
jle
addr16
aad
rcrl
pop
sbb
xchg
dec
sub
shrl
xchg
push
imul
xor
pop
push
push
mov
mov
sub
pushf
stos
jl
xchg
test
pop
jns
outsb
cld
push
shrl
xchg
pushf
jns
push
push
pusha
jns
inc
cmp
sti
mov
mov
xchg
stos
inc
add
hlt
cmp
xchg
mov
mov
repnz
inc
push
lcall
add
push
mov
clc
data16
push
dec
xor
or
mov
push
js
loope
push
push
jnp
mov
and
dec
pop
xor
dec
inc
aam
dec
sub
jne
jmp
and
rcl
insl
sub
outsl
ljmp
popa
jg
cmp
add
cltd
fstpl
push
add
out
lret
out
stos
add
pushf
jecxz
pop
push
bnd
mov
inc
mov
aad
out
iret
dec
lcall
fiadds
adc
inc
repnz
jo
xlat
pop
xchg
inc
popa
pushf
push
test
inc
pop
push
xchg
pop
fistpll
and
dec
push
loopne
int3
pop
cwtl
inc
pop
inc
jp
and
mov
push
ret
xor
rcl
shrl
dec
dec
js
xchg
fnstenv
dec
ja
mov
dec
sbb
fmuls
sub
outsb
pop
bound
dec
ds
ds
add
mov
js
push
xchg
pop
les
mov
fildll
aaa
mov
sub
jle
in
fisttps
es
shrb
repz
rorl
scas
mov
in
popa
push
push
adc
jp
ss
cmp
fidivl
pusha
sti
push
xchg
shl
pop
jns
jg
mov
clc
mov
inc
imul
aad
movsl
push
les
push
out
shl
stos
xor
jle
and
inc
xchg
jecxz
mov
insb
adc
push
sub
push
mov
add
jbe
sbb
call
mov
shrl
xor
pop
jo
inc
inc
enter
xor
add
add
mov
cmpsb
dec
and
mov
jbe
sahf
sbb
in
inc
xchg
push
arpl
adcb
mov
mov
dec
loope
and
mov
xchg
pop
icebp
fnstcw
enter
fiadds
repz
scas
pop
mov
fiaddl
mov
mov
sbb
aad
sub
inc
cmpsl
cmc
jp
shll
sub
outsb
or
add
out
imul
lock
fwait
push
sbb
adc
adc
mov
data16
scas
sti
in
jnp
insb
and
aad
mov
mov
or
shlb
pusha
daa
cmp
or
or
or
clc
nop
xor
cmp
inc
aad
add
movb
inc
jne
or
jp
fisttps
pop
adc
insl
xchg
or
aas
fstpt
stos
shlb
subl
add
imul
mov
mov
dec
lahf
inc
add
pop
push
mov
fwait
sbb
dec
pusha
int3
or
ret
pushf
mov
scas
cmp
imul
cmp
js
popf
mov
xchg
movsb
hlt
out
nop
xchg
mov
lods
sbb
pop
inc
push
jnp
mov
jae
insl
xchg
dec
or
sbb
icebp
icebp
pop
std
jmp
adc
fwait
dec
mov
adc
jno
enter
out
mov
dec
mov
lahf
push
jns
mov
inc
add
jg
cltd
stos
repz
mov
das
shl
sbb
xchg
xlat
loope
shr
push
popa
mov
fsubp
push
push
dec
ss
lret
mov
add
test
in
jbe
dec
jbe
dec
scas
mov
pushf
mov
mov
dec
jl
xchg
xlat
scas
mov
cmp
sbb
xorl
jp
mov
dec
push
cli
movsb
inc
xchg
xchg
ljmp
fstpl
inc
jp
mov
shlb
lea
loop
jmp
repz
push
jb
sub
fdivs
in
fxch
cmc
fcoml
or
out
outsb
mov
jmp
es
mov
loop
mov
jge
sub
cmp
cmc
repz
or
sub
lods
das
insb
jbe
mov
inc
pop
insb
cmc
jbe
pop
lret
loop
mov
push
adc
int
mov
push
mov
dec
pushl
push
cmp
dec
and
sbb
outsb
lcall
mov
push
fdivs
cli
in
std
or
jl
jne
das
inc
push
xchg
jae
lds
ret
mov
mov
cmp
adc
je
std
xchg
or
call
idiv
fcompl
xor
ljmp
sub
pop
aad
out
sub
out
inc
sar
fdivrl
stos
dec
cmpsl
add
add
scas
xor
in
push
jbe
lret
mov
dec
ljmp
adc
rcrb
mov
cmp
cwtl
es
xchg
bswap
push
jbe
flds
push
mov
lods
negb
mov
push
test
arpl
mov
movsb
lahf
sub
xchg
push
sub
mov
test
pop
xlat
in
or
dec
lds
adc
mov
and
xor
ss
repnz
inc
movsb
cmp
inc
inc
imul
out
in
arpl
xor
pushf
test
movsb
movsl
jae
lea
rol
pop
xchg
lock
int
pusha
adcb
and
fists
stc
popf
or
std
xchg
cmp
sbb
jl
add
jp
or
push
mull
pop
test
rorb
ret
fcmovnbe
int3
mov
fcoml
pushf
push
mov
push
push
fimuls
push
mov
or
adcb
pop
mov
addr16
addr16
testl
cmp
sbb
jbe
adc
pop
fimuls
movsb
imul
out
mov
cmp
cmpsb
in
leave
cmpsb
icebp
pushf
repnz
in
inc
xchg
icebp
pop
xor
cmp
adc
cmp
push
jg
lret
je
lahf
mov
adc
aam
xchg
and
in
jne
push
cmpsl
mov
out
xor
test
lahf
inc
fidivrl
xchg
xor
shl
xchg
dec
rcrb
cmp
insb
fisubl
add
or
add
fcomps
arpl
es
mov
pop
jae
testl
xchg
inc
and
xor
int3
dec
test
scas
push
jmp
push
sar
inc
or
cmp
out
dec
movsb
add
imul
push
clc
xchg
iret
push
in
xchg
dec
sbb
cwtl
pop
lods
pop
cwtl
and
arpl
stos
sbb
dec
xchg
xchg
stos
loope
push
or
rorb
arpl
je
xchg
fmull
sbb
jb
mov
sbb
cmp
mov
int
jne
test
mov
in
loopne
cmc
jae
int3
xor
adc
clc
jbe
pop
repnz
and
adc
dec
push
cmp
gs
add
jbe
rep
out
xchg
dec
loop
aaa
and
pop
cli
mov
or
in
sahf
jg
bound
daa
push
push
cmc
inc
sbb
lret
xor
je
push
adc
inc
push
sbb
movsb
popf
ds
pop
and
lcall
in
inc
sub
or
or
inc
test
push
in
add
mov
sub
add
xchg
dec
hlt
orb
mov
xchg
sarl
sub
test
test
cs
push
xchg
add
outsl
mov
aad
arpl
mov
lret
push
in
dec
shr
lods
fsub
movsl
pushl
and
push
inc
push
pop
cld
xor
stos
fldcw
fwait
nop
xchg
jmp
icebp
enter
xchg
sbb
cli
push
call
pop
lahf
lret
add
mov
rolb
aad
inc
cmp
xor
loope
ret
int3
gs
inc
lret
jae
and
mov
outsb
pop
adc
mov
hlt
sbbl
push
adc
cmp
mov
mov
and
pushf
inc
mov
inc
enter
imul
ja
xor
sbb
ljmp
lret
mov
nop
subb
imul
arpl
cmp
mov
popf
dec
and
inc
test
mov
push
jae
lock
pusha
out
mov
push
push
push
jge
pop
imul
divl
jecxz
cmp
sub
mov
stos
into
stc
jne
in
dec
repnz
lods
push
imul
cmp
mov
negl
lods
dec
ss
sbb
add
imul
push
xchg
mov
mov
jle
jo
add
int3
mov
mov
inc
cltd
data16
std
push
push
fstl
daa
scas
pop
mov
jbe
mov
divb
popa
lret
inc
jo
lods
pop
int3
movsl
clc
cmp
jmp
adc
dec
rcrb
dec
sbb
in
xor
mov
inc
call
scas
dec
lahf
mov
imul
xchg
mov
push
mov
add
mov
push
iret
sub
jb
jle
adc
mov
leave
cmpl
cmp
cs
enter
test
andb
dec
pop
sub
add
dec
jge
push
xchg
inc
jp
mov
rcrl
inc
sbb
and
pop
cld
out
mov
xchg
sub
push
xchg
xchg
gs
sti
jge
mov
inc
aas
adc
lret
mov
mov
jbe
jmp
sub
dec
xchg
sbb
mov
sub
inc
sbb
mov
dec
in
stc
jbe
int
sbb
dec
sbb
dec
flds
test
nop
out
and
pusha
aas
lock
mov
xor
lahf
mov
icebp
int3
pop
lret
sbb
mov
icebp
cli
lahf
or
xchg
int3
lock
in
daa
movsb
aaa
push
jbe
xchg
les
xchg
stos
repz
xor
lods
jp
mov
fstp
mov
inc
mov
sbb
rolb
pop
fildl
mov
pushf
push
fdivs
aad
bound
mov
mov
jle
inc
inc
push
clc
jecxz
enter
icebp
std
sbb
or
imul
sub
mov
mov
and
aas
leave
pop
or
aas
leave
pushl
and
xor
sti
jl
lds
pusha
iret
sbb
or
cli
sub
inc
repnz
rcl
mov
push
or
xchg
mov
clc
mov
and
dec
popf
mov
cmp
sbb
test
lods
cmp
nop
cltd
push
xor
add
leave
mov
sbb
repz
inc
divb
outsl
fldpi
xor
ja
mov
xor
test
mov
imul
mov
stc
push
nop
pop
insl
sub
out
mov
sub
sti
out
in
jecxz
cmp
jp
inc
xlat
xlat
repz
les
sub
lds
sbb
sbb
xchg
ret
jbe
mov
jae
add
jns
mov
into
test
icebp
jae
pop
push
xchg
rcl
push
pop
lahf
std
lahf
mov
aaa
notb
into
les
lock
mov
daa
fiaddl
outsl
mov
repz
mov
icebp
cli
das
and
mov
xchg
pop
in
inc
lock
mov
dec
rcll
mov
inc
add
jle
adc
or
std
out
jne
adc
repnz
dec
std
cmpsb
movl
stc
push
rorb
fmuls
test
test
mov
pop
adc
dec
imul
add
fcomi
andl
sahf
jae
pop
enter
iret
xchg
sub
pop
ja
test
cli
mov
rolb
shlb
repz
mov
cmp
mov
pop
xor
icebp
arpl
mov
das
fs
lock
and
mov
sbb
pop
mov
cmp
adc
push
adc
jbe
cmc
lds
jns
fucomi
jbe
cltd
jmp
push
in
xorb
add
leave
mov
pop
jle
test
and
aaa
mov
jb
loop
out
jl
nop
nop
pop
mov
movb
xchg
aas
cs
xchg
xchg
cmp
jns
and
adc
sub
mov
sub
test
das
lods
js
push
lock
or
xor
pop
push
jmp
loopne
adc
add
pop
mov
jo
xchg
lcall
adc
xor
arpl
xlat
sbb
push
inc
mov
mov
rorl
jmp
mov
pop
loopne
loop
mov
dec
sub
mov
mov
xor
lret
into
cmp
dec
sub
sbb
jmp
pop
sbb
or
fisubrl
or
sub
dec
cmp
scas
and
add
add
leave
xor
lods
sub
pop
add
pop
dec
jnp
ja
sub
in
shrl
sub
sti
mov
cmp
cmp
shrd
notw
lahf
cmp
inc
aad
mov
pop
mov
fsub
ja
and
std
xchg
sbbb
mull
mov
gs
enter
xchg
sub
test
rolb
pop
xor
std
leave
inc
or
xor
movsl
rol
push
lea
push
loope
icebp
sbb
push
sbb
lret
loope
mov
sub
mov
mov
mov
cmp
xor
aaa
xor
jmp
cli
int3
inc
or
mov
lock
adc
in
sti
cmp
hlt
leave
inc
mov
aad
mov
jnp
sub
push
outsb
push
mov
mov
sub
push
fdivl
push
hlt
mov
dec
dec
jle
out
mov
sub
jae
fnstenv
jb
mov
fsubs
repnz
lock
mov
jbe
out
sahf
fs
jp
mov
fisttpl
jp
divb
in
push
jbe
mov
inc
sub
sbb
sahf
pop
into
icebp
mov
mov
out
push
test
das
mov
mov
clc
mov
outsl
mov
pop
push
jnp
addr16
dec
mov
jns
int
jecxz
dec
jae
shlb
jb
sahf
xor
nop
stos
divl
xor
pop
pop
push
cs
in
pop
jo
mov
adc
pushf
push
movsb
push
cmp
nop
pop
scas
int3
add
sbb
in
das
dec
or
jae
dec
es
push
scas
jb
mov
in
ret
hlt
bound
xor
fdivrl
pushf
add
int3
pop
and
dec
out
lret
xchg
dec
add
adc
push
outsl
into
and
sbb
sbb
mov
cmc
pop
inc
les
call
lods
mov
jae
xchg
js
mov
lahf
lret
cmpsl
or
and
pop
les
pop
adc
xor
inc
outsb
es
into
adc
push
xlat
adc
std
jae
inc
push
mov
data16
xchg
sub
add
sub
mov
sub
icebp
sahf
les
cld
or
sti
aaa
outsl
push
mov
ss
inc
push
movsl
xchg
test
aas
sbb
jecxz
dec
mov
ja
push
jp
test
push
lods
scas
std
cs
into
pusha
cmp
xchg
cwtl
ds
dec
ss
sub
mov
fisubrl
scas
jae
push
cli
aad
inc
stos
aam
stos
add
xor
jns
mov
lcall
sbb
lods
loope
fstl
fstpt
pop
call
jnp
jno
in
ja
stos
fcoml
mov
mov
in
ffreep
icebp
outsl
sub
cmp
cmp
in
xor
push
sub
dec
sub
mov
movsl
js
aad
mov
sub
fimuls
jae
ds
adc
int3
mov
dec
das
and
scas
out
std
mov
sub
aaa
inc
xchg
add
add
pop
aas
ljmp
orl
bound
loop
ja
pop
mov
sahf
fcmovb
sahf
imul
pop
jo
insb
es
sbb
stos
inc
je
repz
xchg
popf
xchg
jge
jne
adc
insl
lds
cmc
in
ror
pop
add
sbb
cld
xor
mov
or
push
int3
jg
or
gs
aad
and
nop
add
shrl
adc
jmp
test
loopne
cmc
fmul
mov
inc
out
stos
pop
push
ret
pop
loope
aas
jne
xlat
ret
mov
xor
cmp
insl
push
mov
mov
jp
aas
inc
xor
mov
jnp
insb
xchg
mov
pushf
pop
pop
jno
mov
mov
jmp
scas
inc
cmp
orb
jno
or
push
pop
je
or
adc
mov
fs
sbb
hlt
add
adc
inc
fwait
push
imul
xchg
sub
cmp
or
sbb
jmp
sti
xor
add
adc
inc
fwait
push
imul
xchg
sub
cmp
or
sbb
jmp
sti
xor
add
adc
inc
fwait
push
push
jnp
dec
sbbb
jecxz
repnz
sbb
jmp
sti
xor
add
push
stos
bound
lods
xchg
pop
test
loope
pop
in
push
or
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
iret
cmc
jmp
out
mov
lret
pop
inc
inc
ja
inc
insl
adc
das
and
iret
out
xchg
lahf
test
pop
pop
inc
dec
adc
outsl
adc
aas
and
iret
in
out
testb
mov
mov
adc
pop
dec
popa
inc
imul
mov
push
xchg
pop
outsb
scas
aam
les
stc
xor
orb
ja
adc
jp
inc
xor
mov
outsl
test
aas
test
pop
and
dec
mov
leave
test
push
fidivrl
ljmp
loop
add
ljmp
mov
nop
dec
pop
out
push
popa
cvtps2pi
nop
dec
push
lock
int3
inc
xor
add
jae
out
mov
pop
sarb
outsl
mov
aas
fst
xor
ljmp
sub
mov
stos
pop
mov
jg
dec
adc
aas
adc
out
repnz
test
mov
push
insl
data16
or
aas
cmp
cmpsb
mov
sub
mov
enter
inc
aaa
pop
sub
add
popa
pop
push
aas
inc
inc
aad
out
loope
jmp
loopne
push
es
xor
adc
insl
jbe
inc
push
and
stos
nop
sahf
in
in
repz
push
pop
inc
dec
jne
outsl
adc
aas
and
iret
cmc
jmp
out
xchg
lahf
test
push
pop
inc
dec
jne
outsl
adc
aas
and
dec
lods
fimuls
ljmp
ss
cmc
push
arpl
adc
push
jns
xor
dec
cmp
jnp
adc
adc
hlt
lret
lods
xor
mov
into
sub
mov
pop
xchg
cli
mov
pop
dec
mov
mov
adc
add
and
pusha
push
repnz
in
push
mov
dec
pop
mov
cmp
mov
por
in
loop
mov
loope
mov
sbb
inc
sub
hlt
stos
pop
call
push
test
and
outsl
out
adc
stc
test
test
add
je
mov
ja
bound
push
dec
ljmp
out
aad
js
or
xchg
pop
js
xchg
mov
popf
mov
sbb
pushf
or
aas
mov
xchg
or
xor
sub
in
sbb
sbb
ss
push
add
pop
insl
adc
mov
and
popf
rcr
test
in
jmp
cmpsb
aad
and
lea
int3
insl
dec
push
sub
sarb
dec
and
inc
sbb
addr16
inc
and
popa
test
es
test
cmp
popa
xchg
or
subl
mov
shll
add
add
daa
adc
dec
pop
mov
gs
sub
movsb
nop
pop
jno
add
jl
sub
fstl
test
mov
shll
int3
xchg
rcrl
mov
pop
mov
lret
add
and
inc
in
and
into
xchg
lcall
add
fstps
cwtl
insb
popf
inc
stc
and
push
xchg
add
popa
rcr
adc
inc
les
lret
sbb
out
pop
lret
dec
jge
popf
movsl
mov
pop
xor
bound
mov
lds
lea
outsl
cmc
adc
mov
xchg
mov
lret
leave
outsb
mov
test
mov
inc
insb
mov
and
or
cld
ss
jbe
adc
inc
mov
insb
shrb
cltd
or
push
xor
fwait
sub
cwtl
lods
stc
jbe,pt
aaa
bound
popa
cltd
es
enter
xor
adc
jl
or
lea
dec
and
xlat
push
add
dec
jmp
push
iret
and
shrl
rorl
mov
jmp
adc
pusha
andl
scas
adc
mov
xchg
imulb
dec
jge
dec
imul
and
in
inc
orb
in
pop
in
add
mov
jl
lods
orl
or
push
pop
ljmp
pop
imul
cwtl
push
inc
or
pop
addr16
push
lahf
xor
mov
adc
rclb
mov
mov
loope
inc
ljmp
xor
push
std
mov
push
mov
pop
mov
and
repnz
jecxz
jo
xor
popf
arpl
fistpll
mov
pushf
xchg
mov
sbb
out
dec
fnstcw
mov
jbe
inc
mov
mov
ja
shlb
lea
push
pusha
dec
test
adc
rorb
mov
repnz
icebp
jne
sbb
pop
rcrb
jmp
or
aam
data16
arpl
mov
inc
inc
pop
inc
mov
inc
inc
pop
jmp
mov
rorb
enter
mov
stc
add
inc
fstpt
lahf
idivl
adc
xor
cs
out
sbb
pop
in
movsl
jle
pop
sub
fsub
call
fs
mov
movsl
pop
add
or
shrl
jo
mov
or
mov
add
pushf
mov
outsl
jecxz
test
sub
test
pusha
sbb
stc
adc
add
ja
out
lea
add
add
dec
cmp
enter
int3
lret
pop
jo
lods
and
out
or
push
mov
ljmp
js
sub
xor
movsl
loopne
or
fdivr
fdiv
mov
std
test
and
jl
or
lock
stc
subl
popf
repnz
js
fistpl
stos
inc
int
pop
dec
dec
movsl
pop
pop
rolb
repz
sahf
cmpsb
enter
pop
jb
cmpsb
cmp
iret
fisubs
push
hlt
add
and
out
daa
pop
dec
mov
jecxz
sbb
in
dec
push
test
or
push
out
out
adc
outsb
cltd
stos
mov
sub
testb
lret
fstl
inc
aas
mov
inc
mov
out
adc
mov
fistpl
movsb
inc
lock
mov
das
sub
inc
aaa
xchg
stos
and
fiadds
inc
xor
push
repnz
mov
sbb
es
add
adc
push
lret
inc
xorb
and
and
xor
push
stos
scas
push
pop
cli
fimull
pop
xlat
push
mov
enter
mov
lods
clc
mov
scas
aaa
push
inc
adc
jo
jmp
xchg
dec
rclw
push
aaa
adc
ljmp
push
xor
movsl
andb
xor
pop
pop
call
mov
inc
lret
adc
cwtl
rcll
std
repz
scas
jmp
jle
add
adc
div
xchg
cwtl
adc
repz
and
and
dec
arpl
pop
cld
jmp
pop
jno
leave
jnp
sub
xor
daa
push
push
inc
clc
and
xchg
test
jp
xchg
pusha
fildl
repz
and
mov
rclb
push
mov
jo
xchg
pop
mov
sub
int
mov
aam
xchg
adc
sbb
sub
mov
adc
mov
pop
adc
pop
lock
stos
cmp
and
loope
adc
inc
mov
xlat
cmp
sti
cmc
and
cmpsb
jns
or
and
sub
mov
push
lds
xlat
dec
jns
orb
mov
insl
shl
loopne
movsl
faddl
pushf
dec
arpl
icebp
inc
push
mov
mov
lahf
and
xchg
dec
lods
push
mov
xor
add
pusha
jbe
test
mov
pop
mov
iret
adcb
inc
cs
xor
hlt
adc
pop
lret
and
and
dec
std
or
inc
ficomps
or
fsubrs
adc
add
addr16
loopne
mov
mov
shll
jae
or
add
mov
out
movsb
andl
cmpsl
jmp
stc
int3
psubb
add
rorb
shr
aam
jnp
or
imul
dec
xor
outsl
imul
pop
mov
icebp
lcall
fidivl
outsl
dec
outsl
adc
cmp
or
cld
pop
pop
ret
sti
and
adc
aaa
mov
or
pop
mov
lods
pop
mov
dec
or
gs
mov
lods
into
push
push
pushf
sub
lahf
inc
and
add
lods
or
jmp
mov
cli
mov
lret
xchg
jge
dec
cld
shrl
cmp
xchg
nop
mov
mov
sbb
jl
mov
mov
jmp
imul
cltd
mov
rcrl
and
xor
in
mov
add
pop
pop
out
push
out
fsubl
pop
jle
enter
sbb
sar
fildl
cmp
push
fwait
and
xlat
mov
cmpb
inc
jle
and
push
call
pushf
inc
or
mov
cmpsl
out
sbb
test
enter
jge
fcoms
or
fs
popf
xchg
inc
push
sub
jmp
insl
cmpsb
es
out
flds
lahf
outsl
xchg
pushf
cmp
sub
xchg
inc
stos
push
mov
dec
je
and
testb
or
aad
daa
add
xchg
adc
jno
pop
pop
jbe
or
ja
out
mov
aam
in
fcompl
fimuls
lds
push
dec
stos
push
inc
pop
add
sub
push
out
shlb
subl
imul
mov
ds
sahf
adc
push
add
mov
cmp
out
add
pushf
in
mov
ret
outsl
push
aaa
fidivs
xchg
jmp
sub
movsb
mov
lret
stos
cmc
mov
sarb
push
add
or
cwtl
ror
ljmp
push
insb
rcll
xchg
scas
dec
cld
cs
adc
sbb
push
sub
cmpsl
mov
fisttps
push
push
xlat
mov
popf
test
out
cmp
lods
mov
js
repnz
sbb
sbb
mov
adc
loop
fsubrl
xchg
add
jb
add
fcoml
inc
mov
imul
in
add
or
push
add
flds
sti
ror
mov
popa
cli
adc
pusha
cmp
xchg
mov
in
sar
ss
lods
pop
mov
cmp
aam
cmpsl
mov
adc
push
sub
js
cmpsl
cmp
or
sti
out
nop
shl
push
pop
inc
mov
dec
add
in
mov
addr16
add
adc
imul
jne
inc
xor
jno
outsl
adc
fidivs
outsl
adc
outsl
jecxz
cmp
jbe
pop
xchg
inc
add
rcll
add
inc
arpl
cs
and
adc
pop
mov
sub
or
cmpsb
cmpsl
test
cmp
jns
test
cmp
jmp
ds
lcall
pushl
es
xchg
push
lock
cmp
cmp
scas
inc
pop
xchg
push
cli
xchg
dec
leave
mov
and
lcall
inc
addl
xchg
adc
xchg
adc
bound
push
mov
mov
cwtl
xchg
cmpsl
insl
rorb
lret
and
stc
and
addr16
xor
or
test
movsl
add
cltd
jbe
or
cmc
and
mov
inc
or
loopne
repz
cmp
dec
cmp
mov
sbb
sarb
es
cmpsl
arpl
pop
fmuls
adc
divb
fstps
jp
test
outsl
mov
sbb
mov
mov
sub
xchg
or
jo
ja
push
ja
push
cwtl
lahf
out
xchg
adc
std
xor
and
popl
addl
adc
xchg
out
test
pop
rclb
in
outsb
dec
in
ret
mov
push
call
jg
fadds
sti
cwtl
mov
mov
dec
sahf
push
xor
push
stc
jecxz
data16
and
fwait
xor
push
insl
iret
cltd
repnz
ret
inc
repz
jns
test
test
sbb
bound
push
out
inc
adc
pop
call
scas
add
xor
jbe
mov
mov
gs
push
nop
aam
int
push
out
movsb
daa
sti
dec
xchg
hlt
scas
mov
pop
xor
leave
add
sub
sbb
add
outsb
xchg
mov
inc
mov
ss
stc
insl
cmpsl
out
fcoms
das
je
ret
jns
call
mov
movsb
jle
test
rcr
mov
inc
shlb
scas
mov
pop
mov
push
xchg
mov
inc
sbb
add
inc
sahf
xor
inc
and
scas
jecxz
cwtl
lods
sbb
test
repnz
mov
repnz
clc
pop
xlat
lea
jecxz
rcr
test
and
pushl
cltd
rol
int3
out
sahf
add
fstpt
pop
ficompl
mov
outsl
mov
imul
aas
mov
pop
xchg
jbe
pop
and
leave
add
cmp
arpl
test
push
aaa
sti
jl
testl
pause
inc
xor
jl
push
das
dec
sbb
inc
cltd
mov
add
pop
xchg
xor
ret
pop
add
dec
fnstcw
dec
jo
xor
cs
subb
cwtl
sti
fimuls
pop
movsb
mov
lds
cmp
inc
xchg
scas
in
fmuls
dec
add
into
fadds
add
enter
pcmpgtw
cmpsb
jecxz
arpl
jb
and
addr16
xchg
imul
cli
test
cmp
push
or
pushf
push
and
test
out
mov
cltd
mov
sbb
xor
mov
ret
movsb
ljmp
dec
out
lock
mov
mov
inc
push
jl
sahf
fistl
push
pop
fistps
sbb
cmpsl
push
or
add
mov
test
mov
movsl
cmp
test
out
pushf
mov
movsl
stos
daa
cli
out
ficoml
push
push
popa
inc
ret
cltd
movsl
cmp
inc
jg
jmp
dec
push
cmp
and
jnp
lahf
cmp
int
scas
stc
aaa
sbb
out
push
push
xchg
cmp
rcll
dec
push
pop
jb
dec
push
inc
push
movsb
jns
push
dec
arpl
mov
inc
bound
dec
dec
sbb
icebp
mov
inc
and
and
arpl
or
cmp
test
cmpsl
pop
fidivrs
popf
stos
mov
push
outsl
pop
int
ja
lea
pop
aas
ja
push
xchg
cmp
repnz
jbe
adc
inc
clc
sub
pop
and
enter
push
xchg
jg
add
xchg
cmp
loop
jmp
pop
mov
bound
out
ret
lods
aas
ljmp
push
scas
push
dec
sub
dec
movsb
and
add
push
sub
adc
test
movsl
push
xor
adc
dec
or
push
xchg
out
sbb
mov
lds
cmc
mov
pop
mov
jno
into
cmp
push
add
push
mov
inc
sub
xchg
push
mov
dec
cwtl
mov
push
loopne
xchg
xchg
hlt
ljmp
push
inc
lods
and
push
push
mov
jnp
xor
sub
mov
sbb
movsb
dec
add
mov
ret
les
clc
call
mov
adc
andb
push
aam
push
sub
ja
incb
mov
sub
add
int3
imul
ss
dec
mov
inc
cmpsb
fst
out
out
stc
sbb
call
jb
loopne
das
es
fs
jbe
pop
mov
mov
std
test
fisttps
sbb
inc
dec
mov
iret
mov
pop
cmp
in
repnz
cmp
lods
jle
dec
loopne
or
cmp
scas
stos
pop
pushl
or
and
js
mov
jmp
insl
inc
enter
lret
xor
add
sahf
xorb
mov
xor
lret
enter
add
cld
in
ret
repz
add
cmp
pop
push
dec
adc
adc
and
mov
sub
cs
push
xchg
add
sub
roll
push
icebp
jl
push
pop
aad
inc
in
repnz
dec
ljmp
subps
sbb
inc
les
repz
das
inc
stos
lret
pop
test
stos
mov
mov
out
je
adc
pop
adc
testb
xchg
shr
jae
pop
and
pop
pop
int
jle
add
jp
icebp
rcrb
in
rorb
clc
fdiv
mov
test
add
or
andl
mov
add
stos
das
or
sub
scas
cmp
or
test
shrl
rcll
test
outsb
sbbl
jl
jle
clc
inc
addl
aam
ljmp
insl
pop
or
xchg
mov
in
inc
in
mov
cmp
fcoms
rolb
cmp
or
push
outsl
in
push
aas
flds
insl
mov
stos
repz
sbb
jmp
push
loop
pop
lods
or
push
sub
cmpl
clc
rcr
xchg
xchg
pop
dec
popa
xorl
inc
and
ds
sub
inc
cmp
fldenv
or
sarl
jbe
icebp
pop
iret
jbe
into
jg
and
dec
push
adc
mov
call
je
jne
xchg
mov
jno
fidivl
imul
sub
sbb
and
lods
ficomps
mov
dec
loop
push
xor
jg
xlat
hlt
movhps
push
fs
sub
pop
nop
fistpll
add
sub
jecxz
out
or
es
mov
pop
or
mov
xor
jnp
mov
sub
movl
repnz
ror
jg
fsubp
lret
aad
mov
xor
lcall
sbb
pop
pop
mov
and
icebp
mov
dec
int
adcb
les
divb
or
loop
or
movsb
int
in
icebp
int
dec
sub
pop
filds
icebp
pop
mov
rcll
mov
fmulp
sbb
mov
dec
push
jmp
in
xchg
jle
cmp
mull
stos
xchg
add
or
inc
out
jmp
mov
fst
fstl
lahf
fistpl
loope
lahf
jmp
mov
test
jge
lret
cs
punpckhbw
mov
jne
cmp
mov
out
xor
cli
enter
push
pop
inc
mov
add
sti
push
ds
push
pop
scas
cli
pushf
fisttpl
mov
inc
scas
repnz
mov
jo
sub
fwait
push
push
gs
and
xchg
rorl
in
cmp
sub
insb
pop
jg
aad
add
repnz
and
pop
loopne
mov
clc
dec
or
stos
shr
and
lret
test
pop
testb
jp
enter
add
inc
cltd
or
mov
fnstenv
push
xor
lret
scas
jo
imul
fwait
jge
adc
push
mov
sbb
sub
popa
mov
sahf
adc
scas
add
andl
and
sub
mov
sarb
mov
mov
outsb
cmpsb
cmpb
int3
mov
jbe
fsubrl
lcall
push
pop
fcmovnu
adc
or
push
inc
mov
in
cs
daa
stos
mov
dec
push
aad
fsubl
add
sub
and
mov
xor
pushf
mov
fnstenv
push
jle
jnp
mov
loopew
mov
pop
shll
sbb
lods
lds
xchg
jmp
adc
cmp
inc
int
push
in
jle
sbb
sub
dec
aad
inc
pop
mov
inc
xchg
push
cld
sbb
dec
lea
or
xchg
push
mov
daa
jl
or
subb
je
imul
loopne
aad
sahf
dec
push
mov
insl
ljmp
movsl
sub
adc
cld
jg
mov
and
aaa
shll
adc
adcb
inc
icebp
fsub
jno
lods
mov
lock
into
in
orb
std
call
rclb
sbb
jo
pop
and
adc
mov
dec
shrl
cld
jno
or
add
adc
sbb
scas
insl
clc
jl
mov
ljmp
sti
out
cmp
sbb
and
mov
test
jne
call
inc
sbb
adc
mov
adc
fidivrl
cltd
lahf
fsubl
adc
adc
jns
outsb
mov
pusha
mov
pop
push
pop
out
std
xchg
mov
outsb
push
andb
jecxz
arpl
nop
xchg
mov
gs
or
pushf
das
mov
sbb
mov
xor
sbb
je
pop
push
mov
add
daa
lods
jecxz
or
push
movsb
les
lahf
in
inc
enter
xchg
fsubrl
and
lret
jnp
popf
mov
out
sub
jecxz
inc
stos
jle
mov
mov
mov
mov
fidivrs
pop
inc
inc
mull
push
or
lret
aam
sub
adc
pop
jae
inc
sub
cmpsb
adc
pop
add
jg
aad
int
cmc
pop
leave
leave
pushf
mov
sarb
leave
aam
and
mov
sbb
cltd
repnz
cltd
js
xchg
mov
scas
lds
inc
notl
xchg
mov
dec
cmp
shrl
fstpl
les
ss
in
inc
std
mov
je
mov
dec
repnz
lret
fwait
cli
scas
jo
iret
int3
cmc
or
mov
lret
inc
add
or
or
scas
gs
pop
jne
into
jne
sbb
cmpl
les
fimull
in
sbb
je
push
mov
xchg
in
cmpsl
icebp
lock
cmp
bound
and
or
adc
out
cs
fsubr
inc
sub
mov
or
out
cmp
fisubrl
xor
jge
aas
icebp
cld
push
jae
xchg
jnp
sub
jmp
inc
jle
push
push
jbe
mov
or
in
mov
fists
lea
add
iret
out
in
xchg
lahf
test
push
pop
inc
dec
jne
outsl
adc
aas
and
iret
cmc
jmp
out
xchg
lahf
test
push
pop
inc
dec
jne
outsl
adc
aas
and
iret
cmc
jmp
out
xchg
lahf
test
push
pop
inc
dec
jno
outsb
adc
ds
loope
icebp
iret
ret
jmp
out
xchg
lahf
test
stos
pop
mov
sbb
lock
shl
bound
push
mov
add
sbb
shrl
jge
insl
jno
popa
lea
inc
lods
xor
and
std
add
mov
shrl
cmp
popa
lea
inc
scas
xor
and
adc
add
icebp
ret
mov
movsb
pop
rorb
enter
out
insl
add
adc
mov
loope
xor
fdivrp
nop
insl
mov
cmp
xor
in
pushf
and
add
xor
xor
cmp
pop
mov
cmp
cltd
jl
loopne
pushf
pusha
mov
and
lcall
mov
jge
dec
adc
popa
popf
jno
lods
adc
icebp
push
add
loope
daa
pop
rorb
sub
push
pop
repnz
xchg
mov
mov
push
sub
stc
sub
cltd
dec
xchg
sbb
loop
leave
dec
adc
jle
mov
xor
lods
les
jmp
sbb
dec
xor
nop
jge
jmp
push
cmp
xor
and
adc
add
fwait
loope
shrl
mov
add
decb
xorl
mov
cltd
pop
push
dec
mov
xor
cmp
cmp
or
fsubs
int3
and
mov
adc
mov
pop
movsb
dec
cli
or
sahf
push
pop
lret
dec
lret
popa
into
jo
and
adc
add
icebp
sbb
shrl
jge
insl
jno
popa
lea
inc
lods
xor
and
adc
add
icebp
sbb
shrl
jge
insl
jno
fs
fcompl
adc
arpl
mov
xchg
jmp
push
mov
cmpsb
fisubrs
imul
aas
loope
outsl
lods
push
dec
xchg
jo
dec
jecxz
mov
out
pop
push
out
int3
nop
mov
fs
sub
fwait
enter
shrl
push
cmp
jge
leave
cmp
adc
inc
cmpsb
test
mov
loope
pushf
dec
mov
and
xchg
mov
das
jp
cmp
lahf
cld
lds
out
leave
scas
dec
xchg
cmpsl
push
pop
mov
mov
add
mov
mov
mov
and
iret
ja
lret
push
mov
xor
cmp
sbb
mov
mov
inc
decl
mov
fldl
pop
cli
out
cli
fs
repz
test
xor
popf
call
punpcklbw
mov
cld
add
dec
jno
add
pop
adc
stos
xorl
lahf
subb
sub
fdivl
stc
jecxz
movsl
and
fsub
cmpsb
shrb
mov
adc
mov
jecxz
inc
sub
cmp
icebp
dec
add
aas
xor
popf
popa
pusha
enter
push
andl
dec
ss
call
ds
loope
icebp
daa
pop
jl
or
fidivrl
es
cmp
fmuls
nop
pop
xor
adc
imul
out
add
mov
jae
pushf
dec
add
call
adc
cld
jecxz
push
imul
fsubr
inc
ficompl
mov
or
and
negb
les
or
xor
pop
and
dec
push
lahf
out
iret
xchg
ja
xor
mov
imull
scas
cmp
xchg
push
jecxz
ja
pop
mov
cs
lods
jb
sbb
or
and
in
jb
adc
add
cmpsb
sbb
pushf
insl
je
add
scas
push
inc
test
cmp
insb
jnp
push
imul
aas
xor
ss
adc
adc
stos
cmp
jnp
xor
insb
outsb
andl
jne
or
xchg
insb
jae
pop
arpl
and
popa
add
loope
ret
shrl
push
pop
clc
test
mov
lcall
mov
rcrl
fldlg2
mov
dec
push
xchg
divb
and
inc
roll
pop
test
pop
call
push
inc
dec
cmpsl
in
inc
sbb
in
daa
pop
and
push
jge
jp
adc
insl
stos
add
je
inc
or
jno
pop
or
leave
push
jp
pushf
mov
inc
stos
shld
mov
ja
paddb
fadd
enter
push
fsubl
sbb
dec
xchg
cmp
xchg
lret
jbe
mov
pop
xchg
loop
jmp
lods
or
mov
xor
dec
cmp
fwait
push
inc
movsb
les
movsl
xor
xchg
mov
adc
popa
imulb
outsb
and
lods
jge
leave
inc
xor
sbb
inc
nop
sub
outsl
pusha
jne
or
add
test
sahf
sahf
mov
adc
negb
ljmpw
pusha
ficoml
jg
jecxz
dec
mov
imul
inc
insl
mov
xchg
in
dec
iret
push
cmp
and
pop
push
sub
sub
sarb
rcrl
mov
pop
int3
jp
aas
cmp
push
pop
pop
fisubrs
and
call
ret
div
out
gs
xor
lcall
mov
xchg
sahf
and
adc
xor
xchg
sub
pop
mov
push
push
xchg
and
adc
sahf
out
je
repz
in
jle
jmp
fidivs
pop
push
xchg
xchg
sahf
stos
or
mov
dec
nop
push
int3
add
stos
std
dec
or
xor
dec
loop
mov
xchg
out
daa
inc
add
pop
std
mov
sub
aad
lret
mov
mov
es
leave
clc
mov
movsl
insl
fsubrl
xor
cmp
jne
sub
mov
pop
inc
jl
xchg
or
cmp
pop
add
jmp
pop
out
push
mov
arpl
push
pop
aas
js
jmp
sub
mov
pop
xchg
loopne
jo
shlb
dec
mov
dec
and
cs
ds
sub
xchg
pop
jmp
sldt
notl
mov
shlb
inc
popa
dec
xor
int3
xor
mov
pop
push
jnp
push
mov
pop
lods
pop
or
ficompl
sbb
clc
mov
mov
lahf
sub
lods
mov
out
fs
insb
fwait
pusha
std
call
xchg
sbbb
pushf
push
push
xchg
rol
dec
movsl
sub
sarb
sub
pop
lods
mov
fnstsw
sbb
into
idivl
adc
lret
inc
mov
mov
and
imul
jbe
insl
arpl
lea
inc
call
xor
inc
xchg
or
loope
sbb
add
inc
call
cmpsl
in
sbb
sbb
loope
pusha
sbbb
fidivrs
jecxz
pop
jo
bound
test
or
push
mov
or
cmp
mov
outsl
mov
sbb
pushf
pop
sbb
sub
addr16
stos
cmp
xchg
dec
sub
je
out
mov
sub
pop
push
jmp
inc
mov
and
mov
enter
cli
mov
jo
popf
daa
divl
inc
fisttps
push
cmp
int3
test
insb
push
sahf
call
mov
lea
sub
cmp
mov
int3
push
inc
jg
adcl
and
mov
mov
fidivs
add
movsb
icebp
je
jns
jle
into
adc
loopne
aaa
adc
sbb
inc
lahf
js
add
xor
pop
jecxz
lcall
outsb
jno
mov
cmp
dec
inc
pop
jecxz
leave
push
mov
mov
stos
mov
shlb
inc
out
sub
pop
xchg
xor
test
pop
xchg
mov
enter
lahf
negb
jbe
xchg
sarb
ret
adc
add
xor
or
xchg
dec
lds
pop
hlt
push
jne
lods
and
jmp
dec
pop
mov
sar
mov
inc
stos
dec
push
sub
dec
mov
data16
xchg
and
sbb
add
jp
mov
dec
xor
inc
daa
stos
adc
mov
cmp
das
xchg
lods
shlb
sbb
js
inc
cmp
sbb
inc
xor
or
imul
mov
mov
pop
imul
cmpb
xor
pop
lds
outsl
cmp
insb
js
out
negl
fwait
mov
xor
sbb
call
testl
inc
jp
pop
ljmp
cmp
cmp
xor
loopne
and
and
or
decl
xchg
lods
xor
add
rcrb
test
mov
or
xor
mov
clc
xchg
pop
lcall
inc
ds
fnstenv
push
aad
inc
mov
pop
mov
pandn
mov
cwtl
test
lahf
scas
or
lea
rcll
inc
jmp
jb
sub
cmc
stc
lcall
push
iret
mov
cmp
dec
cli
iret
cmp
pop
mov
push
sub
xchg
and
insl
adc
adc
ja
sub
inc
xchg
mov
lock
iret
pop
je
subb
stos
std
lret
mov
xchg
testl
jb
das
inc
and
gs
add
mov
mov
repz
xchg
inc
fmul
loope
cs
mov
mov
call
outsb
mov
rclb
fiaddl
cmp
adc
call
or
xor
xorl
ret
test
loopne
and
fadds
jbe
lods
stos
sbb
orl
inc
subb
sbb
lret
insl
cmp
movsb
sar
mov
lds
add
rol
jb
ja
or
cs
xchg
mov
push
mov
mov
push
subb
adcl
loop
cmpsl
push
lret
xchg
fistps
sbb
stos
pop
xchg
movsb
scas
ja
inc
js
outsl
jp
out
add
jle
bound
loope
into
lret
iret
mov
mov
add
mov
inc
jb
xor
add
add
adc
gs
jo
xchg
aam
popa
mov
push
ret
dec
jle
pop
cmpsb
mov
add
add
fimull
and
or
sub
scas
scas
or
inc
mov
lahf
pop
clc
jp
lret
iret
ret
jo
hlt
loope
add
jle
cmova
sbb
jmp
loopne
jg
cmp
je
mov
lcall
roll
mov
push
dec
push
pop
pop
mov
shll
mov
cltd
dec
jb
lahf
push
xchg
enter
adc
inc
cwtl
push
add
cs
fdiv
xchg
inc
sub
mov
or
xorb
rcll
lcall
rolb
sub
pop
inc
pop
mov
je
push
scas
es
dec
int3
jb
push
add
inc
mov
cmp
fidivrs
xor
inc
stc
jns
cmp
xor
add
dec
iret
mov
jo
ds
pushf
sub
rorb
aaa
es
push
int3
mov
dec
or
aad
xorb
std
sbb
sti
das
dec
add
or
push
pop
and
icebp
pop
inc
cmpsl
popa
stos
scas
mov
cmp
xlat
or
push
fcoms
mov
mov
pop
aam
sub
xchg
push
in
xor
js
pop
inc
jp
xchg
clc
jbe
jg
mov
pop
mov
imul
daa
int3
mov
enter
cmp
clc
cs
mov
mov
xor
insb
shl
fiaddl
std
add
mov
sub
clc
xor
imul
xchg
cwtl
aad
pop
xor
push
push
inc
mov
mov
lods
sahf
lock
add
inc
sbb
xchg
cwtl
div
daa
inc
mov
fldcw
sbb
sbb
sub
adc
mov
iret
dec
lahf
mov
addr16
aas
cmp
mov
push
out
and
call
insl
data16
sbb
and
outsl
push
scas
adc
movsb
xorl
rorl
test
mov
mov
les
mov
xor
out
jae
aas
bound
jle
or
ret
movl
addr16
sti
in
mov
ds
andl
mov
lock
out
mov
lock
pushf
leave
addl
push
cli
stos
sub
pop
xchg
jbe
cld
cmp
pop
xchg
push
mov
jle
mov
addr16
std
xchg
push
push
push
push
jl
xor
mov
sti
arpl
xor
dec
out
adc
lcall
insl
andb
mov
lods
add
insl
ffreep
jns
test
and
mov
fcomp
push
cmpsb
mov
mov
inc
ljmp
adc
sub
cltd
push
xor
sub
jnp
pop
aad
jne
pop
cmp
xor
mov
and
arpl
adc
add
push
jp
mov
push
ret
and
and
sar
pop
push
mov
push
stc
lret
mov
sbbl
inc
pop
lcall
inc
cmp
hlt
orl
nop
jl
cmc
mov
imul
lcall
addr16
divb
adc
mov
and
push
lret
push
sub
sahf
mov
pop
cmpsl
cltd
xchg
cmpsl
fisubrl
mov
repz
dec
loope
ds
clc
mov
mov
push
jnp
daa
mov
jno
aad
femms
inc
dec
mov
mov
addl
jg
sbb
jae
pop
push
sti
test
or
loope
and
inc
jecxz
rol
std
jmp
pushf
mov
jb
cmp
pusha
mov
pop
into
and
icebp
daa
test
into
cmp
lahf
jno
push
xchg
push
int3
test
mov
sbb
inc
jb
aam
adcl
xor
push
mov
in
mov
cmpsb
adc
inc
les
mov
outsb
movsl
in
test
pop
lock
in
outsl
popa
ss
sbb
pop
xor
xchg
mov
mov
cs
jl
inc
std
outsb
pop
sub
mov
es
outsl
mov
mov
test
pop
push
dec
dec
dec
les
aad
inc
mov
mov
shrl
mov
push
test
cmp
fs
dec
and
or
cmp
mov
out
sbb
hlt
cmc
rorb
inc
mov
mov
enter
pop
std
mov
add
insl
jecxz
mov
clc
popf
scas
enter
cmp
mov
xor
imul
mov
lock
dec
shlb
or
add
add
cmp
mov
dec
xlat
mov
push
out
lods
in
push
or
adc
stos
inc
xor
mov
sub
rcll
outsb
mov
push
fs
mov
mov
mov
into
je
js
adc
sbb
cmpsl
popa
push
mov
fildll
jae
test
sbb
dec
push
test
or
es
mov
and
inc
jmp
aad
mov
xchg
cmp
or
insb
js
jb
insb
lret
stos
pop
jmp
and
cltd
jmp
or
push
or
dec
xchg
mov
cmc
cmp
jp
insb
test
in
mov
push
push
mov
out
gs
test
test
add
sub
pop
aas
push
into
hlt
stos
xor
ljmp
push
sahf
mov
push
in
dec
scas
push
pop
das
xchg
mov
cld
push
mov
shl
add
adc
pop
pusha
jg
sbb
sbb
mov
into
pop
scas
push
cltd
dec
stos
pusha
scas
lahf
push
sbb
pop
outsb
sarb
jge
dec
mov
shrl
hlt
movsb
les
fimull
add
dec
or
dec
pop
in
add
ficompl
jns
lea
jle
xor
inc
add
daa
sub
jb
cli
mov
scas
gs
adcb
sbb
repnz
xchg
pop
pop
add
inc
mull
fisubrl
jmp
out
xor
mov
shl
sbb
enter
sbb
xchg
rol
sar
adc
and
push
adc
mov
mov
popf
xchg
out
inc
inc
xor
cmp
ficompl
xchg
push
fwait
insl
stos
cld
pop
add
cmp
add
push
sub
and
fldenv
sub
inc
mov
pop
push
popa
sbb
dec
fistps
mov
fprem
xlat
cld
sub
insl
mov
push
mov
push
notl
into
imul
imul
mov
std
rorb
mov
std
push
xchg
push
imul
mov
inc
out
mov
fsubs
call
iret
xor
dec
ror
mov
sbb
sub
push
sub
push
dec
fnop
jmp
and
ja
adc
xchg
push
mov
xchg
das
ds
mov
add
mov
test
jno
repnz
in
xor
push
lret
leave
mov
out
xchg
mov
mov
fucomp
in
and
fwait
rcrb
mov
je
inc
sbb
pop
fxch
fadd
lret
jle
lods
fiaddl
mov
push
ret
sti
fcmovnbe
push
arpl
icebp
iret
xlat
xchg
jl
xchg
popf
js
push
push
je
in
test
scas
ret
sbb
insl
divl
cmpsl
insb
push
stos
sub
pop
sbb
jecxz
rorl
movsb
mov
nop
jl
in
mov
popa
outsb
inc
lock
mov
imul
pop
in
jne
mov
lret
mov
pop
push
sahf
clc
push
adc
mov
xor
mov
inc
add
mov
cmp
divl
dec
fdivrs
in
call
sti
mov
cmpsb
lock
push
pop
cltd
push
jno
ss
fwait
imul
cmp
aas
adcb
or
jns
cli
bound
mov
and
fcmovnbe
or
orb
pop
fcmovnbe
add
push
jmp
dec
or
ret
mov
lock
adc
xor
mov
sti
jbe
shrl
add
stos
aad
jge
cmpsb
jmp
enter
shll
or
inc
fisubrs
xor
out
cmc
ja
mov
pop
dec
idivb
lock
or
jp
adc
sti
fidivrl
lret
int
fwait
xchg
dec
in
std
lods
add
add
mov
push
inc
pop
mov
pop
jle
inc
outsl
mov
int
aad
adc
gs
sbb
jp
cmp
mov
mov
mov
orl
shlb
xchg
ret
bound
pop
fwait
subb
xchg
stos
push
cmp
mov
mov
jbe
out
fwait
pop
mov
mov
dec
mov
and
jge
cmp
jmp
xorl
mov
or
lods
int
fcoml
pop
pop
bnd
xchg
xchg
pop
jbe
push
dec
adc
inc
nop
rcrb
mov
enter
out
lods
mov
or
adc
out
pop
lods
push
lret
ss
sub
bound
lock
xchg
bound
test
insb
push
push
mov
mov
pop
jns
xor
sbb
sbb
push
cltd
add
pop
inc
mov
mull
add
roll
mov
shl
sar
mov
jp
lock
fnstcw
cmpsl
scas
adc
popl
pop
mov
add
sbb
ljmp
pusha
push
xor
jg
jg
inc
jmp
rolb
dec
push
stos
mov
stos
add
xchg
adc
jle
sbbl
pop
aaa
clc
cwtl
cmp
cmpsl
lock
cwtl
add
aam
add
mov
push
stos
arpl
push
jmp
fdivrl
ret
clc
or
xor
decb
jne
mov
fistl
repz
adcb
dec
jb
push
loope
imul
xor
sahf
neg
mov
inc
fldenv
pop
sahf
cmc
or
rcll
push
sbb
fld
std
xchg
aas
mov
mov
dec
cmp
out
add
or
push
add
scas
xor
inc
add
nop
mov
add
mov
fwait
aaa
inc
cmp
ret
iret
sti
inc
sbb
xor
xchg
or
push
add
in
pop
cmp
xchg
push
pop
mov
push
rcl
shrl
lock
add
nop
fldenv
les
jmp
aad
rclb
xor
fs
ja
fidivrs
mov
out
stos
lods
lds
adc
loope
xchg
add
stc
jne
dec
dec
sbb
jae
or
jl
xchg
pop
jno
ret
mov
test
mov
mov
mov
mov
ja
jno
inc
xchg
daa
jmp
mov
mov
data16
cltd
ror
pushl
mov
fiadds
sbb
js
jl
ret
cmpl
sbb
fwait
and
inc
shll
pop
in
push
imul
mov
mov
cmp
scas
insl
lcall
sbb
add
aaa
in
jg
lds
lcall
push
cli
scas
cld
jno
ja
insb
lahf
pop
loopne
cmp
es
pop
les
push
mov
sub
pop
lock
into
cmp
jl
js
fs
orb
shrl
mov
js
pop
imul
mov
lds
push
inc
leave
inc
fcomps
outsl
mov
ss
ret
mov
scas
pop
in
imul
inc
cltd
cli
pop
inc
rclb
xor
shl
fiaddl
mov
xchg
push
or
clc
loope
imulb
popf
push
push
daa
mov
push
pop
stos
push
or
movsl
inc
call
push
xorl
cmp
cli
cmpsl
js
push
or
push
shrb
add
add
pop
out
js
decb
adc
test
pop
loop
inc
push
les
arpl
pop
mov
dec
dec
xchg
sub
enter
in
fmull
iret
ret
fbld
test
add
xor
outsb
es
fsubrs
mov
mov
cwtl
leave
pop
data16
push
mov
lds
test
subb
in
dec
jnp
add
jge
cli
into
rorl
rcll
icebp
cmp
adc
data16
pop
movsl
mov
jne
mov
inc
sbb
xor
and
adc
add
icebp
sbb
shrl
jge
insl
jno
popa
lea
inc
lods
xor
and
adc
add
icebp
sbb
shrl
jge
insl
jno
popa
lds
inc
lods
xor
and
std
add
icebp
sarl
mov
insl
jo
pusha
lea
inc
lods
xor
and
adc
in
icebp
loop
cmpsl
jnp
rcrl
sub
mov
cmpsl
jo
inc
xchg
dec
xchg
pop
mull
jmp
lock
rolb
ja
addr16
shll
jo
inc
xchg
and
xor
add
adc
loopne
nop
jbe
pop
shlb
mov
inc
nop
punpcklbw
add
and
adc
add
jg
rcrb
sbb
xchg
das
out
add
out
rorl
jle
clc
dec
xchg
mov
addr16
inc
push
pop
ss
lock
add
pop
push
dec
push
rorl
setb
sti
pop
mov
cmp
mov
lods
cmpsb
loope
inc
hlt
cld
popa
sbb
pop
sub
lahf
jg
sbb
iret
repz
imul
out
sub
daa
pushf
xchg
aas
stc
orb
inc
sbb
mov
sbb
pop
adc
movsb
cmpsl
pop
aas
inc
adc
mov
dec
scas
jg
sbb
xchg
es
or
mov
add
and
sahf
shl
sar
mov
ja
xchg
inc
xchg
in
pusha
icebp
jo
inc
xchg
and
adc
loopne
lock
shlb
aas
mov
inc
stc
fimuls
aad
jecxz
cmp
dec
movl
test
xchg
add
andb
cli
pusha
ret
inc
out
sahf
push
xchg
adc
jne
pop
mov
or
ds
rcr
lret
and
sub
xor
xlat
add
adc
loopne
lock
rolb
ja
addr16
addb
pusha
cmpsl
jo
inc
xchg
and
xor
add
adc
loopne
lock
rolb
ja
addr16
addb
pusha
add
push
repnz
pop
cmp
jl
pop
add
scas
je
sub
ljmp
cmpsb
rclb
in
xorl
into
cmc
mov
jnp
clc
sub
je
ljmp
mov
jp
add
imul
dec
out
jecxz
iret
pop
iret
dec
pop
push
inc
jmp
ljmp
mov
test
test
and
mov
fisttpll
dec
ds
cmp
repnz
pop
psubusb
in
mov
inc
ror
sbb
sub
scas
loope
dec
mov
loopne
imul
fsubr
and
cmpsb
cmpsl
push
test
lea
movsb
pop
inc
mov
cmpsb
mov
cmp
aas
jae
inc
test
pop
lods
add
push
push
push
leave
lret
in
sub
sub
xor
lds
xlat
sub
test
pop
fcoml
dec
pop
mov
mov
jmp
pop
imul
repnz
int
call
xchg
sub
pop
xor
mov
jne
inc
mov
inc
cmc
repnz
scas
loop
sub
jl
int
xchg
adcb
and
inc
push
sbb
cmc
fcoms
sbb
mov
mov
cli
push
dec
jb
mov
jno
int
add
scas
inc
dec
movsb
sub
int
out
lret
or
loop
fsubrs
addl
test
pop
fildl
jg
std
or
jecxz
test
lret
push
fcmovnbe
mov
js
inc
cmp
fnsave
mov
or
pop
cwtl
icebp
sub
inc
or
mov
inc
xlat
popa
imul
in
jae
jle
push
xchg
gs
jecxz
scas
sbbb
and
mov
fldenv
push
mov
inc
outsb
clc
xchg
mov
xlat
mov
ds
cmp
stos
scas
cwtl
push
mov
and
pop
jg
xor
imul
dec
insb
and
lret
test
push
popa
push
nop
jae
mov
vphaddubq
fcompl
adc
ljmp
nop
cmc
adc
lcall
jnp
push
xor
scas
jmp
sub
pop
mov
jbe
incb
sub
inc
in
pop
or
jecxz
add
hlt
fnstcw
mov
inc
jns
xchg
sbb
pop
sbb
xlat
xor
das
mov
mov
mov
ja
into
push
jae
mov
jno
test
mov
sbb
movsb
insl
inc
inc
cli
pop
push
add
std
js
ja
adc
sarb
xchg
mov
fimuls
inc
mov
inc
sbb
and
inc
in
mov
push
pop
in
sub
jno
mov
inc
push
push
sbb
cmp
lods
add
add
rorb
in
leave
inc
nop
shll
or
je
inc
ret
fcomps
pop
sbbl
cs
adc
sbb
popa
ja
out
mov
int
mov
mov
cli
insl
mov
push
and
mov
mov
fwait
xlat
pop
test
insl
cmp
in
jbe
bnd
popa
sub
imul
add
mov
mov
imul
push
xchg
jge
sub
add
pop
mov
lods
gs
xchg
and
lcall
std
add
push
js
rclb
je
add
or
add
dec
ja
popa
sub
sub
adc
mov
jbe
dec
and
xchg
push
mov
mov
sbb
call
nop
lret
pop
mov
xchg
repnz
jp
xlat
sbb
mov
push
arpl
or
jl
sub
and
cmp
adc
cmp
sahf
popf
pop
xchg
leave
mov
push
repz
gs
in
and
int3
mov
pop
inc
sti
imul
sbb
in
push
or
ja
pop
aam
outsb
cld
test
push
lcall
fbld
mov
add
cwtl
or
cmp
mov
inc
addr16
into
mov
cmp
imul
icebp
cmpsl
and
or
push
dec
cmp
mov
mov
pop
push
mov
loop
outsl
aad
jle
lods
pop
addr16
lret
outsl
jp
jge
jecxz
cmpsl
mov
mov
adc
or
sbbl
out
mov
fnstcw
mov
or
dec
mov
pushf
and
scas
notb
sbb
fistpl
out
sub
mov
sub
test
js
and
or
sub
mov
push
jne
jb
je
or
cs
ja
lret
mov
mov
adc
jo
xchg
adc
or
std
pop
loop
mov
xchg
cld
insl
pop
cli
icebp
and
lock
lods
mov
mov
bound
pop
lret
mov
xchg
call
loop
cmp
mov
sbb
out
xchg
rorl
mov
pop
lods
lea
fisttps
jmp
lret
test
shrb
lods
xchg
sub
addr16
add
imul
mov
jl
cltd
daa
push
ds
jnp
push
jbe
jle
cmp
lock
das
mov
pop
fs
pop
mov
push
mov
add
in
pop
test
sbb
and
icebp
cmpsb
push
outsl
xlat
bound
out
and
cli
pop
gs
cmc
daa
fucomp
cwtl
xor
xchg
aad
inc
adcl
jnp
mov
dec
test
jecxz
movb
notl
jp
sbb
push
pushf
test
and
sbb
add
mov
fsubl
mov
in
pop
or
hlt
push
movsl
mov
inc
outsb
nop
fdivs
in
mov
xor
invd
push
pop
mov
ret
pusha
pop
mov
jge
add
mov
ljmp
mov
xchg
and
sbb
jae
adc
popa
loop
inc
pop
xlat
xor
sbb
clc
mov
pop
shlb
pandn
mov
add
mov
or
push
lret
sahf
aas
lods
pop
jbe
pop
mov
inc
push
lret
fwait
shrb
ret
push
in
fadd
sar
push
sub
mov
scas
jbe
jae
push
sbb
push
cmp
cld
std
sbb
outsb
test
jns
clc
or
dec
inc
leave
shll
pop
aaa
sub
or
sbb
dec
add
xlat
xor
pop
and
cmpsl
xchg
push
xchg
sar
mov
es
adc
test
add
fwait
outsb
dec
in
icebp
pusha
mov
jecxz
push
sahf
sbb
xchg
cltd
cld
gs
iret
fxch
sub
fildl
es
jmp
pop
in
out
pop
mov
repz
setp
adc
loop
push
add
addl
lods
rcrb
mov
mov
lods
jge
leave
scas
adc
cli
add
push
in
pop
test
cwtl
sub
adc
dec
popf
fistpll
sbb
nop
jmp
mov
scas
mov
roll
mov
jmp
out
push
adc
negl
inc
outsb
cwtl
sbb
cmpsb
movsl
push
dec
dec
shr
sbb
push
nop
cli
sbb
out
loope
lds
sub
or
es
nop
in
outsb
mov
fldl
or
fsts
sub
push
jno
or
ret
out
repz
mov
das
aam
inc
shrl
and
push
mov
mov
ljmp
mov
lock
cli
test
test
cmpl
or
and
inc
imull
lods
rorl
or
lods
sbb
mov
push
ja
test
jl
repnz
and
cs
sbb
cmp
ss
or
mov
adc
cmp
repnz
fisttpll
pop
outsl
cmp
adc
movsl
jg
test
mov
push
in
aam
mov
xchg
adc
jmp
addr16
lcall
jns
lea
inc
adc
sub
out
sub
cmpsb
mov
and
pop
push
int3
sub
aas
or
pop
icebp
fsts
and
scas
daa
mov
sub
push
sbb
mov
movsl
lods
mov
cmpsl
movsb
mull
cmpsl
addr16
cmp
mov
addr16
nop
mov
pushf
cwtl
push
xchg
orb
outsb
cmp
addr16
mov
pop
mov
pop
bound
pop
aas
out
cli
pop
mov
or
sbb
mov
enter
dec
arpl
pushf
cs
test
sub
xor
inc
imul
loop
shll
popa
mov
das
or
and
idiv
hlt
push
jmp
cmpsl
push
push
and
mov
popa
jo
cmpsl
scas
iret
fsts
pop
fs
add
int
lea
std
in
ss
mov
push
push
adc
es
ret
loopne
and
add
push
push
lahf
fwait
lea
jecxz
dec
pop
xchg
push
in
mov
pusha
ljmp
insb
push
std
xlat
and
cmp
sahf
pop
xchg
pushl
imul
pop
movsb
enter
into
cmpsb
notl
mov
aas
mov
cmpb
sbb
clc
push
sub
adc
dec
in
insl
pusha
shr
inc
pop
in
hlt
ror
movsb
es
adc
push
xchg
push
and
and
imulb
mov
leave
mov
outsl
outsl
sahf
xor
mov
gs
xor
mov
or
mov
mov
pop
pop
mov
dec
dec
cmp
fldcw
mov
jle
fsubrs
mov
cld
cmp
iret
push
dec
out
pop
adcb
push
push
int
in
cmpsl
setnp
pop
pop
push
inc
cmp
icebp
cmc
ret
jo
or
cmpsl
push
push
pop
out
sbb
mov
enter
mov
cmp
hlt
pop
pop
repnz
jbe
into
and
cli
cmp
mov
pop
xchg
lods
cmpsl
xor
clc
jae
daa
cltd
mov
lcall
addr16
mov
pop
push
mov
jle
pop
push
in
insb
push
adc
jg
mov
das
cmc
jp
lds
cmp
mov
mov
sarb
mov
test
cmp
clc
test
inc
push
out
in
mov
out
sub
mov
cmc
fdivrl
repnz
lret
pop
jnp
dec
ja
mov
push
jne
cli
enter
test
xor
jns
mov
out
push
push
xchg
jo
pop
subl
and
mov
popf
sub
test
shll
mov
in
mov
ljmp
add
ret
mov
andl
repz
shll
push
cmp
into
out
das
or
mov
test
jnp
cmpl
arpl
and
mov
and
xchg
std
push
lods
jle
add
iret
fcomip
adc
mov
shlb
js
push
cld
stos
in
cmp
pop
in
pop
movsb
fidivrl
in
in
jne
rcl
mov
std
out
mov
movsb
xor
push
pop
adc
stos
outsb
inc
popa
ret
jae
inc
arpl
mov
in
sbb
ljmp
jecxz
jge
cmp
xor
call
call
cmp
push
out
sahf
xchg
jno
fs
adc
mov
imul
jmp
iret
stc
mov
out
arpl
sti
fdivrs
lea
mov
xlat
aaa
jbe
ds
jns
adc
sbb
push
lock
mov
cli
jae
push
mov
icebp
ret
sub
mov
mov
sbb
lret
pop
rcl
cmp
mov
js
or
xlat
fisubrl
notl
push
pop
test
adc
icebp
sbb
sub
cld
jl
dec
dec
xor
loopne
mov
ljmp
pop
dec
xchg
inc
push
ss
or
js
and
xor
sti
add
in
xor
mov
cs
cvttps2pi
xchg
mov
mov
cmp
sahf
imulb
xor
dec
and
mov
fcom
pop
jne
pop
mov
sub
mov
stos
fcoms
xor
cmp
aam
jo
dec
cltd
cmp
loope
mov
xchg
rclb
ja
lahf
ja
stos
push
test
out
lods
inc
mov
nop
adc
ss
mov
inc
cmp
xor
sbb
mov
push
out
add
fsubrs
enter
pop
adc
out
aad
rcll
pop
push
or
int3
xor
fisubl
cmp
or
fsubr
and
xor
jp
pop
sub
pop
sti
push
push
add
popf
dec
test
jmp
in
inc
mov
xor
push
mov
popf
push
lock
xor
pop
mov
cli
loopne
xchg
faddl
fwait
push
push
mov
lods
mov
xchg
dec
xor
data16
in
inc
inc
shl
cmp
in
sti
fs
int
pop
fcmovnb
dec
repnz
add
das
sarl
xor
pop
jne
les
stos
mov
mov
test
mov
loop
and
mov
inc
hlt
les
sbb
push
pushf
nop
testb
xchg
jl
mov
lret
rcrb
mov
cli
in
cs
mov
push
cmp
inc
mov
dec
jno
jne
lods
and
pop
clc
jmp
int3
std
lret
pop
pop
aad
mov
mov
inc
mov
out
mov
cmp
pop
lods
sub
imul
jmp
lcall
scas
dec
sahf
adc
fsubrs
addb
insb
pop
adc
rcll
fcoml
mov
or
jg
outsl
cmp
add
cmp
mov
or
xchg
pop
jl
jmp
jge
push
movsb
cli
mov
enter
bound
lcall
jns
test
pop
inc
sbb
cmp
adc
dec
popa
or
repz
push
dec
add
mov
mov
in
movsb
sarl
adc
jmp
push
jmp
gs
xor
adc
frstor
clc
pusha
inc
pop
mov
ret
in
fwait
xchg
aad
or
stc
mov
pop
dec
in
test
jae
cmp
cli
adcl
xorb
xor
xchg
fcmovu
add
dec
cltd
dec
hlt
push
iret
lcall
pop
jge
xor
repz
aas
sbb
gs
ljmp
es
push
pop
lahf
fstl
dec
adc
outsb
xorb
sbb
bnd
out
pop
xor
pop
add
je
test
xchg
xchg
and
nop
lcall
xor
xchg
call
leave
sahf
roll
pusha
cli
dec
jae
xchg
pop
fldenv
icebp
sbb
dec
jns
xor
dec
push
xor
in
xchg
andb
mov
pop
test
adc
jmp
sub
sbb
mov
mov
xchg
pop
xchg
push
mov
cmp
loopne
rcll
jmp
movsb
xlat
out
mov
and
dec
inc
add
clc
rcrl
dec
push
inc
aam
ret
dec
and
mov
push
and
and
nop
daa
and
or
and
dec
cmpb
pushf
jmp
lahf
sbb
shlb
data16
mov
mov
imul
mov
cmpsb
popf
xor
call
out
mov
xor
outsb
xor
test
ss
sub
xor
adc
dec
mov
mov
push
push
xchg
sub
jne
sbb
sub
lds
pushf
mov
dec
rcl
sub
sbb
hlt
test
lahf
or
cmpsb
sub
loop
inc
fstpt
rol
xchg
mov
in
pop
jecxz
cltd
icebp
dec
jg
arpl
inc
mov
data16
ficompl
mov
mov
push
bound
jbe
test
outsb
aas
inc
insl
imul
xchg
shrl
repz
rcr
test
test
mov
sub
adc
mov
sub
mov
jmp
jae
or
inc
jns
test
fildll
stos
xchg
and
add
jle
pop
inc
xchg
cmp
mov
push
bound
pusha
mov
jnp
and
add
fistpll
mov
mov
push
add
shlb
jle
mov
imul
mov
lods
xor
dec
pop
outsb
cmp
and
dec
stc
xchg
and
repz
inc
add
or
rol
pop
in
fiadds
fcmovu
inc
mov
in
movsb
mov
mov
jmp
mov
sbb
lea
dec
sub
push
testl
xlat
test
jp
test
imulb
je
out
dec
lods
mov
or
jb
repz
and
ja
mov
rclb
int
mov
les
xchg
push
es
dec
cmp
mov
pop
leave
sahf
fldenv
leave
xchg
dec
lods
in
xchg
jne
cmp
int
dec
clc
int
inc
shrl
mov
mov
pop
sbb
xorb
popl
xchg
pop
sub
ds
inc
cmp
xlat
scas
adc
and
jo
in
in
dec
mov
js
xor
test
rclb
leave
push
repz
jnp
jge
cmp
lret
arpl
lds
cmpsl
push
pop
mov
mov
mov
sbb
and
xorb
rorb
icebp
mov
mov
mov
push
inc
or
dec
loop
fistpll
mov
out
inc
dec
mov
inc
cld
ds
test
shll
dec
ljmp
faddp
loope
aaa
out
int
add
and
cmpl
mov
ds
in
pop
pop
and
jle
inc
sbb
das
dec
pop
push
scas
je
outsb
mov
lea
push
inc
add
cmpsl
js
cwtl
xchg
mov
adc
sar
mov
js
mov
mov
or
mov
insb
pusha
subb
cmc
xchg
jl
imul
orb
in
ret
cmp
repnz
cmp
mov
aad
jne
jno
ret
sub
fnstsw
pop
jge
add
cmp
mov
aaa
jmp
jno
sub
mov
cmpsl
add
test
fs
xchg
mov
xchg
mov
mov
aas
repz
pushf
mul
push
subl
mov
cmpsb
xchg
jg
cmp
fwait
js
mov
div
faddl
sbb
adc
mov
rcr
sub
jnp
and
lods
pop
pop
mov
and
xor
pop
adc
jge
jle
jb
mov
inc
jl
xorl
jbe
pslld
jb
mov
lock
cmp
pushf
push
int
out
aaa
fwait
pop
jl
sbb
or
and
fisubrl
cmp
mov
out
cmp
adc
mov
push
je
or
mov
mov
icebp
incl
adc
mov
lods
sub
repnz
bound
add
arpl
xchg
mov
pop
pop
js
rol
cmp
xchg
push
pop
or
loop
es
pop
push
imul
and
adc
leave
rcrl
jecxz
insb
jnp
ret
sbb
pop
xchg
out
leave
movsl
ja
int
ja
or
std
dec
or
shll
inc
pop
fstpl
dec
sbb
inc
in
fisttpll
cmc
mov
dec
mov
jle
pop
scas
sub
mov
and
daa
loopne
add
cmpsl
dec
clc
xlat
cmc
cmp
or
xchg
fsubs
dec
ljmp
mov
xor
and
jle
mov
imul
or
adc
out
or
orb
andl
int
cmp
push
add
loop
mov
repz
pop
dec
outsl
in
js
pop
adc
xor
xchg
jge
movsb
lret
push
fstps
pop
add
cmc
mov
mov
mov
out
in
xchg
cli
mov
push
scas
test
cmpsl
adc
jbe
lods
mov
pop
push
adc
pop
sub
and
mov
add
xor
icebp
int3
lahf
push
lahf
cmp
subb
sub
push
arpl
adcl
cmp
sub
lret
test
inc
es
or
dec
jo
mov
std
lock
sahf
loop
out
lcall
sahf
loop
cmpsl
xchg
jnp
dec
or
xor
addr16
leave
cmp
dec
jns
inc
lret
outsb
xchg
mov
out
cvtps2pi
cmp
mov
wbinvd
mov
fs
push
cmp
pop
mov
sub
add
sub
dec
mov
inc
or
pusha
pop
iret
jo
inc
xchg
and
xor
add
adc
loopne
lock
rolb
ja
addr16
addb
pusha
cmpsl
jo
inc
xchg
and
xor
add
adc
loopne
lock
rolb
ja
addr16
addb
pusha
xchg
lock
out
xlat
add
adc
pusha
daa
lock
pop
shlb
ja
push
subb
int
cmpsl
push
mull
divl
xlat
add
aaa
loopne
pop
mov
sub
dec
test
mov
pop
lock
jp
inc
out
jns
or
fidivl
pusha
cli
adc
and
lock
jp
or
inc
inc
lret
jo
outsb
cli
adc
xor
leave
dec
fstps
push
jp
or
cmp
arpl
das
cwtl
sbb
insb
les
mov
add
pop
jno
addr16
sub
sbbb
add
push
sbb
rorb
or
xor
mov
sahf
sahf
inc
mov
push
xor
cmp
add
cmpsb
jl
add
cmp
pusha
outsl
pop
pushf
mov
stos
adc
and
rorl
sarb
inc
les
dec
inc
mov
and
out
mov
fs
ds
or
add
outsl
sbbb
push
xor
nop
call
stos
xor
and
mov
pop
cmp
adc
and
mov
mov
xor
fstps
push
jp
or
cmp
pop
fisubrl
jns
or
and
mov
push
jp
outsl
out
std
insb
mov
fildl
popl
adc
incl
dec
hlt
mov
seto
data16
repz
adc
and
inc
cld
inc
aad
push
lods
adc
sbbb
sub
fidivl
pusha
cli
adc
and
lock
jp
or
cmp
inc
fidivl
pusha
cli
adc
and
dec
xchg
cmc
mov
gs
and
inc
pushf
stos
jge
jmp
push
sbb
dec
jp
jle
stc
sahf
sahf
sub
mov
mov
stos
cs
bound
jl
fsqrt
dec
ja
mov
notl
aad
and
aas
sbb
push
cltd
dec
imul
rcl
filds
fcmovnb
push
leave
into
push
popf
les
xchg
loop
mov
or
ja
or
mov
push
push
mov
mov
mov
repnz
ficoml
insb
push
ret
imul
ds
iret
out
aad
xchg
adc
gs
shlb
mov
pusha
daa
cmp
and
mov
push
scas
lahf
push
repnz
std
sarb
mov
pop
or
pop
sub
loop
data16
ds
sbb
sbb
sbb
sar
pop
jp
cli
dec
leave
add
daa
jnp
jp
mov
and
ds
test
add
add
xchg
inc
cmpsb
arpl
sub
inc
inc
mov
movsl
adc
mov
lock
inc
mov
cmp
lods
int
pop
sub
pusha
mov
sub
shrl
add
xlat
jno
imul
xchg
outsl
test
mov
jge
sbb
cmp
scas
or
insb
adc
das
push
ret
insb
cmp
mov
daa
rcrb
imul
test
jbe
mov
shll
jmp
xchg
mov
add
imul
loope
sbb
lock
xor
adc
inc
cmc
pop
adc
lret
cwtl
mov
sub
js
xchg
or
jae
sbb
or
dec
push
cli
jno
push
out
ret
mov
mov
loop
cmp
gs
sub
mov
xor
out
sbb
xor
outsb
das
cmp
ds
pop
xor
divl
scas
push
ljmp
icebp
mov
push
or
mov
fsubp
lret
add
and
dec
aad
fdivrs
push
add
loopne
mov
pop
pop
shlb
icebp
rcll
bound
xchg
mov
pop
out
jp
sub
sub
xchg
pop
add
add
add
ds
pop
push
sahf
jle
aas
jecxz
or
adc
push
jecxz
repz
dec
add
hlt
adc
push
scas
in
ja
inc
push
daa
cmc
test
popf
lcall
sahf
jl
fs
mov
adc
icebp
jp
aam
dec
movsl
test
inc
push
adc
mov
pushf
mov
stos
jns
mov
pushf
xchg
mov
inc
test
push
addr16
daa
pop
pop
mov
es
push
pextrw
mov
es
inc
iret
call
add
adc
jl
push
loopne
movsb
xchg
mov
mov
pop
ds
pop
mov
fldenv
iret
in
add
pop
stc
cmc
inc
or
outsb
xor
ja
pop
xchg
xor
mov
xor
imul
cmp
or
push
mov
cmpsb
mov
sbb
test
test
jp
mov
gs
lret
add
hlt
push
test
fwait
xor
inc
ret
xchg
stos
loope
mov
mov
mov
cltd
sbb
xchg
scas
cmpsb
enter
add
adc
pop
push
mov
or
cmp
mov
movsb
lret
pop
push
out
xchg
in
ljmp
bound
out
xchg
add
imul
shl
and
sub
sbb
and
aas
jo
repz
and
jbe
mov
fnstcw
outsl
aam
xchg
and
and
test
iretw
lret
sub
xor
cmp
ds
xchg
lret
jae
imul
aaa
ja
mov
xchg
arpl
icebp
pop
in
sub
cwtl
pop
insl
mov
nop
lock
cmp
dec
lea
cld
nop
pop
mov
lods
xchg
dec
pop
movb
hlt
dec
xlat
mov
jmp
mov
imul
inc
dec
ss
add
loopne
xor
cmp
push
insb
jge
ss
sti
ljmp
rol
rcrb
xchg
das
push
insb
mov
mov
push
xchg
xor
addr16
cmpsb
fnstsw
imul
xor
rcrb
and
cmpsb
mov
adc
sahf
dec
push
je
in
inc
xchg
loop
mov
call
push
pop
adc
sub
cmp
dec
lahf
sbb
aam
adc
das
popf
into
mov
es
outsb
in
aam
nop
jmp
mov
mov
addr16
mov
and
push
in
mov
jge
xor
jp
add
add
sti
cmp
mov
cmp
xor
dec
out
je
lock
mov
cmp
or
and
in
xchg
daa
ror
mov
push
lock
lods
fcoml
pop
or
rcr
loopne
mov
or
ss
out
add
add
sbb
add
data16
data16
loopne
add
lahf
add
xchg
in
push
push
xchg
jne
sbb
mov
inc
pop
mov
sbb
cmp
aaa
pop
add
out
cli
ja
xchg
cld
and
inc
mov
decb
cmp
ja
subl
lret
cmp
adc
mov
xchg
dec
mov
xor
clc
and
cmc
and
and
mov
jnp
mov
pop
aas
cmp
push
sbb
push
jae
mov
mov
ret
das
jne
shlb
inc
wbinvd
inc
mov
xchg
sbb
mov
movsb
dec
addb
mov
push
lret
or
cs
rcrb
mov
add
jo
push
inc
push
cmc
adc
push
cmp
lds
lret
pop
mov
mov
into
xchg
mov
cld
push
dec
jecxz
icebp
std
dec
ja
jae
mov
mov
or
mov
sub
sbb
das
add
cli
sbb
mov
sbb
mov
iret
mov
leave
ss
and
pop
imul
cltd
mov
imul
xchg
dec
adc
call
loop
rolb
scas
dec
pop
sub
mov
xor
xor
sbb
pop
scas
addr16
lcall
jne
out
inc
inc
pusha
push
adc
fwait
push
xor
sti
xchg
popa
dec
imul
fnsave
shl
jecxz
and
jge
sahf
jb
divl
xor
xor
mov
outsb
mov
sub
rorl
lret
add
xchg
jl
add
sub
pop
push
stc
inc
xchg
pop
mov
inc
test
adc
insb
cmc
cmpsl
loopne
hlt
and
jmp
popf
or
les
aaa
sbb
xor
sahf
scas
mov
jno
mov
xor
jbe
adc
pop
dec
int3
stc
sbb
in
cli
push
das
jl
test
bound
add
push
or
jle
pop
sahf
fistps
mov
enter
xor
jno
shll
sub
dec
jmp
jno
scas
or
add
dec
mov
movsb
insb
sub
stc
pop
dec
jecxz
sbb
xchg
inc
lahf
repnz
lea
mov
out
mov
push
and
rcrb
popa
sarb
orl
xor
sub
xchg
jp
cmp
aam
jl
loopne
mov
sub
fstps
stc
pop
jo
outsl
stc
xor
test
ljmp
fcoml
pop
cmp
push
insl
mov
popa
mov
test
sub
mov
insl
stos
push
call
jecxz
dec
aaa
mov
aam
sbbb
sbb
cli
sarb
cltd
push
pop
sahf
clc
mov
cmp
mov
pusha
divb
pop
cmpsl
pop
ja
cltd
icebp
cmpsb
or
mov
dec
imul
mov
nop
stos
int
ss
scas
cwtl
aam
dec
add
push
sub
jno
push
aam
leave
stos
repnz
loopne
mov
push
xchg
xlat
push
stos
xchg
mov
add
inc
js
or
pop
sbb
nop
testl
sbb
add
pop
jmp
pop
outsl
xchg
call
scas
sbb
mov
sarb
push
shl
mov
aas
or
mov
xor
sbb
movsb
fsubrs
push
and
dec
mov
iret
jns
shrl
dec
andb
insb
cmp
adc
and
rcrb
js
lds
mov
or
mov
aas
xchg
rcrb
dec
cmp
adc
xchg
push
fisubrl
mov
aaa
adc
cmpsl
out
mov
add
jns
idiv
cmp
and
sarb
dec
sbb
sub
pop
fldenv
dec
dec
test
jo
ds
xor
xchg
cmp
or
and
mov
lret
addr16
imulb
fldl
rorb
mov
test
ds
not
inc
test
scas
imulb
iret
hlt
shrb
mov
lods
nop
loopne
xchg
rcll
cli
cli
fistps
dec
mov
jge
fimull
in
xor
inc
mov
jnp
adc
insl
xor
and
jl
test
test
jl
shll
outsb
or
les
test
nop
inc
filds
pushf
cmp
push
pop
es
pop
sti
lea
adc
or
js
mov
loop
adc
push
push
cmp
sub
cmpb
push
fs
sbb
gs
xor
mov
imul
nop
adc
int3
mov
lods
fstps
dec
repnz
imull
sub
iret
mov
call
xchg
cmc
adc
sub
jg
mov
js
jae
ret
and
adc
movsb
pusha
test
pop
ss
notb
mov
adc
add
enter
out
hlt
xchg
or
cwtl
sub
and
mov
cltd
lock
imul
std
cltd
lock
in
aam
loope
lods
inc
dec
adcl
data16
xchg
aaa
subb
inc
daa
div
lods
movsb
mov
xor
sub
inc
jne
loop
test
push
cmp
sbb
fistl
lea
in
cltd
int
test
scas
xor
das
aas
jecxz
cmp
std
sti
lret
hlt
aad
mov
test
xor
sbb
cmp
mov
mov
inc
push
cmp
sbb
or
inc
xsave
repz
or
pop
fisttpll
and
or
pop
clc
dec
mov
add
cmc
test
inc
lds
and
imul
mov
das
test
inc
fmul
imul
mov
cmc
sub
test
pop
xchg
and
movl
push
add
cmpsl
rcll
mov
popf
sarl
mov
cmp
add
and
mov
in
and
mov
mov
loop
jmp
jp
in
scas
sub
mov
mov
pop
push
lods
add
mov
int
pop
repz
or
in
inc
idivl
mov
shrb
xchg
pushf
mov
push
pop
dec
and
loope
aam
dec
mov
push
dec
out
jbe
jge
mov
out
jns
cltd
mov
mov
inc
pop
jne
fs
cmp
mov
lahf
fsubr
xor
xchg
jns
dec
sbb
xor
clc
mov
stos
sahf
je
dec
int
mov
cmp
icebp
sub
in
pop
stos
xor
into
lret
jno
cmpb
and
out
push
loop
push
lcall
push
and
sbb
adc
scas
xchg
roll
sub
adc
push
sbb
cs
pop
adc
sbb
mov
mov
mov
ret
nop
hlt
push
call
xor
pop
lods
loopne
lods
sub
or
orl
mov
int3
xor
fldl
sbb
hlt
insb
mov
xchg
ja
mov
jle
in
mov
pop
icebp
es
int
shr
jle
dec
push
add
ss
xchg
or
mov
xchg
mul
dec
jmp
mov
push
cmpsl
mov
dec
jg
sub
fs
out
in
xchg
jp
lret
jnp
hlt
negb
outsl
mov
mov
outsb
vaddss
mov
lcall
sub
dec
push
jmp
sbb
xor
idiv
fiaddl
imull
sbb
xchg
and
mov
and
jno
stc
std
mov
inc
jns
add
ja
iret
pop
fidivl
adc
ret
aam
int
jecxz
pop
shl
fcomp
mov
scas
push
lods
and
inc
repz
nop
sub
pop
cmp
cmc
cmp
push
mov
inc
test
xchg
pop
cwtl
jae
scas
pop
and
mov
push
repnz
test
insl
test
test
div
xchg
push
mov
ljmp
sub
mov
xchg
stos
jbe
mov
jbe
cmp
push
sbbb
idivb
nop
in
inc
mov
ret
jp
cld
add
mov
insl
cmc
repnz
jne
xor
mov
cltd
not
gs
mov
fs
dec
aad
out
out
push
leave
cmp
cmpsb
inc
stos
or
dec
jp
insb
dec
mov
lock
pushf
ds
push
lea
jge,pt
sub
cmp
aam
into
and
inc
stc
lds
bound
popa
mov
and
sub
lret
sar
xchg
xchg
rorl
leave
jns
mov
out
shlb
pusha
dec
ret
pop
hlt
jmp
xchg
sbb
mov
data16
or
out
test
in
jge
mov
daa
idivb
enter
inc
sub
or
mov
iret
cltd
push
inc
push
out
mov
pop
push
or
out
outsb
out
ja
sub
dec
clc
out
or
inc
arpl
lret
or
mov
xchg
sbb
decb
sbb
jae
mov
rol
dec
dec
jmp
or
inc
inc
push
lock
mov
cmp
add
leave
push
popa
push
stc
loop
fcompl
into
pop
push
nop
and
pop
jmp
jge
sbb
pop
add
dec
xor
jle
icebp
outsb
stos
sbb
test
ret
dec
not
arpl
cld
sti
das
ret
in
adc
mov
pop
cmp
hlt
jbe
ljmp
jmp
mov
cmc
imul
out
add
dec
movsl
out
repnz
inc
push
es
and
dec
lahf
cmp
mov
orl
mov
sbb
xchg
jno
sbb
pop
mov
jne
mov
xchg
mov
insb
or
fidivl
scas
pop
mov
data16
jns
and
out
sub
and
test
imul
loop
stos
xor
test
ror
aas
jns
pop
inc
mov
lret
or
push
stos
push
push
dec
mov
sub
inc
in
push
inc
stc
fildl
mov
pop
les
daa
push
xor
dec
jle
leave
sarb
dec
movsb
dec
movsb
out
imul
ror
lahf
or
xchg
or
or
adc
jl
sub
mov
dec
int3
out
insl
sti
inc
lcall
in
scas
out
push
xchg
std
push
ret
cld
call
jns
jns
mov
lahf
popa
imul
jb
ja
fwait
push
int
adc
inc
mov
je
clc
jae
stos
and
cld
repz
sub
jo
xchg
mov
sbb
ror
and
lret
push
shlb
pop
jl
xor
cmpsb
ja
lods
jl
pop
adc
inc
decb
call
cmc
lock
adc
jmp
divl
idivl
or
cmp
sbb
cwtl
inc
rclb
sub
pop
add
cld
lret
xchg
sub
stos
pusha
rclb
neg
scas
in
or
jp
out
and
fincstp
push
mov
retw
dec
stc
cld
leave
ja
lahf
sub
mov
call
imul
fcmovbe
pushf
std
int3
mov
jne
xor
xor
or
mov
add
lahf
imulb
movb
pop
inc
nop
add
jb
mov
xchg
mov
in
xor
ret
jecxz
js
dec
xlat
sahf
mov
fldcw
repz
push
add
movsb
scas
xchg
js
cwtl
add
jmp
stos
movsb
dec
test
aad
mov
xchg
imul
lret
flds
lret
outsl
in
aas
or
dec
test
rolb
js
es
or
xchg
dec
aad
xor
add
jle
pop
ret
sub
xchg
iret
pop
ficompl
and
loop
mov
add
dec
lahf
lods
rcr
mov
test
mov
mov
xchg
jb
pop
dec
outsb
pop
dec
and
lret
xchg
inc
mov
not
mov
repz
jle
popf
jmp
daa
sbb
add
pop
push
shlb
inc
cmp
lcall
fdivs
or
into
jb
movb
jne
jae
push
aam
cmc
mov
cmp
and
mov
mov
push
test
cld
xchg
js
or
int
push
aas
jmp
out
arpl
sbb
xchg
dec
sbb
mov
pop
or
xorl
dec
pop
adcb
jmp
ds
mov
push
or
xor
push
pop
add
add
shr
push
andb
and
shlb
aas
or
sahf
dec
or
mov
orl
push
lock
xchg
das
jae
ret
cmpsb
cld
xor
js
xchg
push
push
mov
sbb
adc
ljmp
inc
inc
xchg
dec
push
pop
and
stc
mov
leave
es
jns
cmp
es
pop
xchg
call
cmp
test
adc
or
ret
out
into
or
rclb
inc
int
stc
jmp
leave
ret
loop
fst
test
xchg
test
lods
arpl
bound
rorb
mov
ljmp
push
and
cmp
sbb
ljmp
pop
movsl
and
cmpsl
rcrb
lock
dec
and
adc
xchg
ja
int3
xchg
dec
xor
xor
ja
aam
rorl
lods
ret
and
test
inc
add
loope
stos
sbb
and
out
movsl
and
jge
and
mov
fyl2x
cmp
fisttpll
pop
sbb
xchg
push
push
xchg
in
lret
mov
in
dec
fs
jae
gs
add
ja
aad
sub
repnz
test
fcoml
sub
stos
mov
mov
add
out
xor
aas
mov
fcoms
add
rclb
test
sub
jnp
xchg
lds
ljmp
mov
push
and
adc
adc
iret
and
icebp
test
jp
mov
scas
pop
jg
pop
test
jmp
inc
mov
in
dec
aas
lods
jae
bound
js
not
xchg
int3
jae
adc
adc
int
sub
dec
hlt
inc
pop
adcb
pop
and
fucomi
je
repz
xchg
inc
cltd
cmp
shrl
mov
push
insb
xchg
inc
enter
or
sbb
jae
insb
hlt
xor
ljmp
xor
icebp
fistpl
jns
push
and
pop
orl
pop
lret
jo
mov
mov
aas
rcl
push
push
mov
out
dec
mov
cld
push
pushf
mov
adc
movsl
loope
clc
sub
out
jle
inc
mov
pop
or
pop
inc
std
stos
movb
push
or
inc
push
addr16
cmp
jbe
addr16
daa
adc
cwtl
jns
push
rcrl
pusha
outsb
push
imul
fidivrl
aad
pop
inc
jl
adc
jmp
push
mov
adc
out
imul
cltd
pop
imul
push
arpl
mov
in
inc
mov
sti
test
test
mov
push
pop
addr16
mov
cmp
push
xchg
and
push
into
sti
mov
or
or
jnp
mov
loopne
cmp
sub
bound
pop
in
sbb
jmp
ljmp
dec
pop
and
imull
xchg
nop
mov
sub
mov
inc
mov
fisubs
jecxz
movsb
popa
and
add
push
mov
mov
xchg
loopne
icebp
xor
jle
idivl
icebp
adc
sub
lahf
scas
stc
repnz
movsb
sub
cmp
rolb
mov
jnp
mov
mov
popa
inc
push
jno
adcl
add
bound
mov
mov
aas
mov
pop
jmp
ud0
xor
ljmp
fidivs
pop
mov
inc
cltd
dec
add
out
push
jne
add
and
cmp
pop
cli
push
jp
or
cmp
inc
fidivl
pusha
cli
adc
and
lock
jp
or
cmp
inc
fidivl
pusha
cli
adc
and
lock
jp
or
cmp
inc
fidivl
pusha
cli
adc
and
icebp
push
jp
or
cmp
ljmp
iret
push
filds
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
movsb
repnz
test
xchg
ret
xchg
and
xor
inc
xor
add
repnz
test
xchg
ret
hlt
mov
and
xor
add
adc
movsb
push
je
inc
adc
repnz
test
xchg
ret
hlt
mov
and
pop
inc
push
je
jle
ja
jne
mov
clc
cmpsl
sub
xchg
sub
inc
icebp
sti
sahf
lea
aad
and
push
in
repnz
repnz
hlt
das
cmp
sub
fldenv
popf
sti
lods
jmp
fwait
and
adc
mov
add
dec
dec
mov
jb
arpl
aam
xor
or
and
mov
out
xchg
xchg
ret
mov
mov
test
xchg
jle
fwait
and
addr16
add
push
sbb
mov
ret
xchg
or
bound
lods
imul
jp
loop
stos
dec
hlt
inc
insb
pop
lret
push
sub
aam
jae
les
daa
cmp
xor
stc
jb
adc
std
push
rclb
les
xor
add
adc
xor
adc
repnz
cmc
xchg
mov
add
add
insb
xor
je
daa
pusha
adc
sahf
rorl
in
mov
mov
pop
adc
xor
sbb
mov
mov
mov
mov
les
xor
add
adc
xor
adc
repnz
test
xchg
ret
hlt
mov
and
xor
add
adc
xor
adc
repnz
lret
mov
and
lds
push
bound
xchg
loopne
add
lock
lret
rcrl
ss
out
clc
push
cli
out
mov
jae
mov
mov
rorb
or
cwtl
pusha
fidivl
fwait
mov
bound
adc
pop
sbb
test
push
cmp
sub
leave
sub
cli
neg
loope
xor
pop
dec
sbb
dec
imul
mov
movb
cmp
ret
xchg
xor
out
lds
cmp
or
fldcw
sbb
adc
jne
dec
clc
xorb
xor
add
inc
push
xchg
inc
xor
js
pop
xor
cmc
ljmp
dec
jns
xchg
xor
pop
jb
stos
ret
leave
lock
dec
lret
jne
in
pushf
outsl
das
adc
dec
mov
ss
das
add
in
push
cmp
stos
cli
lods
repnz
bound
xlat
cwtl
sub
cmpsl
test
cwtl
movsl
pop
push
dec
push
sbb
shll
push
popa
pop
mov
decb
jno
xchg
into
movsb
and
mov
subb
lret
and
mov
adc
sub
pop
popf
mov
adc
sbb
dec
leave
insl
in
pop
jle
sahf
sub
das
add
xor
repz
repnz
inc
xlat
mov
mov
jnp
lods
mov
into
arpl
rep
rol
mov
test
dec
or
andl
mov
int
ja
push
cmp
pop
fisttpl
adc
scas
add
sahf
aad
push
mov
dec
std
cmp
addb
adcl
ds
add
xlat
add
sbb
or
popf
lcall
fsts
dec
scas
push
pop
mov
cmp
fwait
jp
sub
xchg
inc
lcall
sbb
pop
or
inc
jns
or
push
adc
mov
xor
daa
adc
cmpsl
call
int3
jb
push
push
cmpsl
cmp
fnstcw
sub
mov
out
dec
mov
inc
push
pop
cmp
sbb
jae
push
fsubrl
fucomi
jmp
sbb
outsb
jp
mov
pop
mov
cmp
jmp
xor
or
ror
sar
mov
inc
lcall
mov
in
mov
jo
in
jo
xor
adc
test
jae
cmpsb
gs
lds
jno,pt
cld
divb
dec
inc
shr
pop
nop
add
cmpsl
mull
mov
fs
frstor
aam
xlat
cmp
in
jne
divb
jecxz
inc
fidivl
stos
pop
jo
or
and
mov
or
stc
pop
or
push
ret
inc
shll
xlat
mov
or
push
xchg
jle
pop
mov
divb
std
mov
aaa
xchg
lock
aad
dec
cwtl
jno
cmp
ret
cmp
stc
notl
sahf
or
popf
jno
lahf
ficomps
test
imul
sbb
push
jo
loopne
ds
fiaddl
dec
xlat
jp
pop
mov
and
popf
xor
orl
icebp
cwtl
jmp
jmp
mov
adc
insb
or
pusha
mov
add
push
push
out
cmpsl
dec
leave
adc
insl
fadds
jno
or
data16
aad
test
push
int
stos
pop
xchg
nop
sub
shr
dec
lods
and
fisubs
mov
aam
daa
test
inc
mov
dec
or
jo
jge
fsts
add
repz
jo
pop
in
cmp
cmp
mov
arpl
and
pushf
mov
adc
lea
cmp
and
mov
dec
inc
cmc
cmp
or
out
icebp
addl
cmp
fcoml
das
jp
enter
push
cmp
mov
pop
mov
fimuls
sbb
jl
cmpsb
mov
lods
adc
sbb
pop
mov
sbbl
test
call
mov
movsl
xchg
loopne
stos
js
cmp
out
orb
add
xchg
pop
imul
add
mov
inc
stc
mov
push
sbbl
sub
scas
int
xor
leave
sbb
adc
xchg
jns
ret
xchg
pop
pop
inc
cltd
jle
mov
lret
cmp
jp
cmp
adc
mov
mov
arpl
inc
xchg
lea
sbb
int3
push
les
sarl
jns
pop
test
mov
jne
popf
loopne
jp
add
scas
insb
xchg
addl
push
or
les
dec
push
roll
shll
aas
and
add
adc
je
jmp
lea
xchg
clc
and
push
stos
adc
dec
stos
cmp
push
xor
push
jb
lds
popf
movsb
stc
and
adc
and
xchg
sti
push
or
int3
mov
mov
pop
push
push
mov
push
daa
push
imul
mov
xor
shl
push
or
mov
std
rcrb
inc
rcl
inc
dec
fs
xchg
lods
in
xchg
stc
stc
add
iret
jg
xlat
push
sbb
popf
mov
loope
pusha
mov
scas
jnp
adcb
cmpsl
mov
pop
jb
pop
repnz
cmpsb
mov
inc
bnd
mov
mov
or
jb
jl
mov
loop
mov
jle
fst
cmp
test
clc
test
xchg
test
and
and
loope
sbb
ljmp
lock
fisttps
xchg
dec
cmpsl
test
xchg
test
lock
inc
sbb
adc
lods
pop
mov
mov
add
cmp
movsl
mov
push
dec
lahf
in
mov
push
or
aam
sub
cld
mov
mov
xor
in
or
enter
xor
push
fstpt
je
shl
dec
std
int3
jecxz
stos
out
pop
cmpsl
jne
aaa
add
icebp
lahf
cmp
or
ljmp
xchg
xchg
sub
lock
adc
data16
jno
push
mov
xor
mov
xchg
rcrl
inc
repz
js
ja
mov
mov
jmp
pop
mov
jne
iret
lcall
push
movsl
in
mov
sub
fldl
sbb
out
test
jle
and
js
mov
cs
xor
jge
pushf
lds
rol
mov
idivl
clc
lods
std
sbb
scas
adc
xchg
test
loope
daa
ret
cli
adc
out
pushf
xchg
mov
mov
ret
jg
add
cmc
mov
repz
cmpsl
dec
into
cmp
xchg
or
fisttps
sahf
outsb
test
inc
xor
icebp
dec
stc
inc
cmp
push
cmp
jo
out
loop
mov
add
aaa
push
xor
loope
lcall
push
xchg
jge
mov
mov
xor
cmp
negb
lods
dec
das
nop
stos
std
mov
pop
cli
sub
lds
fidivrl
ja
lret
icebp
xor
xchg
inc
jns
sub
sbb
pop
pop
and
inc
mov
rorb
jge
outsl
xlat
ljmp
adc
add
imul
push
xchg
push
and
inc
out
fstps
scas
or
sub
xchg
push
push
jecxz
stc
scas
add
or
jecxz
popf
xchg
cld
mov
jl
sub
dec
xor
in
ja
std
jae
push
out
push
inc
mov
test
lcall
mov
cmp
fst
push
inc
inc
rcrb
xor
flds
idivb
or
mov
mov
jns
inc
clc
jb
dec
rorl
sub
js
adc
ljmp
in
sti
sbb
fimull
adc
das
push
sbb
jno
mov
sbb
dec
in
push
cwtl
pop
je
pop
or
or
ret
mov
ljmp
cli
fs
add
hlt
cli
sbb
xchg
adc
xor
fsubrs
iret
push
clc
sarl
stc
sahf
pusha
int3
xor
adc
jge
adc
in
push
pop
cli
dec
and
cwtl
xchg
inc
sti
inc
fdivl
stos
push
les
xchg
add
and
adcl
cmp
scas
dec
mov
add
mov
dec
push
xchg
rcrl
popf
sbb
imul
ja
mov
xor
mov
ds
mov
fdivrl
xchg
jnp
test
fdivl
push
shr
lcall
jmp
mov
xor
sub
mov
sbb
pop
sbb
add
adc
lods
push
jae
stos
insl
std
mov
push
cli
adc
mov
daa
std
pop
pushf
mov
loop
sbb
sbb
mov
push
dec
scas
shll
lods
jno
cmp
ss
clc
pop
and
es
push
adcb
mov
sbb
fs
and
gs
imul
lcall
test
and
stos
fnsave
xchg
jns
mov
mov
dec
push
pop
imul
cmp
push
dec
cmp
repz
xor
mov
stos
inc
sub
push
scas
xor
jp
cmc
jo
sub
and
sarb
dec
ret
fdivrs
mov
call
pop
push
mov
sub
mov
test
les
cmp
pop
xlat
hlt
cmp
pusha
pop
push
and
test
gs
neg
andl
pop
rclb
andb
add
or
out
pop
call
loopne
movl
or
sbb
cmp
les
pop
jne
outsb
pop
xchg
mov
stos
in
in
lcall
fxch
xchg
fcmovbe
daa
clc
mov
movsl
pop
adcb
xchg
clc
jno
push
dec
push
mov
mov
aaa
inc
push
ret
mov
ret
ror
mov
stos
sbb
inc
mov
daa
jg
mov
push
jo
jmp
lret
dec
test
out
mov
dec
and
jge
rcll
jae
cli
push
push
mov
or
xlat
mov
mov
mov
neg
addr16
cmp
inc
rcrb
subl
cltd
repnz
add
getsec
int3
mov
push
lret
in
movsb
sub
daa
aad
mov
roll
xchg
movsb
out
lret
sarl
bound
fstpt
sub
cmc
mov
push
jl
cmc
xchg
pop
add
xor
lock
mov
dec
mov
push
call
lods
pop
mov
inc
jp
mov
add
push
inc
ja
incb
mov
call
inc
mov
mov
xchg
sbbl
ds
jecxz
out
sbb
sbb
pop
jmp
movb
pop
pusha
hlt
mov
cld
dec
test
cmc
mov
andl
enter
and
sbb
xchg
fdivl
roll
cmp
xchg
push
sub
pusha
xor
aam
jge
push
xchg
adc
imul
in
sbb
pop
cmpsb
bound
cld
inc
add
outsl
je
ss
das
adc
stc
adc
add
pop
flds
ss
push
pusha
clc
stos
pop
pop
push
jae
xchg
mov
test
pop
je
pop
sbb
xor
fisttpl
aad
sahf
push
cltd
lahf
inc
jns
push
inc
in
cmp
xor
fisubrl
in
cmpsl
scas
sbb
cmp
mov
jnp
sub
push
call
imul
push
les
push
pop
xchg
inc
ljmp
cmp
daa
icebp
leave
adc
sub
popa
mov
mov
repz
stos
add
jns
cld
jno
das
mov
movb
lret
fcompl
pop
or
in
add
es
xchg
sahf
xchg
jl
cld
test
or
pop
or
scas
scas
pop
mov
cmp
inc
sub
outsl
std
mov
pop
and
aas
add
pop
lret
cmp
pop
arpl
xor
rcll
push
imul
or
in
mov
sbb
repnz
mov
pop
nop
mov
int3
push
cltd
in
mov
lea
fadds
xchg
aad
jge
scas
add
sub
stos
inc
shrl
add
cmovo
and
cltd
in
adc
mov
fst
pop
xor
arpl
mov
dec
jg
sti
adc
enter
repnz
sbbb
outsl
sub
xlat
cli
sub
mov
out
cld
in
xchg
mov
xchg
cwtl
mov
dec
mov
push
or
cmp
insl
mov
adc
jbe
pop
daa
mov
or
cmp
inc
test
loopne
mov
push
popa
adc
out
or
in
cmp
imul
movsb
mov
das
xor
push
shlb
fsubrs
and
int
movsl
xor
pop
in
loop
das
xchg
or
outsb
in
sbb
mov
ret
pop
mov
mov
and
and
push
scas
mov
sub
popf
sahf
aad
sbb
add
test
adc
call
scas
das
pop
pushf
adc
mull
repz
cmpsb
negb
cmpsl
sahf
jge
ljmp
inc
out
mov
aaa
add
sbb
loope
pop
mov
jnp
mov
int3
push
jge
or
or
adc
cmp
sub
xor
jge
mov
pushl
adc
dec
jbe
mov
lea
pop
push
fisttpl
rorl
lods
mov
divb
mov
dec
negb
pop
js
mov
jp
adc
xor
add
ljmp
lods
push
xor
rorl
mov
push
popa
lret
loopne
sbb
pop
int3
push
mov
jle
or
xlat
xor
movb
xor
fidivl
ret
rcrb
cmpb
dec
push
xor
xchg
in
jae
scas
xchg
or
fadd
add
sbb
inc
jnp
or
in
add
outsb
jecxz
and
decb
into
mov
das
dec
push
call
xchg
mov
mov
outsb
fildl
lea
add
shlb
pop
andl
ja
mov
pop
pop
cltd
dec
leave
pop
push
out
and
je
pop
and
lahf
mov
or
mov
jmp
mov
pop
jbe
mov
jl
std
pop
flds
and
ret
int3
data16
in
fucomp
push
push
inc
addb
inc
repz
mov
push
adc
xchg
xchg
mov
fwait
aaa
jg
jg
rcrl
xor
cli
mov
mov
fldl
xchg
testl
scas
push
or
dec
test
push
push
arpl
mov
popa
lcall
mov
add
ret
addr16
or
and
jmp
pop
lds
lahf
loop
push
jge
jne
xchg
enter
dec
push
pushf
cltd
out
dec
cmp
popf
or
mov
movsl
sub
flds
and
fsts
sub
daa
inc
and
sub
fisttps
fwait
add
mov
aaa
or
pop
mov
mov
jae
adc
mov
scas
aad
sbb
adc
add
push
adc
sub
or
fidivl
adc
xchg
cmp
out
mov
int
and
push
sub
cltd
cmc
les
mov
push
aaa
sbb
adc
cmp
cltd
out
lahf
mov
mov
push
in
subl
rorb
mov
repnz
shl
mov
into
scas
loope
xchg
popf
dec
mov
push
mov
test
insb
add
cwtd
sbb
ss
outsl
jbe
or
adc
js
sbb
rcl
scas
cmpb
mov
jnp
pop
cmc
cli
inc
jo
out
popa
fcomi
jecxz
or
sub
xor
pop
ljmp
mov
movsl
cmp
cmp
pop
push
mov
lret
xchg
arpl
hlt
dec
mov
cmp
shrl
dec
mov
sub
inc
lea
in
cmp
fwait
mov
or
and
enter
xor
enter
hlt
pop
xchg
lock
push
repz
icebp
nop
jl
xchg
mov
inc
stc
repnz
cmpsl
lret
or
jmp
sarb
mov
ds
clc
push
jae
push
loopne
dec
loop
loop
mov
jle
jmp
shlb
outsb
ret
loope
xchg
xchg
adc
loop
xchg
loopne
jnp
stos
mov
das
pop
pushf
add
int
mov
popa
or
mov
lods
jl
movsb
mov
pushf
scas
cmp
popa
cs
roll
cmp
ss
pop
insb
cmc
lods
sub
ljmp
ret
rcrl
push
mov
push
cmp
cmp
sbb
mov
out
fsubl
sbb
inc
addl
test
push
adc
out
xchg
pop
dec
mov
jns
mov
mov
add
adc
aad
repz
in
stos
mov
adc
pop
pop
pushf
pop
int3
test
loop
pushf
mov
mov
pop
lea
test
imul
pavgw
shl
xchg
call
pusha
push
fildl
or
mov
mov
outsb
out
addr16
mov
addr16
mov
in
andl
cld
popf
pop
iret
mov
jmp
iret
std
push
enter
and
adc
xchg
and
call
mov
push
pop
inc
je
bound
mov
cmp
fcoms
push
mov
pop
leave
and
gs
leavew
cwtl
movsb
mov
lahf
mov
ds
mov
roll
jmp
loop
cmp
mov
icebp
outsl
xchg
add
cmpsb
mov
ljmp
out
or
add
dec
or
cli
repz
or
mov
dec
shrl
fbld
adc
popa
ficomps
repz
js
bound
sbbb
jo
sbb
xor
mov
out
fdivl
clc
adc
in
inc
pop
pop
icebp
cmp
cmc
popa
subb
jecxz
pop
fs
popa
in
cmpsl
jns
xor
ss
call
dec
and
or
out
cmp
dec
inc
insl
frstor
and
pop
dec
stos
dec
pop
mov
xor
mov
fs
xor
push
push
cmp
sbb
push
xchg
xchg
ret
pop
sbb
orl
sbb
adc
or
lods
and
and
js
das
ds
or
adc
dec
mov
bound
mov
popa
loope
push
fistl
adc
repnz
pop
add
jg
dec
je
js
xor
in
es
lcall
inc
and
xchg
movsb
aam
sub
xchg
lock
fsubs
stos
jl
xor
push
adc
in
lods
xchg
cli
push
fnstcw
les
imul
adc
ja
out
xor
sub
nop
test
xchg
jg
xlat
sbb
or
jno
imul
adc
int3
repnz
fmull
push
adc
and
bound
jl
sar
sub
punpckhbw
sbb
sbb
mov
xor
test
xchg
aas
in
xchg
cs
daa
movsl
jl
cmp
dec
lret
rorl
dec
or
lods
repnz
and
inc
lods
add
scas
inc
push
dec
fs
enter
pop
nop
lods
sub
lcall
in
xchg
add
cmp
mov
dec
ds
push
sub
ds
inc
loop
mov
add
imul
imul
popf
pushf
mov
test
movsl
cwtl
fsts
movsb
jmp
ret
cli
jb
pusha
mov
inc
sbb
inc
add
adc
inc
mov
call
cli
fxch
in
iret
push
jp
addr16
dec
fs
xchg
lock
test
mov
clc
mov
fmuls
adc
jne
jmp
cmc
pop
aad
ds
fstpl
jl
in
popf
inc
pop
add
cmp
jmp
iret
fisubrs
xor
int3
fs
add
sub
inc
push
movntps
adc
add
test
pop
sub
mov
stc
vmread
sti
mov
xbegin
and
xor
fstpt
aam
jge
xchg
xlat
sub
xor
lods
das
add
sbb
xchg
xchg
clc
shll
call
lods
adc
out
addb
lds
js
push
xor
pop
ds
dec
inc
inc
je
out
push
je
mov
sbb
jo
loopne
sub
dec
shll
push
sbb
adc
or
adc
fcmovne
sbb
mov
lret
xchg
in
bound
out
jge
mov
jne
mov
push
loop
test
xchg
inc
fs
negl
cmc
cmpsl
adc
or
mov
add
jbe
pushf
jmp
jle
decb
pop
or
push
xchg
gs
divl
mov
and
mov
ret
hlt
mov
and
xor
add
adc
xor
adc
repnz
test
xchg
ret
hlt
mov
and
xor
add
adc
xor
adc
repnz
add
xchg
ret
hlt
mov
and
xor
add
adc
xor
adc
repnz
test
xchg
ret
hlt
mov
and
xor
scas
push
adc
adc
add
xor
and
sbb
xchg
push
sbbl
mov
cmpsl
daa
scas
pop
arpl
add
push
into
inc
fidivrs
push
sbbl
outsb
jecxz
rorl
sub
and
jae
pop
cld
push
into
inc
fisubrs
and
adc
ja
callw
inc
xor
jmp
mov
xor
xlat
imul
js
cmpsb
mov
add
sbb
mov
push
xor
mov
pop
or
push
sbb
clc
mov
mov
in
fsubrp
popa
testb
es
mov
xchg
cmp
xchg
push
cmpsl
jge
add
fdivrl
mov
inc
mov
jo
shr
dec
repnz
sbb
sarb
rcr
dec
jo
add
adc
shlb
inc
xor
insb
icebp
inc
push
scas
pusha
or
push
jae
in
jbe
daa
sub
out
add
mov
xchg
jle
sbb
push
dec
cmp
lret
fcmovnbe
adc
popa
test
push
push
int3
push
fadds
pop
out
push
rep
cmpsl
jle
dec
jnp
shrl
xchg
idivb
push
aam
ffreep
cs
xlat
imul
popf
insb
xchg
pop
shlb
cmp
bound
sbb
add
mov
sub
jge
jno
outsb
xorb
cmp
outsl
pushf
add
add
jecxz
ret
pop
jecxz
rorl
pop
xor
add
push
into
inc
fidivs
push
sbbl
outsb
jecxz
rorl
pop
xor
add
push
into
inc
fidivs
mov
sbb
in
loopne
andb
xor
fmul
out
lock
test
je
loope
sarl
in
mov
cmp
cmc
movsb
les
cmp
call
in
mov
les
in
fidivl
repnz
ret
pusha
xchg
jb
scas
pop
cld
adc
aad
mov
mov
or
icebp
ja
mov
daa
mov
ror
ljmp
outsl
stos
je
cltd
test
cmp
call
xchg
lds
xor
rorb
cmp
dec
rcl
cltd
call
xlat
scas
scas
cld
adc
mov
push
insl
mov
jmp
lret
cwtl
adc
movsl
cmpsb
xor
dec
shl
cmpl
cmpsb
mov
test
stos
stos
aad
lds
aaa
adc
or
stos
stos
mov
xchg
std
pushf
movsl
stc
aad
ljmp
and
sub
out
dec
or
push
add
inc
mov
dec
test
mov
pop
adc
dec
sbb
loopne
cmpsl
js
adc
and
daa
sbb
int
sub
mov
or
xchg
xchg
lds
clc
add
scas
les
mov
xchg
jmp
fbstp
sbb
ror
dec
or
push
dec
xor
mov
mov
lcall
add
xor
js
popf
mov
aaa
pop
addr16
xor
aam
xchg
out
addr16
das
xchg
je
rcl
arpl
mov
out
fdivrs
test
mov
pop
cmp
pop
mov
arpl
pop
mov
push
mov
jae
cltd
psrlq
aam
or
in
js
inc
mov
jae
inc
imul
bound
mov
mov
andb
or
mov
mov
and
jmp
dec
jbe
push
push
jno
push
enter
jns
test
fimull
hlt
imul
test
je
ss
pop
outsl
test
add
sub
jmp
mov
xor
adc
lret
jecxz
xor
push
adc
ret
arpl
lods
pop
mov
fmuls
mov
jbe
push
adc
mov
cmp
adc
cwtl
add
pushf
sahf
jle
wbinvd
cs
xchg
inc
rcrb
pop
adc
ffreep
cmp
fs
stos
mov
push
aas
stc
xchg
sub
es
movsl
pushf
test
jg
fisttpl
outsb
sub
pop
pop
cmp
mov
xchg
into
jbe
orb
in
notl
jae
dec
aam
adc
fldenv
rcrb
mov
xchg
arpl
jl
dec
rorl
sbb
mov
cmp
jo
ja
ret
es
sarb
sti
hlt
push
fucomp
inc
test
in
cmp
cmp
mov
xchg
imul
or
aad
lcall
outsb
lcall
push
pop
push
insb
je
push
jnp
loope
bnd
adc
cmp
jb
je
mov
push
inc
pop
outsl
repnz
into
mov
fisubrs
inc
push
fcomps
add
push
and
pop
loop
jo
fdivrl
add
pusha
loope
out
inc
push
leave
push
jb
frstor
pop
or
mov
divl
dec
cmp
dec
rorl
cli
ret
aad
mov
mov
mov
decb
es
cmpsb
adc
xor
insl
std
xchg
es
sub
cwtl
mov
mov
test
fsub
mov
mov
or
add
inc
enter
dec
lods
push
push
andb
rcll
mov
jo
inc
add
sbb
lcall
mov
bound
mov
pop
adc
cmpsl
inc
push
mov
imul
pushf
pop
out
scas
popa
inc
xchg
xchg
push
sub
imull
stc
dec
or
test
js
jmp
mov
scas
int3
fs
or
aam
sti
loopne
adc
cmp
aam
dec
inc
sbb
xor
mov
es
in
mov
jno
stc
push
cmpsb
dec
or
test
inc
inc
cmp
gs
mov
add
dec
mov
movsl
cmp
or
pop
cmp
cmp
les
in
mov
je
pop
push
sbb
mov
dec
ljmp
push
xlat
jmp
cli
enter
fistps
add
lret
int
mov
das
cltd
rclb
into
push
jns
inc
pop
leave
frstor
sti
into
cmc
sbb
sub
push
inc
push
ljmp
jmp
adc
xchg
rcll
dec
mov
pop
mov
pop
dec
cmc
pop
rcll
fwait
dec
dec
push
xor
adc
dec
shl
out
imul
or
mov
or
into
xor
push
inc
sub
dec
push
or
mov
cmpb
in
lahf
or
mov
push
into
shl
iret
sbbl
adc
xchg
test
cmpsl
test
jae
lret
push
dec
cmp
sub
push
add
out
mov
push
mov
cmp
cwtl
xchg
cmc
sub
in
or
push
mov
push
push
mov
in
mov
xorl
sbb
fnsave
add
dec
adc
dec
pop
int3
daa
mov
bound
lcall
jle
add
pop
mov
aam
add
nop
es
sbb
ficomps
push
mov
mov
mov
jp
outsl
push
loopne
iret
iret
int3
or
inc
and
jecxz
jno
jmp
pop
sbb
lahf
jp
cli
cmp
jl
in
xor
out
push
push
hlt
fstps
mov
aam
xchg
hlt
inc
lret
fldl
call
roll
sbb
sub
mov
iret
into
push
jg
inc
cmp
fstl
dec
mov
imul
inc
xchg
jg
lods
adc
jae
jbe
leave
cmpsb
outsb
outsb
int3
pop
mov
lods
repnz
sbb
and
inc
jle
or
test
mov
pop
jmp
sub
lret
pop
dec
push
lcall
cmpsb
push
ret
stos
mov
in
js
pop
test
mov
xchg
in
cmpsl
das
sbb
jb
dec
test
or
fst
jae
push
call
adc
sti
add
packsswb
int
shrl
inc
aam
sbb
insl
bound
push
adc
xchg
mov
leave
inc
xchg
or
mov
nop
pusha
imul
sbb
andb
mov
arpl
shlb
ljmp
addr16
and
hlt
cmpss
push
dec
call
mov
loop
mov
ja
movsb
icebp
jmp
mov
imul
pop
xchg
lret
or
cmp
aam
pop
mov
ret
roll
cwtl
or
daa
cmc
adc
sub
adc
out
mov
aam
push
push
jns
lea
inc
xorb
jns
pushf
dec
xchg
cmpsb
push
mov
test
jno
lcall
in
push
jns
ds
testb
insb
add
gs
push
mov
xchg
mov
mov
mov
dec
repnz
or
or
adc
xor
loopne
push
push
pop
ret
orb
mov
sbb
sbb
in
sar
xor
and
mov
movsw
cltd
arpl
push
inc
push
cmp
notl
jo
dec
cmp
test
mov
repz
test
aam
lods
enter
dec
add
push
cmpsl
add
jg
in
xor
scas
andnps
sub
push
inc
icebp
adc
pop
in
in
jnp
movsb
shrb
and
ficomps
xchg
out
cld
rorb
push
out
sti
and
inc
lahf
dec
lret
test
clc
push
inc
mov
mov
push
mov
subb
xchg
repz
add
xchg
fildl
nop
and
icebp
cmp
cmpsl
imul
outsb
les
ret
push
test
fbld
cmpb
pop
add
and
insb
test
inc
addl
push
xchg
and
inc
popa
out
or
add
js
xor
jl
outsb
outsl
or
dec
fstp
adc
xchg
call
xchg
int3
pop
mov
and
adc
mov
jp
and
sbb
sub
dec
fdivrl
scas
adc
sbb
clc
xchg
ret
repz
sub
jp
pop
mov
pop
ss
ret
xor
mov
add
int
stc
lods
lock
inc
inc
not
into
add
sub
sub
inc
mov
inc
xchg
mov
sar
lcall
jno
call
ljmp
cmp
mov
shll
push
inc
inc
jl
push
iret
ret
out
mov
mov
fisubs
call
cmc
dec
inc
mov
je
clc
mov
inc
lcall
insb
in
aam
popa
inc
test
addr16
int3
loopne
mov
imul
fcoml
cmp
bound
enter
mov
das
data16
mov
orl
stos
dec
jb
sbb
jb
pushf
push
cmpsb
cmpsb
inc
sub
push
ljmp
xlat
div
std
xor
std
pop
xchg
out
out
lret
xor
and
add
enter
cltd
lea
jle
subb
add
dec
add
popf
stos
dec
call
sbb
xlat
pusha
fs
inc
pop
sub
add
fbstp
mov
inc
sbb
sub
jno
and
ret
daa
imulb
sbb
sbb
cli
dec
xchg
leave
leave
shr
loop
aaa
cmc
dec
mov
cmpsl
xor
inc
add
notl
mov
adc
shlb
mov
fs
pushf
mov
pop
xchg
out
sub
cmp
mov
push
fcoml
inc
imul
scas
mov
iret
push
adc
dec
sub
mov
and
addl
jge
xchg
ret
dec
push
push
in
xchg
sti
mov
xchg
ret
adc
test
cmpsb
mov
jge
dec
lret
inc
popa
inc
sbb
jno
xchg
jmp
iret
dec
shr
or
imul
mov
roll
imul
push
loope
xchg
or
mov
test
in
sub
and
aaa
sub
and
hlt
mov
outsl
mov
out
out
pop
sub
mov
cmp
pusha
add
mov
dec
push
push
loopne
movsl
add
xchg
in
cmp
xlat
adc
les
popf
aas
iret
jp
add
add
cmpsl
mov
mov
nop
jns
fs
dec
adcb
mov
push
in
cmpsb
shlb
stc
outsb
add
jg
popa
enter
push
sbb
mov
mov
mov
inc
dec
flds
aad
sbb
lahf
mov
adc
inc
jmp
out
iret
out
mov
jbe
push
mov
or
ja
xchg
push
push
mov
lods
lret
adc
xor
mov
orl
jl
into
mov
aad
pop
cmp
out
popf
add
ss
sbb
mov
hlt
fsubrs
loope
push
idivb
jbe
inc
adc
sti
cs
test
ds
adc
movsl
call
fcmovu
mov
enter
xchg
js
push
pushf
jae
outsw
in
in
adc
sub
faddp
lds
test
inc
or
ret
movsl
pop
sahf
or
scas
test
mov
in
bound
fisttps
pop
out
add
js
cmp
mov
ret
flds
in
jne
dec
int
or
or
dec
xchg
cmp
push
fdivl
popf
fistpl
lcall
aaa
push
sub
das
push
idivl
xor
lods
xchg
or
mov
sub
pop
movsb
clc
mov
cmp
ja
xchg
push
in
add
nop
or
adc
movsb
pop
orl
xor
fildll
mov
or
clc
shrb
jnp
sbb
lock
sahf
orl
dec
mov
sti
lock
push
out
push
dec
ffree
add
and
popa
adcl
sbb
jnp
xor
adc
xchg
pop
fs
mov
icebp
sub
inc
cmp
loop
int3
jnp
adc
and
cli
sbb
mov
shrl
repnz
cmp
mov
xchg
mov
add
cmpb
cmp
filds
xorb
addr16
adc
and
push
mov
or
inc
cmp
iret
scas
pop
test
hlt
cmovbe
lods
jge
jne
or
xchg
popf
notb
cmp
leave
jb
lods
out
cmpsb
mov
addr16
jp
or
ss
stos
inc
xchg
aas
data16
sub
mov
aaa
pop
lock
stos
mov
jle
or
addr16
stos
lret
and
or
jle
push
pop
cmc
xchg
add
dec
repz
xor
push
mov
inc
sbb
pop
enter
inc
repnz
jecxz
fnstcw
inc
test
fsubrp
xchg
push
dec
cltd
movaps
loop
rorb
jbe
jp
and
mov
sbb
sub
or
pusha
push
inc
push
gs
adc
jecxz
adc
adc
addl
ret
daa
psllq
jmp
lret
notl
aam
adc
jb
movsl
iret
nop
repnz
aas
lock
inc
popf
pop
in
jo
mov
sbb
fisubrs
jo
push
aas
add
sbb
pushf
aam
xchg
lret
push
dec
jle
imulb
push
lea
cs
add
mov
inc
loop
cmp
pop
out
xor
pop
lods
inc
pop
dec
xor
cmpsl
add
sti
jo
jge
cmpsb
or
dec
ss
add
sub
pop
sub
aas
faddp
xor
push
xchg
push
lock
daa
xchg
inc
xchg
lea
mov
inc
lock
aas
jl
ret
lret
xor
ret
mov
icebp
adc
push
ljmp
fs
imul
mov
sbb
push
push
jae
sti
xor
xlat
in
pop
sbb
and
aaa
jle
pop
jecxz
jmp
xor
inc
fidivs
js
pushl
movsb
les
push
xchg
cltd
mov
stos
cld
mov
addr16
notb
sub
shl
pop
shlb
xlat
rclb
mov
xchg
hlt
test
pop
and
lret
mov
mov
lcall
sub
xchg
mov
and
ss
fs
push
fidivl
arpl
jo
mov
xchg
imul
cmpl
xchg
outsb
and
insb
cmp
push
xchg
pop
insb
jle
adc
pop
adc
dec
enter
or
xor
xlat
inc
in
filds
sub
sbb
test
mov
fdivrp
or
jns
cmp
insl
cmp
push
mov
lock
push
es
es
cltd
mov
std
fcmovnu
or
out
mov
mov
clc
shll
test
mov
xchg
ja
or
outsb
mov
push
mov
adc
cmp
push
sarb
mov
gs
sarb
loop
out
mov
add
or
push
imul
cmc
stc
insb
fcoml
lds
repz
enter
dec
dec
push
lret
sbb
dec
aam
and
out
sub
xchg
mov
cmpsb
mov
xlat
test
and
mov
sbb
xor
pop
sub
xor
push
push
xchg
js
pop
cld
xor
outsl
adc
xchg
cmp
lcall
xor
fcoms
mov
and
pushf
insb
pop
mov
sub
repz
and
insl
out
out
cmp
dec
push
xchg
xor
xorb
pusha
sti
faddl
xchg
xchg
adc
mov
shrl
push
aas
outsb
cld
and
inc
add
rol
cli
inc
out
mov
inc
mov
lock
fdivrl
movsb
push
sub
aas
cmp
push
loopne
shl
inc
fnstenv
jo
subl
dec
arpl
mov
inc
addl
es
imul
push
ret
fs
insb
dec
stc
dec
jns
mov
jno
lock
cmc
or
mov
mov
ja
pop
insl
cmpl
dec
or
lahf
ds
jge
in
sub
cmpsl
mov
fcomps
push
push
cmp
mov
clc
fnstsw
jg
lahf
sub
mov
enter
mov
out
bsr
push
mov
in
mov
jae
stos
cmpsl
jbe
inc
scas
mov
cmpsl
gs
xchg
jmp
sub
scas
push
enter
inc
ljmp
mov
push
mov
arpl
leave
xchg
out
int3
lret
rcrl
mov
shr
in
orl
pop
jmp
push
fidivl
ss
push
jnp
ss
sbb
sarb
push
in
rcl
mov
imul
mov
daa
fldcw
xor
loope
mov
fcompl
sbb
mov
add
pop
scas
sbb
jmp
inc
inc
in
scas
cwtl
cmp
sub
icebp
sbb
sub
lock
shll
fimull
cmpsl
clc
lds
popa
aad
fiaddl
push
xor
mov
pop
lcall
push
dec
sbb
cmp
xchg
sub
jecxz
divl
ja
fsubr
xor
lock
cs
aad
mov
adc
movsl
cmp
mov
mov
jae
subb
mov
clc
js
sbb
push
xor
and
add
shlb
fdivl
ret
inc
ficoms
sub
inc
cmpl
and
add
mov
or
cmpb
fisttps
out
add
mov
dec
or
push
jne
lea
lret
push
mov
sarb
inc
bsr
sbb
cmp
imul
push
jge
call
jle
aaa
xchg
jbe
adc
fisubrl
sub
push
mov
xor
pop
movsb
pop
imul
and
xor
jp
sbbl
in
imul
or
and
adc
mov
cmpb
fnsave
xchg
sbb
dec
xchg
lret
sub
loop
mov
adc
mov
dec
cmp
mov
push
stos
mov
das
and
das
out
and
pop
push
xchg
imul
jnp
outsl
popa
dec
jmp
cwtl
cmpb
pop
aam
pop
nop
loop
jnp
and
mov
pusha
mov
adc
xor
adc
test
subl
mov
fsubrl
das
xchg
push
aam
popf
inc
dec
add
aas
xchg
mov
xor
mov
ss
or
mov
sub
inc
inc
pop
jb
cmp
add
xor
rcrl
imul
pop
andl
in
mov
mov
xchg
xor
xor
push
jb
pop
imulb
push
les
orl
addr16
sbb
cld
shlb
enter
vphaddbd
std
xchg
int
cmpsl
push
lret
push
loopne
xor
dec
aaa
sub
test
xchg
and
iret
fstpt
shlb
sbb
sbb
imul
xchg
jecxz
xchg
mov
inc
aas
cmpsl
and
or
int
ljmp
test
or
cltd
stos
pop
fisubrl
loopne
mov
jbe
rcr
and
xchg
pop
insb
sarl
jne
push
or
pop
ss
into
sub
inc
sub
enter
jns
shll
mov
inc
stc
lahf
sbb
jno
xchg
jae
push
xchg
mov
push
cmp
into
in
add
and
cmpsb
adc
fnstcw
adc
dec
xchg
fs
dec
inc
test
ljmp
add
push
mov
aad
sub
test
aas
xchg
std
arpl
enter
shrb
arpl
mov
aad
jmp
popa
cmpsb
mov
mov
ljmp
pop
fs
cmp
sbb
inc
daa
lcall
fistl
mov
fiaddl
mov
cld
inc
aad
dec
cmp
pop
popf
clc
sbb
imul
pop
call
pusha
fisubs
mov
xchg
xor
ret
flds
pop
in
icebp
shr
shl
frstor
push
loope
mov
popa
or
inc
or
lods
dec
outsb
lahf
push
ljmp
fs
out
inc
mul
popa
in
pushf
xchg
mov
leave
ja
mov
xlat
inc
adcb
pop
std
sub
roll
mov
nop
data16
mov
outsb
jecxz
rorl
pop
xor
add
push
into
inc
fidivs
push
sbbl
outsb
jecxz
rorl
pop
xor
add
push
into
inc
fidivs
push
sbbl
outsb
out
rorl
pop
aaa
scas
and
jae
jp
push
lret
stos
sub
push
rep
repz
dec
inc
sahf
xor
add
add
jmp
lods
mov
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
jae
mov
in
mov
xchg
shrb
or
add
add
or
push
add
add
adc
add
add
add
add
add
add
mov
jl
xor
adc
add
verw
add
inc
add
add
add
imul
in
add
add
add
add
add
add
add
cmpsb
add
add
sub
add
add
add
add
add
incl
mov
out
dec
add
add
pushf
add
add
add
push
add
add
bound
nop
add
add
add
push
add
add
add
add
pop
add
add
add
ja
jecxz
add
inc
add
test
js
icebp
add
inc
add
add
add
add
inc
add
add
add
push
add
xor
pop
add
sub
add
add
mov
xchg
add
add
int
fwait
add
add
add
add
add
add
add
add
add
add
add
imul
add
xchg
add
add
xor
add
add
or
je
sub
add
sub
add
test
or
dec
add
add
add
add
add
and
loopne
sub
add
add
add
lret
add
add
add
fwait
add
and
push
and
add
jo
incl
fadds
insb
add
add
add
add
add
add
add
icebp
add
add
mov
sldt
inc
add
add
add
add
add
sub
add
add
push
add
add
push
add
add
test
addb
add
mov
add
add
js
movsb
add
add
add
add
xor
addb
add
fldl
rolb
leave
add
add
add
pop
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
xor
mov
add
add
add
fs
rolb
add
jns
fs
sbb
push
add
push
add
add
add
inc
add
pop
add
add
add
add
add
add
xor
dec
add
popf
add
add
add
add
add
add
add
add
mov
incl
incl
mov
add
add
add
add
push
add
sbb
add
add
add
dec
add
cmp
in
add
add
add
dec
add
add
add
add
push
add
add
jnp
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
leave
add
add
add
push
add
add
add
add
add
mov
add
cmpsb
add
fldl
add
faddl
sbb
push
add
add
add
add
inc
add
add
add
jl
or
add
pop
popf
pop
mov
loope
jge
shrl
fidivs
cmc
into
fdivl
loop
fiaddl
pusha
insb
and
mov
lock
jg
ds
imul
in
ret
inc
mov
sarb
mov
out
adc
imul
and
aad
test
push
outsb
lds
push
repz
out
lret
pop
ss
data16
loope
in
sbb
inc
pop
in
test
mov
jge
sbb
pop
test
dec
in
cwtl
andl
jge
pop
mov
xchg
mov
cmp
sbb
inc
push
aas
add
into
dec
mov
je
jmp
bound
mov
mov
icebp
in
inc
adc
push
push
loop
jmp
js
jbe
xchg
cmp
jns
inc
mov
add
arpl
and
mov
mov
je
xchg
pop
fstps
mov
rcr
jmp
mov
icebp
sbbb
jbe
aad
ljmp
sub
movsl
enter
sbb
lahf
negb
test
inc
adcb
out
out
loop
xchg
out
push
sbb
xchg
mov
popa
pop
sbb
adc
test
out
out
add
xor
or
mov
mov
dec
sbb
mov
mov
iret
loope
fcmovnbe
mov
stc
data16
pop
test
notl
pop
outsl
cmpsl
xchg
xchg
in
push
testb
inc
out
popf
in
testl
and
sti
and
lods
imul
ljmp
mov
pop
and
sub
push
sti
insl
push
xchg
popa
fisubs
xlat
lret
cmpsl
stc
mov
xchg
jl
sbb
test
jb
or
xorb
xchg
pop
daa
sahf
mov
pop
pop
xor
imul
ja
lods
jb
inc
and
repz
stc
lret
ret
or
sub
test
or
ja
add
push
shr
fwait
add
cmc
in
roll
or
rcrl
scas
or
jb
and
jle
in
inc
jge
jb
pop
roll
adc
ds
xlat
mov
inc
ret
aad
mov
inc
shrl
cmpsb
sub
iret
ret
pop
adc
test
enter
push
sub
scas
in
lea
ffreep
mov
pushf
and
jns
mov
fwait
outsb
lea
bound
shlb
xchg
jae
cmp
in
sub
shlb
jno
and
pop
dec
mov
pop
jo
jmp
push
mov
sti
sub
shlb
push
jecxz
push
xor
sahf
pusha
lds
jle
in
inc
repnz
inc
arpl
push
dec
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
