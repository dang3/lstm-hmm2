call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
dec
stos
jle
outsb
mov
scas
jge
push
mov
fwait
cmp
sub
sbb
or
pop
scas
dec
dec
mov
outsb
mov
cli
push
ljmp
into
sub
jp
push
pop
scas
dec
inc
mov
jbe
pop
cli
pop
ljmp
lds
push
or
aas
dec
cs
add
cmp
sub
es
sbb
pop
ljmp
sbbl
ljmp
icebp
adc
pop
xchg
dec
add
jecxz
and
and
aaa
insl
lods
out
lods
punpcklwd
xor
scas
pop
adc
popa
jp
pop
adc
imul
fwait
in
cmp
sbb
xor
lcall
mov
sbb
fnstsw
movsb
inc
imul
sbb
cli
into
adc
jg
sub
out
cmp
das
xor
sbb
fwait
jecxz
mov
adc
cmp
push
out
or
sahf
sahf
pop
dec
scas
dec
sahf
mov
jns
push
cli
adc
fidivl
lret
sub
sbb
or
pop
mov
sub
fmull
int3
jp
arpl
stos
push
into
inc
mov
repnz
ljmp
sti
dec
loopne
lcall
push
mov
lret
into
inc
mov
adc
scas
and
ljmp
xchg
push
ljmp
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
cli
push
ljmp
into
sub
sbb
or
pop
scas
dec
pop
mov
push
pop
xor
and
orl
cmp
mov
or
lods
dec
sti
ret
int
stos
sub
stc
pop
cs
outsb
outsl
and
jns
fucomp
cwtl
dec
pushf
xor
xor
movsl
sub
mov
nop
push
mov
mov
stos
test
or
dec
mov
mov
popf
stc
inc
jae
in
mov
and
mov
cli
test
push
pop
aaa
leave
dec
mov
fldcw
adc
aaa
fdivp
xor
mov
rorb
add
roll
arpl
dec
in
mov
jae
adc
push
inc
fs
movsb
add
lock
out
lods
dec
outsl
push
rorl
push
mov
add
shr
dec
cwtl
mov
insl
aam
insb
dec
pop
xor
and
mov
fmulp
addr16
loop
cs
jae
push
push
aaa
fwait
clc
es
jle
cmp
stos
xor
rorb
xor
sub
out
dec
inc
jae
pop
jns
mov
ljmp
jnp
add
ror
jae
lods
sub
lock
pop
gs
mov
call
and
cmp
testb
jg
inc
pop
pop
jb
and
adc
cmc
iret
jno
and
push
pop
mov
adc
inc
ret
insl
sahf
js
jns
and
das
jp
sbb
fldcw
loope
out
jb
jae
add
jl
call
fildl
xchg
test
ljmp
lret
jo
inc
das
imul
ret
loopne
xor
xor
sub
icebp
fidivl
pop
pushf
push
adc
pop
fmull
arpl
push
popa
inc
mov
adc
cwtl
out
cs
sub
insl
xor
sysret
scas
adc
add
pop
adc
adcb
sub
jg
or
mov
sub
loope
lock
stos
adc
rolb
lahf
xor
jns
and
xchg
xchg
daa
pop
mov
xor
cmpsl
leave
pop
pushf
bound
push
mov
dec
lret
nop
mov
aas
jg
inc
movsb
pop
test
sbb
mov
dec
inc
add
inc
adc
je
cltd
jp
stos
add
int
test
jmp
das
scas
inc
aas
cmp
rcll
inc
addr16
xchg
and
jecxz
loop
mov
out
adc
push
inc
adc
jo
xor
push
call
adc
xchg
cs
into
dec
mov
mov
adc
icebp
mov
cwtl
xlat
xchg
add
inc
movsb
pop
cmp
adc
xor
aas
shll
jo
ss
cmp
sub
int3
into
xchg
mov
repnz
sub
outsl
mov
out
jp
insl
push
mov
gs
adc
jle
das
cs
ret
les
call
and
xor
jb
clc
loope
jp
xchg
mov
push
xchg
jo
aas
jb
sbb
push
pop
sahf
mov
push
cli
call
loope
jnp
rorb
jecxz
add
mov
insl
add
push
in
jb
lock
gs
and
mov
push
data16
outsb
nop
sti
mov
and
pop
jecxz
lcall
adc
cmc
in
out
xor
and
xchg
ss
rol
repnz
adc
jae
inc
lahf
ljmp
frstor
xor
and
sub
repz
mov
sahf
cmp
lret
jmp
mov
ror
ja
sarl
scas
loopne
sbb
lahf
in
shl
sub
add
into
jl
and
sbb
scas
inc
movsb
fnstsw
jp
sbbl
mov
jnp
or
cs
shlb
daa
je
jg
sti
cmovo
adc
leave
or
or
nop
dec
lcall
xor
nop
add
cld
inc
subl
inc
testb
cmp
cmp
into
popa
aaa
mov
in
mov
aas
pop
mov
add
addr16
mov
fmul
test
pop
cmp
mov
cmpsb
sbbb
aam
roll
xchg
add
in
dec
adc
mov
dec
addr16
js
dec
repnz
cmp
fwait
or
inc
mov
mov
inc
into
xor
cmp
xchg
ret
mov
dec
sbb
inc
jo
sbb
enter
jo
sub
mov
push
push
enter
lret
xchg
dec
mov
xchg
sub
dec
or
shlb
ficoml
mov
test
inc
or
cmp
adc
mov
jmp
cmp
and
scas
inc
xor
jg
pop
je
jmp
jl
and
push
xor
and
jnp
ret
enter
enter
xchg
xor
inc
adc
test
add
movsl
hlt
jmp
test
icebp
inc
sar
cmpsl
sti
idivl
icebp
ret
mov
or
notb
out
sub
xchg
repz
pop
pop
es
mov
sbb
nop
sahf
fidivrl
pop
xchg
loopne
arpl
adc
std
xchg
dec
xlat
dec
push
adc
jne
test
jp
cmp
and
stos
push
mov
aam
out
fdivs
loopne
add
rolb
cmp
pop
outsl
ds
mov
mov
and
push
test
push
movb
xorb
in
jbe
pop
jbe
aas
jg
dec
orb
mov
movsb
lret
xor
push
and
dec
outsl
xor
sub
dec
bound
scas
add
or
in
lahf
inc
jnp
out
sahf
popa
out
or
lret
cli
push
test
cmpsb
mov
ds
pop
ljmp
inc
in
inc
test
adc
pop
add
adc
repnz
sti
cmp
jg
data16
test
push
jbe
jb
jle
mov
push
outsb
in
lds
scas
movd
push
shr
fildl
popa
push
jmp
testb
jne
mov
xor
or
cmp
and
dec
dec
cmp
out
cmp
in
ss
outsb
movsl
pop
or
push
add
xchg
or
xchg
mov
lods
cwtl
into
leave
popf
jo,pn
daa
jp
sub
ret
addb
xchg
in
mov
int3
sub
gs
rolb
and
inc
test
lret
movsl
or
dec
inc
outsl
xor
gs
jp
add
sub
sub
je
sahf
stc
cmpsb
sub
xchg
hlt
mov
or
and
or
mov
jns
in
jo
and
lcall
mov
xchg
in
dec
mov
ret
or
rcll
inc
into
rolb
sub
dec
push
pop
out
inc
pusha
or
mov
xchg
pop
aas
or
or
adc
sarl
in
xlat
jo
das
and
imulb
aam
scas
adc
xor
dec
mov
lahf
sahf
mov
nop
jb
lret
in
inc
cmpsb
enter
jge
fisttpl
movb
cmp
aaa
shl
arpl
ret
stc
sub
ficoml
jns
xor
ds
aad
pop
jo
repnz
and
xor
sub
loop
and
rolb
mov
inc
shll
add
andb
je
jb
dec
push
je
cli
ds
cli
and
fsts
in
pop
cmpsl
aad
sti
add
and
and
mov
or
jmp
or
out
sub
fdivrl
jmp
cmp
sahf
loopne
lods
xchg
push
outsb
cli
shl
fidivrs
movsl
mov
sbb
jbe
push
xchg
pop
out
les
divl
mov
xchg
xor
ss
clc
cs
mov
and
pop
and
ss
fsts
xchg
cmp
mov
mov
out
push
mov
fstp
xlat
or
in
ret
inc
cmpsb
ret
jns
pop
dec
lods
jnp
dec
ljmp
push
push
lea
jno
or
mov
clc
outsl
repnz
int3
dec
mov
pop
aam
loopne
mov
ljmpw
and
push
fists
inc
pop
ret
mov
dec
popa
add
loopne
outsl
pop
pop
lock
lea
add
fdivrp
out
jae
fldl
aam
lahf
push
out
jle
jno
xor
sahf
ret
add
jno
shrb
push
popa
sub
sbb
mov
mov
push
inc
insl
bound
adc
jge
and
clc
inc
sub
in
nop
shlb
cmp
dec
popa
jbe
stos
lods
cltd
sub
divl
imul
out
pusha
xlat
js
dec
mov
xor
push
xchg
ret
iret
imul
mov
jo
cmp
mov
cli
movsl
cmp
adc
fstps
mov
lods
je
cmp
out
les
jmp
or
push
rcll
call
or
lea
clc
cmp
into
stc
mov
dec
and
xchg
sbb
daa
or
or
and
mov
mov
addl
out
das
inc
ljmp
cltd
fisubs
pop
ret
sbb
jp
jbe
and
out
in
aaa
pushf
lcall
cmpsl
push
sahf
gs
adc
cmpsb
xchg
pop
movsb
aam
sbb
pusha
xor
stos
xchg
pop
xorb
add
cmc
mov
inc
sbb
insl
sub
iret
pushf
push
inc
ja
outsl
pop
mov
push
stos
dec
jbe
xchg
loop
shr
cmpb
cmp
inc
clc
fcmovne
aas
pop
filds
jns
or
clc
xor
stos
insl
cmp
mov
add
movb
clc
xchg
out
cltd
xchg
pop
mov
test
sub
adc
jae,pt
xor
adc
adc
leave
cld
jge
sbb
push
popa
mov
inc
std
pop
xrelease
stos
mov
shlb
push
es
imul
imul
or
ljmp
and
pcmpeqd
movsb
sbb
mov
mov
jge
popa
adc
jl
out
push
jp
jmp
xchg
fistps
add
mov
movsl
sub
add
mov
inc
inc
fdivrs
dec
sbb
pop
pop
jecxz
lret
push
cli
jae
jb
fcomip
pop
hlt
mov
stos
inc
xor
cwtl
add
and
xor
enter
lea
push
aad
gs
sub
jno
lds
arpl
int3
and
pop
les
push
jmp
sub
pop
out
insl
test
cs
mov
int3
xchg
jns
in
adc
push
test
mov
pop
inc
daa
fstpl
iret
outsb
inc
cmp
xchg
enter
push
jmp
arpl
daa
push
inc
icebp
rcrl
inc
flds
cs
fisttpll
sub
xor
sbb
fucomi
mov
mov
repz
ja
cli
rcrb
hlt
push
enter
add
lock
mov
imul
mov
adc
test
push
sub
mov
pop
add
ret
cmp
mov
cmp
aam
aad
faddl
sub
sbb
lea
je
adc
or
pop
cmp
pop
add
test
icebp
mov
imul
movsl
pop
push
adcl
pop
cmp
lods
in
push
sub
xlat
cmpsl
roll
xor
insb
sub
xchg
xor
pushf
sub
xorb
sbb
out
add
loopne
jle
loope
mov
fnstcw
jl
xchg
fdivp
enter
ret
cld
or
jmp
mov
cltd
and
sbb
sbb
and
sub
mov
out
push
test
enter
icebp
outsb
pop
xchg
cmp
insl
mov
mov
cmp
dec
mov
imul
xchg
in
in
je
clc
inc
push
icebp
inc
xlat
mov
cmp
inc
inc
cmpsb
xchg
sbb
mov
fwait
jmp
sbb
stos
cli
sbb
mov
sbb
and
ret
jecxz
cmc
repz
sbb
pop
aad
push
add
lcall
clc
push
stos
pop
or
pop
cld
jo
lret
dec
sar
cmpsl
out
xchg
or
insb
jg
lcall
scas
shlb
out
xchg
jge
movsl
out
jle
mov
ja
dec
shrl
or
rorb
sub
push
scas
shrl
sub
out
and
aad
fldcw
mov
ljmp
or
imulb
or
fsubrp
mov
dec
xor
daa
sub
out
je
repnz
xchg
data16
loopne
xor
mov
or
sub
lahf
ja
add
mov
jae
adc
repnz
or
negl
add
bnd
inc
and
decl
scas
adcl
push
ljmp
jg
repz
adc
cld
inc
sbb
jae
and
dec
call
outsb
add
rolb
scas
lret
cs
pop
mov
les
shrb
pop
mov
leave
cmp
inc
insb
mov
pop
test
or
gs
pop
or
cmp
push
ljmp
inc
or
sub
push
stos
pop
and
in
aas
out
inc
out
inc
insl
dec
das
test
aas
xor
stos
clc
and
sub
xchg
lahf
aaa
in
sbb
mov
adc
jae
jae
add
insb
and
fucom
push
and
jns
sub
shrl
fldl
popf
cwtl
add
jae
std
mov
mov
dec
cmp
adc
xor
xlat
repz
mov
mov
xor
pop
mov
xchg
loop
xchg
sbb
scas
shll
dec
out
xchg
shr
mov
push
ficompl
dec
add
adc
aam
in
fcomps
or
fildll
xor
push
std
jmp
xor
aas
add
movsl
and
cmpsb
mov
in
cmpl
icebp
push
sub
fdivrp
sbb
adcb
xor
in
scas
inc
popf
push
xor
arpl
nop
notb
pusha
mov
pusha
add
mov
xor
mov
inc
out
lcall
insl
xchg
or
data16
ljmp
test
fstl
aad
popa
testl
mov
xor
pop
cmpsb
cli
dec
cmp
xor
lods
pop
adc
mov
in
xchg
lods
ss
ljmp
and
or
movsl
add
mov
jg
xchg
subl
xchg
ss
sbb
dec
lahf
or
ret
out
hlt
cld
movsl
dec
inc
pop
inc
pop
inc
test
hlt
lock
lea
aam
push
sub
insb
mov
mov
popl
outsl
mov
or
xchg
add
adc
mov
ljmp
movb
mov
xchg
adc
push
cli
cwtl
inc
outsb
stos
stos
mov
jmp
mov
test
push
das
add
enter
mov
addr16
add
xchg
xchg
pop
pushf
xor
inc
shrl
scas
into
mov
lret
mov
xor
push
dec
cltd
add
pop
sub
fst
mov
mov
jge
mov
pusha
mov
and
sbb
add
repz
test
arpl
push
adc
fistpll
and
mov
sbb
fistpl
push
dec
mov
xor
inc
add
push
add
cli
adc
mov
xchg
sbb
cmp
xlat
push
jmp
dec
lock
adc
mov
scas
and
mov
incl
pop
push
lea
icebp
xchg
aas
pop
sub
out
jge,pn
cli
xchg
adc
jecxz
sarb
jne
jle
leave
dec
loope
les
fs
xlat
xor
ret
mov
movsb
mov
jle
in
mov
xor
shlb
into
adc
dec
inc
insl
inc
jmp
or
mov
cmp
hlt
pop
in
jmp
add
aaa
mov
repz
daa
sti
cmp
xlat
jbe
and
inc
call
lea
fsubs
push
into
jle
outsl
xor
in
ret
rclb
dec
int3
mov
add
int
jae
loop
dec
cmpsb
push
push
xchg
das
mov
jl
push
inc
push
xchg
int3
imull
dec
sbb
push
xchg
stc
loope,pt
sbb
pop
or
lret
push
adc
test
sub
cmpsl
daa
mov
bound
in
sbb
sbb
mov
jns
fcmovb
cmp
lret
ds
aad
pop
lcall
sub
lret
sti
pop
imul
outsb
jge,pn
jmp
cmp
sahf
add
rcr
or
lods
int3
es
inc
jb
shll
and
inc
push
call
and
out
cmp
cwtl
in
xor
iret
flds
lods
push
sub
push
mov
xlat
mov
xchg
lret
add
adc
pop
xchg
push
jb
or
xor
idivb
jmp
inc
sub
jns
or
xchg
or
stc
insl
mov
lock
mov
dec
sti
repz
xorl
mov
or
mov
or
insl
adc
add
adc
mov
ret
loopne
mov
mov
cmpsb
sbb
div
es
ljmp
stos
into
sbb
arpl
push
xchg
add
xor
xlat
lea
xor
cmp
lcall
push
push
jnp
cli
sub
jbe
sub
daa
data16
iret
stos
ljmp
scas
pop
push
push
out
inc
pop
bnd
mov
lods
shll
test
xchg
jmp
divl
mov
mov
and
add
shrb
cli
aas
and
or
push
mov
shrb
cmpsl
mov
pop
jno
adc
push
adc
sbb
ret
mov
or
andl
cmpsb
cs
out
scas
ret
jge
add
shl
or
sbb
scas
cmp
cmp
dec
mov
int
lea
adcb
cmpl
in
int3
inc
cltd
sbb
dec
mov
rorb
inc
xchg
mov
mov
mov
and
inc
test
fucomi
fldenv
jo
popf
push
fwait
icebp
xor
add
fs
outsl
inc
add
call
push
xchg
in
jo
rol
jns
xlat
inc
sub
xchg
and
cmp
xor
fcompl
lret
sbb
adc
push
mov
int3
xchg
stc
jg
mov
xchg
je
and
gs
movsb
jbe
das
popa
fcomps
inc
lods
mov
sbb
imul
fst
xchg
scas
xchg
stc
sub
subb
in
in
pop
sahf
lret
push
cmpsl
sub
and
mov
adc
in
loope
mov
call
loop
xchg
adc
es
xchg
lea
push
aas
mov
xor
jae
outsb
add
jbe
dec
adc
jge
xchg
imull
cmpsb
add
jns
mov
or
rcrb
or
out
dec
mov
mov
gs
mov
pop
cld
sti
push
sti
sbb
imul
ret
stos
inc
das
add
icebp
inc
push
mov
xchg
pop
jmp
in
testb
mov
pop
mov
pop
jecxz,pn
and
pop
adc
mov
rcrb
je
lret
test
pop
cltd
push
iret
add
lds
jns
dec
rclb
cmc
fistps
imul
enter
sbb
inc
xchg
test
add
mull
daa
xorb
imul
cwtl
aad
cld
vsqrtpd
inc
jp
stos
clc
addb
testb
repz
sbb
sbb
sbb
loopne
lock
loope
mov
scas
ljmp
push
adc
outsl
pop
repnz
mov
sub
mov
dec
popa
loop
adc
pop
inc
scas
outsl
mov
pop
xchg
bound
or
sarb
into
movsl
cltd
inc
insb
cli
rcl
addr16
enter
dec
mov
cmp
xor
mov
das
xor
dec
stos
mov
xor
jmp
subb
jg
cwtl
mov
cmp
adc
and
sbb
jb
scas
jp
jo
pop
xchg
cli
sbb
arpl
push
dec
xchg
adc
mov
out
or
mov
xor
pusha
or
sbb
add
es
dec
sub
inc
cwtl
aam
aad
test
push
in
push
push
or
mov
xor
mov
outsl
sub
or
mov
dec
xor
into
pop
xorb
das
call
rclb
adc
dec
push
xchg
cli
mov
stos
mov
outsb
mov
cli
push
ljmp
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
cli
push
ljmp
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
cli
push
ljmp
into
sub
sbb
or
pop
lahf
dec
push
jp
dec
lcall
mov
lds
adcb
jmp
movsl
push
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
std
cmp
dec
sbb
xchg
jns
dec
outsl
ss
in
push
std
mov
lods
stc
mov
enter
sub
or
pop
sbb
test
cltd
fisttpll
fcomps
sub
pop
or
pop
sbb
mov
aam
lods
mov
jge
add
insl
cmpsb
ret
negb
dec
insb
cmp
push
ret
ret
mov
daa
push
or
cmp
cmp
jb
test
xor
xchg
push
push
xchg
addr16
popf
push
call
gs
call
lret
sub
push
test
adc
jge
push
push
fadds
mov
cmp
sub
push
sbb
push
int3
pop
xor
or
clc
adc
out
add
or
inc
mov
stos
aad
or
jge
cmpsb
fadds
int
cmc
jecxz
rcr
rcll
sub
jmp
pushf
aaa
xor
jge
dec
sbb
sub
pop
sbb
test
cwtl
fisttpll
fcomps
push
and
dec
outsb
aas
pop
sbb
cmp
dec
mov
lret
mov
scas
loopne
jmp
inc
cmp
imul
sub
mov
mov
jle
mov
push
jnp
jge
jo
dec
cmp
dec
in
mov
fisttpll
fcomps
sub
pop
or
pop
sbb
test
cwtl
fisttpll
fcomps
add
ja
iret
pop
lea
jmp
psubsw
ljmp
xchg
arpl
fidivs
cmpsb
mov
fwait
in
loope
cmp
inc
push
jp
dec
movsl
cmp
jg
push
mov
inc
in
and
pop
xor
into
mov
or
sbb
xchg
add
push
inc
add
test
mov
inc
repz
push
imul
je
hlt
add
and
sbb
ljmp
fisttps
in
inc
sbb
idivb
xor
aam
scas
and
popf
xchg
cmp
push
std
dec
cmc
xor
dec
mov
push
mov
out
jg
mov
pop
call
mov
push
mov
add
inc
mov
leave
cwtl
outsb
add
pop
push
xchg
stc
insb
add
aas
filds
sub
out
imul
add
dec
nop
rclb
fs
bound
inc
fdivrp
movsl
xchg
adc
or
sbb
aad
sbb
jl
jo
jmp
rclb
loop
outsb
mov
and
popf
push
pop
nop
daa
jnp
jbe
in
jb
pop
jbe
inc
mov
mov
je
into
lods
outsl
in
imul
add
xchg
mov
mov
jnp
mov
inc
sbb
mov
mov
ljmp
insb
jmp
repz
ss
loopne
shl
xchg
pop
add
jno
mov
sub
cmpsb
nop
xchg
ror
stos
adc
fstp
mov
lret
dec
xor
pop
mov
loope
mov
ret
fld
cmp
cmp
pop
int3
sbbb
push
mov
inc
cmp
test
loop
jecxz
mov
mov
or
mov
outsl
inc
mov
sarb
inc
mov
or
inc
aaa
cmc
adc
push
stc
ret
sub
std
xor
xchg
pop
mov
xchg
movsb
push
add
sub
jl
xchg
mov
arpl
cmp
mov
mov
aad
inc
data16
cmpl
or
daa
orl
fistps
scas
mov
sbb
subb
test
cmp
jge
cwtl
jne
btc
rol
cld
ret
mov
loop
adc
es
divl
xorb
shll
insl
scas
shl
loop
push
sbb
or
mov
pop
es
sbb
cmp
gs
in
jne
pop
mov
mov
and
dec
outsb
mov
mov
xchg
std
aaa
adc
lahf
adc
fnsave
loopne
inc
dec
lcall
movsb
xor
mov
and
loope
rcrb
fstps
xor
adc
jae
fcoml
pop
xchg
cmp
mov
mov
pop
xlat
insl
inc
mov
rcrb
movsl
mov
aad
out
les
inc
loope
mov
inc
dec
decl
push
imul
xchg
lcall
clc
out
mov
int3
mov
movzwl
and
in
jae,pt
jge
mov
test
mov
and
push
dec
nop
movsl
adc
inc
cs
int
mov
clc
fstpt
inc
jmp
cmp
xor
popf
lods
xor
inc
pushf
sti
stos
das
pop
dec
jbe
push
lea
add
call
jno
xlat
jge
lods
movsl
xor
push
in
out
or
add
lcall
cmpsl
jno
fldl
iret
push
xor
sar
ss
fdivl
mov
pop
and
inc
out
push
arpl
xchg
div
adc
mov
fsubr
ror
ss
js
shrl
ljmp
xor
addr16
add
jne
lds
inc
or
inc
popf
dec
xor
mov
push
and
push
movsb
mov
loope
fisttpll
outsb
cmpsl
jns
test
push
je
jmp
ret
pop
rcrl
xchg
mov
in
jle
pop
dec
hlt
ffree
mov
loop
aad
add
push
insl
lods
mov
adc
mov
mov
cmp
mov
cmp
cld
push
pop
add
pop
sbb
dec
sbbb
add
cmpsb
not
lods
aad
xor
test
pop
jnp
lock
jnp
push
adc
ds
jg
dec
and
cmp
cwtl
dec
sub
fdivr
cld
xor
mov
xor
sti
cmc
cmpb
lret
inc
pop
int
popa
shr
xor
bound
repz
mov
xchg
call
mov
in
or
outsb
adc
adc
mov
dec
and
xchg
test
out
ret
ljmp
lds
xlat
lret
sub
loop
ja
jecxz
mov
adc
push
push
and
hlt
pushf
inc
icebp
out
or
mov
test
and
jg
fstps
push
jb
push
cli
adc
push
mov
push
and
push
ss
insb
xchg
das
xchg
mulb
adc
jle
lret
pushf
sub
pop
js
and
lds
in
and
jp
adc
pop
data16
and
mov
les
clc
shlb
lds
xchg
popf
bound
or
mov
pop
add
lcall
mov
pop
insb
out
incb
jne
push
mov
loope
sub
add
popa
mov
lahf
fdivrs
and
adc
pop
lock
cmp
test
gs
dec
and
movsb
jno
pop
cmp
movsb
or
mov
xchg
mov
fstpl
sub
jae
sub
cmp
and
mov
push
loope
scas
pop
pop
mov
sbb
xchg
mov
movsl
jns
repnz
stos
pop
sbb
sbbl
cwtl
sbb
ret
test
out
arpl
cmp
mov
fdivrl
std
int3
sub
lea
mov
inc
loopne
pop
nop
dec
test
cmp
jo
lods
ss
lods
xor
push
ret
cmp
sub
cmpl
loope
push
out
jmp
or
insb
mov
jge
movl
andb
test
loope
jp
fnstenv
in
jp
add
adc
or
cld
stos
lahf
add
loop
mov
lcall
in
mov
push
mov
lret
call
pop
xchg
pop
adc
adc
jp
push
je
in
and
jecxz
sub
inc
ficomps
xchg
fwait
cli
add
das
test
cld
rorl
test
push
adc
out
clc
jnp
dec
xlat
cmp
hlt
pop
push
aad
fisubrs
into
mov
cmpsl
add
test
pop
adc
xchg
rclb
fdivl
push
cli
jbe
sbb
ret
mov
movb
push
cmp
repnz
dec
mov
bound
cmp
push
imul
pop
addr16
adc
adc
cmpsl
jne
loop
dec
imul
leave
fsub
push
jno
mov
push
mov
lock
into
mov
shrb
loop
inc
xchg
cmp
push
lcall
out
call
jg
push
loop
mov
les
cmp
sti
bound
je
sahf
xorb
in
aad
imul
out
loop
or
mov
push
scas
imul
mov
xor
xor
bound
sub
jbe
movsb
and
push
std
lods
repz
scas
sahf
pop
push
push
jecxz
andl
inc
pop
cmpsw
hlt
sti
testb
ljmp
out
push
inc
insb
test
add
mov
call
ljmp
xor
xchg
cmp
testb
out
inc
lock
and
ja
cmc
sahf
cmp
stos
jne
pop
sub
push
jg
mov
addr16
hlt
mov
sbbb
push
lret
lock
jge
inc
sbb
test
gs
cs
pop
cvtps2pd
orb
repz
or
jmp
cmp
inc
push
push
add
pop
mov
outsl
or
mov
mov
mov
xor
mov
fmuls
popl
cmpsb
nop
mov
jb
add
cmpsl
mov
out
fldenv
mov
cmp
in
inc
cwtl
shl
jg
jbe
dec
xor
lock
pop
bound
jge
mov
pop
imul
and
jns
push
or
dec
pop
cmp
out
push
fbld
stos
and
lret
movsl
sbb
add
add
push
push
dec
lahf
adc
jnp
push
jno
mov
cmpsb
and
je
jp
and
fistpl
scas
and
lret
mov
stc
jecxz
cmp
imul
adc
dec
popa
lock
out
scas
fldcw
xchg
jo
add
out
aas
add
inc
mov
mov
loopne
cmp
loopne
mov
in
add
shll
mov
pop
fcoml
cmp
add
test
cmpsl
jae
push
lods
sub
loop
lahf
sbb
mov
popf
mov
mov
push
cmpsl
faddl
pop
push
jnp
addr16
dec
bound
notl
mull
aaa
enter
jl
out
inc
call
test
aaa
imul
mov
subb
lret
pop
inc
cld
adc
and
scas
sub
fs
jne
aaa
iret
arpl
or
std
out
adc
ja
ja
in
lea
ret
stmxcsr
mov
test
pushf
popl
xlat
jbe
xorb
inc
inc
dec
int3
call
dec
ret
jne
out
lds
cli
add
jne
push
adc
rclb
fcoml
lret
mov
dec
mov
mov
sahf
push
jge
inc
inc
in
jecxz
dec
mov
fsubrl
aas
popf
xchg
mov
rcll
sub
test
vmwrite
pushf
mov
rolb
repz
stos
andnps
test
pop
adc
jbe
out
mov
xor
insb
mov
addr16
imul
rcl
mov
mov
outsb
dec
jnp
iret
aas
mov
dec
push
test
scas
sbb
or
mov
push
loopne
jle
adc
mov
in
cmp
add
xchg
mov
sti
push
std
hlt
mov
nop
icebp
andb
mov
jl
popf
mov
mov
dec
dec
fsubl
ret
popf
out
pop
in
pop
or
sbb
mov
ljmp
cmp
cmc
or
mov
js
imul
ljmp
push
fiadds
jecxz
xchg
or
pop
pop
xor
adc
fwait
xchg
and
push
js
xchg
std
xchg
stos
jge
jle
push
loopne
xchg
push
stos
sbb
cmc
test
clc
push
clc
clc
out
adc
lahf
jo
or
sbb
xor
movsl
mov
flds
movsb
mov
adc
rcl
or
insb
or
movsl
or
mov
outsb
jecxz
sbb
mov
mov
push
fisubrl
in
push
pop
jmp
push
mov
xor
enter
and
mov
decl
push
cs
fldpi
mov
sub
ret
xor
fs
idivl
or
xchg
scas
add
jmp
fdivs
xchg
movsl
sbb
outsl
inc
inc
push
bsr
imul
lahf
mov
cwtl
and
mov
xchg
es
test
stc
pushf
adc
bound
mov
sbb
sti
inc
cmp
xchg
call
xlat
pusha
je
mov
and
mov
fsubrl
push
jbe
subl
in
test
js
fisubs
mov
sbb
inc
or
cmp
js
call
jbe
ds
pusha
or
add
jge
mov
pop
scas
fimull
xchg
mov
loop
pop
cmpsb
sub
cli
sub
add
jecxz
gs
inc
jle
cmpsb
rclb
mov
or
pushf
out
add
push
and
leave
xor
jo
xor
add
sub
inc
out
std
mov
push
adc
mov
imul
out
pop
popaw
pop
cmp
xor
mov
push
pusha
dec
test
xchg
stos
cmc
testl
je
sub
lods
xchg
add
addr16
xor
dec
imulb
jmp
addb
out
leave
pusha
mov
push
shrb
xor
xor
int3
jae
sub
into
jg
into
pop
cli
xor
push
rcrl
test
test
jp
ljmp
mov
je
or
push
aam
mov
loopne
fidivrl
int
fcoml
inc
je
outsl
pop
push
fdivp
stos
dec
xchg
out
mov
adc
shll
insl
pop
xor
sbb
loopne
shll
fiadds
adc
iret
sti
mov
sti
insb
and
das
mov
or
fstpl
fsts
pop
test
sbb
fs
mov
mov
inc
loop
aad
rorl
and
shl
cmp
add
jno
xchg
jns
int3
insl
add
or
sub
pop
aad
and
jge
mov
mov
lahf
clc
in
pop
pop
psubd
and
or
mov
or
add
xrstor
clc
jae
iret
xchg
test
ja
add
leave
test
mov
sub
lret
pop
mov
sub
imul
sahf
test
jno
imul
inc
mov
shll
fdivs
daa
dec
xor
ficoml
adc
call
jle
mov
aaa
cmp
sarb
sub
cmp
mov
mov
adc
push
adc
inc
sub
insb
shlb
data16
les
push
sarl
mov
add
jp
pushf
mov
jne
push
es
jne
mov
int3
inc
or
push
push
pop
inc
rorl
sbbl
or
jg
loop
dec
ret
dec
testl
daa
loope
loopne
shrb
xchg
pop
in
mov
jnp
adc
sbb
cli
fwait
lock
jns
mov
mov
mov
cld
shlb
add
pushf
pop
pop
jp
push
test
pop
ss
push
or
sub
packuswb
mov
xorb
inc
in
andl
add
fbstp
mov
jmp
aam
jo
decb
cmp
jnp
jo
lods
xor
sbb
in
xor
jbe
mov
into
mov
push
pcmpgtw
in
push
mov
mov
push
pop
ss
incb
mov
int3
push
call
jnp
in
jecxz
call
mov
mov
sub
or
aaa
adc
xchg
sub
mov
daa
add
out
push
mov
in
mov
je
das
fs
jge
mov
jecxz
inc
scas
rorl
add
int3
pop
sti
and
popa
xor
mov
pop
cltd
and
fwait
sbb
adc
sbb
daa
pop
push
mov
sarl
popf
out
in
movsl
test
mov
ss
ss
xchg
cmp
push
cli
ficoms
jne
sub
mov
dec
out
stc
std
dec
orb
mov
sti
dec
dec
rcrl
xchg
roll
fs
mov
bound
data16
rcl
movsl
pextrw
and
push
push
xor
jecxz
mov
add
jb
push
inc
sub
lock
shrb
sbb
adc
push
scas
lret
imul
cmpl
cmpsb
rclb
jo
ljmp
mov
push
bound
xchg
jae
in
stos
outsl
es
or
fcomps
sbb
test
data16
test
nop
jns
and
sub
inc
loope
xchg
adc
ficompl
cld
push
cmp
popf
int3
add
pop
push
and
adc
inc
mov
dec
pop
inc
aaa
jbe
in
mov
sbb
clc
pop
pushf
ret
mov
xacquire
insb
or
mov
mov
loope
xor
enter
push
ret
into
cs
mov
cmpsb
xchg
sub
mov
xchg
pop
movsl
ja
std
mov
mov
push
xchg
sbb
out
mov
inc
insl
test
mov
cld
cmpsl
xchg
bound
loop
xchg
testl
push
stc
repz
fs
xlat
test
ret
out
psubsb
ja
xchg
jae
in
out
test
mov
and
jnp
xchg
rolb
ss
and
fldl
inc
in
int3
and
adc
push
cmp
fmuls
arpl
orb
scas
add
enter
loop
rcl
imul
cmpsl
sbb
in
push
movsl
xchg
mov
divl
rorb
xchg
sbb
mov
push
aad
in
mov
push
int
xchg
loopne
adc
in
test
rclb
fdivrs
int3
mov
jnp
shrb
xor
test
inc
dec
cmp
into
xor
scas
mov
adcl
pusha
mov
xchg
cmpsb
push
mov
je
mov
adc
sbb
gs
pop
push
int3
rcll
push
mov
push
pop
hlt
aam
xchg
jmp
or
int3
or
pop
ret
adc
xchg
cmpsb
and
xor
lea
and
mov
mov
ja
or
xchg
sbb
push
movsl
out
adc
shl
mov
or
dec
scas
mov
pop
mov
mov
xchg
or
or
sub
mov
push
out
or
out
dec
dec
or
dec
fsubs
cmp
pop
and
xor
xchg
mov
xor
in
mov
pop
dec
dec
lods
in
or
sbb
push
enter
and
into
stc
fldl
pop
outsb
popa
test
xorb
cmp
mov
pop
pusha
loope
ret
inc
xor
dec
not
mov
insb
sub
jge
xchg
pop
jp
loope
xor
cwtl
data16
sub
xchg
imul
stos
xchg
es
jmp
mov
jl
hlt
pop
cmp
push
popf
ficomps
sbb
div
inc
or
incb
xchg
push
cmp
xchg
push
jp
sub
jae
adc
jns
addr16
adc
pop
inc
dec
sahf
sbb
inc
xchg
and
inc
hlt
imul
or
call
xor
lock
hlt
es
push
xchg
xor
xlat
incl
imul
pop
loop
mov
dec
pushw
xchg
adc
loopne
popa
data16
popa
fsts
push
adc
fldcw
notb
add
call
cmp
repz
push
lret
pushf
dec
sbb
pop
adc
rol
xor
arpl
cmp
sbb
daa
push
sub
ja
loope
cmpsb
out
xor
and
mov
je
dec
adc
inc
arpl
xor
sub
lods
inc
fists
test
lock
popa
jb
push
cmp
mov
mov
insl
shr
stc
call
cltd
xchg
xchg
std
fnsave
jae
xchg
fmul
lahf
mov
test
and
mov
stc
ljmp
jb
movsl
inc
push
rcll
test
cld
std
aas
mov
out
pop
mov
dec
dec
out
xlat
bound
adc
test
cmp
lcall
loope
adc
pop
loope
pop
mov
out
xor
mov
movsb
adc
in
mov
insb
pusha
pop
test
mov
and
lret
mov
xor
testb
mov
jbe
icebp
xchg
pop
mov
lods
and
lds
ljmp
call
dec
ret
and
test
dec
mov
mov
or
sub
lock
mov
lea
fisubrl
cli
cmp
inc
es
or
repz
fiadds
push
aas
add
pop
push
dec
cltd
and
mov
ljmp
xchg
mov
adc
cli
push
add
mov
pop
gs
inc
stos
dec
and
lods
xor
xor
sub
aaa
out
jecxz
or
dec
test
notl
cmp
lea
out
out
fisubl
in
pusha
loopne
cwtl
lds
xlat
inc
aaa
sub
rcrb
adc
loope
icebp
adc
shlb
mov
inc
aaa
call
mov
add
shll
lock
mov
cld
outsl
fwait
int3
popf
pop
push
add
out
or
mov
add
add
xor
inc
or
pop
jnp
mov
sub
fsub
inc
lea
mov
ds
repnz
daa
pop
imul
adc
xor
mov
adc
sbb
adc
out
icebp
stos
sub
jb
or
stos
xor
insl
push
or
push
inc
fldz
xchg
push
xor
test
repz
sbb
dec
mov
popl
sahf
ja
mov
mov
fwait
inc
fs
sub
sbb
sub
pop
sbb
test
cwtl
fisttpll
fcomps
sub
pop
or
pop
sbb
test
cwtl
fisttpll
fcomps
sub
pop
or
pop
sbb
test
cwtl
fisttpll
fcomps
dec
sbb
sub
pop
sbb
add
fidivl
pop
jb
bound
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
xorl
outsl
mov
xchg
movb
xor
and
jno
popa
pop
xchg
inc
xorl
push
dec
ss
es
xchg
and
xor
and
xor
xor
in
dec
std
sbb
fdivrp
into
stos
bound
push
fisubrl
roll
out
xor
adc
popf
out
dec
xor
and
mov
dec
lods
ret
int3
repz
aas
pop
sbb
nop
dec
jmp
sbb
sbb
xor
push
or
xor
push
pop
xorb
sub
push
nop
push
test
out
sahf
xorb
push
push
push
pushf
cmp
jno
inc
inc
mov
jno
push
ds
or
stc
test
ret
out
xchg
push
out
sbb
sbb
mov
roll
and
cmc
test
inc
xchg
adc
mul
and
xchg
pusha
rcrl
mov
incb
mov
sbb
test
xchg
gs
inc
jno
xor
inc
shll
sahf
popa
and
push
cs
imul
jno
mov
xor
js
jae
and
push
xchg
xchg
ds
add
into
shlb
lods
test
addr16
lahf
push
out
je
push
xchg
push
mov
add
or
and
jne
push
loope
ret
push
shll
es
adc
add
xor
and
jno
popa
push
xchg
inc
xorl
push
shll
es
adc
add
xor
and
jno
popa
push
xchg
adcb
cmp
push
scas
inc
stos
xchg
shll
rcll
mov
xor
sub
sbb
xlat
imulb
loopne
mov
lahf
notb
stc
adc
and
xor
lds
jg
ljmp
dec
jbe
jmp
add
popf
sti
lret
push
xchg
scas
and
scas
xor
shll
call
icebp
sub
mov
loope
xor
dec
xchg
cmp
mov
adc
sbb
sub
inc
push
mov
inc
lcall
call
add
out
sub
cmp
ret
add
lret
daa
mov
mov
xchg
cmp
fisubrl
push
out
xor
test
jl
push
sub
fcoml
push
loope
sbb
mov
js
or
leave
push
add
sub
int3
and
stc
stos
or
push
push
xchg
dec
cld
sbb
mov
cmpsl
sbb
inc
insl
push
pop
add
leave
and
je
dec
test
mov
fisttps
mov
xor
bound
or
lret
enter
and
pop
movsl
ljmp
xchg
int3
ret
push
cwtl
dec
push
dec
sub
and
arpl
jmp
jg
es
daa
add
dec
jnp
xchg
xchg
sbb
rcrb
ret
xor
lret
fists
or
fcomps
mov
sub
sbb
xor
hlt
jns
adc
jbe
not
mov
add
inc
mov
leave
push
and
dec
xchg
imul
dec
ja
push
jbe
sbb
int
xchg
xchg
dec
cmp
in
fptan
push
lret
add
std
cmp
cmpxchg
push
dec
cmp
mov
addr16
loop
shlb
jmp
repz
subb
pop
jbe
dec
mov
stc
push
sbb
mov
arpl
les
inc
cmp
mov
enter
int3
out
popa
push
push
in
mov
sbb
fcompl
xchg
int3
lahf
sbb
lea
cs
cltd
cmc
loope
mov
xlat
push
sahf
cmp
and
jle
in
pop
fwait
stc
mov
movsb
rcrb
xchg
pushf
adc
sub
push
nop
mov
stos
imul
mov
jb
fadds
lahf
pop
mull
lods
mov
subl
pop
mov
sub
or
xchg
std
int3
dec
push
mov
mov
insb
xor
arpl
sbb
mov
ljmp
xor
xchg
clc
push
or
daa
repz
icebp
insl
pop
mov
adcl
add
xor
pop
jae
xchg
pop
lret
lahf
fbstp
pusha
inc
dec
fdiv
out
out
mov
mov
repnz
mov
jne
fucomp
mov
mov
pop
mov
cmp
mov
dec
sar
popf
xor
aad
into
or
push
fistpll
push
out
out
or
add
in
movsl
cmp
cld
in
jecxz
dec
test
jmp
xor
adcl
subl
test
mov
xor
mov
push
mov
pop
lret
add
adc
sub
cmpsb
add
scas
fldl
imul
in
xor
loope
jo
je
insl
xchg
mov
push
add
mov
sbb
negb
movsl
arpl
xchg
aaa
ss
push
gs
shrl
out
push
leave
cmc
add
insb
pop
cltd
jg
sbb
mov
enter
or
js
mov
jle
push
jmp
sarl
mov
push
xor
pop
lock
addr16
xor
push
push
sub
shlb
adc
loope
movsl
ret
pushf
pop
clc
test
lret
mov
lock
sub
dec
faddl
ret
outsb
mov
rcll
xor
out
add
pop
xchg
inc
imul
stos
mov
clc
out
jmp
fsubrs
fimuls
sub
loopne
adc
ds
incb
es
cli
aad
mov
rorl
or
imul
fsubr
ss
sub
ret
loope
cltd
mov
cmp
aad
pop
cltd
jmp
scas
ss
inc
sarb
lretw
lret
mov
xchg
mov
push
or
ror
jmp
jecxz
sbb
cmp
mov
in
jne
mov
jo
mov
mov
stos
popa
mov
stc
cmp
push
in
stc
fwait
sti
add
mov
jecxz
pushl
jg
imul
addr16
aaa
ret
cmp
and
iret
aaa
gs
ja
and
aad
and
stos
push
push
ficomps
aaa
ljmp
dec
xor
push
pop
pop
inc
push
fdivp
xlat
cmp
int3
push
xchg
xchg
push
cmpsl
pop
and
mov
shlb
add
sahf
vminss
or
add
push
leave
outsb
lds
push
jne
aam
pop
sti
inc
or
inc
in
cmpsb
sub
mov
mov
mov
in
or
cmp
push
pop
dec
stos
mov
dec
in
cmpb
int3
mov
lret
fisttps
add
shl
mov
ret
in
xchg
andb
pop
incl
add
dec
test
push
pop
clc
mov
xor
mov
add
fiaddl
cmp
sbb
sbb
inc
test
shlb
inc
fiaddl
mov
cwtl
int
mov
out
lds
or
repnz
gs
inc
sub
fisubrs
cmp
outsb
mov
dec
nop
sbb
fsubrl
push
jbe
fsubrl
es
and
jo
add
cli
jo
data16
inc
movsl
cmp
lahf
movsl
scas
xchg
les
aaa
std
pusha
dec
les
xchg
aam
out
pop
sbbb
mov
xor
fistpll
ljmp
mov
fwait
cltd
cmpsb
mov
mov
popf
bound
fistpl
jno
nop
jns
mov
sbb
clc
fisubrs
mov
add
sbb
sbb
cli
xchg
add
popa
int3
inc
fnstenv
negb
imul
fs
imul
sahf
jl
push
adc
sbb
sbb
jmp
xchg
adc
mov
sti
shlb
mov
lea
mov
sub
jno
outsb
or
inc
mov
cwtl
push
int3
pop
icebp
push
or
mov
inc
xchg
shrl
sbb
outsl
cmc
out
adc
xchg
dec
and
xchg
add
aas
jp
jne
clc
xchg
cmp
adc
insl
sub
fldenv
sub
pop
out
pop
dec
or
icebp
sbb
pusha
push
sahf
fidivrs
pop
les
pop
hlt
mov
fldcw
stos
int3
add
pop
mov
add
sub
push
lods
inc
inc
ss
xor
ja
mov
repz
mov
shrl
divb
arpl
fimuls
call
cmc
stc
push
add
jnp
dec
fs
popf
xchg
inc
xchg
cmp
mov
jl
jle
inc
mov
addr16
and
js
scas
adc
mov
sbb
dec
sbb
scas
faddp
add
add
and
mov
cmp
jge
pop
adc
inc
jo
push
inc
or
inc
push
arpl
es
ret
adc
jne
mov
mov
pop
ret
cmp
aas
fucomi
pop
pop
psraw
stc
sub
dec
insl
pushf
cld
sbb
xchg
jns
push
ret
fstpt
jnp
dec
pop
jo
gs
xor
pop
leave
dec
movb
push
or
jb
add
fistps
sub
in
or
push
inc
mov
inc
aad
sti
add
ror
inc
fiadds
xor
pop
std
inc
pop
sbb
cs
fidivs
or
ficoml
add
jo
add
adc
pop
sub
inc
xorb
imul
pop
into
in
inc
cwtl
mov
les
cmp
mov
adc
push
dec
idiv
movsb
pop
mov
sbb
jecxz
mov
jl
sqrtps
fcomps
in
jns
ss
xchg
sahf
mov
pop
mov
aad
mov
inc
imul
daa
pop
add
adc
in
lock
mov
int3
mov
lahf
cmc
jbe
cli
xchg
mov
out
hlt
enter
xor
push
pop
ljmp
arpl
mov
and
add
jmp
inc
ret
mov
popf
loop
jp
adc
adc
es
or
in
mov
xor
push
fs
mov
mov
mov
les
sub
pop
jp
mov
mov
jge
movsb
js
es
stos
dec
push
test
aam
pop
push
mov
sub
cld
stc
rcrb
dec
cli
jno
push
cmp
mov
je
add
int
mov
lods
into
dec
inc
loopne
subps
insb
gs
lods
aam
dec
mov
mov
sbb
mov
and
push
push
fucomi
in
jle
pop
es
pusha
outsb
mov
adc
shrb
xorl
movb
mov
aaa
add
inc
std
and
mov
sub
xchg
push
inc
pop
pushf
dec
and
xor
mov
jle
scas
xchg
adc
xchg
outsl
mov
pop
iret
mov
mov
cwtl
inc
inc
push
adc
repz
aas
or
mov
fsubrs
mov
add
dec
pushf
cmp
push
inc
aas
jg
xor
ljmp
out
jecxz
insb
or
xchg
mov
cli
jl
in
jo
push
aam
adc
test
inc
mov
popf
repz
jbe
jb
push
movsl
sbb
mov
push
xor
call
mov
lea
subl
call
add
imul
pushf
push
lds
ret
insb
xchg
jne
rclb
push
fsubr
outsb
fbld
pop
js
lret
jl
cmp
int
xchg
push
sahf
movsl
stos
push
popa
je
xor
xchg
lods
popf
sbb
add
imul
movb
xchg
int3
cmpsb
lcall
outsb
or
pop
movb
cmc
and
lea
rcrb
xchg
mov
cwtl
xor
xor
inc
cmp
inc
xchg
push
mov
xor
mov
push
pop
sbb
sub
jecxz
aam
mov
movsl
test
and
and
out
push
xchg
mov
mov
fwait
repz
test
push
sbb
fs
shl
insl
and
mov
push
adc
sbb
clc
xchg
in
inc
mov
push
push
or
pop
daa
aas
inc
ficoms
loope
xchg
ss
push
aaa
sub
pop
loope
lods
stc
fcom
add
sub
inc
sub
out
dec
lea
dec
adc
out
lret
lods
test
inc
imul
xchg
int3
cmp
aam
jae
scas
xchg
icebp
enter
outsl
cmc
or
scas
adc
stos
inc
cmp
sbbl
fistpl
adc
adc
lret
imul
cli
xchg
lea
pop
sbbb
decb
ficompl
out
enter
xor
and
outsl
push
dec
arpl
bound
adc
mov
loopne
lds
lods
mov
dec
sarb
std
mov
mov
movsl
fisttpl
jb
adcb
arpl
jae
pop
adcl
push
repz
cmpsb
mov
mov
push
pinsrw
push
lahf
fwait
adc
pop
les
sahf
xchg
inc
cli
in
incl
test
xchg
arpl
movsl
flds
das
xchg
test
xor
jbe
stos
shll
xchg
pop
movsb
xchg
jne
int
hlt
aam
jmp
sbb
adc
jle
fs
mov
mov
cmp
push
inc
test
cmp
iret
mov
and
xchg
je
repz
outsl
adc
leave
xchg
arpl
cwtl
dec
lods
dec
cwtl
fwait
pop
and
xchg
les
pusha
into
je
mov
shlb
xor
adc
mov
out
clc
add
push
jmp
adc
jecxz
fs
scas
lea
enter
inc
or
mov
sub
push
loopne
testl
rolb
ror
and
add
sahf
inc
leave
icebp
mov
pusha
test
fisttps
mov
pop
pop
cmpsl
stos
addr16
and
jp
insb
testb
lods
ljmp
mov
ss
dec
iret
xchg
adc
mov
mov
cmpsl
jno
jp
add
inc
outsb
repz
dec
pushf
enter
lods
test
subl
aad
pop
mov
xor
addr16
adc
mov
push
test
test
mov
ja
pop
pop
sbb
dec
dec
es
cmp
sub
jmp
iret
loop
sbb
mov
insb
out
push
push
mov
adc
stc
and
cmpsb
or
cmpsb
jge
push
push
xlat
in
stc
stc
add
jbe
inc
jno
mov
pop
and
xlat
pushf
fldenv
pop
cmp
xlat
pop
xlat
cmp
js
dec
and
jbe
gs
movl
add
xchg
sub
pop
push
inc
mov
jl
idivb
adc
nop
inc
cwtl
or
mov
rcr
in
and
loope
cmp
inc
daa
xor
inc
push
mov
enter
cmpsl
into
jg
adc
aas
mov
lret
loop
pop
or
cmp
inc
enter
hlt
cltd
and
and
ja
sub
stos
mov
cmp
inc
add
arpl
mov
sbb
sub
popa
std
cmp
mov
orl
xor
cmc
xchg
cwtl
ja
mov
in
shrl
or
mov
rsqrtps
loopne
cltd
mov
addl
xchg
add
pop
fcmovb
cmpl
push
adc
mov
or
popa
cmp
push
rcll
or
pusha
adc
leave
inc
push
push
enter
mov
dec
cmc
add
add
or
xchg
push
pop
sbb
inc
push
xor
push
in
add
xchg
pop
fcomip
and
mov
sub
push
shl
in
lret
mov
mov
lods
sub
jle
xchg
int
and
aad
sbb
inc
sahf
sub
scas
out
xchg
push
cmp
xor
cwtl
inc
leave
jl
fstpl
mov
add
mov
popa
rclb
mov
aas
mov
fstpl
xchg
lea
push
scas
popf
arpl
ficomps
das
out
xchg
cmp
data16
fmul
adc
fs
incl
out
xchg
and
imulb
xchg
rorb
stos
popf
mov
mov
and
mov
movsl
push
mov
mov
xorb
mull
jo
dec
mov
add
xchg
jg
jns
stc
and
stos
insl
loopne
cmpsl
mov
pop
xor
fbstp
insb
stos
adc
inc
jge
scas
jbe
imul
test
cmc
daa
and
inc
lods
inc
push
loopne
inc
xchg
scas
out
xor
outsb
sbb
cmpb
cltd
sub
data16
push
dec
clc
adc
fimull
fwait
pop
cmp
mov
inc
add
jns
add
mov
mov
shll
mov
hlt
dec
shlb
mov
xor
lods
sub
rol
sbb
add
in
movsl
jne
push
outsl
mov
cmc
mov
inc
ss
movl
enter
out
dec
inc
iret
stos
xchg
lret
das
inc
daa
jmp
aaa
cwtl
out
jecxz
in
cmp
xlat
int
and
mov
jbe
jl
movsl
addr16
jb
or
mov
lret
aad
xchg
subb
iret
xor
pusha
and
or
into
mov
pop
jne
fstpt
mov
sbb
xor
addr16
xchg
lret
push
mov
or
mov
cmp
in
test
shrl
push
mov
cmp
fdivrs
inc
pop
movsb
pusha
in
xor
cltd
out
repnz
orl
or
pop
pop
sbb
pop
pop
ret
cltd
shr
jmp
out
cmovb
or
inc
das
pop
sub
mov
jae
arpl
push
rcrl
lret
xchg
insl
inc
sti
or
fcoml
sbb
daa
adc
divb
or
ljmp
cld
mov
add
jl
cmpl
mov
fdivrs
fs
fs
fcomi
rcll
push
mov
cmp
loop
je
or
push
adc
test
sub
scas
push
imul
outsl
jg
pop
loopne
xchg
cmp
es
rcll
in
ja
pop
dec
daa
jl
hlt
repnz
scas
insb
sbb
jl
push
aam
pop
xor
movsb
loop
adc
push
adc
cmpsl
fwait
or
xchg
inc
push
out
xor
xchg
sbb
nop
mov
mov
cli
sbbl
lret
cmpsb
sub
pop
aas
sub
adc
and
mov
aad
cltd
aam
mov
or
sbb
cmp
mov
shlb
mov
mov
jecxz
and
insb
pushl
inc
pop
jns
cmpsl
test
mov
fldl
arpl
sarb
xor
mov
das
and
sti
add
leave
push
fwait
ljmp
jge
push
and
movsb
push
xchg
inc
pusha
sub
ljmp
out
popa
xchg
inc
xchg
mov
push
rep
cmp
inc
in
aad
sub
push
out
daa
in
dec
je
dec
jp
push
mov
test
mov
pop
cmp
or
outsl
fs
lods
loopne
push
out
dec
jo
push
mov
push
add
jnp
adc
sub
pop
mov
mov
in
out
or
sub
les
cmp
fs
add
outsb
rcrb
pop
pop
xchg
lret
imul
test
push
mov
aaa
or
ss
dec
inc
dec
lret
dec
fidivrs
jg
lret
sti
in
out
insl
push
out
cmp
and
dec
xchg
ja,pt
pushl
xor
pop
bound
idivl
in
sar
dec
sbb
fiaddl
fldt
cmc
and
int
adc
xor
shll
sub
imul
in
ret
aaa
jge
mov
push
call
cltd
icebp
fs
or
sar
xchg
jle
scas
rcll
and
xor
aam
sbb
pop
fnstsw
shll
and
sti
push
mov
jo
fwait
scas
cmp
sbb
bound
pop
stc
pop
or
pop
mov
lods
jge
add
shr
mov
addr16
push
dec
shlb
mov
icebp
outsb
jbe
pop
in
lods
inc
mov
aam
int
xchg
or
push
shrl
daa
clc
xchg
stos
sub
lds
outsl
rorb
mov
test
xor
sbb
imul
pop
bound
mov
inc
in
dec
push
lret
rcrb
add
jmp
leave
mov
hlt
push
pop
add
jnp
mov
movsb
dec
inc
fadd
lods
xor
push
pop
fmul
in
cmpb
test
negl
int3
dec
adc
or
pushf
ss
sbb
inc
mov
aam
pop
outsl
pusha
xor
fmull
sbb
pop
das
hlt
push
cmpsl
test
mov
fs
push
jae
fcmovnb
fiaddl
jns
sbb
loopne
aaa
out
fidivl
enter
xor
mov
jns
add
aas
daa
push
scas
cmp
arpl
shrl
sar
nop
lds
jmp
leave
pop
sbb
pop
xlat
mov
adc
cmp
repnz
cmp
test
clc
pop
inc
xchg
outsb
mov
push
in
daa
mov
leave
add
insl
mov
test
xchg
adc
add
fsubrs
fisttpll
mov
and
shlb
lea
fs
fisttps
or
imul
mov
enter
lret
push
paddsb
xchg
push
loopne
movsb
in
aas
add
pop
data16
fildll
sub
lret
loope
in
fwait
inc
aas
add
rcrb
inc
insb
movsl
popf
jb
pop
out
or
mov
in
pop
sbb
xchg
int
add
push
or
adc
fcompl
mov
pop
andb
cmpl
dec
or
push
sbb
sbb
xor
push
lock
xchg
add
scas
jmp
es
xlat
xchg
mov
imul
add
mov
jne
add
jo,pn
es
sub
cmp
push
fmul
inc
push
cs
xor
push
pop
mov
insl
negb
sub
cmp
pop
ds
mov
xor
shll
movsl
pop
js
xchg
insl
jmp
rolb
test
adc
cmp
push
daa
xchg
stos
cltd
shlb
test
lods
or
test
pop
xor
std
jno
xchg
mov
xchg
subl
lret
popa
aaa
xlat
pop
jle
xlat
mov
cli
icebp
jne
loop
lds
outsb
mov
lds
push
or
mov
subl
roll
shll
es
adc
add
xor
and
jno
popa
push
xchg
inc
xorl
push
shll
es
adc
add
xor
and
jno
popa
push
xchg
inc
leave
leavew
mov
ss
daa
loope
leave
movb
xor
and
push
xchg
popa
dec
xchg
push
mov
mov
ss
loope
out
cmp
loope
push
mov
movsb
lods
mov
xchg
test
imul
cmp
sbb
or
inc
dec
inc
pop
ret
lods
mov
jmp
xchg
popf
out
imul
int
test
or
daa
pop
ja
inc
dec
push
pop
pop
mov
movsb
adc
hlt
xchg
in
aad
movl
jb
or
add
xor
loope
int
call
idivl
testl
and
push
and
lods
dec
aaa
pop
test
int
popf
ja
dec
xor
rcl
inc
ret
sbbb
cwtl
or
test
pop
xor
repnz
mov
iret
in
jno
aaa
cmp
ja
xor
dec
imul
repz
jb
into
sbb
imul
cmp
aaa
ret
xor
nop
cwtl
push
ja
inc
mov
dec
pop
sub
jmp
dec
lds
shll
and
insl
mov
push
sub
xchg
pop
sbb
pop
cmp
loop
adc
xor
repnz
ljmp
pop
cld
mov
xchg
popf
add
std
int
and
das
jne
gs
push
pop
into
lods
call
cltd
pushf
mov
xlat
mov
bound
jb
adc
and
xor
rcl
cmc
div
mov
xchg
mov
mov
gs
pop
push
sbb
sub
sub
lods
fstpt
mov
idiv
int
frstor
sub
pop
sbb
inc
dec
push
pop
cmpsl
lods
mov
xchg
idiv
int
frstor
sub
pop
sbb
inc
dec
push
pop
cmpsl
lods
adc
sub
arpl
mov
shll
cli
pushf
xchg
mov
cmp
sbb
sub
decl
jg
sbb
push
test
mov
mov
adc
inc
shll
cmp
scas
adc
lock
in
icebp
imul
pushf
xchg
adc
and
pop
ds
mov
test
sbb
shrb
aad
mov
xor
mov
mov
jne
dec
sbb
jl
jmp
rorl
mov
sbb
imul
add
into
inc
cmpsl
data16
popf
jg
das
dec
iret
push
outsb
aam
cs
sub
xor
loopne
jmp
fbstp
out
mov
test
jnp
mov
pop
mov
pop
add
les
push
imul
or
daa
out
arpl
scas
repnz
aas
push
in
mov
ret
cmp
xlat
mov
popa
push
stos
push
add
xlat
jecxz
xchg
sub
lock
aaa
xchg
mov
inc
inc
mov
insl
adc
leave
out
push
jns
mov
xchg
pop
lcall
in
jb
pop
sub
push
cltd
stos
movsl
leave
jle
jl
js
mov
push
jmp
pop
pop
dec
loopne
and
mov
inc
inc
ss
int
outsb
rcll
cs
mov
push
repz
jns
or
sub
adcl
scas
sbb
add
jb
xchg
das
push
fistpl
lahf
imul
fnsave
sti
aad
mov
daa
add
rorl
add
mov
rcl
pop
sbb
xor
push
jne
fidivs
pop
or
add
daa
dec
iret
rcl
int
jo
push
test
xor
dec
popf
jl
andb
mov
push
jmp
daa
neg
loopne
dec
clc
mov
fwait
sahf
arpl
and
fxch
dec
aam
jge
push
sti
stos
push
fadds
outsl
scas
shll
and
sub
cmc
notb
loopne
test
xchg
ret
jle
popf
mov
push
mov
test
xor
mov
add
mov
pop
or
push
arpl
ret
mov
push
js
sub
push
sbb
fadds
mov
int
jb
push
mov
mov
cli
and
adc
inc
scas
data16
cld
hlt
fnstenv
mov
dec
rclb
sarb
mov
jl
rcll
pandn
pushf
jge
movsl
push
out
pop
pop
jae
dec
div
dec
lret
xchg
inc
pop
lods
dec
roll
rolb
mull
mov
es
dec
rcr
mov
and
dec
pop
frstor
hlt
xchg
int3
or
lods
les
lds
or
jae
or
pop
mov
dec
xor
jecxz
mov
add
aam
addb
xchg
jle
push
jecxz
mov
cmp
dec
jb
xor
xor
lock
ss
popf
xchg
push
and
insb
push
pusha
out
rcll
pushf
jnp
mov
cmp
in
jmp
push
cmp
aaa
cmpb
outsb
stos
in
loop
sub
push
cmp
pop
cmp
fs
fnstsw
inc
push
adc
xlat
clc
mov
aaa
cmp
in
je
jge
addl
ret
or
testl
adc
fs
mov
test
cmp
add
repz
mov
and
inc
mov
inc
push
dec
cld
jno
pop
outsl
add
cmp
loop
and
jne
aaa
andb
xchg
lods
idiv
lret
movsb
dec
ret
add
lock
xor
ljmp
test
out
imul
mov
loope
fwait
jle
loopne
pop
mov
push
pop
and
adc
add
sbb
icebp
mov
imul
xor
inc
in
mov
cmpsb
xchg
and
jo
aas
pop
inc
ficoms
rorb
mov
popa
std
mov
jbe
int
out
push
sub
and
adc
lret
in
mov
cmp
xor
mov
dec
mov
repz
push
add
pop
inc
cli
pop
hlt
lock
dec
xor
aas
cmp
int3
dec
clc
scas
mov
and
mov
jmp
adc
scas
adc
xchg
jecxz
mov
lcall
lea
add
adc
fs
sub
pop
mov
push
stos
sub
scas
inc
ret
je
lret
aaa
mov
lret
cld
faddl
push
mov
in
jnp
push
push
sub
pop
test
push
subl
or
mov
cmpsb
repz
jl
or
loop
jecxz
imul
out
out
adc
lds
pop
or
mov
shll
inc
fnstenv
jo
cmc
and
mov
sbb
xor
lret
and
lret
les
jmp
and
add
mov
cs
idivl
imul
cmc
adc
sub
sahf
jmp
stos
leave
xchg
mov
test
cmp
jl
leave
mov
lcall
mov
adc
shl
ret
push
push
enter
or
imul
lods
enter
repz
in
shlb
pop
lcall
sub
xchg
pop
adcb
out
cmp
inc
fdivr
mov
sub
lcall
sbb
js
adc
out
sarb
in
push
fwait
cli
leave
adc
lods
sbb
lcall
ret
popa
adcb
mov
push
imul
arpl
jae
inc
cmpsb
mov
adc
sbb
add
divb
es
mov
jb
adc
shr
pop
xor
ljmp
inc
cltd
andl
dec
out
in
mov
adc
cmp
cmpsl
push
or
pop
dec
push
movsl
or
xor
fst
addb
mov
das
shlb
mov
ja
mov
push
jbe
jmp
sarl
push
xchg
insb
cmp
lret
and
std
lahf
faddl
jo
sub
mov
xchg
push
inc
adc
shll
sar
jge
or
stc
fildl
xorb
jae
or
or
sbb
jl
imul
cmp
das
inc
pusha
into
out
xchg
mov
mov
cmp
cmc
jbe
xor
mov
push
movsb
mov
scas
stos
pop
jmp
divb
je
cmp
jl
movb
sub
rcl
das
push
sub
jmp
add
and
insl
add
nop
imul
mov
pop
aad
inc
push
int3
sub
xlat
sub
dec
shrl
stos
adc
in
insl
lods
sahf
aas
shll
lahf
or
jo
imull
mov
and
psubusb
xadd
mov
sbbb
mov
loop
push
xchg
daa
enter
fs
or
shll
dec
int3
in
mov
iret
push
sti
pop
loopne
addr16
sub
push
adc
lea
test
fcmovb
movsl
cmpsl
jg
jp
das
sub
jae
aaa
cmp
mov
xchg
jno
push
les
shl
add
xor
imul
push
pop
maxps
inc
and
pusha
xor
ror
sub
mov
xchg
mov
leave
nop
jecxz
movsl
test
fmuls
loope
cld
sub
repnz
jbe
adc
ljmp
shr
push
and
lret
jg
xchg
jmp
dec
inc
inc
nop
scas
addl
xchg
xor
xchg
sbb
sbb
mov
fsubrl
or
add
push
mov
cli
out
jge
jb
movsl
clc
lret
arpl
add
shlb
sarl
in
adc
in
push
jne
loope
jae
out
test
fldenv
add
sbb
es
into
mov
dec
cs
notl
sub
cmp
inc
nop
repz
cmpsl
push
mov
pop
daa
jo
and
dec
adc
mov
jmp
sub
lcall
jno
lea
inc
mov
jp
pop
test
rol
imul
cmc
and
les
aam
mov
loope
or
push
push
jbe
loope
pop
push
bound
pop
adc
pop
cmp
cmp
leave
repz
rol
or
cs
dec
and
aam
xor
pop
lret
add
ja
sbb
out
test
outsl
aaa
stc
dec
sub
push
or
rcrb
fiaddl
or
xchg
push
movsb
or
out
add
mov
mov
pop
das
xchg
lcall
xchg
or
subl
xchg
aaa
subl
dec
pop
mov
adc
jge
push
jl
stos
cmpsb
xchg
loop
cmp
add
lods
inc
movsb
out
sub
in
sbb
fisubs
movsb
jae
jo
imul
mov
sbbb
mov
add
cli
inc
pushf
inc
mov
mov
clc
dec
imul
and
dec
ja
int
mov
cs
ficoms
lret
loopne
pop
movsb
or
cmp
test
std
inc
hlt
rorb
push
sbb
addr16
ja
aam
imul
and
dec
cmp
in
mov
mov
aas
pop
push
adc
xor
loop
cwtl
out
xchg
pop
jnp
test
dec
inc
pop
mov
jp
cmp
cmp
test
inc
push
xor
leave
fisubs
jno
les
fnsave
notb
fbld
int
xchg
enter
leave
popa
inc
subl
xchg
outsl
cmp
xor
adc
and
or
jmp
adc
push
sbbb
xor
sub
loop
pop
inc
movsb
dec
fs
push
mov
xor
jg
sbbb
aam
cmp
adc
push
fldcw
cltd
mull
adc
mov
pop
loope,pt
cmpsl
xchg
add
iret
or
dec
push
cmp
mov
das
fidivrl
sahf
ror
inc
mov
mov
jle
cwtl
mov
movsb
or
divl
loopne
xchg
pop
dec
mov
fildl
mov
std
aam
sbb
sub
adc
jnp
lock
dec
ret
scas
sub
ljmp
arpl
lock
repnz
jge
or
je
or
insl
call
pusha
mov
add
in
adc
cmp
xorl
sub
sbb
repz
arpl
lods
mov
sub
stos
mov
sub
aaa
ret
mov
outsb
sbbl
sbb
daa
in
add
data16
pop
ficomps
imul
fyl2x
xor
out
xchg
je
adc
aas
inc
cmpxchg
sahf
testl
cs
lods
iret
push
xchg
fmull
aaa
cmp
out
mov
shrb
push
ret
mov
scas
mov
fld
mov
fwait
jmp
xchg
mov
popa
insl
xor
adc
lds
clc
ret
jbe
dec
add
and
fmulp
addb
push
loopne
inc
jne
cli
mov
xchg
fisubrs
punpckhwd
cld
add
cmp
cmp
in
dec
cltd
xlat
sti
sbb
xchg
outsl
cld
leave
dec
clc
jmp
xor
dec
les
push
pop
je
out
sub
enter
out
dec
das
mov
mov
sbb
or
xchg
mov
mov
aaa
insl
push
mov
fidivrl
insl
pop
pusha
pop
dec
mov
imull
jecxz
push
mov
subl
xlat
mov
out
dec
pusha
imulb
adc
pop
out
icebp
pop
fsubrs
fwait
add
sahf
js
clc
fistpll
enter
in
jnp
mov
popf
hlt
icebp
jae
addl
jne
je
mov
movsb
in
push
sbb
outsl
jg
or
dec
sub
out
and
shrb
xchg
xchg
dec
dec
inc
mov
movsb
mov
test
movsb
jns
xor
outsl
inc
push
bound
stos
and
mov
mov
cmc
mov
mov
stc
pop
notl
sub
leave
fildll
mov
inc
test
adc
leave
lahf
mov
fistps
mov
push
add
in
mov
into
jae
xchg
xor
dec
jecxz
pusha
jp
mov
ja
cmp
imul
test
inc
bound
enter
stos
lea
cmc
inc
xlat
movsl
cli
call
sub
dec
clc
mul
enter
cwtl
and
sub
mov
sbb
enter
adc
jp
mov
in
lret
rcl
ret
gs
jle
jl
push
add
mov
push
mov
jnp
xor
mov
add
mov
lret
pop
icebp
popf
iret
nop
in
fwait
js
pushf
into
sahf
repnz
rcrl
dec
loope
adc
inc
lahf
movsl
jne
sub
lret
xor
and
movsb
dec
loop
inc
or
xor
je
fstp
addr16
outsl
adc
cmp
push
ret
mov
aaa
jg
xor
add
inc
jmp
sub
xchg
dec
repz
in
addr16
jo
sti
aam
xchg
inc
or
scas
and
lret
flds
sbb
xchg
sub
mov
pop
mov
mov
push
inc
cltd
test
shlb
negl
push
imull
xorb
addr16
ljmp
pop
call
mov
iret
pop
add
mov
mov
push
pop
push
add
xor
aam
in
jo
dec
jo
idivb
stos
sub
mov
cwtl
arpl
flds
jge
xchg
xlat
lock
sub
mov
jge
lds
push
std
sarl
add
inc
and
les
jp
mov
or
sar
jae
jg
shlb
jne
cmp
std
xchg
inc
bswap
and
dec
and
pop
mov
mov
xchg
dec
or
inc
inc
cli
mov
pop
idivb
lods
or
loopne
lret
jmp
adc
or
mov
sbb
scas
cld
inc
orb
pop
pop
je
jbe,pt
pop
xlat
cmp
xchg
mov
aad
insb
lahf
cmc
mov
mov
push
fstps
jg
and
adc
jnp
xor
xlat
pop
divb
ret
ret
in
int3
nop
mov
scas
pusha
fldln2
test
push
push
mov
jmp
loopne
xchg
test
shlb
and
out
adc
out
inc
xchg
jne
dec
or
push
cmp
bound
inc
jo
cmp
fisubl
sarl
sub
push
mov
or
add
or
daa
add
inc
sub
das
adc
sub
cld
jno
test
imul
je
push
clc
inc
in
incb
xor
pusha
pop
icebp
and
cmp
and
mov
xchg
addb
dec
sub
inc
and
pop
ljmp
mov
inc
jle
adc
sub
mov
or
adc
inc
pop
jbe
scas
adc
ljmp
xlat
cs
push
jnp
mov
fs
mov
pop
stc
cmpsl
sub
pop
jmp
mov
into
mov
sub
stos
jle
sar
mov
ds
pusha
ljmp
insb
pop
int
sti
insb
sub
hlt
mov
jnp
push
sbb
aam
inc
movsl
cli
data16
leave
or
adc
xor
gs
inc
add
push
xor
cwtl
inc
lahf
jge
cmp
fstp
cmp
sub
inc
scas
or
andl
sbb
subb
push
or
hlt
cmovg
movsl
out
aaa
mov
xor
lret
pushf
ljmp
pop
es
cmc
std
adc
in
sub
mov
mov
xor
shlb
add
ljmp
mov
out
adc
sti
adc
sbb
test
shr
pop
dec
stc
lds
and
sub
lds
lods
adc
je
mov
xchg
and
sbb
aam
aaa
lret
pop
mov
xorb
or
jne
push
mov
adc
insb
rol
cmp
mov
in
add
pop
ja
mov
sub
push
inc
lret
into
decb
push
xor
adc
cld
jo
adc
xchg
xchg
push
das
adc
mov
imull
xor
fwait
adc
mov
mov
out
jae
xor
dec
xchg
cmp
pop
stc
mov
mov
inc
into
or
lret
mov
jecxz
pop
cltd
shlb
xorl
xor
pusha
xchg
mov
xor
jmp
sub
xor
mov
cmp
rcrl
sub
cli
push
mov
jb
sub
loopne
mov
popa
sub
push
mov
mov
jne
dec
cmpsb
push
jne
add
jae
roll
sub
xchg
and
cmp
dec
mov
clc
lcall
aaa
rcrb
add
lahf
adcl
lock
sarb
call
mov
cltd
lods
push
dec
pop
jb
inc
add
mov
sub
aas
and
or
and
popl
or
push
repnz
fwait
sub
push
outsb
xchg
ficoms
pop
pop
pushf
push
and
mov
push
push
pop
pop
pusha
push
add
movzwl
call
lret
mov
dec
push
rorl
mov
sub
loopne
test
jp
mov
bound
movsb
dec
mov
mov
in
pushf
out
das
jne
divb
mov
and
lcall
mov
sbb
shll
dec
fwait
xchg
daa
push
loope
test
ss
popa
arpl
jmp
adc
in
and
imul
push
cmpsb
and
adc
std
push
fstps
xchg
aaa
ret
pop
xchg
lret
mov
js
lea
lahf
ret
lods
inc
pop
cs
test
cmp
out
sbb
or
sti
mov
mov
loopne
imul
lea
fimuls
mov
adc
push
push
mov
fwait
call
ja
lock
leave
les
inc
push
xchg
xchg
dec
pusha
mov
dec
and
sub
jo
insl
cmc
or
push
pop
jle
jno
pop
cwtl
xchg
addr16
pop
ja
loopne
jmp
xchg
xchg
adc
add
std
jno
mov
mov
push
nop
or
enter
sbb
jns
mov
mov
les
scas
xchg
aam
ret
std
rorl
sbb
dec
mov
jno
mov
and
xor
pushl
mov
adc
mov
xor
dec
add
std
arpl
xor
dec
xor
leave
xchg
lret
out
inc
call
mov
sbb
jae
jnp
call
inc
jns
cmp
or
mov
imul
mov
jle
mov
adc
xchg
mov
mov
clc
lret
mov
das
mov
ja
mov
jnp
stc
pop
pop
sub
dec
mov
out
mov
adc
fdivrl
or
add
sub
dec
xchg
test
test
jbe
fisubl
insl
push
iret
jo
pop
inc
faddp
mov
sti
push
sub
pop
mov
mov
loopne
sub
mov
dec
jecxz
adc
sbb
dec
sti
add
mov
hlt
xchg
sbb
cmc
fsubs
dec
pusha
gs
ss
jne
lcall
mov
adc
dec
in
jecxz
das
outsl
fisttps
into
inc
xchg
mov
sub
xor
cld
mov
pop
ja
clc
add
sti
push
and
es
or
cmp
xor
cmp
jae
mov
xlat
jb
pushl
stc
fwait
mov
lods
jo
inc
stc
push
scas
jno
aas
jne
fbld
pop
pop
pusha
or
jge
dec
mov
or
adc
aaa
scas
and
sbb
lods
outsb
lods
xor
push
add
in
dec
cmp
insb
push
in
pop
pop
cmp
ret
fstpt
mov
ja
int3
cmp
mov
ds
jb
cli
test
lods
push
ja
roll
dec
inc
push
pop
and
push
cmp
pushf
push
xchg
mov
jge
xlat
out
lret
fnsave
scas
lods
push
lret
mov
popf
es
dec
inc
mov
std
in
xchg
mov
addl
push
data16
mov
out
idiv
int
frstor
sub
pop
sbb
inc
dec
push
pop
cmpsl
lods
mov
xchg
idiv
int
frstor
sub
pop
sbb
inc
dec
push
pop
cmpsl
lods
xchg
ja
idiv
int
frstor
sub
pop
sbb
addr16
dec
mov
mov
out
out
int
sbb
lods
or
incl
mov
jmp
cmpsb
fldenv
test
cltd
pop
imul
pop
push
sub
or
xchg
jmp
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
leave
mov
mov
xadd
pop
push
insb
sub
jnp
sbb
jmp
rorb
aaa
push
and
mov
out
inc
mov
add
pop
mov
sbb
cld
sub
inc
jae
jae
xchg
subl
aam
pop
push
aad
pop
cltd
dec
imul
inc
push
inc
xchg
stc
xchg
mov
stc
jbe
xchg
xchg
cld
xchg
jp
add
mov
popf
mov
adc
test
mulb
or
push
cmp
sub
push
sbb
xchg
shrb
mov
cltd
scas
cmp
mov
jbe
jle
pushw
icebp
scas
pop
and
fadd
xor
cld
out
jns
sbb
jns
pop
jbe
adc
sbb
lahf
stc
mov
cmpsb
fld
test
lcall
cs
aas
pop
dec
sub
insb
or
cli
xchg
stc
shll
mov
leave
push
or
or
push
dec
and
or
pop
stc
jmp
stos
mov
mov
push
adc
sub
push
dec
sub
dec
repz
into
mov
testb
jns
dec
es
push
sub
jbe
sbb
leave
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
jnp
sahf
mov
mull
pop
aaa
mov
fcmovbe
cmp
jg
or
cltd
in
test
cmpsl
adc
push
mov
mov
cmp
imul
mov
cmpsb
lods
cmp
ljmp
test
movsl
lods
outsl
data16
or
es
enter
push
sti
dec
mov
lcall
and
mov
int
push
sahf
cmp
xrelease
js
jecxz
cmpsb
movsb
mov
pop
push
mov
out
lods
stc
test
imul
xor
dec
in
lret
pop
lahf
inc
jge
movb
jecxz
into
adc
mov
xor
clc
and
xor
push
and
sub
cld
and
out
push
push
and
mov
fcoms
stos
popa
or
push
in
nop
lret
dec
movsb
xor
jmp
cmp
sub
addr16
inc
xchg
shll
jae
fcmovne
add
jns
jne
into
popa
xlat
jb
sub
mov
cmp
dec
sti
sbb
lods
nop
jle
pop
shll
lea
adc
in
lea
adc
xor
push
dec
push
inc
subb
fwait
pop
movsl
and
in
mov
pop
push
mov
cmp
and
mov
pop
xchg
fdivr
xor
xor
stos
loopne
inc
push
pop
pop
mov
xor
ret
outsb
or
xor
xchg
xchg
add
mov
add
dec
inc
fstpl
in
or
mov
movsb
das
inc
inc
cmp
outsb
aas
jns
and
xor
test
movsl
clc
push
sbbb
std
push
loop
enter
int
sub
ret
mov
mov
stos
int3
cmp
sbb
mov
jp
sbb
test
and
aam
popa
fsubp
mov
push
push
in
push
sbb
ljmp
adc
imul
cmpsb
jbe
scas
mov
addr16
mov
ret
dec
pop
jnp
push
inc
test
or
and
mov
inc
xor
pop
fcoml
fidivs
pusha
jg
mov
aam
cmpsl
cld
cmp
stos
mov
movw
in
mov
dec
popf
jo
push
and
les
xor
aam
sub
ss
mov
add
rorl
inc
sbb
lcall
out
mov
daa
pop
mov
dec
add
mov
dec
mov
push
ret
lcall
sti
sbb
out
shlb
pop
jne
shrl
inc
lret
hlt
mov
or
outsb
mov
pop
sahf
inc
xor
push
jmp
jns
scas
sub
cmpsl
add
mov
aaa
adc
daa
jmp
cmp
mov
or
bound
adc
mov
mov
mov
add
int
push
mov
dec
xchg
fildl
rorl
inc
cmp
adc
jp
pop
jb
jl
pop
scas
bound
fidivs
in
imul
push
aaa
faddl
roll
pop
data16
xchg
inc
ljmp
inc
pushf
mov
aas
push
mov
jb
adc
sbb
mov
dec
call
pop
add
mulb
mov
stos
ret
out
dec
xchg
fisttps
int
in
xchg
loopne,pt
mov
fimuls
ds
sti
in
cmc
jmp
insb
jge
cmp
scas
adcl
cli
pop
in
jmp
pop
or
inc
fsts
and
mov
mov
jecxz
enter
jo
and
vunpckhps
and
icebp
js
sub
adc
loopne
fildll
ljmp
stc
js
std
mov
jb
addr16
xlat
jo
jnp
xchg
push
pop
dec
aaa
hlt
cmpsb
loopne
pop
add
ljmp
ljmp
fbld
mov
mov
cmp
lcall
cmpsb
jo
xchg
stos
dec
ret
lcall
pusha
add
pop
int3
pop
push
cs
pop
lahf
and
or
xor
fwait
mov
fdivs
xor
dec
rcl
sub
rcrb
out
pop
ja
fs
jno
insb
gs
xchg
sbb
jg
sar
add
repz
cs
es
xor
leave
sarl
push
adc
fldcw
dec
xor
adc
pushf
xor
psadbw
leave
in
jns
cltd
xchg
out
mov
mov
pop
cmpsb
lods
fdivrs
cmp
pushf
jae
xchg
lcall
sbb
adc
add
test
sbb
push
xor
mov
sti
sub
inc
sub
popa
je
out
popa
cli
dec
cmp
pop
push
pusha
fdivrl
sbb
cltd
mov
xchg
adc
loopne
pop
sbb
lret
ret
mov
ja
mov
pop
pop
adc
les
cs
sbbb
push
cmp
ret
jne
mov
jl
dec
rorl
cld
adc
mov
scas
lods
repz
adc
adc
and
mulb
fistpll
ds
and
mov
fstl
pop
aaa
push
pop
dec
and
mov
notl
in
xor
ds
cmp
sub
jne
xor
pop
mov
xchg
idivb
popa
shll
in
mov
cmp
stos
enter
inc
push
lods
lcall
into
dec
cs
pop
dec
int3
rorl
pop
add
adc
std
mov
xor
shll
cmp
ss
sub
iret
xor
fsubp
jg
cmc
and
dec
dec
pushf
mov
enter
subb
ficompl
cmp
loop
cmp
mov
add
mov
and
shll
xor
add
mov
sti
push
push
sbb
inc
mov
adc
add
nop
add
lret
out
movsl
lret
insb
mov
rcrb
dec
mov
sub
adc
outsb
daa
in
mov
je
les
and
xor
push
je
lds
xor
mov
in
leave
mov
xchg
inc
fcmovnb
iret
movmskps
mov
xor
pop
ja
pop
cmp
call
add
pop
insl
dec
shl
mov
add
call
pop
sub
lods
jg
adc
adc
shlb
inc
lret
adc
mov
sti
mov
sbb
ret
jg
mov
cmp
or
scas
xor
mov
stc
sub
lock
mov
add
adc
repz
or
popa
pop
mov
cmpb
sub
mov
fidivs
lret
push
into
or
mov
ret
repz
popa
and
das
xor
stos
jg
out
push
nop
pop
lea
push
nop
or
add
sub
or
popa
outsl
ss
push
ds
lret
lods
jo
jg
xchg
add
pusha
and
out
cmp
lahf
ss
push
adc
mov
inc
inc
lods
jle
lea
inc
inc
cmpsb
inc
sbb
mov
inc
jbe
mov
inc
lods
mov
xor
and
cmc
les
sahf
xor
jne
stc
sub
shll
inc
jmp
imul
jecxz
fucomp
mov
aaa
adc
adc
mov
jmp
inc
mov
pop
pop
add
adc
adc
lret
push
cmp
hlt
pop
push
mov
jmp
add
sahf
mov
sub
call
pop
imul
fs
pop
aam
lds
add
jmp
lahf
mov
sbb
and
mov
xorb
jbe
jmp
sbb
mov
sub
xlat
xchg
xlat
adc
pop
xchg
ds
mov
cmpsl
ds
push
fsts
aas
ficomps
mov
mov
fimuls
push
aam
stos
xchg
das
movsl
les
xchg
mov
rcrl
outsb
loopne
pop
inc
inc
ds
jmp
mov
xchg
repnz
cmpb
pop
inc
lds
xor
std
mov
jno
lods
pop
pop
ljmp
std
popa
mov
ja
sbb
clc
sub
stc
in
cmpsb
das
xor
and
xchg
xor
test
leave
sbb
jne
out
lahf
lock
cwtl
adc
pop
outsl
dec
nop
cmp
cmpsl
or
std
push
sub
arpl
test
stc
out
pop
cmpl
je
pop
into
aas
and
out
mov
nop
lcall
xor
add
fidivrl
lods
fucomip
repnz
cmp
or
or
mov
testl
jns
cli
adc
jbe
bound
outsl
fdivrs
mov
in
add
push
cltd
xchg
cmc
mov
sub
cmc
xchg
xchg
push
or
ja
and
leave
fbstp
cmpsb
sbb
xor
xchg
pop
lret
mov
jg
mov
xchg
mov
jp
or
cmp
cmp
xor
mov
movsb
mov
out
dec
dec
pop
mov
in
push
inc
sbb
pop
push
testb
mov
mov
lods
or
mov
dec
cmp
and
std
pop
inc
out
cwtl
shlb
movsb
lods
ror
mov
enter
cltd
push
lds
sbb
cli
jecxz
and
in
inc
cltd
out
sbb
stos
hlt
xorb
aas
stos
push
iret
sbb
cltd
fs
dec
xchg
aad
in
cltd
ffreep
lods
lea
lock
push
dec
jb
roll
mov
clc
or
dec
add
inc
pusha
dec
add
scas
inc
dec
mov
imul
xor
mov
sub
in
out
mov
mov
jg
mov
mov
out
mov
and
ficoml
jne
popf
stos
lret
stos
push
fwait
sbb
xor
imul
das
scas
push
aaa
push
or
stos
fcoml
and
ja
call
xchg
jle
sahf
pop
divl
mov
mov
sub
inc
idivb
or
jmp
pop
mov
sbb
cs
pop
pslld
daa
adcl
into
push
in
lock
mov
xchg
cwtl
push
popf
mov
rcrb
cmp
scas
add
adc
in
jo
mov
or
or
out
jae
xchg
adc
stos
add
mov
sub
add
dec
popa
aas
jp
or
test
jle
incb
stos
mov
mov
cltd
punpckhqdq
mov
shr
xchg
mov
fcmovbe
rolb
cld
cltd
scas
cmp
mov
sbb
ret
mov
adc
push
test
push
add
test
repz
pop
insb
ret
test
outsl
dec
cmp
roll
lds
sbb
mov
rsm
and
xor
in
mov
stc
cmp
mov
adc
pop
xchg
out
inc
lods
mov
cmp
or
inc
loopne
sbb
scas
lds
sbb
lods
jns
loop
push
pushf
mov
mov
xchg
je
call
das
sbb
and
es
pop
les
or
sbb
ret
xchg
aas
sbb
dec
lcall
add
pop
adcl
push
dec
dec
loopne,pt
adc
ds
cmp
or
mov
sbb
test
decb
or
fidivrs
and
sbb
icebp
fs
aam
fwait
pop
sbb
xchg
aam
jo
cwtl
inc
push
cmp
cmp
inc
insl
and
fcmovnb
add
jae
cmp
cwtl
fnstsw
push
and
mov
scas
pop
jae
bound
enter
adc
and
adc
insb
shll
dec
pop
dec
js
dec
jmp
mov
rcl
ret
scas
imul
repz
pusha
data16
fldcw
mov
sahf
adc
and
cmp
push
jo
mov
cmpsb
sahf
std
shll
enter
in
mov
cmpsl
sbbl
xchg
sahf
fnsave
jns
imul
arpl
push
mov
xchg
addr16
mov
cmc
jge
push
and
outsb
jae
pop
mov
adc
inc
and
sub
xchg
pop
and
repz
xor
ret
add
repnz
stc
scas
xchg
movsl
push
sbb
mov
pop
inc
cld
stos
jmp
sti
sub
rdmsr
or
cmpsb
fists
mov
dec
sub
loop
fdivr
js
cli
pop
lea
adc
push
mov
mov
push
ret
shll
iret
in
mov
fisttps
std
adc
jg
mov
push
sbb
or
or
push
fisubs
cmc
push
shr
xor
xchg
and
loopne
and
inc
xor
push
sub
lcall
mov
lahf
negb
jo
jbe
push
pushf
cmp
addr16
xchg
hlt
pushf
mov
test
xchg
jns
mov
inc
fcos
mov
js
xchg
int3
test
ret
jno
sub
loopne
into
js
jbe
push
ret
sahf
mov
ljmp
jne
int3
adc
push
pop
dec
cmpsb
loopne
cmp
insb
fwait
int3
push
lds
je
cmpb
cmpsb
stos
sub
sbb
xor
in
push
int3
loopne
or
call
aas
es
rolb
dec
pop
mov
test
mull
jo
data16
gs
leave
pop
cmp
push
ret
xchg
in
xorb
sbb
mov
out
jnp
sti
popa
shrb
jno
int
jge
stos
jge
fistpll
popf
movsb
out
push
inc
aaa
jg
aad
icebp
les
mov
sbb
inc
loop
mov
stos
mov
ror
add
inc
inc
push
int
dec
sub
or
jmp
sar
insl
xor
test
cmp
sub
xor
jle
sub
push
rcll
mov
cs
rcll
jl
test
pop
push
popa
bound
and
loop
cmc
sbb
faddl
shrl
imulb
sbb
mov
jle
movups
imul
mov
les
cmp
iret
sbb
cmp
cmp
ljmp
outsb
adc
mov
push
jo
add
cmc
push
ljmp
rcrb
sarb
popa
inc
scas
pop
dec
jp
fisttpl
cwtl
loopne
lods
jo
inc
pop
repz
mov
test
xor
out
jne
mov
cmp
pop
jmp
dec
xchg
add
xchg
aam
jp
outsb
adc
popa
sbb
push
inc
scas
sbb
in
shlb
pushf
pop
inc
xchg
imul
lret
jl
add
stos
inc
jbe
mov
loopne
loopne
cmpsb
mov
js
popa
pop
mov
dec
xchg
inc
mov
fwait
or
ret
add
dec
or
outsb
mov
negb
push
aad
mov
cli
sub
sbb
mov
test
mov
ss
loopne
xor
or
push
jg
dec
xor
xor
jnp
mov
or
call
mov
jg
xchg
push
out
cmp
sbb
xchg
jbe
push
imul
xchg
mov
dec
lea
out
mov
jo
dec
jge
das
mov
jl
push
in
and
xlat
stos
inc
push
inc
mov
int3
bound
ret
andl
mov
bound
jmp
je
mov
ret
mov
cwtl
mov
add
xlat
xchg
sbb
dec
jns
je
fildl
xchg
mov
leave
test
sub
addl
std
sbb
sarl
addl
insb
push
push
insl
das
repz
mov
mov
adc
jecxz
push
hlt
pop
push
shlb
mov
sti
aas
rol
int3
mov
lods
iret
ret
lret
stos
push
addr16
test
pop
adc
lcall
pop
sub
add
addb
xchg
rcrl
jo
pop
xchg
movsb
lods
ja
mov
mov
out
xchg
in
in
dec
push
inc
add
or
cmpsb
jl
xchg
fcoms
pop
addr16
icebp
jno
ja
sub
mov
pop
mov
inc
hlt
enter
subb
jle
aas
icebp
cmp
cmpsb
add
inc
xor
xchg
or
stc
adc
mov
incb
dec
mov
dec
cmp
adc
aad
mov
cmp
in
into
and
dec
jge
adc
imul
ret
lds
inc
shrb
stos
clc
pop
loop
lahf
enter
jle
inc
cmp
xchg
xor
add
and
inc
xchg
cmp
dec
and
xchg
push
pop
or
push
into
ret
lcall
movsl
ljmp
in
test
mov
sarl
push
jne
lds
mov
mov
sub
push
sub
pop
icebp
pushf
sub
popa
fisttpll
xchg
lods
and
xcrypt-ecb
cmpsl
or
imul
divb
mov
xor
sub
sahf
xchg
fs
out
sbb
inc
mov
push
fdivrl
adc
gs
sbb
loopne
xorl
add
fdivrs
roll
sub
movl
pop
movsb
les
mov
cltd
cmp
inc
shll
in
xor
out
xchg
jb
jmp
inc
stos
inc
pop
mov
lret
ret
xchg
sub
sub
sbb
adc
cmpsb
ffree
pop
lods
push
mov
xchg
add
inc
add
loop
xchg
adc
push
mov
repnz
jns
cmp
add
test
push
dec
jmp
mov
ficoms
xchg
rol
mov
xor
mov
xor
scas
insl
jecxz
and
xor
movsb
sub
add
addr16
scas
adc
push
mov
orl
bound
and
push
mov
add
int
stos
push
inc
xor
dec
int
cmc
sbb
pop
repz
nop
cmpb
pop
push
out
or
outsl
mov
pop
push
sub
sbb
mov
xor
out
jo
dec
mov
push
jns
into
fs
sbb
cmpsl
test
mov
fisttps
jecxz
mov
xchg
subl
into
out
in
add
out
loope
sub
mov
insb
cld
fdivl
mov
or
scas
mov
lds
push
out
inc
sub
xchg
popa
sarl
dec
repz
pusha
mov
or
and
lock
mov
push
mov
inc
push
dec
and
xchg
xor
xchg
popf
cmp
cwtl
add
mov
fwait
cmp
fcompp
pop
dec
pop
imul
jmp
lcall
cmc
hlt
jo
and
adc
sub
cmpl
leave
sarb
mov
ret
sub
sti
std
aam
sub
enter
out
adc
jno
mov
stos
out
pop
pop
fs
pop
mov
mov
sbbb
cli
dec
out
lods
xchg
mov
pop
mov
add
movb
sahf
dec
movsl
pushl
dec
scas
test
cmp
movl
push
pop
xor
and
add
sub
clc
mov
sbb
je
roll
sbb
mov
ljmp
bnd
adc
je
add
jb
aaa
and
inc
stos
cs
daa
sbb
mov
dec
push
mov
mov
jmp
inc
fmull
ss
mov
adc
in
scas
outsl
mov
jg
mov
fistl
jmp
sbb
cltd
jno
scas
jne
jbe
cmp
out
call
enter
cmpsb
ret
jne
mov
adc
push
lods
lea
and
mov
or
lock
int3
stos
jb
lods
repnz
inc
mov
or
filds
pop
es
in
hlt
arpl
xchg
repz
sbb
ret
leave
mov
insb
xlat
add
add
jnp
add
mov
cli
or
ret
test
cmp
imul
xor
fidivl
sub
insl
cmovno
outsb
stc
xchg
repz
fsubs
ffree
pop
mov
xor
shlb
sub
mov
pop
ficompl
es
dec
inc
xor
jo
outsb
stos
push
leave
adc
adc
xchg
push
push
inc
and
jb
dec
and
outsl
add
jecxz
and
lahf
push
cmp
xchg
fwait
xchg
enter
xchg
xchg
mov
xchg
aad
loope
das
adc
aaa
xchg
shlb
xchg
outsb
adc
pop
jl
xchg
out
xor
adc
add
stos
xchg
jns
and
pop
lock
leave
lahf
mov
mov
insb
lods
outsl
pop
leave
sbb
and
adc
or
nop
fcmovbe
mov
pop
cltd
call
out
mov
jge
stos
scas
loopne
mov
push
cli
popa
jne
push
ljmp
mov
fwait
mov
gs
xchg
inc
jge
add
repnz
inc
jne
sbb
lock
call
leave
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
leave
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
dec
cmpsb
test
out
push
jmp
es
push
sub
jbe
sbb
leave
cmpsb
test
cwtd
jmp
dec
es
cltd
out
adc
cld
cmp
sub
push
lea
push
ret
pushfw
cwtl
insb
mov
pop
stos
pop
fldt
cmp
sbb
sbb
in
or
cmp
sub
pop
lods
dec
mov
fwait
outsb
mov
stos
pop
fisttpl
in
sti
or
sbb
cmc
or
cmp
sub
pop
mov
movsb
jnp
imul
cmp
pop
fldt
push
mov
in
push
cmp
sbb
nop
adc
pop
push
out
divl
movl
divl
and
dec
inc
xchg
adcl
push
xchg
inc
pop
push
pop
mov
mov
jnp
xchg
bound
mov
xor
and
lock
cmp
cmp
bnd
sbb
in
xor
arpl
push
sbbl
mov
add
mov
movsb
mov
xchg
loopne
lcall
pop
mov
add
jmp
daa
jecxz
sbb
int3
aam
jo
rcrb
jnp
fsubrl
push
aas
jg
dec
cmp
jmp
jmp
fsubrl
pop
lods
dec
mov
fwait
je
fs
xor
sub
or
js
mov
jge
insl
fnstsw
cli
and
adc
out
icebp
jmp
out
add
sbb
xor
mov
or
jno
xchg
jg
pop
mov
add
jmp
cmp
push
xchg
pusha
cmpl
lods
dec
test
jnp
imul
stos
pop
fldt
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
fwait
insb
mov
stos
pop
fldt
cmp
or
sbb
in
push
cmpsb
in
push
iret
mov
hlt
je
cli
pop
pop
test
push
repnz
cli
adc
sub
push
scas
mov
xchg
pop
clc
ret
repz
mov
aaa
cmp
xchg
mov
sbb
mov
or
lret
loopne
loope
jbe
inc
fmuls
lock
mov
pop
dec
pushf
adc
cld
test
test
scas
mov
jp
loopne
xor
sbb
in
out
js
mov
loop
add
and
rol
rcrb
lea
push
cmpsl
dec
pop
out
jl
pop
scas
mov
addr16
enter
inc
mov
std
js
push
sbb
pop
sbb
pop
inc
pop
rorb
xchg
add
insl
out
sub
lds
mov
and
test
mov
out
dec
mov
insb
cmp
inc
cmp
pop
inc
pop
jmp
fs
mov
js
test
cwtl
call
rorb
mov
push
lret
lret
pop
fucomp
aam
lea
into
jbe
mov
shlb
or
testb
ret
loopne
inc
ljmp
jl
js
cld
cwtl
xor
sub
inc
pop
push
and
in
and
mov
in
push
push
xchg
and
sub
add
xchg
sbbl
arpl
call
mov
xor
inc
rorl
ss
sub
sbb
cltd
xor
mov
or
xchg
scas
mov
pop
addr16
jb
mov
loopne
adc
dec
aam
jp
nop
enter
xor
fwait
int
and
pusha
inc
mov
jmp
out
fs
sbb
push
jb
call
xchg
xchg
sti
push
sahf
cmpb
mov
add
enter
xor
outsl
jo
aam
mov
insl
cmp
xchg
mov
sbb
pop
adc
test
in
sub
lret
imul
cmp
les
roll
aaa
cmp
mov
inc
loop
imul
ljmp
push
mov
push
sbb
mov
stos
int3
add
xchg
movsl
lea
icebp
xchg
xor
push
rcl
pop
pop
cld
cltd
insb
fcoml
in
faddp
or
mov
mov
cmp
jg
pushf
cmp
mov
outsl
leave
jg
sub
xchg
test
adc
sbb
andl
cwtl
sub
popa
test
test
push
mov
aaa
pop
xchg
enter
fcomps
xor
bound
out
cmp
dec
frstor
int3
mov
call
je
std
aam
adc
mov
into
cmp
movsb
sbb
jle
sbb
inc
movsl
cltd
jb
fidivrs
pop
xor
add
fbld
scas
insl
adc
xchg
mov
in
fcoms
out
or
xchg
mov
orl
aam
mov
lcall
sbb
push
ds
lea
adc
out
addr16
jle
je
faddl
mov
sub
cwtl
pop
arpl
dec
xor
lret
add
loopne
test
dec
loope
jmp
add
fsubrs
dec
jo
mov
xchg
or
out
sub
movsb
cmpb
mov
sbb
in
adc
lahf
inc
mov
mov
imul
cltd
push
xor
pop
jnp
push
ljmp
xchg
pop
lcall
rcrl
scas
xor
rol
mov
mov
loope
pushf
add
lea
cmp
sarl
fwait
xchg
dec
stos
push
in
lods
std
cmpsl
into
rorl
inc
jmp
pop
jno
mov
or
push
dec
aas
ja
aaa
ret
adc
insl
nopl
aas
xor
or
jle
or
push
pop
push
in
add
rorl
pop
sub
std
sub
or
das
into
inc
mov
pop
pop
xchg
fdivr
pusha
sub
push
aad
mov
dec
lods
out
jns
insb
mov
lock
scas
xchg
pop
pop
test
ror
dec
ror
dec
lahf
das
sub
mov
mov
cmp
sarb
pop
mov
inc
mov
daa
mov
jae
cld
sarl
stos
cmc
and
push
insl
comiss
divb
push
gs
push
and
and
jns
or
sbbb
push
stc
jg
dec
pusha
outsl
adc
inc
in
mov
xchg
push
adc
mov
lock
sbb
movd
sbb
mov
in
insb
mov
outsl
sbb
outsb
push
xor
mov
jg
and
xchg
mov
out
or
dec
sub
pusha
add
dec
jbe
sub
div
jno
jae
fisubs
aaa
jnp
jnp
sub
jnp
push
lods
in
cwtl
inc
and
lret
jb
lods
and
cmp
lret
mov
out
dec
cmp
sub
bound
mov
dec
out
and
clc
xor
ds
and
xor
fcoml
fsubs
sbb
push
lock
and
mov
jne
shll
or
xlat
pop
mov
dec
inc
add
push
push
jle
xchg
jnp
sahf
arpl
jecxz
arpl
fbld
lods
cltd
sub
nop
pop
or
mov
mov
popf
mov
add
loop
fidivl
mov
gs
and
js
cmpb
push
iret
sbb
pusha
nop
hlt
decl
push
int
or
cmpl
push
mov
xor
push
ljmp
mov
sbb
jns
in
sbb
ljmp
sti
in
repnz
popa
fstpl
aad
add
and
movsl
push
sub
cmc
and
jl
lret
hlt
mov
add
or
dec
and
jne
push
lods
push
add
imulb
fcomps
or
xchg
jne
fimull
inc
fstpt
push
mov
shrl
xor
addr16
cmp
xor
daa
insl
xor
lcall
mov
pop
and
fsubl
adc
jmp
or
out
push
jl
in
sbb
add
in
cmp
mov
mov
outsl
add
adc
and
xor
fwait
or
arpl
out
mov
lahf
lds
mov
iret
jge
imul
add
sub
sub
push
int3
or
xor
lret
add
rorl
mov
cmpsl
sti
loopne
test
or
test
imul
dec
inc
repnz
mov
gs
push
ret
movsb
pop
cmp
adc
aas
sti
rorl
sub
cmp
insb
mov
call
sbb
xor
xchg
enter
data16
test
enter
lods
mov
cmpsb
cmpsb
pop
out
pop
test
mov
cmpsb
rcr
mov
jae
or
gs
xchg
mov
arpl
jbe
dec
or
adc
inc
push
jbe
dec
movsb
dec
pop
test
test
aas
shrl
mov
adc
xor
and
js
push
pop
lods
push
mov
insb
cmp
xor
cmp
adc
sbb
test
aad
scas
xchg
push
or
movsl
in
fsubrl
cmpsb
push
aaa
jns
adc
les
xchg
sahf
shl
aad
leave
xor
aaa
push
push
jmp
inc
mov
test
add
pop
or
andps
pusha
pop
mov
clc
or
add
jno
push
cltd
pop
lea
lahf
das
dec
push
in
or
fwait
mov
jno
adc
imul
adc
cli
lock
mov
cmpb
and
inc
mov
and
or
inc
ljmp
loopne
add
pop
sarb
dec
negl
pop
lods
push
xor
scas
xchg
repnz
cli
inc
imul
dec
pop
jp
scas
in
fnstenv
push
jb
push
or
mov
push
xchg
ja
jbe
inc
xor
shl
loope
sub
faddp
cmp
and
sbb
xor
cmp
and
and
or
daa
lods
push
sub
idivl
out
fnstsw
test
ja
or
insb
mov
lret
xor
cmp
test
inc
nop
xor
xchg
xchg
inc
loope
into
mov
fwait
cmpsl
cmpsb
stos
lahf
xorl
push
push
xchg
inc
aas
pop
imul
repz
divl
adc
pop
push
fcoml
jbe
cmpsl
ffreep
mov
sbb
mov
inc
dec
hlt
sahf
out
hlt
add
or
inc
jmp
test
jb
sbb
popl
xor
jne
aad
scas
in
mov
sbb
dec
xchg
scas
push
and
nop
jge
mov
pop
and
repnz
push
sbb
mov
in
out
pop
xor
dec
inc
daa
cld
pop
add
aam
test
or
adc
leave
adc
int
fwait
lret
mov
adc
cmp
out
int
scas
xor
cs
roll
int
dec
cwtl
and
out
dec
insb
fucomp
aad
cmpsl
sbb
add
in
stos
jno
ret
xchg
test
in
mov
clc
loopne
shr
imul
jae
adc
xorb
fcompl
pop
and
xor
imul
es
sub
push
leave
lcall
xchg
inc
mov
push
inc
sbb
dec
jnp
fmulp
and
movsb
push
fcomp
cld
popf
mov
filds
fstpt
adc
lods
mov
fs
repnz
push
adc
push
decb
test
stc
jo
divb
dec
jl
mov
stc
les
int3
jns
inc
jmp
and
or
push
shll
ret
xor
add
adc
adc
das
faddp
insb
cmp
dec
pop
ret
add
int3
pop
sbb
mov
xor
pop
fwait
imul
out
mov
mov
lret
aam
adc
xchg
rol
or
jmp
es
cmpsl
add
cld
fcoml
out
or
lock
jb
and
rcll
int3
stos
mov
pop
pop
dec
adc
das
cmp
inc
push
into
sbbb
daa
cmpl
call
or
stos
fcmovne
sbb
dec
and
jmp
data16
test
xor
xchg
mov
xor
jne
push
movsb
add
fdivrl
mov
or
in
dec
fidivrl
adc
popa
jmp
mov
cli
push
stos
rcl
negb
push
pop
out
add
addr16
or
pop
mov
sbbl
inc
les
fistpll
mov
and
cld
and
push
jno
mov
adc
jmp
data16
loop
dec
fsubs
fimuls
out
fsubrs
mov
shlb
pop
xchg
cmpsb
mov
fwait
scas
inc
or
in
out
push
jmp
jno
jecxz
xor
popf
and
mov
or
call
mov
mov
nop
ret
adc
mov
test
inc
data16
dec
in
std
lret
js
ljmp
mov
stos
fs
sbb
jge
stos
pop
imul
repz
fstpt
icebp
out
and
jbe
pop
sbb
call
sbb
aas
in
movsl
ljmp
mov
les
loop
aaa
int
xchg
sbb
lret
dec
and
and
pop
xor
xor
mov
in
xchg
mov
ret
inc
ja
mov
and
xor
sub
or
sub
hlt
xchg
pop
and
lahf
popa
add
fcoms
cmp
cmp
test
cmp
lcall
call
xor
cmpb
and
inc
int
lds
push
pop
mov
les
fucomip
jnp
sti
pop
test
fidivrs
xor
mov
mov
lock
pop
mov
idiv
jl
cld
xchg
mov
jno
sub
fbld
shrb
dec
mov
xor
loopne
add
mov
or
mov
stc
cmp
out
and
adc
negb
rclb
fadds
dec
pop
out
sub
imul
inc
enter
xchg
mov
outsl
xor
inc
inc
clc
int
inc
dec
pop
push
int
or
andb
jae
add
scas
or
test
dec
push
jbe
mov
aas
sub
xor
cwtl
int
pop
stc
or
shll
inc
shlb
push
fildl
push
pop
add
fucompp
pop
jle
push
cld
sbb
and
fimull
pop
sub
fcomi
sbb
mov
mov
push
mov
ja
mov
xor
aad
rorl
push
ret
jl
pop
mov
cltd
push
ss
and
mov
inc
icebp
or
mov
xchg
decl
sarl
dec
mov
xor
sub
aas
xchg
jecxz
inc
aas
in
mov
cli
add
fiaddl
loope
and
pop
sub
fldl
call
push
das
add
mov
scas
std
xchg
lret
mov
jecxz
lds
mov
rcll
cmp
and
xchg
xor
xlat
xchg
xchg
adc
repnz
sbb
repnz
in
inc
jle
push
fwait
cmpsb
or
and
imul
mov
dec
push
test
shll
mov
push
mov
push
adc
mov
add
dec
and
push
test
rorl
xor
and
push
mov
pop
lds
cmc
aam
lahf
in
pop
pop
xchg
sub
or
or
aad
xchg
fbld
mov
xchg
daa
rcrb
stos
sbb
jmp
jnp
and
shlb
scas
jge
out
ds
mov
cmpsl
scas
fs
out
xor
jno
jo
inc
in
sbb
mov
cmp
push
push
int
out
mov
ret
fadds
xlat
aad
dec
ljmp
rcrb
jno
test
xchg
pop
clc
mov
push
iret
jecxz
jae
push
int3
inc
aam
scas
nop
lahf
loop
inc
mov
rol
push
mov
sbb
pop
mov
cltd
lods
rclb
xchg
dec
mov
sbb
insb
jp
rorl
test
insl
cmp
sti
in
loope
lret
addr16
pop
mov
repz
xchg
pop
and
in
out
inc
xchg
sub
mov
ja
leave
lcall
test
push
out
or
mov
adc
xchg
out
mov
push
cltd
cltd
jb
push
das
iret
mov
imul
gs
inc
imul
pop
sar
xor
int
aaa
pushf
cli
ljmp
stos
cmpsl
out
pop
pop
dec
xchg
cmc
pop
daa
lods
lahf
sar
jnp
lcall
sub
inc
inc
ljmp
icebp
adc
pop
imul
fidivl
xor
flds
push
xor
cmp
sub
scas
dec
das
mov
or
xlat
push
hlt
pop
int3
mov
loope
mov
hlt
cmp
stc
iret
jl
and
repz
cli
mov
test
add
inc
rcrb
mov
imul
movsb
cltd
cs
popf
call
adc
pop
fcomps
cmp
xor
cmp
sub
fdivs
test
out
pop
mov
stos
sbb
jns
mov
lret
mov
adc
mov
xor
repz
push
adc
subb
das
cmc
loope
aam
add
je
mov
inc
mov
sbb
inc
cli
push
xor
jo
movb
mov
jae
and
lret
adc
flds
cwtl
xchg
mov
pop
xchg
movsb
hlt
xlat
pop
pop
push
aaa
push
in
cmp
cmp
xor
jae
addb
pop
aad
faddp
cmp
cmc
add
fcoms
mov
mov
pop
cmp
into
pop
sub
push
add
cli
insl
mov
mov
push
es
test
pop
arpl
repnz
stos
jae
adc
aam
push
mov
push
sub
pusha
adc
dec
mov
in
dec
out
movsl
repz
ret
sti
add
cmpsb
hlt
jo
mov
cmp
rolb
dec
sbb
test
cli
jecxz
std
sbb
inc
mov
inc
push
outsl
icebp
call
sub
inc
sahf
jl
test
xor
loopne,pn
pop
add
out
fwait
jbe
mov
mov
insb
jp
rcl
sub
addr16
inc
mov
add
aas
fimull
iret
xchg
inc
decl
repz
repnz
mov
jmp
and
hlt
xor
add
dec
xchg
andb
sarl
mov
sbb
gs
das
mov
out
int
xchg
lret
xor
and
inc
pop
mov
jmp
shll
add
clc
std
push
fmul
add
mov
mov
pop
pop
out
and
cmp
and
notl
lret
aad
scas
daa
cs
ret
std
xchg
hlt
fmul
xor
inc
xchg
jo
movsl
mov
popa
iret
sbb
repz
shlb
nop
inc
aad
mov
ret
lcall
cld
jmp
fimull
mov
push
cltd
outsl
dec
xchg
mov
rcrb
cld
hlt
and
gs
out
sbb
cmp
pop
xor
xchg
mov
dec
pusha
push
stos
sub
push
iret
sarb
add
mov
insl
jl
iret
mov
sbb
mov
xchg
enter
cwtl
add
sbb
mov
xchg
rcrb
or
icebp
sub
out
adc
adc
call
dec
jge
or
mov
dec
fs
push
shlb
mov
jno
into
int3
xchg
dec
mov
mov
cmp
jae
jbe
insb
mov
jno
xlat
pop
sub
das
lcall
imul
adc
push
aas
adc
shrl
jb
test
mov
outsb
dec
dec
mov
xor
imulb
mov
push
leave
adc
cmp
out
lea
push
mov
ficomps
sub
jp
xchg
or
fstl
je
ja
in
mov
pushf
loope
clc
js
mov
sahf
add
cld
scas
and
outsl
sub
cs
mov
cmp
xlat
movsb
jb
int
scas
pop
add
dec
in
sbb
pusha
adc
bound
mov
aam
loope
stos
mov
imul
roll
in
push
mov
cmp
out
cmpsl
jecxz
aad
es
repnz
push
dec
sbb
xor
push
dec
loop
pop
rorl
inc
sub
jo
xor
stc
ret
xor
and
xchg
dec
pushf
enter
out
icebp
daa
sub
and
insl
mull
jmp
int3
fidivs
mov
insl
cmp
in
insb
and
cmp
inc
lods
dec
cmp
lods
pop
xchg
mov
xor
xchg
xor
and
dec
in
cltd
cmp
mov
repz
cmp
std
ss
mov
sub
addr16
repnz
add
loopne
sub
inc
outsl
inc
cmp
cs
lcall
mov
stos
or
mov
mov
and
cmp
lods
inc
pop
lret
mov
jge
xchg
subb
sahf
shlb
pop
mov
imul
xchg
xchg
mov
cmp
imul
jge
push
ror
sahf
adc
jno
push
sbb
xor
inc
xchg
ret
pop
add
iret
and
arpl
cli
cld
sbbb
and
pushf
push
in
mov
cmp
punpcklbw
jns
stos
jp
lahf
or
movsb
in
sub
xchg
pusha
and
and
lods
lods
test
xorl
mov
jmp
out
hlt
sub
push
sub
dec
pop
pop
mov
data16
scas
add
imull
xor
or
outsl
dec
rolb
scas
push
pop
push
js
das
lods
mov
in
aaa
and
pop
les
test
stc
push
adc
jp
inc
push
repnz
imul
sub
fisubs
loope
fsubrp
adc
xor
mov
shrb
fldcw
cmp
xchg
mov
push
mov
repnz
mov
mov
dec
cmp
mov
in
imul
nop
ds
cmp
popa
pop
add
repnz
cltd
jge
sub
mov
pop
push
mov
sub
popf
xor
mov
cmp
cli
cmp
or
jg
pop
pop
push
sbb
adc
repnz
sbb
inc
cmpsb
xor
pop
rcll
inc
gs
pop
mov
insl
push
mov
fisubrs
imul
cmp
nop
jnp
leave
or
or
loope
fsubrs
xor
or
inc
fbld
jne
lret
fildl
adc
sub
lods
rorb
cmp
add
sub
pop
lods
dec
mov
fwait
insb
mov
stos
pop
fldt
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
fwait
insb
mov
stos
pop
fldt
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
lcall
pop
fldt
cmp
or
or
cmp
sub
pop
lods
dec
mov
fs
je
adc
lods
movsb
inc
ret
add
adc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
lods
aas
nop
nop
scas
mov
push
and
cmp
sub
pop
bound
inc
insb
mov
mov
lods
repnz
int3
sar
ret
sbb
or
cmp
sub
xor
push
jl
insb
mov
mov
lods
repnz
int3
sar
ret
sbb
das
jle
add
or
pop
in
out
mov
aam
lods
cmp
imul
push
in
jns
cmc
ret
push
sbb
pop
add
inc
xor
iret
sub
loopne
sub
hlt
aas
out
push
std
dec
lea
add
pushf
stos
adcl
setl
adc
jl
dec
pop
dec
aaa
stc
inc
aam
fldenv
sti
aad
test
mov
mov
and
dec
call
jge
stos
push
loop
push
xchg
xchg
je
xchg
ret
jg
and
popf
dec
add
dec
sbb
push
lods
or
xor
adc
hlt
ret
or
sub
and
pop
jl
jns
pushf
mov
lods
repnz
int3
sar
ret
sbb
or
cmp
sub
pop
bound
inc
add
sti
mov
nop
movsl
mov
sarb
pop
jp
jae
bound
xor
jmp
repnz
subb
jae
adc
dec
jae
or
sub
add
fsubs
leave
mov
cld
ret
sbb
or
cmp
sub
pop
bound
inc
insb
mov
mov
lods
repnz
int3
sar
ret
sbb
or
cmp
sub
pop
bound
inc
insb
mov
xchg
sqrtps
and
jae
scas
inc
cmc
adc
testb
outsl
mov
lret
mov
xor
daa
xorl
out
dec
xorl
nop
or
jmp
pop
sahf
arpl
or
xor
pop
daa
and
out
cmp
xor
idivb
mov
or
mov
mov
cmpsb
ss
call
ss
sbb
or
stos
mov
cmc
jae
fbld
push
mov
pop
or
sarb
cwtl
mov
pop
push
sbb
mov
je
mov
jmp
daa
out
xchg
repz
enter
iret
xchg
xchg
xchg
outsl
pop
add
sub
pextrw
dec
rclb
icebp
repnz
adc
imul
orl
and
jmp
daa
or
mov
adc
xor
lahf
lea
sub
sub
fidivrl
lahf
lea
in
in
push
fs
imul
xchg
int
adc
or
cmp
sub
jo
and
push
mov
in
push
jno
test
stc
fsub
add
sub
lods
inc
popf
scas
clc
xor
xchg
inc
stc
shrl
icebp
dec
fcmovnu
outsl
push
sub
inc
movsl
jne
inc
mov
leave
xchg
or
sub
adc
fcmove
dec
jmp
add
mov
leave
cmp
sub
das
inc
mov
int
cld
int
pop
pusha
cmp
repz
ljmp
push
cmp
outsb
enter
shll
movsl
dec
xchg
dec
out
fldt
sbb
dec
outsb
repz
mov
test
stos
push
loope
push
push
out
fidivs
jno
pusha
out
jge
in
dec
out
bound
test
jno
ret
jns
lds
insl
divb
or
stos
ficoml
jns
imul
notb
out
mov
and
das
pop
sub
bound
clc
in
inc
add
rcl
js
jb
lock
repz
mov
rcrb
test
out
stc
inc
enter
into
fndisi(8087
das
std
dec
xor
mov
or
sub
add
mov
cmpsb
fucomip
dec
xor
inc
xchg
push
popa
xchg
lea
les
fcoms
mov
inc
pop
icebp
je
inc
or
lret
dec
and
cli
push
or
fnstcw
pop
pushf
cmp
mov
sub
bound
cmc
dec
push
sub
je
lret
push
jbe
aam
int3
in
cmp
mov
jp
xchg
test
xor
js
adcl
xlat
and
ret
rclb
ljmp
or
icebp
and
rcll
imul
cmpsl
add
fstps
add
stc
lea
sub
fwait
push
jle
leave
cmp
dec
push
push
pop
arpl
push
adc
push
adcl
mov
in
pop
sbb
xor
sbb
pop
jecxz
add
ljmp
xor
mov
pop
or
daa
into
ja
xchg
xor
or
addl
jne
jle
cmp
mov
lret
mov
scas
mov
ror
les
add
push
ds
mov
call
fnsave
enter
or
add
in
mov
pop
pop
aaa
out
lret
lret
dec
push
lret
loopne
cmpsl
xor
push
adc
jb
push
loopne
pop
mov
mov
push
sti
sbb
mov
cmp
push
cmpsb
and
sbb
mov
fstpl
call
je
add
shl
hlt
jp
cmc
jne
dec
xor
push
fimuls
jecxz
jnp
push
jnp
fucomip
mov
xor
inc
shrl
push
mov
cmp
fists
xchg
stos
add
sub
out
in
add
in
mov
inc
mov
lods
iret
jnp
daa
cwtl
xchg
or
arpl
jle
jns
fisttps
out
sub
jnp
scas
mov
sub
testb
in
inc
jnp
mov
cmp
sbb
cltd
mov
aad
dec
xlat
pop
rclb
xchg
sub
pop
push
jmp
mov
test
xor
les
es
jmp
ja
inc
decl
xchg
lock
adc
mov
nop
das
cli
notb
add
stos
mov
add
movsb
jae
mov
in
mov
mov
add
divl
fsub
mov
xor
movsb
cli
xchg
test
jb
xor
xchg
fldenv
cmpsl
shll
push
popa
sub
push
cli
mov
hlt
jne
iret
pop
test
movb
outsb
mov
pop
test
and
cld
xor
cmc
xchg
jo
fistl
xor
sub
xchg
lds
pop
sub
ja
sbb
pop
ss
jno
add
dec
cltd
gs
loop
ret
mov
push
jp
mov
sbb
data16
ss
sbb
loopne
pop
imul
sbb
gs
lods
adc
cmpsb
pusha
and
ljmp
xlat
jp
stc
fsubl
int3
jnp
or
icebp
push
mov
adc
cmp
mov
negb
xchg
pop
push
pop
sbb
dec
cwtl
imul
clc
cmp
mov
pop
xchg
mov
pop
movb
dec
jb
lock
jae
cmpsb
sub
mov
inc
xor
dec
xchg
pop
std
pop
cmp
ret
das
pusha
mov
cli
les
jo
loop
outsb
lret
addr16
repz
mov
or
orb
sub
mov
out
jmp
fnsetpm(287
mov
scas
sbb
mov
cmp
inc
fisubrs
sbb
push
iret
mov
xchg
xchg
jne
ja
pop
addl
ljmp
and
push
xor
pop
pop
sbb
push
test
aam
js
fs
cmp
jnp
mov
dec
fsubl
xor
movsl
test
push
pop
push
ret
mov
ja
ret
rcrb
rclb
ret
cmp
jbe
sbb
shl
jo
push
sbb
dec
push
pop
fnstenv
fbld
sti
cld
arpl
stc
mov
clc
adc
mov
push
loopne
pop
or
or
push
push
mov
cmp
cmp
lret
stos
mov
aas
xchg
cmp
push
test
mov
pushl
mov
dec
or
mov
pushf
loopne
mov
rcrb
pop
pop
lods
push
jnp
gs
jp
jge
dec
pop
and
and
lods
pop
add
pop
cmp
arpl
out
adc
movsl
fisubs
lds
out
adc
push
cmc
xor
or
stos
and
xchg
je
sub
insl
jg
mov
les
in
xchg
inc
in
jmp
out
ficompl
std
aad
pop
inc
fists
adc
ret
pop
sti
ficomps
push
int
push
std
cbtw
and
mov
and
in
lock
add
sarb
aas
pop
cwtl
scas
fisttpll
push
dec
ja
add
aaa
fsubrl
cli
jl
stc
repz
imul
imul
fwait
adc
lret
mov
sbb
xchg
pop
add
out
mov
mov
mov
lods
jno
push
sbb
add
push
fists
pop
add
adc
fwait
cwtl
inc
pop
xchg
notb
sbb
mov
and
sbb
dec
aam
clc
mov
mov
sbb
pop
pop
sbb
and
cmp
xlat
xchg
sbb
push
sbb
stos
roll
mov
mov
mov
or
idiv
cmp
adc
nop
or
daa
stc
lods
xchg
stos
cmpsb
adc
test
stc
jo
mov
push
fadds
inc
pop
clc
add
std
push
or
sbb
ret
aas
lret
fwait
add
subb
xchg
in
and
mov
lcall
aas
jl
inc
js
cmp
sub
jg
lret
shlb
xchg
mov
sub
xchg
mov
sarb
cltd
cmpb
gs
pop
arpl
int3
in
mov
xor
xor
mov
cmp
fdivrp
or
aad
testb
ret
pop
stos
mov
iret
nop
push
ss
fisttpl
je
jp
push
mov
fistps
pop
in
arpl
mulb
push
sbb
push
xchg
sbb
call
pop
fmul
mulb
cmpb
lods
mov
push
push
clc
ljmp
cmp
dec
inc
sub
and
mov
fld
nop
mov
shlb
push
mov
lcall
bound
push
adc
push
jo
add
mov
pushf
jl
push
push
arpl
lret
popa
dec
inc
pop
int
jne
mov
hlt
jge
push
gs
loopne
sahf
lods
fs
in
pop
cli
cmp
xchg
leave
pop
arpl
dec
scas
out
les
xchg
sub
push
mov
das
mov
pop
xchg
pop
js
inc
jmp
mov
fwait
lcall
aad
adc
pop
loope
and
iret
movb
sub
jns
mov
or
push
and
cmp
adc
arpl
dec
popf
shr
pusha
xor
repz
sub
sbb
lahf
xchg
mov
cmp
push
roll
sub
out
cs
xchg
or
jl
mov
fstpl
call
xchg
xchg
movsl
ficomps
repnz
in
movsb
std
cmp
inc
xchg
dec
sbb
pushf
jns
popf
mov
jmp
cmp
sbbl
rclb
ret
pop
cld
pop
sub
test
movsb
mov
jmp
mov
jp
insl
push
bound
push
lahf
push
or
sti
dec
or
pop
dec
int3
je
xchg
sti
sub
mov
cmp
cmpsl
xchg
xchg
insb
mov
and
out
mov
sub
fidivrs
out
adc
xchg
or
subl
add
pop
cmpsb
push
in
popf
insl
mov
or
test
in
xor
jmp
cmp
mov
xor
and
dec
jg
jne
jmp
aas
mov
mov
stos
cmp
into
push
popa
mulb
inc
imul
lret
and
ja
inc
in
sahf
push
or
in
call
or
dec
add
scas
mov
js
mov
lcall
xchg
and
fsubrs
cmp
push
mov
push
jno
sbb
into
add
cld
add
xor
mov
ret
lahf
std
fcompl
mov
mov
movsl
push
fdivp
or
call
insb
cwtl
xor
data16
mov
xor
into
mov
sbb
enter
in
cmp
and
dec
add
mov
ret
aad
mov
test
pop
xchg
mul
jge
aaa
push
addr16
xchg
out
aaa
and
pop
sbb
ljmp
lods
and
cmpsb
adc
cmp
mov
andb
bnd
mov
or
test
cmc
push
xchg
outsl
fisubs
jmp
and
lods
adc
mov
pop
mov
xor
pop
mov
push
adc
call
hlt
out
dec
subb
lret
xchg
xor
cltd
xor
xor
mov
push
movsb
xchg
dec
cmpsl
pop
das
loop
mov
rorb
fnsave
cmp
cmp
imul
sbb
call
in
repnz
jg
adc
leave
jecxz
movsb
push
lret
insb
insb
in
andb
pop
ret
popa
pop
add
inc
xor
fwait
dec
outsb
and
insb
push
sbb
xlat
push
mov
pusha
cld
push
aam
or
mov
adc
add
sbb
stc
push
push
sub
or
in
or
in
pop
and
jle
sub
in
adc
jae
nop
into
repnz
pop
xchg
push
leave
jo
and
mov
sbb
cmp
ret
jmp
out
push
jae
inc
cli
inc
jmp
xor
or
fsubs
addr16
stos
inc
mov
insl
test
cmpsl
clc
mov
xchg
fs
jl
inc
lods
cmp
in
lret
sbb
dec
xor
lahf
or
jl
push
outsb
cmp
add
jb
and
mov
pop
fs
movsb
ficomps
std
js
cmp
icebp
xchg
cld
push
fnstenv
out
bound
pop
call
xchg
and
je
subb
int
lahf
in
in
loopne
mov
fst
and
cltd
add
insb
xchg
sub
add
xor
xor
roll
mov
call
pop
cmp
shrb
add
jmp
call
adc
mov
dec
cli
arpl
cmp
mov
push
dec
mov
jae
inc
push
pop
nop
imul
in
stos
mov
fs
mov
mov
pushf
sub
push
cmp
sub
test
fwait
mov
dec
inc
add
and
or
xchg
inc
fwait
jmpw
and
sahf
cmp
js
and
into
mov
xor
xchg
xlat
fwait
jb
sbb
testb
jbe
dec
in
sub
mov
rolb
mov
cmp
mov
aaa
test
jno
inc
jge
xchg
mov
pop
nop
push
sub
or
test
in
xor
xlat
sahf
xor
pop
add
das
lcall
add
jnp
mov
mov
xlat
ja
sub
fcmovnbe
aad
pop
push
mov
mov
loopne
ja
push
addr16
cmc
arpl
push
fcoml
adc
imul
fdivs
mov
jno
arpl
daa
mov
cmc
negl
push
push
pop
jle
mov
stc
jnp
rcr
cltd
mov
outsb
jnp
sbb
or
pop
xlat
add
data16
mov
cli
mov
adc
mov
sahf
test
mov
rcll
xchg
out
pop
mov
ret
inc
ret
mov
into
test
mov
jecxz
inc
add
shrb
pop
test
sar
jp
jg
cli
imul
push
and
fwait
pop
adc
test
xchg
push
xchg
dec
ss
jbe
mov
adc
orb
inc
ds
push
stc
lahf
fstpl
xchg
lcall
fsub
add
vandps
and
add
mov
fnsave
ret
sub
mov
push
or
fcoml
xchg
repnz
les
scas
xor
pop
mov
jb
sub
cltd
in
push
cmp
in
cmpsb
std
in
mov
inc
cmc
or
rolb
test
xchg
adc
add
mov
dec
inc
or
push
jg
in
mov
adc
jne
in
and
sti
mov
pop
in
dec
pop
je
add
xchg
dec
adc
or
daa
xlat
add
mov
pop
sbb
scas
fdivrs
cld
loope
addr16
sub
fistps
xchg
rol
mov
jb
sub
dec
fisttpll
xlat
gs
std
insl
push
sub
lea
push
fistl
cmc
out
fldenv
call
loopne
gs
das
jns
test
and
rolb
loop
sbb
gs
pop
les
dec
mov
mov
sbb
push
add
dec
cmp
cmp
lret
bnd
mov
dec
push
jne
arpl
add
xor
repz
mov
js
pop
sub
and
pop
js
out
adc
cmp
add
inc
adc
popa
xor
icebp
rorl
adc
pop
test
mov
aam
js
and
adc
mov
pop
pop
xor
stos
negl
mov
xchg
jecxz
lret
inc
scas
pop
dec
jne
out
cmp
cwtl
bound
inc
data16
cltd
or
mov
mov
stos
test
cmp
gs
and
pop
bound
adc
aas
call
aaa
cmp
xchg
dec
add
loop
inc
push
adc
aad
adc
icebp
inc
jae
popf
cmp
pop
cmp
fcmovnb
mov
stos
fmuls
imul
push
arpl
and
scas
inc
inc
aaa
mov
push
jge
in
outsl
dec
adcl
fwait
dec
mov
mov
sbbl
test
xchg
push
cmp
icebp
fcoms
imul
adc
dec
mov
fmuls
cmp
cmpsl
add
mov
pusha
sbb
pop
sbb
sahf
cmc
jp
pushf
jmp
push
ret
movsl
jmp
inc
stc
pop
shll
xchg
outsb
and
mov
xor
pop
mov
push
sub
jnp
in
aas
aam
mov
in
cmpsl
xor
adc
imul
inc
daa
jb
test
xchg
std
ds
push
je
and
and
cmp
mov
cmp
add
push
ss
add
ja
pop
in
mov
pop
loope
scas
adc
cmp
push
addb
ffreep
shlb
rorl
adc
lahf
mov
inc
inc
mov
adc
lcall
mov
push
cmp
cmpsb
xchg
xlat
push
scas
dec
push
adc
cli
bound
sbb
dec
mov
nop
xchg
int
outsl
xor
pop
les
leave
cld
mov
into
cld
in
mov
and
xchg
out
mov
xor
sub
bound
pop
adc
sub
lds
mov
xorl
dec
sub
mov
sub
mov
test
ds
and
adcl
or
ljmp
pop
sub
loopne
shlb
outsb
sub
or
addl
mov
push
sbb
imul
jge
sub
fldcw
lods
cltd
push
dec
aam
sar
push
lcall
popf
andl
mov
jmp
mov
push
push
or
jbe
testl
outsb
jmp
xor
or
dec
xor
push
nop
rcll
xchg
sahf
das
ret
imul
mov
jo
cmp
push
lret
push
mov
inc
daa
and
mov
shr
or
pop
pop
cmp
imul
jne
outsb
xor
test
clc
or
inc
mov
add
cmpsl
fistl
and
xchg
mov
fmuls
outsl
mov
data16
test
out
inc
sbb
sarb
cltd
iret
imul
cs
ss
jmp
sub
andl
push
xor
jae
fiaddl
rcrb
push
std
leave
out
and
enter
inc
mov
incl
les
fisubs
fldl
add
out
testb
es
or
xchg
mov
in
int3
andb
leave
xor
ret
xor
inc
or
xor
pop
imul
xor
dec
xchg
push
mov
sub
sub
xor
cmp
dec
sbb
sub
test
cmp
mov
fs
test
adc
idivl
xchg
jp
mov
into
imul
test
xor
ljmp
cmpsb
mov
sub
scas
sbb
cmp
pop
bound
fsub
jb
fisubrl
pop
sub
sarb
shlb
scas
inc
xor
mov
inc
or
jmp
andb
rcl
aas
inc
cltd
inc
andl
xchg
xchg
xor
scas
pop
out
in
dec
cmp
sbb
inc
xorl
ret
inc
lea
fs
mov
mov
or
out
dec
sub
mov
out
addl
jns
add
sbb
lret
cmp
loopne
mov
cmp
sub
nop
pop
mov
mov
sbb
xorb
adc
xchg
fs
and
push
xor
dec
repz
mov
jge
mov
add
lea
fbstp
scas
sbb
popa
mov
addr16
adc
lcall
inc
rclb
mov
rol
cwtl
push
mov
dec
sbb
dec
cld
adc
in
test
xor
idiv
sub
xor
jnp
outsb
loopne
cmpw
push
rcr
or
shlb
or
or
jmp
jne
insb
movb
inc
outsl
inc
adcl
outsb
ja
mov
lods
loopne
dec
shlb
leave
stos
pop
cmp
fidivl
daa
push
scas
mov
and
dec
out
mov
ss
pop
mov
add
dec
push
pop
lds
or
lret
aam
les
sbb
sub
outsl
ljmp
gs
inc
xlat
xor
mov
mov
in
movsb
sti
adc
mov
jmp
cmp
stc
fbld
repnz
rorb
fsub
int3
sar
ret
sbb
or
cmp
sub
pop
bound
inc
insb
mov
mov
lods
repnz
int3
sar
ret
sbb
or
cmp
sub
pop
bound
inc
insb
mov
and
fsub
int3
sar
inc
in
xor
or
cmp
sub
pop
bound
inc
insb
mov
mov
lods
repnz
int3
sar
ret
sbb
cmpsb
mov
aam
mov
xorl
push
je
and
bound
adc
push
xor
shlb
jmp
loopne
rclb
mov
pusha
jb
bound
xor
and
adc
cs
ret
fsub
rclb
mov
cmpsb
jb
bound
adc
add
sbb
xor
lock
mov
mov
jecxz
cld
loop
in
xor
and
add
and
mov
jnp
pop
cmp
xchg
lods
aas
outsl
loop
fnstenv
mov
cmp
aam
and
in
sbb
das
addr16
insl
movsl
xchg
pushl
sbb
cmp
fcoml
int3
pop
shl
test
or
inc
or
bound
jo
pusha
add
jecxz
adc
adc
rorb
shlb
add
ljmp
cmpsb
ss
sbb
or
xor
and
ret
mov
xor
pop
fiaddl
or
xor
jg
ror
pusha
test
mov
push
cmpsl
stos
scas
fadds
ljmp
bound
xor
and
adc
xchg
shl
ret
shl
cld
xchg
mov
mov
jo
movhps
sub
xchg
dec
dec
push
arpl
mov
nop
xchg
jne
mov
mul
imul
push
xor
and
pop
sub
bound
xor
xor
andb
shl
repz
sbbb
arpl
jl
and
adc
add
lock
shl
rclb
mov
pusha
jb
bound
xor
and
adc
add
lock
shl
rclb
mov
ss
sub
scas
sub
mov
mov
sbb
sbb
cmp
push
data16
cmp
test
mov
sahf
lock
adc
xchg
sar
xchg
cmp
pop
push
pusha
dec
add
cmp
adc
ror
dec
loope
lods
pop
bound
jecxz
cmp
pushf
jo
in
popa
mov
imul
inc
movsl
ss
int3
clc
mov
test
mov
jg
sahf
xor
and
inc
jg
jne
scas
mov
pushf
pop
jecxz
xor
cld
rcll
mov
cltd
pop
mov
test
pusha
sbb
push
insl
mov
mov
mov
inc
fisubs
dec
mov
adc
sti
je
arpl
std
cltd
jno
inc
mov
mov
mov
xor
repz
jecxz
pop
or
pop
movsb
dec
loopne
daa
mov
dec
inc
jnp
push
jnp
out
jns
pop
inc
aam
mov
shr
xor
js
in
cmp
aaa
test
dec
int
sub
jno
in
imul
pop
mov
clc
push
and
cwtl
ds
or
dec
out
pop
pop
adc
movsl
jle
cmp
pop
or
scas
inc
push
lcall
push
inc
cli
or
lods
jge
stos
push
sbbb
xor
cs
loop
dec
xor
mov
lds
pop
push
jp
iret
jb
cmp
xor
popa
and
mov
adc
pop
icebp
ja
outsb
loop
push
jbe
in
lret
xor
js
xorl
cmp
mov
sti
arpl
adc
loopne
or
scas
cmp
icebp
rep
dec
jg
dec
leave
ja
mov
fisubl
add
mov
int
mov
out
scas
shld
ficomps
pop
icebp
or
movsb
mov
push
mov
ret
lcall
adc
add
mov
call
out
jns
or
xor
xchg
pop
nop
imulb
fs
sub
test
cmp
addl
and
ret
cmp
or
push
js
xchg
dec
lea
or
dec
sub
arpl
push
jp
pop
inc
sahf
push
or
ret
fldl
lock
dec
pusha
adc
pusha
pop
andb
rolb
fbld
jo
push
add
addr16
inc
mov
movsl
inc
jmp
pop
mov
test
push
rcrb
je
xchg
repz
jmp
mov
sub
fstpl
push
jae
lret
out
jo
pushf
mov
loop
inc
pop
popf
negl
sbb
std
xor
setb
outsb
push
sbb
push
jmp
inc
sbb
nop
jae
inc
fists
mov
and
xchg
jmp
addb
mov
jae
add
fucomp
push
scas
cmc
jl
fsts
mov
adc
lods
or
movsb
pop
shl
xchg
dec
jb
out
fmull
jg
mov
dec
insb
push
mov
je
ljmp
lahf
pushf
jecxz
jl
test
jo
mov
scas
or
cmp
cld
jp
fwait
cwtl
mov
pop
pop
test
xchg
adc
mov
repz
sub
sub
jnp
xor
orb
fists
adc
sub
pop
stos
int
nop
sub
mov
cmp
cmc
pop
es
xor
and
lcall
mov
stc
imul
stc
imul
stos
js
rclb
pop
fistpl
sbb
mov
iret
aaa
adc
sbb
in
cmp
pop
mov
mov
loope
adc
inc
pop
ljmp
cmp
setnp
sbb
aam
push
scas
lcall
dec
dec
outsb
cmp
pop
jl
cmp
xchg
loop
imulb
jg
rorl
jp
push
pop
mov
xor
pop
std
dec
pop
in
incl
or
sti
jle,pn
pop
jge
inc
repnz
or
xor
jnp
cmpb
xlat
cmpsl
push
dec
stos
jecxz
mov
jo
mov
stos
outsl
cmp
sub
les
mov
popf
push
imul
pop
lret
ret
pop
rcl
mov
inc
mov
aad
inc
fs
pop
or
test
sahf
out
mov
fnclex
dec
or
and
popa
sub
dec
sbb
pushf
pop
add
push
fs
int3
inc
inc
or
add
add
das
inc
push
rorl
inc
cli
pop
mov
mov
leave
push
in
movsl
lret
mov
scas
movsb
sbb
jns
inc
adc
das
cmp
pop
aaa
adc
call
pop
loope
adc
xchg
and
pop
stc
push
pusha
cmp
shrl
ss
mov
popf
gs
push
pop
ss
xor
lock
pop
mov
leave
cs
push
pop
jecxz
inc
lcall
leave
mov
push
sub
and
dec
je
xor
imul
popa
push
inc
jns
int3
ljmp
test
cmp
push
rcr
push
or
dec
lea
cld
inc
add
pop
scas
fdivl
icebp
push
adc
xchg
push
jl
and
push
push
push
bound
cs
dec
jp
mov
call
push
into
pop
fldt
imul
loope
mov
outsb
pop
ljmp
das
ret
mov
out
hlt
or
repz
add
negb
fwait
mov
sub
cmp
inc
enter
mov
lods
jge
push
imul
aaa
cmp
jbe
dec
or
mov
popa
adc
pushf
call
adc
mov
inc
or
in
ret
test
cmp
jne
cmc
js
mov
or
fildl
loope
enter
dec
outsl
cmpsl
inc
pop
mov
add
jmp
rcr
jg,pt
and
fsubrl
sbb
adc
lcall
test
lcall
jge
stc
sbb
mov
jmp
test
push
cld
mov
mov
leave
sahf
xlat
mov
fdivrl
popf
adc
and
dec
int3
jmp
xchg
adc
mov
cmp
or
andb
nop
loopne
add
jg
lret
lcall
jecxz
inc
and
cmp
bound
dec
aas
mov
cmpsl
xchg
insb
leave
mov
cld
dec
add
lret
sub
add
pusha
adc
popl
cmc
jge
ret
bound
mov
lret
pop
xchg
mulb
xchg
enter
cmp
and
cs
xor
pop
insb
leave
test
push
jnp
icebp
test
add
lret
addr16
mov
pop
call
in
xchg
xlat
out
xchg
into
add
mov
jl
enter
lea
adc
jb
sbb
or
xchg
sti
sub
cmpsb
push
lock
mov
mov
js
arpl
mov
pop
push
sub
push
enter
add
or
gs
stos
lods
bound
inc
mov
out
ja
jnp
enter
and
dec
sbb
pop
repz
xlat
cltd
cmp
mov
scas
mov
or
sub
sub
adc
outsl
mov
push
adcl
pop
ret
shl
push
vpaddq
sarl
dec
dec
mov
push
in
jge
ljmp
pop
cmp
pop
push
lahf
cmp
push
outsb
inc
out
mov
push
pop
mov
pop
xor
push
sub
cwtl
fstps
ficoms
out
inc
mov
sbb
xchg
push
xchg
rcrl
leave
cmp
inc
int
mov
mov
int3
out
push
in
cmpsl
xor
lods
and
pop
add
scas
int3
pop
xor
dec
cmovl
xor
int3
cmp
push
push
sbb
into
adc
sub
jmp
lock
sbb
call
push
stc
mov
fildl
mov
shlb
mov
in
mov
cmp
scas
outsl
cmp
cmc
sub
sti
stos
jbe
mov
jecxz
test
test
ret
ljmp
sub
mov
push
mov
sbb
and
jmp
call
pop
divl
adcb
sub
nop
rcll
sub
xor
inc
or
adcb
push
jecxz
xchg
mov
push
and
lcall
loop
mov
and
sub
or
jecxz
movsl
cmp
add
mov
jno
cld
lods
cs
out
or
or
mov
add
das
sbb
repnz
push
cld
cmpsl
out
pop
pop
push
outsl
mov
jg
aam
setg
xchg
mov
push
pop
es
push
clc
test
sbb
xor
pop
cli
fcomip
adc
aaa
mov
jp
sub
push
push
repnz
out
or
add
jle
jmp
adc
shl
cli
mov
xor
lods
mov
push
and
lea
jbe
push
push
sbb
fwait
out
xchg
pop
push
test
outsl
orb
sahf
jle
adc
add
out
sti
xchg
fs
mov
hlt
xchg
cmpsl
enter
mov
or
js
pop
push
sub
add
jl
scas
call
bound
vpunpcklbw
aas
aam
inc
inc
test
mov
fstps
scas
mov
shll
cmp
xchg
jle
inc
jmp
pop
push
fcomps
push
fdivl
imul
jmp
lds
stos
pop
inc
adc
pop
test
sti
adc
push
sub
add
imul
and
push
cmpl
test
xchg
cmpsl
push
sbb
jne
cmpsl
je
scas
inc
xchg
ret
xchg
int
cmp
mov
mov
or
xchg
mov
jno
stc
bound
fidivs
fcomp
lahf
cmp
ljmp
into
movsb
cmp
sbb
stc
call
int
sub
inc
sub
hlt
sbb
dec
mull
mov
out
les
jne
mov
cwtl
lock
adc
xlat
mov
cmp
stos
cld
ffreep
leave
sbb
cmp
hlt
stos
sub
sarb
je
shrb
fadds
sti
jb
fcmovbe
jle
jo
dec
cli
sub
jae
fmul
ja
push
inc
xor
stos
mov
ret
out
xchg
mov
out
test
dec
sti
mov
or
inc
and
stos
adc
int3
sbb
outsl
xchg
push
jb
xchg
and
in
cmp
fs
jp
or
data16
shr
notb
sub
in
dec
icebp
xor
xchg
push
js
in
repnz
adc
cmpsb
cmp
rcr
adc
push
nop
popf
and
or
jo
xchg
push
pusha
and
jp
pop
das
fdivrl
arpl
jno
lea
scas
roll
imul
push
insb
out
inc
shlb
aad
inc
movsb
aas
fcmovnu
jo
inc
iret
lds
dec
pop
aam
sbb
call
sub
jb
ret
inc
adc
stos
std
pop
adc
adc
loopne
jl
popa
test
pop
cs
out
cmpsl
aam
pop
in
clc
test
adc
pushf
dec
mov
jno
pop
addr16
mov
adc
icebp
dec
imul
and
test
xchg
mov
push
cmpsl
in
outsl
cmp
jg
leave
pop
fs
pushf
mov
roll
int
lods
outsl
sub
lcall
fwait
jle
push
xchg
inc
adc
dec
dec
cmpsl
out
cmpsl
and
lcall
add
inc
push
fwait
mov
leave
or
je
pop
dec
cmp
inc
sub
jp
cmp
push
push
hlt
sahf
inc
ljmp
ret
stc
mov
insl
jb
fwait
sub
lahf
or
fbstp
pop
clc
mov
jecxz
sti
jne
or
xor
ja
mov
cmc
out
scas
aaa
bswap
mov
add
loope
inc
inc
jae
add
scas
movsb
adc
scas
push
cmp
xchg
push
or
xorl
push
loopne
and
mov
add
ljmp
jge
or
dec
push
loopne
ret
xchg
cld
pop
add
stos
cmpsl
sub
addr16
insb
cmc
dec
inc
inc
cmp
cmp
sbb
fcoml
stos
outsb
std
mov
out
fucom
imul
jno
dec
scas
fisttps
jle
xor
jg
dec
and
jmp
cmc
pusha
mov
sbb
test
jl,pt
jmp
stos
call
mov
sub
out
dec
push
mov
out
les
jg
sbb
stos
cmpsl
imul
sbb
fiaddl
insb
iret
fisttpl
push
and
sub
aad
add
scas
mov
cltd
lahf
shrb
das
repz
add
cmp
into
mov
mov
or
xchg
into
jne
pop
cli
dec
or
pop
mov
mov
mov
mov
cld
ret
dec
sbb
dec
fwait
mov
hlt
hlt
es
mov
cmp
loope
mov
xor
stc
outsl
int
cld
jg
sbb
je
cmp
pop
in
stos
xchg
mov
in
fistl
mov
jmp
sbb
jle
insl
stos
pushf
xchg
negl
cmp
cmpl
adc
sahf
int3
lods
mov
out
int
jb
mov
cld
lods
mov
insb
lock
and
dec
mov
insb
xchg
mov
out
dec
div
dec
push
lods
cmp
in
insb
les
aas
mov
and
jp
mov
or
stos
mov
pop
xor
push
imul
push
sbb
adc
cwtl
pop
insb
enter
sbb
rol
mov
jge
inc
mov
jmp
xchg
xor
jmp
jae
mov
pop
jle
sub
ret
mov
push
lcall
push
int
xchg
mov
push
movsl
jle
lods
je
outsl
addr16
xchg
jnp
insb
inc
imul
mov
push
jnp
mov
popa
test
data16
ss
arpl
adc
sti
pop
push
test
ja
xchg
mov
push
sub
int3
gs
dec
test
loopne
es
cmpsl
jg
adc
scas
mov
shll
ficoml
push
xorl
shl
cmc
sbb
outsl
popa
mov
add
cltd
dec
adc
test
aaa
into
cs
lret
gs
adc
in
sub
inc
int
pop
cmp
jg
sub
push
iret
sub
push
into
inc
cwtl
add
in
mov
insb
je
mov
inc
bound
dec
das
aas
push
out
pusha
inc
inc
xchg
and
idivl
push
test
out
insl
out
dec
add
xor
cmp
lods
xor
sub
sub
inc
adc
in
dec
rol
lea
cmpsb
or
dec
xor
adc
test
and
push
inc
mov
aam
icebp
arpl
orb
mov
mov
aad
je
fcom
idivl
dec
test
daa
aaa
or
push
std
push
inc
rep
lods
es
jb
pop
lret
xor
fs
mov
mov
pop
test
cmp
aam
xlat
hlt
notl
sub
testl
cli
into
and
mov
les
mov
jp
dec
dec
test
xchg
bound
mov
lods
mov
pop
adc
shlb
sbb
or
add
cmpsl
adc
dec
or
dec
mov
in
jnp
sahf
dec
lahf
insb
add
and
call
jmp
jg
sub
ror
enter
mov
mov
call
pop
popa
xor
ja
insb
or
push
outsl
test
push
mov
or
fs
fsubrl
out
inc
pop
insb
jne
mov
js
push
popf
push
jbe
leave
mov
push
add
mov
rorb
popf
jg
xchg
push
mov
sbb
popa
xor
shlb
outsb
dec
adc
ljmp
cmc
xchg
fstpt
aas
outsl
pop
movsb
gs
out
dec
gs
add
mov
test
sub
arpl
cmp
popa
je
mov
scas
test
push
add
inc
js
adc
outsb
ret
sub
int3
test
jmp
pop
aas
and
lods
sub
imul
repz
je,pn
sbb
jmp
or
cmpsl
mov
or
xor
adc
jg
xor
push
lods
cwtl
bound
push
rcrb
xor
sbb
and
popf
adc
fdivs
lods
inc
leave
mov
ret
jno
jp
xor
mov
cmp
cmp
pop
test
adc
sbb
je
in
iret
out
mov
popa
inc
push
andb
xchg
idivl
dec
mov
adc
leave
mov
dec
ss
and
int
aaa
aam
hlt
cmpsb
imul
sub
std
mov
xor
adc
jg
rorb
sub
xor
dec
push
fst
sub
jns
inc
inc
rol
lea
divb
adc
cld
or
ja
adc
xchg
pop
fisttpl
pop
int3
adc
cli
dec
adc
xlat
inc
arpl
std
popa
fiaddl
mov
imul
test
insb
loopne
lcall
in
sub
push
mov
jmp
in
aas
add
nop
jb
pusha
push
pop
jl
sbb
push
aam
movsl
das
je
fdivl
cmpsl
les
icebp
nop
mov
mov
add
mov
icebp
xor
test
dec
int
scas
sbb
loop
mov
xchg
fnstenv
dec
mov
push
int
and
cwtl
hlt
mov
push
mov
inc
orb
cmp
sarb
dec
push
and
imul
rcr
xor
add
insl
into
loop
call
insl
pop
push
fisubrl
mov
or
stos
cmp
jae
hlt
inc
xchg
int
jo
cmc
dec
inc
or
js
test
sti
in
dec
fildl
jo
push
jo
stc
inc
fsts
xor
ja
mov
fstpt
xchg
or
cld
je
rcr
and
rcrb
aam
dec
imul
divps
shlb
into
out
ds
dec
jbe
repnz
fimull
xor
or
testb
mov
inc
in
mov
stos
jo
sahf
xor
js
push
dec
roll
sub
push
fs
or
xchg
push
inc
xor
jno
inc
jg
push
dec
ficompl
mov
jnp
push
fidivs
cld
inc
aad
dec
cmp
imul
rol
push
insb
daa
setle
mov
pusha
fdivs
fwait
insb
mov
sbb
push
out
cmp
pop
push
lock
mov
popf
inc
in
aad
cmpl
add
fistps
nop
mulb
movb
cmp
add
scas
adc
sti
sub
rcrb
cmp
inc
mov
add
jne
jbe
or
int3
stos
in
idivl
jmp
xor
xlat
test
pop
divb
push
xor
outsb
cwtl
jge
sub
sahf
jl
add
icebp
test
pop
lcall
fdiv
mov
popa
push
inc
add
sub
mov
iret
stos
lret
jle
pop
lcall
sqrtps
dec
and
test
and
sub
sarl
lods
lods
adc
js
xchg
or
out
das
outsl
sbb
mov
out
push
mov
mov
andl
sbb
mov
xor
mov
jg
sbb
inc
lea
and
sub
dec
mov
jl
push
sbb
lock
cmp
jmp
pop
icebp
mov
insb
or
imul
sbb
int
sbb
into
inc
mov
cwtl
sub
insl
dec
scas
cmpsl
pop
push
inc
cmpsb
push
mov
push
call
xorb
xchg
mov
sbb
outsb
inc
and
mov
test
jae
sub
jge
data16
dec
adc
fcmovbe
jp
xor
pop
jno
adc
mov
pop
sbbb
or
xchg
pop
dec
jl
xor
xor
sbb
vpcmpeqw
mov
std
pop
subl
popf
loope
or
das
jmp
xchg
push
lcall
repnz
out
jae
mov
test
repnz
pop
push
mov
int3
pushf
cmp
push
jge
cli
add
je
aas
xor
ret
daa
sub
cmp
xlat
cmp
shll
test
icebp
sahf
add
mov
mov
cmpsb
jnp
cmpsb
lret
shl
push
push
inc
and
and
jecxz
mov
cmp
adc
pop
pop
aas
push
aas
sti
popa
cmpb
nop
add
imul
dec
in
pushf
aad
cmp
xor
js
scas
int
push
subl
and
lcall
insb
cmp
cmc
fildl
cmp
pop
out
push
mov
out
popf
adc
imul
popf
out
ret
mov
push
iret
mov
cld
std
cli
aam
js
in
xorl
dec
loopne
stc
in
stos
pop
clc
jg
rol
stc
push
test
sub
arpl
aaa
mov
movsb
and
test
push
mov
adc
push
bound
xor
and
adc
add
lock
shl
rclb
mov
pusha
jb
bound
xor
and
adc
add
lock
shl
rclb
mov
outsb
jb
bound
add
adc
add
icebp
ret
shl
leave
xchg
mov
mov
push
xchg
inc
test
bound
adc
add
xor
ret
shl
mov
enter
call
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
pop
outsl
push
mov
movsb
xor
add
add
add
push
pop
or
pop
add
add
mov
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
and
add
test
add
add
add
add
add
addl
or
mov
add
add
xchg
addb
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
and
or
add
add
add
and
push
pop
add
add
add
add
add
xchg
add
add
xchg
add
adc
add
jl
cmpsb
add
add
out
add
add
add
xchg
add
add
add
cmpsb
add
add
str
add
add
add
or
out
add
add
add
add
add
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
dec
add
add
inc
add
sti
add
add
add
xchg
add
add
add
add
add
add
add
mov
add
sbb
test
inc
add
ds
add
cmp
scas
add
add
add
add
add
add
add
adc
mov
add
ds
add
add
add
add
or
dec
add
out
aam
cmp
dec
add
sti
add
add
add
add
add
add
jl
pop
add
inc
add
add
add
pop
add
roll
add
add
pop
add
sub
gs
add
add
add
add
add
add
add
adc
or
mov
add
mov
add
add
add
adc
or
add
add
add
add
outsl
add
add
cmp
xchg
add
add
dec
add
add
mov
add
loope
push
add
scas
add
add
dec
add
add
add
outsl
add
add
insl
add
xchg
lea
fwait
add
adc
jle
into
add
push
add
add
outsb
add
add
mov
add
add
add
add
add
add
add
cmp
cmpsb
add
flds
or
das
add
add
add
add
add
add
sub
push
add
add
add
or
dec
add
xchg
add
and
inc
add
sub
cmp
cmp
popa
add
add
add
js
lods
add
push
add
add
test
popl
int
popa
add
sub
in
add
add
add
or
adc
pop
add
add
aad
rorl
nop
idivl
pop
movsb
in
cli
jmp
xorb
pushf
jno
jmp
xchg
mov
hlt
inc
movsb
push
or
rclb
push
sub
mov
add
les
addr16
pop
adc
sub
sbb
dec
stc
ss
xchg
movsl
adc
or
gs
sub
out
imul
pop
mov
pop
pop
stos
push
pop
in
in
mov
jnp
xor
jl
xor
jne
push
or
in
mov
rcll
fs
movsb
lahf
xor
movsl
adc
sub
jg
cwtl
insl
add
in
mov
popa
xchg
je
cmovae
outsb
test
movsl
inc
xor
loope
cmpsb
xor
mov
lds
movsl
sbb
lods
scas
pop
fs
dec
jg
xor
cmp
cmp
fstl
push
rol
lcall
adc
idivb
ljmp
out
std
sub
mov
push
imul
popf
cmp
jmp
adc
sub
sbb
push
movsb
pop
out
pop
push
ja
fwait
dec
mov
cli
cltd
push
push
insb
push
stos
mov
inc
rorb
cmp
idivb
inc
leave
shll
xor
int
xor
das
push
xor
bound
lahf
mov
add
ja
mov
xchg
ret
mov
insl
push
pop
jmp
xchg
lea
test
adc
dec
sbb
daa
divb
arpl
subb
pop
rol
into
in
mov
pop
out
popf
push
push
dec
stc
push
orb
out
push
jne
dec
inc
mov
xor
pop
enter
scas
imul
push
sahf
jb
outsl
popa
dec
sbbl
sub
xchg
fwait
mov
cmp
adc
add
cmp
add
lock
mov
cmp
cmp
mov
out
iret
in
dec
ret
dec
sbb
fdivr
fisttps
jmp
cmc
mov
or
stos
lds
mov
gs
jecxz
int
ljmp
idivb
fs
push
mov
bound
movsl
pop
loopne,pt
cmp
insb
fadd
fwait
xchg
cwtl
fcmovu
inc
jg
repz
jnp
xchg
sub
insl
sub
test
lods
and
jg
lock
inc
mov
leave
imul
int
outsb
adc
and
push
lret
outsl
out
inc
aas
jle
shl
out
aaa
mov
faddl
xchg
aas
push
jp
pop
repnz
fsubr
xor
pop
mov
jo
pop
lret
push
jbe
aaa
in
stos
adc
dec
ds
aam
out
rcll
xchg
sub
or
cmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
