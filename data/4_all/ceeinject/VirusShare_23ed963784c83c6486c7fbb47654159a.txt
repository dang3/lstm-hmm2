call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
hlt
hlt
adc
cltd
aam
divl
movsb
test
sub
push
or
imul
cltd
aam
stc
mov
movsb
fsts
fs
push
or
or
add
hlt
sub
pop
aam
jmp
xchg
xor
xor
pop
jb
js
jno
jae
mov
mov
fstl
sub
mov
jmp
shlb
add
movsb
push
sub
sbb
push
mov
stos
loop
cld
and
jg
lods
les
in
and
push
or
jno
cwtl
push
dec
icebp
inc
jns
gs
idivl
stos
cltd
push
enter
icebp
in
fcoml
fcomps
fwait
or
imul
popa
mov
cmp
push
sbb
dec
leave
push
aas
push
popf
lds
jno
stos
or
imul
lods
test
int3
je
adc
pop
push
xor
sbb
or
sbb
pop
sti
mov
test
stc
mov
movsb
fsts
rcll
xor
and
adc
inc
lret
hlt
fistps
xchg
repz
ror
icebp
test
pop
add
jge
pop
push
arpl
cwtl
and
nop
testl
push
jl
gs
or
mov
jno
push
lret
mov
mov
mov
mov
fsts
sbb
jns
imul
hlt
test
stc
mov
movsb
fsts
sbb
jns
imul
hlt
insl
int3
xor
xchg
mov
fs
jp
es
xchg
in
push
cli
dec
ss
cli
adc
jo
aam
imul
add
data16
dec
inc
ficoml
inc
mov
or
add
cld
int
fldcw
loop
int3
or
lock
jae
out
mov
out
jecxz
jge
push
daa
dec
inc
sbb
cmp
mov
test
out
arpl
les
inc
shll
imul
ds
fwait
cmp
add
jae
push
imul
xlat
stos
jecxz
lret
pop
inc
fsts
xor
shrd
in
jmp
shr
or
xor
vxorps
les
in
inc
sbb
xchg
sbb
xor
xchg
sbb
sbb
add
loopne
and
push
add
adc
jmp
aaa
lods
mov
and
cltd
mov
push
xor
or
inc
add
jno
arpl
mov
test
mov
fists
or
and
xor
inc
pusha
and
out
leave
pop
addr16
xchg
mov
fcompl
fildl
int
test
push
mov
stc
loop
mov
push
jecxz
shlb
xchg
push
and
flds
lahf
into
xor
mov
orb
adc
dec
loop
cmp
fidivrl
add
addr16
sub
sub
loope
adc
inc
sub
or
popf
lea
fstl
add
imull
nop
aam
jno
jp
call
loope
pop
daa
ss
popa
jae
andb
in
shrb
and
cld
xlat
out
movsb
mov
mov
mov
stos
std
arpl
xchg
sbb
push
sbb
adc
test
xor
inc
out
push
roll
mov
ljmp
lds
repz
out
inc
add
mov
xchg
xor
xchg
jae
jnp
and
arpl
inc
scas
push
arpl
fbstp
test
rcrb
fwait
repz
lea
push
jae
xor
mov
and
test
sarl
mov
and
out
js
test
jbe
aaa
jge
lods
add
fs
jb
adc
or
out
jg
dec
pusha
sbb
ret
lods
ret
sbb
test
cs
lds
adc
cmc
popf
pop
mov
in
je
or
cs
adcb
mov
or
adc
pop
jecxz
das
stos
mov
jnp
cmpsb
fsubrs
cmc
xchg
dec
ret
fmull
xchg
dec
shl
aaa
out
mov
sbb
ds
sbb
and
mov
or
push
insb
sub
jl
inc
or
scas
or
out
movsb
mov
fbld
repnz
xchg
xor
aad
shr
js
fld
shlb
sarl
out
mov
push
inc
popf
push
out
xchg
push
icebp
sub
jecxz
fstps
lods
sub
xchg
test
pop
mov
test
push
fcoml
inc
mov
out
imulb
inc
or
mov
push
jne
jmp
ss
inc
push
and
inc
xor
pop
enter
or
push
add
adc
sub
cmpsl
mov
sbb
sub
sub
lods
in
outsl
and
xor
cmp
xor
mov
or
lods
pop
mov
ss
cmp
jg
inc
sbbb
mov
jno
jbe
xchg
dec
dec
lea
inc
insb
pop
or
enter
notl
cmp
dec
int
sub
or
dec
push
popa
scas
sahf
pop
mov
imul
idivl
pop
sbb
ljmp
std
add
fldt
test
fidivl
add
pop
roll
inc
add
push
ss
popf
xor
or
loop
das
sub
movsb
rorb
jno
adc
notl
ljmp
or
stos
add
rcl
dec
adc
and
negl
mov
repz
pop
or
es
mov
mov
hlt
mov
aad
inc
sub
lds
and
sub
add
test
sbb
aaa
stc
addr16
in
mov
iret
add
xchg
lcall
popf
outsb
out
xor
mov
jle
or
pop
ja
dec
sbb
xor
cmp
adc
cmp
xchg
mov
adc
push
push
jbe
js
repz
jne
lock
adcb
mov
mov
and
int
cmp
pop
scas
or
and
repnz
pop
outsl
ds
jmp
rorb
inc
mov
sub
jae
test
insb
xchg
cmp
mov
scas
rol
daa
dec
lock
test
cmp
and
stos
addr16
pop
repnz
jns
sbb
std
push
add
lcall
push
in
lds
push
push
push
and
sar
lds
movsl
push
test
jb
pushf
push
imul
jb
sbb
mov
sbb
cmp
dec
add
dec
push
cwtl
ljmp
or
iret
pop
dec
mov
dec
loope
push
jmp
cmp
add
outsb
lret
cmp
adc
hlt
pop
jp
fnstenv
pop
in
icebp
pop
add
out
scas
in
int
sbb
mov
aas
pop
es
pop
mov
push
push
pop
cltd
xchg
lret
fidivs
in
bound
push
lcall
mov
sahf
jns
fists
sbb
clc
mov
adc
mov
push
test
pop
in
xor
or
inc
cmp
jns
adc
pop
loop
in
lds
lret
push
lret
in
mov
iret
or
mov
jns
mov
mov
insb
insb
xor
lock
dec
shr
fists
ljmp
lock
cltd
into
sub
rcr
test
rol
add
xchg
sbb
out
jg
shll
dec
out
inc
xchg
popf
fisttpl
adc
adc
xchg
inc
es
xchg
lods
out
jl
pusha
les
xchg
sarl
mov
jle
scas
aam
ds
mov
imul
aam
ljmp
cmp
mov
dec
dec
or
and
imul
adc
xchg
pop
inc
push
shlb
push
jne
or
push
sbb
cmp
pop
jg
pop
loope
dec
xorw
jmp
pop
mov
pushf
jl
jge
cmpsl
idivb
jg
mov
cmp
mov
adc
cmp
fs
mov
cwtl
rorl
mov
mov
sub
jo
adc
call
jnp
lret
jecxz
pop
aaa
mov
sub
shlb
xlat
sub
push
gs
cld
sub
push
and
fisttps
int3
lcall
xor
pop
jne
in
or
fimull
or
xlat
cli
push
jns
jno
mov
loopne
lock
hlt
or
addr16
ljmpw
mov
xor
shlb
orb
hlt
dec
xor
stos
pop
pop
fsubs
leave
cmc
inc
loope
cs
arpl
lods
mov
icebp
sbb
cli
out
xchg
xchg
hlt
ljmp
or
mov
mov
mov
mov
lods
adc
outsl
arpl
test
dec
sub
test
lret
dec
inc
jnp
jmp
adc
pop
cmp
iret
scas
hlt
sbb
push
mov
orb
das
rcr
xor
and
cmp
decl
cmp
cltd
mov
jmp
lret
xchg
imul
jg
stc
jo
mov
push
fptan
pop
inc
fidivrs
sub
xlat
mov
dec
jl
xor
dec
push
inc
mov
push
push
and
imul
lret
xor
mov
sub
mov
je
inc
push
jb
cltd
push
cmp
ret
cmpsb
xchg
orb
or
jmp
fistps
scas
add
and
testl
mov
ja
cs
jl
adc
dec
add
inc
push
add
aas
push
subl
xlat
les
pop
fstpt
mov
adc
in
push
pop
jns
mov
jo
sub
inc
sbb
repnz
push
xor
or
xlat
leave
sub
arpl
repz
add
sub
xchg
pusha
clc
push
pop
stc
mov
mov
dec
inc
out
popf
lcall
or
cli
into
jmpw
negl
in
sahf
outsb
add
push
cmp
fidivs
xorb
fcompl
aaa
shll
clc
addr16
int
daa
lcall
mov
insb
sbb
out
xor
pop
fcomi
rorl
jns
adc
sub
cmpsb
jp
dec
and
dec
push
sub
sub
add
es
mov
sti
out
sbb
imul
xor
sbb
mov
cld
push
pop
push
push
jne
jnp
lea
sahf
and
std
cmp
lods
gs
xor
adc
cmp
adc
push
sub
cmp
in
lret
jl
data16
xor
xchg
ja
lret
pusha
inc
rclb
jp
bound
std
add
ret
cmp
lret
lods
push
pop
imul
or
jge
mov
dec
jne
loop
mov
mov
lahf
aad
cld
les
adc
inc
clc
or
aam
lahf
mov
add
dec
push
addl
hlt
in
int3
xchg
sub
in
pop
mov
dec
enter
jae
loope
xor
outsl
aaa
addr16
adc
push
jns
in
mov
ret
and
push
xor
stc
and
mov
pop
fucompp
push
loope
test
mov
daa
add
inc
pop
sti
iret
andl
nop
cmp
pop
pop
xor
shrl
mov
mov
push
mov
movsl
jle
cld
loop
xchg
and
scas
sub
pop
pop
xchg
add
xlat
in
arpl
inc
sbb
add
mov
jg
adc
xchg
ljmp
lds
sub
imul
js
jge
dec
cmc
insl
mov
cmp
pop
dec
adc
repnz
adc
dec
test
jp
fistpl
in
cs
repnz
mov
ja
pop
dec
push
mov
xchg
stos
xchg
scas
mov
cs
daa
lahf
shl
xchg
lcall
nop
adc
loop
test
or
sahf
and
leave
xchg
hlt
in
sti
repnz
daa
inc
cmp
test
loope
mov
fadd
scas
nop
sbb
mov
lret
ljmp
xchg
into
pop
pop
fstpl
fistl
mov
xchg
and
stc
dec
inc
int
cmp
int3
fbstp
lock
add
mov
mov
das
sbb
fistpl
or
xchg
dec
movsb
xor
xchg
lcall
cmp
mov
std
roll
cmp
push
scas
dec
int
leave
sbb
rclb
and
pop
dec
arpl
test
fdiv
pusha
jnp
les
rorb
es
bound
jb
mov
out
mov
jecxz
push
ss
push
mov
dec
dec
out
sub
mov
andb
repnz
data16
push
push
cld
movsl
and
xchg
pushf
mov
sbb
shl
or
imul
jmp
movsl
add
fwait
push
call
mov
dec
jge
call
fildl
jl
jo
lcall
icebp
int
ffreep
adc
and
cli
mov
mov
adc
in
imul
aaa
pop
in
push
mov
push
lds
xorb
inc
lahf
mov
clc
shrl
js
mov
mov
mov
loop
adc
in
adcb
and
mov
mov
dec
sbb
cmp
test
in
test
lods
adc
lods
pop
hlt
dec
jl
pop
pop
scas
mov
mov
pop
dec
mov
dec
xor
adc
mov
xchg
xchg
cmpsl
sbbb
or
imul
in
ret
lea
pop
pop
adc
adc
jo
jo
xor
lret
in
dec
cld
mov
ret
aas
imul
jge
add
testl
mov
cmp
xor
and
jecxz
fs
and
hlt
lcall
mov
sahf
leave
pop
sbb
sbb
mov
pop
cmp
rcll
jo
push
mov
out
ret
stc
inc
pusha
scas
enter
cli
icebp
lret
xchg
cmpb
das
xchg
into
pop
xor
pop
pop
test
mov
pop
mov
loop
shll
test
cmp
or
lods
sub
jne
clc
iret
insb
shlb
sarb
fwait
stos
adc
roll
ffreep
and
ret
and
hlt
or
and
xchg
push
or
shlb
sbb
jg
sahf
or
cmp
mov
push
arpl
rorl
dec
push
mov
test
imulb
ret
jmp
sahf
jne
push
aaa
push
outsl
mov
add
out
dec
lahf
pop
cld
lret
mov
std
popa
mov
in
out
andl
and
fcmovnb
jno
out
je
jp
sbb
inc
iret
movsb
movsl
negl
sahf
pusha
sub
xor
push
repz
flds
cmp
aad
mov
or
inc
and
stc
inc
mov
scas
sahf
sbb
rol
jo
lods
or
ljmp
js
rcrl
divb
adc
jne
mov
aad
mov
dec
add
mov
pop
lock
inc
sbbl
movsb
and
sub
cmp
repz
and
fwait
push
fisttpll
xchg
fisttpl
xchg
repz
dec
mov
outsb
fcoms
adcb
or
loop
pop
jg
mov
or
scas
std
sbb
lods
mov
cli
ret
mov
mov
cwtl
nop
mov
sbb
adc
mov
scas
xchg
daa
repnz
jle
test
adcb
mov
dec
mov
xor
dec
addr16
and
xor
arpl
ficoms
leave
pushf
test
add
dec
cmpsl
push
xchg
test
jmp
mov
sub
xlat
repnz
notb
jmp
fcomp
hlt
dec
inc
cmp
inc
fwait
cltd
outsb
and
incb
push
lea
outsb
mov
enter
in
cmp
mov
test
sub
fistl
jo
aam
jnp
mov
and
hlt
movsb
sub
and
aam
das
xchg
arpl
dec
sbb
jecxz
inc
cltd
and
imul
jl
movsb
xchg
xchg
xor
je
lret
push
mov
mov
mov
add
dec
fildl
jmp
in
fdivrp
rcr
sub
popa
in
into
pop
psubusb
insb
stos
push
pusha
jmp
or
adc
testb
jbe
out
or
pop
dec
imul
xor
lods
ljmp
push
movsl
or
cmp
outsb
pushf
sub
push
pop
xor
adc
sub
mov
mov
rorl
stos
or
inc
dec
lret
shll
scas
adc
es
imul
xlat
lods
pop
lcall
jg
mov
stos
pop
ret
add
push
cs
xor
or
jno
int
insl
and
push
and
fs
jl
sub
sahf
or
xchg
popa
and
sbb
popf
ja
scas
sub
dec
jae
add
jp
js
aad
pusha
or
enter
dec
or
mov
dec
insb
cli
repnz
mov
xor
xchg
test
in
adc
dec
sbb
adc
jp
daa
movsb
rclb
mov
and
sbb
hlt
cmc
mov
pop
push
sbb
cmp
outsb
cld
xor
hlt
and
inc
fimull
push
xchg
hlt
push
rcrb
lock
and
les
sbb
hlt
ljmp
sub
int3
jge
or
sbb
jne
pop
mov
xchg
sbb
mov
jbe
aad
sub
xchg
loop
fists
movsl
movsl
xchg
ds
sub
and
mov
jbe
mov
pop
aaa
cltd
jae
push
dec
movsb
mov
loope
gs
loope
test
mov
pop
dec
mov
inc
mov
inc
mov
iret
mov
xchg
dec
inc
call
push
sbb
test
pop
xor
and
mov
add
addr16
fs
push
jo
cmp
ljmp
cmpsb
inc
sbbb
stc
mov
jmp
int3
jl
jl
insb
xor
mov
pop
push
test
inc
cmc
jno
jmp
std
mov
ret
lods
ret
jmp
aas
mul
and
add
xchg
in
mov
stos
js
mov
pop
or
and
push
sbb
fdivrl
mov
cmp
cli
not
loope
or
and
xchg
pop
mov
stos
stc
addr16
scas
pop
sbbl
cld
test
jne
movsb
cmc
and
mov
out
adc
paddsb
adcb
fstpt
je
pushf
jns
loop
push
dec
add
nop
sbb
pusha
jbe
cmp
cmp
cmp
in
jbe
and
inc
dec
xchg
mov
jne
ja
inc
sub
jno
lock
push
ror
jp
mov
out
inc
pop
adc
add
xor
fisttpll
sub
popl
repnz
sub
shll
stos
mov
mov
adc
pop
aam
icebp
negb
les
inc
js
add
leave
cmp
jno
mull
jl
push
jne
pop
in
stos
mov
call
jnp
pop
inc
pusha
cmp
sub
mov
mov
xchg
ficomps
xchg
or
sbb
lods
inc
nop
cmp
add
insl
ja
mov
cmp
sbbb
pop
xlat
lret
jno
cmp
popa
dec
sub
add
daa
enter
test
push
nop
rcrl
add
into
inc
loope
sti
insl
inc
outsl
push
gs
ficoml
js
stos
ljmp
xchg
inc
js
lret
fwait
xor
sub
xchg
adc
pop
in
leave
cwtl
mul
xchg
daa
push
mov
xor
adcl
in
int3
mov
mov
mov
fcoml
xchg
xor
xchg
loopne
bound
daa
xlat
jbe
ss
into
arpl
xchg
shll
addb
repnz
rorl
sarl
in
repnz
add
sub
push
imul
jg
cmp
adc
mov
adc
bound
adc
sbb
ret
mov
pop
sbb
arpl
test
mov
leave
out
lea
movsl
jge
int3
pop
xchg
inc
jo
pop
sub
or
adc
cmp
std
or
adcb
in
mov
lea
sahf
outsb
daa
scas
xor
jb
inc
and
outsl
push
sti
shr
cltd
cs
out
push
add
jmp
jnp
cltd
push
enter
enter
inc
jmp
adc
xor
fadds
cmp
add
and
scas
cmp
mov
fiaddl
or
dec
leave
lds
shl
or
shrb
mov
add
dec
sub
shr
js
xlat
into
sbb
mov
stos
push
push
or
sub
lret
int
aas
dec
aas
popf
loopne
mov
lea
jl
aas
or
testb
xchg
and
and
mov
jge
into
fwait
push
inc
mov
xchg
outsl
cwtl
jb
jno
in
cli
aad
lcall
mov
inc
xchg
mov
cmp
adc
mov
push
push
cs
add
not
fistps
add
pop
mov
cld
sub
push
das
push
pop
push
test
popa
hlt
jno
test
mov
cli
sub
cmpsl
imul
and
sbb
hlt
insl
mov
out
fcmovu
in
icebp
xor
into
notl
dec
lods
arpl
add
imul
dec
xchg
or
dec
fwait
jbe
lret
inc
add
fs
imul
ret
imul
sbb
ret
jmp
out
neg
inc
push
sub
leave
sarl
fs
aad
rorl
gs
cmpb
sbb
andl
movsb
hlt
mulps
mov
lods
mov
xchg
adc
jo
xchg
out
movsl
cmpsl
invd
negl
fistpll
clc
add
sub
enter
out
xchg
pop
sahf
xor
stc
fcmove
in
ds
inc
mov
or
pop
and
shll
dec
je
testb
jb
mov
aam
stc
mov
movsb
fsts
sbb
jns
imul
hlt
test
stc
mov
movsb
fsts
sbb
jns
imul
hlt
stos
in
aam
clc
mov
movsb
fsts
adc
jns
jo
pop
adc
add
hlt
test
adc
mov
movsb
fsts
into
mov
or
push
mov
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
stos
mov
lcall
std
xlat
jmp
or
jp
dec
pop
pop
dec
stos
mov
lcall
fstp
jecxz
cmp
sbb
dec
pop
pop
dec
stos
sbb
sti
ljmp
ljmp
cmp
jg
push
or
or
xor
fdivrp
fucomi
mov
repz
and
or
mov
rolb
pop
sbb
popa
mov
mov
addr16
call
xor
xchg
ret
hlt
loop
pop
cmp
or
push
aad
hlt
loopne
sarl
adc
adc
sub
das
cmp
imul
mov
cltd
popf
lea
sbb
mov
jmp
in
cmp
loopne
mov
aas
push
punpcklbw
adc
sbb
xor
push
xor
std
xchg
std
cmp
cli
js
push
pop
rclb
gs
shll
int3
insl
outsb
jg
cli
lret
jo
mov
pop
daa
imul
lcall
fstp
pop
sub
sbb
push
jp
dec
inc
pop
jg
mov
fsub
pop
xchg
andb
pop
pop
jns
pop
outsb
in
cmp
add
sub
and
sti
into
jmp
out
fndisi(8087
scas
mov
mov
pop
pop
pop
pop
ja
sbb
and
xor
int
mov
loope
mov
in
lret
int
cmp
sbb
dec
pop
pop
dec
stos
mov
lcall
fstp
int
cmp
sbb
dec
pop
pop
dec
stos
mov
in
cmp
inc
repnz
jb
push
xor
fwait
dec
jbe
jmp
movsb
stc
cmp
cmp
push
sbb
xchg
mov
inc
gs
inc
pop
lea
jge
pusha
dec
cmp
jg
clc
pop
cmp
mov
mov
push
inc
jl
popf
cmpsb
and
in
sbb
dec
mov
xor
push
jl
outsb
aad
rcll
in
jae
cmpsl
and
and
inc
push
push
fwait
pop
xchg
push
pop
mov
icebp
mov
call
lock
je
pop
scas
movsb
and
sarb
jne
pop
insb
aad
add
test
pop
dec
lea
mov
jmp
mov
jbe
ffreep
sbb
pop
mov
cmp
test
rcr
dec
fwait
aas
sbb
mov
mov
int3
add
subb
jg
push
movsb
xorl
into
mov
xchg
dec
mov
mov
shrl
mov
cmp
and
dec
pop
mov
sti
mov
stos
xchg
inc
rcl
fst
rorl
jb
daa
sub
ss
dec
mov
mov
xlat
sarl
mov
mov
sbbl
rorb
mov
cltd
lret
jnp
and
fmull
add
jmp
call
aam
cmp
and
repz
adc
push
out
dec
xchg
jecxz
push
jmp
lods
xlat
or
insl
or
inc
and
xor
mov
loopne
into
inc
mov
aaa
cmpsb
data16
notl
cmp
dec
sti
add
fcompl
xor
push
or
movsl
ffreep
popa
push
mov
add
addb
pusha
pop
repnz
jp
push
icebp
lret
jg
lahf
push
inc
xor
jno
push
hlt
frstpm(287
add
mov
out
ljmp
mov
jmp
test
filds
mov
add
and
dec
repz
sub
cmp
add
loopne
pop
xor
jle
nop
inc
enter
aas
or
aas
adc
xchg
push
outsb
dec
add
test
outsl
jo
dec
xorl
push
ficompl
fsubl
cmp
data16
bsf
dec
shl
sub
daa
xor
ret
add
mov
inc
jle
aad
faddp
inc
and
adc
loope
int
scas
adc
les
pushf
lds
jecxz
mov
mov
out
cld
jge
and
pop
sub
jae
mov
push
mov
dec
mov
std
pop
sbb
aam
xchg
mov
mov
sbb
test
test
test
in
call
pop
jno
push
sbbl
jo
mov
push
dec
ror
hlt
roll
dec
cld
inc
dec
pop
sahf
out
xor
mov
dec
out
adc
jg
jmp
sbb
jle
sbb
mov
in
fcmovbe
ds
lret
sbb
pop
cld
mov
mov
cmp
or
push
into
pop
mov
pop
mov
and
int3
push
pop
test
adc
in
mov
icebp
inc
cmp
jmp
push
dec
nop
and
or
insb
cmpsl
mov
xchg
aaa
cs
mov
push
jge
pop
push
pop
and
sbb
inc
mov
iret
adcl
daa
adc
push
repnz
lahf
addb
add
lcall
sti
xchg
mov
imul
xlat
rcrl
sbb
xchg
mov
mov
mov
mov
scas
idivl
outsb
push
and
mov
orl
adc
icebp
mov
test
leave
jle
add
sub
push
gs
stos
inc
push
push
mov
ret
inc
xor
mov
pop
in
mov
int
shrl
pop
dec
inc
iret
push
rorb
out
xchg
sub
mov
pop
adc
inc
cmp
ja
lret
cmp
push
sbb
movsb
mov
sub
lods
pop
mov
mov
repnz
jl
and
or
cmp
stos
arpl
ds
mov
insb
pop
cmp
xchg
or
decl
outsb
rcrl
shl
lods
cmp
cmp
sub
sub
aad
jp
arpl
addr16
pop
fcoml
cmp
imul
pop
out
addr16
inc
scas
lods
test
xchg
dec
cmp
andb
push
pmaddwd
mov
pop
js
mov
sarb
dec
xchg
sub
outsl
into
mov
mov
loop
mov
sbb
cltd
mov
mov
mov
out
je
mov
push
push
iret
movsb
xchg
in
pop
daa
repnz
mov
adc
lds
loopne
dec
inc
je
lret
dec
jo
adc
adc
jl
jbe
in
daa
stos
sub
es
inc
shl
xor
fstpt
jne
mov
popf
jmp
aam
inc
jb
jnp
pusha
arpl
jge
enter
dec
lret
dec
pop
pop
lahf
aam
mov
aas
aad
int
lods
and
xchg
jecxz
mov
stos
mov
sub
cld
and
dec
jae
or
lods
jno
adc
mov
cs
das
push
adc
sub
scas
jae
insl
fwait
mov
sub
add
mov
clc
mov
jle
sbb
shll
fbstp
lret
cltd
push
testb
adc
js
sbb
pop
cmpsb
popa
mov
test
pop
jnp
xchg
pop
sbb
je
insb
xchg
xchg
ss
xchg
mov
sub
pop
jmp
lahf
lret
xor
and
dec
lods
mov
fidivl
or
popf
inc
lcall
adc
jl
loopne
loop
stos
sbb
pop
xchg
xor
adc
jnp
iret
jnp
int3
shr
cmp
push
inc
js
jae
pop
cmp
ret
dec
sbb
mov
pop
test
loop
xchg
cmp
test
dec
sbb
mov
fdivs
mov
cmpsb
shll
out
les
mov
sub
dec
lock
scas
cmp
loopne
outsl
dec
inc
punpckldq
test
sub
mov
cmp
rclb
pusha
xor
xchg
bound
inc
cli
add
push
je
loop
sbbb
in
and
push
fisubrl
jge
and
mov
hlt
mov
and
es
or
fwait
fs
sub
out
repz
pusha
stos
jmp
les
out
addr16
fisubl
xchg
mov
adc
mov
inc
or
fldenv
inc
mov
jecxz
mov
xchg
xchg
cmp
xchg
pop
cmpsb
mov
push
add
js
push
cmpsl
out
lcall
cmp
jae
push
push
aad
rcl
sar
insl
test
sbb
dec
and
fisttpl
cmc
push
pop
cld
push
cmpsb
ljmp
jmp
fsubs
iret
jb
and
push
lcall
lods
scas
pop
lret
xchg
dec
je
mov
cmpsb
pop
inc
lahf
iret
inc
hlt
mov
cmc
push
fistpll
sti
pop
test
ret
or
in
mov
popf
jno
pop
pop
pop
xchg
negl
add
lret
xor
or
add
mov
inc
add
adc
outsb
pop
andl
lret
or
push
mov
sub
or
popa
jp
xlat
mov
sti
and
aad
lret
enter
out
mov
push
popa
repnz
push
jne
es
fsubrl
xlat
lret
inc
add
ds
jns
inc
outsb
fs
sbb
nop
sub
fsubrs
outsl
stos
movsb
adc
inc
jmp
fisubrs
sub
push
lods
dec
out
cltd
pop
xchg
mov
inc
dec
fisttpll
jnp
popf
inc
pop
pop
je
or
add
jbe
int
mov
test
pop
adc
out
xlat
nop
pop
into
add
sub
cltd
out
gs
sbb
divb
cmp
jg
pop
mov
insl
add
push
push
out
ret
roll
negb
dec
pushf
lock
xor
test
cmp
adc
push
mov
aaa
mov
or
jbe
iret
push
pop
shll
adc
push
pop
ja
sti
jbe
adc
call
push
inc
iret
sbb
mov
jae
push
cli
push
mov
neg
xchg
adc
cmpsl
clc
mov
sub
xor
sub
shl
mov
cmp
sbb
push
dec
mov
jns
stos
in
stos
push
or
idivb
add
bound
int3
cli
adcl
jb
filds
pop
mov
pop
enter
sub
fucom
fdivrl
xor
fs
loopne
sub
pusha
mov
add
and
mov
in
mov
cli
jp
movsl
jno
mov
pop
sub
outsl
or
imull
std
stc
mov
mov
in
push
dec
dec
inc
xor
xchg
popa
inc
orl
pop
daa
insl
xor
sbb
js
sub
inc
add
data16
cmp
mov
cmp
mov
aam
in
sbb
sbb
push
and
or
insl
mov
cmp
pop
pop
sub
sub
sub
xor
fsub
and
and
mov
cmp
adc
ja
inc
cmp
mov
cmp
sbb
jb
pop
call
lods
fwait
adc
xchg
add
jae
xchg
and
and
dec
add
mov
cmp
cmp
std
outsl
or
mov
add
jns
call
jns,pn
imul
cli
pop
scas
mov
fs
call
and
xor
sbb
xchg
ljmp
mov
lret
xchg
mov
sub
sbb
push
push
adc
adc
into
mov
aad
and
insl
movsl
inc
push
jne
outsb
inc
out
jmp
mov
cmp
inc
sbb
fwait
inc
push
adc
xchg
ret
rcl
xor
out
xor
mov
sub
dec
adc
aam
or
in
addr16
add
adcb
fstpl
das
insb
rcrb
cmp
ds
mov
mov
lods
lahf
mov
or
lret
movsb
add
repnz
or
es
aam
mov
mov
or
pop
shrb
ret
cwtl
cltd
fdivl
add
cmpb
or
add
sub
or
mov
push
cmp
and
dec
sahf
sub
in
cmp
aas
inc
mov
sarl
mov
sbb
inc
and
pop
sysexit
or
cmpsl
adc
cmp
out
divb
jbe
sbb
dec
mov
repnz
adc
lods
scas
xchg
mov
movsl
dec
aaa
jecxz
pop
pop
cltd
dec
add
mov
js
ds
cmp
sbb
inc
xchg
xchg
test
pop
rclb
loop
push
or
frstor
in
inc
and
clc
orb
jne
sub
jnp
add
push
sbb
and
ret
fmuls
jg
mov
bound
imul
cltd
int
sub
cmp
cltd
cmp
testl
dec
pop
push
imul
adc
rcll
pop
sub
call
cltd
mov
hlt
xor
ret
fisttps
jne
lret
jnp
sub
iret
faddl
push
pop
shrb
sub
mov
xor
pop
stos
shlb
xchg
mov
stos
jp
add
pop
adcl
into
inc
call
cmp
movsl
sbb
push
cld
mov
enter
into
xchg
jmp
in
shll
std
cld
pop
push
mov
imul
xchg
sbb
mov
or
cmp
mov
jmp
jnp
pop
xor
xchg
jae
xchg
mov
cli
pop
and
test
mov
dec
loopne
mov
insb
cmc
sbb
lds
mov
inc
add
or
sbb
fbld
cli
cwtl
cmp
inc
xchg
out
and
adc
lcall
xchg
cmp
inc
cmp
add
fs
mov
leave
dec
movsl
inc
repnz
sbb
cmp
push
je
nop
sbb
iret
in
inc
inc
test
dec
dec
hlt
aam
ds
jnp
sbb
lods
insl
push
sbb
mov
jge
sub
call
cmp
cmp
rcll
leave
imul
xor
movhps
sbb
shll
mov
xchg
jne
addr16
add
sahf
mov
push
push
pop
jno
je
loop
dec
aaa
mov
jle
jge,pt
adc
mov
sahf
ficoms
repnz
dec
jge
jg
mulb
and
mov
aaa
in
rcrb
or
fstl
faddl
outsb
xor
jmp
gs
sbb
and
rorb
loope
aad
bound
inc
jnp
jg
add
inc
inc
add
repz
xchg
lret
in
fists
les
or
and
jecxz
hlt
ss
sub
xchg
adc
jae
outsl
popa
pop
sahf
or
inc
adc
sbb
xchg
shlb
and
push
insb
or
leave
xchg
pushf
scas
inc
aam
jbe
add
jae
add
cmc
inc
xchg
mov
aas
adc
cmpb
lret
loop
lea
adc
stos
mov
lret
cmp
call
data16
pop
jb
popa
sub
cmpsl
pop
pop
int
and
in
cmc
mov
xor
pusha
sarb
inc
nop
xchg
sub
sbb
shl
out
adc
lret
iret
rolb
shl
ja
into
or
iret
dec
sub
push
repnz
push
cwtl
cmp
lahf
ret
mov
xchg
rcrl
sbb
or
mov
subl
pushf
dec
in
sbbb
pop
mull
add
outsb
adc
dec
mov
pop
std
in
xor
into
push
ret
sub
jg
jbe
cmp
in
test
mov
jnp
enter
pop
in
and
push
testb
imul
inc
add
daa
or
mov
icebp
mov
iret
int3
inc
jae
pop
scas
mov
dec
in
in
pop
ret
adc
or
pmulhw
movsl
add
cmp
or
xor
jae
xchg
aas
fdiv
mov
pop
pop
adc
in
jne
or
inc
sarb
sub
dec
sbb
data16
mov
mov
call
frstor
mov
push
lea
lahf
daa
int3
aas
or
sbb
or
adc
bound
jl
addr16
dec
pop
jmp
lods
call
lcall
scas
in
in
xchg
inc
stc
add
and
or
loopne
aam
dec
movsl
mov
push
or
inc
sub
push
xchg
nop
xor
dec
ljmp
in
pusha
inc
aaa
sub
and
insl
outsb
repz
jmp
and
out
stc
inc
insb
mov
or
mov
scas
dec
rcll
cltd
inc
add
mov
repnz
mov
test
fistl
fistl
adc
push
jns
test
mov
ss
push
fnstcw
sti
loop
jnp
ret
mov
sbb
add
xchg
and
or
mov
popf
out
dec
mov
idivl
aaa
cld
repz
and
pop
push
xchg
xchg
pusha
sub
mov
subb
cmpsb
cwtl
lret
mov
sub
out
inc
adc
xor
jecxz
pop
sbb
jb
loope
inc
xor
push
cmp
stos
pop
les
cltd
jb
cmp
sub
outsl
mov
pop
mov
and
mov
outsb
fcmovnu
adc
pushf
cmp
inc
push
fadd
clc
mov
mov
ret
sub
movl
ret
nop
xchg
xor
jle
jne
sub
lcall
xor
push
mov
int
or
mov
aam
neg
push
xor
pop
xchg
adc
into
ret
mov
and
sbb
popa
ja
lahf
cmp
cmc
mov
cld
push
pop
stos
data16
pop
lods
inc
fs
add
hlt
daa
pusha
mov
movsl
sub
push
sub
sub
loop
add
inc
mov
and
sub
mov
mov
and
into
push
lds
and
lds
adc
aam
pop
mov
push
iret
push
aaa
mov
aaa
fstpt
xchg
pop
inc
push
add
stos
aaa
test
es
imul
push
mov
aaa
outsb
clc
shrb
loop
call
lds
xor
pop
scas
push
lret
push
enter
xor
cmp
data16
pop
mov
int3
jo
int
lea
popf
or
int3
lock
add
rep
movsl
arpl
test
es
add
pop
mov
mov
fstl
xor
cmp
gs
inc
std
pusha
insb
cld
pop
lcall
popa
or
pop
leave
xchg
cmp
aas
jge
push
fs
dec
ss
mov
imull
or
add
mov
movsb
mov
fnstcw
pop
call
std
sub
pop
fadds
xchg
push
sbb
cmp
pop
push
lea
jns
popl
fildl
mulb
movsb
mov
notl
incl
ljmp
xchg
mov
mov
mov
dec
cmp
inc
outsl
ja
jle
enter
aaa
movsb
mov
test
mov
test
mov
sbbb
rolb
cmp
jns
ds
stos
or
lcall
pop
or
push
test
mov
push
and
aam
fdivl
lods
nop
push
xor
shll
das
push
or
mov
xchg
and
pop
mov
nop
lret
lea
mov
push
je
push
dec
mov
loopne
xchg
pop
xor
jb
mov
clc
imulb
mov
push
je
sbb
fst
or
test
sub
inc
jecxz
xor
xor
test
shlb
sub
outsb
xchg
jmp
inc
pusha
sbb
push
jl,pn
push
in
gs
push
jnp
test
outsl
popa
div
push
push
sbb
push
je
fisubs
pushf
cli
mov
sbb
pushf
mov
cmp
cmp
push
mul
outsb
lods
dec
jne
fsub
int
inc
mov
inc
scas
nop
fdivp
pop
loope
or
in
loop
lcall
imul
out
divl
mov
pop
shl
fmul
aad
scas
loope
push
lret
ret
and
les
mov
xor
inc
lods
inc
inc
movsb
addr16
or
add
adc
psubsw
adc
mov
push
mov
and
xor
pop
fistps
int
bound
ss
stos
adc
push
or
or
ss
adc
adc
dec
sub
fs
xchg
fcmovu
sti
inc
mov
jl
and
sbb
je
mov
lods
stos
cmp
jb
push
outsl
icebp
jne
mov
or
nop
mov
mov
out
in
or
inc
dec
lds
movsl
xchg
int
inc
int
add
pop
xor
cmp
fisubs
inc
jne
adc
xchg
out
nop
pop
jo
pop
add
cmp
and
jg
cmpsb
and
js
jle
aaa
cmp
repz
inc
add
test
out
cmp
mov
pushf
xor
inc
in
sub
mov
and
arpl
lcall
rcrl
add
push
jp
lret
push
inc
cmc
inc
scas
std
pop
push
cmpsl
out
mov
fisubrs
lcall
cmp
out
xor
jns
sub
dec
insb
mov
js
shll
sbb
mov
pop
jle
jecxz
inc
add
maskmovq
testl
stos
jne
or
enter
add
repnz
lock
int3
out
negb
mov
divl
stos
dec
cld
inc
stos
popf
sub
dec
pop
in
adc
mov
xor
mov
xchg
add
popl
sub
sbb
jmp
rcr
jb
mov
aad
test
push
cmc
test
push
shll
mov
mov
popa
or
sbb
adc
sub
rcl
lods
adc
sbb
or
add
push
icebp
mov
jns
dec
pop
lahf
loop
pop
fidivrs
push
repnz
das
pop
or
dec
repz
sbb
scas
test
dec
andl
lods
and
outsl
adc
mov
scas
jnp
mov
jns
add
mov
lahf
mov
mov
in
jge
es
sub
addr16
pop
pop
inc
sub
dec
lahf
fldpi
leave
jbe
das
test
sbb
mov
ljmp
pop
inc
das
add
dec
or
div
pop
adc
aad
lret
fnstcw
roll
xchg
outsl
push
out
jo
jbe
jne
inc
sub
push
lret
mov
pop
loop
shrb
jmp
xchg
arpl
mov
xlat
sbb
repz
sub
rorl
and
aad
lods
mov
lcall
fstp
int
cmp
sbb
dec
pop
pop
dec
stos
mov
lcall
fstp
int
cmp
sbb
dec
pop
pop
dec
stos
mov
lcall
int
cmp
sub
sbb
jp
dec
push
pop
test
mov
int
std
cli
in
dec
pop
pop
or
mov
add
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
rcrb
or
cmp
sub
adc
insb
dec
rcrb
mov
mov
sbb
push
jp
popf
sbb
or
cmp
sub
pop
fimull
cli
adc
pushf
sbb
mov
int3
push
jp
xchg
sbb
or
cmp
sub
pop
ret
dec
bnd
insb
or
int
mov
fwait
sbb
lcall
jl
dec
fincstp
add
icebp
jg
stc
jecxz
aam
cltd
cmpsb
fsubl
jne
mov
test
pop
and
retw
call
aaa
enter
add
pop
sbb
add
push
js
test
clc
loop
or
in
jp
leave
pop
int3
sarb
pop
pop
mov
dec
adc
jnp
dec
dec
add
cli
xchg
arpl
sub
dec
iret
fmull
xor
notb
pop
rep
into
mov
cli
push
ljmp
inc
cmp
out
adcb
cltd
lcall
pop
push
test
je
sub
in
aad
cmp
mov
jp
dec
sbb
or
cmp
sub
pop
rorb
insb
adc
lods
push
faddl
push
arpl
iret
cmp
sub
cmp
cmp
sbb
es
ds
mov
imul
xor
or
sbb
outsl
out
dec
leave
das
mov
int
stos
jp
jecxz
test
iret
dec
mov
dec
ljmp
mov
mov
pop
int3
push
jp
mov
or
cmp
sub
pop
fimull
cli
insb
or
lods
dec
fcompl
push
jp
mov
fs
out
in
mulb
and
imul
testb
dec
addr16
xlat
adc
jae
mov
les
jg
add
insb
mov
xlat
idivl
cmpsl
dec
loop
sbb
stc
dec
push
sbb
jecxz
ljmp
pop
push
cld
test
pop
orl
xchg
lods
push
daa
ret
test
pop
pop
add
and
fsubrl
and
int
sub
pop
cwtl
jge
jle
cltd
mov
or
push
and
mov
mov
lock
inc
mov
adc
adc
cmpsl
mov
mov
pop
cltd
dec
in
nop
xchg
add
push
inc
mov
sub
dec
mov
add
mov
imul
vprolvd
mov
sub
xchg
mov
insb
push
stos
add
cmpl
and
rorl
sbb
int3
and
rorl
imul
adc
mov
stos
das
add
mov
in
mov
jle
pushf
iret
mov
jo
adc
cmp
xchg
cmp
arpl
inc
std
inc
mov
add
loopne
mov
or
push
dec
or
roll
inc
sahf
pop
push
push
lock
out
lds
fwait
pushw
pop
repz
jb
movsl
xchg
xor
js
dec
mov
jl
stc
sub
test
popa
insl
sbb
call
ds
mov
das
sbb
ret
popa
cld
dec
popf
in
into
popf
imul
andb
jl
mov
outsb
jbe
test
fistps
or
ret
icebp
mov
add
mov
ja
jb
inc
mov
lds
aad
pop
sub
jmp
int
or
mov
popa
sbb
xor
cld
jbe
push
ljmp
jne
int
sarl
mov
xor
inc
cli
cmpsb
xorb
clc
daa
pop
adc
divb
stos
and
aad
call
mov
fisubrs
sti
xchg
jg
jno
or
dec
jp
add
sbb
fmuls
andl
push
push
or
ljmp
icebp
adc
lret
repz
pop
test
add
rolb
xlat
fnstsw
adc
loope
add
mov
ja
roll
shr
lods
fbstp
pop
add
sub
into
faddp
mov
xor
mov
sti
push
add
inc
xor
je
scas
cmp
mov
scas
lock
cmc
xor
mov
lcall
les
pop
mov
sub
or
les
pop
leave
xchg
xchg
xchg
lods
jg
cmpsl
popa
pop
adc
or
xchg
dec
pop
mov
pop
inc
fwait
lods
pop
popf
sti
xlat
fidivrs
mov
xor
mov
add
scas
out
xchg
pop
inc
push
push
pop
mov
jb
roll
clc
xor
inc
mov
and
std
aas
lea
or
in
aam
xor
data16
aas
adc
clc
cmp
jno
cmpsl
sub
aaa
cmpsb
mov
pop
popf
add
cmp
xchg
insl
xchg
push
sub
popf
xor
sbb
insb
lret
popa
fs
sbb
clc
jno
dec
negl
inc
adc
in
sub
rorb
xor
insl
scas
sbb
xchg
xchg
inc
jle
push
rclb
ds
mov
or
mov
negl
pop
movsb
xchg
xor
push
ja
push
cld
sahf
into
xchg
shll
sub
mov
xlat
push
mov
rolb
inc
sub
and
pusha
lcall
icebp
push
sbb
ss
push
fldt
dec
add
lret
dec
sub
popf
rcl
jbe
sarl
dec
daa
flds
std
je
push
push
fdivr
dec
cmpb
repz
mov
mov
push
cmpb
push
dec
sub
push
lahf
shl
xchg
jge
inc
hlt
aad
ror
stc
xchg
jns
jle
push
or
xchg
or
addb
dec
ret
add
pop
mov
mov
repnz
cmp
lods
rolb
add
jecxz
ds
dec
cmp
jg
sbb
sub
xrelease
lock
jo
arpl
or
jle
enter
jnp
dec
mov
shll
sbbb
jle
mov
jno
aaa
xchg
add
insb
mov
rep
push
fcompl
mov
loop
clc
sub
aam
rcrb
or
mov
cli
cmpsl
push
pop
addb
out
insl
outsl
popa
push
mov
and
pop
sbb
adc
cmp
imul
adc
and
and
inc
mov
out
adc
aam
rorb
lock
mov
pop
or
loope
hlt
in
jmp
scas
dec
mov
cld
fs
fsts
pop
lods
xlat
fildll
lea
dec
imul
xlat
xchg
incb
jg
jo
cmp
sub
jo
mov
dec
inc
adc
xor
lret
mov
or
stc
xor
sub
push
rolb
push
cmp
aad
push
sub
and
add
mov
push
push
cld
dec
push
les
add
cmp
fsqrt
or
sarl
mov
fwait
popa
sub
shl
test
mov
ja
pop
xor
in
pop
loopne
imul
je
mov
rcll
and
jl,pn
call
out
push
push
or
arpl
insb
into
int
mov
mov
xchg
push
or
cwtl
mov
cmp
sbb
pop
jb
movsl
mov
cmp
loope
adc
out
mov
leave
andb
and
push
enter
mov
addr16
sub
pop
leave
mov
jb
inc
xor
movlhps
sub
and
out
mov
inc
int3
push
jecxz
push
outsb
xchg
out
nop
aad
je
cmp
push
mov
xor
outsl
cltd
adc
pop
xor
test
cmp
jl
sahf
ljmp
dec
sub
pop
loopne
sub
scas
lahf
pop
pop
jg
aad
sub
imul
sub
jne
popf
rcrl
push
and
cmp
cmp
divps
dec
mov
inc
mov
cwtl
xchg
cmp
shr
mov
mul
push
daa
add
sbb
dec
jle
and
push
inc
ret
data16
ja
push
mov
aad
icebp
pop
jle
xchg
outsb
push
mov
or
subl
loope,pt
inc
sbb
xor
fwait
add
mov
mov
xchg
or
mov
pop
jp
in
adc
shl
out
cmp
mov
push
jle
mov
fiadds
lds
fnstsw
jp
mov
add
mov
push
xchg
dec
cmp
frstor
lahf
push
xorb
scas
mov
test
repnz
xchg
or
fst
jo
or
lods
xlat
iret
stc
inc
xor
jle
dec
inc
pusha
sti
sbb
pop
sub
jbe
sbb
jne
imul
cwtl
mov
push
add
negl
xchg
xchg
adc
sub
fwait
mov
ljmp
jno
mov
mov
pop
sarb
adc
aas
lret
jge
mov
pop
aam
sbb
in
pop
insb
xlat
loop
xchg
adc
mov
push
lods
cmpsb
xor
incl
test
pop
dec
shll
sub
mov
ljmp
sbb
inc
adc
push
push
fcmovu
std
jne
mov
lods
lock
xor
aaa
andl
cmp
inc
add
leave
xchg
add
jne
scas
icebp
fsubs
rcr
and
fldt
in
or
pop
adc
sub
loopne
lds
pop
xchg
stos
pop
sbb
xchg
cmpsb
aad
dec
movsb
and
lods
xor
pop
pmulhuw
push
loope
jecxz
jg
sub
push
mov
pop
ret
ret
scas
pop
jb
adcb
pushf
std
sub
and
test
sub
xchg
or
sub
mov
xor
jl
enter
jmp
enter
jmp
push
fmul
mov
and
pop
mov
mov
aam
je
or
nop
jecxz
jns
gs
add
xchg
ds
xchg
jp
int3
jns
loop
ljmp
rclb
push
jbe
orl
push
leave
pop
pop
nop
push
gs
lret
add
scas
push
insl
cmp
cld
pusha
mov
push
cltd
js
push
mov
mov
jmp
cld
lods
inc
inc
icebp
jbe
xchg
jmp
fcmovb
xchg
inc
sub
bound
sbb
mov
pop
lcall
bswap
and
inc
jnp
mov
enter
push
loopne
xchg
das
inc
push
mov
aaa
jp
push
es
cmp
cld
addr16
pop
dec
ret
xor
mov
jae
loopne
sub
jns
clc
clc
ja
clc
mov
pushf
xchg
out
aad
mov
jg
in
cmp
add
ss
push
cmp
sbb
jmp
xor
push
outsl
sub
push
js
outsb
pop
push
inc
pop
fs
inc
popf
pop
cmc
test
xor
and
mov
cmp
cmp
sarl
adc
push
push
clc
push
dec
rdmsr
inc
pop
push
out
lahf
cmp
dec
mov
adc
jne
pop
jg
repnz
into
subb
lret
js
mov
lret
mov
cld
mov
xchg
test
addr16
ret
pushf
addr16
lret
and
push
imul
add
sub
push
ss
mov
stos
int3
cmpl
ja
sti
mov
jae
out
xchg
sbb
lods
out
out
shll
shrb
inc
inc
out
aam
jb
xor
hlt
pop
out
call
sbb
repz
jg
pusha
dec
sbb
es
imul
pushf
mov
lret
inc
and
dec
mov
inc
jp
jne
cmp
insb
fnstcw
test
fistpl
out
cwtl
imul
iret
inc
xor
mull
sbb
add
inc
leave
jge
inc
ret
movsl
scas
push
mov
mov
jecxz
xor
and
push
mov
stos
cld
dec
mov
iret
lret
int3
outsl
xchg
cmpsb
dec
jmp
and
or
jg
mov
mov
cwtl
in
ret
mov
in
roll
xchg
cli
cmp
push
adc
inc
negl
push
dec
idivb
das
negb
adc
ret
lds
lods
jmp
dec
loope
repz
fcmovne
pusha
ret
mov
lock
outsb
xor
xor
call
cmpl
or
xchg
nop
pop
push
xor
shll
fwait
cmp
xlat
mov
cli
push
xor
stos
mov
mov
fmuls
inc
dec
add
pop
sbb
lcall
jg
int
xchg
out
sbb
cwtl
imul
das
xlat
imul
pop
dec
scas
inc
rorb
inc
mov
push
push
inc
sub
xchg
sti
inc
in
pop
lock
dec
push
or
xchg
jp
shll
insl
test
dec
jle
addr16
gs
sti
lahf
push
adc
int
pop
fnsave
cmc
mov
push
cmp
xchg
xor
ja
imul
mov
lea
dec
xchg
dec
enter
mov
pop
mov
popa
mov
inc
ljmp
pop
in
inc
testb
adc
mov
lods
rolb
aaa
pop
fsubrl
cmpl
popl
pop
jns
cmpsl
xor
paddd
add
dec
lock
lcall
mov
in
jp
mov
pop
bound
add
clc
jnp
ret
popa
cli
inc
or
ja
jno
adc
nop
in
pop
dec
rclb
xchg
test
scas
xor
push
mov
roll
ret
loope
jno
cmp
and
and
das
mov
into
sbb
mov
jo
mov
int
cmp
pop
add
dec
cmc
lds
pop
fmuls
push
and
inc
int3
ficoml
or
mov
imul
jno
mov
sub
or
jno
clc
jns
aad
jns
repz
in
sahf
inc
mov
add
mov
fsubl
in
orb
paddusw
decl
ljmp
xchg
insl
jns
push
loope
lret
sti
fdivrl
jnp
cltd
cmp
jmp
fs
jae
dec
push
adc
fsubs
cwtl
pop
leave
testb
ljmp
sbb
sbb
or
inc
pop
mov
shll
pop
jl
cli
out
inc
hlt
xor
push
inc
movsb
lcall
or
pop
push
int
mov
lds
inc
ljmp
mov
dec
gs
rol
cltd
xchg
xor
ljmp
out
test
mov
popf
cmp
mov
inc
in
push
leave
or
scas
add
or
test
dec
sbbb
push
test
lcall
subb
mov
and
pop
daa
lret
lret
xlat
cmp
pop
js
fstpt
xor
xchg
push
icebp
fists
and
sti
mov
or
xchg
call
xor
dec
shrb
jge
scas
or
out
and
mov
mov
push
ucomiss
pop
insl
push
cmp
ljmp
in
aam
sbbl
shrl
jle
adc
xor
xchg
mov
es
xlat
mov
push
jecxz
jge
int3
jb
add
divb
mov
ret
and
mov
dec
mov
push
dec
in
test
cmp
dec
lcall
push
pop
movsl
mov
adc
cmp
xlat
xor
push
lock
notb
jecxz
dec
sub
pop
aam
aad
mov
cmp
mov
iret
add
cmp
add
inc
aam
xor
adc
sti
cwtl
lods
inc
pop
jg
in
pop
es
cmpb
callw
in
dec
mov
and
into
sbb
jge
movsl
out
mov
adc
inc
xlat
icebp
mov
and
mov
arpl
xchg
lods
sbb
dec
call
jge
lret
aam
or
xchg
and
ret
adc
sub
js
lret
adc
repnz
jns
push
iret
pushl
xor
mov
lds
xchg
leave
adc
dec
xchg
mov
divb
inc
jmp
adc
cwtl
in
data16
or
xor
jmp
or
sub
adc
mov
mov
pop
lods
repnz
pop
push
popf
mov
cmp
fcompl
ja
mov
jo
push
push
push
ss
test
and
cmpsl
jge
aaa
je
dec
out
stos
cmp
pop
add
cld
movsl
icebp
sbb
mov
push
xchg
int
outsl
packsswb
dec
sbb
sbbb
pop
push
rorl
arpl
sti
movsb
add
jle
pushw
jecxz
xchg
lods
fidivl
subl
mov
inc
out
mov
push
push
jno
sbb
mov
and
cs
and
ficoms
les
pop
add
adc
ret
sbb
adc
bnd
or
out
jnp
test
xchg
mov
and
mov
mov
mov
push
leave
pop
and
and
iret
fsubrs
ja
push
and
xor
scas
les
sbb
mov
jl
xchg
mov
scas
rcrl
mov
std
out
pusha
pop
jmp
out
popf
mov
adcb
mov
sub
aad
mov
outsl
loopne
sub
mov
xor
js
shrl
push
ljmp
lret
mov
leave
inc
daa
adc
gs
sti
dec
loope
mov
push
pop
xchg
mov
dec
cs
bound
ss
insb
jp
cwtl
or
xchg
lret
mov
cmp
fiaddl
jno
lret
call
mov
sbb
add
or
dec
dec
enter
jmp
cmp
xor
push
in
mov
push
test
mov
inc
push
mov
or
loope
shll
loope
fsubrs
insl
call
lea
bnd
ss
cmp
daa
mov
test
mov
pop
or
mov
mov
jns
push
mov
lods
pusha
push
inc
push
inc
sbb
cltd
pop
fsubl
repnz
inc
pop
push
shl
hlt
inc
sbb
jle
sbb
loope
add
xlat
sbb
cmpsl
sbb
jno
push
bound
push
je
and
add
in
mov
inc
push
test
mov
insl
in
test
xchg
loope
cld
clc
xor
ret
outsb
xlat
repz
inc
mov
mov
scas
xor
dec
imul
cmpsb
inc
add
ds
xor
inc
mov
xchg
xchg
fnstsw
pop
gs
les
inc
add
mov
into
add
cmpsb
jae
dec
test
cmp
mov
js
frstor
jg
ret
dec
sub
repnz
and
fisttpl
sub
test
inc
adc
jns
push
and
cmp
jg
fwait
push
push
repnz
jge
fcmovnb
nop
es
push
enter
cmp
xor
push
or
test
sbb
dec
push
or
lea
push
into
push
es
insb
pop
dec
fsubrs
pusha
std
mov
pushf
rorl
xor
test
xlat
pop
sub
or
cli
daa
notl
jbe
mov
cmp
adc
test
or
jmp
stos
cmp
jns
push
mulb
sub
jge
jno
sub
xor
loopne
cmc
mov
jge
es
or
fs
sbb
mov
mov
mov
lret
mulb
leave
adc
mov
mov
cmp
lcall
out
pop
clc
dec
mov
xchg
dec
push
test
xor
mov
out
mov
cmc
loop
adc
mov
jno
shll
stc
push
daa
push
mov
loope
jp
out
pop
sub
dec
iret
dec
add
ja
std
lfs
outsl
aad
pop
xchg
call
pop
dec
add
cwtl
ret
xor
xor
mov
nop
fistps
fcoms
jl
adc
cmpsb
fistpl
cltd
xor
rol
sahf
push
mov
ret
test
sbb
cld
or
sbb
adc
pop
sahf
lret
jg
push
and
dec
dec
xchg
out
mov
xchg
xor
adcb
mov
pop
mov
mov
dec
dec
jne
enter
gs
addr16
cmp
ret
pop
cmp
test
mov
int3
dec
icebp
jmp
fprem
fcomps
cli
test
inc
push
scas
mov
loope
dec
in
jae
push
adc
jno
les
push
pop
hlt
ss
jecxz
xor
nop
inc
loop
mov
loope
pushf
int3
mov
ret
or
jbe
data16
sub
inc
je
inc
or
mov
ss
pop
sub
repz
data16
cmp
out
and
ljmp
scas
shlb
clc
outsb
popa
leave
lcall
adc
sbb
call
jecxz
mov
push
cmp
dec
lahf
orl
add
inc
or
fdivp
out
mov
loope
and
xor
loope
stos
lcall
push
push
test
lds
aaa
xchg
lock
mov
lods
sub
icebp
cmp
and
rcl
cmp
dec
sbb
int
rorl
cmp
lds
xchg
std
ficoms
sub
xchg
test
aaa
je
or
dec
sbb
fucom
jmp
cmc
xor
dec
sbb
lds
daa
jb
mov
push
dec
jg
test
cmp
or
push
jno
or
jge
loope
jmp
or
cmp
mov
jmp
pushf
fidivs
or
sarl
adc
aas
stos
mov
fbld
mov
mov
push
xor
loopne
adc
push
lcall
jae
test
jecxz
cld
movsb
shr
xchg
sbb
hlt
rcr
data16
nop
pop
push
int3
stos
call
push
mov
push
sub
std
pop
pusha
out
stos
sahf
fs
sti
add
std
inc
iret
das
js
in
or
mov
sbb
test
scas
mov
xchg
mov
repz
enter
and
adc
mov
cmp
xchg
rol
je
icebp
and
pop
iret
rcll
cmpsb
pop
les
pushf
adc
cmpsb
addl
mov
adc
in
cmpsl
decl
jge
in
fdivr
insl
fwait
sbb
sub
scas
pop
aam
mov
les
stos
jp
aam
aas
std
in
gs
or
bound
fmuls
test
pop
cs
out
loope
inc
xchg
push
cld
fld
sub
fnsave
push
cmpsb
mov
push
adc
dec
cmp
jae
stos
popa
outsb
in
ss
inc
jge
mov
fdivl
lods
xor
jno
arpl
xchg
or
and
xor
gs
push
push
mov
mov
add
rcl
imul
mov
dec
ljmp
mov
mov
pop
int3
push
jp
mov
or
cmp
sub
pop
fimull
cli
insb
or
lods
dec
fcompl
push
jp
mov
or
cmp
sub
pop
fimull
cli
insb
or
lods
dec
fcompl
push
dec
in
mov
cmp
sub
pop
fimull
jp
cmc
pushf
in
cmpb
xchg
add
std
lahf
int
mov
popf
aas
insl
das
jno
pop
maxps
outsl
cmp
mov
int
lods
out
mov
aas
outsl
das
jge
insl
minps
outsl
in
pop
or
scas
std
lahf
aad
pushl
xchg
mov
inc
insb
cmp
pop
pop
insb
or
adc
sbb
in
mov
out
fs
adc
std
out
not
dec
pop
or
jg
shl
cmovbe
adc
imul
cmp
xchg
pop
mov
test
push
inc
adc
push
xchg
pop
mov
mov
call
gs
cmp
sbb
jmp
jge
aad
bound
cmp
sub
pop
xchg
inc
aad
sbb
xor
inc
into
pushf
das
loopne
jge
or
mov
or
xchg
sbb
pop
xchg
cs
and
inc
imul
jle
dec
pop
repnz
or
lahf
fisttpll
mov
aas
jne
gs
push
cmove
outsl
sub
dec
jns
mov
std
cli
int3
ljmp
loope
lock
sub
sbb
outsb
sbb
iret
mov
orl
adc
sbb
cmp
sbb
push
sub
lods
lret
cwtl
imulb
mov
aas
insl
das
jge
dec
minps
outsl
cmp
mov
int
lods
out
mov
aas
insl
das
jge
dec
minps
outsl
cmp
mov
in
stos
into
and
xor
jne
sti
pop
push
pop
push
notb
adc
and
pop
lods
mov
ret
adc
clc
cmp
sbb
cmpsl
aas
shll
xor
roll
cmpsl
and
xchg
das
ret
mov
add
dec
pop
nop
fnstenv
xchg
push
jle
and
int
mov
and
dec
mov
or
sbb
ret
adc
cmova
jg
andl
mov
sub
dec
outsb
sarl
xor
in
mov
fdivs
into
out
sti
aam
add
in
popa
lret
repz
adc
fucomip
movsb
movsb
jle
scas
gs
lods
push
test
sbb
mov
pop
cmp
icebp
loop
sbb
imul
popf
into
shrl
nop
lret
loope
or
ja
aaa
notl
push
jbe
movsl
stos
movsl
cltd
imul
inc
or
xor
xchg
mov
call
sbb
xchg
aad
std
repz
and
ja
gs
and
or
ja
inc
jb
inc
sbb
pop
testb
pop
sbb
xor
push
add
jl
ja
pop
push
fdivs
xchg
rorb
inc
ret
test
shll
lahf
add
mov
sti
mov
fimuls
xchg
cmp
pop
cli
jno
fdivrl
out
sbb
push
sub
or
lcall
ret
scas
push
xchg
pop
xchg
adc
mov
repnz
enter
mov
jmp
mov
jge
mov
sub
imul
xlat
lock
pop
clc
in
push
int3
testl
cmpsl
jle
sub
into
or
xchg
sbb
sarb
mov
repz
pop
pusha
jbe
mov
add
lods
stos
sti
xchg
jno
fbld
out
addr16
es
and
mov
test
aam
fsubrs
inc
cmp
jne
cmpsb
iret
or
dec
jb
test
scas
inc
je
fisubrs
test
mov
push
mov
in
scas
inc
sahf
rorl
xor
inc
cmp
pop
push
mov
scas
push
mov
add
push
mov
and
in
mov
mov
pop
cmpsb
pusha
test
mov
cmp
hlt
sbb
loope
je
mov
adc
aas
cli
push
in
or
iret
leave
add
sbb
call
arpl
dec
sbb
xchg
inc
movsl
adc
or
cli
aam
mov
insb
xor
xor
movsb
sub
xchg
inc
adc
in
repz
jnp
adc
nop
les
outsb
lahf
and
inc
mov
sub
push
adc
insl
push
sub
leave
imulb
push
push
push
jge
mov
sub
pop
mov
add
ja
inc
add
repz
insb
mov
jp
xor
inc
inc
mov
xchg
xorl
xchg
push
dec
mov
pop
fimuls
xchg
lock
repz
loop
fmull
and
adc
outsl
adc
les
sbb
cwtl
gs
insl
daa
out
and
pop
out
jns
add
sarb
xor
std
mov
roll
xchg
add
jp
adc
pop
test
mov
call
cwtl
rol
dec
push
mov
or
cmpsl
cmp
or
sbb
repz
insl
fnstenv
jnp
sbb
cld
cli
xor
repnz
scas
add
or
jmp
adc
or
divl
popf
daa
rorb
insb
xor
xor
add
gs
dec
leave
dec
insl
std
push
pop
xchg
fcoml
sbb
mov
je
ja
ja
cmp
jle
rcrl
mov
pop
shl
sbb
into
jnp
movsl
inc
out
sti
shll
call
mov
xor
faddp
xor
pop
mov
jo
xor
inc
adc
fstl
jne
cmp
mov
fmull
in
repz
inc
setge
adc
movsl
movsb
mov
pop
sbb
sahf
fs
pop
mov
inc
sbb
dec
aas
notl
fwait
sarl
outsl
mov
mov
add
loopne
sub
pop
mov
test
xchg
std
dec
and
lcall
cmc
iret
test
inc
test
xor
scas
pop
pushw
sbb
mov
daa
pop
xchg
pop
jo
sbb
xchg
push
push
adc
cmp
add
adc
adc
inc
sbb
mov
mov
jmp
add
mov
inc
and
in
scas
jnp
ret
cmpl
lods
adc
stos
sbbb
cld
leave
cli
or
jmp
in
lahf
lds
rorb
adc
dec
mov
fsubrs
in
aad
shlb
jle
subb
pop
jge
mov
stos
mov
and
push
hlt
fistpll
cmp
fsubrp
movsl
jae
daa
jmp
jbe
repz
mov
icebp
data16
push
je
je
jbe
cwtl
mov
ror
pop
inc
mov
fwait
jp
jne
sub
mov
sub
aas
mov
mov
sub
jecxz
mov
jle
cld
pop
out
test
pop
rol
das
add
insb
in
outsb
xor
frstor
push
into
jg
unpckhps
in
shll
sti
xchg
dec
mov
mov
mov
gs
shlb
xchg
filds
jp
jge
mov
mov
loope
mov
or
inc
adc
data16
push
push
inc
xchg
out
lret
rorl
sbb
jae
xorb
adc
mov
bound
pushf
push
arpl
cmp
xchg
mov
inc
pusha
pop
add
pop
arpl
iret
xor
or
jae
dec
aaa
lds
repz
or
inc
in
or
call
push
add
xchg
mov
test
clc
mov
cmpb
in
push
inc
and
mov
mov
mov
mov
add
or
cli
pop
call
mov
add
rcll
imul
pusha
loope
or
jge
pop
xor
push
stc
fildl
cmp
femms
je
jbe
pop
rcrb
nop
insertq
jns
jle
in
push
repz
sbb
xchg
das
data16
idivl
frstor
adc
and
xor
ret
rcrl
cmp
ja
fs
test
push
mov
subb
gs
divb
pushf
cmp
ds
fsubrs
add
ret
pop
xchg
push
inc
out
pop
dec
add
xchg
cs
or
lods
jecxz
mov
ljmp
insb
cmp
sub
xchg
mov
ss
loopne
jge
lea
ljmp
cs
sti
pop
xor
mov
mov
imul
scas
xor
add
popa
xlat
xchg
sub
les
bound
xchg
iret
sbb
jbe
add
adc
je
das
or
fiaddl
sub
adcb
sub
clc
les
cmc
lock
das
pop
mov
lahf
xchg
data16
push
xor
cwtl
imul
pop
cmp
mov
loope
repz
dec
shrb
mov
jo
mov
repnz
repz
inc
xor
data16
mov
dec
dec
sub
adc
lds
leave
in
cmp
pop
jnp
js
pop
pop
xchg
aas
int
scas
lods
sti
mov
sbb
sub
mov
mov
jecxz
fsts
aaa
mov
fsubs
and
aam
ror
push
pushf
fmuls
adc
push
popf
outsl
push
and
push
push
xchg
popa
jo
gs
out
test
lock
sti
stos
and
adc
push
jge
popf
test
data16
and
push
inc
push
and
lahf
xchg
btr
inc
mov
lahf
iret
ficomps
insb
inc
lock
mov
ret
sub
into
dec
add
fdivs
cmpsl
push
mov
icebp
mov
cli
add
mov
sub
rclb
int3
add
cmp
mov
je
pop
xor
jbe
lea
dec
out
in
pop
enter
rorl
je
std
mov
cmp
mul
test
jbe
jnp
inc
push
mov
mov
pop
cmpb
test
ds
inc
and
dec
jle
lock
mov
push
jmp
mov
xchg
pusha
sbb
pop
ret
xchg
jle
mov
xor
sub
cmpsb
ret
dec
add
mov
push
pop
in
in
lret
imul
sbb
popf
adc
loop
mov
es
mov
sub
outsl
mov
flds
fmull
arpl
shl
out
jb
push
push
and
scas
out
fidivs
aam
dec
sbbb
cli
mov
aaa
cmp
sbb
fwait
inc
mov
dec
cmp
adc
xorb
mov
sub
aad
and
roll
jmp
loope
out
dec
add
adc
jo
push
dec
dec
shrl
inc
insl
rclb
sub
lcall
int
fisubl
cmp
ja
lds
jbe
enter
cmc
in
mov
jno
rcrl
push
sbb
fucom
mov
mov
push
fcompl
mov
inc
cmp
lahf
arpl
jo
sbb
in
ret
rol
out
mov
pop
xor
mov
mov
out
add
pop
stos
or
push
xlat
push
jl
bound
es
out
pop
adc
pop
ljmp
cmpsb
xor
mov
or
pop
bound
les
test
std
adc
adc
fldt
fmuls
cmpsl
and
ret
sbb
jl
rolb
dec
sub
roll
inc
sub
fs
push
ds
or
arpl
nop
mov
enter
pop
sahf
loopne
xchg
xchg
push
jl
mov
sub
lret
repz
dec
adc
inc
dec
and
fldl
scas
das
dec
cmpsl
inc
imul
in
aad
jmp
bndstx
mov
jb
xor
mov
call
sbb
xor
jb
adc
pop
add
xchg
outsb
int
push
paddusw
add
sbb
inc
out
negb
xchg
mov
cmp
addr16
les
wbinvd
add
pusha
mov
or
imull
push
jl
ja
xlat
pop
dec
ss
pop
in
pop
divb
cmp
les
lret
addb
inc
lret
cwtl
shll
pop
ljmp
aaa
inc
aas
test
js
ja
pop
xor
mov
sub
mov
pop
add
mov
adc
pop
xchg
sub
int3
jmp
dec
jo
mov
fimull
insb
adc
scas
sti
rolb
adc
aaa
or
jne
dec
and
jmp
js
int3
lods
leave
scas
push
pushf
es
mov
mov
dec
sahf
xchg
lea
pop
into
cli
add
scas
or
xor
adc
out
sbb
pop
jae
mov
rcrl
fcomps
mov
lods
pop
mov
es
aad
cld
adc
mov
fsub
inc
cs
outsb
int
pop
repnz
into
adc
shlb
xor
sub
mov
lods
inc
cmpsb
pusha
mov
dec
and
out
inc
jp
sahf
clc
in
mov
lcall
or
inc
cld
mov
mov
push
xchg
movl
clc
adc
jmp
mov
es
shrb
sti
not
and
icebp
pop
xor
pavgb
xor
sub
push
push
jae
roll
push
stos
add
sub
push
mov
test
xor
or
jb
push
or
sub
fdivrl
pusha
and
mov
jbe
int
sub
inc
mov
dec
add
inc
movsl
pop
nop
xchg
jnp
sbb
mov
inc
add
lret
adc
rclb
jge
cmp
das
add
fwait
dec
and
xchg
ja
movsb
sbb
xchg
xchg
aam
dec
mov
or
add
sahf
push
fsubl
or
rcrb
imul
mov
shrb
pop
pop
addr16
out
cld
sbb
inc
adc
sahf
sub
shl
aaa
lret
aam
in
sbb
mov
iret
lods
jns
or
push
mov
jg
pop
xor
jecxz
add
mov
imul
mov
push
dec
pop
loopne
fisttps
clc
lcall
das
sbb
sbb
lods
push
mov
push
xlat
cmpsb
cld
cli
jp
dec
stos
out
out
jbe
add
int3
jb
sbb
xor
enter
mov
add
xchg
subl
inc
out
enter
push
mov
xchg
xor
adc
shl
pop
roll
into
in
dec
leave
jns
pop
js
rcll
imul
sbb
adc
fidivrl
ds
mov
sbb
inc
out
cmp
fdivs
ja
je
lahf
in
test
mov
mov
daa
ret
sbb
mov
dec
jb
mov
xchg
jecxz
in
mov
cli
sbb
and
mov
pop
add
jecxz
add
addb
in
mov
les
or
sbb
out
ds
pusha
push
outsb
push
jbe
pop
in
xchg
js
push
pop
rolb
stc
cmp
call
xchg
sbb
cmp
inc
leave
fwait
xor
fld
xchg
mov
sbb
push
cmc
mov
jg
prefetch
push
cmp
or
into
mov
push
out
mov
cwtl
cs
mov
cmp
mov
sub
fnstenv
mov
sbb
insl
loopne
addl
push
mov
xchg
mov
lea
in
out
jb
inc
mov
or
outsl
loopne
mov
inc
inc
cli
mov
fcomip
leave
cs
and
or
adc
dec
das
jno
scas
shr
fistl
ja
ljmp
cmp
jbe
loope
sub
dec
xchg
pop
test
lods
or
aam
pop
ja
cmpb
sti
push
insb
sub
inc
sub
insl
sbb
adc
ffree
jae
stos
mov
test
fildll
popf
cmp
jne
test
sub
and
mov
lea
mov
addr16
icebp
mov
and
pop
idivl
in
rclb
ja
sub
loop
jno
out
stos
cmp
ret
xlat
incb
insb
inc
int
cmp
mov
mov
out
mov
cwtl
ja
mov
call
mov
jl
pop
pop
lret
aaa
ljmp
mov
lahf
cmp
cli
lds
mov
cmp
sbb
incl
pop
std
push
jg
xor
add
mov
into
enter
mov
fnstenv
and
jb
or
cmpsl
xchg
mov
sub
sbb
enter
filds
push
add
sbb
pop
mov
push
jmp
fnstsw
negl
adc
call
sti
loop
lock
ljmp
hlt
sahf
mov
scas
imul
fldl
add
lret
out
inc
loopne
arpl
add
and
mov
mov
xchg
mov
xchg
pop
sbb
ror
xor
int3
inc
xor
mov
imul
mov
adc
push
cmp
add
xor
pop
inc
add
sbb
fistps
pop
fisubl
mov
push
popf
push
repz
adc
ja
movsb
push
insb
addr16
in
stc
lods
test
pop
mov
jg
mov
push
xlat
cmp
xor
ror
cmc
aam
cmp
loope
jecxz
push
loopne
mov
lods
dec
gs
aas
cmpsb
jae
addps
sbb
aas
cltd
push
pushf
sub
xchg
jo
mov
daa
jp
movsb
add
insl
mov
mov
cwtl
sti
pop
test
orl
cmp
mov
ss
clc
add
je
dec
mov
inc
add
xchg
push
flds
out
mov
into
and
rcrl
mov
mov
out
daa
or
mov
xor
dec
pop
test
cmp
sub
push
negl
pop
fcmovnb
outsl
les
cmpsb
test
jg
jle
shll
notl
scas
ficompl
xor
mov
cwtl
test
xchg
fsub
dec
leave
inc
inc
and
lahf
mov
call
mov
mov
mov
sbb
stos
stos
push
cmp
push
mov
cmp
and
cmpsb
and
mov
jg
cltd
mov
or
cmpsl
push
fcoml
and
cmp
sahf
cmp
cmp
and
sub
or
sbb
scas
mov
jno
les
jg
sub
dec
jge
push
int3
lea
lock
out
push
enter
jns
pop
and
test
fs
pop
push
insb
rcl
jnp
repnz
test
lret
jp
cmpsb
pop
dec
add
mov
xor
jbe
inc
loope
rorl
pop
gs
push
lods
test
in
cwtl
mov
mov
push
lret
sahf
out
or
or
adc
or
outsb
pop
sub
pop
ds
adc
dec
push
dec
sub
aad
sub
movsb
or
pop
mov
mov
popa
xlat
jne
mov
xor
add
and
icebp
call
jae
jmp
data16
inc
xchg
dec
pop
xchg
es
dec
mov
pop
mov
sub
fs
das
mov
pop
mov
sahf
lahf
movsb
rorb
pop
cmc
mov
adc
ss
add
add
cmc
mov
jbe
and
jae
mov
aas
xchg
mov
js
cli
mov
dec
jg
jns
add
es
adc
xchg
dec
stc
add
popa
orl
shrl
pushf
add
in
fisttpll
inc
pop
stc
addr16
inc
xlat
cmp
sets
es
push
xchg
cmp
xchg
xchg
add
add
jnp
aaa
ficoml
xchg
stos
mov
sbb
mov
ror
les
sti
out
mov
mov
cmpsb
les
mov
dec
jecxz
dec
out
mov
pop
ds
or
test
imul
adc
jbe
jg
outsb
xchg
lahf
mov
sbb
jp
adc
clc
ret
cmc
jmp
or
lret
adc
mov
push
in
and
push
mov
dec
adc
pop
sbb
pop
test
popf
xlat
enter
mov
or
lods
stos
push
leave
cmpsb
cmpsl
jmp
test
stos
cmp
dec
mov
test
shll
xor
pop
mov
xchg
imul
cvtpi2ps
xor
pop
fstps
push
dec
adc
mov
movsl
std
je
pop
dec
xchg
adc
test
addr16
sub
jmp
xchg
out
sub
xor
push
adc
dec
sub
enter
xchg
mov
pop
push
out
jle
rcll
jle
xor
in
pop
pop
pop
mov
inc
mov
push
icebp
mov
lock
cltd
push
push
shl
ss
aam
addr16
pop
adc
xor
jno
data16
into
cwtl
dec
dec
xchg
daa
pop
inc
andl
inc
popf
test
mov
or
add
ret
in
xlat
mov
and
dec
mov
jbe
or
and
xor
int
into
movsb
ljmp
pop
add
sahf
vpextrw
lds
xor
pop
jp
pop
mov
push
add
jge
inc
adcb
arpl
and
push
sbbl
or
sub
testl
add
aas
pop
sbb
clc
jno
mov
sbb
pop
ljmp
insl
lock
xor
jle
inc
push
pop
xor
xlat
nop
jmp
test
stos
fdivrp
xchg
inc
cltd
cld
loope
andl
lds
and
mov
lcall
xorl
out
mov
pushf
jae
jle
ss
jb
xor
jnp
adc
mov
add
gs
repnz
call
add
dec
ds
cmp
add
cmp
dec
mov
push
push
cmp
loop
xchg
clc
scas
mov
mov
and
jb
bswap
cmp
shlb
in
pop
ret
xchg
fistps
outsl
sub
xor
pop
xor
mov
stc
sbb
jg
push
dec
xor
icebp
rolb
sbb
jne
push
mov
es
insl
sub
insb
dec
loope
xchg
outsl
addr16
std
mov
rclb
test
jg
bnd
push
daa
dec
les
xor
push
lret
std
xor
in
push
andb
lods
fsub
xchg
idiv
aas
lds
sbb
or
mov
loop
dec
dec
cmp
push
inc
mov
mov
cmp
std
sub
lods
out
mov
aas
insl
das
jge
dec
minps
outsl
cmp
mov
int
lods
out
mov
aas
insl
das
jge
dec
minps
outsl
cmp
mov
int
lods
out
mov
aas
insl
das
jge
dec
subps
outsl
cmp
mov
int
lods
out
mov
aas
insl
das
xlat
mov
cvtpi2ps
movsl
out
mov
mov
outsb
mov
lods
jl
push
mov
fidivrs
iret
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
stc
push
jmp
fidivrs
into
sub
sbb
or
mov
pop
scas
dec
pop
mov
outsb
mov
stc
push
jmp
fiadds
in
jne
imul
or
add
add
aas
test
xor
and
das
pop
fidivrl
mov
shrb
jmp
loope
push
push
rcl
shll
dec
dec
add
adc
popa
mov
and
jns
sbb
xchg
scas
jnp
mov
jo
fdivrp
lcall
jns
pop
dec
test
cwtl
outsb
popf
cmp
sbb
mov
or
add
test
popa
sub
cmp
and
push
sahf
dec
xchg
je
stc
push
push
mov
jl
sub
xchg
cmp
mov
sub
pop
scas
sbb
cwtl
in
fdivl
cld
ljmp
cmp
sbb
add
xchg
mov
outsb
mov
stc
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
nop
cmp
filds
iret
push
xchg
jl
pop
mov
stos
inc
ja
addr16
adc
adc
fucomi
sub
clc
sub
sbb
dec
movl
lahf
inc
cld
dec
out
gs
push
loopne
shrb
daa
cmp
dec
fstl
in
add
push
xchg
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
stc
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
dec
pop
mov
inc
pop
loopne
or
aad
fnstenv
std
inc
xlat
dec
sbb
cmp
movsl
out
xor
mov
stos
xchg
shr
push
imul
cmpsl
testl
add
cld
test
int
int
mov
inc
into
xor
or
mov
pop
xor
fstpl
arpl
loope
xor
push
push
mov
fisttps
into
jl
aad
pop
ret
xor
shr
sbb
sbbl
add
push
js
mov
insl
out
cs
adc
mov
or
in
or
cs
mov
dec
ja
ret
dec
popl
xlat
xchg
and
push
pop
xchg
sub
jns
cmp
mov
jg
push
sub
and
push
rolb
movsb
inc
fs
fnstsw
and
sbb
mov
stos
jmp
imul
cmp
fisubrl
rclb
icebp
cld
pop
xchg
outsb
lods
and
cltd
nop
xchg
cmp
inc
shrb
mov
inc
push
in
out
cmp
sbb
push
adc
test
adc
gs
mov
pop
dec
xor
cmp
pushf
mull
sbb
push
bound
mov
lods
inc
and
push
mov
bound
cld
daa
xor
dec
cmpsb
or
pop
les
lret
mov
outsl
or
movsb
jo
aaa
xor
mov
adc
mov
cmp
mov
inc
into
jns
dec
lcall
cmc
sbb
out
gs
or
lods
clc
sub
mov
iret
insb
out
stos
sbbb
shl
mov
arpl
lcall
mov
dec
sub
rclb
sahf
jae
scas
push
stc
push
dec
movsb
aam
jae
push
mov
in
rcl
xor
arpl
xchg
cwtl
mov
sbb
or
xor
scas
jo
ja
scas
stc
movsb
outsb
in
aam
dec
insb
add
cmp
outsb
pop
sahf
movsl
insb
sub
pop
fimuls
mov
icebp
sub
adc
call
jbe
jo
movsb
push
cltd
addl
insl
in
aad
mov
mov
mov
jo
jecxz
mov
shlb
inc
cmpsb
imul
imul
push
shlb
es
jnp
jne
xor
movsb
xor
mov
lock
inc
mov
fldenv
dec
std
in
jo
sldt
idiv
jb
add
pushf
cwtl
and
in
test
fisttpll
mov
enter
jnp
cld
ds
mov
call
jo
enter
fisubrl
mov
pushw
shl
fcomps
shlb
daa
adc
push
cmp
pop
shl
test
push
pusha
xchg
fcmove
cmpsb
sbb
insb
xor
pusha
mov
xchg
std
adcl
push
push
mov
ja
lcall
imul
icebp
and
rcll
dec
mov
iret
sti
jp
inc
addr16
xchg
jecxz
test
xchg
testb
popa
inc
aas
push
aas
loop
loop
inc
sahf
or
sub
mov
cmc
cwtl
adc
jmp
inc
mov
aam
lods
add
sub
mov
add
and
add
aad
cli
in
push
pop
mov
xchg
jl
or
pushf
test
loop
rcr
out
sbb
mov
adc
jle
mov
repnz
xor
cmp
pop
inc
divl
cltd
lods
xor
add
es
fwait
shlb
push
sub
pop
stos
mov
cmp
es
insb
lahf
addl
push
lret
adc
cltd
jb
push
popa
lods
mov
cmpl
pop
or
movb
int
and
xchg
jp
testb
mov
mov
add
inc
fs
lods
lcall
jmp
mov
movsl
mov
jns
stos
addr16
sbb
shll
dec
loope
sub
loopne
test
add
mov
adc
jp
and
add
rcrl
adc
mov
daa
pop
pop
icebp
int3
in
mov
lods
mov
arpl
stc
add
xchg
push
add
addr16
es
pop
xchg
push
jmp
das
push
imul
loopne
hlt
pop
mov
lods
cmp
mov
or
fcmovnu
jo
stc
gs
push
je
ds
mov
mov
xchg
data16
dec
adc
cli
mov
jb
sub
mov
xchg
dec
jb
jno
rorl
sbb
adc
test
mov
adc
mov
sub
cmpsl
lahf
adc
mov
cmpl
idivb
cmc
or
std
call
idivl
lcall
mov
cmp
adc
mov
stos
mov
dec
xor
lcall
jp
push
sub
fcompl
je
fildll
adc
bound
nop
jmp
stos
lret
and
adc
lret
aad
aam
dec
xor
pop
test
inc
and
mov
jae
inc
cltd
mov
imul
ljmp
adc
mov
mov
push
std
push
xor
jbe
sbb
mov
inc
or
out
mov
push
xor
inc
idivb
mov
les
rcrl
test
es
cmp
cltd
jb
adc
inc
sub
cmpsb
out
mov
or
pop
add
outsl
sbb
xor
dec
push
aam
testl
mov
sbb
push
dec
push
hlt
pusha
scas
pop
test
or
cld
outsb
cmp
inc
push
push
adc
loop
jno
xchg
in
or
mov
lods
inc
loop
adc
ss
mov
sbb
xor
clc
bound
xor
adc
add
add
out
push
popw
xor
rorl
out
outsb
subl
mov
jmp
cli
ret
stos
lods
out
or
fsubp
int
mov
mov
je
stos
jae
sti
incb
add
popa
inc
push
lcall
test
fistl
cmp
insb
jno
test
mov
mov
test
adc
lret
or
add
das
dec
pusha
cmp
add
inc
mov
push
jb
lret
test
aam
out
mov
clc
inc
pushl
pop
cltd
add
in
mov
mov
xchg
cmpsb
les
imul
jmp
xor
pop
pusha
mov
lahf
mov
daa
pop
jne
mov
or
sbb
pop
rolb
sub
push
movsl
push
bound
sahf
xchg
shlb
dec
jno
fcmovu
add
aam
in
aaa
cltd
pusha
dec
jno
adc
xor
add
ret
and
jecxz
mov
loopne
jge
pop
fcoms
mov
fxch
cltd
lcall
je
pop
or
dec
sbb
add
or
sub
lods
jge
fidivrl
test
cmp
imul
aad
mov
xor
pushf
cmc
insl
and
stos
mov
mov
jp
xlat
mov
out
xor
jns
dec
cltd
jmp
jg
clc
or
push
jbe
lods
sbb
das
mov
notl
cli
loop,pt
dec
lret
icebp
cmp
cmp
incl
xlat
std
out
push
hlt
dec
mov
popa
xor
repz
cmp
mov
test
test
inc
scas
out
cmpsb
daa
sbb
rorl
pusha
cmp
aam
jge
push
xchg
sub
pop
pop
inc
std
fisttps
mov
iret
dec
rcrb
clc
pop
push
subb
add
adc
inc
addr16
xchg
insl
add
jno
icebp
sub
stos
leave
push
cmpl
xorb
inc
and
arpl
in
mov
jge
testl
mov
mov
sub
inc
and
sub
inc
sar
mov
shrl
jle
xor
pop
mov
sahf
adc
pop
sub
popa
or
cmc
sbb
data16
repnz
dec
jnp
bound
cwtl
jb
mov
rolb
mov
test
stc
push
xor
dec
mov
cwtl
dec
cmc
orl
xchg
fs
mov
add
sti
es
js
fidivrs
mov
shlb
adcl
mov
mov
sub
push
inc
insb
sbb
push
in
and
dec
adc
rep
inc
sbb
mov
mov
rorl
inc
in
xor
xchg
xlat
lock
leave
rolb
push
test
add
and
fstpt
mov
leave
push
mov
insl
nop
xor
loopne
adc
loope
jne
dec
xor
pop
insl
aas
push
cmpb
xor
addr16
in
jecxz
inc
lea
sbb
loope
add
test
jmp
or
push
jg
fwait
dec
hlt
jmp
mov
lds
imul
fimull
sbb
push
jmp
adc
and
push
adc
xchg
xchg
xor
mov
xchg
pop
pop
cmp
imul
adc
inc
sbb
mov
pop
push
or
jbe
in
xchg
xor
mov
or
out
push
adc
arpl
dec
xchg
or
jbe
mov
dec
inc
orb
jecxz
jne
mov
pop
loope
sub
or
inc
in
add
inc
push
into
in
xchg
lret
lods
stos
mov
mov
jp
cmpsb
stos
dec
out
push
stos
repz
pushf
or
popa
shlb
enter
stos
adc
add
mov
and
push
jmp
or
leave
imul
cmpsl
mov
xchg
cmp
adc
sbb
or
pop
cmp
sbb
popl
push
xchg
or
xchg
adcb
fidivs
js
pop
ror
lret
push
sub
and
push
mov
fwait
mov
inc
mov
dec
mov
pop
push
or
xchg
repz
cmp
idiv
pop
das
mov
ss
and
xchg
pop
sbb
add
inc
adc
cmpsb
push
icebp
add
sarl
enter
and
mov
jb
pop
mov
inc
mov
or
or
xchg
std
mov
gs
mov
iret
cmp
jns
sbb
inc
sub
sbb
jnp
adc
dec
pop
sbb
mov
jae
rcll
jns
push
sbb
cmp
jae
out
cmp
pop
test
test
into
into
jbe
insl
aas
and
sahf
in
mov
inc
loope
push
mov
jne
mov
xchg
pop
stos
stos
jmp
cltd
mov
lahf
sahf
mov
stos
xchg
in
rcl
scas
pop
or
addr16
push
xchg
stos
aas
bound
mov
xchg
roll
pop
mov
xchg
fsts
mov
popa
popa
add
jbe
or
inc
stc
clc
std
mov
sub
lea
jnp
loopne
xor
test
popa
test
jp
dec
std
test
sub
adc
xlat
fucomi
mov
arpl
mov
xchg
es
cmp
scas
test
xchg
add
int
cmp
in
sub
xchg
std
or
mov
cmp
sarl
inc
lret
jecxz
mov
xor
dec
sahf
mov
push
push
push
jmpw
lods
aaa
dec
mov
lock
aad
cwtl
adc
int
sub
add
mov
mov
inc
or
stc
push
outsl
mov
sahf
sub
ja
aad
mov
call
xchg
push
fcomp
ret
adc
outsl
insl
xor
test
or
push
mov
and
cmc
mov
scas
inc
leave
inc
cli
icebp
fmull
cli
mov
out
xchg
xor
push
and
mov
gs
xchg
inc
jecxz
repz
and
loope
push
mov
xor
mov
sbb
test
cmp
sar
cmp
and
mov
popa
cmpsb
lods
sbb
jae
aaa
lds
pop
cmpsb
fcmove
mov
or
cld
enter
or
ja
jmp
push
mov
pop
jns
aas
test
mov
mov
add
popf
sbbl
mov
cmpsl
and
mov
aam
sbb
xchg
leave
xchg
gs
fbstp
scas
popa
out
lock
jmp
clc
negl
repnz
or
add
cmp
lret
stc
jnp
icebp
push
mov
orl
stos
xchg
mulb
imul
sub
and
sub
sub
shrb
cmpsb
or
out
fptan
into
mov
mov
ds
inc
xchg
push
loopne
mov
sbb
jae
push
jg
je
and
cmp
inc
mull
les
fidivrl
test
fadd
dec
or
fucompp
xor
in
testb
rcrl
and
in
xorl
jnp
mov
mov
fidivrs
xor
xchg
mov
sub
stos
xchg
mov
jb
scas
dec
jae
pop
nop
push
cwtl
repz
pushf
jae
clc
stos
lods
dec
into
sub
out
mov
mov
aas
in
push
jb
inc
mov
idivb
mov
js
lret
sub
push
jecxz
lea
mov
sarl
test
ljmp
test
daa
or
add
dec
jae
aas
sahf
xor
jnp
xchg
cs
lods
push
mov
push
adc
sbb
or
dec
ret
mov
mov
frstor
sub
fwait
cmpsl
pop
mov
test
mov
pusha
enter
gs
das
das
rorb
push
mov
mov
mov
adc
sub
mov
and
xchg
jnp
in
mov
mov
mov
push
inc
lcall
lahf
fs
enter
and
popa
jmp
push
jp
bound
call
push
rcrb
cmp
mov
jmp
out
pop
and
mov
cmp
outsl
daa
aaa
xchg
xchg
lock
jno
sub
mov
pushf
mov
sub
xchg
fld
shlb
mov
mov
cmp
das
cmp
cwtl
sbb
les
lock
adc
aam
xchg
cmp
scas
das
lods
aam
push
jno
enter
pusha
lds
push
xor
cli
fistps
movl
cmp
or
jmp
dec
outsb
mov
jns
inc
pop
xlat
xchg
rolb
cmc
and
int
mov
add
add
lahf
dec
jecxz
aad
mov
mov
and
mov
jl
jmp
sub
jne
popf
or
push
testb
lds
sbb
lods
xor
dec
aas
outsl
in
sub
bound
xor
sbb
pop
xor
lret
cmp
add
sub
dec
adc
loop,pn
idivb
out
adc
xchg
out
mov
mov
jle
push
ret
test
jl
leave
add
lcall
push
daa
adc
loope
inc
dec
test
dec
cs
xor
pushf
pop
push
pop
or
addr16
mov
mov
cwtl
cmpsb
push
shlb
mov
das
mov
daa
fwait
jbe
xlat
aas
sti
imul
xor
sar
inc
sbb
push
mov
xor
shl
icebp
xchg
icebp
inc
push
mov
pop
pusha
movsb
mov
mov
fcompl
shlb
out
jns
xchg
cs
pop
pop
pop
pop
int
cmovb
scas
daa
cmc
or
test
push
pop
or
jnp
push
xchg
addr16
jns
shll
inc
shlb
dec
inc
sub
pop
pop
add
mov
frstor
push
pusha
call
mov
sti
mov
sub
jns
cmp
lea
mov
add
mov
movsb
in
rorb
mov
push
xor
rcrb
enter
jae
mov
arpl
fildl
xchg
jmp
repz
mov
and
lea
mov
pop
jmp
test
lcall
pop
ja
loopne
xchg
pop
scas
aam
icebp
xor
sbb
sbb
lahf
jno
pop
jle
aas
push
shrl
mov
out
shll
shll
sub
sub
ja
or
jnp
sbb
dec
inc
sbb
cmc
pop
lock
adc
hlt
pop
sub
add
outsl
xor
int
popf
jge
ds
sbbb
mov
jne
test
dec
dec
push
pop
in
mov
int3
sub
inc
push
lret
lods
xchg
scas
jae
inc
push
dec
sub
sbb
cmp
movsl
fsubl
shr
jge
mov
repz
jae
jl
cmpsl
insb
jmp
outsb
or
xor
in
sahf
jl
cmp
shl
and
pushf
mull
lods
movsb
stos
icebp
cltd
es
or
inc
cltd
pushf
jo
push
sub
pop
xchg
cld
jbe
and
jp
dec
xchg
mov
es
xor
mov
pop
fldenv
pop
push
mov
movsb
movsb
dec
sti
lods
lahf
jecxz
fnstsw
fmuls
inc
fsts
repnz
out
pop
xchg
adc
sysenter
hlt
add
outsl
aam
dec
outsl
add
stc
jb
lods
ret
js
repnz
ljmp
fcoms
cld
jge
lahf
jnp
aaa
mov
insb
add
into
lea
sti
cli
add
test
cmp
out
enter
loop
mov
mov
inc
cmp
loope
jg
xchg
cmp
repnz
je
dec
imul
push
clc
mov
inc
icebp
xchg
dec
mov
rorl
scas
ljmp
add
enter
cmp
repnz
mov
or
out
push
xor
rorl
pop
adc
jge
aam
cli
test
xchg
sub
add
mov
inc
mov
ret
lea
sarl
mov
rorl
in
push
jnp
repz
in
cwtl
jnp
xchg
mov
ss
jmp
mov
pop
ret
xchg
adc
int
out
les
xor
pop
stos
enter
mov
and
shll
mov
sbb
or
push
jb
xchg
int3
dec
adc
or
dec
out
in
jbe
lods
jns
repz
gs
or
pop
dec
cmpsb
dec
pop
add
out
pop
cmp
mov
jae
ret
dec
ss
push
sbb
insl
incl
pop
fadds
inc
mov
scas
inc
mov
or
sbb
xchg
scas
mov
mov
mov
jne
in
cmpb
xchg
mov
sti
jmp
mov
pop
lods
push
stc
fbld
cs
mov
in
packssdw
popa
imul
lret
push
sbb
cmpsb
adc
lock
push
sub
xor
sbb
out
push
inc
movsb
xor
dec
dec
pop
stos
push
pop
mov
mov
or
nop
mov
sbb
orl
scas
and
aas
test
cld
shlb
add
divb
xchg
inc
loope
push
nop
xchg
add
xlat
xchg
outsl
xchg
xor
ljmp
dec
add
mov
and
ffreep
pop
sub
je
cmp
push
xor
inc
jmp
dec
hlt
les
cmp
or
lret
xor
stos
rol
sub
dec
outsl
insb
sub
ret
in
imul
into
sbb
xlat
scas
xchg
movsb
out
divl
fbld
mov
mov
jae
icebp
pop
inc
cmp
pop
cmp
hlt
lea
xor
xchg
push
jg
xchg
mov
in
fmuls
scas
dec
out
dec
inc
sti
pop
push
aad
push
mov
mov
xor
dec
aaa
mov
dec
pop
bound
mov
ret
mov
fadds
hlt
lds
and
loope
xor
jo
ss
paddusb
nop
fwait
xor
decl
popf
gs
aad
aad
lods
arpl
xchg
mov
adc
push
decb
adc
fmull
jl
pop
dec
cmp
je
call
enter
fstl
fidivrs
int3
hlt
scas
cmp
aaa
clc
fstpl
jg
push
fisttpll
fiadds
sub
and
imul
add
push
popa
mov
repz
test
movl
xor
aad
adc
sub
sub
lods
jl
pusha
mov
repnz
jo
cmc
mov
jmp
aas
mov
cmpsb
xor
insl
adc
dec
mov
daa
ret
sub
pop
adc
xor
mov
mov
rorl
jae
imul
es
lcall
pushf
addr16
pushf
cmp
push
call
fdivrl
ss
jl
pop
or
xor
add
cmp
lock
fcoms
push
scas
dec
adc
mov
cwtl
imul
mov
push
cmp
push
mov
add
out
test
push
stc
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
stc
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
fsubrs
sub
sbb
or
pop
scas
dec
pop
mov
outsb
lea
stc
push
imul
into
adcl
out
icebp
xchg
into
cmpsb
fidivs
fisubl
lret
das
fdivrs
mov
xchg
mov
sub
out
negl
daa
lret
inc
stos
push
lcall
idivl
cmpsl
dec
mov
sub
sbb
sbb
dec
daa
adc
movsb
inc
lret
mov
das
dec
xchg
xor
das
mov
sbbb
xchg
push
notl
mov
mov
mov
pop
lahf
add
add
pop
push
out
push
xor
pop
inc
dec
enter
test
popa
pop
aaa
mov
push
lds
cmc
cmpsb
add
scas
add
jae
jmp
xchg
daa
mov
push
sub
outsl
pop
rcrb
ss
adc
aaa
inc
inc
stos
push
gs
push
ficomps
out
lods
sub
sbb
or
out
call
inc
inc
and
jb
hlt
pop
jnp
rcrb
ja
xlat
sub
loop
push
jp
xchg
ja
fildl
into
inc
xor
adc
xchg
shll
jns
sbb
or
mov
daa
lret
inc
rclb
addr16
mov
cmpsl
jp
jb
and
sub
or
scas
dec
mov
aad
les
sub
jecxz
iret
das
icebp
dec
cmpsb
inc
movsb
jae
outsl
mov
pop
adc
rorl
iret
xor
fbstp
cmp
pop
xor
inc
movsb
inc
mov
xchg
dec
xchg
cltd
push
jmp
mov
xchg
pop
cmpsl
dec
mov
sub
sbb
or
cli
pop
ljmp
inc
stos
push
lcall
xchg
pop
cmpsl
dec
mov
sub
sbb
or
cli
pop
dec
pop
sbb
inc
jmp
sbb
mov
gs
leave
cmp
popa
jb
xor
rol
xchg
lods
sbb
insb
in
mov
xchg
shrl
jno
inc
or
cld
mov
jge
sahf
dec
push
sahf
sub
pusha
mov
sbb
decl
pop
cmp
cmpsl
cmp
arpl
cmp
pusha
add
sbb
sub
xor
xlat
mov
inc
nop
mov
mov
cmp
and
xchg
lahf
or
add
sub
jbe
rcrl
fwait
aas
jno
jae
xchg
rorl
xchg
cmpsb
inc
mov
adc
lret
xlat
sub
xchg
xchg
jg
je
mov
and
cmp
xchg
fidivs
adc
sarl
outsl
dec
test
je
out
mov
lods
aaa
and
mov
sti
sti
mov
and
das
jmp
inc
or
frstor
lret
cld
int
loop
std
adc
mov
aas
cmp
push
loope
mov
sub
sub
jle
add
mov
shrb
mov
pop
shrb
sbb
push
mov
inc
push
iret
int
jmpw
xor
cld
mov
roll
sbb
sub
jmp
adc
cmp
clc
pop
jns
aaa
fistpll
or
pop
inc
inc
ljmp
adc
es
sbb
dec
mov
sbb
jle
leave
fsts
jge
pop
cli
cmp
xor
test
dec
fstpl
xchg
daa
std
dec
push
mov
test
mov
repnz
movsb
ja
popa
mov
inc
mov
jmp
cmp
stos
mul
lahf
into
mov
xchg
clc
inc
out
mov
rorl
sub
jg
out
mov
hlt
sub
push
jmp
out
aad
jecxz
adc
mov
jg
out
enter
pop
push
or
xchg
mov
mov
cltd
scas
jae
es
dec
jmp
mov
mov
lret
jecxz
cmp
lcall
stos
idivl
js
sbb
sub
mov
std
pop
shl
scas
pop
cld
pushl
inc
mov
mov
in
mov
jb
sbb
xchg
xchg
out
xchg
nop
add
inc
cwtl
dec
addr16
or
adc
out
dec
pop
mov
inc
pop
push
jns
push
jne
inc
mov
mov
outsb
pop
notb
and
fdivl
arpl
inc
idivb
mov
mov
mov
cmpsl
cwtl
cmc
jecxz
dec
in
sbb
sbb
int
fxch
dec
mov
inc
push
lret
xlat
out
cmp
in
cmp
add
and
sbb
jae
pop
or
jecxz
adc
test
loope
pop
inc
push
sbb
test
add
ret
lcall
mov
imul
cli
inc
ret
xor
inc
and
jmp
mov
nop
and
push
mov
in
add
outsl
adc
pop
out
adc
rorl
xor
and
aaa
rcll
jp
scas
ljmp
push
and
sub
mov
daa
bound
ja
je
fs
fcmovne
push
lea
negl
fwait
cmpsl
std
xchg
xchg
aas
and
scas
push
cmpl
ja
dec
adc
cmp
sti
and
shrl
aaa
ss
cmp
or
adc
pop
arpl
jno
adc
out
decb
or
das
in
jmp
sub
jp
jne
arpl
aad
out
lea
pop
and
jge
ja
shll
jne
mov
jb
or
and
add
out
dec
pop
jae
jg
jmp
stos
mov
adc
hlt
dec
leave
es
xchg
inc
sbb
test
and
cmc
rclb
mov
iret
pop
gs
ljmp
mov
test
in
lcall
rclb
iret
pop
shrl
ss
iret
call
outsl
sub
ja
cmp
js
pushf
inc
je
xor
pop
mov
dec
movsb
dec
xor
jae
fstpl
les
push
add
lret
pop
ja
sbb
push
mov
inc
adc
shlb
jge
aad
hlt
xorb
push
mov
clc
adc
dec
sbb
lock
mov
int3
mov
fwait
pop
ret
cmp
test
shrb
mov
stos
inc
pop
fdiv
sub
or
lcall
cmp
cmpsb
aas
sbb
lret
jg
adc
sub
test
das
cmp
cwtl
adc
les
out
xchg
iret
dec
orb
cmp
flds
mov
jno
or
insb
out
mov
jp
dec
xor
add
pop
jne
out
ljmp
xchg
and
mov
insl
mov
repnz
inc
mov
mov
shrl
ficoms
and
xchg
fimull
mov
fs
orb
loop
and
cmpsb
cs
aad
stc
pop
add
inc
inc
xchg
mov
push
jle
cmp
push
sub
jne
xchg
push
mov
push
jmp
inc
fistpll
xchg
pop
sbb
sub
xchg
int3
jl
adc
lods
sbb
dec
je
cmp
sub
popa
dec
mov
test
ret
sub
dec
push
call
mov
test
int3
jle
push
jnp
xchg
and
imul
pop
sub
ss
cld
dec
dec
test
sbb
mov
fstp
xor
mov
jae
outsb
xor
fnstcw
test
and
in
andl
add
xchg
jl
repz
loopne
push
rorl
fists
and
notb
fucomi
scas
movsl
shlb
test
ja
or
test
fcmovnu
dec
ljmp
stos
stos
or
in
mov
push
popa
or
les
inc
rorl
sbb
cmp
inc
push
cmp
mov
push
and
mov
jge
adc
and
inc
fisttpll
popa
mov
cld
rolb
std
aam
adcb
sbb
jae
mov
xor
xchg
cmp
and
sbb
lods
cmc
fmull
push
out
test
iret
inc
inc
mov
outsb
or
mov
jae
xchg
sbb
push
xchg
loopne
push
cld
lret
add
cmp
jg
divl
lret
rcll
cld
push
xchg
les
add
nop
mov
pop
mov
in
hlt
sub
sub
cmp
notl
adc
movsb
mov
xchg
ror
jb
or
ja
test
sti
ss
fidivrl
dec
hlt
mov
addr16
into
push
loope
add
or
pop
dec
subb
jge
mov
pop
icebp
into
xor
jnp
add
or
pcmpeqw
js
jg
dec
push
push
fwait
fwait
insb
mov
shlb
cltd
shrb
aaa
decl
test
pop
in
xchg
or
mov
xor
mov
leave
xor
lret
jnp
insl
cmp
jno
std
jmp
lcall
stos
mov
mov
jno
xlat
dec
xchg
mov
je
add
or
inc
adc
test
mov
cwtl
mov
fisttpl
inc
adc
pop
lods
jbe
jp
cmpsl
icebp
sbb
inc
test
jp
call
mov
mov
xchg
dec
sbb
add
xchg
shr
mov
mov
cmp
rcll
cmc
push
aas
and
or
fstl
enter
leave
xchg
sbb
or
jecxz
mov
icebp
and
jo
test
mov
lods
out
push
pop
sbb
sub
jae
je
std
enter
test
push
test
sbb
icebp
repz
sub
cmc
cli
and
and
aaa
sbb
testb
dec
mov
pop
mov
add
in
and
addr16
xchg
out
xchg
nop
into
and
imul
push
outsb
into
lcall
push
leave
iret
daa
mov
push
jae
xchg
mov
xchg
xchg
hlt
lods
or
add
insb
orb
mov
sub
hlt
aad
enter
pop
add
stc
cmp
js
pop
xlat
aam
inc
lcall
cmpsb
pop
mov
xor
sbb
pop
sbb
movsl
push
das
cmpsb
or
movsb
push
pop
sub
jae
pop
add
imul
mov
xchg
and
dec
pop
mov
add
scas
cmp
add
lret
mov
or
insl
pusha
es
lea
inc
inc
pop
cltd
mov
stos
lcall
loopne
std
sahf
dec
push
push
lods
call
addr16
dec
addr16
shrl
fcompl
repz
push
cwtl
call
aad
cmp
mov
cmpb
jmp
mov
out
or
dec
add
imul
sub
movsb
aad
lds
test
push
sub
pop
lret
jp
cmp
adc
add
lcall
and
mov
cmp
lock
imul
loope
scas
out
xor
testl
xchg
sub
ret
lods
aas
shrl
jbe
xchg
shrb
adc
ds
pop
es
mov
cs
scas
inc
mov
hlt
dec
addr16
lcall
mov
loope
sarb
inc
lods
inc
xor
inc
ret
arpl
orl
fldenv
push
cmc
sub
jo
insb
aam
aad
out
or
popa
add
push
and
pop
stc
addr16
mov
pop
xor
jl
std
adc
mov
jb
dec
mov
and
push
repnz
xchg
xchg
roll
push
imul
jge
xor
cs
jge
je
fprem
pop
and
je
in
mov
add
nop
sbb
push
mov
shr
pusha
adcb
arpl
in
rolb
cld
psubw
adc
push
subl
mov
lret
or
adc
mov
icebp
jae
mov
push
fisubl
mov
cwtl
inc
pop
inc
insl
out
sub
mov
popf
add
sar
adc
jp
jnp
jle
push
jge
test
pop
pop
clc
lcall
push
rorl
sbb
int3
hlt
iret
lods
lods
mov
mov
push
je
bound
subl
stos
jb
mov
out
add
repnz
push
inc
or
bndldx
dec
test
cmp
lock
jnp
rcll
movsb
loopne
dec
out
test
cli
repnz
cmp
ja
andb
sbb
negb
aad
aad
adc
inc
adc
data16
mov
rorb
aaa
rclb
dec
pushf
cmc
mov
lahf
filds
push
je
lret
mov
insl
lret
int3
mov
sbb
mov
shlb
and
hlt
or
lret
filds
arpl
mov
inc
mov
mov
mov
xchg
mov
adc
lahf
int
dec
sbb
into
xchg
sub
aam
xchg
mov
jl
xor
movsl
jo
pop
test
aad
push
js
sti
scas
xchg
addr16
and
pop
mov
add
pushf
dec
push
dec
nop
roll
hlt
and
out
adc
xchg
jo
cmp
add
xor
outsl
jecxz
subb
into
mov
ljmp
and
icebp
fcom
loopne
push
dec
cmp
lea
sub
call
sub
add
push
or
push
aas
mov
or
popf
mov
out
fstpl
jnp
cmp
sub
jge
jae
inc
test
jne
enter
cmp
aad
je
fstps
jp
lcall
sub
xor
sbb
into
jns
sub
add
lret
clc
scas
ret
xor
cmp
gs
jl
dec
and
mov
or
sub
add
cmpsb
jle
inc
mov
adc
inc
dec
or
add
adc
je
dec
sub
test
divb
popa
push
loop
jl
push
out
xchg
mov
mov
dec
jnp
test
inc
aas
dec
loope
cmpsb
lods
addl
lock
jae
sub
sbb
or
outsl
arpl
mov
hlt
fidivrl
pop
push
and
mov
cld
dec
mov
lea
jb
mov
mov
jo
lret
shll
xchg
pop
cltd
fimull
jns
adc
push
mov
cmp
les
into
movsb
xchg
pop
pop
sub
repz
add
in
test
test
xchg
pop
pop
test
fwait
bound
aad
sub
pusha
in
or
lock
adcl
in
xor
mov
pop
xchg
mov
shll
ds
movsl
sbb
and
add
mov
scas
mov
mov
test
mov
test
mov
popf
dec
into
jge
sbb
imul
mov
mov
push
cmpsl
int3
mov
loopne
add
inc
dec
clc
xchg
and
jne
lret
push
cmp
scas
jecxz
pop
mov
in
inc
testl
pusha
nop
xchg
pop
pop
adc
jg
mov
xor
es
stos
imulb
cmc
fdivl
les
pop
fwait
lock
shll
sbb
addr16
jae
mov
hlt
out
lret
cltd
lock
pop
pop
lahf
ss
lods
sbb
aaa
addr16
xchg
and
jbe
leave
xchg
insl
cmp
fstl
ja
mov
pusha
repz
mov
sub
dec
lods
mov
loop
icebp
dec
cld
sub
and
jne
ficoms
ja
mov
shlb
test
lds
out
test
ss
mov
xor
lods
test
js
stc
das
stos
and
pushf
pop
push
popa
aaa
xchg
test
or
sbb
add
mov
jl
mov
mov
sub
pop
sbb
mov
adc
into
mov
add
cmpsl
call
xchg
xchg
sub
mov
fadds
jb
stos
lcall
stc
ljmp
dec
stc
jns
test
icebp
pop
rcr
shrl
incl
bnd
cmp
into
fsubrs
inc
xor
mov
push
ljmp
daa
mov
inc
lret
enter
popf
pop
loop
mov
jmp
outsb
imul
mov
popa
pop
pop
in
shll
jb
jl
dec
add
cli
movsb
sub
push
mov
xor
and
or
aad
adc
mov
mov
jo
sub
dec
xor
lret
jns
sahf
push
inc
pop
push
or
or
fistps
cmc
cli
loope
xor
es
pop
ja
cmp
imul
push
mov
iret
movsb
mov
insl
pop
or
mov
fs
sbb
adc
adcl
adc
mov
shrl
jae
rcrl
int3
jl
insb
stos
sub
sub
popf
mov
mov
lock
stos
outsb
sbb
outsl
sarl
arpl
mov
das
ss
iret
inc
mov
adc
arpl
sbb
test
insb
repz
sbb
sub
lods
add
pop
cmp
sbb
mov
sbb
mov
cmp
pop
pusha
inc
int
dec
ljmp
sbb
fldcw
mov
xchg
or
mov
cmpsl
pop
stos
fwait
in
lret
push
pop
pop
shll
ret
test
rcll
mov
into
or
loope
test
xchg
arpl
cwtl
addr16
mov
loopne
in
xchg
lods
das
fisubl
inc
sbb
mov
push
sbb
pop
mov
push
xchg
outsl
inc
push
adc
ret
add
xor
and
ret
lahf
cli
push
sbbl
sar
mov
pop
sbb
sbb
mov
movsl
push
push
insl
stos
or
movsl
clc
xor
jno
seto
out
cmp
mov
pop
sub
or
cmp
scas
icebp
mov
movsl
loop
xor
lods
out
pop
mov
out
push
mov
test
xchg
data16
add
mov
scas
xor
cmpsb
xchg
rorl
popa
pop
jne
repz
mov
ds
fisttpll
aaa
clc
stos
imul
mov
jbe
xchg
xor
adc
mov
test
stc
or
xchg
enter
mov
pop
inc
pop
popl
das
outsl
pop
sub
cmp
lcall
sahf
jecxz
ljmp
sub
ss
sbb
aas
mov
lret
or
rcrl
fcoml
sbb
ds
jbe
and
mov
and
int
stos
cmp
int
push
adc
or
mov
out
mov
add
nop
mov
fcomi
mov
cmp
inc
add
jo
loopne
cs
stos
iret
cmp
aas
loope
cli
dec
inc
stos
rcrl
jno
mov
dec
fucomp
sub
pop
inc
sbb
mov
repnz
fisttpl
fsubrs
decl
sbb
daa
jb
sbb
pop
lret
addl
outsb
fidivrl
jl
bound
cwtl
or
or
ja
mov
xchg
xchg
dec
sub
nopl
xor
mov
dec
mov
xchg
lret
xor
scas
mov
mov
or
and
cmp
adc
push
mov
jno
push
cmc
push
sbb
mov
xchg
push
jl
mov
sbb
xchg
mov
stos
mov
push
xorb
lahf
jl
jge
popf
pop
mov
pusha
lds
mov
daa
xchg
and
xchg
mov
loopne
xchg
ss
popa
in
add
push
adc
add
outsl
pop
cmpl
or
repz
xchg
xor
insl
into
int
mov
pusha
or
jmp
jo
sti
pop
dec
das
sub
push
mov
scas
adc
inc
push
jle
dec
xlat
jb
xchg
fs
scas
insb
jnp
ja,pt
jo
inc
push
nop
cli
push
fwait
or
sbbl
in
or
ret
cwtl
je
lret
pop
push
adc
aad
stos
xchg
pop
das
pop
loop
pushf
sbb
mov
in
jo
je
lcall
xlat
leave
xchg
lret
inc
fimuls
xchg
dec
notl
push
lea
xlat
arpl
inc
mov
push
jl
fsubrs
movsb
inc
or
cs
cmp
mov
xor
add
sbb
xchg
pop
adc
mov
mov
cmp
mov
lahf
popa
je
fs
rolb
sub
or
lds
push
repz
inc
repnz
or
insb
addl
and
je
fldl
mov
into
iret
xor
jae
pop
sbb
xchg
adc
fstl
aad
add
mov
movsb
pop
pop
push
mov
xor
and
in
lret
out
inc
and
inc
ret
fucomi
cmpb
xchg
imulb
sbb
mov
bound
sbb
loopne
imul
outsl
arpl
jbe
in
inc
imul
repz
inc
push
mov
imul
mov
aas
ds
mov
xor
imul
jne
faddl
xor
leave
mov
jns
adc
fwait
mov
push
push
push
daa
aam
adc
mov
into
cld
push
aas
test
movsl
and
jmp
push
lcall
stc
popf
add
mov
int3
pusha
sti
faddp
xor
adc
lods
mov
in
mov
mov
cs
aas
pop
ja
dec
mov
testb
adc
icebp
mov
je
cmp
aam
test
xchg
paddb
out
or
lds
lahf
lahf
or
fnstenv
add
sti
stc
or
out
or
push
das
std
jns
fiaddl
fs
push
and
push
nop
insl
test
sub
lds
scas
pop
das
es
int3
jg
pop
push
lods
mov
cld
out
xor
sub
scas
mov
out
xlat
sbb
dec
mov
dec
push
inc
xorl
lds
divb
xor
loope
leave
repz
rcr
and
pop
test
mov
bound
iret
mov
pop
and
je
or
mov
mov
xchg
mov
push
dec
jg
and
dec
rcrl
cmp
add
cwtl
stos
sub
mov
cmp
jb
mov
sahf
lods
cltd
sar
icebp
aas
jae
xadd
and
push
popa
mov
add
sub
inc
lcall
mull
scas
cmp
xchg
lahf
dec
insb
insl
inc
enter
jmp
repz
ss
cwtl
dec
ret
dec
push
ljmp
sbb
cmpsb
xchg
fistl
jg
mov
xchg
aas
cmp
js
dec
push
rcll
jns
cmc
andl
daa
push
rclb
inc
or
push
into
mov
roll
cmp
fwait
pop
popf
daa
lret
inc
stos
push
lcall
xchg
pop
cmpsl
dec
mov
sub
sbb
or
cli
pop
ljmp
inc
stos
push
lcall
xchg
pop
cmpsl
dec
mov
sub
sbb
or
cli
pop
ficoml
sub
xlat
lcall
xchg
stos
cmpsl
dec
mov
cmp
sbb
loop
out
pop
mov
andb
aaa
mov
or
xchg
rorb
sub
sbb
or
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
frstor
jge
mov
cmp
das
int
in
std
out
mov
mov
dec
insb
jg
outsl
or
aas
cmp
out
mov
std
out
lock
lods
mov
dec
insl
xlat
jge
or
sarl
lods
mov
hlt
out
lret
shrb
and
sub
test
and
testl
scas
andl
icebp
sbb
rcrb
and
adc
cmpsl
jg
insl
mov
xchg
jo
jo
bound
inc
and
pop
pop
dec
bound
inc
or
cmpsb
cltd
dec
movsb
int
lea
jb
bound
mov
clc
mov
dec
outsl
xchg
xlat
or
les
lahf
in
lret
insl
sahf
into
jo
push
mov
mov
mov
ljmp
cmp
fistpll
int3
cmc
mov
scas
inc
push
mov
pop
repnz
clc
push
in
pop
aad
aad
sti
shll
fisttps
cmpsl
cwtl
add
stc
sahf
popf
jo
mov
pop
mov
or
in
scas
int
fisttpll
in
out
std
cmpsl
lea
mov
dec
add
inc
dec
imul
push
pop
dec
movsl
cltd
outsl
mov
lock
sar
into
adc
push
push
sbb
xor
cmp
push
inc
inc
lahf
mov
cwtl
mov
iret
out
ret
std
fisubs
or
das
pop
or
jnp
cvtps2pi
cmp
iret
in
std
out
lea
mov
dec
insl
jg
outsl
or
aas
cmp
iret
in
std
out
lea
mov
cwtl
loopne
das
inc
jle
push
sub
popa
leave
ficompl
test
mov
lret
sub
xchg
ret
cwtl
xchg
xchg
sbb
pusha
ja
rcl
pop
dec
daa
in
movsb
in
imul
mov
pop
xchg
sub
ret
mov
mov
push
inc
enter
repnz
hlt
fldcw
mov
mov
mov
mov
inc
pop
jecxz
repnz
gs
jnp
movb
sbb
ss
gs
sbb
jns
insb
flds
xlat
mov
and
rcl
and
mov
adcl
mov
push
or
lahf
rol
lcall
sbb
lods
pop
jnp
dec
call
idiv
sbbb
push
jnp
ja
enter
js
and
lcall
pop
test
cli
fildl
cld
adc
rorb
aad
mov
jno
lock
ret
in
dec
sbb
mov
pop
outsl
imul
cmp
fwait
ret
and
pop
jmp
fs
fst
movsb
push
cmp
xor
jle
sbb
dec
inc
arpl
lods
jo
push
sarb
xor
inc
repnz
aad
jle
cmpsb
add
mov
lods
sbb
orl
and
inc
aad
jae
cmp
dec
cmpsb
aam
aam
jg
xor
mov
hlt
lcall
and
or
mov
mov
and
mov
fidivrs
inc
and
scas
jle
mov
mov
pop
aam
jmp
ret
je
xchg
jmp
and
fdivrs
or
mov
les
inc
dec
sbb
scas
push
aam
mov
mov
sahf
xor
inc
mov
push
incb
inc
sbb
test
add
frstor
sub
push
out
shrl
out
sub
fiadds
mov
test
fmul
in
aam
enter
pop
and
gs
xor
xchg
hlt
add
lret
out
ret
cmc
cmpsl
pushf
movsl
push
ss
cmpsl
out
jnp
xor
mov
xor
jnp
shll
xor
mov
push
stc
xlat
xchg
or
inc
pop
in
dec
mov
bound
test
mov
xor
rsqrtps
je
std
jp
jle
fwait
sbb
mov
jo
inc
mov
into
dec
dec
stos
dec
lret
ljmp
cwtl
cmp
cmpsb
mov
jge
mov
enter
jp
out
mov
jp
mov
jp
aad
aas
in
push
lea
sti
adc
xor
pop
adc
je
dec
sbb
adc
enter
imul
fs
inc
aad
jno
push
adc
sbb
push
sbb
test
loop
movsb
mov
lret
xchg
pop
inc
jbe
sub
or
push
mov
fisubrs
outsb
mov
adc
sbb
xchg
into
pop
stc
and
mov
jle
mov
sub
iret
xor
bt
out
aad
mov
fisubrl
dec
sub
insl
in
aas
jl
cmp
aad
out
imull
pop
mov
mov
jge
shrb
jb
int
and
mov
and
pop
aad
cli
aas
outsl
xor
and
sahf
notl
pop
test
xlat
adc
mov
xchg
sbb
push
add
pop
pop
in
lcall
xchg
mov
inc
in
pop
insl
popa
andb
xchg
movsb
jne
ret
or
mov
daa
mov
insl
cld
ret
out
sbb
sbbl
icebp
fistpll
int
or
jbe
mov
test
imul
bound
fdivr
shrl
lea
lock
rcl
cld
in
xchg
mov
cmp
sbb
in
mov
push
xor
push
leave
pusha
jecxz
lds
mov
shlb
mov
mov
sbb
xchg
ja
repz
cmp
mov
and
jnp
or
pop
cmp
push
std
faddp
popf
shll
mov
nop
fcompl
scas
fs
lret
jp
inc
dec
push
dec
adc
or
add
jo
mov
cmp
xchg
out
and
popa
rclb
xchg
push
stos
fisttpll
call
roll
aas
popf
mov
mov
lea
sub
js
into
jmp
jo
mov
xchg
movsl
mov
mov
clc
setno
or
sahf
xor
xor
shll
out
inc
mov
call
test
mov
inc
push
fldt
out
pmaxsw
loopne
add
jns
call
pushf
cmp
mov
lock
test
jge
push
adc
iret
dec
fs
dec
loop
nop
push
push
and
cmp
mov
xor
mov
pop
mov
movsb
mov
lcall
mov
jnp
dec
ret
roll
loopne
jns
xchg
les
xchg
push
mov
mov
sbb
test
jnp
loopne
shll
in
ret
in
clc
push
push
cltd
push
mov
cmp
es
out
jp
aaa
mov
and
lods
mov
or
rcl
les
push
jmp
inc
xchg
bound
fiadds
cmp
call
jno
leave
sbb
repnz
jp
pop
sub
ret
push
push
push
xor
lea
mov
add
cwtl
mov
push
jns
cmp
std
nop
enter
stos
movsl
lods
test
sbb
jge
repnz
cld
cwtl
jo
pop
ljmp
sbb
add
dec
inc
fsubl
inc
cmpl
push
fisttpll
mov
popf
pop
cli
and
test
jmp
sub
into
pop
les
xchg
insl
and
lds
mov
mov
sbb
mov
and
addr16
jmp
lods
dec
inc
push
push
out
xor
jne
call
aaa
call
add
cmp
test
subb
sbb
ja
and
mov
fxch
into
shr
shl
add
xchg
push
int3
shll
stos
popa
mov
pop
addr16
push
or
mov
call
sbb
sarl
shll
mov
inc
daa
sbb
pusha
jl
adc
pop
stos
add
cmp
adc
fdivr
cs
popf
lahf
adc
out
movsb
fwait
sub
xchg
sub
push
pop
addr16
addr16
pop
rclb
lret
sbb
sbb
outsl
xchg
mov
jmp
mov
ja
adc
in
mov
lahf
push
pop
cli
lods
add
ja
test
jnp
mov
daa
sub
call
mov
cmc
xchg
loop
idiv
dec
xor
adc
in
push
repz
or
fdivrl
push
fs
test
ret
cmp
xor
pop
jbe
inc
sbb
sub
sub
mov
pop
mov
in
arpl
mov
mov
mov
mov
sbb
cld
and
xorb
in
js
out
jae
mov
sub
push
mov
pop
cmpsl
ss
or
mov
rcrb
or
imul
lahf
lock
mov
clc
push
or
pusha
and
pop
add
mov
xchg
jecxz
rcll
roll
sub
ljmp
out
pop
mov
and
cmp
es
add
xchg
inc
push
cwtl
mov
sub
ret
sub
dec
in
stc
outsb
lahf
adc
cli
jae
lcall
sbb
fdivrs
gs
add
mov
repz
out
imul
or
mov
or
ds
lock
mov
out
in
cmp
test
int3
mov
test
inc
cmp
mov
inc
dec
and
add
loop
dec
test
mov
imul
sbb
je
cmpsb
pop
and
adc
test
in
insb
dec
stos
pop
shlb
sub
sbb
adc
cmp
dec
mov
sbb
data16
inc
push
std
mov
pop
push
inc
hlt
js
push
adc
lahf
mov
mov
lcall
movsb
int3
cltd
fs
xlat
jo
xchg
sbb
jmp
loopne
aas
cmp
pop
test
xchg
movsb
pop
lret
xor
sbb
nop
mov
xchg
gs
mov
mov
sub
fisubs
fdivl
jg
or
push
data16
pop
adc
jb
or
sub
adc
mov
cmpsl
in
sub
mov
scas
insl
xor
addb
lret
mov
mov
imul
cwtl
jae
mov
pop
xor
and
imul
lea
mov
jg
sbb
and
in
inc
cmc
pop
test
xchg
shl
push
mov
ljmp
incl
pop
cmpsl
xchg
dec
cmc
jmp
cld
push
jno
fiadds
mov
mov
mov
jg
int
outsb
arpl
fwait
sub
jl
scas
inc
test
outsl
dec
dec
inc
sub
pop
ret
pop
test
adc
sbb
adc
cli
xchg
cmpsl
out
dec
popf
cwtl
repnz
sub
xor
sbb
mov
enter
push
pop
lahf
mov
shlb
push
jle
lret
iret
push
push
in
mov
lods
cmp
cmc
insl
xor
shrl
test
daa
xor
jl
outsl
mov
cmpsb
mov
push
push
test
inc
in
xor
adc
bound
cmp
add
into
imul
cmpsb
or
loop
jg
lret
xor
shrb
cmc
mov
xchg
xchg
xor
stos
repnz
stos
rcrb
popa
rorb
jae
inc
mov
cmpsb
mov
in
xlat
dec
xor
mov
push
mov
lock
icebp
mov
sbb
xchg
imul
push
sub
and
loop
lock
fs
adc
mov
xor
add
mov
dec
dec
xchg
scas
jae
int3
jne
adc
push
xor
jb
push
pop
and
in
add
pop
xchg
out
pushf
lock
cmpsb
aam
dec
lods
mov
mov
and
dec
mov
cltd
fldenv
push
sub
test
pop
xchg
push
rcl
lods
movsl
rcrb
jmp
and
in
cwtl
jp
xor
daa
or
add
cli
jns
jo
shl
and
push
shlb
cmp
out
mov
fimuls
addl
xchg
mov
jno
ss
fistps
testb
aad
insb
dec
jnp
loop
ficoml
aaa
and
jmp
lret
push
rcll
pop
leave
std
int
cmp
push
stc
inc
and
clc
sbb
clc
daa
add
inc
addr16
out
mov
int3
inc
movl
or
insb
mov
mov
dec
cmp
dec
loope
xor
fiaddl
popf
push
nop
mov
xor
orl
es
imul
cmp
lods
jnp
mov
lahf
ret
dec
jle
add
jge
popf
mov
imul
pop
and
xchg
neg
out
leave
jmp
sbb
or
add
rolb
sbb
dec
or
lcall
dec
roll
adc
arpl
fidivs
add
rcll
pop
jns
sbb
sub
sbb
shl
mov
sub
imul
dec
or
icebp
aad
pop
xchg
adc
nop
jbe
sti
jb
xor
add
scas
pop
jno
test
aad
jecxz
popf
dec
inc
fucomp
arpl
out
stos
add
mov
ljmp
aas
xchg
jp
pop
mov
insb
adc
fwait
cmc
or
insl
mov
ljmp
add
cmc
cli
js
inc
mov
dec
lahf
inc
mov
adc
or
out
fidivrs
mov
mov
adc
pop
adcl
or
xlat
mov
xor
les
xchg
lcall
add
out
and
mov
add
scas
pop
ret
jecxz
mov
jmp
popa
cmpsl
cmp
fldenv
or
xor
push
xor
pop
sub
das
inc
dec
sub
fcoms
or
cli
mov
pushf
mov
lret
dec
add
inc
aaa
push
movsl
mov
rorb
xchg
jbe
fldt
cltd
stos
mov
mov
and
idiv
jecxz
dec
lds
icebp
ja
mov
into
add
shl
add
push
dec
imul
jle
loope
jne
sbb
fsubr
add
data16
cmp
je
andb
adc
ss
scas
ret
ret
sarl
jns
xchg
mov
xor
imul
leave
loopne
mov
lds
push
sub
mov
lahf
pop
mov
sub
out
jae
shlb
mov
push
adc
mov
pop
mov
pop
mov
adc
push
dec
popf
push
pusha
xchg
lods
ja
pop
rclb
js
nop
push
mov
in
out
les
xchg
xchg
das
fcos
out
sub
or
sbb
jge
daa
jne
cs
data16
dec
test
jl
mov
testb
xor
cmp
sbb
lret
cmp
jb
scas
aas
in
addl
push
call
das
repz
mov
lahf
xorl
push
or
or
call
pop
cmc
mov
cwtl
insb
inc
scas
mov
stos
inc
mov
je
dec
lea
decb
inc
ret
xchg
dec
and
shll
cmpsb
jae
cmpsl
sbb
das
mov
insl
inc
xor
fcoms
out
xchg
dec
es
xchg
imul
or
add
sub
inc
jg
jg
lods
pop
je
cltd
adc
or
push
dec
mov
cli
mov
int
push
lea
and
jnp
xlat
mov
das
and
lods
pop
sbb
jo
adc
mov
sub
and
imul
aam
mov
push
mov
and
cli
nop
or
inc
push
push
xor
leave
adc
aad
lret
movsb
das
push
push
jb
lahf
push
movsb
add
scas
cmp
pop
mov
aad
cltd
test
cmp
pop
pushf
iret
jl
adc
dec
lods
jae
sbb
ret
fcomps
and
fildll
das
jle
push
and
cmp
ret
dec
or
rorl
push
leave
gs
clc
aas
dec
mov
cmp
mov
push
decb
mov
pop
adcl
sub
stos
pop
and
imul
inc
das
not
dec
fisubrl
or
loop
push
negb
std
test
aaa
mov
ret
pop
aam
add
adcl
adc
lret
jnp
xchg
cld
mov
shll
inc
daa
fwait
ret
fst
cmpsl
fcmove
push
cmc
test
dec
pushf
xchg
subb
and
add
sub
push
cmp
pop
into
fcoml
stc
sub
push
dec
adc
or
inc
cmp
or
cld
mov
mov
pop
mulb
or
rcr
bound
inc
mov
dec
xchg
push
mov
and
push
push
ret
ja
adc
mov
mov
iret
pusha
xor
pop
mov
lea
mov
push
sub
and
call
aam
sub
loop
push
adc
pop
mov
je
and
adc
mov
lret
dec
mov
jle
mov
sbb
rcrl
push
mov
rcl
xchg
repz
nop
push
mov
push
mov
pop
and
cmp
cmp
or
xor
mov
test
jge
jg
int3
push
inc
cltd
jno
adc
subb
or
pop
jno
pop
movzwl
out
inc
mov
addr16
xor
int3
jmp
cmp
mov
ret
ret
adc
int
and
dec
fisubrs
scas
adc
and
cmp
push
movsb
pop
insb
jnp
mov
sti
aas
ljmp
cs
hlt
cli
cmp
push
add
outsb
jmp
leave
push
fiadds
sahf
subb
mov
jecxz
dec
cmp
lods
push
jnp
cmp
scas
push
cmp
mov
pushf
addr16
sub
mov
push
cmp
out
mov
xor
je
iret
adc
xor
cmp
out
sbb
iret
iret
mov
mov
and
fs
jmp
lahf
adcb
push
stos
push
imul
das
pop
outsb
pop
test
add
pop
xlat
dec
jge
aad
adc
lds
rol
das
jmp
mov
imul
lock
loop
test
je
pop
jno
pop
lods
out
push
mov
into
popa
sbb
mov
rclb
jle
insl
mov
into
add
mov
fsubrl
fwait
sbb
js
mov
fsubrs
push
out
jp
cwtl
mov
orl
stos
sahf
aaa
dec
pusha
ucomiss
insb
sbb
out
out
imul
shll
and
lods
test
aad
std
dec
cli
mov
cs
ret
fmull
fwait
jp
and
mov
ss
and
cmp
sbb
inc
test
adc
fwait
into
xor
jg
pop
sbb
sbb
sahf
mov
and
movsb
lds
divb
cmpl
dec
ljmp
cmp
and
adc
ret
sbb
movd
test
or
and
inc
test
out
lcall
pop
xchg
sahf
push
sbb
pop
fists
mov
xchg
push
out
in
pop
lret
into
out
je
ret
js
pop
repnz
rcrl
dec
in
pop
stc
inc
repz
jmp
je
inc
dec
push
mov
mov
call
movsl
mov
int3
lahf
xlat
int
push
dec
xor
or
dec
rorb
xchg
sbb
sub
roll
pop
mov
fsubrl
bound
and
pop
xchg
aas
les
outsl
aam
xor
inc
movsl
jg
or
cmpl
jns
xchg
stc
aas
or
pop
shrl
xchg
test
add
sbbb
jno
xor
lcall
sbb
push
jo
xchg
daa
dec
repz
push
sahf
ja
push
out
ja
les
or
stos
mov
fwait
dec
fsubrs
je
sub
mov
cli
dec
scas
jns
adc
adc
aad
sahf
or
mov
dec
adc
cmc
fdivl
cli
sbb
rcrb
xorb
adc
pop
jb
gs
adc
sub
ljmp
xchg
or
mov
imul
loop
or
das
pop
push
lock
addr16
cmc
insl
pop
mov
push
sub
fdivp
loopne
cmpsb
inc
jp
pop
ffree
pop
or
cmp
inc
mov
leave
or
testl
jp
mov
test
out
in
imul
fwait
xchg
outsl
cli
pop
jno
addr16
out
xchg
xchg
xor
mov
add
roll
lcall
mov
shrb
cmp
fs
gs
int
hlt
subl
push
in
or
cmp
loop
adc
repz
cmp
je
jl
gs
daa
xchg
add
cmpsl
mov
pop
cmp
sub
lahf
push
pop
sbb
cld
inc
and
dec
cmp
adc
mov
das
repz
xchg
jb
add
sbb
dec
push
stc
push
cmp
imul
ficoms
cmpsb
ljmp
inc
rcll
jp
sub
and
sar
dec
mov
mov
jns
ljmp
cmp
jnp
and
pushf
mov
arpl
movsb
aas
mov
arpl
lock
mov
bound
pop
xor
jle
addl
push
bound
jg
jg
lods
fisttps
sbb
das
int
inc
ds
je
xchg
dec
and
leave
inc
cmc
push
add
mov
fisubl
lock
or
inc
mov
cli
int3
rol
cmc
fidivs
cmp
in
mov
pop
pop
addl
in
ja
mov
ret
cmpsl
inc
clc
cmp
jmp
cmpb
ja
cwtl
fisubrs
xchg
pop
or
rcr
jne
imul
pop
lret
sbb
data16
in
pop
pop
mov
std
arpl
xor
mov
jb
data16
in
mov
jns
jge
imul
test
jo
sbb
mov
pusha
lahf
and
mov
push
fwait
aaa
fnstsw
daa
stos
popf
xlat
roll
mov
roll
sbb
into
pop
adc
sarl
mov
xchg
loopne
mov
sahf
adc
push
push
jl
enter
dec
add
shll
cli
scas
jo
add
out
dec
xor
xor
dec
mov
jge
or
aas
cmp
iret
in
std
out
lea
mov
dec
insl
jg
outsl
or
aas
cmp
iret
in
std
out
lea
mov
pop
insl
pop
jge
or
aas
cmp
iret
in
std
out
lea
mov
dec
insb
jg
outsb
or
mov
frstor
std
cwtl
cli
pop
adc
push
mov
movsl
and
lret
cmpsl
cmp
inc
xor
and
xchg
jne
insl
inc
rolb
mov
movsl
and
jb
jb
push
lds
and
xchg
or
push
rolb
lods
sub
in
imul
int
lds
mov
orl
or
fdivrl
push
xchg
ja
cmpsb
mov
add
pushf
xchg
pop
cmpl
je
xor
pop
test
sbb
push
filds
in
push
lods
push
mov
jmp
xchg
jne
push
and
dec
and
pop
ss
popa
dec
pop
popa
add
mov
jne
cltd
pop
push
rolb
mov
mov
pop
in
mov
jb
es
mov
insl
cli
jp
sub
sub
sbb
gs
mov
pop
cwtl
pop
xor
pop
adc
cmc
cmp
adcl
shr
jp
or
out
es
int
lret
enter
jge
fidivl
add
inc
les
xor
jb
aad
fcompl
mov
mov
insl
ljmp
fnstenv
rclb
icebp
xchg
add
fisttpll
xchg
popa
out
xchg
add
daa
mov
les
popa
cmc
insl
cltd
jb
sub
es
jo
movb
testl
mov
mov
xor
and
jbe
inc
mov
push
lds
mov
mov
jne
gs
rolb
mov
movsl
and
jb
aad
lds
mov
mov
jne
gs
rolb
mov
mov
sub
xchg
xlat
pushf
add
sub
stc
mov
aad
add
and
add
mov
sbb
movsl
inc
lods
movsl
sbb
out
insb
out
sbb
hlt
inc
iret
test
jno
popf
xor
fnstenv
pop
xchg
fiaddl
jmp
push
mov
js
fdivrs
cld
scas
cmp
mov
std
imul
loop
test
sub
xchg
inc
dec
mov
mov
sarb
push
xchg
jnp
adc
adc
repz
jle
roll
push
test
fmull
out
imul
xchg
insl
cmpsb
sti
sub
test
mov
sbbb
xchg
fldcw
pusha
pop
sbb
test
hlt
js
addr16
jno
cltd
sub
mov
jae
jne
sub
dec
fwait
and
iret
sarb
cmp
mov
adcb
ja
sub
fwait
xchg
sub
subb
fisubrl
cwtl
test
cmp
or
add
in
in
sub
dec
mov
mov
int3
mov
mov
sub
cmp
jae
adc
sti
sub
pop
sarl
fimull
movsb
out
cmp
or
repnz
into
seta
sub
mov
pop
mov
out
mov
je
add
xor
pop
int3
xlat
fbstp
xchg
in
fsub
aas
mov
adc
sub
xor
adc
sub
add
xchg
in
or
cmp
mov
bound
add
mov
cmpsl
lcall
std
ret
dec
sti
jne
fdivr
add
xchg
call
xchg
xchg
add
sbb
dec
push
sub
mov
imull
call
pop
push
cmp
out
sub
das
pop
and
arpl
jp
sub
add
or
cld
adc
outsb
xor
push
inc
jb
dec
mov
cld
ror
scas
jle
xlat
pop
mov
je
aam
andl
mov
fisubl
or
fs
pop
cli
orl
and
inc
pushf
or
push
jmp
mov
cs
adc
fcmovne
lea
iret
push
cmp
bound
pushf
dec
add
repz
and
repnz
pop
ret
addb
jg
mov
jp
outsl
adc
not
jle
and
cmp
scas
xlat
adc
pop
ds
mov
jne
jb
scas
rcll
adc
mov
lret
sub
flds
dec
shlb
mov
gs
dec
loope
xlat
jo
cmc
fldenv
test
das
enter
or
loopne
pusha
lret
mov
or
idivl
insl
add
dec
loope
pop
sub
push
mov
sbb
sub
adc
mov
add
lret
shl
inc
adc
push
xchg
inc
sub
push
sti
roll
mov
rcll
jecxz
ja
repnz
mov
nop
pusha
dec
lock
xchg
imul
adc
xchg
daa
xchg
cwtl
int
pop
popa
stos
jmp
lods
andb
cld
dec
out
shl
aam
adc
sub
jmp
std
and
stos
xchg
mov
xchg
movsl
xchg
dec
sbbl
das
icebp
prefetch
pop
mov
pop
ss
jb
rcr
fwait
mov
es
arpl
xor
mov
dec
out
imul
in
adc
mov
push
sbb
fwait
std
aas
and
inc
dec
int3
inc
movsl
fidivs
jmp
jg
lahf
out
mov
lret
sbb
pop
stos
sub
aaa
xor
dec
and
xchg
aam
inc
lds
inc
repnz
andps
cltd
decl
in
pop
push
cltd
repnz
into
leave
pop
adc
jnp
rorb
xor
pop
jo
aaa
mov
mov
loop
mov
repnz
and
add
std
push
bswap
pop
es
fimuls
inc
decl
aas
adc
mov
mov
pop
dec
sub
scas
lods
cmp
jge
into
ja
dec
or
inc
inc
mov
jae
pop
sbb
inc
push
lahf
jns
rcll
mov
push
mov
fwait
mov
movb
add
fsubr
iret
adc
das
mov
and
pushf
jecxz
push
or
filds
sbb
xlat
pop
xchg
cmp
push
ja
push
mov
aas
xchg
aad
xor
mov
and
xor
js
push
mov
fistps
jbe
scas
cli
sarl
lea
repz
push
sbb
repnz
adcb
sub
pop
fsubrl
repnz
lret
or
jns
jne
or
int
aad
adc
js
mov
cltd
adc
insb
jge
dec
cmp
pushf
pop
sub
adc
fadds
mov
std
push
and
mov
data16
imull
or
xchg
dec
fisubl
inc
jb
gs
cmp
imulb
mov
cmpsb
inc
repnz
adc
iret
sub
lea
stc
mov
into
mov
mov
andb
es
in
scas
dec
xor
push
mov
xchg
popa
sti
and
bndldx
insb
imul
lock
inc
and
mov
jl
or
scas
or
fwait
daa
pop
scas
xchg
inc
add
jne
nop
stos
mov
adc
lret
mov
cmp
sbb
and
xchg
and
jns
leave
popf
into
push
inc
or
and
mov
and
sbb
inc
mov
jg
les
cltd
fisubrl
sarb
mov
sub
popa
add
stc
icebp
mov
xchg
lahf
adc
push
lahf
cmp
imul
mov
jb
pop
xor
lea
mov
dec
or
mov
mov
enter
jg
xchg
or
es
ljmp
in
or
inc
inc
dec
mov
push
cmpsb
sub
in
fyl2x
clc
in
xchg
js
popa
xchg
jg
outsl
dec
jno
lods
das
dec
shrb
incb
scas
sub
dec
pop
addr16
mov
test
in
xchg
xchg
or
test
mov
into
mov
stc
andb
addr16
sbb
xor
imul
or
inc
xlat
push
sbb
sbb
inc
jecxz
insb
lcall
lods
mov
push
js
adc
jae
sahf
cwtl
rcll
popf
pop
jbe
jo
pop
int3
xchg
js
xchg
ret
pop
ret
icebp
adc
daa
mov
aam
cwtl
sub
xchg
pop
cld
pop
push
mov
push
cmp
jbe
rolb
mov
iret
jb
push
out
dec
lret
lcall
cltd
sub
out
movsb
add
jne
xchg
das
or
mov
sbb
dec
movsb
adc
dec
inc
mov
add
js
jb,pn
jle
hlt
lds
out
push
xchg
clc
jp
mov
pushf
cmp
jl
imul
outsb
cmp
arpl
push
sub
pop
jmp
shl
mulb
inc
test
pop
add
lahf
xchg
mov
je
cld
pusha
mov
dec
push
rcrl
cmp
ss
movl
pop
loope
fisubs
mov
adc
cmpsl
mov
shlb
ss
xchg
push
jle
inc
mov
push
add
pop
decb
xlat
rorb
and
mov
insb
fs
inc
jbe
stos
cmp
jne
addr16
push
clc
addl
cmp
lds
mov
mov
xor
and
push
rclb
div
mov
daa
loope
bound
and
push
inc
aam
add
lock
inc
push
out
or
push
es
add
cmp
scas
jl
or
xchg
lret
push
dec
and
xchg
ret
loopne
test
testb
xchg
lods
nop
lods
xor
cmp
push
and
or
aad
ret
movsl
orl
push
mov
cmp
fsubrs
sub
push
push
arpl
loope
sbb
push
js
ret
add
mov
test
sbb
jle
repnz
lock
cwtl
imul
bound
shl
cmpsb
divl
ret
dec
repz
dec
loopne
scas
ljmp
popf
jno
and
out
fwait
add
ficomps
sti
push
fnstenv
mov
insl
fucomi
jbe
incb
pop
push
pop
xor
cmp
lds
jne
fs
xor
fs
xor
push
xor
lds
faddl
out
pop
mov
adc
sub
mov
iret
je
pop
out
sub
or
bound
cmp
cmp
lcall
in
imul
and
cwtl
incl
pop
dec
mov
mov
leave
sub
fisttpll
sti
mulb
jl
test
pop
stos
mov
loope
xchg
cltd
xchg
sbb
jno
enter
and
das
adc
scas
mov
inc
imul
mov
mov
repz
push
loopne
or
push
and
inc
pop
loop
aam
lds
adc
pop
fs
or
into
adc
icebp
sbbl
xorl
daa
loop
and
pop
lret
jae
mov
imul
sbb
inc
adcl
cld
std
xchg
gs
jo
mov
mov
arpl
xchg
sub
imul
inc
leave
cmp
mov
lock
lock
js
and
std
cmp
rcrb
addr16
orb
fchs
lcall
mov
loope
cltd
loop
mov
pop
mov
push
mov
dec
mov
ret
aam
inc
pop
push
rol
push
push
dec
sub
add
outsl
sub
mov
imulb
lcall
cmc
in
shrb
inc
jg
stos
dec
pop
adc
gs
fwait
movsb
sub
adc
je
mulb
xchg
loope
ror
ds
and
fsin
mov
dec
adc
pushf
repz
stos
outsb
pop
movsl
ficoms
fldcw
push
dec
jne
inc
push
ss
xchg
cmpsl
mov
imul
mov
in
xchg
sub
jne
jl
jae
adc
test
or
lret
lds
stos
stos
jns
cmp
leave
movsl
int
pop
cld
push
cli
test
or
data16
aas
sarb
xchg
or
adc
sub
cmp
xor
lahf
dec
mov
scas
lds
push
mov
and
fcomps
ret
ds
jle
fimull
arpl
fsubs
xchg
int
mov
lcall
push
xchg
and
scas
rol
adc
xor
pop
dec
push
aaa
push
cwtl
jg
add
xchg
sbb
sbb
adc
jle
push
jecxz
cmp
movsb
xor
jge
test
inc
xchg
loop
repnz
push
pusha
mov
jmp
sub
pop
or
inc
mov
mov
jp
pop
gs
mov
pop
and
lcall
dec
cmpsb
push
mov
movsb
orl
jge
add
repz
mov
in
cmpsl
sub
sti
and
sbb
lea
stc
iret
pop
loopne
mov
in
jecxz
ret
imul
sbb
aam
cli
jge
je
stos
xchg
jnp
dec
sbb
sub
xchg
ja
cli
inc
mov
mov
ret
xchg
mov
dec
pop
scas
pop
mov
nop
and
test
cmova
dec
add
movsb
cmpsb
xchg
rcrl
mov
mov
mov
lods
mov
add
jns
notl
push
mov
clc
add
pop
add
and
cmp
pop
cmp
jg
adc
adc
adc
outsb
das
sahf
push
mov
sub
ja
call
scas
and
add
pop
jae
cmp
mov
push
rorb
xchg
jge
sub
mov
pop
enter
jle
inc
jmp
clc
cmp
lret
js
and
fsubrl
ret
mov
out
cmpsb
pop
jle
sub
shlb
das
xchg
mov
inc
dec
clc
push
mov
cmp
jae
xorb
add
fwait
sbb
mov
or
xchg
inc
pop
data16
push
sbb
pop
shl
pop
pop
push
cmp
push
cwtl
pop
mov
xor
xchg
jp
sub
and
lea
mov
imul
sub
mov
sbb
fs
pop
push
mov
rcrl
scas
xchg
jp
iret
pop
mov
gs
adc
movsl
jbe
outsl
push
xor
enter
out
add
sub
cmpl
mov
cwtl
jl
into
int3
aaa
mov
cmpsb
push
push
inc
sub
pop
inc
and
pop
dec
mov
loope
aam
add
xor
sbb
and
mov
push
aas
and
and
shl
mov
push
repnz
pop
cltd
stos
inc
cmp
sub
repnz
out
push
movsb
fcoml
repz
sub
push
push
js
call
cwtl
js
xor
movsb
lahf
push
inc
sub
lods
xchg
mov
fbld
mov
add
stc
xchg
push
jnp
inc
adc
push
lahf
pop
imul
dec
ja
sbb
lretw
add
mov
daa
push
shll
out
lcall
add
jbe
fcmovnb
jns
imul
addr16
push
xor
mov
xor
push
jno
mov
push
enter
stos
or
int
imul
fimull
mov
mov
enter
rcl
rorl
ljmp
sahf
and
or
mov
dec
arpl
data16
faddl
mov
pop
jle
dec
call
sub
cs
lea
hlt
xchg
mov
call
cld
int3
loopne
lods
adc
pop
movl
stos
jp
jns
sub
adc
and
les
in
arpl
out
in
sbb
cmp
ljmp
dec
mov
or
out
mov
xor
xchg
add
lcall
lods
push
push
xchg
out
shl
sbb
pop
les
in
fidivs
ret
aam
addb
repnz
add
push
cmpb
cmp
xchg
push
push
inc
jp
xchg
cmp
mov
push
xchg
cmp
and
push
jmp
or
ljmp
mov
pop
cmpsb
xchg
scas
aad
inc
aas
dec
jl
mov
mov
push
aad
push
sbb
lock
jge
cld
push
iret
xor
jns
das
loopne
mov
popf
mov
push
dec
outsb
mov
into
add
test
xchg
cmp
cmp
loopne
and
pushf
push
sar
or
arpl
push
mov
loopne
jns
jmp
xor
dec
clc
sti
jbe
push
icebp
adc
ss
jl
cs
sbb
js
imull
push
aaa
jo
ljmp
sbbb
cmpsb
fdivrl
fnstcw
mov
repnz
adc
sbb
in
test
std
cmovae
fwait
add
push
jle
push
lock
sub
dec
lret
cmc
adc
sbb
xchg
inc
and
filds
or
movsb
xchg
mov
je
xchg
cltd
push
mov
js
orl
frndint
cmp
stos
jne
jb
std
repz
mov
pop
mov
dec
push
mov
add
loope
std
insb
movsb
ret
inc
xlat
mov
mov
rorb
mov
add
lods
imul
rcr
loope
hlt
int
sbb
inc
hlt
pop
in
icebp
inc
add
dec
jp
sub
inc
int3
inc
jns
mov
mov
loopne
scas
fwait
shl
xchg
xor
mov
pop
dec
int3
fmuls
loope
xlat
cld
mov
sti
pop
in
rorl
push
test
mov
pop
insb
inc
clc
xor
fidivrl
icebp
xor
ss
fidivrs
mov
xor
nop
mov
repz
gs
test
jmp
rep
push
dec
and
inc
mov
mov
insb
test
mov
mov
jbe
push
jbe
mov
pop
bound
cltd
idivl
xor
nop
aas
rorl
stos
pop
movsb
mov
imul
iret
loop
out
mov
inc
ficoms
add
and
fsubrs
stos
cmp
fmull
ret
xchg
mov
aad
jns
jne
loope
add
inc
and
jmp
adc
xchg
lcall
pop
in
pop
icebp
add
xchg
leave
js
enter
dec
test
mov
cli
test
mov
mov
mov
cltd
in
jnp
xor
push
fldt
das
adc
adc
cmc
rcrb
sub
push
test
enter
inc
xchg
add
or
dec
sbb
fsts
push
mov
mov
aas
or
decb
sbb
mov
dec
sbb
adc
loop
jbe
out
inc
inc
push
cmpsl
stc
test
iret
jnp
dec
ss
movsb
inc
inc
dec
inc
mov
fistpl
mov
inc
outsl
movsb
ficoml
aas
pushf
bound
xchg
cmc
jo
mov
outsb
xor
dec
jno
pop
lods
mov
stc
cwtl
icebp
cmpsb
pushf
xlat
pop
inc
cmp
pusha
xor
add
fnstsw
pop
imul
inc
rcl
stc
cs
fists
shl
sub
mov
and
xor
mov
fistl
pushw
mov
mov
jns
ret
test
jg
add
decl
mov
adc
adc
adc
out
cmp
inc
and
jnp
mov
aaa
xor
stos
mov
nopl
dec
lahf
cwtl
lahf
push
push
mov
ret
sbb
add
and
inc
ret
jo
add
or
sahf
les
pop
popa
jae
bound
jbe
outsl
shlb
mov
mov
xchg
bnd
add
jecxz
lcall
add
mov
inc
jge
dec
xor
sahf
outsl
mov
or
mov
dec
shll
cltd
jecxz
cmp
pop
data16
rclb
iret
push
push
mov
aad
rcrl
mov
adc
clc
jns
idivl
shrb
in
mov
popl
sbb
xchg
scas
or
pop
aam
push
sub
jmp
and
pop
mov
xchg
mov
lea
cmpsb
jecxz
fiadds
jg
push
mov
inc
xchg
inc
enter
aas
and
xor
into
or
jp
das
lock
rcl
mov
inc
adc
sub
push
cld
test
push
cli
and
scas
push
and
xor
test
inc
pop
mov
cmp
xchg
sub
cmp
sub
push
jnp
addr16
mov
iret
out
mov
cmp
pop
das
outsl
mov
mov
xchg
das
outsb
xor
loop
shl
js
in
pop
cmp
mov
push
es
fisttpll
adc
add
or
adc
xchg
xlat
in
mov
push
xchg
mov
mov
mov
aam
mov
stc
mov
or
cwtl
dec
mov
ljmp
pop
pop
adc
cmpsb
jmp
xchg
or
push
and
xlat
shrb
mov
xchg
xchg
int3
xchg
in
sti
in
dec
jge
cmc
das
push
lret
les
in
pusha
sbb
jp
div
mov
shlb
mov
fucom
int3
sbb
inc
ret
rclw
mov
mov
push
mov
stc
cs
xchg
pop
clc
inc
ja
call
add
cli
adc
xchg
loop
enter
data16
ret
out
push
push
mov
jp
sub
pop
xor
add
fsubs
cmp
rorb
xchg
or
jp
sbb
and
xchg
pop
mov
jo
mov
jle
fbstp
jmp
les
adc
dec
cmc
sbb
loope
in
lods
dec
xlat
pop
leave
ret
ret
je
imul
and
inc
sbbb
fistpl
enter
adc
aam
out
add
int
adc
mov
push
ja
movsb
imul
aad
sub
inc
or
lahf
test
mov
jns
test
or
rcr
jle
in
dec
mov
or
push
lret
lds
adc
mov
dec
jae
sub
jae
sbb
rcl
mov
adc
or
cmp
push
shr
mov
xchg
je
mov
pop
ja
pop
cmp
sti
test
shrb
cmpsl
out
cmp
sub
roll
jge
outsb
cmp
xchg
mov
std
mov
or
pop
loop
jl
and
inc
scas
adc
pushf
xor
xor
sub
fimull
shll
jnp
out
or
sub
inc
xchg
adc
fistpll
pop
xchg
mov
fmuls
call
or
lahf
adc
aad
lds
mov
mov
jne
gs
rolb
mov
movsl
and
jb
aad
lds
mov
mov
jne
gs
rolb
mov
movsl
and
jb
aad
lds
mov
mov
jne
fs
inc
mov
cmpsl
es
push
test
divl
bound
inc
or
fimull
mov
jp
popf
stos
lods
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
mov
pop
mov
pop
push
loopne
or
add
add
or
add
pop
add
push
lock
testl
push
add
add
add
add
add
testl
cmp
sub
add
add
add
add
add
add
dec
add
xor
add
jmp
stos
add
sub
es
add
add
xor
add
dec
add
add
add
add
cltd
add
add
add
add
lds
adc
xchg
inc
or
add
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
in
add
push
add
add
clc
add
add
add
add
add
les
dec
add
add
adc
jle
jmp
xor
add
add
les
pop
add
add
mov
add
push
lock
push
movsl
add
push
add
add
add
pop
add
add
js
pop
add
insb
add
jp
stc
add
add
add
add
add
add
jns
lock
add
lret
add
add
add
dec
add
filds
add
lahf
add
xor
insb
add
add
fildl
ja
push
add
flds
lret
add
lock
testl
lret
add
add
lret
add
add
add
add
add
test
or
push
add
xchg
add
add
add
add
add
add
add
add
sbb
xor
in
add
add
add
add
add
jnp
roll
add
add
add
add
add
add
add
lds
verr
mov
add
add
add
add
add
add
add
cmpsl
add
add
and
add
add
add
pop
add
add
push
add
add
add
add
cmp
mov
mov
add
pop
add
add
add
add
add
add
test
insb
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
lds
mov
mov
add
add
pop
add
add
add
add
add
add
add
pop
add
pop
add
add
mov
add
add
add
push
add
js
mov
add
out
in
add
add
inc
or
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
stc
add
addl
stc
add
sub
aaa
add
add
add
add
pop
add
add
add
add
add
cltd
add
add
add
add
add
add
push
add
add
add
stos
add
imul
add
add
mov
add
add
add
add
add
pop
add
lods
add
add
add
add
in
add
sbb
in
stc
pop
mov
nop
es
in
sbb
pop
data16
pop
enter
adc
cmp
test
stos
sub
jne
mov
jg
add
xor
ljmp
jnp
mov
fimull
icebp
cmp
jmp
push
push
imul
mov
sbb
mov
cmpsl
inc
jnp
fists
mov
mov
mov
jnp
dec
std
fldcw
push
out
push
out
add
pop
ficomps
out
xor
fimull
mov
and
inc
rclb
mov
dec
ret
adc
add
stos
jns
dec
lds
pop
sub
inc
call
ljmp
andb
ret
cli
and
mov
mov
cs
mov
mov
xchg
shlb
repnz
cmp
ret
lahf
mov
not
fcoml
push
popa
push
xchg
mov
ss
or
and
adc
popa
fabs
fimuls
cltd
cmpsl
add
test
daa
mov
or
sbbl
loop
xorl
mov
in
xor
xorb
jmp
sbb
lds
mov
outsb
in
aad
aad
mov
push
pop
and
mov
in
fucom
mov
addb
movsb
shlb
mov
aas
cmp
mov
rcll
pop
test
cmp
lock
imul
loopne
inc
pop
add
stos
dec
idivl
repz
fistpll
push
sbb
sbb
das
sbb
push
ljmp
rcrb
pop
jmp
cmpsl
and
add
ljmp
shlb
xchg
insb
jg
jle
sbb
xor
push
insb
push
xchg
mov
mov
dec
test
or
mov
adc
out
cmpsb
sub
mov
cs
repz
nop
push
xchg
fcom
adc
adc
das
mov
or
insl
mov
xchg
aaa
fimuls
push
lahf
in
jbe
std
popa
sbb
rcrl
jmp
ljmp
outsb
das
or
ss
jbe
aad
mov
rorb
cmp
and
xchg
mov
cmc
mov
push
xor
add
push
jb
cmpsb
std
fcmovb
xor
lret
ljmp
ljmp
mov
insb
xchg
jge
jo
sbbb
fmuls
and
or
push
fists
sahf
pop
mov
sbb
pop
pop
jmp
scas
dec
lods
jmp
add
pop
push
or
xchg
fmull
cmp
into
cmp
add
cmp
cmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
