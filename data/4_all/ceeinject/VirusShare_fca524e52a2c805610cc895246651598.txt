call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbb
cmp
cmp
xlat
and
mov
arpl
jae
push
sti
push
jg
or
pop
jecxz
repz
imul
and
adc
inc
jmp
mov
fwait
repz
sub
fldt
inc
test
shll
adc
adc
inc
fidivrl
testl
mov
test
mov
sahf
mov
dec
mov
div
mov
push
out
insl
mov
push
adc
xchg
es
inc
adc
in
dec
xor
fdivrl
repz
pop
aas
int
mov
scas
mov
mov
mov
arpl
movsb
ret
dec
xor
mov
aas
jecxz
in
and
lret
mov
leave
jmp
in
push
push
sbb
cmpsl
ret
ret
xchg
loopne
mov
inc
out
adc
inc
out
in
xchg
push
cmp
mov
pop
test
daa
xor
pop
add
cwtl
push
sti
mov
pop
movsb
cmp
xor
jnp
int
pop
cmp
sub
sbb
fs
inc
jmp
jb
jns
dec
adcb
mov
popf
imul
fwait
dec
fmuls
push
into
jl
push
movsl
and
fldt
dec
repz
xchg
xor
ds
mov
adc
ja
addr16
pop
loop
out
dec
repz
imul
and
adc
arpl
jae
inc
jmp
sbb
sub
jnp
imul
and
adc
arpl
jae
inc
jmp
sbb
jmp
xchg
fisubs
cmp
mov
pop
fmuls
das
pop
and
push
pop
popf
outsl
and
pop
fldl
sub
mov
movsl
movsb
lods
sbb
lcall
das
aad
push
pushf
add
inc
outsl
pop
loopne
lret
cli
inc
cmp
outsl
xchg
sbb
shlb
push
cmp
add
xchg
stos
cmp
mov
xchg
cmp
pop
cmp
jl
push
insl
cli
andl
and
add
and
pop
rcr
icebp
dec
add
jle
mov
iret
and
xchg
loopne
mov
and
mov
jge
into
ss
mull
mov
add
adc
lret
test
push
jne
push
adc
dec
pusha
out
jno
push
ret
inc
jnp
repz
ja
sbb
push
add
adc
scas
xor
fcoms
pop
mov
and
dec
xchg
rcl
dec
xchg
repz
nop
mov
pop
in
mov
xchg
sbb
clc
xchg
inc
data16
sbb
es
shll
xchg
bswap
push
orb
scas
xor
pop
cmp
sub
pmulhw
push
ret
dec
call
cmp
mov
or
add
cli
ljmp
sub
mov
sarb
cwtl
call
pop
pusha
lahf
xor
jno
testl
nop
js
ja
jl
adc
xchg
adc
mov
mov
xchg
imul
mov
repz
mov
insb
dec
out
push
stc
push
out
fistpll
iret
jae
jmp
je
pusha
sbb
dec
je
movsb
enter
idivl
mov
cmp
push
jmp
loope
test
mov
sbb
mov
push
jbe
scas
push
fdivrl
dec
mov
ret
and
daa
sub
jp
jb
je
into
movsb
shrb
loopne
clc
stos
or
or
loopne
push
lret
xlat
hlt
aam
fwait
xchg
and
in
mov
or
or
dec
out
push
or
or
cmp
or
fsubrs
mov
nop
jle
cmpsl
mov
sub
pop
int
sarl
sti
inc
jne
sbb
movsl
jnp
arpl
leave
aam
leave
stos
mov
sub
cli
pop
cld
dec
add
adc
scas
mov
scas
xchg
ds
ljmp
mov
loop
pop
mov
adc
ljmp
xor
call
pop
xlat
sub
sbb
daa
and
add
cmc
dec
ficoms
pop
add
mov
jno
mov
xchg
test
dec
xchg
jge
sub
hlt
xchg
and
int
jp
mov
jb
adc
pop
push
stos
xor
test
and
out
and
in
dec
push
push
mov
outsb
and
and
mov
dec
stos
add
aam
testl
dec
dec
mov
inc
nop
sub
daa
dec
daa
or
bound
jge
lock
ret
leave
mov
push
outsb
xchg
or
int
dec
push
push
inc
mov
sti
outsb
xchg
pop
xlat
sbb
cmc
mov
lcall
pand
cli
test
into
inc
imul
ss
xor
pop
mov
inc
scas
lods
in
cs
or
jecxz
cs
cmc
cmpsl
mov
cmp
xor
xor
pushf
ds
cmp
and
sahf
addb
jno
mov
pop
jne
push
sarl
xchg
or
cmpb
dec
fisubrs
jae
xor
xchg
insb
cmp
mov
push
pop
lret
dec
and
sub
movsl
mov
jecxz
scas
cltd
jle
sub
rolb
jl
push
mov
adc
nop
jns
jp
pop
aaa
pop
dec
mov
mov
mov
movlps
and
mov
out
cs
pushf
scas
jbe
xor
in
pop
cli
sbb
xchg
sbbl
jns
lds
mov
popa
scas
ficompl
mov
jo
mov
mov
mov
jg
dec
pop
pop
shll
js
movsb
and
shll
push
pop
out
jmp
aam
lcall
xchg
scas
xchg
notb
aas
add
jb
add
pusha
lret
dec
xchg
int
mov
iret
out
add
pusha
and
push
dec
test
ja
xchg
mov
dec
shl
xor
pop
xchg
pop
cmp
iret
jmp
xor
cltd
sbb
cmp
pop
testl
int
adc
jbe
xchg
pushf
cwtl
dec
xor
loop
inc
pop
jp
push
jno
movsl
lods
dec
push
mov
or
push
sbb
cltd
cmc
in
or
bound
pop
dec
push
adc
xchg
jb
in
sbb
jle
loop
push
pop
dec
sub
ja
add
mov
xor
int
gs
daa
mov
testb
dec
repz
cmp
ljmp
popa
push
cld
jg
mov
sbb
rolb
rcrl
add
xchg
push
jb
adc
lds
push
and
xor
mov
push
jle
xchg
arpl
and
bound
bound
mov
inc
pop
arpl
xchg
and
xchg
out
in
sti
scas
xor
cmp
xor
sbb
sub
jbe
dec
and
add
mov
not
dec
ds
sti
lret
add
mov
adcb
ds
scas
mov
mov
xchg
push
inc
jns
cmp
pop
lods
push
in
int3
jbe
cwtl
int
in
add
loopne
xchg
jbe
mov
sahf
inc
adc
mov
jae
inc
das
mov
xchg
cli
mov
ret
fmuls
adc
pop
loop
ret
xchg
cmp
add
int
xor
lock
arpl
add
jnp
pop
xchg
xlat
push
decl
mov
je
xor
xor
cmpsb
in
cmp
into
jnp
mov
in
adc
push
inc
rcrl
inc
int
jge
fistps
fmuls
in
add
jge
iret
mov
jg
stos
xchg
xchg
cmpsl
mov
or
loopne
icebp
sub
fs
in
jle
mov
or
test
mov
fisubrs
mov
pop
xchg
adc
pop
inc
adc
mov
sbb
outsl
mov
xchg
orl
daa
je
dec
aad
rcll
mov
addb
xchg
xchg
jg
fimuls
jp
sbb
push
push
inc
pushf
mov
rol
and
outsl
push
int3
aaa
pop
sbb
stos
pusha
or
dec
daa
cld
pop
jne
ss
in
adcb
out
sbb
loop
sbb
xchg
xchg
cmp
and
idivb
sub
jge
daa
scas
mov
lret
mov
mov
mov
ret
xchg
cli
mov
ljmp
lcall
mov
add
mov
movsl
mov
scas
xchg
push
jg
dec
and
ja
fadds
xchg
jle,pn
mov
jbe
pop
push
fmull
add
adc
mov
add
sahf
mov
jbe
fcoml
xor
shll
pop
in
add
and
and
xchg
ds
data16
mov
push
inc
ret
xor
and
mov
push
jecxz
cwtl
add
or
test
cmp
xchg
mov
fisubs
add
sbb
fstps
sbb
pop
hlt
out
jno
mov
pop
xchg
ss
sahf
pop
mov
inc
pop
xor
adc
jecxz
rcll
cmp
mov
add
xchg
xchg
jge
sbb
or
mov
adcb
les
ljmp
subb
or
cmc
mov
push
dec
lock
xchg
rcrb
repz
shrb
jns
cmpsb
dec
loop
sub
movsl
lock
xor
test
into
test
lret
mov
in
adcb
jno
pop
filds
xbegin
mov
loope
dec
pop
rorl
or
stos
test
cmp
testb
jl
pop
je
pop
fistpl
stos
sbb
or
fldl2t
mov
es
inc
pushf
add
inc
ret
mov
dec
stos
outsl
mov
ror
jb
popf
and
inc
addb
jo
int3
shr
inc
jnp
add
jo
sub
add
mov
xchg
cli
out
adc
fnstenv
into
lret
mov
insl
dec
cmp
inc
mov
mov
and
jle
xchg
cwtl
cltd
nop
and
popf
cltd
in
cmpb
in
rolb
push
addr16
xchg
sbbl
dec
sub
aas
lds
fbld
lcall
ja
xorl
decl
int
sahf
arpl
fdivl
mov
rclb
jbe
add
or
outsb
xor
mov
mov
iret
in
adc
pop
cmp
fimuls
sbb
adc
cld
dec
mov
ffreep
call
inc
lock
enter
lods
xchg
and
adc
pop
xor
lret
div
out
sbb
or
mov
fstps
ret
xchg
stos
sti
lods
jbe
add
rorb
shrl
daa
popa
jmp
orl
push
inc
cwtl
sub
inc
jnp
out
pushl
out
adc
xchg
add
shlb
sahf
ljmp
adc
add
mov
inc
rcl
out
stos
jp
push
icebp
fnstcw
cmp
xchg
repz
jp
mov
jne
lret
dec
mov
scas
leave
int
loope
cltd
adc
lahf
test
sub
mov
ss
sub
mov
cltd
jne
jge
jno
mov
jbe
rcll
divl
mov
inc
jb
in
cli
inc
jae
sbb
push
test
outsl
push
sub
repnz
xor
pushf
enter
fiaddl
cmp
mov
shlb
icebp
into
mov
jmp
outsl
sub
dec
ljmp
mov
jns
jno
test
xor
push
aad
rclb
cmp
push
fstps
testb
mov
addb
xchg
mov
jmp
dec
push
fucom
mov
push
add
and
out
aas
outsl
dec
push
fsts
hlt
jl
mov
shlb
cmp
cli
pop
jbe
adc
jle
cmp
jecxz
jge
shlb
inc
out
xchg
arpl
add
push
push
mov
hlt
push
mov
stos
int3
pop
cmpsb
ljmp
dec
xchg
mov
rol
adc
insb
nop
xchg
pop
mov
scas
pop
mov
icebp
inc
in
mov
mov
repz
lock
xlat
movsb
cmp
je
push
cmp
pusha
lahf
pushf
sahf
mov
enter
loope
jns
fdivs
sub
pushw
push
pop
ret
fsubl
or
call
push
cwtl
sub
bound
out
jbe
xor
pop
out
stc
out
data16
pop
loop
jecxz
int3
xlat
cltd
andb
fisttpll
and
out
into
dec
xchg
pause
pop
sub
or
cli
jnp
jmp
sub
or
fcompl
cmp
dec
add
pop
adc
cmpsl
fdivrp
std
sbb
inc
jge
in
movsb
jbe
stc
shrb
add
rolb
jb
hlt
xchg
mov
jle
lock
lcall
xor
aad
add
mov
shlb
in
aas
mov
dec
pextrw
xor
cmc
or
adc
es
pop
ret
les
push
bound
push
mov
sbb
inc
iret
sti
out
std
in
addl
sbb
add
fstps
xor
das
outsl
subb
inc
call
das
insl
add
lds
jo
mov
jns
mov
add
shll
xchg
inc
mov
pop
pushf
and
mov
rcrl
pop
data16
sbb
mov
lds
out
loopne
push
cs
xchg
push
dec
and
mov
mov
pop
sbb
lahf
out
sti
pop
int
imul
push
sub
cli
push
jbe
cmpsb
inc
or
xchg
pop
push
mov
sub
or
out
cmpsb
jmpw
pop
mov
dec
fmulp
jle
push
jmp
cmpl
cmp
adc
loopne
lahf
xlat
mov
cli
iret
and
sti
cmpw
adc
mov
ljmp
push
xchg
push
idivb
bound
sub
shrl
icebp
or
cmp
adc
icebp
xchg
mov
loop
xchg
mov
stc
dec
je
xlat
add
push
lds
push
xchg
jb
push
int3
popw
stos
leave
in
inc
pop
xchg
cmpl
gs
test
lock
jmp
add
or
xchg
sub
adc
lock
push
out
mov
push
dec
popa
sar
mov
icebp
xchg
jnp
dec
cs
data16
adc
sbb
mov
sbb
js
push
xchg
xor
mov
add
mov
daa
imul
mov
mov
xor
dec
dec
jne
xchg
sub
out
shll
out
xchg
lock
mov
lock
fwait
nop
shlb
stc
and
mov
or
stos
addb
fdivrl
rorl
ffree
mov
shll
out
mov
and
cmp
push
popa
jb
andb
arpl
sub
daa
jmp
jp
es
out
cltd
mov
cmp
gs
fcmovb
jg
pop
mov
fildl
cmp
in
inc
loop
test
testb
out
or
add
pop
xchg
dec
int3
mov
int3
push
out
jmp
fdivs
xor
cmp
mov
shlb
sar
mov
sub
jge
es
adc
sub
xchg
stos
out
ja
rorl
stos
lods
outsb
in
dec
ljmp
jae
in
xchg
ss
aad
les
add
jg
shlb
arpl
mov
xor
mov
pop
jg
inc
or
lahf
stos
addb
cmp
and
fbstp
je
xchg
stos
ss
dec
or
add
fsubp
push
stc
jle
lcall
adcl
push
int3
sarl
es
jmp
icebp
notb
negl
mov
cmp
mov
push
jne
movsb
cmp
ret
mov
push
mov
mov
or
inc
sub
sub
roll
insl
xchg
sbb
mov
out
push
sbb
outsl
in
ret
cltd
push
inc
lret
cmpsb
mov
jo
sub
adc
in
stos
insb
pop
pop
mov
int3
mov
lcall
mov
cmp
xor
cmp
mov
mov
cli
lret
adc
add
cmpsb
stos
lods
pusha
jg
es
or
loop
dec
in
ja
in
iret
lea
pusha
sub
fdiv
imul
jmp
push
imul
scas
jno
idivb
jns
hlt
mov
mov
lcall
sbb
scas
cmp
std
and
dec
sarb
add
scas
stos
sub
xchg
jle
loop
cmp
mov
add
inc
insb
lret
jno
inc
cld
or
jnp
arpl
dec
inc
popf
in
pop
xor
pushf
into
mov
xor
mov
jl
cld
loop
and
fadd
pop
inc
pop
and
leave
popf
ret
inc
rcll
xchg
mov
fnstenv
pop
jg
fdivl
ljmp
popf
push
mov
sti
testb
ja
jbe
movsl
pop
push
iret
sbb
inc
mov
cmp
nop
add
nop
adc
test
add
jns
cmp
sbb
aad
mov
outsb
stos
into
fwait
or
popf
jl
mov
xlat
sbb
out
cwtl
orb
xchg
dec
inc
mov
aam
cmp
ja
push
inc
jns
mov
popa
cmpsb
sbb
xchg
icebp
out
add
fdivl
xor
mov
outsl
jg
mov
shrl
jne
mov
loop
inc
jge
mov
add
arpl
jp
int
cmp
or
xlat
js
jnp
popa
jp
outsl
cmc
arpl
dec
cmpsl
rclb
or
les
sbb
pop
ret
out
sub
pop
mov
into
fwait
pop
cmp
test
cmpsb
std
add
testb
arpl
and
test
popf
inc
pop
loopne
dec
addl
push
adc
imul
push
lahf
pop
js
js
incl
mov
push
outsl
inc
push
fmul
aas
sub
stc
mov
jb
repz
inc
adcb
mov
outsl
cmp
in
cltd
lret
nop
loopne
shlb
dec
scas
int
aam
xchg
xor
mov
push
int
mov
mov
cmp
mov
pushf
xchg
and
scas
push
fs
push
xor
inc
push
lahf
stos
popf
test
dec
cli
or
push
jnp
outsl
out
fdivl
clc
mov
adc
pushf
push
popf
iret
scas
push
scas
and
jne
pushf
arpl
cli
and
cmp
mov
sub
jo
or
sbb
lock
mov
inc
lea
pushf
mov
sbb
fmuls
adc
or
mov
les
test
insl
add
inc
das
xor
cmp
lret
jge
xor
aaa
fcomps
jp
mov
cs
cmp
call
mov
testb
int
mov
movsb
icebp
dec
aas
outsl
inc
mov
orb
mov
cmp
ljmp
ljmp
and
sub
pop
mov
inc
jb
xor
xchg
cmpsl
arpl
mov
mov
sub
and
cmp
and
lret
sub
xlat
lock
xor
loop
or
test
xor
cltd
in
jmp
orb
jno
jmp
sub
xor
mov
out
cmpsl
lretw
add
sub
ja
pop
stos
hlt
jno
lea
push
popl
fwait
jmp
popa
mov
adc
enter
popf
cmpb
cmp
sbb
movsb
lea
fimuls
int
stos
xor
sbb
mov
jl
out
repnz
das
xor
mov
insl
pop
fcmovnb
lahf
ficoml
jg
imul
or
dec
cmc
cmp
test
notb
sbb
dec
test
lods
ljmp
push
mov
fsubl
nop
test
stos
fwait
dec
dec
push
xor
mov
xchg
jg
fnstsw
notl
ficompl
sbb
add
jle
xchg
aam
ret
jnp
and
loopne
loop
les
xchg
or
pop
mov
jns
cmp
sbb
cwtl
mov
fistpl
cmp
jne
and
rcr
jp
mov
aad
in
lahf
sbb
nop
xchg
mov
insb
xchg
mov
scas
enter
andb
ja
add
dec
jns
sarl
lret
stc
pop
sub
cmp
lea
xchg
push
lret
push
std
frstor
pop
addb
cmp
and
pop
inc
fstp
and
in
mov
aad
lcall
cmpsl
pushf
fs
dec
xor
add
or
sub
leave
mov
mov
cmp
inc
push
stos
pop
ss
mov
enter
lods
aaa
out
jecxz
lahf
jae
xchg
cmp
pop
test
les
and
dec
cmp
mov
stos
mov
pop
mov
xchg
jecxz
mov
aad
or
adc
xchg
push
gs
dec
mov
sub
ret
bound
xchg
xor
jae
dec
fbstp
lret
sbb
push
outsb
cltd
test
ret
mov
or
mov
mov
clc
bound
push
jle
mov
fwait
xlat
adc
inc
mull
insb
stos
xor
mov
sub
adc
xor
adcb
scas
loop
jp
je
mov
int
jo
gs
mov
adc
lahf
dec
faddl
popf
inc
cmp
test
jno
xchg
pop
or
inc
pop
inc
xor
ret
gs
push
jmp
into
aas
pop
aas
sub
ja
mov
pop
jecxz
mov
jae
or
hlt
sbb
pop
cltd
push
dec
sti
inc
xchg
jbe
das
das
popa
mov
in
scas
mov
push
jp
int3
sbb
int
or
adc
test
daa
andb
mov
mov
popf
and
sbb
pop
sbb
xor
jecxz
cmpsl
jns
int3
xlat
mov
in
nop
cmpsb
dec
sbb
pop
les
pop
rcrl
repz
or
cmp
jl
lret
leave
or
lds
loop
rcr
aas
inc
add
sarl
loope
mov
into
sar
cmp
les
push
add
aam
inc
fst
add
test
inc
jl
testl
mov
aas
mov
mov
insb
sub
jnp
imul
and
adc
arpl
jae
inc
jmp
sbb
sub
jnp
imul
and
adc
arpl
jae
inc
jmp
sbb
sub
jnp
stos
rcrl
add
jae
inc
add
mov
or
jnp
jmp
fwait
and
add
mov
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
outsb
mov
lcall
mov
jle
outsb
sbb
dec
cmp
dec
das
fisttps
push
jp
mov
lcall
scas
ficompl
or
aas
sub
ds
cs
push
sub
jp
mov
lcall
scas
ficompl
mov
sub
pop
cmova
mov
sahf
jmp
or
mov
adc
pop
mov
dec
bound
sbb
dec
mov
mov
pop
sub
mov
aas
shll
jnp
out
mov
pop
scas
mov
stos
sti
push
jle
ds
ljmp
popf
xchg
dec
repz
and
jle
mov
pop
aad
push
and
push
xchg
add
add
lea
fildl
lret
cmpsb
iret
sahf
decl
dec
push
aad
cli
insl
pop
inc
cmpsb
fwait
xchg
icebp
testl
int3
dec
inc
pop
mov
dec
sbb
cmp
cmp
cs
pop
jle
jnp
mov
lcall
scas
ficompl
or
pop
sub
ds
cs
push
push
adc
ret
adc
cmpsb
lret
fcmovu
movsb
jmp
push
outsl
fsubrl
inc
sub
bound
jae
jp
mov
stos
xchg
fildl
idiv
sub
add
dec
sub
sub
dec
movups
mov
ror
ret
dec
scas
ficompl
or
pop
sub
ds
cs
push
push
jp
mov
lcall
scas
ficompl
or
pop
sub
ds
cs
push
push
jp
mov
rcll
pushf
std
int
movsl
data16
xchg
jp
imul
adc
aas
mov
stos
add
jmp
adc
repz
loopne
push
jl
out
call
fwait
or
stc
bound
push
scas
scas
inc
pop
dec
or
addb
ficompl
call
mov
fisubrs
pop
sbb
adc
inc
and
dec
adc
arpl
lds
cmp
push
roll
xor
push
iret
adc
jmp
mov
push
pop
jl
test
nop
aad
incl
jp
mov
xchg
divb
jne
ror
dec
mov
scas
mov
dec
cmp
xchg
lret
adc
jb,pt
dec
push
stos
push
dec
mov
pop
mov
mov
repnz
adc
cmp
rcr
popa
test
out
test
cmp
test
movb
jg
call
sbb
rorb
shl
jo
cld
cwtl
pop
jnp
out
test
hlt
aad
xchg
xchg
lahf
int3
out
and
adc
int
and
or
mov
mov
sarl
es
mov
test
cmp
inc
clc
push
mov
jmp
cltd
add
in
insl
nop
xchg
dec
outsb
movl
lods
or
dec
xchg
and
sahf
xor
cmp
addl
sub
ret
fsts
mov
push
push
xor
clc
add
js
sbb
xor
int3
shr
arpl
xchg
xor
inc
or
insb
ret
out
ja
mov
aad
in
popa
adc
cli
dec
inc
and
dec
pop
jge
and
jp
rcl
mov
mov
jle
and
fidivrl
sub
dec
cmp
or
hlt
mov
imul
jge
ss
xor
cli
or
fsubrp
push
lcall
je
jge
les
subl
lahf
sub
jne
xor
jmp
loop
rcr
mov
adc
push
nop
pop
call
pop
orl
mov
fisubs
fiaddl
notl
xor
jmp
insl
fs
push
into
es
or
cltd
mov
inc
mov
xchg
dec
fdivr
ds
js
ljmp
jb
add
sub
push
mov
sbb
push
cmp
push
jnp
push
lock
pop
xor
cmp
mov
sub
cmp
loop
dec
dec
hlt
sarb
xchg
repz
jo
add
adc
out
cmpsb
xchg
sbb
jo
cltd
jno
je
les
pop
add
test
pop
movsl
mov
lahf
add
sub
sub
xchg
cltd
push
lret
fwait
mov
dec
data16
lods
or
aad
imul
xor
popa
or
jg
lahf
adc
loope
pop
xchg
mov
dec
push
cmc
xchg
aam
fs
pop
sbb
or
sti
mov
mov
test
clc
loop
or
sub
mov
call
nop
sbbl
sub
push
and
push
mov
add
xchg
cltd
sub
or
inc
adc
jle
dec
sbb
adc
push
sahf
xor
mov
xor
or
scas
aaa
xor
fs
jns
sbb
mov
repnz
aaa
imul
loopne
out
sbb
push
aas
arpl
jae
jecxz
xor
mov
adcb
or
sub
xchg
jne
scas
mov
push
sbb
and
dec
lods
mov
test
inc
adc
lods
add
dec
out
scas
or
lret
mov
adc
jge
js
xchg
mov
pop
sbb
pusha
jne
fsub
shll
sti
neg
jnp
movsl
lods
addr16
rcll
pop
gs
sbb
scas
es
stc
into
sbb
in
pop
xor
add
pop
fwait
repnz
inc
jg
mov
xchg
jp
pop
arpl
inc
fcoms
or
je
fadd
call
pop
sbb
aad
push
push
jo
adc
nop
sbbb
jae
adc
lret
loope
pop
cmpsl
mov
leave
mov
mov
add
pop
cmp
cltd
add
in
movsb
in
dec
rcrb
jge
push
data16
fcoml
hlt
inc
or
aaa
adc
or
xor
loopne
scas
push
dec
stos
aad
scas
fs
xor
out
add
pop
jbe
jge
decb
lret
inc
stos
xchg
test
or
xor
dec
std
pop
imul
mov
jl
sti
push
stos
xor
incl
int
out
add
sbb
and
xchg
lock
out
shl
fwait
xchg
and
push
pushf
iret
mov
dec
mov
pusha
bnd
add
pop
mov
add
mov
psllw
xor
jno
leave
mov
rorl
sbb
pusha
sbb
shrb
cmc
xorb
xchg
jmp
rclb
dec
adc
jmp
or
sub
lret
je
mov
xchg
lcall
test
xor
adc
sub
jno
push
addr16
jo
outsl
push
xchg
es
rol
mov
shlb
sub
mov
fdivrp
or
in
mov
loopne
push
insb
pop
pop
jo
addr16
xchg
insl
add
inc
push
push
pop
mov
sbb
mov
movsb
cltd
out
pop
sbb
xchg
inc
pusha
or
jp
fs
ja
sti
xchg
test
jae
push
jno
and
jmp
mov
cwtl
int3
cmpl
or
cmpsl
pop
dec
push
movsl
sub
loope
jno
xor
fucomp
iret
jle
mov
inc
es
out
pop
ret
ds
xor
mov
outsb
out
pop
inc
push
mov
int3
stos
scas
push
sub
sar
xchg
inc
xor
cmp
aas
mov
sbb
jae
lock
movl
mov
int
inc
or
ja
adc
mov
lds
jno
sub
and
push
mov
jne
mov
add
movl
loop
in
inc
cmpsl
sarb
or
mov
and
xchg
jno
mov
sub
add
pushf
ja
push
addr16
xor
and
das
adc
or
mov
mul
and
cli
ja
and
js
push
sahf
mov
lret
rolb
gs
aas
ja
pusha
lcall
pop
mov
call
int
rcrl
daa
imul
hlt
jg
pop
pop
mov
and
push
mov
jb
add
out
mov
jo
repnz
js
push
les
sahf
je
mov
out
ds
gs
mov
mov
aad
das
cmp
push
aas
adc
adc
daa
adc
mov
mov
mov
pushf
push
push
and
stos
jb
sbb
leave
xchg
imul
rcll
aad
fiadds
inc
fsts
pop
mov
popf
push
cs
enter
out
mov
in
dec
pop
mov
out
push
jae
int
loop
js
push
or
lds
ret
inc
sbb
add
repz
fnstcw
xor
ds
and
pushf
js
hlt
int3
mov
push
inc
pop
idivb
lahf
and
imul
repz
mov
dec
mov
mov
sub
inc
lea
ja
jge
fwait
out
add
jns
popf
pop
ficomps
sub
mov
inc
mov
out
xchg
push
jge
mov
ret
mov
test
adc
insl
add
mov
aaa
xor
cmpsb
add
mov
das
in
dec
mov
movaps
xchg
shlb
or
xchg
movsb
push
sub
outsb
xor
pusha
mov
ljmp
cwtl
movsl
popf
icebp
sbb
ljmp
stc
in
mov
inc
dec
sahf
sbb
adc
cmp
outsb
cmpsb
dec
jge
fldl
ja
mov
inc
xlat
cmc
pushf
sbb
sti
mov
daa
sbb
add
lods
inc
dec
shl
jne
loope
cwtl
jg
loop
mov
adc
sub
les
dec
mov
movsb
jmp
fnstcw
jp
aas
in
aam
fiadds
aad
out
imul
or
xchg
or
and
pop
imul
mov
imul
or
jo
sbb
jmp
xor
fcompl
add
or
mov
pop
xor
aam
jp
push
imul
mov
and
push
mov
les
add
dec
out
push
subb
cmp
push
jne
jae
push
cmc
mov
ss
addr16
das
fsubr
mov
xor
fldl
xchg
orl
push
je
sub
jnp
popa
repnz
pop
push
jg
xchg
cwtl
add
out
stc
popf
cmc
cli
outsb
add
into
sti
push
xor
inc
and
adc
mov
pop
pop
lea
and
xchg
in
sbb
call
xor
repnz
in
movsb
mov
sub
mov
inc
jbe
lock
jno
inc
lret
mov
loopne
out
fcmovnu
jge
and
and
jle
mov
fsubp
cli
and
popa
insb
test
xchg
dec
push
ljmp
jmp
out
shr
sbb
cwtl
pop
adc
std
filds
out
mov
pop
push
sub
pusha
xlat
mov
mov
sub
and
cmp
lds
adc
xchg
pop
stos
aam
jmp
rorl
and
add
xchg
jnp
sbb
rcr
cmc
ljmp
icebp
in
ret
fcoml
sbb
pop
and
test
adc
jo
rol
addb
jnp
out
adc
mov
push
call
arpl
or
cwtl
or
jmp
jg
inc
pop
cmp
xchg
or
outsb
testb
int3
mov
repz
fiaddl
xchg
movsl
popl
jecxz
or
fisttpl
inc
jnp
mov
sahf
inc
mov
push
in
mov
xchg
dec
pop
cld
test
sub
pop
jae
sbb
rcll
push
ret
bound
inc
mov
cld
insl
fstpl
cli
and
idivl
pop
imul
sbb
or
xlat
pop
cmp
inc
ficomps
lcall
xlat
dec
out
xchg
inc
lds
mov
xor
mov
lcall
sti
scas
push
mov
stos
cmpsl
pop
xor
pop
lahf
jg
push
dec
sub
xchg
or
sub
lods
or
jle
xor
push
add
xchg
out
cmc
pop
inc
addb
movsb
dec
gs
aam
dec
pop
push
mov
inc
cld
sbb
inc
push
and
mov
jg
js
mov
addr16
mov
adc
arpl
xchg
mov
pushf
lea
iret
xor
cmpsb
xchg
scas
jg
xchg
cmpsb
scas
lods
frstor
sub
push
inc
lea
add
cmp
cmpsb
decb
inc
idiv
out
adc
lea
cmp
js
or
push
ret
fisubrs
inc
scas
cmp
push
mov
xchg
jle
sub
out
lret
insl
test
lock
adc
xor
mov
xlat
xchg
into
test
cld
push
ljmp
push
dec
movsb
fidivl
push
add
movsl
push
imul
or
push
cmp
and
lds
fwait
jmp
sbbl
sub
stos
push
jg
pop
sti
jmp
fstpl
icebp
es
pop
loope
jecxz
in
add
ret
popl
xlat
insb
andl
mov
pop
push
loope
movl
mov
addl
add
movsl
cmp
imul
or
push
sbb
pop
xor
mov
lret
bound
jb
sbb
in
sarl
lcall
repnz
sbb
mov
push
cmc
mov
scas
clc
lods
mov
adcl
or
out
inc
pop
mov
dec
cmpsl
pop
mov
rolb
ror
mov
cmp
out
je
mov
jae
insl
call
push
lods
xor
call
mov
pushf
in
add
pop
in
adc
cmpsl
test
pop
bnd
fisttpll
dec
aam
mov
mov
addr16
cmpsb
fadds
mov
add
mov
dec
stos
push
or
jb
dec
sbb
adc
sub
sub
xchg
rolb
popf
in
pop
jo
lods
cmc
dec
scas
add
mov
sbbb
or
sbb
int
sub
dec
adc
xor
add
test
add
xchg
cld
imul
pop
scas
cwtl
repnz
ja
jecxz
in
adc
cli
sub
xchg
push
fnstenv
adc
sahf
jo
inc
inc
xor
push
push
mov
das
mov
jge
push
fwait
jmp
popa
pop
xchg
xor
mov
hlt
mov
hlt
mov
aad
jecxz
shl
mov
ds
scas
cmp
fucomi
test
jmp
mov
or
mov
jne
sbb
hlt
nop
pop
mov
sub
jmp
std
movsb
lods
or
sti
mov
mov
push
jecxz
in
adc
out
mov
hlt
movsb
cmc
push
pop
repz
jns
push
and
add
xchg
out
add
sahf
cmp
std
sbb
and
inc
or
stos
out
rcrb
sub
mov
pusha
fmuls
mov
adc
mov
clc
mov
dec
push
fiaddl
lcall
cwtl
dec
lret
inc
in
repnz
lock
mov
mov
aad
mov
adcb
xchg
in
mov
jno
cmp
jo
arpl
mov
sbb
arpl
andl
pop
sub
ss
sub
lcall
cmp
cmpsl
pop
ja
adc
mov
mov
popf
adc
jns
lods
in
inc
add
jno
int3
jp
lds
ja
ljmp
lcall
mov
xor
lods
rcll
pop
sub
or
pop
push
jo
or
test
and
test
xchg
mov
out
lods
or
jbe
int3
cmp
push
in
or
ret
and
push
or
mov
xchg
jns
sahf
inc
dec
rorl
mov
test
in
mov
sar
shrl
push
add
jae
add
jp
push
push
bound
mov
imul
adc
pop
out
fistpl
fdivl
and
es
or
inc
mov
cmp
sub
mov
adcw
sub
sub
enter
xchg
push
sbb
jge
lahf
cmp
sub
pushf
push
ss
push
push
lds
cmp
data16
mov
shll
ret
jo
dec
jg
jae
imul
jmp
cmc
cmpsl
push
inc
jp
inc
imul
std
clc
mov
es
mov
adc
xchg
or
inc
popf
pop
cmp
cmp
test
fnsave
nop
movsl
xchg
mov
fcmovne
xchg
test
jp
incl
push
xchg
lret
es
mov
sub
shll
cli
ret
pusha
fbld
pop
gs
fs
or
roll
pusha
rcl
roll
add
adc
fidivrs
fsubl
test
test
pop
and
hlt
insb
xlat
sbb
inc
repz
xchg
and
sbbl
sbb
push
in
adc
ret
pop
inc
xchg
enter
dec
gs
popf
mov
jg
xchg
je
pop
xchg
test
fsubrs
popf
mov
sarb
outsb
mov
mov
inc
out
push
xor
jge
jno
clc
aaa
xor
ja
xor
mov
cltd
ja
fwait
stos
mov
jne
xchg
aad
push
fstps
or
mov
or
subl
jbe
adc
xchg
pop
sbb
or
cmpsb
aam
and
addr16
xchg
es
xor
popf
cmp
in
pop
jae
inc
mov
and
dec
dec
icebp
inc
ret
add
sub
push
xchg
mov
fbstp
out
add
sarb
mov
lods
jmp
loope
pcmpgtd
xor
sbb
cld
sbb
out
lret
iret
add
bound
jns
push
sub
lods
ljmp
or
cli
dec
out
xor
mov
or
mov
popf
lea
and
mov
mov
jbe
fistpll
pop
insb
mov
cli
bnd
xchg
ficomps
cmp
mov
fnstsw
add
mov
xchg
imul
ss
push
dec
out
aas
adc
jno
jp
repnz
or
jbe
imul
jge
and
test
dec
fildll
shrl
enter
or
movsb
out
pop
sbb
dec
pop
movsl
in
loope
cli
bound
sub
arpl
nop
or
add
pop
jns
or
sar
in
pop
lret
mov
pop
ds
test
dec
sarl
fisubl
in
dec
fldenv
stc
dec
adc
push
xchg
push
sbb
push
xchg
sar
stc
mov
jle
sub
add
dec
stc
dec
mov
scas
addr16
lods
xchg
sub
adc
ror
xorl
dec
push
adc
dec
mov
jno
test
ret
add
stos
inc
insb
movsl
call
ds
sub
cltd
gs
cmp
mov
imul
xchg
sub
in
rcrl
pop
insb
imul
stc
in
mov
xor
mov
xchg
je
in
mov
xlat
nop
push
loope
mov
or
sbb
pop
ljmp
fs
jno
dec
jae
loope
mov
call
mov
xlat
insb
movsl
dec
imul
jne
mov
mov
fsubrl
inc
les
adc
aad
push
gs
icebp
test
cld
sbbb
mov
sbb
cmp
add
push
ds
inc
lods
out
jg
mov
mov
into
loop
jns
jnp
popa
stos
imul
xor
cmp
jmp
mov
ret
pop
xchg
xchg
roll
inc
movsl
sahf
adc
pop
add
add
shrb
push
repnz
push
gs
aas
dec
cwtl
iret
xchg
imul
popa
push
js
xor
inc
pop
call
dec
lea
ja
mov
push
imul
dec
sub
mov
pop
dec
and
repz
loope
sub
cmpsb
or
jmp
loop,pt
stos
js
ret
in
fiadds
lods
mov
fbstp
arpl
jns
adc
inc
bound
lods
enter
test
divl
pop
fdivrl
push
loope
arpl
fs
rorb
hlt
in
xor
clc
inc
sub
mov
loope
pop
in
loope
pop
push
dec
sti
dec
in
outsb
int
rorl
loopne
bound
nop
push
xor
xchg
pusha
out
lods
adc
jp
jle
cmc
scas
jae
out
and
xor
mov
inc
stos
xchg
jb
outsb
push
loope
adc
hlt
mov
and
dec
pusha
add
xchg
aas
pushf
mov
cwtl
xchg
jge
mov
je
jmp
push
pop
jne
daa
sub
dec
ret
ss
pusha
push
push
jge
pop
repz
idivl
or
cmc
lods
imul
xchg
mov
jne
stos
aas
lods
mov
inc
es
xchg
push
ljmp
add
ret
push
enter
movsb
xor
inc
cmpsb
mov
sub
test
mov
jnp
cs
sahf
stc
sbb
jle
push
add
xchg
jns
add
out
fs
mov
aam
mov
rol
orl
dec
fpatan
jo
and
xor
movsl
loope
cld
jecxz
pmaxsw
popa
jne
stos
das
fistpll
cmp
call
and
out
xor
in
sbb
enter
idivb
mov
gs
sbb
adc
push
jmp
adc
jmp
xchg
inc
mov
aas
test
test
loope
pop
sbb
cs
jg
mov
add
push
insl
scas
lea
test
mov
leave
cmc
jno
ja
and
cmp
push
sbb
inc
mov
jge
push
loop
and
aad
in
xchg
bound
lods
pop
aaa
imul
jle
scas
pushf
mov
cmp
sbb
add
dec
fsubl
in
xlat
popa
ret
mov
icebp
sub
rorb
cld
or
jecxz
push
sbb
mov
imul
mov
lret
xor
inc
scas
arpl
pop
int
xlat
or
movsb
loop
lods
shr
fsub
sub
dec
sub
sbb
and
pop
idivb
jle
cwtl
addr16
add
push
push
into
lods
in
jbe
xor
xchg
pop
mov
xchg
push
or
rorl
lret
fsubl
pop
push
xor
mov
into
mov
sahf
ljmp
pop
sub
ds
cs
push
push
jp
mov
lcall
scas
ficompl
or
pop
sub
ds
cs
push
push
jp
mov
sbb
sub
mov
sahf
ljmp
pop
sub
ds
cs
push
push
jp
mov
lcall
scas
ficompl
or
hlt
sub
dec
ret
loope
icebp
test
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
outsl
out
jg
dec
into
pop
mov
ficomps
jmp
jle
outsb
lcall
dec
fistpll
scas
cs
outsl
out
jg
dec
into
pop
mov
jle
ljmp
iret
dec
fistpll
ret
cs
outsl
out
jg
dec
into
pop
mov
jle
fsubrl
sti
dec
call
mov
out
lods
daa
mov
cmp
or
mov
ljmp
jne
push
imull
adc
xchg
das
sub
mov
lret
mov
pop
lock
push
outsl
gs
and
mov
dec
jle
add
mov
mov
into
daa
mov
addr16
or
gs
jle
jle
rorl
aas
shrb
sahf
add
lcall
cmpsl
movsl
mov
gs
aas
outsb
adc
sbb
ljmp
inc
outsl
mull
add
lods
cmpsb
aaa
or
add
data16
dec
into
pop
mov
jle
lcall
dec
fistpll
scas
cs
mov
dec
stos
pop
rorb
push
sti
dec
iret
dec
aas
xchg
push
cmp
in
inc
ficompl
pop
sar
or
clc
inc
ret
data16
movsb
insb
xchg
pushf
or
insb
lock
sub
cmp
jle
lcall
dec
fistpll
scas
cs
outsl
out
jg
dec
into
pop
mov
jle
lcall
dec
fistpll
scas
cs
outsl
dec
pop
mov
add
daa
adcb
int3
sbb
mov
lahf
cmp
adc
jecxz
jb
jle
sbb
outsl
mov
xchg
lds
jp
xchg
in
or
fstp
imul
xchg
movsl
push
dec
xchg
das
std
imul
push
xor
push
sub
xor
jne
or
mov
sub
aas
push
cld
dec
das
sub
lahf
rorb
pop
xchg
int3
push
out
push
movsb
outsb
cmp
in
xor
pop
pushf
into
mov
or
inc
sbb
loopne
jmp
xchg
mov
cmpsl
ror
stos
testb
sahf
push
mov
je
and
fmull
std
stos
mov
lds
ds
fidivrl
gs
bound
ficoml
xor
int
arpl
ljmp
in
add
push
jb
adc
or
dec
outsb
mov
test
jg
inc
fistl
adc
int
mov
pop
ret
sbb
cmp
push
jg
inc
les
int3
cs
outsl
push
cmc
jl
pusha
push
shr
ds
pushf
jnp
aad
cmpsb
jge
dec
minps
adc
sub
ljmp
push
or
gs
push
test
and
cltd
or
pop
lds
insb
mov
lods
clc
sbb
sarl
pop
lahf
pop
jmp
sarl
or
ss
call
or
mov
mov
inc
mov
sub
and
cmc
adc
movsl
jle
mov
xor
ret
movsl
cmpsb
mov
jns
cmp
sub
push
popa
std
fxch
ret
ljmp
test
in
lcall
push
rorl
adc
aam
mov
cwtl
sbb
adcb
dec
jle
repnz
stos
aam
add
std
stc
pop
outsb
pop
je
jl
adc
xchg
jg
data16
or
mov
sub
imul
hlt
adc
pop
aas
push
mov
sarl
jnp
outsb
pop
add
push
sub
xor
push
addr16
das
clc
adc
fs
adc
pop
push
lret
test
sahf
sbb
and
cmp
dec
cmc
loopne
push
jmp
inc
lods
adcb
mov
iret
sub
pop
push
aam
aam
lods
jge
mov
xlat
jne
mov
rclb
jp
pusha
outsl
dec
out
xor
test
mov
jo
cmc
iret
push
hlt
or
rcll
push
aaa
in
lds
daa
cwtl
imul
sahf
pop
shlb
sub
aam
call
fildll
push
ja
mov
cmp
mov
icebp
adc
or
out
rorb
inc
dec
repnz
orb
push
cmp
fidivs
cmp
repz
fwait
xchg
pop
xchg
ret
adc
jne
jecxz
push
daa
mov
lcall
aad
test
and
mov
mov
mov
jns
push
mov
xor
mov
js
dec
mov
repz
stos
jp
adc
mov
hlt
lcall
fs
dec
mov
jmp
or
adc
loop
adc
jae
cltd
test
cltd
pop
jmp
and
adc
cld
mov
movsb
inc
call
pop
push
dec
std
bound
push
add
pop
push
xchg
cmpsl
adc
xor
rclb
xor
aaa
test
jne
int3
push
adc
adc
aas
addr16
nop
sbb
add
adc
aad
jle
outsb
inc
aas
and
or
pop
mov
movsb
xlat
das
jmp
subl
pop
mov
mov
xchg
test
lock
daa
xor
daa
loop
cmp
ds
mov
or
push
das
jmp
mov
xchg
cmp
jbe
outsb
xchg
int
in
fstpt
mov
scas
xor
pop
jmp
and
and
es
xchg
ficoms
pop
fistpll
sahf
clc
popa
call
aam
pop
fs
and
lds
addr16
xlat
imul
stos
cwtl
inc
pop
push
mov
lret
aam
sbb
pand
cmpb
mov
pop
incl
jp
lea
push
repz
cs
mov
jp
xchg
popf
hlt
sar
fildll
sbb
fwait
sub
and
cli
pop
bound
les
xchg
ret
imul
xchg
std
mov
jne
inc
or
out
jmp
sub
and
cmp
xchg
and
push
int
popa
movsl
mov
idiv
jo
xchg
or
cwtl
incl
xchg
xchg
sbbb
push
hlt
outsl
push
xchg
add
jecxz
add
cmp
mov
xor
or
and
repz
jg
xor
adc
ds
test
dec
aaa
push
hlt
fistpl
insb
sbb
shlb
lods
or
push
lock
pop
xor
mov
in
jno
in
sub
testl
pop
or
jnp
mov
std
pop
cld
repnz
sub
dec
mov
xor
notl
jl
mov
rcrb
jle
xlat
push
inc
push
add
repnz
sbb
pop
and
xor
das
and
mov
icebp
insb
fldl
lcall
xor
fnstenv
in
jbe
fwait
sub
in
icebp
mov
cmpxchg
sbb
call
dec
rcrl
push
jg
fsubs
gs
adcb
stos
mov
mov
sarl
pop
jbe
mov
mov
xorb
lods
testl
or
lock
jl
push
inc
sbb
and
mov
push
cmp
inc
jo
adc
dec
jg
mov
sub
pop
add
lods
lea
cltd
mov
xchg
test
cwtl
and
push
pop
mov
mov
scas
imul
sub
xor
mov
xchg
dec
enter
hlt
inc
shll
xchg
jae
mov
cmp
ljmp
fiadds
mov
or
pushf
mov
lds
and
adc
push
scas
add
mov
dec
shll
js
outsl
nop
sub
xchg
fisttps
or
lret
insl
fsubp
outsl
and
insb
cs
icebp
inc
cmc
fldl
stos
sub
sbb
loopne
dec
xorb
sar
faddl
out
pop
insl
pop
pushf
rorl
inc
inc
pop
cs
dec
stos
dec
jnp
xlat
mov
dec
imul
rolb
push
cli
imul
sub
inc
frstor
adc
pop
stc
or
rcrl
sub
mov
fisttpl
sbb
cwtl
mov
push
movsb
dec
test
pusha
cs
mov
inc
dec
fwait
inc
pop
jge
mov
add
mov
xchg
jo
jbe
and
mov
leave
cmpsl
jmp
icebp
sub
mov
push
pushf
adc
pop
jae
sbb
or
cltd
outsb
or
outsl
gs
out
jg
test
into
pop
ljmp
jae
jmp
sarl
pop
adc
jg
mov
jbe
imul
mov
lret
push
jbe
out
mov
cmp
jns
int3
imul
shrb
pop
stos
cs
xor
cmc
or
call
int
and
mov
ficoms
pop
xchg
pop
fdivr
jecxz
mov
mov
movsl
insl
call
sbb
cmp
mov
pop
sub
jmp
gs
ror
or
cld
rorl
mov
jb
sti
negl
mov
lcall
cmp
pop
dec
dec
pop
xchg
dec
pop
or
loop
sar
movsl
call
test
add
jge
rcll
into
mov
cwtl
sbbl
inc
insl
inc
sarb
bound
push
lds
mulb
inc
adc
lods
mov
cmc
mov
ss
adc
sbb
adc
mov
loop
sbb
jecxz
lahf
xor
or
add
mov
lret
popa
push
das
scas
mov
ss
movsl
push
mov
negb
or
xchg
inc
hlt
jge
sti
leave
and
lahf
push
mov
test
add
push
aad
subl
inc
lret
loop
sbb
cmp
pop
lods
fiadds
jmp
xchg
sti
xchg
andb
out
push
pop
mov
jne
add
scas
jae
lea
int3
neg
fmul
scas
push
and
stos
adc
push
out
xchg
pop
sub
aas
mov
mov
sbb
xchg
clc
ffree
mov
test
jg
loope
adc
clc
lcall
pop
mov
leave
cmp
dec
loop
cmpb
leave
ljmp
int3
insl
pop
xchg
sub
lret
xchg
inc
mov
jns
and
inc
lret
mov
mov
das
jbe
cmc
xor
add
mov
push
lods
aaa
cmp
out
sub
mov
xchg
mov
push
mov
add
dec
dec
push
fdivl
mov
lods
adc
inc
in
movsb
dec
push
jg
pop
stc
sbb
aaa
xchg
sahf
pop
push
into
fimull
mov
mov
push
jge
shll
xchg
mov
ja
test
imul
lods
sub
int
enter
cmp
arpl
dec
push
test
fadd
push
jno
jl
imul
push
dec
mov
xchg
int3
or
leave
push
jecxz
stc
xchg
pop
in
je
mov
aam
push
dec
int
fmuls
and
in
shl
clc
cs
cwtl
addr16
repz
in
sub
pop
jae
adcb
jbe
push
movb
or
cmp
stos
leave
popa
int
cltd
sbb
xlat
hlt
cmp
in
add
cli
fcoms
push
ja
out
push
popa
inc
lds
inc
call
jnp
adc
lret
mov
cmp
popa
mov
movsl
mov
cwtl
push
in
cwtl
sahf
or
add
pop
mov
pop
movsl
xchg
mov
bswap
or
scas
stos
adc
std
je
dec
dec
push
jnp
out
cltd
push
sbb
dec
jp
in
push
fwait
xchg
push
stos
mov
xchg
mov
jb
mov
xchg
adc
rcrb
jns
push
mov
in
push
iret
xchg
jbe
jae
scas
add
inc
pop
jge
sbb
fisubrs
movsb
sub
fs
mov
dec
mov
lock
div
dec
dec
pop
or
test
and
stc
dec
pop
jp
shll
xorb
adc
fbstp
mov
push
aad
out
rorl
xor
xchg
adc
cltd
inc
andb
dec
pop
insl
or
out
dec
or
aad
xor
js
mov
insb
inc
test
xor
testb
sbb
repnz
cwtl
dec
dec
or
cmp
jno
mov
cli
add
add
pop
sub
test
cmc
xchg
loop
jne
push
ja
mov
xchg
and
je
cmp
rdtsc
mov
jo
sub
dec
mov
adc
js
sbb
push
add
js
jo
out
dec
add
icebp
mov
es
jns
mov
movsl
loopne
and
leave
jmp
out
fisubrs
push
aaa
addb
lea
xchg
fstpl
shrw
mov
mov
pop
jecxz
add
jo
loop
and
inc
in
sub
mov
add
test
jne
pusha
sbb
xor
mov
fcoms
das
or
dec
or
test
push
dec
in
loope
lds
xor
sti
dec
fstpt
aam
push
test
inc
add
mov
jecxz
push
xchg
insb
mov
xchg
outsb
lea
xor
mov
loopne
test
mov
mov
movsb
push
xor
mov
jge
jge
ret
test
cmpsb
sub
cmp
rcrb
mov
pop
movsl
mov
imulb
push
sbb
pop
cs
and
inc
xchg
fstpt
js
jnp
sti
mov
mov
sub
sti
cwtl
outsb
add
test
andb
adc
mov
lret
jge
add
or
sbb
sbb
dec
and
fisubl
sbb
shl
jb
lahf
test
insl
or
into
inc
push
stos
dec
sbb
pushl
mov
in
sub
call
scas
cld
test
lcall
out
jmp
add
pop
sarb
sbb
test
inc
mov
lahf
bound
test
rcrl
les
xchg
sub
lcall
mov
jnp
dec
cltd
inc
and
daa
xor
dec
cmp
cmp
xchg
fistpll
dec
int3
cmpsb
push
scas
jbe
cmpsl
jne
adc
pop
enter
inc
mov
sarl
adc
aam
add
inc
cmp
inc
inc
dec
dec
dec
and
cli
xor
cmpsl
lcall
sbb
adc
loop
jg
xchg
pop
inc
ret
movsb
cmp
dec
sbb
xor
inc
imul
int3
pop
int3
icebp
imul
call
and
jl
out
sbb
outsl
dec
int3
sbb
test
fiadds
add
cmp
sub
mov
sub
mov
pop
cmp
pop
movsb
fstl
adc
mov
add
ret
cli
popf
cmpsl
or
pop
and
pop
jb
popf
sahf
loope
adc
add
inc
cld
xor
repnz
xchg
fldln2
mov
xor
push
dec
adcb
int3
push
lret
lcall
fstpt
dec
or
jb
movsb
scas
insl
xchg
or
jns
repnz
mov
sbb
cmp
jnp
or
inc
jo
mov
inc
cltd
lret
adc
negb
dec
gs
scas
mov
sbbl
or
repnz
mov
inc
sub
loope
shufps
sub
or
xchg
orb
outsl
dec
pop
add
pop
insb
rorl
outsl
mov
or
sbb
fbstp
add
enter
fwait
into
pop
test
ret
pop
out
jb
insb
jo
lds
nop
ja
xchg
and
ljmp
xor
test
cmp
in
jl
ja
adc
xchg
movsb
mov
pop
aaa
addl
xor
nop
pop
mov
mov
jge
inc
add
out
and
push
cmp
mov
insb
mov
test
adc
fisubrl
movsb
aas
xor
or
ds
and
mov
push
add
rcr
adc
sbb
scas
enter
movsl
call
andl
adc
mov
out
pop
adc
leave
mov
sbb
xor
and
lock
adc
cmp
jecxz
paddb
or
add
dec
adc
mov
outsb
mov
out
cmp
loope
jne
into
mov
dec
mov
pushf
out
cmpsb
insl
aas
mov
test
dec
lods
mov
enter
iret
push
mov
outsb
or
xchg
fcompl
fsubr
mov
out
loopne
xor
jbe
imul
mov
mov
adc
cmp
mov
sbb
jmp
inc
movsl
jp
ss
imul
dec
pop
shll
mov
push
push
fisubl
push
sahf
pop
scas
in
cmpsb
les
push
add
xchg
xor
lds
dec
xor
mov
push
test
xlat
outsb
xchg
jae
fmul
insl
pusha
xchg
push
fsub
pop
or
jne
mov
push
ja
cmp
sbb
mov
sti
inc
das
or
mov
ficomps
cmp
imul
imul
cld
sbb
sbb
enter
ds
loopne
fwait
mov
or
jne
sub
call
mov
pop
pop
or
mov
ret
pusha
sbb
pusha
mov
adc
movsb
cmp
mov
sahf
inc
or
cwtl
addr16
gs
mov
push
aaa
movsl
in
addl
add
jecxz
push
xor
movsb
xor
xchg
jp
loope
inc
xchg
dec
push
int
jne
fistpl
add
pop
or
sub
les
cmc
dec
jp
mov
repnz
xorb
adc
mov
arpl
lahf
rep
pop
push
xor
inc
das
push
push
jo
aam
int
push
add
add
cmc
pusha
arpl
lock
add
fcomps
or
neg
ret
jo
sub
push
sahf
sbb
jecxz
cs
mov
push
add
mov
mov
cmp
stos
push
leavew
push
fiaddl
lock
fidivrl
jle
mov
out
scas
out
dec
in
mov
sti
mov
leave
imul
mov
frstor
out
xor
daa
scas
add
mov
test
push
sbb
sub
int3
outsb
insl
sbb
ss
mov
pop
cltd
addb
imul
fcomps
jge
and
popf
pop
add
push
cltd
in
leave
lods
repz
dec
push
mov
movsb
or
lahf
add
aam
in
mov
xchg
jmp
rol
pop
lock
xchg
push
dec
inc
xor
adc
or
nopl
pandn
cwtl
loopne
push
sub
sarl
xchg
lea
in
call
jne
xor
in
imul
and
popf
out
mov
popf
xchg
xchg
sub
shr
push
pop
pop
mov
mov
cmp
pop
repnz
push
adc
insl
mov
dec
outsb
or
pop
dec
ret
dec
pushf
pop
and
pop
push
push
faddl
call
or
pop
push
jmp
and
push
push
dec
inc
daa
out
rol
xor
dec
loope
xchg
inc
push
lds
dec
push
sbb
es
sub
fwait
push
xchg
cmp
ret
adc
cmp
aam
sub
aaa
mov
fsubrs
cmp
sbbb
sub
push
sub
mov
jle
push
sub
mov
out
xchg
cmp
or
push
dec
push
lods
sub
dec
jecxz
sbb
mov
inc
add
int3
stos
cmp
cmpsb
inc
dec
jno
sub
jp
inc
mov
ret
cmpsl
scas
xor
add
and
sbb
lret
adc
dec
inc
pop
mov
cmp
xchg
add
push
mov
fldenv
scas
dec
adc
jae
sbb
rorl
lds
gs
cwtl
push
jns
movsl
std
add
into
jbe
pop
inc
jge
imul
xchg
mov
ret
or
lahf
imul
div
push
mov
jnp
push
or
push
push
daa
pop
fcoml
xchg
or
fs
lods
and
jge
pop
jge
mov
loopne
call
push
jno
out
xchg
jmp
movb
sahf
fldl
bound
mov
sub
mov
jnp
cli
outsl
inc
and
sbb
notb
mov
inc
sahf
sub
out
adc
dec
stos
jmp
dec
dec
or
push
add
adc
daa
loop
push
repnz
mov
and
lods
mov
mov
or
gs
push
rcll
lret
mov
jo
pushf
leave
xor
dec
scas
stos
add
xor
jl
in
loope
or
cmpl
in
mov
rol
jnp
add
cmp
xor
jno
clc
inc
sbbb
dec
bound
pop
dec
cli
enter
in
pusha
inc
js
ret
nop
and
fs
adc
xchg
loop
popa
dec
mov
bound
arpl
mov
scas
fisubs
das
mov
sbb
inc
xchg
ja
imul
push
aam
mov
popa
test
mov
loope
mov
push
out
outsb
int3
mov
loop
push
mov
dec
andb
test
fcompp
cmp
sbb
and
and
pop
fstps
push
sub
cmpsl
ja
lods
ds
subb
outsl
ljmp
jge
add
mov
dec
mov
push
outsb
jo
pop
mov
inc
lahf
xor
push
inc
repz
inc
insl
mov
rcrl
je
and
shll
fcmovb
repnz
arpl
scas
fidivrl
andb
jmp
sub
repnz
imul
adc
ret
sub
hlt
lcall
add
out
dec
rol
push
outsl
mov
sti
sbb
les
push
adc
hlt
movl
jae
xchg
dec
push
repnz
or
push
xchg
test
jle
movsb
pop
push
call
jl
les
xorl
test
dec
push
push
dec
fs
push
mov
mov
test
cwtl
jno
push
dec
xchg
in
aad
jno
sti
mov
es
jg
dec
into
pop
mov
jle
lcall
dec
fistpll
scas
cs
outsl
out
jg
dec
into
pop
mov
jle
lcall
dec
fistpll
scas
cs
outsl
out
jg
dec
into
pop
mov
jle
lcall
dec
fistpll
scas
cs
outsl
out
jg
dec
into
pop
mov
jle
push
hlt
iret
dec
test
daa
cmpsb
inc
loope
icebp
pusha
xchg
adc
std
jmp
sti
pop
xchg
pusha
call
popf
push
insl
pop
jge
dec
pop
pop
or
cmp
fcmovne
sti
fisttpll
lea
pop
cmovge
cmp
sarb
std
repz
xchg
xchg
addb
mov
push
pop
adc
cs
push
push
pop
jns
sbb
cmpsl
mov
addr16
xchg
inc
inc
mov
mov
sbb
and
inc
lret
push
in
jmp
jmp
dec
lods
fs
pop
int
filds
and
dec
inc
or
nop
inc
in
mov
lcall
loopne
clc
cmp
test
hlt
or
cld
or
or
jo
scas
lods
mov
inc
jbe
bound
xor
mov
ret
rorb
clc
and
mov
pop
fisttpl
stos
popf
inc
movsb
insl
jle
jnp
mov
sbb
loop
sub
jbe
ss
mov
movsb
adc
lret
sub
ret
cmp
jmp
in
xlat
fwait
lods
cmpl
jae
bound
sub
mov
repz
fdecstp
shrb
sub
sbb
adc
dec
dec
dec
pop
jl
test
mov
inc
cmc
mov
jecxz
icebp
dec
or
sub
cmp
push
jbe
mov
sti
mov
stos
lea
jge
dec
jnp
or
cmp
jmp
sti
fisttpll
lea
jge
dec
jnp
or
cmp
mov
xchg
icebp
movsb
xor
sahf
adc
jecxz
lods
sub
mov
stos
sub
cmc
mov
ss
rorb
jno
mov
out
mov
divl
or
cmp
mov
adc
test
mov
fsts
addr16
sahf
xchg
dec
dec
and
ret
inc
push
add
cwtl
frstpm(287
jge
jg
inc
test
mov
outsl
cmp
fildl
or
lea
call
call
dec
fists
call
icebp
movsl
xorl
dec
or
cwtl
scas
and
jge
sbb
and
int3
stc
leave
xor
mov
ret
lods
repz
add
hlt
data16
les
ss
pop
scas
pop
test
insl
sbb
mov
imul
add
mov
pop
mov
jmp
outsl
repnz
mov
mov
push
int
fimuls
sar
dec
add
adc
repnz
lret
pop
fbstp
push
scas
hlt
sarl
int3
flds
add
xchg
pop
push
sarb
test
add
xor
movups
fists
push
cmpsl
mov
lods
mov
cmp
adc
mov
fldenv
aas
or
stos
ss
or
inc
sub
lahf
cmp
les
xlat
pop
xchg
xor
cmp
mov
adc
mov
add
repnz
bound
mov
mov
mov
dec
aad
lods
cld
fcomp
scas
lods
xor
add
mov
cli
jb
mov
loope
xchg
scas
pop
sbb
in
pusha
in
mov
icebp
inc
lahf
loopne
and
in
iret
call
shll
pop
push
cmp
push
push
icebp
adc
push
inc
js
enter
out
je
shlb
adc
pop
std
das
in
push
hlt
lret
out
pop
dec
bnd
jge
mov
and
pop
cmp
outsl
daa
cmp
xlat
adc
scas
jecxz
lods
sbb
out
xchg
fildl
inc
sbb
cmp
push
pop
push
arpl
cmpsl
sub
xor
fistl
ret
orl
mov
fbld
mov
loope
mov
jnp
push
adc
jle
sub
enter
pop
inc
jle
push
rol
popf
mov
pop
dec
cmpsl
scas
mov
test
dec
jl
xchg
ljmp
xlat
jmp
aam
xor
sbb
fstps
add
dec
or
pop
cmpsb
mov
mov
cmp
mov
mov
inc
mov
rorb
sub
mov
pop
in
fisubl
fisubs
push
sbb
sub
jne
fisttpl
dec
pop
js
pop
push
lahf
xchg
in
lea
pop
ss
mov
scas
mov
inc
or
mov
fiaddl
lods
mov
imul
mov
icebp
out
mov
and
insb
add
paddsb
sbb
fwait
mov
fldcw
arpl
sub
pop
incl
and
adc
rorl
mov
pop
mov
cmp
fwait
cmp
inc
ss
ljmp
les
sbb
mov
dec
sub
outsb
push
je
fs
lods
fidivrl
xor
sbb
jns
xchg
jnp
mov
jo
pusha
das
in
jno
pusha
stc
int
lods
out
cmp
mov
rolb
or
jnp
fldl
pop
adc
mov
mov
add
mov
fstps
mov
push
into
repnz
cwtl
fwait
dec
push
push
notl
inc
ja
sbb
add
pop
mov
push
inc
call
hlt
mov
inc
inc
ret
xor
imul
cld
dec
sbb
cltd
sub
or
int3
inc
sub
es
sar
push
scas
jno
jnp
lock
aad
push
outsl
bound
xchg
arpl
push
mov
add
xor
sub
xchg
jl
popa
dec
mov
addb
mov
shrl
in
jl
jmp
inc
dec
mov
sub
stc
icebp
fistpll
sbb
cmpsb
add
enter
xor
mov
push
sub
jnp
leave
adc
push
mov
mov
scas
mov
dec
stos
movsb
sub
push
mov
adc
fwait
push
call
lcall
daa
mov
sub
data16
sbb
popa
mov
inc
xor
fidivrl
mov
popf
je
int
xchg
test
sub
ret
aas
xchg
scas
cltd
sbb
adc
das
push
rorl
jae
sub
ret
fs
insl
icebp
sbb
jo
dec
loope
imul
pop
fsubrl
sbbb
les
fwait
sbb
xor
pop
sub
inc
mov
fcompl
dec
arpl
jae
hlt
repnz
gs
push
pop
sahf
int
mov
fmull
sub
inc
mov
dec
mov
inc
lods
int
mov
movsb
stos
imul
pop
imul
shrl
rclb
pop
dec
fiadds
pop
mov
sahf
pop
or
sahf
data16
incl
mov
push
andps
into
jmp
bound
imul
mov
fisttpll
clc
and
and
pop
mov
stos
cmp
out
iret
and
mov
jp
add
xlat
adc
out
jge
jb
out
sub
sub
mov
mov
and
inc
popf
ds
fisubs
addb
orl
sbb
mov
xor
loope
xchg
fisubrl
out
add
or
lret
push
adcl
and
shrl
add
mov
stos
jb
mov
shrl
mov
es
lds
test
dec
mov
and
sbb
cmp
int3
cmp
sub
stc
ret
adc
fcompl
out
loop
inc
hlt
sub
push
imul
loopne
pop
inc
lcall
jno
in
lret
push
push
sbb
and
ss
xorb
insb
hlt
xchg
icebp
testb
mov
dec
push
and
cmc
add
mov
lods
cmp
jp
jle
sub
test
xchg
loope
cli
out
ret
stos
xchg
or
dec
sub
rcr
push
cmpsl
test
inc
jp
nop
mov
lret
or
push
xor
or
push
inc
sub
xor
enter
inc
pop
dec
push
rorb
cmp
inc
or
sbb
lea
mov
ss
ss
jl
xchg
xchg
mov
in
fs
and
adc
shll
shrb
roll
testb
xor
mov
mov
cmp
out
mov
cmp
xor
insl
sti
push
mov
in
mov
shrb
xchg
push
xor
das
fistpl
movl
into
xor
jl
xchg
xchg
sbb
cmp
fistpll
dec
cmp
icebp
in
lods
mov
xchg
fisttpl
repnz
arpl
rcrl
dec
popa
xchg
and
xchg
mov
stc
rcr
roll
add
xchg
adc
inc
mov
aad
fsubrs
ret
pop
and
xor
dec
movsl
push
xchg
xchg
mov
punpckldq
jmp
mov
xor
push
mov
xchg
mov
lahf
jo
and
call
lods
add
test
sub
test
xor
jl
bound
pop
jl
adc
les
cs
sbb
fs
es
add
cmp
out
test
push
dec
aas
loop
mov
mov
repz
sbbl
and
pop
mov
mov
jne
int3
les
jecxz
sub
mov
inc
or
inc
shlb
push
enter
mov
push
xor
xchg
ret
dec
enter
lea
add
clc
mov
mov
cltd
outsb
ss
push
call
lcall
neg
fdivs
stos
ret
push
mov
push
fucomip
pop
cmp
dec
xchg
test
lods
mov
mov
xchg
inc
sbb
sbb
mov
mov
call
inc
js
jns
mov
dec
mov
out
mov
push
test
xchg
push
xchg
jl
or
mov
sbb
cmp
insb
fistpl
in
loop
cs
ret
and
std
test
daa
inc
inc
cld
iret
jmp
xchg
cmp
cmp
sbb
adc
mov
mov
vmwrite
outsl
aad
xchg
enter
clc
sub
arpl
mov
dec
xor
dec
js
out
push
mov
in
lret
add
lods
in
or
and
sbb
out
inc
data16
cmp
inc
push
push
mov
inc
xor
mov
repnz
pop
jb
mov
fwait
dec
cli
push
nop
lcall
inc
data16
nop
add
aad
cmp
fsubs
xchg
lods
mov
insl
aaa
sub
xchg
xchg
jae
scas
lock
mov
sarb
aaa
mov
pop
sbbb
sub
dec
xchg
cli
xchg
aad
add
sub
dec
je
push
pop
xor
push
adcb
xchg
xchg
ret
jle
dec
std
fldl
mov
sbb
inc
stos
je
xchg
mov
xchg
mov
dec
pop
ret
andl
mov
outsl
sar
ds
cs
sti
jge
out
push
pop
rorb
xlat
pop
xlat
stos
loop
push
iret
sahf
lcall
roll
sbb
mov
sbb
sub
lods
pop
push
add
in
push
sub
sbb
jns
jmp
js
push
mov
cwtl
mov
adc
fwait
mov
lahf
cld
xchg
jge
or
ds
jbe
jl
daa
aas
push
loopne
loopne
movsb
dec
xor
lcall
mov
push
sbb
repnz
ret
ss
xchg
cltd
testl
sub
push
out
and
das
adc
int3
fs
jno
pop
out
sbb
push
mov
add
shl
inc
mov
test
lods
sbb
add
inc
xor
subl
addr16
inc
fs
jb
xor
fdivr
fnstsw
popa
xchg
stos
cld
dec
pop
mov
mov
xchg
add
push
jmp
movsb
mov
std
scas
add
sbb
out
inc
fsubs
sub
rcr
test
lds
cmp
adc
ficompl
pusha
fisubrl
xlat
out
in
daa
push
popa
push
mov
outsl
jmp
jns
xor
mov
pop
inc
mov
in
test
pop
lret
mov
mov
sbb
test
cs
or
sbb
xchg
mov
add
lds
xlat
ret
jg
out
es
ss
cmp
in
dec
jb
dec
add
dec
dec
pushf
xor
mov
and
or
inc
mov
push
cmp
push
test
je
jnp
out
mov
pop
adc
call
les
sbb
inc
sahf
push
pushf
or
negl
ret
push
adc
mov
es
pop
add
mov
insb
xchg
cs
and
push
push
pop
adc
push
push
scas
xchg
mov
inc
jno
add
xchg
jl
lods
and
mov
out
xlat
mov
daa
pop
pop
add
xchg
adc
sub
loopne
imul
sub
addr16
fwait
jl
push
cmpsl
sti
movb
jecxz
in
mov
dec
or
test
push
and
add
inc
push
popf
jle
fdivr
dec
popf
insb
idivb
cmp
push
addr16
lea
fsubrp
push
cld
sti
or
push
jns
xchg
mov
inc
out
mov
jp
jl
pop
sub
cmpl
mov
lcall
cmp
rcrb
nop
dec
xchg
jecxz
lock
aad
cs
adc
or
lret
or
pop
sbb
cmp
push
enter
ljmp
jecxz
xchg
out
jmp
sbb
idivl
lret
sbb
dec
xchg
pusha
insl
vcvtps2pd
dec
mov
add
add
gs
ret
jns
mov
push
cld
test
mov
or
cs
aad
movsl
fdivrl
lods
mov
inc
pop
or
daa
or
sahf
add
cmp
jo
rclb
adc
cli
sub
sbb
mov
pop
aas
lret
das
fiaddl
mov
mulps
jb
mov
push
inc
cwtl
jne
mov
fwait
insb
mov
lock
cld
xchg
or
sbb
add
sbb
insb
mov
cmp
fdivrs
dec
lods
adc
jae
fistpl
fst
cmp
inc
ja
dec
enter
sbb
adc
frstor
pop
fidivrs
add
xchg
movsl
addr16
inc
cli
jne
dec
int3
dec
sbb
xlat
in
scas
ja
enter
aam
push
mov
xchg
aaa
mov
inc
out
push
aam
dec
xchg
dec
lcall
das
test
cs
fisubs
inc
or
lcall
fiaddl
lret
out
jae
arpl
pusha
jmp
mov
aaa
xchg
enter
aaa
cmp
sbb
cmpsl
cli
inc
loope
sbb
repnz
adc
xchg
arpl
or
jae
sub
adc
xchg
xchg
or
shl
jnp
push
mov
imull
clc
mov
loopne
push
mov
dec
pop
in
inc
and
call
mov
imul
popa
test
cmpsb
sub
out
fsubrp
push
add
sub
jno
add
shlb
mov
fidivs
inc
add
addl
mov
or
mov
mov
mov
ja
lahf
ja
fsub
dec
enter
sbb
call
add
cmovp
test
xor
mov
ss
mov
push
inc
mov
nop
push
pusha
push
aaa
dec
pop
fcmovu
rcrl
outsl
sbbl
pusha
out
cmp
call
scas
push
icebp
hlt
imul
xchg
or
cmp
je
push
push
cmp
imul
fwait
and
mov
cmp
mov
mov
in
pop
jge
inc
sub
iret
imul
mov
cmp
fstpl
in
add
test
mov
inc
xchg
sub
jl
adc
daa
testb
mov
push
aaa
xor
pop
and
push
fstl
jge
fildll
fs
add
imul
jnp
adc
sbb
xor
in
cmpsb
or
icebp
sub
add
mov
loop
push
scas
sbb
and
icebp
jo
clc
test
mov
sub
mov
jo
cmpsl
xlat
sub
inc
xor
popf
jbe
dec
cmpsl
xchg
leave
cmp
cmpb
and
mov
int
ljmp
ret
cmp
clc
mov
push
arpl
cmp
cmpsb
rcll
test
insb
leave
mov
push
insl
dec
lea
sbbb
mov
jl
movsb
mov
cmpsl
or
push
dec
inc
jg
in
xchg
ja
loope
adc
jg
push
mov
fcmovbe
inc
outsb
cmpsb
addl
and
addr16
pop
rolb
xchg
aad
clc
stos
js
orb
fcmovne
mov
stos
daa
pop
mov
xchg
inc
sbb
fnstsw
sub
or
adc
aaa
add
lahf
or
mov
lds
mov
add
ljmp
sub
xor
add
mov
and
mov
sahf
mov
add
ja
inc
movsl
icebp
ss
add
xchg
loopne
outsl
cmpsb
and
pop
insl
movsl
mov
pop
mov
loopne
mov
sub
inc
xchg
js
add
mov
loope
js
lret
add
pop
mov
outsl
add
xor
std
pop
imul
sti
ret
push
fnsave
js
xchg
push
out
inc
fldenvs
imulb
push
inc
das
mov
testl
mov
push
cld
push
cmp
int3
adc
mov
in
or
push
in
dec
int3
sbb
push
sbb
out
sbb
iret
add
ret
and
dec
pop
xorl
dec
xchg
daa
pushf
sub
xchg
sub
bound
jno
jmp
or
pusha
sub
add
cli
add
push
mov
xor
cmp
xorb
pushf
and
insl
or
jno
pop
ret
mov
ficomps
fcom
fistl
mov
sbb
xchg
or
je
lds
cld
push
pop
pop
ret
stos
jmp
out
ficomps
adc
push
out
or
mov
jle
jecxz
pop
int
aas
test
ds
ret
push
test
jecxz
nopl
movsl
movsl
cltd
int
neg
in
mov
sub
ds
dec
imul
dec
mov
rcrl
sbb
repz
sahf
push
int3
fstl
dec
es
fadds
in
popf
mov
mov
push
xor
mov
imul
in
push
ljmp
push
movsb
js
mov
lret
imul
push
jnp
dec
es
scas
leave
andb
arpl
sbb
inc
xchg
enter
sti
push
or
lock
cs
mov
dec
scas
lods
dec
and
jecxz
pop
lods
out
cmp
lahf
adc
inc
loope
sbb
lods
inc
in
adc
hlt
mov
sahf
cmpsl
xchg
adc
jo
fwait
add
xchg
jne
jns
mov
aam
cmc
outsl
nop
pop
mov
clc
cld
hlt
cmp
mov
mov
ret
out
fnstenv
mov
mov
je
pop
pop
into
lods
xor
test
clc
sbb
sub
es
out
out
cmp
inc
cmp
in
stos
and
xorl
dec
mov
pusha
mov
scas
xor
les
in
xchg
cltd
cmpsb
fwait
test
push
leave
loopne
pusha
movsb
fcomps
and
bound
cmp
clc
mov
out
bswap
rcrb
and
fwait
add
icebp
xor
shrb
mov
test
mov
inc
push
clc
lock
mov
dec
test
sbb
pop
pop
pop
testl
push
lret
cmpsl
xchg
mov
adc
xchg
icebp
cs
jbe
sbb
mov
imul
rcll
inc
dec
mov
in
aas
aas
adc
mov
aaa
inc
gs
stos
cmp
or
dec
cmp
das
jle
in
icebp
cmp
clc
rcrb
xor
inc
dec
jecxz
mov
in
sub
das
xchg
cwtl
js
jbe
shll
push
xlat
adc
jg
jecxz
ret
out
dec
or
sbb
jg
lcall
sti
mov
lahf
and
sbb
std
mov
mov
xor
mov
cld
push
mov
out
arpl
add
add
xlat
or
adc
int3
jno
lock
mov
inc
add
adc
mov
push
daa
pop
sahf
xor
jl
push
rorl
mov
jmp
ljmp
cli
add
dec
ret
std
rolb
cmc
divb
into
cltd
lods
add
mov
fistpl
push
sub
subl
add
arpl
mov
mov
push
and
mov
je
jb
sbb
jle
inc
inc
or
lock
jg
rcr
lret
cltd
test
aam
and
jecxz
fistps
shlb
daa
setg
mov
pop
xlat
inc
mov
ljmp
cmc
in
sub
jle
mov
jecxz
sti
mov
scas
xchg
mov
cs
pop
or
sub
popa
data16
ret
and
dec
mov
inc
test
xchg
dec
loope
cli
lock
pop
dec
dec
jp
addr16
push
push
sar
pop
cwtl
lods
cmpb
mov
lret
adc
dec
push
or
jae
push
outsb
mov
cmp
movsl
aad
pop
xor
sbb
sub
popf
stc
ja
into
rcll
mov
shll
bnd
in
or
arpl
push
lret
mov
cmc
pop
xor
in
stc
mov
mov
movsb
xor
mov
mov
or
hlt
jp
mov
ja
dec
fcomps
lret
xchg
ret
and
pop
adc
push
mov
add
cmpsl
in
push
adc
dec
out
cltd
mov
movsb
iret
scas
add
repz
push
adc
add
shll
and
loopne
pop
ret
cmp
gs
pusha
dec
mov
and
cmp
cmp
daa
pop
sbb
js
and
inc
cmpsb
jb
loope
aaa
stos
xchg
mov
nop
cmp
fmull
pop
jo
clc
dec
in
mov
sbb
adc
mov
push
ljmp
adcl
dec
rcll
popl
inc
mov
aam
popf
add
insl
inc
aaa
add
mov
in
push
pop
or
lods
jge
cmp
jb
and
ljmp
jecxz
jno
and
inc
std
frstor
fwait
mov
dec
insl
pop
jge
dec
jnp
or
cmp
jmp
sti
fisttpll
lea
jge
dec
jnp
or
cmp
jmp
sti
fisttpll
lea
jge
dec
jnp
or
or
sti
fmull
or
movsb
xlat
rorl
jl
xchg
ret
dec
mov
stos
mov
and
fildll
cmp
or
sbb
insb
mov
dec
scas
pop
pop
lods
dec
mov
push
in
push
cld
ds
cs
sub
cmp
or
sbb
insb
mov
pop
inc
lods
push
mov
pop
in
push
cld
es
cs
adc
pusha
mov
loope,pt
loop
stc
pop
aaa
lods
and
jle
sbb
sub
cmp
pop
xor
dec
xchg
imul
fbld
arpl
push
add
xchg
out
add
sbb
mov
mov
sub
fnstsw
out
pop
mov
xor
or
sahf
insb
jb
mov
push
pop
mov
loope
paddsb
and
iret
sub
repnz
popa
aas
mov
xor
inc
repz
mov
in
push
add
fimuls
push
push
das
data16
mov
inc
dec
mov
inc
cmp
or
int
es
and
inc
sub
fistl
scas
pop
xchg
lods
push
mov
or
push
cld
ds
aaa
fadd
sub
cmp
or
sbb
insb
xchg
jl
dec
scas
sbb
shrl
sbb
sbb
insl
subl
test
mov
jb
add
add
xor
das
notb
mov
lret
jb
push
sarb
mov
stos
push
pop
scas
jo
add
adc
cmp
xor
cld
and
adc
push
call
ds
cs
sub
cmp
or
sbb
insb
mov
scas
pop
pop
lods
dec
mov
push
in
push
cld
ds
cs
sub
cmp
or
sbb
insb
mov
scas
pop
pop
lods
popa
test
jb
insb
ljmp
mov
adc
pop
gs
fisubrl
idivb
mov
outsb
or
inc
andb
adc
mov
jge
cmp
clc
sbb
gs
dec
dec
scas
hlt
inc
jp
sub
loope
dec
loopne
push
dec
int
mov
mov
cmp
sbb
xor
xor
push
or
mov
nop
mov
mov
xchg
or
in
sbb
loope
mov
jl
push
cmp
and
lods
xchg
adc
sub
popl
push
in
jo
loop
stos
in
dec
mov
jb
jl
jo
pop
out
cltd
xchg
mov
mov
cli
jne
or
outsb
cmp
jg
xchg
mov
pop
xor
addr16
mov
pop
jl
sarb
mov
fsubs
mov
cwtl
push
dec
cmp
and
repz
cs
jne
ja
scas
das
mov
jno
lock
je
mov
hlt
add
inc
mov
sub
aam
roll
pop
fwait
bound
js
or
mov
mov
add
pushf
les
movsb
jecxz
fbld
aaa
fwait
cmp
call
sub
mov
cwtl
ret
pop
sub
scas
in
in
lea
ja
mov
xor
stos
imul
push
push
pop
and
setae
adc
mov
adc
xchg
jle
frstor
pushf
mov
mov
das
sbb
pop
pop
sbb
outsb
inc
jb
sub
and
out
hlt
mov
add
arpl
dec
mov
ret
jmp
pushf
sub
pushf
dec
das
sbb
aaa
sbb
std
in
or
add
arpl
insb
jl
jb
movsl
cmp
call
nop
das
sbbl
jns
rsm
mov
test
mov
adc
cmpsl
call
mov
flds
sbbl
data16
jnp
pop
jbe
xchg
cwtl
jge
daa
out
daa
sbb
sbb
test
sub
jo
scas
or
fs
pop
pop
cmpsl
ljmp
bound
hlt
mov
stos
add
xchg
pop
repnz
or
mov
cld
test
enter
in
jg
lods
sti
mov
jbe
inc
xchg
or
dec
sarb
inc
out
shlb
mov
stos
lea
mov
insl
or
inc
and
je
mov
rolb
stos
mov
add
or
or
out
dec
test
pop
lods
cwtl
stos
jle
mov
scas
jge
or
push
mov
cmp
jo
cmp
pop
rdtsc
dec
js
outsl
or
adc
ret
pop
and
push
mov
dec
dec
mull
lock
cmpsl
shl
push
push
loope
sti
add
imul
dec
shrb
pop
mov
or
xor
push
movsb
test
sbb
cmpsl
xor
push
in
cmp
mov
iret
push
xor
sbb
ret
movsb
ja
pop
jmp
insl
mov
pop
adc
stc
pop
xchg
in
stc
mov
mov
in
shll
and
fidivs
lock
jne
mov
adc
rcrb
arpl
inc
add
les
jno
dec
push
jge
lods
jmp
mov
lds
cmp
or
and
lock
pop
xor
xchg
mov
push
mov
add
xor
aaa
jnp
repnz
add
add
sahf
xchg
movsl
cli
push
int
xchg
adc
sbb
subl
mov
and
subl
pcmpeqw
jle
movsl
imul
test
cmpsb
sub
sahf
mov
xchg
jno
rol
add
in
sub
pop
mov
rcrb
xchg
fisubs
loop
cmc
sti
xchg
jmp
mov
or
sub
mov
xor
xor
mov
outsl
test
mov
jp
out
inc
cmp
popa
add
cli
xor
xchg
repnz
mov
lds
stc
dec
pop
adc
ret
or
jl
fs
daa
mov
dec
aam
cmp
mov
pop
pop
jge
lock
loop
clc
adc
cmp
std
dec
subb
hlt
inc
jne
dec
insl
jge
xchg
pop
loopne
sbb
shrb
cmp
mov
outsb
movsl
out
and
mov
loop
arpl
mov
pop
icebp
sbb
sbb
jl
xor
shlb
and
add
imul
ja
fimull
pusha
ja
sbbl
dec
sub
add
or
gs
xlat
stos
rcl
xlat
ret
jns
add
cmpsb
mov
rep
enter
cmpsb
cmp
pop
push
dec
aaa
stc
cmp
das
jl
pop
adc
bound
popf
mov
inc
cli
or
out
push
xchg
push
outsl
add
nop
lds
mov
xor
sbb
pushf
cli
jns
cmp
fldt
in
nop
dec
shrb
adc
popa
and
mov
push
insb
cmp
push
lods
call
es
icebp
js
rclb
cli
adc
iret
insb
mov
ret
jle
in
mov
sub
adc
dec
sbb
pushf
lock
popa
pop
mov
push
and
pop
lea
xchg
adc
xlat
push
sub
imul
mov
mov
in
mov
mov
lock
sbb
hlt
sbbl
insl
jge
mov
movsb
mov
sahf
push
pop
xor
cltd
jp
fidivrs
lods
mov
mov
out
mov
pop
add
adc
pop
ficomps
inc
mov
and
sbb
sbbl
xchg
mov
data16
lcallw
xchg
fisttpll
jge
mov
mov
fidivl
or
jb
scas
xchg
test
cwtl
addb
popa
int3
jle
shrb
aaa
cmpb
loop,pt
push
and
sub
add
ret
dec
sbb
jmp
addl
insb
insb
xor
jo
mov
jmp
cmpsl
decl
pop
sbb
xchg
cmp
lcall
stos
mulb
mov
sarb
gs
cli
mov
push
cmpsb
cmp
mov
sarb
sub
adc
mov
sub
pop
adc
dec
pop
into
pop
arpl
fsub
insb
mov
imul
aas
sbbl
cmp
dec
pop
and
dec
dec
dec
or
jge
fldcw
mov
cmc
or
mov
mov
mov
bound
and
push
stos
ret
lea
fdivrl
pop
arpl
add
dec
inc
in
sub
aam
cmp
mov
or
mov
sar
jno
stc
cmp
stos
jns
xchg
fistpll
das
push
mov
push
mov
push
cld
ret
jle
or
sub
inc
mov
jae
dec
or
inc
push
jne
cmp
push
dec
dec
aad
ret
xchg
xor
in
lock
in
cmpsl
rcl
test
mov
aas
nop
inc
ja
pop
and
mov
sub
repnz
and
repz
mov
mov
shrb
add
fadds
into
into
loop
les
mov
xchg
in
jnp
cmp
mov
mov
sti
xchg
mov
fwait
xchg
add
sbb
pop
mov
bnd
dec
dec
out
jmp
aas
dec
test
xchg
rol
lods
negb
xchg
not
xchg
and
cmp
push
fwait
sbb
add
adc
lret
mov
daa
shrl
sub
pop
jp
cmpsl
sbb
jno
scas
lret
mov
dec
ds
ret
in
sbb
dec
clc
jno
out
idivb
ret
add
lret
sbb
imul
jno,pn
addr16
jne
fiadds
nop
sub
je
push
dec
es
lret
rcl
into
je
dec
inc
inc
decb
jno
or
mov
sub
inc
jmp
stos
mov
mov
mov
xor
enter
mov
dec
sub
dec
cld
add
xlat
sbb
adc
fisubrl
inc
inc
xchg
lret
pop
das
mov
loop
idivb
cmp
or
pop
addr16
mov
shlb
add
push
cmp
insl
sbb
cmc
repz
icebp
aaa
cltd
insl
stos
pop
not
pop
sbb
xchg
repnz
enter
xchg
xchg
movsb
pop
int
in
mov
fadds
sbb
leave
int3
cmpl
jb
xor
subl
push
stos
cli
dec
lock
loop
aam
or
dec
fldcw
mov
out
mov
mov
fwait
mov
add
mov
mov
and
out
repnz
sub
je
mov
sub
imul
js
dec
push
mov
lods
cmp
les
or
inc
sarl
mov
roll
and
cmp
sbb
or
clc
mov
add
mov
or
out
sbb
scas
int
and
xor
outsb
and
jne
ds
mov
add
andb
loopne
jnp
cld
pop
jmp
inc
xchg
bound
mov
mov
es
mov
sbb
push
aas
movsl
mov
and
push
shlb
fwait
fs
mov
push
and
repz
arpl
pop
cld
rcrl
push
pop
push
sbb
jl
and
push
dec
iret
mov
lret
sbb
inc
fsubp
mov
daa
inc
fiadds
and
iret
fcom
scas
jae
push
xor
push
std
pop
sti
sbb
mov
lret
jae
xor
ret
cmpsb
add
out
dec
mov
push
or
add
imul
inc
cmp
daa
fdivrs
or
or
push
out
mov
xchg
mov
mov
imul
jb
mov
mov
jmp
inc
test
xchg
shlb
in
scas
into
mul
filds
loop
xchg
adc
xchg
mov
test
push
cmpl
mov
pop
aad
int
push
add
mov
icebp
xchg
xor
or
mov
mov
mov
enter
imul
xlat
push
add
popf
push
cmp
inc
int
xor
stos
jmp
std
dec
int3
dec
xchg
xchg
incb
mov
add
pop
or
js
sub
fmuls
filds
aad
push
push
push
fcoml
or
pushf
imul
int
mov
repnz
ret
sub
loop
cltd
xchg
in
stc
dec
mov
add
data16
jge
repnz
mov
inc
and
adc
into
jle
dec
push
movsb
leave
shr
daa
inc
cmp
pop
mov
pop
push
cltd
lret
daa
das
pop
mov
dec
inc
pop
sub
es
in
mov
jg
or
mov
fdiv
or
and
inc
gs
mov
jnp
xor
inc
sub
xor
into
mov
in
push
mov
notb
pop
sub
lret
je
ret
out
jmp
mov
xchg
test
xor
add
in
inc
rolb
fistpl
adc
lds
cltd
stos
pop
bound
push
xchg
std
or
arpl
push
push
push
repz
scas
add
pop
jmp
fimuls
and
lds
daa
cmp
cmp
jns
inc
pop
daa
jns
js
xlat
jmp
jl
rol
adc
dec
mov
icebp
adc
push
inc
jno
cwtl
shll
in
sbb
mov
push
dec
outsl
cmc
mov
sbb
aaa
dec
mov
sub
insl
mov
arpl
mov
lret
roll
mov
mov
push
fmull
xor
cmp
xchg
xlat
pusha
sub
ret
and
dec
cmp
scas
cli
rcr
out
sub
in
or
stos
and
cltd
cld
mov
sbb
push
adc
sub
xor
push
mov
and
cltd
stc
jge
mov
in
int
scas
mov
xchg
add
mov
imul
iret
or
stc
arpl
sbbb
inc
xchg
jecxz
leave
or
inc
lret
xchg
popa
into
imul
fcmovbe
mov
cmp
movsb
adc
out
out
imul
int
jecxz
mov
rcll
mov
out
movsl
sti
adc
mov
adc
mov
xchg
push
dec
mov
xchg
in
arpl
sbb
lcall
pop
mov
jmp
imul
icebp
in
jbe
test
fadd
jne
xchg
pop
rorb
out
pop
pop
rcl
mov
cmp
out
cmp
shll
sbb
aas
and
sub
inc
xchg
xor
repz
adc
jg
out
mov
push
and
filds
xlat
popf
outsb
mov
fisubrs
lret
adc
dec
js
outsb
outsl
adc
mov
loopne
shrl
push
sbb
test
test
push
mov
xor
popf
fucomip
mov
not
xchg
xorb
jge
sbb
repnz
mov
push
dec
rcr
stc
push
repz
push
fdivrl
cltd
out
loope
pop
inc
nop
mov
je
orl
aam
xor
mov
popa
inc
lods
pop
push
jg
icebp
xchg
imul
mov
add
push
jl
sbb
fisttpl
mov
sbb
pop
addr16
test
outsb
jecxz
inc
outsl
cmp
sub
push
aas
sub
aaa
lret
xor
dec
pop
xlat
lods
and
movsl
cmc
xor
sbb
and
roll
mov
pop
push
xor
sub
cli
adc
das
js
cli
sti
mov
dec
xor
dec
je
push
inc
and
pop
xor
or
addb
cmp
cld
aam
inc
in
rep
push
aas
mov
pop
in
push
dec
in
mov
ja
and
fistps
dec
out
stos
iret
dec
sub
inc
movl
dec
mov
out
mov
lds
xor
out
jae
imul
mov
push
ficomps
mov
push
add
push
pop
enter
fldenv
jo
inc
cli
iret
jmp
pop
mov
adc
cmp
lods
sub
xor
inc
imul
mov
jb
add
mov
out
pop
jge
outsl
jl
test
sub
sub
repz
inc
cmpsb
cltd
sbb
jmp
add
mov
push
xor
sub
mov
mov
dec
nop
add
jae
cmpsl
sub
xchg
lcall
test
mov
in
icebp
pop
push
mov
adc
xchg
out
lcall
and
int3
mov
decb
or
aam
pop
pop
cmpsb
int
enter
shl
mov
dec
insb
call
pop
or
jne
mov
jle
xchg
and
jge
stos
loope
adc
add
inc
test
xchg
mov
bound
mov
dec
fldenv
gs
mov
pop
jae
jns
push
lds
int3
mov
dec
ja
dec
or
push
bound
push
mov
mov
fwait
sub
in
jns
sets
jnp
sub
inc
popf
mov
ret
mov
pop
ret
inc
push
scas
xchg
push
repnz
fisubrs
and
mov
adc
sub
pop
loopne
sub
push
lcall
repz
andl
pop
scas
inc
xchg
sbb
mov
call
es
cmpl
xlat
outsb
add
inc
flds
lea
push
shrb
jmp
or
or
popa
mov
dec
inc
sbb
shrl
pop
and
pop
or
sbb
mov
daa
xor
push
mov
shl
or
notl
fstps
lahf
xchg
sub
pop
std
sbb
sar
pop
xor
mov
pop
pop
lcall
jg
xchg
fldenv
gs
push
jo
xchg
sub
in
movb
insl
mov
je
and
aas
fadds
movsl
xchg
sbb
pushf
add
pop
in
mov
add
in
push
dec
lahf
xor
scas
dec
out
shll
lret
jb
std
sti
cs
loopne
or
pop
cmpsb
inc
pop
mov
mov
add
push
xlat
or
rcrl
dec
inc
adc
push
and
xor
outsl
mov
cmpl
inc
jmp
mov
sub
ja
inc
test
or
sub
jecxz
xchg
lods
fwait
adc
pop
cs
sub
dec
jne
pop
loop
aaa
mov
xchg
cmp
mov
pop
pop
pop
nop
movsb
call
jp
fldenv
inc
lods
dec
xor
lcall
sub
cmp
cmpsb
mov
jmp
or
pop
ds
push
add
cli
mov
or
fdivp
cmp
xchg
and
mov
mov
jmp
pop
into
ret
jno
loope
mov
loope
push
mov
lcall
dec
sub
mov
cmpsl
sub
xchg
sbb
or
sub
pusha
xor
dec
and
adcl
out
mov
xor
insl
inc
inc
lods
lret
push
cmpsl
or
add
jnp
adc
xchg
xchg
out
xor
leave
mov
lock
inc
in
cwtl
test
stos
fists
addl
xchg
adc
mov
adc
mov
into
pop
add
push
inc
lret
push
mov
xchg
in
push
leave
enter
test
stc
into
insb
pop
nop
dec
inc
cs
imul
pop
movb
and
and
lahf
and
mov
adc
sti
int3
jp
fwait
lods
dec
fst
enter
ret
or
and
cmp
mov
je
jo
and
cld
adc
xchg
pop
pop
arpl
dec
movsl
movsb
push
insb
int3
mov
clc
adc
and
pop
mov
or
sahf
ret
xchg
lods
xchg
fildl
iret
fcomi
call
fs
movsb
cs
mov
dec
pop
cwtl
mov
shlb
sub
pop
nop
jne
pop
mov
fadd
std
cmp
in
pusha
push
sbb
and
into
mov
xor
jns
jecxz
out
inc
inc
lds
lock
push
and
stc
or
out
pop
pusha
lcall
mov
jg
fldenv
add
ret
cmpl
filds
sar
push
fwait
push
imul
adcb
loop
jbe
loop
movsl
xor
jae
mov
sbb
jg
push
fwait
mov
mov
loope
loop
and
pop
data16
mov
pop
mov
inc
es
in
leave
sub
mov
jae
mov
xor
and
push
pusha
fcoml
lea
mov
inc
sub
repz
das
aam
push
xor
dec
xchg
add
and
iret
or
sub
push
sar
xchg
xor
adc
mov
jno
roll
or
xor
pandn
bound
sbb
insl
pusha
lcall
cld
sahf
mov
xor
aad
mov
adc
mov
popf
fsubs
push
sub
aas
and
lock
cwtl
lods
xor
movl
xor
in
adc
cmpsl
test
sub
in
and
add
adc
xchg
inc
xchg
subb
sbb
mov
or
loopne
mov
sub
lahf
xor
mov
popa
dec
scas
sbb
test
pop
add
jecxz
push
pop
sbb
inc
dec
aas
lret
lahf
adcb
jne
pop
cmc
pavgw
repz
aam
subb
aas
push
mov
lods
and
inc
fcmovu
and
pop
and
pop
pop
mov
lods
scas
rcll
imul
out
cmp
adc
sbb
pushf
jne
cwtl
clc
push
sbb
xchg
xor
in
cmpsb
in
test
shl
push
xor
add
scas
push
add
xchg
ror
pop
cwtl
xchg
jl
rcll
cmova
pop
jge
out
sti
stos
sub
inc
mov
movsl
sub
push
aam
cmp
jmp
loope
push
adc
and
sbb
fucom
xlat
sub
inc
jecxz
cmp
and
bound
adcb
inc
pop
ds
jg
sub
call
out
repz
out
dec
sbb
aad
xchg
repnz
xor
sub
adc
xor
shlb
loopne
ds
stos
lds
ljmp
push
lcall
fsts
in
mov
add
sub
push
shr
jbe
sub
sub
and
iret
movl
iret
cmp
xchg
sbb
inc
and
lcall
jle
adc
enter
clc
nop
xor
add
and
mov
sahf
sub
sub
out
pop
bound
and
jge
pminsw
sti
dec
inc
mov
mov
mov
mov
push
rcrl
cmp
cmp
mov
jle
xchg
mov
fmuls
add
xor
mov
sahf
iret
jmp
insb
lret
clc
stos
mov
push
in
push
cld
ds
cs
sub
cmp
or
sbb
insb
mov
scas
pop
pop
lods
dec
mov
push
in
push
cld
ds
cs
sub
cmp
or
sbb
insb
mov
scas
pop
pop
test
mov
push
in
push
cld
ds
sub
cmp
sahf
insl
jl
dec
lods
pop
pop
lods
dec
mov
sbb
push
jl
dec
scas
and
shll
xchg
push
or
imul
push
addl
mov
dec
fcomps
add
jns
adc
int3
dec
fcompl
cmp
insb
clc
jl
dec
fcomps
mov
sbb
in
je
push
lods
dec
mov
or
icebp
dec
rcrb
cmp
or
sbb
in
js
dec
mov
ja
pop
iret
push
sbb
dec
mov
imul
xchg
addr16
xlat
and
and
aaa
mov
cmp
bound
enter
addr16
ja
xchg
xor
and
int
xchg
fs
andl
adc
add
inc
aad
js
push
lods
popf
aaa
xchg
prefetcht2
daa
pop
fwait
inc
mov
sbb
sbb
jno
sub
add
lods
je
pop
sbb
jge
pop
leave
daa
mov
nop
xchg
loopne
test
xchg
inc
mov
cmp
jae
pushf
lea
test
xor
fsubrs
cmpsl
mov
dec
adc
enter
push
scas
out
jl
dec
rcrl
cmp
or
sbb
in
js
jo
inc
fcoml
and
or
pop
lcall
push
leave
arpl
cwtl
in
pushf
pop
cltd
push
sub
sub
ja
sbb
sbb
out
in
pop
mov
mov
fmull
dec
fldcw
in
idivb
jl
or
test
cwtl
sbb
in
js
push
lods
cmp
insb
clc
jl
dec
fcomps
mov
sbb
in
js
push
lods
cmp
insb
clc
sbb
lret
into
ss
push
adcl
inc
mov
test
jmp
push
sub
sbbl
jp
jae
in
cmpsl
cmp
mov
les
jne
push
push
shrl
scas
dec
push
push
leave
inc
call
sub
or
stos
out
mov
cli
add
cmp
jae
sub
push
sub
fstp
fwait
enter
pop
gs
pop
in
dec
xchg
cmp
mov
push
in
lea
nop
push
add
mov
dec
testl
dec
aaa
push
stos
lret
cmc
jmp
or
dec
xchg
push
or
cmp
push
push
jl
cmp
test
mov
or
sahf
inc
inc
scas
or
mov
mov
add
cmpps
sub
lea
pop
cmp
inc
lods
cld
xchg
xchg
outsl
ret
lods
orb
push
jp
mov
sarb
xchg
in
mov
inc
inc
xchg
cmpsl
not
aam
in
mov
jne
dec
pop
or
jmp
loope
hlt
loope
les
sbb
mov
lcall
outsb
inc
jmp
or
hlt
int
adc
je
sub
sbb
ret
push
jge
add
movsl
loope
and
jbe
push
xchg
adc
or
push
daa
ror
pop
xchg
add
xor
push
std
rcrb
lods
cmp
js
sbb
xchg
lea
jmp
les
mov
repz
movsb
iret
out
xlat
mov
adc
vpcmpgtb
or
pop
loop
adc
xor
notb
ret
lret
aad
pop
pcmpeqd
push
sbb
and
xor
cwtl
mulb
cld
sbb
pop
les
shrb
and
dec
sub
and
scas
or
mov
mov
ss
add
xor
cmp
mov
push
fs
mov
inc
cltd
sbb
pop
or
push
ja
add
into
sbb
push
xchg
rolb
mov
aam
mov
jno
jmp
jle
push
push
stos
outsb
movb
outsb
outsb
adc
mov
dec
xor
add
jecxz
sbbl
test
sbbb
outsb
sbb
iret
leave
xlat
cmp
out
hlt
scas
jbe
mov
fldenv
adc
or
mov
in
fiadds
pop
jne
mov
and
pop
divl
sub
mov
cmc
pop
cwtl
sti
push
mov
pop
push
inc
js
mov
stos
sbb
dec
pop
int
or
lcall
outsb
int3
inc
jle
das
xor
pop
lret
jl
jno
in
popf
cs
push
cli
push
inc
call
xchg
mov
sahf
cmc
mov
ss
cmc
pop
cs
dec
shll
movsb
mov
and
sbbb
pop
push
cmp
les
inc
add
mov
repz
insl
das
gs
adc
fsubrl
lcall
fcmovnu
dec
in
dec
push
jle
push
and
cld
cli
shr
int3
or
push
xlat
sbbl
xchg
shl
adc
xchg
xacquire
sti
inc
xlat
insl
jne
ljmp
pop
mov
das
mov
js
and
xor
xchg
out
shl
orb
cmp
out
sbb
mov
ljmp
mov
jmp
rcll
clc
sbb
je
sbb
inc
mov
jae
cmp
pop
nop
xchg
push
xor
divb
jg
jecxz
push
les
sarl
xor
leave
jmp
and
push
mov
xor
fsubr
lock
cltd
push
jo
imul
scas
xor
gs
dec
sub
inc
add
fcoms
andb
push
jge
jg
ret
add
jo
mov
stc
sbb
aaa
sub
or
inc
cs
out
ljmp
repnz
fbld
rcrb
int
imul
je
cltd
xchg
jmp
push
jb
mov
cmp
mov
out
add
inc
mov
pop
xchg
and
mov
xchg
sti
push
sarb
lret
mov
lret
repz
aam
test
push
jo
sub
das
andl
jno
es
push
xlat
lahf
inc
je
and
fcmove
push
test
pop
jno
or
mov
test
repnz
add
dec
aad
in
xor
push
shl
jne
sbb
sub
aaa
sub
sbb
mov
pop
mov
xchg
xchg
jle
sbbb
int
xchg
xor
jae
ror
cmp
cld
mov
lahf
stos
add
call
pop
shlb
cmpsb
jge
jge
mov
cmp
fs
ds
fs
mov
cmp
push
loope
jo
mov
ja
jo
push
mov
test
jb
mov
scas
rcr
pop
std
nop
rol
inc
pushf
pop
xchg
xchg
inc
lock
pop
xor
dec
insl
mov
mov
xor
lods
xchg
jnp
mov
mov
sbb
and
or
push
jae
pop
loope
push
cwtl
push
push
lret
out
sub
rcr
cmp
in
loope
hlt
jnp
aaa
loop
pop
mov
pop
sti
lahf
lock
mov
xchg
insl
lret
test
xchg
mov
loop
push
jns
jns
pop
add
push
jge
or
fisttps
dec
jne
sub
pop
in
adc
push
test
adc
mov
shll
fcoml
xchg
fisubl
dec
inc
andb
in
inc
xchg
mov
repz
js
and
jns
push
push
mov
loop
btrl
pop
push
js
xchg
xchg
mov
cmpsl
add
hlt
jg
pop
popf
cmp
pop
aas
push
lret
enter
cmp
mov
adc
arpl
push
and
xorl
inc
pop
stos
lods
incb
sbb
pop
xchg
add
daa
mov
lods
cmp
popf
leave
inc
inc
pushf
xchg
xchg
mov
xor
hlt
jo
out
sbb
popf
lahf
lods
cmp
xor
cltd
test
jnp
jnp
addr16
jge
mov
jno
fcmovu
lahf
jg
repnz
mov
in
in
push
add
mov
cmpsl
pop
mov
xor
xor
xchg
xchg
cld
jmp
shlb
and
mov
lods
cwtl
gs
dec
rorb
lcall
lods
xor
add
inc
shl
jne
push
mov
sahf
lret
push
bound
jb
or
mov
cmp
bound
arpl
or
add
movsb
movsb
ja
std
out
pop
add
mov
jecxz
push
and
cmp
mov
mov
jmp
xor
jge
push
mov
outsl
inc
pop
fldenvs
pop
adc
push
lods
lcall
xchg
shll
adc
pop
pusha
gs
and
sbb
and
ret
xor
mov
test
pop
lahf
test
repnz
bound
fmul
lsl
js
lret
jne
xchg
or
add
icebp
lods
mov
in
out
cmp
sbb
push
jmp
jne
leave
cmp
sub
ficoml
scas
test
pop
xor
cmpsb
insl
or
ss
add
rclb
mov
add
pushf
mov
out
mov
push
add
out
cltd
sarb
test
pop
sbb
subl
lea
adc
xchg
out
or
lock
xor
and
pop
pop
or
dec
hlt
rcll
inc
adc
test
cwtl
sub
cmp
jp
or
mov
mov
sub
lret
daa
dec
in
sbb
lods
nop
cmp
scas
in
cmc
in
cmc
icebp
xor
sbb
pop
fs
punpcklbw
sub
fiaddl
lahf
test
mov
fmull
add
xor
sbb
adc
lret
adc
imul
adc
mov
mov
test
jmp
push
push
hlt
sbb
sbb
cmp
sub
xor
shl
sti
cmpsl
fadds
in
mov
dec
jno
mov
jnp
out
and
adc
mov
and
inc
jbe
movsl
movb
test
dec
inc
mov
inc
cmp
sti
and
fdivr
pop
jnp
clc
jno
cmpb
or
fisubrl
in
add
call
je
pop
pop
pop
clc
push
sahf
aas
sub
jmp
sbb
test
movsb
loope
rcrb
loop
jbe
pop
jl
mov
mov
cwtl
push
fcmovu
loop
mov
movsb
dec
decb
sub
jle
jbe
jp
repnz
ljmp
pop
sub
mov
cmp
xor
in
mov
mov
mov
fcoml
int
cmp
fs
inc
addb
cmp
ret
mov
cwtl
lds
jne,pt
sub
and
js
mov
sub
jle
cmp
mov
sub
sti
xchg
sbb
adc
addl
push
push
inc
arpl
inc
sbb
lret
cmp
popf
sbb
data16
lds
xchg
jne
sti
cmp
fildl
mov
sbb
inc
lahf
movsb
outsb
jle
or
pop
inc
outsb
int3
shll
cmp
dec
cmp
ds
inc
fidivs
cmp
jae
inc
jp
fdivr
cmp
pop
ficomps
xchg
fidivrl
loopne
aaa
leave
dec
jbe
inc
repnz
and
js
outsl
in
imul
ret
imul
sbb
cs
imul
or
cmp
sbbb
adc
rclb
sub
push
cmp
sbb
pop
insl
mov
popf
xor
mov
push
cli
in
jne
pop
pop
repz
fcmovne
test
gs
stos
jno
rcrl
pop
icebp
mov
inc
rcrb
call
mov
mov
jbe
fwait
sbb
mov
stc
push
imul
mov
ret
jnp
iret
xchg
inc
mov
mov
xor
js
xlat
fildll
pop
outsb
outsl
jno
xchg
fwait
mov
pop
out
pop
or
fsub
std
leave
jnp
xchg
cmp
jge
ror
jge
lods
shr
xchg
fdivrs
inc
movsl
scas
inc
and
andl
and
fnstenv
and
stos
cmc
mov
outsl
mov
fsub
pop
mov
push
loope
sbbb
xor
and
pop
popa
mov
sbb
clc
xchg
cmp
push
cs
subl
ja
pop
mov
push
and
imul
inc
mov
push
rclb
icebp
or
xchg
dec
mov
or
imul
pop
int
negb
scas
or
jne
loop
mov
ficompl
mov
jle
out
sti
pop
jp
inc
cmpsb
mov
neg
jg
repnz
daa
scas
aad
lcall
nop
jne
out
cmc
push
add
cli
stos
sbb
sub
inc
or
push
mov
adc
push
pop
aad
lcall
daa
inc
loop
ficoml
and
rclb
push
fmuls
push
pop
xchg
mov
ret
or
inc
inc
repz
mov
je
movsl
mov
mov
repz
repnz
adc
outsl
inc
sbb
sarb
jns
stos
cmp
xor
and
xor
arpl
movsl
mov
lret
or
dec
sbb
cltd
pop
jecxz
movsb
mov
jnp
pop
sbb
push
cmp
and
nopl
out
ljmp
iret
test
inc
mov
inc
push
ret
push
scas
mov
shll
jae
clc
and
out
stos
mov
mov
mov
int
idivb
and
into
subl
fidivs
adc
imul
stos
sbb
adc
cmp
sub
insl
clc
js
jne
jb
mov
fidivs
lods
mov
mov
enter
sbb
hlt
int3
pusha
xchg
andl
int
imul
dec
mov
orl
pop
jne
xchg
inc
rorl
mov
push
popa
into
cmp
into
pop
inc
neg
imul
jp
stos
and
xchg
das
sub
mov
mov
pop
test
mov
std
jg
xor
nop
jbe
jbe
mov
inc
inc
xor
popaw
jne
xor
inc
mov
adc
jp
call
jnp
ss
dec
loop
lea
cmp
jne
mov
test
xchg
rclb
test
mov
inc
push
fsubl
mov
xor
orl
push
mov
push
pop
nop
jl
fnsave
das
test
mov
movsb
sbb
repz
inc
aas
in
and
cltd
icebp
inc
inc
dec
shlb
or
call
movsb
adc
pop
aaa
out
mov
ds
fucomip
cmp
push
ja
add
pop
jno
pushf
dec
jmp
pop
inc
mov
xchg
shll
pop
cmp
ret
or
pop
inc
ret
pop
adc
mov
sub
cli
out
lds
push
xchg
mov
adc
jo
mov
insb
ljmp
into
gs
adc
je
xchg
sahf
push
daa
in
movb
ficoml
add
xchg
fwait
sbb
push
jle
xchg
sbb
dec
mov
cwtl
cmpsb
fsub
push
pop
pusha
jle
push
mov
pop
sub
repz
xchg
push
ljmp
cmp
push
aas
icebp
or
push
jp
jbe
mov
adc
sub
cmpb
cmp
fdivrl
lret
sbb
test
cmpsb
dec
int3
mov
adc
mov
jp
mov
fisttps
in
cmp
incl
movsl
scas
rorb
ja
insb
outsl
dec
mov
imull
push
xor
push
push
mov
shlb
adc
mov
pop
in
mov
cld
mov
xlat
fimuls
cs
inc
rcll
mov
xchg
mov
addl
lods
cmpl
movb
cli
rclb
and
xor
arpl
int3
test
xchg
push
aaa
insb
jb
sbb
xchg
pusha
icebp
cld
imul
jns
das
sbb
or
dec
xchg
loop
inc
xor
add
inc
push
pop
data16
loope
sub
mov
mov
sti
imul
shrb
sbb
mov
scas
xorl
mov
jmp
inc
or
fs
mov
std
xor
gs
push
movsb
pushf
mov
dec
or
jo
outsl
cmp
jne
fsubrl
dec
loopne
push
outsb
pop
and
cmp
xchg
test
adc
or
xor
push
test
pop
int3
dec
inc
lea
or
pminsw
aas
mov
and
pop
pop
arpl
mov
dec
cmpsb
mov
rolb
mov
xchg
repnz
jg
iret
stos
mov
push
ret
jb
int
icebp
out
lcall
cmpsl
and
outsb
add
push
dec
mov
mov
test
pop
in
popa
mov
repnz
js
repz
in
repnz
mov
dec
sub
mov
imul
mov
cli
or
mov
imulb
xor
daa
sub
out
sub
out
xchg
frstor
insl
push
pop
or
lahf
sahf
cmp
into
xchg
cmc
fs
js
adc
ja
jmp
inc
insb
jmp
sbb
movsl
sbb
and
call
mov
cmp
dec
in
sbb
testb
pushl
cmp
shr
adc
fwait
mov
sbb
mov
das
dec
adc
in
sub
dec
jp
loope
sbb
out
je
mov
push
movsl
jecxz
mov
push
mov
mov
lea
shrb
inc
jnp
test
xor
int3
xlat
aam
js
in
in
stos
push
mov
fwait
sets
out
fmul
inc
std
push
xor
sub
mov
cli
ficoms
out
popf
push
dec
out
push
sbb
stos
mull
sahf
xchg
sbb
xor
popa
lods
imul
xchg
retw
aad
mov
loope
in
sbb
lds
data16
push
clc
or
pop
loope
cmp
push
aam
mov
cli
mov
cwtl
fcomi
cmp
pop
iret
and
jecxz
jne
repnz
jb
mov
sbb
nop
push
add
mov
cmpsb
fsubs
adc
lret
aad
mov
dec
shrl
or
lock
out
pop
stos
mov
or
aaa
mov
pusha
adc
sbb
arpl
lock
outsb
pop
cmc
mov
cmp
scas
push
or
repz
pop
dec
xchg
aad
add
outsb
dec
repz
test
repnz
or
call
jo
addr16
jae
gs
mov
decl
xchg
scas
hlt
or
scas
icebp
inc
fldenv
lods
ljmp
xchg
jl
sub
push
pushf
cmp
into
test
and
add
xor
int
cmp
divl
cltd
fs
jbe
pop
jp
es
mov
add
aam
sub
inc
rep
cmpsb
cs
bound
loop
mov
lahf
aam
sub
cltd
mov
popa
or
mov
pop
sti
dec
pusha
int
and
and
incl
fnstsw
fisubrs
mov
pop
test
and
jb
mov
sbb
fs
test
fs
sbb
fstpt
adc
sbb
shl
test
ret
outsl
pop
bound
popf
and
ret
add
dec
dec
rcr
add
jge
fldt
das
cwtl
hlt
mov
testl
cmpsl
into
call
rorb
xor
sub
out
sbb
ret
and
cmp
addr16
xchg
xlat
adc
jns
shll
xor
aam
ud2
xchg
push
adc
xor
rcrb
aam
jp
jb
push
mov
divb
or
jl
les
mov
into
add
pop
in
and
jp
add
aas
in
js
push
sub
jmp
imul
pop
xor
xor
push
lods
imul
test
inc
push
cmp
xlat
mov
dec
test
push
jl
rolb
aad
scas
popa
push
gs
sarl
mov
fcmovb
sub
repz
inc
and
int
scas
push
mov
pushf
jne
fstl
xor
gs
imul
dec
jp
lds
cmp
rcrl
or
addr16
cmpsl
xchg
incb
lahf
es
arpl
sub
sub
xor
dec
mov
mov
mov
cli
pop
pop
jecxz
mov
rorl
pop
or
rcrb
adc
xlat
loopne
out
pop
pop
cmp
bound
xchg
fldl
jecxz
mov
dec
add
sub
xchg
in
jl
cmpsb
dec
mov
fnsave
data16
fists
sbb
sub
lods
xchg
mov
stos
ret
fisttps
mov
cmp
or
dec
outsb
repnz
mov
fwait
out
add
mov
lret
or
ljmp
adc
jmp
jmp
xor
js
fdivrl
lcall
pop
mov
push
jnp
aad
inc
push
std
popf
repnz
test
stos
inc
inc
xor
mov
nop
mov
push
jo
push
dec
adc
fwait
shr
cmc
movsb
mov
push
and
push
in
pushf
andl
jb
mov
mov
adc
jp
ret
dec
mov
cmp
scas
clc
sub
test
jmp
mov
and
mov
xor
mov
mov
fs
mov
cld
jmp
cli
sub
nop
dec
mov
jae
out
jnp
lods
mov
inc
push
mov
fwait
test
or
pop
push
add
ljmp
fldln2
fldt
jno
sbb
push
arpl
jp
pushf
adc
lea
ljmp
push
or
xchg
dec
push
jmp
fadd
aaa
mov
sti
fadd
xchg
pop
mov
test
mov
dec
in
xchg
cmp
imul
stc
cmp
jns
xchg
test
ss
mov
dec
and
adc
mov
cmp
cmp
mov
fstpt
in
lods
jge
and
cmp
cmpsl
imull
xchg
aam
fdivrl
sbb
jae
dec
int3
into
pop
dec
aas
fwait
rclb
daa
pusha
jns
adc
fdivl
les
mov
loop
out
js
stc
mov
lcall
mov
ss
repz
xor
pop
daa
jge
not
loop
adc
dec
mov
push
leave
dec
rorb
mov
inc
flds
subl
lret
ljmp
sub
js
mov
dec
push
call
sub
cmp
or
sbb
in
js
push
lods
cmp
insb
clc
jl
dec
fcomps
mov
sbb
in
js
push
lods
cmp
insb
clc
jl
dec
fcomps
mov
sbb
in
js
push
lods
cmp
insb
cld
jl
dec
fcompl
mov
pushf
dec
adc
ret
fdivrl
fs
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
jp
dec
stc
pop
xchg
lock
fs
sbb
imul
sbb
shrl
jmp
sub
jg
ljmp
or
jge
sub
pop
jp
dec
aas
pop
cltd
sub
cmp
ljmp
sub
inc
out
out
dec
in
mov
stc
or
nop
lods
or
push
xchg
repnz
shlb
pop
iret
insb
jne
pop
lds
push
and
fnstcw
data16
cmpb
xchg
xor
mov
test
mov
cltd
jp
mov
add
hlt
fst
sbb
xchg
int3
xchg
fiaddl
push
mov
mov
or
sub
test
mov
add
test
lcall
cmp
mov
icebp
sbb
xor
sbb
dec
xor
insb
push
hlt
pop
push
add
popa
mov
addb
ljmp
mov
sub
push
jp
dec
xchg
pop
mov
fnstsw
test
ljmp
imul
scas
add
insl
in
dec
mov
lcall
pusha
fidivs
pop
clc
jle
leave
push
push
push
scas
add
cmp
imul
xor
sbb
jp
jl
pop
out
js
mov
das
mov
cmp
ljmp
or
cmp
jmp
sub
sbb
pop
cli
imul
sbb
leave
push
push
inc
and
idivb
or
call
or
inc
xor
stos
inc
test
shl
jne
jnp
add
inc
ret
ret
inc
mov
jp
shll
inc
movlps
sbb
inc
std
sub
mov
cmp
xor
mov
mov
or
clc
mov
cwtl
fmuls
xlat
call
sarb
inc
cli
or
ffree
xor
mov
adc
mov
mov
inc
loop
xor
leave
cli
call
imul
push
iret
pop
dec
std
and
adc
data16
and
stos
cs
pop
mov
push
into
or
lods
jne
or
mov
out
scas
fnsave
push
lods
call
xchg
imull
add
xor
rcr
or
data16
mov
pushl
mov
xor
and
xlat
xor
add
or
out
mov
jb
mov
push
and
xchg
int3
mov
sbb
mov
mov
fidivs
into
cli
sti
jns
nopl
mov
add
dec
mov
dec
sbb
addb
inc
add
xchg
jmp
loopne
pop
in
xor
sub
mov
outsl
mov
jne
cmp
pop
scas
shrb
loopne
mov
mov
push
mov
mov
test
cmp
sbb
enter
fimull
adc
scas
xor
lods
lds
sahf
push
fucomip
sti
and
xchg
push
iret
clc
push
test
fsubl
or
out
rcr
into
jecxz
cmp
cwtl
jbe
fldcw
inc
bound
enter
pusha
stos
pop
rclb
dec
mov
icebp
mov
in
test
shrb
inc
fidivrl
jge
xchg
aaa
sub
or
push
movsb
jp
mov
pop
inc
pop
push
mov
mov
mov
rcll
hlt
push
push
cmp
scas
cmp
mov
mov
jg
dec
mov
or
inc
lods
cmp
dec
xorb
cmp
push
mov
ljmp
daa
inc
andl
xor
and
jbe
nop
in
inc
and
inc
das
cwtl
cmp
sub
das
cmp
pop
fcoms
sti
xchg
sub
test
in
icebp
jne
ja
cmp
jnp
test
or
movsb
mov
leave
pop
std
dec
int3
sub
jb
mov
pusha
sbb
mov
loope
ret
jp
sbb
sub
test
mov
ret
pop
lods
push
inc
pop
sbb
mov
das
popf
sub
xlat
ljmp
shrb
ds
test
xor
lock
and
loope
push
lods
jge
xchg
ja
aam
jo
xor
mov
mov
pusha
mov
call
jnp
xchg
aas
jnp
push
cmp
adc
popf
jbe
bound
les
aam
cmpsl
xchg
mov
xchg
leave
inc
sbb
mov
iret
jb
mov
sbb
cmpsb
pop
jns
sbbl
pushf
je
fsts
pop
jne
or
lea
inc
adc
push
fisubl
push
jbe
std
test
movsl
add
mov
sbb
xchg
push
mov
jl
pop
cmc
or
pushf
cmp
cmp
rclb
jecxz
mov
push
push
dec
sbb
mov
loopne
sbbl
lret
test
push
pop
mov
adc
movsb
lods
cmp
ljmp
lahf
push
jne
or
aas
pop
pop
adc
pushf
mov
jns
sbb
inc
repz
sbb
cmpsl
loopew
outsb
andb
not
pushf
mov
jns
into
xor
andb
repz
les
das
nop
mov
out
pop
cs
push
push
aas
fdivrs
addr16
adc
sub
mov
in
aam
adc
sbb
xor
dec
inc
in
fcompl
xlat
xorb
lods
lret
mov
aas
xor
push
ffreep
push
stos
xchg
mov
xorl
jge
inc
and
fmul
dec
xchg
loop
imul
call
and
push
shrl
mov
xchg
xchg
xor
push
inc
cmp
mov
push
or
je
test
sub
mov
fdivl
loopne
or
or
and
leave
mov
mov
mov
shlb
jnp
pop
sbb
popf
jp
flds
inc
jo
fnstsw
jp
cmp
out
divb
in
movsl
cmp
popf
adc
sti
sbb
mov
add
jns
adc
pusha
pop
fsub
cwtl
js
call
loop
mov
or
repz
je
hlt
test
aad
cmpsb
les
sbb
sub
sahf
outsl
jl
or
pusha
fstpt
push
lods
mov
fwait
nop
mov
shrb
bswap
ret
dec
pop
xchg
xchg
jae
mov
ja
adc
mov
les
fs
cwtl
cwtl
lods
out
mov
jmp
roll
add
jmp
sbb
cmp
out
sbb
in
lods
in
daa
mov
jge
push
loope
mov
in
insb
pop
stc
sahf
fistpll
mov
inc
inc
test
stc
shr
push
out
movsl
push
or
mov
out
or
out
inc
adc
repz
jne
lock
adc
add
xlat
dec
fldl
add
add
mov
cmp
je
xchg
pop
mov
xchg
icebp
notw
ret
movsl
xchg
inc
push
es
lret
aam
orb
jg
mov
cmpsb
jbe
arpl
cmp
ljmp
xchg
mov
cmpsb
jp
sub
sarb
rcll
cld
scas
sub
out
mov
sub
dec
inc
jmp
insl
push
sahf
popf
mov
cmp
sbb
push
mov
je
jbe
xor
sahf
push
inc
aad
add
adc
mov
mov
jl
adc
mov
int3
jg
addr16
pmaxsw
movsb
cmc
or
lcall
push
cmp
icebp
stos
or
subl
push
inc
adcl
cmp
push
and
inc
and
pusha
xchg
loopew
imul
pop
mov
gs
xsha256
cmpsb
push
push
sbbl
repz
jmp
scas
jns
add
cli
imul
push
mul
xlat
xor
push
fs
stc
jp
jb
stos
lds
mov
aaa
mov
fmul
xchg
dec
push
lahf
dec
stc
cmc
cltd
sahf
inc
mov
fs
add
add
pop
mov
jle
mov
jns
loopne
dec
insb
push
push
pop
nop
sti
pop
mov
jl
jnp
sarl
push
cmp
sub
push
jo
fnstsw
jno
notl
repnz
repz
push
sub
shlb
inc
push
jmp
imul
rolb
mov
dec
xor
cltd
xchg
and
cmp
into
das
xchg
lods
cmpsb
inc
xlat
sti
dec
test
push
fs
aam
lcall
or
repz
pushf
inc
push
shrb
cwtl
jnp
test
int3
jmp
mov
test
mov
jge
call
adc
jge
shlb
mov
push
aad
out
test
sahf
mov
push
lahf
xchg
inc
xor
dec
repz
cmpsb
fstpl
fcoml
xchg
icebp
outsl
scas
sbb
in
xor
inc
ficomps
cmpsb
dec
cmp
iret
negl
fcomp
out
mov
jno
aad
popa
jl
sbb
fidivs
lcall
xor
mov
cwtl
add
cmp
inc
inc
and
daa
jp
xchg
imul
test
and
mov
push
xchg
mov
cmc
loop
lods
sub
faddp
call
sub
shrb
ret
data16
and
xor
pop
fisubrs
push
cmc
inc
call
mov
jl
xor
sti
pusha
inc
loopne
push
mov
add
xchg
call
out
ret
push
inc
bound
adc
nop
subb
push
test
loopne
aaa
movsb
loopne
pop
test
icebp
outsb
repz
decl
in
mov
xchg
jns
sub
lret
or
mov
ss
cmc
popa
clc
push
insl
xor
mov
int3
pop
pop
or
jne
mov
mov
sahf
push
shl
jae
inc
and
push
add
or
add
xchg
cmp
inc
mov
test
and
mov
inc
addr16
lcall
icebp
lods
jge
scas
push
cld
loop
add
mov
scas
push
inc
and
jge
sub
mov
xchg
call
inc
stc
add
sbb
add
jecxz
pop
dec
out
and
imul
pop
adc
or
jbe
jne
stos
sbbl
inc
sub
dec
jae
outsl
leave
imul
mov
mov
pop
int3
mov
shl
out
inc
adc
push
xor
loopne
sbb
scas
and
and
sbb
inc
mov
out
jl
mov
pop
repz
xor
push
lahf
nop
push
push
sub
out
pushf
stc
jb
mov
jo
push
xor
loope
add
fnsave
addr16
pop
push
aam
add
loop
xchg
push
insb
jae
mov
mov
jl
cmp
push
mov
mov
mov
mov
std
add
add
push
dec
xchg
xchg
ja
adc
push
je
sbb
ss
icebp
loopne
adc
cmp
push
cmp
adc
or
push
test
add
mov
lret
sbb
inc
xor
mov
inc
push
test
mov
fisubl
fmuls
les
test
push
cmpsl
stos
jne
push
orb
es
loope
cmp
dec
mov
and
in
aaa
cltd
test
cwtl
inc
ja
mov
fwait
dec
push
push
decb
lahf
adc
pop
movsl
imul
gs
call
cmpsb
pop
mov
or
sbb
xor
pop
dec
adc
sahf
pop
ljmp
lsl
movsb
shl
add
dec
mov
push
adc
jno
loope
leave
dec
es
sub
notl
js
jno
inc
cmp
cmp
sahf
xlat
and
xor
push
pop
dec
mov
fisubrs
push
jne
sub
rorb
mov
xchg
mov
adc
ja
cmp
mov
imul
test
divl
or
mov
jg
mov
test
sbb
cmp
ret
inc
cld
ret
and
arpl
int
fldcw
jne
add
sbb
or
cwtl
mov
int3
outsl
mov
inc
iret
sarl
out
or
js
inc
and
inc
ja
push
cli
repnz
fsubrp
movsl
xor
out
jnp
rcrb
pop
or
movsl
dec
sahf
cmp
enter
push
popf
xchg
pop
mov
push
mov
call
nop
pushf
xchg
out
mov
mov
dec
orl
cmp
sti
sbb
jge
arpl
lods
xchg
mov
std
sub
int
xlat
dec
insb
test
sahf
fwait
sub
xor
fnsave
sbb
add
pop
jp
mov
push
mov
pop
bound
jae
pop
and
mov
jge
js
xchg
movsl
subl
dec
and
lret
lea
xor
bound
aas
mov
pop
testb
xor
addr16
orl
jns
aam
sub
push
idivb
xor
pop
jo
pop
xchg
int
xor
cld
cmp
mov
dec
mov
cmp
cli
hlt
push
xor
push
jecxz
cmc
adc
adc
fcompl
cmp
call
ja
jecxz
sti
push
data16
mov
fs
adc
es
or
loopne
insb
popf
and
add
jae
inc
mov
cmpsb
cmp
mov
cmc
lret
push
inc
shr
clc
ret
imul
sbb
enter
mov
mov
dec
je
dec
or
popa
mov
push
push
dec
enter
fcoms
dec
or
scas
insb
dec
push
aaa
clc
xchg
mov
fisubl
cltd
jbe
lea
movsl
ss
mov
movsb
xchg
aas
jne
lea
mov
ds
ror
mov
push
mov
loope
or
cmp
cwtl
ds
jmp
cmc
dec
lret
int3
add
xchg
or
dec
push
xor
inc
pop
xchg
xchg
test
shll
pop
mov
adc
sub
das
fdivl
arpl
js
ljmp
mov
fucom
mov
mov
jnp
pop
out
push
cld
test
fcompl
add
in
jl
pop
jg
cmp
add
clc
fistl
lock
in
sub
je
out
xchg
dec
pop
sub
daa
pusha
bswap
insl
imul
in
ret
or
and
inc
mov
dec
ss
inc
mov
fisubs
stos
pop
cmp
sub
daa
shrb
cmpsl
cmp
insb
mov
dec
xchg
inc
pusha
inc
push
fs
pop
into
ss
mov
lret
in
aaa
das
cli
xlat
cwtl
testl
pop
mov
ret
insl
mov
or
dec
or
lcall
and
push
dec
inc
inc
and
cmp
sub
and
fst
and
mov
cmp
icebp
mov
fld
adc
loope
stc
jp
mov
test
cmp
lods
add
mov
jle
mov
outsl
and
cwtl
xor
ret
aam
gs
addb
and
in
int
mov
xor
loop
in
pop
and
sbb
cs
xor
into
sbb
pop
std
test
int
mov
or
lahf
adc
lods
fwait
ds
jecxz
sbb
and
cmpsb
sbb
push
mov
mov
fsubrs
mov
mov
pop
loopne
arpl
movsl
and
xchg
jnp
stos
jp
outsb
jl
bound
add
push
add
cld
negb
and
outsl
das
dec
mov
sbb
cmpsb
xchg
fwait
cmp
jnp
out
jo
add
into
fbstp
iret
es
add
shrb
ficomps
or
mov
mov
xor
push
jmp
in
push
lcall
test
xor
lods
xchg
xlat
mov
or
jbe
inc
push
fwait
movsl
mov
in
sub
sar
lret
loope
mov
sub
inc
jmp
ljmp
push
sbb
or
push
hlt
gs
or
insl
pop
orb
iret
clc
cmpl
and
add
imull
addr16
push
adc
in
inc
fimuls
mov
jmp
scas
adc
sub
sbb
test
test
enter
cld
cmp
push
pop
adc
jge
mov
push
iret
iret
mov
jae
ret
fsubrs
xchg
js
xchg
rorl
inc
cmp
mov
mov
mov
inc
mov
leave
dec
fcompl
mov
mov
test
and
push
cmpsb
jnp
xor
les
jae
adc
sbb
cmp
orb
daa
push
popa
mov
insb
pop
lock
movsl
mov
push
mov
data16
inc
sub
fwait
in
dec
mov
sub
cmc
push
cmp
dec
fcomp
fs
jo
add
mov
and
in
push
inc
cmpsl
jo
push
cmp
ss
sub
inc
out
out
jns
pusha
and
lock
in
mov
lahf
add
test
lret
ljmp
push
push
orl
pushf
ss
inc
cmp
jnp
daa
dec
jp
push
xlat
loope
out
aas
lods
cmp
mov
jae
js
push
sbbb
adc
jecxz
xor
inc
mov
push
in
add
repnz
sub
or
inc
xchg
pop
push
cmp
jp
ret
icebp
cmp
stos
mov
push
pusha
mov
lret
mov
cmp
pop
add
fsubl
data16
scas
jno
pop
out
xor
lds
mov
pop
dec
ljmp
bound
repz
and
lret
aam
loope
aad
sub
mov
inc
loop
stos
ret
or
add
inc
cld
lds
or
pop
out
pop
pushf
jns
inc
sub
and
aad
or
outsl
cmp
ja
sbb
call
sub
adc
mov
fcomi
fiadds
mov
or
mov
xchg
repz
mov
sub
adc
cmpb
ja
xchg
jb
pop
xor
loop
jle
mov
loop
pushf
fdivp
popa
cli
adc
mov
in
inc
cwtl
dec
js
jmp
or
fdiv
pop
xor
fnsave
int
push
stos
or
mov
push
push
in
mov
mov
dec
cmc
adc
and
inc
mov
jmp
rcrl
dec
pusha
jmp
xor
jae
cmp
cwtl
sbb
xor
arpl
mov
push
nop
loope
arpl
sbb
shr
faddp
sti
push
mov
sbb
fld1
mov
mov
pmulhw
inc
sar
fistpl
leave
sub
sub
mov
jp
sub
adc
cmp
xor
test
cmp
movsl
rorl
add
sbb
sbb
in
ficoms
cmpsb
movsl
xchg
xchg
ds
cmpsl
movsb
cli
mov
or
xchg
inc
push
outsb
add
xor
cmp
and
pop
das
push
mov
or
dec
daa
es
fucomi
sub
imul
xchg
out
jne
in
loopne
mov
mov
sbb
inc
mov
rcll
out
sub
pop
call
pop
xor
std
paddusb
pop
testl
gs
flds
in
pop
adc
and
call
jg
push
mov
push
jl
movl
ficoms
movsb
jns
mov
out
dec
cli
dec
xchg
push
std
cmp
lret
xor
push
xor
imul
fistpll
cmpsb
or
and
sub
cmp
pop
add
fs
mov
or
ret
sti
mov
leave
xchg
rcr
cmp
xchg
enter
jge
out
sub
inc
inc
mov
push
test
dec
das
xor
les
jp
pop
mov
inc
pop
mov
jp
xor
or
xchg
stos
xchg
mov
push
jl
xor
cmpsl
xchg
mov
sbb
cmp
mov
or
push
sub
cmp
sti
lea
cmp
pop
scas
jnp
mov
insb
mov
repz
movsb
les
and
daa
jl
mov
inc
dec
out
jae
mov
sbb
pop
mov
fstps
cmp
xorl
mov
daa
aam
mov
outsl
xor
sub
mov
inc
inc
aad
popf
test
out
xor
cmc
fidivrl
ja
sahf
pop
faddp
test
xchg
rorb
sahf
imul
loope
iret
imul
in
insb
sub
insb
div
and
aas
jb
ljmp
cmp
out
xchg
scas
idivl
jno
movl
scas
dec
repz
movsl
js
test
stc
das
test
fwait
cld
rolb
mov
hlt
lret
mov
imul
scas
sti
push
scas
xor
orl
jne
dec
cmp
cltd
pop
clc
into
push
jg
fstpt
call
xor
mov
push
push
xor
mov
mov
std
sub
mov
jb
aas
loop
mov
xchg
cmp
ljmp
push
sub
repnz
ja
call
hlt
pop
jae
sbb
pop
cmp
sub
shlb
push
jae
push
aas
inc
movsb
stos
inc
xlat
mov
das
sub
loop
in
inc
call
sub
pop
loop
and
push
pop
lds
repnz
mov
pushf
mov
push
push
mov
sti
cld
cmpsb
mov
nop
daa
sbb
mov
out
stos
and
sbb
add
iret
add
loope
cmp
inc
icebp
lahf
imul
lret
stc
out
lcall
fisubrs
dec
mov
sub
jb
lea
cmp
and
insl
popf
mov
xchg
jecxz
lahf
icebp
out
sbb
or
rolb
pop
dec
ret
push
xor
mov
add
std
loop
mov
lret
dec
mov
sbb
sbb
pop
dec
stc
inc
jo
ret
inc
repz
jb
mov
xor
cmp
shlb
lea
add
out
inc
cs
push
insb
inc
add
ret
sbb
mov
cli
pop
or
hlt
push
and
xor
roll
xor
stos
icebp
std
xor
fisttps
mov
sub
and
hlt
cmp
cs
add
adc
mov
sbb
inc
in
xchg
outsl
xorb
xchg
dec
sbb
jae
sbb
cmp
outsl
pop
clc
add
pop
push
fdivrp
mov
pop
sbb
cmpb
in
mov
cltd
cmp
ljmp
or
cmp
jmp
sub
sbb
pop
cli
imul
sbb
leave
push
jp
dec
stc
pop
mov
popf
cmp
ljmp
or
or
popa
dec
rcrl
sub
fimull
cmpsb
push
ret
lret
jle
xchg
inc
jne
gs
repnz
outsl
mov
fsubr
lods
cwtl
mov
inc
jge
pop
and
xor
add
repnz
ret
frstor
lea
jge
inc
push
pop
loop
xor
loop
repnz
push
shrb
addb
pop
cs
das
and
pop
ja
jl
mov
sahf
mov
inc
mov
push
add
mov
mov
cmc
ja
push
repnz
push
stos
out
jns
sahf
mov
mov
jl
outsl
bound
mov
or
push
xchg
movsb
lds
inc
or
bound
inc
dec
xchg
mov
fsts
in
repnz
test
rcr
test
xchg
adc
call
cmp
jb
xor
adc
and
sub
mov
mov
sub
lods
das
lods
jno
int
push
pop
adc
add
inc
dec
paddw
sub
jb
mov
ja
popa
repnz
mov
mov
orb
aad
dec
push
popa
and
xor
add
xchg
mov
clc
nop
fisubl
pop
or
and
push
popa
jns
je
stos
xchg
mov
mov
in
scas
pop
or
or
push
insl
and
cmp
xchg
mov
mov
bound
jge
dec
push
pop
and
adc
ret
frstor
lea
jge
dec
push
pop
and
adc
pop
mov
xor
mov
and
mov
inc
fsubrl
cmpsb
lret
inc
xchg
push
sbb
xchg
xor
jle
test
and
insl
negl
mov
xor
imul
jle
outsb
sarb
shrl
scas
inc
sahf
enter
mov
ret
pop
addl
lods
aam
jg
repz
push
jnp
mov
jp
std
ficoml
mov
xor
xchg
outsb
dec
orb
cwtl
in
jnp
mov
dec
aaa
out
adc
adc
out
sub
aad
fbld
and
push
cmc
pusha
dec
aad
or
insl
data16
fnstsw
subl
sub
jns
or
xchg
mov
mov
xor
add
cmp
pushf
int
cmpl
mov
xchg
adc
outsl
xor
sbb
dec
pop
dec
jge
sub
out
mov
shll
mov
sub
mov
xor
xor
and
in
and
call
shrb
jge
xlat
cmp
mov
dec
mov
mov
push
push
dec
test
pop
pop
cwtl
and
hlt
xlat
cmp
jge
xchg
mov
shrb
xor
shlb
jno
cltd
sub
xlat
out
test
sbb
sti
sub
outsl
in
xchg
pop
imul
fs
fiadds
ss
pusha
mov
pop
frstor
mov
or
inc
rcl
shl
xor
dec
repz
add
int3
adc
push
ret
sbb
sub
mov
lret
mov
jb
push
ror
insl
adc
add
enter
cmpsb
cs
scas
mov
bswap
aad
push
negl
scas
cs
inc
idiv
adc
shll
dec
push
fldenv
lret
aam
xor
dec
xchg
scas
adc
cmp
movsl
or
dec
fwait
movsb
rep
xlat
xor
push
mov
jns
into
in
in
shrl
cs
pop
cmpsl
int
cmc
test
push
aaa
jl
inc
incb
into
xchg
cld
out
cwtl
sub
pop
mov
ret
out
xchg
xor
cs
lret
loop
and
inc
daa
mov
sub
sbb
sub
imul
pslld
mov
leave
add
lods
sbb
leave
cmpsl
hlt
lahf
aam
xor
push
and
sbb
and
cltd
mov
adc
adc
insl
dec
adc
jg
adc
dec
mov
imul
xchg
inc
nop
or
ret
adc
adc
loopne
test
push
dec
or
movsl
and
into
push
xor
jmp
stos
test
fiaddl
add
in
mov
nop
std
and
xor
out
in
jecxz
add
inc
dec
int3
jo
mov
ja
mov
or
lret
lods
into
adc
imul
sti
pop
or
pop
cwtl
insl
add
lock
jnp
imul
mov
fdivrp
pop
loopne
xchg
std
sti
enter
fnstenv
jg
lret
outsl
popf
xlat
scas
aad
dec
test
jl
xchg
sub
fcoms
jns
jne
inc
lcall
mov
test
ja
cltd
or
out
loope
out
gs
adc
jae
insl
mov
push
xor
fldt
aad
jge
ret
jle
cltd
xor
icebp
adc
ds
out
jbe
jno
add
sbb
stos
mov
mov
sub
mov
dec
pop
mov
sti
push
lods
or
or
loope
mov
sbb
nop
mov
sbb
xor
xchg
movsl
fs
mov
aas
cmp
sbb
insb
xor
fsubrl
dec
mov
fs
inc
and
test
pop
cwtl
mov
pop
pop
arpl
sbb
adc
nop
imul
and
sbb
adc
or
pop
adc
or
mov
hlt
daa
pushf
js
out
sahf
and
pop
push
mov
sub
pop
je
lret
loopne
insb
sub
adc
add
cmpsb
pusha
jle
aad
movzwl
fnsave
jnp
popa
inc
inc
push
and
pop
jp
jns
push
cld
push
cld
loop
ljmp
mov
and
adc
enter
inc
or
insb
sbb
cwtl
jae
adc
inc
bound
add
test
fistpll
clc
sub
inc
das
loopne
lret
mov
in
xor
cmpsl
shl
andb
mov
sarl
mov
mov
flds
lea
mov
sar
aaa
lock
aas
cmc
push
cmp
or
adc
ret
fwait
sbb
and
filds
addr16
sub
mov
cmp
dec
arpl
add
cld
jne
mov
iret
mov
out
test
ds
in
or
mov
sahf
aas
push
mov
dec
mov
mov
mov
add
inc
and
lret
test
mov
xchg
xor
or
jne
push
sbb
lcall
pop
fimuls
popa
test
repnz
test
movsb
nop
insb
xchg
mov
mov
stos
inc
test
jle
push
addr16
jnp
push
xchg
fld
push
sbb
cmc
cmpb
push
sbb
les
test
sbb
insb
push
incl
popf
stos
xchg
rcrb
lcall
mov
pop
loopne
sub
push
inc
hlt
mov
adc
or
lret
bound
sub
or
or
in
mov
sub
fndisi(8087
mov
cs
outsb
lea
add
xor
sbb
pushf
cli
loop
leave
and
rorl
xchg
sub
enter
and
fwait
jno
int
jge
mov
sub
dec
inc
shll
mov
xchg
sbb
dec
push
sub
mov
xchg
or
xchg
clc
std
add
pushf
xchg
jecxz
xchg
dec
adc
and
jge
dec
loopne
sub
push
aaa
pop
pop
jno
ss
repz
fstps
icebp
mov
mov
sub
loope
mov
mov
adc
mov
xchg
or
dec
dec
xchg
jmp
cmp
sbb
xchg
in
outsl
mov
cltd
push
jecxz
les
pop
inc
mov
push
and
xchg
mov
sub
lret
out
shll
mov
cmpsl
push
and
dec
push
mov
xor
stos
push
aam
xor
inc
les
sub
fwait
adc
mov
enter
push
es
stos
inc
aaa
neg
outsl
mov
dec
adc
lret
cmp
ljmp
rol
sub
xchg
cmp
cmpsb
xchg
adc
push
xor
push
mov
mov
divb
jge
aaa
cltd
stos
movsb
test
xor
mov
jnp
icebp
inc
imul
inc
fsubs
add
rcrb
sub
popf
xor
jg
or
lcall
aam
jle
hlt
jns
stc
scas
dec
loop
test
or
shl
rcll
mov
into
mov
lods
mov
pop
orl
out
nop
add
xor
pop
popf
negl
dec
jns
push
ja
inc
mov
je
pop
out
jmp
inc
sbbb
scas
shl
mov
fisttpl
aaa
xchg
testl
gs
hlt
lret
mov
sub
mov
jo
or
pusha
xchg
mov
mov
lret
or
and
jae
mov
pop
call
mov
fists
inc
push
lret
xor
in
inc
cmp
add
inc
in
add
div
xchg
hlt
mov
test
pop
lods
out
test
shrb
gs
aas
into
out
mov
xor
cmp
out
jae
pop
and
xor
inc
xchg
mov
repnz
cmp
pop
outsb
test
mov
stos
xor
inc
pop
jo
dec
aad
rol
adcl
xor
outsb
or
xorb
xchg
mov
dec
push
mov
popf
add
and
pop
push
les
mov
lret
arpl
sti
mov
stos
xor
in
mov
leave
ret
dec
jp
sub
xchg
sub
cli
push
mov
je
lcall
frstor
pop
or
loope
rolb
mov
bound
negb
and
mov
push
repz
sbbl
test
lret
clc
fldenv
mov
dec
mov
xchg
dec
iret
inc
add
jnp
int3
cmpsl
das
iret
sub
sub
xchg
mov
sub
fimuls
filds
sub
cmp
cli
mov
das
stc
fs
aaa
xor
les
out
cmp
fmull
sbb
xor
dec
jge
lea
inc
push
rcrb
mov
aaa
cltd
test
push
or
mov
inc
insl
andb
sbb
add
in
pop
sub
sub
lods
sbb
insl
fstps
mov
pushl
inc
divb
xchg
jb
mov
insl
jns
call
lods
aas
cmp
adc
fisttpl
ret
test
inc
sahf
sub
daa
dec
aaa
aas
mov
stos
pop
lock
sub
fdivrl
cli
dec
jmp
jle
sar
cmp
mov
inc
and
fiadds
cmp
and
aad
jo
icebp
jns
xlat
pushf
inc
out
push
adc
sbb
popa
jle
mov
jp
test
cmpsl
pop
fldcw
mov
inc
pop
or
addl
int
jne
xchg
sahf
clc
out
mov
lods
jns
in
ja
mov
and
scas
data16
fisubrl
add
cmp
adc
sti
mov
add
or
dec
push
push
mov
mov
jb
or
repz
stos
pop
mov
pop
push
jns
enter
mov
negb
loop
sub
push
xor
push
push
lock
lods
sub
pop
mov
xor
adc
fstp
stos
xor
xchg
scas
repnz
xchg
cld
or
pushf
fisubl
pop
int3
lret
push
mov
mov
push
mov
pop
xor
movsl
push
out
push
pop
inc
into
scas
jle
mov
xchg
or
jbe
cs
dec
test
xchg
lahf
push
or
cmp
pop
shll
imul
push
and
push
in
out
sarl
jmp
lods
outsl
cld
test
enter
and
cmp
inc
loopne
mulb
cmp
xor
into
cmp
mov
orl
std
aad
dec
or
cmp
push
sub
add
test
mov
mov
dec
push
jg
cli
ss
mov
aaa
pusha
cmp
mov
pop
cli
push
enter
repnz
push
or
insb
mov
add
add
or
fs
aaa
pop
inc
scas
cmp
jp
mov
add
mov
add
jg
cmp
pop
jmp
push
add
or
addr16
je
das
insl
mov
sbb
addl
sbb
movsb
sbb
lahf
loop
scas
je,pn
push
in
push
push
pop
mov
and
call
mov
popa
shlb
push
mov
scas
hlt
add
adc
mov
xchg
mov
adc
les
cmc
sub
out
enter
mov
or
push
hlt
and
cmp
xlat
mov
jb
mov
popa
xchg
shlb
push
roll
ret
imul
jae
dec
xchg
mov
pop
in
sbb
rolb
dec
or
sbb
test
pushf
lret
loopne
inc
jmp
ja
add
adc
mov
inc
inc
mov
adc
dec
push
sbbl
sub
mov
mov
xchg
adc
push
dec
pop
or
std
dec
lahf
lahf
or
pop
mov
daa
rcrl
sub
cmp
out
or
mov
test
lods
fidivrs
pop
cmp
js
dec
xchg
dec
xchg
repnz
push
in
lcall
mov
cmp
xchg
ret
enter
lcall
add
or
push
js
stc
das
and
inc
dec
or
add
cmpsl
or
mov
aas
xor
test
int
push
xor
cmp
movsb
lret
std
loope
push
add
lods
add
jno
sub
mov
cs
sub
cmc
cmp
shll
dec
cmpb
mov
mov
and
pop
cld
repz
jmp
dec
loope
shl
rclb
pop
lods
loopne
daa
cmp
inc
inc
mov
adc
jo
sbb
addl
add
jmp
movsb
pop
js
inc
clc
jg
test
adc
mov
cld
je
pop
test
mov
xchg
lret
adc
aam
in
or
outsl
orl
adc
push
push
cs
xor
pop
jecxz
sti
outsb
rclb
dec
cmp
xchg
clc
arpl
jne
xchg
pop
dec
lods
mov
dec
jmp
pusha
xor
add
adc
push
aam
xchg
jecxz
outsb
shrl
xor
add
ss
fld
pop
pushf
sti
mov
push
dec
ja
stos
lock
test
push
in
ljmp
inc
imul
mov
mov
and
push
pusha
mov
cmp
lret
iret
cmp
dec
xchg
aas
jp
fiadds
mov
jecxz
sbb
push
in
mov
and
rcrl
cmpsl
sbb
mov
idiv
xor
or
out
pusha
loop
pop
lcall
xor
xchg
test
in
xor
in
inc
lods
stc
jl
mov
je
sbb
or
outsb
xchg
in
cs
dec
mov
test
xchg
ljmp
pop
in
push
pusha
mov
push
cld
fsubrl
movsl
aad
movsl
xchg
cli
or
fs
int3
push
cmp
jns
jg
mov
jecxz
add
stc
imul
inc
subb
icebp
gs
sub
sbb
push
fwait
sbb
push
mov
mov
lret
jo
cmp
insl
inc
mov
aad
push
adc
add
xchg
xor
add
and
mov
int
mov
xor
xor
sub
aad
mov
jge
or
push
outsl
inc
pop
push
xchg
mov
inc
outsb
inc
jp
bound
jl
rcll
cli
orl
xchg
mov
push
into
mov
or
fcomps
cmc
inc
mov
enter
cs
out
push
mov
call
gs
xchg
outsb
test
clc
or
inc
sahf
js
and
adc
xchg
cmp
fsubrl
xor
jp
push
mov
push
fcoml
lcall
mov
mov
lcall
mov
ss
addr16
xchg
adc
fs
jle
sbb
and
push
clc
test
or
loop
fcoml
pop
xor
movsl
call
xchg
scas
xor
insl
sti
fidivl
arpl
hlt
movsl
or
pop
jle
dec
frstor
or
sbb
pusha
sbb
data16
out
push
pop
cmp
outsl
bound
fstl
bound
jae
insb
test
loopne
ja
push
sub
add
shll
gs
rcrb
push
xor
fsubrs
repnz
pop
mov
mov
frstor
xchg
insl
mov
and
dec
stos
mov
hlt
inc
clc
mov
ljmp
push
add
sbb
add
push
enter
cmp
push
insl
inc
inc
add
inc
mov
mov
inc
mov
and
mov
sub
cmpsl
push
fisttps
push
sub
cmpsb
sub
jecxz
aad
mov
xchg
jmp
adc
pop
jmp
mov
pop
inc
ds
popf
mov
push
test
jle
xchg
enter
inc
gs
mov
mov
jno
shlb
shrl
push
pop
xchg
testb
lds
out
dec
or
sub
arpl
or
dec
punpcklbw
and
cmp
or
or
xorb
jb
stc
aaa
cmp
push
pop
xor
cmp
xchg
sahf
clc
data16
popf
mov
and
mov
jl
stos
sub
cwtl
xor
jge
cs
adc
cs
jnp
mov
adc
insl
pop
icebp
ret
jg
sbb
add
repz
imul
add
dec
mov
mov
jmp
sub
in
scas
mov
fwait
xchg
mov
mov
cltd
stc
push
fisubrs
mov
dec
inc
sbb
mov
or
sbb
loope
push
pop
dec
cmp
cmp
outsl
mov
out
daa
data16
je
call
daa
into
sbbb
movntq
out
movsl
and
into
xchg
mov
in
mov
into
push
nop
adc
leave
sub
mov
scas
cmpl
dec
idivl
call
inc
imul
cmc
fcompl
repz
je
push
outsl
sarb
and
sbb
sub
add
inc
or
stc
sub
sahf
xchg
sbb
sbb
aaa
jp
push
push
push
outsl
inc
or
mov
mov
fs
loope
bound
das
rol
loop
shlb
or
lcall
dec
pop
stos
mov
add
jecxz
dec
or
push
or
fstpt
iret
repz
pop
xor
jns
ss
cmpsl
in
cmpsb
loope
shr
jae
jecxz
jmp
xorl
mov
jecxz
push
dec
lods
fdivrs
mov
lea
and
int
scas
and
movsb
xchg
fistpll
cmp
mov
sub
mov
cmp
je
insb
inc
jmp
jns
mov
lds
mov
scas
pop
sub
les
add
or
outsl
sbb
inc
cs
dec
mov
push
jne
jecxz
xchg
mov
dec
fs
push
imul
dec
mov
aad
aam
into
sub
gs
mov
mov
enter
shrl
pop
dec
gs
jnp
mov
push
repz
test
add
adcb
int3
jg
idivb
sbb
pop
mov
icebp
test
add
fbstp
fmul
ss
adc
mov
pop
xor
lods
mov
iret
ja
push
cmp
jg
mov
clc
ds
andb
cwtl
push
or
pop
mov
test
lea
or
setnp
cmp
ret
rcrb
into
lret
dec
repnz
dec
sub
sti
push
lods
inc
bound
or
outsl
stos
inc
mov
inc
adc
sub
pop
cwtl
jb
jno
mov
pop
fisubrl
bound
dec
inc
mov
pop
jnp
andl
jbe
sub
xor
and
jge
and
push
stc
pop
test
jne
ds
cmpsb
or
inc
cmp
sub
in
popa
inc
sub
mov
adc
lret
mov
cmc
into
adc
ljmp
xor
jecxz
or
pop
add
cltd
movsb
rcrb
pop
jo
adc
mov
in
out
jg
sbb
inc
pop
cmp
aaa
frstor
negl
aad
xchg
or
hlt
hlt
movb
cmp
push
stos
xchg
jmp
lock
pusha
push
mov
mov
rorl
mov
xchg
icebp
or
or
push
sub
sbb
pop
out
lea
lret
push
loopne
sbb
test
cli
adcb
push
movsl
nop
je
mov
add
mov
xchg
fcomps
fnstenv
das
leave
fwait
add
rcl
in
js
jnp
test
pop
or
icebp
das
testl
adc
lock
shrl
imul
addr16
cmp
xor
xlat
xchg
add
pushf
adc
cmp
dec
jne
stc
pop
dec
cmp
nop
filds
xor
rclb
imul
dec
lea
out
sbb
lahf
cmp
das
out
psrld
jae
add
scas
push
enter
and
test
mov
push
xor
pop
adc
pusha
mov
lock
pop
and
xor
push
xchg
push
dec
xchg
mov
lcall
fdivrs
aam
add
fisubl
stos
xchg
pushf
jnp
mov
lahf
xor
scas
mul
imul
stc
pop
xchg
iret
push
xlat
scas
mov
inc
mov
push
push
cmp
mov
dec
jae
adc
xor
and
es
xchg
mov
ret
enter
lods
mov
orb
jge
dec
push
pop
and
adc
ret
frstor
lea
jge
dec
push
pop
and
adc
inc
aad
fldenv
lods
mov
orb
jns
dec
push
push
and
xor
loop
repnz
sub
popf
mov
or
jb
call
push
inc
inc
jb
bound
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
leave
lret
pop
pop
push
in
pusha
fs
mov
add
add
pop
add
add
add
add
add
sub
lcall
add
dec
add
add
add
add
push
push
add
lldt
mov
pop
add
add
add
add
pushf
add
add
out
xor
sahf
add
add
add
lldt
add
add
rolb
add
data16
add
add
add
add
loopne
dec
add
pop
add
add
add
add
add
add
add
add
add
inc
add
push
add
roll
clc
add
add
add
or
jmp
xchg
mov
sbb
adc
add
add
add
add
add
add
add
add
xor
pop
add
add
xchg
fwait
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
cmp
call
push
verw
add
fwait
add
addb
add
jns
sub
movsb
add
add
fildl
jbe
fwait
add
mov
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
add
popf
add
imul
add
add
add
xchg
add
sbb
cmp
xchg
add
push
int3
add
insl
add
lcall
add
inc
add
mov
add
clc
add
fadds
add
add
sbb
add
add
sub
or
sbb
fwait
add
jns
je
push
add
add
mov
add
inc
add
add
dec
add
test
mov
dec
add
add
add
sbb
xor
aaa
add
scas
add
xlat
add
add
imul
add
add
add
add
add
or
popf
add
add
add
add
add
cs
add
jns
mov
xor
js
test
inc
add
add
add
add
sub
inc
add
inc
add
lahf
add
add
add
add
lcall
add
add
add
add
jns
lcall
add
add
xor
adc
add
verw
add
add
add
in
add
dec
add
add
add
add
addb
add
push
add
add
addb
add
imul
add
add
adc
add
add
add
inc
add
add
popf
add
add
add
inc
add
add
adc
add
inc
add
mov
add
movsb
add
dec
add
add
add
add
add
add
adc
dec
add
add
adc
add
add
add
aas
add
nop
add
add
add
add
inc
add
je
ret
add
add
add
add
add
cltd
add
add
add
adc
add
add
add
add
add
add
test
addl
add
pushf
inc
adc
cmp
cmpsl
loope
cmp
fsubs
push
fstpt
jnp
lcall
in
push
cmp
pop
xchg
inc
popf
cmpsb
mov
jmp
mov
outsb
sahf
mov
pop
int
adc
mov
xor
push
xor
mov
dec
imul
mov
int
sub
ret
orl
cltd
push
sarl
sbb
testl
daa
repz
pop
pop
xchg
cltd
sbb
andl
inc
or
jns
xorl
or
add
mov
cmpsl
vaddpd
and
in
sbb
dec
fidivrl
in
or
js
fcompl
lcall
ds
imul
cmp
xorl
in
inc
dec
shlb
fdivrs
loop
data16
inc
scas
cs
add
jle
insb
imul
int3
gs
cmpb
cmpb
rcrb
and
jae
out
stos
cli
or
movsb
test
ret
push
sub
aaa
repz
xchg
and
fs
push
inc
test
fwait
inc
dec
icebp
imul
shlb
jp
or
ficompl
pusha
lods
mov
daa
popf
out
gs
fcoml
mov
call
stos
popa
sbb
sub
push
outsb
or
cld
sbb
add
out
add
mov
sbb
jp
mov
sahf
fists
push
dec
mov
pop
jg
or
iret
mov
pop
sbb
inc
lret
and
cmp
and
xlat
lea
lcall
or
push
sbb
adc
and
divb
in
loop
xchg
push
fstpl
insb
test
mov
je
jle
push
cmpb
arpl
decb
lods
jp
fmulp
pop
or
xchg
rorl
sub
ficomps
push
push
cmpsl
movsl
sub
sub
movsb
cld
leave
pop
adc
mov
clc
movsb
mov
mov
cld
pop
imul
or
stc
xchg
das
lock
int3
add
sub
insl
bound
push
out
xchg
aam
sbb
jmp
sti
sub
out
data16
mov
in
jae
cmp
stc
jno
push
xor
xchg
sub
aad
mov
sbb
mov
lahf
adc
pop
push
jecxz
sub
mov
stos
cmp
cmp
dec
dec
scas
inc
arpl
xor
dec
inc
cld
fsts
fs
pop
aas
adc
addr16
dec
clc
loopne
add
push
dec
pop
jge
jmp
in
imul
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
