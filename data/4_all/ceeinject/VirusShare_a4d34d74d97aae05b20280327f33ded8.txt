call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
movsl
insb
dec
pop
jp
push
cmp
jle
push
fucomp
int3
call
mov
insb
dec
pop
jp
push
sbb
sbb
or
cld
fsubr
lret
int3
ljmp
mov
pop
bound
add
sbb
or
cld
cmp
lock
fcmovnb
in
in
jecxz
or
insb
and
push
sbb
mov
or
out
aas
jmp
push
out
inc
sar
popf
mov
lret
inc
pop
icebp
sub
loope
sub
or
hlt
xchg
mov
mov
test
inc
ljmp
je
stc
movsl
insl
int
and
cmpsb
or
pop
mov
outsl
add
leave
stos
mov
jp
pop
cmp
add
cld
bound
fstpl
and
pop
leave
pushl
xor
stos
jne
and
sbb
or
xchg
push
cltd
lret
int3
ljmp
jae
test
stos
jp
mov
in
lret
fstpt
fisubrs
leave
lods
lcall
pop
insb
pop
pop
push
jo
sbb
sbb
or
cld
ret
fsub
int3
repz
mov
sub
jnp
imul
fs
push
imul
scas
test
enter
icebp
mov
das
dec
sub
add
pop
imul
scas
mov
test
in
xchg
iret
or
inc
das
aas
sbb
jbe
or
or
cld
lret
int3
ljmp
mov
pop
jp
push
sbb
sbb
or
cld
lret
int3
ljmp
mov
rcrl
jns
daa
daa
outsl
outsb
xchg
ret
mov
pop
jo
out
loopne
mov
xor
push
jno
sahf
inc
pop
ja
sbb
incl
cmp
lea
int
cmp
push
dec
xor
dec
fcmovbe
xchg
push
push
pop
jb
pop
hlt
aaa
and
or
jne
cmpsl
shrb
out
dec
or
xchg
ror
sbb
cs
sbb
add
sarb
or
sbb
stos
jmp
fisubl
add
or
rcr
and
cmp
sub
cmp
sub
out
enter
cmpsl
fnclex
in
mov
mov
and
sti
push
push
push
adc
push
fidivrl
pusha
lcall
mov
cmp
mov
into
sbb
mov
std
out
jl
xchg
filds
dec
xchg
mov
ror
xchg
ljmp
inc
call
leave
cmp
sbb
pusha
fcompl
lods
jno
shl
push
xor
pop
in
xlat
in
sub
adc
xor
mov
jno
and
shll
mov
clc
or
adc
insl
mov
das
inc
or
imul
jg
lret
or
cmp
stos
mov
and
cs
mov
sar
movd
out
mov
mov
mov
cmp
cmpsl
scas
mov
imulb
lea
xor
mov
inc
les
das
add
sub
call
and
in
mov
pop
push
xchg
sarb
xchg
lea
mov
stos
jnp
out
pop
cmp
adc
jno
std
mov
pop
mov
mov
add
rorb
pop
xchg
pop
sub
inc
js
dec
sbb
mov
jg
je
or
aam
bswap
jne
ror
push
rorb
jmp
cmp
rcrb
add
xlat
in
pop
lret
and
lock
das
mov
mov
fcoml
add
sub
mov
icebp
fbld
out
ret
xchg
pop
pop
cltd
scas
or
mov
inc
push
push
mov
sbb
mov
xorl
mov
int
xchg
in
sbb
jle
ds
in
pop
xchg
adc
or
sub
mov
push
push
ja
fcoms
mov
cmpsl
lock
lea
xor
es
cmp
adc
inc
subb
out
enter
test
cmp
in
sahf
add
bound
inc
jecxz
lods
jo
hlt
popa
addl
pop
sahf
sub
insl
xchg
dec
mov
xchg
out
aas
cmp
daa
out
repnz
or
js
lfs
iret
cwtl
mov
dec
test
xor
lea
push
mov
std
insl
mov
jae
sbb
pcmpeqd
or
push
add
popf
or
stos
xor
jno
mov
xchg
iret
lock
mov
mov
call
xchg
bound
ret
lock
cmp
mov
mov
mov
mov
jl
pop
cmpsb
jle
mov
rorb
xor
scas
lea
aam
sahf
inc
dec
stos
aam
cmp
neg
sbb
loop
push
fisttpl
fcmovnbe
cltd
inc
fmuls
int
sub
int
xor
dec
xlat
add
movsb
loope
push
mov
inc
mov
pop
xlat
mov
repz
outsl
or
bound
rclb
jg
sub
add
push
pop
xchg
ret
jbe
xchg
push
mov
cmpsb
pop
ljmp
leave
push
cmp
cmp
mov
mov
xor
orl
test
stos
xchg
push
mov
dec
daa
xor
inc
lret
jns
shlb
das
rorl
mov
inc
jae
fisubl
fimuls
ds
aam
mov
jge
adc
daa
xchg
in
fwait
test
sbb
xlat
outsl
mov
inc
jo
jae
insb
stos
and
clc
or
lods
mov
or
or
enter
xchg
into
sbb
cmp
cwtl
sbb
adc
jne
cmp
lods
add
in
and
mov
push
inc
ja
pusha
fwait
cmc
insb
or
dec
iret
and
mov
sahf
sbb
mov
les
outsb
dec
mov
in
ret
cmp
sbb
jecxz
xchg
and
in
push
fstps
sbb
aad
adc
or
mov
sbb
sub
push
lcall
adc
jmp
imul
add
xor
mov
mov
stos
addr16
fcomps
test
cwtl
incl
mov
shrl
sbb
into
inc
movsl
pusha
repz
xlat
push
cmp
pop
clc
stos
sti
xlat
lods
call
das
and
icebp
add
les
sbb
xor
xchg
inc
adcb
out
test
push
jns
shll
push
in
loope
cmp
daa
jo
test
xor
lcall
icebp
mov
rcll
and
aaa
sub
jg
mov
xor
mov
arpl
insl
sahf
popf
aam
fnsave
loope
lahf
lahf
jg
mov
jp
scas
loop,pt
sub
lret
icebp
out
pushf
fldl
in
jb
aad
in
enter
push
jg
hlt
ja
and
dec
in
xor
mov
leave
xchg
jecxz
or
xchg
mov
pop
add
mov
pop
pop
mov
mov
loope
jnp
sbb
jl
cwtl
das
cmpsl
dec
pop
sub
out
aad
bound
pop
fwait
inc
add
je
mov
and
and
movsb
enter
add
cmp
lods
dec
cltd
in
push
mov
fimuls
sahf
xchg
push
jns
cltd
jbe
add
mov
mov
push
jns
mov
xchg
and
and
mov
sbb
test
mov
mov
paddd
cmpsl
cmp
mov
repnz
xor
sti
xor
fadds
sub
lahf
std
scas
decl
movsb
jmp
or
or
xchg
jecxz
jecxz
ljmp
fcoms
add
jp
jnp
orl
inc
sub
mov
sub
jecxz
xchg
sbb
popa
js
addr16
lods
sbb
rol
push
insb
das
clc
into
sub
aad
mov
dec
gs
int3
and
jmp
sub
imul
js
push
pusha
test
test
fwait
jo
lods
inc
sub
in
dec
cmp
xor
xchg
fmuls
cmp
push
in
push
xor
les
cwtl
arpl
idivb
jecxz
arpl
movsb
sub
in
lret
and
sub
jbe
test
and
stos
adc
add
adc
pop
sbb
push
mov
or
pop
mov
fidivl
fwait
adc
ljmp
sbb
pop
das
and
add
lds
push
or
hlt
frstor
jecxz
in
add
xchg
pop
mov
mov
push
stos
fstpt
add
clc
mov
ret
and
xchg
mov
ljmp
cmp
adc
inc
test
inc
test
sbbl
loope
push
test
mov
or
cmp
pop
pushf
fsubrl
into
sbb
add
mov
pop
popf
cltd
ret
adc
movsl
repnz
gs
dec
je
adc
and
jno
fiaddl
aam
jne
inc
popa
jne
leave
cmp
and
scas
idivb
push
ret
pop
add
pop
inc
dec
mov
add
fwait
out
sbb
jno
and
enter
adc
ss
fwait
ret
mov
mov
xor
bound
push
data16
adc
jg
dec
dec
dec
mov
rolb
jno
aaa
mov
stc
pop
lock
ret
das
adc
jns
push
add
jbe
mov
sbb
pop
sti
add
std
repnz
jp
imulb
loop
xor
push
data16
jns
sub
mov
xchg
jmp
aas
out
jp
insl
push
mov
add
xor
cmpsl
fucomp
cmp
scas
ja
repz
adc
cs
insb
xchg
bound
jp
ja
inc
data16
xor
out
mov
xlat
popa
sahf
or
xchg
pop
pusha
addr16
decb
dec
fstps
scas
mov
cmpsb
pop
or
mov
pop
or
push
and
sbb
fists
xor
push
shll
insl
subb
out
pop
repz
ret
aad
push
xor
lds
xchg
lahf
fstpl
jg
inc
pop
negl
clc
cmpsb
mov
or
scas
pop
jnp
add
or
imul
bound
aam
lods
mov
mov
fnstcw
dec
inc
inc
sub
inc
cmp
lods
negb
push
mov
mov
ss
mov
lock
xor
mov
jbe
loop
jp
xor
dec
adc
int
bts
mov
jmp
iret
inc
repz
movb
jae
daa
mov
mov
leave
sbb
mov
test
fisubs
nop
and
mov
mov
test
dec
sub
gs
insl
sub
loop
inc
shrl
sub
inc
std
push
mov
sarb
orb
xor
or
lods
shlb
xchg
push
out
xchg
push
stc
jnp
je
xor
xchg
sbb
imul
mov
pop
add
mov
lods
call
popf
pop
mov
add
test
clc
stos
cmc
js
push
and
in
push
and
test
repz
shl
icebp
jg
push
sbb
xor
dec
jge
insl
insb
push
aaa
xchg
mov
shll
jae
sub
imul
mov
orl
loopne
add
insl
ficoml
pop
dec
shll
jns
mov
jmp
rolb
xor
and
in
inc
shrl
mov
orl
cmpsl
xor
out
mov
in
push
lods
adc
mov
iret
repz
push
ret
test
mov
xor
mov
inc
mov
mov
fwait
mov
lock
roll
nop
imul
stos
sbb
in
cwtl
out
add
arpl
ja
mov
rolb
stc
inc
or
sub
adc
bound
dec
push
xor
icebp
pushf
jge
adcw
lret
sbbl
cmp
call
mov
fldenv
add
push
jecxz
aam
push
sbb
movsl
daa
stos
dec
iret
cmp
icebp
push
insl
nop
test
leave
roll
idiv
xchg
je
xchg
xor
icebp
push
mov
pcmpeqd
sbb
and
div
test
repnz
imul
insb
cli
xchg
call
ffreep
ja
inc
dec
fiaddl
inc
into
push
mov
call
jo
stos
js
nop
shr
pushl
std
scas
mov
hlt
out
das
xor
lods
in
inc
adc
sub
negb
pop
xchg
outsl
sub
andl
imul
testb
push
or
or
jmp
loop
dec
ja
cmp
mov
in
outsb
mov
sub
ss
mov
dec
outsl
mov
nop
mov
mov
jp
dec
fstl
in
xor
xlat
das
cmpl
jbe
test
cld
cli
popf
add
or
cmp
lds
xor
popa
stos
fcoms
int3
sub
mov
jns
cmp
adc
mov
ret
hlt
mov
icebp
aam
hlt
out
or
fstpt
dec
fwait
lret
and
insl
aas
pop
cmpsb
cli
fdiv
xchg
iret
shl
or
es
js
ja
jg
push
aam
lds
push
and
lds
pusha
test
out
insl
test
jge
xlat
popa
adc
mov
cmpsl
mov
popa
inc
arpl
mov
insl
jnp
outsb
or
iret
jb
int
in
xor
push
in
mov
push
or
pop
out
ret
rol
sub
imul
pop
mov
stos
imul
dec
in
dec
rorb
rolb
dec
dec
pop
je
in
arpl
xchg
lret
jmp
fadd
and
addb
fsubrs
test
pop
inc
xchg
and
mov
pop
xchg
xor
pop
mov
mov
aaa
sub
test
mov
pop
fdivrp
xchg
stos
jae
jns
ret
push
cltd
into
enter
inc
sbb
or
test
scas
pop
popa
mov
out
lret
inc
mov
push
xchg
xchg
xlat
repnz
scas
daa
xchg
cmp
push
add
adc
inc
ds
aam
or
enter
xchg
int3
mov
xchg
push
pop
mov
enter
pushf
adcb
mov
mov
mov
sbb
rcl
mov
adc
and
jecxz
mov
int
leave
roll
pop
cli
sub
sbb
xchg
mov
js
cmpsl
mov
out
mov
xchg
push
and
xor
lods
fistpll
pop
sub
idivb
xor
mov
push
inc
lods
sbb
push
jne
movsb
pop
and
mov
int
cwtl
cmpb
adc
test
xorb
mov
sub
bndldx
inc
jb
stos
sahf
dec
adc
jmp
inc
pop
add
cmp
popf
test
inc
sarb
je
sbb
push
dec
push
or
das
and
and
add
xchg
push
imul
out
enter
jo
mov
cwtl
sbb
and
or
sub
outsl
or
jno
scas
xchg
lret
push
mov
test
fsubs
and
call
xchg
sub
loopne
push
xor
out
mov
rorb
and
ss
mov
inc
fs
mov
int3
or
inc
sub
push
mov
lret
push
lcall
cltd
dec
dec
jl
insb
mov
dec
adc
sub
ret
icebp
dec
adc
out
adc
outsb
jge
iret
pusha
pusha
pop
push
add
mov
dec
push
fnsetpm(287
scas
sub
sub
cmp
je
fsubrs
pop
inc
mov
or
mov
test
jp
cmp
enter
shll
add
leave
jo
fcoml
dec
mov
mov
in
loopne
or
je
in
push
loope
mov
popf
sbb
pop
mov
push
int
nop
ja
adc
andb
in
mov
in
inc
stc
sbb
loop
push
ss
shll
int3
mulb
pop
mov
aad
pop
insl
jbe
and
cmp
xor
jp
adc
add
fcoms
and
pop
inc
fcompl
add
push
dec
shrl
jmp
mov
dec
add
push
dec
or
lret
mov
jmp
mov
cmp
repnz
dec
stos
mov
and
inc
inc
mov
push
pop
dec
add
fmull
cmpsb
push
jmp
data16
xor
insb
xchg
cli
dec
mov
repz
xor
mov
cs
mov
insl
movsb
cmp
and
fsubrp
push
bound
pushf
jae
stc
cmp
inc
adc
addb
cmpb
lods
inc
and
adc
xchg
test
jg
js
shrl
inc
inc
lret
xchg
jp
fwait
push
pop
fdivrl
shld
sub
lods
or
mov
sar
into
int
in
out
mov
sbb
bound
and
sbb
lods
shlb
aaa
cmpsb
aaa
push
scas
loope
adc
sbb
sub
pop
sahf
cmp
subb
outsb
insb
xor
in
push
cmpsl
or
sub
inc
mov
or
dec
mov
popf
in
push
and
mov
push
int3
lret
shr
jne
inc
sti
std
andb
push
mov
shlb
push
push
and
push
fwait
enter
lods
rorb
cli
xchg
xor
lret
fcmovu
pushf
jle
movsb
imul
cmpsl
pop
mov
mov
add
mov
movsb
sbb
fcmovnb
jno
scas
into
or
incl
daa
push
xchg
mov
ret
jmp
xchg
xor
push
and
cmovne
out
ljmp
and
sar
xor
fistps
lret
rol
out
adc
xchg
jl
push
ljmp
dec
lret
lret
push
sbb
cmc
fisubrs
mov
arpl
jg
repz
lcall
xor
movb
and
popa
push
idiv
aas
adc
mov
push
cmpsb
hlt
adc
sub
jo
stc
outsl
mov
pop
push
popa
lods
orw
loop
xchg
ja
movq
popa
lods
dec
mov
dec
repz
ds
shl
and
loopne
dec
sbbl
ret
inc
subl
jbe
mov
add
dec
adc
jle
adc
sub
cmp
push
inc
adc
sub
inc
adc
repz
aas
push
mov
add
cmp
movsb
in
outsl
sbb
dec
rcl
sbb
inc
inc
bound
int
jnp
sbb
fmulp
xor
jl
mov
outsl
cmp
sub
and
jno
movsb
xor
std
jmp
jge
rorl
sarb
adc
ja
or
add
hlt
call
rorl
xchg
addl
loopne
stos
addr16
jmp
dec
data16
out
mov
into
xor
ljmp
jmp
dec
adc
xchg
mov
insl
dec
fisubrl
imul
mov
hlt
adc
xor
jb
sub
mov
mov
aaa
inc
jns
mov
adc
testl
push
insl
ja
inc
dec
jle
sti
popf
stc
jns
inc
rorl
jecxz
addb
std
mov
xchg
xor
cmpsb
dec
filds
inc
repz
loop
sbb
cmp
or
push
outsb
cmp
mov
dec
cwtl
xchg
cwtl
jne
je
clc
clc
popa
jecxz
xor
fucom
stos
fcoml
lods
inc
repz
mov
mov
fbld
test
icebp
in
je
insb
rorl
popf
insl
xchg
add
and
and
mov
in
lock
cmp
mov
ljmp
xor
dec
mov
ret
jl
ffree
subl
mov
lods
jmp
xchg
push
rcll
or
inc
pop
mov
sub
call
ds
mov
fs
pop
lret
fcmovb
filds
es
mov
and
or
test
jns
popf
xor
bound
push
jmp
xor
lock
ror
push
and
ret
lahf
into
aam
jp
pop
insl
push
in
sbb
adc
inc
or
and
int3
adc
sbb
sbb
stos
test
cmpsl
enter
scas
fstl
jne
js
and
lods
fmulp
jbe
pop
push
push
nop
test
mov
pop
xchg
adc
negb
iret
jl
cmp
jmp
rcrl
mov
cmpsb
mov
jecxz
and
push
lods
dec
adc
test
pop
fdivl
cmp
into
bound
xor
push
jl
mov
stc
jl
or
sbb
dec
mov
ljmp
and
mov
push
mov
movb
mov
pop
adc
leave
xor
mov
mov
cmp
test
push
and
xor
cld
ret
out
xchg
arpl
and
or
popf
xor
outsl
jp
and
les
iret
in
mov
push
or
out
xchg
mov
aad
xlat
in
jmp
and
repz
sbb
nop
push
aam
fwait
rep
add
fs
and
outsl
cmp
mov
sub
icebp
js
adc
in
fst
xchg
mov
pop
lock
and
mov
and
arpl
mov
cmp
imull
iret
dec
ds
xorl
mov
jno
mov
imul
in
add
shll
cwtl
adcl
adc
mov
and
inc
cmp
pushf
push
iret
cmpsb
out
pop
xor
xor
mov
in
clc
into
mov
stc
pop
push
movsl
aaa
xchg
cmp
gs
push
pop
cmpb
lret
sub
out
xor
dec
xchg
in
ja
out
lods
inc
adc
mov
pop
mov
xchg
icebp
test
and
jg
out
fisttps
test
mov
pop
aaa
lret
jno
iret
fldcw
mov
loopne
test
or
jno
ja
call
push
scas
insl
imul
adc
xchg
clc
sahf
inc
frndint
mov
cmc
and
fldenv
out
jmp
push
cmp
dec
movsb
lcall
pop
cmpsb
hlt
push
mov
in
cmp
fidivl
popf
fcompl
jmp
fstps
sbb
rcrl
mov
icebp
fsts
imul
sub
imul
stos
xchg
push
cltd
sbb
mov
mov
cli
jnp
mov
aaa
xchg
dec
push
sbb
sbb
or
cld
lret
int3
ljmp
mov
pop
jp
push
sbb
sbb
or
cld
lret
int3
ljmp
mov
pop
jp
push
sbb
sbb
or
cld
lret
int3
jmp
lcall
jge
insl
dec
pop
jp
push
sbb
sbb
or
cld
pusha
jbe
int3
popf
lret
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
stos
jne
mov
inc
jmp
jl
add
or
sbb
imul
mov
inc
jmp
adc
cmp
push
jns
dec
xchg
pop
test
insb
dec
jl
dec
inc
pop
imull
cmp
dec
cmc
sbb
popa
lods
jl
add
or
sbb
cmp
adc
in
std
stc
in
div
ljmp
xchg
sub
jns
dec
push
cld
inc
jne
out
or
movl
cli
fisttps
dec
sbb
and
jge
jmp
sbb
mov
ljmp
mov
cmp
adcl
jne
push
xor
flds
lea
out
xchg
mov
dec
push
xchg
push
lock
test
cmc
jno
inc
sbb
mov
jl
mov
mov
push
add
and
mov
adc
sbb
in
cmp
popf
sub
xchg
pop
xor
out
jne
dec
cltd
inc
or
adc
mov
fsubl
lods
jae
jnp
pop
test
jne
pop
std
xor
and
jns
pusha
sub
jl
sbb
pop
cmpsl
and
cmp
in
fmull
es
sub
popa
mov
dec
subl
adc
push
movsl
and
sbb
lds
gs
push
stc
and
sub
cmp
or
sbb
imul
mov
inc
jmp
adc
cmp
or
sbb
imul
pop
jbe
rcrb
es
jnp
inc
insb
lret
int
xchg
hlt
inc
popf
xchg
fdivr
mov
stos
scas
ret
push
xor
cmp
xchg
outsb
cmp
jnp
rclb
mov
adc
push
xchg
cmpl
in
in
repz
cmp
xlat
leave
insl
jae
pop
cmp
rcrl
jecxz
dec
push
shrl
out
jns
and
daa
jnp
js
rep
push
dec
push
andb
adc
rcl
cmp
push
xchg
imul
sub
jecxz
jb
out
xor
gs
lcall
mov
cmp
insl
mov
jp
out
pop
ret
cmp
je
pushf
jns
out
mov
cmp
aam
ljmpw
push
cld
stos
lret
inc
mov
das
enter
adc
ds
hlt
mov
cmp
popf
imul
push
cmpb
xchg
adc
lds
js
jp
adc
mov
or
mov
rcr
cld
push
mov
cmpsl
fsubrl
je
imul
and
xor
pop
sub
xchg
or
sub
or
cld
xchg
lods
insb
gs
test
xchg
push
test
ljmp
sbb
or
cmp
mov
push
dec
lock
lahf
adc
xchg
cmp
movsl
pop
adc
ja
add
lcall
xor
push
or
idivb
lds
repnz
pop
outsl
dec
into
aad
sbb
mov
cmpl
adc
cmp
mov
cltd
insl
hlt
mov
push
push
repz
neg
imul
js
mov
inc
jle
push
xchg
and
outsb
nop
hlt
mov
inc
filds
cmp
xor
cmpsl
sbb
aam
inc
mov
out
or
ds
movsb
cmp
ret
push
push
test
push
sub
nop
notl
nop
push
dec
jl
pop
inc
xlat
cmpsb
mov
cmp
pop
cmpsl
cmp
and
dec
out
sub
mov
in
rolb
es
adcl
loope
fs
mov
push
push
mov
lock
mov
lods
cmp
dec
cwtl
xchg
pop
test
add
data16
jae
sub
adc
jns
aad
mov
cmp
mov
xchg
imul
mov
push
jle
ret
sub
mov
jge
loop
adcb
sarl
icebp
push
mov
stos
iret
movsb
xlat
push
lret
int3
jmp
pop
leavew
mov
pminsw
pop
cmpsb
jmp
out
jne
roll
add
das
mov
push
cs
lods
insb
mov
in
fistpll
call
inc
stc
std
rcrl
subl
sbb
or
jne
enter
ljmp
dec
adc
or
and
and
sti
mov
cli
xor
dec
jb
ljmp
xor
sub
sbb
int
pop
inc
push
or
xchg
repnz
sub
push
nop
jno
mov
shrl
test
in
mov
adc
and
jl
push
addr16
mov
imull
pusha
jo
icebp
test
out
dec
aas
lods
jecxz
bound
sbb
and
jmp
jae
aad
add
imulb
repz
push
sub
cmp
sbb
or
mov
jb
jmp
lret
aad
movsl
cld
repnz
int3
stos
aas
imul
stos
inc
add
jl
jno
stc
mov
das
out
lcall
sub
iret
movsb
jne
bound
and
int3
sbb
cmpsl
jl
pop
dec
xchg
cld
in
sbb
inc
sbb
push
shlb
push
mov
sub
push
dec
jge
inc
pop
xchg
xchg
pop
sbb
xorl
jbe
mov
fnsave
push
fwait
push
movsl
int
fidivrs
inc
test
xor
icebp
xor
rcl
push
clc
push
daa
int
fisubl
cltd
lods
xchg
mov
dec
dec
clc
fsubl
cmp
fidivs
dec
aas
inc
daa
out
sub
insw
shlb
inc
push
push
stos
int
cmp
jg
lods
aas
in
mov
shlb
scas
pop
sub
adc
add
jns
adc
jb
fadd
mov
dec
loop
xchg
addb
retw
or
adc
cmc
mov
data16
push
insl
out
xchg
sbb
adc
mov
insb
gs
fwait
jae
and
mov
addr16
adc
sbb
fld
cmpsb
xchg
je
dec
add
fdivp
aam
inc
addr16
cmc
or
xor
push
inc
jp
loopne
cmp
adc
dec
or
es
mov
jg
adc
scas
add
pop
xchg
pop
dec
stos
mov
sbb
imul
in
cs
lahf
jp
scas
ror
hlt
dec
cmp
cmpsb
push
jae
in
cmp
data16
jae
vdivss
mov
xchg
xor
mov
loopne
mov
icebp
stos
mov
adcb
mov
lods
xchg
data16
pop
loop
popa
out
or
inc
imul
mov
fadds
or
cmp
and
popf
jecxz
or
jl
mov
rolb
cmpsl
mov
mov
adc
mov
cmp
xchg
jl
mov
lret
mov
ss
push
int
or
sbb
adc
shl
xchg
xlat
or
push
mov
ds
ror
je
push
fs
out
push
movl
je
fdivl
adc
mov
aas
mov
add
js
in
cmp
push
add
cmp
push
out
lods
mov
xlat
inc
sbb
dec
sti
shrl
pop
neg
inc
and
inc
les
pop
ret
jne
ljmp
mov
repnz
stos
call
lahf
cltd
push
xchg
sub
dec
rcrb
sub
shl
cmc
jns
mov
clc
sahf
pop
cli
negl
rclb
add
mov
mov
xchg
fistl
insb
dec
dec
mov
and
sbbb
icebp
shlb
cwtl
jle
adc
lock
stos
mov
push
pop
adc
test
mov
inc
push
ja
and
fisttpll
es
dec
jle
push
fimuls
stc
das
mov
sbb
cs
movsl
rcrl
arpl
mov
xchg
lret
add
lcall
inc
jecxz
loop
pop
in
adc
cmc
enter
pop
cmp
stos
out
adc
lahf
push
fadds
das
sub
sbbl
mov
jb
lods
xchg
sbb
pop
stos
stos
ja
repnz
fwait
mov
or
dec
sbbb
pop
ljmp
jae
scas
fiaddl
repz
test
call
push
cmc
push
sbb
pop
icebp
imul
in
fs
xchg
add
pop
into
out
aam
movsb
popl
jns
clc
jo
mov
leave
sbb
cmp
js,pn
cmp
outsb
mov
iret
andb
mov
andl
stos
push
pop
or
xor
decl
push
push
mov
fcomi
jnp
arpl
pop
roll
xchg
push
aas
dec
xor
xchg
or
jg
push
sbb
jg
and
push
insl
dec
loope
cltd
fidivrs
insb
mov
int
cmpb
push
xchg
data16
xor
inc
lea
jmp
cli
je
cwtl
insb
dec
aas
mov
imul
push
fiaddl
pop
stos
mov
insl
arpl
push
call
loope
jo
cmpsb
vfmadd231pd
sti
ds
adcb
fisubl
pop
push
out
fistps
scas
shr
xchg
mov
push
pop
roll
fwait
cmc
test
ja
jl
push
inc
shlb
mov
push
inc
popa
outsb
pop
lahf
push
lock
scas
mov
into
and
mov
lret
mov
dec
mov
jbe
icebp
sbb
inc
adc
pop
mov
inc
lcall
fiadds
lcall
ds
shrb
jmp
mov
mov
into
sbb
mov
rorb
dec
ror
movsl
fidivl
add
outsl
xlat
leave
fadd
in
adc
dec
push
cmpsl
leave
lds
add
mov
clc
lods
push
adc
aas
andl
push
hlt
mov
sub
and
shll
jecxz
sbb
mov
es
inc
ja
nop
or
lcall
shll
mov
mov
in
nop
cli
ja
cmpsl
add
daa
sub
adcb
std
push
and
roll
mov
cmpsb
loope
push
inc
pop
pushl
inc
jl
inc
je
call
mov
hlt
stc
into
xchg
mov
into
xchg
lock
xor
stos
jmp
push
cltd
lahf
xchg
push
scas
scas
cmp
sub
inc
xchg
or
dec
fstpl
pop
daa
gs
or
jbe
lods
rol
mov
adc
repnz
rolb
xchg
push
mov
lods
xchg
dec
movsb
call
es
push
and
push
cmp
push
pop
cmp
pop
and
mov
insb
or
ficoml
xchg
sub
xchg
das
xor
fcomps
sub
test
shr
clc
je
imul
push
sbb
hlt
push
jbe
xlat
sti
push
jnp
mov
fadd
mov
push
cld
adc
jae
adc
sbb
imul
jmp
mov
sbb
je
cmc
dec
jecxz
movsl
sbb
pop
cmp
ret
xchg
xchg
pop
inc
push
jne
mov
xchg
insb
pop
sbb
lret
jnp
add
inc
lea
jo
adc
scas
dec
stos
or
outsl
or
shll
test
cs
inc
mov
mov
jmp
xchg
insl
jne
cltd
into
repz
cli
pop
fmulp
stos
fdivs
mov
cs
mov
ljmp
sub
adc
ret
push
mov
push
lahf
cs
sbb
pop
sarb
pop
pop
mov
cmp
lret
inc
nop
adc
outsb
cli
xlat
push
jmp
jp
inc
jp
push
ret
sbb
sub
fs
mov
mov
mov
stos
repz
xor
fimuls
cmpsb
and
push
jno
or
and
test
xchg
aad
sub
or
inc
sarb
sbbb
or
fwait
pusha
and
scas
adc
push
mov
jno
fnsave
in
sbb
insb
aam
int
mov
push
push
aaa
mov
retw
dec
scas
sub
dec
hlt
push
jge
shrl
inc
les
or
jae
or
fcoms
add
dec
or
inc
inc
imul
push
and
es
outsl
je
mov
xchg
andb
mov
test
loopne
sub
add
mov
xchg
mov
ret
mov
std
mov
mov
cmp
jae
add
hlt
insl
adc
dec
cmpsl
jne
lock
stos
lret
in
fsub
xchg
lret
cwtl
lret
aas
into
xchg
jno
mov
dec
cmc
out
adc
inc
adc
in
outsb
in
sbb
mov
imul
xor
xlat
inc
jnp
pop
les
adc
nop
repnz
pushf
and
jno
push
push
rcll
cmc
jp
push
lret
repnz
mov
and
inc
daa
aaa
add
nop
xor
adc
imul
cli
and
jne
scas
add
jo
mov
ficoms
aas
rolb
dec
rorb
sbb
and
ss
clc
loope
sub
adc
mov
jle
jne
pop
stc
xor
inc
outsb
icebp
daa
in
pop
xchg
push
faddp
test
jmp
scas
xchg
push
xor
adc
fmulp
jno
jo
sbb
bnd
hlt
jmp
int
aaa
scas
xor
pop
sub
pavgw
mov
inc
mov
ret
icebp
je
cli
cltd
pop
repnz
ffreep
rolb
jp
jecxz
imul
fiaddl
loope
cs
cmpsb
in
inc
test
push
insl
mov
ficompl
sbb
jle
fidivrs
insl
inc
fsub
imul
fwait
sub
fs
je
sub
imul
roll
cld
lds
movsb
imul
imul
rcl
fadds
ja
shr
cwtl
and
divb
pop
mov
psadbw
jb
sub
aas
push
add
adc
inc
or
fidivs
dec
pop
push
mov
xor
andb
int
fstps
add
or
xchg
leave
aad
add
movsb
jne
ret
inc
sub
nop
dec
adc
test
inc
xchg
add
mov
dec
incb
in
gs
sub
outsb
jle
test
pop
sti
shll
mov
cmp
cmpsb
mov
fs
fs
adc
shl
sbb
out
xchg
rolb
ljmp
sub
sub
ss
addb
iret
jecxz
icebp
out
mov
stos
cvtps2pd
data16
adcl
fcomp
pop
dec
ror
pop
jno
jo
aaa
push
mov
ret
or
out
or
lahf
jle
fwait
xchg
lods
push
nop
push
lcall
mov
lret
repz
inc
neg
xchg
daa
jl
xor
scas
mov
mov
enter
or
xchg
ljmp
shll
jo
inc
cmc
cmpsl
pop
jmp
jmp
jbe
jg
jp
std
mov
push
les
push
sbb
xchg
movb
loop
jno
in
lods
dec
jnp
jmp
outsb
or
inc
sbb
push
add
mov
int
jno
in
cmp
push
or
mov
lcall
int3
mov
mov
loope
or
sbb
xchg
pop
addr16
lcall
pop
adcl
dec
cmp
fnstcw
icebp
loope
inc
sbb
fistps
push
cltd
jb
jg
icebp
stos
flds
mov
hlt
pop
jge
pop
fcoml
jge
xchg
add
ja
cmc
das
cmp
xchg
pop
xchg
mov
mov
push
mov
test
mov
xchg
sti
mov
das
mov
xchg
push
clc
les
inc
sub
outsl
int3
fimuls
ja
insb
cmp
jge
fcomp
xor
imul
mov
pop
cmp
mov
scas
sahf
inc
aaa
gs
int
xlat
add
stc
out
stos
push
sbb
mov
fnstcw
pop
sub
xor
lret
pop
addr16
loope
pushf
orl
out
mov
cwtl
jp
rcrb
sub
jo
fdivrs
pop
inc
iret
xor
das
rdpmc
insb
mov
inc
cmp
sbb
inc
lret
pop
scas
xchg
adc
fnstenv
divl
push
or
repz
orl
push
sbb
mov
sbb
dec
aad
mov
adc
inc
or
or
xchg
xrelease
insl
xchg
sub
jbe
dec
shrb
dec
dec
pop
in
and
jbe
scas
add
sbb
rclb
cmpsb
std
cld
mov
push
cltd
aaa
fdivl
push
sub
inc
dec
stc
fmull
push
or
sub
ss
nop
repz
pop
fidivl
lds
or
mov
add
dec
mov
push
stos
sub
sbb
jl
bound
shufps
mov
push
mov
xor
roll
cmp
mov
ss
mov
daa
sbb
dec
mull
repnz
cmp
inc
dec
fdivs
into
pushf
dec
jmp
pop
push
es
mov
mov
mov
mov
ret
or
shlb
cwtl
sbb
pop
scas
lea
mov
adc
lret
mov
std
mov
cmpsb
aaa
jp
sbb
inc
push
movsl
push
sbb
ficoml
mov
inc
flds
leave
shll
in
outsl
xor
lods
cmp
xchg
ret
sti
fsubrs
xlat
add
fcmove
jge
sub
cmpsl
jb
scas
cmp
iret
sbb
out
arpl
arpl
jo
icebp
cmpl
xchg
lcall
add
jae
sub
bound
in
inc
xchg
out
add
jmp
and
loope
push
cmp
movsb
pusha
pop
xchg
xorb
cli
cmpsl
lcall
pop
call
neg
mov
sub
pushf
lds
stos
xchg
or
stc
sbb
mov
add
sbb
fs
jmp
xor
arpl
imul
pop
fsubl
jno
andl
dec
adc
jge
cmpsb
cmc
xor
data16
xlat
dec
fisubs
xchg
dec
ljmp
inc
jbe
outsl
push
int3
fmull
push
outsl
pushf
lret
sbb
mov
enter
mov
sahf
pop
jecxz
outsl
mov
in
das
and
fcmove
sbb
or
subl
xchg
call
jmp
push
mov
sahf
pop
cmpsl
and
jmp
sbb
add
push
mov
or
lcall
adc
and
pusha
imul
adc
hlt
loop
inc
pop
fmull
fmull
pop
lods
mov
add
xor
inc
and
mov
dec
loopne
movsl
pusha
xor
les
inc
inc
mov
push
xchg
jne
pop
jle
sbb
inc
addr16
xorl
sbb
stc
cmp
dec
xchg
jb
insb
add
popa
data16
jnp
orb
inc
ret
mov
cmp
jno
ja
or
xlat
cmc
and
out
adcb
dec
scas
mov
xlat
xchg
sub
sub
pushf
sub
pop
leave
and
jae
jno
aam
jb
pop
xchg
and
jle
pop
rol
lea
add
pop
ss
or
les
aam
scas
in
cmc
rol
push
jg
orl
shll
ss
mov
fs
jnp
and
call
add
sbb
in
dec
adc
sahf
jae
add
outsl
push
outsb
iret
out
mov
xchg
push
popa
xor
dec
mov
cmp
fcoms
sub
mov
push
test
jmp
lods
mov
lret
cwtl
lods
xchg
pop
mov
dec
add
fisubrl
and
test
test
popa
pop
adc
mov
pop
lahf
mov
adc
sub
aad
add
lret
test
or
sbb
mov
scas
das
or
pminub
dec
sub
xchg
fcomp
mov
mov
mov
cli
test
cmpsl
xchg
jno
stos
popf
mov
insl
mov
cltd
mov
cmc
or
orl
mov
lea
push
imul
arpl
outsb
adc
pop
arpl
inc
repz
sub
fnstsw
push
stos
aam
xor
das
and
push
pop
sub
pusha
push
jb
insb
push
push
sbb
add
sti
filds
jmp
loop
mov
pop
js
rcrb
daa
lock
jg
xorl
and
insl
xchg
cs
sub
repnz
and
and
sahf
call
scas
fwait
xor
push
cwtl
insl
lahf
loopne
int
or
ljmp
add
test
repnz
movsl
loopne
pop
vsubsd
adc
push
ljmp
arpl
mov
adc
adc
mov
fisubrl
gs
xor
push
mov
push
mov
inc
pop
aas
lods
mov
xor
pop
jle
ror
jg
or
mov
xchg
pop
call
sub
enter
or
mov
cwtl
icebp
push
adc
stc
mov
cmp
mov
mov
mov
jnp
cmp
and
int
fs
shll
sbb
xchg
sbb
lds
daa
jnp
cmp
and
mov
jecxz
shll
jmp
sbb
nop
xchg
xchg
aas
int
call
xchg
dec
sbb
inc
imul
and
outsb
or
xchg
inc
clc
nop
fs
add
js
pop
push
mov
sub
imul
fxch
mov
sbb
js
shlb
adc
jg
adc
or
fwait
pop
adc
mov
push
push
insl
js
dec
cmpsl
out
sub
fstl
inc
adc
rclb
addr16
mov
push
xor
inc
sbb
xorb
in
mov
dec
and
sahf
ljmp
cld
jmp
jno
fimuls
dec
repnz
loope
cmc
outsl
imul
enter
push
mov
mov
lcall
mov
jno
dec
scas
xchg
push
inc
shrb
xor
and
jno
sbb
jae
cmp
add
popf
iret
std
mov
adc
orb
scas
push
insl
aad
dec
cli
xor
add
jo
addb
xchg
out
xorb
sbb
push
cltd
inc
jmp
adc
cmp
or
sbb
imul
mov
inc
jmp
adc
cmp
or
sbb
imul
mov
push
cltd
inc
jns
stc
and
sub
cmp
stc
aad
shrl
movsl
dec
xchg
mov
mov
push
mov
and
sub
dec
mov
cmp
cmpsb
cli
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
inc
push
push
pusha
bound
mov
jg
push
jno
xor
ret
loopne
lock
mov
inc
push
push
pusha
bound
add
adc
and
xor
rol
rcl
loopne
repnz
mov
inc
dec
push
js
push
adc
and
xor
cld
repz
sar
idiv
out
sub
es
push
push
sahf
push
les
shl
and
roll
sub
mov
cmpl
jae
lea
cli
adc
movsl
movsl
cmp
stc
mov
loop
repz
sbb
push
lods
test
push
xchg
cltd
stos
and
das
sub
out
xor
pop
mov
inc
mov
push
incw
adc
xor
icebp
rol
aad
prefetch
nop
ret
mov
adc
incl
or
insl
ffree
rolb
sarl
xlat
pop
mov
mov
daa
arpl
adc
jmp
pop
ret
popf
out
repnz
data16
inc
dec
push
pusha
bound
pop
add
adc
and
xor
ret
clc
loop
repnz
orb
sub
xor
xor
insl
jbe
insl
inc
xor
scas
mov
pushf
sub
jmp
and
xlat
das
add
sbb
bound
and
and
xor
mov
sahf
sub
std
xlat
aam
and
push
sbb
dec
outsb
adc
and
xor
rol
shl
loop
repnz
mov
inc
push
push
pusha
bound
add
adc
and
xor
rol
shl
loop
repnz
mov
inc
jg
fists
jb
and
dec
loope
nop
push
or
in
mov
lods
shr
fimuls
lcall
sbb
jg
mov
lcall
arpl
dec
rol
mulb
push
ss
xchg
movsl
sbb
in
mov
lods
cmp
add
cmp
aaa
sbb
insb
outsb
mov
or
leave
push
popa
push
js
ret
movsl
xchg
popa
cmp
scas
pop
jns
mov
iret
mov
orl
test
mov
jg
daa
xor
push
and
mov
add
divl
pushl
std
lcall
lret
cmpsb
mov
sahf
rcrl
hlt
mov
sbb
pop
in
ret
test
aad
add
test
or
into
inc
idivl
xchg
inc
arpl
jl
or
jno
adc
add
jns
pop
mov
rol
push
inc
sub
xchg
dec
dec
or
and
cwtl
pushf
or
cmc
adc
pop
mov
lret
push
lea
jo
cltd
out
jne
jecxz
idiv
and
lahf
inc
inc
dec
adc
iretw
sub
mov
adc
insl
dec
int
rcll
inc
iret
insl
mov
jnp
clc
ja
outsb
sbb
sub
inc
dec
test
int3
and
inc
cmp
rol
gs
test
pop
cli
pop
push
adc
rcrl
jg
mov
xchg
xor
fmul
mov
cmpsl
pop
sub
and
dec
fs
enter
push
push
shlb
jle
shlb
shrb
mov
popf
nop
or
lcall
jge
pop
ret
mov
and
fidivrl
fldl
mov
push
scas
jnp
sahf
out
push
hlt
shlb
mov
fsubp
inc
pop
scas
push
ret
pushf
mov
pop
fwait
test
xchg
mov
sub
cmp
pusha
pop
dec
hlt
call
sbbl
xchg
dec
and
ss
std
sub
push
and
into
inc
and
hlt
icebp
xchg
lock
fisttpl
rolb
stos
gs
loope
and
inc
jle
or
pop
into
fstpt
sbb
adc
mov
sahf
gs
jne
xchg
icebp
adc
inc
push
pop
aad
icebp
fcmovnb
inc
push
mov
cli
lcall
mov
xchg
push
cltd
adc
xor
mov
mov
ja
roll
movl
dec
jb
push
mov
in
clc
in
pop
push
mov
add
in
in
movsl
cld
jge
pop
xor
xchg
or
dec
inc
jmp
pop
sahf
das
addr16
mov
lods
cwtl
xchg
out
sbb
lock
mov
cld
push
mov
fcoml
cmpsb
mov
lret
addl
mov
and
jle
jmp
stc
jbe
adcl
push
outsl
test
rorl
fstps
sti
call
cmc
std
ljmp
mov
dec
ja
pop
and
sarl
jb
orb
ljmp
data16
aam
sahf
cmc
inc
xchg
in
mov
push
loopne
pop
sbb
pushf
in
adc
inc
into
repz
popa
inc
negb
dec
push
adc
je
lret
imulb
add
mov
movsl
mov
mov
pop
cwtl
test
adc
adc
push
mov
loop
jbe
fwait
popa
pop
push
jmp
inc
sub
test
sbb
lods
add
dec
xchg
adc
jns
push
test
pusha
inc
add
mov
and
jmp
aad
mov
cmp
outsb
adc
xchg
cwtl
dec
xor
jecxz
mov
inc
cmp
cmp
pop
sbb
outsl
aam
in
dec
movsl
jmp
int
fidivrl
add
sahf
mov
mov
fs
and
sbb
inc
or
or
aam
xor
mov
lea
cmpsl
adc
and
jns
and
jb
insb
test
xchg
nop
cld
jle
lds
int
push
jmp
add
pop
icebp
pop
xchg
fs
ljmp
add
jnp
jno
stos
inc
aam
push
jne
out
xchg
repz
add
inc
lods
movsb
cmp
adc
xchg
xor
pop
xor
repz
pop
adc
aam
inc
lea
sub
push
jo
mov
mov
insl
enter
lret
jnp
sahf
insb
jmp
jo
dec
out
sbb
lahf
pop
dec
mov
imul
mov
cli
mov
mov
nop
sbb
gs
jbe
or
dec
pop
notb
inc
cmc
arpl
cmp
adc
mov
insl
inc
inc
pop
pop
push
pop
hlt
jbe
push
adc
jo
cmp
xorl
std
pop
je
and
popa
aas
and
popa
push
cwtl
cmp
addr16
add
sbb
enter
insb
lock
push
add
dec
xlat
sbb
testl
aaa
cli
int3
push
pop
out
adc
pop
aad
das
cli
cmpsl
or
xchg
dec
jno
in
push
mov
xor
std
add
adc
stos
pop
mov
out
je
movsb
inc
mov
leave
mov
pop
arpl
mov
cmc
add
cltd
mov
into
ja
push
aas
ficoml
jns
pop
xor
xchg
es
jmp
in
test
fsubl
push
xorb
pop
jp
shll
pushf
out
cld
jecxz
dec
dec
xor
incb
lcall
mov
jmp
add
dec
dec
cmp
out
jbe
cwtl
das
insl
int3
push
jmp
push
inc
mov
dec
or
rcll
sub
inc
push
test
push
dec
xor
arpl
xchg
push
icebp
jg
test
push
or
and
ds
push
sbb
stos
call
cmp
and
je
and
test
aas
pop
movsb
fidivrs
fmul
add
daa
cli
jb
pop
cli
cwtl
push
push
and
sub
mov
or
pop
sti
jb
rcll
dec
dec
shrb
xor
int3
int
sbb
iret
cmpl
or
in
cmp
ficoms
and
stc
nop
push
and
fadd
adc
nop
cmpsl
bound
pop
sbb
inc
test
stos
adc
dec
jae
xlat
fsts
sub
mov
cmpsl
int3
inc
test
movsb
ljmp
xchg
outsb
loop
lods
xchg
and
pusha
es
mov
fcom
dec
xchg
pusha
out
mov
xchg
sahf
cmpsb
push
scas
out
mov
mov
cmc
adc
xchg
pop
mov
or
rcrb
sbb
xor
data16
in
insl
aad
cmp
test
pop
cmp
xchg
dec
jne
shlb
je
cmp
cmp
or
into
mov
gs
push
lret
ficompl
inc
mov
fcoms
sbb
mov
sbb
xchg
popf
imul
mov
aaa
dec
sbb
jb
sub
push
push
mov
in
lock
mov
lods
pop
jne
push
fs
shl
sub
mov
jecxz
fnstenv
sbb
xchg
cmc
hlt
dec
cwtl
mov
cmpsl
xchg
or
adc
in
inc
addr16
shll
jecxz
shll
repz
mov
jno
jle
push
fldenv
mov
shr
iret
jae
out
dec
hlt
mov
mov
std
xchg
call
mov
xchg
mov
bndldx
mov
testl
rcll
out
xor
sub
test
jecxz
sbbl
movsl
in
sbb
sub
pushf
test
xchg
mov
inc
push
push
cmpsl
inc
decl
mov
xor
fmuls
push
hlt
loope
data16
lret
mov
pushf
push
sbb
mov
cmp
mov
mov
lret
mov
sub
and
lds
mov
pop
push
inc
sbb
jp
fwait
cmp
jb
mov
test
insl
loope
or
jno
fstpt
mov
hlt
aam
das
add
bound
push
jge
jnp
stc
sbb
push
test
inc
idivl
les
lret
pop
mov
push
test
or
and
ds
adc
push
into
sbb
push
add
and
sub
jae
repnz
jge
mov
add
and
and
fs
and
into
push
dec
jnp
xchg
shrb
aad
cmp
fistpll
cmpsl
mov
adc
mov
pop
dec
movswl
cmp
jns
cmp
insb
dec
adc
push
lock
dec
sti
push
xor
ja
pushf
or
movsl
movsl
call
xchg
mov
mov
sub
sub
pop
imul
mov
inc
mov
pop
mov
mov
je
mov
lods
ja
mov
cmp
ret
out
xchg
cmp
adc
fistl
sub
call
cmc
enter
adcl
mov
dec
sbb
sub
hlt
cmp
pop
or
fnstenv
or
jb
mov
aas
inc
lcall
dec
out
jecxz
push
mov
fs
push
push
xchg
jl
mov
jnp
mov
sbb
int
or
call
inc
push
call
pop
out
into
mov
mul
cmpsl
mov
cmc
xorl
inc
jno
and
mov
fsubp
movsb
pop
out
test
stos
ret
daa
cli
push
addr16
jp
fnstsw
and
jbe
cmc
rcrl
rcrb
jno
pusha
lods
and
ret
pop
popa
push
push
loop
das
sbb
fstl
add
inc
xor
dec
adc
ds
dec
lahf
xchg
and
std
push
sarl
movsb
inc
ljmp
xor
push
faddl
mov
adc
lods
jbe
cs
ja
pusha
xchg
inc
pop
insl
jae
mov
enter
stc
lahf
int
ljmp
aad
arpl
pop
pop
mov
int3
jecxz
pop
stc
lret
test
sahf
sub
cmpsl
mov
pop
iret
ret
js
inc
mov
xor
jae
sbb
ret
pop
cmp
fdivrl
dec
mov
aam
xlat
es
add
push
cmpsb
loop
sti
mov
fstps
xor
xlat
mov
jo
out
dec
sti
les
and
push
stos
adc
add
mull
scas
out
mov
jmp
jb
or
stos
xor
pop
or
cltd
sub
fwait
mov
mov
lods
adc
dec
mov
outsl
pop
dec
jmp
xor
add
movb
pushf
repz
inc
push
mov
dec
sbb
in
nop
insl
cmp
out
xchg
push
loopne
aam
adc
jns
dec
xor
push
cmp
data16
stc
xor
filds
gs
mov
das
into
repz
xchg
fbld
lcall
sub
test
pusha
rclb
lahf
ljmp
ljmp
and
mov
aad
inc
sbb
hlt
mov
mov
cmc
outsl
test
pop
sub
add
loope
jae
sub
push
lods
mov
adc
lahf
and
or
pushf
in
pop
mov
outsb
sbb
js
jbe
mov
mov
push
lock
loopne
lahf
lahf
in
les
arpl
xor
xor
dec
aaa
jp
xor
inc
and
mov
out
lods
xor
aaa
lahf
mov
xor
scas
push
and
addr16
and
or
dec
and
fldcw
addr16
in
cmpsl
ret
in
insb
movsb
jecxz
movsb
pushf
lds
insb
push
cmp
pop
cmc
fiaddl
mov
inc
adc
add
loope
shrb
dec
pusha
inc
jnp
push
jbe
sbb
pop
mov
cmp
loopne
ja
and
add
push
clc
and
mov
pop
mov
jae
or
or
jns
ret
xchg
outsl
bound
nop
push
add
jae
test
and
in
or
sub
sub
mov
pop
push
dec
jb
add
push
out
rclb
jge
jnp
pop
test
jb
add
inc
pop
xchg
jo
dec
jno
cmp
divl
inc
iret
stc
inc
outsb
sbb
or
dec
hlt
loope
mov
popa
test
int3
pop
jbe
clc
out
popf
rcrb
rorb
orb
and
xchg
inc
les
inc
test
pushf
cmp
lret
pop
jg
push
mov
xor
shl
mov
mov
rcrb
mov
loop
and
cwtl
jae
inc
mov
mov
clc
loopne
and
add
sti
adc
imull
inc
pusha
mov
push
or
xor
imul
call
sbbb
mov
ja
cltd
xor
aas
push
cld
xchg
scas
test
mov
jbe
jmp
arpl
push
jg
sbb
sub
mov
stc
jmp
xchg
dec
in
and
cmp
cmpsl
xchg
out
idivb
push
mov
repz
leave
sub
out
ja
rol
cltd
and
mov
push
add
lock
stos
dec
xchg
and
mov
push
xchg
push
adc
clc
add
or
cmp
mov
sbb
sub
out
ret
xchg
call
lret
lea
push
jg
lds
mov
out
adcl
adc
jbe
xor
and
repz
cs
sbb
sahf
and
sub
fs
mull
and
dec
test
cmpsl
jp
repz
addb
hlt
loope
addr16
xchg
cs
pop
repnz
mov
sbb
loope
push
in
add
mov
mov
cmp
icebp
inc
jb
test
jno
in
push
popf
cltd
lea
mov
sub
push
out
adc
sub
mov
or
shlb
daa
lods
xchg
stos
pop
fildl
lods
arpl
rol
jp
icebp
test
xchg
icebp
mov
outsl
dec
insb
xor
pop
xchg
cltd
bound
jp
mov
xchg
call
out
bound
jge
jne
sbb
test
pop
fstpt
mov
invd
fyl2x
and
insb
pusha
or
outsb
pop
loopne
test
sbb
adc
iret
mov
push
in
and
repz
addr16
push
fists
rclb
insl
test
mov
arpl
inc
movsl
lret
sahf
cmp
xor
pop
imul
add
add
mov
mov
mov
fiadds
jb
cwtl
inc
push
clc
int3
xor
sbb
mov
cmp
stc
andl
pop
aas
ljmp
xchg
push
and
push
loopnew
popa
jno
add
rol
or
push
adc
shll
push
sub
xor
sbb
cltd
insb
jmp
and
cmc
xchg
popf
sub
imul
movsb
rclb
mov
lods
test
mov
xchg
adc
xchg
add
lds
or
or
lret
mov
add
add
sub
loopne
xchg
sub
cmp
jle
mov
sahf
lea
movsb
mov
aad
xchg
jo
or
push
outsb
setp
stc
scas
xchg
in
popa
stc
and
push
mov
movsl
sub
js
std
lock
add
mov
cwtl
dec
push
xlat
mov
jns
mov
sahf
cld
or
adc
bt
xchg
push
cld
fwait
dec
sbb
jl
and
push
mov
jne
mov
xchg
pop
sbb
dec
aas
dec
pop
loop
xchg
cmp
xchg
mov
popa
sahf
push
scas
inc
mov
insl
xor
mov
fadd
out
in
xor
bound
push
xchg
jne
pop
movsl
cmpsl
jp
push
sbb
jne
fadds
xchg
cmc
mov
int3
push
mov
adc
add
add
mov
jns
repz
jae
insl
dec
cltd
sub
mov
cli
out
jl
mov
cld
and
or
push
inc
jnp
ret
mov
imul
int3
lret
loopne
add
repz
fwait
mov
movsb
mov
pushl
cmp
mov
jo
pushf
or
and
lods
cmp
mov
xor
pop
or
ret
mov
leave
aaa
sub
add
mov
jl,pt
xor
rcrl
push
xchg
addr16
mov
adcb
inc
sub
jecxz
and
xor
jae
jnp
jmp
ljmp
test
cmpsl
lret
or
xchg
mov
inc
inc
nop
rolb
movsl
xor
adc
lock
or
pop
nop
xor
data16
addr16
loope
pop
dec
push
or
inc
mov
in
rclb
xor
loope
dec
ror
insb
movsb
or
ss
je
add
shrb
push
les
pop
scas
lock
mov
std
jge
inc
pop
cs
jg
jnp
shrb
daa
xchg
or
fadds
push
out
ficoms
inc
xchg
jecxz
movsb
iret
in
sub
pop
mov
into
scas
fstp
js
push
adc
or
and
sub
in
xor
mov
das
add
pop
xor
pop
mov
add
shll
movl
neg
ret
mov
stos
lret
mov
xor
mov
out
int
mov
hlt
aas
cmpsl
fistl
jbe
imul
mov
in
adc
lock
sar
inc
inc
lcall
mov
adcl
jp
dec
inc
jp
lods
dec
jb
movb
jmp
pop
push
leave
sbb
xor
mov
mov
fldcw
cltd
aad
aaa
loop
imul
pop
mov
adc
addl
inc
xchg
aaa
das
fldt
loop
stc
or
movsl
ss
and
push
ret
push
jecxz
or
fimull
iret
ljmp
into
xor
sbb
int3
xchg
popa
jp
sbb
push
subl
int
jns
dec
mov
bound
jmp
test
rclb
mov
sarb
xor
cmp
xorl
xchg
pushf
ja
pop
jo
xchg
pop
outsl
jne
add
les
sbb
out
dec
sub
movsl
sub
ret
xchg
jecxz
popf
cmp
cwtl
push
dec
ljmp
dec
jno
pop
orb
push
stos
and
push
cltd
movsl
mov
push
bound
mov
pop
mov
xor
dec
pop
push
bound
cltd
mov
shrl
dec
sub
icebp
mov
jg
inc
jbe
mov
fs
cli
xor
mov
add
push
ret
jnp
push
lahf
sub
scas
test
das
mov
xor
lcall
mov
cmc
jne
or
cmp
inc
ret
xor
lea
mov
or
out
add
rol
repz
cmp
test
aas
push
ljmp
popa
jecxz
repz
aam
push
fisubs
ret
frstor
fisubl
aaa
xchg
je
cmpsb
data16
lcall
shrb
cmp
adcb
pop
scas
cmp
and
xchg
jns
insb
or
lahf
add
cmp
iret
jb
jge
adc
xchg
imul
jl
dec
sbb
in
mov
xor
aam
ja
call
push
std
or
sub
sub
iret
mov
fistps
imul
xor
dec
inc
cld
sub
fs
mov
pop
pop
hlt
repnz
in
cwtl
and
push
pop
dec
scas
dec
stos
mov
mov
stos
jb
les
cmp
dec
mov
inc
cli
ja
rorl
adc
jg
shrl
scas
into
sub
inc
cmp
jle
hlt
lahf
dec
addl
mov
das
loop
xor
fwait
cmpb
xchg
jg
xchg
xchg
dec
xchg
xor
loopne
out
adc
or
cmpsb
stos
push
and
into
xor
pop
andb
mov
cmp
cli
scas
mov
movsl
leave
aad
sbb
orl
outsl
push
cmp
mov
lret
fbstp
xlat
and
jno
repz
ret
icebp
cmpsb
or
dec
test
lahf
into
push
rol
sub
mov
and
scas
and
mov
insb
in
sub
sub
int3
xchg
push
sub
leave
bound
mov
test
mov
std
inc
iret
mov
lods
pop
sbb
lods
cltd
dec
arpl
cwtl
int
xchg
pop
add
nop
loop
push
lret
cmpsl
dec
jg,pn
leave
ret
das
xor
adc
rcll
test
jo
pop
je
push
dec
icebp
cmp
data16
xchg
add
test
mov
push
push
ret
mov
push
dec
scas
sarl
sub
push
ret
pop
adc
insb
lcall
les
mov
lret
sub
je
pop
loopne
lcall
xor
add
jmp
jp
adc
arpl
add
adc
and
xor
rol
shl
loop
repnz
mov
inc
push
push
pusha
bound
add
adc
and
xor
rol
shl
loop
repnz
mov
inc
push
push
pusha
bound
add
adc
and
xor
rol
shl
loop
repnz
mov
inc
push
push
popa
bound
add
adc
aas
cmp
lock
or
insl
pop
pop
dec
dec
mov
mov
dec
jne
dec
mov
movsl
or
mov
jmp
jo
pusha
test
mov
mov
dec
lock
sub
sbb
jno
stc
and
flds
leave
jo
pusha
test
mov
mov
dec
lock
sub
sbb
or
stc
and
arpl
add
push
imull
cli
stc
or
dec
mov
loopne
pop
xchg
cmp
fcoms
push
mov
cld
jo
fstl
add
cmp
sbb
gs
lods
fistl
ss
lea
push
popf
int3
test
push
cltd
mov
fs
xor
dec
scas
xor
test
xor
push
shrb
xor
cmp
dec
out
add
lock
xor
xor
popf
pop
sub
xchg
inc
mov
aam
cli
or
mov
and
fsubl
std
ljmp
dec
cld
cwtl
in
dec
pusha
or
cmp
loope
adc
pusha
call
inc
fmull
cli
push
cltd
sub
pop
orb
loopne
rcrb
rorb
stc
and
adc
add
jo
pusha
test
idivb
sub
pop
in
pushf
pop
test
pop
jno
and
jae
insb
mov
adc
adc
mov
rorb
cmp
dec
mov
mov
jo
insl
push
mov
nop
push
mov
adc
iret
inc
out
cmp
subl
sbb
or
stc
and
adc
add
jo
pusha
test
mov
mov
dec
lock
sub
sbb
or
stc
and
adc
add
jo
pusha
test
mov
add
mov
dec
dec
imul
push
lods
stc
shrl
xchg
and
std
adc
scas
rolb
out
arpl
dec
and
iret
xchg
sub
sbb
pop
lahf
shll
jo
ds
cli
cwtl
or
ss
out
adc
pop
pop
mov
pushf
jg
sarl
cld
inc
movsb
pushf
cmc
mov
jl
push
cmp
mov
pusha
jb
fcompl
and
lahf
movsb
add
push
clc
aaa
adc
xchg
jmp
push
xor
mov
add
or
mov
out
aad
pop
add
shlb
adc
mov
les
add
jl
sub
lea
pop
pop
xchg
in
dec
aaa
pop
push
stos
or
in
mov
in
sahf
inc
mov
jge
push
adc
xor
mov
push
pop
es
and
iret
or
jo
push
rol
faddl
sub
xor
mov
sbb
fldl
int3
dec
in
pushf
lea
jbe
cmp
js
adc
in
test
push
mov
mov
inc
xchg
push
jbe
xor
cltd
jnp
aad
xor
es
or
lods
xchg
pop
push
lods
push
test
mov
push
lahf
stos
xchg
dec
jne
int
mov
and
test
jecxz
push
cmp
lods
femms
sub
aad
dec
or
das
jl
ljmp
cmp
xchg
xor
fbld
inc
add
inc
sarl
outsb
int3
adc
xchg
mov
inc
mov
dec
movsl
ret
add
inc
dec
insb
inc
mov
sub
sub
jae
cmpsb
out
popf
pop
push
popf
int
fcompl
dec
mov
mov
or
into
xor
addr16
dec
push
inc
arpl
push
and
sub
int
xor
nop
je
inc
jg
shr
add
xchg
pusha
and
and
int3
mov
inc
into
adc
mov
popw
xchg
insb
insb
ja
pop
or
xor
xor
cmpsl
and
mov
hlt
sub
sub
loope
jg
dec
xor
inc
adc
jnp
xor
or
add
push
pop
mov
and
or
push
or
xor
jns
insl
je
rorl
xchg
sub
push
pop
dec
imul
faddl
sub
scas
adc
ret
loope
fmulp
push
jae
insb
xchg
pop
test
in
insb
mov
popf
addl
or
out
mov
lea
test
jp
pop
mov
pop
jbe
push
jle
inc
fwait
int3
jno
in
mov
jnp
fcmovne
iret
fidivrl
mov
mov
jge
mov
push
or
sbb
dec
cwtl
insl
inc
mov
movsb
ds
loopne
ret
sub
mov
in
movsl
lret
test
push
cs
gs
cmp
nop
dec
les
icebp
sub
out
test
xchg
push
lods
jnp
dec
inc
ljmp
fildl
push
dec
pop
ljmp
lcall
insl
scas
aas
out
pop
xchg
and
mov
lods
popw
iret
push
pop
aaa
in
lea
insb
cwtl
mov
mov
push
xor
cld
lcall
dec
mov
inc
int3
shlb
popa
imul
aas
sub
push
mov
jo
adc
inc
add
data16
ffree
and
cltd
jb
mov
cwtl
xchg
lret
pop
divl
push
sub
imul
add
mov
les
popf
lds
mov
stos
jo
cltd
pop
cltd
fyl2xp1
sub
mov
jl
mov
pop
push
repz
test
xchg
jge
adc
pop
push
jnp
mov
sbb
sbb
loop
test
push
cltd
xlat
mov
insb
jmp
cwtl
jbe
scas
cmp
mov
test
test
jne
aaa
inc
movsb
or
add
jle
jecxz
adc
pop
push
cmp
lret
mov
mov
test
and
xchg
outsb
cmp
idivl
out
ficoms
adc
iret
add
jmp
mov
sub
jecxz
repnz
push
jo
adc
ror
btc
push
adc
sbbb
cltd
jo
mov
xorl
or
dec
in
addr16
cmp
sub
std
mov
xor
ret
add
sub
mov
aas
es
popa
sbb
mov
bound
lods
gs
inc
push
pop
out
mov
lcall
and
scas
lock
cwtl
aad
mov
lock
pop
sub
push
nop
push
dec
add
jae
or
jnp
xchg
pop
pop
pop
loope
push
sub
and
inc
mov
jl
mov
xor
jge
mov
scas
dec
aaa
mov
sub
mov
push
sub
jbe
outsb
pusha
es
push
cmp
adc
push
and
add
xchg
aas
mov
inc
mov
xor
xor
add
sub
lea
adc
pop
add
movl
wrmsr
adc
kmovb
add
iret
sbb
cmp
iret
loop
pop
xchg
xor
and
test
ds
jp
push
popf
push
cmp
pop
mov
lret
fildl
das
gs
outsl
mov
and
or
xchg
push
loop
adc
mov
sub
xor
out
pop
mov
xlat
aam
push
pop
mov
aaa
adc
nop
jmp
js
divl
xchg
inc
jbe
jno
push
in
and
je
and
and
fucomp
pop
inc
jp
mov
and
push
rcll
insb
inc
fidivl
mov
notb
ljmp
jb
sub
mov
fcmovnbe
push
xchg
mov
ja
push
jmp
cltd
imul
push
xchg
imul
mov
and
les
lds
test
cmp
push
push
test
fcom
and
jb
sub
cmp
xor
call
dec
cmp
ljmp
stos
mov
js
push
inc
fld
fisubs
xchg
inc
cmp
dec
leave
fsub
add
inc
jle
test
je
mov
adc
and
call
xor
add
sahf
rclb
mov
dec
sahf
stos
jge
cmp
xor
mov
loope
cmp
or
xor
mov
aam
sub
or
mov
pop
int3
jl
fstps
popf
inc
push
xorl
mov
jns
test
enter
mov
jp
jae
dec
mov
pop
xor
jnp
ljmp
add
mov
dec
mov
lret
lds
xor
test
cwtl
int
sbb
cwtl
imull
mov
repnz
jp
pop
clc
jp
mov
test
loop
mov
adc
popf
ds
or
cs
call
pop
and
xchg
jns
scas
call
dec
dec
cmp
test
mov
inc
test
fbld
adc
add
dec
cmpsl
into
xchg
jae
out
sbb
pop
sti
jmp
popf
jecxz
xchg
stc
out
imul
jae
cmp
outsl
inc
xlat
and
repnz
addb
movl
xchg
jae
movsb
lods
add
sti
push
add
xor
mov
out
lret
mov
std
imul
pop
out
sbb
jecxz
push
pushf
rcl
mov
rolb
iret
inc
mov
mov
mov
iret
insl
cs
fisubs
fdiv
fimuls
in
ss
aaa
sar
in
dec
in
sub
sbb
dec
les
push
inc
fwait
popa
or
push
rcrl
or
pop
xchg
push
out
add
or
aad
jmp
mulb
or
or
out
dec
xchg
mov
scas
stos
dec
in
cwtl
or
jno
or
test
mov
scas
sub
ljmp
jg
sbb
and
lret
add
push
jo
cmp
inc
lock
pusha
arpl
call
mov
push
mov
mov
mov
xchg
pop
andl
inc
or
adc
cmp
pop
or
pop
repnz
loopne
mov
imul
cmp
xchg
push
inc
inc
dec
movb
js
lods
fmul
clc
add
lcall
mov
mov
lcall
das
inc
mov
jp
insb
insl
push
es
lods
mov
add
mov
inc
add
es
aam
dec
out
rclb
pop
mov
or
add
or
popa
enter
sbb
ds
fildll
add
mov
or
fsubl
mov
sub
stos
lods
out
pop
out
dec
fbstp
push
adc
jb
pushf
imul
rcll
push
pop
sbb
xchg
loope
int3
out
pop
insl
lea
xchg
insl
cmc
test
jmp
mov
xchg
sub
ja
std
movsb
int
or
pop
mov
add
aas
mov
pushl
movsl
add
fwait
lahf
or
or
sbb
hlt
das
jo
mov
das
pop
add
sub
pop
popf
mov
xchg
pop
xchg
push
jg
push
jae
fdivrl
out
xor
jl
mov
imul
adc
mov
lcall
adc
push
sbb
loop
jmp
dec
std
stos
ja
fists
stos
push
mov
or
call
dec
out
pcmpeqb
cmpsl
loope
dec
pop
scas
or
add
inc
enter
femms
xchg
sub
imul
push
inc
dec
stc
xchg
push
lds
mov
mov
insb
push
xlat
lret
aas
xchg
cmp
mov
and
sub
out
push
jns
and
in
xchg
and
dec
xchg
loopne
sub
in
pop
repz
inc
cmpb
or
push
pop
add
pushf
ljmp
xor
or
testl
push
add
repnz
xchg
mov
sbb
push
xor
mov
arpl
mov
sbb
push
imul
fldenv
sahf
repz
cmp
fwait
aas
sub
mov
repz
pushw
mov
cltd
aaa
imul
inc
shl
rcrl
nop
sbb
pand
into
sub
dec
jecxz
xlat
adc
dec
xor
lock
arpl
mov
iret
incb
pop
and
or
xchg
cmpsl
pop
push
cmc
push
mov
pusha
or
push
xor
mov
cmp
addr16
daa
aad
dec
xchg
pop
or
pop
sahf
ret
mov
xor
sbb
scas
mov
lods
jbe
dec
movsl
inc
fsubr
vpunpckhdq
mov
jge
stc
mov
test
inc
inc
push
mull
addr16
out
push
jg
dec
pop
mov
jl
inc
sbb
jmp
pop
mov
push
push
push
cltd
jns
jb
pop
push
sub
and
sbb
pop
jg
test
add
cmp
ficoml
lcall
inc
inc
das
mov
xchg
mov
jns
push
je
pushf
cmc
sbb
data16
mov
out
cs
movsb
xchg
je
sub
and
outsb
push
or
inc
aam
inc
and
pop
out
dec
jge
imul
pop
xchg
dec
inc
inc
add
cmp
jmp
fstpl
inc
insl
scas
dec
out
xchg
and
cmp
adc
pop
cmp
int3
fwait
shlb
jno
in
mov
sub
adc
sbb
sbb
inc
idivl
pavgw
loopne
mov
push
sbb
enter
sahf
bound
sbb
sarl
ljmp
je
cmc
mov
pusha
pusha
pop
test
or
mov
xor
mov
jb
in
pop
jns
in
call
je
push
daa
fmuls
dec
inc
cmpsb
pop
cld
imul
subb
pop
test
pop
cltd
add
inc
andb
repz
lahf
sbb
jne
jae
xor
clc
in
cli
push
mov
mov
sbb
les
mov
shl
cmp
push
dec
mov
jae
in
out
jno
pop
mov
add
add
mov
fcmovnb
inc
pop
push
mov
push
das
xor
add
lods
test
sahf
pop
repnz
rolb
sub
pop
inc
jmp
mov
ja
out
cmpsl
jg
pop
sub
cmp
add
add
sub
xchg
sbb
inc
sub
hlt
mov
jae
sub
movsl
pop
dec
add
xor
adc
out
adc
into
sub
in
addr16
add
sbb
and
jno
decl
pushf
xchg
sbb
xchg
xchg
sbb
push
in
jl
mov
arpl
pop
daa
test
repz
daa
inc
push
hlt
cld
negb
scas
xor
xor
lds
int
shll
lahf
dec
and
pop
pushf
lahf
aad
pop
dec
adc
cmpb
xor
lret
mov
mov
pop
dec
nop
adc
mov
mov
dec
pop
and
xor
mov
push
mov
icebp
loopne
outsb
fcompl
dec
sahf
outsb
sub
dec
into
jbe
stos
and
dec
dec
jle
mov
inc
xchg
jne
mov
dec
jle
or
sarl
cltd
imul
std
sbb
mov
clc
jl
mov
movsl
outsl
fwait
rcrl
popf
mov
pusha
test
cli
dec
pop
icebp
scas
int
ljmp
pop
idivb
mov
inc
clc
xchg
in
push
and
mov
lods
enter
leave
xchg
fcompl
mov
push
mov
mov
sub
arpl
xlat
dec
or
std
mov
movsl
push
sub
sub
adcl
mov
fstpt
ja
jle
pop
enter
adc
cmp
inc
shl
push
push
sub
and
shrl
sub
in
cmp
scas
mov
cwtl
xor
or
push
fnstenv
dec
fisttpl
aaa
mov
add
js
cmp
push
aad
push
jmp
and
cwtl
fnstsw
int
or
jg
xlat
sti
popf
das
xor
pop
jbe
fnsave
dec
add
push
mov
xor
sahf
orl
pop
arpl
or
dec
xor
push
pop
call
in
or
scas
lcall
pop
int
aaa
dec
sbb
cmpsb
adc
mov
and
js
sbb
xchg
cld
mov
lret
push
aas
in
cwtl
repz
inc
int
shlb
pop
popf
fnstcw
fcoms
shlb
in
repz
out
lret
leave
xor
or
mov
test
sbb
sbb
jbe
cmpb
lds
fcmovbe
lret
and
push
push
in
adc
xor
push
mov
shrb
cmp
pop
lret
shl
int
xlat
scas
inc
rolb
mov
mov
shrb
pop
les
mov
mov
sbbl
cld
cmp
mov
push
hlt
es
mov
dec
add
lahf
enter
add
mov
out
test
js
xlat
sub
addr16
jl
lret
fistpll
mov
adc
xorb
test
aam
js
sbbb
fsts
xor
and
repz
icebp
xchg
mov
push
pop
call
mov
and
scas
mov
mov
rcr
loop
or
sub
incl
cmpb
xchg
decb
fmull
sarl
daa
fdivrl
popa
push
stc
sub
loop
and
push
stos
hlt
jle
xor
ret
scas
scas
dec
data16
sub
loope
inc
push
inc
add
xor
pop
pop
rorl
cs
imul
mov
sbb
in
and
div
push
pusha
addl
mov
cwtl
pop
mov
iret
jg
adc
add
aam
jle
xor
scas
mov
xor
push
aad
cld
pop
inc
leave
dec
pop
movb
jb
insl
dec
jp
adc
xchg
jl
pop
dec
loope
mov
icebp
mov
lret
cmp
mov
mov
loopne
fdivs
imul
mov
inc
in
dec
mov
mov
pusha
cmp
jbe
mov
mov
pop
pop
shrl
mov
push
push
jl
sub
cli
cmp
sbb
mov
lock
xchg
repz
inc
test
cmp
jl
dec
jp
mov
cld
lods
ret
xchg
pop
mov
stc
mov
mov
ljmp
ret
jecxz
mov
test
iret
in
lahf
mov
and
scas
dec
push
ret
movsb
test
adc
fs
movsb
and
daa
test
cmp
loope
cltd
into
pop
stos
inc
add
pop
mov
int
pop
xor
testb
push
lret
je
xor
ret
repz
bound
dec
icebp
fimuls
sahf
test
mul
xor
pop
jge
test
lret
ficoms
sbb
inc
lock
inc
sbb
cwtl
mov
je
push
aad
or
mov
push
inc
jp
decb
mov
xchg
std
mov
les
xchg
je
imul
pop
icebp
lret
jo
js
pusha
xor
adc
adc
outsl
mov
pop
and
sub
sahf
shlb
cmp
rcl
pop
ret
sub
iret
add
movsl
xor
lcall
notb
rcrb
mov
in
out
aas
fstps
pop
sbb
sub
je
inc
loope
xor
lret
out
mov
push
gs
fdivrs
mov
leave
clc
mov
or
mov
cmp
jle
sub
loopne
lret
push
jmp
xrelease
mov
sbb
aas
push
cltd
je
fwait
loopne
mov
push
rclb
adc
ret
jp
jno
dec
xchg
mov
mov
fdivr
inc
loope
xor
or
scas
lahf
inc
mov
pusha
lret
cs
test
jae
cmc
sbb
add
mov
push
mov
and
in
push
xchg
les
ret
rol
adc
sar
cmp
mov
loopne
cwtl
cmp
cmpsl
stc
imull
inc
mov
aas
pop
jge
mov
jns
jb
push
outsl
dec
std
mov
or
psrlw
in
pop
repz
jnp
jae
or
xchg
dec
mov
push
cmp
loope
or
popa
jmp
popf
scas
test
adc
orl
jnp
inc
xchg
fcmovu
fisubs
sahf
cmp
push
fidivs
and
mov
sub
int
mov
xor
movsl
cmp
fnsave
mov
mov
lret
mov
lea
xor
sub
fs
adc
mov
ss
adc
jge
xchg
mov
aas
sbb
mov
sbbb
repnz
aas
mov
jae
or
loop
sub
add
mov
jmp
int
lds
out
cmp
cmp
mov
pop
add
add
mov
popf
mov
repz
sub
fs
jl
cmp
repnz
jg
js
xlat
cmpsb
and
sbb
stc
outsb
icebp
push
fs
xor
rolb
sti
in
testb
push
dec
mov
xchg
or
adc
into
fsubr
and
mov
pop
sbb
loope
pop
in
mov
mov
jo
push
xchg
mov
ret
mov
out
ja
dec
je
inc
mov
int3
cltd
jmp
addl
cltd
lods
or
sbb
add
iret
sbbl
jb
push
popf
mov
push
divl
lock
rcrl
sub
add
dec
bnd
ljmp
dec
pop
mov
arpl
dec
aad
clc
dec
cmpsl
adc
repnz
repnz
pushf
ja
test
aam
adc
lcall
stos
popf
xor
mov
push
in
ret
jne
push
xchg
out
cwtl
cwtl
loope
jnp
mov
mov
test
in
or
into
pusha
shll
loop
pop
ljmp
ret
mov
daa
fwait
add
lock
inc
push
inc
jle
jmp
mov
mov
xchg
pop
pop
add
test
cli
inc
in
cmpsl
jle
dec
cmp
fwait
sub
and
inc
push
ja
ljmp
inc
hlt
mov
out
scas
jmp
out
lret
int3
mov
cmp
stos
mov
add
adc
cmp
xchg
xchg
pop
pusha
in
popa
sub
jnp
inc
icebp
sub
mov
cli
dec
or
cld
jmp
fdivrl
imul
mov
or
enter
inc
aad
inc
dec
cmp
adc
mov
dec
and
lock
shll
or
dec
cmc
xor
jecxz
dec
enter
fisttpll
dec
lock
sub
sbb
or
stc
and
adc
add
jo
pusha
test
mov
mov
dec
lock
sub
sbb
or
stc
and
adc
add
jo
pusha
test
mov
mov
dec
lock
sub
sbb
or
stc
and
adc
add
jo
pusha
test
mov
mov
dec
lock
sub
sbb
or
stc
and
flds
mov
scas
mov
dec
push
pop
ss
xor
cmp
jbe
shlb
xchg
add
pop
push
push
inc
sbb
pop
pushf
enter
jmp
cwtl
imulb
pop
pop
cs
pop
sbb
jno
xchg
enter
rclb
test
iret
data16
sub
dec
sbb
inc
sub
and
mov
mov
add
in
push
jmp
dec
add
cmc
xchg
sbb
mov
fdivrs
dec
pop
stos
in
push
xchg
ret
sbb
imul
pop
push
cwtl
jg
in
sbb
fs
xchg
enter
out
pop
pop
sub
movsb
pop
and
push
dec
jge
jae,pn
push
sbb
xor
daa
mov
cli
jge
cwtl
xchg
js
fisttpll
mov
outsl
xchg
push
jne
addl
sahf
aaa
jns
mov
fcmovnb
mov
push
pop
notb
push
dec
jns
stos
jo
inc
int
xchg
mov
jns
dec
popf
cmpsl
pop
push
cltd
enter
inc
dec
push
pop
ss
pop
sbb
jg
scas
call
ficomps
gs
arpl
push
sub
xor
insb
je
or
xchg
les
mov
fstl
and
xor
and
and
pop
sbb
push
xchg
lods
xchg
mov
mov
xchg
out
jg
xor
push
or
inc
sbb
data16
call
cwtl
imulb
push
pop
ss
inc
sbb
data16
call
cwtl
imulb
lds
pop
dec
mov
leave
jg
fdivrl
lcall
sti
adc
lock
cmpl
clc
mov
bound
aad
cld
stos
sbb
sbb
or
cmp
addr16
mov
mov
cmp
shrb
or
mov
sub
test
lds
int
lock
sub
push
cli
shrb
mov
or
movsb
ficompl
stos
test
sti
xor
or
ds
in
add
lock
gs
loope
mov
int
xorb
sub
and
or
jnp
xor
inc
push
pop
gs
pop
aam
popa
push
cli
inc
xchg
mov
call
arpl
or
je
fstl
scas
jecxz
loopne
or
mov
ljmp
fs
dec
mov
and
sbb
xchg
pop
imul
jae
mov
pop
ret
sub
out
mov
outsl
pop
stos
adc
bound
cmp
mulb
or
sbb
add
jbe
mov
pop
add
sub
mov
loop
lret
pushf
inc
push
add
jne
inc
loopne
pushf
cmp
xchg
hlt
jns
pusha
mov
cmp
xor
rcr
or
mov
and
and
int
mov
jg
int
pop
push
fwait
push
and
push
scas
cltd
stc
insl
test
jne
add
pop
pop
inc
stos
fwait
cltd
or
loope
dec
and
pop
jge
popf
push
or
fdivl
cwtl
clc
loope
mov
in
jmp
mov
add
xor
push
push
pushf
push
cmp
jo
test
fcmovb
std
xchg
mov
xchg
mov
imul
mov
insl
imul
push
in
hlt
inc
incl
jp
ret
aas
sub
aas
mov
sar
sub
fstl
mov
jnp
aas
mov
pop
ljmp
test
inc
repz
lret
out
nop
jno
mov
pop
push
and
pusha
popa
cmpl
sub
adc
and
xor
int
imul
js
jle
rclb
or
int3
movsl
pusha
pop
lods
mov
lret
lcall
cwtl
mov
jae
xchg
mov
pop
xor
popf
addr16
xchg
enter
inc
loop
pop
pop
push
mov
paddusw
dec
push
lret
dec
stos
loope
inc
inc
mov
mov
xor
out
jne
add
mov
jl
movsb
cmp
mov
in
sbb
mov
pop
loope
fadd
neg
xchg
rcrl
imul
mov
pushf
mov
in
jecxz
mov
sub
test
sarb
dec
xor
outsl
jge
cmp
mov
daa
or
mov
iret
pop
xchg
cmp
mov
push
cltd
mov
std
popf
dec
popf
and
mov
push
lea
push
stos
and
push
xchg
shr
mov
jmp
push
lds
jge
adc
mov
add
lea
out
imul
fnstsw
stos
push
and
sarb
out
add
dec
jmp
aam
out
sbb
int
mov
repz
test
aam
scas
adc
lcall
jp
xchg
push
mov
xor
out
mov
mov
cld
mov
lahf
nop
aam
sub
mov
mov
push
dec
in
outsl
out
cmp
shlb
mov
rolb
imul
popf
xchg
pop
inc
aam
jp
mov
mov
mov
test
into
xor
push
lret
mov
push
scas
enter
sub
sub
outsb
mov
in
test
rorl
ljmp
in
psubb
adc
inc
insb
mov
sti
ds
inc
xor
inc
push
mov
imul
das
scas
mov
cld
xor
inc
cmpsl
sub
dec
cmp
mov
xchg
sbbl
xchg
mov
pop
and
testl
dec
repnz
scas
adc
inc
mov
outsl
sbb
push
loope
jne
push
sbb
jnp
mov
jmp
bound
es
dec
call
xor
movsl
xor
xor
ja
test
push
int
pop
jno
jno
add
mov
or
lcall
jbe
mov
xor
jo
test
add
in
daa
rcl
int3
sbb
mov
mov
pop
or
xor
stos
lret
cmp
movsb
jecxz
iret
fnsave
dec
cwtl
lods
xor
mov
and
push
hlt
inc
jp
xor
mov
loopne
sub
das
mov
sbbl
outsb
lret
jecxz
ds
mov
lcall
scas
dec
sub
ja
lods
dec
sub
jecxz
mov
xor
in
fs
adc
leave
mov
test
outsb
addl
add
fcoms
scas
sub
int
sbb
mov
push
pushf
push
xor
mov
xor
scas
jmp
cmp
add
inc
dec
in
add
test
or
pop
push
mov
fdivrs
arpl
aaa
push
mov
mov
push
xchg
lret
push
std
add
stos
adc
lea
mov
ret
xchg
xchg
cld
lret
jge
fmul
out
mul
mov
pop
mov
pop
dec
imul
das
cmp
cmp
int3
xchg
push
xchg
jl
xorb
adc
sti
insl
aas
cli
xchg
mov
jns
add
into
and
arpl
mov
xchg
test
push
inc
xor
sub
jl
mov
imul
xor
sbb
mov
push
xor
bound
movsl
jne
out
mov
jmp
add
or
fcoms
ljmp
mov
lock
push
adcb
pop
mov
xchg
xchg
cs
push
int
push
lahf
sbb
mov
fisttps
imul
or
fldcw
cs
jecxz
xchg
cltd
hlt
adc
fisttpll
adc
jle
sbb
repnz
out
adc
out
pop
scas
test
sbb
aam
loop
jecxz
movsb
inc
lods
das
in
sub
stc
jp
dec
push
jp
inc
add
loope
xor
mov
dec
mov
sbb
push
jo
les
push
les
outsl
mov
fsubrl
fmull
clc
imul
or
dec
insl
nop
pop
imul
mov
add
clc
pop
push
mov
dec
add
push
mov
pop
out
ret
jle
mov
inc
sahf
xchg
sti
or
jo
icebp
fs
mov
fcoml
loop
filds
xchg
push
mov
push
lret
push
repz
xchg
inc
xor
jae
pop
int3
dec
mov
sarl
leave
sub
leave
cs
push
imul
cmp
shrb
imul
inc
enter
lds
sub
xor
push
xchg
adc
pop
dec
aad
insb
repnz
lret
mov
push
dec
movsl
mov
xchg
out
rolb
dec
jae
pusha
fdivrp
repz
lahf
mov
stc
pop
stos
xchg
pop
fisttpll
gs
sub
and
sbb
fistpll
in
adc
pushf
lds
negl
call
mov
mov
das
xchg
xchg
fstps
loop
mov
std
mov
lds
das
dec
add
cmpsl
push
lds
mov
mov
leave
xor
mov
popa
outsl
dec
icebp
roll
and
pop
ret
iret
rcrl
xor
outsb
add
mov
rol
push
jle
pop
jmp
stc
dec
xor
jmp
xor
subl
mov
daa
or
mov
int
and
jmp
jecxz,pt
push
mov
data16
adc
and
xor
cmp
jmp
daa
adc
mov
pop
insl
xchg
out
adc
pop
leave
or
lock
cmp
loope
pop
or
mov
pop
cmp
je
sahf
mov
notl
add
imulb
and
jnp
repnz
les
cmp
cwtd
icebp
and
mov
lods
mov
and
mov
xor
imul
dec
subb
mov
or
pop
mov
js
pop
shlb
outsb
addb
xchg
aam
arpl
push
ret
in
aaa
scas
outsl
ret
lods
test
mov
inc
arpl
stos
rclb
cs
add
inc
xor
dec
mov
adc
mov
loop
pop
xor
in
push
or
adc
push
push
push
fsubl
in
lret
sbb
pop
mov
lods
xchg
addr16
in
mov
and
pop
sub
jg
sbb
mov
stc
and
enter
xchg
clc
dec
ja
xchg
fisttpl
mov
dec
jns
xchg
adc
xorl
imul
test
scas
stos
xchg
xchg
mov
cltd
inc
scas
movd
jnp
mov
cmp
fidivs
in
cwtl
cmpsl
lcall
cmp
push
dec
test
lods
call
cltd
mov
adc
pop
nop
fisubrs
xlat
push
xchg
jecxz
out
pop
test
mov
add
pop
inc
xchg
insb
in
pop
enter
inc
jl
xchg
jnp
cmp
cmp
scas
mov
int
xor
out
pop
or
sub
jle
sub
rorl
adc
add
xor
gs
sbb
insb
insl
jbe
mov
xchg
mov
inc
mov
mov
insl
inc
cwtl
push
mov
mov
mov
pop
cmp
outsb
push
sub
nop
shl
ret
cltd
pop
push
arpl
ficoml
cmp
jo
in
cmpsl
push
sar
aas
lea
arpl
lods
inc
cld
xchg
fsubl
loope
sti
mov
add
or
mov
or
mov
adc
pop
test
testl
cltd
out
inc
stos
push
imul
js
out
sbb
aaa
mov
aas
test
mov
imul
pushf
sbb
leave
pop
mov
jp
xchg
or
dec
pop
addr16
add
mov
push
rcl
mov
adc
movsl
jle
ret
and
jnp
hlt
add
xor
push
mov
nop
gs
sub
inc
jns
aas
repz
mov
jmp
out
mov
fldl
mov
leave
lock
test
xchg
scas
test
jne
test
adc
sbb
ficomps
sub
dec
mov
push
sub
mov
cmp
xor
sbb
aaa
sub
pushf
jae
or
jge
loopne
mov
lret
push
and
lods
and
loop
stos
in
daa
loopne
hlt
scas
fwait
popa
ja
repnz
xor
or
mov
dec
or
insb
mov
data16
xchg
test
mov
or
cmp
mov
pop
jge
mov
sbb
sub
cmpb
push
jne
mov
les
and
pop
sbbl
inc
mov
out
pop
cmp
pop
jb
addr16
sub
push
pushf
mov
xchg
push
xchg
add
pand
andb
je
leave
mov
xor
xor
add
mov
mov
cmpsl
fsubr
mov
inc
pop
stos
fistps
addr16
mov
xor
mov
data16
jne
icebp
jns
mov
sub
push
js
fisubrl
push
pushf
ljmp
jae
jb
xchg
inc
mov
test
outsb
gs
pop
pop
jge
and
adc
pop
outsb
mov
jo
and
test
or
xchg
pop
push
loop
sbb
xchg
lock
scas
sbb
or
push
inc
push
mov
adc
cmp
testb
lods
and
int3
add
gs
lock
notb
dec
movsb
test
push
dec
outsb
lods
shrl
mov
std
push
outsl
add
mov
pop
or
test
inc
aam
push
add
ja
cmp
pop
mov
dec
ja
loopne
xchg
clc
add
mov
dec
cmp
sub
lods
xchg
pop
fistpll
sbb
orl
repnz
pop
mov
shlb
popa
adc
xchg
sbb
dec
and
in
movsb
ds
inc
imul
add
pop
fs
inc
mov
pop
mov
mov
shrl
lret
out
mov
pusha
enter
aas
and
or
adc
mov
jmp
idivl
add
js
int
loopne
mov
mov
xchg
mov
popa
xchg
std
jns
or
scas
loopne
xorb
mov
cmp
mov
mov
sbb
loope
push
jp
lock
es
loope
mov
add
push
mov
jne
add
cmpsl
and
sbb
into
sar
jne
and
pusha
sub
es
mov
dec
jno
and
push
jae
inc
cmp
inc
in
inc
cmp
dec
or
adc
or
sti
les
cmp
int3
adc
out
aad
mov
lcall
mov
add
cmc
insb
pusha
das
fildl
fistl
in
jmp
lret
cmp
push
out
test
jmp
mov
call
adc
pop
dec
call
sarl
aas
pop
pop
inc
out
in
push
clc
mov
xchg
enter
jb
insb
xor
mov
lods
jnp
add
mov
mov
mov
mov
mov
inc
mov
push
aad
mov
dec
pop
jmp
loop
jae
cmpl
dec
jecxz
ror
push
mov
sahf
pop
jbe
lret
jne
jno
mov
dec
mov
adc
fnstenv
adc
popf
dec
xor
fisubl
push
mov
inc
sarb
jb
ds
add
movsl
push
add
and
aas
sti
stc
inc
test
add
ds
mov
pop
xchg
ret
jno
sbb
dec
enter
pop
les
pop
in
xor
jo
add
jae
and
pushf
mov
gs
mov
clc
int3
xchg
arpl
push
push
mov
dec
mov
and
pop
xor
cmpsb
pop
js
stos
mov
pop
aas
rclb
stc
test
push
xchg
out
pop
sbb
mov
lret
imul
into
aam
add
mov
push
scas
ljmp
stos
fsts
xor
sub
shrb
dec
dec
push
push
mov
iret
insl
jb
pop
mov
cmp
adc
ja
sub
cmp
or
sub
xor
pop
jl
sbb
clc
push
cmc
outsb
push
mov
mov
xlat
mov
sbb
cmp
push
in
shll
jns
xlat
test
dec
and
lea
mov
inc
xlat
divb
xchg
adc
ret
pushl
movsb
imulb
mov
pop
add
mov
jecxz
icebp
fidivrs
or
mov
jnp
adc
lcall
jle
xchg
mov
adc
insl
jecxz
cmpsl
mov
pushf
dec
cmpsl
fisubrl
enter
ret
ret
jae
icebp
add
xor
push
xchg
pop
pop
fisubrs
mov
xchg
cmc
push
enter
inc
bound
scas
cmpsl
fsubrp
mov
sti
jmp
in
hlt
mov
xor
or
mov
mov
add
fs
push
stc
jl
insl
and
xchg
in
xor
pop
test
and
fwait
lret
dec
imul
push
mov
lret
clc
adc
inc
cmp
inc
adc
or
jp
aas
out
sub
dec
leave
xchg
pop
xchg
mov
or
out
dec
mov
repz
mov
xchg
test
mov
ret
shrb
sbb
js
in
mov
cmpsb
mov
push
je
sti
or
repnz
cmc
into
lahf
push
iret
int3
cs
das
push
aaa
movsb
xor
dec
jnp
push
insb
mov
cmp
roll
subl
inc
sbb
jb
push
call
fmull
push
cmp
mov
cltd
ds
in
dec
repz
in
and
cli
or
cs
and
xor
jno
jmp
hlt
cmp
dec
cmp
xlat
in
stos
add
jle
or
or
sti
adc
in
decb
xchg
daa
data16
xchg
ja
negl
add
pop
jne
mov
sarb
jmp
jp
sub
mov
and
loope
int3
icebp
ds
xchg
cmp
push
mov
mov
mov
mov
test
dec
or
movsl
push
jge
cmp
adc
xchg
and
aaa
shr
pop
jp
dec
and
cld
inc
jb
icebp
adc
xchg
push
jl
or
adc
je
sbb
gs
xor
mov
xor
nop
cli
inc
jl
push
adc
out
mov
xor
pop
jge
push
out
pop
out
dec
xchg
push
mov
cwtl
je
jge
dec
mov
neg
mov
and
jge
mov
inc
je
icebp
push
std
cmp
dec
inc
aaa
jl
jg
test
je
push
mov
sahf
ds
fldl
push
mov
dec
sti
ret
xchg
aam
les
dec
lahf
shlb
mov
mov
mov
addb
mov
add
sti
mov
adc
dec
inc
jp
lret
dec
jmp
frstor
fists
xor
imul
enter
fcompl
xchg
inc
fidivs
xchg
jae
mov
mov
loope
inc
cld
addr16
loop
test
ret
xor
sub
fwait
iret
rol
fwait
xor
ja
jns
pop
mov
xor
out
jb
scas
shll
inc
into
cmpsl
repz
test
mov
mov
or
or
aas
int3
pop
ja
stos
dec
dec
lret
xlat
les
xchg
mov
xchg
dec
or
sbb
lea
push
jge
push
mov
or
inc
test
dec
insl
das
test
push
scas
jmp
in
gs
ds
ret
fldcw
dec
movsb
sbb
xchg
mov
imul
pop
jle
xlat
or
xchg
lods
test
lret
sbb
lcall
push
testl
shl
add
orb
or
icebp
sub
aad
or
test
test
test
dec
and
loop
dec
out
ja
sub
lret
or
adc
movsb
or
divps
push
ret
cs
pop
fnclex
sti
xor
add
pushw
xchg
mov
and
mov
out
cmp
add
inc
cli
pop
and
dec
or
arpl
sub
js
les
lock
sub
bound
bound
cmpsb
dec
jnp
mov
repnz
call
cmp
jnp
scas
data16
or
push
scas
ja
insl
faddl
fsubrl
loope
inc
es
jp
dec
fildll
mov
push
rcrb
mov
testl
sbbb
adc
adc
fimuls
in
push
enter
pop
mov
pop
in
jp
mov
jecxz
enter
in
mov
fiaddl
lods
lea
call
stos
dec
popa
add
pop
mov
je
repz
add
ljmp
mov
sarl
or
xchg
sbb
sub
mov
jecxz
cmp
test
cltd
jp
mov
sbb
and
jge
xchg
cmp
leave
mov
hlt
call
adc
js
icebp
jmp
lret
test
mov
scas
add
cmpb
icebp
decl
add
add
subb
jo
xchg
adc
mov
aam
cmp
ljmp
or
pusha
mov
decb
out
std
xchg
push
adc
sbb
ret
imul
push
mov
pop
xlat
inc
insl
fsubrs
and
ds
je
and
inc
pop
xacquire
push
dec
out
cmp
outsb
faddl
leave
mov
jb
jnp
lods
cmpsb
xchg
cltd
xlat
adc
push
and
adc
fildl
adc
pushf
je
repz
inc
repnz
jmp
lods
and
sti
in
clc
es
loopw
fs
or
mov
or
repz
xchg
lods
mov
lock
clc
stc
cmp
sub
mov
lods
mov
push
xchg
cmp
call
xchg
ljmp
stos
mov
fsubl
hlt
popa
idivb
lea
pushf
xor
inc
imul
adc
sbb
fistps
sub
xor
mov
aaa
pushf
add
loopne
pusha
test
add
push
push
inc
sbb
data16
call
cwtl
imulb
push
pop
ss
inc
sbb
data16
call
cwtl
imulb
push
pop
ss
inc
sbb
data16
call
ret
test
mov
add
js
or
imulb
out
imul
cmpsb
mov
push
sbb
loop
repnz
out
rclb
mov
dec
jb
inc
outsl
push
pop
and
mov
add
adc
loop
repnz
out
rcrb
subb
jg
outsl
push
pop
and
xor
inc
das
adc
loop
repnz
out
rcrb
subb
or
addr16
jl
inc
adc
lods
xchg
push
pop
and
xchg
cld
fs
pop
push
mov
xor
sub
inc
test
jecxz
ret
inc
nop
fisttps
pmaxub
jle
and
cmpsb
mov
jne
lock
lahf
pop
lea
ljmp
std
das
fcomip
call
shl
mov
scas
insl
scas
mov
nop
add
bswap
std
movsb
lahf
mov
dec
or
pusha
mov
and
pop
sahf
inc
and
dec
xor
lahf
jecxz
aaa
or
mov
add
sbb
mov
jb
push
add
cmc
clc
push
sub
repnz
out
rcrb
subb
jg
outsl
push
pop
and
xor
add
jnp
lea
cli
into
loopne
ror
sub
das
pop
sub
or
sub
inc
dec
inc
pop
add
test
ret
cli
ljmp
sub
and
call
addr16
inc
mov
stos
mov
mov
bound
jg
outsl
push
pop
and
xor
add
adc
loop
repnz
out
rcrb
subb
jg
outsl
push
pop
and
xor
add
adc
loop
mov
dec
outsb
jge
out
cld
xor
pushf
sub
fildl
xchg
sarl
aaa
add
jbe
push
rcll
push
sahf
add
ret
jns
push
orl
mov
pop
mov
aad
stos
cltd
aam
pop
mov
add
repz
adc
jl
jno
jle
leave
mov
xor
adc
dec
aaa
cmpl
dec
dec
inc
inc
inc
ljmp
sahf
push
shll
pop
enter
pushf
ret
repz
inc
mov
ja
sbb
int
mov
lds
xor
ja
sub
add
pop
sti
jp
cmpsb
sub
jp
jb
push
sub
push
sti
cmp
std
xchg
add
inc
xor
jle
fimull
out
dec
jbe
xchg
iret
ret
repnz
jecxz
xor
pop
push
stos
cmp
add
adc
push
mov
leave
mov
in
and
jl
pop
jp
shrb
mov
push
fldl
dec
pop
fs
xchg
fs
nop
popf
inc
xor
bound
jecxz
xor
xchg
loope
sub
cmc
xor
stc
add
fcomip
filds
inc
mov
mov
dec
push
ljmp
in
sbb
sbb
ret
or
adcb
or
shlb
daa
push
nop
mov
xchg
icebp
dec
jg
stc
clc
dec
shll
popl
clc
mov
cmp
jecxz
add
sub
lret
fsubrp
push
mov
call
cmp
sarl
arpl
jecxz
jl
dec
push
imul
push
or
mov
outsb
loope
xor
cmovno
add
stos
and
inc
lret
ljmp
mov
hlt
scas
sbb
cld
jmp
adc
fwait
std
pop
sarb
add
dec
dec
movsb
scas
lret
ret
xorl
scas
xchg
lret
inc
hlt
repz
push
pop
faddl
in
pop
ljmp
lea
jmp
in
jae
lods
pop
out
pushl
ret
in
mov
movsl
push
in
dec
rol
push
mov
adcb
out
and
adc
ret
push
mov
and
or
bound
push
lret
xchg
lret
lret
insb
jno
jecxz
or
cmp
ror
cmp
xchg
data16
sub
fadds
jo
add
or
bnd
repz
add
pop
sub
inc
enter
loopne
or
sub
mov
loope
adc
sahf
add
cltd
std
int3
sbb
mov
popf
clc
mov
xchg
and
pop
mov
jg
rol
xchg
dec
aam
ljmp
das
mov
call
std
adc
ficoms
das
cs
xor
xchg
arpl
add
mov
mov
cmc
insb
ret
out
fildll
ss
dec
dec
jb
jb
loopne
pop
cmp
sub
pop
les
jne
in
movsl
stc
in
mov
mov
push
fcoms
popa
mul
xchg
fbstp
add
aaa
out
and
movsb
pop
insb
xor
adc
mov
mov
dec
fwait
sahf
xchg
sahf
sbb
imul
mov
mov
add
push
push
fiadds
and
test
and
and
dec
xor
sbb
rep
lds
push
dec
cmp
sub
adc
jb
jo
jmp
mov
rclb
mov
std
js
shlb
mov
push
mov
pushf
inc
inc
imull
scas
call
xor
add
inc
cmp
cwtl
add
pop
shlb
call
das
push
mov
and
xor
movsb
mov
fs
clc
scas
test
jns
jb
pop
mov
xor
fs
repz
outsb
inc
mov
adc
pop
jb
mov
jbe
or
mov
add
jo
dec
ds
sub
adc
lods
jns
std
push
insb
dec
push
into
jnp
adc
mov
cmp
xchg
mov
sub
stos
mov
fstpt
in
pop
arpl
div
loope
out
sahf
push
sub
adcb
jae
lock
mov
pushf
bound
fdivrs
jge
cmovo
cmp
mov
push
dec
mov
rol
into
xor
test
out
sub
pushf
fldcw
rol
out
insl
and
mov
out
jno
test
call
lret
jge
loop
dec
or
mov
push
xor
jle
in
inc
stos
pop
roll
arpl
jl
cmp
cs
cmpsl
cmp
pop
data16
fmull
imul
mov
inc
sbb
int
sub
mov
sub
jns
or
jmp
loop
xchg
sbb
cmp
les
test
outsb
inc
addr16
and
or
xor
ljmp
adcb
leave
int
pusha
in
pop
clc
jbe
add
subb
xlat
mov
test
xchg
jmp
sahf
sbb
mov
pop
pop
jge
outsl
xor
arpl
ljmp
sbb
jbe
jle
jle
movsb
lahf
pop
outsl
sub
rorb
lret
xor
sbb
pop
add
cmp
loop
push
pop
loopne
ds
or
sub
cmp
mov
fstl
into
lea
lock
aad
mov
dec
dec
mov
fwait
insb
es
mov
xchg
or
adc
sub
cmp
mov
call
mov
out
xchg
ret
mov
les
stos
or
sub
jne
inc
sbb
push
dec
imul
add
inc
jnp
push
or
xor
or
cmp
lea
dec
ljmp
jnp
movsb
rolb
xchg
into
and
mov
mov
sarb
daa
iret
and
or
push
or
das
or
inc
les
xchg
aad
dec
dec
fisubl
inc
lds
xor
ljmp
mov
mov
iret
bnd
sbb
sbb
inc
outsl
jae
push
fs
add
and
cmp
std
stc
mov
xor
addr16
adc
jbe
push
mov
sub
jae
jg
popf
sbb
ret
lret
add
das
std
add
mov
xor
clc
negl
mov
pop
imul
out
xchg
adc
cltd
mov
and
lret
xlat
xchg
ds
or
fcompl
mov
jae
jne
pop
aad
movsl
aad
ljmp
dec
pop
in
cmp
add
aad
popf
cld
outsl
sbb
lods
adc
rol
in
js
push
push
test
enter
cli
lret
mov
out
adc
add
jns
das
cmp
sub
hlt
incl
sahf
fcompl
push
shrl
xor
imul
pop
mov
lds
cld
pop
fwait
dec
and
mov
xchg
push
jns
jmp
and
cmp
and
push
mov
jno
push
out
dec
into
jo
jecxz
jns
jmp
or
rcr
inc
adc
cmpl
and
inc
push
xchg
nop
inc
das
daa
mov
inc
inc
outsb
jp
sarb
jg
inc
jge
pusha
and
jb
push
icebp
lahf
jecxz
adc
push
js
pop
pop
icebp
in
jbe
fcoms
cmp
repz
push
out
add
stos
xchg
cmpsb
mov
xchg
imulb
lods
pushf
or
popf
inc
add
fmull
mov
hlt
sbb
cmpsl
hlt
xorb
pop
stc
int
inc
dec
sbb
fcmovne
add
inc
mov
and
jge
mov
pusha
enter
loopne
xor
push
cmp
push
mov
sbb
mov
dec
mov
adc
movsl
iret
ret
adc
mov
jne
cmpsb
andl
push
push
jmp
aad
mov
jmp
jmp
mov
pop
fldcw
ds
and
sub
xlat
cmp
and
rcrl
sub
stos
sub
iret
icebp
lds
cmpb
jbe
int
aas
cs
outsl
movsb
loopne
arpl
dec
mov
fists
fistl
xor
add
push
lea
jmp
fucom
jo
sti
test
in
jp
xchg
sarl
mov
shrl
in
lret
movl
sub
test
cmp
add
outsb
sbb
xor
mov
or
cmp
test
inc
push
mov
cld
push
push
adc
mov
push
xor
mov
sbb
mov
imull
sbb
std
sahf
pusha
repnz
push
cmp
xchg
fistpll
jbe
adc
gs
adc
fimull
adc
jbe
xor
pop
pop
inc
add
pop
jl
push
and
mov
dec
sbb
jle
mov
and
cltd
fcmovnbe
cmp
sub
adc
pop
and
rcrl
inc
mov
shrl
in
mov
xchg
leave
sbb
lods
int
setle
mov
fnsave
add
scas
cld
scas
xchg
iret
fistpl
fistl
repnz
lahf
adc
cwtl
mov
cmp
dec
imul
mov
in
add
or
scas
cmpsl
fdivrl
adc
repnz
and
stos
sub
cwtl
shll
pop
adc
push
inc
push
xor
lods
out
in
add
in
adc
test
and
push
hlt
cmpsb
mov
jnp
xchg
scas
and
inc
sub
enter
sub
mov
sbb
imul
lock
shrl
pop
adc
or
insb
fsubs
xor
mov
arpl
clc
pop
xor
mov
xor
test
outsl
mov
cmp
fst
pushl
jae
xor
mov
imul
xor
fmuls
fsubs
jo
or
outsl
scas
xchg
nop
sbb
test
test
xchg
pop
cmp
pop
gs
enter
dec
ljmp
jae
inc
add
jae
into
test
or
xor
jl
push
xor
jno
ss
imul
and
mov
std
cli
dec
inc
add
xor
jb
pop
xchg
aaa
les
hlt
mov
nop
pop
aad
hlt
dec
lods
cli
adcb
sbb
shlb
pop
movsb
cmpsb
and
repnz
test
push
xchg
int3
sub
pop
push
ror
dec
xor
clc
dec
movsl
fcmove
xchg
inc
add
rclb
out
repz
sbb
outsl
and
pop
dec
pop
loopne
das
lcall
add
inc
loopne
push
pop
mov
arpl
mov
cld
lods
int
cmp
sub
outsb
fsubl
push
imul
lcall
test
pop
out
pop
xchg
imul
jo,pn
or
pushf
pop
in
hlt
test
lods
add
jl
or
sbb
jg
dec
imul
bound
jnp
lock
scas
mov
push
jb
shrl
mov
jne
in
inc
push
shr
negl
scas
adc
push
pusha
dec
cmp
je
xchg
daa
pop
popa
sarb
aas
inc
lahf
push
mov
mov
mov
pop
xchg
xchg
aam
aaa
xor
rcrl
xor
aam
out
enter
shl
xor
bound
js
inc
mov
inc
cwtl
mov
cmp
out
xchg
iret
xor
cmp
dec
xchg
pop
or
sbb
rcll
mov
stos
add
insb
dec
cmpsb
lea
popa
dec
ss
and
pop
sbbl
jno
mov
in
add
push
cmp
aam
scas
dec
mov
pop
fiadds
xchg
clc
jecxz
and
xchg
xor
in
lock
cltd
int3
ud0
aam
adcb
push
popf
jge
or
call
mov
dec
imul
mov
and
bound
lds
inc
insb
lock
out
mov
mov
inc
and
inc
adc
scas
ja
mov
dec
xrelease
negb
lds
andl
inc
and
sub
pop
mov
cmp
imul
jb
mov
rolb
sub
lret
mov
jnp
and
scas
add
and
stc
adc
push
aad
aad
sbbl
sbb
ret
call
and
sub
add
mov
nop
sahf
sti
out
pop
scas
fadds
call
iret
aaa
inc
sub
ss
jne
clc
and
jo
pusha
cmp
fs
adc
or
lods
bound
add
test
add
cmc
dec
lds
icebp
inc
xchg
mov
xchg
dec
dec
and
fdivs
push
daa
mov
dec
xchg
and
pop
loop
clc
cli
or
rcll
ja
loop
popa
out
xchg
call
js
sarb
mov
in
test
push
sub
out
std
sub
sahf
fsubr
mov
push
movb
cmp
add
inc
add
mov
mov
xchg
xorl
mov
jl
or
cwtl
and
add
xor
out
pop
clc
xor
add
nop
sbbl
push
xor
jnp
test
test
xchg
sub
ret
lret
stos
imul
jno
jge
xor
iret
pop
mov
js
fistps
shl
sbb
mov
add
in
dec
xchg
xlat
mov
inc
repz
popl
jb
int3
xchg
pop
mov
jbe
push
sbb
js
mov
pop
sub
and
mov
ret
rol
test
sarb
outsb
jno
jne
xor
push
mov
jg
mov
iret
aad
cwtl
xchg
dec
mov
cmpsb
dec
negb
mov
es
adc
inc
cmpsl
push
or
inc
repz
outsb
je
mov
mov
in
pop
xor
mov
lock
and
clc
mov
pop
mov
imul
in
imul
xchg
mov
or
fdecstp
nop
stc
push
fistl
mov
jl
adc
dec
fiadds
push
je
jbe
and
dec
pop
add
insl
jne
xchg
mov
sbb
xchg
add
jmp
push
add
push
dec
loopne
mov
sbb
cmp
mov
sub
lret
dec
es
popa
cmp
imul
adc
call
inc
jae
gs
pop
mov
in
int3
enter
or
pop
cmpsb
stc
xchg
stc
jp
mov
jae
sbb
stos
movb
sbb
xchg
adc
jae
push
stos
mov
add
jnp
mov
jl
mov
add
leave
sbb
jl
add
into
sub
dec
test
mov
fisubs
das
dec
aad
fs
jns
mov
outsl
dec
sub
js
mov
push
xchg
or
cmp
adc
std
or
fidivrl
rorl
and
inc
inc
xchg
cli
fnstenv
das
xchg
mov
loope
jmp
cmp
and
dec
pop
and
aam
movsb
fcmovnbe
cli
sbbl
out
jae
mov
ficoml
jo
inc
pop
mov
loope
subb
lock
loope
push
add
inc
movsb
inc
pusha
push
ret
and
sbb
std
mov
sbbl
fchs
negb
add
ret
daa
in
jae
mov
shll
or
sbb
mov
adc
leave
jmp
mov
lods
push
pushf
imul
test
or
jno
mov
sub
lock
call
mov
and
lea
shlb
push
scas
sub
pop
dec
and
outsb
cmp
xor
fadd
push
jmp
xlat
jmp
in
je
jecxz
inc
les
dec
loop
sarb
cmc
loopne
xchg
adc
mov
les
xor
fnstcw
mov
push
mov
test
insb
cmc
mov
mov
sub
or
cmp
pushf
pusha
inc
sub
jno
test
dec
or
and
add
inc
xchg
lds
inc
dec
pop
pushf
lea
ljmp
cmp
in
xchg
mov
orb
push
ret
dec
addr16
punpckhwd
jmp
mov
pop
pushl
fs
lcall
adcb
loop
xchg
cmp
mov
lahf
pusha
pusha
repnz
testb
flds
xor
out
pop
shrb
push
jno
push
jp
mov
mov
lds
pop
jo
jge
mov
adc
push
xorl
push
clc
mov
insl
sub
pop
nop
lcall
popa
hlt
mov
mov
and
test
pop
jns
mov
lds
daa
mov
je
dec
in
stc
outsl
inc
cmc
in
cmp
lret
sbb
sub
dec
sti
addb
push
cmpsb
or
xchg
mov
xlat
xor
push
loopne
out
jne
adc
lock
fsubs
sbb
dec
and
lahf
ds
add
leave
mov
leave
adc
ret
clc
and
sarl
iret
bound
push
mov
cmp
pop
es
subl
mov
push
cli
push
ds
jbe
neg
pop
addr16
imul
sub
loop
xor
sbb
inc
adc
imul
push
jo
nop
ret
mov
inc
fdiv
fmull
shll
out
dec
jmp
and
cmp
adc
pop
les
push
push
testb
jl
orb
aam
cs
fsub
inc
sub
aam
sbb
js
mov
dec
sbb
pusha
xor
lea
mov
push
outsb
push
inc
movsb
std
push
out
xor
xor
sub
fdivrl
mov
addl
cmc
leave
repz
and
bound
lea
inc
fadds
and
xlat
cmp
adcl
dec
adc
hlt
sub
add
clc
pop
fadd
sti
push
push
data16
mov
std
lret
clc
jmp
mov
and
ret
add
add
jg
leave
jne
es
inc
lret
loope
pop
loopne
jle
push
pop
rol
mov
or
stc
sbb
fs
mov
lret
je
sub
sub
sbb
fs
jge
into
mov
andl
pop
loopne
jne
mov
pusha
sbb
scas
dec
cmp
iret
scas
cmp
sbb
aam
sbb
cltd
or
in
xlat
xor
push
sbb
pop
int
cld
lods
dec
add
mov
mov
push
sbb
std
fwait
dec
sbb
push
adc
pop
loopne
clc
push
jo
lods
idivl
mov
js
inc
sbb
fisubs
and
sti
hlt
adc
jg
gs
rorb
lods
sbb
jnp
popf
lock
ret
jmp
movsb
sub
mov
js
out
jo
repz
popa
mov
mov
xorb
pop
inc
cmp
mov
cmc
adc
dec
push
data16
pop
pop
fs
push
movsb
movsl
mov
lret
bound
pop
jno
mov
mov
inc
ret
lahf
xor
pop
andl
enter
ret
push
or
xor
jge
lahf
popa
adc
lahf
inc
sarb
ljmp
jl
loopne
pushf
scas
or
adcb
sbb
ror
out
inc
pop
or
push
test
xor
cmpsl
shrl
xor
gs
xor
hlt
por
cmpsb
in
out
mov
loope
push
add
adc
cld
or
mov
or
fsubrs
ficomps
test
add
int
test
mov
sub
adc
cmpsl
aas
dec
inc
xor
aaa
sub
add
push
ljmp
nop
frstor
jo
and
jb
push
pop
ss
jmp
fidivrl
sub
movsl
loopne
cmp
adc
push
sub
xchg
pop
insb
mov
cmp
cmc
sub
fsubrp
loope
insb
add
mov
mov
enter
cltd
fdivrs
fs
pop
dec
add
xor
sub
outsb
xchg
scas
jne
fs
sub
cltd
dec
nop
insb
test
pop
dec
add
aad
cltd
sub
xlat
sub
andl
test
test
jo
or
notl
sbb
ljmp
js
popa
sbb
or
test
mov
nop
cmp
mov
adc
push
cs
mov
fmuls
lods
xchg
push
push
dec
test
jmp
clc
leave
lea
lds
jmp
mov
cmp
jb
xor
rcr
mov
mov
push
ret
sbb
movsl
in
in
mov
fistps
inc
aas
add
mov
stos
mov
adc
inc
ljmp
pushf
xor
xor
dec
xor
lcall
std
fnstsw
or
mov
mov
enter
pop
repnz
rcrb
subb
jg
outsl
push
pop
and
xor
add
adc
loop
repnz
out
rcrb
subb
jg
outsl
push
pop
and
xor
add
adc
loop
jb
inc
out
rcrb
subb
jg
outsb
push
pop
and
xor
add
adc
loop
repnz
out
rcrb
subb
mov
inc
outsl
and
std
xlat
in
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aas
or
in
aam
inc
mov
sbb
test
push
mov
out
fists
add
hlt
das
in
aam
les
outsl
sub
dec
lock
push
popl
out
and
push
iret
add
data16
in
jl
jg
outsl
cwtl
pop
jp
pushf
mov
or
dec
stos
pusha
mov
mov
mov
in
push
mov
ficoms
xchg
dec
add
enter
push
lret
pop
ja
movsb
cmc
inc
mov
js
mov
pop
mov
push
sub
cmp
push
add
inc
mov
daa
loope
into
jp
hlt
out
pushf
aam
adc
mov
scas
adc
and
aam
adc
xor
hlt
jne
pop
mov
int3
fisubrl
jnp
mov
xor
popa
in
add
cli
push
shl
or
xchg
inc
es
outsl
loope
pushf
or
xchg
repnz
lods
adc
popl
rcrb
lds
rcl
dec
js
je
or
stos
cmpsl
pop
scas
xor
dec
xor
das
adc
push
bswap
jg
outsl
movsb
pop
dec
dec
add
repnz
mov
lcall
out
adc
push
cmpsb
pop
in
xchg
ljmpw
cmp
dec
loope
xor
and
pop
out
push
mov
mov
movsl
jp
arpl
jg
sub
ficoml
xor
subl
mov
arpl
pop
xchg
dec
test
push
popl
out
and
adc
add
hlt
das
in
aam
les
outsl
movsb
pop
xchg
dec
test
push
popl
out
and
adc
add
hlt
or
xorb
subl
sahf
or
xor
xor
add
cmp
and
imul
add
xchg
mov
pop
and
xchg
int3
push
add
jmp
inc
sub
sti
paddsw
ljmp
shl
filds
in
arpl
fsubr
and
fimull
cmpsl
sahf
imul
std
imul
insb
popa
mov
aam
mov
pop
clc
sti
faddp
pop
scas
sbb
je
xchg
test
das
mov
bound
xchg
jmp
jno
fsubrs
adcl
lret
mov
xor
and
ss
mov
add
sahf
cwtl
or
scas
cld
pop
push
push
add
ss
mov
cmp
and
xchg
in
pop
setne
nop
mov
das
mov
idivl
daa
clc
push
ret
loopne
and
rcrb
jne
xchg
rorl
cmp
jp
outsl
out
mov
jno
mov
aad
das
xchg
loopne
out
ror
insb
adc
inc
stos
mov
stos
insl
inc
shrl
mov
leave
sbb
inc
dec
or
adc
stos
repz
push
in
push
cmp
int3
repnz
lahf
cli
pop
xor
clc
xor
clc
sbb
dec
adc
es
dec
pop
stos
in
pop
sub
sub
pop
popa
cmpsl
sbb
aaa
aam
push
das
ss
ss
mov
xchg
fdivr
test
lods
cld
mov
test
out
jne
lock
add
mov
pop
inc
xchg
pop
xor
cwtl
xor
rorb
dec
aad
mov
das
sbb
sub
mov
in
xor
enter
cli
lret
das
pop
pushl
mov
xchg
leave
es
fmuls
and
xchg
fstps
sarb
jno
out
mov
push
dec
sub
push
icebp
jge
push
stos
mov
add
aas
inc
out
jo
popa
idivl
mov
cmpsl
ret
inc
sbb
loop
loopne
inc
subl
push
and
cltd
push
lods
mov
xor
test
test
fistpll
mov
dec
mov
ja
cmc
iret
aam
inc
ret
push
fdivr
sahf
push
idivb
jo
jecxz
mov
roll
lock
int3
inc
out
cltd
cmpsl
push
es
incb
negl
and
int3
into
lahf
rol
xchg
mov
cmp
movsl
and
mov
lcall
jno
mov
xor
in
lcall
outsl
mov
dec
sub
push
mov
mov
sub
xchg
sbb
push
adc
clc
cli
loop
dec
mov
adc
icebp
and
lret
mov
sbb
movsl
push
ljmp
inc
fs
lret
daa
leave
and
call
xchg
add
push
test
mov
pop
pusha
and
jo
xchg
stos
or
sbb
aam
mov
icebp
ss
ljmp
push
dec
pushf
pop
cli
lea
cmp
sbb
mov
sbb
push
dec
xchg
or
push
sub
pushf
sub
cmpsl
test
push
cmp
out
jne
add
xchg
movsb
adcb
rcrl
adc
les
sti
cmpsl
pushf
iret
fstpl
fwait
js
dec
add
jg
scas
jp
xchg
repnz
cmc
popa
mov
dec
test
push
ror
push
sbb
bound
inc
out
mul
push
es
jmp
rcl
cmp
xchg
ss
fsubs
adc
scas
mov
dec
orl
cld
adc
dec
add
xor
mov
pop
data16
mov
or
outsl
lret
mov
lret
xchg
fistpl
outsl
ret
cli
fnstsw
lods
add
sbb
cmp
pop
and
lcall
dec
loopne
in
mov
repz
jns
push
movsb
mov
adc
outsb
jmp
adc
mov
sbb
loop
push
push
insb
mov
aaa
rorb
inc
jg
stos
and
dec
xchg
lahf
sub
into
cmp
pop
push
inc
shll
outsb
push
mov
lods
or
xchg
je
sbb
sub
nop
or
cmp
push
lahf
cmp
stc
pop
jbe
test
mov
aaa
fsub
imul
inc
nop
out
out
stc
sbb
adc
adcl
push
incb
cltd
sbbb
mov
mov
nop
push
sarl
add
popa
mov
pop
call
dec
je
mov
lcall
pop
test
or
mov
pop
dec
and
fstps
ret
andb
in
in
push
fnstsw
dec
sti
ja
ds
scas
rcrb
mov
sbb
lock
mov
sub
pop
xor
sub
inc
jecxz,pt
icebp
cs
mov
mov
mov
pusha
into
fmulp
jno
push
and
inc
insb
popa
adc
pop
inc
xchg
adc
add
lds
push
cmp
shll
push
out
hlt
push
adc
sbb
ds
xchg
mov
inc
cmp
jnp
pop
sahf
dec
inc
or
sbb
inc
ja
push
arpl
xchg
sbb
jle
fs
jmp
dec
mov
jae
push
aaa
sub
jno
testl
sarb
hlt
xor
adc
xchg
or
xor
movsl
mov
sub
mov
outsb
inc
and
push
mov
lods
out
and
xchg
cltd
shll
jmp
ja
dec
push
xor
into
lret
cmp
jmp
and
push
sbb
inc
or
mov
jecxz
sar
mov
jmp
nop
fildll
fldl
inc
xor
cmp
ret
stos
jbe
mov
cmp
adc
loope
aam
fsubr
sub
sub
in
dec
int
add
cli
add
cmpsl
add
fcmovb
imul
sub
out
mov
lods
xchg
sbb
jb
out
mov
push
cmp
pop
repz
or
jne
ror
xor
hlt
dec
iret
inc
add
sub
cld
sub
xchg
add
inc
xchg
xor
loope
aam
lock
add
dec
sti
shll
push
stos
mov
arpl
or
pop
dec
sbb
mov
outsb
sti
xchg
push
mov
clc
pusha
es
push
stc
insl
popa
xchg
aaa
pop
mov
ljmp
add
add
out
mov
xor
push
inc
ja
mov
jecxz
cltd
cli
sub
mov
mov
mov
rorb
xchg
scas
das
loope
in
lods
sbb
into
mov
popa
mov
push
stc
fs
lea
test
adc
xor
fstl
dec
push
fstps
xor
sbb
ds
cli
xchg
pop
push
ja
setne
movsb
loop
enter
addr16
jmp
outsb
inc
add
fucomp
nop
lahf
shlb
cwtl
mov
push
inc
and
pop
loopne
cmp
adc
scas
stc
xorl
pop
mov
stos
in
mov
dec
push
in
and
xlat
sub
push
rcr
xchg
jnp
addl
dec
ja
lods
xchg
cli
cltd
je
push
xchg
xor
adc
mov
call
cwtl
movsb
mov
push
test
mov
xchg
call
mull
mov
out
lahf
repz
mov
jne
lods
jo
dec
adc
std
icebp
cmpl
push
push
ss
xor
or
push
mov
sub
daa
or
mov
xchg
pop
loop
dec
stc
ds
dec
sbb
rolb
sahf
ljmp
sub
divl
hlt
adc
pushw
sti
xchg
out
into
mov
in
dec
adc
xor
call
lea
sti
xlat
setne
jae
pop
lret
aam
jns
push
mov
imul
test
repz
jge
addr16
ss
add
jb
sub
xor
or
sbb
sbb
push
int3
imul
dec
xor
adc
mov
add
mov
inc
ja
inc
into
pop
fs
mov
stos
jae
ret
into
int
sbb
enter
leave
dec
cmp
movsl
aas
add
orl
xchg
sbb
dec
out
gs
imul
push
xor
mov
mov
dec
loopne
adc
adc
int
dec
or
inc
in
xor
cmp
sbb
dec
and
cltd
clc
mov
inc
mov
mov
sbb
call
das
in
iret
pop
and
int3
fdivrp
and
addb
cli
rol
jae
and
ret
sbb
xor
pop
cwtl
or
push
xor
lret
sub
data16
fimuls
push
adc
dec
mov
and
push
cmpsb
jno
mul
dec
fmuls
add
scas
test
cmc
cmpsl
sub
gs
mov
pop
notb
repz
jp,pt
fmul
das
pop
mov
subl
push
sub
sarl
pop
mov
push
push
xlat
icebp
cmpsl
push
push
or
cmp
and
inc
dec
inc
mov
repz
ret
loope
mov
cmc
mov
ret
fstpl
cmp
mov
es
lret
cmp
sub
test
inc
push
push
repnz
dec
xlat
loop
divl
push
fldcw
push
jle
add
push
pushf
add
pop
sahf
or
lret
jo
cs
dec
mov
or
mov
xor
adc
push
add
mov
push
popf
mov
out
filds
xchg
cld
mov
add
add
data16
pushf
xchg
icebp
movsb
jb
and
cwtl
and
inc
popf
xchg
out
lods
dec
movsl
shrl
es
bound
adc
cs
scas
jg
pop
dec
enter
inc
inc
pop
sbb
cltd
insb
jb
mov
lcall
test
sub
out
mov
lahf
jne
lock
out
mov
sbb
outsl
in
adc
out
and
adc
lea
jne
jno
adc
pop
js
test
mov
cli
sub
cmp
sbb
lods
mov
jle
les
sbb
imul
lea
lea
mov
fnstenv
dec
outsb
push
addr16
mov
mov
lcall
xor
in
jae
dec
icebp
or
cmp
sahf
stc
pop
mov
es
or
ljmp
lock
scas
movsl
sti
fidivrs
fdivrs
dec
bound
mov
aaa
xorl
hlt
jb
mov
sbb
sti
loopne
xchg
jbe,pn
push
pop
movsl
push
and
jge
push
popa
out
xchg
adc
pushf
mov
push
mov
pop
inc
jecxz
jmp
inc
or
push
and
add
adc
xor
aas
mov
nop
aas
xchg
clc
xor
int
push
xchg
push
fld
int
popl
xchg
pusha
out
add
test
sub
gs
add
or
pop
xor
xchg
mov
ljmp
adc
jecxz
cmpsb
popa
fistpl
imul
add
insl
mov
push
pop
jnp
aad
dec
add
and
dec
mov
aad
rcll
stos
cmp
int
push
in
mov
jb
pop
imul
lock
rcll
xchg
dec
and
pop
mov
fucom
std
incl
dec
pop
pop
int3
mov
jecxz
std
inc
sub
sub
cmp
pop
js
sub
sbb
jno
cmc
xchg
in
pushf
mov
xchg
dec
inc
lcall
cmpl
xchg
mov
inc
and
imul
add
adc
jle
je
jns
loop
mov
outsl
push
cld
aam
mov
adc
enter
aam
pop
xor
aam
and
adc
cmc
shl
dec
inc
dec
insl
pop
sub
adc
aas
mov
jmp
cmpsl
adc
cmpsl
fwait
mov
ljmp
mov
mov
in
popa
and
enter
sahf
xor
lret
iret
xchg
xor
icebp
dec
xchg
arpl
scas
in
movsl
cmp
iret
lcall
jns
movsl
push
pop
sub
inc
cmc
rclb
xchg
out
dec
popf
dec
jno
jle
cmpsl
imul
pop
sbb
xchg
out
lds
lret
mov
dec
inc
out
pop
push
mov
jl
jg
jecxz
xor
xchg
ficoml
xchg
ljmp
popf
xor
scas
mov
cmpsl
aaa
pusha
sti
fnsave
icebp
mov
pop
pop
arpl
mov
sbb
push
test
rorl
decb
ljmp
lods
rcl
xchg
add
dec
jge
cmp
hlt
push
jbe
mov
push
pop
mov
and
sbb
ja
das
shrb
pop
inc
fldt
mov
mov
orb
lret
jle
add
aas
repz
ds
push
adc
jbe
fisttps
movsl
mov
sub
mulb
mov
fwait
xor
inc
popf
push
or
inc
jns
pop
jb
pop
movsb
jmp
sarb
out
outsb
xchg
nop
dec
dec
fisubs
or
ljmp
sbb
inc
inc
jae
movsl
mov
inc
xlat
inc
lods
add
ror
repnz
popa
add
add
ds
push
jle
mov
mov
sbb
ret
ret
jecxz
test
inc
sub
aam
int3
adcb
addr16
pop
jo
ffreep
shr
mov
push
adc
sub
cmp
test
mov
xor
in
repz
mov
mov
xchg
imul
xchg
dec
lahf
push
mov
test
sbb
inc
cli
and
or
mov
cmc
xchg
je
xor
xorl
pop
inc
sbb
xor
jmpw
cmp
imul
cmp
test
lret
stos
fldenv
mov
pop
sbb
call
mov
inc
jns
dec
loop
dec
addl
inc
cltd
push
sub
mov
sub
or
lahf
add
push
dec
and
in
jecxz
dec
imul
cmpb
mov
insb
rcl
push
push
xchg
lods
aad
movsb
aas
ljmp
clc
xchg
fstpt
lods
inc
mov
xor
dec
leave
dec
jg
mov
xorl
ja
mov
repnz
mov
xchg
jle
les
mov
cmp
cmc
jbe
mov
mov
pop
sarl
fwait
xchg
into
xorb
jno
push
cmp
ret
cmc
bound
cs
jmp
into
jle
les
insl
jae
in
add
arpl
xlat
sbb
pop
dec
loop
movsb
mov
xor
sbb
es
into
andl
in
mov
aad
or
std
movsb
xchg
push
sub
cmp
mov
lret
imul
add
imul
gs
pop
cld
out
mov
dec
and
and
and
jmp
pop
pusha
cli
sub
and
mov
sbb
filds
mov
ret
xor
hlt
jl
mov
push
movsb
mov
adc
inc
cmp
add
xchg
and
outsl
scas
out
pop
jne
repz
nop
mov
lea
popf
es
stc
call
loop
fucomi
test
xchg
imul
adcb
pop
sbb
sub
sub
icebp
in
push
lcall
push
mov
cwtl
add
mov
test
repz
mov
aam
sbb
ss
scas
subb
nop
movsl
adc
mov
xor
cmp
xor
pop
sbb
or
xchg
adc
push
mov
push
dec
sub
mov
xchg
in
jno
jmp
mov
into
inc
sub
xor
mov
shrb
dec
aam
sbb
mov
outsb
pop
sbb
cmp
cmp
or
mov
mov
push
aad
push
pushf
mov
xor
xor
lcall
mov
mov
sub
or
xlat
cmp
cld
shrb
pop
outsb
push
and
sahf
icebp
lods
mov
into
inc
ficomps
sub
dec
sbb
pushf
jecxz
pop
add
int
mov
mov
push
imul
sub
fsub
and
pop
pushf
mov
cmp
mov
rclb
aas
stos
shlb
push
repnz
and
fisubs
mov
cmpsb
mov
aas
mov
push
mov
add
scas
mov
test
popw
rol
jecxz
pop
pusha
xchg
inc
adc
sub
dec
dec
sub
xor
insb
sbb
jo
or
mov
iret
adc
in
cmp
popa
mov
mov
in
lock
mov
xor
push
addr16
mov
fwait
sbb
add
inc
mov
xor
in
add
ja
stos
cmp
rorl
test
add
je
pop
push
ds
addr16
inc
adcl
ljmp
push
int3
repz
mov
pop
fdivrs
or
mov
arpl
xor
push
mov
xor
inc
andl
pop
outsl
test
and
adc
sub
jbe
mov
ljmp
jno
rcll
push
sarb
scas
js
xchg
popa
loope
out
sub
mov
mov
loope
aad
dec
or
out
in
mov
dec
jnp
sub
xchg
mov
das
mov
lret
cmp
mov
pop
ds
push
lret
insl
and
jmp
mov
or
xchg
push
arpl
push
cmp
mov
addr16
jno
mov
xor
pop
inc
xor
cltd
sbbl
xchg
pusha
rcrl
mov
popa
add
mov
sbb
dec
add
jecxz
mov
fcmovb
test
lahf
cmpsl
cmc
fldt
dec
xor
in
mov
mov
sub
adc
push
idivb
mov
in
jne
jle
out
mov
xor
xor
fcomps
shl
xchg
movsl
ficoml
xlat
movl
fidivrl
cmp
xlat
mov
sub
aam
fwait
add
les
subb
hlt
outsb
xchg
test
test
jo
lods
pop
daa
pushf
inc
popf
adc
jle
lea
aam
mov
sub
or
inc
sub
je
pop
jge
nop
push
mov
mov
cltd
pusha
sub
faddl
pusha
insl
outsl
or
jae
mov
fucomp
xchg
iret
cmc
pop
lods
aad
fcoms
fwait
in
mov
sti
cmpsl
insb
and
jnp
cli
push
jo
jae
pop
lret
enter
or
arpl
mov
sub
lods
in
adc
jle
cs
xor
adc
outsl
out
movl
mov
test
lret
or
dec
ljmp
imul
test
jl
lods
and
xchg
test
hlt
aaa
xchg
andl
clc
jmp
ja
scas
scas
enter
out
out
enter
pop
mov
xor
pop
ds
cmp
icebp
push
add
stos
shll
outsl
test
outsb
adc
inc
mov
pop
icebp
push
sbbl
xchg
pop
jmp
jae
cmp
int
pop
push
mov
outsb
or
fcom
cmpsl
jne
sub
out
mov
push
test
xchg
test
in
mov
pop
pushf
fbld
and
pop
mov
jo
movsb
mov
sbb
add
lret
fstpl
insb
stos
xchg
js
sub
scas
std
xchg
fcomi
shll
stc
aaa
out
test
add
dec
ficompl
mov
filds
pop
mov
cmp
or
lds
jmp
ss
addr16
ja
jmp
into
jb
insl
jmp
ret
addb
sahf
inc
inc
mov
sbb
iret
mov
fdivrl
push
ror
pop
lret
clc
jp
repnz
sbb
js
scas
jae
mov
dec
clc
or
fistps
xchg
pop
das
dec
test
push
flds
cmpb
add
rorb
lret
dec
pop
xchg
sub
jns
out
insl
aam
jle
or
inc
sub
adc
jle
mov
imul
outsl
push
fld
pop
jae
outsb
or
push
stos
int
in
sbb
loope
popf
popf
jno
es
jmp
jle
jo
mov
and
je
pop
xchg
test
fbld
push
hlt
jp
insl
mov
add
fld
movsl
adc
add
push
inc
negb
call
cmc
xlat
sub
or
pop
mov
mov
repnz
pusha
xchg
and
adc
ret
push
lods
mov
xor
xor
mov
mov
sub
je
mov
pop
cmp
pop
lock
xchg
in
mov
outsl
movsb
pop
xchg
dec
test
push
popl
out
and
adc
add
hlt
das
in
aam
les
outsl
movsb
pop
xchg
dec
test
push
popl
out
and
adc
add
hlt
scas
lods
lahf
lods
pinsrw
outsl
or
xchg
iret
test
push
popl
out
and
xor
add
hlt
das
in
aam
lds
outsl
movsb
pop
adc
test
push
xor
jmp
sti
xchg
bound
test
xlat
mov
push
jp
movntps
shrl
push
cmp
ret
ljmp
mov
sbb
jle
inc
jp
or
jle
sub
cmp
adc
cmp
test
sahf
shl
xchg
pop
or
sbb
jge
pop
pop
jl
jp
stos
cli
mov
add
mov
andl
pop
xor
or
in
lea
fidivrl
ds
into
xchg
cmpsl
adcb
mov
test
cmpsl
ljmp
inc
fidivrs
lds
outsl
movsl
outsb
xchg
dec
test
lret
mov
mov
sahf
jp
test
cmp
mov
icebp
lds
cmp
add
popf
sbb
mov
sub
inc
sbb
jp
dec
xchg
dec
adc
add
loope
dec
das
incb
mov
mov
xor
inc
sbb
loop
je
fcmovu
ljmp
mov
mov
dec
bound
add
sub
pop
sub
out
lods
xchg
scas
mov
out
sarl
sub
sbb
pop
jp
ja
test
mov
jecxz
sti
in
out
lods
jb
sbb
nopl
outsb
jns
jg
pop
imul
popf
jmp
mov
loop
mov
dec
outsb
pop
jle
dec
jp
or
sbb
sub
cmp
lret
ljmp
mov
dec
outsb
pop
jle
dec
jp
or
sbb
sub
cmp
lret
test
mov
xor
leave
cmc
mov
daa
fisubs
dec
fbld
test
mov
out
xor
fisttps
lods
add
cmp
jmp
sbb
shr
jle
mov
movsb
mov
mov
jge
fstl
sbb
loop
jle
stos
fstl
mov
mov
mov
and
insl
das
pop
xchg
dec
iret
mov
je
arpl
test
das
cld
outsb
sbb
xorl
loope
mov
sub
mov
jne
cmp
sbb
leave
popf
mov
pop
sub
sbb
por
loope
mov
sub
popf
les
pop
ja
mov
push
add
jmp
or
sti
fidivl
mov
loope
insb
jo
pop
mov
mov
clc
pop
jmp
dec
jp
inc
outsb
out
jne
sub
push
cmp
cld
mov
xchg
leave
xor
loope
aaa
fdivr
addr16
filds
xchg
enter
push
adc
dec
leave
lods
add
dec
ljmp
fwait
dec
ja
pushf
test
sbb
sahf
push
iret
mov
loop
mov
cmp
xor
mulb
pop
sbb
mov
aad
sub
lcall
out
pop
sahf
and
insb
add
outsl
mov
lock
xchg
push
inc
movsl
push
ret
in
scas
push
and
pop
mov
jo
jmp
in
sub
pusha
shl
cmpsb
mov
aaa
insb
repnz
push
mov
enter
ja
adc
fisttps
add
and
and
outsb
test
cltd
or
pop
cld
cmp
dec
aaa
bound
je
cmp
in
mov
out
add
dec
mov
cmc
lds
insb
mov
sbb
or
in
sub
mov
pop
call
jne
mov
out
sbb
xchg
daa
push
mov
add
sbb
popa
ja
inc
jp
pop
sbb
inc
ret
in
insl
dec
popa
mov
shlb
enter
cli
outsl
pop
mov
mov
gs
arpl
dec
xchg
stos
mov
pop
lret
cmpsb
pusha
stos
push
push
mul
test
test
push
idivb
mov
pop
pop
add
loopne
adc
lret
dec
jp,pt
adc
js
add
and
out
imul
mov
leave
adc
clc
ja
test
and
fcmovnbe
mov
scas
or
xor
sbb
push
lret
or
int
cli
jmp
xchg
inc
iret
andl
push
test
or
pop
pusha
lods
loopne
ret
outsb
dec
jge
sub
mov
aam
in
dec
jbe
or
fwait
add
rolw
cmc
and
rcrl
test
mov
lea
mov
ret
addr16
mov
sbb
mov
xor
adc
inc
adc
mov
sarl
js
cmp
push
pop
push
sbb
pop
icebp
icebp
fcomps
jg
xchg
lods
stos
rcll
cmp
mov
fsubs
and
mov
mov
push
scas
sub
xchg
ret
inc
jb
imul
sub
adcb
jmp
dec
outsl
mov
loop
ret
stos
xchg
scas
jl
arpl
mov
notb
out
fcomps
lcall
les
push
jp
cmp
dec
call
movsl
inc
add
scas
push
mov
gs
mov
jg
les
ljmp
mov
loop
and
les
inc
in
xchg
in
push
addb
in
fwait
sub
fs
pop
jp
xchg
and
mov
mov
je
sub
es
into
mov
leave
push
sbbl
fistps
popf
mov
dec
shll
sub
jbe
pop
adc
shll
adc
mov
repnz
bound
dec
enter
lahf
jl
jnp
xor
test
insb
pop
jne
flds
outsl
sti
out
test
je
and
mov
pop
int
or
rcll
rcll
stc
fs
push
pop
fcomi
dec
cli
cs
and
xchg
cli
lcall
popa
lds
or
pop
into
sbb
cmp
dec
jmp
xor
mov
gs
das
out
sbb
push
sahf
xor
aad
inc
call
or
bound
sub
xlat
loopne
pop
mov
out
stc
push
mov
sbb
cld
and
inc
xor
lcall
test
inc
addr16
and
stos
adc
ret
arpl
pushf
mov
lea
leave
inc
cmp
pop
mov
jmp
jnp
dec
icebp
push
xchg
int
iret
inc
lds
pop
in
test
aad
aam
mov
jecxz
popf
inc
bound
loop
mov
push
sub
add
lret
insl
and
mov
pop
add
lds
addr16
lds
xor
ljmp
fcomip
mov
sbb
daa
cld
ja
xor
das
popa
mov
bound
jmp
in
push
cmpsb
inc
add
mov
lcall
flds
cmp
fidivs
je
fldcw
jg
ret
leave
push
cvttps2pi
pop
mov
add
mov
fistps
rol
fstps
mov
xor
cmp
into
out
jnp
sbb
aas
push
jl
fs
xor
xor
lahf
jns
mov
fdiv
imul
pop
ds
fcomip
test
aad
cmp
int
stos
lods
cmp
and
cmc
testb
inc
sbb
ss
fucomp
push
adc
repz
dec
arpl
sbb
test
inc
je
test
or
ja
in
fcoms
lret
push
jg
call
aam
ljmp
ds
or
mov
bsf
inc
inc
push
nop
ljmp
add
ret
daa
aad
ds
dec
pop
mov
mov
fidivrl
enter
je
sub
xchg
aad
lock
jnp
out
xor
pop
add
inc
fcomip
mov
inc
xor
outsl
dec
outsb
fimuls
mov
push
or
lods
ss
lock
sbb
and
test
leave
std
push
and
pop
pop
popa
add
cmpb
nop
iret
int
push
testb
sbbb
arpl
pop
inc
adc
clc
add
mov
cmp
and
test
shrl
cmp
and
push
jo
sbb
imul
or
inc
sbb
or
dec
jge,pn
sbb
lds
mov
fdivrl
rcrl
jecxz
movsl
pushf
jne
iret
sbb
sbb
std
repnz
sbb
pusha
insb
and
xchg
add
mov
sub
sbb
cmp
neg
rcl
xchg
shll
insw
pop
mov
jg
xchg
pop
in
leave
flds
lods
iret
mov
cwtl
cmpsl
inc
xchg
dec
inc
aad
fnclex
pop
scas
mov
call
stos
dec
jo
jo
inc
mov
sbb
pop
mov
xlat
sub
sbb
sbbb
sbb
pop
dec
idiv
pusha
sbbb
sti
aam
and
pop
inc
add
cmp
push
cmp
pop
out
and
xor
repnz
cmp
mov
out
cmp
sub
sub
pminsw
inc
add
cmp
cld
cmp
mov
dec
movsb
pushf
scas
ret
pop
popa
stc
stc
cmp
pop
cmpsb
sub
xchg
and
push
rcl
sbb
call
mov
mov
je
dec
in
stc
cmp
pop
jb
sarl
lret
mov
nop
jb
adc
mov
and
cmp
mov
dec
pop
es
mov
cmp
cmp
mov
in
cmp
xchg
mov
aad
cld
out
sub
inc
xor
mov
xchg
jne
imul
mov
push
dec
rcrb
rorl
dec
in
shll
subl
jmp
push
js
inc
roll
push
xchg
insl
je
mov
shrl
das
icebp
or
divb
mov
mov
jbe
call
jge
inc
dec
xor
stos
mov
jnp
xchg
inc
pop
cs
sbb
or
mov
xor
ret
xchg
xchg
jnp
pop
push
fptan
pop
xor
jp
clc
mov
daa
mov
adc
mov
push
sub
in
pop
in
mov
pop
leave
dec
sbb
adc
icebp
mov
leave
push
jle
pop
out
jne,pt
test
dec
out
xchg
jno
cwtl
jg
cmp
rorb
gs
dec
dec
push
adc
adc
push
hlt
mov
sbb
cwtl
repz
inc
xchg
add
mov
mov
sub
adc
cmp
xor
dec
ja
jg
into
jb
shlb
repz
decl
add
jle
xchg
incb
add
sub
sbb
mov
xor
mov
lret
les
lret
pop
call
lahf
sbb
lods
jmp
and
sub
dec
sub
out
loopne
push
cmpsb
and
jecxz
mov
adc
jno
aas
stos
sahf
ret
testl
vmread
test
out
sbb
dec
mov
mov
inc
adc
fs
jae
into
int
shlb
pop
outsb
push
stos
test
loopne
pop
mov
lcall
jp
xor
jae
lcall
mov
add
and
lahf
fwait
pop
in
cltd
mov
dec
pop
out
mov
lcall
pushf
xchg
sbb
add
adc
popa
shlb
int
je
in
in
add
fwait
je
pop
mov
stc
pop
xlat
cld
shlb
inc
sbb
xor
sub
aas
and
mov
and
dec
dec
dec
xor
into
cmp
sbb
scas
and
push
add
cmp
inc
jo
insl
ror
idivl
mov
fidivrl
push
dec
js
in
enter
xchg
cmp
std
jae
imul
mov
add
test
pop
arpl
dec
shll
xor
dec
lods
movsl
leave
jp
idiv
sbbl
cmp
adc
push
je
inc
cmpsl
rcl
push
or
cmp
mov
push
jno
das
dec
js
sbb
xchg
mov
sti
push
fs
push
push
xchg
imul
or
ja
add
push
push
pushf
inc
adc
loope
ljmp
cmp
jge
jl
sub
jne
mov
dec
jge
pusha
pop
stc
mov
cld
jo
pusha
inc
stc
call
mov
cmp
out
add
test
lea
out
jge
xchg
adc
fwait
mov
outsl
fwait
xchg
cltd
mov
rorl
xor
rclb
jnp
xor
pop
iret
jp
sahf
mov
sub
loope
push
adc
or
mov
jnp
mov
push
hlt
inc
push
std
cli
xor
ds
pop
lds
inc
in
cmove
inc
arpl
pop
aas
in
pop
scas
inc
push
mov
sahf
outsl
adc
inc
cmpb
loope
and
adc
cltd
mov
aam
adc
hlt
pop
sbbl
sbb
loopne
mov
int
sbb
nop
ljmp
pop
sbb
in
xor
xchg
jg
popa
imul
add
call
mov
inc
inc
adc
loopne,pn
jo
fcmovnbe
pusha
aas
sub
mov
xchg
jno
sarb
pop
sub
ss
or
adc
in
mov
jl
mov
movsb
test
push
enter
cmc
sbb
imul
jo
das
pop
fidivl
push
ficoms
enter
mov
jns
jle
out
and
pop
jp
pop
jae
cs
rcrl
in
add
int
cld
sbb
cmp
jg
shl
sub
cld
xor
pop
sbb
or
jecxz
popa
dec
outsb
jae
in
sub
insl
xor
cmp
cld
sub
sbb
mov
lds
addb
lret
in
daa
xorl
xor
loop
dec
sub
mov
mov
shrb
mov
jno
cmpsb
dec
push
dec
daa
or
mov
mov
mov
scas
fidivl
in
leave
gs
mov
cmp
or
int3
ret
aaa
ds
int3
push
push
pushf
sub
inc
in
jns
aad
jbe
xchg
dec
jge
cmp
jmp
repz
push
jb
jle
ret
fs
ss
xchg
or
add
pop
xor
cmp
nop
mov
pop
cld
push
sub
ja
stos
rclb
dec
or
mov
mov
xlat
daa
or
negb
aaa
mov
xchg
sti
stc
cmpsb
push
dec
movsb
loope
or
lcall
dec
add
fcmovu
daa
jp
addr16
repnz
outsb
push
pop
sbb
pop
stc
xchg
cs
mov
pop
adc
int3
mov
icebp
int
or
mov
inc
mov
adc
jb
pop
outsb
dec
ja
xchg
or
adc
fnsave
aaa
xchg
cmp
mov
sbb
das
jne
fcmovnu
das
pop
fsubs
insb
push
fwait
cmp
xor
int3
mov
xorb
jl
and
arpl
js
cmc
xchg
mov
pusha
addr16
inc
pop
outsl
testb
sti
hlt
cli
ds
das
push
sti
cmpsl
push
popa
fisttpl
les
subl
mov
jge
lea
adc
lock
lea
jp
pusha
roll
daa
addr16
and
cmpsb
sbb
das
mov
pop
ds
mov
adc
sub
outsb
ret
aam
sarl
ss
inc
mov
sarb
pop
hlt
bnd
lds
add
push
cmpsb
sub
shl
mov
push
jmp
mov
xchg
mov
mov
sbb
push
in
sbb
repz
int3
dec
dec
icebp
push
sahf
shll
cmp
inc
dec
or
xor
rol
push
and
xor
rcll
pop
jne
repz
outsl
cmp
rcll
adc
sub
or
sub
push
shll
mov
pusha
jb
in
lea
jecxz
sbb
jno
inc
cmp
dec
mov
pop
push
cmp
or
ret
aaa
push
arpl
fldcw
call
repz
inc
inc
jl
stos
cmc
shl
test
les
add
inc
loop
xchg
bound
imul
mov
stos
push
enter
sbb
nop
cmpsl
cmp
push
iret
icebp
jl
in
mov
loope
xchg
out
and
xchg
and
push
mov
pop
adc
pop
repz
push
add
push
mov
daa
xchg
and
sbbl
pop
and
xchg
sub
adc
pushf
sti
or
arpl
aaa
sbb
pop
fildl
mov
lods
ror
xchg
inc
das
in
add
lds
test
pop
jns
leave
in
mov
arpl
inc
xor
fs
repz
xchg
push
or
cwtl
sub
movsl
pop
xchg
outsb
ljmp
sub
test
xor
mov
xorl
ret
sub
cmp
add
popa
push
push
inc
xchg
clc
andl
inc
push
dec
pop
mov
adc
out
jl
mov
cmp
shrb
mov
insb
mov
mov
les
lret
push
fcoml
sub
xchg
mov
or
inc
xchg
xchg
pop
dec
xchg
jno
push
iret
out
sub
insl
mov
push
push
repz
jne
mov
out
shll
repz
pusha
in
sahf
dec
pushf
shll
sbb
xchg
inc
mov
ret
sub
cmpsb
fninit
mov
gs
adc
adc
lahf
mov
push
out
sti
enter
ret
jle
rcrb
lods
ret
stc
adc
mov
setbe
fadd
sbb
adc
inc
push
jno
xchg
push
f2xm1
je
popf
mov
mov
mov
pusha
js
sbb
sub
jbe
dec
add
mov
std
je
int3
mov
out
sbb
jg
cmc
insb
cs
mov
jmp
push
inc
rcr
out
in
imul
or
jg
xor
rep
add
xorl
arpl
jns
andb
fs
addr16
fldenv
pop
jg
dec
ret
mov
pop
lcall
mov
jne
add
out
mov
nop
negb
aad
and
jecxz
loop
pop
loope
lcall
into
xchg
aaa
mov
iret
add
cmp
les
inc
pop
mov
aad
insb
lods
add
mov
pop
push
jle
sub
mov
sarl
push
out
xor
sbb
in
dec
pushf
dec
sub
push
scas
push
cld
sbb
add
loopne
or
lods
out
test
fcmovb
fmuls
icebp
or
mov
cmp
fwait
mov
test
xorb
dec
fwait
inc
nop
stos
in
sahf
lret
add
ret
jmp
sbb
mov
mov
and
mov
cmp
inc
adc
mov
test
mov
clc
pop
imul
imul
cmpsb
jno
add
in
ret
popa
mov
push
fwait
push
int
cmpsl
data16
jbe
lea
test
pop
lea
push
mov
pop
and
mov
sbb
ret
cmpsb
lret
push
loop
jp
call
fnstcw
inc
scas
inc
lret
inc
jl
testb
mov
xchg
mov
rolb
jge
es
dec
dec
lahf
mov
lcall
rcrb
add
outsb
xchg
movsl
arpl
aam
imul
cmp
stos
sarl
ss
rol
xor
aas
lock
addr16
lret
mov
or
mov
jg
arpl
mov
test
adc
movsl
push
jg
jg
dec
sahf
xchg
and
cld
in
xchg
lretw
mov
sub
mov
jp
fidivs
stc
sbbl
xchg
andb
jmp
iret
lea
outsl
add
lods
out
xor
mov
xchg
fnsave
shrb
lret
sbb
pop
lods
cwtl
jecxz
or
mov
add
pop
jl
lods
je
mov
cmpsb
loopne
mov
xlat
shrb
and
in
in
push
jecxz
fwait
jns
aas
pop
out
push
lcall
mov
hlt
mov
jle
inc
jnp
scas
xchg
lcall
enter
fidivrs
sarl
pop
aas
arpl
cld
dec
loopne
loopew
or
fidivs
xchg
mov
iret
push
jp
mov
sahf
es
adc
aaa
dec
adc
xchg
sbb
push
loopne
mov
pop
xchg
mov
in
jne
iret
xlat
add
xor
pop
xchg
xlat
jae
mov
cs
mov
roll
xor
in
xchg
aam
xchg
cmp
rcll
setno
int3
das
xor
xlat
imul
xchg
jae
filds
stc
movsb
ss
ljmp
inc
mov
fbstp
in
in
dec
jecxz
leave
mov
sbb
decl
jns
pushf
fidivl
fbstp
jb
daa
movsb
daa
jge
pop
popf
scas
mov
and
cmp
shrb
xchg
push
xchg
jae
les
xor
add
pop
dec
adc
addb
outsl
jnp
push
int
sub
mov
mov
pop
push
shlb
sbb
fcmovu
mov
push
test
xchg
cmp
and
cmp
cltd
xorl
sbb
mov
xchg
push
lea
cmp
call
ficoms
pop
inc
jge
cmc
aam
out
mov
dec
cmpsl
movsl
mov
pop
into
jnp
pop
cmpsb
sub
inc
mov
add
dec
mov
sub
push
shr
jnp
mov
push
or
mull
push
leave
call
inc
push
adc
loopne
cmp
xchg
bound
repnz
xchg
adc
ret
push
adc
js
dec
push
sbb
or
sub
repz
inc
stos
xchg
jns
pop
sahf
cmpl
dec
adc
outsb
fcmove
mov
and
add
out
push
rcr
jns
mov
mov
sub
cmp
cmp
jg
pusha
mov
gs
push
dec
cwtl
push
ljmp
xchg
stos
fists
shlb
jle
xor
jmp
xor
jns,pt
xor
jbe
sbb
shll
fsubrp
sub
jl
fnstcw
and
inc
ret
hlt
inc
pop
inc
cmp
ficoml
js
jl
shrl
sub
push
test
add
mov
out
dec
nop
ja
ja
in
or
loopne
inc
mov
cmp
push
or
cli
std
test
out
out
sub
cmp
push
adc
test
mov
mov
mov
sbb
scas
sub
stc
jmp
dec
adc
push
addl
cmp
cmp
xchg
in
xchg
test
mov
jp
fdivl
push
dec
outsb
mov
cmovno
dec
xchg
push
mov
or
sub
out
mov
mov
jle
dec
jp
or
sbb
sub
cmp
lret
ljmp
mov
dec
outsb
pop
jle
dec
jp
or
sbb
sub
cmp
lret
lock
cli
fimull
mov
jp
dec
jle
or
add
cs
or
rorb
negb
bound
rcrb
stos
push
cmp
xchg
movsl
aam
dec
jp
jge
xchg
inc
aad
lds
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lret
mov
inc
fnstcw
out
inc
jb
push
dec
in
or
push
pop
or
add
push
cmp
insl
add
add
add
arpl
push
add
add
mov
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
add
add
add
int
inc
add
add
add
pop
add
add
add
pop
add
add
add
lret
add
add
add
add
add
add
add
flds
mov
and
push
add
add
add
add
add
add
arpl
jo
add
and
into
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
adc
add
xor
cmp
dec
add
sbb
and
push
add
push
add
fildl
das
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
aas
add
add
add
lea
and
incb
aas
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
aaa
add
add
add
addb
add
add
add
add
add
add
add
icebp
add
add
add
push
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
inc
add
add
add
add
add
or
jle
aas
add
add
add
add
add
lcall
add
add
add
add
add
fldl
out
add
add
add
add
add
add
push
add
add
add
add
add
add
dec
add
and
fildl
ret
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
push
add
add
cmp
addl
inc
add
and
mov
roll
add
cmpsl
add
add
and
and
mov
roll
add
add
addr16
mov
push
add
add
add
add
add
push
dec
add
add
add
push
or
dec
add
add
xor
dec
add
add
add
enter
in
add
add
add
add
add
add
mov
add
add
stc
add
add
addl
stc
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
fadds
add
mov
add
add
inc
add
add
xor
push
add
add
lahf
popf
nop
xor
push
jp
es
repnz
lret
xchg
mov
inc
dec
ja
jns
or
adc
pusha
out
dec
inc
adc
cli
sbb
faddl
push
aam
sti
xchg
bound
lahf
outsl
stc
mov
push
mov
mov
push
imul
dec
into
jecxz
cmc
dec
sbbl
mov
outsb
shlb
shr
scas
sbb
add
inc
lcall
lods
sbb
inc
mov
daa
jp
or
or
pop
mov
cmp
jae
pop
pop
pushf
push
call
sub
inc
xchg
in
jo
cmp
and
in
inc
xchg
mov
decb
cltd
cmp
in
dec
cwtl
test
ss
sbb
jl
pop
ret
in
xor
pop
imul
mov
loope
inc
mov
push
rcr
pop
inc
xor
dec
fbstp
and
loop
adc
pop
xor
outsl
xchg
mov
arpl
mov
stos
insl
and
sbb
pop
outsb
ret
sub
out
out
jns
enter
aam
rorl
mov
push
mov
add
stc
out
ficompl
movsl
cmp
mov
and
inc
pusha
cmp
or
jno
inc
in
call
lret
fdivr
mov
enter
fnsave
mov
sub
dec
lds
daa
mov
cmp
pushf
out
jg
sub
sbb
arpl
dec
outsl
out
insl
jecxz
dec
fsubp
lock
iret
lods
cmpsb
fstps
pop
mov
ss
mov
cld
add
fisubrl
hlt
aad
bound
add
cmp
mov
mov
lahf
imull
nop
sarb
xor
and
pop
aas
out
pop
dec
xchg
movsl
pop
or
mov
cmpsb
cmp
jo
mov
inc
loope
aaa
loopne
pop
into
push
xchg
jp
les
pop
sub
fs
rol
mov
xorb
jns
or
sub
jge
aas
pop
adc
cli
dec
ja
sti
sub
aaa
push
xor
and
out
cmp
imul
mov
or
nop
sbb
cmp
xchg
mov
std
negl
addr16
push
mov
dec
leave
adc
das
mov
scas
cmc
mov
mov
mov
test
jecxz
mov
mov
pop
mov
jae
inc
fidivl
jmp
outsb
mov
or
loop
mov
jmp
sti
push
pop
xchg
out
sub
mov
ja
dec
cmp
pop
cmc
push
cmpsb
push
lret
iret
shll
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
