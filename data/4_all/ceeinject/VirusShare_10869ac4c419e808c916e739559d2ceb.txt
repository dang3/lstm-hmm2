call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
and
inc
pop
push
add
xchg
cli
test
mov
movsl
enter
stos
in
in
adc
pop
and
sub
or
cli
movsl
lret
lds
lcall
xor
and
jne
adc
scas
ror
sti
lods
aad
mov
jns
jne
repz
popa
mov
push
push
xchg
mov
daa
mov
inc
shlb
mov
aam
nop
adc
in
lret
sub
cmp
std
lcall
cmp
iret
sub
outsb
adc
xchg
jg
sub
pop
dec
imul
mov
sub
jp
sbb
xchg
inc
gs
test
dec
xor
in
out
loopne
inc
cli
mov
xor
jne
gs
ja
ljmp
lods
daa
jo
sbb
jne
mov
add
xchg
push
inc
iret
sub
mov
gs
dec
jp
jge
dec
and
sub
adc
ret
movsl
rcl
mov
in
popa
pop
inc
push
pop
imul
and
add
xchg
aaa
xchg
fimull
mov
cwtl
lcall
inc
sub
xor
sbb
sbb
mov
scas
rorb
idiv
out
arpl
sub
push
cmp
sub
or
fisubl
stos
cmc
lcall
xor
cmp
jne
or
fisubl
stos
cmc
lcall
mov
pop
dec
dec
pop
cmpsb
xchg
loop
insb
faddl
aam
xchg
sub
inc
sub
mov
dec
nop
push
cld
test
mov
loopnew
and
sub
fisttpll
jl
xlat
push
jmp
idiv
and
sub
jnp
jecxz
lock
xor
lea
cmpsb
lea
popa
and
dec
movsb
out
cli
in
test
sub
pusha
aam
mov
or
addr16
sub
xchg
adc
sarb
pop
push
test
push
mov
ja
mov
stc
add
orb
pop
jb
out
push
pop
xchg
outsl
inc
js
scas
movsb
pop
xchg
lods
sbb
xor
ss
inc
lds
lahf
and
mov
aam
mov
js
sub
pop
cmp
imul
jmp
and
push
mov
mov
jnp
les
cmc
xor
mov
and
dec
iret
push
out
jbe
ror
sub
enter
mov
inc
out
add
push
rclb
mov
xor
and
adc
add
pop
in
cld
mov
mov
sbb
inc
mov
sbb
lods
int3
loope
xchg
sahf
xchg
mov
mov
fsubrl
gs
lock
fwait
jge
dec
mov
orl
es
xchg
adc
push
cs
subl
sub
sbb
mov
jl
sbb
loope,pt
adc
pop
dec
fidivrs
hlt
loop
mov
mov
negl
rcrl
jmp
out
mov
ret
push
xchg
push
add
aad
sub
jae
push
mov
insl
out
sbb
xor
iret
notl
xchg
pop
std
mov
jo
push
pop
comiss
pop
xchg
and
push
and
mov
sub
mov
shrb
ss
jle
stos
mov
push
in
das
mov
inc
pop
adc
mov
add
aas
out
adc
sbb
pop
movsb
dec
ret
pop
call
test
enter
lds
xchg
pop
arpl
mov
shlb
mov
mov
xchg
mov
adc
pop
mov
mov
push
sbb
or
stos
pop
mov
arpl
fistpll
mov
out
sbb
add
test
and
ljmp
pop
xor
lahf
push
jb
dec
sbb
test
repnz
rorl
add
scas
call
mov
gs
bound
cmpsl
dec
aam
and
jg
dec
mov
jg
outsl
es
rcl
mov
rep
lahf
ja
sub
or
jp
lret
stc
mov
sbb
jg
aam
mov
out
mov
push
push
test
adc
or
and
notb
ja
add
repnz
mov
test
xor
and
lret
data16
js
push
lahf
and
pushf
or
lods
dec
sarb
dec
push
pop
add
iret
pop
je
imull
out
je
test
xchg
xchg
sbb
loope
dec
jle
cld
insl
pop
sub
out
pop
bound
adcl
out
leave
sbb
or
aaa
pop
xchg
outsl
sbb
push
lea
cs
js
lret
jmp
push
add
inc
mov
add
arpl
repnz
adc
das
scas
sbb
dec
clc
pop
xlat
sti
mov
loopne
ja
jmp
mov
adc
add
daa
int
loope
sarb
rcrl
sub
sarl
cmp
aad
pop
or
int3
inc
xchg
sub
fsubrs
outsl
adc
lock
and
les
int
push
mov
sub
in
or
faddl
sub
mov
xchg
mov
rcl
aas
pop
scas
or
js
dec
nop
or
cli
cmp
iret
sahf
int
sub
idivl
adc
dec
fstl
jmp
fists
pop
and
aaa
lods
das
jecxz,pt
xchg
mov
mov
pop
fucomip
jne
sbb
aam
dec
xchg
cwtl
repnz
add
popa
fdivrs
push
inc
mov
inc
scas
pop
sub
repnz
divb
xchg
mov
mov
loope
dec
dec
push
and
push
inc
stos
pop
add
add
sbb
mov
cmp
inc
aad
jo
cltd
and
or
mov
shll
aam
and
mov
fcmovnu
stos
pop
cmp
ret
dec
in
mov
cmp
fadds
int
or
cmp
push
cmp
jns
push
push
scas
in
cmp
stos
xchg
xor
jmp
sti
mov
or
inc
dec
dec
dec
rcll
cmp
popf
fsubl
inc
add
or
subb
jl
cltd
dec
fsubrl
les
lret
iret
arpl
ret
ds
xchg
jns
sbb
or
mov
ds
testb
add
sub
sbb
mov
popf
je
ss
sbb
cwtl
mov
bound
ret
fcmovb
sbb
loope
imul
inc
pop
jo
jns
adc
test
imul
cwtl
jp
xlat
in
int3
inc
adc
lahf
mov
pop
lcall
dec
pop
subl
fcompl
mov
cld
ss
aaa
jp
dec
cmp
bound
int
les
lods
daa
and
sub
inc
lock
or
inc
mov
and
push
sbb
nop
and
mov
iret
lods
sti
fnsave
cmp
call
inc
xor
test
cmp
mov
cltd
fmuls
and
cmp
push
cs
adc
pop
mov
pop
dec
lcall
sbb
in
fs
cmc
pop
pop
mov
sbb
mov
fistpll
mov
lea
inc
mov
add
xor
pushw
and
sub
in
sbb
lock
addb
jl
pushf
mov
pop
cmpl
mov
in
and
mov
out
inc
fadd
xchg
arpl
es
out
bound
loopne
movsl
scas
vpcmpgtd
outsb
cmp
mov
das
push
daa
jo
or
jnp
stos
pop
jne
leave
ds
jb
dec
fnstsw
mov
push
push
fnsave
movsl
mov
repz
out
adc
pop
mov
inc
jmp
out
iret
and
xchg
jp
data16
das
ret
mov
daa
xor
sub
repz
lcall
test
cli
mov
movsl
hlt
fs
fbstp
pop
sbb
insl
test
push
fwait
mov
into
pop
xchg
pop
inc
cmp
jle
cmp
adc
rolb
cs
je
pop
clc
adc
jne
push
outsl
mov
adcl
or
insb
sbb
fistpll
cltd
jns
cmpsl
fmuls
push
xlat
mov
sub
fst
mov
cltd
mov
repz
xlat
out
xor
testl
lcall
inc
cmp
pop
xor
fstl
cs
dec
sbb
inc
mov
lahf
pop
lret
cmp
inc
pop
shlb
xor
add
xor
in
aam
dec
frstor
sub
xor
cmp
test
mov
out
outsb
movsb
xor
into
push
incb
dec
mov
sub
mov
and
sub
or
cltd
mov
pop
push
add
clc
adc
add
pop
fs
cs
stos
xchg
fists
shll
int3
dec
jns
mov
xchg
cltd
cli
lcall
ljmp
ficompl
repnz
popa
enter
and
jmp
fidivrl
add
adc
pop
cmp
mov
stc
daa
sub
ss
test
mov
addr16
or
data16
femms
pop
cli
ss
cwtl
or
daa
lret
clc
stos
fstps
es
subb
fisubrl
inc
lcall
xor
xor
dec
test
jmp
push
lods
push
scas
push
in
mov
jno
into
lcall
shll
add
push
jnp
stos
fstpl
shl
pusha
pop
add
shrd
jge
out
cmp
fsubrs
shr
jg
call
pop
or
call
add
add
or
out
add
sub
jmp
wrmsr
push
dec
in
arpl
dec
insl
in
dec
loope
jge
push
adc
mov
sub
mov
cmpsb
xchg
addr16
add
push
subb
in
stos
xchg
inc
push
mov
push
in
addr16
sub
push
les
add
iret
cmc
lods
addr16
decl
dec
jne
adc
cwtl
lods
stc
lcall
add
add
inc
mov
jbe
lahf
dec
mov
dec
push
int3
or
bnd
fdivl
sbbl
inc
fldcw
mov
ss
push
in
dec
push
aad
pop
push
jno
inc
aam
and
jp
pushf
jl
or
dec
les
js
mov
xchg
jp
pop
push
pop
and
add
pop
mov
jmp
cmpl
cmpsb
sbb
mov
ljmp
adc
mov
fxch
push
jb
pop
cmp
cmp
insb
gs
ret
or
or
loop
mov
jmp
dec
xor
xchg
in
jo
notl
das
push
cmp
cwtl
pop
lods
sahf
sbb
inc
cwtl
xor
jns
or
dec
enter
test
adc
mov
int
pop
and
mov
fs
fidivs
ret
push
mov
jne
mov
inc
sbb
sub
lds
xchg
lret
cwtl
sbb
sub
leave
jbe
sub
cld
push
jb
mov
rcl
rclb
orl
arpl
mov
xor
cltd
mov
out
mov
test
out
mov
mov
aad
loopne
sti
jb
push
pusha
cmc
mov
cmpsl
push
mov
push
and
int
ds
cld
and
decl
inc
mov
mov
mov
shrb
lcall
mov
dec
adcl
or
pusha
xor
xchg
fwait
mov
dec
push
and
sbb
ss
xor
ret
inc
mov
mov
push
sti
outsb
cmpsb
cmp
mov
fdivrs
dec
stos
xchg
or
mov
mov
iret
mov
int3
addr16
push
jno
test
les
mov
inc
sub
mov
mov
pop
arpl
jmp
sub
jmp
stc
outsl
adc
pop
in
or
mov
sbb
jno
icebp
test
xchg
clc
ds
mov
sbb
mov
or
push
inc
repz
push
mov
dec
jo
add
xor
stc
cmp
je
aas
jge
repnz
or
outsl
jecxz
push
jge
jecxz
scas
inc
pop
inc
ret
dec
arpl
pop
cmp
mov
xchg
aaa
jecxz
jecxz
inc
sbb
push
dec
xor
pop
pop
in
fs
or
enter
jb
aaa
test
pop
pop
fwait
lock
mov
test
xchg
bnd
repz
sbb
test
inc
mov
push
xor
addr16
mov
sbb
add
push
mov
dec
loop
mov
or
cmp
jns
lds
lret
xchg
out
push
or
sbb
xchg
jb
ret
adc
xor
jmp
js
scas
and
ret
jg
shll
push
pop
cmp
push
mov
add
aad
jo
jmp
pusha
imul
jge
jge
push
out
xlat
cmp
lcall
rclb
dec
cmp
xor
pushf
lret
cmp
adc
insl
or
aad
lret
cmp
sbb
cmp
sub
ja
es
mov
jo
out
pop
mov
cld
mov
sbb
jnp
scas
rcll
fsubp
insl
fidivrl
jno
add
ds
aad
xchg
pop
gs
or
fisttpll
mov
jne
fiaddl
sub
jnp
and
pushf
pop
push
ss
insl
cmpsl
or
incl
es
dec
outsb
mov
jbe
imul
dec
fstps
xchg
jecxz
fbstp
cmpsl
cmc
repnz
ds
add
dec
test
mov
call
sbb
mov
mov
in
aam
sti
fmull
inc
je
push
ja
or
adc
subb
mov
push
data16
push
xchg
das
out
lock
cmp
leave
pop
mov
nop
lock
inc
xchg
inc
sarb
push
sbb
mov
mov
mov
cmc
inc
adc
inc
lock
xchg
pop
js
mov
add
fldl
ljmp
shlb
jnp
in
inc
scas
xor
pop
in
out
cwtl
lods
mov
add
aad
test
adc
push
enter
int3
adcl
clc
inc
stos
insl
mov
sti
mov
je
add
push
and
ljmp
xchg
iret
mov
cmp
lods
jae
sbb
cmp
cs
mov
xorb
adc
ja
inc
cmp
jb
pop
aad
jo
mov
test
cmp
shl
sbb
pop
pop
xor
adc
cld
mov
add
repz
add
inc
cmp
mov
sub
jl
inc
pop
or
jl
lods
dec
pop
jl
push
mov
shll
push
daa
nop
subl
push
lret
mov
adc
nop
xchg
cmp
outsb
aaa
stos
cmpsl
fwait
in
push
xor
fidivrl
xchg
jnp
cmp
or
adc
cmp
inc
mov
icebp
fisubl
js
and
cmp
xchg
or
sbb
pop
cmp
or
in
mov
nop
lock
jg
cmpsb
push
inc
push
xor
mov
aam
push
push
jl
clc
rcrb
mov
jnp
and
sub
mov
add
lcall
or
psubw
lret
lods
push
cmp
shrl
jmp
aaa
cmp
mov
push
mov
mov
push
inc
fidivrl
push
jp
les
xchg
and
fsubrl
shlb
pop
movsl
ja
mov
adc
rcrb
adc
sub
cmpsb
lea
xchg
jnp
sarl
fcmovnbe
mov
mov
add
inc
lahf
inc
leave
add
push
sbb
fbld
cmp
xchg
sbb
and
int
dec
lods
add
stos
sub
mov
clc
je
and
cmpsl
inc
mov
xchg
aam
dec
icebp
cmc
pop
cmp
jecxz
loopne
push
push
das
stos
repz
add
jae
out
fnstenv
jge
xchg
fstl
xor
push
mov
jle
test
ja
jl
push
sbb
add
pop
sbb
rolb
pop
jecxz
or
leave
mov
add
jg
insb
fsubrs
jecxz
jg
clc
cmp
lock
ja
call
test
mov
xor
stc
int3
testl
cmp
ret
inc
jge
cmpsl
mov
aas
mov
fidivl
outsl
imul
mov
or
sbb
pop
inc
mov
jmp
or
insb
mov
loop
shl
sbb
cmp
add
pop
outsb
add
stc
lahf
mov
out
sub
out
inc
jo
divl
push
mov
inc
push
jmp
stos
and
stos
lcall
mov
popf
pop
test
xchg
test
mov
push
notl
xchg
push
mov
shr
stos
mov
imul
push
cwtl
ret
in
push
movsb
pop
cmc
and
and
dec
push
fdivl
adc
cs
pop
clc
xchg
nop
sti
clc
and
aam
jmp
pop
bound
and
adc
fmulp
push
adc
mov
rclb
xchg
rcl
mov
jo
cmp
jbe
shrb
jl
mov
cmp
subb
popa
mov
mov
sbb
mov
mov
xor
pop
cmpsb
push
dec
cmp
mov
jmp
shll
jmp
cmpsl
pop
movsb
mov
cmp
mov
data16
call
and
iret
or
adc
mov
mov
push
sub
and
cmp
cmp
push
xchg
mov
jns
pop
ds
mov
btc
fistpl
mov
push
cltd
les
leave
mov
mov
lea
stos
adc
pop
jno
fdivs
adc
pop
std
cmpl
movsb
jns
xor
les
test
mov
popl
loope
add
lods
mov
inc
mov
pop
lock
mov
mov
out
dec
int
xchg
push
sub
addr16
pop
jnp
jl
fnstenv
and
dec
adc
test
push
mov
cmp
stc
inc
mov
sti
jns
adc
mov
insl
mov
pop
out
enter
js
or
inc
psubq
cmp
inc
repnz
push
in
lcall
lds
pop
xor
add
cmp
stos
push
aas
dec
pop
arpl
jo
mov
inc
test
insl
ja
mov
pop
orb
mov
aad
xor
cwtl
mov
mov
cmp
std
mov
push
jmp
mov
pushf
jnp
push
pop
mov
call
insl
pop
jbe
loopne
cld
loopew
fsub
mov
jl
jp
std
cmp
xchg
testl
sahf
inc
aas
leave
xchg
push
fsubrs
into
pop
jp
cmpsl
xchg
repnz
mov
xchg
rcrb
mov
or
inc
push
sub
bound
out
dec
aaa
shll
mov
cmpsb
sbb
jp
xchg
mov
sahf
inc
fs
js
stc
fistps
sbb
lods
jo
sbb
insb
ret
jge
mov
out
int
mov
scas
push
icebp
pop
and
fstpt
out
pop
push
mov
in
adcb
add
stc
lret
add
sbb
rclb
mov
push
lahf
jl
mov
jge
shll
lods
stos
xchg
push
outsl
movsl
loop
xor
cmp
xchg
fbstp
pop
mov
xor
mov
loopne
lds
loopw
xchg
sub
cmp
repnz
pop
stos
shrl
mov
mov
enter
fs
adc
faddl
push
xor
stc
ficoml
fcmovb
sub
dec
xchg
es
in
mov
xor
and
adc
jp
lock
or
inc
add
push
je
cmp
jb
mov
cmpxchg
push
in
ret
dec
test
cmp
adc
sub
xorl
subb
shlb
gs
rclb
cmpsb
push
jmp
add
mov
mov
outsb
fs
paddb
sti
jo
sbb
divb
cli
iret
vpunpckhwd
outsl
mov
xchg
in
push
leave
sbb
jnp
dec
movsb
in
mov
fnstcw
inc
rolb
loopne
fs
ljmp
into
mov
push
into
sub
xor
push
and
adc
test
cmpsl
push
cmp
mov
lahf
add
movsb
lods
dec
out
pusha
lea
jg
pop
ljmp
add
lea
pop
mov
mov
and
test
leave
in
fxch
push
jmp
mov
pop
shr
jb
lds
sub
push
adc
xor
xor
fcoml
imul
push
negb
adc
in
sarl
and
scas
xchg
cmp
add
insl
subl
sbb
xchg
aad
mov
scas
add
in
cwtl
inc
clc
andb
aad
xorb
ret
push
int3
lock
stos
or
xchg
mov
cmp
push
incl
rcl
icebp
xchg
lcall
pop
call
cld
repz
test
xchg
arpl
mov
stos
lcall
push
fs
sub
inc
enter
fisttpl
enter
out
adc
xor
jnp
mov
adc
imulb
xchg
int3
add
push
insl
cli
sub
pop
out
pop
pop
cmp
fiadds
jecxz
imul
mov
in
mov
jno
push
stos
or
int
cmp
mov
mov
outsl
sub
push
push
out
aas
cmpsb
nop
jnp
add
call
xchg
mov
push
out
pushf
outsb
arpl
ss
scas
ljmp
sub
int
das
xor
jecxz
dec
adcl
pop
jle
cwtl
jg
lret
movsb
cmpsl
and
inc
inc
sub
loopne
ljmp
dec
sti
inc
mov
jecxz
add
test
call
pop
cmp
jmp
rorl
cmp
fnsave
aad
sti
test
dec
jp
aaa
or
mov
stos
scas
popf
push
cmpsl
enter
push
add
test
dec
loope
lcall
stc
cmp
arpl
push
sbb
iret
cld
les
inc
dec
push
fmuls
sti
aas
add
push
data16
sub
push
mov
dec
push
cmp
jne
or
fisubl
stos
cmc
lcall
xor
cmp
jne
or
fisubl
stos
cmc
lcall
xor
cmp
jne
or
fisubl
stos
cmc
fwait
in
adc
add
xor
and
sub
or
fisubl
push
or
jne
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
je
fs
push
lea
int3
push
pushf
jno
popa
stc
hlt
jmp
les
xchg
dec
test
lods
fs
xor
and
adc
add
hlt
sub
les
xchg
dec
test
or
pop
inc
jmp
frstor
hlt
sub
ljmp
aas
ljmp
fidivs
clc
je
and
lahf
dec
lcall
cmpsb
ds
xchg
idivb
mov
jno
mov
push
ljmp
leave
bound
clc
mov
and
ror
rcrl
dec
dec
js
and
pushf
aam
insl
push
xor
xchg
sub
sub
adc
sub
lcall
lds
ljmp
fstpl
loop
dec
js
lock
mov
and
jo
bound
or
and
push
sbb
in
dec
in
cmp
cmpsb
push
mov
inc
adc
movsb
dec
int3
mov
fsubl
xorl
mov
fs
push
stc
inc
popf
xor
and
adc
add
hlt
sub
les
mov
movsb
xchg
xchg
push
test
lods
or
icebp
pop
dec
insl
nop
jno
inc
lcall
test
shrl
int
sarb
shlb
jmp
sti
add
and
jb
dec
scas
adc
add
xchg
dec
out
xchg
pop
subl
sbb
loope
icebp
xor
and
adc
add
hlt
sub
les
xchg
dec
test
lods
fs
xor
and
adc
add
hlt
sub
les
xchg
dec
test
lods
shr
lock
jae
mov
loop
bound
mov
adc
orb
xor
imul
pop
mov
icebp
adc
sub
push
xor
inc
gs
in
lods
push
out
es
inc
inc
mov
in
xchg
in
or
xchg
aam
cs
inc
adc
xor
inc
xor
mov
dec
cs
sub
dec
idivl
inc
push
dec
fcoms
jo
mov
sub
push
fcompp
xlat
stos
les
stos
leave
lret
es
push
pusha
or
subb
cmp
inc
xchg
sbb
testb
mov
adc
pushf
jo
pop
cmpsb
mov
mov
mov
dec
call
repz
test
mov
dec
movsb
nop
ret
aad
ss
inc
dec
hlt
jbe
mov
or
roll
test
push
pop
dec
mov
pop
fnstenv
popa
mov
xlat
loop
sub
or
ret
cld
orl
ficoml
push
fstps
jp
ret
mov
mov
push
pop
in
cmp
sbb
outsb
xchg
out
out
pop
mov
jb
jp
push
insl
test
adc
or
pop
push
fsubl
test
mov
jecxz
sbb
xor
xchg
xchg
dec
jge
mov
fsubs
imul
jmp
cwtl
sub
aam
fidivrs
ret
aam
xor
mov
xchg
mov
dec
mov
or
xchg
cmp
pusha
lcall
daa
sbb
jne
aam
aad
or
pop
aad
outsl
mov
push
xor
incb
stos
xor
roll
jmp
shl
sub
xchg
pop
cmpsb
inc
push
int3
imul
sbb
jp
cltd
sahf
xorl
xchg
dec
add
cmp
mov
inc
sbb
push
mov
xchg
sahf
jnp
push
mov
dec
push
pop
add
jns
sbb
loop
cli
mov
bswap
lahf
push
repnz
mov
mov
mov
or
jmp
pop
lock
js
mov
mov
in
add
mov
scas
hlt
pop
lcall
dec
lea
and
shrb
shlb
cmp
inc
arpl
and
push
inc
jne
dec
mov
mov
xchg
sarb
mov
push
repnz
add
scas
rclb
mov
jmp
mov
inc
sahf
cmpsb
outsb
neg
xchg
punpckhbw
fiaddl
hlt
or
cmp
mov
cmp
and
xchg
inc
mov
sarb
sub
movsl
mov
ja
push
and
sub
jg
lret
popf
mov
pusha
jnp
sbb
add
add
and
xor
jecxz
into
push
leave
ds
cmp
mov
push
jo
jnp
ret
xchg
inc
sub
jecxz
cltd
xchg
inc
push
lret
pop
je
jle
fwait
jb
lods
pop
sub
fwait
mov
loope
cltd
shll
or
adc
das
lret
mov
in
clc
inc
rclb
scas
pop
cmp
sub
push
inc
jae
add
sbb
and
pushf
sub
push
cltd
cwtl
int
sarl
or
popa
ja
lret
scas
add
test
fiadds
loopne
adcl
int
pop
mov
mov
nop
cltd
std
add
push
dec
xchg
daa
fs
mov
cmp
mov
mov
xlat
adc
inc
orb
lret
aas
shl
mov
xchg
cmp
aam
addr16
sti
fstps
std
in
sub
adcb
sarb
data16
mov
jmp
mov
aas
add
loopne
and
fs
push
xchg
js
mov
aas
fdivs
xchg
push
jnp
dec
or
jle
movsb
sbb
mov
ficoms
add
push
fwait
cmp
int
fimull
mov
in
icebp
mov
cld
xchg
cwtl
mov
push
je
lcall
iret
repz
pop
pop
inc
and
fsubl
jle
testl
icebp
or
jmp
cltd
xor
aaa
outsl
ret
pusha
mov
xlat
dec
pop
orl
shrl
mov
mov
scas
out
ljmp
sahf
ret
dec
dec
adc
divl
push
adc
sbb
cmp
mov
push
xchg
add
xor
sub
push
cmp
lret
scas
cmp
cld
sbb
mov
subl
arpl
aas
cmp
or
xchg
cwtl
pusha
orb
mov
adc
out
adc
ror
test
sahf
add
lret
adc
sbb
in
lret
adc
das
add
push
addb
mov
stos
adc
and
pop
cmp
mov
mov
mov
repnz
jecxz
dec
push
add
pop
xor
cld
push
push
pop
xchg
push
je
pop
pop
cli
sbb
dec
xacquire
xchg
mov
xor
mov
adc
sbb
and
decb
pop
or
shlb
adc
mov
push
mov
loope
mov
or
fmuls
enter
sahf
bswap
repz
fs
cld
orl
pop
std
out
push
test
inc
hlt
mov
xor
xor
add
push
int3
js
xor
mov
shl
pop
and
xchg
popf
mov
repz
out
mov
popf
cs
xchg
sub
mov
scas
sub
sti
fwait
jo
loope
js
or
notl
data16
xchg
testb
dec
cmp
inc
push
cmpsl
pusha
mov
sub
sbb
adc
push
loop
sub
insb
in
pop
sbb
movsb
and
push
xchg
xor
push
push
jno
outsl
outsl
cwtl
sbb
movsl
fisubl
pop
sub
push
in
xchg
inc
cmp
fcomp
fwait
push
push
mov
add
pushf
pop
sbb
jmp
sbb
test
xchg
adc
mov
jb
stos
push
xchg
ret
pusha
scas
dec
es
fdivrl
mov
jl
add
stc
xchg
mov
leave
repz
out
mov
js
add
push
int
repnz
cmp
pusha
pop
rclb
shlb
sub
cmc
repnz
jns
pop
aad
out
icebp
cmp
or
outsb
fnstcw
cwtl
fwait
dec
arpl
xor
mov
aad
test
pop
dec
adc
or
dec
pop
cmp
popa
xchg
fisttps
adc
lret
push
mov
add
fucomi
mov
or
mov
mov
aas
mov
xor
mov
mov
loopne
inc
jge
cmc
test
aas
sbb
xchg
arpl
lods
test
xor
es
mov
fs
in
stos
outsl
dec
fwait
into
shl
inc
sbb
lods
jae
test
lods
mov
scas
jb
pop
fsubr
pop
aaa
mov
fcmove
mov
movsb
aam
and
mov
outsl
icebp
pop
std
into
pop
adc
in
xchg
jnp
mov
cltd
test
pop
inc
arpl
in
test
fistps
cli
mov
test
fistl
jge
mov
fidivrl
daa
and
movsb
sbb
test
jl
leave
stc
notl
inc
orl
cmc
xor
movsb
clc
inc
cmp
mov
jge
push
out
movsl
sbb
mov
dec
push
mov
fsubrs
or
cmp
mov
push
addr16
mov
xorb
adc
dec
xor
sub
lret
xchg
xchg
jmp
or
sbb
fcmovnb
and
sti
stos
sub
pop
jecxz
pusha
aam
push
mov
push
aam
rorl
dec
sbb
lret
imul
cld
cli
adc
test
cmpsl
cli
adc
mov
push
add
push
into
jge
fbld
stos
shl
pop
jae
inc
push
jbe
jl
fcoml
sbb
stc
adcl
shll
test
inc
push
aad
aas
lahf
or
and
inc
jecxz
mov
cwtl
fscale
inc
or
fmul
cwtl
pop
imul
xchg
dec
fwait
cs
xchg
mov
xchg
es
and
and
fwait
rcll
out
insb
push
mov
inc
jnp
mov
push
mov
cld
sub
arpl
jo
lcall
xchg
add
cmp
rcrl
mov
and
cmc
inc
dec
lea
outsb
ljmp
data16
lret
cmp
pop
pop
add
mov
mov
adc
pop
and
push
mov
mov
divb
and
sbb
lods
inc
mov
and
in
gs
idivb
sarl
filds
out
arpl
stc
pop
cmpsb
in
lods
lds
inc
cmpsb
xchg
fs
xchg
popf
adcl
push
into
push
and
cmp
mov
pop
repz
mov
sub
lahf
movsl
mov
sbb
fs
popl
call
test
adc
lods
cmp
and
mov
mov
pop
leave
sbb
cmpsb
call
cltd
mov
add
sbb
pop
das
and
notb
shl
stc
pop
cmp
daa
rorb
mov
mov
repnz
cmp
and
mov
adc
packuswb
mov
stos
mov
sahf
xchg
div
adc
or
dec
mov
fmul
inc
mov
sub
push
rolb
insb
xor
ss
ds
mov
cmp
in
mov
jge
mov
mov
insb
jo
and
adc
out
jbe
pop
sub
movsb
lods
cmp
orb
mov
cmp
dec
orl
movl
ja
int3
push
ret
and
imul
das
test
jae
cmp
jae
cmc
loope
fcoms
mov
mov
in
inc
mov
repz
ret
mov
inc
stos
mov
dec
inc
pop
icebp
sub
cmp
or
stos
pop
inc
fistl
in
incb
xchg
cld
imul
mov
loope
imul
adc
adc
mov
mov
les
test
inc
popf
xor
lods
or
shl
addb
enter
mov
loopne
lret
iret
scas
js
sbb
cmc
mov
push
lds
mov
adc
insl
and
cmp
xlat
mov
fcmovnb
mov
push
jae
shr
add
in
je
cwtl
xchg
mov
call
into
stos
mov
shr
lahf
push
cmpsl
pop
and
inc
cwtl
xchg
jbe
cmp
push
das
mov
xchg
sbb
jp
xor
pop
scas
mov
jmp
push
out
dec
mov
scas
mov
inc
clc
aas
in
stc
xchg
xlat
xchg
ds
mov
sti
movsl
repz
loop
or
punpckhdq
xor
loope
ficoml
movsl
outsb
into
pop
mov
icebp
aaa
ss
inc
sub
cmp
jno
jo
icebp
inc
repz
jnp
lcall
pop
mov
orl
add
repnz
or
mov
fucomp
mov
adc
aam
mov
xor
dec
inc
jmp
or
add
xchg
mov
fdivrs
stos
stc
add
push
mov
mov
test
xchg
aas
xchg
or
add
adc
sbb
mov
mov
mov
sub
sub
xor
mov
mov
aad
mov
dec
movsb
shll
add
mov
mov
cld
fistl
pushl
aas
fistpll
xor
cmp
in
lcall
jns
sbb
repnz
pop
mov
push
cld
nop
clc
jbe
jo
popa
mov
icebp
sbb
inc
dec
add
push
mov
incb
insb
jg
in
iret
in
jg
sarb
jp
jns,pt
mov
sbb
xchg
lods
ja
mov
ficoms
push
xor
jecxz
jmp
jo
pop
aas
add
add
push
and
cmp
xlat
outsb
aam
int
das
std
psllq
in
mov
lcall
and
lret
mov
rorb
dec
xlat
iret
ds
pop
and
and
mov
xchg
or
out
xchg
and
std
mov
mov
loopne
in
xchg
int3
fisubrl
hlt
sub
xchg
push
add
mov
sbb
and
mov
jns
or
cmp
lds
test
arpl
sbb
mov
adc
push
or
dec
xor
sub
lret
dec
std
mov
repz
ds
shrl
push
pop
push
inc
sub
pop
add
sub
pop
icebp
mov
cltd
cmp
pop
enter
leave
js
aam
inc
sti
repnz
notl
sub
rorl
iret
pop
popa
pop
jl
add
pop
push
dec
dec
je
cli
jp
cmp
inc
out
dec
push
push
mul
cmp
sbb
mov
inc
dec
or
mov
shrd
icebp
xchg
sbb
lcall
xchg
pop
xchg
fcmovb
dec
push
out
jecxz
cwtl
add
int
out
iret
or
arpl
adc
mov
out
test
sbb
sbb
gs
jb
mov
add
outsl
push
mov
imul
notl
in
mov
mov
sbb
sbb
lret
xchg
push
movsl
pop
ljmp
mov
movsl
sub
stc
push
adc
sub
ss
sbb
fldz
mov
clc
ret
add
mov
xlat
xchg
fdivrp
cltd
scas
mov
fdivp
mov
sbb
sbb
fs
shl
fdivrs
fsts
push
lret
sbb
jmp
test
add
jle
bound
ljmp
stc
sarl
inc
je
mov
lcall
or
mov
adc
popl
data16
test
and
mov
loop
cli
mov
push
jle
clc
shll
jb
icebp
xor
fnstcw
jl
or
push
xor
jne
push
cmpsb
push
test
xorb
xchg
insb
ret
push
adc
lock
mov
jl
lcall
fnsave
divb
arpl
and
sub
orl
cwtl
daa
dec
dec
pop
repz
xor
lods
stos
call
push
mov
sbb
and
and
lret
call
and
cmpsb
push
adc
inc
out
push
push
xchg
repnz
jle
cmp
mov
sahf
inc
loope
add
ret
jns
inc
mov
lods
xor
lret
leave
sbb
cmp
and
inc
jbe
lret
adc
scas
imul
pop
jnp
sub
pop
mov
cmpsl
xor
dec
push
shl
cltd
sub
ss
out
out
psubsb
or
mov
push
mov
pop
repz
incl
std
sub
data16
out
rcrl
loope
cmp
mov
and
sldt
sar
std
test
hlt
aaa
xchg
mov
inc
mov
cmpsl
xchg
cmp
in
nop
jnp
outsl
pushw
mov
or
mov
lods
lcall
mov
dec
lea
adc
push
add
xchg
mov
lret
pop
shlb
idiv
pop
gs
pop
lret
and
inc
mov
repz
cmp
lcall
pop
pop
cli
js
jns
and
mov
dec
dec
cwtl
pop
gs
mov
and
loop
and
mov
movsb
mov
lcall
adc
les
rclb
xor
jne
dec
xchg
jo
push
je
and
mulb
pop
dec
cmp
xchg
pushf
cmp
ljmp
xchg
fidivl
rcr
dec
push
or
cli
out
std
dec
jp
daa
cmp
adc
popa
or
cwtl
mov
test
mov
xor
cmp
pop
ja
pop
leave
pushf
rcl
or
rcll
or
dec
out
xchg
aam
stc
mov
jmp
aas
mov
adc
into
sahf
inc
call
loope
xor
hlt
push
xor
mov
sbb
lods
outsb
into
push
sbb
mov
and
or
jno
mov
mov
jnp
test
ficoml
jmp
stc
mov
xchg
add
xchg
cld
pop
hlt
in
out
jae
mov
mov
mov
dec
pop
push
pop
mov
jbe
gs
xchg
stos
nop
imul
movsl
rcr
sbb
outsb
or
clc
stos
lret
dec
ret
out
or
cmp
dec
cmp
es
and
push
inc
sbb
out
cmp
fs
lods
fs
xor
sub
pop
lcall
aad
insl
jp
fcompl
mov
adcb
push
std
push
jmp
mov
adc
lcall
aam
push
add
mull
pop
ret
or
fdivs
seto
mov
sbb
pusha
sbb
lods
jle
pop
xchg
sub
movsl
divb
jecxz
adc
mov
push
in
add
and
adc
test
lcall
cli
test
mov
push
jl
cmp
push
mov
pop
js
mov
leave
xor
cmp
rcrb
imul
sbb
mov
loop
sbb
notl
dec
ficomps
aas
jnp
jg
insb
dec
adc
inc
mov
mov
imul
jae
xor
jl
iret
out
shll
mov
test
jo
and
and
outsl
xor
jnp
xlat
imull
cld
dec
jb
sti
adc
mov
movzbl
repnz
iret
gs
and
push
shll
dec
or
es
mov
inc
pop
movsb
push
rorl
fiadds
jp
in
dec
lods
add
add
sbb
jno
pusha
sub
shl
or
pop
inc
lcall
lods
mov
push
inc
sbb
jne
mov
bound
fmuls
xchg
test
movsb
sub
dec
arpl
dec
aam
lods
and
sub
hlt
pop
stos
sti
sti
mov
mov
or
mov
xchg
mov
mov
mov
ret
jns
int
pop
and
in
mov
outsl
lods
cmp
sbb
add
std
xor
jl
sub
and
dec
mov
sbbl
rcrb
push
sub
jae
mov
adc
das
mov
jle
mov
and
in
xchg
or
mov
pop
xor
mov
or
stos
test
dec
mov
lret
or
imul
int
sbb
inc
cmpsl
and
decl
dec
cmpsl
insb
or
aam
push
push
pushf
add
or
bound
lret
adc
jnp
sbb
adc
sbb
in
mov
ja
dec
lcall
js
sbb
pop
iret
pop
sahf
jp
adc
in
testl
push
jbe
fwait
in
je
lret
lret
stos
sbb
neg
popa
les
jp
fsubr
mov
imul
push
fadds
push
push
add
jns
push
jnp
jbe
cltd
bnd
mov
insb
jecxz
addb
out
aaa
inc
shrl
jo
push
xchg
and
xchg
cmp
enter
ds
lds
int3
lea
or
pop
sbb
mov
pop
add
les
test
and
arpl
sti
inc
fcmovbe
adc
dec
repnz
imul
cmp
adc
mov
in
clc
ljmp
mov
and
popa
cmpsl
fsubl
insb
lret
into
cmpsl
mov
sbb
sub
mov
je
dec
inc
ret
inc
jecxz
pusha
push
xor
mov
xchg
stos
pop
inc
mov
cs
adc
das
pop
into
insb
push
outsl
push
jle
sarl
mov
rcr
mov
mov
lods
iret
adcb
loopne
sub
data16
xor
xchg
mulb
inc
xor
push
sbb
out
and
into
and
out
mov
ljmp
sahf
dec
popa
clc
add
xor
call
ja
pop
xchg
rclb
mov
arpl
add
mov
jb
sbb
popa
add
mov
aad
jge
sub
das
fnstenv
mov
fsubl
rcl
push
ficomps
xchg
sub
ja
xor
or
mov
inc
leave
lcall
mov
cmp
add
cmp
mov
jb
cmp
arpl
mov
cmp
adc
into
xor
add
cld
aad
mov
aad
call
scas
sarb
push
cmp
sarb
push
and
adc
sbb
bound
stos
gs
pop
dec
push
xchg
mov
sub
icebp
jg
into
test
into
push
inc
lds
in
cltd
stos
xchg
push
xchg
inc
xchg
mov
xor
and
adc
add
hlt
sub
les
xchg
dec
test
lods
fs
xor
and
adc
add
hlt
sub
les
xchg
dec
test
test
inc
cltd
xor
and
adc
add
hlt
sub
cmp
or
movsb
jge
inc
test
push
imul
dec
add
hlt
shl
xchg
jle
les
adc
jnp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lcall
rcr
idivb
xchg
push
jmp
push
pop
and
jns
jns
std
loop
repnz
test
mov
sub
sbb
jb
inc
sub
and
jns
imul
sub
jno
mov
jmp
cs
xor
jo
push
sub
loop
xchg
fs
jae
add
daa
inc
movsb
add
jge
insl
jne
cmp
sub
negl
dec
je
fs
aad
cmpsb
loop
mov
addr16
mov
icebp
test
adc
or
and
mov
push
adc
loope
pop
ret
inc
mov
jmp
addr16
jno
bound
imul
cltd
adc
das
and
jge
les
daa
mov
mov
dec
ja
add
data16
mov
imul
pop
sub
fstl
fstpl
jns
push
ret
repnz
mov
dec
xchg
fbld
jb
inc
sbb
and
dec
add
lock
sti
and
test
xchg
mov
cmpsl
repz
out
loop
push
pop
sbb
cmp
dec
daa
dec
adc
in
mov
mov
lods
pushf
or
mov
push
cmp
and
pop
adc
jl
mov
xchg
mov
cmpsb
mov
leave
mov
sub
sbb
jb
inc
sub
and
jns
imul
mov
mov
jmp
jb
inc
sub
and
jns
imul
jnp
imul
xchg
aad
in
jo
cli
mov
sbb
adc
or
pusha
mov
sub
das
jmp
dec
push
sub
xor
shlb
push
movsl
inc
xchg
inc
in
mov
xchg
push
inc
int3
addr16
xchg
lret
adc
movsl
aaa
jb
clc
stos
fs
stos
clc
jno
loop
inc
adc
aas
mov
or
ror
jle
xor
add
stc
cli
cli
int3
jo
dec
stos
or
inc
sarb
cs
outsb
cmp
addl
mov
into
cmp
jae
inc
int
dec
mov
ja
loop
cli
push
mov
cs
stos
inc
fldenv
mov
inc
sbb
mov
jmp
imul
lahf
jbe
inc
jecxz
inc
lock
sub
push
sub
xor
ljmp
jg
adc
cmp
aad
arpl
and
imull
flds
adc
sahf
lahf
shlb
xchg
add
stos
aad
jle
push
sbb
popa
roll
inc
push
xor
es
jg
add
xchg
test
in
fmuls
fimull
pop
pusha
push
sub
icebp
xor
mov
mov
jmp
inc
mov
mov
rcr
iret
mov
and
scas
or
stos
sub
das
repz
xchg
cmpsl
push
test
mov
not
stc
xchg
inc
xchg
rolb
movsl
xor
sti
dec
sbb
aas
xor
lods
pop
ror
inc
aaa
es
lods
pop
mov
pop
loope
cmp
xchg
imulb
push
fldl
or
mov
mov
scas
push
dec
cltd
dec
adc
sbb
fdiv
pop
ret
xor
imul
imul
cmc
fstp
insl
js
into
xorb
mov
daa
adc
call
sub
enter
xchg
sbbl
cmp
xor
inc
das
xlat
fcmovnu
xchg
scas
xchg
push
cmp
dec
int3
fdivl
push
jmp
gs
add
jo
aas
add
mov
inc
xchg
add
cmp
in
imul
adc
divb
xchg
rorl
inc
jmp
lods
gs
xor
lret
sbb
mov
xor
jg
dec
xor
mov
mov
pop
aad
push
or
mov
out
mov
sub
jg
push
mov
and
loope
imul
jmp
hlt
es
dec
push
and
jno
cmp
mov
rcr
test
jecxz
pop
out
inc
push
push
repnz
jl
sbbl
in
in
test
int
jnp
add
and
test
mov
scas
loop
shrl
scas
cmpsl
cmp
xchg
and
jecxz
xchg
daa
lret
adc
incl
gs
clc
and
fdivrl
sub
into
js
sub
jmp
cs
jb
xchg
or
jno
mov
aaa
or
cmp
daa
sbb
cltd
inc
xor
xchg
rcrb
push
pop
into
shrb
jecxz
push
jmp
rcrb
pop
cmpsl
dec
aas
xor
lods
pop
xchg
xchg
fs
popf
sbb
in
sahf
das
pop
out
dec
cmp
lock
test
call
xor
dec
cmp
jns
fmuls
sub
push
xchg
xlat
in
jo
mov
xchg
cmp
jecxz
es
pop
mov
sbb
xchg
mov
cmp
sub
sbb
out
sbb
and
xchg
pop
xchg
dec
xor
int
scas
scas
push
inc
test
adc
loope
and
fs
popf
dec
mov
and
mov
push
sub
jb
movsl
aam
fsts
fsub
inc
mov
scas
cmp
movsb
iret
lods
adc
mov
repz
or
cli
stos
and
lock
out
imul
loope
inc
test
je,pt
and
sub
jp
cs
mov
jb
lea
push
push
popf
ljmp
sbb
add
outsl
sub
stos
mov
sub
lcall
mov
fnstcw
fwait
mov
pop
out
pop
sbb
lret
mov
gs
imul
shll
icebp
fldt
inc
jae
lea
in
inc
pop
jg
sub
adc
jmp
popf
out
es
je
lods
adc
int
neg
mov
stos
push
arpl
jno,pt
adc
lret
dec
mov
jae
sub
loop
xor
add
lock
mov
lret
inc
js
jge
lods
lret
pop
repnz
pop
je
add
jecxz
outsl
xchg
inc
adc
pop
mov
std
popa
mov
ficoms
aad
xchg
aaa
mov
jae
push
cmc
loop
cld
push
mov
dec
pushf
jns
inc
xlat
fistl
xor
cmp
xchg
lods
je
add
xchg
mov
fnstsw
mov
or
notl
adc
mov
cltd
pop
in
mov
xchg
inc
hlt
ret
cmp
out
roll
icebp
or
les
jecxz
out
les
dec
cmp
push
mov
xchg
mov
in
sbb
mov
int3
mov
sub
sbb
test
push
jnp
int
es
pop
fs
mov
xor
cltd
sbb
add
aad
pop
ljmp
inc
imul
mov
fldenv
cltd
pop
ret
lcall
arpl
jae
mov
ljmp
es
inc
das
fidivs
mov
sti
rclb
push
leave
mov
mov
aad
pop
shlb
rcrb
mov
pushf
inc
or
adc
js
push
mov
lds
lock
popa
or
js
or
fmul
aaa
inc
add
adc
out
push
xor
imul
mov
add
dec
sub
fldt
mov
adc
add
and
aad
stos
jl
aam
insb
int3
mov
jp
jno
outsl
int3
jg
sar
adc
xchg
fdivs
dec
ret
jge
push
mov
xor
or
adc
dec
ljmp
aad
push
inc
aaa
imulb
icebp
imul
fidivrs
jnp
fstp
mov
xchg
in
lret
fsubp
inc
jecxz
add
adc
nop
adc
icebp
push
repz
sub
js
xor
sbb
inc
out
aam
jne
test
inc
call
add
mov
and
mov
out
loopne,pn
in
xor
insl
call
add
lods
lcall
aad
xorl
and
xchg
xchg
push
test
iret
add
pop
push
rol
jb
push
mov
xor
popa
insb
dec
sbb
shll
jno
xor
movsb
out
fcoml
push
mov
jmp
ret
jns
dec
push
pop
out
movsl
dec
cmpsl
push
inc
cmp
pushf
and
xor
xchg
or
cli
ljmp
and
sub
lds
sbb
arpl
inc
aaa
pop
frstor
in
je
and
filds
insl
bound
jns
jecxz
dec
aaa
inc
icebp
xchg
fnstenv
imul
pop
mov
rol
and
cmp
in
subb
in
jle
sub
mov
dec
aas
mov
loop
lock
lods
xchg
test
fstpl
mov
lret
pop
push
popf
inc
into
xor
aaa
mov
icebp
pop
pop
fstl
push
iret
iret
jae
jp,pn
mov
mov
sbb
or
into
ret
dec
int3
mov
bnd
sub
xor
adc
dec
xchg
xor
cmp
xchg
idivl
xchg
xchg
inc
xorl
or
mov
xor
adc
ja
int3
ror
imul
add
aaa
imul
push
shr
mov
push
out
imul
dec
cmpsb
rcr
cltd
fsubs
popf
out
push
jns
divl
push
rcrl
call
add
ret
aas
leave
loopne
aad
mov
xor
jecxz
rol
jg
out
fisttps
fwait
and
mov
fs
js
cmp
sub
mov
icebp
dec
xor
seta
filds
icebp
lock
jb
mov
or
jecxz
xchg
xlat
jl
lret
ret
sub
or
mov
jle
out
xchg
xor
mov
cmpsb
lcall
sub
ficompl
aad
in
inc
into
ret
ret
dec
shl
jp
stos
jo
add
lcall
xor
loope
stos
push
mov
xor
mov
int
mov
popa
cmp
or
outsb
jecxz
push
push
mov
lahf
pusha
mov
or
fldt
jns
push
test
out
add
sahf
pop
mov
dec
rcll
lods
jo
cmpsb
out
popf
mov
or
jno
sahf
lds
shlb
jl
insb
fmuls
and
mov
mov
inc
in
jns
xchg
fidivrl
and
and
sub
xor
push
push
lods
xor
adc
dec
ja
ficompl
lds
jge
and
mov
sub
xor
clc
dec
sahf
or
je
pop
cs
push
in
dec
mulb
mov
shll
ljmp
inc
push
mov
dec
scas
inc
into
push
imul
in
mov
out
dec
or
scas
adc
pop
mov
sub
fildll
cmp
mov
and
pop
ffreep
daa
pop
mov
fists
popa
jp
push
mov
in
stos
je
pop
ret
push
pop
mov
fsubr
dec
bnd
js
mov
loope
mov
sahf
repz
inc
xor
subl
movsl
movsl
and
sub
add
push
fwait
loop
cltd
jno
std
test
in
dec
imul
sub
sti
push
roll
call
sbb
lods
cwtl
iret
xor
dec
cmp
xchg
sbbl
hlt
sbb
std
in
mov
in
jno
repnz
dec
loope
dec
adc
xor
pushf
dec
pop
ds
xchg
sub
jne
lcall
dec
adc
enter
fcmove
mov
es
cmp
data16
mov
repz
or
fiadds
push
jl
testb
push
pop
lods
cltd
sbbb
add
jge
pop
inc
and
jge
in
arpl
jl
or
lretw
lods
mov
sub
jle
adc
jb
aaa
insl
cmp
mov
out
outsb
xchg
pusha
fidivrl
cmp
lods
jge
pop
xchg
adc
mov
adc
fsubrp
divl
sti
mov
sbb
jl
aam
lds
jo
jns
imul
inc
cmp
dec
gs
jecxz
or
stc
insl
lods
call
cmp
sbb
jl
jo
stc
call
cmp
add
insl
cmp
out
ror
adc
daa
push
cmp
lcall
sarb
or
mov
push
int3
test
test
fistps
call
fsubl
mov
stc
jecxz
push
imul
cmp
fidivrs
sbb
adc
adc
call
into
imul
mov
pushf
xchg
cmp
std
dec
dec
and
mull
and
inc
lret
xor
inc
ss
aam
outsb
cli
aaa
sub
mov
adc
loop
cld
mov
dec
outsl
push
sbb
and
jb
inc
add
pop
pusha
jp
pop
mov
decl
pop
xchg
mov
and
leave
and
in
inc
jne
stc
inc
or
hlt
sub
jg
sub
repz
mov
movsb
dec
into
add
inc
in
clc
into
scas
iret
xchg
lret
test
mov
push
incb
imul
or
int3
mov
push
int
sbbl
fsubl
add
jp
aad
lea
add
fidivrl
jg
cmp
stos
cmp
sbbl
mov
scas
jno
cltd
add
mov
iret
adc
popa
pusha
outsb
test
pop
movsb
mov
test
aam
fisubl
into
leave
cmp
push
or
pop
jb
mov
jae
jne
imul
cs
lods
sti
sub
divl
sbb
dec
xchg
aaa
sbb
out
mov
iret
and
or
fsubs
push
ss
inc
sub
es
mov
pop
fsub
aam
xor
stos
xchg
or
push
pop
shll
or
mov
xchg
out
jne
xchg
fnstsw
add
pusha
int3
loop
sarl
inc
decl
adc
ficoms
jo
mov
cmc
cld
rorl
xlat
movhps
rorl
fs
or
push
std
sti
xchg
ljmp
inc
lods
xchg
enter
das
adc
ss
repnz
fwait
outsl
lods
insb
aad
not
add
push
inc
dec
pop
push
sub
test
inc
mov
cmp
in
arpl
sbb
jnp
cmp
cmp
push
imul
pusha
inc
jecxz
call
push
fwait
bnd
add
sub
call
out
push
loope
imulb
orb
shrb
xchg
addr16
jecxz
push
ljmp
jmp
aam
dec
out
and
dec
loop
sub
mov
test
dec
bound
in
mov
mov
pop
rolb
or
lock
push
clc
mov
arpl
cmp
sub
and
or
fstps
test
loopne
add
das
dec
out
leave
jecxz
and
fstp
sub
xchg
lock
addb
and
sbb
pop
pop
daa
shl
sub
cmp
dec
sbb
or
int3
in
xor
cmp
and
mov
ret
arpl
lods
inc
xchg
incl
inc
stc
adc
add
xchg
pop
iret
or
add
xchg
push
dec
mov
insl
push
aaa
mov
sbbl
arpl
dec
in
fisttpll
jge
xlat
into
xchg
pop
decl
cmp
shll
cmp
add
mov
andnps
mov
outsl
push
cmc
test
jecxz
add
loop
and
gs
cmc
xchg
mov
and
repz
xchg
sbb
cmc
adc
xor
or
xchg
incl
push
out
xchg
sbb
or
sub
insl
hlt
loopne
loopne
arpl
jo
xchg
stos
in
push
push
lods
ss
movsb
andl
inc
xor
iret
adcl
or
inc
mov
shrb
lods
clc
fwait
and
mov
sub
mov
push
pop
aad
es
mov
daa
sub
mov
lsl
cmpsl
or
inc
sti
adc
clc
or
cli
shr
test
lods
xchg
movb
insb
xor
scas
int
inc
faddl
into
hlt
and
or
fidivs
mov
mov
sub
popa
popl
test
filds
mov
xchg
adc
mov
imul
aad
or
xchg
fs
push
xor
repnz
int
jmp
movsl
mov
loop
push
jns
mov
add
jbe
and
and
out
dec
xor
repz
dec
pop
loop
cmp
fdivrs
call
push
xchg
cmpsl
or
fimull
xor
push
dec
testb
in
mov
xlat
das
pop
lods
sti
dec
loopne
in
pop
addb
xchg
xchg
jns
push
xchg
inc
or
pop
repnz
int
repz
in
jle
sbb
inc
repnz
frndint
sub
cmp
or
leave
sahf
sub
ret
push
jo
mov
out
add
icebp
mov
adc
js
sbb
scas
popl
push
push
mov
js
adc
ljmp
pop
xor
aam
xor
adc
jmp
dec
cmpsl
push
cmpsl
or
xlat
sub
testb
nop
cli
stos
add
cmp
cs
mov
push
leave
in
xchg
arpl
int
fwait
xchg
push
fisubl
imul
push
je
xor
xchg
lret
cli
test
cmp
xchg
mulb
ror
add
push
mov
fstpt
popf
daa
adc
add
mov
nop
ret
cmp
mov
js
and
enter
pop
pop
or
xor
xchg
and
pop
call
mov
shl
inc
movsb
lds
or
jge
lods
call
cmp
inc
push
jle
mov
dec
pop
fs
pop
into
outsb
lock
mov
fwait
pop
test
mov
cmp
ljmpw
sti
insb
lret
or
cmp
jg
stc
jecxz
stc
ds
aaa
jg
aas
idivb
sahf
call
push
das
adc
bound
repz
sub
pop
mov
scas
xor
jg
mov
jmp
jnp
cld
lods
lods
std
out
sbb
das
xlat
daa
and
mov
testl
cmpsl
cld
mov
shlb
das
negb
cmp
into
aas
adc
push
push
cmp
stos
out
cmc
jo
stos
fiadds
inc
in
bound
loop
je
loopne
out
dec
dec
lcall
test
int3
test
aad
std
data16
and
loop
enter
and
add
push
rcrb
fildll
jle
mov
push
scas
xor
cli
pop
xlat
std
fsub
sub
jo
sbb
push
movb
lea
xor
popf
xor
aaa
adcb
clc
cld
sbb
fbld
sbb
sbb
sub
push
hlt
lcall
test
andb
add
sbb
aam
mov
pop
jns,pt
mov
pop
add
jg
push
pop
and
adc
mov
and
ja
push
out
adc
lods
mov
dec
add
push
cwtl
aad
xchg
sub
popf
fxch
fadds
jecxz
aas
ds
xchg
movsl
out
mov
stos
add
mov
arpl
mov
ljmp
and
ja
cmp
in
add
add
lret
push
rcl
cmp
cwtl
mov
and
dec
into
sbb
mov
pop
mov
dec
inc
xlat
ret
inc
xor
loop
jne
jbe
push
xchg
mov
mov
mov
mov
insl
mov
into
aas
lds
mov
fisttps
scas
or
iret
cli
xor
xchg
ljmp
pop
push
sub
cld
dec
test
cmc
cmp
jmp
adc
cmp
enter
lret
stos
shrl
inc
xor
push
movsl
pop
test
ss
cmpps
test
test
and
inc
enter
mov
arpl
mov
add
xchg
sub
pushf
mov
int3
ja
jae
js
arpl
scas
cmc
sbb
mov
pop
cmpsb
clc
aas
cmpsb
jmp
add
inc
or
inc
mov
pop
push
sub
and
xlat
lods
dec
pop
shlb
jo
out
les
ss
push
stc
xor
mov
dec
popa
aaa
xlat
out
pop
mov
rcl
shlb
jbe
lret
test
test
add
jne
adc
clc
push
pop
aam
cmp
jnp
cmp
jbe
movsb
stos
jge
loopne
adcb
js
mul
sbb
mov
jo
pop
push
cmp
das
in
push
outsb
xchg
insb
add
cmc
test
push
cmc
fldcw
xchg
xor
fwait
cmc
ret
lods
pusha
adc
lret
cmp
adc
push
mov
test
mov
lea
int
sub
movsb
cmp
pop
sbb
movsb
xor
aas
outsl
mov
pop
or
or
mov
push
daa
ficoms
stos
stos
aam
inc
and
movsl
mov
scas
add
gs
mov
jle
mov
xchg
cs
insb
push
mov
sarl
sbb
fsubs
es
dec
cmpsl
mov
movsl
in
sub
or
hlt
sbb
cmp
jge
lret
sub
jnp
mov
sub
outsl
sbb
popa
adc
outsl
push
xchg
mov
ljmp
outsb
fstps
xchg
clc
mov
jb
mov
scas
test
mov
out
cmp
jmp
cwtl
pop
xchg
fs
fmul
sti
xchg
loop
lds
nop
repnz
mov
cld
ljmp
shll
xchg
or
std
dec
mov
lahf
dec
add
aas
cmp
mov
push
mov
insl
in
jns
push
insl
jecxz
mov
outsb
push
or
sbb
inc
icebp
inc
divl
stos
pop
ret
andl
add
pop
fidivs
in
gs
pop
lret
cwtl
mov
pushf
js
loopne
movb
xchg
lret
ds
add
mov
mov
sub
mov
push
aaa
out
fwait
dec
cli
and
cmp
shl
call
cmpsl
fldt
pop
dec
mov
push
or
pop
jmp
push
test
cli
pop
std
repnz
test
mov
sub
sbb
jb
inc
sub
and
jns
imul
mov
mov
jmp
jb
inc
sub
and
jns
imul
fld
test
mov
subl
sbb
jae
inc
sub
and
jns
adcl
jecxz
mov
fldenv
imul
inc
sub
xchg
xchg
in
push
jg
outsl
jb
bound
push
insl
inc
inc
aas
das
psrlq
ret
iret
xchg
mov
mov
outsl
jb
bound
aas
add
xor
and
ret
repnz
iret
xchg
mov
mov
outsl
push
jp
or
sbb
sub
and
lret
push
loope
lods
mov
in
shr
cmc
cmp
xor
adc
inc
clc
add
repz
push
popa
cmp
jnp
mov
and
xchg
xchg
dec
shrl
mov
mov
mov
mov
push
pop
jmp
push
ficomps
ret
inc
mov
pop
fisubrs
test
and
mov
mov
add
xor
pusha
mov
in
mov
add
int
and
pop
and
add
sbb
push
cmp
add
lahf
iret
nop
fiaddl
cmp
rorb
and
punpckhdq
mov
mov
cmp
mov
sub
iret
mov
xlat
stos
shrl
mov
outsl
jb
bound
aas
adc
xor
cmp
lret
ljmp
scas
test
mov
outsl
pop
ss
es
push
fs
jg
and
lcall
xchg
fsubp
fadd
popf
iret
into
cmp
pop
adc
xor
setno
mov
cli
fbstp
ss
aaa
or
pop
aas
add
xor
and
sar
ret
iret
xchg
mov
mov
outsl
jb
bound
aas
add
xor
and
sar
ret
iret
xchg
mov
mov
es
adc
jle
pusha
xchg
xor
leave
repz
decl
imul
test
jp
add
dec
pusha
pop
mov
pop
adc
aas
pop
xorb
fiadds
jp
xchg
dec
jmp
xor
sti
movsl
push
sub
xchg
push
stos
push
mov
dec
ja
icebp
shl
jo
stc
add
xchg
outsl
inc
stc
inc
cmp
call
les
bound
jmp
int
push
fcoms
jecxz
xchg
hlt
push
push
jecxz
leave
add
mov
push
xor
imul
xchg
cli
inc
sahf
and
movsb
adc
gs
out
test
mov
popa
mov
xor
iret
int
sub
or
sti
jno
mov
jae
lcall
or
push
shl
fdivr
xchg
dec
push
xchg
outsl
orb
test
cmp
mov
popa
fidivrl
daa
push
rorb
subl
push
dec
xor
or
jnp
dec
mov
jne
leave
lock
je
imul
imul
popa
adc
loop
add
stc
mov
cli
inc
std
or
jbe
dec
sbb
das
push
outsb
aam
orl
mov
adc
push
pop
mov
popa
mov
cmp
or
or
scas
add
sub
cmpsb
lahf
push
push
rcrb
aam
or
sbb
mov
inc
pop
jle
rclb
cmp
fdiv
lahf
mov
mov
lahf
jecxz
jp
in
fldenv
fsubs
cmp
cmp
ja
mov
push
test
fiaddl
cmp
cltd
and
fnsave
cwtl
test
test
mov
je
sbb
aas
ret
and
xchg
scas
xor
inc
fnstsw
les
insl
mov
cmp
inc
loope
sub
dec
leave
push
repz
aam
or
cmp
adc
and
pop
mov
sub
cs
into
add
loopne
mov
movsb
jne
mov
xor
mov
and
push
jns
or
int
xchg
popa
sbb
push
loop
xchg
add
imul
jle
ds
xor
stos
int
adc
and
cmp
in
push
sbb
fmul
fwait
jle
dec
int
sbb
int
jnp
cmp
mov
jp
cmc
sbb
int3
test
mov
and
dec
jo
ja
cs
mov
in
or
push
and
xchg
sti
adc
xor
das
fldcw
cs
lret
fisubl
fistl
sub
inc
push
dec
sbb
and
push
xchg
xchg
imul
stos
sbb
js
jae
stc
icebp
aas
hlt
lock
cmp
call
repz
inc
mov
jge
push
outsl
push
cmp
fistps
push
pop
in
ljmp
add
in
in
mov
and
adc
ljmp
jbe
cmpsl
test
repz
sub
ds
add
jo
jns
or
push
hlt
or
xchg
jmp
movntq
out
pushf
pop
insb
mov
mov
add
fwait
mov
cmpsb
mov
xor
sbbl
daa
push
mov
std
cmp
cmpsl
fadds
and
stos
insl
jb
and
add
mov
xor
fsubs
xchg
nop
jecxz
and
pop
mov
push
pop
push
gs
ss
loopne
push
nop
jg
adc
add
sbb
js
pop
mov
sarl
test
rcl
push
xchg
jnp
jbe
xchg
dec
inc
fildll
daa
xlat
dec
jp
push
inc
push
rcr
test
xchg
sub
gs
lds
iret
inc
push
or
mov
scas
jecxz
jnp
ds
pop
sbb
cld
imul
fwait
cltd
out
adc
test
inc
mov
call
pop
pusha
sti
cmp
in
push
subl
enter
rcll
adc
inc
std
pop
pusha
fxch
xor
sahf
movb
ficomps
jns
int3
jae
lahf
sub
fwait
cmp
into
xorb
stos
sub
push
pop
jnp
and
cmpsl
in
add
test
test
adc
xor
jmp
mov
cmc
paddb
sbb
scas
mov
xchg
xor
imul
jle
loope
jno
sub
ss
lds
and
add
inc
cmp
cmc
fsubp
dec
push
gs
repz
lods
jge
les
sub
stc
sahf
push
cwtl
xor
xor
gs
jl
push
push
fcoms
xchg
loop
xchg
ret
pop
addr16
daa
dec
mov
fisubs
iret
imul
movb
int3
lcall
and
pop
inc
xchg
mov
ss
push
xor
arpl
and
or
rdmsr
fdivrl
inc
rorl
mov
in
lods
sub
jno
cli
jecxz
push
aaa
push
cmp
int3
and
xchg
jb
mov
call
adc
add
mov
pop
insl
inc
xor
pusha
fstp
cmp
mov
les
repz
test
dec
aas
sbb
faddl
push
clc
int
mov
insl
lods
mov
aam
mov
cli
lods
daa
adc
xchg
xor
sub
stc
cmc
mov
popf
jns
lds
inc
testb
mov
lods
pop
adc
repz
out
push
push
push
jp
pushf
sub
dec
dec
lcall
mov
loop
cmp
rclb
cmpsb
or
ljmp
addb
cltd
mov
adc
xlat
dec
bound
jle
sub
clc
or
mov
clc
psllq
rcll
es
cmp
adc
xchg
push
outsl
mov
mov
cmp
adc
lock
cmp
movq
mov
mov
sbb
sub
xor
icebp
add
insl
fstpt
xchg
inc
and
rcll
sbb
ja
aaa
jnp
imul
jge
jb
inc
jl
sbb
out
mov
or
mov
adc
bound
sub
stc
push
aad
test
leave
cmpb
scas
mov
imul
inc
adc
xorl
sbb
inc
cmp
inc
adc
loopne
xchg
dec
adc
sub
mov
das
push
in
or
aam
xchg
inc
mov
sbb
xchg
sub
cmc
imul
shr
cli
inc
repnz
sub
and
mov
jmp
jns
inc
sub
add
push
pushf
inc
xchg
inc
test
push
inc
bound
xor
xor
mov
mov
pop
sub
adc
inc
sub
adc
ret
adc
cmp
inc
jbe
xor
sub
jno
add
inc
leave
cli
mov
pop
pop
adc
cmp
dec
adc
shufps
mov
cmp
mov
mov
in
jae
lret
mov
inc
aas
sub
xchg
rorb
fsubl
cltd
xchg
push
xor
mov
push
vtestpd
jmp
push
fildll
push
dec
in
add
insl
jmp
add
xor
mov
fcompl
push
or
push
scas
mov
mov
pop
mov
in
mov
mov
hlt
dec
sub
call
insl
and
mul
xor
inc
ret
js
sub
mov
mov
push
mov
cmp
mov
push
adc
fwait
xchg
addr16
xor
nop
and
bound
insl
or
cs
enter
push
shrl
inc
lds
rcrb
fisttps
sbb
sub
mov
fdivs
pop
jne
js
fidivs
shrb
mov
mov
nop
movsb
sub
ret
xchg
mov
bnd
enter
pushf
std
inc
stos
jp
sub
mov
inc
cmp
adc
jge
mov
int
cmp
xor
stc
out
ljmp
pop
data16
mov
fsubrl
decb
sbb
jl
es
repz
xor
pop
dec
sub
das
mov
ret
sbb
jnp
or
pop
or
dec
sarl
push
pop
add
sbb
mov
ja
xor
xor
fcmovne
push
lahf
sub
adc
cltd
lret
sbb
lea
dec
popa
in
cmp
das
divl
xchg
push
enter
push
dec
and
inc
pushf
popa
push
scas
cmp
loope
in
hlt
hlt
stos
mov
ds
push
test
fwait
inc
loopne
sbb
jl
sbb
ja
lock
stos
dec
int3
aam
push
lret
stos
xchg
dec
adc
enter
aam
gs
enter
dec
cmpsb
inc
mov
xchg
lcall
pop
xchg
fildl
test
js
xchg
add
out
dec
xchg
push
sbb
push
enter
mov
movsb
pop
andl
sub
xchg
inc
jb
and
cmpsl
jno
or
xor
imul
out
push
pop
aas
fcmovne
cld
push
xchg
xchg
dec
push
fsubrp
jb
xchg
xchg
fists
xor
jno
out
pop
clc
outsl
mov
sbb
add
adc
mov
call
sub
adc
fisttpl
cld
ja
es
fsubrs
cwtl
push
fcomps
mov
sub
jecxz
pop
add
lods
fisubl
outsb
sbb
mov
add
leave
into
cmp
jo
lcall
pop
insl
leave
or
push
test
sar
sub
dec
mov
dec
lahf
or
sub
lock
and
imul
xchg
iret
cmp
ss
sarl
dec
push
xor
mov
dec
or
sbb
das
int
hlt
aad
cwtl
jg
mov
push
dec
mov
sarl
aam
cmc
int
jo
cltd
in
popa
lods
mov
xchg
add
lock
outsb
aad
mov
add
pop
cmp
ljmp
push
push
cwtl
test
fisubrl
js
cmpsl
cwtl
inc
lahf
scas
fistpl
push
fiaddl
sub
xchg
das
test
dec
arpl
mov
dec
cmp
mov
addr16
stos
jecxz
dec
and
jg
and
jge,pn
hlt
and
je
mov
sti
and
add
mov
inc
xchg
sbb
jno
jbe
iret
lods
aas
add
xchg
pop
pusha
and
adc
out
xchg
mov
ficoml
mov
movsb
xor
mov
add
sbbb
dec
xchg
pop
push
push
and
fs
pop
test
dec
ds
xor
imul
jbe
push
sbb
mov
pop
dec
mov
add
inc
add
fsubl
lret
cwtl
les
mov
rcrl
xor
xlat
insb
inc
loop
ljmp
movsb
lea
xchg
rol
ret
sub
imul
ds
mov
loope
mov
lods
jne
add
andl
jmp
sbb
cmp
mov
cmpsl
cmpsb
rol
in
mov
sbb
pop
aam
sub
into
mov
mov
iret
add
dec
ss
fwait
loopne
xor
in
pop
outsl
imul
cmpsb
jg
out
add
popa
cwtl
test
and
cmp
inc
fsubrl
fadds
fucomip
and
aaa
fdivr
je
push
das
das
or
es
fimuls
out
subb
jle
fs
inc
mov
mov
imul
push
cmpb
add
adc
pop
xor
data16
es
xchg
add
cmc
lods
rolb
jp
cmp
dec
xchg
int
dec
cmp
outsb
xor
dec
inc
xchg
lret
push
pop
fldenv
and
std
inc
mov
inc
xor
push
sub
or
adc
mov
lahf
repnz
sbb
ljmp
jmp
pop
out
xor
sbb
into
out
bound
dec
arpl
mov
mov
dec
or
in
aam
dec
mov
dec
sub
jge
sbb
or
jnp
ret
test
mov
add
sub
jb
sub
icebp
int3
sbb
and
fisubl
lods
xlat
cmpsl
data16
aas
lea
pop
test
push
add
dec
mov
sahf
cmpsb
lods
fldenv
and
xor
jnp
jns
mov
xor
outsl
fdiv
cld
addl
add
aad
lret
xor
or
mov
fmull
and
sbb
inc
out
xor
lods
repz
fld
xlat
pop
mov
mov
out
ret
popa
notb
and
cmp
movsl
pop
ss
or
frstor
mov
or
mov
push
stos
scas
xchg
pop
or
sub
inc
or
outsb
out
or
xchg
loope
cmp
dec
push
dec
fldenv
or
and
sub
inc
incb
shlb
mov
icebp
inc
push
adc
movaps
xchg
jbe
mov
jae
aad
and
out
test
or
stos
js
dec
cld
mov
movsb
inc
in
shrl
daa
push
out
int3
pop
loop
test
cs
sahf
inc
xchg
pop
lds
mov
push
icebp
pop
test
repnz
pusha
lret
js
and
fsubs
cmp
fidivrs
push
and
push
mov
cs
cld
mov
inc
or
mov
leave
mov
push
adc
mov
or
add
push
xor
shl
into
xor
sub
fisttpll
sarl
bound
test
xor
or
mov
cmp
je
mov
mov
cmp
popa
mov
mov
scas
jb
push
lret
push
pusha
or
xor
pop
pop
xor
iret
mov
xchg
push
mov
xor
repz
and
jbe
imul
imul
inc
jle
aas
mov
push
int
imul
pop
mov
fcmovu
loopne
outsb
dec
loope
sub
pop
stos
adc
inc
xor
setle
daa
inc
int3
xchg
pop
out
adc
jno
stos
fists
lock
cld
subl
sbb
mov
filds
dec
push
jnp
mov
rcr
data16
dec
popf
nop
test
or
mov
xchg
xor
xchg
inc
rorl
pminsw
mov
add
out
dec
out
aas
in
shlb
sub
cmp
adc
add
cmp
mov
arpl
adcb
test
cld
int3
stos
jg
xorb
stc
mov
pop
inc
je
ds
dec
daa
push
cmp
cmpsl
leave
jmp
sbb
mov
outsb
mov
inc
addr16
mov
xchg
pop
shl
test
xchg
sub
movsb
rcrb
outsl
in
dec
xchg
adc
xchg
jo
js
or
xlat
mov
jnp
fwait
cmp
inc
and
js
cs
adc
inc
jno
mov
mov
andl
lcall
mov
mov
push
fidivrl
mov
and
data16
cmc
in
ja
adc
daa
daa
xlat
scas
hlt
mov
adc
xchg
push
test
jl
add
cmpsb
push
lea
hlt
push
sub
cs
dec
fidivl
aad
mov
icebp
or
cmp
notl
or
mov
das
icebp
dec
mov
push
push
outsb
gs
add
jp
xor
fistl
or
dec
loope
jg
lret
xor
mov
lret
fcoml
push
mov
dec
adc
push
movsl
cmp
xor
jmp
pop
and
sub
adc
jge
jb
mov
pop
xchg
addr16
adc
mov
fcomps
mov
inc
movsb
add
mov
test
add
pushf
inc
mov
stos
mov
shrb
and
inc
outsb
fisttpl
jo
aad
in
in
mov
inc
mov
ret
int
iret
out
jbe
ret
fimull
cmpsl
jae
subl
daa
push
int
icebp
pop
inc
repnz
xor
or
mov
mov
pop
pop
pop
mov
das
leave
stos
jae
mov
adc
movsl
sahf
xor
mov
daa
and
inc
mov
xchg
into
out
and
cmc
pusha
mov
das
imul
sbb
and
or
lret
gs
test
xchg
mov
xchg
cmp
sbb
div
xlat
lds
cmp
rcrl
cmpsl
mov
loope
pop
adcl
sub
mov
pop
or
fildll
test
lahf
jmp
adc
cld
mov
pop
iret
pop
dec
cwtl
std
cmp
adcl
popf
pop
stc
and
pop
je
das
xchg
mov
mov
cltd
mov
jle
pop
dec
lods
mov
movhpd
push
push
and
out
pop
and
test
shrl
jbe
and
or
mov
andb
push
repz
int3
lahf
add
mov
sub
hlt
cmpl
test
mov
pop
mov
nop
mov
adc
mov
xchg
gs
or
mov
add
push
testb
out
xchg
test
lock
leave
and
adc
ds
outsb
sub
jne
and
loope
pop
jne
cmp
cmp
out
fwait
rdtsc
jns
mov
fninit
js
push
jns
int
test
xor
push
scas
pop
xor
jp
push
mov
out
test
testl
iret
movsl
xchg
repnz
sub
jmp
inc
jb
fistps
and
repz
movsl
mov
aad
addl
rol
imul
scas
rorl
lret
mov
add
loope
sub
aaa
jns
sub
push
xchg
stos
inc
gs
mov
inc
mov
mov
pop
in
xor
mov
scas
pusha
xor
sbb
sbb
mov
lea
xchg
testb
iret
dec
outsl
lret
xchg
arpl
je
mov
out
cmp
add
hlt
cmp
negb
push
out
test
pop
out
adc
dec
mov
ret
iret
out
and
cs
adc
mov
cmovle
iret
jo
and
mov
dec
cmp
out
sbb
incb
fmull
pop
mov
mov
or
cwtl
cmpsb
mov
je
lds
pop
xchg
pop
inc
pop
push
insl
cmp
lcall
sarl
and
cmp
sti
int3
dec
mov
out
push
mov
mov
sub
pop
jecxz
push
popf
ficomps
cli
cmp
sbb
inc
xchg
fs
jle
mov
pusha
fs
pop
iret
adc
shll
stos
mov
gs
arpl
add
mov
stos
imul
push
test
xor
add
dec
hlt
lock
xor
add
sbb
faddl
jbe
ret
jmp
data16
leave
cltd
int3
call
sahf
pop
loope
and
in
aaa
mov
loope
popa
adc
push
xor
xlat
sbb
les
inc
pop
lods
jae
jne
xor
lret
or
stc
andb
lahf
jle
inc
nop
cld
call
or
push
add
pusha
cltd
mov
fists
jb
sti
nop
jns
aad
mov
fistpll
xchg
sub
push
fadds
and
and
call
jae
adc
mov
push
pop
add
test
test
outsl
cmp
lret
or
and
add
jmp
into
clc
lret
out
orb
fistps
inc
fdivs
mov
ja
cli
imul
bound
test
jmp
pop
sbb
pop
cmpsb
jb
int3
test
lahf
mov
mov
xchg
sti
push
dec
sbb
cwtl
adc
insb
mov
add
arpl
inc
rolb
ret
inc
xor
inc
adc
popa
push
stos
jmp
or
pop
fcmove
insb
sub
lods
test
fcom
push
es
xchg
push
pusha
mov
pop
mov
mov
mov
push
mov
cmp
jge
ja
imul
dec
imul
jg
xor
outsb
xchg
repnz
xchg
push
xlat
xchg
mov
jp
mov
mov
negl
pop
pop
cmp
mov
mov
dec
fisubrl
clc
sbbl
mov
mov
adcb
inc
mov
push
in
xchg
test
jmp
mov
xorb
je
fs
insl
inc
adc
scas
and
add
pusha
mov
mov
dec
adc
mov
fnstcw
fs
iret
cmc
jecxz
inc
pop
daa
fisubrs
in
rcrl
mov
mov
jno
into
ret
shrl
outsl
push
loop
repz
inc
sbb
pop
in
fnstcw
mov
inc
and
loope
xor
xchg
inc
cmp
add
push
mov
fbld
pop
negl
cmp
jmp
sahf
outsl
js
bound
aas
add
xor
and
sar
ret
iret
xchg
mov
mov
outsl
jb
bound
aas
add
xor
and
sar
ret
iret
xchg
mov
mov
out
jb
bound
aas
add
sarb
out
repnz
iret
xchg
mov
mov
outsl
jae
bound
aas
add
mov
mov
inc
pop
mov
dec
pusha
pop
jo
fnstenv
inc
push
push
xchg
cmp
inc
pop
and
jl
cmpsb
cmpsb
repz
xchg
xchg
mov
xchg
je
jae
jae
push
push
and
cli
add
and
cmpsb
repz
cmpsl
xchg
xchg
mov
xchg
ss
scas
dec
adc
pop
sub
test
dec
jecxz
clc
aad
fldenv
lahf
lock
adc
jae
cmp
std
xor
mov
movsl
or
inc
aas
xlat
sbb
mov
daa
inc
pop
inc
stos
in
int3
mov
push
ficoml
orl
out
fiadds
outsl
push
pop
out
daa
jae
or
cmp
xor
loopne
fucom
sub
xchg
or
pop
div
sub
push
mov
arpl
mov
es
jmp
adc
ret
mov
push
out
or
jp,pn
xorl
ficomps
push
daa
xchg
jae
repz
dec
add
cmc
or
inc
rcll
push
xlat
imul
out
mov
fisubrs
and
stos
sbb
or
cmp
rorb
arpl
xchg
push
mov
addb
sub
pushf
or
cli
and
jo
xchg
lret
lret
add
mov
es
aaa
cmp
pop
sbb
das
jle
xchg
loopne
repz
mov
and
divb
es
xor
pop
inc
outsl
sub
loope
repz
jecxz
icebp
mov
mov
or
jno
push
push
jne
add
jbe
inc
adc
cmpsb
repz
xchg
xchg
mov
xchg
arpl
jae
inc
push
push
push
and
jbe
inc
adc
cmpsb
repz
xchg
xchg
mov
xchg
arpl
mov
sbb
pop
push
mov
data16
loopne
cmp
test
out
push
ds
not
scas
mov
lcall
divb
sbb
cld
es
sub
lea
mov
shlb
popa
cmc
addr16
inc
loopne
mov
cmp
xchg
sub
jge
lea
mov
aad
and
jo
mov
pop
sub
mov
dec
inc
ds
imul
mov
jge
dec
sbb
push
mov
shll
cs
add
dec
add
mov
into
push
movsb
jo
inc
jecxz
lock
inc
adc
inc
pop
cmpsb
out
fdivs
popa
in
fwait
iret
push
addr16
pop
mov
jle
popf
lcall
inc
das
push
inc
sub
outsb
adc
fsubrs
pop
std
mov
divb
xchg
mov
fnsave
icebp
dec
push
stos
mov
loope
ljmp
push
sbbb
add
adc
pop
lcall
xor
ds
xchg
jns
adc
in
aas
add
or
or
decb
inc
pop
sti
push
inc
mov
jg
out
repz
test
stc
cltd
ret
cmp
lods
int3
pop
sbb
std
adc
imul
jecxz
dec
inc
scas
xor
stos
or
daa
rcrb
add
out
mov
sbb
sub
shll
jl
push
cld
mov
shll
push
movsl
add
sub
movb
sbbb
subl
negl
test
sub
mov
dec
jmp
mov
gs
in
sti
push
insl
jne
cmp
cmp
in
lods
add
inc
icebp
mov
sub
in
shll
rclb
jns
dec
ss
test
enter
cltd
fldenv
jb
dec
int
add
insb
mov
pop
adc
std
or
pusha
xchg
ja,pn
pushl
lret
cmpsb
mov
shlb
loope
popf
data16
or
or
ret
insl
cmp
mov
sbb
jb
ja
mov
popf
dec
ss
popa
jge
cs
xchg
scas
ja
push
mov
out
ficoml
sahf
out
in
add
fs
mov
inc
cmp
lret
pop
popa
stos
js
cmp
loopne
mov
jge
push
sbb
mov
and
or
inc
xor
mov
mov
addb
push
push
mov
xchg
jl
xor
popa
test
xchg
adc
jb
outsl
add
cmp
iret
fwait
popf
rcrl
push
movsl
ss
or
xor
loop
inc
movsb
rcl
add
rorl
mov
xor
and
mov
mov
mov
sub
xchg
rol
mov
or
hlt
mov
lret
or
lods
les
or
pcmpeqb
sub
popa
xor
popf
pop
in
int
push
shll
test
sub
outsb
cmp
jae
mov
mov
lods
addr16
frstpm(287
inc
imul
cmpsl
push
or
mov
and
in
jns
pop
les
pusha
inc
adc
dec
cmp
jnp
neg
nop
out
in
mov
rolb
out
into
xchg
ds
xor
xor
inc
mov
into
cwtl
jp
fcoms
adc
lret
sbb
cmpb
push
js
insb
sub
cs
std
mov
jge
test
fcmovne
xor
add
dec
out
or
cmc
pop
nop
adc
jbe
push
dec
scas
adc
lock
in
dec
and
das
ds
inc
test
aam
scas
adc
xchg
data16
mov
push
pop
scas
cmp
fs
orl
dec
and
scas
sub
add
popa
lret
sbb
mov
push
mov
lea
add
pop
daa
loopne
cs
mov
fstl
and
fsubl
xor
sbb
pop
jmp
mov
push
and
jns
mov
divl
mov
ds
icebp
popf
jge
out
testb
movsb
fcomps
lods
adc
in
mov
gs
outsl
adc
pop
pop
mov
cmpsb
or
or
sbb
mov
aad
push
sub
int3
enter
cmp
insb
inc
inc
out
in
cmp
mov
in
sub
hlt
mulb
mov
lods
pop
xchg
mov
dec
out
sti
lods
mov
nop
inc
mov
lock
and
pop
or
cmpl
push
pushf
nop
jmp
out
sbb
cmp
or
dec
dec
sbb
stos
test
ret
add
les
cs
xchg
cwtl
add
or
enter
mov
push
mov
xchg
cmp
fwait
js
leave
mov
lahf
hlt
add
xor
aam
push
into
test
cmpsl
mov
mov
or
push
push
xor
xor
fwait
pop
ljmp
xor
scas
lods
sbb
add
pop
jae
mov
rolb
shl
jge
sub
sbb
add
push
aad
aad
cmp
xchg
ret
test
adc
jo
popa
sti
push
mov
jmp
xor
cmp
ficompl
push
cs
mov
mov
mov
call
stos
inc
inc
notb
xor
addr16
xchg
fs
shlb
lret
push
jne
cmc
scas
fadds
icebp
test
push
mov
fdivrl
push
jl
in
mov
lods
mov
and
sahf
jbe,pt
lret
fnstsw
in
or
stos
cmpsl
cmpb
js
and
in
pusha
push
dec
dec
xchg
pop
xchg
inc
jne
iret
mov
add
jmp
and
mov
stc
sbb
in
cmp
pop
mov
stos
iret
dec
jnp
fcmovb
cmp
jno
xchg
negb
aas
jne
jbe
pusha
push
out
xchg
bound
pop
sbb
cmp
xor
fstpt
bound
lahf
sub
mov
pop
fwait
xor
xchg
jecxz
mov
sbb
cli
cmp
mov
clc
xor
xor
xor
dec
enter
cltd
mov
push
mov
push
xchg
sub
dec
push
icebp
jbe
insl
add
add
test
or
push
sbb
xchg
outsb
push
xchg
inc
mov
sbbl
or
or
push
daa
icebp
lods
pop
xlat
jo
add
push
mov
adc
cmp
gs
push
push
or
sub
lea
bound
dec
fisubrs
cli
ficoml
push
add
in
jnp
sti
cmpsl
sbb
jp
shll
dec
outsl
lods
add
sbbl
cmpb
insl
cmp
pop
lock
repz
cld
sub
bound
test
mov
out
sti
in
pop
xor
and
push
pop
lret
pop
out
lret
rcll
sub
icebp
cwtl
bound
lahf
popa
imulb
imull
jae
dec
jne
sub
jl
ret
mov
and
out
fwait
inc
cmc
or
in
mov
push
dec
in
jns
mov
mov
and
jmp
cmp
push
pusha
sub
push
lds
or
ljmp
pop
add
cmpsl
lret
xchg
cld
jbe
cmp
xchg
inc
push
add
mov
fwait
and
push
push
or
push
lret
lret
xchg
sub
and
pusha
jp
cmp
adc
popa
test
cli
xorl
xchg
imull
push
jle
daa
pop
push
lahf
sbb
mov
xchg
movsl
push
nop
pop
daa
fisttpl
adc
das
in
ret
out
mov
out
xor
cmp
sbb
adc
mov
flds
xchg
push
fwait
jb
addr16
dec
imul
pop
sbb
sbb
dec
mov
sub
cmp
test
cmp
cmp
cmpsl
mov
mov
rcll
push
sbb
scas
repnz
xchg
sub
jecxz
push
out
pop
sub
sahf
inc
xchg
mov
outsb
dec
out
fnstsw
sub
fidivl
in
mov
inc
clc
sbb
or
xchg
inc
push
dec
dec
adc
xchg
outsl
bound
jecxz
mov
addr16
mov
mov
je
cld
push
push
mov
sub
popa
xchg
sbb
and
pop
insl
lret
clc
inc
push
gs
popf
loopne,pn
sbb
sbb
iret
in
or
imul
js
andl
pop
xor
or
jno
add
cld
cli
mov
add
xchg
inc
xchg
outsl
xor
mov
jb
out
hlt
test
mov
subl
ret
mov
rep
out
jnp
mov
adc
les
cmp
sahf
ljmp
loopne
jns
sti
dec
into
pop
test
add
addb
or
fldenv
lret
sarb
jb
rcl
xchg
fs
sub
loopne
pop
add
sti
mov
cmp
sub
mov
fwait
or
xor
nop
popa
cmc
sti
adc
loopne
test
rcrb
push
nop
ss
rcll
pop
dec
sbb
push
adcb
and
push
outsl
jb
into
xchg
or
cmp
inc
add
mov
sub
dec
leave
jno
bound
stos
mov
ja
test
stos
add
das
adc
dec
pop
adc
aad
daa
ret
fidivs
mov
sahf
hlt
adc
idivb
lods
jnp
call
mov
xchg
ljmp
ficoml
ror
fisttpl
ja
lret
cwtl
or
aas
out
mov
lcall
lods
outsb
mov
pusha
xor
sbb
icebp
or
inc
sbb
xchg
sub
ret
test
mov
dec
and
add
loop
or
in
mov
inc
sbb
xchg
pop
jne
pop
and
mov
in
adc
mov
hlt
adc
cmp
and
xchg
arpl
inc
popf
push
negb
movsl
xchg
shlb
adc
lret
mov
xor
push
and
lret
nop
inc
arpl
es
push
mov
and
ljmp
and
sbb
sub
out
sbb
jns
jmp
mov
ja
test
orb
in
add
jns
mov
inc
jmp
push
cld
push
xor
popf
in
call
mov
sbb
test
in
push
adc
add
adc
test
mov
lahf
sub
shll
xchg
out
lahf
or
mov
mov
mov
xor
pop
mov
or
test
lcall
clc
add
idivl
sub
dec
sbb
movsl
popf
inc
xchg
push
dec
pop
or
loop
mov
ret
xor
mov
rcll
in
adc
sbb
cmpsb
stos
add
jp
adc
add
or
add
ret
mov
pop
xor
xor
add
cmc
push
push
inc
cmp
push
pusha
gs
push
aam
jno
inc
jns
xor
lahf
adc
mov
push
js
ds
sbb
push
xchg
adc
sub
jo
loop
cli
iret
pushf
lods
stos
das
pop
pop
jl
std
xchg
add
gs
mov
xlat
cli
adcl
les
xor
sbbb
dec
rclb
dec
inc
popf
or
mov
mov
sub
pop
arpl
loopne
sbb
cmp
mov
adc
mov
mov
sbb
out
add
sbb
test
and
mov
add
cwtl
adc
decb
mov
cmp
xchg
rcrb
cmp
push
pusha
mov
nop
test
adc
ret
add
inc
push
popa
jno
stos
leave
or
ret
imul
cs
and
dec
call
or
fbstp
adc
xor
in
aam
add
and
aad
jmp
jno
add
sub
call
imull
addr16
je
outsl
ret
std
lcall
dec
aam
pusha
mov
outsb
dec
inc
in
loop
adc
adc
aad
das
sbb
fwait
mulb
adc
insl
mov
lahf
push
xchg
test
bound
sub
mov
cmp
mov
out
mov
mov
mov
loop
sarl
sbb
sarl
loopne
or
inc
shl
jmp
fnstcw
into
cmp
mov
sbb
hlt
xchg
push
mov
and
out
cmp
add
les
pop
fwait
cmpsl
adc
repz
test
mov
inc
fwait
mov
std
jecxz
test
mov
mov
in
pushf
mov
mov
cmp
pop
add
jns
push
gs
insb
movsb
clc
pop
lea
mov
sbb
hlt
and
mov
push
add
cmp
sbb
mov
add
negb
or
sub
daa
rolb
test
leave
add
dec
pop
dec
or
push
je
loopne
sub
cmpsb
notl
sub
call
mov
add
mov
xor
pop
testb
and
jmp
inc
inc
les
push
mov
xchg
add
xor
xor
lret
leave
in
inc
mov
jnp
adc
addr16
pop
je
aam
imul
push
rclb
xchg
mov
iret
and
outsb
fldl
pop
push
cmp
or
push
jg
lea
imul
mov
jl
mov
dec
adc
push
pop
jp
ss
add
into
sti
hlt
or
inc
imul
push
lods
roll
nop
jnp
sub
inc
jne
imul
pop
ljmp
cmpsl
testl
outsb
punpcklbw
sbb
aaa
roll
in
fsub
push
fs
xchg
sahf
xor
imul
sub
pop
mov
cmp
or
rorb
data16
cmp
aad
lcall
imulb
pop
inc
fistpl
cmp
jns
mov
pop
pop
xchg
xchg
and
jecxz
lock
sbb
gs
repz
fidivrs
sarl
push
mov
xor
cltd
out
or
sbb
out
push
jbe
mov
stos
mov
dec
cmp
into
arpl
in
nop
int3
cwtl
pop
notb
pop
aad
and
xchg
cwtl
scas
js
push
cmpsl
int
push
cli
movsb
addr16
into
mov
sub
fidivrl
sbb
jns
lods
push
shll
sbb
loope
loopne
imul
jne
inc
repz
cld
push
out
or
and
sti
rcll
ja
mov
xchg
xor
stos
mov
mov
jmp
cmp
gs
shrl
pop
fwait
mov
lcall
mov
sbb
and
push
movsl
sahf
dec
push
sbb
pop
mull
test
xchg
push
loopne
pop
mov
xor
cmp
stc
icebp
add
sahf
aad
cmp
in
sub
test
sbb
div
shll
repz
sbb
shll
sarl
fcoms
inc
mov
rcrl
dec
addb
mov
mov
aas
movsl
pop
cmp
movsl
arpl
enter
xor
xchg
push
inc
pushf
ficoms
outsl
shl
mov
inc
adc
mov
in
dec
or
xor
and
pop
jmp
bound
cmp
cmp
test
mov
sbb
mov
or
std
push
inc
loopne
fwait
push
mov
cmpsl
popa
mov
pop
pop
test
into
cmpsb
clc
mov
ficompl
fisubs
add
sti
dec
mov
fdivr
xchg
mov
pushf
sti
sarb
dec
jp
repz
aaa
imul
or
ror
xlat
fcmovnb
fs
dec
add
push
add
test
call
in
cltd
lret
or
push
xchg
bound
mov
push
and
out
fisubl
inc
dec
add
inc
movsl
or
xchg
in
cmp
out
ss
jo
sub
inc
test
idivl
outsl
inc
call
shll
xor
test
sarb
mov
jnp
mov
cmp
mov
and
lahf
pop
aam
xchg
div
sub
int
mov
sbb
adc
mov
and
or
cmc
pop
fcoms
mov
fildl
sub
jae
mov
push
pop
mov
jl
test
cmpsb
sub
jmp
mov
inc
and
arpl
imul
cmpb
mov
xchg
mov
enter
fisttps
or
sub
out
stos
push
test
ret
enter
mov
mov
mov
adc
insl
sbb
add
stc
xorl
mov
xor
jnp
clc
iret
dec
popa
xchg
daa
mov
mov
push
insb
add
fldenv
shll
sarl
push
es
mov
dec
repnz
sbb
insl
add
xchg
and
int3
xchg
icebp
sub
daa
mov
jp
jecxz
data16
dec
cmp
arpl
or
in
mov
fsubrl
aas
lret
stos
divb
mov
fsubr
cmp
inc
mov
cmpsl
mov
xchg
add
rorl
cld
and
inc
or
xchg
int3
call
imul
clc
sub
xor
sub
adc
mov
fnstcw
push
mov
int
mov
push
sbb
jg
mov
mov
adc
cmp
lcall
mov
dec
pop
sub
lods
inc
stos
adc
loope
mov
int3
lret
shlb
add
mov
scas
inc
out
ljmp
jecxz
push
test
fwait
adc
addr16
data16
lods
xchg
das
xchg
xchg
jecxz
jmp
mov
inc
scas
jge
push
aaa
mov
int3
cmp
js
dec
inc
dec
call
add
push
push
hlt
mov
jne
pop
sbb
push
cli
sahf
fldenv
leave
jmp
into
out
fadd
fmul
adcb
jno
jg
and
lret
cmp
pop
xchg
outsb
jbe
sbb
push
aaa
pushf
xor
data16
jns
repz
push
outsl
std
xchg
int
push
push
insb
ljmp
out
out
rcrl
scas
and
jo
fmul
les
fs
cltd
popa
and
imul
cmp
out
rcll
mov
pop
xor
adc
and
ja
loop
mov
adc
adc
dec
adc
cli
add
in
scas
iret
push
mov
bound
stc
in
xor
sub
outsl
cmp
frstor
pop
and
lock
cmp
mov
popf
fists
out
jge
pop
lea
xchg
imul
fidivl
push
ljmp
int
arpl
jecxz
inc
aam
jae
les
push
sbb
add
popa
popf
pop
cwtl
fistpll
xor
add
mov
fucom
aaa
mov
mov
clc
movsl
mov
xor
fdivrl
pop
xchg
aaa
in
sahf
jns
jmp
xchg
and
mov
and
sbb
dec
popa
xchg
and
popf
mov
cmp
lock
xor
sbb
push
lock
mov
arpl
aas
in
ja
jecxz
call
xor
leave
lods
scas
cmpsb
xor
insl
push
pop
add
jns
push
scas
jg
xchg
push
mov
push
das
and
mov
out
pop
xlat
or
pop
clc
fnstsw
arpl
dec
repnz
cltd
inc
divb
sbb
flds
cltd
jl
push
add
cmp
sbb
jne
gs
fld1
sub
xchg
pop
lahf
jl
je
test
movb
sti
cmpl
cmp
lods
xchg
or
rcll
inc
inc
imul
in
popa
jbe
sub
add
or
push
dec
aaa
test
sbb
push
fmuls
sub
and
adc
jle
add
in
dec
cwtl
fwait
sbb
xorl
clc
sbb
popf
andl
inc
mov
dec
outsl
xchg
jmp
sahf
pop
mov
lret
push
out
jne
fldz
rcl
sbb
stc
dec
pop
push
cltd
movsl
movsl
scas
in
sbb
cmp
ja
iret
sbb
addb
fwait
sub
adc
out
gs
rcll
xchg
je
cltd
lret
pop
add
add
push
imulb
xor
pop
xchg
gs
mov
ds
pushl
pop
mov
fwait
jo
xchg
xor
mov
fistpl
xor
ret
push
adc
jb
loopne
adc
out
cmp
inc
mov
out
xchg
fldcw
fwait
test
stc
add
mov
xor
in
adc
in
cmpl
fnstsw
push
push
push
xor
inc
pop
dec
dec
mov
sbbl
dec
in
mov
imull
mov
shrl
push
and
jbe
inc
adc
cmpsb
repz
xchg
xchg
mov
xchg
arpl
jae
inc
push
push
push
and
jbe
inc
adc
cmpsb
repz
xchg
xchg
mov
xchg
arpl
jae
inc
jle
push
and
fiadds
inc
adc
jle
mov
xchg
xchg
mov
out
push
es
ss
push
pop
and
jbe
xchg
push
sbb
or
imul
insb
sub
cwtl
sub
mov
sbb
mov
sub
cmp
pop
jmp
fstpt
push
sbb
imul
clc
dec
pushf
mov
cmp
dec
fstpt
push
sbb
imul
loopne
repnz
inc
mov
pop
test
or
clc
sbb
addr16
mov
loopne
push
sbb
inc
adc
sub
xchg
adc
mov
clc
test
mov
inc
out
mulb
xlat
add
ljmp
add
jecxz
mov
lock
push
jecxz
lret
adc
or
std
xchg
icebp
mov
sub
inc
or
pop
fdivrs
fimuls
mulb
loope
add
stos
int
xchg
js
sbb
hlt
fsubl
sbb
fdiv
push
adcb
negl
shl
test
adc
mov
lret
addr16
fadds
and
stc
dec
mov
fs
mov
test
jp
outsb
testl
imul
clc
dec
icebp
mov
and
push
imul
int
ficompl
test
mov
cmp
dec
cli
cmp
lea
icebp
dec
loope
lret
addr16
jnp
xchg
mov
fcmovu
insb
cli
insl
cltd
pop
mov
cli
sub
sbb
cwtl
sub
aaa
jmp
enter
call
fwait
cmp
dec
fstpt
push
sbb
imul
clc
dec
call
fwait
cmp
dec
fstpt
push
xchg
and
test
push
mov
mov
hlt
cwtl
and
mov
xor
add
dec
inc
addl
pop
adc
push
outsb
cmp
icebp
enter
pop
jae
xchg
mov
cmp
cmpsl
cmc
jl
std
xchg
insb
fwait
push
scas
pop
or
and
aas
jb
rcrl
fcom
sarb
loop
int3
ret
adc
jle
mov
pop
jae
or
dec
mov
xchg
inc
stos
clc
test
cmp
push
mov
int
daa
movsl
ss
mov
scas
popf
and
cmp
push
sahf
bts
popf
cmp
mov
pop
cwtl
ds
in
lcall
data16
inc
jo
xchg
xchg
lea
ret
mov
pop
mov
jmp
sub
movsb
testl
xchg
loop
out
add
dec
dec
pop
cld
jno
sbb
cltd
mov
mov
mov
mov
rolb
fstp
stos
in
and
fcmove
xchg
jecxz
pop
fsubl
xchg
scas
insl
ljmp
inc
fiadds
lret
or
loope
push
shll
clc
das
jge
scas
scas
test
pop
xorb
mov
inc
loope
cli
mov
mov
fimuls
xchg
mov
inc
xor
jae
mov
cmp
pop
sub
cmp
insb
dec
push
ficomps
inc
and
cld
lret
xchg
rcrb
sarl
jb
ds
jle
dec
pop
push
push
dec
xchg
cmp
sub
add
cli
lret
out
or
test
xchg
push
push
xor
stos
outsb
mov
dec
cmp
jp
sti
iret
jp
xchg
data16
pop
mov
pushf
ss
xchg
fdivr
nop
lods
xchg
nop
mov
mov
ds
in
push
mov
dec
shr
stc
shrb
and
hlt
pusha
inc
cmpsl
les
adc
pop
inc
cmpsl
or
mov
pop
mov
test
fwait
jecxz
imul
popa
push
shrb
lods
jg
pop
adc
inc
mov
dec
cmc
imul
cltd
bswap
test
pop
pushf
mov
ret
outsl
push
or
jmp
sbb
sub
sub
cltd
sbb
jl
daa
stos
or
out
or
mov
fbstp
jl
pop
popl
inc
pusha
call
jecxz
ret
ret
jae
hlt
mov
adc
xchg
ss
adc
jecxz
cmpsl
or
lret
mov
xchg
shrb
push
adc
ljmp
scas
ret
and
ljmp
dec
jmp
dec
sub
test
jg
xlat
mov
jmp
adc
jecxz
sti
inc
out
or
test
xlat
add
pop
sahf
xor
dec
in
jne
mov
mov
fwait
and
mov
repz
leave
mov
sarb
lods
rcll
dec
and
and
mov
and
xor
or
mov
dec
jnp
sub
lcall
cli
jns
sarb
movb
sub
sbb
shrb
push
lds
stos
cmc
mov
cmp
or
mov
xor
sbb
add
icebp
lcall
outsl
mov
xchg
or
dec
fcompl
iret
mov
ret
imul
mov
sahf
ja
pop
xchg
push
dec
mov
loopne
pusha
cs
and
mov
inc
jp
movsb
out
in
sti
mov
jmp
popf
fdivrl
fbstp
imul
iret
inc
dec
loopne
out
loope
popf
dec
rorl
pop
and
add
mov
rorb
arpl
and
sbb
pop
fwait
pusha
add
cmpsl
adc
test
xor
dec
and
icebp
xchg
mov
dec
inc
mov
in
xchg
fmull
shr
add
lret
mov
cwtl
cli
xchg
push
jmp
mov
pop
repz
imul
cwtl
cwtl
pushf
adc
cmp
retw
mov
push
jbe
loopne
cmp
les
mov
mov
lods
pop
movsb
sarb
fadds
imul
aad
outsb
std
out
jl
push
push
adc
jecxz
push
xor
add
inc
rol
pusha
or
inc
fmull
inc
ret
mov
pop
inc
lahf
outsl
push
popf
test
mov
dec
cltd
addr16
insl
shrb
xchg
fnstenv
je
cmpsl
add
ret
cld
sub
imul
repz
int3
or
and
hlt
mov
mov
sbb
addr16
dec
pop
mov
imul
dec
pop
inc
mov
leave
push
bound
jb
ljmp
shrl
dec
ret
popf
push
xor
mov
jle
imul
je
sbb
mov
rcr
ret
clc
sbb
aaa
dec
lock
or
int3
scas
cmc
push
pop
jmp
lret
inc
int
lods
and
ljmp
and
add
jnp
xchg
mov
pop
test
push
icebp
mov
jo
ret
scas
sti
inc
mov
push
cld
sub
or
or
xor
mov
lret
jg
or
or
and
push
leave
adc
mov
adc
mov
outsl
rcrl
aam
and
fiadds
jo
filds
mov
ja
jmp
sub
iret
xchg
mov
push
fs
push
mov
or
movsb
pushf
cmp
rorb
mov
popa
push
sub
ficomps
jbe
adc
pop
les
cmpsl
sbb
mov
stc
mov
dec
push
pop
adc
mov
nop
inc
lret
popf
test
rcrl
sbb
cmc
ds
and
cmp
mov
mov
cmp
adcl
adc
fldcw
cltd
mov
cmpsl
sbb
or
push
xor
mov
push
adc
mov
jecxz
ja
orl
sub
or
pop
fcomps
in
clc
dec
jae
sbb
nop
push
int
cmp
xor
scas
adc
aaa
loope
insl
dec
xchg
jecxz
jp
jle
sbb
sub
add
inc
lret
das
push
sarb
pop
lods
fwait
and
sub
cmp
hlt
xchg
jl
add
pop
ret
subb
push
ret
or
push
insb
push
mov
push
mov
or
cmc
jb
enter
pop
xchg
sbb
add
test
rcrl
adc
pop
push
je
cmp
push
ss
mov
orl
in
test
mov
lea
or
in
mov
xor
pop
jnp
push
adc
mov
inc
and
repnz
loopne
rclb
loope
adc
je
outsb
lds
call
pop
sbbb
mov
int
xor
leave
jne
faddp
lcall
jne
adc
les
outsl
pop
fidivrs
test
push
xchg
nop
push
iret
adc
test
or
shll
pop
pop
jmp
aas
xor
mov
push
mov
mov
dec
cmp
ret
nop
stos
int
inc
int
dec
sbb
push
data16
aad
and
lahf
sub
xchg
insb
scas
loopne
push
sahf
pop
ss
or
fidivl
cmpb
pusha
fs
fcmovnbe
add
adc
jb
push
in
pop
repnz
mov
jl
gs
sub
das
push
loope
adc
jle
xchg
pushl
pushf
call
push
push
inc
in
add
mov
xor
mov
cli
cmc
dec
dec
addl
xor
push
mov
lds
xor
add
sbb
push
push
jno
cmp
in
fistps
aad
xchg
cmpl
leave
iret
mov
add
mov
shrl
dec
sti
testb
lods
xchg
dec
sbb
inc
int3
mov
push
sub
in
cmp
rolb
cmpsl
out
enter
andb
outsl
pop
mov
loop
xchg
test
sub
cmp
adc
pop
enter
popf
add
shlb
std
push
stos
cmp
int
in
cmpsl
sarl
adc
mov
and
stos
push
imul
jnp
subl
push
out
mov
out
mov
push
stc
loop
mov
sbb
test
subl
fmuls
test
cmp
jge
xor
outsl
popf
mov
xchg
sbb
leave
faddl
add
jo
test
adc
adc
lea
mov
jle
int3
popf
popa
push
push
sbb
outsb
std
std
out
mov
mov
pop
fisttpll
add
and
xchg
cmp
jo
jle
loop
push
xchg
dec
mov
lea
in
scas
rorl
pop
or
idivb
jne
mov
pop
fwait
ret
stc
push
movsl
push
aas
add
int
and
pop
cmpsl
xchg
ljmp
dec
idivl
and
inc
dec
mov
movsb
jge
frstor
pop
dec
add
push
scas
into
sub
mov
dec
leave
out
or
int3
cmp
out
sbbl
fbld
cmp
lods
push
dec
sub
mov
test
lahf
lahf
fsincos
mulb
cld
jg
inc
andl
int
rolb
jmp
decb
movsl
repz
daa
in
push
inc
add
mov
xor
adc
inc
xchg
test
push
fstpl
fwait
cld
shrb
shrl
movsl
and
mov
push
and
inc
mov
dec
jle
push
xchg
push
ja
js
or
inc
imul
repnz
lods
sahf
sub
das
je
dec
or
inc
test
popf
push
jg
pushf
sti
pop
sub
lret
lods
mov
icebp
xor
sub
arpl
sbb
sbb
inc
mov
testb
into
hlt
adc
push
xor
test
dec
icebp
jo
jecxz
xchg
or
pop
jmp
sub
std
add
out
mov
lret
mov
or
adc
into
test
mov
outsl
into
cmp
mov
rcrl
or
inc
sbb
lret
mov
dec
pop
jg
stos
pop
jmp
mov
bound
add
imul
cmp
icebp
jge
scas
jecxz
addr16
push
ljmp
loope
hlt
add
nop
les
fstl
ficoml
or
data16
inc
xchg
mov
movsl
inc
test
icebp
or
mov
lds
add
out
jp
movsb
or
loopne
cli
cs
lret
inc
xorl
or
imul
cmp
xchg
in
push
cmp
push
gs
adc
dec
xor
sbb
repnz
fldt
add
sub
xchg
dec
mov
and
test
nop
hlt
dec
push
rol
sbb
push
daa
pop
mov
mov
mov
and
dec
and
sub
mov
or
into
push
in
jb
lahf
cmp
xor
mov
pusha
popa
aas
lds
pop
lcall
push
stos
push
add
cmpb
pushf
jbe
cmp
ret
loope
test
cmp
bound
add
lock
mov
unpckhps
pop
sub
imulb
jp
pop
fbstp
jge
fwait
mov
or
ret
stos
and
push
popf
add
decb
addl
ja
push
jg
ja
daa
les
outsb
inc
out
cmc
repnz
add
scas
jb
and
cmpsl
dec
sbb
xchg
push
cltd
lahf
das
jo
pop
cmpsb
dec
cmpsl
mov
or
adc
out
iret
fistps
mov
sbb
loop
ret
repz
cmp
lea
dec
out
out
adc
pop
dec
outsb
and
mov
push
and
and
push
enter
or
fisttpll
test
inc
mov
xor
mov
test
sbb
nop
pop
stos
add
pop
lahf
lods
out
decl
aam
out
cli
in
ja
imul
lret
std
mov
hlt
mov
mov
cmp
or
loope
popf
mov
adc
mov
movsl
xchg
jnp
in
cs
mov
cmp
xchg
lcallw
fwait
test
mov
aad
jmp
rorl
mov
stos
mov
push
and
mov
int
jne
or
jp
dec
sbb
lret
aam
add
inc
xor
pop
das
dec
psubusw
cmpsb
ja
xchg
sub
nop
arpl
ror
pop
scas
inc
ficomps
es
and
test
mov
xor
out
push
adc
inc
or
ficompl
out
mov
sub
inc
or
xor
andb
ja
cltd
adc
or
sub
add
nop
cmpsl
add
js
adc
sarl
jecxz
fsubrs
daa
icebp
enter
xchg
push
xor
push
pop
cmp
inc
arpl
dec
jp
jg
daa
dec
sbb
fbld
and
pop
mov
pop
and
jb
sbbl
std
sub
loope
std
xlat
adc
xor
mov
lret
mov
call
xchg
lcall
iret
inc
aam
mov
test
fstl
jg
loope
adc
jle
outsl
pop
sub
ja
loop
push
push
fsubl
push
pop
flds
ret
mov
fildl
dec
lea
xchg
and
insl
cmpsb
mov
shrb
gs
ss
sbb
lret
lods
sbb
in
or
leave
sbb
aaa
pop
or
movsb
xor
fstl
xchg
adc
xchg
in
clc
dec
nop
rolb
or
push
sbb
test
out
lret
mov
shrl
push
cmp
je
jmp
cld
xor
xchg
lcall
push
sub
add
movsl
cmp
imul
dec
repz
movsb
xchg
mov
ss
cmc
or
lahf
sub
xlat
dec
or
test
cmpsb
mov
arpl
arpl
adc
jbe
icebp
rep
in
mov
sbb
xor
cli
pushf
and
and
push
sub
les
insl
dec
mov
scas
js
test
mov
in
mov
cmp
cld
adc
data16
cwtl
mov
lahf
int3
xorb
fidivrl
xor
inc
add
ret
movsl
sbb
xchg
mov
into
test
xchg
clc
dec
cmc
repnz
iret
pop
mov
add
mov
xchg
push
sub
cs
sub
push
subl
out
divb
in
daa
movsl
out
leave
or
addl
mov
inc
enter
jno
ret
sbb
les
mov
adc
shrb
scas
xor
add
cmp
fwait
dec
pop
rcll
mov
rolb
pop
imul
push
in
dec
push
std
xchg
das
cmpsb
push
pushf
sbb
std
in
je
jns
lret
lret
enter
ss
sbb
ficoml
dec
ja
aas
push
dec
fcoml
inc
lds
bound
mov
mov
mov
stc
dec
pop
in
roll
insb
ffreep
mov
xor
popa
fisttpll
sub
fisttpll
and
or
mov
adc
xor
add
in
lahf
dec
pop
mov
mov
add
dec
or
xchg
or
shrb
in
mov
cmpb
cld
mov
pop
xorb
sbb
pop
sbb
mov
js
arpl
notl
testl
out
add
inc
jp
dec
fs
push
mov
stc
lods
mov
fwait
lods
scas
lock
add
dec
or
mov
sub
mov
jge
js
flds
sub
mov
bound
shll
jne
ret
pop
xor
inc
cwtl
cmp
jmp
mov
jns
sbb
test
jb
stos
mov
mov
xor
pop
push
mov
hlt
pop
dec
mov
outsl
fsts
nop
mov
into
bnd
out
adc
inc
mov
dec
jns
adc
fdivp
fnsave
scas
iret
push
push
rcrl
mov
popf
fdivrs
add
sub
jmp
xchg
jmp
mov
pop
dec
or
adc
add
cmc
add
mov
push
aaa
sti
dec
or
incl
stos
sbb
std
gs
fdivr
icebp
call
mov
or
xchg
pop
aad
pop
pushf
mov
aas
mov
daa
inc
xcrypt-ecb
cmpsl
jnp
xchg
cmpsl
scas
sti
pop
jns
add
jns
add
mov
outsb
sbb
xor
daa
jecxz
pop
mov
in
inc
sbb
xchg
xchg
popa
mov
idivl
pop
mov
enter
pop
jae
mov
sub
gs
mov
ficoml
cld
mov
test
pusha
push
jb
dec
repz
pop
leave
ficoms
jl
pop
out
xchg
inc
rolb
std
dec
cmpsb
daa
gs
insb
in
push
in
rol
movsl
in
push
push
andl
out
in
fistl
or
push
cmpsb
mov
pop
enter
pop
adc
cmp
or
xchg
lret
mov
push
rcrb
pop
in
outsl
mov
jle
insb
jg
test
insb
or
and
icebp
test
fisttps
lods
in
sbb
insb
mov
push
movsl
imull
mov
rorl
mov
push
mov
les
sahf
and
mov
into
push
cwtl
push
pusha
xor
int
xchg
sub
nop
jg
xchg
call
stc
and
push
jmp
jp
mov
cmp
sahf
or
add
rcrb
mov
pop
cld
push
dec
mov
addr16
mov
mov
out
inc
fcom
arpl
rcrl
sbb
jb
push
xchg
pushaw
int3
xlat
int
movsl
push
push
jecxz
sub
outsb
or
pushf
xor
mov
std
pop
or
sti
into
pop
addr16
es
jnp
repz
enter
sti
push
sbb
xor
movhps
sub
mov
xchg
subl
mov
shl
dec
push
mov
insl
or
cmp
in
cmp
pop
mov
sub
fisubrs
or
cmp
add
es
fs
cwtl
das
mov
loope
stc
out
adc
adc
dec
mov
push
out
cmp
and
cmp
lds
popf
ret
push
outsb
and
aad
add
imul
xor
repnz
stc
adc
in
std
mov
outsb
and
fwait
push
mov
dec
push
ljmp
cmp
mov
js
iret
xor
jle
sbb
lcall
xchg
divl
loopne
repnz
out
jnp
out
addr16
cmpsb
pop
mov
jno
mov
pop
or
jg
mov
sbb
sub
out
inc
xor
jns
cmc
push
sbb
xor
cmp
insl
scas
sbb
dec
mov
push
stos
xor
adc
fwait
scas
cmpsb
cmc
call
adc
mov
test
and
jne
pop
xchg
mov
sbb
arpl
scas
cmp
push
push
push
and
or
or
mov
fs
cmp
int
inc
xchg
mov
push
push
fldt
push
rcl
pusha
cmc
push
enter
inc
xchg
mov
cmp
cli
stos
ret
sub
jns
or
das
shlb
and
jnp
sarl
mov
mov
rcrl
rcl
cmp
mov
and
mov
xor
xchg
xchg
xor
movsl
fisubrl
add
clc
jg
add
mov
in
shrl
adcl
aaa
pop
mov
test
jecxz
cs
clc
mov
test
push
lock
push
lahf
sbb
inc
and
std
shlb
int
adcl
lret
sub
inc
dec
dec
mov
dec
sbb
mov
or
sbb
mov
imul
cltd
push
fistps
std
mov
ret
inc
xor
mov
imul
test
pop
add
aad
js
test
fdivrl
fisubrl
ret
data16
pop
or
and
aaa
out
jp
push
xorb
enter
data16
dec
push
scas
fst
sbb
push
or
popf
sub
ss
int3
lock
and
cmp
sub
add
inc
cmp
lock
addl
stos
jne
fldcw
insb
sub
sahf
add
or
test
and
idivl
outsl
jo
mov
loope
test
adc
dec
push
test
dec
in
gs
imull
xor
or
imul
jle
jo
pop
das
shll
shl
inc
dec
pop
inc
mov
cs
and
jecxz
outsl
fisttpll
pop
mov
push
sbb
push
dec
adc
sbb
dec
addl
cmpsl
mov
xchg
pop
sub
nop
jle
push
fdivl
inc
jno
push
arpl
inc
push
leave
jno
jmp
mov
mov
mov
imul
clc
dec
call
fwait
cmp
dec
fstpt
push
sbb
imul
clc
dec
call
fwait
cmp
dec
fstpt
push
fwait
mov
imul
clc
lret
call
fwait
cmp
dec
fstpt
cmp
test
fsubrs
pop
clc
dec
sub
cmp
aaa
stos
pop
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
mov
lcall
and
add
adc
dec
pop
idivb
jp
mov
lcall
inc
fidivl
data16
xchg
or
cmp
das
pop
imulb
jp
mov
lcall
inc
fidivl
data16
xchg
or
push
or
push
mov
or
ss
dec
fistps
adc
pop
mov
jno
ret
dec
das
push
xchg
mov
mov
rcr
push
fiaddl
mov
jo
sbb
in
aad
das
sbbl
sub
lcall
add
cmp
sub
xchg
sbb
mov
data16
out
push
pop
and
ds
mov
sbb
or
push
in
pop
mov
push
pop
insl
jp
dec
andl
mov
mov
cmp
sub
dec
or
out
sub
decb
test
push
shlb
jae
or
push
inc
pop
int3
lds
pop
xchg
or
push
test
mov
lcall
inc
fidivl
data16
xchg
or
cmp
dec
pop
imulb
cmp
mov
jo
pusha
sti
xor
loop
out
jecxz
lds
dec
push
xchg
pusha
out
notb
fnstenv
mov
aam
outsl
loope
lret
dec
cmpsb
push
lahf
jl
leave
jo
inc
ret
inc
fidivl
data16
xchg
or
cmp
dec
pop
imulb
jp
mov
lcall
inc
fidivl
data16
xchg
or
cmp
dec
pop
imulb
jp
mov
stos
lds
xchg
mov
es
push
add
pop
lret
in
ljmp
divl
lret
ss
lods
pop
jge
dec
mov
stc
cs
mov
lods
fdivs
addb
adc
mov
inc
jbe
jbe
sbb
push
mov
push
mov
out
iret
imul
sub
pop
xchg
fcmovu
push
push
jge
add
xor
mov
mov
sub
add
in
fcoml
xlat
adc
icebp
sub
add
inc
sbb
fidivrl
out
test
jb
clc
lock
es
lods
pusha
add
adc
aas
xchg
int3
aas
sti
cmp
mov
dec
dec
aad
mov
test
inc
rcl
xor
or
movsb
out
insb
pop
int3
jecxz
lds
nop
or
std
gs
push
sub
in
and
mov
out
subb
and
test
lret
ret
fs
dec
sbb
ret
movb
pop
push
enter
mov
or
push
xor
push
jae
fisttpl
push
roll
into
mov
pop
and
sub
inc
push
sahf
mov
jns
dec
or
push
and
and
dec
sub
sbb
mov
orl
adc
mov
testl
arpl
sub
fildl
sub
add
sbbl
fidivs
xchg
cltd
rcl
cli
sub
jmp
pop
mov
in
sbb
sbb
pop
mov
std
push
popf
jp
xor
jbe
les
je
fwait
pop
imul
pop
inc
mov
enter
mov
xor
aad
outsb
sahf
cmp
into
pusha
lahf
mov
lahf
loop
faddl
stos
cmp
push
hlt
mov
aam
sbb
lock
mov
jb
mov
stos
xchg
cmpsb
not
jns
xchg
ljmp
push
adc
cmp
push
mov
aam
lret
stos
rcrb
jne
inc
pop
push
out
jge
imul
or
lock
push
enter
pop
adc
sub
stc
cmp
cmpsl
stos
push
cmpsl
mov
je
mov
xor
loope
fs
aas
inc
fwait
int3
push
fdivl
lret
pop
pop
divb
adc
les
push
push
icebp
cwtl
or
int
pusha
lret
les
fwait
mov
pop
arpl
test
add
xchg
pop
movsb
sbb
or
sub
jle
push
fs
mov
mov
rclb
and
dec
fcomp
pop
mov
in
sub
sti
xor
inc
mov
pop
jb
aad
clc
sub
rcll
inc
insb
lahf
ja
push
ftst
lret
je
adc
lret
rolb
and
push
xor
cmp
adc
in
pop
mov
and
push
iret
add
cmp
xchg
cld
sub
sahf
popf
fstps
pop
ret
push
inc
shrb
mov
pop
in
dec
adcb
jo
out
dec
sub
push
or
push
cwtl
data16
bnd
jne
out
jae
outsb
cmp
outsl
push
popa
out
and
xor
cmp
fsub
fdivrl
jbe
call
mov
iret
es
or
ljmp
mov
mov
inc
roll
mov
inc
shl
pop
sarb
xor
insb
and
sub
push
add
fwait
pop
scas
sub
subb
ret
dec
arpl
lea
rcrl
sbb
push
mov
jnp
or
xchg
push
adc
or
rolb
inc
cmp
cmpb
ja
cmc
fldl
add
xor
pop
fisubrs
mov
mov
xor
mov
cmpsl
nop
sub
movsb
push
and
xlat
jge
pop
popa
fdivrl
sahf
insb
arpl
xor
mov
popf
aam
leave
fs
jae
cmp
cmp
lret
fmul
cmc
js
cli
xchg
lahf
dec
sub
mov
popf
add
lods
imul
andl
rolb
in
lret
pop
xor
push
adc
xchg
sub
pushf
leave
in
aam
fidivl
out
aas
mov
loop
push
lea
or
lock
dec
push
mov
dec
dec
xchg
dec
mov
mov
inc
xchg
push
and
mov
pop
mov
int
pusha
cwtl
test
imul
mov
dec
jecxz
mov
jae
push
js
test
add
dec
jns
lds
pop
jno
push
mov
insl
pop
pushf
mov
mov
jmp
mov
iret
sti
xor
test
fcoml
out
ljmp
pop
add
add
lahf
mov
and
sbb
ljmp
or
sub
out
js
stos
dec
data16
pop
cld
mov
push
repnz
data16
lock
xorl
adc
lods
push
mov
adc
out
mov
mov
pop
sahf
adc
movl
movsb
test
mov
sub
and
jmp
and
fldl
nop
inc
jae
movsb
gs
mov
mov
or
dec
clc
mov
add
jge
and
jo
frstor
pop
mov
dec
xor
mov
lock
cmp
aas
pop
test
push
mov
nop
popa
xor
sub
mov
xchg
popf
add
or
and
enter
lret
test
xchg
push
cmp
lods
jle
jo
xor
hlt
cld
sahf
mov
xchg
scas
lea
xchg
or
sbb
and
shrb
insl
push
push
mov
outsb
dec
xor
fwait
push
or
jne
jge
xor
pop
in
mov
std
xchg
fiaddl
sub
fisttpll
aaa
sub
jmp
adc
addb
cmp
out
movsl
xchg
mov
xchg
add
pop
fiaddl
daa
sub
sti
fistpll
mov
adc
imulb
jmp
aaa
add
sbb
in
fwait
push
imul
sub
rcrb
in
or
movsl
cmpsl
sub
cmpsb
mov
inc
xor
mov
popa
lds
call
cmc
mov
aam
push
xchg
sub
or
jnp
int
sub
and
or
int
movsl
mov
fs
cmp
and
jne
loopne
mov
dec
xchg
jnp
inc
pop
mov
inc
and
xchg
daa
push
mov
xchg
adc
dec
pusha
dec
test
dec
sahf
push
sbb
xchg
cwtl
insb
scas
push
cmp
xor
ss
mov
xchg
cmp
cmp
cmp
pop
lcall
pop
das
mov
add
imul
mov
inc
movsb
mov
or
add
scas
or
scas
cmp
mov
xchg
popf
and
and
ffree
cwtl
outsb
sti
rorl
ss
push
scas
adc
inc
mov
imul
popa
ss
add
inc
xchg
add
adc
and
mov
orl
pop
ret
in
or
loopne
sbb
inc
fs
pop
ja
aaa
xor
dec
mov
sub
or
mov
inc
xchg
rorl
push
rol
pop
das
ret
jle
inc
dec
rclb
fisttpl
js
clc
scas
xchg
insl
jge
mov
sarl
xchg
sti
out
push
das
sahf
into
xchg
sbb
aas
repz
fs
xchg
mov
ror
xlat
scas
insb
lahf
sbb
or
pop
or
push
sub
je
frstor
mov
stos
fisttpll
cmc
mov
or
xor
es
daa
pop
or
sub
movsb
ljmpw
xchg
or
ss
add
test
jg
adc
loop
xor
cmc
pop
cmpsl
fistpl
mov
mov
mov
mov
mov
fstps
imul
jne,pt
stos
xchg
sbb
popl
in
das
ret
daa
in
sahf
cmp
idivb
scas
sub
and
dec
jecxz
out
add
inc
and
jl
mov
out
xchg
dec
cmc
cltd
packsswb
xlat
xor
ret
xor
loopne
out
and
outsl
ret
sbb
add
push
dec
inc
fs
jne
or
or
and
test
xlat
insl
dec
cmc
int
mov
sarb
cmp
xchg
scas
daa
pop
loopne
and
mov
ds
cltd
ss
pop
mov
mov
shll
mov
pusha
mov
cmp
push
fs
test
sub
adc
ja
lcall
push
xor
rcrb
push
mov
out
and
aas
in
fnsave
pop
xor
jecxz
lock
int
xchg
pop
in
loopne
jecxz
mov
mov
mov
xchg
inc
cmp
out
leave
sbb
or
push
mov
mov
enter
notb
mov
imul
xor
in
aaa
mov
jecxz,pt
in
loopne
rcr
data16
leave
mov
lods
inc
jb
divb
lcall
inc
mov
sahf
das
or
scas
mov
repz
cmp
sbb
adc
hlt
enter
cmpsb
or
xor
into
pop
inc
mov
aam
push
cmpsl
pop
stos
sbb
and
pop
jbe
inc
jecxz
pop
push
loopne
rcr
sub
jns
mov
or
push
mov
pop
add
test
push
add
rolb
out
fs
push
test
dec
or
repnz
imul
inc
ds
jl
push
push
stc
decb
mov
lds
inc
test
pop
xlat
pusha
lcall
jge
mov
aam
iret
shll
push
fs
mov
cmp
jno
mov
invd
cmp
add
sarl
mov
cmp
std
add
adc
bound
xchg
pop
xchg
jecxz
shll
mov
faddl
nop
ret
loope
adcl
add
pop
pop
insl
cmp
sbb
cmp
xor
and
push
movsb
add
roll
iret
jecxz
mov
xlat
sub
jle
dec
lea
and
mov
pop
mov
pop
xchg
mov
movsb
lret
mov
lds
jbe
in
mov
add
cwtl
mov
and
mov
add
jmp
in
outsl
test
adc
sbb
mov
add
dec
mov
push
jnp
adc
enter
lds
mov
pop
cmpsb
sti
and
ss
dec
test
repnz
sbb
imul
inc
add
mov
pop
push
push
pop
arpl
fwait
push
gs
cmp
sub
fisubrs
pop
hlt
xlat
cmp
arpl
mov
outsl
out
mov
xlat
fcmovne
in
add
mov
loope
push
mov
adc
adc
int3
adc
out
ljmp
jmp
adc
fisttps
popf
and
imul
lret
pop
mov
outsb
push
jecxz
in
rolb
jbe
lcall
scas
inc
inc
pop
xchg
cmp
jmp
mov
pop
aas
mov
push
sbb
xchg
mov
mov
and
jbe
dec
sub
and
into
imull
out
pop
imul
mov
or
outsb
sub
push
movb
mov
and
push
fnsave
adc
push
add
stos
add
ret
push
nop
pop
add
in
pop
hlt
push
aaa
clc
inc
inc
dec
js
fmull
mov
or
test
sbb
xchg
sub
dec
pop
cmpsb
mov
test
jno
mov
in
push
test
fdivrl
iret
and
dec
jcxz
push
sbb
push
fs
rcl
add
xchg
adc
sbb
sbb
into
pop
pop
xchg
loope,pn
inc
mov
jno
sarw
cmpsl
add
jae
inc
xchg
sub
sahf
push
mov
fsubrs
or
sbb
pop
out
xor
imul
stos
bound
mov
jg
adc
lahf
mov
aam
lahf
mov
in
lret
fsubrl
movsb
movsl
dec
pop
push
dec
lcall
adc
jl
mov
sub
imul
movsl
xlat
xor
adc
popa
jnp
mov
pop
mov
fldl2e
add
push
xor
in
xlat
inc
pop
xlat
push
pop
fimull
rcll
cmp
sarl
jecxz
mov
pop
or
popa
push
add
repnz
inc
sahf
mov
mov
js
push
mov
push
jbe
dec
movsl
in
fmull
pop
or
arpl
imul
stos
pop
dec
adc
fildl
mov
cld
movsb
push
xchg
popf
movsb
inc
push
dec
jb
shrl
shll
jecxz
fisttpll
bound
out
scas
mov
push
or
pop
pop
add
xchg
out
insb
stc
dec
cmpsb
cli
mov
mov
je
loop
hlt
in
jbe
pop
addr16
and
sub
adc
mov
or
cwtl
sahf
das
pop
sbbb
test
fmulp
push
jb
and
push
cld
add
mov
scas
push
add
int3
in
fsub
sbb
lds
incb
orl
xlat
jmp
ja
add
ljmp
sub
outsb
xabort
bnd
pop
call
and
int3
shlb
mov
pop
adc
mov
gs
dec
cs
test
fwait
mov
xchg
mov
arpl
outsb
inc
mov
xchg
mov
push
leave
xchg
loop
nop
mov
push
push
fidivrs
adc
sub
bound
pop
std
inc
aas
repz
jecxz
and
and
lahf
insl
das
inc
loopne
movsl
mov
pop
adc
or
ret
int
fistpl
and
cmpsb
fistl
cmpsl
jb
jecxz
das
ficoml
jae
std
daa
xor
push
xor
aaa
push
push
dec
shrb
mov
lret
loopne
in
cld
jle
mov
mov
cmp
mov
cmp
add
fildll
inc
push
roll
bound
shll
stos
xchg
iret
in
lahf
je
lcall
into
jg
movsb
cmpsb
sbb
jns
cmp
jo
pop
movsb
cmp
sbb
mov
inc
xchg
inc
jns
and
sbb
lods
pop
movsl
add
outsb
mov
sbbb
lds
ljmp
push
mov
adcl
out
and
add
or
xchg
mov
jecxz
mov
and
dec
dec
sub
loope
insb
imul
in
lods
mov
shlb
xchg
pop
outsl
jg
mov
add
mov
andl
or
sar
sub
push
xchg
into
adc
test
mov
sub
inc
add
fsubrs
jecxz
icebp
outsb
insb
push
repz
push
shrb
mov
pusha
idivb
adc
and
into
movsb
in
lret
sub
cmc
cmp
repz
add
pop
std
aas
insl
lock
movsl
cs
jecxz
pop
mov
scas
dec
add
fnstenv
inc
psubb
lds
shr
dec
test
jp
frstor
ret
test
in
add
xor
aaa
sbb
adc
mov
sub
dec
shr
repnz
hlt
inc
mov
cmp
test
lea
mov
stc
aaa
fcmove
daa
subb
mov
mov
inc
sbb
mov
rcrl
dec
add
rclb
jnp
mov
stos
stos
ja
cmp
push
addr16
ds
inc
sub
mov
stos
cs
fucomi
jge
flds
lock
mov
cmp
popl
mov
ss
test
stos
mov
mov
jae
push
sub
bound
pop
in
pop
mov
and
lods
mov
icebp
cmpsb
ret
xor
jg
in
cmp
inc
xor
add
jle
add
or
stos
imul
and
sahf
scas
movsl
xchg
and
pop
sub
jnp
test
loope
add
or
fiadds
decl
inc
fists
aad
jle
int
negl
sub
push
movsl
jle
lods
scas
sti
cmp
xlat
aad
repz
lods
lret
lods
xor
mov
cltd
pushl
mov
cmp
sbb
cli
std
push
into
sub
fs
add
jle
push
out
iret
rcll
sbb
cld
ret
stc
xchg
insl
mov
xor
mov
push
pusha
pushf
xchg
xchg
xchg
cwtl
ljmp
dec
xor
in
scas
dec
and
lcall
ss
insb
or
data16
xchg
loopne
and
sub
cld
adc
ror
pop
push
add
pop
mov
ss
jmp
jae
mov
gs
gs
mov
pop
xchg
fidivrs
xchg
aas
lret
sub
loop
xchg
push
inc
test
push
adcb
dec
in
pusha
test
mov
aam
dec
pop
push
mov
xchg
adc
fmuls
lock
inc
imul
aam
push
das
mov
stos
sub
shld
xchg
mov
sbbl
add
daa
sub
out
mov
arpl
sbb
sahf
lock
xchg
in
mov
mov
lret
dec
bound
jge,pn
out
inc
or
push
lds
push
jge,pn
lock
ret
aam
bound
mov
jmp
and
test
push
push
dec
lret
in
or
int
iret
pop
imul
sbb
stos
fstp
aaa
cmp
fld
mov
call
in
fs
mov
inc
int3
aaa
inc
inc
clc
shlb
ds
cmp
sahf
push
mov
ja
jmp
mov
sbb
out
xchg
movsb
mov
jno
adc
cmp
adc
fisttps
in
sbb
hlt
mov
orl
sbb
or
out
push
lea
sbb
xchg
fs
pop
js
add
pop
dec
lock
jge
cltd
addr16
jecxz
dec
mov
dec
test
ljmp
insl
adc
mov
mov
xor
dec
fisttps
or
gs
sahf
popa
dec
or
pushf
subl
mov
inc
jns
sub
iret
xchg
into
cltd
scas
mov
flds
sbb
xchg
nop
lret
jne
sbb
jge
adc
loopne
sbb
scas
adc
xor
sbb
sbb
lock
mov
or
jge
cltd
mov
stos
nop
sti
mov
js
roll
mov
imul
mov
push
push
xor
int
adc
sub
loopne
dec
hlt
push
ret
jno
out
popa
sti
js
xchg
mov
mov
xor
ss
mov
inc
push
dec
push
in
in
pop
mov
sub
int
nop
mov
pop
jle
bound
sub
loope
xor
mov
popa
push
jns
xchg
mov
mov
std
cmp
inc
mov
scas
sbb
insb
mov
int
outsb
push
add
pop
imul
insb
rol
fs
jb
lods
cmp
sar
je
pop
cmp
adc
dec
jb
sub
xor
mov
sahf
push
shlb
mov
imul
mov
leave
push
cmp
adc
or
subb
xchg
mov
add
imul
dec
fwait
sub
dec
jle
popf
push
das
rolb
cwtl
movsl
cmpsl
jl
sbb
dec
push
sub
cmp
push
vpsllq
mov
sbb
cld
imul
inc
mov
mov
stos
arpl
lcall
sarb
leave
inc
add
mov
ret
mov
dec
ficompl
pop
add
xchg
dec
clc
add
mov
pop
sub
inc
ret
pop
repnz
repnz
jg
jg
mov
iret
pop
mov
cmc
in
frstor
add
insl
jle
mov
add
add
loope
cmp
ja
je
lock
mov
jo
movb
pushf
fs
jnp
fidivrs
scas
fidivs
mov
fwait
sbb
stos
adc
xchg
dec
test
xlat
aam
pop
jp
shrl
out
sub
in
push
cmp
int3
adc
sbb
mov
aas
sub
out
mov
popa
cltd
adc
dec
add
mov
mov
stos
rol
lcall
dec
andl
fdivp
jge
jg
jb
jno
gs
mov
mov
aad
imul
rcl
lods
push
sub
arpl
cmp
pop
ljmp
popf
pop
stos
test
divl
fildl
sub
psubq
gs
dec
push
mov
lret
inc
shrb
fnop
mov
xchg
das
lahf
psrld
loop
out
inc
xor
pop
mov
sub
lret
sti
outsl
imul
aam
ret
mov
ret
inc
or
ja
or
inc
fidivl
data16
xchg
or
cmp
dec
pop
imulb
jp
mov
lcall
inc
fidivl
data16
xchg
or
cmp
dec
pop
imulb
jp
mov
lcall
inc
fidivl
data16
xchg
or
cmp
dec
pop
imull
jp
mov
lcall
inc
ljmp
sbb
cmpsb
dec
mov
xchg
push
test
lea
addr16
je
pop
cmp
cmc
mov
mul
xchg
xchg
lds
xor
ja
pop
jne
inc
daa
push
dec
cmc
mov
stos
out
mul
jmp
xchg
lds
mov
andl
jne
cmp
aaa
movsl
fxtract
jecxz
hlt
xchg
shlb
adc
ja
daa
xor
inc
lods
push
mov
mov
push
ds
subb
sub
fistpll
pop
mov
and
jle
pusha
xchg
cmpsl
pop
out
inc
and
jno
xchg
xor
insl
in
dec
pop
jp
imul
and
jae
dec
inc
and
push
inc
dec
push
leave
mov
out
xchg
arpl
push
lods
sub
cli
aaa
aad
lcall
pop
gs
fwait
jp
xchg
repz
aam
xchg
xchg
cmpsl
mov
ja
aaa
call
das
lods
jb
dec
test
cmc
les
inc
xor
ja
pop
xor
inc
daa
in
aaa
push
daa
xlat
pop
out
testl
inc
inc
push
inc
addr16
or
jle
popa
xor
les
hlt
orl
stc
and
add
ja
imul
dec
es
popf
mov
scas
loopne
stc
xchg
xchg
jmp
xchg
fcoms
push
pop
jne
push
adc
sub
inc
daa
push
aaa
movsl
mov
test
xchg
mul
xchg
xchg
lds
xor
ja
pop
jne
inc
daa
push
aaa
movsl
mov
test
xchg
mul
xchg
xchg
lds
icebp
aas
lods
mov
sub
clc
and
cs
mov
pop
adc
adc
adc
sub
lods
sbb
dec
es
add
jmp
push
xor
ja
loopne
aad
ja
sbb
xor
lds
xor
dec
push
inc
lods
cmpl
and
test
inc
popf
sbb
cmp
xchg
repnz
cmp
fnstcw
les
cmp
sub
int3
test
les
sbb
mov
clc
push
popf
push
or
ss
inc
call
inc
lcall
cli
mov
inc
xchg
sub
xlat
sub
test
mov
fistpll
mov
push
push
lahf
dec
loopne
jl
cwtl
aad
pushf
or
sub
rep
mov
dec
jg
ja
pop
jnp
mov
popf
call
mov
bound
lods
xchg
sti
jns
push
sahf
mov
push
insl
or
out
or
popa
orb
sub
or
lret
sub
mov
adc
mov
addb
mov
xchg
daa
mov
mov
cwtl
mov
sbb
fwait
or
jmp
mov
xor
pop
pop
pop
jge
pop
push
ret
leave
jl
pop
hlt
into
push
add
sub
jne
in
int3
clc
sbb
lods
lahf
roll
out
test
or
enter
test
outsb
in
pop
rcrb
daa
or
clc
jecxz
inc
test
lret
popl
jle
out
fisubl
add
mov
aas
out
xchg
push
int3
add
mov
lock
xor
adc
aam
insb
outsl
and
mov
dec
sub
and
pop
lods
mov
push
adc
test
inc
sar
out
lahf
into
inc
lds
aam
jle
push
test
cmc
sub
mov
add
sub
or
sub
fnsave
rep
jnp
mov
iret
ja
cmpsb
test
lods
jg
std
mov
pop
or
sbb
fistpl
mov
pop
dec
xor
mov
out
loop
jg
or
adc
mov
mov
dec
or
loop
in
lret
ss
xorl
sbb
add
fcmove
loopne
out
pop
je
mov
cld
rcrb
mov
xchg
lcall
sub
push
push
sub
lea
sbb
and
adc
dec
movsb
xchg
fs
pop
sahf
mov
and
add
or
loop
mov
mov
repz
daa
fsubr
jl
or
das
jb
andl
xorb
jae
mov
jmp
add
mov
jl
dec
mov
outsb
fidivs
push
inc
orl
mov
fwait
pop
push
jno
ret
fnsave
jo
fcompl
xor
das
xchg
movsb
mov
int
mov
mov
xor
imul
subl
nop
xchg
mov
mov
imul
mov
pop
sub
fiadds
jle
stc
add
loopne
inc
fcoml
pop
fdivl
sarb
sub
sbb
mov
adc
and
mov
ss
mov
rcrb
mov
jg
sbb
sub
in
imul
out
mov
jbe
gs
mov
jp
dec
pop
or
mov
imul
or
in
xor
xor
pushf
add
jmp
mov
dec
push
sub
xchg
out
in
enter
cmp
dec
sub
lahf
lock
dec
dec
add
and
sahf
cmc
mov
cltd
pop
pop
mov
out
mov
lods
lcall
inc
inc
mov
ja
cmp
jmp
cwtl
xor
inc
pop
sub
push
test
and
mov
jns
inc
out
les
mov
jbe
sbb
out
sbb
fnstenv
mov
push
shrl
and
or
imul
cmpb
and
js
shrl
adc
push
shrb
mov
xchg
cmp
push
fs
mov
lret
xchg
sti
jnp
loopne
xchg
mov
xorb
pop
loopne
and
in
jnp
movsb
decb
or
mov
outsl
adc
incl
fistps
std
push
pop
outsl
mov
mov
push
xor
daa
fdivs
push
cwtl
lcall
cmp
arpl
jmp
mov
sub
gs
incb
xor
cmp
cmc
cmpb
mov
or
dec
enter
outsl
jmp
push
into
inc
mov
mov
mov
fwait
adc
int3
and
mov
loop
cmp
mov
dec
ja
call
faddl
aas
pop
push
shl
out
cmp
pop
dec
addr16
clc
ja
mov
adc
ja
fdivp
pop
xchg
stos
fwait
mov
mov
jnp
out
shrl
mov
cmp
cmc
movd
cmp
scas
adc
pop
ret
push
cmp
cltd
dec
and
adc
call
cmpsl
adc
daa
mov
xor
mov
dec
xchg
mov
aam
stc
pusha
out
lahf
cmp
lret
jne
cmpsb
add
jle
pop
outsb
mov
out
mov
push
and
cwtl
sbb
out
pusha
add
arpl
adcl
cmp
incb
aad
xor
movsb
aaa
arpl
mov
sbb
rorb
mov
lea
mov
mov
mov
pop
mov
test
fistpl
push
lea
fidivs
sbb
mov
mov
mov
adc
cltd
mov
imul
fimull
jbe
icebp
adcl
aaa
loope
dec
cmpsl
xor
or
lds
fstps
mov
push
pop
push
sub
sbb
fs
jecxz
sbb
ret
inc
mov
fsubl
cmp
pushf
and
sbbl
lock
cli
outsb
nop
lret
mov
xchg
mov
fstps
adc
inc
mov
cs
std
addr16
and
rcrb
xlat
decb
cmp
scas
xlat
fwait
jp
inc
jl
fistps
fisubrl
sbb
cs
sbb
clc
test
call
sub
push
mov
repnz
popfw
inc
xchg
out
negl
cwtl
xor
mov
roll
gs
fimuls
adc
xor
cmpsl
cmpsl
add
xchg
mov
and
jnp
mov
add
pop
pop
addr16
ds
iret
in
cmp
leave
insl
lahf
xlat
xor
xchg
movsb
mov
inc
and
mov
jmp
in
push
mov
fdivrl
out
sahf
cmp
sbb
sarb
sub
roll
ja
test
es
outsl
lret
test
jg
loopne
add
mov
push
lret
cmp
pop
lods
sub
sub
fnstcw
inc
jns
bound
test
out
clc
mov
inc
jg
mov
add
or
bnd
inc
inc
lods
lcall
outsl
adc
enter
sti
dec
mov
jle
jmp
icebp
sbb
jae
test
out
hlt
enter
xor
sub
cmp
in
popa
mov
pop
pop
adc
pop
mov
mov
in
xchg
cmp
mov
jle
rclb
aad
push
sbb
lods
xor
mov
push
and
jecxz
pop
dec
add
shll
sar
dec
dec
cmpb
jecxz
sbb
inc
dec
mov
mov
jge
fcompl
xor
movsb
or
mov
sahf
imul
into
pop
mov
pop
idivb
jp
mov
xchg
test
daa
wrmsr
jns
test
mov
dec
xor
mov
insb
sub
jbe
lret
pop
xchg
add
xor
pop
into
testl
ftst
imul
sub
mov
add
sub
mov
mov
inc
push
stc
sub
dec
xorb
fdivrl
out
fdivrl
mov
gs
shrb
testb
adc
push
outsb
xor
shlb
sub
and
hlt
in
divb
mov
dec
mov
ror
ss
test
out
mov
mov
movups
addb
hlt
in
mov
outsl
add
push
in
or
in
jg
nop
dec
insb
bound
fisttpll
sbb
dec
shll
out
push
fsubrl
mov
mov
lods
out
sub
mov
int
push
pop
movsl
aas
jae
ficomps
lods
outsl
mov
shlb
loopne
pop
je
or
cs
test
mov
bound
imul
sarl
mov
aad
inc
sub
popf
mov
push
cmp
loopne
sub
lods
and
je
pop
out
push
incb
adc
aaa
pop
mov
cmovb
lds
cmp
scas
pop
ret
and
adc
mov
jecxz
negl
sub
movsl
mov
inc
arpl
jbe
sahf
inc
gs
insb
shrb
and
lahf
push
pop
pop
push
and
and
pusha
rcrl
movsb
je
or
in
lret
cmp
cmc
sar
lret
xchg
push
jae
push
leave
cmp
sbb
outsb
test
inc
aam
xchg
test
dec
cmp
cmp
adc
jno
add
jl
je
pop
mov
js
xchg
lcall
out
je
test
jecxz
mov
ficompl
pop
leave
mov
mov
jecxz
mov
jb
jno
insl
lahf
insl
push
dec
sbb
push
mov
mov
ret
daa
mov
cltd
ja
adc
jo
cmp
jne
dec
xchg
cmc
push
insl
jbe
movsb
mov
xchg
mov
pushl
pop
push
xchg
or
sub
inc
xor
cmp
hlt
into
mov
add
stc
aas
imul
bound
paddd
xor
mov
testb
inc
aad
out
ficompl
nop
xchg
and
jbe
inc
add
pop
dec
pop
dec
test
cmpb
xor
mov
xor
add
fldenv
out
sub
sarl
add
jb
cmp
mov
outsl
mov
and
add
mov
adc
in
rorl
dec
sub
fstps
pop
mov
adc
lds
movsl
jo
push
std
xor
jecxz
and
enter
fiadds
mov
addr16
into
pusha
cli
loop
cmc
or
add
push
fiadds
subl
inc
ficompl
xor
push
dec
iret
jne
add
ljmp
aaa
popf
jg
js
dec
dec
loop
jb
cmp
aas
adc
adc
arpl
scas
xlat
ss
bound
mov
dec
mov
rcll
imul
stos
mov
shrl
mov
push
inc
dec
xchg
je
mov
cli
mov
outsb
push
imul
adcb
add
pop
scas
xor
push
jns
push
sub
push
js
add
sahf
mov
inc
aas
add
sub
push
cmp
pop
nop
mov
mov
jne
in
fadd
jnp
mov
add
inc
or
testb
adc
pop
fstpl
scas
clc
push
pop
lock
les
out
adc
imul
jmp
lfs
inc
dec
xchg
into
push
jbe
arpl
scas
inc
pop
ret
xchg
sub
fmul
xchg
fstpt
inc
lods
clc
pop
iret
xchg
scas
ret
sub
and
icebp
sar
mov
imul
mov
sahf
cmpsl
mov
mov
cmpsl
test
rcr
mov
loop
or
call
ss
das
sub
cmp
adc
sub
sbb
cli
mov
test
and
adc
mov
das
test
pop
sub
insb
pop
nop
movhps
insl
in
push
add
test
ljmp
and
jb
cmp
inc
inc
xor
mov
fisubl
cli
leave
das
mov
push
rorb
outsl
xchg
stos
or
xchg
mov
pusha
jbe
xor
xlat
cmp
adc
fisttpll
test
sti
inc
sbb
in
xchg
ss
mov
jp
push
or
or
rcll
in
cld
repnz
jmp
mov
jmp
mov
jae
and
adc
out
loop
mov
bound
ret
notb
cmpsl
outsl
xor
pop
jae
in
mov
lea
cmpsl
jo
lret
mov
and
and
cmp
xor
push
cmp
fucomip
shrl
pop
repz
sub
add
adc
push
loope
mov
and
fisttpll
jmp
jo
sbb
adc
or
xor
or
xchg
rep
xchg
pop
movsl
loopne,pn
sbb
inc
inc
mov
adc
mov
jmp
sbb
shl
mov
sub
les
add
fmull
adc
idivl
pop
sbb
push
sbb
cmp
add
pusha
test
adc
push
pop
popl
std
sbb
sbb
add
sti
and
repz
sub
mov
pop
push
jge
out
repnz
loopne
fnstsw
sbb
mov
into
mov
push
pop
sub
outsb
push
gs
imul
ljmp
jns
push
push
push
idivl
add
subl
dec
sub
icebp
repnz
arpl
add
fs
sbb
push
push
xchg
pop
inc
add
test
pop
inc
pop
aam
dec
lods
lock
adc
out
jns
out
daa
sbb
add
mov
inc
sbb
jmp
jo
fsubrs
cmpsl
mov
xchg
mov
cmpsl
call
push
clc
xor
push
push
cmp
pop
stos
test
sbb
call
pop
gs
clc
push
repnz
add
incl
pop
mov
scas
mov
mov
jnp
nop
jnp
sbb
int
inc
lods
gs
mov
fisubrs
push
sub
or
xor
add
mov
jmp
ret
stos
insl
jo
sub
cs
xchg
xorb
xor
xchg
add
hlt
jge
cmc
jb
mov
in
andl
fiaddl
popf
adc
ficompl
add
pop
scas
js
mov
pushf
jbe
xchg
mov
cmpsl
fwait
dec
jg
mov
xor
call
sahf
repz
or
xchg
dec
jle
imul
mov
mov
push
sahf
pop
xor
or
mov
stos
dec
stc
push
dec
jmp
test
mov
xchg
or
dec
xorl
and
xchg
lods
shlb
dec
dec
xchg
cli
jecxz
outsl
stos
xchg
add
movsl
idivl
pusha
mov
jns
push
add
push
or
or
addr16
pop
cmp
mov
push
push
call
movl
shll
clc
jnp
dec
jl
or
or
test
cwtl
xchg
xchg
push
arpl
hlt
scas
dec
xchg
add
aad
test
sbb
or
pop
das
mov
rolb
test
neg
adc
mov
inc
mov
movsl
xlat
or
fstps
adc
adc
cmp
cmc
lea
pop
add
aam
dec
xor
jge
dec
stos
pop
xor
xchg
stc
sub
shll
mov
mov
cmpsl
push
idivl
lods
fadd
cmp
and
mov
inc
mov
and
push
cmpsb
push
and
jae
or
or
lret
rolb
inc
sbb
lahf
cmp
ja
stos
das
xchg
sar
aad
xor
dec
sub
cmove
pop
out
mov
mov
leave
adc
in
dec
xchg
mov
movsb
inc
push
dec
outsl
imul
xor
mov
jle
out
cmp
scas
xchg
lds
dec
repz
add
daa
push
stc
inc
iret
dec
fcomip
xchg
aam
adc
aaa
cmp
mov
mov
cli
ret
jle
inc
test
test
in
sbbl
fbld
or
cs
mov
jns
testl
sbb
xchg
lods
mov
lret
xchg
jg
in
jb
das
pop
lret
inc
pop
xorb
nop
sub
into
push
fbstp
mov
sarb
jmp
outsl
inc
mov
jno
xchg
mov
mov
and
add
das
sub
movsl
mov
les
out
inc
sbb
test
xchg
orb
or
inc
and
fs
outsb
inc
pushf
and
cld
outsl
addr16
cmpsb
fimull
outsl
cmc
push
mov
dec
jnp
pop
out
mov
pop
mov
movsb
pop
enter
out
pop
sbb
pop
jbe
xorl
cmc
vcvtsi2ss
mov
std
adc
ds
adc
xor
stc
inc
imul
hlt
jbe
and
inc
mov
xor
dec
and
popf
jns
mov
cmp
bound
mov
int3
test
xchg
sbb
hlt
rcrb
or
sub
pop
movsb
out
in
gs
fistpl
addr16
mov
xor
aad
ret
mov
mov
cld
pop
jns
add
xchg
dec
and
int3
dec
hlt
mov
jl
or
cmpsb
in
add
aam
sub
loope
jno
push
adc
mov
push
fdivrp
xchg
pop
ja
subl
and
add
dec
mov
repz
loopne
jle
into
daa
push
or
or
jb
fdivp
cltd
insl
cltd
and
pusha
pusha
mov
cmpsl
sub
lahf
add
or
push
movsb
jp
stc
jnp
stos
loop
mov
adc
mov
fdivl
and
sbb
and
cmp
arpl
push
sub
popa
mov
pushl
jns
inc
aas
loop
push
lcall
scas
xchg
add
fdivr
hlt
lret
pop
loopne
fistl
push
movsl
insb
daa
sub
add
cltd
xchg
mov
cwtl
push
mov
in
clc
lahf
sahf
inc
addr16
aad
sub
push
pop
mov
sti
jo
lcall
lds
push
js
mov
lods
cmpsb
cld
mov
dec
sbb
in
sbb
ret
push
js
pop
or
cmpsb
jae
xchg
in
arpl
adcl
jmp
cmp
mov
in
pop
dec
mov
pop
lcall
mov
pop
bound
mov
call
push
mov
mov
out
add
cmp
lock
or
mov
test
mov
push
mov
add
mov
daa
and
les
mov
push
popa
loope
and
imul
inc
sub
xchg
sbbb
jg
push
push
ljmp
ljmp
mov
jae
fs
inc
ljmp
sub
adc
cld
jge
sbb
jecxz
xor
and
mov
xchg
cli
mov
popf
mov
loopne
repnz
das
cmp
xor
jne
xor
iret
sahf
or
jne
xor
add
ret
in
dec
pop
mov
sbb
jmp
movsb
cwtl
dec
movsl
fists
addr16
jo
mov
xor
cs
cmpsb
push
pop
xchg
repnz
fstpl
lcall
mov
cmpsl
ja
xchg
aaa
cmp
mov
push
push
std
xor
mov
cmp
test
add
xchg
xchg
push
add
out
negl
sti
out
pop
sbb
loope
call
sbb
jns
orb
mov
jns
in
mov
mov
mov
inc
xorl
dec
mov
xor
int3
fistpll
testb
scas
xchg
or
add
add
xor
ljmp
pop
push
add
call
push
cmp
loope
jecxz
pop
loopne
pop
dec
adc
inc
enter
les
push
mov
mov
cltd
mov
stos
loopne
cmpsl
push
scas
xchg
daa
push
add
fsubrl
loopne
mov
xor
addr16
dec
outsb
push
or
or
mov
lds
loope
mov
iret
movsb
cltd
inc
xlat
jp
mov
fidivrl
inc
lock
test
push
adc
daa
add
adc
ss
push
adc
xchg
and
dec
lock
or
adc
push
or
and
pop
pop
pop
enter
sub
or
and
leave
cli
push
mov
in
mov
mov
sbb
mov
call
shlb
movsb
in
repz
movsb
cs
jne
lcall
mov
out
mov
ja
arpl
cli
lcall
cmp
lock
dec
leave
movsb
cmp
insl
dec
cmc
scas
sub
mov
in
inc
gs
pushf
jno
or
xchg
inc
inc
sbb
repz
sbb
jmp
ja
pop
jne
inc
daa
push
aaa
movsl
mov
test
xchg
mul
xchg
xchg
lds
xor
ja
pop
jne
inc
daa
push
aaa
movsl
mov
test
xchg
mul
xchg
xchg
lds
ss
adc
pop
jno
inc
daa
push
aaa
mov
out
mul
xchg
xchg
shll
push
lea
ja
pop
gs
inc
daa
aad
movsl
dec
jge
out
adcb
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
push
adc
ja
jo
add
pop
push
add
pop
or
add
add
add
adc
aas
add
nop
add
add
loop
mov
js
daa
add
add
jne
sbb
or
loope
test
add
add
add
add
enter
pop
add
add
js
inc
add
add
add
add
add
lcall
add
cltd
add
add
add
xor
push
add
push
add
add
add
sbb
cli
add
add
add
fadds
roll
add
test
enter
jb
insb
add
add
add
add
push
add
add
add
add
add
outsb
add
add
roll
add
add
push
add
add
or
movl
jb
jb
lret
add
add
add
aam
sbb
and
pop
add
add
add
add
add
or
add
add
scas
add
add
add
add
add
add
or
imul
add
add
add
add
sbb
sbb
push
add
add
add
add
add
add
inc
add
add
add
add
push
add
mov
cmp
movsb
add
add
add
add
add
sbb
insl
add
pop
add
sbb
insl
add
or
movsb
add
add
sub
add
add
add
add
popf
add
add
jb
push
add
add
add
mov
add
push
add
sbb
roll
add
dec
add
sbb
popl
adc
sbb
push
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
fs
jg
mov
pop
add
add
add
movl
and
jb
mov
push
add
add
lods
add
add
add
add
add
add
sbb
jmp
add
add
jno
imul
imul
add
add
add
adc
loop
or
jnp
in
push
add
add
add
scas
add
test
mov
add
add
add
add
mov
adc
push
add
push
add
jl
sbb
popl
mov
or
push
add
add
add
dec
or
add
out
movsl
add
add
add
add
movb
add
add
fadds
fadds
push
add
add
add
jg
data16
add
add
add
add
add
adc
push
add
add
add
add
push
sbb
jl
in
icebp
add
add
ja
cltd
add
add
pop
add
add
roll
add
add
add
push
add
add
add
or
add
add
add
add
add
add
add
and
add
add
push
add
add
jb
add
add
add
add
add
add
add
add
add
add
int3
add
xchg
add
pusha
add
push
add
add
add
add
jo
stc
divl
popf
jle
lret
fmul
adc
jg
and
push
mov
lcall
cli
xchg
pop
xchg
stos
jb
dec
add
inc
cwtl
shlb
cmovge
xchg
cmc
jno
ja
sbb
sbbl
imul
lret
xor
inc
inc
mov
jmp
outsl
outsb
jle
andb
stos
popa
sbb
sahf
test
bound
pop
or
sbb
and
jns
outsb
gs
push
out
adcb
jbe
psllq
mov
cltd
mov
ljmp
ss
mov
push
push
push
push
sub
andb
jge
cmpsl
icebp
test
xchg
movsb
cmp
insl
neg
std
jbe
les
jge
dec
out
rclb
xorl
fwait
repz
stc
jmp
sbbl
jnp
jo
lds
jbe
inc
scas
sub
idiv
pop
push
mov
pusha
mov
inc
mov
pushf
lods
test
data16
mov
cmp
andb
imul
into
pop
push
mov
es
and
fimull
and
jns
cltd
pop
and
insl
bound
pcmpeqw
adc
leave
std
adc
ja
jnp
dec
or
push
clc
xor
lcall
xchg
inc
or
adc
arpl
scas
add
push
adc
xchg
cmp
xor
subb
in
in
ret
cmp
addr16
adc
test
in
pop
aam
mov
cmpsb
sbb
dec
popf
or
negl
repz
lahf
mov
das
mov
fsubl
jmp
pop
retw
inc
pop
xchg
mulb
ja
dec
mov
sets
sbb
mov
mov
xlat
or
outsl
out
loop
insb
pop
sub
mov
into
call
xchg
cmp
test
bound
pop
push
das
ds
mov
jae
lret
sub
xor
sbb
pop
mov
xchg
sub
inc
fldl
lods
dec
xchg
sub
adc
lcall
jl
sbb
cmp
mov
mov
push
jp
mov
test
mov
mov
sbb
lock
mov
arpl
or
out
jb
cs
leave
ret
and
cmp
mov
cltd
xchg
xchg
sahf
jmp
ds
xor
jg
flds
mov
xchg
out
pop
push
xor
es
mov
cmpsl
shrb
mov
out
dec
int
movsb
enter
mov
xor
int
loop
in
cmp
sbb
movsl
cmpsl
notb
mov
mov
popa
cld
and
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
