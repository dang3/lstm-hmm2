call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lods
cld
out
xlat
and
mov
mov
xor
andl
mov
rcll
jecxz
repz
out
out
xor
arpl
mov
mov
rcll
mov
adc
mov
xor
lea
lock
xor
sbb
xrelease
out
fwait
push
test
fsubs
lahf
sub
aas
fistpl
cmpsb
or
xlat
jns
jo
pop
scas
and
mov
lret
dec
mov
sti
loop
jle
add
push
sahf
cmp
imul
cwtl
push
pop
cs
sarl
ret
testl
xchg
inc
mov
jg
xchg
xchg
sbb
ret
push
or
mov
mov
mov
addr16
xchg
jae
rcrb
mov
nop
rcrb
ret
out
cwtl
xor
or
shlb
lods
sti
test
inc
stos
test
pop
ja
add
jecxz
cmpsl
sarb
cmpsl
inc
mov
rep
add
pop
sti
das
out
aas
sub
jecxz
popf
test
adc
aaa
lret
or
push
add
addr16
and
lods
inc
cmpsl
jb
bound
mov
lds
ret
sub
pusha
sti
or
lds
xor
push
xchg
push
lahf
addb
sahf
push
aad
mov
push
iret
daa
cmpsl
push
xchg
arpl
xchg
push
mov
daa
rcll
jecxz
repz
xor
arpl
xchg
push
mov
daa
rcll
jecxz
repz
scas
pop
cwtl
fimull
cmp
adc
test
mov
stos
movsb
mov
mov
imul
imul
xor
pop
mov
jg
xor
inc
mov
push
inc
add
ds
fdivl
pop
dec
xor
mov
xor
jecxz
jl
mov
cli
xor
add
dec
mov
sub
and
jge
scas
jl
mov
pop
fdivrl
inc
push
addr16
jae
mov
repz
jns
mov
stc
xor
xor
ljmp
or
xchg
push
pop
inc
dec
xor
lods
imul
leave
mov
je
pop
daa
ss
adc
and
in
or
sahf
cmpb
pop
dec
pop
lcall
sub
arpl
addr16
push
out
pop
divb
imul
sahf
jge,pn
sti
pushf
ljmp
shll
push
nop
movmskps
fsubl
mov
xchg
aaa
hlt
jmp
sub
mov
xchg
mov
mov
icebp
pop
loopne
sbb
jecxz
inc
pop
push
scas
es
cmp
imul
mov
jae
cmpsl
jmp
pop
push
add
xchg
idivl
outsb
stos
enter
es
ljmp
lds
mov
sub
insb
mov
jl
xor
mov
ror
jecxz
aam
or
mov
push
sub
stos
mov
std
or
and
pop
or
hlt
inc
loope
cwtl
fbld
in
lahf
andb
dec
mov
dec
out
push
ja,pt
out
addr16
sbb
mov
push
push
je
mov
jo
fs
xchg
outsb
fiadds
imul
frstor
pop
push
mov
xchg
xchg
lods
push
xor
fwait
dec
les
fs
es
mul
stos
adc
adc
xlat
mov
mov
adc
fistl
ror
mov
rcrl
jp
add
sbb
ficomps
lods
sub
sbb
insl
shl
xchg
add
jb
mov
pop
pop
cld
dec
fsts
cmp
andl
icebp
in
js
out
push
scas
loopne
sbb
push
xor
mov
mov
in
stos
mov
test
xchg
and
nop
loopne
out
xor
xchg
xor
lret
push
and
addb
mov
xor
les
dec
or
cmp
xchg
mov
mov
mov
fs
mov
adc
xchg
lcall
aas
movsb
dec
xchg
fadd
mov
add
and
mov
ss
out
pop
and
ficompl
js
enter
insl
mov
inc
mov
mov
sti
mov
push
cltd
cwtl
jge
addr16
or
cmp
arpl
std
dec
fmuls
dec
fistl
add
data16
bound
movsl
cld
or
dec
jae
xchg
iret
push
mov
push
rorl
movsb
mov
fadd
js
jbe
addr16
jle
fcmovnbe
dec
mov
push
cltd
rclb
mov
jecxz
nop
inc
pop
mov
mov
cmpsb
movsl
outsb
cmp
xor
inc
movhlps
pop
cltd
mov
hlt
fbld
xchg
cld
adc
andb
aam
push
in
pop
orl
lods
lret
mov
mov
and
pop
scas
inc
call
inc
or
sbb
imul
leave
data16
cld
mov
push
in
sbb
dec
ficoml
sti
popa
adc
and
adc
inc
into
repz
fsubs
sub
mov
mov
shl
push
hlt
fistpll
in
scas
jbe,pt
fs
loopne
or
shll
and
sahf
add
push
out
icebp
aas
int
scas
jbe
stc
out
pop
dec
pop
scas
jmp
jns
popa
mov
in
jne
pop
outsb
sar
cltd
in
enter
adc
mov
jecxz
mov
fiadds
insb
gs
pop
mov
xor
jg
ret
shl
pop
subb
insb
cmpsb
xor
fsubl
inc
cmp
mov
dec
jle
xchg
movsb
lcall
cmp
pop
mov
dec
add
rcrl
scas
xchg
xor
mov
imul
xor
mov
sbb
and
outsl
lods
pop
outsb
ljmp
adc
push
test
xchg
inc
test
xorb
sbb
lret
jp
roll
rclb
sbb
and
sub
ja
xchg
jge
pop
mov
or
test
imul
or
pop
and
addl
mov
adc
cs
mov
out
sub
dec
cld
mov
cmp
sbbb
add
aad
rcrl
pop
fistpl
jmp
ljmp
addb
sbb
pop
pop
mov
imul
dec
sub
lahf
adc
call
je
shll
sti
xor
cld
cmp
and
rcll
xor
inc
nop
add
inc
cs
test
pop
subl
es
hlt
jl
push
imul
add
cmp
adc
push
not
and
iret
leave
scas
aad
add
or
test
xor
dec
orb
lds
es
mov
fucomip
dec
or
mov
loope
cltd
jb
and
add
inc
fs
sbb
sbb
leave
mov
out
in
dec
fistl
rcll
jnp
sbb
sbbl
sbb
mov
adc
aaa
push
std
xchg
data16
test
stos
xchg
insl
xor
push
jmp
repnz
jne
dec
cmp
nop
and
jnp
cli
mov
int3
push
arpl
loop
outsb
jno
push
cmc
insb
mov
bound
jg
stc
add
fwait
push
mov
inc
iret
xor
out
pop
fistpl
cmpsl
decl
inc
jmp
mov
mov
pop
out
mov
dec
sub
push
sbb
cmpsl
mov
pushl
stc
movsl
call
mov
mov
xlat
imul
cld
aas
aad
or
mov
frstor
out
jge
ret
jge
out
push
fstpl
sbb
lcall
int
cmpb
dec
pushf
and
pop
ss
adc
test
int
mov
les
cld
adc
mov
or
sub
mov
scas
popf
mov
jno
es
fnstsw
stos
sbb
sub
lods
aaa
cwtl
stos
fidivrs
pop
pop
stos
inc
xchg
mov
mov
arpl
cmpsb
repz
mov
xor
dec
adc
ja
mov
adc
jecxz
jns
and
mov
lock
bound
sbbb
les
cmp
mov
dec
fistl
jecxz
jne
mov
pop
or
imul
jle
adc
shr
mov
push
rorb
addl
mov
aad
std
js
fisttps
mov
jg
in
in
push
mov
sbb
dec
mov
in
push
sarl
hlt
ss
adc
sub
test
stc
imul
int3
or
lret
xchg
cmp
test
lcall
imul
fstpt
scas
jecxz
cli
shlb
arpl
pop
dec
xlat
sbb
add
sub
in
dec
push
push
push
aas
sub
mov
addr16
andb
js
insl
insb
inc
fiaddl
inc
and
cltd
inc
ljmp
subb
mov
ja
mov
loop
lds
ja
xor
test
lret
int3
mov
adc
jle
cmp
icebp
jge
push
jl
iret
sbb
rcll
in
movsb
dec
mov
mov
stc
mov
jns
cmp
mov
adc
cmp
mov
push
push
mov
pop
aas
inc
jle
fs
and
lds
ss
mov
mov
pop
adc
jp
nop
subl
cmpsl
mov
lock
adc
jle
arpl
dec
jp
push
add
lods
mov
repnz
sbb
fwait
dec
xchg
push
pop
inc
cld
mov
jne
lret
addr16
into
ss
push
sbb
cmp
imul
loope
xor
mov
adc
sbb
pop
mov
lods
fistpl
xor
add
js
in
lret
jle
jbe
sbb
outsb
cmp
xor
loopne
lret
xor
dec
mov
jo
lret
xor
dec
mov
inc
insl
xor
in
xor
mov
mov
dec
imul
testb
adc
jge
int3
pop
mov
gs
mov
xor
sahf
das
sub
jae
pop
or
add
movsl
ja
mull
pop
in
in
icebp
imul
pop
mov
dec
push
mov
iret
cmp
push
xor
ljmp
shlb
and
sbb
fnstenv
dec
and
mov
sub
jmp
mov
shlb
inc
mov
cmc
sbb
lods
in
pop
mov
shlb
xchg
sbb
pushf
arpl
sbb
cmc
inc
pop
pop
outsl
ds
fld
jmp
dec
mov
orl
push
mov
ds
ret
test
aam
xchg
cwtl
test
xchg
filds
imul
mov
cmp
inc
sahf
inc
pusha
mov
xchg
sub
mov
sub
out
fisttpll
add
int
fstps
mov
and
cmpsb
cmp
out
out
sahf
adc
push
fwait
lcall
cli
test
push
xor
pop
aas
sbb
dec
fmulp
fisubs
pop
es
dec
cmp
mov
mov
push
and
and
mov
xchg
lods
bound
add
jne
outsl
sahf
jo
xchg
int
pusha
jp
jns
ret
xchg
insl
adc
ret
pop
mov
sbb
sbb
cmp
add
push
push
neg
xor
cmp
or
popf
dec
sub
dec
mov
test
cmp
cli
js
mov
cli
rol
jmp
dec
test
fildll
arpl
jnp
pop
push
out
lods
aam
jge
jnp
lcall
aam
and
mov
mov
adc
clc
test
in
aas
sbb
les
or
rolb
xor
pop
popf
cmp
pop
daa
sbb
in
adcl
jmp
fnstsw
decb
adc
adc
adc
mov
mov
sbb
lcall
or
in
movq
add
push
cltd
xchg
push
mov
xlat
jb
loop
xchg
add
push
scas
insb
xchg
fs
fldenv
mov
fs
add
rorb
fstps
sub
fnsave
lea
and
cmp
stos
mov
add
imul
add
jns
lcall
push
mov
in
mov
gs
inc
mov
sbb
pushf
andl
jmp
in
push
je
decb
sub
fstps
push
test
add
lret
ficompl
lods
and
cld
or
push
xchg
out
adc
dec
popa
shlb
aad
gs
out
shrl
push
out
mov
push
pop
dec
lcall
inc
pop
movsb
sub
mov
cmp
dec
cmc
in
pop
int3
jge
adc
or
sub
sbb
stc
or
fs
inc
push
inc
mov
addb
sti
sbbl
push
int3
dec
lea
and
push
sub
outsb
mov
mov
mov
cmp
or
and
into
or
pop
rclb
imul
or
imul
iret
andb
aas
cmp
push
and
push
inc
stos
popa
loope
adc
rorb
xchg
stos
mov
test
cmpsl
xor
push
push
dec
test
sbb
xlat
gs
inc
out
mov
adcl
cmpsb
lds
fstl
stos
push
ds
pop
cltd
xchg
push
adc
in
ja
mov
cli
or
mov
xor
mov
sub
out
notb
jl
pop
mov
insb
dec
int3
in
mov
clc
aam
inc
sbb
call
das
jl
mov
pop
dec
popf
rorl
aas
addr16
mov
push
inc
out
mov
mov
adc
stos
test
ljmp
repz
adc
or
or
mov
in
stc
cmc
outsb
or
jbe
sti
pop
cmp
call
push
lret
subl
fs
iret
insl
iret
or
cmc
popa
daa
cmc
cmp
cs
out
inc
test
cmp
outsl
cmpsb
and
fdivrl
jge
scas
rclb
and
popf
scas
mov
les
lock
mov
adc
add
shlb
arpl
xchg
out
adc
cmp
pop
jae
fwait
pop
push
pop
mov
imul
xchg
dec
sarb
mov
pop
cmpsb
js
shl
push
mov
dec
popa
movsl
pop
pop
push
loope
jp
xchg
sbb
iret
cmp
mov
roll
and
add
jge,pn
pop
cld
and
mull
mov
mov
sub
push
cmc
mov
pop
xchg
leave
out
jns
mov
pop
mov
xor
cmp
adc
jbe
xchg
insb
mov
int
cmp
mov
ss
adc
daa
sbb
leave
movsl
adc
inc
xchg
int
gs
cmc
stc
aaa
aad
and
repz
push
cmp
out
dec
xchg
cmp
adc
lahf
xchg
jae
pop
lds
sbb
ret
ljmp
xor
cmpl
lods
sbb
push
mov
mov
mov
test
mov
dec
mov
pop
icebp
lret
paddusw
jno
fstpl
out
psubsb
test
clc
push
in
adcl
or
mov
sar
inc
pop
ljmp
mov
loop
push
movsl
je
test
push
or
rol
inc
dec
mov
cwtl
xor
mov
push
idivb
pop
mov
mov
subb
push
fcoml
sub
fimull
adc
sub
cwtl
mov
sbb
sub
cmp
cmp
subl
adc
shlb
inc
fsubrl
test
test
sbb
xchg
in
imul
jnp
dec
scas
aad
aad
mov
jo
and
ja
pop
push
shrl
jge
fmul
outsl
pop
rclb
mov
mov
pop
cs
or
dec
inc
jg
pop
mov
dec
jl
out
js
mov
xor
mov
cld
lods
fsubl
jg
jp
or
vpmaxub
or
je
jae
xchg
pusha
inc
das
mov
into
and
fstpt
sub
sti
popa
sbb
insb
js
xor
and
pop
cmpsb
xor
aas
or
jmp
sar
mov
inc
test
aaa
dec
sbb
mov
int
xchg
loop
cwtl
sub
push
mov
scas
stc
cmpl
ret
and
adc
jecxz
sub
mov
or
loopne
aaa
cmp
mov
insl
ficompl
sbb
mov
xor
mov
mulb
sti
jmp
idivl
and
add
mov
mov
and
mov
and
hlt
cmp
test
mov
adc
test
and
cmp
dec
aad
movsl
add
jp
push
inc
pop
mov
gs
into
inc
stos
je
arpl
pop
mov
inc
imul
scas
cmp
sbbb
out
in
xchg
ds
xlat
xchg
fldcw
fisubs
inc
adc
cmpsl
dec
push
ljmp
mov
jns
aad
and
push
insl
ficompl
ljmp
imul
call
mull
shlb
test
cmp
pop
lcall
push
jbe
int
imul
sbbl
mov
shlb
sub
inc
in
pop
push
pop
pop
insb
fs
test
int3
push
out
adc
and
inc
mov
loope
mov
popf
jle
or
out
pop
jnp
fwait
es
inc
loop
outsl
and
adc
cmp
pop
cli
in
sub
movsl
loop
xor
notl
jo
sub
adc
daa
dec
push
mov
sbb
hlt
cmp
movq
jge
mov
mov
sbbl
add
aaa
arpl
xchg
shll
js
mov
loope
dec
loop
flds
xor
dec
scas
mulb
int
out
ss
imul
pushf
mov
testl
mov
and
out
pop
mov
fisubs
dec
push
imul
push
add
imul
lock
out
rcll
in
pop
movb
adc
push
mov
add
stos
bound
enter
arpl
add
mov
add
lret
ds
mov
xchg
sub
repnz
gs
add
mov
or
pop
xchg
jl
add
aas
fwait
outsb
das
pusha
sahf
stos
mov
loop
into
test
sub
imul
mov
pop
mov
sahf
outsb
iret
fsubl
add
pop
lods
and
gs
ret
jo
and
jmpw
inc
dec
imul
nop
bound
pop
call
pop
jl
mov
mov
ds
stos
es
and
stos
roll
out
sbb
add
sbbb
nop
add
imul
push
stc
scas
stos
xor
mov
leavew
jae
cmp
pop
jo
mov
hlt
sub
xchg
pop
ljmp
pushf
mov
mov
in
cltd
mov
les
mov
lds
mov
imul
mov
ret
sub
out
xor
pop
mov
mov
inc
push
xor
arpl
jecxz
mov
shrl
lods
outsl
xchg
scas
imul
mov
test
lock
enter
push
jecxz
je
pop
out
pop
or
loopne
sahf
mov
push
adc
sub
call
mov
mov
and
or
mov
lds
pop
dec
dec
rolb
xchg
nop
rcrl
div
pop
mov
ret
xchg
cmp
jg
addr16
jmp
pop
push
ret
pop
mov
mov
jo
lret
and
arpl
mov
addb
and
pop
stos
push
or
cli
mov
xor
jle
dec
decb
hlt
adc
mov
loop
lret
mov
repnz
stc
mov
aad
push
je
xor
cmp
sbb
ret
lcall
mov
in
ds
adcl
mov
pushf
cli
cmpsl
xchg
sti
rcrb
fsubr
mov
pop
push
movsb
aaa
push
and
lock
jnp
jns
or
dec
repnz
cli
cmp
dec
lds
cmp
shll
cmp
adcl
lods
fsubrs
dec
and
enter
notb
mov
xlat
loopne
inc
xchg
push
test
cmp
xor
leave
and
orb
add
xor
and
roll
jle
aam
jo
sbb
js
pop
movsb
mov
push
inc
scas
aad
shll
xchg
xchg
xchg
shr
into
push
adc
xor
xor
ret
add
cs
sbb
push
dec
mov
repz
test
cmp
inc
lret
call
cmp
cmp
inc
imul
sbb
dec
lock
adc
mov
push
cmp
xor
or
lahf
and
int
jl
pusha
pop
and
cmp
std
iret
sub
int
int3
push
into
pushw
push
scas
mov
daa
out
iret
sar
loope
mov
push
or
sti
bound
add
mov
xor
mov
loopne
cmp
inc
jp
ss
out
jmp
int3
adcl
lds
mov
das
icebp
inc
movsb
test
or
or
mov
adc
stos
pop
sti
fmul
mov
push
enter
std
sub
xlat
out
inc
fcompl
data16
aam
repnz
jbe
loopne
fnstsw
adc
pop
adc
fsubrs
mov
inc
push
sbb
push
pushl
scas
inc
ljmp
cmp
clc
mulb
pop
xchg
faddl
push
pushf
mov
clc
lds
jmp
shl
fisubrl
cmp
pop
mov
pop
or
adc
stos
js
orl
adc
clc
bnd
in
jbe
adc
lds
cmp
test
adcb
fwait
outsb
add
mov
iret
add
xor
arpl
xchg
push
mov
daa
rcll
jecxz
repz
xor
arpl
xchg
push
mov
daa
rcll
jecxz
repz
xor
arpl
xchg
push
mov
and
pop
ret
ss
add
adc
and
xor
jecxz
jae
jl
cmp
mov
scas
sub
sbb
or
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lret
mov
mov
inc
movsb
jmp
rorb
and
jp
or
and
push
cmp
mov
mov
mov
fwait
loopne
sarb
and
jnp
lret
jo
pusha
sub
inc
lret
mov
mov
mov
fwait
loopne
sarb
jl
pusha
jnp
or
je
pop
xor
mov
insb
inc
adc
mov
sub
jne
adc
mov
cmpl
jg
or
enter
inc
xchg
adc
jl
mov
fwait
movsl
shll
addr16
add
in
dec
lock
mov
push
dec
scas
cmp
dec
lods
icebp
mov
cmp
xor
hlt
and
test
push
popa
xor
cmp
add
shl
fwait
pop
sub
xchg
mov
in
push
xor
in
jnp
cmp
ss
jo
dec
cmp
sbb
xor
xchg
xchg
outsb
inc
mov
mov
mov
fwait
loopne
sarb
and
jnp
or
pusha
sub
push
mov
scas
jae
xchg
mov
mov
dec
imul
or
jge
scas
icebp
mov
xlat
mov
jmp
dec
imul
cmova
fcmovnbe
test
xchg
hlt
pushf
fwait
loopne
sarb
and
jnp
or
pusha
sub
inc
lret
mov
mov
mov
fwait
loopne
sarb
and
jnp
or
pusha
sub
inc
lret
mov
mov
aam
jne
cltd
testb
mov
push
pop
push
sti
mov
test
outsb
fdivrl
sti
and
insb
cmp
sbb
jl
adc
cs
jne
bound
mov
out
inc
adc
enter
in
in
jae
mov
out
imul
mov
mov
fildll
xchg
and
sbbl
fsubrs
or
and
mov
dec
int3
flds
lds
aas
movl
ljmp
mov
add
mov
loopne
out
fidivs
add
outsb
pusha
enter
mov
dec
dec
xchg
ds
in
xchg
xchg
cwtl
adc
rorl
ljmp
fistpl
xor
sub
sub
sub
sub
mov
push
mov
int
and
mov
cmpsl
inc
in
sub
lret
dec
push
aad
mov
xchg
or
pusha
dec
cli
sub
cmp
bound
into
inc
lahf
mov
dec
insb
push
xor
daa
mov
cmp
out
xchg
ja
addr16
cmp
adc
push
mov
mov
aad
jne
test
xor
adc
pop
xor
push
or
xor
xchg
into
and
shll
addl
cmp
notb
cmp
push
jecxz
adc
das
mov
or
ljmp
lds
cli
divl
cmpsl
data16
es
mov
ret
mov
inc
faddl
add
aaa
sub
lock
lret
xor
lock
int3
scas
outsb
cli
cmpsl
mov
adc
cmp
lret
sbb
fs
mov
xorl
cmp
test
xor
fld
rorl
inc
pop
adc
xlat
mov
and
push
adcb
fsts
add
mov
jmp
adc
fldl
stos
jge
shr
xorb
out
sub
or
mov
arpl
xor
repz
dec
add
fistpl
sub
dec
fdivl
mov
out
call
jmp
aas
int
mov
inc
push
cmp
popa
sub
repnz
pop
out
and
jmp
cmp
push
in
lods
cmp
push
jg
sti
mov
inc
out
mov
rorl
popa
into
lock
cld
inc
test
inc
pushf
popf
push
xchg
insl
iret
inc
push
mov
pop
adc
mov
pop
dec
jbe
repnz
lret
lcall
jecxz
cmp
and
and
xor
sub
int3
stos
add
ret
add
mov
add
push
ss
or
xor
jmp
aas
mov
xor
jle
dec
adc
cmp
cmp
pop
mov
jle
fwait
adc
mov
in
mov
pop
adc
mov
dec
icebp
scas
inc
into
push
inc
inc
adc
xor
adc
adc
lea
cmp
add
mov
scas
cmp
stos
mov
arpl
rolb
pop
mov
and
push
jne
lods
xchg
sbb
pop
cltd
push
sbb
rol
dec
mov
icebp
aas
call
popa
test
push
mov
test
movsb
jbe
or
mov
pop
imul
xor
jge
jg
inc
rol
pop
adc
pop
ret
loope
jl
push
adc
or
sbb
cmp
ficompl
lea
stos
push
sbb
add
xchg
sbb
xor
js
sub
adc
cmpsl
das
pop
adc
in
adc
rorl
leave
sbbl
rcl
inc
es
sahf
mov
mov
xchg
add
fidivrl
ds
push
inc
pushf
stc
pop
mov
ftst
stc
push
fwait
enter
jno
aad
mov
lods
sti
hlt
repz
gs
popf
mov
xchg
addr16
or
pop
shl
cmpsl
mov
mov
jb
sahf
xor
mov
ljmp
out
movsl
rol
int
adcb
push
or
int3
jb
cmc
mov
cmp
mov
cltd
dec
hlt
out
scas
pop
call
mov
xchg
into
sub
cmp
inc
inc
mov
addb
loopne
es
add
lea
sahf
push
cli
es
fmull
in
ja
scas
sub
xor
jno
jl
mov
cltd
lea
cli
adc
push
xor
xchg
pop
mov
xchg
lds
fists
insb
sub
cmp
fwait
in
push
sbb
sub
xchg
mov
dec
cmp
sub
cmp
into
sahf
clc
pop
sahf
sbb
sbb
cmp
aam
sbb
sub
mov
fcmovb
adc
in
sbb
add
pop
lods
adc
enter
cmc
mov
pop
cmp
xor
fidivrl
fnstsw
xchg
pop
pop
push
inc
movsl
jno
sbb
mov
push
leave
outsl
jge
jbe
ficompl
stos
jb
test
dec
out
adc
adc
daa
subb
mov
std
sbb
jae
inc
xor
std
mov
sub
mov
rcll
stos
or
into
cmp
out
mov
das
dec
add
icebp
mov
fnstsw
dec
dec
test
dec
ds
mov
lcall
mov
push
aas
je
xchg
adc
repnz
or
fdiv
outsb
ds
neg
push
iret
dec
in
pushf
or
in
xchg
add
in
cmp
jecxz
test
mov
mov
mov
mov
and
push
cmc
cmp
imul
push
int3
sub
add
push
mov
lds
sub
out
out
adc
mov
loop
pusha
out
rcrl
add
push
aam
scas
decl
xor
sub
mov
dec
mov
ja
aad
inc
lods
das
mov
pop
orl
xchg
push
movsl
es
stc
das
fstps
outsl
sahf
cmp
out
pop
mov
es
test
xchg
dec
xchg
and
xchg
insb
dec
pop
sti
scas
pop
mov
hlt
mov
pop
js
and
mov
mov
pop
mov
es
into
stos
ljmp
std
ds
jl
jp
inc
pop
fucomp
cmp
dec
clc
cltd
aaa
adc
pusha
xchg
cld
in
sub
add
push
loop
jmp
and
sti
jno
inc
push
or
test
pushf
stos
adc
dec
or
arpl
xchg
cmp
test
xor
stc
ja
add
arpl
mov
mov
movsl
mov
paddusb
mov
bound
ds
jge
arpl
sbb
sub
dec
mov
xchg
sub
les
vcvttsd2si
jo
pop
sti
push
jb
in
inc
add
xchg
dec
and
scas
add
adc
adc
lea
pop
cmp
mov
cmp
sub
adc
xor
fucomi
sbb
mov
imul
loop
into
and
popf
sbb
sahf
enter
push
ljmp
mov
mov
sarl
outsb
or
jp
mov
xchg
dec
lods
push
push
daa
or
jo
inc
mov
mov
fistps
bound
pop
or
pop
mov
jo
sub
xchg
mov
mov
enter
pop
xchg
test
mov
loopne
sar
jae
sahf
dec
jecxz
adc
std
insb
imul
sbb
popf
sub
fistps
jp
adc
mov
mov
mov
push
inc
and
stos
stc
aaa
dec
cltd
mov
pop
rorb
popa
shlb
inc
insb
xor
cmpsb
leave
mov
sbb
mov
syscall
fldenv
addr16
in
mov
xor
inc
arpl
push
aaa
sbb
fadds
lret
mov
cwtl
hlt
mov
vmovaps
loopne
repnz
and
and
jmp
stc
inc
inc
rclb
sbb
inc
insl
cs
ret
les
inc
sub
lods
clc
mov
dec
mov
imul
enter
movsl
mov
adc
push
mov
clc
adc
dec
adc
adc
fstps
sub
call
xor
xlat
fstps
mov
rcrb
jg
fcompl
mov
fmuls
cld
pusha
call
jbe
inc
add
cli
nop
lds
loopne
ja
cmp
mov
fwait
testb
push
mov
add
rol
arpl
xor
push
and
add
adc
cmpsl
out
inc
les
insb
inc
jnp
jle
sub
icebp
rcrb
pop
icebp
fs
fimuls
pop
arpl
aas
cmp
mov
push
sbb
and
sub
js
or
mov
jbe
test
dec
out
decl
pop
cmp
in
sbb
mov
je
xor
xor
loopne
imul
lea
sub
aad
cmpb
sub
inc
xor
ficomps
xchg
mov
sub
mov
or
mov
jne
cmp
cmp
jno
xorl
sahf
sub
mov
jge
mov
andb
mov
stc
sti
add
sbb
sbb
mov
adc
jmp
push
add
in
ljmp
stos
inc
fwait
sub
sti
pop
fdivs
mov
sbb
cld
mov
xor
mov
mov
push
sbb
add
icebp
sti
sti
and
adc
xchg
cs
call
scas
hlt
cmp
cs
loopne
push
and
lcall
cmp
popa
pop
sub
push
xor
scas
imul
push
or
xchg
rcll
jnp
xchg
bound
mov
push
cmp
xor
movsb
out
mov
cmpsb
mov
sub
mov
pop
ret
lret
pop
fnsave
std
dec
xor
loop
movd
ds
push
mov
lret
aam
pop
xor
insl
ret
shlb
cmp
inc
cld
and
xor
mov
nop
rol
outsb
mov
mov
sahf
mov
fbstp
pusha
push
xchg
push
push
pop
stos
push
rclb
adc
movsl
jmp
sbb
inc
sub
push
mov
iret
mov
jnp
add
jl
inc
pop
stos
cmpsb
call
sbb
mov
dec
adc
repnz
or
push
xor
or
lahf
push
pusha
popa
mov
pop
lods
mov
add
xchg
or
pop
icebp
add
outsb
scas
lea
jg
fsubr
sti
xchg
xor
clc
sbb
sub
xor
hlt
xchg
ret
mov
jnp
divb
xor
xchg
lea
mov
sub
ljmp
jecxz
fidivrs
sbb
pushf
push
hlt
test
repz
hlt
adc
loopne
jb
sti
mov
and
int
push
test
mov
mov
pop
jmp
pop
aam
lds
xor
inc
stos
adc
pushf
and
cli
lock
mov
push
pminub
notl
xchg
cmp
push
test
jge
imul
cmpsl
test
ds
push
mov
add
xchg
push
lcall
rorl
mov
mov
push
jbe
sbb
data16
xchg
movsb
or
mov
cmp
or
jbe
jbe
dec
sarl
leave
mov
rorl
in
jl
jl
fisubrs
dec
scas
seta
out
pop
sub
mov
mov
xor
jp
ja
fwait
mov
out
or
leave
push
inc
sbb
int
lret
lock
mov
movsl
pushf
push
mov
dec
mov
adc
stos
insl
nop
add
fwait
sub
adc
loope
fists
or
gs
and
cmp
xlat
mov
dec
lock
test
std
mov
and
cmp
cmpsb
jno
jae
and
dec
or
cmp
aaa
cmpsb
xchg
inc
jbe
jo
mov
mov
ficoms
xchg
mull
sarl
mov
mov
push
stc
xchg
add
xchg
or
mov
mov
or
clc
jp
cs
imulb
sti
inc
lahf
iret
push
cwtl
add
jne
cs
mov
loop
or
jns
jo
sbb
fstl
mov
outsb
insl
jb
in
adc
adc
sbb
mov
dec
scas
pop
mov
xor
pushw
rolb
popf
adcb
xchg
cmp
test
aad
sub
fs
sarl
mov
push
fisubl
pop
outsl
scas
outsl
mov
and
jns
repnz
cmp
ret
xchg
xor
imul
orb
push
sbb
pop
cmc
jmp
addr16
dec
xor
fs
iret
loop
lods
mov
add
pushf
lret
icebp
add
push
in
test
dec
jle
or
and
stc
mov
shll
fidivl
jo
push
xchg
or
movsl
in
std
pop
imul
fisubrl
or
cmp
sahf
je
rolb
ja
add
push
cli
pushf
rcrl
scas
insl
inc
add
jae
rcrb
clc
loope
mov
push
cld
popa
jp
mov
shl
sub
jg
pop
hlt
dec
nop
mov
dec
ror
mov
daa
imul
nop
add
enter
daa
test
bound
mov
sub
movntq
add
add
fstps
divb
aam
lret
out
aad
jl
mov
jne
fwait
add
mov
sub
clc
fs
dec
jle
fistl
ja
push
pusha
sub
dec
test
nop
pop
lods
shrl
push
ret
add
add
into
xchg
jecxz
cltd
mov
rclb
pop
pop
pop
mov
sbb
dec
pop
cmp
xorl
pusha
dec
ss
insl
outsb
pop
mov
test
ss
loopne
cmp
daa
xlat
fdivrp
and
test
test
sbb
or
or
sub
mov
adc
push
cltd
inc
adc
or
pop
sbb
add
mov
pusha
aas
mov
test
stos
cltd
orl
and
stos
cmp
pop
out
out
loope
push
scas
pop
lock
xor
push
aam
movsl
comiss
adc
subl
testl
arpl
mov
in
loop
push
add
pop
call
out
push
ja
ret
cmc
aas
mov
lea
sub
mov
push
push
loope
adc
sbb
pop
pop
lcall
pop
adc
aam
dec
dec
xchg
mov
ljmp
push
in
add
or
fld
or
insb
mov
inc
test
push
movsb
adc
push
mov
mov
daa
sbb
pop
psubd
mov
add
jo
out
pop
sbb
orb
insl
ret
adc
dec
mov
loopne
lods
push
inc
push
int
xor
mov
call
stos
repz
movsl
inc
aas
pop
push
sbb
xchg
inc
fmuls
mov
je
or
lods
dec
and
int3
mov
and
aas
lods
movsb
aam
inc
test
and
mov
xor
jb
cmp
test
add
or
sub
jne
ja
push
or
aad
add
xor
pop
in
sub
sub
leave
fiaddl
xchg
cwtl
lcall
mov
inc
xchg
dec
dec
push
jno
repz
mov
adc
xorl
mov
push
loope
inc
xchg
aaa
jl
cli
popa
out
and
movsb
xchg
je
popa
jb
std
popl
and
hlt
jp
lahf
lods
scas
in
shlb
orl
dec
or
adc
or
out
dec
cmp
xor
cli
mov
dec
xlat
dec
xchg
dec
fwait
mov
jne
ret
lods
add
push
mov
or
rcr
lcall
xchg
or
insl
or
out
push
data16
jmp
xor
rclb
lcall
ret
bound
add
fmuls
mov
adc
imul
mov
loop
test
xor
out
xor
stos
jmp
ss
adc
pop
cmp
scas
je
sahf
pop
push
rcrl
mov
ss
mov
and
xchg
je
xchg
data16
mov
or
sub
push
dec
nop
or
dec
shll
imul
popf
shrb
cmp
xor
and
lods
or
lds
mov
mov
aas
sbb
pop
outsb
cmp
and
cld
test
mov
pop
out
jp
mov
pop
pop
jae
popa
inc
mov
es
or
int
sub
mov
push
stc
adc
jo
xor
lock
mov
mov
popf
inc
cmp
jl
inc
ss
je
inc
cmp
xchg
sub
sub
ja
pop
ret
inc
lret
dec
pushf
iret
add
test
sahf
push
arpl
test
cmp
loopne
mov
pop
pop
xor
xor
and
jns
jb
sahf
jno
fmull
push
adc
movsl
mov
aam
das
xchg
push
mov
xlat
imul
das
pop
dec
inc
lds
jmp
xor
push
scas
cmpsb
loopne
jb
lahf
xor
into
data16
and
test
lret
sbb
stos
pop
les
jl
loope
pop
dec
and
or
cmp
idivl
mov
xchg
decl
addb
jae
bound
mov
pusha
pusha
andl
popf
mov
add
adc
test
test
xor
jae
sub
xchg
xchg
xor
mov
adc
loope
jno
cmc
jo
fcompl
jo
or
leave
pop
dec
adc
mov
lds
jecxz
jnp
movsl
jmp
or
adc
clc
mov
out
negb
cmp
icebp
aas
les
pop
js
push
and
mov
sub
movl
fstp
xor
sahf
xchg
mov
mov
mov
dec
mov
andl
hlt
test
loopne
cmp
outsl
sbb
jae
out
mov
cmp
std
xor
enter
test
cltd
leave
in
pop
dec
stc
mov
movsl
fsubrl
ljmp
rclb
sub
or
je
add
and
loopne
dec
mov
sbb
test
or
stc
fs
sbb
xchg
shlb
sbb
movsb
dec
sub
mov
sbb
mov
push
lods
pop
icebp
pop
mov
adc
gs
stos
icebp
orb
insl
insb
xlat
and
out
movsb
fidivs
xchg
mov
std
mov
and
xchg
filds
add
mov
push
add
mov
aam
push
jno
divb
mov
ss
sbb
ds
fnop
jl
test
add
shlb
ret
or
add
mov
js
pop
add
mov
push
push
ret
jns
dec
pop
jge
jg
pop
fildll
or
pop
inc
adc
rcr
mov
insb
xchg
je
gs
mov
jp
aaa
sbb
dec
lock
daa
aaa
jg
stos
mov
push
xchg
mov
aas
mov
jge
adc
shl
ss
in
scas
rorl
push
xchg
add
jae
adc
cmpl
cltd
mov
in
mov
sbb
jl
addl
loop
cli
outsb
pop
movl
push
inc
jmp
add
or
imul
push
testl
push
mov
loopne
dec
cmp
icebp
cltd
sub
fs
jmp
insl
adc
dec
vcvtpd2dqy
aam
jns
add
or
lret
repz
push
sub
scas
adc
dec
inc
icebp
ds
inc
fwait
xchg
movsl
mov
loop
mov
les
jle
das
divl
sti
and
mov
hlt
shlb
push
mov
jne
push
jecxz
adc
ret
sub
aam
fisubrl
pop
arpl
inc
push
jo
out
fidivs
and
test
incl
fisubrl
fwait
xor
cmp
fisubs
gs
ljmp
aas
in
popa
xlat
pop
mov
ss
call
and
cmp
add
ljmp
jle
xchg
lea
lea
pop
adc
jns
int
xchg
cmp
ds
dec
pop
loopne
loope
cli
test
in
push
stos
add
loop
push
xchg
or
sahf
or
test
sub
sbb
in
arpl
cmc
fsub
sub
cmpl
je
xor
pop
fisubrl
pop
pusha
inc
ja
jno
fidivs
push
jmp
aaa
jmp
sbb
sbb
pop
jb
dec
repnz
or
fstl
cmp
xchg
sti
orb
mov
and
jnp
or
pusha
sub
inc
lret
mov
mov
mov
fwait
loopne
sarb
and
jnp
or
pusha
sub
inc
lret
mov
mov
or
fwait
loopne
sarl
rorb
and
jnp
or
pusha
sub
inc
lret
mov
mov
mov
fwait
pusha
stos
push
mov
mov
adc
jnp
imul
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
stc
mov
cmpsl
ficoml
fadds
jns
daa
pop
pop
dec
pop
cmp
sbb
inc
sahf
mov
cmpsl
mov
lret
imull
mov
cmp
dec
pop
jp
sub
push
or
mov
cmpsl
dec
xchg
adc
test
mov
push
aaa
dec
add
gs
push
and
dec
cmp
xchg
les
xchg
pop
mov
push
add
xor
ja
fmull
sbb
in
das
pop
lret
dec
add
pop
int
inc
push
fcomp
add
scas
sbb
push
add
scas
stos
scas
std
faddl
xchg
and
xchg
sub
push
dec
dec
dec
push
sub
addr16
jmp
repnz
push
stos
out
mov
push
ficoms
sub
add
push
or
and
mov
jmp
add
sub
push
push
mov
fildl
inc
das
fistpll
je
out
mov
xor
push
or
mov
cmpsl
ficoml
shl
lcall
daa
sub
jp
jb
and
push
or
xchg
mov
out
xchg
mov
aad
les
jp
cmp
aas
jb
jae
xor
add
outsl
or
repnz
xchg
fwait
iret
stos
outsl
mov
cmp
inc
xor
sbb
jae
dec
sub
in
loop
fldcw
jp
push
pop
pop
dec
pop
cmp
sbb
inc
cli
mov
cmpsl
ficoml
stos
out
xlat
mov
jp
push
pop
pop
dec
pop
cmp
sbb
inc
cli
mov
iret
sbb
inc
jne
inc
or
pop
sub
cmp
bound
in
lods
and
aaa
adc
sbb
or
mov
mov
rcrl
call
push
inc
xor
sbb
pop
out
mov
add
sarl
pop
sub
cmp
xchg
push
jns
dec
xor
das
push
lret
jo
loopne
inc
sub
sub
cld
mov
clc
jae
adc
int3
clc
add
ret
xchg
mov
movsl
jo
mov
jle
insl
dec
sbb
mov
ljmp
sbb
insb
sub
js
in
test
adc
repz
loopne
inc
cmp
sbb
jbe
andb
and
dec
pop
jnp
testl
fs
inc
push
lcall
or
in
inc
es
in
and
sub
ja
dec
xor
mov
cmpsl
je
out
jp
std
in
test
shl
mov
cmp
cmp
dec
and
test
lds
loopne
outsb
push
or
cltd
sar
es
pop
mov
jge
sbb
test
cmc
jo
and
ljmp
xor
inc
mov
dec
mov
fistps
ljmp
mov
loop
xchg
out
sti
aaa
dec
add
adc
and
push
dec
push
cmpsl
mov
hlt
fiadds
adc
jp
cmp
iret
repz
or
ja
mov
insb
mov
push
xchg
pop
fisubl
leave
sbb
pop
clc
int
idivb
cltd
xchg
movsl
push
rcrl
out
jmp
icebp
out
loopne
ja
scas
cmp
jae
xor
in
cld
xchg
add
pop
ret
cwtl
fdivrs
or
push
das
addr16
inc
negl
jp
fucom
push
adc
lods
test
or
hlt
xchg
call
ss
add
pop
cmpb
dec
test
aaa
fists
in
or
inc
mov
aam
lds
int
outsl
lret
push
mov
rolb
stc
or
inc
out
jno
add
xor
xor
cmpsl
xchg
and
push
or
inc
lea
loop
ret
call
lods
push
movsb
cmp
xchg
outsl
and
aas
inc
lock
jno
out
fbld
xchg
lds
fcompl
cmp
add
pop
in
mov
stos
adc
cmp
push
jns
call
mov
dec
lea
les
cld
xlat
push
pop
sbb
pop
xor
enter
in
dec
testl
push
or
and
out
in
shll
push
xchg
jne
mov
inc
inc
lret
sti
fucom
cld
je
sub
fisubrl
aad
xchg
addl
mov
xor
add
mov
push
mov
cld
cmp
dec
das
stos
cmc
mov
cltd
add
in
jb
pushf
out
dec
inc
push
shrl
xor
mov
mov
add
divb
and
ljmp
pop
addr16
mov
das
cld
mov
sbb
loope
mov
in
ds
dec
das
je
pop
mov
dec
leave
stos
aaa
orl
mov
add
movsb
dec
cld
nop
and
sbb
insl
dec
sub
and
cmp
dec
hlt
or
lahf
sbb
arpl
add
jnp
jae
scas
sbb
jg
xor
mov
sub
push
inc
inc
pop
pop
addl
lret
je
xchg
loope
call
adc
jp
mov
aam
sub
fs
jo
mov
insb
pop
loop,pt
cmpsb
hlt
adc
aam
bound
adc
ja
ret
xchg
ljmp
pusha
fdiv
lahf
xchg
xchg
sub
inc
or
shrl
test
fcompl
les
testl
lods
mov
or
adc
add
lahf
mov
adc
rorl
in
inc
cmp
cmp
roll
mov
pushf
mov
addr16
int
sbb
incb
rcrl
es
mov
dec
xchg
popf
ds
ss
mov
mov
mov
lahf
sbb
fisttpll
xor
and
or
cs
out
jg
jmp
sub
jbe
cmpsb
cmp
xor
mov
imul
inc
or
xchg
dec
testb
xchg
xchg
int
mov
test
cwtl
rcrb
or
and
mov
test
cmp
xor
scas
repz
jo
and
push
mov
cld
cmpsl
daa
inc
jmp
xchg
shr
data16
loopne
push
imul
loope
lret
inc
jae
sbb
jmp
sub
push
pop
xchg
in
xchg
out
push
lods
sbb
fmulp
lret
push
int
jp
cli
popf
xchg
dec
fs
mov
jae
nop
xchg
out
push
ds
mov
std
shll
cmp
mov
lock
into
repnz
pop
rorl
xchg
mov
int
xor
pop
inc
add
add
add
loop
sbb
enter
mov
mov
jbe
dec
jge
or
out
loop
sbb
mov
adc
icebp
andl
adc
cltd
fcoms
pusha
adc
add
xchg
push
data16
and
jne
mov
mov
out
test
cmp
ljmp
inc
add
lds
mov
jnp
or
jmp
outsb
push
loopne
xchg
loope,pt
or
test
cmp
add
adc
or
push
sahf
mov
subb
jl
test
icebp
jge
mov
and
mov
lahf
mov
sar
push
push
jno
xchg
cmp
inc
dec
loopne
mov
insb
lods
cmp
jo
test
push
adc
adcl
cmp
dec
pusha
faddl
jno
xchg
imul
shr
orb
loop
adc
pushw
daa
dec
fcmovne
jmp
in
adc
mov
mov
enter
out
arpl
aas
mov
mov
test
shl
movsl
nop
repnz
test
sub
xchg
and
xchg
and
ljmp
push
cmp
iret
sbb
sub
sarb
or
adc
fsubrl
arpl
push
jo
in
jb
jb
aam
pop
cwtl
sub
mov
push
cmpsl
mov
loope
icebp
xor
loopne
add
pop
push
mov
dec
add
inc
call
ret
pop
popa
imul
jge
stos
or
jge
fbld
sub
daa
xchg
mov
mov
dec
inc
pop
fdivrl
cmp
sub
xor
mov
into
in
test
lret
test
mov
jmp
jae
leave
inc
fucomp
xchg
rcr
push
movsb
xchg
jmp
aas
push
ret
jp
sbb
cltd
test
pop
test
inc
mov
lret
sub
into
mov
mov
lahf
jl
les
mov
lret
call
xor
stos
movsb
aas
mull
insb
and
fiadds
repz
pop
jb
sahf
lahf
jb
lock
fadds
bound
imul
or
negb
insl
ja
cmp
push
sub
sahf
insl
cltd
mov
in
test
and
cmp
pop
outsb
mov
sbb
mov
js
mov
leave
mov
and
dec
mov
leave
push
packsswb
sahf
and
xor
xor
jle
add
pop
push
push
jae
shll
out
std
test
sbb
sub
push
sub
xor
lcall
lret
cli
xchg
sub
inc
fisubl
cmp
cli
arpl
cmpsl
jnp
and
and
rolb
repnz
push
mov
out
std
cmpsl
jo
dec
xor
cltd
in
fwait
inc
divl
jle
jae
xchg
push
mov
loop
sub
xor
sub
xchg
shlb
xlat
fs
dec
call
xlat
aam
push
jnp
loopne
inc
scas
outsl
call
jmp
cld
jge
data16
inc
inc
int3
xchg
rcrl
mov
lock
mov
stos
out
lret
leave
xchg
incb
mov
pop
leave
sub
call
insl
dec
test
out
in
out
cli
dec
fidivrs
ficoml
xchg
mov
sbb
sahf
cli
nop
mov
jge
sub
push
test
mov
lret
iret
lock
xor
push
leave
add
adc
pop
shlb
and
mov
sbb
and
aam
xchg
das
adc
and
jnp
icebp
pop
jmp
ljmp
or
cmpb
dec
push
jg
fisubs
scas
jecxz
adc
ret
mov
mov
xchg
popf
jecxz
mov
cwtl
lods
sbb
xor
ljmp
inc
rorl
int3
and
call
jns
mov
mov
shrl
and
popf
fwait
outsb
rclb
dec
jle
shrb
ret
push
sbb
out
je
jmp
cmpsb
adc
sbb
push
push
xor
sti
imull
pop
scas
jge
cmp
in
rcrl
sahf
add
loopne
sub
xchg
push
loop
mov
cmc
cmpsb
enter
mov
inc
adcl
test
xchg
sub
mov
test
fisubl
test
mov
push
pop
lds
pop
lock
inc
inc
jns
fnstcw
in
lods
xor
mov
call
mov
or
mov
inc
sbb
xor
mov
mov
enter
cli
pop
add
mul
dec
call
pop
repnz
notb
push
pusha
imul
push
dec
cmp
test
mov
lods
cmpsb
adc
cwtl
xchg
daa
les
movsb
jo
add
loope
sbbb
repnz
sahf
clc
mov
or
cmpsl
dec
or
test
out
pop
or
cmp
jecxz
int3
daa
sbb
dec
mov
push
stos
push
or
mov
imul
pop
outsb
sbb
cmp
icebp
mov
inc
popf
adc
mov
jb
push
daa
pop
lret
data16
cmp
add
aad
dec
pusha
cmp
sub
stos
idivl
cli
enter
mov
mov
jns
sbb
xchg
push
push
inc
xchg
cmp
sbb
shlb
adc
push
popa
cmp
ja
push
ljmp
mov
cmp
popa
lods
out
mov
add
aaa
sbb
repz
inc
movsl
or
push
mov
std
xchg
mov
jb
sbb
lcall
pop
and
sarb
das
jb
adc
fstp
dec
xchg
jmp
icebp
xlat
fs
xchg
cmp
push
add
frstor
lret
inc
imull
dec
sahf
inc
rcrl
mov
addr16
xor
jp,pt
test
jle
or
push
and
sbb
pop
cmpsb
movsb
add
faddl
icebp
popf
xorl
scas
cmpsb
dec
shl
mov
add
dec
aam
and
mov
andl
add
dec
cmp
scas
jge
or
xorl
push
jb
sbb
xchg
add
shl
jns
push
pop
shlb
add
sub
stos
sarl
popf
popa
xchg
out
les
and
xlat
inc
or
or
add
pop
movsl
mov
dec
imul
pop
sub
xor
dec
out
inc
jno
ja
xchg
sbb
mull
sub
js
cmp
push
repz
and
add
ss
mov
dec
test
outsl
fbstp
adc
aam
push
xchg
mov
fstpt
sbb
add
mov
xchg
add
ss
mov
testl
mov
data16
loop
scas
mov
dec
dec
pop
ljmp
pop
popf
cltd
add
shlb
xchg
pop
add
cmp
sahf
mov
int3
pop
cmp
xchg
sti
out
push
dec
add
out
pop
inc
imul
int3
fcomi
out
jecxz
sbb
push
xor
adc
movsb
popf
jl
mov
popf
jle
sbb
or
xchg
cmpsb
mov
pop
xchg
in
cmpsl
hlt
jne
pop
into
add
pop
mov
mov
xchg
mov
in
in
mov
shl
xor
cmp
stc
mov
sub
push
mov
scas
mov
lods
pushf
and
add
shll
jmp
out
aas
pop
outsl
ror
mov
sti
ja
jge
mov
push
xorb
inc
dec
adc
mov
sysenter
xchg
mov
pop
cmpsl
sub
and
sub
mov
out
or
ja
into
xchg
fiadds
cmp
or
sub
cmpl
jge
fs
jg
inc
inc
je
add
cmc
out
lret
jno
cmp
pop
dec
ret
xor
js
in
lret
add
push
add
xchg
cwtl
mov
lahf
or
test
dec
or
cmp
mov
xchg
jae
in
sbb
mov
pop
adc
mov
jg
add
fdivrs
push
jb
fs
xchg
loope
and
or
sub
lret
adcl
cmp
mov
xor
mov
sub
dec
insl
mull
jbe
addb
jb
add
enter
xchg
push
inc
and
aam
sbb
cmpsl
mov
mov
imul
add
mov
mov
jo
dec
or
inc
iret
cltd
sbb
adc
push
jl
es
pop
xchg
out
fwait
iret
mov
imul
pop
rcrl
pusha
inc
jae
fisubrs
out
add
jno
sti
ror
frstor
dec
cmpsl
xchg
mov
push
clc
or
movsl
mov
rcrl
mov
jecxz
ljmp
sub
scas
push
in
jnp
mov
bound
push
xor
xchg
jmp
lea
xchg
push
push
mov
rolb
adcl
mov
lods
punpcklwd
and
mov
sub
les
add
xlat
in
jmp
repz
or
adc
in
cmp
push
test
scas
rcrl
cmpsl
mov
jns
push
fisttpl
sub
pushf
int3
dec
lock
adc
popf
xchg
outsl
lea
pop
adc
dec
xor
lds
lds
sbb
sub
dec
push
adc
fidivl
xchg
add
sbb
popa
in
test
and
mov
roll
sub
shrl
iret
mov
mov
fcoms
dec
into
cmp
jae
or
mull
ss
pushf
les
xchg
in
lea
scas
push
jo
inc
cmpsb
mov
sahf
sub
jb
adc
push
inc
cmp
scas
pusha
xchg
imul
aad
jp
call
aam
aas
rcll
sbb
xchg
xchg
rorl
mov
push
xor
leave
std
popf
cmpsb
fbstp
out
cmpsl
pop
push
sbb
lock
push
aaa
sub
orb
mov
aam
scas
and
das
cmp
xchg
imul
sar
xchg
icebp
inc
les
mov
es
and
fdivs
faddl
lcall
and
jmp
cwtl
loop
and
mov
pop
mov
call
ds
sbb
shrd
stc
or
sbb
mov
fwait
add
sar
sbbb
in
or
aam
in
js
scas
fs
sbb
mov
scas
fmul
lods
scas
push
stc
iret
jae
insl
jnp
stos
dec
push
mov
adc
sarl
shr
fsubrs
std
imull
sbb
sub
xor
hlt
or
das
imul
outsl
call
sar
push
mov
shlb
loop
xor
ja
dec
int
dec
mov
jmp
or
into
lret
dec
jno
out
pop
fwait
insb
push
jg
mov
shl
jno
outsb
test
lds
enter
in
in
clc
rcr
mov
adc
es
andb
cli
jp
aaa
loopne
test
lret
ds
test
adc
inc
pop
mov
and
dec
jl
stos
sbb
cmp
arpl
gs
aaa
cmp
cmc
test
in
sarl
js
repz
and
jle
pop
push
add
push
mov
mov
cmpsl
mov
cmpsb
or
mov
shl
lock
jle
out
sub
adc
sub
inc
push
mov
enter
test
lret
lret
cltd
insl
add
lahf
adc
and
rcll
test
sbb
cltd
gs
rorl
and
rclb
mov
pop
dec
mov
or
and
jno
or
xor
rclb
cmpl
push
repz
fcmovnu
mov
xchg
jae
icebp
pop
dec
jle
pop
mov
jp
inc
push
fcmovnb
push
adc
mov
and
push
add
sbb
dec
mov
adc
stos
push
mov
mov
add
adc
xchg
loop
xor
add
sahf
add
lret
movl
jecxz
lret
cwtl
mov
jnp,pn
mov
mov
push
pop
push
repz
rcl
and
cs
inc
inc
outsl
sbb
shlb
movsl
inc
lds
mov
andnps
leave
fs
mov
mov
xor
lods
sub
inc
mov
mov
pushl
leave
pop
push
lret
mov
cmpsl
mov
inc
mov
or
lahf
cld
and
pop
into
lds
dec
int3
cli
shlb
mov
or
sbb
pop
sub
add
sti
insl
mov
pushf
push
lret
or
add
add
lea
les
movsb
bound
mov
inc
lret
add
mov
loopne
push
push
insb
ffree
mov
or
mov
xor
nop
mov
or
xor
inc
out
pop
adc
stos
add
fstps
les
add
xchg
inc
or
pusha
aam
jle
in
sbb
sbb
out
dec
xor
test
mov
fnsave
test
fildl
sub
xor
jns
sub
lret
call
sub
cmp
scas
inc
cmp
aam
mov
ss
lahf
mov
loope
ret
out
lahf
jno
mov
cmp
mov
jnp
cmp
fidivrs
add
ss
adc
jnp
add
cmp
stos
pop
xchg
aam
and
in
mov
sbb
insb
sbbl
jnp
es
jnp
jmp
mov
test
push
xchg
cmp
mov
sbb
mov
test
pop
cltd
xchg
lods
mov
cltd
sbb
cmpsb
jb
add
out
out
incb
fucomip
sar
insl
das
mov
jle
sbb
jg
dec
pushf
es
ja
pop
inc
mov
mov
mov
je
xchg
jl
nop
push
dec
jno
push
in
xor
pop
cmp
jp
fsubrs
sub
repnz
lahf
or
or
ret
add
es
hlt
in
push
adc
push
inc
sarb
and
insb
cld
jp
inc
and
or
cmp
arpl
add
subb
jbe
pop
push
test
xor
sti
in
outsb
dec
and
mov
mov
pop
psubq
adc
mov
push
lret
out
sahf
cwtl
push
cmc
dec
movsb
call
xchg
push
mov
aas
or
jno
push
repnz
xchg
sar
std
mov
and
cs
sbb
push
lds
or
pop
jge
push
gs
mov
ret
or
outsb
es
je
sub
xor
cmp
lcall
nop
xchg
rorl
push
and
in
dec
out
mov
jno
je
pop
pop
adc
mov
icebp
inc
out
push
fildl
cli
lock
cmp
shll
xor
xchg
mov
cmp
xor
mov
sub
js
inc
setb
push
mov
push
sub
pop
shrl
ds
mov
ds
leave
cmpsl
xor
iret
mov
and
int
sub
mov
sbb
jae
mov
enter
popa
add
cs
push
pop
mov
leave
or
sub
adc
push
pop
std
xor
out
lods
xchg
out
and
pusha
and
aas
test
mov
cmpsl
sahf
mov
fistpll
xchg
xchg
inc
xor
call
or
xchg
shll
jno
test
push
dec
jb
mov
cmp
inc
cmpsl
xlat
inc
dec
pop
outsl
mov
in
xlat
ds
cmp
dec
rcll
shlb
sub
ljmp
or
mov
dec
add
sbb
lcall
jle
cmpsl
out
inc
les
cmpsl
popf
xchg
lret
imull
jp
push
pop
pop
dec
pop
cmp
sbb
inc
cli
mov
cmpsl
ficoml
stos
out
xlat
mov
jp
push
pop
pop
dec
pop
cmp
sbb
inc
cli
mov
cmpsl
mov
imull
jp
push
stos
pop
dec
pop
cmp
sbb
inc
out
mov
cmpsl
adcb
out
xlat
or
jp
xchg
lock
dec
jo
jmp
mov
jno
popa
repnz
mov
inc
xchg
roll
loope
xchg
pop
cmp
push
ret
jno
popa
repnz
and
push
jb
sub
adc
fs
adc
js
test
mov
fidivl
test
adc
shll
iret
add
push
loop
call
push
sbb
adc
mov
leave
sbb
sbb
xchg
push
cmp
loope
fcmovb
std
adc
test
cmp
dec
daa
mov
and
xchg
dec
mov
pop
jg
stos
lret
mov
adc
push
iret
jmp
push
arpl
out
aam
popa
cmc
adc
inc
rolb
out
repnz
dec
aas
rol
shll
outsl
pop
jmp
dec
scas
adc
das
sbb
pop
or
xor
dec
shll
loope
push
pop
push
jno
mov
ss
andl
into
shrb
add
mov
sbb
into
leave
pop
cmovle
jno
popa
repnz
and
roll
cli
icebp
pusha
loope
xchg
ds
pop
ret
adc
add
jge
dec
call
cmc
nop
add
and
inc
call
pop
push
test
xchg
and
insl
shlb
and
mov
movsb
inc
hlt
dec
aad
ret
inc
mov
xor
mov
adc
add
roll
push
icebp
jb
add
xor
inc
shlb
popa
repnz
and
icebp
jb
add
xor
in
lret
sbb
in
fwait
mov
lea
repz
sbb
xor
lods
jg
or
pop
inc
mov
mov
aas
pop
shl
ss
jbe
in
outsl
and
mov
stos
les
incb
test
icebp
pop
leave
cld
lea
pop
scas
mov
mov
mov
xor
ficomps
push
cmp
mov
and
lock
adc
pushf
pop
mov
xor
gs
jmp
add
outsb
dec
add
pop
outsb
lcall
lret
and
test
movsb
notl
btr
insl
fdiv
xchg
imul
xorl
pop
mov
and
sarb
sbb
sahf
sub
in
push
mov
dec
mov
out
cltd
mov
or
mov
cmp
xor
ds
inc
rolb
mov
fiaddl
jmp
nop
push
rcrb
sahf
pop
bound
in
in
cmpsl
jg
or
add
xlat
sbbl
stos
iret
gs
dec
inc
sbb
jns
fcompl
insb
sbb
xor
jl
fisubl
lcall
daa
arpl
mov
into
add
mov
adc
xor
adc
mov
scas
xor
aam
push
enter
mov
or
arpl
jp
dec
cmpsb
mov
mov
cld
xchg
mov
cli
je
xor
pop
lds
rclb
sub
into
lret
jecxz
pop
andb
add
jo
movsb
test
pop
xlat
mov
loop
ficoml
cmp
lcall
add
or
sub
mov
imul
lods
adc
xchg
mov
mov
cmp
cmp
xchg
jle
inc
push
xchg
out
inc
popa
xchg
imul
jb
mov
mov
jecxz
ret
data16
nop
out
or
cmpsl
mov
scas
mov
sbb
jmp
int3
adc
jno
movsb
mov
aaa
lcall
xchg
xchg
mov
iret
jbe
mov
jno
loop
mov
hlt
popa
or
pusha
push
adc
mov
mov
cltd
insb
and
pop
insl
sub
in
in
push
aam
movsb
sub
scas
popa
in
dec
std
data16
or
lahf
mov
jnp
fs
hlt
popf
call
inc
ljmpw
add
pusha
pop
add
add
mov
mov
jb
daa
push
cmp
jg
js
jp
and
cmpsb
cmp
add
gs
out
mov
sub
dec
aas
stos
aas
mov
lods
decb
inc
ljmp
jb
pop
fimuls
sub
dec
rcl
adc
rcrl
popf
dec
pop
in
xchg
les
stos
lret
loope
xor
mov
movsb
out
addr16
xor
sub
stos
jno
sub
push
hlt
gs
mov
jmp
and
mov
jnp
cmpsb
mov
rcll
xorl
fwait
ret
inc
inc
push
dec
xchg
mov
test
leave
cmp
sbb
popf
xor
add
popa
or
shll
mov
cmc
test
add
push
out
jp
sbb
adc
or
mov
jp
les
and
inc
repnz
popf
mov
arpl
adc
imulb
inc
cmp
jle
in
mov
loope
jo
sbb
xchg
adc
gs
xchg
cs
fidivrl
sbb
fs
adc
or
adc
push
inc
inc
bnd
push
add
and
or
dec
xor
repnz
fildl
or
sub
mov
leave
decl
out
aas
mov
adc
cli
xchg
pop
jmp
push
and
or
imul
out
jno
mov
sub
movsb
fdivr
push
test
popf
lods
add
mov
and
dec
hlt
sub
xlat
jl
mov
out
jg
xchg
adc
and
xor
loopne
and
sub
adc
or
push
cmp
or
daa
push
cmp
sbb
test
push
cwtl
mov
inc
imul
pushf
xchg
jae
sub
dec
popa
outsl
andl
add
ret
mov
cmp
mov
cltd
jno
xlat
out
jae
aam
out
je
and
push
adc
lea
lahf
sub
adc
inc
xchg
mov
cld
shl
ss
xchg
xchg
inc
movsl
data16
add
notl
mov
and
dec
and
cmc
mov
mov
mov
imul
push
sti
or
test
mov
out
push
leave
fcmovnbe
mov
test
jg
and
cmp
lret
std
adc
lret
test
out
fiaddl
sub
sbb
fidivs
xor
das
nop
out
jg
mov
fabs
out
mov
adc
icebp
pop
iret
mov
std
mov
out
scas
outsb
rclb
pop
xchg
push
cmp
stc
jae
mov
out
addr16
mov
lds
jo,pt
adc
adc
dec
add
adc
add
fs
lret
rol
daa
pop
roll
xchg
or
push
movsb
jp
cmp
xchg
lcall
rolb
inc
pusha
jge
or
push
sti
jmp
sbb
loopne
inc
insb
xchg
mov
cld
sbb
cli
jo
xor
ja
or
xor
jp
out
stos
mov
movsb
into
out
test
cmp
lods
pop
dec
es
imul
and
loopne
ljmp
sub
jle
add
sbb
scas
jmp
mov
sahf
not
or
out
imul
push
cmpsl
push
inc
test
lcall
sbb
fists
push
int
imul
mov
imul
mov
and
or
jge
cmpsl
fstpl
mov
outsb
lahf
popa
push
push
sub
xchg
ljmp
lods
cmpl
jo
jae
sub
dec
xor
mov
divl
in
clc
mov
jp
je
inc
popf
pop
mov
pop
mov
lret
xchg
ret
test
xchg
adcb
movsl
aaa
cwtl
inc
xor
les
lock
and
mov
cmp
or
push
scas
xor
fistl
insl
xor
inc
inc
jmp
mov
or
iret
inc
mov
stos
shll
test
cmpsb
sti
mov
enter
mov
pop
jns
jg
in
mulb
das
and
outsb
mov
mov
mov
jbe
add
push
inc
mov
mov
jo
arpl
mov
ds
jecxz
cmpsl
adc
std
pushf
and
jl
jmp
xchg
mov
xorb
mov
mov
push
mov
lret
decl
or
sahf
fistpl
insl
mov
cmpl
jl
sbb
cwtl
pop
dec
push
lret
dec
testb
xchg
or
fidivs
adc
push
test
and
mov
dec
jge
inc
xchg
sahf
or
pop
dec
xchg
out
pusha
mov
adc
xor
pop
cmc
adc
mov
in
push
stos
push
outsb
inc
in
pop
ja
xchg
roll
xchg
cmp
pop
or
xchg
sub
mov
lahf
test
sar
aaa
fstpt
cwtl
adc
mov
xchg
rclb
xor
das
or
mov
xchg
sbb
xor
pop
and
jae
in
lret
sbb
xor
outsl
pushf
mov
nop
scas
mov
sbb
leave
sbb
fsubs
jae
jp
pop
enter
in
xor
inc
pop
xor
pop
ficoml
inc
jle
inc
ljmp
subl
dec
es
cmp
imul
insl
cmpsl
inc
and
xorl
add
in
pop
dec
fwait
mov
negb
inc
pop
add
sbb
mov
jo
loopne
nop
mov
mov
or
pop
jae
mov
push
sbb
mov
sub
adc
loop
imul
sbbb
cmp
aad
dec
cmpsl
mov
or
push
or
dec
push
pop
andl
mov
sub
jns
daa
fldt
adc
push
arpl
jmp
ljmp
sbb
and
dec
mov
add
sti
xchg
test
pop
inc
jl
push
arpl
xor
adc
std
push
cmpsl
or
cltd
inc
fs
dec
scas
outsb
lcall
xchg
daa
xchg
and
out
jecxz
sub
icebp
cmc
sub
push
mov
sbb
fistpll
cmpsb
jne
inc
leave
sub
dec
ja
cmp
push
pop
shll
sub
xorb
add
mov
inc
sbb
xlat
jnp
lock
in
lds
fdivrl
adc
and
and
add
add
mov
ror
add
lret
pop
test
cmp
mov
xchg
sbb
stos
addr16
dec
fldl
xchg
sub
jle
cli
mov
cmc
add
or
add
sbb
cld
inc
or
cmc
int3
pop
dec
rcrl
je
das
daa
in
pop
adc
add
ret
jnp
and
sti
cs
orb
int
mov
mov
jo
mov
je
pop
cmp
icebp
jle
push
mov
nop
cmp
sti
jnp
add
inc
ret
pop
xchg
pop
mov
adc
cmp
xor
add
inc
add
filds
xchg
sti
cmp
into
stos
nop
orl
xor
orb
in
and
xchg
jo
in
sbb
pushf
ss
ret
int3
scas
pop
dec
pop
or
out
pop
aaa
sbb
jl
jg
gs
test
pop
out
test
frstor
dec
jle
push
cld
lahf
mov
fwait
repz
and
es
loopne
push
or
sahf
mov
mov
fdivl
inc
mov
jae
adc
pop
pusha
xchg
in
push
arpl
adc
lret
inc
das
xlat
ljmp
pusha
ds
imul
lods
stos
cs
ficoml
push
iret
lock
fcompl
xor
push
or
cmp
push
and
add
cmp
adc
imul
in
pop
or
xor
stos
jp
dec
cmp
mov
out
loope
sbb
in
pop
add
push
sbb
js
out
bound
mov
test
dec
test
jae
stos
sub
adc
lea
dec
ss
nop
into
mov
enter
shll
mov
insb
out
repnz
daa
dec
cmpsb
push
outsl
fmuls
pop
mov
in
push
xchg
clc
outsl
or
and
xor
mov
lea
aam
aam
dec
add
mov
pop
int3
lea
push
or
dec
scas
push
mov
ret
insl
or
add
insb
cmp
ds
icebp
fdivrl
outsb
lret
mov
jae
mov
hlt
lock
in
cmpsb
add
je
dec
sti
js,pt
xchg
jl
enter
loop
sarb
icebp
jnp
fwait
jo
sbb
nop
add
inc
jns
push
pop
enter
push
fnstenv
out
es
inc
imul
sbb
ret
and
imul
add
adc
push
repnz
cmp
jb
test
stos
adc
mov
pop
fsubl
adc
pop
bsf
jnp
inc
popa
jmp
xchg
push
es
push
test
jae
add
cmp
ret
push
clc
cmovae
movd
shll
fmulp
pop
imul
sbb
sbb
pop
loop
jle
and
je
cmp
daa
loop
mov
add
mov
and
aas
fistpl
popf
popf
fs
xor
pop
xchg
sbb
negb
push
ficoms
jb
pop
cmpsb
in
dec
jne
inc
pop
xchg
test
mov
adc
xlat
xchg
test
xchg
inc
pop
ret
mov
fwait
push
inc
dec
lods
jg
add
jnp
loope
out
cmp
in
sbb
fistl
pusha
jl
mov
divb
aam
mov
aam
scas
jae
insb
jmp
mov
pop
or
jl
sahf
loopne
fwait
mov
xor
outsb
in
jno
pop
mov
push
cmpsb
imul
cwtl
outsb
add
mov
inc
addr16
mov
cmp
pop
js
aad
aas
cmp
loop
xchg
ds
ss
adc
and
mov
pop
inc
mov
push
imul
in
out
enter
add
dec
je
jmp
lret
scas
popf
push
pushf
jbe
iret
push
sbb
mov
cli
lock
xlat
outsb
mov
bound
and
and
in
or
adc
mov
cwtl
cmp
push
sbb
xchg
mov
insb
jb
push
xlat
or
push
xchg
push
jnp
xor
sbb
add
repz
cmp
mov
xor
push
and
je
jb
jle
stc
push
je
lea
lret
ljmp
mov
pusha
xchg
aaa
outsb
add
push
inc
inc
cmpsb
cmp
xchg
decb
fistl
aam
push
and
je
add
mov
sarl
xchg
jmp
in
mov
subb
cmpsb
in
pop
pop
pop
cmp
pop
es
or
dec
push
test
mov
jl
lods
xchg
mov
fwait
sub
cmp
fsubs
sub
enter
fcmove
push
das
xchg
push
and
jb
mov
cmp
pusha
sbb
bound
jne
in
jge
jmp
fldt
lahf
insb
adc
call
aam
scas
in
sbb
out
ret
inc
notb
arpl
mov
addr16
je
icebp
aaa
add
pop
sbb
fldenv
pcmpeqd
cwtl
push
cmp
cmp
nop
cmovno
in
dec
sbb
in
inc
xchg
je
cmp
dec
pop
repnz
add
loop
lahf
sub
in
rolb
lret
jecxz
out
movsl
pop
imul
cmc
test
mov
js
test
lahf
adc
sbb
push
hlt
sbb
fimull
pop
pop
push
mov
mov
lods
xor
loop
jl
sbb
mov
mov
pop
sub
push
and
add
push
jmp
sub
jbe
data16
add
jns
pop
jmp
inc
data16
dec
pop
fwait
adc
dec
leave
mov
aad
xchg
and
xchg
push
mov
loop
mov
cmp
icebp
pop
inc
fldcw
outsl
mov
out
push
cli
mov
adcb
cwtl
les
dec
dec
or
jnp
clc
jbe
mov
mov
imul
scas
cmp
insb
jo
and
sbb
cs
lcall
lods
jb
ljmp
adc
cwtl
dec
push
inc
push
loopne
dec
mov
scas
lret
rolb
out
mov
ds
test
mov
push
test
ds
stos
lcall
cmp
pop
int
shlb
and
rorb
int
add
je
add
or
out
mov
mov
je
add
jmp
iret
mov
xlat
cmpsb
adc
add
mov
test
imul
dec
push
fld
inc
leave
adc
adc
out
mov
dec
push
xlat
data16
leave
ss
iret
mov
movsl
xor
inc
or
push
jno
mov
repnz
movsl
jge
dec
adc
fs
stos
js
pop
cmpsb
mov
iret
xchg
and
mov
pop
subb
mov
sub
ja
in
push
xor
mov
sub
add
push
push
pushf
sbb
pushf
ja
sbb
outsb
mov
mov
mov
push
test
sbb
xor
sar
loope
xor
stos
and
cmp
jp
aaa
cmc
sbb
mov
insl
mov
cmp
shll
in
sub
add
mov
dec
jne
stos
lcall
jl
add
leave
cmp
insb
test
scas
adc
mov
sbb
jp
or
lahf
cmp
call
cmpsb
mov
stc
inc
add
jp
stos
mov
outsl
imul
call
or
insl
imul
adc
cmp
movsb
lods
sub
out
aas
push
roll
daa
insb
sub
adcl
jbe
rcll
adc
lret
sub
js
sti
adc
ret
cmp
cmp
dec
lods
mov
pop
sbb
add
rolb
lods
enter
or
ja
loopne
jns
pop
dec
stc
mov
xchg
sbb
test
cmovge
jl
jbe
stos
jnp
pop
sbb
xor
lahf
clc
and
insb
jnp
push
out
xor
xchg
movsb
stos
push
in
cmp
mov
pop
ret
push
test
repz
jge
push
and
mov
fstps
cmp
cmpsl
out
idivb
shrb
jnp
sbbb
out
inc
fbstp
xchg
cmp
fidivrl
int
push
add
push
test
aaa
push
cmp
jl
lahf
inc
test
pushl
xor
inc
dec
ret
jne
shl
mov
les
cmp
push
in
mov
aas
jnp
fisubrl
popf
sbb
call
inc
arpl
push
push
loopne
fwait
rolb
inc
sahf
push
dec
lahf
dec
sbb
cltd
aad
mov
and
cwtl
scas
lret
ss
pop
scas
jle
ljmp
adc
or
cmp
ficompl
inc
pop
sub
ja
std
sbb
cmpb
mov
iret
dec
jecxz
add
data16
sub
mov
cli
sahf
jg
adc
adc
pop
push
scas
pusha
loop
push
jns
cmpl
pop
jo
and
lods
sub
pusha
push
xor
push
sub
add
out
test
and
jb
xchg
adc
loopne
fisubrs
xchg
jne
mov
push
mov
jb
shll
push
mov
jecxz
sbb
push
test
ljmp
push
jg
insb
dec
cmp
in
out
repz
and
repnz
xchg
xor
mov
mov
fstpl
icebp
xchg
push
inc
mov
xchg
popf
add
adc
mov
xchg
scas
jmp
inc
pop
scas
fsubl
mov
sarb
test
cltd
sub
lret
pop
mov
shlb
lret
or
cmp
jo
adc
mov
push
mov
mov
out
push
or
inc
push
hlt
pusha
inc
fdivrl
xchg
xchg
aam
mov
mov
mov
out
cld
cli
add
adc
cld
lds
push
sbb
nop
push
in
or
les
and
inc
aas
xor
shlb
pop
cwtl
pop
dec
loopne
inc
enter
add
sbb
stos
out
xchg
scas
outsb
mov
inc
inc
or
inc
xchg
hlt
in
andl
inc
scas
in
add
call
cmpsb
xchg
adc
dec
lock
in
popa
daa
loop
cmpsb
add
fsubrp
notl
dec
bound
cs
adc
inc
inc
sbb
jne
add
ds
decl
and
xlat
jb
addl
pusha
jg
inc
sub
mov
xchg
push
jno
inc
dec
adc
jne
adc
inc
ret
cltd
mov
insl
pop
orb
ja
hlt
jge
cmp
lret
popf
pop
jne
jle
sbb
sti
adc
and
mov
mov
mov
push
pop
in
push
add
call
sbb
jg
sbb
pop
xor
jg
arpl
pop
jo
xchg
inc
adc
sub
and
lret
cli
pusha
cmpl
push
nop
push
lea
cmc
sbb
and
mov
lds
and
rep
or
fwait
jbe
adc
pusha
pop
inc
scas
cmpsl
nop
pop
fnstcw
dec
adc
jmp
pop
mulb
push
jo
jecxz
cmpsl
push
xchg
pop
out
cwtl
sbb
fsts
xor
mov
shrb
sub
fstl
popf
xor
cmp
push
pop
mov
sbb
add
and
fwait
add
mov
dec
imul
mov
push
scas
ljmp
or
out
sahf
shrl
loope
imul
mov
cmp
imul
shr
movsl
jnp
pop
repnz
inc
aas
or
xor
lea
add
sub
pop
aas
adc
repz
dec
mov
jb
adc
push
addl
push
dec
repz
xor
sbb
fiadds
push
mov
pop
ret
stc
and
nop
cmp
dec
in
adc
arpl
ds
mov
ficoms
rol
sub
mov
sti
lock
dec
lock
inc
mov
pop
xchg
testb
mov
xchg
fsubl
xorl
js
pop
jnp
dec
fisttpll
adc
mov
flds
fwait
sahf
stc
xor
inc
push
cld
add
mov
test
ja
mov
lods
std
ja
fstpl
jle
pop
pushf
push
cmp
sahf
mov
cltd
mov
push
push
or
mov
mov
popa
repnz
and
icebp
jb
add
xor
inc
shlb
popa
repnz
and
icebp
jb
add
xor
inc
fdivl
popa
notb
addb
xor
rcll
loope
xchg
push
adcl
push
es
ss
popa
mov
addb
xor
and
mov
loope
out
or
pop
pop
dec
sti
loop
repnz
lret
shlb
mov
imul
and
mov
add
adc
loop
repnz
lret
sarb
orb
pop
inc
dec
push
cmp
sub
sbb
adc
loop
repnz
lret
sarb
orb
sub
cs
cmp
pop
pop
jo
adc
lods
mov
push
jo
add
push
pop
dec
xlat
mov
mov
rclb
mov
jb
movsb
ss
test
mov
lea
push
sub
dec
push
pop
inc
add
and
out
das
jns
push
ret
lds
into
scas
cmp
mov
fwait
sti
test
rcl
mov
mov
mov
mov
imul
jecxz
sbbb
inc
ss
addr16
add
jp
arpl
imul
into
in
or
loope
xor
nop
xlat
and
aas
negl
jb
push
and
aaa
js
fcoml
or
cmp
jmp
fcmovnb
lret
sarb
orb
pop
inc
dec
push
cmp
sub
sbb
or
lea
mov
hlt
int3
cmpordps
push
push
sub
push
adc
inc
push
jle
jnp
loop
lock
ljmp
or
or
and
int3
inc
dec
pop
jb
popa
inc
pushf
stos
jmp
popf
stos
scas
mov
mov
mov
pop
inc
dec
push
cmp
sub
sbb
or
sti
loop
repnz
lret
sarb
orb
pop
inc
dec
push
cmp
sub
sbb
or
sti
loop
mov
imul
lret
cld
adc
enter
xchg
adc
sbb
daa
je
xchg
dec
loop
jnp
add
cmp
pop
mov
ljmp
das
in
pusha
mov
mov
test
shr
sub
fwait
dec
sub
pusha
xor
jle
mov
std
inc
dec
aam
scas
jbe
lcall
inc
sbb
xor
jb
push
aam
mov
mov
mov
jmp
fstps
je
push
inc
push
xor
and
movsl
xchg
xchg
ss
mov
add
jns
out
mov
repnz
fstl
xor
add
dec
sahf
stos
lret
addr16
jae
or
or
jb
leave
stos
icebp
mov
mov
adc
sti
jle
aaa
cmp
aas
or
jl
test
mov
pop
pusha
push
loop
sub
rclb
or
inc
mov
xorb
and
ja
cmp
ljmp
jl
mov
push
inc
jb
test
jmp
mov
xorl
xor
push
sbb
jns
scas
subb
sbb
mov
and
in
cltd
and
jmp
cli
pop
dec
xchg
iret
push
sub
add
aas
bound
mov
dec
shll
xor
hlt
shlb
add
push
sub
stc
mov
repnz
enter
add
je
cmpsl
testl
sub
enter
test
mov
loope
stc
xchg
or
ljmp
and
dec
roll
sahf
dec
or
popf
mov
ret
shll
sbb
bound
or
aas
dec
ja
fstl
fsubl
movsb
push
lods
pop
call
shl
and
mov
dec
xchg
add
sub
xor
icebp
jmp
add
mov
es
mov
cmpb
popf
push
pop
mov
xchg
sub
dec
xchg
jg
pop
out
inc
push
mov
stc
in
dec
daa
mov
sub
add
aad
sub
xor
inc
add
stc
jbe
cmc
sub
sub
ljmp
jae
ljmp
xchg
lds
lock
pop
test
and
rol
pop
std
pop
mov
lods
aaa
or
lds
sbb
clc
movsl
pushf
pop
push
js
cmp
inc
mov
sub
stos
lahf
cld
xlat
jl
xchg
or
xor
sti
aam
dec
popa
gs
idiv
jne
mov
add
cli
lret
enter
out
add
xor
pop
rcrl
dec
cmpl
and
ds
sbb
insl
and
mov
dec
cmp
orl
inc
lods
hlt
and
xchg
fs
mov
daa
inc
sarl
sti
daa
mov
jo
cmp
das
xor
movsl
push
js
sahf
adc
jns
popf
ds
inc
push
pop
xchg
cmpsl
adc
dec
mov
push
stos
jg
xchg
push
jp
aam
ljmp
pop
xor
dec
dec
jnp
dec
std
loop
imul
cmp
pop
stos
call
or
mov
bound
jnp
lret
cmc
and
movsl
xchg
mov
stc
out
push
mov
jl
xchg
in
movsl
loope
iret
push
leave
push
lcall
jg
shll
dec
sub
mov
or
push
repz
xor
out
dec
lret
inc
test
sub
imul
fsubl
clc
jbe
jmp
sbbb
sbb
add
adc
jecxz
out
mov
lds
cli
subl
je
xor
sbb
in
adcb
inc
sub
addr16
ljmp
jb
xlat
push
pop
lock
test
jno
mov
sub
inc
cs
or
loope
aas
mov
sub
or
add
mov
arpl
gs
pop
aad
lahf
test
cltd
cmp
push
insl
inc
cltd
xchg
sub
mov
leave
push
stc
cmpsb
int
cmpsb
ffreep
adc
imul
jb
xor
push
mov
call
jle
into
mov
scas
adc
je
loop
gs
sub
and
push
stc
jbe
adc
cmc
push
int
aam
mov
lahf
mov
xchg
adc
and
mov
or
in
xor
movsb
mov
add
cmp
inc
js
jbe
movsl
scas
jb
es
sbb
adc
add
mov
test
aaa
mov
mov
sbb
adc
pop
inc
adcb
stos
ljmp
dec
ss
dec
ret
outsb
xchg
push
pop
repnz
xchg
gs
lret
jp
and
fsts
dec
and
clc
bound
out
sahf
or
out
aad
popa
add
arpl
out
scas
mov
mov
std
repnz
xchg
mov
jae
addr16
xorb
dec
lret
jge
push
popf
push
xor
pop
add
mov
out
aaa
pushf
jp
jp
and
add
mov
call
jmp
jp
mov
jle
andb
mov
mov
je
inc
mov
test
xor
lock
cmp
inc
lret
pop
inc
cli
xchg
mov
mov
jmp
cmp
mov
mov
mov
fdivr
int3
mov
cwtl
pop
repnz
iret
idivl
mov
ret
adc
jno
mov
mov
or
mov
xchg
sahf
ds
scas
jbe
flds
cmp
mov
push
pop
lret
lret
adc
outsb
test
out
loope
filds
adc
or
cmp
dec
test
das
xchg
loop
or
mov
test
pushf
shl
stc
or
ret
cwtl
das
addr16
push
jge
imul
mov
push
mov
lock
data16
hlt
cmpb
jae
aas
lahf
push
popa
or
filds
push
push
add
mov
fsubrs
adc
in
ds
cli
jnp
pop
lds
ds
push
ljmp
filds
xchg
mov
xchg
mov
aam
loopne
fisubrl
ret
popf
sti
clc
or
push
mov
sbb
fidivrs
rcrb
cmpsb
mov
lods
xchg
cmpsb
pop
push
pop
and
mov
loope
shlb
sub
das
or
inc
cmp
adc
repnz
mov
xor
or
jg
push
inc
mov
lods
sub
sbb
xlat
mov
adc
jge
xchg
test
jno
and
dec
jmp
pop
xchg
mov
jecxz
dec
test
imul
mov
fdivr
addr16
mov
jbe
or
adc
jge
sbb
out
fisttpl
inc
jp
jb
in
stos
shrb
pop
shlb
sbb
xchg
loopne
or
iret
add
mov
xchg
xchg
pop
xor
push
jns
scas
pusha
int3
call
popa
xchg
out
add
adc
jmp
ffree
cmp
mov
jbe
pop
xchg
insl
ss
negb
in
lds
pop
push
xchg
lea
je
leave
shll
fbld
stos
mov
ret
sbb
inc
mov
xor
movsb
jns
push
aaa
loop
add
jns
out
dec
das
test
sub
jbe
jg
cmc
aad
in
dec
es
xor
sub
inc
jle
xor
push
xlat
adc
sub
and
dec
and
add
inc
ljmp
jbe
lret
adc
xor
xchg
imul
and
mov
movsb
ss
and
cmp
std
cmp
mov
jl
lea
cmc
add
jne
jge
insl
shll
out
push
pop
int
sbbb
in
shlb
pusha
daa
xchg
sub
inc
and
xchg
jp,pn
aam
ds
push
mov
stos
ljmp
dec
lds
scas
scas
pop
ds
ret
shl
mov
int
sub
fdivrl
mov
adc
or
jo
movsb
scas
shrl
adc
orb
call
orb
xor
call
popaw
xor
cmp
insb
xorl
ljmp
jno
cmc
inc
mov
sub
mov
dec
pusha
adc
nop
lcall
push
and
ljmp
arpl
adc
lret
dec
out
mov
sub
inc
out
fs
push
test
in
mov
xor
idivl
ljmp
mov
cmp
xchg
and
insb
out
xor
fistps
ret
mov
cmp
nop
fwait
and
arpl
mov
scas
cmc
xchg
leave
movsl
mov
in
in
test
cmp
adc
xchg
cmc
add
data16
push
cwtl
rcr
jno
repnz
pop
fldt
dec
jge
or
cmp
sub
iret
jle
inc
xor
push
add
sahf
iret
es
jne
and
jecxz
mov
outsl
push
inc
ret
dec
mull
pushf
iret
dec
mov
imul
adcb
mov
out
imul
jns
and
jp
ljmp
lods
dec
push
ficomps
pop
rol
jno
pop
push
leave
and
cmpsb
movsl
mov
pop
xchg
xchg
cmp
mov
or
ucomiss
dec
aas
setle
adc
push
fsubrp
movsb
xchg
and
jae
push
loop
sbb
dec
insb
mov
dec
jge
shrl
sahf
jne
js
pop
mov
subl
inc
push
mov
pop
cmc
shll
xchg
mov
push
inc
aad
pop
jno
loope
mov
sub
inc
adc
popa
mov
push
in
dec
pop
shrb
orb
xchg
inc
mov
pop
sub
idivl
lret
push
add
xlat
cmp
shlb
pop
sarl
test
push
mov
enter
data16
jnp
mov
mov
jge
lds
adc
ljmp
outsl
imul
push
dec
lahf
add
dec
jmp
xchg
add
aaa
call
adc
cmc
ss
ret
mov
enter
imul
fcompl
jl
imul
dec
lock
scas
xchg
mov
pop
sbb
test
aam
nop
pop
pop
push
xchg
mov
ret
adc
push
arpl
jns
lret
cmp
xor
enter
pushf
jbe
addb
repnz
sbb
jb
adc
sarb
insb
arpl
rolb
lods
inc
inc
push
loopne
int
stos
jmp
xorb
cmp
sub
push
pop
add
stos
cmp
jp
testl
dec
push
inc
cltd
repnz
add
enter
add
leave
xchg
mov
push
mov
fsts
push
hlt
push
sbb
cs
dec
xchg
and
add
int3
adc
mov
pop
popa
fistps
dec
cmpsb
cmp
xchg
fs
and
mov
inc
push
lods
xor
xchg
jne
mov
xor
pop
and
add
fdivs
mov
sbb
push
xor
je
push
inc
xchg
cmp
rorb
xchg
fidivl
fiaddl
jae
xchg
rcrl
stos
in
ret
imul
cmp
insb
fstl
mov
cwtl
inc
or
sti
mov
lods
mov
sbb
or
jno
ss
and
add
mov
imul
js
and
pop
jmp
add
xlat
insl
xchg
xor
dec
insb
or
lods
negl
lea
push
icebp
mov
shlb
mull
enter
mov
inc
inc
je
and
outsl
pushf
icebp
divb
jne
xchg
leave
and
jp
or
inc
stos
jmp
outsb
or
lea
arpl
mov
hlt
out
test
inc
sbb
push
jne
daa
add
mull
lret
mov
mov
push
js
push
cwtl
out
inc
sbb
push
mov
mov
push
mov
es
add
jg
or
mov
dec
dec
cwtl
cmpsl
fildl
loopne
addr16
or
mov
xor
insw
mov
dec
dec
imul
xor
hlt
imul
frstor
pop
jge
push
shlb
sub
dec
scas
out
ret
or
mov
ss
mov
push
fsub
push
popa
pop
adc
andl
xchg
pop
fldcw
movsl
xor
sbb
repnz
and
and
in
aam
mov
add
sti
pop
fisttpll
inc
clc
pop
adc
nop
iret
movsl
sahf
out
jbe
cli
pop
sbb
les
mov
popf
mov
mov
or
cli
jb
mov
cmp
push
pop
outsl
dec
xor
mov
or
push
cmp
lock
mov
jnp
lcall
jbe
les
xlat
dec
int3
fsubs
mov
scas
mov
lahf
orl
sbb
adc
xchg
gs
inc
fiaddl
mov
orb
push
add
aad
adc
icebp
dec
fisttpl
push
je
add
je
mov
add
jecxz
mov
aad
cmc
pop
dec
cmova
vphaddwq
and
pop
fiaddl
xchg
fcoms
sub
scas
faddl
jp
stos
ss
fiaddl
push
sbb
sti
in
pop
scas
rclb
xlat
rclb
xchg
fildl
mov
xchg
out
mov
lock
add
aas
cmp
pop
jnp
adc
mov
test
inc
movsb
xorb
mov
or
sub
add
add
int
aas
mov
ret
pushf
push
or
jae
xor
in
xchg
lock
aam
xor
xor
shrb
lods
cmp
lea
mov
sahf
test
fists
sub
insl
cmpsl
mov
notb
fisttpll
push
mov
lret
gs
xchg
sahf
push
dec
sbb
nop
or
into
aaa
fcoml
rcl
adc
movsl
xchg
movsb
out
test
in
push
mov
lods
adc
jecxz
idiv
test
aaa
cmc
add
sbb
flds
sti
cmp
xchg
sub
xchg
scas
or
pop
idivl
sub
stos
int3
aad
addr16
push
mov
xchg
mov
shll
lret
scas
pop
mov
movsl
inc
pop
sub
fnstsw
sub
add
std
inc
cmp
add
dec
sub
xchg
nop
out
les
sbb
ret
push
dec
cwtl
and
sub
or
inc
outsl
mov
and
adc
and
mov
or
mov
subb
jns
pop
sub
stos
adc
sbb
fcmovbe
xchg
js
repz
xchg
adcb
rcrb
adc
xor
jmp
aaa
popf
inc
imulb
dec
mov
imul
aad
adc
test
pop
popl
pop
mov
jp
mov
scas
ret
movsl
jecxz
sahf
adcl
fmull
and
cmp
xchg
lahf
adc
icebp
xchg
or
rorl
xor
lcall
sbb
scas
mov
jecxz
aam
jg
adc
cwtl
out
iret
mov
loope
push
mov
lahf
cmp
pop
sbb
cmp
or
stos
push
iret
sbbb
sub
fmul
dec
push
popa
fdivs
pop
repnz
testl
jecxz
and
push
sbb
repz
pop
fsubrp
push
mov
movsl
imul
xor
sbb
inc
jle
push
lcall
adc
sbb
adc
negb
fdivrl
fimull
sbb
clc
sahf
pushf
scas
jl
cmp
rolb
out
xor
fcompl
pop
jecxz
sbb
testb
lcall
aad
sub
scas
leave
pop
ss
and
loop
in
sub
je
cld
cmp
insl
fs
pop
in
enter
adcl
icebp
stc
test
scas
cwtl
add
sub
jns
jnp
imul
push
rorb
shll
lods
test
sub
xchg
negl
mov
pushf
inc
dec
xor
xchg
pop
test
imul
mov
std
cld
xchg
ret
stos
pop
xchg
cld
sbb
adc
xlat
jmp
fistl
ffree
pop
test
scas
in
fwait
shrb
sub
push
pop
cmp
jmp
mov
repz
add
popl
xchg
push
dec
loopne
push
scas
repz
sbb
or
std
arpl
mov
jne
xchg
push
shl
sarl
scas
daa
cmc
ss
jmp
xor
jo
movsl
jne
test
ret
mov
in
pop
mov
xchg
jecxz
lock
test
es
sahf
fucomip
fs
sbb
cmovle
test
sub
pop
pushf
dec
jne
je
jecxz
xchg
jns
adc
add
daa
je
stos
xchg
ja
ja
les
sbbb
cmp
dec
add
out
arpl
jmp
sub
dec
xchg
xchg
lret
lods
lret
xchg
fidivs
adc
xchg
push
adc
jns
fistpll
out
daa
test
mov
cmc
xor
icebp
loope
inc
sbb
dec
pop
add
scas
aas
gs
and
cmp
and
jnp
add
xchg
cltd
pop
leave
adcl
sbb
adcl
jne
pop
test
sub
xor
jno
pop
pop
jmp
ja
loope
mov
popa
jle
mov
jb
adc
or
adc
test
popa
inc
mov
or
push
jns
cmp
fwait
aas
push
cmp
xchg
test
out
jno
or
mov
dec
mov
bound
cmp
mov
jb
pop
loopne
mov
dec
and
or
jbe
dec
xchg
insb
lds
ss
push
sbb
sbb
jne
loopne
cmp
jge
or
mov
and
in
test
jp
aaa
test
insb
inc
push
add
mov
loop
lock
fisubrl
push
aas
data16
jb
mov
nop
cmp
dec
push
in
xchg
lds
push
jae
dec
shll
loopne
sbb
insb
pop
repz
xchg
aam
add
jmp
lret
inc
movsb
pop
inc
add
xlat
lds
outsb
mov
and
xor
and
sbb
les
sbb
xor
jb
mov
xchg
cmp
pop
and
clc
pop
push
push
inc
cs
add
xchg
sbb
and
dec
aaa
mov
ds
ljmp
out
push
dec
out
sbb
or
or
popa
shrl
dec
adc
imul
jge
int
jae
adc
lods
lods
iret
adc
xchg
or
mov
and
jg
sbb
push
mov
xor
out
sbb
inc
mov
sub
add
jl
adc
mov
xchg
pop
mov
movsl
adc
shll
scas
dec
pop
es
fnstenv
popf
push
bound
pop
sub
jmp
movsl
xor
int
jge
inc
cmp
inc
in
mov
out
loop
popf
adc
lods
mov
shrl
mov
js
mov
je
shrb
aad
movzbl
js
xchg
push
push
or
insb
ds
mov
or
and
fstp
xor
enter
pop
add
ljmp
repnz
lret
ror
stos
mov
xor
movsl
mov
dec
in
rclb
stos
std
popa
jo
ret
idivb
pushf
xchg
xchg
mov
mov
call
xorl
adc
sub
lods
int3
inc
shr
aad
push
pop
pop
out
test
out
jo
shrb
mov
sbb
jg
inc
push
lret
inc
sbb
jb,pt
sbb
xchg
les
and
cmpsl
sbb
pop
lret
out
xor
mov
jg
xlat
xchg
sbb
add
sbb
daa
xorl
push
sub
inc
inc
mov
lea
and
mov
add
inc
ret
mov
mov
dec
jmp
xchg
xor
psrlw
cmc
xchg
rorb
pop
mull
ret
and
fcomi
shlb
add
mov
sub
sbb
xor
push
loope
fists
test
push
test
dec
mov
mov
test
mov
pop
sahf
loop
or
xchg
hlt
jecxz
and
inc
out
rclb
jg
mov
fsubl
and
out
push
adc
or
ljmp
int3
lret
xor
jl
icebp
adc
iret
stos
push
gs
subl
mov
test
int
adc
sub
jb
out
push
sub
mov
push
mov
lock
add
jmp
daa
sbb
mov
jmp
fbld
out
je
cld
dec
jp
fldl
add
xchg
mov
xor
in
lret
sarb
orb
pop
inc
dec
push
cmp
sub
sbb
or
sti
loop
repnz
lret
sarb
orb
pop
inc
dec
push
cmp
sub
sbb
or
sti
loop
jb
inc
lret
sarb
orb
pop
inc
dec
push
cmp
sub
sbb
or
sti
loop
repnz
lret
sarb
orb
test
fdiv
inc
dec
and
jecxz
repz
cmpl
dec
cmpb
or
jne
or
jl
or
cmp
les
imul
cld
dec
mov
pushf
sub
pop
jmp
fidivrl
fidivrs
sub
cmp
push
jnp
imul
dec
pushf
cmp
sub
sti
xor
or
inc
negl
dec
cld
lea
cld
sbb
sbb
push
jg
pop
pop
arpl
pop
fisubrs
or
jnp
xor
fsubrl
arpl
enter
xchg
and
fimuls
and
stos
in
mov
jbe
in
rolb
fldl
xchg
fists
arpl
mulb
lea
arpl
lods
adc
adc
sbb
push
dec
cmp
ret
mov
and
mov
call
add
xchg
and
lret
call
dec
imul
jge
in
inc
add
sub
movsb
out
insl
scas
jl
mov
sub
jnp
imul
nop
dec
mov
fsubrs
lods
sbb
mov
insb
mov
pop
int
jnp
adc
jl
pop
mov
mov
mov
pop
jmp
push
pop
stos
adc
sub
js
outsb
rorb
sahf
sbb
cltd
jg
jns
pop
jge
mov
ds
sub
pop
jmp
fstpt
mov
cmp
int3
jnp
imul
cld
dec
mov
pushf
sub
pop
jmp
fstpt
mov
cmp
int3
jnp
inc
inc
xor
mov
into
repz
dec
fsubr
por
cmc
dec
test
pop
inc
and
jns
popa
xorl
popa
xor
js
inc
fimuls
bound
push
popf
xchg
mov
mov
pop
in
or
rolb
adc
aam
inc
movsb
rcll
in
push
clc
sub
outsb
inc
test
out
jne
movsl
dec
mov
push
repz
iret
hlt
cmc
test
cmp
scas
cmpb
outsl
cmp
cs
push
sub
xlat
mov
arpl
fiadds
and
mov
decl
fwait
mov
bound
out
dec
fildll
adc
sub
stc
pop
pop
test
ret
adc
repz
popf
cmc
inc
pop
xor
xor
and
mov
push
mov
mov
repnz
mov
clc
popf
inc
repnz
testl
sbb
jns
addl
mov
sahf
cltd
leave
jl
aaa
outsl
cmp
adc
mov
inc
hlt
shlb
rclb
clc
mov
cmp
fwait
ds
mov
aaa
hlt
fmull
xchg
iret
and
inc
sub
in
mov
cmc
aam
cmp
push
int
push
dec
outsl
push
notb
dec
into
loopne
sbb
out
flds
adc
mov
cmp
add
jl
add
test
aaa
test
nop
cmp
int3
sbb
scas
mov
popa
sbb
loopne
inc
lahf
cmpsl
jg
mov
imul
mov
cli
out
or
pop
push
pusha
lret
int
mov
mov
jno
popf
sbb
inc
xlat
or
fucomip
and
and
movsw
gs
cmp
repz
sub
push
scas
jno
pop
icebp
dec
add
outsb
xchg
inc
xchg
add
leave
fs
stos
cld
fsubrl
loopne
fsub
out
dec
push
call
ja
scas
maskmovq
mov
test
iret
xchg
jl
and
cmp
sub
incl
popa
push
std
test
hlt
aad
adc
or
call
sti
add
in
fs
mov
add
fisttps
pop
jbe
icebp
rcrl
in
jb
je
lods
insl
xor
ljmp
push
mov
mov
inc
pushf
push
or
fstpt
inc
push
sbb
lret
add
or
arpl
aam
mov
mov
cmp
xchg
and
or
into
icebp
test
cltd
jns
dec
mov
mov
lret
mov
push
es
movsl
push
and
fiadds
add
into
and
mov
or
pushf
push
sbb
arpl
sti
mov
mov
je
mov
fsubs
shlb
push
mov
and
adc
lretw
out
push
jns
into
add
out
jp
push
xor
add
sbb
mov
sar
loopne
pop
add
push
xchg
jmp
loop
js
mov
push
mov
sub
mov
aaa
cs
fadds
sub
mov
sub
inc
negb
mov
rorb
das
popl
in
pop
push
cmc
xor
sbb
jne
into
xchg
out
dec
loopne
jno
adc
mov
pop
test
push
pop
dec
sub
dec
in
cmpsb
push
int
fs
sub
push
mov
in
sub
test
jmp
pusha
mov
das
xlat
sahf
jmp
cld
hlt
cld
jmp
jmp
push
insl
mov
loope
mov
stos
xchg
das
push
jno
cltd
pop
lods
dec
or
push
adc
fnsave
xchg
dec
popf
cmpsl
cmp
sub
scas
insb
cmp
mov
pushf
mov
addb
in
lret
mov
adc
dec
jecxz
fwait
xchg
and
fisubl
jp
es
repnz
dec
cmp
mov
hlt
adc
xchg
les
mov
dec
add
mov
lods
clc
pop
or
pusha
dec
push
pop
test
sahf
pushf
jge
popa
int
add
test
out
pop
mov
sub
inc
cwtl
pushl
or
xor
mov
or
adc
inc
xchg
sahf
enter
dec
loopne
push
rcl
cs
or
dec
movsl
xor
gs
mov
outsl
hlt
bound
sub
jecxz
inc
sbb
loope
testl
ss
cmp
mov
movsl
arpl
out
ja
ds
adc
fldenv
jno
mov
sbb
push
loop
add
mov
cmp
mov
cwtl
push
add
pop
cmpsl
gs
cmp
aaa
push
flds
aad
sbb
cmp
aad
inc
insb
adc
push
in
sahf
dec
or
jbe
inc
cli
push
inc
xchg
push
xchg
add
sbb
mov
xchg
push
or
out
es
mov
sahf
dec
in
cmp
mov
cmpsl
adc
shlb
dec
push
popa
sahf
and
lahf
pop
dec
es
cmp
fiadds
push
and
pop
cli
or
jecxz
jecxz
lods
je
into
mov
inc
lret
xor
adc
mov
xchg
dec
push
or
shl
mull
add
aad
mov
jb
jae
mov
cmpl
mov
and
jl
jg
push
adc
push
fisubs
mov
jg
repz
push
mov
mov
add
pushf
clc
lods
xchg
ret
insl
adc
sar
push
pop
ljmp
and
xchg
test
or
sbb
push
hlt
pop
inc
adc
test
push
push
clc
mov
push
loope
in
and
jb
cmp
jne
pop
into
push
and
mov
inc
xchg
mov
mulb
xchg
dec
movsb
sub
push
call
adc
gs
adc
sub
test
fists
cmp
dec
aaa
jp
cmp
std
mov
xor
sub
and
cmova
mov
aad
jl
push
lds
outsl
std
movsb
xchg
xchg
push
out
mov
lahf
das
inc
int
pop
cmpsb
ljmp
js
test
add
outsl
arpl
lds
out
sahf
xchg
jge
std
cmpb
push
pop
cli
mov
and
push
inc
shufps
xchg
and
xchg
lods
sbb
stc
mov
xor
pop
data16
xchg
stc
stos
cs
pop
sub
ret
sub
xor
mov
leave
push
or
cwtl
out
repnz
das
mov
in
pop
jo
lea
add
inc
in
lods
lods
dec
roll
jp
dec
je
cmp
jae
arpl
imul
lea
out
les
push
add
pop
add
jo
fists
mov
jnp
or
xchg
inc
add
fstps
stc
adc
lds
sbb
lock
pop
stc
out
cmpsb
lret
sub
inc
xchg
fcomp
mov
jecxz
mov
cmpsl
lock
xchg
jae
xchg
mov
adc
in
repnz
rolb
ss
push
xor
inc
cmp
jp
clc
sbb
sub
adc
aas
and
aad
out
add
repz
jbe
dec
xor
pushf
mov
inc
xchg
xchg
cmpsl
push
adcl
mov
dec
aas
popa
stos
jp
add
fbld
insb
cmc
jo
and
pusha
fisubs
js
inc
sub
hlt
out
outsl
adc
fmul
movl
ficoms
incb
lret
adcb
sub
jbe
or
cmp
repz
add
xchg
int3
xchg
xor
add
mov
data16
xchg
fsub
scas
push
ja
mov
inc
es
int3
rcl
aad
scas
mov
mov
xchg
sahf
mov
adc
pop
jbe
add
call
sbb
aad
push
jno
repz
add
cmp
push
and
testl
sbb
adc
dec
repnz
aam
mov
shll
jg
or
mov
xchg
cmc
jecxz
xor
or
dec
adc
fsubrs
inc
cmp
pop
jns
add
shl
pop
je
fstpl
out
cmc
lock
or
rcrb
out
cmp
hlt
pop
enter
add
jno
xchg
mov
xlat
fdivr
scas
pushf
jns
xchg
and
dec
stc
dec
push
movl
mov
push
movsb
or
sbb
fs
lds
xor
push
fs
push
popa
push
mov
push
or
cmp
daa
dec
adc
icebp
roll
repz
add
clts
repz
cmp
mov
push
push
cmc
imull
lea
cmp
movsb
ds
lea
pushw
mov
mov
sarb
lds
and
cmc
jno
push
pop
pop
sahf
imulb
cmp
and
int3
push
mov
ret
shl
sbbl
and
lods
xchg
xchg
push
ret
lock
xor
addr16
in
stos
xchg
std
incl
repnz
enter
or
test
int
mov
stos
fdivrs
mov
std
mov
daa
stc
mov
iret
dec
call
fwait
into
jbe
mov
loop
lahf
and
out
cmpsl
leave
mov
fstps
xor
andb
cmp
test
dec
xor
mov
mov
push
ljmp
psrld
add
sub
push
in
adcb
test
xchg
inc
cmp
pop
aam
aad
shl
cmp
mov
xchg
pop
dec
ret
sub
xor
jbe
cmp
test
dec
cmpsl
xor
out
shr
iret
jo
cmp
inc
inc
inc
sbb
jns
ljmp
push
push
add
bound
pop
nop
sub
movsl
xchg
iret
stos
mov
xor
xchg
pushl
mulb
lret
push
lea
sbb
dec
sbb
xchg
mov
and
mov
xchg
cmp
pop
int3
or
jo
fucomp
lock
sbb
repz
push
pop
je
xchg
lret
loope
pop
cmpsb
xor
gs
in
addr16
rcll
mov
mov
mov
and
pop
in
adc
out
stos
rolb
ret
js
das
pop
fldl
dec
loopne
loopne
xor
aam
and
leave
mov
popf
cltd
add
cmp
popa
fs
pushf
ret
mov
arpl
aad
out
repnz
sub
mov
adc
lock
push
arpl
jae
pop
sub
sbb
and
dec
pop
cmp
fsubp
rep
mulb
adc
or
xchg
insl
int3
sub
adc
stc
add
pop
jle,pt
arpl
addb
mov
jl
adc
add
in
xchg
sbb
mov
aam
jbe
sahf
sti
inc
push
cmp
mov
outsb
or
mov
nop
dec
cli
mov
loop
stos
mov
ffree
jmp
into
pop
rcrb
mov
cmp
mov
jae
call
pushf
lcall
sbb
and
idivl
icebp
sub
ret
addl
sbb
cmp
sub
rcl
daa
hlt
cmpl
repz
jnp
cld
and
push
jle
in
sbb
icebp
pop
mov
sbb
push
pop
and
mov
test
outsb
js
ss
pop
inc
jb
xor
in
lcall
sti
xchg
push
adc
clc
cmc
icebp
adc
pop
adc
dec
or
rcl
and
xchg
lret
dec
inc
call
xor
xchg
mov
imul
or
or
subb
push
jne
push
add
mov
cltd
cltd
aam
pusha
or
out
pop
sbb
cmpsl
movsl
in
jne
sahf
mov
or
push
xorb
aaa
jp
ss
sbb
dec
adc
and
aaa
xchg
std
insb
dec
dec
sub
faddl
je
jne
mov
js
stc
in
and
popa
int
data16
stc
lret
popa
and
into
dec
mov
xlat
mov
lock
cmp
xor
sbb
push
add
xor
inc
sub
mov
rcll
cmc
push
fwait
jne
arpl
stc
xchg
shl
out
andl
mov
popa
add
scas
cmp
sahf
addr16
test
mov
mov
pop
sub
sub
pop
adc
add
test
or
mov
pop
loope
xchg
mov
ret
mov
filds
fcomi
mov
mov
je
outsl
xchg
repnz
ds
out
and
mov
lahf
mov
popa
xchg
rclb
aas
pop
fisubs
icebp
fnstcw
pop
insl
mov
mov
je
adc
lds
sahf
test
mov
jne
paddd
mov
dec
mov
fistpll
popl
mov
cmc
dec
jnp
pop
mov
gs
cmp
rcrb
mov
lret
in
stos
inc
inc
das
push
scas
std
xchg
stc
aaa
cmp
xchg
je
cmp
test
xor
xchg
cmpsl
pop
inc
call
iret
hlt
lcall
and
mov
out
frstor
ds
and
test
insl
and
fisubl
push
mov
call
test
out
rorl
adc
cltd
out
sbb
out
fmulp
ficoms
mov
int3
sbb
mov
in
or
ljmp
lods
cmp
jno
mov
imul
lds
clc
bound
ficomps
lahf
aam
jb
sub
ljmp
dec
mov
jmp
arpl
cmp
daa
movsb
lea
mov
mov
and
cmp
fildll
push
cmp
cmp
push
mov
ds
xor
sub
mov
xlat
or
push
fcompl
push
lock
mov
jmp
xor
inc
dec
std
cmp
clc
mov
enter
lds
mov
stos
stc
cs
lcall
movsl
adc
inc
jecxz
sbb
popa
pop
lret
das
and
inc
mov
shlb
out
pop
bound
in
enter
push
lods
dec
push
and
imul
push
cltd
xchg
test
pushf
divb
idiv
mov
shlb
adcb
xor
pop
jecxz
aam
push
aad
scas
push
mov
mov
inc
pop
sub
add
imul
gs
or
mov
mov
xor
inc
jbe
mov
cs
cmp
andb
out
dec
or
xor
fstl
adc
push
jne
jns
or
mov
jns
lea
push
add
ds
sub
push
dec
adc
jge
test
mul
dec
leave
pop
sahf
repz
mov
call
push
shrl
cmp
test
pop
pop
xchg
inc
sbb
xchg
or
scas
hlt
mov
icebp
lret
rcrl
push
xchg
xor
dec
push
adc
ds
push
or
mov
int3
stos
xor
int
in
cli
les
mov
dec
repnz
icebp
jmp
imul
cmp
addr16
insl
dec
xchg
sbb
aaa
stos
imulb
adc
pop
jge
outsb
xlat
jge
cli
push
inc
dec
push
xchg
pop
dec
loop
mov
push
scas
or
push
xchg
mov
pusha
loop
dec
out
pushf
lret
out
loopne
add
scas
xor
test
jbe
test
rcr
jns
sbb
jo
xchg
popa
int3
add
andl
push
sub
jns
popf
stos
or
scas
cwtl
mov
gs
cmp
mov
dec
or
fsubrl
lcall
xchg
enter
cmpsb
jecxz
jl
das
in
pop
or
adc
or
lods
xchg
or
jge
ficomps
jge
hlt
scas
das
fdivl
lock
push
repz
out
or
repnz
das
data16
cmpl
popf
ds
divb
movsl
insb
push
pop
jmp
lret
sub
dec
fldenv
xorl
addl
push
mov
aam
punpcklwd
lods
stc
into
xchg
je
add
or
sahf
xor
mov
mov
mov
pop
cli
cmpsb
add
insl
or
test
jno
cs
jne
les
rorb
xchg
int
inc
cld
xchg
xor
sub
jo
xchg
xchg
int3
cmp
mov
dec
imul
das
pop
sub
or
push
int3
ss
or
push
cmpsb
sub
pop
inc
bound
inc
sbb
sbb
rclb
data16
mov
cmpsb
cmpsb
cs
loope
sbb
sub
movsl
mov
scas
mov
xlat
mov
testb
mov
cmp
adc
mov
fildll
stc
jmp
sub
loope
push
mov
jge
insl
sub
aaa
shrb
out
in
push
mov
out
mov
dec
pushf
jo
xchg
cmp
jb
adc
mov
loopne
or
adc
xor
js
cs
das
adc
sahf
push
addl
mov
add
dec
loop
jbe
aas
sub
xor
test
enter
add
xchg
scas
das
or
mov
mov
dec
aaa
into
adcb
mov
lock
mov
and
scas
sbb
push
xchg
inc
or
dec
adc
sbb
int3
sbb
jnp
adc
fnstenv
dec
mov
movsb
test
sbb
dec
mov
into
mov
lret
add
pop
in
and
movswl
add
jae
loop
jo
in
mov
mov
loope
icebp
mov
fs
insb
and
jg
lods
out
mov
ja
xor
xchg
or
les
adc
mov
pop
lret
je
sub
into
mov
mov
popa
mov
xor
xor
sbb
sub
cld
and
cmp
les
data16
mov
iret
std
loopne
test
out
les
push
popa
xor
mov
sbb
popf
cltd
or
fucomp
sbb
mov
call
cmp
int
mov
ja
push
sbb
jbe
lahf
aad
mov
stc
fldt
das
jecxz
jbe
xor
jge
faddl
inc
std
in
outsl
adc
mov
sbb
ds
xchg
push
sbb
test
in
idiv
scas
clc
mov
aas
adc
or
fists
out
rorl
int
ds
xchg
or
or
mov
mov
jo
add
push
fildl
popa
jge
cld
stc
pop
mov
out
and
dec
lret
and
mov
icebp
test
add
shrl
idivb
adc
sub
add
xorl
loopne
jg
dec
push
ja
out
andb
ljmp
mov
cwtl
stos
das
pop
mov
and
mov
aad
shll
cld
pop
xor
xchg
addr16
ja
inc
pop
loopne
sbb
cmp
lock
jecxz
lea
xchg
push
or
jecxz
xchg
xchg
mov
dec
add
jp
pop
jbe
and
push
xchg
push
mov
adc
movsl
fisubrs
pop
ret
sub
xchg
subl
mov
inc
in
push
lea
fcomps
andb
push
mov
loopne
popa
mov
dec
sub
push
ja
scas
xchg
mov
outsb
xchg
or
push
xchg
test
testb
out
ret
or
sbb
xorb
push
outsb
shlb
and
inc
call
mov
test
pop
jno
cmpxchg
gs
sub
xor
into
je
int3
test
lahf
repz
scas
mov
push
loope
test
fdivrl
je
gs
je
pop
xchg
aam
add
or
xchg
lahf
aam
pop
fwait
pop
enter
cmp
orl
inc
adc
cmc
add
dec
jmp
rcll
stos
popf
rcll
repnz
pop
or
je
fwait
ljmp
push
ds
movsb
pop
push
sbbl
sbb
sti
sub
pop
or
adcb
aaa
inc
add
and
push
mov
and
inc
imul
xchg
lcall
pop
negb
hlt
xor
mov
xchg
ljmp
lods
cmc
mov
add
mov
jl
sbb
and
imul
rol
or
clc
test
mov
aaa
gs
sbb
and
jp
mov
or
cltd
cmpsb
aaa
jno
aas
dec
jp
xorl
aam
aaa
es
lods
xchg
nop
or
aam
inc
andl
repz
ret
cmp
ja
pop
jl
jo
xchg
shll
lret
mov
mov
arpl
aaa
icebp
stos
out
jb
mov
popf
stc
lret
call
jbe
mov
call
sahf
int
ror
fdivrp
pop
pop
xchg
subl
lods
in
ret
cmp
iret
mov
dec
sbb
fiaddl
mov
push
fwait
icebp
ds
insb
fdivl
add
out
subl
ret
ds
les
iret
fcoms
add
in
jb
mov
stos
pop
push
aas
adc
jp
and
push
sar
sbb
mov
xor
xor
in
pusha
je
imul
loopne
mov
pushf
sub
pop
jmp
fstpt
mov
cmp
int3
jnp
imul
cld
dec
mov
pushf
sub
pop
jmp
fstpt
mov
cmp
int3
jnp
imul
cld
dec
lea
cwtl
sub
pop
jmp
fstpt
or
add
mov
jnp
imul
mov
mov
lods
sbb
dec
sti
mov
mov
shll
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
iret
or
sub
int
mov
cmpl
or
in
fistps
out
sub
mov
lahf
dec
lea
popa
lods
pop
mov
das
in
movb
out
divl
inc
xchg
push
cmpsl
gs
ja
jle
mov
enter
pushf
pusha
mov
mov
mov
cmpsb
int3
mov
xchg
jle
push
push
idivb
push
icebp
out
push
mov
inc
xor
push
shll
idivl
in
sbb
xchg
lods
dec
pop
pop
cwtl
aas
std
shlb
or
test
dec
xor
outsl
orl
add
sub
int
int
add
in
fimuls
or
pusha
jge
lea
scas
xchg
aam
dec
jb
pop
nop
push
loopne
rdmsr
mov
das
xchg
ret
pusha
jge
mov
sub
mov
out
cmovo
std
aas
adc
adc
in
mov
lea
cmpsl
loopne
pushf
ret
test
mov
aas
add
std
push
sbb
out
aaa
mov
dec
mov
test
movsb
jbe
pop
lds
fisubl
js
or
in
or
and
adc
cmc
or
or
pop
mov
sahf
dec
std
inc
xorb
lahf
sub
cs
jg
sbb
add
sub
jg
cs
pop
scas
mov
mov
pop
xchg
xor
insl
pop
popf
dec
lea
outsl
lods
pop
fisttpll
int
std
das
in
fistps
out
sub
mov
popf
dec
lea
outsl
lods
pop
fisttpll
int
std
das
in
fistps
pushf
ds
in
sub
or
out
aaa
jb
in
pop
in
rolb
rclb
loopne
inc
dec
xor
adc
out
xor
mov
addl
push
adc
or
sub
and
sbb
pop
xchg
dec
jp
cltd
iret
mov
pop
clc
mov
inc
out
addb
int3
push
and
fldl
and
repz
push
incb
mov
out
lret
loop
cmp
pop
mov
lea
loopne
mov
mov
mov
insl
pop
jmp
mov
jne
pop
imull
sbb
dec
sbb
cwtl
jecxz
inc
cs
jmp
sub
inc
lea
sbb
stos
adc
shlb
icebp
xchg
mov
or
out
cmc
or
fisttpl
insl
cmp
aas
test
jne
pop
mov
adc
fcomps
jb
dec
inc
jp
rolb
imul
xor
inc
jle
les
cmp
mov
cmp
xor
decb
dec
data16
push
nop
pop
xlat
subb
adc
dec
sar
into
pop
pusha
pop
mov
lock
add
orl
rcrb
dec
jo
ss
hlt
mov
pop
add
mov
insl
cld
rcrl
inc
xchg
out
vmovddup
shr
mov
xor
adc
sbb
outsb
out
adc
cmpl
in
loopne
pop
sub
jae
imul
int
jne
addr16
cld
mov
mov
and
sbb
lret
cmp
push
and
gs
sub
sub
mov
cmp
inc
ljmp
dec
jle
mov
mov
mov
pop
sub
mov
xor
jl
xor
cs
adc
je
push
adc
mov
adc
pop
out
mov
mov
roll
jge
movl
imul
push
jg
repnz
dec
mov
mov
mov
in
dec
xchg
popf
dec
pop
or
pusha
pusha
jae
and
packuswb
test
fadds
fimuls
adc
or
xor
lret
push
lods
and
aas
cmp
je
ds
repz
shlb
push
push
mov
ss
mov
xchg
adc
and
inc
orb
xchg
pop
test
inc
cmp
loope
outsl
repz
and
in
out
xchg
mov
sbb
divl
jg
jle
lods
movsb
mov
lea
jne
out
fmull
xchg
push
add
in
iret
pop
inc
or
mov
rcr
mov
cmp
jle
push
andl
insl
inc
jmp
fcmovbe
sahf
fcompl
out
js
pop
jbe
jno
enter
aam
in
mov
and
or
sub
or
or
or
push
jecxz
xor
inc
jbe
stc
loop
push
add
sti
rcl
inc
xor
data16
inc
dec
aad
sub
ret
repz
cmp
push
jge
lods
mov
stos
xor
mov
jmp
sbb
push
insl
adc
xor
xchg
je
rolb
dec
mov
push
popa
stos
xchg
dec
sti
rclb
xchg
in
insb
in
das
cmovg
mov
scas
adc
in
ss
fnstcw
jae
mov
ljmp
inc
aas
ret
lea
pusha
outsl
pop
mov
int3
insl
roll
in
ret
inc
lock
xor
sbb
iret
mov
xchg
faddl
xchg
sub
push
and
inc
mov
adc
nop
inc
notl
cmp
ficompl
push
cmp
jmp
mov
fisubs
and
outsw
fwait
clc
pop
xor
popa
cmp
subb
icebp
arpl
call
shrb
lds
cmp
push
gs
stc
insl
cmpsb
lcall
mulb
or
je
aad
dec
imul
xor
mov
loop
xchg
mov
fwait
jo
into
daa
mov
mov
iret
add
jbe
add
xor
clc
movsb
imul
xor
notl
out
out
or
lret
stos
cmp
lods
pop
aam
sub
es
inc
dec
fwait
enter
aas
andb
add
push
sbb
int
shlb
mov
out
lret
push
adc
xor
dec
insl
testb
enter
jg
inc
loope
adc
xlat
jne
ljmp
pop
xchg
mov
roll
mov
mov
mov
bound
mov
enter
fs
shlb
cmp
pop
cltd
mov
pop
adc
cmpb
hlt
inc
into
push
push
mov
pop
shrl
in
or
pop
mov
lds
test
aad
xor
scas
add
dec
jge
inc
mov
xchg
test
jp
shll
inc
jae
push
mov
cmp
dec
in
fistpl
ss
xor
scas
jae
adc
pop
cld
ds
pop
orb
push
lret
cmp
rclb
sbbb
jmp
cltd
hlt
pop
out
mov
shr
xchg
mov
sbb
ret
loop
out
lock
mov
push
mov
pusha
mov
mov
fsubs
test
fwait
or
dec
cmp
jle
int3
xchg
jl
jge
out
mov
jmp
into
mov
jp
mov
es
test
inc
xor
add
data16
jno
jecxz
call
in
shrl
out
mov
mov
xor
lret
jae
dec
push
pop
lret
cmp
dec
jno
adc
mov
std
outsl
in
mov
cmovs
adc
xchg
gs
in
sub
in
ret
fistpl
sbb
outsb
xchg
dec
adc
out
cli
xchg
test
adc
outsl
sbb
jae
xchg
cmpsb
bound
aam
fcmovb
test
lods
pop
jne
pop
fidivs
xor
or
scas
sbb
and
sbbl
and
sub
push
dec
mov
aas
pusha
negb
in
and
shll
dec
or
arpl
mov
xlat
xchg
test
movb
push
hlt
in
mov
inc
and
mov
sbb
jno
and
fstpt
xchg
enter
in
subl
std
je
addr16
loop
adc
jl
lret
xor
sarb
mov
push
push
push
icebp
xor
repz
adc
pop
add
and
jle
popf
lret
repz
jb
es
pop
or
xchg
push
stos
pop
cmp
popa
sqrtps
push
mov
jae
scas
inc
fcmovu
ret
pop
and
sbb
dec
call
popa
lret
repnz
mov
dec
scas
jecxz
imul
push
mov
or
pop
lea
loope
ljmp
xchg
insb
push
push
xor
stos
shlb
rorl
inc
push
aam
orb
fistps
movl
push
sub
fildl
test
cmpsb
mov
repz
or
ret
rcrb
mov
jne
and
pop
or
pop
mov
jl
repz
movsl
insl
push
aaa
movsl
sub
adc
mov
cmovbe
xor
or
push
pop
pop
mov
cmp
jge
ss
jge
adc
ret
add
jns
repz
mov
fdivrs
inc
lea
xor
clc
ds
inc
test
fcmovne
negb
push
lcall
and
dec
mov
nop
dec
lret
out
cmpsl
cltd
int
lret
mov
loopne
xor
xchg
sub
push
cltd
fcompl
insb
sbb
jecxz
push
jno
adc
or
sahf
sub
sub
push
and
outsb
dec
call
lahf
inc
jle
scas
push
scas
lret
adc
sbb
nop
xor
js
inc
and
jo
cli
adc
cmp
inc
xchg
stos
into
pop
pop
lods
xor
insl
sahf
sub
test
stos
push
sahf
sub
mov
jae
adc
in
leave
adc
sti
sbb
shlb
pop
mov
xchg
out
pop
sti
xor
fsubs
rorl
ljmp
lds
call
jp
fwait
out
adc
pop
mov
pushf
xchg
mov
shll
push
aas
xchg
ret
daa
jmp
ds
jl
dec
ja
rolb
lahf
in
jo
pop
pop
fimuls
xchg
fsubrs
dec
popf
xor
add
jb
test
pop
or
fstpt
or
or
adc
in
das
insb
movsb
pop
int3
iret
or
mov
icebp
mov
xchg
mov
ret
mov
shll
pop
cmp
or
test
jle
sub
or
pop
fs
repnz
mov
aaa
xor
mov
in
pop
xchg
pop
mov
test
in
idivl
aas
jb
and
lock
pusha
movsl
cmp
les
scas
stc
and
jo
into
mov
in
subps
or
and
pop
or
test
daa
lock
outsl
out
ret
test
iret
les
pop
add
push
lods
sub
cli
xchg
inc
popf
dec
lock
mov
pop
xor
dec
sub
jne
xor
sbb
mov
mov
repnz
cli
jmp
bound
mov
jns
push
dec
vsubsd
jb
add
pop
hlt
xlat
ds
xor
mov
fxch
bound
aad
mov
out
stos
push
mov
xchg
add
sub
or
das
lcall
pusha
pop
fiadds
mov
push
in
jae
movsl
inc
mov
xchg
stos
jnp
in
sbb
mov
or
add
mov
or
js
test
out
adc
mov
jl
hlt
and
icebp
test
mov
lea
sbb
mov
test
xchg
lret
hlt
xchg
xchg
or
inc
stos
sub
sbb
lock
aaa
add
sti
aam
fisubl
push
sbb
add
jg
sub
addr16
push
popf
xor
popa
mov
cmp
cmp
pushl
push
xchg
jb
cmpb
lret
lret
rclb
ret
or
les
fisubrl
lock
mov
je
add
fsubs
test
xor
xlat
add
fisttpl
daa
jecxz
sti
out
inc
pop
jge
dec
mov
dec
into
push
in
push
lret
xor
lods
mov
cwtl
pushf
cmpsl
adc
fdivl
lret
or
add
ret
bound
cwtl
pop
and
imul
xchg
mov
int
in
dec
add
xor
loope
mov
inc
neg
and
gs
stc
out
sbbl
outsl
adc
fsubl
cmp
mov
xor
push
cmp
fdiv
xchg
rcrl
cld
pop
daa
loopne
jmp
imul
cli
fnstenv
lock
and
sbb
cmp
dec
or
jnp
xor
fdivrs
lret
ss
sbb
mov
out
notb
pop
cmp
mov
rol
ja
roll
aad
xlat
push
fwait
sub
imul
mov
mov
jecxz
fcmovbe
mov
aad
lret
pop
sub
mov
in
cld
mov
cmp
je
mov
sub
cmp
dec
lock
sub
aas
sti
test
cli
dec
or
rcl
adc
int
mov
ret
push
add
jns
sbb
dec
out
das
jl
ret
out
mov
push
fs
xchg
add
fcmovnb
pop
push
push
xchg
mov
mov
or
add
push
pop
push
in
cmc
fisubl
imul
mov
mov
out
push
pop
lea
or
sbb
dec
in
mov
stos
xchg
popf
or
loopne
nop
cwtl
aad
add
inc
jl
lret
scas
mov
mov
aam
mov
add
bnd
dec
add
mov
arpl
enter
dec
jnp
sbb
jp
into
out
and
fiaddl
ret
xchg
mov
jmp
sbb
push
pop
cmpsl
hlt
mov
loop
das
and
push
cmp
cmp
lds
stos
add
mov
popa
xor
cli
mov
out
mov
sbb
mov
test
and
mov
nop
or
xchg
cwtl
sbb
movsb
pop
cmp
into
es
dec
sub
xlat
pop
fisubl
pop
orb
je
repz
test
xchg
ljmp
scas
mov
shl
rcrl
adc
pusha
lret
lahf
stos
in
mov
pop
adc
sbb
adc
pop
mov
iret
jle
xchg
mov
mov
cwtl
data16
std
inc
cmp
push
cmp
test
daa
jg
fistl
stos
inc
or
and
xchg
pop
jns
lcall
sub
jnp,pt
pop
and
das
nop
lods
push
sub
mov
fs
dec
sbb
lret
cli
mov
pop
addr16
cmp
xor
sahf
es
jnp
push
pop
pop
enter
jl
scas
push
mov
cmp
add
mov
mov
pop
and
test
adc
loop
xchg
cmp
pop
mov
bswap
loop
add
cltd
cmc
add
fsubs
int
sbb
out
in
loopne
sbb
jns
fst
hlt
stos
incl
imul
lea
push
into
xlat
mov
mov
mov
dec
cmp
int
mov
cmp
xchg
stc
sahf
es
jb
push
jp
insb
cmp
inc
adc
inc
in
call
pop
loope
or
xchg
ljmp
and
xchg
xlat
mov
lahf
pop
test
xchg
lea
sub
idiv
pop
lahf
cmpsl
adc
std
outsl
jmp
pop
jle
sub
and
dec
or
sbb
iret
rorl
pop
dec
insl
call
aam
sbb
and
rcr
pusha
cmc
pop
test
gs
or
xchg
sbbl
sub
sub
sbb
shll
insb
mov
ret
stc
mov
dec
shlb
adc
pop
test
sbb
push
sbb
or
fwait
mov
in
imul
clc
pop
jle
inc
lods
pop
cli
insb
xor
mov
ja
jns
fs
mov
stos
icebp
popf
les
sub
inc
fistps
mov
sbb
pop
lea
int3
jecxz
xor
mov
addr16
dec
outsl
std
cld
or
lock
cmp
inc
inc
outsb
data16
mov
loopne
mov
pop
adc
je
xor
psubsw
push
in
fwait
sbb
cmp
rol
into
popf
sub
sbb
fnstsw
jno
cld
ss
mov
mov
add
shrl
aaa
push
and
push
pop
mov
sub
cmpb
or
push
sbb
fistps
xchg
sub
cmp
or
mov
in
es
and
adc
in
mov
stc
mov
sbb
xor
inc
mov
jns
push
loopne
push
int
movsl
sarb
iret
xchg
and
mov
int3
xor
mov
xor
or
icebp
outsb
sahf
mov
xchg
vcvtps2pd
jbe
movsb
jno
cmc
and
popf
add
jl
rolb
add
rolb
jns
adc
std
xlat
xor
jmp
cmp
std
and
xor
gs
rcrl
push
lock
push
push
xor
cmp
xchg
push
dec
pop
pop
adc
push
pop
xchg
xchg
repnz
mov
scas
jne
in
mov
cmc
mov
pop
lcall
in
lods
xchg
sub
pop
lock
push
xchg
fdivr
xor
xor
dec
ffreep
aad
mov
pop
inc
pop
xor
adc
test
adc
cmp
adc
and
je
sub
gs
je
int3
dec
aam
lea
leave
sub
add
scas
cmc
rorb
jecxz
mov
sub
cwtl
inc
ljmp
and
imul
rcrl
and
push
inc
and
or
int3
add
inc
aaa
push
jae
mov
negl
je
mov
mov
jmp
xchg
out
dec
push
inc
jp,pn
ja
insl
xchg
sub
std
test
outsl
addr16
jae
add
xchg
test
xchg
mov
popf
dec
cmpsb
push
cltd
jp
imul
pop
rol
stos
jo
xor
les
outsl
call
sub
into
popa
push
xchg
cmpsb
xor
push
aad
xchg
dec
bound
xor
cmpb
pop
fsub
rcll
jbe
push
jmp
push
xchg
pop
bound
lcall
fisubrs
shl
data16
cmpsb
mov
ucomiss
pusha
mov
out
cmp
fisubrs
xchg
xchg
adc
push
pop
adc
mov
lahf
mov
test
xlat
incb
movsl
dec
sub
mov
ss
mov
dec
repz
sbb
lods
mov
mov
fsubrl
shlb
in
jbe
cmc
cmp
into
push
jmp
push
loope
mov
cli
pop
lret
pop
pop
xchg
loop
int3
btsl
dec
cmp
dec
popf
lret
scas
insl
cmp
add
shll
xchg
sarl
mov
inc
jecxz
xchg
mov
xchg
xor
sbb
pop
std
int
test
decb
inc
test
fimuls
bound
dec
push
lret
mov
fs
and
loop
pop
jo
movsl
loope
sub
adc
es
fsubs
xchg
jns
fprem
daa
mov
add
ret
mov
decl
nop
dec
imul
pop
push
push
cs
push
nop
mov
movd
fidivrs
inc
or
addr16
xchg
cmp
cmpsb
sbb
or
jae
dec
mov
fwait
loop
mov
jecxz
mov
or
pop
and
sbb
adc
inc
repz
sub
sub
shl
jmp
inc
mov
adc
push
ds
xor
cmc
xchg
test
and
cmc
mov
jno
cld
pop
or
test
jno
cmp
aas
add
mov
xor
rolb
push
je
lcall
jnp
dec
sahf
jg
aaa
mov
sbb
sub
sub
imul
add
call
sub
int
or
push
mov
das
dec
mov
stos
cmpl
gs
sbb
enter
ret
int3
mov
push
push
adc
push
or
lret
lret
mov
lock
adc
push
mov
pop
mov
push
mov
sbb
dec
cmpsl
insl
js
std
xchg
cmovb
xchg
sub
pop
cli
and
mov
fninit
cwtl
aas
nop
lods
in
inc
push
sahf
cmp
jmp
sbb
lret
icebp
aas
flds
mov
xorl
insl
dec
mov
xor
mov
mov
rorl
inc
push
and
jecxz
into
cld
in
push
pop
fimuls
in
popf
jecxz
jno
push
aam
pop
shrb
daa
dec
iret
fimull
sti
adc
mov
inc
pop
nop
shr
xchg
push
dec
stc
push
jecxz
xor
gs
mov
xchg
xor
pusha
sub
or
push
mov
out
adc
pushf
lret
out
addr16
outsb
sbb
xchg
inc
hlt
loop
xchg
xor
push
pop
sub
lods
mov
mov
jmp
ja
xlat
sub
xchg
insl
scas
jp
pop
xchg
sbb
sub
xchg
icebp
mov
xor
out
ss
lret
push
aaa
xchg
stos
iret
out
nop
push
mov
dec
loopne
out
pop
cmp
mov
jae
mov
and
clc
xor
xchg
xlat
mov
in
pop
and
cmp
fadd
inc
adc
repnz
jle
loope
test
mov
fidivl
push
xchg
mov
sbb
out
adc
lock
inc
jp
or
pop
loop
rcrb
or
je
push
daa
sub
in
in
stc
push
ss
pop
dec
inc
push
cld
sti
cltd
test
mov
sahf
push
xchg
inc
push
push
mov
lods
jo
dec
das
sbb
js
sbb
out
movsl
cmp
mov
pop
xor
test
mov
mov
pushf
mov
adc
xchg
push
add
add
fdivl
into
inc
mov
cmpl
into
rcll
dec
repnz
dec
mov
sub
or
or
iret
hlt
mov
fwait
insl
jno
lods
xor
notb
out
mov
sbb
jg
and
imul
mov
push
xor
fbstp
jmp
push
js
mov
push
adc
sub
and
in
hlt
flds
data16
jbe
pop
dec
dec
sub
push
inc
jb
sub
push
cmpsb
into
sbb
and
fimuls
lahf
xor
sub
loopne
pop
sub
and
cmp
push
xor
xor
das
or
lahf
pop
dec
mov
popf
dec
lea
outsl
lods
pop
fisttpll
int
std
das
in
fistps
out
sub
mov
popf
dec
lea
outsl
lods
pop
fisttpll
int
std
das
in
fistps
out
sub
mov
popf
dec
lea
outsl
lods
pop
fisttpll
int
cld
sub
or
popf
pop
dec
aas
jge
insl
mov
mov
xchg
rolb
adc
mov
mov
add
sahf
repnz
cmp
cmp
insb
sbb
sti
mov
mov
mov
in
lcall
or
pop
pop
sub
pop
dec
dec
sub
or
lods
rcr
mov
in
xchg
sbb
or
pop
and
aas
je
pop
pop
imul
fwait
lock
in
push
js
fs
mov
jge
push
ret
fsubs
leave
sti
add
shr
ret
pop
jbe
cltd
je
test
xchg
or
jne
jmp
repz
xorb
inc
xorb
sbb
pop
imul
mov
sahf
mov
pop
movsl
mov
and
cwtl
fdivrl
in
push
or
lret
movsb
mov
in
sbb
jae
out
and
mov
cld
xchg
in
jecxz
xchg
insb
mov
and
stc
dec
xchg
mov
lahf
and
inc
cmp
add
add
sub
jecxz
fiaddl
dec
movsb
mov
lret
jge
insl
or
mov
mov
in
xchg
sbb
or
cmp
sub
pop
and
add
sti
enter
loop
lahf
mov
mov
je
mov
sub
sub
je
addr16
xchg
iret
or
in
mov
out
xchg
mov
inc
ds
dec
pop
dec
aas
sub
jae
ljmp
mov
fwait
in
mov
or
cmp
sub
pop
cmp
sbb
sti
mov
mov
mov
in
mov
or
cmp
sub
pop
cmp
sbb
sti
mov
xor
scas
xor
xor
or
push
xchg
mov
lret
bound
outsl
out
dec
push
sub
mov
sub
xchg
or
mov
in
rclb
push
xor
cld
push
xchg
sbb
lcall
mov
mov
cmc
test
mov
fnstenv
repnz
sub
lahf
cwtl
movsb
div
ja
cwtl
jle
mov
push
xchg
shrb
or
out
dec
mov
inc
fsubrs
pop
data16
jae
push
aaa
mov
outsl
push
xor
cmpsl
insl
cld
xor
jne
loop
movsb
sub
fldl
dec
cmp
out
or
es
lea
cmp
dec
ret
hlt
and
cmpsb
fdivrs
lea
xchg
jo
and
cmp
pop
imul
push
add
jb
mov
pop
mov
dec
js
icebp
mov
sbb
or
push
or
rclb
push
xorl
sti
cwtl
dec
aam
jmp
inc
fmulp
mov
jno
cmc
sbb
and
jns
lret
lock
jb
enter
mov
enter
lds
xor
not
popf
inc
in
andb
pop
loop
hlt
int
dec
add
mov
sbb
sub
xchg
adc
inc
pop
push
mov
or
sbb
fiadds
movsb
xor
lret
das
lods
mov
lods
fisubs
pop
sub
out
sahf
add
or
iret
cs
pop
lret
inc
xor
mov
xchg
or
cld
cmc
inc
pop
jecxz
adc
in
cltd
int3
dec
mov
push
popf
leave
sub
insl
sub
ret
pop
or
enter
inc
cld
shll
xlat
lods
jnp
xchg
sbb
hlt
test
or
or
inc
into
jge
mov
jae
cwtl
sti
xor
repz
les
or
arpl
neg
dec
or
cmp
fdivrs
pop
and
inc
fcompl
out
sub
sub
and
sbb
mov
js
mov
and
andb
nop
push
movsl
xor
jbe
popa
shr
and
cmp
pop
js
arpl
sub
nop
jmp
arpl
insl
popf
jle
cli
push
lods
or
xor
mov
fsubrl
in
stos
push
ds
loopne
out
das
je
mov
into
jmp
mov
bound
push
ss
mov
addr16
and
sub
jae
pop
adc
scas
nop
push
lret
sub
icebp
cli
int
ds
enter
cmp
fistl
ret
mov
sub
das
mov
das
push
dec
cld
cmp
in
out
mov
fwait
and
pop
fldt
jge
xor
outsl
inc
jb
or
lcall
test
dec
add
jo
sahf
mov
push
cmp
addr16
jns
out
mov
mov
into
cwtl
dec
cmc
jg
mov
push
cwtl
cmp
xchg
cltd
dec
mov
add
xchg
push
dec
data16
cld
add
add
ss
rcr
repz
lea
dec
push
and
xchg
sbb
push
cld
pop
pop
fildl
mov
mov
mov
mov
lock
out
jne
jae
push
jecxz
mov
push
gs
dec
fwait
push
imul
inc
mov
push
lods
xchg
dec
adc
insb
cmp
and
js
inc
mov
xor
fidivrl
xchg
lcall
cmp
into
inc
mov
imul
and
jb
mov
dec
and
sbb
jle
jo
jmp
add
lods
popa
cld
imul
jno
or
add
adc
sub
inc
stos
fimuls
add
into
popa
sub
imul
int3
push
mov
or
jmp
push
add
inc
jo
inc
push
insl
scas
sbb
cld
cmp
mov
push
fs
lret
popa
mov
mov
sbb
insl
popf
enter
add
cld
sbb
lds
insb
mov
ret
push
in
movsb
mov
dec
je
adc
js
inc
adc
pop
ljmp
stc
loope
sbb
lret
pop
dec
enter
add
nop
in
cmp
test
xor
push
jg
jecxz
mov
mov
js
in
adc
inc
in
fwait
pop
inc
xor
mov
push
lret
cwtl
cmp
sarb
jne
mov
fcompl
mov
lret
mov
ss
sbb
inc
inc
sarb
and
ja
sbb
push
sbb
xchg
xlat
adc
xor
loopne
lods
mov
loope
jecxz
cmp
or
mov
fwait
fstpt
cmp
lcall
pop
dec
xchg
aad
adc
xchg
add
sub
jge
loopne
or
pop
push
lock
jp
push
enter
je
je
xchg
xlat
or
inc
out
mov
sbb
adc
js
xor
inc
insb
rclb
pushf
divb
mov
cmp
shrl
adc
loopne
dec
loop
aaa
xor
lea
out
in
bound
jb
int3
outsl
mov
cmc
icebp
mov
arpl
dec
mov
adc
leave
cs
lahf
sbb
ffree
dec
push
adc
nop
neg
or
adc
push
fldl
hlt
jl
nop
adc
pop
cs
add
lret
loop
push
loope
or
push
jae
daa
les
push
mov
mov
xchg
inc
add
xchg
mov
sbb
add
and
dec
shll
sbb
sahf
sbb
xor
test
test
rorl
repnz
jo
adc
push
bound
dec
je
ret
jle
mov
push
cli
js
mov
lock
sbb
cld
lods
pop
ja
sarl
into
mull
lcall
mov
movsb
sub
push
pcmpgtd
sub
push
lods
cmp
xorl
lret
dec
in
cld
sbb
ja
andb
hlt
popf
fnstsw
add
orb
in
insl
dec
inc
xorb
js
ret
or
out
sbbb
mov
and
aam
insb
int3
xor
das
xor
mov
pop
lret
je
adc
or
xor
stos
stc
rcrl
mov
pop
xchg
cli
xchg
sti
xchg
aaa
ret
clc
xchg
mov
xchg
jp
fldcw
adc
fsub
inc
xchg
ljmp
pop
cmp
sbb
aaa
rol
seto
lret
pop
aam
pop
mov
mov
mov
in
rorb
pop
mov
mov
jnp
sub
xchg
std
cmp
adc
jle
mov
pop
ret
dec
mov
sbb
cmp
xchg
dec
jl
dec
dec
mov
dec
mov
shl
jbe
mov
aad
and
adc
xchg
aaa
test
cmp
or
push
push
in
and
adc
mov
xchg
cmp
fimuls
push
rorb
hlt
jb
cmp
not
ficompl
jns
scas
leave
cs
push
xchg
aad
scas
cld
into
jns
test
push
lods
test
mov
push
pop
sbb
sub
call
fisttpll
fimuls
mov
xor
inc
aam
inc
add
cli
cmp
arpl
subl
sahf
in
mov
dec
sub
in
loope
dec
enter
fs
push
mov
add
sub
punpckhwd
loop
push
cmp
es
xchg
mov
cmpsl
insl
xchg
mov
in
out
mov
pushf
mov
push
push
inc
jns
sub
out
or
or
inc
inc
or
loop
jmp
fidivs
push
jecxz
out
into
sbb
cmp
jnp
rorb
ja
push
js
aaa
ss
test
inc
int
adc
jbe
jmp
add
xor
std
sbb
into
cwtl
adc
pusha
jmp
test
adc
jb
inc
or
cmp
mov
xchg
icebp
call
popa
add
lcall
test
sub
ds
sar
and
push
push
add
or
mov
mov
hlt
les
ror
sti
data16
fwait
push
pop
xchg
sub
cmp
rorb
int3
push
mov
push
cmp
pop
loop,pt
mov
xlat
mov
sbb
cli
xchg
xor
adc
in
push
adc
test
jmp
iret
arpl
leave
lods
clc
cmpsb
xor
mov
shll
cmp
and
and
es
sub
cmp
cltd
scas
andl
inc
cmp
cwtl
scas
lcall
cs
das
xor
jecxz
sub
or
xchg
movsb
adc
mov
lcall
loope
out
cmpsl
push
sbb
dec
ret
clc
insb
jge
dec
push
pop
push
loop
cmp
lret
mov
fs
mov
inc
sub
test
js
or
and
lahf
jge
jge
jbe
int
testb
push
xor
add
cltd
cmpsb
fdivrp
shrl
imul
push
movsl
mov
adcb
fisubrs
xchg
fistl
cltd
icebp
stc
add
or
xorb
dec
lock
pop
or
pop
pushf
cmp
les
lds
xor
sub
dec
inc
or
imul
pusha
outsl
popf
adc
mov
out
add
aam
lock
inc
subb
loope
mov
in
mov
add
push
xorb
test
outsl
sub
std
inc
out
dec
je
and
lds
cmc
or
mov
fdivr
call
adc
popa
cltd
cld
mov
dec
fists
inc
jl
xor
mov
lods
push
loop
bound
rcrb
or
mov
xor
jp
insb
aas
aam
dec
mov
pop
shll
mov
jb
sub
cltd
pop
int
lods
mov
jns
sub
jno
setnp
dec
or
jle
into
adc
data16
add
sbb
inc
out
jnp
mov
imul
and
imul
lret
stc
rcl
pop
fisttps
out
cmp
inc
stc
fsubp
dec
ret
sarb
sub
inc
mov
pusha
js
xchg
jae
mov
call
rol
sbb
pop
lcall
shlb
pop
dec
sub
repnz
mov
int3
jmp
mov
push
dec
sub
fisttpl
xchg
adc
mov
sahf
xlat
sub
fwait
int
int
add
rorb
jecxz
pop
lret
and
stc
jmp
das
cmp
dec
mov
inc
push
pop
lods
dec
xchg
xchg
jge
jae
ret
mov
fstpt
cwtl
mov
xor
lods
xchg
dec
mov
shl
cmpsb
loopne
mov
hlt
dec
dec
cmovp
push
ja
sbb
sub
loope
mov
lret
jbe
je
xor
std
and
cmp
pop
dec
sub
aaa
lret
out
mov
lock
leave
jbe
mov
loopne
gs
ljmp
adc
pop
add
push
and
sub
push
sbb
push
jnp
sbb
or
insb
js
xor
mov
les
fisubs
sub
test
sbb
cwtl
les
mov
and
lods
dec
mov
movsb
dec
leave
sub
shrb
in
fiadds
fwait
xor
mov
xchg
push
cmp
decb
stc
sbb
aaa
adc
xchg
add
imul
inc
dec
xorb
push
and
leave
or
add
test
sub
or
mov
aaa
fs
cmc
mov
cmpb
std
xchg
daa
fstps
xor
out
xchg
xor
or
nop
mov
xchg
sti
mov
push
gs
loop
clc
xor
and
sub
sar
int3
fldl
loopne
inc
pop
pop
xchg
in
addr16
mov
mov
xor
loopne
sti
fmulp
pushf
add
jp
mov
movsl
adc
xlat
rcpps
fdivrs
xor
push
inc
and
sub
adc
aaa
jbe
cs
leave
cs
dec
adc
insb
cmp
pop
or
frstor
cmp
fstpl
xchg
lret
pop
insl
xor
mov
mov
cli
cmc
pop
push
cs
inc
std
cmc
add
daa
insl
rolb
mov
rorb
push
cmc
lds
aaa
orb
jecxz
das
mov
xchg
fldt
sub
adc
cwtl
mov
adc
sbb
addr16
cmp
pusha
pop
push
popf
daa
xchg
mov
cwtl
push
push
cmpsb
sahf
ljmp
rorb
mov
in
sti
jnp
test
xorb
outsl
inc
repnz
pop
and
lret
xchg
jp
dec
loope
add
cmp
adc
or
into
iret
faddl
sbb
mov
push
jl
nop
and
inc
jmp
icebp
in
cmp
movsl
pop
dec
addr16
bound
xchg
cmp
xchg
rcll
pushl
mov
shrl
movsl
jno
shl
xor
rorb
shlb
ja
cs
mov
adc
imul
push
sbb
sub
lods
icebp
shrl
or
add
mov
xor
xlat
xor
xor
adc
sbb
imul
cmc
push
roll
mov
stos
aas
xor
sbb
insb
aas
or
or
add
stos
mov
xor
hlt
cmp
sbb
outsb
je
inc
sti
push
mov
fmuls
cmpsl
sar
xchg
dec
and
mov
stos
mov
mov
xchg
sbb
das
push
fists
in
mov
out
test
xchg
enter
dec
xlat
jmp
out
jo
fstps
ja
and
pop
cmp
ss
cmpsb
inc
lcall
xor
cmc
pusha
cmpl
dec
psadbw
add
ret
pop
aaa
xchg
out
xor
sub
adc
ret
push
sub
mov
add
sahf
jecxz
int
cli
pop
cmp
and
xchg
imull
out
cwtl
aam
roll
inc
dec
loopne
cwtl
push
mov
shrl
inc
sahf
test
mov
outsl
into
sbb
enter
out
inc
xchg
std
jecxz
push
mov
sub
mov
mov
or
cmp
loop
out
mov
inc
and
inc
push
fxch
lret
out
and
das
mov
stos
enter
mov
and
sbb
fcomps
xor
cli
sub
rclb
cmp
pop
lds
mov
pop
pop
sti
iret
dec
mov
sbb
mov
int3
test
daa
sbb
cli
cmpsb
decb
sbb
mov
xchg
lods
or
push
fdivl
mov
jmp
jns
fsts
xchg
and
inc
imul
jnp
xor
pop
aam
cli
mov
mov
mov
ficomps
pop
cs
dec
push
aam
pop
push
mov
mov
pop
test
inc
push
out
shr
mov
mov
aaa
add
adc
lods
loopne
push
rcr
add
test
push
jl
fwait
stc
xchg
jae
int
cli
rorl
inc
icebp
mov
test
push
sub
cmp
lock
imul
ret
and
push
xchg
xchg
sbb
scas
orb
xchg
out
xor
mov
ljmp
xchg
mov
or
rdpmc
add
lds
mov
dec
xchg
das
das
jle
sbb
push
das
aad
ljmp
jne
ficoms
into
or
or
movsb
push
mov
add
pusha
dec
arpl
ret
xchg
push
sub
std
push
push
int3
mov
xor
adc
mov
add
push
rcr
adc
mov
mov
out
xchg
cs
out
mov
fsubr
hlt
xchg
icebp
outsl
stc
adc
rcrl
or
sbb
add
mov
das
mov
push
sbbl
and
adc
mov
dec
jp
scas
pop
sub
inc
mov
mov
testb
lret
popf
and
je
push
xchg
aad
scas
sub
mov
inc
add
push
std
cmp
lea
xchg
es
or
pushf
cwtl
adc
mov
xchg
loop
sbb
push
pop
fucomip
js
jo
adc
push
dec
push
add
xchg
push
push
add
fldl
std
aam
movsl
out
cmc
jg
pop
or
push
hlt
lcall
lret
cld
pop
add
subb
hlt
pusha
icebp
cmc
mov
or
pushl
or
pop
jae
add
mov
push
inc
subb
stos
pop
dec
jmp
les
mov
arpl
fsubl
cmp
test
push
push
sbbl
sub
adc
and
or
mov
les
xor
and
pop
js
add
push
pop
adc
and
sahf
dec
inc
shrl
fadds
stc
sbb
fwait
push
jmp
fdivs
add
repnz
arpl
data16
xor
xchg
jnp
mov
dec
fcmove
cld
in
aad
roll
dec
push
cmpsb
inc
jae
mov
sub
adc
mov
test
sub
push
aaa
push
push
mov
es
push
pop
xchg
mov
scas
inc
inc
fstpl
repnz
inc
and
add
mov
sub
test
out
icebp
xor
clc
ret
inc
jbe
push
jae
pushf
adc
push
inc
fstpt
dec
mov
sub
pop
mov
pop
bound
add
loope
aaa
jns
scas
lcall
or
std
cmp
add
add
mov
lods
sbb
jno
dec
jl
add
xor
push
mov
dec
mov
nop
js
adc
aaa
mov
mov
xor
into
or
call
lods
daa
insb
xchg
mov
movsl
pop
push
sub
add
out
fimuls
push
and
dec
rcl
cmp
out
clc
push
pop
mov
jb
stos
ror
cmc
pop
pop
movsl
adc
lret
out
fcoml
pop
daa
xor
sub
leave
ret
or
fisubl
outsb
test
addr16
sti
adc
dec
add
rcrl
ret
outsl
jo
adc
add
movsb
xchg
enter
or
ja
mov
mov
popf
cmpsb
adc
aam
in
sub
int3
pop
push
enter
shr
das
inc
imul
cmp
enter
push
dec
sub
jg
lods
push
fisubs
add
sahf
bound
pop
imul
fnstenv
andb
xor
shlb
inc
mov
repnz
daa
fildl
into
pop
add
pop
sbb
bound
xor
fs
xchg
push
shll
rcrl
jo
mov
nop
dec
insb
aas
jmp
mov
pop
nop
push
push
aas
mov
loope
sub
pop
movsl
mov
inc
hlt
loopne
or
or
lcall
xchg
pop
adc
adc
xchg
mov
mov
xchg
pop
cmp
bound
test
inc
xchg
mov
enter
mov
scas
push
scas
push
idivb
out
icebp
mov
repnz
pop
das
fisttpl
lds
sub
adc
xchg
lods
mov
mov
cmp
daa
nop
out
and
ficoms
out
stos
mov
nop
cmc
mov
push
inc
mov
ret
outsw
pusha
call
jb
pop
dec
push
jbe
jnp
inc
data16
jp
mov
add
pop
sti
sbb
sbb
test
cmp
mov
jp
xor
out
xor
pop
jg
jnp
and
dec
mov
jae
jo
fimuls
inc
inc
mov
xchg
pop
sbb
data16
dec
mov
leave
fcoml
xchg
mov
lds
mov
pop
test
sbb
adc
adc
xor
out
scas
cmp
fs
dec
imul
add
pop
mov
daa
sbb
loopne
repnz
test
mov
es
popa
add
cmp
mov
lahf
adc
lods
sub
xchg
pop
mov
movsl
sbb
insl
push
fbstp
jo
cltd
mov
xchg
sbb
stc
inc
jne
dec
dec
add
jl
loop
stc
ficoml
stos
subb
stos
stos
notb
sub
pushf
xchg
mov
mov
cs
imul
repz
add
pop
inc
lods
nop
rcrl
clc
ret
adc
and
aam
lds
sub
jne
sbb
decl
push
ret
data16
shl
inc
adc
mov
lods
lret
fdivrl
in
mov
or
cmp
sub
pop
cmp
sbb
sti
mov
mov
mov
in
mov
or
cmp
sub
pop
cmp
sbb
sti
mov
mov
mov
in
mov
or
cmp
sub
pop
cmp
pop
insl
setge
out
mov
mov
in
dec
sbb
or
xchg
pop
sub
sub
xchg
je
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
int3
negb
int3
lret
mov
push
add
add
pop
add
add
pop
add
jle
adc
adc
push
add
sub
add
add
add
xlat
add
add
add
sub
add
add
add
add
mov
add
insb
add
xchg
add
add
add
add
add
add
add
add
flds
add
jae
scas
add
jb
sbb
add
add
add
add
add
add
add
out
add
add
jle
mov
or
add
in
add
xor
add
add
add
incb
inc
add
add
adc
xor
and
add
add
incb
xchg
add
add
dec
add
push
add
add
add
add
pop
leave
add
add
mov
scas
add
test
dec
add
jo
xor
das
add
cmp
das
add
add
add
add
add
add
add
and
add
add
add
jmp
jb
insl
add
inc
add
add
fiadds
add
add
add
add
add
add
xchg
add
roll
push
add
add
add
add
add
xor
add
add
add
add
out
add
jb
in
cmp
adc
xchg
add
mov
add
add
jno
xchg
add
stos
add
add
add
add
add
push
add
cltd
add
add
add
incb
or
add
in
add
sbb
fiadds
in
add
add
add
add
add
add
add
add
add
insb
add
scas
add
mov
add
add
add
add
add
add
adc
jb
movsl
add
add
add
pop
add
mov
add
add
add
add
add
add
push
add
cmp
pop
add
add
xchg
add
add
add
adc
cmp
add
add
add
add
jl
in
add
insb
add
popf
add
push
add
add
add
add
add
add
jge
push
add
movsb
add
add
add
add
add
movsb
add
add
add
incb
inc
add
insl
add
mov
in
add
add
xor
add
add
dec
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
add
xchg
add
add
add
add
xor
mov
aad
inc
add
push
add
add
adc
jb
mov
data16
adc
sub
dec
add
add
inc
add
sbb
mov
add
xchg
add
add
add
xor
insb
add
add
add
cmp
add
add
add
add
add
add
out
add
add
add
add
es
add
add
add
add
add
add
add
mov
and
add
add
add
mov
sub
loop
mov
je
cli
fidivs
inc
cmp
adc
aam
enter
imul
sar
xlat
sti
call
lcall
xchg
fs
or
lea
pop
mov
cmpsl
fcoml
lret
inc
es
or
and
leave
in
icebp
jmp
lret
xchg
xchg
fwait
addb
mov
mov
xchg
and
lcall
mov
jno
jb
ja
out
jmp
fwait
jp
jmp
outsl
push
aas
js
imul
pop
xor
int
cmpsl
ret
test
mov
mov
add
mov
push
int
dec
nop
mov
fisttpll
push
pop
mov
push
cmp
push
sbb
test
adc
pop
pop
cmp
xorl
adc
fiadds
mov
inc
lahf
add
andb
lock
mov
pop
lcall
add
in
xorb
or
pop
pushf
ret
lret
jmp
push
sbb
mov
pop
mov
mov
dec
int
popf
inc
xor
popf
imul
and
jle
mov
mov
nop
mov
popf
fs
shlb
clc
xor
popf
sti
cmp
push
aas
push
jg
test
jb
movsb
jge
cs
shr
imul
cmp
jnp
mov
or
ss
adc
pop
xor
jl
mov
cmp
push
fstps
sbb
jns
mov
repz
sbb
cmp
cmpsl
dec
mov
lods
and
cmp
adc
in
inc
push
sti
outsl
jno
xorl
jmp
jl
pop
xchg
fistpll
ret
dec
xor
in
rcll
inc
imul
cltd
mov
movsl
add
fs
jmp
fsubs
les
mov
mov
imul
xorb
cwtl
call
dec
hlt
enter
pop
sub
adc
cmpsl
mov
aaa
insb
jecxz
cwtl
lcall
sub
test
inc
dec
add
sub
nop
sbb
imul
inc
clc
cmp
add
cmp
mov
xchg
cli
pusha
popa
mov
pop
mov
push
orb
cld
jecxz
mov
sbb
pop
and
movsb
jae
into
je
pop
pop
cs
jle
dec
outsb
push
aam
ret
mov
push
push
jge
jle
les
or
jbe
enter
dec
push
dec
jmp
dec
bound
rorb
push
push
inc
pop
stc
sub
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
