fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
insb
test
pop
data16
dec
push
in
cld
lret
fsub
lods
xchg
mov
cmpsb
insb
push
jl
dec
jbe
data16
cmp
or
sbb
in
aam
mov
cmc
mov
cmpsb
insb
dec
jl
dec
outsb
pop
jg
push
or
sbb
in
xor
repnz
xlat
fucomip
ret
cmpsb
and
add
in
insb
stc
cmp
xchg
es
add
mov
jge
mov
out
rolb
rcrl
pop
mov
shrb
inc
out
out
adc
jmp
test
aam
jb
sub
lret
xchg
push
xor
arpl
xor
cmpsb
sub
jge
cmp
push
sub
sub
repnz
je
in
xchg
cmp
cli
sbb
aam
mov
int3
xchg
outsb
or
xchg
ss
cli
or
pop
add
fdivl
mov
pop
xchg
pop
inc
cmpsb
or
lods
aam
std
out
or
stos
mov
jecxz
notb
dec
hlt
mov
push
jl
dec
pop
jl
push
cmp
or
sbb
in
into
cld
fmulp
out
fdivr
lods
mov
sub
adc
addr16
inc
jne
imul
mov
leave
sti
aad
enter
outsl
cs
inc
sbb
cmp
gs
xor
push
sbb
mov
cltd
movsl
leave
in
jmp
add
pop
pop
adc
cmp
or
sbb
in
cld
int3
neg
out
xchg
mov
cmpsb
insb
push
jl
dec
jbe
data16
cmp
or
sbb
in
cld
int3
neg
out
xchg
mov
cmpsb
insb
push
fld
notl
jne
sub
into
test
lods
pop
jl
ljmp
add
or
cmpsl
xor
in
jae
push
rorl
mov
lret
sbb
sbb
popa
cmc
dec
popf
or
dec
adc
mov
and
xor
pop
mov
adc
in
push
inc
fisubrs
orl
std
inc
aaa
or
cmp
or
cmp
movsl
pop
inc
hlt
xchg
jo
fsubl
mov
add
mov
inc
popa
adc
lret
push
or
in
sub
popf
cmp
cmp
push
popf
xchg
mov
mov
mov
les
lcall
push
addr16
out
pop
les
fmuls
xchg
sahf
mov
cmc
scas
push
push
pop
sti
test
inc
or
test
push
pop
stos
das
pop
mov
dec
sub
mov
cmp
mov
sub
pop
ljmp
outsl
sub
adc
dec
or
mov
pop
cmp
repz
xor
jecxz
imul
xlat
and
arpl
nop
jo
mov
pusha
ljmp
loop
push
mov
push
xor
fidivrs
jne
std
sbb
push
dec
adc
dec
setp
in
push
shl
pop
scas
jb
dec
stos
pop
jmp
out
jl
mov
bound
mov
xor
cld
fs
lea
les
pop
pop
dec
movsb
ss
xchg
dec
push
sbb
dec
fimull
idivb
sub
lcall
insl
outsb
lcall
pop
mov
mov
xchg
popa
test
sbb
mov
je
icebp
xor
jl
sub
pop
inc
cmp
pop
nop
jp
nopl
test
sarl
aad
int
repz
cmpsb
add
push
fincstp
test
clc
rorb
push
mov
leave
cwtl
ja
cmp
ds
dec
test
xchg
jge
repz
push
js
mov
orb
into
xor
pop
cmp
push
mov
add
and
and
mov
jae
push
mov
add
xlat
and
sub
jne
icebp
inc
inc
addb
dec
push
mov
lahf
sub
sub
pop
lods
out
jg
bswap
scas
add
ds
or
adc
cltd
lea
xchg
add
or
or
push
loop
inc
push
mov
loope
mov
out
ljmp
jg
test
dec
pushf
cs
push
sbb
dec
pop
pushf
imul
fstpl
sbb
sti
jae
int3
pushl
mov
and
adc
xchg
and
mov
test
dec
xor
fnstenv
fsubl
inc
shlb
invlpg
call
xor
push
mov
gs
and
mov
pop
sahf
fbstp
fmulp
mov
jp
das
adc
adc
je
lcall
lds
dec
sub
sub
add
mov
or
ja
fdivrs
mov
jno
add
lods
shll
fimull
pop
cli
int3
push
add
stos
add
push
lcall
jb
pop
mov
subl
sub
mov
out
aaa
jae
repz
movsl
jmp
pop
xchg
pop
addr16
ja
rcrl
xchg
mov
and
nop
dec
xor
inc
pop
mov
cs
mov
loopne
push
test
pop
popf
sahf
popa
imulb
data16
jg
andb
insl
popf
movb
das
push
inc
or
into
rcrl
cld
dec
push
mov
or
push
push
jecxz
and
pop
insl
jno
mov
addr16
test
loope
subl
pop
pop
fchs
mov
ret
add
dec
dec
addr16
dec
mov
push
leave
mov
mov
jno
psraw
adc
out
imul
xchg
sub
into
pop
dec
dec
lea
loope
mov
rol
dec
xchg
cmc
ror
xlat
aam
push
pop
inc
popa
imul
loop
and
xchg
mov
cmp
mov
dec
fcoms
lret
cmp
cld
adc
scas
xchg
cli
das
out
jns
out
xchg
jne
xlat
ss
or
stos
dec
cmp
leave
les
and
mov
and
popf
inc
adc
or
loopne
shr
inc
xchg
sub
loope
scas
xchg
adc
subb
adc
mov
mov
mov
mov
sub
out
sbb
sbb
je
mov
sarb
jl
imul
dec
xchg
mov
sar
xchg
pop
test
aad
stc
push
out
add
scas
xor
enter
add
adc
mov
push
push
aam
pop
sahf
xchg
jae
sub
adc
push
push
mov
arpl
sub
stc
jmp
andl
sbb
pop
pop
mov
clc
sbb
adc
ret
sbb
js
bound
lock
sub
mov
mov
in
pop
pop
inc
dec
cld
cltd
addr16
jb
cmpsb
mov
xchg
sub
jo
xchg
addr16
sub
addr16
lret
dec
ljmp
cmp
pop
xor
sub
in
xchg
add
and
arpl
push
and
or
mov
add
inc
mov
sarl
stc
jno
sub
fsubp
jmp
nop
iret
imul
nop
dec
ljmp
cmpb
mov
xor
arpl
call
insl
mov
gs
mov
ds
xor
push
test
dec
cmc
sbb
inc
mov
jge
lock
test
xchg
pushf
push
rorl
scas
jmp
fs
mov
jp
stos
fisubrs
push
cmp
cmp
stos
sarb
les
ds
aam
cli
bound
mov
xchg
pop
cmpsl
aad
xlat
pop
rcrl
shll
add
adc
push
mov
add
mov
lods
xchg
cld
outsb
fwait
fwait
mov
xor
and
cwtl
fs
dec
push
icebp
movsl
xor
xor
mov
cmp
or
cmpsl
inc
jmp
dec
xlat
dec
push
cs
xchg
fisubl
adc
out
sub
into
je
adc
inc
cmpsb
dec
sbb
in
sub
sub
fldenv
adc
push
daa
lods
push
ret
cs
adc
dec
int
lods
and
ret
add
jo
fistpll
and
inc
adc
gs
fwait
cltd
xor
inc
int3
stc
lcall
in
xchg
test
clc
and
adc
cmc
pop
jmp
push
cwtl
loope
xchg
popf
dec
lock
mov
and
inc
add
adc
daa
cmp
insl
xchg
hlt
scas
hlt
dec
cmp
in
inc
xor
push
lahf
inc
sbb
nopl
mov
sub
inc
push
push
add
or
push
std
mov
adc
xchg
add
sbb
xchg
jp
insl
adcb
lret
insl
add
imul
sub
mov
orl
pop
dec
nop
or
push
push
push
pop
inc
cld
sbb
and
xchg
aaa
inc
pop
inc
in
and
sbb
les
xchg
rorb
sbb
or
jg
in
imul
add
ja
aad
mov
movsb
shll
pop
sbb
pop
xor
push
cmp
xchg
add
sub
arpl
add
cmp
xor
pusha
arpl
int
cmpsb
fadds
fs
adc
ret
stc
inc
push
les
stc
mov
sti
rorb
pop
daa
pop
inc
fmull
int3
xchg
aas
xchg
push
push
repz
sub
or
jae
dec
xchg
push
pop
movsl
xor
xchg
jl
pushf
in
mov
add
mov
int3
pop
jbe
sub
cltd
jecxz
sahf
xorb
fs
lock
xchg
cld
fiadds
clc
mov
mov
wbinvd
mov
mov
pop
mov
bound
mov
in
dec
lods
ds
cmp
mov
fstpl
and
imul
mov
pop
dec
push
xchg
aam
or
jns
lods
mov
in
and
jnp
hlt
ljmp
pop
arpl
and
mov
mov
jge
jge
and
gs
pusha
and
add
sub
mov
bound
lea
loope
daa
imul
sbb
pop
jno
pop
hlt
out
sub
push
fwait
lods
adc
loop
inc
stos
out
mov
aad
orb
cmp
pop
ja
sahf
scas
test
js
mov
sbb
xor
cmp
ret
push
insb
mov
movsl
jne
mov
aad
add
mov
or
arpl
lock
fsubs
sahf
sub
sub
sub
enter
sub
insl
andl
rcrl
mov
test
jno
pop
gs
xchg
xchg
sarl
daa
ljmp
in
add
int3
adc
lods
inc
pop
inc
xchg
sub
fistl
loopne
xor
cmp
popf
test
les
jbe
mov
and
inc
lock
js
cltd
add
icebp
lahf
out
cmp
jns
jmp
ret
push
inc
pop
sbb
push
jge
aam
jno
cmp
sub
push
lret
mov
rclb
int3
ret
pop
out
aam
xlat
xor
sbb
or
jle
xchg
dec
mov
cltd
jmp
or
sbb
mov
cs
push
cmc
sbb
xor
mov
sub
xchg
sub
xlat
xlat
sub
jno
mov
ss
jb
scas
xor
push
cmp
cmp
and
addr16
pushl
or
cmpsl
stos
insl
cmp
xchg
int
pop
sbb
lods
mov
je
mov
xor
arpl
cltd
dec
scas
inc
int
js
imul
bound
push
xchg
xlat
enter
mov
ja
mov
mov
into
jmp
mov
mov
fs
mov
test
sub
push
and
adc
mov
movsl
mov
or
scas
dec
add
mov
mov
pop
xchg
and
sub
mov
jne
pop
dec
fidivl
and
jb
push
xorb
pop
mov
icebp
pop
repnz
jp
rorb
out
loopne
or
and
aam
ds
cltd
imull
push
push
xor
mov
sbb
pop
insb
push
dec
test
sub
sti
gs
and
sahf
sahf
jl
and
sbb
jp
or
mov
jge
jno
lret
scas
mov
mov
mov
xor
rcr
popa
jne
mov
mov
xchg
mov
jge
jnp
aaa
pop
xchg
lods
cmp
fcomps
stc
push
clc
into
test
int
stc
adc
daa
fcompl
cmpsl
jae
pop
int3
fisubl
aaa
dec
mov
push
add
xor
mulb
sub
jmp
sub
and
mov
add
test
out
dec
lock
shr
sub
xor
inc
xlat
jne
push
std
fdivr
xchg
fisubl
cli
cmpsb
xor
jecxz
jmp
ds
mov
sub
int
das
mov
roll
mov
mov
dec
xor
xchg
scas
jle
in
int
int
data16
xchg
mov
mov
pop
lock
inc
mov
inc
mov
dec
mov
xchg
int3
xchg
mov
imul
call
sbb
fs
mov
sbbl
ret
loop
mov
mov
sub
loopne
cmp
flds
fcomp
xor
mov
jnp
cmpl
jno
jg
out
mov
into
or
in
or
pop
xchg
pop
sub
inc
std
add
jae
cmc
push
enter
mov
ret
clc
or
sbb
jle
cs
lret
push
add
or
mov
push
ffreep
push
out
imulb
ljmp
int3
test
sub
filds
mov
out
xor
mov
jns
pop
xchg
jae
movsl
test
mov
sbb
and
test
lds
lret
es
sbb
jnp
cld
inc
jb
sub
sbb
jae
add
fildl
hlt
mov
ret
das
addr16
jmp
in
sbb
inc
push
cmp
test
push
imul
inc
fisubs
mov
loop
xchg
xor
xor
out
das
rcrb
addr16
jl
outsl
testb
push
stc
sbb
jne
mov
push
imul
adc
jo
adcl
mov
popf
iret
orb
cmp
or
je
mov
mov
std
inc
add
inc
pop
push
xchg
in
dec
sbb
jbe
adc
push
xchg
or
fcomps
xchg
clc
push
iret
jp
std
push
decb
test
jb
mov
aas
repnz
hlt
mov
push
and
mov
jp
dec
mov
mov
add
pop
int3
adc
xor
cltd
rorb
cmpsb
nop
fisttpll
pop
add
popa
shll
pop
push
adc
inc
movsb
xchg
cmp
xchg
ja
and
pop
int
enter
xchg
dec
repz
pop
and
stos
aaa
mov
int3
pusha
adc
jbe
and
leave
fisubrl
xchg
in
jo
negl
jb
xor
jg
pop
add
fldenv
dec
icebp
push
sub
pusha
adc
or
out
jmp
sbb
stos
lea
lahf
jp
mov
inc
cld
aam
je
push
mov
sbb
push
js
jge
testl
inc
mov
fsubl
ficomps
adc
popf
push
cwtl
cvtps2pd
pop
push
or
imul
mov
test
ja
outsl
add
ljmp
xor
hlt
jg
inc
mov
xor
and
fldl
adc
sub
std
mov
xchg
inc
cwtl
outsl
cmpsb
sub
jbe,pn
scas
xchg
jns
cmp
jl
mov
fadds
add
ds
sub
jmp
lahf
fwait
pop
mov
and
sub
ja
mov
pop
mov
adc
mov
mov
mov
mov
int3
stos
int
das
ror
xchg
jp
ret
mov
fwait
dec
subl
sbb
dec
int3
pop
mov
sbb
pop
ja
test
scas
test
sbb
or
test
fwait
insl
inc
cmp
inc
data16
sbb
cmpsb
cmp
fsts
scas
lahf
cmpsl
jmp
imul
xchg
adc
push
jb
dec
mov
arpl
jbe
out
fadds
or
sbb
nop
outsb
aas
jns
xor
cs
and
je
pop
inc
iret
mov
loope
sti
sub
pop
aas
test
xor
jp
lcall
mov
lds
dec
add
repz
jecxz
xchg
punpcklwd
test
pop
in
imul
pop
add
scas
cwtl
jo
loope
mov
adc
pushf
adc
jo
sub
mov
in
xchg
pop
iret
scas
pop
xchg
inc
fcompl
push
mov
pop
xchg
cld
dec
or
movsl
arpl
jl
mov
sbb
or
sti
add
mov
xchg
mov
daa
jns
test
lret
notb
xchg
test
xchg
or
xor
xlat
inc
dec
lahf
sbb
xor
lcall
jp
scas
sbb
ss
addl
mov
fs
sbb
push
push
nop
ss
xor
jne
loope
fistpll
fwait
xchg
adc
mov
pop
je
or
mov
push
or
ficomps
dec
lahf
or
lock
fsubrs
ret
adc
iret
mov
lds
inc
xor
xor
xchg
mov
mov
mov
adc
mov
pusha
mov
sbb
es
mov
mov
jmp
jae
pop
add
inc
test
pop
inc
jmp
int3
jmp
je
sub
mov
mov
add
dec
sbb
pop
add
inc
adc
ljmp
xlat
outsl
sbb
test
popa
sti
push
lock
lods
jae
pop
je
sahf
rcrb
jmp
cmc
sub
mov
mov
xor
add
push
xchg
mov
cs
lret
movsbl
aaa
sub
fld
movl
out
add
cld
imul
push
sbb
mov
xchg
mov
mov
es
sub
je
nop
sbb
lret
ss
push
adc
jns
lahf
out
lods
push
imul
inc
fisubs
jnp
shlb
sbb
or
xchg
movsl
ja
jbe
dec
enter
ljmp
sub
jecxz
stos
in
mov
xchg
sbb
ljmp
inc
out
dec
mov
outsl
cmpsb
inc
xor
mov
pop
test
cmp
adc
stos
andb
push
inc
xlat
in
es
sbb
loop
outsl
fdivrp
and
in
lock
xchg
leave
push
out
out
jge
pop
pop
xchg
cmp
notl
lret
in
xorl
adc
sbb
popf
in
popf
sbb
fstps
xor
into
mov
xchg
sbb
mov
lea
add
pop
sarl
fldenv
popf
gs
jg
sbb
fdivs
out
call
push
roll
js
ja
mov
push
fcoms
popf
push
inc
mov
push
aad
sub
push
sti
jne
add
cli
jae
mov
je
lahf
add
push
aam
mov
and
sbb
mov
lock
jg
add
lahf
jns
mov
push
pushf
add
out
cwtl
in
outsb
or
adc
add
sbb
push
mov
jb
xchg
jae
push
pop
lahf
push
xor
add
mov
aas
stos
mov
sbb
insb
adc
test
out
fs
je
jge
inc
inc
push
mov
rcl
xorl
mov
call
adc
jne
gs
in
jnp
mov
pop
sub
popf
or
cli
daa
fs
and
nop
mov
outsb
pop
push
orb
in
js
mov
add
push
inc
dec
sbb
setp
adc
inc
ss
ja
outsl
pusha
xor
or
leave
sbb
pop
dec
mov
cmp
and
pop
mov
neg
dec
jl
popf
imul
pop
and
xlat
mov
imul
mov
sub
iret
out
lock
ficomps
jl
inc
stc
jne
cmp
and
cmpsl
add
out
cs
adc
mov
mov
les
stc
adc
xchg
fistpl
stos
cmpsl
loope
and
or
mov
es
jecxz
rep
fcmovbe
cmpsb
push
sbb
gs
sahf
int3
out
das
and
push
or
cmp
mov
icebp
gs
jb
shl
out
sbb
mov
mov
cmpsb
jnp
dec
rcrl
arpl
or
mov
push
mov
pop
or
sub
add
mov
stc
rcrl
popa
bound
stc
fdivl
adc
es
jno
dec
mov
mov
and
jp
fcmovnb
dec
shlb
and
or
jnp
cmpsb
mov
inc
cmpsl
mov
and
mov
push
push
std
push
xchg
or
and
jbe
pop
clc
xchg
add
imul
lock
inc
adc
jo
test
out
in
in
sbb
mov
cmpl
mov
push
and
enter
cmp
scas
mov
clc
movsl
loope
push
push
mov
aam
hlt
xor
and
inc
inc
cmp
xor
or
lock
jp
inc
mov
dec
sbb
inc
mov
pop
ljmp
gs
imul
addb
push
lock
sub
sbb
add
cltd
nop
stos
leave
scas
adc
lret
push
dec
sbb
fstp
mov
daa
jns
mov
in
aaa
xchg
int3
push
hlt
dec
cmp
push
in
inc
push
loopne
cmpsb
sub
add
mov
mov
dec
loopne
dec
in
lret
je
xor
add
push
mov
or
pop
lock
sbb
xchg
xchg
add
out
out
mov
lods
cmp
call
or
mov
popa
cs
fcmovbe
js
stc
sub
fldcw
mulb
clc
inc
cmp
mov
jecxz
sbb
pop
insl
bound
pop
fidivrl
push
mov
and
push
add
jp
mov
cmp
push
fcoml
lock
jl
test
pop
data16
cmp
or
sbb
in
cld
int3
neg
out
xchg
mov
cmpsb
insb
push
jl
dec
jbe
data16
cmp
or
sbb
in
cld
int3
neg
out
xchg
mov
cmpsb
insb
push
jl
dec
jbe
data16
cmp
or
sbb
in
cld
int3
neg
out
xchg
mov
cmpsb
insb
push
jl
dec
jbe
data16
cmp
or
sbb
in
cld
insb
data16
xchg
fistpl
xor
jae
arpl
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
and
adc
add
leave
or
lods
mov
mov
insl
repnz
ret
frstor
int
std
add
jb
bound
mov
jge
insl
repnz
ret
fnstsw
int
std
sbb
imul
lods
stos
arpl
insl
repnz
lea
pop
xchg
sub
adc
bound
test
inc
pop
sbb
jge
cmp
sbb
aad
mov
in
aad
lea
mov
jb
mov
movsl
aaa
loopne
sub
mov
cmp
ficomps
loope
inc
xorl
popf
pop
mov
js
lods
repnz
ret
and
int3
es
lea
std
cmp
pop
cmpsl
cmpl
dec
loop
pop
ret
ret
inc
scas
xor
popf
jp
pop
inc
mov
mov
fs
xchg
xorl
sub
pop
ret
cld
std
cwtl
lea
mov
mov
shrb
loop
stc
shrb
ret
fnstsw
int
std
add
gs
jb
push
mov
mov
insl
ljmp
imul
push
ja
jbe
add
add
pop
fadds
mov
into
and
adc
add
jo
je
mov
inc
xchg
jb
push
clc
bound
icebp
sbb
and
jb
bound
dec
mov
cmp
bound
mov
mov
insl
repnz
ret
frstor
int
std
add
jb
bound
mov
mov
insl
repnz
ret
fisttpll
cmp
pop
add
xchg
inc
loop
jle
lahf
sub
xor
mov
jnp
das
pusha
lods
and
jmp
in
lea
je
sub
les
pop
pushl
pop
and
scas
repz
cwtl
movb
cli
lret
xchg
and
loope
popf
fidivrl
sbb
fs
lds
mov
add
insl
jecxz
adc
mov
fwait
or
cmpsl
jb
repz
fcos
pop
fidivrs
sbb
push
cmpsb
and
xor
insl
insl
insl
ja
cmp
xor
insb
cmp
adc
imul
imul
sub
clc
cmp
xchg
sarb
lods
jg
inc
push
or
scas
jne
cld
push
mov
jle
xor
mov
xchg
mov
stos
dec
add
xor
jg
or
or
mov
mov
int
mov
jl
or
jbe
mov
aad
pop
icebp
xor
sbb
out
repnz
mov
cmp
mov
push
pop
popa
insl
cmp
cltd
push
add
xchg
cwtl
cmp
ljmp
cmp
test
sub
cmp
xchg
cmp
cmp
jbe
in
aaa
pop
jmp
mov
and
push
pop
test
push
in
out
jg
inc
xor
shll
bound
mov
push
divl
push
sub
xchg
pop
out
mov
lds
xchg
inc
sbb
loop
xlat
into
stos
bound
aas
jbe
pop
mov
inc
xchg
jnp
cld
push
in
ficoms
jp
and
mov
stos
les
scas
mov
les
das
jecxz
scas
jge
ljmp
scas
shrl
mov
std
shrb
dec
adc
jne
cmp
fwait
push
movsb
pushf
mov
jecxz
iret
adc
aas
pop
push
pop
mov
test
idiv
jecxz
fs
mov
cmp
add
in
rclb
orl
inc
add
push
and
pop
sub
enter
sub
mov
cmc
cmp
mov
loopne
in
sbb
stc
inc
sub
mov
mov
insl
xlat
push
jl
loop
push
inc
je
dec
daa
jge
mov
pop
inc
adc
rcrb
sbb
add
xor
mov
cwtl
outsb
scas
push
dec
imul
add
jae
loop
popa
mov
mov
out
xor
mull
or
add
dec
jl
sbb
cmp
imul
jne
scas
mov
cmp
popf
sub
cmp
test
mov
bound
repz
jne
adc
inc
jns
icebp
fnstsw
call
bound
aam
nop
test
push
xchg
pop
inc
movsb
popa
adc
lock
cld
insl
dec
and
in
xchg
sub
out
jg
inc
ficompl
into
insb
mov
mov
mov
mov
or
sbbb
out
jmp
cmp
pusha
daa
push
push
mov
aas
shrl
lock
sub
fimull
adc
adc
test
mov
dec
mov
fnsave
xchg
fcmovbe
cmpsl
cmpl
add
mov
inc
pop
or
insb
leave
js
xchg
movsb
inc
mov
andl
repnz
cltd
mov
cmp
sbb
in
adc
int3
movsl
mov
adc
bound
outsl
cmp
sbb
sarl
std
fbstp
es
inc
test
sub
pop
call
cs
inc
jbe
adc
scas
sbb
sbb
mov
cmp
fs
notl
sub
mov
mov
mov
xchg
push
or
jo
sti
xchg
and
or
dec
das
mov
inc
shrb
notl
icebp
xchg
test
lods
aam
jno
xchg
roll
mov
iret
test
filds
xor
lahf
loope
fnstenv
dec
mov
mov
jo
shr
mov
sub
jg
sub
fsub
sbb
mov
shlb
lods
xor
sbb
stos
fdivs
les
mov
jo
push
push
or
xchg
int
loopne
xchg
repnz
xor
mov
lods
pop
sbb
pop
cmpl
addl
cmp
inc
dec
push
xor
push
jns
mov
mov
add
shrb
rcrb
mov
sti
push
dec
addb
mov
dec
mov
or
bound
sbbb
xor
jbe
daa
aas
xchg
test
movsl
and
inc
rolb
mov
dec
cmc
aam
sarw
jne
imul
mov
inc
jo
jp
adc
mov
outsl
xor
mov
push
fsub
adc
xchg
mov
stos
add
lcall
push
repnz
clc
out
and
inc
inc
cld
lret
or
insl
sbb
or
popa
pcmpgtd
or
adc
frstor
mov
sub
and
inc
sbb
cmpsl
scas
in
dec
add
cmp
stc
aam
int3
test
jb
cmp
cmp
dec
rcl
jae
shll
jnp
xor
out
hlt
add
js
sbb
or
mov
sub
jnp
sbb
dec
lcall
push
aam
mov
fimuls
ret
pusha
fyl2x
cmp
mov
push
sbb
adc
repz
pop
fnstenv
mov
dec
xorl
mov
pushf
dec
out
sarb
imul
lea
fdivrl
in
loop
or
ds
fldl
fidivl
lret
ja
mov
inc
xchg
incb
jg
dec
push
and
stos
movq
dec
xchg
cli
xchg
push
test
in
jle
xor
xchg
jecxz
xlat
mov
sub
mov
jmp
push
aad
xor
sbb
loope
push
xor
dec
sub
push
enter
rcll
repnz
mov
outsb
addr16
sbb
inc
nop
push
push
test
jnp
mov
adc
push
xorb
jecxz
add
out
out
rolb
popl
mov
push
mov
cmc
and
add
fisttps
movsb
mov
cltd
test
pop
sarl
fisttpl
jnp
push
imul
lfs
adc
or
or
jle
jl
jns
test
pop
in
loope
and
push
mov
cmp
adc
jnp
push
cmpb
mov
lret
repnz
subb
add
and
pop
xchg
xchg
jge
je
mov
and
sbb
mov
ret
pop
add
pop
rol
dec
cltd
stos
xor
mov
gs
call
into
lods
js
outsb
cmpsb
pop
lock
mulb
mov
add
scas
testb
and
dec
stos
push
out
jecxz
lods
pop
jb
test
sbb
gs
xor
aas
mov
je
cmp
shlb
aaa
repz
shl
inc
sub
sbb
inc
xchg
jle
or
push
cmp
jo
jns
roll
dec
loopne
std
lahf
mov
add
fiadds
xorb
inc
sub
mov
hlt
fmuls
je
push
mov
add
dec
xchg
cmp
mov
fdivl
mov
xor
dec
repz
xor
mov
xchg
scas
fldl
repz
dec
adc
mov
mov
lcall
jbe
sbb
sbb
incb
jl
nop
fadds
shll
mov
dec
adc
insb
cwtl
jbe
push
fmull
insl
sbb
jecxz
cmp
dec
sbb
stos
popf
cmp
fiadds
inc
pusha
jge
rorl
pop
dec
movsb
jns
push
test
mov
push
js
clc
push
add
mov
mov
lcall
je
inc
pop
in
fsub
pop
hlt
popf
cmc
adc
pop
xchg
mov
cmpsl
cs
mov
xchg
lods
jl
leave
adcl
dec
push
pop
add
cmp
aas
mov
rcll
arpl
pusha
sti
push
mov
add
mov
les
inc
in
jecxz
mov
repz
pxor
mov
stc
daa
cwtl
fiaddl
push
shlb
cmp
test
fidivs
mov
sbb
pop
bound
add
and
shl
jge
loop
ja
stos
and
sub
and
cmc
pop
jno
out
imul
mov
xor
dec
lahf
arpl
pop
popf
or
aaa
mov
es
adc
inc
repz
mov
sbb
xchg
mov
lea
jmp
dec
fwait
aaa
je
and
inc
mov
ja
push
mov
add
cmpsb
aaa
jecxz
add
mov
insl
push
mov
outsl
test
jns
pushf
sbb
arpl
jae
dec
adc
and
call
in
mov
insb
lods
repnz
mov
rol
lods
sub
add
cmp
push
ja
add
ss
adc
jo
ljmp
clc
mov
jbe
xchg
add
outsl
pop
xor
je
fcoml
add
outsb
jg
push
inc
or
mov
jmp
pop
roll
add
je
or
fwait
sbb
movsl
push
add
fists
filds
push
pop
sub
rcr
xor
out
mov
xchg
ficomps
xor
adc
outsb
mov
pusha
jge
mov
mov
outsl
cld
clc
addb
mov
xchg
clc
test
mov
loop
loop
xchg
mov
sbbl
mov
out
outsb
fwait
push
sub
mov
das
dec
push
jo
mov
sbb
pop
and
jns
daa
jg
push
rclb
into
jno
ret
ds
sub
fistps
push
fldln2
push
mov
mov
push
repz
lods
je
sub
push
push
add
sbb
into
shl
repnz
repnz
js
xor
lret
insb
rorb
xchg
les
cmpsb
push
cwtl
jne
jnp
lret
fs
inc
mov
in
sbb
mov
fildll
push
sub
dec
cmp
pushf
ret
dec
clc
or
sub
and
loop
fadds
add
leave
rclb
popa
out
test
lahf
fs
popf
divl
jo
inc
add
or
push
jbe
push
clc
sbb
outsl
pusha
mov
bound
test
scas
test
test
xchg
je
xchg
cmpsb
jne
outsb
pop
pushf
cld
in
or
pop
jnp
bound
mov
lods
repnz
jnp
inc
ret
pop
dec
in
mov
hlt
pop
inc
lock
stc
mov
in
cmc
adc
nop
jle
push
push
cmpsl
cwtl
cmpsl
mov
and
divl
ds
sbb
mov
sub
sahf
jecxz
sbb
cwtl
mov
mov
inc
popf
inc
xor
pop
negl
mov
je
icebp
movsl
add
inc
mov
mov
int
mov
mov
pop
cli
int
out
fwait
cwtl
enter
test
and
mov
and
and
rorb
ds
sbb
push
adcl
jb
jp
fisttpll
push
sub
sbb
outsl
outsb
xchg
add
stc
aad
add
push
je
mov
adc
cmp
jecxz
andb
jbe
sti
hlt
pop
pop
jne
mov
popf
dec
xor
ficomps
movsl
clc
pop
jmp
pop
sti
mov
push
lret
in
pop
adc
cmpsb
xor
xchg
or
and
imul
mov
leave
inc
mov
enter
push
dec
sbb
call
xor
jmp
xchg
js
mov
cmp
mov
ss
cmp
lods
jo
xchg
or
jae
loope
icebp
scas
push
xor
in
loope
sbb
insb
inc
ja
or
aam
xor
jp
cld
push
adc
and
je
xor
push
subb
outsb
fistpll
fwait
mov
xor
jo
roll
adcb
es
lahf
inc
mov
repnz
add
lret
pop
data16
clc
jnp
cmp
or
leave
jl
movsb
jns
ret
and
dec
or
or
push
pop
dec
insb
scas
push
jbe
aad
xchg
push
adc
inc
fmul
in
or
lds
xchg
out
sub
ljmp
int
out
js
fsubrl
xchg
scas
addl
mov
and
xchg
and
mov
xchg
incb
ret
insl
mov
insb
imul
inc
int
xchg
sbb
hlt
mov
xchg
cmp
xchg
pop
jo
pop
and
loopne
das
adc
push
fmul
xor
inc
mov
xorl
xor
and
sub
fstl
jmp
push
aam
rcr
mov
jbe
jge
fimuls
ficoml
xchg
cmp
add
enter
xor
insl
call
cli
repnz
push
inc
sbb
jecxz
jno
jb
push
xlat
mov
and
pushf
fsubrs
into
mov
out
pop
hlt
mov
mov
pop
std
daa
push
or
xor
adc
mov
cmpsb
loope
sti
fnstenv
lret
sti
addr16
add
mov
in
scas
out
daa
adc
movsl
ja
mov
sub
fidivl
pop
mov
std
xchg
xchg
sbb
sbb
in
jns
sbb
push
push
lret
lcall
push
aad
out
push
xchg
adc
out
xchg
sub
sub
push
lods
sbbb
rcll
sbb
xor
ss
jnp
ret
inc
sbb
add
add
clc
pop
data16
cmpsb
jmp
aas
sti
ja
insl
xor
outsb
mov
sbb
xor
fsubl
data16
popl
pop
repnz
cmc
rclb
test
hlt
jnp
pop
add
xor
bound
and
mov
jns
jne
js
dec
out
cmp
add
aaa
and
cmp
scas
loopne
or
sub
dec
cmp
cltd
add
jns
mov
and
lock
insl
std
or
sbb
mov
add
std
xchg
repnz
enter
push
test
push
sub
or
into
pop
and
lea
add
std
mov
insl
fistps
jno
cltd
insl
add
mov
dec
push
repnz
jo
stc
jb
xor
scas
xchg
loop
adc
lds
test
adc
lret
jecxz
ret
adc
and
sbb
jg
ret
mov
cmp
mov
jne
xor
mov
xchg
mov
vphadduwd
lds
in
andb
and
lods
clc
xchg
mov
ret
adc
stos
mov
stc
inc
xchg
sub
adc
push
add
mov
mov
mov
and
push
adc
mov
or
jnp
orb
inc
aam
data16
cmp
cmp
add
icebp
lock
push
inc
xor
add
xor
lcall
jmp
add
out
cmp
leave
and
sahf
dec
icebp
sahf
sub
movsl
insl
adc
and
sahf
sbbb
mov
lock
insb
stos
inc
xor
mov
mov
ds
mov
outsl
sbb
push
inc
leave
popf
mov
ss
cmpsl
mov
cmp
sub
pop
add
cmp
loop
stc
lret
pop
adc
imul
cmp
pop
lcall
out
jg
push
cli
lock
mov
lods
inc
mov
jmp
mov
lods
mov
mov
repnz
scas
push
mov
mov
push
cmc
roll
and
cmp
fsts
aad
pop
stos
pop
dec
aas
leave
pop
jno
inc
pop
in
lds
int
inc
pop
inc
repnz
in
xchg
mov
cmp
jno
out
ror
push
sub
clc
lcall
sbb
add
fdivrl
mov
jne
pop
xor
cmc
or
push
dec
fsubrs
lahf
ret
xor
test
pop
add
pop
mov
test
xor
imul
cmc
mov
jb
mov
jge
push
fldt
sbbl
push
jnp
jae
sub
add
pop
sbb
into
test
loop
lods
mov
adc
or
mov
dec
movl
push
clc
mov
inc
jmp
mov
daa
xchg
test
xchg
out
popl
push
push
fnstcw
push
test
or
mov
insb
fsts
or
xor
pop
mov
pop
shrl
js
cmp
popa
and
sub
xchg
sbb
xchg
cmp
ds
ja
cmp
sub
add
push
aad
pop
lcall
add
add
jp
ficoml
enter
test
xchg
dec
or
cmp
and
lret
sbb
xor
jno
or
mov
pop
xlat
call
lret
test
sub
divl
mov
mov
add
popa
js
sbb
aam
lcall
popf
add
data16
int3
jle
mulb
pop
add
stos
push
sbb
imul
test
ficoms
mov
data16
int
inc
jnp
ja
dec
call
add
pop
cmp
sarb
mov
mov
sbb
imulb
lds
sbb
mov
ret
test
xchg
es
stc
pop
add
pop
in
sub
and
mov
insb
aas
cmc
call
fbld
daa
int3
rcrl
fmuls
out
push
mov
popf
lret
mov
int
hlt
lds
jge
xchg
jnp
clc
pushf
insl
aaa
dec
mov
cmp
ret
or
adc
lea
nop
popl
mov
and
popa
imul
enter
push
fucom
dec
mov
mov
push
inc
dec
add
cs
repnz
sbb
and
dec
push
sub
les
jle
xor
nop
repnz
mov
pushf
adc
fidivs
rcrb
sbb
dec
sarl
ljmp
dec
imull
jmp
inc
in
pushf
pop
lock
loopne
rcll
mov
ds
cld
adc
xchg
int3
inc
faddl
hlt
mov
push
push
out
mov
pop
stc
cmp
in
repnz
das
cmp
push
es
dec
rcll
mov
jg
sarl
mov
aam
fstpt
sub
add
jae
and
das
cmp
std
add
lds
dec
xor
fwait
gs
xlat
ljmp
out
js
hlt
loope
into
stos
ljmp
inc
incb
add
jmp
push
xchg
jl
aaa
pop
push
adc
cmp
adc
outsl
xchg
out
mov
adc
jo
bound
lock
fs
test
pusha
shll
movsb
bound
mov
add
aad
adc
mov
jbe
cmpsb
lret
pop
jae
shlb
and
xchg
xor
mov
loopne
mov
pop
lcall
sahf
adc
gs
push
stos
jbe
and
pop
cmp
xchg
lock
int3
sahf
mov
push
sbb
mov
or
pop
pop
mov
movsl
fisubrl
mov
xor
adc
push
jae
dec
xchg
mov
das
cmp
mov
lods
mov
push
jno
sbb
cmp
xor
nop
leave
aam
stos
std
push
bound
jne
xor
shll
cmp
in
xor
mov
jne
add
lret
fnstcw
or
mov
dec
cmp
jae
stos
pop
jnp
fldenv
cs
int3
shl
adc
xchg
cmp
lds
and
pop
shr
adc
rcl
push
addr16
add
lock
xor
ja
mov
nop
or
inc
pop
push
fcmovu
mov
icebp
xchg
jne
cmpsl
pop
jae
outsl
inc
negb
jo
rcl
jmp
call
ret
scas
mov
push
nop
mov
ret
ja
mov
ret
stc
pop
mov
stc
add
adcl
aas
sahf
xor
rolb
loop
pop
mov
mov
add
les
mov
cmp
push
jg
aas
fistpll
xchg
and
in
rcr
push
int
cmpl
cs
inc
dec
js
movsb
jmp
push
aad
ds
sti
push
outsb
mov
ss
xchg
out
fstpt
cmpsl
aam
and
cld
out
lock
xchg
mov
xor
ficoms
pop
imul
jmp
in
subb
hlt
or
adc
fldl
mov
jp
enter
call
pop
int
das
lahf
dec
pop
and
inc
out
pop
mov
rorl
push
dec
hlt
cmp
idivl
rcl
nop
xchg
cmp
out
sbb
add
jb
bound
mov
mov
insl
repnz
ret
frstor
int
std
add
jb
bound
mov
mov
insl
repnz
ret
fldenv
int
std
add
jb
bound
mov
mov
insl
repnz
or
xor
and
adc
add
jo
bound
dec
mov
sbbb
xchg
push
sub
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
lods
sub
adc
dec
js
sub
mov
sub
lret
stos
cmp
or
jnp
imul
int
aaa
mov
iret
mov
insb
jmp
cltd
dec
lret
movsb
cmp
in
hlt
imul
fimull
adc
stos
jno
jns
push
mov
and
int
lods
je
je
pop
cmc
mov
xor
and
loope
or
pusha
push
roll
mov
jge
hlt
cmp
adc
push
rclb
add
rorl
lcall
dec
addr16
in
mov
aas
inc
rclb
bnd
cli
sub
mull
inc
insl
cs
or
jp
imul
inc
sbb
xchg
ds
and
inc
pop
fistl
les
sub
enter
cld
or
xlat
jmp
pop
shlb
aam
jge
repnz
push
data16
cs
ret
stos
loop
or
mov
iret
dec
lret
lods
sub
jnp
imul
aam
and
xor
mov
jne
pop
fistl
push
enter
jmp
imul
mov
fildll
arpl
adc
sub
clc
sbb
cmpxchg
dec
aas
ret
sub
in
cwtl
push
subb
lahf
js
jae
outsb
test
imul
int
cmp
fwait
or
jmp
fisttpl
mov
sbb
imul
int
cmp
fwait
or
jmp
fisttpl
mov
test
rcl
and
pop
cmc
jecxz
cmp
or
out
push
lods
loopne
movsb
rclb
mov
in
mov
or
rclb
or
stos
sub
js
mov
gs
xor
cmpsl
push
popf
mov
mov
push
pop
dec
inc
add
push
mov
dec
popa
or
lods
mov
outsb
pop
jle
inc
adc
add
jecxz
call
mov
add
fcmovnb
adc
jbe
dec
out
cmpsb
inc
mov
mov
or
mov
faddl
push
rol
mov
loop
push
sbb
sti
push
pop
outsb
repz
in
or
mov
push
cwtl
daa
popa
push
scas
adcl
std
lea
stos
or
dec
cmc
sbb
stos
popf
out
out
outsb
outsl
dec
insb
aas
xchg
and
pop
icebp
pop
sbb
loop
mov
xor
mov
test
movsl
sbb
dec
insl
mov
adcb
out
mov
cmp
lret
inc
jne
gs
sbb
imul
cs
mov
cltd
xor
roll
and
ja
dec
mov
cmp
pop
sahf
push
sub
addl
cmpsl
sbb
and
xlat
shll
cwtl
stos
dec
shr
inc
pop
dec
and
inc
xchg
adc
out
sub
fnsave
xor
adc
pop
mov
clc
mov
jb
aas
push
push
and
jecxz
mov
loope
idivl
out
add
jge
loopne
mov
jb
int
xchg
xor
fstpt
mov
leave
std
imul
push
popf
ja
add
pop
xchg
push
cltd
out
mov
sbb
fsub
repnz
push
xor
outsb
scas
imul
fisttpll
cmp
loopne
outsb
out
mov
xor
daa
mov
xchg
cwtl
jae
inc
sub
push
movsb
pop
pop
inc
inc
mov
push
test
aaa
call
popa
loopne
mov
enter
xlat
ror
and
addl
mov
xlat
incb
addr16
cwtl
test
push
add
cmpsl
ret
cs
sti
imul
jo
lahf
loop
or
xchg
out
repz
pop
cmp
repnz
jne
cmovb
in
sti
rol
icebp
push
bswap
xchg
cmc
push
fistpl
pusha
push
ret
sub
scas
inc
dec
mov
mov
xor
pop
jae
lods
sbb
push
js
jne
xor
jbe
cmc
mov
push
sub
sahf
mov
jp
test
sti
bound
jno
insl
popa
xchg
dec
outsl
imul
and
mov
enter
out
pop
sub
and
jb
xor
stos
mov
mov
pop
push
pop
movsb
add
repnz
std
mov
out
dec
lahf
mov
and
mov
and
jae
test
xor
enter
sub
insb
int
out
and
xchg
sub
test
test
sbb
aad
push
inc
add
cmpsb
push
cmp
sub
cltd
inc
pop
dec
ds
iret
sub
jb
inc
movsl
repnz
scas
cmp
add
ss
sub
je
icebp
sti
jge
movsb
push
jno
orl
pop
adc
cmp
mov
mull
push
arpl
outsb
jl
hlt
into
jle
add
lock
sub
out
js
out
icebp
dec
lahf
loop
and
popa
out
jge
mov
inc
xchg
adc
and
ljmp
clc
loopne
or
push
pop
push
jmp
mov
shll
in
scas
dec
in
mov
push
jle
push
lds
push
mov
or
loope
adc
cltd
pusha
out
fdivrl
repz
or
jecxz
pop
mov
adc
leave
push
adc
pop
adc
je
sarl
aaa
inc
mov
in
mov
es
sbb
pop
outsb
aad
mov
inc
sbb
sti
push
mov
xchg
ret
fidivrl
sbb
jle
in
jae
dec
add
cli
ficoms
dec
dec
cmp
mov
pop
xchg
sbb
enter
xchg
jbe
dec
int
aam
dec
adc
add
test
adc
leave
ss
test
inc
lcall
sub
mov
xor
mov
inc
sub
jo
outsl
fprem1
loop
cmp
shll
lret
mov
pop
add
jno
pop
xchg
xchg
mov
ds
dec
push
mov
addr16
ret
mov
into
mov
jo
mov
or
sub
inc
jns
loope
lret
dec
test
rcrb
not
shlb
test
int
jecxz
and
pop
and
jp
add
mov
repz
shll
into
xchg
int
adcb
cli
sbb
and
in
js
and
push
in
movsb
sbb
shll
and
repz
jge
jle
int3
stos
push
outsb
outsb
add
rcrl
cmc
ja
mov
xor
mov
mov
xchg
fcoms
adc
or
push
sub
loope
jge
dec
add
cs
pop
or
xchg
mov
lret
jge
jo
cmpsl
call
inc
ss
imul
or
mov
push
mov
mov
loop
jmp
in
shlb
hlt
xchg
test
xchg
jbe
pop
mov
insb
ljmp
sbb
stc
mov
call
xor
mov
out
dec
adc
es
push
jbe
xchg
ds
cmp
lds
push
js
cmp
stos
dec
mov
xor
or
ficomps
cltd
dec
add
outsl
pop
insb
fwait
ja
outsb
push
aaa
mov
add
outsl
fisubs
jnp
jl
pop
or
xlat
add
add
data16
add
fidivrs
cmp
lret
movntps
push
cmp
orps
in
fwait
ror
push
add
aaa
enter
push
sbb
ret
sub
jp
add
xor
push
pushf
out
or
mov
jno
and
sbb
sbb
cmc
stos
les
inc
xchg
lock
sbb
sbb
sbb
sahf
or
rolb
cli
mov
inc
ja
dec
sub
popf
js
push
sbb
addr16
xchg
mov
testb
sub
sbb
ss
add
mov
data16
sbb
adc
scas
in
or
in
mov
outsl
int
pusha
movsb
les
out
sub
mov
ret
and
in
inc
and
jbe
inc
jno
xor
rclb
add
and
xchg
scas
std
fcompl
xchg
movb
adcl
dec
movsl
in
call
adc
stos
push
popa
inc
push
sbb
shrl
jbe
insb
addr16
sbb
aas
bound
in
jae
inc
sub
adc
fsts
and
xchg
mov
xchg
out
call
mov
pop
outsb
int3
mov
mov
and
cld
and
or
bound
sarl
shlb
movl
pop
repz
add
outsl
movsl
jmp
fs
or
jno
pop
xor
movsb
pop
out
sub
push
sbb
mov
pop
cmp
sbb
fistpl
rolb
xchg
add
mov
add
cmc
out
inc
fxch
mov
das
pop
xchg
rorl
subl
lret
jne
sbb
das
jbe
out
call
or
ss
pop
mov
adc
lret
insb
cmpb
push
shll
fdivrs
fcomps
fwait
mov
xchg
mov
shl
mov
mov
lret
stc
loopne
fisttpl
sbb
inc
out
lds
sti
sbb
negl
add
sbb
sbb
inc
mov
lret
mov
sbb
mov
movsb
pop
in
es
test
add
push
daa
jb
cld
fisttpll
ja
push
and
inc
ja
jecxz
stos
pop
xor
mov
les
aaa
push
call
push
xchg
push
cld
sbb
mov
rcrb
idivb
enter
orb
adc
push
pop
or
jmp
icebp
jg
es
adc
sbb
scas
or
arpl
rcr
sarb
jmp
mov
inc
jno
and
inc
or
mov
imul
cs
mov
lock
cs
clc
outsb
or
sub
addl
enter
fists
pop
inc
cmpsb
xor
mov
jno
push
xor
sub
shll
cli
cmpsb
and
mov
cwtl
fadds
lods
adc
cs
xor
sub
lock
push
out
repz
lds
data16
jl
cs
lea
ret
add
daa
push
in
and
jno
mov
push
xor
pop
pop
push
lret
xchg
cmp
iret
adc
or
sahf
repnz
jae
scas
loopne
mov
fwait
cmpsb
mov
ljmp
nop
xchg
cld
or
pop
or
cmpsl
dec
mov
pop
mov
dec
mov
sahf
mov
xor
push
add
in
mov
outsl
xchg
and
stos
std
je
lret
fisttpll
xor
into
jae
lcall
cmp
int3
sub
push
xor
sbbb
fwait
push
mov
push
mov
lea
pop
inc
push
cmp
xor
dec
and
test
dec
pop
mov
das
push
xchg
es
enter
push
or
insl
mov
cli
xor
and
sbb
cmp
or
test
lods
aas
pop
int3
adc
push
sbb
mov
int3
ds
push
and
push
add
mov
push
in
es
lcall
cld
fsubrs
cmp
mov
pusha
push
pop
jb
sbb
mov
pop
mov
movl
inc
dec
xor
stos
shll
push
sbbb
movsb
dec
scas
in
cli
test
movsl
add
and
sahf
enter
lea
repnz
inc
cmpsl
cmpsl
jne
inc
and
inc
clc
push
pop
ljmp
xchg
push
jle
imul
push
mov
push
jae
cmpsl
lods
jecxz
mov
xor
bound
jecxz
mov
hlt
ret
test
out
push
rcrb
ss
cmp
mov
mov
int
movsl
mov
adc
fstpl
cltd
ss
movsb
stos
sub
mov
pop
jbe
dec
jmp
call
inc
outsl
dec
pop
shr
outsb
negl
loope
adc
fcoml
adc
clc
in
dec
dec
and
aad
and
sbb
in
arpl
lcall
push
insb
cmp
add
jmp
jmp
iret
imul
cmp
shlb
pop
pop
mov
adc
pop
repnz
sarb
xchg
mov
adcl
imul
inc
jns
out
sahf
xor
sbb
mov
mov
mov
daa
add
imul
scas
pop
dec
outsb
mov
pop
pop
outsl
mov
mov
or
loopne
pop
xlat
mov
dec
mov
scas
ljmp
push
adc
ljmp
inc
stos
add
jmp
bound
movsl
xor
xchg
xor
push
or
mov
mov
testl
stc
and
hlt
mov
shr
rcr
inc
loop
mov
fsts
jne
mov
loopne
mov
jbe
dec
xchg
ret
in
xchg
icebp
ljmp
test
jbe
lcall
pop
or
out
pop
dec
jp
mov
push
ds
jno
adc
add
orl
cmpsb
lahf
in
loop
sbb
fwait
cmp
push
mov
jle
jo
out
data16
xor
adc
jp
fldenv
sbb
xor
xchg
les
aas
xor
mov
cli
lcall
test
lea
arpl
out
mov
icebp
sbb
mov
es
scas
fdivrs
mov
xor
iret
inc
shl
pop
loop
mov
pop
jb
addl
es
jmp
ds
shl
sub
and
sahf
int3
sbb
pop
adc
jno
std
out
or
popl
pop
mov
sbb
enter
push
jae
in
lds
cmp
mov
leave
or
mov
pop
xchg
inc
pusha
and
enter
into
lcall
pop
dec
pushf
mov
xchg
mov
xor
cwtl
lock
filds
in
imul
xor
mov
mov
dec
pushf
pinsrw
shrl
dec
scas
xchg
shll
aad
aam
push
dec
das
adc
mov
adc
xor
sbb
lret
sub
lcall
mov
or
out
nop
inc
cmp
pop
je
mov
mov
xchg
sbb
inc
scas
lods
add
sbb
lods
enter
sub
dec
xlat
in
testl
sub
sahf
bnd
fsubrl
rclb
xchg
add
pop
adc
call
mov
int
daa
pop
gs
cmc
andl
fisubl
push
sub
sti
xchg
mov
lcall
cmp
mov
pop
mov
push
out
or
jp
mov
cmpsb
stc
lret
or
es
dec
jnp
outsl
pop
sub
daa
je
popa
ljmp
sbb
insl
out
push
mov
aad
inc
cmp
out
pause
lahf
dec
mov
pop
or
xor
push
ss
cmp
mov
fldenv
and
xchg
mov
push
pop
pop
sbb
sbb
fldt
cmp
out
incb
mov
push
xchg
push
adc
arpl
mov
fsts
xor
pop
push
and
in
fdivrs
xchg
push
jne
stc
mov
nop
mov
fld
lret
adc
les
roll
test
add
int3
outsl
lds
pushf
pop
data16
orb
jne,pt
insb
push
divl
leave
fs
jbe
inc
int
push
mov
jmp
push
shlb
mov
adc
lret
lret
xchg
rolb
sti
push
lcall
aam
fidivrs
cmp
mov
xchg
mov
fwait
cmp
pop
dec
sub
dec
jge
rcrl
dec
popw
idivb
es
inc
leave
testb
push
pop
repz
loopne
jbe
xor
pop
add
pop
divb
mov
stc
stc
ja
call
out
xchg
mov
mov
fstp
pop
mov
pop
int3
sbb
mov
inc
xlat
repnz
fisubl
lea
mov
mov
fistps
imul
jbe
ret
dec
rorb
or
and
icebp
or
insb
mov
addl
mov
mov
mov
sub
dec
je
out
stos
cwtl
sbb
cmc
insl
fildl
fs
rcrl
fists
xorl
ds
in
and
in
xor
push
push
lds
mov
mov
mov
ret
xlat
and
sub
dec
xchg
out
push
pop
xor
out
addb
outsb
mov
sub
and
xchg
or
mov
in
std
push
cs
outsb
gs
les
cmp
ret
xor
jmp
rcll
into
iret
add
aam
or
dec
xor
pop
pop
and
fwait
cmp
mov
push
cmp
outsb
lea
inc
data16
out
sbb
push
aas
out
rcrb
pop
push
sub
jle
loopne
data16
pop
sub
out
inc
push
repnz
ret
imul
mov
push
pusha
lea
push
mov
lcall
enter
cmp
out
pop
push
dec
je
rclb
mov
jmp
out
imul
in
xor
push
insb
mov
sub
pop
or
add
inc
sbb
xor
dec
loop
adc
jp
arpl
jne
add
mov
mov
repz
sbb
mov
add
and
inc
fisttps
aaa
out
aam
loopne
mov
cmp
in
mov
mov
mov
add
ss
add
out
push
aad
adc
movl
in
lret
pcmpeqd
and
in
mov
lods
mov
stos
sub
js
or
push
inc
test
or
mov
cld
test
sbb
int
add
jle
bound
std
push
cmp
or
je
sti
adc
aam
stc
nop
jg
sbb
pop
stos
xor
imul
movsb
pop
xlat
add
sub
lahf
xchg
cli
js
mov
jge
mov
jecxz
sub
xor
jecxz
push
add
adc
into
or
or
inc
adc
xchg
mov
rcrb
mov
mov
mov
mov
xchg
sub
sub
mov
xchg
in
je,pn
xchg
jp
cmp
xlat
lret
adc
sub
pushl
xor
movsb
inc
adc
inc
inc
mov
fidivrl
out
repz
ret
sbb
pop
lds
aas
sub
stos
out
lods
scas
cmp
ds
or
xchg
lcall
add
pop
inc
mov
and
push
mov
ss
mov
push
stos
outsb
addr16
adc
inc
cwtl
scas
les
out
mov
gs
mov
xchg
addb
test
push
ss
sar
outsb
scas
rcll
dec
and
imull
test
jb
jbe
push
dec
inc
mov
inc
int3
fidivrl
stos
cmp
shl
push
test
push
das
jmp
push
add
xor
orb
push
cmp
push
or
icebp
bound
inc
xchg
sbb
mov
jle
sarb
in
xor
leave
in
lea
pop
add
pop
or
inc
es
repz
out
push
aam
ja
sub
mov
gs
inc
xor
aaa
nop
fstl
mov
pusha
pop
testl
cmp
or
ss
int3
repz
out
hlt
push
adc
pop
lret
jbe
push
pop
add
mov
cmp
imul
cmp
scas
imul
mov
mov
scas
jge
loopne
push
add
lret
mov
pop
lret
in
ljmp
insb
scas
ss
xor
fnsave
rorb
cmp
clc
popf
fadd
and
dec
ja
pop
and
and
loope
and
pop
das
out
push
fcoms
outsb
mov
imul
inc
cmpb
bound
xorb
cs
mov
xor
fistpll
inc
mov
or
insb
out
add
imul
icebp
arpl
add
neg
andl
dec
jno
adc
inc
imul
xchg
je
mov
sar
add
jle
xchg
adc
and
push
sar
adc
dec
in
imul
in
mov
xchg
mov
mov
push
cmp
mov
gs
dec
jo
in
popf
cmp
and
dec
sbb
lock
in
jne
aaa
sub
cli
jg
ss
jne
cmp
mov
mov
xor
test
pop
and
insb
aam
mov
mov
inc
xor
and
jno
xlat
shll
push
enter
repz
jbe
and
out
xchg
jmp
cmp
ljmp
sub
inc
jmp
dec
popf
fcomps
divl
les
imul
icebp
int
lods
pop
jmp
adc
xchg
mov
repnz
sbb
fists
incl
push
enter
and
lods
test
xor
xor
lds
jmp
outsb
fs
mov
stc
lret
xchg
mov
scas
xchg
xlat
imul
insl
imul
lret
sbb
enter
mov
jbe
add
ds
fimuls
mov
cmpsb
repnz
shll
and
push
jmp
mov
inc
shlb
dec
call
xor
push
mov
fucom
mov
cmp
mov
sub
scas
dec
or
gs
lods
pop
ficompl
in
ds
out
scas
or
push
fldcw
gs
ror
pop
out
sub
imul
mov
sahf
scas
cmpsb
scas
lds
loopne
push
add
nop
xorb
cmc
add
imul
xor
pop
lea
cmp
add
pop
ret
xor
dec
sub
dec
sub
or
out
arpl
dec
mov
jb
dec
xchg
xor
or
jnp
imul
int
cmp
fwait
or
jmp
fisttpl
mov
sbb
imul
int
cmp
fwait
or
jmp
fisttpl
mov
fwait
lea
std
jnp
jmp
pop
int
cmp
fwait
or
jmp
fstpt
cmp
or
jnp
imul
dec
ret
add
jae
adc
and
xor
or
out
xlat
roll
jp
jecxz
cmc
xchg
jno
inc
push
push
inc
and
xor
loope
icebp
out
xlat
rol
mov
xchg
xchg
repz
ja
inc
and
inc
and
daa
add
pop
loope
icebp
out
jg
lds
jns
lahf
popa
test
add
or
inc
pusha
pop
dec
and
pop
xchg
div
mov
adcb
loopne
jb
dec
xchg
add
sub
push
lcall
lea
pop
or
in
adc
mov
sbb
fcoml
ss
in
push
jmp
loop
int
jmp
or
in
popa
cli
and
pop
fisubrl
daa
adc
pop
es
icebp
mul
cmp
iret
popa
insb
xchg
js
mov
mov
adc
sbb
push
setb
loop
lahf
xchg
xchg
and
ja
nop
push
inc
jb
pop
test
out
clc
sbb
icebp
pop
dec
push
std
inc
lock
jns
push
jnp
ja
sysenter
test
pop
push
ss
add
adc
rcll
mov
dec
xchg
pop
popa
icebp
jno
inc
inc
push
mov
xor
add
adc
movsl
mov
lods
xchg
lahf
jmp
hlt
loop
xor
and
and
push
insb
push
gs
cmpsb
mov
cltd
loop
fcom
xchg
cmp
sbb
cmp
xor
push
inc
imul
insb
xchg
mov
icebp
movsb
loopne
mov
adcl
push
inc
and
xor
add
adc
loope
icebp
out
xlat
rol
mov
xchg
xchg
xchg
jno
inc
push
push
inc
and
xor
add
adc
loope
hlt
xor
jmp
cs
int3
jbe
sub
ret
in
and
aaa
pop
xorl
outsb
daa
sahf
sub
frstor
push
mov
cmp
push
ret
call
shll
sbb
mov
cmp
out
add
insl
push
cli
in
lea
sbb
jno
or
add
add
outsb
lock
rcll
scas
xchg
sub
adc
fisubs
sbb
cmp
fs
xchg
sub
cmp
cltd
cmp
test
and
and
ljmp
mov
jp
pop
mov
push
adc
insb
adc
xlat
jmp
mov
adc
shll
mov
movb
fsubrs
xchg
add
clc
cmp
fdivr
add
js
stos
scas
pop
movsl
leave
lcall
pop
sub
push
sub
xor
gs
sbb
in
dec
aad
jo
inc
dec
or
push
fidivrl
sbb
add
pop
int
push
lods
pop
adc
mov
stc
jo
push
dec
add
out
push
inc
sbb
mov
push
mov
lahf
bound
pop
sbb
xchg
popf
or
addr16
push
push
sbb
or
cmp
mov
inc
ljmp
loope
in
push
and
xchg
ljmp
push
mov
pop
inc
arpl
fistl
mov
aaa
stos
leave
psubusw
add
aaa
jae
xor
push
mov
mov
xchg
add
jle
ret
or
es
lret
insl
fnstenv
movsl
test
mov
jo
sbb
jecxz
inc
adc
dec
nop
imul
dec
sub
pop
pop
mov
mov
fists
in
xor
ret
aas
sbb
aaa
push
call
test
mov
icebp
popf
push
add
jnp
mov
add
pusha
mov
cmp
mov
or
xchg
dec
sub
mov
fstpt
test
pop
mov
lret
clc
hlt
pop
mov
sbb
scas
push
jo
movsl
mov
rcll
xchg
add
xor
cmp
lods
dec
mov
jmp
adcb
addr16
nop
pop
lea
in
xor
rol
in
cmpsb
or
xor
pop
xchg
jnp
fildll
or
inc
nop
pop
addl
cmpsb
mov
mov
fiaddl
ret
pop
loopne
cmc
js
sub
fstpt
leave
inc
out
push
xor
cmpsl
es
nop
add
jno
cmc
lock
sti
lea
fstl
xchg
fcoml
pop
ljmp
mov
sti
insb
data16
addr16
lret
aad
pop
mov
mov
pop
jl
jp
aas
sbb
into
ret
lds
push
fwait
cmp
mov
xor
add
mov
adc
rcrl
adc
outsb
mov
enter
iret
pop
lock
aad
dec
add
mov
xchg
push
xchg
stos
loop
hlt
or
add
xor
push
movsb
cmp
mov
scas
mov
aam
dec
stc
xor
fidivrs
or
lcall
mov
loop
je
idivl
mov
movsl
mov
shl
sbb
push
inc
dec
and
pop
add
test
or
pop
cmp
andb
mov
inc
pop
jmp
xor
mov
push
int
fcoml
mov
jno
divl
aad
movsl
inc
cld
lret
prefetch
or
filds
jbe
mov
xchg
adc
sbb
mov
push
jmp
dec
sti
sbb
insb
rsqrtps
add
mov
pop
xor
dec
cmp
cmp
mull
test
and
dec
inc
mov
imull
dec
das
fisttps
lret
movsl
popf
sub
rorl
inc
fwait
in
add
adc
pop
add
aaa
mov
push
test
pop
pop
mov
aaa
inc
pop
dec
adc
insl
pop
pop
sarl
pushf
hlt
mov
jmp
push
pop
pop
and
and
jbe
mov
insl
fistpll
jmp
std
sub
and
xor
dec
cmp
movsl
push
xlat
stc
pop
aad
cmpsb
gs
je
push
jnp
cwtl
in
in
loope
jge
jl
lods
lock
aaa
xchg
mov
ljmp
movsl
loope
push
mov
adc
enter
out
outsb
icebp
sbb
inc
out
in
daa
cs
call
idivl
fldl
mov
rclb
imul
mov
test
popf
daa
jo
stos
jo
ds
pop
in
lret
mov
xchg
enter
sbb
mov
sbb
cwtl
and
dec
dec
xchg
mov
inc
sub
inc
sbb
cmp
and
test
or
mov
xchg
jae
pop
cmp
mov
jns
push
loope
bound
adc
ja
andl
xor
mov
js
aam
adc
jnp
mov
inc
jmp
xor
xor
jo
aad
cmpsl
mov
loop
aad
enter
dec
xchg
pusha
sbb
xor
push
mov
lahf
out
inc
push
fdivl
mov
xor
mov
adc
loope
pop
rolb
out
insl
in
loope
stos
adc
xor
xchg
daa
scas
shrb
mov
xchg
push
mov
cwtl
cwtl
mov
jo
out
fistl
ss
std
out
fidivl
mov
push
pop
cmc
pop
out
aaa
loopne
mov
arpl
jl
jecxz
bound
mov
iret
mov
sbb
in
iret
cld
adc
aad
aaa
cmp
fsubs
sub
xchg
sbb
int
ljmp
loopne
mov
mov
or
icebp
sub
das
xchg
mov
mov
hlt
scas
pusha
jle
filds
popf
mov
fdivl
pusha
lods
jb
xlat
in
xlat
cmc
adc
mov
xchg
scas
loope
mov
and
lods
fbstp
aaa
rorb
pop
test
jno
bound
dec
stos
xchg
inc
add
aam
out
nop
loop
push
cmp
mov
inc
push
dec
mov
xchg
das
xchg
mov
mov
movsl
iret
add
orl
and
pop
sub
xor
jmp
push
xor
xchg
pushf
push
ss
mov
shr
movsb
cmp
xchg
add
jno
mov
inc
fwait
xchg
or
push
pop
xor
jbe
and
push
movsl
test
imul
cmp
lahf
or
sub
pop
outsb
cmp
cmpsl
mov
sbb
popf
adc
jp
pop
push
xor
lahf
jl
aas
nop
cmp
cmp
sahf
dec
es
loope
insb
jmp
test
lock
mov
aas
fs
pop
xchg
xlat
sahf
mov
xchg
leave
ljmp
out
mov
mov
loopne
add
lahf
insb
jns
out
sbb
push
cmp
lahf
add
lods
pop
mov
scas
mov
clc
push
xchg
mov
decb
or
clc
mov
std
repnz
ret
test
cld
adc
sbb
sub
jle
adc
vandps
jne
ficoms
movsl
in
push
pusha
xchg
inc
insl
inc
shll
sbbl
mov
nop
sarl
das
mov
adc
ljmp
insb
pop
pop
xchg
in
mov
push
inc
subb
sbb
scas
add
cltd
xchg
dec
dec
xorl
mov
adc
leave
and
push
xchg
ret
lea
cltd
popf
outsl
cli
adc
out
mov
repnz
ficompl
in
outsl
adc
add
fistl
sbb
mov
xor
repz
data16
out
pusha
mov
cmpsl
adc
aam
pop
int3
shlb
mov
add
or
push
imul
es
aad
andl
adc
sub
testl
sub
mov
fs
adc
push
mov
dec
into
add
xchg
sub
scas
mov
iret
cmp
fldenv
stos
imul
roll
xor
mov
push
aam
fs
jns
cmpsl
push
and
pop
sbb
into
dec
lods
lea
pop
push
adc
cwtl
movsb
cltd
xchg
mov
inc
fs
lret
test
out
in
cmc
mov
sub
jmp
mov
and
aaa
loop
fidivs
aam
pop
lret
jne
jle
add
mov
cmpsb
push
xchg
push
sarl
lods
or
fsub
stos
push
in
sbb
push
cwtl
test
dec
push
xchg
enter
mov
ss
popa
xor
xchg
push
addl
mov
shl
shlb
cmp
pushf
repnz
xchg
repnz
fnstcw
lret
imul
adc
pop
cmp
dec
loop
in
push
cld
mov
jmp
aam
ret
adc
shll
aad
icebp
cmp
lock
mov
iret
mov
ja
dec
cmp
cwtl
jp
or
pop
pop
cmp
daa
mov
rcll
ret
or
push
and
mov
dec
mov
enter
mov
xor
repz
stc
sub
cld
cwtl
mov
into
inc
dec
rcrl
lret
and
or
inc
or
push
in
lds
lds
andb
push
js
cmp
jo
add
mov
push
cmp
cltd
and
mov
pop
clc
add
call
push
add
int
stos
sub
and
test
es
mov
insb
dec
icebp
out
addl
ficomps
cld
ret
ja
in
shrb
mov
and
sar
lret
ds
out
mov
outsl
fcmovne
lret
push
out
adc
pop
push
data16
test
je
outsb
inc
fwait
jne
aaa
mov
adc
scas
dec
jl
insb
cs
pop
mov
test
push
pop
add
ret
inc
xchg
pop
idivb
sbb
std
fwait
push
in
push
xchg
and
mov
cwtl
jno
jg
pop
pop
enter
and
pusha
out
addr16
adc
xor
dec
nop
or
add
mov
addr16
pop
mov
cld
jp
dec
mov
lds
sub
call
mov
mov
dec
icebp
jb
push
movsl
pushf
int
xor
stc
adc
xchg
cmp
pushf
jmp
out
in
push
ljmp
mov
fucomp
sbb
adcb
stos
xchg
jns
mov
push
mov
fwait
sbb
mov
sbb
test
testl
dec
xlat
xchg
jl
out
mov
shrb
bnd
dec
cmp
adc
mov
push
mov
xor
xchg
popf
inc
cld
fcmovb
fcoms
mov
push
dec
aas
or
or
dec
xor
xor
cmp
out
xor
push
mov
fstps
inc
inc
pop
clc
push
int
jl,pt
icebp
pop
adc
fldl
sub
div
stos
xchg
adc
push
aaa
mov
std
sahf
jbe
sub
imul
adc
lahf
add
or
adc
sub
pop
call
mov
inc
lcall
push
sbb
sub
jp
jns
push
sbbb
ret
push
pop
add
rol
fiaddl
std
dec
inc
pop
iret
repz
fwait
jp
mov
push
js
jo
ljmp
cltd
aam
popf
mov
cwtl
shll
out
je
jle
sbb
pop
inc
cmp
out
mov
sbb
cmpl
pop
lahf
push
cmpsb
sub
push
repnz
jle
inc
jo
adc
daa
int
stos
xchg
adc
nop
or
mov
cld
imul
push
cli
adc
out
xchg
pop
dec
adc
xor
or
in
jmp
mov
loopne
dec
push
jns
mov
js
jg
or
fadds
sub
add
outsl
fisubs
push
push
mov
pop
lret
cwtl
mov
or
and
inc
je
dec
jl
add
das
jl
mov
push
sbb
sbb
int
std
ja
leave
loop
pop
icebp
add
push
sub
and
out
dec
stos
sahf
mov
adc
cmp
repnz
mov
in
pop
mov
cmp
lret
nop
dec
or
xchg
arpl
je
xor
adc
int3
nop
test
mov
add
jnp
inc
rol
shrl
repnz
ljmp
cmpsb
add
pop
and
push
adc
cmp
dec
mov
popf
lret
je
mov
and
shll
pop
jge
dec
jecxz
sbb
dec
aas
cvtps2pi
addr16
or
adc
data16
ljmp
aam
mov
rcrb
stos
xchg
xor
and
mov
push
inc
sbb
xor
pusha
repnz
das
sub
lds
mov
cmp
push
out
ljmp
in
sub
pop
jmp
sbb
pop
push
lods
inc
pop
cmp
add
cmpsb
fstp
fisubrl
loopne,pt
sahf
aam
xchg
xchg
push
adc
pop
cld
pop
sbb
mov
sub
testb
iret
es
jmp
ret
cwtl
pop
js
mov
lods
out
int3
fistl
dec
xchg
stos
lret
lret
pop
imul
cmp
xchg
in
sub
push
push
int3
outsb
stos
dec
and
push
jge
mov
adc
fiaddl
and
out
pop
adc
cltd
mov
and
ret
cwtl
leave
mov
shll
pop
subb
sub
leave
icebp
lea
mov
int3
sub
adc
mov
inc
lret
mov
mov
inc
mov
cmc
inc
nop
lret
jb
xor
lcall
aam
push
mov
mov
sub
insl
lods
call
andl
lea
sbb
and
pop
push
fwait
dec
sub
add
inc
or
mov
fdivl
dec
push
sub
pop
cmp
push
imul
cmpsl
test
mov
jo
clc
rolb
mov
fstps
inc
out
pusha
shrl
ljmp
cltd
sbb
inc
scas
popa
movl
or
push
mov
mov
mov
iret
out
lret
jo
xor
sbb
and
mov
stos
inc
pop
jae
outsl
in
mov
sub
mov
sbb
addl
pusha
mov
aam
pop
pop
cs
sbb
mov
lahf
sbb
xchg
cmpsl
mov
sets
in
js
sub
jge
lcall
add
pushf
sarl
mov
leave
shll
ret
jns
xor
fs
mov
push
pop
sub
push
mov
inc
scas
pop
addr16
mov
les
push
nop
nop
stos
ja
mov
sub
imul
lock
jnp
imul
xchg
stos
fsincos
mov
lock
push
mov
ror
mov
push
add
orb
dec
orb
adc
xchg
lds
or
stos
and
mov
sub
nop
sub
mov
iret
push
sahf
add
sub
or
adc
add
xchg
das
fisubs
pop
mov
aad
push
sti
mov
repnz
lock
mov
jmp
mov
xchg
push
xchg
cmp
popa
cmp
insb
inc
nop
jge
fisubl
xor
cmp
cmp
jbe
je
cld
pushf
jne
stos
test
fdivs
enter
icebp
clc
insb
xchg
inc
xchg
lds
ljmp
push
enter
in
push
dec
sbbb
repnz
mov
jb
mov
mov
xor
les
clc
sbb
mov
jl
mov
mov
ds
js
clc
lahf
aaa
hlt
pop
push
xor
pop
jecxz
xor
push
or
push
mov
repz
cld
cmp
pop
pop
insb
sub
mov
xchg
and
pop
mov
push
xchg
dec
fistpll
enter
in
jnp
push
mov
push
xor
xchg
mov
pop
cmp
enter
push
shrb
cmpsl
push
mov
sbb
aaa
call
out
and
popf
outsb
or
add
mov
in
add
dec
push
outsb
push
inc
inc
xor
jbe
jp
sub
les
hlt
jns
jge
lret
push
fwait
cmp
xlat
gs
lock
test
mov
popa
dec
popa
ret
ret
dec
lcall
out
add
insb
push
mov
clc
loopne
lods
sbb
lret
imul
xor
stc
pop
xor
mov
nop
les
mov
jg
sub
mov
cmc
rorl
sub
ja
icebp
mov
inc
mov
je
in
xchg
xchg
mov
inc
or
sub
and
mov
add
dec
imul
xchg
sub
andl
imul
jecxz,pn
sbb
fidivs
sub
mov
jmp
ds
ficoms
movsb
dec
loop
aas
inc
ja
test
sbb
jb
rorl
or
and
ret
jo
dec
jmp
pop
in
clc
test
jnp
nop
pop
lret
out
xor
inc
mov
mov
roll
movsb
xchg
push
and
sbb
jmp
mov
sub
jl
push
cmc
cmpsl
addr16
xor
pop
sub
cmpsl
daa
jno
test
repnz
inc
push
sbb
mov
jmp
dec
pop
xor
fistl
pop
test
xchg
mov
out
mov
mov
cmpsb
mov
lock
js
loopne
mov
inc
sbb
mov
xchg
in
in
das
pop
loopne
aam
je
aas
xchg
mov
sub
dec
add
test
notl
jl
rcrb
lcall
out
mov
pop
addr16
push
xchg
jae
and
dec
es
sbb
sbb
inc
test
rcrl
orl
pop
sbb
insb
fldt
lcall
popf
lods
pusha
push
inc
cmc
nop
mov
push
add
mov
out
gs
jo
je
sbb
add
stos
push
inc
jbe
xchg
sub
in
add
into
cmp
add
pop
mov
jp
in
enter
sbb
jmp
pop
cmp
ja
mov
mov
ljmp
call
jecxz
inc
loope
push
sbb
jnp,pt
mov
popf
popf
cmp
cmp
shrl
mov
outsl
test
xchg
inc
pop
arpl
inc
xchg
das
lock
and
in
jne
cmp
add
andb
mov
xchg
and
scas
aas
daa
mov
lods
int
out
xchg
push
fists
out
xor
shlb
mov
lcall
fidivrl
lods
repnz
cltd
xchg
mov
jbe
orb
jns
push
inc
or
mov
cmpsl
dec
lock
stos
cmp
xlat
pusha
and
pop
pushf
push
shl
cmp
xchg
cld
cltd
clc
ljmp
pushf
xchg
jp
cwtl
xor
inc
jmp
mov
and
sbb
dec
testl
jmp
cs
add
dec
aad
ret
imul
sbb
mov
sbb
jno
loope
mull
fsubrs
xchg
popa
add
in
push
int
or
cmp
popf
mov
dec
in
push
shl
mov
outsb
dec
pop
adc
cmp
push
push
xchg
mov
push
cmpsb
pusha
call
push
call
xchg
pop
inc
es
cmc
mov
mov
dec
push
lahf
pop
mov
fldl
add
in
mov
cmpsb
xor
sbb
mov
push
cmp
xchg
out
sub
mov
jae
das
mov
out
dec
pop
or
push
clc
ret
dec
sub
fbld
rorb
lcall
jb
push
or
aas
jo
negb
cmp
dec
cmp
les
call
xchg
jp
fidivl
xchg
mov
mov
add
movsl
cli
mov
sbb
pushf
jecxz
movsb
scas
jg
sbb
pop
mov
xchg
and
adc
aaa
jge
sbb
xor
jmp
js
inc
ja
aad
add
cs
inc
add
loopne
movsl
dec
mov
sbb
cli
xchg
aaa
and
int3
call
je
loopne,pn
divb
cli
mov
and
adc
sarb
arpl
cmp
lods
pop
cvttps2pi
aam
mov
jl
mov
mov
pusha
mov
lcall
js
push
in
loopne
dec
call
loope
mov
bnd
and
fs
stos
mov
mov
adcl
push
inc
and
xor
add
adc
loope
icebp
out
xlat
rol
mov
xchg
xchg
xchg
jno
inc
push
push
inc
and
xor
add
adc
loope
icebp
scas
shrl
jno
scas
jno
inc
push
push
inc
and
xor
add
adc
loopne
lock
xlat
rol
mov
pop
xchg
xchg
jno
jmp
push
xor
mov
clc
in
mull
cmpsl
dec
lds
sub
xchg
and
add
daa
jne
ljmp
mull
cmpsl
cmc
mov
xchg
xchg
mov
cmp
es
aaa
addr16
push
pop
inc
pop
lods
add
popf
mov
int
filds
xor
xor
cmp
push
daa
dec
sub
lock
and
ss
push
bound
adc
mov
das
inc
pushf
push
aad
test
push
or
sbb
xchg
lret
ret
cli
fcoms
call
into
mov
rcr
jle
into
out
cwtl
xor
push
cli
aaa
shlb
iret
push
sub
cmp
lahf
pop
and
pop
cmc
mov
js
xchg
inc
data16
fcmovnb
ljmp
push
stos
pop
push
sbb
cli
pop
out
dec
icebp
pop
xor
sbb
inc
leave
hlt
fiaddl
adc
push
sbb
sbb
rol
insl
sub
pop
jg
inc
js
mov
dec
into
ljmp
pop
push
adc
mov
mov
test
iret
in
aad
fsubl
or
sbb
insl
cmp
inc
mov
scas
loopne
neg
test
mov
and
and
xor
adc
outsb
cmp
stos
fcoml
ljmp
ret
inc
and
pop
pop
add
push
xor
icebp
test
hlt
mov
xchg
xchg
lds
ja
inc
adc
aaa
gs
push
pop
inc
out
mull
cmpsl
cmc
mov
xchg
xchg
lds
ja
inc
adc
aaa
gs
push
pop
inc
out
push
mov
adc
xchg
pop
jnp
sbb
fldenv
shll
inc
jnp
cmp
or
mov
movsb
jne
pop
cmc
add
btr
mov
psubw
pop
jle
mov
inc
inc
push
aaa
fldl
dec
sub
and
xor
in
mov
inc
add
xor
sti
test
nop
mov
lret
inc
mov
cmp
pop
xchg
lret
fisttpl
mov
jne
aas
add
arpl
mov
in
repz
stos
sbb
imul
ret
jp
push
ds
pop
sub
scas
fidivl
adc
imull
push
inc
test
mov
shrb
xor
lret
and
sub
arpl
push
imul
inc
mov
pushf
ljmp
pusha
add
popf
out
inc
inc
add
mov
dec
mov
cwtl
mov
pop
imul
xor
mov
lahf
mov
adc
in
sbb
or
mov
das
jae
mov
pusha
inc
leave
test
shlb
lea
popf
jnp
adc
mov
in
aad
jno
adc
sub
sti
push
dec
shll
stos
push
cmpsb
xchg
adc
inc
push
pop
lcall
pop
inc
xchg
call
cmp
push
and
sbb
inc
adc
lods
inc
mov
mov
jne
imul
xchg
dec
aaa
add
lret
mov
faddl
test
adc
add
pop
mov
add
das
cltd
les
movsl
mov
and
repnz
lock
popa
popf
lret
insl
inc
std
mov
mov
loope
mov
jae
out
push
push
testb
mov
scas
shrb
in
sbb
pop
lret
dec
cmp
inc
das
push
lret
lea
icebp
fistps
lock
push
lret
xor
outsl
or
pop
mov
ja
lret
jecxz
pop
jecxz
cmp
sti
test
arpl
fimuls
clc
push
jno
mov
xor
mov
xchg
ljmp
add
test
xor
not
mov
mov
push
push
inc
xchg
arpl
or
out
and
xchg
fisubs
push
or
ja
xorl
int3
cmp
push
cmpsb
sbb
mov
lods
mov
movsb
fucomip
hlt
dec
mov
push
in
xchg
mov
pop
or
enter
xchg
and
std
add
or
test
dec
mov
sbb
popa
pop
push
cwtl
and
mov
mov
xor
mov
stc
xor
pushl
or
sbb
push
push
fdivl
mov
inc
sbb
push
popa
mov
inc
cmp
dec
jl
cmp
imul
jae
or
out
lahf
mov
cmp
test
int3
mov
lcall
fstpl
xor
inc
and
or
jb
jmp
sahf
mov
or
outsb
call
fimuls
sub
aaa
jns
fs
cld
movsl
js
jnp
mov
or
bound
lea
fwait
ds
or
push
adc
rcrb
mov
push
movsl
ja
sti
jg
add
pop
jne
xor
jnp
sbb
push
jne
xor
or
pop
add
xchg
mov
sub
mov
push
add
dec
sar
test
mov
adc
fsubp
mov
push
lcall
mov
push
scas
jg
sub
out
push
fs
movsl
pop
lcall
addr16
mov
pop
inc
cmp
jb
dec
pop
inc
lds
inc
cmp
orb
incb
and
sub
inc
adc
fdivrl
mov
sbb
popf
push
aam
sbb
scas
adc
rcr
and
xchg
ds
clc
dec
push
sub
sub
sbb
push
inc
and
scas
cwtl
adc
and
cmp
cltd
xor
pop
stc
and
ljmp
sbb
out
nop
add
pusha
ljmp
jp,pt
and
and
out
int3
xchg
and
cmpsb
push
mov
mov
popf
dec
sub
jnp
push
mov
mov
mov
xor
fwait
stc
dec
cmpsl
icebp
aad
shll
lret
xor
pop
or
jnp
add
jg
movsb
jns
cmp
cs
mov
jp
scas
push
or
lahf
xlat
clc
push
aam
and
fisubrl
scas
adc
test
data16
mov
jo
inc
movsb
or
jp
ret
roll
jbe
fldt
cld
roll
or
hlt
push
or
add
cmpsb
mov
inc
idiv
orl
clc
testl
inc
arpl
movsl
fcmovb
rolb
je
xlat
movsb
sub
aas
fnsetpm(287
or
xchg
mov
inc
inc
inc
mov
stos
push
jbe
out
aaa
and
cmp
bound
add
mov
outsb
cmpsl
cli
pop
outsb
add
rcrb
fsubl
cld
cltd
xchg
stos
bnd
mov
inc
inc
xor
pop
push
nop
imul
pop
daa
mov
aad
jns
xchg
or
nop
mov
cltd
in
jb
or
dec
and
adc
pop
dec
pop
insb
int3
push
dec
mov
dec
ret
mov
xchg
hlt
jnp
mov
ja
leave
mov
sbb
push
sahf
xor
or
cmp
decb
and
hlt
lret
nop
mov
mov
cmp
xchg
in
sub
loop
ret
adc
roll
push
repz
and
add
test
or
repz
xchg
fcoms
inc
and
loopne
not
dec
rorl
out
add
push
inc
sbb
enter
inc
int3
inc
jno
arpl
cli
dec
repnz
add
inc
fwait
loop
xchg
stos
mov
out
cmp
out
mov
cmp
xlat
mov
mov
mov
mov
mov
dec
test
mov
in
jmp
lcall
mov
cmp
arpl
subl
xchg
push
add
fisttpll
mov
push
push
shr
mov
mov
jg
arpl
adcb
enter
inc
pusha
and
lea
mov
fdivs
mov
sub
ret
insl
shll
pop
ret
shrb
in
push
in
out
sbb
dec
sahf
pop
or
sub
push
and
xor
mov
cs
aaa
call
and
mov
or
sbb
mov
jle
addr16
and
inc
shrb
outsb
or
mov
fisubl
dec
xor
push
lods
pop
daa
sbb
das
sub
pop
and
lcall
push
fildl
sbb
or
pop
outsb
sub
pop
jle
imul
cmp
xor
add
jb
mov
xchg
cltd
jns
call
sub
loop
stos
or
fsub
test
pop
cld
adc
dec
dec
es
les
jle
pop
imul
and
inc
or
mov
add
sub
int3
mov
mov
iret
loop
mov
inc
int
fsubs
inc
andl
fsts
leave
stos
mov
popw
clc
sub
negb
adc
push
jl
xchg
mov
cltd
dec
out
push
mov
mov
xor
imul
xor
rclb
lcall
sbb
or
dec
insb
xchg
cmp
popa
jae
adc
sti
cwtl
push
mov
mov
jno
enter
jo
lds
pop
bound
loopne
mov
xchg
push
adc
push
mov
mov
mov
dec
xor
scas
jbe
pushf
negb
shr
dec
sbb
scas
pop
sbb
unpckhps
adc
sti
iret
xor
mov
stos
and
fsub
scas
into
sbb
adc
mov
jg
push
out
add
push
loop
mov
pop
or
ret
lock
pop
clc
cmp
movsb
pop
push
dec
inc
lds
pushf
pusha
xchg
das
add
mov
out
adc
push
inc
loope
and
es
cmp
in
ret
testb
xchg
outsl
and
mov
and
and
mov
mov
push
xor
adc
scas
mov
ret
inc
push
xor
leave
loopw
loop
insb
in
fstps
sbb
test
adc
out
xor
mov
sbb
dec
add
mov
mov
xchg
or
sbb
enter
cli
pop
in
cli
es
pop
cs
xchg
pop
test
rcr
sbb
and
pop
stos
and
cmp
mov
push
mov
mov
ljmp
xchg
mov
repz
nop
test
add
sbb
int
int3
pop
push
and
xchg
cmp
jno
fstpl
mov
mov
mov
jnp
outsl
pop
into
scas
add
mov
add
daa
xor
stos
adc
sbbb
sbb
or
aad
int3
push
jl
int
jle
mov
std
xchg
addr16
push
and
inc
sub
mov
mov
icebp
test
sbb
xchg
jmpw
pushf
in
ja
clc
xor
out
out
inc
nop
enter
sysexit
xchg
push
inc
mov
incb
fdivr
fs
test
jmp
paddsb
mov
cmpsb
out
dec
fwait
test
cmpsb
fwait
adc
stos
repnz
inc
cltd
cmp
cli
and
inc
push
lcall
insb
arpl
sbb
popa
sbb
test
mov
fucomi
add
add
jle
mov
dec
shl
fidivl
adc
mov
mov
adc
inc
clc
pusha
xor
pop
in
stos
xchg
in
decb
mov
cmp
inc
loopne
ret
pop
outsb
in
and
out
sbb
insb
dec
inc
cmc
rorb
jo
arpl
les
in
jmp
cmpl
push
dec
sbb
mov
cwtl
std
inc
xchg
test
xchg
cmp
subb
icebp
xor
int3
jae
pop
repz
cld
ret
dec
and
arpl
push
subb
push
insb
dec
aad
cmpsb
jno
imul
cltd
movsl
xchg
lret
or
imul
jle
add
subl
daa
mov
stos
scas
cli
test
nop
inc
aad
ficoms
test
scas
iret
test
adc
xchg
fisttpl
cmp
not
xor
andb
mov
inc
frstor
mov
scas
push
add
pop
mov
negb
push
pop
inc
push
in
fstpl
push
cli
sub
push
sub
int3
imul
fmul
xor
std
xchg
cmpb
frstor
mov
mov
jg
adc
out
mov
cmp
adc
xor
out
out
scas
loop
data16
dec
adc
pushf
jl
xor
pop
jnp
jge
and
xor
mov
jg
jne
inc
jae
cltd
bound
and
popa
xchg
cltd
enter
les
jb
mov
pop
cmpsl
cs
outsb
lods
pop
iret
icebp
shlb
loope
dec
repnz
pop
movl
adc
add
movsl
xorl
add
mov
fdivrl
sbb
aam
sbbb
sbb
or
sbb
pop
sbb
sti
loope,pn
jp
mov
std
std
out
add
iret
dec
jbe
and
lret
ljmp
push
fnsave
cmp
add
enter
cmp
xchg
lea
push
ja
lods
movsb
icebp
inc
lods
jge
mov
es
and
xor
sub
sbb
out
mov
sub
scas
lahf
vpshld
adc
xor
xchg
and
popf
icebp
jbe
cmp
push
leave
jno
push
insb
out
cmp
ja
ret
xor
cmpsb
test
jae
fsubrs
push
or
mov
dec
ljmp
sbb
cmp
clc
in
rorl
sbb
in
shll
sub
add
adc
xchg
pusha
mov
mov
sbb
or
push
shll
inc
rclb
push
in
pushf
stos
data16
mov
pop
icebp
or
mov
mov
jle
jnp
int
xchg
pop
xchg
mov
rcr
and
fstpt
push
fbstp
cmp
dec
popf
jne
mov
jge
shll
movb
or
in
aas
inc
testl
adcb
xchg
aas
mov
loopne
arpl
jbe
negb
pusha
fyl2xp1
push
lcall
mov
cld
fisttps
and
adc
daa
out
jp,pt
pop
into
jne
sub
ss
mov
push
nop
dec
lahf
fiaddl
pop
or
inc
cmpb
and
and
push
jge
aas
setp
fisubl
daa
jmp
sarb
push
xchg
fstpl
data16
mov
xchg
sub
push
sbb
imul
fistpll
je
shlb
jecxz
cld
jb
aam
adc
popa
rorb
and
mov
push
cmpsl
mov
jmp
test
pop
xchg
mov
lds
aam
shrb
in
and
sub
mov
sbb
insl
xchg
sub
jb
scas
push
pop
jae
cmp
cltd
fldcw
iret
inc
bound
lea
mov
pop
push
xor
xchg
jne
mov
adc
sbb
adc
pop
fbld
cld
cs
push
cmc
and
mov
add
ret
jne
and
scas
mov
daa
dec
lahf
jmp
or
clc
push
out
mov
test
push
and
cmp
cli
lea
icebp
jle
stc
out
jge
mov
js
push
jle
loopne
movsb
mov
xchg
jno
jp
add
cltd
xchg
popa
lcall
repnz
inc
rorb
xor
addr16
mov
insl
inc
dec
inc
add
pop
jl
sarl
les
mov
xor
lea
iret
fdivl
ljmp
lret
sbb
jle
mov
mov
std
and
pop
leave
rorl
pusha
xor
and
enter
xchg
push
pop
into
xchg
push
aaa
and
rcrb
adc
push
pop
test
push
imul
or
test
mov
cld
or
lods
push
mov
pop
ds
cmp
shlb
sar
push
lret
xchg
out
in
das
data16
adc
and
mov
loopne
pop
in
adcb
xchg
xchg
lds
sbb
sbbl
inc
fstl
shrl
fstl
fprem
lret
jbe
shlb
insl
dec
icebp
aas
lea
pop
in
stos
or
mov
adc
adc
push
leave
pop
pop
sub
lahf
aas
push
cmp
mov
mov
adc
sub
lea
or
loop
iret
jns
mov
loope
dec
mov
popf
iret
mov
mov
das
movsb
iret
pop
mov
jb
mov
mov
addr16
fsubr
jb
shrl
mov
mov
dec
dec
into
mov
jp
mov
add
mov
lret
loope
pop
hlt
ja
sbb
mov
cmc
jge
mov
inc
mov
punpckldq
cmpl
mull
stc
mov
xchg
cld
jne
pop
sbb
movsb
cwtl
in
adc
cltd
mov
aam
inc
mov
push
scas
or
dec
mov
lahf
cmpsl
xchg
outsl
mov
js
pop
lahf
mov
push
ret
sti
es
in
loope
inc
inc
jns
das
inc
in
loope
and
push
nop
pop
pop
sub
inc
js
jbe
nop
xchg
imul
daa
out
lock
xchg
dec
aam
lods
cli
dec
mov
dec
mov
fsubs
fiaddl
and
insb
adc
nop
sub
gs
mov
sbb
gs
and
sub
and
push
out
cvttps2pi
push
cmp
sub
dec
inc
pop
cltd
ret
xchg
mov
dec
aad
pop
scas
push
cmpsl
push
mov
int
enter
pop
lods
or
lcallw
cltd
inc
loope
pushf
add
xchg
xor
adc
mov
push
je
sbb
mov
adc
pop
stos
push
faddl
inc
in
seta
mov
or
cwtl
inc
jg
cli
bound
scas
cmp
xchg
cltd
xchg
ja
incb
mov
stc
mov
or
int
shrb
add
insb
sahf
popa
pop
cmpl
cmp
xor
cmpsb
cld
or
cmc
scas
int
inc
cltd
sbb
mov
jmp
out
insl
mov
frstor
pop
roll
fsubs
xchg
push
dec
idivl
dec
dec
jb
aad
out
lret
dec
shr
inc
in
in
loop
test
dec
popf
pop
test
and
jg
lret
imull
jecxz
sbb
jle
push
mov
pushf
mov
cmovp
outsl
sub
or
test
inc
les
dec
test
out
pop
test
mov
fisubrl
pop
jns
sbb
paddq
xchg
cmp
push
bound
xor
add
xchg
leave
in
inc
xor
int3
cmp
cmp
mov
imul
call
add
movsb
adc
stos
inc
cmpsl
adc
add
pop
mov
les
jb
jb
test
cmpsl
and
push
pop
fmuls
pop
xor
lds
or
mov
push
adc
test
pop
bound
push
inc
sub
das
lea
xor
out
push
adc
push
cli
out
lds
std
movsb
neg
test
sbb
jne
aas
jl
sub
mov
pop
push
pop
xchg
jae
adc
add
repnz
ucomiss
push
pop
ja
inc
pop
cmc
lods
lret
movsb
inc
lods
inc
incb
inc
movsl
sbb
pushf
js
movsl
subl
pop
fldenv
xchg
ss
pop
pop
pop
xchg
push
loop
ret
or
dec
xchg
hlt
ljmp
hlt
xlat
gs
data16
cmp
pushf
pop
pop
xor
jle
inc
adc
shll
xor
mov
and
push
mov
xchg
call
wbinvd
push
push
fdivs
shld
and
cmp
bound
or
out
mov
xchg
pop
sub
jne
cmp
loop
test
cltd
fsubs
iret
pop
in
jno
enter
jp
push
and
sub
jo
or
lods
sbb
pop
in
cmp
cmp
inc
mov
mov
mov
inc
sbb
or
xchg
testb
push
or
pushf
ret
lds
and
mov
arpl
incb
call
cmp
mov
ljmp
in
xor
and
pop
pop
jbe
jo
dec
dec
dec
cmpsb
cwtl
repz
out
cltd
cli
cmp
shlb
push
cmp
jmp
xor
in
hlt
mov
cmp
jne
jmp
push
adc
je
stc
add
fimull
push
js
mov
mov
xor
xchg
aad
inc
dec
daa
jle
mov
and
cli
jmp
lds
popa
xor
int3
add
jae
xchg
jnp
fisubrl
sub
dec
arpl
inc
enter
fcmovb
out
pop
in
add
sti
dec
xchg
push
bound
cltd
add
nop
pop
jnp
pop
xor
test
push
int3
jb
fsubr
pop
mov
mov
fcmovbe
pop
add
push
adc
cmpl
sbb
data16
push
inc
inc
fdivrl
ds
and
pop
lcall
push
sti
aam
mov
cmp
push
xlat
mov
cmp
sub
pop
ret
ficomps
movhps
jb
mov
popl
rolb
jmp
cmp
test
cmp
ret
decb
hlt
roll
adc
aaa
mov
cmp
push
rcr
push
push
mov
hlt
stos
shrb
in
movsl
out
push
out
push
mov
incl
loopne
jnp
mov
jmp
mov
stos
add
or
or
mov
adc
shll
cld
lret
jp
sbb
stos
into
ss
les
icebp
bound
mov
mov
sub
jb
clc
mov
cmp
imul
or
mov
inc
push
cmpb
cltd
pop
sbb
sbb
sub
xchg
popf
push
mov
mov
sbb
and
xor
jb
loop
sub
jmp
push
inc
ds
imul
or
lods
mov
mov
sbb
jmp
enter
add
xlat
sub
sub
mov
imul
and
push
pop
pop
xor
jb
push
ja
hlt
pop
and
xor
inc
movsl
mov
xchg
xor
mov
and
jl
mov
out
mov
dec
mov
aam
jl
mov
push
je
outsb
cmpsb
mull
push
rcll
cmp
adc
iret
jl
loop
push
cmc
mov
adcb
in
aad
lds
ja
inc
adc
aaa
gs
push
pop
inc
out
mull
cmpsl
cmc
mov
xchg
xchg
lds
ja
inc
adc
aaa
gs
push
pop
inc
out
movsl
cmpsl
xchg
xlat
test
cmc
mov
xchg
push
lds
ja
mov
push
add
jne
gs
push
incl
mov
mov
cmpsl
cmc
cmpsl
in
aad
add
in
adc
mov
cmp
dec
hlt
js
push
xchg
push
ljmp
clc
inc
jmp
xor
pop
in
hlt
js
push
mov
test
icebp
fsubs
clc
inc
call
xor
add
adc
in
hlt
js
push
mov
test
xchg
fsubs
xchg
and
cmp
popa
arpl
test
test
add
rcrl
sbbl
rclb
jno
sub
fsubrl
lods
rclb
in
in
scas
xchg
pop
out
or
or
push
and
mov
mov
mov
inc
xor
push
sbb
jp
pop
jbe
fsubs
clc
inc
sub
fisttpll
dec
loope
shrl
aas
movsl
sbb
je
cwtl
dec
mov
addb
cmp
adc
and
or
das
or
aad
xchg
xor
xchg
push
lret
ja
and
insb
test
loop
jp
jmp
aas
mov
sub
pop
xor
stos
enter
std
add
jmp
in
hlt
js
push
mov
test
xchg
fsubs
clc
inc
call
xor
add
push
sbb
cmp
adc
jp
pop
loope
loopne
adc
insl
clc
pop
nop
and
push
mov
jbe
jno
mov
mov
out
icebp
inc
sarl
mov
and
push
cltd
inc
out
aam
fldl
movsl
dec
cmpsl
pop
mov
or
fs
call
xor
add
adc
in
hlt
js
push
mov
test
xchg
fsubs
clc
inc
call
xor
add
adc
in
fsub
stos
inc
adc
push
or
rcl
fbstp
je
push
roll
push
aas
adc
inc
clc
cmpsl
scas
pop
test
pop
sub
pop
push
adc
int
rcrl
es
sbb
and
movsl
cmpsb
mov
lar
xchg
mov
xchg
or
cmp
andl
add
xor
data16
or
arpl
xchg
insl
add
sarl
xlat
sbb
mov
leave
or
ljmp
sar
fcmovne
int3
mov
pop
decb
mov
repnz
fildll
in
clc
sbb
jl
xchg
std
lods
cmpl
into
nop
mov
and
mov
and
push
notb
sub
in
cmpsl
sbb
jmp
faddp
cld
lods
xlat
inc
and
adc
mov
ret
dec
rolb
pop
jecxz
sbb
mov
xchg
aaa
jnp
mov
lahf
xor
loopne
outsl
sbb
imul
pop
or
mov
ret
or
xchg
xchg
bound
int3
dec
mov
or
sub
mov
pop
jnp,pt
dec
jp
lds
movsbl
jle
lds
repz
out
mov
in
jnp
cld
roll
in
movsb
add
adc
fs
xor
xor
pop
push
pushf
enter
and
mull
je
mov
or
add
inc
mov
push
inc
jns
jno
xchg
pop
and
mov
sbb
mov
mov
in
sub
push
shrb
sub
rcl
ljmp
dec
cmova
and
jbe
dec
insb
mov
inc
js
pop
adcb
push
dec
inc
push
jo
nop
jmp
ret
inc
ret
les
mov
pop
fnsave
jmp
pop
sub
imul
mov
aaa
xchg
rcll
jno
rorl
cmpsb
mov
cmp
jae
into
jae
and
pop
incl
daa
dec
inc
jb
mov
fists
shll
idivl
shll
mov
faddp
jecxz
or
push
jne
push
inc
mov
mov
inc
adc
sbb
sbb
lret
addr16
cmp
fiaddl
addb
jp
imul
push
stc
mov
sbb
in
subl
jge
shlb
or
cmc
jmp
in
inc
fnstsw
sbb
fbld
push
std
jg
movsb
adc
fists
repnz
adc
out
je
int3
push
mov
cmpsb
lret
das
arpl
jmp
mov
inc
push
mov
mov
jne
mov
imulb
std
sarl
lcall
xchg
or
sarb
out
into
lahf
add
xlat
add
push
mov
xchg
pop
loopne
movsb
gs
jo
sbb
jo
out
mov
sbb
in
cltd
lock
outsl
in
add
aad
stos
mov
add
cwtl
fisttpll
enter
das
dec
cmpsb
stos
inc
pop
jb
adc
mov
in
repnz
xchg
push
movsl
testl
daa
roll
leave
fneni(8087
sbb
push
repnz
mov
add
dec
inc
xchg
xor
pop
lods
dec
adc
ds
pop
jnp
mov
ds
test
scas
mov
sti
and
pop
or
pop
xchg
sbb
pop
pusha
fiadds
push
inc
jnp
or
test
imul
sahf
int3
in
jns
shrl
test
add
out
in
lock
repz
arpl
push
mov
in
adc
jmp
jl
mov
mov
sbb
inc
xor
mov
insb
dec
int
xchg
inc
and
and
xchg
out
adc
fadds
xchg
jne
and
jecxz
sahf
lret
aas
notl
or
adc
popf
jns
int
mov
lods
xor
scas
xlat
push
jne
movsl
xchg
stos
jge
pusha
mov
aaa
addl
xchg
fucom
daa
push
jp
das
push
sbb
cs
mov
imul
in
loope
cwtl
cli
and
adc
int3
gs
movsl
mov
imul
add
or
int3
xor
cmc
mov
cmp
pop
ss
pop
xor
outsl
xor
pop
jae
mov
or
cmp
dec
xlat
enter
repnz
cmpb
xor
xchg
and
ss
dec
ja
sbb
stc
cmpsb
std
imulb
addr16
sub
out
lret
adc
and
outsl
cmp
inc
mov
outsl
jecxz
adc
push
mov
and
adc
xchg
hlt
jp
out
mov
mov
cs
jbe
xor
ds
out
cli
ljmp
cmpsl
popa
outsb
mov
enter
pop
xor
xchg
pop
inc
or
int
push
clc
and
sarb
out
push
out
dec
mov
adc
pop
in
or
jecxz
jle
inc
fdivl
jno
xchg
enter
pop
push
ds
lret
nop
jb
pop
les
inc
cmp
dec
stos
xor
jmp
cmp
loope
or
popa
icebp
cmp
pop
cmp
lahf
and
sbb
aad
adc
aaa
out
pop
icebp
test
add
and
movsb
jl
std
ljmp
jl
int
lcall
es
addr16
int
cmpsb
and
add
test
test
push
jecxz
pop
int
and
jbe
fucomp
xchg
cmp
iret
jecxz
mov
mov
cmpsb
dec
push
jb
bound
mov
and
mov
iret
mov
testl
xchg
pop
shrl
jmp
inc
insb
inc
push
and
out
jp
push
sub
ljmp
push
pop
and
stos
std
pop
sub
cmpl
fldt
xchg
push
jns
push
daa
dec
fsubs
ds
fsubr
ds
push
inc
imul
lret
call
gs
jns
cmp
out
sarl
aam
and
sbb
mov
adc
sbb
jne
sbb
test
and
and
aas
fnsave
iret
lcall
pusha
push
mov
pop
adc
xchg
mov
mov
call
ret
and
out
mov
and
jmp
popf
jb
mov
imul
repz
mov
lods
and
lds
push
sub
sarb
push
call
ds
ljmp
lds
pop
push
stos
push
inc
and
insl
inc
aaa
mov
mov
inc
mov
stc
or
pop
inc
adc
inc
inc
push
xchg
mov
push
les
pop
ret
add
jns
xchg
pop
mov
mov
jmp
imul
cmp
insl
sti
dec
sbb
push
jo
adcl
mov
sub
mov
sbb
cmpsb
jle
lret
fildll
dec
ljmp
gs
lods
sbbl
pop
bnd
es
dec
xchg
dec
shrl
ja
push
mov
mov
jno
push
aam
jl
pop
fisubrl
pop
imul
jns
mov
test
ficoml
jo
bound
pop
repz
push
dec
pop
arpl
sub
sti
or
mov
adc
out
xor
jne
test
mov
inc
sbb
je
std
aas
mov
int3
mov
rorl
in
push
divl
xchg
ror
fcomp
movsl
fwait
push
sbb
adc
xchg
push
in
repz
mov
test
push
push
and
pushf
lret
adc
xchg
ja
fildl
rcl
imul
push
inc
imul
mov
or
cld
sbb
xor
pop
mov
mov
push
and
jns
push
insl
jge
jmp
push
push
sarb
push
inc
scas
daa
dec
push
xchg
jb
add
pop
out
aad
pop
mov
in
jl
mov
clc
sbb
scas
mov
jg
arpl
mov
push
popa
negb
inc
pop
add
scas
inc
repz
pop
jno,pt
push
rclb
push
ds
sub
mov
inc
fisttpll
dec
addr16
cmpb
pop
pop
loop
pop
out
pop
in
xor
ret
pushf
inc
push
xor
lock
stos
dec
ljmp
push
leave
and
loop
sbb
push
inc
dec
sbbb
ljmp
cs
jge
xor
pop
sbb
rcll
shlb
lds
inc
mov
shlb
jecxz
movsb
mov
or
adc
shl
cmp
pop
lret
aaa
sti
sub
add
pop
mov
or
pop
enter
and
dec
lds
fs
test
cmpsb
add
or
xchg
inc
jecxz
sarb
push
insl
pop
lret
pop
fsubr
adc
push
pop
inc
stos
aad
mov
stos
lret
fnsave
mov
push
call
divb
pop
dec
ret
dec
cmp
xor
pop
aam
pop
mov
es
clc
int3
adc
lret
xor
cld
out
mov
test
push
inc
mov
sub
adc
fcmovnbe
stos
dec
sbb
mov
jb
repz
les
leave
ja
stc
xor
add
add
rol
inc
lods
shll
mov
mov
jne
stos
je
mov
loop
cmp
pusha
xor
insl
lods
les
inc
xor
movl
pop
inc
jnp
das
mov
hlt
dec
xchg
push
rorl
cwtl
mov
pushf
add
insb
pop
rclb
pushf
push
mov
lds
into
mov
cs
adc
out
out
or
pushf
sub
sbb
fs
loope
mov
mov
ret
test
aaa
out
push
pusha
cmp
mov
cmp
cs
cwtl
test
test
lahf
lock
cmc
push
ret
xchg
adc
sbb
fidivrl
sbb
mov
inc
xchg
or
jp
pusha
dec
sub
mov
inc
repz
lcall
int3
aaa
jge
xchg
xchg
popa
jp
sbb
addb
pop
fiadds
std
mov
and
addl
push
ret
ja
xchg
jbe
inc
cmp
inc
test
add
cmp
popa
pop
mov
fld
aad
rcl
cltd
dec
or
add
push
adc
sarl
jae
pop
sbb
sbb
cwtl
dec
js
int3
sbb
stc
jne
sub
sti
push
jo
xor
inc
and
cmpsl
mov
out
inc
data16
insl
dec
mov
dec
dec
roll
aas
nop
cmpsb
test
jnp
test
gs
fs
dec
and
and
sbb
es
test
cltd
mov
pop
lock
xor
sbb
dec
sub
repnz
xchg
push
test
sub
cltd
subb
sub
mov
ja
mov
out
clc
xorb
sub
jl
adc
jno,pn
cmp
adc
push
xlat
xor
mov
push
or
out
repz
cmpsb
hlt
cmp
ret
shrb
ret
xor
pop
pop
subl
popa
shr
adc
hlt
mov
aaa
push
jne
ljmp
arpl
scas
daa
aam
ffreep
repz
fwait
mov
add
stos
cwtl
xor
pop
or
and
repnz
mov
mov
push
jge
inc
out
sbb
lock
add
dec
ds
or
xchg
xor
sarb
or
das
or
mov
adc
popf
fimuls
mov
fidivl
mov
sahf
dec
aam
repnz
stc
scas
ljmp
insl
test
inc
mov
enter
mov
xor
cmp
add
in
add
sub
movl
sub
fldcw
pop
loope
and
xor
cwtl
inc
cmovne
adc
fs
rclb
cmp
cmp
and
mov
jl
out
out
les
xlat
and
es
jge
pop
mov
addl
dec
cld
rolb
dec
mov
sbb
adc
insl
aad
imul
or
aad
inc
popf
movsl
les
jecxz
lock
cmpsb
sbb
mov
sub
scas
dec
pop
stos
mov
xchg
mov
push
cwtl
sbb
mov
push
jg
cltd
inc
push
int
outsb
mov
into
sar
mov
jne
mov
daa
inc
mov
pop
inc
xchg
inc
sub
jbe
loope
sti
dec
je
jle
push
xor
dec
push
mov
push
pop
mov
inc
inc
mov
mov
sbb
or
push
shlb
scas
mov
cmp
fdivs
pop
mov
add
push
adc
aad
jns
adc
sub
jo
shrl
adc
aas
adc
stos
adc
cwtl
push
pop
adc
push
pop
ret
nop
iret
out
add
push
or
test
pop
rorb
lahf
rorb
fidivs
hlt
outsl
mov
mov
xor
add
dec
push
or
push
arpl
push
cmpsl
mov
data16
sbb
sbb
shlb
lahf
inc
inc
jmp
popa
rorl
sbb
jmp
pop
out
add
notl
ja
xchg
mov
add
dec
loop
xchg
adc
jl
scas
divb
insb
mov
stos
push
mov
repnz
push
mov
outsb
mov
aad
jae
or
dec
jmp
cld
jne
popl
or
loop,pt
inc
dec
in
adc
fs
lea
in
into
or
push
mov
in
sbb
xlat
cwtl
and
mov
fcmovnb
mov
inc
cmc
inc
sub
sub
in
push
jne
mov
gs
and
inc
cmp
mov
repz
jge
fwait
or
daa
js
mov
push
cltd
cmp
or
enter
mov
call
sbb
div
jl
shll
insb
cld
inc
scas
ficoms
mov
aam
mov
sbb
test
cmpsb
divb
aas
movl
idivl
shlb
mov
je
jecxz
push
sbb
push
in
in
cltd
xchg
fsubrl
popf
arpl
mov
cld
and
push
xchg
fsubp
cltd
mov
ret
outsl
xchg
adc
sarb
stos
cmp
push
xchg
stc
push
addl
mov
mov
es
mov
decl
popf
mov
addr16
push
xor
cmp
cld
or
jo
mov
pop
add
lcall
dec
xchg
loopne
push
jbe
xor
daa
xor
movb
xlat
mov
cmpsl
push
test
cli
jl
pushf
ret
adc
int
outsb
sbb
xchg
jnp
adc
jo
mov
or
jns
jno
pop
push
or
fcomi
dec
outsb
lahf
or
int
in
fmuls
push
dec
fdivr
xchg
jmp
fsubrp
inc
inc
in
pop
bound
or
and
loop
mov
mov
dec
mov
mov
cmpsl
sbb
mov
cmc
cmpsl
negl
mov
jne
enter
sub
xchg
inc
add
xchg
daa
pop
dec
jl
out
ret
out
or
add
jnp
jp
jecxz
in
ret
push
out
nop
js
repz
mov
subl
sub
ljmp
dec
jo
push
shll
push
mov
out
mov
mov
popf
call
adc
sarb
xchg
jp
mov
dec
xor
sbb
fs
sti
loope
cmpb
rcrl
jb
test
test
dec
iret
fprem1
mov
and
enter
stos
pop
cmc
adc
rcrl
xor
stos
int3
push
push
cs
popa
cmp
movsb
mov
out
ja
sub
mov
jecxz
xor
cs
fadds
ret
repnz
sub
jb
daa
pop
push
xchg
mov
mov
xor
pop
notl
in
je,pn
arpl
cmp
dec
cmpsl
pop
in
out
notl
outsb
sbb
jg
xorl
ds
push
inc
adc
pop
das
mov
dec
jnp
mov
dec
xlat
jno
into
adc
arpl
adc
repz
inc
loopne
jnp
inc
mov
rclb
mov
xchg
pop
mov
jecxz
pusha
call
cwtl
inc
fsubl
and
mov
lret
lcall
out
cwtl
fs
mov
adcb
cmp
lahf
sahf
loopne
dec
push
pop
fldl
ss
andb
stos
jp
lods
out
and
xchg
gs
ja
cmp
push
rorl
pusha
jnp
jb
test
ficoml
bound
jle
push
push
in
adc
daa
ljmp
jmp
sub
notl
and
je
or
or
scas
xor
nop
pop
jne
jae
ret
or
pop
cmc
sbb
stos
lahf
movsl
loopne
idivl
imul
lods
pop
lods
adc
jnp
pop
cmovae
icebp
cli
out
ljmp
mov
and
mov
xlat
in
iret
es
xchg
jle
push
add
in
cmp
cltd
dec
bound
popf
add
out
dec
jp
cld
cwtl
repnz
pop
or
mov
insl
add
cltd
imul
add
imul
add
es
ljmp
sub
mov
xor
mov
jecxz
push
je
adc
mov
fldt
push
call
sub
aaa
or
pop
jo
in
add
fidivrl
dec
jge
sahf
loop
inc
dec
mov
insb
clc
cmp
pop
dec
adc
test
inc
jmp
pop
xchg
insl
cli
dec
jnp
xor
dec
lcall
stc
mov
cltd
xor
es
mov
pushf
stos
cltd
mov
add
inc
adc
xchg
xlat
cmp
je
mov
clc
inc
xchg
jg
sbb
push
sbb
lods
mov
dec
out
fstps
push
mov
bound
xor
pop
lret
out
enter
and
outsb
inc
and
cmp
mov
push
sbb
test
pop
mov
std
stc
dec
les
and
aam
mov
fwait
movsb
ss
mov
movsl
add
xchg
rcr
xchg
rolb
xor
test
sbb
push
lret
adc
mov
mov
jg
and
movsb
mov
sar
shlb
push
add
pop
das
jns
dec
push
pop
std
outsl
std
ljmp
sbbb
push
das
enter
subb
pop
inc
test
repz
loopne
daa
sbb
mov
sti
jmp
xchg
int3
daa
popa
js
sbb
add
or
pop
lea
ror
ja
pop
inc
adc
jle
adc
lds
mov
aaa
mov
mov
add
pop
xchg
ss
lea
push
push
enter
repnz
push
xchg
inc
xchg
cs
push
mov
dec
xor
lods
mov
loopne
ret
jbe
lcall
pusha
negl
fnstsw
or
fisubs
xor
inc
dec
outsb
mov
cmp
adc
mov
push
add
add
jns
subl
js
rcrl
leave
inc
sbb
pushf
fxch
jb
lock
jb
test
es
and
std
andl
inc
cwtl
movl
outsl
and
das
fbld
cmpsl
aad
xchg
adc
adc
andl
lds
lret
pop
add
cld
je
stc
repnz
sti
cmp
lods
add
int
lret
mov
pop
or
mov
popa
in
call
xchg
ret
nop
sbb
shr
fidivs
movsl
nop
pop
adc
std
out
lret
push
sub
xor
add
xor
pop
aaa
and
lar
test
sub
out
and
push
sub
adc
sbb
xlat
xchg
cltd
add
cmc
jmp
inc
and
js
iret
jae
std
fwait
jmp
rep
cmp
inc
repnz
scas
pop
jmp
popf
dec
jp
outsb
mov
rolb
xor
addl
pushf
mov
sarb
or
into
sub
mov
fbstp
sub
mov
ret
lret
inc
add
mov
push
xor
out
xchg
mov
addr16
sub
in
or
mov
std
cmp
sbb
rorb
mov
cs
adc
in
into
mov
and
popa
jp
pop
sbb
das
rol
les
clc
or
xchg
bound
push
push
pop
pop
ja
xlat
mov
and
cwtl
inc
mov
jbe
loopne
adc
add
arpl
je
fildll
push
lahf
test
xchg
sbb
int3
pop
cs
mov
bound
flds
xchg
stc
or
push
fisubrs
hlt
dec
lods
push
xchg
repz
out
dec
popa
mov
or
xor
pop
movsb
sub
lds
iret
jno
pop
pop
inc
push
lock
test
fwait
shl
cs
inc
cmp
pop
and
fst
cmpsb
gs
movsb
xor
out
stos
subb
sub
dec
pop
idiv
mov
imul
adc
hlt
jns
push
mov
test
xchg
fsubs
clc
inc
call
xor
add
adc
in
hlt
js
push
mov
test
xchg
fsubs
clc
inc
call
xor
add
adc
in
hlt
clc
les
cwtl
movsb
or
fs
call
xor
add
adc
in
hlt
js
push
mov
test
push
fsubs
push
inc
call
lret
enter
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
loop
mov
into
mov
leave
xlat
jmp
xorl
jbe
push
and
fistpl
push
push
push
out
neg
into
mov
xchg
jbe
dec
dec
push
or
ss
push
push
push
incb
xor
pop
into
mov
sahf
mov
push
cs
sub
jne
push
pop
je
jb
mov
cmpsl
mov
test
add
mov
mov
idiv
dec
pop
adc
adc
mov
jns
imul
mov
imul
test
jmp
jl
push
jbe
int
addr16
dec
inc
lret
test
aad
lret
push
sar
out
negb
mov
xchg
inc
mov
mov
jecxz
mov
xor
mov
lods
xor
pop
cmp
sub
mov
jg
and
cmpsb
lds
loope
push
fwait
ret
or
mov
push
xchg
jmp
sahf
xchg
cmp
and
fimull
jae
ljmp
fidivs
scas
mov
xchg
ficomps
dec
push
sbb
fcomps
push
push
and
out
cltd
cwtl
stos
mov
icebp
repz
push
and
or
jnp
jle
mov
mov
fucomi
lret
movsl
or
or
and
leavew
imul
cltd
xchg
out
push
cwtl
stos
stos
mov
sahf
xchg
jbe
inc
dec
push
ds
push
push
push
out
neg
into
mov
xchg
jbe
inc
dec
push
ds
push
push
push
out
mov
outsb
rcrl
adc
popa
xlat
and
pop
rcrb
and
sbb
out
stos
outsl
mov
inc
jne
in
or
cmpsb
decb
ret
mov
add
comiss
pop
mov
pusha
int
xor
pop
dec
lods
jo
lret
outsl
pop
vpminsw
loopne
insb
and
mov
pop
mov
leave
mov
or
arpl
dec
notl
push
and
fs
mov
xchg
decb
outsl
inc
jl
dec
dec
mov
roll
ds
rol
addr16
out
inc
xlat
jae
dec
xchg
jno
push
es
adc
adc
or
in
fldenv
bnd
xchg
xchg
ds
inc
aas
mov
push
fldt
sbb
adc
clc
lcall
cmp
push
insl
ljmp
push
ret
cli
sub
jbe
pop
test
lds
cli
dec
mov
push
xlat
lods
adc
jno
fwait
mov
lds
pusha
push
std
mov
mov
jb
andb
mov
int
inc
adc
loopne
jne
ret
inc
enter
std
sahf
pop
pusha
jne
fmull
inc
mov
inc
add
sub
test
mov
out
push
sti
les
and
nop
ss
or
add
cmp
in
push
xchg
mov
dec
test
mov
inc
pop
iret
je
roll
iret
mov
xor
or
test
jae
xor
scas
push
test
fiadds
or
test
dec
imul
cmpsb
frstor
sarb
call
sbb
or
inc
popa
dec
sub
arpl
jp
mov
xchg
ficoms
xor
popa
std
rcll
iret
testb
movsl
lock
push
and
mov
sahf
repnz
sbb
adc
push
bound
test
sbb
ds
cmp
lods
jg
aad
or
mov
mov
xor
mov
and
loope
xchg
jl
xor
mov
outsl
sub
test
and
pop
push
aad
call
addl
inc
xchg
sub
inc
add
push
mov
sbb
xchg
add
and
adc
mov
cmp
jecxz
in
jne
int3
cmp
mov
in
arpl
inc
mov
enter
push
dec
mov
lcall
addr16
sbb
sbb
add
mov
mov
mov
fisubrs
push
dec
fxch
cmpsl
mov
pop
ss
pop
pop
pop
pop
add
sbb
add
cltd
dec
adc
push
dec
xchg
in
jmp
data16
push
insl
outsl
mov
cmp
mov
mov
imul
mov
inc
mov
scas
popa
fidivrs
arpl
mov
add
clc
adc
dec
daa
add
xor
push
xor
in
in
data16
push
xor
jbe
addr16
ret
jno
or
lahf
sbb
imul
mov
jmp
xchg
sbb
and
xchg
mov
fldl
lods
outsb
scas
inc
subl
fmulp
bnd
sbb
nop
push
mov
test
cmpsl
jae
jb
mov
sbb
sub
mov
mov
xor
pop
test
sbb
aad
adc
xchg
cmp
jecxz
xor
divb
lods
adc
dec
dec
lds
outsl
sbb
mov
insb
jl
int
enter
daa
pop
sbb
andb
lahf
icebp
cmp
insb
pop
inc
lcall
dec
test
mov
je
fldenvs
aad
lahf
das
gs
das
gs
ret
ja
mov
dec
insb
hlt
cmc
js
xor
cs
ret
mov
mov
jmp
sub
bound
ds
faddl
movsb
fcoml
data16
or
mov
mov
mov
pop
ret
lahf
pop
and
xlat
mov
xor
jae
leave
and
add
test
sub
jns
or
aad
cmpb
mov
cwtl
mov
push
jmp
cmp
sbb
xchg
aad
hlt
sub
push
push
jge
insl
mov
inc
xchg
push
rorb
push
sub
mov
hlt
out
adc
cltd
pop
mov
xchg
jmp
sbb
fs
mov
push
and
hlt
and
pop
ret
cltd
push
or
xorl
jp
roll
dec
leave
mov
jecxz
shrb
jg
jecxz
sbb
mov
fdiv
leave
mov
repnz
sbb
xchg
xchg
imul
mov
pop
lock
imulb
push
pop
pop
adc
shll
lahf
pushf
ds
sub
pop
mov
dec
cmpsb
dec
test
sbb
push
push
jg
xchg
dec
push
push
addl
leave
mov
sbb
mov
aam
negb
xor
mov
xchg
adc
stos
imul
and
scas
int3
sbb
pop
hlt
adc
lret
sub
insb
fwait
rol
xchg
xchg
pusha
cmc
loop
xor
sbb
fwait
adc
mov
leave
subb
jae
dec
mov
insl
in
xor
xor
cmc
aaa
js
adc
cli
ljmp
dec
sbb
lahf
cmpsl
add
fcmovb
loope
sbb
xor
and
inc
arpl
enter
sub
add
movsl
shrb
sbb
stc
sub
mov
mov
pop
rcrl
push
cwtl
movb
and
sbb
push
movsb
push
xchg
adc
cmp
push
in
popf
movsb
mov
lret
shll
push
movsb
pop
cmc
insb
std
jg
mov
test
scas
pop
mov
int3
dec
movsb
mov
jle
enter
push
loope
es
loope
push
nop
push
push
int
sbb
push
sbb
add
std
mov
hlt
inc
jge
cmp
stos
pop
jo
cmp
les
pop
mov
fsubrs
push
fidivs
lds
jnp
movsl
fcmovu
xchg
mov
cmp
mov
dec
or
xor
ljmp
push
mov
pusha
loop
push
mov
sahf
jmp
mov
ljmp
or
pop
sbb
xchg
jmp
adc
fildll
or
mov
push
and
fs
ljmp
dec
pop
xchg
add
push
push
ret
out
mov
in
out
adc
cmovo
cmpl
and
or
mov
test
sarl
lods
jmp
push
sub
lods
dec
shl
fwait
xchg
imul
imul
in
mov
scas
push
stc
inc
sbb
clc
fincstp
jnp
cmp
xor
mov
jo
loop
mov
cmpsb
imul
inc
std
pop
movsb
cli
std
xchg
jl
inc
sub
mov
sti
ret
aas
cmp
xchg
mov
sarb
mov
psubd
int
add
xor
xchg
jp
lds
mov
scas
cwtl
clc
cmp
cmp
lock
lahf
mov
push
jo
das
ret
repz
sahf
imul
push
xor
mov
fxch
shlb
lea
lea
push
dec
psubusb
jg
pop
rorl
push
sti
rcll
leave
daa
dec
inc
sbb
pop
das
adc
in
xchg
int
movsl
shrb
cmpsl
inc
push
adc
icebp
push
cwtl
arpl
jnp
repz
xor
stc
aad
in
cmp
cmpsl
cs
iret
mov
insl
jecxz
pop
div
adc
int3
cmpsb
inc
fsubrl
out
add
int3
popa
and
test
bound
mov
or
and
arpl
test
or
cltd
pop
xor
sub
inc
inc
inc
cmp
outsl
inc
enter
fsubrs
xor
repnz
add
das
iret
in
call
mov
jge
neg
iret
movsb
aaa
inc
mov
push
and
push
jb
or
mov
jno
mov
movsb
or
dec
push
push
mov
adc
jo
adc
inc
xchg
movsl
and
mov
lds
adcb
or
fisttpll
xchg
xor
dec
shll
aaa
in
mov
cltd
add
scas
jp
call
adc
dec
mov
xor
jp
push
lret
test
inc
into
jmp
push
inc
cmc
andl
test
jnp
test
mov
adc
jge
fnstsw
lret
xlat
add
push
mov
arpl
addr16
stc
loopne
jecxz
js
cmpsb
hlt
gs
ret
push
xor
cmp
mov
popa
stos
popa
pushf
mov
call
js
adc
sbb
call
add
jnp
pop
inc
or
inc
stos
pop
mov
outsb
leave
inc
stc
test
lcall
sbb
adcb
xchg
cli
jb
jne
out
mov
ljmp
clc
movsl
jmp
fcoml
fisubs
lret
pop
jmp
push
int
insl
in
popf
inc
mov
gs
lea
push
jg
into
push
in
loop
sub
in
bound
inc
mov
mov
sub
rclb
scas
mov
andl
mov
iret
clc
pop
xchg
jnp
imul
out
adc
aad
sub
jl
jmp
sbbb
xchg
lods
enter
xor
lds
jecxz
add
nop
sarb
int
mov
lret
pop
pop
mov
test
sbb
dec
scas
in
dec
pushf
inc
mov
mov
movsl
or
add
test
enter
push
xchg
in
rorb
mov
rcll
ret
add
popf
sbb
movsb
vmwrite
jmp
ficompl
imul
push
lahf
movsb
inc
cld
lock
ljmp
loopne
popa
loope
or
mov
popf
push
sbb
sahf
sub
jnp
testl
push
stos
jbe
add
popf
inc
sti
out
sarl
add
ljmp
or
rclb
arpl
popa
lea
scas
pop
insb
andl
push
and
in
cmp
ret
outsl
adc
or
or
adc
pop
and
dec
in
xchg
mov
lcall
xor
or
jge
push
jmp
or
rcr
lea
lods
xlat
sbbb
dec
pop
mov
das
sub
dec
mov
jmp
popa
or
dec
insb
jecxz
or
in
ficomps
lock
push
and
add
loope
je
xchg
cmpsl
xchg
mov
push
mov
decl
mov
out
xchg
loope
mov
andb
loopne
out
sbb
push
test
pop
mov
or
ja
lods
movsb
aaa
lahf
pusha
idiv
sbb
lods
mov
lret
lods
subb
mov
icebp
inc
and
cli
jmp
jmp
sbb
xor
push
add
dec
or
insl
or
mov
bnd
stos
jg
aam
ds
test
shrb
rcl
loope
add
imul
jecxz
test
aaa
push
mov
fildll
mov
enter
cld
clc
sbb
mov
pop
cmp
adc
rorl
insl
and
addr16
push
or
sbb
and
outsb
inc
sbb
and
cltd
xchg
cwtl
sbb
push
xor
fiadds
rorl
sar
mov
sbb
lods
add
push
fmuls
or
xchg
adc
js
ja
jae
xor
xor
stos
movsl
cmp
fsubrp
daa
fmul
lods
jg
mov
jnp
cmp
lods
aaa
inc
dec
or
adc
test
sub
push
pop
xchg
mov
sub
pop
dec
popf
xchg
sub
inc
mov
mov
jns
sub
inc
int3
pusha
inc
or
fcomip
or
test
sub
push
xor
adc
je
jl
inc
jbe
mov
inc
jae
xchg
imul
bound
lret
ljmp
adc
mov
ret
jge
and
test
cmp
xor
push
out
sarl
push
mov
xchg
mov
ds
jg
or
mov
in
arpl
in
push
sahf
bound
pop
sub
mov
mov
sbb
push
cs
jne
and
mov
pusha
ss
jg
hlt
jno
enter
fdivs
in
sub
mov
aam
add
xchg
aad
jno
cmpsl
xchg
cmpsl
cwtl
fwait
mov
jmp
dec
mov
dec
popa
xlat
lock
pop
in
add
or
jo
ss
popf
push
aas
xchg
and
icebp
int3
std
inc
pop
mov
cmc
or
icebp
mov
pop
mov
sub
mov
std
scas
out
add
inc
add
xor
sub
pusha
sub
je
mov
xchg
and
push
stos
mov
aaa
mov
jnp
jno
add
call
lahf
clc
and
dec
sub
add
xor
sbb
addr16
ljmp
jbe
push
mov
icebp
sbb
xrelease
and
clc
jbe
sbb
pop
cltd
xor
stos
scas
mov
jne
icebp
outsb
and
cmpsl
pop
cmp
sub
jne
lds
lods
ljmp
or
in
mov
divl
in
push
and
xor
loope
pop
and
jno
push
cmp
dec
mov
xor
fidivs
out
add
movsl
lods
pushf
mov
xchg
arpl
or
jecxz
push
rcl
mov
loop
mov
or
push
dec
fistpl
scas
jb
leave
pop
popa
mov
fidivrl
push
lret
pop
mov
and
add
sub
out
add
add
lds
inc
loopne
pusha
mov
adc
lret
fsub
std
mov
les
mov
cmp
pop
lret
rorb
ljmp
mov
mov
shl
scas
lods
repz
int3
out
sub
das
sbb
pop
push
push
fistps
repnz
imul
add
out
sbb
ret
lds
test
lods
repz
loope
stos
dec
mov
mov
inc
sub
das
pusha
jle
lods
or
adc
push
add
mov
fwait
jb
jnp
stos
lcall
pop
cmp
lods
test
sbb
xor
cmp
into
jns
cmp
cmpsl
jne
fsubrs
rorb
stos
into
ds
jp
or
pop
rorl
es
sahf
int3
repnz
inc
push
mov
in
mov
pop
in
pop
or
lea
sbb
xor
int3
ret
out
hlt
pop
cmpsl
sahf
jecxz
inc
xchg
push
pop
xchg
aad
enter
xchg
push
mov
out
outsl
xchg
insl
cmp
std
movl
insl
jmp
stc
mov
in
fwait
into
inc
jo
mov
dec
fiadds
jp
ja
add
bound
rcll
push
lret
outsl
jns
xor
pop
in
in
mov
lret
lock
add
mov
jno
xor
fucom
adc
dec
xchg
sub
lods
adc
adc
rol
push
add
pop
dec
repnz
scas
xchg
sub
cmp
pop
push
sbb
push
sti
rcll
out
pmuludq
cs
jmp
inc
jnp
push
cs
stos
and
into
or
inc
ret
ja
in
es
bound
out
cmp
test
cmpsb
push
arpl
cmp
cmp
xor
pop
xchg
inc
je
loope
fcomps
scas
leave
mov
cmp
shrb
xor
call
mov
aad
cmc
iret
and
xor
sbb
pop
xchg
and
xor
push
cld
cltd
insb
dec
mov
dec
out
hlt
or
and
add
jae
sbb
cmp
dec
cmpsb
push
sahf
xor
sahf
lret
mov
ljmp
imul
hlt
lock
mov
es
lods
adc
out
out
mov
mov
cld
dec
popf
decl
xor
pusha
jp
add
ljmp
push
pop
mov
dec
jmp
fcompl
in
adc
je
stos
inc
into
cmp
jbe
lods
mov
call
mov
popf
mov
sub
jae
push
jnp
das
mov
adc
add
repnz
fs
shlb
into
dec
sbb
mov
fcompl
xor
es
lds
test
mov
roll
adc
les
cmp
clc
push
fdivs
into
sti
bound
test
call
jge
push
inc
loop
and
xorb
data16
or
add
xchg
sub
sub
adc
stos
out
push
scas
in
add
out
lahf
stc
dec
mov
into
mov
clc
jmp
lds
sti
push
xchg
negl
shrl
mov
jnp
arpl
outsl
pop
or
mov
jae
out
cld
or
xchg
ror
adc
xchg
add
repnz
addr16
mov
add
hlt
mov
mov
xchg
aad
xlat
cli
inc
ror
cmc
and
cmpsl
mov
in
negb
in
pop
aam
or
sarl
fdivl
mov
xchg
test
lock
ret
ja
lock
lock
sbb
jae
out
ficoml
leave
pop
mov
lahf
das
cs
xor
fdiv
push
cmp
fisttpl
ret
mov
xchg
xor
lods
test
stos
jge
xlat
les
dec
and
inc
ss
push
or
xor
dec
into
into
scas
add
int
jp
pop
dec
inc
inc
rorl
push
in
cmc
mov
xorl
into
xchg
sub
fsubrs
and
cmpsb
cld
add
jae
xchg
push
mov
add
xor
jg
inc
mov
aaa
jne
fstpt
pusha
ja
lcall
push
add
jno
repz
inc
xchg
push
xchg
mov
sbb
and
cmc
inc
dec
dec
insb
and
adc
cmp
sti
mov
push
mov
inc
mov
nop
jp
int3
out
adc
ja
pop
mov
fstps
add
xor
jbe
scas
sub
aas
cmpsl
adc
cmp
xlat
mov
xor
mov
ja
sti
ret
test
aam
cmp
dec
and
fsubrl
les
insl
cwtl
insl
sbb
mov
mov
mov
mov
fisttps
xor
dec
fildl
mov
sub
cmp
xchg
mov
cmpl
aad
mov
negb
nop
cltd
jg
pop
mov
cmp
push
in
xchg
les
mov
pop
mov
mov
xchg
inc
cli
sarb
mov
xor
adc
arpl
cmpsl
or
andb
xor
repz
sarl
arpl
mov
push
sbb
mov
arpl
gs
aaa
mov
jp
daa
cmp
lods
imull
add
push
push
inc
pushf
mov
push
sbb
fstps
and
xor
in
test
xchg
hlt
push
fistpll
xor
adc
mov
test
test
into
add
xchg
dec
sub
clc
sub
test
jp
and
inc
pushf
cltd
and
loop
sub
jbe
mov
xor
cli
movsl
psubsw
repz
dec
ljmp
lret
xor
cmp
pop
js
loope
push
inc
sub
or
push
xchg
nop
and
data16
jo
fildll
cmp
jle
push
clc
stc
mov
inc
adc
lea
cmpl
xlat
mov
aaa
rcr
xchg
dec
mov
adc
outsl
das
aad
and
mov
push
push
fdiv
fnsave
jecxz
ljmp
mov
je
outsl
push
mov
jle
int
push
mov
test
fldt
and
pop
in
dec
xchg
icebp
and
inc
adc
inc
pusha
xchg
xchg
add
data16
fnstcw
mov
mov
sbb
leave
das
lret
inc
mov
cltd
add
sbb
nop
fsub
rcll
sub
dec
ss
fcmovnbe
ret
inc
clc
mov
bound
push
mov
mov
test
push
sbb
adc
inc
roll
cli
lret
test
iret
xor
pop
jge
sarl
fcmovu
pusha
xor
gs
jecxz
add
iret
pop
int3
sub
sub
ret
mov
jmp
cmpsl
testl
xor
jge
scas
mov
aaa
lret
shlb
jmp
cmp
dec
cmp
cld
dec
pop
lock
divl
call
imul
int3
cwtl
out
cli
stos
jns
sbb
pop
fs
mov
ljmp
test
xchg
lahf
cmp
pop
cli
dec
add
jne
pop
inc
fbstp
or
cli
mov
push
pop
std
mov
jle
sub
cld
popa
mov
adc
inc
mov
xchg
xchg
xor
test
mov
adc
add
mov
jg
xor
sbb
loop
ds
test
int3
scas
arpl
dec
in
out
mov
cld
aaa
ret
xchg
inc
ja
sub
push
bound
mov
ret
mov
jnp
pop
mov
test
cmp
idiv
dec
outsl
outsb
inc
loop
out
addr16
inc
out
add
or
mul
ret
into
mov
xchg
jbe
inc
dec
push
ds
push
push
push
out
neg
into
mov
xchg
jbe
inc
dec
push
ds
push
push
push
loop
clc
into
sarb
orb
pop
inc
dec
pop
and
ss
femms
repnz
out
adc
and
xchg
mov
push
push
push
sbbl
cmpsb
dec
out
imulb
in
hlt
jmp
sti
aam
call
xchg
sbb
pop
je
inc
jnp
push
and
xor
add
adc
in
hlt
jmp
sti
aam
movsb
fwait
mov
test
je
inc
jnp
or
xor
add
adc
in
hlt
insl
les
mov
test
dec
fs
push
or
jo
arpl
mov
scas
lods
mov
add
pop
js
pop
add
sub
popa
pop
and
mov
jl
cwtl
jb
sahf
iret
adc
xor
add
inc
fwait
in
stc
jmp
jnp
add
rorl
movsb
stc
xchg
sbb
xchg
xor
andl
in
scas
orl
mov
mov
test
push
les
adc
cmp
sub
cmp
mov
js
clc
ja
xor
add
ljmp
pop
xchg
push
movsl
arpl
inc
shll
mov
sbb
add
add
in
hlt
jmp
xchg
aam
movsb
fbstp
fs
je
inc
gs
imul
mov
les
fnstsw
sbb
sbb
bound
push
pop
jge
pop
lret
adcl
loop
cli
clc
in
enter
sbb
js
jle
pop
push
jp
mov
mov
mov
mov
xchg
dec
fs
je
inc
jnp
or
xor
add
adc
in
hlt
jmp
sti
aam
movsb
fwait
mov
test
je
inc
jnp
or
xor
add
adc
in
pushf
inc
sub
lret
or
or
movsb
xor
mov
test
pop
sub
push
arpl
hlt
mov
fiadds
in
call
insl
fbld
ret
pop
xchg
rorb
inc
test
adc
xchg
data16
inc
inc
loop
pop
popf
fistl
cltd
mov
mulb
mov
xchg
inc
mov
adc
out
imul
and
ret
push
sbb
and
cld
push
pop
repnz
cmp
and
adc
jns
add
ja
lea
xchg
cmp
cmc
lahf
dec
imull
test
push
dec
xchg
lods
aad
push
ss
push
jg
dec
push
push
data16
imul
fs
sbb
pop
mov
inc
ja
insl
outsl
xchg
xlat
cmc
cmc
ja
mov
add
xor
cmp
push
cmp
fcmovne
jb
pop
push
cmp
sti
add
out
ss
xchg
cmp
popf
lahf
pop
das
or
push
xchg
mov
repz
fldenv
mov
and
jno
js
in
call
push
icebp
mov
rcr
inc
aad
inc
mov
jl
js
fnstsw
orb
pop
mulb
pop
js
aaa
sbb
das
xor
jae
in
jo
xchg
test
lods
inc
xchg
mov
and
jb
ljmp
bound
fwait
lock
jne
sbb
dec
sub
mov
xor
mov
enter
out
cmp
and
lea
inc
adc
pop
pop
addb
lods
and
int
dec
call
imul
mov
ret
test
fildll
mov
mov
shl
push
sub
push
std
ljmp
enter
sahf
ret
add
cwtl
xor
jmp
mov
xchg
arpl
std
and
sub
inc
mov
xor
inc
shl
lock
adc
dec
or
aaa
sub
pop
push
andl
notl
cmp
mov
pop
sbb
sti
mov
mov
jnp
addr16
push
inc
and
push
fildl
loope
adc
mov
xchg
fisttps
stos
xor
or
insb
xchg
subl
rorb
sub
into
and
adc
xchg
dec
push
inc
scas
fdivl
or
cmpsb
fimuls
jmp
push
incl
pop
cmp
inc
or
or
dec
ret
mov
jg
mov
and
xor
dec
gs
popa
ljmp
push
mov
cmp
dec
jns
pusha
mov
or
jno
mov
adc
imul
aas
daa
dec
mov
ret
cmpsl
jo
movsl
pop
int
divl
mov
jge
jmp
shl
jno
das
leave
add
xchg
cmp
pop
cmp
insb
mov
fstl
mov
add
stc
fxch
inc
addr16
insl
test
lods
mov
sbb
daa
dec
daa
movsb
mov
xchg
push
or
and
pop
mov
jp
push
loop
mov
loopne
pop
xor
inc
fmulp
into
pop
dec
mov
mov
shll
ss
push
shlb
or
fstpl
push
jno
xor
aaa
notb
jbe
xchg
popa
pop
stos
nop
iret
jbe
inc
enter
nop
jle
insb
test
out
mov
xlat
inc
add
xor
inc
sbb
inc
fsts
adc
add
rorb
movsl
pop
shrb
rol
into
das
sbb
add
mov
push
mov
es
jb
sbb
add
jne
or
xor
xchg
push
lock
dec
daa
stc
push
dec
pop
js
in
daa
or
dec
jbe
insb
jne,pn
inc
pop
inc
and
xor
sub
mov
negl
mov
data16
into
mov
cmp
cmp
push
ja
dec
cmp
dec
adc
or
and
dec
mov
fldt
fcmovnu
out
scas
pushf
mov
jle
jo
scas
lahf
mov
movsb
cmp
popf
lods
mov
xchg
jb
or
ljmp
mov
scas
push
push
inc
push
fcoml
pop
imul
pop
insl
sbb
sub
aad
push
mov
sbb
and
in
xchg
clc
sbb
push
jmp
insb
mov
subl
inc
subl
mov
pushw
lds
and
inc
insb
outsb
mov
clc
push
arpl
aam
mov
stos
lds
lods
mov
call
fiadds
das
jmp
enter
cmpsb
test
sbb
pop
dec
movsl
orl
leave
dec
mov
adc
inc
adc
dec
test
xchg
push
push
or
mov
mov
jmp
inc
inc
test
cli
stc
sbb
push
les
jmp
enter
int
sub
mov
adc
push
xor
sub
loop
xor
mov
dec
jg
cmp
mov
loop
arpl
push
push
jle
xchg
mov
scas
repz
pop
dec
rcll
cmpsl
xor
sbb
mov
test
mov
sbb
rcrl
mov
jne
daa
xor
outsb
pop
popf
pop
mov
xor
push
mov
xchg
push
jecxz
jb
stc
cmp
lds
fmuls
xchg
popf
rorb
cmp
std
imul
or
xchg
jb
push
push
adc
ficomps
jno
or
sbb
mov
jl
enter
xchg
sub
sub
mov
cmpl
cmc
pusha
loope
jg
test
xacquire
call
jo,pt
loopne
clc
enter
inc
push
mov
arpl
stos
dec
pop
or
dec
jmp
cmp
mov
xlat
xchg
aaa
popf
daa
push
les
adc
mov
aam
hlt
push
jmp
xchg
xor
imul
inc
add
mov
jbe
jno
fistpll
lret
ret
push
arpl
mov
mov
ss
cli
add
jns
dec
pop
fs
jp
enter
cmp
jmp
test
test
pop
cmp
jl
scas
xchg
push
cmp
call
pop
push
sbb
sub
mov
cmp
ret
rorb
in
or
jb
js
mov
pop
lds
jae
cmpsb
lahf
sub
push
cmp
dec
xchg
cmpsb
jno
mov
stos
in
pop
ljmp
in
dec
mov
cmp
pop
nop
clc
rorb
mov
jle
sar
inc
in
and
dec
enter
push
leave
loope
mov
xor
adc
int
lret
sub
or
push
or
add
add
movsb
aam
dec
and
adc
pop
adc
rol
pop
stc
inc
aaa
into
push
popf
mov
push
or
or
xor
mov
pop
push
cli
fsubrl
arpl
mov
loope
clc
pop
mov
sub
ljmp
int
iret
and
inc
jb
rcll
cltd
addr16
jg
clc
add
pop
mov
shl
lea
clc
mov
push
and
sub
test
sub
pop
and
jne
jg
aad
cmp
adc
dec
or
sbb
sbb
aad
jbe
xchg
and
clc
aam
mov
js
dec
aaa
lahf
jno
in
mov
mov
scas
xchg
dec
dec
cwtl
call
hlt
dec
pop
stc
inc
dec
push
mov
inc
ss
add
mov
lods
jns
mov
cmp
add
mov
mov
cmp
ja
pushf
jle
iret
mov
popl
inc
adc
push
imul
rol
rolb
mov
jno
inc
icebp
xor
mov
mov
or
jnp
jae
push
std
lcall
sbb
ret
cli
imul
dec
mov
and
add
lahf
loopne
aad
sbb
icebp
inc
mov
xor
pushf
mov
pop
scas
loope
fs
fstpl
lods
aam
cs
mov
test
xor
jle
add
inc
movsb
mov
add
pop
fsubrp
popa
jno
sbb
adc
dec
add
addb
shlb
adc
add
mov
adc
add
and
push
push
xchg
mov
jmp
adc
adc
mov
xchg
mov
testl
lock
les
lock
inc
sbb
arpl
test
mov
test
mov
dec
loope
sub
mov
push
dec
movsb
xor
pushf
out
mov
or
mov
arpl
dec
dec
mov
notl
sbb
je
push
pop
push
rolb
cmpsl
mov
cld
ja
cmpl
cmpsl
add
aas
insl
sahf
dec
out
dec
push
xchg
inc
push
lock
or
shrl
insl
out
cmp
push
mov
dec
sub
push
mov
push
cwtl
or
inc
out
jno
lods
add
jae
mov
adc
sbb
cmp
adc
push
lods
jbe
mov
notl
push
push
imulb
or
sti
enter
sub
adc
mov
mov
mov
inc
ja
gs
aad
stos
ds
mov
jnp
add
fmul
jnp
adc
xchg
mov
mulb
cmc
jp
lea
lahf
cmc
cmpsl
cwtl
arpl
pushf
gs
movsb
dec
xor
or
xchg
mov
jns
jmp
jg
jle
sahf
enter
leave
roll
and
es
xchg
dec
fs
stos
loope
push
fstpt
push
adc
pop
rcr
call
shrl
aad
ret
daa
sbb
mov
mov
sbb
adc
fs
push
xchg
lahf
in
and
lret
lret
cmpsb
pushf
xchg
xor
push
scas
adc
cld
sbb
add
xchg
push
push
push
xor
imul
push
cwtl
add
mov
push
outsl
in
arpl
data16
sbb
lods
xchg
hlt
les
add
rorb
add
fildl
lret
pop
movsb
xchg
into
movsb
leave
xlat
aad
and
popf
inc
xchg
aaa
into
fwait
sbb
jb
ret
mov
push
mov
ss
mov
loop
nop
jge
pop
cmp
push
inc
insl
call
lret
pop
or
fs
xor
ds
cmp
int
std
outsb
lret
mov
aaa
xlat
add
dec
dec
and
dec
popl
mov
iret
addl
ss
sub
hlt
movsl
jcxz
cmp
loop
add
dec
push
mov
sub
mov
mov
mov
mov
loopne
inc
shl
mov
jecxz
repnz
and
add
push
sti
cmp
pop
jnp
mov
ljmp
insl
sub
in
test
cmp
add
sbb
ja
inc
dec
pushf
leave
ds
ja
jne
sahf
cmpsb
loopne
mov
push
and
imul
or
fists
cmp
mov
and
mov
jnp
fdivr
pop
sbb
jle
pop
mov
pusha
inc
ljmp
inc
stc
dec
dec
push
test
test
aad
sub
cmp
or
mov
xchg
in
addr16
sub
jae
shrl
mov
mov
test
ss
xchg
int
adcl
dec
push
fistpll
rclb
and
xor
loope
cltd
lret
sub
cmp
pop
andb
mov
ds
mov
mov
in
or
push
and
pop
fwait
mov
fdivs
dec
mov
xchg
jmp
pop
xchg
push
out
insl
leave
rcl
mov
fs
dec
aas
jge
neg
inc
outsl
out
and
stos
je
mov
pop
inc
je
mov
mov
jl
cmp
mov
dec
sbb
outsb
out
cmp
cmp
testb
mov
in
mov
lock
xor
xor
inc
dec
leave
js
je
sub
mov
mov
mov
jne
movsl
test
iret
dec
cmpsb
push
push
jno
dec
outsl
xchg
ljmp
mov
out
insl
es
inc
pop
mov
mov
stos
addr16
xchg
std
xlat
mov
dec
adc
rcll
jne
adc
fsubrl
xor
mov
cmp
inc
jb
outsl
aam
sub
in
xor
or
loope
repz
iret
mov
out
mov
lret
cmp
and
sbb
or
add
xchg
jne
push
mov
mov
or
sub
scas
xor
int
jae
loop
aad
sub
or
mov
pop
inc
enter
das
aad
sti
pop
stc
jle
sub
push
les
jae
stos
push
and
fiadds
adc
inc
push
scas
xchg
out
rcr
inc
mov
push
es
sbb
hlt
mov
in
jo
orl
cmpsb
lods
cmp
sbb
lea
push
out
sub
stc
clc
std
jns
sub
sbb
js
and
cmpsb
xchg
mov
sub
outsl
outsb
repnz
or
sbb
mov
data16
pop
adc
rorb
mov
cltd
test
stos
sti
inc
in
xchg
in
adc
rolb
aaa
fstps
out
adc
mov
adc
xor
mov
push
push
pop
outsl
fidivs
test
or
cmp
dec
or
clc
cmp
mov
add
daa
notb
movsb
adc
clc
adc
adc
lret
lds
pop
sbb
sarl
fildl
mov
or
jg
icebp
push
xor
sbb
mov
mov
adc
fildll
loopne
iret
ret
je
notb
adc
pop
loop
add
jmp
sbb
orl
adc
push
repnz
push
adc
gs
int3
repnz
pop
adc
mov
aaa
sub
sbb
push
insl
jecxz
dec
adc
dec
mov
fadds
js
fldcw
adc
sti
mov
adc
pusha
sub
int
cmp
ljmp
jmp
cmp
mov
call
subb
add
pop
mov
cmp
push
mov
xchg
sub
mov
xchg
loope
xor
xor
arpl
and
jge
and
cmp
stc
les
cltd
sarl
adc
cmpsb
or
add
cli
mov
inc
adc
in
outsl
sub
icebp
out
and
pop
inc
stos
mov
incl
pushf
mov
jge
and
cmpsl
jnp
dec
stos
mov
mov
inc
pop
lret
jmp
imul
jmp
not
cmc
aam
mov
mov
push
add
mov
lcall
and
inc
xor
inc
push
pop
cmpsl
push
loop
test
lods
cmpsb
mov
mov
inc
movhps
dec
adc
sahf
in
cmp
cmp
xchg
cmp
pop
add
mov
pushl
aam
mov
into
sub
sbbb
hlt
sub
fsub
jge
xchg
movsb
ja
outsl
sbb
pop
cmp
adc
aam
xchg
into
sbb
lret
cmp
fidivrs
lea
sbb
pushf
mov
jmp
jbe
push
pop
or
repz
dec
aad
sbb
iret
xchg
pop
jg
cld
or
pop
fwait
mov
das
aad
pop
xchg
jb
in
mov
fnsave
inc
mov
xchg
imul
xchg
pop
fsubp
andb
loopne
xor
pop
lea
push
and
fwait
jbe
xor
es
sub
imul
repnz
push
adc
cmc
xor
or
xchg
lea
mov
je
push
adc
sub
sbb
sahf
sub
out
inc
cli
pop
or
aaa
repnz
mov
and
mov
mov
pop
jbe
jo
xchg
push
pop
loope
jnp
pop
push
les
adc
inc
aam
xor
jmp
mov
add
clc
cld
and
pop
pop
roll
mov
sbb
jo
mov
adc
hlt
std
mov
popf
add
jne
std
fcoml
cltd
dec
mov
mov
push
mov
and
xchg
int
nop
loope
adc
data16
repnz
mov
movsb
insb
add
pop
add
dec
mov
xchg
jmp
pop
inc
mov
xchg
adc
out
int3
mov
dec
add
out
popf
imul
lods
jmp
pop
pushfw
in
inc
cmp
mov
inc
nop
pushf
and
les
jmp
sbb
xchg
test
pusha
jge
clc
jo
addr16
inc
xlat
fisubrl
push
mov
ljmp
dec
loope
add
sbb
mov
movsl
vmptrld
push
scas
sub
xor
test
xchg
das
cld
add
jle
pop
xchg
lods
push
dec
mov
pop
popf
cmc
insb
ja
push
inc
xchg
mov
leave
dec
sbb
adc
pop
sahf
sbb
lcall
and
fwait
jne
movsb
sbb
mov
pop
mov
scas
call
pusha
dec
iret
dec
push
sbb
push
cmp
xlat
in
mov
mov
push
cmp
cmpsb
jnp
pusha
jno
cwtl
add
rolb
imul
dec
jl
pop
pop
xor
in
int3
mov
rcrl
mov
or
in
mov
in
rol
pushf
pusha
ja
into
fmul
out
cli
pop
push
mov
adc
dec
sub
dec
mov
xlat
popf
and
addr16
inc
shll
repz
jle
shrb
xlat
cltd
ja
aaa
loop
push
dec
cwtl
jno
das
adc
jmp
jb
lock
cmp
aad
ljmp
mov
sbb
lods
dec
repz
scas
sub
repnz
jae
js
pop
ja
addr16
movsb
xor
arpl
inc
pop
out
xorb
add
inc
dec
ficompl
mov
mov
dec
xchg
mov
pop
cmp
scas
addb
mov
mov
inc
icebp
xchg
cs
dec
loope
arpl
imul
mov
jmp
fisttpl
xor
movsl
sbb
sub
inc
sbb
insb
lods
adc
sbb
mov
ffree
shlb
jno
cmpsl
mov
pop
gs
push
gs
cli
stos
xchg
sbb
ret
and
nop
fsts
int
leave
lret
adc
in
shlb
inc
or
inc
stc
cmp
lret
je
or
sbbb
icebp
es
dec
test
dec
fcoms
icebp
inc
mov
pop
xor
sub
inc
test
pop
xchg
ds
cmpsl
xchg
loopne
push
and
sahf
adc
inc
ret
jb
and
xchg
push
cld
cmc
dec
xor
mov
leave
xchg
sti
movsb
adc
cli
ss
adc
les
mov
dec
jb
mov
ss
xchg
jno
rcll
gs
scas
sahf
daa
int3
add
repz
shll
test
mov
faddl
pop
xor
scas
mov
sbb
fwait
pusha
add
dec
aam
scas
out
cwtl
xchg
daa
jecxz
xchg
jmp
sub
imul
push
adc
add
dec
jp
outsb
mov
rcr
mov
mov
lds
lds
jle
sbb
outsl
cmp
out
gs
push
cwtl
add
ret
mov
sub
sub
pop
mov
cmp
mov
pushf
sbb
push
and
inc
pushf
sub
mov
xchg
lock
repz
cmpl
pop
dec
repnz
frstor
mov
in
sahf
insb
adc
jbe
pop
movb
add
fildl
add
or
icebp
fstpl
and
mov
popf
into
outsb
cld
mov
stos
cpuid
out
mov
hlt
dec
out
push
pop
mov
push
aam
pop
adc
xor
shl
and
jmp
test
mov
xor
orl
inc
add
test
stos
fsubl
jl
pop
es
cmpsl
pop
stos
aad
lcall
xchg
pushf
jb
cmp
pusha
add
fnsave
mov
inc
add
xor
sbb
pop
sbb
adc
xor
jbe
jb
stos
inc
mov
sti
xchg
push
scas
mov
scas
dec
out
in
sub
xor
jmp
sbb
mov
lock
lods
jl
mov
pusha
add
pop
adc
les
es
dec
mov
jnp
dec
ja
jbe
lock
mov
inc
call
cwtl
arpl
je
cltd
mov
cmp
mov
aaa
cmpsb
jg
push
cmp
add
inc
mov
mov
rol
push
jp
test
shl
cmp
mov
mov
mov
xlat
ja
es
mov
sub
das
mov
jbe
fdivp
xchg
add
icebp
or
outsb
push
sbb
les
jno
inc
hlt
push
movsb
fwait
mov
test
je
inc
jnp
or
xor
add
adc
in
hlt
jmp
sti
aam
movsb
fwait
mov
test
je
inc
jnp
or
xor
add
adc
in
hlt
sti
sti
aam
movsb
lahf
mov
test
je
inc
jg
or
xor
add
adc
in
hlt
arpl
rcl
mov
xchg
dec
movsb
faddp
inc
jnp
jl
xchg
lret
aam
jmp
mov
clc
pop
out
mov
shll
add
add
add
add
insl
add
add
add
add
add
in
add
add
push
jae
xor
and
xor
into
add
add
pop
add
add
in
add
add
xor
add
add
add
add
add
xchg
add
add
xor
add
mov
add
add
filds
inc
add
add
pusha
add
inc
add
add
loop
ret
add
add
stc
add
add
add
add
add
add
add
add
add
repnz
add
add
add
ja
call
add
add
mov
mov
add
add
add
add
add
add
add
add
cmpsl
add
add
add
loop
jmp
add
add
add
add
adc
mov
mov
add
in
mov
add
add
ret
add
add
cltd
add
in
adc
add
pusha
add
add
add
add
xchg
add
add
add
add
add
add
push
add
add
lods
add
add
aad
mov
movsl
add
add
mov
xor
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fadds
mov
add
jmp
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
jne
mov
outsb
add
add
add
add
inc
add
push
add
add
add
add
add
add
mov
add
xchg
jb
xchg
add
add
lods
add
aaa
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
ja
and
lret
add
add
in
cltd
add
xchg
nop
add
or
lahf
add
add
or
les
xor
push
add
add
xor
add
add
add
add
add
and
movb
add
add
add
add
add
add
add
add
add
add
sub
int
and
popf
add
jo
and
mov
xor
cmp
xchg
xor
add
add
add
cmp
inc
add
add
add
add
add
add
into
add
add
add
in
xor
add
add
add
repnz
add
sbb
add
add
add
add
add
add
js
lcall
add
add
fadds
movb
add
add
add
fiaddl
push
add
add
add
add
fwait
add
add
cmp
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
add
add
add
add
add
dec
add
add
cmpsb
add
add
add
sahf
ss
sbb
ret
cmp
cli
dec
dec
ret
and
hlt
in
lret
xchg
cmp
test
das
dec
shrb
cmp
push
xor
sti
popf
xchg
xchg
repnz
xlat
xor
add
inc
pusha
mov
inc
dec
shl
mov
mov
mull
stc
dec
cs
push
cmp
pop
rcrb
add
js
test
mov
leave
stc
sbb
inc
mov
lds
ja
fadds
xor
lea
lret
sub
xor
roll
shl
fists
adc
xchg
adc
dec
and
repnz
leave
jmp
xor
movl
adc
jbe
xchg
stc
fmuls
lahf
fmul
in
jae
push
adc
xor
add
movsb
test
in
jns
push
sahf
xchg
lea
ss
push
xor
and
adc
sub
inc
cmc
fucomp
cmpb
sarl
das
mov
lods
mov
lds
mov
enter
inc
mov
sub
mov
push
adc
sbb
jle
fildll
or
or
stc
mov
outsl
adcl
fwait
in
loopne
mov
sti
clc
cmp
xor
pop
push
xchg
mov
rorl
fldenv
insb
shrl
add
push
or
push
inc
cld
jae
outsl
and
fwait
and
adc
mull
mov
dec
or
ja
xor
ret
adc
iret
add
jge
lret
dec
les
and
pop
push
int3
mov
pusha
xchg
leave
hlt
ljmp
sahf
test
cmpsl
mov
mov
xor
cmovs
mov
clc
sub
adc
adc
test
popf
sub
xor
out
in
test
mov
je
out
jne
fmull
mov
out
jl
jns
fidivrs
xchg
aas
inc
call
repnz
das
fiaddl
adc
lahf
gs
je
inc
movsl
loop
xor
cmpsl
cmp
lea
data16
sub
aas
push
xor
lea
movsl
xchg
mov
push
inc
aam
jle
jno
imul
dec
sbb
adc
cwtl
out
push
gs
pusha
hlt
xchg
push
mov
and
xor
mov
cs
mov
mov
or
cmp
push
ja
and
test
mov
push
fcoms
push
dec
inc
aaa
shlb
push
shlb
dec
in
sub
inc
lret
pop
cmp
cmc
inc
rcrb
jb
jbe
je
pop
mov
pop
xchg
bound
pop
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
