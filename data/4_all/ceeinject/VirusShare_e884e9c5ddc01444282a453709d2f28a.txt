xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
xchg
addl
xchg
ret
add
popl
push
pop
push
xchg
push
xchg
add
pop
push
xchg
pop
push
xchg
push
xor
pop
xor
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
pop
ret
push
xchg
add
ret
xchg
popl
push
ret
pop
push
xchg
mul
push
pop
push
addl
pop
ret
push
xchg
add
ret
push
pop
ret
add
ret
push
xchg
add
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
call
push
push
push
call
push
push
call
push
call
call
push
push
push
push
call
push
push
push
push
call
push
call
push
push
push
call
pushl
pop
call
push
push
call
push
call
push
push
call
push
push
call
push
cmp
jae
ret
add
call
jb
add
je
add
jne
add
popa
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
leave
ret
push
mov
push
push
push
sub
lea
mov
mov
rep
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
mov
rep
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
inc
push
stos
repnz
or
scas
test
cwtl
add
adc
lret
or
pop
pop
mov
or
lret
dec
les
out
sub
pop
cltd
inc
sbb
cmp
mov
sub
adc
rcrl
sbb
pop
negl
xchg
push
fs
add
or
lock
xor
sbbb
mov
mov
cmpsb
int
les
dec
add
mov
pusha
je
dec
add
ret
mov
push
jno
into
hlt
jge
mov
repz
xor
into
jb
jnp
lods
push
and
arpl
ss
js
adc
loop
enter
aad
pusha
jp
outsb
test
add
out
lcall
inc
jnp
mov
jg
sbb
and
xchg
add
adc
test
xchg
clc
inc
ja
xlat
loop
test
out
dec
mov
rcll
fnstcw
ljmp
leave
cmp
shll
testl
cwtl
loope
xchg
data16
mov
sbb
and
jae
ret
xchg
xchg
jmp
sbb
insl
inc
push
hlt
push
or
xor
lock
insb
xchg
cmpsb
rcrb
jg
repnz
mov
jp
mov
and
loopne
xchg
enter
push
xchg
push
int3
faddl
jmp
jecxz
cmpsl
je
stos
iret
int3
sbb
cmp
jo
xor
ja
sti
push
imul
pop
cltd
sar
push
sub
jge
jns
cmp
movsl
scas
in
mov
inc
push
mul
inc
pop
cli
mov
cmp
jnp
sub
sbb
lods
rcrl
pop
fsubrl
xor
cmp
jg
int3
pop
dec
in
pop
in
icebp
push
push
fidivs
cld
fldenv
lret
push
adc
mov
mov
test
clc
jo
in
pushf
fimull
dec
das
cmp
sub
lods
test
add
outsl
xchg
mov
jne
shlb
sbb
push
aam
test
aas
lods
clc
or
ror
or
in
adc
outsl
adc
into
imul
push
in
je
cmp
je
push
aam
mov
and
jle
aas
push
add
sbb
jo
popf
push
pop
insl
pop
or
jne
add
inc
mov
leave
xor
pop
push
xchg
mov
push
xor
js
dec
outsb
and
xchg
jmp
push
push
or
pop
std
xlat
orb
lods
fdivrp
jae
sbb
inc
cmp
loop
inc
lods
ficoms
adc
jge
dec
sarl
pop
cltd
sbb
out
mov
xchg
stos
lahf
lock
add
mov
enter
jo
outsb
push
adc
imulb
jg
jbe
shlb
push
ds
lret
fdivp
imul
loopne
lea
shrl
adc
push
cltd
pusha
std
and
scas
adc
cli
paddsb
pusha
cmp
les
xorl
repz
out
fidivrl
mov
or
data16
add
push
xor
and
das
cmpsl
and
leave
cmc
xchg
movsb
pop
jge
clc
gs
or
adc
mov
mov
sarb
dec
js
push
adc
mov
scas
adc
dec
and
jns
jmp
lret
and
adc
add
mov
stos
inc
pop
xchg
out
popf
xor
or
dec
mov
pop
jecxz
push
lahf
inc
aas
jecxz
pop
cmp
insb
jle
mov
adc
sti
lcall
icebp
nop
stos
jbe
xchg
or
aas
hlt
jns
or
or
imul
iret
cs
cmpsb
mov
scas
mov
fsub
fnsave
inc
rclb
in
xchg
cmp
aas
movsl
shll
into
daa
out
adc
jecxz
and
pop
mov
xor
sbb
sub
and
jns
stos
inc
push
test
into
not
pop
pop
sub
int
mov
pop
je
aaa
push
add
mov
xor
add
and
and
add
sti
inc
xor
mov
lods
cmpsb
jmp
rorb
icebp
add
aaa
mov
inc
loop
sub
daa
addl
pand
ficompl
pop
fistpll
inc
xchg
repz
test
push
mov
mov
pop
int3
xchg
lcall
xlat
std
xchg
imul
mov
add
mul
movsl
and
sub
push
dec
sbb
ds
or
jle
mov
sub
repz
xchg
jae
mov
pop
loope
jne
xchg
outsb
fldt
out
and
adc
hlt
js
xor
loope
shlb
lods
or
outsl
pop
adc
bound
mov
xor
adc
jl
shlb
sub
rcrb
sub
push
pop
or
mov
and
cli
arpl
push
mov
push
add
fnstcw
sbb
mov
dec
data16
loopne
sub
mov
jecxz
stos
sahf
or
in
add
adc
test
push
sti
sub
adc
push
fsubrl
sub
or
push
lahf
clc
mov
mov
xchg
ljmp
and
mov
jecxz
in
xor
mov
test
mov
jo
pop
push
push
or
fstpt
stos
sub
and
push
push
test
pop
cmp
ds
icebp
push
jp
pop
dec
int
inc
xchg
cmp
les
mov
mov
mov
fldenv
sbb
pusha
pop
out
pop
int3
data16
sub
fs
aas
inc
pop
cmc
dec
mov
lcall
fstps
outsb
or
mov
adcl
faddl
lock
xchg
inc
sub
ret
mov
pop
xor
mov
pop
xchg
mov
ficoms
xor
ljmp
test
sub
notb
and
notb
std
inc
pop
aad
mov
dec
xor
cmp
xlat
mov
add
cmp
inc
jmp
hlt
and
mull
sbb
es
push
xchg
movsb
pop
cmpl
leave
subb
popa
and
orl
ret
inc
cli
std
xchg
insb
adc
push
dec
push
pusha
lods
mov
mov
js
mov
xor
aas
cmp
mov
add
inc
shl
subl
lcall
test
mov
cmpsb
dec
jo
fsub
cmc
push
aas
sbb
fldcw
push
out
mov
mov
jo
bound
ss
lcall
in
cmp
lock
mov
push
icebp
inc
insb
ficomps
mov
cld
cmc
sbb
imul
outsb
pop
sub
sbb
cmpsb
pop
inc
xlat
jns
dec
adc
and
ud2
fnstenv
adc
and
imul
lcall
inc
inc
iret
or
push
lret
rcrl
sub
loop
jl
sub
enter
lcall
xchg
or
mov
dec
adc
dec
imul
aam
in
sub
pop
pop
push
jecxz
mov
adc
jle,pt
in
loope
cmp
or
xlat
mov
push
daa
stos
test
inc
jbe
push
mov
lods
mov
push
jg
fwait
adc
inc
pop
dec
scas
mov
icebp
mov
mov
dec
jecxz
adc
outsl
pop
sbb
mov
shll
aaa
mov
je
or
incb
xor
xchg
das
push
xor
xchg
in
arpl
mov
orl
push
scas
adc
lret
xchg
pop
out
out
sub
xchg
adc
inc
jns
sbb
subb
int
imul
fwait
aad
inc
dec
lock
shrl
ja
rcrb
xchg
shll
fcoml
insl
sbb
dec
fwait
dec
mov
fadds
sbb
adc
or
test
add
jne
sbb
jb
jl
dec
mov
into
or
mov
js
outsb
xchg
test
push
or
mov
aas
inc
repnz
out
sti
ss
inc
inc
je
iret
add
shl
sub
pop
fstpl
in
das
sbb
pop
sub
fldt
iret
cmpsb
and
xor
loopne
rolb
cmc
decl
gs
mov
aaa
cmp
mov
sbb
jb
ret
or
push
dec
sahf
vpshad
pop
xchg
add
loop
pop
sbb
sub
xor
dec
je
mov
mov
xor
cs
es
push
xchg
aas
mov
cmp
and
das
bound
nop
xchg
insb
push
inc
sbbl
aas
dec
push
mov
sbb
mov
cwtl
xchg
push
inc
aam
mov
mov
leave
mov
test
and
pop
mov
pop
out
xchg
shll
test
sub
add
push
imul
mov
xchg
insl
dec
dec
ljmp
das
pop
push
bound
dec
fwait
insl
lea
test
jno
jnp
pop
les
xlat
ss
cmp
bound
in
out
lods
push
sbb
lods
inc
push
xchg
or
ja
ret
test
imul
pushf
jl
ret
cmp
xchg
xchg
push
in
and
leave
lods
fisttps
push
test
adc
push
cwtl
lret
push
scas
popa
repz
sbbl
xchg
push
jg
loope
adc
test
mov
gs
pop
rclb
lret
enter
cli
add
rcll
xlat
dec
hlt
ficoms
jmp
mov
fs
scas
outsl
cmp
inc
or
lahf
or
adc
pop
in
aad
test
jnp
jle
mov
jecxz
push
ds
inc
xchg
mov
mov
cmp
pop
inc
das
sub
push
fstpt
adc
or
mov
xor
mov
sahf
notb
push
aad
or
or
jae
cmc
popa
mov
test
adc
mov
les
cmp
pop
adc
mov
popa
or
out
cwtl
in
sbb
int
mov
ljmp
std
ja
push
xor
sbb
addr16
pop
pushl
pop
in
pop
leave
jae
cltd
pop
mov
jge
lret
aas
or
mov
loope
push
push
pop
icebp
mov
in
mov
jae
jb
movq
scas
cmp
lods
pop
andb
add
repnz
xor
push
fmulp
cs
sub
das
aaa
lret
sbb
ss
sub
or
enter
cmp
imul
adc
xor
scas
pop
cltd
out
pushf
rcl
cltd
inc
push
sbb
and
popf
xor
out
inc
cwtl
leave
jmp
dec
push
pop
mov
xor
inc
jae
jae
sub
sahf
xchg
push
enter
pushf
mov
dec
aaa
mov
ja
sbb
fildl
scas
mov
pop
xor
dec
lock
out
in
cwtl
loop
test
xchg
lea
ficompl
movsb
stos
jle
sub
ficoml
mov
popa
testb
mov
je
mov
fldl
aad
push
or
mov
jno
in
adc
add
push
mov
lret
inc
push
adc
adc
insl
iret
repz
adc
and
adc
lock
add
add
sbb
pop
pop
jp
inc
hlt
inc
divb
mov
push
in
xchg
outsl
mov
repnz
fdivrs
dec
or
shrl
lret
pop
imulb
jns
outsb
pop
sbbl
add
ret
lock
xor
jnp
lds
imul
jmp
test
stos
add
or
push
cmp
mov
shll
aam
je
outsb
insl
mov
xor
mov
push
cmp
bound
mov
xchg
pop
pop
mov
pop
stos
repnz
cld
mov
or
std
fiadds
enter
mov
push
pop
popf
sbb
push
js
mov
shrb
shl
stc
mov
add
push
inc
sub
pop
cmp
pusha
inc
jge
jmp
lret
cmp
adc
or
popa
call
fcomps
call
out
push
inc
xchg
jno
jg
xor
aam
adcb
dec
imul
sti
ja
out
js
and
jns
xor
jb
pop
fwait
shrb
ja
push
and
lcall
and
adc
filds
push
shrb
popa
xor
and
decl
cmpsl
jecxz
mov
jns
sbb
add
sub
mov
mov
pop
sub
js
mov
mov
jp
cmc
decl
jmp
mov
dec
xchg
repz
lods
mov
push
popa
or
scas
mov
loopne
xchg
mov
add
push
inc
jbe
cmp
sbb
loopne
add
aas
jge
pop
add
inc
add
adc
add
jne
dec
mov
pop
cmp
cmpl
out
or
dec
cmp
adc
jns
fstps
and
in
dec
cmp
inc
and
inc
inc
pop
mov
out
ret
loop
sbb
into
jle
cs
stos
mov
repnz
enter
jbe
arpl
pop
push
adc
sarl
pop
repnz
jge
or
cmp
push
mov
mov
andb
adc
mov
sahf
push
rcr
or
cld
mov
inc
mov
or
hlt
sub
pop
frstor
pop
sbb
fldt
sub
aad
cmp
mov
dec
loope
push
cwtl
sub
cmp
das
in
xchg
addr16
or
popa
loopne
add
jae
adc
test
mov
fdivl
sahf
ja
in
mov
jp
scas
push
test
mov
popa
sub
shr
inc
dec
out
xchg
jo
pop
rolb
adc
pop
dec
sub
mov
out
xor
sbb
or
clc
popa
xchg
aas
pop
and
stc
into
lcall
xor
fildl
movsl
dec
xchg
out
and
mov
xor
imul
dec
sti
dec
shrb
cmpl
daa
hlt
gs
sarl
lret
inc
push
push
mov
cwtl
xchg
mov
xchg
pop
rcl
pop
mov
cmp
xor
andl
mov
push
shlb
vmovsd
sub
add
pop
add
out
insb
ds
les
add
fbld
call
sbb
push
sub
cld
cmp
xor
xchg
mov
stos
add
ss
push
jge
mov
sub
inc
xchg
mov
out
mov
pop
ss
cmpsb
in
fidivrs
xor
leave
or
imul
add
xor
inc
jnp
imul
sub
mov
dec
shrl
fisubrl
aas
mov
inc
js
shll
lock
jl
jge
int3
cltd
movsl
movsb
jbe
lods
push
inc
push
addr16
lods
int3
xchg
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
mov
cmp
pop
jp
xor
roll
xchg
xor
mov
dec
jge
dec
xchg
push
pop
test
push
mov
int3
or
sbb
xor
xor
mov
push
je
lahf
scas
rcrb
xlat
mov
call
lea
iret
f2xm1
inc
xlat
sbb
icebp
fcoms
inc
adc
aam
movsl
cmpsl
fdivr
jb
dec
xchg
sub
pop
jmp
cmc
rclb
mov
xchg
dec
nop
divb
cli
add
call
subl
pop
xchg
cmpl
lsl
cmp
adc
adc
fidivrl
nop
aam
dec
sub
inc
sarl
mov
jns
ret
jge
fnsave
in
dec
scas
inc
imul
out
mov
push
push
sub
mov
or
push
pop
imul
out
dec
push
pop
fst
jg
xor
push
insl
and
jnp
xchg
jnp
fmul
sub
cmp
daa
pop
mov
mov
mov
jae
fiaddl
je
outsb
jg
xor
lods
push
out
jo
xchg
cltd
cmp
mov
ret
and
add
lret
inc
or
or
daa
aas
cld
fistpl
push
jb
push
int3
dec
xchg
mov
in
mov
and
fcomps
push
cmp
jae
mov
mov
dec
push
jno
scas
jae
and
cmp
cmp
cld
test
enter
outsb
mov
insb
push
xor
not
jmp
lea
movsb
mov
mulb
mov
ficoms
ljmp
add
in
test
rorl
fstpl
add
xor
jl
xor
add
push
out
std
lds
std
and
mov
inc
ds
pusha
insb
loopne
scas
inc
aaa
pushf
add
push
push
xor
popf
push
iret
mov
ret
shll
xchg
jmp
cltd
cmp
loope
fcomi
and
xchg
jle
fnstenv
jne
lds
dec
pop
jno
lahf
ljmp
cmp
scas
or
addr16
mov
mov
jns
imul
jmp
mov
ss
dec
mov
jbe
lret
lret
outsb
sub
loopne
push
enter
jne
xchg
popf
lea
inc
inc
repnz
mov
popf
mov
rorb
add
cmp
xchg
sbb
pop
fs
in
dec
out
es
loope
sbb
and
insb
call
push
jae
sbb
mov
push
movsb
xor
jae
ljmp
fisubl
lret
xchg
add
out
cli
ss
mov
pop
xchg
iret
xor
lods
jb
popa
xchg
xor
xlat
das
or
pop
pop
inc
outsl
int
xlat
dec
ja
or
dec
cmp
notb
in
imul
fstl
xchg
add
cmc
mov
mov
dec
dec
fisttpl
cwtl
leave
or
push
repnz
int3
sbb
mov
in
scas
lcall
test
out
xor
dec
fisttps
xchg
testb
dec
inc
cwtl
xor
dec
jl
jg
pop
in
call
xchg
loopne
inc
mov
xor
push
rclb
insl
andb
dec
incb
dec
cli
lds
pusha
adcb
mov
cwtl
cmp
xor
mov
mov
mov
mov
inc
notl
cmpsl
iret
push
adc
cli
ljmp
pop
pop
mov
loop
cmp
lds
das
push
mov
mov
outsb
dec
mov
inc
xchg
pop
adc
out
cld
loope
push
mov
inc
jns
xor
lahf
icebp
ret
out
cltd
icebp
dec
or
or
or
cmp
sti
add
xchg
xchg
pop
xor
cmp
xor
sub
dec
psrlq
sub
or
fildll
cmpb
adc
or
sub
cmc
ljmp
pop
pop
cmp
addr16
dec
pop
out
into
push
or
adc
xor
pop
xchg
dec
rcrl
popf
sbb
push
push
dec
roll
xor
mov
xchg
xchg
out
jecxz
push
fucomp
mov
sbb
je
nop
jge
popa
lods
push
xor
xchg
in
xor
mov
scas
loopne
rcll
jno
sbb
bound
xchg
insb
cmpsl
nop
decb
sbb
cmp
test
imul
popf
cmpb
jp
adc
adc
xor
adcl
ret
lcall
loope
inc
movsl
xorb
ret
add
in
shr
loop
push
push
xor
popa
rcr
dec
push
and
jns
jecxz
jne
aad
popa
into
hlt
pop
inc
cmp
push
lahf
sarb
and
scas
lock
daa
and
xor
test
ljmp
xchg
stos
mov
inc
sbb
test
add
bound
dec
divl
pop
sti
arpl
jne
xchg
in
js
icebp
fnstcw
aaa
sarl
outsl
mov
mov
daa
loope
jge
scas
mov
jp
sti
int3
pushf
mov
or
sub
dec
cmpsl
cmpsb
mov
inc
fs
js
lods
insb
inc
pop
and
pop
mov
rdpmc
adc
not
pop
sbb
ficoms
sbb
xor
push
insl
icebp
sub
sahf
adc
adc
or
aam
ds
sub
mov
mov
pop
jno
push
cmpsl
xor
xor
dec
fmuls
inc
push
shlb
cmp
test
cmp
scas
test
mov
aam
dec
sbb
mov
pop
add
adc
mov
loopne
pushf
cmp
xchg
adc
scas
or
push
cmp
pop
xchg
aas
cmp
test
xor
jnp
les
push
xchg
nop
div
sbb
das
ret
inc
mov
push
pushf
inc
call
dec
sub
xchg
in
xchg
sahf
cmp
sbb
cmp
dec
mov
notw
jmp
shlb
out
mul
testl
pop
fistpl
jecxz
and
pusha
lods
cmpl
add
sub
lods
lds
sbb
movsl
and
or
mov
loope
arpl
cmpsb
or
lods
aam
fs
fidivrs
pop
test
movsb
mov
divl
xchg
cltd
fwait
cmp
mov
stos
dec
cmp
cli
add
call
stos
roll
push
mov
jl
cmp
outsl
push
je
pop
enter
les
scas
pusha
pop
mov
repnz
aam
mov
test
sbb
repnz
mov
mov
sub
andb
jge
jge
push
mov
stos
xchg
in
xchg
lea
sub
stc
mov
aam
mov
jecxz
pop
js
out
xchg
sub
in
movsl
test
jns
mov
mov
adcl
cwtl
mov
jge
mov
cmpsl
cmpsl
sti
lods
call
loope
fisubs
dec
pop
fldl
dec
cld
jbe,pn
sbbb
mov
push
mov
jge
xchg
bswap
pop
in
insb
not
fidivrl
push
mov
insb
or
and
mov
clc
mov
repnz
sbb
sub
xor
aad
aam
pushf
arpl
mov
icebp
nop
aad
mov
aas
scas
test
aam
test
adc
sahf
sub
dec
sub
push
mov
add
sub
sub
loope
dec
or
adc
fstpt
pushf
cltd
sub
iret
shl
ret
mov
insb
inc
nop
sub
sub
push
pop
roll
enter
sbb
mov
outsl
and
inc
jge
sbb
iret
xchg
dec
pop
mov
sub
scas
addr16
in
fildl
push
dec
fcmovu
vsubpd
xchg
pop
lcall
dec
push
pop
sub
mov
mov
or
pop
ret
repz
out
sti
dec
xor
ds
sub
sub
out
xor
out
add
leave
in
test
adc
pop
add
aam
xor
gs
arpl
inc
jo
mov
mov
cltd
jnp
inc
add
push
jns
push
gs
clc
cmp
je
rorb
xor
inc
add
add
icebp
das
add
lcall
sbb
xlat
add
aam
insl
leave
cmp
adc
jae
loope
pop
dec
movl
xchg
fnstsw
into
mov
fldt
js
rcrb
jbe
inc
jmp
xchg
pop
push
add
pop
jp
pop
lods
cmp
data16
cwtl
int
jo
xchg
fwait
xor
punpckhbw
out
mov
adcl
mov
mov
stos
mov
pushf
push
pop
xchg
push
outsl
push
sarb
movsb
enter
test
pop
mov
adc
jl
jle
bound
mulb
cmp
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
dec
sbb
pop
jg
arpl
in
sarl
sahf
leave
xchg
adc
movsb
sbb
ss
add
inc
dec
in
addb
xchg
sbb
cli
mov
aaa
lods
jge,pt
jecxz
jp
scas
adc
ret
in
xchg
mov
and
fcomi
call
test
dec
int
inc
jecxz
stc
aas
xlat
xor
push
mov
popf
inc
sub
cmpsl
xchg
mov
xor
testl
push
sub
fistpl
xchg
pusha
push
pop
push
scas
neg
inc
mov
cmp
inc
iret
loop
fs
mov
add
mov
mov
shlb
sbb
bound
mov
in
push
xchg
insb
ds
jns
stos
mov
leave
mov
hlt
inc
mov
push
addr16
mov
rcll
cmp
outsb
mov
mov
jo
or
jl
push
push
lds
sbb
jp
sbb
dec
in
add
cmc
incb
lahf
ss
ljmp
dec
pop
lea
imul
decl
cmp
aad
mov
lods
adc
mov
in
xor
inc
pop
mov
gs
push
pop
or
xchg
jns,pt
mov
mov
cmp
mov
call
mov
dec
daa
mov
lcall
cwtl
rclb
fistpl
imul
icebp
mov
lahf
shlb
or
ss
sbb
testb
out
adc
inc
js
and
xchg
xchg
inc
pop
mov
dec
hlt
mov
iret
sub
push
mov
lock
mov
iret
xchg
xor
sub
sub
jbe
je
push
nop
mov
xchg
push
lahf
out
jnp
pop
inc
mov
cmp
call
lret
iret
xor
pop
jmp
mov
scas
cmp
xor
push
enter
push
das
mov
or
sub
add
shl
pop
das
hlt
xor
popa
mov
mov
lret
loop
dec
cmp
push
fwait
inc
mov
pop
cltd
dec
and
adc
mov
daa
test
pusha
mov
pop
lock
stos
jne
jl
lahf
lock
sbb
xor
xchg
dec
xchg
dec
repz
mov
pop
xchg
jne
jno
in
dec
imul
dec
ja
mov
cmpsl
push
mov
push
jl
mov
int3
add
lcall
xchg
push
push
xor
or
push
sbb
push
xchg
ret
scas
fucomip
je
lods
insb
sbb
fwait
jle
xor
mov
xlat
fs
jle
mov
sbb
jg
xchg
lods
in
test
popf
mov
pop
jae
test
push
cmp
push
add
jmp
xchg
xchg
stc
lahf
sub
sub
mov
jns
sbb
jno
jmp
scas
cmp
notb
pextrw
dec
and
and
dec
insl
pop
adc
xor
ja
xor
add
inc
sub
mov
xchg
mov
jecxz
int
xorb
xor
mov
lret
add
or
enter
sub
mov
rol
ret
add
ror
mov
ficomps
daa
inc
cltd
call
insl
adc
loope
mov
sbb
fistps
push
lahf
fs
or
push
inc
and
outsl
xor
xor
in
int
dec
lock
add
push
mov
cmc
imul
in
xor
jge
insl
fldpi
in
add
jne
or
sub
insl
lret
mov
dec
xchg
nop
mov
xor
imul
push
add
jbe
mov
hlt
or
add
xchg
sbb
ret
jge
or
mov
iret
mov
mov
aam
das
js
mov
test
pop
ret
or
cmp
mov
pop
jl
in
fnstsw
mov
jl
test
cmp
dec
popf
sti
mov
mov
mov
not
test
mov
jmp
dec
and
sarl
cmpsb
mov
pop
out
sahf
jle
adcl
outsb
out
mov
stos
dec
xchg
add
dec
push
lret
xchg
lods
xor
std
stos
inc
dec
and
add
and
out
fcompl
ret
jge
or
add
leave
sub
bound
scas
cmp
or
jle
lock
jo
lret
push
mov
faddl
pop
mov
sbb
sbb
dec
outsb
testb
ret
cmp
outsb
ds
mov
sub
add
aad
sbb
inc
call
jnp
roll
inc
inc
cltd
xor
xor
or
mov
mov
test
and
insb
sahf
fistl
dec
loopne
xchg
fcomps
and
inc
pop
inc
push
or
out
lcall
mov
fsubrl
jns
push
mov
ljmp
sbb
out
ret
aas
test
mov
or
mov
and
sbb
lahf
aam
jp
add
sti
adc
sub
lds
jns
xchg
pusha
or
aam
mov
lcall
scas
stos
and
sti
fs
jne
orb
pusha
sub
movl
adcb
inc
dec
sti
pop
out
add
inc
xchg
or
shrl
jbe
fbld
jbe
mov
pushl
xchg
push
xor
ficoms
and
ror
cmp
xor
add
cmpsb
les
aam
ret
aas
and
test
repz
pop
fbstp
ret
rcl
add
pop
jp
sbbb
imul
test
mov
in
pop
inc
movsl
das
xchg
mov
out
push
cmp
rcrb
xor
xchg
push
cmpsl
fs
cmc
shl
mov
cltd
xlat
inc
loope
test
gs
daa
in
or
frstor
cmp
dec
insl
xor
negb
and
lds
mov
imul
setg
jne
mov
cwtl
lea
inc
sahf
pop
andl
pushf
sbb
fst
dec
jp
xchg
add
cwtl
add
jmp
lret
inc
sub
mov
in
out
test
sbb
sbb
repnz
dec
dec
rcll
stc
mov
pop
shll
popa
jge
sbb
sub
stc
bnd
in
mov
adc
dec
aad
test
ja
jle
imul
lods
stos
test
push
mov
ret
pop
lahf
cld
cmpsb
add
or
jle
pop
mov
mov
aaa
adc
sbb
dec
stos
jae
js
adc
loope
sub
ret
pop
jae
orb
xor
lahf
and
call
mov
add
or
stos
mov
cmp
mov
sbb
push
add
sti
stos
stos
lret
stc
add
cli
lret
aad
adc
add
ret
lods
outsb
mov
xchg
ja
in
sahf
adc
in
mov
pushf
ljmp
test
mov
sub
mov
cli
sbb
inc
ss
mov
and
inc
sub
xorb
aaa
rorl
xchg
sub
test
sbb
mov
jb
ljmp
vcvtss2sd
cmp
stos
jmp
hlt
fldenv
aaa
sbb
test
pop
sarl
cltd
mov
adcb
adc
es
jb
lea
inc
inc
je
aam
bswap
and
das
les
stos
jae
js
adc
js
fmul
aaa
out
jp
jns
loopne
outsl
icebp
aad
int3
popa
int
mov
mov
and
mov
mov
pop
mov
cmp
mov
push
add
sti
stos
stos
lret
bound
in
mov
insl
rol
push
popf
dec
inc
es
lea
push
dec
mov
and
fwait
movl
enter
cmpsb
inc
inc
sbb
dec
ljmp
jae
inc
ss
mov
and
js
xchg
into
mov
push
fsubrs
xchg
cmpl
popa
out
push
add
pop
cli
out
push
pusha
jmp
idivb
sbb
or
push
mov
sti
jg
fcom
lcall
mov
xchg
xor
push
xchg
fwait
movsl
icebp
repnz
mov
push
ljmp
adc
jae
loop
or
or
pop
mov
xor
das
scas
insl
jge
xlat
popa
scas
in
aad
stos
mov
xor
xchg
insb
test
scas
imul
fldl
jbe
lock
xlat
pop
add
fcomi
fistl
addr16
mov
mov
daa
lea
dec
inc
outsb
lret
loope
adc
mov
inc
ja
icebp
cmp
lea
data16
push
mov
dec
mov
cli
repz
mov
or
mov
pop
es
mov
popf
mov
pop
js
mov
mov
push
mov
ret
aas
cld
lret
pop
iret
pushf
mov
or
aaa
mov
and
sbb
lds
or
pop
sub
cmpsb
repz
jecxz
push
adc
sub
pop
xchg
in
cmp
dec
repnz
pusha
inc
add
dec
into
pop
pop
shll
pop
outsl
test
fsubl
cmp
sub
les
mov
or
arpl
jne
cmp
aad
jae
lret
jnp
xlat
or
xchg
or
dec
and
xor
xor
jmp
adcl
insl
jge
push
mov
jecxz
xorb
xchg
leave
cmp
icebp
mov
add
mov
sub
fwait
dec
mov
imul
sarb
insb
test
outsb
mov
mov
cmpsl
xlat
lea
in
mov
add
fistl
leave
push
hlt
jns
xchg
mov
mov
and
jmp
cmp
mov
mov
ja
enter
mov
bound
cmp
in
mov
sarb
mov
sbb
in
mov
mov
ficomps
repnz
imul
mov
arpl
or
xor
dec
data16
pop
lea
add
and
pop
fdivrl
adc
lret
xchg
and
repz
push
out
jne
lods
xor
mov
clc
iret
adc
xchg
and
pop
loop
sub
in
mov
mov
aam
test
pushf
or
mov
mov
sub
icebp
push
adc
lret
mov
in
cwtl
sbb
in
mov
sti
push
lds
rcll
aas
push
and
test
dec
lds
outsl
inc
fisubs
push
add
cmpsl
cwtl
fwait
adc
lcall
pop
xchg
push
sti
aad
out
mov
rcrb
add
cmc
pop
inc
es
push
pushf
jmp
pop
repz
test
jne
test
push
imul
lcall
mov
iret
xor
sbb
pop
adc
lret
stos
inc
push
jecxz
dec
addr16
jg
ret
and
sub
imul
popa
push
int3
movsl
aam
call
mov
and
push
adc
inc
lea
fnstenv
mov
jg
push
iret
aad
mov
int3
test
mov
negl
test
and
jns
lea
imull
jge
mov
faddl
and
stc
pop
xor
and
xchg
clc
sbb
jno
call
gs
inc
push
jnp
ret
sbb
lahf
push
leave
mov
mov
sbb
mov
addr16
adc
pop
pop
bnd
cli
xor
xchg
adc
fs
cwtl
jge
mov
add
or
mov
mov
jns
pop
add
das
insl
sub
gs
pop
pop
aam
aam
orb
or
ss
sbb
ja
fwait
lods
adc
jl
hlt
cmp
subb
adcb
repz
stc
test
cmpsl
xchg
jno
cmp
sbb
outsb
test
push
sub
movsb
scas
and
outsl
das
lock
mov
aas
repnz
mov
inc
mov
xchg
xor
add
and
xlat
mov
shlb
shlb
arpl
js
stos
negl
xor
sub
mov
mov
jns
outsl
cmp
lock
pop
add
xchg
out
icebp
push
in
or
jb
js
pop
add
divl
jl
lcall
xor
aas
lods
add
add
loopne
sahf
dec
mov
loopne
pop
or
lahf
iret
jl
push
fsubs
movsb
and
and
dec
scas
adc
out
jnp
je
add
dec
or
lea
lret
out
mov
fldz
in
fidivl
cmp
shlb
mov
inc
dec
jle
fsubrl
fstpl
bound
lcall
jl
add
xor
test
cltd
jp
inc
sbb
pop
outsb
mov
sub
hlt
sub
cmpsl
push
push
pop
ret
mov
cmpsb
sub
fisttpll
jg
add
jo
je
lock
adc
popa
test
sub
push
jne
pop
aad
popf
sub
cmp
cmp
adc
jne
pop
icebp
movsb
xchg
mov
push
mov
adc
push
pop
mov
lds
mov
push
sahf
cli
in
or
roll
insb
into
and
mov
fldpi
add
dec
in
cwtl
sbb
movsb
xor
cmp
adc
add
or
lods
inc
xchg
scas
dec
shl
mov
fimuls
sub
stc
cmp
ret
mov
int3
loop
cwtl
ret
cltd
and
jecxz
outsb
imul
fldcw
add
sbb
cmp
in
mov
icebp
adc
cmp
xchg
nop
push
push
inc
in
popf
xchg
loope
in
notl
fisttpll
adc
insl
add
sbb
xlat
out
pop
sahf
out
bound
mov
mov
idivb
cmp
out
imul
outsb
jmp
inc
outsb
push
in
xchg
push
jmp
not
sbbb
cmp
nop
cwtl
rorb
rcrl
lods
push
xchg
push
mov
std
cltd
adc
shlb
push
xor
mov
ss
outsl
fiaddl
sub
sub
xchg
clc
clc
pop
mov
call
push
into
sub
inc
lret
xchg
mov
mov
push
ljmp
ror
int3
scas
add
notl
mov
sti
mov
aas
or
mov
jmp
test
cmp
loopne
scas
imul
rol
in
and
aad
cli
mov
mov
adc
out
sbb
dec
xchg
jo
xchg
push
jb
test
imul
movsl
mov
jg
fwait
pop
xchg
cmp
cmpb
ret
adc
sub
sub
mov
test
pop
mov
loopne
nop
inc
sti
lret
fcomps
data16
sub
pop
mov
pop
sbb
xchg
insb
lret
cli
idivl
mov
imul
add
or
mov
bound
nop
and
testb
jo
cltd
int
sub
aad
scas
xchg
jg
inc
sti
and
pop
clc
mov
fsubl
sti
out
push
mov
jns
lods
mov
push
outsl
jle
lds
test
popa
push
mov
add
in
stos
lahf
mov
out
adc
lea
in
pop
nop
ficompl
push
sbb
icebp
jmp
and
sub
mov
jo
aas
sti
add
mov
mov
jge
and
sub
cmp
outsb
fdivp
push
mov
xchg
mov
imul
enter
mov
nop
xor
sar
push
push
mov
cmp
dec
add
in
fs
ljmp
xor
sbb
pop
insb
lods
push
dec
mov
fisttps
sbb
nop
sub
and
xlat
mov
dec
sub
popf
aaa
ds
push
lods
hlt
mov
fwait
scas
mov
cmc
mov
mov
mov
add
and
arpl
js
inc
inc
popf
loopne
imul
jno
xchg
pop
pop
incb
inc
jge
ds
xor
pop
adc
ss
fiaddl
aas
adc
push
inc
lods
adc
push
rcrb
jg
mov
pusha
mov
popf
mov
adc
add
inc
cli
mov
out
popf
xorl
orl
repz
xchg
lahf
into
inc
mov
stc
jecxz
repz
imul
test
in
cli
clc
add
mov
mov
scas
rorb
jle
aad
popa
push
out
mov
cli
xor
jb
or
enter
adcl
jg
pop
xor
jnp
mov
arpl
cmp
adc
jg
ja
aas
js
xor
shrb
insl
sbb
xchg
add
add
push
pop
mov
std
fcomip
repz
ficompl
sti
dec
stc
nop
mov
xchg
jl
adcb
add
cmpsl
cmp
push
scas
jne
lock
adc
inc
les
in
mov
push
stc
xchg
scas
inc
mov
and
push
ljmp
ret
cwtl
or
sub
lahf
add
pop
mov
cltd
mov
ret
lods
xor
int3
adc
push
jae
stos
xor
lods
or
xor
pop
notl
dec
pop
test
mov
ss
pushf
cmp
leave
xor
dec
in
ja
into
jp
test
rorl
hlt
push
push
scas
shrl
pop
aas
ss
std
out
mov
cmpsl
scas
icebp
mov
ljmp
jl
push
mov
pop
jl
out
mov
add
pop
xor
adc
mov
sar
enter
sub
mov
nop
jg
and
cmp
sarb
daa
ds
outsl
xchg
mov
xchg
pop
lods
and
sub
jae
push
insb
mov
or
imul
xchg
test
test
rol
insb
mov
xchg
jl
fisubs
or
pushf
je
cmp
cmp
jmp
iret
mov
jbe
cmpsl
fimull
xor
xor
jg
mov
mov
pop
lds
sarl
dec
int
arpl
pop
pop
mov
cs
ficompl
fistl
orl
in
cmp
ljmp
ret
and
icebp
jbe
enter
push
jae
sub
arpl
pop
sbb
pop
mov
insb
sbb
fucomp
pop
dec
shlb
es
aam
pushf
adc
sub
pop
inc
sbb
xlat
mov
push
loope
xor
stos
push
lret
mov
call
dec
dec
aas
xlat
jg
xor
bound
lret
rcl
mov
int
loope
pop
xor
cli
pusha
int3
cmc
fdivp
mov
pop
cmpsl
sarl
test
inc
and
mov
daa
out
pop
mov
sub
sbb
enter
mov
mov
rcrb
fcompl
mov
push
es
call
mov
ret
lcall
and
call
loopne
cmp
pop
inc
dec
or
or
sti
xor
push
xor
sub
adc
cli
cmp
clc
xchg
lea
test
inc
enter
mov
cmp
aaa
adc
les
bound
mov
insb
shrb
sahf
lock
cmpsl
enter
mov
and
aas
add
dec
sbb
xor
aad
add
xchg
dec
arpl
lcall
xchg
jne
stos
repz
jg
es
push
fstpl
sub
push
and
pop
xor
dec
aas
jns
sbb
push
or
sbb
cwtl
nop
out
int
cmp
adc
icebp
std
outsl
push
outsl
mov
in
lock
inc
popf
sbb
aam
mov
dec
add
and
test
sbb
inc
pop
inc
pop
jbe
add
stos
add
repz
lret
lea
and
xchg
shlb
in
insb
jo
and
stc
orl
lods
cwtl
pop
push
add
push
adc
or
fimuls
xor
inc
rcrl
jge
cli
pop
in
jge
insb
adc
dec
mov
loope
popa
mov
cmp
mov
mov
cmc
fisubrl
mov
xchg
inc
mov
in
xorl
mov
adc
dec
fistl
movsb
jg
xor
iret
outsb
in
xlat
inc
popf
jl
sar
out
jo
mov
cmp
jns
push
jecxz
cmpsl
addr16
cmc
les
cmp
nop
mov
movsb
icebp
dec
inc
bound
imul
jno
out
mov
jb
pop
lret
cltd
push
ret
shl
test
les
or
jo
jns
dec
dec
aad
xchg
pushf
int
stos
pop
sbb
icebp
inc
or
jns
dec
loope
or
fiaddl
mov
js
jbe
insb
test
mov
pop
loope
mov
into
mov
dec
add
mov
jle
push
mov
cwtl
lret
xchg
testl
aas
adc
xchg
outsl
neg
cs
cld
mov
and
out
in
mov
mov
rep
mov
push
stos
xchg
sbb
ljmp
dec
add
outsb
sub
int3
lods
popa
push
xchg
push
mov
push
inc
mov
pop
dec
xor
xchg
cli
repz
pop
insl
incl
push
fcmovnbe
push
fdivr
push
jmp
cmp
clc
repz
pop
lea
rcrb
loope
cmp
daa
jbe
mov
push
mov
das
js
dec
pop
imul
ja
and
not
dec
hlt
push
adc
mov
test
testb
lods
xor
fbstp
push
add
xor
dec
fildll
cmc
or
inc
cwtl
mov
pop
mov
in
lods
pop
int
fwait
and
stos
pop
ret
les
push
mov
insl
mov
mov
sbb
jge
add
aas
xlat
stos
cmp
xlat
test
imul
and
add
mov
xchg
shrb
xlat
adc
push
jnp
push
lcall
fnsave
bound
hlt
mov
jnp
mov
or
fdivrl
shrl
pusha
clc
or
sub
dec
add
fs
mov
sub
dec
ja
out
xorb
mov
int
pop
inc
mov
mov
punpckhwd
aam
test
aam
adc
mov
mov
mov
pop
xor
in
sub
and
or
lods
mov
popf
loopne
or
and
dec
lock
cli
pop
inc
xchg
shrb
pop
ljmp
xchg
mov
es
js
iret
shlb
lret
subb
jle
fadd
ljmp
xchg
bound
mov
loope
adc
bound
repz
jl
mov
ret
rcrl
shrb
fcmovbe
mov
dec
xchg
dec
lret
cmp
pop
or
jb
sbb
sti
lret
inc
fimuls
sbb
hlt
pop
cmp
cmp
sub
push
pop
xchg
or
inc
lret
fwait
mov
xor
push
and
adc
stc
pop
test
aaa
mov
inc
ret
cmc
fwait
out
mov
imul
pop
push
and
lcall
lods
mov
cld
ds
sub
xchg
or
pop
movsl
test
cltd
arpl
xchg
dec
fmul
mov
mov
mov
inc
sahf
push
mov
ret
inc
sub
mov
inc
jnp
fwait
js
xchg
jns
psubsb
int
stc
xorb
ret
lods
jne
stos
lret
xor
cltd
das
adc
lcall
mov
jge,pn
mov
das
pop
loope
sbb
sbb
pop
dec
sahf
lret
cli
dec
push
leave
test
inc
movsl
cmc
pop
jnp
cs
dec
stos
xchg
sub
mov
push
test
or
and
pop
mov
testb
inc
dec
jmp
incb
and
sub
adc
xchg
add
gs
dec
into
mov
inc
imul
data16
push
in
push
in
aaa
aas
test
mov
mov
cld
mov
stos
or
push
jp
push
jmp
scas
xor
xlat
xchg
xor
push
xchg
stos
inc
shll
sbb
xor
orb
daa
xchg
inc
push
xchg
cmc
pop
sbb
pop
xor
mov
sub
inc
arpl
inc
repz
sub
lret
mov
push
cmpsl
pop
sbb
pushf
in
pop
dec
jno
loop
inc
int
mov
mov
mov
cmp
xchg
dec
pop
push
adc
cli
jmp
inc
push
addr16
mov
cmp
lds
mov
iret
jns
cmpb
dec
mov
test
inc
jl
inc
mov
sbb
sarl
mov
loope
test
out
sti
mov
sti
or
test
sbb
imul
and
push
mov
out
repz
xor
sub
mov
outsl
negb
xlat
daa
inc
js
mov
push
dec
imul
mov
add
inc
push
test
test
iret
mov
dec
add
inc
rcrl
pop
call
dec
xchg
mov
in
movsl
sahf
dec
inc
fstpl
xor
lea
mov
add
ja
push
mov
insb
xchg
sbb
cmp
ds
adc
cmpsl
sarb
fsubrp
or
dec
repnz
lcall
sub
jmp
enter
add
pop
jns
sub
dec
push
or
sub
push
enter
aam
lret
rorb
je
or
add
xchg
or
sarl
popf
pop
sbb
or
iret
dec
pop
scas
iret
in
ja
lret
pop
movb
push
jge
in
shll
repnz
xchg
in
xchg
jo
shll
sbb
fcom
call
rcll
mov
xor
fs
out
xor
push
cmp
push
lds
inc
xchg
cmp
xchg
sub
jge
popf
mov
inc
test
pop
pop
push
arpl
sub
pop
adc
pop
push
or
and
lret
fs
pop
mov
cld
push
mov
inc
adc
hlt
das
insb
fcoml
pop
adc
mov
fisttps
in
or
cld
lcall
imul
inc
pop
lock
imul
inc
imulb
inc
inc
jo
push
rcrl
jmp
fdivr
pop
aaa
das
aad
mov
mov
daa
sti
aam
fwait
mov
js
cld
fcoms
jb
sti
in
or
stc
das
insl
insb
mull
fimull
sbb
cmc
lret
sbb
jecxz
call
testl
clc
jb
cwtl
xchg
pop
mov
lods
rol
and
icebp
je
sbbb
pop
mov
pop
bound
inc
repnz
lock
pop
fidivrs
ret
xchg
mov
push
push
dec
lods
mov
sbb
loope
cmp
mov
xchg
iret
nop
addr16
fistl
xor
push
fmull
xor
mov
clc
cli
xor
jns
jge
negb
sub
fisttps
mov
div
popa
push
sub
cmp
dec
and
std
pop
fnstcw
stc
inc
mov
imul
mov
cmp
mov
pop
inc
lahf
arpl
fnsave
mov
and
mov
out
jnp
adc
mov
mov
int
out
cmp
mov
in
lcall
or
aas
adc
nop
add
imul
push
mov
sahf
setg
push
imul
mov
mov
aas
adc
in
xor
aaa
pusha
adcl
fwait
loopne
mov
jb
jmp
mov
add
mov
aam
jg
aaa
lock
sub
and
mov
sub
or
adc
lds
in
fidivl
cs
cmp
aas
aad
ret
ljmp
inc
out
punpcklwd
aad
add
inc
fimuls
pop
sbb
mov
push
add
or
outsl
aad
stos
ljmp
call
push
push
pop
jne
pop
aaa
ss
repz
sub
flds
xchg
nop
cmp
das
pop
dec
jnp
nop
mov
mov
cmp
lods
decl
xchg
push
outsb
imul
fwait
push
out
and
ror
mov
cld
xor
pop
jle
repz
repnz
les
fwait
xorb
mov
dec
sahf
imul
jmp
mov
test
and
push
pop
pop
loope
mov
and
dec
sub
ss
xor
xchg
jmp
mov
fnstsw
in
hlt
mov
gs
mov
cld
inc
jne
jmp
cmpsb
faddl
mov
je
addr16
dec
push
adc
mov
hlt
push
jb
nop
movsl
in
jmp
scas
in
fstl
push
int3
cwtl
jecxz
push
loop
dec
cmp
pop
or
stos
fsubs
xchg
gs
xor
jbe
rclb
repnz
ficoml
rep
add
jns
test
aas
xchg
mov
cmpsl
mov
mov
mov
sub
mov
mov
sub
enter
negl
sbb
hlt
push
dec
divb
loopne
adc
adc
test
imul
fstpt
or
push
cld
sub
mov
xor
and
test
and
xchg
inc
enter
mov
and
and
pop
es
mov
push
rol
cmp
lods
sub
xlat
add
sub
jge
fdivrl
jo
cwtl
or
cmp
push
jmp
pop
mov
loope
fldt
push
dec
lock
ret
dec
stos
sub
aad
or
sub
adc
push
arpl
lock
data16
xchg
mov
sahf
ss
repz
sbbb
push
lods
je
xor
mov
outsl
aas
xchg
cmp
pop
sub
inc
gs
sub
test
clc
dec
imul
cwtl
lahf
subl
stos
push
stos
ret
push
xchg
sarb
xor
pusha
xor
lods
mov
push
stc
imul
dec
inc
stos
js
imul
mov
mov
lret
dec
lahf
call
fbld
mov
cmc
adc
mov
hlt
add
jecxz
cmp
jmp
mov
lods
je
mov
ds
popf
fisubrl
dec
dec
pop
rcr
fidivs
insb
fnsave
dec
stos
movsb
mov
cmpxchg
js
jg
push
dec
sbb
inc
aam
sub
scas
rcl
divl
outsl
jbe
sub
mov
jb
cmp
out
or
xchg
popa
dec
cmpsl
shl
cmp
cltd
cmp
arpl
or
jo
jo
jge
aas
lahf
loope
fcomip
push
xor
stos
jae
pusha
divb
lahf
scas
dec
and
pushf
call
cmp
subb
aas
adc
lea
popf
cmp
mov
add
cs
xchg
mov
stos
lret
jl
jb
cmpsb
mov
into
cmc
jmp
dec
lods
frstor
add
xor
movsb
xor
push
cltd
jbe
aas
sbb
push
fstpt
sbb
xor
fidivs
testb
outsb
test
push
push
mov
imul
mov
push
sub
xchg
xlat
mov
cli
shrl
das
pop
les
sub
js
fimuls
adc
mov
jp,pn
fwait
pop
pop
andb
mov
daa
mov
cs
aad
lds
dec
push
inc
imul
push
imul
lret
sbb
aas
or
aam
mov
mov
and
sbb
les
stos
jb
or
pop
cmp
xor
outsl
add
adc
sub
push
jge
inc
jns
add
repz
in
adc
jnp
xor
push
dec
mov
data16
stos
push
xor
in
xor
imul
data16
addr16
cmp
adc
adc
jecxz
lods
ret
fistl
mov
jb
jle
mov
add
or
cld
sbb
inc
pop
inc
ss
adc
dec
std
mov
data16
jg
lret
inc
adc
dec
push
fcmovb
xlat
lahf
jbe
test
adc
lcall
xchg
mov
mov
cmp
pop
push
loopne
in
mov
sbb
lods
leave
je
iret
add
mov
insl
adc
mov
popa
imul
inc
mull
pop
and
jmp
sbb
das
popa
sub
ss
mov
add
sbb
cmp
mov
out
cli
ret
adc
cld
mov
test
jle
pusha
out
fldt
adc
dec
into
cld
xchg
push
test
ss
jp
stc
xlat
jbe
jp
xlat
ja
add
lahf
ds
xor
ds
aas
cld
and
mov
mov
fwait
add
divl
les
mov
jge
jl
or
pop
mov
cmc
mov
lods
ja
mov
insl
lods
xchg
sub
push
cmp
lods
int
mov
out
adc
rcrl
lds
fwait
ret
inc
push
or
insl
shll
dec
fidivs
stos
jle
data16
scas
dec
repz
sbb
xor
or
push
mov
das
sbb
lahf
jns
jecxz
and
ljmp
jp
popf
in
ja
nop
mov
repz
pop
popf
rcrb
mov
testl
jno
push
insl
stc
fisubl
xor
into
test
test
mov
ret
leave
aaa
or
push
popa
daa
push
stos
scas
xchg
pop
cmp
inc
jbe
adc
cmpsb
mov
lods
es
sbb
dec
jg
jp
add
lds
rorb
and
hlt
cmp
pushl
gs
in
push
jmp
or
jo
scas
mov
iret
sbb
dec
adc
icebp
xchg
repz
jl
jo
add
inc
mov
dec
pop
je
mov
in
cs
lret
lds
inc
adc
sbb
lahf
jae
xor
lret
mov
das
repz
int3
fucom
and
jne
pop
aad
pop
xchg
lcall
jecxz
push
sub
xchg
xchg
pop
ss
arpl
ss
popf
aaa
pop
pop
or
lret
lods
mov
int3
adc
rorl
pop
sub
imul
pushf
mov
inc
adc
int3
int3
insb
sub
clc
int
mov
jo
adc
add
push
iret
adc
imul
movsb
subl
pop
lea
mov
mov
stos
adc
sub
pop
adc
and
lock
bnd
loope
sub
sub
decl
sbb
fsubs
adc
cmpl
movsb
xlat
and
mov
cmp
cld
fbld
daa
pop
gs
or
cld
xchg
sahf
ss
fadd
mov
shlb
in
lds
mov
mov
inc
fidivrl
fisubs
out
test
fs
or
repz
or
mov
frstor
subb
pop
sbb
pop
cwtl
leave
push
xorl
or
lret
testl
data16
aaa
jmp
xchg
cmpsl
lahf
xchg
and
out
pop
xor
mov
xor
xchg
fcoms
xchg
adc
jl
sti
mov
pop
lods
repz
xor
in
ljmp
xor
jne
pop
jns
xor
int
popf
lahf
push
sub
fs
xlat
jo
loop
fimull
and
test
and
lret
je
outsb
push
test
jg
jp
mov
sub
xchg
inc
add
popf
stos
or
push
aam
push
call
add
sbb
jl
inc
push
mov
jno
xor
add
jmp
dec
imul
pop
xchg
jge
dec
shlb
adc
in
loop
mov
ret
sarb
lods
mov
insb
imul
cmp
pop
add
out
ljmp
inc
xchg
mov
into
mov
jo
adc
pusha
inc
addr16
pusha
inc
sti
sarb
cmp
sbb
inc
mov
dec
ljmp
hlt
xchg
add
ret
sbb
inc
clc
xor
lods
xlat
inc
cmp
mov
movsl
mov
adc
test
xor
jbe
mov
dec
adc
xchg
jnp
xor
dec
mov
outsb
faddl
loope
pop
push
cmc
stc
popf
inc
aad
out
out
mov
add
test
popa
xor
sbb
or
aas
and
jno
push
popf
sti
filds
in
lods
mov
mov
insb
out
mov
sbb
cmp
adc
pop
fwait
and
mov
rolb
xchg
cmp
jno
hlt
stos
push
inc
add
in
in
push
dec
mov
push
xchg
aaa
repz
cmpsb
enter
and
cmc
jp
sti
mov
mulb
int
sahf
mov
mov
leave
repz
and
add
add
popl
cmpsb
pop
xchg
divl
pop
pop
lret
jecxz
cwtl
cmpsl
add
leave
test
push
inc
mov
add
jp
rcr
inc
fcoml
in
push
es
addb
mov
fbstp
mov
daa
adcl
movsb
or
leave
int
pop
mov
mov
mov
cld
mov
cld
cmp
arpl
adc
ret
lret
pop
outsb
mov
movsl
mov
or
mov
mov
popf
jae
push
call
ljmp
mov
loopne
cld
inc
aas
jo
xor
push
sbb
bound
mov
add
mov
dec
xchg
xlat
inc
sub
cmp
inc
inc
scas
mov
jb,pn
aaa
inc
jbe
jge
jb
jmp
lea
xchg
popf
mov
add
aam
frstor
inc
out
lret
lock
mov
jp
sbb
pop
and
sub
jae
bound
scas
inc
cmp
fcompl
cmc
pop
xchg
add
jae
jp
jbe
sbb
test
xlat
daa
repnz
mov
je
fists
push
jo
sub
sbb
jge
jg
dec
shlb
pop
xor
add
loopne
sbb
mov
inc
lahf
push
mov
stos
mov
mov
mov
xchg
call
xchg
pop
aas
lds
mov
scas
out
stc
mov
mov
pop
shrb
add
push
sub
and
subb
jne
cmp
inc
popf
cmp
jae
bound
cmp
cli
adcb
xchg
rcr
icebp
dec
mov
adc
ljmp
insl
add
mov
dec
fdivr
fidivs
push
cmp
repnz
subl
lea
cmp
inc
loope
fnstcw
ret
ss
mov
xchg
stos
orl
push
stc
or
mov
mov
test
in
dec
mov
pop
sub
pop
lock
ficompl
jb
and
ftst
arpl
dec
stos
sarl
arpl
lock
xchg
jae
outsl
sub
out
fdivrs
and
bound
mov
scas
dec
xchg
mov
stos
and
fwait
outsl
mov
inc
popf
pop
es
dec
insl
push
pop
and
arpl
daa
dec
xlat
das
shll
or
rcrb
sub
sub
loope
pop
jae
scas
pop
notl
notb
adcb
enter
bound
dec
cmp
icebp
pop
ja
mov
jecxz
push
imul
xchg
rcrb
dec
mov
mov
push
or
insl
cmc
and
aas
jp
sahf
jecxz
pusha
insl
in
cltd
mov
repz
jne
aaa
add
mov
stc
jb
imul
lret
fidivrl
sbb
loop
jnp
shrl
ja
jmp
sbb
fiadds
lods
icebp
xchg
idivb
or
sub
cld
mov
jmp
int
inc
xor
and
mov
jae
and
add
push
mov
mov
popf
ror
push
sub
jbe
movsl
fcomip
xchg
in
daa
jmp
ret
test
jnp
jnp
or
gs
xchg
insb
jle
cmp
shlb
sahf
insb
xor
add
lcall
jmp
packuswb
mov
jbe
mov
push
lret
and
scas
push
dec
or
adc
sbb
fildl
mov
dec
lock
mov
jbe
lcall
inc
and
loop
lret
pushf
cmp
mov
addr16
fsubr
pushf
stc
cwtl
adc
in
xor
shrb
jl
push
cmc
mov
test
sub
xchg
lds
push
lea
sub
jb
cmp
test
test
in
add
add
mov
push
dec
jnp
lds
xchg
mov
dec
insb
jae
xor
mov
pushf
movsl
sbb
cmp
jmp
es
aam
pop
push
ret
push
fcoms
xchg
jae
mov
dec
shr
lret
aaa
jle
nop
data16
in
dec
mov
repnz
jno
xchg
pop
lock
iret
mov
icebp
cmp
cmp
mov
xor
rorl
mov
mov
add
push
mov
cmpsb
push
les
ds
cwtl
cmp
cmc
xchg
jbe
pop
ja
push
stc
push
sti
dec
adc
insb
mov
mov
inc
dec
sbb
test
add
or
das
insb
xor
pop
test
mov
or
xchg
push
sub
popf
shll
push
loop
sub
push
pop
fwait
xchg
sbbb
pop
xchg
add
int3
mov
fisubs
shlb
inc
int3
push
aaa
mov
dec
push
scas
push
xchg
add
cmp
pop
xor
aas
test
or
and
std
jg
mov
cli
add
mov
popf
lds
mov
and
ds
cli
fwait
sub
les
js
roll
jnp
and
mov
out
or
or
and
xor
push
pop
pop
push
cmp
mov
cli
jle
dec
cmp
sub
out
pop
in
mov
es
insl
xchg
inc
test
test
or
shlb
rcrl
push
sub
andl
dec
ret
ljmp
loopne
push
push
je
mov
push
add
mov
xchg
int3
mov
pop
es
mov
pop
mov
popa
jne
aaa
or
js
sub
dec
stos
add
lcall
cli
mov
dec
stos
ror
and
adc
fcmovb
sub
pop
pushf
jge
inc
test
rep
loopne
xchg
dec
je
push
xor
into
mov
push
sub
cmp
push
dec
lret
movsb
es
orl
jns
insb
in
clc
aad
mov
addr16
dec
cmpsb
loopne
inc
mov
jge
xor
sub
in
sti
xchg
lahf
mov
mov
movsb
insl
mov
loopne
dec
mov
decl
xchg
push
fdivrl
imul
xchg
loopne
adc
testb
inc
mov
adc
push
lock
test
add
repnz
leave
insl
mov
xchg
fstpl
stos
daa
lock
lods
scas
loopne
cmp
mov
out
jl
mov
mov
push
popa
enter
xchg
lcall
or
lods
stos
pop
pop
sbb
sar
call
int
out
rcr
push
daa
sbb
out
std
push
mov
cwtl
mov
fimull
xrelease
stc
sub
push
mov
sbb
ret
aad
jecxz
in
sub
popa
pop
xor
dec
mov
imul
ficoml
add
dec
push
push
inc
xlat
data16
push
shrb
leave
es
xchg
xchg
push
ds
std
sub
push
in
jno
dec
ret
inc
cmc
mov
adc
aad
sbbl
jecxz
jns
aad
mov
sub
lods
sbb
pushf
clc
push
fs
mov
fwait
gs
push
inc
mov
mov
xchg
jb
dec
test
lret
add
ljmp
sahf
fsubr
jl
sbb
mov
pop
test
cs
push
ds
cmp
xor
mov
ja
test
jae
push
test
or
pop
xchg
inc
mov
aad
push
in
mov
jge
movlps
gs
rorb
psubsw
xchg
jmp
clc
lods
pusha
stos
lea
mov
insb
mov
out
int3
mov
rcrl
push
frstor
lahf
dec
popa
mov
insl
je
xor
dec
xor
cmp
sbb
lahf
test
movsb
lds
lea
jae
jle
add
add
mov
pushf
push
add
mov
lcall
or
loopne
cmp
inc
sbbb
xor
bound
jb
sarl
stos
loopne
mov
mov
xor
xchg
stos
fcomi
enter
loop
insb
das
mov
call
and
lret
xchg
mov
test
pop
sbb
fcomi
pop
xlat
push
and
icebp
loop
or
jnp
mov
pop
lcall
push
inc
cld
pop
mov
aaa
xchg
or
out
add
mov
cmp
call
orb
push
ds
mull
inc
lret
lahf
in
mov
or
cmp
sub
and
lret
push
push
push
std
ss
xchg
add
push
call
dec
add
pop
js
arpl
pop
push
dec
inc
jecxz
sub
adcb
rclb
stos
out
xchg
repz
cs
icebp
pop
lods
jnp
fnstsw
pop
inc
fldt
imul
loope
add
dec
call
idiv
xchg
sub
sbb
add
mov
mov
dec
sub
jge
das
lcall
sub
xor
mov
nop
test
in
mull
cmp
inc
mov
stos
stc
sub
ficomps
pusha
sub
je
rorl
xchg
outsb
and
sub
xor
mov
jno
rcll
shrb
push
lret
dec
lsl
aas
cmpl
test
sahf
aas
add
int3
and
or
jl
jp
add
mov
push
hlt
push
call
or
mov
dec
popa
adc
and
dec
push
loop
jno
lods
jecxz
add
or
jecxz
mov
iret
lret
fdivl
pusha
int
fistl
fadds
cmc
or
movb
cmpsb
cmp
and
loopne
shll
add
out
lahf
mov
pop
int3
aam
iret
push
pop
xchg
repz
ror
or
push
dec
sub
jle
leave
popa
mulb
mov
push
divl
mov
mov
sti
int
les
xor
xor
lods
sti
jns
sbb
rcr
loopne
dec
inc
mov
lock
push
into
imul
pop
call
movsl
movsb
cli
pop
or
dec
std
in
iret
out
pop
call
cmp
ja
sahf
xor
sub
imul
xor
add
testl
or
pop
add
inc
imul
ret
add
pop
or
repnz
test
jl
mov
sarl
xchg
xchg
mov
imul
xchg
push
xchg
lock
pusha
notb
cwtl
mov
roll
pushf
dec
xchg
in
xchg
fiaddl
mov
inc
sbb
mov
sbb
or
mov
ss
jge
jecxz
dec
test
je
jge
xor
stc
das
mov
aad
cli
dec
movsb
cmp
adc
int3
mov
out
popa
shll
cmp
cmpsl
or
inc
mov
jo
bound
addl
xor
call
lods
in
push
push
sbb
fstl
cmp
jnp
and
lret
cmpsb
stc
sub
fstps
cmpb
in
push
xlat
inc
inc
add
sub
mov
jp
add
xchg
sub
icebp
jne
jns
dec
add
ret
bnd
shrb
cmp
roll
repz
push
nop
add
cmpsl
xlat
pop
icebp
lahf
test
push
sti
mov
cmp
mov
dec
cmp
fbld
pop
sti
stos
push
jle
fldl
repz
ret
pop
adc
push
out
or
push
jns
xor
cmp
cwtl
add
inc
pop
add
add
pop
inc
aad
ja
enter
lcall
scas
jp
daa
es
shrl
mov
ljmp
std
cmp
pop
pop
mov
into
stos
xor
bound
inc
repz
fdivr
in
adc
and
sub
cli
in
fsubl
cmpsl
sub
rcl
pop
jp
out
fstpt
xor
push
aad
adc
add
enter
arpl
insb
push
hlt
mov
xor
push
std
inc
mov
mov
mov
xor
adc
mov
mov
daa
sbb
or
notl
inc
int
mov
push
mov
adc
sbb
sbbb
mov
lahf
pop
pop
xorb
xchg
sub
dec
loopne
xchg
pop
mov
aam
outsb
in
sub
in
int
xchg
add
lods
test
in
xor
jb
push
inc
mov
gs
mov
pop
push
data16
dec
inc
int3
popa
push
push
js
sbb
xor
data16
mov
dec
lret
xor
test
pop
jnp
inc
jecxz
sub
mov
or
sahf
iret
pop
test
sbb
add
sar
pop
insb
jb
lret
imul
mov
lock
xchg
and
lahf
xchg
movsb
adc
cmp
psrlq
loopne
mov
mov
call
dec
jecxz
xchg
xchg
es
xor
test
mov
inc
mov
mov
fsubrs
push
test
pop
hlt
imul
jno
jp
into
jmp
sbb
push
and
push
pop
ljmp
jne
mov
and
sub
es
test
fstpt
ja
daa
add
mov
popf
xchg
mov
jnp
cmpsl
std
xchg
frstor
mov
add
pop
mov
test
push
xchg
rcrb
in
jno
mov
cmc
add
mov
test
popf
or
sahf
push
sbb
gs
mov
pop
or
add
fdiv
xor
fsubs
scas
out
mov
and
sbb
sbb
out
ret
add
mov
jne
and
push
call
js
imul
inc
cmp
jns
push
addb
adc
dec
jb
nop
push
scas
inc
aad
dec
add
pop
scas
inc
inc
push
mov
cli
jae
add
into
jp
scas
cmpb
call
cmp
les
mov
insb
inc
cs
in
pusha
enter
lret
mov
mov
stos
xor
sbb
xlat
dec
sbbb
int3
pop
and
push
mov
fildll
mov
out
sub
shll
ss
shll
add
in
xchg
test
ret
dec
rorl
jp
jge
pop
pop
out
nop
inc
sahf
shlb
hlt
mov
sbb
aaa
popa
ljmp
test
push
mov
sbb
lret
addb
mov
lret
dec
push
mov
mov
jmp
inc
imul
stos
movsb
nop
adcl
into
sub
pop
sub
aas
mov
outsl
imul
shl
movsb
sbb
test
out
dec
sub
sub
insl
inc
aaa
sbb
mov
push
or
aad
mov
mov
xchg
dec
jno
andl
sub
xchg
clc
lods
mov
jne
movsb
mov
xchg
lods
gs
je
push
test
cmp
and
cmc
dec
inc
adc
mov
mov
xchg
jb
test
nop
and
mov
push
add
and
std
out
fadds
pop
inc
scas
and
daa
cmp
and
pop
push
adc
cmpsl
mov
enter
shrl
sti
pop
mov
subl
adc
push
rol
inc
dec
jbe
mov
mov
inc
dec
push
hlt
inc
cmp
sbb
pushf
scas
adc
stos
scas
stc
jg
mov
xor
sbb
loope
push
mov
mov
inc
jo
xor
sbb
insb
cmp
dec
inc
inc
int3
aam
pop
inc
xor
jne
fisttpll
inc
mov
ret
cmp
ja
shrl
mov
sbb
xchg
pushl
mov
fcmovb
movsl
pop
xor
sti
inc
xor
push
mov
cmc
and
nop
xchg
stos
dec
addb
add
mov
neg
enter
jo
add
pop
mulb
push
vandnps
cli
mov
jb
xor
mov
scas
shlb
mov
or
xchg
rcrb
shlb
test
cmp
sub
adc
pop
bound
jmp
and
jg
pop
adc
in
pop
inc
and
roll
cld
scas
mov
dec
sbb
dec
xchg
jl
mov
pop
std
mov
aaa
cltd
pop
cmp
pop
test
push
sbb
mov
daa
int
bound
adcb
in
adc
imul
fisubrl
add
xlat
lods
cmp
or
xchg
push
jne
mov
mov
and
loopne
mov
dec
push
mov
mov
shlb
mov
test
inc
push
aas
add
dec
jg
and
sbb
sbb
fyl2x
sub
add
mov
sbb
fwait
data16
push
xor
sbb
pop
scas
cmp
scas
jns
dec
xor
shrb
nop
jns
mov
loop
push
jmp
call
fs
loopne
loop
push
insb
ret
lods
push
jne
inc
pop
lret
mov
xchg
data16
mov
push
ficoml
icebp
icebp
shrb
xchg
fprem
ljmp
mov
push
cmp
js
dec
sub
cmc
and
cmp
sub
pop
inc
and
mov
neg
cs
xchg
outsl
xchg
inc
rolb
addb
pop
mov
lret
jmp
add
xchg
mov
fcmovnb
xchg
and
icebp
push
jnp
dec
lea
mov
mov
xor
jo
jg
lcall
push
enter
push
out
repz
aas
mov
mov
int
sub
jmp
out
leave
je
sub
jle
push
out
test
gs
lcall
jb
in
movsl
faddl
pop
add
push
sbb
sti
mov
test
pop
mov
aam
scas
xor
push
xor
adc
mov
test
cmpsl
das
lret
aam
mov
jne
mov
fs
stc
jl
sarl
out
fisubrl
jge
sbb
mov
ja
sub
cmp
push
dec
inc
dec
cmp
movsb
adc
leave
add
lock
cmpsl
int
leave
rcl
mov
add
or
pusha
nop
inc
std
movb
sbb
push
cwtl
enter
and
gs
or
icebp
imul
ja
jp
fmul
pop
cmp
sub
std
jne
sbb
dec
test
data16
insb
fcmovb
xchg
aad
ret
pop
lret
xchg
mov
pop
pop
push
mov
xchg
out
es
lock
inc
mov
fidivrs
pop
jl
fdivs
xchg
xchg
lods
xor
in
stos
pop
xchg
jl
push
jns
insb
push
sbb
movsl
xchg
cltd
cmp
adc
dec
aam
jae
mov
jnp
outsl
lret
and
push
les
sahf
cmp
xchg
loopne
aaa
dec
ds
bound
mov
inc
daa
mov
stc
xchg
push
mov
nop
or
mov
jo
inc
int
imul
add
rcrl
ror
test
push
repz
bound
daa
jl
fdivrs
mov
in
mov
cmpsb
pusha
or
lea
fs
sahf
inc
sub
or
popf
push
dec
push
iret
dec
and
das
jbe
push
jno
pusha
movsb
xchg
and
cmp
mov
mov
fists
or
div
sarb
xchg
sti
or
ret
jae
scas
out
ret
ljmp
sub
movsl
es
insb
int
sbb
cmp
jmp
ljmp
mov
cmp
cmp
add
jb
pop
ret
jg
popf
data16
mov
cmp
cmp
clc
pop
xchg
outsb
mov
add
sub
mov
inc
aad
roll
mov
outsl
push
adc
inc
mov
arpl
mov
xorl
popa
ret
rcrl
icebp
stos
inc
into
and
int
fsubl
cs
scas
mov
lods
mov
nop
dec
dec
ljmp
cli
pop
xor
call
pop
fidivs
fs
mov
int
test
dec
fdivrl
test
fimull
loopne
adc
xor
lods
mov
std
out
int
test
lret
xchg
and
inc
cmp
mov
int3
gs
pop
cwtl
cmp
add
push
mov
repz
and
inc
pop
mov
cwtl
or
add
dec
popa
test
xor
mov
in
outsb
testb
enter
aam
mov
outsb
adc
jo
ds
xor
push
cmc
scas
pop
sbb
andb
jp
repnz
and
mov
xchg
lahf
addr16
mov
mov
scas
ja
xor
inc
in
xor
sti
in
sarl
push
pop
test
sbbl
or
adc
punpcklbw
out
xor
xchg
out
repz
popa
push
addr16
inc
je
lcall
cmc
push
int3
test
bound
pop
cmp
cmpsb
inc
std
pop
or
add
add
out
popa
outsl
aas
pop
and
movsl
add
mov
cli
test
stos
shlb
fwait
xchg
mov
popa
iret
inc
and
scas
push
repnz
stos
jg
int3
push
in
adc
dec
les
mov
add
cmp
jmp
sbb
xor
lods
repnz
shlb
stos
jp
mov
mov
or
dec
clc
or
mov
pusha
jge
enter
dec
hlt
mov
push
mov
jo
mov
test
fs
aam
inc
cwtl
cmp
scas
mov
push
push
push
adc
and
sub
sbb
in
hlt
mov
pop
leave
scas
add
sub
in
mov
push
call
les
test
mov
lea
or
orb
fiadds
shr
push
testb
adc
sub
jb
and
and
pop
mov
pop
jge
push
gs
sarb
add
std
out
add
dec
xlat
imul
orb
orb
mov
outsl
cwtl
shll
shll
scas
jecxz
jp
jl
mov
sbb
call
into
lahf
test
push
adcl
add
mov
pop
and
push
sbb
xchg
fistpl
xchg
into
lret
xchg
iret
and
mov
xor
scas
cltd
dec
mov
cmp
movsl
adc
movsb
jbe
pop
sbb
in
cmp
sti
hlt
mull
fiaddl
sub
mov
daa
jecxz
xor
les
or
cmp
out
jle
pop
in
xlat
push
lds
leave
shll
out
adc
lods
les
xchg
testb
xchg
push
mov
cmp
push
mov
arpl
addr16
add
add
cmp
popl
xchg
mov
pop
ss
enter
xor
inc
ss
mull
sbb
sbb
inc
dec
xlat
in
jecxz
and
mov
movsb
sbb
adc
cmpsb
repz
fs
cmp
loopne
sub
sbb
sbb
in
repz
xor
cli
mov
inc
mov
lret
lods
jae
lea
inc
in
lret
popa
fildll
or
dec
inc
pop
xor
movsb
jae
cld
jmp
sub
dec
js
push
and
add
imul
push
les
push
daa
inc
cmpsb
jne
flds
mov
fstpl
enter
mov
ljmp
inc
push
subl
addr16
inc
xchg
jno
and
sti
push
add
pop
hlt
nop
xchg
sbb
mov
or
inc
out
jmp
mov
pop
adc
sbb
es
xorl
xchg
pop
lea
xchg
inc
ret
sbb
sub
out
jge
mov
scas
xor
fstpt
daa
lahf
pop
cmp
fs
adc
inc
aad
cld
xor
imul
imul
aad
aaa
ja
xchg
sbb
shlb
jae
jge
mov
fsubl
pop
push
jg
stos
cmp
cltd
fbstp
push
push
clc
sti
mov
add
shl
xchg
loope
int3
jae
adc
sahf
loop
scas
shr
jge
xor
faddp
sub
jg
mov
sbb
xor
mov
sbb
sub
fnstsw
or
data16
ret
testb
out
bound
mov
sbb
outsl
clc
push
add
pop
pop
add
or
push
push
into
xchg
enter
inc
mov
add
adc
sub
lds
sub
shll
ret
repz
jnp
pop
xchg
shlb
inc
dec
xchg
daa
pop
sbb
lcall
cmp
push
fldl
or
hlt
cwtl
mov
test
stos
mov
fiaddl
push
fsub
mov
js
inc
add
ret
sub
inc
jle
jns
out
push
push
cs
mov
pop
sub
pop
lret
cmpsl
cmp
imul
movsb
or
imul
add
ret
ja,pn
mov
outsb
in
xlat
data16
mov
mov
adc
mov
push
xor
out
sahf
pop
push
mov
repz
sar
lret
push
dec
mov
xchg
or
fsubrs
cli
xchg
adc
mov
pop
xor
clc
cmp
sub
adc
cmp
xchg
int3
jl
divl
scas
xchg
insb
sub
pusha
mov
push
mov
sti
inc
pop
add
pushl
shl
dec
adc
mov
std
add
and
ljmp
lock
dec
adcb
push
or
ficompl
and
cmpl
mov
stc
jnp
mov
stos
movsb
xor
in
dec
xor
ljmp
dec
add
mov
dec
das
jl
and
lahf
lock
mov
in
shlb
out
out
push
dec
jl
popa
scas
mov
jp,pn
xor
mov
pop
xor
jl
lods
add
inc
mov
jnp
xor
mov
fs
cmpsb
out
aam
test
xchg
jb
xchg
add
rorb
into
shl
imul
xchg
xchg
sub
adc
in
xchg
mov
cmp
mov
movsb
popa
repz
outsb
loope
jae
or
shll
xchg
mov
sbb
call
cmpsl
in
push
pop
pop
cmp
repz
sbb
xchg
dec
ss
adc
ret
xor
mov
mov
mov
mov
hlt
jns
and
jno
cwtl
popf
ja
enter
insl
fldenv
mov
js
scas
inc
mov
sti
gs
into
test
insb
fucom
xchg
push
sub
cmpsl
add
mov
sub
dec
sbb
mov
popl
rorb
mov
push
dec
notb
fstpt
jb
sbb
dec
pop
jg
cmc
sub
jmp
outsb
jbe
pop
lret
out
aam
out
mov
and
clc
inc
add
in
nop
les
mov
adc
mov
aad
lock
or
xchg
push
sarb
mov
mov
lods
mov
add
stos
fsubrl
scas
sbb
inc
xor
cwtl
hlt
xchg
pop
sbb
mov
icebp
pop
stc
scas
mov
pop
dec
movsl
aas
jp
enter
xchg
icebp
movsb
cmc
scas
sub
and
push
aaa
lds
leave
pop
adc
pop
mov
mov
ljmp
fdivl
int3
dec
mov
mov
ffreep
adc
adc
test
mov
hlt
lea
mov
sbb
dec
repnz
sub
cld
dec
pushf
mov
pop
test
mov
popa
jnp
test
jo
jne
or
incl
std
cmpsb
cmpsb
jge
xor
inc
sbb
imul
fcmovne
stos
sbb
add
rcr
out
pop
andb
cmp
mov
lock
fimuls
xchg
lret
pop
inc
dec
shrb
mov
ss
orb
lds
dec
les
aas
and
pop
push
fisttps
mov
adc
mov
inc
loopne
xchg
repnz
xor
out
bnd
dec
xchg
cmp
xchg
sbbl
in
pop
xor
test
or
insl
fdiv
mov
mov
and
jg
out
pop
insb
inc
loope
xlat
decb
jb
jl
fdivs
add
std
test
outsl
and
cmp
inc
adc
roll
jl
cmp
packsswb
inc
leave
int
imul
scas
pop
aas
mov
xchg
fdivs
xchg
mov
adc
push
push
sbb
aas
push
out
incb
popa
and
push
sbb
shl
test
xchg
sahf
push
xchg
dec
shlb
pop
push
xchg
inc
or
ret
push
decl
xlat
xlat
testl
jno
jns
pop
pop
pop
sysenter
adc
shlb
and
mov
sbb
pop
xchg
insl
add
cld
dec
sub
ja
stos
imulb
mov
sar
pusha
add
push
fwait
xor
insb
jo
cmp
and
pop
repnz
xor
sbb
mov
pop
cmp
xchg
push
daa
xor
insl
push
sbb
or
jmp
sahf
or
stc
adc
es
pusha
fwait
and
jl
mov
test
lods
in
dec
arpl
sub
jg
jmp
lods
pop
mov
es
movsb
outsb
push
jp
mov
movl
jmp
sarb
stc
ds
in
push
int3
jne
clc
fcompl
ret
addr16
nop
out
and
enter
mov
movsl
jge
xchg
rol
mov
push
jns
outsb
cwtl
xchg
push
jl
test
ja
sub
nop
xor
aam
jle
std
cmpsl
out
mov
insl
push
inc
nop
cmp
data16
aam
add
daa
and
test
gs
paddusb
add
dec
or
sbb
popf
fisttpll
mov
mov
or
push
adc
xor
outsb
movsl
pop
dec
mov
cmc
add
mov
add
pop
iret
outsb
push
push
and
out
ret
aad
add
fcom
sub
rolb
shrl
popf
lods
fsubrl
xorl
push
and
sbb
into
jmp
mov
cmc
aad
out
js
xchg
aaa
mov
repz
sub
out
inc
lea
push
jbe
cltd
aam
popa
pop
insb
icebp
mov
aas
nop
push
lret
cmc
pop
insl
stos
jb
or
xchg
push
int3
dec
xchg
push
cmp
cld
iret
aas
popf
sahf
and
std
mov
cmp
lcall
push
fldenv
push
cmp
test
divl
xor
jecxz
fsubrl
mov
fistpl
xchg
lcall
push
outsb
mov
add
mov
lds
cmp
xor
pop
mov
lcall
cmpsl
sub
and
je
fnstenv
inc
mov
std
and
inc
mov
mov
loopne
fucomp
sub
mov
sbb
sbb
xorb
test
aam
mov
aaa
push
mov
shlb
mov
test
sub
pop
jne
rcr
fiadds
add
icebp
test
cs
sbbl
shll
or
cli
mov
test
ror
cmp
movsb
enter
andb
xchg
xor
subb
mov
popf
test
inc
jno
pop
loope
dec
or
adcl
mov
movl
jns
push
xchg
mov
add
lock
scas
xchg
adc
inc
xor
adc
sub
insb
mov
adc
adc
outsl
pop
sbb
nop
pushf
test
pop
les
push
dec
sub
movsb
movsb
jmp
jg
out
icebp
inc
mov
cli
cmc
das
xor
les
test
push
das
test
xchg
adc
cli
xor
hlt
ret
pop
insb
hlt
mov
and
jecxz
pop
dec
rcrb
and
push
pop
push
jp
pop
sbb
outsb
adcb
mov
outsb
mov
or
stc
mov
lahf
rcll
popf
ret
or
dec
inc
adc
dec
lcall
sbb
cmp
insb
push
imul
rclb
sarl
mov
jecxz
jmp
mov
push
mov
sub
jge
nop
sarb
jge
jne
mov
mov
push
sub
push
dec
xor
stos
dec
test
sub
inc
push
or
sti
daa
outsl
jecxz
pusha
aaa
push
pop
movsb
mov
or
hlt
sbb
lret
addb
outsl
push
insb
adc
jle
mov
dec
mov
dec
sbb
and
push
leave
push
sub
push
push
jecxz
in
jno
shlb
add
loop
adc
fsub
jecxz
shrl
mov
cmpsl
xchg
push
and
mov
outsb
xor
call
std
testb
sub
shll
adc
out
fiaddl
arpl
add
ja
xor
and
out
test
xor
mov
xor
aas
addr16
dec
sbb
stc
and
adc
add
test
dec
pusha
mov
pop
ljmp
or
mov
mulb
lea
add
lahf
sahf
sbb
push
push
test
jo
int
xchg
sbb
jl
dec
lods
aam
sti
mov
fs
and
jle
cmp
mov
into
mov
js
adc
mov
fadds
sti
xor
mov
xchg
divl
add
sbb
cmpsb
hlt
clc
add
iret
adc
dec
mov
ja
add
mov
clc
xchg
jecxz
mov
inc
jb
ror
repz
enter
sti
sti
aam
add
cld
lock
sbb
pushf
sti
shlb
cli
lret
inc
fwait
mov
popa
pop
mov
mov
xchg
xchg
pop
scas
fstpl
jnp
outsl
xor
test
and
es
mov
jb
pop
xor
sbb
lcall
add
les
or
inc
sbb
divb
add
insl
sbb
pop
add
mov
mov
jne
pop
cltd
data16
idiv
jmp
in
std
iret
shlb
push
mov
mov
jl
mov
test
dec
jg
call
mov
in
sbb
ror
cmpsb
idivl
and
iret
std
cmp
inc
push
test
out
clc
and
aas
jae
cmpl
jmp
push
add
xchg
imul
cmpsb
shl
xor
ljmp
insl
pop
hlt
aam
mov
jle
pop
and
leave
push
or
jbe
xchg
cs
xlat
cmp
push
xchg
dec
popa
dec
add
inc
pop
adc
push
xor
dec
mov
das
add
faddl
jecxz
jo
lds
mov
or
icebp
jl
ds
xchg
cmpsb
iret
push
xor
mull
inc
mov
inc
sti
subl
je
cld
xor
mov
mov
stc
ss
cld
add
sbb
adc
movsb
and
js
lcall
out
sti
inc
in
inc
adc
xor
jle
inc
cmpb
je
in
movsl
xchg
and
icebp
es
pop
subl
fsubrs
test
fcompl
cmpsb
cmp
cltd
lahf
jecxz
fistpll
jne
ficoms
out
aam
push
mov
test
mov
shrl
push
mov
sub
rorb
div
or
test
ja
sub
cmp
popf
lret
movsb
dec
outsb
sbb
push
xchg
mov
cmp
push
sub
jge
mov
into
or
test
mov
cmc
in
pop
lret
jbe
fiadds
jae
jl
cwtl
jae
aaa
mov
scas
jnp
fwait
lret
fisubs
daa
xor
inc
les
into
movsl
jns
add
pop
ficoms
addl
inc
fcom
ja
mov
xchg
cmp
inc
jo
add
dec
test
mov
es
insb
jecxz
or
clc
mov
and
in
xchg
fisubrl
in
xchg
sbb
push
loopne
in
scas
push
adc
sbb
xchg
pop
sbb
test
les
cmp
out
mov
mov
enter
cmp
ljmp
push
int3
jle
xlat
add
or
arpl
cmp
and
adc
lods
push
dec
sbb
je
fsub
imul
and
popa
shll
xlat
mov
bound
popa
jmp
cmp
mov
mov
inc
mov
inc
cmp
pop
dec
icebp
cli
pop
addr16
in
mov
mov
les
scas
push
cltd
out
sbb
fnsave
das
mov
mov
xchg
push
cmpsl
push
dec
pop
push
std
es
es
mov
data16
mov
int
xchg
jns
nop
lock
add
lods
pop
sahf
sbb
iret
pop
bound
arpl
cmp
jb
ret
fsubp
pop
enter
fiaddl
and
and
cmpsl
inc
aaa
pusha
mov
xchg
and
inc
dec
mov
call
push
xor
mov
mov
mov
rolb
or
notb
mov
sbb
int
inc
lods
fwait
jl
jle
pop
roll
add
jmp
cli
int
mov
push
loop
loop
mov
ret
cli
jne
dec
mov
imulb
jno
stos
sub
pop
or
lods
inc
and
sbb
push
nop
jmp
mov
not
test
cmpsb
popa
out
add
or
ret
imul
pusha
mov
pop
fisttpll
jnp
cmp
add
stc
and
jb
mov
cmpsl
pop
fcoml
xchg
pop
xchg
push
sub
xchg
push
cmp
les
cmp
aaa
inc
xor
cmpsl
ret
sub
shll
inc
stos
sti
dec
dec
int
jae
mov
xchg
sysret
jae
js
addr16
sub
iret
scas
call
or
leave
orl
into
faddl
jg
mov
sub
mov
mov
pop
mov
dec
add
add
cld
imul
ficompl
mov
sbb
or
enterw
pushf
fldl
test
sbb
hlt
push
inc
es
adc
icebp
outsw
in
mov
insb
adc
sbb
enter
mov
or
movsb
outsb
outsb
cli
mov
nop
or
mov
sbb
inc
and
dec
addl
rorl
mov
jo
cltd
icebp
les
push
inc
loop
loopne
cmp
lcall
aaa
add
mov
cmp
aad
xlat
xchg
adc
push
rcrb
repnz
test
xchg
dec
push
jmp
mov
icebp
mov
daa
push
repz
pop
in
and
fwait
sub
add
add
jle
lret
xchg
and
stos
push
pop
int
clc
rcl
mov
orl
out
dec
sbb
cmp
mov
je
scas
stos
xlat
mov
xlat
jnp
enter
movsl
adc
into
inc
je
dec
in
push
call
test
jo
push
push
pop
loop
xor
pop
fildl
test
sub
mov
xchg
jp
and
repz
mov
push
xchg
mov
jbe
xor
xchg
xor
add
mov
aam
jo
dec
ds
lea
fwait
cmp
ljmp
xchg
scas
pop
rorb
cwtl
aas
xchg
inc
test
out
daa
das
int3
adc
or
cmp
dec
shlb
stc
aam
push
mov
adc
fmull
test
in
pop
add
outsl
aad
push
es
aad
pushf
gs
mov
out
sub
cmp
repnz
or
mov
sbb
jno
xchg
movlps
mov
ud1
adc
iret
cmp
popa
scas
mov
sbb
int
inc
sub
cmp
mov
adc
xchg
and
or
jbe
rclb
mov
pop
adc
mov
inc
lret
lds
out
mov
in
and
dec
sbb
cli
mov
out
iret
ljmp
ds
pop
push
and
insl
loope
mov
add
jmp
test
pop
push
fs
lock
leave
add
adc
enter
fists
xchg
insl
dec
inc
iret
into
daa
imul
aad
and
rol
es
mov
lret
cwtd
cld
sbb
in
repnz
mov
lahf
cltd
test
sub
add
push
es
outsl
mov
adc
or
or
inc
pop
jp
and
pop
add
cmc
and
loopne
enter
push
jg
push
loop
mov
call
je
outsb
push
sub
jmp
int
inc
push
cmp
in
mov
aaa
cwtl
inc
and
sbb
es
cmpsl
add
mov
jmp
shlb
ss
negb
dec
dec
xchg
jl
dec
aas
dec
pop
aad
gs
dec
pop
pop
mov
cmpsb
mov
insl
pop
sub
sbb
xchg
jne
sbb
mov
shlb
andl
cmp
pop
add
add
ljmp
scas
xchg
mov
imul
xchg
icebp
stc
sub
sbb
pop
scas
or
out
adc
popa
jno
and
adc
mov
scas
mov
test
mov
sarl
pop
push
push
jnp
hlt
xor
jo
adc
jmp
shll
lahf
lock
push
fdivs
rol
fnstenv
jge
pop
rcrb
hlt
fcoms
cld
lcall
sub
out
cltd
sbb
jmp
mov
leave
cmpsl
jp
cmp
cltd
test
and
movsl
icebp
adc
ljmp
call
rcr
push
adc
xor
or
sahf
push
pop
pop
cmp
lret
mov
jge
ffreep
pop
inc
bound
jns
lret
lcall
xchg
fsub
pop
in
inc
push
jo
jnp
call
das
in
or
in
shl
or
xor
enter
jbe
shlb
xchg
pop
sti
dec
dec
cmp
adc
testl
dec
ret
sbb
fstpt
mov
mov
sbb
xchg
push
insl
adc
lds
jp
rorb
lds
pop
push
loop
push
es
cld
cld
mov
adc
loope
addr16
jmp
adc
mov
cs
add
iret
and
push
mov
movsb
aam
fldt
xchg
arpl
mov
adc
cld
pop
xchg
sbb
dec
outsl
mov
mov
cli
fisubl
scas
dec
out
jb
outsl
jecxz
cmp
xchg
scas
addr16
cmp
add
movb
lcall
popl
push
dec
and
insl
xchg
lods
outsb
fbstp
sbb
insl
data16
jmp
hlt
push
mov
jge
push
mov
lcall
int
sub
lcall
xchg
pop
lea
cld
test
cpuid
pop
scas
lret
add
cld
pop
cmp
fnstcw
aaa
push
into
lock
das
aas
fmull
js
cmp
decb
pop
add
lret
push
mov
mov
mov
sti
xchg
dec
fwait
out
mov
fs
je
enter
cmp
icebp
xchg
xlat
jno
mov
jmp
sub
fldcw
pop
adc
imul
xchg
sbb
pushf
add
adc
outsl
sbb
fwait
sbb
xor
jnp
xor
aas
mov
pop
mov
icebp
lret
movsl
test
repz
mov
pop
ds
orl
pop
test
adc
dec
int3
jmp
xor
cmpsl
push
dec
sbb
das
jns
xor
pop
je
lcall
and
dec
push
jecxz
flds
sti
push
dec
sti
cmp
mov
outsl
in
into
mov
add
in
into
lds
test
je
add
gs
scas
dec
ja
enter
sub
cmpl
xor
mov
push
and
inc
popa
xchg
fstps
das
js
popa
cld
adc
gs
inc
clc
sub
enter
mov
dec
in
inc
sarl
jge
imul
mov
and
arpl
mov
loope
add
loope
pop
repz
xchg
mov
adc
mov
jns
push
pop
pop
mov
js
rcll
mov
add
push
ljmp
fwait
addb
mov
add
cltd
pop
jae
les
cmp
mov
mov
dec
mov
dec
mov
gs
int3
mov
data16
cld
xlat
mov
sub
aas
mov
insb
fcmovu
adc
shlb
push
arpl
fbld
rclb
mov
xor
movsl
add
cltd
stos
in
int3
and
scas
jno
mov
mov
lock
jb
cld
inc
mov
fbld
bnd
lahf
pop
cwtl
push
lds
push
shlb
jb
ret
push
std
movsb
xor
add
test
push
outsb
pop
pop
adc
outsl
fs
jle
jl
test
sahf
test
movsb
xchg
iret
jne
xchg
loop
shrl
pop
inc
pusha
aaa
lods
sub
and
and
mov
repnz
imull
imul
inc
notl
jmp
cld
ret
loope
test
popa
aas
xor
cwtl
in
cmp
int
mov
add
bound
dec
lds
push
dec
lea
mov
xchg
loope
pop
push
push
insb
iret
add
push
sub
jns
mov
arpl
add
cmp
push
adc
gs
loope
jne
mov
add
cs
negb
xchg
dec
adc
jecxz
mov
movsl
adc
sahf
push
and
mov
lea
mov
scas
and
xchg
das
iret
enter
sub
iret
in
fwait
std
insl
cmp
and
mov
jno
xor
dec
aas
ss
cmpsl
jne
lcall
jno
bound
sub
jge
in
push
movsb
dec
out
xchg
scas
pop
cmpsl
test
sbb
xchg
inc
or
mov
insl
popf
movntq
mov
and
mov
fbstp
in
nop
out
out
or
pop
push
stos
xchg
cmpl
bound
cmp
adc
adc
cld
loopne
mov
or
sub
sub
inc
add
test
jnp
and
mov
dec
add
mov
imul
pop
daa
jno
aas
xor
xor
adc
pop
xchg
fld
pop
cmp
mov
cltd
fwait
adc
cltd
xor
inc
out
or
rol
les
cli
sub
popl
sub
cmpsb
mov
lret
xchg
push
in
xchg
jmp
add
sti
sub
push
dec
push
stos
nop
sbb
into
dec
cmp
adc
jno
aaa
push
cmpb
outsb
outsl
mov
sub
sub
shrl
repnz
pop
shrb
lods
sbb
jno
push
stos
dec
es
pop
sbbl
mov
xor
pop
mov
das
pop
adc
pop
inc
das
xor
sbb
push
lea
lock
cmp
popa
xchg
inc
or
pop
mov
call
cmpsl
or
test
dec
es
dec
adc
xor
pop
pop
xor
sub
fcmovu
jne
ja
stos
rcl
js
and
ret
push
or
pop
cmp
push
aad
xchg
mov
sbb
fs
outsl
loope
inc
push
xor
adc
das
sub
mov
js
xor
xor
jo
mov
pop
xchg
dec
xchg
fcmovne
inc
mov
cmc
push
jae
dec
push
test
mov
xchg
aas
outsb
mov
dec
aaa
jecxz
stos
pop
mov
xchg
int
ja
mov
sbb
iret
xchg
cwtl
dec
jno
add
sbbl
sbb
pop
stc
jae
sbb
xor
addr16
js
pop
mov
ret
call
fidivrl
sub
call
out
fisubrl
inc
xchg
pushf
jae
mov
mov
jp
cmp
lock
jae
xchg
call
cmp
sarl
pop
les
jns
dec
adc
push
inc
aaa
es
cmp
test
xor
jbe
adcl
jmp
jnp
sbb
push
bound
stos
push
enter
hlt
sub
push
adc
pop
lods
ljmp
aaa
lret
int3
loopne
in
leave
xor
std
dec
insl
fdivrs
jo
jmp
dec
jl
fwait
pop
sbb
insb
lds
xor
xchg
call
and
jae
das
fstl
stc
pop
popf
and
js
ljmp
movsb
fsubp
push
bound
sti
stc
or
push
aam
push
mov
adc
cmpsb
test
gs
mov
dec
xor
gs
pop
lock
leave
push
xchg
add
inc
movsb
push
adc
inc
stos
adc
loop
push
sub
pop
jns
fwait
or
jb
jge
sbb
adc
sbb
les
divl
add
scas
fidivrl
push
sbb
jno
adc
jp
jo
adc
push
daa
jg
arpl
adc
mov
sbb
pop
cld
ds
xchg
pop
mov
jmp
arpl
sub
pusha
and
push
testb
movsb
loopne
aam
in
jl
out
dec
cmp
test
dec
enter
xor
filds
ds
mov
call
bswap
push
mov
ds
cmp
lock
lods
or
mov
out
dec
call
or
lret
cltd
iret
push
ja
pop
mul
js
dec
bound
daa
pop
mov
and
les
pop
dec
ljmp
xchg
and
or
pop
adc
scas
fistpl
xlat
sub
sahf
addb
pop
nop
mov
test
and
pop
jns
add
pop
mov
lock
jo
js
mov
lds
push
cmp
in
inc
jnp
jl
dec
mov
adc
cltd
aaa
dec
fst
sbb
data16
dec
mov
in
or
hlt
dec
or
jmp
dec
nop
fnstenv
add
andl
pop
lds
mov
fldl
dec
shl
jge
aas
cld
ret
jne
daa
mov
leave
mov
add
das
ljmp
mov
fdivl
mov
push
movsl
bound
arpl
lock
or
mov
into
ljmp
and
cmp
mov
dec
in
imul
outsb
aad
cmp
sbb
das
das
xchg
adc
jbe
inc
lcall
shll
xor
dec
jp
stc
cli
and
xlat
jg
mov
jecxz
add
pop
and
mov
jle
dec
push
cli
inc
sbb
ljmp
mov
out
add
lret
lods
xlat
add
inc
mov
and
les
mov
icebp
mov
or
rorl
or
iret
adcl
and
fucomp
pop
outsb
pop
movsb
fnstsw
loop
fs
and
adc
and
mov
subb
lea
test
xchg
push
jp
add
cmp
add
jb
test
enter
fbstp
test
xchg
mov
lods
lds
xor
inc
jo
inc
jne
jge
xbegin
test
adcb
and
mov
cmpsb
mov
sub
std
add
movsb
jp
and
sar
xchg
push
cli
dec
jge
jns
and
jmp
aam
sti
adc
cmp
sub
jle
pop
inc
aaa
jb
fs
fcomps
mov
or
arpl
xlat
movsb
inc
mov
daa
push
or
mov
sbb
rcrb
fcoml
mov
push
add
shrb
push
jb
insb
nop
sub
std
inc
sbb
stc
push
pop
ficoms
jbe
or
aaa
push
test
mov
inc
jecxz
sub
sarl
adc
mov
mov
pop
sbb
mov
icebp
or
out
mov
add
pop
jo
mov
jb
fnsave
popf
inc
daa
bound
ror
dec
adc
jge
cs
jo
xchg
adc
out
enter
test
jg
enter
repz
mov
scas
adc
out
xchg
leave
data16
data16
xlat
mov
xchg
cmp
and
out
add
cmp
dec
shl
repz
loop
movsb
dec
push
mov
insl
sbb
fs
jl,pt
test
cmc
mov
dec
hlt
mov
and
sub
xor
jp
mov
push
mov
sbb
lock
aas
std
lcall
movb
int3
insl
ficompl
test
xor
add
fistpll
dec
sbb
sub
in
popa
jnp
mov
movsl
in
pop
in
push
xlat
mov
std
jns
adc
and
xor
fldl
daa
rcll
cltd
fs
push
roll
mov
inc
cmp
inc
pop
scas
lcall
push
jge
adc
test
lret
insl
jns
pop
aas
mov
cmp
xor
hlt
push
cmp
cmp
lret
outsl
xchg
push
scas
jmp
xorb
xchg
lds
pop
jns
pop
imul
mov
push
icebp
jbe
sbbb
dec
mov
and
xchg
loope
or
inc
sbbb
or
jmp
pop
outsb
push
pop
pop
and
gs
push
hlt
and
in
jb
clc
mov
mov
cld
pop
mov
jns
lods
insb
or
or
test
cwtl
gs
gs
call
aaa
mov
mov
sub
add
add
dec
push
jnp
or
sub
insl
ja
orl
addr16
lret
adc
ret
sub
mov
fsts
mov
and
jae
sti
xchg
addr16
cmp
leave
xchg
jne
push
or
adc
xchg
mov
fidivrl
jns
push
adc
fcmovbe
or
test
out
jge
daa
mov
push
mov
dec
mov
lock
push
fistpll
and
ret
or
mov
sub
mov
adc
inc
dec
xchg
cs
adc
pop
scas
adc
or
dec
mov
sbb
pop
lods
adc
sti
dec
xchg
xor
fisubl
mov
push
mov
mov
inc
xor
fisttps
sahf
mov
sub
pop
loope
rorl
cltd
xor
in
std
sbb
jmp
adc
pop
push
pop
lahf
adc
lods
xor
shlb
call
test
dec
imul
push
mov
insl
xor
sbb
sbb
stos
mov
outsb
dec
cmp
rolb
mov
cmp
out
sti
xlat
mov
mov
test
cltd
cmc
cli
jmp
imulb
sub
int3
ret
mov
adc
dec
jae
sbb
adcl
dec
sub
idivb
imull
pop
or
and
arpl
sub
int3
jo
dec
xchg
push
fsubr
jle
hlt
sbb
stos
or
aad
ss
in
ss
xor
sbb
or
mov
pop
push
push
add
and
arpl
pusha
sbb
adc
mov
les
mov
xlat
cmc
sbb
xchg
push
mov
inc
add
int
sub
cmpsb
xor
jbe
ljmp
outsl
xchg
nop
jecxz
mov
pop
stc
fyl2x
mov
push
and
mov
push
push
push
push
mov
int
xor
cmc
xchg
sub
cmp
outsl
mov
iret
es
test
push
jmp
mov
fistpl
hlt
scas
and
and
jl
push
dec
movsb
jnp
popf
cmpsb
lea
lcall
notl
jcxz
int
lcall
xchg
pop
decb
cmpsl
sub
pusha
scas
xor
aam
cld
imul
dec
jno
aas
xor
pop
cmp
pop
xor
dec
mov
data16
xchg
int3
pop
outsl
out
push
add
mov
or
rclb
in
xchg
insb
sub
cmpsb
insl
enter
push
iret
jle
imul
pop
xchg
aam
lret
push
les
add
in
cmc
mov
bound
inc
fucomip
test
push
or
pop
xchg
sbb
shrl
aas
insl
outsb
inc
adc
cmp
out
jecxz
adc
mov
mov
mov
sbb
sub
test
pop
push
lods
pusha
enter
ja
or
fwait
mov
mov
call
fbld
inc
not
mov
mov
call
ds
pushf
cmc
jae
sarb
mov
movsb
sub
xchg
movsl
or
enter
mov
add
je
shrl
or
jne
add
lods
mov
cmp
popa
adc
call
stos
gs
sub
bound
stc
xor
adc
aad
and
in
mov
loope
mov
push
mov
and
xchg
mov
addr16
fldenv
cmp
jge
xchg
and
aad
jge
scas
inc
icebp
xor
shlb
lret
mov
stos
jbe
mov
inc
faddl
mov
lods
mov
xchg
das
mov
std
xchg
leave
mov
into
push
std
fsubrl
loop
dec
ror
add
aad
fnstenv
outsl
out
push
inc
test
ret
daa
pop
jmp
jp
xor
cmp
das
cmp
xor
inc
sub
xchg
int
cmp
mov
sbb
sub
sbb
sti
add
ror
std
inc
push
jg
cli
iret
scas
pop
shll
and
adc
mov
sub
jle
mov
add
mov
dec
add
push
jecxz
inc
ja
ficomps
je
test
fisubrl
inc
test
cmp
in
shlb
sahf
and
adc
jecxz,pn
imul
pushf
pop
or
loop
mov
aad
test
mov
cmp
and
cmp
sti
push
ret
sub
dec
rorb
push
inc
or
loopne
mov
jp
and
mov
subl
sbb
inc
inc
test
movups
ja
xchg
pop
inc
in
ret
roll
iret
out
xor
mov
mov
pop
cmp
enter
imul
push
sub
adc
imul
jnp
ljmp
negl
dec
stc
les
jns
std
or
ss
push
aam
adc
and
push
xchg
stos
js
pop
dec
mov
orl
ljmp
or
mov
fistps
out
mov
pusha
cmp
sbb
leave
imul
lds
and
mov
iret
insb
and
outsb
ljmp
into
out
lods
aas
outsl
push
inc
pop
mov
adc
scas
movsb
mov
mov
sub
movsb
leave
mov
dec
jp
mov
jb
sbb
stos
mov
pop
ds
inc
imul
ds
outsb
cmp
add
dec
cli
xor
ret
xchg
push
lods
jae
mov
arpl
sbb
ljmp
daa
out
jg
dec
pop
cmp
lods
push
push
test
xor
mov
cmpsl
jp
out
lods
mov
pop
fiaddl
int
in
sbb
pop
out
pop
mov
call
cmp
pop
sbbl
insb
nop
jge
inc
mov
xchg
sti
inc
ret
cmp
jno
jmp
inc
call
jle
sbb
adc
mov
das
mov
jmp
push
dec
and
call
mov
push
movups
mov
in
mov
xor
lahf
jne
xor
add
dec
jb
sti
mov
test
icebp
adcb
cs
dec
mov
clc
stos
mov
mov
mov
les
mov
cmp
cmp
dec
xor
jnp
lret
pop
sbb
or
hlt
imul
inc
data16
repz
push
stos
push
ljmp
sub
push
adc
xchg
fbstp
push
fimull
std
push
sahf
leave
pop
call
cmpsl
cwtl
ret
test
fsubs
mov
clc
xchg
sub
sub
cs
outsb
movsl
xor
inc
mov
adc
or
mov
popf
jne
mov
adc
inc
mov
stos
shll
inc
jle
imul
pop
jg
push
dec
sbb
gs
jb
pshufw
mov
pop
repnz
aam
sbb
pop
fldenv
lds
das
in
inc
jns
push
mov
scas
loop
sbb
add
pop
aas
loope
dec
pop
sub
lea
cmp
lock
and
popf
bound
pop
imul
mov
jns
shlb
sbbb
adc
sbb
in
xchg
cltd
jge
or
dec
int3
adc
xchg
div
data16
call
sub
mov
rclb
scas
and
sub
clc
xchg
sub
cmp
mov
jle
rolb
imul
sbb
mov
xchg
mov
out
adc
xlat
add
sar
jbe
inc
pop
sub
or
imul
orl
insb
ret
lods
imul
sbb
adc
out
iret
xor
jg
push
dec
xor
dec
test
js
and
nop
xchg
mov
lock
pop
mov
faddp
jb
roll
inc
inc
push
dec
rcr
mov
stos
subb
lea
jne
adc
push
fucomp
xor
add
jae
push
xchg
pop
jne
xor
mov
cmpsl
mov
sbb
push
test
out
push
xor
push
lods
push
test
shrl
test
stc
rol
adc
cmc
sbb
lea
daa
lods
add
adc
ljmp
lods
or
add
mov
xor
lret
lahf
dec
xchg
dec
sbb
cmp
test
push
jnp
arpl
add
push
jnp
das
and
outsl
leave
or
aas
call
ljmp
adc
add
lahf
ret
jecxz
shlb
cmpsb
mov
scas
inc
fcoms
out
inc
inc
jl
nop
xchg
insb
push
mov
dec
xchg
idivb
hlt
fdiv
and
mov
sbb
xor
mov
stos
xchg
mov
ja
dec
mov
xlat
xchg
dec
andb
or
cld
repz
dec
xor
cli
or
fldt
mov
out
daa
pop
ret
xchg
popf
std
xchg
fs
dec
mov
in
push
fstl
xlat
mov
shrl
mov
jp
ja
pop
jo
lret
adc
fbld
outsb
xlat
lock
loop
push
adc
and
xor
out
out
jb
sbbb
dec
shll
gs
jne
dec
mov
jo
xchg
mov
pop
push
ret
sub
scas
cmp
xchg
je
mov
jge
mov
inc
call
mov
dec
mov
leave
ja
sbb
dec
jp
cmpsl
repnz
pop
mov
fiaddl
in
mov
and
jecxz
icebp
and
mov
in
mov
lret
jnp
outsl
je
push
xor
fisubl
aas
sub
sarl
movsb
and
jne
in
scas
out
fiaddl
out
cmp
loop
xchg
push
adc
push
cltd
dec
cltd
cmp
push
push
hlt
inc
call
dec
mov
cmpsl
pusha
stos
gs
xchg
xor
ret
sub
in
sarl
fdivrl
cmp
sub
mov
scas
cmpsl
repz
lods
sub
mov
pop
int
cmp
jae
hlt
iret
popf
cmc
sbb
hlt
dec
inc
jmp
add
int
or
sbb
ret
cmp
lods
push
push
xor
aaa
or
mov
push
and
mov
pop
sub
das
cli
jb
fwait
xchg
mov
or
xor
cli
pushf
lcall
test
in
out
repz
pusha
mov
inc
aaa
and
test
mov
mov
add
ss
or
sbb
out
out
mov
inc
mov
cmp
cltd
mov
fs
popa
push
cmc
fsubs
inc
out
jns
sbb
xor
add
xor
jle
cld
test
jmp
in
hlt
orb
jbe
sbb
push
mov
push
enter
and
cmp
add
gs
pop
popa
das
and
aas
test
push
mull
pop
add
daa
cld
or
jle
out
jl
push
adc
fldt
push
repnz
movl
and
jge
sub
inc
mov
mov
fcmovnb
mov
inc
xchg
xchg
movsl
push
pushw
cmp
ja
imul
int
testb
les
push
xchg
dec
jb
mov
dec
addr16
lret
push
xor
pop
pop
pop
jecxz
sub
pop
and
xor
cmc
repz
roll
nop
addr16
dec
fwait
pop
push
jb
xchg
scas
and
stos
hlt
push
dec
fiaddl
mov
jmp
or
into
nop
inc
in
pushf
sbb
pop
jbe
cs
es
add
add
test
mov
jo
orl
mov
sub
cmc
sbb
cltd
adc
dec
sbb
icebp
sub
loopne
ss
data16
shll
xchg
jge
mov
out
movsb
test
bound
add
test
sub
push
divb
xchg
push
jg
xlat
jle
adc
ljmp
xor
call
dec
push
xchg
push
sbb
mov
stos
inc
pushf
and
mov
push
cltd
push
and
adc
arpl
xchg
and
push
inc
add
std
xor
shr
pop
jns
mov
cltd
jge
mov
pop
pop
jno
sbb
sti
mov
xor
push
jb
pop
lods
sub
shlb
and
pop
dec
flds
push
leave
dec
add
sbb
flds
xlat
addr16
pop
adc
jge
push
in
mov
push
push
and
lea
cmc
ss
pop
imul
pushf
lods
sti
xor
jmp
push
daa
jmp
xchg
ljmp
test
sub
pop
xor
leave
stos
mov
or
icebp
repnz
push
sti
into
fisubrs
add
adc
inc
xchg
sbb
pop
cmp
mov
les
xchg
fucomi
jecxz
sbb
inc
shll
sti
mov
inc
ja
jb
roll
pop
mov
jne
mov
cmp
aaa
xchg
shll
inc
adc
lods
pop
cmpsl
mov
mov
mov
jnp
clc
out
cmp
pushf
pop
imulb
cld
nop
or
jb
sbbb
aaa
xchg
adc
push
xchg
loope
cmpsb
xchg
jo
int
jl
subb
jle
mov
int
jo
adc
shrb
inc
ds
cmp
jle
sahf
jae
add
outsl
ret
ljmp
dec
hlt
or
push
pop
stos
aam
sti
mov
sbb
pop
arpl
dec
adc
pop
push
and
xchg
mov
cmc
cmp
cmpsb
in
and
ss
out
adc
xor
pushf
jmp
pushf
dec
sub
in
sub
pop
inc
outsb
sti
notb
psllw
in
push
push
mov
aad
in
dec
xchg
adc
ret
jl
push
in
test
push
sub
pop
in
out
mov
cmp
cld
mov
dec
sub
and
or
lods
inc
notb
pop
mov
mov
fidivrs
mov
pop
lods
or
jb
loope
push
pop
in
in
lock
cltd
lock
iret
push
nop
es
add
mov
dec
mov
pushl
or
mov
les
jmp
jmp
ja
pop
lods
mov
mov
out
jle
pop
mov
lret
popa
pop
push
or
jmp
jns
pop
lcall
cmc
mov
mov
and
pusha
or
jl
jle
faddl
xor
out
lret
xlat
add
jae
inc
sbb
fistpl
push
ss
clc
push
dec
dec
or
jg
inc
pop
stc
pop
nop
outsb
cmp
xor
sub
adc
push
fs
fs
pop
test
mov
pop
inc
pop
fwait
xchg
xor
push
sbb
int3
loopne,pt
xor
push
fadds
sub
cmpsb
in
adc
repz
aad
cli
xor
dec
int3
mov
imul
fs
push
ja
cltd
repz
mov
xchg
mov
jecxz
mov
pop
xor
adc
popf
push
push
cmp
iret
xchg
mov
mov
mov
int3
shr
dec
dec
add
in
mov
or
cld
sbbl
inc
mov
jns
insb
pop
mov
jae
add
imul
cs
pusha
scas
xchg
and
cmpsb
cs
pop
lahf
jnp
inc
mov
repnz
sub
fldt
loopne
dec
ror
fs
mov
imul
data16
mov
pop
movsl
push
dec
mov
push
xor
sbb
sub
pop
bound
push
sarl
push
push
push
jp
int
mov
out
sbb
hlt
cmpsb
ror
dec
fucomi
ljmp
dec
mov
mov
dec
cmp
cmp
in
mov
mov
stos
push
pop
push
popf
popf
xchg
iret
sbb
scas
in
jno
lods
push
push
aas
jmp
iret
push
outsl
pop
add
xor
push
and
push
fcomp
mov
dec
and
ja
stos
ja
mov
mov
xchg
cmpsl
cltd
dec
js
mov
mov
mov
lcall
lret
mov
pop
fucomp
or
gs
repz
loopne
stos
pop
sahf
cmp
pop
ljmp
cld
nop
nop
and
xchg
add
loope
mov
loope
fdivrl
fstpl
push
sbb
push
jge
inc
mov
cli
mov
push
repnz
dec
mov
in
mov
je
in
sub
push
xchg
lock
mov
je
cmp
insl
test
std
xchg
mov
mov
js
xor
into
mov
mov
unpckhps
stos
jne
xor
jo
sub
mov
fwait
xchg
add
mov
call
dec
stos
in
addr16
mov
je
cli
mov
xchg
mov
jnp
sbb
dec
jo
adc
loope
enter
jle
mov
xchg
dec
cs
xchg
dec
push
pop
mov
mov
push
cmp
cmc
arpl
flds
cmc
aas
dec
in
lods
mov
sbb
add
fsubrl
mov
loopne
sub
fidivrs
push
pop
in
push
lahf
xchg
and
mov
sub
mov
jno
mov
rorb
ljmp
mov
jmp
out
push
loope
xor
or
stc
xchg
stos
stos
stos
xchg
imul
popa
bound
idivl
inc
adc
cmpsl
adcl
movsl
lea
ss
sbb
lahf
pushf
imul
in
iret
mov
push
mov
sahf
cmp
push
scas
arpl
dec
pushf
mov
mov
fdivrp
sub
jg
cwtl
or
dec
fadds
jmp
push
or
das
lods
icebp
mov
imulb
dec
or
push
pushf
add
ja
adcl
push
fldenv
jb
jle
testl
notb
xchg
rcr
adc
cmp
gs
xchg
dec
push
xchg
sbb
pop
pushf
xor
dec
std
stos
movsl
mov
xchg
js
and
jns
out
xchg
and
dec
scas
and
insb
jl
lcall
pop
add
sub
cmp
outsl
mov
movsbl
test
movsb
stos
mov
push
enter
in
ret
mov
ds
push
jp
push
jle
mov
lret
xchg
mov
mov
test
enter
add
mov
fisubrs
or
pop
out
sub
out
mov
cmpb
jmp
inc
dec
xor
repnz
rol
cld
rcrl
lds
lcall
mov
popl
stc
jecxz
lods
xchg
adc
daa
movsb
js
in
hlt
mov
jb
push
fiadds
adc
xchg
insb
scas
push
in
cmpsl
popa
sbb
cld
cltd
add
inc
in
test
mov
and
divl
aad
sub
fs
and
or
mov
mov
std
lods
int3
cs
inc
mov
shlb
sbb
pop
jo
aad
inc
jne
and
jne
mov
sub
js
mov
mov
clc
imul
imul
loope
jb
mov
mov
mov
les
inc
ljmp
mov
sbb
shll
into
std
ss
adc
arpl
js
ret
mov
insl
cltd
test
lods
jle
out
sarb
test
adc
lcall
movsl
pop
push
js
cmp
lds
andl
in
xor
loop
flds
lcall
shll
sbb
pop
shll
push
out
es
movsb
jmp
clc
and
imul
fidivl
sbb
ljmp
pop
aas
mov
push
dec
cmpsl
cmp
les
lods
outsb
mov
lret
xchg
loope
pop
lret
sub
mov
add
icebp
imul
mov
js
pushf
int3
mov
xchg
fwait
xchg
out
mov
shl
pop
sub
movsb
pop
test
inc
push
stos
pop
pop
jne
clc
imul
iret
and
sbb
cmp
fcom
push
cmp
scas
mov
adc
and
dec
pop
sub
sti
movsb
int3
add
mov
jg
mov
lock
mov
xor
push
sbb
jle
and
lret
jnp
cmc
arpl
pop
es
test
adc
dec
push
mov
imul
jle
jb
jg
sbb
adc
stos
fcoms
sub
adc
xchg
sahf
dec
pop
cmp
mov
in
sti
testl
xchg
mov
imul
gs
and
pop
and
or
jno
roll
mov
outsl
stos
lods
in
mov
dec
or
and
xchg
pop
scas
jg
add
fsubrl
pushf
jno
add
cmp
push
insb
mov
das
fcompl
xor
je
inc
push
out
leave
add
mov
dec
repz
in
add
mov
pop
add
outsb
fwait
and
dec
push
xor
or
cmp
movsb
lret
fs
xchg
fildll
lods
jl
stos
push
sub
insl
enter
lock
inc
pop
iret
push
pop
mov
pop
mov
fwait
sti
jp
and
aas
bswap
mov
xor
dec
sub
or
push
icebp
add
cmc
mov
adc
xorl
jne
fcmovb
lods
jns
stos
cmc
push
cmpsb
add
mov
mov
xor
inc
fdivrs
data16
cs
nop
scas
cltd
jmp
mov
in
ljmp
sub
and
xchg
inc
mov
sbb
mov
out
cs
outsl
sbbb
cltd
cvttps2pi
pop
mov
cmp
in
fcmovnu
arpl
out
test
push
test
pop
adc
cmp
in
mov
pop
and
mov
push
stos
out
mov
sbb
jo
xchg
movnti
mov
mov
pop
cmc
dec
dec
adc
test
push
in
and
outsb
decb
push
scas
aad
ret
popw
or
scas
cmpsl
mov
cmp
adc
js
cltd
mov
imul
aaa
mov
xor
lcall
sub
xor
mov
ss
pop
dec
rorl
stc
popf
dec
sbb
or
push
addr16
movsl
shrb
lods
sti
mov
fucomip
cmpb
loope
data16
popa
pop
arpl
rorb
mov
or
lcall
movsl
jecxz
push
cwtl
mov
mov
jmp
mov
das
div
js
popf
push
sti
or
cwtl
xchg
mov
lret
das
cwtl
add
jle
add
jg
push
js
mov
les
repnz
sub
loop
jmp
inc
in
pop
add
jg
repz
jnp
mov
mov
push
pop
cmc
jne
sti
dec
lods
inc
adc
xchg
mov
ficoml
or
outsl
das
pusha
cwtl
ljmp
repnz
mov
cmp
and
xor
push
andb
inc
movsl
pxor
ss
sbb
loop
push
in
popa
dec
addr16
lcall
xor
jecxz
in
nop
dec
jnp
les
lret
inc
sahf
ss
jo
xor
or
dec
outsl
jo
inc
mov
mov
ljmp
das
xchg
gs
jle
push
push
jo
jle
inc
mov
xor
xchg
psadbw
arpl
ja
rcrb
jecxz
inc
mov
test
xchg
mov
lock
adc
lods
and
mov
outsl
xchg
fcmovb
jae
jne
sbb
fstpt
dec
shrl
andl
xor
call
push
sub
lods
pop
es
mov
push
sarb
push
dec
fstps
sbb
push
push
movb
aam
lock
das
insb
sub
sahf
xchg
inc
scas
cmp
dec
int
and
xchg
pop
adc
xor
rcrb
mov
cltd
int
pushf
sbb
std
add
sti
push
aas
cwtl
push
xchg
in
xor
iret
sub
mov
add
cwtl
xor
repnz
aad
jo
mov
xchg
repz
imul
jne
js
mov
cwtl
mov
icebp
into
mov
mov
mov
leave
aas
pusha
outsl
loope
push
adc
testl
or
pop
mov
add
fidivrl
cmpb
rcrb
scas
push
push
loope
xor
leave
int3
xor
pop
cmp
push
out
outsl
pop
xchg
sub
bound
add
mov
xor
sub
test
sahf
icebp
xchg
push
loopne
xchg
fwait
sbb
mov
add
jmp
test
clc
jle
mov
and
push
xchg
dec
dec
and
or
arpl
adc
adc
push
scas
lret
lcall
adc
push
lret
mov
xor
push
dec
ret
cmc
jmp
ds
fdivrl
test
ret
xor
lret
xor
mov
shll
jg
jmp
add
inc
mov
test
inc
pop
xchg
inc
out
ds
pusha
cld
inc
jg
aas
insl
cs
int3
fmuls
lcall
push
mov
push
rorl
imul
dec
add
cmpsb
int3
movsb
mov
pop
lahf
test
sub
mov
pop
jge
insl
enter
out
push
sub
jg
or
xor
mov
adc
add
out
mov
mov
push
dec
lods
sub
leave
pop
pusha
pusha
cltd
fldt
fidivl
scas
mov
dec
test
stos
push
jp
mov
pop
jmp
sbb
jmp
inc
inc
insl
dec
fs
and
dec
rorb
inc
stos
push
add
sar
xor
cmp
fcmovu
xlat
dec
push
inc
jmp
cmp
xor
sbb
sbb
insl
sbb
inc
fmul
inc
push
fcomps
stos
jb
add
movsb
push
scas
in
sub
pushf
sub
cmc
out
mov
pop
int
test
pop
mov
lds
rcrl
cmp
std
jecxz
int
shlb
and
adc
push
mov
fs
mov
pusha
rclb
shr
sbb
rolb
in
movsb
out
lods
sub
mull
fsubrl
repnz
mov
inc
les
mov
mov
pop
xchg
mov
out
fs
adc
sbb
out
jle
mov
xor
sub
stos
cmp
push
ljmp
notb
jmp
imul
inc
or
sub
sub
inc
dec
popa
xchg
or
jbe
and
or
fadd
xchg
mov
fcmovnbe
adc
xor
int
aad
imul
sahf
or
xlat
mov
lds
addr16
cltd
adc
cmp
std
lods
and
pusha
fwait
jno
out
and
imul
lahf
cmpsb
in
imul
movsb
je
push
sbb
les
mov
ret
jge
jecxz
pushf
xchg
cmp
shrl
add
or
inc
add
or
mov
shl
add
cmp
inc
repz
loope
xlat
out
int3
adc
scas
and
mov
xchg
pop
and
fcomps
aas
dec
push
or
imul
xchg
mov
pop
mov
mov
cmc
or
or
xlat
or
push
mov
inc
dec
ljmp
int
cmpsb
sbb
ja
jle
stc
xchg
add
and
dec
push
push
aas
mov
push
or
mov
data16
push
aas
leave
int
xlat
outsb
jne
jmp
out
mov
fsts
movsb
xchg
sub
arpl
sti
sub
pop
adc
iret
popa
adc
jno
lea
pop
adc
mov
repz
jbe
pop
popf
fisubl
cmp
mov
xor
pop
in
out
pop
in
lods
cmp
out
cmp
pushf
dec
fwait
push
xlat
or
sbb
insl
adc
inc
xchg
repz
pop
jb,pn
fldcw
out
or
jp
das
cmc
adc
mov
add
dec
mov
jo
push
fldl2e
mov
and
jmp
mov
mov
nop
inc
iret
notl
movsb
add
inc
inc
and
fiaddl
push
sub
mov
mov
push
push
cmpsb
pushf
loope
xor
xchg
out
insl
pop
and
cmpsb
dec
fs
iret
in
add
mov
pop
ljmp
scas
mov
mov
inc
into
inc
loop
in
test
lahf
and
xchg
push
xor
test
dec
pop
jns
mov
test
mov
hlt
lds
and
addr16
addr16
xchg
mov
pushf
mov
outsl
jp
scas
xchg
cld
stc
pop
xchg
push
fldcw
mov
jmp
icebp
fsubrs
lea
fs
enter
pop
mov
cmpsb
dec
sbb
sub
or
ficoms
mov
outsb
lods
test
sub
call
mull
adc
hlt
es
sbb
xor
sbb
arpl
into
push
loopne
or
arpl
repz
jns
testb
dec
pop
mov
and
lods
inc
inc
add
jo
daa
aaa
xchg
sti
aad
ret
lods
repz
fldenv
repnz
loopne
jecxz
int3
mull
orl
sbb
fcomps
mov
add
aad
pop
int
xor
jne
pop
pop
xchg
push
xchg
inc
out
xchg
sbb
jle
mov
ss
mulb
pop
dec
aaa
xor
test
push
movsb
cwtl
in
jp
mov
add
push
in
clc
fdivrs
in
repz
cwtl
popa
mov
arpl
mov
loopne
or
mov
xchg
jl
mov
mov
cmp
rorb
pop
mov
cltd
fisubrs
jae
js
nop
addr16
sbb
push
jns
sbb
lret
imulb
mov
pop
cmp
insl
xor
xchg
inc
leave
les
sbb
lock
jle
cmp
sbb
js
fsubl
sub
test
pop
jo
fcomip
xor
test
inc
inc
xor
inc
and
mov
inc
add
sahf
popf
push
xchg
mov
cmp
pop
or
enter
rcr
mov
and
arpl
aad
cmpsb
aad
mov
dec
push
push
cli
push
ss
jbe
xchg
out
mov
and
mov
lret
add
loopne
enter
mov
mov
negb
mov
std
aaa
out
pop
xchg
push
out
pop
fldpi
icebp
and
lret
mov
nop
push
mov
xchg
xor
or
mov
xor
stc
sub
dec
sbb
and
lcall
or
insb
ja
insb
jle
outsl
add
mov
jnp
dec
push
negl
pop
xor
cmp
fcompl
mov
sub
insl
push
pushf
lock
or
insl
repnz
and
rorl
das
or
enter
jle
mov
out
dec
mov
popa
dec
add
jbe
clc
mov
cli
pusha
inc
jecxz
jle
lods
vcvtsi2sdl
cmpb
adc
or
lods
cli
ja
inc
dec
xchg
outsb
jno
pop
loop
sbbb
pop
or
pop
das
hlt
push
xchg
add
mov
jo
mov
aad
push
in
jmp
and
fsub
jo
fldenv
push
aaa
dec
push
loopne
repnz
mov
stos
pop
pop
ss
scas
mov
cmp
sarb
loope
xchg
cld
std
jae
mov
sub
daa
lahf
adc
sub
mov
jne
jl
xchg
in
cmpsl
int3
aad
je
dec
pop
hlt
mov
jno
mov
mov
sbb
ds
enter
cmp
pop
sbb
sahf
add
ds
in
xchg
mov
jmp
pop
sub
push
cmp
adc
mov
xchg
stos
test
outsb
lret
or
pop
cmp
enter
sub
push
push
jno
enter
std
in
fwait
in
xchg
push
es
mov
cmp
mov
xor
es
testl
divl
lea
lcall
loope
insb
dec
std
push
mov
add
pop
pop
lea
dec
in
mov
outsb
nop
orl
sbb
pushf
arpl
shll
adc
inc
mov
pushf
into
jmp
in
or
dec
int
fistpll
lret
enter
xor
mov
cltd
pop
test
xchg
jmp
icebp
add
add
add
adc
ret
and
xchg
shll
addl
lahf
dec
cmpsl
lar
adc
xor
cmpb
cmpsb
pop
pushf
xchg
mov
mov
and
cmpsl
ror
es
adc
add
das
jp
into
cmovo
xor
aas
xor
aaa
inc
shrl
xchg
adc
adc
fstl
outsb
nop
pop
adc
push
mov
cmc
das
mov
jbe
pop
sysexit
mov
sub
mov
loope
das
aad
and
jg
fs
int
inc
out
xchg
out
xor
sbb
lahf
dec
pop
repz
icebp
nop
xor
cmp
push
or
es
add
hlt
sub
jnp
pop
push
cmp
jnp
scas
push
nop
push
stos
mov
and
cmpsb
incl
cmpsl
push
mov
jmp
lods
push
cmp
testb
cmc
or
cwtl
dec
test
mov
jmp
sub
aam
stos
jo
out
pushf
dec
pop
pop
jne
clc
imul
cmpsb
inc
jecxz
pop
sub
stos
lahf
pop
sbb
js
hlt
push
adc
loope
cmc
pop
int
rcrb
das
jns
dec
add
jno
pushf
push
outsl
xchg
pop
or
mov
xchg
ss
adc
scas
xchg
xchg
rcrb
cmp
jg
int
loope
xor
or
cs
test
fdivrs
mov
imul
pop
mov
jne
xor
stos
and
mov
out
popa
es
dec
cmp
test
call
sbb
xchg
dec
ljmp
lds
sbb
add
ljmp
vpsrad
ds
cli
stos
js
dec
ja
popa
loopne
mov
pop
inc
subl
jp
fisttpl
stc
popa
xchg
and
or
repnz
and
pushl
js
sbb
adc
std
pusha
pop
push
fadds
insb
lea
idiv
or
mov
add
mov
push
adc
cli
push
pop
xor
lcall
stos
fstps
out
outsb
push
and
sbb
dec
pop
out
cmc
pop
jmp
inc
arpl
add
xchg
lds
mov
push
cmp
jne
xchg
shll
dec
bound
es
adc
or
or
pop
cli
std
aas
xor
xlat
imul
or
bound
ss
jp
lret
stos
dec
subl
pop
push
hlt
jg
add
ret
out
pop
daa
fistps
mov
lcall
ljmp
lret
dec
lsl
adc
and
shl
pop
rcrb
out
mov
cmp
gs
notl
sahf
test
in
scas
mov
cmpsb
mov
push
or
out
fstl
pop
adc
xchg
pop
test
sub
les
test
scas
stos
jle
ljmp
sub
cmc
push
js
lret
loope
mov
ja
inc
xchg
mov
stos
pop
adc
mov
jo
dec
movsb
sbb
cmp
or
dec
xor
adc
aad
and
js
imul
inc
jne
dec
sbb
xor
pop
push
daa
addr16
icebp
rcrl
in
ds
push
push
testb
xchg
fwait
lock
outsl
roll
popf
mov
push
cmp
push
test
notb
mov
js
movsb
rcll
jge
mov
lea
xchg
push
jmp
shrl
dec
push
cltd
or
and
inc
scas
iret
fstl
add
mov
cmp
sbb
out
lods
fcomps
push
cwtl
aam
push
sub
cltd
push
fistl
out
movsl
ret
cmpsl
repz
fistl
jne
inc
outsl
lcall
xchg
data16
or
cmp
mov
xchg
repnz
jle
cmpsb
cwtl
xlat
test
cmp
or
add
movsb
xor
stc
xor
lock
inc
or
lods
or
out
fcompp
push
dec
mov
pop
leave
or
fs
fs
or
insl
mov
insb
aam
daa
mov
push
fwait
xor
adc
into
push
sub
inc
rorl
dec
jmp
inc
insb
mov
insb
movsl
loop
imul
fidivl
adc
mov
add
sub
std
xchg
pop
lcall
mov
jmp
pop
lods
mov
xor
loope
xor
lret
cmpsl
lret
cwtl
add
fisttpl
fdivr
cmp
mov
movsl
pop
mov
in
sub
mov
lret
add
into
sbb
jmp
ret
pop
movsl
xchg
jo
jnp
loop
sarb
sbb
movsb
and
aad
out
addb
jecxz
pop
sub
shrb
xchg
cmp
ret
mov
scas
xor
xor
add
sbb
dec
mov
lret
std
mov
stos
loop
mov
or
sbb
and
adc
sub
pop
mov
sub
mov
adc
imul
sarl
inc
inc
pop
mov
push
movsb
push
sbb
mov
push
cltd
mov
cwtl
fnstenv
jno
loope
faddl
inc
popa
mov
icebp
into
outsb
pop
add
sti
mov
inc
out
mov
xor
mov
push
push
jmp
push
sbb
adc
repnz
stc
cmp
mov
add
sub
insl
push
xchg
lahf
fdivrp
push
fildll
rol
fsubs
inc
fs
rcll
out
xor
sub
ret
repz
or
subb
xor
je
addr16
add
shll
lcall
pushf
nop
scas
inc
popf
adc
or
ja
insb
mov
in
incb
xor
cmpsl
loope
scas
pop
or
push
push
pop
out
das
push
leave
std
xchg
mov
jno
cmpl
mov
xchg
fsubs
fisttpll
add
adc
sbb
adc
cld
pop
xor
pop
dec
in
or
xchg
aas
call
xchg
imul
ficoml
leave
aad
movsb
rcrb
pop
rcrb
lahf
pop
mov
scas
iret
mov
jl
adc
dec
outsl
inc
push
mov
nop
push
jg
pop
push
xchg
shrb
xchg
sti
adc
imul
jle
jmp
xor
cmp
out
push
lods
rcl
mov
ss
shl
notb
cwtl
sub
test
cmc
mov
ljmp
mov
int
pusha
movl
sub
call
in
adc
fimuls
pop
dec
xor
out
pop
jmp
pop
xchg
std
mov
sti
in
lret
pop
add
push
pushf
mov
xor
mov
pop
ds
ss
add
test
sub
pop
push
dec
xor
xor
add
shll
or
and
mov
sbbb
loop
mov
call
movsb
sahf
cmp
test
or
leave
mov
shl
mov
mov
or
daa
outsl
jle
clc
xchg
out
mov
push
xchg
add
mov
loopne
add
fldenv
mov
adc
sub
loopne
fldt
std
sbb
sub
mov
inc
scas
pop
test
add
stos
jnp
hlt
cmp
scas
imul
and
scas
sub
ror
out
ret
pop
add
xlat
jo
add
mov
aad
aad
adc
fwait
xor
jbe
xchg
imul
adc
jbe
out
subl
leave
inc
lods
mov
xor
dec
xchg
or
inc
mov
scas
loop
lret
pop
test
imul
je
mov
and
sbb
bound
rclb
orb
in
inc
add
out
inc
cmp
adc
cmp
std
inc
sbb
call
sub
xor
cmp
pusha
jge
fiaddl
cmpsb
or
movsl
fidivl
adc
mov
out
xor
push
jo
in
data16
xor
mov
cmp
jns
mov
pop
sbb
test
int
cmp
cli
sbb
fwait
test
imul
aaa
cmp
mov
dec
fisubs
icebp
jne
scas
push
movsb
cmp
addr16
push
aam
pop
jo
adc
das
add
out
out
inc
pop
stos
lret
mov
es
xor
or
fsubp
mov
addr16
ds
pop
inc
pop
cmpsb
lret
sbb
aam
mov
add
movsl
int
shl
test
repnz
dec
xor
dec
pop
clc
scas
mov
mov
cmp
loop
dec
xchg
mov
xor
popf
add
stc
jbe
mov
mov
outsb
mov
mov
imul
idivb
dec
cwtl
cmp
imul
cwtl
xchg
xchg
cmp
push
js
and
inc
or
sub
mov
and
lods
and
jle
jmp
insb
loop
addr16
jmp
pop
or
xor
jno
repnz
jo
cmc
aaa
add
sub
lahf
lahf
inc
ljmp
pop
jle
mov
dec
dec
mov
sub
inc
das
in
adc
popf
cmp
leave
inc
scas
fwait
aas
jnp
aad
sbb
aaa
pop
fisttpll
mov
movsb
ret
jmp
fisubrs
pop
shll
popa
cmp
movsb
imul
xchg
add
cmp
xchg
cmpsb
adcb
call
mov
sbb
fisttpll
into
cmp
push
cwtl
daa
fwait
sbb
in
mov
and
dec
dec
jno
pop
ss
xor
stos
das
out
cmpb
mov
mov
inc
incb
gs
popf
fadd
jge
mov
xchg
sub
cli
adcl
scas
divb
sbb
mov
mov
mov
rolb
or
out
dec
dec
cltd
xchg
add
push
je
push
push
mov
sub
mov
xchg
cmp
xor
stos
ljmp
mov
cltd
push
mov
test
ficoms
outsb
out
clc
sub
clc
das
jmp
lods
xor
shll
aam
dec
pop
mov
pop
aaa
or
in
aad
into
jb
add
xchg
dec
sub
inc
xor
or
pop
repz
mov
pushf
and
fwait
mov
add
mov
adcl
rcrl
inc
mov
lods
or
nop
out
stos
jbe
js
push
jge
int
dec
push
imul
sub
jl,pt
mov
ja
gs
jmp
jecxz
movups
inc
cmp
iret
in
pop
xor
daa
mov
or
in
jno
punpcklbw
xchg
bound
add
loope
mov
imul
lahf
loop
andb
pop
fsubl
xor
xchg
xchg
xor
xor
fstpl
stc
push
aad
mov
dec
bound
aad
movsb
jbe
jge
fisttpl
push
fisubl
fbld
sub
bound
loop
mov
sbb
xor
dec
jne,pn
je
in
cmp
data16
jecxz
cmpsb
jae
mov
fildl
notl
mov
pop
test
jecxz
pop
sbb
xor
andl
cmp
test
aad
std
aam
stos
dec
xlat
imul
inc
or
into
mov
xchg
adcl
or
nop
lods
mov
and
call
adc
xchg
push
fstpl
mov
mov
jmp
pop
jns
int3
jae
pop
or
loop
add
mov
iret
adc
out
xchg
nop
and
pop
fldlg2
adc
scas
fstpt
mulb
lock
ret
inc
rcrb
je
mov
push
movsb
daa
ds
push
dec
xor
sbb
je
cltd
dec
inc
imul
lea
in
jns
hlt
das
in
mov
loop
ret
mov
fdivs
dec
inc
mov
mov
pop
mov
sbb
jb
dec
outsl
ljmp
lods
mov
scas
aam
fs
scas
mov
lret
jne
mov
cmpsl
mov
shrb
test
sbb
incl
push
jae
mov
lea
mov
ret
pop
lahf
pop
cmpsl
xchg
dec
cmp
shll
jae
lock
jo
outsl
jbe
fcomp
imul
testl
mov
insl
test
mov
movsb
jge
jmp
insb
sub
call
push
inc
imul
inc
cmp
cmp
jne
mov
cmp
adc
xor
and
lock
cmpsl
orl
mov
loope
call
aas
cmpsl
insl
xchg
pop
jp
popf
js
pop
push
lods
xchg
inc
push
mov
xchg
push
add
out
sub
faddl
leave
mov
cmp
insl
in
sub
js
dec
movsl
and
inc
fwait
pusha
cmpsb
in
shll
or
push
ja
sub
push
ss
aad
push
cli
leave
enter
push
popf
js
scas
mov
sti
jb
lret
sbb
scas
ror
xor
inc
jnp
aas
outsl
aad
cltd
dec
jo
mov
add
adc
jae
loopne
pop
jne
loopne
mov
fs
stos
inc
stos
sbb
sbb
push
mov
fistl
or
test
sbb
dec
mov
pop
int
mov
ja
ljmp
lock
insl
pushf
arpl
into
int
mov
stc
adc
push
imulb
je
ret
rolb
aas
adcb
push
scas
arpl
bnd
xchg
shrb
outsb
xor
in
dec
ret
fistps
sub
add
mov
pop
into
mov
paddusw
inc
mov
cmp
iret
jg
leave
fldl
fdivl
shrl
mov
jb
push
mov
mov
xchg
nop
das
adc
dec
ljmp
daa
sub
popa
xchg
inc
cmp
pop
cmp
xor
fcomps
outsl
jp
mov
add
xchg
lds
out
add
cmp
fs
pop
imul
cwtl
ds
xchg
test
cmpsl
push
in
daa
jle
iret
div
aas
cmp
std
mov
push
loope
cmpsb
push
jle
mov
lret
adc
std
jnp
jg
insl
fwait
out
arpl
shll
add
mov
repz
inc
ss
lods
jnp
push
sub
adc
fwait
add
adc
mov
sub
dec
add
push
mov
flds
sub
xor
clc
add
cmp
mov
mov
orl
mov
test
and
jae
jge
xor
pop
jmp
mov
push
jmp
cmpsl
push
xchg
mov
dec
fwait
jle
mov
add
icebp
idivl
xchg
mov
push
in
pop
dec
lret
cmpsb
cltd
adc
push
pop
lock
arpl
cmp
imul
dec
cmp
es
pop
jecxz
or
dec
dec
fwait
push
sub
and
int
push
stos
inc
clc
bound
sahf
lock
ret
fildl
out
cmp
into
jne
lea
int
scas
inc
stos
push
addr16
hlt
jbe
jno
sub
pusha
in
jbe
cli
sbbl
add
test
test
rorb
and
push
inc
inc
push
sbb
or
shlb
sub
arpl
aaa
push
or
movsl
test
fnstenv
xor
sbbl
inc
jl
pop
sbb
lods
mov
adc
popa
negb
cmp
and
and
or
cli
mulb
jb
cmp
push
pop
inc
lods
push
scas
jns
xchg
mov
mov
outsb
pop
movsb
dec
ret
jnp
lea
bswap
loopne
jno
or
pop
addr16
inc
mov
and
mov
int
popa
xchg
adc
mov
icebp
cld
out
jg
dec
adc
movsl
icebp
and
out
cmpsl
stc
scas
push
clc
push
pop
and
add
mov
add
push
or
cld
in
lea
mov
push
lcall
je
mov
sub
orl
addr16
xchg
mov
iret
mov
mov
arpl
aam
mov
into
mov
dec
test
es
enter
adc
cmpsl
cmp
add
inc
das
mov
cmp
push
xor
jecxz
std
loopne
inc
jne
xor
push
jb
cwtl
xor
sub
and
sub
dec
adc
daa
mov
out
ja
bnd
jbe
test
adc
loopne
add
ljmp
xchg
mov
push
pop
inc
xchg
in
pushf
je
sub
repz
popa
stos
pop
rcll
adc
std
jns
jnp
dec
fdivp
xchg
es
daa
icebp
pop
jnp
sahf
out
bound
xchg
cwtl
jmp
and
add
ret
adc
sub
push
mov
jl
mov
cmpsb
inc
int
or
dec
sub
pop
loope
aaa
mov
into
pop
ljmp
aaa
int3
and
mov
and
mov
jnp
fisubrs
mov
jne
imul
clc
gs
jae
in
sbb
pop
mov
sub
pop
call
jae
aas
xor
mov
enter
and
popl
sub
inc
push
mov
test
aaa
out
fstpt
jnp
xchg
push
add
dec
xchg
mov
or
xchg
movsb
out
cmp
fwait
and
and
out
test
cs
jb
lock
lds
adc
pop
shll
inc
xchg
or
mov
lods
mov
test
clc
popf
int3
cmp
push
stc
pop
inc
or
and
inc
sbb
aaa
mov
int3
rorb
test
push
je
and
add
out
sarb
cld
aad
pop
rcr
rorb
or
movsl
mov
enter
fsts
pop
jns
fs
in
mov
and
mov
cmp
les
js
ja
ret
mov
std
or
int3
dec
andb
lret
enter
in
mov
mov
mov
mov
jge
pop
in
push
nop
bound
cwtl
or
adc
push
adc
fptan
push
mov
fwait
insb
cmpsb
hlt
js
cmp
xchg
insl
mov
xor
loopne
sub
das
loope
sbb
adc
les
out
testl
ret
ret
icebp
xchg
daa
addr16
sbb
and
out
loop
out
lods
and
scas
fistl
pop
or
lds
mov
lret
push
mov
cmpb
inc
notb
and
xchg
popf
or
incb
push
sahf
es
and
jle
push
enter
push
mov
mov
aas
add
repz
cmpsb
add
into
xor
push
ljmp
loope
cmp
rorb
dec
aam
cltd
in
ficompl
xchg
loope
test
leave
stc
das
ljmp
mov
mov
push
mov
test
and
lods
lret
mov
push
cltd
mov
cmp
lock
fsubrl
dec
push
mov
popa
mov
mov
mov
push
dec
bound
in
lock
pop
sbb
jge
lret
lods
mov
adcb
push
dec
out
imulb
aaa
and
sti
les
popf
ss
pop
es
inc
mov
or
cmp
and
sbb
and
lods
push
add
lds
sub
int
pushf
out
jb
xchg
mov
or
int3
pusha
sub
mov
sub
or
lock
xlat
mov
enter
outsl
dec
fst
hlt
loopne
das
aad
jb
bswap
popf
pop
mov
dec
testl
or
sub
push
add
jmp
aaa
jne
add
fcoms
jmp
loope
push
xor
jno
adc
add
cli
inc
scas
repz
xor
cmp
inc
xchg
dec
cmpl
or
and
call
fidivl
mov
mov
ss
inc
jo
jb
jg
sub
and
hlt
adc
in
shl
pop
in
add
movsb
jp
shr
ja
stos
nop
mov
xor
repnz
pushf
push
in
xchg
jae
xor
and
inc
adc
and
adc
sti
sbb
cwtl
cmc
sub
je
pop
andl
add
jle
jnp
mov
enter
dec
fnstsw
in
mov
fs
add
cmc
cwtl
dec
test
scas
jg
and
add
les
sub
push
adc
fcomp
sub
testb
out
adc
jmp
jge
rol
jnp
popl
aas
mov
inc
xchg
imul
adc
pop
dec
pop
mov
push
cmp
mov
aas
cmpsb
vucomisd
push
lods
xorb
cmp
cmp
mov
pop
dec
pushf
nop
call
jno
repnz
mov
lea
out
in
xor
movb
xor
jmp
mov
add
sbb
and
enter
aaa
addl
pop
cs
mov
std
les
dec
push
movsl
repnz
cld
subb
fildl
loopne
call
push
std
mov
sub
adc
mov
in
sub
aad
sub
add
jmp
and
jmp
pusha
add
out
xchg
mov
sti
push
push
jge
js
insl
cld
cmp
cmp
pop
add
jl
dec
inc
mov
xor
mov
mov
fistpll
xchg
outsb
xor
call
rcrl
das
pop
ds
fwait
add
sub
sbb
xchg
sbb
dec
sbb
pop
inc
in
and
sub
adc
push
mov
mov
mov
xchg
ret
nop
ss
scas
lar
into
mov
movsl
jb
add
int
inc
mov
lret
cwtl
ss
push
fsubp
adc
mov
sbb
roll
out
fisttps
lahf
inc
xchg
in
jno
mov
push
mov
mov
test
xlat
mov
xchg
or
or
aaa
jp
inc
push
xor
jbe
ret
cmp
mov
jb
jne
lret
insb
or
ret
and
cmp
nop
fstp
dec
test
mov
inc
mov
pop
dec
inc
push
or
dec
jl
mov
cmp
push
xor
jge
ret
jl
test
push
mov
mov
and
enter
aam
loop
mov
cwtl
or
sbb
xor
imul
push
cmc
xchg
xchg
mov
jge
aam
xlat
cmpsb
jbe
adc
dec
pop
js
mov
push
std
sub
mov
nop
mov
dec
mov
add
dec
fildl
pop
pusha
idivb
lock
dec
xor
cmp
les
aad
cld
das
insl
mov
xchg
pop
push
subl
test
mov
inc
enter
adcl
or
popf
in
add
out
xchg
icebp
daa
add
mov
add
sub
fcmovb
xlat
jg,pn
fildll
mov
mov
xchg
popa
aad
push
sarl
dec
icebp
xor
sub
lock
dec
sbb
sbb
arpl
notb
ljmp
adcl
shl
nop
data16
std
xchg
repz
popa
and
mov
pop
iret
xor
cmp
imul
cwtl
sub
mov
sub
cmpb
dec
aas
test
sti
in
lods
jge
mov
cld
in
test
xchg
jnp
xor
aaa
push
and
adc
nop
pop
xor
iret
loop
rorb
fcmovu
and
sbb
test
cmp
jge
dec
push
pop
mov
sarb
popa
out
cli
stos
out
ljmp
mov
adc
push
xchg
pop
jo
rcl
sub
jno
cvtpi2ps
ljmp
std
aaa
mov
xor
shlb
inc
in
cmc
pop
popf
mov
mov
fsubs
dec
mulb
fsubr
in
jg
faddl
or
inc
les
rep
pop
fbstp
icebp
adc
xchg
loop
sbb
dec
mov
inc
cld
jbe
xchg
scas
ds
popf
out
mov
pop
cld
add
jmp
cmp
dec
xchg
sub
mov
mull
inc
out
jl
icebp
aas
into
aaa
rclb
stos
aam
lcall
push
cmp
push
push
adc
stc
aam
addb
mov
lret
inc
inc
sbb
fiadds
std
ficoml
icebp
lret
pop
int3
xchg
jp
sbb
mov
mov
xor
or
pop
out
insb
scas
je
stc
jl
push
stos
or
add
mov
repnz
sub
sub
stos
xchg
sbbl
cmc
mov
and
and
mov
adc
int
jecxz
incb
and
push
mov
inc
clc
cmpsb
pop
cmp
hlt
mov
cld
aaa
fldenv
fwait
add
xchg
cwtl
enter
or
xorb
sub
stc
or
sub
xchg
dec
xor
mov
pushf
neg
cmp
outsb
repnz
sub
add
cwtl
cmp
test
in
rcll
sti
xchg
int3
iret
mov
mov
or
dec
in
mov
addl
jp
int3
in
aad
lahf
cmp
mov
sti
stc
test
test
dec
sub
dec
fs
lahf
outsb
cld
cs
cmp
loope
push
jae
dec
std
bound
addr16
pop
add
push
mov
imul
sub
push
sbb
insl
mov
das
shl
pop
into
mov
xor
incl
push
mov
adc
je
cmp
mov
rcll
pop
movsb
test
ret
xor
xchg
mov
jmp
les
mov
xor
xchg
loop
leave
mov
pop
xor
jb
stos
int
pop
dec
dec
aas
inc
add
sbbl
dec
bound
lcall
xchg
stc
xchg
pop
stos
dec
cmp
shll
push
sbb
scas
sbb
dec
adcl
or
movl
adc
or
ret
fildl
sub
and
pop
lret
std
jno
cmpb
sbb
roll
mov
stos
in
and
addr16
xchg
cmpsl
imul
pop
sbb
inc
adc
imul
xchg
jge
jnp
mov
jmp
pusha
test
aad
push
xor
lahf
frstpm(287
pop
cmc
inc
cltd
shll
and
mull
push
dec
jle
inc
xchg
cs
mov
push
dec
inc
addb
push
xchg
push
imul
lret
pop
daa
sub
dec
jge
mov
mov
sub
mov
sub
lret
mov
add
cmp
inc
sahf
xchg
and
mov
cltd
adc
xchg
rorl
sub
lods
cmpsb
sub
in
or
or
add
ficompl
mov
lods
pop
xchg
push
fucomip
mov
out
xchg
sbb
nop
inc
cmp
jmp
dec
in
cli
lock
xchg
outsl
sbb
divb
xor
ret
mov
and
wbinvd
ljmp
mov
xchg
pop
and
xor
stc
mov
cmp
jbe
cs
cwtl
lock
inc
lock
mov
in
inc
sub
mov
xchg
add
lahf
push
or
push
ret
push
mov
movsb
adc
sub
inc
jmp
dec
insl
xchg
pop
jg
jge
ljmp
fcomip
jne
cmc
cs
daa
daa
lds
xchg
push
pop
push
or
adc
jmp
jne
push
adc
or
clc
bound
adc
sub
lock
and
shlb
xor
or
lahf
enter
pop
jbe
jbe
mov
xor
ds
mov
imul
clc
cmp
jge
jne
lods
jns
in
dec
fxch
lret
jo
or
dec
sbb
mov
mov
lahf
adc
pop
stos
dec
jno
push
mov
and
aad
mov
je
or
mov
or
cmp
std
cltd
imul
add
imul
jl
test
mov
add
dec
andl
mov
hlt
out
adc
xchg
imul
cli
mov
jo
cld
or
int
int3
dec
jp
pop
aam
ret
jl
pop
cmp
cmc
nop
jmp
cmpsb
cmp
gs
push
stos
or
adc
mov
inc
ja
rcrb
aas
outsb
dec
push
jb
cld
cli
xchg
cmp
push
dec
jns
mov
nop
addb
pushf
mov
mov
cmp
pop
mov
les
cwtl
imul
outsl
addr16
mov
and
mov
xor
lea
rcr
test
cmp
cmp
aas
jb
pusha
roll
test
mov
pop
adc
or
lds
sbb
aad
insl
xchg
sub
lods
or
pop
cmp
ss
aam
imul
pop
pop
and
cs
shr
repz
inc
aad
push
xchg
sbb
ret
adc
mov
in
lret
adc
popa
xchg
or
ret
ljmp
cmp
pop
xchg
fisttpl
aad
jmp
inc
xchg
pop
xchg
pop
test
mov
icebp
and
fsts
out
mov
or
divl
xor
push
out
mov
lahf
shlb
ficoms
loop
lods
lahf
mov
out
aaa
es
data16
mov
jmp
push
and
and
pop
decb
in
mov
xchg
scas
das
mov
outsl
jg
sahf
divb
lods
mov
punpcklwd
test
aas
popf
jbe
jo
test
mov
es
outsb
mov
pop
sub
fldl
and
cwtl
rol
adc
fmull
fwait
iret
sub
cmp
out
scas
lods
mov
pop
sbb
inc
je
leave
cli
add
lock
dec
sbb
popl
sbbb
fdivrs
gs
imul
cmp
mov
lods
repz
jo
push
cmp
xchg
int3
aas
fs
jne
lods
xor
push
and
push
aam
xchg
inc
push
pushf
icebp
pop
or
sub
jle
mull
adc
push
sbb
adc
xor
pusha
test
ja
stos
mov
test
cmp
xor
cmc
sub
cli
fs
fs
push
xchg
inc
fistps
imul
or
sahf
add
push
ret
mov
or
out
mov
jns
outsb
sub
sub
cmp
xchg
aam
pop
std
lock
bnd
stos
cmp
mov
or
mov
mov
jecxz
movl
popa
into
mov
dec
iret
inc
inc
into
insb
icebp
scas
adc
loop
cmpsb
mov
in
sbb
mov
mov
std
cld
pushf
and
aam
dec
jbe
pop
mov
xchg
je
dec
loop
dec
pop
in
dec
cmpsl
popf
int3
jbe
fcomps
scas
push
mov
aaa
mov
dec
mov
mov
lret
inc
push
adc
sub
xchg
out
stos
repz
sub
fwait
cmpsl
pop
and
adc
mov
pusha
pop
gs
mov
jmp
and
data16
insl
cltd
daa
fisttps
mov
push
cld
repnz
lcall
into
mov
and
je
jecxz
cld
clc
mov
stos
sbb
pushl
sub
sub
push
jo
adc
mov
sub
xchg
mov
popa
ret
push
pop
xchg
and
loope
stos
add
mov
sbb
div
les
inc
xchg
and
or
ja
stc
lcall
ret
outsb
adc
notb
jl
enter
outsl
call
adc
fs
out
in
or
push
dec
gs
iret
popf
sub
mov
mov
in
or
push
xor
insb
mov
sbb
xor
lret
mov
fiaddl
lret
les
mov
inc
je
std
cmp
ficompl
pushl
push
cmpsb
xor
dec
mov
fsts
ljmp
mov
mov
data16
inc
dec
xchg
and
cld
cmpsl
mov
mov
ret
sbb
pusha
xchg
dec
out
xor
sti
ficompl
pop
pop
dec
pop
pop
lea
stos
push
es
jmp
jecxz
cld
xor
mov
pop
negb
fcompl
mov
mov
pop
ss
pop
mov
fisubs
jae
popl
std
std
mov
jns
dec
ds
jmp
pop
inc
popa
add
ret
ds
push
movsl
sbb
stos
mov
scas
and
push
sbb
or
pop
push
iret
nop
fmull
push
test
push
add
pop
ret
mov
sbb
xchg
gs
lcall
sub
mov
shlb
xchg
cmp
inc
pop
mov
dec
pop
mov
or
or
movsl
mov
push
pop
ret
pusha
cmp
loop
movb
movsb
xchg
add
or
int
jg
insl
xor
aas
xchg
jne
cwtl
adcb
aas
and
jo
mov
ficoml
insl
bound
pop
mov
aas
xlat
xchg
dec
nop
std
mov
pop
sub
mov
mov
mov
mov
stos
repz
pop
push
stos
imul
insl
lret
pop
xor
adc
inc
jp
fisttpl
aad
or
mov
mov
cmp
mov
into
inc
xchg
xorl
push
sbb
out
out
inc
mov
jmp
xor
test
icebp
inc
mov
clc
or
dec
popa
stos
out
mov
dec
std
add
mov
jge
mov
push
inc
inc
inc
mov
imul
cmp
pop
enter
aam
subl
mov
mov
jge
pop
adc
dec
aad
mov
cmp
ss
sub
dec
arpl
xchg
jg
push
sbb
std
aad
out
outsl
aaa
gs
clc
lds
aas
out
fwait
lahf
xchg
push
jmp
push
in
cmp
mov
lahf
leave
mov
mov
in
hlt
shlb
fcompl
aas
dec
push
jbe
daa
push
xor
cmc
cmp
les
mov
mov
jns
mov
mov
inc
loope
cmpsb
mov
push
jns
pop
xchg
xor
sub
sub
xchg
adc
cmp
jmp
sbb
insl
loop
mov
sbb
scas
outsl
out
in
cmp
ss
je
adc
xchg
aas
mov
xor
xchg
mov
mov
divb
cmp
xor
je
sbb
push
mov
cmc
fldl
not
pusha
xor
pop
arpl
and
mov
push
enter
es
clc
fsubs
imulb
fcmovne
dec
sub
rorl
pop
or
push
loope
cmp
cmpsl
push
cmpsl
scas
mov
mov
in
bound
les
in
and
adc
adc
push
out
xor
fs
or
lock
in
dec
clc
repnz
adc
push
cmp
pop
mov
push
mov
sub
ret
lods
bound
mov
push
mov
out
mov
out
das
mov
fsubrs
jns
inc
fstpl
lods
cmp
enter
outsb
xor
cmpsb
xchg
pop
movsl
mov
lcall
das
sbb
jno
adc
xchg
push
aam
ljmp
cmp
adc
je
int3
les
pop
movsb
cld
xchg
notl
inc
push
repnz
xchg
mov
adc
jecxz
out
daa
pushf
mul
mov
push
add
lea
add
mov
int
psrlw
cmp
in
xor
bnd
push
pushf
pop
push
mov
cmc
mov
inc
push
dec
ss
insl
imulb
and
popa
add
sub
fadds
scas
std
cli
ss
sar
jnp
shlb
mov
mov
testl
sbb
aam
dec
fdivs
std
adc
push
fstp
xor
pusha
gs
cmp
int3
div
xchg
lods
cmp
lea
and
push
dec
test
mov
mov
test
out
hlt
push
enter
mov
xor
adc
pop
gs
push
test
ficomps
dec
mov
cmp
and
loope
xchg
cmp
jnp
int3
popf
lea
out
pusha
pop
jae
dec
rcrl
cmp
les
push
out
mov
jmp
xchg
and
xchg
data16
fnstenv
data16
stos
outsl
or
or
in
adc
push
test
pop
negl
xchg
sbb
hlt
nop
push
add
add
cmpsl
sarl
mov
les
mov
inc
mov
pushf
cli
mov
mov
xor
rcrb
jb
add
gs
ds
pop
inc
addr16
imul
lahf
jmp
sbb
decl
fcomi
xor
xor
sahf
inc
sbb
lcall
movsb
adc
js
fs
std
xor
call
aam
das
and
pop
and
jecxz
push
sub
orb
pop
jae
xor
sub
scas
adc
icebp
rorb
call
mov
adc
andl
mov
lock
mov
ds
and
movsb
jg
and
inc
mov
xchg
or
xchg
pop
leave
inc
rorl
or
lahf
xchg
cmp
popa
out
adc
enter
cmp
mov
fcoms
insl
and
fimull
iret
and
mov
cld
pop
hlt
xchg
inc
mov
jle
jbe
or
jo
test
jle
rol
or
mov
sub
out
icebp
inc
mov
mov
in
dec
adc
js
popa
cld
shrl
int3
or
ljmp
dec
ret
add
fdivs
cmp
push
adc
dec
lahf
std
xchg
add
fwait
jne
sbb
cmp
jnp
adc
xchg
in
fsubrs
push
xchg
sbb
and
iret
mov
and
jns
insl
inc
nop
in
clc
imul
lahf
jbe
or
xchg
pop
push
sbb
xor
inc
jb
pop
mov
xchg
rcll
in
arpl
push
dec
mov
in
jnp,pn
cmpsl
loope
js
aam
pop
cmc
mov
out
shrl
inc
sbb
dec
scas
out
les
idivl
sbb
scas
mov
mov
sbb
ds
inc
lcall
xchg
jo
ss
popf
mov
ret
push
or
pushf
xchg
sbbb
orl
iret
jne
jo
xor
cwtl
ret
popa
dec
lret
xchg
call
jp
bound
lods
xchg
jmp
mov
cmpsl
in
addr16
subb
jge
sbb
mov
lret
insl
xchg
mov
mov
mov
mov
xor
rcrb
fdivrl
mov
push
push
data16
jl
xor
or
adc
pop
mov
pop
insb
pop
icebp
dec
or
jp
shrl
xor
dec
xor
lahf
push
fstl
xchg
test
and
ds
or
sub
add
daa
sub
cld
mov
cmp
mov
or
loop
xor
mov
lods
fisttps
popa
pop
insb
repnz
inc
pop
and
movsl
inc
mov
ret
mov
inc
out
clc
enter
inc
push
xchg
mov
xchg
mov
lds
imulb
fmull
ljmp
xchg
pop
mov
insl
adc
xor
dec
xor
push
xor
xor
or
nop
dec
popa
adc
stos
lock
mov
int3
popa
xchg
add
jge
push
addr16
mov
outsl
inc
jle
out
push
cmp
mov
jno
pop
add
bound
adc
les
jge
jno
jmp
insb
les
cwtd
pushf
and
stc
fistl
mov
push
sbb
adc
push
imul
xor
mov
mov
outsb
cs
xchg
mov
pop
add
mov
mov
test
ljmp
inc
repz
and
fs
or
inc
daa
outsb
aad
aad
jbe
aas
sbb
pop
push
adc
mov
inc
dec
jl
mov
scas
shrb
clc
lahf
std
orl
shrb
aas
imul
or
pop
aas
push
jbe
dec
out
jns
je
pop
and
push
repnz
dec
push
mov
test
mov
shrb
pusha
xchg
pop
cmpsb
cmpsb
push
adc
mov
bound
fbstp
sarl
xchg
rolb
dec
xor
mov
inc
push
in
aaa
xchg
jmp
inc
stos
pop
stc
cltd
jne
add
push
jmp
out
pop
jg
pop
inc
xchg
ret
imul
sub
sbb
jne
aaa
inc
mov
enter
push
mov
push
aad
and
sti
cmpsb
and
mov
sub
xor
sub
dec
jecxz
mov
out
loop
pop
mov
daa
xchg
sahf
test
xchg
aad
mov
jno
sbb
aam
scas
push
out
xchg
and
fistps
outsb
jnp
stos
pushl
clc
push
add
loopne
mov
rcll
add
or
sub
xor
aas
xor
movsl
andl
lret
xchg
les
sbb
pop
xchg
xchg
pop
mov
dec
xor
in
rcrl
mov
jno
push
mov
inc
mov
sub
pop
or
and
jo
test
std
in
cmp
ficomps
in
int
das
fcompl
fldenv
add
insl
fdiv
pminsw
mov
fld
icebp
lret
pop
pop
xor
in
mov
cmpsl
shl
out
out
je
jnp
enter
xchg
sub
fimull
or
cltd
stos
out
inc
pop
outsb
mov
mov
test
xchg
xchg
xchg
lahf
lods
jb
and
fisttps
push
icebp
filds
subl
or
mov
out
outsl
fbstp
js
push
rcr
jmp
push
ret
fcomps
jmp
bound
sbb
dec
stos
popf
cmp
jb
push
inc
mov
mov
mov
jp
in
jbe
ja
jg
cwtl
cwtl
or
push
push
xor
inc
pop
lahf
push
mov
and
xchg
cltd
loope
sbb
addb
imul
ljmp
lods
mov
testl
shlb
sbb
stc
aad
iret
lds
inc
popf
push
ss
or
lret
push
xor
adc
jg
jmp
imulb
outsb
push
pop
shrb
xchg
jnp
cli
pop
xchg
ror
xchg
cmc
pop
lahf
mov
jns
and
inc
cs
inc
pop
dec
or
roll
xchg
sub
out
lods
cld
int3
sub
aas
pop
ret
popa
insb
push
adc
cmp
shlb
sahf
push
movb
rcrb
adc
jmp
add
out
dec
add
test
sub
jmp
call
pop
sub
pop
cld
dec
in
inc
and
imul
pop
icebp
or
icebp
cmpsl
add
sub
loopne
cmpsl
iret
adc
shlb
frstor
sub
jl
mov
push
rolb
sub
jbe
mov
and
lcall
mov
and
xor
lret
dec
lcall
sub
subb
mov
mov
xchg
in
dec
cmp
push
pop
cmp
cmpsb
cmpsl
inc
popa
xchg
push
push
xchg
aaa
mov
pop
lahf
xchg
adc
testl
dec
mov
xchg
insl
or
fs
cmpsb
data16
popf
popa
lock
ja
insb
lahf
cwtl
daa
lods
daa
lret
loop
pop
in
jae
ds
lahf
fscale
mov
loopne
pushf
stos
mov
inc
inc
xor
into
push
sub
ret
xlat
mov
test
insb
sbb
movsl
aam
ss
pop
adc
outsb
call
add
cmpsl
mov
push
sbb
mov
or
inc
shlb
jne
into
push
push
jns
repz
sub
xor
jae
cli
sbb
jbe
out
ljmp
pusha
scas
test
sahf
xor
xchg
and
adc
sbbb
mov
ja
orb
dec
call
mov
fimull
lock
lods
cmp
dec
xorl
lds
xchg
jo
mov
mov
aas
lret
test
test
pop
xlat
movsb
int
lret
out
scas
adc
inc
xchg
cmp
imul
ljmp
push
fs
push
lds
mov
adc
mov
movsl
and
push
mov
in
fld
mov
outsb
adc
les
jle
jge
cmpsl
lock
mov
adc
imul
out
rolb
int3
push
sti
or
inc
call
incb
pop
xchg
fwait
sti
sub
dec
gs
push
lret
mov
lret
pop
repz
fsubrs
and
jl
aas
fs
cltd
fs
divl
enter
jg
int3
inc
data16
cwtl
fwait
xchg
or
int
cmc
mov
and
int
mov
mov
or
adc
fisttpl
mov
xor
mov
xchg
dec
lret
adcb
cmp
mov
std
mov
xor
cmpsb
pop
out
inc
inc
dec
inc
cwtl
xor
add
mov
sub
push
mov
mov
adc
pop
cmc
inc
dec
pop
sarb
sbb
jno
pop
or
in
arpl
imul
jns
jno
mov
mov
insl
icebp
mov
jle
clc
add
dec
add
std
add
je
in
xor
xchg
adc
mov
lock
xor
mov
xchg
fldln2
sub
or
clc
mov
push
adc
add
pushf
and
cmp
inc
jbe
fisubrl
inc
lret
and
insb
stos
out
pop
fsubrs
stc
imul
or
jge
out
pusha
iret
sbbb
stos
push
push
xor
testb
int3
dec
jnp
pop
lods
mov
or
jge
iret
pop
pop
fisttpll
or
inc
inc
cs
jmp
pop
push
sub
pushf
mov
in
mov
add
xor
test
xor
sbb
je
push
sbb
add
xchg
xor
enter
add
popf
inc
fsub
aas
or
xchg
mull
loop
outsl
and
insl
out
sub
cmpsl
dec
iret
dec
inc
outsb
shl
ss
sub
dec
or
flds
inc
push
in
mov
loope
fsts
int3
xorb
mov
pop
push
inc
pop
scas
xor
mov
ret
jmp
jmp
cmp
jecxz
inc
loop
push
test
push
cmp
jl
aaa
push
rorb
lea
inc
popa
push
ds
cmpb
lcall
test
imul
sbb
xor
mov
clc
insl
sub
bound
arpl
cwtl
dec
rcl
pop
or
ror
arpl
rolb
pop
mov
lahf
push
xchg
mov
bnd
jo
mov
pop
outsb
sub
add
push
loop
cmc
repz
das
clc
cmp
in
cwtl
xor
adc
mov
cmp
xchg
mov
jno
pop
pop
fldt
fldl
sbb
jge
pop
lret
push
dec
cwtl
mov
clc
push
test
sar
jg
adc
cli
ss
in
das
xchg
xor
fsubs
xchg
xchg
jb
or
push
xchg
xchg
jb
or
out
scas
push
out
scas
es
insb
fisubrl
test
outsb
cwtl
scas
ret
sub
ljmp
leave
add
pusha
out
sar
ds
adc
push
std
mov
cli
push
or
adc
or
rcr
jns
xorb
mov
xchg
je
imul
insb
sub
ja
push
pop
xor
in
xor
loopne
jmp
push
fdivs
mov
fisubl
fs
push
xlat
subb
or
insb
sti
mov
jl
sbb
inc
mov
es
or
sbb
add
push
and
sbb
or
jno
pop
stc
cltd
cmp
shll
shlb
stc
cli
mov
addr16
or
sbb
mov
and
outsl
or
mov
aad
ret
subb
xchg
out
dec
inc
movsl
push
div
xor
rcl
clc
div
dec
sbb
hlt
test
or
inc
add
xchg
testl
jmp
pop
dec
push
cmp
jle
jnp
into
mov
fisubrs
daa
jo
jb
dec
adc
xor
xchg
push
frstpm(287
jg
xchg
test
inc
jmp
dec
mov
jmp
mov
lods
xchg
in
mov
stos
xor
jne
cmc
mov
stos
gs
inc
lea
jg
adc
xlat
rclb
jbe
cmp
cmpsb
mov
jmp
sbb
cltd
std
and
fisttps
mov
jecxz
iret
ret
test
add
push
cmc
daa
call
nop
xor
loope
repz
and
outsl
or
dec
and
pop
and
jbe
test
jno
outsb
jmp
jb
int3
stos
pop
mov
jge
stos
movsb
mov
and
jl
cld
pushf
lock
mov
sub
dec
in
mov
cmc
sahf
mov
push
pop
cmpb
sbb
xor
ljmp
mov
or
pop
in
sbb
pop
or
ds
sahf
int3
dec
mov
sti
lock
in
xchg
xlat
nop
loope
into
or
inc
int3
xchg
ljmp
lahf
int3
inc
or
cmp
in
fdivr
pusha
or
out
inc
push
and
fwait
xchg
sbb
stos
ret
pop
stos
int
cwtl
lock
cmpsl
ds
loope
jb
popa
or
hlt
and
outsb
mov
adc
in
mov
or
adc
rcrl
mov
divl
in
mov
data16
dec
dec
scas
xchg
push
or
scas
repnz
mov
mov
or
hlt
icebp
cltd
shrl
adcb
add
fidivl
and
mov
scas
loope
mov
inc
imul
push
stos
jmp
sbb
inc
xchg
inc
into
sbbl
leave
je
mov
and
ss
clc
into
iret
push
fs
jge
jae
and
sarl
and
inc
pop
out
aas
jg
lock
push
mov
cmp
and
mov
mov
cmp
or
xchg
ljmp
sti
mov
mov
loope
xchg
adc
out
mov
xor
jne
in
dec
aam
sub
inc
jmp
movsb
and
lahf
inc
cmpl
sbb
mov
push
insb
pop
mov
dec
lock
rcrl
cmc
out
cmpsb
inc
push
popa
popa
mov
mov
out
ret
out
push
mov
test
sub
inc
lods
fs
jno
mov
adcb
adc
cmp
in
sbb
inc
push
jle
popa
push
or
jp
arpl
jae
out
mov
mov
adc
jmp
push
mov
push
sub
pop
in
dec
xchg
jp
cmpsb
push
shrb
movsb
xor
adc
data16
push
iret
int3
pop
push
shll
jge
test
cld
enter
cwtl
sbb
sbb
arpl
mov
flds
mov
or
fs
and
mov
nop
sbb
stc
fiadds
out
cmp
ja
in
pop
add
xor
mov
jb
pop
sub
idivl
iret
sbb
cmc
xchg
push
pushf
mov
test
cwtl
add
jne
add
or
pop
test
inc
mov
adc
cmp
aam
test
and
xlat
pusha
into
divl
faddl
sub
cmp
inc
popf
cmp
sub
xchg
add
cltd
mov
jg
mov
lods
inc
fistps
adc
xor
xchg
mov
xchg
xor
or
repnz
fs
and
imulb
mov
ret
xor
xchg
inc
les
mov
imul
pop
jae
lahf
aaa
jae
shll
popf
enter
jb
sbb
repnz
lret
fisttpl
jecxz
mov
mov
iret
shll
push
adc
mov
lock
insb
cmp
popa
cmpsb
add
push
inc
in
xchg
jle
push
mov
and
push
insb
mov
sti
js
scas
stos
sar
insb
or
repnz
adc
pop
in
mov
pushf
outsl
repz
lock
lcall
xchg
mull
xlat
xor
xchg
icebp
push
test
jp
mov
mov
pop
add
hlt
or
dec
inc
rorb
push
mov
insb
or
lods
scas
fwait
jmp
mov
sbb
sub
dec
shlb
cmp
mov
out
adc
call
xchg
arpl
dec
xchg
add
ret
pop
daa
pop
out
subl
js
mov
add
xor
sub
shll
or
test
aas
dec
mov
dec
pop
in
adc
mov
or
push
testb
cmp
sbb
mov
int3
mov
inc
in
mov
js
push
pop
gs
lcall
push
jge,pt
push
outsl
in
and
sub
adc
enter
std
leave
nop
xchg
int3
stos
cmp
pop
adc
cli
jle
sub
mov
xchg
xchg
imul
divb
pop
or
adc
imul
das
test
adc
sti
jg
adc
es
and
shr
in
or
and
add
movsl
mov
shlb
or
jnp
and
inc
lcall
add
sbb
cmp
jge
es
addl
stc
and
and
dec
ret
sub
sarb
mov
mov
jo
cmpsl
lret
insb
mov
pushf
add
jl
jns
cmp
hlt
or
push
push
insb
inc
push
mov
les
cld
lret
xor
rclb
xor
cmc
mov
pop
aas
daa
dec
rcll
push
lods
shlb
inc
frstor
out
cmp
scas
and
out
jb
test
movsl
jg
ficoms
adc
daa
pusha
jmp
mov
dec
fs
arpl
stc
mov
or
icebp
pop
jno
dec
inc
pushf
pop
rorl
test
movsb
out
sub
rorb
cld
push
aas
adc
shlb
push
mov
stos
scas
push
flds
add
cmp
sbb
scas
shll
push
dec
scas
sar
jbe
sahf
xchg
pop
push
loopne
adc
and
das
jecxz
push
test
fmuls
cld
and
xchg
shl
jmp
aaa
cmp
dec
and
pop
cmpsl
sbb
sbb
mov
xchg
mov
leave
cli
sbb
fucomip
push
or
dec
xchg
cwtl
mov
xlat
notb
loop
cmp
push
repz
and
clc
outsl
imul
adc
mov
lock
mov
call
mov
sbb
sub
and
test
repz
call
dec
pmovmskb
lea
cmp
jae
in
push
push
xchg
xchg
sub
clc
mov
xor
push
push
and
sub
nop
mov
pop
push
mov
cli
sahf
js
xor
cwtl
clc
pusha
in
and
cld
mov
mov
data16
inc
aas
pop
xchg
lret
jl
jne
or
cmp
xchg
or
sarl
push
stos
or
lahf
push
xor
xor
add
mov
ja
div
fldt
push
push
xchg
cmc
ret
aas
mov
inc
cmp
jbe
adcl
sbb
sarl
fdivrs
rcrl
addr16
xorl
inc
test
mov
sbb
inc
jbe
enter
fdivrs
or
cmc
lods
push
mov
push
fistps
or
inc
pop
fucomip
or
dec
push
iret
aad
imul
jl
pop
xor
cmpsl
xchg
push
pop
aad
push
lcall
fimuls
push
inc
in
mov
or
or
sbb
cltd
xor
jnp
cmp
push
les
pop
lahf
push
ss
inc
push
inc
pop
and
std
test
xor
out
pop
xchg
sbbb
add
sbb
xor
adc
inc
movsl
pushf
cs
add
imul
pusha
sbb
push
mov
lret
ret
aam
pop
movb
and
cmp
mul
jo
pop
mov
add
mov
mov
rolb
imull
dec
sub
in
push
aad
sbb
stos
push
jg
and
lods
fadds
pop
jp
notl
popa
int3
inc
mov
cli
mov
lods
lea
push
mov
int3
mov
cmp
push
xorb
cwtl
sub
call
test
xor
push
std
xchg
push
cmpb
enter
repnz
cmp
jae
cmp
or
xchg
mov
test
aas
inc
mul
outsl
movsl
mov
mov
int
fdivrs
out
mov
add
mov
int
int3
inc
xlat
fs
cs
sbb
and
push
push
mov
hlt
pusha
mov
aam
jmp
push
lods
repz
ficoms
rclb
pop
ret
aaa
repnz
mov
ss
adc
sub
lcall
push
outsl
sub
cmp
push
mov
jle
jnp
sub
nop
lret
jns
xor
loopne
mov
popf
test
adc
lds
cmp
sbb
in
nop
fwait
push
lods
mov
mov
sbb
subl
push
sbb
mov
shll
cmp
imul
fsubp
sbb
mov
mov
idiv
mov
test
cmp
and
fs
cli
insb
jne
push
sahf
cmp
mov
mov
ljmp
push
xor
xor
and
sbb
adc
in
cmpsb
pusha
or
xor
adc
pop
enter
and
lcall
lods
push
out
dec
stos
loop
cmpl
dec
cld
fs
pop
sbbb
mov
pop
adc
lods
icebp
in
mov
sub
or
sbb
in
mov
push
cmpb
push
mov
jae
pusha
xor
sarb
insb
and
xchg
mov
inc
mov
jge
or
cmp
imul
mov
rclb
roll
pop
inc
mov
and
mov
filds
cmp
add
xlat
call
cmc
lret
sbb
sarl
xor
scas
mov
inc
push
cmpsb
std
movsl
mov
pop
lret
sub
jmp
cmpb
aaa
pop
dec
cld
movsb
call
pop
dec
adc
cmc
push
jbe
push
sub
clc
lds
add
mov
or
push
in
sbb
pop
mov
or
add
jge
jns
jl
in
stc
jmp
lds
or
loopne
xchg
sahf
mov
fld
data16
mov
sahf
adc
jbe
cmc
iret
mov
loopne
xor
push
cmpsl
lret
push
or
pop
not
jl
jo
mov
lret
pop
push
push
push
into
fcompl
xchg
int
roll
insl
xlat
mov
lods
sbb
push
push
or
addr16
jne
jns
jne
push
sbb
mov
jno
jl
sbb
mov
sti
sbb
xor
sbb
xor
or
mov
std
aam
fmulp
fisttps
shrl
push
outsb
repz
ljmp
das
pusha
adc
fistpl
lods
mov
push
inc
in
ds
clc
movsl
xor
or
icebp
sti
xlat
xchg
rorl
fidivrl
push
test
ja
rcl
test
push
and
and
and
sahf
mov
sub
pop
inc
inc
dec
xlat
hlt
inc
outsb
or
and
mov
fiadds
jg
pop
addr16
and
xchg
push
cmp
test
xchg
xchg
and
insl
adc
xchg
add
push
aad
orl
dec
insb
xchg
cld
jne
fs
inc
and
ljmp
push
pop
push
imul
pop
ja
mov
daa
test
push
push
dec
call
xchg
out
sub
in
lret
out
adc
lds
sbb
mov
imul
jnp
loop
gs
scas
xchg
pusha
mov
popa
push
std
push
movsb
inc
pushw
rcll
dec
push
jmp
pop
ja
mov
aaa
and
inc
scas
orl
repnz
bound
imul
push
mov
jge
push
out
or
popa
stos
lahf
mov
mov
push
testb
push
jae
pop
adc
stc
rcrb
aam
mov
test
clc
dec
jo
xchg
test
das
movsb
daa
mov
mov
cmp
mov
les
sub
jmp
push
out
xchg
inc
in
inc
test
push
test
enter
or
aam
pop
jae
into
xor
xor
lcall
pop
lds
and
outsb
cmp
js
push
ret
and
sub
gs
int3
mov
mov
cmp
xchg
mov
iret
adcl
mov
jp
bound
pop
out
mov
aad
or
fstl
js
mov
and
insl
sub
pop
scas
inc
fxch
shlb
popf
and
and
rcll
test
arpl
test
cmp
dec
data16
xor
movsb
jae
xchg
xchg
popf
cld
xchg
and
or
scas
cli
sbbl
xchg
rcrb
out
mov
out
and
in
shrb
shl
cs
es
mov
xchg
mov
or
addr16
les
pop
xchg
jo
pop
mov
sbb
cmpsl
pop
js
and
hlt
mov
mov
rcrb
dec
pop
fdivs
xchg
data16
dec
dec
mov
shr
dec
or
inc
add
sub
repz
out
inc
decl
shlb
or
adcl
jmp
mov
movsb
and
xor
jmp
testb
jo
cmp
pushf
movsl
sub
add
cmc
cmp
leave
testb
scas
or
dec
das
mov
push
sub
je
hlt
sbb
xchg
scas
cmp
or
pop
push
cmp
repnz
popf
push
sub
les
cmp
inc
popa
xchg
cltd
fistl
mov
inc
ret
iret
inc
sub
stos
inc
or
mov
xlat
mov
insl
add
mov
mov
pop
or
fistps
loop
loop
jb
xchg
pop
orb
dec
lods
icebp
test
add
inc
pop
mov
cmc
cmpl
jle
scas
lock
outsl
mov
nop
arpl
xor
xorb
into
cli
mov
jp
cmpsb
mov
outsl
mov
mov
movsb
push
pop
inc
nop
or
jl
push
sub
into
xor
mov
lds
mov
xor
cwtl
inc
jo
push
and
lcall
cli
sbb
scas
mov
adc
fcmove
or
cmpsl
dec
add
gs
es
sub
cs
mov
add
loopne
jb
aas
mov
ret
push
repnz
inc
cs
jae
push
sahf
imul
adcl
in
hlt
out
xlat
mov
mov
js
mov
clc
pop
xchg
cmp
mov
iret
frstor
movd
es
pushf
ss
jmp
pushf
dec
pop
cmc
mov
add
insl
test
add
ja
stos
enter
mov
lds
jmp
data16
outsb
mov
push
xchg
scas
inc
aas
mov
lret
add
outsb
pop
push
add
jbe
jg
iret
or
and
outsl
popa
ret
pop
imul
test
pop
sub
or
test
fidivs
mov
inc
xor
xchg
in
push
pop
adc
nop
dec
mov
jl
add
incl
subb
fiadds
lahf
sbb
mov
xor
add
xlat
mov
shll
jecxz
lret
jb
aad
push
xchg
cmc
out
or
cmp
jecxz
cmc
cltd
mov
insb
mov
adc
aas
mov
inc
inc
addr16
and
mov
push
test
cmp
pop
pop
mov
xchg
std
popf
scas
into
out
mov
mov
sub
negl
cltd
adc
mov
pop
mov
inc
push
das
int
aad
xchg
mov
adc
loopne
push
movsl
adc
fs
movsb
and
aad
scas
lret
icebp
clc
jne
pop
and
scas
sub
add
fists
dec
cmpsl
pop
nop
cmc
subl
hlt
rcll
pmaddwd
lcall
xlat
inc
in
or
xlat
add
pop
and
push
or
lcall
in
bound
iret
xor
shlb
adc
cld
and
cli
addr16
and
push
fs
sub
movsl
aas
enter
xor
add
lahf
test
fs
or
pop
push
popf
xchg
sahf
dec
mov
push
bound
stos
or
out
scas
mov
xchg
ljmp
push
inc
ret
fmull
or
ret
gs
popf
lahf
and
mov
loope
sbb
lret
jle
aam
data16
lods
and
cmp
mov
adc
push
aam
aam
cmp
jecxz
movsb
cmp
mov
addr16
loope
and
fldt
or
addr16
ret
push
adc
mov
dec
int3
add
sbb
dec
add
mov
xor
outsb
or
popa
hlt
xor
sti
test
dec
adc
xor
xchg
lret
movsl
stc
imul
or
lcall
sub
cmp
or
daa
dec
push
repnz
adc
pop
sar
jo
xlat
cmp
repz
push
enter
outsl
cli
pop
or
jae
test
in
inc
sti
push
mov
xor
fnstenv
cmp
test
faddl
lret
cmp
mov
fdivs
jo
repz
dec
inc
sbb
push
jecxz
iret
xor
sub
and
sbb
in
sbb
mov
dec
push
dec
daa
scas
push
push
mov
push
mov
adc
add
lods
pop
in
movsb
xchg
mov
rcrl
ljmp
sub
lods
lock
pop
push
xchg
insb
pop
fildl
dec
sub
lock
mov
dec
inc
testl
xor
and
bound
mov
not
jle
dec
in
idivl
ss
lahf
or
xchg
leave
push
pop
lcall
and
lea
out
fimull
inc
xchg
mov
repnz
or
mov
xchg
out
pop
adc
insb
mov
xchg
inc
or
aam
or
and
test
pop
inc
lcall
enter
lret
inc
rcll
adc
rcrl
es
push
aad
iret
jg
addr16
mov
rolb
jge
mov
xchg
outsb
dec
mov
sbb
popa
pop
in
mov
pop
inc
or
sbb
jo
scas
out
xchg
cmp
pop
mov
aad
mov
push
sarb
bound
mov
xor
jae
lods
mov
int3
push
call
jle
xlat
mov
sub
lods
stos
pusha
jmp
pop
pop
jb
jne
mov
dec
mov
mov
imull
aam
enter
dec
pop
xchg
mov
pop
inc
and
push
xor
lret
outsl
je
in
push
jl
sub
ss
shrl
lods
bound
adc
adc
dec
jg
dec
xchg
xchg
loop
aaa
adcb
push
and
fistpll
cs
stos
out
je
jo
or
jecxz
push
dec
mov
enter
dec
sbb
lock
jns
sbb
or
cli
jbe
popf
pop
mov
lea
loopne
rcrl
and
int
inc
push
out
mov
stc
daa
ret
psubq
movsl
jecxz
sub
stos
in
sub
xchg
lods
enter
push
fstps
or
or
je
movsl
sub
mov
out
iret
mov
jmp
sbb
mov
pop
dec
mov
mov
mov
pop
mov
pusha
xchg
adc
jle
adc
mov
cs
je
jmp
xchg
les
push
pusha
mov
in
ja
or
jns
cmc
mov
aam
pop
in
loop
aam
push
movsb
mov
xchg
ret
adc
movsl
adc
sti
outsb
mov
inc
adc
inc
fisubrs
rcrb
loopne
pop
jg
adc
fwait
out
jns
xchg
pop
daa
xor
mov
mov
mov
hlt
cmpsl
popa
jae
xchg
mov
sbb
xchg
or
and
fnstcw
and
dec
cs
xlat
inc
lds
popa
mov
sbb
or
pop
xchg
mov
mov
and
movsb
shl
mov
out
sub
cli
adc
mov
mov
add
insl
and
adc
mov
mov
mov
cld
jge
xchg
push
imul
div
outsb
scas
bound
push
sbb
imul
loope
or
ret
or
in
push
sub
hlt
fs
pop
lahf
xchg
xchg
pushf
mov
mov
pushw
xchg
outsb
aad
pop
inc
mov
gs
into
or
xchg
std
ds
or
mov
inc
xchg
sub
jns
mov
ficomps
ret
enter
in
cmp
aas
dec
mov
hlt
and
sub
rcl
mov
mov
test
mov
xchg
cmp
xchg
sbb
inc
sub
mov
push
dec
cvtps2pd
lret
or
pushf
add
in
push
inc
psubusw
enter
test
cmpsb
cmc
jecxz
lods
mov
push
mov
idivb
mov
sub
cmc
and
out
xchg
and
mov
xor
jg
sub
test
ret
or
inc
sub
sbb
inc
dec
xor
push
into
xor
sbb
mov
out
jae
fsubl
push
cld
fidivs
mov
notb
add
ljmp
shll
sbb
out
xlat
or
gs
xchg
inc
mov
pop
mov
sbbb
pop
int3
adc
addl
ja
cmp
push
dec
test
mov
mull
or
popa
setge
out
or
push
data16
jmp
sub
popa
pop
jmp
dec
stos
ret
insl
test
push
mov
fsubr
sbb
sbb
daa
sbb
inc
test
pusha
movsb
dec
mov
arpl
out
ss
je
adc
push
es
je
push
aam
retw
lret
test
roll
jbe
aad
jp
hlt
fadds
mov
int
mov
dec
cmc
mov
hlt
dec
jp
adc
jecxz
mov
in
push
fidivrs
xlat
inc
or
es
pop
dec
xor
les
mov
lcall
dec
clc
pop
push
cld
aaa
and
cld
sbb
lahf
xor
cs
lcall
insl
nop
mov
loope
lods
add
in
movsl
sbb
addl
inc
stos
clc
cmp
xchg
mov
testl
call
mov
adc
les
add
dec
sbbb
adc
cwtl
pop
clc
mov
jecxz
sub
aad
int3
cli
xor
test
xor
dec
in
fisubl
dec
bound
add
pusha
ja
push
pop
mov
out
ja
mov
movsb
movsb
bound
xlat
pop
mov
fdivrs
push
xchg
adc
icebp
daa
sti
lods
pop
inc
jl
andl
jns
stc
mov
push
int3
inc
insl
jns
fbld
clc
sub
dec
fadds
inc
aad
mov
out
or
xchg
push
bound
mov
adc
lahf
sbb
mov
mov
int3
ret
mov
xor
shr
dec
cs
mov
pop
mov
inc
or
xor
jg
mov
mov
lahf
jb
and
jp
sub
jbe
leave
in
imul
aaa
rorl
inc
inc
pop
out
pop
mov
or
cmpsb
sti
jnp
arpl
add
int
ds
add
frstor
mov
leave
mov
lahf
adc
fldl
and
repnz
lds
pop
xor
sahf
je
push
xchg
aas
pop
inc
mov
inc
xchg
dec
push
jnp
add
xchg
bound
pop
adc
xchg
fs
jno
sbb
dec
movsb
mov
cmp
lods
inc
fsubrs
cltd
inc
adc
fildl
xor
xchg
aas
cs
ljmp
push
add
inc
repz
push
and
cmp
das
fscale
lret
mov
xchg
fsubrp
pushw
int
and
inc
push
adc
dec
arpl
sbb
sahf
rcrb
repz
cmp
and
xchg
mov
push
or
xorb
adc
cmp
fwait
adc
lods
popf
push
xchg
or
mov
xchg
mov
popa
enter
lds
mov
fisttps
push
jle
mov
cltd
and
mov
adc
loope
minps
mov
fisubrl
fisubrs
jge
je
aaa
ss
sbb
push
mov
and
icebp
movsb
adc
arpl
jb
sub
aas
xchg
mov
inc
inc
ror
test
dec
jp
mov
outsb
aaa
lcall
push
call
sbb
push
jle
in
cmp
stos
mov
psrlw
test
out
xchg
jg
fisttps
and
testl
pop
jnp
dec
sbb
lods
ret
mov
lods
mov
mov
cli
xchg
sti
es
test
data16
xchg
mov
daa
out
mov
xchg
faddl
jle
insl
mov
inc
pop
xor
aas
inc
xor
outsb
int3
test
fildll
add
adc
sub
outsb
push
adc
pop
jae
leave
cli
loope
adc
icebp
dec
lods
inc
shrb
ret
in
sub
jae
mov
cmp
inc
sub
call
add
cld
std
shlb
loop
pop
push
cmpsb
pop
cmpsl
mov
sbb
cmp
lfs
push
imul
insl
jno
in
mov
mov
lahf
xor
adc
int3
mov
invd
rcrb
inc
int
mov
testl
das
xor
icebp
test
sbb
mov
jp
sub
rclb
fdivs
pop
leave
xchg
jge
dec
inc
lds
xor
cld
gs
dec
int
pop
mov
and
jb
ljmp
fists
jg
inc
punpcklbw
lret
mov
call
mov
pop
data16
jno
movsb
inc
clc
mov
std
push
in
xchg
pop
lcall
mov
inc
push
movsb
dec
fbld
xchg
mov
cmp
inc
std
fistl
in
gs
push
rcrl
inc
fisttps
sub
mov
xor
xchg
loope
mov
cmc
xchg
lods
fists
outsb
xor
push
pop
push
mov
lcall
xchg
mov
addl
and
xor
inc
mulb
add
hlt
xchg
cmc
sub
mov
jle
xorb
mov
outsl
adc
mov
and
lahf
push
mov
test
mov
sbb
mov
imul
clc
nop
jns
sti
sub
dec
cli
jbe
int
mov
push
mov
clc
rolb
addr16
inc
outsb
push
mov
add
mov
das
pop
loopne
xor
and
add
rolb
inc
mov
movsb
lea
mov
fwait
pop
sarb
mov
cmp
xchg
pop
mov
lahf
movsb
movsl
inc
shrl
ret
xchg
cmp
fcmovu
addl
fdivr
inc
rcrb
jns
mov
imul
test
and
mov
les
stc
xchg
dec
inc
sub
fs
inc
icebp
ja
scas
sbbl
outsb
iret
xchg
popa
mulb
adc
cld
and
push
mov
leavew
sbbl
cmp
loop
cmp
push
data16
jmp
cmp
jp
lcall
stos
and
movsl
lahf
pop
mov
aaa
sbb
mov
lds
outsl
mov
sub
in
mov
xor
mov
js
mov
scas
cmp
addr16
sbb
push
sbb
mov
jge
rolb
dec
mov
sub
inc
and
fldt
adc
fcomps
xorl
xlat
xchg
icebp
xor
hlt
or
mov
popa
jb
jp
add
rorl
mov
add
loopne
aam
out
push
cld
mov
mov
arpl
es
lds
arpl
cs
enter
enter
mov
aas
es
test
lahf
call
lods
or
or
clc
clc
mov
dec
lods
imul
std
test
push
sahf
movsb
insl
std
push
sti
cli
movb
adc
out
pop
out
inc
add
xorb
sub
add
mov
ficompl
sti
or
and
sti
stc
pop
into
cmp
jo
insb
jl
inc
push
xchg
aad
orl
mov
clc
and
mov
mov
xor
cmpsb
je
or
hlt
ds
gs
dec
fnstsw
jo
call
add
insb
sbb
cli
jl
pop
mov
ret
cltd
test
push
rclb
in
mov
test
in
jbe
fisubrl
push
sbb
mov
push
lret
mov
mov
cmp
push
xchg
iret
mov
mov
fwait
xorb
test
bnd
cmpsb
add
sub
in
pop
in
or
sti
into
mov
cmpsl
popa
or
ret
xchg
sbb
adc
out
ret
stos
xchg
lahf
xor
lods
xchg
ds
pop
or
lret
push
sti
into
push
sbb
and
dec
xor
xlat
or
int3
sbbb
push
dec
add
popa
fxam
imul
iret
xchg
lds
icebp
mov
sub
and
cmpsb
sbb
clc
dec
scas
cmp
and
xchg
jl
mov
aam
outsl
rcll
mov
pop
add
sub
lods
adc
ret
inc
jg
add
sysenter
adc
mov
nop
aad
arpl
jns
mov
fldt
or
mov
dec
mov
jl
pop
push
int3
ret
or
negl
stos
mov
push
push
dec
xor
fs
repnz
divl
sahf
mov
cmpsb
mov
cmp
sbb
sbb
mov
jns
push
cmp
rolb
sub
and
jg
popf
inc
sbbb
cmp
stc
into
adc
cwtl
mov
std
mov
push
test
ss
mov
pop
sbb
mov
lods
ss
push
rcrl
je
andl
mov
test
or
movl
ret
aad
sbb
sbb
pop
outsl
shll
sub
push
inc
repnz
xchg
lods
lahf
jns
mov
xchg
outsb
inc
sub
cmp
mov
xor
and
aam
pop
push
fisubs
filds
xlat
sub
jmp
jl
popa
and
add
jmp
fisubs
sbb
mov
fcmovnb
ds
aaa
mov
dec
shrb
sbb
xlat
das
std
in
mov
add
ds
sbb
out
sbb
and
imul
les
jg
sub
hlt
repnz
lea
sbb
sbb
sub
jae
sub
mov
jg
cmp
sbb
aaa
mov
jmp
jae
lret
sbb
push
lods
arpl
addr16
in
das
repz
dec
adc
enter
mov
add
and
lcall
negb
mov
imul
cmp
cwtl
adc
pushf
push
cmp
lods
jne
or
int3
stc
dec
xor
out
xor
fildl
push
pop
sub
je
test
sub
mov
std
sahf
xor
insb
mov
aam
js
xor
dec
add
jmp
out
add
in
jl
xchg
adc
pusha
frstor
in
fldt
in
pushf
sbb
icebp
or
in
cmp
sbb
mov
pop
nop
cmp
mov
stc
mov
jo
xor
lret
ds
dec
ss
or
dec
push
adc
or
xor
lahf
xchg
jg
repnz
icebp
popf
mov
call
xchg
gs
dec
cmp
sub
loope
lahf
xlat
fs
xchg
rolb
mov
adc
enter
mov
pop
outsb
jne
jle
ja
aas
jbe
sub
sbb
pop
gs
xchg
ljmp
lock
and
mov
testb
pop
out
or
sbb
in
push
mov
je
mov
push
dec
add
cmc
sub
jle
daa
mov
push
dec
or
adc
pop
xchg
adc
jl
inc
pop
in
jl
and
mov
iret
movsl
or
shlb
push
pop
outsl
cmp
sub
addl
enter
sahf
dec
hlt
pushf
aaa
aas
insl
adc
pop
or
xlat
push
cmp
push
dec
xchg
flds
lea
or
cmp
pop
jbe
dec
add
cli
out
rcll
scas
ret
es
out
aaa
pop
jp
into
addr16
outsb
movsb
out
adc
int3
jle
test
xchg
mov
mov
cmp
mov
cmp
es
ficomps
mov
mov
pop
out
idivb
jle
cmp
data16
lds
arpl
movsb
rcll
lods
adc
and
les
je
stc
fbstp
mov
ret
insl
test
xor
into
data16
es
dec
mov
xchg
mov
push
lods
int3
sub
push
mov
jle
dec
mov
es
jae
add
ret
out
dec
rcl
cmp
js
bound
dec
repz
add
lods
jmp
ret
popa
lret
lds
inc
lcall
xchg
fstps
orl
dec
push
lock
subb
shl
mov
cmp
mov
xor
dec
sbb
inc
lods
sahf
shlb
lock
out
mov
sub
repnz
mov
adc
jo
or
popa
std
or
lret
sbb
sub
mov
test
iret
xchg
mov
pop
repz
sahf
imul
mov
mov
push
pop
xchg
xor
and
xor
mov
xchg
popa
inc
xchg
push
shlb
push
lock
add
add
and
aad
ds
fmuls
xchg
lock
mov
lock
jle
hlt
dec
loopne
or
mov
lods
jmp
jecxz
mov
sub
adc
fdivrs
pop
mov
in
adcl
sub
insl
stos
sub
inc
stos
xor
push
insb
mov
and
mov
lods
stos
fidivl
jmp
ret
pop
ljmp
test
xor
mov
cmp
dec
imul
in
pop
adc
adc
sub
or
cltd
jne
in
pushf
inc
jg
ret
hlt
fsub
lds
fs
stos
cld
popf
mov
mov
jp
jo
pop
adc
mov
in
ljmp
scas
mov
push
rcl
add
fisubs
fs
es
loopne
add
or
or
fistps
or
dec
pusha
cld
pop
mov
sub
ljmp
pop
cmp
or
fldl
paddw
imul
and
arpl
push
fcoms
pop
add
dec
add
xchg
sub
xchg
xor
mov
push
sbb
cmp
cmp
lds
arpl
add
ds
pop
pusha
mov
lea
and
add
mov
push
push
add
add
test
xchg
adcb
add
dec
mov
lods
sbb
lahf
and
outsb
mov
ds
adc
icebp
sub
xor
cmp
icebp
das
rcr
adc
jae
pop
sbb
xchg
jg
data16
mov
pushf
fwait
pushf
inc
and
or
sarb
add
add
cwtl
inc
pop
mov
subb
mov
imul
ss
fisttpll
test
repnz
push
loope
mov
add
into
int
adc
adc
xchg
mov
scas
mov
in
stos
push
pop
mov
int
xor
into
scas
stc
sarb
movsb
mov
popa
inc
or
pusha
add
add
cmp
hlt
add
stc
jbe
xor
mov
fmuls
adc
dec
adc
xchg
mov
ret
mov
imul
xor
mov
test
inc
outsb
icebp
in
mov
jecxz,pn
loope
cmpsl
cmp
lret
xchg
pop
into
sbb
es
test
mov
cmp
mov
push
aad
pop
adc
stc
inc
lock
shll
aam
mov
and
jno
jb
scas
fbld
push
sub
sbb
xchg
adcl
sub
sub
pushf
cs
imul
push
sbb
sub
mov
pop
ret
stos
test
add
enter
nop
push
xor
in
cli
jmp
push
cmp
sarb
jl
add
mov
mov
cmp
cmp
or
imul
pop
and
pusha
push
sbb
out
mov
clc
xor
lea
jp,pn
jnp
mov
and
cmp
jnp
stos
leave
test
dec
and
outsb
mov
movl
jge
mov
cli
inc
mov
cmp
mov
arpl
xchg
dec
jge
pop
xor
pop
inc
jl
fcmovu
jmp
mov
dec
fsubl
cmp
push
imul
insl
movsb
hlt
gs
lea
call
and
sub
xchg
mov
cmc
or
jmp
cmp
shrb
mov
push
and
mov
mov
shr
hlt
xor
xchg
push
rclb
sti
jnp
pop
pop
lcall
pop
fwait
mov
mov
cmpsl
adc
mov
add
mov
movsl
sbb
inc
das
in
dec
xchg
scas
sub
jnp
aad
out
mov
and
jae
repz
mov
scas
leave
cli
test
repnz
scas
sbb
jle
mov
inc
adc
xabort
inc
btr
mov
push
pushf
pop
cmpsb
jg
cmpsl
scas
pop
imul
adc
sbb
mov
inc
repz
dec
insb
push
stc
dec
ds
xchg
jne
cmp
fistpll
sbb
lods
xor
sub
imul
jg
lret
cmp
cmp
sti
sbb
sub
insl
jg
rcr
ret
or
jecxz
and
enter
loope
push
shll
into
mov
hlt
lret
in
stc
repnz
idivl
je
add
mov
adc
pop
data16
aas
lcall
dec
jno
fisubrs
mov
xor
or
sti
adc
iret
and
xchg
mov
ja
push
lret
sub
les
fstl
jg
shrl
inc
mov
mov
push
popf
aaa
xor
mov
jne
inc
cli
cmpsb
filds
cltd
ds
pop
dec
xor
stos
xchg
inc
decl
xlat
cmp
lods
mov
mov
push
cs
mov
negl
negb
adc
xchg
stos
pushl
nop
clc
pop
clc
test
pop
jbe
popf
rclb
movsl
adc
inc
cltd
cmp
rcll
pop
das
or
pop
lret
rcrb
mov
push
lret
xor
call
rcll
lret
push
jb
mov
hlt
lret
pop
int3
and
jnp
cmp
adc
add
test
test
sbb
mov
pusha
pushf
leave
sbb
sbb
adc
or
lcall
aad
insb
inc
xchg
xor
call
mov
or
pop
je
aaa
das
xchg
push
cmp
pop
sub
out
xchg
pop
add
shrb
and
or
or
sub
xor
cmp
add
aad
hlt
sub
rep
cwtl
mulb
fnsave
sub
cmp
lea
gs
inc
int
fcomps
mov
in
es
sti
int3
or
test
lahf
cmc
pusha
xchg
sbb
repz
inc
divb
arpl
test
cs
movb
test
push
pop
adc
push
sti
sti
or
loopne
lcall
out
cmp
mov
inc
dec
mov
sbb
cmp
mov
pop
sub
jno
and
dec
aas
adc
pop
and
popa
sub
cmpsb
jmp
cmc
popf
xor
cmp
insl
push
xchg
push
addr16
lods
icebp
push
loop
mov
test
aad
js
inc
or
cmp
adc
sahf
cmpsl
and
mov
cmpsl
cwtl
nop
or
pop
xchg
int3
outsl
mov
scas
pop
sbb
std
xor
pop
sbb
push
fnstsw
pop
orb
dec
dec
out
lret
pop
pop
push
scas
out
rorb
aas
adc
stos
arpl
jnp
ss
addr16
adc
sub
or
xor
icebp
loopne
jae
mov
mov
das
push
imul
enter
xor
mov
dec
or
rcrl
mov
pop
dec
out
dec
cmp
and
xor
push
fisubl
popl
sub
jecxz
inc
testl
xor
fwait
push
push
iret
inc
cmc
aas
fsubl
bound
mov
add
loope
shrl
loope
cltd
sbb
test
and
push
push
jmp
aas
cltd
loop
fs
cltd
adc
inc
dec
sbb
cwtl
mov
or
fsubrs
divl
cmpsl
jno
movsb
popa
scas
mov
pop
add
lahf
in
push
jns
mov
int
jno
popl
repnz
cmp
js
loop
sub
add
test
rorl
das
stos
mov
mov
stos
xchg
jnp
push
add
sbb
add
jns
jp
test
pop
pop
cmpsl
lret
orl
inc
lds
add
mov
aad
fbstp
pushf
mov
mov
cmc
loop
test
adc
jmp
inc
sbb
call
inc
cwtd
sbb
xlat
stos
mov
ljmp
add
lods
inc
jne
out
seta
or
adc
pop
inc
xchg
dec
sti
sub
pushf
movsl
dec
pop
cmp
lock
fisttps
test
sub
out
sbb
inc
int
fisubrs
or
jl
and
sub
jbe
mov
scas
sar
add
sub
aam
add
sub
arpl
out
push
sub
cmpsb
fsubs
push
xchg
push
mov
ret
inc
and
outsl
xchg
xor
aad
mov
popa
mov
pop
stc
cmp
loopne
sub
jae
fimuls
jo
movsl
and
push
xor
lea
cli
inc
test
repnz
inc
aam
or
xor
jae
pop
push
sahf
cld
ja
cmp
adc
push
add
xor
ret
and
mov
sbb
mov
mov
lods
add
pop
or
xchg
pop
adc
and
out
cli
jbe
into
scas
xchg
and
add
into
cmp
mov
aaa
bnd
cmpsl
or
pop
mov
and
aad
jp
test
es
aam
loopne
scas
push
and
out
sbb
cmp
stos
dec
pop
dec
mov
stos
jp
mov
outsl
call
push
add
pop
sti
inc
loop
cmp
out
imul
mov
and
push
loop
jecxz
aam
popf
mov
fdivs
int3
movsb
std
ror
inc
daa
mov
imul
inc
mov
and
cmp
out
pop
leave
es
push
xlat
and
dec
gs
cmp
or
jno
cmp
sbb
mov
sub
jmp
sti
push
or
movsb
mov
or
pop
add
xchg
mov
mov
push
cld
pop
mov
mov
in
insl
inc
add
xchg
mov
imulb
movsb
cmc
xchg
mov
push
ljmp
add
sbb
xlat
cmp
lods
and
lds
inc
inc
xchg
dec
cmp
sub
sarl
scas
in
push
inc
das
ds
ficoms
adc
mov
loop
mov
dec
pop
dec
sahf
loope
fidivl
jae
lods
sub
roll
out
jle
sub
adcl
and
ss
and
mov
cmpsb
mov
lahf
es
xor
adc
sarl
icebp
inc
jae
repz
xchg
dec
inc
rclb
pusha
popf
sub
mov
mov
or
dec
pop
adc
add
je
jns,pt
rcrb
jl
setne
cmp
sti
fisubl
ret
jmp
fsub
divb
cltd
cmp
stc
push
mov
cmpsl
rcrb
pop
sbb
imul
sbb
outsb
icebp
xor
and
mov
adc
jo
lock
sub
aaa
jg
cmpsb
lods
mov
outsl
inc
test
enter
xor
dec
cs
pop
cmpsl
int
mov
les
mov
push
enter
jbe
adc
rcrb
movsl
push
imul
and
push
dec
mov
sub
inc
or
mov
fldl
insl
outsb
inc
lahf
push
mov
dec
fsubr
aad
test
pop
dec
xor
xor
push
imulb
mov
out
ret
and
cmpsl
out
fsts
add
outsl
ss
dec
xchg
out
sbb
adc
call
jae
in
rorl
icebp
mov
adc
xor
sub
mov
cmc
frndint
repnz
push
pop
out
jge
cltd
push
xor
jnp
test
or
sarb
adc
int
sahf
dec
lcall
mov
shr
jle
sbb
inc
jno
sub
jecxz
negl
mov
popf
test
outsb
cmp
xchg
adc
push
push
out
mov
adc
arpl
jae
xor
xchg
push
adc
mov
mov
ror
fistpl
out
push
cs
fadds
js
cwtl
dec
roll
push
sbb
pop
in
inc
sub
mov
aas
push
arpl
sarb
scas
aam
xor
jo
sbb
cmpl
inc
iret
add
mov
xchg
clc
sti
ret
xor
inc
inc
push
cmp
adc
nop
xor
mov
xor
daa
add
jnp
out
pushf
add
jle
and
jle
test
out
push
dec
xorb
fst
dec
inc
out
pop
inc
fdiv
lock
std
addl
jge
dec
and
fimull
mov
mov
mov
repnz
inc
loop
inc
pop
add
or
cmp
push
movsb
adc
popa
sbbb
mov
dec
aad
out
jno
or
dec
cmpsb
leave
rorl
frstor
aas
sbb
jmp
ret
bound
mov
icebp
xor
pop
push
cltd
adc
jno
daa
clc
mov
icebp
inc
in
add
xchg
in
sti
fldl
es
and
shrl
xchg
mov
das
mov
mov
and
dec
out
jo
adc
jecxz
pop
repz
into
test
int3
cmp
pop
icebp
test
fdivl
bound
fs
mov
lods
jp
stos
adc
mov
std
outsb
adc
xor
imul
and
fldt
cmpsl
inc
int3
sbb
shll
mov
cmp
addb
jl
popa
pop
push
clc
add
mov
in
popf
jp
loop
add
ja,pn
push
push
sub
js
xor
pop
cmp
pop
sub
push
adc
sub
fsubp
xchg
gs
pop
sub
into
jnp
mov
push
daa
cmp
jecxz
data16
jbe
testl
lea
mov
xchg
mov
insb
cli
lcall
push
sti
pop
mov
cmp
push
stc
cli
inc
aas
jbe
divb
add
fldenv
sub
cmp
cmc
in
sti
add
cld
and
mov
adc
xchg
andb
xor
jns
inc
xor
and
cmp
aad
push
mov
nop
pop
sub
test
sbb
ror
jb
mov
test
shll
pop
je
pop
fs
sub
mov
ret
ss
pushf
xchg
mov
inc
loope
sbb
xchg
mov
mov
sbb
sbb
mov
xorl
mov
push
psllq
xor
xor
xor
stos
loopne
sbb
stc
sbb
sti
icebp
sub
and
lds
adc
cli
out
mov
icebp
inc
iret
sub
call
xchg
addb
and
jae
call
push
inc
ror
adc
cwtl
pop
inc
or
sti
pop
and
mov
fistpll
mov
scas
xchg
out
pop
xchg
and
ljmp
int3
gs
sbbb
xchg
adcb
bound
inc
push
arpl
add
push
mov
flds
insl
jbe
aam
mov
loope
les
add
mov
xorl
hlt
ds
jmp
scas
test
fbstp
out
ffreep
int3
ds
insb
xchg
xor
dec
lods
inc
mov
bound
jl
push
cli
sti
dec
jge
call
scas
xchg
aam
sbbl
aas
stc
xchg
shll
and
pop
in
lret
fisubrl
add
cld
sbbl
pop
add
faddl
inc
pop
push
inc
cmp
call
pop
mov
pop
mov
in
pop
and
int
ja
imul
push
or
retw
add
lcall
mov
mul
add
inc
iret
les
into
stos
xlat
aas
push
dec
xor
cwtl
out
pop
mov
dec
cmpsl
mov
je
lret
mov
dec
xchg
das
sub
dec
scas
ljmp
pop
add
jbe
lds
xchg
aad
mov
dec
xor
loop
mov
cmp
pop
jl
add
sub
lods
push
mov
jmp
mov
loop
pop
add
es
fiadds
cwtl
mov
dec
mov
enter
repz
aas
lret
hlt
xor
mov
xor
add
fistps
sti
fstl
aas
ds
mov
sub
sub
sbbb
inc
xor
jae
ljmp
add
pop
sbb
mov
jp
sahf
cmp
repnz
dec
scas
lahf
bound
jo
test
out
xchg
sub
adc
inc
jp
dec
cltd
aaa
sub
cmp
add
mov
push
test
mov
or
inc
int
mov
outsl
shlb
leave
and
pop
imul
cld
mov
push
add
pop
cmpsb
ret
push
out
mov
push
jmp
repnz
call
or
pop
shlb
mov
repnz
int
jne
cmp
sub
cmp
test
gs
je
cmp
jp
clc
testl
ja
push
lahf
mov
out
dec
mov
fsubl
xchg
jbe
jge
cmpsb
out
movsl
and
lret
add
add
sub
cmc
dec
cmpsl
add
popa
sub
int3
adc
addr16
dec
mov
cltd
lods
testb
and
pop
cmp
jge
push
and
movlps
pop
cmp
add
loop
ja
js
or
add
lock
pop
and
stc
out
fiaddl
out
into
stc
pop
lret
sub
inc
cmc
lret
xchg
dec
adc
mov
push
cmp
and
jno
jmp
adc
stos
push
bound
int3
in
mov
ja
cmp
mov
movsb
xchg
dec
out
xor
jae
push
mov
xchg
outsb
jg
mov
cmp
add
test
sbb
cs
push
in
mov
mov
inc
jl
test
lcall
xor
insl
int3
and
popa
jmpw
cmp
sub
ret
pop
mov
or
stos
inc
jns
mov
cli
stos
out
cli
sub
pop
rcll
cmp
xchg
mov
inc
add
insl
fsubs
push
addr16
mov
sub
hlt
rorl
adc
add
inc
inc
fdivrp
imul
fsubrs
jp
outsl
sarl
cmp
cmpsb
clc
imul
into
adc
dec
lcall
insl
and
jne
mov
andb
icebp
in
das
xor
mov
test
test
dec
arpl
pop
arpl
and
jne
cld
push
sbb
cmpsb
in
sbb
inc
loopne
pop
pop
adc
jo
cmpsb
cwtl
mov
insb
sub
mov
andb
mov
sbb
imul
fcmovnbe
nop
xor
xor
icebp
dec
or
fsubl
gs
xor
mov
push
fsts
sbb
mov
sub
fnstsw
dec
in
insb
std
clc
sub
in
into
lret
pop
inc
adc
cmp
stc
pop
fprem1
pop
mov
push
int
rcrb
pop
out
imul
imul
push
mov
cmp
mov
int
inc
leave
fs
lret
cmp
xchg
popf
and
jae
out
lea
stos
mov
jne
divb
loopne
xchg
inc
add
arpl
clc
sti
mov
mov
iret
lods
and
in
xor
cwtl
loope
or
mov
mov
and
lcall
push
mov
lods
pop
cli
adc
inc
bswap
mov
lock
inc
stos
pop
mov
sbb
pop
jge
cwtl
mov
push
dec
xorb
push
pop
cmp
scas
testb
sti
orl
inc
int
in
ror
iret
or
out
sbb
xchg
js
pop
sbb
hlt
in
cmp
dec
pusha
mov
aas
dec
push
and
add
dec
inc
adc
sub
out
mov
cmp
jnp
cld
cmp
fs
lock
int3
xchg
das
stos
push
add
xchg
and
cwtl
mov
fiaddl
xchg
icebp
fsts
sub
mov
and
xchg
add
mov
push
sub
jmp
out
jg
imul
orl
inc
shl
insb
shl
mov
andl
xor
dec
add
mov
out
jle
sbb
adc
pushf
push
push
push
ret
call
shrl
lret
sub
mov
adc
ja
xchg
xor
arpl
mov
xchg
imul
insb
fcmove
jecxz
sbb
adc
mov
scas
mov
enter
lret
xchg
and
hlt
push
pop
stc
fbld
ss
xor
and
mov
mov
repnz
scas
inc
in
cmc
add
mov
sbb
adc
mov
aam
out
out
adc
out
lret
rorl
jae
dec
xor
out
aam
mov
adcb
inc
sub
stc
push
or
sub
add
jnp
test
pop
jl
loope
dec
jl
adc
jb
cmpsl
push
or
push
add
xchg
mov
outsl
push
push
xchg
bound
stc
or
les
mov
mov
aaa
iret
addb
push
lea
cmp
cwtl
ds
xor
fsub
repnz
pushf
push
test
jbe
inc
xchg
mov
js
rolb
mov
movsl
jl
jge,pn
push
xchg
movsb
mov
xchg
xor
pushf
pop
adc
sarl
jnp
inc
imul
or
pusha
ljmp
call
lods
jp
xchg
lahf
mov
aad
je
sub
adc
xchg
mov
jp
pop
mov
push
pop
loop
jne
adc
xchg
lcall
mov
insb
or
jo
dec
or
mov
mov
test
aam
rorl
push
dec
shll
xchg
mov
sahf
jae
paddw
mov
xor
jb
xlat
push
pop
mov
pop
jecxz
nop
cld
and
shlb
aad
enter
ja
cmpsb
mov
outsl
push
int
das
mov
fistpll
movsb
mov
adc
jo
fildl
pop
push
loope
xacquire
mov
xchg
mov
push
sbb
sub
pop
sbb
dec
stos
jnp
iret
in
fcmovnbe
or
and
sti
pop
test
add
fcmovne
clc
sbb
dec
inc
or
jns
shr
pop
mov
dec
jnp
lret
lock
push
loop
fsts
sbb
sub
jo
js
sub
inc
dec
mov
lcall
jle
in
sarb
add
sbb
jge
mov
in
mov
pop
shr
push
outsl
pop
xchg
fiadds
hlt
push
addr16
frstor
mov
lcall
sbb
js
pop
push
xchg
jae
jle
pop
push
xorb
jae
push
rol
push
sbb
and
pusha
jno
es
std
out
and
and
lock
cmpb
jecxz
out
dec
pop
xchg
test
or
frstor
adc
sbb
imul
jnp
out
dec
ret
pop
xchg
pop
xor
xor
inc
clc
xchg
ljmp
pop
int
repnz
sbb
mov
cmpl
mov
push
mov
in
aas
xchg
in
outsb
addr16
pusha
pop
addb
pop
sub
ljmp
ljmp
mov
dec
popa
das
mov
xor
stos
sub
arpl
or
rcll
fstp
or
gs
cmp
jns
shll
mov
mov
mov
mov
fimuls
fs
outsl
repnz
jmp
sbb
xchg
std
mov
test
aad
pop
adc
xchg
out
out
dec
sarb
stos
test
sbb
adc
sti
push
bound
xor
jl
cmp
add
add
mov
mov
sub
or
push
cmpsl
push
repz
mov
icebp
push
fldenv
mov
inc
stc
test
movsb
insl
cltd
in
fdivp
popf
popa
cltd
pop
clc
push
std
dec
mov
pop
cmp
sub
or
jmp
lret
lods
add
arpl
xchg
loopne
imul
sbb
adc
sub
mov
scas
aaa
push
cld
sbb
sbb
dec
inc
das
push
dec
scas
outsl
mov
scas
or
jae
pop
shlb
dec
dec
popl
popa
dec
pop
mov
cld
into
mov
fistl
int
loopne
lds
daa
mov
cmpsl
add
movsl
popf
sahf
jb
ret
fs
outsl
push
ja
popf
or
outsl
mov
xchg
inc
fsub
jge
clc
test
rcr
rorl
xlat
pop
push
dec
addr16
adcb
hlt
lods
repnz
xchg
paddw
mov
add
les
rorb
pop
sub
stos
adc
int3
pop
xor
xorb
out
pop
ja
insw
mov
or
ss
xor
das
ljmp
pop
or
pop
divb
adc
je
mov
stos
mov
lds
arpl
jg
les
pop
lret
and
in
sbb
push
sbb
aas
rolb
push
test
adc
imul
sub
call
dec
sub
push
insl
xlat
pop
dec
imul
imul
jmp
mov
rcrb
insl
xor
pop
inc
jne
aam
mov
es
rolb
and
lds
pop
jle
int3
adc
push
xchg
or
arpl
mov
push
xlat
push
inc
lahf
inc
xor
insb
dec
js
roll
mov
adc
int3
and
outsl
in
and
xlat
mov
pop
fdivp
xorb
and
sbb
mov
push
jp
cs
dec
gs
sbb
adc
out
sub
js
cs
sub
pop
dec
pushl
test
mov
test
mov
inc
mov
xchg
repz
pop
xlat
scas
sahf
leave
mov
mov
xorl
or
shl
stos
push
lock
jp
ja
inc
fstpt
or
xorb
std
jmp
lods
jb
fcoml
jb
inc
iret
movsl
sub
rcr
call
outsl
cmp
pop
fucomip
inc
sub
mov
test
mov
pushf
mov
imul
sbb
call
cs
xor
out
movsl
xlat
mov
ja
or
bound
push
sub
call
aaa
test
loopne
mov
js
jae
jecxz
popf
and
xor
mov
lods
push
sbb
ds
sbb
xor
ljmp
xchg
xchg
out
in
cmp
push
out
push
push
cmp
inc
aaa
sti
popf
andb
in
cmp
pusha
lcall
sti
mov
lods
or
sub
div
xlat
lods
xchg
push
push
xor
mov
pop
jle
push
push
add
in
popa
xchg
pop
push
xchg
inc
es
mov
mov
and
push
ret
cmpb
mov
xchg
mov
idiv
mov
push
sti
decb
movsb
cmp
xchg
fsubrs
data16
dec
xorps
and
movntps
pop
jo
push
icebp
cmp
mov
fldcw
sti
push
mov
shlb
incl
xchg
js
hlt
mov
sub
xchg
adc
sub
jbe
cld
push
jge
push
loop
xchg
pop
mov
int3
movsl
mov
fmul
test
sbb
jl
ss
mov
repnz
loopne
push
push
cmp
fistpl
arpl
lret
jo
or
cmp
mov
fldcw
inc
testl
ret
hlt
sbb
dec
leave
ja
xchg
jl
sub
xchg
rcrl
mov
sbb
hlt
inc
jb
popf
outsl
push
clc
pop
into
sbb
sbb
test
and
dec
add
sbb
aas
repz
lea
pop
sbb
test
cltd
outsl
jle
mov
pushf
add
lcall
adc
inc
sub
jmp
push
inc
dec
dec
cmp
lahf
pop
adc
jno
jb
xchg
mov
add
out
xor
ja
out
sub
scas
gs
inc
sub
pusha
xor
xor
mov
les
inc
pop
fucom
xchg
jmp
push
adc
test
sbb
dec
dec
lods
rol
adc
sub
cwtl
mov
movnti
repz
std
roll
jno
call
and
mov
lods
or
rorb
and
ffreep
pusha
test
sub
clc
pop
hlt
xor
push
adc
mov
mov
sbb
sub
adc
jecxz
popf
dec
mov
add
mov
xor
out
jbe
xchg
mov
jb
xor
add
out
lock
dec
push
mov
xchg
dec
jno
inc
popf
fstps
inc
and
jl
sub
shr
mov
pop
stc
jae
push
popa
mov
test
xchg
xor
out
pusha
inc
imul
push
test
in
mov
jecxz
dec
xchg
jb
aam
fistpll
xchg
mov
dec
in
push
xor
mov
jmp
mov
lret
and
push
sti
jae
push
inc
loopne
test
ret
xor
insl
cmp
test
addr16
loopne
cmp
mov
dec
inc
fcoml
repnz
js
inc
xchg
pop
pop
cmc
adc
or
jne
int3
or
dec
sbb
cwtl
mov
insl
mov
xchg
ds
mov
adc
mov
mov
je
jb
sub
ss
pop
lock
mov
icebp
outsl
pop
jo
out
sub
xor
xchg
lods
inc
sub
sbb
test
repz
stos
stos
cs
pop
push
das
adc
xchg
mov
push
out
cmp
mov
add
je
into
pop
test
imulb
jnp
xor
sub
mov
adc
mov
lods
xchg
pop
je
cmpsb
xchg
dec
scas
jge
jl
push
dec
push
in
cmpsb
loop
ss
shr
push
pop
xchg
adc
test
rolb
lahf
pop
push
jge
bound
movsl
sub
cwtl
fcoml
and
push
outsl
xor
imul
gs
fidivs
cltd
dec
ds
mov
cmp
out
loopne
sub
mov
mov
imul
mov
or
out
in
fcoms
xchg
or
push
push
popl
rolb
pop
xchg
lods
in
stos
cmp
insl
pop
dec
cmp
and
lods
int
enter
push
mov
jbe
fdivrl
sarb
aaa
push
and
insb
fidivrs
or
jb
jl
cmp
dec
ss
outsb
mov
xchg
or
xchg
in
sub
adc
or
push
fidivl
xsha256
cmpsb
shll
push
vpunpcklqdq
in
and
ds
test
add
je
insl
lock
xchg
or
aad
mov
cmp
adc
test
mov
ljmp
mov
hlt
mov
mov
push
subl
inc
scas
loope
push
or
mov
sti
mov
jg
pop
and
stc
ror
mov
sbb
jae
jno
inc
jg
scas
sbb
pushf
xchg
xchg
add
cltd
jg
cwtl
mov
jl
adc
push
sbb
or
imul
add
mov
jb
mov
pop
movsb
jmp
loope
fdivs
stos
sub
addl
cmpb
jmp
xchg
inc
dec
into
neg
mov
xchg
add
cmpsb
add
add
push
push
dec
or
lahf
sub
enter
dec
es
mov
call
nop
mov
dec
xor
xchg
push
out
dec
fwait
adc
jp
inc
mov
pop
std
rorl
hlt
jbe
sub
and
xchg
or
dec
data16
push
in
sbb
fs
xor
adc
sti
xchg
and
cmpsl
test
push
dec
cmpsl
roll
sub
pop
outsl
fldl
in
repnz
out
sti
rcl
fsubrl
aas
dec
adc
sub
lods
shrb
inc
arpl
mov
icebp
add
aaa
push
or
cwtl
sbb
push
xchg
xor
or
rclb
fstp
imull
int3
mov
xchg
sahf
mov
test
jo
ret
insl
sub
sub
addr16
xchg
mov
pop
mov
pop
enter
into
mov
lret
fwait
dec
mov
xchg
push
aas
push
xlat
cmpl
call
mov
jno
jae
inc
aaa
mov
lods
imul
pop
mov
xchg
pop
add
loop
stc
inc
fistpl
inc
add
lret
fistl
ja
mov
inc
or
mov
ljmp
out
dec
int
lret
enter
inc
into
cmpb
or
jg
xor
ficoml
push
and
outsb
push
pusha
pop
push
dec
mov
fcomps
push
jl
xor
stos
leave
repz
and
das
or
call
pop
dec
add
fnstenv
je
test
in
cmp
aas
push
xchg
iret
cmc
pop
insl
test
push
fsubr
hlt
jg
nop
inc
jo
stos
ds
cvtdq2ps
addr16
cmp
mov
mov
mov
add
clc
jb
into
lock
or
movl
mov
in
or
ljmp
jnp
inc
ljmp
mov
insb
dec
xor
pop
lea
dec
push
sub
or
out
pop
fmuls
pop
dec
jge
repz
push
sub
lock
pop
jb
inc
xchg
inc
sub
cltd
xor
push
push
add
ja
adc
insl
jbe
es
insl
lock
jl
cmc
jmp
int
dec
cmpsl
xchg
stos
sbb
xchg
xchg
xchg
imul
into
push
jb
sub
aas
xchg
xchg
push
loopne
or
fstpl
imulb
push
sarl
mov
pop
gs
insb
and
and
loope
cmp
push
sbb
push
lcall
push
cmp
jo
push
outsl
mov
testl
jno
add
aad
mov
xchg
xchg
xchg
shll
shlb
das
arpl
mov
pop
xchg
jg
inc
jne
test
jne
lods
inc
inc
pop
sbb
sub
xchg
dec
cmp
pop
mov
call
sub
mov
sbbl
jnp
stos
icebp
repz
push
daa
pop
lcall
clc
adc
lea
sub
cmpsl
fcmovu
imul
xchg
cwtl
call
int3
mov
add
int3
xchg
mov
mov
imul
mov
movsl
pop
fwait
or
or
sub
jo
pop
aaa
push
inc
mov
mov
xor
shlb
or
mov
xchg
sbb
int3
jae
xor
sbb
ret
cs
sbb
xchg
pop
dec
cmpsb
dec
jecxz
aad
and
in
jbe
adc
test
fiadds
call
arpl
mov
es
inc
outsl
cltd
lods
imul
add
jno
xorb
sbb
sbb
or
lcall
mov
pop
mov
sbb
mov
rclb
and
xor
xchg
push
sub
andl
adc
jo
gs
xor
ret
hlt
movsl
lea
pop
pop
push
sub
adc
push
loop,pn
cli
outsb
jmp
mov
and
arpl
clc
inc
or
fldl
dec
sbb
ja
push
xchg
mov
ljmp
add
push
fsubrp
ja
cmp
arpl
repnz
sub
movsb
or
faddp
inc
call
or
inc
jecxz
mov
dec
into
loope
outsb
lcall
pop
lods
cmp
dec
xchg
push
cmp
push
les
mov
or
stos
jbe
out
push
and
imul
lock
rcll
mov
jo
in
popl
pop
hlt
jno
and
mov
push
das
out
addr16
dec
pop
mov
scas
jmp
xor
hlt
xchg
jg
clc
bnd
movl
in
cld
add
addr16
or
je
add
aad
mov
ljmp
push
lods
and
ja
mov
cltd
inc
fstps
xchg
mov
jge
int
xchg
dec
or
sti
sbb
push
out
mov
inc
mov
nop
outsl
fldl
sub
sbb
xor
lods
daa
jnp
mov
jle
dec
xor
ljmp
jecxz
fstps
cmp
sbb
test
cmp
and
outsl
lahf
inc
pop
sub
xor
out
test
repnz
xor
sbb
inc
sub
xchg
xor
fwait
cmp
rcll
pop
mov
fisttpl
movzbl
sahf
xchg
insb
test
stc
mov
push
lcall
push
sbb
insb
push
negb
sub
in
std
cmp
insw
jno
mov
gs
cmp
fs
paddusw
mov
bswap
sub
or
iret
xlat
xchg
xchg
stos
cmp
and
test
aaa
jb
hlt
or
mov
adc
sub
in
mov
out
div
cmp
push
xchg
cmp
dec
ret
add
xchg
mov
aas
mov
xchg
mov
mov
jp
add
dec
int3
push
xchg
shl
xchg
mov
mov
pusha
shr
stc
sub
sbb
fdivl
out
cmc
cmp
addl
mov
mov
movsb
inc
adc
out
jnp
mov
xchg
lock
cli
dec
lds
xchg
mov
pop
sar
adc
retw
pop
mov
int3
shl
ret
lods
xor
rcl
cmp
inc
cld
inc
fs
inc
adc
mov
ret
movsb
addr16
sbb
inc
cmpsb
mov
imul
pop
pushf
jl
and
shrl
and
jae
xchg
push
in
loop
push
test
in
add
pop
push
jmp
js
pop
pop
or
out
clc
sub
cmc
sbbb
rorb
icebp
fiaddl
andb
xchg
leave
loop
dec
fstp
cmp
cmp
sub
call
in
int3
sahf
xchg
lcall
negb
jno
pop
add
scas
iret
adc
ljmp
frstor
xchg
push
stos
lret
shrl
mov
mov
mov
ds
mov
arpl
outsb
mov
pop
adc
incl
imul
es
popa
out
or
xor
fwait
icebp
into
in
insb
mov
stc
stos
jae
icebp
push
jns
inc
add
pop
es
cmpsb
push
jle
add
push
subb
fstpt
dec
sub
ret
cltd
jne
add
mov
popa
dec
push
dec
inc
inc
flds
inc
sbb
push
les
lods
cmp
push
sbb
cmp
dec
jbe
xchg
fstpt
popf
in
mov
loopne
pop
nop
jo
aas
xchg
jmp
js
dec
xchg
test
inc
cwtl
mov
movsl
and
fs
mov
daa
mov
repz
rolb
repnz
inc
push
scas
add
inc
subb
push
mov
clc
mov
test
pop
gs
scas
fsts
pop
in
inc
lds
ss
mov
cmp
std
mov
cmc
shrb
mov
push
jae
push
push
lahf
lcall
push
xchg
outsl
pop
jle
popa
incl
outsl
add
inc
les
sub
imul
sub
iret
cmp
shl
cli
ds
mov
or
leave
jp
xchg
push
or
aaa
test
inc
rcrb
fbstp
adc
pop
xor
xchg
ss
test
inc
inc
dec
dec
cmpsb
jns
pop
sub
lret
inc
movsl
leave
push
push
fsubrs
sbb
pop
daa
je
inc
dec
add
ret
out
jmp
mov
int3
mov
sahf
sbb
jecxz
mov
ss
sbbl
outsb
mov
pop
xchg
lret
xor
mov
notl
mov
hlt
pop
add
sbb
sub
pop
dec
add
pusha
daa
sub
outsb
adc
or
sub
lret
or
ret
cmp
jecxz
xchg
std
fstps
push
outsl
iret
cmpsl
test
icebp
lds
sbb
ss
das
pop
andb
pop
adc
in
xchg
xorb
cli
jp
adc
mov
push
lret
add
test
or
loope
push
hlt
dec
mov
fcomps
fists
jb
jne
and
sub
cmp
fs
sbb
dec
cli
cmp
fbld
xchg
pop
outsb
out
mov
xor
jmp
pop
shll
leave
or
mov
hlt
adc
and
je
fdivr
das
xor
dec
mov
pop
adc
inc
insl
addb
sarl
mov
hlt
inc
pop
cmp
sub
ljmp
les
adc
hlt
std
add
lods
jp
mov
mov
es
adc
add
jg
pop
pusha
jb
test
cld
rorl
jo
mov
cmp
push
jno
fisubrs
les
pop
popa
mov
sbb
ljmp
cmp
jle
sub
sbb
cmpsl
aaa
fldenv
loop
and
and
bound
jmp
sub
cltd
fadd
cwtl
dec
adc
cld
add
lds
test
sub
scas
adc
test
adc
out
aam
popa
adc
nop
mov
mov
popf
mov
adc
bound
mov
int
sbb
push
outsl
inc
ret
idiv
dec
xchg
sahf
ds
sub
ret
mov
add
sub
xchg
push
jl
push
repz
jns
leave
je
pop
cmp
call
inc
mov
inc
push
cmp
jo
in
test
not
ds
mov
fstpt
mov
nop
xor
mov
jle
sub
adc
jns
jae
fucomp
cwtl
testl
mov
jns
or
pop
mov
xlat
mov
jp
dec
mov
fiaddl
xchg
push
pop
and
fcmovb
pop
pop
fdiv
fbstp
sub
shll
jno
inc
xchg
ret
repnz
aas
pop
lea
enter
lret
fsubs
leave
mov
arpl
mov
push
sub
mov
pop
push
int3
aad
pop
dec
jp
rcl
and
cmp
push
lahf
cmpsb
xor
mov
push
subb
stc
add
fdivr
cmp
jns
mov
jg
jge
sbb
fwait
sbb
test
adcb
xchg
addr16
int
rcrl
test
or
and
fnstenv
cmp
bound
cld
imul
fisubl
test
xor
xchg
dec
jns
mov
adc
jg
and
mov
sbb
jecxz
out
icebp
mov
imul
cmp
fldcw
sub
enter
cmp
pop
push
xor
cmc
outsl
data16
into
ljmp
outsb
iret
add
loopne,pn
dec
pushf
and
call
push
scas
pop
mov
jae
xlat
push
mov
in
test
call
negb
sub
xchg
adc
jno
pop
mov
jno
sub
sub
fidivl
push
add
mov
or
movsl
jo
inc
mov
push
mov
sbb
xchg
inc
xor
test
push
cmpsb
push
pushf
xor
movsl
jmp
dec
inc
and
sub
icebp
insb
or
sub
dec
xchg
in
aad
mov
xlat
xor
ss
fadds
mov
xor
mov
ljmp
enter
pop
sbb
popf
aad
clc
into
repnz
mov
push
into
call
stos
out
out
loop
in
daa
lea
icebp
pop
xchg
sbb
fdiv
and
mov
sti
into
or
push
in
out
and
test
mov
push
repz
push
popa
pop
mov
pop
rorl
push
mov
fisubs
sbb
or
cld
cmp
mov
inc
rcr
and
stos
repnz
js
inc
mov
sub
push
ret
mov
fcoms
and
pushfw
mov
pop
add
lock
mov
sbb
fsubr
mov
pop
sahf
cld
sbb
pop
xor
pop
mov
jg
call
mov
push
mov
out
mov
dec
push
in
pop
pop
push
adc
out
es
loop
mov
shrl
mov
adc
push
push
jp
adc
ret
inc
add
and
cmp
sbb
sub
dec
call
fstpl
mov
inc
fsubrs
stos
push
jge
negb
aas
cmc
repz
lock
rcrb
cmpsb
jne
mul
nop
sub
fsubp
hlt
inc
and
push
and
cmpsl
int
imul
cmpl
pop
sahf
call
sbb
aam
jnp
fnsave
adc
leave
ret
ret
scas
push
xchg
pop
xchg
cmpsl
sub
dec
adc
pop
mov
and
imul
jbe
xor
add
dec
std
push
and
nop
call
sbb
push
xchg
outsl
cmp
mulb
mov
inc
xor
jmp
sub
or
shlb
mov
or
test
mov
icebp
cmp
out
xor
and
dec
sbb
dec
mov
not
dec
add
sbb
dec
clc
sub
jmp
loope
inc
aas
add
jmp
lret
lock
xlat
imul
sbb
push
sbb
or
int
popa
mov
pushf
mov
or
es
into
and
adc
adc
dec
or
stos
dec
sbb
sar
dec
add
pop
sbb
lods
cmc
out
in
sbb
push
mov
jns
pop
es
aam
sbb
outsb
sbb
or
pop
scas
jmp
or
imul
mov
mov
xchg
shufps
cmpsb
dec
rclb
xchg
pop
lahf
xorb
fiaddl
in
js
aam
cli
mov
mov
divb
lods
inc
rorb
pop
jle
scas
pushf
xchg
push
into
in
loope
inc
sbb
and
movsl
xor
into
or
int
lret
in
jae
lods
cmpsb
movsl
inc
xor
xlat
movsb
mov
pusha
jb
xchg
cli
xchg
enter
sbb
aam
push
repnz
rcr
pop
lds
in
mov
pop
insb
push
jbe
std
dec
cmp
in
cwtl
sbb
movsb
jne
arpl
lahf
xchg
std
mov
aam
mov
mov
inc
mov
loop
xchg
cmc
mov
dec
shlb
fstps
xchg
cmp
nop
outsb
add
stos
or
cltd
out
in
pop
lds
cwtl
cmpsb
xor
and
cmp
push
and
ss
mov
mov
mov
ficoms
push
enter
in
push
fidivrl
popa
add
testl
mov
dec
inc
out
aad
inc
adc
xchg
inc
jae
cld
push
imul
repz
sti
sub
add
aaa
cmp
movsl
push
adc
call
lcall
or
test
mov
cltd
pop
mov
out
scas
fcmovnu
loop
dec
push
data16
fidivrs
ss
add
gs
pop
or
icebp
jno
mov
xchg
sbb
iret
lret
cmp
js
xchg
dec
aaa
xorb
nop
sbb
add
inc
mov
mov
pop
dec
sbb
lea
pop
in
fs
stos
fcmovbe
sbbl
mov
lea
int
pop
mov
mov
add
xor
fs
fs
mov
push
mov
test
xlat
int
test
cmp
jmp
leave
das
data16
sahf
in
enter
xchg
mov
ljmp
mov
jo
cltd
xchg
push
pop
inc
test
adcl
pusha
scas
std
frstor
cmp
aas
fdivrl
lods
jns
test
orl
js
push
insl
mov
mov
add
xchg
push
imul
pushl
add
inc
inc
into
clc
push
mov
mov
fcompl
push
dec
or
out
xchg
mov
out
xor
aam
mov
mov
inc
push
inc
mov
xor
lcall
pop
mov
scas
jmp
or
out
ret
adc
xchg
adc
cs
xchg
lret
cwtl
call
dec
sbb
js
mov
jo
xor
lods
test
mov
push
sub
aad
and
popa
in
lret
nop
and
push
std
inc
add
dec
test
mov
lock
aas
scas
inc
ret
xor
mov
xchg
shll
aad
shr
in
and
std
lcall
cmp
gs
adc
add
add
xchg
jle
mov
fstpl
dec
dec
inc
sub
pushf
xor
les
jo
out
xchg
aas
add
adc
fldl
push
test
mov
outsl
mov
jne
repz
xchg
xchg
mov
mov
mov
mov
sbb
rorl
mov
stos
or
icebp
cli
subb
rol
stos
add
pop
cmpsl
sarl
icebp
lods
lret
outsl
inc
popf
push
push
add
vunpckhps
ja
jl
push
dec
addr16
push
sbb
pop
int
add
flds
or
sub
push
loop
mov
mov
sti
cs
mov
sbb
popa
jnp
int3
adc
inc
push
aaa
dec
out
test
rorb
cmp
hlt
cmp
fs
inc
push
sub
lahf
mov
fdivl
mov
bound
add
mov
push
mov
idivl
jp
aam
out
mov
or
jmp
int
mov
adc
arpl
cmp
sti
cmp
and
jb
sbb
mov
mov
pusha
push
leave
ret
push
mov
sbb
mov
repz
inc
data16
pop
jge
nop
test
mov
mov
repnz
add
sbb
mov
mov
sbb
neg
scas
ret
das
into
mov
add
pop
adc
xlat
sbb
ror
dec
repnz
loope
adc
fmul
push
decb
xor
add
cmc
pop
sbb
repz
jge
scas
push
push
inc
pop
push
out
dec
leave
ret
or
shll
or
or
stos
jo
mov
cmp
pusha
dec
clc
in
push
mov
xor
sarl
movsb
or
jo
ret
dec
xchg
cmp
rcrb
pop
mov
sbb
movsl
fs
mov
mov
ret
fwait
add
int3
icebp
loopne
push
call
xor
mov
filds
in
in
pusha
xchg
lret
mov
les
movsb
sti
outsl
fwait
mov
scas
xor
sub
cmp
cs
idiv
mov
sahf
lods
xchg
pop
adc
int
hlt
rclb
cwtl
test
dec
sub
aaa
fadds
inc
enter
pop
mov
sub
jo
sbb
out
das
sbb
jns
imul
sti
xor
sub
fildl
pop
fbstp
jae
mov
roll
jns
fisubrs
aad
sbb
outsl
fsts
cwtl
mov
add
lods
xchg
pop
inc
dec
imul
lahf
scas
icebp
mov
clc
jb
cli
push
mov
jbe
or
pop
out
sarb
ds
pop
loope
outsb
cmp
call
or
vcvttss2si
xor
cltd
mov
adc
stos
cs
mov
or
xor
les
cmp
mov
push
jl
cmp
enter
loope
jge,pt
add
push
cmc
add
ja
mov
lcall
fistps
test
pusha
pushw
mov
stos
loop
add
mov
jbe
shll
sub
inc
call
pop
mov
addr16
pop
hlt
mov
mov
sbb
xor
and
inc
fistpll
add
push
cmp
add
xor
mov
into
fcmovne
jge
add
push
mov
jle
pop
das
jo
lcall
std
mov
sub
push
ret
loopne
xor
xchg
and
sbb
dec
push
and
push
push
fcoml
sbb
into
pop
jno
xor
adc
sub
mov
lods
shrb
lods
jo
push
rcrl
sub
push
cmp
test
out
pop
leave
inc
pop
mov
cmp
pop
in
mov
sub
incb
sbb
frstor
aam
add
fnstsw
mov
lea
mov
orl
sti
popa
xor
ret
call
orb
push
add
push
outsl
push
inc
sub
test
arpl
fidivrs
dec
addl
jle
xchg
sbb
rcrl
stos
xchg
push
pop
pop
push
imul
andl
sbb
in
test
mov
ljmp
popf
mov
push
loop
insb
jg
es
loopne
adc
ja
es
sbb
repnz
adc
add
aas
xchg
lret
jns
fldl
cwtl
clc
outsl
mov
pop
xchg
movsl
mov
sti
fstpt
lods
xchg
add
add
sub
cmpsb
lret
lret
cmp
and
mov
jno
mov
add
and
and
adc
push
inc
xchg
fildl
dec
data16
jmp
mov
jp
xchg
fldenv
rcrl
adc
popa
sub
push
fistps
xchg
js
mov
rorb
and
lcall
pop
push
pushf
xchg
pop
movsb
ret
cltd
pop
loope
lahf
pop
aaa
dec
loopne
xchg
or
imul
orb
add
hlt
mov
mov
aaa
and
sub
mov
andb
addr16
push
out
push
mov
mov
clc
test
fs
popf
jmp
push
xor
mov
les
cli
push
push
loope
lds
add
test
div
sbb
ds
mov
dec
jecxz
xchg
je
mov
shrb
das
nop
mov
mov
sahf
jecxz
xchg
sti
adc
jecxz
outsb
push
jg
repnz
adc
inc
mov
dec
dec
xchg
mov
sbb
sbb
out
hlt
xor
sub
and
sub
arpl
repz
cmp
xor
pop
in
es
rcr
cmp
jne
or
lea
add
dec
dec
fildl
imul
pop
int
out
adc
push
xchg
cld
scas
fwait
and
or
shlb
fistl
or
je
sti
pop
rolb
icebp
or
loope
jns
pop
add
adc
jl
data16
xchg
xor
sub
stos
js
pop
sarb
cmpl
xchg
hlt
js
repnz
inc
adc
fmull
gs
cmpl
cmpl
clc
and
pop
push
sub
divb
mov
out
ror
lret
push
sub
push
sbb
or
enter
imul
cli
pop
cmp
leave
ss
or
inc
inc
scas
scas
scas
addr16
lret
repnz
mov
das
sbb
jg
inc
xor
andl
or
ret
in
xchg
mov
dec
and
jo
imul
pop
lcall
out
sti
dec
sbb
pop
push
mov
cmp
pop
ds
mov
xor
pop
fwait
pop
mov
out
xchg
xchg
fiadds
mov
lock
movsl
mov
or
sbb
mov
mov
pushf
xchg
daa
sbb
cmp
sub
pop
popa
adc
push
inc
aaa
fiadds
xor
bound
and
adcl
lret
into
pusha
xlat
mov
bnd
ret
inc
cmp
sbb
mov
nop
pop
gs
sub
adc
mov
mov
xor
mov
push
inc
divb
in
add
pusha
xchg
idiv
push
jg
stc
ficoml
xchg
out
jae,pn
jae
pop
push
xchg
xor
push
lds
shlb
jns
xchg
push
xor
ret
and
ss
mov
sub
lahf
popl
cmp
out
shlb
sub
pop
add
dec
inc
out
cmp
je
mov
ficompl
mov
sub
addl
lcall
inc
pop
jl
imul
mov
sti
xchg
jbe
ret
das
cmp
cmp
call
jmp
pop
test
xor
enter
and
push
pop
pop
lods
icebp
rcll
lret
inc
push
lods
lock
popl
stc
in
loop
test
pop
ret
xchg
sub
imul
arpl
pushf
mov
sub
push
ja
jo
rcrl
inc
pop
sub
cmp
xchg
cwtl
mov
fs
in
lods
pop
outsb
outsb
xchg
xchg
sub
jge
es
scas
cmpsl
pop
test
outsb
ja
sti
xchg
shll
mov
push
leave
sbb
cld
test
mov
cwtl
out
loope
cld
or
test
and
jp
jmp
push
adc
pop
add
xor
fcomp
in
xorl
inc
inc
shll
jl
or
adc
sub
in
je
pop
mov
cmp
test
or
or
inc
lods
stos
fwait
lcall
pop
out
push
mov
les
jnp
add
add
fcmovu
xor
loop
and
mov
movsl
aas
mov
jnp
mov
movsl
fdivrs
jbe
dec
stos
xlat
and
lahf
mov
sub
je
into
or
push
icebp
lret
test
addr16
mov
outsl
inc
mov
lds
dec
push
and
sarl
dec
xchg
lods
sbb
push
sbb
dec
xchg
add
sub
and
or
lahf
xor
std
out
out
int3
ficoml
mov
adc
mov
cwtl
xchg
movsl
dec
ja
test
inc
jmp
push
stc
sub
pop
test
and
cmpps
sbbl
jae
fwait
iret
cmp
imul
mov
xchg
push
int
or
cli
xor
lahf
xor
cmp
loopne
fimuls
mov
inc
xor
xor
mov
xchg
mov
sarl
jae
popf
sti
push
jmp
or
xchg
inc
mov
xchg
scas
test
mov
cmp
xor
dec
addl
aam
add
adc
sbb
out
mov
andb
cmp
mov
cli
sbb
pushf
add
add
mov
push
cmpsb
movsl
cmpsl
adc
out
scas
mov
and
inc
jb
jl
mov
adc
lods
sti
jno
ret
test
shll
pop
bnd
xchg
jge
cmp
and
mov
sbb
fmull
andb
inc
mov
and
std
sbb
or
rcrl
push
sbb
fiaddl
dec
pop
xchg
pop
lds
and
cs
mov
dec
sbb
sub
push
out
xor
push
push
and
sbbl
nop
xchg
andl
xchg
inc
push
fnstcw
push
pop
cltd
or
fbstp
xor
jnp
add
aam
jp
test
add
dec
jae
jns
cmp
xor
pop
scas
sbb
push
ds
lods
test
inc
xchg
sbb
dec
mov
xor
aas
xor
stos
inc
mov
test
mov
adc
mov
pop
repnz
sub
xchg
sub
out
jns
fcomps
and
sbbl
jl
jb
bound
insb
das
mov
std
fiaddl
jle
dec
xor
mov
iret
sub
lds
mov
fdivs
cmp
inc
add
sub
sub
and
neg
adc
stos
jnp
dec
mov
test
enter
in
ds
out
loop
sti
xorl
bnd
loop
push
sbb
mov
lea
inc
icebp
daa
in
cmpsb
add
mov
nop
stos
je
sub
push
inc
mov
mov
lods
jb
mov
xor
cmp
idivb
mov
and
pop
xchg
imul
mov
push
dec
add
test
sub
les
push
push
fiaddl
cwtl
cmp
push
pop
insl
popf
test
mov
lea
push
sahf
and
inc
out
in
outsl
or
enter
cmp
aam
test
ficoms
push
xchg
fistps
push
out
jecxz
scas
jg
adc
pop
outsb
movb
cmpsb
push
js
in
notb
push
lock
or
inc
insb
adc
sbb
stc
cs
mov
outsb
sbb
lods
mov
sbb
add
mov
mov
jmp
jl
sarb
jo
sahf
clc
sbb
mov
xor
push
ret
push
mov
push
popf
and
imulb
pop
pop
inc
aam
stc
or
and
adc
push
push
pop
int3
mov
push
cmp
add
sub
int
adc
lret
xor
fucomi
push
mov
mov
out
mov
mov
shll
stos
sbb
stc
sbb
dec
xor
repnz
push
jnp
xchg
xor
mov
out
xchg
jge
jo
xchg
cmp
cmpsb
mov
and
leave
ret
outsb
mov
and
hlt
fisubs
mov
push
int3
pop
add
cmpsb
test
cwtl
mulb
push
xchg
pusha
movsb
and
add
lea
popa
mov
sub
cmp
dec
adc
adc
pop
jmp
dec
pushf
out
cmp
fsincos
sahf
out
cmc
push
adc
addr16
dec
mov
shll
mov
popf
sbb
mov
lea
jns
shll
cmpsb
pop
xor
adc
adc
xor
push
scas
dec
lods
mov
sahf
mov
out
in
sbb
push
sub
push
arpl
mov
out
mov
out
push
push
mov
lock
test
lret
ficoms
or
seto
or
scas
lock
rolb
addr16
iret
int3
add
mov
addb
cmp
xchg
adc
imul
dec
adc
lea
call
lret
popa
arpl
stc
dec
lods
cmpsb
sbb
sbb
ret
adc
xchg
loopne
dec
sub
sbb
xchg
mov
and
std
dec
sub
jecxz
orb
dec
inc
push
fidivrs
jp
add
shlb
fildll
mov
lret
add
or
pop
adc
repz
and
cmp
hlt
gs
pop
sarl
addb
inc
ja
fiaddl
jnp
dec
and
leave
lods
push
cmp
lcall
sar
cld
cli
movsb
adc
sbb
in
mov
out
rcr
push
adc
adc
jg
mov
out
sub
fildll
cli
or
sbb
push
test
insb
repz
in
dec
jge
mov
clc
inc
and
loope
fcomps
cld
pop
mov
cs
push
in
aad
paddb
repz
pop
jmp
mov
jno
gs
xor
pop
xchg
fimull
call
xchg
in
jo
std
popf
or
and
sti
cmp
push
mov
sub
jnp
clc
sbb
decb
lods
sar
scas
cmp
imul
roll
out
inc
sbb
push
add
fadds
jecxz
pop
sarl
xor
jns
xor
add
mov
fbstp
clts
inc
pop
cmpsl
adc
push
cwtl
mov
mov
xchg
mov
flds
pushf
test
adc
flds
ss
fmull
stc
adc
je
fldl
mov
sahf
push
lahf
jb
test
popa
xchg
jnp
pop
loop
incl
out
adcb
mov
ds
xor
fdivl
sub
push
decb
flds
mov
add
push
inc
mov
mov
insb
jno
rcll
mov
jecxz
sysenter
gs
adc
adc
scas
in
stc
adc
rorl
pop
hlt
add
inc
and
test
cmp
dec
sar
or
dec
mov
shrb
aam
xor
movsl
jnp
test
xchg
rolb
xor
in
adcb
ret
jmp
push
hlt
xchg
out
test
cld
ljmp
test
cs
mov
add
in
outsb
scas
sbb
shrb
les
addr16
jno
push
adc
sbb
movsb
outsb
test
add
mov
mov
inc
addr16
mov
xchg
out
mov
cmp
push
lods
mov
jle
push
mov
mov
push
lcall
cltd
out
mov
aaa
add
outsb
and
mov
int
or
jne,pt
je
call
xchg
jns
jg
push
xor
mov
stos
cmp
mov
fcompl
sbb
pop
fs
cli
ficoml
or
and
mov
repnz
mov
mov
sub
dec
data16
mov
pusha
orl
test
adc
adc
int3
mov
push
jle
aam
js
mov
or
sub
stc
or
loop
adc
int
cli
shrb
cmpsl
pop
pop
inc
sub
movsb
pop
sbb
sbb
cmp
movsl
dec
xor
sbb
mov
stos
mov
or
mov
inc
inc
cld
jle
out
or
shrb
push
sub
or
sar
pop
mov
pop
pop
das
adc
adc
shlb
mull
jne
push
sbb
lret
inc
arpl
out
int3
push
fidivrs
outsl
cmp
pop
jl
inc
pop
loope
aas
adc
xor
notb
fildl
or
dec
mov
jl
push
movsl
sbb
xor
hlt
cs
les
jg
adc
jl
in
sbb
es
add
jnp
jp
mov
jno
xor
lcall
cmp
inc
testb
inc
les
dec
mov
dec
jg
xor
or
lret
sbb
and
cmp
shrl
mov
in
sbb
adc
cmpsl
loop
jo
adc
jmp
jno
mov
pop
push
mov
mov
xchg
rcrb
aam
call
jmp
add
xchg
mov
int
out
pop
jns
jp
inc
out
cli
adc
jns
sub
xchg
sbb
pop
jge
jns
mov
sub
mov
xchg
negl
roll
xchg
sub
push
es
mov
and
rcr
mov
bound
int
lock
fs
outsb
fistps
fisubl
enter
push
xor
xor
mov
inc
jb
push
xor
push
rcr
sub
lds
push
fimull
adc
fs
das
scas
outsl
xchg
ljmp
cltd
test
arpl
imul
adc
and
push
sub
dec
pop
leave
xchg
mov
test
fstpl
ljmp
or
pop
jnp
js
fwait
pop
outsb
insb
lds
sub
cmpsl
jl
clc
sub
xchg
fldenv
sti
fcoms
push
mov
mov
scas
lcall
dec
fiaddl
loopne
pop
sub
fimull
inc
out
sbb
cltd
add
sbb
cltd
add
jecxz
jae
cltd
test
repnz
scas
and
outsb
mov
sbb
adc
lahf
jne
jmp
xchg
loopne
imull
dec
in
inc
mov
mov
fistps
cmpsl
or
fiaddl
add
inc
xor
sbb
repz
push
mov
dec
mov
and
fcompl
nop
xchg
rorl
add
aad
xor
das
push
and
jae
cmpsl
fistps
fbstp
aas
jb
shlb
incb
mov
xchg
inc
cmp
and
inc
mov
jg
repz
jl
fxch
push
push
in
ds
xchg
push
cltd
push
test
js
sub
stos
out
dec
inc
dec
mov
push
fstp
jns
mov
jle
mov
in
jl
and
jns
lret
jbe
xor
jae
pop
pop
sarl
je
leave
hlt
lea
push
jo
cs
mov
je
or
les
cmp
test
addl
xchg
jns
push
sbb
sub
daa
sahf
out
xchg
repz
push
jo
pop
lods
mov
lods
scas
loope
lods
inc
jno
call
cltd
add
inc
hlt
xor
fstpl
cmpsl
outsl
and
test
mov
jb
sub
push
inc
lock
cmp
andb
iret
pop
gs
pop
ret
jns
inc
jae
inc
jae
xchg
xchg
shrl
int
inc
or
aam
push
inc
mov
loopne
pop
cmpsb
repz
or
loop
sub
jne
dec
fistpl
test
int3
push
scas
out
cmpsl
js
outsl
cmpb
jge
aaa
nop
aam
cld
movl
negb
or
insb
add
cmpsl
jne
ja
jmp
sub
call
divb
add
ret
or
popf
scas
icebp
or
mov
ja
nop
xor
mov
cmp
cli
lret
mov
mov
lods
mov
ljmp
mov
xor
out
dec
rep
cmp
repnz
sub
jg
mov
adc
mov
fdivs
lea
jge
push
into
xor
nop
mov
xor
pop
mov
and
sub
iret
inc
imul
fdivs
jecxz
sub
dec
pop
xchg
mov
clc
add
lahf
je
daa
test
ja
filds
mov
add
or
xchg
and
pop
add
shr
daa
mov
push
cli
cmp
mov
pop
sub
mov
push
add
sbb
lret
daa
mov
cmp
lret
sub
rcl
std
pop
aam
inc
mov
inc
mov
test
xchg
sbb
into
inc
fisttpl
stos
jle
js
sbb
mov
fildl
enter
and
adc
adc
nop
and
sti
lods
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
aaa
pop
pop
imul
insb
push
and
mov
mov
pop
cld
sub
lahf
lcall
ljmp
mov
test
repnz
hlt
push
pop
fs
daa
pop
or
adc
outsl
aam
mov
cli
pusha
rep
ja
lahf
stos
inc
and
fadd
or
adc
daa
xchg
cmc
pop
add
sbb
lods
jnp
inc
popa
jge
add
jle
stos
adc
insl
call
test
nop
mov
pop
push
or
sarb
andb
mov
xlat
fs
stc
insl
outsl
xor
fcomps
jmp
mov
or
or
jecxz
fwait
dec
mov
xor
pushf
lods
sub
fistpll
mov
ret
pop
xlat
dec
sub
dec
or
jecxz
xor
sti
push
ret
xchg
and
es
jp
xchg
test
cs
cli
jbe
cli
mov
in
fwait
inc
aam
push
sub
sbb
inc
pop
mov
jns
bound
fstl
mov
leave
js
subb
jge
and
jno
sbb
adc
xchg
popa
inc
jns
pop
inc
enter
xchg
xchg
mov
imulb
es
jle
imul
add
stc
and
pop
lods
sub
fadds
cltd
je
cmpsl
pop
xor
add
jbe
lods
xor
pop
aaa
push
push
and
lea
dec
pop
fisubl
inc
jp
je
addr16
dec
les
aas
std
pusha
test
xlat
mov
fucomp
pop
jbe
insl
xchg
push
xor
fs
stc
xor
lret
mov
add
and
jns
push
mov
fcmovnb
xorb
sbbb
mov
mov
jbe
dec
test
push
out
xlat
pop
hlt
mov
loop
fldcw
pop
sti
jmp
imul
test
aas
jl
notb
dec
xor
xchg
mov
cmpsb
jb
inc
pop
int3
imul
lock
or
rol
xchg
xor
cmp
mov
pushf
xor
call
and
adc
push
jno
adc
or
movl
pop
daa
push
xor
or
mov
lahf
add
cwtl
cld
cwtl
xor
pusha
pop
push
xor
out
jbe
mov
repz
inc
fcoml
or
jns
cmp
dec
out
mov
sbb
aad
pop
xchg
cmpsb
popa
adc
add
sbb
mov
ret
rcrl
mov
fwait
add
mov
and
mov
js
adc
adc
cltd
fimuls
jne
in
inc
mov
fdivrs
sub
je
ss
mov
mov
inc
js
xchg
cmp
jge
stos
fdivrs
adc
inc
repnz
adc
cltd
outsl
xchg
popf
dec
inc
aam
movsl
js
outsl
xor
pop
scas
int3
aam
aas
push
xchg
pop
loopne
inc
rol
xchg
sbb
inc
sahf
popf
dec
add
or
pusha
popf
mov
add
push
and
inc
sahf
mov
cmp
jo
rcr
xchg
cmpsb
add
adc
iret
ficompl
dec
inc
je
add
xchg
stos
cs
mov
lock
std
add
inc
mov
adc
leave
mov
sbb
imul
addr16
int3
imul
push
fnstcw
mov
adc
inc
ret
xchg
xchg
pop
xor
hlt
out
xor
loopne
mov
and
xchg
sub
mov
xor
clc
aas
sar
adc
mov
fwait
or
shll
and
xchg
mov
ja
test
and
sub
and
fisttpll
adc
and
inc
mov
scas
cli
inc
inc
pop
push
scas
cmp
cmp
sarl
roll
push
jmp
mov
push
out
dec
pop
lods
inc
bnd
xchg
roll
mov
xchg
aad
adcb
aaa
dec
jecxz
jae
fcom
fcmovbe
sub
sub
adc
ja
cmp
xchg
cmpsl
xchg
and
push
stc
jmp
cmp
xchg
aas
jno
mov
sub
scas
dec
rcr
inc
loope
pop
movsb
repnz
js
sbb
jb
mov
aas
push
pop
push
sbb
out
mov
loop
dec
push
push
sahf
addr16
lods
clc
jns
popf
sbb
or
sti
pusha
pop
insb
sub
dec
scas
pop
mov
sub
sbb
mov
faddl
or
enter
mov
ret
and
pop
fdivs
jae
es
or
push
sarl
pop
stos
aad
push
sub
int3
cmc
std
push
add
enter
pop
out
sbbb
jg
nop
and
adc
push
addl
dec
pushf
add
ror
std
adc
mov
add
in
andl
mov
or
xor
push
inc
cmp
jb
push
sub
lock
push
outsb
mov
shlb
imul
idivb
or
mov
push
sbb
push
pop
mov
les
xchg
or
jno
and
cmp
fwait
xchg
mov
mov
test
leave
jb
xor
mov
push
loop
leave
fbstp
inc
div
sti
xor
xchg
push
icebp
enter
dec
and
int3
mov
or
sub
shll
ficoml
sbb
ljmp
push
dec
cli
movsb
fbld
movsl
xchg
out
in
mov
xlat
jge
ljmp
jecxz
in
test
push
incb
iret
xchg
cmp
mov
cs
pop
add
aam
fdiv
push
pop
pop
out
stos
in
fwait
adc
std
test
sbb
mov
hlt
shlb
movsb
test
mov
inc
mov
push
out
fisubs
jae
push
mov
clc
push
les
lret
mov
sbb
shl
decb
fistl
out
cltd
sub
movsl
add
bound
adcb
xor
js
add
inc
or
lcall
lea
sarb
add
cmc
xchg
inc
mov
xor
or
std
test
test
push
fcmovnb
mov
sbbl
aad
fsubrs
int3
mov
ss
call
and
fs
add
xchg
ficompl
lods
pop
mov
xchg
jnp
push
dec
fstps
or
adc
jle
jg
pop
imul
enter
out
xchg
test
gs
cmp
add
lea
add
fiadds
imul
adc
xor
sub
cmpsl
add
adc
scas
scas
xchg
sub
add
lods
adc
cmp
xchg
repz
test
nop
pcmpgtd
movsb
push
ljmp
rolb
test
stos
adc
push
movl
inc
out
shrb
outsb
scas
xchg
imul
lret
sbb
push
sub
and
jne
pop
aad
adc
nop
sbb
sahf
pop
pop
add
ret
fdivr
pop
mov
inc
dec
scas
in
mov
inc
push
inc
aas
aas
jp
inc
gs
cmp
xchg
cmp
sbb
dec
roll
push
sbb
mov
push
inc
dec
dec
outsl
xchg
ja
cltd
sbb
inc
adc
lret
nop
pop
arpl
cmp
jno
mov
xchg
jle
test
jecxz
aad
mov
cmp
push
mul
sahf
lods
xchg
inc
and
jl
dec
add
dec
divb
and
sub
add
sar
xchg
mov
mov
clc
push
jne
push
xchg
jb
dec
mov
pop
mov
push
pop
sbb
pop
emms
aam
lds
out
lods
jecxz
fsubl
shl
pop
lock
iret
push
dec
cltd
jge
jno
fidivl
push
int
cmpsb
enter
sbb
shll
mov
ds
dec
int3
sbb
mov
mov
and
and
test
pop
jo
pop
dec
mov
xchg
scas
or
adc
enter
test
mov
jge
and
and
clc
filds
sub
pop
dec
mov
jle
pop
data16
xor
mov
mov
inc
jmp
cmp
add
jg
call
sub
push
es
mov
stos
outsb
mov
mov
cmp
sub
jmp
loop
mov
xor
cltd
pop
xor
mov
mov
adc
les
sbb
mov
frstor
ja
sbbb
iret
mov
ret
data16
aaa
push
sbb
pop
and
loop
or
aas
push
leave
sbb
inc
lock
fisubs
ffreep
outsl
in
dec
out
add
jle
or
and
lcall
and
jmp
pop
push
pop
pop
loopne
test
jmp
lods
dec
pop
out
jbe
inc
arpl
pop
cmp
push
js
loopne
add
pop
push
mov
pop
jno
or
cld
mov
mov
jle
mov
or
sub
push
jle
pop
ljmp
add
insl
stos
sti
test
jnp
xchg
and
shr
inc
dec
xchg
mov
add
pop
pop
pop
mov
sub
or
in
or
movsl
xchg
inc
pop
int
insb
sub
mov
pop
test
fistpll
dec
inc
mov
lock
dec
mov
out
xchg
loop
aad
jp
pop
je
cmpl
xor
andl
fiadds
push
hlt
jb
fisubrl
pop
ja
outsb
pop
aad
cmp
push
pop
leave
lret
push
clc
gs
movsb
mov
dec
cmc
ss
jns
jp
sub
cltd
cld
sub
xorl
add
fsts
cli
xor
je
jg
ljmp
pandn
addl
xor
jns
aas
test
dec
lds
icebp
bound
lret
leave
xlat
cmpb
push
movsb
stc
push
ja
pop
push
inc
daa
add
push
push
xor
cmpsb
mov
mov
inc
inc
sub
outsl
push
pusha
pushf
and
push
pop
mov
lea
sbbw
xchg
fucom
pop
stc
sbb
sarl
insl
pop
movsl
cmpsb
out
inc
out
sub
or
bound
test
testb
xchg
mov
and
inc
cltd
add
jmp
popa
sbb
xor
jmp
add
add
mov
dec
dec
sbb
and
sub
add
aam
in
jl
sbb
jbe
outsl
rcrb
push
add
es
jns
adcl
jecxz
and
aad
cmp
pop
ficomps
ds
sub
xor
xchg
jb
ljmp
cltd
mov
push
push
sub
mov
xor
insb
pcmpeqd
aad
addb
mov
sbb
xor
mov
add
insb
int3
mov
ja
repz
cmp
cs
jmp
add
das
ret
sub
decb
lret
cvtps2pi
or
xchg
add
and
xchg
pop
out
movsl
xchg
jnp
orl
sahf
push
gs
push
xor
and
sub
push
inc
iret
xchg
lret
fcmovnu
test
sbb
dec
lods
shld
jmp
std
mov
cmp
test
mov
popa
add
dec
lods
loopne
out
mov
add
dec
nop
mov
fbld
incb
sub
call
xor
mov
adc
jmp
and
ret
cmp
lret
cs
je
vshufps
pop
inc
in
rcr
loopne
xchg
insl
xchg
pop
jno
ds
leave
movsb
pushf
mov
jo
stc
and
sbb
sub
fistpll
sti
fimuls
xor
cmp
dec
es
pusha
repnz
pop
xor
jo
das
dec
mov
icebp
xor
adc
cmp
insb
les
push
scas
aad
outsl
sti
mov
jmp
add
or
rcl
mov
imul
imul
imul
in
push
ret
sbb
inc
popa
js
xor
dec
addr16
test
sub
sub
or
cltd
cmp
imul
out
imul
jnp
fiadds
push
inc
xor
mov
nop
sub
les
xor
fwait
jb
paddd
sbb
imul
jb
mov
mov
ficoms
addr16
mov
jne
fnstcw
ljmp
dec
or
loope
adc
xor
nop
mov
test
mov
mov
dec
inc
call
or
ss
popf
mov
fbstp
aaa
mov
movsb
add
mov
pop
pushf
inc
cltd
xor
xlat
fwait
sub
push
and
sti
clc
jecxz
jns
es
int
push
lods
cmp
test
mov
inc
xchg
cmp
jbe
cmp
cmc
or
pop
push
fbstp
pop
adc
pushf
push
jno
pop
je
addr16
mov
xlat
pushf
ficompl
fmuls
xchg
addr16
jl
fldt
dec
sbb
xchg
xchg
js
xor
xor
rol
push
bound
out
aad
mov
ljmp
push
sub
push
push
stc
jmp
std
adc
int
jo
outsb
push
push
xchg
call
aad
mov
test
sub
add
pop
fsubl
rorl
push
cld
pop
rorb
pop
xchg
jp
movq
test
call
out
mov
jo
enter
in
pop
and
addr16
insl
sub
enter
sbb
add
fiaddl
xor
ret
aas
sbb
cmpsl
hlt
fisttps
xlat
cmp
sub
push
sbb
imul
sti
mov
arpl
push
mov
shll
out
addr16
fwait
insb
roll
and
lret
add
lret
adc
orl
shl
jp
loopne
ret
jl
jae
fcmovbe
mov
adc
fistps
xchg
fiadds
mov
cltd
push
sarl
jmp
dec
xor
inc
cmpb
mov
sbb
xchg
sbbb
xor
xor
jo
enter
clc
int
nop
subl
cwtl
and
cmp
lret
gs
aam
aam
push
les
lock
add
mov
pop
mov
je
pop
and
or
lds
outsb
adc
lret
xchg
dec
arpl
inc
xchg
clc
rclb
and
fstpl
pop
cmp
xor
ret
divl
or
clc
xchg
xchg
inc
paddsb
arpl
jbe
push
jecxz
loop
lods
popf
mov
jno
mov
dec
das
adc
xlat
sub
into
pop
aaa
sarb
cltd
or
cli
and
repz
sbb
mov
push
and
je
jge
test
stos
aas
sbb
lods
xor
notb
je
fiaddl
ret
lahf
adc
add
lock
xchg
mov
mov
dec
not
out
xor
fwait
stos
xabort
lcall
and
mov
sub
or
ja
pop
cltd
mov
dec
mov
add
lahf
shll
and
in
push
mov
orl
push
lea
jo
pop
lea
lahf
mov
sbb
pop
aaa
addr16
sub
jo
lds
pop
popf
int
jmp
test
mov
and
dec
ljmp
adc
test
jmp
repnz
mov
fnstenv
out
aam
lods
add
or
mov
cmp
test
sbb
mov
sbb
pusha
subb
outsb
or
imul
xchg
cltd
cltd
xchg
jle
push
dec
ret
and
sahf
lods
inc
out
mov
adc
jae
cmc
insb
xchg
mov
jmp
cmp
sbb
not
clc
xor
xor
and
ret
mov
adcb
push
cmp
movsb
mov
clc
adc
xor
fdivrs
xor
cli
dec
sahf
mull
cmp
addr16
sbb
int
jne
movsb
dec
add
xlat
cwtl
pop
sbb
in
sbb
mov
mov
js
std
aam
popa
bound
add
sbb
andb
sti
pop
rolb
push
scas
or
in
ret
mov
ret
adc
cmc
rcrb
mov
add
int
add
sub
adc
mov
sub
aaa
sbb
rolb
jo
pushf
jno
xlat
shll
pop
jp
aad
push
mov
addl
xor
mov
int3
or
psrlw
jb
inc
ja
fwait
sbb
xchg
insl
jp
lods
pusha
jl
push
xor
sbb
imul
pop
lods
inc
out
jle
fs
inc
push
xchg
mov
jns
arpl
push
inc
ror
fwait
add
mov
arpl
jge
push
pop
push
fidivrs
scas
adc
fs
xchg
ss
cmp
fsubrl
and
mov
mov
sub
xor
in
addr16
push
in
mov
and
jmp
pop
mov
mov
xor
push
mov
int3
add
pop
shl
adcl
dec
mov
rcl
mov
out
gs
pop
popa
or
dec
mov
pop
aas
fmull
js
push
cmp
into
xor
push
sub
imul
dec
repz
int3
mov
push
add
push
jmp
jl
mov
sub
fimull
pushf
lea
fwait
mov
repnz
mov
mov
imul
or
xor
idivl
rorl
daa
dec
push
ljmp
loopne
popf
scas
push
lret
or
imul
int3
popf
add
call
inc
jp
and
ret
je
xor
mov
test
fcom
test
aam
or
jbe
mov
addb
js
insb
bound
xor
lods
jl
out
cmp
mov
sahf
mov
js
movsl
sti
cltd
pop
push
mov
push
jb
and
jge
add
push
add
pop
cmp
dec
inc
and
shrb
push
pop
cmc
push
rcll
pop
jmp
ljmp
bound
mov
cmpsb
push
stc
int3
clc
sub
lods
push
call
mov
lahf
int3
jp
jl
out
adcl
jp
sarl
push
mov
mov
icebp
sub
inc
stos
mov
or
lahf
ficoms
rcl
aas
outsb
push
aam
popl
movsb
in
mov
lret
cmp
or
imul
sahf
call
inc
pop
std
xor
dec
lods
pop
jb
mov
rcl
add
mov
mov
mov
jb
fwait
xor
jbe
jb
testb
mov
or
movsl
and
aad
push
aaa
out
int
lds
hlt
adc
adc
shr
int
roll
imul
fwait
sub
mov
mov
pop
insl
mov
inc
imulb
dec
and
sub
adc
lock
xlat
mov
xor
cmpsl
and
inc
adc
or
into
add
jae
out
jecxz
mov
repnz
cwtl
cmpsb
cltd
lods
mov
std
xor
repnz
push
js
xor
jl
jb
data16
cmp
lock
pop
xchg
fs
lods
mov
movsl
imul
dec
xor
jno
xor
in
movsl
sti
mov
push
sbb
lock
inc
test
enter
xchg
arpl
pop
pop
shrl
mov
loop
pop
data16
bound
cs
and
dec
mov
or
xor
int
push
xchg
add
xor
dec
or
dec
movsl
aam
imul
push
mov
cmp
mov
add
cmp
xor
sti
sbb
or
ss
sub
jmp
loopne
jne
mov
hlt
sbb
lds
mov
jecxz
aas
sbb
mov
and
in
cmpsb
test
jo
push
sub
mov
roll
cmp
test
pushf
push
jg
data16
mov
xorl
imul
addr16
ret
cmp
cmpsb
inc
mov
les
push
dec
xchg
push
outsl
ljmp
sub
or
sarb
mov
test
js
xor
jns
cmp
out
mov
shrl
mov
inc
pop
xor
jns
pushf
aas
outsb
incl
gs
mov
xor
mov
cmp
loope
xchg
mov
ss
xor
movsb
or
sbb
cmp
mov
clc
or
xchg
addr16
inc
mov
jl
mov
sub
and
xchg
outsl
cmpl
mov
icebp
adc
cmc
in
das
add
and
sub
loopne
lea
mov
or
cmpsb
dec
cmp
pop
aad
adc
std
xchg
das
movl
mov
icebp
inc
out
shrl
popf
mov
hlt
fsts
push
inc
mov
pushf
jp
xchg
dec
rorb
jmp
inc
andl
mov
mov
sti
orl
and
stc
out
or
rcl
rolb
add
sahf
in
adc
sahf
cmpsl
sarl
xor
push
cmp
xor
mov
jae
stos
imul
or
data16
aam
pushf
out
idiv
pop
xor
cmc
shll
inc
jmp
add
xchg
adc
cmpsl
inc
dec
adc
jnp
fwait
mov
and
cmp
and
imul
sbb
inc
addl
push
jmp
inc
imul
in
dec
popf
xor
pop
insb
imul
mov
in
sbb
inc
jae
scas
stos
xchg
repz
stos
iret
ret
lahf
jo
cmp
jmp
lods
scas
movsb
mov
mov
mov
adc
ss
mov
fadd
nop
outsb
loop
rclb
mov
test
jl
add
mov
fmul
and
inc
lcall
rcll
push
pushf
mov
jo
shll
xor
xor
scas
adc
cmp
or
jae
adc
clc
pusha
inc
dec
stos
fldt
sbb
aad
mov
inc
fildll
and
js
add
push
test
rcrb
push
pushf
cmpsb
sub
cli
xchg
pop
shlb
pop
test
and
inc
cmp
aas
fucomi
into
jmp
xor
lods
pop
enter
daa
insl
or
daa
dec
call
in
loopne
addr16
push
sbb
lods
cld
es
jne
mov
jg
fwait
pop
ja
arpl
bound
cmpsb
sbb
xchg
dec
sub
jbe
sbb
xor
push
push
lcall
inc
mov
jbe
sbb
icebp
out
or
pop
jmp
jmp
jge
int3
sbb
mov
cmp
pop
fsubrs
mov
xor
cs
sbb
xchg
out
mov
das
roll
movsl
repz
xlat
xchg
sbb
pop
fadds
ret
sbb
push
or
mov
popa
adc
mov
inc
jbe
dec
adc
out
jb
mov
and
fnsave
adc
fidivrs
mov
jns
sti
or
or
into
mov
dec
inc
movsb
mov
popf
clc
push
out
adc
add
xor
sbb
neg
aaa
mov
lea
inc
out
xor
mov
add
call
cmp
loope
popf
les
in
push
into
movsl
jno
jge
cmp
fisttpll
push
push
lahf
mov
arpl
outsl
insl
mov
push
add
sub
ljmp
dec
cmp
lods
arpl
inc
outsb
lock
ret
scas
add
movsl
scas
inc
sbb
pop
es
jo
pop
pop
fistl
mov
int
push
in
xchg
in
add
sbb
dec
push
sub
push
lcall
cli
inc
ret
sbb
ja
daa
adc
mov
dec
sub
sbbl
pop
adc
mov
xlat
outsl
sub
iret
es
filds
and
mov
lcall
or
and
lret
xor
cmp
int3
jp
adc
arpl
in
mov
iret
mov
aad
fsubr
ss
in
out
adc
sbb
or
mov
jns
shlb
aam
dec
ficoms
inc
or
mov
xorl
sub
cmpsb
iret
ret
lret
sti
jp
insl
rcl
xchg
scas
out
sub
push
push
dec
xor
pop
jno
movsl
fnstsw
cmp
loopne
jnp
jns
pushf
outsl
mov
rcl
mov
pop
jmp
sub
fyl2xp1
mov
push
in
xor
neg
cltd
bound
cmc
enter
mov
jo
dec
xchg
adc
sti
gs
loopne
inc
xor
pop
test
pop
jae
mov
shl
lcall
jp
pop
mov
inc
out
shr
push
mov
sbb
sbb
cli
int
fwait
sub
or
fists
mov
cmpsb
mov
inc
sbb
ret
repz
dec
adc
gs
pop
sbb
movsb
out
sbb
and
in
mov
push
sti
pop
bswap
cmp
jbe
inc
in
and
mov
fwait
cmp
fwait
sub
mov
rcll
jne
or
out
mov
mov
hlt
sub
xor
add
shlb
je
pop
andl
mov
and
push
sub
subb
movsb
fdivs
rcl
jecxz
clc
or
jle
in
mov
inc
cs
push
and
mov
movsb
sbb
cs
je
lret
push
or
sbb
jnp
dec
rcrb
shll
out
dec
push
lret
jg
cmpsl
lret
testb
mov
in
dec
shlb
rorb
mov
les
jns
push
mov
push
iret
mov
fdivl
push
mov
sub
notl
mov
popf
imul
mov
ljmp
mov
mov
cld
fidivs
mov
xchg
push
mov
add
out
test
aaa
mov
push
add
out
mov
sub
jmp
mov
add
cmpsl
sarl
mov
mov
jg
mov
aam
stos
fs
pop
mov
cli
lock
jge
cmpsb
movsb
xchg
dec
nop
mov
divb
lds
mov
arpl
cmp
leave
sub
xchg
fidivl
lds
dec
hlt
mov
or
xchg
out
sub
outsl
or
mov
fcmovnbe
push
mov
or
in
faddl
std
sti
cltd
daa
xchg
popf
add
adc
test
and
test
add
push
mov
icebp
mov
adc
cmp
sub
ss
lret
mov
push
das
aad
and
cmp
lcall
fwait
test
inc
mov
pop
mov
dec
imul
mov
iret
scas
test
sarl
jne
add
faddl
xchg
pop
pusha
inc
or
inc
adcb
sbb
lret
mov
or
rcl
enter
shl
inc
pop
xor
inc
inc
int3
cmp
cli
and
dec
jp
inc
mov
cwtl
push
mov
filds
stos
sbb
andl
pop
sub
xchg
je
xor
pop
bound
sub
aam
arpl
fnstsw
inc
daa
add
jnp
xor
inc
add
fdivrs
ret
push
cmpsl
into
addb
subb
fidivl
nop
jg
and
outsl
sarb
xchg
inc
hlt
pop
xchg
idivl
or
stos
inc
push
jnp
loope
cld
ds
push
mov
test
adc
sbb
cmpsb
push
das
cmp
sbb
push
pop
sti
movsl
subb
xchg
mov
pop
and
inc
sub
fidivl
and
dec
push
clc
insl
into
imul
pop
push
out
mov
push
xor
lret
add
push
mov
mov
adc
ror
push
add
movsl
aaa
ss
ss
mov
jle
lock
cmpsl
push
mov
fdivr
push
jne
out
mov
mov
or
repz
sbb
insb
sub
push
dec
lret
sub
inc
mov
jnp
pop
loopne
jae
push
jne
mov
pop
dec
xchg
lods
mov
mov
adcb
stos
scas
xchg
cmc
push
mov
mov
loopne
sbb
dec
stos
js
add
hlt
push
mov
mov
inc
stos
sbb
sbb
add
insb
mov
jns
dec
xchg
mov
pop
popa
lret
mov
and
loope
jecxz
pop
addr16
adc
or
inc
lods
pop
xor
pop
push
mov
ljmp
mov
or
popa
frstor
sarl
adc
and
jnp
and
pop
dec
pop
or
mov
hlt
test
js
xor
hlt
push
xchg
pop
dec
cmp
das
enter
sbb
jl
xchg
rep
adc
adc
stos
jg
pop
mov
jg
inc
push
mov
js
icebp
cmpsl
jle
in
js
mov
popl
ficomps
pop
ja
aas
mov
jmp
fwait
push
adc
fcompl
out
sarl
xchg
mov
ja
or
in
cmp
and
xchg
in
out
and
add
mov
imul
cwtl
dec
jnp
aas
mov
mov
daa
push
pop
lea
dec
icebp
pop
jle
mov
mov
add
lret
popa
mov
dec
sbb
dec
xchg
ror
dec
stos
stos
inc
mov
int
jg
push
inc
lds
jge
or
push
cmp
push
dec
cltd
sub
jecxz
xchg
adc
aas
std
push
mov
and
add
outsl
jecxz
adc
pushl
outsl
negb
fs
mov
mov
popf
adc
aam
xchg
data16
icebp
jbe
jle
and
and
cmpb
jb
int
sti
call
andl
rep
mov
punpcklbw
mov
roll
add
push
repnz
sub
iret
inc
add
insb
addr16
jp
arpl
sahf
int
mov
push
scas
xorl
push
sarl
pop
test
loop
add
rcrl
test
lods
stc
xchg
push
push
in
mov
cld
xchg
and
mov
jnp
xor
cld
cmpsl
int3
orl
ljmp
and
dec
sbb
adc
mov
ss
test
into
scas
mov
xchg
xor
xchg
es
out
js
jl
lcall
xchg
jnp
dec
lods
shlb
cli
pop
movsb
and
scas
test
cmp
dec
lahf
fbld
xor
lret
pop
aaa
loope
cwtl
xor
xor
jecxz
loop
clc
cltd
iret
xchg
mov
lock
rcrl
mov
shrb
xor
adc
cmp
or
rorl
cmp
in
lods
daa
mov
repz
cmc
xchg
popf
jmp
mov
loopne
add
add
mov
sahf
std
mov
xchg
dec
mov
call
add
xchg
hlt
jmp
arpl
insb
cmpsb
inc
and
filds
pop
jns
cltd
cmp
in
rclb
dec
inc
adc
push
and
pop
sbb
add
ret
test
insb
js
and
lods
in
pop
cmp
cmp
clc
outsb
mov
aam
mov
mov
cmp
push
xlat
mov
or
insb
sub
std
push
addl
push
ret
and
test
cmp
mov
hlt
or
mov
and
fidivs
pop
jns
fwait
nop
in
inc
dec
pop
loop
pop
stc
mov
pop
mov
jp
popf
andl
mov
mov
stc
stos
inc
and
imul
or
pop
mov
cmc
and
or
xchg
dec
pop
mov
jecxz
and
push
inc
sub
je
inc
sub
movsl
push
push
int3
adc
roll
bound
scas
dec
clc
push
movsl
mov
insl
sarb
pop
pop
mov
push
bnd
jno
inc
rclb
xor
jp
push
pop
add
fxch
mov
sub
jmp
cld
cmc
divb
mov
jle
adc
ljmp
sbb
or
popa
scas
int
mov
in
xchg
push
test
dec
into
ret
sub
lods
jmp
mov
fwait
dec
adc
lods
movsb
mov
ss
add
xchg
cmp
push
into
mov
dec
lret
daa
hlt
xor
cmpsl
pop
ds
fs
cmpsl
into
sub
jp
xchg
push
rorb
pop
testl
fs
mov
pop
pusha
jg
hlt
iret
mov
aam
and
lock
mov
adc
pop
mov
sbb
shl
lea
sti
push
ljmp
gs
push
testb
dec
xor
mov
cld
daa
iret
push
mov
pop
dec
mov
int
sbbb
mov
lahf
cwtl
popf
inc
out
push
and
add
leave
pop
leave
adc
loopne
mov
mov
cli
inc
stos
inc
mov
add
repnz
xchg
mov
ljmp
int
mov
in
icebp
leave
push
rclb
mov
inc
xchg
mov
mov
rcrl
lds
jbe
int
ret
and
scas
jge
adc
out
add
pushf
ret
mov
xchg
ret
test
ljmp
nop
xor
insb
pushf
pop
and
inc
pop
int3
mov
mov
dec
das
sbb
mov
mov
pop
ja
pop
cmc
xchg
dec
adc
pmaddwd
bound
xor
gs
rcl
sbb
cmp
jo
test
and
jmp
insl
jmp
mov
xlat
scas
out
iret
sahf
pop
ljmp
cmc
inc
dec
test
inc
dec
and
scas
sub
mov
rolb
xchg
int
cmp
and
push
lret
cli
xchg
cmp
cmp
inc
dec
push
mov
cmc
lods
push
dec
xorl
jg
adc
xrelease
popa
std
inc
shrl
mov
sub
cmpb
xor
inc
adc
mov
mov
sbb
call
adcb
lods
push
mov
mov
int
pop
pop
or
xor
mov
pop
pop
rcll
inc
and
xor
or
sub
and
test
orl
ss
aaa
adc
into
fmull
bound
in
or
pop
push
out
dec
cmp
lds
stos
mov
daa
test
fwait
decl
xor
jnp
pusha
jg
testl
cmp
xchg
call
cld
je
jns
das
jp
dec
idivl
mov
mov
cwtl
mov
push
mov
cwtl
sub
or
fnsave
adc
je
inc
fdivl
mov
xchg
lahf
shrb
div
outsb
repnz
and
testb
inc
pop
popa
jge
imulb
ss
daa
sub
test
xor
adc
daa
pop
nop
xchg
xlat
push
cld
dec
lock
push
in
inc
lods
xor
inc
xor
xor
dec
sub
dec
pop
add
jb
andnps
fcompl
pop
dec
pop
outsb
js
sub
inc
inc
out
nop
jge
gs
aaa
or
into
bound
out
fists
outsl
pop
push
repnz
jle
dec
inc
mov
sahf
push
pop
push
aaa
and
jmp
shlb
and
movsl
pop
outsb
sbb
cltd
bound
sbb
add
mov
adc
pop
inc
dec
jge
int
andl
xchg
xor
pop
pop
ja
dec
add
mov
xchg
lods
xchg
jae
inc
insb
icebp
les
cld
orl
dec
xchg
inc
jmp
jno
les
inc
inc
push
stc
and
sahf
pop
sbb
add
lock
bnd
cmc
cwtl
mov
inc
jg
push
push
jb
inc
xor
mov
aas
jge
lds
dec
jle
pop
mov
fdivrs
add
mov
add
mov
pushf
mov
add
push
or
out
pop
icebp
dec
data16
shlb
out
xor
pop
lret
pop
and
mov
mov
cmpsb
cli
outsb
inc
jmp
lret
loopne
ja
lea
sub
add
js
adc
xchg
or
int
enter
loopne
jnp
cmp
addl
or
ds
cld
inc
decl
jno
call
push
mov
add
push
mov
mov
push
mov
xor
adc
sbb
inc
mov
jmp
inc
or
fidivrl
adc
jl
lahf
je
je
clc
movsl
out
subl
dec
cmp
pusha
xchg
call
movsb
jbe
fldt
je
jne
pop
mov
sub
lfs
aas
mov
enter
fucomip
xchg
sbb
mov
lret
push
dec
jae
sub
data16
fwait
icebp
xor
mov
xchg
xchg
mov
into
pop
stos
pop
test
shrb
and
clc
adc
movsb
fistps
jb
sub
popf
and
xlat
sbb
sbb
jl
gs
aaa
and
sar
or
popf
xchg
xor
sub
pop
mov
jne
xor
jl
addr16
repnz
pop
sarb
sbb
xor
std
roll
mov
add
roll
or
das
pushl
rcrb
hlt
inc
or
pop
sbb
push
sbb
pop
add
push
in
fstpl
invd
int3
fnstcw
sub
xchg
push
scas
cwtl
adc
inc
ds
mov
int3
ja
cld
inc
dec
mov
dec
and
fadds
xchg
xorb
or
bnd
fistl
popf
adc
arpl
scas
push
jns
mov
mov
inc
sbbl
adc
lret
inc
fcompl
pop
and
loop
mov
jecxz
orps
hlt
popf
ljmp
inc
leave
sub
popa
jno
fstps
movsl
xor
sti
or
sub
adc
push
push
or
xor
xchg
mov
shrl
push
inc
xor
rcll
xlat
cmpsl
lods
push
jne
pop
push
adc
loopne
repnz
pop
mov
sbb
stos
lcall
cmc
aam
ss
rcll
das
and
out
xlat
test
cmp
lds
xchg
or
xchg
mov
repnz
outsb
test
insl
subl
jno
enter
data16
mov
mov
in
insb
test
cli
adc
movsl
pmuludq
je
jns
or
mov
orl
push
and
std
push
lods
mov
ljmp
push
daa
mov
int
jg
cmp
shll
loopne
pop
aam
or
call
es
sti
subl
sub
pop
sbb
cmp
cs
into
imul
in
adc
insb
mov
daa
push
cmpsl
push
fs
add
mov
imul
jle
das
mov
out
adc
add
iret
push
mov
lods
shlb
xor
sbb
sbbb
out
fimuls
leave
out
imul
cwtl
mov
xchg
xchg
fdivl
dec
cmpsl
xor
out
or
loopne
pop
cs
and
in
pop
enter
ficomps
hlt
pop
pop
loop
dec
test
xchg
leave
mov
hlt
add
popf
cli
imul
test
jne
or
xchg
mov
imul
or
rcl
jnp
xor
pop
fdivrs
and
jns
int3
inc
mov
mov
fwait
sub
inc
ds
aad
pop
jp
push
testb
mov
in
adc
movsb
push
inc
mov
mov
rcrl
mov
dec
outsl
sbb
push
aam
adc
ja
mov
add
inc
je
adc
xlat
jo
mov
cmp
or
xchg
push
xchg
sub
push
xchg
push
mov
pop
call
pop
out
ljmp
and
add
arpl
adc
jge
sbb
je
fs
arpl
enter
pop
push
cli
push
jmp
cld
pop
mov
lcall
mov
orb
lea
push
mov
xor
xor
mov
sbb
aad
fs
xchg
jnp
push
jl
and
sub
sahf
mov
inc
adc
jle
xchg
sahf
mov
inc
sbb
lods
repz
add
mov
ret
out
stc
or
cmpsb
mov
jmp
into
mov
lods
aaa
xlat
sub
jp
iret
jo
inc
hlt
lods
cmp
mov
xchg
cmp
cld
mov
insl
mov
fistl
out
daa
andb
nop
ret
lock
mov
cmc
jnp
inc
cmp
scas
cltd
sbb
insl
mov
lock
dec
and
jo
or
insb
add
fs
jmp
jle
xchg
xlat
in
pop
outsl
jbe
cs
nop
fstps
and
jge
adc
loopne
sub
dec
push
push
ficoms
mov
cmpsb
shll
and
mov
push
stc
dec
xor
jg
daa
inc
ret
push
ror
pop
xor
or
mov
adc
dec
adc
jns
imul
cmc
pusha
mov
pop
mov
xchg
cmp
jge
sbb
or
or
ds
aas
jbe
outsb
stos
xor
test
push
call
int
mov
rolb
lock
or
ret
cltd
ja
and
cmpsb
push
inc
mov
mov
mov
test
daa
inc
mov
xchg
adc
out
sbb
pop
and
mov
cld
jle
mov
jge
popa
cmp
mov
jl
gs
nop
push
int
jno
xor
lds
sub
inc
pop
dec
push
xor
cmp
gs
mov
cmp
xchg
mov
push
jne
scas
mov
loopne
mov
or
xchg
inc
inc
jge
jp
data16
push
sbb
adc
add
lahf
stc
mov
adc
aaa
lods
out
dec
aam
mov
mov
pop
or
and
repnz
add
xchg
xor
jp
inc
insb
sbb
inc
into
stos
dec
les
loope
hlt
add
xor
lods
jge
rolb
mov
in
add
mov
movsb
decl
mov
xor
or
xlat
dec
dec
jmp
insb
add
lret
testb
mov
clc
enter
mull
daa
andb
out
push
fwait
jo
rcrl
sbb
xor
decl
adc
or
aad
cmp
add
sbb
stos
push
xchg
xrelease
mov
xlat
mov
dec
popa
mov
rcrb
fadd
and
pop
mov
sbb
cmp
sbb
cmc
jno
mov
jg
divb
mov
jb
sub
cli
push
cmp
divb
jp
add
push
push
cli
call
sub
cs
pop
push
rcll
test
repz
aad
adcb
push
cmp
ret
bound
ss
pop
shl
xchg
loop
mov
push
pop
fldcw
int
test
aaa
add
xchg
push
cmp
cmp
jecxz
pop
ret
pop
mov
pop
sahf
cli
jp
gs
pop
xchg
push
and
ss
and
popf
out
xlat
xchg
mov
xchg
cmpsl
xchg
mov
jl
ljmp
adc
xor
out
cmp
xchg
rorl
mov
push
xchg
adc
and
pop
xor
inc
insl
cmp
pop
adc
scas
orl
or
dec
sub
fsubs
add
xchg
dec
push
std
cmp
xchg
jmp
add
sbb
jbe
orb
pop
jbe
enter
aam
test
jmp
or
mov
push
fstl
xor
xor
shrb
push
jp
call
filds
outsl
push
jae
loop
jg
addr16
shlb
fmulp
and
sub
pushf
mov
inc
push
adc
cmpl
jge
cmpsl
or
es
stc
addr16
test
add
push
sbb
cmovp
in
xchg
in
sbb
push
dec
ljmp
test
cmpsb
jne
cmpsl
and
mov
jae
std
dec
iret
std
jg
icebp
loop
xchg
inc
fildl
cwtl
xorl
je
dec
in
add
pop
mov
insl
aad
push
addl
out
lret
and
data16
sbb
clc
sbb
xchg
ja
jb
fildll
andps
aad
cmp
push
mov
ret
pushl
jg
out
jge
mov
imul
ficomps
lods
pop
es
fmul
pop
pop
imull
add
cmp
jl
sub
scas
testl
cwtl
cmpsl
jb
scas
js
leave
movsb
stos
pop
inc
cld
dec
js
ret
add
pop
jo
fwait
inc
xor
xor
fdivs
cmp
cmp
lea
pop
sahf
es
jecxz
loop
jmp
dec
jg
lock
xchg
sbb
pop
mov
mov
sbb
jmp
scas
jmp
mov
pushf
inc
cmp
cmpsb
fidivrl
or
adc
popa
icebp
gs
dec
dec
rolb
aas
jne
mov
notl
sub
push
rcll
mov
ja
jge
ret
mov
cmp
ficompl
lret
add
lock
in
push
sbb
inc
loop
jb
or
cltd
jp
sbbb
add
into
mov
fwait
xorl
cmp
lds
pop
call
push
movsb
sbb
les
cmp
push
cmp
inc
xor
jo
and
mov
fidivs
jo
jo
pusha
mov
pop
pop
subb
loop
fcoml
loopne
lret
push
lahf
dec
xchg
cmpsb
les
addb
mov
pop
xor
lahf
test
jmp
into
clc
xor
sub
test
push
sahf
mov
push
and
dec
and
inc
divb
inc
cli
aaa
sub
mov
test
jle
lcall
and
xor
enter
in
lret
mov
addb
lock
mov
or
sub
fistl
inc
mov
xor
or
dec
sub
lods
jmp
lcall
in
outsb
aad
adc
hlt
mov
xor
loope
stos
les
insb
cmpsb
sub
shll
sub
lods
dec
sti
popf
sti
ret
lods
mulb
push
xorl
xchg
sbbb
inc
ljmp
jnp
hlt
sub
sub
out
mov
mov
xchg
xor
sbb
sti
xchg
inc
mov
pop
mov
fisubrl
testl
xor
cmpsl
or
aaa
inc
jbe
out
inc
dec
sbb
cli
movsl
or
cltd
jbe
and
mov
jmp
lock
data16
cltd
xchg
shll
dec
mov
shl
cmp
cltd
cltd
mov
cwtl
push
stos
xor
ja
loopne
sub
xor
pop
fdivrs
and
dec
inc
lret
push
cmp
arpl
pop
jge
inc
adc
xchg
ja
adc
orl
outsb
adc
push
lods
popf
dec
and
mov
in
out
push
popf
rclb
cs
fiaddl
mov
aas
inc
inc
int
dec
add
jg
ss
aad
push
mov
and
inc
stc
pusha
lock
mov
mov
insl
pop
test
fbld
jl
sbb
and
mov
adc
je
dec
stc
gs
xchg
push
jne
adc
shl
inc
popf
adcb
sbb
fcoms
jmp
fisubrl
mov
jle
mov
enter
mov
fsts
into
cli
sbb
adcl
inc
inc
xor
mov
hlt
stc
and
je
scas
mov
mov
arpl
call
stos
dec
lcall
pop
add
adc
cld
cmpsl
pop
pop
pop
mov
icebp
out
pop
mov
mov
and
xlat
mov
add
out
cli
js
sub
or
fcomi
loope
hlt
push
push
bound
subb
adc
mov
and
pushf
lods
loop
push
xor
fwait
scas
cmp
fisubl
pusha
enter
scas
and
push
fisubl
les
pop
mov
or
in
outsl
sahf
fiadds
cmp
pop
and
fwait
jg
xchg
mov
push
clc
xchg
test
lods
pop
sub
add
lret
js
jecxz
pop
sub
filds
cli
test
outsb
ss
sbb
push
imul
mov
jne
shll
mov
cmpl
xchg
inc
addl
inc
fbstp
xlat
rcrb
or
push
and
fwait
cmc
in
out
mov
loop
cld
cmc
icebp
pop
push
aam
aas
loope
loopne
lods
or
adcb
push
jb
lock
std
fistpl
jae
inc
mov
lds
fs
imul
aas
in
jecxz
fimull
in
bound
into
add
movsb
sbb
lods
roll
sub
push
arpl
lahf
shlb
xor
inc
sub
loope
push
out
push
rdtsc
cltd
and
leave
mov
adc
mov
mov
orl
or
ljmp
inc
lret
push
or
mov
aam
int3
mov
push
push
imul
lahf
stos
ss
test
scas
loopne
or
push
das
and
sub
xor
mov
shr
cmc
mov
idivl
pop
jecxz
push
sbb
aad
out
cmpsb
cmp
inc
call
cmc
add
pop
nop
push
popl
outsb
lods
movsl
neg
xchg
js
rcrl
xor
or
push
frstor
icebp
mov
popf
mov
cmp
or
gs
adc
xchg
aaa
rcl
sbb
sbb
xor
mov
or
mov
cmp
jb
iret
in
pop
cmp
lea
clc
xchg
test
mov
cmp
jo
xchg
mov
mov
and
mov
xchg
adc
mov
scas
sahf
and
jno
fldl
je
pop
loope
lds
inc
xchg
std
inc
sbb
inc
sbb
iret
test
sbb
lret
mov
mov
add
jb
push
jo
test
sbb
push
scas
push
out
arpl
mov
les
mov
jp
addb
rolb
inc
or
mov
hlt
mov
inc
sbb
clc
cmpl
inc
cltd
sbb
rcll
aam
sbb
cmc
inc
xchg
rorl
stc
push
push
test
pushf
mov
cli
sub
inc
xchg
mov
hlt
aam
inc
dec
das
fiadds
shll
call
mov
pop
inc
push
imul
xorb
cmc
int
jl
loope
rcr
iret
or
leave
pop
ret
adc
pop
into
lock
xchg
lret
rcrb
in
std
popf
inc
rcll
sub
mov
loope
cwtl
sbb
dec
fstl
ss
or
sbb
cmp
outsb
jg
adc
and
xchg
lods
mov
fxch
inc
ficoml
lret
mov
pop
or
cmp
push
sti
lods
cmpsl
addr16
and
sbb
mov
jg
pop
js
mov
inc
push
xchg
sbbb
fisubrs
cmpl
pop
out
popa
dec
data16
jmp
sub
inc
push
dec
imul
clc
cmpsb
imul
leave
or
enter
out
mov
xlat
pop
arpl
mov
leave
repz
jno
or
or
mov
add
lock
jge
xchg
or
mov
aad
xor
xor
cli
testl
jnp
mov
pop
mov
dec
xor
push
imul
xor
adc
mov
movsb
mov
pop
in
push
push
mov
clc
mov
data16
cmp
into
pop
dec
sti
std
fsts
pop
test
jmp
xchg
mov
sbb
loop
lret
dec
pop
incb
cmp
mov
orl
push
or
pop
insb
mov
lods
js
iret
xchg
pushf
adc
jmp
pop
insl
push
mov
pop
icebp
xor
xor
pop
fstl
and
cmp
enter
std
jle
dec
mov
mov
inc
bound
aaa
push
cmp
and
or
negb
out
ret
rorl
fs
sarl
jl
mov
ss
icebp
push
jne
and
pop
mov
mov
sub
js
push
mov
bnd
arpl
lea
mov
or
ret
shlb
dec
mov
xchg
lahf
xchg
and
pop
mov
ja
ficomps
out
jns
ljmp
mov
pop
ss
scas
in
sub
adc
pop
mov
stos
enter
fs
fidivrl
shll
mov
aaa
in
adc
fbld
out
rol
sbb
mov
daa
divb
in
adc
mov
ja
addr16
fidivrl
fs
sti
mov
rclb
testb
test
scas
jae
out
out
pop
jmp
hlt
lods
jne
and
xor
mov
push
mov
mov
dec
addr16
xor
push
xor
cltd
dec
add
ret
in
icebp
push
mov
mov
or
fwait
test
loop
popf
daa
out
and
arpl
xor
pop
orb
aam
out
push
push
test
add
cmp
push
sub
pop
inc
in
add
sub
mov
mov
adc
jns
sahf
xchg
enter
mov
or
clc
shll
mov
sub
push
sub
sbb
push
push
jo
pop
sbb
or
div
out
sub
jg
lahf
push
or
jb
lea
into
lret
rcl
push
jle
bound
sub
add
dec
jp
lret
mov
shlb
mov
sub
adc
jno
into
sbb
loope
jne
stc
out
inc
bound
enter
bound
adc
pop
scas
mov
sbbl
icebp
and
das
aam
mov
xor
sbb
cltd
lods
jecxz
stos
or
pop
les
in
hlt
and
cli
push
fsubr
mov
out
cmp
mov
loope
aas
je
shl
je
fdivrp
outsl
fwait
push
cmpsl
mov
pop
loop
dec
in
pop
and
push
and
fistpl
je
sarb
or
mov
pop
push
imul
popa
movsl
data16
enter
push
xchg
jo
jae
pop
das
mov
insb
mov
mov
fucom
cmp
jp
xchg
dec
sub
mov
adc
or
stc
aas
cmpsl
js
data16
mov
adc
cld
sbb
loope
dec
nop
mov
xor
dec
loop
shll
push
push
jns
mov
adc
cli
in
imul
mov
bound
mov
push
aad
inc
repz
mov
sub
sub
lret
mov
pusha
xlat
and
mov
fldl
cmp
mov
rclb
test
mov
int
fsubl
jmp
sti
std
xlat
stc
jno
mov
js
lret
loope
pop
xor
mov
out
push
dec
cmp
xor
arpl
adc
addl
mov
clc
mov
insb
cmp
dec
imul
lock
aad
sarl
insb
mov
adc
addr16
test
aaa
imul
addb
repnz
in
movsl
ret
add
xor
sbb
lret
sbb
and
inc
sbb
cld
jb
in
xchg
and
movsl
pop
in
mov
aas
in
mov
or
and
xchg
fwait
ljmpw
lret
scas
rcrb
mov
mov
mov
pop
dec
repnz
popf
jge
mov
popf
push
and
ds
inc
xchg
cmp
xor
xchg
xor
xor
jns
pushf
mov
in
adc
loopne
xor
push
out
cmp
pop
dec
jecxz
repnz
mov
adc
jmp
rorl
push
dec
fwait
mov
rcrl
outsl
sub
jg
mov
cmp
rcrb
inc
mov
dec
sbb
maskmovq
mov
loope
or
imul
lret
mov
mov
mov
imull
push
aaa
jns
mov
iret
int3
test
lcall
gs
pop
xchg
cli
pop
nop
add
jg
loopne
pop
outsb
push
in
adc
jae
outsl
dec
mov
inc
lahf
je
iret
cmp
inc
and
mov
dec
sbb
and
dec
loop
pop
pop
and
test
sbbl
and
sub
inc
pop
fsubrl
sbb
fsubs
xor
int3
xchg
push
push
ds
xchg
adc
cs
repz
push
in
adcl
jne
add
int3
mov
popa
jmp
add
into
mov
rcr
adc
jo
xor
adc
out
xor
repnz
sbb
imul
dec
loop
out
push
jns
movsl
mov
faddl
pop
and
xchg
insb
mov
jge
clc
mov
inc
lods
outsl
pop
push
out
loope
cld
jl
mov
aaa
adc
cmp
test
jp
out
cs
pop
pusha
jmp
jae
sti
mov
pusha
lcall
dec
pop
out
inc
call
mov
inc
mov
cltd
add
outsl
fdiv
scas
jne
in
cld
fwait
mov
mov
dec
or
pusha
add
xchg
cmp
fstpt
fnstcw
mov
sbb
mov
rcrb
lret
out
loop
cmp
mov
cmp
nop
xchg
xchg
in
daa
mov
lret
pop
movhps
testb
push
pop
mov
ds
shr
jg
push
push
inc
mov
add
cltd
gs
push
pop
movsb
mov
icebp
cli
xchg
ja
dec
sub
outsb
imul
xchg
xchg
insb
ret
ss
stc
cmp
stc
fists
testl
inc
leave
scas
test
pop
dec
or
xchg
sub
mov
add
and
idivl
idivb
or
rolb
xor
fstpt
push
lret
sub
test
cmp
pop
daa
dec
mov
aas
dec
incl
jnp
xchg
ficompl
loopne
xchg
mov
subb
mov
hlt
not
pusha
jnp
cmp
test
enter
jb
mov
decb
out
loopnew
ss
insl
xchg
ret
rclb
cmpsb
pop
cld
stos
xlat
enter
imul
jg
cmp
repnz
lcall
pop
mov
movsl
lods
fnsave
sbb
movsb
xor
mov
add
dec
jle
cli
loope
fistpll
xchg
scas
mov
add
or
jnp
mov
xchg
push
jae
adc
mov
mov
jle
sbb
stos
cmp
adcb
sarb
mov
enter
loopne
out
pop
stos
inc
sub
bnd
dec
shll
pop
cmpl
ss
jb
cs
ljmp
mov
jo
jne
pop
mov
decb
jbe
cltd
and
jne
loope
mov
les
push
mov
sahf
test
jnp
push
mov
xlat
pop
or
dec
shrl
mov
lock
push
cld
cmp
cmpb
pop
hlt
jge
mov
adc
pop
std
add
pop
xor
and
movsl
pop
fiadds
pop
sub
xor
adc
lods
inc
xchg
scas
jp
jno
xchg
xor
xor
sub
lods
inc
mov
stos
sub
ljmp
sbb
nop
sahf
inc
lret
push
add
pop
je
add
fstp
notb
out
pop
jge
test
aad
adc
bound
mov
in
adc
sub
leave
jbe
out
wbinvd
adcl
jno
mov
sbbb
sub
outsb
add
cmp
fidivrl
dec
adc
or
lock
xchg
fcomip
xor
inc
and
pop
imul
push
xor
or
loop
and
mov
inc
push
and
xor
outsl
pop
mov
xchg
fmuls
inc
jb
or
xor
lds
inc
loop
cmc
rcl
outsb
mov
sbb
sti
inc
scas
out
insl
es
and
pop
scas
jae
negb
adc
push
int
sub
hlt
insl
outsb
and
pop
jl
and
loopne
iret
fisttpl
adc
sbb
jge
mov
xor
pop
mov
inc
jmp
out
dec
test
fisubrl
jmp
pop
repnz
add
xchg
sarb
mov
arpl
mov
cs
xor
imul
movsb
cmpsb
jb
add
mov
push
les
sub
movsb
cli
sbb
xor
xchg
stos
inc
xor
test
shl
addb
hlt
push
xor
lods
sti
mov
xor
push
mov
fwait
les
jne
mov
int3
sar
push
lods
mov
xor
push
nop
or
cwtl
rorl
xor
mov
or
push
pop
movsb
jmp
inc
aaa
add
mov
mov
imul
jge
movsl
inc
mov
dec
movsl
orl
mov
sbb
push
dec
or
test
dec
in
sbb
shll
push
xlat
pop
sbb
pusha
je
movsb
adc
xor
repz
flds
adc
mov
movsl
mov
sub
test
inc
lcall
mov
movb
add
in
nop
cmp
into
jne
nop
mov
loope,pn
pop
cld
jns
pop
sub
stos
dec
push
fsubr
and
std
rol
push
jb
clc
bound
and
push
sub
ds
xor
mov
je
mov
mov
loop
xor
fmuls
inc
les
lea
and
jmp
fs
mov
mov
push
lcall
push
and
insl
nop
xor
cmp
dec
sbb
inc
mov
jge
cmp
push
jne
lods
push
dec
adc
mov
sub
iret
rolb
xchg
pcmpeqd
in
lret
push
pop
test
repz
add
cmp
lahf
sbb
aad
push
cmp
pusha
xor
pop
jns
jbe
das
inc
dec
xor
into
addr16
loope
jne
aaa
das
clc
rclb
dec
mov
mov
dec
test
or
adc
mov
cmp
cmp
sbb
cmp
mov
push
push
add
mov
dec
es
fsub
cltd
out
pop
and
jecxz
xchg
sub
out
dec
cwtl
ret
add
inc
or
or
stos
popa
adc
push
xchg
mov
ljmp
lcall
repz
cwtl
lret
in
divl
dec
popa
inc
add
gs
cmpsb
cmp
sbb
sti
idiv
jbe
pop
cmpsb
fstpl
ljmp
sbb
sahf
in
push
mov
pusha
ret
int3
inc
xor
mov
ss
popa
shlb
in
fnstcw
ficoms
mov
mov
pop
push
out
dec
sar
or
cmp
sbb
sbb
in
lods
push
clc
scas
es
xchg
inc
dec
out
pop
cmpsb
mov
stos
movsl
cld
aam
cmpsl
sbb
fnstcw
cmpsl
dec
sub
xchg
sub
jp
hlt
rorb
insl
xor
aaa
nop
lds
cli
sbb
cmp
inc
out
lcall
mov
or
movsb
es
rcll
pop
call
mov
scas
scas
push
mov
test
sub
fnop
pop
insl
sub
gs
por
fidivl
into
int
xchg
cmp
xor
sbb
dec
jbe
data16
mov
push
stc
popf
call
and
es
lret
pop
cmp
mov
and
test
mov
push
jne
sti
pop
xchg
mov
dec
fmul
xor
out
ljmp
push
mov
fs
lahf
push
add
jg
lcall
mov
dec
test
sub
das
insl
pushf
fidivrl
mov
xor
mov
mov
inc
jl
mov
jns
clc
push
mov
out
out
add
cmp
sub
adc
xor
mov
adc
add
int
xor
mov
sbb
cli
in
sub
adc
push
ss
int
fmul
nop
jecxz
pop
ljmp
jns
cmc
xchg
xchg
adc
push
fmul
add
pop
lea
mov
or
les
adc
jbe
int
inc
sub
das
popf
call
cmp
pop
mov
into
mov
test
aad
or
pushf
pop
out
mov
sarl
lods
jb
xchg
aam
push
mov
cmp
add
mov
inc
inc
das
pop
and
sbb
test
xor
icebp
insl
push
xchg
inc
stos
fcomp
jmp
and
mov
sqrtps
les
inc
pop
cmpsb
ds
js
sbb
insb
ljmp
mov
add
sub
jmp
and
inc
out
iret
fisubs
daa
les
dec
cmp
mov
mov
jl
nop
and
pop
adc
cwtl
push
out
mov
aam
lcall
adc
inc
and
test
xchg
dec
add
dec
pusha
adc
pop
fbstp
mov
dec
lods
in
xchg
sbb
pusha
fwait
and
push
cmp
lock
addr16
shrl
lea
sub
je
jbe
pop
test
cmc
jmp
or
sbb
in
xchg
inc
aaa
and
daa
and
jae
pop
pop
icebp
fistps
xchg
inc
mov
ret
aam
xor
dec
ljmp
jb
jns
xor
adc
cwtl
ss
push
xchg
push
movsl
push
sbb
mov
mov
hlt
mov
nop
sub
adc
push
hlt
mov
pop
dec
dec
pop
imul
out
cmp
lock
shll
mov
js
rcr
or
insb
push
and
cs
xchg
fwait
popf
push
pop
test
lahf
test
xor
xchg
lahf
jg
sub
repz
inc
mov
inc
test
test
cs
in
xchg
or
mov
adc
mov
adcb
inc
test
dec
sbb
out
push
jecxz
lods
and
mov
mov
mov
int3
icebp
rorl
xor
xchg
loop
leave
popa
cmp
mov
push
sub
and
push
pop
arpl
push
push
ljmp
insb
test
movsb
dec
es
xor
insl
pop
std
jns
frstor
scas
sbb
fsubrs
add
and
leave
int
lds
outsl
stos
into
andb
stc
aaa
fcoml
les
xor
or
imul
mov
adc
mov
stos
call
cltd
rolb
cmpsl
jnp
xchg
adc
fildll
into
jmp
xchg
rcrb
loopne
dec
jno
or
and
out
inc
ficoms
repnz
nop
xor
call
imul
fimull
adc
lcall
fidivrl
popa
and
sbb
insl
aas
cmp
and
loope
mov
mov
inc
insl
mov
ret
loopne
pop
push
push
imul
inc
or
mov
xchg
xchg
push
out
scas
and
mov
dec
pushf
mov
jg
lds
inc
sbb
sbb
xchg
test
mov
jmp
aaa
pushf
cmp
adc
dec
mov
push
inc
iret
inc
in
popa
cwtl
or
xchg
jle
pop
pop
movl
shll
nop
lret
push
in
cltd
mov
mov
inc
out
daa
xchg
outsl
jbe
pop
pop
sbbl
mov
xorb
cli
mov
cmp
out
lea
iret
cmpb
cmc
xlat
sub
jne
mov
dec
xchg
adc
cltd
xor
sarb
push
xor
or
stos
fisubrs
inc
std
movsb
mov
in
pop
xchg
arpl
sbb
mov
ficomps
decl
out
push
lods
jl
mov
lret
xchg
roll
sub
stc
and
cmpsl
adc
lcall
sbb
inc
scas
cli
inc
add
cmp
rorb
push
mov
movsb
jmp
jp
mov
add
arpl
movsl
arpl
das
pop
scas
pop
dec
arpl
call
sbb
jno
into
pop
das
out
or
inc
mov
or
icebp
xchg
adc
mov
mov
sbb
aam
add
xor
mov
dec
cltd
icebp
sbb
std
mov
aad
std
mov
cmc
dec
pop
xor
js
icebp
and
xchg
xor
lcall
movsb
xchg
inc
xchg
and
es
jecxz
shll
stc
cmp
xor
out
scas
jne
inc
pushf
out
jnp
adc
cmp
fadds
cmpsl
aas
andl
lds
mov
enter
lock
push
insb
rorl
int3
mov
mov
cmc
cmp
xor
or
pop
cmpsl
fsubr
pop
jnp
es
and
xor
sub
inc
xchg
test
dec
mov
scas
sub
fcompl
mov
jns
out
into
shlb
mov
xor
push
rcrb
jl
mov
lds
inc
push
jbe
das
adc
nop
fistl
add
pop
xchg
add
mov
jle
xchg
lret
rolb
sbb
data16
sub
inc
idiv
sbb
pop
xor
add
mov
pop
mov
or
push
divb
push
jae
imul
ud1
jmp
xadd
stc
or
pop
imul
mov
xlat
int3
mov
jno
sub
cwtl
repnz
popf
insl
mov
mov
sub
addr16
mov
in
jecxz
mov
xchg
xor
and
aas
fadd
rcll
testl
add
adc
push
and
jo
fimull
pusha
xlat
push
int
fistps
pop
es
fisubrs
or
mov
sahf
mov
mov
push
iret
push
ror
cmp
pushf
mov
pop
mov
lret
rcll
jo
push
in
cmp
aas
fsubs
add
lock
test
popf
ja
cmovo
mov
push
sarb
or
add
mov
cmpsl
adc
pop
cmpsb
imul
add
out
shlb
mov
lret
fcmovne
lret
push
pop
mov
incb
loope
movsb
adc
xchg
scas
or
xor
lods
xchg
cmp
rclb
out
data16
in
add
in
outsb
jae
scas
mov
sub
fstl
xchg
push
mov
mov
aas
leave
or
mov
adc
out
pop
jns
jne
cs
shl
mov
add
jmp
jle
or
jnp
fwait
int
lds
or
sarl
loop
pop
jmp
imul
sbbb
mov
int
cmp
adc
sbb
stos
xor
mov
mov
into
jns
cmp
adc
and
sub
lcall
movsb
imul
pop
push
aam
mov
in
and
pop
lret
sub
movzbl
xchg
mov
push
mov
lock
test
fiaddl
pop
or
mov
jns
pop
cmpsb
pop
bound
cltd
call
cs
inc
lret
ret
sbb
lods
cltd
dec
in
lret
loop
repz
xor
mov
nop
mov
fadds
or
jnp
jbe
sub
repnz
xchg
out
call
stos
leave
cmp
insl
fxch
jmp
test
scas
mov
test
sub
outsl
and
add
jp
pusha
test
in
mov
das
aam
pop
imul
clc
and
and
out
mov
inc
add
inc
rcr
pop
ja
fimull
insl
test
push
inc
imul
sbb
adc
xchg
scas
cmpb
push
sarl
push
mov
cwtl
push
xchg
and
lret
leave
cmp
xchg
cmpsl
pop
adc
sbb
fcoms
mov
pop
mov
push
xchg
inc
cpuid
lods
xlat
jp
imul
mov
scas
pop
and
mov
call
lahf
or
pop
loop
sbb
dec
pop
pushf
pop
inc
insb
daa
cmp
fsubs
push
inc
adc
xchg
mov
fcomi
jle
push
xorb
jb
cs
pop
es
push
jbe
adc
jno
pslld
inc
mov
sbb
jg
pop
repz
or
je
xchg
test
ja
and
xor
jnp
mov
popa
inc
or
mov
mov
cmpsl
cmp
mov
xchg
stos
pop
pushf
jno
xor
das
por
mov
xor
out
sub
int3
cmc
pop
call
push
mov
adc
js
ljmp
cmp
loopne
mov
outsl
jmp
sbb
add
mov
subb
stos
gs
adc
bound
fsin
cmp
imul
jo
or
inc
imull
data16
xor
outsb
mov
and
adc
sbb
fxch
cs
sahf
iret
cmp
shlb
outsb
pop
call
repz
add
pop
cvtps2pi
mov
jo
or
mov
fimuls
iret
mov
inc
lcall
fmull
leave
aas
insl
and
icebp
sub
leave
add
ficoml
rorl
sub
pusha
and
or
pushl
rcl
inc
adc
cmp
clc
andl
cmp
popf
and
cmp
xlat
jp
iret
mov
mov
fwait
stos
xchg
push
cltd
pop
cmp
mov
cmp
sbb
jecxz
and
cmp
popa
stos
out
mov
mov
push
mov
and
xchg
inc
push
dec
orb
dec
popf
jbe
ret
negb
mov
es
ja
inc
sub
jb
or
inc
test
sbb
mov
aas
repnz
sbb
adc
cmp
xchg
out
mov
stos
loop
stos
lret
insl
cmc
sbb
mov
inc
push
mov
pop
push
addb
negb
ret
adc
jno
mov
adc
adc
jle
cli
or
data16
push
sahf
dec
lds
je
fwait
adc
into
pop
xor
add
imul
dec
cmc
pop
int
lods
push
cld
fisttpll
dec
inc
push
xchg
pop
fwait
and
adcl
jbe
mov
mov
dec
cwtl
cmpsb
xor
push
cs
shll
imul
out
popf
movsb
stos
inc
nop
mul
cmpsb
cld
dec
daa
and
scas
mov
jge
lret
aam
sti
and
cmc
jno
call
adc
cmp
loopne
cmc
sbb
in
stos
cmpl
or
aad
sub
lcall
xchg
mov
push
inc
cs
inc
insb
xchg
ret
bound
pop
insl
add
inc
aaa
pop
add
dec
push
sub
cltd
in
pop
or
xchg
jecxz
das
mov
pop
subb
es
ret
ret
fnstsw
fcoms
jg
into
mov
fcomps
aam
sbb
mov
inc
mov
mov
xor
outsb
inc
repz
cmpsl
int3
inc
mov
into
adcb
inc
fmuls
sub
cmp
mov
inc
add
popf
scas
inc
or
pop
pop
mov
add
int3
mov
repnz
das
leave
test
daa
insl
jae
dec
sub
or
lods
xlat
add
out
enter
fwait
js
dec
or
and
in
jmp
neg
in
or
sub
lret
jp
cld
scas
stos
inc
dec
nop
inc
push
loopne
adc
js
mov
mov
test
repnz
stos
sub
out
movsl
bound
fdivl
mov
in
test
push
test
sub
cmp
mov
leave
adc
inc
inc
mov
sub
mov
int
repnz
cmpsb
xor
stos
add
jecxz
enter
test
gs
lock
push
jnp
roll
pop
pop
jb
int
popa
mov
add
sub
ss
jg
pop
scas
fwait
sbb
adc
cmpsb
xor
and
xchg
mov
jl
mov
and
lds
push
jns
jb
mov
jge
cmp
adc
xor
test
test
das
lds
dec
mov
sub
jle
mov
inc
ljmp
push
out
cmp
ret
lcall
int3
pusha
test
int3
loop
xchg
and
xor
push
fs
ds
and
in
or
push
pop
sub
out
out
gs
lods
leave
mov
jae
into
in
and
add
arpl
insb
lret
jbe
lahf
jl
pop
loop
push
imul
push
cld
ljmp
sbb
cltd
mov
mov
lahf
mov
ror
mov
xor
pusha
rcll
sbb
lret
imul
xlat
mov
jae
shll
cmpsl
adcb
std
pop
mov
repz
hlt
scas
mov
push
or
js
in
imul
insb
test
ljmp
lcall
ss
mov
pop
cltd
pop
iret
jp
jo
cmpsl
int
adc
mov
clc
and
shl
adc
mov
mov
pop
dec
insl
dec
jp
mov
cmpsb
test
fstl
test
or
ret
jbe
xor
mov
les
sbb
imul
or
pop
rcrb
mov
cltd
jae
mov
enter
cmp
mov
outsl
pop
lods
cli
pop
sti
push
pop
filds
add
jbe
mov
cwtl
iret
sub
loop
fstpl
push
js
jge
xchg
arpl
imul
adc
jmp
pushf
jmp
scas
mov
push
cmp
inc
idivl
movsl
adcb
negl
daa
stos
ljmp
out
xchg
mov
lea
sub
pusha
mov
sbb
scas
mov
loopne
and
dec
cmc
pop
adc
lret
fldenv
xchg
lods
ror
jg
test
hlt
lds
mov
dec
iret
mov
jle
xor
fucomip
xlat
mov
iret
fwait
ret
in
push
cmp
mov
push
in
ffreep
mov
sbb
aad
insl
repnz
or
mov
in
sbb
lds
cwtl
arpl
push
push
xchg
sti
adc
xchg
popa
sub
movsl
lds
pop
mov
mov
jge
divb
push
or
arpl
mov
scas
leave
push
idiv
rcll
aas
rcl
shrl
cmp
or
jmp
arpl
mov
loope
pop
imul
test
xchg
add
pop
pop
loopne
hlt
sbb
loop
and
push
fstps
pop
sub
inc
pop
jb
in
repz
pop
cli
xlat
dec
push
ret
mov
mov
mov
push
adcl
or
sbb
das
push
xchg
mov
adc
aad
dec
cmp
out
rcl
fldt
shlb
sub
sti
add
sub
and
and
aaa
hlt
loope
xchg
inc
testb
lock
in
bound
push
sub
pop
dec
xor
fidivs
test
test
std
imul
xorb
dec
mov
or
addl
stc
push
jl,pt
cmpsl
inc
andb
into
xchg
stos
in
cmpsl
push
insb
bnd
inc
fadds
and
roll
popf
sub
aad
dec
add
out
nop
cmpsl
popf
mov
data16
das
pop
daa
xchg
xlat
push
in
or
cltd
pop
push
outsl
mov
mov
dec
jle
in
insb
push
add
xor
aad
sbb
js
push
mov
lds
mov
movups
test
push
hlt
jl
sbb
pop
pop
aas
xchg
dec
inc
popf
lcall
xchg
xor
pop
es
jecxz
mov
fidivs
pop
les
mov
rcrl
xchg
cmp
xor
push
jmp
xor
cmp
cmpsb
and
jle
adc
int3
adc
rcrl
pushf
adcl
stc
xchg
mov
jl
pop
jmp
mov
scas
sbb
ret
inc
movsb
jl
cmp
and
and
shll
pop
out
push
sbb
mov
mov
push
mov
in
jo
mov
dec
cld
push
dec
inc
scas
inc
push
jb
daa
lret
xchg
xchg
jg
int
fdivrl
pop
and
mov
in
dec
mov
in
jg
xchg
and
and
rolb
and
add
jl
lahf
jo
and
dec
jmp
scas
lea
push
sbb
push
xor
pop
pop
push
repz
adc
push
in
das
in
xchg
cmp
cmpsl
addr16
sub
mov
subl
fisubrs
fisubrl
mov
jnp
fucomp
xlat
adc
int
push
mov
ja
insl
call
lret
and
inc
pause
add
movsb
sub
lahf
scas
jne
jecxz
movsb
inc
sbb
andl
or
inc
cmpsl
rol
dec
and
lds
jnp
dec
lea
xor
pop
leave
and
lods
lds
fsubl
mov
in
and
push
in
sbb
mov
loope
orb
cmp
jb
fistps
sahf
cmp
cmp
adc
dec
sbb
movsl
popf
outsb
ljmp
xchg
rcl
ss
fdivs
icebp
and
jne
xor
shlb
cmpsl
sub
mov
jg
and
imul
outsb
xor
ss
push
aas
xor
mov
aas
sbb
std
loope
pop
mov
repnz
ss
stc
mov
shlb
push
std
stos
dec
stos
aad
or
cmpsl
or
rorb
stos
mull
fs
mov
mov
rcrl
adc
mov
cmp
ds
push
shlb
cmp
xchg
xor
or
movsb
xchg
cltd
adc
incb
inc
sbb
xchg
out
dec
sbb
mov
jnp
push
or
fstl
call
iret
jge
mov
push
icebp
data16
in
ljmp
ud1
cwtl
loopne
lcall
scas
or
aam
sub
sub
and
inc
sub
jb
mov
roll
int3
or
mov
add
scas
and
jecxz
push
mov
fbstp
cltd
int
cmp
fmuls
popf
shll
cmp
rolb
mov
xor
je
mov
movb
aaa
js
dec
inc
lcall
add
pop
popf
into
jge
in
out
cmc
adc
into
push
in
pop
cmp
out
xchg
repnz
imul
es
or
sub
xchg
adc
mov
push
outsb
mov
jge
out
cmp
imull
ja
ds
insb
lock
repnz
sbb
aaa
or
test
testl
add
loope
xor
mov
and
ud2
mov
aam
mov
pop
stc
leave
sbb
ljmp
test
mov
fs
xchg
mov
jg
sbb
icebp
mov
bound
insb
sub
lret
fsub
add
hlt
cmpsb
dec
insl
adc
xor
sub
sbb
mov
lcall
aam
push
adcb
sbb
sbb
and
mov
jecxz
scas
xchg
mov
hlt
iret
or
fcomps
lods
lret
ret
imul
filds
adc
or
bnd
jl
pop
inc
inc
nop
mov
add
test
or
scas
xor
sbb
pop
pop
pop
adc
push
pop
jnp
mov
fdivl
xor
dec
pop
dec
adcb
out
cwtl
inc
or
mov
jo
cmc
jnp
imul
push
push
jae
aas
rcll
pop
inc
ret
jne
jmp
clc
dec
enter
adc
inc
adc
sbb
adc
xor
push
insl
sbb
cwtl
jb
dec
fcoml
push
pop
int
ret
out
cmpsb
add
rcr
movsb
fstpt
aas
mov
sbb
pop
mov
pop
sbb
dec
mov
stc
mov
xchg
rcl
xor
jno
add
pop
push
stc
ljmp
mov
cmp
mul
and
pop
cmc
andl
jb
adc
lahf
inc
jbe
mov
int3
mov
or
mov
lahf
and
jb
mov
mov
pop
les
sbb
sub
mov
arpl
fucomi
aaa
call
mov
loop
cmp
cmp
xchg
js
movsl
cli
icebp
add
insb
sub
dec
pop
add
icebp
sbb
cmpsb
dec
jb
xor
fcom
xor
jae
lock
and
out
decb
loope
rorb
cmpsl
dec
jnp
or
frstor
icebp
dec
sub
and
dec
mov
sub
pop
into
jecxz
mull
mulb
sbb
xchg
dec
popa
icebp
or
push
aam
cmpsb
add
sub
mov
test
ror
cmp
xor
cmp
sbb
lcall
cmp
and
popf
popa
jb
dec
loop
adc
call
or
pop
lea
pop
ja
inc
fisubl
and
shll
xor
sbb
push
adcb
sbb
test
pusha
rcrb
pop
mov
iret
clc
out
cwtl
jae
fistpl
cmpsl
lahf
and
xchg
add
int
push
sub
xor
xchg
dec
ret
xchg
es
fcoml
insl
xadd
xchg
push
push
pop
andnps
inc
cld
mov
hlt
push
dec
xor
repz
in
jno
inc
or
and
mov
push
lret
add
mov
pop
enter
mov
pop
sbb
adc
scas
pop
popf
sub
pop
mov
and
mov
jge
push
aaa
and
cltd
stc
sub
add
ret
inc
and
mov
or
pop
or
dec
mov
jmp
sti
jno
int
outsb
dec
sub
jp
push
fisttps
adc
sbb
pop
push
pop
test
xor
movsb
dec
jg
rcll
mov
add
in
imul
lods
popa
in
out
int
scas
sbb
dec
lds
inc
xchg
popa
jns
sub
or
mov
or
fsub
hlt
jbe
dec
sub
xchg
jecxz
or
adc
pushf
lahf
add
rcl
sbb
mov
adcl
addb
inc
adc
pusha
daa
nop
sbb
ret
adcl
out
jp
or
daa
mov
fildll
idivb
pop
or
adc
dec
mov
pusha
sti
movsl
int3
cld
cmpl
push
pop
into
mov
xor
add
and
push
aad
inc
loope
rclb
mov
leave
aaa
jnp
adc
xchg
loopne
mov
sub
mov
mov
inc
add
sbbb
mov
inc
ret
lock
adc
arpl
insl
icebp
sbb
test
cmp
shrl
sub
mov
out
cli
ds
pop
jl
movsl
jae
jns
jns
add
mov
pop
fs
ret
test
notb
jecxz
dec
adc
out
jl
clc
stos
out
cs
sbb
icebp
fadds
add
cmp
push
push
xor
or
in
sub
pusha
cli
out
notl
sbb
jge
jmp
mov
std
lea
lahf
adc
mov
lods
jbe
call
cld
adc
xchg
and
fidivs
or
fdivrl
sub
movsl
popf
adc
shll
in
jg
stos
insb
data16
pop
stos
cmpsl
push
call
push
sti
es
std
fdivs
mov
jmp
mov
into
and
sti
pushf
test
arpl
push
out
ret
arpl
cmp
shrl
sub
cmpsb
ret
xor
int
inc
gs
jae
jae
inc
and
or
fsubrl
arpl
mov
insl
and
test
xchg
add
mov
inc
jmp
inc
mov
scas
int3
scas
fmuls
sbb
lret
mov
mov
scas
sub
or
stos
outsb
mov
or
pop
lods
rcl
xchg
out
inc
popa
and
rcl
inc
jo
cmp
mov
out
mov
xor
gs
jno
lret
xor
fs
sbb
loope
push
jl
sti
test
sbb
sahf
ss
sbb
shl
cmpsb
ss
inc
out
mov
sub
in
lods
jnp
bound
xorl
cmp
sbb
outsl
fcmovu
imul
mov
cltd
dec
adc
aaa
sahf
jmp
fldt
cmc
push
inc
lret
mov
fxch
mov
sub
aad
addr16
ja
or
insl
ret
int
icebp
cltd
mov
mov
mov
rclb
pushf
in
push
in
fwait
or
in
inc
scas
aad
adc
xor
and
cli
fyl2xp1
fcoml
stos
dec
loope
add
leave
mov
dec
das
in
int
push
jns
inc
inc
inc
mov
nop
lods
and
pop
ret
add
popa
arpl
xor
mov
aam
xchg
jmp
mov
dec
xor
cli
mov
gs
das
xlat
xchg
loop
cmp
inc
mov
imul
jo
adc
cli
fwait
std
jbe
addr16
in
jbe
loopne
in
jbe
cvtps2pi
inc
mov
lcall
and
xor
cwtl
mov
inc
jmp
xor
fnstcw
fstpl
push
mov
sub
mov
lret
fstpt
pop
les
data16
inc
xchg
stos
jo
je
es
inc
jge
or
rcr
sbb
data16
cwtl
adc
gs
pop
mov
mov
mov
pop
pop
sahf
test
fs
push
push
popf
rcll
sbb
negl
es
jne
test
jns
dec
popa
testl
testl
sub
push
outsb
rcll
xchg
jnp
out
daa
push
mov
mov
nop
lret
test
mov
inc
adc
ds
push
sub
mov
lret
scas
cmp
fcmove
mov
and
gs
mov
shll
notb
les
sbbb
xchg
cmp
jge
sub
movsb
loope
scas
sub
outsl
mov
mov
ljmp
sbb
sub
mov
adc
adc
push
arpl
pop
cmp
xor
in
ljmp
or
mov
or
push
je
rorl
movsb
xchg
lea
insl
fidivs
loope
xor
cmp
daa
push
test
sbb
nop
add
push
jb
inc
sub
test
fisttpl
adc
jbe
ljmp
adc
cmpsb
and
cltd
jo
lods
scas
aaa
loopne
mov
sbb
sub
fs
incl
repz
test
aaa
imul
cld
rcrb
xor
je
mov
mov
outsb
in
int3
into
adc
jge
aam
lret
mov
shr
into
ljmp
xor
xchg
sbb
push
jg
fsubrp
ja
ss
aad
cwtl
sti
push
jge
inc
fldl
popf
xchg
sahf
loope
jp
mov
ljmp
pushf
cmpsb
arpl
xchg
or
add
imul
mov
mov
add
add
add
add
add
add
adc
add
addr16
fucomi
or
js
mov
mov
aad
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
xchg
rclb
pusha
add
add
add
enter
add
add
test
add
push
adc
add
jp
aas
add
add
add
xor
xor
add
add
sbb
add
add
add
xchg
adc
add
add
add
add
add
jle
mov
add
add
add
add
add
add
add
add
add
add
add
pusha
jbe
mov
add
add
add
add
add
add
fists
add
mov
pushl
inc
add
rolb
add
inc
add
add
add
add
adc
add
fimull
dec
add
add
les
cmc
sbb
mov
inc
add
rolb
add
pop
or
add
or
add
add
add
add
add
pop
int3
arpl
add
mov
shl
or
jp
xor
fucom
adc
sahf
push
in
into
sbb
push
in
jmp
fadds
cmpl
and
sbb
xchg
les
jmp
gs
aas
flds
ret
lcall
lock
mov
cld
mov
mov
addb
inc
aam
mov
xchg
push
bnd
stos
inc
push
pushf
popf
ss
out
jb
xchg
jo
dec
std
adc
mov
inc
xchg
sub
push
scas
mov
pop
inc
into
shll
and
cmp
push
cwtl
xor
mov
or
pcmpeqw
jo
inc
inc
mov
adc
ljmp
xor
out
mov
out
out
nop
sub
and
shll
and
jne
cmp
je
gs
lods
mov
and
add
into
in
ss
mov
jae
add
fdivl
fldenv
cwtl
or
pop
add
mov
sbbl
xchg
jbe
mov
xchg
or
loope
subl
adc
imul
push
inc
mov
js
aaa
out
and
or
mov
stos
xchg
movsl
jb
jmp
pop
cmp
ljmp
ja
cld
adc
and
inc
mov
mov
jnp
inc
and
xchg
lret
dec
icebp
inc
push
repnz
imul
mov
cmpb
xchg
xchg
or
loopnew
pop
dec
ret
or
in
push
outsl
xor
les
sbb
mov
popf
add
xchg
out
jns
add
std
scas
mov
mov
mov
fmul
lock
inc
js
leave
jmp
dec
fists
pop
fwait
xor
lods
jl
mov
repz
rol
pop
add
xchg
test
adcb
mov
mov
das
loop
jb
mov
push
push
cs
test
pop
lods
pop
test
imul
ds
stos
movl
inc
sbb
subb
push
sub
adc
je
xor
mov
jbe
adc
sub
xchg
int3
addr16
call
in
shll
lcall
and
xchg
add
dec
fnstcw
inc
inc
inc
inc
mov
lcall
movsl
push
nop
jl
rep
xor
or
pop
inc
sbb
push
repz
sarb
sub
sbb
xchg
push
adc
aam
es
push
sahf
mov
aad
sahf
das
mov
jno
mov
lret
sahf
call
adc
inc
cmp
cmpsl
sbb
pusha
push
pop
xchg
push
push
cwtl
xor
adcb
or
dec
xorl
mov
bound
out
adc
popa
fstpt
or
pop
xor
xchg
mov
das
outsb
shll
mov
cwtl
mov
rclb
cmpsb
lods
sti
pop
xlat
jno
mov
fstpl
lds
fs
inc
adc
xlat
bound
pushf
icebp
out
cltd
lds
loope
test
jbe
xchg
movsb
xchg
dec
xchg
jg
int3
cmp
cmp
xor
out
sbb
loop
mov
xor
add
fisttpl
js
push
pop
fwait
rcrl
daa
movsl
jle
xchg
push
mov
cmp
jns
jo
scas
ljmp
cmpl
mov
adc
test
mov
mov
popa
leave
sbb
out
mov
in
std
mov
sbb
cmp
lret
jno
sbb
cmc
int3
add
filds
pushl
jle
insl
shll
xor
lds
inc
push
push
push
xchg
mov
loope
or
mov
dec
sub
aaa
loopne
sbb
xchg
adc
mov
and
and
pushf
mov
xadd
jg
push
inc
mov
inc
out
mov
add
adc
xchg
inc
jle
dec
insb
and
dec
aam
aaa
push
pop
mov
lock
inc
iret
pop
jle
adc
loope
icebp
adc
jle
cs
add
cmc
scas
mov
dec
push
sarb
mov
jnp
hlt
jp
mov
jl
in
jb
cmp
dec
out
add
mov
adc
inc
adc
in
cmp
jno
popf
mov
and
adc
and
mov
xchg
and
popa
aam
inc
xlat
mov
scas
mov
enter
enter
or
sub
pop
hlt
xchg
in
pop
enter
or
movaps
stc
push
push
dec
aad
scas
mov
cmp
mov
mov
cmp
cmpsb
adc
std
pushf
adc
and
jnp
cmc
pop
xchg
lods
inc
adc
je
push
mov
adc
loopne
mov
fildll
or
in
sbb
in
ret
mov
loopne
push
pop
jb
add
jmp
mov
mov
push
cmc
mov
iret
mov
test
out
pop
outsb
pop
dec
xor
inc
inc
inc
jg
sti
in
hlt
mov
jle
mov
bound
sub
pop
std
xchg
xchg
bound
adc
pop
add
dec
or
cltd
cmpsl
adc
arpl
jae
je
and
push
in
lcall
push
repnz
or
in
or
cltd
push
jo
out
or
push
inc
ss
push
jae
xorb
xchg
inc
fsubs
inc
loop
add
mov
push
cmc
jg
sbb
mov
sub
and
rclb
xchg
adc
aas
mov
push
adc
scas
adc
aam
push
push
mov
adc
fmuls
pop
or
hlt
movsb
xor
nop
cli
lahf
dec
push
lds
sub
scas
out
les
loope
jno
enter
rorb
pop
adc
es
xchg
mov
scas
pop
cmp
in
mov
mov
scas
mov
pop
js
shll
clc
pushf
xlat
adcl
cmp
test
and
xor
add
mov
jne
mov
fimull
test
fbstp
fs
jnp
data16
sti
and
jge
int
xchg
lods
mov
cli
cmp
xor
push
and
and
pop
sub
clc
dec
xchg
xor
shrl
push
cmp
in
popa
add
xchg
stc
arpl
and
and
ja
adc
add
push
in
lahf
dec
pop
mov
lahf
add
push
lods
jg
cs
push
pop
mov
mulb
aad
mov
jge
or
fidivrl
cmp
es
add
dec
jne
mov
imul
js
scas
push
pop
shll
inc
push
les
stc
inc
nop
xor
enter
xchg
call
or
scas
test
pop
mov
cmpsl
iret
cs
adc
mov
add
mov
push
cmc
xor
lock
aad
outsb
int
inc
clc
enter
mov
fstps
xchg
lock
mov
push
in
xor
lea
sahf
jmp
fucomi
outsl
cmp
int3
fmul
nop
pop
or
jb
inc
clc
pushf
pop
adc
push
mov
inc
stos
xchg
mov
cmp
sarb
push
fwait
in
out
daa
xor
or
daa
pop
add
dec
or
movsl
jg
sub
sti
sahf
jbe
fistps
out
inc
je
mov
mov
and
lods
ret
jb
jp
sub
int
sub
xor
push
mov
dec
aas
std
pushf
loope
into
jmp
add
call
loop
les
test
jmp
sub
adc
lret
shlb
outsl
lods
mov
lret
sub
fldt
and
imul
loope
test
jecxz
jns
sub
mov
int3
iret
inc
mov
fcompl
xor
mov
mov
mov
xchg
jle
lret
pop
fildll
dec
mov
bound
xchg
fldl
out
mov
dec
dec
ret
sahf
fdivrs
lea
push
push
mov
pop
test
leave
hlt
ja
shll
xor
cmp
add
and
adc
outsb
fwait
sub
mov
cwtl
mov
jbe
dec
mov
fsub
aaa
inc
popa
lcall
jne
xchg
xlat
scas
pop
inc
outsl
jns
daa
and
mov
stos
enter
lods
mov
fildl
rep
adc
lret
ds
std
pusha
inc
into
hlt
add
outsl
cli
pusha
sub
test
add
pusha
das
jp
add
sarb
mov
orb
int3
fldenv
push
mov
xchg
xlat
sahf
int
sbb
testl
xor
xchg
orb
mov
popf
add
stc
and
mov
push
mov
mov
sbbl
pop
stos
enter
jg
push
scas
pop
inc
jg
sub
sbb
dec
mov
xchg
shll
stos
pop
or
clc
test
or
push
pop
iret
add
mov
or
dec
ja
test
xchg
clc
cmp
in
sarb
fxch
xchg
out
rcrb
cmp
push
dec
cs
lea
fldcw
popa
and
jne
insl
add
pop
fs
cmp
ret
scas
mov
mov
es
adc
dec
pop
add
sub
int
pop
sahf
inc
inc
scas
sbb
pop
xlat
icebp
lock
fstpt
adc
pusha
mov
inc
adc
leave
lcall
or
inc
adc
sub
cmp
dec
fs
cmpsl
imul
test
cwtl
add
loope
cmp
out
sti
packssdw
cmp
fistl
mov
mov
xor
lcall
push
movsl
movsl
cmp
ror
mov
subb
sub
xor
sahf
mov
ret
add
sub
and
int3
jecxz
fstps
push
mov
mov
push
fcompl
dec
sbb
jno
aas
mov
loope
lea
cli
xchg
dec
sbb
pop
aaa
shrb
test
jnp
ror
mov
les
movsb
fnstsw
xchg
jge
mov
jns
sub
mov
mov
cmpsb
mov
movsb
out
je
in
push
lahf
and
and
pop
push
push
mov
out
leave
jmp
aaa
shr
mov
test
push
mov
or
insl
aad
mov
xor
pop
sbb
and
ljmp
mov
imul
xchg
xchg
test
shlb
popa
and
push
jnp
add
pop
inc
les
mov
fsubrs
stos
ss
pop
shll
aaa
rclb
scas
ret
add
es
subb
xor
ss
mov
nopl
jb
adc
out
nop
fsubrs
sbb
ds
adc
jnp
mov
push
fcompl
add
outsb
adc
movsl
xchg
lock
or
push
jg
aaa
mov
subl
sub
fcoml
fimuls
je
rclb
cmp
xchg
jg
outsl
sbbl
pusha
xor
int3
mull
dec
enter
pop
or
xchg
nopl
and
sbb
mov
xchg
arpl
xchg
icebp
imul
fidivrs
cmpsl
xlat
mov
pop
mov
rep
push
outsb
xchg
cmp
adc
mov
pusha
fimull
and
nop
orl
push
les
mov
jnp
jbe
femms
pop
or
hlt
dec
sub
push
pop
loopne
jecxz
arpl
pop
add
fstps
pop
daa
iret
mov
frstor
mov
rcl
inc
and
decl
ljmp
mov
inc
inc
push
pop
jo
out
jo
fidivrl
leave
mull
lods
lcall
lds
cwtl
in
xchg
add
mov
add
filds
in
je
mov
sbb
out
pop
ja
inc
ja
loopne
test
cltd
xchg
movsb
popa
and
aas
cmp
movsl
ret
adc
push
dec
ljmp
mov
inc
shlb
inc
xor
add
loopne
jl
in
cltd
out
out
je
pusha
or
filds
lock
push
pop
loope
cltd
lahf
movsb
bound
push
daa
adc
mov
and
xor
mov
sub
aaa
adc
jae
pushf
mov
cmp
arpl
fstpl
dec
push
sar
jmp
gs
mov
repz
add
aas
loopne
hlt
ss
in
pop
insb
inc
test
mov
inc
dec
pop
and
roll
sarb
testb
jae
inc
movsb
test
cmp
leave
sbb
shl
mov
and
aaa
add
adc
insl
jno
jl
add
inc
jo
jo
pop
stos
fimuls
push
dec
cmp
jnp
xor
xor
push
clc
xor
insl
nop
shll
shl
cs
dec
jb
stos
push
and
shr
inc
push
dec
push
adc
int3
sub
int
pop
mov
dec
ret
movsb
xchg
shrl
sub
jns
xchg
in
outsl
addr16
push
mov
ret
cld
pop
out
xchg
adc
push
enter
test
push
js
dec
and
ss
adc
sbb
inc
lahf
scas
fisubs
mov
es
shl
cmpsb
push
mov
insb
insl
pop
and
addl
adc
mov
jb
lret
pusha
lock
dec
inc
fdivrl
insl
push
scas
pop
and
outsl
insl
and
mov
in
or
jo
insb
mov
rcrb
push
and
fcom
add
stos
jle
jo
mov
mov
jne
mov
das
je
and
pop
jl
xchg
dec
das
mov
outsb
xchg
sbb
pop
add
jecxz
mov
jecxz
jmp
xor
loope
mov
sub
push
les
bound
cmp
dec
imul
xor
xchg
sub
push
pop
mov
repz
popf
arpl
jns
fsubrs
scas
cmp
mov
inc
push
pop
xchg
mov
xchg
push
int
fbld
fnsave
mov
mov
shll
add
sbb
rclb
add
and
lock
adc
hlt
or
xchg
or
test
sti
pop
sub
popf
add
pop
sub
sbb
orl
std
in
repnz
adc
jge
push
xlat
cmp
push
ljmp
shlb
ss
rclb
jg
lds
xor
scas
ss
int
adc
cwtl
rclb
jmp
mov
std
lods
sti
sbb
sub
adc
and
dec
mov
cmp
xor
fnstsw
sub
mov
test
int
and
aaa
xchg
lcall
jge
or
test
stos
ljmp
testl
cmp
mov
lret
adc
sbb
push
out
movsb
mov
inc
rorl
ds
cld
pushfw
sub
dec
pusha
mov
xchg
mov
push
inc
jns
ret
push
mov
movsl
fldcw
into
mov
and
sub
lcallw
lret
ja
inc
loop
lock
add
xchg
addb
mov
ds
mov
push
fadd
cmp
sub
sbb
jl
jge
mov
cmp
insb
and
inc
xchg
xorl
mov
jl
jnp
daa
mov
xor
xchg
in
ret
mov
xchg
enter
adc
rcll
xchg
and
rcrb
fdivrl
mov
bsr
pop
iret
xor
cmp
dec
aam
daa
mov
bound
je
test
dec
stos
xor
les
inc
nop
popa
xchg
inc
imul
pushf
or
test
iret
imull
mov
out
jle
ret
jno
rcl
xchg
push
adc
adc
outsb
jmp
scas
or
movl
stc
pop
in
arpl
adc
fs
lret
rol
pop
jecxz
inc
andl
cmp
push
dec
add
ret
add
pop
shrb
jp
push
pop
push
or
repnz
lcall
mov
das
lcall
sbb
repnz
mov
xor
and
pop
pusha
repz
test
hlt
jo
inc
mov
mov
xchg
mov
daa
fdivs
and
in
fsubp
push
cs
in
xchg
pop
hlt
dec
push
ja
loop
xchg
es
out
jb
xchg
scas
pop
lods
add
mov
mov
mov
push
iret
jns
jecxz
sbb
inc
adc
sub
fmuls
ljmp
sub
cltd
loop
cmc
dec
repz
aaa
lcall
adc
repnz
cmc
push
out
xor
sbb
push
mov
dec
arpl
push
mov
outsb
daa
lds
jno
rorb
push
pushf
pop
jno
pop
xor
adc
jge
xchg
and
xchg
subl
mov
in
sahf
mov
negl
and
push
pop
jl
into
sti
xchg
test
sbb
imul
xor
fdivrs
aaa
sbb
push
push
in
mov
leave
repnz
out
popf
aad
js
push
ror
push
xchg
xchg
push
leave
mov
jg
or
add
jecxz
mov
and
les
adc
or
or
inc
loopne
lock
in
scas
inc
movsl
repnz
or
daa
mov
pop
or
add
cmp
cli
aam
push
add
js
mov
mov
and
inc
cmp
mov
jns
fs
xchg
in
xor
dec
cwtl
dec
mov
rclb
cmp
sub
imul
push
gs
mov
loope
test
sbb
into
test
into
xchg
push
pop
test
fbld
icebp
ret
push
mov
xor
push
add
lds
adc
push
sub
jno
aaa
jp
jg
aaa
adc
decb
mov
pop
insb
sub
aam
jbe
stos
cmp
cld
mov
test
fcom
add
push
out
cmp
test
loopne
js
adc
cmp
or
cs
pop
jp
xor
movsl
js
or
xor
cld
push
jle
jns
mov
or
leave
ret
sarb
lahf
sub
cli
push
fnstcw
pop
dec
xlat
push
xor
sbb
sub
mov
popw
lds
iret
sbb
lea
and
push
push
insb
fyl2x
add
aas
imull
repz
test
mov
sbbb
popa
push
test
scas
and
test
inc
fnstsw
imul
in
cwtl
and
gs
jle
jp
cmp
stos
rclb
jecxz
scas
cmpsb
gs
push
call
inc
loope
fstpt
addr16
sbb
mov
jo
lahf
jne
jecxz
jmp
jl
scas
scas
mov
push
pop
std
jle
daa
enter
pop
aas
lret
dec
scas
mov
mov
xor
imull
sbb
inc
inc
or
daa
inc
jge
mov
lret
ret
inc
fneni(8087
or
hlt
es
jg
jae
dec
pop
loopew
cmp
jbe
je,pt
mov
xchg
inc
sub
daa
mov
jmp
add
test
fadd
push
cwtl
dec
jae
fsubp
out
xchg
lds
push
adcl
sbb
fistl
mov
mov
cmpsl
sti
imul
or
ret
out
sub
data16
pop
lock
inc
stos
adc
int3
data16
cmp
pop
ret
jmp
inc
test
mov
in
lods
adc
push
or
adc
xchg
popf
xchg
xchg
fsub
cld
clc
imul
lds
mov
xchg
fcmovu
pop
sub
std
mov
incl
lock
arpl
sbb
jo
stos
nop
scas
popf
jae
jg
xor
sbb
push
inc
out
sbb
lret
andl
ret
pusha
add
pushf
shll
push
outsb
test
insb
cwtl
mov
xor
jae
ja
sub
jbe
popa
push
andl
dec
dec
push
dec
inc
dec
dec
mov
popf
sarl
inc
inc
xor
addr16
inc
push
addr16
jg
aad
mov
lods
movsl
ret
subb
cmp
cmpsb
adc
in
jecxz
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
in
mov
daa
cwtl
decb
jecxz
pop
inc
sub
adc
insb
ret
add
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
inc
push
addr16
adc
mull
.byte
