adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
and
push
push
push
sub
pop
popa
data16
in
hlt
mov
movsb
jecxz
sbb
je
inc
push
push
push
and
xor
add
adc
in
hlt
mov
mov
xchg
movsb
enter
xchg
xorb
push
pusha
and
xor
add
adc
in
hlt
xchg
mov
cli
in
mov
nop
lret
mov
bound
push
es
imul
es
xchg
movsb
cli
or
aam
out
and
fldl2t
push
jae
std
ud1
test
dec
jns
pop
repz
fwait
pushf
dec
ljmp
pop
fsub
jp
and
or
cmp
cmp
adc
es
xor
aad
and
and
cli
xchg
and
push
dec
jns
xchg
pop
repz
cmp
lret
cs
insb
jmp
add
test
loope
pop
sub
pop
jae
fsubrl
cmc
test
ss
push
mov
sahf
out
push
xchg
cld
cwtl
mov
mov
inc
jb
push
and
xor
add
adc
in
hlt
push
les
sbb
sbb
jp
ret
jge
popa
xor
movsl
in
cmpsl
and
cltd
shlb
jo
jne
jp
xor
and
das
adc
add
xchg
cmpsb
shrl
movsl
or
push
jp
sub
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
ss
push
push
push
and
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
pusha
jnp
clc
incb
cwtl
jg
out
or
jmp
xchg
sub
sahf
or
dec
and
test
jge
aam
and
cmc
mov
xchg
mov
xchg
and
or
mov
lock
stos
ss
jmp
call
imul
loop
adc
movsb
imul
add
fchs
loop
mov
ret
cmp
aas
cmp
filds
push
ficoml
xchg
out
flds
xchg
xchg
push
ds
push
push
lahf
cltd
icebp
fucomip
jmp
fistl
insl
clc
test
inc
jecxz
in
outsl
pop
inc
fisubs
xchg
mov
push
mov
pop
jmp
out
push
inc
cmp
cwtl
cwtl
iret
or
xor
test
dec
push
xchg
jb
fs
xchg
jno
xchg
sbb
pop
jno
subb
fcoml
rclb
shll
cmp
xchg
shl
mov
sbb
inc
addl
fwait
mov
test
jae
jp
jb
inc
sub
sub
or
stos
and
ficompl
dec
js
cmp
cmp
aam
mov
mov
in
stos
cmpsb
in
cmp
or
xor
xchg
jae
out
and
dec
fidivs
das
mov
ss
mov
sbb
hlt
les
pop
xchg
add
xchg
repnz
dec
ret
or
xor
pop
test
mov
ret
jle
fisttps
mov
jbe
xor
das
shrl
mov
and
fcmovnbe
inc
add
push
aaa
inc
lods
aam
dec
in
shll
lods
cmpsl
push
xchg
push
mov
das
mov
push
nop
mov
rcrb
ja
in
out
mov
int
subb
add
les
leave
fidivl
int
arpl
ja
and
sbb
in
mov
mov
movsl
jp
je
mov
rcrl
mov
xchg
pop
push
xor
int3
cmovl
xor
inc
adc
inc
jle
add
fwait
xor
fwait
jle
jo
icebp
sbb
push
dec
or
dec
jg
les
pop
es
jno
lahf
mov
mov
ret
sbb
test
and
test
leave
mov
lret
sahf
add
in
cmpsl
std
out
dec
push
and
lahf
cmp
push
mov
mov
sarl
mov
lods
jp
mov
int3
inc
cs
nop
mov
icebp
pop
pop
push
sub
jp
mov
lret
xchg
push
mov
cs
cmp
sub
cmpsb
loope
ss
popa
movsl
sarb
mov
pop
aaa
in
pmovmskb
scas
dec
xor
mov
jne
adc
xchg
inc
jb
push
dec
in
add
or
xor
popa
add
ret
popa
lea
xlat
jnp
andb
test
sbb
xor
xor
pop
push
push
or
idiv
je
les
add
mov
mov
mov
mov
or
clc
mov
mov
je
and
lea
push
jns
std
decl
or
dec
adc
cmp
rolb
xor
mov
fdivl
data16
dec
push
jns
push
or
test
out
repz
fdivl
cmpsb
fisttpll
idivb
lea
push
mov
mov
les
sbb
pop
faddl
and
mov
fdivrs
push
fs
sub
adc
jp
inc
xchg
inc
mov
movsl
jne
mov
lods
add
dec
rcl
and
jae
mov
rol
fisubs
ljmp
pop
mov
ficoml
pop
inc
adc
dec
pop
das
movsb
xchg
cmpsb
into
dec
lock
jns
push
push
adc
cmp
test
lss
jne
jo
xchg
jnp
adc
mov
xor
lock
shll
mov
adc
jb
mov
and
lds
mov
ret
push
ja
and
sbb
mov
adc
rcr
subb
scas
lret
pmaxsw
fstp
imul
mov
mov
adc
sub
stos
or
daa
xchg
xchg
loopne
cmpsl
jno
adcl
lahf
push
and
insl
mov
jecxz
mov
mov
test
pop
jmp
pop
sarl
and
pop
dec
xchg
jo
add
xorl
sbbl
sti
insb
rol
sti
pop
std
mov
xor
xchg
popf
sub
jae
cmpsl
es
jns
in
lcall
outsb
sub
jmp
and
je
rorl
and
fists
fucomi
inc
xor
mov
ja
fcoms
sub
aaa
dec
js
loope
jle
out
daa
or
mov
rcr
xchg
xor
pop
sub
push
aas
or
in
shlb
adc
xor
push
dec
into
mov
jle
repz
imull
sti
lea
int3
loope
mov
sub
out
mov
or
sahf
or
fisttps
aam
aaa
mov
fisubs
stos
shrb
lods
adc
pop
addb
daa
repnz
or
xchg
loopne
lea
mov
std
addr16
insb
xor
push
cwtl
mov
iret
dec
mov
popl
roll
add
pop
push
sbb
mov
in
movsl
mov
setb
cmp
or
fidivs
insb
stos
mov
push
sbb
fsubrs
repz
push
aam
mov
lea
add
je
inc
push
pop
pop
cmp
data16
mov
lods
mov
ret
jecxz
jne
inc
inc
cmpsl
mov
mov
fmuls
or
repz
fcmove
mov
jmp
mov
call
xchg
mov
dec
cmpsb
jbe
add
sahf
add
adc
or
ds
stc
and
pushf
add
sti
jp
mov
mov
xor
aaa
cmp
repz
addl
adc
mov
xchg
addr16
iret
stc
adc
sub
sbb
inc
or
and
cmp
shr
out
fsub
jns
jae
inc
cmp
or
inc
movsl
push
jnp
dec
push
sub
dec
test
pop
sbb
xchg
adc
ja
pop
aad
fldenv
fmull
push
dec
push
add
fldt
loopne
xchg
jae
aad
repz
mov
and
ret
xchg
sbb
iret
clc
adc
pop
fcoms
add
push
xchg
ret
cmpsb
adc
std
sub
imul
fdivp
pop
daa
es
sub
or
push
stos
xor
mov
mov
notl
scas
inc
in
jmp
push
mov
or
fbstp
test
xor
jg
jnp
in
cmpsb
pop
icebp
sar
sbb
lds
sbb
jnp
scas
cmpsb
lcall
lock
sbb
xor
mov
inc
jmp
adc
jg
dec
mov
push
push
jecxz
out
inc
pusha
scas
or
ss
push
add
or
dec
fists
imul
cli
rcrl
pop
lahf
arpl
mov
fsubrl
rcl
jmp
push
mov
lahf
mov
icebp
push
and
jp
dec
leave
js
insl
push
out
pop
cmp
out
push
daa
inc
mov
call
lret
xor
nop
mov
inc
add
hlt
out
push
mov
pop
mov
push
xor
dec
mov
mov
cmp
fsubrs
xor
add
xor
js
mov
fwait
into
adc
mov
out
cmp
sub
pushf
push
mov
adc
ror
std
ja
and
and
sbb
dec
loop
fiadds
iret
sarl
test
movsb
inc
rolb
jge
fisubl
jle
dec
mov
shr
fwait
push
andl
lcall
movsb
call
int3
nop
cltd
mov
aas
inc
imul
mov
test
mov
cmp
sub
fnstsw
mov
jge
imul
imul
dec
lahf
pop
mov
mov
mov
mov
dec
sti
mov
mov
lahf
loope
lea
fcoms
jmp
and
call
subb
sbb
or
jge
iret
jge
inc
cmp
sbb
xor
or
mov
sbb
nop
cmp
mov
adc
fldl
fistpll
test
cwtl
cwtl
shl
fdivrl
add
xchg
mov
daa
test
cld
push
push
cmc
outsb
add
mov
cmpsl
cmp
jo
dec
jge
add
leave
add
inc
dec
cwtl
xchg
insb
sahf
xor
xor
xchg
rorb
gs
mov
mov
xor
add
jl
mov
mov
popa
add
jno
mov
push
jmp
adc
adc
cmc
push
roll
imul
cld
pop
adc
inc
add
push
mov
jnp
pop
push
jo
pusha
cmp
jecxz
out
mov
in
ds
les
lahf
push
into
fcompl
je
jae
ss
push
dec
lock
ss
fwait
loopne
adc
iret
sbb
push
xchg
int3
xor
cli
xchg
aam
cmp
and
enter
cld
aaa
data16
push
pop
loope
sbb
aad
sbb
jl
or
or
dec
insl
sbb
mov
inc
xor
xlat
dec
xchg
in
cmc
pushf
inc
mov
and
add
fldcw
xor
lea
xor
and
push
mov
mov
mov
mov
movsb
push
jbe
mov
cmpl
pusha
lods
push
pop
push
mov
pop
minps
rol
fisubrl
lock
inc
daa
mov
or
mov
lcall
mov
jno
bound
dec
fs
adc
ja
loopne
sbb
je
into
je
int3
add
lcall
cmp
sbb
dec
push
jns
mov
aad
scas
loopne
bound
cmc
sub
lret
push
aam
arpl
insb
adc
popa
jle
loop
lea
mov
lock
sbb
test
sbb
push
jp
cmp
sahf
sarl
dec
pop
ficompl
lods
xlat
sbb
inc
dec
pusha
jnp
or
clc
cmp
movsb
add
call
mov
incb
addb
pop
xchg
insb
mov
fst
insb
test
in
ljmp
or
mov
iret
pop
out
push
add
nop
adcb
sar
fincstp
aam
lea
repnz
out
incb
inc
js
sub
push
push
xchg
cwtl
mov
xor
push
into
and
movsl
or
movsb
push
jnp
xchg
sahf
pop
stc
adc
test
cmp
inc
xchg
sub
lock
pop
out
cmovae
lds
or
xor
insl
pop
sbb
shl
aaa
aaa
push
sub
int
andl
lods
pop
mov
insb
mov
mov
add
icebp
pop
pop
in
xlat
repz
aam
inc
pop
cltd
add
hlt
sub
sub
hlt
aas
movsl
mov
sbb
loop
shll
ss
mov
pop
in
cmc
mov
shrl
arpl
nop
lock
data16
outsb
mov
stc
rcrl
addr16
adcb
out
les
inc
xchg
mov
jecxz
repz
mov
loopne
jb
jno
inc
rcrl
daa
jnp
lea
pop
mov
pop
cmp
fdivrs
lods
loop
repz
add
int3
xchg
inc
out
xchg
mov
in
lret
nop
in
mov
je
push
mov
movsb
out
cmp
jp
xchg
aas
nop
sub
repz
dec
inc
mov
cmp
ret
mov
inc
int3
sbb
push
mov
push
das
inc
pop
jb
push
int
jp
int3
shr
inc
cwtl
cmp
pop
iret
popf
sub
mov
mov
cld
adc
cmp
adc
mov
test
pop
int
ss
mov
or
mov
test
inc
jns
pop
fdivrp
or
aaa
lcall
shll
pushf
in
lods
jl
pop
cli
mov
dec
nop
or
jg
and
pop
mov
ds
test
inc
imul
mov
or
mov
jbe
sbb
mov
rcr
stos
or
mov
inc
out
push
lods
iret
or
bound
mov
inc
mov
and
daa
push
orb
inc
jecxz
pushf
push
test
leave
xchg
cmp
outsl
stos
stos
pushf
push
nop
out
mov
jnp
popa
sahf
es
jo
or
mov
xchg
sub
adc
and
or
add
xor
jmp
je
jmp
add
push
adc
movsl
jmp
fs
jecxz,pn
mov
lret
adc
push
xlat
out
dec
jle
outsl
jp
pusha
mov
xorl
or
add
ss
push
pop
sbb
cmp
in
lcall
jae
adc
pop
sub
addr16
mov
stos
out
push
into
cmp
testl
lahf
pop
test
rcr
aad
pop
pop
insb
imul
jno
shl
jno
adc
in
push
out
loope
xor
inc
cmp
daa
dec
sbb
push
sub
or
sti
push
mov
aaa
and
mov
ret
inc
inc
scas
ss
clc
mov
daa
xchg
fisubl
cmp
in
push
outsb
inc
popf
cmp
arpl
mov
hlt
mov
mov
movhps
decb
adc
sbb
mov
repz
and
push
stos
mov
mov
daa
pushf
ret
xchg
pop
push
jb
repnz
xor
xor
pop
xchg
jle
aaa
repnz
push
rol
sbb
adc
xor
movl
dec
pop
aaa
aaa
aas
pop
push
and
add
xchg
dec
xor
int3
std
sahf
ja
std
fbld
pop
cmpsb
cmp
cltd
cltd
cmp
ja
cld
add
arpl
add
jl
lret
jne
xchg
pop
out
lcall
out
sbb
adc
mov
pop
pop
nop
push
mov
imul
xlat
imul
and
hlt
pusha
rcrb
jbe
mov
or
xchg
jp
icebp
add
fninit
pusha
mov
gs
lea
xchg
lea
or
jge
data16
sbb
mov
pop
bound
imul
je
mov
add
movsl
inc
pop
lea
les
imul
sub
pop
push
xchg
movsb
inc
je
pop
and
jmp
dec
pop
xlat
xor
jns
or
adc
adc
mov
inc
movsl
outsl
aad
add
xlat
pop
movsl
push
aas
push
ds
hlt
lds
in
adc
jo
mov
pop
cmp
adc
nop
push
sub
cmovno
sub
or
jns
insb
pop
xchg
mov
push
inc
out
lds
sbb
scas
inc
fmull
in
sar
pavgb
jbe
adc
jae
xchg
loop
je
scas
push
sbb
mull
adc
push
mov
inc
loope
orb
outsl
stos
call
adc
pop
cld
lods
repnz
movsb
pop
insb
fwait
push
call
scas
mov
adc
in
leave
jae
mov
or
shl
sbb
sbb
in
and
xor
frstor
dec
inc
jecxz
add
stc
mov
lock
sbb
adcl
xlat
cmp
sbb
int
xor
stos
pop
pop
int
andb
cmc
adc
rolb
mov
cmp
adc
ljmp
ljmp
adc
sub
mov
sbb
sti
sub
and
mov
mov
fwait
cs
jg
mov
aam
inc
cmp
push
jg
ret
rcrl
in
mov
sahf
mov
repnz
rcrb
popf
fbld
add
sbb
cld
dec
outsb
inc
push
je
repnz
adc
sub
inc
cmpsb
insl
dec
pop
inc
jle
and
es
fcmovnu
ds
clc
jmp
std
jp
push
push
add
nop
xchg
pop
xorl
sub
or
push
popf
rol
xor
pop
jecxz
jmp
lret
dec
and
pusha
and
cmp
out
pop
or
mov
inc
mov
aas
and
dec
pusha
lahf
lahf
aad
into
filds
sbb
pop
dec
out
and
inc
fst
mov
mov
add
push
cltd
adc
sub
out
jl
cs
es
mov
inc
call
dec
add
inc
cld
imul
int
je
xchg
xchg
and
mov
fcoml
inc
sub
arpl
pop
ljmp
xchg
bound
aad
cmpb
out
cmp
in
adc
add
push
or
and
push
movl
jecxz
fmulp
insl
jmp
sub
pop
test
sbb
test
cmp
cmp
shlb
iret
push
mov
mov
lahf
mov
push
adc
sub
addr16
add
mov
sub
or
pop
adc
cmc
repnz
jle
push
les
cmpsl
inc
test
cmp
mov
pop
orl
inc
sub
xchg
or
hlt
fs
inc
cmp
in
mov
pop
je
inc
xchg
mov
test
pop
aaa
andl
mov
pop
ja
cmp
sbb
lods
lahf
sbb
stos
mov
inc
inc
and
cmpb
pop
dec
xchg
arpl
arpl
cmc
ffree
jne
fwait
nop
dec
ja
mov
push
call
xor
push
out
xor
fwait
insl
push
fwait
cld
subb
cmp
nop
ret
enter
mov
testl
inc
ret
cs
rcll
jns
adc
mov
iret
xchg
call
jge
mov
loope
xchg
sub
sbb
ret
mov
sbb
cwtl
dec
les
xor
pop
rcrl
test
push
inc
lods
sarl
shll
popa
aaa
repnz
and
xchg
aas
push
pop
and
jno
or
xchg
int3
shrb
sub
dec
pop
cmc
pushf
mov
add
push
rclb
push
rcr
sahf
inc
mov
adc
push
lret
or
add
aam
lds
nop
xchg
jmp
addr16
inc
pop
out
jnp
subb
xor
fs
in
fwait
sub
mov
in
pop
mov
cld
ja
xchg
inc
inc
sbb
jle
scas
mov
ret
imul
xchg
fwait
movsl
loope
push
test
add
sub
push
mov
mov
cltd
aaa
and
mov
sbb
lock
icebp
loopne
addr16
idivb
add
sbb
stos
xor
loop
stos
idivl
cwtl
pop
pop
mov
add
in
rorl
mov
pushf
cmc
jecxz
dec
xchg
sahf
std
pop
mov
and
aas
jmp
xchg
fcomip
scas
cmp
push
sarb
mov
mov
inc
mov
or
mov
scas
scas
arpl
dec
sarl
gs
inc
scas
fadds
in
jo
aaa
push
lods
daa
sub
loop
inc
push
dec
sub
mov
jg
test
dec
cwtl
std
pop
rcrl
cmp
or
mov
push
es
sahf
adc
aad
sbb
or
sub
aam
loop
bound
ficoms
sub
outsb
lgs
xor
or
push
sbb
adc
xchg
popl
jle
jae
pop
lods
cmp
mov
jno
por
cmp
fadds
sbb
sarb
jp
add
ja
icebp
dec
add
aaa
push
jmp
adc
adc
pop
pop
inc
push
jmp
pop
clc
test
cmc
jo
inc
or
into
in
fistpll
in
and
sbb
fucomp
fs
cmpsb
arpl
cmpsb
xchg
jl
loop
pop
mov
push
mov
fwait
and
stos
cli
inc
mov
xchg
sub
sbb
rep
or
sub
icebp
cmc
out
sahf
xlat
cmp
std
mov
aam
mov
cmp
out
push
or
push
adc
daa
inc
lcall
mov
and
loop
sbbb
fisttpll
sti
ljmp
add
mov
pmaddwd
sbb
adc
fiadds
add
rcrb
cmp
push
and
cmp
push
and
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
ss
push
push
push
and
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
cmp
adc
xor
add
adc
in
hlt
mov
xchg
lahf
movsb
loop
testb
rolb
push
and
xor
add
adc
in
hlt
sbb
xchg
loope
sahf
cmp
jnp
imul
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
cmpsb
je
xchg
mov
dec
xchg
js
notb
les
xchg
jbe
data16
movsb
inc
inc
mov
cmpsb
inc
xchg
xchg
add
xor
and
fidivs
les
nop
push
es
xchg
sbb
inc
dec
mov
cmpsb
insb
xchg
jl
or
xor
aam
iret
add
mov
cmp
xor
cmp
or
pop
pop
fisttpll
aad
push
cmp
xor
mov
in
je,pn
je
shl
sti
arpl
fsubrp
int3
sbb
add
bound
jbe
scas
pop
push
sub
fnstenv
cmpsb
sbbb
es
pusha
cmp
imul
push
shll
test
push
adcb
out
mov
lods
fxtract
xchg
mov
cwtl
hlt
pop
dec
inc
mov
mov
or
outsl
and
xor
fmul
cmp
jmp
test
push
pop
mov
cmp
cs
jae
or
in
push
jbe
xor
xchg
mov
cmpsb
je
jae
add
push
out
cmp
es
push
std
push
mov
data16
mov
out
xchg
add
ss
dec
xchg
mov
jae
jb
xor
rorl
roll
xrelease
push
pop
mov
les
inc
xchg
arpl
sbb
les
movsb
sub
in
jecxz
fadds
xor
and
aam
les
hlt
push
in
xchg
jbe
data16
movsb
inc
push
mov
cmpsb
je
xchg
add
xor
and
aam
les
hlt
push
in
xchg
jbe
data16
movsb
inc
push
mov
into
sub
subb
mov
test
fbstp
arpl
test
in
in
or
pop
sub
jmp
dec
xor
push
lods
sub
pop
adc
fisubl
shlb
mov
cmp
or
cmpsl
sahf
lcall
js
aaa
push
mov
mov
fidivs
nop
and
jne
es
jnp
pop
jb
hlt
dec
xchg
inc
jl
mov
jmp
jb
testl
insb
push
inc
or
mov
out
and
jmp
dec
aaa
int3
cmc
in
cmp
fcoms
push
or
pop
xchg
adc
jne
push
xor
int
test
cmp
fsubrl
pop
scas
pop
scas
divb
jmp
and
pop
jno
daa
sbb
xchg
inc
ljmp
cmp
mov
xchg
jp
stos
pop
std
xchg
fwait
and
jbe
mov
and
xlat
cmp
sbb
mov
xor
loope
sti
lods
push
lods
and
test
cs
pop
lock
std
mov
loopne
and
mov
push
push
cld
jno
cmp
imul
aam
mov
repz
mov
adc
call
dec
cmp
or
mov
cmovs
inc
daa
xlat
jg
jp
add
inc
push
push
icebp
fldcw
lods
pop
mov
cwtl
std
repnz
lock
jae
repnz
or
adc
dec
cmpsl
icebp
sbb
outsl
mov
mov
and
xchg
dec
adc
jo
mov
stos
ret
es
cmp
mov
push
js
les
cmp
xor
and
pop
aas
mov
jl
std
out
jecxz
jle
pushf
sub
orl
loope
je
cmp
push
stos
or
add
dec
or
jle
sub
lret
mov
subb
xchg
cmp
ljmp
int
xchg
scas
mov
sub
hlt
mov
mov
in
dec
xchg
ficompl
bound
in
lahf
cmp
sub
fcompl
subl
push
shl
cmpsl
movsb
test
mov
sarb
lret
xlat
mov
or
fsubrl
and
mov
outsb
fs
pop
inc
nop
cmpsb
fmuls
push
xchg
mov
fldz
push
jo
test
pop
mov
sbb
jl
add
sbb
jle
test
rcrl
cld
pop
bound
imul
mov
push
push
jge
xchg
rcr
imulb
and
mov
or
xchg
rcrl
mov
xor
int
or
jae
dec
add
lret
add
paddusw
loope
or
loop
and
dec
mov
mov
test
fucomp
inc
jl
cmp
xlat
mov
es
es
xchg
adc
push
adc
test
inc
cmc
mov
push
sahf
xchg
gs
movsl
int3
fimull
mov
ret
adc
and
data16
mov
in
jbe
or
xlat
jo
sub
les
mov
shrl
lock
jae
sbb
inc
mov
repz
imul
shll
push
cmp
dec
sbb
mov
jle
jmp
mov
fisttpll
rcl
mov
cltd
stos
adc
fst
add
nop
icebp
testb
int3
jl
in
and
scas
in
stos
jno
mov
pusha
mov
sbb
insl
insl
lock
jp
cmp
cli
adcb
push
test
test
xchg
nop
mull
setb
inc
inc
and
cwtl
ret
add
xchg
repnz
xor
jns
pop
xor
lods
dec
adc
sub
and
jecxz
push
lea
sarl
xchg
push
sub
pop
js
lsl
movsb
xlat
adc
and
sti
test
mov
ret
mov
pop
cs
je
xorl
sbb
fimull
add
sbb
cmp
push
outsl
add
outsl
test
daa
loope
lret
and
push
mov
xchg
dec
fwait
in
mov
xor
mov
adc
fdivr
lds
insb
sbb
cmp
aaa
and
or
jl
cwtl
lcall
xchg
push
int
enter
outsb
xor
movsb
mov
sbb
ret
jecxz
mov
call
outsb
push
or
lods
push
jg
xor
rcrl
stos
in
jb
cmp
cmpsb
mov
ficoms
int
leave
stos
fnstsw
lahf
lods
shl
div
nop
pushf
loope
cmp
inc
in
repz
js
add
outsl
movsb
mov
rcl
mov
movsl
inc
mov
mov
cld
pop
imul
push
mov
adc
jle
or
add
add
add
lods
mov
xchg
sbb
push
nop
sbb
aad
jl
ds
sub
fisubrl
call
sbb
not
mov
test
pusha
pushf
cmp
sti
sub
add
bswap
push
and
dec
fs
cmc
xchg
sub
popa
jns
ljmp
xchg
enter
fidivrs
enter
or
pop
pop
dec
popl
dec
inc
in
test
lds
xlat
sbb
icebp
dec
fdivs
sahf
mov
cmpl
add
cmp
test
mov
icebp
orl
add
mov
rclb
call
mov
mov
push
movsl
in
inc
mov
pop
into
push
adc
or
sbb
inc
pop
pop
incb
mov
jmp
gs
inc
loop
aas
mov
fiaddl
aad
cmp
push
sbb
jb
cmp
jb
bound
sbb
mov
fdivrl
shlb
in
adc
pop
dec
ror
lods
repnz
or
jo
bound
pcmpgtw
mov
jl
outsl
ja
das
dec
jnp
fcoms
inc
imul
enter
fnstsw
sbb
sbbb
mov
scas
outsb
loopne
das
inc
test
ret
test
inc
push
es
adc
subb
mov
cmp
pop
iret
bound
cli
cmp
movsb
pop
ds
xchg
scas
jge
and
cmp
daa
das
or
fsubr
mov
xor
sahf
inc
cwtl
cmp
ret
fisubrs
push
jbe
lcall
jnp
mov
xor
sub
inc
and
xor
jae
dec
int3
jo
shl
in
data16
mov
mov
adc
cmp
adc
ja
lds
xchg
push
arpl
aam
lock
fwait
xchg
ds
mov
in
or
xor
mov
bound
sub
fcomi
pusha
les
lods
sbb
xchg
and
cs
mov
sub
xchg
fisubrl
sub
fcoms
mov
jle
cmp
push
gs
dec
lret
sbb
push
mov
rcl
frstor
pop
loope
xchg
add
clc
cmc
jg
pop
mov
dec
loopne
gs
mov
pop
cmp
jbe
mov
inc
and
cmp
cmp
add
adc
cmp
mov
lock
or
jns
mov
mov
movsb
push
or
inc
clc
pusha
scas
fcoms
or
stos
outsb
add
clc
dec
ds
push
lds
xchg
pop
push
mov
pop
xor
test
lds
mov
xchg
call
je
pushf
inc
xchg
ss
pop
outsl
ret
xchg
mov
and
loopne
pop
scas
dec
adc
aam
xchg
sub
mov
fsubs
mov
jne
pop
dec
mov
jne
lods
les
xor
jb
cmp
enter
jnp
lahf
inc
xorb
in
test
push
shrl
push
lods
sbb
arpl
fmull
incl
iret
mov
scas
mov
sbb
jecxz
cmpsb
ret
ds
decb
mov
fucomi
lret
pop
out
test
pshufw
xorb
out
mov
jns
into
shlb
mov
jecxz
les
jns
mov
movl
sbbl
xchg
mov
hlt
insb
cmpsl
xor
fwait
cmp
cli
call
and
push
xchg
int3
out
add
outsl
push
mov
int3
xchg
out
jecxz
ret
imul
loop
xchg
imul
das
pop
daa
cmpsl
aaa
cmpsl
sahf
adc
es
and
or
lcall
and
pop
movsb
mov
test
mov
out
cs
in
jmp
in
fiadds
fs
js
mov
jle
out
nop
nop
aas
hlt
adc
sbb
cs
test
dec
fs
add
rclb
and
or
xor
mov
stc
fisubl
or
mov
mov
push
call
push
dec
sub
cmpb
mov
or
sbb
sahf
shrb
mov
mov
outsb
insb
cmp
mov
enter
outsl
cmc
dec
andb
pop
fdivrs
sti
inc
fs
sub
iret
sub
jp
clc
mov
lret
sub
mov
cmp
ret
lret
imul
add
movsl
xchg
cld
push
ss
leave
nop
out
pushl
add
clc
fcoml
idivb
jl
repz
push
inc
dec
push
mov
in
adc
aad
mov
test
mov
xchg
fwait
add
addb
lret
out
int3
andl
push
ret
lds
xor
dec
test
xchg
push
jp
cs
insl
outsb
or
xchg
push
mov
dec
imul
cmp
or
xchg
loopne
adc
outsl
adc
lods
mov
int
addr16
pop
add
insb
xchg
js
and
outsb
fsubl
sbb
nop
inc
and
sbb
sub
jmp
fbld
lds
movsl
int3
dec
cli
addr16
mov
pop
jle
movsl
in
pop
imul
xchg
mov
sub
add
push
lods
push
test
push
mov
je
and
push
rcll
cmp
inc
dec
stos
pop
movsb
pop
mov
ror
dec
cmpsl
loop
inc
dec
mov
mov
cltd
sahf
sbb
push
xchg
ss
mov
mov
fdivl
sub
inc
ss
pushf
push
std
jmp
lods
mov
hlt
pusha
lret
xor
out
jg
xchg
movl
scas
jo
xor
cs
dec
pop
in
xchg
fcoml
cmp
mov
rcrb
sarb
jno
sub
mov
cld
mov
xchg
popf
add
lahf
iret
push
sub
popf
stc
jge
loopne
stos
jb
cli
out
add
ss
fdivs
fdivrp
sub
shrb
js
lock
mov
inc
jae
movsb
out
nop
insl
dec
pop
pushl
in
or
ss
pop
inc
popf
rcrl
jb
js
inc
add
push
fcoms
pop
mov
pop
shrb
fsubrl
and
xchg
iret
jle
repz
data16
aas
xchg
adc
inc
loop
loopne
mov
xor
or
and
xchg
adc
ficompl
sbb
stos
aad
ffree
xchg
xchg
jmp
push
sbb
fstps
rclb
add
sbb
hlt
cs
mov
xor
fisubrs
adc
add
dec
fwait
lds
test
sbb
ljmp
sub
outsb
movsb
filds
jg
jo
adc
lods
stos
mov
ljmp
xchg
add
xor
out
imul
int
cmp
pop
adc
add
subb
dec
lea
mov
andl
in
lea
notl
pop
aad
adc
test
inc
add
ret
push
push
push
clc
push
stos
into
sbb
sbb
ljmp
repz
xor
in
fdiv
je
inc
dec
push
lods
pop
fldt
sub
out
sub
insl
jp
lcall
movsl
test
xor
or
popa
mov
cmpsb
xor
dec
mov
popf
rcll
addb
sbb
pop
cmp
pop
push
std
xor
sbb
int3
pop
push
fsubrl
adcb
xchg
xorb
xchg
out
adc
xchg
pushf
adc
xchg
test
clc
cmpsb
lret
pusha
lcall
in
xor
sbb
jmp
or
jg
or
mov
mov
sbb
lcall
rcrl
pop
jg
mov
lcall
mov
sbb
sbbl
dec
dec
mov
rcrb
loop
mov
loope
pop
call
jp
and
int3
stos
fildl
dec
fwait
int
lahf
dec
movsl
push
fdivrl
and
pop
lods
sub
jns
and
les
cld
pop
mov
out
hlt
pop
call
add
mov
fwait
adc
dec
out
lds
cld
xchg
pop
push
or
mov
xlat
xbegin
and
testl
aam
push
cmp
jnp
inc
pop
outsl
fnsave
addr16
mov
sbb
adc
outsl
jp
mov
cmp
in
shl
mov
push
in
jnp
mov
scas
test
imul
pop
test
dec
shlb
pushaw
sub
aas
gs
out
pmuludq
xor
aad
cs
aas
call
repnz
mov
mov
insb
mov
mov
add
push
jae
mov
nop
jmp
push
push
scas
stc
aas
inc
into
dec
pop
jl
mov
xlat
pop
scas
movsb
pop
mov
or
inc
sbb
push
mov
stc
out
nop
push
popf
jp
xchg
je
les
addr16
lods
aaa
fcoml
dec
fldl
sbb
ss
ja
ret
mov
out
stc
dec
mov
xor
dec
ret
or
std
push
cmp
pop
push
in
dec
adc
scas
arpl
out
jp
std
fld1
icebp
icebp
hlt
test
push
cmp
leave
mov
jno
aaa
fildll
jbe
jno
dec
ret
xor
cmp
mov
dec
mov
push
in
lods
repnz
lds
inc
jne
adc
jl
test
les
xor
push
pop
dec
scas
mov
jg
pop
jmp
xchg
andl
add
out
pop
cmp
aad
fwait
pop
lods
daa
mov
pop
fadds
mov
pusha
dec
clc
cmc
adc
add
xor
sti
mov
rclb
outsl
push
aas
inc
adc
mov
pop
xchg
cmp
mov
push
inc
add
mov
loopne
xor
jmp
in
mov
sahf
mov
inc
jge
orb
lea
neg
push
pop
mov
jnp
xchg
sbb
sbb
mov
lock
pop
mov
push
sub
sahf
in
pop
pop
icebp
ret
fdivrs
repz
inc
push
jno
shll
mov
push
xlat
mov
mov
xor
test
fcoml
ja
mov
and
jns
mov
roll
push
repz
je
fsubl
pop
gs
mov
jae
lret
push
fdivl
pop
inc
loopne
or
cmp
rorb
rolb
out
or
cld
sahf
xor
adc
push
add
iret
fsubs
sub
cmpsb
test
mov
imul
sub
dec
cmpsl
fisttps
sbb
imul
jecxz
loop
les
mov
mov
lahf
call
xchg
cmp
div
lahf
arpl
xchg
hlt
mov
pop
imul
gs
and
jbe
push
clc
push
insl
cs
or
mov
mov
jmp
sub
stos
into
mov
into
add
cld
jae
push
jecxz
bound
add
nop
cmpsl
pushf
dec
aad
adc
cmc
inc
lcall
fidivrs
mov
xchg
shlb
shl
and
pusha
dec
xchg
mov
clc
arpl
xor
sub
adc
dec
xchg
jns
or
dec
pop
fcomip
cmc
sub
mov
into
mov
mov
add
or
jnp
iret
mov
lea
mov
imul
lcallw
loopne
iret
push
insl
or
jnp
sarb
pop
iret
xor
adc
and
hlt
shlb
leave
rol
cmpsl
or
mov
aas
outsl
cmp
pop
imul
xorb
xor
ljmp
adc
sbb
add
scas
gs
push
inc
dec
cli
and
xchg
cld
pop
cmpl
xchg
xorb
and
xor
testb
push
nop
or
push
cmp
aad
xor
lret
cmp
lea
xchg
mov
push
inc
movsl
int
inc
int3
inc
aaa
or
sub
xchg
dec
cwtl
add
sub
pop
or
or
cmp
xchg
and
test
fsubrl
inc
popa
dec
sbb
gs
outsl
sbbb
shrl
sub
in
subb
mov
xchg
cmp
push
loope
ret
sub
pop
add
jno
push
adc
jb
hlt
inc
or
pslld
pushf
jae
mov
mov
mov
lea
inc
out
adc
imul
inc
inc
out
xchg
in
in
jb
negb
mov
jge
in
out
pop
loopne,pn
sarb
outsb
shl
ret
push
loopne
mov
push
xor
push
mov
fbld
icebp
rcrb
test
stos
dec
cmc
xchg
mov
mov
out
push
cli
xchg
nop
cmp
mov
pop
mulb
loope
mov
repnz
adc
sarl
push
dec
add
aaa
adc
cmp
jecxz
pop
iret
jae
push
mov
bound
insb
out
imul
mov
mov
adc
and
adc
lret
into
mov
mov
sbb
inc
loope
icebp
push
sub
ljmp
inc
dec
ret
notl
inc
vunpcklps
lds
push
add
lcall
int3
int
pop
icebp
mov
adc
dec
cs
or
int3
cmpsb
pushf
mov
mov
sub
jl
cwtl
sbb
xchg
mov
or
sub
lods
sbb
enter
ss
pusha
scas
mov
lret
mov
push
or
lret
sub
push
test
fdivs
ss
jbe
push
imulb
push
cmp
add
in
push
bound
jmp
jge
mov
push
dec
pop
arpl
fldl
pop
sub
scas
test
inc
fdiv
jbe
inc
push
inc
ffreep
mov
in
addr16
imul
hlt
in
rcr
push
mov
pop
cmc
mov
or
lock
xchg
test
or
jno
sti
dec
pop
iret
insl
dec
loopne
fbld
adcb
inc
repnz
xchg
push
mov
sub
or
cld
lea
in
shrl
cld
cli
pop
xor
stc
insb
sbb
adc
sti
mov
fs
mov
es
stos
or
xor
add
data16
addl
and
in
add
ss
lret
aaa
dec
aam
pop
jmp
rol
rorb
iret
jns
shl
xchg
jno
aaa
and
xchg
pop
sub
stos
in
fbld
das
nop
add
mov
mov
in
loope
ljmp
in
inc
or
fadd
xor
xchg
or
fsubr
sub
jae
dec
mov
adc
outsb
sbb
nop
orb
inc
and
push
cmc
iret
in
mov
in
in
cmp
push
out
mov
lods
lret
stos
and
mov
into
xor
mov
cltd
sbb
popf
in
mov
dec
cmp
mov
lcall
pop
rorl
cmp
dec
dec
mov
int
test
fnsave
inc
push
das
outsl
or
pop
xchg
cmp
rcl
mov
into
jp
inc
push
mov
adc
dec
or
dec
adc
jp
je
mov
aad
leave
mov
test
inc
inc
ret
jne
dec
add
adc
mov
sub
xchg
lea
test
das
shll
or
xor
xchg
mov
mov
mov
and
mov
sbb
pusha
insb
shll
test
mov
sbb
push
pop
stos
mov
cwtl
test
jecxz
xchg
adc
in
lds
gs
daa
outsl
cmp
add
out
icebp
popf
shll
pop
sbb
push
inc
mov
dec
mov
fistpl
dec
iret
mov
outsb
pop
or
adc
adc
lret
aaa
scas
int
inc
xchg
jmp
inc
dec
xor
add
imul
or
mov
test
js
add
cmpsb
pop
xchg
xchg
add
xor
and
aam
les
hlt
push
in
xchg
jbe
data16
movsb
inc
push
mov
cmpsb
je
xchg
add
xor
and
aam
les
hlt
push
in
xchg
jbe
data16
movsb
inc
push
mov
cmpsb
je
xchg
add
xor
and
aam
les
lock
in
xchg
jbe
data16
xchg
inc
pusha
mov
cmpsb
inc
xchg
xchg
add
mov
movsb
sub
cmp
decb
dec
test
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ds
movsl
mov
fimuls
add
and
add
adc
pop
push
pop
inc
scas
mov
movsl
xchg
sahf
test
cmc
cmc
into
aad
mov
cmp
and
outsb
pop
jle
dec
push
pop
inc
scas
lods
mov
popf
out
in
std
into
int
fildll
xor
jnp
or
daa
xor
fdivrp
mov
loop
cmp
in
sub
adc
bound
aad
sti
mov
das
sti
pushf
out
test
push
inc
sub
fistl
xchg
cli
xchg
adc
cmpsb
mov
andl
stos
cwtl
cs
loope
rcl
mov
add
mov
out
cmc
shl
mov
clc
fisttpl
ljmp
pop
stos
push
push
push
xor
icebp
push
xor
fisubrs
pop
in
push
mov
lret
push
mov
roll
ss
ss
xchg
rcrl
dec
jnp
xchg
cli
sbb
test
pop
inc
icebp
mov
sahf
test
cmc
in
aad
fsubrl
xor
push
sbb
insl
jle
dec
dec
pop
inc
fidivl
shl
lods
negl
mov
popa
adc
sbb
xor
cmp
sub
fdivr
int3
cli
out
ljmp
cmpsb
idivl
inc
jbe
jnp
and
xor
fdivs
mov
in
aad
lds
xor
push
add
dec
push
pop
inc
scas
mov
movsl
mov
in
aad
lds
xor
push
add
dec
push
pop
inc
scas
mov
mov
adc
xchg
sbb
fidivrl
lods
push
outsl
test
cmpsb
push
sbb
ja
mov
pop
daa
cmpl
cli
xor
push
pushf
jl
fstpl
dec
lret
stos
lods
ds
add
mov
cmp
cmp
xchg
mov
pusha
sub
shlb
push
out
xchg
out
scas
cmp
arpl
adc
push
iret
aad
fcmovbe
enter
push
mov
cwtl
je
adc
cmpsb
scas
mov
enter
mov
or
jns
pop
jnp
sar
dec
adc
sbb
inc
push
mov
enter
shrb
cmp
xorb
xlat
mov
std
fisubl
or
cld
or
or
jo
cmp
int
lods
lret
shll
cmpl
repnz
adc
rclb
in
gs
cmpsb
shl
jo
call
dec
xor
sbb
mov
jno
test
insb
sub
scas
mov
std
jne
inc
xorb
in
insl
cmp
int
ret
test
je
fmuls
and
jle
jl
jmp
cmp
pop
sub
fs
mov
push
out
inc
or
negl
xor
xlat
mov
fimull
dec
sub
push
and
add
and
and
sti
arpl
fwait
outsb
aam
mov
aam
rcl
sbb
and
lahf
test
orl
pop
repnz
pushf
jb
cmp
push
mov
mov
jbe
adc
loopne
mov
dec
lods
pop
and
nop
dec
aam
jo
mov
int3
pop
push
add
xor
jmp
mov
mov
jp
icebp
aaa
daa
mov
adc
add
lods
mov
lea
push
fwait
push
stc
cltd
iret
inc
mov
shll
mov
xchg
lret
lock
mov
mov
mov
cmpsl
lds
inc
pusha
sarl
inc
inc
rcrb
in
adc
mov
mov
xchg
daa
xorb
jmp
ffreep
xchg
inc
fistl
push
lods
jnp
mov
stc
xor
dec
xchg
inc
lods
jo
jno
cmpsl
sbb
addr16
mov
pop
lea
stos
dec
les
jg
das
pop
pop
pop
sbb
sbbl
cmp
inc
cmp
push
dec
push
cmpsb
cld
fnsave
insb
pop
test
roll
jecxz
xchg
out
cmpl
inc
test
scas
out
repz
xor
xchg
push
add
lds
insb
xchg
jns
mov
in
push
cmpsb
xchg
fs
rclb
insl
add
cs
xor
add
xor
jo
aaa
popf
cs
mov
cli
xchg
push
add
lret
xor
fwait
sub
sti
push
test
or
mov
inc
mov
pop
test
std
arpl
mov
aad
fidivrl
and
cwtl
pop
sub
out
outsl
in
lcall
xchg
or
adc
push
mov
mov
push
jp
mov
add
or
and
test
cmp
and
repz
mov
push
iret
pop
das
cmp
cwtl
ja
and
stc
outsl
out
or
dec
adc
xchg
mov
pop
lret
lea
mov
mov
icebp
mov
xor
adc
ss
adc
xchg
movsb
icebp
xor
out
pop
hlt
enter
mov
jmp
mov
mov
rcrb
and
les
gs
mov
sbb
into
adc
xchg
inc
pop
fcmovu
jne
mov
arpl
push
and
inc
push
xchg
pop
sub
loop
jp
pop
popf
xchg
add
pop
mov
aam
rcrb
pop
or
cmp
sbb
push
inc
mov
add
adc
inc
jmp
shrb
imul
xchg
lock
test
pop
lock
mov
inc
decb
mov
inc
je
into
xor
das
jge
shrl
adc
gs
subl
jbe
add
rorb
xlat
idivb
or
adc
and
sbb
pop
sub
mov
push
inc
pop
jle
shlb
sbb
cmc
popa
mov
pop
cwtl
and
xchg
dec
aam
cmpb
dec
xlat
xor
jnp
out
add
xchg
mov
add
or
es
adc
cwtd
in
inc
icebp
call
push
test
subl
cmp
stos
lret
cld
nop
int
pop
mov
or
and
cli
dec
mov
fisubrl
daa
shrl
andb
xor
adc
push
pop
ss
jl
testb
insb
mov
test
add
int3
adc
cmp
push
orb
stc
mov
testl
inc
pop
lret
mov
sub
stc
inc
mov
cmp
add
pop
mov
xchg
leave
mov
jmp
lret
add
mov
mov
pop
mov
inc
jecxz
call
push
ret
fs
xor
iret
push
jl
or
in
inc
loopne
pop
inc
cld
ja
roll
inc
icebp
lret
iret
pop
fildl
js
in
adc
sbb
ficoml
je
movsl
xor
stos
out
xor
adc
in
pop
sub
shll
pop
dec
jb
sub
pusha
mov
test
fwait
lods
adc
and
cmp
hlt
cs
lods
xchg
sub
subb
push
push
subl
gs
mov
aas
lds
jmp
jl
lahf
cs
mul
sub
sbb
push
mov
pop
loope
xor
lret
pop
mov
lret
test
enter
fidivs
sbb
stos
popf
push
push
jmp
mov
subl
mov
negb
push
dec
mov
rcr
inc
gs
hlt
shlb
sbb
sub
or
repz
scas
lods
add
rol
sahf
pop
inc
ljmp
jecxz
add
and
pop
mov
fwait
and
sbb
out
das
or
fs
out
lds
sub
push
jp
push
add
mov
and
loop
mov
sub
jg
movsb
push
inc
adc
mov
repnz
dec
inc
pop
xchg
out
jg
dec
push
sbb
mov
in
push
stc
lcall
push
and
and
dec
dec
addr16
cld
lods
push
or
xor
add
into
push
mov
das
nop
repnz
fwait
push
pop
push
add
mov
stc
adc
cwtl
fwait
xchg
outsl
sbb
mov
sub
sbbb
push
and
jle
icebp
jo
out
mov
shrb
pop
cmc
out
test
dec
push
sbb
cs
sti
movsb
aam
sti
adc
adc
cld
popf
test
and
mov
mov
xor
xor
xor
mov
mov
das
stos
cmp
iret
mov
or
clc
push
pop
leave
cmp
test
adc
lcall
fmuls
mov
sbb
bound
repnz
cmp
cwtl
int
ss
imul
dec
test
mov
cwtl
sub
or
jecxz
mov
cmp
inc
daa
arpl
mov
cmp
push
or
fistpll
cmpb
jp
leave
sti
push
sub
fstpl
fisubs
in
sub
add
adc
jb
push
xor
adc
jge
or
push
fsubs
sub
enter
or
mov
in
ljmp
jp
dec
je
mov
xchg
int3
xor
int3
ds
jo
gs
jnp
lock
sub
rcll
cmp
or
or
loopne
push
pop
cmp
lock
dec
inc
add
int3
jne
mov
add
adc
movsb
lods
out
mov
mov
jns
sub
pushf
insb
and
or
jns
faddl
xlat
jmp
or
sbb
out
mov
aad
dec
adc
cli
clc
jns
pushf
jo
jo
cmp
sub
push
sarb
mov
sub
sarb
jg
test
xor
nop
icebp
xlat
lock
daa
insl
subl
pop
in
or
adc
hlt
mov
mov
jmp
push
pop
in
and
mov
jns
fbstp
aad
mov
jp
push
pop
sub
jbe
lods
inc
dec
push
dec
sbb
xchg
loop
loop
xchg
mov
jae
movsb
inc
xorl
jmp
in
addr16
xor
gs
fiaddl
or
jg
sub
insb
mov
pop
mov
adcb
test
push
sbb
mov
dec
sub
lds
jle
xchg
mov
sahf
jo
shlb
jns
flds
lea
sbb
pop
adc
push
into
mov
sub
mov
icebp
dec
lret
mov
mov
leave
lods
stos
jl
pop
sti
add
scas
or
xlat
pop
test
in
adc
dec
mov
jg
push
or
daa
mov
cmc
adc
dec
mov
adc
add
jge
and
or
call
push
or
fistpll
ret
sub
in
jo
xchg
xchg
dec
push
dec
adc
stos
xchg
shl
sub
sub
cmp
inc
dec
arpl
andl
icebp
orl
mov
pop
mov
loop
mov
and
push
sbb
xor
imul
stos
ljmp
mov
popa
mov
aas
mov
ret
jnp
xor
xchg
jb
addb
add
movl
add
xchg
adc
imul
call
daa
aam
push
lock
in
cmc
es
mov
jge
sbb
cmp
pop
cwtl
or
mov
iret
sub
sbb
lcall
ja
pop
cmpsb
rorb
dec
jnp
mov
pop
scas
notl
test
push
stos
mov
lcall
and
in
popf
and
shrb
or
push
in
xor
or
xor
xchg
lock
jbe
sub
cwtl
outsb
fildll
sbb
repz
das
lret
mov
into
cmp
subl
mov
daa
jb
fs
es
rcll
adc
add
scas
scas
mov
xor
subl
xor
jecxz
mov
xchg
sbb
pop
fcoml
xor
and
inc
mov
add
out
dec
int3
inc
jne
cmp
push
scas
mov
and
jmp
dec
clc
ret
sahf
and
adc
dec
pop
push
jg
or
add
cltd
jbe
cmpb
repnz
mov
and
iret
sbb
ss
sub
loope
in
imul
insb
js
inc
notb
jge
jb
push
in
js
lds
mov
aam
scas
push
ss
idiv
jp
jo
sub
clc
test
dec
ds
and
add
aad
or
cmp
pop
cmp
and
jmp
clc
jp
sub
xor
or
cmp
and
shl
leave
pop
fldenv
inc
movsb
mov
sub
test
pop
divl
sahf
pop
aad
mov
ss
sbb
add
mov
inc
sbb
sbb
shlb
inc
pop
std
mov
mov
and
jmp
aam
add
adc
out
test
cli
xor
dec
cwtl
and
out
inc
stos
pop
mov
jle
dec
lahf
jo
loop
jo
mov
mov
push
push
bnd
mov
mov
lcall
cmp
cmp
ret
nop
adc
lods
pop
aad
push
dec
das
flds
or
lahf
or
imull
cmp
or
pop
movsl
pop
inc
sbb
dec
xor
dec
lcall
cmp
test
pop
nop
sbb
and
push
cli
int
mov
push
out
testb
sbb
jge
jo
fdivs
mov
in
sbb
rclb
aad
ja
jge
mov
test
ljmp
bound
cmp
sbb
jne
jbe
mov
mov
jge
sub
add
mov
or
orl
in
int3
fidivl
sub
jns
xchg
les
add
mov
mov
cltd
popf
mov
repnz
cmpsb
xor
push
sti
inc
in
mov
js
pop
jo
push
ret
xor
nop
jl
jmp
mov
test
into
adcl
insb
ja
fwait
call
xchg
les
mov
mov
push
push
add
mov
xchg
cmpb
push
mov
data16
lock
mov
mov
adc
js
iret
lret
pop
adc
sbb
add
sub
push
movsl
fadd
jb
lcall
sbb
pop
dec
mov
lret
lods
add
ja
pushf
repnz
cwtl
inc
rolb
ret
dec
and
dec
sub
inc
in
mov
cmpsb
or
sub
out
and
inc
ljmp
nop
mov
add
std
push
pop
mov
jo
out
idivb
mov
dec
sahf
mov
inc
dec
ret
adc
xlat
outsl
sbb
push
outsb
or
and
je
lds
pop
leave
mov
imul
nop
pop
ret
push
push
cli
gs
xchg
mov
sbb
out
sahf
xor
pop
lret
out
mov
jl
fists
mov
xor
ds
cs
inc
loopne
cltd
xor
dec
cmp
roll
ljmp
xchg
xchg
xor
mov
fildll
cmpb
imul
jle
push
mov
cwtl
gs
ret
mov
add
jo
shl
jle
subb
mov
push
push
inc
inc
pop
inc
out
lock
repnz
add
sbb
bound
dec
jmp
repz
push
imul
shrl
pop
jae
cltd
pop
ret
xor
or
in
nop
insl
fwait
lcall
repz
add
lret
out
and
lea
mov
push
test
pop
xchg
adc
cmp
in
repnz
fsub
lods
dec
icebp
jno
push
mov
int
es
ds
or
in
fdivl
in
pop
gs
inc
inc
aaa
mov
inc
mov
xorps
stos
lret
or
loop
jo
movsb
jl
sub
shrl
fwait
xchg
jle
and
mov
jl
or
sub
mov
and
aam
out
mov
sbb
pushf
lcall
sbb
push
inc
clc
cmp
or
push
lds
insb
divb
arpl
fnstsw
fldcw
jno
js
int
adc
pusha
movsb
es
sbb
lock
sub
pop
pop
xlat
lods
xchg
stos
cmp
sti
mov
mov
add
inc
or
push
out
cmp
add
daa
es
adc
mov
jb
dec
inc
xchg
pop
cmove
or
mov
mov
dec
and
mov
sbb
mov
xchg
jle
loope
adc
adc
lds
inc
cltd
cld
mov
xor
mov
mov
jp
and
xchg
mov
mov
and
das
mov
fwait
sub
inc
mov
aad
jb
fcomps
dec
aaa
popa
jo
mov
add
lea
push
add
sbb
xor
idivl
pop
shrb
jg
cs
sti
add
mov
jl
sub
mov
jno
adc
jecxz
scas
mov
gs
iret
adc
cmpl
sub
cmp
sbb
jl
xor
fs
pop
dec
in
pop
stos
and
ret
or
or
push
incl
fmull
sbb
roll
adc
xor
jno
mov
xchg
popf
dec
xorl
pop
inc
mov
xor
push
in
sahf
pop
call
push
dec
out
cli
cmc
ss
loop
rorb
mov
out
shl
xchg
cmp
cs
and
mov
stos
sbb
inc
pop
or
add
push
mov
aaa
outsl
repnz
daa
fcmove
cwtl
jmp
jnp
sub
jge
pop
pushf
xor
insl
dec
push
or
and
outsb
sahf
ljmp
mov
loop
call
mov
mov
mov
push
jp
jp
addl
xor
nop
arpl
ret
jg
sub
fwait
andb
aas
jmp
jge
xchg
push
cmc
cmp
dec
mov
in
les
pop
and
push
imul
xchg
sti
xchg
and
lods
jl
repz
pop
cltd
push
and
xchg
inc
fdecstp
push
sub
aam
push
jecxz
ret
adc
repnz
fldenv
mov
sub
fwait
pop
test
je
push
dec
xchg
sti
gs
popf
mov
jmp
push
adc
dec
out
xchg
loope
fistl
adc
and
lods
clc
das
mov
jns
loope
mov
and
cmp
and
pushf
sub
inc
or
notl
mov
outsb
push
xor
sub
addr16
sub
mov
fisttpl
fdivr
sbb
adc
xorb
stos
stos
inc
and
loopne
daa
xchg
mov
mov
roll
sub
pop
sub
pop
das
cmc
mov
jecxz
push
in
dec
je
or
push
arpl
xchg
movsl
loope
mov
jp
mov
repz
sbb
cmc
stc
sub
and
popa
adc
dec
and
icebp
pop
adc
fiaddl
jmp
out
xchg
mov
gs
lods
xchg
adc
xor
ss
push
or
addl
push
test
jne
sbb
les
xor
mov
mov
inc
or
es
std
pop
add
mov
iret
ret
es
cmpsb
mov
imul
clc
xchg
xor
sbb
aaa
jae
add
ja
mov
mov
or
xchg
xlat
or
call
les
push
push
shll
cmc
or
pop
repz
enter
inc
das
hlt
out
movntps
sbb
lret
add
or
popa
xor
push
jns
jg
stos
aam
adc
jmp
sbb
in
fsts
data16
jb
sbb
mov
inc
xor
cmp
pop
nop
imul
sbb
repz
inc
insl
cmp
outsl
mov
dec
lret
and
iret
lcall
xlat
jge
daa
int3
jmp
leave
mov
lods
rcrl
pop
out
mov
push
xchg
jle
int
roll
popf
shll
mov
add
push
stc
xchg
add
mov
rcrl
jno
mov
inc
and
xor
insb
mov
cld
adc
call
lret
inc
dec
out
fnstsw
or
jecxz
bound
sahf
leave
dec
or
repnz
std
mov
lcall
adc
mov
hlt
sub
fmuls
push
lods
mov
icebp
test
and
lcall
pop
and
mov
int3
in
inc
out
adc
mov
adc
mov
fsubrl
pop
mov
out
test
cli
and
adc
xchg
scas
pop
cltd
sub
inc
mov
push
push
mov
clc
xor
push
sarb
ss
adc
mov
jg
nop
les
cmpsl
sbb
shlb
mov
jle
mov
pushf
cli
insl
xor
dec
es
jl
adc
ja
gs
cwtl
push
sbb
inc
and
dec
fwait
es
jl
mov
lods
adc
pusha
imul
and
xor
jp
xchg
push
xchg
scas
push
fcmovnb
and
dec
jo
cmp
clc
pop
pop
push
sbb
cmp
cmp
sbb
mov
adcl
mov
inc
fcom
jecxz
jmp
xchg
addr16
mov
mov
add
mov
out
testb
inc
shll
xor
cmp
sbb
adc
xchg
test
fisubrl
cmc
ficoml
in
aas
sub
inc
sub
sbb
sub
and
or
push
sub
repnz
lcall
pop
or
lods
rol
or
pop
test
mov
cmp
cs
cmp
inc
cld
mov
sub
or
out
xchg
pop
push
jns
or
mov
xchg
sahf
test
cmc
in
aad
lds
xor
push
add
dec
push
pop
inc
scas
mov
movsl
mov
in
aad
lds
xor
push
add
dec
push
pop
inc
scas
mov
movsl
mov
in
aad
lds
xor
push
add
jle
dec
push
pop
inc
scas
mov
mov
out
cmc
in
aad
add
movsb
adc
negb
mov
mov
push
cmpsb
ds
or
and
sahf
pop
andb
aaa
lods
inc
ficoms
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
imulb
pushf
push
mov
sahf
ss
xchg
jbe
xchg
xchg
push
cmpsb
es
movb
out
divb
xor
scas
inc
lahf
cmp
fstps
repnz
dec
fisubl
in
loopne
scas
addr16
idiv
add
jb
into
inc
sbb
sarb
aad
mov
hlt
or
sti
push
xchg
data16
push
fwait
xor
sti
mov
mov
or
addb
inc
dec
es
sub
into
sub
add
jbe
xchg
push
int3
ds
loope
ret
mov
notb
fcomps
push
mov
je
test
jbe
inc
rorl
jle
mov
cs
out
adc
mov
mov
inc
ss
ja
jnp
imul
add
and
imul
lahf
out
fldcw
fstpt
dec
push
xchg
sbb
pop
dec
out
divb
xchg
xchg
cmpsl
ss
push
fldenv
jbe
jnp
push
iret
aas
fildll
or
push
divl
es
roll
popf
add
repz
ret
dec
fisubrl
sub
movsb
add
inc
out
and
ss
inc
lods
cmp
jecxz
xchg
imul
ficompl
xor
dec
out
imulb
sahf
push
mov
mov
push
into
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
imulb
sahf
push
mov
mov
push
into
data16
jbe
xchg
mov
cmp
cltd
cmp
or
or
in
xor
mov
mov
jge
pop
loope
insl
gs
add
dec
addr16
or
mov
xor
ljmp
scas
fcoml
call
jmp
mov
ret
add
sub
push
and
gs
xor
sbb
daa
xor
or
pop
inc
in
cmp
mov
dec
mov
aaa
mov
xor
addb
mov
lods
sub
xor
xchg
jle
cmp
mov
mov
pop
sub
sub
test
lea
enter
jmp
sub
lock
mov
push
fists
stos
jae
ret
dec
sub
and
add
iret
push
cmpl
mov
cld
and
cmp
stos
sub
sbb
pop
mov
xchg
xor
mov
inc
cwtl
idiv
pop
jmp
pop
adc
lods
shlb
sbb
fsubl
mov
dec
or
arpl
scas
lods
pop
sbb
inc
mov
sbb
jnp
loopne
imul
insb
xchg
outsl
mov
mov
adc
push
mov
inc
sbb
fldcw
sbb
int3
ds
sbb
cmp
cmpsl
xchg
push
add
mov
push
je,pt
add
rcrb
pusha
sahf
xor
mov
dec
mov
sahf
mov
sub
out
pop
movl
inc
scas
popf
clc
iret
rclb
jnp
cmovbe
xchg
mov
stc
cwtl
jecxz
out
push
pop
nop
and
pop
sub
cmp
hlt
xor
shll
aad
movsl
enter
or
dec
pop
mov
inc
jp
mov
mov
int
jmp
mov
mov
mov
jle
jo
inc
inc
push
mov
test
aas
lahf
jecxz
aas
mov
and
or
cmp
fldl
pop
xchg
fnstsw
ss
mov
jne
incb
jl
into
pop
pop
and
icebp
mov
clc
sub
lahf
push
add
mov
mov
je
rclb
dec
aad
and
jp
inc
xor
xor
popf
mov
cmc
pop
and
or
sbb
stos
mov
mov
jp
jl
dec
mov
pushf
pop
jbe
aam
inc
jae
sbb
and
cmpl
in
arpl
adc
mov
jne
out
xchg
cpuid
mov
sahf
arpl
loop
mov
stc
adc
xor
loope
sbb
pop
shrb
popa
push
popf
fsubl
jno
in
adc
pusha
and
faddp
shl
pop
loopne
push
and
mov
pop
loope
mov
cmp
adc
cmp
dec
sub
loop
sbb
pop
cmp
rclb
and
xor
aad
notb
jbe
sub
mov
imul
nop
push
inc
cs
add
leave
dec
xor
sahf
je
aam
mov
ja
es
sti
daa
jge
ret
fwait
jp
int3
cli
addr16
jns
push
xchg
stos
jnp
cmp
fstl
adc
lahf
sub
lods
ret
fidivs
test
xchg
mov
xor
hlt
dec
in
mov
in
adc
sub
mov
clc
dec
xor
sub
into
mov
jg
and
fisubs
rolb
lcall
xchg
jge
push
and
icebp
sbb
movsb
sub
push
cltd
jge
outsb
pop
daa
push
push
pop
out
sbb
or
inc
mov
xchg
add
test
arpl
or
jns
mov
push
pop
adc
jge
add
mov
aas
cmp
adc
mov
test
stos
jae
rcr
mov
pop
dec
cmpsl
mov
jp
dec
sub
xchg
sbb
mov
cmc
adc
stos
and
insl
adc
aaa
je
mov
movsb
aas
je
inc
inc
shrl
movl
enter
out
inc
cltd
and
or
jnp
or
adc
xor
scas
ss
push
int3
mov
jno
add
sbb
fbstp
je
popa
mov
push
jne
out
pop
lcall
es
lret
jnp
xchg
ret
sbb
insl
cs
cmp
fcmovnb
clc
mov
jp
arpl
rcl
cmp
mov
hlt
xchg
mov
into
out
notl
lret
jmp
xchg
push
iret
mov
mov
adc
mov
pop
add
mov
xchg
adc
data16
ja
jecxz
add
xchg
ja
std
cmp
mov
repz
or
sarb
inc
aas
xchg
test
sbb
jle
cmpsb
sbb
xor
jg
pushf
pop
push
mov
aam
movsl
stc
xchg
inc
mov
sbb
aam
xchg
cmp
ja
mov
pop
mov
push
outsb
out
std
fnstenv
mov
cmp
push
and
cmp
mov
mov
bound
in
rolb
sub
adc
adc
clc
outsb
mov
out
adc
pop
pusha
mov
out
stc
data16
iret
mov
cmp
into
rcl
jmp
in
push
ja
cmc
repnz
cltd
mov
pop
nop
pop
mov
jmp
inc
sbbb
mov
xchg
xor
aam
cmp
dec
sti
out
dec
nop
pop
into
and
call
cltd
sbb
ds
sub
repnz
loopne
in
scas
pop
or
cmpsb
fbld
pop
cmp
int3
mov
jne
jno
inc
out
push
inc
push
out
enter
sub
cmp
inc
mov
popa
mov
sub
pop
test
xchg
inc
push
sub
cmp
outsb
out
mov
adc
scas
rorl
inc
sbb
adc
xchg
dec
mov
cmp
pop
repz
outsb
stos
add
int
int3
and
cmp
test
in
lods
jp
xor
pop
lret
push
repnz
dec
dec
inc
cltd
loopne
mov
inc
sbb
aam
mov
pop
push
pop
jmp
fsubl
fnstenv
cmp
lods
lret
inc
lret
mov
cmpsl
andb
cmpsb
jb
cltd
xchg
and
mov
mov
pop
in
mov
add
nop
jmp
push
mov
pop
push
mov
cmpl
stc
push
dec
adc
inc
and
mov
xor
shlb
stos
scas
mov
arpl
dec
negb
dec
jg
repnz
dec
push
xchg
lods
push
ret
jae
jmp
pop
dec
or
mov
ds
out
inc
xor
and
xlat
mov
sbb
ffreep
inc
and
ja
or
lock
loope
pushf
in
and
lret
mov
pusha
fimuls
nop
pusha
lahf
add
cmp
inc
xor
lret
shlb
cwtl
fnstsw
push
xor
fbstp
lcall
sub
adc
inc
stos
and
and
jle
xor
mov
scas
in
sbb
dec
mov
push
loope
push
inc
cmpsb
mov
test
or
lods
ljmp
test
sub
hlt
inc
ret
pop
add
mov
xchg
adc
fisubrs
loope
scas
xor
daa
jo
sti
sub
aam
fdivl
and
xchg
out
shr
repnz
loope
fwait
jecxz
ja
sub
fs
bound
jbe
cmc
jp
dec
test
sub
add
shlb
out
mov
movsl
test
and
mov
jbe
adc
and
in
mov
pop
out
movsl
push
lods
movsb
cld
sub
stos
arpl
imul
pushf
inc
xlat
xchg
dec
je
es
cmpsl
jmp
cmp
testb
fwait
setno
fisttpl
inc
add
popf
gs
sbb
sbb
and
ret
or
negb
xor
fcmovnu
cmpl
in
lock
decb
and
sahf
jnp
xchg
cmp
xchg
cld
mov
stc
sub
pop
call
addr16
gs
in
dec
cmp
and
gs
pushf
adc
adc
loopne
add
mov
xchg
jae
or
fldenv
sub
mov
fsubl
das
mov
and
mov
call
xor
cwtl
push
popf
cmc
mov
movsl
enter
lods
lods
pop
mov
dec
push
ds
mov
test
cmpsl
and
inc
frstor
add
gs
jp
cmp
sub
push
sbb
xor
gs
repnz
sub
xor
mov
xor
jmp
xchg
xor
sub
ret
imul
lods
mov
fcoml
jg
xchg
mov
push
xchg
push
lret
in
shlb
dec
cwtl
pop
push
rol
test
or
ljmp
into
add
pop
push
inc
mov
divl
sub
fisubrl
je
std
inc
das
mov
es
ss
rclb
adc
dec
aam
or
and
adc
xor
pop
and
icebp
fmul
xor
inc
jbe
sbb
push
cmp
cld
mov
xchg
sbb
scas
xchg
jge
xor
mov
mov
mov
test
xchg
das
xchg
mov
push
cmp
dec
cmp
aaa
nopl
pop
ds
aam
lods
out
pushf
enter
mov
cmp
mov
mov
pop
xlat
insb
call
and
mov
mov
pop
add
and
inc
rclw
inc
stc
popa
into
pop
sbb
jg
push
sub
or
or
mov
fldcw
mov
jmp
mov
sbb
imul
jge
loope
bound
lds
dec
pop
or
sarl
adc
loop
stos
sbb
xchg
mov
cmp
sarb
shll
adc
mov
sarb
repz
mov
or
cmp
mov
movsl
add
arpl
or
mov
iret
das
or
js
xchg
lds
and
movsb
lock
push
notl
or
push
out
popf
pop
mov
sbb
cmp
dec
adc
pusha
ficomps
xor
cmpsl
sti
mov
sub
sar
fnsave
fs
inc
xchg
insl
add
inc
sub
xchg
daa
test
arpl
mov
or
sbb
jge
fimuls
popa
inc
sub
pop
mov
add
fisubl
call
push
cmp
stc
adcl
mov
inc
rorb
mov
add
mov
iret
scas
mov
repz
mov
adc
test
xor
mov
movsb
hlt
aam
or
xor
sahf
lahf
or
mov
mov
test
xlat
inc
dec
lsl
xchg
ja
adc
test
imul
mov
lret
data16
loopne
je
cltd
mov
mov
xchg
xchg
jns
sub
sahf
or
addr16
sbb
xor
mov
and
repnz
stos
scas
mov
lods
cli
pop
arpl
mov
and
sbb
mov
dec
xchg
stc
mov
mov
dec
and
xor
jg
sbbl
nop
inc
xchg
popa
sbb
sarl
sahf
adc
in
sub
xor
icebp
stos
std
aam
mov
adc
xor
js
pop
test
cmp
or
and
mov
cmp
mov
leave
mov
clc
fildll
adc
sbb
inc
and
incb
jae
mov
jecxz
inc
xchg
dec
jle
jp
hlt
xchg
cltd
loop
into
jns
push
iret
clc
test
bound
cmp
add
cmp
and
je
pop
adc
or
and
std
in
inc
movsb
adc
push
adc
xor
rorb
dec
sub
arpl
mov
icebp
loopne
sbb
mov
mov
cmpl
aam
sbb
push
xchg
out
fucom
sub
add
mov
mov
lock
add
orb
cmc
cmp
add
sti
jg
sbb
lret
arpl
adc
or
es
lret
inc
add
pop
test
nop
dec
sbb
out
lcall
cltd
adc
nop
sbb
out
jp
cmc
repnz
js
xchg
shl
ret
add
cmp
push
add
dec
stos
sti
and
xchg
hlt
mov
jecxz
pop
mov
call
xor
adc
nop
fs
bnd
loopne
mov
xchg
inc
pop
mov
and
cwtl
jnp
push
sbb
dec
dec
ljmp
pop
and
push
or
adc
cmpsb
fwait
jp
mov
sarb
stos
jns
sub
idiv
push
mov
sbbb
sahf
pop
adc
es
dec
or
data16
loope
sub
cmp
or
test
popw
lret
leave
mov
aas
and
mov
ljmp
hlt
movsb
push
and
lods
mov
sub
prefetcht1
mov
nop
and
push
adc
cs
addr16
mov
and
rcr
aad
imul
ljmp
cmp
sbb
dec
adc
dec
rorb
rcl
addr16
lret
outsb
mov
test
mov
out
jmp
stos
sbb
in
repz
movl
insl
jl
jge
or
push
add
bound
into
daa
es
mov
jne
dec
pop
out
lcall
mov
cmp
repnz
and
sub
fldt
es
fcmovnb
jecxz
xchg
clc
cmp
xchg
mov
in
and
cmp
pop
jmp
stc
test
ffreep
nop
pop
mov
mov
hlt
mov
add
out
out
xchg
enter
xor
sub
test
int3
jbe
fstpt
enter
cmpsb
push
cli
int3
mov
pop
or
jnp
loope
shrb
out
aaa
out
inc
cmp
fsubs
pop
shlb
sub
mov
test
mov
inc
scas
mov
in
mov
mov
pop
pop
jnp
ret
lock
push
add
cmpsl
kxnorw
fwait
push
xor
xchg
or
push
scas
popf
test
dec
push
jl
sbb
jbe
mov
sti
jge
jp
inc
dec
dec
jecxz
out
add
je
cmp
leave
sti
jnp
jge
popa
pusha
or
sahf
mov
cmp
cltd
lcall
jno
cmp
jp
in
mov
rcl
imul
fwait
jmp
ficompl
fnstenv
repz
imul
test
rcrl
cmpsb
dec
ret
imul
pop
sbb
int3
enter
fwait
lods
jecxz
push
ljmp
mov
jmp
in
imul
ja
mov
rcrb
push
popa
addr16
pusha
in
xor
sub
adc
insl
iret
int
lea
cmp
cmp
adc
fimull
add
rcl
mov
and
jmp
ret
push
lcall
fistpl
mov
mov
lret
adc
mov
mov
insl
mov
idivl
daa
cmp
inc
leave
out
idivl
shrl
add
stos
mov
dec
adc
in
sbb
inc
mov
insb
pop
lret
xor
lcall
call
out
fsubrs
inc
jnp
ds
pop
imul
sti
lock
pushf
inc
popf
mov
dec
mov
push
loope
mov
adc
vpminsw
push
mov
popa
add
pop
add
js
pushf
repz
sub
nop
nop
mov
and
cs
loope
inc
outsb
shrb
dec
inc
mov
rorl
mov
mov
jbe
imul
xchg
jbe
insb
loope
pushf
lahf
in
and
push
jae
dec
sti
push
scas
cmpsb
or
inc
mov
ja
and
mov
jp
sub
xor
or
les
in
pop
insb
or
jg
sub
lahf
xor
sbb
pop
add
pop
cmpsb
mov
fisubs
jae
orl
fwait
sti
addr16
xchg
int
repnz
jo
fsub
and
mov
fldl
pop
mov
in
sbb
bound
inc
in
int3
divb
shll
inc
jmp
cmc
out
cmpsb
rclb
lods
jp
lcall
jo
mov
dec
mov
addb
mov
mov
call
scas
push
test
mov
xorb
xor
add
es
shlb
pop
ret
neg
hlt
jae
lahf
jbe
cmp
test
sbbl
adc
dec
in
mov
push
arpl
mov
ds
add
xor
and
mov
repz
fmull
fiadds
test
sub
inc
int3
adc
sbb
pushf
iret
lea
xchg
adc
xchg
and
adc
push
mov
fidivl
ret
pop
js
add
int
and
pop
add
repnz
pop
cld
call
sbb
lea
inc
sbb
test
ret
dec
int3
lea
xor
push
dec
int3
pop
cmp
mov
and
pop
pop
push
mov
adc
sub
mov
aad
inc
pushf
sbb
les
outsl
mov
push
or
xchg
pop
mov
sbb
mov
add
fs
cmp
xchg
mov
xor
and
out
mov
xorb
fld
daa
out
adc
test
jg
inc
ret
pushf
sub
test
in
and
and
mov
fstl
cmpsb
cmp
loope
bound
sahf
dec
leave
and
imul
std
and
push
lcall
dec
pop
pop
xchg
add
test
and
inc
mov
imul
push
or
rclb
xchg
inc
push
outsb
adc
xchg
mull
in
adc
das
inc
jecxz
mov
jecxz
inc
aam
cld
xchg
sbbl
lock
ret
pop
or
mov
xchg
outsl
adc
ficoml
je
push
cmp
cmp
ljmp
fs
lcall
and
lods
sbb
adc
add
stos
push
aaa
int3
dec
and
pop
mov
aam
es
jl
cmp
push
push
aam
pop
mov
nop
inc
mov
outsl
add
xchg
outsl
push
pusha
xlat
lea
dec
enter
js
sti
mov
cmc
push
pop
mov
sarb
jge
inc
lds
mov
mov
jecxz
mov
int
push
data16
add
decb
scas
pop
jle
xchg
mov
sub
mov
pop
cmp
or
sbb
in
imul
shrl
cmp
ret
inc
icebp
and
jb
mov
mov
xlat
sbb
sub
cli
out
pop
data16
clc
pop
mov
call
aas
mov
pop
jb
xchg
dec
jecxz
adc
sbb
xor
sub
test
enter
sahf
push
lret
sti
push
xchg
inc
test
mov
cmp
mov
in
lcall
cld
les
sub
or
mov
mov
loop
cmpsl
mov
aad
cmpsl
push
mov
fidivrs
push
mov
adc
iret
in
mov
loope
mov
push
dec
outsl
dec
mov
insl
or
les
leave
mov
cli
in
call
and
xorl
mov
int
mov
bound
adc
push
jge
or
push
andb
or
mov
into
decl
xor
or
fisttpl
xor
dec
shl
inc
outsb
mov
sub
cmpsb
leave
xor
clc
dec
jae
xchg
push
outsb
ret
adc
sbb
add
test
or
mov
mov
lcall
gs
insb
adc
cltd
sub
pop
inc
test
rolb
sub
int
xor
mov
lods
syscall
push
mov
popa
inc
stos
outsl
mov
fstpl
push
movsl
dec
mov
mov
push
or
sub
sti
and
scas
xchg
pop
es
inc
lods
mov
dec
into
jb
add
ds
mov
shll
jecxz
mov
mov
jg
xor
mov
or
in
jne
inc
cltd
fists
pop
mov
imul
movsb
cld
xchg
roll
sbb
int
test
mov
xor
xchg
jne
mov
rorb
push
cltd
fists
mov
pop
dec
out
imulb
sahf
push
mov
mov
push
into
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
imulb
sahf
push
mov
mov
push
into
data16
jbe
xchg
push
push
es
inc
pop
dec
out
jbe
push
sahf
push
mov
mov
push
into
pushw
xchg
xchg
push
cmpsb
ds
pop
dec
out
imulb
sahf
push
and
mov
xor
add
adc
mov
lret
mov
lods
les
jp
imul
sbb
cmp
sub
pop
or
mov
lret
mov
fmuls
sub
inc
or
js
push
loop
repnz
cwtl
rorl
sbb
enter
je
push
inc
or
cmp
test
mov
sub
dec
sub
and
jge
sbb
pop
xor
mov
sarl
cmpl
ja
xchg
add
sar
inc
dec
cmpsl
sbb
jecxz
pop
hlt
mov
lods
pop
jle
outsl
in
scas
das
arpl
fisttps
sub
xchg
arpl
xlat
pop
sbb
sti
test
inc
stc
stos
clc
xor
cmp
les
sub
nop
cmpsb
or
and
sub
clc
mov
daa
jnp
jnp
lods
sub
mov
sub
adc
xor
inc
xor
dec
test
out
es
or
js
sbb
dec
xor
lret
mov
xchg
enter
sub
push
or
js
push
xchg
aad
jnp
fidivrs
test
jnp
pop
inc
sub
cmp
sub
mov
mov
mov
fwait
mov
enter
inc
pop
dec
or
inc
pop
insl
sub
xchg
mov
mov
call
jnp
imul
sbb
cmp
push
sti
mov
lret
mov
fmuls
sub
dec
or
js
push
sti
mov
mov
cltd
dec
mov
and
in
mov
push
dec
rclb
push
test
cmp
aaa
mov
add
ds
stc
inc
les
mov
stos
enter
imul
xlat
jl
sub
pop
lahf
shll
dec
aad
cmp
cwtl
daa
cmc
popa
inc
inc
fistps
outsb
mov
rcrl
add
fidivrs
and
fwait
daa
aas
jnp
rcll
out
imul
ret
pmaddwd
fsub
jo
sbb
ja
or
mov
push
jecxz
or
mov
in
pushf
sub
sahf
repz
sahf
andb
ret
out
ljmp
iret
xor
scas
test
xlat
sub
loop
stos
sbb
mov
aam
mov
pop
movsb
scas
push
gs
sbb
pop
out
fimull
dec
jae
adc
push
mov
in
jmp
push
cmp
xor
or
dec
mov
frndint
add
out
push
dec
nop
out
andl
shlb
sub
in
lods
daa
clc
fcomp
inc
dec
jae
cmp
in
sbb
icebp
jnp
std
mov
mov
testb
lock
ja
imul
sub
mov
mov
fmuls
xchg
xchg
xchg
push
ficomps
lds
outsb
sub
push
fcomp
sbb
pushf
out
subl
add
jb
jmp
jg
lcall
cmp
ljmp
insl
xor
push
ret
jo
cmp
cs
pushf
enter
sub
inc
fidivrl
insb
mov
push
lods
pop
pop
mov
mov
and
hlt
sub
sub
loopne
mov
and
inc
nop
pop
outsl
jno
stos
adc
loope
rcll
sbb
pop
mov
test
cmp
fnstsw
es
or
jbe
jge
scas
popa
cmp
sub
inc
sahf
dec
pop
add
loopne
js
gs
push
dec
xchg
repnz
dec
pop
js
jbe
adcb
sbb
jmp
mov
fldenv
inc
dec
pop
lds
lods
jne
inc
inc
push
es
inc
add
adc
add
loope
lods
sbb
cltd
ret
insl
shll
mov
jns
clc
aaa
rorl
and
movsb
and
iret
mov
fst
sbb
aas
add
js
push
mov
out
mov
test
insb
nop
out
sub
dec
shlb
jae
mov
nop
mov
push
ret
add
adc
cwtl
rol
sti
sti
sub
cli
sub
imull
mov
out
outsl
push
aam
test
jb
mov
out
mov
pop
pusha
pop
or
mov
push
mov
jecxz
sbb
out
incb
cmpsl
pop
jmp
scas
rclb
jl
movsb
pop
scas
andl
inc
push
iret
lret
add
xor
punpckhwd
sub
sub
push
lea
shr
flds
lds
dec
sti
dec
cmpsl
dec
and
insb
cmp
push
jmp
fdivl
cmc
fs
dec
adc
in
mov
fisttpll
push
mov
movsb
popf
and
add
icebp
jmp
ljmp
xor
jl
loope
stos
test
mov
sub
push
cwtl
mov
cmpb
inc
push
xchg
cmp
rcl
xchg
xchg
mov
cli
movsb
xchg
push
ret
orl
rol
sti
insl
sub
push
adc
movsb
sub
inc
and
sahf
repnz
ror
mov
sub
xchg
shrl
push
lea
sub
lcall
xor
mov
fstpl
je
rcrl
add
pusha
sbb
fsubrs
lret
dec
ret
stos
dec
mov
je
xor
repz
mov
nop
xor
push
add
fcmovnu
out
mov
out
mov
loop
push
pop
add
inc
and
repz
mov
mov
jnp
fsubr
push
js
jg
inc
fistpll
push
pop
or
insl
test
das
add
xchg
lcall
in
mov
test
outsb
loopne
pop
cmp
and
and
mov
inc
pop
jmp
pop
and
cwtl
gs
dec
add
fiadds
or
xchg
add
xchg
add
adc
ljmp
stos
fcoml
das
test
pop
cltd
sbb
cmp
inc
inc
adc
cs
mov
jno
mov
xchg
mov
mov
ljmp
adc
cmp
jl
sbb
sbb
mov
pop
vpmovzxwd
cmp
test
lahf
fs
jbe
ja
jae
push
rolb
cltd
addr16
lock
pop
lret
inc
out
scas
sub
maskmovq
mull
push
inc
lret
test
and
jmp
inc
ficoms
xor
sbb
fisubs
xchg
iret
enter
out
pop
cmpsb
popf
dec
cmp
adc
mov
sar
or
idivb
in
dec
loope
cmp
cld
insb
cmc
daa
in
push
xor
aam
dec
push
push
daa
mov
rcll
sub
and
into
iret
repnz
ret
pop
or
movsl
push
stos
sti
cld
inc
stc
xchg
mov
pop
xchg
fwait
push
jle
stc
sub
sub
jmp
std
dec
cmp
call
dec
cmp
jge
rclb
outsb
out
mov
ja
fcmovu
inc
fcmovnu
add
pop
aad
scas
push
sub
push
adc
mov
dec
lret
xchg
sub
cmp
jp
loop
sbb
test
sbb
mov
dec
addr16
push
sub
les
mov
mov
and
xchg
sbb
scas
loopne
outsl
je
xor
lds
or
int
outsb
inc
cmpsb
or
int
hlt
int3
or
push
push
and
ja
test
dec
ret
cwtl
jne
sbb
mov
ss
imul
sub
fwait
dec
cltd
clc
cmp
xchg
jnp
nop
jecxz
xor
outsl
push
ljmp
imul
mov
xchg
xchg
jmp
sbb
xchg
aas
cmp
mov
dec
fwait
push
jp
cli
test
sbb
xchg
insl
pop
pop
lret
stos
mov
sub
dec
and
pop
dec
adc
sbb
push
pop
popf
xchg
mov
loop
sbb
mov
pusha
dec
or
adc
negl
and
cli
icebp
mov
push
mov
push
cmp
movsb
movsl
xlat
push
dec
stc
insl
push
jmp
mov
ljmp
push
and
mov
mov
push
jbe
cld
stos
mov
xor
push
mov
push
ret
add
pop
pop
inc
sub
jno
mov
scas
cmp
and
int
data16
mov
pop
and
pop
mov
inc
xchg
sub
cld
dec
hlt
sub
fstp
dec
mov
lahf
pushf
test
sub
sbb
cmp
pusha
pusha
pcmpgtb
dec
jmp
fisubrs
mov
xor
shll
inc
leave
enter
cmpsl
imul
imul
mov
das
in
movsl
and
lret
lds
fs
loope
adc
add
cltd
and
enter
jnp
push
mov
adc
stos
mov
mov
test
jns
or
lods
inc
push
jae
push
adc
in
jecxz
or
xchg
data16
xor
mov
cmpb
cmpsl
imul
xor
cwtl
je
push
lret
leave
fmull
add
lods
pop
ss
out
mov
mov
jbe
pop
sub
std
iret
sub
jno
cmp
mov
adc
xchg
jbe
xchg
adc
outsl
dec
jnp
jmp
and
out
popf
lcall
xor
push
ds
loopne
push
rolb
mov
in
mov
add
adc
fucom
xor
jl
mov
test
cmp
adc
mov
dec
dec
repz
shrl
lock
repz
gs
jo
fstps
xchg
mov
int
ret
jecxz
hlt
jns
movsl
xor
in
jns
mov
lods
cmp
fiaddl
outsl
dec
lods
std
out
cs
push
mov
in
push
out
mov
movsl
notb
xor
or
mov
or
rclb
nop
mov
in
loop
hlt
mov
aas
mov
adc
mov
fiadds
pop
movsb
mov
aam
xlat
jbe
xchg
aad
add
aad
jmp
xchg
adc
mov
int3
in
stc
xor
jb
addr16
or
imul
mov
jae
sbb
adc
orb
inc
mov
inc
jmp
mov
push
ret
test
in
and
adc
jge
xor
rcll
aaa
das
test
pop
stos
lock
paddusb
daa
lahf
shll
fldl
adc
dec
pop
mov
lods
pushf
jge
popa
mov
pop
imull
and
cmp
inc
and
sub
imulb
jmp
rep
inc
xchg
out
xor
fwait
mov
aad
dec
xor
scas
sahf
insl
adc
inc
xchg
out
add
or
push
xor
cs
jb
inc
or
add
sub
popa
jno
xchg
xor
jp,pt
bound
jle
jmp
aam
out
daa
stos
outsl
xor
std
xchg
scas
dec
mov
xor
and
mov
mov
cli
outsl
sub
frstor
int
fdivs
xchg
je
aaa
insb
fsts
jno
out
inc
sti
in
sub
rcl
les
xor
push
rcrl
xchg
jg
insl
sbb
fsubrl
cli
push
mov
inc
sub
add
lret
popa
push
mov
imul
cmp
add
loopne
and
flds
pop
into
ljmp
out
jmp
inc
es
cmp
jmp
icebp
pop
cmp
jge
jo
fmull
sbb
push
or
adc
mov
ret
pop
cmpb
imul
mov
mov
andl
pop
sub
mull
mov
xchg
fsubs
xchg
and
aaa
fsubs
shlb
mov
cmp
out
cmpsb
cld
js
push
jno
jp
mov
xchg
js
arpl
mov
and
mov
pop
add
icebp
mov
outsl
imul
push
in
shll
jmp
lcall
inc
arpl
fdecstp
flds
and
into
cmp
arpl
insb
es
rol
stos
popf
sbb
mov
fadds
cmp
mov
ja
insl
test
adc
sbb
push
cwtl
insl
inc
pop
scas
adc
mov
mov
mov
stos
mov
jb
shll
or
cmpsl
sahf
sar
dec
sub
rolb
push
sbb
bnd
mov
stos
cmp
testl
push
mov
imul
dec
sahf
push
insb
pushl
aas
frstor
cli
pop
rclb
bound
dec
xor
mov
pop
cmp
xor
xchg
and
icebp
mov
das
inc
icebp
pop
retw
or
push
jge
push
popf
pop
mov
sahf
popa
adc
push
sti
sub
add
test
cmpsl
bound
scas
add
jmp
ret
aad
mov
and
xchg
pop
cmp
sub
jb
sub
fs
mov
fs
fs
add
in
pop
cmpsl
les
arpl
pop
ror
xlat
js
mov
xor
roll
je
movsl
pop
sub
and
aad
sbb
jg
inc
cmp
sarl
xor
outsb
mov
jle
shrl
jns
inc
inc
cmp
pop
in
pop
data16
add
or
icebp
fucom
jne
dec
pop
lods
jb
sti
mov
insl
fdivrs
xor
repnz
push
loopne
or
cmp
push
jnp
xchg
inc
leave
aas
sub
dec
mov
or
orl
mov
lcall
out
test
xor
push
js
fcomi
jecxz
stos
mov
sbbl
arpl
fiadds
push
outsl
fsts
jmp
sub
lods
mov
ret
sahf
rclb
pop
aad
adc
outsl
cmc
int
dec
rcll
aaa
push
push
dec
adc
cmp
dec
xchg
adc
sub
xchg
and
ret
push
les
xor
pop
cmp
scas
xchg
dec
or
add
dec
xor
leave
inc
sbb
adc
test
jno
and
add
outsl
xchg
cmpsb
jns
pop
or
repnz
dec
mov
xor
mov
pop
shll
bound
jbe
xchg
pop
std
das
cmc
int3
fstl
adc
addl
out
cli
lret
pop
add
jl
inc
ss
xchg
add
push
xlat
cld
popa
stos
arpl
pusha
or
cmpl
lock
arpl
lcall
inc
arpl
ficoml
and
enter
mov
rcrb
movsl
int3
mov
jmp
xchg
cli
mov
or
push
lret
add
insl
sbb
mull
aad
jp
clc
cmpsb
xor
sbb
insl
xchg
cld
test
inc
adc
jmp
mov
jg
lock
sbb
mov
jmp
adc
test
and
jmp
push
mov
loop
or
sbb
fsubrl
inc
cmp
cmp
data16
sub
lea
mov
mov
data16
sub
jne
cmp
add
dec
lret
paddq
cmp
push
jnp
test
lds
incb
cli
jb
pop
pop
mov
mov
sub
push
roll
in
pop
pop
dec
cmp
and
hlt
fisttpll
ret
in
out
dec
push
cwtl
mul
cmpsl
push
cmc
xor
popa
bound
or
or
fdivrs
out
js
push
fdiv
xor
enter
shr
sbb
pop
and
pop
insb
sub
jb
cmp
mov
add
mov
lock
push
call
out
adc
shll
gs
arpl
out
out
lret
mov
into
dec
lret
ljmp
cmpsl
dec
inc
in
iret
inc
in
cmpsl
jle
fdivl
mov
popa
in
dec
dec
push
ret
ds
dec
bound
test
sbb
movsb
lret
sti
xlat
xchg
gs
addl
xchg
xchg
mov
or
es
testb
mov
inc
lahf
mov
cmp
mov
repnz
stos
insl
movsb
cmp
insb
jnp
fnstcw
loopne
stos
aad
lods
subb
lahf
jl
sub
and
test
scas
mov
not
lcall
rorl
mov
hlt
mov
out
dec
push
scas
rolb
cltd
ud1
dec
sti
lds
arpl
and
aaa
addl
divb
inc
mov
jbe
or
sub
dec
xchg
mov
hlt
cwtl
jnp
es
add
cwtl
sub
mov
fcmovne
push
mov
dec
jo
les
push
and
lds
enter
loopne
xchg
xlat
out
stos
jmp
add
or
mov
add
fs
sub
icebp
aaa
imul
sub
lds
or
movsl
xchg
xchg
and
stc
jl
push
popa
ss
stos
push
xchg
mov
inc
lcall
push
push
xchg
aam
lret
test
push
sbb
fnstenv
mulps
test
cmc
mov
fcomp
and
xchg
ret
imul
pusha
in
or
inc
repnz
jns
call
jmp
popl
stos
scas
and
sbb
mov
add
ficoml
lods
pop
xor
pop
mov
pusha
mov
div
repnz
xchg
lock
loopne
pop
aam
loope
cld
lock
or
das
push
lret
xor
xor
and
and
cmc
dec
xchg
xlat
testl
shr
add
cltd
push
cld
in
mov
xchg
fmul
adc
fcoml
ret
mov
ja
loop
or
xchg
js
pop
arpl
icebp
pop
and
or
fdivrp
add
add
cmp
out
in
xchg
ret
ret
inc
cmp
das
mov
nop
inc
daa
and
lahf
dec
das
xchg
adc
loope
sub
or
jno
jne
test
jbe
xor
les
mov
lods
adc
mov
js
lcall
fwait
lcall
lods
sub
into
jle
push
mov
imul
pop
jge
push
cmp
sbb
dec
jno
mov
pop
inc
insb
icebp
mov
sub
xor
call
aas
cmpsb
sbb
sahf
imul
xchg
sti
jb
lret
int
push
inc
pop
cmp
rorb
ret
adc
mov
dec
hlt
fdivp
xor
lcall
fs
and
adc
and
jne
pop
add
insb
pop
scas
popa
mov
out
fcoms
test
fldt
inc
out
bound
insl
xor
cmpsb
loopne
ss
fisttpl
and
leave
repz
icebp
pop
mov
sbb
jmp
dec
dec
mov
scas
xorl
mov
xchg
inc
inc
inc
ljmp
jecxz
insb
xorl
mov
or
pop
ljmp
mov
mov
inc
scas
push
mov
out
popa
push
dec
sarl
mov
imul
pop
push
test
loopne
adc
mov
mov
scas
leave
mov
sub
shrl
inc
mov
sahf
dec
sub
add
add
xor
push
cmpsb
push
test
and
mov
jecxz
das
push
jmp
cltd
adc
xchg
sub
pop
jmp
out
jg
or
xorb
into
aad
pop
fmulp
lea
arpl
repz
in
ljmp
cmpsb
mov
out
pusha
push
subb
inc
daa
push
mov
fs
jg
fs
nop
arpl
xchg
mov
mov
cmp
aad
pusha
lods
lods
cmp
xor
test
subps
mov
inc
leave
subl
mov
lret
stc
popf
enter
jge
push
fidivl
divl
icebp
adc
in
decl
xor
int
push
out
xchg
xchg
xchg
ret
xchg
mov
and
and
in
push
mov
pop
popf
rep
bswap
std
cmp
sar
and
cmc
inc
cmp
dec
sbbl
enter
iret
or
sbb
in
fldl
in
insl
inc
je
test
std
js
nop
pop
roll
lock
sub
jo
sbb
mov
sub
mov
cmp
loope
xchg
into
xchg
jg
push
mov
rcll
popa
mov
cwtl
fsubr
jecxz
adc
dec
test
cmp
sub
notb
adc
inc
mov
aad
out
leave
in
icebp
cmp
add
sub
mov
dec
std
jle
int3
and
outsl
pop
cltd
pop
std
jmp
push
jo
inc
stos
loope
stc
mov
ds
add
sbb
cs
dec
in
jno
cwtl
cmpsb
mov
mov
iret
out
fdivrs
or
xchg
jecxz
mov
jae
mov
mov
mov
fs
dec
jnp
ret
or
or
fnstenv
push
stc
sbb
ja
out
iret
into
std
loopne
add
adc
lods
test
jle
xor
jl
cmp
mov
cwtl
repnz
xchg
imul
xchg
or
mov
fs
push
xchg
lods
int3
dec
dec
pop
scas
loop
xorl
cltd
pop
popl
stc
pop
fists
lds
xchg
and
neg
test
mov
cmp
cmpsb
hlt
inc
mov
and
push
sub
inc
loope
dec
shrl
add
jmp
xchg
mov
ret
xchg
jmp
sub
mov
pop
rcrb
lcall
ret
mov
out
rorb
inc
subb
jb
xor
cwtl
repnz
mov
aaa
push
iret
ror
lret
or
out
fimuls
dec
insl
and
jg
shlb
mov
ret
cld
mov
xchg
pop
rorb
xchg
or
jp
cmc
jo
ds
jp
or
outsb
mov
or
mov
mov
lods
pop
cmpsl
stos
loop
repz
leave
ret
mov
pop
xor
lcall
bound
out
in
push
movsl
adc
sbb
cmpsb
in
pop
lret
jg
inc
jne
push
push
cmpsb
insl
push
decb
mov
inc
std
xchg
fistl
sti
sbb
cwtl
pop
adc
jb
jg
rclb
inc
scas
out
fmul
jle
push
outsl
stos
xor
sub
les
mov
mov
decb
sbb
mov
jecxz
push
insl
cmp
mov
or
mov
stos
in
cmp
push
imulb
sbb
xchg
lea
aas
ret
data16
test
test
jo
mov
push
je
xchg
filds
scas
xchg
cltd
lret
mov
fmuls
sub
dec
or
js
push
sti
mov
lret
mov
fmuls
sub
dec
or
js
push
sti
mov
lret
mov
sub
dec
or
jns
push
sti
mov
lret
mov
pop
or
test
xchg
xor
dec
jg
lock
mov
xor
add
jb
inc
lcall
test
dec
repnz
loop
ret
jg
xor
add
jae
arpl
push
jmp
btr
mov
dec
xchg
pop
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
sbbb
in
dec
mov
mov
sti
jg
push
scas
inc
data16
mov
je
xor
and
jp
xchg
xchg
pop
arpl
pusha
xor
inc
mov
arpl
out
adc
pop
leave
mov
xchg
pop
shrl
sbb
pop
mov
jo
cmc
jecxz
shl
lcall
xorb
mov
fucomip
pop
jg
mov
mov
arpl
dec
xchg
pop
into
push
rolb
jecxz
add
repz
sub
inc
push
xor
decl
dec
pop
mov
insb
mov
pop
mov
jg
mov
addr16
in
push
call
dec
mov
cmpsl
push
jl
loop
mov
sarl
dec
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
ljmp
inc
stos
xor
pop
xorb
aaa
jg
jp
pop
sarb
xchg
movsb
or
jmp
int3
pop
pusha
stos
xor
jge
js
push
hlt
aas
sarl
mov
xchg
call
jbe
jnp
inc
fbld
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
or
jl
les
xchg
cmpsl
mov
loope
push
xchg
outsb
mov
into
cmp
jle
push
or
lcall
js
loopne
shr
leave
clc
dec
push
in
mov
ja
lret
dec
or
jae
mov
nop
jbe
push
fadds
lds
out
cltd
insb
js
cmp
sub
cs
js
aam
mov
test
cmpsl
pop
rcrl
arpl
fwait
rcll
mov
mov
push
in
arpl
sbb
arpl
cld
loop
push
inc
or
and
cld
jo
call
lods
jno
lea
xchg
and
xor
inc
mov
jns
hlt
dec
cmc
stos
call
sbb
iret
and
lahf
mov
mov
inc
xchg
mov
aas
stos
pop
fcoms
shlb
outsl
fs
or
rolb
sub
jb
jle
into
sub
push
xchg
aad
fisubrl
sub
push
cmpsl
sbb
mov
jmp
inc
shlb
ror
or
jns
lea
cmp
lret
mov
shr
stos
adc
xor
insb
dec
pop
pop
xchg
xchg
gs
pusha
cmp
sub
push
mov
dec
push
xchg
insl
lcall
cltd
jp
imul
xor
sbb
push
dec
fsts
ret
mov
fbstp
lea
ljmp
push
out
or
jns
or
mov
push
or
dec
inc
adc
cmpsb
mov
pop
xchg
leave
sub
sti
cwtl
imul
dec
push
leave
cmc
fcomi
pop
mov
pushw
sub
xor
sub
cli
push
pop
and
pop
das
add
test
mov
sub
push
cmc
clc
push
cs
pop
lds
dec
cmpsl
and
cmp
roll
cmp
mov
movsl
jl
xor
fdivr
in
scas
mov
lods
sub
inc
fstpt
jo
jno
mov
adcb
push
aaa
adc
jnp
sti
pop
les
sub
leave
or
mov
adc
scas
push
mov
mov
push
nop
cmp
jne
pushf
push
ljmp
mov
call
aad
cld
int
int
es
pushl
leave
push
add
daa
jle
hlt
cmpsb
mov
sub
negb
sbb
mov
mov
repnz
cmc
scas
jne
xchg
sbb
sbb
movsb
adc
jnp
pop
jns
mov
fbstp
sub
movsl
stos
mov
ret
jmp
push
push
leave
inc
icebp
xlat
and
mov
stos
mov
mov
pop
xchg
or
sbbl
je
jne
js
gs
loope
inc
cmp
xchg
jmp
lods
into
mov
cmc
sbb
and
mov
push
jg
ds
out
jae
xor
sub
rcl
or
nop
bnd
dec
cmp
mov
xor
push
imul
mov
adc
lcallw
loope
mov
cltd
sbb
mov
mov
jnp
fisubs
outsl
leave
out
push
pop
or
popf
pusha
xchg
jae
mov
ret
mov
xchg
std
jns
inc
sub
pop
xchg
imul
sbb
out
dec
xchg
mov
loop
mov
out
add
ret
shl
cmp
sbbl
js
add
cmp
dec
sub
out
iret
xchg
ficoms
jno
xchg
movsb
daa
cld
xchg
cmpsl
je
mov
repnz
inc
subl
fwait
xchg
mov
dec
ds
cmp
test
ljmp
sti
pop
aam
imul
xchg
cmpsb
lret
jg
dec
std
mov
sub
es
xchg
jle
push
das
xchg
xor
es
or
xchg
cmp
int3
jmp
mov
out
bound
imul
and
pop
test
mov
sti
rcr
adc
dec
xor
in
insl
push
push
bound
lods
scas
cmp
iret
faddl
ds
pop
aam
sar
ss
stos
mov
pop
mov
ss
push
scas
adcl
add
js
jmp
or
stos
mov
cmpsl
and
add
fwait
dec
xor
das
lahf
sbb
sbb
cwtl
mov
adc
adc
mov
loop
push
lods
push
push
daa
add
test
cmc
mov
sbb
outsl
jns
iret
pop
adc
and
stos
in
and
rorl
movsl
lahf
hlt
insb
fsub
mov
leave
sbb
push
pop
cs
pop
into
mov
in
call
inc
xor
scas
pushf
jno
jge
call
in
inc
dec
sub
mov
xor
mov
pop
loopne
sub
mov
sbb
lds
lret
imul
and
jne
sti
push
js
pop
pop
mov
add
or
test
xchg
push
sbbb
arpl
and
rcrl
cmc
cmpsl
repz
sti
jmp
mov
mov
into
or
movsl
int
adc
adc
dec
add
jnp
jns
idivl
mov
ret
test
subl
and
fiadds
test
repnz
shl
sub
mov
push
xchg
pop
inc
jge
pop
mov
cmpl
mov
das
xchg
jb
pop
sbb
sti
imul
shl
xchg
lret
outsl
xchg
push
add
fstl
xchg
jl
rclb
test
aad
adc
pop
xchg
fcmove
mov
xchg
dec
enter
js
and
and
xor
xchg
sub
xorl
push
xor
outsl
in
sarb
nop
xor
ja
jmp
push
xchg
test
scas
mov
push
xchg
iret
int3
mov
jge
pop
pusha
mov
sbb
daa
cmp
mull
dec
dec
bound
adc
inc
das
lds
ss
shld
nop
mov
iret
pusha
lahf
in
xchg
cmp
mov
subb
adc
fiaddl
cltd
incl
rolb
pop
pop
sar
bound
call
pushf
or
cli
mov
dec
ljmp
mov
jns
pop
and
sahf
pop
or
repz
iret
sbb
inc
pop
jbe
inc
mov
and
push
rol
int
jnp
cld
sahf
push
scas
addr16
lahf
pmuludq
jbe
or
mov
out
mov
push
mov
fmuls
js
jg
hlt
jns
cmp
cwtl
pop
test
jge
outsl
scas
mov
inc
sarl
pop
incl
outsb
clc
jb
pop
sbb
mov
adcl
cmp
shl
xchg
out
sub
sbb
or
ds
in
clc
cmp
in
dec
mov
aaa
jg
ret
push
jg
sbb
out
cli
sub
loopne
stos
aaa
ljmp
mov
mov
movsb
lret
sar
adc
sbb
sub
and
dec
mov
sub
ret
inc
mov
lcall
jno
popa
xlat
jp
lcall
xchg
fnstcw
iret
dec
cmpb
js
and
inc
fwait
sub
in
pop
or
lods
aad
je
sti
mov
decl
pushf
divl
ja
lods
das
inc
cmc
fdivrl
lahf
fs
scas
fidivrl
sbb
int
lds
inc
xor
add
jl
sbb
or
ret
addl
add
enter
stos
cmc
mov
outsl
cmp
adc
cli
icebp
pop
hlt
jbe
gs
incb
shll
mov
xor
jp
inc
arpl
out
imul
push
sarb
repz
dec
jbe
add
mov
mov
insl
sbb
add
cmp
cmp
lods
ss
cwtl
add
outsl
or
aad
movsb
inc
adc
movsb
hlt
loope
stos
cs
insb
mov
out
and
stos
je
pop
push
imul
push
fcompl
and
xor
fcmove
pop
push
shlb
shlb
inc
mov
push
sub
add
cld
pop
lds
mov
and
scas
int3
xor
in
mov
subb
or
mov
in
mov
popa
adc
lret
jo
lret
sbb
add
xor
fs
pop
push
adc
in
sbb
loope
lds
movsl
aas
fwait
out
add
js
add
sbb
clc
jbe
addr16
jb
lcall
cmp
adc
dec
lea
lds
fidivrl
mov
and
je
xchg
sbb
bound
push
sti
fucomp
popf
fcomps
mov
push
outsb
xor
mov
adc
sahf
cmp
mov
mov
scas
test
aas
inc
push
fwait
jle
jecxz,pn
lret
add
mov
cltd
std
mov
inc
and
sub
pop
mov
jo
je
jno
sub
push
mov
mov
push
or
cwtl
aaa
insl
jge
stos
dec
lea
nop
sbb
sarb
pop
add
xchg
outsb
jg
add
mov
lret
sti
fwait
dec
mov
mov
fldt
push
mov
data16
adc
adc
rol
push
dec
sbb
push
jae
aad
or
pop
xlat
push
mov
fstpt
insb
cmp
out
mov
sbb
ss
xor
pop
adc
cld
int
dec
pop
push
xchg
pop
inc
pop
mov
not
subl
jbe
outsb
sahf
inc
aad
mov
adc
aas
std
cmp
fsubr
repz
ja
movsl
pop
xchg
in
mov
inc
mov
mov
stos
insl
lret
or
dec
xor
sub
cmp
sbb
inc
movsb
push
iret
pop
xchg
push
adc
xor
mov
or
inc
inc
mov
je
insl
push
std
jno,pn
repz
or
repnz
nop
lods
push
mov
mov
mov
dec
in
xor
movsb
or
push
or
test
in
mov
pop
lcall
xchg
mov
pusha
out
add
sbb
int
push
enter
adc
pop
xor
mov
mov
sti
adc
xchg
int3
jbe
mov
push
xor
pop
les
ja
cltd
pusha
testl
addps
lahf
lcall
xor
push
js
ljmp
shll
loope
cs
mov
scas
mov
lock
enter
or
xchg
mov
mov
xor
ret
mov
jo
into
push
dec
mov
dec
in
mov
out
mov
sub
sbb
xchg
sub
hlt
mov
pop
mov
dec
xchg
mov
jb
pop
sub
and
cmc
into
and
sub
bound
pop
mov
xor
push
sub
sbb
jnp
ret
xor
sub
mov
imul
fs
sarl
push
xorl
out
cld
icebp
addb
xchg
loop
mov
rolb
fisubrl
xchg
jg
jg
shll
sub
hlt
or
daa
xchg
in
adc
dec
sbb
les
inc
shrl
js
fisttpll
fldl
xor
xor
icebp
xorl
push
add
ja
loope
inc
mov
dec
and
adc
push
mov
fbstp
loopne
xor
gs
loop
mov
jae
int
mov
inc
push
gs
nop
pop
daa
and
and
rolb
test
popf
mov
push
add
je
sbbl
jg
lret
pop
push
stos
mov
pop
popa
cld
mov
sti
xchg
and
jecxz
add
lahf
inc
cmpsl
jb
or
int3
inc
imull
jo
adc
enter
mov
mov
and
sti
in
rcrl
fxtract
cli
cmpsb
push
out
in
rcrl
jno
mov
ss
push
sbb
js
mov
mov
mov
movsb
jg
fistpll
test
lret
shlb
cwtl
fwait
mov
outsb
mov
push
and
xchg
or
dec
out
sbb
inc
sub
sbb
mov
shll
cs
cmc
xchg
mov
lods
dec
jb
sti
fistpll
imul
mov
or
jo
jbe
icebp
jns
pushf
scas
sbb
imul
xor
adcl
mov
xchg
jbe
das
pop
adc
adc
lret
jns
sbb
push
cmpsb
scas
push
inc
mov
sbb
cmp
dec
shll
ret
test
das
cmp
clc
sbb
xchg
adc
xor
jno
pop
adc
mov
mov
js
jae
mov
loopne
cs
sub
pop
ss
das
push
push
push
dec
cld
add
pop
mov
pop
lahf
and
repz
xchg
jb
lock
arpl
dec
xchg
jmp
xor
mov
and
sbb
stos
clc
cmc
jg
jmp
cs
divl
jnp
outsl
pop
ffreep
outsl
orb
cs
mov
out
ss
mov
movsb
shlb
in
xor
ficomps
push
lds
mov
dec
sub
push
dec
outsl
dec
xor
jb
jle
lcall
sbb
aad
ss
ds
jnp
pop
push
out
movsb
insl
mov
ficompl
repz
ret
daa
dec
cmpsl
sub
mov
sbbl
mov
js
adc
bound
nop
add
inc
xor
pop
xlat
jo
in
insl
subb
xor
pop
lods
jp
push
xor
pop
push
or
ja
cmp
ljmp
lock
outsl
jmp
aas
data16
ljmp
loop
push
shlb
adc
mov
sub
xor
clc
int
mov
cs
dec
xchg
sbb
xchg
loopne
insl
mov
or
mov
hlt
cli
call
mov
dec
rep
adc
dec
cmp
jp
subl
outsl
inc
adc
adc
xor
xchg
es
je
loopne
jl
adc
jae
cmp
fnsave
push
xchg
mov
loope
adc
inc
push
nop
adc
xor
xor
dec
mov
jmp
mov
subb
add
dec
mov
ss
ficoms
inc
pop
cs
es
jbe
push
and
cmp
and
mov
mov
cmpb
push
sbb
and
jl
rorb
push
or
decl
adc
xor
outsl
js
sbb
jb
jge
push
mov
push
and
mov
imul
jmp
push
movsl
mov
xchg
lods
mov
xor
repz
mov
mov
fs
aaa
stos
nop
fisttpl
inc
out
dec
test
stos
and
cmp
xor
pop
xchg
cmc
insl
shlb
popf
fidivs
xlat
jnp
mul
inc
scas
lret
and
ljmp
pop
or
insb
sub
lcall
sbb
int
and
push
lods
popf
aad
pushl
pop
mov
sub
sbb
inc
pop
jg
mov
cltd
jb
lret
push
loope
xor
sbb
data16
mov
push
add
xlat
and
test
insl
jb
cld
adc
fisttpll
mov
push
push
inc
pop
or
and
dec
lcall
cmpl
enter
movsl
fcompl
aaa
xchg
loop
push
cwtl
mov
imul
movsl
jae
sbb
inc
or
rorl
jg
iret
xlat
scas
stos
jae
pop
leave
enter
ljmp
add
imul
dec
in
lret
int3
arpl
xchg
mov
pop
sub
incb
push
pop
test
push
push
pop
nop
es
loope
shrl
pop
mov
xor
cld
fcmovbe
fldl
xor
es
pop
xchg
mov
gs
xor
cmp
xor
movsl
ficoms
cltd
int3
cli
iret
test
fidivrs
call
popf
pop
push
icebp
movsl
dec
add
or
xchg
mov
mov
dec
faddp
iret
jle
sbb
sbb
rclb
pop
mov
cli
xor
dec
sub
sub
mov
pop
sub
jge
jbe
jns
xor
cltd
inc
push
repnz
fmull
leave
jo
aam
jb
adc
lock
cwtl
loope
inc
sbb
outsb
sub
or
jle
inc
mov
std
sub
lock
mov
and
and
imul
pop
inc
cmovno
popf
insl
xor
adc
lds
pop
sbb
or
ds
mov
xchg
inc
and
inc
fimuls
sbb
scas
sbb
fldt
xchg
nop
clc
aam
fwait
jge
popa
cli
movsb
adc
mov
cmp
inc
in
dec
jne
dec
fdivs
sahf
clc
pop
movsl
insl
mov
repz
jno
dec
vmulpd
fdivl
cwtl
cmp
lcall
roll
lret
adc
add
nop
or
test
xor
jae
enter
or
dec
test
mov
mov
fidivs
mov
push
sub
mov
sbb
cs
mov
jns
bound
xchg
loopne
insb
mov
jnp
mov
popf
xor
cwtl
shll
cld
insb
lea
add
mov
iret
sub
pusha
leave
iret
sti
mov
insl
push
xor
push
leave
add
cs
lds
jecxz
sbbb
mov
outsl
cmp
xor
adcl
adc
es
jecxz
push
push
lock
mov
in
fildl
inc
loopne
mov
pusha
sahf
out
mov
adc
loop
daa
js
scas
ss
aas
jne
mov
inc
jp
movsb
mov
int
sar
in
clc
nop
inc
mov
ja
aaa
push
cmp
or
addr16
mov
aaa
stc
cmp
xchg
adc
push
or
sahf
lcall
jne
sahf
nop
ss
movsb
jo
add
es
xchg
ja
xor
in
inc
fsubs
xchg
aam
adc
inc
pop
cltd
fs
jae
shll
fsubl
add
push
orb
add
jle
mov
je
in
cmp
sbb
cmpsb
andl
xor
and
mov
fwait
push
aaa
lret
rcr
lods
sbb
rolb
gs
adc
or
mov
stc
inc
push
mov
leave
fs
aaa
and
mov
sbb
xchg
in
sub
outsb
or
mov
mov
xor
push
push
mov
xchg
pop
or
fistpll
xchg
add
inc
mov
pop
pop
mov
dec
sub
push
pushf
mov
push
cli
mov
dec
into
test
outsb
lock
sub
mov
push
cmp
rorb
mov
xchg
add
addr16
xchg
jbe
cmp
int3
je
fistl
fimuls
sub
xchg
sbb
adc
fildl
xchg
pop
inc
xchg
mov
ret
add
cwtl
jmp
imul
daa
sub
mov
nop
push
std
xor
mov
fisubrl
sbb
sub
nop
lcall
cmp
adc
push
into
nop
movsb
dec
ljmp
sub
mov
cltd
cmp
push
imul
push
jmp
nop
insl
dec
ret
movsl
mov
test
ja
push
mov
pop
add
xor
push
loopne
stos
fnstsw
outsl
and
mov
add
lea
pop
xchg
int3
pushf
cmp
fstps
cmc
or
daa
push
enter
popa
lods
xorl
xor
sarl
stos
jp
dec
out
mov
gs
add
and
pop
nop
pop
jge
xchg
in
aas
push
pop
lret
enter
mov
push
xchg
sti
add
test
inc
jns
andb
movsl
xchg
pushl
dec
xlat
mov
pop
ljmp
stos
push
mov
out
push
aas
and
xor
dec
sbb
loope
bound
insb
mov
pushf
mov
mov
insb
fsubl
pop
cmpsl
push
jno
stos
idivb
mov
movsb
test
sbb
cmpsl
mov
scas
js
jg
mov
cmp
andl
push
mov
xchg
daa
sbb
adc
add
push
mov
mov
mov
pop
movsb
in
mov
testb
cs
and
jmp
nop
ss
cmp
add
mov
mov
mov
jae
xchg
stc
sub
notb
jle
arpl
jl
add
mov
xor
aas
jne
mov
or
sub
sbb
or
dec
mov
xchg
xor
shrb
push
loop
and
dec
lods
xchg
cli
adc
dec
lahf
clc
xrelease
pop
fistpl
movsl
cli
lods
mov
into
ret
sbb
ret
jno
jl
jns
nop
adc
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
jg
lock
or
jnp
sbb
sub
cmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
pushf
js
sbb
hlt
sub
cmp
or
sbb
insb
call
pop
pop
lods
sub
in
push
fdivrl
or
sbb
insb
call
pop
subb
data16
or
inc
int3
dec
test
sbb
sub
pop
push
lods
fs
jecxz
int
sub
adcb
fdivr
mov
xor
pop
add
neg
inc
int3
sahf
aam
aam
cwtl
ljmp
aad
lds
or
mov
fcomps
or
insl
jnp
lock
sub
out
shrl
loope
insl
lods
mov
in
inc
aas
std
inc
in
xchg
push
and
repz
pop
push
call
rol
dec
and
arpl
ret
pop
cwtl
shrb
imul
call
rol
cmp
xchg
jge
mov
cmp
sbb
sbb
fcomps
pop
arpl
pushf
pushf
in
adc
pop
int3
out
fdivrl
xor
or
sbb
insb
loop
ljmp
mov
pop
addb
sub
dec
mov
fs
pop
mov
lods
sbb
push
imul
lods
mov
cli
dec
cwtl
insl
lock
ja
or
in
out
jns
pop
stc
sub
push
fdivrl
or
sbb
insb
call
pop
cmp
pushf
js
push
fdivrl
or
sbb
insb
call
pop
cmp
mov
sbb
into
pop
sti
xchg
mov
jns
cmp
nop
dec
adc
stos
jno
and
lock
lods
sti
adc
jno
lods
addr16
inc
out
mov
fsts
or
jo
xchg
out
sarb
mov
adc
pop
es
in
ljmp
fisttpl
popf
fldenv
mov
nop
pop
outsb
loop
rolb
and
push
cwtl
adc
lock
lods
pop
add
stos
insb
dec
int3
aaa
push
mov
push
pop
mov
and
aas
dec
in
mov
sub
jb
nop
popf
push
jge
fadds
shrb
dec
mov
sbb
mov
sub
and
push
push
outsl
mov
mov
inc
icebp
dec
insl
mov
jne
sbb
push
loop
pop
in
in
es
mov
das
dec
jae
dec
push
pop
mov
or
shrl
pop
inc
int3
sub
data16
in
shll
xchg
movsl
dec
cmpl
cs
sub
push
mov
ret
inc
in
cmp
jp
rcll
iret
and
cs
mov
mov
cmp
adc
mov
xchg
xor
push
inc
daa
ss
inc
lods
int
xlat
aaa
fs
fiadds
xor
dec
add
add
xor
pop
aaa
sbb
out
sub
movsl
dec
leave
lods
cwtl
test
jo
or
mov
pop
frstor
mov
add
int
xchg
sub
faddl
sti
sarb
sub
push
fmul
aas
xchg
fcomps
pop
push
mov
sbb
and
mov
shll
dec
pop
xlat
iret
repz
mov
mull
and
mov
jmp
adc
out
jmp
xchg
incl
adc
out
js
cli
inc
dec
sbb
je
lea
cmpsl
out
pop
movsl
outsb
mov
lahf
out
cld
int
cmp
sbbb
and
loope
add
xor
ret
and
arpl
jmp
mov
and
lods
pxor
adc
nop
pusha
or
inc
loope
cmp
subl
inc
push
in
inc
aad
shl
sub
cmp
sbb
xor
ret
adc
mov
xchg
fwait
jb
leave
xor
sti
inc
jae
lds
xor
nop
in
test
cmp
pop
ds
mov
mov
cmp
adc
fwait
cltd
and
test
add
cmp
clc
jnp
fistpl
and
and
xchg
pop
cmp
int3
adc
mov
pop
daa
sbb
cli
adc
pop
or
and
dec
pusha
pop
xchg
mov
pop
repz
mov
mov
jge
dec
and
sbb
jo
push
stos
stos
jne
test
adc
aaa
fcomi
and
inc
jle
jecxz
loope
mov
jle
push
data16
mov
inc
ficoml
lahf
inc
xchg
rcrb
xchg
add
cli
or
inc
sbb
stos
add
lcall
or
and
movsb
sub
xchg
push
lods
scas
subb
pushf
scas
xchg
pop
push
mov
pop
xchg
mov
or
add
inc
jmp
mov
cmp
pop
dec
lods
xor
pop
or
mov
mov
xchg
stc
outsl
lock
mov
dec
dec
jmp
hlt
dec
bound
or
in
and
clc
int
push
fbld
and
pop
test
test
add
lods
addr16
mov
cwtl
rcll
push
inc
divl
mov
orb
push
int
cmp
mov
cmp
xor
es
xchg
lret
adc
xor
stos
mov
push
cmp
cld
mov
cmp
sub
dec
pop
xor
fdivrs
adc
mov
inc
sahf
cltd
inc
inc
xor
in
lods
jnp
mov
fdivr
mov
loop
xor
cmc
cld
mov
mov
test
adc
lret
mov
dec
cmc
cltd
cmp
adc
push
mov
sahf
push
mov
push
sub
pop
adc
ss
in
jno
pop
sahf
mov
je
cwtl
mov
sahf
mov
in
push
jp
ds
and
jb
mov
cwtl
je
push
push
fists
je
mov
adc
dec
les
stc
std
dec
shl
jne
rorb
mov
lret
mov
jecxz
add
fpatan
repz
push
xchg
subb
shl
push
cwtl
leave
int3
inc
pop
mulb
insb
jmp
and
enter
pop
xor
sbb
mov
xor
mov
aam
jl
and
jae
leave
out
lret
in
pop
adc
cmpsl
push
call
popa
xlat
out
add
sahf
push
mov
dec
cmp
out
jno
fimull
enter
das
mov
inc
and
arpl
jecxz
inc
or
test
mov
add
jo
in
lods
fs
js
ss
sub
jl
repnz
int3
or
push
or
daa
cmc
add
jno
xlat
mov
mov
iret
out
test
cmp
sub
inc
ljmp
push
cld
rcrl
adc
dec
out
pushf
ja
sub
dec
push
cwtl
add
mov
sub
jge
or
mov
sbb
inc
out
int
aam
fwait
xchg
mov
jo
lds
adc
loopne
jno
cmp
cmp
std
add
iret
outsl
mov
sbb
mov
rcrl
test
lods
ffree
inc
ss
out
mov
mov
or
xor
std
add
inc
in
fwait
lods
mov
mov
enter
push
cltd
fmuls
inc
shrl
test
jo
lret
pop
push
push
cmc
loope
jne
std
test
jno
add
aaa
inc
pushf
push
inc
pop
and
lods
sub
loopne
call
push
jnp
and
out
push
jmp
repnz
push
mov
loopne
addb
inc
loope
xchg
andb
in
pop
cmpsl
pushf
aaa
and
rcrb
fcoml
and
lods
fptan
loop
repnz
cltd
test
cwtl
call
mov
out
push
test
int3
cmp
xor
mov
fidivs
push
xchg
dec
stos
cmp
inc
mov
cmp
push
mov
jae
xor
xchg
stc
aas
bound
cmp
mov
adc
and
cltd
add
push
xchg
add
mov
pop
xchg
pop
les
mov
lret
xchg
cs
rol
sar
test
into
cmp
loopne
int3
aam
ret
mov
or
sub
adc
pop
adc
nop
dec
adc
lods
test
jmp
mov
popa
loop
mov
xor
push
xchg
dec
mov
push
rclb
sarb
pushf
mov
fsub
push
dec
dec
sub
pop
les
push
test
or
push
jmp
jg
daa
adc
test
mov
push
mov
ja
pop
jge
test
mov
std
int3
push
lahf
insl
mov
inc
xchg
loopne
test
shlb
loope
lds
inc
mov
pop
aam
inc
dec
mov
mov
out
mov
mov
adc
punpckhwd
sbb
or
sub
mov
mov
push
aas
ss
mov
mov
dec
loope
into
and
fmull
shrb
dec
sbb
jo
mov
rolb
movsb
cltd
ficompl
addr16
dec
stos
push
push
cmpsl
lods
nop
aad
jmp
inc
and
jecxz
movsb
movsb
xor
jno
dec
ret
jb
and
jle
enter
fsubrl
daa
inc
add
std
cmp
leave
andl
xchg
jle
ret
mov
inc
pusha
ret
hlt
stc
std
cmp
orl
ljmp
scas
insb
gs
lock
mov
cmc
out
mov
and
jbe
lea
sarb
leave
jnp
and
daa
sbb
inc
jle
jo
cmp
pusha
mov
int3
inc
dec
lret
lock
pushf
push
mov
mov
adc
dec
add
cli
adc
mov
cmpsl
jnp
or
push
sub
fistpl
ljmp
aas
out
cwtl
inc
fmul
ss
es
inc
cmp
in
sarl
jne
dec
or
jns
dec
mov
cld
mov
or
faddp
xor
cmp
inc
cmp
jnp
xchg
mov
jp
mov
pushw
mov
int
clc
xchg
push
out
dec
sub
arpl
out
pop
sbb
fld
aas
aad
arpl
jbe
cmp
in
pop
cmpsb
pop
add
insb
gs
imul
mov
mov
stc
push
push
daa
xlat
loopne
cmc
roll
mov
out
fcmovb
adc
dec
scas
adcb
jl
sbb
dec
jge
outsl
les
out
cmc
cs
mov
rcl
fs
test
stos
stos
sub
mov
pop
movsb
xor
call
outsb
fldenv
leave
popa
addb
aad
in
js
inc
xchg
fcoml
addr16
mov
test
repnz
fsubrs
aad
scas
adc
js
or
mov
inc
and
xor
scas
xchg
fcompp
rorl
mov
lcall
add
aam
jg
mov
sub
les
mov
loop
push
and
sbb
dec
fwait
mov
repz
out
nop
mov
pop
outsl
lock
xor
mov
push
fdivrp
push
daa
mov
xor
pusha
xchg
inc
loopne
daa
push
iret
int3
scas
adc
rorb
loop
push
dec
push
mov
stos
xlat
or
sbb
js
xor
enter
js
jmp
test
inc
xor
scas
imul
jl
fistpl
or
outsl
enter
jns
sub
adc
inc
mov
mov
cltd
add
std
inc
jb
pop
pop
lods
cmc
sbb
jae
cs
or
or
fimuls
mov
mov
in
pop
jnp
jecxz
pop
aaa
sbb
sbb
subb
sub
out
int3
into
xchg
jmp
dec
mov
jo
lods
jmp
std
mov
div
lds
dec
jecxz
xchg
test
cvtps2pi
mov
adc
dec
arpl
inc
stos
popa
in
push
xor
adc
aam
mov
push
pop
sub
mov
pushf
push
loop
pushf
bound
jne
push
mov
lcall
mov
mov
ret
sub
add
or
into
lret
pop
les
xchg
xor
mov
repz
out
mov
loope
fldl
sbb
repnz
jge
inc
or
xchg
repnz
mov
xchg
push
or
pop
popf
xor
lret
cld
sub
adc
out
popf
sahf
rorb
xchg
lods
or
mov
push
fistpl
xchg
cmp
cmpsl
orb
testl
xor
aaa
or
mov
ljmp
and
adc
cmp
push
adc
mov
inc
and
dec
sbb
mov
je
pusha
adc
and
push
addb
inc
repnz
inc
mov
dec
addr16
dec
mov
out
inc
rorb
pop
orb
sub
lods
notl
cmp
loop
xchg
fistpll
aam
xor
js
or
xchg
sub
ffreep
or
mul
adc
orl
popa
cmpsb
popf
icebp
loop
cmp
mov
aaa
push
xor
xchg
cwtl
mov
out
cli
push
jb
dec
push
sbb
int
lcall
int3
clc
adc
repnz
mov
dec
repnz
out
out
xchg
fs
xchg
test
popa
je
jg
cltd
add
addr16
mov
pop
fmuls
dec
or
jge
lds
lret
inc
or
pop
scas
dec
sbb
mov
jge
rclb
dec
mov
movsl
pop
xchg
or
push
xchg
out
fstpl
bound
cmpsb
stos
ss
push
dec
das
iret
addl
add
cmp
mov
mov
xor
aaa
push
call
js
mov
popf
xchg
pop
xor
pop
lods
sti
push
add
mov
in
mov
adc
mov
out
inc
sbb
sbb
outsl
jns
jle
mov
mov
adc
das
and
faddl
cli
dec
xor
ror
insl
shlb
mov
xchg
cltd
mov
jnp
adc
mov
out
sub
xchg
mov
xor
into
sbb
adc
addb
adcb
movsb
or
and
shrb
xorl
out
jnp
mov
lret
push
push
loopne
pop
or
mov
jo
jne
fdivrl
aam
or
jge
dec
dec
xor
addl
loope
or
xlat
dec
mov
inc
aad
sahf
or
ja
fwait
mov
test
jne
shlb
movsl
nop
mov
sahf
push
push
enter
lret
ja
aad
call
rcl
mov
or
inc
cld
stc
xchg
push
mov
and
fisubs
add
in
mov
jnp
push
sti
jbe
mov
movsb
xchg
lret
scas
and
mov
dec
add
popa
push
push
addr16
xchg
or
sub
sahf
adc
mull
push
inc
lea
rcll
loop
enter
or
dec
rcrl
test
and
jne
scas
das
popa
or
mov
pop
into
xlat
cmp
out
xchg
int
cmpsb
or
adc
dec
pop
or
jbe
je
aad
cltd
mov
sub
mov
push
out
test
dec
add
dec
or
pop
movsb
inc
adc
bound
movsl
xor
jecxz
sub
sbbb
sbb
mov
mov
xchg
mov
adc
cmp
fistl
dec
xchg
mov
shrl
push
cmp
mov
or
mov
lret
pop
negl
add
dec
sbb
imul
mov
into
outsb
ja
lock
push
mov
mov
rol
mov
dec
and
push
cmc
in
scas
or
repz
jle
cs
ss
inc
sub
inc
adc
into
mov
xchg
jp
lret
dec
push
pop
mov
push
clc
retw
mov
arpl
aad
in
pop
pushl
mov
push
cltd
mov
fisubrs
mov
pushf
sub
jecxz
fucomp
cmpsb
pop
mov
cmp
popf
in
mov
pop
test
mov
rclb
icebp
stos
das
leave
scas
cmp
cmp
stos
nop
xchg
clc
mov
add
outsl
pop
mov
cmp
mov
out
dec
sub
ss
shlb
push
push
loope
sbb
mov
cmc
jbe
add
pop
or
das
mov
adc
dec
push
mov
inc
sbb
pop
or
prefetch
adc
dec
sahf
cmp
clc
lret
mov
call
or
pop
jge
xor
ljmp
lcall
sbb
movsb
dec
fucom
pop
xlat
ret
push
jecxz
adc
xchg
dec
sub
inc
iret
mov
sbb
and
roll
loop
or
dec
aaa
filds
test
lret
xor
xchg
dec
out
mov
mov
inc
ret
dec
jnp
pop
shlb
inc
pop
mov
into
loopne
lret
flds
add
movsl
xchg
pop
jle
lret
aaa
or
adc
es
pop
sub
or
xorl
sub
push
add
cli
cli
or
stos
adc
add
adc
sahf
cmp
dec
adc
test
xor
stc
lods
cmp
cwtl
dec
mov
xchg
mov
sbb
test
pop
ss
nop
adc
mov
and
add
dec
sbb
insb
sub
sub
inc
adc
lock
add
inc
mov
stos
repnz
mov
mov
jne
mov
movsl
push
sbb
inc
mov
aas
clc
out
sub
cltd
sub
mov
mov
pop
int3
addb
or
sub
pop
or
or
je
das
pop
adc
test
jg
mov
rcll
test
das
cmc
cmp
dec
imul
nop
add
push
mov
sahf
test
std
adc
lods
ljmp
jecxz
mov
mov
pop
mov
jno
or
lods
xchg
or
insl
pop
jo
pushl
ret
mov
or
mov
dec
xor
mov
imul
dec
mov
bound
pop
sbb
call
inc
lds
push
xchg
out
fbld
inc
add
xchg
test
out
fs
push
inc
jp
mov
mov
lret
mov
push
inc
cli
mov
pop
leave
lcall
xlat
mov
div
or
das
psllw
xor
jl
cmc
lahf
xchg
sub
das
clc
adc
push
fnstcw
pusha
jmp
push
pop
add
jecxz
mov
cld
or
push
clc
mov
ret
cmp
sti
fists
xor
push
add
add
pop
pop
add
mov
cmpb
adc
popf
add
psubq
cli
ja
mov
clc
dec
imul
adc
cmc
cmp
mov
sbb
cli
lret
stos
adc
pop
sub
insl
sbb
dec
mov
popa
xlat
jns
mov
dec
jno
insl
es
pop
movsb
test
pushf
pop
xor
mov
inc
outsb
mov
scas
mov
mov
xchg
jb
mov
adc
mov
xor
push
xchg
inc
leave
es
imul
test
jbe
scas
dec
xor
sub
inc
sub
jmp
fwait
call
jo
xor
enter
mov
inc
daa
lcall
std
dec
lar
rorl
hlt
lret
aaa
push
aaa
outsl
cmp
mov
pop
mov
mov
into
lcall
subb
dec
adc
inc
out
lcall
add
gs
adc
clc
imul
cmpl
mov
hlt
sahf
mov
cwtl
and
pop
xor
ljmp
popa
mov
push
cli
ja
es
and
cwtl
divb
xchg
cmpsb
lods
lock
icebp
cmc
roll
sbb
sti
loopnew
mov
mov
or
push
push
fiaddl
out
adc
sbb
ds
or
cmp
jb
xor
jmp
aaa
les
loope
pushf
jge
sbb
adc
cld
nop
test
int3
xchg
fs
loop
je
jno
cli
into
jl
cld
sub
movsb
jns
movsl
sub
push
or
or
in
mov
adc
adcl
push
inc
dec
insb
jbe
std
dec
andb
jp
dec
add
dec
aam
push
sbb
insb
mov
jbe
jg
je
adc
insl
rcll
cmp
scas
ss
out
push
adc
sbb
jne
enter
out
mov
jno
sub
cmpsb
popf
xchg
add
bound
pop
dec
push
cld
clc
adc
movsl
xchg
xchg
xchg
shrb
les
fdivs
nop
mov
cld
jns
adc
jne
mov
mov
xor
out
inc
pop
dec
ret
mov
sbb
or
add
rep
mov
popa
insb
addl
jl
add
mov
ss
mov
pop
cmp
and
jbe
xchg
sahf
xlat
mov
adcb
mov
outsw
sub
std
ret
gs
fbld
bound
aas
xchg
cwtl
cmc
dec
inc
inc
jnp
ljmp
sbb
fisubs
push
popa
js
push
add
push
loop
dec
mov
movsb
ljmp
cmp
lock
push
out
sub
ds
inc
dec
xchg
scas
mov
mov
add
stos
mov
or
test
xchg
shll
jmp
ficompl
dec
out
loop
mov
mov
push
dec
dec
sub
jmp
inc
les
add
pop
arpl
scas
mov
leave
xchg
cmp
lret
iret
jmp
popl
lock
cli
fistpll
dec
clc
xchg
jg
xchg
andl
mov
enter
push
mov
icebp
adc
mov
lea
push
fistl
pop
lock
adc
cmp
sub
jecxz
mov
jg
fwait
jmp
fmull
in
mov
adc
pushf
cld
test
push
push
stos
popa
pushf
dec
movhps
aad
jae
setle
jecxz
andl
pop
repnz
mov
femms
sbb
mov
pop
cmp
into
push
ja
call
push
ret
fsubl
popf
fsts
nop
or
sub
fnstsw
inc
fdivrl
inc
jecxz
lods
nop
cmc
lret
lods
fdivrs
aas
cmc
ds
lret
vmovaps
test
jmp
mov
js
push
fdivrl
or
sbb
insb
call
pop
cmp
pushf
js
push
fdivrl
or
sbb
insb
call
pop
cmp
pushf
call
int3
mov
mov
or
sbb
insb
clc
jl
dec
and
je
inc
mov
pushf
js
js
pop
int3
enter
push
xchg
xor
imul
aaa
mov
push
pop
inc
ds
push
sbb
mov
lahf
rorb
filds
das
push
pop
inc
wrmsr
jg
jecxz
pop
add
mov
lahf
rorb
lahf
or
lods
loopne
mov
or
cmp
clc
push
lock
mov
mov
mov
xchg
stos
repz
xor
inc
inc
adc
aaa
pop
mov
inc
add
fistps
iret
imul
aad
mov
jl
aaa
ds
jle
xchg
cmp
test
das
imull
lahf
xor
fimuls
sub
shlb
sub
push
fs
cmp
mov
pop
sub
adc
add
sub
fbstp
unpckhps
adc
inc
stos
aas
jae
mov
pushf
cmc
sub
mov
pop
mov
dec
xor
mov
das
pop
ret
popl
mov
xor
jmp
scas
push
in
mov
pop
stc
mov
mov
rclb
fists
fists
sub
xor
outsl
adc
jb
or
mov
mov
adc
and
push
add
ss
sub
jmp
out
nop
into
fwait
in
scas
jo
call
sub
inc
pop
jl
jae
enter
mov
lods
call
in
shll
add
and
pop
add
mov
rorb
filds
das
push
pop
inc
wrmsr
jg
outsl
adc
dec
lock
rorb
filds
clc
clc
mov
dec
dec
jo
fs
jg
idiv
pop
and
decl
mov
dec
rcrl
addr16
aad
idivb
and
fldl
xor
add
cmpb
cmp
sbb
aad
divb
sub
adc
jne
orl
pop
sub
jns
xor
mov
adc
pop
repnz
daa
sahf
das
int
sti
insl
in
sub
shlb
incl
fs
mov
shl
pop
int3
pop
aad
scas
arpl
jo
mov
movsl
mov
inc
hlt
dec
lods
cmp
push
fistps
mov
inc
rcll
push
pop
jb
aas
loope
aad
ljmp
push
mov
out
dec
push
xchg
mov
or
stos
mov
pop
scas
pop
rorl
jmp
mov
push
jnp
mov
mov
shr
clc
dec
mov
push
loope
loop
dec
inc
subb
inc
mov
in
out
jle
ret
jns
movsb
repnz
push
cltd
or
nop
xor
cltd
sub
pop
cmp
sar
or
not
xchg
jns
enter
xlat
ret
mov
sub
inc
popa
mov
imul
push
stc
mov
dec
push
cmp
inc
loope
adc
jae
outsl
pushf
cltd
out
mov
fwait
sub
and
test
aaa
jl
std
imul
shll
ret
jne
ss
mov
fists
mov
push
add
inc
imul
std
cmp
and
inc
divl
mov
and
push
out
cmpsb
inc
jl
xor
arpl
mov
adc
das
mov
out
adc
and
movsb
xlat
jns
les
push
xor
or
jp
or
push
ljmp
jae
pop
xchg
xchg
jmp
movsb
jno
pop
cmc
out
xor
adc
cmpsl
sub
lret
data16
dec
inc
inc
mov
dec
mov
and
fcmovnbe
pop
lahf
or
fmuls
lret
scas
adc
and
mov
cmp
mov
mov
mov
jge
repz
xor
sub
popf
xchg
add
ret
sbb
mov
pusha
int3
fwait
imul
xorl
inc
sahf
mov
mov
and
mov
pop
ret
std
sbb
scas
mov
in
inc
sub
jbe
dec
scas
daa
sub
lock
or
xor
stos
mov
mov
iret
dec
cmp
mov
loope
mov
and
dec
add
arpl
iret
out
jp
cli
mov
sub
hlt
sbb
mov
inc
adc
test
pushf
pop
ret
mov
ret
dec
int3
mov
in
pusha
pushf
xorb
loop
in
mov
mov
lds
aas
lea
testb
popa
imul
out
sub
sbb
popa
inc
repnz
mov
into
cs
ret
pop
adc
add
xchg
pop
and
add
xorb
mov
aas
push
pop
dec
xchg
add
out
sbb
add
aam
nop
cmp
mov
inc
les
lods
pop
dec
dec
pop
add
push
rolb
jne
ret
mov
fwait
cs
push
pusha
jbe
ja
cld
ss
xchg
inc
mov
aad
dec
cld
mov
rcrb
or
addr16
sarb
nop
mov
jo
push
lcall
cld
or
xchg
sbb
push
push
jp
mov
and
xlat
ret
mov
push
sbb
mov
push
inc
popf
fnstcw
pop
push
pop
setle
push
xchg
in
ret
roll
xor
jmp
jno
leave
sarl
fiaddl
xor
repnz
inc
pop
fcom
stc
mov
push
sub
test
pop
stos
push
imul
add
jg
into
flds
sbb
arpl
stc
mov
push
mov
ja
jecxz
sbb
shll
faddl
mov
rolb
or
inc
push
mov
jbe
loopne
push
lcall
test
scas
adc
adc
adc
in
aas
fmull
fldenv
pop
mov
mov
gs
sub
leave
ds
cmp
in
cmp
sarl
push
cmp
into
pop
adc
or
xchg
dec
lret
jmp
jne
lret
push
iret
nop
les
mov
decb
jae
pop
push
and
sbb
fildll
push
push
cld
fwait
je
mov
and
fidivrs
jg
sub
inc
lods
sbb
jb
cmp
add
not
sbb
cmp
add
sbb
out
add
push
jbe
hlt
outsl
sub
cltd
inc
repnz
sbb
or
xchg
in
inc
sub
adc
adcl
cwtl
mov
pop
int
adc
mov
and
lock
jne
push
mulb
ret
mov
rclb
fs
xorb
cmp
in
test
scas
cmp
and
jp
pop
ficompl
lcall
pop
adc
loop
scas
xlat
sbb
sbb
inc
sbb
xchg
push
adc
sbb
mov
or
pop
and
hlt
sti
pop
scas
xor
mov
inc
push
jle
out
daa
rolb
jp
inc
stos
pop
dec
ficoml
aad
loopne
out
sub
mov
mov
sbb
mov
and
outsl
adc
xchg
mov
xchg
lock
sub
cwtl
stos
cmp
push
pop
sbb
fsubrl
push
pop
jmp
inc
movsb
fsubs
mov
dec
push
push
mov
xchg
cmp
xor
ds
cli
add
movsb
jp
fdivl
mov
push
fwait
popa
adc
lock
xchg
loop
adc
stc
fdivrs
ja
dec
mov
mov
das
addr16
stos
xor
mov
insl
mov
cmp
psllw
jmp
adc
sub
xor
jmp
pop
push
mov
jmp
out
lods
orb
lret
lea
mov
or
lahf
sbb
or
lds
mov
inc
mov
sbb
fdivrl
insb
push
dec
stos
mov
rol
push
stos
pop
jbe
jns
xchg
outsl
cmpl
cltd
ja
popa
mov
rcr
imul
dec
ds
or
cmp
outsl
xchg
or
add
clc
outsb
hlt
pop
mov
cmp
mov
push
ret
mov
fcoms
insl
mov
aam
iret
jg
call
lahf
ja
lods
lahf
outsb
adc
arpl
pop
mov
sub
sub
sti
xlat
cli
lods
stos
cmp
xor
adc
js
sahf
mov
jne
xchg
out
adc
mov
in
je
lahf
cmp
mov
lahf
mov
jecxz
add
cmpsl
inc
gs
and
inc
mov
xchg
ret
hlt
cltd
stos
or
in
fwait
shll
and
sti
sub
jl
pop
dec
jp
adc
dec
subb
push
addl
add
adc
sbb
mov
adc
sbb
xchg
jge
orl
imul
loope
pop
jns
or
mov
lock
cwtl
nop
inc
xor
push
adc
lret
mov
push
cmc
inc
lahf
nop
cmp
testb
fnsetpm(287
jl
int3
cmp
jp
les
fs
xor
push
enter
cld
in
sbbb
rolb
add
out
jne
out
and
or
push
lods
and
fdivrs
xor
addr16
xor
dec
add
adc
fcoml
mov
xchg
pop
lods
add
cmp
mov
push
xchg
mull
inc
or
xor
jne
xor
mov
push
inc
es
clc
push
inc
rcrb
pushf
inc
cs
adc
and
decb
pop
outsb
shlb
adc
sub
shll
push
push
xchg
repz
mov
dec
add
bound
fstps
fstl
es
cmp
hlt
push
xchg
in
pop
inc
sub
outsl
pop
push
sub
bound
gs
cmp
xchg
mov
test
add
push
insl
xchg
scas
and
cmpsl
cmpsb
sub
or
popa
pop
dec
shll
and
xchg
scas
shrb
fimuls
mov
push
das
cmpsl
imul
test
pop
inc
inc
xchg
pop
pusha
cmpsl
test
inc
push
pop
loop
dec
cli
loop
movsb
or
mov
orl
inc
or
dec
jp
sti
jae
mov
test
push
jecxz
sbb
dec
or
pusha
rcr
cli
mov
into
mov
or
xchg
aas
cli
sub
ficoms
in
scas
adc
test
cmc
push
xchg
or
lcall
aas
lods
or
xor
xchg
fs
lds
pop
lcall
cld
ret
jno
jns
xor
mov
gs
lret
inc
xchg
lea
pop
ss
in
adc
sbb
jmp
inc
mov
enter
cmp
inc
jge,pn
sub
jns
aad
dec
fnstcw
in
hlt
dec
jne
sbb
cmp
jno
push
lods
pop
lcall
sbb
test
xchg
adc
xor
subl
and
cmp
sbb
sbb
clc
cmc
jge
mov
mov
ret
notl
insb
xor
in
adcb
mov
enter
push
cmp
sbbl
mov
mov
xlat
jle
dec
dec
xor
xchg
mov
lods
pop
adc
xor
or
out
jno
jnp
fisttps
push
loopne
sub
mov
xchg
inc
push
mov
mov
es
std
pop
xchg
pop
mov
push
mov
sbb
pop
xchg
int
clts
push
mov
dec
lret
sbb
popa
std
jo
sbbl
push
jp
inc
repnz
je
adc
and
ret
into
jmp
push
ror
test
ja
pop
xchg
add
ret
cmpsb
dec
fidivl
jo
push
xchg
aam
mov
stc
jnp
or
sbb
icebp
xchg
shr
scas
push
dec
repz
push
mov
test
lods
test
dec
inc
loop
mov
push
fmull
push
divl
lods
or
rcr
ljmp
inc
in
lahf
scas
mov
jge
out
out
sahf
fs
cmp
dec
test
mov
mov
popl
imulb
and
das
pop
mov
cmp
das
push
subl
ret
js
in
out
movsl
hlt
fdivs
mov
pop
dec
fwait
js
in
orb
stc
mov
sti
roll
mov
push
mov
pop
adc
mov
push
lds
nop
ret
xor
push
sbb
adc
xorb
mov
xchg
sbb
mov
mov
cmp
mov
jo
and
xor
pop
repnz
lods
push
test
aam
stos
jg
fs
sub
fs
xor
mov
cmc
and
movsl
fildll
les
testb
push
lea
in
mov
cmp
fnstenv
push
add
aam
inc
pop
mov
mov
pop
and
adc
jg
mov
cltd
das
aaa
popf
dec
jecxz
loopne
or
jle
or
push
sti
clc
rcr
or
ja
mov
sbb
or
add
or
fmulp
nop
icebp
pop
add
dec
loope
clc
push
pop
lcall
mov
xor
cmp
xchg
jecxz
cmp
or
xchg
aas
aas
mov
dec
push
or
adc
or
aas
cmpsl
shl
mov
and
xor
sub
imul
mov
inc
xchg
outsb
popa
shll
mov
in
or
movsl
fldl
pop
stc
pop
movsb
xor
pop
cmpsl
inc
xor
dec
pop
test
add
stos
idivl
xchg
push
es
nop
in
ficoms
cwtl
arpl
pop
jmp
call
adc
cmp
shll
ret
out
insl
mov
inc
insb
jno
mov
out
jecxz
push
mov
push
add
adc
jg
stc
aaa
test
popl
mov
add
je
xorl
fmuls
aas
xchg
mov
icebp
bound
cmp
sbb
nop
repnz
mov
jbe
xor
js
and
xor
fsubl
jge
shlb
insl
nop
push
ds
popa
sub
add
jge,pt
push
dec
jmp
in
aas
and
sbb
mov
and
mov
test
in
xorb
stos
jge
leave
push
outsl
iret
rolb
inc
jb
negl
jns
or
adc
cmpsl
push
or
mov
ljmp
pop
cltd
or
pop
add
add
mov
xchg
or
mov
popf
push
xor
js
es
addr16
int3
pushfw
scas
add
icebp
xchg
add
pop
mov
add
mov
xor
mov
and
je
shrb
orb
xor
mov
arpl
je
pop
insb
inc
in
shlb
mov
frstor
jl
je
inc
and
cmp
push
sbb
xor
mov
sub
push
movsb
rcrb
jmp
int3
out
jbe
xchg
loop
lods
xor
es
idivl
mov
leave
fsubl
icebp
les
mov
jp
movsb
addr16
and
outsl
faddp
add
ret
sbb
add
or
mov
pop
repz
jp
subl
and
jle
cmpsl
and
xor
rcll
shll
mov
mov
repz
call
jnp
pusha
movsb
jnp
out
lret
movsb
jns
dec
pop
dec
je
je
mov
icebp
mov
mov
xchg
mov
inc
add
fcompl
jae
call
xor
leave
and
sbb
hlt
xchg
jle
imul
mov
lcall
mov
idivl
int3
jno
add
fisttps
inc
xchg
icebp
pop
mov
mov
test
ljmp
push
add
repnz
loop
xchg
in
mov
pusha
cs
mov
sbb
push
outsl
add
or
sbb
mov
clc
xchg
mov
pushf
mov
xor
mov
stos
xor
dec
rsqrtps
gs
jg
aaa
adc
roll
pop
mov
repnz
xorl
jecxz
loope
cmc
inc
popf
test
mov
jmp
xor
fnstenv
cmp
arpl
js
scas
les
xchg
fstl
negl
mov
sbb
mov
lahf
xchg
bound
push
gs
mov
add
mov
add
pop
iret
shll
xor
mov
or
call
cmp
jno
sti
jnp
cmp
pop
test
adc
mov
rcrl
mov
mov
leave
notl
aas
jbe
packuswb
pop
pop
adc
into
pop
clc
and
fs
cmpsb
in
sbb
push
dec
iret
mov
jp
push
jo
inc
and
negl
push
jne
addl
mov
cmpsb
and
dec
sub
xchg
mov
xor
lods
adc
sbb
mov
pop
scas
add
cs
stc
lods
repz
mov
negl
adc
xchg
rcr
push
icebp
cmpsl
pop
add
clc
mov
push
adc
mov
sub
fdivr
jno
inc
push
js
sbb
jecxz
jg
lods
sub
sbbb
pop
and
mov
inc
jle
unpckhps
stos
jbe
jae
and
stos
or
mov
sarb
xor
mov
sub
sub
and
das
push
arpl
inc
and
cmpsl
in
lods
insl
out
adc
ret
repz
add
cwtl
sbb
adc
push
push
addr16
das
mov
add
pop
or
push
int
xchg
mov
out
dec
movsl
or
mov
xor
inc
sub
adc
mov
in
push
arpl
aam
mov
mov
pop
cmpsl
test
push
enter
sahf
pop
mov
outsl
cmpsb
mov
push
or
lds
sub
pop
ret
insl
movsl
jmp
in
push
popa
mov
mov
inc
iret
imul
das
sbb
pop
xchg
lds
inc
mov
imul
jae
popf
andl
sahf
xchg
xlat
lret
pop
sub
add
ret
cmp
sub
imul
cmpb
sub
sbb
test
push
ja
and
xchg
sahf
in
push
jne
stc
lahf
push
fwait
lea
test
sub
sbbl
push
in
xchg
cmpl
ljmp
sbb
xchg
sarl
call
sbb
dec
ds
mov
cwtl
jo
adc
adc
mov
sub
sub
test
cli
dec
dec
xor
scas
incl
cmpsl
data16
test
mov
jb
fcmove
sbb
les
hlt
clc
sbb
and
out
cli
push
pop
push
stos
mov
pop
cli
mov
sbb
jmp
xor
fs
fcmove
and
cli
imul
xor
ret
pop
xchg
pop
xchg
mov
cmp
sub
aam
aam
mov
shlb
xor
pop
jle
or
js
mov
mov
daa
mov
jno
mov
dec
jmp
cld
inc
nop
lods
inc
aad
mov
sbb
addr16
shrb
popa
sub
lods
xor
mov
jmp
xchg
imul
push
add
ljmp
lds
xchg
shlb
push
sub
jbe
xchg
sbb
cmp
pop
loop
pop
mov
loope
pop
inc
mov
cmp
dec
fsubl
es
leave
mov
enter
iret
inc
mov
push
lcall
lods
or
out
xchg
mov
mov
pop
repnz
int
mov
mov
pop
fs
pop
stc
push
mov
jle
or
inc
test
sbb
lock
imul
lret
sub
arpl
dec
out
pop
sbb
pop
jecxz
int
lea
inc
xchg
ret
shrb
inc
mov
lea
mov
popf
fwait
je
add
rcrb
cltd
test
lret
push
sub
rclb
lock
std
pop
ret
dec
out
les
cli
setl
lahf
lea
pop
adc
out
fcmovu
cmp
pop
popa
ljmp
inc
jnp
sbb
xchg
addr16
sbb
sysexit
test
xor
fcom
inc
outsb
cld
xor
lahf
mov
mov
out
pusha
and
mov
daa
cmp
ljmp
push
or
mov
inc
fisttpll
push
fildll
cltd
rclb
sub
mov
xor
sub
fs
cmp
call
pop
iret
jg
xchg
loop
addb
repnz
sahf
add
in
jnp
push
jmp
push
scas
popl
sbb
push
cltd
jmp
mov
xchg
and
addl
add
inc
cmp
cmp
mov
and
dec
mov
roll
mov
sti
dec
jmp
inc
std
or
mov
je
ljmp
mov
nop
test
addl
fcmovbe
xchg
es
push
xchg
xchg
fistl
adc
sub
xor
jne
ljmp
jae
icebp
lret
cmp
out
jns
out
pop
cmp
push
dec
pop
sbb
fmull
dec
pusha
leave
stos
inc
int
xchg
xlat
or
scas
outsb
scas
or
jb
mov
insb
int
inc
andl
mov
sub
xchg
insl
bound
sub
cmp
pop
push
or
cmpsb
cld
xchg
dec
ss
mov
insb
test
ss
fimuls
pusha
mov
pop
cmp
lret
pushw
insl
cld
cmpsb
sub
ret
mov
xchg
inc
and
ret
test
sbb
mov
mov
hlt
and
arpl
imul
jecxz
xchg
cs
out
pop
pop
xor
dec
fldenv
mov
pushw
xchg
outsl
mov
and
dec
mov
cmp
shll
and
push
or
jmp
ss
out
lret
jno
push
mov
sbb
sbb
jg
inc
cmpsl
push
scas
insb
mov
cwtl
push
daa
sbb
sub
mov
and
test
inc
test
xor
out
icebp
jae
inc
enter
or
xorl
sub
lret
jbe
mov
mov
push
es
in
push
inc
insl
add
or
hlt
into
lds
jp
idivb
xchg
cmp
adc
inc
lcall
mov
adc
or
outsl
push
jmp
push
cmc
sbb
lret
ret
xchg
movd
xlat
fsubl
nop
add
test
inc
or
test
mov
das
mov
wrmsr
jg
outsl
adc
dec
lock
rorb
filds
das
push
pop
inc
wrmsr
jg
outsl
adc
dec
lock
rorb
filds
addr16
addr16
rdtsc
jg
adc
dec
hlt
loopnew
fstps
mov
iret
push
pop
push
outsl
adc
orb
pop
add
ja
adc
jg
jo
lods
addr16
mov
xor
mov
or
add
pop
add
push
add
add
pop
jns
mov
pop
add
or
add
add
rolb
and
addb
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
verr
or
gs
add
stc
add
add
pop
add
loop
outsb
add
add
mov
cmp
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
cmpsb
add
add
push
add
add
sub
loop
incl
push
add
add
test
add
add
add
add
add
add
add
add
or
adc
stos
add
add
add
add
add
add
add
das
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
pop
add
add
add
add
cwtl
add
add
add
add
add
add
imul
add
add
push
leave
add
add
add
add
add
add
add
add
inc
add
add
imul
jle
test
add
add
test
add
add
insl
add
add
add
push
add
add
push
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
push
add
add
mov
pop
add
add
sub
pop
add
flds
dec
add
add
add
pop
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
mov
mov
add
add
add
movl
lcall
add
pop
add
add
add
add
add
add
sub
das
add
pop
add
inc
add
lock
fwait
add
add
add
add
add
add
add
add
add
in
add
dec
add
add
and
pop
add
inc
add
add
add
test
add
loop
movsl
add
add
add
lahf
add
sub
gs
jo
add
fisubrs
mov
xor
scas
mov
mov
imul
je
fisttpll
inc
pusha
jle
adc
fsubr
cmp
iret
xor
orb
arpl
out
cmp
mov
or
or
test
cmpsl
orl
movsl
cmp
mov
aam
fdivl
mov
dec
movsl
out
popf
cmp
sub
jecxz
ret
and
inc
push
mov
cmp
sahf
out
and
push
cmpl
leave
sar
les
arpl
xchg
iret
mov
test
xchg
test
and
cmp
and
pop
in
scas
imul
push
pusha
push
xchg
test
cmpsl
pop
cmc
cmpsb
insl
imul
idivl
add
jg
adc
nop
sti
sbb
out
testl
lods
push
push
xor
insl
mov
add
stos
addb
mov
aam
push
pusha
stos
pushf
pop
xchg
mov
clc
xlat
jbe
mov
sbb
adc
imul
inc
pushf
jnp
clc
fsubl
add
pop
push
test
outsl
outsb
jge
lds
cmp
pop
fwait
out
insl
adc
fmuls
adc
push
add
stc
and
enter
xor
inc
lcall
popa
sbb
jne
xchg
ja
hlt
sub
jl
jne
jae
add
sbbb
stc
sbb
xor
xor
cmc
push
and
xchg
out
das
vpmacssww
xchg
jp
mov
or
outsb
ret
fisttpl
loop
out
inc
sub
dec
scas
xor
pushf
movsl
inc
push
mov
xlat
pop
pop
inc
inc
add
jp
add
dec
cs
insb
push
sti
jbe
psraw
inc
outsl
repz
jb
scas
xchg
xchg
mov
or
add
iret
cmpsb
pop
scas
cmpsb
push
xchg
call
mov
sbb
icebp
sbb
ret
repnz
sub
push
lods
cmp
xor
call
and
mulb
pop
xor
call
jns
inc
loope
pop
fwait
out
data16
jbe
mov
scas
fwait
loopne
lea
or
sub
fisubs
cs
movsl
mov
xor
xor
or
add
sub
jmp
xchg
clc
test
jge
lret
inc
lds
mov
cmpsb
cld
ds
pop
ja
jb
int
sbb
std
sbb
lea
pop
mov
pushf
adc
aam
pop
fsubrs
sub
loop
cmp
cltd
sbb
add
mov
sub
pop
mov
mov
das
jo
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
