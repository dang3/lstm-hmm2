call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
and
idivl
inc
adc
add
mov
mov
ret
mov
movsb
repz
repz
je
and
inc
xor
and
adc
jl
hlt
xchg
in
aam
movsb
jecxz
repz
je
cmp
pop
xor
and
adc
add
hlt
mov
cld
cmpsb
lret
movsl
ret
loopne
repz
pop
jl
and
and
pop
push
mov
cmp
ret
daa
in
in
pop
or
mov
push
cmpb
xchg
mov
insl
jecxz
or
cld
je
imul
cmp
movsb
call
mov
ds
ret
mov
repz
xor
inc
ljmp
and
or
xchg
sbb
mov
pop
push
add
leave
mov
jle
and
or
mov
out
movsb
sbb
jecxz
jmp
repz
mov
sbb
inc
jl
push
mov
sub
roll
xchg
repz
lret
and
push
xor
and
adc
add
hlt
mov
mov
mov
movsb
stc
xchg
repz
outsl
jo
and
xor
dec
cs
jae
orl
mov
divl
lret
jb
dec
xor
das
pop
push
push
sarb
mov
xchg
ret
data16
dec
es
and
sbb
arpl
add
hlt
xchg
in
aam
movsb
jecxz
repz
je
and
inc
xor
and
adc
add
hlt
xchg
in
aam
movsb
jecxz
repz
je
or
mov
xor
popa
fwait
mov
mov
xchg
scas
mov
stos
cs
fimuls
cwtl
shl
ficoms
mov
mov
and
push
ret
out
daa
jle
shlb
xor
and
xor
dec
lock
xor
cmp
add
cld
cltd
js
xor
fsubrp
push
test
mov
adc
and
divl
mov
sar
lcall
jge
repnz
dec
ja
mov
mov
movsl
push
loop
adc
push
lods
mov
cmp
xchg
sbb
hlt
insl
xor
int3
add
mov
test
push
pop
aad
and
sbb
sub
pop
inc
lea
sub
inc
cmp
mov
dec
jae
and
jmp
fisubs
jbe
mov
push
mov
adc
sbb
jno
add
add
sti
repz
leave
mov
cwtl
xchg
lock
sbb
in
xchg
sbb
mov
icebp
cmp
fisttps
or
lods
or
scas
mov
cmp
inc
cli
and
std
aam
adc
stos
cmp
dec
push
mov
aad
fisubrs
aam
mov
inc
mov
pop
or
rcrb
add
dec
sbb
jmp
xchg
fs
cld
adc
das
xlat
mov
fsub
sub
jae
lods
and
les
sahf
sub
jle
xchg
push
movsb
add
shll
mov
sbb
scas
aaa
mov
push
sarb
scas
or
dec
xor
xor
inc
out
mov
cmc
jnp
cwtl
rol
pop
pop
daa
addb
ss
inc
imull
sub
dec
fistps
push
sahf
jne
test
jno
push
in
mov
adc
mov
fs
jmp
mov
mov
sti
inc
pop
jle
lds
outsb
inc
mov
fwait
popf
jle
sub
and
mov
mov
or
sbb
inc
movb
cmp
je
sbb
and
or
adc
lods
and
pusha
rcll
inc
int3
addb
push
inc
lahf
jle
jmp
or
cli
setne
or
ja
popa
jmp
pusha
jo
xor
rolb
aam
jo
and
adc
mov
fdivl
push
mov
push
sti
adc
fstp
sahf
xchg
pop
in
sbb
sbb
lea
mov
in
or
dec
mov
fsubs
mov
cli
lret
mov
cmpsl
adc
sti
adc
xor
loopne
int3
cmp
push
cmpsb
pop
shrl
dec
mov
inc
rclb
sub
out
icebp
xchg
loop
xchg
into
lret
pop
cmpb
cmp
mov
mov
push
in
lret
inc
je
push
sbb
xor
movsb
sbb
aam
pop
pop
out
xchg
sti
push
cmp
bound
adc
pop
ja
call
aam
lods
test
jmp
cmp
outsb
push
adc
add
and
push
jae
mov
add
jns
mov
jnp
addr16
cmp
or
pushf
ljmp
hlt
and
inc
cmp
or
xchg
mov
cli
mov
je
adc
es
icebp
pop
dec
in
dec
push
popf
push
stc
push
call
mov
sub
cmp
push
or
pop
js
movsl
xor
add
shrl
xchg
jecxz
sbb
call
ljmp
push
mov
aad
inc
ds
cmp
cmpsl
or
fyl2xp1
inc
sub
inc
lock
dec
add
lds
mov
mov
xchg
scas
push
sub
xchg
mov
in
cmp
in
js
aaa
inc
sti
pusha
adc
in
pop
mov
dec
out
aam
nop
push
aad
add
in
dec
mov
and
mov
popf
mov
hlt
jmp
in
je
dec
enter
xchg
and
sbb
mov
roll
cmp
fstps
jp
pop
mov
pop
int
jae
push
push
popa
dec
adc
xor
sub
sbb
mov
or
pop
and
or
inc
sub
aam
ret
notb
jg
vcvtss2si
mulb
aam
mov
push
inc
mov
mov
jb
mov
inc
pop
pushf
sbb
jl
icebp
loop
loop
cmp
popa
test
xor
or
orl
and
es
or
jae
mov
add
add
andl
popaw
cmp
mov
idivl
jg
clc
or
jmp
mov
ljmp
shl
dec
cmp
push
insb
jo
and
push
aam
rorb
lret
add
in
xchg
fimuls
inc
pop
ljmp
je
stc
mov
fld
jmp
mov
and
xchg
leave
cmc
sub
test
inc
sbb
jb
mov
int3
int3
adc
xchg
mov
xor
jp
add
xor
and
and
lret
xchg
jg
add
adc
mov
xchg
ret
pop
dec
mov
ror
dec
int3
jmp
xor
pop
dec
mov
xor
popl
ljmp
cli
push
cld
xchg
and
push
notb
scas
add
jo
fldl
fs
mov
dec
cmpsl
pop
jmp
add
inc
out
push
fsts
pop
pop
sub
mov
pop
jle
outsl
inc
clc
icebp
lods
add
xchg
mov
add
xor
stos
xchg
cmp
or
movsb
xor
in
sbb
xchg
int3
push
cmc
mov
push
rorl
subb
roll
test
mov
into
lret
sahf
or
repnz
mov
xchg
lock
mov
push
sbb
imul
mov
cwtl
std
mov
in
enter
or
pop
or
cmp
repz
mov
sbbl
xchg
mov
xchg
int
mov
and
iret
daa
sbb
xor
scas
addr16
insb
jns
sub
fwait
inc
bound
call
test
movsb
fcmovu
mov
inc
out
inc
lcall
pop
filds
jg
mov
mov
cmp
inc
adc
push
cli
js
mov
xchg
xor
movsl
add
stos
dec
mov
dec
in
inc
cmpsb
sbb
sub
pop
mov
daa
cmp
adc
das
sbb
sbb
xchg
adc
mov
push
fidivl
sub
push
pop
xchg
shrb
pop
out
stos
repnz
cmp
popf
cld
push
es
mov
inc
cmpsb
sbb
pop
adc
push
xor
cmp
ret
push
fwait
shlb
sub
jp
unpckhps
ds
or
arpl
push
cmpsl
push
mov
mov
and
sbb
es
fldcw
mov
dec
or
popf
jg
mov
repnz
mov
dec
xchg
in
jb
mov
lock
push
in
fcompl
ret
pushf
lds
xor
jns
jp
cld
test
pop
jo
scas
mov
jbe
pop
imul
adc
into
or
popf
jne
cld
mov
pop
iret
stc
mov
dec
inc
lcall
aaa
mov
js
and
xor
cmpsb
dec
inc
lods
mov
fstpt
out
scas
dec
not
mov
inc
push
pop
xchg
mov
aaa
add
push
pop
int
stos
movsb
out
mov
sti
mov
fldl
lcallw
lods
push
lret
sub
inc
popf
xchg
sbb
movsl
or
stos
dec
adc
sub
aaa
fst
das
cmp
sbbb
xchg
mov
mov
out
test
dec
dec
jbe
mov
add
pop
pop
fstpl
add
cmp
xor
xchg
sahf
pop
push
xor
test
lods
jl
lcall
fldenvs
call
pushf
xor
jmp
sbbl
push
nop
mov
sub
out
fwait
cli
mov
test
xlat
fisttps
xchg
xorl
ret
fsubp
es
std
sbb
insb
push
xor
push
pop
scas
ds
cmp
js
test
mov
pop
sbb
cmp
jl
int
mov
or
lods
xchg
inc
ljmp
sahf
loope
daa
addr16
push
jl
mov
inc
and
cmc
xor
inc
es
inc
push
inc
add
mov
out
daa
jl
roll
daa
insb
and
insl
jae
fdivrp
dec
repnz
pusha
popf
iret
xchg
mov
mov
mov
adc
stc
test
hlt
rorl
push
lods
andl
xor
dec
sbb
addb
mov
fstps
add
aaa
sbb
or
add
loopne
pop
and
xor
lret
push
je
btr
scas
cld
test
leave
add
mov
push
cmp
jne
outsl
jg
pushw
mov
jmp
lea
jl
repnz
mov
aad
scas
cmp
xor
loope
push
dec
js
cwtl
mov
xchg
sti
bound
mov
push
and
loop
loop
mov
lods
sub
xchg
not
fisttpl
data16
ds
mov
sbb
xchg
xor
leave
jmp
dec
jo
roll
lods
insl
inc
in
push
cmp
mov
mov
out
call
mov
fnstenv
pop
stos
shll
imul
scas
aad
scas
pop
inc
push
sbb
jnp
inc
pop
xchg
jne
ret
outsb
test
ja
icebp
lods
ja
sbb
cmc
and
mov
cmp
mov
imul
sbb
pop
sbb
in
pop
xchg
push
pop
and
xchg
or
or
shll
mov
andb
in
inc
mov
rcl
popf
add
aad
mov
fisttps
sbb
or
incb
cmp
pop
jmp
jg
addr16
iret
inc
push
adc
mov
mov
jb
movsb
push
xchg
rorl
aad
cld
je
cld
push
pop
inc
mov
cltd
inc
sbb
fdivrs
test
mov
fdivl
fs
ja
push
inc
mov
sbb
inc
and
adc
sbb
add
ljmp
add
mov
adc
sub
mov
mov
cmp
and
pop
or
inc
clc
mov
movb
mov
and
add
push
mov
out
push
and
test
xor
xor
faddl
push
xchg
adc
in
fadd
fs
notl
lock
sub
mov
jmp
dec
dec
scas
mov
test
jnp
into
and
inc
inc
in
jae
xchg
test
pushf
subb
mov
into
jb
lea
sahf
adc
cmc
int3
ss
jns
inc
cld
xchg
pop
out
jl
lock
imul
insb
aas
lea
adc
mov
or
xor
pusha
enter
add
fnstenv
filds
xchg
jp
icebp
call
xlat
xchg
mov
lcall
add
adc
or
outsb
jle
fmull
daa
dec
icebp
loope
sbb
xorb
xor
stos
sub
fdivrs
xorb
jg
and
mov
ficoml
pop
push
sbb
pop
aad
dec
ficompl
adc
mov
orb
sub
add
sahf
js
dec
mov
ds
inc
insb
mov
shll
jnp
stos
sbb
aad
data16
rolb
jnp
xchg
incl
mov
xchg
mov
out
es
aad
shlb
add
jmp
inc
subl
pop
add
mov
aam
push
xor
shll
pushf
dec
mov
lods
pop
xchg
insl
sbb
arpl
pop
das
add
add
xchg
xchg
jge
cmp
inc
movsb
push
and
pop
rorl
jge
sbb
lods
sbb
loope,pn
inc
push
lret
xchg
and
or
sub
ljmp
into
lret
inc
repnz
cmpb
ljmp
in
ss
inc
ret
push
loopne
sbb
jae
push
test
dec
sub
iret
pop
in
fcompl
sahf
ss
mov
test
repz
pop
fsubl
mov
mov
shr
adcl
mov
cli
jp
push
inc
leave
cltd
iret
push
aaa
jne
cwtl
fistps
jo
and
loope
sbb
jb
pop
mov
cmp
jbe
dec
fisubrl
dec
jg
dec
js
sub
into
cmpb
repnz
lcall
xor
lods
sbb
cld
ss
xchg
sbb
cmp
stos
add
fsubl
add
and
mov
aaa
lds
loop
mov
cmp
push
sahf
and
imul
cmc
dec
adc
popf
ds
sbb
and
mov
adc
pop
or
push
mov
jle
xor
daa
lock
push
sbb
xor
rorb
nop
inc
sub
cltd
xchg
jl
add
sbb
mov
jnp
mov
dec
adc
push
fcompl
into
paddb
andb
xor
push
test
xchg
cmpsl
mov
jecxz
call
leave
cmpsl
movsl
xchg
insb
rcl
jae
inc
mov
shlb
orl
sbb
das
cmpsl
hlt
loop
mov
lahf
stc
pop
rcrb
inc
push
sub
add
push
out
shrb
xchg
mov
inc
sbb
test
xchg
into
iret
xchg
xchg
mov
lock
aam
out
mov
clc
push
fildll
stos
fstpl
dec
cwtl
xor
sub
and
cmp
fldl
and
mov
xor
cmp
jne
movsb
push
push
adc
add
add
or
and
int3
sbb
mov
icebp
push
shl
cs
lret
pop
mov
sub
push
mov
fwait
lock
jae
scas
popa
hlt
jne
cmpsl
stos
pushf
int
push
negb
ljmp
mov
lds
pop
mov
xchg
ret
ljmp
mov
aam
cmp
cmpsb
ljmp
xor
mov
movsb
out
fidivrs
xchg
scas
mov
xor
cwtl
add
imul
sbb
ja
shlb
fcmovnbe
pusha
out
enter
ds
jmp
cwtl
add
mov
add
into
push
popl
adc
cmp
aas
fnstsw
xor
stc
mov
repnz
lahf
lds
fisttpll
mov
mov
fisubl
icebp
push
push
lea
idivb
bound
notb
lret
or
jmp
dec
loopne
dec
push
cs
dec
decl
loope
cltd
xchg
jo
aam
mov
mov
mov
inc
and
mov
orb
push
bound
scas
gs
ljmp
fimull
pushf
mov
mov
mov
push
incb
in
lret
mov
fisubrs
imul
and
pop
mov
add
sub
jne
mov
shrl
push
and
pop
mov
pop
pop
cli
mov
pop
push
or
cmp
dec
out
and
push
xchg
fists
imul
cmp
inc
outsl
imul
enter
sub
jb
xchg
push
test
push
jmp
shlb
dec
les
inc
pop
mov
xchg
cmp
in
stos
popa
cmp
fldt
cmc
mov
jbe
jns
ss
push
jmp
adc
lods
insb
sbb
stos
call
mov
jg
mov
push
xchg
xchg
js
xor
dec
xor
jne
fldcw
rcrb
in
add
and
xchg
lods
xchg
jecxz
cli
adc
add
lea
mov
mov
insl
mov
push
push
xchg
pop
xor
dec
pop
jl
mov
ja
mov
mov
bswap
adc
mov
jb
add
xchg
push
sub
xchg
xor
mov
in
cmc
rclb
mov
dec
pop
insl
cltd
xchg
dec
jmp
sbb
sbb
mov
sub
mov
lods
or
test
or
dec
mov
add
test
inc
movsb
test
mov
xor
ret
mov
push
repnz
iret
pop
jbe
imul
or
mov
dec
dec
movsl
pop
test
fidivs
push
sbb
insb
out
jp
xchg
xchg
imul
je
aad
ss
cmp
loop
mov
inc
mov
sub
xor
je
fnop
in
cmp
mov
mov
ss
movb
pop
push
enter
hlt
lea
leave
pusha
pmaxub
int
les
hlt
adc
mov
adc
lret
pusha
mov
int3
adc
push
and
mov
leave
cmpsb
mov
pop
pop
fstpl
push
icebp
stos
mov
popf
sbbl
in
nop
and
gs
pop
pop
in
adc
dec
xchg
mov
scas
mov
push
rol
jge
add
das
dec
mov
xchg
in
xor
cld
push
mov
mov
pop
incl
sub
rcrl
clc
dec
cli
jecxz
lods
fsub
icebp
test
ret
loopnew
jne
add
sub
push
outsl
movsl
mov
loopne
nop
xlat
and
dec
cmpsb
pop
jne
cli
xchg
sahf
cld
cmpsl
push
rolb
mov
jo
stc
jmp
ljmp
xchg
push
jae
pop
mov
dec
sub
fldt
out
xor
jmp
mov
cmp
cltd
mov
or
cmp
xchg
xor
adc
insl
jb
pushf
adc
rcrb
sbb
dec
icebp
lea
lahf
ret
loopne
mov
push
jnp
or
popa
jle
fistpl
stos
repnz
into
push
rolb
cltd
stos
push
sbb
add
inc
or
cmp
cltd
rolb
xor
icebp
mov
push
aam
xchg
mov
and
push
sahf
mov
je
or
and
leave
roll
inc
sbb
ret
jge
jne
mov
push
scas
testb
loop
mov
cli
pusha
ret
test
jmp
aas
jmp
insb
mov
popl
ljmp
clc
sub
or
pop
xchg
jp
inc
xchg
sub
xchg
xchg
mov
mov
sbb
pop
and
push
out
inc
fsubl
lcall
mov
fisttpl
shl
lods
sbb
out
test
in
jne
pop
aaa
pop
jbe
jl
iret
push
mov
ljmp
pop
imul
sbbb
dec
das
dec
stos
inc
xor
xor
fidivrs
jecxz
inc
mov
outsl
xchg
push
cmpb
jmp
insb
xchg
cwtl
lahf
test
daa
fbstp
cld
inc
push
xor
mov
int
pop
xor
pop
sarl
enter
scas
push
mov
xchg
mov
mov
jle
stos
lds
pop
cmp
popa
call
out
sub
sub
rcr
mov
mov
mov
cs
fdivp
mov
pop
das
fs
and
aam
add
cmpsb
daa
inc
mov
pop
push
xchg
loope
jns
aam
test
mov
in
push
shll
icebp
add
arpl
xor
out
stos
xchg
push
adc
aas
sti
jns
sahf
pop
shlb
test
push
push
lret
outsl
pusha
and
aad
xor
mov
pop
adc
xor
xor
arpl
xorb
fsubs
adcb
mov
fildll
or
dec
repnz
rcl
hlt
xor
mov
add
gs
shll
hlt
ljmp
sub
jo
imul
dec
sbb
lea
adc
imul
ret
int
shr
repnz
addb
imul
lret
xchg
jb
fcmovnbe
sti
cs
out
cmp
push
pop
dec
sbbl
inc
outsl
mov
dec
fisubs
xchg
cmpsl
iret
pusha
sbb
cmp
pushf
dec
cmpsb
fstl
xchg
call
stos
std
sub
loopne
repnz
mov
dec
mov
push
xor
mov
xor
xor
addr16
xor
sbb
movsb
out
je
sbb
gs
xor
sbb
repz
push
xchg
mov
leave
cmp
pop
adc
iret
push
pop
dec
ficompl
add
pop
nop
or
lcall
sub
std
movsl
scas
sbb
pushl
inc
pop
cmpsb
icebp
rolb
stc
lods
fstl
jnp
and
addr16
inc
add
jbe
mov
xor
mov
jno
jns
ficoms
sub
out
push
in
insl
sub
mov
sub
add
loop
xor
jno
cmc
ret
mov
xchg
inc
add
shrb
cld
rol
jne
movsb
jecxz
loope
sub
inc
xor
and
adc
add
hlt
xchg
in
aam
movsb
jecxz
repz
je
and
inc
xor
and
adc
add
hlt
xchg
in
aam
movsb
jecxz
repz
je
and
inc
xor
and
adc
add
hlt
xchg
in
aam
movsb
jecxz
icebp
test
je
and
inc
xor
and
adc
add
hlt
insb
dec
or
mov
mov
pop
pop
sbb
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
cld
mov
mov
mov
xor
daa
pop
jae
sbbl
iret
ret
fcmovbe
ljmp
adc
and
xor
pop
fildll
jp
fiaddl
mov
shr
mov
lcall
jg
outsl
inc
lea
lock
cld
fcmovnb
ljmp
repz
add
jge
push
dec
shlw
jg
stos
mov
popa
xor
adc
lahf
pop
scas
cmpsb
lret
lods
push
mov
adc
sbb
scas
inc
and
xor
cmpsb
addr16
push
lret
push
mov
imul
jle
add
push
sub
mov
imul
inc
clc
lret
push
push
cs
ds
and
add
outsl
mov
movsl
cmp
js
lahf
jl
ret
mov
ret
decl
add
sti
aad
cli
mov
fsts
xor
ror
adcl
mov
nop
fcmovbe
mov
ret
sbb
movl
jb
sti
stos
pop
mov
sub
jecxz
ja
add
jecxz
cmpsl
push
cmp
push
push
push
ret
add
movsb
sti
stos
out
les
ljmp
adc
push
sbb
jns
sbb
jmp
fcmovnbe
cli
xlat
fcmovnu
mov
mov
xchg
push
insl
inc
icebp
push
and
pusha
push
or
fcmovnb
iret
aam
xchg
mov
cwtl
js
sub
jnp
pop
push
push
jp
mov
mov
shr
jecxz
repz
sbb
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
shr
jecxz
repz
faddp
addb
jo
cmp
sub
lds
pop
mov
dec
insb
inc
rorl
inc
sub
mov
pop
lods
and
add
faddl
push
outsl
mov
call
in
add
pop
jg
mov
jo
lcall
outsl
cmp
sub
adc
in
enter
inc
repz
sub
xchg
jmpw
enter
ficomps
lret
pop
iret
and
and
mov
nop
ss
insl
inc
cld
stc
cmpsl
lods
stos
dec
daa
fs
in
cmp
cltd
addr16
imulb
xor
sub
push
cs
mov
aam
popa
out
mov
repz
fwait
xor
das
in
aas
lods
inc
or
mov
loope
or
stos
in
outsb
push
outsb
sarl
xor
pop
add
mov
cld
xchg
pop
stos
adc
pop
adc
inc
icebp
cmp
test
jmp
sub
pop
fcmovnbe
xor
inc
mov
insb
add
jbe
xchg
int
stos
enter
inc
sbb
shll
jl
jge
sub
cmp
add
bound
push
mov
aaa
push
push
or
cwtl
test
sbb
dec
mov
loope
adc
jbe
mov
and
sbb
cmp
xor
xchg
aas
add
lods
lods
pop
mov
mov
scas
mov
insl
jae
movb
mov
and
mov
pop
dec
into
pop
out
out
push
jp
xchg
in
push
mov
test
in
fstps
push
mov
or
cmp
dec
and
inc
dec
loop
push
arpl
sahf
jo
jns
movsl
dec
mov
iret
fwait
xor
imul
dec
mov
cmp
pop
pop
adc
mov
cli
outsb
cltd
sub
bound
mov
repnz
test
inc
push
dec
sbb
inc
sbb
cmpsb
fs
jmp
dec
xchg
or
hlt
mov
test
xchg
cmp
pop
js
push
stos
dec
sbb
lods
cli
mov
lret
hlt
ss
dec
mov
cld
ljmp
or
je
js
les
sarl
sub
ss
imul
jb
inc
push
and
cmp
out
mov
rolb
or
fists
mov
and
adc
iret
push
subl
inc
mov
jp
clc
inc
aam
and
xor
mov
ljmp
sub
cmp
lahf
push
lret
mov
jmp
clc
jo
dec
fsubl
enter
gs
and
inc
adcb
mov
stos
stos
pop
add
push
push
push
inc
aam
jbe
cmpsl
cmp
ds
aas
popa
stc
xchg
pop
bound
lahf
aad
and
jg
das
hlt
push
je
shll
mov
pop
les
adc
push
fidivrs
xor
sbb
inc
data16
sub
pop
adc
aad
dec
sbb
sub
lret
xchg
popa
imul
pushf
ret
mov
imul
lret
sub
dec
popl
lods
fistl
pushf
cmp
iret
lahf
add
rcrl
or
ja
das
add
jmpw
jno
rol
cmpsl
cmpsb
add
cmc
in
fs
ret
std
sub
sub
xchg
lea
popa
out
sbb
loopne
mov
fwait
sub
test
mov
jge
or
and
xchg
add
fwait
push
xor
lcall
sub
ds
pop
cmpsl
bound
or
add
addr16
inc
sub
mov
pop
dec
jne
sub
popa
js
data16
stc
jle
test
and
mov
push
xchg
inc
lods
pop
or
arpl
pushf
jmp
push
mov
mov
rcrl
pop
cmc
add
push
and
repnz
xor
push
gs
aaa
hlt
pop
cwtl
fstl
dec
jl
addb
mov
and
std
addr16
lahf
stos
dec
movsl
lret
xchg
cs
pop
adc
es
cmpb
aas
sbb
add
mov
xchg
es
mov
leave
loopne
and
cmpl
mov
lea
out
mov
adc
inc
xorl
and
test
test
cmp
insl
rcrl
shll
or
sbb
loop
leave
inc
test
out
cmp
shrb
inc
mov
xchg
sub
es
jmp
mov
sbb
jns
dec
jmp
cld
dec
daa
add
mov
cld
add
addr16
mov
sbb
lds
and
int3
call
std
jl
xchg
lods
mov
aas
cmc
mov
inc
sub
fwait
mov
xchg
mov
push
test
add
pop
jae
stos
mov
lock
cmc
jno
cs
out
push
jl
roll
xchg
cmc
and
jmp
ljmp
sub
or
fucomi
and
push
and
movsb
aaa
pop
inc
dec
cld
mov
fprem1
xorb
in
and
or
loopne
jmp
mov
mov
adc
stos
xor
loope
push
xchg
in
orb
ficoml
fadds
cwtl
stc
jecxz
lock
jle
lock
imul
inc
and
aas
cmc
xorl
push
mov
adc
inc
fldcw
and
dec
xlat
mov
inc
mov
js
mov
aaa
pop
sahf
xor
adc
daa
push
lds
dec
test
sbb
mov
pop
sub
mov
push
adcb
dec
fisubl
jns
pop
xchg
fsubl
in
cmc
pop
sti
outsl
jno
arpl
jns
mov
mov
jle
mov
ljmp
out
or
xchg
popa
popa
test
pop
es
sub
sbb
push
sub
cmpsl
call
add
pop
es
cmpsb
push
into
or
imul
pop
lret
xchg
sahf
fdiv
adc
mov
cmp
int
aaa
dec
imul
cmp
negb
add
fldcw
add
inc
sbbb
pop
addr16
add
cmpsl
mov
pop
or
mov
jmp
mov
pop
testl
test
in
pushf
icebp
js
pop
shl
ds
cmp
xchg
pop
jmp
xchg
inc
mov
je
fcmovnb
cmp
mov
lock
ds
arpl
inc
inc
push
popf
sbb
stos
adc
push
fwait
cmp
push
loopne
jno
insw
fdiv
and
rorb
dec
fwait
mov
pop
mov
gs
clc
push
fildll
sub
xor
jno
xchg
mov
sbb
mov
popa
add
mov
lods
mov
push
jmp
cmpb
dec
popf
in
mov
mov
sbb
or
push
xor
iret
in
fdivr
out
fisttps
inc
shrl
jno
pusha
push
test
outsl
pop
push
cmpsb
sub
sub
mov
push
sbb
push
js
pop
inc
mov
pusha
pop
jns
loope
xlat
mov
inc
data16
xchg
cmpsl
xor
enter
inc
push
adc
push
addr16
xlat
mov
sti
sub
popf
adc
mov
adc
xchg
mov
call
scas
rcrl
jns
repz
cltd
and
fcoms
icebp
lret
cmp
mov
mov
es
adc
pushf
inc
sahf
pop
xchg
sbb
push
lret
add
test
and
mov
sbb
jle
push
test
fbld
pop
cmpsb
inc
or
adc
sub
adc
test
pop
jg
pop
bound
inc
lahf
imul
xor
mov
push
inc
or
inc
adc
imul
iret
shlb
add
lods
enter
repnz
shlb
ret
inc
or
and
cmpl
mov
ror
lret
arpl
jge
aas
sar
mov
aaa
mov
in
sub
ss
fcmovnu
ret
dec
and
scas
mov
idiv
adc
xchg
or
stos
sub
aaa
push
call
mov
es
imul
andb
hlt
sti
mov
lret
mov
sbb
imul
loopne
fldl2t
negb
push
lea
jno
mov
insb
jg,pt
sub
xchg
insl
mov
lock
hlt
lods
push
pop
mov
in
sar
push
in
dec
add
aad
pop
xchg
ljmp
sbb
test
lods
cmpsb
mov
push
fidivrl
jge
sub
xlat
nop
sarl
ljmp
outsb
push
mov
mov
lods
push
es
push
inc
xor
and
mov
add
test
jb
clc
insb
ficoms
and
push
pop
sbb
fwait
inc
jle
adc
or
aaa
mov
je
repnz
cmp
inc
adc
es
add
and
rorl
ret
das
lods
rcl
pushf
dec
gs
pop
aas
mov
pushf
insl
fldcw
iret
scas
aas
scas
stos
pusha
jmp
and
scas
mov
mov
cmp
in
inc
jnp
pop
mov
and
jno
push
cwtl
ja
cmp
das
xchg
push
xchg
mov
or
ret
cmpsl
inc
ljmp
test
in
lahf
into
ficoms
bound
adc
dec
jb
or
push
mov
out
or
xchg
fdivl
bound
lea
mov
xor
mov
and
or
out
inc
cltd
pop
and
mov
jge
shlb
sub
xchg
cmp
push
sbb
push
fisubrl
js
rol
mov
bts
shll
sbb
dec
es
dec
movsl
mov
sbb
pop
push
cs
int3
pop
outsb
int3
push
xchg
xchg
mov
out
add
fistps
inc
pop
mov
mov
cs
in
daa
xchg
stos
sbb
ljmp
adcl
in
xchg
sub
lret
stc
arpl
cmp
mov
cs
add
les
xor
and
or
fld
push
gs
push
lods
cmp
mov
jle
xchg
divl
popa
or
mov
movsl
icebp
inc
jae
rorb
loop
daa
cli
jmp
xchg
popa
push
iret
mov
in
mov
out
pop
sub
fistpll
inc
testl
filds
inc
mov
and
test
in
and
mov
fildll
rol
xchg
fisttpll
ret
je
push
dec
rcrl
repnz
out
jo
adc
pop
mov
xchg
daa
dec
push
pushf
mov
pop
je
xor
sbb
and
ficompl
aaa
sub
clc
adc
cmp
cli
and
xor
cvttps2pi
push
stos
xor
mov
cmpps
cmp
or
lea
lods
pop
mov
sbb
sahf
push
fistpll
popa
pop
xlat
or
data16
sbb
pop
scas
or
push
xor
push
shll
shll
add
or
sti
lods
adcl
push
jecxz
setno
cmc
in
sahf
lea
ds
scas
xor
aam
mov
repz
ds
fwait
es
dec
mov
xorb
insb
adc
push
jmp
sub
cmp
into
add
icebp
push
pop
in
test
inc
aas
push
ds
mov
in
lahf
xchg
divl
mov
sbb
mov
stc
shl
jnp
stos
sbb
jae
popa
pop
mov
aam
pushf
les
mov
xor
jmp
cmp
push
mov
xor
push
test
sahf
push
loopne
inc
imul
xchg
jp
sbb
mov
jmp
repnz
sbb
mov
lock
dec
mov
lock
int3
add
push
mov
adc
mov
xor
inc
icebp
mov
mov
int3
sbb
cwtl
lcall
mov
pop
mov
enter
js
mov
jmp
dec
mov
outsl
adc
and
loope
iret
bound
cmp
jns
sbb
call
scas
loop
in
jge
jnp
ss
inc
pop
std
add
test
test
push
in
or
in
addr16
and
xchg
and
jge
xor
xchg
or
mov
cwtl
mov
sbb
lock
and
dec
push
xchg
loopne
test
jne
inc
in
outsl
add
lret
jb
pop
mov
add
sbb
adc
fmull
jle
mov
mov
push
insb
mov
sbb
cmc
iret
or
sbb
xor
es
jnp
jecxz
ret
adc
xchg
pop
mov
out
pop
mov
sbb
and
sbb
testl
call
push
pop
jo
jbe
cwtl
xor
fsubr
push
push
lret
fmull
dec
push
mov
mov
push
mov
icebp
fisttpl
aas
iret
fstps
or
inc
inc
cmpsb
dec
out
mov
xor
xor
leave
xchg
je
fstps
outsl
cmc
movsl
mov
aas
lret
and
pusha
ret
int3
dec
push
bound
mov
push
push
stos
sub
push
push
add
mov
cli
test
or
dec
adc
jg
cs
sub
fisubrl
fbld
cmp
cmp
les
loop
dec
inc
imul
lods
cmp
sub
nop
xchg
std
ficomps
mov
popf
imul
out
adc
leave
and
pop
cmpsl
cltd
sbb
mov
dec
loop
stos
mov
sbb
repnz
inc
dec
and
rorb
jbe
and
pop
ljmp
imul
sub
arpl
aas
cmp
movsb
jae
outsb
jge
pop
and
adc
stc
pop
mov
stc
dec
cmp
outsl
lods
jge
xorl
sbb
das
int3
xchg
rorb
repz
addr16
sub
mov
sbb
in
rclb
cmp
mov
in
jnp
insl
cs
adcl
aam
cmc
mov
cs
sbb
cmc
test
pusha
fmull
xor
sub
xchg
push
xor
cli
data16
or
jne
iret
loop
cwtl
lcall
mov
ret
pop
push
push
mov
dec
in
das
es
cld
out
in
cmpsl
xchg
decl
mov
pop
dec
mov
and
jo
test
push
lea
test
ss
cs
pop
inc
mov
push
and
push
fldenv
mov
add
sbb
aam
sub
lods
push
fxch
xchg
shll
cmp
xchg
rolb
in
js
sub
jae
stos
push
mov
aad
adc
mov
loopne
inc
in
es
mov
mul
je
sub
add
cmpsb
shll
jnp
pop
repz
jl
clc
pop
shll
xlat
xor
pusha
pop
ja
ret
clc
sbb
stos
add
push
mov
push
pop
jl
ret
pop
sub
dec
xorl
push
shll
shrb
mov
lcall
push
xor
push
mov
or
mov
add
int3
fldl
out
loope
shlb
push
idivl
icebp
mov
sbb
add
out
data16
mov
or
pop
xor
dec
test
cmp
adc
xchg
pop
pop
std
adc
out
pop
inc
pop
test
pusha
push
negl
push
mov
and
cmp
shlb
mov
adc
daa
xchg
rcll
rcrl
ret
jno
adc
stos
outsl
incb
pusha
arpl
adc
xor
notl
mov
cltd
setp
inc
and
fcmovne
shll
cltd
repz
fldcw
outsb
sbbl
loope
pop
jge
out
fidivs
es
xchg
and
pop
pop
pushf
xchg
iret
sbb
movsb
adc
cmp
test
enter
fwait
mov
cmp
cli
cmp
add
mov
movsl
cmp
dec
iret
dec
push
fcomps
loop
lret
xor
sbb
xchg
add
das
inc
push
out
out
push
stc
dec
xlat
or
addr16
arpl
repnz
nop
int
in
dec
ds
mov
cmp
int3
out
adc
xchg
pop
inc
xorl
stos
pop
or
sub
lds
pop
pushf
sti
pop
mov
jp
andl
xchg
ret
xchg
stc
or
std
ss
xor
aam
imul
inc
add
cmp
dec
mov
fistpl
cmpsb
xlat
xor
sbb
insb
ljmp
sahf
in
or
cmp
lods
in
gs
mov
loop
inc
sub
adc
inc
lcall
lods
sarb
sub
jns
jnp
stos
shlb
repz
lret
js
sub
std
jecxz
xchg
inc
mov
xchg
mov
dec
pop
jle
nop
push
cwtl
ljmp
adc
scas
das
out
or
stos
jns
push
sub
and
inc
notl
cmp
mov
xchg
pushf
jg
js
and
aas
push
push
pusha
and
arpl
daa
pop
and
or
dec
or
mov
rcrl
loop
and
les
xchg
and
das
lret
add
pop
out
mul
xchg
int
inc
xchg
rolb
cs
das
stos
and
in
icebp
push
xorl
cs
xor
jbe
pop
js
jge
nop
inc
loopne
das
movsl
adc
test
ds
add
xor
jp
cmpsb
imul
push
push
xor
sbb
sbb
cltd
in
aam
sbb
out
push
jg
mov
jl
fs
mov
imul
mov
pop
clc
mov
adc
adc
mov
cli
cwtl
jle
test
lcall
out
ss
and
xlat
adcl
push
mov
outsl
shl
js
jmp
add
mov
mov
imul
xor
test
ud2
add
ffree
aam
fldcw
mov
pfcmpeq
nop
xchg
mov
sbb
arpl
jbe
pusha
or
mov
or
and
pop
pop
dec
add
adc
js
imulb
test
inc
loop
xor
cs
xchg
inc
adc
inc
aaa
and
std
mov
iret
dec
pop
aas
pop
roll
movsb
lods
lret
mov
inc
pop
hlt
or
or
ds
or
push
push
cld
cli
shrb
stos
loope
enter
jbe
out
iret
mov
into
cli
xor
add
je
es
dec
jno
repz
in
test
adc
loopne
pop
cwtl
cmpsl
clc
jne
xor
and
hlt
or
jns
adc
ror
mov
loop
adc
adc
push
pop
pop
fldl
or
mov
jge
lret
mov
jg
filds
rorb
pop
aam
out
mov
xchg
sub
pop
lahf
pushl
push
mov
addb
inc
mov
push
test
nopl
push
xor
jle
in
cmp
xor
pop
jle
cli
fs
fisubrl
inc
stos
inc
mov
xlat
ss
xor
mov
dec
add
lcall
sti
rorl
incl
sbb
je
js
popl
xchg
mov
adc
lea
and
jg
jg
mov
stos
xor
ja
push
or
fcoms
mov
inc
outsb
imul
xchg
bound
pop
icebp
adc
mov
data16
sbb
jno
ret
push
lret
int
and
test
das
in
fldt
pop
aam
xchg
jns
mov
and
pushf
shll
mov
or
xchg
in
dec
sub
inc
push
xor
or
jle
or
je
xor
mov
inc
jge
in
lahf
cmp
sub
mov
pop
inc
sbb
aam
insb
outsb
sub
sbb
mov
lahf
clc
sub
push
mov
arpl
cmp
adc
into
cmpb
fs
xor
jp
jl
lock
jl
mov
fnstenv
pushf
lds
and
push
rorl
sbb
sub
jno
adc
sbb
mov
loopne
mov
sbb
icebp
mov
leave
hlt
js
dec
mov
dec
and
or
xor
xor
or
in
ss
mov
jmp
xchg
dec
aas
arpl
mov
mov
xchg
sbb
push
cld
ss
loopne
cmp
mov
lods
cmp
out
ret
push
dec
mov
jg
data16
cmp
inc
adc
lea
xor
dec
lock
ret
and
dec
jl
fdivp
or
dec
loop
out
adc
push
mov
test
push
dec
xor
pop
push
push
jp
mov
mov
shr
jecxz
repz
sbb
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
shr
jecxz
repz
sbb
pop
cmp
dec
inc
pop
sti
push
jnp
mov
xchg
mov
ret
ret
shr
ret
lret
add
adc
inc
dec
push
push
cli
jae
jl
cmp
mov
push
sub
sbb
or
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
cmpsb
ljmp
xchg
mov
daa
and
sub
or
xchg
inc
dec
mov
cmpsb
stos
xchg
lcall
fcmovb
in
cmp
sub
adc
or
pop
inc
dec
mov
cmpsb
insb
xchg
add
mov
cmp
js
sub
or
sub
cs
leave
ljmp
pop
or
jmp
loope
mov
inc
add
mov
jns
or
out
sub
mov
pop
mov
xor
out
scas
repz
ret
repz
push
xchg
adc
cwtl
xchg
cmp
push
sbb
hlt
mov
xchg
xor
cmpsb
stos
cld
sahf
xchg
push
sbb
inc
mov
in
or
movsl
jae
dec
insb
inc
push
jbe
jns
scas
leave
out
push
sbb
jge
cli
jnp
and
or
dec
inc
pop
push
push
out
or
sbb
lret
popa
imul
pusha
es
das
adc
cmpsb
mov
cli
out
fcmovb
pop
cmp
adcb
push
ss
data16
inc
js
mov
out
out
pop
xchg
xchg
jns
pop
push
mov
add
add
sar
ret
in
repz
mov
stc
push
pop
ja
adc
push
cmp
or
aas
xor
ror
cmpsb
dec
stc
imul
out
mov
ljmp
sub
sbb
or
pushw
pop
inc
dec
mov
cmpsb
stos
xchg
lcall
fcmovb
lret
sub
sbb
or
pushw
pop
inc
dec
mov
cmp
out
or
xor
inc
jne
push
adc
pushf
pop
roll
and
je
inc
mov
inc
icebp
xchg
fimuls
lds
sbb
cmp
adc
adc
mov
add
rorb
lods
lret
mov
xchg
out
mov
popf
push
popa
movsb
test
push
and
jl
cwtl
lock
std
mov
mov
test
adc
aad
cltd
pop
fnsave
jg
xor
nop
int3
push
pop
jl
fidivrs
adc
mov
shl
cmp
push
inc
cmp
mov
in
imul
add
cwtl
aam
out
fsubp
inc
xchg
and
inc
cwtl
xor
adc
fcomi
inc
das
cmp
int
mov
bound
xor
push
fld
or
or
push
jo
inc
test
mov
xor
into
int3
and
cmpl
push
shrb
lret
sbb
ror
ja
jmp
std
ja
repnz
sbb
cltd
jg
xchg
rcrb
and
int3
in
in
pop
call
dec
pop
aas
cmp
inc
and
out
or
shll
lods
xchg
pop
or
xchg
mov
mov
jae
xchg
jo
mov
mov
insb
cli
inc
loopne
mov
push
je
test
loope
sub
cld
shll
popf
sub
daa
mov
mov
add
dec
mov
aaa
sti
lret
mov
bnd
or
mov
int3
mov
push
shrb
ret
jp
mov
testl
addr16
inc
mov
and
push
jg
aad
es
jno
lret
jl
cmp
rorl
es
sbb
inc
jns
pushf
pop
pop
testb
pop
adc
push
sub
sbb
sub
test
jo
data16
ljmp
testl
sbb
adc
pop
inc
fs
xchg
jle
stos
fadds
hlt
sbbb
repnz
xor
xor
jbe
pop
or
repnz
leave
jmp
mov
adc
xlat
push
mov
cmpsl
jb
pusha
xor
mov
lods
mov
xor
xor
lcall
xor
ja
test
loop
adc
mov
dec
mov
inc
jns
scas
jbe
outsb
repz
jns
mov
arpl
and
ja
xchg
pop
add
or
inc
ds
inc
gs
out
ss
jge
mov
xchg
arpl
xchg
fdivrl
inc
pop
mulb
xchg
cmp
scas
call
sarl
sub
push
arpl
out
xchg
mull
sbb
jo
or
js
xor
cwtl
sbb
xor
xchg
cmp
call
pop
cmp
clc
out
xor
cmpsb
xor
fstpt
inc
sbb
jp
cmp
addl
shrl
loopne
sbb
rep
xor
jns
sti
mov
pusha
scas
sub
ljmp
cwtl
fstps
mov
mov
faddl
mov
es
imul
jb
jg
jmp
cmp
inc
ret
mov
and
xchg
xor
lock
call
sub
pop
nop
roll
inc
hlt
imul
fidivrs
pop
fld
push
sbb
add
popa
aad
andb
mov
outsl
movsl
mov
xchg
jmp
mov
in
pushf
mov
stos
pop
ret
push
xor
int
cmp
and
test
pop
popa
mov
xchg
sub
inc
stos
loop
in
cld
cmp
cmpl
shrl
dec
scas
pop
in
sub
adc
int
xchg
mov
test
scas
loopne
pop
xchg
jmp
dec
or
xchg
out
ficompl
mov
leave
adc
leave
dec
decl
xchg
test
xchg
out
mov
aam
pop
aam
ffreep
gs
mov
sub
or
mov
cmp
sbb
pusha
lea
pop
int
ja
xlat
outsb
pusha
das
cmp
movsl
adc
mov
mov
pop
mov
hlt
icebp
jle
dec
jae
mov
or
fsts
lods
aaa
xor
scas
cmpsl
in
sbbl
les
ss
not
inc
jp
inc
dec
andb
inc
mov
sbbb
lds
adc
adc
mov
and
cmp
push
inc
pop
pop
lods
scas
adc
pop
push
sbb
aad
cwtl
mov
xlat
in
pop
and
fdivs
xchg
pushf
or
out
jle
out
dec
aam
inc
out
pop
ret
shrl
ror
sahf
mull
insl
pop
xchg
fildl
fstps
push
add
mov
cmp
test
xor
mov
les
int3
ss
push
pop
or
mov
loopne
int3
dec
shrl
pop
mov
mov
fcmovbe
pop
jmp
xchg
mov
push
pop
xor
dec
bound
add
pop
pop
into
and
outsb
push
in
out
jo
rorb
xor
aam
add
xlat
subl
mov
or
mov
in
pop
pop
inc
test
jne
clc
call
imul
push
or
xor
outsl
jp
add
testl
popf
mov
or
push
stc
cmp
and
inc
xor
pop
adc
scas
jle
lock
testl
jae
pop
loope
rcrb
scas
test
sbb
jne
inc
movb
out
xlat
pop
scas
stos
or
xlat
push
push
aas
arpl
hlt
mov
pop
push
pop
cld
inc
adc
xor
stc
and
and
sbb
pop
dec
jns
mov
call
popa
dec
sbb
xchg
sub
mov
movsl
xchg
dec
add
push
jle
hlt
mov
sbb
das
test
std
std
lea
pop
or
popa
inc
mov
pop
imul
jge
fsubrs
jb
mov
fwait
jae
or
scas
cltd
add
xor
inc
jge
pop
pop
cmp
dec
push
hlt
bound
add
jmp
xchg
rcrb
repz
pop
ret
push
or
or
jmp
dec
sub
inc
subb
inc
int3
sbb
leave
imul
repnz
sub
dec
je
testb
inc
push
xchg
and
mov
sbb
xor
test
inc
cwtl
mov
pusha
cmpl
pop
aas
ja
jae
dec
loopne
into
push
shrb
inc
pop
imul
pop
movsl
push
repnz
xchg
sbb
pop
data16
out
shrb
sub
jae
je
ss
ret
sbb
xor
adc
pushf
mov
jle
ja
xchg
sub
subb
mov
loop
in
ss
xchg
mov
xchg
andb
in
ss
jecxz
add
xor
add
push
lret
loope
mov
pop
push
stc
stos
push
imul
mov
mov
orb
aas
out
mov
fdivrp
stos
sbb
pop
lea
movsl
xlat
aad
cli
lcall
mov
dec
jp
dec
out
icebp
in
in
or
sub
mov
int
adc
lret
cltd
or
jecxz
pop
sub
pavgw
adc
mov
lea
pushf
lock
sbb
lahf
dec
in
ficoml
xchg
decb
mov
les
and
xlat
lcall
sahf
and
xchg
mov
and
sbb
sub
shll
mov
mov
cmp
hlt
fcmove
pop
cmc
popa
mov
inc
mov
nop
cmpsb
jmp
movsb
and
outsl
lret
cmp
push
jbe
fprem
loope
inc
and
push
movsb
jmp
mull
push
pop
mov
jo
mov
ss
int
pop
cmp
mov
popa
pop
push
jle
mov
std
or
jae
jecxz
pop
mov
sbbl
mov
cld
sbb
sbb
ffree
lock
jp
je
cmp
pop
or
xchg
test
add
xor
jno
pop
xchg
fnstcw
xchg
xchg
xchg
cmpsl
shl
lret
shrl
xchg
loopne
shlb
enter
mov
mov
ljmp
add
sbb
adc
mov
cs
gs
fistps
sarl
sub
andb
pop
out
and
xchg
movsl
sahf
jbe
jle
dec
mov
mov
nop
loopne
jle
dec
pop
xchg
leave
outsb
add
out
and
adcb
mov
iret
into
scas
rclb
mov
sarb
jmp
insb
pusha
loopne
pushf
mov
pushf
jecxz
pop
cmpw
insl
jb
shll
push
lods
les
test
mov
dec
sub
jbe
add
push
jbe
roll
jbe
adc
adc
push
clc
sub
sub
sub
lea
dec
leave
into
jns
out
sbb
push
push
mov
push
or
mov
or
dec
outsl
xor
in
mov
mov
movsb
sti
test
push
push
scas
mov
inc
inc
sar
mov
insb
mov
xchg
jnp
into
je
xor
std
push
lock
pop
mov
push
out
mov
cli
leave
orl
jecxz
roll
insl
subb
sbb
shlb
and
imul
jecxz
mov
ss
or
push
data16
sbb
cwtl
xchg
les
fs
mov
ret
cmp
flds
rorb
push
dec
pop
lods
mov
neg
rclb
aaa
faddp
cmc
jge
js
out
rcll
jle
xchg
push
xchg
or
aaa
fs
frstor
bnd
or
dec
mov
push
repz
pop
stc
test
out
ficomps
push
sbb
push
xchg
movsl
cmp
into
xor
decb
mov
rorl
das
dec
outsl
scas
mov
out
jle
adc
stc
cmp
jbe
gs
and
rcrb
add
push
mov
fld1
ds
std
and
jp
hlt
mov
jns
or
jp
pop
insl
out
sub
push
jge
push
enter
adc
jo
jo
jne
adc
cmp
je
sub
in
sub
sbb
pop
fs
je
das
mov
lret
das
dec
fists
ret
aam
cmp
pop
stos
mov
sub
push
pushf
xchg
xchg
add
xor
dec
xchg
addb
imul
lcall
mov
cmp
mov
repnz
cmp
mov
arpl
jo
push
in
cmp
jo
das
movsl
mov
xchg
ds
ds
loop
repz
aad
add
sti
sahf
add
fs
push
dec
divb
testl
sbbb
ljmp
mov
push
inc
cmp
dec
clc
pop
adc
xchg
sbb
mul
push
add
test
jnp
faddl
push
push
inc
in
fisttpll
iret
add
sub
sub
cmp
mov
or
mov
xor
cld
movsl
fsub
adc
rolb
call
lcall
xchg
xchg
in
ret
js
jb
clc
adc
js
pop
or
andb
movsl
and
aas
add
pop
xorb
outsl
scas
and
sub
inc
sub
lea
clts
loop
jmp
mov
xlat
jo
mov
mov
hlt
aad
or
adc
mov
and
sbb
dec
jbe
mov
repnz
cld
test
sbb
popf
mov
mov
fildll
jle
mov
push
insb
jbe
test
jne
xchg
add
xchg
adc
hlt
jbe
add
jns
ljmp
fisttpll
movsb
mov
lret
lret
jns
dec
pushf
mov
sub
ds
push
jmp
fiadds
mov
imulb
adc
or
jb
adc
rcrb
inc
sbb
xorl
pop
lds
mov
sub
pop
test
sbb
out
in
add
les
jge
repz
cmp
mov
in
cmp
outsb
sbb
jo
or
mov
mov
lea
jp
pop
xor
or
cld
mov
adc
leave
jp
jne
push
mov
in
andb
add
mov
add
imul
jle
shlb
cmp
mov
movsl
pop
les
ljmp
jb
jmp
xor
dec
push
lret
insb
jno
testb
dec
cmp
push
mov
in
mov
jge
sahf
adc
pushf
inc
cli
test
cmp
mov
cmp
mov
in
xor
push
mov
rol
out
adc
xchg
into
adc
fdivs
aaa
clc
jne
aas
dec
std
dec
in
fwait
adc
cmpsb
scas
pusha
les
pop
call
push
xlat
orb
mov
rolb
dec
adc
or
sti
icebp
dec
scas
add
daa
pop
mov
jle
data16
add
xor
jp
dec
adc
int
fnstsw
and
aam
mov
mov
mov
mov
sbb
dec
pop
mov
cmpsb
push
push
jo
sub
xchg
xchg
addb
sub
mov
pop
add
lock
mov
push
cmpsb
movsb
mov
cwtl
clc
mov
lahf
pop
movsl
cld
push
jae
inc
sub
cmp
mov
sub
add
arpl
movl
jp
mov
movsb
sub
test
test
mov
notb
push
ljmp
mov
or
sub
ljmp
fwait
shll
mov
test
sbb
insl
xchg
sbb
xor
jne
stos
and
mov
jmp
push
or
xchg
fisubl
jb
xchg
rol
fwait
dec
cld
popf
call
aam
xor
mov
add
xchg
xchg
subb
mov
cmp
cmpsl
fisubrs
inc
ljmp
movsb
or
subb
cs
enter
pushf
xorl
pop
icebp
fisttps
xor
push
and
adc
xlat
fmul
jl
pop
call
je
scas
jle
pop
hlt
std
cld
inc
jl
push
sbb
inc
arpl
sbb
jno
xor
movsb
dec
mov
ss
clc
adc
hlt
movb
stos
aad
jo
adc
and
dec
or
or
shlb
push
inc
dec
jbe
jo
daa
bound
je
add
aad
push
mov
rep
sahf
adc
mov
loopne
adc
cmp
pop
int
das
fildl
roll
mov
cs
imul
jp
ja
in
sbb
pop
ret
fistps
xchg
clc
jle
int
ds
pop
adc
stos
or
mov
repz
adc
or
push
sbb
push
add
cmp
in
aam
test
adc
lock
stc
push
ret
sbb
call
xchg
loope
fxch
cmp
cmp
popa
subl
jae
mov
inc
dec
sbb
nop
loopne
adc
pop
test
subb
test
inc
add
ret
xchg
fs
xchg
hlt
clc
jns
and
in
lahf
call
loop
fs
pop
xchg
add
jne
movsl
or
lods
cmp
sub
mov
cs
xchg
iret
pop
js
fldl
jno
xchg
mov
adc
pusha
sub
cmpsb
fisubl
sub
scas
sub
lods
mov
mov
les
or
pop
jle
jle
jns
xchg
sub
inc
outsl
mov
xor
sub
enter
mov
jb
ss
stos
cmp
xchg
outsl
sahf
lods
mov
aam
dec
inc
pop
lock
add
in
jae
mov
jl
and
or
outsb
es
jle
jne
test
pop
push
or
add
lret
inc
int
int
lds
js
pop
or
adc
lods
aas
clc
ds
xchg
cwtl
rcrb
cmp
std
xor
inc
ret
out
jecxz
lret
stc
inc
imul
and
sub
es
sub
cs
jbe
repz
repz
and
pusha
pop
sub
or
xor
jg
scas
mov
stos
out
jmp
cmp
cli
out
lcall
std
xchg
xchg
scas
add
test
movsl
xchg
pusha
inc
adcb
enter
cmc
and
stos
jg
sub
shll
mov
xor
xchg
or
subl
pop
jg
jne
pushf
sbb
cmc
cmpsl
lods
pop
mov
inc
push
mov
clc
push
jo
xor
fdiv
xor
adc
dec
scas
mov
lcall
out
faddl
mov
sbb
xchg
inc
sbb
add
data16
mov
lea
push
imul
add
and
pop
xlat
sbb
adc
cmp
aaa
or
cltd
or
sub
test
jmp
fisttps
imul
pop
aaa
and
lret
addb
mov
adc
mov
sub
mov
mov
imul
pop
clc
sti
xorl
push
pop
icebp
xor
add
push
jmp
lods
stos
bound
adc
jnp
jbe,pn
loopne
push
pop
nop
mov
std
mov
and
fsts
mov
mov
inc
mov
orb
in
test
imul
lods
jmp
ja
lds
mov
sti
test
and
aad
mov
inc
pop
cmpl
arpl
xchg
add
jns
les
orl
jle
nop
ret
adc
stos
sub
sub
sub
or
pop
or
cwtl
xchg
dec
pusha
mov
cwtl
jle
setnp
add
test
jp
faddl
xor
fs
ss
cmp
into
js
repz
out
mov
lahf
arpl
mov
je
xchg
scas
xor
fnsave
ljmp
mov
lret
int
adc
pop
fildl
iret
in
dec
dec
cmp
insl
mov
mov
test
jbe
adc
negl
shrb
cmpsb
add
loopne
ds
pop
cmc
push
push
movsb
adc
stos
lcall
pushf
or
ss
jbe
pop
pop
add
adc
aam
mov
mov
mov
push
outsl
pop
xor
cli
jge
je
outsl
xchg
scas
int
lea
and
imul
pusha
mov
sbb
adc
lods
ret
outsl
test
mov
inc
ja
cmp
adc
sbbl
xor
repz
jns
xchg
aas
lret
ss
ficompl
pop
mov
jbe
lcall
push
shrb
aad
jg
notl
lea
sbbb
out
addr16
xchg
and
mov
dec
mov
jbe
adcl
xchg
inc
stos
lcall
popa
in
iret
lret
mov
or
ret
mov
imul
bound
lods
mov
mov
cmpsb
scas
push
jo
iret
imul
jnp
pop
pop
inc
lahf
xor
and
jl
lods
cmp
push
lcall
jnp
and
jne
lods
add
hlt
fwait
test
cs
push
xor
mov
hlt
cmc
jno
pop
and
xchg
mov
test
mov
in
aas
fstpl
nop
movsb
js
and
pop
mov
and
ficoms
sbb
xor
adc
dec
push
inc
mov
push
sub
jge
jg
xchg
mov
fs
push
cmpsl
outsl
test
rcr
xor
aaa
sbb
cmp
or
fistpll
and
sub
icebp
xchg
out
pop
in
rolb
jo
cmp
sbb
jmp
mov
scas
sahf
dec
sbb
cmp
ss
repz
xor
mov
jge
fstpl
jle
pushf
pusha
sub
out
xor
add
dec
mov
jno
aas
mov
in
sub
stos
data16
movsl
push
data16
in
mov
xor
or
cs
movsb
scas
xor
jmp
jbe
arpl
arpl
sahf
and
jmp
jge
lds
pop
mov
mov
add
imul
fwait
xlat
mov
dec
mov
jb
sub
mov
mov
fnstcw
stos
push
dec
into
in
loop
fbstp
ret
int3
xor
icebp
jbe
push
xchg
enter
sbb
cmpsb
lds
push
ret
mov
jmp
pop
cmpsb
nop/reserved
dec
out
ds
or
mov
sub
lods
xchg
loopne
fwait
outsb
clc
sbb
dec
pop
xchg
jecxz
lahf
stos
mov
mov
sbb
shrb
mov
xor
add
enter
outsb
hlt
mov
cmp
cmpsb
std
dec
cmpsl
cmc
cmp
xchg
push
repnz
rcll
push
outsl
daa
mov
into
xor
jp
int
pop
fcompl
nop
pop
loopne
loope
test
in
cmp
push
enter
idivl
out
lret
lret
shll
popf
pop
fwait
sbbb
sub
pop
stc
jns
clc
fdivs
fistl
aas
xor
dec
add
stos
xchg
lahf
xchg
fcmovb
lret
sub
sbb
or
pushw
pop
inc
dec
mov
cmpsb
stos
xchg
lcall
fcmovb
lret
sub
sbb
or
pushw
pop
inc
dec
mov
movsb
push
addb
fiadds
cmp
cs
sbb
add
pushw
push
inc
scas
mov
cmpsb
dec
xchg
jle
lret
out
pop
or
lds
cmpb
adc
and
xor
fdivl
cld
sbb
lds
mov
hlt
js
insb
xchg
or
xchg
mov
movsb
cmp
int3
inc
fdivl
cld
adc
add
xor
and
aam
les
in
xchg
jle
push
mov
movsb
cmp
aad
lds
in
xchg
add
xor
and
aam
out
test
imull
pop
int
and
or
pop
fisttps
push
sbb
out
adc
push
seta
inc
mov
in
lods
adc
add
enter
push
cmp
add
test
fdiv
les
fildll
mov
lahf
jnp
push
rcrl
popa
adcl
movsb
jns
xchg
arpl
mov
arpl
insl
fsubs
and
dec
mov
les
test
pop
dec
shll
adc
jmp
aad
int3
mov
les
add
dec
jg
mov
dec
adc
jbe
push
cmp
and
ss
mov
jae
cmpsb
cmp
cmc
fs
adc
add
xor
and
aam
les
in
xchg
adc
add
movsb
cmp
xor
imul
shlb
xchg
sbb
imul
push
and
and
shlb
popa
mov
or
jle
jl
sbb
dec
into
dec
xor
inc
fdivl
mov
mov
xor
and
aam
les
in
xchg
or
sbb
sub
cmp
int3
inc
fdivl
cld
adc
add
xor
and
aam
les
in
xchg
or
sbb
sub
cmp
int3
and
inc
pop
testb
bound
mov
mov
popa
adc
js
insl
cmpb
sarb
dec
ss
test
fucomi
loopne,pt
jnp
iret
fildll
hlt
leave
push
jp
jbe
sti
xor
add
mov
je
and
test
lock
adc
xor
nop
test
mov
sbb
mov
mov
stc
aaa
pop
pushw
popa
adc
popa
loopne
xchg
mov
and
adc
cld
ja
inc
sarb
xchg
daa
xor
jl
inc
mov
push
push
pop
or
popa
data16
adc
repnz
xor
xchg
loope
out
das
jns
pop
jne
jnp
aad
and
and
mov
or
lcall
and
dec
clc
mov
mov
dec
aaa
xchg
loope
sbb
cltd
mov
mov
sahf
int
mov
pop
cmp
fwait
inc
mov
not
insb
cmp
ficoml
rol
mov
jb
cs
shlb
xor
mov
hlt
std
cmp
sub
daa
test
ret
dec
pushf
cmp
push
pop
popw
out
js
push
jg
jne
inc
push
and
loope
divb
fadds
stos
icebp
pop
fldcw
test
pushl
rcrb
mov
mov
jno
cmpsb
cmpsb
or
leave
and
xor
andb
cmp
or
mov
xor
sbb
out
sub
pop
scas
or
dec
dec
xor
sub
rcl
stos
cmpsl
mov
cmp
adc
ret
mov
test
test
xchg
cmpsl
mov
mov
sbbb
lock
test
mov
dec
xchg
xchg
cmp
movb
xlat
xchg
lds
imul
push
mov
pop
mov
popa
imul
inc
mov
mov
mov
sub
sub
or
sbb
inc
xor
roll
cltd
sub
mov
daa
adc
daa
movsb
ret
jmp
clc
mov
out
dec
cmc
push
sahf
inc
int
push
pushf
aad
ss
fsubl
xor
popa
cwtl
mov
les
xchg
mov
and
dec
scas
and
dec
out
pop
push
pop
add
push
and
jge
jbe
jecxz
aaa
dec
ss
lcall
mov
filds
sub
pushf
cmpsl
fidivs
or
lock
jae
xchg
push
dec
adc
xchg
out
dec
out
das
daa
cmp
and
jmp
fs
sub
ret
in
mov
int3
repz
push
inc
or
sub
cli
pop
std
es
jno
xor
push
js
rclb
js
cmp
pusha
mov
cli
aas
aam
xchg
xor
dec
dec
xor
xchg
lods
test
pop
lret
jo
js
mov
sbb
add
mov
hlt
xchg
push
add
hlt
loopne
mov
and
sub
and
mov
dec
push
andb
lods
aad
dec
add
or
fsubp
andb
testb
push
jb
repnz
aad
adc
movsb
xchg
adc
lock
push
cmp
or
adcb
jb
filds
aas
lea
fisttps
in
lods
cwtl
int3
cmp
jp
inc
adc
shrl
push
or
sub
adc
xor
xchg
lock
cs
push
stos
in
shr
pop
or
adc
or
xor
lret
push
enter
mov
ss
push
mov
xchg
fildll
xor
out
out
lods
test
rcrl
mov
jo
dec
lods
mov
outsl
icebp
js
mov
xchg
ud0
shll
jnp
push
push
jg
dec
aad
mov
jne
xchg
inc
dec
mov
or
mov
cld
xor
clc
push
adc
dec
arpl
dec
mov
jmp
dec
es
mov
jp
popa
dec
js
lcall
mov
clc
inc
sarb
add
test
outsl
sub
shrl
in
or
fwait
aad
ret
cli
shl
jb
pop
and
pop
into
icebp
pop
and
inc
mov
sub
add
mov
lahf
sub
mov
imul
inc
stc
mov
push
mov
int3
cmp
xlat
fwait
loop
leave
xor
mov
fcompl
mov
sub
rclb
popf
mov
mov
mov
jno
stos
sahf
test
inc
das
je
or
add
aam
xor
test
je
bound
jnp
shlb
xchg
sbb
sbb
sub
mov
cmpsl
xchg
inc
dec
mov
lea
in
jl
jno
inc
inc
cld
int3
sbb
fldl
add
sub
sub
push
pop
inc
loop
push
lcall
int
sub
or
and
add
stos
mov
jp
sbb
pop
push
mov
repz
out
xchg
mov
inc
xorb
mov
xor
std
ss
inc
ret
rcrl
sub
sub
sarl
sbb
hlt
stos
daa
in
data16
push
jne
dec
inc
adc
jno
jecxz
in
mov
lret
ja
pop
cmp
sub
sbb
repnz
mov
sub
cmp
jns
and
psrad
push
sub
sbb
adc
repnz
or
push
inc
out
in
fdivs
push
push
fnstcw
xchg
push
mov
test
cmpsl
jle
mov
pop
inc
ja
je
cwtl
insb
rol
add
jmp
nop
in
xchg
out
jg
dec
jnp
ret
les
stc
addr16
in
es
notl
inc
and
inc
cmp
mov
sbb
pusha
jmp
insl
and
jbe
and
into
sbb
mov
test
fnop
sbb
cmp
inc
pop
sbb
sbb
mov
mov
andb
push
pop
cld
adc
pop
jecxz
pusha
movsb
or
sub
pop
and
jmp
cmp
out
cmp
pop
sub
mov
push
lock
loopne
xchg
ljmp
dec
mov
mov
scas
push
and
aam
xor
inc
or
xchg
cld
xchg
cmp
js
sti
pop
mov
idiv
pop
icebp
cmp
cs
call
sbb
sbb
mov
fildl
shlb
faddl
push
pop
mov
pop
adc
and
imul
pushf
fdivrs
jbe
sti
cmp
push
outsb
push
cmc
imul
mov
add
dec
shrl
sbb
mov
adc
sahf
sbb
cmp
mov
gs
and
in
sbb
call
pop
jnp
sbb
ret
add
idiv
stc
jno
stc
xor
dec
xor
dec
arpl
iret
xchg
sub
xor
out
xor
packssdw
push
icebp
sbb
sbb
lcall
cli
mov
xor
add
fadds
insl
dec
cs
lgs
pop
mov
cmc
pop
pop
and
int3
repnz
jo
pusha
aam
out
dec
aam
arpl
cmpsb
xor
subl
pop
jecxz
sub
decl
sti
into
test
mov
xchg
xchg
sbb
mov
call
xchg
fmulp
xor
and
inc
or
dec
inc
sub
xor
leave
adc
js
sub
xor
adc
dec
inc
mov
mov
mov
inc
bound
outsb
outsb
shrl
cmc
mov
pop
xorl
out
fdivl
ret
sahf
pop
mov
insb
lock
testl
aas
cmp
into
outsl
jl
sbb
ret
inc
sbb
jge
dec
jl
ljmp
or
mov
fistpl
sti
sbb
pop
test
add
inc
sbb
jne
sbb
mov
mov
mov
jle
sub
outsb
inc
and
push
xor
loope
jns
mov
add
inc
adcb
push
inc
icebp
jnp
lea
adc
push
jl
mov
cwtl
je
inc
lcall
rcrb
addr16
clc
lods
jne
dec
pushf
pop
or
gs
adc
pop
loop
jae
jmp
fs
mov
repz
cmp
pushf
add
aam
cltd
popf
scas
icebp
js
je
dec
cs
lahf
adc
xchg
sahf
xchg
sbbb
rclb
xor
lds
cmp
cmp
pop
jb
fistl
mov
and
stc
dec
fimull
bound
mov
dec
mov
pop
ds
movsb
in
adc
bound
divl
les
dec
icebp
jmp
push
mov
xlat
pop
mov
mov
insb
aam
or
mov
lret
sbb
scas
mov
inc
data16
mov
push
cmp
xchg
mov
loope
insb
mov
orb
cmp
lock
outsb
rcll
adc
mull
mov
popa
push
sbb
in
gs
and
out
sbb
sahf
xor
out
mov
je
xor
xor
or
movb
rol
sbb
xchg
hlt
or
repnz
sbb
test
nop
sub
ss
ss
pop
or
ljmp
and
shlb
push
sbb
into
xor
sbb
enter
out
stos
mov
mov
add
in
push
fsubp
mov
jbe
mov
sbb
add
lret
adc
jnp
scas
push
add
xlat
push
mov
ss
xor
sbb
adc
fcomps
dec
outsb
call
mov
fstl
scas
push
inc
mov
mov
cmp
pop
lds
sub
push
iret
loope
fcmovnbe
sub
sbb
mov
jecxz
cmp
sahf
fcmovb
lods
dec
lret
arpl
test
je
mov
pop
aaa
cltd
int
mov
int
fisubl
insl
das
popf
xchg
push
cmc
cmp
push
xchg
iret
pop
or
jg
jnp
cmp
outsb
add
add
xchg
cwtl
mov
les
test
mov
xchg
push
scas
repnz
std
rol
xchg
inc
stc
jp
andl
rolb
loopne
xor
testl
dec
out
dec
sbb
pop
test
adcl
js
and
ret
mov
loop
adc
int
push
cmp
imul
bound
cmpsb
outsl
jle
push
inc
and
dec
jg
adc
es
idivb
jbe
add
or
lods
mov
and
cmp
adc
xchg
out
sub
insl
dec
int
pop
mov
aam
call
insl
inc
sbb
inc
mov
dec
jecxz
pop
push
and
iret
mov
mov
adc
dec
cli
mov
and
sub
ljmp
jns
sarb
mov
or
pushf
pop
scas
lret
pusha
mov
out
mov
jbe
dec
fisubs
jg
mov
sub
mov
shll
dec
mov
add
add
fsubs
mov
xchg
and
adc
xchg
jmp
xor
daa
ds
add
jl
mov
pop
adc
jmp
scas
negl
mov
loop
pushf
mov
pop
enter
test
in
cwtl
popa
sub
int3
sahf
lcall
or
xor
and
stos
jmp
xor
sub
setae
push
cmp
fldt
fsubrp
and
sub
insl
push
call
pop
cmc
mov
inc
and
xchg
pop
int3
xorl
or
fbstp
adc
jno
lahf
iret
inc
pusha
jb
aad
xor
loope
mov
fs
cmpsl
popf
xchg
inc
cwtl
rcrl
out
pop
popf
fnstsw
rcr
es
aaa
and
sbb
inc
jmp
cmp
insl
sti
imul
ss
push
js
mov
dec
or
dec
add
or
adc
pop
xchg
xchg
push
cmp
in
daa
pop
in
sub
add
test
std
out
and
jnp
cmc
add
jo
and
movsl
scas
je
jg
sbb
idiv
and
aaa
inc
jp
push
hlt
inc
jg
jge
inc
pop
mov
sbb
loopne
mov
xchg
js
sub
icebp
pop
or
repz
sub
mov
mov
xorb
loopne
push
sti
out
xchg
js
jb
jp
hlt
aas
vaddsd
ja
mov
nop
ja
lcall
jbe
aam
push
dec
mov
in
roll
push
dec
aad
sbb
cwtl
jno
mov
push
pop
out
jbe
mov
fstl
mov
gs
jae
mov
ljmp
jb
daa
rorb
gs
daa
mov
jb
movhps
xor
inc
aaa
pop
mov
or
inc
lods
dec
xor
jmp
or
popf
jns
jge
dec
shlb
mov
xchg
shlb
mov
loopne
xchg
inc
and
bound
xchg
xor
adc
rcr
test
pop
jecxz
mov
cwtl
data16
scas
insl
ret
mov
icebp
sub
in
hlt
loop
xor
aad
adc
sub
jne
inc
mov
jo
movsb
lret
push
and
loope
mov
push
dec
data16
out
push
lods
push
dec
dec
and
ss
xchg
scas
ret
insb
xor
lods
inc
dec
mov
push
dec
mov
mov
push
xor
jge
add
jbe
test
dec
xor
or
lock
cmp
cmp
lcall
sub
cmp
fwait
mov
jle
es
sbb
mov
repz
jns
sbb
mov
xor
pop
repnz
mov
mov
rorb
test
adc
lret
fisttpl
cli
mov
or
arpl
jmp
dec
jmp
mov
jl
inc
idiv
or
sbb
dec
dec
add
inc
dec
xor
push
dec
mov
jb
bound
sti
cmc
or
jo
or
enter
xor
int3
sahf
xchg
int
ds
sti
jge
sbb
imul
and
sbb
bound
jno
jne
leave
and
into
mov
and
push
in
enter
mov
dec
sarb
jg
cmpsb
in
insl
jae,pt
mov
sbb
cmpsb
jp
and
loop
adc
imul
xor
adc
push
enter
int
inc
xchg
gs
mov
adc
push
enter
lret
mov
sbb
outsl
scas
sbb
jp
jne
push
sbb
das
xor
add
dec
shlb
in
cmp
jmp
call
jp
mov
cmp
fdivrs
push
std
lcall
imul
mov
cli
test
jmp
pop
cmp
lods
add
ror
and
mov
data16
out
jp
cmp
dec
cmp
push
adc
jge
sbb
int3
jb
push
out
insl
shlb
adc
xchg
sub
ds
lods
jecxz
bnd
ret
xchg
xlat
sti
mov
jne
movsl
inc
dec
jmp
push
cmp
lods
movsb
lods
cmpsl
push
fisubrl
fisubrl
cmpb
cmp
mov
popl
lret
push
pop
pop
cs
cmc
mov
ret
int
jmp
lock
and
mov
xchg
leave
leave
fsubrs
and
movsb
jmp
push
xchg
mov
dec
lcall
fsubrs
cmp
js
sbb
lods
cld
daa
push
jns
fstpt
lock
cmp
mov
out
dec
jle
sahf
inc
dec
pop
adc
bound
inc
pop
pop
push
in
ror
pop
mov
fiadds
xchg
movsl
sub
adc
std
push
inc
dec
mov
mov
mov
js
cmp
adc
shlb
in
push
pop
or
sub
stos
daa
outsb
xchg
cs
cwtl
mov
aas
mov
mov
icebp
mov
cwtl
lea
jae
ss
jle
lret
shlb
pushf
cmpsb
mov
and
cmp
mov
cwtl
fwait
push
loope
push
mov
es
inc
push
or
hlt
js
movsb
sub
add
xchg
push
jnp
inc
pushf
cwtl
xor
sub
movsb
ror
xchg
xchg
mov
pushf
push
lods
call
pop
shrb
and
xor
jbe
repz
out
in
adc
lea
inc
js
xor
std
addb
inc
and
test
in
movsl
adc
push
jae
push
cmp
sub
call
cltd
or
add
jp
push
jns
push
inc
inc
loopne
pop
gs
mov
rolb
push
inc
decl
mov
add
jle
pop
xor
sarb
push
sbb
inc
sub
rcrl
test
shr
adc
ret
loope
sub
aaa
fstpt
pop
hlt
xor
inc
and
jne
sti
jo
dec
cmpsl
lock
mov
leave
mov
push
jns
dec
mov
dec
aam
mov
or
sbb
loopne
outsb
inc
inc
fldenv
sub
xor
sub
lock
jno
pop
adc
xor
xchg
movsl
inc
mov
ljmp
pop
mov
or
pushf
leave
add
mov
pop
jo
imul
pop
or
roll
fisttpll
mov
movsb
or
mov
inc
rcrb
ja
inc
jnp
and
clc
fmulp
scas
jp
and
lcall
xor
out
pop
shll
stos
fcoml
inc
sub
push
mov
hlt
or
jg
inc
cmp
cmpb
xor
rclb
stos
jp
push
pop
adcb
add
xor
je
fstps
pop
mov
imul
mov
int3
and
cltd
mov
mov
ret
inc
add
repnz
repz
loop
sub
test
pushf
divb
pop
aam
pop
xlat
adc
push
movsl
jg
out
nop
mov
cmpl
enter
add
test
xor
cld
lds
js
stos
cmp
enter
jg
fmull
outsl
cld
decb
adc
jmp
lds
dec
out
or
lret
jns
pop
or
jmp
xor
ret
dec
clc
fdivs
pusha
mov
xor
aad
in
in
iret
out
dec
sbb
cmc
mov
pop
in
hlt
mov
mov
cmp
xchg
fsubl
mov
lods
inc
inc
inc
or
mov
pusha
cmp
sahf
fcomi
pop
es
test
pop
sbb
mov
adc
gs
mov
outsb
adc
inc
rol
aas
push
push
outsl
dec
hlt
test
nop
shrb
imul
xor
int
sarb
push
sarl
inc
and
xlat
cmp
xor
jne
jmp
dec
lock
adc
loopne
xchg
inc
jg
inc
push
adc
ret
jb
inc
sbb
test
pop
xchg
cmp
out
xchg
jmp
or
push
mov
pop
enter
icebp
add
add
inc
sbb
jae
mov
xchg
and
pushf
repz
cmp
mov
mov
inc
addr16
jecxz
sub
xchg
xor
bound
aam
iret
xchg
lock
or
jo
hlt
push
test
cmp
push
out
dec
int3
xchg
mov
out
insb
xlat
cmp
inc
es
icebp
xor
enter
and
dec
sbb
inc
ljmp
mov
das
int3
pop
inc
leave
push
xchg
sub
pushf
mov
mov
movl
dec
dec
insl
in
fldenv
xor
push
sub
ss
test
xor
daa
jne
jmp
arpl
xchg
sti
sub
fnstcw
call
comiss
ds
mov
push
ds
mov
in
push
cs
xchg
orps
arpl
cmp
cmp
lods
xchg
dec
cmp
or
jmp
and
ret
mov
xchg
cld
cwtl
xchg
add
loopne
fcomps
lea
sbbb
popf
int3
sbb
mov
rorl
mov
push
repz
mov
mov
pop
sub
testb
lock
aaa
cs
xchg
or
icebp
jmp
repnz
add
je
mov
add
shrb
cli
fsubr
push
fmull
cwtl
sbb
sbb
data16
xor
shlb
js
daa
sub
aad
dec
or
in
popa
sbb
or
mov
data16
mov
and
dec
jmp
movsb
sti
ret
xor
sbb
mov
lret
pop
ss
int
mov
push
fisttpl
sub
fmull
fs
adc
add
xor
and
aam
les
in
xchg
or
sbb
sub
cmp
int3
inc
fdivl
cld
adc
add
xor
and
aam
les
in
xchg
or
sbb
sub
cmp
int3
inc
fdivl
cld
adc
add
mov
hlt
insb
in
xchg
or
sbb
sub
je
fs
adc
add
mov
movsb
jl
dec
cmp
pop
insb
in
jecxz
or
dec
push
pop
inc
and
mov
adc
rclb
movsb
push
xor
and
jno
popa
lock
roll
mov
mov
adc
popa
loopne
rolb
xor
mov
add
push
roll
and
adc
popa
loopne
rolb
push
xor
call
cmpsl
or
shrb
fcoml
je
fcmovnb
sahf
sub
push
mov
and
ficoml
jl
hlt
test
ds
adc
in
rcrl
mov
inc
mov
dec
dec
jle
test
jns
xorb
loope
hlt
sub
mov
xor
ljmp
push
mov
sbb
mov
insb
inc
lock
int3
jno
dec
shlb
inc
call
adc
dec
rorl
pop
into
ret
xchg
sbb
ljmp
pop
pop
push
movsb
inc
jle
xchg
and
mov
daa
sbb
sub
sub
push
fmul
mov
lea
lock
mov
out
and
adc
popa
loopne
rolb
push
xor
add
push
roll
and
dec
cld
inc
into
push
mov
test
pop
rcll
loope
xchg
sub
cmp
dec
jecxz
in
enter
test
push
mov
ret
push
test
add
pusha
mov
mov
jno
inc
rclb
and
jo
pusha
icebp
push
roll
and
adc
popa
loopne
rolb
push
xor
add
push
roll
and
adcl
daa
mov
scas
xchg
repz
inc
jno
aaa
lcall
dec
cmpl
loopne
jle
sbb
sarl
cltd
cli
lds
cmp
inc
or
jmp
ss
mov
icebp
loop
in
mov
ret
mov
out
outsl
mov
nop
jno
inc
jmp
adc
loopne
push
cli
fiaddl
in
sub
divl
jl
push
lahf
loopne
insb
call
xor
cwtl
cmpsb
movsl
out
xchg
or
loope
mov
xor
add
sbb
sbb
ljmp
rorb
hlt
add
push
mov
fildl
test
fcoml
adc
pop
inc
adc
jae
aam
mov
cmp
gs
movsb
cmc
cli
js
sub
jne
ljmp
jp
mov
sub
push
jbe
in
push
pop
add
orb
ficompl
fisttpll
and
ficoms
lods
xor
cld
stc
adc
add
lock
andb
pop
ds
cltd
push
lret
out
push
pusha
xchg
jb
xchg
sbb
inc
add
enter
in
jecxz
fstpl
out
jmp
stos
aas
js
inc
inc
jnp
xchg
sub
push
jg
cmc
mov
imul
add
inc
pop
jl
and
mov
int
fmul
lahf
sbb
adc
add
mov
mov
inc
pusha
pusha
int
pop
popf
jle
loope
pop
daa
popf
adc
pusha
bound
mov
pusha
jno
fsubrs
enter
cmp
pop
xor
pop
lahf
lahf
scas
fs
scas
outsl
fstpt
dec
cld
idivb
mov
cmp
je
sbbb
adc
fwait
dec
cmpsl
shl
jne
or
pop
data16
cmp
popf
jae
mov
outsl
and
outsb
and
jno
iret
sbb
mov
movsl
pusha
fcomip
xor
mov
xchg
out
fadds
dec
mov
ret
fisubl
outsl
push
sahf
int
pop
pop
pop
test
aad
cmp
adc
and
out
adc
orb
dec
pop
pop
ret
pop
add
xor
adc
push
pop
shlb
nop
add
leave
xchg
mov
sbb
repnz
jno
repnz
push
movsl
shr
ficoms
jle
add
cmp
push
sahf
inc
lahf
ret
add
pop
pop
fwait
scas
adc
sarb
idiv
imul
dec
std
incb
repnz
cli
xchg
aam
je
movsl
cwtl
add
dec
xchg
hlt
sbb
add
sbb
inc
movsl
inc
outsb
xchg
stos
ja
out
pop
sub
rorb
cld
add
inc
mov
sar
ficompl
push
scas
adc
push
jmp
xchg
out
fstps
je
bound
mov
xchg
xor
das
jmp
add
jne
fldl2e
sbb
inc
das
push
popf
sub
repz
leave
into
dec
sbb
fs
lock
xchg
sub
gs
or
pop
das
sahf
jae
mov
inc
sahf
xor
bound
dec
dec
movsb
mov
dec
jno
out
scas
adc
test
ljmp
xchg
and
inc
int
insb
clc
cmp
cs
jo
sub
push
xor
push
cmpl
push
ficompl
mov
adc
dec
clc
sbb
call
or
or
sbb
mov
stos
jne
xor
mov
andl
rolb
cmp
shrl
pop
adc
xlat
sub
or
sub
xchg
repz
out
popf
into
scas
mov
add
xor
jb
pop
adc
dec
inc
outsl
sbb
loop
adc
mov
bound
mov
repz
adc
nop
nop
cmp
pusha
add
out
in
je
xchg
sbb
lock
fists
inc
jbe
cld
inc
inc
test
jmp
inc
mov
dec
flds
fcompp
dec
lods
das
inc
sbb
add
pop
ds
xor
or
add
mov
fisubs
sar
sub
dec
xor
scas
push
jno
out
and
mov
fbstp
ljmp
jae
inc
stos
pop
call
inc
out
shrb
mov
push
mov
out
jns
fs
mov
jo
inc
mov
inc
mov
jb
cli
lock
fcmovu
ret
fcom
xchg
or
in
aas
fldl
test
movsl
sub
xor
and
loope
sbb
scas
aam
ja
jnp
adc
and
and
jne
xchg
cltd
mov
shll
push
sbb
sbb
mov
insl
mov
mov
xchg
je
mov
cwtl
daa
mov
hlt
jmp
aas
mov
out
xorb
out
insb
mov
lea
cwtl
pop
test
push
xor
sub
pushf
int3
repnz
inc
mov
arpl
jo
popa
jb
and
mov
les
add
jp
sub
cmpsb
test
adc
inc
adc
mov
int3
fidivrs
inc
adc
mov
xchg
out
xchg
cmpsb
mov
push
imul
out
in
and
push
mov
mov
rcrb
test
mov
cmp
hlt
add
sbb
push
imul
jecxz
sbb
push
sbbb
pop
xchg
sahf
sub
loopne
cld
and
ss
cld
push
addr16
jns
push
fimull
dec
lods
pop
dec
es
in
pop
icebp
loopne
into
push
cs
add
je
jae
add
leave
sbb
ds
dec
dec
mov
sub
cmp
xchg
out
out
sahf
pop
clc
sbb
fcoml
xchg
xor
aad
bswap
add
inc
ja
mov
into
insb
jge
cmp
stos
hlt
cmp
ds
repnz
popa
movsl
sub
js
pop
incb
in
fwait
and
sub
iret
push
outsl
int3
hlt
cmp
loop
int
add
mov
aaa
cmp
test
sub
mov
rcl
mov
mov
arpl
jno
jns
fisubrl
into
xor
addr16
pop
adc
mov
leave
filds
xchg
fcoms
adc
repz
push
test
outsb
mov
mov
in
mov
movsl
cmpsl
dec
push
fiaddl
pop
fisttpll
dec
sub
jnp
mov
add
das
mov
movsb
push
dec
jge
cmp
jns
xchg
movsl
repnz
inc
outsb
fisttpll
mov
les
and
dec
or
out
test
push
insb
test
adc
or
inc
cmp
mov
mov
int
cwtl
jecxz
mov
xchg
sub
push
lret
ret
sbb
sub
push
xchg
pusha
into
push
mov
loop
lods
jno
aaa
inc
shlb
outsb
pushf
mov
cmp
mov
mov
dec
ss
aad
and
push
jbe
iret
and
rcll
mov
push
movsl
shl
in
mov
add
mov
sbb
lahf
imul
out
sar
push
jl
dec
idivb
gs
mov
insl
adc
jmp
lock
mov
add
hlt
jecxz
xchg
dec
jle
inc
popf
and
jno
std
in
outsl
es
xchg
rolb
neg
and
pop
and
mov
dec
inc
mov
es
shlb
scas
leave
movsl
and
ficompl
aaa
sbb
js
aas
loop
mov
fmuls
leave
outsl
repz
jl
pop
cmpsb
pop
sbb
popa
dec
cmpsb
push
jno
out
dec
and
negl
lock
sarl
mov
adc
adc
outsl
shlb
insl
xlat
cltd
fsts
daa
adc
jne
popa
push
stos
pusha
imul
push
notl
out
lret
dec
daa
pop
sub
adcb
lea
mov
lahf
adc
je
add
adc
adc
ret
sbb
add
push
jbe
cmp
and
cmp
push
mov
or
shlb
ret
pop
fdivrp
sub
sub
out
std
roll
sub
push
and
xchg
std
and
mov
pushf
xchg
mov
mov
adc
fisubrs
jno
pop
test
icebp
push
pop
pop
cmp
dec
inc
xchg
push
cld
sub
mov
mov
cs
dec
loope
dec
xchg
and
dec
cs
and
xor
aas
jo
mov
adc
sbb
dec
and
int3
sub
adc
mov
adc
and
xchg
into
into
inc
mov
inc
sub
push
int
xor
ret
sub
gs
jmp
and
dec
outsl
decb
ror
add
cmc
pop
jp
dec
jle
test
popa
out
ss
loopne
fstps
jle
add
push
adc
xor
nop
stos
add
fwait
subl
mov
sarl
pusha
mov
or
mov
sub
jmp
add
xlat
fstpl
roll
dec
cmp
negb
fdiv
movsb
cmpsl
sbb
mov
mov
pop
int
fsubp
inc
aam
hlt
xor
shl
sub
loop
jp
out
cli
pop
test
popa
fcmovnu
loopne
mov
mov
dec
pop
test
leave
scas
cmp
pusha
cwtl
jge
adc
in
mov
andl
out
or
in
inc
mov
cmc
scas
xchg
xchg
xchg
mov
xchg
test
je
fcoml
inc
cmpsl
adc
push
inc
jo
jnp
mov
insb
ret
test
pop
sbb
lds
push
add
addr16
xor
std
scas
jae
jmp
and
into
xlat
repz
dec
mov
pop
dec
jns
jo
aam
mov
sub
push
fwait
mov
mov
enter
lock
push
imul
mov
jmp
jb
pop
adc
jle
in
mov
pop
pop
push
xor
sub
fidivrs
bound
inc
mov
dec
push
or
lcall
dec
insl
push
inc
je
daa
movhps
cmpsb
push
lahf
dec
pop
jns
je
or
dec
xchg
stc
pop
dec
xor
add
mov
sub
insl
fisttpl
sub
fisubrs
jno
jne
dec
jne
push
in
or
adc
out
xor
cmp
sbbb
adc
aad
push
adc
or
sahf
stc
mov
loope
and
pop
lret
cltd
sub
xor
icebp
adc
arpl
pop
mov
pop
in
ljmp
cwtl
dec
push
hlt
sub
movsb
jae
xchg
sbb
and
sti
ret
rcr
and
sti
lea
cmp
dec
and
dec
push
outsb
inc
push
fnsave
rcrl
jae
mov
push
leave
repnz
xchg
inc
mov
sub
in
pop
shlb
inc
cs
xchg
mov
xor
mov
cmp
xchg
lret
cmp
mov
sbb
mov
jns
cwtl
insl
xchg
rcrb
xchg
pop
adc
scas
sbb
or
and
and
add
mov
in
mov
data16
enter
int
in
jge
negl
dec
cmp
add
push
xchg
les
jge
lea
out
sub
daa
mov
mov
add
pop
push
mov
mov
cmp
cmp
sub
mov
dec
sub
push
mov
cmpsl
jnp
jae
push
push
xor
mov
aad
scas
jb
mov
ds
dec
xchg
orl
sub
addr16
add
inc
lods
sarb
and
das
dec
sahf
clc
in
push
xchg
jge
push
roll
arpl
das
jl
popf
arpl
cmp
aas
pop
push
insb
scas
xchg
add
orb
test
push
prefetch
and
hlt
lods
in
stos
leave
call
sub
std
imul
addb
movsb
push
loope
sub
xchg
xchg
jnp
lea
cli
sahf
fcmovb
sti
sti
pop
or
rcll
or
jmp
shlb
imul
outsl
mov
jbe
bound
outsb
mov
test
movsl
or
lods
jno,pn
jo
adcl
xor
dec
xchg
xchg
xlat
shrl
mov
pop
jecxz
rcrb
pop
icebp
xor
popa
xchg
scas
pop
fs
xchg
dec
and
add
sub
or
and
stc
loop
pop
insl
js
imul
xlat
and
flds
xor
test
dec
shlb
pop
xchg
int3
push
pop
cs
pop
loope
or
adc
pop
pop
cmpsb
mov
xor
jb
push
imul
jl
int3
pop
xchg
push
sbb
test
and
bound
mov
bound
imul
cltd
push
pop
rorb
lds
jmp
push
popa
sub
jge
rol
sub
leave
jb
pop
aas
hlt
mov
pushf
dec
sub
inc
push
ds
notl
nop
out
je
mov
cmp
cmpsl
addr16
jmp
and
insb
gs
jbe
mov
mov
push
in
shl
adc
shrl
cltd
xchg
inc
stos
inc
xchg
cltd
fisubl
icebp
aad
cmp
jo
shll
cmp
push
add
hlt
bound
or
aaa
fisubrs
enter
rclb
inc
jmp
shrb
dec
andb
stos
lock
ret
nop
add
js
lods
stos
and
inc
aas
dec
stos
mov
lds
imul
adc
stc
lods
ficoms
pusha
je
cvttps2pi
sbb
mov
jo
mov
jnp
insb
xabort
out
adc
enter
pop
popa
sub
clc
es
movsl
inc
xor
test
movsl
and
and
out
mov
cwtl
dec
negl
cli
stos
xor
int
stos
out
mov
and
inc
popf
mov
jns
out
adc
test
xor
call
jbe
sub
popa
popa
out
data16
adc
lahf
dec
pop
mov
popl
shlb
iret
or
add
je
movsb
add
shl
jbe
sbb
dec
sbb
mov
popa
dec
mov
jns
ficoml
xor
cs
push
push
mov
fisubrl
out
cld
push
sub
lods
xor
aam
lods
sub
fmul
jge
sub
mov
lods
xlat
ss
int3
jns
jge
pusha
xor
and
pop
and
popa
xchg
jp
insl
movsb
push
out
hlt
test
push
cli
add
dec
int3
orb
lcall
int3
jnp
mov
push
out
push
jge
adc
cmc
inc
lods
push
xchg
dec
xchg
mov
adc
sub
rcrl
lods
and
fsubr
imull
pop
fwait
movsb
or
jge
jl
dec
or
lods
fwait
mov
pop
pop
fnstcw
ja
pop
push
pop
push
out
add
addr16
mov
scas
aas
add
out
in
mov
es
ds
scas
mov
pusha
inc
negb
push
lds
cmp
xchg
pop
push
loope
xor
repnz
add
sub
sbb
inc
imul
incl
sub
xchg
sub
andl
fs
inc
jno
jns
insl
mov
sarb
fwait
sbb
adc
sti
cmp
rcrl
leave
push
mov
xor
mov
imulb
in
call
sbb
mov
lahf
mov
and
adc
mov
iret
imul
in
loop
loop
mov
add
aam
or
ja
loope
push
jb
stc
cld
mov
popa
inc
and
incb
mov
popf
data16
fwait
out
sbb
mov
inc
enter
sbb
xchg
cmpsl
or
leave
and
xchg
ret
out
lods
insb
mov
or
pop
ss
jns
cltd
lods
cmp
and
pop
mov
push
int
lock
inc
cwtl
shlb
fwait
je
je
cltd
stos
mov
mov
jp
lods
jecxz
imul
mov
mov
pop
ljmp
and
dec
dec
into
mov
lock
outsb
push
jbe
mov
cmc
int3
xchg
dec
jns
cmp
sbb
cmp
mov
jno
adc
dec
dec
mov
jmp
rcrb
jl
sarl
xchg
std
xor
ds
jae
je
ds
mov
fsubrl
push
icebp
mov
subb
pushf
in
ss
nop
lods
jmp
filds
pop
push
jnp
dec
dec
jge
loopne
add
imul
or
pop
pusha
in
xchg
sti
into
fs
in
repnz
push
cli
orb
jb
pop
ret
test
or
or
xchg
adc
fsts
std
pop
and
or
adc
push
mov
mov
pop
subb
test
sub
ret
aaa
jno
loope
xchg
clc
mov
rcll
mov
das
mov
mov
inc
xor
adc
dec
inc
xchg
into
cmp
call
mov
subl
and
pop
push
fdivl
ljmp
jno
lcall
dec
jle
xchg
repnz
popf
sbb
lds
mov
cs
fildll
cmc
mov
xchg
mov
pop
add
sbb
out
add
jne
push
adc
inc
leave
into
jp
addb
fwait
iret
jge
cmp
dec
lods
adc
and
or
out
loop
lea
push
add
xor
sti
pop
mov
cmp
jae
hlt
inc
mov
or
out
push
dec
jle
inc
movsl
jb
loopne
scas
out
sub
and
cs
inc
lds
mov
mov
movsb
jae
xchg
or
push
mov
mov
cmp
cmp
ljmp
inc
mov
adcb
out
jo
int
and
dec
out
inc
fcom
mov
and
cs
mov
les
cmp
sbb
pop
mov
mov
aaa
xchg
mov
loop
pop
pop
or
or
scas
daa
fists
stos
into
dec
ret
lret
cmp
repz
or
loop
ds
mov
mov
pop
lret
fidivl
rolb
jnp
jle
xor
jb
add
sbb
adc
and
cltd
fists
arpl
enter
test
mov
mov
sahf
int
or
push
mov
lock
out
ljmp
jae
sbb
xor
cmc
test
das
imul
mov
adc
mov
into
cld
aas
fadds
jmp
jb
cmp
mov
or
cmp
xor
std
aaa
testl
xlat
stos
shrb
clc
arpl
subb
xor
fsts
data16
cli
xor
popa
sbb
fstl
push
sahf
jg
push
insb
std
push
shlb
pop
mov
push
imul
xor
push
mov
iret
les
jbe
dec
push
jno
cltd
xchg
stos
sti
jb
icebp
out
test
das
jae
insb
out
mov
pop
int3
mov
pop
in
daa
pop
dec
out
lds
in
fwait
movsb
jo
lea
xor
scas
sbb
jmp
ljmp
mov
nop
jge
test
stos
repnz
je
inc
sub
cmp
in
jg
je
lea
pop
mov
add
push
push
and
inc
cs
idiv
bnd
sub
pushf
addb
mov
ss
lahf
test
add
dec
sub
mov
sub
or
pushl
imul
mov
fs
test
ja
pop
cmp
mov
fucomi
xor
xor
das
jne
cmp
daa
fsubl
dec
mov
ljmp
mov
mov
lret
jae
sub
lods
push
push
rorb
les
rol
mov
arpl
sbb
or
cmp
xor
xchg
stos
fistl
xchg
roll
loope
ljmp
call
mov
lds
pop
mov
sahf
leave
cmc
stc
push
add
sti
xchg
loopne
lcall
inc
sbb
pop
inc
subb
sub
push
jnp
add
jl
cmp
jne
loopne
pop
daa
cmp
ljmp
ret
stc
xchg
mov
test
out
idivb
dec
pop
or
movsb
ljmp
mov
cld
lahf
pop
or
aas
jae
and
mov
jl
pop
les
and
add
pop
mov
bswap
pop
push
or
lret
sub
movlps
test
lods
ret
pop
mov
fs
cmpsb
xchg
bnd
daa
and
pop
cmp
js
inc
out
das
bound
pop
lds
add
aaa
jp
les
cmpsl
ljmp
adc
and
es
mov
lods
or
ss
dec
and
fldt
cmpsb
jb
and
ljmp
ret
stos
sahf
sub
lods
mov
int3
xchg
aas
aas
mov
mov
test
or
nop
or
push
lret
xor
out
outsb
daa
sar
add
pop
cmp
sub
js
stc
or
mov
out
movsl
xchg
jne
or
lcall
mov
sbb
scas
repnz
pop
mov
push
stos
add
adc
and
mov
stos
jle
adc
cmp
and
jae
dec
pop
hlt
push
sbb
inc
fidivrl
gs
dec
inc
sub
xor
adc
jnp
sbb
imul
lods
xor
add
jno
inc
rclb
and
jo
pusha
icebp
push
roll
and
adc
popa
loopne
rolb
push
xor
add
push
roll
and
adc
popa
loopne
rolb
push
xor
add
push
roll
and
adc
popa
loopne
rolb
xchg
xor
add
pop
imul
cs
xor
xchg
lea
lcall
push
xor
in
cmc
lock
push
inc
movsl
xor
xchg
gs
cmc
inc
lds
movsl
and
xchg
adc
lds
aad
popf
movsl
mov
test
xchg
jnp
adc
aad
lea
adc
xchg
aaa
mov
movsl
jns
add
and
lahf
pop
jle
loop
xchg
mov
dec
rcll
test
nop
push
data16
or
ret
fcoms
add
cwtl
sbb
test
add
std
jo
jo
add
lods
push
cmp
fdivs
call
or
mov
ss
stc
xchg
lcall
sub
imul
cmc
mov
mov
cmp
add
loopne
rcr
push
test
bound
jne
mov
xor
insb
lcall
xor
or
popa
adc
jo
mov
push
push
jle
arpl
and
repz
and
movsl
adc
testl
mov
in
insl
cld
or
push
test
insl
lock
xchg
add
push
lods
inc
mov
push
test
lods
adc
ret
inc
test
pushf
push
lcall
in
pop
out
in
inc
lock
cmc
inc
lds
movsl
and
xchg
adc
lds
push
and
test
cmc
inc
lds
movsl
and
xchg
adc
lds
push
and
aaa
aad
stos
sub
adc
movl
js
adc
xor
andl
lret
lcall
int3
test
xchg
cmc
and
or
pusha
js
shlb
xor
scas
sbb
or
cmpl
mov
mov
aas
loope
sub
push
sti
add
scas
js
add
adc
fmull
scas
xorb
jne
movsl
xchg
add
sbb
cmpsb
repnz
fdivrs
mov
repnz
mov
xor
lret
lock
js
xchg
add
arpl
jo
ds
addr16
inc
push
mov
add
test
insb
push
mov
add
jl
fcoms
sub
sbb
imulb
or
ret
pop
jbe
push
cmp
jl
sub
pop
sahf
mov
lock
xchg
arpl
sar
pop
and
sbbl
repz
adc
test
leave
mov
daa
ljmpw
push
imul
out
decb
in
adc
or
push
push
pop
jae
stos
ret
mov
in
lods
cwtl
adc
scas
jns
xchg
dec
mov
sti
mov
xchg
push
or
mov
out
sbb
cmc
ljmp
mov
sub
cmpsb
add
test
data16
rep
mov
sbb
jbe
repz
pop
push
lret
testb
pop
rep
cmp
insl
mov
push
jp
dec
or
cmpsb
or
push
jecxz
test
sbb
jb
xchg
and
mov
stc
xchg
pop
jl
dec
je
xchg
jecxz
add
iret
push
mov
adc
and
rorl
fadd
pop
add
push
subb
sub
stos
xchg
mov
fidivl
or
and
dec
add
cwtl
clc
movsb
push
pop
ljmp
outsl
mov
insl
hlt
je
pop
test
inc
cs
dec
sbb
cmp
je
dec
pop
jl
imul
pusha
jns
mov
ror
xchg
jae
inc
push
push
jns
sub
test
pop
or
insl
lcall
or
inc
inc
mov
pop
rcrb
mov
jae
xchg
jns
adc
cmc
into
mov
add
mov
xchg
cmc
mov
xchg
ss
aaa
int3
cmp
pop
adc
mov
sub
fnclex
dec
cmp
adc
push
adc
subb
scas
dec
push
lahf
push
cmp
xchg
push
ret
les
add
sub
dec
cmp
scas
jno
and
sub
mov
mov
mov
pop
xchg
mulb
add
repz
daa
js
repnz
inc
jnp
rolb
push
aaa
jns
in
pop
insl
lods
test
iret
lea
shr
lret
mov
lahf
out
mov
mov
in
stc
inc
mov
xor
sbb
inc
cli
cmp
cwtl
push
into
push
int3
lods
xchg
mov
cmc
stc
lahf
inc
xchg
push
scas
push
cli
adc
sub
jg
inc
lock
dec
cmp
pop
and
sbb
jecxz
daa
leave
sbb
push
sbb
sub
pcmpeqd
ficomps
push
inc
fucomp
add
sarb
das
rcrb
rorl
dec
lds
and
ljmp
xor
sub
jp
or
scas
xchg
dec
mov
icebp
inc
pop
sbbl
mov
out
push
jl
pop
rol
insl
mov
cld
int
les
xor
out
repz
aad
into
pop
dec
fidivrs
xor
lret
clc
iret
repz
pop
xchg
rcll
nop
movb
cltd
pop
xor
xor
mov
dec
cmp
and
lods
mov
ret
push
dec
and
xchg
fimuls
mov
enter
mov
iret
mov
push
jo
mov
cmp
cmp
lock
mov
xor
or
inc
xlat
mov
jmp
sahf
in
mov
xchg
jg
aad
mov
push
add
cld
xchg
mov
mov
xchg
or
adc
dec
cld
mov
insb
orb
push
push
lahf
xchg
mov
mov
frstor
jecxz
test
jp
cld
dec
pusha
mov
in
lods
movsb
lods
jle
rcrb
imul
in
movsl
popa
fdivrl
sbb
mov
pop
cmc
mov
mov
xor
pop
xchg
testb
loopne
and
ret
stos
movsb
sbb
es
inc
cmp
jo
mov
xor
cmpsl
mov
ljmp
in
or
sbb
int
mov
cltd
cwtl
sbb
mov
lods
jo
lahf
push
add
ret
cs
addr16
adc
aad
mov
mov
hlt
ret
lret
leave
mov
mov
push
aas
jle
shrb
sbb
xchg
add
outsb
xchg
xchg
fiaddl
and
clc
jl
inc
in
call
loope
add
sahf
lock
aam
inc
or
mov
shlb
inc
add
fcoml
mov
sub
mov
hlt
movsb
and
jo
loop
xor
gs
outsl
idivb
mov
inc
inc
inc
das
leave
xor
dec
and
sbb
cmc
sbb
test
in
daa
and
push
mov
insb
mov
loop
ds
movl
push
std
ljmp
adc
repz
aam
xchg
dec
push
int3
sbb
jl
fisttpll
test
stc
in
lds
inc
cmp
sbb
inc
inc
mov
jbe
and
adc
cld
lea
jno
enter
sub
xchg
dec
mov
sbb
divb
mov
adc
xchg
cmp
repz
inc
sbb
sbb
arpl
lods
aaa
ja
mov
lret
xor
test
sahf
jge
xchg
pop
sub
inc
pushf
inc
in
fcmovbe
in
nop
cld
pop
xchg
xchg
test
dec
repnz
addr16
cmp
mov
movsb
pop
cmp
outsl
aad
and
xchg
aad
mov
sbb
jbe
data16
fwait
inc
dec
jno
mov
xor
out
arpl
pop
dec
popf
xchg
aad
mov
fildl
std
add
pop
fyl2x
xor
or
add
int3
cmp
aas
dec
mov
push
or
insl
jno
out
out
loope
in
xchg
ja
or
jecxz
fsts
addl
and
xor
cmp
clc
xchg
cmp
xchg
shlb
adc
ljmp
mov
sub
mov
cld
pop
cltd
mov
and
push
subl
xlat
fs
mov
ret
aam
pop
push
or
ds
outsb
inc
fsubr
in
jge
arpl
stc
sbb
push
xchg
addr16
xchg
jo
movsl
ja
repnz
add
mov
or
jl
mov
push
in
mov
scas
sub
push
test
ja
clc
ss
jle
jecxz
jge
sbb
fnstcw
dec
popf
inc
mov
in
and
xor
sub
cmpsl
icebp
pop
cltd
cmp
and
fnstsw
mov
or
orb
enter
add
push
xor
mov
xchg
sar
xchg
stos
shrl
xor
mov
push
xchg
incl
pop
jg
sub
ficomps
inc
adc
aad
and
inc
mov
aad
jle
mov
out
pop
lods
out
shl
aaa
inc
cmpsl
in
in
xorb
inc
repz
outsl
in
out
sti
sub
fs
inc
aam
xor
lock
push
shrb
adc
and
aas
jle
inc
sbb
sahf
iret
jae
rolb
ret
push
lods
mov
sub
ss
mov
sbb
leave
das
xchg
das
push
sub
xchg
xor
sbb
in
loopne
mov
sbb
sbb
gs
decb
inc
mov
adc
ret
jge
bound
dec
ds
xchg
dec
test
test
insb
rorl
in
fpatan
aaa
xor
jmp
sti
aaa
xor
sti
pop
mov
sar
mov
ss
das
pop
ljmp
inc
add
out
stos
inc
into
xchg
fcompl
push
js
dec
js
pop
push
ror
jmp
jge
aam
je
jg
ror
mov
in
jecxz
jmp
fisttps
add
in
stc
cwtl
add
scas
sbb
mulb
test
outsb
outsb
adc
int3
testl
je
shl
rcrl
dec
mov
xchg
mov
mov
dec
imul
sbb
lock
jp
dec
popf
mov
fadds
mov
or
jb
inc
jno
cs
xchg
repz
sarl
lcall
fsubs
or
push
or
mov
xchg
mov
shlb
jg
mov
sbb
xor
inc
bound
imul
imul
inc
mov
int
cmp
cs
pop
mov
sub
ret
adc
cwtl
xor
push
lock
or
inc
ss
jns
mov
add
enter
scas
cmp
push
cmp
dec
test
lahf
jo
mov
lock
inc
icebp
and
xchg
or
cmc
push
enter
dec
mov
fs
out
and
cmpsb
fimull
cmp
lcall
sbb
out
sbb
dec
ljmp
dec
out
xor
loop
mov
adc
sub
inc
and
inc
push
push
out
mov
or
gs
out
outsb
mov
imul
stc
mov
or
scas
scas
call
push
mov
jecxz
sub
sbb
in
adc
dec
push
pop
dec
clc
fidivrs
lret
add
push
or
out
xchg
mov
add
lods
sti
sub
rcrb
jno
and
lods
inc
mov
push
scas
cltd
push
push
mov
pop
jle
lcall
fimuls
mov
data16
or
and
es
test
pop
stc
xchg
sub
fwait
inc
inc
and
push
sub
cmc
cld
adc
test
inc
jnp
jns
push
jo
mov
stc
insl
push
xor
into
mov
sbb
push
leave
les
sbb
push
in
sub
add
cmc
pop
push
ret
cmpsl
mov
mov
sbbl
das
in
push
in
pop
add
push
enter
int
aam
std
into
xchg
push
data16
ret
sbb
or
out
repz
mov
add
jne
std
faddl
pop
outsl
inc
sbb
xchg
cmpl
jnp
adc
sti
ja
or
leave
aaa
pop
aam
mov
test
aad
dec
pop
and
xchg
pushf
jge
add
out
add
adc
cmp
out
xor
or
stos
push
ret
shlb
and
jp
mov
xchg
xchg
push
enter
cmpsb
xlat
pop
lcall
mov
repnz
sbb
loopne
cmc
arpl
movsb
xor
inc
sub
push
jmp
jae
xor
dec
mov
jmp
popa
aaa
jbe
rcl
repnz
hlt
and
movsl
cs
aas
or
fistps
mov
lret
push
pop
out
adc
mov
fisttpll
addr16
xor
pushf
xor
outsb
gs
fistl
cmp
gs
xchg
push
inc
cmp
in
and
loop
cs
or
jmp
ljmp
pop
aam
pop
fs
bound
imul
mov
mov
popa
mov
mov
add
jno
ficomps
pusha
ret
sahf
lods
jmp
mov
hlt
repz
xchg
in
xchg
int
or
mul
mov
fsubrl
int
sahf
enter
fcmovnb
iret
push
ss
loopne
jg
iret
push
xchg
sub
loopne
cmp
pop
adc
ljmp
push
bound
pop
pop
xchg
cmp
mov
xchg
xchg
cmpsb
pushf
popa
cmpsb
xchg
test
push
fmuls
lcall
mull
cld
and
push
imul
dec
jmp
roll
aaa
imul
and
lods
add
sahf
test
xor
and
jecxz
jge
push
mov
xor
mov
xchg
dec
sbb
aas
pop
stc
lds
fcompl
insl
insl
scas
cmpl
cmp
adc
out
inc
pop
sbb
push
outsb
loop
push
jbe
sub
mov
int3
sbb
jno
sti
ja
or
mov
xchg
fsubr
andb
xor
pop
xchg
int3
jecxz
insb
lcall
mov
in
push
xchg
sub
cmp
pop
divb
fcmovnbe
inc
push
push
loope
adc
clc
jl
mov
nop
and
pop
andb
mov
mov
ret
push
jl
xor
jo
addr16
iret
dec
repz
js
pop
sbbb
cltd
sub
call
clc
rorl
sbb
sbb
add
pop
cmp
leave
mov
dec
xchg
or
adc
lahf
mov
ljmp
imul
outsl
jmp
mov
jg
in
addl
xorl
and
pop
inc
mov
mov
sbbb
jl
fnstcw
xor
sub
pop
insb
xchg
loope
sbb
xor
xlat
sbb
pop
loope
outsl
dec
fdivrs
bound
popa
pop
js
repnz
lret
insb
and
dec
xor
pop
inc
mov
loope
mov
leave
stos
pop
repz
rol
outsb
jmp
and
cmp
inc
fistpll
ret
dec
loop
adc
and
mov
mov
addr16
lcall
xor
pop
das
dec
and
mov
sub
sbb
cwtl
sub
jbe
jg
call
pxor
pusha
bound
and
inc
cltd
loopne
int3
xor
mov
add
push
outsl
xor
and
call
cmc
pop
call
aas
js
cld
inc
jg
jp
push
sbb
cmp
addr16
inc
jp
je
pop
or
arpl
loope
loopne
mov
in
aaa
mov
push
cmp
pop
incb
test
mov
adc
pop
loope
add
into
inc
cmp
pusha
mov
cmpsb
adc
stc
adc
enter
inc
scas
or
jecxz
add
lahf
mov
cs
outsb
mov
dec
fs
aaa
bound
inc
imul
sbb
loopne
movsb
lcall
sarb
addl
testl
lahf
loope
jecxz
xor
and
xor
mov
adc
adc
dec
push
imul
loopne
outsl
cmp
dec
push
cmp
outsb
mov
mov
mov
inc
stc
sahf
jp
mov
mov
push
ja
testb
or
aad
xor
mov
ds
movsb
adc
test
push
mov
xor
aam
sub
push
dec
rcll
out
pop
xor
loope
and
call
add
iret
jbe
and
shll
stc
pop
out
mov
lods
nop
lret
jle
add
fimull
cmp
xchg
hlt
jno
mov
vshufps
jmp
popf
cmpsl
loop
das
push
mov
pop
adc
mov
or
xor
sarl
sub
mov
call
fisubrl
add
sub
mov
rorl
or
or
xchg
inc
repz
inc
jge
push
pop
aas
sub
xor
nop
insl
mov
dec
dec
mov
xor
pop
cmc
push
mov
adc
ficompl
int
sub
cmp
movsl
popf
mov
hlt
jmp
filds
fbstp
mov
and
pop
inc
imul
iret
sub
mov
push
repz
mov
ret
lds
jne
sub
lret
fldl
movsl
adc
sbb
fbld
addr16
pop
clc
mov
stc
xor
outsb
jge
mov
int
popf
scas
push
jb
mov
ljmp
pop
dec
adc
ret
into
pushf
sbb
repnz
mov
clc
pushf
adc
push
hlt
js
movsl
hlt
rcll
aaa
shrl
popa
rcrl
call
xor
aaa
cmp
repnz
push
jl
jb
pushf
jp
dec
lods
inc
pop
and
jmp
fs
std
jl
idivl
ret
push
sbb
gs
cmp
push
and
pushf
jp
xchg
inc
cmc
xchg
aaa
push
add
clc
jmp
addl
imul
push
arpl
nop
cmp
cmp
adc
jns
inc
insb
jne
cmp
mov
mov
outsb
jl
push
xor
aas
jge
pop
pop
leave
xor
xchg
xchg
jnp
pop
cmp
into
mov
divl
pop
cmp
push
movaps
mulb
mov
int3
sub
lods
divb
dec
cmpsl
loopne,pt
out
aam
push
sbb
aas
inc
fcoms
mov
mov
ret
fdivl
pop
aad
jmp
adc
jg
jo
fsts
bnd
jne
sar
push
enter
pcmpgtb
jbe
pop
sbb
rorb
pop
scas
clc
insl
jl
cmpsl
mov
scas
mov
lret
and
push
mov
jmp
iret
das
xchg
loope
xchg
mulb
fcomip
fsubrl
bt
pop
xchg
xchg
in
jecxz
xchg
out
cmp
pop
adcl
test
shl
mov
jl
xchg
pop
in
sbb
popa
jo
inc
ret
mov
test
dec
mov
mov
cmp
xlat
test
add
outsl
andl
or
jns
imul
daa
jl
es
sub
xchg
pop
pop
jp
addb
mov
sub
cmc
add
inc
mov
outsl
push
push
adc
mov
inc
into
outsl
inc
stos
addr16
adc
push
movb
sub
ficoms
jo
mov
xchg
pop
jecxz
sbb
and
jae
inc
inc
lds
leave
sti
cli
jle
fdiv
jae
movsb
aaa
sub
lea
xchg
push
imul
repnz
leave
jne
hlt
pop
adc
insl
rorl
fimull
mov
lods
lods
jns
sbb
out
adc
and
setle
aam
inc
fwait
les
push
aad
mov
pop
dec
push
fcomps
ljmp
push
imul
xor
bound
aad
xor
stc
cs
in
adc
add
inc
xor
add
repz
jnp
jae
adc
mov
aam
jo
cmovb
adc
or
je
mov
jne
xor
xchg
sahf
mov
cmpsl
pop
mov
rorb
pushf
bound
sub
inc
xor
adc
out
clc
xchg
xor
push
jmp
inc
or
pop
fwait
xchg
in
cmpsl
ds
cmp
inc
dec
ljmp
xchg
shlb
pushf
jmp
ja
inc
lds
lret
mov
xchg
sub
loopne
jp
scas
iret
mov
push
cltd
push
sti
rclb
mov
out
ret
sbb
sub
dec
or
xor
stos
data16
cmpsl
jle
icebp
push
pop
jae
jge
jno
add
sarb
jne
iret
popa
mov
mov
xor
inc
jecxz
mov
ret
mov
jle
adc
jge
jge
xchg
dec
sarl
jle
out
dec
push
in
push
or
push
test
push
mov
jge
imul
repnz
mov
add
fnsave
mov
aam
xorb
fstpt
inc
push
ror
orb
push
mov
and
push
mov
int3
mov
jo
jmp
mov
out
mov
insl
test
cli
out
cmovp
jbe
sub
sbb
ret
add
xchg
popl
sub
scas
add
pop
testl
mov
pop
inc
add
lret
in
repnz
lods
and
je
les
shlb
loop
insb
jo
sub
push
pop
xchg
fs
stos
sub
sbb
push
inc
mov
push
lret
and
and
jle
clc
sub
ljmp
mov
dec
aaa
dec
xlat
sub
inc
jae
jmp
jno
adc
scas
shlb
jecxz
adc
divb
sbb
ljmp
mov
mov
jnp
adc
out
mov
fs
repnz
pushl
xor
leave
hlt
push
xor
adc
xor
mov
test
push
std
cwtl
into
sbb
aaa
mov
mov
inc
fistpl
sub
or
or
lods
addl
je
xchg
scas
push
mov
adc
cmc
inc
lds
movsl
and
xchg
adc
lds
push
and
test
cmc
inc
lds
movsl
and
xchg
adc
lds
push
and
add
jne
inc
lds
xor
in
in
lds
push
xor
xor
cmc
inc
vpmullw
add
jge
cmp
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
sub
sbb
or
jne
sbb
ds
cs
mov
xchg
mov
fcmovnbe
lret
sarl
and
xor
add
adc
imul
dec
push
mov
mov
jmp
fcmovnb
lret
sarl
cmp
xor
sbb
or
imul
dec
dec
mov
hlt
movsl
xchg
xchg
mov
movsl
shll
sub
jne
lcall
mov
jns
jno
push
test
jo
sti
int
cmp
xchg
jo
mov
push
lret
mov
pop
push
xchg
push
xchg
add
movsb
fcmovb
xor
mov
pop
xorl
jp
es
shll
loope
pop
icebp
sarl
sub
insl
add
mov
sbb
scas
mov
popa
lods
outsb
add
dec
leave
mov
jno
xor
rolb
pop
adc
stos
sub
mov
les
xchg
jbe
jmp
les
adc
pop
add
fiaddl
jnp
fsubr
mov
into
add
mov
sbb
or
jnp
imul
dec
dec
mov
cwtl
mov
fcmovnb
lret
mov
inc
inc
xor
outsb
adc
aaa
and
ds
scas
leave
clc
aam
sahf
mov
mov
dec
jno
adc
adc
inc
pop
and
test
rcrb
lods
lret
mov
pusha
dec
push
jb
or
imul
dec
push
mov
orl
sarl
and
xor
add
adc
imul
dec
push
mov
orl
sarl
and
add
std
push
mov
or
fstps
sbb
push
pop
cmc
inc
jl
and
sbb
and
in
xchg
rcr
jp
movsl
inc
push
xor
scas
mov
mov
nop
cld
cmc
cmpsl
pop
xchg
leave
adc
or
mov
xchg
stos
fdivs
push
or
insl
fdivs
jne
push
test
mov
data16
std
jmp
cmpsl
dec
push
mov
xor
or
dec
push
jecxz
jbe
xchg
icebp
cs
mov
cmpsb
jle
push
fists
outsb
mov
je
push
sti
cmp
gs
shlb
pop
fcompl
and
push
testl
mov
int3
stc
jecxz
insl
rorl
inc
or
mov
cld
pushf
movsl
push
call
mov
inc
shrb
cmpsb
daa
add
fcmovnu
fsubl
rcl
mov
add
and
jbe
outsb
jns
push
dec
sbb
push
nop
add
hlt
inc
mov
jecxz
stos
insb
push
scas
mov
dec
xor
lods
mov
pop
mov
je
aad
test
testb
cmc
sbb
clc
daa
or
ret
je
aam
lret
inc
movsb
test
inc
adc
xlat
add
mov
add
or
push
bound
dec
xchg
inc
push
mov
les
jno
loop
xlat
fildl
push
cmp
xchg
lea
add
add
ret
and
jg
mov
xchg
xor
je
mov
cmp
pushf
rorb
mov
cwtl
pop
mov
andl
xchg
inc
add
mov
movsb
cli
xor
and
jg
scas
mov
mov
cmp
mov
xchg
add
lret
jns
sbb
push
mov
scas
call
pop
cmp
xor
iret
push
popa
pop
nop
push
and
dec
pop
jle
jg
mov
movsl
mov
mov
flds
inc
xlat
mov
adc
movsl
mov
mov
xor
or
jmp
sbb
inc
mov
pop
fwait
adc
xchg
push
and
pushf
and
jl
clc
sbb
stos
dec
movsb
and
mov
xchg
inc
imul
sbb
aas
lcall
cmp
ss
push
fcmovnbe
mov
jg
adc
mulb
test
push
dec
xchg
in
add
jmp
outsl
test
or
popf
icebp
cmc
aad
and
sub
adc
dec
ret
lret
popf
insb
add
xchg
mov
sbb
sbbl
or
sub
sar
adc
xchg
fmulp
pop
arpl
dec
mov
iret
mov
imul
cmp
sarl
pop
jl
adcb
mov
cmp
mov
push
ljmp
je
jge
mov
cmp
pop
xchg
leave
pop
cmp
cli
flds
in
fsts
and
or
dec
cmp
cmp
insb
stos
movsb
push
sbb
dec
dec
pop
mov
xor
lcall
sub
dec
aas
pop
stos
enter
sbb
bound
mov
xlat
mov
push
or
scas
dec
dec
push
idivb
push
add
mov
sub
ret
cmpsb
int
pusha
adc
adc
mov
rcrl
pop
je
cwtl
sub
ficoml
push
mov
inc
xorl
or
lret
scas
loop
xchg
inc
cmp
jo
jae
xchg
mov
sub
std
cmp
dec
clc
mov
sbb
jge
push
cmp
cmpsl
or
jecxz
sarl
push
push
dec
sbb
jae
out
cvtps2pi
aaa
lcall
jge
adc
lock
mov
xchg
sbbb
bound
push
sbb
pop
jp
mov
xchg
or
stos
mov
orb
push
mov
xchg
outsl
add
popf
repz
int
mov
inc
pop
dec
cmp
lret
push
jb
jbe
sbb
repz
jp
or
inc
cmc
jle
pop
test
lahf
clc
addl
shrb
inc
xchg
fld
dec
mov
sub
xchg
shl
ror
jecxz
ret
push
clc
push
mov
mov
dec
call
xor
cmp
shrb
cmp
cli
or
cwtl
rorb
aad
cmc
sub
adc
xchg
sbb
faddl
cwtl
and
dec
popf
mov
pop
and
and
dec
jp
fs
pop
add
push
ficoml
push
or
jl
scas
test
mov
adcl
loopne
stos
jns
add
shll
movsl
stc
sarb
stos
dec
add
xor
sti
add
bound
loopne
cli
mov
xor
sub
cs
incb
pushf
mov
push
add
loope
sbb
cmp
add
push
popf
push
xlat
mov
stc
dec
cmp
dec
stos
mov
sub
xlat
hlt
mov
out
mov
mov
lods
fnstenv
repnz
out
insl
stos
mov
shll
pop
arpl
or
outsl
push
push
cmp
je
aaa
adc
scas
mov
imul
int3
xchg
lods
test
mov
lds
ss
cmpsb
repz
dec
ljmp
jne
push
in
dec
pop
fcom
lcall
and
out
adc
push
xor
fistl
pop
pop
shrl
xchg
jl
lret
add
stos
pop
inc
roll
mov
lret
fbstp
jmp
in
imul
inc
clc
insb
jmp
sbb
mov
mov
clc
lcall
test
les
mov
cmc
test
jbe
pop
and
ljmp
mov
addl
mov
loopne
iret
stos
sahf
cld
clc
cmc
and
mov
jecxz
iret
push
push
sti
mov
pop
pop
adc
mov
pop
stc
scas
in
sbb
subb
sbb
mov
stc
mov
cmp
orb
adc
scas
popf
xchg
fsubrs
mov
rcl
cmp
xchg
push
ds
bt
jg
inc
push
add
lret
cmp
icebp
test
hlt
leave
add
dec
fidivrl
adc
pop
xor
out
icebp
push
ljmp
cltd
mov
mov
movsb
repnz
mull
inc
dec
mov
test
add
mov
loope
jns
int
es
fcom
xchg
push
lcall
jnp
daa
rcr
xchg
movsl
jecxz
ret
aam
scas
jecxz
mov
and
xchg
xchg
pop
adc
in
inc
jno
dec
push
mov
fs
cmpxchg
fisttpl
or
mov
jmp
inc
loopne
jns
mov
daa
xchg
aaa
mov
cli
adc
cld
pusha
xor
sub
shll
inc
mov
mov
imul
jno
mov
adc
out
cmp
cmc
ret
inc
xchg
or
xchg
pop
lock
adc
xchg
push
or
inc
pop
xchg
negl
and
push
and
fcoms
not
pop
inc
insl
fcoml
push
and
mov
je
out
jae
sub
cmpsb
xchg
repz
add
jae
xchg
scas
mov
shll
ret
push
pop
daa
lahf
xchg
mov
inc
push
inc
cmp
cmp
ljmp
js
andb
daa
or
out
orl
jae
inc
inc
fisubrs
adc
es
and
add
mov
aas
mov
jnp
in
push
xchg
mov
add
jmp
adc
pusha
xchg
inc
lock
or
lods
scas
inc
shrb
fdivs
adc
pop
imul
notb
mov
ljmp
sub
decb
jae
mov
aad
add
mov
push
ret
inc
sbb
loopne
mov
cmp
icebp
cmpsl
je
add
outsb
push
repz
inc
mov
cmpsl
sub
insb
ljmp
inc
ja
notb
mov
scas
sub
das
test
and
sbb
xchg
xchg
xor
dec
insb
dec
cmpb
cmp
or
aaa
adc
sbb
ret
cmp
push
fwait
adc
jl
repz
jnp
push
mov
dec
xorl
pop
or
cmp
sahf
clc
jp
clc
loope
lahf
pop
clc
loopne
cmp
fadds
add
lods
dec
mov
xor
loope
cmp
xchg
mov
pop
test
loope
rcrb
lock
mov
xor
in
insb
xchg
and
pop
fcomp
mov
imul
mov
mov
xchg
out
and
mov
mov
data16
adcl
outsb
rclb
ss
in
insl
dec
jmp
aas
andnps
push
pop
sbb
lods
pop
loope
jb
leave
mov
in
pop
fs
fcompl
xchg
dec
dec
push
cs
xchg
pusha
mov
jae
mov
cmp
outsb
xor
jbe
inc
repnz
or
popa
jns
lea
pmulhuw
psubsw
jbe
clc
in
and
mov
inc
aam
jg
enter
adc
mov
cld
lods
ds
fisttpl
idivb
adc
mov
mov
sbb
repnz
sbb
cmpsl
lret
push
pop
jnp
and
call
push
fdivrs
dec
push
xchg
int3
popa
call
test
xchg
sub
sbb
loop
xor
adc
out
loope
add
mov
push
pop
and
cmpsl
pop
mov
dec
icebp
in
enter
bound
mov
lods
sbb
arpl
loop
sbb
sahf
mov
dec
movsb
inc
fstps
lahf
outsl
mov
ljmp
add
push
out
out
cmp
fcompl
sub
sub
jmp
test
out
and
sbb
cmp
shll
jae
mov
mov
fistps
popf
push
in
xor
cmpsb
xchg
cmc
pushf
or
in
shr
or
adc
cmp
inc
les
jbe
mov
mov
lds
aas
pusha
test
fisubs
ljmp
mov
push
push
das
mov
sub
cli
push
sub
shll
repz
jge
fs
xchg
or
inc
add
nop
subb
sbb
push
mov
and
aam
xchg
std
jge
xchg
adc
rolb
push
arpl
cs
repz
fmul
lods
pop
or
loopne
movsb
in
sarl
add
inc
jae
mov
add
mov
fiadds
cmp
fldt
dec
into
cli
push
or
inc
pusha
in
mov
loopne
bound
popa
pusha
xchg
push
out
scas
fsubl
pop
lahf
ljmp
addr16
lds
adc
xorl
sub
mov
ds
call
jmp
mov
mov
cltd
insb
sbb
movsb
cmc
or
imul
push
incl
addr16
xor
add
jo
push
jg
insb
dec
sub
or
pop
jnp
mov
jae
test
sbb
aas
pop
adc
cmpsl
fstps
mov
push
testl
or
dec
mov
ficoml
lock
push
in
inc
or
bound
mov
adc
es
mov
cmc
jo
mov
ds
movsb
cmp
jne
cmpb
fistpl
subb
mov
sti
or
enter
popa
cs
rclb
stos
outsl
mov
add
mov
xlat
jbe
inc
and
add
push
shlb
xor
gs
nop
xchg
gs
mov
add
sbb
adc
push
push
outsl
sbb
mov
hlt
xchg
adc
popf
add
push
lds
cli
aam
pop
shlb
mov
int3
std
pop
data16
stos
mov
push
jae
stos
xor
lods
dec
inc
lret
jp
clc
fcoml
pop
lahf
leave
movsb
fwait
or
in
mov
cmp
add
dec
fwait
daa
out
test
or
ja
aaa
out
sub
movsb
mov
and
push
aad
adc
pop
xor
mov
nop
dec
inc
fwait
cwtl
pop
jne
sub
jg
shlb
inc
dec
in
in
dec
mov
mov
enter
outsb
dec
adc
pop
cmp
cmpsb
aad
insl
ficoms
adc
inc
inc
inc
aas
sahf
sti
out
in
and
sbb
pop
sar
xor
lods
rcll
daa
addr16
ror
push
push
movsb
and
mov
pushf
popa
fisubrs
mov
call
mov
out
loope
ljmp
ret
sbb
loope
mov
pop
leave
stos
int3
shlb
add
mov
rcll
xor
mov
mov
add
push
mov
inc
mul
insb
dec
stos
setge
lahf
adc
das
outsl
or
push
pusha
mov
push
push
fdiv
cmpsb
adc
pop
sbb
and
adc
cmp
xchg
jne
and
push
mov
sbb
sub
sub
pop
jecxz
mov
pop
pop
jmp
and
and
or
mov
jge
faddp
arpl
data16
enter
cmpsl
xchg
leave
xchg
insb
mov
div
icebp
push
sti
popa
push
pop
fwait
aad
icebp
mov
cld
sub
aam
decb
inc
ret
xchg
sahf
test
test
out
adc
xchg
inc
adc
sbb
xor
dec
nop
dec
cmp
arpl
push
test
mov
add
test
xorl
dec
cmpsb
jo
xor
mov
rcll
test
fidivs
pop
sub
mov
leave
mov
xor
mov
and
mov
push
jnp
pusha
imul
xchg
lds
into
jo
loope
inc
cmp
test
xlat
xor
fmuls
bnd
and
and
mov
mov
leave
aam
bound
or
mov
adc
repz
sti
insl
shll
mov
xchg
ret
inc
ficompl
mov
scas
pusha
lods
insl
dec
or
add
ret
xchg
loope
aam
mov
iret
pop
lock
and
adc
push
xor
js
bound
outsl
jbe
mov
filds
lahf
ja
xor
rcrb
sbb
inc
or
and
mov
and
mov
aam
dec
es
add
bound
dec
cli
ds
xchg
pop
scas
je
aaa
sub
mov
cli
cwtl
loope
jae
push
std
arpl
or
xchg
lds
lcall
cmpsl
and
sub
sub
in
jne
pop
int
fcomps
pushf
add
cmp
subl
mov
in
push
fwait
push
add
cmpsl
mov
xor
outsb
mov
dec
fcoml
pop
adc
push
int3
outsl
pop
and
arpl
ds
loope
fldl
jge
out
and
and
lcall
inc
shrb
sbb
jb
push
and
inc
jnp
push
adc
pop
jb
push
fadd
add
add
jp
repz
mov
sub
gs
adc
add
xchg
test
cmp
adc
mov
jg
mov
test
sbb
fwait
push
scas
fmuls
mov
js
arpl
nop
in
lock
sub
push
xorb
mov
lcall
adc
dec
pushf
push
add
jae
sub
mov
out
inc
dec
lea
jne
mov
jge
pop
insb
out
xor
dec
adc
adc
jl
in
loope
ss
popa
push
cmp
jecxz
pop
test
mov
inc
jg
cmp
or
push
js
outsb
dec
int
inc
push
mov
mov
jae
and
cmpb
xor
lret
push
nop
fistl
negb
fisttps
adc
dec
aas
inc
mov
or
dec
sbb
add
test
or
push
in
loope
movsb
es
xor
mov
push
popa
sub
stos
add
adc
or
shr
push
out
pop
leave
test
in
adc
popa
pushf
xchg
push
fiadds
fsqrt
xor
sbb
in
jg
jbe
pop
leave
sbb
rcll
sbb
or
iret
repnz
pop
dec
dec
pop
in
sub
loop
mov
daa
or
stc
mov
mov
push
je
pop
mov
addl
test
and
jae
mov
inc
les
mov
jae
std
es
outsb
xor
push
mov
xchg
inc
mov
mov
mov
pop
sub
mov
aam
lods
adc
add
pop
fsubrl
and
js
mov
pusha
out
jne
inc
push
sub
sub
push
add
and
mov
or
cwtl
sbb
or
add
adc
push
add
fldt
dec
mov
and
jbe
andb
shl
loopne
hlt
sahf
mov
dec
leave
sti
fwait
cwtl
stc
pushf
dec
test
jo
test
xchg
stos
popa
or
fcmovu
leave
out
mov
xchg
int3
sarl
cmpsl
mov
in
jbe
jno
rcll
and
cmp
pop
rol
aas
test
mov
imull
pop
or
and
pop
pop
mov
call
test
adc
and
icebp
add
mov
hlt
imul
pushf
pop
iret
scas
loop
cmp
inc
mov
gs
imul
rol
adc
xor
inc
dec
mov
cmp
arpl
inc
in
jb
loopne
cmc
mov
pop
jge
in
fcomip
mov
xchg
mov
cmpsb
push
insb
arpl
jmp
mov
or
hlt
mov
imul
sub
xor
clc
daa
or
sub
cmp
lods
add
aam
int
mov
sub
test
adc
push
rolb
jecxz
or
jnp
inc
or
xlat
test
jne
fdivrs
repz
jnp
pop
mov
shlb
cmpsl
xor
movsb
in
mov
push
movsb
repz
pop
fnsave
bound
mov
aad
and
push
mov
inc
jp
decb
and
xor
into
dec
mov
jae
mov
scas
mov
push
loope
rcll
jg
hlt
ficoms
or
mov
sbb
pop
hlt
push
fs
push
xor
inc
nop
inc
cltd
pushf
gs
scas
rcrb
adc
and
je
aaa
stos
cmpl
int
ss
adc
add
jmp
jge
imul
cmc
push
bt
add
jg
mov
and
sub
add
leave
mov
add
hlt
sbb
mov
dec
stos
pusha
lods
sub
pop
or
cwtl
out
dec
outsb
push
add
enter
jge
aaa
dec
and
or
test
out
cmp
jnp
test
out
in
adc
jb
loopne
popa
xchg
mov
jo
mov
lahf
imul
xacquire
add
arpl
push
cmp
jne
xchg
push
inc
fimull
jbe
xlat
cmpsb
xchg
mov
push
inc
popf
rorl
popf
or
bound
in
loope
mov
outsb
mov
jle
pop
or
dec
lods
xchg
xorl
jl
nop
adc
sbb
hlt
ljmp
dec
shr
test
jp
stos
sbb
mov
mov
push
jecxz
scas
lret
scas
or
out
mov
scas
xor
sub
mov
test
fnstsw
xchg
xchg
push
push
adc
adc
push
jecxz
cs
jl
ja
sub
lahf
dec
fwait
mov
es
adc
jge
jb
movsb
dec
mov
popf
dec
stos
imul
mov
mov
fstpt
fldenv
jnp
push
lods
int3
imul
xor
mov
out
jg
inc
cmpsl
add
sub
xor
sahf
ror
sub
pushf
add
inc
pop
nop
sub
sub
inc
jno
mov
mov
test
incl
and
xchg
pop
flds
ss
ret
enter
mov
adc
inc
icebp
mov
leave
xchg
dec
dec
jg
add
inc
gs
cmpsl
fisubrl
and
adc
ja
enter
ss
andl
fisubrs
jnp
decb
mov
sbb
stos
xchg
stc
aaa
shll
xchg
lds
adc
xchg
in
dec
cld
jl
sbb
push
mov
jnp
jns
fadds
mov
push
xchg
mov
or
jl
movsb
std
jmp
jge
out
fnsave
push
xor
push
pop
sahf
lret
mov
repz
je
gs
daa
in
jb
jbe
dec
std
sti
stos
jne
xlat
or
scas
rorb
in
xor
cld
pop
in
fdivl
cs
test
mov
and
and
mov
out
sub
xchg
andl
sub
sarb
and
dec
push
mov
aas
adc
pop
repnz
jge
cmpsl
loop
jo
cmp
push
sbb
fsubr
leave
ret
jmp
pushf
dec
ljmp
sti
pop
pop
int
push
xor
icebp
mov
icebp
adc
scas
xor
out
or
jnp
imul
dec
push
mov
orl
sarl
and
xor
add
adc
imul
dec
push
mov
orl
sarl
and
xor
add
adc
imul
dec
push
mov
orl
sarl
and
xor
add
adc
imul
dec
push
mov
orl
cs
pop
int3
imul
push
or
push
lods
mov
jmp
fldcw
mov
int3
pop
cld
jns
or
lods
ret
pop
cmp
cwtl
or
cmp
sub
faddl
jno
popa
in
adc
lods
leave
adc
dec
aam
ficompl
sub
fcompl
and
pop
in
sbb
and
and
std
sbb
mov
aam
mov
imul
fnstenv
es
jl
insl
xor
cmp
rol
leave
pop
sbb
or
pop
cmp
es
jns
lods
jbe
fdivrl
add
jle
cltd
and
mov
repnz
sub
or
rcll
std
outsl
mov
jmp
dec
lret
ret
test
sub
jae
inc
sub
rcrl
dec
cld
cmp
and
cwtl
dec
and
inc
jl
pop
pop
xor
std
hlt
cltd
mov
xchg
sub
mov
clc
insb
dec
jecxz
clc
dec
sub
int3
imul
add
pop
rorl
insb
xchg
sbb
or
cmp
push
mov
pop
or
sbb
int
fsts
xor
and
in
std
jne
mov
pop
xchg
jnp
jge
ja
inc
sarl
sbb
and
ljmp
mov
or
jns
jno
sbb
pop
stc
insb
mov
or
cmp
sub
fcompl
imul
sbb
pop
stc
insb
mov
or
cmp
sub
fcompl
cmp
xchg
jmp
shl
inc
stos
mov
daa
into
sub
int
insb
imul
fcompl
pop
je
dec
les
lahf
sbb
movsb
imul
xchg
dec
dec
and
iret
push
mov
imul
test
cwtl
out
sub
sbb
cmpsb
js
or
jmp
rclb
push
filds
lret
stos
mov
pushf
lds
out
pop
ret
push
mov
in
jne
dec
push
jg
mov
mov
ds
and
push
sbb
stos
mov
ffree
bound
lret
push
lea
or
cmp
dec
or
call
outsb
rorb
pop
mov
cltd
inc
test
mov
scas
xor
sub
sub
sbb
out
xchg
xor
sar
int
adc
add
pop
repz
pop
mov
mov
sti
cld
pop
ljmp
lea
in
pop
dec
and
sub
push
fdivrl
inc
sbb
ficoml
inc
cmc
movsb
lret
mov
cmpsl
sbb
add
jae
inc
push
stos
daa
fiaddl
xor
sbb
hlt
sbbl
sub
mov
shrb
icebp
outsl
sub
sbb
inc
dec
cld
sahf
cltd
or
push
cwtl
es
dec
inc
xor
add
cmp
pop
mov
mov
sahf
imul
push
xor
or
ficoms
add
nop
lret
je
push
mov
rcrl
add
je
cmp
sbb
push
mov
push
divl
aam
fnstcw
fdecstp
call
sarb
sub
and
loop
inc
mov
repz
testl
fadds
orl
js
push
sub
cmpsb
pop
sub
es
inc
jnp
inc
js
out
xor
ljmp
pop
ret
mov
pushf
push
xor
jg
xchg
and
dec
cld
push
into
add
inc
dec
sarb
cwtl
call
sbb
repnz
jmp
adc
movsb
cmp
jnp
xchg
aas
inc
aam
shrb
adc
jmp
shrl
adc
mov
inc
ret
xchg
inc
jp
lahf
dec
in
sbb
maxps
and
xor
into
pop
or
mov
cmc
cmp
scas
inc
mov
jns
cmp
ljmp
fidivrl
repz
jl
aad
pop
jne
div
push
stc
dec
rcl
sbb
and
dec
or
mov
and
inc
stos
scas
cmpsb
in
jp
inc
daa
lret
add
out
pop
shrl
shll
inc
inc
sbb
and
in
sbb
mov
adc
and
mov
inc
imul
cmpsl
jp
leave
loope
pop
xchg
ja
ds
out
cmp
mov
xor
stc
mov
cmpsb
pop
jbe
jge
adc
stc
push
movsb
pop
and
in
cltd
decl
push
adc
out
jb
scas
pop
cs
xor
scas
mov
outsb
pop
leave
sbb
arpl
lock
mov
xor
in
mov
out
mov
loop
sti
add
xor
fs
lea
mov
leave
xor
push
add
test
loopne
out
mov
jl
in
mov
xor
cs
ds
cmp
shrl
int3
mov
hlt
pop
add
jp
ljmp
aaa
xor
cmpb
inc
xor
xor
in
loope
inc
xor
repnz
jg
lret
dec
mov
insb
ret
sbb
bound
jg
sti
xor
addb
test
xor
and
insl
pop
mov
adc
lock
sbb
mov
jge
aam
sahf
in
cmc
xor
imulb
mov
push
xchg
stos
mov
and
das
fdiv
lds
sbb
test
or
xor
movsb
lret
cmp
shrl
insb
push
xlat
cmp
test
push
push
aad
ficoms
and
adcl
lods
dec
inc
loop
out
lock
cmp
test
fcomp
pushf
sbb
sbb
push
daa
jbe
xorb
and
stos
sbb
clc
lods
fnstenv
frstor
xor
inc
js
sarl
lcall
ja
pusha
mov
or
cld
mov
aaa
xchg
es
inc
adc
push
add
add
sbb
sbb
mov
xchg
jp
cmp
imul
int3
sbb
and
xchg
mov
push
cmpsl
fwait
xchg
cmpsb
cld
fcmovu
popf
mov
leave
testb
ja
sbb
int
or
and
lahf
decb
dec
jge
testb
ror
out
push
and
or
dec
xchg
out
sub
sub
loopne
lods
jnp
jbe
jnp
sbb
lods
dec
sbb
inc
cs
cmp
push
fstpl
out
rolb
loopne
pop
into
jg
aad
mov
ss
mov
cli
fdivrp
mov
fbstp
xchg
into
out
add
inc
mov
aam
fstpt
addr16
jecxz
fdivs
cmp
rcr
inc
pop
aad
jmp
pop
adcb
pop
jb
xchg
ret
cs
ret
or
daa
fwait
stc
insb
adc
mov
lret
dec
subl
shrd
xchg
mov
or
aam
adc
dec
fwait
adc
cmc
jecxz
cld
scas
jnp
sbb
dec
or
les
filds
montmul
cmpsb
ret
loopne
or
or
sbb
enter
and
cli
sub
sub
aam
test
xchg
in
aaa
pop
push
inc
sbb
leave
adc
negl
mov
daa
or
and
popa
xchg
inc
inc
mov
sub
push
in
test
or
outsl
inc
mov
sbb
and
or
push
dec
mov
testb
iret
jo
push
leave
out
popl
ret
das
addl
jp
lret
inc
and
js
imul
inc
sub
sarl
pop
add
cmp
inc
add
push
push
js
sub
icebp
mov
arpl
arpl
mov
stos
js
pop
arpl
rorb
mov
inc
pop
lods
push
loop
cltd
out
sbb
std
cmpsb
push
sub
jno
bound
ret
sti
lods
sti
jecxz
pop
insb
stos
push
sti
loope
scas
xor
inc
jbe
xor
cs
fcomps
inc
sarl
int3
inc
xchg
mov
call
call
negl
repz
cmp
fldenv
pop
push
clc
out
adc
push
jmp
add
jne
add
fsqrt
jae
ds
pop
inc
xchg
out
fs
loop
popf
stos
and
xchg
pop
xchg
pusha
loopne
js
ja
sub
out
cld
push
cmpsb
in
lods
imul
sbb
loop
add
or
pop
dec
fildll
insb
xor
cmpsb
mov
jg
das
lods
adc
or
jle
leave
or
xor
gs
out
stc
decb
sahf
in
xor
insb
mov
cmp
scas
popa
mov
sbb
add
mov
scas
xchg
cmp
jno
call
scas
pop
stc
mov
cmc
mov
scas
out
sbb
pop
clc
lret
pop
popf
push
jmp
push
std
clc
or
insl
dec
adc
outsb
inc
rcll
adc
loopne
movsl
stos
stos
sub
nop
xchg
jae
shr
shrb
push
and
cwtl
cli
jnp
pop
std
push
or
fbstp
xchg
mov
jno
mov
sub
mov
mov
mov
mov
jno
in
xchg
jno
lods
push
xchg
cwtl
mov
pop
push
lret
les
inc
test
int
push
cld
sub
xor
cmp
js
jne
movsb
loop
sbb
mov
out
js
jne
xchg
xchg
jne
pop
xorb
jbe
lods
hlt
fistps
mov
push
cmc
mov
lcall
out
jle
ss
add
psubw
cmp
sub
setl
fwait
nop
sub
cmp
decl
pusha
push
insb
out
push
lods
inc
sbbb
cwtl
test
adc
ficoml
fnstenv
push
arpl
add
into
jp
lock
jmp
push
xor
and
fsubrl
xor
push
xchg
adc
sbb
mov
pop
dec
cld
adc
testb
or
loope
mov
ds
out
incb
pop
jmp
xchg
je
lds
shrl
pop
adc
enter
pop
jmp
aaa
leave
xchg
xchg
test
pop
fucomp
sarb
out
test
in
sbb
and
cmp
xchg
cmp
mov
inc
les
ret
test
mov
lods
sub
enter
mov
imul
outsl
data16
mov
clc
mov
dec
dec
nop
cwtl
dec
cmc
in
ret
add
mov
in
xor
xchg
mov
nop
cld
pop
shlb
sbb
int
mov
daa
adc
int3
je
lea
adc
stos
jmp
or
daa
lock
addr16
popa
call
sub
std
addr16
xchg
outsb
iret
dec
dec
push
incl
dec
sbb
jl
ss
daa
mov
push
mov
mov
rcll
int
sub
cltd
cli
pop
pop
sub
pop
pop
shr
fsin
add
xchg
popf
rorl
fisttpll
and
cs
sub
mov
cmp
in
cmc
xchg
xchg
xchg
nop
xor
xor
mov
and
mov
pop
adc
inc
loopne
bound
cmp
push
cmp
shll
adcl
lret
aas
jg
lcall
cmp
mov
bound
adc
clc
scas
mov
jge
or
push
js
and
mov
push
adc
cli
inc
xchg
dec
inc
fs
or
adc
jecxz
mov
cs
inc
cmp
push
fwait
popf
xlat
mov
xchg
dec
inc
mov
aaa
inc
cmpsl
sub
mov
xchg
xchg
repnz
repnz
pop
cmp
leave
inc
xor
inc
inc
int
jno
cli
xchg
adc
aaa
rorl
dec
push
lods
push
push
sbb
inc
jb
das
jb
xlat
cwtl
fbstp
dec
sub
movsb
push
pop
dec
fdivr
mov
xor
jo
out
lahf
mov
jg
sub
add
xchg
inc
iret
push
addb
pop
inc
lea
test
sarl
test
repnz
pusha
sbb
push
in
sbb
in
add
jmp
mov
shll
pop
push
insb
pop
clc
insl
vpaddd
xor
dec
add
inc
sti
daa
fisubrl
lods
mov
xchg
dec
cli
xor
mov
cmp
mov
movsl
mov
mov
leave
pop
mov
push
fstps
inc
xchg
pop
dec
xchg
shrb
inc
mov
les
clc
adc
in
rorb
sar
ficoml
movl
inc
les
jb
or
addr16
or
pop
in
dec
xor
cmc
xorl
dec
cmp
cmp
orl
es
inc
lahf
cmp
or
iret
or
pop
sbb
xlat
inc
jmp
add
rcrb
cli
nop
dec
mov
jge
hlt
pop
inc
shlb
testb
mov
push
ja
lret
repz
aam
push
jbe
mov
cwtl
out
cmp
pusha
into
stc
shr
stc
push
cmp
stos
xchg
push
mov
scas
pop
arpl
shll
xchg
inc
jo
jae
jmp
arpl
stos
sti
pop
inc
mov
add
dec
xchg
dec
xor
jb
repz
ja
lcall
data16
imul
sbb
lret
mov
fs
push
jo
out
loope
dec
fsub
xchg
sub
fwait
xor
xchg
mov
push
jae
pop
jl
fucom
in
fsubs
fidivl
sbb
sbb
cmp
cmp
rcrl
in
int
jl
add
cmpsl
hlt
cmc
or
inc
or
mov
push
shll
mov
mov
mov
clc
test
aaa
xchg
rcll
or
cwtl
jno
orl
adc
pop
movsl
lcall
rcr
aas
cmp
or
mov
lret
xor
xchg
jp
sbb
or
imul
push
pusha
jle
dec
cwtl
jecxz
mov
out
sub
or
shl
mov
dec
and
mov
cmp
sti
lret
das
mov
ret
into
insl
int
fwait
cs
push
or
cmp
jl
data16
outsl
insl
insl
je
dec
xchg
push
or
sbb
adc
fdivl
std
xor
xchg
icebp
inc
xor
lock
sti
mov
jno
loop
inc
jmp
loope
rcr
fimuls
repz
push
pop
mov
jns
lret
stos
imul
ljmp
out
xor
pop
jb
add
addr16
cli
dec
mov
mov
arpl
mov
jnp
fcoml
mov
out
hlt
add
add
lods
andl
inc
jecxz
or
mov
jb
add
mov
in
sbb
adc
cmpb
and
decb
fisubrl
rorl
sub
cmp
mov
xchg
push
inc
mov
and
in
jae
mov
and
cmp
stos
popf
jmp
or
in
pop
add
sbb
cmp
dec
popa
or
test
jae
xor
clc
jno
cmc
stos
sete
and
mov
dec
xchg
sbb
mov
scas
mov
dec
dec
or
pop
mov
sub
pslld
es
and
mov
or
adc
jmp
sbb
sub
xor
sti
inc
stos
aam
fistps
mov
lods
dec
xlat
jnp
lods
xchg
jle
push
icebp
xor
jbe
cmp
mov
mov
add
pop
outsb
shrl
pop
adc
mov
or
pop
std
adc
ds
xor
adc
sub
enter
adc
cmp
ss
stos
sub
mov
jno
aad
mov
push
mov
mov
popf
adc
or
pusha
mov
xchg
pop
aam
das
mov
ror
add
popa
jmp
jnp
pop
inc
sub
jb
test
rorb
cmp
test
loope
js,pn
pop
add
pop
pop
test
jnp
jnp
dec
push
inc
fidivrs
fbstp
es
out
cmc
xchg
insl
mov
rolb
push
clc
push
jnp
stos
or
adc
pop
inc
aam
mov
outsl
mov
pop
pop
xchg
test
subb
sub
pushf
fisubrl
faddl
es
sub
sub
shrl
je
divl
fwait
out
sbb
fisubs
leave
lcall
mov
dec
dec
or
in
and
out
and
movsb
dec
inc
adc
dec
jl
and
pop
sub
cmp
adc
and
pop
pop
movsb
cmp
xor
adc
in
dec
jns
xchg
cmc
sbb
ljmp
jo
pop
fsubl
adc
or
xor
and
jno
inc
std
pop
pop
jecxz
push
aas
repnz
inc
sahf
stc
int3
dec
cmp
and
pop
cmp
cmpsb
aas
dec
mov
sar
dec
dec
call
jbe
pushf
jae
xchg
gs
loope
adc
jns
out
jp
aam
cmpsb
je
mov
lods
inc
int
mov
aad
xchg
adc
ret
add
adc
negl
std
outsl
add
dec
pusha
jmp
in
mov
or
pop
inc
dec
mov
sti
adc
add
jo
mov
cmpsb
sub
pusha
jnp
call
xchg
rcrl
movsb
test
jge
sub
dec
rol
push
stos
push
ljmp
out
push
jmp
cmpsb
int3
mov
xchg
es
mov
cmp
sbbl
test
sbb
shll
daa
dec
inc
xor
mov
rclb
pop
rcrb
jmp
xchg
sbbl
outsl
mov
jbe
xor
jl
stc
outsb
aaa
mov
add
fucomip
rorb
insl
pushf
lcall
call
pop
xchg
sti
fbstp
push
shlb
aad
pop
cmpb
test
jbe
jns
in
adc
push
lock
sahf
push
mov
mov
icebp
jnp
pop
mov
pmulhuw
jl
cwtl
mov
mov
push
out
inc
xor
shlb
ret
push
mov
pop
std
sarl
push
mov
fimull
outsl
push
inc
sbb
jb
add
bound
and
inc
movsb
pop
jnp
lods
data16
push
inc
xchg
adc
fisttps
int
and
test
test
add
dec
jl
mov
sbb
ljmp
rorb
repz
or
movb
lea
out
xchg
aad
out
xchg
sub
add
add
stos
mov
in
das
aaa
roll
adc
jecxz
cmp
dec
cmp
mov
fisttps
push
popl
mov
xchg
scas
adc
mov
dec
stos
std
cmpl
icebp
jecxz
scas
pop
sub
add
add
and
mov
push
inc
add
popf
pop
mov
mov
outsl
mov
jle
out
shrb
notb
pop
adc
mov
test
test
push
dec
lret
hlt
push
push
add
mov
movsb
les
xchg
movsb
je
pop
in
mov
xorb
out
xor
xor
scas
pushf
or
lret
push
aam
mov
inc
add
lea
mov
push
lret
pop
mov
ds
lret
scas
sahf
std
divl
ds
add
jecxz
rorl
xorl
sbb
insb
loop
adc
shll
push
aas
jle
fsubrl
mov
arpl
mov
aaa
enter
bound
or
sbb
ret
nop
mov
mov
cmpsb
pop
rclb
int
xor
ret
ja
or
stc
cli
xchg
arpl
jecxz
scas
repz
xchg
or
and
shr
test
add
pop
dec
jge
hlt
adc
popa
stos
enter
and
mov
popf
out
jmp
fiaddl
sti
xor
imul
sub
movb
rorb
pop
pop
pushf
cs
pusha
icebp
aam
mov
jb
cld
cmp
test
sbb
add
adc
stos
xchg
or
push
push
mov
mov
les
push
push
sub
mov
stc
fsubs
inc
push
in
jle
ficomps
sbb
outsb
or
or
dec
push
insb
mov
adc
push
insl
popa
xor
push
mov
stc
out
add
push
aam
and
dec
pop
scas
mov
push
iret
jae
xchg
leave
fcom
pusha
pushf
clc
call
mov
lret
movsl
inc
lret
outsl
dec
sub
xchg
mov
js
cli
mov
or
daa
and
cwtl
ficompl
rcll
inc
sbb
in
ja
cs
into
std
mov
mov
xchg
jns
fisubl
jae
xchg
pop
das
cmpsb
and
adc
inc
scas
inc
mov
inc
push
sbb
faddl
sbb
mov
or
mov
rolb
pop
and
je
jge
fldcw
movsl
or
inc
dec
int3
xchg
aaa
sub
in
in
not
sub
mov
rcrl
mov
cltd
icebp
js
or
test
pusha
lock
clc
ds
xchg
adc
icebp
push
add
movsl
sub
sub
dec
addr16
mov
aas
ret
cli
mov
mov
cmp
mov
orl
les
decl
daa
and
frstor
sub
jo
mov
mov
fndisi(8087
and
mov
mov
sub
test
push
aaa
mov
dec
xchg
adc
lds
mov
dec
inc
jg
xchg
pop
jb
adc
adc
jl
js
sahf
add
xor
dec
mov
cwtl
rcrl
mov
or
fiadds
xchg
mov
pop
mov
loopne
xor
jmp
lret
mov
cli
add
mov
lahf
jb
mov
mov
or
arpl
popa
int
mov
inc
pop
xor
lock
cmpsb
push
push
xor
mov
and
lcall
fldt
and
jecxz
mov
in
repnz
pop
xor
mov
mov
inc
clc
jb
sub
jecxz
mov
mov
hlt
lret
mul
push
sti
cltd
mov
sbb
mov
xor
mov
or
sahf
cmp
jp
pop
test
push
fs
icebp
lds
cmp
sti
xchg
add
loope
int3
adc
pushf
sbb
pop
stc
insb
mov
or
cmp
sub
fcompl
imul
sbb
pop
stc
insb
mov
or
cmp
sub
fcomps
imul
sbb
pop
jl
insb
mov
mov
cld
jns
or
push
mov
stc
sbb
xchg
adc
push
ret
inc
rcll
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
cmp
push
push
mov
lds
jg
sub
stos
add
add
add
add
add
pop
or
add
add
mov
mov
lret
add
imul
pop
add
xor
movsb
add
push
add
add
push
roll
add
add
add
add
add
add
add
add
arpl
sbb
bound
or
xchg
add
add
mov
push
add
add
add
inc
add
add
add
add
adc
xor
xor
sub
push
add
sahf
add
add
add
and
mov
add
add
add
add
jl
and
add
add
add
add
add
inc
add
add
xor
roll
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
sub
fadds
movsl
add
add
add
add
add
add
add
sub
scas
add
add
add
je
pop
add
add
add
add
add
add
add
cmp
insb
add
add
add
add
add
add
and
mov
add
add
add
add
add
pop
add
add
push
add
add
add
add
adc
sub
roll
adc
xor
add
add
pop
add
mov
add
sbb
adc
lds
and
mov
icebp
add
adc
sub
sub
xor
add
leave
add
add
popl
bound
test
movsb
add
add
add
add
add
roll
add
fiaddl
or
stos
add
add
inc
add
add
add
add
add
push
add
loope
jno
rolb
add
add
add
add
add
add
add
add
add
add
add
add
jle
adc
sub
test
xor
add
add
add
add
add
add
add
add
aas
add
add
add
add
scas
add
roll
add
add
pop
add
add
roll
add
add
js
or
test
inc
add
call
add
add
add
call
add
add
stos
add
lret
add
add
add
add
add
add
add
add
push
add
fadds
cmp
add
mov
pop
add
faddl
dec
add
test
add
add
add
add
inc
add
add
add
add
add
addr16
add
add
add
add
push
add
add
add
cmp
jne
roll
mov
add
add
add
inc
add
add
add
add
add
add
add
xchg
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
arpl
sub
lcall
add
add
add
add
xor
sub
sub
loop
lea
dec
add
cmp
lea
push
add
mov
jae
inc
add
add
add
add
add
arpl
sub
lcall
add
add
add
add
add
add
pop
ret
leave
addr16
mov
ja
and
add
jno
sbb
xor
xchg
movsl
aad
clc
fistl
and
test
xor
push
ret
fwait
push
loop
add
shlb
push
adc
lods
add
hlt
adc
lock
push
loopne
cmp
cmp
fidivl
movsb
out
orl
xor
mov
enter
jmp
dec
gs
xchg
mov
fcmovu
fucom
shrl
aas
daa
xchg
or
subl
cmp
pop
pop
xor
mov
adc
cmc
pop
pop
or
mov
jae
int
cmpsl
fdivr
dec
adc
subb
enter
ljmp
lock
orb
daa
pop
arpl
rcr
push
xchg
mov
cmp
and
scas
mov
pop
movsb
inc
ret
push
mov
sub
mov
sub
cltd
addl
push
cmp
sbbb
insb
dec
sub
mov
enter
cmp
pushf
pop
jb,pt
in
addr16
mov
mov
mov
lock
fdivrs
or
insl
enter
cli
push
pop
inc
or
jne
push
push
popa
sarl
push
inc
inc
int3
gs
push
inc
arpl
xchg
inc
insl
dec
outsb
and
pop
xor
leave
mov
or
fidivrl
mov
mov
fs
mov
cwtl
adc
call
xchg
les
dec
mov
cmp
leave
cli
adcl
repz
jmp
testl
sub
mov
cltd
les
xlat
cmp
xor
popl
fcompl
sbb
aam
lock
sarl
jge
cmpsb
aad
mov
xchg
push
inc
inc
sbb
cs
dec
jl
mov
ljmp
dec
add
mov
cmpsb
and
adc
push
dec
mov
push
cmp
sub
xchg
lcall
cmpl
out
roll
das
lds
dec
lahf
icebp
jg
adc
enter
cltd
xchg
mov
outsl
scas
nop
cli
popa
pop
cli
mov
pop
push
inc
arpl
scas
mov
mov
mov
xor
adc
inc
mov
xor
add
push
and
stos
testb
xor
int
mov
out
in
fimuls
xchg
aam
cld
fbld
int3
jns
imul
pop
push
mov
repnz
nop
mov
mov
ret
mov
pop
scas
in
add
push
sahf
lds
enter
jecxz
xor
jl
sti
addb
mov
ds
mov
or
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
