call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
aad
cmp
jb
add
adc
add
xor
sub
cli
mov
sub
push
or
add
jp
dec
xor
test
mov
ret
sub
xor
add
jb
cmp
xor
dec
icebp
orb
loopne
negb
push
bound
xchg
push
test
mov
test
loope
mov
add
subl
loope
test
sub
lcall
dec
xchg
mov
push
fs
cmp
jp
add
divl
repnz
xchg
cli
xlat
cli
push
mov
sahf
jp
cmp
dec
adc
ret
cli
rolb
push
gs
xchg
add
mov
cmc
out
cli
decb
xchg
daa
push
mov
movl
iret
fisubl
mov
std
push
sti
fsave
xlat
icebp
stos
scas
imul
mov
sub
out
push
and
inc
add
dec
mov
lret
in
nop
lret
sub
cmp
or
sbb
jl
push
xor
ret
ret
xchg
cmc
lock
test
rsqrtps
cmp
jp
pop
imul
dec
xlat
cs
roll
fsincos
cwtl
std
xchg
lret
cmpsb
repz
add
outsl
push
push
adc
dec
xor
stos
sarb
sub
cli
mov
sub
bound
jb
add
jp
dec
xor
stos
sarb
sub
cli
mov
sub
mov
int
cli
pop
dec
notb
roll
nop
jbe
jnp
adc
ds
ret
or
or
das
movsl
mov
sub
jbe
mov
in
xchg
sti
mov
das
mov
int3
ds
lret
mov
sbb
push
jmp
jmp
in
js
jns
dec
push
les
orb
pop
pusha
in
and
jne
ffreep
pop
jge
mov
pushf
mov
movsl
outsb
std
jbe
cltd
pop
rcrb
xchg
shlb
and
jo
adc
pop
cmp
out
fidivl
inc
icebp
xor
and
or
adcl
cmp
add
insb
pop
mov
and
cmpsb
mov
test
je
cmp
fcoms
daa
repnz
stos
jle
add
dec
inc
call
ljmp
nop
roll
add
insb
dec
sub
aas
push
dec
push
mov
imul
aaa
in
fdivr
xchg
mov
xor
fisubrs
xchg
rclb
lods
insl
call
dec
adc
xor
inc
jmp
jp
es
pushl
mov
sbb
jle
cmpsb
lods
aad
fcompl
xor
pop
lret
add
inc
or
dec
insl
adc
mov
xchg
ss
rorb
cmp
jl
cmp
mov
mov
mov
xchg
stc
pop
inc
mov
cmpsb
sub
mov
shlb
push
and
mov
in
cwtl
xor
or
inc
fdiv
mov
out
inc
out
add
fidivrs
mov
xor
or
enter
push
push
jno
sbb
aas
push
jnp
dec
cmpsb
cli
mov
test
fsubl
jle
jbe
push
mov
push
es
adc
out
lret
mov
jmp
mulb
pop
jle
popf
fs
popl
pop
fisubrl
or
pushf
scas
pop
push
jecxz
xlat
popa
out
mov
cli
xor
in
dec
insb
ljmp
mov
sub
loopne
mov
sub
cmp
or
jno
mov
das
mov
push
hlt
subb
cmc
inc
cwtl
xchg
fwait
mov
les
insb
dec
jge
aam
adc
int3
mov
mov
std
data16
es
jmp
and
dec
pop
mov
push
pop
mov
add
out
loopne
mov
xor
pop
ret
xor
jle
fsts
xor
lret
mov
sbb
push
pop
cmc
sbb
push
mov
mov
addr16
subb
inc
xchg
sub
push
add
ret
test
cmp
pop
std
or
popf
jmp
xchg
jb
test
out
cmp
xchg
cltd
mov
ds
std
test
fwait
or
loopne
cltd
cmp
or
popa
aam
fmull
in
pop
sbb
pushf
outsl
jmp
syscall
jmp
shl
add
imul
js
mov
mov
xor
leave
jns
ja
cmp
mov
insb
or
mov
mov
fiadds
mulb
test
fs
push
adc
mov
mov
inc
sbb
repnz
rclb
inc
ret
lock
aas
repnz
fs
psllw
inc
int
out
inc
test
add
pop
js
std
mov
and
das
jne
pop
shr
orb
enter
sbb
or
loope
fsubrl
pop
or
imul
cltd
jp
xchg
fmull
fcoml
stc
and
in
inc
test
xchg
shlb
pop
repz
daa
mov
mov
movsl
sub
sbb
int3
adc
mov
movsb
mov
out
add
push
clc
call
into
jbe
insb
out
shlb
lret
push
mull
adc
je
outsl
and
xchg
jno
inc
je
cmpsb
and
inc
cmpsb
int
lret
adcl
dec
xchg
pop
xchg
push
dec
das
mov
rep
mov
sbb
dec
stos
mov
ss
and
mov
mov
mov
pop
pop
pop
jbe
mul
jmp
cmpsl
out
flds
loopne
jge
mov
jno
adc
cmp
dec
lcall
pop
stc
fidivrs
subl
lahf
add
scas
sti
push
sub
sbb
out
jg
mov
fdivp
pusha
int3
pop
stos
cmpsl
mov
loopne
inc
cld
xor
sti
lea
add
sbb
jecxz
test
sub
sub
in
sub
mov
mov
mov
aam
ds
loop
imul
je
cmpsb
cld
jmp
arpl
js
pop
adc
lea
xchg
add
mov
jb
aam
popa
mov
push
daa
out
clc
mov
stos
lret
call
sub
lret
es
or
sarb
jnp
xchg
lret
mov
pop
xlat
mov
std
mov
gs
insl
xor
hlt
test
nop
mov
mov
addl
out
in
arpl
jnp
test
pop
push
dec
cmpsb
sbb
mov
lret
and
add
and
in
adc
lret
std
movsb
mov
rorl
or
pop
xor
sub
mov
xchg
daa
cmpsl
mov
aaa
popf
cld
int
mov
jae
jbe
cld
rsm
out
loope
sub
js
cmp
icebp
ror
stos
es
push
or
mov
imul
lahf
cmpsb
shl
aas
mov
icebp
pop
mov
repz
cmp
and
cwtl
sbb
xchg
test
addr16
pop
divb
scas
or
and
inc
and
mov
or
sub
movaps
lret
jg
ja
stos
mov
sbbb
xchg
outsb
je
mov
jp
fisubs
call
fcomip
frstor
ljmp
add
and
inc
mov
cmp
aam
pop
sub
sub
out
movsb
or
sbb
sti
fdivrp
jl
push
xchg
jl
mov
sub
and
das
xor
cmp
jg
out
lds
ljmp
push
stos
push
sub
mov
enter
out
je
jb
rclb
pop
scas
mov
lods
cmc
cli
adc
in
jns
std
pop
jp
stos
add
imul
test
push
hlt
mov
ss
in
lret
xor
and
and
mov
add
das
outsb
stc
dec
mov
mov
scas
and
outsl
rcrb
je
mov
add
in
out
lahf
lds
or
arpl
mov
jno
out
push
fdivl
fldt
fldl
jmp
mov
mov
sub
inc
dec
unpckhps
sbb
xchg
roll
popa
sbb
insl
add
sub
sbb
sbb
in
adc
mov
bound
or
sub
mov
clc
mov
or
mov
xchg
in
stos
shrb
mov
jae
xor
sub
jmp
and
fsubrs
sbb
mov
sbb
pushf
fnstsw
fldenv
xor
mov
dec
in
xor
orb
push
cwtl
subl
jno
fs
mov
call
jge
clc
test
jle
xor
adc
push
jge
jno
mov
mov
and
push
jmp
test
cwtl
adc
inc
pop
mov
mov
jno
dec
inc
jo
adc
pop
ljmp
lcall
mov
jno
andl
clc
sbb
adc
test
xchg
mov
test
mov
mov
lret
pop
stos
imul
data16
test
jbe
inc
jbe
jp
lods
cmp
pop
outsb
insl
popf
xor
or
std
sbb
push
and
cmc
aas
sub
and
lea
cmp
sub
pop
sub
inc
shr
lret
je
lods
xchg
jp
inc
xorl
fucom
lret
cs
clc
scas
or
xchg
notl
int3
xchg
pop
mov
inc
adc
jo
dec
mov
inc
dec
aad
repz
enter
les
or
sbb
test
adc
dec
dec
dec
or
in
mov
jbe
cmpsl
std
imul
mov
sub
inc
imul
sbb
or
lea
lret
mov
and
or
idivb
mov
add
jae
sub
xchg
jmp
das
dec
pushf
mov
stc
inc
jo
repz
mov
dec
int3
and
xor
mov
xor
pop
and
ja
inc
add
dec
inc
test
sub
mov
scas
add
jno
in
xor
jp
enter
jo
mov
out
repz
imul
je
or
cmpsb
scas
adc
loopne
lret
pop
push
lock
cmp
push
popf
mov
xor
call
sbb
pop
sahf
sbbl
ret
inc
push
cmp
inc
mov
notb
js
lahf
lods
xorb
lock
aaa
pop
inc
repz
jecxz
daa
and
mov
cli
sbb
pop
out
sub
mov
inc
xor
pop
jge
jbe
xor
sbb
push
pop
xchg
roll
fcmovnb
leave
inc
repnz
pushf
jmp
inc
adc
xor
xor
jo
out
mov
ret
and
je
push
gs
outsl
or
or
popa
lret
insb
pop
adc
mov
fsubrp
leave
xchg
insl
lds
xor
sbb
fisubrl
add
test
jmp
sbb
inc
add
popf
int3
bound
mov
and
int
test
push
pusha
push
enter
std
mov
imul
lods
dec
mov
rclb
mov
jmp
in
xchg
jle
adc
jp
and
jmp
and
mov
pop
sub
jl
xchg
cwtl
mov
mov
push
xchg
enter
lods
test
ja
sbb
dec
xchg
das
iret
lock
add
dec
dec
mov
sbb
sub
adc
cmp
push
js
pop
test
mov
dec
cmp
jg
gs
add
push
in
mov
jno
incb
or
push
js
dec
enter
push
ficoml
mov
je
dec
xor
mov
xor
icebp
in
mov
int
ljmp
push
add
in
mov
dec
ljmp
lcall
sbb
aam
lock
stos
adcl
cmp
adc
add
adc
vmovhps
fstps
jb
mov
imul
xchg
xchg
aad
sub
inc
dec
cs
outsl
mov
enter
pop
adc
movsb
mov
inc
xchg
repz
out
or
mov
push
cltd
mov
lds
xchg
sub
jl
inc
rorb
lock
add
xor
fcomp
push
loopne
loop
movsb
push
jge
adc
enter
pop
or
and
or
xchg
in
jo
jnp
outsb
cvtps2pd
push
rclb
dec
adcl
ja
daa
xorb
out
xchg
out
mov
push
sub
pop
mov
dec
mov
in
adc
jp
cli
cmp
scas
test
cmp
jmp
lea
xchg
loope
fs
insb
mov
mov
out
jbe
cmp
jno
add
xchg
or
fwait
sbb
hlt
mov
cmpsl
dec
stos
inc
lahf
rclb
add
sahf
lods
jb
mov
popa
pushf
mov
push
dec
jne
test
or
das
int
dec
xor
xlat
lds
add
xor
pop
push
mov
stc
push
mov
and
cltd
cli
lret
cmpsb
jl
je
cltd
add
pop
lcall
bound
outsl
dec
push
xor
in
inc
sub
pop
decb
sbb
clc
dec
arpl
lea
pop
mov
or
sbb
insl
push
scas
lahf
jns
xor
imul
loop
incb
fwait
lods
pop
popa
in
sbb
test
arpl
lret
mov
add
xor
mov
sub
mov
or
orl
pusha
pop
or
and
daa
std
in
ds
out
outsl
mov
jg
pop
pop
out
mov
out
fistpl
movsl
xor
mov
add
adc
js
dec
push
mov
cmpsl
push
sub
mov
inc
pop
dec
pop
fcompl
fstpt
sbb
mov
gs
xor
inc
les
add
or
mov
clc
dec
loope
adc
inc
cs
and
mov
call
jl
lret
repnz
inc
test
js
adc
mov
das
shll
addr16
pop
leave
pop
call
mov
pop
xchg
sub
cmpsb
jle
addr16
inc
inc
and
call
xor
lcall
call
lret
mov
btr
cld
movb
cmp
les
dec
cmp
xor
loop
cmp
out
jno
cli
mov
in
xor
xchg
add
fstpt
and
pop
mov
xor
xlat
ds
addr16
test
ret
pushf
cmp
fwait
xor
xor
mov
cmp
pop
adc
mov
sbb
xchg
dec
or
in
hlt
dec
mov
outsb
push
sbb
imul
sbb
push
mov
jg
and
dec
sub
pop
outsl
inc
icebp
fistpll
scas
stos
push
cmp
shll
aam
std
adc
pop
jo
jp
shlb
add
xor
cltd
cmp
adc
cmpsl
scas
and
adc
lds
add
pop
in
sti
mov
scas
add
or
jns
xchg
loopne
std
lcallw
out
jne
bound
push
push
mov
inc
jns
jmp
mov
fiadds
xchg
jle
xor
sbb
push
cmc
jnp
push
sbb
or
push
and
fiaddl
mov
push
outsl
xchg
dec
rsqrtps
repnz
dec
jp
test
sub
pop
xor
xor
xor
inc
into
aaa
dec
rolb
hlt
dec
adc
mov
and
imul
sahf
pop
jecxz
mov
adc
mov
cld
xlat
clc
push
push
lock
sub
pop
cmp
sbb
loopne
insl
stc
out
inc
sahf
cs
sub
outsb
jp
mov
lret
xchg
sub
add
sti
mov
cmp
xchg
jno
xchg
sub
ret
movsb
or
cmp
imul
push
mov
sbb
pop
decl
loopne
inc
ret
or
fs
mov
dec
ficoms
rcll
lahf
adc
mov
jbe
xor
jae
cmpsb
aas
stos
not
pop
ret
adc
ja
sub
mov
push
mov
sar
stos
into
idivb
mov
aas
cvtps2pd
outsl
movsl
jp
pop
jmp
in
fiadds
mov
cmpsl
push
pop
ficoml
stos
je
mov
inc
popa
push
dec
cmp
cs
inc
sbb
pop
pushf
int3
daa
dec
add
sub
js
adc
mov
cwtl
in
in
rcl
add
lret
mov
sub
pop
mov
imul
cltd
xchg
imul
add
inc
call
mov
mov
adcb
pushf
mov
push
pop
das
mov
mov
cmp
xchg
xchg
jns
roll
das
dec
testl
adc
pop
imul
fbld
cmpl
jmp
cmc
dec
fndisi(8087
lahf
test
int
and
push
cmp
test
mov
scas
mov
jg
pop
or
push
testl
push
dec
cwtl
sbb
fisubrs
sbb
xchg
out
nop
xchg
xchg
jp
out
mov
gs
aaa
fildll
gs
inc
nop
mov
dec
add
dec
push
iret
int
ljmp
mov
pushf
jmp
sbb
ja
sahf
stc
int
sti
es
fistpll
sub
cli
add
ds
mov
push
adc
test
lret
out
nop
out
cmp
jbe
arpl
sahf
ficompl
mov
test
xchg
or
or
jnp
hlt
and
pop
pop
or
imul
shrb
lahf
add
and
and
into
int3
imul
cmp
in
mov
repz
jne
lahf
and
fsubrl
adcb
jmp
adc
sub
into
les
in
inc
or
fdivs
mov
jae
das
mov
and
pop
sub
jmp
cmp
cmp
cmp
bound
aam
jb
or
in
sbb
cltd
push
neg
push
and
das
pop
pop
lahf
sub
push
sub
mov
fwait
ret
loopne
ja
inc
xor
mov
aaa
push
dec
scas
jmp
fwait
ds
cmp
jno
fadd
mov
pop
stos
shlb
fcoml
test
loop
or
pop
into
jno
xor
loope
add
jecxz
adc
add
sbb
xchg
iret
xor
fstps
jl
pop
sbbl
push
adc
cmp
nop
mov
push
and
dec
pop
mov
add
xlat
push
pop
sbb
mov
push
out
xchg
sub
mov
mov
jns
negb
push
cmpsl
push
push
jecxz
jge
imul
inc
xchg
pop
sbb
inc
push
inc
cltd
cltd
lea
sbb
dec
daa
sbb
std
test
ret
pop
cltd
push
mov
fisubs
push
xor
mov
sarb
inc
push
je
out
pop
cli
fnstenv
xorb
mov
in
fdivrs
or
in
xor
add
jmp
icebp
shl
push
add
in
dec
pusha
daa
dec
xchg
in
not
popf
int3
nop
mov
repz
mov
xchg
andb
es
mov
cmpl
inc
sbb
es
ret
negb
lahf
jb
ror
test
pop
jg
jo
push
jb
mov
lret
sub
dec
and
jp
aam
or
jg
push
xchg
xorb
mov
mov
mov
dec
popa
iret
movsl
xchg
shrl
lea
xchg
sbb
jo
pop
push
dec
mov
ds
aas
pop
imul
sbb
rcl
int3
popa
dec
insl
les
lods
xchg
sub
jnp
dec
dec
add
std
rcrl
or
inc
mov
add
xchg
cmp
or
movsb
ljmp
xchg
mov
jp
shl
leave
subl
gs
out
cltd
mov
or
shrl
cmp
popf
jp
dec
es
in
out
insl
and
lods
mov
es
outsb
jmp
ljmp
push
out
popa
mov
iret
mov
push
fistpll
popf
mull
cltd
iret
xor
mov
fildl
pop
aam
fsubl
lahf
or
add
in
cli
in
cmpsb
sub
clc
xchg
lret
xchg
rcrb
add
mov
sarl
lock
fnstenv
xchg
mov
adc
gs
mov
outsb
mov
dec
les
or
add
mov
mov
mov
orl
sub
je
pop
test
xor
iret
in
iret
loope
xchg
dec
xor
out
scas
mov
insb
inc
sbb
ss
mov
iret
push
pop
add
or
in
mov
loope
lret
int
push
mov
roll
adc
ret
in
dec
add
js
int
push
mov
sub
lods
stc
setae
jns
pop
lea
jp
cmpsl
ror
or
gs
lret
mov
stos
push
jae
push
xchg
cmpb
int
jb
roll
outsl
mov
mov
and
push
jno
add
adc
push
sub
cmc
fbstp
xchg
in
jae
repnz
mov
sbb
push
lret
icebp
push
push
push
sbb
mov
enter
sahf
mov
imul
dec
push
cmpsb
daa
inc
sbb
push
add
ficomps
push
xor
or
add
int
ret
insl
incl
in
scas
inc
gs
js
mov
mov
adcb
fcmove
pop
jmp
add
int
iret
aad
inc
je
cltd
mov
sub
sbb
sub
pop
xchg
cmpsb
rorb
movsb
or
jecxz
sub
aam
mov
rorl
das
jno
jae
div
adc
cmp
repz
das
jge
jae
cmpsb
inc
fxam
dec
stos
orb
roll
mov
add
jp
dec
xor
stos
sarb
sub
cli
mov
sub
bound
jb
add
jp
dec
xor
stos
sarb
sub
cli
mov
sub
add
jb
xchg
push
jp
dec
repnz
ret
mov
sub
cli
mov
sub
cmp
or
add
jp
dec
mov
ret
adc
repnz
cmc
bound
add
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
pop
pop
setl
push
jp
adc
movsb
enter
test
mov
iret
push
pop
pop
movaps
outsl
or
popa
clc
mov
out
mov
cwtl
iret
jno
popa
jmp
xor
daa
adc
jge
mov
mov
mov
lods
iret
stos
add
outsb
dec
dec
cs
jo
xchg
leave
mov
add
fldl
jecxz
and
in
xor
lock
in
mov
rcll
pusha
es
ljmp
xchg
push
test
inc
push
jmp
mov
adc
mov
push
jno
or
adc
aas
push
imul
negl
stc
dec
std
pusha
daa
mov
mov
mov
jmp
mov
outsb
inc
sahf
call
clc
leave
jg
jg
xchg
mov
inc
add
rorb
push
xor
pushf
sti
das
adc
in
jne
mov
mov
in
xchg
jmp
mov
cwtl
movsl
mov
imul
jg
outsl
or
mov
shll
cwtl
std
add
sbb
arpl
pop
add
sbb
call
cmp
cli
stos
cmc
cmpsb
pop
jns
imul
sub
dec
jl
ficomps
mov
mov
adc
and
xor
xor
outsl
or
dec
call
lahf
fmuls
mov
cwtl
iret
push
pop
pop
movaps
outsl
or
dec
call
lahf
fmuls
mov
cwtl
iret
push
bound
loope
sbb
or
fnsave
lock
sbb
in
push
rolb
push
jae
in
in
inc
ret
push
xchg
jg
outsl
and
mov
and
dec
jl
jae
vprotd
jge
jno
cld
rcll
stos
stc
lds
mov
cmp
xor
call
scas
push
gs
pop
jne
iret
in
es
and
sbb
pop
jg
dec
outsb
jnp
push
mul
fcoms
mov
cmp
gs
jg
push
mov
mov
sbb
mov
mov
sub
cltd
xchg
mov
in
adc
sti
adc
in
jmp
dec
sbb
mov
icebp
test
inc
cmp
int
gs
xchg
sti
jnp
sub
cmp
aas
mov
hlt
je
test
or
push
cmpsl
mov
mov
mov
stos
inc
pop
ss
ret
lret
adc
sub
fcompl
sub
xor
jecxz
cmp
out
leave
test
std
outsl
jns
jg
pop
dec
fbld
subl
xor
out
movsb
ds
das
sarl
stos
aas
mov
in
add
es
push
and
lahf
pop
lret
iret
pushf
xchg
mov
cvtdq2ps
cmpsl
sbb
loopne
cld
jns
ret
repz
popa
cmpsb
fildll
jecxz
leave
in
jae
add
dec
add
xor
mov
and
fldcw
mov
mov
loope
inc
sbb
shlb
adc
out
add
pop
outsl
xorl
movsb
adc
fistpll
inc
jbe
daa
test
push
mov
in
push
xchg
xor
jbe
cld
mov
or
sub
sbb
outsl
dec
addl
mov
pop
cmp
pop
xchg
sti
sarl
ja
mov
mov
cmp
mov
loop
xchg
stos
imul
mov
daa
push
xchg
imul
push
sub
fldcw
imul
lcall
or
pop
lods
cmp
pusha
jo
push
sub
in
int3
out
gs
pop
xchg
lahf
xchg
xchg
insb
loopne
jl
cmp
push
sbb
ja
mov
and
pop
cmovs
sub
fidivrs
idiv
in
ret
pushf
fisttpll
mov
mov
sub
mov
sub
fwait
xchg
imul
xor
adc
and
push
ljmp
ss
sub
dec
cmp
and
lahf
imul
mov
hlt
loopne
and
int
insl
push
mov
and
cmp
sub
mov
in
dec
pushf
and
shlb
push
sbbl
mov
call
lea
xchg
cmp
hlt
jmp
aas
xchg
lahf
lds
xlat
dec
lock
add
push
xor
shlb
out
fs
pop
in
in
sbb
aaa
mov
ret
fstpl
cltd
xlat
jle
cmp
xor
pusha
mov
lods
add
jecxz
sbb
cltd
ret
ja
mov
scas
adc
jnp
push
lock
cwtl
aad
aam
pop
mov
and
test
push
xchg
adc
cmp
lds
add
pop
pop
std
xchg
and
lcall
dec
popf
out
mov
outsb
test
mov
outsl
sbb
stc
xchg
xchg
add
iret
pop
jecxz
mov
mov
lock
test
cli
fwait
push
cmp
pop
push
inc
pop
add
sti
outsl
mov
xlat
push
cmp
fcompl
dec
cmp
xor
pop
sub
ljmp
popa
mov
push
daa
cltd
outsb
add
pusha
loope
adc
xchg
aad
sub
mov
xor
iret
das
push
xchg
stos
or
notb
cmpsb
cmp
iret
or
xor
fistpll
fcompl
cmpsb
mov
xor
or
rdpmc
iret
mul
jmp
addl
and
pop
fsubs
push
fistl
lahf
loope
add
xchg
data16
push
popa
mov
mov
xchg
cmp
insl
hlt
xchg
xchg
inc
clc
sbb
xor
ret
popf
es
sbb
mov
cmp
cmpsl
mov
outsb
dec
sti
cmpsb
shll
jno
ret
push
rcrb
push
sbb
insb
xor
bound
js
pop
jmp
loope
pop
in
int
push
cmp
rcr
arpl
in
inc
ljmp
insb
adc
push
add
mov
or
pop
out
es
pop
mov
movsl
arpl
in
out
dec
cld
enter
test
jo
cmpsb
mov
test
xchg
cli
orb
ljmp
xor
add
push
sub
shrl
cli
push
int3
imul
fisubs
xchg
push
movb
or
push
ficomps
and
inc
rcll
xchg
adc
fwait
ret
pop
push
in
jge
pop
cmp
movsb
imul
xchg
cmpsl
inc
jecxz
iret
cltd
cmc
mov
push
pop
mov
cmc
dec
sarb
add
sbb
mov
jg
imul
int
inc
push
stos
push
mov
jbe
mov
popa
loope
push
loopne
jmp
clc
dec
cmp
sbb
jecxz
jmp
sub
push
or
xlat
cmp
aad
in
popf
push
and
dec
and
aam
mov
dec
mov
jmp
movsl
subb
xor
pusha
lods
fbstp
xlat
jge
pop
cmp
mov
mov
pop
inc
mov
pop
add
repz
jbe
insl
fs
sub
dec
sahf
fcom
lods
and
xor
mov
cmp
fadds
push
ljmp
pop
inc
in
pop
mov
lock
mov
mov
enter
jp
sbb
and
leave
mov
lock
pop
add
mulb
add
lahf
aad
lds
int
movsl
pushf
and
dec
pop
mov
xor
jg
pop
aam
sub
testl
mov
xor
xor
mov
pop
xor
mov
popf
movsb
push
loopne
lea
and
pop
cmp
ficompl
sbb
mov
pusha
xchg
add
repnz
xor
xor
pusha
xorps
mov
lcall
mov
mov
xchg
scas
add
xor
xchg
add
lahf
rcrl
and
sbb
das
loope
fwait
and
leave
cmp
lahf
xor
cmp
gs
ficomps
push
leave
mov
adc
add
push
lret
mov
imul
add
add
inc
and
add
sub
mov
inc
push
mov
test
jo
inc
ret
rcl
mov
fsub
adc
mov
mov
fdivrp
fsubl
pushf
cmp
lock
mov
pusha
data16
hlt
cmpsl
mov
int3
cmp
xorl
sub
movsb
jmp
test
push
rcr
add
inc
xor
mov
adc
movsl
out
and
mov
je
sti
ficomps
bound
gs
loopne
ja
ss
mov
jno
push
fistps
push
out
js
std
cmp
dec
lret
sahf
fcoml
lods
push
out
push
orb
lock
sub
sbb
cmp
mov
lods
sar
flds
push
cmpsb
stos
mov
ss
sbb
or
lret
pop
push
pop
jnp
cld
cwtl
mov
xor
mov
popa
inc
ret
sbb
sbb
test
jo
sub
cmpsl
insl
pop
fwait
push
or
shlb
cmp
sbb
sbb
fxch
inc
jae
inc
daa
jae
adc
insl
movsl
push
inc
mov
scas
jne
andl
hlt
mov
sarl
shr
dec
mov
ja
cld
pushf
int
mov
xlat
shr
inc
in
int3
push
add
jmp
inc
lret
cwtl
in
xor
arpl
xchg
fsts
nop
or
nop
xchg
xchg
cmp
ret
in
inc
inc
pop
and
ret
push
add
push
add
inc
jecxz
cmp
xchg
or
mov
pop
jne
std
mov
sti
add
sub
xchg
inc
test
pop
sbbb
or
mov
jmp
pop
ja
lcall
sbb
adc
push
cld
push
sarb
jo
cmp
call
cltd
mov
fs
add
mov
idiv
cmp
rol
test
out
sub
popf
pandn
cmpsl
ljmp
add
inc
and
lahf
xchg
jo
adc
jg
jecxz
sub
pop
stos
jp
fwait
push
mov
cld
adc
fistpll
jge
test
and
cwtl
jae
adc
xchg
je
cli
cmp
dec
add
insb
mov
inc
mov
add
cltd
xchg
lods
and
mov
cmp
push
iret
sti
dec
add
inc
mov
mov
in
aad
xchg
jecxz
ljmp
and
sub
mov
sub
push
or
nop
lods
xor
ret
push
imulb
ds
sbb
lods
or
inc
mov
mov
mov
jmp
jl
inc
stos
dec
and
sub
mov
pop
sarb
into
inc
ja
fidivl
cmp
mov
je
xor
in
out
faddl
fbld
adc
mov
fwait
mov
lods
xchg
mov
divl
fwait
pop
bound
lcall
test
push
mov
mov
mov
addr16
dec
xchg
jb
scas
and
loopne
test
xchg
cli
repnz
cmp
mov
xchg
cmp
xchg
popf
and
clc
pop
rorb
mulb
shlb
sub
pop
sarb
cmp
mov
push
xchg
push
pop
and
stos
aad
mov
jp
push
in
jno
xor
mov
jno
dec
aam
mov
mov
adc
or
xor
and
addr16
dec
test
aaa
ret
cmp
ja
ss
jecxz
je
cmc
fisubrl
jle
stc
jp
lds
loop
cltd
mov
shlb
adc
add
shlb
push
and
mov
mov
mov
lea
or
jl
testb
push
pop
push
popf
js
push
xor
inc
or
fbstp
sahf
push
push
out
mov
ja
sbbb
sbb
mov
repz
mov
push
jp
icebp
or
sub
mov
ror
adcb
nop
push
xchg
mov
stos
mov
mov
in
mov
int
shrb
xchg
addr16
adc
arpl
fisubl
xor
or
inc
cmp
outsb
movsb
and
movsl
inc
inc
fs
je
xor
es
sbbl
sbb
add
cmp
int
inc
out
mov
or
nop
movsb
adc
push
adc
lds
shlb
sbbb
lods
repnz
jg
jle
mov
xor
or
and
jg
test
ss
inc
dec
insb
rclb
dec
popa
insb
sbb
cmc
adc
int
mov
notb
jl
adc
cmp
dec
sbb
inc
dec
mov
pop
or
cmp
mov
fincstp
cmc
xchg
sti
or
aas
push
pop
dec
imul
lahf
repnz
mov
out
pop
mov
lsl
es
pop
sub
xor
or
int
or
xor
repnz
pushf
mov
mov
aas
stc
mov
mov
or
jno
mov
xlat
ss
adc
ret
adc
pop
hlt
push
testl
mov
jno
mov
inc
xor
cmp
jmp
mov
adc
inc
loope
dec
cmpsl
inc
sub
loopne
fisubs
dec
or
jmp
jbe
stos
andb
out
pop
xor
mov
nop
cltd
cmp
add
mov
pop
add
das
mov
insl
and
pop
les
mov
shll
out
and
std
xchg
cmp
sbb
push
mov
std
mov
daa
cmp
aas
xchg
sbb
and
orb
mov
push
xor
fst
mov
movsb
cwtl
push
xchg
insl
cmp
dec
les
jno
mov
sbb
shlb
ds
sub
mov
sub
popa
shrb
lcall
in
jbe
ljmp
and
inc
imul
jp
xchg
jecxz
repnz
push
or
xchg
inc
sub
pop
or
pop
mov
mov
insl
cmc
mov
lods
push
adcb
lret
testl
dec
bound
lock
push
out
pop
scas
test
xchg
cmpl
imul
pop
daa
mov
mov
xor
enter
mov
loopne
out
gs
fistps
jae
add
sbb
adc
mov
sub
sbb
add
mov
clc
pop
call
pop
dec
outsl
stos
subb
jge
outsb
sti
xchg
push
cmp
cli
call
mov
pop
negl
dec
mov
dec
lret
aas
jg
ds
clc
mov
sbb
fbld
sbb
lahf
adc
das
jl
adc
int3
movsl
push
add
sub
push
inc
scas
pusha
xorl
icebp
sub
fdivrs
dec
push
xor
jge
cmp
mov
pop
ss
movsb
test
sahf
jmp
jb
aas
popa
sub
or
loopne
pop
out
stc
fbstp
fwait
in
fnstcw
insl
rorb
lcall
jl
fwait
or
movsb
jne
sbb
cmp
int3
add
pop
inc
sarl
pop
add
xchg
and
push
pop
imull
add
aas
rclb
repz
xchg
repz
cld
in
imul
adcl
sub
sub
das
popf
jae
outsl
mov
jp
lods
add
cmp
inc
push
sub
xor
jbe
popa
jge
idiv
xchg
mov
pushw
cli
dec
jae
xor
data16
sahf
repz
lcall
xchg
mov
mov
cmp
pop
out
cltd
push
or
push
jecxz
scas
cmp
nopl
movb
out
jno
rorl
inc
iret
test
add
lods
cmc
insl
imul
repz
out
stc
lods
sub
cmp
add
ljmp
push
adc
cmp
fsubrl
insl
add
ja
mov
repnz
or
enter
and
or
push
mov
std
xor
rcrl
insl
sbb
ljmp
dec
ljmp
pop
loopne
mov
mov
cmp
outsl
lock
xchg
mov
xchg
mov
lds
rcr
sbb
jnp
xor
jge
aas
mov
xchg
aaa
pop
pusha
mov
mov
insb
nop
jecxz
lock
jo
jg
inc
sbb
fisubrs
and
mov
js
sbb
divl
daa
dec
dec
jp
mov
dec
mov
mov
divl
leave
pop
lcall
xchg
das
mov
adc
roll
xchg
push
ljmp
ret
fstsw
movsb
pop
push
hlt
push
test
pusha
jmp
jmp
sub
std
pop
adc
hlt
insb
shll
popa
dec
lea
repz
adc
fsub
mov
or
jmp
dec
movsl
mov
mov
inc
lcall
cmp
jmp
fs
sub
jo
dec
aad
push
mov
push
or
dec
scas
jp
neg
add
imull
adc
and
jmp
sbb
hlt
xor
movsl
push
iret
sbb
popf
inc
sbb
mov
fisttps
mov
xchg
and
stos
es
mov
jmp
out
test
cmpsb
shlb
or
and
fistpll
push
xorb
xor
xchg
data16
repnz
lods
lea
ja
sub
int3
fisttps
dec
mov
gs
shll
or
sbb
add
je
andb
dec
add
in
and
jl
out
push
mov
push
xorl
mov
and
cli
js
dec
xor
push
jnp
jmp
xchg
out
js
and
mov
lods
and
push
mov
jo
dec
adc
mov
pop
sti
outsb
mov
cld
cmp
jmp
jo
pusha
dec
jmp
dec
pop
add
scas
dec
add
jbe
pop
mov
inc
call
aaa
stc
pop
jno
cmpsb
sti
pop
and
inc
jecxz
pop
lds
testl
stos
pusha
adc
sub
or
sbb
sbb
icebp
out
xchg
sub
or
xchg
mov
test
cmpsl
jne
xlat
xchg
outsl
add
push
cmpsb
out
mov
sbb
dec
push
cmpsl
shlb
cltd
rcll
xchg
sbb
popa
cmp
data16
std
push
or
popf
insl
mov
cltd
jg
nop
and
test
dec
or
mov
mov
push
inc
or
cmpsl
hlt
push
cs
push
dec
dec
push
dec
mov
xchg
ret
cltd
pop
jne
jl
cmp
jo
out
test
ljmp
adc
int
ret
call
sub
fcoms
xchg
inc
cmpsb
pop
test
mov
cmpsb
cmpsb
pop
fmul
mov
ja
xor
mov
addr16
push
movl
jge
leave
pop
outsl
inc
sub
sahf
xor
fwait
fwait
add
rclb
adc
push
pusha
mov
jecxz
mov
xchg
ja
lock
dec
ljmp
mov
push
jmp
and
enter
mov
sub
lea
pushf
inc
int
cli
dec
rol
jl
faddl
ljmp
in
lea
icebp
jno
aas
insb
push
xchg
imul
mov
fdiv
and
push
mov
jns
add
in
push
and
mov
dec
cmp
jp
push
inc
push
mov
addr16
inc
mov
inc
mov
inc
push
lods
mov
test
popf
push
stos
xor
sbb
adc
cmpsb
std
pop
lahf
mov
and
out
cmc
push
gs
sub
lock
mov
sub
dec
shr
das
mov
iret
sub
out
pop
pusha
roll
mov
adc
pop
imul
aam
and
fmul
or
sbb
fistl
add
add
jl
push
cmc
sbb
jnp
pop
or
ret
lods
push
ret
out
daa
leave
lock
mov
fsubl
and
loop
add
xlat
pusha
xor
leave
pushf
xor
sub
adc
pop
add
aaa
into
push
lods
aas
aad
scas
mov
std
fiaddl
cli
ljmp
mov
stos
lret
add
out
lods
or
dec
mov
ficompl
pop
xchg
jg
daa
rcll
icebp
inc
stc
test
mov
pop
dec
imul
hlt
push
mov
bound
add
sub
movsl
xchg
push
xchg
lahf
int
push
stos
negb
push
sbbl
mov
scas
lcall
es
push
or
mov
xchg
pop
mov
out
xchg
jg
and
push
ficoml
mov
sub
cwtl
rorl
adc
push
fcomp
cmp
mov
cmp
aas
jno
cli
push
pushf
fwait
pop
lods
mov
jp
push
jcxz
cld
mov
cmp
sbb
push
fucomp
sbb
loop
ret
cmp
jno
rep
lcall
movsl
sbb
outsb
and
jg
push
shl
outsl
jno
pop
and
mov
mov
sub
jnp
fbstp
or
dec
inc
pop
jb
gs
fistps
int3
aad
shlb
ficoml
in
sbb
sahf
push
ret
out
inc
loope
movsl
inc
dec
jmp
lahf
push
scas
mov
adc
jno
dec
push
push
negb
add
aad
mov
ficomps
ljmp
stos
pusha
inc
xor
inc
mov
push
je
clc
inc
push
xchg
cmpsl
pusha
mov
xchg
jmp
xchg
mov
mov
fmuls
pop
sti
mov
daa
scas
xor
andb
jle
out
repz
hlt
out
scas
test
je
pop
mov
or
fadd
fldt
pop
mov
mov
sub
add
jle
loope
cmc
pushf
xlat
mov
adc
cmpsl
and
adc
insl
and
or
aaa
dec
xchg
lret
lahf
out
push
xchg
pop
call
fbld
sbb
imul
sub
cwtl
mov
or
mov
xor
push
pop
lds
mov
movsl
add
and
pop
push
sub
hlt
and
test
lds
adc
lahf
mov
mov
clc
repz
mov
xchg
mov
jmp
sub
sahf
fldln2
xchg
push
iret
idiv
mov
test
dec
arpl
pop
dec
fiadds
leave
iret
and
ror
xor
or
rclb
or
mov
xor
sub
mov
jno
stos
popf
call
jb
outsb
mov
inc
sbb
sub
outsl
or
dec
call
lahf
fmuls
mov
cwtl
iret
push
pop
pop
movaps
outsl
or
dec
call
lahf
fmuls
mov
cwtl
iret
push
pop
pop
or
jg
add
pop
sbb
mov
fadds
mov
lcall
sti
pop
dec
sub
outsl
mov
cwtl
pop
inc
pop
add
filds
addr16
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jmp
pop
fxch
mov
pop
xchg
or
jnp
dec
fcomps
sub
sbb
leave
pop
cmp
jl
clc
jns
dec
fcomps
sub
cmp
jmp
lock
add
adc
negb
mov
xchg
sub
dec
rorl
mov
sub
out
mov
mov
sbb
movsb
inc
mov
loope
pop
add
add
test
pop
jno
aad
hlt
mov
jle
cmp
cltd
dec
add
mov
imul
mov
insb
insl
pop
push
faddl
cwtl
mov
mov
cwtl
jmp
dec
fdivp
sarl
inc
shl
cltd
negl
in
cmpsb
xor
mov
xchg
fstpt
or
jne
adc
push
pop
ror
jns
mov
ja
mov
es
jg
stos
sub
clc
cmp
mov
mov
sbb
js
cwtl
leave
inc
test
ret
imul
subb
cmp
cwtl
sbb
mov
lcall
dec
inc
out
sbb
lods
cmp
fsubrl
jmp
stos
cmp
sbb
jbe
sbb
pop
scas
fsubrp
pop
in
stc
jae
mov
stc
das
in
pop
mov
or
jns
dec
fcomps
sub
sbb
leave
pop
cmp
or
jns
dec
fcomps
sub
sbb
push
sti
cmpsb
fs
dec
or
inc
push
inc
fidivrl
stos
xorb
bound
fimull
mov
sbb
arpl
ljmp
mov
mov
cmpsl
pop
repz
addr16
sahf
cltd
mov
inc
pop
aas
fisttpll
mov
scas
push
add
jbe
lods
fildl
nop
loop
ret
push
call
sub
and
nop
and
jmp
cmp
mov
jge
push
and
dec
xlat
test
aaa
sbb
jp
loopne
in
push
dec
mov
cmpsb
mov
jle
pop
sbb
nop
scas
inc
and
and
dec
ljmp
jle
or
sarb
fadds
dec
jmp
push
dec
push
adc
fucomp
adc
xor
pushf
mov
jle
mov
or
mov
test
pop
icebp
inc
lods
lods
jecxz
movsb
xchg
jg
js
aas
mov
sub
dec
fdivrs
in
and
icebp
or
mov
cli
mov
loopne
int
push
and
rolb
test
push
xchg
inc
mov
push
dec
mov
xchg
inc
jns
dec
push
and
pop
pop
leave
push
fnsave
pop
rol
jmp
inc
inc
add
pop
cmp
mov
dec
jne
insb
ljmp
adc
jmp
sbb
faddl
bound
xchg
jb
popa
push
sbb
xor
andb
xor
xor
pop
aam
scas
ljmp
scas
fidivrl
push
imul
icebp
pop
sbb
cld
outsl
adcb
and
shll
and
jno
popa
mov
push
stos
movsl
xchg
call
cmpl
scas
mov
dec
inc
nop
outsl
sub
aad
xchg
xchg
fadd
das
jmp
lods
push
out
cmp
test
adc
inc
xor
lods
outsl
xorb
jns
je
das
and
sbb
lds
pusha
add
fistps
test
adc
and
sbb
sbb
imul
int
int
outsb
mov
out
mov
cld
or
inc
stos
testl
push
pop
add
lds
std
ds
frstor
and
popf
pop
inc
jp
fdivl
and
push
push
movsl
sbb
push
lds
int
loope
jg
in
fnsave
mov
rcll
and
xchg
mov
outsb
ret
sub
in
lcall
insl
repz
adc
adc
pop
pop
or
fwait
push
sti
xor
imul
loope
test
leave
mov
or
and
sbb
negl
pop
and
add
mov
fildll
lret
add
xchg
les
inc
gs
fwait
aas
mov
out
inc
dec
gs
inc
xor
pop
or
ror
sub
cmp
jno
cmpsl
enter
sbb
scas
jl
mov
pop
std
inc
jge
mov
jno
mov
lahf
popf
rorl
mov
stc
outsb
mov
sub
out
cmp
rcrl
or
and
pop
mov
cmp
adc
loop
push
or
mov
cld
pushf
js
adc
insb
ljmp
cs
test
mov
push
data16
mov
push
and
cmp
push
push
lds
mov
sub
sub
mov
xchg
jnp
pushf
add
cmpsb
add
xchg
cmp
sti
pop
pop
cmpsb
sbb
inc
jmp
jae
mov
addr16
or
and
pop
jbe
add
repz
mov
sub
movsl
rorb
dec
repnz
or
ds
jge
or
fwait
push
sub
pushf
rolb
xchg
insl
xor
jno
test
cs
or
sub
mov
push
sub
lahf
fistpl
aas
or
add
cli
and
mov
inc
jg
lods
icebp
sub
insl
jne
pop
cmp
loopne
mov
or
jmp
testl
lahf
gs
add
sub
lea
dec
lods
repnz
adc
inc
inc
jae
sbb
cli
pop
or
cmpsw
push
mov
sbb
sti
das
push
cltd
jmp
andb
xchg
inc
or
jmp
dec
or
sbb
pusha
xor
pop
add
dec
xchg
sub
mov
jmp
data16
jae
in
imul
add
cmp
jge
cmp
pop
dec
fwait
jl
cmpsl
ss
int
inc
mov
imul
lea
and
push
jbe
mov
add
scas
jb
out
cld
movsl
and
mov
fcoml
test
push
adc
xchg
add
loope
sub
pop
push
cltd
mov
rol
into
sbb
inc
xor
xor
pop
mov
sub
aam
movsb
out
test
add
movsb
or
xlat
test
aas
cmp
mov
pushf
cmpsl
and
and
jl
mov
test
cld
js
mov
je
add
xchg
inc
xchg
sub
imul
mov
cld
sbb
inc
test
dec
popf
mov
daa
cmp
pop
mov
xchg
data16
out
test
lock
mov
daa
push
mov
outsl
jg
loopne
adc
jmp
sub
cltd
pop
int3
mov
push
add
es
sbb
xor
inc
dec
xor
or
loopne
add
dec
aaa
fisubrl
lea
or
stc
fstp
packsswb
add
rorb
lods
scas
test
int3
into
dec
in
sbb
sahf
imul
mov
add
cmpsl
and
xchg
pop
inc
ret
sbb
dec
imul
push
and
adc
add
fyl2xp1
push
lret
movsb
mov
xor
dec
cmc
rcrb
test
push
pop
hlt
adc
and
push
mov
lock
adc
push
mov
call
in
dec
cwtl
push
jge
push
sbb
jmp
arpl
mov
ret
bound
sbb
adc
xor
jbe
imul
xlat
dec
sub
movsb
pop
adc
cmp
mov
push
fs
pop
xchg
icebp
js
sarl
test
xchg
int3
ror
movsb
mov
xor
xchg
pop
mov
inc
icebp
or
testb
jb
jno
xor
sbb
sti
loop
shl
aam
jns
lcall
outsl
push
sub
sub
inc
aam
inc
mov
cwtl
jg
mov
push
sbb
or
cmp
add
mov
out
xchg
lret
roll
movzbl
in
xor
mov
incb
lea
cmp
and
lcall
loope
test
loopne
or
out
mov
jmp
adc
daa
mov
jns
push
sbb
xlat
ret
and
out
sub
pop
ja
push
push
or
adc
xchg
adc
es
jne
outsb
mov
movsl
push
fisubrs
dec
out
add
lahf
adc
push
popf
test
fs
fisubs
mov
mov
rolb
and
cmp
xchg
pop
cmc
mov
les
lahf
loope
loopne
push
add
in
jo
pop
mov
mov
mov
out
sbb
sbb
jo
mov
add
inc
in
imul
xor
pop
insl
xor
xchg
xchg
inc
mov
add
sti
mov
xor
and
pop
aaa
or
push
xchg
popf
xor
cmpsl
mov
cmc
aad
pop
fcmove
sbb
aam
push
cmc
int3
scas
stos
dec
xor
fildl
pop
mov
xchg
inc
pop
cli
negl
xchg
cli
dec
adc
push
xchg
loop
fcomi
jle
add
imul
addr16
mov
mov
data16
cli
ljmp
sbb
in
push
mov
or
int
imul
and
into
jge
rcrl
xor
cmp
fwait
mov
out
sti
and
lods
jne
or
lcall
xchg
outsb
cmpsl
xor
loop
mov
sbb
cmc
mov
cmp
fcmovnu
lds
push
push
leave
sti
pop
dec
in
adc
inc
sub
push
xor
test
or
cmp
jbe
xor
sbb
in
mov
push
add
insl
jbe
add
adc
test
idivl
mov
out
inc
jns
xchg
gs
inc
pushf
aad
mov
mov
or
bound
mov
inc
and
xor
adc
lods
mov
leave
xor
popf
aas
mov
inc
sbb
lock
bound
adc
mov
sub
inc
hlt
incl
push
clc
orb
jmp
in
loop
dec
dec
mov
mov
adc
testb
lret
fisubrl
push
adc
xor
repz
int3
or
insl
mov
sbb
fiadds
idiv
cld
jnp
sti
stos
sbb
mov
idiv
rorb
andb
sbb
cmpsb
jg
aam
pushf
push
mov
insb
and
mov
jns
adc
loope
pop
into
sub
push
inc
in
mov
jae
movsb
sub
inc
jnp
mov
loop
add
jg
cmp
jp
push
jbe
cbtw
cmpsl
es
repz
repnz
dec
je
fwait
inc
sbb
inc
xchg
push
mov
mov
bound
lock
xor
sub
bound
add
adcb
sub
int3
mov
jmp
cmc
fimull
push
mov
dec
insl
outsb
adc
or
dec
cmp
add
mov
in
ss
mov
icebp
push
cmpb
sbbl
cmpsl
xchg
stc
mov
xor
xor
stos
inc
adc
pop
mov
jno
fbstp
and
rclb
aas
arpl
push
mov
test
inc
pop
ja
pop
out
aaa
or
or
scas
pop
dec
cmp
cmp
jo
adc
pop
cltd
sub
cmp
adc
enter
daa
inc
pop
add
stc
push
adc
in
mov
test
fisttpl
push
push
sbb
mov
scas
lcall
sub
pusha
ss
pop
pop
push
jno
sbb
jno
call
pop
mov
jae
cltd
fdivrl
js
mov
mov
int
je
mov
fildl
sbb
push
loopne
add
outsl
sub
adc
inc
pop
imul
rcll
jecxz
mov
stc
dec
push
movd
leave
mov
xchg
lret
push
inc
xchg
sub
ret
inc
ret
stc
lcall
push
cmp
jge
repz
mov
cltd
jb
out
lods
sub
dec
or
pop
add
xchg
xor
icebp
push
sbb
push
jge
stos
pop
in
pop
out
xorl
dec
shlb
inc
cmp
loopne
push
pop
jecxz
scas
sbb
lods
hlt
popf
loope
add
dec
in
popf
addr16
mov
pusha
js
jle
clc
daa
ljmp
sbb
cld
or
add
cmpsb
insl
clc
jg
arpl
in
fwait
scas
sbb
outsb
dec
dec
jp
stos
out
sub
sarl
int
and
push
pop
movsb
mov
mov
inc
mov
xor
pusha
mov
xor
mov
hlt
cmp
mov
jl
std
xor
pop
gs
insb
rcrb
andb
bound
je
pop
loope
inc
pop
insl
push
mov
inc
loope
ret
lock
mov
inc
sbb
fbld
pop
jnp
xchg
or
inc
jnp
lds
bound
stc
pop
in
cs
fwait
adc
mov
test
xor
nop
mov
pop
mov
inc
fcoms
mov
repz
pop
out
in
and
push
add
cmpl
in
popf
or
not
lods
mov
orb
mov
js
clc
sub
or
stos
sbb
daa
jno
pop
lock
add
fnstcw
mov
xchg
lods
rclb
pusha
xchg
fidivrs
mov
xchg
mov
jno
ret
jbe
inc
ds
xchg
lret
and
dec
arpl
dec
jns
xor
loop
ret
xchg
lea
inc
test
mov
fsubl
or
and
insl
pop
lret
pop
dec
pop
test
ficompl
shll
push
stos
data16
jb
mov
testb
es
pusha
push
jge
adc
jo
cmp
push
lret
daa
cs
nop
jne
pop
jo
adc
inc
inc
or
xor
sbb
cltd
loopne
pushf
not
push
sub
rorl
pop
movsl
iret
jecxz
mov
nop
inc
mov
and
mov
mov
cs
jecxz
aad
adc
loopne
sbb
pusha
ja
push
push
cltd
add
or
les
pop
add
es
xchg
push
jp
test
dec
cmpsl
push
mov
adc
cmpsl
push
in
push
jl
out
cmc
leave
repz
aad
lret
mov
cli
jbe
sbb
insl
jbe
dec
jo
aas
xchg
pop
inc
mov
or
test
add
jbe
xchg
jle
insb
scas
inc
jge
and
jg
sti
arpl
into
mov
push
shr
add
stc
leave
sub
xor
lods
int
pop
nop
fdivs
dec
xchg
and
repnz
and
push
and
insb
shll
xlat
mov
je
rolb
pop
cltd
sub
mov
cltd
data16
icebp
cmp
incl
mov
sub
and
int3
sbb
pop
xchg
and
sbb
add
in
inc
fmull
das
mov
pusha
push
pop
ljmp
call
cmp
sub
test
jle
sub
lret
cltd
push
mov
inc
or
inc
jno
das
and
mov
in
cld
sbb
inc
push
dec
out
mov
mov
or
cmp
imul
mov
xor
sub
in
push
test
xchg
jb
jmp
mov
sub
sub
loope
dec
or
mov
jle
sbb
and
sbb
jno
lret
scas
rclb
adc
mov
pop
pop
clc
rolb
das
xor
mov
sub
cli
lret
pusha
es
mov
fdivrl
std
movsb
les
cmp
jne
lcall
jb
and
fnstsw
out
mov
mov
aaa
sahf
jecxz
call
inc
xchg
mov
xchg
jmp
dec
cmp
jle
or
popf
inc
jp
movsb
sbb
sbb
pop
rcrb
andl
jnp
add
xor
test
outsb
mov
jne
sbb
nop
add
xchg
pop
or
cli
outsl
jb
pop
mov
or
shlb
adc
mov
push
sub
push
stos
lahf
aaa
out
sbb
add
pop
lds
xchg
orb
jns
push
and
cld
or
mov
loopne
jo
xchg
in
insl
mov
or
or
leave
inc
xor
push
stos
or
jmp
rorl
inc
in
xor
mul
inc
in
sbb
hlt
sahf
dec
test
pop
rolb
arpl
or
fcomi
js
cmp
sub
cmpsl
sar
lret
lret
add
clc
pop
movb
mov
stc
add
in
mov
lcall
aam
inc
push
dec
movsb
inc
movsb
gs
rorb
inc
test
xorl
xorl
shrb
lods
sti
std
hlt
clc
pop
test
or
sbb
loopne
mov
mov
sub
jp
xor
and
pop
fs
pop
mov
sbb
fisubrl
push
mov
pop
ret
pop
cmp
xchg
sti
cmp
sbb
cld
cli
dec
lods
jge
je
js
rcrb
xchg
push
add
lds
imul
pop
dec
mov
cli
inc
jecxz
inc
sahf
out
stc
andl
sbb
pop
mov
leave
add
mov
push
enter
jle
pop
iret
outsl
inc
notl
in
or
mov
cs
sarb
repz
mov
xor
ja
pop
or
insl
add
push
loopne
mov
lahf
test
inc
icebp
inc
outsl
xor
in
into
push
mov
cmpsb
xor
and
mov
jp
push
xor
loopne
rcr
push
mov
in
pusha
jb
add
daa
fbld
and
jbe
mov
call
rcr
and
sbb
test
jb
xor
fdivrl
dec
hlt
and
lds
xchg
repz
xchg
je
and
sar
cwtl
sbb
movsl
test
andb
cmp
jb
lret
and
mov
add
jb
lods
pushf
push
scas
xor
xlat
mov
push
mov
into
mov
jnp
les
mov
gs
or
lds
add
mov
loope
cmp
cmp
sbb
pop
test
dec
and
leave
jae
xchg
dec
jp
cmpsb
xor
cli
lea
mov
nop
or
inc
add
out
std
pop
mov
test
sti
in
xchg
inc
fcompl
aam
cmp
inc
cmp
decl
add
popf
negb
imul
dec
sub
mov
ljmp
stos
out
and
gs
insb
jmp
add
scas
mov
push
mov
aaa
or
lds
gs
push
mov
jecxz
fprem
mov
add
fsubrl
and
in
popa
adc
jmp
jmp
mov
in
ja
in
leave
push
pop
cmp
cmc
or
punpckhdq
or
push
sub
or
imul
cmp
cmp
push
adcl
aad
cmp
xor
leave
ficoms
jne
xor
shlb
stc
ret
xor
sbbl
xor
jno
push
stos
pushl
faddl
int3
fldl
jp
sub
sbb
das
lds
mov
call
inc
std
js
ror
fsubrs
cs
push
jo
aam
xor
pop
xor
jb
out
scas
jge
xchg
into
arpl
stos
xor
jo
ljmp
add
lods
movsb
jge
add
pop
icebp
sub
jae
cwtl
mov
out
fbld
push
mov
mov
pop
push
sbb
adc
mov
mov
xor
or
pusha
fdivl
and
and
dec
or
inc
push
cmp
ds
sbb
lcall
adc
fcomps
loop
mov
or
xor
mov
iret
add
int
inc
sub
cs
movl
push
scas
mov
jbe
xchg
mov
clc
mov
inc
sbb
mov
or
cmpsl
xchg
aam
add
mov
sbb
inc
cltd
xchg
and
jle
loopne
or
out
pop
sbb
and
popf
je
cwtl
les
fiadds
jg
in
xor
xor
mov
inc
push
out
jp
lcall
out
or
cmp
lods
mov
push
scas
jbe
rclb
and
xchg
push
test
sub
inc
divl
ljmp
fcomip
adc
pop
ficoms
adc
aam
insl
xor
cmpb
dec
enter
pop
js
and
dec
imul
adc
cwtl
cmc
dec
and
cmc
fisubl
aam
push
adc
comiss
xchg
roll
inc
add
aad
inc
mov
sbb
or
xchg
and
adc
insb
jbe
push
lods
leave
adc
dec
dec
fwait
jno
and
inc
jbe
gs
push
cmc
int
push
mov
stc
aaa
mov
xchg
xchg
outsb
push
mov
je
les
xchg
lret
push
jae
out
xor
xor
xor
pop
jno
xor
jle
loop
divps
fisttpll
mov
cli
rclb
adc
divl
mov
mov
sbb
scas
jmp
inc
addr16
sub
orl
sub
popf
push
movl
pop
dec
fdivrp
inc
into
xlat
ja
xchg
inc
cld
or
dec
popa
inc
xchg
push
js
adc
mov
decl
xor
aaa
add
inc
ljmpw
inc
in
xchg
sbb
push
sbbb
inc
ljmp
sbb
jg
jb
data16
pop
push
jo
and
iret
push
out
or
gs
in
shr
leave
pop
fcmovnu
adc
mov
pop
dec
push
cmp
push
stos
outsl
add
push
test
rorl
jne
jae
jae
gs
pop
repz
sub
sbbl
cmp
jmp
inc
push
mov
fcomps
inc
adc
adc
in
lods
mov
mov
cmc
loope
test
pushf
jp
pop
aam
out
icebp
and
xchg
and
divb
dec
test
sbb
call
sub
sbb
leave
pop
cmp
or
jns
dec
fcomps
sub
sbb
leave
and
dec
test
sbb
call
sub
sbb
leave
pop
cmp
or
fcomps
pop
xor
ja
sbb
jns
imul
pop
adc
fldcw
jmp
inc
test
sbb
js
imul
cmp
sbb
xchg
leave
mov
stos
mov
mov
add
jns
imul
cmp
jb
cwtl
leave
stos
cwtl
rorl
mov
xchg
push
dec
js
pop
cmp
nop
sub
pop
inc
lret
mov
sbb
xchg
or
les
sbb
push
mov
lods
addr16
call
jbe
mov
push
adc
test
jbe
or
roll
xor
scas
rclb
push
daa
jge
jno
clc
in
lods
sahf
inc
dec
negl
test
pop
and
in
leave
js
jbe
inc
add
test
popf
mov
sub
jl
icebp
cwtl
add
mov
mov
adc
fdivrs
push
insl
mov
shr
stc
rol
in
sarl
es
loop
inc
fs
in
lock
mov
cmovns
jns
imul
cmp
jno
cwtl
leave
nop
stc
mov
mov
mov
sbb
dec
pop
pop
insb
sub
dec
or
xchg
mov
xchg
fldl
dec
and
pop
insl
push
cmp
pop
mov
movsb
in
sbb
cli
enter
pushf
das
sbb
sbb
pop
imul
cmp
push
stc
mov
mov
mov
sbb
jns
imul
cmp
push
stc
mov
mov
mov
sbb
mov
add
dec
mov
ja
add
lcall
mov
sbb
xchg
mov
nop
inc
repz
push
dec
cmc
cli
lretw
mov
sarl
push
push
mov
fisttpl
mov
fucom
cmp
push
cld
dec
ljmp
not
cmp
jle
xor
emms
cmp
xor
movsl
icebp
aas
ds
bound
imul
adc
cvtps2pd
leave
mov
and
loopne
mov
fwait
out
cmp
inc
shl
mov
out
jbe
mov
dec
sbb
mov
lcall
or
mov
mov
popf
jo
sbb
push
inc
repnz
pop
pop
push
cwtl
out
dec
inc
or
subl
insb
xor
and
ds
enter
orb
add
out
popf
adc
int3
cmp
sub
int
xchg
mov
and
xchg
test
jecxz
arpl
sbb
or
fmuls
cmp
push
rcl
jecxz
sbb
xor
sub
jp
ret
push
in
cltd
out
mov
insb
pop
mov
jl
test
pop
sub
jno
xor
mov
or
adc
dec
test
add
pop
fcmovu
arpl
mov
jmp
ja
ljmp
inc
pop
cmp
xchg
notb
stos
xchg
mov
cmp
mov
in
jle
jle
xchg
stc
mov
jl
iret
mov
mov
xor
lret
mov
sub
repnz
fbld
out
icebp
lea
out
xor
es
jp
cltd
iret
sub
jle
inc
arpl
xchg
or
sub
push
cltd
pusha
jle
shlb
dec
jp
and
std
or
and
add
inc
cmp
cmp
sub
mov
sbb
cmp
ja
jb
lret
insb
mov
xlat
sbb
lret
mov
xchg
iret
sti
and
lcall
cmpsb
ds
iret
cmp
push
sub
inc
mov
xchg
fildll
mov
fmul
jns
ss
lods
add
xchg
dec
clc
subl
sarb
xor
and
into
test
sti
popa
out
js
and
enter
stc
cld
mov
inc
and
aaa
outsl
cmp
lock
sbb
adcl
cmp
fnsave
movsb
in
jb
xchg
mov
xchg
fs
xchg
mov
mov
add
adc
lret
mov
into
and
mov
add
scas
pop
rorb
clc
aas
cld
ljmp
sti
sbb
sbb
out
lds
pop
and
fists
insb
pop
cmp
xor
xchg
in
mov
push
and
mov
test
jp
sub
rcrl
sub
cltd
std
hlt
mov
notl
sbb
cmp
jae
push
mov
imul
jge
mov
push
xor
in
sbb
lahf
cmp
adcb
mov
xchg
ss
mov
or
cwtl
popf
int
lds
add
lret
jle
iret
jp
mov
orb
xor
mov
inc
fcoms
adc
jb
xchg
sub
lods
inc
sub
push
lods
push
gs
dec
cmp
cmp
jmp
push
popf
sbb
mov
pop
jnp
mov
xchg
add
dec
imul
outsb
loopne
mov
or
jne
mov
in
dec
lods
lcall
cmp
jae
mov
sbb
sub
in
sub
dec
inc
mov
mov
xchg
mov
sar
dec
mov
sbbl
jle
inc
lds
push
rclb
dec
mov
aas
and
stos
in
orl
mov
cld
pop
pop
outsb
jb
add
movsb
lea
cmp
mov
mov
imul
mov
pop
stos
ret
cmpsl
in
xor
movsl
mov
and
xchg
stos
pop
dec
mov
push
xor
inc
outsb
sbb
push
sbb
pop
jge
das
dec
pop
orl
jmp
add
jnp
ds
mov
loope
mov
lds
lcall
jle
orb
pop
shrl
push
jnp
mov
daa
aad
cli
fs
lret
pop
jle
mov
add
scas
mov
je
pop
mov
sub
lahf
mov
pop
mov
or
sbb
jb
rcrb
in
movsl
xor
mov
sbb
xchg
push
dec
cmpsb
mov
inc
fimull
out
mov
sbb
ja
adc
testl
rol
leave
scas
cmc
adc
scas
in
std
rcl
jmp
test
xor
lds
xchg
and
sbb
bound
jo
testb
jo
pop
stos
fucomp
int
sar
jnp
rcll
sti
out
and
stos
xlat
mov
gs
arpl
inc
mov
xchg
xchg
lcall
je
mov
xor
or
and
loopne
pushf
gs
sbb
ficompl
xor
ja
fbld
xlat
xchg
rorl
fsubr
push
imul
data16
rcrl
push
shll
add
mov
mov
scas
jmp
xlat
test
jbe
jne
rcl
rorl
mov
mov
scas
negl
lds
pusha
mov
or
and
xchg
mov
roll
xchg
xchg
mov
mov
sub
xchg
jo
cltd
mov
hlt
js
and
repz
and
filds
cli
xchg
pusha
movsl
push
aas
mov
and
cmpsl
jge
lods
es
mov
cmp
mov
push
imul
iret
or
pop
push
sbb
push
sbb
pop
into
mov
fs
js
fbld
jnp
push
and
jecxz
arpl
cmp
sbb
sub
cmpl
sbb
jnp
dec
add
sub
call
sub
xchg
xchg
jp
push
clc
xor
adcb
mov
aad
cmpsb
lods
flds
push
cmp
or
outsl
ljmp
sub
in
push
mov
fcmovnu
dec
icebp
das
push
cmpsb
sub
xchg
push
aad
xor
mov
das
sbb
fs
aas
sbb
push
bound
and
pop
jbe
xor
mov
fisttps
int
xchg
dec
push
xlat
or
sahf
das
push
push
aaa
mov
inc
add
cs
inc
or
je
test
mov
add
and
mov
or
xchg
les
xchg
sbb
pop
imul
cmpsb
mov
fistpl
leave
mov
mov
in
fs
sbb
xchg
sbb
js
ds
lcall
lds
addr16
jle
popf
and
sub
cmp
movsl
pop
stos
cs
fstl
mov
mul
lods
lock
scas
pop
loop
fstpt
in
dec
test
lds
cld
mov
out
outsb
and
sub
out
sbb
xor
inc
sbb
pop
mov
inc
push
fiadds
mov
out
loopw
fisttps
sbb
cwtl
int
enter
push
jmp
stc
cmp
push
sub
inc
test
xchg
sbb
nop
in
mov
xor
cld
lcall
inc
jno
push
push
jb
add
cltd
stos
test
popa
cmp
sarb
and
in
in
mov
in
add
push
nop
in
xchg
push
stos
repz
fstps
inc
jo
in
xor
flds
jp
sbb
jge
jp
faddl
jmp
xchg
js
inc
sub
mov
adc
dec
adc
adc
pushf
hlt
push
stos
mov
mov
pop
sbb
or
std
jle
cmp
pop
xchg
hlt
xchg
add
jg
cmp
mov
jbe
xor
pop
sbb
sbb
sub
testb
cmpsb
inc
cmp
repnz
shll
scas
out
push
pop
mov
movsl
inc
xchg
pop
cs
xorb
lods
sub
jl
sub
into
mov
repz
fidivl
adcb
inc
dec
push
xor
fldt
push
push
into
dec
das
lahf
loope
lods
dec
adc
cmp
add
loopne
mov
pop
dec
dec
daa
pop
sub
adc
push
sub
fs
pop
push
sbb
mov
xchg
jp
dec
push
push
jl
out
fwait
lcall
sahf
xor
cmpsb
cld
xchg
cli
push
enter
adc
ret
inc
xor
nop
es
mov
jbe
lods
ja
dec
idivl
sub
add
sub
cmp
mov
pop
cmp
push
xchg
mov
into
cltd
sahf
and
sbb
push
lret
pop
sar
ret
and
push
rcll
add
push
jecxz
xchg
adc
xchg
aas
sub
sbb
jb
imul
jge
insb
xor
inc
aas
or
sti
shrl
fwait
push
xlat
add
fiaddl
xor
mov
lret
lods
mov
std
push
or
aaa
in
out
xchg
mov
daa
decb
mov
xchg
fwait
sub
jne
sarb
imul
push
test
and
fdiv
cmpl
dec
fcmovnu
scas
sub
sub
inc
test
mov
into
adc
xor
jne
dec
pop
pop
stc
lret
push
repnz
shlb
popa
out
mov
sbb
loopne
push
int
mov
iret
adc
hlt
and
rolb
out
dec
or
xor
jmp
aam
push
push
clc
aam
sub
pushf
add
mov
fsubrp
ret
imul
xor
xlat
lods
jb
mov
mov
movsl
sbb
fldcw
stos
lock
inc
mov
scas
xor
push
push
and
jl
aas
stc
adc
add
and
add
mov
mov
test
push
sub
movsl
aam
cmpsb
sbb
xchg
repz
xor
loopew
psubw
jmp
inc
and
add
test
sbbb
jne
stos
pop
sti
daa
or
jbe
push
aaa
lods
mov
arpl
mov
cmpsl
pmaxub
pop
pop
fwait
lds
mov
pop
inc
mov
fcoml
lods
popa
dec
outsb
dec
sbb
cltd
add
sbb
icebp
out
aam
inc
or
ret
xchg
inc
mov
mov
inc
mov
int
adc
leave
in
add
pop
into
outsb
aaa
sbb
out
mov
push
fadds
push
or
dec
and
jge
aaa
les
cwtl
filds
adc
in
scas
inc
outsl
inc
shlb
iret
ret
insl
out
pop
in
pop
push
mov
mov
addr16
aam
sti
int3
mov
aam
aas
dec
repz
or
gs
lock
mov
push
mov
adc
mov
movl
jge
mov
jno
dec
sub
outsl
jle
pop
sub
pop
mov
dec
jbe
js
fisttpl
mov
add
rcll
ret
in
int
scas
js
loopne
inc
push
push
test
adcl
adc
adc
orb
addl
dec
jg
jecxz
rolb
jbe
xchg
adc
or
test
adc
cmp
lea
outsb
mov
inc
jbe
out
cltd
adc
mov
fdiv
cmpsl
in
and
sub
push
push
enter
mov
sbb
add
cmp
test
adc
xor
mov
and
lods
mov
repnz
not
mov
insl
mov
outsb
imul
test
pusha
xor
xchg
in
insl
push
and
pop
je
stos
fldt
ljmp
mov
or
mov
xor
ret
ds
shl
lcall
out
cld
jle
fildl
movsl
dec
jb
jno
mov
scas
shr
jl
in
xchg
popf
dec
repz
and
mov
pop
jmp
push
in
leave
pop
enter
fnstcw
es
inc
sub
xchg
sbb
jmp
bound
xchg
jns
loop
lret
movsl
dec
sbb
in
test
imul
and
xor
mov
fcmovbe
out
inc
mov
lods
fldl
xor
xchg
stos
dec
sub
enter
cmc
clc
add
xchg
mov
xchg
mov
insl
lahf
mov
fdivrs
popf
out
lods
sbb
mov
aad
adc
insl
addb
or
inc
xchg
cs
mov
sahf
adc
add
cld
and
test
push
sti
aam
mov
int3
imul
xchg
popl
or
dec
insl
nop
jmp
out
into
lahf
gs
in
add
in
push
pop
movsl
rcll
sahf
inc
adc
pop
xor
bound
lds
fsubrp
clc
out
test
mov
aaa
mov
pop
hlt
or
nop
dec
clc
xor
ficoml
jg
and
pop
inc
mov
pop
insb
shll
lret
cs
into
pusha
dec
enter
jb
out
push
push
mov
imul
cmp
iret
xor
push
cmpsl
mov
mov
cmc
loop
pusha
or
test
fs
mov
dec
sbb
insl
inc
cmp
imul
sbb
sahf
xor
dec
scas
xchg
shll
xor
insl
les
sbbb
mov
je
imul
push
shrb
dec
adc
xchg
inc
push
push
mov
les
test
in
pusha
dec
sbb
cltd
aas
push
cltd
mov
jns
push
hlt
add
mov
cmpsl
cli
push
in
test
pop
jns
xchg
sahf
clc
sti
xchg
cmpsb
shll
outsb
xchg
outsl
mov
xchg
cmp
add
clc
repz
xor
pop
inc
or
adc
mov
shlb
mov
es
sahf
scas
or
or
lods
flds
ljmp
popa
add
mov
fisubrl
push
xchg
rolb
dec
sbb
in
call
rcr
in
inc
loop
dec
push
mov
lret
sbbl
mov
loopne
lret
inc
lock
cmpsl
push
mov
pop
fs
dec
inc
fildl
or
mov
rolb
dec
push
mov
mov
jl
mov
add
dec
fs
jp
int
sbb
jbe
loopne
cmpsb
push
andb
adc
aaa
push
inc
movb
xlat
inc
xor
cmpb
lahf
jge
push
test
jne
mov
adc
pop
and
lret
dec
pop
push
inc
pop
push
jae
repnz
mov
test
js
mov
ret
ret
push
mov
rcll
push
nop
mov
je
pop
sub
dec
push
ret
adc
jle
mov
sub
daa
and
mov
test
lea
in
mov
fcmovb
pop
push
leave
sbb
scas
adc
push
sbb
sub
mov
mov
mov
call
ds
aas
insl
mov
sahf
popa
mov
fistpll
lea
add
push
sbb
fsubs
sub
cltd
sub
or
repz
icebp
clc
push
jp
out
data16
cld
xchg
xor
ret
xchg
les
sub
dec
cmp
ds
jmp
cmp
lcall
pop
fsubrs
cmpsl
sbb
dec
sar
ss
rorl
push
sti
ja
inc
fldt
mov
imul
leave
gs
addl
xor
int
iret
push
fcoms
inc
cwtl
pop
loop
negb
inc
into
fistpll
sbb
inc
aas
jns
mov
loopne
fsts
ss
push
cmp
push
mov
das
xor
ss
imul
nop
sarb
push
pop
mov
clc
mov
add
ja
mov
popa
inc
or
pop
jb
sub
int
mov
lds
and
loop
scas
adc
scas
pop
push
xor
cwtl
mov
dec
arpl
outsl
pop
inc
jb
sub
lea
cmpsb
mov
jp
data16
idiv
jg
in
mov
push
push
xor
out
xchg
iret
mov
xchg
mov
stos
add
cmp
aaa
push
xchg
dec
dec
cltd
xchg
jo
js
cmc
pop
sub
add
scas
das
xlat
sub
aam
adc
xor
out
mov
mov
mov
adc
xchg
out
jmp
mov
stc
movb
cmp
xchg
popa
inc
cmp
daa
orb
pop
dec
mov
mov
xor
rorb
dec
pushf
cmp
pop
dec
pop
inc
jns
iret
cmpsl
jecxz
pop
sub
add
push
xchg
xor
in
sub
sbb
mov
pop
adc
mov
insb
jg
mov
mov
cltd
out
fsubp
call
or
dec
es
insl
push
out
imul
bound
pop
out
movsl
adcl
ss
push
fstl
fcoms
xlat
call
push
fs
aad
cmp
repz
out
mov
enter
cmp
jno
loop
imul
fists
add
and
jae
add
test
inc
repz
lds
sbb
mov
mov
filds
pushf
enter
dec
xor
push
repz
mov
stos
mov
incl
mov
jg
mov
scas
xchg
pop
or
inc
cmpsb
sbb
dec
cmp
repnz
cmpsl
sbb
sbb
and
enter
sbbb
lock
addr16
xchg
sbb
push
jns
xchg
cmp
popa
adc
inc
push
adc
loopne
mov
into
mov
dec
jge
outsb
lea
sub
adcb
popa
fwait
pop
aaa
mov
or
ljmp
or
fistps
sbb
jb
jo
lcall
and
adc
xchg
test
mov
je
inc
xchg
out
inc
leave
jmp
inc
mov
adc
sbb
dec
mov
pop
pusha
adc
push
xchg
test
scas
mov
and
adc
pusha
push
int3
iret
sbbb
xchg
push
pop
xchg
jecxz
fsubs
ret
xchg
push
mov
add
add
testl
pop
and
ljmp
jae
nop
mov
jae
mov
in
pop
iret
xor
cltd
arpl
xor
fsubs
sarl
dec
cmp
inc
mov
jnp
adc
mov
sbb
frstor
cmpsl
pop
sub
repz
jp
imul
rcll
jg
sarl
ljmp
inc
jl
dec
pop
adc
loopne
dec
push
add
mov
dec
jno
mov
jmp
and
push
dec
vmovups
lds
sub
and
jecxz
adc
aas
mov
imul
mov
mov
inc
dec
cmp
push
rcrb
cmp
imul
jp
roll
sbb
push
mov
or
sbb
daa
add
mov
push
dec
or
mov
push
out
and
or
mov
or
outsl
jp
cmpsb
sahf
mov
loopw
repnz
mov
sarb
add
out
addl
scas
in
je
cmpsl
loopne
xor
mov
out
inc
pop
rolb
outsb
sub
shlb
loopne
xor
out
insb
mov
push
adcl
in
xor
fnstenv
cli
lcall
test
mov
or
in
and
in
imul
aad
sbb
xor
inc
shll
inc
sub
scas
pop
jb
stos
pop
jecxz
push
lock
fs
cmpsb
sbb
adc
test
imull
xor
js
push
mov
or
in
or
out
adcb
sbb
push
test
in
pop
push
scas
mov
cmp
rcr
sbb
addr16
sti
push
xor
xchg
cwtl
aad
jae
sub
imul
jge
loope
push
ljmp
inc
sub
fidivrs
push
outsb
cli
icebp
or
inc
xor
mov
stos
xchg
loopne
push
adc
test
xchg
sub
dec
or
in
pushl
and
mov
sti
movsl
push
push
cwtl
mov
or
loopne,pn
addb
cld
fdivl
fnstenv
jne
in
scas
in
sbb
hlt
pop
sub
stc
es
aam
in
add
fs
mov
pusha
jne
lret
sarl
add
outsl
inc
outsl
gs
out
pop
jo
push
push
mov
xchg
shll
add
cld
or
add
mov
lahf
rcrl
popa
dec
jmp
mov
mov
test
pop
xor
int
sub
lods
les
add
mov
xchg
cmp
inc
adc
loope
push
loopne
dec
in
mov
push
lds
fdivrp
xchg
xor
dec
repz
iret
int3
lods
ret
sub
or
imul
iret
jo
sub
mov
sub
pop
or
js
push
stc
mov
mov
mov
sbb
jns
imul
cmp
push
stc
mov
mov
mov
sbb
jns
imul
cmp
push
stc
mov
mov
mov
sbb
or
cmp
sub
pop
or
js
test
cwtl
leave
and
jmp
mov
xchg
push
cmp
sub
sbb
or
pop
dec
js
dec
into
mov
fwait
mov
clc
fwait
insl
jmp
sti
enter
sub
sbb
or
pop
push
cmpl
jmp
sti
enter
sub
sbb
or
inc
push
mov
nop
test
cld
iret
mov
mov
xchg
enter
ja
ja
pop
inc
mov
orb
mov
mov
shl
or
outsb
xchg
test
jle
testl
fs
push
cltd
mov
ja
mov
mov
xchg
cmp
stc
fs
sbb
mov
push
sti
pop
inc
jne
stc
sahf
sub
cmp
fldt
mov
outsb
jns
push
mov
addr16
dec
xchg
mov
stos
daa
adc
fsub
xlat
jb
dec
negl
jns
jge
dec
imul
inc
fs
mov
call
add
scas
sbb
fs
icebp
testb
test
int
test
mov
das
or
sti
leave
lret
cmp
sub
sbb
pop
js
push
xchg
mov
mov
call
js
jle
dec
jno
popa
das
adc
push
fstpl
into
cmpsl
cltd
mov
mov
cmp
sub
cmp
xor
dec
mov
fucomp
stc
into
out
fwait
test
fwait
mov
sub
jo
insl
xor
push
mov
mov
call
or
sbb
sub
cmp
dec
js
push
mov
mov
call
or
fsubs
stos
push
dec
fs
aam
and
push
add
out
push
out
xchg
rcrb
mov
movsb
aas
sub
lahf
push
fisttps
repnz
ret
mov
dec
and
inc
ja
adc
in
jmp
fnstenv
and
jb
and
cwtl
fcmovnbe
repnz
inc
or
out
mov
lods
enter
subb
add
bnd
jmp
jne
jne
pop
jb
cltd
xor
es
imul
jbe
shlb
in
or
and
mov
pop
ljmp
mov
mov
repz
or
push
xchg
sbb
adc
pop
inc
lret
jb
filds
lods
mov
pop
insb
pop
inc
mov
jbe
push
iret
jnp
jbe
mull
scas
adc
movsl
xor
add
inc
jl
xor
testl
lock
xchg
mov
aas
inc
lcall
popa
clc
call
or
roll
vrsqrtss
aam
xor
inc
push
in
repz
sub
dec
fcmove
scas
out
imul
div
lea
jle
sbbb
push
stc
popa
imul
movsl
dec
push
loop
add
inc
aas
outsl
cmp
sbb
jns
int
fucomp
push
mov
outsl
sub
insb
sbb
and
cmc
mov
mov
andb
call
jmp
les
int
fdivr
lea
imul
pop
adc
pop
insl
xor
lock
add
loope
sti
add
dec
imul
cmc
repnz
int3
cmp
dec
imul
stos
sub
xchg
and
in
repnz
cmp
inc
pushf
mov
push
inc
ret
lret
add
rcrl
fisubrl
xchg
enter
cmp
in
xchg
xlat
lret
adc
inc
fwait
orl
jecxz
dec
ds
dec
jmp
cs
stc
jmp
fneni(8087
stos
dec
outsb
push
push
femms
dec
shlb
lcall
xor
iret
sbb
mov
icebp
cmpsl
lea
xor
clc
cmpsb
jg
mov
push
mov
mov
fs
xchg
mov
mov
mov
fdiv
movsl
shll
movsl
fidivl
or
lods
xor
sahf
mov
fdivrs
nop
insb
jl
push
xchg
nop
or
pop
cmp
cmp
leave
and
pop
movsl
cmp
jmp
mov
jae
lock
pop
sub
add
inc
dec
cmp
shll
test
orl
push
pushf
out
and
std
aam
cmc
add
outsl
pop
test
movsb
lds
mov
ss
sbb
lahf
push
dec
test
out
mov
test
sub
mov
in
push
clc
popa
int3
fistpll
sub
and
xchg
lds
xorl
or
mov
cs
adc
or
mov
pushf
xchg
jge
iret
add
add
and
dec
push
jno
ret
xrelease
dec
mov
mov
out
cwtl
pop
mov
test
loope
push
lods
sbb
imul
cmp
xchg
mov
and
xchg
jl
push
rclb
pop
outsl
lret
jae
fs
leave
pop
inc
fisubrs
shr
nop
arpl
enter
adc
mov
jb
jg
dec
mov
ljmp
cmc
sub
jo
and
sbb
sbb
stc
movsl
cltd
mov
jle
add
sub
mov
adc
std
sub
out
cmpsl
mov
mov
ljmp
pop
iret
cmp
adc
jbe
scas
scas
mov
hlt
repnz
lea
insb
shlb
inc
pop
mov
adc
or
loopne
pop
adc
rcrl
mov
mov
jo
cs
mov
adc
rcll
mov
out
mov
ds
or
shll
dec
mov
push
mov
les
mov
xchg
pop
or
mov
movsl
jmp
mov
es
dec
and
daa
pop
mov
jbe
std
clc
xlat
ljmp
pop
pop
fdivrl
mov
xor
lods
jl
andb
jmp
dec
jl
xchg
inc
in
in
jae
mov
sbb
fbld
sub
jne
out
push
cmp
push
pushf
shll
sbb
lcall
add
and
jb
aad
add
sbb
clc
push
jecxz
jnp
das
xchg
sbb
outsl
adc
jecxz
ss
mov
rcr
adc
mov
jae
repnz
fildll
popf
mov
nop
imull
push
sbb
lds
repnz
push
push
or
adc
fstp
dec
xor
stos
inc
jne
in
adc
aaa
insb
add
cmc
les
dec
sub
cmp
icebp
xchg
dec
pop
dec
jae
pusha
repnz
bound
push
in
cmp
fstl
ljmp
insb
push
cmp
inc
leave
mov
dec
clc
into
jb
in
dec
add
sbbb
push
or
or
negb
cli
xor
in
or
invd
sub
or
enter
psubd
mov
clc
or
inc
inc
inc
lds
std
in
add
mov
mov
jbe
cmp
mov
fdivrs
mov
adc
in
xchg
fwait
sub
jo
cmp
push
cmp
aad
data16
xchg
movsl
fxch
xor
mov
jns
sahf
jb
push
sahf
inc
sbb
mov
mov
das
into
mov
xchg
aas
mov
xor
pop
and
shrl
inc
std
loopne
lcall
insb
push
cs
scas
stos
jmp
mov
lea
out
jmp
mov
test
dec
js
xchg
xlat
push
ret
cmp
push
xchg
movb
push
js
add
xor
xchg
call
xchg
jmp
add
aad
scas
shl
out
sbbl
int3
cli
pop
incb
mov
aaa
ljmp
scas
rclb
dec
arpl
pop
sti
sbb
addr16
rcll
xor
fadds
xchg
loopne
sbb
rolb
push
movsl
adc
cld
pop
mov
loope
lock
inc
sub
sub
fimuls
popf
lahf
inc
push
xchg
cmp
movsb
jmp
hlt
repz
dec
push
int
gs
sub
mov
or
sbb
lods
cli
push
add
outsb
repz
jbe
and
sbb
pop
movsl
mov
lds
shlb
sbb
sub
in
cmpsb
add
mov
lcall
push
dec
sbb
out
enter
inc
cld
jbe
sub
lods
enter
xor
lahf
xorb
insb
rorl
mov
loopne
xchg
pop
sarb
out
cmp
push
arpl
sbb
xchg
push
jmp
iret
cmp
cmp
pusha
lret
cltd
je
xchg
xor
cmp
les
or
adc
daa
fisubs
enter
insb
lcall
cmpsl
test
aaa
mov
outsl
adcl
add
pusha
mov
xor
pop
mov
decl
popl
imul
cs
sarl
inc
inc
mov
cmp
scas
js
inc
push
mov
sbb
adc
sbb
ficompl
push
cld
arpl
add
cmpb
fdivl
adc
mov
jno
pop
dec
push
add
push
fisubl
into
inc
xchg
pop
inc
les
sub
cmp
enter
mov
mov
loop
fisttpll
mov
push
popf
and
aad
inc
cwtl
mov
cmp
mov
imul
jae
ljmp
rep
imul
cmp
ljmp
mov
mov
xor
fisubs
rolb
push
pop
xchg
int3
jl
mov
cmp
and
dec
sub
or
cmpsl
mov
ret
pop
lea
xchg
dec
xor
inc
add
jl
das
adc
repz
lcall
sbb
call
mov
sar
imul
xor
arpl
xchg
es
das
xlat
fwait
insb
rclb
xlat
xor
add
and
pop
pop
fs
adc
in
mov
xor
stos
sub
inc
push
ljmp
mov
jne
inc
jmp
dec
add
pop
pop
shlb
loopne
sub
aas
arpl
imul
lar
loop
mov
sbb
dec
sub
int
xchg
pop
cmc
xor
rorl
cmp
lods
push
sbb
scas
cpuid
pop
mulb
mov
daa
xchg
or
push
rclb
std
outsl
mov
aad
fs
sub
jge
sti
mov
mov
sbb
mov
jb
mov
or
inc
les
roll
cmp
mov
lea
pop
das
xchg
clc
push
jl
icebp
push
push
lcall
jbe
push
xlat
mov
ret
mov
or
cmp
adc
mov
leave
in
imul
sub
out
out
cwtl
push
test
sbb
xor
dec
jns
out
add
in
mov
pop
icebp
mov
or
loop
insl
push
movsl
stc
adc
pop
les
sbbl
sbb
das
cmp
or
adc
and
mov
loopne
sub
jle
mov
mov
dec
add
pop
pop
clc
fiadds
enter
leave
stos
mov
in
inc
adc
mov
mov
clc
rolb
addl
je
pop
mov
dec
sbb
iret
data16
or
dec
sub
push
aam
nop
xchg
dec
push
popl
ret
add
xlat
in
sbbb
in
push
pop
es
lods
push
lret
loop
outsl
mov
mov
sub
mov
int
call
sbb
xchg
cmpsl
in
add
daa
inc
test
mov
add
out
nop
aaa
ljmp
dec
data16
inc
mov
sub
lods
stos
stos
lock
mov
fs
adc
xchg
clc
push
ret
jnp
push
rolb
jae
or
hlt
leave
sub
inc
cwtl
cwtl
ja
push
mov
add
jmp
inc
inc
push
push
inc
in
out
rol
lods
imul
xchg
or
loopne
jb
pushf
or
ficoml
adc
lods
inc
dec
pop
pop
push
push
pop
lret
out
xor
push
jle
adc
adc
fnstcw
neg
jne
xor
fwait
add
ds
enter
sbb
xchg
imul
fs
mov
repnz
in
jo
adc
xor
inc
inc
pop
jl
push
lret
jae
or
mov
xchg
mov
xor
jnp
jne
jl
pop
lret
loop
mov
shll
sub
hlt
xor
mov
shlb
fstl
mov
dec
jo
fists
xor
mov
sub
jmp
hlt
or
push
mov
fistl
dec
outsb
push
or
sub
outsb
je
adc
push
cmp
add
aas
sbb
push
mov
or
xor
je
sbb
fadd
lcall
popa
dec
aaa
das
sbb
sbb
sti
jnp
js
xor
fninit
xchg
push
roll
mov
int
imul
jmp
enter
cs
sahf
shll
xchg
cmp
cli
jle
sti
addr16
scas
push
outsl
sbb
dec
mov
outsb
cmp
nop
push
push
jno,pt
out
push
xchg
cmp
dec
sub
jecxz
nop
decl
ss
test
arpl
and
add
call
mov
shlb
lea
mov
add
aad
out
adc
movsb
mov
and
and
inc
pusha
pop
mov
xchg
add
retw
push
ljmp
shl
xchg
mov
mov
imul
xchg
paddb
xchg
aam
mov
sbb
push
cmp
sub
mov
xchg
mov
in
dec
cs
add
mov
sub
stos
adc
push
stos
adc
aam
shlb
testl
mov
xor
int
icebp
shlb
repz
inc
fisubs
movmskps
mov
rcrb
int3
ret
lahf
jp
test
aam
adc
test
adc
cmp
mov
mov
testb
mov
les
push
sub
fists
or
pop
cmp
je
pusha
and
aad
test
push
fistpl
ss
mov
popa
fidivrl
xchg
mov
filds
lock
push
sub
pop
pop
mov
mov
mov
sti
xchg
ds
insl
inc
dec
cwtl
std
jno
sar
imul
lock
les
add
lds
lea
adc
xchg
xchg
dec
adc
xchg
adc
mov
gs
and
or
inc
jg
jnp
cmp
cs
in
cmpsl
test
fistl
sub
pop
mov
mov
xor
imul
es
scas
inc
xchg
mov
ret
fldenv
cs
jge
push
pop
add
fistpl
lahf
and
imul
popf
lock
roll
fs
cmpsl
jmp
data16
daa
mov
jecxz
adc
and
jmp
scas
cltd
jl
imull
ret
movsl
cmc
adc
mov
dec
fisubrl
jmp
int3
lret
xlat
add
popf
ficoml
sbb
mov
fwait
movsl
sub
dec
rcr
ds
fists
fnstcw
sbb
js
fistpl
lret
mov
movsb
mov
and
cltd
cmp
adc
in
pushf
rorl
push
or
push
dec
push
xchg
mov
in
pop
add
in
fwait
out
adcl
cmp
adc
aam
int
xchg
mov
fs
add
iret
sub
or
xchg
mov
shlb
sbb
mov
jno
dec
mov
dec
outsb
shl
fisubl
in
rcll
vmovntps
or
push
push
das
mov
or
cs
sbb
dec
dec
scas
lods
push
cmpsb
hlt
and
add
cmpsl
out
mov
xchg
call
cs
out
jmp
xor
mov
add
jne
pop
pop
in
cs
xor
push
addr16
mov
xor
mov
mov
test
pop
xchg
xchg
push
clc
xor
in
jg
mov
loop
int3
imul
mov
mov
jp
adc
clc
movsb
aas
pusha
dec
movsl
repnz
shll
je
ss
sub
insl
jbe
in
xor
sbb
sahf
into
push
rcrb
mov
or
jg
push
lahf
or
imulb
adc
sub
subb
std
shrl
fidivrl
divb
lds
sub
push
sti
sub
popa
cmpsb
out
imul
aaa
mov
push
and
test
push
std
pop
stos
add
xchg
push
mov
mov
cli
or
in
push
jae
ss
push
cmc
cltd
or
push
and
dec
stos
xor
imul
mov
int3
or
shl
data16
shll
ljmp
mov
mov
loop
imul
popa
sub
mov
negb
mov
add
push
movsb
mov
leave
sbb
adcb
lea
cmp
pop
mov
out
test
in
jns
mov
and
mov
adc
lahf
cmpsl
cmpsl
int3
dec
in
outsl
lahf
fldenv
sub
pop
pusha
out
outsl
jl
inc
cwtl
sahf
bound
sub
in
cwtl
in
inc
and
cmpsb
sbb
icebp
ficomps
pop
adc
push
inc
push
lret
movsl
mov
adc
xor
out
inc
or
mov
jne
xor
adcl
push
es
cmpsb
ret
mov
je
rcll
pop
cmpl
xchg
imul
mov
inc
inc
sub
adc
fcomps
mov
sub
mov
mov
xchg
test
fstl
jmp
cmp
sbb
or
aad
jno
lcall
adc
test
mov
je
jnp
inc
mov
push
xchg
dec
loopne
mov
jge
cld
adc
or
cwtl
pop
jns
pop
clc
aas
mov
aam
shll
cmpsb
xor
jbe
bound
iret
loopne
mov
add
mov
or
mov
cwtl
aam
sti
cmp
or
lods
pop
mov
jno
daa
movsl
cli
xchg
sbb
pop
sub
cmp
jne,pt
ror
nop
mov
mov
imul
or
fimuls
adc
je
xchg
out
scas
push
clc
mov
mov
bound
cmp
or
in
rorl
dec
jns
sub
xchg
push
ljmp
outsb
out
aaa
rorb
mov
shl
inc
lahf
shll
jg
loop
test
notb
aad
scas
mov
aaa
cmpsl
and
sahf
fcompl
push
test
pusha
outsl
mov
fdivl
popl
jno
adc
add
jb
or
push
xor
sbb
movsb
sahf
dec
push
mov
loop
sub
shl
mov
ljmp
fcomip
push
test
movsb
inc
mov
jecxz
and
sahf
test
ja
cmp
cmpsl
shll
xchg
arpl
rcrb
nop
lods
cmp
into
mov
imul
test
mov
cmc
xchg
ret
jno
xor
sbbl
push
lods
pop
add
mov
dec
incl
jnp
sti
jmp
push
ljmp
cli
dec
jb
jne
pop
or
repnz
jmp
mov
ss
ja
sbb
lods
add
fdivs
loopne
push
pop
lret
sbb
daa
jp
mov
and
pop
hlt
pushf
aaa
test
cmpsb
rcl
jle
sti
mov
in
fbld
add
and
int
lcall
loopne
inc
add
sarb
xorb
xchg
jl
scas
adc
xor
pop
cwtl
fucomp
sbb
sbb
cmp
pop
idivb
sar
mov
cmp
mov
and
mov
loop
xchg
mov
dec
pop
push
mov
push
dec
out
mov
mov
outsl
decb
mov
test
cli
aas
or
cmp
pop
test
mov
ficompl
or
loope
cmpsb
loope
cld
in
aaa
inc
jmp
sub
fwait
xchg
add
int
xchg
movsb
outsb
test
sbb
outsb
shr
jns
add
outsb
dec
or
popf
jge
pop
outsl
ror
ds
push
bound
lods
insb
movsb
lahf
sub
sub
inc
cmc
cmp
lods
mov
fs
aam
add
dec
mov
jnp
inc
rcl
pop
mov
sub
jle
loop
push
mov
mov
movsl
out
and
test
mov
int3
mov
out
je
mov
cmp
mov
push
in
aam
xchg
rclb
mov
sbb
gs
mov
pusha
in
pop
andb
sbb
jne
sub
push
dec
pop
mov
clc
es
mov
fnstcw
mov
fildll
mov
cmpsl
repz
xor
mov
aad
mov
mov
inc
cmp
iret
push
inc
xchg
add
jnp
dec
or
loop
in
xchg
fptan
mov
call
in
aam
test
fmul
mov
push
mov
cmp
inc
mov
inc
push
cwtl
push
push
mov
movsl
inc
popf
and
addb
mov
sub
data16
scas
or
icebp
cwtl
push
shr
aaa
xor
lret
hlt
addl
mov
adc
add
int
inc
ss
fwait
in
loop
jmp
fwait
dec
jle
mov
out
xor
lods
jnp
xchg
cmc
mov
imul
push
pop
lcall
imul
cmc
jno
xchg
aad
mov
nop
loop,pn
nop
fistpll
mov
xchg
pop
int
xor
pop
iret
icebp
pusha
and
es
mov
dec
roll
aad
fmulp
pop
cmpsl
add
mov
orb
sbb
rolb
hlt
sarb
add
out
test
or
add
cmp
sbb
pop
xchg
ret
pushf
cmpb
inc
in
repz
or
or
orl
imul
out
add
stos
sub
add
push
jae
inc
push
stc
and
mov
or
aas
hlt
fnstsw
lea
ja
jo
outsb
imul
hlt
outsl
ljmp
push
or
sub
cmp
dec
js
push
mov
mov
call
or
sbb
sub
cmp
dec
js
push
mov
mov
call
or
sbb
dec
js
call
mov
fwait
test
cwtl
mov
call
aas
cmp
sub
js
push
je
add
cwtl
mov
pop
adc
add
aam
les
hlt
and
xor
divb
fiaddl
jb
int3
inc
xchg
je
gs
ret
xor
and
aam
les
hlt
and
xor
movsb
or
xchg
je
fs
scas
add
xor
and
aam
les
hlt
and
xor
movsb
jb
andb
shlb
xchg
imul
jno
pop
hlt
dec
mov
pop
bound
push
mov
popa
mov
std
imul
imul
lcall
test
dec
push
js
test
mov
add
mov
repz
xchg
xor
dec
icebp
sarb
xchg
cli
daa
push
aam
pop
je
movsb
loop
xlat
jns
push
addr16
aam
les
sahf
or
gs
xchg
push
xor
movsb
mov
jge
insl
mov
push
push
jmp
inc
sub
call
and
adc
sbb
aaa
or
push
mov
pop
sbb
fs
or
xchg
lahf
aaa
xor
push
inc
jbe
cmp
aaa
add
dec
cmpsl
inc
ret
jno
movsb
out
add
adc
and
xor
movsb
jb
addb
fs
ret
xor
and
xchg
push
mov
popf
and
cmp
and
es
sti
and
adc
fwait
bound
inc
mov
xchg
rcrl
or
push
xor
adc
xlat
adc
mov
popf
mov
les
push
mov
insb
test
bound
je
fs
ret
xor
and
aam
les
hlt
and
xor
movsb
jb
addb
fs
ret
xor
and
aam
loope
imul
xchg
and
or
pop
xlat
nop
sbb
push
in
das
cmp
jl
sti
cmpsb
pushf
stc
imul
loope
xorb
cmpsl
push
mov
out
cltd
pop
push
fistpll
jb
dec
icebp
jge
or
or
add
sarl
pop
jg
jge
mov
jp
out
lock
add
xor
jl
mov
movsb
cmc
adc
mov
lods
popa
sub
xchg
sbb
icebp
push
mov
jne
cmp
and
stos
aaa
add
cwtl
mov
fdivs
inc
inc
mov
out
mov
sahf
pusha
arpl
or
loope
lahf
add
mov
divl
push
sub
cmp
mov
sbb
mov
test
mov
and
add
icebp
in
outsl
roll
inc
mov
sarl
xor
sub
mov
and
int
push
pop
sbb
cli
and
scas
cmp
xchg
pop
push
inc
clc
mov
inc
pop
lret
fs
cmpxchg
push
faddl
mov
lock
push
push
adc
push
dec
sbbb
lods
sub
popa
jb
jg
repz
mov
xchg
popf
jge
stc
ljmp
push
call
jle
lods
mov
push
pop
loop
imul
or
sub
lcall
loopne
scas
fisttps
or
fwait
lods
mov
push
push
xor
or
insb
aad
inc
cmp
shrl
data16
popf
jle
push
gs
stos
sbb
mov
mov
jne
call
sbbl
inc
mulb
lods
mov
xor
and
loop
push
and
xchg
add
mov
lret
mov
push
xchg
outsb
pusha
push
dec
leave
or
push
repz
popa
mov
sbb
arpl
mov
mov
and
out
mov
fiaddl
xor
in
mov
sbbl
dec
adcb
and
sub
and
aad
lods
jne
test
add
mov
sub
rorl
popf
pushf
scas
sbb
mov
push
insb
mov
cmpsl
ja
pop
ja
mov
sahf
push
adc
pop
dec
rorl
mov
jl
aam
test
xor
xor
pushf
pop
sbb
es
push
add
adc
mov
loop
add
sti
gs
inc
sub
jge
xor
or
gs
cmp
adc
xchg
popa
mov
addr16
arpl
dec
sahf
mov
add
or
lcall
pop
push
lods
in
and
loopne
shlb
mov
mov
ret
call
aam
repz
scas
mov
or
mov
enter
pop
aas
pop
pop
int
mov
lods
add
jl
es
fnsave
ds
jnp
insl
and
fdivr
rclb
mov
int
xchg
adc
scas
inc
mov
sub
scas
cwtl
mov
push
inc
jg
data16
clc
adcb
mov
jp
mov
ret
or
out
divb
jp
incb
cmp
lds
xlat
jg
cli
push
jns
xchg
dec
in
call
or
and
daa
dec
int3
push
and
idivb
ds
ret
int3
das
xor
js
cmp
mov
test
push
sbb
fwait
sub
enter
mov
jnp
jecxz
push
sub
je
lret
mov
pop
cwtl
jle
mov
stos
idivb
leave
mov
imul
test
sub
mov
dec
movsl
js
dec
pushf
cmp
loop
fs
push
add
jae
xor
inc
mov
xchg
orb
mov
cmp
xchg
andl
repz
pop
test
mov
movsl
pop
lcall
xchg
aaa
cmpsb
ss
int3
iret
shlb
out
sahf
fcoms
mov
aas
xchg
sbb
push
stc
cld
and
xchg
mov
packsswb
lods
xor
jnp
lahf
iret
fwait
xor
gs
xchg
ror
inc
mov
pusha
insb
fucomp
pop
push
inc
fidivrl
adc
aaa
gs
and
movb
int
add
mov
popf
stos
or
push
xchg
repz
adc
lds
fbld
xchg
mov
pusha
iret
mov
dec
dec
sbb
and
mov
mov
mov
jl
inc
imul
xor
pop
sti
xchg
xlat
cs
outsb
popf
aam
fisttpl
and
jb
adc
add
push
xchg
sub
mov
mov
xchg
test
fstpl
loope
dec
jns
decl
fdivl
push
xchg
jnp
sub
shl
int3
enter
out
push
jne
adc
ds
pop
leave
in
sbb
shlb
lcall
cmpsb
cmp
pop
mov
sub
xchg
add
cltd
inc
add
movsl
dec
aaa
dec
mov
lods
mov
lret
mov
hlt
loope
push
addr16
and
push
jns
jp
jbe
jne
push
or
pop
ror
xchg
cmc
inc
scas
ss
jo
fwait
xor
aam
out
scas
jge
push
icebp
sub
int
pop
cmpsb
or
pop
or
lret
cmp
or
leave
mov
addps
ret
cltd
xchg
or
sbb
mov
pushf
bound
xor
dec
inc
pop
cmp
fists
pop
add
inc
pop
test
push
mov
push
push
cmp
dec
push
rcrl
aad
movsl
pusha
mov
push
test
add
rcll
sbb
jg
push
enter
icebp
mov
mov
stos
faddl
xor
aas
jl
cmp
cmp
cld
sub
mov
jl
pop
pop
das
pushf
dec
pop
jnp
jno
ficoml
jbe,pn
pusha
fdivr
mov
aaa
or
scas
clc
push
jno
pop
repnz
insl
jle
rolb
cmpsl
xor
out
shl
les
mov
push
mov
sbb
subl
imul
fdiv
mov
sub
jno
pop
cmpsb
mov
cmp
push
push
cld
pop
or
jns
popa
idivb
cld
adc
cmp
pop
adc
sbb
fiadds
int
in
adc
inc
fstps
cmpsb
adc
adc
push
cmpsl
xchg
jmp
insl
mov
insb
mov
mov
cli
call
rclb
fidivrl
push
insb
out
ss
mov
jnp
adc
scas
leave
out
fidivrs
mov
pushf
dec
dec
or
int
mov
mov
sbb
jb
push
pop
xchg
pop
pushf
and
lret
out
std
insl
sub
repnz
movsl
xchg
jns
cmp
fcomp
xchg
lahf
jge
hlt
add
call
adc
frstor
loopne
xchg
add
jge
adc
sbb
icebp
cmp
fnsave
mov
data16
out
shl
stc
test
sub
sub
movntq
push
popa
adc
xor
mov
mov
xchg
popa
cmp
lods
int3
add
rcrl
fistl
xor
mov
loop
popf
or
xchg
xchg
movsl
setge
leave
xchg
popa
stos
and
pop
and
mov
mov
mov
jae
sbb
insl
popa
ja
xchg
jno
movsl
movsb
or
test
jle
mov
cli
scas
aam
sar
xor
sbbb
xchg
dec
xchg
dec
xchg
lahf
cli
repnz
fnsave
cmp
enter
std
jbe
sub
or
repnz
jns
adc
push
inc
clc
xor
add
fistpll
adc
pop
xor
mov
inc
or
jl
cwtl
orb
xor
inc
lds
and
imulb
test
test
pop
fs
insb
pushf
sub
add
jp
or
mov
xor
pop
cmp
out
movsb
les
xlat
hlt
push
jge
fnsave
outsb
mov
mov
xor
das
pop
mov
mov
les
xor
scas
add
dec
pop
sar
adc
xchg
mov
dec
add
inc
sub
adc
jp
sub
or
je
xchg
bound
in
mov
test
xor
mov
ss
jb
andl
inc
add
adc
sub
stc
sub
xor
aaa
xchg
imul
das
enter
pop
es
jp
mov
mov
fisubrs
and
lret
inc
jp
repz
faddl
idiv
cmp
hlt
xchg
mov
lock
jg
xchg
add
jb
stc
jg
int3
rorb
add
inc
dec
bound
adc
jmp
ja
xor
inc
dec
mov
scas
xchg
mov
jb
inc
cmpsb
xchg
xchg
xchg
clc
rcrb
lret
mov
mov
andl
fwait
dec
xor
pop
pop
cmp
icebp
in
ds
dec
mov
mov
leave
hlt
xorb
out
addr16
das
push
add
test
push
insb
pop
iret
push
inc
clc
imul
jge
gs
jmp
mov
cli
adc
fmulp
stos
sub
daa
inc
out
sbb
mov
ret
fiaddl
mov
loopne
sub
xchg
pop
sub
xchg
out
inc
push
mov
cmpsb
test
enter
divl
cmc
inc
adcl
mov
add
inc
inc
inc
push
push
xor
jbe
movsb
jmp
sbb
sbb
hlt
push
in
lahf
cltd
xor
sub
xchg
je
fs
or
adc
cld
push
cmp
mov
add
push
stos
xchg
xlat
jge
jb
sbb
mov
pop
jle
jns
push
jg
mov
int
dec
ret
push
rcr
scas
pop
aas
sub
or
mul
popa
mov
aas
enter
fistpl
jb
sub
or
stos
mov
xchg
dec
in
lahf
pop
in
out
mov
mov
mov
gs
fbld
popf
xor
ss
mov
xor
lcall
jne
aas
xchg
jl
mov
test
mov
jo
cmp
scas
push
loope
dec
dec
repz
idivl
mov
push
cltd
icebp
sub
bnd
rol
and
loop
jno
rcrb
test
lretw
jno
jge
sub
hlt
out
lret
pop
push
sar
pusha
dec
inc
ds
outsb
jb
lods
cwtl
push
mov
and
push
out
leave
dec
insb
sub
jl
or
inc
addr16
cmp
xor
sahf
adc
fdivrl
cld
dec
je
daa
aaa
xor
adc
cmc
stc
inc
mov
test
mov
mov
imul
ror
cmpsl
mov
push
ljmp
rcrl
loop
ljmp
xor
jg
mov
popa
test
aam
dec
or
pop
jle
mov
fs
pusha
or
fstps
xlat
testb
or
inc
int
mov
adc
lock
inc
cli
dec
jno
xor
fildl
mov
dec
push
mov
call
mov
xchg
sbb
imul
psubusw
loope
bswap
dec
inc
xchg
cmp
mov
sbb
or
add
add
nop
aam
sub
sbb
int3
outsb
pop
sub
jns
pop
mov
adc
repz
add
fcompl
cmp
push
and
stc
push
repnz
std
pop
call
scas
out
lret
ret
data16
hlt
js
sub
inc
or
or
add
cmp
pushf
mov
and
aam
icebp
popf
cwtl
or
loop
adc
mov
repz
fwait
jbe
cs
and
jecxz
shlb
inc
add
xor
movsl
out
push
fcmovnu
pop
add
fnstcw
in
loopne
jne
xlat
pop
loopne
add
inc
dec
adc
fidivrs
adc
insl
push
imul
out
xchg
test
and
imul
dec
adc
lods
pop
lods
xor
addb
add
out
xchg
pop
push
adc
pushl
push
xchg
xchg
jg
mov
pusha
push
cmpsl
stc
sbb
filds
cmc
inc
jnp
movlps
fstpt
jns
xor
xchg
pop
roll
sbb
pop
sarb
leave
mov
in
xchg
scas
jge
jge
xlat
shrl
sbb
inc
add
imul
or
jl
pop
mov
orb
sbb
in
mulb
sbb
mov
cld
cli
jg
inc
mov
cs
and
mov
push
ret
jle
mov
sarb
push
and
inc
xchg
ret
icebp
enter
inc
or
lret
das
jo
daa
ret
or
dec
lds
sarl
mov
xlat
sti
dec
cmp
push
mov
push
jae
or
mov
mov
jecxz
push
mov
dec
push
int3
mov
add
insl
test
or
adc
and
inc
sub
mov
and
loope
xor
nop
push
sub
mov
lods
nop
lods
add
stos
cld
xor
lea
xchg
push
aaa
ret
xchg
sbb
into
and
call
jmp
ficoms
mov
inc
xchg
aas
into
sub
ficomps
pop
xor
fisubrs
cmp
mov
leave
mov
mov
sarb
xchg
xor
cltd
mov
in
mov
out
repz
sub
out
mov
sub
mov
or
loope
ja
inc
lods
adc
jp
shlb
test
pop
or
dec
mov
xor
movsb
xchg
push
cmp
mov
jmp
pushf
stos
ja
insb
out
dec
mov
cmp
cmp
cmp
pmullw
les
jb
dec
cmp
stos
mov
hlt
cwtl
mov
jp
cmp
sahf
inc
repz
sub
jp
dec
push
in
outsb
cmp
add
sbb
cwtl
push
adc
adc
mov
lret
test
push
out
mov
sbb
xor
push
jo
adc
fnstsw
mov
push
shlb
addb
xchg
sub
jp
inc
push
jb
ds
ja
out
cmp
jo
or
addr16
fwait
pop
je
frstor
iret
inc
fwait
aas
repz
cmp
or
jb
add
cmp
std
pop
imul
mov
in
or
pop
jl
test
mov
arpl
adc
push
adc
inc
call
cmp
cmp
ljmp
jmp
ftst
jge
xchg
inc
cld
cmp
mov
jp
xor
and
dec
or
jmp
add
repz
xorb
jae
loop
ja
mov
add
xchg
pop
scas
mov
imul
stos
popf
sar
out
int
fisttps
and
jno
mov
negb
out
ficomps
fnstcw
cmp
mov
sub
es
popw
push
cmpsb
dec
add
fwait
push
inc
hlt
sahf
inc
add
popa
mov
jae
outsl
sbb
dec
and
xchg
mov
aam
sub
fisubl
out
and
mov
lahf
push
cmp
es
lahf
fadd
dec
in
sub
push
enter
dec
mull
mov
sbb
mov
add
pop
stc
mov
test
leave
pushf
mov
mov
mov
jmp
loop
outsb
and
dec
xchg
sbbl
jbe,pn
cmpsb
repnz
test
cmp
add
addr16
jmp
cltd
push
dec
clc
shll
push
stos
push
ljmp
es
jbe
pop
push
idivl
nop
in
arpl
cltd
icebp
lods
inc
mov
pop
repz
dec
sbb
in
repnz
icebp
test
xlat
add
fbld
fidivs
lret
icebp
push
dec
xor
cmpsb
lret
int
push
push
lods
ret
les
out
dec
ss
jnp
push
test
les
inc
xchg
cld
in
xor
outsl
or
and
pop
xchg
mov
cmp
push
push
cmp
add
xor
test
bound
sahf
xor
das
movsb
adc
inc
push
push
jecxz
xchg
xchg
jnp
aas
fbstp
push
and
cmc
rcr
data16
stos
jle
test
dec
mov
pop
or
mov
das
dec
sbb
rolb
jae
and
rcl
lea
stos
sub
sbb
push
add
fcmovne
js
push
cmp
pop
pop
in
mov
dec
sub
loopne
inc
fs
xor
mov
lods
xor
pop
add
and
dec
cmp
inc
loopne
xchg
scas
fnstcw
movsb
bnd
pop
repz
push
je
push
cs
test
imul
sbb
test
test
mov
fcmovnu
ss
fwait
in
hlt
cmpb
lcall
sarb
add
mov
mov
icebp
aam
test
mov
cmp
shrb
cmpsb
std
and
xchg
idiv
push
push
add
mov
push
xchg
mov
lcall
bound
fisubrl
cmpsb
ds
sbb
shrl
sbb
and
rcll
add
lcall
fwait
bound
push
sbb
jns
sbb
dec
ljmp
jg
cmc
stos
fdivs
arpl
mov
aam
adc
and
mov
add
jmp
outsl
lods
js
js
dec
fldcw
jbe
rorl
movsl
pushf
mov
movl
fdivrs
in
adc
outsb
out
ret
outsl
rol
fbstp
ret
mov
jne
pop
mov
add
pop
push
in
inc
stc
mov
icebp
mov
fisttps
pop
out
sbb
movsb
mov
stos
and
flds
adc
or
cmp
test
popa
scas
xchg
andl
pushf
imul
rclb
jbe
xor
pop
or
lcall
cmc
xor
dec
and
mov
cmp
les
inc
mov
jne
or
cltd
or
mov
dec
inc
pop
in
popa
mov
fdivrp
cmc
inc
jmp
jmp
popl
xor
ror
mov
call
shl
push
pop
dec
dec
and
or
inc
mov
dec
ficoms
hlt
popf
cwtl
mov
mov
lods
fldenv
nop
inc
fisttpll
cmp
mov
popf
push
jae
sbb
pop
sub
lret
imull
or
inc
push
jns
add
call
add
inc
ljmp
jg
adc
insl
movsl
iret
dec
push
xchg
adc
inc
dec
rcrl
pop
jne
jno
notb
mov
sub
mov
mov
sub
shl
insb
mov
dec
nop
rcrb
sbb
sbb
test
popf
adc
add
lahf
inc
popl
dec
pop
add
add
enter
ljmp
orb
test
mov
repnz
push
ljmp
cmp
mov
ret
mov
sti
push
or
push
adc
cmp
das
adc
lahf
stos
stc
adc
arpl
adc
xchg
addr16
and
jp
xchg
dec
jno
dec
sbb
pop
jno
leave
fsubp
lcall
idiv
repnz
sub
pusha
adc
jmp
ljmp
xorl
jnp
jecxz
xchg
sub
mov
lock
ja
enter
outsb
test
es
nop
jle
pop
inc
lods
add
test
cmp
mov
push
cmp
xchg
fdivr
jno,pt
fsubr
add
cmpsl
sarl
add
daa
lcall
add
popa
sub
out
in
movsl
xchg
mov
adc
push
push
test
mov
jae
repz
ret
mov
imul
popl
mov
sbb
lods
pop
pop
mov
sub
imul
loopne,pt
lret
inc
cld
ret
adc
fldenv
sbb
fsts
fisubrl
inc
inc
cmc
xor
sbb
push
stos
aad
cmpsl
mov
insl
mull
xchg
xchg
or
and
xor
cld
add
pop
xor
xchg
ss
add
adc
jo
adc
push
jle
out
fcomp
addb
mov
sub
push
lcall
dec
cli
and
out
out
dec
and
sbb
movsb
and
mov
fnstsw
add
stos
lods
je
std
cs
lcall
out
lods
and
jne
lahf
cmp
cmp
xor
xlat
int3
roll
jnp
mov
dec
inc
xor
mov
pop
dec
sahf
jg
pop
cwtl
ja
mov
test
in
inc
aad
call
stc
cmc
lods
daa
lret
loope
mov
shrb
push
shll
fistps
mov
sbb
popf
shr
lds
lret
mov
jae
xor
lock
or
and
xor
movsb
jb
addb
fs
ret
xor
and
aam
les
hlt
and
xor
movsb
jb
addb
fs
ret
xor
and
aam
inc
adc
xor
test
bound
push
addb
fs
ret
xor
and
aam
les
hlt
and
xor
movsb
jb
addb
lds
sub
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jns
imul
outsb
pop
inc
jl
insb
or
cli
jmp
lret
test
mov
imul
cmp
sub
sbb
or
cli
jmp
lret
test
mov
imul
cmp
sub
sbb
or
jmp
lret
lret
jmp
mov
jp
push
sub
cmp
xchg
sbb
jmp
adc
lcall
adc
inc
bnd
sub
lods
aad
push
incl
cmova
mov
lret
inc
jp
and
outsl
loop
xchg
lods
shll
insl
cmp
stc
cmp
or
mov
dec
mov
enter
cmp
out
popa
pop
stc
leave
stc
call
xor
cltd
mov
xor
aad
in
pop
jmp
es
stc
xor
stos
out
jns
pushf
fiaddl
pop
test
sub
roll
sti
and
mov
test
pop
cltd
loope
daa
jp
push
pop
dec
dec
cmp
sub
sbb
or
stc
cli
jmp
lret
test
int3
aas
pop
add
push
push
pusha
imul
mov
mov
movsb
rcl
sbb
out
jp
sbb
or
sbb
sbb
or
mov
jmp
mov
adc
or
cmp
sub
sbb
or
cli
jmp
lret
test
mov
imul
cmp
sub
sbb
or
cli
jmp
lret
test
mov
int3
jg
test
fwait
jecxz
test
dec
push
je
jecxz
cs
sbbl
mov
and
adc
insl
xchg
insb
dec
popl
or
je
cld
sbb
jns
cwtl
mov
loop
out
aas
jmp
xor
sti
fmuls
adc
imul
cmc
push
sbb
dec
repz
mov
jge
pminsw
out
insl
xor
fistpl
lods
sbb
mov
mov
repz
ja
cli
or
inc
popa
or
inc
xor
sub
sbb
ficomps
fdivp
add
jg
lds
jge
mov
cmp
inc
sub
cli
push
daa
mov
insl
into
dec
fsubs
popf
or
test
insl
xor
cmpsb
int3
outsl
fldt
mov
mov
insb
dec
out
int3
scas
sub
mov
fbstp
jo
imul
cmc
pop
rcll
mov
ret
fidivrs
pop
xor
ret
push
dec
sbb
fsubrl
cld
xchg
mov
xor
insb
shlb
je
mov
inc
cmp
pusha
or
cmp
popf
popf
jae
adc
push
xor
cmp
test
add
or
mov
or
mov
int3
fstps
inc
add
lods
inc
test
aam
out
jae
outsb
fdivr
sub
shrb
xchg
lea
cltd
mov
add
cmc
std
sbb
sub
cmp
mov
les
sub
sarb
adc
push
mov
icebp
mov
out
sbb
outsl
sub
loopne
sub
xor
inc
rcll
cmp
in
nop
pop
adc
pushf
ret
lds
xchg
in
out
pop
jns
inc
std
and
mov
cld
mov
xor
jno
fwait
inc
rcrl
cmp
inc
dec
insl
shlb
mov
xchg
cmp
mov
cmc
push
push
mov
push
sub
call
sar
mov
fwait
xchg
pop
mov
xchg
and
push
inc
mov
and
jae
ja
cmp
mov
push
pop
inc
or
cld
stos
jle
mov
pop
pushf
mov
dec
push
push
or
stos
inc
pop
test
push
aam
ss
push
sbb
stos
sub
ja
pop
adc
ficompl
sar
lea
aam
add
cmp
repnz
adc
mov
fucom
mov
xchg
repz
xchg
add
shl
imul
mov
movsb
pop
and
stos
add
jne
rcll
and
push
scas
inc
mov
lods
out
xor
dec
addl
lock
fucom
add
testl
dec
pusha
addr16
xor
outsl
lret
repnz
cmp
inc
aas
push
daa
xchg
cmp
sub
and
jne
dec
sbb
xchg
dec
pop
ss
xchg
mov
lds
dec
testl
adc
jmp
dec
jbe
outsb
lds
fstpl
push
xchg
sub
push
add
xchg
push
mov
stos
and
lock
pop
jns
icebp
xor
push
adc
pop
push
in
jge
xchg
data16
aam
jnp
loop
inc
stc
dec
sbb
leave
insb
repnz
inc
sbb
xor
lock
leave
or
pop
lods
xchg
pop
or
leave
into
fsubrl
repnz
mov
ljmp
loop
add
iret
in
dec
xor
fsubrl
in
stc
ret
or
mov
pusha
adc
mov
daa
mov
popf
add
in
push
push
aam
into
test
leave
adc
jmp
mov
dec
push
add
jg
cs
push
sti
dec
mov
xor
imul
cmp
lahf
mov
loop
outsb
dec
rep
or
push
add
xchg
cmp
push
push
mov
int3
jg
movsl
adc
popa
adcl
mov
nop
mov
negl
push
jg
movb
sub
xchg
sub
xchg
pop
lods
add
mov
imul
je
icebp
pushf
cmpb
inc
jmp
pop
testl
mov
xor
lcall
sbb
movsw
fsubrs
add
jg
addr16
and
adc
xor
je
push
cmp
xchg
pop
add
mov
pop
adc
outsl
jnp
mov
xor
orl
sub
bsr
and
ja
adc
push
xchg
cmp
aas
sbb
or
xchg
enter
mov
lcall
test
xor
lods
add
aam
rorl
mov
in
add
pop
xchg
lods
mov
push
fcoml
cmp
cmp
lods
std
inc
jle
cmp
inc
sub
pop
leave
sub
lea
jp
leave
aas
orb
popf
xor
sbb
enter
shrl
sub
and
or
daa
loop
dec
xchg
cmc
testl
mov
sarl
sbb
adc
das
xor
jmp
and
sbbb
cmpsl
les
and
aam
xchg
insl
mov
mov
mov
and
add
fs
test
pushf
je
cmp
jnp
outsl
and
sub
addr16
add
leave
mov
inc
mov
mov
xchg
push
jo
sti
movsb
pop
xchg
jns
fdivrl
mov
xchg
dec
out
push
sahf
sbb
pop
in
stc
push
adc
cmp
vpsubusb
push
jo
jecxz
imul
inc
mov
test
sarb
ret
lods
mov
xchg
les
cmp
fidivs
faddp
scas
insb
adc
cltd
or
in
fst
push
add
pop
clts
or
mov
push
in
mov
pusha
subb
out
lods
imul
repz
loope
stc
cs
lds
sub
push
add
mov
andl
ret
out
mov
rorl
jl
imul
cmp
adc
sub
mov
jmp
out
xchg
jno
xor
adc
aad
mov
add
lods
pop
push
adc
sbb
adc
sahf
fldl
pushf
cs
arpl
aad
push
fldcw
out
dec
xchg
xor
mov
adcb
fstpt
jmp
test
adc
lcall
push
insl
ret
insl
lds
and
xchg
pop
aad
push
bound
loopne
sbb
xchg
hlt
or
jmp
and
cmc
add
fsubrs
seta
dec
insb
outsl
in
fldt
fnstenv
scas
push
sarb
pushf
jle
jo
mov
xchg
bsr
les
xor
hlt
mov
and
mov
int3
icebp
mov
inc
pop
dec
iret
std
pop
stos
push
aam
ljmp
mov
and
xchg
cmp
clc
ljmp
mov
jg
in
hlt
sarl
cwtl
lock
dec
flds
lret
push
and
fisubrl
addr16
icebp
xor
popf
dec
pop
mov
cmp
xchg
sub
push
cmp
mov
leave
jae
mov
mov
mov
insb
faddl
adc
rorb
xor
imul
jp
inc
mov
or
mov
subb
testb
lock
add
jbe
sub
fstps
sub
cs
aam
mov
lds
lcall
jp
mov
je
or
add
push
cmp
xchg
mov
sub
movsb
mov
es
dec
dec
inc
div
popf
mov
sbb
fcomps
mov
bound
mov
xor
sub
ja
mov
xor
adc
inc
fprem
pop
sbb
sbb
pop
lcall
fiadds
lock
inc
sub
gs
cmp
mov
out
jle
xchg
xor
add
mov
iret
mov
inc
dec
or
scas
jb
jg,pt
jp
fistps
dec
jo
cmp
push
movsl
mov
xchg
xorb
and
xlat
xchg
inc
cmp
mov
push
movsl
roll
lods
sbb
inc
push
mov
jb
pop
cmpsb
test
lret
es
mov
push
pop
adc
adc
pop
xchg
mov
imul
jmp
mov
jns
cmp
dec
jb
ficomps
mov
sub
stc
cltd
movsb
sahf
movb
cmp
dec
xchg
pop
or
loopne
repz
mov
xchg
fcomi
add
mov
dec
jns
es
mov
push
jg
fimull
cmp
push
xchg
mov
emms
inc
fbld
mov
xchg
mov
lods
xchg
xor
pop
xchg
and
mov
mov
mov
jb
lods
mov
mov
mov
mov
jb
subl
xchg
push
xchg
popf
add
cmp
or
stc
jbe
jno
adc
xor
mov
fnstcw
pop
xor
pop
out
sub
insb
repnz
inc
mov
xchg
xor
sub
jns
or
popf
push
fldenv
movsb
sub
push
and
shll
sar
std
sub
add
jp
daa
dec
adc
mov
jmp
imul
outsb
imul
fsts
push
inc
add
lods
decb
mov
int
data16
jl
xor
je
aad
push
mov
fsts
sub
add
fnstenv
ja
loope
lahf
pusha
stos
jp
fbstp
std
jae
test
inc
iret
popa
cmp
mov
iret
or
dec
arpl
add
loope
jp
xorb
adc
sbb
cmp
cmp
or
loopne
sub
or
sub
adc
xchg
xchg
xchg
out
imul
loopne
xchg
cmpsl
mov
pop
lret
setg
test
les
jnp
push
imul
mov
fwait
aaa
inc
call
sub
divb
push
lock
int3
insb
sub
cli
subl
fistpll
and
test
int
into
xor
psubsw
iret
call
xor
fbld
movsl
jmp
sbb
popf
cmp
jbe
sub
dec
test
xor
call
gs
fisubrl
pop
outsb
push
mov
test
pushf
mov
sub
ds
lea
mov
sub
sbbl
jae
dec
test
fiaddl
les
imul
dec
or
dec
cmpsl
fildll
jo
mov
or
aas
fwait
pop
pop
add
pop
add
cs
and
fbstp
bound
mov
cmp
inc
and
fs
jne
in
sbb
popf
sub
and
add
fsubr
in
aaa
jne
inc
adc
out
in
in
mov
add
dec
orb
mov
push
in
xor
mov
pminub
xor
jle
mov
fisubl
insl
lods
lds
mov
scas
and
pusha
sti
sbb
scas
pop
mov
ret
sbb
pop
enter
mov
adc
xor
lods
inc
jecxz
push
out
fbld
jl
sub
adcl
clc
pop
aad
lock
xlat
std
push
testl
scas
inc
cmp
dec
sub
or
xchg
cmc
scas
jae
sbb
stc
mov
in
nop
mov
push
fsubrs
arpl
dec
or
ret
and
inc
int
imul
mov
mov
mov
ss
or
xor
mov
sarb
enter
pop
outsl
jp
push
sbb
xchg
popl
xor
loope
inc
pop
adc
add
cmpsl
jbe
ret
and
fisubrl
xchg
xchg
cmp
xchg
bound
fbld
pop
xchg
jnp
clc
arpl
inc
mov
dec
xchg
push
jmp
daa
mov
mov
mov
add
es
cs
sub
popa
out
dec
nop
lahf
roll
cli
inc
std
fisubl
inc
and
sub
imul
loope
push
call
ds
movsl
inc
dec
inc
pop
pop
pop
fadds
jp
xchg
movsb
repnz
out
add
mov
push
ljmp
adc
aaa
fnstcw
cld
cmp
dec
sti
push
and
lcall
test
or
cld
xchg
mov
cmc
and
pusha
inc
dec
lcall
das
insl
and
repz
outsl
lret
push
popl
lock
xor
mov
int3
loope
adc
int3
push
mov
cmpb
sbb
mov
jge
fistpll
shrb
mov
insb
sub
push
out
xlat
add
mov
testl
repnz
test
insl
push
je
jo
xchg
mov
mov
out
and
adc
in
push
or
ss
push
mov
xchg
jbe
leave
inc
repz
xor
sub
inc
jge
lret
cmp
insb
lret
add
xchg
es
out
sub
and
out
js
cld
das
inc
repz
dec
lea
lahf
fsubr
in
mov
cmpsb
mov
mov
arpl
cwtl
fiadds
jno
cmpsb
mov
pop
mov
dec
pop
inc
xchg
std
jb
mov
insb
repz
or
pop
fidivl
testl
push
xchg
jne
sub
ss
or
into
mov
and
mov
push
xchg
fmuls
inc
cmp
adc
inc
or
inc
dec
mov
jl
sti
insb
xchg
lods
loop
in
and
mov
fcmovb
test
sbb
xor
or
inc
leave
pop
push
xor
cmp
cmp
shll
mov
insb
in
adc
lret
mov
call
dec
filds
popf
jo
jecxz
sub
bsf
aad
inc
mov
negb
fsub
hlt
std
outsl
jo
add
lret
rcr
push
test
jae
jne
pop
shrl
fcmovne
rcrl
push
imul
xor
mov
lret
push
sar
stos
add
lcall
fmulp
push
fs
rcl
out
xor
in
jmp
push
jecxz
push
push
push
movsl
add
lea
ret
adcb
add
js
int
adc
push
inc
sbb
std
adc
dec
pop
ss
or
nop
xchg
mov
dec
out
cld
out
adc
call
sbb
ret
fistpl
scas
xchg
out
adc
push
ss
xchg
lcall
movl
and
addr16
adc
xchg
xchg
dec
mov
lret
mov
stos
dec
pop
out
sub
aad
jmp
jae
or
sbb
and
scas
lea
mov
popa
movsl
push
xchg
or
mov
loope
cmp
pop
mov
sbb
movsb
fisubs
jb
jmp
cmpsl
cmpsb
out
mov
pop
clc
data16
iret
sbb
lcall
xchg
xchg
gs
adc
sbb
and
lret
loopne
sbb
adc
movsl
arpl
mov
push
cmc
xchg
xchg
lds
pop
pop
cmpl
sub
sbb
shll
xor
aas
outsl
in
jns
div
dec
sub
in
or
popa
sbb
push
ljmp
les
sbb
loop
pop
xchg
in
sar
xchg
inc
pop
pusha
or
jno
popl
fsubrl
pop
adc
ss
sbb
mov
dec
cmp
fisubrs
mov
or
add
fmuls
data16
enter
mov
jmp
jbe
into
lret
leave
inc
rcll
in
sub
dec
mov
jge
or
inc
fs
xor
nop
xor
xchg
loop
mov
cld
xchg
and
mov
pop
fisttpl
jae
movsl
adc
popf
lret
cli
add
sub
stos
xor
popa
roll
xchg
jno
pop
cmp
xor
sub
and
jp
xor
mov
push
test
mov
or
clc
push
mov
pop
imul
lret
mov
push
in
cmp
jg
in
or
lds
icebp
sub
ja
out
adc
in
arpl
jl
and
arpl
ret
push
push
sub
pusha
cmpsb
stos
insl
push
dec
add
data16
dec
add
pop
out
adc
adc
xchg
inc
mov
out
ret
add
mov
mov
inc
mov
idivb
jmp
loop
pop
cld
jmp
mov
ljmp
jae
cmp
add
dec
shl
int3
mov
push
jo
movsb
mov
pushf
daa
stos
cli
pop
mov
mov
call
mov
mov
inc
popf
xor
inc
insb
dec
fmuls
mov
out
movsl
or
adc
mov
mov
jnp
sub
dec
lcall
pop
dec
call
cmp
bswap
outsb
xchg
push
in
and
cwtl
cs
leave
mov
cmpsb
add
inc
mov
sbb
or
or
add
lods
mov
in
in
std
mov
mov
fisttps
mov
fs
mov
lret
incb
loope
imulb
dec
push
push
jo
cmp
mov
sbbl
sub
pop
mov
push
js
inc
dec
pop
cs
mov
mov
mov
sti
adc
add
adc
push
js
inc
mov
mov
aad
cmp
sbb
inc
je
sbb
lds
xor
fwait
out
mov
add
aas
jmp
or
dec
sti
stos
jg
and
pop
fwait
test
mov
mov
inc
pop
push
xor
mov
xor
push
pop
xchg
and
xlat
test
sbb
inc
mov
or
es
mov
repnz
movsb
xor
arpl
lods
mov
pop
dec
test
jl
pop
rclb
sbb
pop
dec
mov
popa
shll
adc
test
xchg
jne
fwait
dec
push
pop
pushf
push
cwtl
pop
mov
xchg
xor
jns
fs
lds
cmp
arpl
push
xchg
aam
insb
xlat
mov
movsl
mov
aas
cwtl
mov
inc
adc
pusha
xor
cld
insl
dec
push
je
xchg
addr16
rclb
insl
sub
xchg
push
lock
inc
adc
dec
mov
mov
jne
pop
aam
test
stc
aaa
in
and
xchg
adc
aaa
sub
mov
outsl
aad
push
jp
xlat
nop
imul
or
or
out
mov
inc
jns
pop
pop
cmp
cmpsw
test
pusha
pop
fs
shlb
mov
mov
mov
ds
jg
scas
pop
and
out
dec
inc
pusha
call
add
jb
sub
gs
mov
enter
pop
cmc
cwtl
push
les
out
mov
rclb
xlat
cwtl
adc
cwtl
loopne
jns
test
pop
mov
cmp
ficomps
cmp
ss
out
fstpt
in
test
pushf
roll
xlat
clc
adc
leave
lea
add
sub
xor
xor
mov
mov
loop
aas
lods
icebp
in
aad
testl
lods
outsl
cmp
adc
dec
adc
daa
sti
movsl
mov
sbb
pusha
lock
pop
in
int
pop
lahf
adc
call
fidivrs
dec
loop
les
mov
mov
and
pop
repz
adc
out
dec
inc
es
jns
cld
push
jb
inc
test
test
or
xchg
jmp
xchg
fcoms
cld
pusha
pop
mov
adc
fimuls
sbb
cmp
inc
xor
lods
pop
sbb
jge
sbb
add
insb
cmp
cltd
sub
xor
mov
xchg
int
stos
jl
lea
cmp
imul
xchg
vcvtdq2pd
sub
mov
jne
add
leave
icebp
fimuls
shlb
xlat
mov
lods
or
push
sbb
sahf
inc
loope
iret
cmp
enter
jge
mov
pop
and
sub
xchg
sub
ret
sbb
adc
xor
mov
leave
cmp
adcb
sub
out
negb
stos
loopne
test
xchg
adc
test
stos
sub
in
push
pop
mov
scas
jns
in
ror
mov
lret
mov
addl
inc
es
adc
jg
push
xchg
lcall
inc
cmp
cmpl
mov
jae
sbb
daa
loop
cld
insl
aad
add
pop
jl
jg
add
orb
pop
pop
cmc
xor
out
mov
imul
xor
jno
and
jnp
cmp
add
dec
mov
pusha
inc
push
pop
dec
dec
cmp
sub
sbb
or
stc
cli
jmp
lret
test
mov
imul
cmp
sub
sbb
or
cli
jmp
lret
test
mov
imul
cmp
sub
sbb
or
cli
jmp
lret
test
mov
imul
cmp
stos
sbb
jmp
mov
data16
push
mov
sub
imul
ror
lahf
mov
mov
pusha
lret
jo
push
jmp
adc
sub
jnp
imul
stos
adc
add
jno
inc
jmp
shll
xchg
dec
loope
icebp
push
rcll
frstor
sti
daa
xchg
sub
pop
in
sub
jg
pop
hlt
rcrb
push
jg
push
int
pop
and
call
ficoml
add
mov
jl
dec
out
pop
pop
xor
inc
incb
pop
jno
sub
data16
sbb
push
stos
push
shrl
adc
and
pop
push
out
and
inc
dec
or
mov
pop
sub
movsb
inc
xchg
jle
pop
loopne
icebp
jp
imul
stos
push
xchg
push
jno
xchg
out
xor
push
sahf
popa
testb
jmp
movsb
push
push
aas
nop
and
pop
and
test
sub
lret
popa
stos
sub
cmpsl
les
mov
decb
pop
arpl
jae
mov
jo
and
mov
inc
xchg
pop
loope
icebp
jnp
rcl
imul
mov
mov
inc
pop
imul
test
or
jmp
lret
adc
lods
xor
int
fnstsw
repnz
sbb
mov
movw
out
and
add
dec
in
jmp
jnp
imul
and
adc
popa
lret
jno
inc
jmp
sbb
sub
jnp
imul
and
adc
popa
lret
jno
inc
jmp
sbb
je
pop
adc
jb
xchg
sysexit
fdivs
cmp
pushf
jae
dec
add
xchg
cli
pop
mov
nop
pop
xor
xor
in
enter
aaa
icebp
cmp
addl
in
ret
push
sahf
popa
mov
out
ret
or
gs
sbb
pop
xor
xchg
sub
mov
imul
pop
jbe
je
jae
pop
pop
and
decb
out
test
jecxz
inc
fnsave
gs
cmpb
inc
or
insb
fsubr
aaa
jecxz
mov
xchg
in
rcrb
jae
movsl
dec
aaa
dec
sub
cli
jge
xchg
jle
sbb
imul
sbbb
push
mov
clc
push
cmp
imull
jno
xchg
jo
jno
fidivs
xlat
test
push
or
test
outsb
pop
push
insb
sbb
mov
cmpsl
cmp
cmpb
out
lahf
into
fs
inc
mov
inc
xor
jg
inc
aam
xchg
pop
jle
mov
cs
inc
ret
pop
cmp
fsubl
cmp
jbe
pop
adc
inc
hlt
jp
lcall
shl
pop
mov
xchg
stos
cmpsb
pusha
icebp
lret
pop
shll
ret
inc
jb
mov
jp
addr16
pop
lret
mov
or
fcompl
jo
sbb
test
sbb
push
hlt
adc
or
arpl
stos
shlb
rcl
mov
iret
adc
xchg
xchg
push
push
lods
xor
push
cwtl
es
mov
in
insb
mov
sbb
jl
stos
iret
mov
pop
lcall
cmp
push
int
jnp
test
inc
leave
fmull
adc
cld
xchg
mov
enter
cmp
ja
movsl
insb
mov
inc
or
jg
dec
xchg
or
pop
push
inc
iret
mov
aaa
ret
lods
add
test
popa
xor
or
mov
or
lods
mov
mov
addb
test
push
jecxz
int
ret
test
or
cmp
sub
insb
adc
and
cmpsb
popa
cmp
mov
cmc
push
pop
aaa
pop
sbb
push
push
lods
and
push
int3
std
ret
mov
scas
movsb
in
xor
fists
outsb
popf
fdivrl
cmp
push
nop
push
sub
or
sbb
push
sub
dec
cmpl
push
jge
shlb
mov
sarb
and
or
jmp
xchg
mov
and
pusha
mov
roll
ret
shrb
sarb
iret
ficomps
pushl
aam
pop
xchg
stos
or
cmp
out
mulb
pop
insl
scas
cmpsl
adc
mov
popa
mov
jl
inc
dec
add
dec
jo
icebp
and
xchg
daa
jb
jle
mov
int
xchg
push
stos
into
out
aam
sbb
stos
lods
fcmovu
mov
lds
outsl
adc
cli
pop
mov
cmp
mov
pop
sub
jg
add
sub
mov
pop
or
adc
add
in
sub
mov
movsl
outsb
scas
sti
xchg
add
dec
test
ret
adc
lret
loope
xchg
cmp
repnz
dec
outsb
mov
roll
jb
imul
bound
xchg
stc
dec
incb
jb
jbe
shlb
pop
stc
dec
xor
and
cs
xchg
scas
jge
mov
mov
scas
pop
cmp
mov
sub
femms
inc
jns
idivb
gs
cmpb
clc
in
add
stos
inc
loopne
push
add
and
inc
mov
fstpt
mov
rorb
mov
fsubr
mov
fdivrs
inc
xor
loope
out
push
imull
mov
fsubrl
test
or
inc
std
pop
add
pop
int
sub
fsubrs
loopne
cmc
minps
mov
push
add
pop
pop
jmp
sub
out
sub
mov
jmp
mov
fistl
ljmp
lret
jae
clc
imul
mov
sbbb
adc
shr
push
jmp
xor
in
jp
mov
inc
inc
mov
movsl
push
imul
xchg
inc
outsb
dec
xor
lret
xlat
fcoms
pop
jo
dec
clc
mov
outsl
push
dec
jo
loop
js
jl
pop
pusha
fmull
lcall
mov
daa
popf
jno
int
jnp
add
fs
mov
cwtl
sbb
xor
cltd
inc
jb
adc
xchg
stos
mov
shrl
or
fxch
xchg
push
adc
sarl
mov
std
sti
movb
xor
mov
cmp
pop
addr16
or
inc
sti
fs
xor
or
pushf
sub
push
sarl
xor
lea
ret
mov
or
xchg
stos
ret
cwtl
inc
insl
or
push
pop
mov
push
sbb
lock
cmp
push
sti
pop
shl
mov
add
mov
scas
nop
out
pop
or
mov
ret
xchg
fwait
nop
je
imul
add
mov
out
mov
lock
punpcklwd
fwait
pop
xor
hlt
xchg
mov
cmp
jne
add
mov
xchg
xor
adc
loop
in
dec
pop
jb
pop
imul
test
stos
pop
mov
mov
js
push
and
mov
push
outsl
pop
jae
push
add
and
mov
cmp
repnz
cmp
mov
mov
xor
cmpsl
push
mov
data16
xor
xor
cwtl
pushf
rolb
add
das
inc
xchg
outsl
loope
sbb
and
sbb
scas
ffreep
xchg
inc
sahf
cmp
aaa
pop
sub
std
mov
movsl
aam
dec
adc
adc
js
arpl
movsl
xchg
iret
dec
clc
mov
cwtl
jns
fldenv
je
in
lock
rcrl
or
pop
lods
out
adc
mov
and
lret
mov
inc
adc
jbe
push
mov
cwtl
push
add
lahf
push
js
mov
ds
or
mov
inc
lods
rcr
mov
shrl
shlb
xchg
sub
repnz
mov
stc
rorb
loopne
pop
dec
sbb
nop
sarl
adc
int
and
and
push
out
dec
or
jne
sub
pop
jb
or
nop
je
sbb
shrl
add
adc
fwait
xchg
test
fwait
sub
fisubl
adc
mulb
fsubl
xor
outsb
sbb
in
mov
in
mov
mov
jns
sbb
dec
rorb
cmpsb
fidivrl
jp
and
aas
pushf
int3
out
out
mov
mov
faddl
mov
lahf
sahf
dec
jns
jl
adc
adc
push
in
stc
es
mov
mov
inc
push
fisttps
rol
ljmp
dec
adc
inc
push
sub
inc
cli
pop
imul
xor
iret
sub
cmp
call
jne
inc
sub
repz
fs
jne
adc
incl
dec
jns
scas
inc
and
dec
mov
sbb
dec
repz
rcrb
sahf
ret
jp
into
mov
ffree
scas
movsl
adc
cmp
rcll
or
pushf
sbb
bound
cmp
addr16
fst
pop
jbe
jns
inc
icebp
sub
insl
ds
cmp
xlat
and
neg
addl
ret
pop
stos
inc
icebp
movsl
dec
xchg
lcall
push
xor
aaa
jle
jge
xchg
add
cmp
or
cmp
mov
subb
xor
jge
popf
push
cmc
push
pop
sbb
add
sub
roll
int
dec
xorl
outsb
sbb
push
inc
xorl
mov
outsl
addr16
mov
or
mov
pop
xchg
je
add
pop
mov
or
lahf
arpl
inc
jle
or
pushf
mov
aad
testl
pusha
xchg
nop
ds
aad
ds
clc
push
add
inc
sbb
pop
push
or
mov
sbb
fdivl
xor
stos
lods
flds
and
cltd
test
push
enter
fadds
push
xor
sarl
inc
cld
mov
xchg
jecxz
mov
add
repnz
and
jo
xchg
sub
jl
jns
shrb
orb
js
dec
xchg
jae
out
jle
add
push
xchg
mov
jl
je
mov
xor
cmpsl
xchg
stos
mov
jl
pop
das
dec
xor
xor
sbb
xchg
inc
std
mov
pop
out
and
xchg
cmp
imul
rcl
nop
cmp
dec
inc
into
pop
fisttps
xchg
xchg
or
jo
icebp
bswap
mov
cmp
bound
sub
xchg
or
sarl
mov
jl
inc
push
test
fdivl
pop
fs
je
dec
movsl
and
push
leave
jae
loope
pop
cmp
iret
and
cltd
cmp
mov
mov
in
dec
adc
pop
je
call
cmp
sahf
sub
icebp
lahf
pushf
jb
sub
cmpsl
outsl
out
and
pop
mov
and
es
pop
sti
jg
and
clc
dec
rcrl
cltd
outsb
xchg
inc
pushf
pop
or
fnsave
repnz
xor
aas
in
pop
notl
clc
inc
clc
mov
test
mov
je
adc
cmpsl
ret
insb
pop
mov
ss
dec
cli
in
mov
in
jns
rep
fisttps
clc
cs
push
div
xor
mov
mov
push
popa
mov
jge
jecxz
or
test
and
or
divl
pop
mov
fwait
bound
aam
loope
in
jge
pop
stos
insb
inc
sbbb
inc
mov
jg
lret
das
aam
and
mov
pop
leave
pop
pop
aad
xchg
pusha
cli
mov
sbb
cltd
fsubs
sub
sbbb
shll
in
adc
push
fidivs
les
leave
mov
push
test
jns
imul
lahf
mov
fcmovbe
xor
mov
mov
mov
pop
fwait
aas
push
mov
shll
pop
sub
mov
pop
mov
lret
fdivl
xchg
lret
push
int
call
xchg
les
and
inc
lods
orl
lcall
testl
mov
push
cltd
cmp
ffreep
ret
faddl
jmp
xchg
xor
dec
aaa
xchg
dec
pop
inc
jecxz
pushf
inc
cmp
push
sahf
inc
pop
jno
cltd
xor
inc
mov
jp
sub
mov
xchg
movsl
std
adc
sub
sbb
adc
mov
arpl
clc
and
and
jne
sub
bnd
sbb
mov
push
hlt
jge
lods
add
mov
loop
std
push
or
push
repz
xor
cmc
sahf
sbb
jle
dec
lds
rol
push
daa
cld
xchg
out
mov
loope
shrb
pop
repnz
call
cs
pop
mov
pop
scas
add
fdivs
add
xor
ret
movsl
in
fs
sbb
mov
lcall
pop
xchg
xchg
punpckhwd
es
stc
add
inc
jno
daa
lods
ret
push
and
fmul
push
repnz
incb
adc
mov
rcr
jmp
jae
bound
push
fnstcw
pop
hlt
jb
fsubrp
mov
pop
lret
jmp
or
push
fs
pusha
push
pop
add
or
aad
fldenv
mov
jb
mov
pop
lock
add
out
mov
pop
xchg
aam
int3
xlat
loopne
movsb
insb
push
test
dec
pushf
adc
sub
ds
loopne
stc
xor
xor
pop
out
test
mov
push
jbe
jb
jmp
inc
mov
fistl
repz
in
mov
mov
loop
sub
dec
push
cmpsb
enter
sbb
out
stos
xor
mov
xchg
mov
popa
outsl
sub
jle
rcrl
fmul
lock
sbb
addl
outsl
aad
push
cld
ficomps
jp
jns
xchg
cmpsl
das
inc
subb
addb
aas
scas
sub
sbbb
and
or
or
int3
cmp
int
movsb
pop
pop
lock
and
inc
shr
push
aaa
mov
xchg
or
mov
sbb
cwtl
js
add
stc
subb
mov
xchg
adc
dec
test
lods
popf
stos
into
pop
imul
test
loopne
add
mov
shll
mov
add
add
not
insb
out
and
loopne
fildll
ret
adc
mov
addr16
lcall
sub
loope
sbbb
adc
add
sbb
or
aas
ljmp
cwtl
popa
xchg
into
dec
add
jo
jnp
add
js
rorb
mov
addr16
xor
jo
outsl
or
ret
fsub
lock
push
mov
pop
call
insb
les
mov
xor
mov
pop
xor
bound
fistl
das
sub
faddl
cmp
pmulhw
push
or
mov
aas
aam
cld
idivl
faddl
pop
into
lock
lret
scas
insl
fwait
repnz
in
pop
mov
fwait
mov
jae
cwtl
ds
cmp
cmc
mov
push
pop
xor
fsubrp
and
inc
mov
dec
and
dec
div
adc
sarb
pop
sub
call
ret
aad
stc
jmp
add
gs
aad
mov
xchg
in
push
out
js
sbb
pop
ja
push
and
jmp
cmc
loope
push
cmp
pop
push
mov
call
pop
unpckhps
mov
cmp
jmp
mov
sbb
testl
mov
inc
mov
js
push
faddl
xchg
jmp
movsb
sbb
jle
out
sbb
pop
mov
enter
mov
stc
mov
fld
adc
add
in
dec
sbb
jo
in
dec
jecxz
dec
fs
xor
cmp
stos
xchg
push
jno
jae
mov
and
jbe
loope
mov
out
insl
push
and
xor
imul
popl
fistl
mov
jno
and
inc
push
flds
dec
int3
test
fisttps
in
or
cli
lods
outsl
ja
inc
je
pop
in
pop
mov
int
addr16
inc
sbb
mov
xor
int
in
dec
iret
sbb
sub
cmpsl
sbb
out
jl
out
lods
cmp
push
xor
nop
fidivrl
push
push
test
mov
lret
fimull
jo
mov
push
and
movsb
dec
mov
or
inc
dec
enter
sub
mov
fistps
dec
lds
pop
mov
inc
iret
jmp
mov
dec
xlat
or
adc
ss
sarb
mov
int
xor
dec
cwtl
aam
add
pop
cmp
mov
lods
and
imul
cmp
cwtl
xcrypt-cfb
cmpsl
cmpsl
jge
mov
movsb
pop
daa
inc
push
cmpsb
xor
push
sahf
lahf
xadd
loopne
push
test
cld
jle
and
fwait
les
adc
pop
adc
mov
and
dec
fmuls
popf
out
mov
out
addr16
mov
push
jmp
inc
pop
xor
insb
loop
lods
sahf
cli
rcl
mov
ja
arpl
add
jo
mov
xchg
push
int3
jns
xor
xchg
inc
imul
xchg
or
addr16
cs
and
jo
sub
fdivs
popf
mov
test
fsubl
push
idivl
ds
lods
test
and
iret
and
xchg
push
xor
xchg
push
out
icebp
pop
cmp
xchg
mov
pop
mov
inc
out
loopne
and
sub
cmp
ds
notl
mov
test
adc
inc
and
das
jle
mov
dec
gs
or
pop
dec
mov
add
das
icebp
nop
jbe
data16
inc
ficoml
je
sub
in
mov
popf
jmp
rcrl
xor
push
adc
daa
adc
pop
and
mov
or
mov
repnz
or
inc
xchg
cmp
fs
std
aam
sahf
sub
pop
ljmp
cmp
or
push
mov
or
pop
adc
mov
xor
push
sbb
inc
fimuls
test
lret
pop
dec
std
pop
fmulp
mov
icebp
mov
jecxz
adc
daa
sbb
test
mov
loop
cmc
jae
push
mov
in
mov
adc
lock
movsb
fldcw
test
loope
and
jb
xchg
xchg
pusha
mov
xor
ja
push
in
loop
insb
ret
dec
mov
pop
in
sti
pop
mov
andb
cld
ss
cwtl
enter
push
dec
inc
inc
lds
pop
insl
xchg
sub
jmp
sti
or
lds
scas
push
mov
sub
push
and
bound
dec
mov
loop
jl
xor
jno
push
in
and
stos
daa
or
outsl
cmp
xor
int3
push
lock
inc
in
out
rolb
jno
hlt
xchg
sbb
pop
shrl
sbb
nop
shll
jo
lock
cs
bound
fcomi
and
xor
out
rorl
add
in
mov
pop
pop
stos
sbb
lock
add
xchg
scas
pop
add
loopne
les
mov
shlb
or
scas
aaa
add
sbb
inc
xlat
jnp
or
mov
inc
cli
inc
jmp
shlb
out
jne
mov
lea
outsl
movsl
in
xorl
rorb
mov
sbbl
je
xor
mov
xor
repz
scas
push
pop
aas
jns
in
test
popa
cmp
es
or
mov
cwtl
test
mov
and
xlat
sbb
outsl
stos
loope
adc
test
mov
aam
pusha
mov
lock
lret
sub
sbb
jecxz
xor
lock
or
jne
jnp
lret
push
sub
cmp
subl
fidivrs
pop
iret
ret
icebp
aas
daa
aam
inc
out
mov
bound
scas
icebp
andl
jge
mov
and
xchg
dec
pop
in
cs
or
jecxz
imul
pop
push
gs
jb
test
sbbl
sub
je
and
nop
and
movsl
inc
adc
icebp
bswap
inc
movsb
imul
bound
jge
inc
rclb
pop
mov
adc
cmp
jl
out
and
jl
push
fisttps
repnz
pop
jb
inc
sub
adc
fwait
bound
iret
xor
or
js
cld
mov
mov
xor
xchg
cmp
hlt
lods
movsb
addr16
int3
loopne
add
dec
cmpsl
inc
and
pop
iret
jp
mulb
jmp
xor
ret
dec
xor
mov
stos
int3
push
inc
mov
cs
xor
xchg
jecxz
or
fnsave
int
stos
ja
mov
mov
add
pop
out
movb
fimuls
jbe
inc
lret
movsl
mov
mulb
nop
dec
or
in
movsl
pop
sub
in
cmp
cmp
jne
jns
inc
divb
mov
leave
jg
or
mov
sub
popa
cld
jne
jecxz
jbe
xchg
add
xchg
es
xchg
push
in
nop
lcall
imul
bound
dec
xchg
iret
rcrl
cld
mov
xlat
add
add
frstor
adc
cmp
lea
scas
jno
es
aad
add
cs
in
and
fcomip
nop
mov
and
and
cli
push
cld
std
xor
dec
in
jmp
insl
sahf
imul
lds
int3
xor
ljmp
lret
test
cmpsl
jl
cmpsb
cltd
add
imul
cmpsb
cs
aad
clc
inc
jnp
push
lahf
push
les
lods
pop
scas
xor
push
sbb
fldenv
test
subl
into
jne
push
mov
and
push
fcoms
cli
shlb
dec
into
sahf
add
les
jo
enter
push
adc
rorl
adc
jo
cmpsb
or
jne
cltd
data16
add
in
int3
mov
mov
inc
xchg
jae
data16
and
cmp
or
mov
lock
lods
adc
lock
xchg
in
pushf
ret
or
add
cmpb
lret
dec
popa
cmc
movb
stc
into
mov
xorl
icebp
jnp
imul
and
adc
popa
lret
jno
inc
jmp
sbb
sub
jnp
imul
and
adc
popa
lret
jno
inc
jmp
sbb
sub
jnp
push
lahf
and
adc
popa
shlb
inc
fistl
mov
add
jnp
jmp
fwait
and
add
mov
adc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
pop
jp
insl
out
shll
adc
aaa
or
add
add
push
add
pop
add
insl
add
add
add
push
add
add
add
add
add
insl
add
add
add
push
add
add
add
ds
add
add
mov
mov
sbb
add
stos
add
inc
add
add
add
add
add
mov
add
add
add
add
lods
add
add
fadds
data16
add
xchg
add
add
add
add
add
cmp
xor
xchg
add
add
add
add
add
insl
add
add
push
add
add
add
add
add
add
add
add
cltd
add
add
add
add
add
add
add
add
add
lods
add
add
add
cmp
jne
sub
outsb
pop
adc
arpl
push
add
add
add
lret
add
add
add
mov
add
add
add
add
stos
add
add
adc
stos
add
mov
add
fildl
push
add
add
add
add
add
add
mov
testl
lret
add
add
add
adc
inc
add
and
stos
add
add
cmp
mov
add
add
adc
add
ret
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
and
repnz
loopne
insl
add
add
add
add
add
add
add
mov
add
add
add
dec
add
add
mov
mov
add
add
cltd
add
mov
add
add
add
insl
add
add
add
add
add
pop
add
add
add
add
add
add
push
mov
add
add
add
sbb
nop
add
pop
add
add
add
add
add
add
adc
fwait
add
add
add
add
add
push
clc
add
scas
add
sbb
cltd
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
xor
add
cmp
add
test
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
inc
add
add
add
popf
add
add
add
add
add
add
testl
add
lods
add
add
add
add
dec
xorb
xor
mov
cmp
sbb
addr16
int3
lods
sahf
sbb
cmp
std
adc
xchg
jge
fisttpll
sub
shlb
xor
xorl
dec
ret
dec
mov
iret
push
in
test
mov
pop
pop
sbb
jge
jnp
lds
imul
push
jno
jecxz
or
dec
daa
loopne
dec
mov
jg
or
sbb
daa
clc
sarl
icebp
addl
mov
or
and
les
test
mov
adc
popa
in
and
xor
fs
xchg
adc
jp
popa
fwait
lret
cmp
mov
dec
mov
repz
stos
and
divb
cmpsl
inc
mov
cmpsb
mov
or
inc
cmp
fucom
and
sub
push
push
mov
sub
dec
gs
jbe
dec
xchg
sub
lods
lods
lret
aad
clc
add
inc
gs
daa
fs
lret
cmp
ret
mov
aas
movsl
sbb
in
sub
jle
pop
pop
sbb
push
fldt
sbb
enter
pop
fsts
lds
je
mov
aad
cmp
cmp
pop
pop
inc
adc
in
je
add
jecxz
je
mov
aas
or
in
dec
lret
sarb
mov
stos
cmp
pop
repnz
sub
fistpll
loopne
xlat
js
faddp
hlt
xchg
mov
stc
sub
cs
fmul
movl
sarl
lret
in
add
xchg
pop
cmpsl
jl
sahf
add
xchg
jecxz
adc
into
mov
out
std
movsl
mov
jo
test
out
loopne
in
push
aam
cmp
pop
xor
notl
xchg
pop
cmp
fsin
xchg
loope
mov
sub
aam
jb
std
dec
aad
rolb
movq
cmp
cltd
in
sub
pop
rcr
enter
cmp
or
push
test
jns
push
cmp
mov
adc
mov
push
stc
mov
and
xchg
cli
cwtl
xchg
inc
mov
sub
rclb
adc
or
and
sub
mov
or
popf
out
sbb
fistpl
pop
mov
pushf
mov
je
icebp
cmp
sbb
xchg
idivb
jnp
push
inc
sbb
and
cmpsl
jb
out
aaa
cltd
push
fs
push
jle
aam
push
push
lods
cmp
jle
lods
stc
mov
int
leave
inc
push
xchg
mov
mov
mov
lret
out
test
mov
mov
mov
mov
stos
test
sti
mov
mov
mov
popa
dec
mov
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
