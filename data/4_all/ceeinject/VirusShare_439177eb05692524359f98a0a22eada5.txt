call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
test
xchg
movsl
ds
lods
xor
popl
mov
sar
gs
jne
test
xchg
movsl
ds
lds
outsb
in
cmc
sahf
add
mov
into
inc
out
push
out
daa
jne
test
xchg
movsl
es
lds
jbe
jle
xchg
lods
mov
xor
mov
test
lret
dec
in
add
scas
aas
mov
sbb
movb
mov
shl
adc
fs
pop
sub
jecxz
mov
in
mov
push
and
mov
out
xor
loop
fstl
movsl
mov
ljmp
and
seto
push
out
sbb
xchg
push
or
fiaddl
xor
fisubrs
pop
gs
push
and
dec
mov
inc
shlb
mov
stc
pop
inc
scas
fimull
ss
fisubrs
out
push
ret
rorl
pop
popf
nop
jbe
jno
adc
mov
xchg
out
jno
je
test
xchg
movsl
ds
lds
outsb
in
cmc
xchg
add
cmpsl
xor
hlt
gs
sbb
ljmp
cmp
stos
jle
mov
popa
fisttpll
jae
and
es
addr16
xor
test
inc
movsl
dec
and
sub
pusha
scas
inc
lcall
es
cwtl
add
movb
rolb
lds
outsb
in
cmc
mov
mov
push
out
gs
jne
test
xchg
movsl
ds
lds
outsb
in
cmc
mov
mov
push
out
gs
jne
test
fcoml
or
insb
fwait
mov
dec
inc
mov
mov
adc
mov
xchg
je
mov
fs
sbb
push
dec
arpl
push
out
inc
leave
push
dec
fmul
addr16
popf
stos
push
add
repz
xor
inc
jecxz
hlt
aam
add
insl
xchg
add
enter
cli
gs
xor
popf
pop
push
leave
cmpb
cmp
push
popf
das
inc
xchg
cmp
into
push
ds
cli
mov
add
push
ss
push
and
add
dec
xchg
mov
in
adc
gs
xchg
std
add
inc
out
cmp
jno
iret
push
shrb
sbb
andb
jl
fists
sub
xor
test
pusha
adc
sub
fildll
in
inc
or
enter
push
push
mov
inc
and
dec
add
and
insl
pop
stc
scas
packuswb
push
cmp
sbb
pop
ret
dec
dec
sbb
sub
mov
fdivrs
inc
gs
lret
lret
shll
mov
cmp
jae,pt
jnp
loopne
dec
adc
hlt
inc
ficoml
pop
dec
arpl
sbb
jl
pop
mov
lock
stos
test
pmullw
inc
dec
popf
clc
pushf
sub
insl
cmpsb
jnp
lcall
cld
push
lret
lods
xchg
imul
cmp
sub
add
fldenv
push
shlb
inc
mov
jl
lock
and
push
fdiv
or
sbb
mov
mov
cmp
xchg
roll
inc
jg
mov
test
or
or
xchg
pusha
mov
push
mov
loopne
push
push
out
or
test
inc
aam
inc
cld
mov
mov
cmp
adc
mov
das
test
aam
push
mov
outsb
fdivrs
xchg
jo
mov
sub
fcmovb
in
dec
sub
xor
xor
xchg
pop
rorl
outsl
xlat
adc
popa
xchg
daa
adc
out
mov
mov
xchg
lcall
ja
scas
lock
jg
mov
pop
inc
cmp
mov
pushf
cmc
sbb
into
add
iret
jns
and
ret
push
inc
mov
mov
addr16
jns
jno
xor
cmp
adc
and
insl
loop
ja
clc
push
mov
adc
popf
mov
cli
add
orl
jge
addb
imul
divl
jg
mov
cli
dec
lret
testl
addr16
pushf
jmp
insb
jns
mov
loope
pushf
dec
ret
sahf
loopne
loope
xchg
ret
jae
jae
ljmp
xchg
shlb
mov
or
lods
push
xor
inc
or
iret
inc
mov
mov
call
roll
std
pushw
insl
stc
mov
mov
decb
sub
fldt
xor
mov
fcoml
xor
cli
movsl
ret
mov
in
jb
mov
xor
in
arpl
mov
adc
not
outsl
adc
in
leave
movsb
jbe
add
mov
scas
pop
shr
inc
mov
sbb
enter
movsl
xchg
sub
ret
fisttpl
call
mov
add
aad
mov
xchg
mov
data16
stc
inc
dec
std
add
ret
fdivl
fucom
jecxz
jg
cmpb
cmp
xchg
adc
xchg
mov
stos
cmpsb
adc
pop
pop
in
ret
imul
fs
ret
push
xor
jno
mov
xor
std
push
xor
jle
adc
inc
sbb
lds
hlt
out
or
cltd
push
dec
sti
cmpsb
ja
loop
or
and
push
incb
lods
leave
out
and
add
adc
mov
es
lret
xchg
cmp
jge
jle
add
cwtl
xorl
test
movsb
xchg
adc
scas
stos
pop
cli
push
lret
addr16
jns
aad
xor
stos
mov
xor
fcoms
cmpsb
lock
push
cmp
mov
or
fdivrp
and
in
cmp
test
lahf
ja
subb
sbb
push
sahf
dec
xchg
dec
add
or
stos
ja
cs
or
std
cmpsb
xor
imulb
ret
mov
cltd
add
lods
pop
jno
push
test
rclb
leave
cmc
adc
cld
les
dec
and
js
sbbl
mov
fwait
dec
sub
int3
loop
jae
add
test
push
adc
jo
or
mov
fsubrs
jno
jae
call
push
inc
mov
jle
cltd
ret
mov
andb
mov
sti
inc
aad
mov
lds
pop
into
xor
mov
lods
xor
lea
das
stos
jb
adc
aas
pusha
imul
lea
insb
push
mov
xchg
add
imul
or
push
pop
into
push
inc
imul
mov
and
jmp
test
dec
cmp
jp
out
stos
add
add
pop
xor
lcall
aam
jl
cmc
pop
inc
aaa
push
cmp
ficoms
or
bound
mov
push
sti
jnp
jle
jns
loop
pop
subb
fistpll
shr
xchg
mov
inc
mov
sub
das
dec
push
jae
xor
lret
dec
fistpll
dec
mov
pop
add
pop
scas
data16
cmpb
mov
push
mov
inc
pop
cmpsl
orb
lcall
xchg
sbb
sub
ljmp
jecxz
push
adc
mov
xchg
sti
repz
cltd
int
lahf
mov
push
popa
lcall
mov
sbb
rcl
mov
inc
in
cmpsb
xchg
xchg
adc
sahf
dec
lret
cmp
cmpsl
mov
stos
out
popf
rcll
xor
cmpsb
xor
dec
in
dec
cmp
das
adc
pop
arpl
push
pop
xchg
imul
idiv
mov
lahf
jl
inc
ja
fistl
inc
push
xchg
aam
jle
hlt
dec
mov
data16
jmp
shll
jl
sbb
pop
adc
sub
ljmp
mov
xchg
inc
das
test
mov
jo
in
mov
enter
pop
adc
xor
and
sub
movsb
stos
test
cmp
jecxz
push
lds
lods
push
in
xchg
addb
movsb
xor
test
pop
inc
xor
jnp
xor
sbb
push
jb
jmp
jns
inc
out
mov
leave
xchg
sbb
data16
repz
sarb
test
test
push
adc
cli
mov
pop
dec
or
cwtl
mov
mov
scas
xor
adc
dec
mov
inc
shlb
filds
sbb
and
mov
sbb
cmp
into
mov
repz
clc
mov
and
pop
mov
adc
mov
aaa
and
inc
shll
fsubrs
ficoml
jl
and
inc
mov
int
inc
fldenv
andl
test
mov
sub
pop
shll
sarb
insb
sbb
jo
xorl
mov
andl
aad
stos
jg
push
xorl
nop
or
mov
inc
inc
cwtl
aad
sub
xor
dec
adc
test
jg
mov
rcrb
push
pop
cmpsb
jae
test
or
xor
and
lahf
inc
shll
xor
mov
pop
mov
cmp
lea
jae
and
cmpsb
xchg
jns
and
xor
mov
fld
inc
outsl
int
aaa
push
add
cmp
pop
fimuls
pop
mov
gs
jb
xor
pop
icebp
ret
xchg
sub
lahf
fs
dec
push
xor
in
push
jp
cs
out
xchg
mov
mov
fnstsw
lods
mov
or
push
outsl
dec
test
xchg
xor
das
loope
gs
xor
outsl
pusha
gs
gs
mov
cmpsb
cs
cltd
mov
xchg
imull
add
pushl
shll
jge
out
hlt
daa
xor
adc
push
mov
and
push
or
dec
gs
rolb
xlat
lods
cmp
cli
xchg
popf
xor
cltd
hlt
roll
leave
dec
fbld
add
daa
les
rorl
loop
ja
mov
inc
mov
sub
dec
out
xchg
sbb
in
or
insl
sarl
ret
xor
or
call
jmp
or
test
mov
je
push
je
mov
fdivs
or
into
mov
push
jnp
and
dec
dec
rolb
adc
pop
jo
cltd
jle
test
xchg
push
sub
xor
scas
test
fsubl
adc
ja
push
cmp
repnz
test
mov
push
push
mov
in
dec
xchg
outsl
fwait
int3
mov
aaa
sub
fcoms
std
loopne
mov
loopne
pop
mov
iret
cmp
cmp
sub
mov
cmp
xchg
icebp
mov
andb
xorb
inc
pop
push
repz
data16
fstps
aas
push
in
fsubrs
and
enter
outsl
out
mov
mov
dec
test
cmp
or
push
in
cs
cltd
push
xor
jp
and
movsb
xchg
mov
into
ja
push
repz
in
stos
aaa
lret
frstor
in
push
lock
cmp
mov
add
cli
jmp
bound
loope
divl
scas
imul
jle
sub
adc
cmovo
sbb
add
mov
je
push
and
insl
pop
or
mov
jle
xchg
adc
ja
cmp
sub
bound
pushf
loope
fisubrs
mov
hlt
hlt
mov
jg
xchg
in
xchg
mov
jne
stos
es
dec
jno
lret
cld
ja
test
in
in
dec
xor
sbbb
push
xor
mov
or
mov
fwait
dec
das
fwait
pop
jp
jo
push
ficoms
mov
cs
jmp
mov
pusha
adc
pusha
add
xchg
je
adc
std
mul
and
mov
aaa
jb
js
sahf
jae
xchg
or
xchg
rol
cli
and
aaa
push
fldt
lods
lahf
xor
add
cmpsb
jb
xor
lea
inc
sbb
jmp
mov
fiaddl
in
push
stc
test
cmpsb
hlt
sbb
adc
fxtract
mov
les
cmc
sub
pop
cltd
scas
sbb
pop
and
inc
mov
push
jmp
leave
add
popf
cmp
in
lret
push
sbb
cmp
scas
in
scas
xchg
jae
push
repnz
lds
push
dec
repnz
ss
cmp
pushf
sub
bound
and
sbb
add
jp
cmpsl
jne
in
mov
outsb
sub
andl
dec
sbb
and
jne
pop
xor
xor
imul
das
sub
shr
ds
jne
and
xchg
icebp
repnz
push
rcrb
fidivrs
test
imul
jmp
pop
sahf
loope
cvtdq2ps
daa
testl
fcompl
call
arpl
push
fidivl
movsl
decl
outsl
push
adc
dec
jp
xor
fs
popa
mov
add
data16
cltd
jae
pop
mov
push
pop
ficompl
rcr
cmpsb
cmpsl
mov
adc
mov
xlat
and
mov
call
mov
push
pop
mov
and
loope
pop
aam
nop
lea
lods
ficomps
test
cmp
sub
aad
adc
sbb
adc
xor
xor
mov
cmp
and
fdiv
mov
scas
aaa
cmc
es
jbe
inc
add
jo
xchg
pop
and
xchg
pop
rcrl
sub
imul
fstps
jg
hlt
flds
mov
push
inc
popl
andb
lods
test
sbb
adc
cmp
pop
stc
xor
aaa
and
cmpsl
and
dec
jle
xchg
jne
fs
xor
jecxz
pop
cmp
xlat
adc
inc
sub
and
mov
dec
lret
dec
test
cmp
insb
loopne
icebp
in
shr
sbb
jecxz
mov
or
arpl
loopne
jg
sbb
divl
fistl
int
or
sbb
adc
nop
cmpsb
jbe
out
push
add
frndint
movsl
nop
adc
movsb
gs
ds
and
aas
xor
nop
outsl
dec
fcmove
je
jle
mov
pop
lods
leave
push
mov
inc
jge
movsl
add
pop
loopne
loope
test
cli
dec
dec
aas
jb
cmp
arpl
stc
jp
xor
shll
xchg
inc
push
dec
sbb
push
out
xor
pop
loope
add
and
lods
jmp
rolb
and
adc
ss
cmc
jle
cmp
sub
cld
outsb
sub
jg
ret
mov
aaa
jb
adc
jne
jg
stos
or
sub
cwtl
and
cmpsl
sbb
pop
rcll
scas
mov
cmp
sbb
jecxz
aad
jmp
mov
in
xlat
mov
jns
and
sbb
inc
fnclex
cmovo
cmc
lahf
test
mov
sbb
or
or
inc
adc
inc
pop
adc
adc
and
push
pop
mov
push
test
inc
loopne
jl
push
push
lods
cmp
or
les
ljmp
in
push
cmpsl
icebp
mov
xchg
mov
pop
scas
stc
fldl2t
shl
cltd
xor
fadds
sub
push
ljmp
and
pop
pop
stc
push
or
mov
mov
mov
jae
adc
test
mov
imul
filds
xor
cltd
stc
xchg
add
cs
sbb
dec
xor
add
adc
imul
test
sub
xor
mov
jge
mov
popf
shlb
jnp
cmpl
mov
dec
sbb
std
scas
mov
push
fldenv
pushf
imul
adc
sub
push
push
jno
and
adcl
inc
or
inc
in
in
jmp
pop
call
push
push
sub
aas
jecxz
xchg
inc
xchg
mov
idivb
imul
sarl
adc
out
mov
fs
mov
clc
iret
cltd
pusha
outsl
cs
mov
jg
shlb
repz
fsubr
adc
or
pop
arpl
hlt
push
lods
or
clc
xchg
mov
pop
or
sbb
sahf
cmp
mov
mov
out
push
addr16
aaa
roll
rol
push
lcall
out
pusha
cmp
mov
sbb
xchg
xchg
daa
lcall
popa
mov
pop
xchg
adc
jo
jo
ss
fmull
push
add
sbb
add
repnz
mov
ret
ret
push
paddusw
and
or
or
mov
popa
cwtl
pop
into
iret
xchg
ret
dec
pop
call
jl
scas
ljmp
push
ljmp
inc
mov
test
fdivrs
adc
mov
out
movsl
js
loop
addb
clc
stc
daa
insb
jb
flds
dec
cli
cld
sbb
hlt
fadds
mov
jns
test
stos
mov
xor
jno
mov
out
test
into
mov
mov
pop
les
fistl
pusha
mov
and
jmp
in
push
dec
xchg
ret
inc
jmp
lods
push
ds
sbb
mov
pop
push
aad
std
inc
jecxz
lea
fisubrl
push
adc
lahf
inc
add
scas
ret
sub
clc
repnz
fnsave
int
pop
add
dec
aaa
xchg
shll
and
clc
fwait
int
pop
jae
add
loope
sbbl
xor
xor
xor
aas
push
lea
mov
sti
dec
mov
push
sahf
pop
inc
dec
mov
xchg
scas
dec
and
and
pop
mov
or
or
sbb
and
or
mov
lret
sub
in
das
sbb
push
jb,pt
into
mov
pop
mov
xor
popf
inc
sub
loopne
mov
iret
mov
mov
rcrb
int
adc
push
fisttpll
in
vpcmpeqb
shrl
movsb
xor
jnp
dec
movsb
or
pop
addr16
jo
fsqrt
stos
sbb
dec
xor
aaa
push
mov
call
shr
cld
sub
push
adc
aas
inc
es
jno
outsl
ljmp
xchg
iret
ja
call
ret
cmp
sbb
or
jbe
rol
movsb
aad
jl
cmpsl
mov
xchg
test
xchg
in
mov
sbb
or
js
mov
adc
mov
in
push
pushf
addr16
cmpsl
push
or
js
cld
movsl
mov
or
fisttpll
sbb
mov
and
hlt
mov
sbb
es
push
or
outsb
xchg
mov
mov
inc
and
lcall
push
add
inc
cld
out
push
xchg
jne
cmp
sub
or
das
into
imul
scas
mov
sbb
mov
dec
adc
sbb
out
andb
sub
es
rcr
mov
xlat
sub
rorl
cwtl
or
xchg
pushf
ficomps
sub
dec
cmp
outsl
push
aaa
test
jle
call
subb
into
add
lods
xlat
movsb
movsl
subl
or
inc
loop
jl
cmpsb
popa
fstps
inc
jecxz
popa
std
into
fildl
es
mulb
jne
and
das
pop
mov
jl
and
sbb
adc
aam
jae
test
push
jne
pop
test
push
lsl
shlb
fimuls
clc
mov
ret
xor
dec
cltd
or
out
adc
xchg
sub
cwtl
fstps
fldcw
stos
jb
and
sub
fwait
shl
pop
inc
test
bound
sub
xchg
xor
jge
jne
push
fisubl
xchg
rep
push
xlat
mov
jns
out
scas
in
cmp
pop
out
lahf
dec
cld
call
mov
daa
inc
and
dec
ret
test
shrb
ret
hlt
mov
adc
ljmp
aas
bound
mov
mov
outsb
ds
xchg
xchg
notl
jmp
cmp
into
mov
cmpsb
or
inc
and
repz
fnstsw
jnp
enter
in
mov
sub
out
mov
mov
lds
mov
ljmp
std
add
fdivrp
sbb
jbe
popf
addr16
or
pop
and
data16
push
or
cmp
lahf
jnp,pt
sub
mov
dec
pushf
xchg
inc
xlat
fldt
lods
clc
add
nop
and
add
push
pop
cmp
jle
out
xor
dec
fmul
mov
mov
fcoms
mov
fisttps
movsb
arpl
or
sbb
lock
imul
negl
push
fstl
mov
dec
arpl
pop
orl
lret
mov
pop
sub
xchg
jo
ffreep
in
xchg
cwtl
mov
xlat
fisubrl
hlt
or
fs
sbb
and
pop
inc
push
push
in
cmp
mov
aam
dec
cld
shlb
je
ret
mov
dec
pop
ljmp
les
jno
pushf
pop
jmp
mov
cld
mov
mov
das
sub
pop
mov
outsl
je
inc
push
outsl
movsl
imul
pandn
lahf
rcr
or
shll
out
dec
mov
dec
xchg
pop
push
mov
dec
xchg
dec
les
jae
or
and
push
inc
adc
andl
jo
movb
push
in
add
cmp
xorl
cld
mov
adcb
or
mov
imulb
xchg
dec
push
push
insl
leave
mov
push
jg
pop
jle
addr16
mov
popf
lods
xorl
mov
pop
fldenv
repz
lods
aas
jmp
aaa
pushf
iret
inc
add
repnz
popf
push
cmp
mov
dec
leave
movsb
mov
xchg
mov
fsubp
into
fcompl
ja
mov
pop
dec
into
mov
mov
scas
xlat
into
in
jge
mov
aam
mov
push
in
roll
cmp
in
mov
mov
je
and
mov
push
mov
adc
push
shll
mov
sahf
sti
out
push
fwait
outsl
es
push
lea
sarb
push
inc
mov
fistpl
pusha
lock
sub
push
xchg
and
ds
lds
outsb
in
cmc
mov
mov
push
out
gs
jne
test
xchg
movsl
ds
lds
outsb
in
cmc
mov
mov
push
out
gs
jne
test
adc
dec
lds
outsb
in
cmc
mov
mov
push
out
gs
jne
test
dec
lds
out
in
cmc
jno
popa
mov
mov
lcall
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lahf
aas
mov
mov
dec
mov
mov
inc
in
push
cmp
sub
pop
add
and
rorb
or
cld
mov
or
pop
pusha
sub
sbb
dec
adc
xor
jle
cs
je
ret
lods
loop
in
test
lahf
das
xor
add
push
jns,pt
push
xor
repnz
mov
mov
sbb
mov
aas
ljmp
dec
popf
js
push
sarl
dec
repnz
gs
mov
add
sarl
mov
leave
cli
mov
test
push
fistpll
dec
int
aad
in
sub
dec
and
adc
in
pop
lock
dec
and
in
dec
sbb
push
rorb
enter
aad
cmp
inc
aad
test
mov
adc
jo
push
dec
adc
adc
icebp
push
lret
and
dec
das
inc
or
mov
fsubrs
add
out
jl
outsl
mov
rcr
mov
xorb
xchg
xchg
dec
jo
cmp
inc
call
cmc
xchg
ror
mov
mov
aad
push
pop
adc
outsl
and
or
test
xchg
into
or
mov
jnp
pop
push
cmp
push
pop
and
inc
sub
xchg
fnsave
int3
nop
cld
mov
or
cmp
sub
pop
add
and
rorb
or
cld
mov
or
cmp
sub
pop
add
and
shrb
jle
insb
fcoml
sbb
xchg
decb
jne
cmp
pop
fcmovb
bound
xchg
mov
imul
xor
clc
push
adc
movsb
stos
jge
outsb
lock
insb
xor
lahf
mov
mov
or
je
lahf
xchg
je
push
dec
add
stos
mov
mov
push
sub
mov
loope
fmuls
fistps
or
jg
add
jne
outsb
cli
cmpsl
arpl
jae
sbb
out
loope
sub
mov
xlat
test
lds
lahf
xchg
in
dec
bound
ret
xchg
movsl
lods
in
aaa
imul
in
xchg
ret
lret
aad
or
push
mov
pop
cmp
lds
or
add
int3
push
xorb
jl
xor
js
adc
jne
ja
lret
mov
mov
mov
or
or
mov
std
push
push
add
leave
push
aas
add
and
cmp
xchg
mov
add
daa
fwait
xchg
xchg
sub
testl
add
arpl
fstps
sar
mov
push
insl
inc
ja
pop
inc
mov
xchg
aad
rcl
mov
pop
xchg
aad
mov
inc
fwait
ss
xchg
lcall
nop
jecxz
test
jo
fs
jo
jg
test
addr16
mov
lret
aam
dec
fwait
gs
xchg
inc
cld
cmpsl
aaa
xchg
add
int3
pop
push
add
jge
push
int
mov
filds
mov
mov
and
mov
jo
lock
jo
in
cmp
mov
ss
push
outsb
and
popf
into
add
stos
jge
daa
push
pop
loopne
add
imul
fidivs
mov
stos
mov
adcb
test
out
or
pop
fwait
or
xor
jo
movsl
es
movsl
mov
aam
xchg
push
and
mov
outsl
pop
xor
mov
inc
mov
add
cmp
cmp
arpl
pop
mov
addr16
leave
mov
in
fsubl
pop
jmp
decb
inc
xchg
fcom
fcoms
scas
nop
scas
xchg
ret
sbb
fbstp
xor
dec
mov
hlt
and
cmp
popf
cwtl
cwtl
mov
stc
cs
sub
pop
std
mov
pop
pushf
dec
push
mov
sarb
fisubs
std
push
or
rol
fwait
dec
pop
adc
shrl
or
jecxz
pop
ficompl
push
test
mov
test
xlat
jns
incb
lock
lods
pop
pushf
xor
setl
mov
pop
adc
xor
stos
sbb
jmp
inc
pop
dec
pop
movsb
insl
xchg
js
pushf
xchg
repz
mov
sbb
adc
nop
fiadds
lret
mov
pop
dec
push
or
orb
xorb
addr16
inc
ss
push
pop
pop
push
sub
aas
divl
jg
loope
jne
sti
arpl
pop
xchg
xchg
int
mov
push
mov
add
aam
or
ficoml
popa
inc
inc
sbb
adc
out
push
mov
out
mov
cld
or
push
jno
lods
cmp
out
adc
out
call
sahf
les
adc
repnz
pop
sbb
movsb
push
dec
cmp
lret
add
out
adc
fldl
xchg
or
ds
mov
push
das
add
inc
xchg
imul
or
testb
mov
or
push
out
mov
jmp
mov
sub
sti
xchg
mov
mov
mov
popa
fwait
cmc
ljmp
jbe
in
das
cmpsb
push
sub
sub
dec
sub
mov
clc
push
int
xchg
arpl
repnz
shll
sub
lret
fistpll
push
pop
xor
sub
xor
ror
mov
lcall
push
fcoms
pop
rorb
sbb
xchg
lahf
ljmp
loopne
mov
xchg
mov
repnz
out
push
in
push
mov
test
push
ja
imulb
or
cld
popa
mov
pop
insl
xor
dec
xor
mov
cmp
in
push
xchg
sub
mull
mov
fcoms
jecxz
repnz
mov
sub
ss
mov
and
fadd
js
sbb
xor
jne
add
in
ljmp
and
dec
in
or
push
jge
mov
and
jb
jmp
lods
xchg
push
cwtl
mov
mov
add
arpl
mov
out
mov
mov
jae
pop
pop
mov
in
inc
aas
cmp
xchg
mov
jp
mov
adcb
inc
in
xchg
repnz
cmp
call
cmpsl
pop
movsl
test
aaa
inc
pusha
daa
mov
pop
xor
lret
jp
sti
mov
xor
iret
xor
bound
inc
cld
and
xor
iret
iret
pop
pop
movsb
push
pop
sub
sbb
or
mov
sub
mov
dec
ficoml
movsl
dec
mov
push
movsl
arpl
xor
mov
sub
cld
gs
dec
and
or
and
pop
push
xchg
jae
dec
lret
mov
insl
sub
cld
pusha
xor
dec
mov
inc
mov
xchg
add
pop
iret
mov
sub
test
xor
inc
or
xchg
pop
xchg
call
inc
pop
inc
pop
clc
pop
loopne
add
dec
clc
fisttpll
inc
test
push
jb
aad
stos
cmp
and
fwait
int3
test
xchg
ds
sbb
xchg
shr
mov
push
imul
bound
fsubrl
adc
fisubrl
in
or
je
jnp
add
lds
push
push
sub
psrlq
out
int
xchg
insl
aaa
fwait
jg
nop
dec
pop
lahf
sti
icebp
loop
xchg
pusha
push
stos
or
jo
ss
and
sarb
xor
dec
mov
xor
imul
mov
adc
out
and
repnz
cli
cmp
jp
gs
lcall
dec
lahf
lcall
in
ret
pop
sti
into
js
dec
aam
cli
ss
sub
add
jmp
cld
sub
dec
push
jo
pop
aaa
xchg
mov
fstpt
jmp
jp
push
mov
in
push
xor
add
loop
cltd
jnp
push
mov
push
inc
cmc
lock
pop
push
inc
sbb
add
pop
mov
loopne
mov
push
lret
or
leave
shll
or
xor
jecxz
bound
mov
imulb
sbb
pop
mov
divl
ljmp
popf
jmp
mov
cmp
push
daa
call
dec
mov
scas
dec
push
jo
mov
xchg
sub
jbe,pt
icebp
mov
push
cmp
mov
cld
or
cld
mov
inc
cmp
mov
inc
jns
xor
add
mov
outsl
adc
insb
movsl
data16
xlat
mov
lahf
icebp
movsb
negb
loopne
xchg
adc
sub
cmp
jp
jl
por
cmp
lea
data16
jg
lcall
pushf
lods
andb
inc
mov
xlat
jmp
cmovb
adc
add
pop
xchg
mov
jmp
lret
jg
loopw
xor
pop
out
jp
xor
shll
pop
fistps
xorl
sbb
pushf
call
mov
mov
stos
sub
lea
je
fnsave
mov
pop
test
or
jp
divb
dec
inc
jne
mov
xor
es
xchg
inc
push
push
or
je
test
sbb
mov
ljmp
jecxz
mov
enter
rorb
mov
dec
enter
sbb
push
push
pop
or
fists
fsubp
mov
addr16
lods
fcmovb
mov
adc
leave
pop
hlt
xchg
mov
dec
xchg
adc
inc
loope
in
ja
xchg
aas
xchg
cltd
pop
shl
push
pop
ret
pop
popa
jae
aaa
int
and
cmp
mov
jmp
xchg
js
jno
jae
imul
pop
std
sub
jno
sub
jne
shrl
subl
std
push
js
inc
xchg
sub
loope
jb
mov
mov
or
add
cmp
shlb
stc
rdtsc
dec
push
sti
cli
cmpsl
stos
inc
test
cmpl
mov
out
test
cmp
cmp
psllq
xlat
jb
jp
stos
push
xor
leave
push
call
lret
cmp
or
test
jl
mov
popa
jle
leave
pop
push
rorb
xor
xchg
jae
mov
sub
mov
stos
jne
iret
and
mov
ljmp
out
jmp
push
adc
mov
aas
cld
sbb
outsb
ret
push
ficoml
cltd
push
repnz
fmuls
imul
dec
lock
dec
movsl
in
ftst
rorl
fistpll
loopne
scas
int3
js
dec
aas
ljmp
push
dec
cs
stos
hlt
outsb
jg
int3
fdivrl
shlb
mov
clc
repz
xchg
xchg
out
jl
loopne
subb
push
ja
push
mov
xchg
mov
adc
ret
lea
icebp
inc
cs
jl
cwtl
int3
mov
mov
hlt
ret
aaa
aam
jl
fsubrp
lret
jno
lds
sbbl
xchg
inc
jne
loop
xor
popf
rolb
popa
xor
mov
enter
push
mov
loope
sub
das
popa
push
jle
in
mov
icebp
push
mov
mov
sbb
xchg
add
cs
cld
pop
cmp
jg
into
scas
test
test
push
sub
sub
addr16
repz
jo
and
push
scas
push
incb
add
mov
fisubrs
fs
leave
push
xlat
insb
pushf
cwtl
jbe
mov
mov
ret
dec
push
dec
into
mov
pop
xchg
test
iret
data16
sbb
inc
dec
aam
inc
notl
shrb
jns
outsb
fld
outsl
das
mov
xchg
movsb
mov
sbb
pusha
jmp
mov
dec
mov
and
aad
cltd
xor
xor
test
jno
imul
fistl
mov
pop
sbb
inc
sbbb
fstpl
add
js
loope
shl
cs
pop
je
push
pop
push
mov
out
pop
jle
imul
repz
push
es
pop
in
or
adc
push
mov
mov
and
stos
xor
divb
cmp
xchg
insl
pop
stos
fmull
bound
xchg
fmull
ds
aaa
aam
cmp
fnstcw
lods
mov
xor
inc
mov
push
lods
mov
dec
iret
inc
mov
cmp
push
mov
aas
out
mov
mov
mov
jg
loop
jmp
xchg
pop
inc
mov
shr
add
lds
je
dec
sbb
andl
daa
cltd
push
enter
pop
mov
mov
push
sub
dec
push
fsts
sbb
xor
fnclex
sti
sub
dec
sbb
cs
addr16
push
mov
xchg
daa
in
sub
jae
faddl
or
imul
das
lcall
jg
inc
xchg
sub
jge
inc
fimuls
aad
ss
fists
cmpsl
data16
sub
subb
inc
cmp
cmp
jnp
ds
mov
jae
xchg
loopne
shlb
mov
push
sub
in
cmpsl
daa
js
lea
es
mov
dec
loop
pushf
stc
xor
sub
sub
dec
add
aas
cmp
dec
mov
jbe
aaa
aas
aaa
sub
mov
xor
aam
push
lahf
sahf
pusha
xchg
mov
mov
and
lcall
addb
pushf
inc
popa
imul
scas
hlt
push
jo
jbe
scas
clc
xchg
xchg
xchg
sbb
mov
flds
dec
push
in
lds
loope
mov
cmp
jmp
jl
shlb
mov
clc
je
lods
pusha
adc
dec
jns
xchg
push
mov
mov
in
sub
call
push
mov
mull
adc
fs
mov
lret
movsl
add
mov
nop
pop
jb
fst
xchg
in
or
fcmovb
cmp
jne
mov
xor
xchg
lret
cmp
icebp
jbe
add
in
loopne
sbb
xchg
xchg
in
mov
clc
sub
rorl
pop
scas
lods
sbb
or
mov
fnsave
es
cmp
xchg
leave
fnstcw
xor
jns
fnstenv
cli
out
icebp
cmp
icebp
das
push
lock
sub
out
inc
mov
xor
movsb
mov
and
mov
into
pushf
push
sti
inc
cmp
outsb
dec
push
adc
mov
jge
cmp
push
stos
lret
int
or
in
or
push
js
pop
inc
aaa
sbb
inc
das
shlb
orl
in
hlt
xchg
sahf
sbb
sub
lock
push
pushf
add
mov
sahf
mov
es
aad
sub
sbb
scas
jg
cmp
mov
jp
aam
outsl
lret
fildll
pushf
mov
data16
mov
mov
pop
inc
pusha
sub
sub
popw
xchg
mov
stos
subl
cmp
jne
cld
mov
dec
dec
cmpl
cmp
icebp
xor
mov
sub
popa
shr
pop
shl
dec
jnp
cmp
fwait
push
push
lcall
fs
ret
std
xchg
jp
xchg
std
fstpl
mov
repnz
xchg
dec
xchg
and
in
mov
sbb
jno
adc
divl
repnz
pop
sub
addl
out
fists
or
in
inc
xchg
sub
push
pop
popl
and
lret
push
xchg
pop
fsubs
iret
fdivrs
sub
aad
jl
int3
sbb
das
xchg
ds
inc
mov
sub
inc
in
ficompl
lret
mov
sbb
test
push
je
mov
mov
int
mov
and
rol
mov
xchg
sbb
mov
lret
rcrb
adc
fwait
xchg
sbb
ficomps
gs
and
sub
and
popa
ljmp
stc
aam
les
aaa
pushf
push
stc
popf
insl
adc
dec
and
cld
sub
pop
outsl
push
push
rorl
cmpsb
xor
cmp
in
mov
jnp
xor
stos
adcl
inc
ja
sub
xchg
sahf
lret
sti
in
fstl
loopne
xchg
xchg
sub
test
hlt
shrl
xlat
in
mov
xchg
cwtl
out
pop
ret
mov
imul
pop
iret
add
mov
insl
cmpsl
in
add
jmp
pop
loopne
jl
cmp
dec
les
stc
dec
cs
adc
xlat
xor
imul
testb
enter
fcom
stc
adc
sarl
jge
push
xor
mov
inc
mov
xchg
mov
pop
fmuls
leave
mov
sbb
xacquire
jne
adc
push
pop
mov
or
stc
mov
cmc
ds
xor
enter
mov
rclb
mov
icebp
mov
lcall
dec
jle
jnp
mov
data16
sbb
ret
insl
pop
sbb
popa
mov
pop
loopne
and
cmc
pop
bndstx
mov
xor
cmc
sub
mov
stos
add
call
push
push
rcl
pop
adc
xor
jmp
mov
or
pop
xor
cli
and
pop
push
das
jo
es
out
mov
push
add
popf
cmp
cmp
dec
push
inc
or
ja
sahf
inc
iret
outsb
cmpsb
int
scas
mov
ss
adc
pushf
push
add
sub
mov
xor
imul
jnp
sbb
or
bound
loope
add
inc
popf
cmp
and
mov
or
mov
pop
test
lods
adc
mov
out
mov
insb
dec
inc
aam
sbb
pop
push
ja
mov
leave
fiadds
jne
add
in
sbb
mov
pop
mov
push
or
pop
and
sbb
movsb
sbb
sub
mov
aas
mov
mov
nop
out
adc
cmp
repnz
insl
mov
dec
or
mov
push
stos
daa
int3
adc
cld
in
mov
cwtl
mov
xchg
aaa
addr16
into
test
mov
rolb
push
xchg
jg
xlat
dec
cli
mov
jae
sbb
sub
mov
sti
jle
mov
pop
mov
adc
sarl
pusha
int3
jns
mov
test
or
jns
mov
xor
fsubrp
daa
outsl
lods
mov
adc
inc
xchg
cli
jg
inc
sti
scas
stos
rdpmc
orb
jo
xor
mov
jb
mov
stos
push
mov
mov
jno
xchg
mov
je
jp
adc
adc
or
xchg
sti
sar
push
xchg
in
mov
jp
xlat
jl
out
aam
frstor
fucomi
sbb
cmpb
push
push
dec
xchg
mov
push
pop
mov
cmp
sbb
or
pop
sub
mov
inc
push
notrack
inc
cltd
sub
jbe
xchg
or
jp
das
repz
jg
aaa
insb
mov
arpl
inc
adc
mov
sarl
or
push
sub
jmp
or
or
fldcw
xchg
pop
push
pushf
lret
mov
repnz
add
stc
add
jp
xchg
fmul
nop
shll
nop
sbb
dec
mov
and
dec
mov
popa
pop
and
bnd
aad
cmpsl
fdivl
negb
xchg
dec
sub
add
out
sarl
sub
movsb
shl
cmp
aad
mov
les
adc
push
ror
sbbl
fildll
xchg
outsl
dec
jne
ret
sub
xchg
mov
jge
std
mov
mov
sti
dec
mov
jl
loop
mov
sbb
push
fucomip
fdivr
push
xor
in
cmc
inc
mov
in
xlat
in
stc
shl
stc
pop
and
dec
pop
arpl
imull
mov
pop
shlb
lret
cli
push
adc
in
cmp
imul
out
and
cmp
movsb
dec
and
out
fldt
imul
inc
stc
stos
xor
pop
mov
sbb
xchg
jecxz
xchg
lea
cmpsb
or
rol
jp
sub
scas
push
test
std
stc
scas
jp
push
push
rcrb
lahf
or
je
les
mov
cmpsb
insb
push
cltd
push
enter
lea
or
adc
sub
cmp
int3
popa
xor
inc
stos
fstpt
test
stc
imul
test
adc
xchg
jp
mov
dec
mov
mov
addr16
mov
mov
in
cmp
scas
inc
aas
and
fmul
fmuls
jno
inc
int
fiaddl
adc
insb
hlt
xor
lea
and
aaa
cwtl
xlat
cmp
sbb
sbbl
sub
ljmp
movsb
or
test
rep
inc
lret
xchg
lahf
push
mov
test
cwtl
testb
mov
fistpll
int
mov
sbb
jno
fs
out
loopne
mov
stc
adc
mov
lods
in
push
jo
sbb
pop
mov
pop
inc
lock
push
fbld
aam
sub
adcl
jns
add
sbb
dec
mov
push
sbb
xor
shll
adc
push
test
lahf
cmp
stos
and
xchg
les
das
ds
add
jmp
dec
pop
scas
ss
xor
mov
sub
xchg
shlb
cli
lcall
cli
popf
and
mov
addr16
xor
cmp
out
dec
push
and
push
das
fwait
sbb
loop
jb
cmc
pusha
imul
ljmp
inc
stos
jb
arpl
sbb
and
jns
insb
aam
xchg
mov
push
cmp
sub
mov
scas
hlt
subl
xor
js
imul
fimull
arpl
mov
movsb
jno
dec
push
pop
xor
and
mov
xchg
xchg
mov
xchg
out
lds
pop
pushf
outsb
test
movsb
jp
cmp
cmpsb
or
int3
or
xor
or
cmp
cmp
outsb
mov
hlt
pop
xor
inc
add
jecxz
sti
rcrl
jbe
cld
or
shlb
jo
pop
inc
arpl
aam
hlt
aam
sub
jecxz
fcmovnb
jmp
pop
xor
pop
push
ljmp
dec
and
cmp
pop
and
push
inc
inc
dec
xchg
xchg
call
pop
call
mov
lret
ja
bound
pop
stos
add
jle
pop
mov
mov
sar
mov
cld
mov
or
cmp
sub
pop
add
and
rorb
or
cld
mov
or
cmp
sub
pop
add
and
sarb
or
cld
mov
or
int3
pusha
sub
pop
add
add
out
mov
faddl
insb
mov
mov
sub
sub
xchg
iret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
stos
jbe
inc
mov
jmp
inc
xchg
push
push
idivl
pop
xlat
or
dec
xchg
pop
stos
jbe
inc
mov
es
jmp
lret
push
scas
out
idivb
or
sbb
mov
xchg
pop
data16
mov
es
rcll
shl
aad
stos
jb
outsb
cmpsb
and
psllq
clc
xor
out
lret
inc
out
cmp
out
and
xor
icebp
cmp
movhps
loop
repz
mov
and
stos
std
xor
subb
clc
xor
and
aam
lds
pop
sub
pop
or
mov
inc
mov
inc
rorb
sub
in
into
lret
ret
xchg
push
data16
jbe
sub
push
enter
jmp
mov
jae
cmp
mov
incb
cs
inc
cmpsb
je
out
jg
mov
xlat
mov
mov
sbb
iret
test
adc
popa
les
lret
mov
push
push
cmp
in
inc
cmp
stos
mov
push
fwait
es
sti
push
lret
push
ret
mulb
adc
add
push
xchg
pop
daa
stos
add
das
out
aas
es
adc
out
xchg
cmp
clflush
push
mov
in
shlb
add
adc
and
cmp
es
mov
mov
cmpsl
pop
les
sbb
sub
das
add
cmp
push
ss
push
lret
push
sub
cmp
or
sbb
dec
xchg
pop
stos
jbe
inc
mov
es
sti
push
lret
push
sub
cmp
or
sbb
dec
xchg
pop
stos
push
test
or
cltd
fsubs
gs
add
mov
and
popf
add
in
mov
subb
rclb
xchg
add
pop
fistl
pushf
xchg
fdivrp
cmp
and
push
cmp
dec
xchg
lds
xchg
lret
and
ret
push
or
jmp
cmpsl
ljmp
stos
mov
mov
mov
add
mov
std
cmp
fisubl
inc
cli
cli
inc
test
xchg
fs
mov
pop
push
sub
ret
scas
in
out
ljmp
adc
cmpsb
mov
mov
push
mov
in
add
add
das
adc
shlb
test
mov
xchg
outsl
lods
jo
or
xchg
dec
out
push
xchg
mov
sub
sub
push
xchg
mov
or
adc
aam
dec
or
cmp
in
int3
add
pop
sbb
mov
test
mov
xor
js
js
mov
call
outsb
mov
jg
ljmp
ds
pop
push
loopne
jecxz
je
das
push
ss
repnz
or
pop
xchg
inc
iret
cmpsl
lret
call
dec
fimull
xor
scas
push
repz
inc
adc
mov
pop
inc
daa
jge
cs
fiaddl
xchg
mov
lods
test
add
pop
inc
mov
or
pop
lods
mov
ficomps
adc
push
popf
lret
fsubr
xchg
xchg
xor
mov
fcmovne
mov
sbb
scas
fs
pop
test
mov
sub
xchg
loope
xchg
lods
sbbl
vpaddsb
jo
mov
pusha
mov
mov
lods
test
or
or
ja
mov
adc
adc
scas
pop
outsl
dec
cld
cmp
dec
leave
mov
pop
js
push
roll
push
jbe
bound
jle
add
xor
adc
test
cli
lahf
xchg
les
fnstcw
ljmp
cmp
icebp
fxam
cwtl
dec
push
or
mov
adc
mov
or
mov
lcall
fldcw
pop
xor
mov
lock
das
mov
sbb
pop
jg
movsb
cwtl
sbb
mov
rclb
test
aaa
cld
pushf
lcall
sbb
shlb
insl
xor
jno
test
adc
shlb
rcl
push
add
mov
dec
xchg
xchg
push
xchg
lret
sbb
mov
cltd
test
cwtl
sahf
mov
inc
mov
inc
inc
cmp
xchg
or
mov
popa
jge
sub
cmpsl
out
jle
out
cmc
adc
mov
sub
movlps
pop
sahf
loope
out
and
inc
in
test
aas
stos
test
mov
mov
jg
cmp
lock
ror
jg
in
clc
leave
test
lock
and
out
leave
cmpsl
push
sbb
cmp
cld
add
sub
jge
pop
xchg
adc
inc
mov
jmp
sub
add
inc
push
cmp
mov
xchg
repz
mov
out
mov
or
dec
sub
xor
in
sub
addr16
into
hlt
fsubrp
mov
lea
sub
or
sub
sbb
rcll
sti
xor
ss
jno
and
fisubs
pop
daa
rcrl
out
scas
jp
aaa
add
mov
inc
ret
addr16
add
jne
leave
fstl
pusha
xor
out
in
daa
stc
pop
mov
popa
out
daa
jnp
enter
pop
fs
hlt
pop
inc
das
rcr
cmp
push
mov
icebp
pop
cmp
pop
inc
dec
fadd
int3
cmp
inc
add
testl
dec
shlb
xor
inc
ret
lock
lcall
pushf
mov
nop
mov
adc
mov
outsb
fsubr
jae
mov
loop
push
mov
push
jno
push
cmp
pop
dec
shrl
dec
test
push
dec
gs
ss
ljmp
push
pop
inc
xor
pushf
and
pop
cld
pop
xchg
rcrb
imul
fildl
rcl
sub
aas
jmp
scas
mov
xchg
insl
push
js
shr
sub
ds
stc
lods
clc
cmpsl
cld
xor
test
push
jle
roll
pop
negl
rcrb
and
lock
cmp
mov
jp
fmull
and
xor
stc
sbb
mov
mov
inc
fs
int
inc
inc
ja
js
sbb
dec
pop
addb
sbb
xchg
inc
nop
and
push
xchg
xchg
mov
dec
dec
mov
std
sbb
jmp
fcomip
sub
cmc
testl
fnstcw
mov
dec
inc
stos
and
xor
mov
ss
pop
or
popf
cmp
scas
sbb
xchg
dec
xor
push
data16
mov
push
clc
xchg
add
loope
shrb
mov
in
mov
pop
push
or
imul
ret
imul
pop
and
loopne
out
ret
repnz
sbbb
jnp
or
mov
gs
add
pop
ret
dec
lods
out
test
sbb
lcall
and
mov
jae
aad
xlat
outsl
sbb
aad
xchg
hlt
inc
xor
call
aad
cmp
and
inc
pop
mov
dec
ja
cmc
test
cltd
jecxz
xchg
adc
sbb
mov
je
int
and
add
int3
inc
mov
mov
mov
clc
xchg
dec
lods
cmp
jns
shll
in
shll
or
jmp
bound
and
es
dec
pop
cmc
fiadds
inc
mov
mov
nop
int
xorl
mov
jo
ds
insb
mov
push
icebp
idivb
es
inc
inc
add
je
inc
xor
mov
mov
push
and
push
notb
data16
cmpb
jne
push
loop
pop
sbb
lret
and
mov
sbb
imul
lcall
mov
cmpsl
push
jmp
adc
push
add
and
shlb
xchg
outsb
xbegin
int
fldenv
lds
jmp
or
mov
push
lods
test
push
push
jno
cmp
adc
int3
xchg
mov
pop
clc
lods
pusha
push
js
xor
sbb
aam
xchg
int
mov
std
aam
xchg
or
add
lcall
pop
loope
shlb
xlat
pop
xorl
pushf
scas
adc
pop
and
add
inc
mov
pop
sarl
jbe
cmp
sahf
out
je
out
mov
leave
js
and
int3
fsubp
and
xchg
enter
or
and
xor
cs
sub
mov
imul
sbb
loopne
lret
sbb
mov
dec
dec
jmp
cmp
sub
push
xchg
dec
add
mov
jnp
pop
int
repnz
mov
stos
outsb
push
gs
es
js
mov
leave
and
mov
iret
add
jb
jle
in
push
aam
dec
jmp
dec
xchg
adc
cmp
rorb
lret
mov
push
iret
aad
dec
sahf
pop
test
inc
daa
dec
sahf
push
sub
adc
mov
xchg
inc
sub
lret
stc
cmpsl
jne
shl
mov
iret
shll
jne
popf
add
mov
js
adc
in
jg
inc
shl
ljmp
stos
mov
mov
lcall
jge
push
mov
ljmp
xchg
push
push
xchg
aaa
cmp
add
push
sub
cwtl
das
cmp
lcall
js
xor
push
daa
popf
pop
xchg
pop
pop
mov
out
dec
xor
or
iret
push
pop
sub
in
shlb
repz
sti
push
push
sub
cwtl
adc
pop
jmp
arpl
xor
cmp
sarl
sub
aam
mov
xchg
mov
jg
pop
adc
pop
push
push
adc
lret
jmp
js
pushf
mov
inc
sbb
out
subb
cmpsl
push
jb
mov
dec
sbb
ret
sub
into
cld
lock
mov
mov
jae
mov
sub
mov
xor
dec
xor
rcll
xor
mov
cmc
pop
adc
xor
jecxz
fsubrl
test
or
dec
mov
in
pop
xchg
mov
jb
inc
mov
mov
mov
adc
mov
rclb
shll
call
push
mov
dec
int
sbb
pop
mov
flds
shrd
xchg
fldenv
cmp
pop
xchg
add
dec
aam
enter
jle
outsl
or
push
xchg
push
rorb
rcrb
clc
push
xor
out
lcall
lret
int
cs
jnp
inc
and
cltd
negl
mov
push
dec
or
repz
or
cmp
sub
cmpl
stos
jge
or
jae
out
and
sahf
add
mov
jg
repnz
push
dec
or
push
sub
stos
mov
or
cmp
ss
test
repz
repz
pop
xchg
jle
cltd
dec
outsl
ljmp
jbe
idivb
bound
cmpsb
push
mov
mov
jp
jg
lahf
inc
stc
les
pop
insl
push
ret
mov
pop
mov
inc
dec
push
fildll
pop
arpl
fwait
xor
cmpsb
loope
xor
cmp
push
jns
and
insb
imul
in
xlat
outsb
adc
rcrl
jno
imul
bound
add
jae
inc
std
lds
inc
sahf
in
negb
mov
dec
repz
mov
or
inc
mov
lods
idiv
mov
mov
mov
cmp
movsl
xchg
cmpsb
mov
fistpll
icebp
add
or
adc
mov
repnz
leave
in
mov
sub
push
sub
cli
push
gs
ds
jns
push
jecxz
cmp
addb
data16
shll
xchg
ljmp
shl
inc
test
lea
adc
and
stos
mulb
push
xchg
testl
inc
mov
insb
pop
pop
test
sbb
xchg
jo
clc
adc
cmp
inc
imul
mov
mov
mov
jg
adc
addr16
cli
bound
imul
and
add
sub
out
dec
mov
inc
leave
mov
mov
es
lea
lods
add
cmp
pop
dec
mov
shl
inc
xchg
adc
insl
jno
stc
insb
sbb
dec
push
lods
add
mov
xchg
cmpsb
cli
mov
jmp
incb
xor
sbbb
in
sbb
gs
xchg
dec
insb
imul
cmpsb
cmp
pop
cmp
lahf
inc
int3
xor
daa
push
movsb
in
ret
cli
std
and
das
bound
mov
rcrb
out
sbb
xchg
int
jl
stos
inc
add
pushf
mov
jne
in
into
rcr
add
add
jo
or
ds
sub
pop
pop
xor
pop
repz
push
dec
push
lret
and
xor
pminub
adc
scas
push
cwtl
push
lcall
inc
cltd
fistl
lods
fsubrl
movsl
pushf
sbb
sub
sub
mov
push
in
inc
out
loope
lcall
push
in
jmp
mov
cmp
xchg
clc
movsl
sbb
fimull
add
adc
xchg
mov
in
push
cli
sub
xlat
push
mov
popa
shrl
mov
notl
mov
or
outsb
and
xor
dec
imul
roll
dec
fnstcw
mov
imul
push
dec
add
cs
xor
xchg
aas
xchg
cmpb
push
loop
out
lret
xor
add
cltd
dec
repz
fcmovb
sub
dec
insb
je
mov
push
movsl
sbb
xchg
mov
ret
sbb
xchg
aaa
add
add
sub
sti
hlt
ja
das
push
fadd
jo
cltd
add
in
fsubl
js
xor
pop
or
movsl
mov
insl
mov
int3
sub
xor
andb
xor
xor
mov
push
std
cmp
popf
pusha
cmp
mov
scas
sbb
inc
adc
jne
aam
jl
pop
xchg
rcrb
inc
rorb
push
fs
push
push
call
jns
add
outsb
dec
cli
mov
jns
inc
sarb
sbb
das
jge
jno
les
call
pop
scas
add
mov
inc
pop
movsb
jnp
pop
push
cmp
sub
pushf
sbb
dec
es
sub
int
sub
sbb
push
lahf
shlb
in
add
fistpll
add
loope
movsl
mov
inc
cmpsb
mov
mov
inc
pop
push
out
cmc
jmp
sysret
pop
data16
pop
sbb
roll
inc
enter
jno
insl
mov
cmc
sub
clc
rcrl
out
push
out
push
mov
cltd
ss
lcall
add
dec
aaa
stc
sub
xor
lret
dec
inc
jo
insl
inc
push
fwait
movsb
sbb
js
add
lcall
in
sbb
mov
add
or
repnz
or
icebp
mov
in
std
sub
out
aas
xorl
mov
repz
add
cld
shrb
shlb
cld
out
mov
add
dec
or
add
mov
dec
dec
push
dec
xor
andb
out
fldcw
jle
mov
push
mov
mov
movsb
lcall
cld
mov
or
push
add
cld
cmpsl
int
ret
loop
lock
xlat
mov
fstpt
mov
or
jle
ljmp
movsl
push
test
push
add
pop
lds
cmp
inc
sbb
ss
movsb
add
dec
in
pop
scas
arpl
stos
cltd
sbb
scas
sub
cs
ffree
jecxz
lock
in
fnstcw
pop
dec
adc
sub
inc
sub
dec
inc
int3
nop
push
bound
xchg
mov
stos
call
jno
cmp
push
pop
cmp
and
es
bound
jne
add
mov
lahf
or
icebp
in
lahf
daa
decb
mov
je
daa
sbb
das
imul
lods
xchg
jbe
sub
daa
in
sub
fwait
push
sbb
cmc
les
jb
fs
mov
add
lahf
lea
imul
in
stos
add
repnz
stos
movsl
inc
lods
mov
aad
mov
arpl
lock
pusha
fs
mov
mov
dec
cwtl
cmp
cmpl
roll
push
cmp
cmc
lock
pop
enter
cs
xchg
test
mov
ja
push
fnsave
aaa
gs
mov
jl
pop
inc
loope
stos
jl
mov
cmc
mov
out
xchg
xchg
je
adc
jnp
scas
inc
rcl
and
repnz
nop
das
enter
lock
fildll
pop
xor
lahf
inc
add
xchg
daa
rcrl
sub
inc
pop
pop
mov
mov
imul
and
stos
dec
sarb
ljmp
or
in
mov
push
adc
outsb
xchg
xor
pop
add
or
cmpsl
ljmp
stos
mov
push
aas
jle
out
jmp
aad
pop
sub
adcl
mov
adc
stc
cmp
jb
rol
jg
push
xchg
or
inc
add
mov
inc
into
insb
mov
cltd
ljmp
lcall
push
adc
jno
les
enter
adc
ret
and
inc
lret
mov
cmpb
jno
inc
in
std
nop
xchg
lret
push
mov
and
jne
aas
test
cmc
xchg
rclb
inc
dec
ljmp
movsl
push
sub
mov
fdivl
jecxz
nop
mov
xchg
repz
and
loop
cltd
jns
aam
jle
lahf
inc
jne
fistl
aad
pminub
fildl
mov
loope
adc
sarl
mov
jnp
or
cwtl
gs
sbb
pop
inc
nop
out
into
popa
jl
jo
or
push
repz
mov
ljmp
nop
ds
in
pop
add
pop
lret
sub
cld
xchg
out
mov
push
xor
xchg
inc
mov
outsb
repz
int3
xchg
cmp
xor
sub
jbe
dec
in
ljmp
pop
cltd
pop
cmpsl
pop
inc
mov
rclb
cmp
movsb
mov
lods
or
out
int
pop
in
xchg
or
dec
movb
addl
jns
into
cmp
or
mov
fs
fstl
lret
movsl
add
xor
pop
jb
fmull
inc
out
fdivp
or
int
mov
push
lock
mov
loope
fnstsw
loop
cwtl
fisubrl
and
xor
sub
push
mov
mov
sub
fdivrs
daa
imul
adc
lcall
add
jb
rorl
je
out
xchg
testl
mov
bnd
mov
mov
loop
mov
mov
xchg
fnstcw
pop
std
fisubrl
rclb
or
jbe
xchg
fsubl
sbb
dec
test
imul
scas
ds
pop
nop
mov
movsl
sbb
cmp
xor
clc
movsb
fs
mov
gs
and
ret
std
xchg
repnz
or
fnstcw
imull
cwtl
dec
popf
jo
rorl
xchg
mov
mov
lods
cmp
les
mov
shll
out
jo
aam
lret
ret
mov
enter
pop
out
jnp
repnz
mov
mov
mov
dec
int3
xor
into
pop
sbb
int
push
stos
popf
adc
in
mov
test
push
shll
arpl
push
pop
mov
pop
in
mov
fcomps
add
outsl
fdivl
adc
mov
int
jbe
dec
fisttps
xchg
push
adc
sbb
ja
mov
imul
inc
add
lahf
shrl
jbe
cmp
and
cmc
out
jno
pop
inc
adc
shll
insl
in
test
adc
cmc
rorb
fisubrl
int3
out
mov
jo
jnp
jmp
mov
in
btr
imul
sarl
jp
dec
jae
adc
xchg
xchg
mov
push
fs
pmulhuw
je
mov
out
jg
sub
fidivs
in
in
push
sbb
mov
imul
xchg
xor
movsb
add
and
cli
adc
fwait
loope
or
int3
scas
scas
ret
add
jb
mov
orb
and
dec
inc
jne
xor
mov
mov
mov
fidivl
lcall
mov
or
sub
mov
dec
test
fcmovb
int3
insl
mov
fists
lcall
lea
jns
and
lcall
scas
leave
fstps
jo
fs
dec
dec
mov
pop
jne
gs
xchg
pushf
dec
divl
out
pop
push
enter
iret
dec
stc
cmp
insl
xchg
enter
loope
jmp
cmpsl
push
jl
xor
call
cmp
dec
stos
shlb
sub
adc
inc
jg
push
push
bound
aam
in
call
cmpsl
or
pushf
dec
push
fsts
lret
sub
xor
xor
jmp
in
sub
add
mov
jmp
shlb
xor
mov
xor
cmp
rorl
mov
jo
jge
insl
gs
rclb
imul
sub
pop
and
rorb
dec
pop
pop
stos
inc
sbb
loope
adc
imul
aam
push
lret
add
adc
push
mov
or
mov
push
lds
in
push
popf
inc
movsl
popf
dec
mov
clc
pusha
test
out
pop
in
cld
push
fsubl
aas
cwtl
pop
sahf
rcl
mov
jle
repnz
ficompl
imul
xchg
cs
sub
das
adc
xor
sub
inc
in
into
jg
mov
ss
jmp
loopne
pusha
jle
mov
push
dec
mov
mov
mov
js
sub
jb
leave
cwtl
insl
xor
inc
ret
pop
add
shrb
adc
pop
popf
test
into
cmp
push
dec
aad
das
jge
inc
dec
or
lds
es
sti
push
lret
push
sub
cmp
or
sbb
dec
xchg
pop
stos
jbe
inc
mov
es
sti
push
lret
push
sub
cmp
or
sbb
dec
xchg
pop
stos
idivb
cmpsb
jmp
sti
push
lret
xchg
sub
cmp
or
pop
cmpsb
imul
scas
jbe
inc
push
fwait
es
sti
push
lret
push
sbb
sub
xchg
insb
or
insb
jecxz
add
xor
and
stos
test
cwtl
mov
lahf
mov
ljmp
jns
imul
cltd
mov
fmul
enter
sub
jns
or
js
push
pop
mov
adc
call
fadd
enter
sub
sbb
daa
cmp
ljmp
jae
enter
sti
pop
mov
dec
pop
cmc
je
cld
jb
mov
adc
in
cli
leave
popa
stc
sti
out
push
xor
ret
test
jnp
and
mov
cmp
xlat
jmp
pop
push
ds
cs
maskmovq
popf
test
fistpl
test
mov
cli
into
cmp
enter
out
ficomps
icebp
loopne
cwtl
jnp
repz
mov
and
push
inc
lret
jae
popa
adc
loopne
fmuls
enter
pop
imul
add
sbb
test
adc
or
or
jge
outsb
insl
fadds
cmp
dec
xor
and
sahf
clc
out
call
dec
cmp
sub
js
push
insb
int3
scas
in
shl
loop
repnz
mov
lcall
sub
xor
call
shl
mov
mov
push
inc
dec
pusha
pop
insl
xor
sbb
sub
into
fldl
repnz
into
enter
sub
sbb
or
js
push
pop
mov
mov
fmul
enter
sub
sbb
or
js
push
pop
mov
repz
mov
imull
popa
jno
fwait
lahf
push
mov
aas
lds
in
push
imull
pop
jge
mov
lea
pusha
dec
dec
and
jmp
jnp,pn
pop
icebp
xchg
push
dec
cmp
aam
int
fs
pop
jp
mov
dec
xchg
xchg
inc
xorl
sbb
sbb
xor
push
mov
jmp
jb
and
into
dec
movsb
mov
mov
out
xor
mov
loope
pusha
jl
imul
cmp
inc
ds
into
in
popf
pop
out
mov
push
add
mov
inc
and
imul
int3
int3
cmp
pop
cmp
add
push
pop
hlt
cmp
shl
fstl
int
das
mov
movsb
cli
mov
fistpll
sbb
icebp
lea
add
xor
es
pop
cli
ret
mov
inc
xor
xor
imul
cmpsb
xchg
daa
test
not
shr
and
inc
sub
cmpsb
cmp
mov
pop
push
adc
push
and
pop
sbb
insl
fucomp
and
dec
test
or
pop
pop
jg
scas
pop
dec
rorb
insb
xchg
das
xchg
rorb
stc
xchg
and
xchg
mov
add
mov
or
adc
rcll
jb
dec
stos
pop
dec
rclb
jnp
sub
adc
mov
bound
jno
insb
sti
rolb
cwtl
movsb
lds
cmpsb
push
imul
addr16
sahf
cwtl
sbb
out
add
cmp
dec
mov
call
add
ret
negb
xor
cmp
pusha
inc
jnp
pop
mov
sub
out
dec
mov
test
jmp
sbb
adc
movsb
sub
xchg
cmp
mov
fsubrl
pop
into
cmp
mov
into
cmpsl
ret
arpl
loope
outsl
jmp
cltd
push
cmp
bnd
clc
enter
dec
mov
push
fists
cmp
pop
add
xor
jmp
dec
mov
repz
sbb
imul
lds
lods
sbb
jb
das
test
jle
cs
mov
inc
fdivrl
lcall
fisubs
adc
push
mov
pop
mov
rcl
sbb
aad
movsl
xchg
xchg
sbb
sbb
fwait
out
mov
repz
xchg
inc
test
push
or
cmp
cmp
in
inc
cmp
jnp
ret
leavew
xor
push
sub
aas
pop
mov
cmpsb
js
dec
xchg
subb
adc
test
icebp
loop
mov
insl
ljmp
jecxz
push
aam
pop
pop
push
or
sarl
and
ja
dec
shrb
and
jb
cwtl
sub
dec
jae
loope
push
addr16
mov
cmp
lods
adc
decl
adc
cmp
fs
cmp
std
pushf
cmp
jbe
sub
pop
dec
or
int
hlt
rclb
fcmove
push
daa
mov
mov
out
sub
popf
or
dec
mov
test
cmp
in
adc
subl
sbb
xor
sbb
fcmovnbe
jp
cmp
push
pop
xor
push
out
mulb
call
fisttpll
jmp
das
pop
mov
aam
sub
test
jmp
scas
mov
add
jecxz
jo
ja
push
shll
lock
sbb
mov
lahf
dec
push
sar
sarb
pushf
ret
sub
mov
cmp
lods
pusha
shr
xor
push
movsl
les
clc
std
stc
or
cs
mov
lahf
mov
orb
add
pinsrw
out
dec
repz
dec
insb
cmpsl
stos
and
xchg
imul
insb
add
loopne
lcall
leave
lds
cmpsb
pop
int
cli
movsl
lods
mov
jb
lret
and
cli
ret
negl
inc
pop
pop
dec
inc
dec
mov
xor
rorb
das
jg
sbb
jmp
daa
mov
push
push
adc
xor
and
add
push
cmp
fdivrs
add
jne
push
mov
push
aam
popf
dec
jp
inc
cmp
jmp
adc
das
aam
xchg
and
in
sub
xchg
bound
mov
jbe
jb
adc
scas
xor
leave
iret
xchg
inc
insl
into
loopne
jbe
repz
inc
jo
dec
xchg
enter
sbb
mov
js
sbb
pop
xchg
orb
aas
imulb
xchg
adcl
daa
adc
cmc
or
loop
pusha
adc
push
cmp
enter
sbb
sarb
shrl
fs
loope
inc
add
bound
inc
push
push
lea
popa
xchg
rcrb
jle
dec
stos
push
xchg
int3
mov
mov
aaa
xor
addr16
add
sbb
mov
dec
pushf
mov
icebp
cmp
aas
xor
adcb
mov
fidivrs
xchg
xor
pop
pop
jmp
popa
ficomps
pop
jns
adc
jmp
mov
in
xor
push
mov
pop
cmpsl
jecxz
es
lds
mov
sbb
ss
jb
fsubrl
mov
cmpsb
pushf
in
add
mov
movsl
bound
mov
outsl
sti
and
add
hlt
cmp
push
out
mov
fadds
push
dec
dec
and
lock
test
mov
call
cmp
mov
rol
pop
aaa
xorl
cmc
dec
lcall
lock
outsl
xor
xorl
aam
cmp
jg
sub
add
scas
and
mov
push
xchg
icebp
inc
shufps
les
outsl
fwait
movsb
aam
iret
lcall
insl
adc
sar
pop
mov
scas
push
adc
outsb
int3
lods
add
mov
and
icebp
ss
scas
adc
stos
push
insl
jns
call
push
mov
arpl
cmp
repz
dec
mov
fldcw
cmpsb
sbb
ja
jp
jbe
cmc
add
xor
test
push
inc
mov
jmp
jmp
mov
cltd
sti
mov
push
jbe
xchg
cltd
sub
rcr
ret
adc
repnz
in
adc
aad
cmpsl
ss
add
dec
and
cmpsw
ljmp
pop
testl
into
cmp
shl
rcrl
shr
lret
movsl
in
mov
rcll
bnd
leave
or
fistl
lock
pop
adc
shrl
ss
clc
lcall
lret
sub
sbb
enter
sbb
shll
mov
fdivs
lea
bound
sbb
xorl
mov
aam
xor
mov
ror
pushf
xchg
cmp
iret
and
in
xchg
adc
ja
int
pop
add
adc
mov
mov
dec
cmp
int3
lods
mov
add
and
daa
inc
jg
fsubrl
out
pop
aam
xchg
push
cmp
mov
add
repz
push
sub
outsb
mov
mov
cmp
sbb
ret
jge
dec
leave
cmp
jp
pop
xchg
push
mov
stos
call
mov
add
sbb
xchg
push
in
xchg
jo
ret
imul
lods
lret
js
jae
ljmp
mov
shl
sbb
ret
arpl
jnp
fcmovnbe
rcrb
push
jo,pn
or
mov
xchg
shl
inc
in
xchg
lds
gs
and
repz
inc
insb
push
fs
jb
sbb
add
faddl
xchg
or
test
cltd
or
ss
dec
lret
jle
cmp
bound
jl
or
sub
orb
ficoml
sbb
or
xor
sub
mov
fldt
sbb
dec
cmp
testl
xor
test
push
fidivl
jp
fcom
fs
push
mov
sub
imul
sbb
pop
push
dec
sbb
jb
out
adc
push
out
mov
lahf
out
int
sbb
insl
push
adc
subb
cli
icebp
inc
arpl
sub
inc
fidivrs
lock
pushf
jle
aad
test
jb
jns
and
loop
cmp
bnd
je
loop
pop
fyl2x
dec
in
stc
or
sbb
jbe
jo
pop
jnp
inc
xor
pop
xchg
push
xchg
mov
out
sbb
jo
lods
or
movsl
jno
dec
lods
push
aaa
pop
pop
test
inc
repnz
xor
inc
add
jge
push
dec
xchg
aas
sub
mov
cmc
imul
sub
dec
insl
loopne
fcompl
ds
cwtl
cmp
mov
mov
repnz
loopne
sub
aas
mov
sub
push
xor
pop
lods
mov
scas
mov
mov
lea
jbe
adc
and
into
je
or
mov
xchg
fcmovne
loop
test
addr16
sub
ret
aad
das
xor
mov
test
enter
out
into
pop
rorb
mov
jecxz
jmp
xchg
repnz
jg
mov
shrl
jg
push
xor
or
lret
adc
xchg
ret
xor
cmp
adc
jbe
aas
xor
cld
push
ds
pop
out
push
and
lea
jle
lret
mov
pusha
sub
mov
imul
jle
movsb
ret
or
fsubs
ja
push
jne
lock
adc
jnp
add
movl
mov
pusha
or
test
pop
outsl
les
pop
loope
and
push
mov
dec
insb
clc
scas
jle
dec
sbb
fidivrl
add
push
jge
test
mov
inc
push
stos
stc
shr
movb
daa
std
inc
out
mov
push
rolb
sbb
pop
out
loopne
jmp
xchg
xchg
inc
xchg
sbb
push
call
insb
jno
adc
mov
insl
mov
sub
jae
bound
mov
push
mov
and
and
adc
adc
pop
mov
int3
dec
sbb
dec
je
popf
ret
imul
jae
hlt
jnp
mov
push
mov
and
popa
add
jmp
popf
dec
lahf
mov
mov
mov
neg
das
rcrb
or
jno
push
mov
mov
or
insb
in
daa
stos
nop
and
jl
cmp
mov
adc
hlt
cmc
das
std
push
rorl
enter
and
fistps
mov
cli
dec
push
pop
mov
cmp
xchg
fisttpl
std
xchg
jb
mov
arpl
mov
pushf
mov
mov
jno
jbe
adc
and
pop
sarb
cmc
dec
push
aam
in
mov
mov
xor
pop
pushf
add
ja
das
insl
jge
and
and
cmpsb
js
aaa
hlt
shrb
mov
jnp
popf
pop
loop
add
pop
mov
popa
decb
aam
pop
sbb
loopne
mov
pop
aaa
pop
add
mov
pop
fildl
mov
cs
pop
je
mov
in
xor
push
xchg
pop
fiaddl
cmp
xchg
scas
and
fsts
mov
ret
das
mov
add
mov
add
dec
jmp
or
test
jae
test
sbb
inc
and
mov
cmp
xor
in
adc
insl
ds
xchg
pop
or
das
movsb
arpl
mov
inc
or
or
xor
jle
jg
xor
inc
fidivs
push
jno
loop
dec
push
stos
jl
idivb
sub
out
fisttpll
inc
or
sub
sbb
push
pushf
xor
add
mov
xor
pop
fwait
cltd
push
lds
dec
xchg
inc
in
call
xor
or
iret
add
fldl
fst
or
adc
mov
ret
push
les
pop
cwtl
in
mov
out
mov
mov
mov
and
xor
push
stos
xchg
adc
add
test
mov
mov
inc
insb
ss
loopne
mov
sti
xor
clc
fiaddl
xchg
sbb
or
int
xchg
icebp
sbb
jp
lea
adc
inc
sub
iret
cmp
add
adc
ljmp
or
out
adc
inc
mov
loopne
popa
mov
push
mov
outsl
lea
and
lahf
imul
push
fildll
scas
imul
push
ds
outsl
mov
jae
das
mov
mov
out
shlb
outsl
aaa
addb
cmp
cld
pop
xchg
jp
sbb
xchg
ljmp
dec
sbb
and
add
push
jmp
dec
orl
pop
pop
inc
imul
in
mov
push
std
mov
fstp
test
fwait
jae
and
pop
cltd
imul
ljmp
lret
pushf
loop
inc
imul
aam
pushf
pop
push
pop
add
sub
scas
xor
cli
pop
test
gs
cmp
decl
jbe
aas
dec
adc
das
movsl
xchg
sbb
cmp
or
shr
pop
mov
xor
andb
pusha
mov
mov
dec
movsl
dec
xchg
pop
jnp
mov
mov
inc
addr16
xchg
js
pop
sub
sahf
push
pop
push
popf
ret
mov
mov
push
les
push
mov
outsl
xor
imul
ss
sub
out
and
bound
mov
push
movsl
out
mov
inc
sbb
je
add
mov
jbe
jo
int3
adc
dec
leave
sti
push
adc
popf
in
mov
sbb
shr
inc
inc
shlb
sbb
and
lret
lcall
in
xlat
testl
jmp
add
pop
xchg
jnp
cmp
imul
pop
mov
in
mov
mov
loope
shrb
aaa
in
nop
sub
ds
or
test
data16
jg
or
add
inc
push
fistps
rol
lcall
xchg
dec
insb
hlt
lret
xlat
push
fwait
push
jbe
mov
pop
rolb
fwait
mov
arpl
inc
in
movsl
fisttps
xchg
nop
lahf
adc
dec
dec
pusha
clc
ret
mov
jle
fcompl
idivl
dec
fmulp
lahf
decl
std
cli
adc
jo
insl
or
xor
cmp
xchg
xchg
cmp
sbb
adc
dec
fmull
add
cmp
xchg
jnp
pop
pop
dec
addr16
ds
xor
pop
mov
add
ftst
xchg
mov
shr
aad
pop
cli
or
outsb
jns
xchg
stc
aas
add
repnz
mov
lcall
add
xchg
push
xor
mov
jge
rcrl
sarl
popa
bound
add
call
out
dec
dec
into
fwait
bound
xchg
mov
jne
ret
cli
dec
mov
pop
scas
gs
and
aam
mov
ljmp
push
call
into
xchg
testb
jl
subb
shll
sbb
int3
repnz
lods
call
dec
sbb
lock
cli
cmpsb
lahf
sbb
adc
xchg
push
fistl
scas
repnz
xor
adc
or
mov
fsts
in
cmpsl
movl
lret
jne
xor
fldenv
test
out
jb
sub
mov
mov
notl
repz
test
lret
cmp
xchg
fsubrs
out
pop
cvtpi2ps
xchg
mov
or
jo
push
cmp
mov
xlat
xor
stos
out
ret
mov
pop
int3
add
aad
sti
cli
push
shll
and
lret
js
dec
out
fadds
xor
jmp
or
dec
sub
dec
jno
cld
dec
jno
xor
test
mov
or
mov
ss
insb
in
out
out
push
ret
test
add
dec
push
mov
sahf
test
push
adc
inc
jge
xchg
dec
js
imul
lods
sarl
sti
movsb
xor
test
jl
fcoms
mov
in
jmp
les
sub
popa
test
aas
daa
or
aad
and
andl
dec
fcmovb
lret
repnz
jne
jecxz
push
ljmp
popa
push
and
dec
and
cwtl
stos
in
jae
clc
xchg
inc
jmp
fimull
cmp
jbe
fs
arpl
lds
addb
push
insl
mov
arpl
pop
cmc
pop
ret
subl
push
outsb
out
push
jle
pop
adc
adc
dec
sbb
out
mov
sub
das
cld
insl
push
out
mov
or
mov
aad
inc
cmc
jnp
add
xor
fwait
repz
mov
test
sbb
mov
add
loope
lods
aas
jo
bound
xchg
cltd
sub
cs
adc
movb
sbb
cwtl
mov
clc
jae
inc
lret
mov
cmp
sbb
mov
fs
mov
xchg
mov
push
xlat
loope
shll
xchg
pop
into
jecxz
mov
out
adc
fmuls
movsb
and
push
inc
dec
push
fiadds
xchg
jle
sbb
jbe
test
push
push
shlb
inc
repz
xor
adc
jge
wbinvd
xchg
movl
fucomp
jnp
sub
int
sbb
imul
jno
pop
int
xor
push
mov
cmp
repz
mov
xchg
sbb
mov
shlb
stos
xchg
jmp
add
enter
add
mov
mov
push
jnp
jle
iret
mov
imul
clc
jne
cwtl
xor
lcall
pop
xor
push
lahf
pop
ljmp
out
inc
or
xor
cmc
jo
xchg
repz
mov
cli
test
sbb
pop
jp
xchg
mov
jns
sub
lods
inc
pop
and
pop
cmp
call
mov
sub
add
enter
imul
loope
pop
cli
xor
mov
xor
mov
insl
ljmp
or
sbb
cmp
or
mov
lds
test
dec
leave
pop
jno
adc
sbb
cwtl
xor
sbb
rcll
je
les
cmp
inc
mov
sbb
and
loop
imul
nop
adc
lcall
cs
mov
addr16
scas
outsb
lea
mov
ret
pushf
sub
leave
xchg
adc
scas
ret
movsl
mov
shlb
or
lock
mov
std
xchg
fwait
pop
pop
cli
add
rclb
rcrb
popa
mov
outsl
outsl
dec
xor
int
cmp
jne
sbb
popa
movsb
sub
jecxz
or
xor
push
loopne
dec
rolw
ds
mov
sbb
mov
push
cmp
test
xor
jne,pn
pop
into
cmpsl
test
call
jmp
rorb
lods
clc
ret
addr16
pop
repz
mov
test
divb
pop
dec
popa
dec
out
adcb
nop
ljmp
lret
jbe
nop
fistpll
push
testl
mov
xchg
xor
cmp
cmp
mov
xchg
xchg
stc
fwait
jl
pop
push
es
sti
fnstsw
stc
jns
loopne
insl
stos
jmp
call
ret
aaa
mov
sbb
dec
sub
insb
mov
dec
ljmp
mov
mov
and
cld
std
xchg
das
inc
sbb
outsb
jne
rorl
pop
ds
adc
mov
xchg
adc
mov
arpl
scas
lret
pushf
loopne
push
pop
out
cmpsl
imul
xchg
testb
int3
inc
es
adc
mov
and
inc
sbb
jbe
mov
cmpsl
inc
xor
mov
adc
inc
mov
scas
rcrl
aas
pop
pusha
add
mov
test
arpl
mov
jno
xchg
loopne
pop
or
out
lods
mov
push
adc
scas
arpl
xchg
pushf
or
mov
mov
push
mov
test
sub
mov
adc
call
add
adc
in
pop
add
cmp
xor
test
loop
lds
pop
mov
lds
lods
imul
enter
divl
shll
xor
lods
movb
xchg
sub
jo
xchg
int3
mov
movsl
adc
or
mov
je
cmp
ja
mov
call
fidivrs
sub
sbb
or
js
push
pop
mov
mov
fmul
enter
sub
sbb
or
js
push
pop
mov
xchg
mov
fmul
enter
sub
sbb
or
js
push
mov
cltd
push
fdivrp
out
call
push
cmp
sub
push
loopne
cmpsl
ss
inc
push
mov
lahf
inc
into
xor
fisubrl
lcall
outsl
fidivrl
pop
cli
pop
add
cmp
push
jp
fisubrl
mov
scas
ljmp
mov
pop
notb
out
xlat
add
int3
testb
xchg
popf
sbb
outsb
sti
dec
adc
add
outsb
push
jns
mov
or
dec
adc
add
repnz
adc
mov
sbb
inc
inc
push
push
scas
xlat
push
pop
push
pop
dec
ljmp
pop
push
or
sub
mov
lcall
mov
call
inc
lcall
movsl
pop
dec
jmp
push
outsl
scas
dec
iret
movsl
aas
imul
sarb
fadds
xchg
out
aad
cli
jg
iret
flds
cs
xor
dec
mov
mov
repnz
mov
lahf
push
aad
push
out
cmc
adcl
bound
stos
sbb
or
scas
sbb
dec
out
push
ljmp
ret
aaa
or
jb
movsb
push
stos
ja
push
js
insb
mov
and
das
xchg
jns
sbb
cli
pop
add
or
xchg
mov
and
mov
push
fistpl
jnp
pop
mov
and
ficompl
jnp
jae
jp
mov
lcall
outsl
fidivrl
dec
cli
pop
or
cmp
push
jp
mov
lcall
outsl
fidivrl
dec
cli
pop
or
mov
shlb
aaa
leave
mov
adc
dec
push
test
or
push
xchg
stos
cltd
cmc
out
aam
ljmp
inc
push
clc
sarb
inc
push
push
inc
aas
in
rcll
add
mov
scas
sbb
xchg
ja
dec
js
or
mov
xor
out
pop
lds
ret
mov
mov
rorl
add
xchg
xchg
fnstsw
scas
shll
leave
pop
mov
mov
inc
comiss
inc
mov
mov
lret
mov
repnz
mov
pushf
push
pop
andl
push
jl
lret
jns
dec
jge
leave
add
shlb
mov
aad
jle
movsb
ljmp
pop
jl
or
push
subl
test
pop
pop
fsubs
jmp
add
into
addr16
jp
stos
mov
in
enter
hlt
mov
int3
mov
mov
je
nop
divb
jle
lods
or
test
cmp
roll
ret
and
scas
shll
ds
in
aaa
mov
cmpsb
jmp
xor
mov
push
push
jno
leave
ret
je
or
bound
lock
cs
leave
push
adc
sub
or
int3
sbb
rcll
push
jns
jmp
andb
bound
xor
xchg
stc
cmp
jmp
sub
mov
lret
fs
icebp
ds
push
popf
add
sbb
or
mov
jb
pop
inc
adc
aaa
mov
push
popa
jnp
xor
out
mov
jnp
repnz
sti
aas
mov
sar
fcompl
inc
add
loopne
adc
cli
lea
adc
cmpsb
xor
outsb
and
fmul
aas
mov
lods
les
xchg
movsb
dec
and
rcl
outsl
mov
mov
jb
mov
push
fdivr
pop
sbb
sbb
lret
movsl
icebp
mov
repz
aaa
int
lret
add
lods
mov
clc
aam
fstpl
arpl
xchg
es
test
inc
ja
negl
sbb
arpl
out
add
xchg
or
mov
dec
xchg
stc
rcrl
mov
pop
cmpsl
test
psraw
arpl
dec
fldt
inc
loop
std
out
xchg
sub
xchg
cmp
pop
add
jae
cld
or
add
fistl
mov
jp
cmc
fidivrl
jo
data16
jno
adc
inc
sahf
push
jle
or
xor
dec
mov
mov
sub
adc
xor
int3
jg
data16
cmp
mov
xchg
xchg
out
in
xchg
xchg
mov
cmp
es
lock
adc
and
sbb
mov
popf
into
ret
push
cmpb
mov
fnsave
ret
popf
sub
insl
pop
push
rcll
xor
and
cmpsb
mov
scas
adc
push
xchg
ds
and
and
lea
pushf
push
mov
inc
cmp
and
mov
pop
sub
jb
ret
out
sub
lahf
addb
xor
mov
pop
lret
test
mov
mov
xor
hlt
inc
je
rorb
dec
dec
cmpsb
mov
test
imull
adc
jecxz
clc
in
stos
ljmp
xchg
out
pop
test
hlt
cmp
pop
or
mov
mov
outsb
sub
add
rorl
sub
xorb
sub
push
cmp
xchg
sbb
inc
add
imul
push
rdmsr
mov
and
loopne
fcmovne
inc
adc
xlat
cmpsb
pop
test
push
add
enter
push
mov
stos
inc
notl
sub
add
lods
pop
or
jge
js
dec
mov
inc
loopne
xor
xchg
test
fsts
pop
add
pop
enter
sub
and
jbe
fstp
adc
sbb
pop
cmpsb
sub
sub
cmc
mov
jb
lods
repz
leave
cmp
les
mov
push
insl
xchg
lcall
fsubs
mov
fnstcw
movsb
xchg
sub
jp
call
push
pushf
adc
pushf
fcmovnbe
and
adc
jae
xor
sbb
pop
jg
ret
cmp
fistps
fcoml
lods
clc
add
adc
sub
and
jl
in
rcrb
mov
cli
mov
and
jnp
jp
dec
xor
pop
lahf
mov
test
xlat
and
inc
sbb
xchg
mov
xchg
jecxz
xchg
xor
sub
mov
call
cld
sbb
rcrl
rcr
ret
add
cmpsb
sti
pop
mov
pop
sti
lock
xchg
into
mov
mov
cwtl
mov
movsb
cmc
lods
cwtl
fldcw
mov
cwtl
imul
pop
cmp
mov
lret
xchg
add
scas
mov
dec
and
push
cmp
in
mov
lods
jmp
and
push
cmp
cmp
xor
daa
push
loopne
scas
shrl
das
jg
jge
cltd
mov
adc
push
pop
sub
sbb
bnd
rcl
dec
jo
xchg
lods
add
jmp
and
insl
aas
call
inc
xchg
xchg
push
xchg
mov
dec
mov
inc
pop
fistpl
cmp
add
out
out
dec
push
bnd
lds
out
xchg
xchg
lock
fcmovnb
insb
adc
xchg
mov
jge
or
sub
mov
daa
pop
or
adc
lahf
cmp
cmp
inc
ror
mov
add
mov
add
inc
xchg
idivb
xchg
and
or
stos
and
jnp
pop
loop
xchg
xchg
add
insl
iret
hlt
pop
pop
ret
adc
xchg
inc
daa
hlt
insb
sarb
mov
dec
sub
and
mov
fcmovnu
push
jge
out
or
arpl
sub
fisubs
xchg
jae
mov
dec
adc
mov
pop
in
xor
cmp
sbb
ss
jecxz
data16
sbb
jnp
ss
aas
xchg
xchg
insb
lods
lds
inc
aad
jnp
pop
dec
mov
xchg
xor
cmp
mov
nop
xorb
xor
insb
pop
outsb
cwtl
pop
pop
jle
mov
push
aam
push
shll
dec
pop
into
mov
sub
arpl
insl
and
fistps
scas
fbld
clc
mov
in
test
hlt
andb
sbb
cmc
push
mov
mov
rorl
sbb
test
popf
dec
inc
mov
sub
mov
std
jae
xchg
sub
inc
daa
mov
jae
cltd
loope
mov
jno
and
mov
or
xchg
jl
pop
aam
leave
aad
xchg
mov
and
arpl
add
mov
ljmp
mov
mov
push
mov
push
and
shl
dec
mov
cmpb
sbbl
pop
mov
or
clc
loopne
and
fsubs
xchg
gs
lea
inc
xor
popf
mov
mov
sti
and
cs
test
mov
jnp
mov
ret
push
inc
fsubrl
into
lcall
lock
lahf
outsb
push
mov
jo
xchg
pop
test
jl
cmp
pop
ds
push
mov
adc
dec
add
lods
fs
xor
call
les
popf
mov
cmp
in
ljmp
fxch
push
fsubl
or
mov
es
xor
xchg
jmp
sbb
jge
add
pop
jns
ret
pop
push
sbb
out
add
into
pop
sbb
add
or
pop
test
fcmovnu
mov
insl
hlt
push
call
dec
shll
or
daa
pop
sti
shl
sbb
scas
jle
jnp
outsl
outsb
das
xchg
cld
inc
adc
in
insl
xchg
jp
in
lods
inc
lahf
mov
lahf
stos
push
clc
dec
lods
inc
lea
stos
cmp
mov
cmpsb
inc
sub
sarl
dec
xchg
lock
sub
xor
into
ficompl
cs
mov
cmc
jne
aad
ret
addr16
repz
les
sbb
outsb
mov
dec
cmp
and
mov
je
pop
add
fistpll
mov
in
add
mov
xchg
sti
in
sti
push
je
push
xchg
xor
cmpsl
cltd
es
xchg
mov
cmp
jbe
aad
pop
mov
dec
arpl
sub
pop
adc
jp
je
ds
je
push
and
pusha
pop
dec
sbb
call
pop
out
nop
inc
dec
movsb
insb
int
out
movsl
loopne
lcall
mov
popf
and
dec
mov
mov
mov
repz
pop
out
jae
out
inc
mov
andl
lahf
ss
cmp
dec
mov
lret
scas
movsb
cld
and
pop
mov
mov
pop
mov
and
dec
mov
mul
push
mov
adc
dec
scas
push
adc
inc
cltd
lea
lods
mov
icebp
popa
mov
int3
roll
cmpsl
rol
je
or
mov
rcrl
xchg
mov
and
and
stos
push
std
sub
push
mov
test
scas
add
mov
in
cmp
push
mov
cmp
adc
push
xchg
xor
jle
cltd
inc
icebp
sbb
clc
int3
pop
add
cltd
pop
testl
pushf
pop
stc
or
pop
and
push
int
cmp
out
and
frstor
mov
bound
push
subl
sbb
xchg
push
jg
push
push
mov
faddl
mov
call
rep
push
adcl
je
hlt
xor
sbb
cs
and
loope
push
jg
ljmp
cs
mov
mov
lea
and
xlat
data16
dec
lret
out
jo
or
popa
add
or
add
insb
pusha
loope
cs
shr
inc
std
pop
mov
push
and
cld
outsb
push
sar
lret
sahf
repz
ljmp
add
xchg
fsubr
in
aam
cmp
add
js
test
mov
subl
xor
mov
sarb
xchg
pop
fs
sbb
dec
xchg
mov
pop
enter
shlb
outsl
pop
cmp
fs
bound
dec
push
fimull
xchg
fwait
std
or
pop
test
sbb
mov
mov
fs
mov
mov
xchg
lcall
xor
xorb
push
push
adc
sub
out
sbb
imul
cmp
jbe
gs
adc
insb
dec
js
fstpl
push
pusha
jns
xchg
arpl
jbe
sbb
sbb
daa
adc
stos
or
daa
jnp
fnsave
push
leave
out
push
xor
loop
mov
je
icebp
in
and
cmp
inc
sub
and
push
add
call
hlt
mov
negb
in
sbb
fisttpll
sbb
inc
sub
dec
ficomps
xchg
mov
pop
xchg
pop
xchg
rcrb
cmp
xchg
pop
dec
inc
jmp
mov
adc
les
and
adc
ss
push
cmpsl
xor
push
push
filds
xchg
add
push
or
stc
sub
push
push
adc
imul
jb
mov
cli
xchg
mov
stos
push
mov
jno
or
shll
jbe
cmp
fsubr
mov
lock
int
movsl
ja
xchg
dec
fcomip
daa
addr16
pushf
cmp
and
cmp
clc
cld
out
or
movsb
pop
sub
out
sbb
xchg
push
fwait
push
fwait
mov
push
mov
jns
xor
test
or
xchg
jecxz
in
jae
test
lret
mov
int3
jno
mov
repz
popf
mov
sarb
mov
testb
xchg
add
aad
push
add
xchg
push
cmc
cmpsb
push
xor
adc
cltd
sbb
sub
add
sar
pop
push
xchg
mov
push
adc
sbb
mov
stos
fstps
inc
push
sbb
leave
lret
push
jp
in
mov
sbb
xchg
dec
inc
ss
add
pop
adc
inc
sub
mov
sbb
and
stos
push
icebp
das
bound
pushf
movsb
cmp
jbe
fs
insb
adc
adcl
xchg
mov
fsub
repz
jb
xor
gs
stos
xor
imul
xor
idivl
adc
xlat
jbe
scas
dec
out
jne
jle
js
cmc
and
mov
xchg
xor
cmp
xchg
fldt
pop
sub
add
sbb
dec
pop
inc
lret
cltd
out
inc
jge
ljmp
sub
cmc
dec
push
clc
aad
out
pop
cmpsb
sbb
clc
pop
jmp
adc
jge
js
movsb
xor
dec
iret
push
push
int3
jl
movsl
mov
dec
lods
jne
push
adc
or
aaa
mov
lcall
xchg
mov
mov
and
mov
xchg
adc
dec
and
mov
cli
xchg
sub
mov
mov
cmp
and
inc
test
sarl
out
clc
test
popa
and
or
fdivrl
xlat
mov
imul
xor
mov
fidivl
jbe
xchg
in
test
mov
in
xchg
ss
sub
inc
loop
pop
push
push
inc
cmp
sar
cmc
push
enter
outsb
imul
dec
mov
sub
jl
and
popf
dec
icebp
sti
lea
dec
and
dec
leave
xlat
push
xorl
mov
xchg
and
fadd
jo
cs
mov
mov
cmp
aas
jno
cmpsl
cmp
or
push
xchg
xor
lods
adc
fstps
test
xor
sbb
xchg
orl
push
lock
pop
jne
shlb
repnz
jmp
inc
dec
nop
or
imul
dec
lods
nop
lret
add
stos
add
out
xchg
mov
dec
jg
jle
sbb
xchg
mov
js
xor
or
scas
ret
sub
mov
add
dec
les
and
ja
divl
sub
in
hlt
and
popa
lcall
or
shll
cmp
inc
cmp
out
into
push
fs
push
and
dec
aas
daa
adc
cmp
int3
aad
jge
add
push
lea
lret
fcomps
add
adc
fnsave
hlt
jo
add
sbb
or
adc
loop
ja
int
icebp
mov
out
popa
test
sbb
enter
jno
aaa
xchg
cld
push
mov
inc
cmp
rol
test
mov
repnz
dec
jae
insb
addr16
sub
inc
stc
push
loop
jne
out
stos
jno
aam
stos
test
sbb
cld
inc
in
and
test
loope
xchg
clc
enter
mov
or
fnstsw
scas
add
push
dec
inc
and
or
cli
psadbw
dec
pusha
push
call
jbe
ss
cmpsl
lea
cmc
repnz
aaa
sti
insb
jmp
fwait
movsb
fnsave
insl
mov
jbe
ficoml
sbb
sub
add
rcr
es
add
mov
dec
sub
mov
mov
mov
nop
cmp
cmp
in
and
sub
repnz
push
sub
lds
push
push
xchg
jge
mov
or
fsubrp
ds
add
lret
push
std
stos
ss
sub
push
shrb
loop
fildll
subb
cmp
test
sbb
and
ror
mov
test
jle
sub
je
fildl
bound
jg
mov
out
push
aad
add
ljmp
out
fbld
add
cmc
adc
mov
mov
mov
cmp
or
movsb
scas
ljmp
xchg
or
xchg
shrl
mov
jl
xor
jae
enter
cmp
add
mov
and
mov
pusha
dec
or
jnp
in
or
stc
aas
outsl
jp
test
xchg
dec
sbb
iret
sbb
fisttps
addr16
jno
and
movsl
adc
mov
es
dec
jg
insb
dec
pop
xchg
lahf
mov
mov
dec
in
dec
mov
push
pushl
repnz
imul
rorb
fnsave
jns
sub
test
or
jl
push
dec
outsl
or
nop
inc
aas
mov
xlat
adc
or
adc
xchg
mov
jno
xor
cmpb
das
pop
inc
jbe
test
add
push
and
jb
clc
test
and
aad
inc
dec
ds
inc
sbb
sub
das
in
fisubrs
dec
mov
inc
sub
mov
mov
int3
inc
mov
repnz
clc
inc
or
stc
insl
ja
jge
out
jge
in
ljmp
into
nop
cmp
setge
int3
push
and
in
aad
cmp
in
outsb
or
stos
fst
dec
dec
iret
bound
and
add
std
and
add
in
push
arpl
inc
loopne
in
pop
rcrb
or
fcmovnb
mov
adc
aaa
leave
popf
mov
fnstenv
cmpsb
test
shll
dec
pop
jp
outsb
cmp
clc
mov
das
inc
or
mov
hlt
mov
inc
and
mov
xchg
idivl
fistps
mov
push
test
push
mov
mov
scas
shlb
pop
push
out
cmpsb
add
addr16
lahf
std
out
ss
cmp
xor
iret
pop
psubd
loopne
faddl
cmp
and
mov
pop
mov
push
jg
fs
ja
pop
fisubrs
pop
push
nop
lahf
or
cmp
mov
mov
adc
mov
ficoms
mov
ja
inc
cmp
addr16
lea
mov
icebp
test
mov
adc
inc
add
jno
dec
jbe
adc
mov
push
scas
xor
dec
add
icebp
shrb
and
push
mov
pop
insl
decb
out
or
stc
hlt
cmp
ss
cltd
add
jg
inc
jns
add
mov
fmull
mov
iret
push
xchg
in
movsl
clc
pop
sub
iret
xchg
add
dec
xchg
or
jb
cmp
ljmp
test
mov
push
mov
out
push
xor
pop
gs
pop
aas
mov
push
test
push
and
sbb
stos
xchg
bound
mov
orl
scas
out
cld
push
fisubrs
cltd
sbb
push
inc
outsl
sub
push
ret
mov
ds
jle
dec
into
pop
imul
sti
pushf
out
adc
fsubrp
dec
push
and
mov
loope
adc
mov
xor
mov
or
std
xor
sub
rcrl
cmp
movsb
inc
xor
mov
imul
out
repnz
incb
test
int3
jecxz
jae
push
xchg
mov
negl
add
daa
sub
in
lea
cmc
inc
jbe
hlt
sti
enter
cltd
push
or
test
xchg
lret
shr
lret
negl
enter
add
dec
jnp
jns
jnp
cmpb
xor
loope
mov
dec
sub
dec
popa
pop
lret
push
jbe
cmp
push
std
and
push
cli
jp
bnd
sub
enter
shl
or
pop
xchg
mov
push
jl
mov
stos
data16
fcoms
or
and
or
subl
es
adc
int
imul
xor
sub
mov
icebp
sti
es
fisttpll
push
je
xchg
jecxz
push
jo
xor
test
push
insb
sbb
stos
aas
push
int
cld
dec
push
cld
popf
test
mov
add
xchg
loop
xchg
jl
jns
cmp
add
scas
cld
cli
mov
xchg
out
push
fisubrl
lods
stos
movsl
fmuls
xchg
out
push
and
cli
sahf
js
sbb
jnp
mov
sbb
mov
adc
sub
jmp
out
lods
rcrl
sbbl
and
jae
mov
enter
pop
fnsave
fmul
mov
lds
out
mov
xchg
sub
push
xor
mov
mov
fs
aaa
pop
and
ret
enter
das
xchg
aaa
enter
fwait
das
addr16
shr
stos
ds
push
aas
jl
xchg
mov
mov
pusha
mov
add
push
sarb
shrb
mov
mov
popa
bound
mov
sub
adc
out
sbb
dec
and
add
fistl
ljmp
cmp
push
mov
sbb
push
and
sub
lret
lods
addl
ja
pushf
and
inc
pushf
sub
push
cmp
adc
das
xor
mov
dec
out
pop
ljmp
jp
mov
lcall
outsl
fidivrl
dec
cli
pop
or
cmp
push
jp
mov
lcall
outsl
fidivrl
dec
cli
pop
or
cmp
push
jnp
mov
lcall
outsl
ret
jg
dec
lret
scas
ss
dec
out
dec
ljmp
cli
fisttps
btsl
push
adcb
pop
or
add
pop
adc
xchg
mov
cwtl
int3
test
mov
or
or
dec
sub
or
popf
fmuls
mov
mov
or
or
dec
sub
insl
enter
cwtl
fcomps
xchg
jmp
rcrl
push
out
mov
add
repz
out
out
push
adc
movsb
sbb
test
aam
shl
je
push
jb
inc
pop
mov
incb
mov
add
xor
pop
adc
and
scas
jbe
int
clc
mov
adc
sub
and
jg
stos
sub
pusha
pop
out
jno
cmp
or
sub
int
sub
sbb
in
ret
not
cmp
leave
rcrb
fmuls
mov
sbb
xchg
mov
sub
popf
popf
mov
enter
int3
lret
popf
outsl
std
mov
or
or
dec
sub
insl
enter
call
fstpl
stos
sub
jl
insb
insl
sbb
inc
sbb
fwait
out
mov
mov
jno
popa
or
dec
insl
push
push
or
jge
mov
jg
std
pop
rcrl
pop
cs
sbb
dec
sub
insl
enter
call
fstpl
in
dec
sbb
js
or
dec
sub
insl
enter
call
fstpl
in
dec
sbb
pop
ljmp
cmpsl
mov
or
mov
inc
or
push
stc
loopne
ficompl
sarb
push
popf
outsb
push
pushf
mov
jg
cmpsl
mov
cmp
cli
rcl
adc
out
adc
mov
dec
jmp
dec
mov
mov
cmp
cwtl
push
or
push
push
xchg
fcmovbe
xlat
dec
fdivl
inc
mov
loop
sub
mov
iret
into
pushf
cmp
cltd
cmp
lcall
in
fbld
fstpt
lds
pop
sub
add
enter
mov
div
jl
lods
jae
adc
stos
movb
adc
out
push
cmp
rcrl
shll
cmp
notl
mov
into
pop
lea
jmp
mov
mov
pushf
pop
ret
mov
mov
lods
out
out
aaa
aas
cmp
lret
lock
sahf
dec
add
int
lods
loope
or
adc
jecxz
jb
in
repnz
cmp
xor
lods
inc
fstpt
popf
inc
inc
add
pop
dec
sub
inc
xchg
jo
mov
add
out
mov
jns
xchg
mov
adc
punpckhdq
add
push
insb
push
inc
cmp
scas
jle
cs
iret
jbe
pop
dec
cmc
fstpl
in
push
pop
pop
test
push
or
xor
fistl
outsb
or
or
inc
in
mov
add
mov
push
xlat
and
loopne
movsl
jns
test
xchg
fisttpll
and
scas
imul
aad
sbb
adcl
jae
adc
addl
pop
dec
test
repz
cmp
cmpsl
inc
stc
pop
dec
jl
mov
inc
push
push
fdivs
scas
clc
xchg
pop
test
cmc
test
lods
and
std
pushl
je
add
pop
xchg
call
mov
stc
out
stos
xchg
mov
jno
dec
arpl
mov
cmp
jo
movsb
loope
scas
or
mov
add
in
push
mov
or
and
mov
mov
rclb
dec
fisubs
movsb
adc
sbbb
push
xchg
dec
lock
jp
cmp
imul
dec
test
and
popf
aad
lahf
pop
sahf
cld
or
inc
sub
cmp
xchg
scas
xchg
lock
loope
js
dec
mov
add
sbb
outsb
gs
aaa
scas
or
call
push
inc
adc
out
xchg
sbb
js
or
mov
inc
jp
mov
pop
loop
hlt
clc
push
repz
pop
or
daa
push
xor
imul
mov
js
pop
jmp
int3
jl
push
dec
add
xchg
push
in
fidivl
in
je
fcoms
cmp
push
addl
addr16
stc
fneni(8087
in
lods
repz
mov
loope
dec
fstpt
sub
pop
test
movsb
push
ds
sub
movsl
cmp
ret
add
vmovdqa
in
cwtl
pop
or
xor
rcll
call
push
arpl
push
mov
jp
push
jg
loop
mov
push
pushf
adc
jne
sbb
sahf
jp
sub
pop
repnz
dec
fs
mov
outsb
jne
and
les
mulb
pusha
lods
outsl
pop
push
inc
push
aad
lcall
enter
into
clc
shrb
xor
dec
fimull
cmp
mov
std
mov
mov
popf
mov
mov
mov
adc
inc
aaa
mov
mov
mov
push
ds
mov
or
aad
push
xor
bound
lret
stos
add
push
dec
aad
adc
push
ss
inc
pop
clc
inc
lds
mov
push
int
repz
in
pop
dec
insb
add
pop
add
fsts
lea
iret
shlb
outsl
addr16
pop
pop
sbb
jp
repz
push
sub
jns
imul
mov
mov
push
cltd
add
mov
add
and
and
cmp
fcomip
arpl
scas
out
xchg
pop
mov
push
fsubrs
pop
add
xchg
jae
cs
xchg
test
out
shlb
stos
insb
sbb
fwait
xor
jo
pop
ljmp
xor
dec
pop
fcmovu
mov
movsb
add
leave
icebp
nop
mov
fcomip
lret
inc
jp
es
xchg
lcall
jle
push
dec
lock
movsb
mov
stc
pusha
decl
xlat
pop
push
mov
dec
addb
sti
fsubl
mov
stos
icebp
sbb
iret
repz
fs
push
jns
cld
cs
sub
dec
dec
or
push
mov
inc
push
test
popf
xchg
inc
out
sbb
repnz
insl
adcb
shll
je
in
sti
mov
xchg
sub
les
inc
aaa
hlt
arpl
xchg
mov
mov
shlb
pop
aas
rolb
dec
inc
adc
mov
pop
mov
jbe
xor
ficomps
pop
scas
xor
es
lods
jbe
mov
or
mov
mov
inc
mov
jl
mov
outsb
loopne
out
popf
adc
push
dec
aam
mov
std
popa
push
dec
or
pop
pop
pop
shll
repz
fidivrs
rcll
movsl
lods
int
mov
into
pop
push
aaa
testl
xchg
sbb
loopne
pop
imul
divb
add
dec
mov
xlat
sub
nop
inc
or
xchg
lods
sbb
jae
shl
lods
ja
insb
pop
or
pop
xor
shlb
ss
roll
jae
ss
mov
and
call
xchg
sub
add
cmp
mov
xchg
ja
add
mov
ss
fcoml
mov
xlat
ds
idivl
or
mov
dec
mov
add
shrl
shl
jbe
push
pop
pop
leave
in
lcall
mov
dec
popf
mov
stos
sub
std
testb
hlt
jne
jno
pop
jns
xor
das
fisubl
pop
mov
mov
incb
rorl
movsb
sarb
imul
xor
into
pop
les
push
out
fbld
xchg
dec
leave
adc
call
lock
cmp
or
insb
in
cmp
clc
pusha
sub
mov
stos
dec
push
cs
addr16
mov
rcrb
cmp
iret
aam
sbbb
leave
movsb
dec
add
xor
sbb
outsb
adc
fildll
in
jle
imul
mov
pop
popf
fistpl
jecxz
call
dec
mov
push
sarb
nop
mov
inc
hlt
inc
js
pop
insb
ss
pop
movsb
inc
or
fisubs
mov
fiadds
outsl
sub
mov
mov
fildl
clc
xor
sub
int3
nop
iret
std
xchg
das
or
out
cli
push
ret
cmpsb
mov
or
ljmp
and
add
mov
cmp
xchg
add
push
fmulp
cmp
in
aas
sub
mov
mov
std
jmp
cs
mull
pop
and
add
out
outsb
flds
in
jg
xchg
mov
lahf
in
mov
loope
xor
icebp
sub
rorl
pop
inc
adc
adc
jns
pop
icebp
dec
fmul
test
pop
jmp
cli
push
movsl
out
pushf
out
loope
mov
dec
adc
scas
push
jno
add
push
sbbl
mov
sbb
insl
xchg
test
in
ljmp
into
scas
movsl
sub
gs
inc
sbb
jmp
mov
mov
fwait
in
ja
sub
xchg
cltd
mov
xchg
dec
add
scas
inc
cld
jl
sahf
js
jae
mov
xchg
or
test
and
push
notl
pop
dec
push
adc
sahf
add
aam
mov
fistps
in
cmc
adc
sub
test
outsl
inc
push
outsl
xchg
call
cmp
roll
adc
mov
movsb
sbb
adc
shrl
xchg
dec
xor
sbb
loope
cmc
mov
sub
inc
sub
iret
mov
dec
or
into
cwtl
shr
jle
xor
lcall
dec
sub
mov
pop
insb
ja
or
data16
pop
xchg
push
sub
icebp
and
icebp
inc
or
gs
stc
addr16
push
cmc
gs
dec
mov
mov
nop
or
pop
stos
sub
and
cwtl
cli
jl
add
cwtl
ds
jo
xor
shl
ret
jecxz
fwait
push
pop
jmp
subb
pop
jo
lret
xchg
push
mov
gs
lods
cmp
lods
nop
mov
sbb
enter
jno
jg
sub
jo
or
scas
lock
popf
fiaddl
dec
xor
xchg
push
repz
add
les
hlt
jbe
rcl
jae
push
aas
cmpb
jle
xor
fisttpll
ja
inc
jecxz
push
out
insb
mov
mov
or
mov
xchg
movsl
pushf
je
cwtl
rol
add
inc
imul
frstor
push
js
xchg
mov
and
sbb
mov
or
cwtl
popa
xlat
daa
xchg
lods
push
in
adc
cld
push
cld
adcl
out
mov
arpl
ja
into
ljmp
enter
mov
push
xor
mov
sbb
inc
ds
jmp
aas
mov
mov
lock
adc
mov
jp
pop
insb
repnz
mov
pop
iret
add
cmp
and
imul
daa
fwait
pop
pop
ljmp
jg
or
mov
stos
mov
dec
fdivl
or
mov
mov
or
sbb
mov
pop
stos
add
test
adc
rclb
rorl
scas
add
mov
pusha
outsb
xchg
and
mov
movsl
out
sbb
into
xchg
std
mov
jg
lock
dec
icebp
and
out
iret
sub
xchg
das
mov
insb
lret
movsb
gs
scas
lret
dec
cmpsb
fbstp
sbb
sahf
or
push
mov
or
adc
movsl
xchg
imul
pusha
mov
and
in
je
dec
pop
mov
jae
inc
cmp
push
adcl
clc
rcl
and
sahf
adc
enter
cmpb
mov
cmpsb
test
daa
and
xchg
stos
pop
aad
pop
cld
call
push
xchg
push
cmp
ret
cmpsb
jno
and
shlb
outsl
cwtl
push
adc
mov
dec
ffree
scas
mov
ret
mov
les
xlat
adc
xlat
rcrb
xchg
add
xlat
mov
mov
enter
mov
pusha
popf
insl
push
xlat
sbb
mov
pop
push
lods
sbb
ss
mov
and
into
mov
push
jl
mov
lds
cmp
add
xchg
or
cwtl
mov
fildll
xor
mov
xchg
mov
fistl
xor
leave
cmp
pushf
jmp
sub
add
add
xchg
test
add
push
in
cwtl
jmp
iret
movsb
in
cwtl
fs
sbb
dec
mov
popf
xchg
stc
mov
cmp
adc
icebp
repnz
mov
or
aam
inc
push
adc
out
or
loope
jg
push
rolb
lahf
in
push
jbe
cmp
mov
loope
sub
xor
mov
and
fs
sbb
sbb
mov
or
loope
xchg
das
test
leave
and
mov
or
add
out
lods
testb
test
test
je
mov
popf
stos
cmp
popf
mov
xor
ds
int3
xchg
test
xchg
jl
push
ficompl
sub
in
jmp
cmc
out
dec
shrl
pop
push
mov
mov
imul
fsubs
imul
mov
jmp
je
lds
shlb
lock
test
push
lahf
dec
loopne
notl
push
xor
cmp
lea
sahf
mov
pusha
and
adcl
test
out
bound
pop
push
sbb
sub
cs
and
jno
js
je
fcmovbe
push
psrad
cmp
in
sub
mov
inc
and
wrmsr
cmp
in
ret
mov
lea
xchg
lahf
mov
dec
jno
xchg
int
call
out
daa
div
hlt
stos
or
gs
stc
nop
pop
and
cs
mov
in
xor
fadd
mov
mov
mov
xlat
adcl
push
mov
in
jb
in
adcl
cmp
out
int3
adc
and
ljmp
lods
mov
int
push
mov
xchg
add
sub
add
jl
sub
cs
or
dec
iret
adc
ret
jae
mov
or
xor
add
sub
pop
xlat
aam
adc
loop
push
js
lods
fdivrl
enter
or
fstpl
mov
push
xlat
pop
stc
adc
pop
pop
mov
ja
or
icebp
cmp
dec
xchg
xor
push
es
mov
adc
mov
imul
shll
outsb
cmp
and
jecxz
jge
stos
data16
lahf
mov
lock
push
movsb
cmp
dec
dec
or
ret
pop
cld
test
sarl
jb
xchg
leave
mov
mov
push
push
dec
mov
pop
push
mov
gs
and
cmc
xchg
pop
int3
sbb
int
call
ret
dec
pop
dec
mov
and
cwtl
ret
inc
add
mov
or
adc
popa
fstp
mov
ror
out
dec
jne
lods
mov
out
and
cmp
rclb
cmp
test
cmp
repnz
or
xchg
push
in
push
jge
inc
leave
fsubl
fnsave
mov
xorl
mov
cmpsb
iret
js
mov
fidivl
loope
aaa
sbb
cmp
movsb
out
pop
push
lcall
cmpl
sbb
push
sub
or
fadd
testb
insb
leave
push
inc
andb
or
test
push
loopne
rcr
stos
push
jo
jns
xchg
jnp
test
test
and
mov
repz
mov
roll
sbb
xchg
repnz
dec
or
or
add
jge
es
subl
sub
test
inc
dec
into
xor
inc
dec
test
jns
test
xor
mov
aad
mov
jns
mov
and
xor
add
movsb
scas
icebp
out
jb
dec
fsubs
mov
imul
cmp
hlt
add
xor
dec
mov
fildl
imull
sub
and
xchg
cmp
pop
xchg
js
jb
bound
dec
mov
jecxz
mov
mov
push
faddl
filds
insb
bound
outsb
out
into
out
sbb
test
sbbb
lods
dec
mov
xor
call
outsb
leave
arpl
clc
out
insl
fisubl
xor
shlb
fmuls
clc
xchg
cmc
xchg
jl
cmc
jl
in
cmp
cmp
outsb
and
nop
jbe
test
cltd
or
push
mov
jg
inc
ror
push
insb
movsl
loopne
mov
insb
xchg
fildll
popa
jnp
out
dec
fldl
std
mov
popa
daa
shlb
xchg
push
stos
cmp
sub
dec
inc
mov
cmp
jb
ret
cmpsl
movsb
cmp
rcr
test
insl
xchg
sbb
fiadds
fwait
fwait
jo
sti
add
cmp
stos
xchg
jge
data16
inc
push
daa
imull
icebp
outsl
int
loopne
out
pop
sbb
pop
and
cmpsb
cwtl
pop
insb
repz
cmp
jge
push
dec
leave
ret
jne
sbb
gs
cmp
inc
inc
xchg
lock
mov
shr
testb
repz
dec
gs
inc
mov
insl
xorps
mov
xchg
mov
jecxz
roll
cmp
xor
jle
leave
jb
cld
mov
loope
addr16
std
adc
inc
mov
cltd
mov
out
jne
imul
mov
or
sbbl
js
insl
add
adc
xor
stos
mov
sbb
shll
pop
xor
pop
pop
repnz
std
and
mov
or
jmp
dec
jge
sti
subl
add
push
push
mov
adc
pop
into
cmp
or
test
mov
dec
fistpl
push
xchg
out
sbb
mov
imul
addr16
cmpsb
lock
cmp
or
sub
add
mov
add
sbb
adc
jbe
sti
jmp
mov
ret
xor
jmp
clc
xchg
xor
movsl
cwtl
or
addb
xor
fwait
ljmp
int
stos
xchg
mov
aas
adc
pop
sbb
or
data16
gs
test
data16
cmc
fnstcw
push
shlb
lahf
out
xchg
dec
push
lods
pop
xorl
fwait
lods
inc
bound
sub
push
pop
xor
push
cmp
aam
into
cmpb
bound
rcr
push
mov
xchg
js
push
fs
jno
xor
lahf
xchg
xor
inc
adc
out
mov
pusha
lret
sti
ficomps
sub
push
insb
in
pop
push
sbb
xor
push
loopne,pt
shrb
hlt
push
ffreep
push
lock
add
jne
outsl
leave
lods
xor
xchg
and
inc
int3
and
fistps
mov
sbb
cmp
push
dec
loopne
cmp
cmp
xchg
adc
mov
loope
cwtl
fldz
pop
popa
mov
je
push
nop
data16
mov
movsl
je
xchg
sbb
ljmp
or
imul
sub
int
cld
cs
or
jns
loop
sub
and
ljmp
movl
fiaddl
push
lock
push
cwtl
jbe
hlt
pop
fadd
adc
mov
popf
ja
sub
cmp
jmp
lret
lods
fadds
cmc
xchg
movsl
aad
popf
xchg
outsl
mov
fistpll
stos
inc
mov
aas
mov
xchg
push
iret
pop
inc
mov
mov
in
fnstenv
lds
add
add
insb
outsb
nop
push
sarl
and
lret
rorl
and
xchg
addl
addr16
addb
adc
mov
mov
ficompl
movsb
repnz
lahf
cmp
aad
leave
pop
mov
movsl
sbb
popf
daa
movsl
or
cmp
jmp
rorb
xor
adc
pop
and
mov
push
ljmp
loope
je
ficoms
mov
xor
insb
popa
les
mov
or
push
push
gs
sbb
push
mov
fstpl
fwait
mov
dec
or
xchg
push
mov
rolb
addb
pushf
shl
fbld
addl
idiv
fmull
leave
faddl
lock
xchg
sub
fstp
cltd
gs
popf
push
fstp
leave
aas
xor
jg
std
xchg
lock
push
mov
shlb
xor
xor
pop
gs
or
sbb
inc
fsubrs
jnp
loopne
ss
mov
jecxz
rorb
das
int3
jo
loop
int
imull
or
and
stos
xor
movsb
addr16
das
and
adcl
repz
stc
ficoms
cmpb
fldcw
mov
add
fsts
cld
xor
aad
fdivrl
adc
dec
scas
out
fs
sub
push
pop
cmpsb
jnp
add
add
xchg
or
or
pop
lahf
pop
jp
cmp
adcb
inc
sbb
inc
sbb
std
int
daa
xchg
shlb
mulb
into
xchg
jbe
and
or
jmp
out
aas
mov
add
ret
mov
adc
fbstp
stc
int3
push
insl
dec
je
lods
adc
add
pop
jb
insl
push
xlat
adc
and
cli
fbstp
mov
gs
or
inc
jg
add
fisubl
mov
push
mov
inc
js
insl
out
in
stos
lahf
add
pushf
fisubrl
jl
sbb
inc
cmpsb
or
aad
outsb
adc
lods
repnz
dec
push
inc
out
mov
or
lea
nop
adc
sub
stos
jle
push
shlb
lock
and
repz
or
mov
nop
push
xor
push
cmp
sbb
jge
insl
enter
call
fstpl
in
dec
sbb
js
or
dec
sub
insl
enter
call
fstpl
in
dec
sbb
js
or
dec
sub
insl
leave
popf
fmuls
mov
cwtl
int
std
mov
or
or
dec
test
mov
daa
inc
mov
adc
push
add
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jecxz
test
xchg
mov
cmpsb
jl
sub
sbb
sub
jns
sub
pop
push
dec
inc
scas
mov
cmpsl
test
imul
out
xlat
leave
xor
sub
jge
lret
pop
jns
push
inc
mov
xchg
xchg
xchg
div
out
xlat
faddp
cmp
and
addr16
push
and
and
mov
rcl
repz
icebp
xor
and
sub
jb
pop
in
or
faddl
mov
xchg
sbb
fildl
iret
lock
inc
out
add
lds
les
shlb
jmp
mov
roll
not
test
ja
push
repz
inc
imul
xchg
fdiv
cld
divl
ds
xchg
or
jmp
cmp
sbb
push
pop
rolb
test
sub
xchg
xor
es
or
mov
mov
pop
xor
repnz
cmp
in
sbb
inc
enter
adc
pop
mov
inc
dec
inc
jns
test
xchg
div
out
xlat
rol
and
xor
add
adc
popa
ja
addr16
push
push
add
fcmove
je
shr
rcrl
movsb
mov
pop
sub
jns
imul
imulb
rorb
mov
sub
inc
jl
sbb
sbb
sub
dec
sub
out
sar
jecxz
repz
sub
sbb
or
jns
imul
mov
cmpsl
cltd
xchg
mov
leave
cmp
sub
sbb
or
jns
imul
mov
mov
gs
xor
icebp
data16
out
ds
lds
xor
pop
nop
dec
outsl
scas
mov
ja
xor
dec
mov
push
cmp
xor
call
sub
out
lahf
enter
imul
lret
jb
adcb
mov
addr16
test
xchg
sbb
rclb
cmpb
loope
or
mov
xor
sbb
or
and
or
mov
jge
mov
inc
je
mov
cmc
pop
enter
cmpb
mov
jle
sub
outsb
xchg
iret
out
mov
and
repz
xor
in
mov
scas
mov
std
dec
add
outsl
mov
add
stos
stc
pop
and
insl
mov
pop
xlat
scas
in
stos
or
pop
ljmp
outsl
cltd
out
jg
into
nop
test
mov
addr16
jle
out
mov
cmp
adc
jp
movsb
jl
or
mov
scas
ret
dec
daa
mov
es
xchg
idivl
test
std
add
enter
ret
xor
jg
pusha
data16
movsb
lds
cmpsl
shlb
flds
or
mov
push
pop
xor
xchg
or
cmpsl
fistpl
or
mov
mov
sarb
aad
movsl
push
cs
lds
test
jae
fabs
push
mov
idivb
sti
repnz
push
pop
pusha
gs
sti
jb
test
sub
clc
xor
jo
pop
cmp
popf
sti
in
cmpsb
xchg
orb
leave
pop
or
sub
lret
sub
jbe
dec
insb
nop
fdivrl
and
xchg
jns
out
lds
push
fadds
dec
push
in
cs
push
scas
cmp
iret
and
int
dec
daa
loop
and
cltd
pop
cmpsl
int
push
or
mov
jl
mov
insb
mov
loop
stos
inc
cmp
pusha
jge
mov
push
add
addr16
xor
pop
mov
testb
mov
pop
cmp
cld
loope
xchg
fldl
inc
ret
ss
mov
pop
or
aam
push
inc
and
sti
icebp
shr
push
lock
movsb
mov
cmp
xchg
sahf
mov
inc
push
and
mov
aam
out
push
roll
dec
into
sub
fstps
dec
sbb
fildl
mov
ljmp
xlat
and
adc
ret
roll
cmc
out
pop
cwtl
lret
add
jge
ret
icebp
stos
testl
jg
repnz
pusha
xor
xchg
mov
adc
out
subl
cmp
and
pop
dec
and
loop
mov
aas
pop
pop
mov
xor
sti
xchg
pop
sbb
mov
fs
and
ja
cli
xchg
mov
sahf
push
imul
aam
scas
lds
cmp
pop
rcll
std
add
movsl
rcrb
and
cmp
outsl
stc
iret
in
adc
movsl
addr16
stos
adc
outsb
push
mov
cmp
xlat
pop
mov
jl
jecxz
jns
dec
ret
pop
inc
inc
pop
data16
push
sbb
andb
cmc
cmpsb
lock
mov
and
ret
loop
xor
cmc
adc
in
cmp
adc
call
xor
mov
iret
lcall
pop
jle
push
fucom
lock
jle
ljmp
mov
sbb
mov
insb
mov
fwait
jge
sub
jb
sub
aam
sub
push
loopne
cmpsb
in
gs
adc
push
fwait
jge
sbb
cmp
xor
xchg
jecxz
fcompl
test
sbb
out
aad
fists
sub
stos
xor
ret
inc
adc
fsincos
insb
out
jmp
ja
sbb
dec
fistpll
xchg
push
jno
cmp
lret
xchg
dec
mov
adc
shlb
lahf
inc
sub
xor
js
mov
mov
ljmp
jecxz
mov
mov
lods
aad
and
fistl
mov
dec
push
aam
mov
pop
push
inc
mov
jg
std
pushf
xchg
mov
daa
imul
mov
add
lods
fs
push
repz
scas
dec
jno
sbb
xor
sub
stos
push
lock
lea
mov
inc
push
int
add
lods
test
mov
adc
je
out
mov
popa
shrl
mov
xchg
cmp
enter
jnp
out
xchg
push
inc
push
je
shlb
popf
mov
add
lret
sbb
mov
xlat
jbe
sbb
arpl
cmp
inc
sub
cmp
xchg
jmp
push
push
xchg
icebp
mov
sub
pop
icebp
mov
pop
lock
or
dec
jns
pop
pop
lahf
mov
push
lahf
stc
mov
inc
idivl
add
or
adc
xchg
mov
mov
push
loope
xchg
or
shll
insb
xchg
dec
push
ret
dec
jp
mov
cmp
dec
stos
pop
loope
rep
into
nop
sub
pop
add
sarl
inc
aad
loope
popf
aam
adc
pop
xchg
xchg
push
dec
push
iret
in
pushf
push
in
out
push
popa
js
dec
shlb
add
xchg
iret
add
popf
sbb
repnz
nop
fcmovb
int
incb
push
loope
cwtl
cltd
pusha
sbb
jns
sbb
iret
push
xchg
lret
fidivrl
loop
inc
popf
iret
loope
insb
pop
js
add
cli
lcall
pop
test
push
mov
rolb
test
stc
data16
lock
shrl
xlat
xchg
roll
js
sub
mov
in
daa
sub
ljmp
mov
aas
aam
pushf
push
sbb
fisubrs
xchg
dec
mov
hlt
jo
inc
je
movsl
pop
inc
mov
mov
test
imul
bound
dec
leave
jmp
sub
jmp
add
fdivrl
jae
mov
in
xor
push
js
sbb
fbstp
pop
xchg
outsb
data16
dec
jae
aad
sbb
push
sub
stc
jbe
jmp
dec
hlt
fstpl
insb
aad
pop
repz
inc
sub
inc
popf
fildll
daa
push
es
and
adc
dec
clc
fs
in
test
mull
inc
fadds
fisubrs
adc
push
adc
pop
or
mov
lcall
sub
scas
es
jg
mov
jno
mov
stos
adc
aas
or
imul
push
lods
push
lcall
pusha
sub
mov
ja
xchg
movl
mov
cmp
in
fwait
and
or
or
decb
inc
jmp
and
shrl
push
adc
sahf
lds
sub
stos
dec
sub
decl
xchg
jae
mov
out
into
unpcklps
ljmp
mov
test
dec
or
and
aaa
cli
int
andl
add
dec
mov
testb
lods
loopne
adc
rorb
jecxz
pop
rcr
aad
roll
cmp
or
mov
loop
cmp
or
pop
aad
mov
movsb
dec
mov
rclb
xchg
mov
or
jp
lea
adc
mov
loop
jne
mov
add
gs
stos
add
movsb
dec
push
push
jns
fistps
fadds
test
mov
loopne
cmp
test
mov
sti
or
dec
adc
dec
adc
test
jns
dec
pop
mov
push
dec
jg
fcmovne
xchg
test
das
vmaxss
push
ss
xchg
or
cmp
int3
out
inc
push
xor
add
mov
testl
ds
rcrb
mov
das
xor
out
jg
dec
lret
ds
cmp
fistpl
pop
test
add
ljmp
and
out
and
xchg
mov
and
add
and
aas
outsl
sbb
cmp
js
cmp
fildll
daa
adc
lods
and
add
inc
scas
pushf
cwtl
sub
push
les
ret
push
arpl
sti
imul
ljmp
mov
pop
mov
pop
jns
push
mov
jae
je
jle
mov
orb
ja
shrl
imul
mov
cmp
ds
daa
sub
or
jmp
pop
arpl
jmp
mov
mov
filds
mov
add
cmp
fimuls
rcr
push
or
shlb
rolb
notl
mov
push
xchg
sub
push
add
lds
xor
pusha
sub
mov
adc
mov
dec
or
aam
add
cmp
jecxz
jo
rcrl
mov
fnstcw
lock
sub
mov
jne
scas
push
cs
cmp
adc
inc
adc
lea
iret
and
cmp
push
test
cwtl
clc
push
add
insl
out
mov
sub
jge
das
adc
lahf
lods
stos
lahf
mov
mov
cs
lret
adc
push
mov
xor
imul
fwait
repnz
lret
and
int
push
stos
mov
jle
test
cli
aas
lods
test
mov
and
std
es
shl
addr16
pusha
or
adc
cmpb
xchg
jp
adc
jnp
jp
mov
pushl
or
clc
pop
pop
sahf
jle
dec
in
pop
inc
jp
and
cmp
add
sbb
fsave
inc
aad
jo
mov
mov
ss
aaa
cmp
test
mov
adc
div
adc
ficomps
adc
repnz
out
ss
push
dec
mov
insb
jle
sub
or
xchg
sub
pop
pop
rorl
sahf
xor
movsb
xlat
fiadds
sahf
xchg
jp
out
adc
cmp
jns
jbe
stos
push
mov
sbb
jle
call
mov
or
mov
es
pop
mov
mov
push
and
mov
cmpsl
sub
pop
push
js
jg
push
jnp
cmp
xchg
cwtl
cmp
mov
add
add
fwait
notl
cld
xchg
xchg
or
outsl
fistps
pop
pop
imul
repnz
mov
add
inc
cmp
xchg
seto
mov
inc
pop
inc
inc
pop
lock
cwtl
int3
fstps
scas
pop
ret
loop
inc
mov
xlat
sub
rcll
mov
adc
int
divl
mov
push
iret
dec
aam
lahf
dec
shll
inc
outsb
incb
jbe
das
test
fiaddl
sahf
mov
pop
int3
pop
insl
les
mov
and
daa
jb
cmc
test
negl
xor
jp
pop
sbb
popf
mov
xchg
adcb
push
xchg
xchg
mov
push
loop
and
test
dec
lcall
jg
gs
sub
ja
push
xor
scas
add
dec
adc
push
aad
test
xor
sahf
scas
icebp
jle
imul
test
shr
lds
or
jge
test
adc
clc
xchg
xor
aaa
sahf
fcoms
sbb
loop
xchg
inc
adc
mov
dec
int
insl
loopne
call
int
sub
lea
andl
cmpsb
rep
faddl
sub
sar
jecxz
nop
push
stos
loope
push
mov
shrl
jae
aaa
cli
inc
mov
dec
push
jecxz
iret
sub
imul
int3
xchg
in
mov
sbb
and
inc
mov
or
add
fldt
dec
xchg
xor
imul
or
lock
add
es
in
mov
scas
mov
dec
call
cmp
aad
add
inc
sbb
push
pusha
xchg
inc
mov
mov
xchg
sbb
stc
adc
gs
cmp
in
mov
xor
loopne
call
sub
out
fnstsw
dec
adc
je
jb
sbb
clc
mov
xchg
loopne
xchg
mul
mov
xchg
sub
push
mov
aaa
es
dec
lcall
lock
out
ja
xlat
popf
push
jae
ffree
jg
inc
or
and
aaa
jmp
movsl
test
sbbl
mov
stos
mov
jge
mov
dec
push
int3
inc
and
pushf
add
push
fs
test
daa
gs
bound
leave
loopne
notl
fdivrp
rcrl
in
jne
pushf
cwtl
stos
icebp
jmp
cld
xchg
mov
iret
cmp
std
out
inc
or
push
out
jmp
mov
add
adc
aam
pop
mov
pop
std
cmpsl
xchg
sbb
stos
insb
jb
jb
scas
rcll
sbb
movsb
mov
pusha
pop
mov
aad
pop
sub
push
ss
push
cmp
mov
fs
aas
add
jmp
cmpsb
add
rolb
inc
es
inc
adc
xchg
leave
inc
or
jns
pop
adc
negl
cmp
dec
and
adc
mov
leave
pusha
popa
cwtl
ja
sbb
js
lret
shlb
xlat
xor
enter
lods
xchg
inc
sbb
inc
leave
push
push
loop
lret
mov
or
ljmp
loope
es
pop
mov
pop
mov
sahf
and
ljmp
mov
cli
sub
dec
sbb
movsb
das
pop
cmpsb
jl
adc
icebp
out
aaa
jno
jno
repnz
shll
mov
sahf
ffreep
cwtl
mov
mov
sbb
push
xchg
mov
dec
test
jge,pn
dec
nop
or
mov
fs
sbb
adc
addb
and
mov
and
add
imul
cld
mov
inc
fnstsw
jg
repnz
in
jg
insb
in
ljmp
fidivs
mov
inc
mov
into
and
movsb
fistpll
dec
sub
mov
sbb
dec
xchg
dec
mov
xchg
call
iret
dec
out
or
lds
push
scas
out
jae
movb
scas
cli
and
add
pop
cmpsb
cmpsl
scas
xlat
push
fnstenv
sbb
adc
fdivl
stos
cwtl
inc
insl
cli
dec
pop
cmc
dec
adc
lods
and
mov
out
stos
es
mov
push
inc
andl
sbbl
inc
xor
mov
cmp
xchg
xlat
xchg
addl
scas
dec
jecxz
ds
pop
sbb
shl
push
cld
roll
mov
and
fsubrl
cmp
push
leave
call
pop
pop
loop
or
add
sti
mov
adc
aam
fwait
mov
pushf
or
pop
leave
or
inc
jl
inc
jne,pt
test
aad
cmpsb
mov
cmp
or
sub
imul
and
fisubs
mov
and
jbe
push
insl
fsub
clc
pop
xchg
dec
sbb
sar
or
cli
cmp
mov
mov
inc
pop
push
enter
adc
outsl
dec
mov
pop
repz
jno
sbb
mov
scas
add
dec
push
mov
loop
inc
aad
sbb
adc
sub
push
and
cwtl
xor
je
les
mov
mov
sbb
dec
or
repnz
icebp
dec
dec
sahf
ss
push
jmp
iret
push
fwait
xchg
jmp
push
or
outsb
cltd
out
adc
in
xchg
cmpsb
std
insl
pushf
je
rorb
jns
cmpsl
imul
jo
jg
adc
add
gs
fbld
inc
cmp
je
out
repnz
hlt
push
add
mov
dec
sub
mov
addr16
and
idivl
cmpb
push
pusha
pushf
fisubrl
sbb
cmc
repnz
jnp
push
or
lcall
cmp
add
xor
data16
les
enter
dec
enter
dec
and
adc
neg
xchg
inc
int3
stos
adc
sarb
mov
lods
aam
xchg
push
daa
inc
push
lds
or
or
test
stos
std
roll
pop
cmpsl
scas
add
sbbb
sbb
and
dec
mov
mov
fisubl
les
inc
sarl
push
loope
rcrl
sbb
cli
sub
movsb
inc
negl
mov
bound
xchg
xor
nop
jns
mov
xor
push
pushf
fs
mov
cmp
js
jb
push
jge
jp
adc
gs
shlb
cmp
cmp
shl
xor
jnp
call
dec
sub
add
inc
in
xor
pop
sbb
sahf
aad
sti
and
xor
xor
add
outsl
adc
mov
pop
out
test
pop
cwtl
adcb
push
ljmp
sbbb
push
mov
xor
push
jl
cmp
jp
sub
jp
das
cmpsb
jae
loope
mov
xor
jb
out
mov
popa
dec
dec
add
outsl
rorl
sahf
jg
pop
push
divb
enter
fidivrl
cmp
adc
sbb
lret
sarb
sar
insl
mov
div
mov
mov
in
jmp
xor
shld
xchg
test
cld
leave
pushf
xchg
sbb
and
scas
adc
jne
fcomps
aad
rcll
sub
mov
lds
mov
inc
cli
pop
mov
xchg
pop
push
lods
ja
imull
into
inc
sub
inc
pop
das
fcmovu
out
scas
fmuls
scas
aaa
pusha
outsl
and
mov
lcall
je
stos
in
push
outsb
js
dec
and
das
mov
xor
inc
push
clc
fcompl
clc
pop
in
pop
loopne
mov
imul
jb
sbb
clc
sub
mov
in
roll
sub
les
inc
test
jecxz
imul
push
outsl
dec
fisttpl
dec
xchg
cmp
jb
in
rcl
out
pop
fdivr
decl
pop
xchg
test
adc
in
insl
in
fistl
cmc
pop
lods
test
mov
mov
je
push
and
pop
xchg
lcall
pop
xchg
inc
ss
fwait
into
call
mov
cmpsl
jp
clc
lahf
das
mov
mov
mov
jmp
out
sub
or
out
xchg
scas
call
cwtl
push
inc
pop
pop
jnp
xor
jecxz
dec
jp
jno
mov
negl
scas
movsl
scas
sbb
hlt
jp
inc
dec
cmp
lods
cmpsl
mov
mov
popa
sub
pop
or
mov
mov
sub
cltd
xchg
fs
cmpsb
dec
jmp
jo
fwait
pusha
pop
jnp
dec
or
movsb
jl
xor
xlat
sbb
js
js
sahf
fisubrl
sbb
fisubrl
xchg
or
sub
push
imul
mov
out
lcall
adc
leave
fisubs
mov
sahf
cli
jne
scas
xchg
orb
in
mov
cmc
mov
xor
movsl
push
push
addr16
and
out
or
cmp
outsb
sbb
das
mov
pusha
pop
dec
ja
mov
or
sbb
jge
cwtl
mov
mov
pop
insb
jne
es
loop
ja
fistpll
sbb
inc
invd
inc
mov
sbb
adc
cltd
mov
lods
daa
sub
xor
ja
cmc
jns
and
xchg
loop
add
in
cmp
inc
std
add
ret
push
idiv
fdivs
loope
push
xchg
aaa
fisubl
pushf
dec
loop
push
cmp
pushl
pop
jae
jmp
sub
or
xor
xchg
stc
or
es
mov
adc
mov
push
add
and
or
int3
push
icebp
mov
dec
dec
mov
lret
cmp
popf
iret
bound
add
pop
mov
aad
or
out
or
xor
data16
not
mov
jge
test
mov
outsb
jns
cmc
test
xlat
mov
scas
aam
test
cmp
loope
jecxz
and
pop
sub
lds
out
inc
or
mov
sub
xchg
daa
cs
fwait
mov
incb
xor
or
roll
les
loop
pop
or
sbb
add
cmpsl
nop
ds
repz
or
mov
jg
sti
sub
sbb
movsb
loope
push
push
push
mov
js
jnp
jle
and
mov
xchg
and
aam
lret
dec
dec
xchg
dec
or
jae
mov
sub
push
movsb
adc
stos
or
adc
pop
pop
cli
pop
ret
jl
psrad
xchg
mov
leave
cmp
sub
sbb
or
jns
imul
mov
cmpsl
cltd
xchg
mov
leave
cmp
sub
sbb
or
jns
imul
mov
cmpsl
cltd
xchg
mov
leave
cmp
sub
sbb
jbe
addr16
push
js
lea
mov
pop
push
dec
cmp
enter
pop
or
jmp
cwtl
cmpsb
test
mov
popa
xchg
jno
movsbl
inc
repnz
ret
shll
loope
icebp
add
push
mov
inc
mov
mov
add
adc
and
xor
xchg
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shll
add
es
or
push
jmp
cli
add
stos
pop
lret
rorl
push
sub
mov
jb
fyl2x
sbb
xchg
into
cld
pop
sub
xchg
addr16
enter
data16
test
mov
clc
stc
test
add
and
xchg
shll
dec
fwait
push
and
xlat
jno
add
push
xchg
mov
add
fistpll
rcr
xchg
xlat
loop
jb
pushf
mov
and
btcl
and
sub
push
or
xchg
bound
movsb
mov
adcb
mov
jno
ljmp
mov
mov
mov
add
adc
and
xor
shll
and
adc
add
push
mov
pop
mov
jecxz
xchg
adc
insl
xchg
pop
mov
xchg
orb
xorb
in
clc
pop
in
in
inc
xlat
and
xor
adc
inc
sahf
jge
and
rcrl
inc
mov
in
lds
add
sub
or
jo
add
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
lret
push
inc
fildl
subb
mov
loopne
call
xor
sbb
adc
xor
cmc
sti
fisttpl
sub
pusha
lods
icebp
inc
popl
bound
cmp
lods
push
push
sub
pusha
push
popf
mov
mov
out
mov
ret
or
mov
push
aas
int
in
or
lods
pop
cwtl
pop
xlat
add
sar
gs
arpl
sub
icebp
mov
mov
pop
js
cld
es
iret
aaa
mov
aaa
dec
xchg
mov
imul
xor
test
ficoms
sub
out
cmp
sub
jbe
fisubs
cmc
pop
push
divl
repnz
ret
xchg
xchg
lret
test
sbb
loop
stos
push
push
push
xchg
addl
jno
mov
dec
mov
sbb
dec
jp
nop
aaa
sub
dec
and
mov
sub
test
mov
insb
dec
jae
das
jnp
jge
repnz
test
cltd
push
pop
lret
mov
mov
jo
lods
daa
jne
mov
insb
test
stos
pop
int3
mov
gs
dec
mov
mov
and
dec
lds
mov
mov
add
xchg
jae
aad
loopne
popa
fld
mov
int
cmp
add
in
dec
lcall
out
sub
jnp
pop
lcall
shrl
rsm
add
jae
shll
sub
xchg
ds
frstor
jnp
je
test
push
inc
lods
data16
jg
mov
inc
es
sbb
add
dec
lret
fmuls
xor
call
or
jne
out
out
dec
repnz
fisttpl
cli
or
push
push
push
fdivrl
std
test
je
jb
movsb
inc
and
dec
inc
out
dec
repnz
mov
rolb
into
je
add
mov
in
adc
mov
push
xor
hlt
insb
jp
aaa
jno
loope
xchg
xchg
mov
les
jnp
mov
or
test
cld
sbb
loopne
loopne
mov
popf
scas
xlat
push
pop
mov
js
xlat
std
sub
je
loope
xchg
test
out
or
xchg
test
loop
fmuls
sbb
das
mov
hlt
je
insb
ljmp
movsl
dec
jns
mov
in
mov
inc
nop
shll
aas
cwtl
icebp
push
jns
inc
jbe
in
inc
pop
adc
popa
popa
jle
mov
mov
repz
fistpl
lahf
into
test
mov
div
and
lahf
sarl
test
push
mov
push
dec
stos
daa
cli
insb
out
sbb
fnstenv
rcll
cltd
das
xchg
add
cmpb
xchg
repz
push
jns
mov
int
pop
es
cmp
fildll
sub
fmull
jmp
sbb
ss
nop
sub
cmpsb
sub
or
lods
das
mov
jge
push
je
lea
jbe
es
sub
loope
cmp
aam
movsl
clc
adc
xor
xchg
fsubrl
mov
sti
scas
push
int3
inc
mov
cmpsl
sbb
add
out
inc
push
xor
adc
sahf
test
aam
loopne
adc
rcrl
pop
jnp
sahf
std
cmp
mov
cld
dec
mov
or
push
sub
out
inc
shlb
sub
jmp
std
mov
js
inc
stos
jmp
jl
mov
fbstp
into
jle
mov
sbb
sub
sbbb
mov
sbb
test
push
mov
test
out
out
call
fidivs
mov
out
cltd
out
repz
addr16
dec
js
xchg
nop
ja
jg
cli
sub
imul
pop
lret
mov
ret
test
jbe
ret
cmpsl
pop
in
xlat
outsb
pusha
dec
bound
sbb
adcl
popa
dec
jecxz
pop
and
or
xchg
sti
push
jp
cmpl
or
mov
insb
pop
jns
add
cmpsl
sub
out
sbb
lret
icebp
fwait
nop
loopne
dec
mov
pop
shlb
xchg
cmc
add
sbb
jbe
dec
push
loop
adc
add
fwait
pop
dec
sbb
xchg
xlat
mov
insl
pop
lahf
divb
pop
mov
cmp
sbb
aas
lcall
jb
xor
push
pop
xorl
insl
adc
repz
rclb
jge
mov
xorl
cld
fs
lahf
xchg
push
call
cmp
mov
jmp
add
cmp
or
or
mov
and
mov
or
pop
add
je
and
dec
push
cli
mov
sub
dec
or
push
clc
pop
xor
mov
ficomps
xor
sarl
sbb
or
mov
rcl
inc
test
or
jl
lcall
js
loopne
xor
push
out
cmp
idivl
lahf
mov
pop
cltd
sub
jae
fimull
fisubl
xor
push
clc
push
jbe
inc
sar
pop
pop
xchg
out
adc
in
out
nop
das
or
mov
cmpsl
pop
test
cmp
mov
addr16
ljmp
data16
pop
and
dec
fimull
ja
in
cltd
out
fadd
outsb
mov
dec
and
jne
cmp
mov
rorl
adc
mov
push
sub
popl
adc
aam
push
hlt
inc
lret
or
or
sbb
add
pop
adc
cmpsl
scas
test
sarl
mov
xchg
sub
push
arpl
cs
pop
push
cs
movsl
enter
jbe
inc
aas
push
jbe
jno
rcrb
inc
leave
adc
or
aam
jp
and
add
inc
das
xchg
xor
fsubs
cltd
sub
in
jecxz
clc
loopne
or
daa
pop
int
sub
imul
sub
jl
out
cmp
add
mov
cmpsb
xor
scas
mov
cmpsb
jbe
pop
adc
data16
sub
dec
pop
dec
aas
xchg
pushf
ljmp
mov
sub
mov
pop
aad
pushf
repz
negl
in
add
test
idivb
pop
sbb
mov
mov
in
jmp
aaa
fcompl
xchg
or
loop
mov
sbb
cmpsl
ljmp
aaa
jmp
test
and
cld
sbb
mov
sub
pop
jge
adc
and
jl
sar
cmp
in
adc
mov
fidivrs
mov
push
nop
popf
cs
dec
jbe
jbe
sub
lcall
jle
pop
dec
add
xchg
push
or
ret
ret
xor
mov
jne
xlat
mov
nop
cld
inc
repnz
sub
fsubrs
xchg
hlt
gs
cwtl
mov
aam
lea
movsb
sub
sub
popf
fcom
cmc
div
push
pop
cmovge
out
add
out
adc
sahf
jns
popf
out
loope
outsl
push
lods
sbb
mov
jl
sbbl
sbb
mov
jnp
imul
adc
or
lret
adc
jnp
cld
mov
shll
addb
push
or
inc
dec
push
xlat
outsb
cld
cmp
inc
inc
and
mov
adc
mov
xchg
outsb
rolb
pop
pop
push
cld
pop
and
fisttpll
add
dec
inc
clc
pusha
sahf
jae
rcrl
dec
ljmp
xchg
je
mov
outsl
and
xchg
rcrl
mov
mov
and
aad
mov
adc
mov
xchg
sub
pop
addb
sar
daa
stos
sub
cwtl
mov
mov
mov
ss
movsl
testl
in
jnp
cs
aaa
push
das
sub
shlb
in
dec
cld
mov
mov
inc
fadds
xchg
xor
sub
mov
jg
lds
sub
lret
in
mov
loopne
push
mov
loope
lret
inc
or
es
adc
jno
sub
mov
shl
popa
enter
nop
outsb
xchg
ds
cmp
sub
xchg
pop
fdiv
xor
mov
mov
sbb
and
loope
dec
or
xor
cmpsl
popf
aad
repnz
pushf
clc
sti
pop
mov
cs
jne
ret
xchg
test
hlt
in
dec
lahf
push
ja
fdivrl
dec
mov
pop
mov
nop
mov
arpl
gs
jp
jae
out
shrb
jge
inc
adc
adc
test
xchg
pop
mov
mov
sbb
xchg
adc
add
lcall
push
mov
or
mov
sub
mov
xor
xchg
cli
pusha
jne
into
pushf
jne
adc
loopne
cbtw
in
out
in
gs
xor
lods
les
or
ss
xlat
or
push
xor
jns
xchg
push
mov
mov
hlt
sub
lret
cmp
movsb
inc
fiadds
jo
inc
sbb
pop
loop
sti
fs
cmp
cmpsl
cs
js
sub
sahf
mov
shrb
and
leave
fiaddl
mov
pop
fdivr
jb
jbe
jg
iret
or
pop
pop
jb
imul
push
dec
mov
dec
mov
sub
loopne
mov
pop
inc
lahf
sti
cwtl
loop
cs
jne
cwtl
mov
mov
jnp
push
xor
loope
jl
mov
xlat
xor
sub
xor
or
adc
sub
jge
mov
pop
fistpl
scas
jbe
in
test
lcall
jae
fsub
je
mov
fnsave
repz
and
dec
add
and
adc
data16
aas
xchg
int
add
or
in
rorb
je
push
push
int3
subl
js
rorl
and
xchg
and
leave
fwait
mov
sti
js
xchg
jp
ja
dec
shll
jno
lret
jae
mov
xor
mov
mov
xor
popf
stos
popf
movl
dec
loopne
in
xchg
xchg
fnstcw
mov
xor
scas
andb
shll
shll
push
outsb
jbe
sub
sbb
lahf
adc
int
pop
add
inc
lods
or
push
cltd
mov
lods
cs
lock
fdiv
or
sub
sbb
xchg
jne
sbb
sbb
mov
lcall
add
add
xchg
fnsave
push
fs
sub
mov
pop
pop
cli
mov
add
pop
sahf
bound
jbe
addr16
shrl
mov
fisubrl
sahf
sbb
shlb
xchg
jmp
out
enter
andb
xchg
addb
pop
xchg
dec
sarl
jge
negb
jl
pop
xchg
les
mov
lea
inc
sti
stos
mov
jmp
and
dec
sbb
mov
or
loope
pop
arpl
xchg
fucomp
aaa
xchg
mov
push
pop
cmp
scas
mov
xor
mov
add
ficompl
pop
cmp
mov
or
mov
fdivrl
cli
push
inc
fs
push
shrb
fs
and
aaa
jmp
adc
xor
pop
pop
push
cmp
test
sti
jno
pop
xor
and
fwait
popa
in
fs
dec
fmuls
mov
dec
cld
out
or
jmp
dec
insb
or
test
int3
leave
repnz
outsb
hlt
clc
cld
test
mov
stos
popa
insb
push
lods
xchg
pop
xorb
mov
xor
cmp
pushf
jle,pt
in
and
repz
data16
loope
cld
shr
rclb
mov
push
dec
cmpsb
sub
aam
nop
inc
push
les
sbb
popa
sbb
and
ss
or
adc
outsb
and
xchg
sub
dec
loope
fs
shrb
jmp
pop
cwtl
divl
or
leave
iret
cmp
daa
cmc
cmpsl
inc
adc
cmpsb
mov
push
pop
test
lds
popf
shll
pop
pop
mov
stos
lods
fmuls
inc
jg
test
jmp
jecxz
pop
dec
inc
out
ja
inc
psubw
push
sbb
cmp
and
fsub
std
leave
bound
call
adc
cli
js
mov
mov
ja
dec
hlt
mov
push
jmp
decb
aam
test
jnp
pop
xchg
lock
test
dec
jns
scas
adc
xor
add
pop
jg
dec
out
xor
sbb
fsin
enter
popf
arpl
or
movb
mov
cmpsb
or
mov
scas
aas
data16
into
mov
and
jecxz
cmpsb
xlat
fistl
mov
or
mov
imul
push
xchg
test
mov
and
int3
ret
adc
dec
xchg
out
jmp
arpl
or
sbb
out
in
lods
ljmp
pop
jecxz
dec
out
inc
sbb
dec
idivb
dec
push
fwait
scas
cmp
sub
lcall
lret
mov
lods
lea
insl
icebp
dec
mov
cmp
pop
mov
stos
and
cmp
push
adc
adc
mov
lret
xchg
sbbb
das
sahf
pushf
cmpsb
test
aas
pop
cld
sbb
loope
ja
fmulp
loope
jmp
jae
lcall
and
jl
push
cmp
cmp
xor
push
test
cmc
and
or
jb
push
jb
cli
sbb
dec
test
das
pop
fildll
fadd
and
add
aaa
ljmp
inc
push
pop
rolb
fs
repnz
cmc
jg
repnz
call
or
add
sbb
repnz
push
or
mov
aaa
cmpsl
xchg
cmp
stc
je
and
mov
aam
mov
mov
out
cmp
xchg
out
jle
clc
cld
inc
bound
shl
xchg
or
cmpsl
xchg
bound
out
adc
sub
inc
aaa
fwait
test
nop
sbb
dec
pop
sbb
aas
adcb
pop
daa
push
xor
xchg
and
jo
fstpt
xlat
xor
gs
inc
in
es
xchg
icebp
add
int3
mov
mov
mov
das
enter
movsl
aas
rcll
cmc
out
imul
repz
aad
hlt
pop
xchg
sarb
adc
stc
push
push
mov
popa
jg
rorl
jp
shr
lds
cmp
arpl
test
sbb
adc
scas
and
fldl
mov
aaa
call
divb
adcl
jmp
sub
hlt
aad
cmpsb
mov
inc
sub
pusha
push
cmp
lret
push
in
add
cmp
xchg
lretw
test
dec
js
fdivrl
in
dec
and
movb
fst
fdivrs
aam
cmpsl
out
jp
out
es
test
mov
mov
popl
xor
lret
sti
xchg
jge
mov
test
mov
lcall
adc
cmp
test
push
int
rcrb
outsl
cltd
lock
add
gs
and
in
jae
loop
xor
fcompl
bound
ljmp
iret
ficomps
mov
push
fbstp
mov
stos
adc
push
mov
adc
push
jb
in
rol
push
bound
addr16
mov
insl
mov
fadds
lret
push
in
mov
sbb
and
cmc
pushf
sub
xchg
std
jle
popf
push
dec
sbb
xchg
add
cmp
ret
lret
cmc
arpl
ja
adc
fidivrs
mov
add
mov
jo
mov
mul
sub
cmp
add
dec
int3
inc
data16
cmpsl
insb
dec
aaa
pop
xor
addr16
adc
mov
ror
xchg
inc
xchg
cld
xchg
mov
int
ret
cmpsb
insl
xor
xor
fstpl
push
out
and
scas
cmpsb
scas
add
sub
mov
push
scas
and
iret
xorl
mov
pop
jne
fcmove
xor
inc
xchg
inc
repnz
and
dec
hlt
mov
xchg
cmpb
sub
sub
sbb
xorl
xchg
adc
scas
mov
push
pop
cmp
push
xchg
aaa
shll
inc
insl
mov
dec
mov
push
scas
adc
addr16
jle
rorl
lock
test
pop
iret
xchg
in
insl
fcomip
addl
pop
cmc
andl
pop
aaa
scas
out
pop
mov
cmp
jno
mov
adc
aaa
dec
sbb
push
jl
inc
leave
cmp
xchg
jb
lea
jne
cmp
shll
ss
andl
adc
sbb
or
add
inc
lds
adc
jb
xchg
push
xor
scas
jo
jecxz
bound
movsb
shl
stos
fbld
mov
in
fnstenv
sub
xchg
adc
jg
push
sbb
loop
sidtl
clc
sbb
or
repnz
mov
cli
dec
fwait
shl
jb
hlt
idivl
xchg
and
push
sbb
es
inc
xor
mov
jge
arpl
stc
or
sbb
dec
pop
stos
mov
fisttpll
in
jle
xchg
repz
cmp
fildll
fisubrl
jmp
cs
popa
je
and
push
inc
jmp
cld
xchg
mov
int3
adc
xchg
test
mov
mov
jmp
jg
add
mov
jne
adc
or
dec
push
test
nop
dec
aaa
in
bound
js
lods
pusha
push
in
mov
insl
fstl
into
shll
jne
cmc
pop
enter
adc
mov
push
xchg
xlat
xchg
mov
sbb
out
fstps
aas
lcall
xchg
sub
push
popa
push
add
jg
sti
sbb
mov
std
dec
sbb
arpl
xchg
cmp
sbb
push
sbb
iret
nop
sti
scas
inc
mov
push
lcall
xor
mov
xchg
jne
lret
sub
aaa
imul
ret
pop
ljmp
adc
cmp
aas
mov
movsl
iret
jb
sbb
in
or
or
jne
scas
push
push
stc
xor
xchg
call
mov
bnd
lret
nop
sysexit
cmp
cmp
aad
out
enter
ja
inc
cld
loopne
nop
lret
cs
je
adc
sbb
add
movsl
repnz
cmc
movsb
inc
loopne
inc
nop
adc
mov
and
jp
subps
and
xchg
cs
in
sbb
mov
aas
test
pop
dec
inc
sbb
mov
lods
jg
inc
int
mov
loope
push
and
xchg
pop
repz
test
icebp
lret
insb
out
dec
mov
arpl
int3
test
lods
jecxz
fs
cmp
int3
xor
leave
outsl
lcall
call
jecxz
inc
mov
lods
mov
testb
sbb
rcl
out
pop
add
sbb
fldt
or
andb
adc
mov
outsb
dec
adc
inc
jno
lahf
lcall
mov
fcomps
mov
mov
mov
fsubl
test
and
cmp
dec
shll
inc
andb
or
test
lods
int3
cmc
and
imul
xchg
leave
popf
dec
mov
inc
js
xchg
xor
mov
xor
movsb
adc
mov
fmulp
repnz
jb
mov
ja
mov
nop
push
pop
rolb
xlat
push
pop
jmp
adc
into
or
push
xor
push
and
push
movb
push
mov
jo
popa
insb
xchg
add
int
iret
inc
xor
daa
jge
push
xchg
mov
popf
or
lea
sub
enter
arpl
notb
aas
test
arpl
enter
shrl
cmp
loopne
movsl
cwtl
mov
repnz
push
roll
les
mov
xchg
mov
imul
pop
sbb
adc
mov
mov
xchg
mulb
xor
imulb
push
adc
xchg
sub
pop
es
push
mov
ret
mov
fnclex
gs
ret
fsubrs
dec
cmp
fldl
nop
mov
mov
xchg
popf
sbb
ficoml
orb
add
mov
push
pop
rol
sub
gs
xchg
jle
and
dec
lock
mov
into
inc
movb
movsb
iret
fldenv
testb
push
jne
xchg
icebp
out
sbb
inc
loop
mov
add
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shll
mov
icebp
jne
cli
sbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
dec
popa
cmpsb
mov
mov
or
add
add
push
or
add
lea
or
sbb
sbb
bound
popl
in
add
aas
add
add
outsl
add
popa
add
add
add
mov
aas
add
add
add
add
sbb
fs
add
movsb
add
add
add
add
add
add
add
mov
mov
add
add
add
incl
push
add
add
faddl
addb
add
add
add
push
adc
jne
mov
hlt
add
add
add
and
add
cmp
ljmp
add
add
add
add
add
add
add
xor
aam
xor
adc
adc
pop
add
add
add
add
add
add
inc
add
add
add
add
addb
add
add
add
cld
add
add
add
add
add
add
add
add
addb
add
add
add
sbb
lods
add
add
add
mov
sub
push
add
add
out
add
add
add
add
add
add
add
addb
add
add
push
add
fiaddl
add
addl
adc
dec
add
sbb
dec
add
add
add
inc
add
add
add
inc
add
xor
filds
popa
add
adc
add
add
cmp
mov
mov
add
inc
add
inc
add
push
add
add
add
xchg
add
add
add
add
add
add
add
hlt
add
add
ljmp
add
add
pop
add
add
add
add
add
add
mov
add
add
add
add
pop
add
incl
xchg
add
add
add
add
jecxz
fildl
jbe
cmpsl
add
add
add
inc
add
push
add
or
rolb
add
add
stc
add
add
add
jge
stc
add
add
add
add
sahf
add
lcall
add
add
adc
and
push
add
add
add
add
clc
add
add
add
add
add
out
add
call
add
add
add
add
add
cmp
add
jns
add
add
push
mov
add
add
icebp
add
add
push
or
mov
add
inc
add
sub
inc
add
add
mov
addb
add
add
add
add
add
or
pop
add
inc
add
add
add
add
fadds
and
inc
add
add
add
mov
sbb
sub
int3
add
mov
sbb
addl
add
jno
xor
mov
add
add
add
stc
add
add
fildl
jbe
cmpsl
add
add
add
inc
add
add
add
add
dec
add
add
add
xchg
add
rolb
in
add
add
add
add
jno
pop
add
in
add
add
add
add
pop
xor
push
and
scas
testl
pop
or
test
dec
lock
pop
into
shrl
out
mov
cltd
jmp
inc
aas
and
push
lock
pop
or
mov
cmp
inc
inc
sbb
leave
sub
push
sbb
mov
cmp
hlt
xchg
pop
xor
xor
jle
inc
mov
xchg
xchg
inc
push
mov
loopne
popa
dec
popa
xor
inc
sbb
adc
mov
aad
cld
jecxz
out
aas
push
inc
lods
aas
lods
pop
mov
sbb
int3
inc
or
faddl
push
mov
stos
shrb
out
mov
cld
inc
sbb
mov
cmc
push
das
cmp
mov
pop
xchg
imul
repz
in
sbb
rorl
mov
iret
cwtl
addr16
test
dec
jnp
pop
sub
cwtl
mov
mov
test
stc
add
repz
push
jp
jecxz
insb
mov
jae
xor
cmp
mov
andl
cmp
popa
add
arpl
fwait
movsl
cmp
repnz
js
push
pusha
push
jge
mov
stc
jno
aam
pop
mov
test
mov
jne
inc
imul
pop
sub
outsb
sub
push
int3
push
outsl
outsb
roll
in
add
lods
ss
cmp
ds
pop
xchg
gs
push
jp
call
sahf
fcomps
mov
jmp
dec
mov
push
xor
inc
jne
shlb
pop
lods
sti
adc
sti
pop
push
mov
mov
inc
aam
call
hlt
cmp
imul
cmp
jae
bound
mulb
pop
popa
push
les
inc
stos
add
lods
mov
popa
out
xor
sub
loope
std
dec
hlt
push
enter
sbb
insl
adc
pop
push
jb
jl
pop
xchg
mov
shlb
jmp
ljmp
adc
loop
mov
pop
repz
pushf
inc
in
lods
sbb
imul
icebp
or
mov
iret
add
mov
pushf
je
push
stos
lods
testl
pop
iret
xlat
push
jne
lds
push
and
cmp
dec
leave
jecxz
sub
sub
push
add
mov
loop
stos
push
fs
in
out
adc
cmp
push
dec
in
jns
popa
sbbl
mov
adc
adc
cmc
sub
mov
add
push
aaa
scas
sbb
std
or
add
aaa
cwtl
cmp
fdivrs
sbb
add
mov
lahf
sub
or
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
