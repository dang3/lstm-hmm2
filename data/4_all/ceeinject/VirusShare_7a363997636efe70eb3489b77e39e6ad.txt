call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
scas
inc
mov
ja
mov
mov
push
repz
out
xchg
dec
cmpsl
pop
mov
inc
mov
ja
pop
incb
into
daa
fiadds
lret
xlat
jp
push
imull
jle
dec
cmpsl
pop
mov
pop
mov
outsl
out
push
decb
into
aas
fisubrs
jge
xor
add
xor
out
mov
adc
les
lcall
outsb
sbb
pop
push
into
and
outsb
adc
les
in
fsubrs
enter
sub
out
leave
dec
push
mov
cmp
push
push
sub
adc
push
push
xlat
icebp
lea
and
sub
mov
and
pop
out
pop
xor
mov
daa
sub
mov
pop
cmpsl
push
ret
in
cmpsb
add
cmc
iret
das
fistps
cmp
sub
pop
xchg
dec
jecxz
jl
scas
hlt
dec
xor
xchg
leave
lahf
jle
push
lea
mov
es
addr16
push
mov
push
scas
jg
dec
movsl
ss
push
mov
ja
pop
pop
into
daa
fisubrs
cs
ds
push
push
out
outsb
lahf
jle
dec
mov
xlat
and
addb
push
outsl
test
xlat
insl
jecxz
xchg
or
pop
xchg
or
or
lods
cs
ficoms
sbb
push
fiadds
dec
sbbb
imull
xchg
cmp
pop
ret
movl
xor
xor
pop
into
daa
fidivs
cs
xlat
push
out
imull
jle
dec
cmpsl
pop
mov
inc
mov
ja
pop
pop
into
daa
fidivs
cs
xlat
push
out
imull
jle
dec
cmpsl
pop
mov
inc
sbb
mov
mov
shrl
pop
dec
sub
iret
push
mov
sub
mov
cs
cwtl
scas
loopne
iret
fistps
cli
fcom
or
pop
in
je
inc
cli
add
adc
add
push
ror
mov
int
stc
inc
lret
xchg
push
hlt
hlt
aas
xor
jbe
pop
pop
test
es
mov
push
test
pop
movaps
xor
movsl
es
mov
scas
lret
pushf
nop
les
aad
dec
psrlq
outsb
mov
ds
das
mov
add
mov
jp
divl
adc
mov
pusha
sub
cwtl
and
sahf
or
aaa
sub
pop
sbb
fucomp
dec
in
out
stos
int
push
mov
loop
cld
divb
lret
inc
das
dec
and
jnp
cmp
xchg
sub
inc
ja
xchg
add
pusha
jmp
dec
adc
pusha
pop
jns
insb
push
pop
addr16
fwait
sbb
in
fdivrs
mov
cmpsl
add
pop
sub
dec
test
sub
sti
mov
xchg
adc
test
mov
aad
xchg
inc
popa
lahf
ss
inc
jne
in
and
mov
and
fsubp
pushf
arpl
mov
jg
movsb
pop
inc
cs
imul
xchg
xor
je
jmp
arpl
add
outsb
push
out
call
push
sahf
mov
push
aad
aam
lea
aam
out
or
lcall
cmpsl
ret
dec
mov
ret
dec
aam
and
movsb
repz
fldl
lcall
mov
xchg
shrl
xor
dec
or
hlt
sbb
cmp
xorl
xlat
pop
mov
or
adc
das
fstps
inc
scas
inc
xchg
sub
daa
push
sti
mov
mov
aas
mov
cld
add
or
xor
dec
jbe
lret
popf
cmp
leave
adc
inc
mov
adc
cmc
popl
xchg
sub
push
inc
mov
xchg
inc
add
mov
dec
push
xchg
call
sub
cmp
imul
add
repz
fsubrs
dec
and
int3
data16
popf
das
sub
jb
clc
loop
test
fistpl
dec
fisubs
jp
cld
inc
clc
rol
std
or
dec
add
cmp
es
lcall
mov
jne
in
ficompl
mov
cmc
cwtl
mov
mov
cmpsb
or
and
dec
pop
testb
cmp
fstpt
and
jb
je
dec
jno
push
fdivl
adc
sbb
nop
dec
outsl
jno
and
lods
fildll
fwait
mov
cmp
aaa
repnz
loopne
lods
pop
data16
aas
jecxz
pmaxsw
inc
movsb
movsl
lahf
inc
xor
imul
adcl
mov
xor
jmp
test
fisubrl
xor
repz
orb
enter
mov
fcomi
in
jno
rcrl
cmpsb
pop
cwtl
mov
mov
mov
fdivs
aaa
xchg
popa
gs
scas
stos
arpl
jecxz
push
push
repnz
enter
test
data16
loop
or
addr16
pushf
cmp
rclb
fidivrl
cli
cmp
stc
xchg
xchg
loopne
adc
test
add
enter
sbb
rol
lds
mov
js
dec
jbe
push
je
fidivrs
movsl
cli
iret
enter
pop
mov
push
cmp
xlat
dec
mov
into
jp
cmp
lret
xchg
scas
mov
mov
push
sbb
jo
mov
stos
icebp
sarl
adc
mov
repz
dec
ret
movsb
and
stos
sbb
pushf
fcmovb
and
pop
jnp
inc
mov
sbb
pop
push
nop
fsubrl
add
add
std
adc
addb
pop
ja
mov
and
push
mov
xlat
shlb
sub
ficompl
rcl
cltd
sub
push
jmp
push
sbb
lea
loope
pop
stc
adc
aad
inc
jle
cmp
pusha
mov
je
lds
cmp
push
mov
ret
insl
sbb
dec
fsubp
mov
push
int3
ret
stos
imulb
push
cmp
das
fcomi
mov
insl
sbb
out
sbb
mov
or
sub
repnz
jmp
push
rcll
lret
mov
enter
inc
jbe
testb
popa
inc
push
je
xchg
mov
bnd
xchg
cmp
enter
loop
or
mov
and
push
jg
sahf
ja
nop
out
inc
jmp
xor
pop
jo
fnstcw
xchg
shr
sbb
pop
pushf
rcr
add
xchg
dec
mov
push
jno
cmp
add
test
adc
pop
sub
adc
jnp
dec
sbb
call
enter
sti
dec
sbb
xchg
xor
mov
repnz
popa
in
or
out
lods
arpl
mov
ja
pop
lcall
inc
jbe
daa
or
and
push
shr
jo
xor
das
mov
icebp
ljmp
pop
xchg
push
mov
pop
ret
addr16
pop
call
jecxz
mov
loop
xchg
mov
dec
lea
out
pop
out
mov
mov
cwtl
insb
pusha
ds
add
mov
iret
imul
push
rol
sbb
cwtl
xor
mov
cmp
mov
jmp
into
inc
or
adc
lods
cs
dec
push
sbb
cmc
push
mov
push
lods
mov
clc
push
add
dec
sbb
jl
inc
mov
aad
push
movsl
and
in
cmpsb
mov
addl
mov
pop
inc
mov
sbb
sub
mov
js
sahf
pop
mov
enter
test
lahf
call
xchg
jp
in
pusha
ss
icebp
sbb
mov
jo
mov
enter
inc
and
fstpl
cs
jle
sub
jnp
jmp
or
insl
inc
jge
push
clc
xchg
xlat
scas
push
sbb
mov
movsb
out
in
fcmovb
add
mov
fucomip
adc
cs
cmp
mov
subl
push
enter
jmp
movsl
or
mov
data16
popa
mov
lock
addl
sub
sbb
and
and
leave
mov
pusha
in
xchg
cltd
js
int
xchg
sub
xchg
pop
push
inc
subb
and
je
ret
pusha
or
subb
popa
inc
gs
xlat
sbb
xlat
and
loop
movsb
aas
adc
sub
into
rcrl
int
push
xchg
pop
ret
fdivrs
push
or
sahf
xchg
jns
fdiv
mov
dec
ret
cwtl
push
aaa
pop
bound
cmp
lds
mov
lcall
inc
loopne
pop
scas
ja
jns
scas
data16
jnp
scas
cmc
mov
inc
das
xor
xchg
and
and
pop
inc
les
jmp
popf
cmpl
je
cs
shlb
lods
sbb
mov
sbb
and
pop
sysenter
jmp
nop
dec
add
mov
pop
push
xchg
and
or
xlat
pop
fsubr
loope
aaa
jb
fmul
xchg
addb
in
push
lods
stc
inc
popa
shll
lret
pop
mov
arpl
cmpsl
cmp
repz
add
movntq
cmc
sbb
dec
push
lods
movsb
add
push
xor
int3
call
out
lret
or
xchg
or
pop
and
fldt
cmp
inc
das
into
sub
je
fstps
dec
loopne
or
xchg
or
fs
adc
sti
inc
ror
xor
push
hlt
stos
push
push
fists
dec
xor
sbbb
popf
inc
add
xlat
lods
sbb
jle
pop
push
fstpt
loopne
fcoml
jno
add
adc
clc
cltd
bound
fcmovu
popl
nop
scas
loop
mov
mov
sub
push
adc
jp
icebp
xor
pop
push
push
jg
xchg
pop
jbe
jnp
popa
push
inc
push
rclb
lret
insl
stc
pusha
add
shlb
inc
pop
lcall
data16
test
nop
out
mov
mov
mov
int
cmp
sbb
cmp
loopne
ret
adc
movsb
scas
mov
insb
inc
jno
movsl
test
ja
pop
and
dec
aaa
test
aad
sub
jp
or
faddl
pop
adc
sub
dec
add
jmp
movsl
or
dec
inc
loope
fmull
jle
rolb
loopne
lret
add
loopne
mov
xor
adc
outsl
enter
sahf
sbb
rcl
pop
imul
push
enter
lret
mov
cmpsb
cmp
push
or
pusha
dec
inc
xor
roll
std
test
cmp
xor
dec
dec
jo
sub
fsubs
jge
xchg
filds
mov
pop
xlat
es
dec
and
mov
push
mov
shl
filds
das
mov
mov
cld
fsub
push
frstpm(287
lods
hlt
clc
lea
inc
cltd
ret
lcall
mov
lret
mov
pop
aaa
push
mov
adc
cltd
ret
xor
cmpsl
xor
pushf
dec
lds
andl
jp
int
adc
icebp
cmp
popa
int
out
enter
pop
sub
loop
sbb
lea
mov
mov
wbinvd
mov
outsb
cwtl
pop
sub
xchg
sub
bsr
out
pusha
cmpsb
add
bound
test
sbb
cmp
push
add
andl
push
test
loope
dec
inc
out
mov
xor
pop
fisubs
sub
push
mov
in
inc
stos
jne
xchg
cmpb
xor
testl
arpl
hlt
inc
mov
jle
pop
nop
dec
in
lret
jne
push
cmpsb
xchg
pop
in
cs
xchg
cmp
xchg
subb
test
xor
lret
push
xchg
fs
bound
rorb
xchg
ficompl
xor
movsl
cld
scas
add
mov
dec
push
loop
insl
dec
pusha
cwtl
scas
or
imul
add
arpl
pop
mov
mov
mov
aaa
sti
clc
lock
or
cmp
clc
mov
mov
stos
sarb
lahf
dec
jae
jle
arpl
sbb
in
clc
js
xor
test
dec
aaa
inc
aad
cmp
mov
push
sbb
das
andb
fwait
cmp
fs
test
jmp
ret
shl
mov
dec
cmp
aaa
pop
shrb
or
imul
mov
movsl
repz
imul
or
adc
punpcklbw
in
or
push
sbb
imul
jne
add
adc
or
or
xchg
lcall
jns
add
sbb
mov
pop
xchg
ljmp
mov
addr16
fistpll
or
stos
cltd
xchg
or
mov
test
jle
andb
fsubrl
lods
mov
test
xchg
sub
cmp
loope
cld
pushf
pop
fdivrs
test
loopne
cltd
fldt
nop
shl
shll
jnp
inc
dec
les
hlt
add
inc
pop
out
pop
and
stos
pop
push
cmp
arpl
shlb
imul
pop
in
pop
dec
adc
lcall
push
xor
movsb
dec
dec
dec
pop
jbe
push
pop
sub
or
jne
jb
ret
mov
cmp
ret
lret
ss
mov
lret
into
dec
in
test
adc
adc
aaa
mov
cmpsl
addr16
or
xchg
push
pop
mov
ret
inc
cs
in
mov
lret
hlt
push
out
and
sub
jp
mov
xor
fld
pusha
sub
jb
movsb
sti
mov
je
jmp
clc
loop
dec
jecxz
xor
mov
stc
fs
inc
inc
mov
jle
test
cmp
lret
out
and
cmp
nop
subb
dec
out
enter
loope
dec
pop
loop
mov
inc
cmp
outsl
mov
dec
jmp
outsb
iret
in
mov
iret
outsl
xchg
sub
jle
test
sbb
add
in
xchg
mov
pop
lret
sub
lods
or
xor
jns
add
scas
cmp
roll
cmp
add
ficompl
mov
ja
cs
push
notl
ret
loop
mov
imul
and
aas
mov
jl
and
call
dec
lods
mov
mov
pop
inc
test
inc
outsl
hlt
mov
std
mov
xchg
add
jno
cmp
cmpsl
mov
inc
jg
push
add
nop
pop
sahf
roll
or
push
sbb
dec
push
test
shrb
cmp
mov
or
cmp
ret
add
mov
jp
mov
mov
push
js
and
push
fisubs
dec
adc
mov
inc
ja
jl
push
iret
dec
cmpsb
mov
inc
arpl
add
push
dec
or
lret
repz
fimuls
dec
pop
xchg
and
mov
cmp
jb
xchg
cmpsb
stos
fsts
or
mov
cs
in
cmp
sbb
aaa
lcall
xor
and
pop
aaa
xchg
lret
mov
popf
pop
adc
pushf
sbb
inc
inc
out
in
movsl
ret
pop
das
add
pop
jmp
jne
pop
scas
cmp
mov
ret
push
pop
stc
xor
int
movsb
pop
test
dec
lods
sbb
dec
and
adc
ds
loop
test
adcl
sub
push
push
dec
lret
iret
pop
and
lret
les
js
int
hlt
sbb
or
xchg
add
psllq
in
arpl
xchg
ja
fisubrl
and
xchg
push
dec
popa
das
cmc
jp
adc
out
inc
xchg
mov
repz
lahf
cmp
add
mov
or
mov
jge
mov
ja
xchg
pop
pop
sbb
xchg
pop
clc
cmp
xlat
xchg
rorb
push
cld
mov
add
mov
cmp
call
pop
xchg
movsl
sti
push
pushl
mov
cmc
mov
lock
stos
mov
sbbb
sub
add
push
outsl
je
imul
mov
pop
lds
push
and
inc
pop
inc
out
xchg
pop
mov
push
lock
in
hlt
out
sbb
divl
pop
out
xchg
ja
cmp
bound
aaa
mov
dec
push
sub
jg
rclb
sahf
xchg
dec
test
and
pushf
rcrb
push
popa
fdivs
xorl
dec
pop
xor
adc
test
aad
loopne
outsl
arpl
in
int3
dec
aas
fsubs
push
cmp
cmp
xchg
fdivs
fcomps
imul
in
sbb
xor
clc
dec
call
fdiv
rcrl
or
sbb
jne
lock
pop
pop
arpl
lods
jp
and
mov
adc
push
icebp
fdivrs
xor
iret
mov
call
jno
ret
repnz
sbb
jecxz
push
clc
xchg
push
mov
lret
dec
and
test
add
rcrl
sub
push
and
test
andb
andb
in
mov
das
and
sarl
lcall
scas
adc
add
jl
jp
mov
int3
scas
xor
push
out
sbb
sarb
mov
adc
mov
add
cmpsl
or
insb
add
aad
ret
scas
out
dec
lret
pusha
jb
push
sarb
xorb
pop
adc
sbb
pop
negb
out
pop
dec
jne
xchg
jp
mov
mov
and
mov
sub
push
dec
sub
test
addr16
fldt
sbb
push
sbb
int3
inc
mov
and
out
mov
xor
sbb
pushf
mov
sbb
cmc
cltd
cmp
and
loope
stc
ja
sub
mov
test
dec
inc
es
rol
outsb
bound
in
mov
daa
mov
xor
cmp
out
arpl
push
fcmovb
xchg
jnp
inc
fiaddl
aas
pop
and
les
insb
and
mov
dec
out
loop
loop
subb
leave
loop
fsts
insl
icebp
add
xchg
ret
sbb
stc
iret
mov
pop
cs
rcrl
cli
cltd
xchg
pop
sbb
xchg
setne
mov
sub
xchg
bound
mov
add
mov
add
push
cmc
push
adc
cmpsl
mov
stos
mov
jne
xlat
xor
stc
mov
push
inc
mov
xlat
push
aaa
adc
push
mov
out
mov
enter
mov
in
aad
mov
fs
and
clc
push
lea
or
sbb
push
dec
sub
pop
add
mov
push
push
mov
and
cmp
xchg
xchg
ds
cmp
les
scas
ljmp
jae
xchg
sbb
test
xchg
or
test
loope
add
add
test
insl
push
xor
mov
jmp
inc
add
addl
inc
jecxz
inc
or
xor
jmp
xchg
mov
sbb
aam
outsl
dec
fisttpl
in
test
fxtract
loop
push
or
xor
add
xchg
xchg
out
out
add
lea
in
fldcw
aaa
pop
or
push
outsb
cltd
cltd
es
mov
inc
inc
ja
jl
daa
jo
fcomi
lods
pop
repnz
test
addb
mov
and
daa
inc
or
out
pop
add
cmpsl
lds
mov
cmp
cmp
cmp
jbe
push
jmp
pop
fnop
ljmp
push
outsb
iret
scas
jae
xor
inc
xlat
jnp
inc
sbb
gs
fcompl
fnstsw
shlb
mov
pop
stos
push
out
out
sub
sbb
orl
or
xchg
sbb
sub
push
or
pop
and
adc
shr
test
xchg
out
push
jecxz
call
xchg
outsb
jg
add
mov
insl
jl
enter
filds
lods
push
gs
add
fisubs
sub
int
jmp
jmp
out
mov
dec
movsb
xor
in
rcll
push
and
lods
push
rolb
inc
xor
xchg
sbbb
pusha
insl
or
cltd
or
add
xchg
push
xchg
mov
imul
push
mov
pop
jp
mov
int3
in
test
pop
add
mov
jae
push
xchg
add
outsl
neg
push
clc
ljmp
xchg
and
xor
pusha
xchg
ljmp
jmp
popf
mov
scas
fwait
and
cmp
das
mov
psllq
leave
adc
popa
pop
xchg
add
dec
sub
mov
into
xchg
push
mov
adc
push
add
inc
sahf
xor
lds
cmp
ret
stos
xor
dec
leave
or
mov
stos
and
js
fstl
fcompl
mov
push
sarb
aam
jecxz
orl
or
mov
push
out
out
mov
mov
cmp
stos
rolb
cmpsb
inc
or
hlt
xor
jns
pop
and
pusha
jmp
movsl
nop
sbb
jo
mov
push
mov
or
mov
loop
out
lahf
or
xchg
out
push
jmp
testb
sahf
mov
dec
adc
aas
push
mov
add
cld
jae
pop
xchg
push
sarb
sub
orl
and
pop
imul
lret
add
out
lock
ret
pop
adc
mov
out
mov
cmp
push
mov
jns
adc
adc
lea
sbb
aam
mov
push
ret
push
sbb
dec
sbb
mov
leave
test
sahf
out
rcrl
fcmovnu
insb
jp
arpl
adcl
shll
lcall
in
jnp
outsl
in
test
test
pushf
cwtl
or
scas
push
imul
jp
pop
push
or
call
stos
add
out
xchg
mov
and
cwtl
sub
adc
dec
mov
add
or
pop
push
cmp
test
or
cwtl
xchg
scas
rorb
and
into
je
xor
xchg
addr16
ja
pop
pop
into
daa
fidivs
cs
xlat
push
out
imull
jle
dec
cmpsl
pop
mov
inc
mov
ja
pop
pop
into
daa
fidivs
cs
xlat
push
out
imull
jle
dec
cmpsl
pop
mov
inc
mov
ja
pop
pop
into
daa
fidivs
cs
xlat
push
out
rep
xchg
dec
mov
mov
ja
pop
pop
into
daa
fdivp
cs
jge,pt
out
sbbb
imul
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
packuswb
ja
inc
jb
or
jnp
push
imul
loop
repnz
xchg
mov
dec
addr16
ja
inc
jb
add
adc
and
xor
out
test
ret
mov
shlb
inc
mov
adc
pop
aaa
push
pop
lret
out
aam
mov
into
jmp
loop
loopne
sub
es
xor
add
adc
rorl
in
pushf
jns
pop
xlat
ret
adcl
add
ficoml
in
mov
inc
imull
or
mov
in
and
aas
adc
mov
xchg
repnz
mov
stc
push
fmull
aam
out
negb
pop
pop
mov
in
pop
pop
ljmp
add
in
aaa
and
xor
xlat
sbb
push
movzwl
xchg
cmpsl
scas
mov
lods
xchg
fsubs
jp
add
and
cmp
xlat
jno
xchg
cmpsl
repnz
ja
ds
popa
popf
stc
xlat
pop
cmpsl
lret
sahf
cmp
sub
jecxz
repnz
mov
out
xchg
ja
inc
push
push
add
push
aaa
and
mov
xor
inc
idivl
in
xlat
loop
mov
xor
push
es
sbb
insb
pusha
addr16
xor
arpl
xchg
xchg
cmpsl
jmp
cld
lock
cmc
cmc
repnz
or
sbb
fs
dec
push
inc
cmp
adcb
icebp
ret
xlat
loop
ret
xor
popa
and
and
das
inc
adc
xor
ret
mul
repnz
andb
xchg
inc
addr16
ja
inc
jb
add
adc
and
xor
ret
mul
repnz
andb
xchg
inc
addr16
pop
lret
nop
dec
sarb
inc
push
push
repz
sub
fmul
cmp
xchg
xchg
and
int3
dec
push
aas
shll
cli
inc
mov
orb
or
pop
mov
adc
sahf
mov
xor
popf
dec
daa
ret
call
inc
adc
push
adc
xchg
xchg
xchg
mov
push
lds
sub
add
inc
jo
arpl
test
out
addr16
jae
cmp
cmp
mov
mov
push
ds
out
dec
movsb
cwtl
adc
sub
fwait
sbb
jl
fidivrl
pop
fiadds
dec
outsb
data16
jno
dec
cmpsb
cltd
imul
std
mov
aaa
stos
mull
and
out
fnsave
pop
xchg
cmpsb
cli
push
pop
inc
je
lahf
pop
aam
push
lods
pop
cltd
inc
dec
dec
inc
popa
mov
out
jo
out
jbe
sbb
inc
push
test
in
std
mov
aaa
push
xchg
outsb
or
inc
cld
xor
in
roll
nop
jge
stos
and
sub
popa
cs
adc
push
lds
mov
push
inc
out
js
mov
ds
mov
inc
push
cmp
testb
ret
sti
dec
mov
inc
loope
sub
xchg
cmp
aam
mov
add
in
gs
mov
negl
or
loope
jg
push
popa
jmp
mov
add
xchg
scas
mov
je
xchg
jl
mov
fadds
jl
adc
out
jmp
add
dec
push
ja
mov
cmp
movsl
outsl
jbe
sbb
enter
in
xchg
sbb
scas
mov
mov
cmp
repnz
xchg
jmp
lock
push
andl
les
sub
data16
addr16
popf
jne
insl
push
sahf
pop
or
add
lcall
mov
popf
mov
mov
shrl
rolb
imul
cld
add
add
dec
loopne
movsb
in
inc
add
cmp
push
shll
jns
loope
jb
inc
clc
sbb
mov
jae
sbb
addr16
xor
les
in
jmp
dec
jo
push
sti
push
or
jmp
test
mov
push
movsl
dec
xchg
lret
xor
mov
xchg
fsubp
sbb
sar
loope
enter
dec
pop
sbb
call
bound
test
jno
ret
xchg
inc
aas
lock
das
je
std
xchg
rclb
lea
pop
cmp
in
mov
push
cmpsl
push
movsb
sbb
fwait
inc
jge
sbb
leave
repnz
inc
or
adc
loope
mov
cmp
sub
add
cmp
xchg
loope
xchg
jb
cmp
rcrb
push
add
js
fsub
push
inc
in
and
cld
mov
push
inc
enter
jns
dec
sbb
lahf
cmp
mov
lock
lea
int
inc
add
sarb
mov
push
out
xor
shrb
into
xor
mov
addr16
mov
ja
pop
push
mov
pop
iret
rcrl
sub
sub
push
hlt
out
inc
popa
std
jmp
pop
inc
sbb
or
or
jo
sub
add
or
and
lret
or
dec
shll
lahf
adc
out
cmp
adc
fisubrl
adc
mov
lods
dec
out
addr16
and
incl
xchg
iret
and
jmp
inc
dec
jmp
sub
mov
lds
bound
outsl
mov
hlt
inc
loop
repz
shll
pop
ss
lret
add
xor
and
add
xorb
subb
jne
xor
ret
mov
xchg
jb
push
nop
movzwl
mov
daa
bound
aam
push
std
fstpt
call
pop
adc
ljmp
mov
xchg
stos
xor
mov
shll
pop
pop
lods
fmull
ret
insb
vmread
xor
mov
loope
out
fdivl
mov
xor
add
xlat
cs
faddp
arpl
jl
inc
aas
mov
gs
out
lret
imul
in
and
int
push
test
mov
or
imul
int
mov
bound
ja
gs
outsb
ds
push
add
mov
push
ret
daa
arpl
mov
fs
add
insl
mov
pop
sbb
in
pushf
cmpl
andb
repz
insl
xlat
ja
je
jge
dec
mov
mov
add
psubq
rol
out
pop
cli
aas
lds
pop
and
lods
in
sub
cmpsb
mov
mov
mov
shrl
dec
lock
xor
push
sub
scas
je
gs
dec
inc
movsl
add
mov
lcall
inc
addr16
ljmp
mov
xchg
in
add
imul
dec
and
loopne
inc
lods
mov
pop
ljmp
add
mov
rclb
xor
call
fdivr
jno
sbb
inc
adc
jmp
mov
mov
mov
xchg
mov
pop
imul
je
cmp
pop
mov
aam
ficompl
push
xchg
mov
jno
cli
mov
jecxz
ljmp
out
lahf
push
iret
pop
adc
sti
outsb
cmc
mov
idiv
mov
cmp
xor
leave
aaa
in
adc
sbb
push
pop
mov
cmp
shr
push
mov
in
add
mov
xlat
loopne
aaa
mov
clc
clc
nop
imul
xorl
xchg
xchg
mov
hlt
mov
push
or
into
outsl
pop
pop
stos
popa
cmp
xor
loopne
dec
xor
addr16
xorl
sub
or
fmull
push
cmp
rorb
adc
insb
inc
bound
mov
dec
rcll
cld
xor
aaa
jge
pop
jg
xlat
or
addr16
shlb
loop
lahf
mov
adc
stos
push
cli
pop
jg
in
rcl
and
lods
dec
bound
adc
pushf
cmp
adc
pop
jge
jle
movsb
les
lds
ss
xor
lods
loop
push
std
xlat
jle
fucom
cmc
aad
movsl
cmpsb
and
test
bound
outsl
test
mov
xchg
xchg
mov
leave
add
mov
dec
repz
sbb
inc
pop
mov
fisttpll
lret
mov
sbb
add
and
mov
call
jp
into
push
pop
sbb
fistl
cmp
dec
cmc
sub
push
xorl
movsl
inc
push
adc
ffreep
lds
or
push
jno
mov
sub
xlat
in
push
pop
jl
push
add
mov
arpl
outsb
mov
out
sarb
loope
test
or
mov
icebp
add
pop
jge
mov
add
jno
sub
add
cmpl
pushf
outsl
pop
sbb
js,pt
ja
ja
cs
xchg
cmpb
shll
mov
outsl
xchg
pavgb
jecxz
arpl
push
loop
sti
push
movsb
cmp
sbb
es
test
jg
or
xor
mov
jecxz
loop
push
in
mov
lock
loopne
jmp
dec
pusha
and
hlt
add
nop
cmp
xchg
sub
test
popa
insl
push
idivb
std
fldenv
sub
mov
pop
in
mov
orl
push
and
mov
loop
cwtl
adc
insb
sub
popa
mov
inc
fcom
sti
pop
sbb
push
cmpsl
scas
or
jl
xchg
or
cmp
add
xchg
popf
rcll
and
aam
push
inc
push
lods
imul
push
mov
mov
cmpl
push
in
lret
mov
inc
jg
lea
mov
adc
cld
sub
cld
rcrb
aad
fstl
scas
cmpsb
push
into
out
push
adc
pop
or
aaa
loop
subb
xlat
aas
add
mov
icebp
adc
mov
pushf
stos
int
cmp
add
aam
cmp
add
dec
mov
in
stos
push
rolb
bound
jmp
dec
push
jne
push
mov
fidivrl
cmp
or
arpl
mov
pop
ss
add
xlat
aaa
pop
jmp
jbe
ljmp
and
add
and
and
hlt
mov
je
and
cmpsl
call
inc
mov
adc
mov
mov
cli
hlt
mov
fs
in
add
repnz
shrb
test
stc
pop
repz
movl
jb
into
mov
mov
pop
test
js
std
dec
cmp
push
adc
scas
xor
mov
push
test
cmp
repz
scas
sub
xchg
int
jp
xchg
xchg
jo
add
or
jg
mov
pop
jnp
cmp
xchg
or
push
dec
pop
xchg
icebp
adc
mov
stos
jae
ret
cmc
lock
xor
repz
repz
push
cmpsb
and
mov
test
xor
fs
mov
int
jmp
dec
sub
dec
dec
dec
sbb
ss
add
add
mov
mov
and
cmpsl
cwtl
inc
ret
test
mov
xor
in
xchg
dec
pop
rcll
cmp
out
scas
mov
stc
nop
les
imul
js
call
adc
xchg
jne
outsb
sbb
aam
es
gs
iret
and
out
add
hlt
sahf
sub
xchg
call
les
inc
xlat
inc
xchg
or
stc
xchg
je
lods
mov
aam
loop
loopne
push
out
std
ror
lret
xlat
xor
outsb
lock
roll
aam
loop
xchg
adc
mov
cli
es
imul
fsubs
jl
adcb
std
rcll
cmp
add
adc
scas
jae
in
sub
lret
mov
cmp
jge
mov
ds
pop
rcr
push
xchg
inc
mov
enter
sahf
rorb
ljmp
mul
dec
lcall
inc
jnp
mov
test
fwait
pop
xchg
jb
pop
or
insl
mov
ljmp
adc
jb
xor
push
sbb
out
popa
idivb
push
push
stos
xor
adc
jmp
push
insl
xor
mov
fwait
jae
xlat
adc
sbb
das
lahf
out
add
jle
dec
and
cmp
push
mov
xchg
sbb
pop
mov
jb
gs
pop
mov
outsl
mov
pop
leave
int3
and
fcomps
xchg
testl
nop
ja
push
push
inc
and
xchg
leave
pop
rorb
xchg
rclb
loop
xor
es
out
cmp
and
subl
or
xorb
mov
and
mov
cmpl
pop
test
fmul
sub
mov
inc
lods
fmull
cmpsl
loopne
ljmp
insl
aam
jmp
imul
xor
enter
stc
inc
into
inc
stos
mov
popa
rorl
int3
dec
mov
cmp
js
jl
fcmovu
hlt
mov
roll
cwtl
shl
dec
fwait
xor
test
jnp
ss
pop
call
aaa
jb
jp
lock
sub
enter
stc
cmp
cmp
cwtl
pop
cmpl
jge
xchg
shlb
mov
push
icebp
cmpsl
mov
xor
xchg
ret
popl
jae
inc
scas
imul
dec
insb
lock
fnstcw
xor
add
cmpxchg
cmp
mov
or
dec
xor
test
push
and
in
nop
jb
sbb
sbb
in
mov
add
xchg
inc
rorl
cmp
push
adc
jo
jge
sub
mov
ljmp
iret
xchg
xchg
sub
xor
adc
inc
pop
bound
push
sub
mov
mov
adc
fadd
and
adc
in
mov
popf
test
cmpsl
and
mov
mov
inc
inc
xchg
aaa
and
dec
loope
xchg
in
stos
sub
imul
fldt
subl
dec
rolb
push
pop
and
lods
xor
mov
sbb
inc
cld
dec
push
and
stos
popa
rolb
sub
xor
xchg
ja
dec
push
cmp
icebp
cmc
add
add
inc
mov
inc
xor
andb
pop
shrl
xchg
incl
outsl
popa
outsb
mov
push
pusha
ljmp
pop
mov
inc
and
mov
or
lcall
add
lret
sub
cmp
div
in
push
add
mov
aad
push
mov
ja
inc
out
add
ja
adcl
dec
mov
push
test
adc
or
push
sub
into
and
mov
push
jl
ljmp
lods
ds
push
add
enter
into
jl
sub
add
pusha
inc
mov
push
add
mov
les
data16
fdivl
test
inc
cmp
pop
enter
int
cmp
mov
jle
loopne
orl
cs
push
and
jb
stc
cmp
stc
bound
sbb
fistpll
aaa
addl
xor
jb
cmp
nop
adcl
mulb
clc
sbb
mov
and
ror
xchg
mov
mov
cmpb
aad
into
mov
fdivrl
std
hlt
lock
ljmp
movsb
lods
xchg
jecxz
xchg
sub
imul
mov
cmpsl
std
or
testl
jne
mov
into
lods
or
add
mov
push
fstpt
gs
mov
mov
fs
int
ret
add
js
sarb
aad
insb
dec
cli
xor
roll
xchg
das
fisubs
or
inc
iret
nop
loope
push
decl
fsubrl
adc
pop
push
lret
add
adc
jae
jns
cmpsl
push
or
jmp
add
pop
xchg
or
sbb
lds
pushf
stos
lret
sbb
and
in
nop
in
stos
out
shlb
sbb
xor
inc
xor
jne
jecxz
ret
rcll
movsb
lea
push
gs
push
or
sbb
and
imul
ja
rcrl
and
in
pushw
adc
cmpsb
mov
push
pop
pop
sub
jecxz
fwait
cmp
sbb
fwait
enter
pop
addr16
fiaddl
fcomip
mov
xchg
cs
jg
les
xor
rcr
ror
fidivl
out
push
aaa
push
mov
mov
in
jo
mov
sub
and
pop
mov
push
das
and
mov
inc
pop
hlt
jne
outsl
call
and
and
shlb
jbe
insb
xchg
xchg
sub
shl
push
mov
mov
jmp
out
and
push
daa
inc
cmp
mull
cwtl
aam
arpl
inc
sti
iret
outsb
mov
mov
or
aaa
sbb
into
sti
jbe
cmpl
push
sbb
or
mov
mov
jbe
adc
xchg
mov
mov
mov
stos
lret
aas
jl
lea
add
mov
sbb
and
cltd
in
adcb
mov
dec
jne
fsubrp
push
ds
mov
out
stos
dec
push
repnz
rclb
mov
sub
push
cld
sbb
sbb
in
add
inc
in
push
xor
adc
jns
ror
jmp
push
xorb
mov
mov
or
cmpsl
jmp
insl
sub
jno
stos
xor
add
or
popf
push
mov
dec
cli
in
mov
pusha
jle
push
sbb
aam
ja
cmp
xor
subl
pop
cmp
aaa
fstpt
push
movsl
rol
popa
push
lahf
aaa
fwait
lods
sahf
dec
mov
stos
jo
adc
xchg
jl
test
adc
les
mov
cld
xchg
insl
js
pusha
mov
add
out
cmp
adc
std
jbe
mov
cmpsl
xchg
sbb
imul
scas
iret
and
cmp
aaa
imul
xor
shll
aaa
std
pop
inc
and
ret
mov
leave
out
sub
mov
jecxz
fildl
in
js
fwait
lahf
mov
adc
sbb
insl
mov
inc
ds
and
pusha
ror
mov
and
fsubs
xchg
add
movsb
loop
inc
hlt
pop
mov
cmp
xor
mov
jge
inc
push
rcrb
xor
dec
or
idivl
push
je
cs
loopne
push
mov
mov
ret
sbb
jno
nop
cmp
dec
and
nop
sub
mov
push
sti
icebp
repnz
cmpsb
stos
test
dec
jns
inc
les
iret
std
or
sub
dec
mov
cmp
sub
cmovl
js
popf
stos
dec
or
insl
scas
out
fisubrs
lock
pop
ret
add
push
repz
pop
jne
fwait
cltd
js
dec
addr16
sti
lods
in
movsb
hlt
or
shrl
scas
aaa
ror
sub
sub
cltd
pop
mov
xchg
fs
je
jnp
sbb
dec
push
inc
inc
loopne
jmp
mov
cs
in
push
clc
pop
cmp
data16
mov
addl
mov
sbb
sbb
pushf
inc
mov
xchg
mov
repnz
add
and
jb
pop
inc
add
aad
mov
arpl
mov
je
add
sub
cltd
test
push
outsb
add
cs
jl
mov
mov
cwtl
cmp
push
loopne
or
lods
cs
xchg
adc
adc
and
mov
insl
add
inc
add
or
ficomps
lret
jl
outsb
jae
jbe
je
xchg
add
mov
imul
push
aas
fcomps
mov
repz
or
push
in
aaa
mov
shr
mov
push
mov
shlb
xlat
loopne
and
cmp
jp
out
fildl
sbb
xchg
je
movsl
test
cmp
mov
aad
xorb
xorl
push
test
ret
jnp
xchg
jns
mov
or
sub
cmp
and
bnd
lods
leave
xchg
add
adc
stos
dec
jmp
iretw
adc
add
lods
adc
mov
pop
mov
lahf
popa
lret
cld
inc
xchg
cmp
cmp
pop
and
sbb
sub
add
push
into
shld
sbb
dec
iret
imul
xchg
jns
mov
mov
add
xorl
fsubr
and
cmpsb
ds
out
shll
cli
arpl
enter
mov
fwait
popf
or
outsl
movsl
lods
and
sbb
lds
mov
push
jno
cmp
mov
push
push
dec
xor
cmp
sahf
js
or
sbbb
sub
xlat
jno
cmp
mov
sbb
imul
aas
or
push
mov
push
cwtl
lret
or
lcall
fldt
test
pop
dec
mov
stc
sbb
aaa
xor
insb
mov
push
enter
and
mov
je
xor
movsl
mov
jo
push
rolb
and
gs
xchg
pop
push
outsb
ss
cmp
add
cmpsl
and
and
cmp
jne
movsb
or
sbbl
in
push
add
jge
sbb
sti
hlt
mov
popf
stc
out
mov
shlb
mov
fimuls
dec
inc
xchg
and
jge
pop
sbb
push
std
sbb
sub
push
pop
les
pop
dec
sti
aas
and
push
xor
add
jmp
and
je
jbe
cmc
add
xor
popa
mov
lret
push
dec
adc
add
test
pop
loop
xchg
ret
xlat
sub
fwait
bound
jae
pop
cld
jae
repz
ficomps
ja
shr
mov
daa
cmp
xor
imul
inc
rcl
lods
leave
inc
rcll
mov
mov
movsb
and
jae
lret
sbb
lds
mov
bound
adc
mov
mov
ljmp
ja
add
add
mov
xor
setge
fimuls
pushf
jns
cmpsb
add
sbb
lods
imul
dec
scas
xchg
out
xor
test
testb
xchg
xchg
call
mov
or
hlt
mov
ret
add
pop
inc
outsb
push
add
adc
and
xor
ret
mul
repnz
andb
xchg
inc
addr16
ja
inc
jb
add
adc
and
xor
ret
mul
repnz
andb
xchg
inc
addr16
ja
inc
jb
add
push
aaa
and
xor
out
imul
not
andb
xchg
pop
addr16
ljmp
aaa
and
mov
ret
pop
dec
repnz
pop
js
push
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aaa
iret
daa
and
adc
cmpb
dec
inc
mov
cmpsb
mov
div
out
xlat
rol
shlb
daa
and
adc
add
addr16
push
push
inc
xor
mov
adcb
out
xlat
nop
mov
pop
mov
addr16
push
mov
test
sti
iret
xchg
mull
test
dec
pop
imul
in
jmp
dec
mov
sbb
push
inc
shlb
ret
sahf
jg
lods
xor
clc
mov
test
xchg
and
push
icebp
out
adc
dec
xor
and
cld
and
pop
fdiv
sbb
mov
repz
cmpsl
rcrb
shlb
lock
xor
pop
mov
shrb
and
imul
repnz
enter
testl
and
pop
jecxz
mov
push
cli
andb
aas
lret
popf
aam
mov
mov
xchg
jecxz
adc
loopne
push
enter
cwtl
cmpsl
icebp
push
xchg
rolb
sti
xor
rclb
xchg
pop
or
addr16
push
mov
mov
cmpsl
xchg
addb
xlat
rol
scas
jbe
push
and
outsb
ja,pn
adc
and
xchg
in
jmp
mov
andl
ja
and
ds
notb
mov
mov
push
data16
addr16
imul
addr16
push
push
inc
inc
mov
cmpsl
mov
div
out
xlat
rol
shlb
daa
and
adc
add
addr16
push
push
inc
inc
mov
cmpsl
mov
div
out
xlat
rol
shlb
add
mov
gs
mov
jo
enter
sub
xchg
lock
inc
int3
mov
lcall
call
clc
es
mov
cmp
push
push
sub
pop
fisubrs
xchg
into
jbe
push
imul
sub
out
jnp
rclb
scas
cmp
jle
js
int
out
dec
mov
shl
in
cmp
lcall
sbb
nop
in
push
sbb
pusha
movsb
and
sub
or
divb
push
dec
mov
test
dec
std
inc
imul
add
in
dec
lea
inc
mov
je
and
lret
xchg
inc
push
inc
xchg
cmpb
movsb
cld
fadds
and
cwtl
mov
adc
data16
popa
aas
fwait
imul
mov
pop
xchg
mov
repz
movsb
into
xor
mov
push
adcl
test
jns
fldl
fiadds
mov
cli
dec
xchg
xchg
xchg
divb
sbb
sbb
push
bound
sub
imul
call
mov
pop
out
test
in
push
sbb
jne
or
leave
dec
mov
pop
jne
dec
adc
lret
jge
pusha
and
push
aad
in
ret
xchg
loope
call
mov
popf
or
sbb
cwtl
pop
xor
orb
cmp
dec
mov
ja
mov
nop
daa
mov
cmp
pushf
cmpb
shl
push
xor
test
popf
adc
rcr
scas
pop
out
pusha
xor
mov
pop
and
std
shll
js
flds
mov
pusha
shl
and
cmp
fisubl
pop
fistpll
adc
rorb
cmp
sbb
adc
jecxz
cmp
out
inc
pop
push
xchg
pusha
add
push
cmpsb
jl
mov
jl
jae
cmp
icebp
scas
jae
aas
pop
daa
jns
mov
pop
mov
push
sub
pop
cwtl
hlt
push
mov
and
xchg
inc
cmpsl
and
lock
and
push
in
xor
stos
add
adc
sahf
lea
aas
jne
mov
mov
ror
sub
sbb
test
mov
out
jae
mov
pop
int3
sub
hlt
int
inc
jmp
add
jmp
sbb
sbb
inc
mov
int3
push
ret
jno
pop
pop
mov
incl
inc
clc
icebp
lods
jg
adc
loop
into
push
add
mov
fisubs
push
adc
sahf
pop
xlat
pusha
sti
cwtl
jl
arpl
cmp
cmp
add
fsincos
xchg
jge
inc
repnz
mov
add
dec
and
sub
xchg
xchg
fimull
ss
imul
or
mov
push
lcall
xor
lret
int
out
orb
lcall
mov
lock
aaa
les
int
dec
mov
lcall
mov
mov
arpl
and
movsl
xor
xchg
fnstenv
getsec
leave
sti
aaa
aad
inc
xchg
andl
push
dec
popf
add
adc
nop
lret
inc
sub
adc
dec
dec
sar
or
pop
jmp
cmpsl
add
notb
ficomps
inc
xor
jmp
pop
test
cmp
mov
into
mov
dec
mov
ficomps
or
bound
xlat
pop
jae
mov
add
lods
and
xor
inc
call
leave
loopne
add
scas
repz
outsl
icebp
inc
out
xchg
or
sbb
in
sbbb
ss
ds
cmpsl
popf
inc
mov
pop
push
pop
sbb
rorl
mov
stos
adc
out
mov
push
imul
or
push
mov
imull
outsb
xor
mov
incl
add
dec
push
fadds
repz
scas
push
jnp
or
mov
pop
mov
stos
xlat
ds
jmp
cmp
aam
or
and
aas
fstp
jmp
test
nop
xchg
stos
imul
loop
clc
xchg
xchg
aad
addr16
dec
add
popa
mov
repz
sub
cmp
mov
or
mov
or
fisttpl
cmp
fs
mov
sub
and
arpl
xchg
mov
stc
stc
ja
std
out
jmp
iret
mov
lock
push
push
sub
repnz
mov
fsts
mov
icebp
es
inc
mov
xchg
push
lods
sbb
push
hlt
xor
test
push
or
pop
cmp
push
divb
xor
or
add
repz
cld
sarl
pop
jmp
or
and
popa
in
mov
and
mov
pop
add
mov
dec
push
xor
lock
cld
pop
and
push
push
jecxz
add
xor
ljmp
inc
lods
movsb
test
fcomps
fdivrl
fidivrl
movsb
mov
clc
jnp
lea
inc
outsb
adc
ss
testl
mov
cmpsl
lahf
mov
inc
xchg
adc
cwtl
push
loopne
jmp
dec
cmp
cltd
pop
repz
pop
lcall
or
iret
aad
out
hlt
nop
daa
jnp,pt
push
daa
leave
xor
gs
outsl
fs
std
ja
mov
lcall
jge
lods
jl
add
in
loopne
xchg
sub
testl
or
push
jl
dec
iret
mov
outsl
xor
push
sub
sub
push
mov
pop
fsubs
xchg
repnz
std
jns
push
scas
adc
xor
repz
int3
mov
and
adc
push
xchg
enter
pushf
cmp
loop
sahf
loop
fwait
xchg
jp
pop
add
push
cwtl
push
mov
jb
dec
js
in
mov
scas
lds
js
mov
mov
mov
das
pop
pop
lahf
pop
nop
repz
hlt
mov
orb
jle
adc
outsl
icebp
scas
pop
inc
pushf
inc
pop
mov
popa
aam
leave
cmp
fxam
int
sbb
cwtl
shll
xlat
add
pop
jg
mov
jl
sub
jmp
xchg
or
repz
sub
mov
push
lcall
out
sbb
out
pop
and
rclb
mov
ret
jno
cmp
filds
js
scas
cmp
mov
inc
jb
mov
cli
cmp
inc
mov
sbb
icebp
ljmp
sbb
fadd
mov
and
adc
lods
addb
lods
jne
jnp
sbb
fsubrp
dec
loope
jecxz
gs
cmc
fbstp
fildll
and
add
int3
add
push
lds
add
bound
ljmp
cmpsl
fs
aam
out
add
jle
xchg
aaa
xor
xlat
mov
jbe
mov
or
test
jg
inc
inc
xor
mov
jmp
in
push
sub
fwait
hlt
add
cmp
sahf
xchg
lahf
cmp
stc
test
jbe
test
inc
add
mov
xchg
sub
fisttpl
and
push
cmpsl
mov
or
ret
insl
mov
ss
and
or
push
ret
call
push
jg
arpl
sbb
js
fcmovnb
test
ret
inc
sub
add
adc
les
push
jmp
add
cmp
lock
imul
rcrb
dec
or
cmc
jecxz
pop
sti
dec
inc
cmc
xor
inc
daa
fs
push
cmp
sti
dec
and
sbb
mov
das
mov
notl
jno
ss
jmp
out
jne
sub
fdiv
or
mov
xor
nop
mov
loope
xchg
cmc
mov
pop
sub
lea
test
pop
dec
add
aam
push
push
out
jmp
jg
fxam
jg
repz
int3
inc
std
xor
mov
push
jnp
imul
jge
pop
repz
je
out
inc
iret
hlt
or
jns
test
jnp
in
jnp
push
push
mov
inc
aam
xchg
in
outsb
add
or
mov
or
cmp
dec
mov
add
orb
dec
or
inc
pop
inc
sbb
cmc
test
iret
ret
or
dec
xor
xchg
sti
adc
jne
lahf
xchg
int3
or
xchg
rorl
mov
mov
or
pop
test
dec
ret
jg
das
sarb
not
aaa
pop
shr
jns
fdivrl
movsl
and
arpl
push
mov
je
mov
adc
cmp
push
andl
cmp
mov
bound
inc
and
stos
js
aas
xchg
lock
out
jbe
adc
stos
scas
xor
mov
sbb
out
shrd
aam
in
adc
sbb
mov
add
and
adc
or
inc
hlt
adc
rcrl
or
aas
outsb
mov
stos
cmp
loopne
testl
fnstenv
mov
ja
lahf
and
ja
mov
or
neg
shrl
inc
out
mov
fwait
cmpsl
and
out
add
push
jne
push
cmpsl
in
les
dec
ja
and
xchg
jmp
sbb
test
sbb
pusha
sub
cmp
sbb
pushf
lahf
addr16
dec
lahf
in
outsb
mov
dec
bound
popf
push
add
mov
scas
sbb
popa
mov
loopne
sub
repz
stos
dec
jmp
jmp
inc
cmp
jnp
xor
jns
sbb
xor
fwait
dec
xor
arpl
push
cmp
add
pop
mov
pop
cmp
imul
cli
dec
and
cltd
jo
dec
mov
sar
xor
xchg
shlb
cltd
and
cmpsl
dec
dec
cmp
hlt
cmp
sahf
mov
or
stos
in
hlt
push
or
addl
adc
loop
mov
arpl
jae
divl
scas
es
fstpl
inc
imul
mov
mov
dec
jns
cmp
push
int3
dec
mov
ljmp
bswap
ds
aaa
repz
ljmp
mov
lcall
cmpsl
pop
gs
out
inc
xor
out
adc
scas
ss
inc
dec
cli
sbb
pop
push
or
outsl
scas
or
xor
ret
loop
popf
addr16
cmp
pop
sbbb
cmp
hlt
dec
cs
loope
out
gs
cmpsb
or
push
les
arpl
outsb
andl
sahf
push
or
dec
test
loop
xor
dec
mov
add
xor
push
scas
dec
or
or
xchg
jge
icebp
add
jb
int3
andb
push
mov
cmp
sub
test
das
jl
mov
lcall
outsb
test
jns
add
pop
popa
rol
cwtl
sub
cs
sti
fwait
cmpb
sub
call
lods
or
sub
dec
fwait
inc
std
mov
jb
ret
jge
lock
xchg
es
mov
clc
mov
or
pop
in
xlat
fsubrl
mov
sbb
sbb
iret
rcl
xchg
out
ret
sub
scas
stos
push
dec
into
sub
lds
fwait
nop
addl
pushf
cmp
mov
aam
fcompl
push
mov
andb
lock
stos
sbb
pop
cli
add
and
fwait
adc
loop
test
push
jo
xor
push
data16
or
jbe
push
fwait
aaa
iret
xchg
sbb
and
sti
test
aam
stos
mov
popa
mov
xchg
pop
push
sub
in
mov
lds
pop
inc
add
rorl
jle
mov
rcll
mov
lods
mov
push
lcall
sub
sub
mov
rol
or
ret
adc
mov
xor
iret
lea
fiadds
into
fwait
ss
and
jbe
in
sbb
inc
or
fwait
dec
cmp
sub
negl
pop
sbb
cs
std
xchg
repz
dec
mov
jbe
pushf
jecxz
ds
mov
lds
call
sbb
out
clc
jnp
sbb
clc
fdivl
std
sub
jns
cmc
outsl
jecxz
jle
xor
imul
loop
sbb
cmp
push
test
dec
aas
out
rcrb
inc
adc
jg
lods
jo
mov
loopne
inc
jb
mov
mov
fisubl
ds
mov
leave
call
stos
and
ja
and
test
pop
test
cli
pop
add
movsb
xor
sub
or
push
xchg
and
adc
push
shll
xchg
scas
and
rolb
pop
ret
sbb
mov
leave
adc
movsl
jne
mov
cmc
loopne
push
pop
mov
adc
movsl
sti
imul
cmp
out
pop
ljmp
mov
add
and
mov
shrb
das
xor
lahf
int
mov
je
sti
loopne
cmp
add
sub
pop
leave
mov
sbb
shrb
and
xor
push
dec
inc
jp
ss
jne
pop
mov
mov
int3
sahf
mov
lds
add
or
popa
mov
leave
loope
push
dec
push
test
sbb
ds
out
inc
sbb
inc
scas
idivb
aad
sysret
int
fisttps
adc
mov
and
mov
mov
sub
push
into
jmp
sahf
mov
dec
mov
cmp
je
adc
pusha
outsl
imul
add
jbe
in
movsb
ja
gs
push
sub
mov
pop
mov
inc
mov
mov
or
fisubrl
cs
dec
int
jnp
push
lds
sbb
in
add
out
push
jbe
sbb
sub
pusha
cmc
fs
xchg
sub
dec
pmaxsw
mov
fistps
mov
iret
mov
sub
aad
inc
sub
adc
cld
arpl
add
roll
xchg
jb
add
lods
fstpt
mov
push
fmul
leave
shll
or
and
lds
dec
repz
std
dec
iret
cmpl
je
rcl
idiv
jo
lret
jae
js
sub
sbbb
add
pop
or
or
or
mov
imulb
sbb
dec
jecxz
xchg
rol
inc
xchg
mov
add
push
mov
gs
pcmpeqb
int3
cmc
popa
enter
and
cmpsb
xor
jae
adcb
adc
in
hlt
subl
add
push
shrb
ret
xchg
iret
mov
dec
lret
adc
xchg
cmp
int3
bound
jno
push
mov
xlat
mov
or
inc
mov
imul
jb
inc
nop
cltd
fiaddl
mov
pop
pop
and
iret
adc
sbb
cmp
insb
je
sub
xchg
fdivr
cmp
mov
shrb
inc
sbb
inc
dec
push
in
ja
les
in
and
push
xor
mov
adc
adc
in
into
es
imul
daa
jns
dec
mov
push
inc
mov
loop
test
mov
test
jbe
jo
cmp
mov
mov
mov
pop
adc
sbb
iret
inc
movsl
ret
into
jl
mov
jae
test
movsl
insb
out
pushf
inc
push
and
roll
dec
popl
aad
pop
xor
cmpsl
imul
arpl
ret
xchg
dec
jle
push
xchg
xchg
inc
cltd
cmp
jge
ss
adc
bound
mov
scas
inc
mov
in
xor
out
pop
mov
sti
inc
enter
pop
mov
shrl
push
mov
fsubrl
xor
outsl
lock
jne
lods
xlat
into
mov
int
dec
roll
gs
mov
cli
movsb
cmovs
mov
jecxz
fimuls
pop
xor
sahf
enter
sbb
fldenv
and
or
or
cmp
movsl
ljmp
popf
jae
int
out
inc
mov
cld
je
jne
inc
fnstenv
in
test
xlat
out
daa
dec
test
out
pop
decb
mov
adc
je
mov
cli
lods
push
dec
adc
les
andb
jecxz
movsb
xchg
xchg
add
xorl
mov
mov
stos
fmul
das
push
std
pusha
push
int
clc
insl
pop
sub
xor
aas
lods
into
dec
stc
cmp
adc
sti
int3
mov
popf
pop
rcrl
push
movsl
or
xchg
xchg
outsl
mov
in
or
hlt
ss
popf
int3
xchg
movsb
lock
xchg
mov
aad
dec
cmpsl
movsl
andl
hlt
xor
mov
ds
fwait
pop
xlat
jno
adc
or
popa
call
jl
cmpsl
sub
out
and
loope
mov
add
sub
adc
pushf
mov
adc
push
cmpb
sarl
in
pop
push
testb
out
pcmpeqd
aad
inc
jle
iret
test
mov
into
dec
outsl
jns
mov
leave
xor
lcall
lea
pop
jnp
mov
push
jns
movsb
adcb
push
outsb
repnz
dec
fiaddl
jae
cmpb
ficomps
cmp
int
or
sub
xchg
nop
push
pop
pop
mov
cmp
in
sahf
jns
xor
add
mov
cmc
dec
inc
adc
ds
xlat
push
pop
jno
xor
mov
fmul
jne
inc
push
fadd
mov
roll
add
add
sbb
push
movsl
mov
stos
fmuls
push
jmp
outsb
repnz
cmp
or
push
negb
mov
fsubs
jp
add
in
mov
push
inc
xchg
pushf
or
or
mov
and
popa
inc
adc
mov
fucomi
push
adc
in
mov
stos
fwait
pop
into
pop
in
dec
inc
pop
rcrb
sti
cltd
xorl
test
fs
dec
pop
push
push
ret
and
adc
and
sub
movsb
adc
push
or
inc
repnz
mov
dec
jp
cld
dec
add
or
xchg
xlat
and
xor
xlat
fcoml
jbe
out
mul
xor
xchg
fwait
or
test
fnsave
inc
inc
push
fisttps
dec
adc
xor
fadds
into
rcll
aam
sub
mov
neg
in
adc
jmp
adc
filds
lret
movsl
cmp
test
inc
inc
int
sar
popf
xchg
push
mov
ds
call
mov
pop
hlt
xor
mov
cmp
das
and
or
roll
leave
xchg
sub
pushf
fst
pop
mov
lcall
cmp
xrelease
jnp
cli
mov
mov
xor
andl
adc
icebp
jnp
push
push
adc
sbb
popa
mov
mov
inc
jae
clc
xor
adc
cmc
inc
lods
fisubs
out
sub
adc
push
testl
std
aad
lds
jo
xchg
lds
fmull
jne
sbb
adc
shrb
sub
add
js
mov
push
xchg
inc
add
out
xchg
ror
iret
xchg
aad
out
popa
sub
lcall
call
iret
stos
jge
pop
negb
repnz
jnp
imul
ret
or
pop
fisubl
pop
mov
in
pop
fiaddl
addps
mov
jmp
push
xor
in
addr16
testb
loop
leave
jae
inc
mov
push
push
sub
aad
push
popf
push
in
jne
sbbb
dec
jno
or
enter
jmp
ss
cmp
fistpl
cmc
pop
pop
mov
test
int3
xor
cmpsl
sbbb
mov
adc
aas
adc
inc
mov
add
iret
fwait
pop
sub
inc
pusha
jb
and
hlt
xlat
int
dec
xchg
jmp
xchg
inc
cmp
xchg
sbb
mov
lds
xor
xchg
jno
or
and
cltd
iret
js
lret
xchg
pop
xchg
jg
das
aas
and
test
in
or
notb
fisttps
stos
jg
pop
xchg
inc
adc
pop
jae
clc
xchg
mov
or
and
test
xlat
cmp
pop
mov
test
fnsave
ret
lds
pop
push
sub
or
push
adc
hlt
adc
and
cmp
inc
insb
inc
push
and
pop
loop
sub
mov
jle
nop
call
dec
dec
in
notl
inc
arpl
gs
clc
sbb
sub
sbb
jnp
sbb
stos
dec
xchg
pusha
add
jmp
and
jl
add
addr16
push
push
inc
inc
mov
cmpsl
mov
div
out
xlat
rol
shlb
daa
and
adc
add
addr16
push
push
inc
inc
mov
cmpsl
mov
div
out
xlat
rol
shlb
cmpsl
push
divl
enter
inc
mov
cmpsl
mov
div
out
xlat
lock
pop
adc
add
addr16
push
rolb
mov
cmpsl
or
js
pop
cmpsl
das
mov
xor
pop
dec
push
dec
jnp
or
scas
xchg
fmul
call
cli
cwtl
mov
jp
jp
pop
js
or
sbb
sub
inc
loopne
cli
fsubrs
in
cwtl
mov
arpl
push
and
adc
or
sti
cmpsb
lcall
stc
repz
sbb
jp
push
add
and
sbb
adc
add
fmulp
inc
mov
sbb
rorb
dec
std
in
or
popf
cli
and
xor
mov
xlat
pushf
push
mov
push
data16
jmp
add
cwtl
jle
add
cwtl
sbb
add
sahf
add
test
popf
lcall
mov
inc
shrl
bts
sbb
inc
sbb
fidivs
xchg
daa
lret
sbb
mov
lretw
mov
adc
cs
jp
cli
xchg
sbb
sbb
aaa
add
cld
add
mov
inc
mov
jp
add
or
jge
flds
in
push
stos
lret
push
lcall
push
and
or
add
repz
call
mov
rcrl
dec
pop
sbb
push
push
jno
outsb
ja
sahf
mov
fnstcw
lret
fdivrp
out
sar
imulb
jp
das
or
push
push
inc
pop
pop
call
mov
leave
cltd
cli
lcall
sbb
push
cmp
or
sbb
ljmp
clc
stos
mov
mov
dec
push
cmp
or
sbb
ljmp
clc
stos
mov
mov
adc
push
divl
and
popf
push
push
or
xchg
aaa
jmp
aas
cltd
repz
movb
popa
jbe
xchg
xor
pop
fadds
pop
andb
adcb
test
inc
push
fildl
test
punpcklwd
loop
lea
test
stos
mov
scas
xchg
fndisi(8087
fs
inc
sbb
fidivl
mov
das
inc
xchg
aam
or
cmp
lods
addr16
movsl
dec
nop
pop
or
or
xchg
pusha
sbb
jp
mov
lods
xor
popf
pop
arpl
sbb
mov
cld
cmpsb
cld
fldcw
push
cmp
push
cli
pop
jle
jmp
cltd
mov
jno
aaa
pop
adc
sarb
mov
aam
inc
shrb
cwtl
lcall
xor
mov
dec
jo
mov
or
cmp
fwait
outsb
xchg
or
int3
fwait
out
or
sbb
clc
js
push
sbb
jne
lahf
push
clc
or
ljmp
dec
cmp
jmp
jns
rclb
mov
aas
sbb
xchg
inc
daa
lret
xchg
cwtl
in
sub
movsl
pop
dec
push
scas
jecxz
mov
cmpsl
jns
ss
mov
jno,pn
cmp
cmp
pop
mov
shlb
flds
xchg
or
cli
stos
xor
lcall
xor
and
pop
test
adc
adc
cli
int3
jecxz
xchg
adc
in
xlat
loop
out
ja
cmp
mov
or
ret
ds
ja
lret
xchg
mov
adc
mov
pop
fdivrl
pcmpgtd
pop
out
imul
aas
subl
fs
sarb
loopne
mov
xor
and
sub
les
fwait
adc
nop
and
bound
push
inc
jae
popa
test
or
lcall
mov
xchg
mov
dec
and
dec
imul
mov
test
xchg
mov
imul
mov
mov
out
movsb
push
pop
jp
clc
shll
push
movsb
into
jg
cmp
sbb
and
xlat
mov
cli
jns
mov
xchg
in
stc
or
mov
or
pop
jl
in
push
cmc
repnz
js
out
xchg
hlt
addl
adc
jl
sub
int
mov
test
mov
adc
push
jl
add
push
pop
mov
test
fsub
xchg
pop
cmp
xchg
mov
mov
cmp
mov
dec
std
push
push
sbb
les
int3
add
out
cmpsb
cmp
cmc
addr16
jns
lods
cwtl
or
dec
les
insb
jle
push
in
lcall
xor
and
xor
les
mov
cli
jp
cmp
push
jo
das
push
push
and
jmp
and
pop
and
fldenv
cmp
cs
cwtl
adc
dec
cmp
scas
sbb
mov
or
jl
jb
sub
add
jecxz
ret
sbb
xor
xchg
jne
pop
cwtl
inc
aas
daa
ret
lcall
fildll
cmp
or
lods
cmp
nop
mov
xchg
mov
and
lahf
sbb
push
sbb
push
int
jo
cmp
nop
gs
or
fmul
sbb
pop
je
jnp
xchg
push
daa
or
test
sti
cld
pop
and
fiaddl
cmp
in
add
inc
pop
push
xor
xor
and
enter
lss
js
push
push
aad
jbe,pn
mov
arpl
lods
or
data16
xlat
xor
push
cld
inc
outsl
aaa
jbe
les
xor
repnz
test
cmp
xchg
dec
sbb
sbb
pusha
sub
push
mov
or
incl
mov
inc
and
push
icebp
pusha
jb
enter
ds
imull
push
xchg
xchg
jb
cmp
test
dec
pop
dec
jmp
adc
lret
fisubrs
call
repz
push
dec
and
pop
inc
add
aam
ja
lret
pushf
loopne
jo
jp
lret
xor
testb
in
fcompp
xor
pop
into
adc
xor
dec
imul
insb
xchg
imul
cmp
add
add
add
call
test
cmp
sar
mov
jmp
cli
fstl
xor
dec
imul
sti
imul
notb
jbe
fwait
and
aam
aaa
int3
insl
out
incl
jmp
sub
mov
lcall
movsb
jle
add
push
pcmpeqd
rcl
fisttpl
sub
mov
cmp
pop
inc
cmp
mov
dec
out
mov
cmp
push
or
scas
sub
push
into
lock
mov
and
lock
jb
ds
cmpsl
jns
xchg
pop
push
sub
sbb
es
out
inc
cmpsb
in
xor
out
xor
cmp
add
dec
cmp
jns
add
inc
xchg
adc
faddl
and
outsb
and
push
push
fistl
xor
jecxz
inc
mov
mov
mov
xor
mov
jnp
and
add
aas
jl
sbb
sbb
or
popf
lods
mov
adc
jge
mov
pushl
stc
mov
cmc
sahf
cmp
add
test
stos
cmp
int
repz
mov
jg
les
mov
imul
test
rorl
cltd
enter
jg
pop
cld
push
mov
or
cmc
in
loop
mov
mov
out
adc
xchg
sub
mov
lret
lahf
pop
xchg
and
scas
push
mov
push
mov
push
mov
inc
lock
es
loope
pop
sti
adc
xchg
mov
cld
jle
push
and
mov
or
shll
fwait
bound
into
ret
lods
aad
and
add
push
movsb
ret
adc
cmp
in
movsl
lcall
iret
add
rolb
pop
nop
adc
in
jno
scas
push
xlat
arpl
test
push
dec
lahf
cmp
cmp
ret
mov
inc
gs
out
push
xchg
xor
add
inc
mov
pop
adc
or
add
push
push
dec
sbb
int3
mov
lea
adc
pop
mov
sub
jle
mov
fsubrs
inc
jb
mov
clc
fucomi
sti
sbb
fsubs
insb
ja
push
mov
sbb
and
jnp
popa
cmp
fldt
subl
test
ficoml
push
jno
inc
popf
pop
mov
cmpsb
rolb
push
lret
rol
mov
sbb
ds
pop
lret
xchg
inc
clc
mov
mov
cmpb
es
sarl
ret
loopne
std
pop
aad
xchg
jbe
cmpsb
mov
lahf
pop
xor
pop
lock
mov
jae
js
fs
loop
mov
adc
cmpl
cwtl
pop
nop
into
loope
cmc
dec
sub
repz
adc
fiadds
mov
aam
fcmove
cmp
adc
scas
xor
fdivrs
xchg
ds
sbb
jae
in
sub
loope
mov
mov
inc
rcrl
mov
add
dec
adcl
lds
int
scas
stos
or
push
mov
xor
insb
iret
xor
cmpsb
fmulp
orl
sarl
fs
jmp
dec
iret
enter
fimull
lock
aaa
jb
and
xchg
dec
leave
fsubl
mov
xor
xchg
jo
adc
adc
dec
cli
xchg
pushf
gs
loope
scas
scas
popf
ds
loope
add
addl
adc
lods
ds
xor
or
fadd
mov
addl
inc
jl
jb
xor
mov
cmpsl
jnp
sub
xchg
push
mov
shlb
jp
add
sti
ljmp
test
mov
xchg
add
daa
jl
call
mov
push
pop
cs
pop
je
mov
add
xor
lock
clc
hlt
jno
sub
mov
jns
subl
in
mov
push
je
outsl
lret
repz
shlb
adc
inc
fisttpll
mov
dec
lahf
dec
icebp
loope
jo
jb
sub
sub
stos
sbb
dec
push
repnz
adcl
imul
mov
xchg
push
push
cmp
iret
mov
ret
cld
push
cltd
xor
mov
sub
and
cltd
repz
dec
fildll
push
inc
mov
arpl
dec
dec
add
mov
jmp
pop
inc
xor
mov
movsb
push
data16
add
mov
fistps
aam
push
sbb
adc
and
adc
jns
popa
dec
mov
in
in
popa
inc
pop
loop,pt
jno
sbbl
cld
fstps
and
fs
sbb
ds
les
pop
sti
mov
movb
call
bound
mov
xchg
pop
hlt
inc
xor
fmul
cmp
and
fcoms
push
adc
pop
adc
lahf
fcompp
mov
jb
mov
mov
jb
adc
push
jns
or
jp
mov
jge
inc
in
idivb
test
and
fisubrs
daa
in
cmc
adc
sub
xor
mov
fs
add
orl
add
dec
cmp
dec
cmp
dec
mov
jns
push
and
bound
mov
jp
xor
pop
mov
jae
mov
and
mov
lds
aas
mov
out
les
lret
nop
adc
mulb
bound
mov
imul
push
sub
xor
pop
roll
pop
lock
ret
inc
push
faddl
and
mov
lock
dec
lock
jmp
enter
mov
pop
xchg
shlb
dec
and
repnz
pop
jecxz
sub
imul
sahf
inc
dec
mov
fmull
aas
lahf
push
push
fs
push
in
pop
and
mov
sub
mov
cltd
or
pop
cwtl
dec
test
add
mov
and
push
sar
cmp
ljmp
sbb
int
mov
ret
sub
adc
push
dec
jns
push
add
sub
inc
mov
cmpsl
in
fmull
sbb
faddp
push
test
or
pop
mov
dec
lods
push
test
mov
cmc
add
das
lds
stos
pop
mov
and
jge
mov
jae
mov
jb
out
adc
test
mov
movsb
subb
sbb
mov
fsubrs
adc
dec
loopne
xchg
xor
adc
jns
cmp
add
loop
jmp
mov
mov
adcb
pop
in
test
push
jge
xor
xor
aas
rep
out
leave
pushf
dec
and
cmp
jg
lcall
add
loopne
in
cmpsb
mov
cmp
cmpsb
ret
enter
flds
ret
cmp
adc
and
clc
jnp
push
mov
mov
aam
adc
scas
pushf
mov
hlt
cmpsb
dec
cmp
mov
mov
mov
cmp
stos
inc
mov
xor
adc
and
sbbb
mov
xorb
push
shll
mov
pop
pop
sub
sbb
xor
jns
roll
xor
cmpsb
xorl
bound
fmuls
and
push
inc
add
push
and
or
rclb
cmp
mov
mov
mov
popa
push
mov
dec
adc
and
pusha
mov
fcompl
stos
push
test
lds
inc
mov
jp
sahf
and
negb
dec
jecxz
mov
push
js
mov
lahf
popa
sub
xchg
dec
adcl
decl
nop
mov
mov
mov
or
stos
pop
imul
das
pushf
mov
repnz
xchg
les
push
mov
dec
es
jnp
mov
dec
imul
and
in
sarl
and
xchg
movsb
sbb
fbld
xchg
pop
push
je
xor
rcrl
sbb
mov
fidivrs
cmp
mov
push
cli
pop
xchg
repz
imul
and
fcoml
add
aas
je
and
jne
mov
mov
lea
adc
mov
and
cmp
cwtl
popa
or
dec
bound
je
out
dec
add
xchg
dec
dec
cmc
xchg
push
out
out
cmp
jecxz
lret
test
add
in
pop
push
xchg
lret
push
push
push
cli
jmp
push
xor
push
cmp
mov
dec
mov
das
cltd
fs
lcall
fnstsw
out
fdivs
divl
xor
mov
inc
imul
ror
ja
push
jp
fs
pop
insb
or
ja
movsl
iret
xor
sarb
adc
and
inc
hlt
mov
lods
in
sti
push
insl
dec
pop
call
sbb
sbb
mov
sub
lea
cmp
inc
mov
in
xlat
and
pop
jnp
fsubl
mov
add
aad
pop
out
inc
add
mov
xchg
in
inc
faddl
lret
daa
xchg
and
cwtl
or
leave
std
mov
imul
cmp
jno
dec
subb
or
mov
test
or
mov
or
lret
fimull
push
aaa
pop
std
aaa
in
dec
mov
xchg
push
pop
insb
aas
scas
rcr
mov
xchg
popf
dec
jp
popa
push
fldcw
lret
leave
std
or
cmpsl
repz
cmp
jns
flds
sub
adc
lea
jle
jp
movsb
pop
popa
das
mov
subb
ja
or
sub
pop
pop
inc
daa
das
leave
adc
outsb
ds
push
inc
add
mov
aas
rcrb
and
jge
xor
scas
push
imul
or
dec
cmpsl
outsl
sarb
add
iret
gs
push
or
nop
lea
inc
adc
icebp
inc
lock
int
dec
xchg
sub
mov
movl
xlat
and
arpl
sub
push
cld
les
xchg
adc
jge
inc
aad
das
inc
fs
sbb
fwait
adc
sbb
xchg
or
movsb
mov
mov
jnp
xchg
insl
cmp
push
or
xor
out
mov
add
xchg
roll
test
adc
ljmp
mov
daa
cmp
dec
outsb
daa
xchg
or
jnp
dec
sbbb
sbb
outsl
xchg
push
shlb
sub
iret
leave
push
push
mov
pop
call
cs
mov
push
stos
andb
fincstp
arpl
xchg
mov
mov
cmp
clc
stc
inc
notb
in
xchg
xchg
addr16
inc
rolb
idivb
aaa
xchg
pop
jno
mov
add
loopne
push
mov
popa
sbb
add
xlat
mov
adc
xchg
jl
mov
fstp
jle
pop
or
and
bound
mov
fcmovnbe
mov
subb
mov
inc
scas
into
cmp
mov
adc
cmp
xor
jno
mov
mov
jne
pop
mov
sub
rcrb
dec
or
add
add
jb
adc
test
data16
inc
push
testb
leave
dec
fiaddl
adc
aaa
scas
ror
int3
call
out
cmc
mov
mov
fcmovu
mov
push
ret
cwtl
xchg
push
inc
ficoml
xchg
lcall
mov
mov
or
pop
js
popf
cmp
dec
sbb
push
cmp
sub
faddl
sbb
pop
aas
iret
imul
cmp
pop
outsl
negl
je
in
and
push
lcall
cmp
inc
cmp
cmpsb
xor
or
push
cmp
shlb
cmp
jg
jnp
subb
test
cli
add
xor
sbb
jnp
adc
xchg
mov
mov
bound
sub
mov
movsl
sti
jmp
jle
and
std
nop
jns
rorb
pop
addr16
push
shrl
repnz
mov
mov
jns
pop
and
xchg
xor
arpl
jae
leave
push
aam
lock
lahf
pop
push
mov
mov
mov
scas
sarl
mov
cmp
stc
std
icebp
shll
jb
fstl
jg
out
ficoml
jmp
xchg
or
nop
stos
dec
ss
daa
xlat
es
add
fs
mov
movsb
ljmp
adc
mov
cmpsl
fwait
pushf
push
xchg
push
clc
inc
mov
inc
add
and
rcrb
call
xchg
pop
daa
xor
jge
push
imul
aaa
xchg
movsb
jge
lods
nop
jecxz
in
push
xchg
into
ja
aas
xor
and
popa
dec
psubb
xlat
jo
imul
push
adc
mov
sbb
insb
flds
mov
test
jno
or
paddusw
test
out
jp
mov
in
cmp
sub
daa
mov
xchg
mov
and
xor
xor
dec
js
test
mov
adc
or
dec
divl
jnp
out
adc
add
daa
pop
popf
loop
lea
jle
jo
pushf
pop
gs
or
dec
sub
add
lock
mov
aam
aas
jnp
cmp
rcr
sbb
imul
push
dec
push
add
pop
mov
or
mov
pop
mov
sarl
in
pop
adc
or
ret
mov
adc
sbb
out
inc
add
and
hlt
mov
jnp
cltd
dec
inc
addr16
dec
mov
inc
xlat
mov
stos
iret
aaa
xchg
push
fdivrp
cli
sar
pop
fcoms
pop
sub
push
pop
cmp
les
lock
rcrb
adc
fdivrs
push
mov
dec
cmp
cmp
fdivrs
rolb
fimull
gs
inc
mov
dec
fbld
or
inc
adc
add
popl
out
and
ds
jae
mov
mov
lcall
add
or
sbb
jmp
xchg
in
popf
shl
les
jl
rcr
add
mov
frstpm(287
sub
std
mov
push
outsb
test
mov
add
dec
ret
mov
leave
lcall
jne
dec
shl
data16
jo
ror
arpl
xchg
xor
arpl
pushf
imul
popf
and
lahf
popa
or
in
or
outsb
lret
call
mov
cwtl
imulb
jns
ret
pusha
inc
enter
jp
jb
ret
mov
sbb
cmp
jno
outsl
pop
aaa
mov
push
sbbl
fldcw
fsubl
push
popf
test
mov
and
sarl
jb,pn
lea
bound
push
sub
cmpsb
lea
iret
enter
sbb
js
lahf
and
imul
mov
lcall
in
add
jl
fwait
std
daa
sub
rcll
sbb
and
add
push
xor
in
mov
std
ds
jl
lcall
rcl
jbe
mov
xorl
xor
fisttpll
popa
daa
dec
stos
push
stos
push
mov
std
icebp
lcall
xchg
je
cmpsl
jns
pop
and
push
pop
sbb
movsl
mov
popaw
dec
sbb
ret
cli
aad
je
jmp
dec
mov
adc
repnz
cwtl
xchg
into
fidivrl
addr16
jne
or
adc
push
xor
inc
in
mov
stos
ja
int3
test
clc
xor
cmpsl
jmp
pop
inc
cmc
xchg
xor
cmp
dec
mov
add
out
add
sbb
aam
and
add
js
std
xor
or
mov
or
and
dec
add
lock
xchg
and
xchg
jl
sub
lahf
gs
and
out
les
dec
lcall
imul
int
or
add
arpl
push
stos
cmp
aas
cmp
or
je
aaa
cmp
jle
pop
sti
lahf
icebp
jecxz
lods
mov
xchg
fcoml
mov
cmp
fcoms
xor
pop
scas
dec
inc
sbb
andb
add
mov
xor
mov
mov
loope,pn
insl
rcrb
cmpl
shl
in
mov
bound
push
cmp
or
sbb
ljmp
clc
stos
mov
mov
dec
push
cmp
or
sbb
ljmp
clc
stos
mov
mov
dec
push
cmp
or
sbb
ljmp
clc
stos
mov
mov
jl
pop
js
or
sbb
enter
call
xor
push
gs
les
aam
in
hlt
xor
inc
mov
xchg
mov
adc
and
xor
les
aam
in
hlt
xor
mov
inc
adcl
rcll
les
aam
in
hlt
xor
mov
inc
sub
adc
adc
addr16
pop
icebp
mov
mov
in
popf
pusha
mov
aas
jne
pop
jg
outsb
hlt
jae
mov
lahf
pop
int3
jmp
sub
test
xchg
scas
pop
addr16
xor
imul
cmp
mov
cmp
cmp
add
int3
inc
subb
popf
cli
jl
outsb
je
icebp
dec
add
push
xor
les
xchg
daa
in
repz
inc
imul
mov
mov
fscale
test
loope
stos
adc
fcompl
mov
out
popa
movsb
or
jnp
mov
pop
je
repnz
jge
jmp
rcll
clc
xchg
sub
fiadds
enter
faddl
adc
xchg
add
adc
loopne
inc
push
jecxz
ss
add
adc
and
xor
mov
inc
adcl
rcll
loope
cwtl
mov
dec
mov
loope
sti
push
lret
das
xor
xor
xor
pop
leave
xor
andb
mov
add
inc
loope
fbstp
ss
xor
sbb
je
repz
pop
mov
mov
inc
xchg
push
movsb
popa
mov
inc
adcl
rcll
loope
icebp
les
aam
in
hlt
xor
mov
inc
adcl
rcll
loope
icebp
les
mov
jns
mov
lea
hlt
pop
sub
pop
cmp
je
xor
mov
pop
mov
inc
stos
rclb
pop
stos
scas
jge
jl
lods
sub
cld
shll
xor
jle
mov
or
dec
push
adc
lea
stos
es
orl
dec
mulb
ja
ss
jnp
mov
nop
std
int3
cmpsl
xchg
lret
mov
movsb
xchg
call
or
scas
mov
adcl
adc
aas
xchg
mov
mov
and
mov
out
xor
jmp
mov
ja
inc
add
paddq
pop
jo
adc
push
push
lahf
imul
testl
inc
inc
mov
lea
add
jg
idivb
adc
push
sub
sub
mov
add
or
mov
scas
mov
adc
in
insb
add
xchg
add
adc
cmpsb
or
pop
mov
lret
rorl
aad
jno
pop
add
push
fdivs
sbb
and
mov
dec
cmp
adc
mov
pop
ds
mov
inc
in
push
scas
stc
and
sahf
pop
mov
xrstor
icebp
in
daa
ror
add
cs
xchg
mov
int3
pop
faddl
dec
aaa
lds
and
sub
addb
jg
xlat
cmp
aas
sbb
andl
lds
sarl
sbb
cltd
repz
jno
sub
xor
js
sbb
out
shll
xchg
sub
jo
xchg
or
pop
or
scas
cmc
pop
sbb
loope
addb
sahf
push
and
enter
adc
mov
cmp
dec
push
sub
aas
dec
shl
cmc
pop
adc
push
push
outsl
jp
add
adc
push
fwait
repnz
add
push
push
or
add
xor
push
roll
insb
push
aam
push
outsb
ficoml
es
loop
cli
rorl
fmuls
movsb
out
fimull
sbb
fsubr
fidivs
or
push
xchg
add
lret
dec
test
sti
es
sahf
jno
fistl
test
or
mov
rorb
es
ds
fildl
sub
xchg
repz
sub
xchg
in
loop
dec
pop
hlt
andb
pusha
sahf
lcall
push
negb
fs
add
fsubr
lea
cld
inc
xor
out
mov
mov
test
sbb
lahf
gs
testl
cmc
imul
sahf
mov
xchg
pop
jns,pt
adc
mov
ja
lods
jno
icebp
xor
mov
inc
xlat
add
insb
adc
push
jmp
jbe
stos
cmpsl
dec
in
xlat
mov
push
inc
push
push
xor
mov
push
lcall
adc
cmpsl
dec
fwait
add
out
aad
jg
aas
cld
dec
nop
mov
cmpsl
mov
nop
jnp
es
fs
pusha
or
scas
sub
add
fidivrs
sbb
push
adc
jo
popf
pusha
jae
out
xchg
dec
outsl
dec
push
mov
adc
movsl
popa
inc
push
pop
push
stos
cli
add
ds
sbb
stos
test
scas
dec
ret
rclb
icebp
jg
add
jp
popf
mov
jnp
cmpb
and
inc
repz
mov
pop
fwait
and
sbb
and
sub
out
xchg
mov
push
lcall
xor
adc
xor
mov
adc
mov
adc
mov
stos
sub
mov
subb
ds
xchg
inc
or
mov
push
and
aas
sub
aas
sarb
cmp
in
jl
push
mov
fsubr
aam
lret
rorb
xor
aas
pop
sbb
ret
outsb
xor
bound
fs
and
adc
pop
lds
xchg
xlat
lret
jnp
int3
bound
pop
aad
jge
mov
cmc
cmp
add
sbb
or
jo
icebp
leave
cmpsb
outsl
xchg
pop
or
inc
mov
cltd
lock
ret
jbe
stos
adc
and
scas
push
pop
xchg
or
sbbb
or
fidivrl
cmpl
dec
xor
mov
inc
out
dec
adc
cmp
cmpsb
dec
or
jo
mov
sub
jp
sub
add
xchg
adc
into
xchg
sbb
add
loop
aaa
ret
or
add
rorl
mov
fneni(8087
dec
push
xchg
mov
mov
pop
repnz
xor
mov
dec
push
cmpsl
je
mov
insb
cmpsl
xchg
mov
out
jae
fidivl
pop
shlb
scas
cld
stc
push
lahf
adc
cli
sbb
lods
bound
add
dec
xor
daa
add
lods
adc
loopne
sbb
lods
outsb
xor
enter
adcl
jns
xor
fcoml
fs
jge
int3
cltd
cmp
mov
push
nop
cmp
or
int
out
xchg
and
mov
and
push
adc
inc
xchg
xchg
fists
aam
cmp
mov
jns
inc
rolb
dec
and
rol
cmp
ljmp
dec
rorl
push
int
jecxz
cwtl
inc
dec
gs
dec
rcll
outsl
outsb
jo
lods
fldt
xor
pop
inc
mov
or
sub
cld
cmp
js
int
popf
xor
aam
xor
xor
subb
adc
js
mov
adc
js
aaa
mov
fldl
jle
dec
frstor
lcall
push
sbb
mov
je
mov
cmp
rcrb
xchg
shll
ds
movsb
push
out
mov
pop
jae
ret
das
mov
mov
jne
and
jecxz
aam
mov
xchg
xorl
jle
shlb
insb
push
lcall
fcomps
push
xlat
movsb
xor
dec
dec
sub
imul
or
adc
cmp
cs
mov
hlt
and
sbb
mov
inc
in
cmp
insb
xor
cld
mov
and
mov
add
adc
popa
xor
ss
adcl
out
test
mov
xchg
in
ret
hlt
pop
add
add
daa
mov
mov
mov
mov
or
push
repz
mov
adc
push
push
cmc
pop
mov
imul
jno
test
fcomp
hlt
mov
push
mov
stos
push
sarl
dec
dec
cltd
out
xor
xlat
mov
mov
test
dec
mov
cmc
push
movzbl
mov
ss
xchg
loopne
add
js
mov
pop
sti
test
shll
jmp
push
push
or
shll
fdivr
mov
sub
push
and
leave
jns
clc
lcall
insb
repz
jae
jge
sahf
push
mov
sub
lret
dec
in
out
dec
dec
call
movsb
ja
jge
push
dec
outsl
mov
jge
pop
outsl
insl
or
inc
aas
adc
mov
or
imul
cmp
sahf
inc
jp
sarb
lods
ljmp
into
adc
lret
and
or
pop
mov
push
xchg
stc
aad
shlb
xchg
cmpl
icebp
sub
rcrl
sub
sbb
mov
fimuls
pusha
sub
xchg
leave
mov
pushf
or
fisubrs
sub
sub
fisttps
pop
dec
mov
testl
or
cltd
sti
mov
dec
sub
cmp
mov
fmul
jg
mov
add
call
sub
xchg
pop
pop
outsb
sti
divb
cmp
or
xlat
rolb
adc
or
pop
aas
pusha
xor
pop
pop
sbb
mov
jae
ljmp
test
aad
addl
bound
rorl
inc
mulb
mov
sbb
ret
push
dec
lock
repz
mov
mov
test
push
inc
es
or
sbb
pop
pop
jne
or
shl
imul
dec
xchg
popa
xlat
mov
pop
fisubrl
sahf
xchg
inc
je
jae
lds
rcl
js
xor
repnz
out
jmp
jmp
sti
mov
mov
movsb
xchg
jo
or
call
inc
hlt
dec
shlb
sbb
pop
jmp
mov
fbld
add
out
xchg
out
jno
xchg
xchg
cwtl
movsl
mov
inc
mov
int
inc
daa
xor
push
mov
and
fimull
push
sub
scas
cmp
or
mov
mov
ljmp
sub
loop
push
xchg
icebp
xchg
xlat
mov
aam
test
mov
les
mov
pushf
push
jns
dec
stos
repnz
mov
dec
and
xchg
inc
arpl
dec
cmp
push
out
push
mov
jb
je
inc
inc
fsubs
cmpsl
andl
pop
adc
fdivl
pop
scas
jp
jmp
push
inc
xlat
sarb
jo
mov
pop
sub
mov
fnstcw
rcrl
xchg
ss
dec
xchg
push
push
sub
mov
mov
rcrl
mov
shlb
sbbl
scas
mov
loopne
sub
adc
cmp
ss
test
test
movsb
dec
test
dec
lock
inc
sbb
pop
pusha
or
fisubs
xchg
jge
arpl
mov
mov
aam
bound
mov
clc
xlat
cwtl
fnstsw
clc
cltd
or
movsb
dec
testl
xchg
and
sarl
mov
int3
cmpsb
push
cmp
loope
xchg
ss
sbb
sub
mov
call
push
or
push
movsl
je
sub
loop
test
push
inc
out
sub
jg
sbb
mov
iret
mov
lock
and
jl
dec
iret
mov
lret
adc
inc
int3
leave
mov
insb
mov
fisttpll
pop
cmpsl
stos
pop
sub
mov
into
loopne
jg
or
es
mov
mov
rol
and
mov
pop
test
sbb
and
adc
out
push
lock
or
push
es
add
arpl
aaa
scas
test
jne
xchg
mov
add
aad
ljmp
fisubrl
push
cmp
lods
aad
mov
popa
xor
push
cmpsb
mov
fimuls
push
sbb
jmp
mov
daa
stos
cli
faddl
lret
cmpsl
pop
cltd
psrld
andl
js
cld
push
sbb
arpl
in
sbb
pop
push
jle
mov
or
lret
out
cli
dec
pop
jne
addr16
jp
js
mov
ss
iret
jg
call
xchg
jnp
dec
jecxz
mov
ja
xor
imul
pop
repnz
jle
inc
enter
dec
int
mov
clc
jge
stc
push
in
rorb
loopne,pn
xchg
jl
and
insl
push
sbb
cli
mov
add
jecxz
and
jbe
cmp
out
adc
ljmp
loopne
dec
repnz
xor
ret
cmp
add
sbb
cmp
dec
dec
lcall
ljmp
xchg
sub
jle
mov
outsb
pusha
pop
mov
inc
pop
and
adc
je
mov
push
aaa
lods
lahf
scas
dec
add
jp
test
test
pushf
dec
jle
xchg
icebp
ss
js
sbb
cmpb
pop
fs
jb
lds
out
xor
jmp
mov
lods
fldcw
cmp
jmp
inc
xchg
test
jp
xchg
cmp
mov
jno
cmp
addr16
mov
add
imul
inc
sbb
cmp
ds
and
jecxz
mov
jmp
xorb
xchg
add
sahf
mov
add
in
pusha
mov
dec
enter
pop
int3
fcmovbe
mov
fdivp
push
cmp
or
out
lock
sahf
pop
sub
dec
fiadds
jp
pop
add
loop
sub
mov
pop
ret
shrb
dec
out
in
push
lret
xchg
jae
sahf
sbb
cmpsl
mov
clc
movsb
push
arpl
sbb
xlat
stos
mov
jae
pop
out
jmp
mov
sbb
in
sahf
jecxz
push
std
xchg
xchg
mov
inc
dec
sbb
sub
dec
inc
xchg
push
icebp
sub
stc
imul
loope
add
cmpb
repnz
std
loopne
sbb
add
in
mov
push
out
xor
adc
sbb
into
and
cmpsb
add
adc
cltd
repz
mov
sti
js
pop
xchg
lret
dec
jb
mov
cmpsb
inc
test
popa
push
sha1msg2
rcrl
push
icebp
int3
xchg
scas
in
sub
xorb
xor
repnz
je
and
lods
jnp
push
in
add
cmp
scas
mov
fldcw
mov
aad
int3
test
xor
mov
sti
sbb
sub
add
loopne
insl
std
dec
sub
arpl
push
out
push
sbb
push
jg
cwtl
lods
mov
push
and
iret
dec
out
xchg
lods
lcall
imul
std
and
mov
pop
add
jp
push
mov
and
cld
dec
fbld
pop
mov
jge
jge
xchg
sbb
xchg
and
pop
push
cmpsl
push
cmp
pop
fbstp
cmp
loopne
mov
sbb
jae
fisubs
pop
xlat
cli
pop
xor
mov
les
nopl
lds
pop
stos
lea
inc
scas
jb
and
out
mov
lea
cli
sub
push
xor
sub
sub
jmp
in
divl
inc
lods
xchg
sbb
pop
inc
idivb
std
cmp
pop
orb
dec
leave
dec
jae
into
inc
push
push
inc
mov
push
stos
leave
cwtl
jle
xor
ret
mov
jae
arpl
hlt
cmpsl
sbb
xchg
gs
insb
cmp
xchg
out
rcrb
mov
rolb
mov
in
lahf
sbb
jb
in
xchg
pop
movsb
mov
clc
enter
popf
xchg
or
mov
stc
mov
sbb
cmc
sub
cltd
fisubrs
loop
pop
mov
jecxz
fistpl
lcall
dec
in
mov
xchg
cmpsl
out
hlt
jp
jmp
mov
or
jle
mov
mov
push
negb
sbb
jns
out
mov
in
shl
cwtl
inc
in
leave
addb
out
in
in
fwait
scas
pop
fs
cmpsb
xor
stos
push
lret
add
dec
push
repz
pop
cs
clc
add
out
mov
lcall
pop
pop
cli
outsb
push
icebp
sar
pushf
arpl
mov
icebp
addr16
mov
test
add
jg
add
push
add
sarb
pop
mov
mov
jg
addr16
popa
push
mov
xor
pop
aam
jno,pn
adc
add
pop
ljmp
repz
sahf
xchg
pop
adc
add
in
cmc
mov
xchg
jge
push
mov
in
cmp
inc
das
sub
shl
push
or
jg
shlb
shrl
int3
push
add
fidivrs
xor
ss
push
cmp
lock
inc
mov
sbb
scas
push
test
fsubs
flds
pop
cmp
les
aam
jns
xor
ja
das
leave
xor
jmp
bound
daa
or
subl
fwait
mov
sub
push
jne
dec
pop
lock
jecxz
loope
push
dec
xchg
insl
in
fs
scas
adc
addr16
dec
out
scas
mov
jb
and
sbb
js
jge
jmp
jne
repnz
push
mov
jno
fs
mov
mov
push
dec
pop
cmp
ljmp
ljmp
or
xor
or
aaa
stos
push
mov
test
inc
lds
push
sub
pop
enter
push
outsl
mov
movsl
dec
mov
xor
ljmp
dec
inc
inc
inc
adc
std
inc
or
daa
dec
fistpl
out
sbb
and
pushf
icebp
popf
jmp
push
mov
push
jecxz
push
pop
lcall
shr
aaa
add
pop
pop
fsubr
stc
data16
pop
mov
dec
inc
xor
out
orb
or
shlb
xor
xchg
add
or
push
gs
xchg
sti
push
sbb
sub
orb
push
xchg
cmc
sti
int3
adcb
add
andb
sub
adc
rorl
inc
mov
mov
or
addr16
or
jg
adcl
cmp
sbb
dec
mov
and
cmpsb
ss
scas
dec
jne
test
bound
dec
pop
push
xchg
jp
pop
popa
lcall
fmull
dec
je
jno
cmp
sbbl
popa
push
mov
mov
jo
mov
repnz
xor
lock
cmp
stos
popa
out
cmp
stos
or
xor
or
imul
dec
mov
xor
rorl
mov
add
push
sub
sbb
push
andb
add
mov
push
or
arpl
jge
sub
mov
aam
out
push
incb
jmp
test
insb
xchg
cmp
jae
pop
dec
sahf
adc
cwtl
sub
sahf
cmp
pop
xor
and
in
mov
mov
cld
dec
rep
xchg
in
sub
stos
orl
inc
push
mov
push
or
subb
stos
fcom
fcmovnb
adc
in
outsb
cmp
outsb
popf
or
cmpsl
sub
mov
ds
arpl
jns
xor
xchg
and
dec
scas
pop
mov
mov
mov
es
xor
dec
sbb
ficoms
mov
lods
mov
mov
mov
sub
out
jne
in
ret
mov
adc
lret
or
add
xchg
pop
push
out
popa
test
loopne
ss
jmp
cmpsb
test
rcrl
dec
and
cmp
testb
adc
lea
push
add
jg
in
out
and
or
push
rcr
sarl
inc
adc
stos
les
cmp
ja
test
stc
and
lret
push
sbb
js
in
cmp
mov
ds
push
out
mov
cmp
andl
xchg
add
cmp
or
jecxz
xchg
popf
xor
cmpsb
enter
sbb
in
movsb
sbb
aad
add
fisttps
in
popa
adc
sub
and
int
aaa
or
and
cmp
repz
jg
and
sbb
pop
or
imul
lods
or
add
lea
cmp
pop
mov
mov
aaa
mov
cli
mov
icebp
sti
jns
xchg
mov
out
mov
jmp
cwtl
out
lret
jp
pop
xor
test
jle
mov
jl
mov
cltd
int3
add
out
inc
pop
jmp
and
sub
inc
movsl
les
fstpt
mov
jae
repz
and
mov
jle
shlb
jo
dec
scas
push
neg
and
test
adc
gs
cmp
or
repnz
scas
pushf
in
sbb
fadds
and
xchg
xor
popf
stos
or
jb
nop
les
sti
adc
icebp
adc
sbbb
rcr
pop
pop
jmp
pop
subl
jne
gs
jo
push
fnsave
sub
add
pop
movsl
push
sbb
and
sbb
mov
mov
into
xchg
xchg
shlb
ljmp
fdivs
or
shlb
mov
cwtl
ss
addr16
pop
mov
adc
mov
lods
push
rclb
mov
and
mov
cmc
out
in
test
lock
inc
gs
fiaddl
add
or
out
enter
orb
pop
mov
xor
sub
out
lds
mov
je
jns
adc
mov
ret
stos
push
adc
rclb
lock
and
sub
xchg
js
jb
mov
or
ficomps
fisubs
dec
adcl
adcl
fcmovnbe
xchg
repz
pop
pushf
mov
adcb
add
cmp
ja
daa
ljmp
dec
sbb
jnp
mov
popf
int
mov
out
cmp
add
js
mov
scas
or
icebp
into
hlt
into
aas
or
rclb
sbb
inc
sub
jnp
sti
mov
sub
sbb
dec
andb
loop
icebp
fisttpl
adc
and
xor
mov
inc
adcl
rcll
loope
icebp
les
aam
in
hlt
xor
mov
inc
adcl
rcll
loope
icebp
les
aam
in
hlt
xor
mov
inc
add
mov
adc
and
add
adc
and
xor
xor
mov
mov
pushf
fcompl
int3
push
lcall
enter
mov
jmp
dec
pop
cmp
jns
jns
std
clc
mov
aad
test
test
cwtl
jmp
push
sbb
clc
jns
imul
sub
jno
mov
jmp
push
push
sub
cmp
dec
xor
cmpl
push
ret
repz
pop
movsb
push
sbb
dec
adc
in
push
jne
jne
cmp
xor
xor
je
fs
clc
jge
mov
mov
xchg
inc
addr16
int3
outsl
int3
xchg
test
in
fisubl
or
dec
sub
mov
push
or
loope
pop
fadds
es
leave
push
sbb
or
cmpsb
imul
xchg
imul
daa
xor
and
enter
cmc
mov
sbb
dec
movsl
sbbl
adc
mov
andb
push
mov
or
pop
aam
sbb
out
sbb
clc
mov
mov
dec
xchg
fbld
jo
inc
sbb
and
dec
sbb
lock
sti
call
mov
cmpsl
hlt
jmp
adc
daa
sub
jnp
sbb
lret
test
int
lret
lods
lcall
pop
or
sub
or
dec
es
adc
cmc
mov
cli
mov
stc
cwtl
jmp
push
pop
cmp
jns
imul
mov
mov
jmp
push
pop
cmp
jns
imul
jnp
imul
xchg
and
pusha
jo
cli
add
add
lods
add
sarl
push
insl
push
lret
mov
leave
mov
rcll
leave
or
cmp
xor
adc
fwait
int3
outsb
push
pop
pop
ret
mov
fwait
mov
mov
jo
daa
sub
lea
jge
xlat
sbb
jb,pt
icebp
lea
xor
repz
add
or
inc
cli
nop
sub
push
rcll
mov
sarl
push
mov
xchg
daa
mov
lret
or
mov
data16
imul
xlat
dec
adcb
out
popl
sbb
popf
or
dec
mov
sbb
or
rcl
rorb
sti
push
push
imul
mov
jecxz
mov
ret
xchg
fisubs
dec
js
mov
push
mov
div
lock
adc
mov
setge
inc
int3
ss
cmp
or
jno
imull
outsb
out
shrb
mov
jns
cmpsb
or
in
push
es
out
shlb
jecxz
fs
rcll
and
sti
pop
sbb
jl
pop
aas
sub
cmp
cwtl
scas
in
add
dec
fidivs
hlt
aad
mov
in
mov
ja
push
mov
rorb
aaa
adc
and
cmc
aaa
inc
lods
adc
arpl
fldlg2
pop
sub
sbbb
xchg
mov
int
ucomiss
aad
ficompl
ss
cmp
daa
pop
scas
push
aas
add
sbb
cmpsb
daa
test
repnz
xor
jle
outsb
int
int3
addb
dec
shrl
rclb
mov
and
inc
xchg
pop
adc
cwtl
fwait
push
or
hlt
out
and
dec
mov
sbb
pusha
dec
push
mov
and
and
ds
lret
pushf
cmpsb
test
je
sub
cwtl
test
bound
xor
decl
cmp
fidivrl
nop
and
pop
xchg
std
inc
jne
test
roll
pop
pushf
lds
mov
hlt
dec
sbb
fidivrs
pop
bound
fcompl
jmp
stc
fisttps
xchg
in
ja
pop
push
add
cmpsl
xchg
push
sarb
mov
jge
ljmp
aas
jno
adc
out
cltd
jns
and
das
lock
cmp
ja
into
adc
mov
cmp
loopne
cmp
outsb
xchg
dec
fs
mov
iret
cmp
stc
push
xchg
sub
add
inc
adc
loop
mov
cmc
or
sbb
fs
xor
in
enter
mov
fs
push
enter
mov
test
xchg
or
dec
ret
ss
mov
loop
dec
dec
xor
jl
mov
sub
sbb
rol
or
xchg
ret
push
push
iret
lahf
xor
test
imul
jo
aad
mov
fcompl
xchg
inc
and
add
test
inc
inc
cmp
stos
bswap
sub
decl
mov
ja
inc
xor
xchg
mov
cmpsb
add
call
push
push
popf
ret
push
and
lcall
xchg
xchg
fstpl
cmc
mov
mov
in
pop
push
popa
cmp
inc
dec
jnp
addr16
mov
stc
lret
cmp
pop
fbstp
jns
cwtl
jmp
push
mov
sub
int
sbb
pop
imul
xlat
push
and
or
cs
fiaddl
lahf
pushf
sbb
clc
loopne
push
and
mov
dec
jns
mov
cmpsl
sub
pop
xchg
out
sti
sbb
mov
mov
ret
aam
adc
jbe
movsl
add
push
cs
pop
cmpsl
add
mov
dec
fnstcw
out
jbe
or
int
add
mov
sub
pop
add
ret
in
test
adc
pop
sub
mov
or
inc
or
fsubp
add
std
rclb
ret
inc
add
pop
bound
rclb
pusha
xor
xchg
movsl
sbb
jb
js
jl
popa
movsl
lret
mov
out
xor
push
in
adc
hlt
xor
rcr
cmp
cmp
mov
mov
in
lret
cmp
push
mov
cli
movsb
or
iret
loop
pushf
cmp
sti
push
add
sti
mov
out
ss
in
popf
push
push
push
stos
cld
inc
daa
and
iret
icebp
xor
jns
imul
aaa
dec
pop
loopnew
cmp
xchg
aam
or
sbbb
lds
out
xor
repz
lods
dec
fbld
inc
psubusw
mov
aad
push
cmp
cmpl
outsl
lock
add
repnz
and
mov
xor
ss
mov
add
dec
or
subl
sub
ret
cmp
test
insb
movsb
aam
mov
xor
cmpsl
shrb
outsb
mov
lods
rorl
push
mov
call
pop
lret
cltd
jbe
out
aam
je
and
xchg
xchg
or
enter
scas
mov
lods
push
shr
pop
xchg
int3
xchg
adc
push
adc
in
jp
out
mov
test
sahf
cli
hlt
movl
dec
pop
fcos
xchg
sub
pop
sti
sbb
fnstenv
arpl
roll
push
nop
fisttps
stos
cmp
test
test
add
outsl
or
push
jnp
call
repnz
push
adc
nop
cwtl
mov
jl
imul
cwtl
and
xchg
pop
xchg
sbb
pop
test
dec
mov
sbb
jbe
cmp
xchg
pop
lret
jecxz
adc
xchg
mov
insl
orl
lock
filds
sub
fmull
rorl
sub
xchg
leave
dec
es
ljmp
xchg
mov
and
cmpsb
push
fs
mov
int3
mov
cli
mov
mov
cltd
hlt
sbb
mov
and
icebp
aas
scas
xorb
adc
std
out
xchg
int3
push
and
cmp
loop
cli
arpl
xor
aas
jns
add
in
pop
or
in
xlat
push
imul
mov
out
pop
mov
fcomps
dec
push
inc
xchg
or
movsb
jmp
xchg
xorb
mov
cmp
nop
and
arpl
out
pop
imul
push
mov
adc
daa
pop
subl
mov
es
fcmovb
jno
int3
outsl
sub
pop
cmpsl
stos
and
or
icebp
sbb
cmp
fcompl
leave
and
js
movsb
push
outsb
dec
mov
stos
cld
in
movsl
cvtps2pi
xor
sub
js
xor
insb
add
add
test
lret
fcomip
jo
roll
xchg
xchg
lea
insl
mov
xchg
mov
mov
or
push
ds
inc
addr16
jecxz
dec
out
xor
gs
xlat
les
push
in
xlat
or
mov
cmp
add
adc
dec
arpl
in
movsl
icebp
jns
cmp
inc
mov
fndisi(8087
and
xor
fcmovb
push
inc
push
fstps
inc
cmp
mov
add
mov
jmp
push
sub
lret
sti
and
cmp
flds
in
mov
test
ja
bound
sbb
out
jo
push
lock
jle
scas
lock
icebp
cld
mov
push
cltd
jns
and
xchg
gs
adc
imul
jge
das
aam
gs
aas
loopne
cmp
aaa
adc
add
sbb
subl
jge
adc
cmp
sub
pop
sbb
rorl
mov
pusha
xorl
pop
ljmp
in
cmp
outsb
cltd
cmp
fisubrl
in
jbe
cli
lcall
inc
or
xor
jnp
and
push
sub
in
mov
sbb
scas
mov
jle
xor
or
xlat
xchg
and
arpl
test
mul
xchg
jno
subb
mov
sub
sbb
ljmp
add
outsb
jle
sbb
mov
jns
aaa
shl
mov
movsl
jne
xchg
pushf
int3
and
sub
bound
sti
cmpsl
sbb
sub
test
clc
jae
or
in
mov
fsubl
stos
idivl
xor
loop
in
xchg
stc
xor
mov
mov
notb
daa
adc
nop
cmp
ljmp
add
xor
cs
sahf
mov
adc
js
stos
push
sub
mov
xchg
mov
cmc
lret
mov
pusha
jae
push
xor
mov
clc
mov
test
or
ss
dec
js
adc
lock
scas
repnz
ljmp
ds
fstp
les
mov
pop
jne
inc
dec
les
push
xchg
mov
mov
pop
cmpsb
je
stos
xor
add
sti
jnp
stos
adc
push
out
jmp
pop
fwait
pusha
push
in
outsl
push
jnp
aas
out
aam
xchg
repnz
das
aas
sub
mov
sti
enter
cltd
or
jmp
sbb
pop
pop
mov
test
and
pop
mov
push
add
or
dec
jno
lock
cltd
std
jle
ror
mov
imull
mov
bound
xchg
mov
push
pop
and
pop
mov
lret
outsb
add
jmp
mov
jno
pop
mov
jecxz
les
fistps
adc
cmc
popf
ret
push
movsl
cmp
fs
cmpsb
ret
outsb
pop
test
jnp
jp
pop
mov
loop
lahf
xchg
push
inc
mov
icebp
into
insl
xchg
outsl
xor
test
mov
lea
mov
cltd
enter
dec
xor
pop
fisubl
or
arpl
out
das
cmp
xor
loopne
clc
mov
add
push
fs
jno
dec
aam
sbb
jg
divb
xor
mov
lods
or
push
cmpsl
dec
inc
dec
xor
out
mov
lds
loop
or
pop
arpl
nop
push
jae
sbb
outsl
test
insl
fld
mov
xor
xchg
ds
leave
mov
inc
xchg
jbe
mov
shl
and
dec
xchg
rorl
pop
fmul
in
jns
dec
shlb
sub
je
scas
add
or
dec
mov
adc
dec
sbb
push
and
stos
cmp
and
leave
je
cmp
rclb
push
ja
ret
pop
lods
push
insb
cld
sarb
ret
das
xlat
jne
add
jno
adcb
xor
stc
js
pusha
rclb
aam
mov
adc
testl
sahf
stos
pop
mov
idivl
adc
inc
cli
sub
sbb
jecxz
rcr
push
insb
test
dec
jae
pop
jg
mov
arpl
stos
fldenv
rorl
add
cld
repnz
popa
ds
shl
fsubr
jge
scas
gs
in
jmp
pop
fadd
jg
cmpsb
jg
sbb
jl
call
push
jnp
mov
bound
pop
lock
add
outsb
fwait
out
imul
ret
add
pop
out
pop
sbb
notl
wrmsr
dec
pop
cmp
mov
scas
push
aas
es
sub
ss
lcall
dec
stc
mov
aas
cmpsb
xor
inc
xor
popf
stc
jmp
push
push
or
aad
dec
jge
add
xlat
out
pop
pushf
sub
int3
mov
lods
dec
xlat
mov
insb
push
push
mov
sub
ret
sub
xchg
mov
cmp
add
mov
jmp
bound
in
inc
xchg
out
pop
ret
or
or
pushl
out
xlat
add
enterw
loope
std
and
ret
cld
aas
jnp
int3
xchg
jnp
mov
mov
stos
loop
cmp
and
popa
mov
xchg
dec
sub
sub
sar
sbb
sbb
dec
jge
xchg
jbe,pt
inc
int3
idivb
adc
or
jge
sar
out
call
data16
pop
add
or
fadds
js
jl
pushl
and
rcrb
aaa
rolb
push
pop
sbb
outsb
xchg
add
and
add
mov
sbb
rolb
and
loopne
mov
inc
or
inc
lods
inc
sub
push
push
cli
daa
jecxz
pop
and
and
jmp
xor
or
out
nop
or
cli
imul
mov
or
pop
sti
jmp
and
xor
negl
outsb
xchg
sub
outsl
js
cmc
loop
sbb
mov
sbb
cmp
xchg
out
inc
jp,pt
mov
repnz
iret
jns
notb
push
jmp
lock
je
jbe
loop
mulb
lret
xor
fiadds
and
pop
dec
mov
cld
mov
movsl
divl
or
les
jmp
addr16
imul
in
sbb
pop
mul
idiv
or
xchg
inc
cmpl
in
or
sbbb
jo
inc
fcom
cmp
insb
cmp
xlat
neg
xchg
cmp
and
popa
dec
loope
mov
mov
loope
nop
mov
mov
and
stos
push
loopne
cs
mov
das
push
mov
loope
scas
imul
pop
mov
imul
adc
sbb
and
iret
push
je
adc
or
mov
cld
push
jnp
repz
mov
stos
or
adc
mov
int3
stc
xchg
xor
inc
mov
mov
xor
outsl
mov
lods
fistps
stos
jp
push
jmp
inc
cmp
pushf
xor
loop
outsb
sahf
sub
dec
int3
pop
and
js
cmpsb
sahf
addr16
inc
mov
cmpsl
dec
jecxz
pop
jno
add
movsl
mov
dec
pop
and
inc
pop
int
or
sbb
imul
pop
fs
mov
jp
add
adc
scas
push
and
arpl
jle
cmpb
mov
in
and
insl
pusha
std
mov
push
mov
mov
loopne
add
out
nop
arpl
es
cmp
test
ja
loop
jnp
push
mov
ja
in
rorb
popf
push
cld
fldenv
loope
sti
cmp
ror
loop
outsl
stos
pop
mov
dec
jmp
inc
xchg
subl
lds
ds
add
outsl
lcall
or
add
cmp
xor
xor
test
and
or
push
jno
ljmp
xor
js
mov
pop
cmp
mov
xor
mov
cwtl
daa
and
aad
sbb
outsl
outsb
popf
push
dec
je
in
push
and
xchg
and
fdivrs
fcomps
cmp
inc
into
test
aaa
aaa
fcoml
lcall
dec
out
xlat
outsb
xchg
pop
insb
jae
popf
push
mov
fwait
dec
icebp
cmp
fiadds
dec
inc
adc
imul
push
pop
lret
test
push
inc
dec
add
dec
sti
or
notb
cld
imul
push
cli
daa
push
mov
inc
sub
cmp
xlat
dec
or
rclb
jae
mov
js
jge
push
hlt
jge
je
cmpsl
mov
mov
xchg
lret
ret
iret
in
insl
and
les
mov
sub
mov
sbb
mov
es
lahf
jne
sub
sub
clc
rcl
pop
or
pop
pop
movsb
pop
outsb
cli
mov
repz
outsb
dec
sub
mov
cmpsl
mov
adc
dec
add
ljmp
xchg
in
inc
adc
std
pusha
popa
sub
pop
test
mov
pop
es
sbbl
mov
cmp
or
bound
push
das
jns
and
xor
mov
lea
pop
fimull
mov
and
or
les
adc
cmc
sbb
adcb
test
xchg
push
insl
mov
aam
mov
push
xchg
mov
mov
push
daa
mov
into
xchg
dec
shl
nop
mov
mov
mov
xor
data16
shrl
mov
jg
mov
cmp
fcompl
call
lcall
leave
push
xchg
or
addr16
pop
loope
movsl
imul
add
out
add
mov
mov
sub
ljmp
mov
and
inc
cmpsb
sub
adc
in
or
out
jmp
xor
inc
xchg
jecxz
sub
adc
insl
xchg
xchg
mov
adc
or
xor
out
lcall
push
filds
xor
adc
add
popf
out
cmp
negl
out
fcompl
fimuls
scas
outsb
data16
cmp
inc
mov
cmp
mov
in
subb
ret
inc
xor
inc
adc
pop
scas
mov
mov
insl
and
sahf
adcb
les
or
popf
jle
iret
loopne
and
push
fstl
ja
or
adc
sahf
pushf
add
jb
lret
push
outsl
insb
lock
jno
mov
add
sbb
in
negb
nop
andb
add
icebp
movsl
bound
cmp
dec
mov
dec
clc
push
pop
std
dec
jl
xor
mov
cmp
dec
jns
nop
pop
repnz
push
in
nop
pop
sub
mov
loop
dec
dec
movsl
xchg
aam
pop
inc
cmp
cmp
jg
mov
mov
mov
mov
inc
dec
mov
adc
xor
mov
popf
mov
daa
lods
fistpl
into
mov
iret
popf
sub
popl
push
mov
inc
jno
push
andb
or
lcall
in
xor
loope
mov
jp
cmp
mov
outsl
or
adc
shl
es
adc
repnz
mov
inc
iret
pop
int3
addr16
pushf
imul
pop
dec
loop
outsl
fdivs
stc
sub
movsb
neg
cmp
aam
lcall
movsb
loop
leave
and
sub
loop
add
push
push
pop
leave
xchg
idiv
add
dec
addr16
and
dec
or
ljmp
and
call
cmp
and
jmp
jmp
jns
pop
insl
leave
push
nop
and
jge
aad
add
sub
jbe
fidivs
out
out
or
call
jmp
in
dec
jbe
jns
mov
insb
shl
mov
stos
push
inc
outsb
add
les
in
dec
stc
push
ljmp
jl
dec
outsb
dec
pushf
int3
xor
jecxz
rolb
rolb
call
adc
and
in
loopne
push
push
das
imul
dec
wrpkru
lret
cmpsl
fmul
fcoml
jp
cmp
fildll
mov
pop
dec
mov
xchg
out
fiadds
push
cli
lret
mov
cld
inc
xchg
mov
sbb
mov
inc
int3
mov
xchg
mov
mov
popa
test
scas
xlat
adc
push
sbb
or
sbb
add
push
sahf
xchg
adc
push
jg
add
or
mov
clc
and
xor
imul
cmpsl
xchg
fisubs
lret
mov
push
lcall
mov
mov
mov
jne
ficomps
rcrl
rcrb
dec
fidivrs
and
or
pop
mov
lret
push
scas
fwait
lret
xor
in
pusha
push
pop
sahf
leave
sbb
or
aad
jbe
sbb
push
andl
pop
cmp
mov
jne
repnz
ja
jno
ss
sub
xor
ffree
adc
mov
xchg
iret
jl
and
leave
adc
ss
dec
xor
call
jnp,pn
je
inc
push
adc
inc
in
cmpsb
out
lret
pusha
dec
jle
popa
cmpsb
inc
mov
repz
divl
xchg
pop
pop
clc
cltd
adc
aam
rolb
das
imul
pop
xor
pop
mov
or
sti
inc
cmc
push
pop
mov
sti
pop
fildl
lds
sub
test
inc
pop
jg
lahf
jle
sbb
mov
mov
xchg
cmpsl
repnz
cmp
cmp
pop
xlat
mov
and
pop
lret
dec
or
cmpsb
pop
xchg
jge
shll
mov
in
mov
add
or
test
pop
gs
push
in
and
sbb
nop
and
addl
push
outsl
stos
push
lods
js
decl
mov
jle
fcompl
leave
test
xchg
imul
push
dec
xchg
arpl
adc
jle
jge
push
mov
in
sbb
push
jns
mov
add
icebp
aad
xchg
mov
aaa
test
test
cwtl
jmp
push
pop
cmp
jns
imul
mov
mov
jmp
push
pop
cmp
jns
imul
test
test
cwtl
sub
leave
pop
sub
cmp
jns
orl
jecxz
mov
fnstcw
imul
cs
xlat
xchg
xchg
notl
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
gs
inc
inc
push
push
xchg
jb
pop
ja
sbb
in
cmc
test
aad
movsl
cmpsb
mov
xchg
xchg
jbe
inc
push
push
and
push
adc
test
fcmovnbe
movsl
cmpsb
test
jl
insb
jbe
inc
dec
push
cmp
sub
push
cld
fcom
stos
lcall
rcr
jecxz
xchg
or
sbb
inc
and
mov
les
push
mov
lods
mov
movsb
pop
in
mov
cmp
fidivs
push
pusha
pop
fcoml
cmc
movsw
cmp
lcall
cmp
jno
mov
mov
or
std
ret
pop
push
movsl
cmpsb
dec
test
cltd
gs
inc
jno
fisubl
xor
cli
out
adc
outsb
aad
jecxz
cmp
sub
mov
push
js
mov
sti
clc
mov
nop
mov
fisubl
sub
inc
in
xor
les
and
repz
test
jecxz
mov
inc
stos
and
in
aaa
xor
sbb
js
mov
pop
out
test
insb
jbe
inc
push
push
xor
and
push
cld
out
neg
int3
mov
xchg
movsl
and
and
push
dec
push
ja
arpl
lahf
mov
mov
movsl
lret
ror
testl
cmp
inc
and
sbb
mov
xchg
mov
repz
clc
add
sbb
sub
cmp
ss
out
test
aad
movsl
cmpsb
mov
test
jne
inc
inc
push
push
and
push
adc
test
aad
movsl
cmpsb
mov
test
pop
arpl
mov
xchg
push
and
push
shrb
pushl
nop
pop
mov
in
ja
jmp
cmpsb
mov
xadd
xchg
jo
xor
adc
idivl
xor
lea
mov
pop
mov
fildll
dec
pop
jge
addr16
js
gs
lret
mov
lret
jo
enter
adc
cmp
xchg
scas
outsl
inc
je
cli
sbb
push
cs
into
shll
mov
fisttpl
mov
ds
test
roll
fmuls
lcall
adc
pop
insb
cmpsl
or
jbe
cs
adc
into
pop
and
lcall
shrl
outsl
and
cmc
pop
jnp
jnp
pop
testb
sahf
scas
or
sbb
test
push
icebp
fidivs
cwtl
push
daa
sbb
stos
or
andb
jecxz
out
int
mov
jmp
imul
lahf
xor
scas
dec
fisttpl
mov
stos
outsl
sub
enter
jg
lahf
nop
or
lock
movsb
jne
loopne
xchg
in
cmp
pop
mul
scas
shrl
add
rcll
inc
sahf
dec
xchg
imul
adc
sbb
imul
inc
xor
cwtl
sbb
mov
pop
cmpsl
sbb
call
icebp
addr16
adc
mov
cmpsb
mov
ror
xchg
scas
bound
ss
adc
int
or
jnp
pop
and
xor
mov
roll
das
and
xor
jnp
pushf
or
lock
mov
std
jb
or
dec
ret
lods
xchg
adc
push
xorb
sub
aam
cmp
xchg
jne
out
adc
sahf
aad
jecxz
jb
mov
mov
repz
inc
ret
shlb
lods
xor
sub
xchg
jns
jp
int
dec
pop
cmp
mov
fcmovbe
dec
insb
imul
pop
pop
pusha
push
jl
adc
mov
inc
test
jmp
insl
jle,pt
popf
inc
daa
xor
cld
cmp
adc
scas
out
pop
push
pop
xchg
test
inc
inc
mov
cli
dec
leave
popa
mov
into
cltd
call
mov
or
ss
sub
call
mov
jo
or
sbb
mov
pop
jb
test
lret
cmp
jge
mov
and
mov
ds
or
mov
lock
insb
add
or
test
jecxz
xchg
fisubrl
xor
negb
jmp
popf
shrl
push
mov
fcmove
ss
mov
jb
adc
push
mov
push
xorb
dec
mov
inc
mov
in
mov
dec
pop
xor
jbe
stos
dec
jp
mov
sbb
mov
jmp
mov
adc
imul
xlat
lock
aad
mov
sub
sub
adc
shl
push
inc
push
mov
cmpsb
jg
orl
aas
aaa
out
out
mov
or
sub
jg
cmp
jnp
outsb
loopne
mov
repz
sti
and
sub
roll
lods
pop
push
lahf
call
or
insb
push
repz
jl
es
jle
popa
xlat
dec
xchg
ss
jge
jg
fsub
test
inc
add
sbb
add
ret
xlat
fidivl
pusha
loope
xchg
cwtl
scas
pop
add
sti
pop
push
fs
push
into
mov
sbb
push
add
adc
sahf
sbb
je
xchg
stos
xlat
mov
pushf
std
jno
push
jg
push
mov
mov
push
je
adc
xor
pop
sub
or
push
xchg
dec
mov
lods
cmc
test
aad
loope
sub
shrl
sub
shll
imul
sub
jge
dec
dec
adc
insb
js
out
aad
push
xchg
push
ss
jmp
mov
cmp
jp
and
cmpl
test
add
cwtl
mov
pop
lds
clc
lods
fnstenv
mov
dec
bound
pusha
sbb
into
mov
lret
mov
mov
xor
xor
dec
jo
test
loop
jp
fldenv
fists
cmc
loopne
mov
pushf
jo
ja
shl
int3
fidivrs
test
push
jb
xchg
push
ret
pop
ds
pop
int
add
cmpsl
enter
dec
lcall
push
lcall
loopne
jl
out
in
mov
xor
mov
and
adc
push
push
push
xor
inc
xchg
aad
xor
jge
mov
into
cmp
sub
pop
rorl
dec
aam
inc
jg
xchg
enter
jb
mov
vandnpd
mov
insb
subl
pop
loopne
into
icebp
clc
pop
insl
sbb
dec
fisttpll
lret
mov
xchg
out
push
out
inc
mov
push
repz
in
mov
jecxz
sahf
cmp
jmp
js
push
pop
mov
push
arpl
pop
sbb
cwtl
test
repz
adcb
outsb
cmpsb
bound
shlb
sub
ret
lods
in
je
fwait
data16
fdivrl
pop
sbb
mov
mov
movsb
add
or
insb
push
jns
jmp
scas
in
adc
mov
mov
adc
mov
xchg
pop
fstl
bound
ret
push
in
repz
mov
roll
mov
sbb
lods
fsubs
rcrl
rcl
mov
xchg
scas
repz
aad
and
pop
adc
inc
fists
insl
sti
mov
mov
shll
aad
adc
in
mov
orb
loop
jecxz
lret
or
faddp
fstpl
pop
and
aad
pushf
out
ljmp
jge
push
mov
out
jno
and
xchg
mov
mov
test
push
pop
adc
iret
pop
sbb
dec
dec
scas
push
mov
cmp
and
add
lcall
jnp
imul
jp
xchg
sub
sbb
test
inc
adc
push
jle
add
or
and
in
push
jae
sbb
sbb
pop
sbb
push
in
out
xor
adc
sbb
loopne
lds
mov
mov
gs
sub
push
lods
adc
add
int3
add
getsec
rolb
lret
shll
fs
jb
pop
xchg
icebp
xchg
or
clc
jle
xor
repz
xor
pop
repz
adc
pusha
dec
testl
cmpsb
cmp
add
mov
testl
call
cmp
adc
push
in
mov
lds
lret
jle
mov
inc
inc
cmp
inc
scas
pushf
fcmovne
int
and
imul
pop
push
cli
adc
nop
pop
inc
lcall
mov
mov
inc
xchg
sti
jnp
push
data16
sub
ja
fbstp
xchg
scas
iret
lahf
mov
ss
pop
enter
mov
cmpsb
sbbl
mov
adc
sub
es
lea
mov
add
ljmp
test
xor
dec
imulb
cmpsb
lods
or
fnstenv
sbbb
hlt
cli
lahf
add
out
pop
pop
sbb
pop
movsb
pop
out
add
sbb
cltd
sub
sbb
das
roll
mov
cltd
sti
mov
push
pop
inc
int
or
ret
imul
mov
lea
xor
and
and
int3
jno
dec
ficoml
and
ret
scas
test
cli
out
push
hlt
fs
aam
sub
movsl
dec
les
leave
enter
cmp
pop
nop
int3
xor
lea
lock
jbe
pop
cmp
and
outsl
xor
into
test
push
jecxz
idiv
call
sahf
sbb
mov
psubusb
xchg
mov
add
pop
andl
mov
sbb
sbbb
arpl
mov
call
xchg
fstl
pop
ret
pop
jge
aam
fimuls
orb
and
mov
out
ja
jmp
addr16
loope
jmp
push
xor
adc
jle
js
je
push
sub
scas
mov
pop
jne
push
ja
pop
scas
sbb
fimull
mov
cmp
jo
sahf
ja
pop
gs
call
decl
push
jge
shrl
cmpsb
jb
lahf
sbb
xchg
and
push
push
ss
sub
out
push
jle
cmc
fdivl
inc
addr16
xor
inc
out
fisubl
lahf
js
scas
jmp
xor
push
dec
test
mov
inc
mov
push
pop
cmpsl
mov
lret
jno
arpl
ret
xchg
sahf
pusha
aad
insl
cmp
gs
or
js
ljmp
xchg
inc
orl
pop
rorl
jecxz
daa
push
push
leave
xor
loopne
faddl
jge
decl
call
push
mov
fisubl
scas
test
sarb
icebp
cmpsb
cmp
pop
outsb
lods
mov
bndldx
dec
xor
dec
pop
mov
shrl
repnz
cmc
repz
cltd
jl
aad
pop
mov
test
xchg
test
cmp
dec
je
cmp
xor
inc
or
sahf
setb
das
adc
into
data16
lret
pop
ret
xchg
cmp
mov
push
mov
xchg
adc
cltd
mov
cld
and
pop
mov
add
pop
adc
and
test
sub
adc
out
lds
test
scas
sub
mov
pusha
sbb
jecxz
stos
mov
lea
stos
and
or
pop
pop
xor
cmp
lds
cmp
lds
push
mov
jl
push
adc
dec
mov
pop
jnp
jecxz
lcall
or
and
or
lea
xor
dec
jno
cltd
sbb
ja
dec
mov
jne
adc
in
lcall
rcrl
inc
and
cs
and
cmpsb
sub
dec
lret
xor
out
stc
adc
dec
and
cltd
and
jmp
hlt
cld
std
push
and
cmp
out
fcomps
mov
jae
std
jle
cmp
lret
xchg
fistps
xchg
pop
cli
xor
mov
int3
std
sub
sub
pop
outsl
dec
mov
mov
je
shrb
push
inc
lret
rep
pop
pop
testl
in
xlat
add
clc
or
xchg
orb
pop
push
sub
mov
fcmovbe
repz
addr16
sti
test
lods
out
add
imul
mov
mov
std
jb
sar
insb
push
pop
js
adc
rclb
xlat
nop
jmp
int
test
das
dec
xchg
imul
icebp
jns
pop
subps
cmp
lea
cs
mov
mov
jns
fcomp
xor
aaa
xor
mov
mov
data16
push
fisttpl
mov
sysret
cmpb
lock
mov
js
push
jb
gs
and
idivb
imul
push
inc
loope
mov
aad
xor
and
add
int
mov
push
shld
repnz
add
xor
pop
fsubrp
mov
adc
rep
ss
insl
xchg
mov
lds
mov
sbb
js
outsb
gs
xchg
outsb
dec
je
int3
or
cwtl
data16
lea
lock
stos
sahf
lret
outsl
das
push
jb
clc
adc
lret
inc
mov
leave
aam
add
mov
into
mov
outsb
test
sub
and
pop
test
test
cld
xchg
add
loope
jne
in
loop
in
call
cli
jne
cld
mov
and
adc
pusha
dec
mov
test
sarl
cmp
mov
jg
lds
or
js
or
mov
sub
clc
ret
cmp
loope
in
mov
cs
fsubs
test
mov
xchg
lods
inc
mov
xchg
xorb
cmp
sbb
fdivp
mov
and
pop
mov
xor
and
test
push
and
mov
mov
pusha
add
jbe
push
mov
and
mov
int3
and
mov
push
imul
setle
xchg
test
rcr
jmp
pop
dec
xor
sbb
cmp
cli
jno
sub
mov
not
sub
pop
lock
enter
push
inc
or
xchg
and
cmpsl
xchg
sbb
sub
and
sbb
pop
xchg
jl
add
push
xchg
dec
and
jae
jnp
js
mov
sarl
fcoml
add
cmpsl
in
xchg
dec
ret
jle
js
leave
mov
jp
push
leave
int
mov
hlt
pop
les
jo
dec
xchg
pop
cwtl
or
push
icebp
xchg
or
imul
inc
pop
mov
pop
jmp
sbb
sbb
pop
insl
shr
lahf
dec
loope
inc
mov
or
ret
lods
je
and
sub
jne
or
daa
fisttpll
mov
cwtl
in
push
outsb
adcl
inc
pop
adc
xor
xlat
into
inc
dec
jns
cld
scas
das
aaa
jb
dec
iret
jb
js
mov
fs
xchg
fisubl
and
xchg
xor
lahf
or
dec
push
lds
cli
cld
cltd
fwait
push
bound
dec
add
faddl
xor
and
decl
push
jl
mov
insl
test
mov
jb
mov
loopne
push
mov
sub
in
sub
mov
outsl
inc
push
push
mov
jns
adc
and
fstl
shlb
jecxz
aad
std
push
lods
dec
fcomip
xchg
pop
cld
imul
stos
ljmp
popa
push
jnp
scas
shrl
in
sbb
pop
fwait
push
mov
andl
jmp
sub
cli
sbb
dec
and
fs
outsb
xchg
roll
shrl
pop
test
mov
in
xlat
dec
mov
ret
or
mov
lods
add
sub
dec
lods
stos
or
hlt
pop
hlt
pop
fsubrp
lock
mov
cmp
add
cmp
pop
push
mov
sbb
mov
test
pop
fsub
mov
mov
int
dec
lret
push
notb
enter
and
push
lds
je
adc
loop
xor
sub
xor
addb
mov
adc
mov
fwait
daa
pop
sub
mov
rcrl
cmpsb
mov
leave
xchg
adc
daa
fisubs
sbb
loop
cld
pop
cmp
mov
xor
lret
imul
xchg
xchg
mov
mov
pop
pop
movsb
in
insl
data16
outsl
cmp
dec
lods
aad
in
repnz
ljmp
pusha
or
fstl
arpl
lods
mov
jne
bound
mov
call
sti
mov
mov
ds
fstps
lss
in
cltd
jbe
mov
insl
mov
daa
outsl
fisttpl
insb
push
mov
jnp
cwtl
fildl
jb
sub
or
xor
mov
inc
sbb
in
jl
jge
js
mov
mulb
mov
pop
fnstcw
add
outsl
xchg
add
mov
out
and
fcoml
into
daa
out
dec
mov
adc
sahf
add
dec
test
cmp
hlt
sub
sub
xchg
xchg
add
mov
cmc
jns
mov
pop
jo
push
les
rcrl
and
ds
xchg
je
or
scas
jp
in
icebp
pop
lds
jnp
imul
adc
cmc
bound
mov
dec
out
push
sbb
xchg
mov
push
or
inc
ret
aad
aaa
add
out
mov
mov
int
jg
leave
mov
sti
subb
testb
xchg
pusha
fxch
fwait
mov
inc
mov
pop
pop
lods
mov
pop
ljmp
shll
push
push
cli
js
jge
cmp
nop
cli
ftst
mov
pop
out
jno,pn
dec
in
lret
dec
movsb
or
imul
add
push
pop
push
loope
rcrb
out
in
mov
xor
sub
dec
pop
mov
pop
pop
pusha
xchg
inc
rcr
sahf
arpl
jp
addr16
cltd
and
and
add
jnp
jo
mov
scas
pushf
imul
sarb
cmc
lea
push
jno
push
xchg
xor
xchg
add
jle
aaa
or
sub
out
pop
cmp
cmp
xor
adc
push
scas
inc
xchg
adc
xchg
mov
adc
dec
push
or
push
and
mov
adc
fsts
mov
and
int
xchg
push
lea
jl
push
mov
in
mov
jno
mov
cmp
adc
aaa
sub
add
bound
and
pop
adc
jae
cmp
lahf
push
xchg
fcompl
jnp
push
add
ljmp
mov
mov
xor
and
fwait
fs
ss
rol
imul
fwait
and
mov
gs
aas
insl
jge
sarb
pop
cmc
dec
mov
push
sub
xchg
mov
jno
xor
out
call
sbb
dec
dec
xor
daa
jp
ljmp
xchg
push
ror
adc
adc
ljmp
cld
jle
movsl
scas
loopne
in
xlat
outsl
adcl
and
rol
f2xm1
inc
mov
xor
fisttpll
sub
out
pop
or
shll
xchg
mov
push
xchg
mov
pop
insl
or
add
jns
sub
sub
jnp
es
add
test
test
mov
mov
mov
lahf
hlt
inc
inc
and
mov
pop
and
ss
jns
int
xor
xor
push
aas
fisubrs
jo
pusha
sub
add
scas
xor
movsl
push
ja
test
cli
lods
enter
jg
mov
jg
and
mulb
dec
bound
jge
adc
mov
aad
mov
in
cmc
pop
or
jmp
cmp
cmp
mov
xor
mov
jle
push
mov
js
cmp
mov
int
daa
pop
in
aam
or
and
pop
hlt
data16
xor
pop
xchg
pop
pop
sbb
add
push
lock
or
repz
xchg
xchg
sub
in
std
or
je
dec
stos
rolb
jnp
fstpl
pushf
lods
cmp
push
cmp
call
push
sbb
jns
push
xor
adc
add
dec
dec
inc
xchg
imul
xor
adc
mov
sbb
test
es
js
in
shr
sti
xor
test
cmp
rcr
sub
ret
ss
dec
dec
popa
pusha
mov
pusha
mov
xchg
cmp
mov
adc
and
pusha
sub
loop
ret
repz
lea
ret
jb
sbb
pop
mov
test
clc
leave
mov
insl
dec
and
mov
nop
xchg
aad
push
cwtl
push
dec
rcr
jl
gs
pop
mov
and
cwtl
pop
int3
pusha
inc
mov
mov
cmpb
and
outsb
loopne
addps
mov
cmpsl
or
adc
clc
mov
test
jnp
mov
pusha
or
lret
adc
xchg
cmp
out
les
clc
rcr
sub
xchg
dec
inc
sbb
dec
lahf
pop
sahf
cs
in
in
mov
iret
dec
xor
pop
out
leave
stos
fadd
punpckhbw
mov
cmp
jmp
bound
out
fldl
cmp
pop
test
lods
push
push
mov
lcall
ret
js
mov
inc
and
mov
adc
leave
inc
jnp
sti
in
das
call
sub
mov
shrb
xchg
nop
xchg
pushl
aad
sub
mov
jb
push
shr
inc
sbb
jmp
adc
gs
mov
cwtl
add
out
into
and
scas
jbe
inc
xchg
aaa
test
dec
cmpsb
mov
dec
fucomp
adc
push
add
sub
lods
es
push
fwait
add
pusha
test
or
pop
lods
enter
xchg
jno
mov
xchg
push
shrb
enter
enter
imul
stos
xor
je
jle
into
dec
mov
outsl
aad
xor
sti
sbb
adc
push
jmp
fcmovne
vcvtps2dq
aam
dec
sub
mov
mov
sub
test
jg
push
loop
mov
rcr
pop
daa
mov
inc
add
and
test
add
mov
in
scas
pop
arpl
mov
fnstsw
ja
mov
stos
xor
daa
xlat
add
std
aas
inc
dec
cmp
ds
xor
push
and
push
adc
test
aad
movsl
cmpsb
mov
test
jne
inc
inc
push
push
and
push
adc
test
aad
movsl
cmpsb
mov
test
jne
inc
inc
push
push
and
pop
adc
test
cmpsl
mov
test
ja
inc
inc
push
push
daa
es
jmp
outsl
aad
shrb
cmp
imul
xlat
jae
and
pop
addr16
ja
inc
rcll
xchg
jle
mov
notl
arpl
jae
add
sbb
es
repz
lods
aaa
xchg
pop
mov
notl
cmpsl
xor
add
ja
xorb
inc
rcrb
daa
sarl
xchg
pop
notl
mov
xchg
sub
xchg
ljmp
je
dec
mov
mov
clc
mov
jp
mov
xchg
mov
fsub
int3
adc
das
push
sbb
mov
movaps
bound
testb
cmp
ljmp
daa
ret
adc
test
cltd
jo
outsl
test
je
inc
notl
cmp
pop
fwait
and
xchg
mov
inc
sbb
repnz
xchg
fs
pop
pop
sbb
scas
xchg
sahf
ret
xor
iret
pavgb
test
add
je
pop
xchg
mov
push
mov
jg
push
xor
xor
aaa
push
dec
push
fnstcw
pop
xlat
jae
add
mov
inc
loope
iret
daa
mov
pop
adcl
cmpsb
sarb
push
bnd
add
sub
nop
push
les
push
arpl
mov
adc
inc
xchg
add
mov
ret
insb
int3
inc
xchg
push
or
xchg
xor
mov
maskmovq
negl
out
mov
xchg
xchg
xor
ja
inc
jecxz
repz
xorl
pop
mov
notl
arpl
jae
add
xor
ja
inc
jecxz
repz
xorl
pop
mov
repnz
aam
mov
or
mov
test
es
sub
sti
mov
setl
test
test
clc
add
pop
stos
test
dec
sbb
push
icebp
add
mov
inc
xchg
out
lock
imul
ss
mov
cltd
mov
mov
push
pop
mov
aad
fs
adcb
pop
dec
insl
aam
adc
bound
fldl
in
xchg
rorb
in
les
mov
add
dec
adc
je
in
fwait
out
mov
insb
ljmp
movsl
mov
pop
mov
lods
hlt
hlt
adc
mov
fdivrl
add
cs
mov
gs
sti
pushf
cltd
and
repz
insb
clc
push
xchg
fwait
and
add
add
fstcw
mov
loope
loop
lcall
daa
pop
mov
dec
aas
stc
pop
rcrb
mov
ret
lods
test
flds
jmp
mov
pushf
jl
xor
dec
add
adc
push
jbe
aam
push
ret
pop
or
xchg
adc
sub
jns
jns
xchg
jecxz
ret
and
jmp
push
lea
adc
or
sti
jg
jbe
mov
popa
add
jbe
push
inc
add
or
or
mov
dec
dec
fistl
icebp
mov
jmp
cmp
xor
sbb
mov
jo
out
aaa
mov
sub
fmul
adc
cli
sub
mov
dec
cmp
loope
daa
repz
push
sub
div
inc
fidivrl
cmp
out
jge
int3
or
pop
push
popa
ret
and
test
or
mov
popa
aam
ljmp
rcr
adc
mov
bound
das
xor
hlt
mov
inc
loopne
leave
sbb
mov
insb
mov
lock
xor
mov
cltd
push
scas
es
arpl
or
push
filds
inc
addr16
icebp
adc
mov
push
outsb
and
or
lahf
jl
xor
or
push
lret
add
es
adc
lock
sbb
jb
sbb
mov
xor
pop
sub
push
out
jp
jl
jbe
clc
dec
test
nop
inc
mov
lds
jp
jnp
xchg
test
test
aaa
xchg
jle
mov
mov
xchg
ss
adc
adc
mov
adc
addl
sahf
sbb
push
pop
aad
lods
les
shlb
push
outsl
lcall
popf
jbe
mov
int
jo
jns
aas
jecxz
jmp
mov
roll
push
dec
push
xor
out
fiaddl
int
mov
mov
ja
test
adc
push
push
call
int
fmull
mov
fs
jb
xchg
push
int3
aaa
imul
inc
or
and
push
inc
fdivrs
addw
mov
push
int3
repnz
stos
inc
aam
push
test
jns
xor
mov
aam
aas
les
cmpsb
sti
popa
and
xchg
cld
or
pop
hlt
ss
fs
inc
insl
sbb
test
ret
jge
mov
out
cwtl
or
mov
pop
sbb
pop
jl
mov
mov
mov
dec
enter
sbb
sub
xor
mov
add
mov
mov
loope
sub
push
dec
into
xchg
aas
push
clc
fsubrl
mov
jo
aaa
adc
shrb
mov
adc
and
inc
dec
mov
xor
mov
xor
imul
aaa
pop
js
cmp
lds
in
call
sbb
mov
ficoml
test
push
rclb
test
aad
mov
add
push
dec
scas
adc
stc
out
les
pushf
push
stc
push
xor
jmp
fwait
clc
test
aas
push
cmpb
sub
test
or
mov
popf
imul
inc
jnp
dec
mov
ret
test
outsb
loopne
imul
mov
dec
sahf
add
mov
mov
push
xor
pop
and
mov
and
mov
mov
mov
jo
mov
add
test
cmp
jecxz
ljmp
mov
mov
les
cmp
cmp
sti
mov
ss
out
adc
and
jbe
or
mov
adc
out
fisubs
jg
iret
icebp
xlat
mov
sub
into
sbb
push
dec
cmp
and
and
insb
jne
fisubrs
int3
pushf
dec
lret
test
push
xchg
mov
addr16
inc
xchg
and
mov
std
andb
jp
mov
jbe
pop
sbb
int
test
dec
jmp
sub
daa
pop
sbb
or
mov
rcrb
int3
pushf
shll
xchg
pusha
fstpl
pop
lcall
movsl
les
xchg
scas
mov
dec
sbb
mov
pop
dec
out
das
cmp
and
aaa
cmp
pop
and
das
adc
outsl
dec
add
adc
scas
mov
xchg
repz
flds
and
shlb
insl
rcr
imul
dec
or
scas
aaa
mov
push
imul
inc
js
adcl
shll
test
das
sub
mov
fwait
sar
xor
shrl
out
adc
aad
push
sahf
mov
sbb
rcll
adc
push
mov
fmull
mov
ljmp
adcb
inc
lret
mov
mov
pusha
icebp
push
sbb
stos
orb
xor
sub
dec
add
roll
les
push
out
pushf
clc
sbb
pop
dec
psubsb
outsl
faddp
mov
ljmp
push
dec
lahf
push
jbe
push
adc
inc
out
xchg
jp
int3
outsb
test
rcrb
shll
insb
cmc
das
jne
cmp
repnz
xor
into
mov
mov
aas
sub
mov
cmpsl
cltd
ss
lea
shll
push
push
mov
jge
lods
sbb
xchg
xlat
and
push
sbb
lods
loop
sbb
js
adc
add
cld
mov
sbb
scas
xor
or
sub
out
push
cmp
cmpsl
out
fisubs
xor
popl
insb
pop
es
add
and
jmp
or
pop
cmp
mov
jle
xor
pop
push
int3
call
add
mov
js
mov
pop
jmp
sbb
fmuls
add
adc
inc
push
mov
or
imul
lcall
push
leave
mov
rclb
mov
dec
cmp
lret
lahf
push
das
jbe
adc
and
call
pop
enter
pop
aaa
movsb
jb
inc
cmp
js
xor
adc
or
mov
pusha
mov
imul
cmp
les
adc
jne
push
mov
cmpsb
outsb
mov
stos
cmp
in
test
out
fisubl
mov
adc
fbld
lahf
out
pop
mov
mov
clc
xor
shl
pop
subb
insb
scas
xchg
loope
mov
je
sub
adc
jecxz
in
mov
pop
lcall
sbb
sub
add
add
mov
testb
inc
addr16
or
mov
cmp
xchg
cmc
mov
jne
bound
imul
mov
lahf
jl
push
xorb
out
push
ds
dec
mov
je
rclb
add
cmp
test
gs
inc
aaa
sbb
in
lods
cmp
outsl
inc
popa
mov
jo
cmp
fcomps
aam
cmp
pop
jge
mov
jne
mov
mov
xchg
dec
outsb
stos
xchg
xchg
or
xchg
test
iret
push
push
jle
movsb
rcl
in
aas
pop
dec
adc
dec
icebp
jecxz
fcom
xorl
idivl
inc
add
mov
sar
shrl
enter
je
pop
sarb
push
mov
cmpsb
jnp
jnp
ja
dec
mov
cwtl
pop
test
xor
push
out
in
shrl
inc
dec
inc
stos
nop
jae
pop
cwtl
xor
out
xchg
dec
in
add
stos
scas
loop
pushf
lods
jnp
testb
fnstenv
mov
adc
test
push
rclb
cmc
sbbl
xor
loope,pt
inc
repz
adc
mov
cmpsl
pop
ret
mov
pop
outsb
stos
sbb
pop
adc
mov
and
outsl
jmp
mov
sahf
mov
ror
pop
mov
dec
sti
lahf
shlb
lods
mov
stos
scas
mov
fs
fs
jp
das
and
cs
test
push
cmp
mov
xcrypt-cfb
cmpsl
addr16
cli
shll
mov
stc
loopne
outsl
jg
sub
push
add
ljmp
and
andl
sub
dec
test
jle
inc
pop
iret
xlat
mov
pop
xchg
xchg
nop
rcl
pushf
or
jno
arpl
xor
rcrl
xchg
sub
mov
nop
daa
cmp
les
ja
add
xor
data16
or
pop
dec
xchg
ds
mov
push
aas
out
mov
ja
add
jecxz
xor
sub
nop
and
insl
mov
xor
xor
fildl
scas
sbb
adc
dec
inc
push
push
jne
fldenv
adc
pushf
sarl
mov
loope
xchg
dec
int
push
int
jge
adc
js
sbbl
sbb
mov
in
pop
adc
lret
loop
out
lcall
pop
insl
and
and
clc
jb
pop
mov
fs
std
je
mov
cmp
add
push
mov
insl
xchg
es
or
adc
sbb
enter
mov
jecxz
rol
push
dec
repz
fwait
cmc
jnp
outsb
stc
fidivl
pop
sbb
mov
rorl
mov
jns
mov
outsl
push
inc
sub
sub
arpl
inc
mov
xchg
mov
movsb
adc
jno
mov
sti
cs
flds
adc
push
mov
enter
negl
popa
faddl
and
stc
cwtl
adc
sub
cld
dec
mov
rcrb
jmp
and
jns
jb
fmulp
or
stos
xchg
pop
sahf
leave
out
bound
mov
dec
in
jae
inc
js
repnz
cmp
outsb
stos
mov
push
dec
loopne
test
ja
sarb
cmp
ret
push
ret
popf
lahf
cs
pop
sahf
nopl
dec
es
cmp
push
dec
movsl
xchg
mov
and
test
fdivl
es
lret
lret
stos
dec
daa
xor
inc
les
iret
and
adc
inc
dec
mov
insb
lret
xchg
jmp
or
scas
js
jl
aam
dec
movsl
dec
das
adc
popl
or
and
xor
and
mov
movsb
sbb
loopne
call
inc
pop
mov
jo
stos
pop
mov
xchg
aad
jae
mov
sahf
sub
jbe
push
sub
cmpsb
sbbl
aam
dec
mov
adc
sub
cmp
shll
das
pop
xchg
xchg
sbb
mov
mov
cmp
jbe
fidivrl
sub
mov
fdiv
xchg
mov
adc
cld
pop
cmpb
rorl
fmuls
out
dec
pop
sub
ret
inc
jmp
xor
lahf
xchg
sub
addb
lret
lods
fnstsw
cmp
push
jg,pn
add
pop
adc
pop
sub
pop
lcall
mov
mov
scas
pop
xor
sti
mov
cmp
mov
pop
inc
mov
into
pop
mov
in
add
in
in
or
movsl
outsb
pushf
in
adc
dec
cli
aad
outsb
outsb
adc
mov
xchg
cmp
fmull
mov
movsl
and
push
sbb
movsl
test
cld
addb
movl
loop
cmp
test
mov
pushf
ds
xchg
cmpsl
mov
push
gs
inc
inc
fsubr
and
push
clc
xor
std
aad
push
aam
in
inc
pshufw
fistpll
iret
mov
adc
mov
cmp
fistpll
xchg
test
scas
and
sbb
sbb
xlat
xchg
jg
ds
imul
ret
add
dec
jne
pop
pop
xchg
ljmp
xchg
test
aaa
test
inc
mov
daa
pop
or
decl
aas
add
mov
loop
cwtl
mov
xchg
sbb
cmp
mov
lcall
outsb
fsubr
inc
add
fsub
jmp
and
jb
dec
dec
xchg
aas
sbb
xor
out
adc
fmulp
push
or
aas
mov
das
setbe
bound
std
xchg
mov
daa
jmp
enter
inc
sub
adc
insl
stos
out
scas
ret
icebp
inc
pop
pop
scas
rcll
hlt
out
xor
stos
jecxz
lds
sbb
test
inc
hlt
test
xor
or
imul
dec
push
pusha
das
fdivl
xor
je
cmp
popf
scas
aad
aaa
mov
mov
jg
jne
xor
pop
dec
in
cmp
jae
mov
xor
push
pop
jne
cmp
lods
xor
push
bound
mov
iret
sti
imul
sbb
fwait
cltd
cmp
push
repnz
cmp
sbb
icebp
ret
pushf
push
add
dec
dec
idivb
sbb
fimuls
movsb
psllw
pop
mov
jle
jp
out
add
xchg
add
ljmp
pop
mov
add
mov
test
pop
idivl
pop
and
sbb
es
or
or
lods
popf
inc
xchg
shll
loopne
outsb
fmull
mov
mov
flds
xor
mov
ja
push
mov
xor
xchg
push
enter
jns
leave
lea
or
sub
ret
dec
sbb
les
aad
cld
into
mov
sub
push
xchg
jbe
enter
inc
daa
int3
cwtl
jno
inc
push
andl
push
clc
mov
mov
lret
int
rorb
setle
inc
aad
mov
rcll
pop
jo
mov
fs
jmp
xchg
pop
fisttps
mov
xchg
ds
inc
push
adc
stos
xor
xchg
jb
decb
bound
cs
cwtl
fldcw
add
repz
mov
imul
scas
outsb
add
mov
mov
and
sub
push
lret
pusha
xchg
cmc
xor
cmp
pop
push
jns
and
jl
movsb
fldenv
and
sbb
cmp
cmpsl
dec
sub
dec
sti
xchg
inc
js
insb
add
pop
add
and
xchg
ret
int
in
inc
es
add
sbb
loope
cmpsl
aam
jg
leave
shl
ret
aas
sub
int3
inc
repz
out
test
push
leave
xchg
add
pop
cmpl
push
popf
pusha
lods
nop
insb
pop
cmp
xchg
mov
adc
dec
push
sub
ret
and
add
sbb
mov
pop
inc
inc
cmp
fcoml
cmpsl
push
das
xchg
dec
inc
pop
and
jne
mov
sub
sbb
int3
cmpsl
adc
cmp
lcall
sub
std
or
popa
pusha
mov
out
pop
xchg
mov
clc
scas
sbb
sub
fsubrs
mov
ja
sarl
jge
rclb
call
xor
mov
imul
xchg
cmp
mov
int3
xchg
xchg
in
fimull
sub
popa
xor
mov
jb
jg
mov
rcll
js
pushf
sti
mov
pop
push
stos
and
fidivrs
adc
pop
stos
jg
aam
push
pop
es
adc
xchg
jo
ficomps
cmp
shrl
sub
push
dec
xor
sub
leave
xchg
sub
add
xchg
out
add
inc
dec
out
jae
and
cmpl
push
mov
xor
out
cmp
imul
pop
jmp
popa
fcmovnbe
clc
jmp
es
jmp
shl
cmpsb
xchg
subb
outsb
inc
cmp
jo
jnp
and
add
imul
jns
int3
ficoml
mov
popa
nop
scas
out
rcrb
pop
mov
mov
std
push
mov
daa
jno
andb
cmp
dec
in
sbb
cmc
out
xlat
sub
aam
out
and
push
or
mov
xchg
js
mov
movsl
push
in
push
and
pusha
inc
cmp
stos
or
and
and
shlb
pop
clc
and
ljmp
imul
xor
mov
stc
inc
pop
sbb
inc
mov
rorb
hlt
mov
sbbb
cld
cmp
aam
jns
sub
ror
jmp
hlt
jne
out
out
jmp
call
bound
xchg
int3
in
loop
or
mov
lret
lret
sarb
mov
adc
cmp
inc
cld
rclb
or
inc
xor
aaa
ja
sub
dec
pop
movsl
dec
jo
add
repnz
dec
loope
repnz
test
inc
dec
in
mov
mov
mov
sbbb
lret
cmp
sbb
inc
int
dec
xchg
xchg
xchg
push
jae
sbb
sbb
lret
jl
repz
mov
shlb
int
and
add
push
or
addr16
movsl
cmp
jnp
sahf
test
ja
lea
test
repz
movsb
mov
cs
inc
aam
jo
jo
cmp
inc
in
cmp
sub
popa
ret
inc
imul
jge
stos
movsb
and
cmp
sahf
int
sub
cmp
cs
in
push
mov
push
lahf
test
fs
adc
call
adc
in
jmp
xlat
mov
add
add
pop
dec
sbb
mov
lods
push
sbb
xchg
sub
mov
push
mov
gs
xorb
in
and
inc
test
mov
aaa
xchg
dec
push
dec
pop
aaa
xor
scas
inc
pop
xchg
adc
scas
or
stos
adc
lock
xchg
test
inc
mov
jns
dec
adc
call
ss
dec
shrl
and
and
jmp
and
scas
and
cmovo
inc
xchg
ret
or
pop
aas
push
mov
pushf
bound
fbld
cmp
ds
and
dec
inc
js
fiadds
sbb
adc
lret
cmp
outsb
push
cmp
jge
int3
cli
mov
outsl
mov
and
inc
cwtl
push
mov
scas
xchg
sti
xchg
sub
sub
ret
lods
ror
mov
in
sbb
dec
adc
ret
sub
hlt
xchg
mov
fwait
pop
scas
arpl
int
mov
fwait
hlt
out
lret
in
dec
add
or
dec
cmpsl
nop
push
inc
jb
out
fadds
fistl
aad
or
lods
out
lods
adc
jl
out
cmpsl
test
jae
fiaddl
cmp
xorl
lods
adc
lock
dec
xchg
jnp
mov
push
insb
loope
dec
push
and
gs
xchg
cltd
pop
push
pop
pop
jmp
andb
popa
adc
jbe
popa
adc
je
xor
sub
adc
fidivl
pop
insb
inc
push
adc
clc
imul
mov
or
xchg
popf
push
cmpsl
in
xchg
mov
mov
sarl
outsb
cmc
sub
pop
xchg
push
movsl
insl
jl
je
sbb
dec
adc
pop
lock
mov
sbb
xchg
xor
add
jmp
mov
aas
mov
or
ficompl
xchg
jno
int3
mov
shl
lods
mov
xchg
rclb
sub
sbb
mov
adc
int3
jge
sbb
cmp
lods
pop
fisubrs
lock
sub
das
mov
cmp
jp
fisttpl
mov
cmp
mov
bound
mov
test
data16
outsl
or
pop
daa
mov
cmp
shr
lret
sbb
cmpl
hlt
jnp
add
sub
fisttpll
cmc
pop
in
jns
pop
cmp
push
xor
mov
mov
cmp
ljmp
push
inc
cmp
jl
in
std
pop
jo
aas
mov
mov
jmp
dec
mov
imul
ret
mov
ja
ds
into
les
inc
add
pop
push
pop
sbb
push
adc
lcall
jle
cmc
js
pop
aam
repz
scas
shl
movsb
addl
divl
and
sub
rcll
data16
jae
add
xor
ja
inc
jecxz
repz
xorl
pop
mov
notl
arpl
jae
add
xor
ja
inc
jecxz
repz
xorl
pop
mov
negl
jnp
ja
add
xor
ja
inc
jecxz
cli
daa
xchg
xchg
pop
stos
push
push
out
divb
cmpsl
add
repz
jns
jecxz
test
mov
lret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
imul
popf
pusha
ret
dec
insl
inc
cmp
push
add
pop
add
add
push
pop
add
cld
add
push
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
loope
imul
nop
add
add
add
add
add
loope
sbb
jne
sub
jo
loope
daa
add
add
es
add
sub
loopne
in
push
add
sbb
test
dec
add
test
add
sub
jnp
jge
jno
pop
add
add
jo
mov
add
add
adc
add
add
push
add
cld
add
add
add
test
add
add
add
add
add
rolb
add
dec
add
xchg
xor
roll
add
push
add
add
add
add
add
add
and
roll
push
add
add
sbb
bound
adc
add
add
lret
add
add
add
jae
loope
inc
add
add
add
add
add
aas
add
add
add
add
add
add
sbb
push
add
add
add
add
add
add
push
add
add
adc
push
add
add
out
add
add
sbb
roll
push
add
jge
jno
inc
add
add
add
xor
add
test
sbb
add
add
and
mov
lods
add
and
mov
inc
add
add
add
in
push
add
add
inc
add
add
add
add
add
add
add
add
jl
enter
popl
pop
add
add
adc
add
add
and
sbb
sub
xor
add
push
add
sub
in
nop
add
add
lock
add
add
add
scas
add
add
fwait
add
sub
add
imul
inc
add
add
add
jge
cmp
in
and
jae
int
repz
add
add
add
xor
add
bound
xor
cmp
inc
add
add
fldl
push
add
add
jae
test
add
add
jge
add
add
add
add
add
add
add
add
add
add
add
and
or
insb
add
xor
cmp
test
mov
mov
add
adc
inc
add
push
add
add
sub
add
add
add
add
add
or
mov
add
add
add
add
adc
imul
lldt
add
add
imul
fildl
verw
imul
add
add
add
push
add
add
add
add
add
add
push
add
add
add
mov
add
add
aad
cltd
add
add
add
add
out
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
push
add
add
dec
add
outsl
add
add
loope
sub
dec
adc
ret
add
sub
loope
loop
ja
ja
add
inc
hlt
inc
ljmp
xor
adcb
movsl
or
sbb
fbstp
jno
aas
aaa
test
mov
outsb
dec
mov
cmp
cwtl
lds
ljmp
push
into
pop
jo
mov
addr16
lea
fcompp
adc
call
jns
loop
mov
lock
inc
inc
cmp
scas
push
add
mov
je
pop
push
adc
ss
popf
stos
insb
mov
sub
mov
push
inc
pop
mov
or
ret
push
cltd
cmc
pop
cmpsb
sahf
fidivrs
jnp
mov
adc
repz
sahf
jmp
pop
cli
xchg
xchg
xor
inc
repz
pop
mov
xchg
fwait
jns
cwtl
and
pop
inc
mov
sbbl
imul
xorb
jl
add
inc
cmpsl
gs
pop
jmp
adc
gs
xor
xchg
mov
mov
xlat
push
hlt
jno
cli
sbb
lea
xor
sub
mov
lret
bound
jno
cmp
xchg
leave
lret
cwtl
pop
aas
xchg
popa
fwait
ljmp
add
movsb
fdivl
jne
fwait
xlat
jmp
add
lret
pushf
sti
lret
aad
jle
movsb
popa
lods
pop
in
inc
xor
out
sbb
mov
cmc
push
int
xchg
lea
mov
mov
pop
icebp
dec
xchg
aaa
push
rcll
into
pop
ja
jae
or
cmpb
cli
inc
mov
ret
pop
and
xor
lock
lahf
mov
loopne
repz
test
pop
outsb
icebp
mov
in
adc
loop
mov
mov
xor
cmpsb
icebp
gs
aaa
inc
sub
xor
pop
int
mov
rclb
dec
push
outsb
cmp
pop
arpl
das
fdivs
daa
icebp
and
jg
jg
xchg
or
lret
xchg
popa
std
jg
addr16
sub
push
or
pushl
inc
shll
insb
out
push
sbb
loop
test
stc
add
and
scas
cwtl
push
mov
adc
int3
mov
push
jae
adc
mov
int3
xor
cld
arpl
jbe
mov
inc
jl
mov
sbb
cmp
iret
push
popf
push
pop
mov
mov
mov
ret
push
sbb
push
jmp
outsb
iret
mov
iret
push
adc
jno
xchg
fcmovnu
stc
test
shr
jne
cmp
cmc
mov
loop
sar
sub
out
xlat
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
