call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fistpl
dec
mov
cmpsb
insl
fcoms
outsb
sbbb
int
std
es
push
popf
inc
lea
lods
sahf
pop
xchg
jge
insl
sbb
out
inc
fldl
int
std
es
push
icebp
and
dec
pop
push
dec
xor
insl
sbb
push
sub
push
popl
jbe
sbb
add
adc
add
adc
orl
mov
cmpsb
and
xor
xchg
fadds
popf
xor
push
repnz
call
fnsave
sti
xor
call
xlat
inc
idivl
xchg
inc
mov
imul
lea
mov
inc
leave
movsb
fdivrs
test
cmp
lret
push
repz
mov
in
add
push
xor
jns
or
arpl
jnp
dec
sub
inc
test
and
leave
add
lea
mov
xchg
dec
insl
add
jae
pop
push
aaa
add
inc
fidivs
mov
xchg
jge
insl
sbb
pop
sub
out
std
cmp
ss
pop
lea
add
in
lock
jge
insl
mov
jnp
jns
movsb
inc
int3
cbtw
inc
cltd
aas
fisubrs
call
xchg
cmp
sub
sbb
mov
push
xchg
dec
cs
inc
mov
scas
dec
mov
jmp
ret
mov
movntq
xchg
xor
or
push
fldl
int
std
es
push
popf
inc
lea
lods
xchg
pop
xchg
jge
insl
sbb
out
push
fldl
int
std
es
push
popf
inc
lea
lods
xchg
pop
inc
and
lcall
outsl
push
xor
push
adc
aad
sbb
aad
addl
jae
xor
lret
add
addl
je
xchg
addr16
loopne
loope
mov
jl
adc
mov
cmp
and
in
aad
decb
std
or
and
xchg
jnp
xor
sbb
sbb
rolb
aas
out
push
cmp
icebp
pop
mov
test
ss
xchg
sbb
outsb
scas
ds
test
inc
rorb
jp
cmp
cmp
jmp
mov
jbe
inc
or
pop
aam
pop
test
in
fstpl
pop
pop
js
sub
movsb
jle
mov
shlb
cltd
imul
push
sarl
xlat
ljmp
xor
jb
cmc
lock
sarl
xchg
add
out
xor
or
fisubrs
jne
jnp
push
sub
add
mov
test
sbb
jecxz
je
xchg
repz
xor
push
jp
inc
add
dec
in
ss
jne
and
hlt
mov
jge
shlb
mov
mov
sbb
shl
jb
aaa
loope
popa
out
jmp
jle
xlat
add
lds
pop
stc
inc
lea
dec
sbb
dec
fldcw
rol
in
mov
mov
cmp
pusha
mov
and
cmp
sub
mov
lock
hlt
decl
in
push
inc
cmpsb
sbb
inc
jnp
and
ret
mov
das
dec
int3
or
cmp
ss
nop
in
lea
out
mov
pop
pop
out
cmpsl
mov
mov
xchg
cltd
ss
pop
mov
sti
mov
xchg
add
mov
mov
frstor
jae
inc
add
push
jne
testl
rcll
mov
cmp
push
popf
jae
cmpsb
dec
xlat
cwtl
test
dec
sbbb
push
out
xchg
fbstp
mov
stos
cmp
or
in
in
faddl
sahf
cs
cmpsb
or
lahf
xor
push
dec
add
mov
je
pushf
fdivrs
cmp
mov
cmp
in
dec
fmull
mov
pop
lcall
dec
jns
insl
out
outsb
pop
inc
clc
imul
and
dec
popa
negb
sarb
lds
xor
mov
cli
out
add
adc
push
mov
and
add
add
insb
decb
out
jge
inc
adc
sbb
aad
or
pop
or
jge
dec
addr16
xchg
aad
mov
push
iret
aaa
pop
cli
mov
mov
push
and
or
fcomps
cmp
cld
xchg
mov
add
jecxz
cmp
int
ljmp
inc
adc
inc
mov
mov
sub
outsb
jae
test
pop
test
cmp
pop
pop
pop
fnstenv
sbb
jns
in
cld
sub
test
dec
rcll
sbb
cld
cmp
pop
lds
xchg
into
out
adc
jmp
xor
push
ficoml
loopne
cltd
repz
or
outsl
jno
popf
es
pop
and
pop
push
divb
lock
pop
dec
adc
stc
sbb
pop
addr16
mov
popa
lcall
mov
popa
mov
mov
icebp
ja
bound
pop
loop
push
out
push
xor
in
rcrb
sbb
mov
sub
xlat
test
scas
pop
mov
inc
push
mov
out
xor
sbb
pop
mov
push
push
std
fs
jns
xor
lods
push
push
les
rcr
inc
fnstsw
fdivl
adc
shr
gs
inc
lahf
lods
and
push
mov
and
insb
outsb
ret
add
cld
call
push
pop
add
fwait
inc
inc
stos
inc
outsl
fcoms
cld
ss
sub
or
cmp
pop
pop
ss
adc
jne
adc
pushl
ja
jnp
mov
add
cld
and
insb
loopne
xchg
dec
or
cld
or
inc
or
inc
xchg
popf
loope
ret
xor
insb
mov
addb
test
test
pop
cmp
shlb
aas
and
daa
pop
xchg
xor
push
movl
jnp
xchg
inc
sbb
jae
sbb
mov
scas
cltd
xor
inc
mov
stos
mov
sub
xchg
dec
push
clc
enter
loopne
jecxz
sub
sbb
repz
xor
xor
cmp
jg
push
sbb
dec
dec
push
dec
fldcw
clc
fsqrt
cmpsl
push
ja
cwtl
dec
psrad
push
nop
add
pop
xor
rclb
pop
hlt
sub
jb
inc
or
pop
jns
out
add
add
stc
loopne
add
test
test
push
fldt
dec
cmp
sahf
int
in
push
lea
sahf
fdivs
sub
mov
pop
scas
mov
mov
loopne
out
mov
sub
push
shll
scas
xchg
lock
jle
cmpsl
xchg
mov
insb
pop
aad
add
xchg
out
push
aam
fwait
outsb
je
aad
sub
jmp
and
jb
cmp
and
pusha
repz
cmp
ret
cmp
fimuls
movsb
fldl
lds
shlb
cs
sbb
in
and
adc
and
sub
sub
jp
sbb
lods
nop
cli
mov
call
add
js
pop
scas
rcrl
push
inc
ss
orl
inc
sub
or
cmp
ret
loopne
push
movsl
mov
sbb
mov
inc
and
movsl
push
std
pop
mov
xchg
gs
inc
mov
or
push
xchg
fwait
cmp
cmc
jmp
hlt
insl
aas
gs
flds
bound
mov
insb
mov
aaa
fimuls
push
jge
test
xchg
xor
stc
xchg
test
xorl
add
into
push
sbb
or
push
add
adc
and
lret
int
push
xor
adc
push
mov
in
jae
sbb
xor
pop
xchg
lods
sbb
sahf
xor
and
dec
jnp
add
push
cltd
fsub
sub
rorl
clc
push
clc
xchg
cmp
sub
adc
negl
bound
test
loope
xchg
test
mov
jno
sub
and
popl
fs
cmp
xor
or
insw
addr16
dec
leave
xchg
popa
inc
fimull
cmp
mov
out
mov
push
in
fisubl
xor
sahf
dec
addl
push
push
ret
icebp
fidivs
sub
out
pop
add
adc
addr16
jge
or
jbe
xor
test
ja
repnz
lods
ss
stc
or
fwait
in
mov
xor
sub
rcr
push
fcos
add
out
aad
testb
xlat
insl
xchg
mov
mov
ljmp
push
push
push
repnz
mov
inc
mov
fs
mov
mov
pop
adc
mov
xor
lods
icebp
les
fmulp
dec
mov
mov
mov
dec
call
xor
cmc
decb
fadds
xlat
or
ror
mov
inc
push
ret
mov
adc
push
sbb
adc
outsb
mov
jae
mov
ds
daa
jg
jp
push
inc
scas
cmpsl
ja
pop
sbb
cmc
mov
movsl
aad
xor
xor
lds
mov
mov
jbe
imul
sbb
pusha
shrb
mov
jae
mov
add
popl
cmpsl
push
mov
cmp
pop
sub
nop
ja
js
push
fimuls
popa
movsl
sbb
aas
xor
rcrb
fwait
cmp
inc
out
sbb
mov
sub
hlt
cwtl
sub
jae
test
inc
lds
sbb
lods
lahf
aam
fwait
inc
mov
ret
pop
xor
xor
les
pop
adc
xchg
loopne
xchg
das
test
jb
and
sub
out
dec
imul
pop
adcb
jmp
pop
push
mov
insl
aaa
shlb
arpl
xchg
stos
test
fidivl
push
sbb
leave
lahf
enter
pop
jmp
sub
scas
arpl
clc
push
ret
add
pop
cmpsl
mulb
cmc
mov
push
ljmp
scas
out
js
rclb
imul
mov
push
adc
std
mov
add
or
in
inc
cld
outsb
dec
rcrl
int
fcoml
and
xor
outsb
out
aam
lret
push
and
push
lock
sbbl
repnz
jne
xchg
jae
push
outsb
mov
out
push
rcl
sbb
push
ret
adc
pop
les
scas
lret
push
lret
cld
dec
test
outsl
mov
icebp
bound
mov
dec
sti
pop
inc
mov
sub
pusha
shll
xor
cli
popf
jne
mov
ss
repz
outsb
inc
in
cld
inc
das
dec
inc
xchg
jmp
lock
push
dec
std
test
dec
roll
or
movsb
jmp
cmp
sbb
jno
nop
stos
fnsave
std
cmp
sub
jmp
dec
sbb
int3
lret
fildl
int
or
in
or
loop
pusha
aaa
or
mov
popf
repnz
mov
jp
inc
ss
popl
jnp
or
bound
sub
sbb
into
imul
lock
mov
movsb
scas
lods
andb
xchg
loop
stos
insl
xchg
lahf
dec
jne
arpl
mov
lods
inc
pop
push
xor
sbb
inc
adc
pop
rolb
hlt
pop
adc
adc
addr16
add
scas
xor
and
xchg
pop
mov
sbb
dec
lcall
cmpsb
cmp
pushf
in
jmp
lock
inc
xor
enter
in
cmpsb
sub
daa
cmc
enter
movl
ret
mov
add
pop
cs
rol
fdivs
aas
fwait
cs
repnz
stc
add
cli
push
sub
pop
mov
test
scas
mov
sub
cmpsb
cmp
lds
cmc
inc
jmpw
sbb
in
jg
data16
aad
nop
fwait
mov
mov
stc
adc
add
jae
pop
ret
cmpsl
ja
cld
flds
fbstp
xchg
push
lds
inc
nop
jp
dec
loopne
dec
xchg
in
add
popa
pop
insb
clc
repnz
outsb
inc
jmp
push
test
inc
cltd
xchg
mov
call
cmp
adc
imul
out
ss
imul
sbb
stos
adc
add
dec
movsb
mov
xchg
add
test
mull
arpl
jp
mov
and
xor
lcall
adc
fmuls
and
adc
lea
jle
repnz
enter
fistpl
lahf
frstor
add
inc
push
xchg
jae
xchg
int3
pop
adc
test
fst
in
ss
mov
aaa
iret
pop
cmp
mov
pop
pop
jmp
inc
mov
mov
dec
cwtl
fcoms
mov
fdiv
test
xchg
dec
in
pop
stc
mov
fcomp
loopne
ss
outsb
dec
lods
jne
dec
inc
js
dec
xor
add
aad
pop
and
scas
jge
add
pop
cmp
add
push
sti
mov
pop
dec
mov
mov
test
mov
xor
pop
imul
mov
or
ljmp
stc
pop
fsubl
inc
mov
cmp
dec
dec
mov
out
insl
shrb
sub
std
repz
mov
pop
cmc
lds
add
repz
fisttps
rclb
or
inc
xchg
sti
pop
das
xor
enter
mov
dec
or
or
jecxz
mov
sub
pop
add
js
jecxz
fmuls
int3
scas
insl
fs
and
push
push
push
gs
jo
or
cmp
or
xor
mov
adc
inc
mov
inc
pushf
or
or
outsb
pop
pusha
jae
bound
mov
sti
aas
aad
stc
adc
cmp
jb
test
xor
xchg
mov
test
rcll
mov
aam
stc
push
add
inc
rolb
cs
jb
cld
push
or
mov
mov
test
xor
dec
inc
out
sub
inc
das
movsl
inc
sahf
dec
xor
and
lcall
fstpl
mov
dec
pushf
xor
fs
call
xchg
hlt
mov
or
mov
xchg
cmp
in
mov
mov
aaa
push
scas
sti
cmp
and
add
dec
and
push
stos
outsl
js
mov
mov
inc
stos
movsl
push
pop
rolb
inc
js
cs
sub
aad
cmp
outsb
mov
jbe
jg
jl
push
lret
mov
pop
sub
mov
fldt
xchg
ja
lret
mov
or
call
adc
xchg
sub
sub
adc
sub
fisttpll
push
jns
test
push
sbb
imul
xor
sub
sub
outsb
mov
ficomps
outsb
scas
lfs
mov
lahf
sbb
mov
mov
or
fisubrl
sarb
sarl
test
in
je
bound
push
push
mov
cmp
sbb
and
pop
ja
dec
lahf
notl
lock
repnz
scas
lea
mov
out
jae
and
ret
and
pop
cmp
scas
leave
xchg
add
cmp
jbe
dec
je
mull
sbb
jno
and
jmp
push
int3
imul
jle
jmp
pop
mov
sub
sti
cmp
rorl
push
lcall
pop
pop
xor
addr16
incl
or
mov
clc
sarl
mov
popf
mov
sti
cmp
xor
sbb
jbe
iret
in
sbbb
pop
test
sarl
dec
rcrb
ret
jle
dec
cmp
pop
add
cli
cmp
mov
out
add
or
rcll
sub
aas
sbb
push
movsl
mov
ljmp
pop
mov
outsb
jecxz
aam
push
add
imul
scas
stos
negb
dec
in
cltd
cmc
dec
or
add
push
sub
jbe
sbb
aas
xor
push
inc
lock
push
pop
or
xor
ficompl
xor
dec
out
into
jns
pop
shlb
fsubrs
cmp
jg
fs
jae
mov
aam
mov
mov
or
adc
pop
scas
adc
testb
push
call
roll
inc
fs
rol
cmpsb
jne
jnp
pop
add
push
pop
fstpt
sub
cmpsb
test
pop
mov
jmp
and
enter
mov
andb
mov
cltd
stos
div
xor
cld
ret
jnp,pt
pop
lcall
daa
test
pop
push
fs
mov
add
test
stc
lock
pusha
lcall
xchg
sbb
and
mov
js
sub
mov
mov
jl
in
int
sbb
aam
mov
dec
pusha
xchg
lock
mov
fnstenv
in
ljmp
dec
pop
cmpb
and
jne
lahf
push
add
mov
dec
in
fs
inc
repnz
rcr
lods
test
or
jl
repnz
jg
pop
les
jmp
cwtl
pop
aaa
jno
mov
ret
test
out
andb
scas
loopne
jmp
jo
inc
inc
int3
int3
jne
data16
sbb
popa
lahf
fwait
sub
hlt
fxch
mov
stc
xor
sub
in
outsb
sub
mov
stos
and
push
ja
fsubl
testb
data16
or
xchg
xchg
push
cmpsb
inc
mov
popa
enter
push
imul
fisubl
lods
xchg
call
push
daa
outsb
hlt
sub
ret
pop
iret
je,pn
fisubs
or
mov
je
lahf
xchg
cmp
mov
daa
test
dec
pop
pop
je
fdiv
jl
out
cmp
pop
daa
cli
repz
mov
mov
daa
dec
mov
iret
insl
jecxz
mov
loopne
adc
cmpsl
cmp
mov
aas
adc
aas
sti
cld
adc
fwait
add
scas
in
mov
pusha
lods
mov
push
arpl
rorl
filds
out
and
xchg
push
inc
pushf
mov
and
ds
js
lea
lahf
inc
push
lahf
cmp
btr
xor
push
dec
ficoms
mov
ss
adc
inc
fadds
adc
clc
stos
lahf
call
out
test
js
out
sbb
in
mov
cmpsl
loop
insb
pusha
dec
lahf
jg
or
add
xor
lods
mov
lods
sub
faddl
pop
cmp
lcall
jle
aam
add
rorb
or
movsw
andb
mov
lea
mov
dec
fisubs
xchg
mov
push
xor
pop
sar
adc
loop
sbb
mov
xor
xor
mov
lods
lods
cmpsb
inc
mov
adc
enter
jle
mov
bound
mov
clc
sbb
je
shrl
mov
cld
sub
movl
pop
push
push
test
inc
sub
nop
cmp
mov
sbbl
xlat
xor
nop
out
scas
mov
adc
jnp
xchg
ds
js
out
cmpsb
and
andl
mov
arpl
lods
movsl
fld
mov
out
fdivrp
ficoms
xchg
stc
call
lds
jge
movsb
shl
mov
dec
aad
dec
pop
test
ficoms
mov
jg
iret
fildll
or
adc
cmp
lldt
popl
mov
pusha
imul
scas
pop
cmp
lea
xchg
incl
rclb
in
nop
inc
lds
imul
outsb
mov
popf
push
xchg
or
call
daa
and
xchg
sahf
mov
imul
sbb
xchg
jp
pop
sti
sbb
sub
push
pop
jge
sub
mov
fidivrl
jl
dec
xor
idiv
ljmp
cmp
fldl
inc
xchg
loop
adc
mov
fsubrl
pusha
dec
stc
pop
mov
rcrl
pop
aad
mov
mov
or
jns
jmp
mov
xor
push
and
loope
arpl
dec
jnp
rclb
in
sbb
jne
mov
push
daa
rolb
push
pop
mov
outsl
mov
or
mov
stos
mov
fstps
adc
adc
inc
in
mov
leave
popf
fs
xchg
repnz
shll
pop
ret
jb
mov
jmp
out
cmpsl
adc
push
dec
loop
das
movsb
jl
adc
fsubp
push
arpl
inc
testb
or
inc
fisttpll
sbb
js
and
push
repz
fidivrl
imul
in
dec
jmp
pop
adc
xlat
addl
adc
loopne
outsb
pushf
icebp
and
addr16
sbb
mov
fdivs
pop
jecxz
popa
pop
adc
push
mov
call
mov
out
sub
movsl
cltd
data16
leave
shll
pop
bound
mov
xchg
aaa
add
imul
push
lods
shlb
mov
insb
in
xor
test
xchg
lea
lcall
hlt
daa
pop
addr16
insl
inc
push
jae
adc
fiadds
xchg
ss
adc
mov
lock
mov
jg
leave
mov
fldl
jb
mov
mov
int
ja
nop
fistpl
xchg
dec
xchg
enter
jecxz
ret
sub
cs
jo
xchg
test
ja
push
or
cmc
pop
mov
jnp
das
xchg
dec
sarb
das
sub
adc
jns
mov
movsl
in
in
pop
fiadds
or
sub
mov
popa
pop
jge
add
outsb
sbb
icebp
imull
outsb
dec
fistpl
arpl
inc
xchg
sbb
cmp
mov
ret
mov
adc
outsb
rorl
outsl
xor
cld
xor
into
xor
jp
andl
jl
enter
mov
pop
decl
fbstp
xor
inc
andl
in
or
jp
sub
movsl
pop
xchg
sub
push
daa
add
int3
dec
jge
lds
xor
push
xor
adc
lcall
mov
sbb
mov
jmp
scas
hlt
mov
test
inc
push
sub
xchg
xchg
fisubl
jne
xlat
and
xor
sbb
inc
jp
or
rcrb
xchg
pop
cmp
and
mov
and
jge
insl
sbb
out
push
fldl
int
std
es
push
popf
inc
lea
lods
xchg
pop
xchg
jge
insl
sbb
out
push
fldl
int
std
es
push
popf
inc
lea
lods
xchg
pop
test
jge
insl
xlat
sbb
out
adc
push
int
std
and
push
popf
pop
lea
push
lods
mov
dec
jge,pt
insl
sbb
sub
stc
addr16
std
es
cltd
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
rcrl
rorl
cmp
sub
sub
jno
popa
test
xor
and
rcrl
rorl
cmp
sub
jns
imul
popa
test
xor
and
rcrl
rorl
cmp
sub
jns
imul
add
adc
dec
jmp
icebp
pop
mov
sahf
lahf
mov
sub
jnp
data16
pushf
fimuls
and
sub
xchg
mov
dec
popa
in
and
jmp
inc
sbb
inc
addr16
jo
cs
fistps
push
push
ret
call
popa
mov
mov
mov
and
shl
out
xor
out
stc
pop
jle
call
stos
int3
pushf
nop
inc
sahf
push
inc
mov
cltd
leave
pop
stos
enter
cmc
je
sbb
outsb
pop
mov
aas
push
fmull
cld
inc
ljmp
clc
and
lret
cmp
pop
mov
mov
in
push
data16
cmpl
and
adc
rorl
cmp
sub
jns
imul
popa
test
xor
and
mov
cmpsl
outsl
hlt
ss
or
sbb
sbb
cmc
and
add
and
xchg
mov
mov
jnp
mov
cmp
addr16
push
in
and
es
out
popa
cmpsb
pop
mov
mov
sarl
test
xor
mov
mov
popa
test
xor
and
rcrl
rorl
cmp
sub
jns
imul
popa
test
xor
and
rcrl
mov
clc
inc
pushf
jae
loope
ds
loop
xchg
dec
dec
loop
out
cmp
xor
aad
or
jg
ss
stos
pop
pop
idivl
push
push
adc
gs
in
addb
push
xchg
adc
cmp
dec
mov
jl
mov
mov
insb
jno
mov
dec
testb
add
in
sbb
sbb
pop
loop
pop
test
iret
fwait
push
mov
mov
in
dec
jmp
leave
pop
jg
inc
mov
xchg
xor
ja
lods
pop
stc
xor
lsl
cmp
mov
stos
idivb
pop
outsb
shlb
xchg
ret
aad
push
mov
and
mov
popa
outsb
outsl
dec
mov
sub
cli
scas
out
xchg
inc
aad
jmp
xor
cld
cmp
shll
stc
dec
mov
lahf
inc
jnp
add
popa
data16
push
cmp
or
inc
daa
inc
add
mov
mov
jmp
mov
adc
lret
mov
add
rcll
push
lods
test
adc
je
orb
cmp
xchg
xor
cwtl
push
push
xlat
sti
lea
fs
mov
ficompl
xlat
adcl
enter
test
xchg
push
je
lods
divl
outsb
es
mov
scas
cltd
dec
call
pop
iret
int3
ljmp
popa
int
cli
mov
jle
sub
mov
mov
scas
and
pop
and
xchg
cmp
mov
cli
lea
stc
rolb
cmpsl
sahf
repnz
mov
ljmp
loop
movsl
jae
sub
fnstcw
mov
repz
jle
test
dec
push
test
out
movsl
push
xor
push
daa
xlat
cld
and
mov
and
push
nop
mov
dec
jmp
outsb
ljmp
and
lret
adc
enter
adc
mov
out
int3
je
jecxz
fildll
popf
stc
dec
aad
test
stc
outsl
subl
push
addl
je
sub
fstpt
les
lods
rcrl
pop
test
test
mov
adc
mov
inc
repz
cld
movsb
push
xor
pop
jb
or
sbb
mov
cmpl
shl
rcl
jge
push
jmp
rcll
jge
push
bnd
jecxz
mov
insb
fisttpl
stos
mov
and
out
vsubsd
and
in
insb
ds
and
push
ret
std
and
adc
sbb
in
inc
test
mov
pop
mov
push
roll
xchg
dec
stc
fwait
or
leave
push
fdivrs
pop
add
dec
mov
outsl
test
mov
addr16
dec
fisubs
pusha
insb
lds
pusha
bound
notl
aaa
and
les
cmpsl
cmp
fistl
pop
arpl
jmp
icebp
cltd
ss
imul
pop
loopne,pt
stos
inc
xorb
sbb
xor
adc
dec
add
xchg
dec
movsb
push
xchg
fisubrl
mov
mov
mov
fldl
jecxz
add
xor
leave
cmpl
daa
push
cmc
mov
xchg
ds
cli
enter
stos
sub
into
push
imul
mov
sahf
orb
xchg
and
sub
mov
pop
push
mov
cmpsb
jb
into
xor
sarb
jno
push
mov
lock
lods
mov
sbb
add
aas
insb
in
cwtl
sti
iret
or
push
loop
push
jb
ret
dec
and
scas
xchg
pusha
xor
xor
cmp
out
inc
mov
arpl
cmp
inc
int
pop
inc
push
fcmovb
ds
adc
pushl
sub
fstl
je
and
cmp
outsl
inc
add
mov
popa
lds
xchg
lcall
jmp
push
incw
ss
pushf
dec
or
or
loopne
daa
xchg
cmovo
daa
pusha
shll
pop
jne
mov
mov
mov
push
adc
sub
mov
test
fwait
stos
lcall
sti
das
jae
into
push
int3
in
mov
xchg
sbb
inc
addr16
push
pushf
jbe
arpl
xor
jg
xchg
les
pop
fwait
cltd
xor
mov
stos
push
in
mov
jno
das
push
mov
inc
fdivrl
cs
xchg
ja
mov
cltd
test
mov
stos
sbbb
mov
xlat
icebp
inc
pop
sbb
push
int3
pop
outsb
andb
popf
dec
pop
loop
or
cmpsl
lea
cmpsb
clc
fs
frstor
cmpsb
cmp
andl
adc
pop
cmpl
sub
xor
add
ljmp
adc
pop
cmpl
sar
adc
lret
and
int3
jp
push
sbb
mov
scas
movl
mov
ljmp
imul
add
jo
mov
daa
cli
popa
cld
ret
ss
in
std
ret
aam
mov
and
adc
imull
mov
fcmovne
popf
xor
int3
aaa
fsubl
push
mov
dec
push
or
in
out
jle
xor
or
push
fs
mov
popf
sub
stc
arpl
add
aaa
lds
inc
cld
mov
adc
or
call
sbb
mov
inc
mov
pop
mov
push
dec
cmp
rclb
fildll
mov
fwait
pop
pop
cmp
or
call
and
enter
pop
sbb
push
push
sbb
mov
outsb
outsb
mov
addr16
cmp
test
xchg
sbb
cmp
jmp
mov
xchg
dec
fildl
xor
fistps
fadd
pop
fistpl
mov
sti
int3
xor
sbb
sbb
push
fnstsw
shlb
ja
cs
outsl
pop
ja
dec
or
scas
mov
mov
mov
inc
aas
or
loope
hlt
push
call
jge
xchg
and
lahf
add
jb
bound
rcrb
mov
lock
dec
or
clc
sub
or
call
cmpsl
test
sbb
and
cwtl
repnz
mov
cmp
jae
mov
outsb
out
or
and
sub
sub
or
lret
mov
sbb
jg
jmp
repz
add
sub
setns
or
fdivs
inc
lahf
into
pop
xchg
push
push
mov
mov
cli
xor
jo
fs
pop
gs
push
cmovbe
shll
out
adc
call
lods
inc
push
lahf
lret
mov
pop
xchg
std
ss
push
idiv
jns
sbb
dec
ljmp
mov
pop
inc
mov
setae
push
adc
imul
add
cmpsl
outsl
data16
ljmp
ja
mov
xor
pushf
adc
lret
rcl
bswap
test
jl
cwtl
rorl
in
lahf
push
and
test
fld
call
add
enter
or
xor
lock
add
push
subl
sub
mov
mov
stos
es
xor
loopne
inc
in
sub
xchg
aaa
mov
cltd
cmp
lea
pushf
in
fs
rclb
cmc
in
push
cmp
pop
outsb
mov
sti
xchg
inc
jae
fildl
enter
inc
push
lds
arpl
out
in
lret
jb
cmp
lahf
and
xchg
data16
pop
dec
mov
adc
dec
pop
dec
adc
imull
jns
stc
out
sbb
jbe
not
mov
mov
leave
xchg
outsl
mov
mov
outsl
mov
lds
aad
dec
mov
ljmp
mov
and
hlt
lret
xchg
fnstsw
out
or
push
aas
or
mov
adc
sub
jl
je
pop
nop
fidivs
in
sub
xor
shlb
sub
cmp
icebp
lahf
pop
lret
mov
inc
ret
jbe
mov
ljmp
in
lcall
and
outsl
mov
or
aas
cmp
fwait
popf
push
cmp
add
inc
nop
mov
dec
mov
push
pop
rolb
lods
cmp
pop
dec
sbb
int3
xchg
cli
xchg
sub
inc
add
mov
ffreep
xor
jne
pop
push
insb
cltd
adc
sbb
out
push
dec
sub
sarl
mov
es
sub
mov
je
push
xor
pop
aam
jbe
sub
int3
xchg
sub
sti
aad
lock
inc
test
repz
mov
and
sbb
and
xor
xchg
out
adc
dec
stc
jmp
lds
lret
insb
push
loop
mov
or
das
cmp
sub
dec
push
subb
cmp
daa
ja
in
jo
cmp
dec
inc
lods
sahf
and
mov
pop
sub
rclb
adc
fildl
jnp
lret
lahf
xor
sbb
jle
rcrl
sti
xor
imull
mov
addl
push
inc
push
push
sub
and
dec
imul
inc
sub
mov
xchg
mov
sbb
sahf
stc
fnstenv
mov
notb
cltd
repz
jns
jg
dec
iret
rorl
cltd
pop
stos
mov
or
xor
icebp
push
push
dec
mov
fisubrl
dec
imul
flds
sub
push
mov
aam
jle
adc
sbb
out
mov
dec
dec
mov
mov
pop
fldcw
inc
iret
movsb
pop
enter
sbb
adc
xor
mov
ds
sub
pop
das
cmpsl
jl
xchg
push
repz
jp
mov
ret
and
mov
or
test
xlat
lock
jmp
sbb
and
fsubrl
jl
mov
mov
dec
sahf
test
loope
hlt
mov
fcmovne
rcrl
mov
mov
movsb
rcrb
fadds
in
mov
lahf
fstps
adc
das
scas
js
cltd
dec
imul
mov
push
inc
je
movsb
bound
shlb
sbb
pushf
fs
xchg
test
cmpsb
xor
pop
sub
and
in
aaa
mov
aam
in
add
mov
testl
dec
je
rcr
outsl
movsl
inc
jbe
sbb
jne
icebp
sti
mov
mov
std
int3
dec
pop
dec
icebp
sub
push
into
cmp
sub
fnsave
in
mov
outsl
adcl
inc
cmp
and
pop
orl
dec
mov
fbstp
faddl
movsb
jo
fimuls
dec
mov
pop
aad
xchg
int3
jg
xlat
and
scas
cmp
mov
mov
out
movsl
test
dec
ret
faddp
add
lods
and
and
jo
pop
js
dec
pushf
mov
cmpl
and
popa
sub
jbe
add
lods
fs
cwtl
mov
sbb
or
push
cmp
hlt
inc
pop
in
or
sub
push
movsl
ds
mov
xor
aad
es
jo
xchg
xor
movsb
lcall
test
leave
mov
xchg
mov
mov
dec
mov
inc
lret
dec
mov
in
inc
js
into
pusha
clc
fwait
out
pop
dec
sbbb
fdivl
out
dec
xor
dec
cmp
push
es
loope
pushf
xchg
out
lcall
pop
aam
sub
insb
push
fs
rcl
arpl
cmc
rcl
adc
sbb
decl
int3
xor
dec
test
or
jbe
sbb
cld
adc
xor
push
pop
lret
lret
cmc
emms
testb
sbb
rcrb
cmp
xchg
pop
aam
inc
mov
sbb
ds
jo
push
mov
sub
out
jecxz
sbb
pop
mov
std
lahf
sub
pop
pop
xchg
or
inc
xor
adc
stc
pusha
add
in
test
push
lahf
out
rorb
popa
and
rcll
jp
push
mov
out
divl
pop
fwait
mov
and
mov
insb
or
mov
rorl
xchg
pop
scas
pop
in
jns
fidivrl
cmpsb
inc
rclb
fimull
xor
jne
inc
and
inc
in
and
pavgb
std
push
mov
xor
inc
bound
pushl
pop
xchg
and
jne
arpl
xor
mov
or
test
bound
jnp
pop
dec
sti
imul
rclb
xchg
fbld
sbb
or
fdivrl
insl
nop
inc
test
popa
or
push
mov
loop
pop
and
xchg
je
aas
fidivrs
add
es
test
mov
lods
ja
jo
pop
mov
dec
pop
dec
mov
push
jl
mov
test
sarb
daa
in
decl
adc
inc
inc
iret
and
pusha
xchg
mov
mov
pop
adc
stc
in
mov
shl
dec
cmp
sub
mov
mov
les
add
test
les
scas
outsb
in
dec
popa
iret
sahf
inc
sbb
mov
addr16
mov
cmp
sbb
jecxz
out
sbb
jns
sub
xor
out
and
testb
shrb
lcall
mov
mov
pushf
out
adc
push
and
imul
push
add
clc
sbb
stc
shl
iret
jnp
and
push
mov
es
mov
jae
fiadds
mov
adc
fwait
aas
outsb
xchg
jns
cli
pop
loopne
add
push
leave
test
add
pop
dec
and
inc
ret
loop
test
outsb
mov
insl
jg
fiaddl
or
jo
sbb
add
push
mov
pop
pop
arpl
mov
loopne
jl
call
pop
mov
sbb
loop
lods
xchg
orb
or
mov
enter
aad
mov
pop
flds
pop
and
mov
repnz
int
jns
in
mov
ret
fcmove
movsl
ljmp
mov
mov
das
loope
xlat
jg
and
inc
cmp
lret
push
sbb
bound
not
pop
xchg
sbb
xor
mov
pop
sarb
inc
or
mov
mov
repnz
in
stos
sti
xchg
xchg
cmpsb
mov
inc
xchg
cld
sbb
add
mov
xorb
mov
or
lcall
fistpl
popf
mov
pop
mov
sbb
xchg
push
cmpsl
dec
in
cmp
jb
cli
cmpsb
stos
or
in
aad
add
stos
cs
ja
test
and
cmp
outsb
sub
pop
cmp
mov
sbb
sub
jge
cmp
out
jae
lret
cmp
pop
xchg
loope
scas
inc
sbb
sbb
lds
mov
cmp
pop
mov
movsl
call
ficoms
xchg
pop
mov
pushf
mov
enter
cmpsl
imulb
repz
sbb
jp
jnp
xor
insb
pushf
faddl
xchg
sahf
pop
addr16
mov
xchg
push
jp
sbb
xor
cmp
roll
lret
sbb
out
rcll
rcll
lcall
or
clc
das
test
jbe
jo
jl
nop
cli
rcr
sbb
or
cld
cwtl
and
out
mov
lods
push
mov
in
dec
lret
mov
ja
push
inc
mov
js
cld
in
sbb
fcmovne
movsl
out
and
mov
cmc
dec
pop
out
cmc
mov
xor
shlb
lcall
fdivrp
xor
push
shll
je
add
and
jg
or
jmp
hlt
fwait
add
push
out
leave
inc
add
outsl
pop
sub
negb
lods
ret
inc
jecxz
loop,pt
and
dec
push
in
out
daa
mov
push
loope
insl
imul
sbb
adc
mov
push
movsb
or
pop
test
mov
jno
sbb
loop
or
pop
push
shll
cmp
sub
in
movsl
aas
adc
fisttpl
mov
and
mov
xchg
stc
pop
xchg
mov
popa
xchg
mov
dec
sub
inc
jmp
in
pusha
clc
nop
sub
mov
sbb
into
jg
les
repnz
out
popf
mov
jno
call
cmpsb
xor
repnz
add
pop
mov
jo
test
cmpl
scas
inc
outsl
xor
fnsave
pusha
negl
push
fnstsw
lret
push
cmp
icebp
jl
push
push
test
adc
in
jmp
fisttps
xchg
jg,pt
pushf
sar
das
mov
std
aad
into
test
xlat
flds
mov
shrb
mov
sarl
push
add
rcrb
jg
dec
cmc
ds
xlat
out
dec
insb
outsl
je
popa
add
xlat
sbb
push
sar
or
add
xor
das
in
or
stos
sbb
lock
xchg
dec
xor
or
dec
mov
adc
ja
push
fisttpll
xor
mov
ljmp
loopne
mov
stos
xchg
les
mov
mov
addr16
add
cmpsb
dec
enter
xchg
mov
jl
lret
dec
addr16
sub
shrd
jl
sbb
jb
and
push
call
adc
lods
mov
mov
dec
popf
test
out
adc
rcrb
xor
roll
pop
insb
daa
insb
mov
std
adc
popf
lods
call
iret
push
out
jle
push
aam
cli
or
in
jge
sbb
add
inc
mov
and
cmp
push
dec
xchg
int3
sbb
stc
and
stos
mov
sti
add
jno
aam
sub
pusha
push
sub
fldt
mov
insl
inc
movsl
push
imul
pop
rcrb
fdivrs
sbb
xor
jp
rolb
adc
lret
sub
pop
inc
mov
dec
rorb
lret
insb
outsl
and
xor
das
push
ljmp
dec
setbe
sbb
pusha
lret
outsl
stc
js
dec
orl
outsb
ds
imul
inc
outsb
stc
xor
data16
lds
call
mov
stos
es
fadd
and
inc
ja
adc
or
mov
lods
hlt
add
popa
dec
dec
movsl
xchg
xchg
fs
inc
fcmovnb
fidivrs
pop
mov
jno
ds
ljmp
pop
adcl
inc
adc
cmp
jp
push
mov
mov
mov
xchg
xchg
pop
enter
or
jae
or
stc
test
rolb
xchg
mov
push
aas
push
mov
fwait
or
rcrl
jge
sub
out
mov
dec
cs
inc
outsb
xor
mov
cltd
std
dec
cmp
mov
out
repz
inc
scas
rcll
aaa
aam
addr16
into
push
addb
cmc
lcall
hlt
mov
sbb
mov
inc
xchg
shll
sub
subb
cwtl
push
subl
or
fstpt
xchg
imul
push
xchg
sbb
sbb
add
loope
cmpsb
add
idivl
and
cs
iret
sub
mov
inc
ds
dec
pop
adc
in
jae
divb
pop
jbe
and
cmp
lahf
mov
das
cli
stos
fsubrp
sbb
mov
into
jge
cmc
cmp
push
mov
inc
adc
cmp
in
std
clc
xchg
push
rclb
xchg
out
scas
test
cmp
ss
popa
sarl
cli
mov
mov
cmp
leave
mov
inc
insl
in
push
add
xlat
adc
paddq
add
push
in
add
dec
out
sahf
cs
outsb
fbstp
in
shl
xchg
xor
jno
filds
push
and
dec
popl
in
cmp
mov
mov
mov
cs
aad
cmp
stc
adc
aaa
add
scas
xchg
xadd
ret
cs
test
add
dec
and
rclb
push
mov
cld
enter
faddl
arpl
mov
jno
loop
call
push
xchg
data16
fucom
out
pop
dec
dec
sub
into
mov
cmp
or
push
xchg
and
adc
bound
in
stc
pop
js
add
xchg
jg
push
jp
mov
push
push
push
dec
cld
incl
cmp
gs
cmpsl
int
jne
stc
mov
cmp
jo
jnp
pop
mov
fnsave
sub
in
adc
or
mov
hlt
jo
lods
shl
outsl
xor
cmpsb
add
push
lods
or
cmp
sub
jns
imul
popa
test
xor
and
rcrl
rorl
cmp
sub
jns
imul
popa
test
xor
and
rcrl
loope
xchg
pop
orb
mov
mov
pusha
test
xor
and
rcrl
rorl
cmp
sub
xor
and
fstpt
mov
leave
push
fsts
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
nop
xchg
subb
orl
add
adc
arpl
pusha
inc
inc
push
inc
mov
nop
xchg
and
repz
rcl
shlb
xor
add
adc
mov
push
push
inc
mov
mov
clc
ret
enter
rcll
sbb
adc
arpl
sbb
ss
cmp
leave
and
or
pop
js
enter
inc
mov
rclb
fwait
ss
adc
loope
sbb
jnp
push
cmp
mov
enter
add
fimuls
test
out
push
movsb
lea
mov
loopne
lods
roll
es
push
inc
mov
nop
xchg
mov
shl
and
sarl
scas
pusha
mov
std
lock
pushf
and
lahf
rcr
sub
inc
arpl
pusha
mov
adcb
xchg
add
sbb
pop
mov
sbb
lret
dec
ljmp
cld
add
adc
outsl
mov
mov
adcb
ret
leave
rcr
and
xor
add
adc
arpl
ja
push
push
and
aad
mov
jecxz
orl
add
outsl
bound
adc
mov
jecxz
mov
mov
dec
bound
adc
add
and
in
icebp
push
scas
pushf
repz
rcl
shlb
xor
add
adc
arpl
pusha
inc
push
push
inc
mov
nop
xchg
and
repz
rcl
shlb
xor
add
adc
arpl
pusha
inc
push
push
inc
mov
mov
xchg
sbb
insb
and
push
cmpsb
add
lcall
xchg
jge
inc
and
adc
frstor
fadds
push
out
rorl
cmpsb
fwait
jl
inc
pop
jb
inc
test
jns
inc
sbb
cmpsl
pop
es
mov
loop
pop
dec
jbe
push
and
cmp
cmpsl
loopne
ret
sbb
cmpb
lods
icebp
and
mov
xchg
inc
aam
cmp
lret
push
lahf
fnstcw
mov
or
add
stos
cmp
mov
adc
js
jns
dec
repnz
nop
daa
orb
daa
jne
pop
aad
dec
je
push
mov
fst
mov
push
inc
test
jl
push
jmp
imul
cld
mov
xor
mov
fwait
in
sti
pop
sub
and
jo
adc
pop
aas
enter
mov
loopne
lea
push
push
adc
call
mov
jmp
push
adc
mov
push
pop
inc
sub
js
mov
or
mov
adc
cmp
ljmp
dec
sub
movsb
sub
cmp
mov
cwtl
mov
pop
and
insb
or
not
inc
lock
or
mov
xchg
xor
int
cli
cld
pop
and
outsb
cwtl
inc
jbe
or
lcall
pop
imul
sub
inc
movsl
inc
aad
sbbb
mov
in
hlt
or
add
sub
push
xchg
and
sbb
in
fwait
aaa
or
dec
adc
pop
xchg
shlb
dec
push
mov
and
in
test
rcrl
push
pushw
test
adc
pop
lods
mov
popa
lahf
aaa
adc
ret
mov
push
pop
ds
cli
fstpl
fnstenv
aas
lret
loop
stc
das
cmp
sbb
inc
mov
call
mov
or
dec
cmpsl
cmp
sub
mov
dec
or
mov
out
xor
test
sub
dec
push
in
add
add
lea
xchg
pop
cli
pop
out
cmpsl
mov
inc
jl
push
aaa
nop
xchg
cmove
imulb
dec
cmp
mov
add
cld
sbb
cmpsl
pop
lods
push
mov
xor
add
xchg
inc
aam
inc
xchg
insb
sub
and
jge
sbb
ds
decl
pushf
jl
pop
test
sar
xor
cmp
jmp
xchg
repz
xchg
in
repnz
adc
xor
out
mov
in
imul
xor
push
scas
fimuls
movsl
inc
mov
and
mov
mov
cmpb
loopne
aaa
cmp
hlt
dec
andb
loop
push
mov
sub
xor
mov
adcb
ds
cmc
jg
imul
mov
out
add
in
cmpsb
popf
cmpsl
inc
andb
xchg
enter
mov
inc
mov
loope
mov
test
in
dec
push
dec
dec
xor
into
dec
or
test
xchg
mov
inc
adc
mov
fistps
dec
xor
push
mov
movsb
inc
push
ja
or
out
adc
in
push
loop
int
frstor
sbb
sub
push
cmp
or
mov
arpl
push
int3
mov
xor
cmp
jo
sti
xor
les
insb
outsl
mov
xor
push
je
add
jo
jne
mov
cmpsb
fstl
outsb
push
sarl
scas
mov
mov
mov
or
sarb
movsl
je
pop
mov
adc
out
enter
sbb
sub
xchg
cli
inc
xor
pop
stos
pusha
pop
xchg
or
ss
add
data16
pop
mov
sbb
xor
cmp
mov
popa
xchg
call
adc
push
fs
sahf
popa
dec
ret
sub
add
pop
inc
push
jne
inc
inc
lods
or
mov
mov
test
dec
test
out
insl
aad
pop
scas
fbstp
sbb
add
add
sub
pop
and
adc
xchg
cmc
cmp
mov
clc
mov
pop
dec
and
sti
rorb
pop
ljmp
loope
push
sbb
pop
dec
negl
icebp
fcmovnu
xchg
mov
lock
dec
jmp
pop
es
mov
popf
addr16
push
xchg
rol
add
adc
rorb
andl
leave
jg
scas
mov
mov
fisubl
mov
call
push
add
jns
pop
mov
and
out
mov
sahf
orl
leave
xor
dec
inc
icebp
mov
pop
xor
shlb
xchg
insb
jmp
add
cli
lea
ret
cli
jns
les
fadds
shlb
outsb
stos
jle
imul
lods
xlat
pop
adc
mov
mov
stc
rcrb
dec
ret
push
mov
sbb
jno
scas
cmp
and
inc
loopne
gs
loop
mov
std
stc
push
dec
inc
call
lahf
cmpsb
notl
xor
inc
test
out
and
mov
data16
inc
sbb
add
jne
pop
xchg
call
sbb
les
sbb
cmpsb
cld
adc
or
or
pop
or
and
ret
push
dec
popf
sahf
js
rolb
push
dec
je
shlb
scas
outsl
mov
pop
push
std
fimuls
jmp
adc
pop
mov
xor
sbb
xchg
and
cmp
mov
stos
dec
insb
shl
mov
or
in
dec
push
addl
push
int
sbb
or
fstpl
sahf
push
scas
sbb
sub
call
leave
daa
inc
cmc
adc
lds
scas
orl
jmp
fwait
es
das
cmp
outsl
stos
cmp
lock
sti
or
bound
dec
xchg
stc
jae
xor
aam
std
roll
cli
out
pop
jb
aas
xchg
mov
in
std
cmp
cmc
popa
pop
xchg
and
jnp
jecxz
test
jae
test
and
jecxz
les
pop
inc
push
out
cmc
pushf
and
je
movl
not
sub
dec
pop
sarb
les
push
ds
mov
idiv
pop
out
hlt
pusha
or
inc
imul
notb
stos
daa
fsts
jle
mov
or
je
fs
out
pusha
int3
sub
insb
xorb
nop
jmp
lods
std
sbb
aam
int
test
mov
arpl
jo
sub
lcall
cmpsl
or
int3
out
pusha
frstor
sti
dec
cmp
mov
ss
fcom
pop
ja
lea
adc
mov
jecxz
dec
stc
loop
punpcklwd
inc
hlt
into
mov
jno
adc
jnp
dec
add
mov
fidivrs
enter
int
in
jno
or
clc
aaa
lods
push
rcl
pop
repz
mov
xchg
mov
cmp
jo
push
cltd
mov
mov
push
xor
and
sub
xor
xor
or
mov
sbb
push
fdivl
jns
jns
cmp
mov
in
stos
and
jmp
mov
adc
nop
sub
pusha
or
lds
jbe
dec
dec
adc
aas
rcrb
fucomp
paddd
push
aad
in
ja
pop
cmc
sub
lcall
imul
in
movsl
imul
jbe
sub
insl
xchg
xchg
movsb
jge
jae
into
push
xchg
mov
xor
iret
cmp
pop
pop
imul
mov
pusha
lock
push
or
repnz
lods
mov
sub
fs
inc
int
mov
pop
jmp
sub
sub
pop
loop
pop
mov
popf
clc
mov
aaa
sub
test
adc
xchg
sub
fs
fsubp
inc
das
aam
xchg
in
or
add
xchg
xchg
into
sub
cmp
popa
outsl
xchg
aas
sti
jo
cmp
shll
add
mov
ret
dec
and
pushf
inc
dec
sbb
or
cmpsl
push
in
mov
fcom
or
pop
sbb
sub
xor
xor
mov
stos
rcrb
clc
stos
arpl
daa
pusha
outsl
popf
ja
sub
push
ljmp
and
pop
add
inc
cli
xor
xchg
test
pop
add
notl
sub
addr16
rcll
or
pop
lcall
adc
bound
adc
out
fists
fdivrs
dec
mov
sub
sub
stos
mov
pop
or
insb
je
int3
jmp
xor
add
jle
sbb
ja
movsb
mov
push
jnp
scas
push
imul
sub
cld
out
sub
je
jbe
xchg
movsb
shrb
push
sub
mov
fldenv
mov
sub
push
inc
in
leave
jl
cmpsl
lds
pop
dec
sbb
das
lods
sti
add
xor
lcall
rcr
roll
inc
sbb
stc
cmp
xor
mov
jecxz
cs
pop
push
mov
lahf
xchg
rcll
cmp
out
sbb
dec
movsb
fwait
dec
sub
push
out
stos
negb
jge
xor
lcall
insl
into
xor
enter
mov
mov
and
push
mov
sbb
inc
adc
es
jle
jg
jl
aam
mov
xor
or
fwait
mov
mov
cltd
add
jmp
out
or
lcall
imul
sub
les
imul
jbe
fisubs
jno
movsb
testl
das
push
add
mov
jne
in
adc
dec
cmp
jb
add
pop
lea
das
adc
xchg
xor
mov
dec
mov
adc
and
insl
mov
push
ss
hlt
or
mov
aas
mov
dec
mov
sbb
jp
test
cli
jb
imul
mov
pop
sbb
jb
sahf
test
hlt
mov
lods
mov
call
fnsave
lcall
pop
sbb
shrb
inc
jb
mov
cli
jno
inc
sar
inc
sbb
adc
sti
lret
in
push
xor
cmp
mov
mov
daa
push
cmp
push
clc
test
mov
jno
pop
sub
movb
add
jno
clc
hlt
or
ljmp
xchg
push
insb
fs
das
rorb
mov
jecxz
sbb
arpl
xor
add
xor
push
hlt
imul
loopne
and
adc
dec
aaa
insl
js
out
cmp
dec
addr16
adc
mov
xor
lock
std
inc
inc
add
fnstcw
outsb
in
mov
lret
push
lds
negl
push
add
mov
test
mov
pmaxsw
pop
push
repz
divl
scas
push
mov
adc
pushf
jne
mov
mov
jo
aad
push
inc
sub
dec
mov
mov
repz
cs
push
ficoms
pushf
nop
loope
xlat
xor
testl
aas
fiaddl
and
iret
jae
cld
addr16
sti
outsb
out
imul
cmp
lock
jp
jns
jle
sti
cmp
fidivrs
xlat
and
cmp
gs
and
stos
and
cmp
xor
dec
mov
test
jae
imul
and
in
xchg
jmp
sub
jne
hlt
mov
popa
nop
pop
js
cs
sti
sbb
test
pop
and
fs
arpl
subl
add
sub
fidivs
xor
inc
cli
dec
xchg
cmp
xor
adc
mov
jle
movq
rcr
pusha
xchg
icebp
ds
lods
push
mov
xchg
popf
mov
std
mov
mov
adcb
mov
cmc
xchg
popf
scas
mov
rclb
fxch
les
stos
fisttps
dec
cmp
movsb
pop
lcall
adc
mov
int
adc
js
sub
cmpsb
xchg
mov
push
jb
fdivrl
jge
mov
cmpsb
repnz
jo
adc
push
std
lret
sub
icebp
jge
pusha
lcall
pop
loope
mov
movsl
lea
adc
mov
pop
push
cltd
jg
dec
and
pop
fisubl
cltd
icebp
cli
and
mov
data16
jae
xchg
or
mov
stos
outsb
or
jle
cmp
xor
and
stos
adc
mov
call
push
mov
and
cmp
repnz
or
sub
push
es
inc
mov
jge
imul
inc
cmc
xor
push
add
or
icebp
mov
adc
mov
cmp
cmp
dec
push
cmp
inc
ja
scas
inc
mov
push
addl
shll
fstpt
mov
dec
fs
and
leave
mulb
push
fldt
xchg
fstp
outsb
loop
mov
test
xor
inc
js
fidivs
leave
fisubs
fsubrl
mov
sub
mov
jmp
mov
mov
lahf
scas
jno
push
sahf
in
hlt
jmp
push
mov
icebp
or
xchg
test
jns
pop
mov
and
and
rol
loop
fs
adc
push
inc
xchg
sub
das
outsl
xor
pop
gs
sub
xchg
mov
mov
mov
pop
jmp
adc
xchg
fwait
add
or
hlt
adc
ret
cwtl
pop
pop
push
xor
rcll
jnp
push
dec
jbe
mov
jmp
lea
jae
leave
jecxz
arpl
data16
add
jno
cmpsb
lcall
lock
mov
sub
inc
push
imul
or
push
jecxz
mov
lea
add
add
inc
add
pop
int3
xchg
pushf
jnp
push
push
jb
stos
push
dec
fsubrs
mull
add
mov
push
push
out
dec
sbb
stos
push
std
icebp
call
push
data16
test
mov
mov
add
sbb
push
or
cmp
pop
adc
rcll
mov
daa
cmpsl
adc
sub
stc
int3
iret
mov
pusha
xchg
jl
xchg
popa
hlt
inc
sbb
mov
sub
pushf
sub
sub
pop
ds
imul
ret
adc
movsb
push
push
sbb
int
stos
jbe
fsubrs
leave
aad
dec
mov
jb
fld
lea
pop
out
lret
ss
xor
mov
jno
loopne
cwtl
inc
xchg
sub
ljmp
ret
fs
fsubr
lds
add
fmuls
pop
add
ds
adc
icebp
cmp
pushf
stos
adc
sahf
cmpsl
mov
dec
hlt
push
push
adc
or
mov
xchg
aaa
jge
sarb
popa
ficoms
fwait
mov
arpl
setns
sub
dec
mov
sub
sbb
pop
add
sbb
mov
fs
dec
lds
orb
inc
shll
std
stos
cmpsb
sub
push
es
insl
dec
aam
icebp
jmp
jl
sub
add
or
dec
xchg
or
outsb
sub
sbb
faddl
fs
pop
enter
mov
into
fcmovne
pop
out
cwtl
cld
mov
inc
mov
bound
shll
mov
mov
stos
xchg
outsb
or
mov
arpl
mov
mulb
imul
xchg
push
mov
dec
pop
mov
xchg
adc
adc
cmc
faddl
imul
sbb
ss
inc
or
outsb
and
mov
stos
jb
insl
icebp
pop
mov
stos
push
jno
call
push
leave
mov
or
cld
jnp
mov
in
mull
lahf
shll
jno
jmp
sub
lcall
pop
cmp
jl
mov
ficoms
stc
dec
cmpb
add
lds
dec
test
dec
cld
repnz
push
push
pop
lods
lds
daa
mov
rorb
lds
outsb
aad
stos
mov
cmp
mov
and
ret
add
ljmp
mov
mov
scas
adc
and
data16
arpl
pop
pop
les
mov
inc
stos
imul
push
dec
dec
push
fcoml
movsb
jp
mov
stos
and
xor
js
paddq
inc
mov
sbb
xor
cmp
add
shlb
into
push
bnd
cld
mov
inc
ret
in
jl
xor
aas
add
lcall
outsb
ret
cmp
scas
lahf
mov
dec
xor
add
hlt
jg
xchg
and
rcr
in
in
addr16
push
dec
out
outsb
xchg
dec
adc
push
add
ret
push
or
push
inc
xor
jl
jo
pop
aas
cmp
jbe
clc
dec
jle
lret
jnp
jns
mov
xor
mov
cmp
scas
xchg
rolb
fistl
add
mov
mov
stc
pop
pushf
mov
push
cs
test
xlat
lcall
jno
inc
adc
stos
lcall
pop
sbb
loop
mov
mov
mov
jns
pop
push
cltd
sub
cmp
loope
xor
and
fbld
dec
repnz
stos
cs
mov
cltd
dec
in
imul
ss
cmp
subl
push
inc
pop
imul
negb
out
dec
xchg
push
imull
mov
mov
sahf
out
add
sbb
stc
mov
mov
jo
fisubs
inc
pop
stos
adc
add
daa
cmp
xchg
cmpl
jl
das
jae
std
andl
inc
and
push
sub
mov
mov
std
hlt
pushf
stos
inc
mov
adc
add
adc
fsts
cmp
subb
sahf
add
roll
je
or
push
sarb
test
addr16
out
leave
pop
dec
jbe
pop
and
xchg
xor
hlt
xchg
sub
push
mov
adc
popf
jne
aas
and
cmp
and
shl
in
fbld
cli
xchg
jbe
rorb
cmp
in
xor
dec
inc
subl
mov
xchg
pop
dec
mov
cmpsl
inc
in
int
fsubl
sub
cmp
popa
pop
push
out
xchg
int
fmull
pop
lea
jp
push
fldt
lods
xor
sarb
daa
xor
xchg
cld
lahf
cmp
jmp
dec
pop
adc
bound
jne
mov
popa
mov
push
sub
ds
adc
mov
add
jl
xchg
lahf
fsts
out
sub
jl
subl
fisttpll
push
and
aas
gs
sbb
out
aad
cmp
js
dec
and
fbstp
push
int
mov
jl
jge
scas
dec
psubq
cmp
in
stc
mov
add
jbe
sti
sahf
inc
add
xchg
pop
push
je
ja
fcoms
ja
xchg
or
mov
fstps
cltd
xor
push
push
pop
cli
js
jnp
movsl
adc
es
aaa
add
outsl
xchg
or
outsb
add
repnz
adc
and
dec
xor
movq
cmp
sbb
inc
arpl
fsubs
ljmp
xchg
ss
and
in
xor
push
insl
mov
lds
inc
push
xchg
loopne
test
add
inc
pop
movsl
xlat
lods
imul
movsb
je
les
and
jae
jo
into
jle
stos
int
push
xor
orl
push
inc
add
out
push
pop
ret
xor
or
mov
outsb
dec
rol
call
or
adc
cli
adc
pushl
flds
sub
js
in
movsb
cmp
dec
lahf
cmp
aad
idiv
iret
push
cmp
jl
mov
sub
lea
adc
lock
mov
jecxz
insb
cmp
mov
push
movsl
cmp
push
mov
popa
and
xor
push
mov
test
pop
xor
adc
popa
xchg
mov
repz
out
aad
sbb
adc
loope
cltd
xchg
jnp
popf
mov
and
lea
subl
push
mov
push
dec
shl
and
iret
xchg
and
dec
mov
push
test
dec
lahf
sbbl
mov
and
sar
outsb
aas
xor
push
out
xlat
dec
or
insl
inc
andl
fimull
dec
outsb
lea
bnd
mov
je
loope
andb
pop
es
adcl
pop
push
divl
outsl
cmpsl
mov
rclb
divl
and
sub
dec
jbe
mov
jecxz
repz
rcl
shlb
xor
add
adc
arpl
pusha
inc
push
push
inc
mov
nop
xchg
and
repz
rcl
shlb
xor
add
adc
arpl
pusha
inc
push
push
inc
mov
nop
xchg
andb
loopne
rclb
and
xor
add
adc
arpl
pusha
inc
push
push
inc
mov
nop
xchg
and
repz
rcl
shlb
xor
adc
add
adc
bound
mov
dec
cmpb
add
adc
and
xor
inc
mov
sub
xorb
mov
xor
xor
adc
jbe
adc
inc
shlb
ret
push
mov
subb
mov
sub
cmp
or
sbb
repnz
inc
stos
push
mov
std
cmp
inc
loopne
in
lock
adc
aaa
loopne
dec
cli
lock
icebp
ret
in
subl
popa
rorl
aaa
insl
sti
sti
aad
sbb
adc
inc
push
test
jne
out
sbb
cmpb
push
out
xchg
or
mov
test
repnz
loop
mov
nop
sbb
xchg
xor
popf
subb
xor
lock
adc
sbb
sub
add
jo
jp
jge
outsl
popf
rep
movsl
ss
fcoms
sbb
push
push
gs
adc
popl
js
nop
push
sub
sbb
lcall
mov
inc
popa
nop
jno
fbld
jb
dec
mov
shlb
and
adc
sbb
repnz
and
xor
inc
stos
push
mov
hlt
jb
adc
aaa
daa
xorl
inc
cmpsl
jle
addr16
push
cmpsl
xor
sbb
or
sbb
or
and
sub
loopne
mov
push
xchg
pop
mov
rorb
and
divb
addl
lock
repnz
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
repnz
and
xor
inc
mov
mov
xorb
sub
mov
add
pop
imul
lret
inc
inc
pop
popa
jle
aam
in
mov
test
dec
add
inc
push
adc
pop
fldl
icebp
jmp
jecxz
sbb
pop
push
dec
fstl
and
push
fs
jb
leave
aas
sub
fwait
out
xchg
test
pop
mov
repnz
pop
repnz
out
nop
in
dec
cmp
es
dec
lahf
mov
jl
ret
xor
adc
and
cmpb
sbb
jnp
xchg
clc
aas
ficoml
bound
jb
aas
scas
cs
shll
or
xor
mov
test
outsl
iret
or
jmp
push
mov
ljmp
cs
dec
jbe
shrl
cmp
add
lock
cmp
sbb
fadds
and
popa
xor
sar
vmread
push
imul
dec
ret
sub
jns
pop
xor
push
adc
imul
and
mov
xor
test
mov
or
ret
add
xor
adc
or
add
test
sbb
inc
sub
jecxz
cmp
stos
shlb
inc
loope
mov
add
aad
add
in
testb
xlat
jae
jmp
mov
xor
mov
mov
mov
fidivrl
push
test
cli
stos
fs
push
imul
shlb
les
push
leave
jnp
pop
sub
out
shlb
lret
mov
aaa
and
mov
aas
jmp
cs
dec
fnsave
fildll
andb
fildll
pop
stc
dec
jae
mov
test
shrw
pop
sahf
or
jecxz
incl
fildl
mov
cmc
adc
outsl
inc
jbe
push
inc
xor
add
sbb
in
pop
push
fldcw
push
jo
loop
jns
adcb
xchg
mov
cmp
cwtl
in
sbb
push
lock
sub
stos
lea
outsb
jae
test
int3
arpl
or
add
dec
sbb
rcrb
movsb
jae
add
cmp
movsl
add
repz
jo
or
add
pushf
test
in
rclb
pushw
dec
dec
lods
cmp
dec
add
outsl
pop
sbb
xchg
adc
aas
cmpl
cmp
cld
pusha
mov
sub
mov
loope
adc
popf
sub
or
shrl
movsb
pop
inc
inc
mov
mov
add
stos
sub
pop
pop
fistps
arpl
dec
cmp
jecxz
cmpb
js
aam
or
fstps
in
or
add
adc
xor
pop
and
pushf
dec
xlat
pop
xchg
outsl
mov
outsl
sbb
jg
clc
ljmp
popf
or
cmpl
lea
sbb
data16
scas
mov
testl
call
aaa
outsl
mov
gs
fucom
pop
adc
xchg
test
out
jb
xchg
lock
pop
jbe
pop
sub
add
mov
cmc
stos
fwait
cmp
aad
cs
push
test
cmpsb
out
dec
repnz
orl
or
push
sarb
and
dec
jb
cmp
popa
mov
jo
test
dec
lret
add
xlat
push
mov
outsl
aad
dec
jge
stos
add
outsb
pop
mov
cmpsb
cmp
add
lret
sub
dec
lea
push
mov
or
sbb
push
arpl
fbstp
adc
fsubl
icebp
scas
movl
cmc
pusha
imul
mov
pop
fcmovnu
inc
pop
pop
repz
fmul
mov
rolb
inc
sub
loopne
inc
jne
fcompl
sbb
fcoms
mov
addl
fsubl
in
push
mov
in
pop
cmp
out
mov
bound
aad
insl
jl
cmc
cltd
in
pop
xchg
fst
incl
jnp
jge
xchg
lock
arpl
mulb
push
imul
orb
adcl
add
mov
mov
mov
sbb
jge
int
xchg
inc
in
xor
aas
shll
aas
loopne
unpcklps
or
xchg
fs
push
inc
jl
mov
loope
jne
pop
and
nop
idiv
pushf
dec
and
faddl
cmp
adc
push
xchg
test
lcall
pushf
in
mov
je
xchg
mov
or
cmpsb
inc
iret
dec
ret
adc
sub
and
daa
jbe
jns
jg
test
call
inc
popa
leave
fsubs
test
std
pop
cmp
dec
xchg
cmp
mov
and
mov
mov
xor
call
call
push
mov
inc
mov
std
lret
inc
call
mov
cmp
jecxz
loope
xchg
pop
rolb
aas
mov
pop
mov
adcb
dec
sub
jecxz
jae
mov
dec
push
lods
and
out
jne
out
ja
pop
and
lret
jo
cli
jg
inc
pop
or
dec
pop
xor
addr16
ljmp
adc
adcl
rcll
ljmp
scas
adc
cli
data16
xor
shr
clc
pop
pop
aaa
lods
in
call
rclb
push
in
adc
pop
adc
fdivrl
jae
xlat
xchg
push
ljmp
sub
fcomps
leave
test
in
fldt
adc
mov
lcall
mov
fcoml
push
jno
andb
jmp
inc
fistpl
lret
mov
leave
imul
out
push
mov
and
je
rcl
mov
mov
hlt
inc
mov
pop
loope
stos
cmpsl
mov
mov
adc
repnz
clc
or
cmp
sbb
lcall
mov
mov
outsb
jb
mov
dec
jle
cwtl
movsl
mov
ret
stc
xchg
rorb
xchg
add
lea
lret
pop
rclb
sarl
call
insl
in
cmc
mov
out
cwtl
xchg
mov
aaa
sbb
fldcw
movsl
sti
push
aas
ljmp
dec
xor
in
dec
cmpsb
sbb
popa
lcall
dec
xor
aad
mov
or
or
js
or
cmpsl
xchg
or
movsb
mov
inc
mov
jecxz
jmp
lds
popf
dec
shll
lahf
xchg
cmp
mov
or
in
cmp
inc
repz
sahf
test
test
filds
sub
pop
add
pop
inc
push
fcmovb
inc
sti
push
inc
clc
mov
xchg
cmp
ret
pushf
lret
jle
fs
movsl
in
stos
stc
lds
sbb
pop
jo
pop
dec
orl
lods
into
icebp
xor
jo
dec
outsl
adc
mov
add
inc
or
sbb
push
xlat
dec
sahf
or
jmp
jg
mov
stos
sbb
push
mov
emms
hlt
inc
jbe
mov
add
jle
das
int
fnstcw
js
cmc
lods
lods
stos
sbb
outsb
mov
pop
push
fisttpl
add
push
and
cmc
mov
jns
cs
test
push
push
addl
movsl
repz
and
mov
mov
and
sub
dec
xchg
sbbl
insb
cmpsl
push
lods
hlt
shlb
and
imul
shlb
add
clc
add
and
out
add
lds
ret
sbb
repz
lea
lock
int
mulb
jbe
xchg
or
mov
nop
enter
jmp
xchg
popa
nop
movsb
inc
or
shlb
xchg
push
pop
sbb
imul
out
roll
cli
aam
jge
jne
or
stc
lods
cmpsl
push
aam
in
push
dec
loope
imul
jmp
mov
or
or
cmp
dec
insl
xchg
mov
add
ds
shll
repnz
add
mov
jns
add
daa
cmp
in
icebp
jno
icebp
pop
jmp
xor
lcall
adc
cwtl
in
popa
jo
out
mov
lock
hlt
pop
dec
in
cwtl
push
sub
enter
imul
inc
adc
inc
cmc
jae
xor
rol
dec
add
cmp
call
adc
xor
les
sbb
mov
das
xchg
mov
or
xchg
inc
call
add
js
lock
stos
xchg
pop
and
pop
jns
sub
pusha
sbb
out
push
mov
aam
scas
pop
sqrtps
adc
sub
xchg
pop
pop
bound
idivl
jmp
xchg
lods
mov
adc
stc
aad
aad
and
je
sbb
pop
gs
and
repz
add
shlb
lods
or
jne
or
push
das
test
outsl
mov
jns
cmc
adc
add
shr
push
sti
sub
adc
cmp
add
rdtsc
and
hlt
stos
adc
xchg
or
cmp
out
cmc
ds
mov
cmc
rcrb
sbb
ret
pop
sar
in
adc
pop
push
arpl
xchg
je
sub
pop
cmpsb
push
push
pop
xor
or
lcall
mov
fcoms
push
call
popf
inc
lods
mov
push
and
insl
shll
jo
addr16
test
test
sbb
jno
pop
inc
cld
lods
xchg
ljmp
adc
sub
mov
xor
or
pop
popf
sarb
jg
add
mov
and
add
mov
popa
inc
fcoml
jle
xor
hlt
push
jo
mov
stos
xlat
jae
aaa
mov
daa
loop
int
inc
pop
or
pushl
mov
push
in
push
cmp
out
ja
sbb
ljmp
mov
fcoml
mov
out
fidivrl
mov
xchg
in
pop
cmp
xchg
adc
mov
sub
jae
sub
mov
stc
loopne
jo
popa
pop
aas
or
sbb
sti
fstl
stos
jno
mov
fwait
mov
adc
scas
lret
or
sub
xchg
jno
push
xchg
cmp
adc
test
pop
loopne
mov
xchg
mov
cmp
pop
or
ljmp
sahf
xchg
xor
ljmp
dec
mov
mov
and
in
pop
repz
mov
test
jbe
dec
mov
call
pop
test
cltd
imul
in
inc
or
push
inc
mov
add
jl
mov
sub
xor
xor
or
jmp
mov
sub
outsb
arpl
add
inc
int3
dec
sbb
mov
push
jbe
pop
int3
test
adc
dec
shlb
and
push
icebp
icebp
not
mov
dec
adc
jmp
rclb
mov
push
shlb
decb
jl
mov
loop
xchg
mov
mov
cmp
add
int
lahf
popf
or
xchg
loop
jo
mov
xor
frstor
xlat
in
cmpsl
fisttps
rcl
push
ret
mov
idivl
and
loop
das
mov
mov
int3
decl
clc
push
test
mov
xor
andb
push
inc
icebp
arpl
pop
sti
pop
jo
stc
dec
pop
mov
cltd
test
lods
inc
add
hlt
js
xor
insb
lods
outsl
data16
or
cmc
cmp
push
test
adc
dec
pop
pushw
ror
lea
and
dec
fistps
clc
aad
arpl
push
add
insl
gs
jo
shrb
or
in
adc
es
data16
out
stc
test
clc
mov
incb
leave
fidivrs
int
lcall
sahf
je
add
push
jmp
or
fcompl
mov
jl
cmp
fadd
dec
and
jns
xchg
hlt
hlt
in
sub
push
mov
sub
pop
add
bound
ret
pushf
hlt
jge
cs
cmp
rolb
shr
jae
fs
fcoms
push
xchg
fstl
les
int3
dec
mov
push
mov
add
cld
dec
in
add
xor
and
leave
decb
jp
fsubrp
das
and
outsb
daa
movl
dec
add
movsb
or
mov
shll
pop
mov
fildl
mov
xor
jns
sub
mov
repnz
rcrb
mov
imul
mov
add
jle
add
add
push
xchg
stc
adc
sbb
adc
mov
xchg
shll
stos
xor
push
mov
sbb
ret
aas
mov
je
pusha
pop
jbe
mov
lods
xchg
or
fisubs
fs
dec
xchg
or
adc
sub
pop
cwtl
ret
inc
sub
and
or
or
inc
stos
mov
stos
jecxz
adc
or
cmp
cld
fnsave
and
lock
add
mov
jge
imul
stc
push
arpl
jnp
das
inc
ss
insl
insb
pop
shrl
cmp
lea
cmc
aad
ja
inc
popf
in
pusha
dec
mov
cmp
xchg
in
mov
lahf
lcall
fwait
std
xor
sbb
add
scas
xor
nop
mov
and
push
sub
dec
dec
sub
add
int3
daa
mov
sbb
pop
shr
adc
xchg
rol
xor
outsb
dec
loopne
adcb
icebp
dec
fcomps
dec
fidivrs
mov
xchg
jl
cmpsl
sub
xchg
ret
jno
imulb
xor
dec
data16
and
jo
pop
sub
data16
test
xchg
cmp
insb
shr
mov
push
add
lods
pop
mov
ret
test
ja
sub
mov
sarb
lods
mov
xor
insb
pop
outsl
shr
sbbl
jecxz
jecxz
fstpl
test
push
insl
movnti
jbe
and
dec
lds
cmpsl
push
mov
xchg
mov
push
cltd
mov
insl
xchg
daa
jbe
shrb
mov
add
outsl
mov
into
loop
inc
push
pop
xor
pop
push
mov
in
insb
scas
and
push
dec
repz
push
mul
mov
vpshad
sbb
mov
adc
cmp
lods
mov
add
cmp
cmp
pop
mov
xlat
repnz
push
mov
or
dec
je
inc
sbb
pushf
mov
repnz
jbe
push
pop
stos
xor
cltd
daa
lret
mov
mov
clc
mov
std
mov
xchg
jmp
fidivs
outsl
shlb
dec
je
jnp
insb
test
dec
ret
mov
fisttps
nop
les
emms
mov
fisubs
inc
adc
push
pusha
stos
xchg
xchg
xchg
xor
leave
xchg
sub
xor
or
jb
lret
ror
stos
and
xor
pop
loope
popf
lods
fbstp
lcall
and
outsb
call
dec
xor
jno
ss
sti
mov
cltd
push
sub
movsb
pop
mov
mov
test
scas
call
popf
adc
adc
rol
fs
repz
dec
mov
jns
jge
xchg
mov
or
idivb
jae
jbe
mov
or
das
sti
push
mov
cwtl
push
pop
not
mov
jle
lock
popa
inc
rorb
mov
xchg
xlat
xorb
push
jg
repz
inc
sahf
and
ret
mov
out
mov
neg
xor
sarl
lcall
lcall
inc
sbb
xchg
fxch
out
subl
dec
nop
push
gs
sbb
jno
test
mov
stos
aad
sbb
pop
xchg
cli
or
into
and
js,pn
xchg
push
fisubrl
sbb
cmpsb
ret
pop
dec
fisubl
sbb
fbstp
loope
flds
les
out
xchg
cmc
pop
push
dec
push
aas
jae
xor
imull
inc
icebp
sahf
aaa
cmp
push
jecxz
fs
ja
pop
push
test
test
xor
mov
loop
sub
into
rcr
pop
mov
mov
push
scas
and
and
inc
out
jae
jne
popa
mov
push
addr16
xchg
mov
push
sub
push
lock
add
sub
pop
sub
mov
bndstx
or
int
hlt
sti
enter
push
clc
and
gs
and
xchg
dec
add
cmp
push
push
sub
orb
add
or
cmpsl
cwtl
jnp
mov
pusha
aas
rcrl
cmpb
or
clc
fs
fstl
pop
popa
sbb
push
or
push
cmp
out
mov
sbb
repnz
sub
mov
jge
inc
ds
mov
sbbb
movsb
shrl
rorl
aad
xor
icebp
int3
jae
adc
int3
mov
mov
test
jmp
adcl
leave
mov
xor
dec
or
icebp
mov
gs
sub
mov
cmc
dec
jl
xor
daa
jl
inc
stos
std
scas
jg
add
inc
lods
jno
cmp
xchg
cmpsb
jne
pop
movsb
cmp
int
flds
and
std
push
outsl
loop
inc
in
xchg
push
adc
arpl
lcall
dec
loopne
lret
jb
push
lret
mov
cld
enter
cmc
jb
xor
xchg
fistpll
jbe
push
pop
in
push
mov
andl
imul
pop
movsl
xchg
sub
dec
loop
jno
jb
jle
bound
jo
add
loopne
leavew
mov
ja
or
or
or
clc
pop
loope
dec
xchg
jecxz
scas
lcall
xchg
cmp
push
push
add
out
jae
fwait
arpl
movsb
pop
push
push
loop
stos
xor
cld
pop
push
cs
insb
xor
pop
lods
mov
fs
mov
psubd
ret
and
cmpsb
shrb
adc
lods
mov
adc
aaa
test
pop
call
jbe
nop
rclb
sub
mov
cmp
xchg
fwait
leave
movntps
mov
adc
pop
and
outsl
xor
out
sbb
movsl
bound
lods
imul
mov
fwait
pop
lds
lods
push
js
int
sub
push
insb
outsb
and
mov
or
scas
or
add
jno
outsb
movsl
mov
sbb
inc
daa
js
or
rolb
sbb
das
daa
nop
lret
adc
scas
shlb
pop
pop
mov
aaa
orb
sbb
js
adc
jecxz
pop
lods
mov
jecxz
nop
hlt
push
adc
andl
mov
mov
inc
jbe
mov
mov
pop
fwait
sub
loopne
dec
loop,pn
div
faddl
ret
dec
les
insl
jmp
fldenv
xchg
or
std
outsb
push
dec
mov
add
add
mov
insb
aas
xchg
shl
scas
push
xor
es
jle
stos
xchg
xchg
push
cmp
daa
lea
sahf
pop
sbb
insb
and
stos
jnp
pop
out
sub
shlb
stc
pusha
mov
negl
mov
cmp
inc
push
pop
xor
fisttpll
and
bswap
imul
mov
cli
loopne
jno
inc
pop
cltd
pextrw
dec
arpl
aad
inc
inc
xor
mov
jne
stos
add
xorb
cmp
dec
arpl
cmpsl
xchg
mov
push
and
sub
sub
xchg
fisubrs
lcall
adc
pusha
dec
xor
shrl
mov
outsl
subl
xor
xchg
xchg
xchg
insl
fisubl
testb
xchg
mov
mov
sbb
ret
fidivs
sbbb
cmp
rolb
fiaddl
imul
scas
adc
adc
rcrb
cwtl
mov
repz
xor
dec
mov
aad
dec
les
into
in
inc
and
scas
cmpsb
cmp
mov
push
mov
dec
pop
mov
ret
scas
inc
lret
or
dec
insl
add
cmp
and
lea
or
cmp
subl
pop
mov
stos
cltd
dec
push
cli
xor
push
cmpsb
aad
dec
mov
movsl
andl
mov
add
cltd
push
and
leave
loopne
mov
orl
add
mov
sbb
inc
gs
scas
push
sub
xor
fildl
test
cmp
mov
xor
subl
pop
out
push
cmp
fwait
divb
enter
jb
push
sub
cmp
ljmp
lods
imul
dec
or
push
nop
xchg
orl
dec
sbb
pop
insl
leave
xchg
xchg
gs
gs
xor
cmp
xorb
in
mov
adc
sub
sbb
repnz
mov
out
mov
rorl
sub
movsb
xchg
mov
dec
jmp
hlt
leave
xchg
adc
or
or
mov
pushf
push
insl
mov
mov
adc
mov
add
mov
jp
in
adc
xchg
adc
or
sti
movsl
pop
sub
jle
insb
ds
mov
shlb
and
adc
add
repnz
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
repnz
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
repnz
and
xor
inc
mov
mov
xorl
inc
shlb
and
adc
ret
adc
shlb
mov
cmp
fstpl
cmp
xlat
out
out
ja
dec
in
testb
mov
ja
pop
push
adc
stos
and
testl
inc
pop
ja
addr16
dec
push
ds
jbe
sub
jl
es
nop
mov
mov
xor
cmp
add
push
insb
jle
push
bound
mov
xchg
xchg
mov
je
xchg
outsl
or
xor
push
lcall
and
outsb
mov
push
imul
xor
mov
jb
aam
sarl
std
call
scas
cmpsb
add
sarb
jle
push
daa
pop
pop
out
add
adc
mov
or
adc
xchg
dec
dec
mov
orb
iret
ds
sarl
into
mov
jb
mov
xor
inc
outsb
mov
push
push
ss
xor
inc
push
testb
jno
ja
push
out
dec
jge
pop
aas
out
mov
push
dec
call
xchg
mov
out
arpl
std
push
out
scas
jge
aaa
mov
les
inc
sub
sbb
ds
cmpsl
xchg
lods
xlat
lcall
clc
fcmove
mov
adc
adc
push
jl
jo
inc
pop
push
addl
shl
call
jmp
sub
or
outsb
add
adc
jno
inc
inc
jg
mov
mov
xchg
fucom
sahf
xchg
scas
cmpsl
mov
push
outsb
addr16
push
pop
push
pop
cs
ds
into
out
out
testl
inc
pop
push
outsb
addr16
push
pop
push
pop
cs
ds
into
js
sub
fildl
jbe
sar
cld
daa
xchg
fstl
mov
iret
nop
ret
sahf
xchg
mov
sub
test
lea
popa
leave
enter
jmp
clc
test
xor
mov
or
xor
mov
test
or
lods
pop
jbe
rcrl
gs
and
dec
ss
decb
iret
push
test
pop
lea
inc
leave
push
mov
pusha
or
rclb
adc
lods
xchg
xor
lahf
jge
adc
push
or
outsl
xchg
shr
adc
mov
fwait
add
xchg
test
and
or
mov
mov
jae
dec
jnp
ja
rclb
int3
clc
and
and
in
out
mov
std
jle,pt
adc
jns
mov
aam
test
cld
dec
adc
inc
lods
mov
cli
in
test
in
cmp
mov
ror
out
mov
mov
dec
jg
xor
jecxz
mov
xchg
fisttpll
push
inc
pop
xor
es
fldenv
push
ja
mov
aad
mov
idivl
pusha
flds
mov
inc
push
lds
sti
subb
stc
lds
and
jns
notl
jnp
dec
mov
xcrypt-ecb
cmpsl
mov
popa
out
inc
testl
pop
ret
bound
test
mov
fistl
adc
jle
lret
mov
inc
and
dec
push
xchg
inc
fwait
jmp
jmp
mov
mov
mov
addr16
in
leave
jnp
xor
or
arpl
jp
dec
or
xorb
xor
mov
stos
arpl
imul
sbb
pop
fisubrs
gs
dec
rcll
sbb
mov
mov
mov
sub
mov
outsl
das
cmp
sbb
arpl
mov
nop
std
lds
mov
pop
cmpb
jecxz
dec
adc
inc
ljmp
add
imul
loope
repz
mov
cld
dec
jbe
rcrl
xchg
add
cmp
js
js
ret
xchg
into
rcrb
fdivs
mov
pushf
mov
lahf
push
icebp
push
mov
popa
sbbb
mov
loopne
fsts
mov
faddl
xor
or
imul
sub
xchg
xchg
int
inc
cmpsb
mov
jo
inc
adc
sub
or
jne
jecxz
lahf
outsb
push
lcall
push
outsl
sahf
jo
and
mov
cmp
push
mov
add
xlat
adc
jmp
push
pop
sub
jno,pn
jp
arpl
lds
sti
sbb
mov
push
lret
add
mov
test
jae
lahf
add
out
pop
mov
mov
cs
arpl
dec
dec
int3
add
daa
add
mov
std
jo
or
fwait
dec
insb
push
and
push
jl
aaa
and
out
repnz
sbb
sbb
mov
cmp
jnp
cmp
xor
test
ljmp
pop
test
xchg
jbe
lcall
sbb
lods
js
sub
out
mov
xchg
mov
scas
xchg
fstl
lock
jp
mov
out
fs
fs
loop
dec
aam
xchg
inc
sbb
xor
movsb
test
dec
fs
push
pop
call
mov
addb
int
lahf
sbb
movsb
mov
push
fwait
icebp
das
xchg
jo
fbstp
mov
ljmp
stc
xor
pop
in
out
stc
leave
fistl
add
mov
push
push
call
std
jno
add
mov
movsl
sub
in
sbb
xchg
repz
repnz
int
mov
pop
cltd
out
lret
sub
bound
and
daa
xor
xchg
mov
and
dec
ret
popa
imul
cmp
sbb
push
dec
cmc
bound
popf
xor
mov
jo
or
hlt
test
xchg
xchg
and
shrl
mov
inc
je
in
mov
mov
add
lock
movsb
adc
sbb
out
inc
lods
add
cmp
push
fistpl
imul
int3
pushf
in
fwait
pop
movsb
sub
dec
mov
add
mov
in
xor
xchg
imul
adc
pop
movsb
sbb
daa
jns
and
add
lock
inc
xchg
insb
sub
ret
dec
cltd
sbb
xchg
sti
pop
js
jle
outsl
dec
addr16
push
repnz
inc
pop
insl
lock
adc
mov
push
aaa
pop
stos
dec
movsl
call
shrb
cli
cmp
mov
loope
lock
stos
addb
aam
add
inc
mov
pop
pop
cltd
loopne
divb
push
xor
xchg
test
jl
sbb
jae
adc
push
icebp
adc
pop
jg
loop
inc
cmp
jp
dec
leave
daa
cmpsb
jnp
sbb
loope
adc
sub
and
orl
fdivrl
push
jbe
or
mov
xchg
xchg
andb
cltd
sub
dec
sti
adc
sbb
adcl
nop
es
popf
dec
movb
push
and
in
push
repz
mov
filds
add
faddl
sahf
inc
jae
mov
cltd
push
add
iret
rep
aaa
ja
insb
or
dec
aaa
cmp
pop
adc
hlt
ja
sbb
jno
push
pushf
mov
or
mov
pop
nop
ret
pop
sbb
call
sub
fiadds
adc
adc
ljmp
inc
cmp
arpl
and
bound
hlt
inc
push
out
sbb
movsb
inc
fs
inc
loopne
jae
xchg
cmp
pushf
xchg
cmp
gs
bnd
iret
inc
push
pop
mov
movsl
push
gs
sbb
clc
sbbl
sets
xor
call
xchg
push
cmpsl
mov
mov
mov
xor
sbb
fidivl
addb
sub
add
push
or
les
adc
push
andb
jae
sbbl
xchg
aad
into
mov
sete
mov
cmp
inc
mov
adc
xchg
pop
cmc
data16
jbe
insb
dec
fldt
pop
mov
imul
mov
stos
xor
jle
ja
outsb
mov
cmp
ret
jno
inc
add
inc
shr
pop
movsl
stos
or
fstl
sbb
test
adc
repz
cwtl
mov
push
dec
sbb
imul
popf
fildll
adc
dec
bound
inc
fistl
inc
cmp
pop
int3
loope
mov
sub
mov
js
ret
or
arpl
dec
inc
push
sbb
loopne
ja
flds
mov
add
ljmp
nop
scas
cmc
inc
fucomip
xor
std
nop
jecxz
sbb
ret
fs
adc
test
leave
iret
out
fwait
loop
mov
popf
jmp
cmp
and
stos
push
cmp
xlat
int
sbb
xchg
xchg
rol
pop
int
push
xchg
cmp
push
cs
push
jbe
jmp
jmp
add
adc
push
inc
lret
xlat
aad
je,pt
mov
sub
stc
mov
mov
jnp
push
xor
cs
test
ret
add
sbb
jae
sub
pop
pop
add
test
cmpb
sbb
cltd
insb
sub
mov
dec
add
insb
pop
hlt
push
sub
popa
xchg
js
ret
jno
mov
push
inc
popf
scas
inc
pop
gs
cmp
lock
add
insl
push
into
adc
mov
shll
jp
insb
pop
roll
mov
rdpmc
std
sbb
inc
jl
inc
mov
outsb
xor
dec
jmp
or
enter
jae
and
movsl
mov
xchg
mov
iret
rcll
icebp
shll
lds
xor
mov
push
movsl
fnstsw
pop
fdivrl
cld
pop
xor
outsl
adc
sbb
movsb
mov
es
sbb
cmp
scas
push
std
mov
pop
ret
addb
mov
adc
mov
adc
xchg
icebp
daa
mov
dec
or
jo
adc
mov
inc
push
je
pusha
adc
imul
push
sub
dec
xchg
dec
xor
popf
push
fdivrs
test
adc
idivb
movsl
cmp
mov
fdivrs
lods
mov
cmp
mov
pop
int
pop
sbb
out
add
or
pop
std
pop
dec
mov
stos
in
mov
pop
in
loop
push
mov
pop
push
mov
scas
add
pushf
push
lret
pop
mov
xchg
sar
test
imul
or
imul
rorb
xchg
divl
test
jle
jecxz
sbb
xchg
iret
loopne
int3
test
into
and
cmpsb
dec
xor
aas
aas
adc
push
movsl
cmp
mov
inc
lock
cmp
jns
jecxz
push
xor
bsf
push
mov
pop
push
leave
in
pop
cmp
or
sub
lahf
jg
out
jbe
and
das
cltd
scas
popa
js
stc
xchg
inc
add
mov
xor
add
inc
adc
std
dec
lret
fistps
test
jmp
dec
xchg
andb
or
lahf
xor
push
mov
inc
inc
popf
mov
cwtl
jle
jae
sub
arpl
lahf
stos
mov
sbbb
notl
xor
insb
push
pop
jne
dec
xor
mov
jge
pushw
repnz
pop
jbe
inc
xchg
into
call
mov
xor
mov
push
xchg
jnp
dec
mov
adc
jmp
mov
inc
add
and
outsl
out
and
ds
insl
jnp
lret
test
cmpsl
jb
or
dec
xchg
insb
cli
mov
sub
sbb
bnd
loope
imul
mov
enter
add
daa
ljmp
inc
jb
cmc
inc
and
inc
jle
sub
cli
xchg
or
cld
outsl
fs
adc
push
add
add
mov
cmp
in
out
and
push
cltd
xor
pop
out
push
mull
add
push
movsb
inc
mov
jge
push
ja
push
mov
mov
add
js
adc
aaa
xchg
or
ss
sub
rep
inc
inc
xchg
adc
ds
jno
push
movsl
loope
push
jb
fists
enter
push
stos
imul
or
repnz
dec
add
push
js
mov
cmp
push
pop
roll
dec
in
cld
insl
das
in
stos
shll
xlat
imul
fimuls
repz
mov
add
fidivrs
mov
fcomps
ret
dec
std
fisubl
cmpsb
pop
xor
add
test
ret
loop
lret
sub
mov
jnp
test
inc
or
loop
fcoms
scas
mov
and
rcr
lcall
faddl
test
inc
xchg
mov
lods
push
sbb
fdivrp
out
repnz
xor
or
stos
add
scas
divl
mov
lods
push
stos
cli
xor
ds
ja
outsl
mull
dec
nop
arpl
pusha
leave
xor
mov
lret
rolb
out
mov
xlat
scas
lcall
faddp
mul
jmp
mov
imul
mov
mov
rcll
movsb
fimull
inc
and
pop
xchg
xchg
xor
dec
dec
enter
xchg
cmpb
out
dec
dec
or
inc
int
add
push
out
nop
pop
mov
int3
out
or
pop
lahf
aas
pop
lea
pop
mov
pushf
loop
push
scas
inc
jae
jle
test
addr16
xor
fidivl
push
push
and
cmc
pop
inc
lods
rclb
or
lret
xor
xchg
imul
test
sub
cmc
jge
and
aaa
jmp
aas
inc
aam
or
xchg
in
sub
inc
dec
mov
jne
outsb
mov
mov
ss
sub
fstps
fs
add
inc
or
xlat
lea
cwtl
inc
add
push
xchg
stos
jle
cmp
out
pop
mov
mov
pop
fidivrs
cmp
cld
add
jle
loopne
clc
mov
push
mov
out
sub
xchg
out
sbb
in
das
add
loopne
cmp
rcl
mov
ss
inc
repz
xor
dec
bound
popa
daa
imul
push
jno
rorb
push
dec
js
lds
jno
int
movsl
test
iret
sub
push
testb
lds
out
nop
rol
rcrl
or
pop
cmp
push
std
cmp
push
ret
push
inc
clc
push
inc
bound
push
iret
xchg
xor
push
fcomp
adc
movsb
and
lcall
cwtl
outsl
lahf
mov
mov
int3
add
andb
je
cmp
lahf
and
push
fldl2e
cli
fadds
mov
adc
pop
gs
jle
push
push
in
ficompl
cltd
rorb
bnd
cmpsb
int
aam
das
nop
sbb
pop
xlat
sbb
xchg
sub
add
hlt
adc
inc
inc
xor
stos
ret
fistpl
add
lods
pop
fisttpl
xchg
xchg
jl
xchg
mov
int
pop
inc
push
mov
xchg
and
lods
adc
mov
loop
cmp
cmp
out
sarl
xadd
fiadds
xchg
push
adc
add
pop
mov
pop
shll
sub
scas
fildll
call
dec
and
mov
dec
pop
icebp
imul
std
or
inc
jecxz
xchg
xor
push
stos
cli
in
lret
out
adc
xchg
pop
jle
xor
stos
lcall
pop
test
in
xchg
fwait
mov
xor
lds
jns
iret
ja
push
or
int
inc
jno
int3
loope
mov
or
mov
xchg
inc
aaa
pop
xchg
fdivr
inc
gs
mov
sbb
jae
jae
push
dec
sbb
sbb
mov
dec
xchg
mov
mul
xlat
adc
xor
dec
mov
lock
enter
dec
cmpsb
popf
inc
cmpsb
cmpsl
adc
ds
in
dec
mov
pop
sbb
ficoml
popa
mov
inc
loop
add
pop
add
pop
mov
and
xchg
adc
mov
out
aaa
sub
push
jle
dec
xlat
cmc
mov
rep
fildll
xorl
add
mov
ss
int
push
xlat
push
outsl
dec
mov
jnp
stc
cmp
add
mov
fistpl
jecxz
push
fwait
push
xor
cmp
fcmovbe
lret
adc
sub
test
mov
lret
outsb
xor
push
inc
movsb
cs
sbbl
mov
mov
and
jbe
js
push
xchg
mov
lcall
xchg
sub
cs
rorl
movsl
ja
fsubs
daa
add
into
mov
mov
add
test
cmp
fldl
jmp
pop
outsb
pushf
out
sub
andnps
sbb
loopne
out
shrb
shrb
push
lret
cmp
jbe
jmp
notl
add
push
aas
je
out
pushf
addr16
sti
cmp
nop
and
adcl
repz
sub
cmp
or
mov
xor
enter
in
mov
jle
lock
cwtl
pop
jnp
mov
inc
mov
xor
test
loop
loopne
notb
lods
jmp
and
inc
hlt
push
or
jg
call
imul
sti
jnp
les
fsubrl
mov
mov
xchg
ret
jecxz
icebp
dec
shl
mov
pop
fucompp
cwtl
mov
in
jecxz
mov
jmp
push
fidivrl
adc
dec
push
jecxz
push
fiadds
fstl
out
ja
ja
dec
bnd
push
dec
movsb
pop
outsl
dec
push
fwait
out
sub
mov
mov
sub
dec
into
mov
data16
jmp
stc
mov
push
cmp
mov
test
inc
lahf
in
lret
int3
sub
and
ret
cmc
subb
mov
stos
xor
inc
jns
push
jne
jnp
mov
int3
cli
out
into
lock
scas
mov
xor
xchg
or
jbe
out
xchg
mov
int3
push
xchg
popl
mov
jp
pusha
xchg
leave
arpl
push
out
sbb
xchg
adc
lods
outsb
inc
or
lods
dec
out
stos
outsl
jge
enter
mov
or
insl
inc
sarb
pop
jno
lods
fcmovu
mov
jg
inc
std
popa
mov
or
popa
push
in
mov
or
adc
les
ja
jne
roll
insb
lods
jb
adc
dec
inc
ljmp
pop
sub
xlat
xor
sbb
test
push
orb
sti
add
push
cltd
sti
adc
xchg
xor
lock
sbbb
push
enter
xor
sub
fsubrs
sbb
and
in
movsl
out
pop
jbe
daa
cmp
add
arpl
shrl
pop
shlb
mov
xchg
dec
push
not
adcb
iret
mov
orl
xor
sub
dec
fmuls
jo
dec
xor
inc
inc
fists
jp
adc
je
push
xchg
lods
or
or
lcall
pop
pop
shlb
jb
imul
dec
fs
adcb
decl
dec
frstor
inc
mov
pop
jmp
push
mov
jl
jl
divb
fistl
cmp
jae
xchg
adc
fidivl
xor
jnp
pop
xor
and
or
scas
lret
jg
cmp
loope
insl
lds
mov
adc
enter
arpl
das
shr
imul
ja
jg
cld
loopne
adc
clc
xchg
cwtl
mov
mov
jno
movsb
cmp
lds
mov
clc
int
mov
das
cltd
lret
add
mov
mov
in
jl
sub
outsb
dec
dec
adc
cmpsl
adcl
fwait
cli
outsl
adc
jnp
adc
in
cmpsb
fstpt
fcomps
adc
and
sbb
rcrl
bound
iret
testb
push
xor
push
or
imul
mov
js
xchg
mov
mov
sub
subl
push
pusha
xlat
ds
cmp
or
adc
adc
xor
cmpxchg
std
inc
pop
sub
inc
insl
mov
push
sbb
negl
push
sti
into
insl
xor
pop
cld
fs
xchg
pop
sti
in
in
dec
or
sbb
mov
mov
sbb
pop
pop
sahf
lcall
int3
repnz
mov
loopne
pop
sub
pusha
loope
out
sti
mov
andb
jl
aas
div
icebp
fidivl
int
mov
mov
xlat
xchg
dec
popa
mov
mov
pop
jmp
or
fisubrs
xchg
push
out
xchg
call
lret
sub
aad
sbb
arpl
lret
loop
repnz
insb
fs
repnz
jl
aam
ret
insl
mov
sbb
mov
cmp
out
adc
pushf
xor
imul
lea
push
arpl
orb
outsl
cmp
jne
inc
xor
sub
rcrl
stos
push
push
clc
sub
jns
push
test
dec
cmp
and
arpl
ret
xchg
push
or
and
mov
std
std
and
pop
dec
cli
add
xor
inc
iret
xor
jno
push
insl
ret
xor
ret
jnp
dec
jmp
pop
cs
cmp
pop
loope
or
iret
pop
addr16
enter
out
hlt
pusha
mov
popa
out
bound
out
push
dec
sbb
lods
mov
pop
test
mov
pop
push
inc
test
out
inc
or
ljmp
inc
fnsetpm(287
sti
out
pop
mov
jmp
gs
jl
sahf
ret
std
std
cld
jge
and
mov
mov
mov
or
out
pop
test
push
sti
inc
in
sub
mov
dec
dec
jp
jl
in
cld
das
in
sbb
mov
push
and
mov
iret
dec
xchg
inc
test
shrl
and
std
or
cmpsb
sub
iret
ds
sub
inc
insb
push
adcb
data16
adc
mov
sub
lret
popa
push
and
push
mov
cld
nop
push
es
sbbl
in
sbb
imul
addr16
pop
xchg
mov
xlat
lcall
inc
shlb
jcxz
mov
push
sbb
add
pop
xchg
jle
shrb
push
mov
jae
in
shlb
sahf
mov
sbb
mov
out
lahf
and
je
mov
cltd
jo
popa
lret
and
cmc
mov
orb
mov
insb
jp
jl
in
daa
insl
add
xchg
sbbb
cmp
xchg
pop
add
repnz
fcoml
xlat
test
xchg
mov
inc
pop
push
outsb
addr16
push
pop
push
pop
cs
ds
into
out
out
testl
inc
pop
push
outsb
addr16
push
pop
push
pop
cs
ds
into
out
lahf
mov
sahf
aas
scas
cmpsl
jle
dec
lahf
pop
push
sahf
addr16
push
pop
push
pop
cs
aaa
fcmovb
adc
out
testb
ds
mov
jle
jns
xchg
call
jecxz
repz
rorl
cmp
or
jne
or
jae
inc
fistl
and
adc
ret
pop
rorl
cmp
outsb
arpl
jae
aaa
ficoml
and
xor
jecxz
repz
rorl
cmp
or
jae
xor
push
testl
repz
xorl
pop
mov
and
mov
push
xor
mov
aaa
cmpsb
mov
pop
adc
and
stos
lock
in
ficompl
imul
mov
std
jbe
in
sarb
sti
sbb
mov
inc
mov
inc
cmpsb
div
jle
dec
push
sbb
jge
sti
jmp
pop
arpl
sbb
pop
dec
add
adc
test
mov
les
add
push
and
lret
scas
call
push
imul
jge
in
inc
pop
je
mov
xor
sbb
mov
stos
xor
add
repz
rorl
cmp
or
jae
inc
fistl
and
adc
movsl
jnp
adc
jl
pop
out
sarb
mov
and
pop
in
inc
jmp
addl
in
fildll
dec
xchg
and
add
cmp
mov
xchg
cmp
or
or
jae
inc
fistl
and
adc
ret
pop
rorl
cmp
or
jae
inc
fistl
and
adc
js
testl
jmp
cmc
shrl
add
and
adc
test
xchg
ds
mov
dec
adc
ljmp
xor
add
xor
fimull
sbb
lahf
testb
pop
ds
and
iret
mov
repz
push
pop
pop
pop
cld
sub
and
push
jge
lock
inc
in
jbe
jge
sub
addb
mov
dec
push
arpl
pop
push
xchg
xchg
xchg
ret
outsl
lock
mov
jnp
xchg
mov
pop
mov
mov
lock
aam
or
push
enter
mov
mov
sub
xor
sbb
jns
mov
xchg
and
inc
push
lea
pop
in
jl
sbb
ficoms
popf
xor
test
xchg
push
push
sbb
push
mov
les
lahf
mov
mov
out
mov
out
mov
insl
das
inc
mov
or
push
and
les
jp
pop
scas
jmp
js
inc
mov
xchg
sbbb
inc
mov
inc
loopne
inc
or
loopne
aam
mov
xor
repz
lret
popf
and
test
mov
mov
lret
test
int
jb
movsl
ds
mov
loopne
int3
push
ffreep
fidivl
stos
jg
push
fisubs
lods
dec
idivl
test
jnp
shll
daa
hlt
jmp
das
xor
in
test
xchg
shrl
in
cltd
out
popa
insb
push
and
lock
cmc
pop
popf
add
dec
push
xchg
test
xor
lret
inc
ds
cld
leave
pusha
aas
pop
insl
mov
in
jecxz
das
daa
sbb
jns
movl
add
stos
mov
dec
mov
lcall
iret
push
insb
dec
stos
test
sti
dec
jns
add
into
pushf
mov
push
testb
cld
fsubs
loopne
jno
in
xor
shll
and
or
or
popf
xor
pop
cltd
jl
insl
lods
sbbl
pop
stos
push
pushl
jle
jmp
aaa
add
push
aad
idivb
lock
xchg
repnz
add
dec
aad
shll
lods
sub
loop
mov
dec
adc
repnz
jmp
mov
cmp
pop
mov
shll
subl
lret
mov
ret
pop
stos
jo
cli
mov
mov
cmp
sti
mov
xor
pop
push
pop
cmp
jns
mov
lods
sahf
mov
jo
mov
test
ljmp
sub
fcomps
mov
jns
stc
loope
xchg
or
sbb
cmp
dec
sub
mov
mov
das
ds
cs
sbb
popa
cmc
mov
push
in
mov
inc
inc
xchg
push
xor
out
or
or
je
jl
stos
dec
ss
pop
fdivrs
jo
inc
inc
push
fmull
mov
inc
test
sub
sti
sbb
add
jbe
push
popf
aas
cmpsb
pop
and
imul
mov
sbb
daa
arpl
imul
cmp
jo
pop
in
sub
je
sahf
adc
call
cltd
sbb
sub
xor
lods
cmp
test
and
push
push
std
push
fldcw
and
sub
fucomp
inc
ja
movsb
scas
iret
fwait
ret
in
push
imul
nop
sbb
stos
jbe
mov
add
inc
jno
xlat
js
sub
push
shrb
push
inc
out
jl
xchg
addr16
loopne
leave
stos
lock
aad
xchg
add
jno
mov
cmpsl
push
xor
fldl
jnp
cld
ret
loop
rorl
divb
imul
dec
mov
adc
mov
imul
int
inc
aam
xor
in
xchg
fwait
inc
cld
adc
jp
jns
xor
stos
out
imul
dec
and
pop
aas
xchg
pop
dec
pop
gs
jmp
xchg
subl
in
sub
xchg
das
adc
dec
idivl
push
sub
xor
cmp
xchg
cmp
pop
or
xchg
jne
mov
fists
jp
mov
into
mov
mov
test
fimuls
sub
stos
fdivr
xchg
ds
ljmp
push
mov
jb
repz
lods
push
or
stos
scas
ss
add
xor
adc
adc
fldl
or
out
lret
aaa
lock
test
insl
loop
arpl
frstor
fisubs
add
and
or
xlat
outsl
xor
mov
xor
sbb
dec
mov
add
mov
dec
dec
fdiv
ljmp
leave
in
xchg
clc
cmp
out
cli
mov
dec
jne
or
xchg
jb
sub
aas
or
flds
popf
xchg
sub
add
mov
shr
mov
mov
pushl
shlb
sub
mov
outsl
into
ds
popa
and
push
out
jg
push
and
push
xorb
dec
xchg
sub
outsl
mov
xchg
shl
loope
push
pop
pop
jp
rclb
pop
sub
lock
inc
jge
gs
loopne
jb
xor
sbb
dec
add
lods
xlat
out
jl
popa
xchg
jno
jp
shl
xor
mov
or
sti
clc
cli
fimull
lods
jmp
lahf
mov
ja
xor
mov
push
cltd
mov
fdivrl
xchg
add
dec
xlat
pop
pop
push
sbb
call
nop
mov
out
mov
pop
lahf
inc
jmp
insl
das
pusha
cmp
sub
ds
xor
notb
test
push
push
jg
pop
out
sbb
out
push
sbb
in
jge
inc
or
jb
xlat
je
lcall
movsl
lret
outsl
xchg
or
gs
mov
in
int
outsl
add
lock
cmp
mov
ja
repz
repz
pusha
ret
repz
mov
cwtl
adc
push
cmpsb
add
fisubs
pop
in
addr16
and
mov
call
mov
ficoms
ss
fcoml
jno
push
sbb
pop
mov
pop
leave
mov
adcl
std
mov
pop
and
pop
vpcmpgtw
cmp
and
dec
jbe
incb
shrb
add
dec
arpl
inc
sahf
ljmp
push
in
aaa
shl
push
xchg
push
cmp
lea
adc
cmp
cmp
in
adc
popf
cmp
aam
gs
add
cmp
push
mov
adcb
adc
addr16
sbbb
inc
xor
cmpsl
push
shrb
xchg
push
fyl2x
inc
and
push
pop
add
cs
out
adc
popf
xchg
lret
dec
inc
iret
mov
pop
leave
mov
loopne
ljmp
out
les
lcall
insl
scas
ficoml
adc
push
add
push
pop
out
decb
in
hlt
adc
xor
cmp
and
pop
xorl
lea
scas
sahf
gs
lcall
imul
insl
or
xlat
xchg
shr
fsubr
mov
and
sub
push
add
test
mov
add
jnp
filds
or
cmpsl
or
gs
cmp
xchg
js
scas
dec
int3
imul
fsubs
popa
idivb
push
out
dec
push
dec
push
pop
scas
adc
stos
cli
cmp
in
dec
sbb
inc
fidivrs
les
or
add
cli
dec
jmp
xor
mov
in
aam
rcll
mov
fwait
into
xchg
subb
mov
divb
adc
sbb
jecxz
inc
push
add
fwait
xchg
cmp
xor
mov
movsl
ds
and
xchg
rorl
cmpsl
push
loope
icebp
rol
xor
fs
pop
pop
or
out
mov
push
fadds
xor
jge
movsl
jp
nop
lret
inc
je
jmp
or
or
add
jns
sub
imul
push
sub
jge
mov
cmp
test
dec
adc
outsb
shl
cmp
imul
aaa
and
pop
aad
xchg
lcall
jne
or
std
not
shll
or
scas
push
and
sbb
insl
add
cmp
es
pop
movsb
jo
cmpsl
mov
add
arpl
out
cmp
gs
add
push
pop
faddl
sbb
out
and
cmpsb
and
nop
loopne
cmp
and
pop
pop
jl
xor
sbb
jno
push
push
aas
leave
jge
mov
dec
arpl
push
xchg
popa
jns
cmp
mov
adc
jl
ds
popf
add
negb
loopne
cltd
cmp
xchg
cltd
stc
fldcw
mov
mov
push
sub
es
and
jmp
mov
loop
shrb
mov
repnz
adc
xchg
mov
and
push
lods
fldl
mov
pop
xchg
and
insb
inc
js
in
add
jbe
inc
jle
fsubp
adc
mov
iret
int3
dec
ss
xlat
mov
fcoms
push
out
iret
adc
add
jg
cmp
cli
xchg
adc
add
lds
inc
shlb
mov
xchg
push
xor
lods
lea
les
mov
lret
jnp
mov
out
add
call
cmc
cmpsl
mov
pop
inc
xchg
movsb
cltd
dec
push
mov
repnz
fucomi
cwtl
cmp
popf
fdivrl
sbb
sub
sahf
push
pop
roll
mov
push
dec
sbbb
jmp
push
push
testl
jp
xchg
notb
push
mov
add
xor
dec
cwtl
dec
cltd
add
into
adc
mov
pop
jmp
cli
sbb
inc
cmovae
js
cs
pop
pop
lock
testl
push
xor
popf
push
sbb
nop
pop
ret
das
push
xor
xor
dec
inc
out
push
dec
jae
aas
pusha
adc
loop
out
adc
jbe
sbb
cmp
outsb
push
outsb
dec
xor
in
inc
outsb
jnp
clc
xor
sbb
or
les
inc
imul
fadd
sub
jl
inc
pop
fsts
sub
scas
cld
shrb
bound
pop
out
push
add
pop
test
lds
shl
or
push
shlb
dec
cmp
fidivrs
jae
out
or
fs
dec
add
fadd
mov
jno
mov
xchg
cmp
and
adc
push
popa
inc
hlt
out
and
adc
popf
inc
les
push
push
cltd
outsb
hlt
adc
jle
adc
cltd
mov
jmp
into
ss
xor
es
in
xlat
fistpll
cmp
dec
add
rorb
out
push
enter
or
mov
and
inc
and
jne
stos
dec
aas
jmp
cmp
fisubrs
adc
scas
cwtl
out
in
jmp
stos
push
push
mov
dec
jmp
jecxz
andps
add
fs
mov
add
cmpsl
ljmp
sbb
imul
jle
mov
pop
mov
lret
fidivrl
jae
ja
test
push
sub
mov
loop
inc
mov
pop
inc
cmp
jne
insl
mov
push
dec
xchg
js
dec
pop
push
in
push
js
movsb
fdivrl
dec
cmpsl
push
pop
in
push
call
and
inc
cmpsb
pop
add
es
out
xchg
cmc
xlat
pop
pusha
dec
mov
and
push
int3
repnz
hlt
and
and
call
stos
loope
orb
jno
cltd
jo
adc
cmp
pop
jg
xor
pop
push
and
jne
mov
mov
adc
pop
sbb
aad
enter
push
cmp
pop
xchg
ja
test
sarl
mov
sti
add
or
pop
movb
and
subb
xorb
mov
ficoms
pop
sahf
cmc
out
mov
ja
mov
orb
shlb
ret
add
mov
data16
mov
outsl
mov
cltd
jmp
nop
mov
sbb
lcall
lret
mov
inc
cmp
xchg
pop
cmpsl
or
xchg
inc
int3
xchg
dec
stos
out
repnz
mov
fstps
or
cs
idivl
sar
push
mov
xor
insl
or
sbb
jmp
out
js
movsl
pop
popa
push
ret
pop
jp
stos
xor
jle
nop
popa
cltd
scas
add
adc
pop
jno
fidivrs
cmpsl
push
lods
pop
and
adc
mov
ret
xchg
test
leave
jecxz
fwait
stc
mov
mov
int
lock
dec
xchg
pop
icebp
and
cmp
out
fdivr
lahf
sub
hlt
add
imul
stos
pop
dec
push
dec
mov
repnz
sub
leave
lahf
jle
std
inc
loope
jge
cmp
mov
xor
lods
ret
out
mov
jl
jns
outsb
lock
pusha
inc
sbb
ja
cmp
jl
pop
xchg
scas
pop
test
xchg
mov
mov
add
fisubrl
mov
mov
jnp
mov
xchg
sbb
mov
movsb
jo
dec
fmull
lods
or
mov
mov
dec
xor
jnp
outsb
cmc
mov
daa
pop
jno
in
scas
fs
push
sbb
imul
fwait
inc
mov
xchg
mov
stos
lds
shlb
xor
adc
mov
jge
in
cli
int3
pop
les
lahf
mov
movsb
dec
popa
subb
mov
jbe
push
subl
jns
add
add
inc
fdivrl
rcrb
xorb
and
fdivs
aad
adc
sub
stos
xor
sub
cmpsb
loope
mov
test
sub
mov
dec
push
popf
or
sbb
or
jbe
mov
push
mov
shld
xchg
fstp
in
sbb
stos
jb
mov
and
push
in
jl
push
mov
cmpsb
jbe
sbb
add
mov
fstpt
aas
std
nop
and
lods
test
enter
movsl
jl
push
push
xchg
or
call
popa
mov
test
mov
les
adc
jnp
push
lahf
rcrl
into
mov
cmc
sti
pop
and
ljmp
insl
aad
jnp
pushf
subb
push
add
cmp
cmp
adcb
xchg
out
pop
xchg
add
pop
insb
xchg
negb
in
shll
loopne
mov
adc
push
fildl
and
and
ds
in
and
adc
rcrb
sbb
xor
inc
inc
daa
lods
fdivrl
dec
lods
rolb
or
dec
ret
mov
inc
or
cmp
sub
into
xor
cwtl
ja
pop
addr16
insb
adc
mov
sbb
lret
pop
cmp
xchg
and
and
bound
addr16
dec
or
xor
or
fwait
push
xchg
xor
ds
rorb
sbb
or
mov
mov
testl
cld
push
inc
push
xor
out
ret
mov
test
push
dec
aad
das
rorl
stc
ds
or
fsub
into
mov
push
add
sbb
xor
popf
mov
inc
sub
out
orb
testl
or
xchg
int
lock
push
lods
inc
jne
js
sub
cmp
mov
cmpl
stos
das
mov
int3
add
jb
xchg
add
dec
sub
dec
daa
lods
push
mov
pop
std
adc
mov
dec
dec
out
pop
xchg
cmp
fadds
dec
rcrb
sub
jae
inc
push
inc
mov
xchg
inc
movsl
add
hlt
fwait
loopne
adc
stos
add
xchg
imul
jecxz
mov
pop
cmpsl
arpl
or
jne
jge
mov
lret
test
jmp
and
push
pop
cmp
sahf
mov
xchg
sbb
in
popa
inc
xlat
insl
mov
push
je
sub
cmp
cmc
loop
dec
or
dec
stos
ds
jle
sbb
add
insl
jge
jbe
and
add
mov
fwait
xor
and
gs
je
adc
jb
push
jb
test
mov
les
xor
or
fldenv
es
mov
test
mov
jns
mov
cmc
pop
imul
out
outsb
mov
les
mov
jle
pop
adc
mov
mov
mov
inc
and
fisubrs
adc
cli
sarb
loopne
mov
pop
mov
scas
mov
sbb
jp
data16
mov
in
inc
in
jns
lret
add
lds
cli
enter
fsubrs
xor
dec
enter
cltd
sub
mov
sbb
jmp
lret
push
cmpsb
cs
push
pop
andl
loop
pop
shrb
jnp
shlb
cwtl
int
cmp
iret
xchg
xor
inc
jno
stos
vmovsldup
repnz
adc
push
push
bound
adc
lret
add
cs
es
cmpsl
xor
test
sti
sbb
mov
in
dec
iret
adc
cmp
mov
loop
xor
rolb
cmp
into
xchg
adc
cwtl
mov
or
xlat
mov
jg
enter
push
out
adc
pop
jmp
push
xchg
inc
xchg
int3
mov
es
in
popa
sahf
outsb
rcrb
outsb
xor
sub
sub
je
mov
int3
int3
add
hlt
aad
lret
outsl
repz
mov
cmp
and
pop
outsl
jge
in
in
jb
fistpl
mov
fdivr
leave
adc
sbb
jae
xchg
sahf
clc
lea
fdivl
nop
jg
sbb
mov
mov
loop
adc
jne
movsb
shlb
cmpsb
sub
sbb
inc
inc
test
inc
mov
mov
xor
gs
mov
or
sbb
jo
add
mov
in
lea
arpl
out
test
ja
cmp
cmpsb
push
lret
jns
jle
or
sar
insl
mov
insb
cmc
jecxz
movsb
test
fbstp
mov
fdivr
xor
add
and
lahf
sbb
pushf
xorb
dec
andb
sub
mov
lods
stos
push
int3
fidivl
scas
jmp
dec
cld
push
push
mov
push
stos
jmp
or
data16
mov
mov
pushf
out
mov
jns
dec
push
sbb
pop
mov
popa
mov
cmp
xchg
or
lret
sub
ret
cmp
orb
mov
cmpsb
ja
dec
sub
push
cmp
lcall
ss
aam
lret
ficoml
stc
mov
add
ds
gs
xchg
inc
fnstcw
or
scas
pop
into
jecxz
push
dec
bound
outsl
nop
testb
iret
sti
jbe
arpl
inc
pop
sbb
xor
pop
inc
in
jmp
aam
or
cmp
mov
mov
lcall
mov
sbb
in
cmpsb
enter
loop
andl
jg
in
loope
gs
sbbb
test
subl
or
sbb
mov
cmp
dec
push
repz
or
push
bound
js
mov
nop
xor
sub
fmul
jg
arpl
in
xchg
out
sub
add
mov
scas
test
out
daa
xchg
or
mov
push
sahf
shll
or
fisttps
out
dec
dec
xor
xlat
fldl
int3
pusha
pop
xchg
pop
fs
xor
sbb
push
addr16
push
push
mov
add
or
ficoml
loopne
test
cmp
lods
in
dec
adc
mov
ja
inc
outsl
sub
popf
hlt
ja
and
push
cwtl
mov
jge
lock
mov
lock
mov
movb
xchg
sahf
mov
cmp
cmp
das
je
popa
out
cld
cmp
and
leave
sbb
sub
or
dec
sbb
mov
lahf
lret
mov
dec
sbb
and
xor
mov
xor
sub
dec
gs
repz
jecxz
loope
jmp
mov
jmp
add
mov
mov
cmpsl
cmc
adc
into
cmpb
xchg
mov
sbb
and
insb
call
fs
push
mov
push
into
xchg
mov
in
pop
jb
dec
fs
subb
xor
and
and
ljmp
cmp
adc
je
fmuls
rorb
out
pop
and
adc
in
je
imul
roll
mov
or
popf
adc
inc
mov
imul
and
push
gs
sub
pop
pop
out
in
scas
push
dec
dec
mov
xchg
aaa
les
jo
mov
shl
mov
imul
sarl
sbb
cmp
or
out
int3
mov
push
adcb
sub
lods
ss
negl
dec
mov
sbb
jmp
fistl
and
adc
ret
pop
rorl
cmp
or
jae
inc
fistl
and
adc
ret
pop
rorl
cmp
or
jae
inc
fistl
and
adc
ret
pop
rorl
cmp
lret
arpl
jae
jmp
xor
je
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
add
xor
and
loopne
sub
push
push
imul
mov
cmpsl
aam
movb
in
adc
add
xor
and
push
push
inc
inc
je
test
mov
stos
cmpsl
aam
hlt
hlt
mov
out
pop
sbb
daa
dec
push
pop
inc
insb
ja
lea
cmpsl
xchg
rcr
cmpsl
aam
stos
test
test
pop
xor
push
jbe
nop
inc
movsb
mov
mov
cmp
adc
dec
sub
aad
xchg
inc
sti
xchg
fdivrs
inc
mov
adc
js
mov
sub
sbb
mov
rclb
push
js
ja
pop
aam
cmp
hlt
or
outsb
adc
sti
add
stos
push
inc
inc
mov
gs
pop
dec
test
orl
cmp
in
inc
testl
push
cmp
in
imul
dec
push
addr16
les
or
hlt
push
and
fisubrs
add
loop
xchg
cmpsl
hlt
cmpsb
xchg
ret
hlt
jecxz
out
pop
sbb
daa
inc
push
push
inc
je
jge
lea
mov
out
mul
mov
popa
pop
push
pop
push
dec
daa
cmp
inc
cmp
fs
xchg
bnd
loope
mov
mov
cmc
mov
pop
aaa
push
push
cmp
inc
and
xlat
out
loope
mov
in
aam
scas
lods
adcb
push
pop
pop
dec
inc
sbb
inc
inc
je
fs
xchg
test
aam
hlt
mul
out
pop
add
xor
and
push
push
inc
inc
je
fs
xchg
test
aam
hlt
mul
out
pop
sub
test
cmp
mov
fstps
mov
ret
mov
add
mov
add
fdivrs
jno
mov
mov
lret
xchg
insl
int
sbb
cmp
inc
cld
cmp
lea
push
sbb
inc
push
cmpsb
sbbb
ljmp
scas
cmp
in
push
xchg
jmp
stc
add
push
cs
push
mov
cmp
in
lret
sbb
roll
fiadds
or
aas
mov
icebp
lahf
add
in
dec
inc
push
lcall
mov
jp
sbb
lcall
cltd
jb
jmp
adc
sub
or
pop
pop
sbb
fnsave
fwait
xor
push
stc
lcall
hlt
xor
jnp
cli
sub
rorb
mov
mov
jl
popa
mov
sub
in
fsubrl
lods
push
std
xchg
lcall
pop
sbb
and
sti
fcomps
mov
sbb
jp
nop
imul
mov
lock
mov
fs
pop
hlt
iret
fxch
sbb
xorb
xchg
xor
movsl
cmp
mov
sub
inc
outsb
or
bswap
adc
sbb
ss
sub
pop
xchg
mov
fwait
int
inc
sub
insl
inc
pop
push
jmp
insb
std
mov
fsubrs
inc
or
pop
dec
es
fcmovnbe
sbb
cltd
movsl
sbb
std
xchg
daa
jbe
dec
sbb
push
fistps
les
jo
ret
mov
enter
inc
jp
inc
push
sub
cmp
dec
ja
jo
in
dec
xchg
in
es
cs
repz
shll
push
mov
popf
out
shlb
pusha
lods
fstpt
cmc
ljmp
push
adc
aam
mov
out
or
and
scas
adc
push
sub
hlt
xor
or
in
mov
fs
pop
jp
mov
daa
pop
test
shl
push
sub
repz
sub
jecxz
dec
xchg
cmpsl
insb
mov
mov
clc
fcomp
jl
insb
test
jmp
int3
pop
pop
pop
dec
rorl
popf
fwait
mov
imul
sbb
mov
in
add
mov
int
and
cli
dec
out
inc
out
ja
mov
sbb
or
outsb
cmp
jl
sbb
jp
or
fnsave
mov
sbb
or
dec
mov
sar
or
mov
out
cmp
add
andps
mov
xorb
push
adc
pop
lahf
jecxz
xor
and
inc
movsl
fidivrl
mov
mov
inc
insb
call
pop
mov
dec
aaa
pop
and
aam
push
mov
ret
loopne
xchg
push
pusha
add
mov
out
lock
xchg
jmp
test
and
inc
adc
cld
jns
rolb
xchg
jp
xchg
cmp
into
fstps
stos
mov
shrl
mov
sti
repz
jae
dec
sti
xorb
ja
addr16
xchg
and
lock
pop
imul
aaa
pop
std
inc
mov
xchg
aaa
or
xchg
imul
inc
inc
into
mov
push
jo
adc
rcl
mov
jmp
inc
lods
pop
push
les
in
fwait
cwtl
push
cmpsb
mov
adc
sarl
cmpsl
out
stos
and
lcall
pop
dec
xchg
lds
scas
or
outsb
push
out
cli
icebp
jge
xchg
in
clc
xchg
xor
add
xchg
mov
dec
loop
mov
call
and
bound
push
sahf
cmp
ret
pusha
mov
xlat
aaa
stos
fldcw
popa
aam
dec
mov
or
mov
outsl
jecxz
nop
test
jl
fistpll
add
rcrl
ret
mov
fidivl
jns
jnp
pusha
popa
jmp
cli
retw
adc
imul
ljmpw
dec
ja
cmp
jmp
push
xchg
and
in
cs
mul
pop
push
or
ss
sbb
lds
rorl
sbb
or
testl
in
sub
push
sbb
ret
pushf
or
sbb
shll
ficompl
dec
pop
jmp
mov
arpl
adc
xor
jns
pop
inc
shl
leave
jl
out
jge
push
push
dec
pop
inc
xchg
xchg
xor
adc
lahf
mov
imul
ficoms
push
mov
xor
cmp
mov
dec
jp
push
cld
ljmp
data16
push
sti
inc
mov
pop
inc
mov
cmp
andnps
xchg
cltd
je
fcoml
rcrb
ja
sbb
pop
jge
sub
fnstcw
jno
dec
inc
cmp
fisubrs
mov
orl
xor
sbb
cwtl
adc
adc
mov
addr16
mov
mov
repnz
xchg
jmp
jo
in
sub
call
pop
cmp
jns
pushl
out
mov
mov
sbb
dec
and
cwtl
js
mov
xor
xor
imul
mov
cmc
imul
jae
cli
jae
dec
lcall
frstor
or
xor
push
les
and
sarb
add
aam
insl
jns
pop
movsl
inc
in
jge
mov
repnz
pop
or
xchg
lods
or
ja,pt
repz
jb
enter
xchg
pop
stos
push
mov
mov
pop
add
push
push
das
push
mov
pushf
leave
inc
jp
shll
add
pusha
pop
push
int3
sub
add
jne
pop
cltd
push
adc
inc
and
dec
test
push
sub
insl
xor
es
pop
xchg
stos
lds
popf
jae
mov
mov
push
sub
shrb
jmp
jl
fstpl
jg
test
lds
push
xor
cmpsb
cmc
cs
inc
sub
mov
cmpsl
out
clc
cmp
push
sbb
lods
insb
mov
test
dec
sbb
sub
hlt
ds
repz
std
dec
xchg
pop
cmpsb
subb
mov
roll
lcall
jb
ret
and
cmp
or
xchg
or
ljmp
mov
cmp
adc
xorb
outsl
rclb
pop
xor
sbb
inc
ds
rolb
insl
push
jg
mov
push
inc
lret
inc
cltd
jmp
xchg
dec
sub
jb
xorl
movsl
adc
loopne
add
xchg
jne
and
sbb
ds
adc
mov
pop
loope
sub
push
inc
loope
and
mov
iret
mov
int
out
sbb
rolb
lahf
jno
lods
outsb
dec
jbe
aas
aaa
mov
xlat
cs
pop
jo
xor
sub
xchg
cli
out
outsb
popf
in
xor
adc
int3
jmp
mov
jl
hlt
xchg
scas
cmp
push
inc
dec
mov
lods
push
sub
mov
enter
mov
xchg
popf
mov
mov
std
and
test
std
xor
lret
aaa
in
push
and
jbe
cmp
push
inc
inc
outsl
scas
loope
adc
adc
cwtl
cmp
pop
xor
movsb
pop
add
scas
scas
sbbb
mov
inc
adc
jl
je
cltd
cmp
jg
xchg
jecxz
xor
jg
mov
lcall
push
mov
pop
jae
adc
xor
cli
loopne
jl
pop
and
sub
mov
pop
xorb
hlt
hlt
jmp
sbb
subb
daa
outsl
dec
xor
mov
sti
inc
xorl
mov
adc
data16
jge
sub
popa
inc
data16
fwait
call
dec
push
sbb
mov
dec
xor
mov
outsl
out
pop
test
lds
movsl
mov
daa
testl
mov
lods
js
adc
mov
mov
loope
testl
mov
mov
aam
xchg
mov
push
sahf
pop
sub
icebp
mov
sub
ja
xor
sarb
out
add
and
rep
stos
cmc
repnz
shll
lahf
lods
aas
adc
into
sti
sahf
cmpsl
pop
into
popf
cmp
aas
cmp
call
mov
xchg
outsl
xor
lahf
sub
push
aam
std
outsb
loop
ljmp
dec
mov
pop
inc
or
sbb
dec
mov
sbb
jnp
es
pusha
cmp
shl
cs
mov
stos
imul
push
movsb
push
fwait
pop
cmp
stc
fwait
pop
into
add
pop
dec
jbe
cmp
iret
fistps
lock
jge
repnz
clc
mov
pop
cmp
cwtl
mov
xor
movsb
ja
push
fsubrl
jbe
aas
add
bound
js
test
push
inc
push
push
lds
adc
cmpsb
add
sahf
sbb
push
mov
xchg
mov
mov
add
ja
addr16
insb
mov
lahf
mov
sub
test
das
add
das
out
fstpl
nop
loopne
inc
push
push
fcomps
sbbb
or
or
adc
fsubrl
gs
sbb
pusha
and
dec
call
ljmp
xor
aad
cmp
mov
mov
sub
out
mov
scas
xchg
bound
inc
mov
and
jne
dec
adc
mov
pop
inc
mov
pop
xchg
movsl
ret
xchg
outsb
pop
dec
add
add
test
mov
and
loope
and
imul
adc
addr16
insb
pop
mov
cld
sbb
rcl
pop
mov
mov
pop
icebp
xchg
mov
xchg
hlt
mov
push
cmp
jns
ja
fsincos
sub
jbe
dec
xor
into
inc
xor
push
sub
pushf
dec
popf
into
iret
inc
ljmp
daa
pop
in
and
cmp
inc
inc
push
xor
mov
rol
pop
loope
and
mov
ret
gs
mov
or
mov
scas
jge
insl
jne
and
cmp
or
aas
pop
xchg
pop
mov
sbb
xchg
fdivl
xchg
lds
sbb
inc
push
sub
cmp
bound
push
cwtl
out
adc
movsl
jne
adc
into
cmp
jecxz
negl
add
lds
leave
pop
jl
fcmovnbe
mov
iret
pop
pop
jg
imul
nop
hlt
inc
mov
sti
cli
jmp
mov
mov
lret
xchg
in
mov
cmp
icebp
or
jp
jle
sbb
mov
mov
or
and
popf
push
pop
dec
mov
xchg
mov
or
inc
pusha
out
sub
stos
inc
aas
pop
push
push
inc
jecxz
stos
push
leave
test
sti
pop
push
imul
clc
sbb
inc
or
stos
ja
mov
int
xor
cmpsb
cs
sbb
daa
and
insl
fidivrl
loop
cltd
pusha
xor
mov
roll
aam
push
push
imul
sub
mov
repnz
inc
mov
sbb
and
dec
adc
push
and
fcoms
add
and
xchg
sub
outsl
inc
paddusw
mov
push
filds
loope
out
adc
mov
and
lahf
push
flds
rep
cmp
sbbl
jle
add
add
adc
xor
sbb
js
shrw
outsb
sub
es
push
sbb
jae
cmp
mov
in
je
xor
fidivrs
xchg
xor
fstpt
call
jo
subl
mov
fisubrl
pop
sub
lods
rcrl
in
cmp
mov
lock
jmp
fldenv
mov
jbe
jae
arpl
addr16
pop
lds
das
fucom
mov
cvtpi2ps
dec
jae
xchg
jbe
inc
add
aad
addr16
in
lret
call
xchg
push
in
cmp
popf
push
jo
ja
loope
mov
pop
or
xor
popa
cmpsb
out
or
fdivrl
jno
in
hlt
sarl
pop
je
lret
test
imull
std
repz
cmpsl
mov
sti
xor
xchg
mov
xor
jb
pop
inc
imul
sbb
movsl
jb
imull
xor
daa
nop
fidivrl
mov
xchg
or
dec
insl
data16
stc
stos
test
int3
xchg
scas
inc
mov
arpl
jne
out
mov
sub
out
jmp
inc
stos
lock
cmp
hlt
mov
shrl
inc
jl
xchg
mov
shll
sbb
push
jmp
push
test
loopne
or
push
ret
lds
push
cmp
out
ret
mov
out
lcall
push
cli
mov
sbb
inc
push
mov
ret
mov
ja
arpl
xorb
jns
orb
mov
cmpsb
pop
out
call
jle
imul
mov
and
sbb
fcoml
mov
bound
repnz
test
or
inc
ja
aad
mov
mov
sbb
push
lods
cltd
imul
add
push
loop
lahf
mov
xchg
mov
stos
in
xchg
dec
push
push
fisubrl
jl
aad
movsl
loope
pop
and
into
sbb
lret
kmovw
cmp
lcall
push
or
push
das
mov
push
adc
lods
inc
scas
in
push
pop
fists
fmull
and
fimull
mov
mov
lcall
sub
imul
into
nop
xor
and
insb
ds
sub
in
sub
ret
xchg
adcb
mov
in
pop
jecxz
insl
clc
mov
je
fcoms
fidivrs
sbb
stos
int3
xor
dec
cmp
sub
pushf
dec
lods
xchg
adc
shll
loopne
sbb
cmova
add
xor
test
daa
push
lods
out
jecxz
mov
mov
jae
insb
mov
pop
in
xor
js
fnstsw
adc
cwtl
xchg
mov
inc
mov
negb
shrb
clc
lds
sub
aas
sbb
mov
adc
dec
repz
sub
scas
mov
aas
add
imul
mov
mov
cmp
inc
cmp
push
in
fistpll
ss
jbe
add
ret
iret
mov
adc
lea
jl
add
pop
bound
addr16
cmp
mov
xchg
and
push
das
lret
mov
inc
xchg
pop
push
fwait
push
jae
lcall
mov
lods
mov
shlb
xchg
mov
jb
sbb
xchg
nop
outsb
push
mov
test
in
fstpl
addr16
mov
insb
cmc
add
push
pushf
out
insl
loop
cmp
ds
mov
mov
dec
std
pop
out
xchg
pushf
jl
push
inc
insb
imul
dec
repz
lret
shll
ja
repz
and
push
in
dec
or
leave
fst
adc
add
pop
dec
daa
repz
nop
repnz
mov
inc
mov
in
std
aad
repz
mov
cmpsb
dec
pop
push
xor
jmp
int
lea
insl
mov
mov
aam
xor
xchg
jno
das
cmpsb
mov
mov
arpl
adcb
push
jg
jno
gs
iret
push
pop
cli
in
pop
sarb
test
push
push
clc
popa
sub
add
mov
xchg
jno
fiaddl
push
out
add
rclb
popl
pusha
push
pop
cmpsl
sub
sub
scas
inc
and
loopne
bound
in
loopne
sbb
or
psubq
push
ja
xchg
scas
outsb
xor
sub
cli
mov
jne
and
jle
xor
cmpsb
xchg
jno
out
jne
je
ficoms
pop
sbb
cmpsb
sub
cmp
pop
loop
int
mov
xor
movsb
or
jno
pop
data16
std
mov
push
sarb
out
pop
stos
inc
xchg
mov
out
mulb
adc
iret
into
rclb
xchg
out
jg
add
hlt
adc
sahf
mov
movsb
push
in
rol
rcrb
adc
pusha
dec
leave
add
pop
test
notb
out
push
test
rcrl
stos
xor
leave
test
pop
inc
ljmp
in
sbb
mov
sbb
int
inc
mov
iret
jp
pusha
ror
mov
mov
add
cld
leave
jne
sbb
int3
and
inc
sub
call
rolb
in
iret
fisttpll
jecxz
in
jge
repz
test
repz
je
pop
add
xor
outsb
fidivl
jg
mov
add
sub
and
add
sbb
aad
fs
call
mov
outsb
pop
push
mov
sub
dec
lret
cmc
push
das
dec
pop
push
repnz
and
mov
arpl
enter
int3
xchg
push
sub
cmpsb
xor
sub
jae
mov
push
xor
addr16
and
arpl
frndint
sub
xlat
push
sbb
mov
into
pop
jne
inc
push
int3
loopne
push
mov
ja
xor
and
pop
inc
imulb
mov
jge
fs
js
aas
dec
test
je
push
pop
clc
stos
xor
int3
dec
js
jb,pn
push
cmp
lret
mov
jnp
cmpsb
push
imul
or
push
test
sahf
mov
shrb
cld
xor
ja
test
je
sbb
sub
nop
sub
fidivs
hlt
cmp
xchg
int3
push
cmp
dec
fidivrl
mov
dec
xchg
mov
mov
adc
add
jb
sub
dec
out
jno
lds
das
nop
xchg
sub
arpl
lret
sub
jmp
fbstp
jae
ljmp
negl
mov
sub
pop
and
xlat
jg
mov
xchg
mov
popf
ds
addl
sbb
ljmp
cmp
and
sbb
int3
sbb
pusha
shrl
xor
push
dec
int
movsl
sub
or
stos
mov
pop
jle
incb
push
inc
mov
subl
cli
sbb
into
lods
imul
xor
addr16
mov
imul
into
movsb
in
add
sub
mov
scas
and
cmpsb
cmp
and
add
dec
cmp
stos
je
push
push
mov
shrl
dec
push
and
ret
jno
bound
cmp
movsl
mov
xchg
sub
mov
mov
mov
and
outsl
xor
ret
addr16
les
sahf
out
ret
xchg
jl
inc
dec
xchg
push
or
cmc
sub
loope
mov
pushf
ficompl
inc
jmp
loope
jge
pop
sahf
mov
rcrl
mov
and
lret
push
out
mov
movsb
mov
int
js
inc
inc
and
or
mov
imul
jnp
cmpb
inc
adc
and
cmpb
lods
or
jge
xchg
adc
call
insb
sar
mov
sbb
mov
mov
dec
in
cmpl
dec
fsubl
call
bound
fstpl
push
rclb
mov
push
int3
sti
sahf
fidivl
cli
jns
mov
sbbb
ds
test
mov
mov
or
adc
or
mov
sbb
pop
pop
sub
nop
vcvtsi2ssl
xchg
and
lods
mov
push
addr16
aas
push
add
jae
gs
dec
subl
hlt
test
fildl
ljmp
out
dec
lret
addl
add
movsb
or
mov
sahf
mov
xchg
or
lret
fcoml
sub
incb
jge
pop
lea
cs
mov
mov
andb
lahf
insl
stc
xor
fucomp
pushf
xchg
fisttpll
mov
mov
push
or
add
sahf
add
jmp
mov
cmp
cmpsb
mov
xchg
push
adc
ja
lcall
jo
or
lcall
sti
jne
jno
lock
testb
or
sub
add
iret
int
das
leavew
iret
pop
mov
insb
or
orl
xchg
notb
lds
sbb
mov
ret
or
push
imul
jbe
sbb
and
mov
filds
mov
les
test
imul
in
aam
sbb
pop
cmp
mov
jno
arpl
lock
push
xchg
cwtl
aas
push
push
cmpsl
adc
pop
fdivrs
es
dec
xor
imul
outsl
fidivrl
mov
push
pop
int
pop
cmpsb
iret
sbb
loop
imul
mov
and
mov
dec
push
leave
mov
push
popf
psrlw
je
dec
pop
sub
aam
add
ds
push
xchg
xchg
test
pop
ds
and
push
push
inc
inc
je
fs
xchg
test
aam
hlt
mul
out
pop
add
xor
and
push
push
inc
inc
je
fs
xchg
test
aam
hlt
mul
out
pop
add
xor
and
push
push
inc
je
fs
pop
test
aam
mul
out
pop
push
pop
xor
push
inc
inc
hlt
ja
imul
mov
shlb
or
sbb
cmpxchg
shrl
inc
cmpb
mov
jp
jno
push
fbld
fdivr
add
adc
loope
icebp
xadd
rcrl
dec
mov
subl
fisttpl
push
fisttps
into
xor
add
adc
inc
push
aaa
daa
pop
aaa
cmpsl
inc
xchg
push
stc
mov
lahf
popa
test
and
and
jb
push
mov
jne
movsl
cmpxchg
inc
mov
scas
mov
dec
add
mov
inc
mov
idiv
loopne
pop
loop
xor
mov
cs
mov
cmp
sahf
jo
inc
mov
cwtl
outsb
adc
push
jbe
in
and
dec
dec
dec
insl
jno
lret
jo
out
inc
push
scas
and
mov
push
aad
iret
loope
icebp
ffreep
movsb
sarl
pop
adcl
mov
pushf
mov
pushl
lock
cmp
setb
insl
xchg
inc
jo
stos
mov
into
and
push
pop
pushf
lcall
femms
jo
mov
inc
lahf
icebp
inc
nop
pusha
xor
inc
xchg
scas
cmp
dec
fbstp
out
jnp
insl
psrlw
mov
rorl
push
mov
xorl
cmpsl
inc
mov
sbb
mulb
insb
loope
sahf
pop
lods
dec
mov
jge
add
jmp
popl
int
shll
stos
pop
lcall
mov
mov
mov
adc
sub
cli
adc
popa
mov
fs
bound
cmp
mov
jg
outsl
xchg
lahf
popa
jno
inc
scas
push
fbld
iret
xor
add
adc
loope
icebp
aas
shrl
pop
mov
outsl
xchg
lahf
popa
jno
inc
scas
push
fbld
iret
xor
add
adc
loope
cmpsl
mov
jo
arpl
mov
cld
or
cwtl
lds
jg
repnz
inc
mov
mov
sbb
inc
aas
int
pop
lcall
jl
fmull
push
adc
aad
mov
enter
pop
fbld
and
dec
or
bound
rolb
fs
push
adc
jae
insl
loope
lods
sbb
inc
add
lahf
movsl
inc
jmp
inc
cli
in
sub
dec
mov
insb
fists
push
sbb
in
dec
and
jmp
loop
mov
or
mov
repnz
and
or
ja
push
adc
mov
js
push
mov
fiadds
push
fisubrs
mov
xchg
ret
or
mov
enter
adc
dec
inc
pop
inc
je
and
jne
push
movsl
cmc
fxch
scas
ror
bound
test
dec
fldl
jnp
mov
mov
inc
mov
adc
test
lret
add
dec
addb
xchg
jo
clc
loop
xchg
add
std
insl
mov
pop
hlt
insl
cmpsl
fstps
push
movntq
inc
mov
pop
xor
cmp
out
or
inc
cmpsl
inc
jns
mov
mov
inc
fcmovne
out
push
push
add
fistpll
xchg
push
pop
loope
movsb
aas
scas
psubb
sbbb
lcall
pop
jp
xor
push
jae
sub
or
sbb
insb
ljmp
lret
in
cli
bound
fnstcw
dec
jp
lahf
pop
scas
aas
fisubrs
inc
test
cmp
or
pop
lahf
pop
jb
fcomps
scas
arpl
adc
in
test
int
pop
cmp
popf
xlat
mov
cmc
sbb
push
add
push
xor
lods
xchg
mov
pushf
clc
pmaxub
xchg
xchg
jecxz
movsl
mov
mov
jecxz
call
fistpll
jg
aaa
popa
jo
fwait
stos
rcr
rolb
gs
jmp
fs
enter
jae
xchg
mov
mov
add
jno
cld
leave
push
repnz
and
fs
cmpsb
mov
addl
cli
cmp
nop
cmp
push
dec
iret
dec
push
cmp
outsl
test
push
cmp
fidivl
mov
lea
out
or
and
lret
int3
dec
aas
faddl
mov
adc
adc
scas
pop
and
adc
fcmovnu
repz
pop
js
and
mov
adc
outsb
inc
stos
mov
and
push
fsubr
dec
cmc
dec
and
imul
fsts
mov
fldl
push
int3
lds
or
fnstcw
xor
insb
adc
out
test
divl
push
xor
and
clc
adc
decl
rcl
jle
stc
clc
ljmp
arpl
aaa
inc
mov
mov
adc
adc
cmovp
hlt
flds
jg
mov
and
clc
loop
jne
outsb
cmpsl
dec
call
lret
popf
out
xchg
adc
pop
orl
xchg
mov
or
xor
fnstcw
jmp
loopne
push
and
mov
les
mov
ja
mov
adc
pop
mov
add
cmp
xor
out
test
and
scas
lds
jmp
sub
dec
xchg
and
clc
jecxz
out
test
sub
and
arpl
cmp
sub
sub
or
mov
js
sub
movd
or
mov
fwait
test
hlt
scas
mov
addr16
outsl
out
in
pop
das
adc
or
mov
popa
sbb
lahf
push
lcall
fstps
sub
xlat
leave
mov
mov
xor
in
sti
push
scas
or
out
mov
cmp
mulb
sub
cmp
push
test
cmp
inc
imul
sbb
add
dec
sub
pop
xchg
mov
insl
arpl
repz
shll
mov
mov
lods
push
mov
das
mov
les
in
mov
mov
in
or
mov
int3
xlat
loopne
pop
addb
test
jg
mov
fucomi
jb
and
out
sti
mov
pop
mov
mov
inc
cmp
jne
mov
cli
lods
jns
adc
jg
dec
mov
sbb
xor
fbld
pop
data16
ja
stc
in
dec
push
bound
jnp
vpmacsdqh
xchg
mov
xor
dec
add
repz
fcoms
cmp
outsl
inc
sarl
and
push
mov
dec
cmp
sahf
and
cmp
dec
sbb
or
sub
mov
popf
int3
cld
lea
and
subl
mov
mov
in
xchg
jns
push
frstor
test
bound
add
iret
mov
ret
shlb
or
sub
lea
lret
bound
lret
std
sub
ja
jne
movsb
add
dec
mov
add
xor
mov
sbb
push
ret
or
mov
and
fildll
int3
es
out
jecxz
xor
sbb
lods
cmp
jle
mov
inc
mov
xchg
xor
mov
mov
sti
jbe
sub
aam
sbb
adc
hlt
repnz
xchg
cltd
sbbb
xorl
mov
push
fistps
hlt
lods
cs
aaa
and
ficoml
sub
pop
stos
jae
adcb
ret
pushw
dec
aaa
lock
sub
int3
in
xchg
dec
add
mov
loopne
fs
rcrl
dec
push
int3
mov
rcll
or
pusha
mov
enterw
hlt
fsub
lock
push
sbb
and
addr16
push
scas
outsb
push
inc
pop
sub
sbb
pop
push
popf
push
loope
pusha
add
xchg
adc
dec
mov
xchg
imulb
icebp
adc
gs
sub
xchg
inc
pop
mov
fbld
xchg
stos
scas
mov
out
pop
xchg
push
ret
shrb
imul
mov
xor
out
stos
sarb
lock
xor
push
out
leave
cmpsl
mov
xchg
push
jae
testb
mov
fiaddl
ficoms
push
or
stos
out
xchg
daa
and
and
iret
in
sbb
arpl
mov
cltd
addb
push
cmp
push
cmc
sub
into
mov
inc
or
push
pop
mov
imul
add
sub
jp
mov
adc
gs
not
sbb
out
add
mov
jb
fs
sarl
pop
insb
mov
inc
push
inc
mov
rol
push
sti
dec
jbe
cmc
lcall
cmp
add
in
or
xor
ret
pop
sbb
scas
enter
adc
fwait
ret
sbb
cmpsb
movsb
ja
add
js
orl
rcll
cmpsl
cltd
test
jne
std
daa
in
adc
and
in
jge
xchg
fs
mov
ljmp
dec
ljmp
dec
test
bound
add
out
testb
sahf
cmp
into
mov
mov
mov
inc
fildl
adcl
mov
mov
xor
test
mov
sub
pop
add
stos
add
xor
push
push
sub
mov
sbb
loop
pop
repnz
icebp
daa
stc
outsl
fldenv
in
adc
pop
jae
sarb
cmpl
inc
xor
adc
inc
xchg
scas
inc
push
test
push
push
xchg
bound
xchg
pusha
mov
fstps
dec
ljmp
inc
inc
cli
ljmp
test
mov
fwait
inc
daa
lods
sbb
insl
lahf
aam
jp
lahf
scas
xchg
aas
mov
mov
fldcw
dec
dec
jne
cmp
lods
xor
clc
sti
in
ja
adcb
xchg
add
icebp
jae
sbb
lock
sub
mov
fmuls
xchg
cs
test
stos
inc
lcall
cmp
xchg
and
dec
cltd
mov
subl
pop
lods
xor
inc
mov
or
les
mov
mov
mov
cli
adc
xchg
imul
push
mov
mov
clc
push
jle
daa
lret
cmp
mov
xchg
inc
mov
jl
pop
and
cmpsb
inc
sub
push
and
out
movsl
flds
add
outsb
xor
loopne
mov
outsb
push
out
mov
lds
cltd
or
dec
xlat
addr16
outsl
push
lods
pushf
fwait
call
jne
data16
sbb
shll
aad
ss
add
dec
sbb
arpl
pop
mov
pop
loop
loopne
pop
popl
repz
jns
out
mov
dec
jns
je
inc
outsb
gs
xchg
or
ja
ret
push
popa
ret
test
xor
push
sub
or
push
jp
mov
cmpsl
xorb
jo
cmp
jecxz
push
popa
ret
out
sub
cmove
js
lods
enter
decb
mov
repnz
lods
cld
fs
xchg
cwtl
and
push
ljmp
rorl
inc
sub
adcl
jns
push
xor
cmovne
mov
scas
cmp
shr
or
mov
sbb
push
fiadds
repz
or
in
ret
rcr
shl
or
mov
aam
lahf
mov
jne
xchg
lahf
lret
xchg
fwait
mov
pop
cmc
pop
jae
lods
arpl
mov
lea
scas
push
int
push
icebp
sti
cmp
dec
fisubrl
std
mov
adc
inc
pusha
xor
mov
es
jecxz
pop
pop
mov
cmp
fbstp
push
push
inc
xchg
adc
sub
pop
ds
imul
adc
dec
mov
and
add
push
mov
repz
cmp
fstl
pop
lods
jno
stc
les
mov
push
outsl
add
fidivrl
lret
xchg
loop
lret
or
jle
mov
cmp
pop
divl
cmc
and
push
cli
sbb
outsl
inc
repnz
jae
pop
mov
pop
loop
xlat
inc
adc
xor
imul
int3
aam
sub
jns
insb
jo
sub
sub
loop
push
stos
out
adc
jg
pop
loopne
mov
lret
sub
pop
mov
bound
dec
add
mov
xor
xor
jl
push
fiaddl
popa
cmpsb
loop
mov
jne
jo
dec
sub
adc
shl
sub
ljmp
or
cmp
ret
in
scas
jae
in
mov
xchg
dec
cmp
jmp
inc
xor
mov
std
or
mov
lahf
dec
add
outsb
jo
xor
cmpsb
push
xchg
add
xor
push
dec
notl
xlat
in
int3
push
push
cmpsl
inc
fbstp
push
jge
scas
mov
outsb
loope
arpl
cltd
cmp
loope
jle
dec
push
dec
fmuls
xchg
fisttpll
mov
sub
lcall
bound
mov
lcall
adc
or
lcall
loopne
subb
push
aaa
call
stos
inc
add
jmp
dec
cmp
jbe
cmpb
addl
cmp
ja
sub
xchg
jle
push
push
lds
xor
mov
mov
cld
mov
gs
or
enter
mov
jg
cli
negb
xchg
and
mov
fldcw
jmp
or
pop
stos
or
and
sahf
and
std
mov
ficoms
es
rcrl
cmpsb
adcb
cli
jp
push
xlat
mov
sub
mov
repz
xor
dec
adc
or
fcmove
cmpsb
sub
sub
cmp
je
aam
orl
mov
ljmp
negl
sbb
loope
ret
imul
mov
jmp
cltd
xchg
hlt
mov
jnp
mov
stos
mov
insl
mov
inc
xchg
sbbl
sbb
out
loope
jb
cltd
clc
xchg
jns
int
adc
in
sub
cmpsb
data16
sub
pop
xor
cld
sbb
fcomi
jl
dec
or
xor
int
mov
and
out
imul
mov
sub
ss
scas
add
loopne
lds
fdivl
and
jae
imull
in
or
adc
dec
fs
sub
je
xlat
pop
push
in
fiaddl
loope
stos
mov
insb
insb
daa
push
incl
mov
test
iret
xchg
call
mov
mov
out
fneni(8087
pop
or
cmp
inc
adc
push
sub
mov
sahf
push
lods
ds
mov
dec
out
xor
sarl
sbb
push
xor
xchg
popf
in
pop
or
imul
int
mov
sahf
push
sar
inc
xchg
inc
movsl
inc
mov
rcl
adc
xor
cmp
jmp
fldl
add
add
or
mov
adc
div
loopne
mov
addr16
aam
or
icebp
dec
pop
inc
imul
iret
cmp
fimull
fmull
divl
push
adc
movsb
sti
enter
and
add
lret
iret
cmc
cld
mov
aaa
rcll
xor
out
mov
mov
xor
sub
icebp
test
mov
pop
pushf
hlt
inc
fimull
es
jle
or
sub
xchg
xchg
add
mov
jecxz
sub
pop
in
sar
inc
in
fnsave
jns
cmp
mov
ficoms
sbb
cmpsb
jb
push
xchg
inc
pop
je
xchg
inc
add
xchg
das
add
vxorpd
jmp
push
popa
imul
jns
pop
sbb
lock
pop
lods
out
adc
pop
and
add
xchg
jnp
call
dec
xchg
jo
add
pop
leave
sbb
cs
jo
stos
sbb
cwtl
xor
iret
sub
mov
test
add
mov
insl
sbb
lods
in
or
dec
je
inc
stc
pop
or
jle
jns
pop
test
ljmp
adc
push
xor
mov
jns
cmc
jp
pop
jmp
pushl
xchg
sub
pop
jnp
push
dec
test
mov
push
mov
fcomp
sub
es
xchg
rclb
cmpsl
jg
out
lods
imulb
jne
and
pop
sub
inc
push
jno
sbb
or
xchg
and
pop
cmp
shrb
jmp
ficomps
push
shl
stos
das
pop
div
lods
lods
mov
call
mov
aam
nop
aaa
aas
cmp
sbb
jp
or
lcall
mov
adc
fidivs
add
mov
sahf
jl
imul
or
test
pop
icebp
inc
dec
repz
pop
enter
incl
xor
daa
leavew
jecxz
pop
icebp
dec
loopne
inc
cltd
mov
xor
pop
gs
dec
cmp
jl
pop
sbb
ja
outsb
cmp
sub
mov
clc
xchg
inc
scas
outsl
aas
movsl
lahf
popf
sub
xor
cli
push
mov
imul
mov
enter
adc
and
lret
jo
inc
data16
outsl
xor
shrl
dec
inc
inc
iret
and
loopne
cmp
es
dec
jmp
out
jae
or
test
mov
fidivrs
cmp
jne
addr16
ret
xchg
out
xor
testl
adc
test
loop
insl
add
dec
mov
xchg
sbb
imul
jecxz
mov
lret
jecxz
sbb
scas
pushf
mov
sbb
dec
call
and
inc
cmp
das
shlb
enter
jp
jmp
xor
sub
mov
xor
or
or
mov
lcall
jp
cmc
bound
sti
insl
fisttpll
dec
push
push
rcrb
rcrb
xchg
adc
into
les
add
mov
push
jbe
pop
daa
lahf
pop
add
inc
mov
lcall
pop
icebp
icebp
push
cmpsl
outsb
cmc
pop
xchg
xchg
out
pop
add
test
popa
aaa
adc
into
fmulp
xlat
xor
call
push
xchg
and
ja
dec
jo
in
sbb
les
xchg
pusha
lret
movsb
int
std
adcl
in
jnp
stos
push
arpl
mov
sbb
push
ret
lods
adc
ficoms
out
mov
sbb
icebp
inc
sub
pop
lds
daa
roll
call
pop
mov
test
lock
push
push
cmpsl
shl
and
scas
mov
lea
shrb
scas
inc
xchg
fsubs
xchg
es
mov
cli
push
inc
xchg
push
or
mov
test
and
movsb
mov
xorl
outsl
std
mov
cmpsl
push
addl
pop
fs
cmp
dec
cmp
adc
mov
jp
mov
dec
dec
inc
pop
test
mov
dec
dec
sub
add
mov
add
rorb
mov
lahf
movsb
or
ret
and
clc
xlat
addl
mov
or
and
sub
aas
cs
dec
sub
in
clc
mov
mov
cmpl
data16
sub
idiv
xor
xchg
mov
inc
inc
xor
jae
popf
xchg
out
aam
sbb
in
dec
les
inc
push
lret
mov
sbb
shl
mov
test
cmpsb
out
and
sarb
mov
lret
jg
ficoms
cmp
adc
lret
sbb
dec
fld
push
incl
pop
push
stc
orl
mov
xchg
sahf
inc
mov
push
out
je
repnz
mov
sti
rorl
in
cmp
dec
lret
sub
and
sbb
int
push
ret
jae
std
jmp
mov
imul
push
pop
pusha
int3
sub
cmpsl
pop
rcll
sti
scas
lock
into
push
add
jecxz
scas
repnz
and
cwtl
or
stc
add
lahf
inc
push
cmp
cmpsb
je
mov
lret
sbb
imul
lods
cmp
not
mov
inc
loop
add
add
aad
rclb
outsb
lret
aaa
popa
mov
in
push
or
push
aas
mov
fists
sub
or
orl
aad
jle
or
outsb
stos
xchg
data16
enter
jne
dec
nop
push
xor
jns
shl
push
cltd
mov
cmpsl
pop
sbb
jl
sub
push
lods
aam
stos
adc
xor
addr16
int3
jns
gs
xchg
clc
jno
mov
lahf
adc
push
rcrl
add
test
mov
and
sbb
insl
ss
lahf
rolb
cld
jge
mov
out
mov
pusha
cmp
or
fimull
jb
pop
push
xchg
add
push
shl
pop
cmpsb
inc
cmpsb
ds
js
rcr
mov
xchg
mov
ret
cmpsl
sub
int3
mov
dec
and
lock
xchg
roll
jmp
add
popf
shll
or
push
outsl
lret
iret
imul
inc
shll
ret
inc
dec
or
jge
xchg
mov
xor
xchg
mov
jne
push
cmp
jnp
push
sbb
test
outsb
jae
and
imul
ficomps
arpl
test
xchg
inc
push
leave
pop
dec
xchg
push
mov
loope
mov
dec
mov
fistpl
fsubr
fstps
push
fsub
mov
jnp
push
das
lods
inc
lea
push
mov
testb
adc
xchg
ret
cmp
push
addl
inc
mov
sbb
push
cmp
and
sub
shlb
push
cltd
cmpsl
js
out
or
fldenv
or
mov
cli
dec
mov
mov
mov
and
shrl
push
adc
loope
xor
aad
inc
jb
jne
mov
lds
sub
lods
xor
outsl
adc
xor
xor
test
fldl
xchg
lret
ds
xorb
enter
aaa
fdivl
imull
or
sbb
scas
and
inc
jnp
je
fisttpl
jp
imul
pop
sbb
inc
ja
mov
roll
imul
cmp
dec
das
xchg
popl
scas
mov
shrl
jl
mov
dec
js
adc
aaa
outsl
inc
mov
inc
add
cli
in
fbld
mov
test
xor
pop
cltd
ds
or
lahf
sbb
add
push
xlat
jl
push
sub
out
inc
mov
cmp
inc
nop
xor
add
movb
and
lock
pop
shr
xor
mov
daa
jno
movsb
cltd
add
mov
pop
scas
lret
arpl
in
dec
int
popf
push
push
test
mov
icebp
dec
les
rcrl
dec
mov
subl
mov
and
xor
add
adc
loope
icebp
aas
shrl
pop
mov
outsl
xchg
lahf
popa
jno
inc
scas
push
fbld
iret
xor
add
adc
in
aas
fldcw
aad
mov
outsl
xchg
lahf
pusha
jne
inc
scas
pop
fbld
fdivp
sub
das
xchg
pop
mov
out
push
pusha
sahf
jo
adc
pop
inc
dec
add
imul
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
push
and
adc
movsb
jmp
mov
add
add
add
add
add
add
inc
add
add
jo
fldl
faddl
mov
add
add
add
add
add
add
add
test
lods
add
xor
adc
sub
pop
add
add
out
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
add
icebp
add
movb
add
add
add
add
or
sub
add
add
xchg
add
add
add
add
add
add
data16
add
inc
add
out
add
add
mov
add
add
add
sbb
movb
add
mov
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
stos
add
lea
faddl
pop
add
add
add
out
add
mov
add
add
add
jns
add
add
add
add
fldl
mov
dec
add
add
add
add
jo
pop
add
pop
add
sub
add
add
add
add
add
add
add
add
add
add
jno
dec
add
add
pop
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
push
add
add
add
scas
add
imul
add
add
add
add
cmp
pop
add
mov
add
add
add
add
add
add
add
add
add
pop
add
jbe
pop
add
add
add
add
xor
sub
add
add
daa
add
add
add
add
add
test
add
add
add
add
add
add
mov
add
add
test
scas
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
nop
add
loopne
dec
add
add
add
add
add
add
add
add
add
add
add
add
mov
lret
add
add
add
add
xor
add
les
incb
dec
add
add
add
xchg
add
adc
pop
add
add
add
add
add
mov
add
add
fadds
test
sub
add
xor
sahf
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
pop
add
dec
add
add
inc
add
add
pop
add
add
add
add
add
and
add
pop
add
add
test
add
add
add
add
inc
add
add
cmp
inc
add
add
cmp
add
or
add
add
add
add
add
popa
add
add
add
xchg
insb
pusha
and
out
and
pop
xchg
pop
das
jmp
hlt
fildl
imul
push
pop
dec
jmp
loope
dec
pop
mov
xor
hlt
and
mov
fwait
pop
insl
out
mov
lret
push
mov
xor
pop
add
scas
data16
push
movsl
xchg
push
jnp
mov
std
daa
fildl
pop
das
sub
mov
xchg
mov
sti
add
js
dec
sbb
jl
pop
out
xor
mov
cwtl
mov
inc
push
jnp
pop
mov
test
and
lret
jne
popa
add
or
jo
popf
cmc
cmp
mov
in
adc
mov
push
aad
in
xchg
adc
out
lret
ljmp
and
mov
cmp
out
bound
mov
je
movsb
mov
test
out
in
inc
in
or
ja
push
fwait
sub
sbb
sub
dec
pop
lock
or
ljmp
lods
adcl
aad
movsl
icebp
fldcw
inc
fs
xor
push
andb
in
iret
push
icebp
jp
and
pop
dec
out
xchg
sahf
pushw
ja
cwtl
pop
addr16
dec
sbb
cmp
test
jo
mov
push
nop
pusha
push
shrl
xchg
out
sub
popf
xchg
push
or
cwtl
dec
or
fwait
je
js
fiadds
cwtl
mov
aad
mov
adc
push
mov
adc
mov
rcl
out
in
cld
inc
std
sub
popl
or
out
fistl
int3
xor
xchg
pop
push
pop
test
xchg
sbbl
iret
std
lock
pop
fiadds
addl
jl
adc
mov
stos
pop
adc
add
jge
adc
mov
testl
cmc
pop
inc
leave
mov
movsl
inc
mov
lods
xor
dec
sbb
add
mov
xor
inc
push
ffree
mov
scas
sub
sub
and
lret
pop
sbb
and
dec
push
or
dec
push
add
sbb
hlt
mov
ret
iret
sub
sbb
jns
jmp
bound
outsb
mov
cmp
imul
cmp
les
xchg
in
inc
fwait
cmpsb
pop
xchg
lcall
push
jae
stos
push
bound
imul
stc
pop
and
roll
jg
mov
cltd
adc
cmpsl
add
jge
dec
incb
es
xor
fs
xor
in
jae
mov
jp
hlt
jbe
jne
jmp
xchg
adc
add
mov
stc
ret
lcall
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
