call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
pop
dec
dec
jl
insb
insl
adc
sub
fsubl
cld
std
in
in
pushf
pushf
mov
pop
dec
dec
jl
insb
insl
sbb
or
cmp
sub
int3
int
cld
in
in
pushf
clc
mov
pop
pop
dec
dec
jl
insb
insl
sbb
or
cmp
sub
int3
out
cwtl
ret
fucomi
shl
fadd
ficoml
cs
or
loop
xlat
sub
pop
push
xor
mov
clc
xor
imul
pop
loope
ss
fisubl
jno
imul
mov
dec
lea
sbb
out
cmpsb
int3
add
xchg
cmp
add
popa
sbb
dec
pop
or
cmp
sbb
ret
int
and
xor
lret
in
mov
popf
cmp
cmpsl
xchg
pop
loop
insb
sub
fsubr
add
adc
mov
mov
ret
mov
push
int
ret
mov
movsb
mov
cmpsb
leave
add
test
fnstsw
dec
dec
jl
insb
insl
sbb
or
cmp
sub
int3
int
std
in
in
pushf
popf
mov
sbb
xor
cmp
sub
pop
inc
jns
pop
insl
pop
popf
lods
enter
sbbb
iret
clc
enter
and
pusha
dec
cmp
sub
mov
lcall
into
fsubrs
adc
das
or
cmp
sub
int3
int
std
in
in
pushf
popf
mov
pop
pop
dec
dec
jl
insb
insl
sbb
or
cmp
sub
int3
int
std
in
in
pushf
popf
mov
pop
pop
jmp
stos
call
xor
mov
mov
cmp
push
xor
and
pop
je
push
mov
jmp
xchg
pop
xchg
or
xor
or
cmp
mov
pop
sbb
adc
inc
std
imul
xor
popf
push
movb
int3
daa
mov
fwait
lcall
mov
movsl
cvtps2pi
pop
or
inc
and
faddp
dec
inc
pushf
cmp
cli
daa
inc
sub
pop
mov
out
pop
push
inc
lret
call
into
mov
sbb
push
scas
sbb
jecxz
ret
jle
pop
xchg
add
jp
mov
arpl
xor
cmp
jne
in
adc
roll
and
ds
mov
mov
sti
or
add
sbb
in
fisubl
pop
daa
fists
and
popa
mov
add
cmp
mov
test
push
push
loop
into
test
jne
mov
or
sub
jb
or
and
imul
mov
and
push
mov
sar
sbb
mov
cmpsl
aas
cli
frstor
dec
mov
lods
and
imul
pop
jg
call
outsb
fldenv
dec
pop
xor
pop
fidivs
xlat
xchg
fwait
ja
mov
adcl
dec
shl
es
dec
cmp
leave
stos
sahf
fbld
loope
aaa
fdivr
mov
cmc
pop
mov
lret
push
es
hlt
inc
push
and
nop
lcall
daa
movsl
jo
shrl
lret
mov
inc
push
fs
mov
test
xchg
rcl
scas
adc
add
sti
push
mov
push
jnp
lods
xchg
insb
ljmp
mov
fdivrl
add
mov
cli
dec
mov
lahf
lods
pop
outsb
in
push
or
js
xchg
mov
call
cmp
jecxz
into
dec
pop
and
mov
loop
mov
xchg
mov
push
sbb
mov
dec
xorl
aaa
std
stos
mov
push
cmpsl
mov
cwtl
movsl
mov
mov
bound
add
adc
cmp
mov
cli
jmp
out
mov
or
fwait
push
mov
xchg
jb
ds
push
insb
jp
in
scas
jo
dec
mov
rcrl
in
cmp
xor
xchg
xor
inc
into
or
ds
add
sbb
sahf
nop
jnp
mov
inc
push
xchg
xchg
iret
shlb
ja
add
dec
pop
loop
sbb
jle
ds
mov
sbb
aam
dec
xchg
daa
push
cmp
mov
jge
and
xchg
int3
cmp
sub
out
jmp
stos
mov
filds
and
imul
packsswb
rcll
sub
jb
cmpsl
fcmovnb
in
jne
mov
test
mov
fdivl
cltd
pop
mov
mov
mov
pop
dec
movsl
inc
cld
jno
xchg
mov
xchg
cwtl
mov
xchg
jne
sub
sysexit
jne
mov
lahf
jp
outsb
push
nop
cld
jbe
adc
mov
test
inc
adc
push
mov
cmp
xor
insl
leave
leave
pop
dec
sub
add
sub
out
lahf
jb
and
loop
mov
push
cmp
dec
push
inc
push
dec
push
jle
repnz
and
dec
mov
pop
lahf
push
and
aas
lods
data16
cld
jg
dec
sub
ds
ljmp
loope
xchg
es
push
mov
incb
lcall
data16
push
loop
ljmp
push
inc
push
fadd
pop
mov
push
dec
cmp
fldl
std
aam
nop
cmpsb
mov
outsb
jne
mov
out
inc
rolb
jecxz
sub
out
in
sub
mov
mov
enter
lahf
aam
enter
mov
inc
jnp
dec
xchg
dec
pop
or
sub
xor
mov
pop
hlt
shrb
and
cmp
repz
mov
sub
inc
pop
sub
inc
mull
mov
inc
cmc
push
or
xchg
xchg
add
lret
mov
sbb
lcall
test
shr
and
mov
pop
cmp
mov
jmp
push
inc
jmp
sbb
cmp
fsubrp
or
insl
cmpsb
sub
dec
imul
adc
sti
mov
xor
push
inc
ljmp
inc
out
test
add
test
xor
fs
and
out
ds
scas
cmp
fs
outsb
jp
xor
pushf
jmp
inc
enter
jmp
mov
mov
push
jge
dec
out
loopne
sbb
xor
bound
adc
imul
adc
and
testl
insl
test
add
lret
inc
dec
scas
out
das
pop
adcb
xchg
into
pop
dec
out
push
outsl
mov
push
lods
xchg
cli
dec
les
mov
inc
bound
dec
dec
xchg
gs
int
cmp
fwait
movsb
loopne
aas
imul
outsl
xchg
jecxz
test
inc
pop
jp
jbe
mov
xor
arpl
fs
cwtl
gs
cmpsl
ljmp
jmp
pusha
and
movsb
enter
js
imul
ret
jge
stos
mov
int3
cli
movsb
addb
sti
out
insb
pushf
mov
pop
stos
fst
icebp
mov
jp
push
jnp
jp
pop
sbbl
mov
scas
mov
int
pusha
cmpb
lea
adc
mov
push
push
loope
jg
cmpsb
test
jb
lea
pop
fmuls
lods
ljmp
test
pop
dec
pop
call
cmp
inc
dec
cltd
pop
add
sahf
inc
push
push
scas
inc
mov
jnp
sarl
mov
adc
jbe
test
ja
mov
push
aas
out
or
xor
sbb
mov
xchg
jecxz
out
pop
pop
fmuls
dec
ret
jge
cmpsl
icebp
mov
push
sbb
pop
out
sar
xchg
pop
dec
je
negl
add
xor
and
outsb
dec
jbe
movsb
xchg
gs
mov
lock
mov
fidivs
inc
pop
xor
sub
call
daa
and
negb
and
sub
push
jecxz
adc
add
pop
xor
xor
push
jae
xor
out
mov
pop
adc
and
fidivl
pop
cmp
and
mov
addb
movsb
insb
adc
or
sarb
mov
lcall
xchg
mov
cmp
cmpsl
test
orl
ja
rcl
out
lret
int
into
pop
ljmp
sub
js
filds
aad
adc
movsb
out
outsb
sub
push
xor
fdivs
imul
leave
pop
sahf
out
mov
aam
sbb
xor
and
and
or
inc
xor
insb
test
arpl
cltd
sbbb
out
push
ret
jbe
outsb
xchg
inc
in
jp
mov
in
aas
jo
push
push
in
das
lret
xchg
loopne
test
dec
add
mov
dec
sub
enter
lea
jne
fs
mov
in
adc
sbb
jbe
addl
divb
data16
mov
flds
jp
mov
mov
sbb
xchg
sbb
adcl
stos
mov
popf
pop
jno
cmp
in
push
jmp
add
hlt
ret
or
mov
cmp
dec
out
push
jl,pn
hlt
fstpl
sub
dec
pop
fiadds
mov
cmp
push
in
xchg
fbld
imul
sbb
out
int3
aad
in
out
jbe
sbb
push
dec
xor
adc
dec
in
sub
shll
xchg
push
imul
xor
xchg
add
jge
gs
sub
pushf
mov
sbb
pusha
inc
fldl
dec
adc
inc
xchg
or
stos
out
push
push
pop
out
mov
push
mov
ret
incl
pop
icebp
addr16
sarl
inc
xchg
mov
sbb
mov
sub
stos
adc
push
rcll
pop
jns
test
mov
xchg
sbb
or
push
adc
mov
loope
fidivrl
rcr
rclb
pop
repnz
fistpl
push
inc
stos
inc
mov
sub
jg
popa
or
icebp
jne
mov
sub
adc
lods
jno
mov
in
fldcw
jne
sub
pop
sub
in
xor
into
mov
mov
imul
mov
xchg
sbb
orl
mov
or
xor
mov
inc
popl
bnd
outsl
push
lsl
xchg
push
xor
lea
cs
idivl
dec
outsl
cmp
fucomp
inc
cmpsl
cltd
add
adc
xchg
shll
bound
mov
roll
rep
loopne
sbb
fdivrp
dec
ret
imul
push
adc
dec
js
sbb
dec
mov
pop
adc
out
xchg
stos
xor
cmpsb
cmp
inc
pop
fldl
mov
icebp
insb
mov
sbb
lods
ja
push
xor
loopne
xchg
mov
dec
mov
pusha
incb
cwtl
scas
roll
cs
or
inc
jnp
ljmp
or
sub
pop
pop
int
int3
decb
dec
mov
inc
mov
repz
ret
push
cmp
clc
fdivrl
imul
lret
stos
inc
rclb
fildl
es
aas
leave
std
mov
hlt
or
or
fs
dec
or
into
ret
loopne
pushf
add
xor
outsl
cmpsl
ljmp
cmp
ljmp
push
cmpsl
js
cs
in
dec
sbb
mov
dec
filds
sbb
pop
clc
mov
xor
and
jb
pop
pushf
cmp
das
inc
push
test
icebp
push
dec
in
mov
pop
xchg
andb
adc
mov
sti
cld
mov
cmpsb
jb
test
pop
adc
mov
movsl
mov
aam
nop
cmp
mov
imul
aaa
xchg
sub
push
mov
dec
lock
inc
push
sti
or
xor
jbe
scas
jno
inc
inc
cmp
mov
loopne
pop
dec
cmp
add
sar
dec
or
test
cmp
xchg
mov
loop
push
inc
xor
mov
jae
mov
adc
out
out
jnp
mov
jle
add
ljmp
pop
push
cwtl
pushf
mov
in
mov
faddl
push
xchg
xchg
xlat
lcall
fadds
mov
push
xchg
scas
cmpsb
mov
push
out
cld
ret
jo
test
push
cmpsl
adc
movsl
mov
leave
ds
push
test
pushf
adc
push
cmp
dec
cmp
push
call
adc
push
scas
jecxz
xor
pop
xchg
add
mov
out
cmp
pop
xchg
xor
cmp
xor
mov
out
adc
mov
xor
jno
pop
iret
pop
aad
dec
outsb
dec
scas
int
lods
repnz
jo
in
mov
fidivrl
out
out
jne
pop
mov
testb
pop
push
mov
fidivrl
roll
or
scas
cmp
aas
mov
stc
ficompl
lock
lahf
stos
xchg
hlt
mov
sbb
add
imul
and
aad
es
push
clc
fbstp
lods
jno
call
aas
ret
xlat
mov
xor
mov
lds
shrb
or
shr
popa
scas
sarb
xchg
pop
mov
rclb
jp
in
sbb
inc
pop
mov
adcl
js
mov
lret
mov
mov
out
aam
lahf
jp
sbb
jecxz
xchg
jp
cltd
int
cmp
repnz
in
push
dec
gs
and
inc
dec
lods
push
pop
mov
push
mov
lock
lods
add
mov
push
cmp
in
fidivrs
insl
xchg
adc
push
push
outsl
test
pop
stc
cmpsl
loope
in
jp
mov
inc
out
xchg
push
sbb
or
jo
cmp
popf
xchg
je
push
test
ret
rcl
rcl
jo
clc
xchg
loope
pop
fbstp
inc
jl
sub
cmp
loop
mov
not
xchg
out
sbb
dec
sub
scas
add
pop
or
lcall
mov
adc
shlb
cmpb
cmp
xbegin
push
les
jge
data16
daa
mov
mov
dec
sub
mov
push
fdivl
inc
es
ds
sub
fcomps
iret
pop
nop
mov
inc
sbb
xor
jnp
mov
adc
int
mov
adc
cmp
inc
inc
and
xor
xchg
data16
adc
dec
gs
test
pop
dec
pop
shll
or
shrl
mov
outsl
xchg
sub
dec
dec
mov
mov
fcomps
sub
pop
ljmp
mov
cltd
sti
sub
sub
or
addb
call
and
mov
int3
xchg
js
push
sbb
add
mov
jbe
loop
int3
adc
xor
and
divb
mov
add
loopne
into
adc
in
bound
adc
loopne
out
fmull
sti
cmpsl
cmp
bound
notb
ret
jbe
js
and
repnz
jo
lret
negl
in
xchg
jo
or
fsubrp
pop
fucomp
jge
push
in
jne
sbb
sub
arpl
imulb
mov
add
dec
addr16
jo
mov
mov
imulb
push
sbb
cmpb
lret
mov
ret
test
adc
popa
mov
cld
outsw
mov
xchg
cmpsb
sbb
or
jne
cmpsb
fistpll
inc
sbb
pop
sub
pop
aad
jo
mov
push
adc
cmpsb
in
gs
dec
nop
insl
xchg
xchg
jbe
inc
mov
pop
pop
add
imul
stos
mov
dec
jg
ficoml
loopew
js
shl
adc
mov
mov
xchg
mov
ss
das
xchg
and
push
fsubrp
add
das
int
stos
xchg
dec
mov
jb
xor
addr16
loop
lret
dec
test
push
mov
data16
movsl
fidivs
inc
cli
jp
inc
xchg
xor
cmp
xchg
sbb
cli
cmpsb
or
pushf
test
outsb
pop
inc
enter
pop
xor
inc
ret
lock
rorb
mov
xchg
out
xchg
sub
and
aad
mov
imull
adc
int
cmp
or
pop
inc
cltd
pop
jns
mov
mov
xchg
fidivs
pop
sbb
mov
and
mov
xor
orl
mov
dec
or
gs
cmp
mov
jb
hlt
lods
jge,pn
loopne
mov
and
jle
dec
xor
loopne
outsl
mov
gs
shl
lea
sahf
fdivl
xchg
xchg
push
stos
test
movb
aad
xchg
sti
aaa
sbb
test
insb
pop
adc
dec
popf
push
push
mov
and
cmp
fmull
xchg
into
xor
cli
push
jb
add
and
pop
jg
insb
cltd
idivl
jne
push
call
mov
pop
mov
lock
pop
adc
jp
jbe
add
fcompl
xchg
test
js
loope
mov
outsb
sbb
jmp
aaa
sub
inc
sub
xor
idivl
cmpsb
jae
sbb
push
dec
test
hlt
xor
or
nop
push
ss
jnp
jl
push
ss
xchg
outsb
mov
or
mov
cli
stos
sbb
data16
aaa
call
rorb
into
xlat
pop
lcall
cwtl
lret
loop
mov
clc
js
jns
dec
jmp
xchg
movsb
jecxz
enter
sub
shll
sub
out
sbb
mov
out
imul
push
and
fldl2t
decl
push
lds
xchg
dec
pop
nop
xor
xchg
jmp
int
xor
jo
add
std
iret
jge
into
shr
fwait
clc
std
jmp
imul
push
sub
repnz
out
jns
sub
stc
and
push
cmp
xor
test
mov
mov
pop
or
xorl
out
mov
rorb
outsl
ljmp
xchg
sub
data16
adc
arpl
pop
mov
mulb
mov
mov
rol
inc
mov
pop
cltd
or
and
fmuls
enter
out
lcall
adc
or
mov
lret
pop
arpl
mov
mov
cmp
dec
aam
sbb
aad
stc
int3
xor
fdivl
fcmove
dec
loopne
and
dec
test
and
sbb
sub
popf
movhps
push
mov
adc
clc
clc
inc
pop
sbb
addr16
gs
lcall
in
mov
xchg
mov
or
movsb
mov
testl
jecxz
adc
fcoml
pop
fs
push
or
fwait
xchg
lahf
jmp
mov
mov
lahf
aam
rclb
pop
in
jecxz
aad
enter
push
fbld
out
imul
ja
fwait
insl
push
gs
cmpsl
sbb
prefetch
or
sbb
jl
mov
popa
xor
fildll
push
idivb
fs
dec
js
daa
push
jmp
icebp
jo
pop
orl
fdiv
test
jnp
jle
inc
sub
dec
fimull
xchg
fstpt
or
push
jbe
imul
popa
pop
jbe
pushf
jae
dec
dec
stos
popa
gs
cli
ja
sub
push
cld
jecxz
inc
lock
sbb
das
and
cmp
push
inc
jbe
mov
mov
idivl
jnp
ret
lahf
mov
inc
fstpt
push
je
mov
add
repz
inc
adc
aas
pop
jae
xchg
mov
or
jmp
pusha
xorl
iret
adc
shll
js
xchg
call
push
pop
pop
push
popa
shlb
mov
stos
xor
push
xor
xor
test
test
and
sub
mov
mov
jns
aaa
cmp
and
pusha
cwtl
movsl
jo
js
jge
filds
das
mov
cmovno
ja
stos
push
rcl
adc
fimuls
test
pop
dec
dec
mov
js
loop
and
lods
shrl
push
mov
dec
mov
dec
xchg
mov
scas
repnz
sbb
sahf
daa
fwait
sahf
rcrb
push
mov
cld
das
test
mov
xchg
fdiv
fisttps
les
subb
dec
sub
divps
repnz
lcall
cmp
or
fsubl
push
filds
arpl
icebp
lock
inc
orl
mov
out
orb
repnz
pop
fst
dec
add
mov
test
lahf
in
xchg
mov
xchg
xlat
mov
lock
jne
sub
ret
jne
cmc
jnp
jg
jno
movsl
pop
jae
xchg
dec
loopne
push
add
pop
mov
int
in
inc
cmp
je
cwtl
icebp
std
mov
xor
pavgw
dec
aad
push
sarl
pop
inc
jb
jbe
inc
fldcw
sbbl
xchg
cmp
xlat
cmp
or
jmp
lods
push
jbe
inc
fdivrl
loope
je
int
lods
and
shl
stos
add
mov
iret
xor
pop
cmpsl
iret
inc
enter
jb
or
inc
inc
adc
mov
jecxz
mov
ljmp
icebp
popf
fiaddl
xorl
negl
pushf
push
outsl
mov
jbe
xchg
inc
popf
jmp
stc
jmp
sbb
data16
cmp
sub
mov
or
xchg
mov
mov
mov
xor
pushf
adc
sub
rclb
jb
aas
pop
out
fildl
outsl
adc
inc
imul
mov
xchg
fiaddl
popf
idivl
pushf
push
lods
xlat
and
push
lock
add
call
or
push
push
lahf
outsl
inc
dec
call
insb
arpl
addb
int
adc
dec
dec
lea
jo
sub
scas
or
dec
add
mov
jle
shll
lock
aas
mov
loopne
fstpl
aam
dec
cmpsl
nop
push
icebp
or
das
andb
les
out
into
cmp
in
jge
xchg
dec
or
jnp
dec
mov
arpl
inc
sbb
test
xchg
inc
xor
popa
imul
xor
imul
arpl
popf
jl
or
adc
or
jge
insl
sbb
or
cmp
sub
int3
int
std
in
in
pushf
popf
mov
pop
pop
dec
dec
jl
insb
insl
sbb
or
cmp
sub
int3
int
std
in
in
pushf
popf
mov
pop
pop
dec
dec
jl
insb
insl
sbb
or
cmp
sub
int3
int
std
in
in
pushf
popf
mov
pop
pop
dec
dec
jl
insb
insl
sbb
or
cmp
sub
int3
addr16
std
in
lcall
push
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
repz
loopne
rcl
rol
clc
rol
mov
scas
test
andb
inc
xor
and
adc
add
hlt
loopne
mov
mov
movsb
nop
xchg
cmp
je
xor
jo
and
adc
add
hlt
adc
inc
aam
les
xchg
addb
and
jae
jp
ja
xchg
mov
mov
getsec
xchg
push
adc
popf
int
jne
and
lahf
add
sbb
sbb
push
mov
sahf
mov
and
add
aad
mov
in
adc
push
push
hlt
movsl
jmp
jns
loope
cwtl
addr16
and
inc
or
gs
xchg
cmp
sub
mov
xor
pop
mov
jp
mov
aam
mov
ficoml
push
add
lock
dec
cmp
sub
push
mov
sub
add
and
adc
cli
jge
rol
test
dec
insb
outsl
pushf
mov
inc
gs
fldcw
ja
adc
adc
aam
les
movsb
nop
xchg
test
push
jo
js
sub
adc
insl
cltd
lock
movsl
movsb
aam
into
int
rolb
gs
ja
inc
jns
gs
mov
mov
std
aad
pop
aas
xor
dec
pop
dec
and
pushf
mov
lods
mov
xchg
mov
nop
xchg
addb
inc
inc
xor
and
adc
add
hlt
loopne
rcl
rol
mov
movsb
nop
xchg
addb
inc
inc
xor
and
adc
add
hlt
inc
mov
cmp
push
jg
dec
dec
sbb
sbb
imul
ljmp
jg
jo
sahf
pop
jb
repz
aas
and
and
mov
loopne
ljmp
ja
pop
orb
stc
mov
and
addl
and
jo
repnz
les
roll
je
lock
sbb
sar
add
xchg
or
and
xor
sahf
out
xor
pusha
sbb
leave
sub
movsb
inc
adc
or
lods
test
push
jne
sbb
insb
mov
lahf
mov
xor
add
sahf
imul
push
sbb
sub
mov
push
mov
mov
inc
sar
dec
pop
rcrl
out
mov
mov
push
mov
lock
fsubrs
insl
pop
nop
xor
cmp
mov
mov
dec
pop
fdiv
or
stc
inc
inc
and
lcall
push
pop
andl
lret
xor
scas
add
jb
sub
insb
frstor
cwtl
xor
mov
repnz
call
adc
in
les
sbb
cmpsl
cmpsl
dec
or
and
pop
or
mov
ja
js
fnsave
jp
js
iret
pop
fcmovu
lds
jnp
in
push
dec
dec
jno
test
and
pop
mov
ja
adc
ror
and
pop
inc
insb
outsb
orl
test
add
mov
mov
aas
push
or
dec
or
xor
xor
jns
or
and
fcompl
xchg
ds
sub
dec
push
sub
cs
in
scas
lock
fldt
add
jp
pop
bound
fsubrl
jbe
pushf
ret
mov
iret
into
daa
dec
jae
xchg
leave
fwait
jno
addb
std
in
inc
dec
sub
pop
test
pusha
cmp
or
pop
ljmp
pop
fstl
and
push
in
xor
ret
sbb
xor
mov
orl
loopne
adc
mov
pop
pop
in
int3
out
es
mov
nop
lea
sbb
enter
in
in
xchg
xchg
cmp
jp
sub
xchg
xchg
enter
pop
sbb
push
dec
lds
adc
fsubrl
scas
imul
fsubrl
add
shr
adc
out
xchg
outsl
jmp
xor
mov
imul
daa
int
lret
popa
inc
inc
dec
stos
jns
jno
stos
call
mov
add
addl
popf
adc
bound
add
addr16
divl
sbb
dec
cltd
enter
outsb
lds
ss
hlt
pop
add
mov
in
mov
ret
xor
xchg
push
outsb
xchg
mov
test
xchg
ret
inc
arpl
jno
adc
sub
popl
insl
add
push
lcall
pop
add
test
dec
rcrb
out
mov
sbb
cmp
mov
cmp
jle
sbb
mov
fists
lods
push
dec
xlat
aas
mov
dec
nop
pop
xchg
sahf
ja
mov
fldl
je
inc
lahf
xorb
mov
adc
xor
mov
je
mov
icebp
lds
mov
mov
test
popa
xchg
cmp
and
fistpl
dec
mov
xchg
mov
cmpsl
sbb
and
mov
cmc
cs
in
cmp
inc
popw
addr16
testl
movsb
push
xchg
or
fwait
cwtl
add
lret
lahf
mov
adc
xchg
mov
add
repz
repnz
pop
fs
daa
add
shlb
xorl
adc
das
dec
mov
inc
lea
enter
pop
jmp
pop
fdivl
dec
xor
sub
sti
pop
stos
dec
fidivrl
inc
mov
jp
pop
push
pop
bound
jae
jns
jmp
mov
mov
loop
or
xchg
in
sbb
out
adc
repz
sarb
jae
pusha
sub
in
inc
push
pop
cwtl
jecxz
scas
dec
out
inc
fadds
jnp
js
push
jecxz
lret
lea
pusha
cmp
inc
cli
push
insl
mov
shrb
mull
mov
push
mov
repz
sar
add
lods
arpl
cltd
cld
es
arpl
out
jbe
mov
dec
shlb
scas
in
xchg
cmpsl
sub
jne
inc
ja
shlb
or
jbe
popf
cmp
xor
xorb
mov
test
sbb
pop
ror
inc
popf
fs
notb
jmp
push
sbb
jle
sbb
push
adc
je
lods
enter
adc
int3
stc
mov
mov
or
push
and
dec
dec
xchg
adc
dec
lods
dec
pop
movsl
push
sbb
push
inc
push
fwait
cltd
cmp
lret
xlat
pop
sti
pop
dec
pop
mov
cwtl
dec
lock
loopne
jl
inc
loop
cmp
js
xchg
movsb
outsl
xchg
inc
push
pushf
imul
pushf
lds
ficomps
pop
mov
andl
xor
adc
loopne
push
mov
jmp
loopne
mov
add
mov
fidivrs
and
test
aas
lds
popw
or
sub
rorl
mov
fistl
mov
mov
jns
jno
inc
add
push
xchg
mov
or
test
dec
cmp
mov
add
lods
mov
out
addr16
sbb
add
test
ja
arpl
cmpsl
or
dec
lods
repz
test
es
out
repz
mov
imul
push
xchg
sbb
push
or
mov
push
xor
mov
dec
jno
pop
or
shrl
sbb
add
bound
data16
inc
stc
and
jp
gs
fnsave
testb
mov
mov
mov
cli
lahf
call
repnz
imul
push
addl
mov
or
shl
inc
movsl
jmp
cld
pop
mov
jl
out
pushf
pop
pushf
xchg
data16
rcrb
dec
xchg
mov
push
mov
sbb
xchg
jge
repz
push
pop
cltd
rorb
out
cs
lret
mov
push
test
sbb
sub
or
adc
dec
in
dec
ja
aas
mov
js
pop
cmp
pop
imulb
lahf
xchg
fadd
xchg
mov
xchg
add
cmpsl
sub
in
and
inc
js
mov
ret
fimuls
out
mov
mov
sub
ja
loope
push
jecxz
and
jge
pusha
push
arpl
jo
dec
mov
lods
jns
sahf
ss
or
mov
sbb
shrb
adc
push
les
xor
daa
adc
andb
lcall
andb
sub
pop
mov
mov
mov
iret
fcmovnu
js
mov
shrb
push
and
loop
mov
cmc
inc
fwait
add
inc
in
rcrl
orb
pop
es
add
cwtl
adc
cld
pop
add
dec
and
ja
mov
cmp
mov
lahf
pushf
mov
add
mov
push
sbb
push
pop
dec
insl
dec
scas
mov
call
ljmp
adc
dec
dec
sub
je
add
std
sub
loope
neg
or
adc
jbe
jb
jbe
scas
xchg
imul
mov
je
ja
fsubr
push
test
int3
push
dec
lds
push
insl
pop
jecxz
push
push
cmp
jp
xchg
and
ja
idivb
jecxz
mov
orl
dec
push
scas
mov
hlt
out
sbb
ret
mov
imulb
add
jno
pop
lock
mov
into
mov
push
addr16
xor
andb
mov
inc
lret
cmp
outsb
sbb
fucompp
loop
stc
ljmp
push
sub
inc
add
movsb
jmp
pop
mov
jle
repz
test
xor
jmp
mov
jo,pt
push
incl
push
sbb
fsts
jo
inc
shr
push
out
xchg
jl
dec
mov
xchg
and
into
sub
inc
xor
inc
and
cli
lods
add
xor
ljmp
lahf
dec
mov
orb
hlt
push
fwait
dec
lcall
xor
cmpl
ret
push
sub
aam
enter
or
call
mov
or
lea
xchg
cli
adc
push
mov
xchg
or
pop
stos
xchg
les
sbb
aas
repz
pop
xor
add
inc
or
lea
mov
into
es
scas
mov
dec
fldt
adc
jbe
sub
lea
add
lds
jmp
push
pop
or
xchg
jne
aaa
jge
fsubs
bsr
test
out
jo
insl
imul
push
arpl
mov
pop
mov
sarl
in
cmp
add
and
hlt
or
mov
pop
dec
loop,pt
dec
ljmp
sahf
cmp
xchg
cmpb
addb
imul
scas
addr16
jmp
xor
ja
xchg
test
das
jecxz
fcmovnbe
mov
push
add
sbb
mov
daa
mov
push
jge
and
lods
mov
xchg
les
scas
ss
das
dec
ljmp
inc
mov
jno
cmc
pop
fs
fsts
pop
loope
dec
cmp
shlb
test
xchg
popa
dec
ljmp
mov
lock
sbb
iret
fistl
mov
cltd
sarl
roll
bound
cs
or
mov
insb
mov
inc
dec
dec
xchg
dec
lahf
negb
les
movb
pushf
mov
and
dec
xchg
cmp
dec
movsl
jae
loope
jp
pop
sub
dec
add
fldt
push
dec
insb
cmp
testb
lea
jae
sub
insl
rolb
fwait
pusha
into
push
or
movsl
xadd
cmp
or
insl
jno
fidivrs
mov
xchg
scas
dec
add
inc
mov
insb
sub
mov
inc
mov
cmp
aaa
insb
fsubl
movsl
or
cmp
and
mov
cmp
sbb
inc
pxor
mov
push
repz
jle
mov
pop
addr16
xchg
fldt
xor
inc
fists
inc
and
jnp
cwtl
sub
jns
jecxz
xor
or
and
pop
aaa
loop
jge
fisttpll
xchg
and
nop
push
jecxz
push
jle
fsubrl
cmp
jns
push
mov
sub
mov
mov
pop
push
fnsave
adc
repnz
std
mov
jle
out
or
lds
inc
int3
pushf
fistpl
pusha
mov
sysexit
gs
rol
in
lods
fcomip
inc
das
pop
fisttpll
bound
hlt
popa
push
outsl
mov
mov
stos
stos
and
insl
outsb
adc
data16
das
movsl
fmuls
inc
fs
and
fs
mov
adc
inc
adc
dec
adc
push
push
inc
in
pop
out
repz
add
add
sub
pop
jbe
mov
xorl
adc
aaa
cmp
outsb
push
pop
test
add
sub
pusha
xor
sar
mov
mov
mov
popf
inc
out
jne
lahf
sbb
addr16
xlat
loope
inc
mov
cmp
and
test
dec
loop
cmpsb
out
add
push
sub
push
jne
repz
andl
pop
and
lds
aas
jmp
and
cld
rolb
jge
fstl
dec
lcall
dec
inc
jmp
push
lods
cmp
jb
and
xchg
icebp
lods
cltd
sarl
mov
imul
ja
fnstcw
ljmp
jl
fs
aam
jae
hlt
cmp
enter
cwtl
test
gs
fadd
shll
movsl
xor
pop
loopne
sbb
pop
push
xor
subb
mov
push
mov
enter
daa
push
bound
push
negb
scas
dec
or
rorl
push
mov
pop
movsb
loope
bound
test
jp
adc
and
outsb
mov
sub
xchg
pushf
lea
xchg
into
lds
adc
add
pop
shlb
ret
xchg
cmp
test
fnsave
inc
and
scas
je
push
add
xorl
xor
inc
enter
mov
sub
pop
fstpl
or
lods
jecxz
icebp
mov
lods
in
scas
push
fldt
std
add
repnz
sbb
jno
pop
push
xchg
test
lret
or
mov
adc
xchg
sub
push
insb
or
xor
jmp
addr16
pmaddwd
adc
jge
jno
or
cmp
mov
idivb
loop
lods
sbb
repz
in
stos
test
jne
in
fmull
add
xor
sarb
cmp
cmp
xor
pusha
mov
lods
push
pop
inc
mov
inc
std
cmp
popf
rclb
test
popa
lahf
adc
stos
dec
jne
or
fistpll
xchg
mov
mov
sbb
frstor
add
int3
cmpsb
mov
jno
scas
mov
xchg
fisubrl
and
inc
sahf
jmp
mov
and
pop
cmc
jo
out
shrb
out
frndint
xchg
xchg
daa
outsb
ljmp
and
lods
add
mov
aas
mov
nop
mov
mov
inc
mov
js
lods
sti
aad
xchg
int3
rcrl
xchg
cmpsl
out
es
jnp
push
imul
jae
insl
adcb
pusha
mov
push
cmp
data16
add
xchg
sub
mov
icebp
sub
icebp
shr
test
sbb
fistpl
mov
insl
xchg
jnp
cmpsl
add
xchg
xlat
sbb
push
les
mov
jae
scas
loope
or
outsb
xor
xchg
pop
cmc
neg
mov
pop
push
push
xor
movsb
aaa
in
fildll
mov
mov
cmp
pop
lods
xlat
insl
or
ja
rol
pop
sbb
ret
mov
xchg
lods
and
ret
add
mov
loope
dec
stc
je
sub
push
nop
movsl
js
in
cmpsl
mov
cmp
rolb
pop
add
dec
sub
lcall
add
pop
mov
push
pusha
add
scas
enter
pushf
inc
mov
and
call
pop
sub
inc
fcomps
inc
out
lahf
fsubl
aaa
scas
loopne
sub
sahf
call
lock
mov
or
mov
push
rcl
cmpsb
and
and
or
loopne
mov
jge
pop
test
mov
sub
jl
or
mov
rol
or
stc
mov
push
cs
inc
jae
dec
enter
mov
sub
adc
je
and
dec
das
outsl
gs
adc
daa
data16
ret
mov
rol
and
sub
mov
fisubs
cmp
add
addr16
outsl
sub
sbb
dec
mov
mov
loop
xor
pop
add
xor
pop
in
mov
repz
fisubl
mov
pop
aas
push
mov
or
int3
gs
pop
lock
jns
mov
mov
fldcw
jmp
std
sub
clc
jo
rcl
xor
out
popa
insl
add
jl
push
inc
fwait
scas
in
mov
lahf
dec
roll
fs
adc
lods
mov
xor
scas
jmp
sub
outsl
jne
sub
xor
xchg
jno
out
or
pushf
mov
mov
je
push
or
pop
adc
fnstcw
adc
xchg
pop
ss
test
bound
or
in
repnz
push
sbbb
mov
push
testl
mov
es
dec
mov
fnsave
or
mov
mov
bswap
dec
xor
adc
cltd
jne
imul
xchg
aas
cltd
fisttps
jg
movsl
push
dec
shll
loop
sbb
icebp
or
shrb
jb
movsb
cs
mov
push
outsl
vunpcklps
movsl
cmc
push
jp
cmp
les
mov
mov
jae
add
aam
pop
and
fwait
cmp
mov
daa
fwait
aad
sbb
pop
and
cltd
shrl
rclb
pop
cmpsl
jo
xor
popa
mov
cmp
stc
or
cmp
test
mov
mov
xor
pop
adc
outsb
jmp
or
push
bound
xchg
insb
fucomp
ret
mov
mov
jg
sub
imulb
add
mov
mov
xchg
jbe
pop
mov
push
jl
addr16
call
cmpsl
jb
sbb
mov
adc
mov
add
subl
div
mov
lret
js
out
mov
or
pop
add
add
jbe
push
sbb
mov
xchg
in
fsub
or
into
movsl
dec
dec
das
adc
call
int3
fnsave
or
mov
mov
fimull
repnz
popa
sbb
push
mov
push
mov
js
adc
outsb
push
sbb
ja
or
into
jbe
jmp
mov
je
sub
je
mov
aam
add
mov
cmc
jle
xchg
bound
lock
fs
ss
mov
sarb
pause
rclb
inc
cmp
popa
adcb
mov
adc
fnsave
test
pop
pop
jns
sub
cmp
es
xor
inc
lahf
push
lret
push
mov
pushw
add
xor
mov
std
scas
jg
lret
xchg
mov
cmpsl
sub
addr16
mov
ss
popa
xchg
neg
adc
aaa
jge
iret
sarb
pop
rcll
pop
fcmove
fsub
add
jne
xor
repz
dec
out
mov
mulb
xor
aas
adc
xchg
icebp
inc
cmp
push
mov
mov
jecxz
sbb
dec
jmp
enter
dec
pop
and
and
sahf
add
cmpsb
pop
sbb
mov
or
testb
adcl
inc
and
and
negb
cli
and
ljmp
ja
les
test
pop
adc
push
or
outsl
push
aam
sbb
movsl
push
mov
sbb
xchg
stc
dec
jl
fistpll
movsl
movsb
insl
pop
mov
jp
push
nop
cwtl
jp
push
inc
dec
jb
dec
push
testb
push
mov
mov
pop
ficoml
sub
out
js
lret
out
roll
dec
xor
pop
cmp
add
jle
scas
jp
aam
test
xchg
sub
cmp
dec
sbb
aad
inc
rorb
mov
push
mul
jne
inc
mov
test
aaa
arpl
pop
or
aas
mov
lea
pop
leave
stc
pop
sarb
xchg
mov
sti
inc
mov
aad
pop
bound
aaa
inc
sbbl
mov
outsl
divb
pop
fbstp
testl
fcomps
jne
scas
dec
dec
jecxz
xor
ja
cmp
sbb
cmp
xchg
mov
mov
mov
sti
push
int
xor
nop
mov
in
outsb
lods
sbb
pop
leave
jno
adc
xor
test
pop
fucomip
push
outsb
ss
adc
shr
xor
push
clc
xchg
pushf
cmp
jno
xchg
lcall
xor
dec
dec
adc
adc
xchg
bound
and
pop
cmp
das
jns
cwtl
mov
xchg
js
xchg
je
mov
in
jo
divb
lea
aas
imul
es
insl
push
sub
repnz
xchg
adc
and
jmp
sbb
or
cwtl
lds
fmuls
outsb
adc
popa
dec
pop
ljmp
add
or
cmp
pop
dec
sti
push
jle
es
test
jl
jmp
inc
pop
pop
dec
popf
xor
mov
xor
movsl
push
or
lahf
mov
push
stc
inc
jae
cmpsl
popa
mov
out
push
loop
loopne
inc
jbe
inc
dec
std
lds
dec
xor
push
loop
push
mov
pop
into
sarl
jno
cli
or
leave
jo
das
push
mov
out
jl
int
cmp
push
call
mov
push
insb
or
sub
ret
inc
test
enter
mov
pop
dec
add
pop
fxtract
jo
lahf
xchg
inc
repnz
testl
nop
sarb
cmpsb
xchg
adc
mov
sub
xchg
cld
popa
jo
sub
mov
test
fst
inc
std
mov
lcall
pop
stos
push
cmovl
fstps
add
fwait
cld
and
out
mov
subl
mov
dec
jmp
pushf
push
push
add
mov
test
xchg
outsl
rorl
test
jmp
in
xchg
es
fidivs
sti
mov
aam
mov
sbb
cmpsb
adc
pop
loope
xchg
aam
les
xchg
addb
inc
inc
xor
and
adc
add
hlt
loopne
rcl
rol
mov
movsb
nop
xchg
addb
inc
inc
xor
and
adc
add
hlt
shl
mov
rol
mov
movsb
nop
xchg
inc
test
pusha
mov
xor
and
adc
add
hlt
mov
les
xchg
add
push
inc
xor
test
out
jmp
sti
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lcall
test
mov
inc
and
add
adc
ljmp
movsl
notl
xchg
mov
cmpsl
mov
cmp
pop
adc
arpl
push
daa
inc
or
lea
popf
xchg
iret
std
fwait
int
fists
sub
adc
aaa
cmp
inc
daa
push
sub
lock
loop
cmp
movsb
sub
push
int3
lea
jb
push
cmp
mov
das
iret
pushf
outsb
aad
test
pushf
sub
cmp
lret
mov
cli
xchg
adc
stos
mov
mull
test
out
cwtl
pop
xor
cltd
cli
call
push
js
xchg
jmp
pop
mov
xchg
cmc
js
mov
movsl
inc
inc
aad
cwtl
mov
stos
fcoms
xor
pop
or
icebp
push
fucomp
lods
xchg
leave
pop
fimull
ja
jne
push
push
rclb
rorl
insl
inc
bndldx
inc
xor
pop
xchg
scas
pop
mov
cli
xchg
pop
pop
test
aaa
inc
in
mov
mov
in
aad
fsubl
or
sbb
insl
sbb
dec
inc
inc
movsl
mov
xlat
mov
mov
stc
div
test
push
and
jle
imul
fmull
mov
sub
cmc
out
push
inc
adc
pop
fs
xor
icebp
cmpsb
rcl
xchg
mov
cmpsl
lds
inc
and
pop
jne
gs
push
daa
inc
xlat
mov
movsl
notl
xchg
mov
cmpsl
lds
inc
and
pop
jne
gs
push
daa
inc
xlat
mov
mov
adc
jnp
sbb
ficoml
neg
push
or
xchg
cmpsb
pop
sbb
xor
cltd
daa
popa
shr
mov
mov
daa
mov
loope
push
popf
inc
fs
shlb
pushf
insb
fldl2e
lds
sub
sbb
pop
pop
shrb
xchg
roll
push
mov
inc
xchg
rcrl
inc
ss
xchg
and
shl
or
ret
pop
stc
outsl
cmc
je
fimull
pop
xchg
xor
das
inc
test
pop
cmp
subl
addr16
aas
out
push
out
in
cmp
test
stos
fcoms
leave
adc
pop
out
mov
sub
or
mov
or
cmp
in
cmp
push
push
and
sbb
aas
popa
push
es
dec
ja
adc
in
xor
loop
push
decb
xchg
test
and
sbb
pop
and
xchg
and
pop
jmp
xor
cmp
cld
xchg
xchg
push
adc
add
mov
notb
mov
pop
dec
nop
push
mov
stc
sbb
add
inc
arpl
inc
fmuls
shlb
leave
dec
ret
mov
mov
pop
jbe
pop
test
sti
jmp
lock
pop
in
add
xchg
jmp
cmpsb
ds
sbb
aaa
les
out
xorl
cmp
mov
push
pop
imul
add
ret
out
sub
cmp
dec
jl
cmp
jp
sbb
ret
fidivs
xchg
arpl
mov
js
jecxz
jbe
xor
jno
fildl
gs
mov
ljmp
xor
mov
cmpsl
inc
fsubs
xor
addr16
sub
mov
or
or
lahf
cmp
jb
ja
and
das
pusha
push
das
lret
cmc
mov
gs
cmpl
lret
cmc
lea
aas
xchg
sub
popf
xchg
cmc
stc
lret
fists
cli
test
ljmp
jo
fnstsw
pop
adc
pop
das
fsubrl
std
push
pop
lahf
pop
push
sub
shlb
push
js
fiadds
push
mov
lret
aaa
sbb
lcall
movsl
push
lds
rcr
sbb
pop
imull
mov
das
mov
push
mov
mov
lret
push
cmpsl
adc
loopne
aas
and
xor
push
shl
ret
enter
push
and
out
negl
pop
add
js
out
push
jge
dec
xor
inc
imul
repnz
pop
jecxz
pop
lds
and
dec
test
inc
inc
jmp
das
mov
dec
inc
fcomps
lock
add
fstpl
cmp
fs
mov
out
xor
stos
or
sub
xor
mov
in
cmp
fs
xlat
sti
add
clc
mov
inc
lock
cmpsl
mov
and
daa
fcomi
push
adc
movl
add
mull
xchg
mov
dec
ret
adc
pop
xor
std
arpl
pop
and
mov
das
mov
ja
jne
cs
jge
xchg
mov
push
xchg
sbb
roll
and
push
and
vhsubps
jl
dec
mov
sbb
push
add
and
xchg
and
rcrl
movsb
xlat
inc
mov
jno
hlt
adc
jae
pop
sahf
mov
mov
cmp
ss
clc
cmp
movsl
jnp
test
mov
fcomps
test
add
fwait
mov
fwait
aad
jns
jae
sub
cld
pop
imul
mov
and
add
push
sbb
xchg
sbb
or
shl
fs
or
lds
std
das
ret
mov
mov
divb
mov
data16
fcoml
add
and
jae
cs
pop
out
inc
mov
xchg
adc
dec
roll
xchg
js
insb
inc
mov
mov
push
std
int3
push
jbe
pop
bound
rolb
test
pop
xchg
pop
cmp
add
xchg
in
jno
frstor
mov
xor
pop
mov
sub
dec
xor
repnz
movsl
loope
nop
filds
mov
iret
cmc
faddl
sbb
ss
xchg
daa
and
and
pop
mov
jl
out
ss
jl
subb
scas
sub
js
add
jne
and
xor
or
sub
nop
out
adc
xchg
xor
or
in
popa
lods
shl
xchg
jno
popa
cmpsl
insl
rorl
pop
push
scas
mov
adc
lock
inc
xchg
in
sbb
dec
sub
lock
test
inc
mov
mov
popa
inc
sub
inc
jo
push
pop
and
cli
add
adc
lods
mov
cli
xor
jle
mov
sbb
xchg
gs
icebp
mov
lds
sahf
bound
imul
adc
jo
call
gs
aam
cmc
pop
fs
in
xchg
jo
push
xchg
stc
sub
mov
inc
insb
fwait
jmp
mov
mov
ret
fstpl
in
es
lods
pushf
add
jge
mov
jno
fildll
test
xor
sbb
ret
xor
ret
fstpl
cmp
mov
push
dec
aam
push
mov
inc
bswap
mov
and
push
fistpl
pop
ret
fwait
pop
mov
or
loopne
sub
out
test
nop
out
nop
and
sub
or
mov
cmp
aas
cmp
push
pop
loop
das
in
sub
cmpsl
jmp
mov
imul
wrmsr
jge
add
sub
fstps
pop
stc
imul
iret
lods
xchg
dec
inc
das
xchg
jne
stc
sub
cli
shlb
hlt
rolb
call
cmp
mov
rol
roll
pusha
popa
lods
gs
xchg
jle
jecxz
push
inc
inc
push
mov
adcl
pop
sub
fs
lods
mov
inc
xchg
jne
cmp
sub
stc
push
push
mov
std
adc
je
hlt
lret
sub
or
movsl
cmp
mov
inc
push
je
dec
sub
lods
testb
push
cltd
and
addr16
lods
xor
lcall
xchg
pusha
add
incl
daa
sbb
or
call
mov
cwtl
js
dec
inc
xlat
test
aas
adcl
cmp
insb
cmp
test
inc
ja
test
je
cmpsb
jae
aaa
cli
cli
cwtl
dec
pop
cmpsl
cltd
xor
imul
sub
mov
popa
cmc
push
inc
ret
inc
fdivr
inc
push
insb
mov
cmp
dec
data16
into
cmp
aas
stos
sbb
std
arpl
jecxz
in
aaa
fisttps
outsb
pop
pop
jp
fistl
and
je
test
cmpsb
push
call
mov
inc
cmc
pop
clc
or
cwtl
mov
loope
fdivs
mov
mov
xchg
add
push
cmp
and
shrl
cmc
shl
loop
hlt
xchg
dec
popa
outsb
sbb
add
mov
cmc
or
daa
ficompl
ret
xchg
push
inc
cmp
enter
fildll
jae
jnp
lret
popf
xchg
xor
and
lahf
fdivrs
pop
cmpsb
cmp
mov
fcoms
repz
rorl
out
aas
aaa
dec
mov
jbe
dec
ja
out
cmp
adc
push
sub
and
pop
std
push
inc
sti
dec
mov
dec
and
add
mov
sub
inc
sub
and
push
sbb
xor
inc
jle
icebp
sahf
mov
iret
add
push
cmpsl
in
sub
mov
xchg
xchg
mov
mov
push
jmp
orl
mov
fistps
cmp
scas
imul
push
sbb
popl
idivb
jge
fs
adc
outsb
add
add
cmp
call
ficompl
dec
dec
cld
into
in
out
in
xor
stos
adc
in
in
xor
mov
mov
cmp
and
stos
int
adc
pop
sbb
dec
insl
pop
bnd
fmul
lea
add
leave
mov
aad
pop
xor
xchg
and
push
jp
gs
aaa
inc
mov
into
lret
dec
cmc
ficompl
push
dec
dec
bound
xor
pop
bound
outsl
aas
push
pushf
adc
call
and
xor
mov
icebp
mov
add
bound
cmp
loop
sahf
dec
mov
test
adc
mov
std
data16
subl
insl
xor
test
or
jmp
shrb
cmp
movsb
and
inc
push
sbb
sub
das
inc
dec
dec
mov
fsts
sub
cltd
mov
in
jmp
aaa
loop
xchg
mov
cmp
mov
xlat
pop
sub
adc
frstor
and
inc
mull
out
jp
les
mov
add
shl
inc
sahf
shll
inc
lea
scas
xchg
xchg
das
leave
shlb
inc
add
xchg
lods
pop
clc
adc
or
stos
adc
xchg
add
cmc
ss
mov
mov
mov
push
dec
ds
movntq
out
adc
adc
jp
sbb
dec
cld
push
sub
xor
cmc
pop
mov
mov
rcll
loopne
testl
jns
ljmp
repnz
add
pop
inc
lea
subl
mov
xorl
ret
lahf
mov
mulb
ds
cmp
in
xorl
or
or
jnp
jae
cltd
push
outsb
add
add
adc
not
add
je
cmc
adc
fsts
scas
das
ret
test
add
dec
add
ficompl
or
fdivrs
xchg
cs
fstl
adc
out
cmp
icebp
inc
test
dec
pop
je
sub
dec
cmpsb
xor
pop
sub
push
or
or
sti
out
outsl
mov
cli
into
dec
fldln2
out
outsb
jno
xlat
cmpsl
and
xchg
jp
lret
dec
pop
xchg
sbb
lret
inc
mov
iret
sbb
inc
aas
sahf
cmp
addr16
dec
test
inc
repz
hlt
imul
aaa
jmp
xchg
into
pop
lcall
adc
nop
push
loopne
xchg
cmp
es
or
inc
cmpb
xchg
jns
imul
movsl
mov
aad
pop
xchg
cmc
dec
es
add
daa
outsl
imul
cmp
not
mov
jne
cmp
mov
xor
stos
pop
lds
nop
je,pn
inc
xchg
push
pusha
and
cmp
std
int
popa
jo
jbe
jp
jmp
inc
imul
sub
xchg
mov
xlat
pop
xor
loop
pop
repz
aad
loopne
scas
xchg
aaa
inc
int
cmp
jp
jnp
into
push
cmp
mov
lret
push
cmc
stc
aaa
dec
inc
adc
jo
push
fstl
and
rcrl
test
sti
dec
lahf
sbb
cs
outsl
clc
ljmp
adc
pop
outsb
clc
popa
outsl
cmpb
lods
aaa
jmp
push
and
out
fists
mov
push
repnz
imul
pop
push
push
stos
addl
push
fisubl
mov
sbb
in
sti
inc
fbstp
divl
push
mov
pushf
incb
in
scas
mov
cli
popa
or
mov
jno
push
adc
mov
dec
sub
test
sub
in
inc
sub
push
sti
inc
into
xor
ja
test
mov
mov
inc
adc
or
mov
test
and
xchg
and
inc
and
iret
lcall
mov
xor
shrl
das
cld
mov
inc
push
lea
push
dec
je
dec
mov
sub
sbbb
scas
mov
ret
es
mov
repz
add
push
push
pusha
sub
xor
inc
mov
stos
stos
mov
push
pop
stos
out
lcall
pop
mov
cmc
test
movsb
and
adcl
mov
jae
add
mov
sbb
pop
xor
dec
sbb
test
lcall
and
mov
sub
shlb
aaa
sbb
mov
push
and
sbb
fstpt
imull
into
adc
inc
mov
push
add
cmp
add
add
rep
and
ljmp
fildl
xchg
push
cmc
int
dec
cld
cmpsb
in
push
dec
cmp
mov
outsl
push
mov
addr16
jmp
les
push
ja
jb
push
mov
xchg
lret
mov
sub
cmp
xor
push
jmp
in
xor
pop
adc
popa
inc
outsb
push
add
gs
call
sub
aam
sti
cmpsb
hlt
inc
pop
test
jnp
sbb
jl
pop
cmp
lds
and
dec
or
cmc
out
or
popa
call
mov
scas
pop
push
stos
mov
leave
push
fldcw
push
gs
jg,pn
xor
cmp
shl
or
pop
std
cmp
jg
test
mov
hlt
in
mov
cmc
jmp
inc
lahf
dec
pop
les
mov
sbb
pop
mov
pop
movsb
adc
add
pop
fwait
and
inc
int3
xlat
loop
hlt
xor
outsl
fwait
pop
xchg
push
out
inc
leave
push
leave
iret
mov
outsb
js
clc
in
and
cld
pop
sbb
sarb
imul
push
xor
pusha
popa
cltd
sbb
add
aad
mov
xor
mov
jmp
test
movsb
lds
jne
jns
jbe
pusha
add
xor
pushf
inc
and
test
int
xchg
movsb
pusha
pop
jae
data16
mov
jmp
jmp
cmp
pushl
or
jo
dec
cltd
hlt
stc
roll
and
mov
push
dec
sbb
xor
sbb
jb
and
lahf
mov
pop
sub
outsl
fisubrl
pop
divb
inc
mov
mov
inc
psubq
xchg
add
sub
jno
inc
test
fisubs
mov
mov
les
bound
ja
xchg
adc
in
xchg
bound
sbb
mov
dec
xor
sub
sub
loopne
shlb
jbe
lods
aas
and
sahf
les
xor
cmc
push
push
fildll
iret
mov
sub
sbb
dec
adc
stos
jle
js
inc
and
jbe
adc
xor
jb
xor
idivb
jp
lods
inc
mov
stos
scas
adcl
jno
sub
cmp
fwait
sbbl
pop
bound
inc
lcall
ret
sbb
lock
and
xor
rcrb
sbb
out
sub
sub
push
push
imul
decb
cltd
sbb
ss
sbb
push
cmp
jbe
ds
sub
inc
std
mov
arpl
mov
fwait
lods
rcrl
xchg
mov
push
jle
scas
ljmp
mov
sbb
xor
fidivrl
ss
ja
fsts
mov
std
adc
filds
test
repnz
cli
lcall
dec
test
sub
jmp
shrl
das
leave
outsl
lods
mov
and
xchg
inc
mov
addr16
sbb
xchg
cli
sub
cmpsb
cld
push
vpmovmskb
sbb
stc
jo
mov
insb
xchg
sub
sbb
loope
adc
call
mov
push
mov
insl
sub
mov
addl
xchg
mov
lcall
shl
lret
ret
sbb
repz
inc
mov
popf
jl
out
shll
mov
xor
andb
xor
xor
pushf
stc
clc
jb
addr16
cwtl
test
mov
mov
adc
cmp
mov
mov
aam
cmpsl
test
inc
ljmp
test
rcl
nop
ss
mov
stc
and
rclb
ret
pop
cmpsb
cmp
mov
cmpsl
inc
cmpl
add
negl
std
shl
inc
mov
test
xorb
ret
xor
and
sub
js
cli
scas
add
mov
cli
out
jns
aas
cli
sbb
imul
xchg
aas
je
add
cmp
mov
out
mov
xor
iret
sbb
stos
rorl
cwtl
adc
mov
mov
gs
jne
jne
jl
jb
pop
sub
cmp
sbb
fists
lods
jge
pop
sbb
jmp
movsl
faddp
nop
pushf
add
mov
jg
rcrb
xor
repnz
jge
sub
push
mov
mov
sub
add
or
sbb
daa
mov
or
xchg
mov
test
push
pop
loope
sub
xchg
shl
int3
sub
dec
adc
shrb
mov
and
add
mov
cmp
lods
and
ljmp
xor
in
dec
notl
inc
out
xor
add
in
mov
sbb
mov
jbe
outsl
pusha
cmp
enter
fisubrs
or
nop
lods
mov
es
int
xchg
cmpsb
aas
inc
imul
xchg
and
pop
add
sahf
add
or
mov
mov
aam
popa
ret
cli
call
push
mov
leave
and
pop
out
xlat
dec
dec
leave
leave
jg
cs
mov
jl
orb
sub
xchg
add
jbe
sub
xor
out
sub
outsl
add
stc
sti
and
cmc
ficoms
loop
stos
out
or
and
mov
xor
xor
cmp
fistpll
sahf
in
pushf
popa
jg
test
sahf
hlt
popa
xor
push
sbb
jo
xchg
cld
stos
xchg
inc
shlb
ret
mov
pop
fisttpl
es
sbb
inc
or
add
mov
mov
enter
fwait
inc
aad
inc
je
fdivs
das
das
pushf
adc
push
jno
scas
xlat
mov
insl
lahf
push
imulb
mov
and
sbb
dec
jmp
or
xlat
push
mov
int3
jnp
mov
pusha
adc
mov
xchg
iret
or
pop
or
movsl
mov
xchg
sbb
cmp
pop
push
cwtl
ret
test
std
sbb
cs
push
pop
nop
cmp
cmpsl
sar
jbe
mov
mov
fisttps
sbb
cmp
pop
inc
test
fisttpl
insl
movsl
ljmp
adc
pop
mov
nop
mov
enter
inc
xchg
xor
sbb
cmp
mov
cltd
sbb
int
mov
pop
repz
xchg
rcl
int3
and
jnp
std
sbb
lods
sbb
or
in
push
or
out
push
in
ret
jnp
das
xor
jle
shll
in
mov
jae
mov
inc
pop
ljmp
mov
jl
es
sub
or
or
aad
pusha
pop
sub
pop
fdivl
lds
push
lret
out
pop
in
cmp
adcb
mov
out
adc
repz
push
sahf
shl
adc
ds
shlb
fistpll
addr16
pop
jp
fsubl
push
adc
stos
lret
jns
jnp
jp
lret
push
mov
addr16
std
movsb
hlt
mov
inc
je
push
add
pusha
pop
shr
mov
jle
sti
add
jg
out
nop
in
xchg
push
dec
jge
jmp
mov
jecxz
push
xor
xchg
or
xlat
lcall
test
mov
pop
pop
aad
mov
ljmp
mov
int
mov
lcall
cs
stc
mov
shlb
sub
cld
xor
push
mov
insl
pop
data16
push
pop
in
out
xor
out
or
test
pushf
pop
cmc
mov
cmpsb
jge
and
rclb
js
jb
jns
mov
repz
dec
push
cmp
pop
mov
rcll
xchg
idivl
jle
xchg
xor
pop
adc
aad
lods
jae
mov
sbb
add
clc
les
xor
sbb
adc
inc
sbb
adc
xor
pop
mov
adc
std
adcl
call
popa
jae
xchg
adc
inc
popa
idivl
daa
icebp
out
cmp
test
pop
inc
cwtl
jbe
or
sbb
lahf
repz
push
mov
insl
int
dec
and
loopne
and
loope
nop
movsb
jb
mov
not
gs
out
stos
mov
push
fcoml
lock
inc
gs
and
or
xchg
mov
add
xchg
cmp
pushf
lock
aam
test
cmpsl
fwait
inc
rorl
cmp
outsb
xchg
sti
test
aad
lds
inc
and
pop
jne
gs
push
daa
inc
xlat
mov
movsl
notl
xchg
mov
cmpsl
lds
inc
and
pop
jne
gs
push
daa
inc
xlat
mov
movsl
out
out
xchg
cmc
and
aad
lds
inc
and
pop
jne
xor
inc
iret
mov
mov
xchg
cmc
xchg
in
aad
add
fstl
sbb
sub
cmp
fldl
xor
add
adc
es
or
cmpl
loop
repnz
shl
rclb
and
xor
add
adc
inc
jb
inc
popa
push
xchg
mov
mov
and
ret
adc
add
xor
and
push
jnp
push
pop
popa
dec
xchg
inc
mov
xchg
shll
mov
and
xor
cltd
pop
lea
stos
lcall
cmp
or
sbb
cmpsb
mov
jg
jae
mov
out
push
jmp
mov
sub
xchg
pop
xchg
xchg
cmpsl
cmpsl
ret
out
pop
pop
push
jb
ss
mov
repnz
bnd
loope
adc
xor
add
and
inc
mov
lods
popa
repnz
push
bound
xorl
test
mov
fdiv
scas
inc
popa
mov
das
mov
orl
stc
rorb
add
fnstcw
lret
js
mov
lret
xorb
jecxz
shlb
add
push
bound
jno
popa
dec
xchg
mov
mov
in
ret
je
bound
ja
adc
xor
sbb
cs
loope
in
ret
std
push
popl
mov
push
jb
pop
xor
or
es
jecxz
out
int3
mulb
popf
cwtl
scas
mov
ja
inc
addr16
inc
jb
inc
popa
push
xchg
mov
mov
repnz
ret
adc
add
xor
and
push
bound
jno
popa
push
xchg
mov
mov
repnz
ret
adc
pusha
mov
and
sbbl
mov
mov
int3
sahf
clc
cwtl
lock
out
push
dec
mov
xor
sub
fpatan
test
ss
pop
ljmp
enter
adc
clc
mov
test
in
fisttps
sub
add
dec
dec
add
or
xchg
mov
mov
xor
dec
nop
fisubrs
and
sbb
in
mov
add
lds
push
mov
dec
adc
mov
jns
jmp
push
push
stos
and
mov
xor
xor
sar
jmp
lahf
or
adc
push
sub
push
movsl
aad
rorb
mov
mov
mov
out
leave
sbb
in
push
pop
inc
adc
sahf
mov
push
aaa
fisubl
rorb
sbb
loopne
mov
out
fwait
push
and
or
pop
dec
mov
sub
cmpsb
insb
sub
inc
xor
sarl
mov
mov
mov
lods
xchg
cmpsb
push
jecxz
xor
jle
add
xchg
dec
int3
xlat
push
jle
jb
push
jmp
clc
aaa
in
inc
lock
out
or
and
test
rcrl
dec
adc
or
loope
outsl
shlb
out
xor
inc
insb
cmp
fstpt
cmp
inc
adc
add
scas
mov
mov
jl
call
xchg
pop
adc
loopne
push
xchg
fadd
leave
iret
pop
xor
movsl
gs
or
push
addr16
filds
lea
mov
inc
mov
or
jle,pn
adc
movsl
enter
scas
cmp
add
fidivs
pushf
ret
insb
cltd
push
xchg
add
mov
mov
outsl
cli
mov
cmp
mov
ds
jmp
fs
cld
jecxz
ds
cmp
jp
fsub
mov
sub
insb
ljmp
fcoms
push
dec
inc
push
aad
sub
jnp
ljmp
cli
xorb
enter
and
adc
inc
xchg
rcrb
pop
insl
jp
push
call
in
pop
daa
sti
roll
xor
rcrb
and
mov
dec
fcoms
out
add
mov
pop
push
leave
iret
push
pop
call
pop
fcoml
push
add
push
les
pushf
iret
popa
jo
mov
sub
jbe
mov
insl
sub
js
imul
cmp
mov
ds
jg
mov
divb
fcmovbe
frstpm(287
sbb
loopne
mov
mov
ds
das
mov
ret
int
cmp
int3
add
movsl
loopne
hlt
lods
add
sub
mov
mov
cmpl
ficoms
xor
jge
ror
sbb
js
push
xchg
add
xchg
xchg
js
push
jmp
dec
out
adc
mov
cmp
jnp
mov
xchg
add
dec
popf
lock
pop
push
ret
out
cmp
repz
jle
lods
aam
in
or
out
add
in
push
mov
and
cmpb
mov
ja
jb
push
push
rcl
fidivl
pusha
sahf
test
loopne
lahf
cmpsb
aam
lret
cli
ds
xchg
lock
aad
jne
adc
sti
mov
loope
rcr
xchg
aas
loopne
ds
xor
pushf
pop
jne
in
addr16
lcall
mov
cmpb
inc
cltd
push
mov
xchg
cmc
movsl
cmc
jge
insb
das
mov
pop
xchg
stos
push
rolb
mov
sub
pushf
jmp
or
outsl
pushf
xor
jp
sbb
cld
sarl
shrl
jmp
and
jae
push
mov
push
lock
lret
and
adc
adc
les
cmp
cmpsb
pushf
xor
jle
pop
andps
adc
fsubrs
mov
adc
cmp
adc
cs
rcrb
lret
sub
call
sub
sbb
btr
jp
fimull
jnp
sub
shl
movsl
aaa
andb
adc
or
xor
test
stos
call
insl
jp
imul
jbe
jge
in
std
in
lods
imul
fwait
push
cmc
jp
gs
push
jnp
pushf
push
ficoms
stc
js
test
faddl
push
jg
pop
push
repz
pop
lret
jg
push
es
das
or
std
cmp
flds
jge
lods
stos
ljmp
ss
and
stc
and
pop
int
jge
dec
push
adc
cmpsb
pop
imul
jmp
out
mov
loop
mov
jp
outsl
jle
movb
fld
mov
mov
or
shl
jno
mov
jg
mov
imull
mov
mov
frstor
adc
loopne
sarb
cmp
mov
aaa
mov
iret
shr
shl
pop
fcmovu
mov
push
or
jmp
popf
incb
stc
cli
mov
jg
cmpsb
xchg
xchg
addr16
pop
iret
fimull
stc
push
test
mov
rcll
stc
out
jnp
mov
push
jbe
xchg
and
cmp
fisubrs
or
in
jecxz
iret
sbb
push
push
rorl
mov
clc
jno
hlt
mov
gs
ljmp
imul
mov
sbb
cli
or
pushf
cli
sub
ret
adc
mov
js
dec
cmpsb
and
add
ds
jmp
fstps
std
pop
mov
cld
popa
mov
mov
xor
mov
mov
mov
mov
movsb
push
daa
cmp
or
test
les
iret
adc
xchg
loop
jbe
sub
aam
ss
dec
movsl
cli
push
lock
out
jne
mov
sub
push
mov
shlb
xchg
pop
int3
fwait
add
loope
and
ret
add
add
mov
loope
lods
rorl
test
or
sub
test
sbb
test
loope
fidivs
xchg
cltd
int3
push
sbbb
dec
pop
roll
rcl
cmp
repz
sti
loope
pusha
mov
sub
mov
outsb
mov
push
adc
inc
lret
das
inc
pop
xor
scas
mov
adc
inc
mov
outsl
or
dec
scas
cmc
xor
js
ljmp
ret
iret
cld
aad
pusha
int
mov
and
jecxz
cmp
inc
inc
js
dec
adc
mov
int
adc
dec
add
pop
movsb
mov
sbb
push
cs
jne
test
aam
mov
xchg
popa
mov
add
jo
ret
add
test
sarl
aas
outsl
adc
push
js
lret
icebp
shlb
iret
xor
mov
push
add
int
sub
push
sub
and
xor
daa
pop
movsl
popl
fisttpl
pop
cld
jb
mov
xchg
repnz
orl
stos
push
add
pop
daa
sbbl
into
iret
xor
ret
jmp
arpl
cmp
inc
cmpsb
or
or
callw
test
pop
fs
test
std
pop
jbe
insl
es
out
lds
dec
test
js
faddl
xorb
fsts
push
xor
inc
out
pop
cmpsb
sysenter
inc
loope
pusha
sbb
adc
push
into
in
in
cmpsb
rclb
in
mov
inc
popl
ss
mov
inc
pop
push
xor
push
std
add
ds
sub
push
loope
dec
test
scas
and
mov
jb
aaa
cltd
movl
mov
or
xor
fs
xchg
fldcw
subl
jg
xchg
lock
push
popa
je
jecxz
cmp
push
adc
and
das
loopne
enter
push
ret
cmp
das
mov
xchg
add
insb
push
or
movb
push
inc
or
arpl
mov
and
mov
ds
rcrb
add
mov
clc
cmc
mov
xor
mov
pop
mov
das
stc
loopne
movsl
int
and
icebp
adc
cmp
or
xchg
pushf
dec
enter
rcrb
jg
jg
mov
ret
ss
addr16
mov
leave
sbb
inc
test
jl
int3
popl
loope
push
stc
call
xchg
dec
pop
stc
jno
repz
pop
push
aam
xor
lret
lcall
mov
in
push
pop
fs
ss
adc
icebp
and
fwait
xor
shrw
push
pop
rcrb
mov
ficompl
lock
imulb
in
inc
into
sub
lret
nop
jmp
lcall
aam
cld
push
insl
add
pop
into
xor
mov
add
cli
jecxz
adc
cld
aaa
cmp
scas
fwait
addr16
movsb
jnp
or
sbb
lcall
imul
hlt
clc
movsl
cmp
loope
sbb
aas
lahf
scas
mov
jmp
pop
pop
dec
divb
and
ja
daa
imul
fimuls
and
sbb
ret
dec
sbb
and
pop
imul
into
sti
fadds
sbb
daa
das
adc
into
adc
push
inc
iret
test
inc
out
sub
pushf
in
fsub
jo
in
notb
je
add
loope
mov
sub
cwtl
std
and
inc
mov
xor
and
scas
adc
pop
testl
lahf
mov
or
and
fsubrp
mov
and
out
fst
push
adc
popa
adc
aaa
lret
mov
xor
mov
lret
es
cmp
rcrl
fs
xor
or
es
movsb
cmc
loop
mov
adcl
fs
xor
jle
jle
push
ja
loope
lret
jle
and
push
and
add
and
mov
sbb
data16
pop
pop
aaa
sub
repnz
cmp
and
dec
out
dec
sti
insb
movsb
and
ret
cltd
adc
fcomp
xor
push
mov
adc
sar
push
fidivrl
xchg
mov
sbb
fs
rcl
push
out
test
jp
insl
push
imul
adc
dec
addl
dec
push
inc
mov
xchg
in
cmp
aad
cmpb
in
or
adcl
out
scas
lahf
sub
or
xor
jo
fsub
mov
sub
repnz
idivl
mov
and
imul
mov
jns
jae
stos
push
sub
es
sub
inc
pop
jle
jge
mov
add
lcall
out
pop
test
adc
out
cmp
fwait
imul
mov
cmp
cmp
dec
cmc
sarb
enter
shr
mov
jecxz
cmp
inc
fistl
sub
or
mov
iret
scas
in
jne
daa
mov
xchg
and
mov
pop
jns
pushf
mov
inc
movsl
mov
fcmovnbe
xchg
or
push
or
push
jp
fimuls
inc
mov
in
xchg
mov
sbb
repnz
push
cmc
pop
test
and
ret
inc
iret
stc
pop
ret
orb
sub
scas
mov
inc
jl
mov
dec
add
adc
jecxz
lods
test
xor
add
inc
xchg
aas
stc
adc
lods
lods
adc
mov
cwtl
lret
xchg
cmp
xor
dec
jge
dec
jl
rolb
add
shll
dec
divl
push
je
or
inc
popf
jnp
xchg
stc
jnp
inc
aam
push
cmpsl
dec
cmp
gs
daa
lret
sbb
xor
jle
aam
out
clc
leave
jle
mov
sti
mov
in
cwtl
xchg
mov
insb
imul
push
xchg
xor
jae
or
mov
fldl
add
daa
daa
insl
cltd
jno
orl
sub
insl
jmp
jbe
imul
gs
sbb
inc
fcoms
mov
mov
push
test
ficompl
cmpsb
jp
inc
out
add
push
cwtl
inc
repz
sbb
lret
cltd
sbb
sbb
mov
aam
sbb
mov
popa
jg
jg
or
push
or
adc
add
clc
fbld
stos
xor
push
xchg
mov
jae
icebp
loope
push
not
cmp
adc
and
sub
and
cmpsl
test
mov
sbb
cmp
mov
xchg
rol
or
sbb
rol
push
pop
lods
jbe
pusha
les
popa
jl
xchg
push
insl
shl
sahf
sti
mov
jmp
pop
jbe
push
mov
inc
add
mov
fmull
and
inc
dec
xor
jbe
movsb
xor
daa
jae
mov
sub
push
sub
loop
daa
sub
fwait
mov
sti
ljmp
sti
sbb
mov
mov
mov
cmp
ficoml
mov
mov
inc
outsb
cmp
movsl
push
mov
ret
repz
push
sub
sub
outsb
pusha
xorl
mov
cmpl
jne
jl
and
sub
std
mov
sbb
pop
icebp
mov
andl
in
push
andl
sti
xor
inc
cmc
into
jecxz
nop
scas
inc
add
mov
int3
cs
jbe
ret
loope
mov
push
push
rorl
in
test
mov
pop
inc
xor
aam
dec
dec
ret
inc
xchg
and
enter
and
dec
mov
mov
push
mov
leave
mov
mov
outsb
cwtl
cmp
dec
pop
out
out
ljmp
mov
mov
push
stos
xchg
clc
jg
cli
xchg
iret
mov
mov
jns
cmp
sub
and
adc
jmp
in
push
and
mov
pop
lret
lcall
mov
push
cmpsb
push
in
sbb
fcomip
sub
aas
or
invd
popa
enter
add
mov
pop
and
cmc
insl
popl
mull
les
push
sub
lock
push
sbb
outsl
inc
or
push
sbb
or
sub
jne
shll
push
cmp
gs
xor
test
mov
aam
test
add
hlt
divl
push
enter
cmpsb
out
jae
leave
shlb
xchg
xor
mov
xchg
cwtl
cmp
jmp
fimuls
test
push
pop
lcall
mov
xchg
xor
and
mov
sti
jecxz
gs
mov
call
xchg
in
ja
fstps
incb
jno
stos
xchg
xchg
adc
add
mov
std
icebp
dec
push
push
pop
mov
mov
sbb
cmp
push
clc
xor
xorl
and
or
and
rorb
mov
shrl
sahf
out
push
mov
std
sbbl
rcrl
iret
mov
push
dec
lods
ss
shl
mov
int3
jae
xchg
ljmp
fstpl
test
xchg
fstps
rorb
mov
loopne
mov
ficoms
inc
jg
mov
cld
xchg
loopne
or
push
addr16
xchg
movsb
out
and
fisubs
lret
adc
pusha
cmp
lods
jb
xorl
pop
popf
hlt
divl
dec
and
dec
or
mov
mov
mov
jno
jae
in
lahf
aas
bound
inc
push
adc
xchg
shr
scas
mov
inc
mov
jo
icebp
subl
jae
mov
outsb
push
pop
push
scas
lret
push
ud0
popa
cmp
dec
inc
into
jbe
sbb
in
lcallw
cmpl
sbb
shll
jne
aam
sub
movb
mov
fdivs
dec
jl,pt
movsl
or
push
cmp
sbb
cmpsb
aaa
sbb
mov
mov
test
xor
or
xchg
insl
icebp
test
xchg
int3
mov
rorl
cmp
mov
pushf
test
jmp
lds
inc
sti
inc
or
outsl
sub
mov
inc
in
gs
push
aas
dec
lcall
add
sub
out
shlb
dec
leave
cli
stos
sub
shll
dec
fwait
pushf
outsb
mov
or
jns
xorb
xor
add
into
and
test
jle
pop
sbb
adc
jae
outsl
sar
fnstcw
ljmp
xor
pop
cmp
fnstsw
les
lods
push
ret
or
addb
mov
mov
xor
push
sbb
cmpsb
enter
testb
cld
in
fiaddl
jo
xchg
andb
mov
mov
jecxz
je
sti
mov
or
xchg
inc
test
inc
aaa
cmp
cwtl
je
loope
sti
xchg
fildll
clc
push
ret
mov
addl
sbb
xchg
pop
std
adc
ljmp
xor
add
mov
or
mov
js
movsl
xchg
jmp
mov
popf
leave
mov
cmp
ror
sbb
into
ljmp
mov
push
inc
pop
sub
sbb
cmpsb
shlb
outsb
bound
sbb
leave
and
stc
rcrb
out
xor
pop
cmp
lea
rcrl
cli
wrmsr
les
adc
movl
stc
xchg
pop
and
jecxz
insl
add
cmp
imul
imul
push
mov
sahf
cs
mov
std
lret
xlat
mov
dec
inc
cmp
nop
outsb
sbb
movsl
mov
jl
inc
int3
dec
jecxz
enter
ret
add
mov
cmp
movsl
and
adc
xchg
fcomps
in
fisubl
sub
sbb
pop
loope
icebp
adc
cmp
and
imull
std
dec
enter
shl
das
in
repnz
push
sbb
sbb
jecxz
lea
sub
test
push
dec
je
add
ret
sub
pop
rcrl
rcrb
mov
ljmp
push
data16
jle
out
add
clc
aad
fisubl
xchg
pop
pop
add
rclb
insb
xor
mov
add
lock
repz
pop
loopne
xchg
push
repz
inc
xlat
out
hlt
pop
add
mov
fnstenv
js
scas
inc
jp
inc
enter
scas
mov
sbb
test
movsb
lcall
stos
out
adc
jp
mov
maxps
testb
xchg
cmp
mov
push
push
add
mov
dec
dec
cmp
xor
sbb
popf
add
mov
in
sarb
aas
dec
and
adc
inc
nop
stos
and
mull
pop
pop
add
or
in
add
pop
cmp
cmpb
xchg
mov
adc
lods
imul
std
call
ljmp
and
pop
mov
xor
in
outsl
dec
popf
dec
shrl
xor
xchg
cld
call
push
fcmovnb
dec
mov
cmpl
cmp
lea
pop
xchg
cwtl
add
adc
adc
mov
aaa
scas
pusha
inc
dec
movsb
testb
les
addb
push
xchg
add
mull
jnp
jae
negl
cld
xchg
repnz
add
movsl
jb
mov
cmpsb
adc
ss
stos
repz
call
je
adc
sub
mov
das
addr16
int
mov
jne
push
push
daa
sub
add
sbb
push
xlat
mov
mov
dec
scas
mov
inc
mov
and
sbb
loopne
ds
inc
loopne
adc
dec
stos
shll
pop
add
aaa
mov
loopne
sub
push
push
test
lahf
mov
mov
cltd
cmp
xorb
ret
and
sti
pusha
mov
inc
filds
gs
xchg
lcall
insl
cmpsb
ljmp
das
jnp
pop
cltd
mov
push
jmp
mov
shl
lret
out
lea
push
xacquire
hlt
call
xor
mov
das
scas
sbb
les
push
outsl
das
leave
rorb
leave
scas
xchg
push
pop
cs
add
fcmovnbe
fbld
jmp
enter
push
rcl
pushfw
into
or
movlhps
fs
pusha
and
sub
and
pop
dec
xchg
or
ds
add
mov
mov
in
test
push
adc
sbb
push
sub
sub
mov
cmp
lods
mov
lea
sub
adc
push
jnp
mov
cmp
cmp
adc
add
pushf
fsubrl
xor
sub
cmpb
cmpsl
test
mov
mov
dec
incl
push
cltd
lcall
icebp
jno
shr
xor
stc
dec
cmp
arpl
xchg
mov
test
lods
mov
add
add
fisubs
xchg
mov
mov
insl
pop
je
iret
cs
in
add
xor
xor
fcmovnbe
sbbb
mov
xor
in
and
push
bound
jno
popa
push
xchg
mov
mov
repnz
ret
adc
add
xor
and
push
bound
jno
popa
push
xchg
mov
mov
repnz
ret
adc
add
xor
and
push
bound
jno
popa
push
nop
mov
mov
bnd
loope
adc
add
xor
and
push
bound
icebp
inc
loope
outsb
mov
mov
or
out
div
mov
popf
xchg
addr16
inc
inc
push
push
daa
and
pop
adc
mov
mov
xchg
ja
inc
inc
push
push
out
aaa
xor
out
div
mov
mov
xchg
push
sub
xor
pop
push
jb
jns
mov
mov
cmp
mov
mov
add
jb
push
mov
fsubrl
aam
sub
mov
jns
push
lcall
push
fsub
ss
mov
jmp
shlb
mov
or
leave
adc
movsl
and
ja
dec
push
cli
pop
adc
sbb
hlt
lods
xlat
roll
xchg
vorps
pusha
mov
jbe
gs
and
js
or
adc
sub
movsl
mov
add
rol
and
je
mov
enter
push
inc
sbb
or
outsb
inc
mov
dec
xchg
adc
lcall
ja
mov
adc
mov
mov
xchg
ja
inc
inc
push
push
daa
and
pop
push
cmpsb
mov
xchg
cmpsl
lret
jecxz
xchg
in
or
sbb
sub
cmp
dec
aaa
dec
xchg
andb
cmpsl
shl
ljmp
inc
adc
es
pop
pop
imul
xorb
mov
xchg
ja
inc
inc
push
push
daa
and
pop
adc
mov
mov
xchg
ja
inc
inc
push
push
daa
and
pop
adc
pop
aaa
clc
add
pusha
mov
insb
shlb
adc
inc
push
outsb
adc
hlt
sbb
mov
sbb
cmp
fstps
in
xchg
aad
nop
shll
cmc
shlb
pop
sub
lods
mov
xchg
add
out
aad
adcl
sub
in
jmp
jl
jns
out
sub
add
sahf
loopne
sub
sbb
scas
inc
mov
jg
addb
sub
sub
push
and
push
jno
cmp
imul
xor
insl
sub
jle
xchg
outsb
out
ds
add
pop
xchg
xlat
shl
push
inc
push
nop
cmp
lock
mov
insl
inc
mov
xor
cmc
push
in
pop
xor
mov
mov
sbb
mov
in
add
cltd
aam
push
mov
or
cmpb
jno
popf
jnp
mov
cltd
clc
jg
mov
cmpb
repnz
and
out
rolb
sub
xchg
insl
jo
inc
push
ret
repnz
movsb
mov
add
fcompl
lods
ret
adc
jno
sbb
jge
xchg
adc
jnp
sbbb
or
mov
inc
divl
jp
push
orb
xlat
push
iret
cltd
and
or
inc
dec
mov
cwtl
xchg
mov
push
xor
imul
pop
cmp
cmp
sub
clc
or
xchg
xrelease
xchg
pop
jno
cmpl
sbb
xor
push
roll
jmp
jae
mov
and
aas
outsl
sbb
cwtl
jb
dec
jns
mov
mov
out
jae
jns
rolb
bound
dec
sarb
lock
int
pop
sbb
jl
test
lret
cli
dec
dec
or
mov
sub
pop
cwtl
jno
xor
popf
adc
xor
sbb
sbb
or
lea
mov
ja
jno
ljmp
mov
mov
lret
fs
lock
jo
mov
lret
jbe
popa
addr16
mov
int3
data16
mov
stc
dec
enter
dec
int
lcall
ljmp
into
inc
mov
sbb
andl
mov
jp
stc
push
into
push
jle
fbld
jae
xor
shrl
jb
sub
in
mov
out
and
fldl
adc
test
stc
add
pop
push
mov
shl
pusha
mov
cmp
jp
xchg
loopne
lods
sub
jnp
mov
cmp
add
cwtl
push
mov
clc
jno
cmp
jg
or
out
lock
dec
out
push
lret
sbb
jb
adc
imul
lcall
and
pop
sub
xchg
inc
je
out
push
pop
dec
incl
call
mov
data16
cli
jno
mov
enter
fcmovu
scas
into
sub
cli
add
jecxz
arpl
jae
pushf
mov
rclb
or
add
inc
fadds
int3
dec
fcoml
stos
xchg
sbb
aas
mov
push
mov
or
bound
mov
ficoms
mov
push
adc
imulb
cmp
mov
add
lods
in
adc
std
jmp
push
dec
and
fsubrl
inc
scas
inc
dec
jmp
or
xchg
scas
push
mov
mov
mov
repnz
cmp
push
pushf
sub
int3
out
jle
rol
push
jb
add
ret
ljmp
in
pop
lcall
cmpsb
call
xlat
adc
and
cmp
loope
sub
or
jmp
adc
repz
push
jle
mov
pop
repz
sub
xchg
stc
sbb
outsl
adc
push
int3
mov
pop
data16
or
sbb
js
icebp
stos
scas
or
lret
jle
sahf
jnp
inc
imull
fwait
push
sbb
inc
pop
imul
cli
outsl
cmp
inc
pop
outsl
and
jp
add
clc
movsb
fdivr
int3
jmp
daa
imul
aad
fnstenv
dec
scas
push
mov
mov
dec
rclb
aam
dec
jle
and
or
sub
out
pop
push
pop
inc
lret
loope
adc
xchg
icebp
inc
push
dec
rol
push
adc
clc
andb
push
and
in
pusha
pushf
in
push
cmp
fistl
pop
and
jns
jle
push
out
inc
out
mov
fmuls
mov
sbb
in
add
jg
gs
test
xchg
sub
shl
jb
xlat
xchg
clc
in
mov
mov
sub
pop
mov
test
fdivrl
ja
xchg
repnz
or
sub
fistl
fmuls
in
mov
movsb
in
bound
ja
push
sbb
pop
mov
fstps
lret
xchg
sub
xor
push
sar
or
popa
xor
cwtl
dec
cmpsb
jecxz
fisubl
add
push
jl
push
out
ds
sbb
xchg
cs
ds
pushf
ret
pop
andl
frstor
shrl
ds
inc
sub
jns
sbb
sub
sahf
and
mov
pop
lock
add
sahf
mov
pop
scas
cli
jae
xor
ret
pop
xchg
fdivs
xchg
xchg
imul
int
lock
jbe
cld
popf
popa
adc
aad
and
jecxz
subl
and
lock
ret
fst
xor
jp
jae
mov
jecxz
mov
mov
cmpsl
sub
xchg
fsubrs
mov
sbb
or
rolb
fsubl
inc
pop
pushf
loopne
push
cli
pminub
mov
bound
mov
add
dec
pop
lahf
shrb
pop
test
and
lock
in
scas
sbb
outsl
push
cmp
xor
call
add
insl
cltd
mov
mov
popa
lret
outsb
cmpsl
mov
inc
push
fdivs
rcr
lods
push
cs
jo
lock
mov
and
subb
test
or
or
cld
aaa
mov
add
jmp
dec
cmp
sahf
adc
iret
or
daa
stos
out
or
mov
jne
and
addr16
cmp
push
dec
stos
push
pop
xchg
cmp
daa
scas
fisttpl
pop
repnz
adc
in
adc
pop
push
fnstsw
push
ficoml
adc
call
pop
xchg
orl
movsl
mov
xchg
or
jle
popf
jle
in
ljmp
aad
push
loopne
jbe
aam
add
psubw
mov
pop
mov
cli
sub
out
jg
loope
insb
in
imul
add
rorb
and
pop
xchg
cmp
lahf
inc
mov
jno
xchg
adc
popa
cwtl
pop
jle
xchg
aaa
sbb
stos
sbb
jmp
xor
add
cmc
cmp
mov
dec
push
add
sbb
imul
push
xchg
mov
jno
pop
jge
test
mov
pop
inc
xlat
cmp
repnz
pop
icebp
cmp
in
stc
stos
cmpsb
mov
add
ret
push
push
cmp
xlat
shlb
mov
mov
push
pop
in
ret
cmpsb
jns
push
cmc
mov
mov
sbb
in
push
push
addr16
cmc
or
shlb
mov
and
js
movsb
fsub
int
cmp
mov
mov
es
push
adc
mov
xor
and
inc
fidivrs
and
sub
adc
loopne
decb
nop
xor
lret
xorb
notb
ljmp
xchg
mov
scas
dec
xor
fs
push
sarl
inc
idiv
push
and
or
dec
icebp
hlt
xor
jns
cmp
add
insl
adc
inc
mov
xchg
movsl
adc
test
mov
outsb
lcall
dec
sub
test
in
test
test
ja
stos
or
shrb
push
sbb
in
jbe
mov
or
movsb
push
push
jae
bound
push
aaa
sti
enter
inc
push
pop
adc
pushf
cmpsl
in
popf
cmp
mov
mov
mov
mov
xchg
cld
mov
rcl
mov
insb
sub
and
mov
lcall
in
push
lods
cmpsb
aad
stc
inc
pop
imull
cwtl
out
pop
outsl
jno
cmp
adc
addr16
pop
shl
sbbl
sub
push
xor
out
stc
lret
in
in
sub
test
push
lcall
fldl
mov
addr16
inc
icebp
ret
fidivs
fmull
aad
jne
fs
bound
pop
ja
cs
pop
or
xchg
mov
pop
push
in
ja
mov
aad
adc
inc
sti
xchg
and
aas
hlt
std
mov
insl
and
mov
leave
fs
jno
xchg
adc
lret
arpl
dec
pop
aas
adc
pusha
cmp
push
js
cmp
add
in
adc
xlat
lock
jge
fisttpll
pop
dec
es
and
jb
mov
cmp
xchg
in
mov
or
pop
dec
mov
popl
mov
dec
sub
std
mov
fidivrl
das
mov
and
mov
addl
dec
inc
xchg
ljmp
push
daa
push
mov
xchg
int
or
loop
dec
xchg
pop
dec
mov
frstor
mov
test
and
xor
jp
or
mov
pop
shlb
test
lods
mov
mov
mov
jle
mov
sbb
jmp
cmp
cmp
and
pop
dec
add
fcompl
sti
xorl
cmp
lods
cmp
out
cmp
mov
dec
adc
adc
punpckhwd
out
je
shll
cltd
fcmove
mov
fstpl
and
xorb
aas
out
sbb
in
jl
enter
mov
add
nop
inc
push
divb
fldt
lds
inc
popf
loope
xchg
loope
jns
enter
rol
push
mov
mov
cmovo
push
jmp
lcall
pop
outsl
mov
and
pop
push
sahf
test
add
and
and
add
push
and
out
or
add
into
push
sti
mov
or
mov
std
insl
mov
mov
lods
loopne
imul
push
imul
imul
sbb
mov
aam
mov
test
add
in
mov
inc
fiaddl
push
iret
lea
int3
repz
and
xor
lock
ds
repz
jo
cmp
aam
cmp
incl
sarl
mov
mov
leave
imul
movsl
push
js
dec
sti
mov
or
push
dec
sbb
mov
mov
sbb
pop
push
ds
stos
cli
mov
pop
push
or
lock
cmpsl
mov
pusha
or
adc
aad
outsl
adc
call
add
nop
xchg
dec
mov
cltd
sub
sbb
fidivl
pop
adc
cmp
out
cmc
out
or
dec
pop
lods
cli
std
jecxz
push
dec
mov
enter
mov
jb
or
dec
mov
lods
sahf
dec
jge
pop
inc
dec
dec
movsl
mov
cmc
nop
cmp
mov
push
icebp
cmpsl
mov
orb
dec
pop
add
jg
cmp
jno
fwait
xor
or
or
xchg
xchg
jge
mov
andl
inc
and
scas
lret
mov
mov
sbb
add
sti
sub
and
int3
mov
push
adc
rorb
fnstcw
jbe
repz
pop
shr
mov
dec
add
cltd
ds
add
shlb
hlt
jae
push
outsb
fimull
sar
repz
or
ss
pop
mov
xchg
loopne
xor
imul
pop
sub
movsb
add
jl
shrb
ret
daa
outsl
xor
mov
in
shl
outsl
lods
sub
xor
adc
dec
fmul
andb
xor
and
xchg
std
fdivp
xchg
xorl
loopne
lret
and
pusha
mov
rolb
push
mov
mov
jnp
xchg
add
jmp
inc
sbb
pop
clc
shlb
lea
aam
mull
sbb
call
das
scas
mov
aam
iret
sub
mov
mov
out
rcrl
test
sbb
fwait
data16
mov
lcall
or
stc
rcrb
xchg
mov
adc
push
fstps
mov
aaa
push
push
outsl
data16
dec
sbb
mov
jae
push
hlt
into
idivb
sbb
popa
popf
cs
mov
or
in
pusha
roll
jmp
mov
xor
mov
mov
movsl
adc
pop
pop
out
adc
imul
stos
loope
mov
loop
cli
mov
sarl
out
nop
inc
pusha
xor
jno
mov
push
mov
adc
inc
movsl
mov
or
int
adc
mov
sar
notb
fmul
adc
pop
mov
daa
mov
pop
sar
movsl
subl
aad
mov
lahf
stos
pop
stc
xchg
std
or
js
add
and
enter
cwtl
push
inc
sbb
jno
dec
js
push
cwtl
or
dec
lret
aad
xor
scas
push
fdivrs
push
cwtl
mov
inc
mov
mov
mov
js
test
xchg
pop
ss
xchg
push
icebp
add
imul
push
out
dec
repz
jo
dec
jno
divl
movsl
clc
je
sbbb
sbb
in
and
mov
jo
sbb
or
bound
orb
inc
inc
mov
movsl
and
in
popa
cwtl
ljmp
push
add
push
and
jb
mov
ja
and
jne
scas
sbb
in
scas
cmp
jle
aaa
mov
ret
push
and
jo
mov
insb
lods
arpl
fdivrl
jae
repz
mov
mov
jp
push
pushf
nop
scas
xor
loop
and
adc
pop
cld
loop
dec
pop
ret
pop
cli
fidivrs
push
aad
pop
sub
int3
sub
sub
mov
cwtl
and
lahf
insb
insl
imul
dec
pop
popa
lret
cmp
mov
mov
pop
lahf
dec
or
push
mov
push
ja
jnp
bound
shll
lahf
or
sub
sbb
push
mov
mov
mov
add
pushf
fsubrl
push
xchg
jno
jbe
dec
jl
lahf
ret
lods
orl
incl
push
jg
sbb
aad
push
jbe
scas
into
insb
aaa
xchg
rclb
out
lock
mulb
iret
sub
es
in
dec
je
pop
pop
xor
or
mov
out
add
dec
pop
cld
iret
mov
or
add
clc
int
in
push
xchg
push
dec
jge
push
dec
ret
out
lcall
rcl
adc
jp
ljmp
and
rolb
mov
dec
repz
lret
sub
outsb
sub
jo
orl
jmp
xchg
out
pop
cmp
int
or
iret
mov
adcl
push
jbe
xchg
insl
or
mov
and
dec
out
stos
mov
add
aad
jmp
inc
xchg
mov
ljmp
movsb
sub
mov
jmp
push
out
ss
lahf
cmp
xchg
enter
jmp
test
sub
sub
mov
and
fnstsw
cmp
fsubl
sahf
int3
call
inc
lock
xchg
cmp
mov
sbb
add
xchg
push
pop
add
idivb
xor
sbb
and
int3
sbb
dec
push
cmpsl
add
sub
sbb
test
pushf
or
mov
negl
addl
sti
add
jae
or
insl
out
jle
leave
xchg
ja
test
and
decl
adc
adc
je
rclb
mov
cmp
pop
dec
fs
enter
lock
insl
and
fimuls
js
adc
push
out
mov
roll
or
mov
outsl
add
out
enter
dec
adc
aas
pop
leave
lea
mov
lock
in
mov
fsubl
cmp
lcall
out
add
in
int
fildl
and
repz
je
out
fisttps
dec
pop
gs
jbe
pusha
sbb
and
mov
xchg
xlat
ss
xchg
jle
jle
xor
mov
psrad
movsl
iret
repz
out
add
shlb
iret
stc
sub
stos
dec
xchg
pop
push
pop
adcb
inc
xchg
lock
sti
adc
or
cli
xchg
and
pop
in
sub
dec
dec
inc
icebp
mov
push
daa
test
in
mov
leave
clc
das
dec
jecxz
repnz
repnz
sbb
mov
sbb
clc
cmp
cs
mov
daa
pop
out
mov
sub
aas
test
add
insl
mov
imul
sbb
pop
mov
fmull
xor
mov
es
pop
jb
inc
shlb
mov
xchg
jno
push
cli
pop
and
sub
mov
lods
xlat
push
pop
cmpsl
dec
lods
insb
inc
or
dec
inc
loop
xlat
loope
mov
outsb
xlat
in
popa
test
adc
sbb
xchg
in
dec
pop
push
inc
mov
nop
fs
jno
push
mov
out
pop
inc
and
dec
loop
test
push
clc
fadd
pop
dec
sub
pop
xor
in
icebp
aad
xchg
mov
or
pop
popa
add
inc
int
xlat
cli
or
lods
nop
in
xorl
mov
xlat
mov
jmp
das
hlt
nop
into
mov
jnp
es
jnp
sahf
and
mov
add
push
xor
outsl
pop
xchg
jle
lahf
jge
push
push
fcmovbe
jg
rolb
pop
sbb
and
addr16
fadds
insb
ljmp
pop
jno
ljmp
test
mov
inc
mov
ret
sub
std
ss
xchg
pmulhuw
sbb
sub
movsb
cld
add
lcall
sti
btc
fcomp
pop
dec
adc
nop
sti
cmp
sbb
test
xchg
outsb
jmp
in
xchg
mov
jmp
pop
and
adc
xchg
mov
int3
xchg
in
xchg
fisubrs
pusha
arpl
xchg
outsb
pop
into
inc
imul
imul
scas
mov
imul
ja
xor
cld
jle
and
clc
sti
loop
loop
mov
inc
sbb
rcrb
ljmp
pop
stos
mov
or
jmp
in
jo
push
push
stos
and
adcl
lods
mov
xor
dec
push
daa
lock
je
stos
into
and
sub
and
add
mov
push
fsubs
fcomps
sub
fsub
dec
dec
rolb
xchg
int3
and
shr
jecxz
fs
cltd
addr16
mov
dec
stc
rol
jbe
test
test
adc
stos
ljmp
xchg
cmp
aas
hlt
hlt
adc
mov
xor
sbb
jp
repz
loope
shl
iret
xchg
mov
mov
ljmp
enter
xlat
mov
xchg
cmp
arpl
mov
dec
mov
cmp
into
sub
cltd
cmp
bound
lahf
mov
sbb
push
sub
mov
inc
cmpsl
xchg
xchg
add
push
imul
mov
mov
xchg
xchg
adc
dec
pusha
fisttpll
enter
dec
inc
leave
xchg
lea
add
mov
cli
loopne
adc
and
dec
stos
mov
movsl
pop
pop
out
xchg
leave
dec
in
sbb
mov
stos
lcall
into
out
mov
xor
inc
adc
cwtl
cmp
cmp
adc
insb
daa
sti
fistl
jnp
jmp
mov
jo
mov
jmp
popa
in
dec
mov
xchg
sbb
ret
inc
sbb
mov
insb
push
dec
and
push
jns
and
jle
mov
add
mov
rorl
test
inc
pop
jo
or
jbe
lea
dec
loopne
arpl
mov
inc
mov
mov
jae
xor
and
scas
and
mov
or
push
lcall
orl
sub
clc
sar
mov
pop
mov
jo
or
jae
dec
roll
clc
jge
cmc
in
sub
ficoms
cmp
aaa
jne
mov
xor
pusha
pop
adc
pop
push
insb
aaa
std
jae
and
cmc
mov
aad
movsl
mov
xchg
ja
inc
inc
push
push
daa
and
pop
adc
mov
mov
xchg
ja
inc
inc
push
push
daa
and
pop
adc
inc
daa
movsl
mov
xchg
je
inc
push
push
daa
and
xor
out
div
mov
mov
xchg
ja
in
inc
push
and
inc
lret
addr16
dec
inc
mov
outsb
xor
add
hlt
in
in
aam
les
mov
push
dec
inc
cmp
sub
sbb
or
in
hlt
in
test
aam
les
mov
push
push
inc
and
adc
add
pop
iret
in
mov
les
fildl
cmp
adc
lret
add
pop
in
push
adcl
std
and
mov
cltd
adc
sbb
aad
dec
in
sarl
sub
jbe
mov
test
xchg
push
int3
call
in
inc
cmp
mov
xchg
cwtl
push
and
fwait
or
mov
sub
xchg
inc
fisubrs
sub
loope
rcl
lods
mov
push
add
xchg
or
mov
sub
inc
movsb
lods
pop
arpl
or
mov
ret
inc
cs
add
pushf
jmp
orb
push
dec
inc
sub
and
adc
add
hlt
hlt
in
aam
les
mov
adc
or
cmp
push
pop
or
cld
xchg
adcb
aad
xlat
out
xchg
loope
adc
xor
push
jl
inc
sbb
pop
add
mov
stos
mov
icebp
call
aaa
xor
and
and
adc
add
hlt
in
in
aam
les
mov
push
dec
inc
cmp
sub
sbb
or
cld
hlt
in
in
aam
les
mov
out
add
dec
cwtl
push
push
ret
lods
mov
inc
inc
clc
mov
icebp
cmc
sbbb
jp
xorl
jg
cld
ljmp
sub
xchg
jnp
cmp
push
into
dec
ret
sbb
rcl
imulb
enter
xchg
mov
mov
or
sti
sbb
ficoms
pop
imul
jno
div
and
dec
and
xchg
mov
cmp
adc
pop
sbb
pop
fisubrl
scas
inc
add
test
sbb
in
mov
mov
jae
pop
mov
xchg
push
aas
mov
jb
mov
mov
mov
outsl
vcvttsd2si
loope
imul
out
je
xchg
push
sub
lods
jno
mov
fidivrs
aad
nop
sbb
or
ss
push
pop
fisubs
shl
mov
sub
add
mov
push
js
pop
cltd
and
push
out
lcall
flds
push
xchg
jmp
clc
mov
mov
lret
mov
ds
jecxz
icebp
sahf
mov
fisubs
mov
cwtl
or
xlat
les
out
mov
jp
rorb
xor
add
jns
arpl
pop
pop
sbb
xor
push
lcall
push
mov
push
mov
rcrb
sub
cmp
sbb
les
bound
aam
aad
mov
inc
icebp
sbb
and
jb
movsb
les
insl
xlat
daa
mov
dec
sub
push
fcoms
pop
or
jp
subb
add
xor
ja
test
cs
data16
add
dec
push
das
sti
les
or
pop
push
pop
jp
xchg
jne
mov
mov
mov
nop
les
mov
mov
mov
rcrb
lret
ja
cmp
divl
clc
inc
jo
test
add
int3
xor
jp
psrad
xorl
je
out
push
cmpsl
in
lds
and
adc
lret
jmp
cmp
xchg
mov
fdiv
pop
frstor
lret
mov
add
rolb
inc
outsb
inc
dec
das
mov
push
das
jno
adc
cmc
xchg
test
scas
jecxz
test
pop
adc
out
add
test
popf
ss
inc
mov
sub
adc
sbb
cmpsl
pushf
mov
clc
xor
xor
neg
dec
lea
sub
dec
insb
mov
outsb
mov
inc
jmp
fsts
xchg
adc
movb
adc
cmp
pop
dec
mov
dec
lea
sbb
cmp
fwait
out
test
inc
stc
push
or
pop
cld
jle
jno
jmp
mov
xorl
outsl
mov
mov
mov
fdivl
mov
mov
ljmp
ljmp
pop
sbb
xchg
or
xchg
scas
cmpsl
mov
lds
push
mov
jle
push
xor
addr16
or
or
jp
and
and
jns
in
adc
push
or
addr16
mov
iret
jae
pushf
stc
movsl
pop
mov
bound
rcl
inc
les
xor
push
js
adc
cmp
sahf
lods
sbb
fdivs
mov
and
lret
adc
adc
nop
mov
pop
punpckldq
orl
jo
mov
pop
inc
shrb
andb
jne
xchg
mov
ss
stos
or
std
pop
sub
loopne
aas
add
aas
jno
xor
cld
jle
and
xchg
adc
pop
mov
mov
xchg
or
sub
or
rorl
xor
int
dec
inc
push
dec
jecxz
jecxz
enter
rorb
jns
outsb
push
pop
adc
jle
jo
adc
ja
push
and
mov
pop
dec
push
sbb
mov
movsl
sub
inc
jl
movsl
push
mov
sarb
in
in
imul
pop
xchg
into
aas
scas
pop
ficompl
int3
mov
pop
es
fstpt
rcrb
scas
push
das
push
push
jb
or
fstps
jae
imul
jne
gs
bound
into
cmp
divb
cli
sahf
les
dec
pop
or
xchg
or
jns
push
pop
pop
sbb
lods
xlat
int
cwtl
sub
pop
loop
cli
aaa
test
test
cmpsl
cmp
mov
cmp
fimuls
enter
and
sbb
mov
imul
cwtl
je
popf
cmp
sub
outsb
sbb
push
jbe
mov
das
loope
sbb
adc
ja
inc
scas
call
ja
jns
leave
pop
mov
add
ja
xchg
lods
mov
jno
int3
pushf
or
cmp
dec
fisubrl
js
push
sub
sbb
or
cltd
icebp
popf
jg
test
mov
cwtl
mov
stc
pusha
js
xchg
dec
lods
das
lea
mov
sbb
pop
add
popf
mov
cmp
mov
roll
pop
ret
push
ret
ss
fstp
lahf
rorl
mov
jbe
inc
pop
push
jno
and
je
subl
popf
inc
es
push
adc
test
movsb
aam
rorl
xor
into
push
or
arpl
or
in
dec
outsb
scas
mov
jno
sti
cmp
data16
cld
cld
inc
inc
cmp
xchg
fstpl
mov
scas
inc
jmp
dec
xchg
or
rol
cmc
lret
mov
dec
lods
cld
pusha
push
outsb
xor
lock
jmp
in
xchg
call
lds
mov
mov
jne
shlb
pop
stc
dec
xor
push
mov
xchg
cwtl
lods
pavgb
adc
adc
dec
gs
out
pop
xor
cmp
xchg
stc
imul
or
les
pop
adc
fcoml
adc
ret
mov
sbb
sbb
inc
mov
popf
sbb
insl
inc
icebp
in
adc
cmp
adcb
and
push
loopne
lds
mov
jnp
outsb
orb
jbe
push
adc
repz
push
jge
dec
int3
std
adc
add
jmp
sbb
pop
pop
jb
push
jl
dec
iret
mov
int
dec
dec
sti
movsb
mov
adc
std
cmp
movsb
pop
pop
push
mov
mov
mov
test
pop
out
jecxz
shll
dec
imul
or
push
xor
stos
cmp
std
rcrb
loope
xor
and
add
pop
lahf
fsts
frstor
mov
mov
aas
mov
xchg
cmp
mov
push
cmp
push
scas
mov
out
insl
push
mov
enter
push
clc
mov
pop
jle
outsb
and
or
jne
jg
inc
movsl
or
dec
cmp
or
xchg
dec
sub
aaa
pop
inc
sub
lods
xor
es
pop
loope
mov
sti
cltd
jne
and
test
xor
inc
dec
sbb
outsl
rclb
fdivs
cmc
mov
dec
cmp
nop
and
add
mov
int3
mov
mov
xchg
popf
jle
sbb
dec
out
clc
js
scas
mov
mov
mov
add
nopl
in
mov
ljmp
ficompl
cmp
lea
popf
sbb
and
mov
mov
aaa
push
std
sbb
pusha
movsb
iret
pop
clc
cmp
popa
sub
negl
shl
nop
push
lcall
icebp
lods
inc
sub
adc
sbbb
stos
mov
push
mov
push
popa
add
push
cmp
imul
ret
inc
dec
xor
lcall
fwait
jno
push
xchg
adc
dec
repnz
pop
mov
pop
adc
xchg
ljmp
je
aad
ret
scas
out
out
mov
adc
out
inc
je
push
sub
icebp
stos
aad
lds
pop
jnp
das
loopne
cmpsl
sub
push
jmp
sbb
test
push
fs
das
push
pop
mov
stos
adc
loopne
mov
cltd
jecxz
iret
imul
cmp
mov
shll
dec
dec
popa
pop
stc
ret
sbb
push
add
roll
sbb
dec
movsl
push
out
fisttps
jns
mov
fldt
cmpsb
pop
mov
mov
dec
loope
aas
rolb
sbb
adc
fcmovbe
pop
into
gs
sbb
stc
lea
scas
dec
insb
loope
push
shll
jb
push
aam
gs
test
dec
jg
test
loop
lahf
cmp
mov
jo
jmp
or
pop
add
lret
cmpsb
add
push
cmp
sub
rcrb
dec
push
xchg
inc
mov
in
dec
sbb
in
push
negl
pop
mov
cmpsb
mov
or
adc
loope
mov
dec
lea
imul
dec
pusha
sbb
sub
cmp
push
sbb
sbb
addr16
daa
fnstenv
sahf
dec
xor
push
cmp
push
ljmp
mov
mov
mov
lock
dec
and
sub
xchg
push
repnz
xchg
pop
jae
aam
xor
adc
out
sub
shlb
stc
inc
into
xor
dec
and
pop
and
cmp
imul
mov
dec
hlt
pop
push
jae
or
lock
and
cmp
lret
jno
sbb
cmc
outsb
adc
push
jl
cmp
add
je
inc
add
lea
mov
loopne
incb
movsb
cmp
cmp
mov
or
xchg
and
int3
es
testb
cmp
movsl
out
mov
pop
decl
and
pop
adcl
inc
insl
push
cs
arpl
cltd
inc
sub
int3
stos
stos
add
out
rclb
aam
xchg
out
jle
out
stos
mov
adc
push
aad
repz
repz
inc
xchg
subl
stos
cld
dec
xchg
add
ret
pop
daa
xor
es
pop
add
mov
lret
jo
mov
adc
sub
ss
daa
loopne
mov
pop
or
xchg
sbb
dec
cmp
cmc
xchg
xchg
inc
into
sbb
inc
stos
sbb
or
bound
mov
aas
insl
inc
pop
inc
pop
push
mov
xchg
pop
pop
popa
inc
inc
sub
cwtl
xlat
call
btr
repnz
add
lcall
rcrb
inc
js
mov
mov
jne
scas
push
cli
sbb
loop
stos
ret
popa
lahf
inc
mov
mov
bound
or
movsb
mov
shr
pusha
dec
lea
mov
sti
jmp
in
dec
push
inc
xchg
dec
movsl
test
mov
aaa
xchg
js
mov
xchg
outsl
mov
pushl
and
xchg
jp
push
xchg
adc
loope
lods
lods
sbb
jle
imul
pop
xchg
and
sub
notl
jge
aas
dec
xchg
lods
ja
cli
outsl
add
sbb
js
std
or
cmp
xchg
push
aam
clc
mov
or
mov
push
push
divl
pop
mov
repnz
mov
ljmp
xchg
inc
sahf
jo
mov
or
push
xor
int3
daa
ss
sahf
leave
jle
scas
sbb
dec
into
jp
jle
and
in
cmpsl
int3
divl
popf
sbb
dec
sarb
test
sub
push
mov
mov
cltd
xchg
out
out
test
js
and
mov
loope
add
cwtl
pop
shr
in
fidivs
repz
sbb
jno
mov
addl
dec
rcl
push
mov
arpl
jnp
outsb
push
push
mov
call
adc
jne
inc
idivw
scas
xor
arpl
jle
mov
jecxz
bound
repnz
xchg
mov
leave
sbb
mov
loopne
mov
fldenv
and
test
clc
push
shrl
mov
fcmovb
rorb
xor
jae
ficoms
enter
add
mov
mov
jns
mov
imul
mov
in
mov
mov
mov
scas
stos
aad
xchg
ja
adc
in
jp
data16
ljmp
mov
int
pop
rorb
andb
insb
iret
add
mov
pop
push
dec
cmpsl
int3
xchg
adc
ds
ret
ss
add
jne
push
stc
jl
jae
pushl
insb
pop
push
daa
pop
mov
push
insl
mov
testb
add
daa
jb
adc
mov
loop
addl
cmpsb
dec
fmulp
mov
mov
xchg
cmc
test
adc
addr16
sbb
push
in
sub
pop
insb
imul
stos
xchg
mov
jg
iret
rcr
out
ja
movsb
dec
sub
push
adc
scas
mov
js
shlb
lret
repnz
push
cmp
jl
sub
sub
and
loopne
and
loop
inc
int
mov
out
outsl
popa
sbb
fdiv
aaa
rcr
cmpsb
enter
stos
fimuls
lods
sub
dec
aad
xchg
in
sub
je
popf
xchg
push
jl
lret
std
adc
repnz
inc
inc
xchg
fildl
sub
je
adc
aad
pop
test
add
add
sub
aam
dec
aad
pop
das
divl
mov
iret
push
xor
inc
and
mov
lcall
xor
xor
adc
mov
push
rcrl
shll
lret
cwtl
xor
push
imul
fcomp
loopne
jl
add
mov
xor
xor
xor
push
call
inc
dec
dec
mov
cmp
ljmp
xlat
push
mov
push
lret
stos
jecxz
push
adc
aam
fwait
and
leave
into
loop
inc
and
cmp
or
les
push
cli
push
add
into
arpl
dec
aas
pop
fucomip
xor
sub
xchg
cmc
lods
ja
and
cwtl
fldl
pop
cmpsb
add
sti
sahf
imul
fistpll
cmp
dec
sub
jle
push
sbb
or
ds
adc
lahf
hlt
cmp
ret
pop
sarb
xor
fisubrl
je
pop
gs
outsl
adc
sahf
js
ret
push
xchg
lods
push
dec
or
mov
or
outsb
les
push
jnp
and
or
dec
cmc
imul
arpl
mov
ret
pusha
js
push
sbb
ret
adc
cmpsl
idivb
push
jmp
outsb
xor
inc
xchg
fdivl
cltd
push
enter
pop
data16
sbb
mov
pushf
std
rclb
mov
dec
ret
pop
mov
sbb
xchg
jo
mov
jbe
js
pop
nop
shlb
or
sbb
out
in
mov
out
scas
dec
pop
shlb
adc
cmp
in
adc
bound
out
enter
lcall
stc
adc
ss
jecxz,pn
or
adc
push
loopne
jno
adc
dec
in
popa
roll
push
shr
or
dec
xor
stos
popa
dec
dec
adc
gs
mov
dec
pop
mov
cmp
push
inc
mov
adc
cmp
pop
adc
pusha
in
test
or
cmpsl
fildl
scas
cmp
out
sbb
sbb
ljmp
push
cmp
sub
jp
decb
mov
arpl
cmp
aaa
test
mov
lcall
sub
mov
jg
das
cli
repz
push
mov
mov
and
repz
out
push
sub
imul
into
inc
arpl
xor
lods
add
cmovnp
jg
and
sbb
cs
jo
pushf
insl
and
lds
inc
pop
loope
mov
lea
push
pop
and
nop
sarl
dec
into
mov
shll
enter
sub
shr
scas
xchg
ss
test
cmp
xlat
adc
fldt
jge
push
ljmp
push
imul
in
sub
lds
dec
inc
aad
arpl
bnd
push
xchg
ret
lret
fisubrs
and
mov
mov
ljmp
xchg
cwtl
iret
mov
ficomps
icebp
cmp
jns
jmp
add
pop
nop
cmp
mov
xchg
add
popf
and
mov
cmp
mov
daa
mov
jmp
add
ud2
jge
mov
jo
and
repnz
mov
or
js
push
imul
bound
xor
pop
add
mov
add
outsl
shlb
or
jno
xchg
jns
imul
mov
jae
jne
cmp
out
popa
outsl
pop
xor
push
mov
sbb
repz
int3
dec
pop
xor
cmp
leave
or
imul
mov
das
pusha
repnz
pop
clc
jno
fsubl
pushl
push
nop
loop
mov
xor
and
out
popf
and
xlat
push
jo
sub
data16
fstpl
sub
pop
outsb
dec
inc
in
stos
gs
adc
jo
movsl
jmp
shr
push
movl
xchg
adc
pop
pop
insl
fimull
xchg
adc
testl
dec
mov
cmp
jb
cwtl
fdivrp
pop
std
pop
out
in
rclb
jg
sub
nop
pop
insb
in
leave
popf
cmp
nop
push
dec
fidivs
push
inc
stc
lock
pop
mov
jnp
mov
fsubs
rcrb
lcall
int3
ficoml
out
xor
dec
sbb
popa
cmp
daa
les
iret
aam
mov
jg
xchg
cwtl
mov
test
nop
sbb
div
cld
outsb
out
mov
xchg
gs
popf
movsb
cld
in
xchg
mov
andl
mov
es
arpl
in
je
cmpnltps
jne
int
adc
pop
add
jg
and
mov
insl
mov
cmp
stos
mov
inc
stos
das
push
outsl
mov
xchg
popf
movsl
cmp
jp
loop
jle
or
ret
push
nop
in
cltd
add
cli
add
cs
pop
cld
ss
jae
out
das
icebp
adc
int
xchg
out
int3
sti
mov
jge
and
dec
lods
push
mov
xorl
frstor
js
add
pop
jg
jp
insl
mov
lods
mov
mov
test
mov
mov
out
push
pop
ret
or
shl
rcl
scas
mov
cld
xchg
shrl
out
push
test
lods
xchg
jb
mov
mov
mov
inc
push
add
pop
mov
stos
inc
pop
lock
imul
in
xchg
xor
mov
cmp
dec
rep
loop
insl
pop
js
dec
cmp
ret
test
and
dec
pop
cmp
sub
and
scas
mov
shl
add
es
cmp
daa
outsl
insb
xchg
pop
iret
popf
or
xlat
and
enter
out
into
push
lahf
adc
outsl
into
mov
push
rcrb
neg
mov
leave
jmp
push
or
sbb
jl
add
rorb
sbbl
mov
lods
aas
pop
push
int3
iret
test
and
test
shr
es
pop
data16
lcall
xor
mov
cld
or
pop
xchg
stos
fldl
push
outsl
nop
mov
inc
xchg
xchg
xchg
jecxz
lds
imul
aas
mov
xchg
sbb
shll
mov
rorb
xchg
loop
ss
loop
ret
stos
and
outsb
mov
dec
rcll
stos
sbb
outsb
or
imul
std
xchg
mov
add
inc
rcrb
mov
cmc
sub
ljmp
and
fucomi
lock
popa
sbb
data16
js
popf
mov
inc
cmp
push
jg
mov
ss
cmp
adc
js
ss
adc
pop
and
cli
jl
cmp
and
add
or
imull
dec
mov
lock
push
arpl
xchg
shll
sbb
xor
cmpb
inc
cli
push
inc
cmp
loope
out
cmp
and
lret
jmp
cwtl
or
jb
imul
cwtl
xor
pop
push
mov
loopne
popa
mov
pop
ds
push
imul
pop
fildll
cmp
push
cmp
cmp
jb
xor
mov
fdivp
pop
pop
xor
inc
roll
lods
sar
fs
jo
lcall
adc
mov
mov
stos
js
inc
mov
sub
negl
xchg
ss
out
mov
push
adc
aaa
sbb
xchg
cmc
xchg
ss
out
rorl
fistps
lods
adc
xor
mov
push
push
dec
jp
pop
add
cld
std
push
jb
gs
fs
push
dec
inc
cmp
sub
sbb
or
cld
hlt
in
in
aam
les
mov
push
dec
inc
cmp
sub
sbb
or
cld
hlt
in
in
aam
les
mov
aam
inc
cmp
sub
sbb
or
cld
je
in
aam
les
mov
push
dec
inc
ds
and
adc
add
hlt
adc
aam
mov
cmp
pop
arpl
jnp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
add
xor
and
out
mov
add
mov
mov
aad
shl
rclb
and
jo
in
je
fs
mov
adc
movsb
adc
loopne
nop
in
adc
add
xor
and
push
dec
inc
pop
je
fs
xchg
outsl
test
aad
shl
cmpsl
lods
mov
movsb
mov
xor
js
je
filds
jmp
dec
push
cwtl
adc
push
cmc
rcr
push
insl
mov
mov
gs
adc
add
xchg
jnp
in
clc
sub
cld
rcrl
cmp
inc
cs
and
pop
push
adc
xchg
cmp
pop
or
ja
mov
xor
enter
push
mov
mov
dec
jl
icebp
xchg
pop
in
out
xchg
jmp
inc
xor
je
fs
cld
jecxz
mov
push
movsb
addb
sbb
in
lock
mov
aaa
mov
mov
mov
enter
cwtl
mov
shl
inc
dec
xor
xor
and
push
jo
pusha
je
rclb
enter
sbb
shl
scas
pusha
bound
pop
push
push
pop
add
rdpmc
cmp
and
fnsetpm(287
shr
lahf
mov
jne
popa
inc
jno
and
je
sbb
aad
test
shl
mov
sti
stos
bound
addr16
inc
add
adc
push
fs
xchg
mov
mov
aam
loopne
shl
rclb
and
and
push
jo
pusha
je
fs
xchg
mov
mov
aam
loopne
shl
rclb
idivl
jmp
nop
or
idiv
sub
xchg
xchg
lock
mov
arpl
lea
int3
adc
xchg
gs
js
pop
dec
ja
fstpt
mov
frstor
xchg
vpmuludq
inc
push
je
cli
mov
idivl
js
out
jecxz
idivl
xchg
mov
loop
jg
jnp
or
shld
xor
jle
cmp
sbb
pop
sbb
inc
fsubrl
adc
push
jmp
data16
sahf
std
test
leave
cmp
gs
dec
push
mov
pop
shlb
in
je
add
aam
fs
dec
aaa
and
pop
sbb
add
decb
mov
cmpsb
rolb
js
fld
cli
loopne
mov
bound
xchg
push
stc
xor
pop
adc
je
dec
jge
mov
int3
movsl
xchg
xor
dec
and
jns
xchg
fisttpl
cltd
dec
lock
out
mov
mov
scas
test
mov
push
add
push
cld
mov
js
pop
not
test
mov
xlat
cmp
shl
cs
orb
imul
test
stc
mov
sub
fnstsw
jl
enter
test
or
mov
xchg
repnz
pop
sbb
lods
mov
jecxz
inc
popl
cli
dec
fadds
and
out
aad
and
add
pop
push
pop
in
pop
pop
xor
sbb
in
ror
push
add
sbb
bound
sti
je
popa
pop
pop
ret
arpl
sbb
mov
push
xor
jl
in
sbbl
test
cli
cmc
pop
jae
xlat
popa
xchg
popf
jp
notl
push
fisubs
popf
pop
push
jo
add
jae
rorl
imul
cmpsb
cmp
xor
jl
nop
jb
movsl
or
add
and
shr
lret
adc
lcall
test
pop
xor
testl
pop
xor
cwtl
push
push
shlb
xchg
adc
out
fs
pop
subb
pop
fistps
into
aam
aam
inc
fcmovne
jae
popa
lret
mov
inc
xchg
testl
nop
push
sbb
pop
add
or
fmuls
and
movsb
ror
outsb
add
cmp
push
xchg
outsb
push
jb
mov
jne
in
mov
fdivrs
jno
jbe
xchg
cmp
test
inc
xchg
out
sub
or
sub
cli
jo
lcall
icebp
sub
push
and
push
adcl
add
jmp
scas
xchg
adc
adc
out
push
shrl
sub
sub
fdiv
pushf
insl
lcall
outsl
or
mov
lret
test
loop
mov
mov
pop
jne
mov
ret
rolb
sub
xchg
and
cld
std
xchg
cmc
push
cmpsl
sahf
ss
mov
fs
loope
xor
adc
or
jmp
aas
and
js
faddl
sub
shll
xchg
mov
addr16
cmp
and
mov
and
and
int3
add
js
mov
or
mov
mov
test
add
xchg
sub
pusha
pop
sbb
add
movsl
add
xchg
push
fnstenv
arpl
jb
lods
mov
push
fwait
js
sub
adc
or
xchg
jge
subb
jle
in
in
insb
out
clc
mov
mov
adc
or
and
push
std
cwtl
push
adc
and
scas
rorl
and
adc
push
push
int
aaa
shlb
incb
jo
stc
scas
xchg
int
gs
and
in
xor
mov
xor
mov
mov
bound
cltd
mov
incl
orb
in
dec
in
out
mov
ficompl
movsb
pop
sub
cmp
ja
mov
xor
ficomps
xor
mov
jo
icebp
mov
or
cltd
mov
jmp
loop
inc
lock
push
sbb
and
hlt
mov
pop
push
shlb
jge
add
inc
clc
nop
stc
scas
pop
xchg
filds
test
mov
testl
sbb
push
adc
lods
add
mov
jp
clc
sub
mov
out
mov
ds
xchg
hlt
lods
ds
aad
out
idivb
or
mov
mov
cs
jns
cmp
cmp
add
lcall
sub
jmp
lock
pop
nop
jge
sbb
xchg
cmp
or
sarb
icebp
icebp
movd
mov
push
mov
inc
jno
sahf
int3
test
insb
jne
enter
lcall
loop
dec
push
lods
push
popf
push
and
out
mov
gs
mov
jl
pop
xchg
or
mov
hlt
cmp
xchg
pop
inc
cmp
incl
repz
mov
xchg
mov
sub
leave
clc
mov
jle
xlat
inc
adc
inc
jg
push
xchg
or
pop
mov
daa
xor
dec
mov
jg
sbb
xchg
clc
ss
or
jno
jbe
mov
cmc
scas
mov
push
lcall
and
xchg
jecxz
xor
jae
adc
dec
and
xchg
add
jecxz
pop
and
ffree
xchg
dec
sbb
add
movsl
dec
adc
jp
je
push
ljmp
jnp
data16
sti
pusha
pop
cmp
out
xor
mov
sbb
and
les
in
stc
push
jbe
sbb
ret
pushf
jp
sub
sub
cmp
and
lret
out
jbe
lahf
inc
mov
cmp
jge
inc
sti
xor
lahf
nop
cli
shlb
fxch
sarb
adc
in
and
subl
lret
mov
ss
hlt
push
rcrb
add
pusha
push
imulb
cmpsl
cmpsb
dec
pop
adc
aam
xchg
xor
rol
add
pop
add
mov
out
dec
jge
mov
stc
xchg
xlat
push
xor
mov
mov
mov
pop
popf
fwait
sbb
lea
xchg
data16
call
sub
repnz
and
int3
xor
or
in
cmp
dec
jg
hlt
and
lods
sub
arpl
add
xchg
pop
jae
shl
inc
cmc
adc
cli
popf
and
sub
test
cld
add
jmp
cmp
in
arpl
push
rclb
out
sub
bndldx
leave
test
xchg
push
in
stos
adc
lcall
xchg
out
xchg
into
push
xor
fisubl
ret
in
pop
and
aam
fildl
in
add
cld
adc
or
push
cwtl
sbb
subl
repnz
orl
adc
mov
test
popa
sbb
xor
jge
push
lahf
out
fsub
jmp
fwait
je
rcl
sar
pop
das
inc
and
push
jmp
xor
scas
loopne
frstor
or
cmp
push
mov
arpl
xchg
jecxz
jno
popf
push
xchg
les
aam
aaa
icebp
push
int3
mov
sub
cmpsb
xchg
rcrb
mov
jp
and
and
add
cmc
or
lahf
mov
dec
out
xor
sbb
loope
lods
lea
sbb
cltd
testl
mov
xchg
movsb
jbe
jo
adc
inc
mov
ss
fisubl
stos
pushf
insl
dec
dec
leave
pop
inc
daa
ja
and
and
pushf
push
xchg
mov
xor
mov
or
xorl
es
xchg
jbe
sub
test
daa
push
xor
mov
sbb
les
jns
mov
xchg
or
or
xor
cli
in
mov
in
add
or
insl
mull
add
dec
fbstp
push
movsb
hlt
add
into
je
and
cwtl
fcmovb
xchg
or
mov
mov
add
dec
xchg
add
test
sub
jno
jle
xchg
push
aas
mov
shr
mov
sub
out
pop
insl
adcl
push
test
mov
sbbl
xlat
ret
mov
add
aaa
mov
add
and
or
lcall
jecxz
add
push
stc
bnd
push
insl
je
pop
mov
mov
push
scas
add
repz
push
or
pop
jnp
push
pop
adc
xchg
mov
push
xchg
scas
clc
dec
sbb
add
mov
addr16
outsb
je
sub
std
clc
inc
xchg
push
fdivrl
mov
dec
test
in
add
das
inc
fsubr
xchg
cmpsl
test
in
sbb
and
pop
cmpsl
pop
xchg
loope
add
pop
mov
arpl
scas
loopne
lods
out
mov
mov
sbb
cmpsb
xor
adc
scas
std
jp
fs
push
mov
mov
sarl
ror
mov
adc
out
movsl
shrl
dec
int
dec
xchg
inc
rclb
dec
es
push
out
xchg
and
or
cmp
jbe
cmp
mov
adc
push
iret
inc
or
xchg
add
add
adc
jno
ljmp
gs
jg
mov
jp
jmp
lret
push
jmp
mov
or
pop
push
mov
dec
sbb
mov
push
lret
in
add
cmp
call
jp
or
aad
jb
int
push
push
xor
xchg
enter
shlb
sahf
adc
push
jmp
sub
fldcw
xchg
test
es
aad
cmp
in
mov
sbb
xor
popf
loope
sahf
popa
rcll
in
inc
out
mov
jecxz
adc
mov
shlb
cli
mov
stos
push
push
stos
jmp
mov
test
push
or
imul
fldt
mov
lcall
ret
dec
aas
loop
cmp
ja
sarb
and
push
test
fsubrs
cmpsb
jb
cwtl
and
cld
sbb
lods
test
xchg
and
das
sbb
shll
mov
pop
sbb
outsl
hlt
cmpsb
mov
xor
mov
and
loope
xchg
lret
mov
sti
sub
aad
cmc
imulb
xchg
inc
or
testb
sub
dec
out
or
jae
inc
cmp
dec
and
test
loop
imul
fwait
test
and
mov
dec
repnz
rolb
lea
xchg
orb
stos
push
sar
adc
sub
data16
lods
mov
movsb
inc
insb
fidivs
lea
jne
cwtl
pop
push
dec
gs
cmpsl
outsb
loopne
fstp
sub
xor
xchg
leave
mov
pop
push
call
inc
mov
scas
push
dec
aaa
outsl
movsb
in
add
ja
push
adc
iret
test
test
dec
lds
je
nop
fisubs
sbb
icebp
mov
lahf
cwtl
mov
inc
and
leave
cmp
xchg
pop
jg
jl
mov
pushf
cmp
pushf
repz
lret
jnp
js
mov
push
subps
stos
lret
gs
and
out
roll
jl
xchg
mov
mov
push
and
xchg
inc
mov
rcrl
mov
data16
and
imul
cmp
adc
xor
or
adc
xchg
lret
fimull
or
sahf
je
or
inc
push
push
xor
sub
push
cmp
and
aad
jb
cwtl
movsl
bound
imul
push
pop
nop
jmp
sti
int3
mov
xchg
cli
xor
pushf
or
add
shl
jp
fwait
out
fistl
cmp
popf
dec
dec
xchg
andb
lds
xchg
jns
and
hlt
mov
cli
add
cmp
aad
aam
test
daa
push
fiaddl
push
push
push
pushf
bndldx
adc
or
cmp
pusha
push
sub
cmp
repz
mov
jge
lret
mov
stc
xor
add
sbb
mov
push
sti
fwait
dec
mov
dec
lods
pop
imul
sub
lahf
pop
jmp
fimuls
add
sub
std
loop
test
fadd
add
lods
inc
clc
pushf
or
sub
arpl
call
movsl
ret
test
cmc
pushf
lahf
xor
bound
dec
aaa
arpl
cmp
popf
push
pop
lock
add
xlat
aad
imul
jae
xchg
xor
cltd
in
add
pop
mov
xorl
dec
push
xor
iret
mov
add
fcoms
sub
ds
xor
add
adc
out
pop
push
pop
sbb
adcb
pop
scas
xchg
out
in
cmp
bnd
or
int
gs
dec
test
cmp
insl
popf
adc
js
push
cmp
adc
adc
jmp
pop
mov
arpl
je
ja
xchg
inc
sbb
adc
test
adc
into
pusha
ss
push
mov
lock
add
jmp
movsl
pop
aam
push
xor
mov
mov
orb
add
xchg
push
fwait
subl
leave
xchg
test
xor
push
arpl
insl
divb
dec
inc
xor
push
xlat
enter
mov
lods
pop
and
adc
sbb
adc
pushf
pop
sub
or
push
sub
pop
inc
push
push
sub
xchg
pop
shll
and
notl
jo
shll
and
xlat
ss
dec
fsubl
push
sbb
dec
in
xor
je
mov
and
fisttps
pop
cmpsb
cmp
cltd
stc
xor
jne
int3
or
mov
push
inc
fsts
idivb
addb
ret
inc
das
lods
adc
insl
push
iret
sub
fdivrp
xchg
aas
pop
stos
inc
fcmovnu
inc
jp
inc
mov
inc
xchg
push
inc
cmp
adc
fmuls
sub
ljmp
es
iret
cmp
mov
jae
xchg
sub
cmpsl
out
mov
dec
jge
or
dec
mov
bound
push
leave
mov
popf
jmp
ljmp
sbb
stos
lahf
ret
mov
cli
cmp
fsubs
mov
push
loopne
bound
add
sbb
xchg
pusha
add
rorb
push
lock
or
push
inc
cld
pop
pop
jns
push
enter
jnp
cmp
test
inc
xchg
mov
mov
aaa
popf
cmpsl
mov
and
stc
cmpsb
add
lds
daa
mov
rolb
jmp
fdivrl
ud2
je
add
jo,pt
jne
shlb
and
add
jge
mov
adc
cmp
and
rcl
adc
push
sbb
inc
xor
push
add
inc
test
loope
shlb
mov
sarl
xchg
inc
or
outsl
fdivl
mov
rcrb
push
loop
add
mov
ret
leave
pusha
int3
push
call
mov
ret
negb
pusha
dec
lret
pop
sar
mov
lahf
lods
mov
mov
push
pop
pop
movsl
dec
movsb
jo
add
jg
loop
orb
dec
mov
push
sub
idivb
and
insb
fld
or
in
sbb
test
sub
sbb
cwtl
scas
adc
xchg
mov
arpl
into
shlb
inc
cltd
jl
loopne
in
cmp
and
fs
lods
pop
sub
shl
fs
je
mov
mov
cmp
sarb
pusha
xchg
jae
adc
xchg
cli
lods
jnp
ljmp
bound
push
loope
xchg
xor
gs
sub
mov
push
pop
insl
pop
repnz
push
aas
jmp
mov
jae
cmpsb
or
std
mov
arpl
in
xchg
shlb
pop
sbb
mov
fs
mov
xchg
roll
shr
xor
xlat
adc
popf
mov
fmuls
lea
gs
cmp
mov
mov
scas
push
faddl
mov
in
push
es
shl
shrl
add
mov
fldenv
loopne
add
xchg
in
rorl
ret
outsb
xor
sahf
add
mov
sbb
pushf
or
add
cmp
fistps
into
sub
imul
xor
out
xor
aad
xchg
lock
bswap
test
or
cmp
mov
or
add
andl
lret
xchg
fwait
push
lods
dec
xor
dec
addr16
jle
xchg
xlat
vpaddsb
call
push
mov
cli
test
dec
sub
jno
mov
in
call
inc
sub
jecxz
icebp
cltd
cmp
pop
das
shrl
cmp
and
stos
sub
mov
inc
cmc
pop
pop
lahf
pop
pop
pop
mov
or
out
fisttpll
cltd
xchg
nop
iret
int
testl
aas
dec
xlat
lds
mov
mov
pop
or
and
rorl
arpl
push
lods
xchg
mov
lret
ljmp
lods
ror
shlb
inc
sub
xlat
inc
mov
frstor
cmp
rcrl
inc
int
orl
jne
inc
sbb
add
add
sub
mov
sahf
mov
pusha
or
jg
jo
cwtl
inc
lcall
popa
aad
inc
push
and
add
loope
sub
push
and
pop
push
ds
cli
into
inc
cmpsb
dec
sahf
cwtl
mov
insl
sbb
int3
int
repnz
in
rep
or
mov
push
movsb
and
ret
aam
pop
fcoms
popa
cmpsl
js
icebp
les
lahf
imul
add
pop
fidivrs
adc
or
loopne
cltd
jbe
pusha
div
bound
dec
jnp
push
xlat
xor
sbb
cmpsl
cmp
adc
adc
cmp
inc
dec
sbb
sub
fsubs
sti
sahf
push
sub
dec
xchg
jle
sub
add
ffree
daa
pusha
jbe
test
jmp
ja
orb
lds
and
push
scas
xchg
inc
and
jecxz
sub
dec
xchg
in
scas
adc
outsl
xlat
outsb
push
push
sub
mov
cltd
adc
inc
ret
push
or
inc
mov
xchg
lds
in
cmp
pop
jp
enter
jb
stos
jp
out
jecxz
adc
repz
rclb
test
lods
popa
dec
or
mov
loope
cld
and
or
xchg
lea
scas
mov
mov
mov
cbtw
fimull
sub
or
icebp
out
jb
dec
add
and
sub
je
out
dec
arpl
lea
mov
mov
adc
mov
cmp
pop
and
and
mov
inc
stos
jg
repnz
sub
xor
cli
loop
push
and
loop
or
ss
rolb
mov
xchg
push
xor
lret
lea
mov
jne
push
stos
push
jge
lock
fwait
jg
mov
xchg
aas
xor
loop
mov
imul
adc
cmp
mov
and
jo
jecxz
dec
outsb
jo
scas
or
pop
daa
jl
pushf
sbb
jmp
inc
andnps
aas
and
mov
inc
or
add
dec
jg
jg
fimuls
rcrb
mov
loop
ss
filds
dec
jl
mov
sub
int
imulb
mov
addl
inc
mov
jo
rcll
fs
stos
test
aas
js
cmp
stos
aam
pop
iret
cmpsb
adc
fdivp
jbe
mov
push
inc
add
fwait
inc
mov
insb
test
loopne
enter
jmp
pushf
aam
daa
ret
inc
inc
jmp
cmp
mov
jmp
push
cmpsb
jg
sbb
es
inc
dec
cli
inc
xor
cmp
cmp
and
cmp
test
push
bnd
in
and
pop
adc
inc
and
out
bswap
dec
sbbb
out
fs
cmp
pop
adc
lahf
data16
xor
inc
xchg
pop
xchg
xlat
sahf
cmpsb
loope
movsb
imul
bound
and
testl
cmc
dec
pop
rolb
xchg
scas
pop
icebp
push
andl
add
in
insb
mov
dec
sti
xchg
int
add
scas
cwtl
cld
or
mov
mov
sbb
call
xchg
mov
in
pushf
or
and
inc
mov
jno
lods
and
xor
cwtl
insb
mov
pop
pop
repnz
add
adc
pushf
data16
mov
stc
xchg
or
or
insb
mov
push
xchg
sahf
sarl
ret
jbe
sbb
cltd
dec
xchg
ja
adc
or
dec
nop
sub
mov
dec
dec
push
jae
inc
iret
lret
dec
lea
sbb
nop
test
sbb
aas
sub
in
and
jl
add
pusha
je
fs
xchg
mov
mov
aam
loopne
shl
rclb
and
and
push
jo
pusha
je
fs
xchg
mov
mov
aam
loopne
shl
rclb
push
push
jo
enter
inc
xchg
push
movsb
adc
loopne
lock
adc
adc
push
jo
pusha
je
fs
xchg
dec
test
push
nop
movsb
mull
das
sbb
mov
clc
mov
rcr
mov
lret
shrl
movsb
js
dec
jo
push
sub
sbb
jmp
clc
lock
rcr
test
mov
mov
sub
lcall
add
adc
inc
loope
rcrb
cmpsb
mov
mov
mov
and
sub
pop
jae
push
jnp
jno
cwtl
movsb
clc
mov
xchg
mov
mov
add
xchg
jmp
popl
clc
les
call
pop
call
mov
das
outsl
mov
cmp
push
outsl
mov
mov
outsl
outsl
in
xchg
pop
gs
test
out
mov
lret
push
xchg
inc
cmpsl
scas
xlat
sarl
mov
loopne
lock
push
rorb
inc
cwtl
sbb
dec
mov
imul
ss
or
clc
xchg
js
cwtl
inc
mov
xchg
pop
mov
cmp
or
clc
ja
out
xor
lock
xchg
xor
cmp
dec
sub
in
sbb
insb
clc
ror
mov
sarb
addb
push
inc
inc
insb
xor
fimuls
sbb
and
lods
mov
fisttpll
and
cmp
xor
pop
insl
je
jns
cmpsb
clc
mov
mov
mov
in
frstor
or
outsl
dec
xor
sbb
xchg
lret
lods
fdivrs
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
call
rcr
test
mov
nop
push
inc
pop
push
sub
cmp
or
sbb
call
mov
xchg
mov
inc
das
or
mov
outsl
les
mov
lcall
shll
test
cmp
lret
loop
jbe
cmp
jecxz
test
lcall
mov
enter
loop
jecxz
mov
mov
out
dec
xchg
inc
adc
scas
mov
cmp
xchg
mov
adc
pop
into
cmp
jle
lahf
dec
popf
or
in
mov
mov
cmp
sub
push
cs
xor
les
outsl
adc
mov
dec
dec
sbb
mov
cltd
mov
movl
pop
xchg
and
inc
dec
or
mov
push
xchg
loopne
adc
fwait
pop
fwait
xor
adc
les
fcoms
mov
push
cmp
hlt
bound
jo
and
sub
push
fidivrs
and
cmp
add
gs
fistpl
js
cmp
mov
call
gs
aam
sarb
nop
js
dec
jl
jl
out
mov
nop
xchg
and
pusha
aad
lcall
and
cmpsb
mov
mov
int3
hlt
insl
inc
mov
mov
das
mov
xor
sbb
dec
pusha
movsb
out
test
std
lahf
xchg
and
sub
lock
nop
lahf
into
inc
jo
into
sub
push
loop
push
loopne
inc
jno,pn
pop
or
inc
add
lahf
clc
mov
sbb
mov
cs
lret
popa
jns
sahf
stos
ficomps
mov
adc
movsl
stos
jb
dec
pop
mov
sub
or
andl
into
int3
test
xchg
loope
mov
pushf
int3
xlat
jne
sub
cmp
popf
or
cmp
mov
push
jae
fistpl
lcall
stc
or
jecxz
ficomps
xor
divb
ljmp
mov
testl
jno
mov
out
sahf
mov
outsl
stos
shl
enter
into
pop
and
cmp
add
adc
cmpsb
xchg
adc
mov
mov
and
aas
nop
push
xchg
add
and
dec
jne
adc
ljmp
jne
mov
pop
rol
sbbl
mov
adc
sbb
in
xor
mov
jns
lret
xchg
push
cltd
xor
cmp
jo
cmp
aas
insb
jle
add
in
push
jle
push
jl
test
or
int
sarl
ds
rcll
lea
jp
cwtl
or
push
sub
sti
out
dec
fistps
mov
mov
and
xchg
xchg
cmc
lock
dec
adc
lds
sub
movb
xchg
cvtpi2ps
or
into
jmp
mov
insl
clc
mov
push
adc
cmp
lret
mov
mov
or
lea
xor
xchg
jg
push
inc
movsl
fisttpl
cmp
cmp
dec
push
clc
jp
or
sbb
xor
inc
push
sbb
lret
and
stos
int
fnstcw
int3
daa
xor
shll
into
cltd
stc
adc
sbb
mov
xchg
out
inc
test
push
sub
ja
jecxz
cld
adc
cmpsl
aas
loope
add
xor
sbb
fstpt
rcll
or
shll
fcomps
cmp
cmp
inc
cmp
dec
cld
sbb
xor
fsubrl
enter
sbb
sub
xchg
sub
insb
cmp
jge
pop
push
dec
unpckhps
add
in
fwait
mov
jb
xor
cmp
xorl
js
stc
dec
mov
adc
sbb
pop
push
repnz
std
sar
decl
pop
pop
dec
mov
sub
cmp
xor
fdivs
outsb
in
mov
pop
daa
push
push
adc
jl
xor
aad
dec
iret
into
mov
repz
aad
add
mov
cmp
test
ds
fwait
rcr
mov
inc
xor
sub
sub
jle
or
out
push
inc
push
outsl
dec
notb
jne,pn
mov
mov
mov
inc
ficoml
xchg
mov
je
lret
push
jl
incl
inc
push
shll
pop
enter
adc
mov
mov
xor
sub
fiadds
sbb
in
test
jbe
xchg
xchg
xchg
or
mov
out
imul
mov
movsb
sub
or
stc
and
imul
or
and
mov
lods
aaa
insb
fwait
insb
push
mov
pop
push
mov
rol
xlat
pushf
mov
pop
dec
jo
pop
mov
leave
or
arpl
icebp
and
or
pushf
sbb
iret
pop
jbe
xor
add
jns
cmpsb
cmpsb
call
mulb
fwait
mov
inc
push
or
adc
icebp
push
pop
stos
push
rorl
lret
fdivs
in
ljmp
out
ret
in
xchg
xchg
popa
pop
add
cmp
xchg
in
imul
fdivs
in
rclb
popf
mov
pop
sarb
sub
enter
adc
repz
sbb
fildl
sub
sbb
sub
adc
cmpsb
sbb
pop
movsl
jnp
pop
jg
sbb
and
xor
cld
lods
jnp
pop
loopne
test
or
icebp
pop
out
adc
push
div
mov
fimuls
out
pop
lods
imul
mov
sub
or
dec
jge
mov
clc
mov
shll
loop
push
out
ljmp
adc
push
sarb
fcomps
push
xchg
mov
int3
aad
jne
cmc
stc
nop
test
add
call
mov
xor
cmpsl
mov
cmp
xchg
fdiv
stc
adc
cmp
stc
addr16
jo
mov
add
cmc
vpermil2pd
leave
insb
push
nop
pop
fidivl
adc
mov
int
cmp
lock
mov
subb
aam
ret
pop
mov
fs
stos
js
test
xchg
pop
mov
xchg
sub
cmpsl
sub
out
flds
mov
setb
jl
rcll
inc
or
ja
adc
jae
out
es
mov
add
cmp
into
cli
push
int3
stc
mov
shrb
shrb
push
jmp
fistpll
sub
scas
clc
int
xor
shrb
dec
repz
fsub
xchg
mov
push
pop
xor
cmp
in
jae
lods
arpl
sbb
pop
add
and
add
ret
outsb
or
lret
aas
xchg
lret
jns
jae
out
mov
pop
fstpt
push
mov
lds
and
fisttps
loopne
xor
notb
adc
jb
adc
xlat
dec
mov
push
aam
pop
fidivl
cwtl
mov
cmp
lock
hlt
push
mov
jb
xor
add
push
sub
sbb
pop
insb
add
pop
sub
popa
push
ficomps
test
pop
jmp
add
pop
repz
mov
inc
jns
dec
xchg
or
pop
xor
dec
and
jl
movsl
add
mov
adc
leave
incb
sti
jnp
push
mov
adc
jno
insb
movsl
xchg
adc
pop
adc
into
movsl
xchg
jg
cmp
dec
jns
add
sub
jmp
cli
pop
sub
inc
mov
jl
sbb
sahf
xchg
xor
dec
lea
mov
lcall
ds
sub
shll
rcrb
cmp
aam
das
ja
sub
aad
sub
call
mov
aad
or
ja
dec
mov
js
imul
imul
cmp
outsl
push
imul
inc
dec
or
xchg
xchg
xor
mov
lods
call
bound
lock
insl
lods
cli
xlat
xchg
sbbl
in
pop
dec
in
or
dec
cmpsb
dec
scas
cs
jge
adc
jnp
leave
mov
xlat
cmp
cli
sbb
js
push
jmp
dec
mov
sahf
inc
bound
xlat
xchg
fcmovbe
mov
cmp
mov
or
xchg
mov
dec
sbb
mov
lret
shrl
xchg
int3
jp
test
mov
xor
repnz
outsb
pop
jo
inc
fdivrs
call
shll
fwait
jo
mov
decl
shlb
insl
push
in
dec
add
jl
mov
imul
lret
ja
fisubs
call
arpl
fldz
sub
daa
je
lods
dec
pop
or
mov
sti
scas
fdivr
lcall
cmp
xor
push
orb
xor
call
scas
mov
or
xchg
stos
loope
cmp
fisubrl
dec
adc
movb
pop
mov
loop
in
ret
xorl
mov
daa
test
fadds
push
test
inc
into
xchg
rorl
mov
sbbl
fwait
daa
dec
shll
jl,pn
adc
or
push
jmp
or
dec
add
push
sbb
push
push
mov
xor
movsb
test
inc
fstpt
push
test
xor
mov
pushf
mov
lret
in
mov
mov
pop
pusha
add
aas
xchg
pushf
negl
pusha
add
fucomi
xchg
movsl
jae
fisubl
in
dec
push
test
mov
ljmp
xchg
mov
xchg
rorl
popf
pop
leave
jge
fisttpl
sbb
cmp
fsubp
dec
push
ljmp
xor
movsl
sbb
daa
jno
mov
or
andb
adc
repz
cld
mov
das
lret
out
mov
mov
adc
stos
fs
push
ljmp
xchg
mov
sbb
outsl
cwtl
mov
dec
jno
aas
fisttpl
loope
xchg
scas
sahf
lods
movsb
in
jmp
lock
jns
cmp
push
dec
sarl
imul
sti
sub
inc
nop
fistps
scas
repnz
mov
adc
rcr
testl
push
pop
add
hlt
aas
pop
aad
push
je
xor
sbb
test
jns
jle
arpl
push
xlat
add
stc
scas
cmpb
jne
fldl
push
mov
icebp
fbld
stos
push
out
stos
lcall
and
push
pop
xchg
not
ret
sbb
jb
add
shll
aaa
mov
dec
jecxz
xlat
mov
add
pop
mov
hlt
dec
pop
jecxz
jge
cmp
xchg
test
cmp
cwtl
mov
cmp
add
rolb
adc
je
cs
add
or
xchg
mov
lret
push
push
repnz
das
lret
lods
mov
daa
push
xlat
bts
sbb
dec
mov
lcall
cli
movsl
cs
es
mov
sbb
and
mov
cmp
and
fiaddl
sbb
aaa
pop
push
mov
pop
cltd
loope
ljmp
pop
fcomip
fisttpll
add
jbe
cld
xor
inc
fiaddl
jle
jp
ljmp
rcrb
pop
stos
cmp
dec
imul
xchg
dec
dec
out
pcmpgtw
ss
pop
rclb
cwtl
sbb
xchg
nop
test
call
or
inc
pop
ja
dec
data16
ret
insl
xchg
aam
mov
test
jl
push
jle
add
clc
cmp
cmp
or
dec
mov
arpl
ror
add
xchg
insl
jae
ss
jae
and
rcrl
sub
inc
mov
stos
ret
ja
inc
mov
mov
jmp
xor
pop
sub
mov
cltd
sbb
loopne
in
mov
outsb
test
adc
fcom
add
adc
or
jl
test
lret
sub
cld
xor
jne
push
jns
xor
jb
mov
fisttps
adc
stc
pusha
xor
mov
test
cmpsb
sbb
ret
negl
jo
dec
stc
enter
ret
jecxz
shrl
xor
xor
cmpsl
mov
inc
pusha
sub
and
push
pop
repnz
inc
add
jns
mov
xor
push
xchg
frstor
repnz
jge
icebp
sub
adc
or
jle
push
jp
loopne
xchg
iret
scas
nop
sbb
insb
sbb
aam
mov
cs
adc
in
loope
icebp
xor
add
xchg
cmp
mov
or
mov
jns
lret
enter
fildll
xor
push
std
mov
cmpl
pop
inc
fistl
pusha
inc
and
cmp
mov
outsl
add
ss
mov
lods
repz
fwait
inc
adcl
inc
out
divl
fs
adc
aad
pop
out
xchg
or
xchg
gs
pop
cs
out
pop
pop
movsb
std
loope
leave
fmuls
sbb
rcrl
inc
mov
sbb
xchg
das
pop
stos
in
mov
pop
xor
jmp
pop
sbb
push
mov
cmp
repnz
testb
mov
mov
sub
jae
adc
mov
xchg
mov
in
fistl
ss
xchg
jo
pushw
jbe
pop
push
mov
or
ss
leave
fs
mov
jns
test
std
mov
pop
shll
mov
or
insb
adc
xor
popa
lret
mov
push
fiadds
xchg
xchg
dec
rcr
jae
fwait
fs
enter
push
xchg
ret
cld
stc
test
dec
in
sbb
mov
push
jl
mov
mov
mov
adcl
jmp
fsubp
mov
pop
push
and
in
mov
shlb
test
popa
in
jg
or
jmp
cmc
dec
lahf
ja
sti
nop
cmp
jne
imul
sarb
inc
push
iret
mov
pop
notb
xchg
add
lahf
jae
mov
xchg
pusha
call
rolb
mov
movsl
mov
cmp
cmpsl
ja
xchg
lods
cltd
sar
jp
test
lret
mov
dec
cmp
xor
xchg
mov
out
mov
cs
faddl
pop
das
sarb
outsl
mov
pushf
lea
mov
add
loopne
adc
dec
outsb
xlat
dec
sahf
and
add
adc
xchg
mov
ds
cltd
sbb
jmp
fisubl
xchg
inc
xchg
jle
xor
sub
in
pushf
cmp
test
xchg
dec
test
stos
inc
inc
cmc
push
inc
imul
sbb
mov
jmp
fisttpll
adc
enter
inc
mov
xchg
xchg
mov
adc
pop
push
or
pop
lock
jecxz
dec
filds
xchg
lods
cmp
push
or
inc
mov
and
xlat
jnp
mov
lods
mov
stc
xchg
in
jo
enter
ret
cmp
pop
iret
mov
and
cmp
add
adc
fidivl
jnp
sub
xchg
mov
mov
sbb
xchg
lods
push
das
mov
and
mov
fstpl
xor
pop
mov
movsl
push
es
outsl
sub
pop
inc
aam
adc
fstpt
add
fadds
add
movsb
inc
movsb
mov
dec
mov
or
iret
int
and
dec
insb
pop
inc
test
cwtl
test
jecxz
lods
jns
add
lods
or
test
rcll
lods
and
dec
and
pop
fsubs
mov
fmuls
imul
adcb
sbb
out
cmc
mov
inc
inc
or
out
xchg
add
jge
cmp
mov
mov
inc
sar
and
cmpsb
mov
mov
push
sbb
lock
adc
std
sub
pop
sarl
push
mov
fsubl
push
popf
scas
mov
mov
lcall
dec
add
je
mov
mov
mov
mov
push
mov
test
data16
aaa
ret
jae
adc
cs
or
push
aad
mov
pop
cmpsb
xchg
stos
cmp
mov
insb
and
adc
mov
xchg
mov
into
enter
hlt
aaa
pusha
jo
stc
pop
and
adc
pushf
sti
iret
push
push
jne
pop
xor
cmp
cmp
xchg
cwtl
insb
fldcw
pop
pop
mov
ret
mov
xor
lods
orl
sarb
cs
xlat
push
mov
mov
daa
adc
jbe
jmp
pusha
std
lret
xor
inc
enter
les
lcall
insl
pop
push
pop
cmp
into
mov
aad
dec
push
pop
push
fdivl
mov
dec
xor
add
sti
lock
lret
push
sub
cmpsl
add
inc
out
stos
push
pop
jmp
cmpsb
mov
adc
imul
insb
mov
add
mov
loopne
jnp
dec
cltd
in
push
mov
push
repnz
xor
hlt
lret
les
inc
out
cli
inc
jbe
mov
push
inc
jnp
inc
lea
arpl
aad
add
pop
sbb
stos
fucomi
sahf
push
gs
jg
movsl
jbe
xchg
mov
push
mov
fnsave
pop
push
xor
mov
ljmp
mov
mov
test
xor
xchg
ror
outsl
and
outsl
cmp
add
and
mov
xor
out
or
dec
push
xchg
call
dec
xor
lods
inc
jno
dec
fs
cmp
inc
mov
adc
mov
inc
mov
ljmp
mov
in
mov
rol
test
xor
das
cmp
dec
mov
mov
aad
inc
lahf
xchg
in
shlb
jp
clc
ss
dec
xchg
push
ret
test
xor
push
push
jb
or
fbstp
adc
xor
cltd
fstpt
idivb
xchg
stos
adc
arpl
std
icebp
imul
and
mov
jne
aas
pusha
add
inc
scas
ljmp
or
imul
inc
pop
mov
xchg
xchg
sub
aam
xchg
fstpl
aam
add
imul
and
or
test
or
xor
ret
fnsetpm(287
pop
cli
sbb
mov
jb
fwait
int3
xchg
ss
andl
mov
jmp
and
pop
xlat
sahf
sbb
and
stos
repz
insl
sbb
loop
add
mov
pop
and
jno
es
cmp
mov
xchg
xchg
popa
jb
and
mov
adc
in
push
nop
and
incl
jmp
sub
les
icebp
pop
mov
cmp
pushf
dec
push
loopne
loop
cltd
xor
push
sahf
fsubrl
xchg
push
jg
pop
stos
sti
lahf
jbe
fwait
test
and
pop
xor
fs
xor
movsb
enter
mov
add
xor
je
inc
jne
xlat
cmc
fucomp
push
lock
inc
stos
addr16
add
pop
ds
xor
loop
or
add
lds
mov
or
sbb
xchg
cmp
scas
aaa
mov
sub
dec
inc
imul
adc
leave
and
fsubrs
push
jbe
aad
pop
cmpsl
xchg
xchg
insb
jg
push
in
cli
into
scas
inc
pop
test
es
outsb
cmp
insb
adc
imul
in
divps
xchg
xlat
ret
ror
cmp
push
nop
inc
mov
jle
mov
frstor
loop
addl
inc
imul
clc
scas
in
fsubrp
xchg
push
js
sub
inc
inc
pop
inc
shlb
xlat
cmp
andb
lcall
andl
test
push
lds
xchg
out
sub
out
mov
sub
pop
push
pop
sbb
scas
inc
addr16
popf
jae
outsb
fucomip
or
scas
stos
jg
xor
jg
mov
mov
xor
push
or
pop
hlt
or
sub
push
sbb
enter
fisubrs
sub
mov
add
call
or
mov
daa
enter
fwait
scas
cmp
mov
add
faddp
mov
jno
fcomps
es
aas
ret
mov
pop
fisttps
aam
cld
xor
jmp
add
negl
inc
fisubs
pop
outsl
sar
cmpsb
enter
loopne
jmp
call
fadds
pop
lods
jmp
xchg
gs
or
jmp
sbb
inc
pop
fidivrs
sahf
ja
sbb
xor
add
mov
insb
sub
and
mov
jmp
mov
xchg
xor
mov
pop
ret
fcmovbe
lock
fcom
test
mov
nop
push
inc
pop
push
sub
cmp
or
sbb
call
rcr
test
mov
nop
push
inc
pop
push
sub
cmp
or
sbb
call
fcomp
aam
mov
cwtl
nop
push
inc
pop
pop
sub
xor
or
hlt
faddl
adc
and
nop
test
mov
push
xchg
lahf
xchg
loop
pop
daa
pop
pop
mov
idivl
push
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xlat
jmp
pop
loopne
mov
jmp
add
pop
add
push
add
or
add
pop
add
push
jae
mov
sub
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sub
add
add
sub
and
mov
add
icebp
add
add
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
insl
add
sub
jo
sbb
add
add
add
push
add
add
add
add
add
or
pop
add
mov
add
add
add
add
add
add
add
dec
add
mov
roll
xor
add
add
add
push
add
add
jo
dec
add
add
test
das
add
add
add
add
add
mov
add
mov
cwtl
add
add
sub
add
add
sub
insl
add
add
add
add
add
add
add
jae
and
mov
inc
add
add
add
mov
inc
add
add
add
cwtl
add
add
add
push
add
add
add
add
push
add
and
iret
push
jae
push
add
add
sub
add
add
mov
add
mov
add
testl
pusha
add
out
add
add
add
add
add
add
add
add
enter
outsb
add
insb
add
add
add
add
add
jl
ljmp
add
add
sahf
add
add
mov
inc
add
add
mov
xor
mov
jo
push
add
add
add
add
add
cmp
add
and
inc
add
add
add
push
add
add
add
add
sbb
add
sub
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
push
add
add
imul
add
add
add
add
add
add
roll
add
add
out
add
mov
imul
add
add
add
add
add
lcall
add
add
add
insb
add
add
xchg
add
add
insl
add
popf
add
bound
jae
xchg
lods
add
xor
xor
and
adc
add
add
add
add
dec
add
filds
faddl
or
jo
jmp
cld
pop
nop
add
add
add
add
add
add
sbb
inc
add
add
push
add
loope
mov
mov
add
add
int
jl
aaa
add
add
add
add
add
push
add
add
add
add
add
int
ret
add
add
cmp
jo
xor
mov
add
push
push
add
add
add
dec
add
xchg
add
add
add
add
add
add
add
add
add
and
jo
inc
add
add
add
andb
sbb
lcall
and
jns
pop
xor
inc
mov
hlt
ja
lods
je
push
pop
mov
dec
rclb
inc
out
jae
test
les
inc
pop
add
xorb
mov
jl
push
mov
rcll
movsl
dec
pushw
jmp
or
outsl
ret
dec
sbb
roll
sar
int
or
mov
popa
cli
mov
loopne
cmp
inc
push
lret
inc
cltd
mov
loope
xchg
jge
add
mov
test
pop
push
dec
or
or
shlb
test
stc
stos
int
test
push
scas
iret
xchg
scas
jne
jmp
jnp
fdecstp
test
lds
adc
dec
cmp
in
shrb
ljmp
lcall
ficoms
sbb
push
xor
sbb
add
popf
cs
pop
mov
adc
pop
cmp
pop
mov
mov
mov
lahf
sub
mov
sbb
jge
jl
cmp
jmp
gs
push
push
call
in
inc
out
mov
or
pop
lea
push
mov
subl
je
movsl
add
mov
adc
cmp
jl
mov
sbb
or
shll
sahf
mov
in
cmp
sub
or
es
pop
xor
sbb
sub
xor
in
sbbl
daa
and
add
mov
mov
les
adc
fbld
inc
or
add
js
mov
xchg
push
int
clc
cmp
test
ret
lods
jmp
mov
jnp
lods
mov
mov
movl
in
jl
test
adc
adc
cmp
push
push
cwtl
jl
out
fistps
add
mov
enter
arpl
or
jae
sbb
int3
and
mov
xor
rclb
push
cmpsl
xor
mov
stos
nop
faddl
lods
mov
adc
adc
std
mov
cmc
xor
mov
sti
and
sbb
jno
ds
jmp
mov
ja
pop
xchg
nop
sbb
pop
hlt
ficompl
imul
and
imul
pusha
jl
push
popf
push
pop
xchg
loope
arpl
imul
cwtl
outsl
inc
arpl
mov
insl
xor
pop
and
mov
fcompl
sbb
xor
sarb
ja
xor
icebp
and
inc
inc
cmpsb
call
dec
sbb
push
lock
jae
movsl
loopne
fisubs
test
xchg
push
pushf
mov
je
iret
jnp
andl
jge
filds
leave
cltd
jle
adc
not
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
