call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
test
movb
lret
mov
inc
sub
inc
or
ss
push
mov
mov
stc
mov
mov
xchg
leave
repnz
data16
or
inc
imul
out
test
fdivrp
scas
jmp
pushf
cmp
inc
js
insb
xor
jns
push
jns
es
mov
mov
and
imul
into
std
lods
push
jmp
and
in
xchg
clc
out
push
imul
test
js
out
cmp
test
xchg
in
cltd
std
cmp
mov
dec
cmp
mov
ficoml
or
jle
test
xchg
stc
mov
mov
loop
add
xchg
out
cwtl
sbb
cmp
inc
jae
sbb
sub
fstps
pop
cltd
dec
scas
or
sub
faddl
addl
xchg
adc
or
sbb
add
xchg
push
decl
test
imul
out
test
stc
mov
cmpsb
fsts
sub
dec
or
imul
int
in
xchg
cmc
mov
mov
sahf
cli
lods
jecxz
sbb
and
jns
push
lahf
ljmp
mov
call
imul
add
insb
inc
xor
or
jb
testb
mov
xchg
leave
xchg
jbe
sbb
inc
jns
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
push
fcmovnb
mov
cmp
lcall
ds
pop
in
mov
jns
hlt
insl
xchg
sbb
cmp
stos
out
pop
xchg
call
test
mov
aad
sahf
sub
xor
xchg
cs
out
fwait
inc
fisubs
fldt
aam
or
mov
adc
pop
addr16
sub
mov
cwtl
outsb
mov
dec
iret
rorb
inc
cli
sbb
push
mov
jecxz
ja
in
inc
inc
insl
pop
imul
mov
cmpsl
mov
gs
inc
mov
sub
jle
into
inc
xchg
mov
imul
mov
out
test
jo
or
pop
addr16
and
xchg
sub
pop
cs
xchg
je
mov
stc
push
call
dec
clc
std
rcr
je
jg
push
sbb
ss
mov
adc
or
mov
orl
test
sar
mov
xchg
cwtl
int3
arpl
in
lods
cmp
outsb
mov
iret
dec
jp
xchg
xchg
loop
pop
mov
mov
test
enter
xchg
enter
aad
sbb
lret
push
sbb
sbb
daa
pop
jmp
ss
jb
adc
xchg
imul
cmp
jle
xchg
out
dec
dec
jle
sbb
xchg
je
icebp
popa
mov
pop
in
xor
sahf
jb
into
and
cltd
push
imul
and
imul
inc
lahf
test
or
xor
into
inc
inc
scas
mov
jge
pop
idivl
cmpsl
inc
cld
dec
push
fwait
mov
pop
cmpsb
jno
mov
aaa
ds
shl
outsl
cmpsl
or
or
lea
jne
out
sub
xor
sub
cltd
push
sbb
mov
lods
jge
mov
fs
aaa
bound
or
je
xchg
enter
jno
cmp
jge
icebp
inc
lret
jbe
les
ljmp
rcll
sbb
sahf
bound
or
out
int
loop
pop
mov
jg
push
out
sbb
ljmp
mov
dec
adc
jb
hlt
jo
pop
in
js
jb
lea
les
sbb
xlat
iret
insb
loop
push
sub
push
imul
xor
dec
mov
and
inc
jb
add
setno
sub
jmp
adcb
push
in
fdiv
push
or
movsb
test
add
into
loop
cmp
mov
cmp
mov
sbb
mov
push
mov
insl
pop
call
andl
jnp
cli
and
xchg
adc
dec
stc
pop
xchg
cmp
nop
ret
loopne
mov
mov
icebp
test
dec
adc
pop
lods
mov
sahf
jae
jne
jecxz
pop
in
leave
mov
cmp
popa
push
and
inc
test
mov
dec
xor
sbb
and
lock
sbb
into
sub
or
jb
jne
inc
std
mov
pop
pop
mov
sub
jbe
clc
iret
pushf
pop
jb
add
test
shll
insb
repnz
jns
ja
les
clc
inc
gs
jnp
das
nop
sub
sub
xchg
mov
add
add
decl
push
jp
movsbl
add
mov
mov
pop
xor
mov
cwtl
lcall
jns
push
lcall
jmp
lret
dec
scas
pop
jno
jle
mov
cwtl
or
jns
mov
inc
xor
stc
jb
or
int3
mov
cli
scas
fisttpl
out
inc
inc
daa
or
insl
sub
mov
sbb
jmp
movsb
test
dec
xchg
mov
mov
icebp
aad
push
cmpsl
std
inc
js
scas
mov
lahf
aad
rolb
mov
repnz
scas
out
xchg
inc
gs
in
mov
add
mov
faddp
pop
addr16
ja
sti
lea
mov
lcall
rcrl
mov
js
rcl
loope
movsl
mov
into
xchg
jp
outsl
cltd
mov
and
in
addr16
and
pop
ret
and
test
sbb
push
and
test
mov
pop
ret
gs
cmp
into
sub
filds
aaa
jecxz
pop
dec
xchg
decb
cmc
fwait
shlb
xchg
jae
fldenv
sub
movl
sti
mov
mov
xlat
aad
mov
adc
js
nop
in
testb
push
add
lahf
mov
sbb
mov
out
icebp
ljmp
adc
adc
inc
cld
adc
lods
mov
lret
mov
push
shll
lea
test
imulb
jl
sub
mov
mov
and
cmpsb
push
popf
xor
in
insl
insb
xchg
push
out
fildl
ljmp
in
fcom
add
mov
decl
imul
test
imul
jmp
mov
mov
cmpsb
insb
mov
and
test
bound
pop
mov
pop
rorb
jno
jp
mov
sbb
adc
xchg
xor
adc
jg
movsl
idivb
test
dec
mov
ret
sbb
inc
cld
sbb
sbb
in
daa
dec
adc
adc
les
divl
shr
xor
stos
mov
xchg
inc
lahf
outsl
outsl
es
jg
mov
jo
xor
mov
pop
test
jmp
mov
cmp
mov
pop
sbb
cmpsl
test
sbb
call
inc
sqrtps
xor
push
lock
mov
mov
jp
dec
mov
lcall
xchg
fmuls
xchg
imul
fidivs
mov
aam
push
jge
cli
jo
leave
mov
inc
sbb
outsb
mov
sahf
jmp
and
xchg
adc
mov
lret
dec
out
movsb
out
or
cmpsl
movsb
sbb
sbbl
clc
gs
mov
dec
lds
add
movsb
or
push
xchg
loope
out
ret
sbb
arpl
or
pop
xchg
dec
repnz
xchg
sbb
sbb
in
push
out
pushf
jmp
stos
les
mov
pushf
mov
lds
loope
inc
pop
outsb
ror
jg
aad
mov
xor
mov
jnp
jl
xor
lret
adc
add
stc
dec
les
push
xchg
test
jle
push
mov
jmp
xchg
jge
and
or
xchg
pop
mov
inc
cmp
shl
pop
pop
mov
dec
xchg
sub
xlat
shll
repnz
mov
jle
push
sbb
jae
mov
pop
insb
mov
cmp
mov
fcomps
dec
xchg
or
jns
stos
aad
inc
bound
mov
inc
jns
pop
mov
xchg
ds
mov
pop
es
pop
shr
ror
adc
fdivl
cmp
cld
xor
cmp
shrb
cmpsl
pushf
ss
aam
push
sbb
sbb
lcall
aad
imulb
ret
loopne
sti
ljmp
add
dec
fnsave
test
mov
sahf
mov
push
and
lahf
rcrl
push
repz
pop
sahf
imull
mov
je
cmp
loope
adc
pop
shrb
rol
into
das
push
or
and
push
mov
pop
rcrb
leave
inc
dec
nop
lods
aad
push
inc
xchg
pop
stos
hlt
push
push
or
xchg
js
mov
out
pop
nop
or
mov
ja
mulb
stc
push
xor
je
stc
je
mov
sub
cmp
cmp
cltd
fidivl
pop
stc
jno
dec
fisttpll
mov
push
dec
fwait
jl
in
push
ja
xor
jae
sbb
sti
adc
mov
mov
shr
sub
out
aaa
int
daa
std
fdivs
fildll
and
test
mov
cmp
sub
sbb
mov
pop
popa
ret
or
repz
inc
inc
iret
or
add
cs
pop
jb
sub
nop
in
stos
jae
pop
sub
movb
clc
adc
lds
cmpsl
cmp
sbb
loope
js
out
icebp
iret
xchg
sbb
notl
stos
fdivs
stos
sbb
ret
sub
adc
cmpsl
lods
sbb
adc
xchg
std
mov
adc
xchg
pushf
push
inc
push
adcb
ficoms
lock
push
mov
ret
mov
mov
inc
and
insl
mul
popa
xchg
push
pop
enter
cld
daa
cmpsb
cwtl
sti
lret
or
xchg
testl
outsb
testb
pop
lret
xor
xchg
aaa
je
call
xchg
aam
or
cld
lret
test
jp
pop
xchg
shlb
push
mov
les
sub
push
mov
js
mov
jne
and
dec
xchg
cmp
ficoml
movsl
jno
insb
loopne
test
fs
add
pop
roll
icebp
rcr
andl
andl
cmp
out
adc
mov
sbb
or
clc
jnp
icebp
inc
leave
add
test
cld
popf
mov
iret
add
sbb
pshufw
push
push
push
je
add
pop
js
mov
les
inc
popf
scas
mov
iret
in
cmpl
jb
inc
test
cwtl
aaa
xor
arpl
sub
and
inc
cmp
xchg
fiadds
and
inc
aas
fisubrl
dec
sbb
test
mov
mov
sub
jo
shl
xchg
cmp
cltd
fcompl
adc
outsl
repnz
sbb
aam
xor
mov
sub
cs
jle
sbbb
mov
repnz
outsl
lods
out
push
add
loope
movsl
mov
fstl
mov
cmp
jmp
sub
xchg
xor
jecxz
ljmp
cmp
int
mov
rorb
push
ficomps
cmp
jo
gs
aas
push
lock
arpl
mov
fnstsw
mov
mov
cwtl
sub
out
arpl
xchg
adc
shrl
inc
add
adc
xor
sahf
packssdw
enter
jo
arpl
mov
outsl
lret
std
ds
flds
out
or
mov
test
pop
jp
fwait
jne
test
sub
scas
dec
jecxz
repnz
mov
mov
mov
push
stos
push
mov
lods
das
stos
test
inc
rorb
sbbl
mov
push
mov
shrb
lods
sti
sub
jp
add
inc
cs
repz
mov
adc
jns
jmp
pop
dec
rol
cmp
fidivrs
sahf
fcoml
mov
or
jbe
sub
clc
sub
dec
fisubrl
mov
int3
push
call
in
dec
xchg
pop
outsb
add
push
jbe
fcomps
cmpsb
sub
sbb
into
ret
or
sti
jecxz
lea
ja
sbb
pushf
mov
add
mov
dec
sti
lods
lahf
stos
sub
xor
insl
xchg
cmp
inc
and
rcrb
stc
aas
adc
rcrl
xchg
add
xchg
mov
fwait
movsl
pushf
mov
adc
add
shll
cmpsl
test
test
pop
insl
xor
cmp
test
jne
and
sub
jecxz
jmp
inc
mov
xchg
dec
pop
add
in
mov
cld
mov
mov
add
daa
addr16
sub
mov
lcall
xor
adc
scas
adc
fldenv
mov
dec
outsl
pop
and
gs
cmp
adc
aas
movsb
shll
push
mov
and
xchg
and
cmp
test
insl
mov
pop
pop
nop
cwtl
data16
popa
mull
loop
outsl
mov
mov
fwait
xchg
xchg
jecxz
insb
jae
sub
jg
icebp
aas
enter
popf
lds
jbe
jecxz
je
add
movsb
push
inc
push
cmpsl
xchg
xchg
pop
sub
in
or
lock
xchg
sbb
inc
push
ret
test
int3
inc
jo
lret
repz
test
cmp
shlb
jle
jge
shr
dec
jg
xchg
sti
ja
pop
and
add
lock
xchg
test
fimuls
out
xchg
push
sbb
ds
mov
or
fildll
or
lods
sti
pop
cmc
cmp
scas
enter
push
clc
pushf
add
inc
stc
push
in
int
leave
insl
add
repnz
cwtl
adc
leave
mov
fldt
aam
mov
loope
rcl
xor
data16
les
mov
es
jo
inc
lahf
mov
or
icebp
imul
inc
jge
or
es
push
xchg
aad
clc
cmp
sub
imul
out
int
sbb
mov
das
fcmovnbe
outsb
push
icebp
mov
out
sysexit
mov
sahf
add
dec
xorb
or
or
aaa
jb
fwait
int
dec
iret
jbe
inc
xor
pop
xchg
adc
call
mov
das
xlat
shlb
jle
mov
icebp
sub
push
lock
iret
sbb
scas
add
mov
shlb
sbb
dec
aad
pop
lock
ja
or
mov
lahf
fdivs
sbb
scas
jns
xor
mov
call
cmc
push
loop
jb
test
xorl
add
rcl
in
sub
inc
and
mov
jnp
pop
ret
stc
aas
shlb
mov
inc
cmp
xchg
in
dec
addl
mov
sbb
mov
adc
or
cli
mov
sbb
aad
fadds
lods
xchg
test
xchg
push
cmovae
ds
stos
cmpsl
les
mov
push
cmp
jbe
or
xchg
out
mov
aad
mov
imul
pop
dec
inc
fdivl
in
xor
xor
jmp
lret
mov
imull
int3
cwtl
pop
push
push
jmp
jno
fdivs
pop
xchg
faddl
dec
jle
ja
imul
inc
bound
push
scas
pop
cmp
popf
add
scas
add
jg
add
push
and
imul
pop
or
pop
loopne
jg
push
str
aaa
pop
fidivrs
frstor
or
dec
inc
mov
inc
shr
xor
jo
jge
mov
inc
movsl
pop
mov
lds
in
jne
mov
mov
pusha
std
out
pop
and
mov
jo
enter
adc
cmp
inc
vmptrld
loop
out
mov
xor
ljmp
jmp
adc
bound
fwait
stos
push
dec
xor
adcl
cmp
repz
leave
jne
es
repz
out
sub
push
popl
pop
jge
cmpsb
sub
outsb
imul
pop
aam
sti
pushf
jb
aas
xchg
dec
xlat
negl
push
fwait
es
movsb
pop
lods
or
jl
scas
out
outsl
aas
loop
fimuls
mov
out
pop
test
fisubrl
test
push
mov
stc
test
sahf
push
shrb
cmp
popa
outsl
pop
imul
push
cld
mov
mov
mov
or
mov
iret
jp
push
gs
inc
gs
jp
xor
arpl
add
mov
xlat
fldcw
push
lods
rclb
xchg
cmc
jbe
push
nop
xor
pop
es
cld
je
pop
idivb
add
xchg
mov
lret
mov
and
loopne
idivb
lahf
mov
fdiv
std
xor
jmp
mov
inc
pop
add
sbb
mov
dec
adc
mov
xor
add
cmp
out
ja
mov
les
gs
in
jno
daa
clc
rcrl
rcll
aas
stos
int3
dec
mov
and
jbe
mov
lods
cwtl
call
and
negb
ficoms
ficoml
or
iret
xor
ret
adc
out
out
sub
mov
mov
mov
mov
xor
pop
arpl
xor
mov
push
jge
ret
int
cld
and
scas
lods
cmpsb
imul
or
add
jae
fildl
ljmp
pop
xor
inc
sub
rdpmc
push
arpl
mov
jmp
xchg
sahf
mov
sub
jge,pn
sahf
or
lods
mov
pop
mov
popa
iret
popf
cmpsb
jecxz
push
mov
je
sub
pushf
in
stos
movsb
cltd
push
adc
pop
std
test
test
cmp
stos
add
jnp
fdivrl
outsb
out
mov
int
lahf
jge
or
jmp
lahf
cmc
popl
cmp
aaa
xor
inc
loop
bound
cltd
mov
mov
pusha
dec
pop
jl
shlb
inc
and
sbb
adc
jno
sbb
jbe
lret
aad
insl
pop
sub
jne
loopne
push
jecxz
mov
mov
xor
xor
mov
aad
mov
shlb
leave
sarl
push
ja
adc
sbb
cmp
mov
xlat
mov
bound
loope
and
xchg
orl
push
fwait
xor
sub
shrb
push
inc
js
stos
push
mov
adc
jne
movsl
hlt
pop
mov
mov
loop
movsl
sub
insb
imul
sbb
mov
sbb
clc
div
fsubs
data16
pop
stos
cmp
in
fldt
popf
fimuls
lock
fimull
cli
sbb
and
test
mov
stos
lods
iret
add
idivl
lahf
inc
mov
in
pop
adc
mov
cmp
lahf
push
pop
dec
loop
jnp
adc
arpl
sahf
in
aam
mov
into
mov
fs
lcall
fsubp
xchg
pushf
xchg
out
testl
dec
insb
xchg
cs
xor
push
add
xchg
out
icebp
xchg
cmp
jle
stos
xchg
testb
arpl
nop
cmp
mov
aad
mov
inc
pop
fisubl
roll
fidivl
adc
into
jnp
inc
xchg
leave
mov
loop
xor
push
sub
in
int
cld
adc
add
push
add
pop
jne
mov
xlat
lea
mov
int
daa
in
pop
stos
mov
subl
insl
daa
out
aas
adc
mov
jne
negb
xor
dec
lods
add
mov
fcomi
xlat
mov
lret
rcrl
inc
mov
sub
xchg
dec
cmp
xor
or
sbb
mov
push
popf
xchg
adc
inc
cs
jae
mov
dec
jo
sub
cmp
sbb
fisubs
pop
mov
loope
jb
out
and
pop
xchg
push
jb
call
scas
sbb
repz
adc
push
icebp
data16
dec
push
repnz
movsb
ds
add
mov
in
jecxz
ja
movsb
movsb
hlt
add
sbb
stos
jnp
xor
adc
cmpsb
shl
insb
clc
movsl
ret
cwtl
mov
jmp
les
sbb
and
popf
es
jno
and
test
aad
jne
xor
sub
fidivrs
jg
daa
xor
std
mov
pop
cmpl
in
call
lret
push
cmp
inc
or
dec
and
testb
bound
jnp
sbb
leave
daa
xor
jo
mov
pop
jg
push
clc
xchg
lcall
sub
imul
mov
sarb
jb
add
out
and
ljmp
jecxz
sbb
mov
sbb
cmc
push
dec
adc
xor
xchg
insb
xchg
mov
test
mov
xchg
pop
push
add
not
add
enter
negl
cltd
jmp
sti
cmp
sbb
mov
nop
lods
outsl
mov
lret
xor
mov
loop
or
mov
out
addr16
movsl
out
aad
push
fcompp
ret
int
add
inc
into
jmp
mov
divb
mov
sub
pop
fadd
jo
bound
pop
addr16
roll
jle
xchg
lods
jno
sbb
ss
jne
jno
scas
pop
mov
insl
jecxz
cmc
lret
add
clc
cld
cmpsb
lea
xlat
push
jne
out
out
inc
mov
sub
mov
imul
and
mov
out
cmp
sti
test
inc
pusha
jge
cmpsb
nop
fsubrl
lea
int
mov
push
sub
sahf
mov
out
jne
dec
pop
xor
dec
sbb
adc
rcrl
cmp
mov
mov
mov
sub
mov
iret
mov
ds
icebp
idivl
dec
pop
jnp
std
in
sbb
dec
and
pxor
imul
mov
xchg
and
cmc
cmp
pop
lret
or
aaa
outsb
inc
rcrl
fadd
add
jle
dec
lock
xchg
or
mov
fs
adc
mov
add
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
rorb
cmpsb
fsts
sub
mov
or
push
mov
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
movsl
jno
inc
test
jne
pop
mov
loope
icebp
adc
mov
inc
xchg
mov
movsl
jno
inc
test
and
xor
add
adc
roll
push
addl
xchg
inc
test
and
xor
add
adc
mov
shll
or
and
sub
xchg
and
outsb
lock
cmp
movsb
pushf
rol
xor
inc
pop
std
imul
scas
or
in
sub
mov
rorb
or
cmpsl
xchg
mov
cmp
pop
push
fwait
nop
xor
lds
and
jle
nop
mov
movsl
jo
inc
test
and
and
lds
shlb
cs
and
mov
cld
inc
lea
jp
lods
and
into
push
incb
lock
cmp
lcall
in
mov
push
and
ljmp
bound
aad
ljmp
inc
adc
jno
inc
test
and
xor
add
adc
roll
push
addl
cld
pop
in
pop
cmc
dec
xchg
jo
fs
popa
xor
scas
jge
je
gs
hlt
shlb
sarb
inc
jmp
pop
lods
outsb
xchg
adc
je
pop
xchg
add
fidivrs
hlt
xor
shlb
movsl
add
mov
add
adc
roll
push
addl
xchg
inc
test
and
xor
add
adc
roll
push
addl
or
out
ds
xor
clc
adc
push
lcall
test
inc
jno
insb
psubq
je
sub
in
push
push
pop
test
add
mov
out
inc
das
and
jb
add
jp
mov
mov
dec
cmp
lahf
test
sbb
xor
push
divl
dec
mov
push
cmp
fidivrs
or
hlt
add
xor
je
and
jmp
jle
cmp
mov
adc
mov
ljmp
imul
xchg
inc
ds
cmp
jb
lods
mov
jmp
lahf
out
jmp
sub
je
dec
mov
inc
cmpsl
cli
rcll
cwtl
or
mov
mov
mov
pop
into
xor
sbb
mov
std
inc
test
int
cwtl
test
sbb
insb
dec
iret
fsub
dec
out
ret
jae
push
sbbb
jae
mov
lods
clc
push
fld
sub
mov
js
cmpsb
cmp
int
in
push
or
inc
jmp
dec
pop
xor
cwtl
loop
sub
cwtl
mov
add
sub
adc
add
ficoms
mov
pushf
mov
ret
and
subl
cld
jg
mov
jbe
adc
jnp
popf
inc
lea
stos
jb
pop
mov
int3
sbb
out
gs
std
mov
add
outsb
xchg
int3
push
mov
popa
ret
sets
out
sub
aaa
dec
xchg
ret
stc
xchg
jge
sbb
push
jg
stos
fstpt
adc
xchg
mov
out
in
xchg
ja
addr16
inc
stos
out
addr16
pop
mov
test
test
or
inc
insl
rorl
out
dec
shll
cmp
ljmp
int3
mov
push
sbb
pop
out
leave
xchg
test
jecxz
mov
in
add
mov
adc
mov
int3
fwait
outsl
dec
jnp
and
adc
or
cli
ss
mov
arpl
loopne
lcall
sar
mov
loopne
or
daa
push
adc
popa
movsb
xor
jno
int3
movsb
mov
gs
push
jnp
lret
lcall
std
je
outsb
push
mov
out
xchg
scas
jbe
push
mov
aam
adc
jno
test
cmp
jl
mov
mov
mov
outsb
test
enter
inc
xor
pop
mov
mov
icebp
inc
ret
in
jmp
iret
fwait
fwait
xchg
mov
sbb
daa
test
test
inc
inc
mov
xchg
hlt
out
test
repz
jne
xchg
add
arpl
add
mov
or
add
shlb
testb
mov
dec
sbb
mov
push
pop
ja
sub
insl
cmpsl
push
jg
add
data16
fsts
and
cmp
popa
sahf
xor
jne
mov
int3
orb
out
lret
sub
fsub
in
xchg
insl
shl
xlat
xchg
test
push
mulb
bound
and
imul
xchg
movsb
pop
mov
hlt
movsl
imul
insl
sahf
cmp
ss
lcall
sub
mov
inc
sti
inc
lds
mov
jb
add
add
and
jmp
cmp
jp
or
or
mov
out
push
loop
aad
adc
pop
aam
movsl
add
and
ds
xor
popf
pop
and
push
lock
insb
scas
cmp
mov
rcrb
or
lock
loope
cltd
ds
pusha
adc
jno
cmp
sub
jb
add
lods
xor
cs
bound
pop
insb
and
shll
fwait
das
sahf
jmp
sbb
test
roll
jg
mov
les
mov
mov
inc
inc
or
push
ljmp
jo
scas
rclb
aad
repz
out
sbb
xchg
scas
cwtl
stos
mov
and
aaa
icebp
insb
hlt
cmp
jbe
setb
add
les
lret
in
dec
sbb
add
inc
fildll
pop
pushf
mov
bound
mov
sub
hlt
aas
nop
jbe
dec
jb
cmpsb
mov
jmp
aad
inc
enter
xchg
dec
xchg
jle
shll
xor
fwait
mov
mov
sti
repz
add
or
jl
inc
push
cwtl
in
je
pop
iret
jmp
sbb
sbb
dec
pop
jb
jp
inc
xor
or
scas
cltd
xchg
sub
sub
cmp
or
dec
sti
or
cmpsb
or
cmc
inc
lock
and
xor
xchg
arpl
fdivr
cmp
mov
idiv
fiaddl
xchg
push
xchg
jmp
popa
push
in
inc
jecxz
adc
imul
push
call
pop
dec
mov
test
inc
or
es
xor
sbbb
or
fwait
in
push
pushf
nop
push
cmp
sbb
cld
stos
cli
pop
notl
sbb
cwtl
xor
in
lods
pushf
stc
test
std
fcoml
add
xor
test
clc
push
aam
xor
pop
stc
ret
scas
adc
pop
clc
pop
push
jg
aas
jnp
jge
int
shlb
movsl
push
in
clc
xchg
ja
mov
pushf
in
cmp
hlt
or
mov
out
or
addr16
mov
or
adc
mov
test
iret
dec
push
repz
jnp
or
jp
stos
test
es
scas
mov
and
inc
iret
outsb
sahf
dec
out
jmp
dec
mov
cmpsb
fdivrs
xor
inc
xor
lret
xor
push
or
inc
mov
mov
notl
icebp
iret
sti
lret
jg
push
mov
fwait
into
imul
fmuls
sbb
or
lds
jge
dec
xor
adc
pop
lret
das
fists
daa
nop
lahf
ds
mov
push
jb
and
cmp
pop
xchg
fbld
push
push
jnp
push
ljmp
les
xor
sub
int3
mov
sub
rorb
pop
std
pop
xchg
adc
mov
idivb
jne
sub
fisttpl
int3
pop
popa
lods
dec
stos
or
push
xor
ss
push
mov
cmp
jno
cmp
outsb
or
adc
cmp
fisubs
or
int
cmc
cmp
pop
loope
jmp
cmc
into
cmpsb
int
jns
pop
lods
add
pop
sbb
repnz
xchg
xchg
and
scas
and
stos
add
inc
sub
lret
loopne
sahf
jo
jle
jb
push
lea
stos
jae
sbb
mov
xor
fstl
pop
imul
shlb
sub
pop
arpl
push
fsubs
imul
scas
xor
arpl
jmp
jg
push
or
sub
out
inc
inc
repz
lahf
call
out
mov
pop
les
inc
shlb
adc
pop
popf
cmp
xorl
sub
jle
pop
push
scas
popf
jnp
in
mov
add
push
dec
std
call
push
pusha
xor
movsl
xchg
push
sub
cs
mov
enter
xchg
push
and
cmp
pop
mov
pop
mov
aam
fwait
mov
out
movsl
inc
and
and
sub
and
test
push
nop
and
push
mov
sub
orl
sbb
test
lret
mov
call
cld
popf
mov
movsl
jo
inc
jae
mov
rcrl
cwtl
jge
jb
mov
mov
cmpsl
lret
aam
cmpsb
and
dec
inc
packuswb
lock
sbb
inc
loope
sub
dec
sub
insb
xor
test
hlt
orb
nop
inc
scas
in
mov
pusha
push
test
sbb
popf
dec
or
ret
lret
addb
sbb
pushf
daa
fsubs
std
jle
add
or
icebp
fisubs
add
pop
inc
or
inc
sub
pushf
pop
jno
dec
inc
lahf
jge
push
jge
popa
rcr
pop
mul
cmp
cwtl
or
addr16
lds
ljmp
repnz
xlat
scas
push
hlt
loope
or
xor
andb
push
mov
xchg
rol
inc
in
aaa
pop
stos
sbb
nop
pop
inc
add
sahf
cmpxchg
inc
pop
inc
fisttpll
jle
test
sbb
cltd
jbe
pop
jbe
sub
sbbl
dec
das
inc
xchg
pause
lcall
xlat
adc
mov
mov
push
gs
into
les
lcall
push
dec
je
cmpsl
shlb
cmp
fs
mov
push
cld
mov
inc
pop
cmp
cwtl
sub
popa
test
orb
jmp
pop
insb
loopne
out
inc
lds
jb
pop
and
push
repz
inc
push
insl
out
in
jp
arpl
xchg
push
fs
je
adc
sub
sbb
stos
mov
test
mov
push
out
cmp
lea
mov
bound
mov
call
dec
shrb
mov
fstpl
rcrb
cmc
pop
int3
fwait
sub
sti
cmc
hlt
std
xchg
leave
jbe
mov
cli
cmp
sbb
sbb
in
das
push
jbe
pop
fmuls
adc
test
mov
sub
jnp
mov
leave
test
jno
xor
xchg
cld
mov
xchg
ret
sahf
jle
rcrl
lea
movsl
dec
or
filds
fnsave
and
pop
ficomps
jle,pt
arpl
les
or
cmp
lods
sub
shll
cmp
pop
mov
cmp
jns
push
jle
adc
fs
mov
cld
idivb
arpl
out
jecxz
jbe
fstpl
negl
push
test
push
mov
fcmovnbe
mov
dec
pop
add
bound
aaa
lea
jnp
push
mov
mov
mov
int3
fs
adc
adc
xchg
pop
mov
loope
sarl
push
xor
pop
sub
push
loopne
adc
adc
fs
sub
rcrl
mov
jb
xorl
mov
arpl
shrl
lods
inc
add
inc
movsl
rcrl
stos
repnz
mov
mov
flds
outsb
sbb
cltd
cmp
xor
add
jnp
mov
dec
int
lock
push
sub
pop
adc
loopne
xchg
jle
inc
pop
js
clc
insb
sub
mov
mov
das
jg
mov
imul
mov
mov
pcmpeqb
emms
sub
cmc
loopne
fwait
add
mov
inc
push
or
mov
inc
mov
in
popa
loopne
aam
aas
cmp
out
dec
addr16
and
and
pop
icebp
sbb
push
sahf
and
insb
xor
jl
aam
sbb
cmpsl
sub
add
lock
popf
inc
push
fs
imul
push
xchg
mov
mov
dec
fwait
rcrl
mov
sahf
movsb
jl
xchg
adcb
xchg
push
add
cmp
adc
les
add
fcmove
sub
jmp
mov
sbb
mov
bswap
dec
es
data16
adc
les
xor
divl
loope
arpl
ljmp
fbld
scas
and
push
scas
sbb
roll
jl
sbb
sbb
sub
push
jne
mov
call
adc
push
dec
adc
out
xor
adcb
js
xchg
xchg
add
aam
mov
aad
movsbl
hlt
out
lock
sub
pushf
inc
cmp
mov
and
popa
not
adc
loopne
dec
dec
mov
dec
inc
pop
daa
jno
sub
rcll
add
rclb
pop
dec
pushf
jo
mov
push
cld
mov
or
push
mov
repz
cli
pop
dec
pop
lods
inc
inc
popf
cmp
push
incl
sarl
jne
adc
mov
or
mov
into
adcb
mov
mulb
fidivs
xor
mov
insl
xor
ja
rcl
inc
pop
jnp
and
cwtl
mov
repz
divb
repnz
out
imul
add
adc
std
sbb
add
les
mov
jae
mov
dec
adc
orl
jp
sub
xor
xchg
mov
shll
mov
cmp
mov
cltd
sbb
or
loopne
xchg
cld
scas
jp
sbb
xor
pop
aad
xchg
push
mov
popf
cwtl
dec
add
std
sbb
js
fidivs
add
jb
jecxz
cmp
hlt
dec
and
int3
dec
stc
ret
jbe
mov
into
into
std
add
sbb
jle
push
leave
ds
adc
sbb
mov
in
and
lcall
push
mov
add
sub
ljmp
and
mov
bswap
sti
cld
mov
call
fisubl
xchg
push
adc
inc
leave
xor
sub
mov
dec
je
rcll
or
xchg
hlt
insb
inc
cmp
andl
dec
jae
shll
sub
scas
xor
aas
popf
and
fbstp
aam
push
or
and
add
xchg
sub
and
out
jmp
dec
repnz
push
dec
out
in
xchg
mov
test
fcomi
push
mov
mov
inc
aaa
sbb
adc
in
and
adc
movsb
ret
notl
mov
leave
jl
pop
pop
mov
or
into
or
loop
sahf
mov
and
nop
push
daa
je
mov
add
mov
pop
stos
inc
nop
ds
sub
push
cmc
sbb
adc
sbb
push
xchg
ljmp
add
clc
je
sub
push
dec
adc
inc
jecxz
aam
scas
pushf
push
xor
mov
movsb
sbb
jl
ljmp
pop
mov
mov
iret
push
xchg
inc
rcl
movsb
inc
aas
lret
add
stos
roll
or
shl
xorl
or
cmp
lret
add
loop
out
sbb
add
sbbl
dec
cmpsl
mov
or
ret
test
ljmp
mov
mov
cmp
mov
push
or
iret
dec
or
dec
fnstsw
lcall
sbb
nop
inc
or
aam
mov
movsl
xchg
sbb
jp
rorl
into
lods
hlt
mov
pop
mov
mov
mov
sub
dec
sub
dec
dec
pushf
fnsave
lret
repz
mov
adc
movsl
subl
lret
iret
and
inc
int
mov
in
add
and
call
lret
outsl
mov
das
add
imul
and
adc
fildll
xchg
insb
mov
inc
incl
out
xor
aad
cmc
push
dec
incb
pop
idivb
push
outsb
xor
inc
je
std
jno
mov
popa
lcall
lcall
add
stos
test
or
ss
adc
ret
add
hlt
std
jge
dec
andb
loope
stos
cmc
sar
fimuls
iret
in
insb
gs
leave
add
mov
ja
lods
loop
mov
jbe
mov
adc
sub
jnp
lods
test
fdivrl
or
xor
ret
or
cli
clc
call
mov
inc
mov
addr16
clc
shll
push
inc
stos
adc
pop
loope,pt
xor
icebp
lret
mov
int
lcall
push
push
in
mov
fdivrl
mov
test
stos
jbe
jo
push
pop
mov
aam
shll
or
loope
mov
stos
cltd
ja
pushf
js
xchg
pop
fcomps
fwait
js
cli
pop
scas
shlb
imul
shlb
pusha
into
lcall
test
sub
xchg
mov
pop
cld
iret
ret
iret
xor
in
mov
in
repz
sahf
mov
mov
arpl
push
inc
iret
jae
lock
outsb
xlat
inc
adc
xor
dec
jp
ss
mov
pop
adc
sbb
adc
cmp
xor
fcoml
inc
add
negl
inc
sbb
pop
dec
rorb
jmp
aam
mov
mov
repnz
mov
xchg
es
hlt
jge
adc
push
push
imul
or
rorl
or
xor
mov
ret
mov
cmp
adc
enter
ljmp
fwait
outsl
inc
sbb
xor
jp
outsb
je
cmp
leave
jne
paddq
aas
insb
xchg
mov
fnstcw
shlb
pop
lods
push
test
adc
xor
rcl
sub
mov
out
and
jae
sti
or
mov
into
js
mov
nop
jae
dec
addb
lods
in
loope
cwtl
push
rorb
movsl
cmp
rcrb
cmp
cmp
jo
cmp
fists
inc
mov
lret
inc
jb
and
xlat
lea
push
cmp
ds
sbb
es
jmp
das
jg
jp
ss
dec
out
jp
cmp
iret
cs
test
lcall
insl
cmp
dec
mov
xlat
cmpsl
dec
add
or
mov
scas
adc
bound
push
jne
sub
sti
inc
outsb
or
push
cmpsl
lret
pop
and
dec
pop
daa
jne
mov
adc
sub
mov
ja
push
mov
into
adc
fwait
inc
cs
xchg
mov
cmp
pop
or
ret
add
inc
je
sbb
adc
cli
jbe
mov
dec
je
dec
nop
mov
pop
leave
push
or
imulb
call
pop
jp
push
sbb
in
xchg
fwait
inc
insb
mov
dec
nop
dec
leave
cmp
subb
fs
adc
rorl
cmpsl
cli
std
or
mov
xor
adc
fldenv
clc
push
push
data16
push
push
arpl
adc
cmpsl
insb
stc
push
mov
mov
push
movsl
dec
arpl
rcrb
outsb
dec
andb
xor
out
into
ss
add
xchg
and
daa
out
add
adc
push
xchg
sbb
dec
out
scas
mov
stc
aas
and
dec
adc
mov
dec
xchg
sbb
jno
pusha
jmp
dec
push
mov
dec
fbstp
push
cmpsl
out
push
cli
dec
sub
out
hlt
frstor
add
push
xorl
push
call
push
dec
loope
repnz
out
cmp
inc
cld
bound
adc
stos
sbb
sub
outsl
dec
in
and
inc
add
test
ss
insb
sub
inc
je
ss
hlt
sub
clc
fmull
add
fisubl
jmp
ja
inc
lcall
loope
cwtl
stc
mov
aad
adc
mov
push
mov
pop
ljmp
dec
mov
in
gs
loopne
lods
divb
lock
pop
dec
js
add
cmpsb
xchg
int3
imul
xchg
push
cmc
fs
cmp
xchg
sti
mov
pop
jg
push
frstpm(287
xchg
or
cld
cmpsl
std
inc
subb
ret
or
clc
adc
sbb
sti
out
add
adc
js
cmc
jmp
aam
sbb
pushf
frstor
ret
pop
mov
popf
rorl
xchg
mov
push
fldt
lock
in
dec
push
adc
mov
daa
out
cwtl
stos
or
stos
dec
loop
pop
jmp
loope
movb
in
cli
sub
clc
and
pusha
in
and
lret
les
and
jno
sub
lret
pop
jecxz
bound
fcomip
and
inc
push
popa
adcb
pop
icebp
cld
outsl
cmc
xchg
ret
scas
in
fwait
sub
inc
jnp
fdiv
add
and
xor
xor
xchg
jp
xor
adc
sub
test
mov
lods
xchg
scas
dec
push
mov
dec
setno
and
adc
mov
push
push
fnstcw
fstpl
in
int3
imul
adc
add
cmp
mov
push
jne
adc
cmpsl
and
adc
mov
or
icebp
dec
xchg
xor
in
add
push
mov
mov
fisubl
sbb
add
push
mov
cmpsl
dec
xchg
xchg
mov
out
add
movsb
sbb
xor
xchg
test
icebp
cmp
mov
jns
inc
lcall
outsb
lock
cmpsl
shrl
std
adc
jae
clc
inc
jb
xchg
repnz
imul
push
sar
mov
lahf
inc
sub
push
mov
xor
mov
fneni(8087
push
push
loopne
inc
iret
fisubrl
sub
test
cld
xchg
call
jmp
cmp
nop
test
or
xchg
xchg
jbe
imul
mov
sahf
rorb
adc
push
rorl
dec
xorb
aas
jno
outsl
or
test
int
xorl
add
jl
lea
pop
sarb
lahf
jno
and
jno
inc
test
and
xor
add
adc
roll
push
addl
xchg
inc
test
and
xor
add
adc
roll
push
addl
adc
and
xor
add
xor
roll
push
addl
xchg
inc
test
and
mov
add
pop
mov
sub
outsb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jne
gs
dec
inc
pop
cmp
pop
jo
pusha
sbb
aad
lods
movsl
mov
jne
gs
dec
inc
pop
xor
or
in
mov
shll
jne
gs
dec
inc
pop
xor
or
in
cmpsb
mov
ljmp
gs
and
and
xchg
aaa
push
aas
mov
call
ds
mov
sub
repz
add
inc
mov
xchg
lea
lea
jo
daa
int
imul
dec
cmc
mov
scas
lea
or
xor
fs
and
or
insl
jecxz
adc
add
jecxz
dec
lods
int
xchg
xchg
sub
mov
add
in
sbb
cmp
cmpsl
mov
mov
pop
lock
sbb
ljmp
scas
sub
lods
movsb
out
xchg
in
mov
insl
gs
dec
inc
pop
xor
or
in
aad
lods
movsl
mov
xor
cmp
dec
and
dec
insb
push
jo
inc
dec
mov
loope
mov
test
fcom
hlt
rcl
jbe
pop
sbb
inc
dec
jno
fs
test
icebp
mov
sbb
add
xor
or
in
aad
lods
movsl
mov
jne
gs
dec
inc
pop
xor
or
in
aad
lods
movsl
mov
jne
rclb
pop
mov
lods
sbbb
pushf
add
inc
lea
aas
push
aaa
sbb
or
popa
std
push
or
xchg
xlat
leave
int
dec
mov
mov
jle
ss
dec
push
mov
cmpsl
sub
lret
out
fmull
test
push
test
cltd
pop
mov
pop
push
int
mov
mov
jno
imul
mov
repz
iret
shl
dec
imul
lahf
fsubrs
imul
loopne
loop
add
xchg
aad
outsb
dec
sbb
push
mov
dec
mov
push
inc
bound
xor
mov
jae
rcrl
icebp
xchg
jnp
pop
divl
pop
mov
movsb
xor
mov
daa
cmpsl
xor
movsb
shlb
repz
cmpb
push
in
sbb
cmpsl
test
cmpsl
andl
out
pusha
icebp
pop
scas
xchg
dec
sub
orb
repnz
sbb
xchg
sub
mov
add
inc
lahf
push
ret
sbb
out
fwait
leave
gs
divb
and
add
shlb
mov
xchg
cmpsl
cs
jle
arpl
push
divb
dec
jnp
xchg
out
adc
sbb
inc
xor
pop
inc
cmpsb
outsb
inc
and
adc
bnd
add
push
pop
aam
stos
push
xchg
and
imul
fldl
insl
add
mov
lret
es
loopne
xchg
lcall
pop
xchg
push
xchg
outsl
lret
cmpsl
dec
push
and
inc
xor
adc
pop
inc
xor
add
fcoms
stos
es
xlat
fbld
hlt
lock
dec
loop
push
pusha
jbe
xor
scas
jl
jecxz
and
mov
ret
aas
mov
lcall
cli
add
into
leave
push
push
int3
mov
cltd
mov
pop
xchg
sti
or
jo
js
mov
clc
cmc
adc
fdivr
adc
popf
pop
sti
fcmovu
cmp
je
jge
data16
jp
pop
into
mov
mov
lods
mov
sub
mov
pop
loopne
add
jae
push
js
call
jns
enter
cs
outsb
dec
stc
jne
xchg
dec
sbb
sub
jecxz
lods
cs
scas
test
mov
in
in
push
loope
test
pop
mov
and
subb
jmp
xor
popa
adc
rcl
ficomps
out
sbb
aas
data16
les
cmp
ffree
enter
add
cmp
and
jae
push
push
inc
inc
mov
inc
mov
sbb
mov
adc
mov
ljmp
adc
lret
xchg
subl
push
inc
rolb
mov
cltd
fs
lea
sub
std
cmp
pop
and
bound
scas
cmp
and
mov
pop
mov
jb
dec
outsb
mov
push
arpl
out
daa
cmp
and
arpl
pop
call
jbe
cmp
pop
sti
rcrb
mov
pop
test
ja
outsl
mov
mov
scas
pop
cmpsb
mov
sub
inc
call
jae
enter
out
pusha
and
lods
cmp
xchg
sub
ret
nop
mov
push
bound
pop
arpl
mov
cli
mov
inc
aad
xor
inc
mov
roll
dec
adc
stos
loopne
fsts
push
les
mov
add
int
aaa
jb
andb
xchg
lcall
mov
lcall
sub
daa
rol
mov
adc
add
mov
loope
mov
in
push
out
aam
loope
cli
and
cmpsl
stos
jge
pop
cmpb
xor
ss
add
aas
je
adc
aas
jge
lea
aad
data16
dec
or
mov
jb
cmp
in
push
test
stos
das
push
adc
mov
add
or
add
jmp
rcrb
cmp
into
pop
scas
xor
mov
push
movsl
jnp
cwtl
cmp
mov
mov
xchg
lock
lret
dec
inc
dec
nop
fs
push
and
mov
sub
test
lret
insl
cmp
xor
jp
mov
pusha
pusha
cld
pop
stc
cmp
push
or
mov
pop
cli
andl
inc
outsl
sub
outsb
cmp
enter
xor
mov
push
pop
cmpsl
pusha
xchg
ljmp
xor
pop
pop
cmpsl
enter
cmp
push
into
pop
xchg
sbb
add
leave
or
mov
cld
clc
push
lret
push
xor
inc
stc
in
test
ds
cmp
subb
js
mov
sbb
xorb
lods
lea
fsub
dec
stc
mov
jecxz
or
xchg
jl
pop
sbb
into
loope
cmp
cmp
lds
sub
enter
sbb
push
filds
out
fiaddl
lcall
movsb
dec
shlb
in
push
pop
fwait
xchg
pop
lret
fmull
mov
cld
sti
xlat
test
jbe
or
aas
ret
js
xor
push
mov
mov
mov
cli
xlat
loope
pop
sahf
ss
mov
dec
lods
jle
jnp
addl
mov
lea
imul
ljmp
xor
test
dec
pop
xchg
or
jae
xchg
nop
adc
and
iret
adc
or
push
out
mov
mov
xchg
mov
cmp
shll
push
xchg
in
pop
or
cld
pop
adc
mov
outsb
pop
xchg
xor
scas
ds
jns
push
iret
inc
mov
stos
add
mov
xor
pushf
dec
or
sbb
add
sbb
sub
popa
sub
fdivrl
sbb
jns
daa
push
int3
test
pop
pop
popa
xchg
add
jmp
into
mov
test
dec
mov
pop
aam
jle
sarl
fstl
mov
jg
adc
orb
dec
mov
push
xor
mov
inc
addr16
jbe
pop
pop
movsl
arpl
addr16
in
ds
xchg
cs
push
pop
movsb
in
in
ds
jae
in
addr16
loopne
std
sbb
stc
cmp
jns
inc
xchg
push
ljmp
lock
mov
data16
adc
fmul
sar
rcrb
inc
push
jne
xchg
jo
xor
dec
dec
push
shl
cld
ret
lods
xor
out
lret
xor
or
lods
cmpsb
cli
pusha
jbe
mov
roll
daa
sub
inc
dec
test
repnz
in
dec
fnstsw
arpl
adc
insb
jp
shlb
pop
xchg
xor
push
in
leave
xchg
inc
in
test
inc
mov
adcl
dec
shll
jp
add
scas
pop
sbb
xchg
imul
out
popf
xchg
fstpl
sbbb
sbb
jecxz
imul
add
inc
sbb
pop
xchg
out
xor
jecxz
adc
pop
sarb
inc
mov
and
cltd
mov
or
fs
mov
sti
jno
lcall
add
imul
mov
shlb
and
cltd
ja
icebp
loope
adc
dec
cmpsb
out
sbb
adc
loope
nop
mov
fcomp
sbb
cmp
scas
pop
dec
pop
push
ret
add
in
dec
test
sbb
pop
xor
mov
cli
out
adc
ja
and
je
paddusb
inc
pop
jge
push
dec
mov
cmpb
jmp
sub
cmpsb
ja
sub
and
sbb
out
arpl
cmp
daa
mov
pop
lret
xchg
out
pop
hlt
pop
out
and
push
filds
cmp
stc
in
lahf
repnz
xchg
cmpsl
add
ret
outsb
adc
and
andl
jbe
into
jnp
jbe
jno
popa
cmp
cmpsl
stos
scas
cmp
dec
movsb
xor
xlat
inc
push
mov
cwtl
xor
sub
lret
cli
das
loope
lds
or
fistpll
stc
inc
jb
cmp
dec
jb
sub
cmpsl
push
pusha
loope
inc
jg
jne
into
jmp
std
sarb
sbbb
add
pop
push
pop
pop
test
icebp
mov
loopne
negl
lods
out
adc
inc
push
scas
dec
pushf
mov
cmpsb
shll
mov
inc
pop
sub
stc
aas
pop
cmp
jno
cmpsb
fdivs
fisubrl
stos
mov
xchg
fs
das
loop
or
or
inc
int
outsl
xor
cmpsl
mov
xchg
adc
or
jg
fwait
daa
or
pop
dec
xchg
lds
pop
repz
push
mov
icebp
out
add
lahf
sbb
scas
xchg
mov
fsincos
int
cmp
jb
push
pop
push
push
pop
in
lahf
pop
fstpl
mov
rcr
divb
xor
iret
loopne
jae
cmpsb
pop
inc
outsb
mov
inc
cmpsl
out
lock
push
fidivs
xchg
add
pop
pop
shlb
mov
pop
jnp
fwait
sub
mov
add
adc
add
data16
add
test
mov
jge
out
mov
ret
scas
jb
or
jae
stos
push
xor
cmpsb
test
test
mov
xlat
bound
pop
addb
and
shlb
into
pop
cmpsl
daa
xor
ret
int3
jbe
insl
clc
aam
mov
pop
mov
push
hlt
cmc
add
je
shll
jae
push
pop
adc
inc
mov
adc
mov
xchg
fwait
sahf
push
addb
push
ja
and
sub
xchg
push
or
xchg
addr16
mov
mov
out
mov
push
mov
les
sti
xchg
icebp
popf
repz
fiadds
ljmp
xchg
or
mov
shlb
aad
mov
out
mov
cltd
mov
aaa
fdivrp
inc
mov
stos
test
lods
xor
mov
xchg
sub
jo
es
mov
xchg
jle
jnp
jg
fidivl
sti
sbb
mov
xor
call
gs
cmc
rcrl
or
sbb
je
jns
roll
jne
movsl
ret
fs
lods
daa
jecxz
shrl
cmc
arpl
jmp
into
in
jb
add
aam
dec
rorb
or
and
fwait
or
inc
aad
dec
lret
in
movsb
cmp
jle
rcl
mov
mov
adc
fistps
insb
gs
cli
sub
pop
mov
push
or
shrb
lock
push
inc
daa
mov
mov
xor
negl
sahf
or
jecxz
jb
pop
pusha
push
mov
mov
rorb
jne
ja
jle
cmp
lcall
ljmp
ret
push
out
push
mov
shll
dec
daa
jns
enter
add
mov
fcoml
adc
pushf
dec
push
jbe
mov
arpl
sbb
inc
lret
test
push
mov
adc
push
xorb
das
ficoms
lods
inc
gs
enter
call
xchg
into
sahf
lret
push
pmullw
negb
mov
and
lods
jbe
or
outsb
jne
push
ss
fstl
or
pop
pop
cmp
stos
fucomip
add
sbb
leave
add
xorl
cmp
and
rolb
cmp
out
loopne
rolb
pop
mov
gs
pop
inc
mov
aam
adc
and
out
stos
pop
push
mov
iret
dec
orl
xchg
mov
imul
sti
mov
jecxz
js
xchg
dec
cld
adcl
jbe
loop
jne
lods
out
dec
stc
pop
and
add
rcl
cmp
pop
mov
push
fisubrl
mov
pop
mov
jecxz
push
dec
lods
lret
xchg
stc
aad
std
dec
mov
mov
inc
shlb
loope
lock
testl
aaa
inc
xchg
and
pop
cmc
jno
push
sub
daa
pop
sub
ds
or
cmc
inc
test
mov
mov
mov
stos
mov
stos
push
out
sub
sbb
setle
loopne
mov
sarb
jo
fcomps
dec
mov
push
dec
insl
cltd
test
inc
icebp
mulb
btc
xchg
outsb
je
stos
pushf
sahf
mov
dec
stos
outsl
mov
outsb
test
cld
jnp
imul
sub
pop
stos
mov
or
lret
aas
inc
mov
and
into
jae
xor
out
add
jg
pop
pop
jg
lock
sub
or
push
loop
das
dec
nop
inc
jnp
cwtl
xor
jbe
in
push
idivl
mov
popf
mov
stos
incb
test
aad
mov
int3
and
mov
and
pop
add
and
cltd
lsl
lret
or
data16
pop
lods
cmovno
inc
pop
adc
test
inc
add
add
punpcklbw
jge
xchg
imul
ret
inc
mov
pop
inc
mov
ja
fnstenv
out
mov
gs
mov
shrl
xor
pop
push
in
lods
jae
jecxz
shll
cmp
lods
jbe
shlb
les
xor
stos
xor
test
cmp
leave
inc
lods
jbe
jne
out
or
es
insl
xchg
aaa
pusha
mov
mov
insl
add
je
xchg
adc
fwait
dec
adc
je
sub
xchg
jmp
mov
lods
sbb
shl
les
ljmp
cmpsl
dec
ljmp
cmp
jl
dec
cltd
jbe
and
ss
sbb
adc
lods
inc
pop
add
nop
imul
mov
lret
sar
and
pop
dec
out
daa
mov
xchg
aam
icebp
dec
cmp
mov
test
test
mov
rcr
cmc
inc
adc
rorb
cmp
pop
pop
cmpsl
lds
dec
dec
jg
cmp
push
push
fdivrs
dec
andb
add
adc
movsl
add
cmp
inc
xchg
xor
add
sbb
ret
in
rorl
cmp
mov
outsb
dec
stos
out
loop
inc
cmpsb
push
fcmovnbe
add
outsl
xor
addr16
out
addr16
ss
les
jle
or
data16
mov
jl
xchg
cmp
and
xchg
stc
push
loopne
pop
push
sub
mov
iret
loop
sub
popa
mov
mov
adc
in
sbb
pop
mov
adc
jg
push
test
mov
dec
jmp
sbb
jo
inc
daa
dec
movsl
in
pop
dec
adc
aam
pop
mov
cwtl
loope
packsswb
mov
scas
cmp
outsb
ret
add
mov
sub
and
inc
fldl
arpl
pusha
jne
notl
popa
sbb
loop
sbb
sarb
and
pop
jle
scas
sbb
dec
mov
ret
cmpsb
push
clc
sub
adc
pusha
fisubs
insl
sbb
pop
sbb
into
mov
xor
lcall
or
test
lcall
pushf
xor
mov
sbb
mov
mov
sbb
push
daa
pop
sbb
cli
vmptrld
cmp
cltd
outsl
out
aaa
add
sub
xchg
xor
mov
insb
jo
fmulp
jp
fdivrl
dec
in
jg
lcall
mov
adc
jnp
mov
mov
data16
add
test
sub
adc
inc
movsb
jmp
cmpsl
aad
testb
push
lret
and
pop
pop
xchg
cwtl
push
stos
mov
popa
iret
lds
clc
or
sahf
ds
shlb
xchg
lret
and
insb
sbb
and
cmp
fs
inc
sbb
std
cli
call
in
cmp
test
scas
lahf
push
mov
adc
xor
loopne
add
mov
movsl
mov
int
jl
inc
inc
mov
mov
add
mov
pop
xlat
dec
fs
xlat
lret
jl
mov
xlat
sarb
push
addr16
xor
cltd
std
jb
mov
push
pop
inc
mov
mov
aaa
les
orb
test
ljmp
subb
push
xor
xor
pop
mov
xchg
cmp
and
pop
cmp
push
cmp
pop
jle
or
incb
adc
lcall
push
and
scas
shll
add
scas
cmp
icebp
ret
push
adc
fnstsw
cmovns
xlat
push
mov
pop
mov
popa
mov
lea
sub
fwait
loope
and
sbb
add
not
mov
data16
mov
data16
dec
cwtl
mov
adc
and
xor
scas
rorb
fmulp
pop
mov
arpl
xor
inc
stc
cmp
leave
or
pop
and
out
mov
xor
ret
mov
std
mov
cld
push
shrl
scas
lock
xor
repnz
repnz
sahf
add
pop
loopne
into
shlb
adc
cmp
rol
mov
adc
das
outsw
mov
out
pop
addl
out
jnp
or
leave
mov
insb
nop
jle
sub
mov
ficoms
mov
out
imul
es
es
lahf
cmc
lods
inc
mov
push
pop
sub
dec
push
in
daa
mov
loope
mov
in
pop
jns
aad
rcl
rorl
fisttpl
lock
jno
and
dec
or
adc
cmpsb
sub
stc
scas
xor
xchg
inc
iret
push
in
cwtl
out
ret
adc
cmp
aam
sbb
jo
mov
ret
or
push
mov
xor
out
and
and
mov
pushf
sahf
pop
faddl
add
imul
jg
mov
outsb
nop
pop
nop
jecxz
aad
add
cmp
pop
int3
imul
js
cld
arpl
jbe
push
in
xchg
mov
jmp
fstpl
cs
mov
cmp
lock
popa
sahf
jmp
test
in
sbb
sub
lods
mov
jnp
jp
jbe
pop
inc
dec
push
jl
mov
popf
jo
lret
pusha
push
ret
arpl
ja
sti
sub
mov
cmpsl
mov
lods
mov
mov
cltd
push
inc
pop
mov
stos
lock
cmp
add
inc
or
mov
loope
rcrl
data16
mov
push
pop
push
cmp
and
insb
repnz
push
pop
xchg
cmp
fidivl
in
setne
cmp
inc
mov
xor
cmpsl
push
sbb
lods
mov
sbb
mov
adc
xchg
popf
test
mov
pop
jnp
mov
aam
sbb
daa
dec
leave
and
mov
mov
insl
int3
ret
jnp
mov
nop
iret
cltd
sbb
pusha
pop
daa
fadds
dec
out
mov
jne
loop
cwtl
mov
das
ljmp
push
mov
jnp
loop
sub
lret
sbb
cmp
or
popf
shrl
mov
mov
test
sbb
inc
lock
out
mov
std
enter
fsts
mulb
inc
not
xchg
xorb
xor
xchg
addr16
sbb
jmp
rcll
fwait
mov
cwtl
lea
jge
push
add
mov
mov
ljmp
add
sub
lahf
add
jns
adc
imul
xchg
icebp
jp
es
xor
and
mov
mov
aad
xor
push
outsb
push
divl
and
sbb
cmp
cmp
movsb
xchg
sbb
mov
ret
inc
call
mov
inc
add
shrb
outsl
dec
push
in
lret
jl
push
mov
mov
push
and
dec
idivb
push
inc
fdivs
repnz
rorb
stos
inc
jae
lret
push
std
dec
cmpsl
mov
pusha
mov
aad
cs
xchg
xor
push
jmp
pop
lahf
imul
or
jmp
inc
cmpsl
xchg
ds
push
sbb
ficoms
and
sub
pop
sbb
test
sub
pop
sub
orl
out
lcall
xor
mov
dec
adc
xor
jle
ja
push
loopne
outsb
xchg
add
mov
ret
push
mov
mov
cmp
in
sub
lret
jno
dec
repz
leave
mov
adc
add
frstor
lea
loope
insl
mov
and
sub
xchg
test
ljmp
sub
add
std
aad
lods
movsl
mov
jne
gs
dec
inc
pop
xor
or
in
aad
lods
movsl
mov
jne
gs
dec
inc
pop
xor
or
in
aad
lods
movsl
mov
jne
gs
dec
inc
pop
xor
or
in
jg
lds
push
jp
inc
mov
jecxz
xchg
je
add
data16
out
divl
in
hlt
add
movsb
inc
and
je
add
adc
and
xor
les
aam
test
hlt
add
pop
xchg
arpl
cmpsb
testb
cmc
sbb
je
cmp
xor
mov
jb
jno
and
add
sub
sbb
rcrb
push
pop
add
push
jns
shrl
or
out
jl
out
push
xor
mov
push
jnp
enter
dec
push
mov
lret
int
push
sbb
pop
cwtl
xchg
xor
xor
adc
std
xchg
adc
insb
xchg
mov
sti
out
rcr
adc
lds
or
jnp
xchg
out
movsl
lods
mov
mov
outsb
jmp
loop
adc
je
repz
rcrl
jbe
add
pop
gs
push
sti
mov
add
mull
jae
lds
imul
mov
add
loopne
insb
jecxz
rcll
mov
dec
sahf
lea
mov
int3
adc
or
imul
push
cmpsb
xor
les
push
xorl
shrl
or
xor
push
loopne
out
insl
mov
popa
lock
inc
mov
std
cmp
arpl
ss
xor
sarb
add
mov
xor
les
aam
in
hlt
add
mov
inc
mov
mov
add
adc
and
xor
les
aam
in
hlt
add
mov
inc
mov
cmc
cmpsb
out
mov
lret
xchg
cld
ljmp
daa
pop
xchg
jo
jge
adc
jbe
rolb
mov
sbb
mov
shl
sub
lahf
scas
movups
inc
insl
mov
addr16
mov
pop
repnz
sar
pop
xchg
mov
inc
shlb
ljmp
test
outsb
test
fisttps
dec
mov
insb
push
dec
push
mov
xor
in
push
dec
and
pop
sbb
out
inc
les
in
xor
and
mul
dec
das
stc
xor
repz
cmp
gs
out
add
inc
popf
mov
mov
and
and
fs
fistps
push
push
xchg
mov
stc
fldl
cwtl
bound
pop
rorb
xchg
and
shll
mov
test
mov
push
sbbb
movsb
add
mov
mov
mov
jae
stos
adc
jecxz
or
push
mov
xchg
jecxz
mov
aas
cli
inc
bound
aad
and
lret
add
cltd
shl
mov
dec
lock
mov
dec
shlb
xor
cmp
loope
insl
pop
cld
das
into
sbb
pop
cltd
ljmp
xlat
arpl
fdivrl
test
mov
and
gs
mov
mov
mov
out
scas
cmp
into
popa
xchg
hlt
clc
adc
pop
mov
xchg
sbb
pop
mov
adc
jg
iret
cmp
fbld
cmpsl
das
stc
sahf
sbb
ljmp
mov
cmp
adc
cli
roll
stos
imul
and
aam
shll
pop
jmp
xor
cmp
add
std
in
fsubr
nop
adc
or
inc
mov
repz
repz
lahf
sub
inc
mov
test
icebp
sub
les
int
lcall
xor
inc
pop
loope
gs
gs
add
xchg
fsubrl
popf
jg
dec
test
popf
mov
les
mov
pushf
icebp
mov
inc
dec
inc
sarl
and
pusha
pop
sub
mov
sbb
mov
or
and
push
fwait
sbb
mov
jge
enter
or
sub
lret
shll
mov
fucomip
enter
inc
test
add
mov
call
fcomps
mov
daa
sarb
adc
negb
cmp
adc
pop
js
test
sbb
call
fistpll
lods
jns
jp
stc
shll
xchg
andb
push
push
and
or
sub
sub
sub
popa
add
jg
loopne
decb
outsl
cli
xchg
inc
jmp
insb
out
bound
push
add
movsl
mov
cmpsl
fcom
cmp
cmp
mov
popf
mov
mov
sahf
mov
mov
mov
mulb
loopne
es
pusha
adc
pop
xor
and
sub
pop
stos
sbb
and
xor
dec
inc
cmp
pop
insb
and
out
leave
add
cmp
sub
mov
into
out
clc
dec
jns
lods
std
push
gs
jb
mov
pop
mov
lret
cmp
dec
jb
pusha
imul
popf
add
mov
mov
sub
push
jle
push
xor
adc
cwtl
in
xor
rorl
pop
cmpsb
daa
mov
jmp
das
mov
jge
xor
mov
ja
das
push
fisubs
cmpb
lods
das
out
mov
cmpsl
push
icebp
dec
lret
adc
out
int
mov
inc
scas
pop
xor
and
bound
push
sti
sub
out
data16
scas
push
mov
mov
fnstsw
mov
hlt
ds
sub
inc
daa
mov
cmp
adc
jge
pushf
push
nop
shlb
popf
dec
lret
or
xchg
inc
aam
pop
pop
gs
insl
jp
and
xor
xor
aas
push
aaa
loopne
adc
imul
in
negb
fnsave
dec
pop
popf
xor
lods
fimull
xchg
ljmp
and
addb
cmp
push
and
out
mov
lcall
push
aas
dec
hlt
into
and
sub
ficoml
cwtl
scas
mov
lds
or
mov
popa
push
push
imul
sbb
jge
jae
mov
cli
or
into
xor
enter
mov
shl
scas
sbb
out
insl
jne
cmp
jo
adc
gs
fildl
je
inc
pop
enter
push
sub
dec
sbb
xchg
add
inc
test
push
mov
pop
test
aaa
jae
addr16
int
int3
loop
inc
nop
in
imull
sbb
fwait
xchg
and
test
jp
cmp
test
sbb
fmuls
mov
hlt
out
das
int3
mov
insl
mov
xchg
jg
cmc
loope
in
pop
and
repz
enter
in
mov
xor
cmp
aad
loop
push
in
scas
stos
mov
aam
mov
pop
cmpsl
sahf
sahf
sbb
insl
jno
insb
enter
push
jle
mov
cs
cmp
push
sarb
pop
sbb
fwait
pop
insb
mov
dec
sub
pop
sub
les
push
mov
outsb
add
jns
dec
ret
cmc
popa
popa
jo
cmpsb
jne
enter
out
push
sub
add
ds
inc
and
ficoms
xor
imul
aaa
sub
adc
scas
ljmp
ret
dec
lret
jns
mov
push
or
adcl
mov
lret
lret
mov
idivb
pop
cmp
add
cs
xor
fstps
xchg
out
pushf
jne
cmp
leave
stc
cmpl
lds
test
mulb
fs
jns
daa
xchg
ret
add
mov
pop
xor
js
sub
cli
aaa
jne
and
test
mov
push
mov
fbstp
fxch
daa
xlat
test
mov
jmp
cmp
cmp
cmc
mov
mov
push
rclb
int
xor
stos
dec
xor
comiss
push
pop
and
adcb
stos
jecxz
mov
ret
sbb
cli
xchg
daa
lock
cmp
xchg
ret
pop
ret
lahf
das
cmp
cmpsl
sbb
inc
clc
int
pop
mov
inc
jbe
and
jae
sbb
mov
insb
dec
testb
mov
pop
mov
ja
jmp
mov
jl
push
fs
and
popf
fnstenv
das
int3
jb
dec
in
in
and
sti
jno
xchg
fdivl
inc
or
test
out
fists
cmpsl
adc
faddl
xchg
mov
push
xor
mov
adc
imul
and
test
inc
pop
push
ja
xor
add
mov
movb
and
js
mov
jno
dec
inc
ss
loope
loopne
mov
adc
sbb
rorb
andb
pushf
pop
clc
inc
lds
jne
fwait
mov
inc
push
call
insb
xchg
in
fstp
push
cmp
jno
inc
mov
int3
and
cmp
cli
xchg
sub
sub
adc
lods
pop
shll
movsl
mov
dec
stc
aam
arpl
insb
lock
mov
inc
mov
ljmp
mov
cmpl
out
jp
xchg
inc
inc
mov
cltd
mov
fdiv
cmp
loope
fsubr
loope
lret
scas
rcr
lret
fidivrl
lods
lahf
int3
sub
orl
dec
xor
cld
mov
push
aaa
jns
and
xor
mov
stc
out
pusha
lods
pop
shrl
sti
cmp
insl
xchg
out
adc
mov
xor
mov
out
icebp
neg
je
lods
jmp
xlat
or
ds
xlat
xor
add
xor
int
inc
es
iret
movsb
out
and
int3
dec
lcall
dec
pop
mov
xor
pop
pop
inc
addr16
fsubs
and
pop
jp
mov
nop
mov
loop
lods
movsb
mov
push
add
mov
call
in
and
push
pop
mov
pusha
jbe
xor
insb
mov
mov
mov
dec
insl
lret
nop
dec
mov
push
dec
cmpb
push
fldl
and
rcr
lcall
pop
mov
xchg
inc
loope
cltd
scas
mov
push
fadds
dec
je
ja
arpl
rorl
sub
in
dec
loope
jbe
or
shll
and
outsl
test
inc
subl
mov
aaa
or
sub
pop
test
in
mov
lds
adc
aaa
lods
jl
jno
mov
repnz
mov
clc
jb
mov
adc
stos
out
push
jmp
int3
and
adcl
out
mov
xor
movsl
in
cmc
push
inc
repz
xor
xorl
cmc
push
enter
sub
sbb
test
leave
cmp
xchg
test
or
pop
dec
lcall
dec
xor
add
dec
cli
mov
loope
lock
ja
loope
pop
xchg
and
inc
shlb
inc
cmp
enter
dec
fwait
gs
rcll
mov
enter
dec
aas
fsub
and
xor
push
or
pop
sti
and
sbb
dec
or
fs
and
mov
or
xchg
int
mov
insb
repnz
or
mov
inc
cmp
xchg
sbb
dec
popa
fcoms
add
pop
adc
cmp
aaa
push
ljmp
jmp
inc
pop
or
pop
jge
adc
int3
aaa
int
fwait
inc
sbb
or
xor
push
dec
xor
jb
cmp
xor
push
pop
enter
enter
xlat
test
cmp
dec
add
enter
mov
or
pop
arpl
movsb
jne
mov
hlt
dec
push
movsl
aad
jl
sub
mov
test
imul
push
lock
bound
out
cmp
call
repz
into
sub
pop
mov
mov
xlat
lret
scas
scas
and
popf
subb
cs
xor
mov
std
enter
inc
pop
movsl
mov
jle
jns
xor
imul
sbb
aaa
xchg
cmp
pop
or
fildll
fadd
shlb
lods
ljmp
btc
jmp
and
out
test
xchg
adc
clc
aas
aam
in
bound
pop
sbbb
cmpsb
iret
in
cld
cmp
aas
pop
scas
stos
xorl
xchg
dec
mov
addr16
lock
insl
dec
mov
stc
add
insl
or
pop
pop
add
sub
pop
cltd
call
pop
aad
lock
femms
adc
mov
jge
popf
in
xchg
xchg
bound
in
push
push
stos
out
inc
sbb
aas
imul
sbb
add
mov
push
fldt
fidivl
mov
xchg
mov
test
and
test
mov
cmp
xchg
cltd
pop
xchg
ja
test
fs
jge
out
push
cmc
mov
stos
mov
imul
xor
test
sbb
aad
mov
ret
loop
test
add
adc
and
add
inc
inc
lock
jne
fidivl
test
adc
mov
adc
fdivl
mov
in
sbb
ret
jbe
cmp
hlt
pop
hlt
mov
sub
sti
mov
xchg
xchg
mov
shrl
rorb
data16
fmulp
adc
fs
xchg
repnz
inc
lea
push
xchg
push
push
push
add
push
rclb
adc
insb
adc
int3
es
mov
lods
pop
les
mov
mov
inc
pop
push
sub
mov
popf
inc
or
pop
outsl
sub
fisubl
in
mov
lret
movl
fistpll
into
mov
andl
insl
dec
mov
inc
cmc
inc
or
mov
dec
rclb
scas
or
rorl
adc
stos
cwtl
and
jo
jecxz
pop
test
mov
dec
cltd
lock
scas
inc
push
xchg
add
std
jae
mov
insl
test
sub
add
xor
xor
push
test
ret
scas
xlat
lcall
push
add
add
push
popl
fcoml
pop
jb
cmpsb
push
sub
cwtl
stos
sbb
int3
loope
cmpsb
mov
loope
out
adc
rcll
jno
xor
dec
fldz
out
mov
add
ss
mov
cwtl
inc
xchg
movsl
mov
and
sbb
div
nop
lock
cs
stos
inc
inc
movsl
xchg
jae
imul
adcl
dec
sbb
xor
xchg
hlt
or
fwait
stos
xor
scas
call
cmp
out
xchg
ja
ljmp
inc
push
mov
inc
jno
jne
xor
pop
adcb
sarl
and
int3
jecxz
add
push
adc
xchg
mov
aam
cmc
and
jecxz
lea
movb
cmp
fisttpll
mov
in
in
shr
xchg
jne
stos
test
or
cli
pop
fs
xor
fs
popf
mov
mov
mov
add
xchg
mov
dec
ret
out
cmp
imul
stos
cmp
int
movsb
push
clc
ljmp
gs
xchg
cmp
pop
arpl
inc
cmp
cmpsl
bound
movsb
and
int3
inc
in
jne
and
xchg
paddsw
sbb
les
outsb
popf
jns
xchg
fstl
dec
addr16
sub
mov
xchg
jae
or
sbb
add
lcall
add
jns
cmpl
data16
jns
xchg
cmp
imul
pop
push
sahf
out
out
adc
push
dec
pop
or
pushf
sub
push
jmp
ret
adc
fs
mov
mov
pop
sub
inc
data16
cmp
fsub
jns
xor
inc
lods
cwtl
jle
jl
mov
fs
xchg
das
cmp
inc
lcall
or
iret
shlb
and
push
sbb
xor
aad
ret
pusha
and
aas
and
scas
add
lods
jle
dec
into
mov
pop
mov
sub
xor
pop
movsb
fimuls
lret
mov
push
mov
adc
xorb
pusha
mov
lret
shl
mov
ret
fistl
std
xorb
fwait
daa
fidivrs
dec
hlt
jb
popf
and
stos
mov
add
cmp
out
data16
or
cmpb
xor
jo
repz
sub
shll
jge
into
icebp
imul
mov
push
mov
sub
das
scas
xor
aas
xchg
pop
xchg
sbb
shrd
or
in
and
test
jg
jg
ret
inc
sub
jmp
fs
je
adc
icebp
mov
cmp
lock
push
jno
ds
sti
not
pop
fadd
fucomip
cmc
add
dec
cmc
scas
test
pop
ret
sub
scas
test
ja
sub
out
xorl
fistps
dec
fisttpll
cld
cmpsl
lds
movsb
subl
sbb
pop
movsl
inc
repnz
mov
adc
pop
das
add
cs
mov
test
or
mov
xchg
movsl
add
mov
cmpsb
sbb
pushf
jg
sub
jle
xor
cmpl
fs
pop
mov
sbb
xchg
negb
dec
xchg
push
out
add
rolb
xchg
and
sbbb
ds
push
hlt
sbb
or
cmp
and
xchg
ret
dec
call
inc
jns
fcoms
push
adc
scas
dec
adc
pop
mov
popa
lret
cs
sahf
cmp
mov
xor
out
add
pushf
add
loopne
pop
sub
sar
push
fsin
inc
rcrl
add
and
sub
bound
dec
cmp
data16
lods
or
push
xchg
or
mov
sahf
jge
inc
pop
lcall
sbb
leave
adc
dec
js
scas
addb
dec
sub
gs
and
pusha
mov
fdivl
daa
mov
movsb
lock
pop
int3
jbe
mov
bound
jecxz
lcall
inc
jmpw
arpl
cmp
orl
popf
push
clc
xchg
push
ret
jg
xlat
push
adc
or
adc
mov
lret
xorl
mov
stc
xchg
clc
enter
adc
jne
lods
aaa
inc
cmc
adc
cmpsl
lds
mov
addr16
mov
inc
fs
rclb
mov
imul
fsubl
and
jae
rcr
std
rcrl
pop
out
ret
loop
ss
test
jecxz
xchg
and
xlat
pop
inc
mov
ret
and
or
jo
mov
hlt
add
mov
in
es
xor
in
ret
xchg
lret
jo
ja
sbb
mov
das
mov
adc
and
add
daa
or
idiv
scas
jle
enter
movsl
xor
mov
icebp
mov
lcall
in
sbb
dec
xchg
in
sbb
mov
mov
icebp
mov
cmp
dec
jbe
arpl
insl
iret
mov
nop
pop
mov
mull
repz
loop
popf
popa
sbb
inc
pop
pop
lods
cmp
and
and
inc
fwait
int3
push
cmpsb
sub
pop
fsubs
cmp
out
das
out
mov
xor
lret
sti
mov
and
dec
push
mov
ret
cmp
sar
push
jmp
xchg
fisubs
mov
mov
int3
push
nop
jae
xchg
mov
mov
pop
les
sahf
xor
andl
js
mov
inc
and
clc
or
add
pop
mov
out
pop
aas
call
xor
jae
addl
push
xor
hlt
inc
push
dec
pop
inc
pop
orb
insl
enter
lahf
adc
mov
hlt
xchg
mov
jmp
cmc
cltd
fimull
mov
mov
jbe
pop
test
pop
pop
je
mov
xchg
inc
sub
es
mov
stos
mov
sub
dec
fwait
jbe
sub
pop
mov
cs
fimull
push
jno
or
cmc
enter
lahf
lret
enter
fnstsw
scas
mov
in
push
int
dec
add
jbe
adcl
es
sbb
sub
sti
sub
mov
scas
or
imul
je
rolb
ss
sbb
push
jae
flds
gs
imul
add
add
inc
or
inc
in
mov
jle
jge
pop
push
aaa
lcall
cmp
xchg
nop
mov
push
xor
inc
bound
aad
ret
lods
lcall
sbb
xor
sbb
dec
lods
es
mov
pushf
mov
lds
lods
mov
push
ret
and
fistpll
aad
and
adc
ja
ficomps
cmp
mov
and
push
addr16
in
mov
add
sub
dec
jnp
aas
ret
cmp
mov
bound
in
mov
mull
fidivrl
mov
arpl
pop
lods
negb
inc
jp
pop
ljmp
adc
sarl
scas
mov
scas
paddb
sbb
xchg
lock
fnstsw
xchg
bound
ret
inc
xorb
leave
mov
sahf
les
out
pop
data16
dec
popf
jp
ljmp
cmp
or
cmc
push
jmp
lret
aaa
push
jo
rcrb
es
xchg
jmp
xchg
pusha
je
fimull
mov
sub
add
int3
lock
inc
push
mov
mov
adc
pop
sbb
lret
sub
sub
fmuls
dec
mov
sub
mov
outsb
ret
and
push
iret
mov
aaa
sub
js
movsl
cmpsb
jne
xor
in
mov
jae
hlt
clc
xlat
lret
push
jg
test
or
adc
int3
lret
inc
lds
pop
adc
mov
push
mov
lahf
out
movsl
sbbb
insb
js
or
sub
addr16
lea
sub
sub
pusha
ret
les
loopne
add
cmpsl
xchg
dec
mov
adc
outsl
in
ljmp
push
mov
clc
pop
adc
cmp
mov
insb
dec
les
adc
int
mov
clc
xchg
xor
out
fnstcw
hlt
test
adc
push
add
test
mov
je
add
adc
and
xor
les
aam
in
hlt
add
mov
inc
mov
mov
add
adc
and
xor
les
aam
in
hlt
add
mov
inc
mov
lods
add
je
xchg
repz
and
hlt
ret
les
aam
adc
hlt
or
pop
cmpsl
push
push
or
ja
ret
add
add
and
mov
int3
sub
repz
pop
sub
adc
outsb
fstl
loopne
pop
dec
dec
inc
sbb
dec
out
fstpl
lea
jge
dec
outsb
pop
push
sub
imul
ret
mov
dec
jge
in
pop
push
adc
adc
add
cwtl
xchg
scas
mov
stc
fstpl
cmp
sbb
xchg
sbb
cmp
sub
inc
icebp
pcmpgtw
sti
enter
out
insb
inc
pop
out
dec
sub
rcll
xor
sbb
adc
insb
pop
js
push
out
jae
jle
add
sahf
pusha
xor
inc
adc
lea
mov
sbb
cmp
pop
sub
sub
lret
adc
and
lods
mov
gs
into
fstpt
xchg
sbbl
lea
add
sahf
in
add
in
mov
lods
dec
rolb
idivb
es
ss
pushl
out
lds
lods
mov
lea
lea
add
sub
xchg
popf
sub
pop
cmp
xchg
incb
lret
aas
cmp
push
add
pop
jnp
sub
stos
mov
test
jmp
cmp
sub
js
inc
outsl
push
push
arpl
out
stos
fwait
test
mov
lret
in
out
imulb
jge
push
sbb
push
cmp
fsubrp
into
std
dec
out
fstpl
lea
jge
dec
outsb
pop
push
sub
cs
dec
out
fstpl
lea
stos
out
xor
mov
push
pop
push
dec
push
popf
sub
xor
iret
sbb
outsl
cmp
mov
inc
xor
push
cmp
mov
adc
pop
mov
fwait
inc
mov
cmpsb
sub
push
sahf
mov
xor
mov
mov
shl
cld
cld
iret
sbb
push
out
pusha
icebp
shll
sbb
icebp
sub
push
les
popf
test
xchg
mov
leave
inc
mov
rcrl
sub
es
cmpsl
sbb
and
loopne
jl
stos
jmp
sbb
adc
or
ja
rorb
fmulp
leave
jmp
std
idivb
call
cmc
dec
add
dec
xchg
xor
add
push
repnz
pop
push
mov
cmpsl
xchg
or
sub
cmp
sbb
stos
imul
mov
push
pushf
ds
cmp
leave
pop
and
mov
jg
dec
adc
fisubrs
mov
js
fistpl
pop
pop
or
cwtl
sahf
jg
cmp
test
frstor
and
xchg
mov
xchg
pop
notl
into
clc
fisttpll
call
gs
mov
mov
xchg
stc
insl
xchg
mov
jb
mov
aaa
lea
ret
lea
lea
ss
in
dec
and
and
adcb
test
js
in
repnz
stos
dec
mov
in
xchg
js
rcr
mov
inc
mov
into
fisubs
jbe
sbbb
scas
mov
test
push
lods
push
rorb
jmp
inc
rcrl
adc
jp
das
test
scas
fldcw
dec
dec
outsl
gs
mov
lahf
push
jo
gs
bound
aam
sbb
in
lock
lcall
popf
lea
dec
sbb
xchg
inc
movsb
jo
ficompl
add
filds
xchg
sub
sbb
test
daa
jecxz
gs
mov
sti
imul
push
mov
je
mov
jo
clc
fldcw
into
and
push
rcll
mov
stos
dec
and
mov
iret
pop
cmpsl
ret
addr16
pop
sbb
add
setnp
or
out
bound
arpl
cmp
ljmp
jl
fnstenv
mov
xor
cli
outsb
add
mulb
lret
jmp
pushfw
mov
frstor
lahf
inc
lods
inc
insl
hlt
cltd
js
stos
adc
movsl
adc
xchg
or
pop
sbb
inc
arpl
jecxz
sbb
adc
and
mov
sarb
testl
push
pop
sbb
shll
loope
push
aam
clc
sbb
sti
adc
rolb
push
test
mov
or
sub
ret
test
out
sti
cmp
or
scas
stc
shlb
lahf
mov
scas
cmp
lret
xchg
bound
outsl
xor
aad
pusha
out
dec
cli
xor
scas
sub
dec
add
sbb
adc
and
int
or
movsl
data16
xchg
stc
rol
dec
lods
call
cmp
xor
mov
repz
out
mov
cli
push
add
or
push
push
or
add
xchg
movsb
repnz
iret
cmp
xchg
and
cmp
cs
lock
pop
aam
ljmp
jno
lods
lea
loop
cmp
xchg
jb
fcoms
mov
out
test
popf
pusha
sahf
xchg
cmp
call
cmp
jecxz
cmpsb
dec
push
jb
enter
insl
cmc
ljmp
imul
jo
jle
lods
into
sbb
daa
cltd
dec
lods
add
push
shl
popa
and
ljmp
xor
push
mov
les
repnz
stos
mov
cmpsb
sarb
bnd
repz
repz
mov
scas
mov
repnz
xor
lahf
sbb
data16
inc
int3
push
test
cmp
xchg
aad
ret
inc
lods
icebp
cmpsl
cmp
cmpsl
cli
xchg
dec
movsl
pop
sti
cmp
aam
movsl
mov
jl
inc
out
fwait
popa
cmp
loopne
movsl
pushf
cmp
lea
fstps
je
pop
dec
pop
inc
cmc
push
into
sbb
pop
pop
dec
incl
mov
ret
sarb
jl
sub
add
pop
movsl
xor
mov
pop
xor
adc
mov
into
shrl
arpl
out
xor
popf
fucompp
addr16
fwait
cli
js
dec
daa
int3
jge
xor
xor
xchg
pop
xorb
cs
int
rolb
push
inc
add
dec
fldenv
xchg
loopne
and
cwtl
test
jno
add
pop
adc
into
jge
arpl
lcall
lock
jno
mov
mov
and
ret
mov
jbe
aaa
push
pop
mov
xchg
loop
repz
adc
sbb
sti
js
xchg
mov
or
pop
pop
test
mov
sahf
stos
aas
mov
and
add
out
std
jmp
mov
fisttps
sub
lret
cli
je
stc
jne
sbb
push
xchg
xor
out
imul
mov
test
dec
lret
push
movsb
adc
mov
sbb
mov
outsb
dec
scas
incb
call
js
mov
das
jns
mov
mov
addr16
jnp
sub
nop
out
push
sbb
lock
inc
lods
pop
and
push
push
mov
xchg
rorl
dec
xorb
mov
test
psrad
cld
mov
push
popf
scas
lcall
cmpsb
mov
dec
xchg
test
xor
mov
fwait
out
test
pop
lea
push
sub
int3
and
scas
pop
bound
xchg
mov
or
inc
mov
jle
xor
pop
dec
jo
sbb
inc
fldcw
in
inc
pop
jp
dec
int
inc
push
bound
ja
push
mov
sbb
jp
or
or
repz
mov
je
xchg
lock
jle
test
mov
insb
movsl
xchg
fldl
cmp
dec
clc
jae
xor
mov
cwtl
xor
movsl
ret
pop
mov
sub
jl
mov
pusha
xchg
jle
mov
jns
aad
shr
push
or
xchg
movb
or
lret
xor
mov
jnp
sbb
inc
scas
in
cwtl
pop
jbe
jmp
jecxz
dec
mov
push
fldenv
or
adc
adc
mov
sub
sub
std
popf
add
mov
cmp
xor
and
cmpsb
add
cwtl
lock
arpl
test
mov
add
add
es
mov
inc
icebp
cmpsb
push
cld
rorb
mov
das
pop
out
jo
rcll
dec
mov
mov
les
bound
and
imul
mov
pop
ficompl
push
jp
insl
popa
popf
pop
sahf
in
jp
xor
jo
mov
rclb
mov
lock
scas
sbb
dec
into
test
add
into
jge
sub
mov
mov
stos
sbb
mov
test
out
cmpsb
cs
hlt
sbb
sbb
mov
cmp
xlat
int3
xchg
sarb
and
push
sub
cmp
mov
popa
jge
mov
js
ja
ss
push
stos
cmpsl
fadds
push
push
cwtl
mov
negl
sbb
or
mov
rorl
xor
xchg
in
cmc
sahf
cmpsl
pop
adc
dec
rcrb
mov
push
jb
xlat
sub
imul
add
test
iret
xchg
pushf
arpl
inc
neg
leave
pop
jge
sahf
adc
inc
js
in
mov
cmpsb
loop
out
out
rcr
scas
mov
mov
xchg
in
sub
or
adcl
jo
sub
cs
or
outsl
inc
icebp
adc
insl
xor
cltd
mov
xchg
cmp
dec
push
fsubrl
jae
sbb
jp
mov
jbe
out
inc
adc
iret
pop
jge
xchg
sub
sti
mov
xor
ret
scas
or
ret
add
dec
mov
lods
loope
pop
movsl
mov
mov
dec
aad
stos
aas
push
lahf
arpl
mov
mov
pop
pop
sub
sub
mov
and
jae
lret
jne
rcll
or
jp
outsb
stc
xor
aam
or
aad
das
and
and
dec
jae
sub
sahf
ljmp
insb
fwait
push
pop
jno
int3
cwtl
test
xchg
test
dec
push
add
je
push
gs
or
data16
mov
cmp
pop
sbb
fldenv
lcall
mov
mov
adc
dec
dec
adc
adc
dec
repnz
fwait
in
scas
pop
outsb
mov
iret
test
push
ja
xlat
sbb
shrl
sahf
push
pop
jp
shlb
jl
in
inc
lods
jecxz
adc
xchg
xchg
push
ljmp
cmp
xchg
shll
sbb
pushf
cmp
shlb
jp
cli
into
xchg
jo
xorb
jmp
dec
pop
pop
adc
add
cwtl
adc
xor
pop
adc
pop
mov
push
sti
pop
fsubr
push
imul
xor
or
push
movsl
fbstp
mov
fsts
mov
scas
cmp
lret
jl
pop
ljmp
cmp
mov
cli
cmc
dec
repnz
push
out
cmp
call
pushf
lea
mov
jecxz
cmp
sarb
mov
fs
or
test
in
test
mov
jb
scas
sbb
addl
mov
mov
sbb
out
jg
int
in
xchg
inc
dec
sbb
add
jl
mov
push
pop
jp
sub
ds
and
mov
xchg
test
cmp
xchg
rcll
fldl
dec
out
xlat
lds
lds
sub
push
fs
inc
es
adcb
inc
lods
xor
xor
icebp
out
outsb
and
push
xchg
adc
dec
jecxz
adc
call
rorb
dec
cmp
push
out
push
push
pop
and
je
mov
cmpsb
pop
xor
and
pop
and
push
call
mov
jno
xor
in
sbb
cmc
xchg
push
inc
mov
jle
adc
lcall
outsl
insb
mov
cmpsl
loopne
push
mov
or
or
xor
enter
jg
imul
pop
xchg
mov
sbb
sub
inc
sbb
cmp
pop
sar
js
push
repz
dec
fwait
add
shll
lret
orl
sti
fistpll
jle
ret
js
xchg
mov
sbb
cmpsb
xor
lret
and
cmp
cmp
insb
iret
cld
mov
xchg
leave
push
mov
pop
lcall
mov
icebp
xor
das
test
and
pop
arpl
into
cmc
daa
nop
sahf
and
mov
popa
xchg
repz
adc
pop
stc
jae
add
dec
or
sahf
sbb
adc
cmpl
testb
aad
sub
lret
mov
cmpsb
and
sub
cmp
jnp
fadds
ret
lods
xchg
fisubrs
insb
lds
dec
lods
xchg
stos
in
cmp
sub
xor
mov
mov
mov
jg
jne
subb
arpl
mov
jae
jne
cs
cld
ss
fcmovnu
mov
sub
xchg
cmp
or
test
divb
pop
inc
pop
dec
ja
sbb
out
pop
mov
mov
ret
adc
shrb
sub
in
cmc
pop
fsubl
xchg
mov
nop
jb,pt
xchg
xchg
addr16
repnz
cmpl
sub
loop
and
addl
mov
push
stc
xchg
shlb
jle
xor
push
stc
fimuls
xchg
xor
xchg
aaa
pop
scas
adc
scas
and
jp
loope
lahf
mov
adc
push
out
fistl
cmp
push
test
push
pusha
jg
in
cmpsl
inc
cmp
and
nop
xor
mov
inc
addr16
mov
xor
mov
aas
jle
mov
int
and
xchg
imul
out
sub
in
lods
pop
and
aas
sub
dec
insl
sub
outsb
insb
mov
and
jecxz
ljmp
pop
jae
mov
jmp
xor
aam
and
roll
neg
fs
pop
mov
mov
rclb
pop
jge
xor
pop
scas
or
add
or
cmp
add
rorl
shl
pusha
inc
arpl
cmc
xchg
xor
and
ja
xchg
push
mov
push
and
mov
arpl
icebp
mov
popf
pushf
xor
icebp
add
push
lock
adc
jl
xchg
js
mov
adc
fldl
xor
jno
lea
mov
addl
jns
adc
arpl
push
lds
shr
mov
mov
fisttpl
pop
sar
xchg
rorb
add
fcomps
sub
stos
mov
enter
mov
and
aaa
sub
dec
pop
mov
aas
cld
or
and
add
and
fisttps
popa
add
sub
lds
bound
cld
inc
inc
push
pop
xchg
cmp
cmp
pop
dec
jo
xchg
ljmp
and
test
stos
pop
jp
dec
lds
dec
je
inc
and
cmpsl
cld
popa
pop
movsb
int
xor
loop
sub
push
adc
out
mov
jae
dec
ficoms
ror
mov
ret
daa
dec
enter
xchg
out
fwait
arpl
inc
pop
scas
or
mov
gs
das
fwait
xor
sub
lock
repnz
xchg
call
test
mov
cmp
xchg
xor
loopnew
lahf
jns
xor
cmp
fisttpll
sub
xchg
pop
stos
mov
jge
inc
jnp
sbb
leave
sti
xchg
xor
jnp
pop
js
scas
ss
or
push
test
xor
adc
dec
sub
out
gs
xorl
bound
mov
push
mov
cmc
mov
xchg
leave
adc
xlat
stc
stc
push
mov
xchg
mov
xsha1
cmpsb
or
icebp
aas
data16
sub
es
mov
adc
sbb
sbb
stos
mov
or
jle
mov
adc
and
push
mov
inc
std
xor
pop
mov
fldl
call
pop
pop
push
pop
pop
jae
pop
and
cmpsb
mov
fsubrs
outsl
ret
js
xchg
ret
popf
call
mov
and
lahf
or
xchg
test
fnsave
cmc
aas
jecxz
call
mov
xchg
ret
jmp
mov
xor
lahf
rcll
lret
and
mov
push
data16
inc
cltd
call
mov
dec
lods
sbb
fs
out
mov
jle
push
jnp
push
outsb
cmp
xchg
jns
xchg
rorl
out
stc
xlat
movsb
mov
test
pop
scas
mov
test
data16
adc
pop
call
cmp
data16
lcall
push
or
xchg
sbb
push
scas
add
mov
scas
push
out
cmpsb
or
mov
shr
push
push
out
gs
mov
test
and
adc
inc
roll
lds
pop
push
rcl
cmpb
jno
mov
mov
out
push
shl
pop
negl
mov
movsb
mov
jo
mov
cmovle
jl
lods
ss
push
xor
push
ljmp
js
test
cmc
lock
in
inc
arpl
mov
push
shrl
cmpsl
clc
push
pop
adcb
imul
mov
pushf
aad
pop
xchg
fnsave
leave
jo
push
pop
mov
les
arpl
das
xchg
jnp
subb
sar
hlt
repz
jle
inc
outsb
pushf
add
test
in
in
mov
sub
pusha
push
pop
add
adc
pop
outsl
jo
jmp
dec
mov
icebp
cs
pop
into
shl
fistpl
mov
test
int3
jo
data16
mov
push
jmp
cmp
lcall
add
mov
fstl
adc
fwait
xchg
mov
mov
sbb
push
std
inc
movsl
mov
jnp
push
test
sahf
mov
into
jmp
in
sets
sub
dec
cwtl
or
jge
and
icebp
fldt
jns
lock
dec
and
outsb
xor
or
movsb
push
insb
mov
lcall
cwtl
pop
mov
mov
cmp
lock
inc
push
fldz
and
ret
jns
jne
add
and
jl
dec
mov
popf
mov
mov
adcb
sbb
push
notl
or
nop
sbb
xchg
jl
inc
pop
adc
add
xor
stc
int3
imul
dec
jl
inc
call
adc
sbb
std
pop
add
push
shrb
adc
stos
push
nop
fidivs
popa
int
jcxz
loop
mov
push
ss
pop
pop
fstl
leave
shr
cmp
sub
cmovg
push
dec
pop
sbb
lds
push
fstpl
clc
stos
rcrb
xor
or
sarl
jl
mov
lods
push
ret
push
mov
inc
test
push
and
sbb
pop
in
addb
pop
outsl
ds
outsl
xor
xchg
cld
adc
push
add
js
ficompl
arpl
and
ret
lods
loop
scas
insl
nop
jnp
inc
repnz
ja
sub
dec
sbb
xchg
mov
push
sub
ror
mov
add
test
out
movsl
imul
mov
lock
sbb
rcl
popf
jns
imull
xor
dec
pop
cltd
push
out
dec
jg
out
sub
stos
lret
dec
loopne
lret
movsb
or
int
cwtl
mov
adc
sar
and
xchg
cmp
mulb
or
pusha
xchg
and
fs
push
insb
dec
pop
push
adc
fnsave
or
jle
loop
pop
scas
mov
dec
rorb
fistpll
in
in
dec
xor
rol
fimuls
ljmp
mov
stos
mov
pop
mov
in
inc
jecxz
cmc
je
loope
inc
in
cs
in
push
xchg
and
sbb
out
ss
sub
sub
imul
loope
pop
pop
or
loopnew
jl
push
sti
push
iret
lret
jle
in
out
sahf
js
and
enter
mov
pop
and
faddl
jmpw
mov
mov
imul
push
push
mov
stos
stc
jns
sub
rcrl
xchg
stos
aam
ret
ljmp
xor
and
out
sub
fmull
fwait
and
mov
aam
in
push
dec
imul
rcrl
dec
inc
mulb
scas
or
mov
sub
push
adc
lods
cmp
daa
incb
add
jle
gs
or
movl
imulb
mov
xchg
sbb
daa
lods
pusha
mov
ljmp
addr16
sti
mov
cli
mov
mov
out
cmpsb
fxch
xchg
js
cmpsl
loop
and
mov
pop
daa
popf
pop
fstpt
mov
clc
ret
mov
repz
stos
push
gs
push
pop
xor
shl
mov
data16
push
cltd
lods
adc
sub
jecxz
cwtl
mov
fcomps
cmp
pop
xor
xor
jb
popa
seta
push
popa
xchg
pushf
pop
lods
shl
ljmp
jge
push
dec
cmp
je
push
and
jmp
loop
pop
pop
lret
and
mov
xchg
sub
mov
adc
jne
nop
dec
mov
mov
and
push
xchg
sub
cmp
pop
xchg
mov
mov
or
jno
sti
inc
cs
jmp
adc
ds
dec
lds
and
jo
clc
sbb
cmp
mov
inc
test
mov
js
in
xchg
pop
pop
mov
mov
rorb
xchg
int
or
inc
xor
in
lea
jo
adc
xor
dec
in
hlt
ficompl
stos
jnp
mov
push
dec
pop
addr16
jo
sub
lods
aam
mov
in
pop
or
cmpl
xchg
sbb
lods
jnp
jecxz
lret
mov
in
pop
fcom
addr16
jae
push
and
rclb
fwait
jl
xchg
and
incl
sti
stos
push
pop
adc
sub
push
push
fsubrp
xchg
jmp
dec
sbb
aad
data16
stos
in
popa
movsb
mov
movsl
jge
cltd
sub
aad
dec
sub
rcll
mov
inc
nop
sub
xchg
aam
mov
mov
in
es
jmp
aam
int
push
xchg
pop
rcll
sti
push
push
in
sub
and
push
sub
cs
dec
out
fstpl
lea
jge
dec
outsb
pop
push
sub
cs
dec
out
fstpl
lea
xor
pop
sub
das
sbb
test
xchg
mov
inc
insl
bound
dec
inc
pop
push
sub
scas
sbb
push
int
stos
jmp
jb
bound
or
cmp
sub
inc
int3
aas
fistpl
xchg
fldenv
mov
and
mov
add
adc
in
hlt
or
sub
pop
movsb
dec
mov
test
mov
inc
outsb
push
fsubl
adc
in
hlt
and
xor
inc
movsb
push
mov
test
pushf
int3
xchg
fcoms
sbbl
in
stos
jo
inc
test
push
dec
pop
xchg
nop
addr16
je
jne
inc
shrl
or
sbb
xorl
mov
mov
jae
inc
inc
mov
fcoms
push
popa
inc
xchg
mov
out
mov
outsb
les
cltd
jae
in
test
and
sub
fmull
cmpsl
aam
movsl
pop
mov
or
mov
lock
dec
lahf
lret
mov
add
or
pop
sub
jl
xchg
cwtl
jae
test
xor
enter
cltd
cld
jb
or
mov
cmp
jae
inc
push
lods
push
sbb
fdiv
sbb
in
adc
cmp
cmp
dec
movsb
push
mov
test
test
movsb
inc
mov
les
xor
add
jge
mov
pop
lods
dec
mov
jle
add
call
sub
adc
push
mov
in
negb
cmpsb
sub
and
adc
sub
and
mov
inc
jne
cmpsl
pop
lods
sub
and
dec
mov
test
mov
lods
push
fsubl
xor
add
adc
in
hlt
cmp
sub
pop
movsb
dec
mov
test
mov
lods
push
fsubl
xor
add
adc
in
mov
jae
pusha
or
cli
xor
mov
ljmp
inc
fstpl
xor
jb
sbb
dec
dec
xchg
ss
mov
jo
rorl
jno
xor
mov
jl
dec
es
push
nop
in
inc
pop
jmp
cld
or
sbb
pop
leave
add
lret
and
pusha
pop
adc
cltd
mov
mov
add
mov
lcall
pop
popf
movsl
lods
in
rcr
sub
gs
adc
hlt
adc
js
sbb
mov
jle
sbb
push
popa
ret
mov
nop
xlat
mov
and
xor
das
rcrb
fs
idivb
fistps
inc
inc
jbe
inc
pop
pop
push
icebp
repz
out
sbb
dec
clc
inc
lods
xor
in
out
subb
mov
push
inc
in
xchg
stos
ljmp
jo
clc
shl
dec
dec
adc
pop
pop
jnp
xchg
push
aas
sahf
adc
add
popa
adc
popl
daa
mov
jns
movsb
sub
or
ret
push
loope
outsl
fsts
shlb
xchg
cmp
mov
arpl
inc
pop
and
jo
inc
sbb
test
or
xchg
pop
jb
inc
divl
push
ret
and
test
fsubs
sbb
jb,pn
arpl
xor
aaa
subps
je
mov
inc
cltd
xchg
das
ja
jb
shlb
pusha
and
mov
fwait
imul
movsb
dec
ds
stos
pop
negb
mov
push
jno
jecxz
cmp
adc
in
cmp
and
xlat
adc
or
sub
jmp
xchg
mov
out
sub
dec
push
push
hlt
jbe
pop
push
out
jmp
mov
push
cld
push
loop
fldt
ds
adc
jecxz
ds
sub
shlb
pop
aam
out
pop
push
insb
out
pop
pop
loope
hlt
and
out
jo
outsb
or
and
pusha
out
or
mov
adc
xchg
leave
dec
popa
popf
and
sarl
shrd
add
daa
or
dec
dec
stc
jae
cmp
dec
mov
mov
adc
mov
jnp
inc
dec
rcll
lret
xchg
outsb
jge
push
dec
ljmp
test
cmp
insl
scas
aam
nop
mov
sbb
dec
pop
mov
decb
mov
mov
sbb
orl
jns
pop
mov
mov
jmp
cmp
jge
sub
cld
adc
xchg
mov
enter
xchg
and
adc
pop
flds
mov
mov
in
popa
mov
sub
sar
xor
out
lret
and
dec
jnp
mov
mov
xchg
call
adc
mov
dec
or
push
pop
jl
cmp
mov
lcall
insb
cmp
jmp
test
push
fsubrl
xor
xacquire
ljmp
aad
subl
cltd
je
xchg
pop
push
pop
adc
inc
in
cmp
imul
sti
lods
lcall
adc
out
pop
jp
mov
ss
push
out
outsb
and
xchg
cmp
mov
jge
xchg
sub
xchg
jns
jne
lret
aam
data16
mov
int
stc
push
ret
insl
lock
pop
daa
mov
cmp
xchg
jle
negb
loop
xor
mov
loope
cs
hlt
xor
jmp
insl
and
xchg
ss
das
in
mov
adc
stos
jecxz
add
pushf
add
sub
add
arpl
cmp
iret
cs
pop
xor
pop
ds
xchg
inc
outsl
das
push
mov
mov
ret
add
ds
sub
mov
push
je
and
mov
inc
sub
push
inc
movsl
sbb
push
aaa
stos
icebp
xor
test
mov
sbb
dec
addr16
sarb
aad
and
pop
cwtl
push
xor
gs
inc
pop
cli
flds
adc
subl
out
mov
mov
ret
loop
imul
jne
cs
mov
push
in
int
sub
faddl
testb
fsubs
ds
adc
mov
out
nop
iret
outsl
lods
cwtl
lea
jle
and
or
mov
enter
dec
jae
push
mov
movsb
mov
stc
shlb
add
in
fadds
add
adc
sub
mov
stc
cmpsb
cld
aas
lret
rcrl
loop
cmc
pusha
mov
mov
inc
stos
jmp
dec
stc
pop
in
cmp
mov
lock
stos
xchg
call
sub
out
pop
stc
push
fwait
nop
notl
sbb
in
push
push
mov
hlt
pop
push
jb
jo
fnstsw
xchg
cs
insl
xchg
mov
pop
sub
out
inc
frstor
mov
cmp
push
imul
xchg
jnp
repz
pop
add
aas
into
subb
outsl
sub
and
repz
inc
cmp
xchg
shr
lahf
je
addb
sar
out
and
or
or
lret
fwait
jg
incb
gs
loopne
dec
lret
push
jb
icebp
cmc
jp
jne
jecxz
je
cmp
fbld
xor
xchg
inc
dec
mov
mov
rcrl
mov
loopne
and
xor
inc
lea
mov
push
push
xor
fucom
int3
popa
sub
sub
movsl
ret
insl
cmp
or
sbb
xor
or
add
xchg
shrb
xchg
sub
sub
cmc
jbe
or
das
stos
xchg
enter
fs
adc
rclb
dec
lds
pop
push
fwait
ljmp
mov
jecxz
and
pop
xchg
push
jmp
and
fs
pusha
cmpsl
mov
repnz
adc
jb
fst
ror
das
in
mov
movsbl
sub
js
mov
sbb
pop
mov
adc
and
xchg
pop
xor
nop
add
dec
fistpl
jno
ret
cmp
cmp
adc
lcall
lock
imull
push
loop
cli
lods
dec
pushf
fistl
lahf
fldenv
jae
xlat
mov
cmp
sub
mov
rcrl
dec
outsb
arpl
push
pop
in
subl
dec
push
insl
mov
mov
gs
push
pushf
pop
mov
mov
add
sbb
ljmp
shll
imul
daa
dec
out
out
fwait
push
inc
rorl
test
ret
sahf
jl
aas
test
cmpsb
sbbb
and
or
sahf
js
adc
ret
jl
cmp
out
push
sbb
pop
push
test
jbe
aam
call
std
iret
jne
pop
pop
mov
cmc
daa
cmp
in
lcall
imull
aas
or
sbb
pop
pushf
pop
or
dec
lret
mov
fcom
bound
inc
daa
mov
lret
sub
mov
cmp
mov
or
mov
push
testl
outsb
dec
test
lods
jae
dec
push
les
shlb
xlat
cmp
inc
cmovge
inc
test
dec
insb
pop
aad
push
xor
jo
push
mov
out
dec
nop
xor
xor
sarb
mov
stc
pop
int3
push
adc
or
push
mov
adc
lcall
js
lds
je,pt
push
mov
cmp
and
stos
shll
movsb
add
mov
lods
js
rcll
dec
test
scas
in
sti
mov
bound
and
lahf
mov
inc
mov
cmp
and
ss
add
dec
fwait
rcll
popf
dec
and
dec
stos
outsb
pop
cmp
or
mov
hlt
pop
stos
decl
out
ds
dec
mov
pop
add
dec
jle
push
in
push
or
cld
clc
rcl
imul
stos
adc
pop
adc
cmp
jg
mov
in
xchg
aad
xchg
add
sbb
out
add
pop
cmp
xor
ret
xchg
pop
cmpsb
dec
test
jmp
push
push
adc
pop
mov
and
mov
xchg
lea
andb
and
cltd
sarb
jge
test
out
add
xor
jno
pop
and
leave
cmp
mov
lahf
stos
jo
mov
stos
pop
fistpl
mov
mov
push
popa
adcl
dec
xchg
pop
cmpsl
mov
lret
fcoms
mov
pop
pop
cmp
test
pushf
ljmp
add
xchg
loope
sub
outsl
orl
push
or
jo
jb
mov
dec
pop
pop
mov
bound
xor
mov
neg
inc
inc
ret
xchg
sbb
es
xlat
jne
dec
mov
iret
filds
out
xor
dec
lret
loopne
pop
jg
outsb
lods
sub
cmc
sub
mov
cmp
mov
cmp
enter
cmpsb
popf
push
pushf
push
inc
and
adc
mov
mov
push
lods
xor
mov
cltd
sub
dec
xor
add
jmp
fadds
pusha
push
sub
adcb
adc
xor
xchg
ss
cmc
aam
daa
add
jl
adc
dec
rcr
add
test
cltd
cmp
adc
ljmp
mov
dec
fcmove
arpl
jno
imul
and
mov
or
adc
mov
mov
call
sub
movsl
jo
movsl
ljmp
lret
sbb
xor
ficoml
mov
out
shll
sarb
das
dec
adc
mov
cmp
xchg
add
in
nop
push
mov
xchg
int3
cmp
insl
lock
dec
addb
dec
inc
movsb
lods
in
les
loop
aam
adc
xor
inc
lods
aas
sbb
jmp
jo
icebp
mov
sub
or
mov
push
lret
sbb
cmp
ljmp
inc
adc
sbb
xor
movsl
arpl
pop
popf
loop
stos
sub
lds
jmp
jge
xchg
jne
insl
or
push
cmp
xor
mov
sub
daa
adc
shlb
incb
loopne
sbb
shlb
xor
std
xor
sub
dec
push
pop
mov
xor
filds
pop
or
test
addb
ljmp
jg
push
and
jbe
sub
xchg
and
popf
and
xchg
push
push
insl
outsb
addl
sbb
cwtl
jno
xor
out
imull
cmp
fstps
or
in
nop
mov
pop
pop
fstpt
jb
dec
jb
add
push
push
stos
push
mov
lret
jnp
dec
mov
mov
loope
arpl
jnp
sub
or
or
dec
inc
xchg
fstl
add
jmp
lahf
sub
pop
cmp
sbb
stos
add
popa
jg
cltd
je
sub
cmp
add
mov
hlt
pop
dec
push
sub
cmp
cmp
bound
mov
xor
add
sbb
aas
mov
mov
insl
adc
push
stos
cltd
mov
sarl
mov
push
xor
jo
push
sbb
pop
pushf
sub
lods
pop
popf
enter
fidivrs
mov
xchg
fcompl
imul
add
mov
jne
mov
dec
pop
mov
lds
dec
mov
mov
pop
bound
into
sub
inc
cwtl
inc
rcrl
add
pop
pusha
mov
push
mov
stos
xor
dec
or
dec
cltd
lahf
add
repz
add
lods
adc
pop
push
leave
dec
repz
ja
mov
test
fs
outsb
arpl
popf
mov
popa
mov
sub
dec
jo
es
dec
xor
cvtps2pd
lret
jl
scas
sub
outsl
mov
push
push
stos
lock
mov
push
dec
sar
push
js
mov
push
adc
outsl
outsl
lods
arpl
rcrl
fdivs
sti
cs
lds
xor
iret
addr16
aaa
gs
cmpsl
arpl
add
std
mov
xor
inc
add
fadds
mov
adc
fnstcw
shlb
sub
xchg
pop
insb
adc
pop
into
lcall
dec
jb
and
idiv
js
add
add
stos
xor
and
xchg
mov
shlb
or
stos
sahf
pusha
scas
dec
cmp
jge
adc
add
ja
jae
test
inc
inc
xchg
gs
lods
popf
adc
cmpsl
popf
add
xor
push
popf
rcll
loope
and
and
jmp
push
in
or
sbb
aas
lret
mov
pop
push
dec
mov
or
add
icebp
ret
adc
push
ret
outsl
sbbl
mov
or
xor
popa
popa
pop
sub
inc
lret
inc
test
sub
and
fists
xchg
push
movsb
hlt
scas
mov
mov
pushf
jae
jns
jbe
xchg
and
in
stc
cmp
data16
dec
fwait
out
cwtl
movsb
test
iret
rclb
loopne
and
or
inc
mov
lahf
jp
sub
xchg
push
push
jne
leave
mov
lret
adc
test
sbb
push
adc
jno
adc
sbb
sbb
jl
repnz
push
jns
adc
cs
scas
rorl
dec
mov
aas
or
in
xor
push
cmp
fiaddl
aaa
lds
fcoms
inc
std
jg
push
out
adc
dec
fwait
push
xor
xor
jo
jb
xor
jae
lahf
call
je
adcb
mov
jb
int
idivb
or
and
cli
jecxz
cmpsb
in
pop
jge
fisubs
insb
aad
xchg
test
cld
je
xchg
pop
push
or
scas
out
fisttpll
xlat
stos
mov
fnstsw
pop
xchg
xor
sti
xchg
fisttpll
in
mov
sti
sub
lahf
jno
mov
xchg
mov
xor
outsb
push
cli
subb
inc
ss
out
xchg
sbb
ret
lret
push
xor
insb
pop
xor
outsl
aam
and
and
inc
xchg
inc
jmp
clc
pop
cltd
movsl
hlt
mov
sahf
fwait
lcall
xchg
push
fimull
xchg
stos
push
outsb
out
add
inc
xchg
inc
bnd
sbb
push
push
xlat
test
ljmp
cmpl
push
dec
fimull
fadd
push
inc
lcall
out
mov
popf
mov
jbe
sub
or
int
dec
cmpsb
dec
push
mov
push
push
gs
in
mov
sarl
ss
sbb
rcrb
xchg
cmp
mov
mov
loopne
out
or
jmp
dec
sub
sub
add
into
rolb
imul
push
cmc
lea
push
lret
lods
push
loope
push
pusha
lds
pop
push
scas
enter
pushf
ret
cmc
and
sahf
lahf
dec
inc
pop
pop
add
rcrb
adc
xor
push
push
incl
inc
or
sub
cs
repnz
jnp
data16
push
gs
lret
sbb
mull
xchg
adc
mov
push
fimuls
rcrl
xor
sub
shrl
aad
push
outsb
lods
mov
arpl
xchg
lea
jne
xchg
cmp
std
arpl
lea
mov
test
inc
sbb
jle
lcall
jo
pop
or
xchg
inc
lds
aam
pop
pop
mov
loopne
fdivrl
daa
mov
jg
ret
subb
push
data16
fnstenv
inc
bound
jmp
fstl
out
mov
mov
xor
sti
and
mov
int
adc
sub
adc
cmp
xor
xor
push
test
cmp
scas
test
fldl
outsl
mov
mov
rcrl
out
test
inc
mov
jmp
popa
sbb
xor
inc
xchg
push
jbe
call
fcoms
in
adc
sbb
sti
cmp
inc
or
xchg
sub
sub
mov
repz
jle
arpl
cmp
push
sub
dec
and
push
adc
rclb
jo
enter
je
enter
clc
pop
bound
std
sub
adc
test
sbb
cmp
add
clc
out
daa
pop
mov
mov
push
jg
pop
fs
cmp
andb
mov
and
add
push
fisttps
fbstp
fnstcw
pop
or
cmpl
arpl
loope
decb
cmpsl
clc
cmp
xchg
inc
add
xchg
fxch
dec
xchg
sbb
and
xchg
adc
popf
dec
add
and
scas
dec
cmc
or
repz
pop
push
push
scas
frstor
mov
and
add
cmc
xchg
dec
cmp
clc
movups
sbb
dec
mov
adc
fildl
loopne
sbb
mov
cmovp
sti
pop
mov
inc
in
sti
push
mov
dec
xchg
mov
jnp
xor
dec
lahf
mov
add
sbb
in
imul
cmp
fmul
aad
shlb
push
dec
jmp
mov
mov
dec
testl
in
push
jo
inc
fadds
popa
es
sub
mov
cmp
fwait
int3
mov
sub
arpl
imul
and
sbb
adc
lret
jae
or
aam
or
pop
xchg
popf
push
push
xlat
ss
enter
and
frstor
or
jle
daa
out
jb
pop
or
icebp
xchg
aad
scas
cmp
cmpsb
dec
fisubl
xorl
jg
shl
jns
outsb
sub
lcall
inc
int
out
inc
hlt
cli
std
in
mov
sub
xor
das
dec
pop
and
add
aad
nop
push
imul
cmp
outsl
fidivrs
cmp
lods
ja
arpl
xlat
loop
pop
adc
in
js
imul
pop
jnp
mov
push
dec
enter
jns
add
push
nop
push
in
pop
mov
push
inc
or
fnsave
mulb
stos
pusha
fwait
ljmp
test
inc
sub
xor
jl
scas
xor
test
nop
enter
mov
cltd
neg
push
jnp
int
stos
scas
push
pop
fcmovbe
dec
add
inc
int
or
testb
adc
push
xchg
arpl
mov
and
cs
test
fcmovnbe
cmc
imul
cld
xchg
jno
push
clc
into
popa
lret
inc
stc
outsl
mul
sub
test
xor
rcrl
hlt
fbld
nop
aaa
aad
call
jp
xlat
sub
mov
fistps
insb
mov
or
fucomi
mov
push
adc
mov
adc
test
adc
cvtps2pi
fistps
dec
and
icebp
sbb
ljmp
add
mov
decl
jmp
loope
sub
mov
sbb
dec
fcompl
add
jo
cld
add
or
loope
sti
or
dec
push
in
ret
inc
sub
ds
jo
adc
insl
repz
sbb
int3
ds
pop
insl
bound
test
sub
fisttpl
push
jns
push
or
adc
subl
sbb
sbb
stos
ret
adc
sti
ret
mov
dec
dec
jl
cmc
xchg
nop
loope
das
test
xchg
jns
mov
fstpl
cmp
push
adc
lahf
nop
andb
push
daa
dec
scas
cmpsb
xor
mov
mov
cli
jmp
and
inc
scas
adc
xor
test
bound
clc
xchg
aas
fucom
mov
fdivl
leave
je
fstps
mov
pushf
mov
in
xorl
dec
mov
mov
push
add
shl
lahf
adc
pop
insb
idivb
mov
roll
mov
mov
adc
cmpsb
jp
dec
jbe
push
in
push
je
mov
cmp
ret
xor
jne
outsb
sbb
out
rcrl
mov
lods
lret
sub
stc
fisttps
adc
xor
cmp
mov
and
or
mov
nop
add
outsl
int3
sbb
ljmp
ja
scas
or
je
mov
jmp
fs
mov
inc
pop
jo
or
adc
imul
sbb
jno
add
push
push
add
gs
cli
sub
and
push
or
fdivrp
xchg
mov
jge
sub
push
cmpsb
jnp
mov
mov
gs
icebp
adc
nop
adc
adc
mov
inc
mov
add
mov
in
sbbb
pusha
sub
adc
adc
jl
add
and
or
inc
dec
cmp
push
jp
lock
jge
inc
lods
ds
hlt
sbb
movsb
dec
mov
test
mov
lods
push
fsubl
xor
add
adc
in
hlt
cmp
sub
pop
movsb
dec
mov
test
mov
lods
push
fsubl
xor
add
adc
in
je
inc
sub
pop
movsb
dec
xor
test
in
je
inc
lods
push
fsubl
xor
add
adc
in
hlt
or
sub
pop
movsb
dec
mov
test
xchg
arpl
push
inc
lods
and
sti
adc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsl
ss
dec
jmp
pop
idivl
adc
iret
jns
jnp
or
cmp
jg
dec
jmp
aas
cltd
pop
pop
mov
iret
dec
fistpll
push
leave
outsl
sarb
dec
icebp
pop
loopne
nop
aas
orl
stos
fsubl
sbb
jns
dec
int3
ja
jg
cmp
leave
push
mov
popf
ss
pushw
aaa
xchg
js
ret
lds
das
and
xor
addr16
bound
popa
mov
addr16
xor
jb
xor
jns
mov
je
ss
popf
jp
in
cltd
push
push
int3
ljmp
sbb
or
lahf
cmp
pop
rcrb
pop
inc
pop
sbb
mov
xchg
pop
mov
push
cmp
cli
cmp
push
mov
gs
xchg
mov
inc
sub
jns
popa
aas
xchg
jo
lahf
push
movb
add
mov
stos
xchg
sysenter
test
mov
imul
popf
sub
pop
jecxz
mov
cltd
cmpxchg
mov
iret
jo
pusha
scas
adc
pop
or
clc
dec
fists
pusha
lds
and
decb
sub
push
sbb
push
cld
dec
cli
je
dec
int
aad
xor
cmp
fidivl
inc
cmc
pop
or
cmp
test
lcall
imul
sbb
leave
jg
dec
jmp
aas
cltd
pop
pop
mov
iret
imul
sbb
leave
push
pop
ror
and
pushl
push
pop
fildll
lock
jne
jae
xor
xchg
or
add
xchg
fisubrl
dec
cmpsb
xchg
cmp
xchg
inc
gs
xchg
insb
fstl
vmovlps
push
enter
pop
inc
mov
mov
adc
jge
add
xchg
push
lods
sub
mov
or
push
insb
test
loop
sub
and
lods
lods
mov
or
fisttpll
jbe
dec
xchg
lock
cli
jns
xchg
mov
jle
sub
movsb
stc
fsubrp
pusha
fdivr
inc
cli
das
aam
pop
mov
lahf
outsl
std
add
sbb
data16
xchg
scas
insb
rcrl
sub
mov
lea
in
dec
xrelease
std
fsubr
inc
dec
stos
aam
nop
jle
test
add
cmpsb
cmp
mov
inc
jg
sti
rcl
popf
add
aam
mov
and
test
sarl
sub
lret
cmp
ja
test
pop
cli
lock
aaa
movaps
cmp
cmp
cmc
push
sbb
sub
daa
jle
daa
movsb
testl
sbb
pop
xchg
in
inc
xor
scas
int
xchg
jmp
insb
xchg
xchg
pop
sar
xchg
out
jle
xchg
and
push
mov
scas
push
movsl
clc
gs
int
fs
mov
pop
sub
pop
sub
and
mov
out
cmp
cmp
mov
sub
lcall
out
mov
dec
shll
enter
inc
stos
adc
pusha
adc
rcr
adc
ja
adc
mov
imul
sub
sub
pop
inc
fs
orl
lods
cmp
frstor
test
sub
lock
xchg
jb
mov
fists
mov
sub
adc
jae
add
xchg
add
xchg
test
jmp
ja
push
repnz
lahf
repz
xchg
jae
inc
sbb
xchg
icebp
add
clc
xchg
loopne
das
std
je
test
xchg
loopnew
inc
pop
mov
add
mov
mov
push
xchg
adc
pop
jne
jnp
out
cmp
mov
pop
pop
sub
mov
loope
popa
mov
cli
pusha
xor
sbbb
mov
push
scas
sbb
inc
jmp
pop
sbb
testb
inc
out
adc
cmpb
into
fwait
pop
out
lret
sbb
imul
push
fcomp
xor
rcll
or
push
mov
pop
stc
pusha
xor
mov
frstor
lds
daa
sahf
push
push
out
adc
popf
push
mov
out
loope
jp
jp
xor
int
lea
les
sti
loope
cmpsl
arpl
in
jne
lcall
or
outsl
repnz
dec
arpl
icebp
in
fisttps
mov
decb
xchg
push
rcrb
clc
aas
add
mov
and
sbb
jg
or
push
icebp
mov
lea
jp
rcll
pop
outsb
das
pop
das
lret
adc
testb
mov
fcompl
mov
cs
bound
shrb
dec
inc
pop
sti
les
bound
mov
cmp
scas
dec
ret
xchg
int3
scas
mov
inc
imul
mov
repz
xor
pusha
dec
sbb
adc
mov
clc
orb
pusha
push
dec
call
inc
js
cltd
xchg
xor
push
sarl
cltd
mov
cmpsl
jecxz
dec
jl
fwait
push
lods
inc
dec
test
fistps
shl
sbb
jno
dec
jmp
das
adc
add
dec
pop
insb
shrl
nop
and
mov
shlb
push
push
sub
les
je
cld
or
dec
int
mov
pusha
sub
int
pop
push
push
scas
imul
mov
shll
mov
pop
inc
fwait
outsw
mov
xchg
mov
rol
rorb
cwtl
jmp
ds
mov
out
shll
mov
leave
imul
and
repz
shl
xor
dec
jecxz
mov
mov
lods
jo
xchg
sub
jb
in
mov
mov
or
inc
dec
xchg
out
mov
jbe
mov
mov
mov
add
stc
xchg
jne
incb
pop
and
adc
repz
push
push
adc
pop
imul
orb
rclb
xor
test
out
inc
xor
pop
iret
shl
js
imul
lods
ret
mov
jecxz
clc
fnstenv
sahf
test
sbb
cmpsb
pop
insl
je
enter
fimuls
dec
outsb
rcrl
ja
movsbl
sbb
test
lods
jmp
cmc
add
xchg
inc
ljmp
jne
cmpsb
pop
mov
sar
adc
sbbb
push
add
jl
subb
int3
sbb
aaa
mov
and
repnz
adc
inc
and
popf
cld
add
and
mov
pop
mov
rclb
ds
scas
rcl
mov
mov
mov
mov
aam
std
ljmp
ret
lahf
jo
jo
ret
cmpsb
xchg
inc
cltd
pop
neg
add
pop
pusha
ret
xor
outsl
lods
and
and
push
jl
xchg
cmpsl
sub
inc
pushf
sbb
xor
cs
dec
cmovnp
mov
xchg
jnp
push
mov
popa
mov
dec
inc
es
mov
sbb
push
inc
dec
aas
dec
pop
adc
xchg
jno
sbb
sub
xor
fimull
mov
ds
bnd
popf
pop
clc
mov
into
push
out
inc
inc
mov
bound
divb
lret
lret
daa
mov
inc
rcrl
scas
lds
pop
cltd
stos
xor
push
and
lahf
mov
pusha
adc
xor
mov
push
pop
inc
or
mov
cmp
es
lahf
or
jbe
mov
das
repz
xchg
push
xchg
adc
cmpsl
mov
mov
xchg
jge
jle
fldenv
loope
push
sbb
add
xor
test
jno
sbb
stos
lds
scas
stc
bswap
mov
dec
xor
repz
out
sub
adc
stc
fldt
cmpsl
jo
sti
cld
sarb
adc
sub
cmp
shl
mov
inc
testl
and
dec
into
adc
lret
jno
mov
int
xchg
pop
pop
out
je
stos
inc
push
fcoms
pop
cmpsl
in
jge
lock
push
ret
je
test
mov
shlb
inc
fwait
adc
sbb
cli
push
out
cmp
leave
sub
test
push
and
in
cmpsb
push
test
mov
xlat
lods
push
cmp
popf
outsl
lret
mov
dec
and
cmp
mov
pop
in
pushf
jo
repnz
or
jno
inc
sbb
fdivp
ds
jge
in
or
addr16
ret
pusha
mov
in
jge
pop
fcmovb
cmc
push
cmp
xchg
je
cltd
fs
jle
mov
pop
loopne
push
xchg
aaa
cmp
test
xchg
std
cltd
data16
out
mov
mov
mov
push
mov
lods
pop
mov
cmp
sbb
test
mov
mov
add
repnz
lea
mov
imul
pusha
mov
sahf
sbb
mov
add
in
fdivl
popf
cmp
sub
sbb
pusha
add
aad
jecxz
testl
mov
inc
in
inc
int3
cld
push
data16
cli
xor
push
mov
dec
ret
xchg
push
jg
mov
push
sbb
cwtl
fisubrs
pop
aam
cmp
ja
fisttpll
out
xchg
inc
call
lea
leave
adc
inc
mov
enter
mov
jno
iret
xchg
adc
js
lret
cltd
outsb
ret
mov
in
xor
jbe
or
rcrl
mov
das
lret
outsb
cmpsb
jbe
mov
push
pop
xor
lret
int
inc
and
mov
pop
in
mov
ss
fiaddl
dec
ror
test
dec
fildl
in
mov
out
out
cli
ss
imul
add
cs
sub
dec
adc
rorb
mov
add
push
pop
ljmp
sub
dec
mov
ljmp
pop
notl
outsl
les
fldt
pop
sub
pop
outsl
je
sahf
and
cmp
pop
daa
cmp
nop
cmp
pusha
jae
xchg
out
jno
outsb
xchg
scas
and
inc
cmc
ds
mull
pop
and
in
fiaddl
jge
xchg
mov
inc
jno
popf
dec
and
orb
cli
jecxz
pop
sub
mov
pop
push
nop
push
outsl
cmpsl
std
clc
fstl
aad
sti
icebp
in
xchg
push
jmp
sbbb
jae
sub
xchg
popa
clc
loopne
mov
sub
fsubl
lret
xchg
pop
or
xchg
inc
ret
mov
inc
cmp
or
adc
sub
mov
stc
sub
dec
add
in
int
cmpsb
movsl
outsb
xchg
push
out
xlat
mov
cwtl
xchg
sbb
arpl
mov
decl
daa
loopne
sbb
cmp
mov
aaa
mov
sbb
mov
pop
jecxz
or
push
xchg
mov
lds
inc
lret
and
cmpsl
push
leave
sub
mov
adc
jge
ds
mov
cltd
scas
jne
pop
aad
aam
pop
icebp
add
lret
fs
sahf
outsb
push
pop
shlb
sbb
jg
xchg
adc
sbb
aam
loopne
add
or
pop
call
sbb
adc
inc
sbb
pop
andl
dec
sbb
fwait
lds
jbe
pop
xorb
fbstp
mov
out
cmp
leave
mov
dec
or
sub
ja
or
mov
jecxz
out
js
sub
aas
add
outsl
push
jmp
je
cwtl
icebp
push
jno
inc
cmc
mov
mov
iret
mov
aaa
ja
cmp
daa
cld
lods
mov
xchg
push
je
sbb
push
addr16
xchg
push
mov
sar
loop
fst
xor
mov
push
icebp
lods
push
lahf
adc
in
daa
push
inc
sub
pop
dec
cli
or
ficoms
jmp
inc
cltd
mov
pop
ljmp
xor
push
lods
mov
add
cmp
jmp
ret
pop
fnstenv
add
lret
adc
mov
push
ss
jns
jmp
pop
dec
stc
xlat
push
dec
push
xchg
ret
adc
clc
repnz
adcl
ja
lock
shrb
stos
mov
fildll
pop
inc
add
xor
pop
and
mov
ficompl
xchg
hlt
jbe
mov
pop
jmp
jg
jo
xchg
fisubrl
popa
jns
jo
mov
mov
jno
xchg
sahf
mov
mov
xchg
and
and
aam
sub
inc
lsl
inc
and
cmpsl
inc
xchg
in
dec
sti
stos
std
in
sub
dec
dec
mov
jecxz
sub
sub
sub
cmpsl
mov
out
mov
jl
xor
scas
cmc
enter
pop
ds
fistpll
out
ret
mov
movsb
mov
jecxz
mov
mov
fs
xchg
cli
or
mov
push
push
inc
pop
call
mov
bound
stos
call
into
sbb
lock
sbb
idivl
push
and
dec
enter
mov
jae
mov
mov
mov
mov
bound
mov
add
roll
loop
adc
xor
aas
cmpsl
popa
mov
mov
pop
cmp
adc
xchg
mov
xor
pop
and
insb
xor
and
and
dec
test
insl
sar
dec
mov
stos
mov
mov
rclb
call
das
je
cmp
xchg
adc
push
movsl
pusha
out
xor
xor
enter
pop
imul
or
mov
sbb
aaa
mov
idivb
aas
pop
mov
gs
push
and
int3
cmpsl
arpl
movsb
add
mov
jmp
icebp
div
mov
clc
sub
cmpsb
cmpsb
iret
pop
mov
adc
ljmp
orl
mov
sub
imul
jge
in
xchg
in
mov
add
xor
pop
fnstsw
stos
lahf
mul
xor
xchg
out
hlt
insl
loope
out
test
pop
or
arpl
and
jl
jns
jnp
sbb
pop
outsb
icebp
pop
or
xchg
pop
lret
in
insb
mov
fwait
push
cs
cltd
jmp
xchg
xchg
lods
repz
popa
movsb
jmp
lods
idivb
inc
xor
xchg
sub
xor
scas
icebp
imul
repnz
in
outsl
jae
outsb
in
xchg
int3
pushf
cmpsl
jmp
fstp
jmp
test
inc
cwtl
or
fsubl
movsl
std
mov
cmpb
mov
es
or
xchg
cmp
je
cmp
cmc
inc
mov
xchg
adc
adc
jno
pop
or
out
ret
push
and
in
jno
popf
xchg
pop
xchg
leave
jb
pop
imul
add
ss
or
ljmp
dec
ret
movsl
mov
xlat
and
pop
xchg
push
pop
je
mov
push
pop
frstor
lret
mov
divl
pop
fidivrs
rcl
ljmp
lret
es
inc
push
cld
lahf
rcl
in
mov
add
ret
cmp
add
repnz
mov
pop
dec
fmul
ret
mov
fwait
dec
in
rorl
mov
and
jns
loop
push
xor
lret
mov
push
cmp
nop
xor
int3
mov
sbb
jae
push
push
jns
fnstcw
push
adc
xchg
sbb
subl
jge
mov
out
add
std
pop
repnz
add
outsl
xor
sbb
dec
test
in
jge
adc
inc
or
mov
scas
push
sbb
sarb
sbb
fs
je
sbb
mov
dec
cmpsl
jl
jne
in
pop
jge
movsl
and
add
fistpl
mov
call
sbb
dec
scas
mov
je
pop
leave
fidivrl
add
repnz
ss
inc
push
mov
daa
xchg
into
push
inc
ja
inc
push
and
jg
popa
scas
cmp
test
inc
add
add
loopne
mov
les
or
out
call
dec
rorb
jnp
adc
xor
or
add
mov
dec
icebp
xor
jmp
fidivl
push
loopne
mov
repnz
fsts
outsb
jge
xor
inc
jle
inc
adc
sbb
sahf
nop
cmpsb
inc
ja
dec
jp
jp
sti
mov
jecxz
xor
icebp
inc
adc
xchg
xchg
sar
cwtl
fmul
js
jns
and
mov
in
sub
inc
bswap
inc
es
mov
jne
dec
dec
jp
insb
cmc
adc
mov
sub
adc
test
add
rorl
jae
int
out
pop
pop
es
inc
inc
mov
lret
lret
mov
sub
mov
fistpll
stos
popf
or
sti
mov
and
pop
daa
dec
xor
shlb
shlb
pop
pop
xor
xchg
mov
mov
mov
sti
iret
push
push
repnz
inc
sbb
jbe
push
insb
mov
stc
ret
bt
pusha
and
jb
jp
jns,pn
add
daa
cwtl
pop
js
pop
inc
ret
cmp
lcall
int
lret
push
in
inc
mov
mov
mov
popa
lea
and
mov
push
test
add
cmpsl
cmp
sub
dec
add
and
mov
cmpsl
jno
loop
pop
jle
xchg
cltd
or
lcall
inc
mov
inc
push
pop
push
dec
lea
ds
cmp
sbb
push
inc
jb
scas
cmp
rcl
rcrl
sahf
mov
jno
jno
mov
mov
inc
mov
loope
xlat
pop
out
and
repnz
inc
hlt
das
dec
jbe
test
out
jbe
es
pop
adc
jnp
stos
sub
mov
sub
andb
shll
add
inc
pop
dec
in
nop
iret
mov
pop
dec
inc
subb
jp
sub
into
add
xchg
push
rol
adc
clc
repz
and
mov
sub
fcoms
fwait
mov
and
mov
lods
dec
mov
ljmp
ja
mov
or
notb
ret
sti
cmpsl
sub
out
fisttps
aas
inc
xor
scas
aas
jae
imul
push
fimull
push
mov
or
inc
sbb
loope
push
loope
popa
cmpsl
mov
in
and
inc
arpl
out
popa
mov
sarb
clc
mov
dec
xor
lods
and
or
fiadds
stc
inc
xchg
adc
xchg
push
fisubrs
jecxz
xchg
adc
inc
dec
test
push
cmc
cmp
sbb
fbstp
add
add
scas
xor
or
fcmove
faddp
push
mov
push
jne
jb
out
ss
add
lods
sbb
jmp
mov
sbb
ljmp
jg
pop
inc
xorl
pop
or
and
mov
pushl
cmc
push
es
sub
add
adc
leave
fimull
or
mov
sub
movsb
in
cmp
pop
repz
loopne
pop
or
clc
sub
imul
cwtl
jno
jbe
xchg
mov
enter
les
das
scas
mov
mov
inc
bound
int3
adc
in
xor
leave
xchg
data16
lret
outsl
scas
cmp
outsl
sub
xchg
and
mov
imul
mov
mov
mov
push
mov
dec
add
xchg
dec
gs
xor
sub
xor
ret
jl
add
fs
cmp
xchg
mov
aad
into
add
lcall
xor
sar
inc
mov
jae
fistl
shl
leave
lods
std
jb
rolb
test
cmp
in
arpl
inc
call
sbb
cmp
lods
cmp
stos
fwait
popf
adc
incb
sbb
sub
sbb
sbb
xchg
orl
mov
scas
or
loopne
adc
sub
xor
setne
je
cmpsl
inc
lcall
fisubs
xor
movsb
fidivs
mov
aam
nop
push
mov
js
mov
lock
and
cltd
pop
rol
aaa
add
sbb
xchg
cs
adc
ficoms
cmpsl
out
xchg
gs
cmp
in
movsl
fs
bound
lock
movsb
scas
fimull
int3
iret
cmp
mov
cmpsb
dec
stos
mov
cs
out
lea
call
ds
cltd
jae
pop
cwtl
push
cwtl
daa
adc
shlb
gs
fldl
idiv
sbb
cmp
stc
jne
or
hlt
xor
std
xlat
jbe
fmuls
xor
inc
bound
add
push
gs
dec
jle
mov
cli
inc
pop
scas
int3
stos
mov
cmp
rolb
gs
sbb
lock
loope
dec
inc
int3
cs
add
test
jecxz
mov
rolb
xor
or
repz
sub
sbb
mov
xchg
call
mov
ret
add
pop
lods
clc
push
jge
fisubl
sbb
push
js
outsl
popa
inc
cmp
stc
mov
and
data16
adc
sahf
jae
daa
inc
loope
inc
stc
dec
pop
dec
aaa
dec
mov
das
mov
out
sarl
xchg
in
out
adc
loope
dec
incb
iret
in
stos
push
sub
icebp
cmp
cmpsb
iret
xchg
data16
test
push
lret
xchg
jmp
push
inc
popf
pop
insl
mov
and
cmc
jnp
mov
test
lds
cmp
adc
ret
js
arpl
push
or
lock
gs
aas
xchg
jae
out
mov
mov
add
ret
popa
mov
incb
inc
mov
sub
mov
shlb
shlb
mov
dec
xor
fnstsw
and
aaa
xchg
mov
xor
xchg
inc
repz
sub
sub
pop
adc
into
adc
mov
in
scas
push
stos
addl
cwtl
stos
lods
iret
fld
cmp
inc
jno
and
pop
aad
inc
mov
data16
shr
js
movsb
bnd
jne
lcall
and
out
fwait
pop
dec
xor
shlb
cmp
and
lock
xor
lods
mov
push
inc
imul
xor
jge
sub
in
dec
mov
fdiv
cld
aam
js
mov
jno
jae
push
cmpsb
mov
daa
adc
dec
lock
sub
jb
addr16
add
dec
adc
js
jnp
or
jo
pop
stc
das
mov
cltd
pop
pop
mov
iret
imul
sbb
leave
jg
dec
jmp
aas
cltd
pop
pop
mov
iret
imul
sbb
leave
jg
dec
jmp
ds
pop
pop
mov
iret
imul
sbb
leave
jg
dec
jmp
aas
cltd
adc
repz
out
addr16
leave
stos
fnstcw
cmp
movsb
mov
dec
xchg
pop
xor
jns
or
jnp
pop
cmp
stos
fnstcw
mov
cltd
cli
test
sub
imul
sub
dec
cmp
stos
sarb
ljmp
push
sub
outsl
add
jbe
jne
outsb
sub
jmp
push
cltd
adc
iret
test
and
jecxz
psllw
es
xchg
loopne
pop
mov
inc
sub
int3
cmp
xchg
cmc
xchg
pop
jp
and
repnz
or
mov
mov
xor
adc
push
sub
in
xchg
in
sub
cmp
and
cwtl
cli
push
ret
ret
lds
lahf
idivb
lcall
push
inc
fs
xchg
jbe
adcl
push
cmp
push
and
mov
scas
xor
xchg
jbe
fwait
jno
inc
mov
mov
aam
adc
sub
dec
jnp
sub
dec
cmp
jmp
ljmp
push
sub
jno
pusha
sbb
push
jp
dec
cmp
lret
lods
decl
dec
pop
xor
push
push
jl
pop
cmp
mov
stc
in
cltd
mov
or
dec
imul
in
pop
das
pop
push
lods
jmp
jmp
rcr
cli
test
sub
imul
sbb
dec
cmp
stos
fnstcw
mov
cltd
cli
test
sub
imul
sbb
dec
cmp
stos
notb
in
sti
jns
popf
jl
push
js
int
or
popa
icebp
push
sbb
inc
push
subb
roll
inc
adc
xchg
cwtl
aaa
fisttpll
or
jle
jbe
xchg
std
in
fs
fdivl
outsl
mov
jbe
pop
jb
sahf
dec
dec
xor
dec
pop
cmp
jb
mov
pushf
pusha
jns
inc
push
fnstsw
repz
das
xchg
dec
es
add
lahf
lods
pop
sti
sub
into
addr16
jae
testl
nop
sbb
sahf
call
mov
pop
daa
xchg
rorl
pop
popf
lds
out
cld
lret
cld
jb
mov
mov
mov
xchg
sti
fbstp
sub
movsb
jmp
ror
pop
data16
dec
pop
and
repnz
cmp
mov
and
push
inc
or
fbstp
push
pop
cmp
cmp
sub
outsb
fsub
mov
sbbl
inc
xor
mov
cmp
inc
addl
cld
in
lods
pop
sahf
adc
xlat
les
stc
sti
xchg
jge
xor
xchg
scas
insl
mov
mov
xor
lods
cltd
sahf
pusha
das
les
fstps
xchg
lods
ret
pushf
fdivrl
sbb
xor
cmp
outsl
lret
inc
mov
inc
jecxz
insb
inc
jmp
cltd
dec
in
scas
or
push
in
test
stos
inc
sub
cli
iret
xchg
cli
lcall
lods
sub
and
enter
gs
jge
xor
and
rclb
and
jg
cmp
sbb
pop
mov
fldl
dec
rcll
sbb
mov
in
cmpsl
inc
mov
adc
xchg
imul
in
xor
fcoms
mov
pop
sahf
cmp
fdivrs
dec
lods
jns
or
jp
fnstcw
int3
cld
cs
lock
ja
int
ret
movsb
mov
jg
mov
push
cltd
cmp
in
dec
in
jg
xor
loope
les
jge
repnz
inc
out
ds
sbb
outsl
sbb
sbb
leave
mov
fdivrl
ljmp
sbb
addl
addr16
sbb
fisubrs
adc
xchg
sti
xchg
xchg
cltd
cmp
lcall
lds
scas
decl
sub
pop
jne
jmp
in
push
inc
inc
mov
and
push
push
mov
outsb
xchg
cli
lcall
test
in
pop
lock
adc
xchg
or
and
cld
fiaddl
hlt
loopne
mov
in
or
shlb
mov
xchg
pop
xor
and
test
movsb
inc
mov
mov
rcl
or
xchg
ljmp
dec
hlt
jae
stos
xchg
or
fisttpl
sbbb
test
ss
jno
and
jmp
movsl
std
mov
jmp
jo
sbb
sbb
loop
push
sub
btc
lds
xchg
jns
out
cmpsb
mov
les
and
push
adc
mov
je
cmp
movsl
hlt
pop
bnd
cmp
nop
push
jp
cmc
adc
test
mov
adcb
fwait
movsb
jae
mov
fldt
aaa
stos
pop
test
lea
inc
jbe
aad
fmull
flds
sub
inc
xor
inc
call
out
repnz
scas
popl
insb
ja
pop
sbb
stos
mov
fnstenv
repz
loopne
push
or
pop
aaa
push
xor
mov
loop
stos
mov
test
sbb
out
ret
fwait
inc
pop
fwait
es
vmovdqu
cmp
test
test
ss
and
repnz
es
in
cs
add
cmp
daa
xchg
xchg
mov
scas
pop
aaa
out
mov
xchg
stos
jle,pn
push
sub
addr16
jnp
mov
or
inc
jmp
cmp
loope
lcall
je
testl
dec
jb
ljmp
sbb
jno
mov
xchg
nop
dec
push
xchg
fbstp
sbb
mov
mov
pop
push
shrl
pop
aad
adc
testb
pop
les
cmpsl
insb
inc
mov
mov
sub
int3
sbbl
sub
push
decl
lcall
jne
xchg
mov
mov
mov
pushf
mov
dec
mov
mov
loope
inc
popa
sub
stos
hlt
adc
xchg
out
or
mov
jo
nop
and
lcall
and
dec
jp
cltd
and
in
xor
call
out
push
mov
lcall
call
adc
ljmp
mov
movsb
pop
mov
pop
jmp
stos
rcrl
sub
adc
testb
push
or
movq
xchg
lret
add
dec
xor
xchg
dec
stos
ljmp
dec
mov
cmc
sub
sbb
mov
adc
adc
add
push
jnp
std
fisttpll
lea
fcmovnb
add
and
xchg
addr16
inc
out
dec
fistpl
mov
arpl
in
fucom
pop
subl
call
mov
lcall
das
adcb
out
dec
xchg
imul
xchg
hlt
jle
movsb
mov
pop
orb
jo
cmpsl
pop
lret
dec
xchg
pop
jg
scas
mov
sub
sbb
lret
cli
insb
jle
imul
adc
sbb
lods
sub
inc
dec
sbb
xor
xor
aaa
push
sub
imul
dec
test
ret
into
lods
xor
lret
je
cmp
jp
jb
mov
je
jb
jmp
and
adc
jns,pt
mulb
fs
cmc
scas
mov
dec
fwait
inc
sub
lods
ja
fiadds
mov
push
mov
pop
rcrl
adc
scas
pop
lahf
adc
pop
cli
imul
xor
fs
test
lods
subb
fimull
jns
fisubs
mov
inc
int3
pop
rcrl
jl
pop
jo
mov
addr16
inc
jo
movsb
pop
aam
sahf
add
jl
xchg
xchg
pop
mov
scas
adc
push
pop
sub
cmp
test
xchg
popa
cs
or
push
pop
ret
popf
xlat
pop
and
jle
dec
push
shll
fsts
xchg
mov
adc
sub
ret
aaa
jno
cmp
mov
in
jl
mov
dec
fmuls
xchg
test
fimuls
add
movsl
arpl
aad
sti
mov
jns
dec
in
push
addb
mov
jg
mov
mov
mov
push
cld
fisttps
add
sub
je
ja
aaa
jg
imulb
fisubs
pusha
dec
std
int
dec
bound
sub
jns
xchg
cmp
test
je
test
jno
push
scas
aam
repnz
xchg
add
mov
inc
enter
push
xor
imul
in
sbb
scas
push
aad
cld
inc
ds
loopne
rorb
notl
ret
subl
jno
popa
cmpsl
sbb
jecxz
out
xor
xchg
pop
mov
movsb
cs
sbb
stc
mov
and
lds
adc
inc
sub
test
shl
setle
jns
inc
stos
pop
stc
add
jno
mulb
adc
imul
cltd
in
and
pop
mov
enter
sbb
fiaddl
inc
cld
inc
fwait
sbb
push
outsl
bts
imull
ret
ss
and
cmp
adc
sbb
cmp
fisubl
cwtd
mov
repz
xor
cmpsl
and
adc
or
jp
ljmp
movsl
lds
cmp
or
push
jp
pop
pop
and
mov
test
adcb
das
lods
or
mov
and
ja
stc
and
lret
pop
inc
xchg
mov
insl
dec
das
mov
push
lods
jbe
js
jb
mov
and
lods
sbb
dec
xlat
hlt
xor
mov
idivb
pop
shll
pushf
cmp
cmc
insb
mov
pop
jo
mov
inc
sarl
bnd
jo
mov
subb
sub
mov
jmp
xor
icebp
add
loope
add
jbe
jl
xor
ss
lret
jns
nop
sti
fildll
or
sub
shlb
stc
xlat
rcrb
cmpsl
mov
push
test
sbb
scas
rcrb
mov
popf
sub
out
aaa
int
out
mov
js
cmp
jne
push
jb
dec
ljmp
xchg
pop
xchg
sti
sahf
mov
dec
lret
mov
daa
decl
fcomps
xor
dec
xchg
xor
or
lahf
adc
mov
cli
test
sub
push
and
xchg
test
add
add
push
fs
adc
cmp
xor
test
adc
pop
hlt
mov
push
push
mov
adc
add
int
daa
mov
mov
push
je
add
enter
fs
lret
jl
push
lock
and
loopne
fs
adc
pop
or
mov
and
out
add
sar
lea
adc
inc
and
outsb
cmpsl
push
gs
mov
aaa
add
icebp
lahf
idiv
rorl
jbe
in
enter
nop
xchg
ret
in
push
lret
insl
cmp
add
mov
jp
cmp
pop
jg
xchg
stos
dec
xor
pop
jp
in
adc
fwait
movsl
stos
mov
mov
cli
cli
sub
cltd
std
jb
and
cmp
xchg
sub
cmp
nop
shrl
imul
push
jne
add
pop
lcall
add
mov
in
int
das
jp
and
sbb
sub
lods
outsl
jl
sub
sar
insl
sahf
cmp
lds
adc
xor
in
out
mov
dec
fimull
mov
xchg
add
jmp
sub
or
imul
icebp
ss
insl
push
pop
pop
cli
pushl
cmp
pushf
and
push
fbld
clc
push
fcom
movsb
xchg
xor
ljmp
pop
fwait
ret
mov
inc
lock
dec
pop
nop
xchg
insl
xor
imul
xchg
inc
xor
stc
hlt
and
imul
les
cld
clc
call
pop
mov
dec
jecxz
mov
fistps
std
add
mov
and
insl
or
xchg
xor
nop
int3
or
jle
and
fidivrs
inc
ljmp
sbb
xchg
xor
icebp
push
lahf
xchg
add
inc
test
test
ret
pop
mov
aad
rcr
fbld
sbbl
shlb
sbb
rcrl
pop
cmp
dec
or
jmp
in
daa
cmp
dec
ret
cmp
xorb
adc
xlat
and
fisttpl
mov
push
dec
xlat
test
mov
xor
xchg
mov
imul
pop
std
xchg
aaa
lds
mov
loop
xor
cmc
sbb
popa
ljmp
inc
push
std
mov
pop
ret
cmp
std
in
mov
aam
loop
shlb
and
pop
xchg
mov
push
push
ds
dec
mov
xchg
cwtl
cmp
out
hlt
pop
sbb
jg
addb
cmpsb
popa
dec
pusha
sub
jp
inc
jne
and
mov
inc
ja
jno
lret
test
dec
jo
daa
testl
int
mov
add
stos
mov
js
lret
jl
rorl
es
stos
xchg
push
dec
dec
pop
jle
cmpsb
mov
xlat
aas
jbe
push
mov
lods
pop
mov
pushl
fs
es
scas
mov
arpl
cld
adc
std
xchg
in
enter
pop
shlb
mov
cmpsb
in
mov
mov
mov
ds
mov
lahf
adc
divl
cmp
dec
int
test
imul
cwtl
mov
imul
or
add
push
and
push
or
pushf
dec
cmpsl
mov
or
push
jb
pop
dec
pop
in
cmc
jmp
pop
rcll
mov
test
dec
pop
jecxz
loopne
pop
fwait
xor
push
insb
fs
cltd
mov
sub
lret
stos
jbe
ljmp
int3
cmc
sarl
adc
mov
fmull
shlb
mov
mov
out
xchg
jns
inc
fldt
adc
ficoms
xor
out
pop
aaa
enter
test
in
dec
in
fldl
xchg
push
jno
cmpsl
shl
mov
mov
jp
sub
jnp
add
fistpll
cmp
pop
lods
sbb
and
cwtl
inc
adc
jo
jp
push
xchg
daa
flds
cltd
jl
testb
pop
xchg
subl
or
cld
aas
push
cwtl
xlat
out
fldl
std
jb
or
lret
fwait
clc
jmp
stos
cld
push
pop
lods
push
mov
push
add
rcl
cli
enter
lcall
std
iret
lods
and
adc
mov
jo
sub
push
mov
int
cld
rorb
push
xlat
ror
or
test
test
dec
pop
mov
push
sub
repz
sbb
clc
test
pop
repz
mulb
xchg
sbb
xchg
ss
push
out
add
or
mov
inc
push
mov
loopne
ret
push
fistpl
inc
int3
pusha
rorl
and
lcall
mov
jnp
rcrl
daa
into
dec
and
xor
xchg
sub
fbld
cmovae
and
imul
or
shlb
inc
and
or
mov
mov
aad
loope
mov
imul
aaa
rcl
dec
inc
subb
xchg
cwtl
into
fwait
divb
jge
das
psubq
leave
jp
jp
dec
push
aas
cmp
sbb
mov
xor
inc
loopne
aaa
xchg
in
add
nop
sbb
add
ret
cli
jnp
sub
mov
sub
cmp
out
dec
rorb
setl
sbb
pop
ja
fistpll
mov
mov
dec
stos
ss
xchg
push
je
arpl
insb
pop
push
dec
les
xchg
jbe
into
dec
jge
stc
in
sbb
leave
roll
sbb
sub
sarl
ficompl
mov
or
push
dec
das
shr
ret
xchg
cmc
in
xchg
stos
push
push
and
add
negb
jbe
adc
fcmovnu
xor
push
adc
scas
mul
insb
jae
jge
stos
das
leave
xor
xor
pop
jl
inc
inc
mov
movsb
xchg
loop
out
cmp
outsl
add
shll
stc
es
ljmp
shll
sub
push
ljmp
mov
lcall
mov
and
push
xor
lock
lahf
mov
sahf
dec
inc
dec
je
movsl
mov
clc
scas
jmp
mov
mov
jle
or
mov
es
pop
es
mull
out
repnz
shrl
jb
dec
sahf
sub
cltd
not
cmp
pop
xor
call
aad
jno
call
daa
xchg
mov
sub
or
pop
push
cmp
push
mull
in
mov
jno
jl
pusha
and
cmpl
popf
inc
mov
jnp
xchg
add
sbb
pop
sub
lahf
cltd
in
push
or
test
out
xchg
mov
gs
fsubs
adc
dec
cmc
insb
sub
mov
cli
lcall
les
mov
inc
test
mov
mov
fdivr
sbb
or
test
test
pushf
das
movlps
js
or
cmp
or
pop
lret
cwtl
sub
mov
inc
mov
ds
pop
fistpl
dec
stos
fbstp
jno
cmp
push
jno
popa
jnp
sub
add
ja
inc
and
sti
ds
movsb
xchg
pop
sbb
mov
push
pop
lock
mov
mov
mov
outsb
or
add
inc
inc
in
cwtl
and
pop
in
sub
mov
pushf
das
dec
xchg
pop
das
repnz
jns
js
testb
or
cmpsl
mov
or
mov
das
ds
xor
xor
movsb
fsubr
in
cltd
push
dec
adc
pop
dec
mov
ja
push
add
pop
add
push
cwtl
mov
test
popl
mov
je
fisubrs
push
jg
pop
push
iret
movsl
mov
out
push
stc
dec
incb
lock
fdiv
into
jne
fists
xlat
sbb
sub
cmp
popf
fwait
xchg
push
lret
insb
push
sti
or
mov
mov
mov
stos
scas
test
lahf
inc
and
adc
aaa
mov
pop
add
xor
jmp
xor
or
ds
punpckldq
ds
xlat
pop
cmp
push
mov
out
in
mov
sbb
ss
inc
call
cmpsb
push
mov
or
xor
fsub
cli
pushf
adc
fdivp
cltd
xor
jge
cmc
loopne
cmc
fnstcw
mov
bound
dec
imul
mov
stos
cmp
cmp
sarl
fwait
pop
ljmp
shll
jae
test
fdivrs
cmp
xor
pop
push
push
adc
push
lock
ror
mov
arpl
stc
xor
mov
or
fs
mov
pop
xchg
jo
in
and
dec
xor
add
out
or
dec
cmpsb
ret
pushf
sarl
mov
pop
mov
mov
mov
mov
repz
mov
push
pushf
into
or
jmp
orl
loopne
mov
shll
das
sbb
in
dec
clc
aaa
in
pop
push
imul
dec
dec
jb
sub
inc
imul
push
shll
xchg
sub
test
outsl
lea
mov
rorb
ja
pop
stos
sbb
in
sti
adc
ja
out
int
add
mov
inc
inc
mov
push
scas
push
rclb
jbe
adc
mov
out
jb
jae
inc
cmp
add
add
sahf
shr
fs
orl
mov
les
bound
sub
ja
xchg
fs
test
cwtl
ss
leave
test
or
enter
inc
jnp
jne
stc
lods
dec
cmp
mov
push
xchg
pop
and
cmpsb
fsubrs
add
popa
stc
pop
je
push
nop
inc
and
cmp
fucomp
data16
jne
jo
cli
xchg
in
mov
mov
pusha
leave
dec
fistpl
addb
jns
hlt
mov
jp
clc
add
adc
push
jae
jnp
jge
bound
sub
into
xchg
test
aam
lds
outsb
fcoml
mov
out
aam
xchg
xchg
adc
aad
xchg
stos
sub
andb
xchg
mov
cwtl
pop
fldenv
pop
cmpsl
insb
and
pushf
in
xchg
popf
stc
ret
lahf
in
repz
inc
push
bound
push
js
inc
les
lcall
outsb
inc
jb
sub
mov
popa
lahf
sub
mov
repz
dec
test
add
repnz
push
roll
pop
lock
dec
pop
inc
sbb
mov
add
mov
jnp
and
add
jp
sub
add
cltd
mov
adc
mov
mov
adc
arpl
sbbb
mov
lret
or
movsl
mov
in
dec
out
or
sbb
push
mov
adc
pop
stos
ja
cmp
out
sti
add
iret
dec
inc
adc
sti
psrad
lods
loopne
mov
imul
inc
clc
mov
add
add
ljmp
js
jp
jmp
sahf
inc
fs
or
pushl
mov
pop
or
xor
fidivs
dec
cmp
call
xor
fucom
xor
ror
cmc
sqrtps
cmp
out
nop
cwtl
or
dec
sbb
add
sbb
ret
out
and
ja
pop
fwait
in
sahf
shlb
daa
mov
xchg
test
xlat
mov
jo
and
pop
ds
lret
adc
and
xchg
jmp
fisubs
sarl
lcall
jmp
leave
sub
rcrl
sbb
xor
mov
mov
out
xor
fisttps
inc
lahf
mov
int3
mov
repz
xchg
mov
push
ror
mov
mov
cltd
cli
test
sub
imul
sbb
dec
cmp
stos
fnstcw
mov
cltd
cli
test
sub
imul
sbb
dec
cmp
stos
fnstcw
mov
cltd
cli
test
sub
imul
sbb
dec
cmp
stos
fstpt
mov
cltd
cli
sub
cmp
mov
cmpsb
nop
ret
or
jle
xchg
test
mov
movsl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
sbb
imul
add
or
add
or
add
add
adc
add
add
add
add
add
xor
add
inc
add
add
add
add
sub
adc
adc
sub
inc
add
sbb
mov
add
add
add
add
add
add
add
xor
add
add
add
add
add
stc
add
add
add
rolb
add
inc
add
ljmp
add
xchg
add
add
outsb
add
outsb
add
add
add
xor
add
sub
xchg
add
add
add
add
add
pop
add
add
xchg
add
add
hlt
add
add
add
add
add
add
add
xchg
add
add
add
inc
add
insb
add
add
add
popa
add
add
add
add
add
mov
bound
mov
push
add
add
jae
pop
add
add
add
imul
push
add
add
test
adc
bound
jne
dec
add
add
imul
xor
mov
add
add
add
add
ds
add
mov
add
outsb
add
roll
add
jb
ds
add
add
add
sub
imul
add
inc
add
add
sbb
xchg
outsb
add
mov
daa
add
add
add
push
add
add
incl
jae
xchg
add
add
add
xor
test
pop
add
dec
add
add
add
inc
add
add
add
insb
add
add
fadds
adc
mov
add
dec
add
add
add
add
add
jns
xchg
cmp
cs
add
xor
xchg
outsb
add
add
push
sub
outsb
add
in
xchg
add
ret
add
mov
filds
pop
add
popa
add
add
add
jmp
rolb
add
add
add
add
add
add
add
cwtl
add
outsb
add
jae
jne
xor
add
add
adc
xor
add
lahf
add
add
add
add
add
add
add
pop
add
and
add
add
add
add
add
inc
add
add
add
add
add
call
add
add
and
sub
and
and
jno
inc
add
add
add
data16
sbb
and
add
add
test
adc
mov
sub
and
outsb
add
add
lcall
add
incl
cwtl
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
outsb
add
add
sub
test
add
add
push
add
add
movsl
add
add
outsb
add
add
add
add
add
add
add
add
add
xchg
push
imulb
movsl
cld
out
leave
and
pop
pop
push
push
popa
in
dec
int
hlt
mov
in
ljmp
sbb
mov
outsb
cmp
int3
xor
mov
pop
dec
scas
fcoms
loop
das
in
aas
scas
int
pop
dec
push
sbb
stc
jb
sbb
fsubr
in
decl
xchg
add
dec
cmc
push
push
push
add
pop
xchg
test
xor
xchg
pusha
js
cmc
sbb
add
ds
mov
pop
enter
xor
add
cmp
aaa
dec
sub
ffreep
pop
pop
fnstsw
jno
leave
push
es
cmpl
inc
mov
sub
dec
out
stos
xchg
jne
es
es
pop
or
sub
scas
aaa
mov
add
jns
jbe
lcall
js
lret
adc
out
jp
xchg
pop
dec
mov
aad
test
and
outsl
ds
push
test
in
sbb
popf
fildll
push
pop
sub
lea
cmc
imul
jno
mov
insl
fucomip
or
pop
repz
rcl
pop
aad
pop
jo
or
and
rcr
sub
and
pushw
push
stos
clc
lea
jae
pop
and
xchg
inc
push
stc
stos
rorb
cmp
adc
and
mov
push
ficoms
sarb
jbe
inc
jmp
hlt
pop
aad
loope
lods
push
push
pop
decl
lds
scas
pop
sub
mov
xchg
adc
and
andl
push
aas
test
enter
push
xor
sahf
mov
mov
mov
pop
ljmp
jnp
mov
repz
mov
cwtl
push
mov
aas
xor
xchg
xchg
xchg
data16
cld
jge
leave
out
mov
pushf
stos
xchg
pop
ss
inc
mov
ja
and
xchg
cmpb
dec
mov
dec
and
fisubrl
xchg
xchg
aad
into
jb
xor
in
push
cltd
inc
add
pop
sub
or
mov
jbe
lahf
cmpsb
into
xor
pop
insb
cmpsb
stos
jno
xor
xor
decb
idivb
cltd
out
repnz
mov
fnstsw
xchg
in
std
sbb
cmp
mov
outsb
or
pusha
and
fidivrl
xor
divl
std
mov
xchg
pop
jg
test
lcall
or
imul
movsl
push
enter
icebp
push
add
push
cli
mov
fiaddl
arpl
push
fcoms
popf
sub
in
enter
cmp
out
push
cmp
mov
out
aaa
push
sub
pop
loop
pop
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
