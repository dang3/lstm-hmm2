loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
dec
dec
jle
outsb
ljmp
inc
sub
cli
into
ljmp
scas
stos
dec
pop
dec
dec
dec
jp
push
sbb
xchg
cmp
pop
aam
into
ljmp
scas
stos
inc
enter
shlb
pop
es
ss
xor
add
lcall
into
stos
cs
dec
and
aas
push
sub
xlat
repnz
cmp
stos
ljmp
hlt
pop
rol
pop
jle
jle
fstps
icebp
test
out
pop
pushl
lcall
mov
dec
dec
aaa
pusha
lods
inc
push
dec
rdmsr
sub
mov
scas
ja
addr16
mov
imul
cmp
sbb
shrl
ljmp
push
sbb
inc
stc
mov
sub
out
dec
ds
dec
xor
sub
mov
cmp
mov
stos
push
push
mov
imul
mov
jp
and
xor
pop
fwait
sahf
jne
mov
dec
mov
push
sbb
loopne,pt
stos
pop
or
ljmp
mov
or
dec
sbb
or
arpl
push
inc
dec
stos
pushf
into
mov
ljmp
pop
dec
or
sbb
jne
cmp
imul
into
pushf
mov
lret
into
fldt
or
data16
or
cmp
sub
fcmove
lret
out
ljmp
scas
stos
pop
pop
dec
dec
jle
outsb
push
sbb
or
cmp
sub
fcmove
lret
out
ljmp
scas
stos
pop
pop
lea
xor
jbe
lock
inc
and
ds
pusha
jecxz
aaa
adc
fimuls
fsts
movsl
ljmp
std
test
mov
icebp
testb
add
lock
aad
xorl
std
dec
mov
xchg
dec
add
mov
cwtl
cmp
mov
jle
or
or
mov
repz
out
adc
test
add
out
jg
jle
orl
mov
xor
imul
aaa
xchg
divl
or
mov
pop
popa
popa
add
push
pop
es
mov
sub
and
adc
xor
inc
dec
arpl
outsl
and
and
fistpl
cmp
je
monitorx
push
or
mov
push
mov
ret
fwait
lret
fldcw
sbb
xor
jae
ret
clc
cltd
inc
dec
jo
sub
out
pop
das
ret
pop
icebp
imul
push
xor
clc
push
jmp
adc
sbb
push
fdivl
adc
sub
filds
push
ja
add
push
sbb
add
sbb
cltd
aam
out
jb
jns
fdivr
jne
lea
mov
aaa
scas
loope
mov
pop
cld
sarl
js
imul
pop
stos
or
sti
lret
inc
push
jns
aas
test
mul
je
sub
lcall
mov
sbb
shrl
xchg
in
jge
pusha
sub
hlt
add
push
push
in
xchg
add
cmp
push
adc
cwtl
adc
dec
cwtl
leave
lods
or
popa
jne
push
mov
lret
fsub
mov
push
inc
scas
into
mov
xchg
loope
lahf
jp
sbb
pop
sti
mov
cmp
test
fcom
push
push
xchg
pop
ljmp
daa
aam
cmp
jmp
inc
lret
aas
pop
mov
enter
scas
es
jo
nop
lds
dec
int3
xchg
out
cli
outsl
lret
or
lock
push
push
fs
push
mov
pop
scas
cmpsl
dec
pop
stc
xor
pop
sbb
incb
cmp
test
adc
sub
push
std
stos
test
mov
jmp
cs
fucomi
mov
pop
jl
aas
mov
fs
out
roll
mov
lea
sahf
or
mov
dec
pop
lret
cmp
pop
in
sti
leave
mov
dec
mov
cmp
jo
fistpll
roll
mov
test
mov
push
pop
xchg
subl
add
xor
jns
sti
xor
fisttpl
jb
enter
add
fstps
mov
mov
mov
rcrb
aaa
test
insb
push
sahf
push
lock
insb
sbb
sub
lret
push
jl
adc
mov
jno
jae
xor
dec
ja
xchg
sub
jo
ret
mov
mov
lods
js
push
and
and
fwait
icebp
mov
mov
frstor
into
xchg
adc
push
dec
xchg
or
push
dec
or
mov
sbb
push
and
push
loope
jno
add
sahf
out
mov
imul
cltd
push
mov
jmp
mov
push
fdivrs
inc
popa
sub
sub
arpl
dec
add
dec
cs
popa
pop
lods
or
sbb
pusha
push
daa
add
inc
xchg
lret
sub
lcall
repz
je
sbb
loopne
iret
mov
push
fnstenv
aad
popf
lock
imulb
jbe
aaa
and
push
add
mov
xor
dec
jle
adc
cmp
xchg
out
outsl
jb
int3
mov
cmp
stos
je
adc
in
and
sub
cmp
mov
movsl
xchg
fisubl
cltd
lea
push
ret
enter
mov
loope
cld
dec
or
dec
aam
aaa
sbb
cmp
xor
xor
mov
sahf
dec
enter
inc
jbe
scas
cmpsb
cmp
lock
scas
mov
push
xor
adcl
cmp
xchg
cld
pop
add
inc
stc
std
mov
hlt
jge
mov
xchg
dec
cmp
push
push
loope
xor
das
push
cmp
divb
shll
ds
xchg
or
jl
cmpsb
mov
mov
mov
sbb
lret
jno
cmp
movsb
jl
out
mov
lea
xor
jb
in
pushf
sub
int
ret
scas
andl
xchg
std
loopne
in
decl
push
cld
push
je
push
ret
inc
and
or
ljmp
cwtl
inc
js
popa
loop
xor
jne
push
lods
jg
sbb
adc
cmp
cltd
aaa
fstps
clc
repnz
fstpt
sub
xchg
popa
xchg
pop
dec
and
push
cltd
jae
xor
arpl
sub
inc
cmp
stc
and
adc
out
cs
xchg
pop
rcrb
add
jo
loopne
aam
repz
inc
stc
push
movsl
cs
cmp
jle
out
mov
pusha
pop
pop
je
fwait
imulb
push
mov
ja
mov
in
mov
adc
mov
scas
insb
js
arpl
ret
test
outsb
mov
inc
cmp
repnz
and
movsb
in
test
pop
fisubrs
dec
in
pop
shlb
fldcw
push
enter
cmp
inc
cmpsb
enter
mov
xor
shr
push
mov
or
aam
mov
or
or
fsts
hlt
jno
out
or
arpl
movsb
mov
lret
lds
xchg
mov
mov
popf
lock
outsb
inc
dec
mov
sbb
dec
lcall
or
dec
pusha
or
outsl
rcll
inc
cltd
sti
jo
push
sub
ja
xchg
dec
and
push
insb
test
cmp
mov
and
fbstp
cld
cmp
inc
daa
stos
xor
dec
lret
cmp
es
iret
ret
movsl
rcrl
je
push
xchg
push
push
and
mov
int3
out
movsb
cmp
inc
ss
scas
jl
adc
fnsave
add
stos
xchg
sbb
mov
jae
adc
ds
sub
js
add
pushf
xchg
fisttpl
jae
pop
mov
ljmp
pop
lds
pop
inc
inc
jp
inc
insb
imul
andl
ljmp
sti
mov
or
je
mov
adc
mov
xchg
mov
sub
sbb
xchg
dec
in
sbb
sbb
cmp
cmp
or
ret
shll
pop
sbb
bound
adc
inc
xchg
notb
pop
cmp
mov
gs
sub
cwtl
cltd
push
int
mov
jne
jae
inc
sahf
ror
test
push
mov
movsb
cmp
jbe
sub
pop
cwtl
cmp
test
xchg
sbb
jbe
imul
xor
insl
sbb
add
loop
cmp
jb
mov
daa
jmp
inc
xchg
out
mov
jg
jecxz
jmp
es
insl
push
jnp
out
shrb
mov
cmp
fcmovu
rep
sbb
xchg
xchg
ret
mov
lods
in
sub
test
movsl
and
add
cmp
out
mov
cmp
inc
fmull
push
jle
lret
jp
scas
push
rcrl
mov
fdiv
pop
repnz
xor
gs
push
dec
mov
aad
lock
cmpsl
dec
pop
mov
dec
xor
jl
lods
jmp
xchg
mov
in
inc
pop
fs
xlat
sbb
xor
sbb
cli
push
gs
fmuls
xor
movl
xor
jle
rolb
outsb
dec
push
int
xchg
in
mov
jle
jge
and
and
lcall
add
jecxz
jno
bt
or
fidivrs
clc
loopne
out
in
lock
cmpsl
sub
insb
dec
fidivrs
sub
or
pop
inc
adc
mov
inc
cmp
mov
push
in
pop
cs
push
test
das
push
jecxz
lock
sbb
jo
js
cmp
xchg
push
mov
xor
andl
ja
nop
push
mov
lea
sbb
or
inc
arpl
pop
or
jb
call
in
and
shrb
jp
mov
and
icebp
dec
out
mov
clc
jecxz
cmc
push
mov
aas
loop
outsl
ja
imull
mov
cmpl
and
jno
in
sub
ja
fadds
imul
jae
xor
add
popf
test
push
mov
cmpsl
loop
cmp
arpl
ret
mov
repnz
fwait
push
pusha
ficomps
lea
out
stos
iret
dec
sbb
mov
xchg
add
jle
cmpsl
cltd
in
mov
test
push
test
fwait
stos
jmp
jp
adc
push
dec
lea
imul
fists
ja
sbb
push
jmp
push
adc
scas
xchg
inc
pop
es
inc
rcll
cmp
int3
pop
notb
repz
jnp
loop
ljmp
xor
push
lds
scas
out
lcall
pop
dec
dec
push
dec
aaa
cmp
imul
leave
push
mov
incb
sub
add
out
push
and
insb
xchg
leave
sub
lods
gs
mov
mov
mov
jge
cld
popf
jnp
mov
or
scas
pop
sub
mov
call
dec
das
sbb
fistpll
lods
xchg
out
pop
ret
add
arpl
shll
add
dec
xor
fidivl
repnz
jmp
out
mov
pop
xor
dec
test
pushf
fdivs
bt
cmpsb
aam
push
dec
loope
inc
sub
push
jg
sub
and
adc
adcl
pusha
or
mov
and
sub
jnp,pt
iret
sub
sbb
cmp
xor
jbe
sub
lret
or
inc
pop
push
xorl
outsl
inc
add
shrb
sbb
push
imul
jbe
jno
jbe
xchg
int
call
in
lahf
mov
out
sub
mov
adc
or
xchg
fcompl
mov
xchg
cmpsb
rcr
mov
mov
sub
shrb
cmp
test
xor
mov
enter
xchg
mov
and
jecxz
push
pushf
popf
xor
dec
xlat
or
dec
test
mov
and
test
mov
out
and
daa
rorl
lea
or
and
push
xor
std
xchg
cmp
xchg
lret
adc
xchg
insl
aas
ret
mov
mov
mov
clc
ss
test
pushf
cmpsb
call
xchg
cmp
ret
fdiv
daa
movd
jmp
ds
insl
xchg
jle
shrl
add
xchg
mulb
push
fisttpll
pusha
push
and
sbb
ljmp
or
mov
mov
jnp
xor
lret
pushf
push
cmp
mov
or
pop
fimuls
scas
xor
jmp
and
sbb
orl
lds
sub
mov
mov
jae
fldenv
out
daa
pop
insb
bnd
outsb
je
and
xchg
xor
jp
fwait
test
mov
add
or
andl
cli
sbb
popf
add
mov
dec
in
push
aam
dec
mov
adc
into
mov
and
test
jge
dec
cmpb
jno
adc
mov
rcl
cmp
xchg
shll
sbb
or
dec
xchg
sbb
add
xor
rolb
mov
xor
push
lahf
out
cmc
pop
pop
ficoml
repz
fists
out
int
push
dec
imul
pop
mov
jbe
cmpsb
add
leave
push
mov
cltd
jnp
popf
sub
leave
pusha
cli
jp
shl
lret
fcmovb
popf
in
mov
test
stc
in
out
inc
mov
loop
inc
add
push
fidivl
sbb
pop
and
pop
xchg
mov
iret
in
mov
mov
fdivp
std
cmc
mov
addl
sbb
jae
insl
jae
inc
cmp
or
lock
sub
add
sti
in
adc
jecxz
iret
cli
sahf
std
stos
gs
nop
out
enter
push
imul
insb
scas
cmp
jno
xchg
aad
gs
inc
mov
popl
pushf
ret
les
addr16
addr16
call
idiv
xor
jp
sbb
adc
xor
or
movsl
inc
mov
pop
popa
imul
movsb
jmp
test
ds
xchg
mov
xchg
push
add
xor
inc
pop
add
mov
or
scas
or
mov
insl
cmp
and
ja
int
test
mov
cs
mov
add
xchg
in
cmp
ret
xchg
xchg
jg
add
add
out
xor
hlt
lret
xchg
mov
enter
dec
adc
cmp
add
popf
cs
jo
sub
inc
mov
movsl
cmp
pop
push
cwtl
mov
dec
nop
stos
jnp
mov
jb
mov
bound
adc
mov
push
out
mov
nop
pop
bound
cmp
test
add
mov
in
lahf
lock
cltd
int3
fstpl
sub
ljmp
add
lret
pusha
daa
mulb
pushf
repz
push
cmpsl
push
sub
stos
int
and
inc
mov
rcrl
mov
test
fldl
adc
fsts
dec
xor
mov
cmc
mov
jno
repnz
xchg
sub
in
xchg
add
clc
and
cmp
imul
mov
loop
adc
stos
adc
xlat
bound
outsl
add
and
push
cld
xchg
fsubl
jmp
sub
mov
fisttpl
ljmp
xchg
loope
xchg
in
in
push
dec
lea
fmuls
inc
subb
add
sub
out
lods
out
or
insb
test
popf
lea
pop
pusha
call
inc
cwtl
fimull
dec
insb
push
xor
clc
xor
dec
add
rclb
or
or
shl
xchg
andl
push
mov
push
out
mov
inc
lret
movl
insl
pop
les
ss
jp
pop
xchg
and
cmc
subl
mov
xorl
std
lock
inc
add
bswap
sub
shlb
lret
mov
fwait
jb
inc
and
outsl
lretw
mov
xor
cmp
xor
fsubr
cmp
mov
pop
iret
hlt
xchg
add
mov
outsb
adc
loopne
mov
xlat
push
std
adc
xchg
inc
mov
mov
lods
int
scas
mov
push
inc
shrl
mov
fidivrs
scas
inc
lock
push
push
adc
push
shlb
adc
in
sahf
mov
xchg
arpl
xchg
push
cmp
sbb
jg
xchg
inc
or
out
jae
pop
fcmovbe
pop
dec
loopne
cwtl
stos
or
fiaddl
mov
pop
icebp
dec
mov
enter
hlt
subb
mov
imul
mov
sti
stos
and
stos
mov
mov
sahf
lret
push
rcrb
mov
sub
loope
sbb
andl
cmp
cmpb
sub
push
adc
inc
sub
jecxz
stc
arpl
sub
mov
loop
dec
jg
jge
out
stos
inc
pop
mov
xchg
xlat
or
mov
gs
js
lock
sub
mov
dec
mov
cmc
stos
cmc
insb
adc
std
inc
inc
push
push
xor
sub
adc
dec
stos
pop
inc
jmp
inc
fs
push
in
dec
xchg
loopne
ljmp
xor
mov
cmc
sbb
push
adc
mov
loopne
hlt
testl
push
jbe
dec
fsubrp
jmp
fdivrs
stos
cld
push
sahf
ss
dec
mov
mov
loopne
arpl
lret
sbb
loopne
mov
inc
cmp
shlb
rol
ret
pushf
sbb
fisttpll
dec
subb
xchg
jae
dec
mov
fimuls
mov
xchg
stos
inc
stos
rcrl
imul
mov
std
mov
ljmp
cld
mov
sbb
lods
rcrb
cld
sarb
push
sub
add
idiv
lods
push
mov
call
nop
out
stos
or
mov
stc
cmp
rep
dec
cmp
and
sub
push
xor
add
in
aas
pop
repnz
push
aaa
mov
mov
cmp
imul
sub
jle
cmpl
loop
push
mov
ss
pop
push
mov
pop
add
dec
adc
inc
jne
add
cmpl
dec
sub
loope
int3
call
jo
inc
xchg
sub
push
and
in
adc
adc
sahf
outsl
mov
and
inc
ds
push
jb
pop
add
sbb
arpl
mov
sub
xchg
xor
std
repz
jbe
out
add
inc
fwait
lock
sahf
mov
pop
notb
push
add
mov
cmpl
push
and
pop
jne
movsl
cmp
loopne
push
addr16
jo
add
stc
jge
out
mov
enter
inc
sub
cmpsb
jmp
xchg
or
out
das
loope
xchg
xor
cld
cmp
pop
lcall
ret
sbb
and
or
in
scas
sbb
pop
jecxz
mov
mov
or
loope
mov
xchg
or
rcrb
jns
mov
adc
xchg
jne
fmul
xor
fstl
xor
rolb
clc
add
pusha
je
movsl
mov
jb
out
int
push
jmp
xlat
jns
lcall
add
rorb
inc
xchg
jbe
leave
add
es
insl
ljmp
sub
aad
adc
xchg
jmp
leave
mov
sub
mov
leave
test
add
ds
mov
test
xchg
into
orl
pop
cmpsl
jmp
jb
test
jae
cwtl
mov
mov
dec
push
clc
loope
jns
aad
imul
mov
test
outsl
cmc
xor
ret
and
cli
xor
add
addr16
fdivs
pop
mov
or
sub
mov
push
xchg
adc
mov
push
pop
cmpsb
sub
cs
mov
and
sub
pop
pop
inc
cltd
xor
mov
jmp
arpl
mov
mov
mov
push
in
fs
push
pop
push
popa
sbb
cmp
jbe
adc
adc
inc
in
imul
inc
jb
mov
scas
and
add
js
push
dec
in
int
push
js
jl
in
jb
xchg
xchg
xchg
js
and
push
mov
xor
rcrb
fdivs
pusha
scas
pop
cmp
leave
or
sbb
dec
and
adc
fucomp
leave
mov
and
sub
andl
mov
inc
pop
fdivl
pop
push
repz
addr16
inc
dec
jecxz
or
dec
mov
clc
sbb
or
push
inc
out
jns
pop
es
cmp
out
mov
jne
inc
into
dec
fisubs
lcall
in
xor
xorb
movsl
add
fwait
dec
jo
inc
dec
arpl
movsb
enter
jge
lea
shll
sub
push
test
jg
xchg
outsb
pop
sbb
xchg
movsl
js
push
inc
test
mov
lret
mov
sti
sub
mov
pop
and
sbb
mov
loope
test
inc
or
mov
adcl
add
and
ret
xor
fcmovnb
mov
loope
das
mov
dec
ficompl
lds
loope
fwait
je
mov
les
xchg
cmp
movsb
jo
push
cmpl
dec
xlat
sub
pop
push
es
mov
jno
or
mov
sub
pop
jb
movsb
adc
dec
lahf
ss
xchg
das
fisubrs
xor
cmp
jl
aaa
and
or
xor
push
jne
loope
aaa
or
sbb
lcall
mov
cmp
dec
pop
pop
shrb
icebp
sbbl
mov
xor
mov
push
jp
adc
xchg
out
pop
cmp
adc
pop
sub
data16
fcmovb
cwtl
test
add
mov
loop
dec
test
outsb
push
sbb
or
cmp
sub
fcmove
lret
out
ljmp
scas
stos
pop
pop
dec
dec
jle
outsb
push
sbb
or
cmp
sub
fcmove
lret
out
ljmp
scas
stos
pop
pop
dec
add
outsb
push
sbb
mov
fiadds
into
lret
out
ljmp
lahf
stos
push
jp
dec
jp
imul
push
or
and
out
popf
jmp
inc
push
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
dec
aad
in
cmc
jp
bound
cmp
push
fisubl
cli
add
adc
xor
dec
aad
in
cmc
jp
or
cmp
push
mov
add
call
aad
in
cmc
jp
or
cmp
push
fiaddl
adc
iretw
jl
add
dec
aad
test
int
stc
pop
lock
les
push
and
or
adc
mov
ficoml
mov
jp
and
ja
ljmp
adc
dec
ljmp
lret
cs
inc
aaa
add
pop
mov
push
jo
add
fld
cmpsb
sbb
or
lds
xchg
mov
adc
inc
gs
stos
sub
insl
or
mov
xor
lcall
cmp
or
andl
xchg
pop
pop
jae
mov
cli
clc
sti
jno
adc
mov
in
cmc
jp
or
cmp
push
fisubl
jne
add
stos
xor
pop
mov
mov
sbb
shrb
scas
out
or
pop
jmp
lcall
or
inc
icebp
jle
pop
int
pop
mov
scas
sbb
jmp
sub
mov
sti
or
or
cmp
push
fisubl
jne
add
stos
xor
pop
in
cmc
jp
or
cmp
push
fisubl
jne
add
stos
xor
adc
cmpsl
cmp
xlat
push
inc
cld
push
sub
out
sub
add
inc
lahf
cmp
xchg
push
pusha
call
and
or
push
push
or
cli
mov
orb
lea
pop
xchg
sub
jg
repz
inc
push
loopne
and
mov
ljmp
pop
add
lret
fisubl
fdivrp
lret
sti
adc
sub
std
out
lods
ret
ljmp
jbe
icebp
add
or
push
add
pop
mov
xchg
bound
mov
xor
xchg
mov
xchg
fstl
aas
add
pop
xchg
and
cmp
inc
add
fldenv
push
jge
sub
insb
fldl
cld
push
mov
pop
ret
imull
inc
in
out
mov
xlat
xchg
lret
xchg
int3
cmp
pop
push
jae
or
lods
call
decb
aaa
cli
sarl
add
std
inc
insl
xchg
ds
fwait
xor
mov
mov
cmp
push
clc
mov
lock
aas
rcll
dec
testb
je
cmp
mov
addr16
pop
cli
pop
stos
ja
jne
cmp
mov
test
es
jle
pop
xor
fmull
and
mov
push
in
xor
dec
mov
dec
sbb
xchg
inc
dec
cltd
pushf
int3
and
mov
mov
mov
mov
push
or
xor
xor
mov
mov
in
dec
fidivrl
mov
add
sbb
mov
test
das
adc
aaa
dec
mov
fdiv
aaa
push
sub
fists
mov
testl
addb
xor
and
pop
mov
and
clc
lods
push
stc
sub
xchg
push
rcrb
lret
or
jecxz
leave
xchg
push
sub
jge
iret
inc
push
pop
mov
inc
repz
cmpsl
mov
mov
jb
adc
mov
out
jb
jnp
add
in
pop
rolb
call
jb
pop
in
loop
loopne
and
std
cmpl
rclb
mov
pop
dec
adc
cmp
add
popa
call
iret
inc
sbb
js
push
jmp
jbe
ljmp
addl
and
mov
adc
dec
notl
jg
mov
sbb
pop
in
jne
repnz
fisttps
adc
cmp
mov
xlat
flds
sti
test
sbb
icebp
in
inc
test
sub
aam
sti
add
out
or
call
loope
push
je
inc
mov
pushl
mov
pop
dec
cmp
hlt
stc
inc
clc
sub
push
es
dec
outsb
outsl
outsb
sti
insl
sub
sarl
sub
cs
cld
mulb
jmp
decl
and
or
xlat
rorb
ds
sbb
cltd
mov
sbb
scas
jg
sbb
inc
sub
jg
scas
shlb
jp
movsl
push
leave
mov
mov
scas
mov
out
stos
add
sahf
incl
jl
fidivs
not
pop
andb
xor
stc
mov
scas
int3
int
dec
push
ret
and
lret
loop
pop
call
int
push
fidivs
pusha
iret
je
mov
mov
or
lcall
sti
xchg
pop
popl
push
and
movsl
icebp
mov
jg
sti
clc
cld
test
stc
pop
inc
rcrl
into
incb
xor
inc
loope
dec
clc
and
cmp
inc
dec
stc
in
stos
xor
jae
stos
lds
cmp
push
jecxz
add
addr16
push
mov
movsb
outsl
add
shl
pop
inc
lret
add
out
jmp
scas
out
xchg
push
icebp
mov
jb
add
call
inc
xor
mov
mov
cs
mov
dec
mov
pop
das
cmpsl
adc
xor
mov
lds
pop
ret
add
scas
outsl
out
cmc
stos
out
hlt
mov
mov
jb
jge
inc
xchg
pop
cmp
lods
cld
mov
or
fcomps
arpl
fldt
push
or
mov
pop
pop
cmp
popa
lea
popa
xchg
imul
cmp
mov
mov
dec
add
inc
push
jnp
jae
dec
mov
sbb
inc
mov
xchg
xor
inc
mov
ffree
lahf
lds
push
inc
insl
lahf
repz
outsl
out
dec
mov
adc
push
add
xchg
loope
stos
inc
pop
pushf
popf
push
pop
mov
push
jnp
or
add
in
stc
imul
push
ret
js
bound
or
test
add
das
xchg
inc
sub
fdivrs
pop
movsl
pop
andl
flds
add
jle
notb
sub
inc
inc
and
sti
fwait
add
dec
xor
jecxz
sub
jne
lret
icebp
cmp
les
jl
sbb
cmp
push
gs
sbb
push
jge
lods
loop
sub
nop
xor
jg
out
test
in
sbb
call
xchg
or
lea
cmp
sub
dec
mov
insb
cli
in
int
pop
adcl
xor
pop
lret
popa
adc
fwait
cli
mov
xor
cmp
in
inc
loop
mov
mov
sbb
rolb
jecxz
fcomp
adc
cmpsb
fidivrl
cmp
fnstcw
push
imul
fs
cs
jecxz
jno
push
and
lret
in
adc
xlat
add
imul
lds
in
jbe
pop
sub
pop
xchg
sub
ljmp
sub
rolb
popf
pop
imul
ss
shrb
leave
cmp
loop
mov
out
push
jnp
add
sub
sub
je
pop
add
mov
dec
shll
inc
or
push
scas
ja
add
mov
or
xor
hlt
push
cs
dec
mov
fisttpl
cmp
jl
mov
mov
iret
push
testl
dec
push
xchg
sbb
xchg
mov
loope
inc
mov
pop
xchg
or
cmp
pop
lret
cmp
mov
stos
xor
push
or
lds
in
enter
jmp
je
ret
int
clc
pop
jb
push
aas
pop
push
xchg
out
mov
pop
sbb
pop
popa
js
mov
es
in
mov
loope
push
mov
mov
jne
inc
xchg
jno
xor
loop
cmpsl
enter
cltd
add
xlat
push
push
sti
bnd
adc
cmc
pop
imul
in
add
rorb
inc
mov
cs
stos
sub
fwait
or
pusha
adc
jmp
movsb
aas
sbb
je
mov
mov
adc
xchg
mov
or
fiaddl
loope
add
xor
xchg
int
jmp
andb
clc
repz
movsb
lods
pop
mov
jb
mov
or
inc
sub
push
xchg
orl
incl
push
dec
xor
adc
aam
movsl
dec
cmp
leave
movsb
pop
mov
push
outsb
mov
sbb
jmp
add
icebp
jo
mov
fwait
pop
adc
mov
dec
aam
sbb
mov
cmp
loope
mov
jecxz
rorb
mov
and
cmp
jo
adc
out
test
ljmp
lds
adc
xchg
mov
xlat
push
aas
fcomip
incl
pop
data16
jmp
incb
addr16
mov
fcmovbe
aad
outsb
neg
jp
cmc
popa
sbb
enter
mov
jl
push
sbb
sub
outsl
jecxz
pop
pop
mov
repz
cli
or
push
push
les
push
cmp
in
rcll
ljmp
dec
insl
adc
sbb
mov
cmp
jg
stos
out
in
insl
xchg
mov
and
pop
addr16
sbb
mov
sbb
mov
into
test
imul
fldcw
fdivl
sub
lds
leave
pop
mov
pop
push
imul
test
dec
mov
or
push
sbb
cmp
mov
es
sbb
lret
cmp
cs
xor
iret
ja
call
icebp
addb
mov
hlt
or
cld
push
rcrb
push
enter
nop
iret
mov
pop
imul
cmpl
movsl
gs
add
sub
lret
lea
jb
nop
cmp
or
mov
pop
xlat
add
lret
icebp
stos
sub
cs
xor
jg
scas
jge
adc
loop
arpl
loop
inc
dec
sahf
jp
repz
out
cmp
out
sbb
clc
lret
cltd
or
lea
dec
add
xchg
and
mov
iret
rcll
lahf
stos
ds
dec
jnp
into
xor
out
pop
pushf
lret
jns
dec
cwtl
repnz
aad
sarl
and
pusha
mov
sbb
mov
inc
jnp
sbb
push
xchg
addr16
mov
in
xchg
lea
jnp
add
jle
ss
stos
dec
pop
pop
aam
add
fidivl
subb
push
and
xchg
mov
lret
mov
cmp
sub
dec
xchg
pop
enter
sbb
mov
or
push
or
stc
xlat
fwait
shl
and
in
repz
in
xlat
pop
or
jo
pmulhuw
lret
int
sub
fistpl
std
das
mov
and
push
arpl
fstpl
push
xor
cs
dec
imul
adcl
test
lahf
push
adc
int
mov
jmp
icebp
out
das
lea
or
mov
lock
xor
mov
addl
iret
loopne
mov
cld
sbb
inc
mov
mov
and
fdivrl
push
adc
sub
dec
xor
push
das
fldenv
or
mov
pop
jns
dec
cmp
jle
js
and
repnz
cmp
orl
mov
mov
mov
cmp
xor
mov
mov
lods
or
fists
add
mov
mov
inc
imul
ljmp
sbb
fbstp
insl
push
xor
fildl
je
insl
imul
inc
pop
fstpl
xchg
jnp
lds
push
pop
pop
lret
jmp
push
push
jl
pop
test
sub
jo
das
adc
cwtl
pop
in
pop
cmp
imul
mov
mov
mov
fs
les
lret
cltd
inc
dec
add
and
insl
cmp
in
pop
out
cld
sub
dec
pop
mov
sbb
push
fidivrs
sub
pop
int3
mov
inc
testb
outsb
js
cmp
jle
hlt
sbb
sub
out
or
loope
test
xchg
or
les
aas
xor
xchg
push
push
jmp
icebp
insl
subb
mov
cli
mov
adc
loopne
ficoms
mov
xchg
jb
sbb
dec
xchg
jge
pop
inc
mov
mov
cli
or
mov
int3
mov
aam
push
push
fdivr
in
inc
xchg
xchg
or
shlb
mov
insb
add
cmp
jmp
mov
xchg
mov
jno
push
inc
add
shll
test
mov
int3
sbb
js
jb
add
cmp
mov
lods
js
test
rclb
sahf
into
add
das
imul
dec
movb
addr16
inc
cli
cltd
cli
mov
ss
pop
pop
sub
jns
in
addr16
adc
sbb
cmp
jne
mov
mov
inc
sbb
and
jae
add
jmp
xchg
mov
btr
pop
dec
mull
add
mov
das
or
pop
fistps
imul
xchg
and
inc
push
inc
inc
sbb
test
in
push
jo
jmp
or
mov
dec
or
jmp
push
lcall
fcmovnb
add
lea
repnz
sbb
mov
push
inc
xchg
mov
test
test
lea
mov
xor
imulb
into
xchg
add
sbb
in
test
mov
inc
clc
mov
in
out
jbe
test
adc
and
push
sbb
test
xchg
loop
loop
mov
stos
mov
push
sbb
loope
mov
out
xchg
pop
test
lcall
out
scas
repz
test
adc
stos
cmp
rclb
push
adc
dec
mov
pop
jo
jae
pop
rcrl
pop
mov
aas
je
inc
dec
jnp
jb
bound
jecxz
push
mov
cmp
mov
add
pop
fistps
das
mov
es
mov
hlt
push
dec
push
push
das
mov
add
imul
adc
lahf
jge
adc
fs
or
sbb
clc
out
iret
rol
dec
jne
cmp
cmp
cmp
fistps
int
stos
add
movsl
xor
cmp
push
mov
jae
fisubrs
sub
mov
push
push
or
mov
and
adc
mov
jno
mov
inc
cmp
dec
mov
lahf
mov
pop
imull
dec
pop
xchg
in
fsubr
inc
ja
xor
xchg
cmpsl
mov
sub
adc
repz
clc
mov
cmp
sarb
sbb
daa
xlat
repz
rorb
xor
add
arpl
fisubrs
call
push
xorb
inc
inc
pop
lds
add
lret
ss
bound
adc
push
mov
and
arpl
icebp
adc
push
lock
xor
in
push
std
mov
rcrb
jb
xchg
test
shll
mov
push
daa
sub
add
adc
sub
add
adc
xchg
mov
xchg
jge
and
pop
sbb
inc
fisttpl
push
or
add
mov
mov
in
push
sub
jmp
mov
rclb
in
lock
xorb
add
es
mov
orb
mov
ja
xlat
adc
cmp
test
pop
sahf
sub
popf
in
push
outsb
loopne
jns
push
adc
test
push
xor
sbb
leave
sbb
inc
sub
je
mov
push
jl
in
lods
push
leave
push
hlt
outsl
and
enter
and
lds
lcall
fcom
mov
inc
je
pop
cwtl
pushf
mov
shlb
loope
repnz
jne
mov
ss
idiv
add
ret
inc
jbe
adc
sub
divb
cmp
mov
mov
adc
cmpsb
arpl
jecxz
dec
push
aam
push
sub
mov
dec
icebp
sbb
and
in
mov
or
cwtl
jne
movsb
dec
or
mov
sbb
sub
frstor
pop
sbb
pop
mov
and
adc
push
sbb
xchg
mov
fisubrl
push
into
mov
ficompl
ror
sub
out
enter
pop
mov
in
xor
sbb
sub
jnp
xchg
add
push
dec
sbb
jmp
loopne
and
mov
or
sbb
mov
push
aam
pop
mov
push
dec
push
push
ljmp
out
xchg
adc
sahf
push
xor
and
out
fs
ss
add
cmpsb
or
pop
insl
test
xchg
fidivrl
sti
mov
into
cwtl
lock
push
jmp
push
div
int3
mov
sahf
out
push
mov
shrb
loopne
mov
add
test
lea
jae
data16
push
or
push
pop
lret
sub
jp
add
sbb
lahf
cmp
movb
rcrl
enter
pop
dec
cmpsl
dec
fstpl
sti
lock
fstps
and
movl
add
mov
jnp
or
sbb
lret
or
outsl
aad
mov
movsb
cli
push
mov
sbb
je
test
sbb
mov
mov
lret
inc
fcoms
fdivl
orb
rol
adc
test
ljmp
inc
fistpl
dec
adc
je
adc
repnz
aad
cmp
test
in
jle
and
adc
out
xchg
mov
movl
enter
sbb
gs
mov
dec
cs
inc
pop
es
repnz
fsubs
andb
ret
mov
in
sub
adc
pushf
and
mov
pushf
jo
dec
xor
xchg
push
pop
pop
shlb
movsb
lock
test
jge
imul
jmp
inc
mov
xlat
xlat
jns
xorl
mov
push
sbb
loope
call
pop
jmp
out
and
ds
stos
sbb
jno
cmp
inc
inc
out
cmp
arpl
jbe
negl
mov
scas
scas
icebp
in
mov
cwtl
cld
sarl
push
mov
dec
popf
mov
sub
xor
lock
rclb
mov
out
call
in
imul
nop
xor
or
les
jg
add
or
mov
ret
xchg
push
repnz
push
jbe
mov
push
lea
imul
cmpsl
fdivp
les
mov
into
cltd
xor
test
mov
sbb
mov
xchg
adc
mov
ficoms
jbe
mov
scas
fdivrl
jmp
cmp
push
std
inc
cmp
in
daa
loopne
test
sub
cmc
or
jp
push
push
sub
test
cmpsb
rclb
loopne
and
vcvtsi2ss
in
mov
movsb
out
dec
lods
test
jmp
negb
idivb
jg
mov
les
out
aaa
sub
push
xchg
mov
ss
dec
inc
mov
mov
mov
call
clc
and
mov
xchg
rclb
int3
and
mov
sahf
dec
cwtl
mov
loopne
pusha
lcall
clc
jb
xchg
add
stc
test
shlb
xchg
out
mov
sub
loope
pushf
jae
rorb
enter
loop
push
or
adc
inc
mov
cltd
call
inc
jns
aas
cmp
mov
xchg
inc
shll
mov
sti
mov
jp
push
jno
pop
jl
push
ss
mov
jmp
sbbb
test
inc
sahf
int3
stos
cmp
push
or
and
shl
aas
mov
lds
or
adcb
fsin
jne
dec
add
sub
mov
mov
mov
icebp
daa
cmpsb
add
and
shl
pop
push
lods
jns
pop
xchg
xor
pushf
push
es
mov
lcall
dec
sbb
lret
cmp
xor
jmpw
test
fisubl
fistl
cwtl
outsl
and
sub
add
cmp
dec
xchg
in
xor
sbb
arpl
les
or
mov
xchg
subl
das
cmp
lods
jge
xor
inc
push
in
jb
gs
loopne
jo
sbb
imul
out
inc
cs
loope
adc
inc
dec
mov
out
mov
add
movsb
sbb
mov
xchg
sub
pop
mov
and
cmpsb
cld
das
mov
fisttps
cld
dec
adc
insb
lock
test
scas
adc
lsl
test
jne
ja
inc
sub
pop
es
jg
add
push
dec
loop
pop
cli
push
mov
mov
sbb
ds
pop
push
test
icebp
cmp
pop
inc
pop
cmpsb
ds
rolw
cli
xchg
xor
dec
mov
call
and
dec
push
out
mov
mov
mov
dec
and
pushf
pop
out
popf
and
leave
popa
dec
fbld
mov
mov
fwait
les
cmc
sarl
lret
cmp
add
outsl
xor
jmp
movsb
or
adc
das
pop
xor
sub
or
ljmp
inc
ss
int
cmp
mov
in
add
inc
jbe
mov
fisubl
nop
push
push
push
repnz
dec
in
cmovne
xor
jge
out
stos
les
mov
adc
insl
push
ja
roll
sub
jmp
xor
dec
push
cvtps2pd
sbb
add
cmp
arpl
inc
loope
imul
fsubrl
push
xchg
repnz
mov
push
and
addr16
jne
aaa
cmp
in
inc
adc
pop
dec
sbb
lret
rclb
mov
pop
jns
cmc
jp
or
cmp
push
fisubl
jne
add
stos
xor
pop
in
cmc
jp
or
cmp
push
fisubl
jne
add
stos
xor
ljmp
movsl
sub
fisubl
jne
add
stos
xor
les
pop
in
cmc
jp
or
cmp
push
jo
ljmp
ficoml
inc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ljmp
clc
push
idiv
sti
xchg
mov
dec
push
cmp
sub
cmp
enter
call
mov
mov
dec
push
or
or
sbb
repz
call
mov
mov
adc
pop
push
jl
dec
dec
cmp
mov
dec
stos
pop
pop
in
push
orl
shlb
add
pop
xorb
shld
out
cmc
push
cmp
enter
sub
les
pop
pushf
xchg
imul
pop
cmp
insl
xlat
mov
or
sbb
jmp
ljmp
mov
call
jg
movsl
xchg
pop
cmp
sbb
mov
cmp
push
push
push
mov
dec
rol
cmp
sub
push
jmp
mov
cmp
aaa
insb
or
imull
or
jecxz
lret
clc
mov
test
mov
push
push
and
adc
sbb
movsl
lahf
or
out
fld
int
enter
xor
push
ds
sub
popa
js
ja
test
stos
scas
in
mov
mov
dec
sbb
addr16
ja
pop
jle
cwtl
xchg
lods
cmpsb
pushf
mov
loop
mov
mov
dec
push
cmp
or
sbb
ljmp
clc
stos
mov
mov
dec
push
cmp
or
sbb
ljmp
sub
dec
fmuls
dec
push
cmp
outsb
dec
inc
fnstenv
inc
in
std
outsb
jmp
jne
lret
jp
decb
push
cmpsb
idivl
movsl
iret
sahf
cld
or
push
leave
mov
cwtl
rcll
adc
add
in
aaa
insl
jmp
movsb
shlb
rolb
xchg
ds
jbe
ds
inc
mov
mov
push
ret
xor
pop
aad
lahf
lret
mov
stc
push
movsl
xor
xchg
lods
stos
mov
imul
xchg
lret
popa
xor
push
xor
test
mov
stc
jae
shlb
shrb
aam
in
inc
inc
xor
mov
inc
das
shrl
testl
jb
ret
push
cmp
aas
push
in
int3
dec
dec
and
or
pop
pop
jg
xor
in
and
push
push
cmp
out
jp
lods
pop
inc
add
sbb
pop
adc
push
jle
sub
aam
test
mov
outsl
pushf
and
pop
sub
nop
dec
dec
sarb
pop
mov
adc
mov
sbb
adc
push
leave
jo
stc
out
mov
mov
addr16
iret
sbb
dec
sub
test
sarl
lahf
ficoml
scas
insb
mov
push
push
and
xor
popf
mov
mov
popf
push
outsl
xor
ljmp
nop
data16
xchg
stos
test
loop
sub
addr16
push
fistpll
fiaddl
movsb
incl
rol
cmpsb
mov
rorl
adc
or
dec
cmp
mov
push
repnz
shlb
cmp
xchg
sti
popf
bound
mov
pop
xchg
clc
into
loop
mov
xor
push
mov
icebp
and
aas
and
insb
scas
mov
aaa
adc
mov
ljmp
ja
es
stc
cwtl
add
dec
jle
inc
ljmp
int3
adc
inc
loope
scas
shrb
dec
adc
cmp
icebp
ret
jg
push
dec
push
xchg
mov
ss
mov
jb
and
pop
cmp
ret
fldt
in
divl
push
out
daa
clc
sbb
es
fsts
iret
cltd
jo
mov
sarb
es
and
cmp
xchg
push
sub
mov
ficomps
out
jns
jno
arpl
fstps
ret
xor
dec
lret
or
sub
push
mov
lods
and
pop
movsl
dec
or
cltd
cwtl
dec
mov
stc
je
jge
lock
aad
js
dec
sar
in
test
cmpsl
cmpsb
insb
push
jo
insl
cld
adc
test
mov
pop
ss
lahf
xor
dec
rcrl
mov
sub
xchg
adc
lds
paddsw
sbb
dec
pop
pop
push
add
push
es
shlb
dec
adc
jb
out
push
mov
popa
dec
inc
addl
rcr
xrelease
adc
gs
cmpsb
out
inc
push
scas
add
cmpsl
sbb
aas
adc
test
rorb
fs
adc
mov
jmp
cmp
mov
leave
sub
dec
mov
xchg
sub
insl
cmp
xor
push
sbb
sub
xchg
out
push
lret
pop
mov
adc
outsb
inc
and
in
test
jno
popf
test
sbb
aad
test
dec
push
mov
xchg
loopne
push
pop
mov
jmp
mov
fs
jge
fs
mov
jmp
pop
pop
cmp
not
inc
lods
sub
mov
push
adc
stos
fisttps
adc
or
mov
adc
shrl
xchg
adc
push
mov
jne
xchg
or
push
loopne
cmpsb
out
je
inc
lods
insl
clc
inc
mov
insl
push
stos
dec
fcmovnu
jge
test
xchg
roll
daa
orl
icebp
dec
clc
xchg
mov
sbb
sub
in
sub
je
xchg
adc
pop
dec
shll
jae
das
xchg
out
push
mov
scas
cmp
shlb
stos
mov
fisttpll
xchg
movsb
insb
adc
dec
imul
push
es
or
push
inc
mov
mov
test
popf
bound
out
pop
cmp
mov
sbb
test
shl
adc
insl
xchg
push
fsts
dec
sub
das
mov
mov
mov
popf
cltd
xchg
jecxz
leave
shlb
out
lock
fdiv
outsl
and
xchg
or
out
stos
jmp
imul
ficoms
punpckldq
adc
test
jnp
xchg
pop
fildl
cmp
adc
add
adc
testl
push
jge
push
mov
loope
xchg
sub
xchg
in
pop
into
pop
push
stos
push
loope
pop
jmp
outsb
sub
es
aam
cs
aam
outsb
dec
add
or
repnz
pushf
fcoms
std
mov
das
ja
and
stc
inc
shrb
inc
cs
and
and
or
scas
ret
lods
sbb
xchg
xchg
adc
pop
scas
pushf
aas
subl
scas
inc
bound
lock
out
fs
jge
sub
adc
mov
movsl
testb
out
mov
mul
add
xorl
mov
push
dec
and
push
mov
adc
push
inc
loope
jl
jp
jb
or
js
out
mov
icebp
push
imul
shlb
js
and
lret
add
jo
lds
pop
push
adc
test
mov
popf
arpl
mov
mov
faddp
xchg
fwait
data16
lcall
inc
sub
out
out
sbb
js
rol
xlat
adc
les
outsb
push
testl
cmp
es
loop
mov
push
jle
outsl
push
mov
add
lock
into
aaa
pop
jmp
stc
add
pop
push
add
in
mov
loop
inc
jbe
inc
push
jle
adc
mov
addr16
fcomps
xlat
xchg
xchg
loope
ret
jmp
mov
push
jo
push
mov
iret
and
xlat
scas
push
out
rcl
scas
out
daa
jg
push
pop
inc
in
mov
ja
iret
pop
pop
push
add
or
and
mov
mov
xlat
dec
sahf
fwait
sbb
outsb
mov
jmp
add
imul
cltd
dec
mov
ret
cmp
movsl
mov
mov
sbb
sub
cld
cli
pop
sub
loopne
and
push
xchg
test
push
jp
inc
jne
lret
in
sub
gs
ficomps
inc
rcrl
xchg
ret
in
xorl
xorl
sub
mov
or
addb
test
imul
add
add
pop
and
pop
fcompl
scas
adc
mov
and
mov
popa
clc
cwtl
rcr
or
test
push
dec
mov
push
imul
in
cli
les
inc
fiaddl
push
dec
scas
mov
sti
mov
sbb
stos
and
xor
cld
test
jnp
push
je
or
push
lret
inc
or
iret
sbb
shll
in
insl
mov
or
imul
xlat
fsubrs
sti
rorb
aam
mov
dec
sbb
or
rcr
outsl
sbb
rclb
cmp
gs
bsr
out
push
add
je
int
das
psrlq
sub
mov
adcb
cltd
mov
jp
sbb
mov
xlat
aad
add
test
dec
frstor
repz
xchg
test
cmp
mov
fistpl
icebp
mov
adc
dec
mov
imul
dec
jno
insl
pop
sti
adc
das
cmp
loop
hlt
xor
jo
cmpsb
pop
mov
ret
pop
sbb
sbb
ljmp
sbb
mov
ljmp
mov
mov
push
loope
scas
cmp
xchg
lods
adc
pusha
adc
mov
lds
ljmp
lock
gs
jae
cmp
pusha
add
sub
jg
cli
gs
lret
xor
jae
sub
xchg
lds
mov
call
iret
rorl
sub
sti
aas
xor
imul
insb
divl
jecxz
imul
fnstcw
int
jecxz
xchg
stos
das
ret
sarl
push
mov
sub
push
test
xor
or
xchg
and
imul
fbld
out
pop
es
and
sbb
add
mov
aam
xor
es
imul
pop
fdiv
cmpsb
outsb
adc
test
ljmp
stc
or
lds
fdivrs
hlt
das
inc
clc
pop
fisubrs
pop
dec
push
and
mov
insb
out
std
dec
xchg
sbb
sub
shrl
mov
push
sub
or
dec
push
notl
ljmp
into
in
mov
jecxz
fidivs
aaa
cmpsl
adc
out
xchg
mov
mov
sub
cmp
dec
nop
jb
or
pop
nop
cmp
ljmp
in
into
cli
dec
inc
mov
rcrb
fwait
push
fucomip
xchg
call
lahf
aad
in
and
xchg
je
cmp
out
loope
xchg
mov
stos
loop
xorl
mov
aam
mov
xor
sahf
fdivs
leave
push
repnz
jl
cmpb
add
jge
lds
cwtl
and
sub
popf
sbb
ficoms
cltd
fs
je
mov
xor
jb
sub
sub
in
mov
push
inc
xor
imul
ret
cs
lock
mov
pop
sub
mov
popf
jp
imul
or
mov
in
mov
daa
jge
aaa
and
aas
bound
adc
cs
xor
jge
xchg
cmp
jecxz
imul
out
rorl
mov
icebp
xchg
jbe
loopne
cmpb
popa
sahf
faddl
cld
data16
les
or
test
scas
negb
loopne
in
mov
fdivs
mov
sbb
out
arpl
cld
lcall
xor
push
dec
adc
or
hlt
lods
push
pop
inc
call
mov
fildl
adc
dec
or
or
xchg
fdivrl
cmp
xorb
leave
sub
sub
outsl
inc
inc
aas
arpl
stc
fistl
dec
movb
or
jnp
mov
popa
sbb
addr16
add
jge
sbb
push
xor
insb
addl
and
clc
add
adc
int3
push
or
mov
inc
mov
adc
and
or
paddusw
dec
and
out
sbb
mov
add
sarb
adc
mov
xor
inc
dec
or
int3
ret
lods
adc
fwait
testl
hlt
adc
and
push
push
getsec
mov
add
adc
scas
es
test
scas
mov
outsl
sarl
pushf
xor
xor
push
jecxz
std
out
out
test
cli
and
xchg
jae
orb
mov
dec
jns
xchg
cwtl
mov
idivl
push
into
rolb
ret
push
dec
fcomi
xchg
dec
xchg
scas
mov
fidivrs
jbe
mov
jnp
inc
stos
cmp
dec
cmc
shrb
jb
test
lods
mov
cmp
pop
stos
outsb
jg
add
loopne
je
xchg
sub
and
lret
adc
xchg
mov
lock
pushf
cmpsl
inc
dec
and
jns
ret
dec
mov
imul
pop
pop
popa
and
sub
dec
test
mov
aaa
loopne
cs
test
in
rclb
int3
int3
inc
cmpl
or
js
jne
xchg
lods
js
aas
pop
push
push
out
hlt
xlat
lret
xor
hlt
jg
cmp
jl
pop
adc
addb
push
fcmovb
cmp
add
mov
rolb
mov
outsl
cmp
dec
sbb
inc
adc
or
add
loop
lret
dec
ja
jae
insl
lods
subb
in
popf
ret
cltd
je
mov
mov
push
stos
je
xchg
hlt
mov
cmp
push
jp
icebp
test
mov
sub
bound
push
jg
out
add
mov
adc
pop
inc
dec
jns
cltd
push
push
in
and
out
fimuls
inc
dec
inc
pop
jae
jle
mov
ljmp
xlat
mov
push
push
sbb
and
aas
xor
pop
loopne
arpl
cmpsb
dec
xor
andb
mov
mov
sub
add
fmuls
inc
jb
aaa
idivl
test
or
sbb
xor
fistps
insb
cwtl
cwtl
mov
mov
lcall
cmp
mov
icebp
clc
push
in
cmp
sti
jno
jmp
stos
movsb
cli
aam
pop
dec
xor
loopne
movb
sti
or
or
sub
adc
mov
pop
add
push
loop
sub
or
cmp
out
cmpsb
jecxz
mov
add
cmpsb
cmp
adc
mov
cmp
movsb
scas
xor
cmpsl
mov
or
sarb
xchg
mov
mov
mov
sbb
jb
jmp
pop
out
jo
xchg
push
in
xor
or
push
add
pop
or
push
lret
adc
jns
add
lea
loop
mov
sti
mov
test
rcl
sbb
icebp
and
xlat
pop
jbe
push
repnz
xchg
cs
lret
nop
jbe
adc
xor
or
jle
adc
scas
sbb
xchg
popf
xchg
adc
stos
in
in
adc
and
jl
test
iret
mov
pop
mov
bound
and
jnp
xchg
sbb
fdivrl
loope
lret
scas
dec
in
icebp
lods
repz
cs
dec
ljmp
mov
cwtl
mov
andl
add
mov
xorl
fcmovnbe
pop
scas
xor
pop
xchg
lret
dec
clc
jno
jno
push
int3
fcomi
stos
pop
mov
shrl
add
mov
lds
dec
push
jecxz
mov
inc
cmp
mov
ss
js
mov
sub
jmp
xchg
push
popa
mov
das
push
jg
lods
cmp
or
mov
mov
fnstenv
push
faddl
xchg
inc
fs
loopne
stc
jg
sub
sar
cmp
mov
mov
or
xchg
leave
inc
into
lret
jns
pop
dec
sub
push
and
mov
addr16
iret
int3
movsb
sbb
shlb
shlb
xor
mov
aaa
sub
mov
out
in
lret
push
fstl
lret
or
adc
filds
xor
add
add
cwtl
cmc
out
into
mov
repnz
fs
xor
dec
add
test
push
mov
mov
sti
sarb
push
or
imulb
xchg
and
daa
or
add
rorl
mov
gs
cmpsl
mov
sub
lret
mov
dec
in
sahf
inc
add
push
pop
scas
mov
ret
jne
push
jl
push
in
mov
int3
cmc
or
orb
fsubrl
mov
or
bound
cmp
fs
mov
or
mov
test
fwait
push
jb
mov
mov
mov
mov
test
pop
rorl
cmp
mov
cmpsb
arpl
fucomp
pop
jle
xchg
mov
mov
rcrl
adc
mov
xchg
and
pop
jae
arpl
mov
adc
sub
mov
aad
or
scas
push
fidivs
adcl
sbb
lret
rcrb
sbb
dec
dec
repnz
jnp
movsl
lods
and
and
cwtl
int3
push
fstl
jb
mov
dec
cmc
sbb
dec
jae
mov
xchg
mov
clc
and
out
stos
sbb
xchg
jbe
lods
sbb
lods
push
jp
jp
mov
sbb
fcomps
stos
xchg
bound
nop
jl
jle
add
fisubrs
pop
notb
mov
mov
int3
les
nop
daa
push
fstpl
lahf
xchg
shrl
pop
xchg
xchg
iret
xchg
dec
std
inc
cmc
sbb
call
and
in
shrb
inc
mov
testl
lahf
mov
std
les
je
repz
mov
ret
addb
jp
sbb
notb
inc
les
lock
out
inc
adc
xchg
gs
jae
or
jne
imul
iret
cmpsb
or
mov
test
lock
cmpsb
jns
insb
sub
push
cmp
cld
cmp
sub
lods
repz
packssdw
pop
les
push
add
cltd
or
in
cmp
inc
xchg
and
hlt
testb
xchg
aad
out
inc
xchg
rcrl
dec
aam
mov
cmp
sbb
or
mov
mov
dec
test
jmp
push
ds
ja
adc
gs
ret
sub
xor
ret
sbb
loope
arpl
xchg
xor
and
cmpl
outsb
xchg
cld
add
lock
cs
mov
jno
lret
mov
into
repz
xor
cmpsb
ret
add
js
sbb
and
std
clc
adc
xchg
enter
xor
jno
clc
imul
sbb
ret
cmp
sub
inc
inc
pop
cmp
lods
add
mov
jge
int3
stos
jp
rolb
push
popf
xchg
inc
mov
out
cld
pop
jnp
mov
movsb
stos
sub
xor
or
into
ljmp
push
gs
pop
daa
test
ss
and
outsb
ss
xchg
mov
or
xchg
sarb
ja
mov
imul
das
jne
cmp
mov
out
aam
stos
test
jnp
loope
loop
push
sahf
out
subb
insl
jmp
and
imulb
imul
push
cli
cmpsb
or
ljmp
xchg
pop
call
adc
adc
push
out
fwait
ljmp
ljmp
hlt
adc
sub
insl
push
and
and
mov
inc
cli
aad
pusha
into
jmp
pop
sbb
add
or
pop
cmc
mov
inc
fwait
ret
mov
push
jg
js
xchg
sbb
jg
inc
scas
sbbb
sahf
pop
scas
jecxz
shlb
sbb
cmp
das
mov
pusha
iret
xchg
hlt
subb
xchg
fcoml
test
arpl
daa
jmp
lods
sbb
dec
mov
pop
aaa
xor
push
movsb
and
repz
lret
sbb
and
mov
popf
incl
inc
lahf
cltd
ror
lods
sub
mov
js
in
dec
inc
sub
inc
jne
add
fsub
fs
pop
in
outsb
pop
test
sbb
mov
lea
call
cmc
sbb
cmp
lods
and
shrb
and
cmc
pop
fadd
sbb
mov
xor
imul
mov
cmp
mov
mov
xor
test
cmpsb
xor
xor
jb
xchg
sbb
dec
mov
xchg
mov
insb
aaa
push
outsl
jl
xchg
mov
and
pop
jae
in
ds
les
addb
xchg
gs
push
cltd
jno
lea
repz
test
scas
or
lock
out
and
cmpsb
out
cmc
decb
push
sub
test
pop
repnz
mov
lea
cld
mov
std
je
jle
jo
adc
in
push
fwait
or
jae
mov
add
mov
jmp
arpl
fimull
loope
xchg
xor
and
fildl
add
mov
push
push
xchg
jecxz
fisubl
cmp
dec
mov
cmp
push
cmp
add
and
adc
mov
mov
or
inc
push
mov
mov
inc
mov
add
movsl
pop
jbe
cmp
leave
jne
std
jae
add
enter
cmp
jp
mov
sbb
xchg
xchg
inc
mov
mov
out
cld
or
sub
fcoms
or
mov
into
mov
sub
xor
jmp
popf
pop
lea
or
adc
mov
mov
dec
jmp
jg
rcll
pop
jge
mov
sub
bnd
mov
clc
stos
mov
mov
dec
push
cmp
or
sbb
ljmp
clc
stos
mov
mov
dec
push
cmp
or
sbb
ljmp
stc
stos
mov
mov
dec
push
cmp
or
sbb
ljmp
cld
test
mov
inc
xchg
mov
repnz
pop
minps
in
movl
or
sbb
sub
cmp
inc
mov
orb
cwtl
push
enter
call
repnz
sub
cmp
dec
mov
mov
mov
fcoml
inc
enter
call
repnz
sub
cmp
dec
mov
mov
mov
inc
xchg
sub
je
jle
ja
jne
mov
dec
cmpsl
or
pop
dec
jecxz
addl
or
or
enter
mov
repnz
fsubrl
arpl
mov
jle
mov
and
and
jns
stos
push
push
lock
and
add
insb
adc
jb
arpl
sarb
lea
sbb
pop
mov
mov
mov
sahf
and
add
xor
sub
push
dec
imul
fs
lods
xor
popa
fidivl
or
loop
stos
and
outsl
insb
fmul
mov
cltd
sub
jb
push
daa
std
mov
call
repnz
sub
cmp
dec
mov
mov
mov
bound
xor
and
adc
inc
dec
bnd
dec
xchg
pop
andl
test
pushf
jnp
add
xor
pusha
lods
or
js
pop
mov
push
pop
lcall
push
mov
mov
mov
mov
mov
push
jb
bound
xor
and
adc
add
repnz
sub
cmp
dec
mov
mov
mov
bound
xor
and
adc
add
repnz
add
rol
data16
out
jl
and
xchg
inc
push
imul
adc
pop
insb
aad
push
aaa
sahf
adc
outsl
dec
mov
arpl
mov
out
add
repz
mov
ret
adc
rcl
or
or
in
pushl
add
pop
xor
and
addr16
scas
stos
cmpsb
or
bound
loope
push
sub
loopne
insl
adc
mov
fsubrs
or
xchg
mov
js
popf
inc
mov
stos
cmp
push
scas
gs
mov
cmp
imul
pop
pop
jg
sbb
fldl
push
and
leave
mov
fnstenv
add
xor
dec
mov
xchg
fisttpll
sub
add
sub
add
out
jno
inc
add
mov
sub
rcll
popa
or
shlb
lcall
out
das
mov
mov
bound
fsubl
or
sahf
mov
stc
and
scas
popa
mov
lds
mov
sbb
add
adc
aas
jnp
int3
repnz
es
mov
inc
iret
xchg
jmp
popa
cmpsl
dec
leave
ret
pop
mulb
aas
add
add
and
cwtl
mov
mov
in
int3
inc
call
addr16
test
jecxz
jbe
sbb
mov
ret
sub
sbb
adc
cld
or
adc
mov
vxorpd
sub
rcl
andb
loop
int
sub
xor
faddl
shl
sbb
imul
clc
sbb
jnp
push
roll
jbe
out
adc
int3
pop
jl
aam
inc
pop
mov
icebp
jns
loope
cvtdq2ps
cmp
mov
xor
ret
lcall
cmp
sub
xchg
inc
rcl
dec
or
jecxz
jb
sahf
test
sbb
addb
jmp
sar
mov
in
mov
push
inc
fbstp
int3
xchg
cmp
insb
pop
xchg
clc
shll
push
into
aad
and
mov
xlat
jge
adc
inc
jbe,pt
addr16
jmp
fidivl
stos
pop
stos
out
push
in
add
adc
mov
mov
add
idiv
popf
hlt
mov
dec
mov
stos
fwait
lret
rorb
lahf
outsl
push
add
fildl
xor
sbb
rcl
pop
push
aad
and
mov
mov
mull
popa
mov
int3
loop
xchg
add
jg
push
js
or
sub
mov
test
sbb
out
push
js
movb
test
mov
mov
out
inc
cmp
hlt
pushf
jae
fptan
mov
fldcw
xchg
pop
jnp
sbb
mov
test
xchg
insb
inc
pop
pmaddwd
xchg
enter
pop
mov
shlb
clc
inc
clc
mov
aad
mov
cmpl
mov
xchg
sbb
add
dec
int3
dec
xchg
lods
movsl
jl
add
sub
repz
fisubl
and
int
addr16
outsb
push
pop
adc
or
aam
lea
js
dec
cli
add
xlat
mov
and
divb
test
xchg
xorl
mov
cld
test
sbb
fstl
jo
mov
ja
sub
lret
mov
sub
fcomps
cld
out
out
gs
into
mov
insl
cmp
dec
adc
add
cmp
jg
xor
repnz
or
cld
mov
bound
push
stos
orl
outsb
leave
cmc
mov
bound
ljmp
loop
test
icebp
sbb
pop
dec
cmp
imulb
stos
icebp
sbb
pop
ljmp
addr16
inc
mov
push
inc
push
aad
mov
popa
out
dec
and
pop
movsl
or
cmp
rorl
push
fnstcw
pop
mov
cmp
inc
test
scas
adc
xchg
jo
mov
ss
ds
mov
shlb
pop
rorb
mov
dec
inc
cmc
and
loope
adc
dec
pop
cld
lahf
push
addb
daa
inc
push
add
mov
imul
and
sbb
addl
add
xchg
loope
cli
push
ljmp
cmpsl
les
or
leave
lret
into
push
inc
pop
push
iret
mov
dec
movsl
arpl
add
int
repz
push
push
clc
mov
push
sbb
lea
mov
jle
into
insb
dec
je
mov
adc
jmp
jecxz
dec
pop
add
sti
fcomps
and
push
and
divl
mov
lea
mov
sbb
repz
jmp
pop
js
cmpsb
enter
cmpsl
cmpsb
mov
adc
aaa
imul
into
fcoml
pop
std
pop
jecxz
stos
pop
enter
sub
adc
in
sub
mov
imul
sub
sbb
xchg
push
or
sti
fbstp
adc
jbe
dec
insl
push
jne
and
daa
mov
push
xchg
cmp
outsl
pop
rcrl
hlt
sub
icebp
sbb
mov
jl
mov
es
daa
fistpll
inc
leave
sub
push
das
and
jns
nop
adc
xlat
jno
and
mov
push
add
icebp
js
jno
aas
out
jbe
xor
hlt
add
clc
push
mov
adc
xor
inc
dec
rolb
test
mov
inc
pop
and
stos
lock
lods
scas
mov
mov
test
sub
mov
loop
pop
lcall
push
mov
lret
push
aad
lds
mov
add
out
sub
jb
adc
cmp
xor
pusha
adc
push
or
and
lds
shll
jle
mov
pusha
push
adc
dec
and
sub
ret
insl
cmp
push
loop
divb
add
icebp
outsl
lods
push
shrb
mov
ja
rorb
xor
dec
hlt
cld
in
ljmp
xor
push
mov
mov
mov
mov
arpl
push
sub
add
jae
add
sub
loop
ret
test
sarl
and
mov
dec
insb
shlb
push
mov
xchg
push
lahf
in
mov
or
and
fs
jle
jmp
lods
imul
daa
sbb
aad
movsl
inc
inc
lods
jl
dec
mov
mov
je
add
aam
call
inc
popf
sub
mov
fdiv
push
ret
and
call
mov
out
jecxz
loopne
or
clc
popf
ss
pop
cs
fisttpl
aad
jne
movl
sti
push
push
jnp
aaa
jb
cmpsb
scas
popf
imul
icebp
in
in
loopne
mov
mov
jle
int3
in
cld
ja
lods
dec
adc
jge
push
inc
add
xor
mov
cmp
es
out
lds
lret
mov
outsl
sti
add
mov
orl
mov
cltd
out
call
fidivrl
mov
aad
and
iret
fnstcw
sti
jbe
or
cmp
insb
dec
scas
pop
rorl
mov
lret
pusha
adc
mov
pop
ret
mov
dec
ljmp
and
into
cmp
lods
loope
push
cld
ficompl
pop
lcall
jg
ja
push
into
dec
jl
pop
and
loop
xor
test
mov
add
xor
pop
mov
jbe
jbe
cmp
mov
xchg
mov
xor
or
jno
push
stc
xor
inc
in
sbb
sub
and
xchg
lds
test
in
mov
icebp
popa
adc
shrb
lods
or
pop
sbb
dec
lret
jmp
out
adc
cmpsl
hlt
adc
sub
inc
pop
push
shrl
gs
ja
clc
fidivrs
call
or
and
or
imul
aaa
mov
cmp
cmp
jp
jns
outsl
shll
leave
xor
mov
in
cli
pop
push
sub
pop
test
daa
inc
push
ror
aaa
cli
sbb
inc
ret
jmp
outsl
iret
and
aas
mov
dec
out
xor
pop
test
bound
mov
fldt
sbb
es
jne
mov
pop
scas
popf
mov
xlat
loop
loop
mov
lret
sahf
enter
push
inc
and
enter
outsb
pop
iret
lods
fwait
icebp
into
sub
and
push
ficoml
rcl
sar
sub
mov
push
xlat
push
lds
push
xchg
adc
xchg
add
xchg
add
xor
dec
iret
adcb
mov
cltd
mov
imul
movsb
adc
repnz
lock
mov
loopne
and
mov
mov
notb
lcall
test
in
aad
jb
and
adc
ret
es
mov
shlb
push
sub
rclb
shlb
push
int
xchg
movb
adc
in
test
aam
stos
push
out
arpl
pop
adc
je
imul
xor
pop
ret
mov
dec
addl
pop
xor
xchg
filds
ljmp
sub
test
push
std
jle
adc
iret
push
fndisi(8087
decb
outsb
jns
loope
xlat
outsb
add
and
mov
and
xor
cli
lret
enter
mov
idiv
mov
xor
outsl
or
push
cmpsl
jl
andb
jae
in
dec
lock
fcomps
bound
lcall
lods
fimull
int
xchg
mov
sub
repnz
out
daa
push
push
mov
and
fisubs
mov
or
bound
mov
ja
and
cwtl
sub
dec
sarl
and
xchg
pop
add
pop
inc
push
arpl
xlat
push
jne
jo
add
iret
addr16
call
or
loope
lods
fcmovne
inc
cltd
aam
cmpsb
shrb
jno
push
ret
mov
push
or
mov
push
jmp
xchg
loope
test
stc
mov
aad
xchg
xchg
loop
cmp
out
out
ret
cmp
idivl
in
ret
mov
stos
sub
add
dec
xchg
mov
jno
pop
sahf
jo
add
adc
bound
and
fildll
iret
and
cld
mov
and
out
xor
dec
push
shr
nop
adc
push
push
and
in
popa
or
adc
push
sbb
lret
jnp
inc
sti
insb
cli
pop
xchg
shll
outsb
xor
dec
fnstenv
je
push
add
test
dec
pop
inc
dec
aad
aas
pop
enter
sub
jae
int
push
inc
fwait
pop
jle
testb
xor
popf
mov
fldcw
in
mov
in
mov
stc
in
lea
aad
movsl
mov
jmp
or
cwtl
arpl
aaa
or
pop
imul
test
out
addr16
fwait
cmp
popa
xchg
rcrl
addr16
les
insl
cmpsb
cmpl
ljmp
int3
or
dec
insb
insl
pusha
sub
xchg
cmpl
sbb
mov
push
lock
cs
xchg
jg
push
pop
imul
popf
push
add
inc
lret
add
sub
popf
shlb
push
mov
loop
enter
sbb
pop
mov
xchg
cmp
sub
stos
arpl
adc
xchg
addb
mov
insb
scas
xchg
push
xchg
cwtl
xor
js
adc
imul
loope
jne
xor
or
dec
jecxz
cmp
out
sbb
add
fs
lret
mov
ljmp
fs
jmp
fmuls
adc
in
cmp
xlat
and
mov
push
mov
or
addl
pop
ror
add
jno
mov
mov
add
nop
cmp
mull
xor
cwtl
cmc
ja
or
jnp
insb
bound
pop
jecxz
int
movsl
inc
roll
int
jae
lcall
mov
outsb
jp
and
jo
xchg
inc
pop
pusha
inc
mov
rorl
jg
pop
push
stc
daa
movsb
inc
inc
jo
icebp
jg
jo
xor
jnp
dec
enter
mov
in
aam
fwait
cli
call
pop
int3
pop
cs
mov
jae
out
aad
mov
lock
mov
and
pop
cmp
mov
cmpl
sti
icebp
std
shlb
rcrb
loopne
fwait
out
add
or
add
add
push
xchg
push
jne
rclb
push
sub
jns
mov
ficomps
mov
and
in
testl
je
pop
ret
mov
lahf
xchg
pop
mov
rolb
pop
adc
push
push
pop
stos
imul
lea
or
sbb
loop
mov
inc
add
mov
xor
mov
rcll
rcrb
xor
inc
scas
mov
jnp
or
push
add
ja
jmp
cmp
push
mov
std
lahf
adc
adc
mov
xor
lds
jle
data16
ja
and
mov
stos
ficompl
jp
mov
and
push
or
mov
mov
mov
pop
div
imul
mov
out
mov
sbb
rcl
mov
adc
cmp
stos
subl
pop
sub
or
mov
ja
imul
cmp
shll
or
int3
mov
imul
xchg
stc
push
inc
sub
pop
xor
xchg
mov
xor
jg
mov
nop
outsb
and
jp
xor
in
fldl
test
stc
mov
dec
cs
jmp
das
not
lret
pop
adc
xchg
test
stos
push
xor
decl
popf
aaa
pushl
outsb
clc
aas
xchg
into
add
pop
call
cmp
or
leave
repnz
cmpb
mov
test
xor
ret
mov
iret
and
adc
jle
call
dec
mov
fs
xchg
xchg
fs
dec
and
dec
lahf
mov
and
jg
cs
dec
pop
loop
pop
iret
adc
cmp
es
in
fisubs
jae
pop
test
jo
push
push
out
add
cmp
ficompl
push
mov
cld
push
test
jae
sysenter
mov
jp
and
iret
or
mov
xor
pop
mov
push
or
jge
xor
or
repnz
pop
sar
mov
sahf
inc
mov
adc
sbb
rcl
jno
mov
mov
fsubrl
dec
mov
push
test
les
mov
dec
push
in
aas
lret
cltd
push
and
mov
loope
scas
mov
js
sbb
xchg
je
ret
jnp
cmp
rcrl
pop
fdivr
jl
dec
stos
jns
jae
enter
jl
mov
stos
xor
xor
push
das
int3
fisubrs
inc
ljmp
cmp
push
push
leave
pop
pcmpgtw
jae
sarl
mov
mov
popf
mov
pop
loopne
lods
mov
dec
cmp
xor
push
arpl
pop
xor
sbb
rcrb
frstor
jb
mov
sti
pop
sbb
js
out
adc
ljmp
add
pop
push
fldl2t
add
fidivrl
shrb
call
jle
das
sbb
fiadds
pop
sti
cli
and
outsb
movsb
mov
mov
dec
inc
jnp
in
in
sbb
test
fisubrl
pop
cmp
scas
xor
mov
mov
shrb
into
sarl
das
jno
mul
pop
pop
mov
and
hlt
and
mov
fisubs
push
repnz
or
xchg
cld
xor
out
lahf
xchg
mov
xor
jg
pop
pop
hlt
movsb
or
xchg
inc
dec
das
push
xor
out
fdivrl
pop
aaa
fisttpl
sbb
jecxz
push
push
inc
stos
pop
outsb
sbb
fstpt
insb
rcll
jb
cmp
cmpsl
lds
xor
insb
inc
sbb
adc
mov
mov
add
out
adc
ret
inc
push
int
push
not
mov
or
divb
icebp
inc
in
sbb
cmpsb
sub
sub
mov
xor
and
mov
mov
pop
adc
rcl
xchg
xchg
shrb
or
mov
add
cwtl
push
push
xor
jne
mov
aaa
cmp
xchg
push
and
sti
pop
xchg
or
xor
scas
xlat
and
jp
bound
repnz
cmp
call
shrl
and
in
ss
dec
rcrb
stos
aaa
pop
add
addr16
add
and
push
add
fdivr
rorl
cmp
in
push
push
xchg
pop
jecxz
sub
jecxz
sbb
jb
shl
mov
fnstenv
repz
in
sub
cmp
jno
pop
or
xor
pop
cmp
test
cli
mov
pop
ficoms
inc
jp
call
and
add
popa
enter
movsl
std
inc
cmp
popf
add
add
push
scas
shlb
inc
cli
add
sbb
pusha
xchg
cmp
in
fldl
add
loope
push
clc
xor
xor
movsb
ja
loopne
subb
dec
stc
movsl
jp
fidivl
cmp
imul
movb
xor
xchg
cli
xchg
aam
adc
mov
insb
inc
dec
hlt
jae
and
xor
adc
jbe
test
scas
mov
sub
aas
outsb
cmp
jae
sahf
or
repz
int
xchg
pop
mov
jle
sbb
push
fistpll
mov
les
mov
dec
mov
das
je
jecxz
push
cld
cmpl
push
push
aad
stos
pop
cmp
gs
inc
imul
pop
mov
jmp
xor
jmp
insb
inc
gs
mov
inc
mov
insl
out
scas
push
lret
dec
gs
iret
cmp
sub
adc
adc
jae
hlt
lahf
js
mov
out
add
jge
mov
in
mov
push
int
cmpsb
cmp
lahf
and
cmp
mov
rcr
fdivrl
mov
movsb
pop
call
adcb
sbb
outsl
or
add
out
sbb
stos
int3
in
pop
stos
xchg
inc
cwtl
xchg
shll
cmc
dec
inc
mov
mov
popa
fstpt
xor
out
jb
pop
pop
sarb
push
cmp
aam
mov
shl
pop
lock
dec
les
shl
int3
lods
jns
sbb
daa
lret
inc
xchg
loopne
adc
into
ja
les
or
pop
sbb
dec
frstor
test
and
or
cltd
adc
adc
mov
push
xlat
jle
fmul
sub
push
fsubl
sbb
jl
sub
ja
sub
push
ljmp
cmp
lock
in
dec
jne
jmp
stos
outsb
movsb
xorb
mov
leave
jg
mov
jmp
lcall
loope
ss
cld
addl
mov
std
in
push
pushl
movswl
mov
cmpsl
mov
inc
mov
xchg
pop
test
jno
or
pusha
js
adc
sahf
cmc
pop
xchg
inc
into
das
test
out
popf
shrb
add
pop
clc
rolb
clc
fmull
stos
or
pop
add
mov
and
or
lahf
cltd
pop
hlt
xchg
cwtl
test
gs
mov
cmpsb
shlb
mov
cmp
xchg
out
fsubrl
cs
insl
lods
add
orl
clc
pop
add
int
pop
mov
inc
mov
fldl
adc
test
aad
fcoms
pusha
inc
outsb
out
dec
rorb
int
mov
lds
aam
or
loop
sti
mov
lret
xor
cld
out
and
mov
sub
jnp
xchg
xor
aaa
lods
adc
mov
std
imul
stos
leave
sub
mov
mov
mov
jecxz
scas
out
in
cwtl
or
cmp
xchg
sbb
xchg
out
fcompl
loopne
xor
push
cmp
sbb
push
cmp
xor
lea
mov
notb
jne
cmc
mov
jns
inc
not
lahf
bound
pop
int3
iret
mov
ret
sahf
mov
mov
jge
jo
out
sub
lds
xchg
pushf
aas
mov
and
and
or
popf
rcrl
pop
and
add
bound
and
lods
pop
loop
mov
push
mov
lahf
and
das
sbb
adcb
jne
jb
mov
sahf
cld
fstpt
and
pop
cmp
jl
mov
call
movsb
cmpsl
jnp
cli
and
jle
sub
or
push
add
ret
pop
mov
mov
bound
xor
and
adc
add
repnz
sub
cmp
dec
mov
mov
mov
bound
xor
and
adc
add
repnz
sub
cmp
dec
mov
mov
mov
bound
xor
and
adc
add
repnz
sub
cmp
dec
mov
mov
mov
enter
xor
pop
in
pop
std
aas
xor
fstpl
in
paddw
loop
mov
lahf
jge
jg
or
iret
cmp
pop
in
paddw
outsl
popf
pop
lods
dec
mov
lahf
dec
jge
outsb
out
int
sub
das
fstpl
cmc
pmulhuw
outsl
test
dec
cmpsl
mov
sbb
jae
jnp
cmp
pop
cltd
arpl
in
push
xor
push
imul
mov
lret
data16
movsb
pushf
inc
lock
daa
mov
inc
int
mov
jge
jge
mov
dec
mov
daa
pop
sbb
sbb
mov
rorl
scas
sbb
iret
cmp
jne
bswap
pop
lods
jp
dec
inc
xor
in
add
loop
cmpsl
cli
push
shl
cmp
adc
sbb
fdivr
or
sub
jge
adc
ret
cmp
mov
xchg
dec
xor
dec
pop
dec
pusha
js
insl
scas
pop
bound
rorb
repz
lret
movntq
outsl
popf
pop
mov
movsb
mov
je
call
iret
pop
jle
pop
fnsave
data16
jg
sbb
sarb
cmp
adc
pusha
out
dec
mov
mov
fnstsw
arpl
jg
sub
fidivl
cmp
sbb
jb
inc
mov
mov
xor
outsl
popf
pop
lods
dec
mov
lahf
insl
jge
or
iret
cmp
pop
in
paddw
outsl
popf
pop
lods
dec
mov
lahf
insl
jge
or
iret
cmp
or
out
xorl
sahf
ss
out
jno
ja
xor
add
jl
add
loope
add
call
xor
pop
cmpsl
in
sub
or
orb
dec
lea
push
clc
jne
or
fnstcw
popa
icebp
loop
cmp
inc
frstor
push
cmp
outsb
outsl
add
ja
jno
mov
mov
sbb
xlat
loope
cmpsb
inc
loopne
mov
adc
sub
sub
and
jmp
mov
or
mov
inc
aaa
out
jb
jmp
insb
fldenv
arpl
repz
decl
ja
adc
cmp
xchg
dec
xchg
xor
js
push
divl
enter
adc
pop
ds
das
das
xchg
fisttpl
dec
fiaddl
jl
fadd
mov
pop
sbb
shrb
aaa
mov
pop
cli
test
adc
gs
das
xor
mov
in
inc
jbe
cmpsl
imul
add
cmp
scas
rep
sub
or
mov
sbb
out
xor
div
sub
mov
xchg
jns
push
pop
mov
sub
xchg
jns
xor
sbb
jge
add
int3
xlat
int3
adcl
mov
loopne
dec
shlb
mov
pop
add
jl
mov
dec
call
pop
cmp
mov
push
sbb
ljmp
sbb
cmc
scas
addb
adc
mov
adc
jbe
xchg
push
imulb
mov
add
and
out
mov
sahf
jg
mov
lret
in
or
jp
pop
test
int3
push
stc
das
in
gs
or
mov
lgs
scas
pushf
ljmp
push
pop
sub
pop
movsb
adc
jne
sub
ret
and
inc
test
rolb
data16
mov
dec
out
sub
jae
rcr
repnz
lods
leave
mov
lods
sahf
or
and
jns
in
cltd
andl
pop
cmp
cwtl
fstpl
dec
inc
insb
pop
ret
inc
jge
xor
mov
jecxz
jnp
mov
mov
push
adc
and
cmpb
or
rcl
in
or
out
ret
jle
dec
jl
pop
mov
outsl
cwtl
sub
cmp
nop
mov
fwait
es
test
sahf
repnz
xor
into
mov
test
ret
and
lret
in
xor
movd
dec
fstps
lret
ss
mov
shrl
test
loope
cli
jae
inc
jnp
sqrtps
mov
arpl
push
nop
fiaddl
xchg
jecxz
jecxz
aad
and
arpl
mov
mov
arpl
cmpsb
add
sbb
outsl
and
repnz
ljmp
ret
rcrb
push
ss
loop
sbb
clc
inc
in
add
leave
out
push
aad
jns
xor
lret
lea
jmp
fcomps
in
negl
cli
lock
and
and
rol
push
icebp
out
scas
push
push
adc
loope
push
imul
mov
mov
adc
adc
out
les
pop
test
mov
jmp
push
ljmp
and
sbb
adc
cmp
xor
push
mov
pop
mov
leave
cmpsl
add
jmp
or
lods
fwait
sbb
cmc
test
pop
sbb
jb
sahf
xchg
mov
adc
mov
lods
push
out
push
xchg
idivl
xchg
xchg
arpl
xor
adc
je
outsl
out
inc
fistl
jg
cld
fisubl
mov
in
pop
push
jge
pop
pop
loope
add
dec
lods
cmc
fwait
test
rolb
pop
push
ret
ret
fstpl
add
andb
jb
cmpsl
shl
repnz
loope
test
xchg
add
inc
jg
mov
inc
jmp
je
jecxz
divl
cli
mov
adc
xor
cmp
mov
push
push
push
add
add
out
sub
xor
subb
mov
adc
pusha
sub
cwtl
loopne
cld
std
int3
aad
into
xchg
inc
mov
and
fcompl
incl
leave
popf
xchg
sub
jbe
cmc
rorb
ds
call
xchg
inc
and
mov
outsl
das
add
out
outsl
test
push
cmpsb
insl
out
movsb
imul
call
pop
rcll
or
cmpl
push
repz
fdivrs
sti
pop
loopne
push
mov
loope
sahf
and
mov
xor
seto
jge
test
push
inc
jle
jbe
sub
pushf
jb
xor
push
hlt
inc
xor
pop
in
hlt
xor
loope
scas
mov
dec
jg
jb
mov
in
xchg
mov
nop
xor
and
mov
push
orl
cs
std
dec
dec
icebp
dec
and
push
loopne
jbe
jp
xor
aam
mov
sysret
or
mov
decl
popf
hlt
arpl
jnp
push
xorb
adc
push
xchg
rcrl
cltd
pushf
add
mov
cmpsl
mov
xchg
fimuls
add
icebp
cmp
jecxz
mov
outsb
mov
das
dec
roll
out
out
aad
jne
xor
sub
stc
mov
xor
test
or
xchg
mov
fwait
cwtl
cmc
arpl
je
gs
pop
mov
sub
aas
ja
and
sbb
push
andl
popa
pop
and
arpl
pop
loope,pn
add
jae
jbe
add
or
daa
js
xlat
adc
jne
imul
mov
fwait
mov
icebp
adc
test
inc
jb
frstor
dec
jbe
lods
mov
fwait
or
mov
dec
cwtl
js
fsubs
sahf
in
dec
mov
jo
loopne
sar
aam
jle
mov
inc
adc
rcrl
pop
in
test
daa
pop
add
sbb
addr16
cmp
push
and
ja
sbb
sbb
mov
inc
sbb
scas
add
xchg
imul
addr16
fwait
pop
xchg
ret
xchg
or
hlt
cmp
imul
in
mov
pop
insb
jb
je
test
lods
jp
shrl
clc
fneni(8087
mov
xchg
mov
sar
pop
jo
divl
xchg
jle
mov
add
add
pop
jo
jae
dec
data16
mov
xchg
push
dec
stos
and
mov
dec
jp
test
push
jg
mov
jns
cmpsl
fsubp
push
fnstcw
push
fnsave
and
pop
insb
inc
aam
in
pop
jle
mov
insb
mov
mov
cltd
adc
sub
jb
and
hlt
mov
xlat
jecxz
pop
pop
sub
pop
popa
jns
lods
sti
sub
push
add
loop
jp
push
lea
dec
push
inc
cltd
out
add
jns
adc
push
data16
jecxz
jg
add
imulb
adc
sub
fcoml
cmp
xchg
sar
dec
push
subl
lds
inc
arpl
jb
jp
push
popf
inc
enter
add
out
inc
es
das
idiv
mov
std
pushf
mov
fistps
xor
testl
lea
cs
in
dec
int
push
lahf
pop
mov
mov
out
arpl
test
xor
repnz
mov
popf
ds
and
mov
jb
xlat
call
pop
pop
or
dec
xor
mov
ret
xchg
adc
mov
pushf
add
stos
inc
mov
jno
jae
inc
mov
repnz
rorb
outsb
and
aaa
pop
mov
imulb
dec
incb
shr
rolb
aad
pop
jecxz
aad
lcall
and
adc
gs
fists
das
nop
movsb
mov
adc
push
movsb
cld
outsl
cs
test
or
dec
mulb
aas
lods
jle
xchg
int3
dec
in
mov
imul
and
mulb
lahf
mov
jns
lahf
scas
in
mov
aas
fdivrl
rcl
push
int
cvtpi2ps
lret
add
outsb
dec
insl
push
lods
pop
push
outsb
mov
pusha
cmp
mov
cmp
iret
push
jno
or
jp
sub
inc
jle
push
lods
sub
repz
mov
test
push
mov
pushf
push
or
cmp
repnz
dec
fwait
push
push
negl
push
cmpsl
je
lret
lock
sarb
call
mov
fsts
stos
pop
popf
or
and
stc
loopne
mov
cmpsb
xchg
add
and
cmp
cmp
add
int3
mov
sub
cltd
ret
lcall
loope
es
cli
adc
add
dec
aad
cwtl
aad
stos
pushf
sub
test
mov
jns
xchg
adc
or
repz
imul
loop
popf
xor
hlt
sbb
lret
fwait
iret
and
lock
pop
test
scas
cmp
int
gs
inc
int3
jnp
sbb
dec
adc
pop
inc
or
out
jnp
xchg
cmpl
xchg
mov
jb
sarb
roll
xchg
out
fwait
or
or
imul
cld
es
xor
mov
imul
je
jbe
mov
mull
das
push
jp
xchg
repnz
xchg
negb
xor
mov
inc
push
movsl
mov
mov
or
stos
mov
mov
inc
lea
push
xor
cmpsl
lret
push
loopne
imull
in
rclb
adc
sti
pop
mov
sub
push
insb
adc
mov
adc
dec
dec
add
jge
pop
jle
sbb
or
cmp
pop
dec
mov
adc
xor
mov
int3
jnp
arpl
sbb
std
pop
sbb
lea
fmulp
mov
sub
into
jno
jb
lods
lock
mov
fmull
stc
adc
sub
mov
mov
or
xchg
cmp
stc
lods
cmp
jg
test
outsl
or
xchg
jecxz
ret
enter
fstl
jae
and
sub
sbbb
xor
jge
and
xor
test
addl
mov
addr16
icebp
jne
push
sbb
cmc
inc
adc
and
sbb
in
ret
jno
jae
and
mov
xchg
cmp
or
xlat
add
add
jmp
out
fsts
dec
add
fimull
pop
les
insb
mov
push
jle
addr16
icebp
fidivs
das
add
push
imul
insb
into
add
in
mov
pushf
adc
sahf
xchg
insb
out
pop
dec
popf
ror
lock
adc
cmpsl
icebp
adc
jo
les
mov
mov
outsl
dec
pop
jmp
jecxz
lret
sub
in
pop
je
jmp
pop
pop
imul
jns
sbbb
cmp
repnz
into
out
mov
mov
dec
stos
incb
call
push
movsl
loopne
scas
and
push
push
lret
ljmp
push
and
ds
lea
jle
pop
xchg
cs
add
in
jb
sub
shlb
cltd
sbb
mov
xor
xchg
xchg
push
movsl
js
testl
and
and
je
push
fcmovne
pop
aaa
push
jb
aas
push
mov
dec
dec
mov
dec
or
and
adcb
aas
mov
mov
cld
es
fstpt
test
jb
in
lods
jmp
test
mov
out
push
fsubl
popf
fistpl
xchg
ss
mov
out
inc
icebp
add
fisubl
cmp
in
subl
mov
flds
dec
mov
inc
out
repz
inc
jnp
xor
divl
scas
pop
pop
lcall
cmc
mov
dec
pop
cltd
pop
clc
jns
dec
sbb
cwtl
pop
mov
fmull
scas
inc
fildll
aaa
push
mov
cs
dec
xchg
pop
push
jge
leave
adc
test
jbe
jecxz
mov
lods
jo
xchg
adc
inc
ret
fsubl
adc
lock
mov
imul
aaa
cmp
pop
cmp
outsl
cmp
sub
cld
mov
mov
andl
test
xor
popa
inc
or
aaa
out
int3
std
inc
inc
hlt
mov
cmp
xor
lcall
stc
gs
xor
or
dec
fcmovnu
sub
mov
test
outsl
int
fidivrs
sbb
push
lcall
outsl
cld
mov
jle
mov
mov
fbstp
das
cmp
hlt
out
in
cmpsl
jl
sbb
mov
mov
adc
cltd
push
pusha
pop
cld
cmp
aad
loop
mov
cwtl
xor
xor
std
lock
popf
cmp
dec
rcrl
or
jecxz
call
add
imul
popf
in
mov
test
lock
in
mov
jge
dec
and
dec
jl
cmp
sbb
pop
push
pop
shl
pop
loopne
push
or
lcall
ss
jae
xlat
stos
lods
mov
push
xor
lret
roll
mov
fwait
jp
xchg
inc
push
in
dec
sub
push
das
mov
add
out
jl
stc
pop
mov
int
aam
out
jno
ds
xchg
insl
loope
popf
push
sub
leave
push
jbe
aam
jl
mov
xchg
mov
xor
and
and
jle
xchg
mov
aaa
imulw
daa
adc
jae
and
jno
pop
aas
sub
and
jg
inc
dec
inc
lds
aas
mov
add
jne
icebp
lahf
sbb
and
dec
adc
je
dec
movsl
mov
jl
push
shll
je
ds
or
mov
out
lahf
es
push
xchg
ret
leave
mov
xchg
dec
fcomps
add
das
pop
dec
mov
mov
mov
jnp
mov
imul
in
dec
jg
jle
es
aad
out
popf
sbb
push
test
xchg
bound
xor
sub
rdmsr
test
pop
lcall
add
dec
lcall
in
xorl
push
or
mov
jnp
dec
cmp
dec
leave
aam
mov
add
push
and
cmp
ficoml
imul
fdivrl
ss
ret
jl
popf
push
mov
das
jl
dec
mov
arpl
cmpsb
popa
pop
test
gs
aam
and
mov
and
mov
out
mov
pop
push
xchg
mov
movsb
fdivl
cmp
mov
sub
iret
cld
pop
add
adc
pop
sub
pusha
jmp
or
out
mov
inc
or
pop
das
stc
sub
movsl
jb
xlat
mov
inc
jmp
fdivs
add
mov
sahf
mov
nop
pop
fwait
testl
mov
cli
add
sbb
cld
sbb
mov
orl
clc
xor
sahf
outsl
add
xor
sub
scas
mov
pop
inc
mov
pusha
and
imul
add
rol
insb
ja
les
ds
mov
test
daa
jo
xchg
jb
ds
mov
push
imul
mov
loopne
xor
movl
fwait
sbb
sub
sbb
loope
repz
xchg
mov
daa
mov
shrl
mov
in
cmp
mov
pop
repz
xchg
xor
and
mov
call
cld
movsl
sbb
cmc
or
mov
and
xlat
testl
cmpsb
xchg
jne
data16
or
ret
adc
jp
xchg
orb
adc
sarb
ss
sub
inc
mov
ja
fbstp
mov
insl
mov
sahf
push
jnp
inc
cmc
jne
scas
mov
jne
push
int3
inc
enter
ret
adcb
mov
pop
lahf
dec
inc
xor
and
js
and
push
in
adc
jmp
adc
and
xor
pop
add
pop
into
movsb
mov
pop
sub
adc
gs
cmp
and
add
imul
notb
push
dec
dec
jecxz
aam
das
ja
cmpsb
jae
inc
sbb
rolb
scas
push
fdivl
lds
mov
ja
dec
aas
rol
push
xchg
cwtl
sub
xchg
insl
test
jno
out
sub
xchg
ret
lret
adc
xchg
lret
insl
or
cltd
iret
lcall
rorl
ffreep
es
cmp
mov
jbe
lret
add
das
stos
loope
notl
xor
fstps
int3
pusha
mov
and
mov
outsb
ds
les
xchg
arpl
pop
or
push
cmpsb
ja
xor
daa
inc
xchg
mov
mov
pop
shl
mov
test
icebp
test
pop
int3
sub
cmc
int
sbb
popl
jl
push
mov
xor
icebp
psubw
or
loope
xchg
out
xor
les
shll
into
imul
inc
ljmp
jo
shlb
sbb
add
lods
or
mov
movsl
push
fsts
or
lods
mov
push
xchg
mov
std
mov
mov
fistpl
dec
andb
xlat
imul
xchg
ljmp
ffreep
lcall
add
movsl
les
jmp
push
leave
repz
pop
fs
inc
pop
jbe
popa
les
fbld
pop
das
mov
fsubl
fsubl
mov
jno
mov
push
jnp
mov
pop
dec
pop
jle
aad
push
ss
mov
lret
loopne
jae
pop
loopne
xchg
xchg
push
dec
sub
pusha
int
les
cmp
or
cmp
or
or
sub
fs
stos
pop
rolb
sub
mov
scas
mov
mov
pop
cmp
jl
dec
sub
dec
imul
inc
xchg
inc
cli
jns
xor
dec
mov
mov
dec
cmpl
inc
movsl
test
lret
jecxz
mov
cmp
dec
insb
xor
aaa
jae
gs
shlb
es
add
fcompl
lods
scas
add
loope
fcomi
xchg
inc
cmpsl
inc
jg
mov
int
add
mov
xchg
sbb
gs
add
test
mov
in
ss
pusha
aaa
popf
call
inc
insb
xchg
popa
popa
jo
mov
popa
adc
mov
cmpsl
add
xor
and
shll
push
ljmp
imul
out
sbb
lret
dec
lret
jge
sbb
xor
xchg
ljmp
int
mov
pop
lods
inc
movsl
inc
cmc
xchg
adc
sbb
test
jb
into
in
mov
stos
inc
sahf
cld
lahf
roll
xor
inc
pop
jnp
dec
add
and
jae
and
xchg
enter
frstor
mov
mov
inc
in
dec
int3
ss
shrb
or
mov
data16
dec
ljmp
into
fildl
mov
push
mov
jnp
jnp
adc
pop
aas
ljmp
in
inc
mov
adcl
ds
pushf
into
cmpl
jle
add
mov
push
int3
in
daa
into
movb
push
sub
jg
sbb
fsub
add
shl
push
mov
sbbb
test
jae
mov
in
leave
in
mov
lahf
mov
shll
outsl
out
cmp
ds
addl
inc
and
iret
jae
pop
ds
mov
je
test
fcomp
inc
sub
scas
insl
out
lcall
stos
mov
lds
pusha
scas
inc
shrb
int3
sub
aam
scas
aam
lcall
mov
inc
mov
adc
xchg
xor
aad
test
rorl
pusha
test
bound
inc
cmp
lret
sbb
dec
outsb
nop
cmp
daa
xor
or
cli
and
fsts
cmc
std
das
pop
mov
out
xchg
popa
mov
ljmp
sub
add
xchg
dec
xchg
dec
loope
inc
ja
cmp
sub
mov
and
mov
test
test
jo
jns
mov
and
nop
xor
and
dec
pop
ja
mov
inc
sub
xchg
xor
iret
or
mov
aam
jg
shlb
inc
cmc
jnp
dec
sahf
push
addb
mov
inc
push
or
stos
outsb
dec
xor
call
iret
cmpsl
pop
xchg
stos
or
fwait
xchg
mov
fnsave
enter
cwtl
jne
dec
dec
lahf
mov
inc
adc
les
or
push
sti
rcl
stos
mov
jg
rcrl
pop
cmp
fsubr
addw
cwtl
lret
lret
xchg
push
insb
jbe
das
test
frstor
mov
pop
js
dec
pop
test
mov
mov
xor
xchg
mov
test
stc
mov
imul
xchg
into
popa
ficomps
and
icebp
sahf
push
xchg
push
adc
imul
push
xchg
inc
inc
push
in
out
out
mov
pop
inc
or
mov
jl
push
xor
ret
adc
mov
shl
outsb
imul
paddw
outsl
popf
pop
lods
dec
mov
lahf
insl
jge
or
iret
cmp
pop
in
paddw
outsl
popf
pop
lods
dec
mov
lahf
insl
jge
or
iret
cmp
lahf
in
paddw
lea
pop
lods
iret
mov
lahf
insl
jl
or
iret
cmp
pop
in
paddw
outsl
popf
pop
lods
dec
mov
xor
test
ret
es
inc
push
push
jg
add
push
adc
xlat
xchg
mulb
xchg
arpl
jae
inc
push
push
jbe
and
inc
addr16
cmpsb
repz
ret
xchg
not
out
add
ss
push
pop
push
dec
jbe
sub
inc
or
mov
xchg
xchg
icebp
scas
cld
inc
das
inc
add
outsl
xor
jmp
repnz
cmp
sarb
insl
cmp
jl
ljmp
sti
add
data16
sub
mov
jae
imul
dec
sbb
or
test
sbb
mov
xchg
insl
or
ss
add
push
and
xchg
inc
add
or
cmpsb
lahf
out
jl,pn
andl
mov
jecxz
inc
stos
or
jnp
pop
scas
or
cmp
mov
or
fstps
in
xchg
repnz
icebp
mov
cltd
data16
sub
mov
xchg
cmc
je
arpl
pop
push
push
jbe
xor
inc
or
fiaddl
stos
cltd
xchg
push
arpl
push
es
adc
or
outsl
ret
mov
repz
ret
mov
cmpsl
mov
in
mov
inc
or
jne
inc
cmp
and
and
xchg
rcll
roll
out
arpl
jae
daa
arpl
xor
xor
inc
adc
ret
xchg
mulb
xchg
arpl
jae
inc
push
push
jbe
xor
inc
adc
ret
xchg
mulb
xchg
arpl
mov
jns
cmpsb
test
lods
push
int
or
jp
pop
fucomi
test
push
xlat
jo
into
ja
shll
fisubrl
les
cmp
pop
dec
or
mov
out
inc
sub
std
dec
mov
xor
mov
add
scas
mov
jo
adc
in
xor
xor
lret
xchg
lods
xor
out
stos
and
add
in
enter
in
nop
loope
and
mov
xchg
ret
pop
sub
dec
test
and
xchg
or
sub
xchg
or
mov
sti
mov
and
js
mov
push
cld
jb
call
cmp
loope
lret
ljmp
xorb
xchg
sub
push
pop
lds
mov
push
daa
add
pushf
inc
and
iret
or
popf
pop
xchg
mov
cmp
xchg
push
insl
xchg
sub
mov
add
cli
ret
mov
and
movsl
inc
dec
adc
pusha
cli
xor
lea
stc
sbb
mov
in
xor
cld
adc
add
ja
mov
xchg
aas
push
dec
bound
jns
xchg
and
fstp
in
in
mov
test
ss
sarb
out
out
xchg
icebp
push
aas
inc
sub
push
mov
adc
mov
and
mov
in
and
sub
mov
out
push
mov
lea
rcrl
add
and
mov
fistps
mov
cmp
or
pushf
sti
hlt
pop
lret
push
mov
adc
cli
jl
sub
mov
jge
ds
andb
push
inc
stos
add
enter
xchg
lea
and
xor
aas
subl
pusha
push
mov
mov
testl
addl
mov
pop
addr16
or
jb
adc
jg
cmp
out
mov
inc
mov
jb
inc
pop
ret
add
stos
cmpsl
jne
je
pinsrw
xchg
adc
loop
cmp
out
repnz
fmull
cli
cmp
mov
cmp
enter
in
aas
arpl
cwtl
pushfw
dec
jns
cld
push
fnstcw
push
inc
sub
cmpsb
xlat
pop
sbb
call
stos
adc
jb
pusha
or
ret
fwait
push
lds
stc
cmp
jg
push
mov
popf
mov
and
dec
jae
adc
push
and
and
pop
mov
inc
into
lcall
bound
inc
dec
dec
jmp
in
sahf
dec
js
dec
xor
add
pop
mov
mov
fadd
fs
pop
dec
ljmp
std
arpl
icebp
cltd
test
loop
test
cltd
jge
xchg
icebp
xchg
push
ret
push
xor
or
fiaddl
mov
inc
cmp
pop
dec
je
xchg
lds
arpl
push
loopne
pop
sbb
mov
cmpsb
pop
sahf
mov
adc
mov
xchg
rcrl
jmp
out
lods
jmp
pop
xor
pop
sahf
mov
iret
flds
jge
xchg
sub
or
or
out
mov
outsl
mov
inc
aam
pop
or
xchg
mov
loop
sub
rorw
lcall
pop
xchg
cmp
in
and
inc
std
ret
fadd
sub
cmpsb
lret
sbb
imul
push
cmp
insb
mov
jbe
pop
sub
fldcw
or
pushf
pushf
minps
movsb
out
mov
fwait
lcall
add
inc
jae
add
in
aam
inc
fwait
je
sbb
insb
insb
ss
insb
xchg
mov
and
lcall
or
mov
es
xor
push
stc
repnz
inc
sub
pop
fmuls
sti
xor
pushf
pusha
and
add
or
flds
leave
dec
das
incl
xchg
fdivrl
push
xchg
xor
loop
loope
pop
pop
ja
cmpsl
sarl
jns
add
arpl
jmp
mov
stos
mov
jg
jge
mov
stc
and
push
jmp
jb
xchg
in
add
int
nop
call
insl
push
dec
test
movsl
clc
insb
push
pop
popf
nop
mov
and
sub
add
pop
jo
or
test
sub
aad
cmp
in
jge
mov
mov
bound
ljmp
pop
rolb
push
out
add
pushf
mov
ja
sbb
xchg
pop
pop
pop
cmpsl
inc
mov
out
test
cs
ret
lret
lods
movsl
xor
inc
pop
pextrw
xor
adc
daa
jmp
push
ficomps
jle
mov
mov
inc
xor
xchg
imul
call
sbb
dec
add
push
out
stos
sub
call
sub
bound
test
adc
repnz
sub
jbe
cmp
leave
sub
mulb
dec
std
push
sub
test
pushf
pop
mov
std
pop
mov
jg
int
je
leave
mov
push
pop
rep
pop
gs
jnp
fsubl
mov
out
jl
movsb
fists
sbb
mov
sub
js
jae
repnz
iret
mov
dec
movsb
nop
inc
fidivrs
mov
pop
jg
icebp
adcl
nop
push
in
call
mov
dec
push
xchg
jl
stc
cmp
cmc
std
pop
xorb
scas
lahf
scas
cmp
aas
arpl
lret
jle
jnp
fimuls
mov
cmpsb
mov
sub
cmpsl
int
test
lds
xchg
mov
add
roll
mov
pop
dec
jge
fnstenv
lods
mov
lar
test
stos
and
movsl
cltd
mov
jp
in
mov
xor
push
ud0
mov
pop
xchg
sbb
and
out
aad
es
push
xchg
push
fisttpll
shrl
sbb
loopne
fstp
repz
add
das
sub
adc
jg
inc
fcompl
stc
negb
pushf
lock
push
push
std
lahf
daa
push
push
xlat
inc
in
or
cmpsb
push
pop
cmpsl
jno
mov
pop
inc
dec
nop
inc
adc
push
mov
les
lock
orb
xchg
jnp
jp
rolb
fdivl
adc
out
stc
in
pop
test
mov
mov
mov
mov
imul
aas
sar
cmpsb
xlat
pop
outsl
lahf
sbb
and
push
mov
inc
mov
cmc
sbb
dec
aas
cmp
shlb
cmpsb
testb
out
lods
sub
and
mov
ret
sahf
sbb
and
inc
pop
sbb
pop
mov
or
testl
mov
pop
not
dec
mov
fidivl
mov
push
ljmp
jge
and
or
or
jno
sarb
fimull
repnz
mov
xorl
push
aad
xor
nop
or
pop
shll
lcall
jge
movb
inc
std
imul
jno
xlat
dec
idivb
jle
stos
add
test
cmp
icebp
xchg
xorb
dec
fldcw
sbb
loope
jg
sub
sti
pop
ja
nop
jns
fdiv
popa
jmp
addr16
je
jg
mov
sub
adc
cmovp
xlat
cmpsl
clc
pop
sbb
sub
pop
sbb
cltd
das
les
sub
out
xchg
mov
dec
push
insl
aad
dec
pop
jp
fnstsw
repz
out
inc
pop
rcr
rcr
dec
mov
out
int3
shlb
push
jb
pop
je
sbbl
mov
loop
fchs
mov
loop
stos
enter
mov
test
mov
sub
mov
mov
push
test
add
lods
ljmp
add
imul
and
pop
mov
mov
dec
imul
lock
cmpl
scas
and
sub
push
jmp
jmp
or
test
inc
xchg
push
fcmove
mov
xchg
arpl
fsubrs
adc
push
add
mov
sbb
ret
fidivrs
push
jl
xchg
or
pop
add
cmp
push
in
cli
cmp
add
imul
inc
xlat
mov
repz
stc
aaa
jmp
fwait
shl
int3
mov
adc
stos
cmpb
arpl
cli
imul
int3
xchg
sub
icebp
inc
add
xchg
add
or
jbe
sbb
js
mov
out
cmc
rclb
push
clc
mov
dec
jg
cmp
lds
push
imul
mov
enter
js
push
or
pop
jecxz
pop
loope
lock
mov
xor
jecxz
dec
stos
mov
pop
mov
rcrb
inc
mov
xorb
jns
sahf
rol
jbe
pop
add
xcrypt-ecb
cmpsl
iret
inc
repnz
cli
jp
stos
je
enter
sub
test
pop
subb
mov
or
and
cmp
loop
mov
call
lcall
jmp
mov
push
ffree
sub
imul
lret
sub
add
push
lock
mulb
subl
jl
jge
js
sbb
sub
scas
ss
out
add
mov
push
int
pop
testb
inc
adc
mov
adc
jmp
lock
test
xchg
std
mov
fcompl
daa
push
and
mov
lods
sbb
insl
pop
into
dec
sbb
cs
outsl
out
cmc
insb
and
add
hlt
cmp
dec
mov
ror
jo
sbb
pop
insl
sbb
xchg
inc
in
sbb
cwtl
shlb
mov
stos
fistl
push
and
adcb
cmp
cmp
lret
aad
test
or
int3
and
xor
jecxz
sub
aad
mov
call
xchg
mov
repz
jns
jecxz
cmpl
mov
mov
mov
cmp
je
jae
std
jne
fwait
icebp
lret
push
test
push
xchg
shlb
sub
cmp
insl
inc
or
ret
jl
push
mov
push
sbb
mov
ficompl
mov
inc
sbb
mov
and
daa
push
dec
sbbl
xchg
add
fsub
clc
imul
dec
cli
popf
aaa
mov
push
jae
repnz
jo
jnp
fwait
xor
cmp
cmp
push
les
testl
inc
iret
sti
mov
xor
test
stos
jl
push
add
push
jp
rcr
cmovo
inc
and
pop
mov
mov
add
add
rcl
addr16
scas
jge
lds
or
out
push
xchg
imul
pop
lods
arpl
inc
sti
ret
pop
dec
iret
imul
push
push
out
test
mov
out
sub
lock
int
pop
jecxz
sbb
jp
push
lods
lods
sbb
pop
mov
pop
repnz
mov
loop
sbb
dec
aas
xchg
xchg
jmp
xchg
inc
cmp
mov
or
inc
test
jns
and
test
mov
fdivrs
mov
adc
adc
dec
cmp
jmp
enter
and
cmc
push
jo
inc
mov
sbb
in
aaa
movb
lret
or
and
sub
aas
popa
and
sub
mov
dec
rclb
pop
insl
gs
xchg
test
cmc
push
ljmp
mov
lea
cmp
shrl
jmp
sub
pushf
cmp
sub
stc
imul
jnp
cld
sbb
sub
add
setbe
leave
sbb
fcoml
insb
add
mov
dec
icebp
into
adc
cmp
loope
xor
fiaddl
test
cmpsb
pop
or
sub
outsl
xor
repnz
jns
out
mov
pop
mov
cmp
imul
jge
push
lods
pop
mov
inc
push
lds
dec
mov
inc
out
push
inc
dec
testb
jnp
mov
lods
mov
enter
push
pop
popa
lds
divl
push
icebp
xor
or
add
arpl
add
outsb
and
and
sarl
jo
or
inc
and
mov
sbb
ja
sar
es
and
and
mov
push
test
aaa
in
cld
cmp
js
mov
adc
pop
movsb
jg
in
ret
pop
insb
dec
or
push
shll
sbb
xlat
fcmovu
push
ret
jno
pop
jno
dec
sahf
ret
cmp
xlat
sub
ss
jnp
pusha
cmpsb
outsl
jnp
mov
test
jae
movsb
lds
aam
es
dec
jnp
add
xor
insl
aaa
mov
add
sti
or
scas
imul
dec
sub
and
fcmovnb
jecxz
pop
jne
fdivp
push
mov
pusha
push
xor
gs
jg
mov
std
pushf
ficomps
mov
aas
stos
mov
mov
adc
out
shlb
xor
sub
jno
xchg
imul
lock
rcll
sarl
mov
sbb
es
jnp
cmp
sub
adcb
arpl
mov
sub
fsubrl
loopne
sbb
cmp
xchg
cld
movsb
mov
mov
sahf
xchg
in
ds
sar
mov
lds
jl
mov
mov
lods
cli
dec
stos
les
and
pop
imul
push
pop
fmuls
push
dec
arpl
out
push
ret
in
push
jae
es
cs
push
shl
pop
test
inc
imul
mov
jb
iret
or
imul
xor
sahf
je
mov
test
ret
xor
or
add
push
fs
push
test
adc
cltd
pop
ret
cmp
inc
cmp
js
scas
xchg
and
sbb
aam
add
jmp
fsubr
rcrl
pop
repz
jne
adc
movsl
push
xor
aas
aaa
addr16
loop
fnstsw
mov
push
rcr
inc
inc
inc
push
push
xor
mov
sub
lods
cld
sbbb
xchg
dec
in
xor
test
hlt
push
dec
push
inc
pop
in
push
mov
ss
push
ret
adc
aas
cmpsl
loopne
ja
popa
dec
lock
sbb
mov
divl
add
xorl
inc
pop
mov
dec
out
stos
je
mov
inc
xchg
insb
out
fwait
sbb
sub
in
notl
leave
inc
stos
or
btr
jne
mov
pop
insl
loop
pop
jg
rolb
mov
inc
mov
mov
sbbl
mov
xchg
add
movsl
inc
pop
mov
push
ret
aad
push
lcall
iret
repnz
sub
sti
xor
or
inc
mov
arpl
sub
pop
lea
cmp
pop
inc
cmp
rcrl
jo
popa
inc
and
and
pop
test
ljmp
adc
sub
frstor
int
mov
insl
mov
sbb
ljmp
movsb
mov
shlb
mov
jge
cmpl
xor
jmp
out
fnstsw
orl
adc
sbb
fiadds
jo
outsl
stos
imulb
xchg
push
push
mov
xchg
insb
clc
shlb
dec
push
lock
push
pop
sti
pop
pop
lret
dec
xor
sbb
cmp
pop
push
gs
test
fidivs
xor
jbe
jl
rorl
lds
pop
pushf
mov
lods
sub
mov
and
and
cld
arpl
jb
call
mov
sbbb
xchg
pop
out
xor
push
or
outsl
cmp
xor
pop
inc
jno
xor
in
stos
mov
mov
sub
jne
in
xchg
lock
rcrl
mov
in
push
icebp
mov
pop
shrb
inc
movsl
push
xor
sub
ljmp
rcrb
pop
sbb
testb
fiaddl
rsqrtps
fwait
cs
xchg
adc
mov
in
inc
cmpl
test
dec
addb
enter
imul
push
scas
outsb
lds
pop
testl
pop
pushf
adc
mov
sbb
mov
cld
add
jp
fwait
adc
adc
inc
sbb
push
mov
imul
pusha
sbb
cltd
sub
pusha
gs
cmpl
loopne
imulb
fimuls
insl
or
stos
fincstp
pop
fs
aam
icebp
sub
hlt
cmpsb
push
push
xchg
add
push
push
sub
das
iret
adc
mov
pushf
sbb
sub
inc
xchg
pop
xor
imul
mov
or
stc
inc
jp
adc
push
jle
adc
int3
jg
loope
xlat
pop
aas
lret
in
int3
cmp
pusha
sub
xchg
jnp
call
cmp
lahf
push
cmp
adc
cld
or
daa
bound
adc
push
mov
add
outsl
jle
sbb
aam
push
jnp
mov
pop
push
jne
xlat
mov
cli
lcall
adc
aam
add
sbb
shlb
jbe
mov
testl
test
jns
mov
dec
xchg
mov
pop
push
fdivrs
shll
mov
adc
or
xchg
leave
into
insl
sbb
mov
xchg
popl
pop
sbb
xchg
mov
jo
xor
mov
push
push
outsl
pop
inc
push
adc
cmp
xchg
sbb
and
es
lock
clc
adc
jbe
in
mov
nop
insl
cld
notb
and
sub
pop
push
lods
outsl
hlt
mov
outsl
xorl
and
push
cmp
or
push
popa
lret
and
out
add
lret
xlat
fcoml
inc
dec
in
add
jl
xor
inc
inc
mov
xchg
movsl
and
adc
stos
and
fcoms
jg
cmpsl
pop
mov
enter
rorb
pop
mov
loope
ret
inc
lret
jge
mov
jb
adc
test
mov
lret
arpl
sahf
dec
sbb
fcompl
xchg
push
mov
dec
daa
dec
aad
movsb
orl
and
adc
xchg
jl
inc
sbb
ficompl
call
lds
in
lods
popa
sub
daa
mov
and
fs
clc
lods
inc
popa
and
lahf
add
fidivl
pop
mov
cmpsb
int3
pop
cmpps
xchg
mov
pushf
xor
aaa
lds
dec
jl
movsl
pushf
out
aaa
mov
adc
push
inc
push
jae
lahf
iret
mov
mov
mov
int
mov
pop
je
xor
dec
cld
inc
mov
aam
add
xor
roll
push
cmp
inc
pushf
mov
pusha
lods
add
cmpsl
and
pop
leave
stos
es
cmc
and
and
inc
mov
pop
les
sub
and
push
pop
dec
inc
jo
and
test
jo
into
movsl
push
out
and
cld
or
clc
mov
pop
scas
cmp
fucomi
xchg
mov
push
inc
push
andl
ja
mov
out
scas
ret
mov
rclb
sbb
cltd
mov
loope
jecxz
das
lret
and
mov
mov
fidivrl
dec
mov
xor
outsl
or
mov
pop
out
or
arpl
addb
lret
popa
cmpl
dec
sbb
jl
call
jmp
pop
insb
mov
pop
sub
mov
adc
cmp
add
repnz
mov
mov
sti
stos
lods
push
scas
cmp
js
inc
lds
mov
cmp
sbb
fldt
lods
fcoml
andl
les
inc
xchg
mov
push
adc
lods
jp
rcrb
pop
imul
xor
call
arpl
and
xchg
mov
fnstenv
inc
lret
fsubr
mov
test
push
add
dec
lock
imul
lods
dec
fists
je
mov
mov
cmp
jge
rcl
out
in
mov
xor
mov
imul
xchg
xor
push
and
aad
or
mov
int3
adc
mov
xchg
daa
xchg
jecxz
test
mov
nop
xlat
cmpsb
push
mov
xchg
mov
aad
xchg
sub
adc
push
xchg
aam
adc
pop
xchg
jmp
adc
aaa
test
and
mov
ret
xor
fisttpll
mov
cwtl
in
push
push
push
jbe
xor
inc
adc
ret
xchg
mulb
xchg
arpl
jae
inc
push
push
jbe
xor
inc
adc
ret
xchg
mulb
xchg
arpl
jae
inc
push
push
jbe
xor
inc
adc
ret
xchg
mulb
xchg
ss
inc
push
push
jbe
xor
add
rorl
pop
pop
cmp
xchg
cld
ds
dec
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lahf
testl
fdivl
in
addr16
sub
pop
aaa
dec
daa
jl
jl
clc
testl
cld
xchg
in
lcall
or
pop
push
sub
sbb
dec
daa
jl
insb
pop
and
jle
xlat
je
ret
cmpsl
loop
in
xchg
das
inc
push
and
jo,pt
jns
je
test
scas
mov
xchg
int3
mov
pop
xchg
aas
adc
mov
aaa
js
push
outsl
cmp
sub
mov
and
popa
ljmp
and
pop
xchg
push
test
rcll
dec
and
sub
sub
dec
and
daa
mov
push
mov
pop
incl
and
cmpsb
add
in
jns
mov
mov
aaa
dec
fnstcw
insb
push
arpl
xor
aas
inc
ja,pn
cmpsl
cmp
sub
imul
pop
pusha
stc
arpl
push
push
xchg
mov
outsl
add
or
aaa
pop
je
pop
outsl
adc
neg
out
xlat
lods
cmp
dec
xchg
ja
addr16
push
sbb
adc
inc
daa
dec
pop
insb
outsb
cmc
repz
cmpsb
enter
mov
mov
rcrl
pop
pop
xor
je,pn
inc
adc
xchg
jmp
mov
test
jecxz
cmp
push
cmp
push
and
inc
sub
scas
frstor
int3
cmpsl
cld
xchg
in
xchg
or
cmp
sub
pop
aaa
dec
daa
jl
insb
pop
pushf
testl
cld
xchg
in
xchg
or
cmp
sub
pop
aaa
dec
daa
jl
insb
pop
pushf
imull
jle
insb
add
xchg
sbb
jne
cld
pop
pop
pop
and
jmp
lret
sarl
testb
les
popf
ja
les
test
pop
sbb
push
inc
loope
in
mov
cmpsb
rorl
or
dec
mov
push
fs
movntps
lock
pop
les
inc
aas
pop
shll
pusha
repnz
xchg
sbb
insl
test
mov
popa
push
pop
shll
ret
mov
cmovp
mov
loopne,pn
add
mov
mov
jmp
andl
cmp
clc
sub
xor
lahf
shll
lcall
xchg
sbb
ret
clc
sub
popa
cmp
scas
mulb
imul
out
and
pop
scas
or
sbb
inc
ljmp
mov
dec
adc
bound
mov
jg
stc
rol
sti
into
fstl
jmp
fistpll
insb
loope
test
lods
xchg
xchg
mov
mov
pop
lods
fbld
loopne
shl
adc
push
cld
xchg
outsb
cwtl
shrl
push
fwait
pop
cld
add
loop
sbb
out
punpckhwd
retw
mov
ja
ja
lods
bound
dec
test
jp
icebp
and
push
or
cmc
in
xor
xorl
push
jg
test
int
mov
enter
ljmp
push
into
pop
rclb
mov
jb
outsl
addr16
loope
sbb
jbe
pop
push
test
or
scas
shrb
ret
push
lea
sbb
clc
add
jo
xor
shrl
xchg
mov
mov
and
stos
push
pop
es
iret
pop
push
xchg
cmp
mov
shlb
mov
sbb
gs
loop
xor
push
fwait
cmpl
or
mov
shll
dec
xor
ldmxcsr
mov
pop
dec
ficompl
add
or
or
out
das
or
ret
jae
mov
daa
hlt
bound
scas
out
adc
pop
mov
loop
push
add
out
mov
cmp
push
and
cmp
inc
repz
clc
pushf
cmp
fistl
lret
pop
mov
in
mov
xchg
in
and
mov
push
rep
movsl
jecxz
and
dec
mov
xchg
jl
push
in
jae
dec
test
xor
xor
and
cmc
jge
mov
je
nop
sbb
pop
dec
jl
js
pop
cmp
mov
rol
mov
adc
lahf
pop
xor
jns
mov
xchg
xor
lret
and
outsb
outsb
in
sub
sbb
jp
mov
movsb
push
repz
loope
and
xor
jno
scas
jg
lds
outsl
dec
imul
test
not
jo
inc
inc
cmp
das
subl
mov
add
es
and
jmp
je
pop
fsubrp
cmpsl
mov
mov
push
add
cmp
mov
xchg
sub
xadd
repz
xor
cs
fcoml
test
or
xor
std
test
jmp
xor
cmp
jno
loope
cmp
and
or
jl
fdivrs
dec
and
sbb
js
cwtl
mov
fbld
lea
push
mov
or
push
inc
es
cmovp
push
dec
or
ljmp
fs
ficomps
fcompl
js
or
dec
pop
inc
insl
pop
in
dec
add
fmuls
ror
cmpsl
lahf
jge
mov
xchg
lods
push
fwait
cwtl
pop
xchg
inc
push
bound
vpsubb
insb
sbb
sub
jge
jbe
mov
inc
roll
test
or
mov
pop
arpl
popl
pop
cli
cmp
jo
test
ljmp
mov
mov
mov
push
dec
and
jb
outsw
divl
mov
pop
int3
dec
xchg
jae
enter
xor
orl
fadds
hlt
mov
inc
jnp
sub
mov
pop
push
nop
fs
xor
sbb
rep
jecxz
es
sbb
jmp
out
jecxz
cmpsl
mov
fisttpl
data16
rorb
mov
mov
add
pop
cwtl
fmul
and
add
mov
hlt
lcall
lea
jo
sbb
mov
mov
jmp
xlat
outsl
mov
mov
leave
xor
xchg
xor
sub
dec
sbb
mov
ds
fcoms
test
fcmovnu
sbb
pop
add
je
jecxz
push
imul
and
jmp
xor
popl
push
test
nop
push
popa
clc
stc
sbb
jns
xor
mov
mov
lea
mov
fisttpl
js
push
inc
xchg
lret
cmc
outsl
xchg
sbb
ja
adc
aam
inc
push
adc
or
inc
out
outsb
xchg
mov
ret
dec
insl
nop
push
mov
inc
fsubrl
loope
mov
outsb
test
ljmp
repnz
dec
add
insb
sbb
xor
push
dec
adc
cld
fdivs
pop
std
xchg
xor
push
filds
out
jg
daa
inc
cmpsb
mov
addr16
pop
out
imul
jb
loop
add
fstpt
mov
mov
mov
ret
xchg
sbb
mov
nop
les
sti
mov
in
leave
rcrb
movsl
xchg
xchg
add
dec
jo
shll
xor
xchg
movsl
sbb
push
pop
lods
adc
xchg
scas
dec
pop
repnz
dec
cltd
mov
repnz
sbb
in
fistps
decl
lret
sub
add
mov
out
fidivrl
jae
xchg
cmp
xor
jecxz
inc
test
push
sub
outsl
xor
pop
movsb
aam
mov
fwait
pusha
sub
movsb
js
aad
fidivl
xlat
scas
xchg
push
out
sbb
leave
stos
pusha
fnstsw
push
stos
mov
cmpsb
jae
bound
jge
adc
inc
mov
test
popa
daa
add
pop
imul
xchg
push
mov
add
imul
outsl
rcrl
mov
out
leave
or
cmpsb
cmp
xor
add
mov
sbb
stos
inc
shrb
jecxz
sub
cwtl
jmp
xchg
icebp
pop
das
jnp
mov
adc
out
mov
int
in
push
sbb
rcll
pushf
jae
pop
data16
xchg
out
test
pop
xor
lods
xor
lea
cmp
add
dec
int3
repz
mov
int
lcall
in
inc
cmc
dec
xor
xlat
or
push
pop
push
jle
loop
in
scas
mov
cli
pop
xchg
jge
mov
mov
mov
arpl
jbe
push
cmp
fcomp
int3
les
js
inc
fistpl
sub
fnstcw
xlat
shlb
jae
xchg
daa
jmp
mov
push
cmp
bound
pop
sbb
sbb
xchg
lcall
and
mov
xchg
cmp
testl
loope
xchg
arpl
xchg
push
lea
cmpb
xor
jmp
pop
mov
int3
mov
xor
je
dec
repz
adc
adc
xor
inc
icebp
ror
aam
sub
xchg
mov
rol
sbb
push
push
rorb
inc
xchg
mov
xchg
xor
xchg
clc
clc
mov
bound
lret
push
test
and
fucomi
scas
cmp
xchg
jle
ror
insb
ret
xchg
repz
movsb
adc
aam
pop
mov
dec
xchg
inc
mov
pop
inc
and
sbb
mov
jmp
sti
inc
test
pop
jl
hlt
inc
mov
sbb
fdivp
jecxz
and
add
repnz
addr16
test
mov
in
data16
es
das
ret
mov
cmp
xor
scas
push
into
inc
mov
nop
fcom
inc
dec
xchg
and
fsubrl
stc
into
test
sbbb
mov
cmp
inc
pop
pop
rcl
dec
sub
lods
fs
sti
jg
sub
jg
jge
fidivrs
and
add
mov
int3
inc
ljmp
ljmp
mov
and
and
pop
pusha
or
sahf
push
nop
xchg
and
sahf
xchg
je
pop
add
int
push
adc
dec
rorl
xor
shll
and
sbb
add
lods
adc
mov
jns
or
jne
pop
mov
arpl
jg
adc
cltd
stos
test
pop
push
shufps
inc
xor
mov
pop
inc
roll
dec
mov
mov
lds
popa
movsb
mov
lcall
loopne
mov
mov
mov
std
sbb
adc
xor
insb
jns
cmp
lret
sub
mov
xchg
test
sbb
loop
ss
lea
sarl
and
mov
ficoml
out
ljmp
popa
jb
in
jmp
fisubrl
sub
add
pop
lock
fimuls
stc
mov
cmc
mov
dec
shrb
pop
je
lds
pop
dec
mov
mov
add
jns
pop
and
push
jne
inc
jbe
inc
sar
cmp
aam
xor
mov
rorb
cli
fildl
lcall
mov
enter
xchg
dec
lcall
loopne
sub
test
mov
push
xchg
loope
cmp
xor
ljmp
push
sub
popa
jnp
add
stos
bound
dec
aam
lahf
adc
lcall
clc
mov
sbb
das
std
pop
bound
scas
inc
mov
lea
cmp
sbb
cmpsb
int
sbb
in
add
xchg
mov
jge
or
imul
out
cmc
movsb
popf
dec
xchg
dec
sub
push
aam
jbe
mov
push
pavgb
cltd
mov
idiv
push
or
sbb
cmp
xchg
and
cmp
inc
lahf
jge
rcll
jae
inc
pusha
pop
jmp
test
mov
fwait
les
adc
shll
add
insl
push
xchg
cmp
sub
sub
jl
cmp
xlat
lret
dec
push
lret
aas
andb
int3
xor
imul
cmp
xorl
xchg
jae
loope
inc
or
xchg
fcos
xor
pop
lret
mov
mov
cmpsb
les
dec
out
cmp
into
icebp
and
mov
pop
mov
push
or
stos
iret
call
imul
cmp
cmp
stos
jnp
mov
xchg
jo
sub
jne
jge
data16
das
movb
push
pop
sub
sub
jecxz
fnsave
push
in
add
xchg
stos
xchg
xchg
aad
in
fcmovbe
pop
mov
push
mov
xchg
mov
xor
fimull
mov
mov
or
xor
lea
addr16
ss
int
pop
adc
out
adcl
mov
repnz
jo
sbb
pop
jns,pn
sbb
and
in
xchg
and
xor
data16
or
test
cs
mov
cmp
sbb
test
mov
in
lods
test
test
cli
cli
jge
test
call
mov
sbb
pop
lds
xor
std
jnp
aad
mov
inc
outsl
mov
xchg
aaa
inc
push
arpl
call
mov
sub
adc
sub
xchg
cmp
push
and
dec
lret
and
jg
xchg
out
inc
cmp
dec
rorl
adc
out
jnp,pn
mov
in
mov
ds
cmp
jl
xor
aaa
sarb
daa
xor
ds
fdivl
mov
incb
xchg
push
movsl
xchg
mov
sub
push
inc
mov
push
popa
add
sub
loopne
popf
and
xor
out
pop
gs
adc
test
into
sub
gs
pop
sbb
pop
outsb
cmpsl
aam
loopne
mov
dec
test
mov
out
mov
dec
jg
pop
jae
incl
pop
sub
pop
mov
dec
cmp
scas
stc
imul
ficoml
loopne
push
pop
call
addl
imul
and
jnp
jo
test
lea
gs
ret
in
jnp
out
dec
loopne
adc
mov
and
pop
loopne
adc
push
insb
repnz
xlat
icebp
aam
sub
cwtl
rclb
xchg
jmp
cmp
pop
pushf
nop
mov
adc
pop
jo
sub
and
sub
dec
push
mov
sub
pop
cltd
jo
ds
mov
and
mov
xchg
or
xchg
lret
lods
fimuls
loope
shll
cmp
cld
test
dec
scas
gs
adc
cmpsl
icebp
rorl
mov
sbb
adc
add
dec
cltd
xchg
test
fstpl
dec
pop
xchg
pop
pop
jp
cmp
xor
cmpsb
mov
leave
int
jmp
pusha
ljmp
cmp
daa
xchg
dec
lock
push
mov
push
into
xchg
loope
pop
fidivs
dec
xchg
fdivs
mov
pop
or
pop
aas
push
lds
icebp
xchg
xor
mov
sbb
rcll
push
movsl
sbb
jb
and
das
lcall
mov
fistps
adc
fldenv
jno
inc
sbb
aas
inc
pop
mov
not
xor
lods
nop
arpl
in
mov
fildll
sbb
fisttps
jmp
imul
fs
add
add
jae
mov
push
mov
stos
dec
gs
mov
lahf
xor
push
popf
sysret
call
mov
jo
mov
xorb
stos
idiv
inc
xor
inc
movsb
scas
xchg
dec
das
sub
imul
jecxz
xchg
push
push
sub
rcr
push
jae
adc
not
lock
sbb
xlat
dec
lret
adc
cli
lahf
test
es
mov
fstpt
js
jp
lret
fstp
out
mov
mov
jg
rolb
js
pop
outsb
loopne
sahf
mov
jb
xchg
mov
push
inc
notl
aas
in
mov
jb
sub
shrb
lock
int3
out
add
ret
mov
in
popa
mov
ss
mov
lcallw
ja
pop
dec
sahf
mov
cld
mov
ret
pop
adc
in
scas
icebp
popa
mov
addr16
mov
jg
subb
shrl
lahf
lret
lahf
push
repz
xchg
aaa
ss
dec
push
inc
xchg
in
inc
push
jg
lea
stos
push
ficomps
das
hlt
leave
ja
mov
jle
add
je
fdiv
hlt
inc
int
js
icebp
std
mov
mov
aaa
xchg
fwait
push
ljmp
push
and
lcall
orb
mov
bound
ror
ret
sbb
dec
in
pusha
mov
imul
les
lock
sbb
or
inc
jle
repz
mov
cmp
adc
jle
push
push
push
mov
push
mov
push
and
cmp
fcoml
out
js
stos
xchg
mov
fbstp
repnz
into
daa
and
pop
push
jg
aas
andl
test
lods
mov
pop
dec
sbb
pop
neg
or
dec
ror
or
into
jl
or
iret
inc
shl
sub
add
or
inc
mov
jecxz
mov
and
sub
out
test
cmp
pop
flds
cmpsl
xor
enter
add
jno
mov
ret
in
jecxz
push
xor
stc
ret
ret
insb
mov
adc
adc
stc
movsb
movsb
hlt
push
imul
clc
scas
int
cmp
scas
push
xlat
in
xchg
push
cld
out
inc
fmull
jg
pop
and
movsb
inc
pusha
shrl
xchg
mov
and
fwait
jg
or
push
mov
push
stos
fdiv
or
push
ss
aad
jmp
add
hlt
sarb
mov
push
inc
aad
add
dec
repz
test
sbb
jge
lret
rorl
push
fldt
repnz
ffreep
mov
inc
or
adc
mov
jb
xor
jg
pop
xchg
dec
push
pop
test
mov
mov
imul
ret
arpl
bound
clc
test
inc
clc
push
jecxz
fwait
adc
jne
xchg
xchg
cs
jg
xchg
inc
mov
aaa
in
sub
fiadds
sub
push
jb
lock
ret
aas
imul
or
ljmp
jg
into
ret
mov
ss
lock
adc
cmpsb
imul
in
ficoml
fiadds
xor
stos
test
sbb
and
outsl
cmp
pop
push
mov
bound
adc
mov
sub
iret
dec
outsb
xchg
out
push
mov
inc
movsb
das
mov
adc
inc
sbb
insl
push
adc
pop
flds
test
ret
mov
loop
add
shrl
out
rorb
push
push
or
loope
test
lock
jb
add
cmpsl
inc
cltd
push
in
shld
cmp
out
in
xchg
mov
and
int3
call
mov
and
insb
pop
jnp
andl
push
add
mov
adc
nop
inc
es
mov
lds
jge,pt
cmpl
dec
pushf
das
push
sub
movsb
mov
pop
shr
call
jge
pop
inc
ret
daa
dec
test
rcr
and
maxps
rcll
cli
lods
push
jo
arpl
lea
jmp
movsb
lcall
dec
sub
xor
shrl
inc
into
push
adc
aad
pop
cmp
rcrl
push
adc
fs
mov
or
sub
push
imul
outsl
dec
mov
ret
jmp
and
out
nop
sub
mov
mov
les
pusha
dec
adc
inc
cs
xchg
addr16
xor
dec
push
in
test
push
out
mov
imul
out
add
jmp
pop
jmp
hlt
in
aad
xor
outsl
mov
bound
sarl
mov
push
adc
mov
mov
pop
vpshlq
jb
push
add
and
stos
or
dec
loop
jl
repz
mov
and
jb
dec
mov
add
leave
das
fsub
imull
xor
sub
adc
jne
sub
pushf
filds
push
mov
dec
stos
sbb
arpl
jns
cwtl
fldcw
xor
mov
jns
push
daa
outsl
push
cmp
inc
xor
inc
cwtl
popf
or
loope
xor
adc
xchg
flds
aas
and
xor
mov
into
adc
mov
cmp
jno
jg
push
repnz
nop
jns
add
iret
push
call
push
mov
inc
std
icebp
clc
pop
sub
jno
pusha
push
les
lahf
xor
leave
jmp
mov
adcl
adc
or
adcb
inc
insl
pop
jnp
lds
jmp
rcrl
cs
mov
and
es
imul
and
les
das
outsl
arpl
ud1
nop
cmp
into
sub
add
mov
adc
or
pop
in
inc
ret
bound
dec
mov
pop
inc
sbb
add
repnz
adc
test
in
sbb
inc
add
xchg
lcall
push
pop
inc
xor
fildll
sub
data16
jle
test
sbb
pop
jbe
mov
ret
cmp
jae
ficoms
sbb
and
mov
mov
popa
add
dec
gs
cmp
ds
xchg
fcoms
adc
jp
out
jmp
adc
ret
mov
mov
je
les
jnp
mov
fisubs
jno
das
sbb
insl
rorl
fbstp
jp
pop
cmp
jae
lcall
cmp
imul
inc
mov
jg
dec
jbe
pop
mov
jo
mov
out
vpaddw
rcrb
and
popf
xor
xchg
das
inc
add
jns
adc
push
adc
lcall
and
jb
lds
adc
xlat
xchg
inc
cmp
pop
mov
mov
xor
pushf
sub
jns
negb
or
lret
out
test
loop
mov
dec
rclb
dec
in
repz
inc
loope
mov
mov
inc
rcrl
out
out
xlat
lods
fdivl
in
xchg
or
cmp
sub
pop
aaa
dec
daa
jl
insb
pop
pushf
testl
cld
xchg
in
xchg
or
cmp
sub
pop
aaa
dec
daa
jl
insb
pop
pushf
idivl
dec
mov
cmpsl
cld
xchg
sub
sbb
or
int3
push
sub
pop
aaa
pop
daa
jl
test
mov
shl
out
mov
fdivl
insb
xchg
repz
push
sub
sub
xchg
clc
push
mov
fsubrl
jnp
add
int3
push
fcomps
sbb
cmp
dec
fwait
mov
insb
mov
pushf
imul
sub
cmp
fwait
or
sbb
and
cmp
lcall
mov
pop
in
ss
xchg
pop
out
into
lret
or
aas
lea
dec
stos
pop
cmp
push
enter
jnp
das
decl
add
and
clc
xchg
jecxz
outsb
jo
push
xchg
ficoms
xchg
mov
inc
or
push
fdiv
inc
pop
ftst
push
add
mov
loopne
rcll
insb
push
pop
or
sub
xor
in
lds
sti
dec
andl
and
mov
add
mov
push
mov
pushf
push
test
mov
sub
jno
mov
cmp
mov
pop
cmpsb
popa
xchg
push
mov
jae
or
mov
int3
clc
int3
js
fwait
dec
sti
aas
into
icebp
into
jae
arpl
jecxz
scas
pushf
ret
pop
and
sti
push
push
and
sbb
subb
imul
mov
sub
subl
dec
mov
cs
jmp
test
cmp
shlb
outsb
mov
cltd
pop
mov
mov
or
xor
sbb
adc
sub
mov
bound
dec
iret
rep
lcall
add
pop
fimuls
cli
ljmp
sbb
cmp
dec
sbbb
sub
cmp
lret
or
sbb
sub
cmp
dec
fwait
pop
stos
insb
mov
pushf
imul
sub
cmp
lret
or
sbb
sub
cmp
dec
fwait
pop
stos
insb
mov
lret
and
inc
stos
je
dec
inc
pop
ret
mov
data16
mov
or
les
sti
mov
mov
cs
adc
jne
push
mov
sub
sahf
cltd
push
jne
outsl
or
int3
gs
mov
ret
mov
insl
lods
and
sahf
fcomps
repz
mov
cmpl
jp
imul
sti
push
dec
xor
in
rorb
data16
cmp
xor
push
push
lahf
mov
xor
mov
loop
je
enter
and
callw
xchg
push
push
jle
inc
xor
dec
pop
repnz
mov
lcall
xor
jns
sarb
jl
mov
dec
cli
mov
mov
sti
dec
or
adc
dec
lods
jbe
movsl
lret
push
xchg
out
adc
or
popl
lret
int3
imul
mov
clc
stos
mov
pop
adc
stos
js
xor
lea
das
xor
test
adc
into
mov
ret
jns
xor
xor
adc
js
out
addr16
xor
int
ljmp
and
mov
push
pop
pop
adc
push
jbe
in
xor
cmc
push
sbb
mov
fistpl
cmp
imul
ret
mov
jbe
out
test
stos
jns
cmpsb
dec
cmp
out
dec
mov
push
sbb
testb
sbb
movsb
mov
ds
shrb
sti
add
inc
pop
fs
cmp
fsubl
addr16
xor
in
cmp
loop
adc
xor
sti
jne
sub
adc
lret
fnstsw
es
pop
out
ret
xchg
sahf
push
push
cmp
push
adc
push
lds
mov
mov
xchg
call
add
int
mov
jnp
mov
mov
and
sbb
ffreep
stos
mov
add
mov
sub
enter
mov
out
fwait
xlat
outsl
mov
cmp
sbb
mov
dec
and
mov
push
push
rcrb
out
enter
cmc
pop
sub
stc
std
add
sub
cwtl
jae
imul
inc
mov
xchg
dec
jg
cld
lods
cld
inc
or
cmp
mov
add
stos
cltd
clc
cmpsl
loopne
mov
sub
mov
sbb
inc
dec
ja
sarb
push
cmpsl
cwtl
pop
dec
or
xchg
es
dec
out
jecxz
jmp
pusha
les
push
jg
mov
xchg
rcll
add
xor
lret
js
ss
pusha
loope
shll
xor
inc
gs
subl
popa
daa
xchg
fmul
cmc
push
and
sarl
in
pop
sub
in
mov
enter
popa
into
xchg
mov
rorb
push
ds
xchg
jns
daa
fldenv
ret
adc
jl
cli
push
incl
ret
lret
sahf
mov
dec
andl
fisubrs
enter
mov
mov
sahf
sbb
push
ret
sbb
iret
and
xchg
ficoms
xchg
push
inc
leave
cmp
mov
call
inc
fisttps
movsb
rcll
cmpl
xchg
fdivrl
sub
outsl
sarb
ret
aas
adc
or
mov
lods
push
sub
cmp
mov
or
lret
jg
adc
sbb
adc
mov
in
scas
adc
daa
dec
lock
gs
shrb
scas
pop
cmp
out
int
xor
push
fwait
inc
jo
and
lret
xchg
pop
pop
and
jb
jb
inc
pop
jae
in
sbb
sub
push
shll
xor
jne
call
sti
xchg
icebp
dec
add
jns
test
pop
scas
mov
loope
mov
out
insl
mov
lret
add
adc
lea
mov
dec
imul
inc
pop
rorb
inc
mov
add
or
mov
nop
and
inc
aad
shlb
stos
add
xchg
push
loop
add
int3
in
clc
fiadds
jge
jb
sub
jnp
inc
and
xor
xchg
movsl
pusha
call
lods
scas
imul
orb
xor
aam
cmp
push
enter
mov
dec
std
adc
or
scas
adc
xchg
mov
test
xchg
inc
out
subb
xchg
ljmp
rorb
jae
sub
out
dec
pop
rcrl
dec
stc
mov
cmpl
jmp
shrl
inc
stos
rorb
andb
xchg
gs
dec
fnsave
cli
bound
test
xorl
jae
xor
mov
sbb
push
test
cmpb
sbb
rcrl
negb
test
jo
dec
fildl
negl
js
xor
enter
mov
shrl
std
scas
test
cld
adc
testl
fcomip
jecxz
out
call
lret
out
pop
jmp
pop
orl
pop
ja
pop
aaa
dec
jmp
repnz
cmp
adc
adc
ljmp
jb
mov
cld
or
add
outsb
xchg
push
arpl
sbb
pushw
faddl
stc
inc
push
mov
xor
jbe
xorl
iret
js
xor
test
push
fnstsw
jp
cmp
roll
das
sbb
xor
ja
jno
in
cmp
in
lea
lods
call
mov
pop
dec
jns
lret
sar
cwtl
pusha
jle
jle
leave
negl
push
dec
aam
mov
xor
sub
imul
test
or
out
inc
dec
rcll
xchg
or
jb
sarb
mov
sbb
test
pusha
cli
js
inc
inc
lods
pusha
lret
inc
lret
and
inc
jmp
sbb
filds
lret
dec
push
lods
and
outsb
mov
jge
insl
into
push
movsl
mov
mov
fidivs
sub
enter
sbb
sti
dec
cmpsb
insb
adc
jmp
mov
add
ffree
xchg
sub
xor
out
jns
out
and
or
fdiv
lret
test
cs
call
out
mov
mov
inc
xlat
cmp
sub
aaa
and
xchg
pop
mov
xor
mov
xorb
loope
inc
mov
gs
push
mov
adc
imul
fidivs
movsl
sbb
dec
aaa
xchg
mov
sahf
or
movsl
push
mov
sub
gs
adc
out
in
jae
mov
clc
inc
test
push
push
jo
in
lea
mov
push
rclb
inc
and
or
lret
daa
sbb
xor
and
pushf
aas
stc
inc
ret
iret
popa
mov
icebp
nop
in
dec
lcall
in
mov
mov
push
push
ret
adc
dec
enter
es
mov
je
pop
jp
add
pcmpeqw
xlat
iret
loop
rorb
cli
cmpsl
adc
movsb
icebp
mov
iret
inc
jg
and
adc
out
xchg
in
jle
xchg
in
mov
xor
jo
fdivl
and
pop
lds
shrb
cmc
mov
sbb
lret
repnz
in
loope
int
xchg
aas
rorl
mov
call
lods
pusha
js
cmpsl
movsl
or
test
add
pop
ss
shr
aad
cmp
xor
shll
lahf
movl
test
or
pop
jle
cmp
and
cmp
add
sti
push
mov
adc
pop
push
xor
sbb
inc
jge
sahf
and
xchg
sbb
mov
dec
pop
jg
fists
mov
cmp
cmp
adc
movsl
cltd
aas
jmp
frstor
inc
jmp
subl
mov
arpl
clc
push
das
and
or
ds
push
pop
jecxz
xchg
jae
and
mov
xlat
dec
in
xlat
inc
aam
rcrb
push
mov
loope
dec
ret
aas
sbb
jp
cmpsl
or
sbb
and
out
pop
push
xlat
nop
mov
lock
ret
xchg
mov
jo
mov
sti
shrl
xchg
or
dec
lcall
push
cwtl
push
push
mov
rorl
dec
mov
repnz
cmp
xor
inc
add
mov
lea
add
dec
inc
pop
fmull
and
push
repz
bound
movsl
xchg
and
fs
add
sbb
xchg
push
call
test
sbb
hlt
cld
call
pop
cmp
fisttps
sti
add
pandn
push
subb
lods
ret
sub
xor
fmull
inc
loop
jl
inc
add
mov
mov
pop
fsubrs
xchg
pop
sbb
mov
ficoms
push
push
jae
pop
push
sti
mov
or
repnz
xor
inc
lcall
jge
cld
and
mov
inc
mov
xchg
xor
jg
loop
roll
loope
leave
sar
push
sub
fldcw
mov
repz
dec
mov
inc
or
fcmovnu
and
rclb
mov
mov
push
inc
ret
jne
xchg
addr16
push
push
jp
icebp
xchg
inc
shll
imul
push
shll
inc
xchg
pop
pop
jp
mov
lcall
xchg
mov
popa
loope
pushf
mov
xchg
push
movsb
cmp
lea
xchg
xchg
push
mov
cmc
push
hlt
or
push
std
push
add
inc
dec
sbb
aad
pop
adc
repz
ds
dec
movsl
int
dec
xchg
stc
xor
je
xchg
mov
adc
sbb
xchg
movsl
xchg
aad
adc
mov
mov
into
pop
inc
mov
shrl
sbb
adc
repnz
int
int
sbbb
aaa
outsl
mov
add
sub
mov
aaa
jb
sub
jge
xchg
xor
inc
arpl
movsl
ret
cmc
inc
sbb
rorw
lcall
mov
xlat
test
cld
inc
jnp
xchg
xor
xor
cmp
mov
add
dec
test
push
push
lods
or
jmp
xchg
sub
mov
inc
mov
aam
xchg
mov
push
dec
icebp
adc
in
dec
inc
sub
test
add
xchg
ljmp
cli
out
mov
push
std
incb
or
mov
add
sub
sub
push
cmpl
sub
and
lahf
daa
enter
cli
mov
push
stc
js
ficoms
cli
aaa
sahf
xchg
out
xchg
adcl
iret
rcrb
shlb
std
fbld
mov
hlt
les
clc
scas
xchg
add
jb
roll
mull
stc
cmp
in
mov
xchg
shl
xchg
mov
les
cld
rcll
mov
rcrl
jno
mov
outsl
sahf
es
fs
in
loope
stc
shl
mov
mov
popa
push
testl
and
push
cmp
mov
jo
cmp
stos
adc
dec
add
scas
sub
aaa
mov
shll
mul
movsl
add
mov
shrb
clc
mov
cmp
push
or
in
or
stc
or
clc
repnz
aaa
mov
scas
xchg
add
xor
sbb
popa
add
loope
loop
xor
mov
clc
xor
mov
and
test
les
jmp
ret
scas
in
adc
sub
xchg
cli
das
ss
mov
pop
fwait
sbb
or
loope
mov
js
pop
gs
int
insb
loopne
int3
jae
dec
repz
add
test
movsl
xor
inc
sbb
je
add
push
or
xchg
loopw
and
or
rolb
inc
lds
xor
mov
mov
pop
std
mov
fst
lcall
mov
pop
outsb
leave
push
pop
movsb
push
pop
hlt
addr16
fs
mov
cmp
mov
xor
push
mov
cmp
lret
test
xor
mov
push
or
mov
cmp
push
stc
lock
es
mov
sub
test
dec
or
xor
es
push
inc
push
pop
push
jns
cmp
push
pop
add
cs
jns
ljmp
das
out
repnz
sub
addr16
ret
cld
shlb
hlt
shl
dec
sub
daa
pop
mov
jmp
jg
outsl
add
or
subb
xchg
loope
sub
ret
mov
and
dec
imul
mov
insl
dec
mov
pop
mov
insb
xlat
xchg
mov
imul
loopne
out
mov
mov
ret
xchg
pop
pop
mov
test
mov
cwtl
in
dec
fwait
dec
sub
mov
ret
fisttpll
inc
lret
sub
or
inc
push
incl
lds
mov
inc
out
add
fs
sbb
and
adc
pusha
in
lds
xchg
jg
popa
popa
repz
aam
and
add
inc
mov
test
jl
jb
mov
cmc
mov
mov
dec
out
push
fisttpl
movsb
out
mov
pop
ret
sub
jg
push
mov
repz
stos
clc
mov
test
out
mov
pop
out
sbb
gs
push
sub
sbb
nop
push
stc
xor
mov
dec
stos
testb
int3
push
les
repnz
repnz
es
sarb
xchg
std
sbb
mov
pop
aam
or
ljmp
test
and
dec
push
adcb
push
mov
insl
shlb
es
push
stos
lock
jg
cs
int3
out
mov
push
not
sub
inc
insb
ret
imul
call
mov
mov
inc
fldl
insl
scas
pusha
outsb
into
mov
jne
inc
repz
data16
jae
mov
xchg
lret
cwtl
mov
lcall
push
int3
movsl
or
out
mov
jge
sbb
adc
popl
fwait
movsl
sbb
lret
pop
dec
js
mov
fnsave
cmp
jecxz
jle
dec
hlt
mov
testb
cs
jg
gs
sub
cli
push
jo
jle
lret
cmp
or
dec
jo
shl
call
lahf
jmp
cmc
in
bound
push
xor
lret
test
and
cmp
or
imul
stos
push
pop
in
imul
notb
dec
stos
mov
mov
cs
cld
pop
adc
sbb
movsl
mov
out
add
cmpsl
sub
incb
cmp
mov
aad
jae
push
scas
ljmp
fstpt
repnz
dec
jp
rorb
in
bnd
rsm
pop
in
push
lods
or
xor
insl
cmp
pusha
cli
loope
call
bound
fldl
mov
stos
or
je
and
dec
mov
loopne
and
mov
mov
sbb
ret
pop
rclb
xor
outsb
add
mov
loopne
fsubl
cmp
ja
add
cwtl
jecxz
mov
loop
sub
negb
dec
xchg
lret
out
add
push
dec
add
nop
pop
inc
adc
dec
mov
addr16
and
xchg
bound
xchg
xchg
mov
jae
jo
push
loopne
cmp
insb
cs
repnz
pop
xchg
add
loope
fstps
pusha
push
fisubs
mov
sbb
xchg
sbb
push
sub
mov
je
into
xlat
sub
repnz
sbb
inc
fwait
cmp
roll
lds
data16
push
adc
mov
xchg
push
aam
addr16
imul
dec
outsl
inc
scas
iret
rcl
pushf
iret
andl
insl
sub
add
cmp
outsl
int
inc
xor
jo
jp
loope
popf
ss
jmp
or
fidivl
repz
cmp
jb
js
push
cli
push
xchg
test
jno
push
pop
icebp
xchg
adc
fs
repz
sub
jno
push
outsl
mov
push
lahf
bound
dec
jb
mov
xchg
pshufw
lods
add
xor
in
mov
xlat
divb
cmpsb
aas
push
fcoms
mov
lds
scas
xchg
popa
jp
lods
movb
inc
cmp
xchg
push
mov
xor
mov
hlt
hlt
sub
mov
jno
je
and
call
daa
push
rcr
das
arpl
das
inc
jns
fiadds
lahf
dec
cs
notl
sub
das
mov
shrb
scas
xor
popa
inc
pop
enter
or
jmp
mov
push
fistpll
das
adc
cmpsl
cwtl
call
in
mov
mov
add
sub
or
xchg
mov
movsl
pop
in
push
mov
mov
pop
aaa
mov
fisubrl
call
andb
rorl
loope
call
cltd
pop
jp
test
ja
test
push
xchg
popl
icebp
inc
push
outsl
loop
inc
inc
jge
or
popa
mov
sar
lret
mov
aad
and
jno
add
outsl
dec
adc
push
add
loopne
xchg
divb
xor
std
in
call
cli
jbe
in
xor
jns
or
loop
sbbl
mov
out
jbe
or
cld
cmp
mov
in
cwtl
pop
dec
add
loopne
test
dec
push
pushfw
int3
int
pop
xchg
xor
int
mov
icebp
fwait
or
out
dec
lock
pop
icebp
out
dec
jnp
push
shlb
test
and
aam
dec
dec
mov
dec
xlat
mov
dec
stos
mov
test
jl
mov
xchg
aaa
pop
into
ss
push
sbb
popf
push
test
les
sahf
out
loop
inc
and
ljmp
enter
pop
or
add
popf
in
movsb
sar
xlat
push
push
lcall
sub
inc
and
jg
aad
cs
test
pop
add
xor
das
add
repnz
dec
out
mov
pop
jbe
mov
dec
xchg
les
push
mov
cld
mov
push
shrl
or
movsb
jno
push
cmp
pop
out
xchg
test
xchg
push
mov
jbe
pop
inc
mov
cmp
add
push
popf
cmpsl
sbbl
mov
popf
mov
sbb
push
cmpsl
insb
jae
pushf
push
repz
call
lock
mov
sub
daa
repnz
xchg
into
loopne
xorl
jp
mov
mov
mov
dec
cmp
aam
rorl
or
test
cld
imul
enter
mov
test
dec
pop
dec
adc
cltd
add
mov
loope
push
pop
push
sbb
xor
jns
in
ljmp
pusha
loope
push
mov
pop
mov
in
cmp
mov
push
xor
lea
cmpsb
roll
leave
sbb
test
and
xchg
iret
jg
es
out
test
cli
mov
xor
push
aas
mov
jg
mov
std
dec
leave
mov
shlb
mov
pop
xor
mov
scas
xchg
cli
in
pop
test
lods
push
dec
or
out
es
in
mov
inc
imul
lods
cmp
push
lock
pop
or
xor
xchg
push
repnz
arpl
popl
dec
out
jmp
jbe
gs
out
push
xchg
fimuls
loopne
pop
jle
in
sub
in
stos
ss
inc
dec
xor
jns
jo
jne
aaa
sbb
sub
je
lock
jbe
push
push
cmpsl
dec
outsl
loopne
push
jmp
adc
paddsw
mov
add
mov
mov
mov
daa
jl
add
insb
mov
loopne
push
cmp
xchg
adc
sub
and
jno
jmp
add
or
fmuls
cmp
pop
push
loop
jp
pop
or
push
mov
pop
aad
pusha
bound
fdivs
test
in
jns
mov
and
cmpsl
lods
mov
cmp
xchg
mov
ret
fisttpll
mov
inc
js
sub
loop
mov
mov
mov
sbb
mov
mov
xchg
inc
int3
cld
lods
insl
dec
enter
hlt
sub
xchg
enter
fucomi
shrl
push
dec
mov
sbb
fists
jbe
push
mov
fsubrs
mov
dec
cmp
shrb
pusha
mov
adc
add
sub
sub
fsubp
std
aas
test
jne
or
xchg
dec
pop
fsubl
push
in
jb
stos
mov
lods
rolb
mov
roll
mov
mov
push
dec
dec
sub
adc
repz
ffree
cmpsb
dec
fcoml
sub
push
outsb
xor
mov
aam
sbb
call
jl
movsb
adc
in
fbld
jo
pop
jecxz
and
xchg
loop
xor
xor
push
adc
mov
arpl
jb
cmpsl
or
aad
icebp
pushf
pushf
inc
test
sbb
sub
cmp
lret
or
sbb
sub
cmp
dec
fwait
pop
stos
insb
mov
pushf
imul
sub
cmp
lret
or
sbb
sub
cmp
dec
fwait
pop
stos
insb
mov
xchg
jnp
jnp
or
pop
mov
call
fistpl
loop
pushl
scas
mov
jecxz
push
cld
or
or
sub
lret
repz
inc
sub
dec
cld
xor
and
adc
add
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
pop
or
push
cld
push
rol
or
add
add
add
add
in
add
add
xor
adc
sbb
mov
in
add
jo
mov
mov
cld
add
les
rolb
add
add
add
lock
popa
add
add
add
add
add
add
sti
add
mov
hlt
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
mov
pop
add
xor
jb
push
add
push
sldt
add
add
add
les
sub
push
add
push
add
add
inc
add
add
add
adc
push
add
sub
add
add
add
add
pop
add
dec
add
add
add
lea
push
adc
addl
jns
adc
mov
add
add
add
inc
add
fs
add
add
sub
and
hlt
add
add
add
jns
filds
push
add
cmp
mov
loopne
ljmp
add
add
add
add
add
les
push
add
inc
add
add
add
add
add
add
add
fldl
loopne
es
add
xchg
jne
dec
add
add
outsl
add
sub
add
add
add
add
test
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
fldl
add
add
add
add
inc
add
jmp
pop
add
mov
dec
add
add
xchg
sub
add
push
add
add
fs
add
add
add
push
add
inc
add
mov
pop
add
add
and
cmp
stos
add
add
add
add
add
add
add
add
add
add
dec
add
testl
jno
inc
add
add
call
add
add
add
add
push
add
add
add
dec
add
add
add
add
add
popf
add
add
add
add
add
add
inc
add
roll
add
add
add
inc
add
lock
add
dec
add
add
add
add
add
add
or
testl
or
cmp
inc
add
call
add
add
or
jmp
adc
cmp
add
add
add
adc
adc
enter
rolb
dec
add
add
push
add
ja
push
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
push
add
add
add
add
mov
add
adc
inc
add
dec
add
add
add
add
movsb
add
str
jg
je
and
xor
inc
add
add
xor
add
add
add
add
add
addb
add
pop
add
add
add
add
jmp
add
inc
add
test
testl
mov
add
add
xlat
add
sub
test
jno
mov
add
mov
testl
push
add
and
xchg
add
add
add
aad
mov
mov
jl
int
dec
dec
sbb
mov
popa
loop
sbb
test
call
and
test
mov
sub
mov
jp
jno
jecxz
push
and
mov
notl
pop
loopne
or
test
inc
incl
pop
sbb
dec
cmpsb
mov
cmp
mov
push
std
push
sub
js
lcall
fidivl
int
mov
inc
sbb
sbb
xor
jbe
inc
cmpsb
xor
mov
pop
pop
mov
ss
rcll
xor
lcall
loopne
addr16
fs
movsb
dec
mov
into
fildl
mov
xlat
sti
mov
pop
inc
add
inc
hlt
enter
push
js
insb
jecxz
cmp
incl
xor
testb
cmp
scas
xlat
mov
pop
enter
ds
stc
mov
out
mov
fwait
icebp
aas
fnstenv
loopne
or
sbb
rcll
loopne
jmp
insl
inc
enter
mov
push
popf
xchg
mov
in
pop
out
lock
push
or
aam
jns
add
in
cmp
push
les
int3
inc
xor
or
and
mov
mov
scas
jns
das
xor
insb
in
jge
mov
or
inc
xor
pop
bound
xor
je
test
jp
lds
popf
xor
rcrb
push
dec
sbb
pusha
jns
fsts
scas
out
mov
pop
dec
test
dec
inc
popa
cmp
inc
jecxz
adc
lcall
xchg
sarl
loop
and
mov
and
and
pop
jmp
pusha
and
in
push
ss
adc
rorl
enter
add
ljmp
push
popf
mov
movswl
sub
mov
sbb
shl
pop
addr16
mov
lods
inc
sub
popf
insb
clc
adc
cmp
mov
add
hlt
dec
rcrl
mov
lret
fadds
sahf
out
aas
sub
push
push
cwtl
lahf
jmp
mov
cld
mov
cwtl
or
push
xor
lock
cwtl
iret
jg
stc
mov
fwait
and
and
push
punpcklbw
into
xor
faddp
hlt
stc
popa
mov
loop
fwait
push
scas
repnz
in
xor
pop
mov
mov
out
insb
mov
or
ja
sub
mov
lcall
mov
dec
orl
push
jno
push
xchg
cmp
shll
fldcw
leave
lret
inc
mov
cmpsb
or
jo
leave
pop
dec
leave
dec
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
