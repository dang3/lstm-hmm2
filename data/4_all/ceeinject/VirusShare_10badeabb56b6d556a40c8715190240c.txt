call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pushf
test
xchg
out
divb
mov
hlt
add
push
xor
inc
push
push
es
je
test
xchg
movsb
divb
in
xchg
dec
add
adc
and
pop
push
es
test
xchg
movsb
out
mov
les
hlt
inc
add
aaa
or
pop
sub
pop
or
pop
add
negl
cmp
xchg
jg
int
and
fwait
cmp
out
out
inc
aam
pop
push
insb
jg
adc
jmp
fstpt
mov
fdivrl
push
scas
jbe
jae
mov
aaa
inc
add
adc
stc
mov
icebp
mov
push
mov
loop
lds
adc
clc
ds
loop
mov
push
inc
mov
adc
je
inc
sub
pop
cmpb
mov
hlt
dec
sti
test
xor
pop
pop
inc
stos
or
xchg
es
subb
sbb
jge
add
adc
push
push
add
fs
test
xchg
out
loope
xchg
les
pop
add
adc
and
xor
inc
push
push
es
xor
in
cmc
loop
sti
mov
xor
adc
sbb
jb
inc
push
push
adc
call
hlt
xlat
repnz
xchg
lret
fiaddl
and
data16
gs
and
shl
notb
hlt
inc
add
adc
and
xor
inc
push
push
es
test
xchg
out
divb
in
hlt
inc
add
adc
and
xor
inc
push
push
es
test
jae
xor
adc
and
jecxz
daa
cmpsb
aas
sub
fwait
pushf
andb
sbb
adc
xor
aas
inc
adc
in
push
sahf
jae
enter
mov
mov
arpl
fistpll
jge
insl
xchg
loopne
mov
testl
out
and
cmp
push
dec
push
push
inc
dec
or
aas
stc
cmpb
and
rorl
int3
popf
cwtl
inc
call
pop
pop
std
sub
pop
push
aam
sbb
pop
subb
inc
cmp
and
sahf
inc
xlat
and
pop
pop
push
fs
aam
and
sahf
imul
daa
mov
scas
imul
mov
imul
aaa
out
ja
addr16
mov
daa
adc
pop
lods
ret
cmp
lods
mov
push
xchg
cmp
and
xchg
mov
popa
jns
adc
sbbb
movsb
lods
and
inc
clc
leave
scas
sbb
sbb
push
ljmp
inc
lret
push
popa
and
adc
nop
popf
sahf
cmpsb
xor
jne
or
movsb
adc
rolb
imul
pop
lods
xor
and
repz
mov
mov
pushl
mov
fidivs
mov
sti
notb
inc
outsb
insl
imul
lahf
aas
les
std
lret
push
mov
mov
inc
cmc
mov
iret
cmp
cmp
adc
xor
addl
cltd
push
mov
mov
mov
adc
call
ss
popa
add
adc
lcall
fcoms
dec
push
in
xor
repz
subl
call
pop
or
shll
add
adc
int3
sbb
je
and
fwait
and
int
xchg
fsubr
stc
adc
icebp
jle
int3
xchg
sub
mov
in
adc
js
subl
or
mov
jg
dec
fildl
push
mov
mov
dec
sub
ret
fdivl
or
out
or
sar
enter
sub
or
jg
dec
mov
jae
pop
lods
jnp
mov
pop
outsb
ret
xor
jo
lea
lret
adcb
mov
xchg
in
imul
insl
add
jmp
aad
jae
xor
xor
mov
in
push
push
js
adc
fsubl
jmp
mov
inc
inc
mov
aas
clc
mov
cli
xchg
pop
inc
test
aam
popa
shl
es
adc
dec
jo
sub
js
flds
stc
fnsave
shl
xchg
scas
aaa
cs
jge
push
es
or
dec
faddl
jmp
push
mov
dec
or
imul
mov
jne
push
into
mov
sbb
inc
out
dec
movsl
push
shlb
mov
sbb
mov
inc
das
and
xchg
idiv
and
adc
cmpl
pop
sub
lock
rclb
in
dec
pop
adc
dec
push
outsb
mov
aad
bound
push
mov
jae
jo
cld
jns
and
inc
lods
sbb
fidivrl
mov
mov
pop
stc
out
lcall
jb
aad
mov
bound
pusha
loop
incl
dec
sub
mov
push
add
dec
into
loop
ficoms
adc
int
inc
mov
adc
movsl
pop
das
mov
jmp
fdiv
popa
cld
repz
jmp
push
out
data16
add
sbb
ss
sbbl
lea
cltd
cmp
cmp
mov
mov
jg
dec
cli
xchg
loop
push
mov
inc
jo
ja
dec
std
imul
cltd
mov
and
repnz
pushf
outsb
inc
mov
push
mov
adc
ljmp
dec
out
mov
xor
lcall
rolb
ja
inc
sub
test
and
mov
daa
adc
cltd
inc
xor
test
dec
enter
jno
std
sub
inc
mov
push
mov
repnz
push
push
push
call
fcoms
xchg
mov
jp
and
pushf
das
add
xchg
addr16
je
and
lea
idivb
pop
aaa
ror
jb
sahf
sbb
out
jns
dec
call
mov
fs
dec
leave
and
movsl
in
dec
lds
mov
sub
xchg
je
test
xor
repnz
ja
xor
ja
inc
inc
lock
out
cmp
inc
stos
sbbb
push
push
js
mov
in
sarl
bnd
and
pop
or
divb
mov
dec
das
or
xchg
leave
jge
sub
loope
add
sub
ljmp
cmc
xor
jge
cld
lods
fistl
sbb
orl
aaa
jmp
xor
mov
jb
xchg
fisubl
pushf
mov
push
jg
pop
xchg
aam
adc
mov
ds
adcl
or
xchg
mov
push
dec
out
movb
sub
call
leave
xor
scas
pop
je
adc
or
sub
faddl
inc
test
addl
stos
fidivl
mov
mov
cmp
dec
dec
and
jae
testl
mov
mov
or
mov
out
rcrb
frstor
xor
inc
subl
mov
mov
or
ficompl
jno
jb
into
pushl
cmc
popf
pushf
push
test
insb
pminub
and
stos
stos
in
cmc
pop
dec
jmp
cmp
push
leave
js
leave
mov
cmc
xlat
mov
xor
hlt
mov
inc
idivl
test
push
fisubrs
and
lea
sbb
pop
sar
hlt
sbb
fidivrl
sub
pop
lods
flds
mov
jg
inc
sub
fstpt
mov
icebp
push
adc
shlb
mov
jle
test
loop
jb
mov
add
mov
jnp
sbb
or
cmpsb
out
pop
or
dec
fwait
andl
sbb
jo
and
jl
test
lret
pop
xor
lahf
jl
insl
and
mov
jp
nop
push
repz
xchg
loop
lods
ljmp
sbb
mov
adc
or
imul
sahf
cmc
xchg
mov
js
xorl
jle
xchg
jmp
bound
jmp
or
iret
xor
lahf
cmpsl
inc
add
es
push
out
xorl
std
push
cltd
jle
js
mov
sub
arpl
push
push
add
out
sarl
in
xor
jp
movsl
gs
cmp
sbb
sub
addl
cmp
sbbl
ljmp
mov
mov
xchg
ds
js
mov
mov
in
and
jmp
push
es
out
xchg
test
and
mov
jle
bound
add
lock
cmp
and
or
fs
shrl
outsb
adc
aaa
jo
mov
push
dec
popa
adc
jae
or
jbe
dec
pop
or
pop
pop
push
daa
js
xchg
fwait
mov
rolb
cwtl
dec
sbb
or
mov
and
pop
add
ja
bound
sbbl
dec
pop
sbb
and
and
popf
mov
adc
pop
sti
mov
jne
sbb
xchg
dec
xchg
call
push
lret
scas
mov
fmulp
mov
ror
movsl
dec
fdivrl
cmp
xchg
adcb
push
lret
xor
jne
data16
fidivrl
movsl
mov
sub
cmp
adc
pop
dec
test
lds
jg
or
enter
sub
adc
xor
jle
iret
mov
test
movb
test
xchg
pop
mov
lods
sbb
jo
jmp
jae
mov
mov
icebp
push
pop
sub
mov
lods
fnsave
mov
movsb
in
push
cld
or
jecxz
ja
add
jecxz
add
mov
pop
test
call
mov
push
sub
xchg
xchg
call
cs
popf
mov
outsl
subb
in
and
push
push
dec
add
pop
inc
push
les
stos
mov
idivl
addr16
daa
cmp
cmp
in
mov
call
jge
adc
inc
push
cwtl
mov
cs
sub
pop
mov
insl
pop
mov
mov
dec
mov
dec
dec
dec
mov
mov
mov
xchg
pusha
pushf
mov
adc
xchg
enter
fxch
cli
ljmp
cwtl
cmc
mov
imul
xor
repz
jge,pt
dec
scas
and
jecxz
imul
gs
pop
popa
shrl
fs
inc
pop
xchg
sbb
enter
cld
push
cmc
sbb
les
cmp
jecxz
daa
test
in
and
xchg
cwtl
clc
jb
fs
cmp
or
xor
mov
jp
jl
lret
pop
push
movsl
ja
fwait
dec
out
xchg
sbb
inc
test
sub
jo
xchg
stos
xchg
sub
in
cmpl
adc
sub
cmp
push
ret
jg
mov
mov
shrb
rorl
gs
push
or
jmp
inc
mov
inc
jo
test
mov
das
push
shlb
pop
xorb
popf
pop
mov
dec
xchg
stc
jb
loopne
jne
shrl
push
mov
xchg
rorl
mov
test
pop
aad
cmc
mov
push
sti
push
outsl
dec
and
mov
push
mov
mov
fisubrs
data16
jg
xor
mov
call
xchg
insl
jge
xor
mov
xor
cmpsl
scas
push
sub
movsl
out
outsb
mov
test
mov
adc
shr
push
rcrb
push
pushf
aad
mov
mov
addb
sbb
notl
int
inc
cmp
push
push
jge
jl
cmp
ljmp
xchg
xchg
adc
lcall
popf
and
jp
and
and
inc
dec
jbe
jle
ljmp
mov
data16
sbb
ja
xchg
loop
pop
insb
sbb
inc
sbb
push
ret
xchg
imul
mov
int
adcl
mov
jne
mov
cli
aam
sbb
cmp
cli
push
les
pop
rorb
mov
or
sub
pop
out
mov
es
xorl
or
and
scas
adc
out
nop
jmp
test
mov
dec
je
add
and
xlat
rep
dec
ljmp
or
stc
in
push
lcall
jecxz
std
mov
sahf
add
pop
outsl
std
sub
scas
sub
sub
pusha
test
add
out
inc
popf
pop
test
test
mov
xchg
mov
pop
xlat
xchg
lret
cmp
or
push
test
ret
out
addr16
sahf
jl
jne
jo
add
stos
mov
xchg
jl
pop
mov
stc
bound
dec
push
xor
cwtl
mov
and
and
sti
cmp
nop
adc
shl
jle
iret
in
inc
sub
or
mov
dec
popa
leave
in
ret
enter
inc
xor
clc
and
rorl
xor
pop
push
aad
cmpsl
data16
or
mov
test
cmc
pop
xor
jae
out
testb
jnp
cli
gs
mov
scas
push
and
inc
push
or
xor
mov
lods
sbb
lock
pop
out
mov
jbe
enter
adc
mov
sub
mov
xchg
daa
mov
push
aam
or
mov
add
fldcw
mov
and
mov
insb
sub
cmp
mov
cmpsl
imul
add
jmp
pop
test
jg
and
fildl
xchg
mov
or
fidivs
adc
adc
roll
add
ds
popf
movsb
cli
sahf
out
lock
imul
dec
outsl
push
mov
lret
lods
cmp
lods
cmc
mov
pop
insb
inc
dec
pusha
stos
mov
icebp
mov
sub
movsb
frstor
xchg
pop
mov
xor
in
jnp
movsl
mov
jmp
iret
xchg
shrb
call
adc
js
cmp
sbb
mov
lret
leave
jo
xchg
dec
pop
int3
adc
outsl
imul
iret
stc
push
xchg
xchg
xor
mov
mov
mov
add
mov
xchg
scas
sar
mov
cwtl
pop
ror
dec
and
lahf
pop
aad
sbbb
stos
aam
sbb
out
ret
ret
negl
pop
jl
call
inc
movsl
out
and
and
adc
aas
mov
add
pop
push
dec
leave
stos
addr16
fadds
push
fsubrs
cmp
jg
pop
popa
clc
or
jno
xchg
es
dec
mov
hlt
arpl
or
fnstcw
das
js
dec
outsb
les
cmp
imul
cmpsl
xor
mov
movsb
lcall
lock
xor
fdivs
imul
js
adc
gs
jo
leave
pop
push
scas
fisubrl
sbb
stc
pusha
mov
xchg
mov
and
test
jp
nop
xchg
adc
out
xor
sbb
inc
jmp
out
scas
iret
idivl
xchg
cmp
jo
mov
sub
xor
sbb
jge
loopne
hlt
xchg
jg
adc
adc
dec
sub
pop
sub
and
aam
push
fsubl
test
imul
test
cmp
aas
and
fstps
or
xchg
sbb
stos
lods
mov
stos
adc
pop
pop
pop
dec
jmp
out
leave
scas
sbb
and
xchg
stos
scas
pop
lcall
xchg
cmp
out
movsl
call
in
sub
test
aam
pop
fisubs
call
mov
pop
mov
sbb
jle
xchg
jno
add
mov
or
outsl
ljmp
xor
push
xchg
add
lods
xor
pushl
xor
testl
mov
mov
scas
aaa
stos
adc
int3
fistpll
repnz
sbb
insb
add
out
das
int
adc
in
mov
xchg
fs
xlat
mov
pop
xchg
jae
fisubrl
popa
dec
add
insl
xor
cld
and
ret
aas
inc
aas
sub
mov
jge
mov
notl
test
ljmp
rol
pop
cwtl
mov
arpl
xchg
repz
push
mov
nop
pop
ret
push
adc
iret
xlat
sbb
mov
divb
pop
adc
das
dec
insb
jmp
sub
jge
ja
cmpsl
push
cmc
notb
call
aas
inc
scas
cmp
add
imul
loope
mov
mov
add
in
aaa
leave
mov
popa
sbb
arpl
or
mov
sbb
ds
inc
xchg
cmpsl
ss
shrb
call
xor
sub
or
loopne
adc
imul
jge
mov
iret
dec
sub
sarl
adc
mov
insl
mov
and
andb
stc
inc
movb
sub
push
icebp
push
cmp
push
push
ljmp
mov
aad
shrb
add
lret
push
ret
out
mov
lea
sub
add
pusha
xchg
pop
cmp
test
add
scas
and
in
hlt
xor
xchg
sarb
jno
sub
out
rcr
dec
pop
jne
aam
lret
int
jae
or
fldt
lret
jno
out
out
ljmp
clc
addb
mov
test
js
mov
inc
and
ja
ss
movsl
mov
push
and
cmpsb
sub
ja
lock
icebp
ss
pop
jo
inc
sbb
xchg
or
mov
lret
sub
lock
push
popa
pop
aad
lods
cmpb
mov
fcmove
gs
or
test
push
lahf
adc
test
dec
mov
inc
cmp
inc
cmc
pop
hlt
sub
out
xchg
sub
es
adc
das
and
fcmovbe
and
popf
or
mov
test
call
pop
push
xchg
fsubrl
xchg
call
loopne
sbb
out
lds
dec
inc
mov
push
xchg
loopne
dec
sub
jge
sti
cmp
pop
xchg
repz
lods
incl
inc
or
and
dec
pop
outsb
jns
ljmp
mov
xchg
pop
cmpsl
xchg
adc
jp
scas
mov
adc
out
sub
cwtl
push
sub
jae
fimuls
and
add
and
call
out
sbb
cmp
and
inc
adc
mov
pusha
bnd
mov
mov
mov
clc
cmp
out
insb
lahf
dec
mov
lea
sti
clc
fistpl
mov
movsl
jge
inc
repnz
xchg
mov
add
sbb
aas
push
jle
and
js
sbb
adc
or
jge
xor
mov
mov
xchg
mov
mov
pop
arpl
sub
sbb
inc
push
bnd
cmp
mov
mov
addr16
add
jg
mov
inc
adc
inc
cs
jb
adc
testb
xchg
inc
mov
cmc
inc
test
stos
xchg
jle
xchg
dec
pop
pop
ds
lods
pop
xor
mov
push
push
jg
adc
xor
aam
andb
fwait
push
in
shrl
sbb
add
pop
arpl
sub
push
and
addb
cmp
xlat
jbe
jmp
cmp
fiaddl
repz
fnstenv
adc
sbb
ds
sub
sbb
pop
inc
mov
fdivl
mov
jmp
jp
in
sbb
mov
mov
or
xorb
ja
jle
pop
jl
imul
mov
add
rolb
xchg
adc
into
jnp
xchg
pop
or
popf
ds
les
jb
and
cmp
xor
ret
notl
std
stos
mov
add
xor
ret
test
mov
rolb
or
lock
or
aaa
in
push
mov
rcll
inc
int
xor
fs
sub
sbb
fcoml
repz
cmc
jle
fiadds
pop
lods
mov
push
add
js
adc
das
mov
rcl
adc
scas
push
add
push
cwtl
or
sub
sub
test
mov
cld
stos
mov
test
test
push
in
in
xchg
stos
jb
scas
out
jl
pop
mulb
fmul
add
and
ds
setg
js
dec
shlb
repnz
hlt
mov
adc
das
bound
into
xchg
jmp
adc
out
sahf
and
add
rclb
lds
retw
pop
out
std
pop
insl
push
rcr
popa
xchg
jne
gs
jg
push
mov
shr
loop
pop
loopne
dec
pop
in
test
sub
cmp
enter
jbe
repnz
jo
adc
stos
sbb
adc
test
push
in
mov
sahf
lock
fs
out
and
clc
push
in
fwait
inc
icebp
ret
sbb
mov
bts
mov
cs
ja
leave
mov
jmp
xor
or
iret
and
sbb
dec
arpl
movsl
mov
pop
push
pop
dec
mov
lods
mov
test
js
cmp
inc
xor
ds
cmpl
lock
add
cmpb
xchg
add
pusha
pushf
and
and
icebp
pop
stos
ret
pop
mov
testl
xchg
add
mov
dec
lret
pop
pop
popa
movd
int3
mov
or
push
pop
test
dec
sbb
pop
es
fsubr
xor
cmpsl
pop
out
sub
or
lds
mov
mov
nop
and
sahf
orb
neg
mov
sub
jmp
mov
leave
xchg
in
int
icebp
xchg
push
adc
fmuls
dec
inc
les
in
sahf
in
xlat
dec
inc
inc
out
push
xchg
jl
cli
idiv
xchg
adc
xor
xor
sub
mov
mov
aas
rcll
and
outsb
push
daa
mov
daa
ds
sbb
mov
push
jbe
cmp
xchg
ljmp
and
mov
sbb
cmpsl
iret
leave
out
clc
jge
testb
xor
jb
cmp
call
aad
pop
mov
adc
sub
jo
push
sub
out
andb
and
loopne
inc
jbe
push
mov
adc
and
xchg
mov
jl
ljmp
mov
and
data16
pop
lret
adc
rorl
sahf
xchg
sbb
divb
in
hlt
inc
add
adc
and
xor
inc
push
push
es
test
xchg
out
divb
in
hlt
inc
add
adc
and
xor
inc
push
push
es
test
xchg
out
divb
in
hlt
inc
add
adc
and
xor
inc
adc
pop
je
test
xchg
shlb
aam
in
xor
add
mov
jno
sahf
stos
fstps
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
fwait
lods
or
in
mov
cmp
or
imul
lea
int
std
fucomi
mov
pop
sbb
imul
dec
popf
sub
mov
int
std
xor
or
js
sub
add
add
mov
std
ficoms
in
pusha
push
ficoms
pushf
cmp
xchg
xor
jl
push
xchg
out
push
out
enter
enter
fdivr
ret
fwait
cwtl
mov
bnd
jae
sbb
pop
xchg
sbb
int3
movsl
fldcw
cwtl
inc
sbb
xchg
rolb
fwait
sub
jnp
mov
loope
sbb
lret
jnp
cs
jp
xchg
insl
mov
sbb
jb
out
enter
ffreep
scas
std
shr
lret
jne
js
insl
fsubrl
push
dec
xchg
mov
jnp
push
aaa
mov
mov
mov
sub
loop
fildl
in
adc
jp
xchg
jl
insb
iret
ret
pop
mov
sti
int
std
add
dec
sbb
or
xchg
jge
insl
and
rcr
jecxz
sahf
mov
scas
jne
mov
bound
adc
pop
adc
sbb
ret
ljmp
test
cmpsl
dec
pop
pusha
jge
jle
insb
push
sub
daa
sub
in
mov
call
std
fucomi
lret
sbb
sbb
imul
dec
popf
mov
lods
mov
sti
int
std
fucomi
lret
sbb
sbb
imul
dec
popf
mov
jmp
popl
push
inc
mov
sbb
jnp
iret
leave
jmp
xor
popa
je
xchg
lock
mov
roll
push
xchg
addr16
test
loop
aad
adc
sub
cli
inc
sahf
xlat
jmp
xor
loop
mov
pushf
lea
push
sahf
push
testl
int3
mov
xlat
fldl
or
insl
cmpsl
jp
xor
or
lods
sahf
icebp
mov
cmc
jne
jno
sahf
out
xor
dec
loopne
sahf
mov
testl
sbb
mov
xchg
pop
out
popa
aad
dec
clc
pop
push
jb
stc
out
in
addr16
pop
mov
subb
fcmovnu
clc
or
mov
inc
sub
repnz
test
xchg
lret
pusha
outsl
int
cwtl
xchg
int3
mov
hlt
outsl
pop
mov
test
sbb
pop
dec
pusha
dec
add
jp
dec
icebp
push
jnp
lret
xchg
sub
out
movsl
dec
inc
repz
loopne
into
in
sub
mov
jmp
xor
lods
stos
add
push
leave
inc
pop
stc
inc
into
fwait
in
pop
and
cs
scas
jecxz
inc
test
loop
imul
clc
mov
repz
jnp
cltd
jle
test
sub
mov
js
cwtl
scas
jmp
mov
dec
jns
jl
push
icebp
cmp
and
jmp
pop
out
lods
cmc
rcr
ret
sub
sbbb
push
add
xchg
dec
pop
je
cmp
daa
add
fistpl
mov
gs
sar
cmp
push
ss
mov
sbbl
push
add
dec
xchg
inc
or
out
or
out
pusha
scas
lock
fwait
popf
pop
sub
scas
mov
sbb
out
jp
pop
xchg
lods
popa
xor
movsl
push
dec
fwait
and
dec
mov
cmp
popf
sub
xchg
push
sarl
push
adc
inc
fldl
lret
mov
cmp
fsubs
push
cmc
js
or
mov
xchg
mov
and
xor
loope
or
out
insb
and
adc
ret
decl
cld
popa
and
mov
xchg
icebp
cmp
mov
jmp
and
lcall
out
sub
call
dec
or
sbb
fyl2x
cmpsl
das
push
xor
or
and
add
sbb
add
sbb
lods
test
push
sbb
fxch
or
mov
mov
aas
imull
push
imul
xor
push
fsts
xor
loopne
sub
mov
sub
fnstenv
lret
int3
cmc
push
pop
inc
xchg
add
cmc
xchg
in
mov
aas
rcr
add
xchg
ret
inc
gs
fnstsw
pop
js
mov
xor
fidivs
xor
sbb
cmpsl
js
arpl
xor
nop
loop
aas
mov
jae
mov
mov
push
and
dec
fsubrp
divl
pop
cmp
test
lea
and
flds
sbb
adc
iret
int
xchg
inc
and
icebp
shlb
xchg
aad
inc
pop
test
arpl
jl
and
ficoms
sub
lods
out
rol
ja
fldcw
cmp
mov
fmulp
add
cmc
movsb
out
or
push
add
daa
and
subb
lahf
pop
push
push
xchg
mov
cwtl
mov
and
fstp
cmp
fwait
inc
pop
inc
imul
clc
mov
xor
and
jl
stos
clc
mov
sbb
pusha
shrb
inc
loopne
ss
mov
xor
repz
and
cld
leave
stos
loope
sbb
jne
ss
fbld
sbb
out
xchg
pop
sub
in
push
icebp
and
mov
repz
jo
icebp
cmpsl
mov
arpl
imul
jecxz
notl
in
mov
in
lret
sub
push
or
or
adcb
or
jno
cmp
cmp
and
loopne
mov
fistl
mov
out
mov
sarb
sub
ja
jp
cmp
sbbl
inc
mov
ja
add
cmc
sub
jp
mov
std
mov
out
and
jae
es
enter
dec
ds
repz
fildl
in
sbb
movsb
ja
jg
push
pop
cmpsb
xor
fsub
pushf
stc
scas
faddp
mov
sub
jb
sub
xor
or
dec
aas
fiadds
sub
out
imul
cmp
fs
adc
inc
or
mov
push
xor
mov
jle
repnz
sbb
mov
notl
inc
fucomp
jnp
int3
bound
xchg
fwait
jle
loop
daa
mov
ja
scas
aad
pop
pop
imul
lret
in
mov
jo
int3
inc
int3
add
insl
jle
add
mov
aam
sbb
pop
jae
cmp
mov
inc
jl
xor
shll
pop
push
ss
jmp
mov
xchg
test
inc
dec
jmp
pop
into
out
xorb
outsl
icebp
shrb
scas
orl
sbb
mov
pause
push
inc
stos
popf
stc
mov
repz
outsl
jns
fsubp
jl
out
pop
push
fisubl
inc
orb
or
popa
fstps
loope
pop
pop
loop
cmpb
add
sbb
jmp
lock
lods
add
jle
clc
push
loope
ds
mov
adc
xchg
hlt
push
in
xor
in
xchg
sub
insb
push
mov
popa
mov
fsubrl
fiaddl
cmp
imul
xorb
ret
cmpsb
int3
jge
std
scas
mov
xor
movl
pushf
mov
fstl
push
out
scas
rcrb
and
scas
cmpsb
pop
shlb
adc
stos
cmp
push
sbb
mov
in
test
mov
cmp
sbb
xlat
mov
dec
int3
arpl
and
dec
icebp
pop
imul
jbe
hlt
push
or
mov
jp
test
enter
stc
and
mov
pop
mov
jp
fcmovnbe
or
call
ljmp
xchg
arpl
mov
cmp
sub
ss
pop
pop
in
fcomps
jl
testl
dec
push
mov
cmc
sarl
je
aaa
call
fnsave
bound
inc
mov
stos
adc
pop
and
adc
add
icebp
pop
lahf
push
xchg
rcll
sub
pop
mov
mov
push
shrb
inc
xchg
add
adc
push
mov
mov
ret
shlb
inc
cmpsb
add
pop
jno
push
sbb
mov
paddsb
sub
jno
xlat
mov
nop
jbe
dec
xorl
adc
push
jo
fbstp
int
out
xchg
push
and
push
out
ds
popa
int3
mov
addr16
push
xchg
insb
shll
push
xor
mov
xchg
adc
push
cmp
jae
loope
pop
pop
jl
push
push
insl
fildl
add
or
push
or
nop
loope
push
lods
cmp
popf
xlat
lods
rol
cmp
xor
adc
test
aas
scas
out
das
push
cmc
les
rolb
inc
mov
mov
pop
and
or
loope
push
xor
repz
movsl
or
stos
xchg
rorl
inc
push
xlat
push
cmp
bound
xor
or
push
mov
add
jg
mov
sub
shl
or
pop
mov
sub
push
clc
nop
mov
and
inc
pop
dec
and
int3
iret
dec
inc
movsb
clc
xlat
sbb
mov
inc
leave
fsubrs
cmpsb
jle
mov
pop
mov
xchg
cmp
jne
pop
pop
xchg
in
and
scas
cmp
movsl
push
movsb
test
jae
jg
dec
idivl
xchg
inc
jnp
jmp
fsubr
jo
mov
add
cmc
lcall
icebp
push
dec
insl
dec
mov
je
insl
mov
aam
pop
nop
jo
push
or
mov
xor
sti
decb
mov
popf
cmp
push
ficomps
push
out
mov
dec
pop
clc
popf
push
cwtl
stos
shlb
call
out
sbbl
imul
pop
and
push
dec
push
pusha
adc
cmp
hlt
and
aas
push
popf
sbb
dec
ja
incb
jo
xor
aad
subl
push
andb
out
fbstp
test
rcrb
leave
push
sarl
inc
push
add
dec
add
imul
adc
mov
mov
icebp
or
test
or
sub
adc
enter
aam
das
add
mov
aad
sti
jle
fbstp
pop
orb
xor
in
fadds
enter
mov
je
and
js
bound
mov
or
mov
rcrl
mov
repz
sub
inc
ja
roll
lock
insl
incl
push
adc
lret
popf
mov
push
movsl
loopne
jne
movl
and
lret
or
and
and
lcall
dec
pop
sub
mov
mov
pop
movsb
fldenv
loope
cld
xchg
dec
or
fstps
sar
fidivrs
jecxz
stc
stos
nop
push
push
leave
in
test
xchg
and
mov
movsb
fisttpll
xchg
ja
imul
or
dec
sarb
out
pop
loopne
fsts
enter
pop
add
xor
xor
lcall
mov
dec
dec
dec
inc
xchg
mov
xchg
test
push
push
push
mov
and
jns
imul
jg
int3
shll
sub
and
ss
punpckhwd
enter
jp
movsl
and
insl
sub
mov
aam
movb
outsb
fistl
cmp
inc
cmp
jo
or
das
xchg
dec
or
or
dec
mov
push
xor
jno
repnz
pop
mov
pop
fdivs
pop
into
mov
and
imul
mov
inc
rcrl
adc
xchg
or
cli
iret
pop
xchg
mov
pop
pop
dec
outsb
in
inc
pushf
pop
lahf
jge
iret
add
int
insb
inc
xchg
aaa
jno
movsl
jb
push
or
test
sbb
xor
cmc
push
mul
lds
cwtl
sub
lea
cli
push
jmp
mov
das
outsb
xor
movsl
pop
cld
sbb
inc
push
imul
push
ljmp
cli
push
add
and
incl
xor
mov
mov
in
inc
fadd
mov
add
lods
sbb
lahf
mov
mov
popf
adc
outsb
sub
hlt
in
mov
aaa
inc
fdivs
sbb
dec
out
loopne
mov
push
jb
scas
mov
sbb
mov
test
sbb
mov
leave
mov
xchg
jle
fcmove
xchg
les
cmp
das
sbb
jne
gs
push
cmpb
ret
cmp
mov
adc
mov
mov
cmpsl
and
or
loopne
incl
decb
jo
pop
cltd
jge
and
fcompl
shl
cltd
cmp
sub
or
xor
sub
mov
push
lcall
addr16
pop
popa
das
fnsave
mov
das
mov
adc
nop
bound
jns
movsl
fisttpl
js
rclb
ds
jno
insb
cltd
push
dec
push
fcoml
sti
or
fs
leave
cmp
cmp
call
inc
push
adc
add
pop
inc
pop
jp
inc
pop
out
cltd
das
jbe
loope
jge
jmp
cmp
cmp
push
add
cmp
cmp
add
in
dec
sub
mov
mov
cmp
test
addr16
nop
loope
xlat
inc
pop
xchg
jb
lods
lret
stc
inc
jge
dec
inc
dec
sub
or
je
inc
add
out
daa
dec
pop
cwtl
dec
inc
inc
adc
stos
add
and
xchg
fimull
sub
iret
or
int3
push
sahf
ret
test
fcoml
nop
xor
cmp
das
lahf
dec
push
scas
shrb
hlt
push
mov
shrb
add
and
frstor
popf
or
ficomps
in
in
and
xor
mov
lret
xchg
jge
bound
push
cmpsl
inc
movsb
jecxz
in
outsb
fldl
test
xor
sbb
das
lods
pop
mov
rclb
mov
call
adc
sahf
adc
rcll
adc
lret
xchg
inc
dec
bound
pop
sahf
sub
imul
lret
inc
xor
push
jmp
fwait
repnz
insb
mov
adc
call
jp
lret
xchg
mov
cmc
pop
and
pop
xor
cmp
jo
aad
xlat
mov
mov
in
in
mov
adc
in
aas
push
stos
ret
jmp
aad
sahf
jno
pop
mov
gs
mov
inc
jne
xchg
loopne
into
cmc
ja
jae
xchg
jns
cltd
or
jnp
test
mov
inc
or
sub
scas
adc
sub
pop
js
sbb
mov
lock
mov
rol
nop
mov
hlt
stos
xchg
testb
inc
sub
out
ret
cli
pop
jecxz
pcmpgtb
xor
lret
add
int3
addr16
sbb
adc
cmp
fucomp
push
inc
mov
push
and
imul
lea
addl
xchg
mov
xchg
adc
xchg
jo
rcl
jb
dec
push
addr16
outsl
add
popa
fcomp
sahf
out
stc
add
pop
xchg
pusha
lock
in
movl
mov
test
push
pop
pop
xchg
lahf
aaa
stos
jg
sbb
mov
push
xchg
mov
add
push
out
std
and
sub
inc
repnz
sbb
scas
roll
adc
add
addr16
xor
adc
push
or
pop
jbe
sub
lret
mov
push
push
sbb
xor
mov
jl
sub
xchg
pop
xchg
ret
mov
mov
mov
ficoml
mov
data16
inc
outsl
movl
xlat
inc
fwait
dec
insl
adc
jo
out
push
xor
cmpsl
sub
mov
pop
inc
in
mov
cmp
popf
aas
dec
test
or
sub
push
jmp
mov
idiv
sub
push
ret
lea
fdivrl
mov
data16
or
cmp
in
ret
dec
mov
data16
dec
loope
aad
jb
adc
mov
mov
std
mov
jne
add
and
sub
mov
dec
and
push
jns
jne
dec
sub
xchg
push
lods
xor
cmp
cli
jl
xchg
iret
cli
xor
dec
icebp
test
lods
mov
cmp
mov
insl
push
cmp
xor
adc
call
rol
insl
testl
js
das
nop
imul
out
sub
sbb
mov
xchg
sub
cwtl
add
sub
fndisi(8087
in
jns
dec
movsl
sahf
enter
test
push
sbb
pop
mov
icebp
lahf
lcall
jno
mov
lret
or
addb
and
mov
movsb
inc
aam
and
xlat
lock
jo
or
fbstp
aaa
test
outsw
xchg
mov
xchg
mov
dec
out
inc
lds
or
fadd
sub
cmp
xor
popa
insl
ja
cmp
xchg
jns
cltd
cltd
stc
xchg
js
and
mov
shrl
lock
jl
xchg
int
jg
iret
fmuls
pop
jne
insb
mov
sbb
jae
mov
add
jge
mov
cmp
push
adc
insl
mov
push
mov
lahf
lahf
jo
insl
dec
movsb
mov
dec
test
add
ficompl
cli
mov
aam
jge
jo
mov
sbb
add
pop
ss
mov
repnz
hlt
repnz
roll
loopne
ss
fnsave
clc
mov
neg
mov
out
int3
int3
sarl
push
fstpl
test
sbb
and
jecxz
push
jl
test
jb
adc
mov
dec
jne
adc
cmp
int3
filds
repnz
idivl
gs
frstpm(287
lahf
add
mov
mov
ljmp
jb
cld
fdivs
cmp
outsb
mov
or
add
mov
lods
aaa
xor
jmp
test
push
cmp
push
outsl
adc
sbb
leave
jmp
mov
sbb
out
jbe
xchg
cmp
push
add
aaa
divb
outsb
dec
shr
subb
outsl
jmp
shlb
cltd
pop
inc
mov
outsl
movsl
add
jns
xor
int3
jbe
xor
lcall
and
xor
pop
loopne
or
ficoml
xor
inc
cmpsl
mov
sbb
in
sbbb
inc
inc
mov
push
cmpsb
cmc
adcl
addr16
jno
mov
stc
sbb
test
fidivl
nop
stc
cmp
loopne
cld
mov
jmp
outsl
rolb
mov
mov
or
notl
or
fcompl
jmp
leave
ljmp
push
xchg
push
jne
fmuls
leave
pop
movsl
jge
mov
push
ret
ja
mov
and
shrl
out
cs
mov
sub
fs
insl
aam
hlt
or
jnp
inc
arpl
ss
stos
fldt
pop
xorl
cmpsb
sti
out
cmp
mov
xor
stos
pop
xchg
in
or
adc
dec
xor
mov
loope
pop
outsb
movsl
arpl
sub
dec
sbb
fsts
std
cmp
test
xor
push
lahf
out
cwtl
fiadds
stos
int
cli
sbb
hlt
mov
jg
xchg
aad
rorl
adc
push
cmp
in
sub
mov
cltd
fwait
lret
in
pop
ffree
jo
push
push
jge
mov
mov
cwtl
fldt
std
and
mov
jmp
and
mov
push
mov
in
inc
mov
daa
cld
aas
fstps
in
and
out
xchg
pop
data16
xchg
mov
adc
or
push
popf
jnp
dec
and
mov
xchg
pop
out
add
add
mov
pop
jg
ds
test
sub
lahf
dec
push
pop
mov
pusha
aam
xor
xor
mov
fadd
test
pop
push
int
mov
inc
push
xor
cltd
cmp
mov
sti
xor
pop
mov
cmpsl
pop
xlat
xchg
cmp
dec
adc
push
ljmp
inc
or
mov
xchg
data16
cmp
cwtl
shll
ret
mov
push
sub
rorb
inc
ret
xchg
xchg
orl
mov
sbb
std
adc
mov
jmp
lock
pop
sbb
shlb
adc
fcmovb
iret
mov
push
inc
sbb
insb
xor
pop
mov
mov
dec
push
ss
leave
out
test
dec
dec
inc
dec
scas
lea
test
stos
clc
jne
test
addr16
xor
int
xor
mov
pop
push
xor
xor
cmp
addr16
sbb
daa
adc
mov
test
adc
pop
mov
aam
sub
xchg
xchg
in
sbb
jne
mov
mov
jp
xor
stc
loopne
or
pushf
inc
pop
stos
sbb
xorl
or
test
imul
iret
repnz
ret
mov
pop
out
jmp
mov
gs
rorl
push
push
sub
ss
dec
fld
cmp
daa
dec
xor
adc
fidivs
xchg
xchg
push
js
sysenter
sahf
imul
repnz
movsb
ret
movsb
aaa
int
mov
pop
inc
mov
adc
add
jno
mov
insb
incb
xorl
arpl
test
out
lods
std
in
jbe
cld
push
and
sbb
push
cmpl
fcmovnu
ret
or
sbb
add
or
insb
iret
in
dec
adc
xor
and
call
loop
call
fldcw
adc
int3
lcall
in
inc
les
xchg
in
faddl
push
sahf
and
call
dec
test
rorl
add
andl
or
clc
repz
into
sub
inc
mov
sub
fldt
mov
shlb
fsubs
pop
xorl
ds
cmp
shl
add
jl
mov
jp
fsubs
or
in
xchg
mov
cmc
aad
cmpsb
out
cld
xorb
inc
cli
aam
dec
repnz
and
adc
out
mov
or
cmp
ds
sbb
loope
scas
sbb
imul
or
sub
shll
lods
mov
sti
int
std
fucomi
lret
sbb
sbb
imul
dec
popf
mov
lods
mov
sti
int
std
fucomi
lret
sbb
sbb
imul
dec
popf
mov
lods
mov
sti
int
std
fucomi
lret
sbb
sbb
imul
dec
pushf
mov
lods
mov
sti
int
std
pop
in
lret
sbb
sbb
xchg
andb
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jb
notl
inc
xlat
cmp
inc
aam
cmpsl
seta
sub
ja
inc
ret
daa
mov
pop
jb
notl
inc
xlat
xor
add
repnz
rolb
push
mov
mov
pop
jb
notl
inc
xlat
xor
add
mov
jae
pusha
shrl
fs
xchg
add
cmp
or
sbb
test
add
mov
das
aas
bound
daa
jp
lds
mov
jg
fwait
mov
xor
adc
sub
cmp
inc
pop
roll
out
cli
cmp
lock
fdivs
dec
xor
cli
ret
pop
mov
sub
adc
inc
rcll
add
mov
in
add
cwtl
outsl
mov
ret
cmp
leave
push
or
and
mov
ds
in
mov
pop
mov
and
insl
pop
sub
bound
xchg
sbb
adc
mov
cmpsl
and
mov
icebp
fs
pop
addb
out
notl
inc
xlat
xor
add
rolb
push
mov
mov
jle
jecxz
mov
movl
jge
xchg
sbbb
jbe
and
push
idivl
pop
add
push
xchg
xor
imul
subb
inc
dec
ss
push
call
mov
ja
and
repnz
rolb
push
mov
mov
pop
jb
notl
inc
xlat
xor
add
rolb
push
mov
mov
pop
jb
add
loop
rcrb
or
in
in
pop
scas
xor
mov
hlt
dec
and
jecxz
int
out
mov
sbb
std
cmp
dec
sbb
mov
push
pop
mov
divl
xor
test
mov
movsl
add
lret
fstps
sub
lcall
sub
mov
dec
insl
xchg
in
push
imul
out
pop
movsl
fld
dec
es
sub
pop
imul
dec
lock
inc
movsb
pop
les
add
jle
cmpsl
dec
lods
push
push
loop
push
xor
jns
inc
pop
mov
mov
mov
mov
popa
insb
inc
xor
pop
sahf
pop
mov
gs
ja
or
inc
nop
popl
add
aaa
movsl
jmp
movsb
fs
fnstcw
es
movsb
lret
aam
cmp
leave
add
sbb
jl
ljmp
arpl
lds
ja
aam
mov
or
dec
and
ja
jae
loop
rcl
xchg
stos
test
add
add
add
loope
pop
cmp
roll
repz
push
stos
jo
mov
rorb
mov
fadd
inc
shlb
or
js
ret
aaa
push
or
fisubs
mov
psubw
out
xchg
cmp
and
dec
js
mov
push
fucomp
iret
dec
mov
rorl
sub
xchg
add
shlb
outsl
pop
lds
xchg
clflush
out
sbbl
xchg
cs
and
shll
push
xlat
or
jae
xchg
xchg
shlb
mov
leave
loopne
out
in
fwait
or
mov
mov
push
mov
in
testl
cltd
mov
ljmp
pop
push
push
mov
or
or
push
insl
pop
xor
pop
nop
sbb
jle
fsubs
rorl
ja
inc
add
popf
pop
adc
rcl
xchg
mov
mov
out
mov
daa
test
jne
call
aaa
inc
out
hlt
dec
sub
std
jg
sub
push
lock
aaa
int
mov
dec
shll
inc
std
mov
push
aaa
mov
rol
jecxz
es
sbbl
xchg
xchg
cmp
pop
mov
fwait
test
pop
out
daa
out
add
mov
mov
cmp
sbb
jno
add
or
lahf
adc
cmp
int
negl
or
pushl
and
nop
jnp
loop
shll
int3
rcrl
push
sub
xchg
mov
xor
xchg
pop
adc
cmp
jno
push
add
roll
movsl
mov
loop
push
add
sub
cmc
cwtl
fcoml
psrld
pusha
repz
scas
aam
aam
addl
test
jl
pop
rcll
pop
xlat
scas
ficoml
outsl
mov
cmpsb
scas
cwtl
lods
add
dec
std
lds
pop
outsb
lcall
push
cli
and
inc
popa
outsl
insl
sub
leave
mov
pop
lds
movsl
imul
sbb
daa
cmc
aad
push
push
aad
pop
stos
movsl
repz
out
push
jle
push
add
stos
lret
int3
xor
loopne
or
ret
in
ja
loope
outsl
ds
movsl
pop
jmp
adc
xchg
add
pushf
test
test
dec
xchg
pusha
sbb
inc
mov
xor
jb
es
icebp
cmp
xchg
nop
jns
imulb
sti
jecxz
rcrl
sbb
rolb
aam
or
xchg
dec
sub
inc
fidivl
push
out
lock
dec
jno
lret
fmuls
in
xchg
inc
mov
adc
sub
or
frstor
jns,pt
jbe
movsb
jle
ror
lret
aad
inc
in
jmp
insl
jae
fwait
inc
sti
dec
inc
and
test
je
cmp
ds
lret
das
and
popf
ljmp
pop
stos
or
stc
test
mov
outsl
outsb
or
mov
call
sub
into
out
in
sahf
cld
dec
cmp
leave
adc
stos
rcll
leave
and
or
cmpsl
mov
xchg
or
hlt
out
mov
hlt
xchg
push
mov
dec
cli
and
sub
aam
xor
sub
jp
gs
add
scas
int
dec
call
out
mov
pushf
imul
mov
mov
adc
das
loope
lea
lds
divl
jg
mov
add
aaa
pusha
addl
jle
xor
mov
cmp
sbb
pop
and
jo
outsb
inc
jne
xlat
dec
repz
cmp
push
pop
sbb
push
or
pop
cmp
or
dec
stos
insl
in
jl
dec
arpl
subl
fs
sub
addb
and
fsubrl
jg
shlb
int
jmp
popa
mov
sub
xchg
push
xor
outsl
dec
inc
sbb
adc
cmp
mull
loopne
or
cli
xor
push
lds
ret
fstpl
mov
add
ret
and
pop
outsb
pusha
popa
ds
jns
shr
and
xor
adc
rolb
lret
cs
shll
sbb
fstp
rcl
test
jmp
imul
mov
add
cmc
cmp
fsubl
push
mov
mull
in
mov
dec
shrb
dec
test
insb
pop
outsb
xchg
into
add
xor
jg
cmpsb
nop
pop
sahf
or
outsl
jmp
pop
mov
shlb
push
push
or
add
inc
or
fidivs
add
mov
push
and
shll
icebp
add
cmpsl
cwtl
shlb
mov
repnz
loope
lret
sti
aad
mov
nop
pop
fstpt
fucomip
adc
inc
pop
dec
mov
xchg
sbb
or
mov
pop
gs
push
aad
pop
mov
out
imul
test
movsl
inc
xchg
or
xor
mov
imul
gs
mov
loop
movsl
cmp
xor
out
and
dec
lcall
mov
scas
xchg
ret
sub
loope
inc
push
loope
lea
pushf
xchg
loop
lods
lds
mov
mov
sub
fbstp
mov
popa
push
push
bound
or
push
scas
inc
das
jno
add
and
mov
cmp
bound
cmp
pop
xchg
sbb
sbb
sub
pop
test
shrl
jge
inc
fildl
xchg
cmpsl
push
fcoms
enter
push
outsl
lcall
lcall
shr
jo
and
and
orb
pop
mov
rcrb
cmp
shlb
push
jne
jmp
add
cld
sbb
loope
das
leave
fchs
les
call
xchg
dec
xchg
loope
mov
mov
test
les
mov
or
mov
sbb
jbe
jno
sbb
mov
and
shlb
and
test
bound
cmc
fscale
mov
les
lods
and
ret
and
sub
inc
aad
mov
push
daa
call
and
mov
xchg
mov
clc
cmp
into
cmpsb
mov
insb
out
push
mov
xchg
subl
shll
hlt
jp
mov
xor
mov
cmp
sbb
in
inc
mov
clc
mov
gs
outsl
sbb
roll
lock
cwtl
popa
mov
fs
in
and
stos
inc
and
pop
repnz
jp
in
jecxz
sub
mov
rolb
clc
outsb
adcb
daa
rcl
add
adc
outsl
jg
bnd
jbe
cltd
jb
mov
ret
add
rorl
mov
ret
into
je
xor
jne
jmp
add
jl
fisubs
mov
out
shlb
xor
dec
fmul
dec
dec
push
pop
sub
shl
xlat
mov
into
cmpsb
xchg
hlt
sarl
sbb
cmpsb
mov
lods
jmp
xor
movsl
sbb
xchg
push
jae
outsb
test
bound
jo
rol
divl
mov
jno
sbb
movsb
dec
dec
mov
fldcw
mov
dec
imul
mov
jbe
and
jp
fsub
and
inc
jge
shll
test
xchg
stc
int
xor
xchg
test
mov
cmp
inc
or
sar
mov
loope
lods
pop
ljmp
mov
jle
mov
lock
adc
mov
mov
jmp
sub
sbb
xor
xlat
mov
xchg
xchg
xlat
inc
jbe
push
or
pop
imul
jb
dec
cld
imul
sub
outsl
mov
mov
xor
sub
or
dec
in
scas
push
xchg
in
xchg
insb
jmp
stos
mov
pop
inc
es
shll
scas
lret
jecxz
cmpsb
cmpsl
push
out
mov
mov
or
dec
mov
outsl
dec
xchg
mov
xlat
mov
lods
test
or
inc
inc
xchg
ja
add
and
in
insb
mov
mov
push
push
xchg
mov
bound
dec
push
std
lcall
lret
push
jno,pt
in
sub
jnp
dec
mov
mov
fidivl
fcoms
in
cmp
xchg
sub
mov
insb
push
addr16
adc
inc
pop
and
add
and
cmp
stc
jae
sub
mov
add
push
rorb
loop
xor
mov
jmp
push
pop
in
xor
push
es
sub
lret
rcrl
mov
mov
clc
jns
aad
xlat
push
pusha
adc
and
sbb
outsl
push
frstor
outsb
jmp
ds
or
es
push
lahf
fs
out
out
aas
sbb
rcll
fsts
cli
out
enter
testl
add
inc
mov
dec
xchg
stc
jmp
mov
mov
and
outsb
push
lods
outsl
sbb
inc
adc
cmpsl
dec
cmp
push
or
xchg
xor
stc
imul
mov
test
test
mov
or
roll
or
andb
xchg
cmpsb
jl
idiv
or
enter
addr16
xor
jp
jle
sub
adc
out
pop
lock
dec
pop
add
addb
xor
pop
fmul
rcr
dec
push
addr16
adc
jnp
mov
mov
xchg
mov
add
stos
lcall
fcomps
clc
mov
test
es
cs
mov
lahf
cwtl
mov
xor
fmul
jo
and
neg
sti
or
iret
insl
dec
into
movsb
jge
mov
inc
mov
xlat
jns
clc
je
pop
mov
xchg
loope
push
fcoml
movsb
mov
rclb
dec
push
mov
push
es
cli
aad
hlt
xlat
xor
scas
int3
adc
jp
inc
or
lahf
int3
and
mov
notl
adc
in
in
aaa
xor
loope
jp
sub
push
std
jns
push
lcall
pop
shll
dec
enter
iret
imull
sar
xchg
shrl
xchg
es
ja
loop
test
add
lds
pusha
icebp
ficoml
jns
push
adc
pop
es
outsl
or
sbb
in
mov
imull
cmp
lods
rclb
mov
test
jae
or
mov
popa
dec
pop
mov
mov
cltd
cmpsb
outsl
adc
dec
and
mov
push
xchg
adcb
std
sbb
sbbl
out
cmpsl
rcl
insw
sub
movsl
or
int3
dec
pop
fwait
xor
gs
mov
add
jb
cld
fwait
jnp
xchg
and
xchg
ljmp
in
jmp
mov
shll
icebp
adc
adc
out
leave
mov
movsl
sti
dec
clc
mov
mov
push
call
mov
sbb
sbb
dec
or
inc
and
fnclex
out
adcl
mov
sub
fnsave
subl
fs
shll
add
mov
lcall
cli
xchg
xchg
adc
pop
xchg
and
sbb
imul
movntps
xchg
loop
mov
xchg
lcall
lea
insl
aaa
fcoms
jl
pusha
ljmp
cltd
movsb
mov
outsb
int3
jmp
cli
xor
aam
add
push
fsts
mov
popf
xchg
inc
adc
sarl
dec
out
outsb
jmp
and
xchg
xor
fildll
push
sub
imul
mov
outsb
iret
out
and
cmp
hlt
test
cmp
mov
push
call
cli
mov
xor
std
jbe
adc
add
lret
in
sti
das
in
mov
cltd
cmpsl
dec
sub
cmp
mov
arpl
out
lcall
mov
je
outsl
pop
and
fcomps
xlat
xor
out
add
xchg
outsb
xchg
jns
jmp
enter
xchg
cmp
pop
fistps
ficomps
mov
ljmp
mov
add
cmp
shrd
xlat
sbb
fisttpll
add
cli
push
xor
mov
shll
inc
adc
icebp
repnz
and
mov
inc
mov
std
or
or
cmpsl
cmp
or
jmp
or
inc
aaa
icebp
sub
decb
pop
inc
sbb
imulb
jno
sub
clc
das
lds
adc
aas
push
inc
lods
out
xor
push
in
je
cmp
dec
addr16
lds
shlb
es
sbb
mov
and
movl
xor
push
push
xor
jo
push
popw
out
mov
movl
out
pop
sub
fstp
push
lret
sub
mov
test
adcb
cmp
orl
sbb
mov
dec
pop
scas
mov
nop
call
movsl
repnz
ret
push
inc
sub
repz
ss
dec
sti
or
pop
movsl
out
and
ficompl
popf
call
das
jo
fdivs
hlt
jnp
pop
xor
lds
cmpsl
lret
jno
arpl
dec
aas
xor
push
adc
cs
cmp
jne
xor
mov
leave
push
lea
aaa
fwait
jge
and
xlat
push
jl
or
sub
pop
push
lret
cmp
mov
loop
sub
adc
xchg
inc
scas
push
fisubrl
inc
and
inc
lods
popa
in
std
cs
jl
hlt
jle
pop
scas
int
iret
dec
mov
lds
mov
dec
gs
dec
dec
mov
andb
loope
or
cmp
push
or
ljmp
arpl
push
repnz
xchg
std
ss
imulb
jno
mov
fcmovnu
cmpsl
cmc
cmp
test
mov
gs
cmc
in
inc
fisubrl
jne
scas
adc
in
outsb
xlat
adc
iret
cltd
jecxz
ret
repnz
bound
xor
cmc
sti
pushf
adc
push
ror
sbb
adc
shrl
daa
sbb
pop
lcall
mov
test
sbb
xchg
inc
sub
jne
ret
jnp
insl
mov
sub
sti
test
cwtl
imul
aaa
xchg
lret
scas
into
xor
je
fs
mov
push
dec
outsb
clc
pop
cltd
dec
and
repnz
xlat
dec
mov
pop
int3
dec
das
lret
xlat
mov
fdivp
cmp
and
adc
fsubp
jmp
es
cmp
stc
arpl
lcall
mov
or
orb
adc
pusha
dec
sbb
and
xchg
loopne
cltd
mov
popa
cmpsb
js
inc
and
pop
cli
mov
in
xchg
adc
shrl
rorl
jbe
bound
inc
imul
dec
and
mov
sbb
pop
mov
xchg
add
sub
inc
iret
mov
jg
ficoms
clc
mov
mov
pop
mov
dec
xchg
add
faddp
stc
push
leave
out
jnp
push
pop
jmp
leave
data16
push
xor
and
dec
js
mov
push
bound
add
int
jb
pop
hlt
dec
add
and
mov
es
mov
xchg
hlt
in
xor
and
mov
insb
leave
sub
xchg
mov
cmpsl
cmp
test
or
fmuls
jecxz
adc
push
pop
xlat
addr16
lods
stc
mov
mov
sub
add
mov
and
mov
jb
ror
cltd
int
cmpsb
enter
out
xchg
xchg
rcl
or
lret
cmp
push
lock
outsl
jg
adc
push
sahf
lret
scas
mov
outsb
popa
mov
xor
sbb
pusha
pop
jge
movsl
add
in
mov
xchg
mov
cs
orl
ja
mov
dec
pop
xor
testb
and
test
or
sbb
loop
arpl
fldpi
test
outsb
dec
fmuls
cmc
pop
andl
arpl
cmp
and
fs
lret
rcrb
mov
or
add
sbb
sub
push
test
decl
mov
xor
push
enter
inc
or
cmp
xor
cli
mov
js
xor
sub
mov
push
mov
fs
data16
clc
mov
dec
out
test
push
mov
add
loopne
lea
out
gs
stos
mov
in
jg
psubb
in
cld
arpl
sbbb
test
sti
adc
pushf
dec
loope
ror
mov
lea
cmp
add
mov
jb
movsl
mov
mov
xor
push
pop
mov
pop
cmc
dec
lds
sti
mov
mov
arpl
call
and
mov
outsb
insb
es
cmp
repnz
mov
mov
dec
in
in
xor
lds
mov
aaa
andb
dec
lods
push
push
leave
in
xchg
xor
dec
shrl
pushl
out
push
add
jmp
pop
adc
aas
mov
or
jmp
xor
roll
add
jecxz
cmpsb
in
jmp
add
xor
jno
lock
sbb
push
mov
or
test
inc
mov
cmp
das
add
pop
in
push
jg
cmc
push
pusha
pushf
xchg
xchg
fldenv
rorl
out
cld
add
jecxz
pop
incb
mov
inc
fidivs
loopne
and
push
jne
mov
pop
dec
mov
and
cmp
movsb
cli
mov
es
call
icebp
into
ds
mov
loope
jo
mov
push
nop
mov
mov
jbe
push
nop
fistps
test
jb
out
xchg
inc
sub
or
inc
mov
repnz
data16
xor
outsb
jb
jp
pop
or
clc
and
and
aad
pop
dec
dec
push
cwtl
inc
in
icebp
mov
ds
pop
imul
in
adc
insl
xchg
xor
pop
pop
jl
loopne
stc
lock
mov
rclb
lods
lret
mov
push
lods
sub
cmpb
hlt
subb
lds
les
insl
popa
out
std
push
nop
outsb
and
orl
mov
mov
inc
pop
adc
shll
sbb
ja
mov
movsb
jp
mov
inc
fstpt
sub
in
mov
pop
into
pushf
push
xchg
pop
adc
out
nop
pop
sbb
and
jbe
push
cs
rol
adc
mov
mov
adc
cmp
sbb
or
pinsrw
dec
jns
notb
pop
sub
pop
and
pop
sbb
pop
push
rcll
loop
jmp
loopne
mov
inc
pusha
sbb
rolb
aad
jb
add
test
jb
inc
gs
arpl
imul
cmp
sahf
push
mov
pop
or
inc
pop
mov
sbb
ss
out
sbb
xchg
dec
out
jle
push
and
bound
test
mov
xor
mov
lock
adc
sbb
pop
hlt
mov
mov
dec
nop
mov
xchg
ja
xor
dec
jns
lods
int3
cwtl
adc
and
rorl
fidivs
daa
sub
pop
popf
xor
push
and
shlb
push
and
dec
pshufw
jns
pop
rcrb
dec
inc
mov
icebp
dec
notl
jle
or
das
mov
or
pop
sub
in
and
adc
xchg
xchg
xchg
sti
arpl
insl
movl
adc
loop
rolb
push
mov
mov
pop
jb
notl
inc
xlat
xor
add
rolb
push
mov
mov
pop
jb
notl
inc
xlat
xor
add
rolb
push
mov
mov
pop
jb
notl
inc
xlat
xor
adcb
inc
ret
scas
sub
push
jp
pop
cmpl
pop
sbb
ret
loopne
int3
mov
lods
repnz
mov
jl
insb
xor
push
cmp
sub
sbb
or
incb
int3
rcr
cmpsb
jl
pushf
loop
enter
mov
in
inc
and
lcall
test
sahf
ret
xchg
mov
and
pop
cmc
jbe
popa
int
ja
addr16
push
xchg
push
and
or
stos
mov
mov
rcrb
out
push
jl
add
int3
dec
int3
push
cmp
jae
outsl
roll
jmp
add
sub
push
jge
dec
pusha
pop
dec
sub
bound
insb
dec
pop
ja
push
sbb
in
jae
pusha
xrelease
xor
rclb
sbb
int
loop
lods
sbb
shlb
dec
sub
dec
cltd
mov
and
jae
mov
pop
xchg
mull
fwait
subl
mov
fnstenv
jl
jnp
dec
dec
push
push
cmp
sub
add
adc
push
mov
mov
pusha
sbb
pop
dec
dec
cmp
aaa
inc
popa
jo
popa
repz
ret
xchg
loop
ret
mov
xchg
insb
jne
jmp
push
push
js
pusha
stos
test
xlat
test
mov
lock
or
arpl
pop
push
inc
sub
sbb
or
cld
sub
fsubl
lods
repnz
loop
adc
xor
push
cmp
sub
sbb
or
cld
sub
fsubl
lods
repnz
loop
adc
lcall
dec
adc
xor
inc
push
test
pop
enter
or
leave
repnz
lea
mov
xchg
fldcw
pop
aad
insl
and
add
dec
jmp
jae
test
dec
add
aam
dec
push
pusha
ds
jle
ss
xor
cli
mov
aaa
lcall
lcall
or
out
sbb
jne
push
testl
cmp
xor
sub
xchg
loope
lcall
aas
lret
mov
adc
inc
fdivp
cmc
loop
andl
cmp
ret
adc
cs
sbbb
daa
dec
dec
sbb
mov
sbb
jg
xchg
push
in
xchg
rolb
sti
mov
mov
dec
push
xlat
clc
pop
and
rcrl
inc
lea
dec
mov
rcr
dec
xchg
test
popa
in
and
out
xchg
rcll
hlt
mov
and
int3
pop
fsts
out
lcall
mov
mov
jl
insl
lods
mov
mov
les
repnz
mov
addb
add
mov
stc
iret
or
ja
adc
mov
cs
push
les
pop
clc
gs
lock
mov
push
push
mov
add
hlt
shrb
mov
mov
adc
mov
stos
cli
adc
jp
push
retw
pop
lea
jmp
xor
std
daa
insl
and
mov
push
fbld
xchg
adc
jp
lock
add
lods
cmpsl
dec
mov
dec
mov
and
jecxz
mov
xchg
es
pushf
add
jmp
test
xor
mov
add
in
loope
jmp
mov
and
mov
sbbb
push
inc
movsb
adc
in
sub
je
lret
jne
stos
mov
flds
jge
scas
jg
pop
pop
mov
shrl
mov
inc
dec
mov
cwtl
mov
test
pop
jge
data16
ret
dec
mov
out
mov
in
in
push
cmc
mov
mov
mov
das
shlb
ret
orb
jbe
ljmp
mov
movsl
sbb
push
jecxz
repnz
xchg
or
sub
cmpsl
xor
lods
sub
imul
mov
mov
cmp
or
bound
into
test
lret
dec
lock
push
aam
lods
hlt
lds
mov
test
push
out
test
aas
sub
in
xchg
lods
insl
inc
ljmp
mov
aad
adc
or
push
mov
out
dec
add
xchg
nop
cltd
imul
mov
mov
and
mov
xchg
push
lret
mov
dec
int
dec
mov
cmpsl
jb
and
adc
loop
movsl
pushf
dec
push
cmpsb
xchg
cwtl
in
mov
xchg
int3
mov
sbb
or
addr16
add
daa
mov
shll
dec
repnz
dec
sub
ds
call
mov
imul
mov
mov
in
pusha
pop
cmpsl
adc
lock
dec
xor
lcall
fisttps
pop
add
cmp
arpl
sbb
mov
xor
and
daa
fbstp
sub
sbb
leave
jb
mov
push
loope
add
dec
xlat
ljmp
lahf
sub
add
sub
ss
xchg
mov
in
mov
pop
and
fisttpll
repz
inc
mov
sbb
int
fbstp
in
adc
push
sti
and
cmp
pop
push
pop
es
stos
rcrb
test
mov
mov
sub
test
popa
mov
cmpsb
or
dec
pop
stc
push
push
adc
xchg
rcrl
mov
mulb
lret
pushf
mov
lods
daa
in
lahf
and
adc
mov
insb
adc
jecxz
fmul
jg
sti
loope
push
enter
ds
or
loop
frstor
and
push
dec
add
das
fmuls
pop
jae
cmc
popa
lea
rolb
fidivs
mov
jo
shlb
scas
es
push
roll
sub
stos
lret
adc
test
out
pop
sbbb
lods
push
and
xchg
adc
inc
sub
movsb
lods
andb
or
xchg
sbb
pop
push
or
adc
sub
mov
test
shlb
addr16
shr
sbb
in
xchg
in
push
arpl
mov
aas
jg
fidivs
test
lods
jle
andl
pop
ss
mov
aad
test
add
pop
gs
add
pop
cmp
mov
insl
inc
dec
inc
and
sub
lods
pop
fisttpl
stos
out
sub
pop
scas
mov
cmp
int
aam
cmp
test
cmp
pop
or
ret
movsl
pop
or
icebp
and
mov
mov
lods
mov
es
add
sahf
push
pop
add
clc
xor
sbb
mov
int3
lret
xchg
fistpl
push
xchg
shll
sub
fdivrl
push
xchg
and
dec
cs
cmc
imul
mov
loopne
mov
in
lods
fs
sbb
mov
add
mov
notl
mov
mov
fstpt
push
or
lea
pop
iret
scas
aas
inc
xor
or
add
xor
mov
mov
adc
mov
xorl
mov
inc
jns
cld
hlt
xor
push
shlb
sub
scas
cmp
xchg
sub
in
sti
ficompl
adc
jns
add
out
iret
xor
fildl
or
add
mov
mov
in
xlat
sub
pop
mov
cmp
fnstcw
mov
repz
loope
add
jno
inc
jo
dec
pusha
movsb
inc
mov
xchg
js
push
xor
add
fldcw
lret
lret
mov
jge
dec
jmp
out
gs
lret
inc
push
pop
adc
pop
scas
ror
aaa
pop
fildl
sub
jb
mov
xchg
jge
mov
test
adc
sbb
mov
inc
pop
imul
cmc
call
add
push
xor
ffreep
repnz
shlb
adc
mov
push
jae
fcomps
dec
stc
in
dec
jo
aas
xchg
shrd
aad
insb
cli
pop
arpl
jl
mov
cmp
sahf
and
and
jbe
test
push
mov
sahf
mov
je
push
hlt
push
xchg
jns
scas
ja
fildl
xor
cmp
cmp
mov
inc
cltd
fidivl
mov
mov
sbb
pop
lea
xlat
mov
pop
sbb
xlat
mov
fdiv
addr16
jnp
mov
xchg
daa
mov
call
daa
fxch
and
out
adc
scas
push
cmp
pop
jl
mov
into
test
inc
stos
xor
scas
iret
cmc
insb
fiaddl
out
xchg
jb
lcall
mov
inc
push
jle
sbb
lret
pop
sub
cli
jne
sub
invd
jo
jns
mov
mov
sbb
cmp
xchg
mov
test
fwait
jnp
sti
xchg
mov
push
adc
movsb
jns
mov
fsubrl
cmpsl
mov
rcl
sub
pushf
cmp
ss
inc
call
cmc
inc
push
mov
cltd
int3
popf
test
push
pop
gs
dec
mov
add
pop
icebp
out
cmp
hlt
aaa
je
imul
lret
fisubrs
push
cmpsl
jnp
ss
xor
push
lea
gs
jo
dec
inc
shrl
call
aad
rclb
adc
cli
mov
push
fdivrs
pop
lods
lods
adc
push
adc
push
cmp
outsl
adc
enter
test
vphadduwq
cmpsb
call
outsl
test
fdiv
sbb
mov
sub
jae
jne
mov
cltd
jecxz
push
adc
repz
jo
jecxz
and
or
push
add
mov
and
rcrb
ljmp
out
add
pop
ficoml
mov
xchg
aaa
mov
ss
imul
jge
cmpsl
or
pop
adc
cmpsl
push
aam
cld
popf
cmp
lds
lds
shlb
test
push
cmp
imul
bound
cmc
pop
and
jl
and
dec
and
fst
repz
push
out
xchg
sub
mov
mov
fildll
dec
push
xchg
mov
xor
iret
xor
loop
fs
lods
daa
push
roll
fstl
popa
push
adc
adc
xlat
hlt
pop
jle
fs
mov
push
inc
or
cmc
mov
stos
sub
ret
in
inc
jae
sub
push
sub
imul
sbb
scas
jno
jo
loope
addr16
out
push
stos
sti
mov
sub
daa
dec
cmpsl
xchg
dec
cmp
imul
xchg
mull
popa
mov
add
and
mov
ss
sub
stos
les
xor
add
push
sub
popa
fidivs
pop
cltd
ret
addr16
negl
push
mov
test
mov
xor
pop
sub
and
dec
cmp
cltd
arpl
cld
pop
mov
or
cmc
mov
aam
sub
test
and
or
pop
push
sub
adc
push
std
cs
cmp
nop
push
cmpsl
jmp
and
xor
insl
dec
pop
sbb
mov
sub
cmp
imulb
aad
jb
fdivl
scas
or
jecxz
lret
idivb
std
lcall
and
jp
push
inc
shll
daa
dec
cmpsb
fcmovu
xchg
jo
push
sbb
rcrb
adc
es
and
insl
pop
or
stc
cs
ljmp
cmc
daa
ja
nop
repz
outsl
mov
xor
test
push
icebp
mov
push
stos
mov
jns
adcl
xor
stos
aas
xor
fcmovnu
mov
or
adc
cmc
mov
int3
mov
fldenv
das
repnz
mov
xor
adc
mov
inc
repnz
mov
adc
adc
and
imul
mov
inc
insb
out
pop
and
inc
xchg
lds
gs
mov
cmp
leave
daa
shlb
cld
pop
sub
mov
mov
mov
and
jg
mov
sub
imul
and
cs
adc
fisttps
jle
xchg
je
cmpsb
cli
mov
adc
adc
jle
mov
loope
rol
stc
gs
call
xchg
adc
inc
int
jns
scas
fucomp
sbb
dec
sbb
cmp
mov
insl
xchg
and
lods
sbb
int3
stos
add
es
inc
addr16
pop
mov
xchg
lret
push
repnz
les
sbbl
mov
aad
addr16
add
ja
loopne
test
ds
inc
xor
aas
xchg
push
sbb
cmp
and
inc
dec
mov
xchg
sub
mov
ret
outsl
inc
sbb
xor
mov
int3
outsb
sub
rorl
cmp
and
jge
dec
lret
std
mov
insl
lretw
and
xchg
pop
push
imul
inc
pop
jle
int
xor
mov
andl
lds
push
pop
inc
inc
lock
pusha
sarb
or
jo
jle
cld
shrb
push
gs
out
ret
mov
ds
xchg
das
sbb
cmp
inc
xchg
xchg
adc
adc
sbb
mov
mov
push
rcr
mov
add
inc
cmp
frstor
daa
push
lods
js
mov
xor
cmc
sbb
ljmp
orl
rcrl
mov
adc
lret
and
dec
mov
cmp
rorb
inc
push
jnp
mov
adc
xor
xor
inc
mov
in
xor
sub
add
sub
lcall
xchg
dec
adc
sahf
out
loope
aad
ret
sbb
mov
inc
inc
adc
inc
iret
cmp
mov
insl
scas
sbbb
xor
or
ljmp
push
sahf
mov
lahf
push
insl
rorl
fsubl
or
cmc
out
clc
mov
mov
fisttps
cmp
sub
jae
adc
int
test
data16
jne
jae
add
out
out
fsubl
cmp
inc
push
jb
cmc
add
xchg
dec
cmp
sti
xchg
call
sahf
rorb
loop
lods
push
push
and
dec
cmp
xchg
mov
xchg
xor
xor
std
fisttpll
imul
jecxz
insb
je
cs
push
leave
sbb
das
dec
lds
out
sub
mov
xchg
andl
sub
xor
scas
and
pushf
in
and
mov
fsubl
push
mov
adc
pop
jge
ret
fiadds
shrl
cmp
lock
lcall
fs
mov
loope
scas
push
add
movsb
or
mov
push
sbb
and
and
call
sbb
fnstsw
stos
mov
idivl
xchg
xchg
dec
addl
and
pop
iret
lret
iret
sbb
daa
mov
pop
js
lahf
add
cmp
cmp
mov
nop
mov
sarb
fld
mov
in
arpl
ret
sahf
flds
jo
lds
sbb
pop
adc
push
sbb
test
hlt
stc
jmp
stc
and
jno
rcrl
aam
sbb
cmp
or
mov
push
push
push
cmp
aad
mov
cmp
mov
inc
push
fdivl
push
xor
mov
mov
adc
xchg
push
aad
pusha
lods
and
jge
sbbl
cmpsl
pop
xor
xchg
aam
sbb
cltd
xor
sub
jecxz
add
scas
test
jnp
push
arpl
mov
in
sub
test
and
outsb
xchg
dec
popa
in
dec
call
mov
leave
push
bound
out
adc
mov
mov
insb
pop
cs
fiaddl
iret
clc
mov
cmp
mov
insl
xchg
insl
sti
lds
outsb
xchg
mov
jg
xor
sbb
cli
loop
or
aas
push
sbb
or
fiaddl
bound
lock
ss
adcb
lahf
je
bound
mov
incb
loop
and
lret
jg
sub
frstor
xchg
add
or
loop
aad
rorl
adc
aad
sub
cltd
lds
pop
aam
mov
jae
push
inc
out
fistpll
add
pusha
in
and
mov
iret
xor
xor
and
addr16
sub
and
fs
xor
xchg
jmp
fidivrl
sub
in
or
sahf
sbb
decb
inc
or
jge
xchg
cli
test
dec
sbb
in
dec
int3
cltd
push
testb
cmp
dec
mov
arpl
out
clc
push
iret
pop
lea
iret
ror
arpl
in
xor
xchg
stc
inc
stos
pop
das
mov
push
sub
adc
cmp
imul
xor
out
mov
pop
pusha
ja
xchg
fisubrl
mov
jg
sbb
jns
mov
fldl
xorl
aam
or
pop
push
in
test
xchg
xlat
cmc
add
add
jge
aas
stos
les
in
sahf
mov
arpl
and
jne
les
or
daa
je
or
xor
inc
sti
lahf
push
leave
fadd
xor
enter
test
mov
jne
ror
leave
push
push
scas
out
scas
pushf
shlb
adcl
ds
xor
mov
jbe
lahf
divb
xchg
push
addr16
ret
sahf
imul
lods
test
shrb
dec
mov
push
lock
cmp
loop
xchg
ficompl
or
xchg
icebp
sbb
and
fstpt
int
mov
mov
mov
mov
push
scas
cli
sbb
dec
sub
cmp
subb
push
xor
or
fcmove
mov
xchg
sub
outsb
sahf
or
stos
aam
cs
push
rep
and
cmp
add
push
sub
or
shlb
mov
sahf
int
push
sub
add
adc
sbb
adc
repnz
mov
arpl
or
arpl
addr16
in
imul
outsl
jae
jne
or
leave
ja
fimuls
pop
int
popf
in
int
dec
lret
aam
mov
adc
dec
jae
dec
mov
cmp
loope
sbb
pop
ljmp
inc
jnp
mov
int3
testl
mov
jp
mov
mov
cmc
fcompl
cmpsl
clc
mov
mov
sub
sbb
or
imul
xchg
pop
sbb
ljmp
push
cwtl
cmp
mov
add
outsb
mov
xlat
mov
mov
inc
and
stos
data16
in
xor
out
mov
xor
mov
fs
nop
cmp
lcall
xchg
arpl
enter
jne,pn
mov
shr
hlt
jae
push
inc
and
jnp
repz
mov
fstps
xor
clc
push
int3
cld
inc
sarl
mov
or
mov
jnp
add
loopne
stos
aad
js
mov
imul
cmp
int
loop
push
lods
push
add
ret
add
andl
ljmp
xchg
fs
sub
das
add
pop
sbb
int
or
icebp
ret
es
out
das
scas
outsb
in
lcall
leave
jne
sbb
in
inc
cmpsb
inc
insl
push
ds
aaa
adc
fdivrs
int
xlat
mov
xchg
xor
mov
mov
xor
andl
xchg
mov
xlat
jns
js
mov
adc
xchg
cwtl
stc
outsb
mov
nopl
fadds
outsb
and
cmpsb
or
loope
xchg
sbb
in
cltd
movb
mov
shrl
pop
add
movsb
cs
add
push
mov
dec
scas
subb
or
mov
inc
push
rorb
lods
inc
les
dec
or
push
sbb
inc
cmp
in
push
stos
stos
data16
ds
lea
in
cmc
lock
pop
xor
mov
nop
setb
popa
mov
pop
inc
ljmp
data16
fistpll
jae
push
xchg
pop
lock
fdivr
es
inc
or
mov
ucomiss
add
fucomip
fnstenv
inc
add
sbb
dec
sbb
pop
dec
cmc
jnp
stc
jne
lret
pushf
fcmovnu
stos
mov
iret
scas
adc
cmc
push
dec
insb
fadd
lret
or
add
pushf
pop
popa
xor
pop
ds
js
sbb
dec
test
add
lods
les
das
mov
mov
out
inc
in
xchg
loope
inc
addr16
icebp
jns
sahf
imulb
adc
xchg
gs
push
jns
sub
lret
pushf
and
xlat
aam
sbb
jns
pop
fidivrs
bnd
cs
inc
mov
cmp
xor
shl
imul
mov
pop
xchg
mov
lahf
push
dec
pusha
adc
lds
cmp
sbb
add
mov
xchg
mov
in
mov
push
scas
int3
push
dec
stos
pop
loope
mov
xchg
sub
lea
pop
or
sbb
xchg
dec
rorb
pushf
inc
inc
cwtl
mov
cmc
mov
lret
cmp
lds
or
push
or
mov
loop
fwait
xchg
pop
jecxz
std
sbb
movswl
push
xlat
lret
aaa
push
sub
lret
and
xchg
aad
mov
mov
add
mov
js
arpl
addb
xchg
inc
lods
mov
sbb
outsl
mov
pushf
bound
into
rcll
rcll
jl
lods
xchg
rorl
and
daa
push
sub
jg
shl
gs
ljmp
cmp
push
rorl
sbb
test
cwtl
movups
fsts
dec
inc
call
mov
xor
mov
shlb
mov
jno
mov
jp
push
jbe
inc
fsubr
out
xchg
cmc
jl
jne
add
rclb
mov
sbb
push
mov
imul
mov
xlat
into
pop
out
into
fmul
xchg
je
sbb
test
add
xchg
mov
loop
pusha
dec
and
lret
mov
sub
jno
lcall
adc
mov
push
sub
adc
cmp
mov
jne
push
cld
and
lds
inc
pop
in
xor
cltd
out
cmp
jbe
jb
in
repz
dec
and
ret
add
ds
push
cmp
sub
sbb
or
cld
sub
fsubl
lods
repnz
loop
adc
xor
push
cmp
sub
sbb
or
cld
sub
fsubl
lods
repnz
loop
adc
and
push
cmp
sub
sbb
or
cld
sub
fsubl
lods
negb
cs
mov
cmp
sub
sbb
or
cld
jge
sbb
mov
push
or
sti
jbe
inc
fistl
add
repnz
dec
pop
cmpsb
cmp
or
sti
jbe
sub
push
lret
es
push
jmp
ja
imul
mov
xchg
xchg
or
loop
repnz
mov
cmp
push
xchg
cmpb
scas
and
pop
shrb
or
aas
lods
and
push
js
mov
pop
pop
dec
jecxz
mov
and
jb
sti
mov
rcl
fwait
or
mov
mov
adc
mov
pop
ljmp
xor
inc
xchg
out
xor
push
test
mov
imulb
xor
mov
sahf
repz
dec
sbb
adc
and
cwtl
fnstcw
push
push
out
notb
pop
pop
mov
xchg
xchg
sbb
and
mov
lea
jne
mov
mov
jle
lcall
and
push
stc
lcall
dec
movsb
and
sbb
sti
inc
ret
ret
stos
push
fwait
mov
and
jae
inc
out
out
and
psubq
xor
pop
lret
push
out
out
movsl
imul
fsubrs
out
je
sub
xor
aaa
movsb
dec
mov
inc
mov
ds
dec
fisttps
sub
jl
jg
sti
sbb
daa
mov
ss
push
fwait
push
mov
jnp
imul
dec
cmpsb
cmp
or
jbe
inc
fistl
es
push
mov
jnp
imul
dec
cmpsb
cmp
or
sar
test
jmp
push
mov
loop
xchg
movsl
inc
std
sbb
lret
pop
push
xor
mov
dec
or
and
rol
add
push
in
pop
and
xor
cltd
test
xchg
mov
mov
sti
cmc
repz
dec
adc
jb
jnp
xchg
cmp
jne
dec
aas
roll
scas
call
cmp
sub
pop
mov
push
jmp
ret
movsb
mov
imul
in
pop
icebp
push
pop
pop
hlt
scas
fcompl
xor
data16
test
insb
and
lret
shr
in
mov
sbb
sahf
xor
rcrb
enter
das
andl
mov
icebp
jns
push
fisubrs
dec
cmpsl
xchg
push
inc
cmp
xchg
mov
adc
shr
adc
notl
js
sbb
leave
jmp
in
mov
icebp
popa
cmp
add
or
mov
in
nop
mov
sub
fnstcw
cmp
adc
xor
loope
dec
jmp
xchg
insl
cmp
mov
into
or
push
sbb
xchg
insl
jnp
popf
sub
ja
adc
insl
and
pop
sub
sbb
mov
xchg
int3
imul
sbb
lea
adc
jae
mov
and
push
push
push
roll
fs
adc
lock
scas
inc
into
ja
rolb
lahf
jg
add
xchg
mov
or
fnstcw
jne
mov
jp
push
aaa
test
xchg
adc
ret
xor
push
jno
sahf
pop
lods
add
inc
push
fnstenvs
arpl
push
cwtl
sub
mov
xor
inc
xor
jle
jmp
in
outsb
jl
lods
pop
enter
clc
es
stos
cmp
in
cltd
mov
sbb
push
sbb
adc
or
ror
and
ret
gs
divb
divb
mov
xchg
shl
pop
stos
and
pop
sahf
xor
sub
nop
dec
daa
xor
rorl
pop
into
jno
jmp
lret
scas
cmc
mov
mov
sahf
fcmovbe
jmp
enter
mov
lret
aad
scas
pop
in
into
push
pop
mov
js
outsb
lods
fs
ds
mov
xlat
stc
mov
in
fiadds
sub
insl
mov
fptan
xor
dec
adc
cwtl
add
jl
push
jo
add
push
jb
addl
insb
dec
pop
mull
es
popf
repnz
jo
shrl
dec
pop
mov
lds
ror
pop
mov
and
pop
xchg
mov
sbb
push
and
sbb
outsb
and
divl
gs
lcall
pop
pusha
mov
fwait
cli
push
adc
incl
mov
xor
or
sbb
push
or
or
or
lret
loopne
test
inc
add
push
xor
cmpsl
icebp
and
in
not
hlt
xchg
and
sbb
enter
lds
jle
add
mov
and
xchg
push
jbe
punpcklwd
test
xchg
fisubl
mov
into
inc
add
mov
jo
jge
mov
ret
cmp
sbb
outsl
mov
and
sub
arpl
mov
ljmp
xlat
int3
adc
loop
sbb
mov
int3
jne
mov
cmc
lock
sbb
mov
jecxz
adcl
xchg
xchg
testb
std
pop
shl
add
xor
mov
daa
or
daa
cmp
cli
inc
mov
rcrl
adc
cmp
sub
test
and
sub
or
inc
inc
mov
mov
mov
clc
cmpsl
dec
cmp
xchg
out
push
adc
movsb
sbb
cwtl
ja
xor
cmc
jmp
decl
scas
int
add
dec
or
cmc
outsl
push
sbb
mov
xchg
or
push
pop
or
jecxz
mov
lahf
sub
cmp
jnp
cmpsb
push
repnz
repz
pop
mov
sbb
mov
les
mov
add
push
imul
les
xor
xchg
and
inc
inc
pop
jns
adc
or
add
rcrl
test
mov
dec
jmp
mov
test
in
movsl
shlb
mov
lock
fs
jl
mov
shr
outsb
fmull
add
push
cmp
js
xchg
fldcw
xchg
outsl
add
arpl
lret
lret
ficoms
outsl
pop
in
idivb
cmpl
mulb
jnp
add
xchg
lret
icebp
in
add
clc
dec
mov
lock
lret
add
sti
dec
mov
je
dec
enter
js
dec
add
repz
jg
adc
push
inc
iret
dec
dec
mov
push
out
daa
or
int
xchg
push
test
jmp
lret
pop
mov
popf
cmp
mov
push
pop
add
daa
adc
std
push
mov
inc
jp
scas
mov
inc
xor
dec
lcall
pushf
cltd
lds
push
dec
sbb
jge
pop
adc
jl
shlb
add
jb
push
sbb
int3
insb
xor
cmp
push
rorl
lock
mov
pop
cmp
insb
rorl
lock
test
dec
outsb
rorb
imul
adc
mov
aad
push
mov
pop
or
loope
test
mov
movsb
lds
mov
fwait
stos
cmc
dec
mov
sbb
bound
scas
push
or
addr16
add
mov
mov
cmp
mov
and
mov
imul
xor
jmp
add
dec
push
sahf
iret
jg
sbb
add
or
dec
stos
test
aam
mov
push
pusha
inc
inc
sbb
int
sbb
dec
out
popa
aad
rolb
sbbl
push
data16
xchg
and
inc
mov
lret
cmpsb
add
fcmovbe
pop
adcb
imul
test
push
xchg
push
adc
and
pop
lods
gs
inc
xor
shr
push
inc
sbb
cmp
jg
cmc
hlt
shr
testb
sti
sub
ds
inc
nop
xor
mov
push
call
cltd
sub
pop
xchg
xchg
sub
aas
add
loop
xor
pop
imul
adc
mov
fisttps
dec
clc
jle
pop
dec
into
mov
ljmp
scas
xor
in
test
lret
dec
ret
mov
movb
pop
repz
add
out
fwait
dec
push
ret
lcall
jl
mov
test
out
imul
fisubs
mov
push
jnp
test
dec
push
dec
lods
xor
test
fs
jg
mov
call
or
ljmp
jge
scas
aas
mov
push
stos
pop
loop
add
xchg
or
pop
loope
cld
rorl
ljmp
jno
lcall
sbb
xchg
mov
stos
insl
jecxz
sub
push
dec
je
fsts
jle
loop
rorb
popa
insl
sub
mov
inc
pusha
ss
std
xchg
int
sbb
dec
dec
push
add
stos
mov
pop
lods
push
cmpsb
xor
lret
bound
sub
aam
xor
or
andb
adc
addr16
inc
adc
ss
mov
xchg
jle
sti
arpl
lret
push
or
xor
shrb
repnz
dec
mov
push
inc
and
out
dec
call
mov
mov
mov
lock
ljmp
push
inc
loope
bound
pop
insl
sub
add
add
loopew
and
mull
pop
mov
add
mov
adc
clc
dec
pop
sub
scas
call
xchg
mov
popa
xor
pop
cmp
adc
nop
push
cmp
push
adc
adc
cmp
fst
pop
and
pop
nop
mulb
sbb
rorb
and
adc
test
nop
cld
shl
mov
xchg
xchg
dec
pop
add
leave
mov
fstpl
stc
stos
inc
or
mov
and
and
inc
addb
mov
xor
int
sarb
or
xchg
outsb
scas
roll
adc
sub
and
fisttps
fs
sub
ret
shlb
sarb
fsubrs
jb
dec
cltd
pop
sub
mov
or
xchg
sti
cmc
cmp
ja
sub
int3
lret
out
sub
mov
in
and
sahf
mov
test
enter
xchg
mov
inc
cmp
lret
lret
add
subl
cmc
sbb
xchg
xchg
cmp
cltd
out
inc
imul
repz
lds
adc
ret
inc
lahf
mov
int3
imul
shl
mov
rclb
int
scas
insl
inc
cmp
or
aas
andb
sbbb
orl
pop
jne
pop
xchg
xlat
in
insb
fists
pop
lock
mov
jge
stos
mov
in
xor
pop
ja
adc
mov
in
icebp
sbb
inc
out
sub
push
sbb
pop
xchg
inc
imul
into
data16
xor
lods
iret
inc
mov
sbb
dec
adc
mov
add
imul
inc
xchg
dec
and
xchg
imul
push
shlb
movsb
sub
add
scas
pop
jle
pushf
movsl
or
sub
int
add
fldl
lahf
xchg
insb
mov
pusha
test
mov
jge
and
add
fbstp
inc
dec
and
xor
in
int3
or
je
clc
mov
mov
stos
icebp
add
adc
xchg
pop
pop
pause
ficompl
or
ds
repz
movsl
sti
cmp
pop
jp
mov
into
sub
in
jbe,pn
in
push
cmp
push
shll
xchg
pop
cmp
xlat
pop
inc
dec
adc
push
je
add
outsb
jg
stos
xchg
lahf
outsl
iret
cld
loope
out
imul
jmp
test
test
nop
xchg
xor
addr16
sub
mov
lds
fisubrl
inc
xor
inc
mov
inc
pop
cltd
dec
inc
ljmp
movsb
cmp
scas
pop
aad
xor
fcmovbe
sbb
dec
cmp
inc
xchg
sub
xor
jmp
fs
js
push
in
mov
mov
adc
add
push
int
loopne
add
aad
and
or
inc
aam
cmp
mov
or
mov
clc
lahf
jae
aad
cwtl
vpaddq
adc
add
jge
and
popa
mov
fincstp
test
int3
xchg
ljmp
mov
into
sbb
push
sbb
adcb
fucom
fadds
pop
push
or
adc
aad
inc
aaa
sbb
jg
iret
push
scas
cmpsb
and
xor
stos
jne
push
xlat
aaa
dec
jmp
imul
add
out
ret
mov
cli
mov
imul
pop
lret
sub
jmp
ljmp
dec
mov
test
push
sbb
pop
dec
mov
adc
out
or
bound
pop
sub
push
test
pop
cmpsl
xlat
cmc
lret
push
cld
test
shrl
mov
bnd
mov
es
lahf
rolb
push
xor
add
popf
nop
cmp
loop
lahf
out
or
adc
and
incl
push
pop
bound
xchg
xchg
or
xchg
leave
fildl
and
ja
fbstp
inc
in
repz
jle
and
push
dec
sbb
mov
aam
out
fadds
sbb
ss
lahf
sahf
out
je
stos
and
mov
push
ljmp
mov
xchg
sub
mov
scas
inc
inc
in
sub
call
sahf
aad
cmpsl
or
scas
fcmovu
pop
lcall
dec
into
add
test
out
and
stos
sbb
lret
jecxz
add
js
add
and
shlb
mov
sahf
add
cmpsb
repz
xor
mov
mov
aad
popf
push
and
mov
adc
ds
mov
enter
rorb
repz
xor
into
je
pop
sbb
aam
aad
push
into
push
or
mov
stc
lcall
dec
fdivp
scas
fucom
dec
jno
dec
icebp
clc
lock
pop
in
jns
aas
loop
pop
sub
lods
aas
mov
jns
in
gs
jp
add
cmp
loopne
inc
dec
xlat
lret
cmp
sbb
jmp
hlt
jmp
cld
aaa
xchg
dec
je
cmc
adc
std
push
xchg
mov
je
fmuls
sub
int
pop
adc
or
in
pop
and
adc
xor
test
sbb
dec
and
orb
rcrb
adc
ss
iret
scas
mov
jmp
mov
sbbb
and
sahf
inc
ficompl
and
push
fadds
add
jae
arpl
jo
mov
cmp
outsl
push
xor
cmpsb
decb
jnp
adcl
sbb
mov
sbb
add
lcall
xchg
addr16
arpl
jns
or
dec
mov
out
gs
pusha
inc
ret
mov
movsl
popa
imul
sbbl
test
fst
push
xor
cmpsb
test
ds
xchg
cmp
add
lcall
ds
fucomi
inc
scas
dec
in
or
mov
scas
cmp
aas
fildl
inc
xchg
jnp
pop
shlb
push
sub
xchg
cmp
into
mov
push
xchg
sub
int3
and
lds
scas
or
out
cwtl
cmp
ljmp
xor
out
das
mov
cmc
mov
divb
jg
and
xor
lcall
xor
inc
mov
in
movb
test
cmp
add
mov
jge
add
sti
ja
clc
mov
aaa
adc
sbb
mov
cltd
push
imul
ffreep
fs
mov
cmp
pop
sti
mov
inc
arpl
dec
cli
inc
popf
xor
dec
sahf
addr16
push
xchg
in
je
mov
sbb
fs
dec
andl
fs
xchg
jle
or
ret
gs
and
stos
ljmp
sbb
adc
lcall
pop
fs
imul
clc
xchg
ds
test
inc
inc
enter
mov
xchg
aaa
dec
and
sbb
sub
inc
jmp
fwait
repz
inc
inc
fmulp
inc
mov
mov
xchg
pushl
xchg
or
test
mov
das
aaa
sub
out
pop
mov
daa
arpl
dec
jge
mov
pushl
rcr
and
loopne
int
dec
ret
add
pop
push
xor
and
or
or
mov
dec
mov
iret
pop
cmp
cmp
dec
mov
xor
rcrb
call
dec
sti
sub
dec
xor
lods
jae
popf
inc
dec
test
xor
mov
shll
add
pop
sub
push
clc
xor
jge
mov
js
push
mov
xor
inc
jb
sti
cmp
sbb
add
test
push
sbb
insb
sub
adc
dec
lods
out
outsl
sahf
and
loop
cli
loope
inc
repnz
add
sbb
xor
nop
mov
mov
sub
scas
cmpsl
push
mov
lock
fadds
imul
ljmp
inc
iret
pop
popf
icebp
sub
out
sbb
pop
cmpsl
call
repnz
sub
cmp
sub
mov
repnz
cld
jecxz
stc
ja
imul
aaa
pop
jge
mov
lret
dec
loop
inc
push
cmp
or
cmp
out
or
push
push
aam
insl
push
mov
push
rolb
ljmp
jae
stc
nop
mov
add
push
sbb
enter
mov
inc
in
jbe
movsb
nop
pop
xor
xor
xor
jne
outsl
pop
iret
cmc
push
pop
push
add
push
dec
mov
xchg
push
test
sbb
adc
ja
xchg
mov
inc
outsb
adc
inc
and
jle
adc
ljmp
mov
sbb
dec
sbb
cmpsl
fsubr
cmp
rclb
imul
test
fs
not
xchg
lcall
push
outsb
xchg
cmp
push
jb
xor
outsb
nop
test
nop
xchg
inc
push
jne
sbb
dec
inc
adc
test
and
pop
mov
movsb
loopne
inc
mov
add
fnsave
and
jge
mov
inc
int3
or
mov
xchg
cld
rep
outsb
fbld
cmp
stos
mov
jmp
lds
mov
out
inc
test
fnstsw
shlb
int
mov
out
fstl
lcall
ret
fistpl
jmp
xchg
leave
mov
push
push
sbbb
push
das
sbb
mov
lahf
sbb
out
je
fiaddl
xor
scas
sub
aas
xchg
mov
push
sbb
push
add
out
pop
fwait
lret
stos
stos
loop
repnz
aam
mov
push
rol
jmp
sarl
insl
mov
mov
dec
rorb
inc
out
and
fwait
dec
and
push
out
iret
xchg
gs
out
ljmp
push
out
inc
pusha
jae
mov
jnp
leave
test
xor
pop
fimuls
mov
push
test
sbb
push
push
mov
inc
inc
int3
movsl
lods
clc
pushf
stc
jno
movsl
and
jnp
cli
shrb
mov
adc
rorl
call
daa
xchg
jg
dec
dec
aas
movsl
stc
mov
popa
xchg
lret
and
mov
jo
scas
dec
outsl
jg
xchg
fwait
mov
xor
mov
lock
mov
sti
mov
mov
sti
insb
sti
mov
imul
sub
mov
and
push
icebp
lea
subb
push
fnstcw
sbb
dec
lods
inc
mov
mov
mov
hlt
mov
popa
rolb
daa
jge
sbb
js
in
jmp
jecxz
jo
gs
insb
inc
or
ret
xor
aas
pop
and
add
hlt
rcrb
push
mov
in
dec
hlt
sti
shlb
divb
mov
push
mov
sub
or
out
cld
mov
faddp
data16
addr16
out
jns
jge
or
js
jmp
lret
cmpsl
and
sbb
das
push
or
sbb
dec
bound
pop
and
jle
mov
andb
loopne
pop
xchg
add
jp
cltd
xlat
jmp
inc
and
xlat
out
pop
mov
dec
adc
mov
pop
orb
cwtl
adc
rcr
shl
add
mulb
lret
pop
lahf
mov
jnp
cli
mov
dec
mov
and
inc
push
movsl
jns
jmp
test
xchg
xor
xchg
ret
push
nop
aas
adc
stos
addr16
cmp
insb
je
push
and
push
mov
fwait
imul
adc
push
jnp
inc
jnp
in
dec
mov
faddp
xchg
dec
sub
mov
addr16
xchg
dec
out
jno
insl
fldenv
loopne
cmc
lret
fiaddl
popf
daa
push
add
pop
rclb
push
jg
jg
and
mov
cwtl
jne
inc
pop
inc
jmp
test
inc
and
mov
and
sub
scas
and
clc
push
cmp
div
xor
mov
mov
jle
ret
sbb
adc
bound
mov
inc
cmpsl
int
addb
sbb
mov
or
sbb
jp
mov
sub
mov
cli
pop
sub
sahf
xor
or
sub
jle
xor
outsb
iret
scas
sub
inc
dec
and
xchg
neg
mov
fwait
ss
lcall
iret
cmp
xor
pop
scas
shll
push
adc
and
mov
push
and
dec
fcmovne
mov
sub
cmp
dec
insl
lret
int
sub
scas
dec
mov
movsb
dec
dec
ss
xor
test
daa
inc
pusha
push
into
pop
icebp
dec
lds
loop
or
jns
sub
mov
jae
adc
sub
mov
dec
xchg
pop
cmp
add
pop
iret
sbb
xchg
js
push
lahf
mov
add
bound
icebp
mov
in
adc
repnz
inc
add
cmpsb
outsl
rcrl
call
or
mov
add
add
push
lret
es
push
mov
jnp
imul
dec
cmpsb
cmp
or
jbe
inc
fistl
es
push
mov
jnp
imul
dec
cmpsb
cmp
or
inc
jmp
fistl
mov
ss
push
fwait
mov
jnp
imul
dec
cmpsb
cmp
ljmp
out
sbb
jbe
es
xchg
dec
out
or
insb
pop
cmp
mov
push
jns
imul
pop
cld
lcall
mov
into
insb
fidivrs
mov
cmp
int3
jle
dec
in
pop
cld
mov
pushf
push
lods
push
mov
into
insb
sarb
mov
outsb
sahf
cmp
int3
fcoml
inc
cld
aaa
mov
pushf
push
lods
push
mov
xchg
or
jae
pop
leave
cmp
int3
adc
jge
jg,pt
jbe
mov
inc
cmp
xchg
push
and
out
lcall
add
arpl
movsb
xlat
mov
jns
lock
xchg
xchg
or
sbb
nop
in
add
push
mov
lods
push
subl
fldcw
xchg
jp
rorl
pop
inc
gs
pushl
sti
xchg
and
mov
rcrl
and
imul
aas
out
mov
or
xchg
cs
jno
mov
or
cmp
std
fsts
pop
adc
jae
mov
mov
sbb
fisttpl
int3
fmull
pop
cld
cmp
mov
insb
jl
or
sbb
sub
push
add
sub
inc
loop
in
out
sub
cmp
repz
int3
pop
fisubs
in
mov
ds
push
fisttpl
lods
xor
sub
or
aad
clc
dec
cli
insb
or
ss
data16
pushf
push
lods
push
mov
into
insb
fidivrs
mov
cmp
int3
jle
dec
in
pop
cld
mov
pushf
push
lods
push
mov
into
insb
fidivrs
mov
cmp
int3
push
xchg
icebp
pop
sub
and
fstpt
scas
mov
mov
pop
lock
jmp
and
jbe
jb
adc
inc
xor
add
dec
cmc
ds
shr
lcall
adc
test
sar
data16
xchg
int
sar
ror
or
orl
jo
enter
rorb
test
out
add
ror
std
fcmove
mov
cmc
cmpl
jbe,pt
sbb
pop
es
mov
test
aaa
nop
clc
rorb
inc
jbe
and
or
aam
push
call
mov
mov
xchg
xor
push
cmpsl
je
ljmp
mov
jae
jg
xchg
lahf
lcall
push
pop
or
or
push
add
in
sub
outsl
mov
loop
cmp
ret
cmp
insb
lock
movsb
sbb
hlt
mov
mov
mov
hlt
lcall
cmp
call
orb
inc
cmpb
outsl
cmc
jnp
jnp
pop
rorb
jns
mov
jge
sub
adcl
jns
and
clc
loope
adc
adc
imul
sbb
cmpsb
imul
sbb
or
dec
imul
into
and
mov
shll
pop
or
and
push
pop
xchg
or
add
jecxz
scas
iret
mov
jmp
jno
sbbb
pop
test
jle
mov
push
push
push
or
stc
lea
aas
jecxz
xchg
push
mov
dec
pop
jle
sub
adc
mov
loope
lds
mov
mov
mov
mov
js
jge
dec
or
and
imul
imull
xor
mov
sbb
out
sub
cltd
cld
lods
stos
jle
aad
popf
js
outsl
push
mov
aam
icebp
pop
sub
fists
sarb
pop
mov
and
and
and
aas
cmp
sub
sub
mov
in
jl
popa
stos
mov
fidivs
test
dec
sbb
imul
jmp
ror
lods
dec
divl
jg
dec
lret
dec
xor
and
dec
fisubs
mov
hlt
xor
filds
cs
fwait
out
inc
push
ljmp
xchg
lahf
enter
mov
cltd
pop
or
loope
data16
xchg
and
popf
arpl
dec
bound
in
mov
inc
pop
adc
arpl
and
xor
loope
aam
ss
negl
push
je
jns
iret
js
xchg
stc
lret
fistpll
xorb
insl
or
je
orb
cmp
int3
inc
mov
popf
jno
lret
out
iret
push
movsl
dec
in
adc
jecxz
cmp
add
push
mov
push
pop
clc
mov
pusha
test
scas
mov
sbb
sub
mov
popf
hlt
add
das
dec
popa
mov
insl
jp
in
dec
leave
push
out
pop
dec
push
dec
loop
push
push
mov
enter
ds
push
incl
mov
lods
jne
mull
dec
daa
jns
or
jge
dec
mov
sbb
hlt
stos
push
aas
fidivs
sbb
stos
xchg
cmpsl
jb
ret
mov
jp
and
into
aam
in
aam
adc
or
jle
mov
mov
sbb
xchg
sbb
xchg
xchg
fcmovnu
inc
push
loopne
out
xchg
pop
bound
movsl
adc
xor
scas
xchg
and
mov
sub
roll
scas
insb
call
mov
xlat
test
fsubrp
dec
inc
call
pusha
aas
sbb
nop
jbe
orl
cltd
jae
dec
or
adc
and
pusha
addr16
push
outsb
xchg
cmpsl
lret
dec
pop
iret
dec
xchg
pushf
addr16
mov
idivl
nop
cmp
je
popf
stos
dec
in
out
jnp
stc
js
push
and
enter
mov
notl
cmp
jl
pusha
loop
sahf
push
sub
into
dec
xor
jg
and
xor
mov
sbbl
inc
icebp
in
inc
mov
insl
hlt
shll
inc
mov
jno
iret
push
aas
aad
iret
and
mov
fidivs
stos
or
adc
pushf
fwait
xchg
cld
aam
add
sub
and
lds
jl
in
test
and
jbe
scas
insl
outsl
mov
ds
pop
icebp
pop
repz
dec
jbe,pt
call
mov
cmpsl
lock
jbe
mov
sti
push
pop
arpl
pop
cwtl
mov
leave
aam
xchg
loopne
adc
fstp
xor
rcrb
mov
jbe
icebp
int
xchg
and
cmpsb
es
out
loop
in
sbb
mov
test
cmp
mov
repz
aam
loopne
fwait
mov
lret
xor
iret
popf
stos
sub
mov
sub
mov
fldt
outsl
test
jae
mov
xor
lcall
cs
xchg
adc
adc
jne
daa
pusha
inc
add
jb
mov
adc
sub
lret
xor
xchg
jl
push
xchg
into
add
xchg
mov
mov
sti
push
int
sub
xchg
and
push
mov
js
inc
jb
pop
jae
sub
out
popf
mov
imul
adc
cld
mov
out
push
aam
repz
bound
pop
roll
xor
or
xchg
cmp
adc
dec
or
add
in
test
fsubl
lods
addr16
test
push
inc
jle
lods
in
fisttpl
cli
sahf
lahf
mov
lahf
push
jl
pop
cmpsl
cwtl
addr16
xchg
adc
inc
push
das
mov
mov
pop
mov
insb
dec
mov
jle
mov
dec
addr16
test
dec
sahf
jecxz
imull
nop
xchg
push
push
lods
xchg
fnstcw
mov
mov
repz
pop
mov
push
ss
sub
ja
mov
inc
ret
push
fcmovnu
inc
pop
mov
popf
xlat
push
mov
inc
mov
jnp
out
insb
or
test
lahf
push
inc
and
xor
andl
and
push
shl
roll
xchg
cmpsl
out
hlt
movups
jl
loop
mov
call
stos
add
inc
and
inc
cmc
inc
mov
push
lcall
xchg
in
lret
cmp
sbb
test
jae
dec
add
adc
add
icebp
test
mov
stos
push
mov
sbbl
xchg
sti
imul
aas
insb
and
cmp
out
xchg
js
xor
pop
sarl
test
cmp
mov
xchg
inc
lcall
shll
aad
xor
mov
add
addb
in
mov
icebp
cs
lock
mov
cmp
clc
jge
sub
mov
push
sub
mov
and
ds
push
adc
shrl
insl
test
add
push
inc
sahf
js
dec
dec
out
int
jae
ret
ficoms
add
lcall
je
or
or
addr16
ret
jb
sub
aad
xchg
gs
addl
sbb
push
mov
mov
scas
lahf
add
xor
jae
imul
xchg
stc
adc
addr16
sar
bound
mov
ror
cli
jle
inc
fnstenv
insl
jne
into
pop
xchg
mov
pop
es
fbstp
xor
popf
jle
insl
shr
inc
adc
fists
test
std
or
lods
nop
lret
in
jno
mov
imul
inc
das
leave
fcmovnb
out
negl
and
dec
adc
mov
out
int3
or
ret
data16
jp
jbe
leave
and
mov
jnp
push
mov
aam
and
fwait
sbb
cmp
xlat
xor
aam
fsubrp
mov
mov
add
insl
movsl
or
mov
xorl
add
popf
jno
xchg
mov
xchg
mov
jge
mov
push
push
rorl
fisttpll
dec
scas
cltd
aaa
push
clc
mov
daa
add
loopne
das
mov
shl
addl
lret
mov
jecxz
mov
adc
or
cmc
fpatan
mov
call
push
outsl
push
mov
andl
jge
sbb
inc
jo
mov
stos
xor
pop
pop
jo
scas
out
adc
mov
lock
and
sub
jle
pop
dec
fcompl
jne
data16
int3
test
mov
mov
loop
mov
outsb
ror
adc
pusha
popf
xchg
dec
mov
xchg
mov
ss
cmc
adc
jo
xor
rolb
and
cmpsb
pop
loopne
dec
xlat
add
mov
cmp
outsb
push
mov
xchg
jnp
sbb
clc
fdivs
xor
sub
mov
mov
adcl
jns
pusha
sbbb
adc
pop
or
or
sub
call
adc
test
and
cmp
incb
in
sub
arpl
jne
stc
gs
jmp
cmpsl
roll
cmpsl
or
cmp
out
aad
mov
popa
pop
dec
adc
sarb
dec
movsb
pop
out
jo
rcll
stc
mov
cld
jb
pop
pop
hlt
pop
xchg
mov
idivl
xchg
push
xchg
pop
daa
cmp
dec
mov
pop
adc
or
push
stos
rcrb
and
inc
push
shll
mov
imul
and
xor
pusha
outsl
imul
jno
je
cmp
lods
mov
push
sub
lods
jb
test
inc
jl
mov
lds
mov
test
and
add
and
in
test
xchg
dec
repz
cli
stc
mov
repz
push
xchg
dec
fidivl
into
mov
pop
cltd
in
ljmp
jbe
das
mov
jbe
in
xor
sbb
ficoms
cmpb
stc
lcall
pop
jecxz
rolb
mov
dec
push
mov
repz
hlt
mov
out
int3
cmp
std
xchg
push
jnp
cmp
mov
sub
xchg
cld
push
dec
dec
repnz
xlat
nop
adc
mov
or
loopne
xor
and
out
push
push
addr16
pop
and
push
sbb
arpl
lcall
scas
jecxz
mov
pop
mov
or
cmpsb
int
xchg
ret
pop
ljmp
aaa
mov
mov
adc
rcrb
popf
mov
inc
addr16
jnp
repnz
int
sar
sub
push
dec
enter
dec
cmpsl
ror
inc
fistps
sub
pop
jne
ret
mov
xor
inc
sbb
sbb
xorl
xlat
ja
adc
add
cmp
fisubs
jl
pop
repz
xchg
cmp
sahf
adc
stos
jno
psubsw
or
mov
jbe
scas
call
mov
xor
pushf
pop
push
pop
add
pop
and
dec
pop
mov
sub
in
scas
or
imul
clc
inc
jecxz
and
sahf
cltd
stos
xchg
out
cmp
inc
lcall
icebp
or
adc
lahf
pop
popf
pop
stos
sub
cwtl
negb
pushf
adc
pop
push
idiv
daa
mov
xor
test
xor
cmpsb
pop
and
sahf
inc
mov
stc
adc
std
popa
cmpsb
rolb
jne
cs
repnz
cmp
hlt
xor
int
stc
inc
add
or
jg
fmul
aas
bound
loop
repz
call
pop
lret
rol
xchg
sarl
mov
lahf
sbb
jno
sti
lds
fstps
pusha
test
xor
adc
lods
stos
jne
arpl
dec
pop
jp
in
and
enter
xor
daa
idivl
jge
inc
jb
jns
push
lock
cltd
xchg
jge
mov
push
jnp,pt
pop
dec
roll
int
das
pusha
fwait
pop
xlat
lock
mov
popa
sub
aad
stos
bnd
sub
fistpll
cmp
push
push
xor
data16
adc
sahf
enter
imul
movb
jae
fistpl
cmp
cmpb
pusha
ret
lds
dec
hlt
out
lret
mov
mov
mov
jo
sub
or
cmpsb
sahf
jge
addr16
test
jmp
mov
popf
cwtl
dec
jne
dec
xchg
xor
xorb
insb
dec
push
jp
jo
pop
xchg
sahf
jno
xor
aam
xor
push
loop
xchg
jno
add
addb
sub
dec
pop
loopne
lods
or
mov
out
es
fwait
pusha
inc
filds
mov
in
notb
and
sbb
xchg
push
leave
mov
shrl
or
mov
mov
stos
inc
dec
mov
clc
pop
inc
lcall
jmp
pop
adc
out
fldenv
sub
je
pop
jmp
cmp
leave
je
jecxz
jnp
cmp
sahf
daa
push
testl
fiaddl
stc
fwait
sti
or
jne
sub
repnz
enter
ljmp
pop
xor
imul
fnsave
jns
xchg
lods
int
pop
in
dec
arpl
sbb
or
xchg
sub
jmp
jg
xor
lcall
icebp
xchg
sub
lds
mov
les
pop
ret
popl
idivl
dec
pop
add
dec
xor
and
xchg
nop
in
das
cwtl
pop
sub
inc
mov
add
addr16
adc
xchg
inc
cmc
daa
sbb
test
ror
mov
push
stc
lcall
test
int3
js
inc
mov
in
sbb
out
out
imul
nop
inc
sar
sbb
mov
sub
cltd
arpl
movsb
sbb
enter
sub
pushf
scas
push
mov
inc
out
mov
inc
ss
pushf
mov
pop
dec
push
arpl
mov
mov
pop
cmp
adc
mov
shlb
lret
pop
filds
jbe
fsubrs
mov
inc
add
lahf
and
and
mov
stc
dec
xchg
pop
adcb
sub
add
inc
repnz
push
stos
pop
fistpll
loopne
jmp
lcall
sub
dec
in
daa
mov
add
sbb
js
xlat
movsb
aad
lock
je
test
roll
into
and
fisubrs
sahf
scas
push
mov
mov
dec
inc
fdivrl
xor
lock
adcl
mov
and
lock
jle
cld
mov
jle
xchg
icebp
push
push
sbb
jl
pusha
and
mov
loop
sub
mov
andb
mov
cld
int
sarl
cmp
rcr
test
inc
in
jb
adc
push
out
push
mov
ret
outsb
ds
cmpsb
test
pop
stos
pop
aad
out
push
mov
pop
mov
in
jg
mov
scas
xlat
sbbb
pop
iret
fcmovne
and
pop
push
and
sub
mov
insl
adc
mov
subl
cmpsl
and
cmp
or
jl
sti
cwtl
push
jg
rcrl
xor
mov
pop
jno
mov
and
test
je
movnti
fsubr
jne
mov
lret
fbstp
push
aam
inc
inc
add
stos
int3
outsl
imulb
xorb
xor
rcrl
dec
jb
aas
aad
sub
jb
xlat
xchg
lea
aaa
out
inc
in
popf
mov
cmp
jb
or
scas
mov
je
mov
ljmp
jo
mov
lods
outsl
sbb
hlt
inc
xor
sub
std
cld
jns
sub
add
stos
aad
enter
test
jg
icebp
xor
cmc
adc
inc
cmp
xor
cmp
push
fwait
and
icebp
inc
jb
subb
bound
in
adc
mov
sbb
andl
je
jg
stc
xchg
and
sahf
mov
popf
mov
xchg
inc
and
push
and
andl
mov
push
pusha
sar
or
std
jb
in
jns
push
inc
add
cs
add
leave
in
sub
xlat
lock
imul
jno
into
call
xor
pop
and
enter
sub
dec
xor
or
dec
sahf
inc
cmp
or
ret
push
jb
mov
jbe
dec
sbb
inc
jns
js
repz
test
inc
fadds
subb
ja
sub
pusha
sbb
push
mov
popf
jbe
mov
push
mov
bound
and
mov
movsb
adc
xorb
ror
cmpsl
add
xchg
lds
in
cmpsb
push
dec
enter
mov
push
or
push
stc
stc
mov
in
dec
sbb
dec
test
std
push
xchg
sbb
pop
sub
icebp
sbb
mov
cmpsb
mov
and
mov
cld
mov
jmp
pop
scas
inc
xchg
mov
dec
pavgw
in
mov
xor
fisubrs
cmpsl
mov
dec
lcall
pop
inc
xchg
jmp
shl
scas
jno
mov
filds
cwtl
inc
aam
xor
mov
push
outsl
popf
pop
sub
fistl
aas
cmp
cmpl
cs
or
jg
adc
cmpsl
lret
mov
hlt
lahf
divb
sbb
mov
inc
cmp
push
sbb
es
lcall
or
mov
xchg
xchg
or
sbb
mov
jb
std
mov
sub
movsl
fwait
movsl
mov
shrb
sub
scas
fsubs
fistps
pop
xlat
insl
push
inc
fadd
pusha
sub
movsb
stc
xchg
push
xor
pop
inc
inc
ret
jmp
out
int3
inc
notl
cmpsb
dec
nop
sub
pop
cltd
rclb
ja
enter
jb
pusha
out
or
ja
pop
mov
mov
js
repz
add
insl
cmpsb
fmulp
jb
rorb
or
and
movsb
stos
inc
loopne
sub
add
or
data16
daa
inc
sub
ror
lret
push
add
out
mov
mov
outsb
pushf
xchg
outsb
ljmp
pop
nop
int
push
xchg
in
cmp
out
mov
push
or
in
and
cli
jns
and
pop
lahf
orb
in
jl
pushf
popa
roll
loopne
orl
neg
fidivl
add
xor
ret
std
bound
cmp
sbb
mov
mov
fcompl
push
sahf
and
push
jp
pop
sub
shll
lock
mov
jl
mov
test
push
dec
cmp
and
fdivs
jae
add
es
xchg
cmp
or
push
adc
xor
push
lahf
loope
cmp
sbb
xchg
ljmp
mov
test
aad
push
mov
push
call
lret
cs
dec
pop
and
js
mov
sarl
sub
fiadds
push
sub
jl
in
ss
and
inc
push
mov
ret
cmp
xchg
cmc
fistpll
aas
nop
stc
daa
stos
imul
lds
inc
mov
nop
daa
sub
pop
xlat
inc
repnz
stc
stos
xor
dec
bound
flds
mov
add
imul
pushf
pop
mov
insb
outsl
in
cs
adc
cmp
test
mov
loopne
or
rcll
mov
push
mov
cli
mov
flds
push
mov
fadd
jl
cwtl
rclb
mov
fwait
arpl
sbb
enter
mov
push
movsl
xlat
cmp
data16
decl
xor
xchg
daa
cmp
loopne
in
mov
xor
xchg
mov
loopne
cld
xor
fnsave
or
out
shll
addr16
push
in
out
flds
outsl
push
mov
inc
cmpsb
and
push
xlat
cld
jnp
jp
test
push
ret
push
dec
inc
aaa
mov
pushf
adc
repz
xor
jne
push
pop
push
mov
repz
fabs
adcl
lods
andb
lcall
xchg
lretw
mov
ja
pop
out
jne
push
jnp
add
lds
xorb
data16
cmpsb
icebp
push
jmp
inc
fwait
jae
andb
fwait
adc
cmp
in
jno
clc
sbb
out
jmp
dec
aad
fidivrs
stos
fwait
fs
sbb
cmp
xor
mov
push
inc
pop
jbe
push
arpl
mov
push
sbb
mov
rolb
int3
stos
faddl
cld
mov
pushf
push
lods
push
mov
into
insb
fidivrs
mov
cmp
int3
jle
dec
in
pop
cld
mov
pushf
push
lods
push
mov
into
insb
fidivrs
mov
cmp
int3
jle
dec
insb
pop
cld
mov
sbb
lods
push
mov
into
insb
fidivrs
mov
cmp
int3
jl
dec
in
pop
cld
sub
ds
mov
mulb
or
test
jecxz
shll
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
sbb
sub
cmp
addl
jbe
mov
mov
xchg
idiv
out
push
sbb
sub
cmp
dec
push
pop
inc
insb
jbe
data16
mov
in
idiv
out
push
sbb
sub
cmp
dec
push
pop
inc
insb
jbe
data16
mov
mov
push
push
js
sub
push
lret
xlat
xchg
test
and
rcrl
das
inc
push
xchg
inc
jo
ret
fnstenv
jp
outsb
jno
sbb
push
mov
cmpsl
xor
fisttpll
divb
pop
add
sub
dec
dec
movl
and
mov
js
mov
pushfw
mov
out
jmp
cmp
imul
jmp
movsl
sbb
xor
leave
repz
cli
int3
loopne
fistl
mov
xor
xchg
dec
rcll
idiv
mov
xchg
jecxz
out
aaa
mov
mov
jl
fldt
xchg
push
mov
cmpsb
pushf
sub
test
push
sbb
sub
cmp
dec
push
pop
inc
insb
jbe
data16
mov
in
idiv
mov
inc
jo
pusha
dec
cmp
pop
or
jle
mov
stc
out
lods
fadd
enter
mov
imul
jno
xor
push
jmp
loopne
lret
mov
addb
jb
inc
push
push
add
pop
inc
insb
jbe
data16
mov
in
idiv
out
push
sbb
sub
cmp
dec
push
pop
inc
insb
jbe
data16
mov
in
idiv
out
push
cmp
mov
adc
mov
pop
push
xchg
mov
sti
lods
inc
scas
in
test
dec
clc
lods
xchg
cmp
idivl
mov
nop
xchg
push
sub
adc
push
jl
mov
push
mov
or
popa
xor
push
daa
lcall
pop
ficomps
imul
push
outsb
clc
push
movsl
mov
arpl
shll
xlat
nop
das
rorb
push
enter
push
mov
dec
mov
dec
mov
push
pop
lcall
int
int3
mov
stos
mov
push
cmp
mov
mov
adcl
push
lods
jnp
pop
and
ds
addb
fiaddl
sub
int
fbld
mov
push
pushf
xor
in
andl
or
xor
jno
fwait
icebp
mov
adc
mov
mov
adc
adc
in
ret
push
flds
add
hlt
xor
cld
push
out
in
pop
push
and
jmp
fbstp
dec
mov
pop
cmp
cmpsl
jg
lods
xor
call
mov
mov
call
mov
aaa
cs
cmc
inc
leave
mov
dec
in
out
scas
jg
call
lret
aas
cmpsl
and
lds
inc
jbe
lea
mov
iret
into
sub
sub
jne
pop
cmc
xor
cli
mov
insb
jmp
pop
loop
mov
sbb
push
iret
shlb
lods
xchg
lret
xor
xor
push
nop
xchg
sti
lcall
mov
jnp
jge
popa
repz
push
popa
cwtl
ss
fistl
aad
jl
lret
repz
lock
xchg
shrb
jo
mov
dec
das
push
dec
and
lods
imul
mov
aaa
ljmp
push
xor
xchg
insb
push
mov
xchg
ret
jo
ss
mov
and
cld
push
mov
mov
push
iret
xchg
out
iret
mov
mov
out
mov
pushf
das
dec
and
dec
or
outsl
or
js
adc
cmp
iret
adc
scas
adc
out
cmp
or
cmp
frstor
enter
pusha
xor
add
out
stc
jle
cmp
cmp
clc
or
dec
insl
adc
pop
call
mov
sbb
outsb
sbbl
and
xorl
cwtl
fsts
mov
je
push
daa
out
imul
stos
nop
and
arpl
xlat
mov
cmpsl
sub
push
add
fldenv
add
push
popa
jbe
mov
mov
mov
sub
in
or
rcrl
inc
push
or
into
mov
orb
jae
in
icebp
dec
adc
scas
insl
mov
sub
pop
lcall
xchg
cwtl
push
test
mov
mov
divb
dec
fwait
es
fidivs
idiv
add
mov
je
iret
lret
ss
pop
xchg
call
rorl
jno
stc
xorl
dec
cltd
mov
fcompl
mov
pop
es
sbb
mov
adc
faddp
andl
jne
scas
clc
loope
pop
add
mov
cmc
pop
outsl
dec
mov
rcrb
dec
je
jne
lock
in
add
in
jo
notb
scas
jbe
mov
cmp
lods
jg
xchg
add
pop
insl
mov
aas
movl
call
sub
mov
adc
test
subl
mov
inc
mov
les
movl
xor
je
mov
or
aas
ret
push
test
popa
outsb
mov
mov
pop
mov
mov
push
adc
mov
xchg
stos
mov
mov
or
sbb
fdivr
lea
lahf
in
popa
or
inc
push
xchg
add
cwtl
mov
fists
nop
add
mov
sbb
or
mov
in
push
fsubs
divl
and
fucomi
and
into
es
and
pop
imul
stos
xchg
inc
scas
out
push
ds
xor
xchg
cmp
movsl
stc
scas
arpl
sub
inc
dec
add
cmpsb
adc
les
add
js
cwtl
mov
cmc
in
add
pop
mov
jmp
mov
sahf
jle
test
cmp
stos
sub
call
or
daa
mov
cs
cmp
xchg
mov
hlt
ss
test
stos
lahf
push
aas
inc
mov
pop
jecxz
and
push
xor
into
aas
inc
dec
mov
jle
mov
bnd
pop
shl
test
pop
mov
or
cwtl
jge
mov
ja
xor
enter
bound
mov
pop
cltd
pop
xorb
cmpb
cmp
arpl
xor
push
sbb
js
arpl
sbb
sub
ja
insb
pusha
xchg
daa
ror
fimull
lahf
xchg
add
mov
das
adc
xchg
decb
insl
mov
sti
test
cmc
jno
push
inc
scas
scas
adc
push
xchg
aaa
mov
call
xchg
mov
cltd
xchg
shlb
mov
outsb
jle
mov
outsl
test
push
push
fadd
sbb
jecxz
cmp
mov
add
out
in
cmpsb
test
dec
imul
sti
mov
cmp
fadd
scas
aaa
sub
jae
jge
cwtl
repz
fldl
and
mov
rcrb
mov
dec
mov
adc
or
je
scas
enter
movsl
imul
in
or
mov
add
xchg
xchg
movsb
pop
repz
adc
adc
xchg
stc
sub
loope
mov
add
mov
ja
cmp
pop
cmp
or
loop
bound
aam
repnz
mul
aaa
fstpt
and
sub
sbb
or
bound
mov
out
adc
lock
enter
or
imul
ret
lea
stos
sub
push
cmp
push
pop
push
jb
movsb
ficoms
leave
pop
jecxz
mov
sbb
fimuls
jl
aaa
fmul
fstl
push
mov
pop
jp
pop
push
jo
xchg
xor
les
dec
sbb
add
iret
jle
jl
jnp
aad
xchg
andl
sbb
insl
int
dec
roll
test
mov
cwtl
jne
lock
dec
mov
fwait
popa
push
push
dec
mov
ret
xchg
fcomps
jne
adc
or
xchg
sub
mov
xchg
cmp
scas
adc
es
stos
gs
in
lods
pop
addr16
mov
add
and
es
imul
mov
in
or
mov
cmp
fwait
dec
lea
das
sub
outsb
sbb
sarb
hlt
push
xchg
aaa
push
lock
mov
cmpb
int
inc
push
ljmp
xchg
xchg
inc
in
sbb
mov
mov
push
cltd
pop
pushf
out
xchg
testl
pop
push
movsl
aad
jns
add
xor
push
push
in
mov
sahf
push
inc
mov
push
out
cmp
inc
sbb
push
fstpt
divl
and
and
push
stc
sti
mov
faddl
sbbl
out
out
or
mov
mov
cmp
adc
arpl
fcoml
mov
sahf
in
mov
in
sub
xchg
push
movsb
leave
das
addl
jbe
test
adc
sti
stos
movsb
test
jno
insb
pop
repz
xor
aas
call
stc
pop
in
inc
test
push
sub
mov
data16
sbb
pop
ror
sub
cmp
mov
inc
jl
sbb
xchg
lret
and
push
mov
inc
inc
icebp
jne
xor
icebp
int
adc
push
sbb
and
inc
push
bound
es
cli
out
mov
ret
push
xor
push
cmp
lock
lock
xor
push
iret
mov
push
mov
movsl
sbbl
insb
jecxz
mov
pop
jmp
sub
mov
sbbl
cmc
jnp
and
cmc
outsb
cmp
mov
push
mov
jno
lret
cmpsl
push
outsw
dec
stos
add
dec
xchg
adc
cmp
jns
test
push
test
dec
and
sbb
orb
push
mov
cmpsl
aam
adc
push
mov
scas
or
cs
push
outsb
imull
ja
jmp
push
mov
insl
out
mov
inc
out
out
popa
call
xchg
or
push
enter
dec
loope
push
jle
enter
out
test
and
rol
test
sub
jns
sbb
cmp
jmp
jns
es
xchg
xor
in
cwtl
stc
pushf
mov
popa
fsubrl
out
out
inc
neg
mov
ret
mov
fiaddl
push
pop
loope
test
push
imul
imul
pslld
das
mov
adc
call
xlat
push
sbbl
add
pop
cmp
jmp
push
cmpsb
aad
push
sub
sbb
mov
or
xorb
scas
xlat
cmp
adc
mov
stc
jg
mov
std
arpl
aad
fwait
out
jns
adc
mov
xchg
pop
pop
mov
inc
mov
pop
cmp
gs
mov
push
xor
jae
mov
cmp
outsb
aas
cmp
push
stc
jp
outsb
or
roll
xchg
jb
fisubrl
mov
imul
mov
adc
push
sub
xchg
imul
jns
ror
popf
mov
push
jne
push
scas
push
xchg
jecxz
mov
sub
push
push
insl
xchg
jg
sarb
aas
push
pop
cld
mov
out
fistpll
lret
out
jno
mov
and
push
mov
inc
pop
fadds
xor
dec
orb
ljmp
and
sub
mov
pop
sbb
cli
clc
lcall
xor
mov
test
insb
add
es
pop
subl
inc
cmpb
ss
push
daa
pop
fidivrs
pushf
adc
or
pop
mov
cmp
loop
xchg
std
loope
mov
stos
sbb
rcr
jbe
je
mov
cmp
jecxz
pop
stos
jle
sub
insl
pop
movsb
sbb
lcall
std
sub
es
fs
gs
int3
fisubrs
jle
or
jp
int
in
cld
cmc
rorl
xchg
out
cmpsb
dec
sti
fnstenv
or
mov
lods
jecxz
movsl
lock
popl
add
shll
xchg
pop
mov
mov
popf
mov
ss
repnz
add
mov
or
xchg
sti
jbe
sarb
in
mov
loop
insb
jns
mov
mov
scas
xchg
push
and
jbe
or
nop
in
je
xchg
lods
mov
xchg
cmpb
adc
mov
inc
popa
shr
jnp
in
mov
lods
enter
mov
loope
push
sbb
push
cmp
dec
cmpsb
fldenv
mov
shlb
pop
push
je
jae
arpl
jg
jg,pt
lods
lcall
aad
pop
pop
mov
repnz
hlt
rcll
out
call
rcl
sub
jg
sbb
cmp
jo
dec
xor
xchg
pop
mov
sar
mov
cmp
inc
outsb
test
std
pop
repz
hlt
cli
sbb
cmp
rcrl
out
dec
in
mov
lods
add
dec
cltd
mov
push
arpl
jl
rcrb
sub
fiadds
mov
pop
test
mov
mov
imul
aas
cli
pushf
mov
push
imul
adc
ret
iret
xor
loope
mov
and
mov
push
shlb
mov
mov
push
add
gs
mov
lds
mov
iret
call
add
pushf
aad
out
mov
std
push
or
add
xchg
das
jl
jne
mov
push
xor
and
lds
cmp
shll
jae
fstps
cs
negb
inc
js
aam
addb
cmp
xor
ds
or
mov
mov
cld
pop
add
sub
pusha
ss
jg
out
lahf
movsl
mov
repnz
ret
scas
push
adc
xchg
push
xchg
inc
mov
roll
cltd
and
addl
std
mov
icebp
jg
add
mov
pop
jb
jb
or
push
mov
xacquire
mov
cmp
xchg
decb
sbb
cs
aad
call
ja
test
sbb
fldt
fwait
aad
mov
jmp
push
xchg
mov
mov
mov
aad
adc
inc
leave
mov
pusha
cwtl
xchg
dec
xchg
dec
test
std
test
fildll
shlb
inc
push
hlt
test
aad
ljmp
scas
in
sub
jl
push
pop
clc
adc
mov
push
clc
pop
push
mov
sub
add
sbbl
loopne
xor
lock
ffree
jecxz
in
sbb
lret
and
cmp
in
pop
fmuls
sti
mov
dec
sub
and
js
push
js
jo
xchg
cmp
test
rsqrtps
pusha
and
xchg
inc
fxch
rclb
fldt
movsb
popf
in
add
movsb
sbb
jecxz
dec
das
popf
fs
jmp
mov
out
push
daa
mov
jmp
insb
add
xchg
adc
adc
pop
and
inc
enter
cmp
mov
sahf
or
ret
pop
in
icebp
jg
pop
mov
ret
daa
jbe
inc
dec
cmpsl
xchg
inc
sub
xchg
negl
mov
test
mov
shlb
data16
xchg
loope
sbb
cmp
into
pop
imul
cmp
insl
ret
stos
shlb
xchg
xor
and
pop
loopne
or
and
xor
cmp
xlat
cli
or
mov
add
sbb
jbe
iret
icebp
out
push
cmpsb
dec
jle
mov
iret
mov
outsb
rclb
stc
lds
test
mov
push
mov
lods
jecxz
sbb
and
leave
call
dec
or
ds
lods
xor
dec
or
xchg
cmp
adc
xchg
out
sbb
aad
sti
rol
mov
push
mov
push
jle
xchg
pop
jl
js
daa
mov
hlt
and
popf
jbe
es
inc
nop
mov
lcall
icebp
xor
push
repnz
mov
inc
pop
shll
rcrb
inc
js
addr16
or
pop
ss
insl
sub
icebp
mov
push
insb
jbe
sbb
fistps
mov
sub
xchg
mov
div
inc
xor
imul
out
jmp
xor
jecxz
es
mov
rcl
xchg
rol
popf
ds
fnstcw
push
ret
pushf
stos
adc
sub
js
lahf
cmp
xor
or
adc
mov
sub
push
movsb
icebp
movsl
sub
mov
cli
sub
jmp
or
outsb
mov
dec
lea
mov
int
xchg
jmp
in
push
popf
daa
repnz
push
xchg
pushf
sarb
dec
pop
loopne
iret
jae
push
imul
gs
jle
outsl
or
mov
dec
sti
add
add
fstp
xchg
inc
mov
mov
mov
mov
sbb
or
mov
jle
cltd
scas
popa
fs
js
repz
arpl
aad
lds
popf
adc
ss
jnp
addr16
lea
xlat
insb
arpl
pop
xchg
xor
jmp
sub
cmp
xchg
lods
enter
mov
flds
mov
sbb
mov
dec
sub
sti
push
pop
push
lahf
test
aaa
mov
data16
loopne
loop
pop
sahf
add
or
push
into
cmp
push
mov
jecxz
shr
cmp
lahf
loop
ret
popf
xor
les
and
lods
inc
or
fdivrs
sub
sub
mov
add
ljmp
movsb
je
inc
jecxz
and
add
xchg
outsl
inc
aaa
push
aas
aam
in
add
cmpb
adc
imul
loope
movsl
dec
sub
add
and
mov
xchg
add
add
jns
xorb
and
ds
and
jl
aas
aam
in
fsubr
xor
mov
dec
pop
mov
mov
cmp
scas
push
mov
mov
popf
mov
leave
cld
xor
pushf
xor
movsl
jb
lods
and
call
mov
dec
pop
rorb
rolb
notb
addr16
out
jb
ja
je
push
xchg
lret
jle
aas
and
xor
dec
cs
insb
cmc
jge
inc
rcl
inc
mov
fidivs
aam
dec
dec
jge
mov
in
and
and
fsubp
cmc
xor
in
cmpsb
xor
jb
inc
xchg
sti
js
addr16
addl
push
xor
fsub
es
and
and
and
nop
sahf
sahf
scas
mov
inc
mov
mov
aam
or
cmp
daa
fcomi
mov
pusha
push
ja
push
pop
sbb
js
dec
outsb
not
enter
notb
leave
aad
or
fldpi
mov
xor
ljmp
dec
movsl
adc
clc
cmp
iret
or
ret
dec
pop
in
xor
lret
inc
pop
lea
push
adc
xor
sbb
mov
pop
sbb
lods
mov
xchg
jmp
fwait
dec
sub
pop
aas
shrl
sbb
push
out
mov
fadds
xlat
mov
cmp
sbb
in
xor
lods
mov
imul
in
mov
dec
dec
rcr
imul
int
adc
add
mov
mov
inc
adc
lcall
mov
mov
xchg
loopne
fdivrp
mov
mov
adc
push
scas
test
xchg
xchg
movsl
sub
or
arpl
xchg
test
out
ja
insl
das
stc
popa
int3
cmp
jne
xchg
jge
call
dec
addr16
jnp
push
and
aaa
out
je
sahf
cwtl
dec
push
mov
inc
xchg
pop
mov
mov
inc
or
push
imul
and
ja
jo
adc
dec
int
sub
aad
shlb
cmp
rclb
dec
jge
and
imul
out
inc
and
pop
mov
lcall
loop
fistl
jge
push
lea
sti
pop
sub
dec
mov
push
dec
sub
stos
out
ficoms
mov
leave
negl
gs
pop
and
and
jle
test
imull
neg
mov
insb
dec
mov
and
stos
push
in
inc
or
sub
fucom
mov
xchg
out
sbb
jmp
popa
ret
shl
push
lret
imul
inc
adc
pop
adcl
mov
fsub
add
sbb
mov
push
lahf
scas
pop
xchg
ds
repnz
xchg
cmpsb
adc
push
inc
leave
test
lock
jo
rcl
cwtl
sub
cmp
nop
mov
or
or
pop
sub
rol
lock
or
pop
xchg
push
je
mov
ret
movsb
lahf
hlt
mov
xorb
push
mov
pop
addl
push
lret
gs
mov
jnp
aam
xchg
adc
dec
lods
xor
jl
xor
sbb
int3
daa
iret
les
scas
pop
aas
cmp
iret
stos
sbb
push
mov
fstpl
leave
aam
fstps
adc
andb
push
add
xor
dec
sbb
adc
in
bnd
pop
cs
or
int
add
fwait
mov
dec
adc
push
std
sub
enter
mov
or
das
mov
cmp
mov
daa
jge
je
jmp
mov
lods
mov
rolb
mov
pop
in
test
inc
stc
sbb
jle
fnstsw
mov
sti
inc
inc
dec
xor
dec
cld
or
xchg
jp
push
std
movsl
mov
adc
popf
mov
xchg
rcll
out
jae
fmul
punpckhbw
jnp
inc
and
loope
adc
xchg
mov
enter
cmp
inc
and
loopne
sub
pushf
fwait
sarl
movl
dec
push
pop
inc
insb
jbe
data16
mov
in
idiv
out
push
sbb
sub
cmp
dec
push
pop
inc
insb
jbe
data16
mov
in
idiv
out
adc
int3
push
pop
inc
insb
ja
data16
mov
in
idiv
out
push
sbb
sub
cmp
dec
push
pop
insb
idivb
imul
pushf
or
xchg
xchg
daa
into
aaa
adc
sbb
cmp
ja
inc
push
jp
mov
mov
ljmp
jae
pop
cmp
ja
inc
push
jp
sub
pop
xchg
xchg
int3
out
notl
daa
or
cmp
dec
nopl
or
cmp
out
into
mov
hlt
stc
in
cmpsl
dec
imul
iret
push
addr16
lret
xor
or
ficomps
inc
int
jae
int3
adc
sbb
mov
xchg
push
pop
bound
pop
loop
ret
dec
repz
dec
mov
sbb
mov
clc
sub
mov
xchg
mov
icebp
scas
push
mov
cmp
mov
cli
mov
xor
cltd
pop
pop
xlat
inc
xchg
push
push
pop
pop
ret
addr16
push
scas
inc
pop
stc
cld
fcmovnb
sub
push
aaa
sub
dec
pop
lret
ljmp
negl
gs
push
test
sub
lcall
cld
push
push
pop
and
inc
xchg
adc
push
mov
xchg
xchg
mov
ljmp
pop
sub
push
addr16
mov
jb
dec
loope
fdivp
loop
repnz
mov
mov
lahf
xchg
mov
fs
jnp
add
add
movsb
int3
fptan
mov
adc
inc
imul
add
push
or
stc
sarl
xchg
out
neg
ljmp
pop
sub
cmp
ja
inc
push
jp
mov
mov
ljmp
pop
sub
cmp
ja
inc
push
jp
mov
int3
cmp
mov
cmp
inc
enter
inc
pusha
xchg
mov
loope
xor
out
test
sti
clc
and
ja
dec
cmp
cmpsl
das
fildl
push
sti
jne
aad
aas
sbb
xchg
cwtl
and
ds
jmp
push
aam
ss
test
or
sub
inc
aaa
xor
mov
ret
add
test
xchg
xchg
and
sub
xorl
fisttps
in
movsl
add
add
mov
mov
decl
data16
jmp
cmp
sbb
lds
mov
sub
sub
out
adc
adc
test
ja
sub
cmp
imul
sub
out
add
push
sti
in
xor
nop
push
int
jge
aam
dec
ljmp
pop
enter
inc
movsl
fcomps
fstl
cltd
test
dec
push
cmp
pop
mov
lock
call
js
xchg
inc
cmp
mov
jg
inc
and
roll
sti
inc
jo
test
sub
push
enter
pop
inc
addl
mov
enter
sbb
rcrb
dec
js
mov
imul
mov
and
int3
or
inc
popf
in
outsb
sub
cltd
or
stc
mov
mov
je
stc
nop
push
loopne
push
mov
out
pop
movsb
pusha
in
xchg
jle
ret
sbb
test
xor
fwait
add
jge
cli
mov
ja
mov
dec
jmp
loopne
mov
aam
in
adc
pop
jp
mov
xor
push
jo
cmc
mov
faddl
insb
xchg
push
mov
lods
ret
cmp
shll
sti
bound
lcall
call
adc
sub
add
pop
pushf
adc
xor
movsb
repz
in
push
push
ret
mov
icebp
or
and
stos
andl
mov
insl
lret
add
imulb
xchg
dec
repz
aaa
cmp
insb
jo
mov
insl
pop
adc
mov
mov
push
aaa
decb
mov
rclb
iret
inc
cwtl
mov
std
leave
shll
adc
arpl
lret
cs
mov
ret
xlat
xor
jno
pop
mov
add
cmp
icebp
mov
mov
adc
dec
js
gs
cli
jl
movsb
pop
shrb
aam
mov
add
ficompl
int3
sub
fwait
push
sub
pop
or
pop
aaa
adc
xchg
push
mov
jo
pop
jp
lods
mov
add
scas
imul
dec
mov
lods
mov
in
mov
or
lcall
dec
cwtl
pop
bound
cwtl
cwtl
jle
in
xor
movsl
adc
dec
cmp
jns
arpl
and
cmp
hlt
cmp
xchg
xor
add
jp
mov
mov
dec
inc
inc
cmp
int
add
mov
dec
fldcw
pusha
cmp
aaa
leave
int3
sub
adc
movsl
push
les
leave
std
mov
ret
out
cmp
adc
mov
inc
faddl
jp
dec
arpl
fmull
mov
pop
iret
xor
xchg
adcl
das
nop
mov
clc
fcmovnbe
sub
add
inc
fildll
jp
xor
fxch
inc
pusha
sahf
push
bound
jge
xchg
clc
cmpsl
cmp
push
test
cli
pop
add
inc
hlt
push
ret
pop
xchg
stos
pusha
mov
rorl
lods
cld
add
addr16
lret
xor
test
push
andl
xchg
sub
inc
fistl
push
xor
adc
mov
xor
jge
push
or
nop
lea
dec
sbb
dec
pop
dec
push
loop
out
add
je
push
and
fs
push
into
push
cmp
scas
cltd
push
lods
inc
pusha
stos
pop
outsb
mov
call
jmp
adc
and
iret
sbb
inc
cmp
jbe
adc
out
sub
xchg
and
dec
or
dec
ljmp
mov
ja
enter
rorb
stos
sbb
pop
pop
xchg
lods
std
fisttpl
sbb
mov
cmp
mov
addr16
outsb
push
dec
cmp
mov
sub
xor
cmpsl
ljmp
lea
xchg
jne
or
xor
lret
mov
sbb
jge
shlb
xchg
cli
xchg
xor
jle
mov
inc
stos
mov
nop
mov
in
repnz
lahf
sbb
jb
cmp
js
adc
add
pop
mov
mull
pop
xchg
lods
repz
add
jp
pop
xor
out
bound
jge
sub
pop
push
xlat
inc
jl
mov
sub
xlat
mov
cmp
pop
daa
xlat
int3
push
jge
call
sub
scas
pop
dec
arpl
arpl
or
data16
test
adc
clc
std
mov
push
ret
iret
in
les
dec
sbbb
jnp
add
dec
lods
data16
sub
inc
sbb
mov
lcall
adc
sub
mov
test
test
add
push
push
jmp
lret
or
cwtl
pop
lods
std
stc
sbb
mov
repz
xor
lret
das
out
loop
xchg
dec
push
inc
mov
add
or
pop
movsl
cs
pop
ljmp
out
pop
std
jmp
pop
or
ja
push
fldenv
das
ficoms
lock
or
jge
push
je
or
fucomp
lock
call
inc
and
mov
cmpsb
sbb
loop
ret
xor
inc
push
sbb
dec
sbb
loope
nop
pop
pop
je
mov
xor
hlt
and
and
jl
push
push
xor
insl
inc
jge
in
dec
imul
xchg
stc
push
or
fldenv
inc
enter
aaa
dec
std
xlat
fadds
xchg
cmpl
rcr
in
shl
jg
pusha
pop
int
pop
jl
test
and
fsubl
sbb
sub
fcmovbe
jno
push
lret
push
rorb
xor
dec
rorl
sbb
and
out
sbb
aaa
xor
je
outsb
jb
pop
add
cld
dec
enter
sub
insl
jg
add
call
pop
push
lods
das
imul
xor
mov
adc
sbb
and
mov
mov
loopne
icebp
andl
jle
fwait
mov
cmp
sbb
movsb
mov
mov
dec
and
js
jne
dec
lcall
pop
scas
mov
aaa
cs
sbb
jno
mov
cmovp
push
mov
push
mov
xchg
aam
outsl
sub
cmp
jg
inc
imul
cmpsl
sbb
pop
and
jge
mov
add
repnz
push
inc
pushl
outsl
ret
lahf
push
outsb
push
xor
test
jo
mov
pop
mov
sar
dec
rcll
and
push
inc
cmp
stos
and
mov
xlat
dec
int3
inc
mov
xchg
jg
scas
or
cwtl
jo
push
xor
stos
in
mov
mov
add
arpl
jns
ret
out
insb
mov
js
xchg
fnstcw
sub
int3
mov
mov
and
mull
sub
aam
adc
mov
and
scas
roll
ja
push
jmp
cmp
fisubrs
add
sarl
sbb
adc
inc
cmpsl
idiv
cmp
dec
repz
test
inc
out
cmp
mov
stos
mov
scas
mov
subb
cmp
mov
test
mov
inc
dec
xor
or
xchg
push
mull
lds
aaa
cmp
adc
sti
shlb
ljmp
mov
adc
into
rcl
dec
or
daa
mov
xchg
nop
mov
push
imul
loop
push
arpl
xor
pop
int
jmp
aad
inc
adc
nop
imul
popf
mov
sub
jb
cs
in
int3
pop
scas
outsl
pop
push
add
cltd
fistpl
sarb
mov
cltd
mov
add
xor
sbb
pop
pop
cs
xchg
push
cmp
dec
in
cmpsb
fnstsw
enter
ljmp
pop
rclb
cmpsl
mov
sbb
rcl
and
cmp
jbe
push
movsl
stc
fstpt
jmp
test
cld
cmp
push
sbb
loope
jmp
clc
ds
int3
sbb
sbb
adc
sbb
mulb
jne
ficoms
test
pop
test
scas
jnp
test
pop
xchg
into
xor
out
imul
ror
or
inc
mov
rcl
imul
out
pop
mov
les
repnz
dec
add
sub
daa
cmc
js
test
popf
es
mov
adc
sub
or
jo
dec
push
ss
dec
cld
emms
sub
xor
cld
gs
test
enter
or
outsb
adc
aas
es
sub
repnz
lret
fcoml
inc
jnp
cmp
jb
or
out
jb
lahf
dec
pop
nop
inc
dec
and
fiaddl
shrb
and
stc
ret
outsl
dec
pop
cltd
adc
into
aaa
shlb
sbb
or
test
xor
and
xor
xchg
mov
sub
add
jge
movsl
jg
bound
mov
adc
cmc
adc
scas
lods
fadd
inc
fstl
int3
pop
cltd
add
mov
cmp
scas
orb
xor
out
push
sbb
mulb
inc
xor
js
jo
enter
mov
mov
ljmp
jl
outsb
repz
mov
iret
subl
fcoml
jae
cwtl
pushf
inc
mov
mov
push
inc
fisubl
adc
ja
shl
sub
sub
fsubr
mov
pop
sbb
lret
cltd
jle
jp
push
or
xor
icebp
jo
enter
loop
je
cmp
pushl
lea
mov
cwtl
std
sub
push
fdiv
jmp
mov
dec
out
mov
cmp
and
popf
push
jmp
xchg
pushf
xlat
dec
ds
sahf
inc
lods
out
pop
mov
shrl
lahf
pusha
cltd
add
ljmp
pop
or
ficompl
adc
jmp
aad
jle
cmpsb
push
imul
add
cmc
sahf
jp
pop
fsubrs
lcall
daa
inc
arpl
push
rclb
inc
sbb
jae
out
or
leave
cmpsl
or
enter
xor
pop
leave
xchg
cltd
inc
mov
hlt
cmc
lods
scas
ret
sub
mov
cmp
sbb
test
icebp
mov
or
lahf
imul
out
adc
fs
lahf
movsb
push
xor
mov
aad
jnp
pop
fsts
mov
dec
fs
mov
cmpsb
jl
sub
stos
adc
bnd
xlat
lcall
or
push
push
mov
lret
aas
stc
int
popa
out
or
sbb
pop
and
xor
cmp
stc
cmp
cmp
mov
xchg
mov
aaa
mov
or
and
adc
mov
cwtl
xchg
repz
bound
add
jl
sbb
popa
repnz
sub
fcoms
xchg
push
fsubrl
and
lea
sahf
inc
daa
push
add
out
xor
xor
dec
and
out
or
ret
sahf
call
fiaddl
fnstsw
je
jg
dec
mov
in
xchg
xor
scas
ljmp
in
or
test
push
in
lret
xor
lcall
or
inc
sar
cmp
sbb
aas
ds
and
sub
xchg
jge
xchg
aad
jns
add
sarb
lock
loope
ret
sahf
cmp
movsb
dec
loope
cmp
in
ss
ret
inc
adc
insb
out
pop
addr16
mov
aaa
pop
fldl
mov
ss
push
ja
jb
scas
pop
mov
leave
mov
sbb
mov
test
dec
bound
sub
paddsb
and
addl
stos
xor
aad
inc
jl
ret
clc
sbb
sbb
push
mov
sbb
stc
cmp
sub
jae
pop
sub
cmpsb
data16
mov
jb
aad
sbb
mov
and
xchg
pop
jne
pop
mov
pop
imul
stc
insb
adc
daa
pop
nop
adc
in
inc
xorb
rol
mov
cmp
xchg
lret
jbe
push
frstor
sbb
inc
cmp
rclb
je
add
cmc
xorb
pusha
stos
mov
cmpsb
mov
nop
xlat
dec
cmp
out
add
ret
pop
idivl
dec
inc
bound
hlt
cmp
movsb
mov
movsb
push
push
inc
es
nop
ljmp
out
or
push
stos
out
sbb
ret
mov
sub
push
mov
fmull
les
sbb
cwtl
xor
pop
insb
lret
test
rcrb
out
jno
sub
adc
mov
xchg
sbb
and
push
and
das
jae
scas
lods
scas
mov
jecxz
inc
test
jb
adc
shrb
push
in
pop
cltd
mov
sbb
js
add
sbb
xor
add
stc
outsl
add
ljmp
cli
loope
cmp
jb
lds
aam
push
push
inc
aam
and
int3
xchg
cmpps
sub
jg
or
aaa
mov
fidivl
inc
and
xchg
addl
push
or
sahf
and
dec
sbb
arpl
lret
shr
jo
mov
addr16
xchg
popf
pcmpeqw
movsb
mov
repnz
dec
movsl
add
xor
inc
das
xor
outsb
stc
into
aaa
jns
cmp
ss
cld
sub
dec
dec
xchg
pop
mov
cs
push
or
push
and
rcrl
mov
ja
mov
xchg
push
pusha
pminub
jmp
imul
xchg
mov
adc
mov
adcl
xor
decl
lahf
scas
mov
cmp
ret
imul
rcrl
rorl
mov
ret
outsl
sbb
stos
scas
test
adc
jmp
sbb
arpl
ds
sbb
or
mov
inc
popa
inc
and
lcall
mov
pop
add
xor
pop
or
mov
xchg
imul
je
test
and
sub
jne
rolb
sub
add
adcb
movsb
add
dec
fiadds
sub
out
stos
mov
outsl
pop
cmp
out
test
push
xor
mov
outsb
test
mov
mov
in
inc
stos
xchg
jns
int
sub
sbbb
cmp
or
xor
cmp
loopne
cmp
mov
gs
mov
pop
sbb
ret
sti
imul
lea
jmp
icebp
inc
mov
test
sub
shll
mov
push
idiv
test
inc
inc
mov
mov
push
into
outsl
jmp
pop
and
cli
les
test
lret
or
pop
push
scas
inc
and
mov
popa
add
and
enter
pop
or
loope
cmp
inc
fstps
mov
push
loopne
clc
sub
cmp
faddl
fs
movsl
cmp
push
rorl
and
xor
loop
sbb
sbb
rcll
mov
xchg
xchg
std
out
adc
add
sub
push
push
mov
xor
fwait
and
orb
and
cmp
mov
and
outsb
add
mov
xchg
dec
xor
aaa
aam
add
mov
shl
nop
cmp
in
mov
push
hlt
jge
dec
ss
cmp
and
cs
adc
push
push
push
rcl
out
jns
daa
in
dec
or
cmp
mov
mov
pop
mov
inc
das
sahf
stos
mov
gs
sbb
jns
push
sbb
push
test
test
filds
movsb
sbb
nop
psrld
movsb
and
cmc
and
popf
push
add
mov
mov
adc
push
in
negb
jg
dec
aas
inc
gs
add
repz
aaa
xchg
aas
js
adc
aaa
mov
sub
aaa
jl
movsl
shl
sub
cmpsb
sbb
in
push
dec
lea
test
mov
xchg
sbb
imul
pop
ss
mov
mov
mov
add
aas
xchg
inc
dec
cmp
mov
sbb
cmpsl
addr16
cmp
icebp
jmp
mov
jns
cwtl
and
aaa
push
and
mov
push
xor
lret
add
sbb
jo
push
add
adc
push
adc
fbld
xchg
or
gs
jecxz
mov
loopne
ret
insb
lcall
pop
mov
mov
mov
mov
jecxz
rorl
test
xor
fiaddl
leave
jno
jle
pop
aam
out
out
cltd
jl
mov
sti
mov
pusha
gs
sub
in
insl
loop,pt
or
pusha
dec
or
jae
pop
movsl
push
adc
inc
fsts
push
sbb
ret
mov
popf
lea
je
pusha
loope
jmp
and
shl
push
fisttps
lock
jp
data16
xor
mov
popl
jno
and
jo
dec
push
shll
dec
cmpsb
popa
scas
xchg
movsl
ret
inc
imul
lds
daa
sub
xchg
mov
sub
iret
push
fwait
subb
daa
movlps
sub
inc
inc
and
mov
repz
enter
pop
xor
rcrl
and
pop
sbb
xchg
add
lret
ds
mov
jl
xor
popf
imull
popf
or
mov
pop
xor
and
movsb
mov
shrl
push
les
inc
das
jae
das
mov
inc
ret
mov
and
push
adc
inc
imul
inc
es
jmp
and
scas
mov
pop
enter
jge
cmpsb
pop
icebp
and
pop
lods
shlb
mov
inc
out
and
ljmp
xor
repnz
das
sbb
mov
mov
data16
stos
dec
push
jo,pt
push
jp
test
imul
and
mov
cmp
cmpl
mov
jmp
xor
dec
pop
xchg
sub
sti
mov
add
fucom
add
lret
in
or
mov
lcall
outsl
inc
dec
cmp
xor
xchg
xor
cmp
push
cmpsl
pop
adc
push
add
jmp
or
sbbl
lret
in
aas
js
adc
dec
daa
adc
ljmpw
push
jno
xorl
mov
mov
xor
xchg
lret
mov
cmpsb
sub
enter
je
mov
dec
pop
cli
and
loop
inc
dec
jnp
imul
xchg
xchg
enter
dec
mov
cwtl
jo
jo
pushf
adc
mov
cmp
dec
test
pop
aas
mov
pop
xlat
scas
mov
pop
and
add
jp
movsl
and
mov
push
xor
or
insb
ljmp
pop
loop
inc
vpcmpeqw
xchg
push
dec
fwait
movsb
pop
pop
in
inc
lea
lcall
addb
dec
lock
pop
scas
aam
shlb
pop
lea
mov
das
xchg
mov
xchg
mov
adc
fwait
dec
xchg
add
mov
fwait
stos
and
movsb
add
xchg
testb
push
xchg
adc
cmp
mov
bound
mov
fnstcw
xlat
fisttpl
jb
mov
ds
push
push
mov
sti
pop
dec
dec
and
iret
dec
dec
stos
scas
sbb
inc
add
or
mov
and
punpckhdq
xor
insl
lods
testl
outsb
dec
fs
dec
jl
jnp
lea
fwait
pop
fs
loopne
jmp
movsl
divl
pop
cmp
jae
fsts
shrl
mov
iret
sbb
push
loopne
int3
sub
rorl
mov
jb
mov
pop
data16
nop
cmp
push
xchg
lret
stos
mov
cld
mov
cmp
cltd
stos
xor
jne
movsb
push
pop
mov
sub
xchg
add
or
jb
in
mov
cli
xor
xchg
cmpsb
cli
out
fiaddl
jns
dec
sub
test
add
jno
push
loope
pop
adc
es
int3
iret
dec
mov
scas
xchg
mov
ljmp
pop
sub
cmp
ja
inc
push
jp
mov
mov
ljmp
pop
sub
cmp
ja
inc
push
jp
mov
mov
out
xlat
cli
daa
or
push
pop
sub
xor
ja
inc
arpl
cmpsl
outsb
mov
xchg
cli
out
neg
push
cmp
cmc
aaa
mov
sub
dec
adc
jmp
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
lahf
movsb
bound
or
jno
ret
add
add
add
add
pop
push
leave
add
add
add
add
add
add
cld
add
push
add
add
add
add
add
pop
add
add
add
add
and
add
add
loop
mov
aas
add
add
add
add
add
add
add
add
jns
sub
jecxz
pop
add
add
add
add
insl
add
add
add
cwtl
add
add
test
add
add
add
fadds
add
and
push
add
outsl
add
add
ljmp
add
add
add
add
add
add
add
add
jb
nop
add
add
add
lcall
add
add
pop
add
add
mov
add
add
add
add
je
dec
add
add
fiaddl
sub
cld
add
push
add
add
sub
je
lods
add
add
add
add
add
add
add
fadds
add
fildl
cmp
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
pop
add
add
int3
add
add
add
add
add
add
mov
js
leave
add
add
add
add
add
movl
xor
push
add
add
add
add
add
push
add
and
insb
add
add
add
popa
add
add
dec
add
mov
nop
add
sbb
lcall
add
add
bound
jns
jb
movl
lret
add
add
add
add
add
movl
pop
add
add
push
add
popa
add
add
and
or
add
add
jno
add
insb
add
stos
add
add
add
add
sub
imul
pop
add
cmp
filds
add
add
int
mov
add
testl
addl
add
add
add
add
jb
push
add
add
add
push
add
add
add
add
add
ljmp
add
add
add
and
jne
add
sub
and
add
pop
add
insl
add
add
movsb
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
add
fiaddl
insl
add
pop
add
add
add
add
add
push
add
add
ljmp
add
add
add
add
add
add
add
lcall
add
pop
add
cmc
add
add
push
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
xor
push
add
add
add
add
sbb
faddl
test
add
add
add
add
add
add
mov
add
inc
add
add
add
add
jno
mov
stc
dec
xchg
push
int3
adc
push
je
stc
xchg
out
loope
int3
int
aad
push
dec
inc
jnp
sahf
dec
cmp
sti
and
cli
push
adc
cmpsb
xlat
fwait
sbb
pop
cmp
pop
popf
xor
jns
xchg
frstor
or
cltd
dec
bound
int
and
js
mov
jecxz
inc
or
add
nop
mov
ret
adc
push
add
cmp
jnp
jne
push
mov
xchg
adc
in
or
sti
leave
js
cmpsb
arpl
push
lret
cli
loope
cld
cmp
lret
jg
jae
cmp
pop
push
add
push
adc
icebp
sub
in
dec
cli
xorb
cmp
mov
push
loop
imul
out
int
pop
or
xor
test
dec
or
test
cs
jo
lock
mov
xchg
add
int3
je
push
dec
std
lea
adc
mov
lret
mov
jge
push
pop
inc
push
xlat
sti
sbb
cmp
and
inc
dec
jecxz
stc
dec
push
repnz
push
xchg
movsl
cmp
int
push
push
mov
shll
out
ds
int
push
adc
mov
pop
cmpsl
es
gs
push
pop
cmp
data16
inc
push
sahf
mov
or
movsb
mov
push
sti
and
lock
aaa
jbe
loop
sbb
jmp
ret
popa
ret
mov
mov
adcl
push
loopne
xchg
mov
sarl
cmp
orb
dec
jbe
js
cmpsl
mov
push
jb
push
cmp
cmp
ds
in
push
aaa
imul
mov
movsb
mov
adc
sar
cmpsl
mov
outsb
xchg
dec
cld
sbb
loope
stc
dec
fsubrs
mov
inc
and
popa
lret
mov
cmp
sbb
or
pusha
aas
cltd
ds
add
into
push
sub
fcomps
movsb
pop
inc
ljmp
leave
jnp
dec
je
rorl
lods
lods
sarl
dec
dec
jnp
movsb
jo
inc
popl
arpl
aad
cmpsl
pop
repnz
inc
sbb
push
adc
sahf
xchg
sarl
jbe
insl
cmp
std
addl
outsb
mov
sbb
arpl
sahf
xchg
jge
mov
cli
lahf
xor
out
inc
aad
push
inc
lret
shll
movsl
popa
and
stos
mov
and
sarb
das
adc
iret
fimuls
jnp
mov
sbb
int3
mov
pavgb
ds
mov
mov
dec
push
push
nop
push
push
and
xchg
push
pop
push
js
jmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
