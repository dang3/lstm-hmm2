call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
das
adc
and
xor
sbb
jo
orb
mov
mov
shr
fcomip
fcomip
pop
add
adc
wrmsr
jg
outsl
push
pop
pusha
dec
jo
subb
mov
loopne
lock
fstl
lea
xlat
sub
cmovs
dec
push
arpl
xchg
sbbl
jns
push
mov
outsl
mov
or
mov
sbb
stos
rcrl
push
lahf
test
int3
push
lret
out
scas
shr
ret
add
js
mov
mov
inc
mov
fnstsw
xor
push
sbb
cs
push
adc
pushf
jmp
sbb
xor
pop
push
repz
inc
adc
and
add
cmp
mov
inc
jno
add
iret
lcall
xchg
rolb
xor
jno
or
lret
test
pop
daa
loopne
xadd
mov
push
and
sti
cmpb
mov
subl
movsl
fistps
int3
loopne
add
pop
xor
sub
jns
imul
mov
in
loopne
xchg
push
gs
adc
ja
adc
add
sub
sbb
cli
cmc
ljmp
loopne
popf
jb
dec
adc
outsb
xor
stos
add
sbb
stc
std
icebp
lahf
aam
xrelease
mov
jle
pop
inc
sub
outsl
push
pop
pusha
dec
jo
subb
inc
out
rcr
loopne
lock
add
adc
and
xor
outsl
push
pop
pusha
dec
jo
subb
inc
out
rcr
loopne
lock
add
and
fsubr
cwtl
push
pop
sti
cld
sub
push
int
sbb
xchg
lds
add
hlt
or
pop
repnz
pushl
cwtl
push
sahf
push
mov
mov
dec
xchg
stc
or
clc
ja
stos
and
clc
shr
cwtl
mov
imull
xor
fiaddl
mov
xorl
mov
cltd
jmp
pop
ds
cmp
sbb
les
or
mov
loopne
xchg
aaa
sub
cs
nop
or
and
add
mov
clc
out
xchg
push
sbb
mov
push
pop
and
inc
pop
pop
mov
in
loopne
imul
daa
pop
pop
xor
push
cltd
adcl
jo
aad
dec
fadd
or
test
cmpl
cmp
dec
inc
xchg
nop
add
jl
lcall
jns
jecxz
or
std
iret
sbb
mov
fiaddl
andb
addb
test
pop
fnstenv
mov
and
in
negl
jl
out
fsubs
stc
xchg
jo
test
test
int
movsl
into
jg
aad
scas
push
fiaddl
icebp
in
repnz
add
ds
mov
pop
or
add
cs
inc
sub
and
or
dec
push
mov
test
pop
loope
repz
jbe
cmp
jmp
mov
mov
jmp
call
jo
sahf
cld
outsb
adc
or
pop
inc
out
xor
mov
scas
loopne
inc
xor
dec
rorb
push
bswap
cmpsb
int3
int
jmp
enter
fidivrs
xor
lock
les
and
jne
lods
dec
sub
pop
add
scas
dec
sahf
adc
addr16
int3
and
jmp
outsl
jbe
test
push
dec
cmp
push
lahf
mov
scas
push
jg
adc
ds
jl
imull
das
in
inc
and
test
jp
repnz
movl
decl
repz
je
jle
sub
xchg
ret
imul
dec
aam
cld
and
movsl
mov
ficoms
lret
and
pop
adc
push
fmul
add
xor
dec
leave
fwait
test
ja
or
jb
dec
fldenv
pop
jecxz
cmp
add
jp,pn
push
aam
and
and
shr
push
shr
xchg
iret
xor
iret
xchg
jnp
ficoms
cld
pop
andb
xor
out
mov
adc
lods
xchg
adc
add
scas
movsl
adc
test
insb
out
dec
mov
pop
xchg
std
clc
mov
mov
shrl
jnp
and
inc
jnp
imul
stc
lcall
idivl
cs
add
push
push
adc
push
popf
adc
jl
pop
jo
sti
shl
push
pop
cmp
xor
js
inc
add
push
ret
jp
ret
xor
loop
shll
push
les
mov
adc
dec
out
adc
enter
enter
push
xchg
daa
mov
adc
jns
movsl
jg
push
lea
cld
call
dec
sbb
insb
aas
iret
mov
cmpsb
sahf
test
jle
xchg
imul
sub
in
push
and
xor
push
out
pop
mov
out
push
insl
xchg
cmp
sub
out
fstps
push
into
mov
cltd
sub
lea
sbb
and
xor
fcmovnbe
test
mov
cmc
in
outsl
dec
pop
cltd
and
in
lret
int
loope
out
cmp
mov
repz
or
and
mov
das
cmp
lods
cmpsb
jb
ret
aas
cmp
jns
cmp
sarl
sbb
push
lock
or
in
bnd
mov
sbb
adc
mov
test
jo
in
and
xlat
pop
lock
pop
inc
dec
mov
es
jg
int
lret
or
push
pusha
test
push
pop
repnz
xchg
jb
hlt
inc
out
fnstcw
dec
sub
fsincos
imul
pop
or
lods
mov
inc
inc
sub
nop
and
xchg
daa
xchg
xor
sahf
push
jns
and
or
clc
dec
sbb
lea
cmp
jae
int3
cmpsb
in
iret
je
lcall
mov
in
cld
in
dec
mov
lea
mov
or
clc
cmc
sbb
mov
lahf
insl
or
xchg
inc
cmc
shlb
repnz
cld
xor
mov
bound
lcall
int3
mov
push
dec
push
push
cmp
roll
push
push
sub
in
push
jmp
and
xchg
push
cmp
divl
outsl
and
hlt
jb
push
out
and
in
ss
mov
iret
add
shr
cmp
rcll
in
inc
or
mov
pop
call
cmpsl
sub
push
pop
or
mov
cmc
pop
mov
inc
sbbl
jecxz
jb
push
jno
out
sub
inc
mov
xor
xchg
stc
and
xchg
and
aad
push
pop
cwtl
dec
shrl
xchg
jg
pop
imul
cmpsl
je
fdivl
decl
clc
push
cwtl
stc
and
add
fimull
jb
push
pop
sub
xorb
fstps
push
jno
dec
cltd
mov
xchg
insl
jno
dec
push
ds
insl
and
inc
loopne
mov
mov
sub
je
ret
int
loopne
in
fstpl
repz
add
mov
out
pop
sar
call
in
and
jmp
arpl
in
fsubrp
outsl
in
imul
sub
and
mov
sub
pop
dec
ss
sub
sub
lret
inc
push
addr16
pusha
popa
mul
pop
adc
aad
inc
test
in
out
cmp
mov
movsl
and
repnz
sbb
loope
js
sbb
dec
jbe
mov
mov
inc
fiaddl
rorl
lock
imul
in
scas
pop
dec
mov
pop
dec
xchg
inc
mov
lret
pusha
mov
mov
mov
sbb
lods
out
xchg
fsubrs
xchg
scas
out
inc
popf
loop
jg
xchg
sbb
pushf
mov
pop
and
push
sbb
push
lcall
mov
inc
jns
out
decb
sarl
popf
repnz
outsb
js
sbb
push
stos
hlt
aaa
dec
out
in
and
ret
dec
sahf
pop
and
pop
jg
xchg
pop
xchg
push
pop
mov
mov
or
mov
fimull
stos
fisttpl
pusha
arpl
or
cmp
mov
push
cld
ret
adc
sbb
icebp
xchg
adc
outsb
orl
push
sti
inc
adc
ss
std
sbb
push
sub
cwtl
jnp
out
xchg
jbe
or
inc
mov
dec
pop
xor
aam
das
fisttpll
add
pop
cltd
aad
sub
jne
push
push
push
int3
xchg
jne
cs
je
repnz
out
outsb
jb
mov
inc
std
fidivs
jb
inc
dec
pop
sbb
pop
or
aad
lret
bound
dec
or
dec
push
bound
mov
cmp
js
push
sbb
fistps
imul
mov
push
inc
sbb
xor
or
repnz
out
lahf
cwtl
ljmp
or
xchg
mov
inc
in
jns
or
into
dec
out
lret
popa
adc
cli
dec
mov
or
cmc
and
mov
stc
pop
call
mov
jns
icebp
cltd
mov
stos
xor
dec
mov
stc
cltd
or
notb
icebp
xchg
jmp
mov
sub
pop
mov
insb
roll
addb
leave
sti
xor
jge
enter
lret
insb
xor
and
adc
dec
xor
sahf
jg
lds
popf
xlat
mov
cmc
sub
wrmsr
decb
daa
xchg
push
in
push
push
imulb
sbb
mov
pop
sarb
xor
mov
out
and
fcoml
aam
inc
add
pop
dec
mov
inc
push
sbb
xchg
pop
leave
inc
cmp
jmp
in
aam
dec
pop
std
push
in
dec
sbb
mov
ds
ss
xchg
sbb
pop
mov
outsb
pop
repnz
dec
mov
lods
les
inc
adc
mov
mov
push
push
lock
add
enter
ljmp
inc
divb
mov
mov
jecxz
xchg
adcb
lods
or
aaa
test
shr
and
test
mov
xor
cmp
xor
in
pop
shl
dec
mov
mov
jo
pop
inc
add
inc
hlt
cmp
lds
or
mov
mov
repz
loopne
repnz
imul
sub
cld
mov
scas
xor
fwait
xor
test
lahf
enter
sbb
popf
dec
data16
push
loope
cmp
dec
pop
lret
bound
push
xchg
sar
ja
cmp
xchg
rclb
xchg
pop
addr16
pop
movsb
push
add
xchg
mov
inc
das
cmp
lock
xchg
daa
xchg
out
mov
js
imul
into
push
aas
es
lret
das
inc
cltd
ret
inc
mov
mov
push
les
mov
pop
push
inc
ss
and
jp
add
add
jg
lods
and
mov
mov
add
dec
test
push
int3
xchg
adcl
inc
cmovae
or
insb
scas
xchg
loope
mov
lret
mov
mov
mov
mov
idivl
mov
inc
loop
xchg
std
push
sbb
dec
mov
cmp
add
sbb
or
adc
lods
and
mov
fisubrl
mov
pop
pop
dec
dec
xor
pop
ret
xchg
int3
jg
pop
adc
add
jp
xchg
notb
lods
mov
lret
js
das
aam
jae
cmp
or
imul
test
ret
mov
push
setl
xchg
jecxz
xor
repnz
daa
fcmove
cltd
cmp
dec
push
mulb
dec
xchg
or
rcl
ficoml
push
js
stc
mov
push
mov
adc
or
scas
inc
push
movsb
inc
adc
andl
iret
test
push
dec
xlat
fcos
aad
enter
push
adc
dec
push
cli
xlat
push
jmp
std
scas
adc
aad
xchg
ja
or
mov
icebp
out
pop
xlat
jmp
aad
repz
test
outsl
out
repnz
sti
mov
in
sbb
sub
and
jg
in
shll
cmp
jns
das
in
in
sub
cmp
dec
enter
les
ds
pop
pop
mov
rcll
stos
jne
stc
xor
jg
arpl
add
icebp
xor
insl
add
or
mov
xchg
jo
mov
sbb
insl
xor
je
and
add
xor
pop
sbb
push
out
jmp
test
xor
icebp
sbb
pop
cmpsl
std
add
push
subb
mov
mov
in
dec
movsb
dec
adc
lret
pop
mov
adc
adc
jl
ljmp
push
pop
xchg
jge
cmp
out
iret
or
xor
hlt
pop
inc
or
fidivrs
xlat
adc
iret
pop
push
dec
mov
movsb
fmuls
push
stos
sbb
je
cmpsb
lods
in
jmp
xchg
test
adc
repnz
mov
mov
jecxz
loope
push
pop
jecxz
jns
push
or
lahf
lods
dec
mov
fmuls
mov
loope
inc
test
adc
mov
pop
and
inc
lret
dec
rolb
or
cmpsl
outsl
pop
inc
cs
pop
fcompl
jmp
add
and
xor
jo
sbb
cmp
adc
loope
fdivp
bound
dec
pop
push
arpl
cs
stos
mov
dec
pop
jle
and
sbb
leave
fisubs
cmc
jno
jbe
shrb
out
lcall
and
ja
lcall
jae
inc
aas
movsb
add
sub
mov
xor
lods
mov
fstl
je
inc
test
stc
mov
pop
or
cmpsb
jnp
adc
push
cld
mov
and
and
mov
add
adc
cmp
movsb
push
out
jp
sub
call
or
ljmp
lea
sbb
mov
pop
dec
sbb
es
pop
jno
call
rcrb
div
jnp
ret
jge
pop
xor
ljmp
xchg
mov
xchg
sub
notb
repz
and
jle
out
inc
ret
xchg
xchg
lret
pop
cmp
push
add
pop
into
ja
lock
pushf
lahf
outsb
pop
cmp
out
inc
js
leave
push
into
jo
insl
jnp
test
jae
daa
fisubrs
inc
jns
push
cmp
or
xchg
push
xor
cmp
aas
push
mov
jbe
outsb
push
cmp
xchg
sub
scas
fs
sbb
push
sahf
add
or
inc
mul
popf
pop
jo
adc
add
jns
mov
pop
stos
fs
xor
cmp
push
cmc
movsb
pop
mov
cwtl
push
push
jns
dec
test
es
sti
inc
pop
stos
dec
push
aas
imul
sbb
rcrb
inc
je
in
loop
xchg
cmp
xchg
daa
mov
or
mov
in
stc
stos
mov
test
inc
sub
andl
andb
sub
imul
das
ljmp
or
sahf
cmp
adc
push
pop
push
cmc
sbb
out
icebp
loop
mov
pop
je
in
loope
jle
fsts
push
mov
add
push
add
and
xor
pop
jb
cmp
sub
mov
inc
inc
rclb
xchg
sarl
cmp
push
inc
ficomps
fs
sub
popa
xchg
sub
xchg
fwait
scas
jg
sub
inc
inc
cmp
fnstsw
mov
mov
mov
test
stc
call
and
je
or
jmp
aam
add
dec
xchg
push
jne
in
jp
xor
daa
movsb
dec
xchg
std
in
pop
je
cmp
mov
adc
fs
lahf
mov
push
mov
test
mov
insb
or
adc
sbbl
or
push
imul
adc
neg
arpl
mov
inc
je
add
aas
xor
popa
mov
jge
jb
push
pop
mov
mov
fwait
jg
sbb
xlat
out
add
jb
dec
stos
stos
and
sbb
mov
loopne
push
sbbl
sbb
cwtl
xchg
and
xchg
arpl
cmp
dec
xchg
cwtl
add
mov
imul
and
popf
push
cmp
push
pop
insl
jmp
arpl
inc
sbb
inc
lret
push
jnp
fsubrl
jne
test
popa
push
mov
mov
and
cli
xchg
popf
js
and
adc
int
sbbb
xchg
insb
or
lods
insl
xchg
cltd
inc
cmp
jnp
mov
aas
sbbl
test
sub
dec
subb
imull
dec
jmp
sti
scas
movsl
xlat
das
std
mov
jbe
out
loop
rorb
test
pop
push
leave
or
mov
and
es
cmpl
cmc
mov
es
inc
push
nop
cmp
outsl
sbb
pcmpgtd
enter
pop
xor
dec
pusha
pop
fstpt
mov
into
xor
mov
xlat
push
jno
jg
and
inc
lods
mov
fcmovb
and
ja
push
lret
adc
jle
sub
sbb
jle
std
test
xchg
fldl
call
ret
loopne
sbb
clc
xor
cmp
lret
mov
int3
in
pop
adc
cltd
loopne
xchg
xchg
dec
dec
fsubs
and
rcrw
cmp
cmp
rcll
cltd
ret
mov
es
js
pop
ss
dec
jbe
cwtl
jae
les
cmp
aaa
inc
jnp
pop
inc
dec
sbb
mov
inc
cmp
dec
push
movsl
mov
mov
cs
sub
xchg
stos
jle
add
and
xor
mov
add
stos
in
jle
and
xor
mov
mov
nop
sarb
push
cmp
inc
and
fisttpl
insl
hlt
push
or
pop
or
add
mov
sbb
outsl
jo
adc
out
or
cmp
push
arpl
out
and
sub
jge
pop
sbb
and
movsb
jb
dec
or
push
sub
cmp
add
jecxz
sub
xchg
adc
add
movsl
cmc
jae
std
movsw
jecxz
in
mov
add
sbb
pusha
jae
sbb
sub
les
mov
lea
imul
mov
scas
dec
sbb
js
lahf
loop
notl
jge
lret
imul
jg
cmp
movsl
in
jno
sub
sub
adc
push
and
out
rcr
or
pushf
addb
lret
daa
jg
loopne
push
repz
sahf
and
cmpsl
icebp
mov
cmp
lahf
cli
aam
inc
int
call
or
dec
repnz
jbe
idivb
mov
mov
neg
pop
cmpsl
xlat
and
pop
mov
dec
mov
pop
add
in
cmp
dec
aad
mov
push
lods
mov
jno
add
sbb
cmpsl
movsl
mov
mov
xor
push
xchg
jge
push
pop
imul
ret
xor
cmc
cmp
jne
xchg
push
das
fdivrs
es
pop
xchg
pop
pop
insb
movsb
or
scas
mov
mov
test
push
mov
sub
out
rol
cmpsb
dec
mov
and
or
sub
fistl
sarb
push
or
pushf
dec
scas
and
inc
inc
jp
jnp
in
in
and
mov
popf
das
enter
jmp
push
dec
inc
push
and
jmp
xchg
mov
repz
imul
mov
pop
ja
add
dec
adc
scas
inc
jne
cmpsb
dec
mov
iret
in
ret
es
cmp
push
inc
push
addr16
sub
aas
sbb
ret
je,pn
ljmp
rcrb
mov
decb
sbbl
pop
sti
pop
inc
inc
mov
enter
pop
inc
repz
fwait
xor
bnd
in
mov
ds
xlat
fsubrs
or
ret
arpl
jmp
pop
ss
out
loope
and
fisubl
jmp
movsl
xor
pop
cmp
nop
lock
mov
subl
cmp
push
mov
sub
push
outsb
fwait
jne
jno
aam
cmp
push
jo
adc
pop
fsubp
xchg
jae
inc
or
pop
ljmp
aam
aas
cmpsb
xchg
jno
jo
mov
sbb
lods
jo
sub
insb
sbb
pushf
nop
iret
sub
dec
js
pop
dec
jb
push
pop
and
lea
sbb
cmp
cmpsb
push
sub
pop
mov
les
push
and
and
rcl
lahf
xor
xchg
scas
xorl
cmp
sub
ja
lcall
fsubp
stos
adc
mov
sahf
in
xchg
pop
cmp
push
loope
jb
mov
cwtl
cwtl
lods
mov
jbe
sti
nop
jmp
cmp
ss
clc
mov
sbb
ficomps
mov
dec
dec
pop
daa
pop
jb
nop
jne
jo
mov
xchg
xchg
mov
dec
lcall
lcall
mov
sbb
sub
clc
ss
lds
dec
pop
jl
cmpsb
jecxz
aam
push
cmp
adc
fcomps
inc
es
push
idivb
or
jnp
lret
lret
mov
mov
imul
mov
ljmp
inc
mov
loope
call
mov
mov
mov
mov
mov
add
mov
cld
fidivs
iret
ljmp
cld
imul
mov
es
push
xor
cmpsb
ja
jno
xchg
sub
aad
jle
inc
push
inc
push
lret
out
loopne
adc
pop
pushf
xchg
aad
or
adc
push
lcall
ja
cmp
rorb
inc
jb
into
jb
test
sbb
cmpsl
push
notl
sarl
mov
leave
dec
push
fsubl
sti
out
and
in
push
insl
ret
jns
imul
push
mov
pop
xlat
out
mov
mov
out
imul
ljmp
test
shl
dec
outsb
mov
in
mov
dec
ret
jmp
jl
cli
mov
jl,pt
adc
wrmsr
jg
outsl
push
pop
pusha
dec
jo
subb
inc
out
rcr
loopne
lock
add
adc
and
xor
outsl
push
pop
pusha
dec
jo
subb
inc
out
rcr
loopne
lock
add
adc
wrmsr
out
inc
outsl
push
pop
pusha
jo
subb
inc
call
daa
lock
jae
inc
and
xor
jg
pop
pusha
iret
jo
adcb
mov
addr16
and
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sbb
sub
pop
psadbw
es
fiaddl
push
cli
ljmpw
xchg
cmp
dec
jp
push
lcall
fisubrl
lret
ljmpw
xchg
cmp
dec
jp
push
lcall
push
mov
test
add
dec
into
pop
mov
out
shl
insl
xchg
jge
in
arpl
stc
dec
push
add
inc
ja
stos
sub
cli
cmpsl
xor
into
push
jno
pushf
cld
insb
jb
jmp
and
data16
loop
sbbl
pop
adc
loopne
inc
jg
data16
inc
push
lahf
jecxz
into
pop
ret
or
pop
gs
xlat
test
jmp
and
mov
ja
bnd
push
notb
cmp
dec
inc
pop
jnp
imul
stc
jbe
stos
fldenv
xor
enter
decl
jge
lret
mov
test
loope
lret
inc
inc
fsubrp
and
inc
lret
add
inc
xchg
xchg
cmp
dec
jp
push
lcall
fiaddl
push
cli
ljmpw
xlat
pop
cmpsb
dec
mov
mov
sub
flds
inc
mov
pop
mov
repz
dec
mov
stos
es
mov
jne
push
mov
xor
sbb
outsb
ficoms
sub
pop
call
push
lcall
fiaddl
push
cli
ljmpw
xchg
cmp
dec
jp
push
lcall
fiaddl
push
cli
ljmpw
incb
mov
cmp
imul
sub
push
push
cwtl
jnp
cmp
jae
mov
lret
sbb
jcxz
push
sub
shl
cli
mov
mov
in
lcall
mov
into
ds
out
out
xchg
mov
or
dec
ret
jb
xchg
lret
lret
outsl
push
dec
pop
jg
cli
shll
mov
jno
mov
hlt
mov
mov
adc
xchg
pop
scas
shrb
aam
xor
cmp
cmp
push
popl
cs
sub
out
adc
bswap
mov
into
mov
and
das
hlt
sti
aaa
cmpsb
repnz
fisttpll
mov
data16
scas
scas
arpl
pop
mov
mov
sbb
jb
sarb
cmp
mov
xor
sbb
pop
fistps
clc
mov
mov
sbb
aad
xchg
ret
fdivs
scas
mov
jp
repnz
loope
xlat
or
pushf
pop
repnz
das
xchg
movsl
xor
inc
dec
push
out
rcrb
lock
movsb
stos
inc
addl
push
ja
pop
cltd
pop
sti
pop
push
bound
lds
es
cmp
mov
adcl
leave
cmc
jmp
mov
je
add
pusha
std
inc
jge
lcall
push
sbbl
sahf
push
mov
out
lods
lea
inc
mov
sub
outsl
fnsave
jns
dec
dec
inc
call
add
mov
inc
stos
cmp
sub
push
fcmovne
or
ret
jecxz
push
xchg
jnp
pop
mov
push
or
shll
lods
xchg
jno
adc
testb
push
movsb
xchg
test
outsl
ds
sbb
jle
repnz
loop
cs
adc
ud0
add
pushf
mov
out
mov
lea
movsb
in
mov
inc
dec
jl
int
data16
mov
ja
pushf
mov
mov
aaa
dec
xor
push
add
int3
loopne
cwtl
pop
inc
test
cmp
add
scas
adc
mov
mov
mov
in
mov
lret
stos
and
jle
adc
add
enter
sbb
nop
andb
mov
testb
je
push
movl
dec
push
sbb
faddl
scas
adc
xchg
ja
aam
jg
jo
push
pop
jbe
dec
push
sbb
pusha
lds
pause
movsb
jnp
sbb
cltd
loope
mov
xor
lods
mov
ss
out
xchg
dec
shld
xorl
jb
cmp
jg
rcr
mov
je
add
or
inc
mov
insl
popf
inc
nop
inc
xchg
pop
cmc
outsb
fisttps
in
js
cli
les
xchg
mov
xchg
xchg
adcb
mov
sbb
jno
xor
insb
cld
in
lret
neg
sbb
inc
sbb
lock
lcall
push
add
mov
nop
xchg
xchg
imul
add
add
stos
into
out
add
inc
xchg
sub
and
repnz
shl
sbb
pop
inc
pop
cs
pop
and
mov
add
sti
shll
popf
or
int
mov
add
cwtl
mov
push
jns
aas
or
jbe
scas
cld
sub
rcr
pop
loopne
scas
fists
xor
stos
add
push
insl
sahf
xchg
or
inc
mov
or
stos
int3
scas
jge
mov
pushl
lods
shr
insl
dec
cmp
rcrb
inc
nop
mov
pop
sub
xor
mov
in
sahf
shl
inc
or
out
push
inc
out
sbbb
push
call
shl
out
sub
arpl
jp
test
in
mov
jae
lahf
xor
cli
cmpsb
pop
mov
lea
cltd
fcmovb
pop
mov
repnz
and
adc
adc
mov
jge
dec
int
pop
fisubs
add
adc
jle
mov
fwait
sbb
loope
push
rolb
inc
jecxz
aam
rorl
mov
jg
in
mov
push
fwait
ret
adcl
movsb
icebp
push
cmp
sbb
xchg
mov
xchg
ret
and
ds
scas
mov
xlat
rcrb
push
int
xchg
ljmp
inc
insl
popf
push
xchg
pop
imul
adc
mov
push
les
fstpt
inc
mov
pusha
dec
mov
out
imul
dec
jp
adc
inc
fisubrs
shrl
pusha
push
in
or
imul
ja
xor
sarl
fisubrl
repz
out
fisubrl
xchg
dec
in
adc
pop
subl
mov
bt
loope
shrl
push
loopne
mov
int
out
jl
add
xchg
leave
mov
imul
iret
adc
shrb
das
std
mov
sub
xor
insb
sub
adc
nop
sbb
push
fnstcw
mov
sub
repnz
adc
cmp
rcll
test
dec
mov
xchg
and
orb
aas
add
xchg
int
divl
out
ret
popa
fstps
shll
xchg
hlt
push
int3
ljmp
in
push
into
scas
lahf
pop
push
cmp
sbb
or
adc
pop
push
mov
push
sub
cmp
push
cld
or
aas
pop
push
rolb
stos
outsb
mov
frstor
ret
sbb
jb
aas
scas
imul
xchg
xchg
xlat
or
inc
lcall
sub
cmp
ret
or
sub
cltd
jge
lret
nop
imul
scas
movsb
adc
xor
cmp
int
bound
mov
iret
mov
cmp
mov
call
iret
cmp
in
pop
mov
xchg
mov
mov
add
lret
rclb
sbb
jge
add
pop
bound
and
lcall
daa
nop
lea
mov
add
jecxz,pn
out
inc
int
xor
ss
cltd
push
inc
pop
and
push
xor
sbb
lock
faddp
mov
dec
mov
insb
shlb
dec
sub
sbb
mov
ret
add
mov
idiv
pop
movsb
dec
cmp
mov
fldl
dec
adc
jno
and
jmp
mov
lahf
aaa
in
imul
sub
lcall
adc
sub
jb
repnz
int
push
or
lahf
xchg
jno
sub
dec
push
pop
inc
mov
pop
fs
testl
mov
and
cmp
fidivrs
ret
xchg
int3
cmc
xchg
fcomps
jle
add
adc
mov
pop
frstor
sub
call
pusha
addr16
sub
mov
out
inc
aam
mov
lds
insl
mov
cltd
jno
dec
fs
xor
sub
ljmp
test
fwait
ds
clc
imul
jmp
aas
iret
cmp
fildl
sbb
mov
das
jnp
xchg
testl
mov
mov
and
iret
jnp
repnz
loopne
xchg
cmc
pop
aaa
in
je
mov
aaa
jge
pop
lock
lock
mov
sbb
cmp
js
add
test
xor
mov
ficoms
or
xor
call
cmp
dec
mov
in
out
std
fisubs
cmp
xchg
lcall
call
xlat
mov
lock
test
in
xchg
xchg
repnz
push
pop
stos
jns
mov
sub
adc
lcall
mov
cmp
imul
xor
and
enter
nop
je
shr
jmp
out
mov
cmp
mov
addr16
and
loop
arpl
in
mov
push
dec
out
lds
rclw
in
and
jp
dec
roll
inc
cmpsb
and
jnp
gs
dec
mov
insb
sbb
rolb
push
push
add
pushf
fs
push
push
mov
pop
sbb
sbb
das
jne
add
aaa
inc
ja
pop
mov
sbb
sub
arpl
sbb
xor
gs
cltd
dec
fadd
fstl
jae
clc
mov
cltd
add
scas
aas
hlt
cmp
or
gs
or
cmp
xor
push
push
push
adc
in
pop
sbb
mov
jge
ds
jecxz
sub
rolb
dec
jge
test
and
mov
scas
mov
pop
pop
mov
adc
mov
push
xchg
or
xchg
std
mov
repnz
ret
push
mov
loop
add
push
sub
pushf
gs
cmp
jo
push
outsl
jno
dec
mov
in
mov
push
sbb
or
aas
mov
jne
int
dec
and
xlat
testb
fdivrl
and
sbb
sub
jmp
xchg
dec
xor
inc
gs
je
mov
pop
or
mov
xor
les
and
cmp
fld
aad
negb
es
xchg
andl
std
or
add
push
cmp
fimull
jle
in
mov
imul
adc
imul
shll
push
dec
fdivrs
dec
jne
pop
adc
xor
int3
ljmp
push
sbb
aas
je
xor
xor
movsl
popa
pop
jecxz
popf
push
idivl
testb
pop
adc
bound
push
inc
mov
mov
mov
sbb
mov
pop
xchg
mov
repnz
jle
inc
lds
jbe
pop
mov
push
imul
ja
push
icebp
movb
test
pop
lret
ljmp
insl
pop
std
push
mov
inc
cmpsl
pop
push
cmp
out
enter
inc
mov
fisubs
ss
repnz
adc
sbb
mov
adc
cltd
outsb
test
jo
pop
lock
fdivl
hlt
stc
mov
cmp
stos
pop
lods
adc
out
lods
imul
fldenv
mov
dec
push
repnz
xchg
mov
ds
in
xchg
jb
lret
mov
jle
lods
repnz
cmp
dec
cmp
jns
out
push
inc
ret
iret
or
dec
and
arpl
popf
inc
xchg
or
sbb
ffree
clc
jne
xchg
fs
mov
fcmovnu
add
and
jecxz
lahf
sub
jl
daa
in
fildl
sub
out
sbb
or
push
mov
lds
xor
das
or
pop
dec
repz
push
aas
cmp
cltd
push
adc
sahf
pop
je
dec
insb
jmp
mov
insb
jne
cmc
test
jge
test
cmp
pop
jge
add
shld
mov
pop
push
cmp
xor
in
sub
jno
lret
pop
or
es
fwait
inc
gs
lcall
sub
mov
ljmp
inc
or
rorl
cmp
ds
pop
push
jmp
test
aaa
mov
and
dec
outsb
pop
xor
xchg
lret
mov
adc
add
cmc
or
dec
cmp
gs
dec
adc
lcall
imul
dec
push
in
cs
cmp
xchg
jp
movsb
insl
push
pop
ret
push
add
idivb
inc
mov
adc
cli
fnstsw
fsub
inc
mov
mov
int
push
xchg
pop
push
mov
hlt
hlt
jb
sub
xor
mov
mov
mov
inc
pop
aas
mov
sub
rcrb
add
pushf
cwtl
add
aas
mov
hlt
bound
xor
inc
divl
pop
add
lds
sbb
jp
mov
cltd
aas
jl
sub
jae
sbbb
lret
mov
int
jle
data16
pop
scas
sbb
push
sub
mov
sub
dec
cmp
fiaddl
jp
fs
fidivrl
dec
jbe
or
pop
add
mov
fidivrs
jb
repnz
test
test
cmpsl
or
xor
cli
or
gs
int
pop
aam
mov
imul
push
out
lds
xlat
leave
push
test
les
sub
adc
pusha
shrb
add
dec
lock
xchg
movsl
jge
inc
push
iret
lds
add
jbe
and
in
or
ljmp
jp
in
mov
insl
rorb
ret
xchg
xorb
push
xchg
mov
iret
stc
adc
jns
add
cmc
out
mov
stc
mov
sub
idiv
push
sub
outsl
and
sub
xchg
addr16
cs
imul
or
popf
ss
mov
add
test
xchg
cld
mov
and
ja
mov
subl
push
mov
pop
xchg
mov
sbb
xlat
mov
rorb
or
mov
stc
inc
inc
into
mov
cmp
xchg
sub
sub
push
adc
xchg
test
pop
test
std
imul
mov
jno
sbb
rcrl
mov
loop
or
mov
push
pop
gs
callw
mov
lds
testl
pmuludq
outsb
pop
mov
jne
sub
xor
imul
std
inc
imul
or
mov
repz
xchg
fidivrl
mov
loope
fs
clc
or
out
shl
repz
les
test
pop
jecxz
pop
in
in
dec
xlat
subl
sbb
push
push
or
cmp
repnz
xlat
fwait
cmp
nop
daa
xchg
cmp
jne
mov
sbb
dec
xor
inc
pop
scas
outsb
popf
mov
sub
es
jecxz
push
and
adc
fildll
inc
sarb
bound
xchg
hlt
pop
xrelease
sub
movsl
and
clc
dec
dec
sbb
sub
pushf
sbb
fnsave
push
popf
mov
int3
dec
loop
in
decb
leave
inc
mov
pop
lret
dec
aad
lret
fld
xor
hlt
inc
cmc
aaa
iret
or
mov
or
test
jl
mov
call
jb
sti
mov
push
rcrl
dec
xor
dec
clc
loope
pop
adc
and
mov
add
xchg
and
xchg
xchg
mov
cmpsl
sbb
psrlq
fwait
and
jb
mov
adc
addb
fidivrl
je
aas
pop
adc
aaa
jl
mov
out
lahf
xorl
test
push
js
aad
imul
push
push
imul
xchg
or
fimuls
mov
xor
adc
fisttps
xor
cwtl
or
mov
push
and
mov
inc
clc
fildl
inc
sbb
mov
movsb
push
xchg
shld
rolb
adc
nop
call
test
cmp
or
test
int
cmp
call
daa
mov
xchg
dec
cltd
lret
call
lods
jo
pop
imul
dec
int
fcompl
and
mov
push
aas
in
outsl
or
cmp
int3
and
imul
divb
mov
xchg
dec
xchg
mov
arpl
insb
mov
subb
loopne
sbb
xor
inc
es
scas
in
cmp
shrb
sbb
adc
popa
inc
fadds
dec
insb
xchg
mov
loope
clc
imul
pop
into
add
adc
mov
xorb
jne
push
ja
insl
test
test
sbb
mov
push
repnz
addr16
push
popf
pusha
jl
dec
adc
mov
mov
mov
cmp
add
aaa
aam
and
push
mov
adc
aaa
lahf
push
dec
repz
sbb
jbe
xor
xchg
or
push
cmc
fisttpll
mov
adc
data16
add
pop
repnz
mov
mov
xchg
insl
loop
mov
stos
loop
xchg
insb
add
jbe
jnp
or
popa
xchg
jne
inc
xchg
mov
inc
movl
fwait
jecxz
iret
jl
add
add
cmp
cmp
pusha
cmp
stos
into
mov
cwtl
fisttpl
dec
fwait
cs
xor
jb
dec
cmc
cs
pop
icebp
cli
lcall
or
repnz
mov
or
outsl
adc
mov
in
sbb
cmc
sbb
mov
rcll
cmc
mov
movsl
jnp
mov
jno
jae
jecxz
pop
pop
lahf
subl
sbb
mov
out
and
xchg
xor
pop
or
jmp
push
cmp
xchg
mov
mov
scas
cwtl
aas
dec
adc
pop
testb
adcl
int3
movsl
pop
mov
nop
jmp
call
pop
xlat
aaa
inc
mov
jnp
fwait
mov
ss
mov
sbb
and
and
cmc
jecxz
je
add
inc
mov
push
sarl
mov
out
cmp
mov
or
outsb
ljmp
add
jmp
cmpsl
lods
jg
es
and
mov
ljmp
test
cs
insb
int3
xorl
sub
lret
cld
and
nop
mov
jg
push
sbb
cltd
leave
cs
jb
adc
dec
push
cmpsl
fnstsw
cmc
inc
mov
scas
jb
xchg
jle
addr16
cltd
bound
jg
pop
lret
mov
mov
pusha
adc
pop
mov
push
or
fucomi
sbb
mov
jl
xor
sub
dec
sub
gs
cmpsb
adc
xchg
stos
add
jecxz
mov
mov
sarl
daa
jle
pop
cld
scas
xchg
inc
ljmp
inc
mov
sbb
mov
bound
pop
sbb
adc
dec
out
adc
movsb
xchg
insl
cwtl
sub
fldl
or
sbb
and
pop
clc
sub
xor
out
push
in
push
mov
es
or
pop
popa
stc
nop
lea
imul
movsb
rclb
mov
cmp
pop
imul
rclb
subb
stos
iret
shrb
lret
sub
jle
dec
les
rclb
inc
sub
fxch
pop
stc
ja
jg
into
test
adc
bound
mov
or
xor
push
xor
fiadds
aaa
sbb
push
cmp
sub
arpl
xchg
pop
jge
adc
inc
xor
cmp
enter
scas
xchg
jl
or
adc
cli
xchg
dec
mov
cmp
mov
sbb
in
jge
inc
mov
aam
lret
stos
out
fndisi(8087
sbb
out
jmp
ss
jle
jmp
jb
aas
repnz
mov
push
and
icebp
sub
pop
pop
pop
sub
iret
mov
inc
int
inc
popa
movsl
adcb
dec
rorl
imul
add
adc
pop
dec
inc
and
mov
imul
xchg
pop
arpl
insb
cmpsb
mov
mov
pop
imul
sub
aam
xchg
lock
or
jl
and
jmp
clc
int
shlb
sbb
push
dec
push
int3
sub
pushf
incb
jg
jl
sbb
hlt
adc
jle
fisubrs
mov
out
popf
mov
pushf
lods
jno
jp
mov
outsb
popf
push
sub
mov
jmp
and
mov
pop
call
xlat
cmp
pop
mov
push
popw
and
scas
idivb
pop
popa
mov
cltd
dec
add
cmp
movl
xor
inc
cmp
icebp
mov
pushf
dec
xor
outsb
pop
xchg
sub
fisubs
sahf
pop
cmp
pop
mov
jge
inc
sub
popf
in
mov
dec
fidivrs
test
call
orl
add
lds
arpl
cmp
daa
mov
jge
daa
loop
fwait
adc
jle
in
push
sub
int3
push
xchg
inc
sub
mov
push
push
repnz
ss
inc
inc
xor
push
lock
inc
out
jmp
add
movsl
sbb
popf
jno
lods
lods
sbb
and
std
mov
push
aam
pop
push
mov
cmc
fldt
jne
jb
inc
jg
sbb
mov
adc
scas
push
xor
les
repz
cmpsl
jne
mov
test
popf
aad
xlat
xchg
adcl
dec
sbb
loope
int3
push
mov
stos
pop
loopne
fisttpl
jns
xchg
xor
mov
sub
xor
call
cmp
dec
push
cmc
dec
sub
insb
sbb
xchg
lcall
aam
neg
outsl
xor
insl
pop
cli
mov
mov
imull
xchg
daa
imul
or
insb
mov
daa
sub
lea
xchg
hlt
cmpsb
sub
jp
push
lcall
fiaddl
push
cli
ljmpw
xchg
cmp
dec
jp
push
lcall
fiaddl
push
cli
ljmpw
xchg
cmp
dec
jp
push
lcall
fiaddl
push
cli
ljmpw
xchg
cmp
dec
jp
push
lcall
inc
lods
into
inc
test
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aad
xor
test
mov
mov
sub
dec
fnstcw
push
hlt
mov
movsb
enter
call
je
dec
sub
sub
js
push
xor
pop
outsb
mov
aam
adc
pop
and
adc
pcmpeqd
jo
mov
fbstp
cld
pop
jmp
sub
or
cmp
cmp
out
aaa
xorb
aas
sarl
imul
add
xor
imul
in
enter
mov
dec
mov
iret
pop
mull
stos
cmpsl
xlat
shlb
rcr
in
hlt
aam
mov
test
inc
ljmp
mov
dec
mov
sbb
cmp
daa
xchg
dec
mov
inc
mov
and
movsb
sub
push
sbb
or
or
inc
jge
adc
cmp
dec
jno
call
mov
mov
movsb
mov
fs
sbb
js
or
ljmp
mov
jmp
mov
jns
dec
add
loope
aaa
xor
pop
or
das
jge
mov
arpl
xchg
in
fwait
cmpsl
and
inc
sub
xor
popa
sub
xchg
mov
mov
clc
test
xchg
sbb
cmp
pop
and
xor
add
adc
in
hlt
mov
movsb
enter
call
je
inc
sub
dec
xor
add
adc
in
mov
xchg
ret
cmpsl
mov
pop
sub
ror
fisttpl
sub
cmp
loopne
into
out
stos
jb
add
ljmp
jl
lods
dec
sub
add
in
mov
bound
jo
insl
pop
cmc
ja
add
popf
hlt
sbb
cmpsl
mov
fsts
jl
subl
sahf
arpl
adc
ret
in
scas
mov
lret
aad
ficoml
cs
pop
les
jmp
xchg
dec
ret
popf
test
lret
test
mov
or
add
inc
rorb
inc
test
xchg
in
imul
mov
xchg
rcll
arpl
cmp
dec
iret
cmpl
data16
mov
sbb
shlb
in
jmp
sbbl
push
fdivrs
jmp
sbb
pop
lds
test
add
setle
std
lcall
inc
rolb
sub
xchg
mov
mov
lret
rcll
xor
je
stos
add
negl
push
repz
xchg
sbb
add
lods
scas
or
jmp
sub
stos
sbb
sub
repnz
outsb
cmp
ja
adcb
sub
pop
jp
jg
sbb
adc
jno
add
push
and
mov
cmpsb
movl
les
cmp
cwtl
inc
test
add
adc
add
dec
ret
mov
aad
cmp
push
adc
stos
and
inc
add
es
aas
addb
pop
adc
add
xchg
cmp
fisttps
mov
lock
shrb
test
test
add
mov
pop
shlb
test
out
cmpsb
mov
jo
jb
add
sub
jmp
imul
mov
test
and
icebp
fwait
jnp
and
bound
aad
outsb
jno
out
jne
sbb
mov
fnstcw
andl
jo
sub
sarb
ficomps
jmp
pop
imul
adc
pop
jmp
testl
cld
fnstcw
adc
push
scas
aaa
cmp
test
test
jge
and
insl
and
cltd
sbb
inc
je
ss
xchg
add
cmp
push
push
xchg
repz
orb
pop
scas
mov
scas
or
push
cmpsl
aas
in
sahf
pop
inc
jnp
push
jecxz
adc
xor
das
adc
inc
shll
fwait
lock
subl
xor
xchg
hlt
jnp
pusha
sub
lds
dec
jge
jnp
mov
cmp
or
xor
add
and
cld
dec
xchg
mov
adc
test
mov
arpl
inc
daa
push
outsl
dec
jge
sbb
jo
cmpsl
mov
ds
dec
das
popf
cmp
nop
push
sbb
jno
sbb
push
fwait
stos
xor
aaa
ret
cmp
push
enter
jmp
iret
out
and
mov
insb
data16
test
mov
repz
mov
shl
inc
jno
dec
mov
add
or
sub
mov
stos
add
jb
std
inc
popf
ficoml
jo
xor
hlt
ret
jo
fisubrs
lahf
cmp
jg
aad
jge
out
mov
lock
lods
test
into
nop
es
cmc
mov
mov
xchg
fcmovbe
mov
outsl
popf
mul
add
jecxz
aad
jo
clc
or
mov
cmpsl
push
push
inc
mov
pop
fimull
dec
clc
mov
dec
leave
xchg
cltd
ret
je
ret
sbb
dec
sahf
inc
xorl
insl
scas
xor
pushl
in
dec
push
xchg
in
dec
mov
xor
and
outsl
sbb
jg
add
push
fsubrs
std
dec
pusha
cmpsl
push
orb
ffree
insb
outsb
pop
pushf
addr16
arpl
mov
sub
adc
stc
and
ffreep
push
out
sbb
push
inc
das
sub
test
xchg
test
jp
rclb
faddl
test
pusha
pop
iret
pop
cmp
jnp
jo
fdivrp
push
mov
outsl
hlt
mov
dec
or
out
out
or
insb
mov
jbe
jp
dec
popf
push
rcrb
mov
mov
scas
frstor
add
cwtl
shrb
ds
test
pushf
inc
popf
sub
rolb
push
inc
rol
pop
repnz
dec
sbb
inc
out
xchg
out
add
fsubp
xchg
pop
repz
adc
dec
push
lods
in
daa
sub
insb
sahf
xlat
in
inc
lock
add
popa
jle
xchg
adc
mov
adc
mov
repnz
push
push
jno
jp
inc
mov
movsl
hlt
jg
sub
push
sub
bound
pop
mov
lcall
repz
sbb
aad
sub
adc
aaa
jo
mov
lret
jnp
push
imul
pop
and
mov
shl
and
pop
pusha
dec
sub
or
push
jnp
out
mov
jns
push
jecxz
mov
js
jbe
out
jl
scas
sub
and
sub
nop
mov
dec
out
scas
push
das
dec
fidivrs
inc
push
xor
xor
popa
mov
xor
mov
and
lds
jge
stos
and
ds
or
enter
test
lods
xrelease
iret
dec
inc
or
and
push
add
xchg
dec
lds
jge
cmp
add
sub
in
mov
add
hlt
pusha
rcr
movsl
test
add
testb
xchg
sub
mov
push
test
lret
adcb
add
dec
add
les
cmp
dec
push
popa
je
push
out
mov
xor
push
pop
jns
lods
scas
jno
rcr
insl
mov
fsubrl
xchg
mov
xlat
mov
sub
and
dec
js
push
xor
mov
or
push
testl
xchg
shlb
int3
test
or
cld
pushf
push
xor
and
cld
or
orb
jne
fstpl
mov
dec
mov
aaa
ds
stos
hlt
cwtl
mov
pop
repnz
aam
sbb
dec
add
adc
push
pop
mov
push
jle
xor
sbb
xchg
mov
decb
mov
add
adc
ret
or
clc
sti
jg
and
push
cmp
sub
mov
pop
dec
lods
sub
lock
js
cmp
fadds
xchg
dec
int3
aad
sub
sti
imul
aam
repnz
push
ss
cmp
je
lret
push
scas
sbb
int
lret
add
pop
incl
adc
mov
fldcw
pop
xchg
jno
arpl
fwait
push
mov
cmp
cmp
xor
imul
dec
push
and
outsl
into
mov
inc
adc
fbld
shll
cmpl
fst
outsl
sbb
mov
stc
mov
cmp
lcall
or
imul
lahf
jecxz
leave
cmp
dec
addr16
out
dec
stos
sbb
in
std
mov
and
mov
and
cmp
imul
cmpsl
sub
cmc
cs
and
cwtl
out
dec
pusha
addb
xchg
inc
sahf
data16
push
sub
xor
jmp
xor
or
loop
in
adc
add
lock
data16
dec
cs
mov
fwait
insl
inc
add
cmp
adc
xchg
mov
cmp
adc
add
movl
inc
jb
and
pushf
add
or
lcall
andb
mov
mov
movsl
js
test
jnp
fiaddl
movsb
sbb
jg
adc
cmp
pop
bound
add
jbe
pop
jle
insb
out
cmpsb
lea
test
push
inc
xchg
jg
mov
ds
pusha
hlt
add
and
or
sub
pop
inc
mov
imul
jl
leave
mov
dec
push
pop
test
pop
std
mov
jl
push
stos
orl
pop
mov
enter
jbe
movsb
mov
xor
das
fwait
xchg
xchg
inc
push
js
mov
sbb
cmp
sbb
pop
jno
rolb
xlat
inc
cmpsb
int3
xchg
fnstenv
lcall
adc
cwtl
aad
mov
shlb
xor
pop
mov
mov
push
inc
and
push
in
je
sbb
outsb
ljmp
int3
mov
jl
xchg
fs
xchg
mulb
add
rcll
jae
jno
mov
xchg
aam
scas
jbe
jmp
fwait
insl
lret
sbb
or
out
mov
ret
mov
inc
cltd
inc
out
mov
cld
iret
out
outsb
stos
cmc
icebp
push
jle
popa
cmp
popa
clc
testb
push
cmp
mov
dec
std
ljmp
pop
mov
hlt
push
and
pop
lds
orl
pop
push
loop
inc
pop
push
shll
pop
dec
test
pusha
jbe
mov
icebp
push
std
shrl
adc
sbb
jp
in
sti
cmp
cmpsb
popf
sbb
cmpsb
xchg
js,pt
shlb
dec
mov
test
jge
sti
fwait
lods
xchg
mov
hlt
inc
jb
repnz
in
vpshuflw
mov
sbb
hlt
inc
add
xor
sub
int3
add
pop
pop
inc
daa
scas
cmpsl
push
js
dec
outsb
mov
push
fldenv
cmp
push
mov
pop
sti
push
insb
add
imul
mov
push
inc
sub
mov
addr16
mov
loop
cmc
adc
arpl
jmp
cmpsb
sbb
mov
adc
das
iret
sbbb
xor
bound
jbe
pop
sub
mov
repnz
ljmp
dec
pop
sub
push
inc
jle
sbb
leave
jl
add
int3
and
mov
pop
imul
loope
add
inc
mov
les
inc
ret
mov
xchg
div
movsl
pop
rorb
mov
jns
add
pop
clc
adc
jb
mov
popa
inc
roll
xchg
mov
push
jmp
cwtl
imul
xorl
in
inc
iret
mov
mov
movsl
int
jnp
std
int3
sub
mov
sub
mov
data16
das
mov
cmc
mov
enter
dec
and
jge
add
mov
call
cli
sub
daa
popf
bound
test
sahf
adc
ret
fdivrp
sti
xchg
lea
push
test
cmc
xor
cmp
dec
xor
call
testl
arpl
pcmpeqd
lret
mov
ljmp
mov
mov
sti
add
adc
ja
outsl
fwait
jmp
mov
adc
add
out
xor
enter
push
icebp
test
adc
scas
fs
hlt
lea
stos
inc
cs
mov
push
and
pop
pop
scas
mov
sub
cmp
mov
loop
mov
icebp
sti
gs
xchg
pop
gs
xorl
cmp
jg
aas
push
lods
cmp
out
bound
push
int
push
popa
fstps
sar
ljmp
mov
mov
pop
xchg
add
jae
cmc
cwtl
stos
fiadds
cs
push
lahf
or
icebp
add
mov
xor
sbb
push
inc
daa
addb
in
push
inc
jnp
fs
data16
jecxz
outsb
dec
push
out
mull
icebp
sti
sbb
testl
outsl
rol
lods
ficoml
push
sbb
int3
gs
pop
rclb
iret
mov
loopne
adc
fcmovu
aaa
pop
adc
pop
sbb
movb
add
add
xchg
cwtl
adc
or
movsl
or
aam
dec
cmp
sbb
lods
or
cmp
xor
or
sbb
cwtl
push
cwtl
cmp
popf
cmp
cmp
mov
cmp
fmuls
sub
int
add
shlb
mov
mov
mov
insb
push
sbb
or
es
lods
dec
sub
push
loop
and
ret
stc
fwait
inc
adc
cmc
mov
mov
xchg
in
movsb
sub
and
mov
or
xorl
repz
test
xchg
inc
jle
or
cli
addb
fwait
sbb
pinsrw
stos
scas
fldl
and
idivb
daa
push
aam
call
insb
mov
leave
clc
and
aad
movsl
lcall
xchg
iret
xor
sub
imul
mov
push
sbb
fmul
jns
gs
jecxz
test
out
das
jl
mov
mov
push
inc
mov
xchg
dec
and
cld
sbb
inc
jecxz
scas
stc
mov
imul
jnp
daa
std
jge
mov
aad
es
xor
aam
jge
andl
sbb
shll
inc
mov
pop
leave
out
rclb
push
sub
gs
push
rcl
into
jl
xor
cmp
mov
mov
jp
bound
test
jnp
lds
cmc
inc
xchg
cmp
push
inc
loopne
pushf
loope
lods
jl
fldcw
mov
les
stc
pop
bound
popa
sbb
sub
cld
mov
fs
int3
in
xor
inc
push
inc
lcall
int
sbb
inc
sahf
and
testl
cmc
inc
xchg
xchg
jecxz
and
ss
push
mov
xchg
xchg
out
sahf
sub
loopne
adc
sbb
cli
adc
jg
inc
loope
stos
test
lahf
xor
push
rcl
add
mov
jg
cmpsl
ja
pop
and
mov
push
loope
out
pushl
testb
daa
push
mov
mov
popa
les
stos
add
pusha
jg
mov
test
loope
push
inc
sub
arpl
dec
dec
std
vunpcklps
sti
bound
mov
data16
dec
fisttpll
or
mov
divb
mov
in
jno
mov
cmpsl
jns
inc
aaa
sub
cwtl
inc
outsl
arpl
push
add
xchg
enter
call
imul
lret
and
das
out
stos
inc
and
xor
mov
clc
scas
cli
dec
rcrl
jo
aam
addr16
sbb
mov
pop
mov
cmpsb
pop
imul
and
cmp
cwtl
pop
xchg
das
mov
cmpsb
jl
mov
and
sub
adc
idivl
icebp
iret
push
inc
pop
gs
mov
in
outsb
add
xlat
in
xor
pop
insb
scas
sbb
neg
push
xchg
push
stos
inc
sti
adc
repnz
cmp
push
or
outsb
push
mov
lahf
imul
movd
push
xorl
dec
fdiv
js
dec
mov
aaa
jo
ss
mov
repnz
pusha
lea
mov
mov
adc
mov
mov
or
xor
add
or
loope
adc
dec
pop
pushf
pushl
cs
shlb
loope
xchg
cs
call
push
dec
cmp
add
imul
push
add
dec
mov
cmpsb
push
dec
mov
incl
cmp
aaa
in
into
xchg
mov
cmc
sbb
inc
rcl
gs
leave
ljmp
dec
shlb
cmp
xchg
insl
sub
pushf
lcall
fbld
xor
and
dec
aad
test
xlat
jnp
pop
stos
stos
lahf
mov
dec
mov
push
and
sbb
test
aas
push
inc
mov
pop
mov
adc
sub
out
mov
out
add
xchg
mov
icebp
pop
pop
inc
nop
cli
imul
enter
sub
add
xchg
sub
rcr
fs
add
xchg
test
cli
cltd
in
inc
push
lods
pop
inc
popa
nop
and
xchg
add
je
dec
jns
fistpl
push
and
jecxz
jmp
addr16
lods
popa
daa
xchg
or
in
sahf
lahf
pop
dec
mov
cmp
lahf
ss
lea
cmp
test
add
jle
dec
or
aam
cmp
notl
rcrl
testl
fmuls
ss
pop
loope
xchg
dec
cmp
es
push
jl
mov
repz
and
stos
and
add
push
pop
mov
xor
jne
pusha
xor
inc
pop
push
xchg
mov
sbb
cmpsb
imul
stos
popf
loope
cmp
stos
xor
adc
jmp
mov
and
daa
in
je
faddl
dec
dec
xor
cltd
aas
shl
xchg
stos
inc
mov
pop
inc
mov
or
cmpsb
dec
mov
jns
int
ret
or
lods
pop
frstpm(287
mov
aaa
fs
mov
mov
jno
adcl
out
ror
mov
lret
push
shl
in
jp
mov
icebp
outsb
scas
adc
sbb
mov
int
push
mov
inc
daa
shl
adcl
mov
es
jne
stos
shl
lods
daa
lret
and
ljmp
push
roll
stos
xchg
fimuls
cmp
mov
ret
mov
or
jmp
jo
ret
scas
es
jmp
xchg
cs
push
daa
lock
xchg
addr16
fistl
fdivl
push
inc
mov
clc
cmp
push
pop
and
jp
mov
out
daa
pop
xchg
and
leave
dec
lret
outsb
scas
pop
fistpl
or
call
xchg
fidivrl
aam
popf
sub
push
push
push
sub
push
jle
xchg
mov
xor
mov
xchg
mov
jno
scas
mov
fistpll
mov
adc
sub
imull
fcmovu
lret
call
push
loope
mov
shrb
daa
dec
or
cmpsl
fmull
sub
or
pop
popl
loopne
in
xchg
fisttpl
test
and
jns
inc
sbbl
bound
xchg
cmp
mov
mov
xor
and
mov
sub
adc
xor
jle
sbb
xchg
cpuid
jp
sbb
int
popa
add
std
mov
les
cmp
nop
jl
rorl
cld
rolb
test
fwait
daa
addr16
lock
out
call
and
mov
idivl
sti
push
jmp
pop
add
scas
xchg
mov
stos
xor
movsb
ss
sbb
loope
xor
jecxz
pop
fdivp
xor
in
fldenv
imul
icebp
cmp
xchg
inc
dec
sbb
add
pop
pop
jle
add
mov
sub
fisubl
push
dec
sbb
cmp
xchg
dec
xor
ljmp
movsl
mov
cwtl
fsubp
xchg
neg
mov
add
dec
pop
push
dec
bound
push
aas
shll
rorl
add
inc
sarb
sub
sti
pop
lahf
fistpl
mov
insl
mov
push
stos
push
dec
pop
lock
adc
xor
call
dec
pop
push
fs
gs
pop
xchg
add
dec
dec
dec
popf
xor
movsl
out
clc
insl
test
push
daa
cmp
adc
daa
sub
push
das
sub
push
inc
add
movb
out
sub
push
ljmp
imul
push
xor
aam
pop
out
xchg
pusha
mov
push
mov
fdivrl
adc
pop
arpl
stos
ds
mov
sub
loope
push
adc
xchg
insl
jne
adc
jne
push
loope
fdivs
scas
popa
push
dec
stos
sub
jg
int
outsb
call
fistps
or
mov
xchg
outsb
js
ja
ficomps
push
insb
sub
lds
cmp
cld
xor
ret
mov
jb
roll
push
cmp
xor
pushf
popa
dec
data16
das
repz
movsb
into
sbb
popa
cmp
test
and
lahf
push
pushf
sahf
mov
cmpsb
add
and
jle
cli
das
das
aas
int3
mov
inc
jnp
xchg
jns
inc
jno
sbb
sti
imul
rol
out
xchg
test
add
shl
sahf
or
push
push
ss
outsb
jae
sub
pop
scas
popa
sbb
push
pop
inc
mov
js
push
aad
jb
cltd
stc
sbb
sub
scas
fwait
inc
inc
push
out
cli
sub
push
xchg
aas
outsb
push
sahf
bound
jbe
xchg
pop
and
xchg
lock
mov
insl
faddl
gs
dec
xchg
mov
movsb
enter
call
je
inc
sub
dec
xor
add
adc
in
hlt
mov
movsb
enter
call
je
inc
sub
dec
xor
add
adc
loopne
cli
test
test
fldenv
xchg
sbb
or
inc
sub
pop
and
jl
pop
lock
adc
and
mov
add
push
sbb
sub
das
pop
rorb
insb
lahf
fisttps
out
lret
test
mov
loop
sbb
or
outsl
pop
pop
dec
dec
jg
outsl
das
lahf
fisttps
out
fistps
out
scas
pop
pop
cmovg
jg
outsl
pop
pop
dec
movq
outsl
das
lahf
fisttps
out
fistps
out
scas
pop
popa
sub
dec
cmovp
dec
cmp
cmp
push
das
jmp
out
mov
rcrb
dec
adc
fs
xlat
inc
and
xor
sbb
xlat
xchg
mov
out
xlat
jo
inc
out
push
adc
addr16
jo
mov
cmpsl
mov
jg
outsb
or
dec
test
aas
shll
in
aad
out
mov
sbb
mov
jp
scas
pop
pop
les
shrb
and
sti
mov
xor
out
insb
sbbb
rclb
xchg
in
int3
inc
or
cmp
push
adc
lahf
out
jo
inc
fs
push
sbb
dec
mov
movsb
pop
pmovmskb
dec
cmpb
jg
pop
ja
test
push
lcall
ljmp
pop
mov
inc
outsl
mov
sub
pop
fisttps
out
fistps
out
scas
pop
pop
cmovg
jg
outsl
pop
pop
dec
movq
outsl
imul
mov
mov
fildll
push
dec
adc
fnstenv
jbe
mov
sti
test
out
mov
mov
sbb
inc
sub
add
dec
add
mov
lcall
scas
pop
pop
cmovg
jg
outsl
pop
pop
dec
movq
outsl
das
lahf
fisttps
out
fistps
out
scas
pop
pop
cmovg
jg
outsl
pop
pop
dec
movq
outsl
das
lahf
fucomip
fisubl
or
cmp
shrl
inc
sub
jle
inc
into
fisubrs
push
in
dec
dec
mov
xchg
cmp
dec
push
mov
jle
push
cmpsl
je
popa
xor
mulb
addr16
mov
push
sub
sub
dec
into
subl
outsb
cmpsl
rcll
jecxz
or
or
sbb
cmp
int
daa
je
out
in
and
cmp
ljmp
in
xorb
lods
testl
sbb
je
repz
ss
inc
rol
mov
cwtl
ret
xchg
ret
sbb
pushf
sarb
cs
out
lock
mov
insb
mov
push
mov
aad
cmp
int3
pop
pop
pop
push
jo
lds
adc
add
mov
aas
sub
xchg
jno
jo
enter
sbb
lods
mov
inc
cmp
jl
cli
sub
insb
lahf
jmp
adcl
inc
sub
push
pop
dec
dec
stos
jbe
or
adc
add
mov
cli
cmp
adc
mov
xchg
adc
adc
jmp
mov
cmp
or
mov
ljmp
subl
mov
xorl
cmpsl
mov
lret
mull
xor
popa
or
jge
sti
xor
xchg
dec
insl
movsl
int3
aaa
scas
rcr
add
pop
pop
ds
call
sbb
or
mov
adc
ret
iret
mov
xchg
jnp
jl
ljmp
sub
imul
and
and
push
stos
pop
push
imul
fmull
jl
adcb
push
or
fistpll
aam
jbe
inc
adc
out
cmp
xchg
xchg
xchg
mov
xor
xchg
or
add
dec
cmp
mov
sahf
cmpl
sbb
inc
mov
fiadds
aaa
cmpsb
and
push
adc
add
repz
add
sbb
out
pushf
xchg
jecxz
ret
push
fildll
push
or
mov
mov
mov
inc
movsb
lret
leave
pop
inc
inc
andb
jns
outsb
sub
cmp
out
xor
fsub
jns
jecxz
push
arpl
sub
rclb
rcr
push
push
mov
scas
mov
xorb
ret
adc
inc
cmp
mov
dec
icebp
aaa
fldpi
pop
out
fnstsw
leave
popf
loop
cld
and
in
sub
fldt
mov
rolb
and
adc
mov
in
add
inc
std
push
lahf
insl
pusha
dec
lret
subl
fs
dec
out
iret
pop
je
mov
mov
dec
adc
adc
fcmovb
xchg
daa
mov
mov
scas
lock
add
or
adc
xchg
add
mov
cli
xor
test
loope
add
mov
ss
negl
insb
push
dec
addr16
or
cltd
daa
data16
outsl
jo
pushf
loopne
scas
mov
imul
sahf
lret
ljmp
pop
xchg
push
les
mov
sub
push
hlt
dec
test
inc
jge
movsb
add
andl
loop
ret
jp
popa
lock
sub
stos
dec
push
xchg
xchg
mov
aad
pushf
xchg
lods
cmp
repz
cmp
fisubrs
shrl
mov
mov
push
arpl
cmp
je
push
pop
jbe
mov
add
pop
or
aad
xchg
out
xor
push
je
arpl
cmp
ret
shl
lahf
add
or
inc
fnsave
sbb
cmp
push
fmull
sbb
push
cmpsb
pop
ss
ja
test
pop
scas
pusha
and
daa
cmp
imul
lahf
push
addl
mov
lahf
imul
mov
cmpsl
lret
sti
lcall
outsl
inc
pop
fs
int
bound
push
rorl
leave
fsubrs
jno
jl
or
push
insb
jns
popf
sub
or
imul
sub
mov
push
call
jbe
repz
pcmpgtb
mov
mov
pop
and
mov
jg
pop
push
jno
and
rclb
xlat
add
scas
sub
xchg
xlat
xor
out
sarl
mov
popa
pop
xchg
rcl
ljmp
pop
xchg
mov
adc
sahf
fdivrp
xchg
das
or
jl
xchg
or
jnp
gs
xchg
lcall
sahf
xor
pop
sbb
add
nop
mov
out
or
movsb
jp
arpl
outsl
add
pushl
popa
inc
in
xchg
in
push
loope
out
xlat
sbb
outsl
cli
push
negl
mov
das
imull
out
cmp
adc
hlt
mov
jg
cwtl
xchg
test
data16
add
pop
scas
mov
repnz
push
ljmp
sub
xchg
or
stos
shl
adc
pop
ljmp
loop
sub
sbb
scas
iret
jle
data16
push
xor
mov
ret
ficoms
cmp
mov
mov
rclb
scas
cmp
stc
inc
sahf
inc
mov
shlb
sarb
sti
test
stos
iret
call
stos
arpl
mov
rcl
ret
push
cld
adc
jl
pop
push
lret
dec
orb
or
mov
aaa
pop
out
pushl
iret
adcl
sbb
ljmpw
shl
bound
lods
mov
jae
mov
jp
pushf
ret
outsl
or
or
mov
or
add
push
jl
push
jb
sub
cmp
push
mov
pop
sub
pushw
mov
lahf
leave
out
push
jmp
jo
xchg
push
addr16
jecxz
xchg
test
out
lret
pop
cld
repnz
jl
mov
adc
dec
mov
shll
jmp
jl
insb
push
ret
out
sbb
xor
aaa
mov
cmp
mov
dec
or
push
stc
nop
mov
add
ljmp
mov
outsb
jo
push
mov
lret
cmpxchg
mov
xchg
xor
mov
jbe
push
sub
mov
xchg
or
cld
ljmp
mov
pop
add
jmp
ret
push
xchg
dec
add
sbb
mov
test
fisubs
dec
inc
insl
cltd
dec
in
pushf
sbb
cmp
inc
or
mov
mov
dec
and
insl
ss
ret
lret
arpl
inc
rcl
aad
jmp
inc
jae
or
je
pop
or
ret
mov
pop
int
ljmp
adc
inc
jecxz
jo
pop
xor
test
inc
dec
dec
pop
shll
decl
lahf
cmp
cmp
adc
mov
test
cs
add
ljmp
and
fmulp
pop
cli
cli
cmp
push
inc
nop
inc
sbb
xchg
pop
jbe
stc
sahf
pushf
sbb
jno
test
int
mov
int
imul
stos
lahf
sub
enter
test
test
or
dec
fstps
pop
jae
test
sbb
lods
cmc
adc
ret
in
dec
shr
sbb
testl
pushf
cmp
mov
aas
addr16
pushf
das
pushl
mov
jno
pop
jnp
xchg
cmp
mov
sub
cld
jmp
imulb
adc
add
add
shll
xor
movsl
mov
neg
jns
cwtl
jae
sbb
stc
in
sbb
sub
mov
sbb
inc
and
scas
lock
add
ja
bound
xor
fistl
cmp
and
inc
inc
cmc
das
pop
add
add
push
test
pop
xchg
and
test
dec
movsl
cmp
add
sbb
out
adc
mov
xchg
xlat
pop
and
hlt
sub
ret
jae
ror
cltd
push
dec
mov
shll
aam
dec
mov
sub
add
dec
pop
cltd
or
shll
popa
test
scas
int3
jnp
cmp
cs
dec
outsl
cld
movb
mov
shll
sbbb
push
in
xchg
cmp
enter
push
sbb
sub
xchg
cltd
fldt
sub
fidivl
aas
cmp
mov
jg
inc
fidivrl
test
jmp
jl
sbb
add
icebp
movsl
mov
jg
or
or
fsubr
decl
inc
xor
inc
or
out
inc
iret
add
mov
rolb
pop
in
xsave
or
dec
dec
mov
jae
fwait
xor
fcomps
add
popf
and
xor
mov
clc
popa
and
and
jne
cli
scas
outsb
mov
mov
dec
jge
hlt
push
mov
dec
jp
xchg
es
pop
andb
xchg
cwtl
out
ret
mov
add
xchg
jge
mov
lret
cmp
mov
push
cs
fsubr
inc
mov
call
cs
mov
sbb
adc
lods
movsb
jmp
xchg
mov
cmp
mov
aad
and
cmpsl
arpl
jle
mov
mov
mov
mov
call
dec
pop
mov
jl
lea
incb
add
jmp
rcl
stc
ljmp
pushf
push
fdivl
scas
cmp
cmpsl
cvtdq2ps
mov
fbld
or
and
mov
push
ret
popf
and
xchg
xchg
adc
mov
ret
rcrb
and
xchg
or
stos
or
or
sbb
push
add
dec
orl
inc
repnz
lahf
xchg
fwait
push
sbb
in
lret
fstpl
mov
adc
jno
push
jno
ror
mov
xchg
lret
adcl
or
and
cs
rorb
stc
fimull
and
imul
and
das
jg
pop
mov
mov
sub
imul
inc
gs
stc
push
sub
je
xchg
std
pop
mov
mov
popa
mov
cmp
xor
in
fucom
push
push
adc
mov
mov
jg
push
pushf
sub
inc
in
repz
test
push
arpl
int
pop
shlb
rol
fimuls
jecxz
pop
cltd
mov
push
fsubrp
and
dec
pusha
je
mov
mov
push
shrl
adc
dec
sub
repz
outsl
popa
dec
sahf
or
aad
mov
push
les
sub
roll
int3
xor
data16
xchg
repz
inc
lret
icebp
mov
roll
mov
sbb
test
xor
cmp
add
ds
sarb
push
dec
lock
push
leave
mov
lret
jne
fcmovnu
fcmovbe
lock
mov
imul
mov
xor
cmpb
movsl
jne
imul
repnz
imul
hlt
or
inc
mov
data16
pusha
push
add
fs
addl
or
ljmp
stc
push
push
push
in
mov
fisttpll
xchg
mov
xchg
mov
jne
fisubrl
inc
cmp
test
mov
pushf
lahf
popf
adc
jno
jl
cmpsl
negb
mov
mov
xchg
xchg
setnp
es
jo
dec
je
nop
inc
inc
nopl
jg
sub
aaa
sbb
push
fs
xorb
xor
xor
imul
sahf
sbb
jno
jle
xchg
cli
mov
xchg
mov
fidivs
jp
gs
popa
lcall
mov
mov
ljmp
lcall
js
into
bswap
loope
loopne
push
mov
mov
fs
pop
std
pop
mov
mov
push
imul
mov
out
sub
daa
clc
pop
scas
sbb
inc
fcomip
xchg
push
push
leave
mov
cmp
std
shlb
mov
imul
cltd
cmp
jbe
xchg
cwtl
add
xor
dec
push
mov
mov
push
xor
inc
orb
test
cmp
jmp
inc
mov
lret
insl
mov
mov
jbe
mov
daa
sub
sbb
in
das
jb
cmp
sub
pop
cld
pushf
mov
xchg
pop
mov
data16
test
mov
aam
cwtl
mov
mov
insl
xlat
xor
subl
shlb
fsubs
int3
insl
cltd
lcall
inc
scas
addr16
adc
inc
scas
mov
je
adc
enter
inc
fnsave
jne
rcl
das
mulb
mov
add
outsb
jne
adc
jge
jae
stos
mul
xchg
ja
xchg
loop
test
pusha
sub
out
mov
and
and
inc
mov
adc
aas
adc
inc
cld
sub
orb
xchg
insb
testl
or
xchg
popf
rcrb
stc
cwtl
mov
and
test
stos
leave
rorl
push
mov
aad
sbb
insb
cmp
mov
ds
gs
cmpsl
dec
mov
xchg
fwait
clc
mov
rcl
shrl
jne
jmp
sbb
jecxz
or
rcrb
jnp
das
and
add
je
call
lock
std
sarl
shll
cltd
mov
enter
inc
jns
inc
into
adc
mov
loopne
int3
mov
mov
push
adcb
ljmp
inc
add
movsl
add
rclb
cmp
aam
jae
arpl
sub
pop
push
cltd
lock
or
jmp
std
loope
fsubrs
dec
or
pop
arpl
xchg
sub
mov
ja
ret
mov
rcrb
cvtdq2ps
fdivs
xchg
push
stos
and
or
fldenv
movsb
das
and
xor
aaa
or
sbb
shlb
adc
dec
sbb
out
or
push
mov
mov
lds
push
fwait
int3
orl
gs
imul
shrl
jae
mov
xor
out
lods
pop
add
xor
jle
push
insb
rolb
mov
mov
mov
mov
jle
icebp
out
int
lods
shrb
push
inc
bound
aaa
sbb
cmp
rcrl
xor
or
scas
call
mov
push
data16
mov
inc
gs
jmp
inc
call
sbb
lea
test
jl
stc
xor
int3
and
outsl
push
dec
fadds
pusha
ss
jle
push
jecxz
clc
sbb
jge
pop
gs
push
add
jbe
daa
ds
push
inc
inc
adc
xor
jecxz
jp
testb
into
and
fs
pusha
mov
fisttpl
loop
aas
sub
adc
jmp
pop
leave
mov
cld
sub
inc
or
inc
pop
in
sbb
cmp
jno
cs
mov
out
add
jp
adc
jno
jmp
xor
mov
inc
js
test
aas
sbb
add
test
sub
push
sub
fstpl
pop
fisubl
in
mov
jmp
mov
insb
fmul
inc
cld
mov
sub
pop
js
jae
pop
and
gs
pop
cld
xchg
mov
pop
daa
xchg
inc
jnp
dec
and
and
mov
push
rorb
in
dec
fwait
sbb
gs
dec
mov
test
in
or
mov
mov
ss
sbb
jge
xchg
aam
xchg
push
ds
xchg
cmp
shl
in
push
mov
rorb
sub
mov
inc
mov
aas
movsl
and
inc
sub
mov
data16
je
int3
fisubs
test
jle
lahf
ret
push
jmp
jle
aam
jno
cwtl
jl
mov
je
jo
arpl
imul
repz
mov
xchg
jo
cld
add
fwait
cli
jge
mov
dec
subl
cmp
fcomp
fwait
sbb
jmp
mov
xor
xchg
mov
sub
sub
test
add
push
les
lret
cmp
out
enter
adc
inc
xor
mov
xchg
dec
pop
add
aam
adc
sahf
and
arpl
adc
xor
cmp
iret
stc
movaps
mov
mov
mov
out
jne
push
dec
es
cmp
pop
adc
cmp
arpl
adcb
scas
adc
cltd
fucom
pop
out
outsl
jns
fwait
clc
cld
test
pop
rcr
mov
jae
mov
dec
xor
sbb
push
xchg
movsb
mov
jne
jmp
cmp
inc
dec
pop
xor
loop
sbb
int3
sub
xchg
or
roll
scas
ss
pop
jp
sub
xchg
jge
rorl
jl
repz
sbb
inc
dec
outsb
daa
and
inc
aaa
jbe
mov
mov
mov
or
xchg
cltd
jmp
mov
leave
fcompl
jg
push
outsl
cltd
enter
add
adc
stos
das
dec
std
pop
cwtl
roll
dec
mov
pop
inc
cmpsb
sbb
sti
in
cmp
test
dec
cmp
jp
xchg
jno
pop
cmp
and
movsl
pop
push
iret
mov
mov
gs
mov
push
in
push
push
inc
clc
negb
lea
push
sub
jo
dec
mov
ret
cmp
out
dec
push
bound
imul
xor
stos
stc
jecxz
mov
mov
jo
and
hlt
out
push
mov
or
ret
mov
shll
mov
pop
rol
dec
push
push
lock
push
sbb
out
push
pop
cwtl
dec
in
je
rcrb
pop
lods
mov
test
jno
sbb
lea
pop
pop
mov
or
shlb
dec
jo
inc
mov
jne
stos
and
ds
add
push
push
xor
std
xor
cmpsl
adc
cld
icebp
jno
push
mov
lock
mov
xor
inc
ss
sbb
pop
push
xchg
loop
movsb
dec
bound
mov
push
fisttpl
in
xor
je
dec
rcr
push
stos
and
xchg
in
aam
inc
adc
xor
jo
stos
je
push
lods
stos
add
pop
enter
adc
cli
inc
and
mov
mov
pop
stc
cmp
int
jb
lods
fnstsw
addl
push
xor
push
aad
jl
cmp
jmp
aas
cmp
stc
je
fsubl
cmp
mov
insb
or
mov
adc
adc
std
mov
mov
icebp
in
push
xchg
scas
inc
inc
scas
mov
cmpsb
andb
xor
icebp
out
ror
xor
jae
cmp
jo
pop
test
js
loop
xchg
xchg
lods
enter
je
lods
sahf
cs
sbb
mov
add
cltd
lret
iret
and
lock
jns
inc
dec
jp
push
dec
adc
mov
dec
jbe
push
xor
sub
mov
jns
cmp
and
nop
and
and
cmp
int3
ret
out
pop
shlb
jbe
add
xor
scas
idivb
mov
lret
cmpsl
nop
pop
sbb
adc
notb
mov
sbb
and
cmpsl
sub
xchg
push
dec
test
push
je
sub
xchg
sub
fldl
mov
mov
fimuls
push
gs
loope
movsb
mov
xchg
dec
sbb
ss
and
cmp
cmp
cmpsl
mov
cmpsl
imul
out
shrl
add
jnp
mov
lods
add
or
imul
pop
insb
mov
xchg
fisttps
sub
gs
fildl
andb
fwait
mov
mov
lret
mov
ljmp
clc
cmp
jnp
sbbb
mov
hlt
or
push
test
push
fcoml
xchg
pop
repz
mov
mov
add
push
lcall
push
push
xchg
jnp
call
loope
sbb
test
iret
lcall
movsb
inc
mov
cwtl
jecxz
adc
ficompl
or
lods
jp
std
xchg
stos
xor
outsb
popf
pop
js
daa
mov
mov
clc
enter
mov
sub
into
out
cmp
arpl
cmp
xor
pop
lock
fisubrl
pusha
xor
shlb
push
icebp
push
push
xchg
mov
push
rolb
in
pop
mov
jne
les
mov
dec
das
in
jg
cltd
add
cmp
dec
mov
imul
jns
je
aad
mov
add
mov
xor
push
or
sbb
lds
test
cmp
sub
lods
xor
std
jmp
lcall
lods
mov
test
inc
sbb
loopne
push
cs
sbb
push
add
adc
inc
sbb
add
fdivs
aam
int3
mov
and
test
adc
pop
in
adc
roll
cltd
mul
ja
in
xchg
mov
stos
nop
adc
sbb
aam
xchg
xchg
mov
or
mov
lods
lret
iret
cmp
out
fistps
out
scas
pop
pop
cmovg
jg
outsl
pop
pop
dec
movq
outsl
das
lahf
fisttps
out
fistps
out
scas
pop
pop
cmovg
jg
outsl
pop
pop
dec
movq
outsl
das
lahf
fisttpl
out
fistps
out
scas
push
pop
cmovle
jg
outsl
pop
push
dec
movd
outsl
das
lahf
fisttps
jmp
lahf
iret
movq
outsl
push
loopne
lock
jg
sbb
xchg
lock
xchg
shlb
jb
inc
enter
rolb
test
cwtl
loop
repz
dec
rcrl
sub
sbb
jb
inc
enter
test
mov
loop
repnz
dec
rcrb
sub
sbb
jb
inc
enter
test
mov
loop
sarl
sub
pop
mov
jp
sbb
cmpsl
ds
outsl
mov
pushf
xor
jo
sbb
divl
sub
lods
daa
xor
mov
fcomps
xorb
dec
sub
aam
pop
pop
dec
xor
daa
mov
and
dec
je
xchg
cmpsb
xchg
mov
movsl
repnz
clc
out
xchg
xchg
std
jb
sub
fadds
pop
adc
mov
adc
mov
or
repnz
or
daa
jnp
xor
or
cwtl
icebp
cmp
shl
xchg
xchg
lahf
jle
pop
subl
adc
sbb
cli
pop
repnz
adc
scas
call
push
fsubs
test
mov
loop
bnd
dec
rcrb
sub
jno
xchg
clc
sub
inc
mov
loop
xchg
or
and
dec
loope
aam
pop
call
ds
and
ja
jp
inc
cwtl
xchg
mov
aaa
mov
insl
out
pop
mov
ds
add
bnd
dec
rcrb
sub
sbb
jb
inc
enter
test
mov
loop
bnd
dec
rcrb
sub
sbb
push
mov
jp
lahf
fsubl
jmp
mov
es
popf
es
cmp
sbb
push
adc
sti
inc
adc
into
lds
jp
mov
loope
daa
jmp
xchg
jle
stos
add
test
xchg
push
cmp
je
dec
mov
mov
pop
jecxz
js
ror
xor
mov
loope
mov
dec
outsb
int3
lcall
push
insl
add
sbb
adc
sahf
xor
sub
fiadds
test
inc
adc
outsl
pextrw
imul
push
fstpl
outsb
les
into
das
dec
mov
sbb
insb
int
push
aas
mov
cld
iret
out
mov
stos
cmp
stos
add
lahf
cs
xchg
pop
sbb
xchg
addb
xor
pop
fisttpll
push
sub
fisttpll
enter
fdivrl
leave
popf
sub
sbb
out
xchg
ret
inc
sub
cmc
add
and
lahf
call
mov
imul
pop
and
outsb
loopne
or
pop
cwtl
loopne
daa
fsubrl
es
lret
dec
cmp
test
or
daa
icebp
inc
jns
int
fstpl
cmp
adc
dec
bound
mov
cmp
mov
addl
push
stos
pop
cwtl
jnp
icebp
out
adc
adc
jmp
cwtl
shlb
dec
test
std
out
jl
and
xchg
and
fdivrl
mov
pushl
stc
adc
mov
aaa
jbe
in
lods
bound
jecxz
lret
inc
cs
es
sub
and
xor
aad
cmp
fcmovne
xor
std
mov
js
test
pop
fs
clc
test
stos
aas
push
push
mov
jns
mov
lds
lock
ret
mov
or
cmp
std
cmpsl
mov
jecxz
mov
repnz
js
lret
and
dec
inc
ds
mov
inc
je
dec
popw
or
sbbb
or
pop
pushf
rcll
jns
andl
xchg
xor
mov
xchg
test
inc
dec
mov
sbb
xor
push
mov
imul
sub
mov
lahf
pop
or
sbb
incb
xor
dec
insb
icebp
fs
popf
clc
std
xor
sub
call
roll
xor
jno
jne
mov
lods
dec
xor
ljmp
lret
jg,pn
pop
pop
into
xchg
bound
repz
or
insb
shll
inc
push
push
inc
push
scas
stc
fs
xor
fimuls
xor
mov
mov
xchg
xchg
add
jae
ljmp
arpl
lret
rolb
lret
pop
jno
pop
fstl
push
sti
add
ss
aas
or
adc
rcrl
pop
dec
insb
scas
adc
out
rorl
mov
jecxz
mov
js
sbb
push
sub
cmp
mov
adc
dec
xchg
mov
clc
cmc
sbb
loop
xchg
dec
movsb
mov
xchg
lcall
dec
mov
push
ss
inc
mov
into
shrl
fwait
mov
pinsrw
pop
sub
sub
ret
cs
in
mov
scas
popf
and
pop
cmp
adc
addr16
test
in
lods
test
push
xchg
leave
sub
xchg
cmpsl
jmp
leave
scas
faddp
lahf
push
pusha
fwait
mov
in
sbb
jnp
mov
or
adc
adc
lock
dec
ljmp
fwait
xchg
jecxz
mul
or
sbb
and
xchg
les
jecxz
add
jp
adc
enter
cld
adc
ja
and
sbb
mov
pop
sub
hlt
fwait
icebp
jbe
add
icebp
hlt
insb
or
mov
sbb
mov
dec
mov
pop
mov
call
incb
xor
inc
sbb
mov
xchg
lods
dec
jle
mov
or
mov
and
and
cld
aaa
and
lcall
dec
test
mov
ret
inc
mov
dec
dec
stc
movsl
jg
pop
or
or
mov
jo
push
fcmovu
xlat
mov
xor
cmpl
xlat
addb
loope
sub
outsl
inc
lods
mov
jle
sbb
fildll
and
mov
xchg
push
ds
outsb
outsb
sub
and
xlat
adc
sets
aad
filds
mov
add
mov
push
inc
mov
ds
add
inc
mov
jo
sub
sbb
lret
add
movb
aad
mov
push
addl
movsb
shrb
xchg
xor
cs
jl
push
ret
mov
adc
xor
insl
ljmp
pop
add
sbb
xor
cmp
jp
es
movsb
xchg
jle
aas
and
aam
fdivs
cmp
int
mov
cmp
inc
lahf
popa
cs
aam
subb
xor
pop
pusha
mov
push
fs
cmpsb
dec
mov
and
stc
lcall
mov
mov
scas
push
fwait
mov
add
adc
xchg
imul
sbb
push
jle
adc
repnz
fsubrl
mov
rclb
push
or
and
mov
pop
jno
push
jnp
addr16
adc
lods
adc
and
mov
mov
les
in
std
in
int3
ja
fwait
sub
mov
mov
and
aas
lods
mov
nop
xchg
outsb
lret
mov
fwait
and
lahf
leave
out
je
xchg
add
in
movsb
xor
ljmp
inc
cmp
inc
rolb
int3
sub
ds
mov
or
fs
ret
imul
cli
mov
inc
test
out
loope
ret
je
adc
ss
push
gs
es
lds
outsb
lret
dec
xor
jne
rcll
pop
sub
jno
fidivl
sub
mov
popf
ja
in
cltd
jbe
cli
push
out
xacquire
add
mov
imul
fs
jno
and
add
xorl
pop
stc
test
mov
pop
subl
and
std
sbb
push
adc
cwtl
pop
fidivrl
jbe
int
fwait
adc
das
jecxz
xorl
pop
nop
jle
mov
into
mov
pop
ja
push
jns
aam
out
sbb
cmp
repnz
xor
adc
cmpl
shlb
lods
stc
out
pop
or
lcall
pop
pop
push
insl
idivl
mov
pusha
inc
or
fwait
les
insb
push
cs
add
and
xor
arpl
sbb
jb
mov
mov
lock
push
inc
dec
jle
cmpsb
bound
les
add
icebp
filds
xor
lret
xchg
stc
cld
cltd
jge
int3
push
hlt
cltd
aad
data16
dec
inc
call
inc
adc
mov
sbb
xorb
iret
dec
insb
enter
pop
sbb
dec
sub
in
sbb
inc
decl
cmp
dec
arpl
mov
testb
lock
or
mov
jecxz
xor
leave
mov
xor
ljmp
aaa
sbb
sti
pop
mov
add
and
adc
or
inc
inc
imul
xchg
pushf
bound
test
repnz
inc
mov
jmp
xorl
in
dec
fistl
outsb
cmp
je
or
xchg
inc
fsts
pop
shrb
lods
fwait
es
outsl
shrl
mov
aam
popf
sbb
data16
add
mov
outsl
popa
jns
wrmsr
sarb
mov
mov
mov
dec
dec
stc
fadds
fstpt
sbb
cmp
je
sbb
nop
xchg
mov
cmpsb
and
addl
ret
into
loope
aad
flds
aad
nop
rcrl
inc
std
lock
push
pop
xchg
pushf
adc
pop
mov
mov
jp
fidivrl
jl
and
jnp
std
stos
push
xor
push
sub
mov
subl
and
pop
cltd
mov
sahf
arpl
sbbl
nop
out
inc
sahf
sbb
lahf
scas
mov
lds
clc
fwait
popf
push
lods
js
icebp
imul
shll
stos
stc
sti
icebp
aaa
cli
jecxz
daa
iret
cli
pop
lret
fs
aam
mov
mov
jns
and
dec
mov
movb
xchg
imul
outsl
cli
sbbb
fwait
pop
sub
movsl
test
xor
xor
lahf
mov
idiv
sbb
mov
adc
stos
mov
and
cld
js
pop
inc
add
pop
dec
mov
dec
adc
push
and
fwait
xchg
add
out
test
cmpsl
cli
and
cmp
adc
mov
sbb
rorl
mov
addr16
lods
out
aam
leave
in
or
ja
mov
adc
cwtl
lcall
and
or
cmc
out
shlb
das
push
mov
mull
shll
loop
pop
or
loope
or
inc
imul
inc
sbb
xlat
aam
aad
and
mov
pop
jo,pt
into
ror
testl
cmpb
sub
xor
pop
mov
std
dec
mov
ja
jp
bound
das
mov
sti
or
or
daa
sbbl
cmpsl
mov
add
push
dec
sub
popa
push
inc
pop
lahf
cmp
movsl
sahf
jo
and
xor
sbb
or
jg
add
pop
test
in
xchg
fcoms
mov
push
imul
mov
lods
sub
pop
cmp
data16
sbbl
test
stc
mov
clc
cwtl
adc
subb
mov
mov
or
das
sub
sti
lods
aad
aam
and
cmp
pop
sub
mov
idivl
dec
cli
add
into
je
test
xor
inc
xchg
mov
add
sbb
sbb
push
adcl
add
int3
loopne
cwtl
testl
dec
xchg
push
fdivrl
sbb
dec
jge
lret
inc
ret
mov
inc
mov
orb
pop
add
test
pusha
add
stc
fildl
jne
mov
jecxz
push
fdivs
mov
std
test
adc
inc
push
test
sbb
mov
jae
cwtl
outsl
pop
dec
dec
push
pop
into
sarl
imul
mov
lods
add
and
adc
scas
movb
xor
inc
adc
inc
movsl
addl
inc
xchg
xor
and
fldenv
adc
push
lods
rorl
int
sarb
or
mov
jbe
icebp
dec
xchg
sbb
xor
or
invd
jae
and
jl
aas
sti
push
pop
gs
hlt
insb
jns
daa
lret
or
in
loopne
pop
or
pop
jp
mov
aaa
mulb
bound
jae
xor
pushl
dec
in
inc
stos
test
stc
adc
xchg
inc
push
mov
sbb
xchg
out
in
lahf
xor
shll
aaa
loopne
popa
lods
or
cmp
or
lret
mov
lahf
scas
aaa
sbb
icebp
lds
lcall
popf
inc
pop
pop
mov
stc
iret
add
jge
pop
jle
sbb
inc
cmpsb
popa
out
push
add
jg
iret
and
or
dec
cmpl
adc
pop
add
xchg
jmp
pop
push
cmp
std
test
pop
cmp
xchg
sub
cmp
mov
enter
jnp
stc
scas
dec
push
in
scas
mov
js
mov
imul
and
push
mov
orl
ss
pop
stos
js
sbb
mov
cli
lea
pop
call
in
sub
cmp
pop
gs
jne
test
gs
in
sbb
popf
jge
int3
aam
jge
ret
cli
aas
cmp
insb
cmp
mov
je
sub
push
imul
jp
cmp
outsl
in
adc
stc
out
int
repnz
dec
xchg
and
xor
lret
xor
pop
adc
add
dec
push
pop
mov
sbb
and
mov
jnp
xor
out
sarb
clc
jnp
pushf
pop
sub
insl
orl
int3
inc
loope
jmp
mov
adc
jbe
jbe
in
cmp
dec
mov
jp
push
sbb
jg
adc
mov
lret
dec
shl
fwait
rorb
mov
xor
outsb
shrl
xchg
stos
mov
scas
inc
js
sbb
out
pop
test
mov
jmp
ljmp
cmp
push
jmp
sbb
outsl
pusha
fucomi
int3
insb
in
push
xchg
cmpsb
scas
add
rcll
mov
sub
or
add
or
xorb
push
popf
in
call
mov
sub
or
je
jbe
call
mov
stc
out
shl
jle
sub
popf
nop
inc
es
imul
jnp
rcl
or
pop
pop
orl
cs
or
dec
sbb
insl
pcmpgtb
data16
aaa
out
xor
jle
lcall
daa
push
cli
push
aas
mov
mov
out
and
cmp
pop
cmp
jmp
fadds
add
xor
add
out
aam
shl
inc
dec
or
into
pop
popf
out
sarl
or
roll
and
arpl
ljmp
mov
xchg
les
cmp
xor
cmp
or
jmp
into
cmp
sbb
mov
xchg
adc
test
xchg
mov
adc
xchg
sub
movsb
cwtl
inc
mov
add
shlb
test
hlt
icebp
sbb
int3
movsb
test
cmp
sbb
loope
or
adc
pop
mov
pusha
test
xor
lods
xchg
ja
inc
rorl
fs
imul
fwait
mov
and
push
sub
jbe
cmp
add
gs
ret
adc
sahf
arpl
xor
mov
lea
pop
adc
mov
jecxz
pop
cli
scas
inc
lret
js
xchg
fdivr
mov
dec
leave
loopne
xchg
xchg
test
int3
jmp
cwtl
loop
push
sbb
mov
or
mov
pushl
test
jb
jb
mov
ja
inc
push
or
int
out
outsl
xchg
push
lds
loope
lahf
and
mov
ret
mov
fs
push
ja
ja
mov
mov
add
outsl
movsb
dec
addl
outsb
xor
imulb
icebp
cwtl
add
pop
mov
insl
aam
mov
vmwrite
loope
test
movsl
out
sti
stos
add
std
cmpsl
scas
repz
rclb
fwait
mov
lcall
mov
push
and
push
sbb
mov
xor
push
iret
push
cwtl
adc
movsb
xchg
call
loopne
or
jp
lods
loopne
jmp
add
cmc
xchg
mov
outsl
xor
or
sub
movsb
outsb
cli
enter
xchg
pop
pop
loopne
ficompl
xor
jbe
mov
adc
js
jmp
out
dec
pop
mov
movsb
neg
insl
out
in
or
rcrb
xlat
mov
add
jae
enter
int
in
xchg
xchg
jb
iret
iret
mov
lock
cmp
lds
arpl
pop
das
adc
mov
mov
xchg
add
or
clc
and
pop
lret
jae
iret
dec
stos
sub
xchg
push
mov
push
jb
xchg
cwtl
mov
mov
ljmp
aaa
fmuls
push
ljmp
incb
scas
nop
iret
repz
in
in
or
ret
jl
sbb
mov
inc
stos
sbb
or
ret
jmp
or
xchg
lock
add
in
lret
cmp
lods
fwait
xor
imul
mov
mov
pop
repz
xor
mov
push
xabort
mov
push
adc
lods
and
mov
icebp
inc
mov
jns
orb
inc
movsl
and
ljmp
inc
icebp
out
sti
xor
mov
lret
pop
cmpsb
in
mov
adcb
ror
sbb
jnp
mov
push
mov
das
es
sub
jae
push
stos
in
lds
aam
pop
pusha
xlat
sbb
jo
mov
out
dec
out
mulb
loopne
or
mov
xor
jae
cmc
pop
popa
rcrl
add
lock
loopne
lock
sbb
fwait
xor
inc
sbb
and
jecxz
ja
dec
loope
mull
mov
and
or
xor
call
mov
fadd
sbb
idivb
mov
pop
add
adc
popf
dec
sub
lret
repnz
loop
mov
leave
jb
inc
aam
jns
lcall
mov
ja
cmc
ss
sbb
adc
fsubrl
filds
hlt
and
sbb
lods
iret
jo
mov
movsl
int3
push
ret
add
push
push
mov
mov
dec
xchg
bound
hlt
xchg
ret
jp
lahf
mov
outsl
jp
pop
mov
cmp
cmpxchg
aaa
xor
jp
push
dec
jle
sub
out
rcr
loop
out
sbb
scas
xchg
mov
mov
xchg
in
ret
in
lret
int3
jae
xchg
xor
lds
mov
mov
fsubr
xlat
jno,pt
mov
or
pusha
rcrl
mov
int3
dec
cmpsl
dec
and
cmp
mov
out
xchg
jae
les
sbb
roll
sub
cs
adc
repz
mov
popa
sarl
pop
sbb
loop
xor
push
mull
xlat
fwait
push
sub
aad
xchg
jmp
mov
jae
int
mov
xchg
andl
mov
pop
sub
mov
shrb
sarb
lret
icebp
mov
fistpll
mov
and
cli
incl
movsl
scas
mov
loop
mov
mov
mov
arpl
call
jno
push
dec
push
ret
xor
lret
daa
mov
icebp
mov
inc
lret
jmp
add
fwait
movsl
sub
ret
aad
mov
fcompp
imul
push
cmpl
push
cmp
push
mov
out
pop
push
daa
fisubrl
ljmp
xor
outsb
mov
sti
sbb
sub
mov
push
leave
int
mov
mov
jecxz
gs
popf
ljmp
daa
cltd
push
mov
mov
sub
sarl
fcomps
xor
adc
mov
into
aas
jno
fwait
jne
mov
ljmp
mov
pop
sub
xor
mov
nop
mov
cmp
ret
repnz
stos
inc
jb
cmc
mov
aad
push
xor
mov
push
addb
and
les
in
cltd
sub
movb
call
lahf
enter
popl
es
lahf
scas
mov
sub
popf
lods
push
test
gs
pop
cs
xor
or
push
iret
add
das
xchg
sub
ljmp
imul
bound
xchg
cwtl
adc
dec
jns
scas
sahf
add
ja
fildll
enter
add
or
fidivrs
push
in
xchg
ss
jae
dec
loopne
xchg
add
scas
mov
dec
inc
stos
push
cmp
xchg
sub
prefetch
dec
inc
xchg
sahf
fidivl
dec
ljmp
inc
cmp
les
scas
mul
mov
cmp
sub
mov
dec
mov
fldt
xchg
ss
pop
dec
loop
in
fiaddl
ljmp
inc
inc
daa
jg
jno
aam
dec
dec
push
fsubr
xor
lret
xchg
adc
popf
test
mov
mov
inc
add
or
and
mov
ss
mov
das
mov
rorb
inc
sbb
and
push
pop
test
lahf
aam
mov
fistl
mov
clc
mov
xchg
lea
lods
pop
sub
out
adc
mov
in
or
xchg
sarb
in
xor
ret
mov
fistl
das
repz
les
push
dec
jne
xchg
shll
popa
ret
testb
arpl
add
jp
sarl
loopne
sbb
in
lock
out
cmp
sub
movsl
push
es
iret
ljmp
xor
movsl
fmuls
mov
loopne
dec
mov
adc
push
push
aas
lods
lret
mov
aaa
xchg
data16
lods
jae
pop
xchg
cwtl
mov
imulb
popf
sbb
and
dec
lahf
push
sti
fwait
or
gs
pop
pusha
xor
les
sub
sub
xchg
lods
mov
xchg
ret
jno
jb
pop
xchg
test
mov
clc
mov
xchg
lret
lret
out
push
leave
push
clc
inc
enter
test
mov
loop
bnd
dec
rcrb
sub
sbb
jb
inc
enter
test
mov
loop
bnd
dec
rcrb
sub
sbb
bnd
dec
push
fsubs
mov
js
dec
rcrb
sub
sbb
jb
inc
enter
test
mov
loop
repnz
shrb
shlb
loop
es
pop
adc
pop
add
adc
mov
xchg
in
test
mov
imul
add
sbb
or
divb
push
test
mov
cmpsl
jne
inc
mov
xor
pop
cld
push
mov
mov
mov
mov
insb
dec
adc
push
xor
shr
das
dec
cmc
popf
pop
mov
pop
adc
or
xchg
nop
sbbl
dec
pop
mov
in
adc
adc
and
rcll
aam
dec
icebp
xor
and
es
into
cmp
and
jmp
aad
cmc
jl
mov
jne
or
enter
fsubl
lcall
fdivrl
xchg
int
inc
cmp
or
sbb
hlt
out
mov
push
int3
test
cmpsb
lods
in
les
cmc
insb
cwtl
adc
aas
xorl
daa
mov
and
popf
jl
mov
inc
mov
xchg
pop
cvttps2pi
gs
adc
arpl
test
int
fnstenv
packuswb
and
pop
add
push
cmp
and
loope
in
rcrb
jmp
cmp
dec
sbb
jo
dec
sub
shr
repz
lock
test
adc
inc
dec
inc
adc
cld
mov
movsl
fcoml
lods
in
aad
lds
and
cmp
sub
sbb
or
cld
mov
movsl
fcoml
lods
in
aad
lds
repnz
in
add
or
jne
int
repz
das
add
and
jmp
jae
and
icebp
sarl
mov
jle
or
and
sbb
fsub
ret
mov
dec
popa
push
or
jae
movsl
imul
sbb
aaa
and
es
rolb
push
fwait
out
or
lret
sub
out
pop
int
arpl
inc
adc
movsb
mov
push
jnp
adc
pop
xor
sahf
cmpsb
or
cmp
ja
andl
in
lds
outsl
lods
pop
jg
mov
cmp
loopne
add
fildl
xor
cs
push
cmpsl
cmp
mov
mov
mov
sbb
cmpsb
mov
cld
jmp
cmpsl
cmp
fwait
xchg
push
xchg
mov
sbb
sub
popf
jp
jge
jle
test
movb
aaa
jmp
cmc
fnstsw
into
or
cmp
mov
lods
mov
inc
fsts
cmp
xchg
arpl
push
gs
jb
or
push
push
add
and
arpl
psubd
push
in
loopne
imul
fsubl
mov
pop
cmpsl
testb
xchg
or
stc
adc
test
inc
xor
mov
ja
bound
popl
iret
sub
cmpsl
fldl
mov
jne
imul
pop
or
jmp
es
hlt
or
push
dec
jno
ret
pop
xchg
les
ljmp
in
jp
mov
fwait
out
mov
aad
stos
dec
sbb
fstl
mov
adc
icebp
cli
or
arpl
es
lret
orb
frstor
addr16
mov
imul
stos
mov
cmp
xor
cmp
scas
lcall
jo
lods
jge
inc
push
inc
and
rorb
jne
pop
jne
ss
call
imul
movsl
push
push
push
dec
loop
arpl
shl
outsl
inc
inc
sbbl
rorl
lret
and
in
xor
lds
xchg
cwtl
add
xchg
jns
aas
data16
fadds
sbb
pushf
ret
lret
pop
scas
int3
jle
mov
fsubl
or
popf
and
outsb
mov
sbb
clc
insb
xchg
rcrl
pop
inc
ret
nop
jne
lcall
gs
lds
lret
xor
jbe
push
sbb
inc
roll
sbb
flds
idivb
insb
ret
divb
push
pop
add
jne
mov
es
and
jne
cmp
mov
inc
dec
daa
sbb
cwtl
jne
jnp
ret
pop
and
adc
lcall
pop
jmp
mov
insl
fs
jp
jmp
or
dec
pop
jle
jb
mov
inc
outsb
shr
out
push
clc
xchg
ss
clc
les
bound
pop
add
xchg
clc
xchg
mov
mov
dec
mov
les
xchg
mov
sbb
out
inc
ret
mov
and
jo
mov
push
std
pop
sub
ss
or
test
ss
add
in
xlat
push
push
xchg
dec
scas
jae
jecxz
xor
cltd
in
pushf
push
mov
inc
orb
bound
pop
out
data16
jg
xchg
and
inc
and
mov
test
add
mov
inc
roll
dec
sahf
sbbb
cld
outsl
lahf
mov
ljmp
and
popa
popf
movb
clc
in
mov
jne
mov
pop
int3
outsl
insb
scas
inc
mov
aad
int3
scas
jl
and
xchg
pusha
push
sbb
xchg
lods
fcomps
jp
lret
lods
adc
out
inc
inc
sbb
shufps
mov
push
movsl
mov
lahf
gs
mov
mov
cmc
loope
or
xchg
ljmp
lods
ffreep
stos
lret
loopne
repnz
cmp
lea
inc
dec
and
jae
pop
lret
pop
out
jl
stos
add
fstpt
sub
lcall
dec
push
push
pop
xor
mov
test
popa
sub
faddl
leave
xor
sub
adc
inc
fimull
shll
cwtl
push
sub
iret
js
popf
adc
cmc
jbe
inc
roll
dec
enter
fiaddl
pop
es
nop
adc
dec
mov
xor
sbb
jbe
mov
in
aad
shlb
fdivrl
in
cli
push
test
xchg
mov
lock
jb
aas
mov
sbb
mov
lock
cld
addl
pop
xor
mov
in
lea
pop
mov
das
scas
ret
xchg
adc
mov
pop
mov
stos
xchg
repz
imul
jmp
jmp
fwait
jge
fisttpll
ja
fisubrl
daa
xor
sub
fwait
or
adc
in
jmp
push
daa
sahf
pop
fwait
push
and
cli
repz
jge
inc
stc
fnsave
adc
jecxz
inc
xchg
loop
fidivrs
add
sub
imul
test
daa
hlt
sbb
movsl
cmc
fwait
jo
jge
nop
das
cmp
addl
sub
rcrl
mov
ljmp
xchg
cmp
sbb
mov
testb
shl
jecxz
pop
mov
or
ljmp
repz
cmp
jg,pn
mov
iret
jp
and
and
dec
outsb
jp
adc
inc
lcall
fwait
sbb
loop
lock
jl
jne
jne
loop
fnstenv
mov
lea
xchg
punpckhdq
or
clc
mov
xorl
xlat
or
push
sbb
sbb
gs
push
int3
jge
cwtl
xchg
pusha
pop
test
push
jo
arpl
mov
inc
test
arpl
in
inc
or
sub
stos
or
xchg
loop
repz
xchg
std
lcall
daa
mov
mov
in
add
scas
stos
scas
lahf
ret
int3
xchg
xchg
pushf
mov
mov
push
push
fistps
mov
cmp
and
add
lods
or
sub
push
popf
aaa
push
mov
mov
leave
insb
dec
icebp
pop
mov
in
idivb
mov
push
lock
mov
test
cmp
adc
incb
in
icebp
mov
inc
cmp
adc
pop
lods
cltd
adc
aas
loopne
lods
adc
out
sub
mov
pop
jmp
add
jecxz
add
stos
pop
and
loope
cld
xchg
into
xchg
add
int3
js
jb
fstl
dec
imul
clc
mov
mov
jns
pop
cmpsb
add
lock
outsl
adc
xlat
mov
push
jge
rcrb
cmp
jae
xchg
enter
sub
stos
mov
test
push
cmp
mov
cmpsl
sub
dec
out
les
mov
iret
xchg
out
lahf
cmp
jbe
jno
add
inc
iret
mov
out
lods
inc
mov
mov
leave
mov
xor
test
cmpl
push
scas
xchg
push
inc
cmp
xlat
add
mov
mov
and
addr16
sub
mov
jg
and
cmc
push
or
pop
or
and
pushf
lds
popf
es
pop
out
jae
sbb
cmp
xor
popf
rorb
pop
es
inc
pop
mov
jb
cmp
lcall
leave
mov
pop
das
push
int3
aaa
mov
mov
adc
iret
xchg
inc
jo
cltd
xchg
aam
add
adc
sarl
arpl
and
mov
add
sub
or
and
je
jge
dec
test
pop
ss
push
add
or
xchg
loopne
aam
sbb
out
and
ja
adc
fstl
daa
shl
aas
jb
out
and
jbe
add
loopne
in
sub
sbb
jo
scas
mov
jns
lea
mov
dec
mov
mov
in
xor
movsl
lret
lods
dec
xchg
sbb
fwait
mov
movsl
int
xchg
cmp
inc
lret
arpl
pop
call
scas
xlat
ja
push
stos
fcoms
cli
bound
pop
jne
repz
sub
idivl
paddb
mov
fdivrl
cwtl
mov
repz
out
aas
aas
or
inc
jle
xor
add
xchg
cld
mov
dec
lcall
or
pop
sbb
and
fstpt
jbe
inc
je
mov
loopne
xchg
subb
cmp
and
cltd
out
in
jno
in
arpl
add
xchg
pushf
into
std
push
pop
or
or
pop
repnz
mov
xchg
pop
ja
cmp
out
int
jnp
jecxz
movsb
mov
xchg
jns
clc
mov
scas
pop
mov
pcmpgtb
inc
insl
daa
fisttpll
shlb
mov
and
div
jp
adc
inc
xchg
add
test
repz
add
stc
sti
mov
movsl
xor
xchg
int3
xchg
nop
cmpsl
mov
inc
fnstcw
pop
xor
mov
mov
jno
mov
adc
iret
sbbl
lret
fildll
inc
mov
jl
movsl
pop
int3
mov
pusha
fisttpl
pop
movsl
into
lahf
iret
shrb
adc
xchg
sbb
and
neg
push
push
dec
cmpsb
int
xor
push
ja
lds
push
push
lock
aam
xlat
enter
movsb
int
imul
cmp
sbb
xor
xor
cmp
xlat
sub
push
or
ds
ret
inc
xor
and
fdiv
arpl
sub
nop
pop
cmp
inc
addr16
cmpsb
add
mov
mov
lds
mov
call
gs
lea
xchg
xchg
xor
adcl
sbb
ficoml
mov
or
adc
decl
gs
popf
lahf
nop
cmp
outsb
nop
sub
xor
mov
mov
mov
outsl
lods
cmpsb
xchg
cld
aas
dec
xchg
adc
mov
or
mov
in
fmul
leave
iret
out
or
pop
addr16
xor
pop
mov
mov
test
cmc
test
ss
repnz
adc
mov
testl
sub
shrl
shlb
inc
inc
xor
call
mov
mov
mov
in
sbb
adcb
das
leave
or
sbb
gs
lcall
cmpsb
dec
scas
pop
bound
aaa
rol
imul
xchg
mov
insl
xchg
outsb
rcrl
pop
sub
fwait
mov
or
fimull
mov
or
mov
scas
out
jne
loopne
cs
test
outsb
mov
imul
jmp
jle
outsl
mov
in
pop
ret
xor
jl
cmp
mov
xor
mov
and
mov
sub
shlb
addl
xor
cld
lret
and
xchg
stos
add
sub
jae
push
adc
jbe
imul
lret
das
rclb
lock
push
sti
cmp
add
inc
xchg
ss
int3
outsl
cld
outsb
std
cmp
ficoml
xor
xchg
fsubrs
nop
jo
dec
cmp
and
repnz
jecxz
sahf
xchg
rcll
pop
out
fdivs
and
sbb
orb
sub
fstpl
lea
push
mov
sbb
cmp
sbb
nop
and
cmpsb
cwtl
dec
jg
jnp
cmpsl
mov
frstor
sbb
sub
add
shll
rclb
jno
pop
iret
pop
lds
testl
cmp
test
jo
add
push
push
push
insl
add
repnz
orl
dec
outsb
adc
test
les
les
mov
test
xor
mov
sub
add
xlat
xor
push
push
shl
out
xlat
push
ffreep
mov
jge
mov
lcall
or
cmp
xchg
fdivrs
ss
hlt
mov
and
js
xor
fisttpl
fdivrl
popf
lock
fsubl
cli
ss
fidivrl
jne
inc
outsl
xor
pushl
cwtl
ret
jmp
cwtl
mov
xchg
add
test
push
jl
outsl
lcall
sbb
rorl
mov
rcrb
jno
cmp
push
sbb
cwtl
stc
aad
test
xchg
daa
rcll
adc
pop
lahf
in
pop
and
cmp
sub
hlt
mov
nop
pusha
je
inc
push
pop
movsl
cmpsl
inc
add
mov
jb
std
and
sbb
xchg
movsb
ds
xchg
iret
add
push
xchg
popf
cltd
cld
out
cmp
pop
fmull
nop
inc
test
push
popa
jbe
pop
and
daa
ror
sub
push
or
mov
jns
xor
pop
mov
int3
movsl
lret
je
sbb
out
fldl
int3
add
lock
cltd
orl
xchg
adc
sub
lea
ret
mov
sbb
mov
xchg
adcl
mov
popf
dec
mov
addr16
dec
xchg
jae
and
sub
or
cli
cmc
mov
inc
mov
sub
xor
js
les
or
cmp
ret
push
cli
xor
mov
adc
sub
or
push
sbb
cmpsb
cmp
outsb
dec
xchg
nop
or
xchg
sbb
std
pusha
mov
int3
pop
or
dec
jmp
sub
pop
mov
cmc
xchg
fs
cmpsl
aas
mov
mov
cmp
out
jne
or
adc
fistpll
pop
jae
imul
xor
ret
imul
mov
jecxz
mov
loop
out
or
dec
jae
add
repnz
es
sub
test
call
cmp
pushf
stc
mov
xorb
fisubrs
iret
mov
rorl
mov
wrmsr
loope
movsl
cmpsl
jmp
sbb
or
nop
xor
mov
das
ljmp
ljmp
push
xor
movsb
roll
sbb
mov
loope
add
js
mov
sbb
lock
aad
stos
or
mov
icebp
cwtl
mov
jo
loop
shl
sub
push
aad
dec
int
leave
mov
or
incb
xchg
mov
pop
js
mov
lahf
out
or
call
dec
aaa
jbe
push
sub
mov
fsubl
xor
sbb
sbb
mov
xlat
negb
dec
or
stos
and
inc
repnz
mov
daa
jg
iret
icebp
bound
fs
fiadds
sti
cli
rcll
pop
rcll
jbe
xor
mov
adc
push
cli
mov
jecxz
test
pop
daa
je
adc
pop
dec
xor
push
lahf
add
adc
into
xor
and
push
push
jbe
mov
cmp
out
xchg
dec
stc
jb
push
and
sti
cwtl
ja
sbb
add
mov
dec
mov
add
adc
int
pop
stc
push
mov
mov
aas
les
jg
ret
xchg
and
clc
cmp
mov
xchg
cmp
sbb
xor
std
repnz
sub
jl
aas
jne
mov
cmp
push
hlt
adc
fwait
hlt
jge
call
repnz
addr16
pop
jle
pop
pop
outsb
std
pop
dec
push
push
cmp
out
xchg
es
sub
sbb
xchg
mov
xor
hlt
push
imul
aaa
dec
test
cli
and
gs
and
and
mov
add
mull
ficoml
fmull
orl
fmul
mov
jg
push
in
mov
push
shlb
xchg
mov
leave
shlb
and
int
cmp
aaa
ja
bound
psubb
data16
cmp
mov
xchg
bound
loop
sub
iret
popa
push
in
sub
pop
add
pop
push
push
cmp
and
je
push
movsl
cmp
xchg
push
adc
mov
lock
or
loopne
inc
xchg
lods
popa
test
loopne
jbe
push
adc
dec
and
stc
fistl
xlat
xlat
shlb
and
xchg
gs
dec
std
je
out
and
pop
push
mov
xor
pop
hlt
dec
and
hlt
scas
dec
pop
fmull
test
dec
adc
in
shr
mov
dec
sub
stos
imulb
sbb
arpl
pop
push
shr
pop
cmp
insb
cmp
stos
xchg
push
jnp
mov
sahf
inc
mov
adc
hlt
inc
pushf
xchg
je
iret
xor
dec
insb
dec
dec
xlat
push
std
xchg
out
pop
mov
test
mov
js
push
jno
and
mov
and
cld
repnz
icebp
cmpsb
lret
and
mov
neg
adc
cwtl
sub
int3
inc
ret
into
sbb
sub
loopne
nop
add
sbb
inc
lahf
adc
adc
lock
aad
push
add
pop
daa
sti
imul
and
js
mov
dec
js
jp
xor
xor
mov
stc
xchg
push
mov
adc
adcl
add
cmp
mov
sbb
outsb
int3
outsb
sub
lret
test
ss
or
movsl
mov
push
add
loop
into
cwtl
adc
push
ja
cwtl
rolb
stc
mov
mov
dec
jge
stc
jmp
mov
imul
shlb
cwtl
scas
add
nop
cmp
clc
out
jmp
rcl
lret
or
push
cld
int
int3
ja
cs
mov
cmp
adc
sub
leave
repz
insl
scas
sub
in
add
lds
pop
pop
mov
mov
jmp
sahf
ljmp
pop
dec
mov
pop
sbb
das
mov
ret
fiaddl
mov
mov
mov
sbb
mov
and
mov
cwtl
fsubrl
gs
inc
es
pop
mov
cmp
test
xchg
and
mov
loopne
je
jle
ret
mov
pop
addr16
lock
add
cld
adc
sahf
mov
lock
rolb
std
insl
add
movsb
sbbb
cmp
lahf
div
mov
cld
je
xchg
lods
adc
xchg
jmp
dec
loope
gs
ljmp
adc
pushf
mov
fists
and
lret
test
sbb
adc
cmp
mov
fsubrl
out
inc
outsb
fucomi
jmp
cs
mov
ret
mov
xchg
mov
push
test
inc
in
push
std
fisubl
rolb
jnp
idiv
pushf
scas
cmp
mov
or
and
adc
xor
sbb
push
mov
stc
and
xor
loop
dec
sub
dec
mov
mov
je
lret
mov
imul
fidivs
aaa
leave
jne
sub
dec
cmp
jo
mov
sub
mov
jge
push
dec
imul
sbb
xlat
in
arpl
call
sbb
lcall
jne
push
aaa
daa
xchg
add
mov
pop
mov
xor
xor
add
fldcw
dec
jo
insb
test
jle
mov
dec
aaa
push
mov
push
and
es
push
stos
mov
and
dec
lret
xor
dec
mov
movsl
push
add
enter
and
xor
sahf
jne
sub
sbb
call
repz
xor
add
int
out
testl
test
jge
fstps
xor
push
xlat
dec
mov
mov
inc
inc
cmpsl
out
dec
mov
test
cli
push
hlt
movsb
jns
or
lret
lret
cmp
lock
add
lds
xorb
mov
je
out
inc
add
lea
negb
mov
mov
add
mov
pop
andl
lret
das
divb
stc
mov
cmp
lods
sub
xorl
inc
sbb
adc
mov
and
in
jge
push
push
ja
mul
iret
sbbb
shl
jno
adc
inc
push
subl
out
and
cmc
aas
xor
sub
jge
enter
push
pusha
sti
jle
pop
mov
mov
push
orb
jne
inc
jge
push
insb
xchg
iret
repz
das
mov
xorb
sbbl
popf
adc
sarl
add
sub
lods
pop
aam
daa
push
into
inc
cmp
adc
in
movsb
pop
popa
push
shll
push
dec
lods
dec
xchg
rcll
mov
xor
mov
lcall
mov
cld
xchg
add
jmp
add
mov
jnp
xchg
pop
push
push
push
inc
mov
mov
or
sub
mov
lret
jp
sbb
pop
dec
mov
ja
arpl
xchg
and
cmp
sub
sbb
or
cld
mov
movsl
fcoml
lods
in
aad
lds
and
cmp
sub
sbb
or
cld
mov
movsl
fcoml
lods
in
aad
lds
insl
pop
insl
dec
add
sbb
or
cld
insl
in
movsl
fcoms
test
pushf
cmc
mov
and
cmp
sub
pushf
aad
inc
add
pcmpeqd
and
arpl
jae
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fisubrl
ljmp
stos
stos
ds
inc
pop
jp
push
sbb
dec
sub
mov
cli
mov
lcall
ds
cs
jg
push
push
jg
or
dec
sub
cli
mov
lcall
ds
imul
pop
push
jle
and
xchg
scas
mov
jne
into
gs
fldcw
and
cli
jg
vpmaxsw
fisubl
nop
iret
decl
push
xor
mov
test
push
push
xorb
xchg
sub
sub
push
popa
mov
dec
dec
jl
xchg
shl
fnsave
scas
fistpll
fwait
ret
mov
dec
cmpsb
call
out
sahf
or
sub
push
xor
push
adc
gs
into
stos
push
movsl
pop
pop
dec
test
push
dec
push
sbb
push
mov
inc
subl
push
aad
add
xor
and
pop
clc
dec
imul
xchg
or
outsb
pop
pop
cmp
loope
scas
lret
mov
lcall
ds
cs
push
jp
push
sbb
pop
cmp
lret
mov
mov
mov
cltd
fildll
push
jno
push
or
dec
xor
dec
loope
in
cmpsb
ljmp
iret
fsubrp
mov
insb
aas
inc
cmp
imul
jg
pushf
push
pop
push
jle
fwait
sbbb
test
mov
mov
cs
push
jp
push
sbb
pop
cmp
mov
cli
mov
lcall
ds
cs
push
jp
push
sbb
pop
cmp
mov
xchg
fsubrl
lods
in
cmp
dec
ja
popf
or
jg
cmp
sub
or
push
mov
xchg
mov
adc
in
jnp
or
fdiv
in
aad
cltd
cmp
dec
xchg
repnz
cld
inc
jo
mov
ss
adc
bsr
adc
xor
sbb
sbb
xchg
jle
mov
dec
mov
mov
movsl
add
repz
test
and
xor
popa
cmpsb
pop
sbb
pop
inc
sbb
test
outsl
ja
mov
cld
mov
xchg
cmc
ret
int
iret
pop
dec
mov
dec
gs
jne
and
push
xlat
out
ja
data16
mov
xor
cltd
jne
in
mov
jbe
sti
xor
loopne
pop
mulb
iret
loope
popl
dec
xchg
jmp
or
test
mov
push
inc
bound
test
les
and
or
mov
loopne
adc
gs
repz
pinsrw
in
mov
pop
push
jecxz
push
xor
inc
or
lcall
loop
es
inc
cmp
dec
add
in
sbb
lds
sbb
ja
pushf
inc
daa
lods
out
cmp
ftst
mov
fisttpll
lea
enter
stc
push
push
inc
clc
cmp
push
jae
mov
push
mulb
lcall
adc
daa
subb
mov
or
mov
das
push
cmpb
arpl
push
mov
icebp
jns
sub
lcall
add
jae
iret
add
lock
sub
push
loop
movsl
cmc
or
dec
imul
cmc
mov
pop
pop
pop
sbb
jnp
dec
push
push
fs
push
cmp
rorl
movsl
movb
inc
jno
add
gs
push
ljmp
jecxz
sub
adc
adc
jg
dec
or
popa
adc
push
mov
adc
incb
push
jmp
scas
int
jmp
pop
push
mov
fs
andb
lock
ljmp
inc
xchg
sub
gs
out
int3
xlat
inc
je
inc
lods
xchg
xlat
sub
adc
cmp
push
sbb
push
dec
stc
clc
and
mov
push
cmp
mov
pop
mov
dec
inc
out
mov
and
imul
mov
enter
aad
adcb
xchg
out
jbe
fisubrs
xlat
sub
bound
dec
andl
loope
sub
push
lret
es
popa
sbb
dec
push
loop
pushf
dec
and
mov
fdivrs
dec
aam
jmp
ss
ljmp
fcom
xchg
mov
pop
or
mov
ficoms
add
inc
mov
lahf
pop
push
push
popa
mov
pop
adc
jb
dec
aad
jg
jb
cs
xchg
stos
ret
cmp
jl
jle
mov
and
pop
jecxz
lahf
sub
stos
mov
jae
push
data16
out
movsl
jmp
fcomip
sub
cmc
or
jne
push
push
sbb
adc
enter
cmp
adc
cltd
xchg
xor
orb
lahf
stos
pop
pminsw
jmp
inc
imul
add
push
mov
jnp
je
and
inc
je
enter
popa
mov
iret
inc
test
in
jecxz
fcomi
in
jo
mov
idivl
xor
fnstenv
imul
enter
dec
ljmp
jmp
dec
mov
mov
or
sub
rcrb
scas
int3
scas
movl
pop
jae
jb
test
sub
test
mov
movhlps
push
dec
jge
adc
lahf
int3
loop
sahf
xchg
jg
add
or
xchg
sti
outsb
loop
lds
jg
pop
lock
pop
cmc
shll
cmpsl
stos
and
mov
loopne
add
inc
pop
mov
mov
cmpsb
jb
lret
cli
xor
adc
or
loope
out
mov
and
dec
movsl
xor
or
cmc
in
push
lcall
ficomps
xor
icebp
jmp
mov
int3
ja
sbb
fimull
jecxz
movsl
pop
call
leave
lret
lret
sub
dec
mov
pusha
mov
cmpsl
aam
pusha
lcall
jmp
outsb
mov
sarl
out
mov
push
inc
cwtl
lret
xor
aaa
jb
sbb
jbe
jmp
adc
inc
mov
push
rolb
jo
dec
jmp
inc
idivl
xchg
inc
xchg
in
mov
test
jbe
sub
lret
sub
rol
pop
es
and
ffree
pop
and
dec
mov
jmp
lahf
stos
adc
or
daa
lods
test
jae
jle
jbe
fsubp
stos
fistpll
fnstenv
mov
repz
push
adc
push
mov
jb
mov
jl
sahf
stos
nop
jg
jae
cli
push
iret
out
dec
sub
sbb
cmp
and
add
xchg
bound
movsl
add
and
dec
fnsave
clc
jmp
aam
call
ret
fnsave
gs
insl
mov
jl
repz
jne
enter
and
jns
pop
dec
je
repz
inc
xchg
lcall
addr16
inc
repz
rorl
xchg
pushf
cmpsb
into
stos
pop
pop
inc
push
lret
add
inc
shll
nop
scas
push
mov
iret
pusha
out
clc
add
sub
sub
jns
xor
sahf
out
or
in
jmp
fstpt
negl
insl
xor
jne
rol
ja
popf
mov
xor
pop
pop
adc
imul
push
sub
push
push
loopne
or
add
xor
adc
mov
mov
push
ja
test
sub
pop
mov
cs
inc
push
jmp
lcall
fnsave
cmpsb
xor
enter
sub
xchg
aas
mov
movsb
or
pop
idivl
mov
cmpsl
cwtl
pop
jns
xor
adc
adc
jmp
test
lods
scas
int3
int3
ss
repnz
mov
mov
movsl
popa
push
dec
or
dec
test
fstps
inc
mov
sub
mov
mov
cmpsl
push
mov
repnz
sub
cwtl
gs
adc
stc
insb
fsts
imul
jmp
mov
sub
and
iret
fnstcw
ljmp
jecxz
mov
mov
icebp
cli
mov
cmp
repnz
pop
mov
dec
adc
fs
and
mov
into
movl
out
fdivrs
sub
xchg
in
lea
mov
or
inc
cmc
movsl
xchg
stos
xor
fidivrs
je
sbb
lcall
ficoms
xor
sbb
hlt
and
ljmp
push
jb
push
movsl
pop
stos
icebp
mov
pop
jno
jg
push
mov
xchg
add
cmp
dec
adc
repnz
push
inc
push
scas
lock
sbb
cmp
iret
push
jmp
inc
jnp
fs
cmp
push
lock
in
mov
mov
sbb
push
clc
movsl
mov
xchg
cmpsb
fidivs
jbe
lds
pop
data16
push
and
fwait
cmp
mov
and
mov
mov
mov
xor
outsb
imul
das
lahf
fsubrl
out
mov
repz
dec
cmpsb
jmp
fidivl
mov
jge
push
ja
daa
inc
scas
sbb
ss
movsb
inc
mov
cwtl
sub
stc
mov
int3
mov
add
and
popa
mov
sub
pop
sub
nopl
xlat
jbe
or
add
xlat
imul
fsts
mov
imull
xor
mov
mov
push
pop
popa
inc
in
add
bound
push
aad
outsb
mulb
jnp
or
xchg
mov
or
sbb
inc
and
inc
cmp
mov
in
pop
jmp
nop
jg
cmp
ret
jg
mov
cwtl
mov
outsl
mov
fsts
add
arpl
outsb
push
je
lods
test
ds
cmp
pop
xor
std
adc
xor
pop
or
xchg
out
mov
mov
shrb
pop
or
mov
call
push
sbb
xchg
push
ds
pusha
sbb
ret
les
xchg
adc
aad
and
mov
inc
inc
mov
int
cwtl
aaa
adc
and
fcoml
push
ret
pushf
lds
mov
xchg
rcrl
sarb
mov
jno
push
test
in
shll
sbb
enter
aas
xchg
enter
xor
and
or
mov
cmp
cmp
mov
mov
inc
insl
je
fldcw
add
sub
jnp
cmp
in
sub
test
bound
dec
out
call
xor
enter
stos
sub
or
loope
adc
std
lock
pop
pop
test
adc
xchg
dec
push
imul
cli
ds
push
cmp
addr16
cmp
popa
dec
dec
jno
sbb
aad
cmp
add
std
jmp
jbe
dec
adc
js
sub
xchg
add
lcall
mov
cmp
insb
jmp
xchg
xchg
loope
bound
loopne
xchg
pop
imul
fsubs
jbe
push
sbb
scas
mov
pop
dec
sub
push
cmp
rcll
mov
popa
sahf
cmpl
icebp
jae
jle
and
movsl
xchg
pop
test
sbb
adc
cmp
adc
add
jb
jge
pushf
sbb
add
push
mov
add
and
icebp
scas
or
ret
outsb
call
fadds
aam
mov
icebp
add
inc
mov
mov
sarb
push
pop
xor
xor
xor
and
xchg
push
sub
mov
addr16
popf
xchg
fstps
sti
push
and
push
xor
stc
or
fs
pop
jp
mov
jp
mov
ja
js
pop
push
fcomps
cltd
cli
jns
call
jmp
repnz
jb
inc
sbb
enter
and
xor
pop
je
fisubl
pop
sahf
cmpsl
in
pushf
push
aaa
mov
enter
add
mov
mov
in
add
cmpsl
inc
ret
lret
xchg
and
add
xor
ror
sbb
icebp
test
xor
cmpsl
lret
int3
lahf
pop
stos
sub
stos
add
leave
pusha
mov
dec
mov
cmp
test
repz
sub
cs
sahf
fcoml
testl
push
sbb
std
lret
pop
test
dec
sbb
scas
jge
xor
loopne
repnz
dec
mov
inc
mov
ffree
mov
xor
pop
pop
andb
std
in
out
call
jecxz
and
jle
jo
cwtl
shrb
es
and
loopne
mov
adc
pop
mov
dec
mov
mov
ss
insb
addb
sbb
sub
in
cld
adc
je
popa
jg,pt
call
aaa
lcall
fiadds
xor
cmc
xor
lcall
adc
dec
out
movsl
mov
inc
in
add
std
push
lahf
push
sub
pop
push
popf
adc
mov
jp
xor
add
inc
or
xchg
scas
cmp
pop
mov
setns
inc
subb
insb
or
adc
xchg
mov
movsb
jg
pushf
sbb
sbb
jl
cmpsb
mov
mov
mov
fisttpll
mov
cmp
ss
cli
xor
loope
add
xchg
xchg
jbe
jle
xchg
insl
fcomps
mov
cmp
mov
cmp
aaa
pop
mov
lret
xchg
aad
cmc
mov
in
loopne
sbbb
add
mov
xchg
sbb
fldcw
scas
fidivrl
add
cmp
add
jmp
push
fwait
mov
xor
pop
out
xchg
lea
negl
jnp
scas
push
lods
fsts
es
pop
imul
pop
sub
cmc
adc
adc
push
or
mov
push
mov
aad
cltd
outsl
adc
jg
pop
sbb
mov
push
mov
add
aaa
dec
aas
mov
sti
test
inc
pop
jns
test
fdivp
inc
adc
not
inc
jp
sub
or
mov
call
mov
mov
or
jne
or
sbb
clc
lret
movsl
push
xchg
movsl
mov
xor
jae
xor
test
sbb
cmp
fbstp
mov
imul
testl
loopne
inc
mov
jmp
scas
ja
cmp
shll
sahf
jno
cmp
sbb
popl
mov
cmp
cmp
mov
sbb
pop
js
daa
pop
fidivrs
sbb
sti
imull
subb
mov
fcmovnbe
sarb
out
dec
enter
adc
jnp
inc
sub
xor
rol
sub
lods
dec
adc
dec
cmp
fsubrl
xlat
or
xchg
int
in
pop
scas
aad
push
sub
loop
jecxz
add
and
in
jl
in
cmovs
jge
ljmp
cmpsl
call
iret
movsl
js
out
lret
dec
mov
jne
cmp
dec
jmp
xor
fwait
sbb
in
arpl
sahf
sub
shrb
jo
out
out
movsb
test
mov
sti
pop
movsl
xchg
es
std
push
dec
inc
xchg
pop
mov
push
and
lea
jge,pt
and
dec
dec
aad
call
mov
and
xchg
push
mov
push
dec
jno
xor
mov
push
ss
je
adc
fisttps
adc
mov
mov
jnp
repz
push
lock
pop
cwtl
iret
xor
xchg
cmp
dec
jle
cld
popa
inc
pop
int
enter
xchg
in
rclb
push
pop
sti
outsb
push
inc
cmpsl
loopne
jg
add
inc
jp
cmp
add
nop
cli
test
aam
push
loopne
es
fwait
push
outsl
mov
add
fcmovbe
mov
jns
inc
and
andl
dec
jno
dec
cli
je
aas
shr
xor
and
inc
inc
and
hlt
adc
lods
push
sub
sti
hlt
cmp
aad
insb
mov
xchg
push
lret
xchg
mov
out
lcall
aaa
mov
outsl
stos
cmp
mov
and
js
inc
cli
inc
outsl
dec
fwait
jl
lock
testl
push
pop
pop
sbb
in
lret
pop
jbe
pop
popf
in
fisubl
lods
cmp
iret
or
jno
into
pushf
hlt
jb
sbb
mov
daa
jge
sbb
mov
push
int
xorl
movsb
add
fs
sub
or
and
cli
mov
rcrl
jl
or
pop
in
aas
sbb
jo
out
add
xchg
jl
inc
loop
jl
sti
mov
cmpl
adc
cmpsl
lea
scas
jno
and
xor
out
out
mov
push
push
dec
popa
sbb
popa
mov
mov
xchg
inc
outsl
push
ljmp
mov
cmp
jae
mov
mov
pop
jo
mov
andb
shll
pop
xor
lods
std
out
nop
pop
mov
repz
push
pop
add
js
jnp
cmp
outsl
pop
aam
mov
dec
lahf
out
xor
inc
push
ja
in
xchg
pop
pop
mov
repnz
xrelease
lret
into
mov
lds
lods
fwait
adc
scas
ret
sbb
pop
mov
out
notl
jo
lea
gs
lret
dec
mov
add
popa
mov
lcall
dec
fmul
add
or
push
dec
fsubrs
shlb
or
mov
xchg
fnstenv
cmpsl
jmp
push
cs
adc
cmp
fadd
xorb
cmc
mov
mov
pop
sub
mov
aas
lret
push
xchg
xor
adc
pop
adc
mov
pushf
daa
push
push
int
lcall
mov
cmpsl
jle
inc
fwait
xor
js
mov
les
popa
shlb
ja
mov
and
aaa
out
stos
jl
dec
and
nop
and
xchg
popa
cmpsb
mov
int3
lahf
arpl
arpl
outsl
test
add
icebp
insb
cmc
nop
mov
xor
shrb
sub
test
test
xor
pushl
cmp
mov
mov
dec
jmp
xor
andl
add
sub
pop
cmc
loopnew
lcall
mov
iret
fsubl
mov
sbb
lods
repnz
inc
mov
mov
ret
loopne
addb
lret
inc
rorb
sbb
aas
inc
sub
sub
andl
mov
fs
lret
fisttpll
pop
inc
into
sub
push
or
fdivrl
fisubs
xor
mov
nop
loop
adcl
fildll
je
mov
mov
pop
dec
aaa
push
imul
fbstp
sbb
mov
imul
ljmp
or
out
pop
nop
mov
add
ficoms
dec
cmp
icebp
iret
shll
add
mov
push
xor
insb
cli
inc
fs
stos
dec
and
or
imul
pop
out
inc
xchg
jo
gs
div
add
xchg
clc
xchg
cmpsl
push
mov
insb
sub
outsl
sub
pop
cmp
push
das
mov
rorl
mov
sub
imul
push
iret
cltd
dec
xor
add
and
int3
push
cmp
into
pushf
mov
inc
dec
pop
mov
xor
mov
mov
xchg
in
or
outsb
pop
pop
les
mov
cmc
ret
jb
add
repnz
in
pop
mov
sti
push
stos
pop
sub
xchg
and
cs
add
sub
stc
cltd
data16
dec
pop
pop
aam
xchg
adc
mov
ss
jmp
jge
mov
xorb
adc
mov
sub
dec
idivb
push
lock
sbb
jge
inc
add
pop
inc
int
lea
jb
enter
jo
hlt
movsl
push
stos
jmp
or
stc
dec
lret
stos
fisttps
jb
jg
xchg
cmp
xor
inc
das
stos
adc
js
xchg
lock
hlt
and
and
fisubs
jno
insb
dec
stos
lods
sbb
adc
fbld
loopne
gs
lock
movsl
shr
stc
mov
fsubr
mov
sbb
ret
je
sbb
push
nop
xor
lods
sahf
sbb
mov
push
inc
shlb
sub
das
call
lock
sahf
mov
push
in
mov
repz
or
sub
push
jb
xor
stos
mov
mov
push
or
fst
mov
inc
js
lods
mov
xchg
inc
popa
adc
pop
pop
test
jg
sbb
subl
mov
test
shrb
jmp
stc
insl
fcmovnu
cmp
nop
lods
ficompl
gs
xor
adc
dec
cmp
jmp
and
adc
xor
int
or
mov
mov
mov
dec
pop
ljmp
or
jl
hlt
std
fisubrs
inc
jo,pn
xor
pop
jecxz
imul
pop
cmp
xor
jge
mov
mov
jnp
sbb
test
mov
and
add
xchg
mov
xchg
pop
or
jge
dec
xor
add
cmpsl
sbb
arpl
or
lret
xchg
insb
ljmp
add
mov
or
aad
stos
or
jle
pop
cmpsb
enter
fsts
iret
rolb
ss
fistps
jg
imul
jp
xor
mov
xchg
ret
sub
leave
andl
xor
mov
inc
in
ret
mov
shll
push
mov
dec
lahf
cli
roll
shl
xor
push
mov
out
mov
mov
leave
fildll
cmp
sbb
cli
in
cmp
and
adc
out
pop
xor
ret
in
insb
dec
cmp
inc
jb
mov
push
mov
pop
mov
xor
in
or
in
dec
das
std
jne
or
or
push
xchg
pop
xor
stos
xchg
cmp
add
adc
fisubrl
cmp
rcll
mov
or
iret
xchg
orl
ja
mov
out
cltd
mov
mov
shlb
test
int
out
jg
or
andl
movsb
sub
adc
pop
dec
add
cmpsb
iret
cmp
mov
push
rorb
jae
xchg
cmp
stos
dec
push
lret
mov
lcall
ds
cs
push
jp
push
sbb
pop
cmp
mov
cli
mov
lcall
ds
cs
push
jp
push
sbb
pop
cmp
mov
cli
mov
lcall
ds
cs
push
jp
push
sbb
pop
cmp
mov
cli
mov
lcall
ds
loopne,pn
jp
sbb
mov
sbb
in
and
ljmp
test
mov
gs
and
sbb
in
xchg
pop
test
jge
sbb
inc
lea
imul
std
and
adc
and
popf
push
lods
movsl
ja
popf
data16
sub
sbb
mov
mov
pop
xchg
dec
xchg
test
inc
mov
scas
sbb
add
push
sbb
pop
jge
sub
xor
mov
fwait
push
inc
mov
ficoml
push
push
mov
ds
xor
popf
mov
push
adc
std
and
repnz
sarl
test
or
inc
inc
lcall
add
bnd
add
cmp
jne
add
je
xchg
adc
filds
push
mov
sbb
inc
jl
cmp
or
push
push
cmc
push
sub
sbb
fcompl
sbbb
mov
mov
xchg
insl
movsb
jl
or
out
in
mov
pop
xchg
dec
out
jecxz
clc
adc
lea
mov
pusha
iret
inc
xchg
dec
cmpl
pop
test
mov
negb
jmp
and
adc
lcall
cltd
pop
lea
outsb
test
jge
insl
push
popf
inc
lea
lods
adc
std
and
or
xchg
pop
test
jge
insl
push
popf
inc
lea
lods
adc
std
and
push
dec
mov
out
mov
pusha
jb
add
jno
movsl
js
out
sub
push
jge
dec
out
xchg
pop
pop
bound
movsl
es
inc
sti
dec
sbb
pop
int3
shl
sbb
jmp
fwait
scas
xor
rorb
mov
xchg
push
dec
add
sub
es
xor
lods
mov
hlt
aaa
stos
lods
sub
jmp
repz
dec
rorb
shufps
lods
lods
sub
mov
and
shl
in
inc
clc
out
nop
xchg
push
cmc
scas
es
imul
mov
mov
and
rcrb
xor
lea
inc
pop
mov
dec
repz
pop
cmpsb
mov
flds
repnz
pop
into
popa
setge
cmpsb
sub
sti
push
and
or
inc
mov
mov
adc
icebp
out
push
repnz
loopne
pop
aad
fdivrl
sub
addr16
rcl
lea
psubw
xorl
ret
or
repz
int
fstps
iret
int
dec
insl
sub
jb
ficoml
bound
mov
pop
stos
cmc
or
adc
cmp
xor
bswap
pop
fs
lods
ret
sbbl
clc
xchg
jge
or
shlb
mov
mov
xchg
mov
aad
sahf
push
mov
push
shrl
and
adc
sub
in
jb
mov
xchg
leave
cmpsb
lock
mov
decb
test
stos
inc
pop
push
sti
pop
outsb
dec
push
mov
dec
dec
cmp
xchg
sub
jp
ret
sbb
push
xor
scas
call
inc
pop
mov
adc
xchg
jmp
movsb
or
or
xchg
adc
insl
insl
pop
jns
test
mov
aas
xor
xor
outsl
jecxz
add
shl
loopne
add
add
xor
add
pop
cmp
mov
lret
insb
je
inc
test
stc
jl
push
dec
dec
xor
insb
aad
scas
mov
xor
imul
jecxz
mov
mov
add
call
rclb
sbb
jne
push
jne
out
fldl
sbb
orb
inc
arpl
repnz
or
jnp
mov
jbe
adc
pop
mov
aad
adc
cld
arpl
xor
movsl
movsl
addr16
push
shr
test
movsb
pusha
popf
jne
lds
popa
sti
cmp
sbb
loop
ret
out
and
cwtl
test
inc
shll
xor
xor
mov
add
add
cli
js
cmc
cltd
sub
or
cli
test
mov
push
adc
inc
push
push
mov
dec
test
in
fwait
inc
fucom
arpl
sbb
cmp
lret
movsb
push
fcomip
cmp
fbstp
outsl
xor
out
mov
stc
inc
dec
sub
mov
xchg
sub
outsl
fisubs
push
fistl
mov
xchg
test
pop
mov
lret
loopne
mov
sbb
sbb
rclb
mov
inc
inc
popf
lock
push
sub
mov
clc
rorl
cli
sub
movsl
insl
shl
stc
jbe
push
jmp
rolb
insl
dec
jle
or
fnstsw
int
int3
stos
arpl
dec
call
mov
sbb
mov
cs
arpl
incl
mov
mov
mov
cmp
add
test
idivl
sub
scas
pop
mov
or
dec
push
xchg
jmp
pop
roll
sbb
push
mov
aad
mov
sub
jp
adc
je
icebp
fisubl
repnz
in
or
les
and
xchg
add
xor
mov
inc
enter
xchg
jmp
xor
mov
test
add
cs
xchg
fstps
mov
cld
and
and
mov
lods
or
push
xchg
scas
in
in
xor
fadd
inc
jbe
xor
xor
xor
pusha
imul
add
xchg
test
hlt
xchg
adc
aaa
cli
mov
cmp
cld
jne
mov
cli
std
into
movsb
mov
addb
pop
xchg
jne
cmpb
frstor
loop
test
int
stos
rolb
pop
test
jp
inc
jae
lea
and
jns
jp
int3
fstps
ja
pushf
outsl
jmp
js
adc
cs
in
call
test
push
stos
pop
stos
ffreep
and
cwtl
xchg
add
cmpsb
add
jmp
and
mov
test
ret
mov
pop
cmp
iret
inc
ret
loope
jno
mov
push
mov
sti
leave
add
arpl
sbb
mov
lds
sbbl
rorl
cs
ret
push
jae
sub
xchg
add
adc
cmp
int3
push
cmp
leave
xchg
adc
int
mov
and
push
add
adc
sti
imul
xchg
and
imul
mov
jne
mov
mov
cmc
popf
into
or
add
sbb
push
or
add
sti
loop
inc
mov
xchg
mov
jl
mov
popf
jbe
push
jbe
stos
push
and
xor
or
cmc
mov
cmp
jno
popa
xchg
rorb
shl
pop
or
jne
xor
xchg
pop
test
sub
and
jmp
cmp
ljmp
or
mov
add
xchg
rclb
pop
mov
adc
adc
aas
mov
add
mov
xchg
mov
and
scas
adc
shr
ja
aaa
pop
shll
push
or
jno
imul
fcmove
lods
test
cmpsb
cltd
iret
jnp
incl
lahf
movsl
sub
jb
sub
sub
sarb
test
mov
roll
mov
pop
xor
pop
jne
push
or
and
mov
hlt
jae
mov
jmp
add
dec
inc
cmp
push
scas
stos
fidivrs
inc
test
jecxz
enter
shlb
pop
fidivl
dec
loop
cmp
insb
clc
add
jge
push
das
jecxz
cltd
mov
movsl
int
data16
lret
push
sub
faddl
les
mov
add
jb
cmp
lahf
jbe
jno
jae
jle
loop
or
sbb
jecxz
jg
loopne
push
add
cltd
push
lcall
rorl
fisubrl
mov
cs
test
pop
stos
lods
loopne
mov
push
sub
int3
add
mov
movsb
imul
scas
mov
mov
sub
push
insb
or
mov
sbb
cli
jle
xor
lret
hlt
leave
ljmp
add
jne
cmp
add
scas
adc
popa
jne
out
scas
xor
dec
cmp
mov
xchg
fcoms
mov
cmp
test
fcompl
xor
push
mov
out
xor
popf
in
xchg
lds
mov
lret
pusha
lods
inc
sub
mov
mov
lcall
sbb
shufps
pop
or
fsubl
leave
dec
adc
bound
push
pop
pop
or
mov
and
cwtl
add
je
lods
scas
push
push
call
mov
test
lret
aam
lds
push
pop
and
mov
call
ret
jne
pop
lret
fildl
imul
shrb
adc
pop
int3
test
outsb
or
jge
movsb
push
cmp
sbb
mov
das
mov
fisubl
mov
adc
rcrl
xchg
aas
sbb
int3
mov
ja
xchg
cmp
shr
and
out
lret
push
cmp
xor
mov
test
xor
mov
fiadds
mov
bound
adc
mov
lods
sub
sbbb
jnp
insl
andl
mov
shlb
xlat
xor
inc
adc
mov
xchg
sbb
inc
fstpl
ljmp
or
adc
and
jmp
xchg
loopne
pop
mov
sbb
movsb
sarl
lahf
loope
or
das
mov
fnstsw
addr16
or
test
lahf
cmpsb
fidivl
je
sub
shll
cwtl
adc
sub
test
cli
mov
jb
inc
icebp
loope
xor
dec
xchg
mov
jge
int3
out
pusha
mov
decb
dec
cmpb
mov
in
xchg
cmp
call
fnstsw
adc
mov
mov
or
insl
lahf
sbb
jmp
xor
push
cwtl
daa
js
test
movsb
ret
int
lret
dec
aad
fcmove
mov
ja
xor
sbb
ja
adc
push
hlt
and
xor
jo
jmp
repz
shl
movsl
test
xchg
add
cmp
loop
arpl
xchg
jecxz
sbb
lock
dec
shrl
lods
jne
dec
sbb
or
dec
fcomp
add
push
adc
cwtl
lods
sub
sar
outsb
icebp
lret
add
call
mov
movsb
push
adc
cmp
add
into
rolb
fs
fwait
ss
adc
clc
repnz
mov
nop
popf
das
sbb
jge
mov
stos
inc
jecxz
outsb
fldcw
push
jbe
pop
lds
outsb
mov
fmull
xor
cwtl
lods
cmp
outsb
push
dec
push
pop
mov
xor
and
popa
inc
pop
imul
or
pushf
addr16
and
loop
and
fidivs
cmp
mov
das
lds
mov
mov
and
mov
mov
pop
jbe
imul
push
lcall
adc
repz
sbb
mov
xor
gs
xchg
adc
pop
out
je
cmpl
xlat
stos
movsb
stos
jmp
es
push
mov
in
mov
fdivrl
pop
inc
adc
or
mov
sub
dec
and
mov
into
cmp
xchg
push
dec
mov
and
rcr
xlat
xchg
jae
mov
rolb
lcall
mov
into
and
repnz
xlat
push
xchg
or
sub
loope
pop
xchg
push
mov
pop
lods
pushf
pop
leave
mov
mov
imull
mov
std
scas
dec
sahf
pop
jae
mov
push
push
fldenv
aaa
xchg
arpl
out
jae
mov
minps
gs
jg
movsb
mov
add
mov
int
jmp
cmp
sbb
jno
adc
aaa
mov
sbb
outsb
in
test
shrb
fisttpl
xlat
cli
jge
into
xor
fsubl
int
mov
jmp
rcll
mov
jns
aam
or
test
pop
es
pop
xor
fwait
push
mov
inc
dec
addr16
daa
mov
sahf
and
push
xchg
dec
inc
jle
inc
inc
push
lds
or
fadds
inc
mov
push
testl
out
sbb
mov
push
in
inc
lds
outsb
repnz
push
ja
xchg
stos
sub
mov
js
js
call
dec
or
inc
sub
xchg
push
jle
xlat
aas
jo
dec
out
mov
fidivl
pop
xor
sbb
sub
dec
jp
push
add
jecxz
cltd
xchg
jmp
push
xor
push
enter
inc
pop
out
jmp
aad
sbb
pop
dec
cmp
imul
addr16
adc
pop
cmpsb
push
mov
dec
mov
mov
je
leave
pop
add
std
push
mov
inc
pop
jg
loope
out
negb
andb
and
ror
jle
jbe
in
fcomip
push
fistps
sahf
dec
int3
test
push
pop
xor
je
adc
scas
jge
cmpsl
bound
push
cmp
sti
mov
push
mov
lea
cmc
xor
pop
out
roll
das
push
xchg
jno
cltd
test
loope
jmp
push
pop
lret
push
aad
out
pcmpgtw
in
sub
or
inc
arpl
and
scas
cmc
pop
idivb
jae
fwait
push
bound
fcompl
sbb
inc
fimull
adc
orl
or
movsl
stos
and
adc
insb
out
dec
decb
out
outsl
mov
push
das
popa
mov
cwtl
xor
test
pushf
rcrb
jae
push
imul
fisttps
sub
cwtl
cwtl
mov
repz
sarb
into
pop
mov
stos
dec
je
cmpsl
ffree
inc
xchg
stc
sub
push
sub
std
sahf
outsl
jle
aam
mov
sub
fucom
test
pushf
dec
daa
pop
in
mov
cli
and
rorb
pop
in
inc
mov
int
push
cmp
mov
add
sbb
test
es
aas
adc
shll
into
dec
fldcw
push
fldcw
pop
pop
popa
jl
mov
inc
lret
loop
cmp
sbb
jmp
mov
mov
lods
xchg
pop
cmc
adc
mov
in
rcll
jmp
mov
imul
and
cmc
mov
fdiv
inc
filds
mov
stc
mov
xor
outsl
repnz
sbb
loope
add
nop
xor
lahf
movsl
rclb
jge
xor
imulb
sar
shll
loope
rcrb
push
enter
jmp
arpl
inc
mov
or
fwait
ret
and
or
xor
mov
fidivrs
dec
subl
js
stos
adc
je
lods
push
subb
cwtl
clc
rorb
int3
and
jae
xchg
repz
push
sti
je
mov
in
add
loope
daa
rcr
pop
mov
jb
rcl
cmp
dec
stos
loopw
cmp
cmpsl
pop
mov
icebp
add
sub
and
stc
dec
jno
lock
cmp
imul
adc
wbinvd
or
pop
mov
lods
xor
mov
flds
mov
cmp
mov
pop
mov
push
sbb
cli
add
or
insb
out
sbb
mov
mov
mov
xorl
daa
daa
fsubrs
inc
ss
out
jbe
pop
in
out
clc
rolb
mov
jle
xor
push
ret
xchg
arpl
cmp
and
mov
pop
sub
pusha
mov
mov
call
pop
es
adc
repz
inc
dec
adcb
add
mov
stos
mov
push
cmpsl
inc
jne
or
xchg
sub
and
add
push
or
stos
sbb
inc
xchg
mov
movsb
xchg
jp
and
mov
pushf
mov
mov
in
mov
test
sub
inc
cli
inc
mov
cmpsl
inc
mov
hlt
scas
cwtl
mov
jge
and
jmp
mov
iret
xor
dec
add
mov
adc
iret
push
fs
xchg
mov
xor
ffree
push
jmp
jle
pop
inc
sahf
mov
mov
xor
sbb
adc
adc
mov
inc
roll
std
das
lods
imul
sbb
jbe
xor
or
mov
daa
dec
fwait
xchg
std
jp
pop
loope
or
dec
fbstp
aas
jmp
insl
mov
inc
loope
inc
sbb
sbb
cmp
aam
mov
jb
lock
jno
dec
in
xor
jp
addr16
pop
in
data16
cmp
fcmovnb
aas
cmp
adcb
call
mov
add
sti
dec
nop
pushf
mov
lahf
ds
sahf
mov
inc
inc
shr
and
mov
sbb
pop
ret
push
sahf
daa
jno
lret
mov
lock
xor
data16
insb
test
pop
sbb
or
shlb
test
insl
pop
sub
add
mov
adc
cwtl
sbb
or
fcoml
js
sub
sub
dec
loope
das
sbb
fwait
pop
fildl
push
mov
inc
daa
out
cmpsl
xor
insb
cwtl
and
das
adc
pop
jnp
pusha
inc
pusha
dec
xor
dec
cmpsl
jmp
inc
lds
fs
push
cli
xchg
pop
outsb
cli
xchg
stos
aas
aaa
or
lock
xor
aam
loope
mov
rolb
ljmp
mov
cs
or
hlt
mov
sub
gs
aaa
or
pop
mov
shll
lcall
inc
lock
adc
dec
rorb
into
sahf
ja
add
mov
push
pop
clc
and
daa
xchg
test
inc
js
sbb
ja
sub
clc
or
push
mov
cmp
fldt
imul
ja
cltd
push
sar
dec
push
jl
mov
cmp
stos
clc
push
or
loopne
adc
outsl
fisubrs
scas
dec
cmp
ffree
jno
lods
mov
in
addb
mov
sbb
popf
je
pop
call
in
idiv
mov
adc
repz
es
mov
in
int
cmc
pop
dec
dec
repz
cmp
jp
int
cmpsl
xchg
jmp
lods
dec
pop
fdivr
loop
rcl
cmp
nop
fists
and
xchg
xchg
js
inc
lcall
sbb
jb
inc
and
adc
mov
loop
lea
xchg
jle
lods
xchg
cmp
inc
rclb
mov
sbb
cmp
and
addl
adc
cmp
inc
sub
jecxz
mov
xchg
pop
lahf
call
mov
dec
push
cmp
fs
stos
lret
dec
dec
ret
cmp
mov
jnp
pop
pop
sti
xchg
xor
or
sahf
push
lcall
xchg
icebp
jl
or
xchg
pusha
call
sub
jns
pop
popf
test
gs
mov
push
bound
xchg
movups
mov
aas
mov
and
fldl
cli
mov
cmp
adc
js
fwait
cltd
lcall
sbb
ja
sub
jns
adc
inc
idivl
in
cmp
push
pusha
dec
cwtl
dec
in
sar
push
dec
jbe
adc
cmp
add
mov
repnz
sub
add
pop
pop
add
div
scas
mov
or
pusha
lret
pop
rcll
dec
mov
ds
out
pmaddwd
ds
dec
push
sub
jae
mov
fldenv
xchg
rcrl
push
or
push
xlat
cmp
std
and
xchg
sbb
out
pop
ficompl
inc
xchg
and
popf
xchg
sbb
pop
add
dec
or
push
mov
scas
cltd
xchg
jmp
cmc
mov
scas
mov
mov
rcll
adc
imul
jns
stos
ss
lock
stos
xchg
imul
or
push
xchg
mov
mov
in
dec
mov
ret
jecxz
xchg
shr
mov
outsl
enter
cs
sbb
xchg
sbb
fwait
lret
and
pop
mov
test
adc
or
mov
out
addr16
jle
cmp
sbb
addr16
pop
scas
insl
ljmp
xor
sbb
icebp
adc
fadds
inc
movsl
jge
pop
call
ficoml
xchg
dec
dec
jecxz
out
test
pop
mov
lahf
xchg
bnd
insb
es
jae
enter
cld
sbb
pop
in
and
mov
mov
fs
in
insl
sub
sbb
gs
movsl
dec
and
int3
loopne
movsl
and
jge
jecxz
clc
xchg
inc
repz
mov
jle
ret
cmc
cld
frstor
inc
sarl
shrb
sub
repnz
pop
mov
mov
insl
push
mov
push
mov
push
cmp
mov
push
das
xchg
out
lock
fwait
mov
add
inc
xor
pusha
hlt
out
jne
lcall
arpl
lahf
cmc
std
ret
mov
dec
adc
fsts
cs
aaa
sarl
fstl
xchg
mov
lahf
pop
jnp
pop
cltd
test
sbb
pop
aad
adc
in
in
or
or
int
pusha
lahf
shrl
push
sub
or
repz
xchg
sub
insb
outsb
jge
pop
leave
sub
in
jg
hlt
nop
mov
cmp
loopne
or
xchg
ret
shrl
loope
dec
movsb
aam
jno
out
pop
sub
mov
or
xchg
scas
stos
xor
testb
cmp
call
les
or
in
mov
cmc
jge
test
data16
mov
push
mov
mov
sub
shlb
push
and
adc
je
dec
shll
inc
fcompl
test
jle
mov
hlt
sub
jo
dec
sbbb
pop
jle
xor
mov
movsb
test
mov
add
es
add
stc
sbb
imul
push
aam
in
mov
clc
push
xchg
or
dec
mov
cmp
test
jge
insl
push
popf
inc
lea
lods
adc
std
and
or
xchg
pop
test
jge
insl
push
popf
inc
lea
lods
adc
std
and
or
xchg
pop
test
jge
insl
push
popf
inc
lea
gs
xor
sbb
or
cmp
sub
xor
popf
mov
fisubl
lea
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cwtl
jge
sbb
rcrb
lea
or
pop
add
or
push
add
dec
add
inc
add
add
xchg
add
pop
add
add
sub
stc
add
add
add
add
add
in
add
pop
add
dec
add
add
add
imul
insb
add
add
add
jno
or
dec
add
sbb
add
add
movl
addl
add
xor
mov
add
add
add
inc
add
add
add
inc
add
push
add
add
add
and
inc
add
add
fildl
fildl
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
test
add
addl
add
aas
add
call
add
add
add
push
add
add
add
add
adc
sub
mov
add
add
add
add
add
add
add
insb
add
mov
add
pushf
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
add
or
fildl
adc
add
cmp
add
add
add
add
xor
in
cmp
addb
add
add
add
fildl
fildl
cmp
add
add
add
add
fldl
out
stc
add
imul
pusha
add
add
add
add
add
mov
add
add
add
add
add
dec
add
adc
add
add
test
add
adc
inc
add
jno
fiaddl
push
add
add
add
push
add
add
add
add
or
fildl
pop
add
add
add
add
dec
add
add
fadds
xchg
add
add
add
add
loop
adc
add
add
add
aas
add
add
add
add
add
add
jns
pop
add
add
add
stos
add
add
add
add
add
add
int
insl
add
add
add
add
add
add
add
add
add
push
add
nop
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
in
adc
add
add
ret
add
add
aas
add
add
stos
add
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
add
add
add
push
fiaddl
dec
add
pop
add
add
add
dec
add
add
add
add
add
inc
add
add
add
push
add
pop
add
daa
add
xchg
add
add
or
lea
outsb
add
lcall
add
add
pop
add
add
add
pop
add
add
add
notl
shll
mov
cwtl
cmp
aas
sbb
mov
xchg
xchg
call
or
js
pop
ret
dec
xor
test
fldenv
mov
addr16
xor
sub
cltd
xchg
xor
aam
mov
sbb
rol
in
adc
lea
or
xchg
inc
xlat
sub
ljmp
movsl
out
inc
insl
push
mov
jb
addr16
ret
inc
push
inc
inc
mov
pop
cmpsl
sub
repz
mov
jae
nop
les
nop
ret
xor
or
sub
sbb
pop
jno
sub
mov
xchg
sub
test
jno
insb
jb
jecxz
lret
push
outsl
inc
fisttpl
inc
pop
nop
enter
push
dec
cmc
push
js
mov
add
lods
xchg
arpl
sbb
mul
pushf
jmp
dec
cwtl
or
aam
xor
cltd
pop
fstps
dec
mov
mov
jnp
repnz
movsb
mov
std
imul
xchg
jl
movsb
jmp
sub
repz
test
lea
out
fdivrs
pop
ja
shlb
jno
lahf
cwtl
enter
outsl
jp
ret
sbbb
inc
xor
mov
mov
jns
mov
cld
push
inc
jle
in
sbb
into
sub
cmp
cli
pop
sbb
mov
inc
mov
pop
inc
mov
inc
sets
inc
dec
sbb
pop
inc
jmp
push
icebp
pusha
shrl
sbb
add
sub
aam
bound
push
idivb
rorl
in
aas
icebp
das
cs
ror
pop
jg
cmc
cmpsb
pushf
push
dec
lods
sbb
mov
or
pop
dec
xor
xchg
test
xor
jae
lods
aaa
cmpl
dec
cmp
sahf
adc
lret
sub
idiv
adc
pop
in
fidivrl
decl
or
addb
pusha
sbb
mov
mov
add
sub
sahf
sub
and
fsubrs
sub
daa
imul
and
incb
stos
or
aaa
mov
imul
icebp
rcrl
incl
stos
pusha
mov
sahf
cmpsb
mov
out
enter
dec
add
inc
add
imul
add
lds
jecxz
movsl
xlat
push
enter
rcll
mov
jge
xchg
call
inc
das
cli
lret
sub
adc
add
add
pop
push
aad
scas
mov
dec
mov
and
cmp
test
andl
or
sub
sahf
xor
dec
or
jmp
pop
sti
pusha
mov
pop
imul
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
