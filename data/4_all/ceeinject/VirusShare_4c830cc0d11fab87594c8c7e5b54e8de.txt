call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
gs
push
testl
ja
popa
cmpsl
cmc
in
aam
lds
pop
movsb
mov
xlat
gs
push
testl
adc
pop
in
mov
lds
movsl
add
jne
ficoms
inc
pushl
scas
add
fs
mov
jae
inc
ljmp
xchg
adc
inc
out
push
ss
je
out
fidivl
fs
enter
xlat
call
mov
out
je
dec
jo
subb
cwtl
dec
ja
pop
popf
jge
lock
lods
pop
les
xor
lods
sahf
test
cmc
push
mov
sbbl
mov
mov
cmp
test
xchg
cmc
ret
add
mov
push
sub
addb
lcall
push
sub
iret
popf
stos
nop
mov
out
int
adc
lea
gs
xadd
sbb
ret
testl
mov
sarl
out
xor
xlat
push
out
inc
out
xchg
and
mov
aad
lds
shld
xchg
sub
and
jbe
inc
out
popf
cmp
mov
jb
add
sub
or
leave
adc
and
gs
addr16
pop
lds
push
add
dec
ss
mov
adc
push
in
aad
lds
pop
movsl
pop
xchg
aaa
test
jne
gs
push
testl
adc
push
in
aad
lds
pop
movsl
pop
xchg
aaa
test
jne
pusha
aam
jo
in
sbb
sbb
icebp
mov
push
outsl
cwtl
xor
and
mov
fyl2x
std
xlat
mov
cmp
dec
mov
pop
pop
jo
fwait
cmp
jbe
outsb
mov
jecxz
test
fmull
xchg
rcrb
loopne
jnp
lods
pop
add
shll
idiv
insb
loopne
xchg
push
lods
push
jp
fildl
js
inc
cmpsl
in
fwait
xchg
push
cld
pop
add
mov
je
std
in
loop
enter
add
out
test
nop
int3
aas
inc
sub
sti
push
push
xchg
repnz
adcl
addb
jae
out
adc
fsubl
inc
les
cli
int3
fwait
hlt
adc
lret
icebp
nop
test
test
mov
test
cmpsb
mov
jo
cmp
loope
inc
rcr
sahf
xchg
dec
jae
cmp
cmc
faddp
daa
nop
jp
xchg
adc
dec
jae
lret
jno
sarb
in
fndisi(8087
push
daa
ss
jno
sahf
jo
clc
cs
pop
loopne
jge
movsl
bound
test
cmp
adc
and
in
sbb
in
push
test
dec
mov
push
movsl
jge
aaa
cld
sub
mov
out
jp
and
jle
or
out
add
lods
mov
add
pop
xchg
jp
ret
sub
test
sub
jg
aam
pusha
pop
inc
dec
mov
sub
mov
or
movsl
addr16
pop
in
incb
out
ljmp
pop
hlt
mov
jne
sub
jecxz
pop
push
test
add
xor
sbb
add
or
dec
mov
sbb
cli
shlb
sub
idivl
pop
push
pop
adc
mov
push
and
imull
dec
mov
cs
jno
xorb
pop
cmp
repz
pop
loope
sub
movsb
scas
sahf
sub
push
and
pop
sbb
adc
or
flds
push
pop
pop
sub
jo
aad
xor
outsb
sahf
or
sbb
scas
fildl
inc
mov
arpl
ja
adc
inc
rorb
cld
popf
dec
fbstp
xchg
in
add
jg
xorb
popf
xor
cld
jmp
dec
nop
and
outsb
mov
xchg
xchg
test
jmp
mov
xor
aaa
je
pop
arpl
fistpl
pop
and
sbb
sbb
js
mov
adc
fists
or
pop
daa
jbe
lods
inc
or
cmpsb
inc
push
cld
stos
jae
or
inc
leave
js
icebp
cmp
rclb
cmpsl
sub
lret
cld
xor
sub
cwtl
movsl
bound
sbb
shrl
add
xchg
xor
or
outsl
sub
fnstenv
inc
pop
subb
pop
lock
mov
pop
jns
aas
mov
push
jns
aam
orl
stos
add
jnp
int3
inc
mov
xor
cmpsl
xor
inc
add
lahf
mov
sar
mov
pop
mov
xchg
ds
stos
adc
scas
mov
mov
inc
js
mov
cs
imul
pushf
arpl
push
mov
ss
es
jnp
inc
cmp
mov
mov
out
sbb
add
lds
lahf
jmp
dec
addr16
iret
jbe
sbb
out
adc
int
pop
enter
inc
sbb
adc
lea
cmp
xchg
sbb
mov
inc
decl
int3
cli
mov
lds
gs
ja
idivb
jns
push
add
sub
push
loop
arpl
mov
xchg
cmpsl
cmp
cli
jl
mov
sub
pop
cmp
adc
push
or
adc
jmp
inc
sub
clc
inc
into
xchg
jae
xchg
pop
jl
test
ss
pop
cmpsl
adc
bound
adc
cmp
lret
int3
and
bsf
and
pop
mov
jns
xchg
pop
into
in
xchg
sahf
xlat
pop
mov
jae
cmpsl
pop
pushf
push
inc
push
mov
sbb
xor
dec
ja
cmpsl
push
outsl
jg
loope
inc
outsb
rorl
stos
mov
pop
call
mov
je
xchg
add
push
push
push
mov
push
push
scas
insl
lds
mov
add
push
xor
jo
sub
jmp
pop
dec
jne
pop
inc
cwtl
std
inc
in
inc
dec
push
cmpb
pop
mov
hlt
jno
add
jne
cwtl
pushf
push
inc
or
fiadds
or
mov
cmc
gs
xchg
shl
sbb
testb
lods
mov
ret
scas
jae
aas
xor
mov
lea
jge
jecxz
sub
shll
jmp
push
movsl
dec
cmp
ret
cmp
mov
and
push
mov
imul
hlt
loop
shrl
das
imull
adc
add
movsl
xchg
xchg
shll
cmp
pushf
loope
ljmp
push
or
xchg
sbb
punpckhbw
int3
clc
xchg
and
sub
push
fwait
inc
or
dec
loopne
or
mov
mov
ror
jle
fdivrs
es
std
test
mov
insb
lret
and
subb
test
lods
pop
mov
in
pop
mov
lcall
jnp
adc
sbb
lret
dec
xchg
push
clc
imulb
or
sub
mov
xchg
push
out
xor
cltd
xchg
aad
fcom
mov
mov
adc
push
ja
jne
add
dec
dec
push
aad
or
cmpsb
movsb
xorb
imul
in
jns
incb
aam
iret
xor
cmp
divb
dec
dec
mov
repnz
es
jecxz
sbb
adc
xchg
push
mov
dec
pushf
mov
mov
fimuls
adc
mov
mov
mov
lods
mov
push
sbb
and
fcmovb
into
cs
test
jno
neg
ffreep
jbe
push
pop
sub
repnz
out
mov
jns
sbb
out
xor
mov
int3
dec
or
mov
sub
scas
aad
mov
jl
push
mov
pushf
sbb
add
sub
mov
shll
push
adc
or
scas
loope
cs
jg
pop
shrb
cmp
mov
jg
loope
adc
push
sbb
out
xchg
sub
rcll
scas
xlat
sbb
push
inc
clc
dec
cmp
sbb
scas
inc
lea
rcll
inc
insl
inc
mov
cli
fwait
in
ret
adc
sbb
dec
sbb
xor
loop
jle
dec
jp
push
mov
stos
iret
inc
movsl
pusha
inc
cmp
inc
shll
sbbl
hlt
lret
add
les
jle
jle
dec
aad
in
scas
mov
cwtl
out
pop
add
inc
test
push
lsl
insb
mov
pushf
imul
or
xchg
imul
into
dec
xor
or
jmp
and
rclb
test
xchg
aas
test
insl
xchg
dec
in
or
jne
out
xor
xlat
cltd
shl
ret
push
int3
cmp
mov
ljmp
js
mov
scas
leave
cmp
and
in
cltd
call
mov
out
call
pop
ss
push
aas
std
sahf
loopne
inc
cltd
xor
adc
sbb
sbb
lret
sbb
mov
in
mov
repnz
cwtl
jmp
adc
mov
test
sub
xchg
in
mov
shl
mov
loopne
fs
xor
mov
sbb
loope
loopne
sub
outsb
loopne
or
cmc
cmp
pop
movsl
jl
lcall
jae
adc
xchg
ret
xlat
inc
int
sahf
mov
bnd
xchg
jmp
stos
gs
pop
gs
sbb
loope
call
scas
jbe
ret
test
pop
xchg
push
lretw
ja
ja
xchg
push
ret
sarl
xor
in
rol
test
xchg
fsts
pop
fists
aas
xor
mov
mov
cmovl
xchg
mov
in
call
jns
imul
push
call
adc
xchg
addr16
test
cmc
xchg
push
dec
push
ror
sub
mov
out
pop
sti
cs
fwait
pop
jmp
xor
adc
frstor
or
mov
pop
inc
push
mov
lret
test
mov
call
lds
xchg
test
or
pop
rol
mov
xor
dec
icebp
scas
test
jle
pushf
repnz
and
jmp
mov
push
xorb
stos
rcll
gs
jae
mov
loop
rcrl
inc
dec
aad
mov
daa
inc
push
stos
pop
inc
ja
loope
stos
mov
xchg
xchg
ss
loop
mov
es
les
push
pop
pop
and
adc
fincstp
inc
lods
pop
lahf
add
adc
or
jl
mov
fcmovne
inc
mov
dec
arpl
es
sbb
notl
mov
mov
subl
pop
lretw
testb
dec
jne
ja
or
mov
push
jp
cli
add
mov
push
loope
add
imul
pushf
jo
adc
insl
jge
repz
add
scas
mov
or
sub
or
xchg
scas
lahf
xor
cmc
jno
or
add
jns
clc
dec
xor
mov
test
mov
xchg
fldenv
sub
lock
jp
xchg
cmpsl
repnz
lret
or
in
lret
xchg
hlt
bswap
lods
vcvtsd2si
out
push
ret
shl
xor
pop
sub
div
fdivrp
testb
xchg
lret
movl
dec
cli
lcall
ret
adc
inc
push
out
stc
lock
cmp
cmp
add
mov
test
or
in
fsubrp
push
add
ljmp
out
sub
cmc
mov
mov
adc
lret
hlt
push
adc
mov
nop
adcl
push
lahf
sahf
hlt
cmp
mov
adcl
nop
insb
int3
mov
mov
sub
scas
or
add
out
mov
stc
jl
push
mov
mov
cmp
sbb
cmp
nop
bound
inc
in
inc
fmuls
xor
push
fucomip
mov
es
inc
shl
pusha
or
dec
out
sar
pop
xlat
cmp
cmp
sub
sub
mov
adc
sub
adc
lcall
in
dec
out
lods
mov
push
pop
sahf
cs
inc
cmp
jo
cwtl
lods
sub
sahf
fwait
ja
push
mov
inc
sub
inc
ret
cld
push
cmp
xchg
dec
xchg
push
add
cltd
dec
es
cld
xor
dec
mov
popa
push
outsl
and
addr16
sahf
pop
mov
or
scas
cmp
pop
int3
cmovnp
cli
cmp
cld
jl,pt
push
mov
xchg
sbbl
pop
aam
lcall
push
cmp
dec
push
aaa
test
dec
dec
adc
sbb
in
mov
dec
arpl
sub
std
in
loop
dec
mov
push
fs
add
outsb
jp
adc
test
xor
cmp
and
iret
bound
lock
repz
sub
sbb
lea
adc
push
xor
lods
pop
ret
bound
lcall
lret
aas
mov
or
les
add
jge
xor
xlat
int3
jnp
out
lods
lret
sarl
dec
icebp
xor
lock
pushf
xchg
stos
test
or
jno
scas
jl
adc
xchg
mov
data16
push
mov
fwait
aas
sub
clc
pusha
pop
js
mov
push
sub
cwtl
aam
mov
xchg
stos
or
out
aad
insl
repnz
jecxz
sub
scas
push
sbb
pop
and
and
lods
into
xchg
add
ds
hlt
jp
inc
rcrl
mov
dec
std
mov
mov
inc
push
add
dec
nop
and
pop
cmc
pop
lods
lcall
jo
inc
fld
jbe
cli
ret
add
cmp
ja
xorl
lds
in
mov
inc
push
ljmp
ljmp
hlt
pop
fwait
xchg
repnz
movsl
sbb
or
or
imul
jne
mov
imull
stc
fucomip
in
sbb
in
and
jne
mov
jecxz
and
push
dec
mov
mov
adc
inc
sbb
mov
inc
and
in
xchg
inc
leave
lret
jle
imul
ljmp
rcrb
mov
loopne
leave
xor
lods
jno
inc
push
xchg
adc
jnp
icebp
into
je
jge
jp
jns
fidivrl
mov
mov
jge
pusha
cmpsb
and
xchg
cmpsl
adcl
dec
jge
jo
mov
or
inc
mov
pop
xor
jae
fs
test
xor
cmp
push
jnp
orl
or
ljmp
push
aam
sbb
xchg
jb
mov
popa
add
das
and
dec
dec
mov
cmp
add
ret
add
cmp
adc
mov
inc
xor
in
in
fisttpll
mov
jns
mov
pop
inc
dec
sbb
jg
mov
cmp
mov
add
movsb
sbb
xchg
mov
cld
fmull
jno
fwait
orb
sub
adc
inc
daa
les
add
adc
mov
lds
pop
stos
enter
pop
xor
notb
imul
fdivrl
shlw
aad
fcomps
push
add
cmc
and
int
fnstenv
in
cltd
mov
sarl
loop
push
mov
xchg
or
add
mov
push
rolb
sbb
mov
fisubs
xor
cltd
push
xchg
inc
addr16
aam
insl
mov
ror
xlat
ret
cli
pop
sahf
mov
jns
cmp
out
or
popf
lret
test
xor
add
nop
fidivs
mov
cmc
into
loop
sahf
cld
pop
sub
and
adc
aad
aas
or
test
push
mov
ljmp
cmp
arpl
sub
fwait
xor
sub
decl
jo
and
testb
fisttps
xchg
mov
xchg
lahf
mov
aaa
jmp
jbe
test
xchg
bound
xchg
pop
into
jne
in
aas
insb
xchg
mov
sti
repz
dec
inc
test
bound
std
call
xor
sar
lahf
jo
xor
mov
loopne
xor
out
or
rol
lret
testb
adc
out
lret
mov
cmp
sub
int3
and
and
ror
mov
and
mov
cwtl
ja
jno
call
pop
mov
pop
adc
test
push
xchg
dec
mov
inc
xlat
add
or
add
loop
pusha
test
jg
mov
push
sub
es
jo
sti
xchg
fidivrl
push
out
addr16
push
push
shlb
cs
scas
xchg
xchg
xor
ret
sub
push
xchg
add
mov
movsb
aam
pop
stos
les
push
dec
fxch
hlt
mov
pop
fimull
daa
xor
cmp
xchg
jmp
imull
push
cli
xor
repnz
call
and
xor
pop
or
add
ss
xchg
lods
bound
xchg
lods
pusha
jl
jl
sub
jns
pop
mov
scas
lret
aam
or
jbe,pn
sbb
or
bound
mov
or
lret
aaa
subb
sub
pop
jge
mov
sbb
loopne
inc
cmp
inc
cmp
daa
call
gs
xor
pusha
add
xchg
hlt
inc
shlb
fistpl
repnz
repz
push
popf
cmp
xlat
in
outsb
ss
push
xchg
push
jb
in
push
nop
pop
push
adc
push
repz
lcall
xor
outsl
enter
mov
pop
lock
mov
mov
push
lds
pop
dec
pop
pushf
fcmovu
xor
mov
sar
pop
lock
leave
faddp
nop
aad
sahf
mov
mov
aam
jae
jae
inc
pop
jecxz
push
enter
sub
test
sbb
adc
jo
js
xor
insl
mov
negl
mov
lcall
xor
mov
lea
sbb
mov
mov
movsb
loopne
stos
addr16
pop
pop
cmp
clc
and
mov
jl
repz
mov
cmpsl
movsl
mov
sub
cmp
movsl
fiadds
and
cmp
cmpb
test
xchg
or
push
xchg
xlat
imul
fldcw
mov
adc
adc
nop
or
mov
rorl
dec
fadd
enter
xor
add
outsl
dec
addl
rorl
xchg
mov
mov
add
mov
fidivs
loope
push
dec
cmp
fs
adc
movsl
stc
aam
test
jg
outsb
mov
aaa
jmp
sti
sub
loope
or
lea
sbbb
sbb
insb
orl
push
jo
das
jno
test
pop
mov
mov
xor
sar
mov
xchg
xor
push
ret
sbb
adc
js,pt
stos
repz
pusha
hlt
xchg
movsb
add
mov
jnp
int3
shl
arpl
push
movsw
push
shll
aam
daa
mov
sub
lock
adc
sbb
out
mov
cmp
mov
push
ret
pop
repz
les
je
int
push
dec
cmp
xchg
or
mov
not
popf
jbe
pusha
jge
xor
imull
lds
int
ss
pop
lods
jae
jae
aas
into
xorl
test
fnsave
ret
jbe
mov
out
in
jmp
cmpsl
mov
pop
mov
fsubrl
dec
pop
ret
ds
fsubrs
dec
jne
repz
notb
fldt
pop
push
in
sub
subl
sbb
push
or
fwait
jg
addb
addr16
dec
clc
movsl
shll
and
lds
fdivp
stos
divl
and
subl
and
mov
mov
push
xchg
mov
leave
sbbb
scas
in
pop
cmpsl
add
enter
imul
lret
push
imul
je
div
lcall
mov
or
pop
jge
out
jnp
cmp
insl
lock
inc
cmp
das
in
gs
mov
dec
hlt
xor
push
lea
push
in
es
aas
outsl
aam
out
xchg
fildll
js
xor
js
push
sub
stc
sub
xchg
jo
inc
inc
jae
aaa
jmp
in
mov
push
and
xor
fsubrl
test
pushf
mov
pop
jae
dec
negl
mov
mov
and
fbld
jmp
and
xchg
add
lcall
or
add
es
and
lods
imul
rorl
daa
bnd
into
mov
lods
sbb
in
dec
mov
movsb
adc
xchg
dec
sub
xchg
je
lods
jnp
orb
scas
mov
push
mov
dec
rcrb
inc
js
inc
cmp
shll
jne
roll
ret
daa
cmp
cmpsb
push
dec
and
idiv
pop
in
in
arpl
pop
push
fistps
push
mov
insb
xlat
enter
ja
push
pminub
fld1
dec
pop
jmp
jno
mov
ret
mov
daa
jecxz
lods
das
push
mov
stos
or
dec
mov
repz
scas
ret
pop
into
inc
call
ficoms
outsb
movsb
push
or
cmpsl
mov
jne
pop
je
xchg
lock
iret
das
imul
js
push
xchg
les
jbe
jnp
cld
sahf
jo
jno
inc
lea
xor
cli
inc
jle
aas
jo
loopne
dec
daa
addl
jge
sbb
cltd
sub
test
fildll
imul
adc
push
fadd
dec
push
push
repz
mov
or
add
inc
pushw
gs
mov
outsl
pop
jle
cmp
adc
push
nop
push
bound
addb
arpl
movsl
not
aaa
mov
and
jae
popl
mov
shlb
mov
fidivrs
mov
mov
and
jl
pop
ss
pop
ljmp
sub
add
addr16
ret
jl
lret
dec
imul
sbb
inc
out
xchg
and
cmpsl
cmc
push
in
aad
lds
pop
movsl
pop
xchg
aaa
test
jne
gs
push
testl
adc
push
in
aad
lds
pop
movsl
pop
xchg
aaa
test
jne
gs
push
testl
adc
push
in
aad
lds
pop
movsl
pop
xchg
xor
push
repz
out
xchg
and
addr16
push
in
jg
lds
ret
js
dec
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
and
mov
inc
xchg
xor
inc
out
jbe
inc
lds
inc
dec
xor
and
ret
jne
les
inc
xchg
xor
movsb
sub
inc
in
frstor
movsl
xor
and
int
frstor
lea
mov
push
cmc
dec
sbb
ret
inc
out
loope
xor
and
push
mov
pushf
cmp
xchg
mov
cs
insl
clc
test
aam
dec
cmpsb
hlt
and
mov
inc
ljmp
mov
imul
pop
sbb
es
flds
pop
push
hlt
mov
cmp
inc
inc
pop
sahf
inc
jecxz
add
aam
adc
outsl
inc
mov
xchg
adc
pusha
jo
add
xchg
mov
int
xor
cmp
les
inc
and
aam
stc
pop
mov
xor
mov
mov
lcall
push
popl
cmpsb
mov
scas
aam
adc
aam
and
adc
les
and
inc
test
mov
dec
insb
xlat
jge
or
sbb
xor
cmp
or
nop
jmp
inc
and
or
push
loope
in
aam
les
xchg
es
loopne
ljmp
xchg
inc
nop
xor
ja
inc
lock
mov
cmp
sub
jns
and
push
cmc
inc
in
aad
lds
and
aam
les
push
in
xchg
xor
movsb
add
je
lds
and
aam
pop
xor
push
test
or
lahf
mov
test
mov
cmp
mov
mov
xlat
leave
mov
cs
mov
xor
and
cmp
data16
xor
sub
adc
or
enter
pop
cmpsb
incl
enter
stos
xchg
lcall
or
mov
mov
sbb
lahf
fstps
mov
sub
clc
jle
mov
dec
hlt
xchg
cmp
loop
test
jne
cmp
xchg
xchg
ror
sbb
and
stc
and
aaa
adc
addl
adc
mov
sti
int
lcall
pop
dec
fs
das
mov
jge
push
hlt
add
mov
xor
push
int3
push
jno
fstpl
fmul
stc
pop
sbb
iret
inc
add
ficoml
and
push
mov
jne
repz
dec
jmp
scas
dec
push
mov
or
jnp
aaa
push
sub
test
add
xchg
andb
push
in
dec
pop
jo
push
lods
test
xchg
test
cmpb
push
sahf
sbb
adc
in
adc
adc
or
lods
int3
fs
sub
mov
test
stos
inc
aaa
mov
mov
fldl
int3
xor
mov
leave
xchg
sub
xchg
mov
outsb
push
cmp
add
and
xor
leave
push
mov
out
call
push
push
mov
cmpsl
inc
sbb
push
sarb
mov
jb
scas
mov
fsts
call
mov
adc
mov
das
jecxz
jmp
stos
and
mov
mov
sub
ljmp
cs
es
inc
jle
lods
pop
hlt
scas
out
add
xchg
lods
pop
insl
or
jmp
insb
fcmovu
inc
bound
mov
mov
dec
xlat
sub
and
sti
shl
xchg
rcr
jne
add
out
xor
fstpl
test
lea
cli
sub
dec
xchg
fidivl
in
mov
ret
cmpsb
mov
and
dec
je
sahf
xchg
push
jge
addr16
push
addr16
lds
adc
cmpsl
adc
rolb
sub
push
lret
inc
shl
pop
push
mov
popf
xchg
and
xchg
filds
outsb
mov
aaa
leave
add
hlt
frstor
push
and
mov
ret
mov
mov
push
push
xor
in
mov
xchg
test
mov
push
adc
popa
jecxz
pop
jecxz
sarl
ficoms
repz
lahf
push
leave
sbbb
decb
inc
xchg
pavgw
outsb
cmp
mov
xchg
iret
or
or
fsubs
xchg
rol
xor
sahf
and
push
cmpsb
mov
mov
icebp
jl
push
les
aas
rclb
jo
out
jae
xor
ja
mov
sti
int3
pop
add
fsubrl
fsubrl
ljmp
into
lods
lods
mov
adc
pop
lret
js
popf
cli
xchg
xor
insl
fs
mov
lds
lahf
shl
and
push
pop
or
push
push
xchg
mov
jo
push
fsubr
jecxz
test
adc
and
cmp
ret
jecxz,pt
pop
add
jmp
add
mov
mov
mov
inc
adc
dec
jae
js
int
jno
mov
pop
aaa
mov
pop
sbb
pop
add
jg
imul
andl
sub
dec
xchg
sarb
pop
cs
jnp
push
mov
fstpl
cwtl
idivb
mov
test
test
jl
movl
xchg
jbe
xchg
pop
pop
popf
incb
and
pusha
shll
sar
sbb
rcrb
cmp
jmp
mov
and
mov
mov
sbb
jne
xor
repz
xchg
rorl
movsb
mov
out
scas
nop
cs
mov
pop
inc
mov
mov
andb
iret
add
divb
sub
loop
and
imul
in
adc
cmp
pusha
jno
xor
fadds
aas
jno
cmp
add
pushf
push
adc
dec
shlb
stos
sub
jns
enter
popa
je
arpl
js
and
es
pop
inc
mov
xchg
xor
or
fs
inc
xor
enter
jmp
pop
jae
imul
imul
stos
or
imul
in
pop
lods
les
into
dec
scas
loopne
xor
jbe
xchg
fcomip
test
xchg
andb
jo
add
fbstp
and
mov
sub
rcrl
test
int3
and
inc
je
test
mov
sarb
dec
nop
cs
xchg
push
lods
xor
leave
pop
je
popf
imul
jle
loopne
pop
rcrl
stos
loopne
in
pop
dec
xor
jb
lea
fstl
cmpsl
ret
xchg
vpunpckhdq
pop
mov
daa
push
cmc
xor
pusha
and
xor
mov
xor
mov
cmp
outsl
mov
lret
sub
or
sbbl
test
mov
jle
push
jbe
adc
xchg
lock
cld
icebp
fistpl
pop
pop
ret
cmp
xchg
mov
sub
addb
xor
mov
test
add
mov
sbb
sub
xchg
inc
jecxz
pop
insb
dec
lea
add
outsl
xor
test
loopne
dec
ret
stos
jl
mov
ja
sbb
movsl
inc
or
jo
mov
adc
repz
rcrl
jnp
ja
mov
push
pusha
lret
pusha
sbb
pushl
int3
ljmp
pop
imull
adc
dec
insb
cmp
test
cmpsl
decb
stos
repz
sti
mov
les
cli
inc
stos
stos
mov
xchg
pop
dec
das
jecxz
adc
inc
jno
adc
xchg
pop
fs
push
cmp
popa
pop
push
xchg
into
inc
push
pop
dec
add
les
add
dec
rcrb
jp
mov
clc
push
push
insl
lods
scas
ret
insb
roll
test
daa
pop
add
and
sbb
adcb
push
lods
inc
push
cmp
pop
lock
dec
xlat
mov
cltd
jo
add
sbb
lret
test
inc
xor
mov
lahf
xor
xchg
scas
out
xchg
sub
sub
cmp
insb
ljmp
divb
popa
cli
xor
xor
arpl
push
les
cli
jge
pop
pop
mov
bnd
pushf
ja
sahf
sbbl
out
pop
pop
jle
or
xchg
mov
data16
pop
cmp
fisttps
leave
or
sub
lahf
sbb
mov
inc
sbb
stc
mov
jge
jnp
xchg
fstpl
test
in
fbstp
xchg
pop
je
add
data16
aas
movsl
add
filds
sub
push
mov
or
jb
xor
mov
pop
add
cmc
jecxz
sahf
sbb
and
jnp
cmc
iret
xlat
mov
ss
pop
add
xor
jmp
sub
fs
mov
sarl
stos
add
mov
shlb
pop
out
aam
sub
out
inc
pushl
adc
add
cmc
xchg
dec
mov
or
dec
cltd
sbb
rcrb
les
and
in
cwtl
dec
pop
leave
insb
push
icebp
adc
mov
sbb
fs
mov
mov
cli
inc
xor
cltd
fcmovnu
or
xor
bswap
xchg
sti
cmp
and
seto
mov
out
mov
inc
fdivr
mov
cmpsb
sbb
ljmp
sub
mov
push
xor
push
cmp
insb
repz
or
adcb
pop
adc
pop
in
inc
jle
mov
xlat
push
or
rcrb
mov
xor
bound
xchg
sarl
cld
pop
movsb
sbb
push
dec
dec
push
lods
push
adc
shl
or
aas
aam
pop
push
dec
jecxz
cmpsl
loope
test
jle
lds
mov
pop
sar
es
pop
sbb
cmp
jle
xchg
sub
je
pop
aad
mov
xchg
fbstp
push
das
jg
mov
mov
adc
mov
sbb
sbb
push
js
in
imul
mov
jg
inc
arpl
hlt
cmp
push
popl
xchg
xor
aaa
aas
cli
rcll
add
ficoml
int
addr16
outsb
ret
mov
add
pop
mov
insb
jae
jns
popf
mov
cmc
add
loopne
cmpl
outsb
xor
cmp
cmp
mov
unpckhps
ss
fwait
dec
outsb
clc
data16
enter
xchg
out
inc
adc
jne
rolb
movsb
mov
pop
adc
xor
jmp
sub
mov
xor
rcl
adc
inc
fcomp
ret
jne
rclb
mov
aaa
stos
loopne
pop
inc
mov
mov
stos
pop
and
int3
rorl
sahf
mov
je
je
jno
inc
sub
mov
ljmp
add
lods
xor
inc
shll
cwtl
out
cmp
pushf
dec
mov
jmp
sub
repz
lea
bound
repnz
ja
and
add
mov
dec
jb
mov
stos
mov
xor
hlt
xchg
fidivrl
fisubrs
jle
jb
mov
ficoml
adc
movb
aam
not
and
cmp
xchg
repnz
sub
outsb
pop
icebp
sbb
push
mov
ret
and
out
mov
std
xchg
cltd
pop
mov
jb
cmp
jge
add
aad
fimull
fbld
lea
out
and
adc
outsb
adc
xchg
xchg
out
cli
outsb
or
mov
fwait
mov
cmpsl
loope
ljmp
sub
adc
addr16
xlat
stos
outsb
lcall
mov
mov
lahf
int
mov
or
add
dec
mov
pop
gs
xor
mov
shl
fs
pop
dec
aaa
and
dec
repz
das
or
push
lahf
and
or
loope
fisubs
and
dec
sarb
and
pop
fs
mull
ret
sub
mov
gs
cwtl
cmp
hlt
sbb
sub
push
mov
dec
cli
mov
inc
dec
in
push
jl
mov
xor
sbb
and
pop
ret
xchg
pop
jb
sbb
cs
pop
jae
pusha
repz
loopne
imul
xchg
or
dec
pop
add
mov
gs
inc
sbb
test
and
push
fistl
ret
orb
iret
add
jb
fnstsw
int3
fstp
test
int
outsb
pop
xchg
or
pop
leave
popf
pop
add
pop
fbstp
or
call
xchg
add
cmp
faddl
xchg
gs
cld
sub
add
dec
add
sub
scas
das
loop
arpl
push
sbb
int
lds
xlat
jno
cmp
and
movsb
out
push
xchg
mov
lcall
or
sbb
inc
push
adc
gs
ret
mov
popa
cmp
mov
mov
or
je
cmc
bound
xchg
imul
les
dec
repnz
jo
inc
mov
addr16
xor
fadds
push
mov
push
call
jp
dec
sub
jle
push
lock
stos
or
cwtl
and
adc
mov
jns
xchg
inc
jae
push
and
mov
fmul
outsb
push
decl
jbe
pop
cwtl
lret
out
repz
mul
push
into
ss
fwait
in
push
jge
push
dec
scas
mov
scas
xchg
adcl
andb
inc
xchg
mov
cmova
pop
cmp
pusha
cmp
cltd
push
or
sub
inc
adc
lea
pushf
icebp
xchg
xlat
jmp
xor
and
iret
mov
fisttpll
cwtl
aas
cmp
add
cld
out
xor
cli
adc
xor
pop
or
jl
dec
cmp
frndint
push
push
xor
push
xchg
dec
idivl
or
scas
mov
div
jp
jo
shlb
jmp
cwtl
jo
hlt
test
shr
jp
xlat
stc
xchg
mov
sbb
xchg
rcl
std
ss
push
pop
xchg
aaa
mov
push
js
orb
in
xor
mov
push
push
dec
imul
out
jno
cmp
cmp
pop
nop
int3
lcall
push
jg
jno
inc
push
mov
inc
fisubrl
xchg
ret
test
movsb
repnz
jge
gs
xchg
dec
mov
sahf
lods
jl
inc
mov
andl
sub
sub
add
jae
hlt
stos
push
enter
enter
push
and
jno
xor
lds
cmp
xchg
into
pushf
inc
jne
lcall
adc
push
mov
mov
push
pop
inc
cs
xor
sub
mulb
jg
xor
ret
sbb
jg
stos
xor
out
bound
mov
aaa
ss
test
rol
add
addr16
popf
push
pop
call
xchg
dec
rol
in
sbb
test
jo
sbb
push
adc
iret
outsl
push
push
mov
clc
push
push
ds
test
inc
es
insb
xchg
xor
sub
mov
cmc
pusha
and
mov
in
clc
dec
xchg
xor
push
sbb
adc
jg
test
mov
and
push
rcll
sub
aad
imul
cmp
mov
dec
sti
pusha
push
sbbb
xchg
mov
popf
fucomi
sbb
mov
or
fistps
mov
fnsave
xor
inc
dec
out
insb
push
iret
in
xchg
and
mov
repz
imul
shlb
pop
int
movlps
roll
dec
cmpsl
outsb
mov
push
ss
or
iret
push
jmp
sbb
and
add
fstl
inc
or
sub
out
pop
inc
shlb
cmp
fmul
lahf
in
fists
clc
shlb
int
inc
fs
sarb
inc
push
flds
push
xchg
cwtl
outsb
sbb
or
xor
pop
xor
push
pop
add
push
cltd
mov
mov
mov
insb
xchg
in
test
dec
lcall
xchg
lret
or
in
pop
int3
imul
push
movsl
sub
gs
dec
xchg
xorb
jge
or
shlb
dec
add
or
cltd
mov
xor
mov
jmp
mov
mov
ja
mov
pop
dec
sub
out
mov
divl
cmp
inc
xchg
xor
aad
mov
ja
lea
add
in
push
jle
les
int3
imul
sbb
stos
or
jmp
push
mov
repz
adc
movsl
mov
lock
ds
into
push
mov
mov
rolb
out
andl
push
nop
push
pop
out
dec
jg
aad
jg
mov
adc
movsl
cmp
pushl
sub
jge
push
pushf
jecxz
dec
test
sbb
sahf
mov
scas
inc
les
mov
push
push
fnstcw
adc
push
andl
xor
movsl
push
rcrb
test
xor
sbb
lret
xor
pop
and
mov
pop
mov
fs
push
dec
or
and
je
jge
pushf
xchg
es
or
cmp
mov
cld
fcmovne
data16
sub
cwtl
mov
ljmp
in
dec
and
add
sbb
ret
jns
xor
imul
popa
add
jp
or
and
movsl
in
in
decl
xor
mov
jmp
xor
es
fidivrl
mov
mov
shr
sbb
inc
outsb
jp
adc
jg
mov
pop
test
pop
lcall
and
mov
jecxz
imul
fstl
insb
jnp
in
mov
push
aaa
icebp
adc
mov
push
cmpsl
fsubrl
and
dec
rolb
jmp
or
jecxz
mov
jmp
xchg
dec
sbb
stc
pop
push
add
shlb
xor
into
mov
imul
mov
xor
push
adc
mov
xchg
into
push
shlb
jmp
lods
xor
jmp
out
loope
nop
mov
jle
sub
adc
fistpll
popf
mov
pushf
addr16
jne
negb
dec
xchg
mov
fistpl
aad
and
adc
mov
data16
inc
fidivrs
rolb
mov
dec
xor
addr16
cmp
popf
popf
jnp
loop
rcrl
popf
cli
pusha
adc
xchg
sbb
les
dec
repnz
js
test
cmp
aas
das
mov
loope
xor
mov
mov
popa
iret
and
pop
or
clc
not
stos
sub
hlt
jmp
or
into
xchg
fidivs
cmp
test
and
mov
mov
and
out
popf
sbb
roll
gs
out
inc
negb
lods
imul
sti
sarl
sbb
sbb
daa
mov
nop
mov
out
shlb
jmp
or
lahf
je
mov
test
xor
icebp
nop
and
cmpsl
sub
aaa
or
mov
or
dec
movsl
pop
cmp
add
adc
mov
inc
xor
jl
push
and
add
enter
or
jnp
sbbl
iret
or
xchg
jp
xchg
inc
ja
jmp
adc
xchg
cmp
mov
or
lea
cwtl
push
pop
aas
popa
push
int
cmp
test
out
loopne
or
xchg
mov
jae
mov
addr16
out
popf
jp
lea
mov
in
xchg
push
xchg
sub
sbb
dec
movsl
sarl
add
push
mov
les
dec
repz
sbb
adc
sub
shlb
add
and
repnz
mov
inc
pop
fwait
sub
push
int3
lods
rcrl
or
push
test
jbe
and
pop
scas
insb
into
dec
stos
icebp
mov
sub
repnz
int
xor
sub
xor
lret
aas
inc
cmp
jns
enter
pop
jbe
xchg
in
pop
insl
xor
pop
jl
call
add
mov
inc
rorb
pusha
add
cmp
ret
out
sbb
rcrl
cmp
xchg
pop
dec
aad
rcll
in
sbb
cwtl
jmp
dec
or
negb
jno
sbb
mov
and
inc
xor
gs
or
js
or
stos
mov
xchg
push
jle
add
mov
mov
out
loopne
fwait
lret
data16
xor
cmp
sub
lcall
jge
cli
sbb
push
fsin
or
push
out
cmp
cmp
stos
mov
cli
rol
fiadds
mov
ret
xchg
repnz
inc
nop
lea
pop
insb
lcall
ret
mov
dec
orl
lahf
scas
out
lret
pop
sub
je
subb
fsubrl
pop
cmp
pmulhuw
mov
popf
mov
adcb
and
or
ss
push
dec
mov
jnp
xor
push
or
les
int3
dec
cltd
movsl
scas
xlat
fucomi
mov
repnz
int3
pop
mov
sub
push
xor
mov
mov
pop
scas
cmp
je
xor
out
mov
fstpl
sti
mov
mull
jl
movsb
sbb
das
out
sbb
faddp
and
and
movsl
lret
mov
xor
push
repnz
jbe
sarl
pusha
fisttps
test
lods
jne
inc
out
push
jmp
mov
sbb
pop
adc
mov
out
clc
cld
stos
inc
sbb
sub
insl
pop
mov
ret
xchg
imul
push
jl
fwait
popf
out
or
cmp
pop
push
sub
mul
add
or
cmp
xor
push
addb
repz
add
divb
and
cmp
sarb
fs
cmp
add
daa
push
push
mov
test
xor
mov
in
idivl
and
or
bsf
into
jmp
dec
jmp
je
sahf
fcoms
xchg
and
inc
iret
xchg
add
add
xchg
sbb
xchg
and
sbb
insl
or
insb
dec
sub
push
mov
fnstenv
sarb
in
xchg
xor
movsb
add
je
lds
and
aam
les
push
in
xchg
xor
movsb
add
je
lds
and
aam
les
dec
in
xchg
xor
movsb
add
jo
fs
adc
add
loopne
lock
xor
and
stos
or
mov
int
in
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
inc
and
adc
xchg
pop
test
mov
movsl
aad
movsb
lds
gs
push
push
and
gs
in
cmc
rol
aad
rol
cmc
test
xchg
adc
inc
and
xor
xchg
in
mov
cmpsb
jmp
pop
sub
xor
push
sahf
adc
pop
or
negb
js
movsl
push
sahf
gs
fdivrs
sarl
cmc
stos
or
cmp
shrb
shr
hlt
cmp
mov
or
sti
or
mov
xchg
in
hlt
dec
ret
iret
sub
dec
mov
call
movsb
add
push
xor
xchg
sbb
push
sub
out
ljmp
pop
out
scas
dec
fidivl
adc
movsl
cmp
adc
cmp
arpl
lds
push
mov
vpxor
dec
mov
sub
mov
in
test
jne
inc
and
xor
xchg
in
cmc
mov
movsl
aad
movsl
lds
push
gs
or
add
adc
bound
adc
popa
aam
sub
mov
lods
repnz
mov
push
or
gs
sub
push
gs
addb
mov
xchg
and
and
es
and
jne
gs
mov
movsl
aad
movsl
lds
adc
inc
and
xor
xchg
in
cmc
mov
movsl
aad
movsl
lds
adc
sub
xchg
shr
mov
push
jp
cld
cmc
bnd
mov
add
fidivs
jl
pop
les
ficomps
loop
or
xchg
lcall
and
mov
imul
or
clc
mov
scas
xor
in
cli
pop
mov
sub
leave
xchg
sti
sbb
xor
or
rcrl
repz
mov
pusha
andl
sub
mov
insl
lock
ss
andb
iret
mov
inc
test
pop
cmp
push
jle
insb
sbb
sahf
cmpsb
add
mov
adc
lret
mov
shl
pop
sub
shll
loopne
mov
pop
ds
pushf
cmpsb
xchg
lds
out
jp
in
ss
pop
repnz
cmp
cmc
pop
mov
push
mov
add
xchg
push
xchg
inc
clc
pop
fidivs
data16
mov
loopne
movsb
leave
adc
dec
and
xor
adc
in
cmp
mov
push
pop
fwait
pop
and
iret
fcomp
xlat
popf
pop
sub
inc
and
cmpsl
arpl
dec
cltd
mov
inc
lahf
jne
push
popa
push
dec
jmp
das
addr16
and
pusha
lds
sub
mov
xchg
je
inc
icebp
repz
icebp
lods
test
cmc
dec
shlb
jae
inc
xor
fcompl
mov
inc
mov
jg
mov
sbb
testb
testl
mov
and
imul
mov
pop
and
aaa
add
push
out
adc
adc
and
mov
push
pop
jo
cli
arpl
out
aas
or
icebp
adc
adc
adc
jmp
fcomp
mov
adc
push
push
fbstp
push
jg
cmp
sub
xor
push
xchg
xor
into
fcmovu
add
cwtl
stos
loope
sub
dec
xlat
lret
adc
xchg
lahf
in
mov
jp
mov
jge
or
int
jns
pop
stos
aas
sub
vmovupd
mov
push
movsl
dec
call
movsl
iret
and
call
jbe
xchg
dec
popf
jnp
test
push
add
imul
stos
lods
pusha
ja
push
int
mov
add
pop
cwtl
jnp
mov
lds
out
out
mov
outsb
jae
add
cli
xchg
pop
dec
or
in
sub
les
push
or
push
xor
jno
add
jge
pushf
add
mov
sbbl
lock
movsb
dec
lcall
xchg
lea
mov
mov
divl
sub
inc
and
or
aas
mov
sarl
jae
and
adc
outsl
imul
out
and
testb
aad
sbb
stos
sbbb
jno
jno
lds
stos
mov
cmp
dec
dec
rol
mov
inc
fwait
or
push
ja
ljmp
fsubrs
add
dec
loopne
je
test
pop
jmp
mov
pusha
mov
ret
or
mov
lahf
int
rcr
xchg
test
xor
rolb
jmp
push
out
cmpsl
or
stc
push
int
popf
push
pop
mov
xchg
sbb
and
in
in
repnz
cmp
xor
nop
movsb
xchg
ja
xchg
add
popa
dec
push
pop
repnz
mov
cmp
jmp
pop
add
jecxz
lcall
mov
aas
stc
aas
adc
arpl
insb
div
in
insb
js
shlb
mov
cli
inc
adc
mull
in
fs
push
ljmp
xor
jns
dec
cmp
mov
add
adc
lock
jnp
clc
jmp
je
jnp
fnstsw
clc
outsb
scas
or
add
xor
aad
fisubs
sub
xchg
pop
mov
sub
pop
and
insb
mov
jmp
push
imul
in
pop
xchg
loopne
pusha
test
bnd
jecxz
fwait
inc
sub
mov
cmp
mov
adc
jb
addr16
int3
gs
push
fisubrl
push
jg
in
aad
flds
insl
lret
das
adc
mov
ds
inc
jno
mov
inc
das
or
cmp
pop
sub
xchg
stos
push
mov
sbb
mov
mov
test
pusha
sbb
sub
jne
movsb
ror
push
push
and
xchg
push
xchg
push
adc
cmpsl
fisttps
push
vcmpsd
mov
hlt
jmp
mov
mov
fsubs
add
push
stos
inc
mov
loopne
lock
stc
incl
fucomip
sub
mov
fcomps
xlat
rcrl
fadds
les
pushf
push
cmc
rep
outsl
cwtl
push
push
in
loope
mov
gs
adcb
jecxz
jno
and
xchg
mov
adc
cltd
mov
movsl
test
xor
icebp
sub
xchg
and
js
push
push
push
push
hlt
jmp
nop
fdivl
xchg
dec
mov
ljmp
ror
es
cmp
pop
cltd
scas
loopne
int3
push
sub
aad
stos
xchg
and
sahf
or
icebp
sub
or
cmp
jl
pushf
jp
mov
arpl
mov
pusha
xchg
sbb
lea
fcompl
add
add
into
lea
leave
and
or
pop
push
cmp
and
jmp
add
ret
shlb
sub
xor
and
and
fcmovnu
jae
push
loopne
mov
cmpsb
add
es
inc
and
sbb
ret
into
xchg
pop
push
pop
lea
pop
dec
sub
xor
jno
lahf
test
fisubl
out
xchg
arpl
dec
rcr
inc
imul
lods
sahf
inc
push
dec
pop
out
std
inc
call
xchg
add
sarl
push
inc
sahf
stc
lret
cmp
pop
jmp
jmp
stos
dec
mov
stos
dec
xorb
lea
cmc
idivl
dec
jo
dec
cmpsb
mov
leave
push
adc
jecxz
mov
pop
popf
jecxz
stos
bound
gs
stc
stc
pop
mov
mov
xchg
jle
pop
lret
iret
cmp
adc
mov
adc
mov
cmp
push
mov
outsb
push
adc
mov
xchg
negb
mov
jle
add
xchg
xchg
adc
in
adc
cwtl
mov
popa
mov
jmp
fsts
out
xchg
out
cltd
aam
stos
rcrl
cmp
add
loopne
shl
nop
jno
sub
idiv
push
xchg
adc
test
stos
aam
lds
mov
mov
mov
leave
xchg
js
and
test
mov
xor
cmp
scas
sub
clc
mov
arpl
push
xchg
out
negb
fsubrl
cli
adc
sub
inc
xor
aam
xchg
mov
mov
faddl
sub
cmp
pop
push
clc
cmp
cmp
mov
in
jnp
add
jo
pusha
imul
jle
ds
icebp
dec
or
cmp
cmp
dec
inc
call
adc
cmp
mov
push
or
pop
xor
mov
ss
mov
pop
jbe
sub
dec
lods
out
stos
in
loop
mov
xorb
enter
lock
sahf
ficompl
fidivrs
pop
or
cmp
test
ret
sbb
pop
mov
nop
sbb
shrl
xchg
push
icebp
add
sub
shr
mov
cmpsb
inc
lds
lock
xor
adc
sub
and
sahf
xor
stos
cltd
int3
xor
mov
adc
inc
data16
sbb
xor
push
leave
clc
jecxz
ds
lock
pusha
stc
pushl
nop
xlat
das
insb
inc
bound
into
mov
in
or
lea
insb
cs
stc
aas
cs
lds
int3
cmp
int3
movsl
pop
xchg
jmp
nop
arpl
rcr
xor
mov
add
stos
mov
imul
ss
out
idivl
or
and
in
inc
jb
add
jmp
test
out
popf
fldl
adc
roll
jnp
xchg
and
clc
ss
insl
xchg
xor
lods
dec
in
aam
movsb
lock
jge
sahf
ss
out
lock
pop
mov
out
movsb
aam
iret
and
test
call
jl
in
dec
or
mov
in
fwait
cmp
sbb
xor
rorl
in
rcrl
idiv
das
jmp
sub
ja
mov
pop
mov
test
outsb
rcrb
xchg
bnd
pop
aam
cmp
dec
hlt
pushf
leave
lahf
mov
loopne,pn
add
loopne
int3
lods
adc
mov
pop
xor
xor
lret
push
idiv
test
push
mov
jb
sub
jno
sbb
test
lods
fsubrs
jge
in
mov
jbe
into
pushf
bound
adc
cmpsb
cmp
and
scas
sahf
push
push
mov
sbb
xchg
or
rorl
adc
dec
out
jo
mov
fwait
and
cmp
shll
insb
xor
subb
into
mov
jle
jmp
pop
jl
xchg
push
and
sbb
dec
stos
cmpsl
test
loop
sbb
push
out
std
stos
shll
scas
dec
lret
xchg
aas
mov
pushf
dec
pop
and
out
pop
call
xor
lret
fimuls
jno
jecxz
leave
popf
sub
sub
pusha
mov
insb
add
pop
sbb
mov
add
xchg
dec
sbb
daa
xor
pop
sub
xchg
sub
fldl
xor
adc
push
jmp
je
notb
into
mov
cli
rolb
dec
mov
test
mov
in
clc
repz
cmp
mov
xchg
mov
sti
dec
and
add
xchg
or
or
xor
mov
popf
ds
cmp
mov
push
sbb
pop
popw
imul
cld
mov
sub
mov
insb
push
inc
arpl
jl
jmp
inc
mov
jmp
cld
and
and
int3
mov
jne
mov
out
scas
nop
mov
mov
mov
cmp
jb
pop
xor
imul
ds
stos
xor
cs
test
add
lahf
or
xor
or
xchg
das
push
dec
fldt
int
fmuls
push
adc
and
stos
or
int3
and
pop
sub
adc
sbb
out
outsb
call
or
cli
push
inc
cmp
into
sbb
pop
dec
dec
lods
jnp
fnsave
dec
cmp
frstor
add
sbb
clc
pop
call
clc
cltd
hlt
sbb
xlat
jnp
adc
out
adc
test
xor
fldcw
loope
push
sbb
pusha
icebp
and
fists
lea
sub
mov
mov
pop
dec
mov
mov
lods
loope
repnz
and
or
popf
and
sub
sarl
cltd
jmp
scas
fsubp
leave
and
and
lds
mov
add
das
inc
push
lret
fildll
nop
and
push
cmp
adc
xchg
jmp
clc
sti
pop
imul
push
fildll
jl
mov
ljmp
jnp
push
fistpll
repnz
jbe
jnp
movsl
mov
add
jnp
push
lods
jmp
shr
sub
mov
cli
jmp
and
jge
fs
cmp
loop
mov
cwtl
sbb
pusha
shll
or
adc
jp
rorb
dec
cltd
negb
pop
gs
mov
inc
jmp
lock
xchg
inc
je
xor
and
fisubl
test
inc
je
pop
cmp
inc
or
adc
sub
cmp
daa
jge
inc
aaa
shll
ret
sbb
mov
add
ret
dec
pop
fistpll
jg
cli
dec
and
jmp
iret
xchg
inc
push
and
mov
inc
xchg
mov
repnz
inc
les
js
data16
cmpsl
ss
arpl
jne
jp
cmp
mov
cmpsb
xor
fldcw
lret
sub
inc
call
fldpi
nop
insl
or
rol
push
cmc
jge
mov
mov
ja
and
test
ficoms
sbb
std
lahf
outsb
popa
cmp
xchg
xchg
sub
testl
andl
pop
scas
lcall
insl
adc
repz
pop
lds
xor
dec
xor
inc
dec
fnstenv
lods
fisubrl
and
xchg
adc
cmp
es
das
divl
leave
loope
xor
pop
into
jg
hlt
adc
cmpb
mov
jo
mov
ds
jae
aad
pushf
jecxz
mov
jl
sar
mov
aaa
sub
stc
out
dec
hlt
cwtl
pop
shrb
movsb
stos
sbb
xchg
jmp
pop
rcll
mov
push
clc
fnstsw
adc
nop
jae
and
insl
mov
fbld
pop
cs
jbe
mov
add
pop
xchg
std
out
mov
mov
pop
lret
cmp
adc
xchg
mov
pop
fiadds
daa
xchg
mov
call
jns
loope
fdivl
and
xchg
pop
sub
out
jmp
push
mov
out
add
push
ds
cltd
sbb
test
cmp
jge
int
push
pop
stc
xchg
jg
add
xor
push
sub
stos
adc
fmuls
push
movsl
push
jge
xor
push
aas
sub
jge
inc
or
mov
sbb
stos
js
cmp
or
hlt
dec
pop
into
fmull
inc
aad
jmp
fiaddl
iret
clc
leave
xor
and
jnp
inc
hlt
mov
mov
loop
add
ficomps
int
int3
ds
sbb
insb
push
inc
lock
sbb
sti
fsts
push
fidivrs
ret
inc
cli
call
xchg
arpl
sbb
js
xchg
adc
adc
popa
lea
data16
mov
mov
mov
inc
push
xor
lock
xor
mov
lds
movsl
mov
iret
fnsave
inc
push
icebp
adc
and
mov
pop
push
xor
in
sahf
cli
cmc
out
orb
in
in
ret
adc
push
cmp
in
jge
xor
jns
xchg
dec
jl
push
dec
and
jne
mull
orb
mov
mov
imul
add
out
inc
sbb
or
lds
in
ret
jae
rolb
mov
jl
mov
popa
jbe
dec
inc
les
adc
or
pop
outsl
sbb
movsb
sbb
mov
dec
mov
ret
int
mov
jne
add
dec
rolb
in
xor
pop
or
push
cs
mov
mov
nop
inc
rcrb
gs
dec
cmp
dec
sbb
pop
push
pop
pop
insb
sbb
cmp
aam
push
push
mov
or
subl
popa
mov
icebp
push
jno
in
fs
adc
jne
rcrl
cmp
popl
or
cltd
xor
imul
mov
inc
adc
fists
or
fcompl
mov
push
addb
shlb
js
inc
push
or
ucomiss
cmp
ds
data16
fldl
push
jo
adc
xor
nop
sub
gs
ljmp
push
cmc
cltd
and
in
add
inc
sub
das
fadd
jb
jno
mov
pushf
cmp
xchg
sbb
inc
lret
stc
fs
nop
lret
mov
adc
cmpsl
add
dec
fucom
and
shlb
dec
outsb
xchg
and
sbb
mov
push
sbb
mov
and
pop
cmp
adc
lret
stos
in
decl
inc
pop
aad
jb
in
mov
mov
sbb
jo
not
fs
hlt
cld
sar
mov
jmp
jae
repnz
aad
rorl
subl
push
or
fbstp
xchg
sub
test
push
daa
inc
and
inc
xchg
xlat
push
fimull
orb
jle
cli
fdivrl
push
inc
lret
inc
idivb
mov
jb
int3
inc
lea
or
imul
jb
gs
inc
les
mov
loope
addl
inc
dec
dec
loopne
mov
add
rcll
ja
mov
push
nop
xchg
pusha
mov
arpl
sbb
mov
lret
cld
cmp
jns
shlb
fs
jbe
data16
pop
ja
sbb
jno
imul
stos
fs
adc
pop
sbb
or
insl
cmp
fadd
in
cmp
sub
or
sub
dec
lcall
inc
lds
sub
out
jl
lcall
test
and
out
inc
lahf
sub
mov
xlat
dec
fwait
and
push
fists
mov
inc
shrb
inc
sbb
sbb
lods
fnstsw
mov
in
jo
insl
mov
xor
movl
enter
jae
mov
enter
pop
pop
pop
add
pop
leave
popf
jae
loopne
mov
mov
xchg
inc
in
ds
adc
fwait
mov
inc
inc
jnp
in
cltd
jmp
fcoms
cwtl
stos
lods
out
test
daa
mov
xor
inc
add
scas
sti
mov
jnp
imul
xchg
lret
pop
repnz
scas
loope
sub
inc
inc
ja
out
int
test
adc
xor
jecxz
push
sub
dec
add
pop
pop
sahf
out
lods
pop
loope
dec
jecxz
jb
pop
into
jecxz
mov
cmp
mov
shrl
adc
adc
mov
cs
test
jno
cmp
inc
add
subl
test
arpl
adc
xchg
pop
dec
aas
hlt
rcl
cmpb
jb
push
or
xor
mov
fcomps
and
rcl
xorb
push
scas
sub
adc
es
mov
gs
cmp
pop
aam
xchg
xor
mov
sub
aaa
jecxz
adc
push
xor
cltd
loope
fmulp
aam
sbb
xor
mov
jb
js
adc
pop
or
iret
decb
cmc
push
lods
imul
pop
push
sub
mov
sbb
inc
push
scas
outsb
fs
add
les
lret
inc
fisubs
sbb
out
leave
mov
mov
sbb
int3
cmp
jp
pop
out
enter
add
pop
mov
insl
mov
mov
xchg
pop
mov
out
outsb
loop
cmpb
lea
push
mov
enter
mov
idivb
es
xor
pushf
test
rolb
imul
xchg
aas
clc
sbb
push
mov
push
sarb
jno
jecxz
jae
loop
int
fisubl
ds
jo
push
fs
dec
insl
dec
out
cld
and
aas
inc
push
fstpt
nop
jb
cmpsb
inc
flds
xor
enter
add
icebp
jne
mov
cmp
mov
lods
scas
jne
push
jle
out
imul
mov
and
mov
stos
mov
sub
fcompl
enter
gs
hlt
mov
sub
xlat
cmpsl
in
add
jl
jle
int3
out
gs
sub
nop
icebp
andb
sbb
push
xchg
mov
cltd
xor
cmp
in
movsb
pusha
outsl
stc
loope
xor
out
jmp
add
pop
int
mov
lods
test
outsb
test
xchg
cs
lahf
xor
add
adc
and
mov
adc
mov
cli
and
xlat
mov
imulb
mov
inc
lea
hlt
mov
cmp
inc
push
lcall
int
ss
and
sub
loope
pop
pop
xor
lret
cmp
inc
stc
cmpsb
insl
lret
lahf
lret
call
imul
inc
jge
stc
add
xor
jo
rolb
ficoml
sub
lcall
cli
jle
decl
push
xor
pop
call
mov
and
pop
jp
out
subb
or
pop
mov
loope
ja
mov
jns
stos
dec
icebp
enter
mov
mov
leave
aam
stc
call
or
rcr
js
cmp
pop
adc
dec
in
push
sbb
imul
subb
jb
jnp
ds
test
jo
xchg
sbb
cwtl
jbe
xor
push
cmpl
test
cmpsb
rclb
sahf
jns
lods
sub
jecxz
jnp
loope
out
sub
mov
jne
inc
and
xor
xchg
in
cmc
mov
movsl
aad
movsl
lds
adc
inc
and
xor
xchg
in
cmc
mov
movsl
aad
movsl
lds
adc
inc
and
xor
xchg
in
cmc
mov
movsl
aad
movsl
lds
adc
inc
and
xor
xchg
in
pop
pop
lds
dec
or
push
sub
xchg
sbb
in
sti
pop
imul
jne
inc
int
ffree
sub
xchg
sbb
lds
pop
and
lea
std
inc
int
fstpl
or
xchg
jge
dec
aad
inc
xchg
push
loope
std
jo
push
mov
or
lret
sub
cld
icebp
loope
cmc
mov
bound
cwtl
lret
jne
inc
inc
push
adc
and
adc
lret
xchg
jne
dec
inc
pop
push
rcll
inc
fldl
sub
stos
and
lock
cli
xorl
mov
int
out
jae
xor
pop
jne
xor
lea
imul
pusha
or
or
insb
cmc
insl
cmp
test
jae
bound
xor
pop
mov
shll
jge
dec
mov
or
jno
scas
and
pop
lea
sub
test
push
cmp
xor
adc
or
push
sub
xchg
sbb
lds
pop
jecxz
scas
mov
sub
int
fwait
int3
inc
out
icebp
dec
in
pop
mov
fwait
cmp
sub
sub
pusha
jecxz
repz
sbbb
sub
xor
testl
sbbb
roll
fldt
sbb
sbb
leave
jge
dec
in
imul
lods
xor
popf
gs
jne
inc
int
frstor
or
cmc
jge
dec
aad
and
lea
std
inc
int
frstor
call
sub
ja
dec
mov
jns
ds
ret
xchg
scas
pushf
cmp
cmp
dec
lcall
test
rcr
std
xor
or
fstpt
fmuls
mov
sbb
xor
lret
adc
add
fwait
mov
cld
push
pcmpeqb
push
push
sti
cmp
add
ja
repnz
stos
xchg
mov
ret
fldenv
inc
popf
dec
dec
pop
mov
loopne
test
jmp
xchg
xchg
add
jns
jnp
xlat
jge
jae
pop
mov
xchg
inc
or
push
cmp
pop
mov
sahf
sub
push
fdivrp
sbb
movsb
and
and
jns
jle
pusha
xchg
jp
add
fnstenv
jg
sti
sub
adc
fwait
and
das
inc
add
repnz
xchg
sti
popf
push
xchg
sub
and
and
and
mov
jno
add
sub
aam
cs
adc
jecxz
jae
cld
mov
sub
mov
movsl
mov
adc
stos
in
nop
add
and
pop
icebp
jl
pop
push
xchg
adc
mov
jle
clc
fistpll
fiaddl
or
cmp
xlat
les
sub
inc
loopne
cs
mov
push
dec
cmp
mov
push
aaa
or
lahf
cli
jmp
xchg
js
fs
outsb
lock
loop
loop
cmp
cmp
stc
dec
std
les
adc
ss
dec
or
fnstsw
mov
jno
xor
adc
push
adc
insl
rclb
inc
mov
adc
in
adc
pop
push
sbb
loop
adc
pop
arpl
mov
repz
xchg
ret
inc
jns
or
incl
pop
arpl
fimuls
jl
mov
xchg
dec
push
pcmpeqw
sub
lock
int3
sbb
sub
repz
pop
cmp
mov
repz
aam
out
sarl
push
sarb
jmp
cltd
sbb
cltd
popa
jne
sahf
repz
arpl
lods
mov
inc
cs
mov
jp
ds
ja
mov
popa
aas
and
xor
mov
mov
test
movsl
push
imull
sarb
add
or
xlat
push
xchg
inc
std
bound
cmp
pusha
repnz
int3
sbb
mov
push
in
int
jb
sti
aam
sub
add
js
pusha
hlt
jnp
push
mov
sar
push
adc
cmc
sti
shll
stc
push
sbb
ss
shll
sbb
and
mov
dec
push
fldenv
mov
imul
and
pop
movsb
adc
mov
mov
dec
or
dec
aaa
pop
sbbb
ficoms
fsubr
xchg
cmp
lea
call
les
clc
pushl
outsl
loop
inc
pop
movsb
imul
adc
jl
repz
cwtl
fidivs
mov
cmp
mov
sbb
iret
push
int
pop
sar
addb
fcomip
jecxz
jns
iret
push
outsb
sbb
inc
sar
rcll
inc
loopne
add
cmp
pop
rorl
push
or
push
sub
jge
mov
cmp
imul
pop
and
add
sub
jo
aaa
lcall
arpl
test
lock
daa
dec
cmpsl
xor
cmp
aaa
loope
push
adcb
jmp
sbb
je
js
fcomip
mov
fnstsw
movb
fisubl
lods
aas
sbb
push
imul
dec
popfw
dec
dec
and
xchg
insb
jo
mov
andb
addr16
sbb
clc
popf
xor
lcall
clc
xor
jmp
out
sub
divl
adc
push
pop
add
jne
dec
and
pop
leave
mov
xchg
mov
sub
cmp
cmp
or
into
sbb
xorl
or
xchg
repz
pop
addb
sub
popf
out
mov
je
sbb
and
fwait
mov
notl
clc
pop
lock
in
je
mov
dec
jge
jbe
jns
aad
cmp
mov
jno
inc
scas
inc
adc
push
add
out
js
jbe
ljmp
ss
stc
out
mov
aaa
pushf
clc
mov
lret
or
lea
repz
movsb
xchg
xchg
out
lcall
mov
push
lods
movsl
scas
testb
pop
popf
push
mov
mov
cmp
and
out
or
out
xor
pop
insl
cmpsl
and
lahf
pop
push
loope
adc
sbb
mov
std
mov
cmp
sti
and
test
shll
loop
pop
pusha
testl
fistl
subl
in
cmpsb
adc
lret
bound
xor
and
jmp
push
ds
rcll
jae
adc
call
mov
aad
fsubrp
push
aas
fmull
pop
adc
push
inc
push
inc
cmc
cmp
je
xchg
pop
mov
fldl
xchg
jae
clc
mov
push
push
ret
push
add
jnp
sub
push
sub
lret
addr16
call
mov
xor
mov
or
leave
in
pop
dec
sar
push
mov
mov
imul
sub
jae
mov
cltd
cmc
fs
pop
jo
xor
ja
imul
in
pop
repz
pushf
das
sub
jp
mov
xor
sub
scas
dec
push
jmp
inc
add
adc
jne
outsb
pop
test
cmpl
out
test
xchg
or
adc
push
fstpl
mov
xchg
hlt
lea
pushf
push
rcrl
fs
or
mov
outsl
fdivrl
dec
mov
cwtl
mov
jo
xor
mov
sbb
mov
stos
andb
ljmp
jmp
sbb
cmp
jge
call
orl
sub
das
mov
hlt
dec
mov
imul
push
jae
notl
jbe
cli
dec
test
and
and
cltd
out
xorl
xchg
adc
cmpb
data16
loope
jne
lcall
add
mov
stos
push
pusha
enter
lret
mov
test
ja
push
pop
add
ljmp
xchg
mov
dec
ss
lea
xlat
insb
cmp
test
pop
mov
aam
cmc
cltd
mov
hlt
add
cld
in
addb
jmp
dec
and
into
jo
mov
out
jb
adc
push
xlat
sbbb
bswap
xorb
and
in
jae
or
nop
cmp
xor
lods
adcb
xor
nop
dec
in
test
lock
jno
inc
out
push
add
negb
shll
test
adc
lock
addr16
mov
adc
icebp
mov
add
test
bound
pop
lret
das
push
or
jge
ret
mov
lods
xchg
fcmove
mov
jbe
fs
mov
pop
sbb
adcb
or
popl
lcall
mov
hlt
xor
or
shl
stos
or
popa
sbb
jl
xchg
add
mov
lahf
mov
pop
fmull
or
add
push
mov
mov
cli
in
cs
arpl
cmpsb
cmp
and
ja
pop
js
popa
mov
add
xlat
xchg
mov
mov
cmp
jae
sti
jbe
sub
addr16
fisttps
mov
xchg
xchg
add
push
pushf
popl
mull
or
inc
emms
jo
sbb
mov
movsb
test
stc
nop
addb
add
and
adc
cltd
popf
fsts
fsubs
mov
loope
mov
push
imul
icebp
pusha
adcb
in
cmc
inc
pop
jle
mov
and
cs
mov
mov
mov
mov
mov
fcoms
jns
insl
mov
add
push
add
test
out
dec
cmpsl
dec
out
in
jnp
lcall
jns
pop
xor
or
addl
and
sub
xorl
cmp
call
sbb
mov
inc
mov
decl
sub
sub
hlt
or
lock
nop
add
aas
jns
xchg
xchg
jmp
mov
dec
xchg
add
jmp
pop
arpl
and
orb
push
jns
call
je
js
pop
das
mov
out
out
call
xchg
in
xor
aam
pop
adc
ret
ljmp
jp
loop
jbe
loop
addps
mov
scas
call
decl
lret
das
xchg
push
leave
je
pop
fldenv
arpl
inc
shlb
add
cmp
fs
repnz
ret
aas
lea
incb
repz
adc
adc
push
fs
mov
repnz
out
lods
lret
imul
mov
xchg
div
jns
shlb
push
jle
sti
mov
push
dec
in
pop
inc
adc
loopne
pop
mov
inc
daa
insl
cmp
push
lds
xchg
stos
push
cli
mov
loopne
xchg
push
dec
xchg
popa
out
mov
sahf
ljmp
jecxz
dec
inc
fs
stc
imul
dec
imul
cld
push
stos
dec
pop
cltd
dec
stos
icebp
mov
or
mov
loopne
and
das
and
ja
mov
jp
push
cltd
inc
pusha
push
nop
out
mov
cmpsl
pop
lods
nop
cmp
int3
and
jno
adc
sub
dec
sub
jle
sub
xlat
mov
add
mov
xchg
add
faddp
jecxz
sbb
lods
mov
hlt
ret
adc
sahf
fld
adc
mov
jg
fnsave
mov
pop
mov
inc
inc
push
pusha
jmp
out
mov
xchg
shlb
push
mov
js
dec
mov
insl
or
push
push
test
inc
jp
mov
sub
jle
out
push
pop
inc
das
outsl
xlat
adc
ds
sti
lret
mov
dec
jp
in
aas
jle
js
sub
add
clc
mov
aam
pushf
jp
sbb
lods
and
movsl
push
lfs
xchg
push
mov
xchg
cltd
mov
sar
mov
idivb
push
add
sub
fistps
divl
dec
ja
jnp
icebp
add
jbe
pop
daa
mov
xor
push
fnstcw
scas
stos
fsubr
inc
cld
lahf
adc
jae
fdiv
sbb
cwtl
bound
mov
push
and
out
lahf
mov
mov
pop
lods
adc
xchg
jae
icebp
fs
jo
call
aad
mov
push
mov
xor
xor
xor
dec
js
add
mov
out
lea
call
ss
popf
mov
dec
xlat
into
sbb
fwait
jl
xor
push
cld
inc
or
add
dec
add
sbb
mov
jl
pop
out
or
sub
xchg
xor
inc
mov
sahf
pop
icebp
mov
or
ret
push
imul
cmp
pop
enter
mov
mov
or
js
pop
loopne
ret
out
dec
cld
adc
ss
andb
jl
xchg
pop
leave
std
cld
jecxz
dec
cwtl
or
pop
add
sbb
adc
sbb
jl
add
push
inc
insb
aam
jno
test
xchg
mov
xchg
idivb
pop
push
sbb
push
stos
lahf
icebp
push
test
test
xchg
dec
int
les
push
jb
iret
xor
jbe
popa
lcall
cmp
movsb
shl
repz
out
jne
push
add
xor
sub
arpl
ret
pop
push
inc
imul
pop
mov
cmpsb
mov
sbb
cli
pop
push
dec
mov
hlt
add
pop
lock
gs
addr16
jle
fwait
jae
js,pt
test
rcl
jmp
sbb
sbb
xchg
pop
and
and
ficoms
cmp
repz
or
mov
pop
xor
lods
lret
shrb
and
mov
jmp
loope
loop
sarl
cmp
xchg
cld
pop
xchg
mov
xor
inc
push
and
xchg
inc
stos
fmuls
sbb
fmul
mov
dec
push
popf
dec
xor
mov
push
movsl
inc
cmp
test
or
pop
add
cmpsb
stos
faddl
mov
push
mov
sti
lock
fwait
popf
out
dec
leave
sbb
or
adc
inc
jl
mov
lcall
cmc
lods
ljmp
mov
int3
dec
ljmp
sarb
es
mov
sub
mov
fmuls
mov
subb
pop
push
inc
fmulp
icebp
jb
testb
dec
inc
adc
and
push
jb
pop
mov
push
hlt
xchg
fcmovne
fdivrs
mov
into
and
or
dec
outsl
ja
push
dec
cmp
xchg
hlt
cltd
or
push
movsb
mov
lahf
test
adc
or
and
xorl
sub
sub
mov
fcoml
aad
jnp
mov
or
sbb
fistpl
test
push
adcl
ds
lods
mov
in
iret
add
lret
and
rorl
in
cmpsl
pop
adc
dec
fisubrl
mov
pop
and
lea
push
out
loope
adc
sub
dec
lods
ss
mov
idiv
pop
xchg
add
addl
pop
mov
jmp
sub
hlt
sbb
in
lock
push
test
jmp
sub
pop
sbb
roll
xor
sbbl
pusha
jbe
ret
fs
sub
fstpt
nop
fsts
adc
pop
into
movsl
mov
popa
xchg
mov
lea
roll
pop
pop
jno
push
imul
stos
push
out
or
movsb
sbb
pusha
movsb
jo
jo
movsl
sahf
adc
pop
leave
loop
lods
ficompl
cmp
jmp
jno
mov
sbb
or
in
out
repz
enter
jecxz
testl
shrb
dec
scas
push
mov
fisubrl
loop
insl
cmpsl
test
stos
sbb
lea
shll
jp
xlat
mov
andb
popa
sahf
adc
or
adc
daa
ret
outsb
ret
sahf
int
mov
adc
mov
fs
add
bound
and
pushf
ret
dec
mov
jmp
imul
clc
inc
mov
mov
pop
fs
add
sbb
fwait
sub
mov
in
loop
rcrl
or
leave
xchg
movsl
dec
mov
xchg
adc
jno
sbb
adc
out
push
push
adc
adc
bound
push
stos
pushf
fldcw
xchg
push
jb
add
clc
inc
les
cs
jns
out
out
les
cmpl
push
js
scas
unpckhps
imul
mov
dec
xor
sub
js
lahf
xchg
scas
pop
push
jl
idiv
sbb
lock
mov
mov
and
aas
lahf
sti
call
pop
mov
hlt
ljmp
add
ja
mov
xor
inc
jge
outsb
sbb
inc
push
sbb
mov
inc
sub
inc
sub
test
je
push
and
cmp
fidivs
out
fs
and
mov
idivl
sub
in
push
or
cli
pop
mov
xor
divb
push
inc
dec
jo
push
xor
push
sbb
lock
push
sti
ja
add
cmpsl
dec
lods
jne
das
ljmp
std
out
shrb
pop
in
mov
cmp
cmpsb
in
mov
adcb
or
outsl
fbld
pop
or
je
daa
mov
push
sub
and
ret
jnp
scas
ror
rcl
insb
cli
test
lea
lock
mov
and
out
das
ja
xrelease
mov
fiaddl
and
and
rcr
sbb
mov
or
js
pop
insl
lods
add
push
xlat
out
idiv
sub
out
xor
daa
mov
popa
pop
das
std
mov
ficoms
loopne
dec
leave
je
mov
enter
and
out
lock
cmc
roll
dec
xor
pop
stos
and
dec
icebp
fsts
xchg
stos
imul
xor
sbbb
mov
daa
fcoms
cltd
imulb
adc
repz
push
scas
pop
jbe
fsubr
mov
and
sub
mov
or
cltd
int3
sbb
aad
scas
push
ss
in
jg
inc
ret
dec
testl
jecxz
push
int3
xchg
sbb
cltd
jle
leave
mov
jno
sbb
jl
jle
test
cmc
push
outsb
shr
mov
test
cmp
aas
push
add
push
mov
or
out
fs
in
cwtl
gs
test
movsb
sub
push
sbbb
out
mov
dec
mov
sbb
imul
xchg
xchg
leave
xor
push
xchg
cmpsb
je
inc
dec
add
popa
mov
outsl
sub
xor
pop
add
dec
xchg
das
cmp
ds
cs
mov
fstpl
outsb
fidivl
mov
or
in
xor
cmp
jno
sub
cmp
xchg
adc
xchg
mov
out
add
and
mov
movntq
xlat
std
ds
int
cmc
hlt
hlt
loope
ss
cmpsl
aas
lret
jecxz
lret
sbb
ja
mov
add
arpl
mov
adc
popf
dec
sbb
addl
rcr
or
adc
xacquire
xchg
mov
push
stos
sbb
movb
dec
sahf
stos
mov
insb
pop
xor
mov
jno
pusha
xor
jnp
in
mov
das
fstpl
xor
inc
xchg
sub
insb
adc
mov
or
mov
jecxz
or
sti
dec
xor
fcmovb
loope
fistps
ljmp
jmp
cwtl
pop
cmp
sub
hlt
adcb
out
xor
xchg
pop
mov
pop
mov
fists
fwait
leave
sbb
lock
xchg
das
dec
shlb
push
push
insb
and
call
daa
test
xorb
and
scas
push
mov
and
mov
adc
and
cmpsb
orb
mov
cmp
mov
add
std
out
sbb
je
add
dec
dec
mov
shlb
xchg
dec
adc
ja
popa
xor
jecxz
jmp
lock
xchg
aam
loop
adc
sbb
gs
sub
daa
out
pop
push
jl
cmp
cmp
ss
popa
lock
pop
push
nop
mov
adc
mov
xor
xor
pushf
cmp
cmp
pusha
decl
dec
faddl
fcmovnb
and
repnz
ffree
insb
mov
outsl
mov
in
push
add
push
dec
arpl
ret
sub
or
std
stos
and
addr16
dec
cmp
push
and
out
sbb
or
and
adc
insb
inc
sbb
push
fmulp
mov
xchg
nop
push
mov
pusha
fs
fwait
xchg
cmp
sti
add
out
inc
leave
rcll
sub
pop
stos
ret
ds
fsubl
and
aam
push
int
mov
xchg
clc
fidivrs
aas
loop
shll
mov
dec
xchg
add
rol
frstor
sbb
sbb
push
repnz
cld
xor
out
scas
into
cmp
jge
and
mov
dec
ds
adc
mov
shl
push
xchg
rcrb
lock
sub
or
stos
adc
loope
pushf
inc
data16
add
out
push
inc
imul
into
pop
dec
notl
orl
xlat
jp
in
xorl
nop
pop
bound
pop
push
jae
fidivrl
rclb
inc
push
les
xchg
mov
out
jecxz
adc
lahf
adc
jmp
sbb
insl
xor
ss
subb
dec
push
cli
mov
sbb
sbb
push
hlt
jbe
mov
mov
xor
aas
cmpsb
rorb
stos
xlat
aas
bound
jne
outsb
jp
xor
dec
push
in
jne
pop
xor
or
arpl
subl
dec
jmp
jg
xchg
adc
imul
shll
in
test
stc
jb
loopne
fstl
jno
mov
rorb
js
cmp
in
cmc
jge
dec
aad
and
lea
std
inc
int
frstor
or
cmc
jge
dec
aad
and
lea
std
inc
int
frstor
or
cmc
jge
dec
adc
mov
gs
gs
inc
int
fnsave
or
in
vandnpd
scas
lea
add
xor
sti
sbb
imul
in
mov
bnd
jns
or
cmp
inc
sti
adc
and
fmull
jnp
push
mov
fcomi
rep
loop
xchg
dec
sbbl
fisubl
xchg
push
cmpl
fidivs
jge
cmp
lret
bound
cltd
fs
inc
ss
rcl
outsl
imul
pop
xchg
adc
pop
inc
add
sbb
cmpsb
xor
aas
mov
jnp
jnp
mov
dec
xor
das
jbe
xor
pop
jb
loop
lcall
push
xchg
into
cmp
insl
sbb
sbb
std
cmp
fwait
cmp
por
lret
adc
and
xchg
movsb
loop
sbb
in
mov
mov
sbb
stos
andl
xchg
pop
or
arpl
xlat
les
jmp
xor
xchg
sub
dec
repz
imul
subb
mov
popa
lret
inc
int3
jb
push
loope
mov
xor
push
inc
sub
adc
and
or
jl
ja
and
inc
mov
andl
adcl
in
dec
sub
push
push
mov
clc
arpl
ljmp
cmp
jns
je
inc
jecxz
and
and
xor
ret
imul
xchg
or
cmp
inc
sti
adc
and
repnz
xchg
or
cmp
xchg
cmp
push
pop
inc
push
xchg
fnsave
aad
cmp
xor
push
adc
mov
jmp
arpl
imul
and
push
orl
out
call
fnstsw
popa
mov
test
pop
bnd
jbe
xchg
shll
lret
pop
lods
push
ror
xor
and
stos
xchg
dec
sbb
jno
mov
or
mov
ja
cli
loopne
pop
movsb
adc
add
pop
jp
sbb
rcrl
xbegin
sub
jbe
outsb
xchg
lahf
xchg
xchg
fidivs
stc
aad
leave
cmp
stos
jecxz
loop
mov
jmp
sbb
pop
and
and
mov
arpl
mov
pop
mov
pop
fistps
int3
mov
adc
jecxz
rcrb
icebp
outsl
pop
cmp
pop
icebp
out
inc
sbb
jl
insl
loopne
mov
mov
and
inc
xorl
sbb
ret
or
or
insb
clc
mov
cmp
sbb
or
xchg
sub
imul
sub
sbb
std
pop
mov
xchg
ret
stos
fmull
into
mov
sahf
outsl
daa
pop
daa
cmp
mov
adc
or
in
popl
mov
inc
loopne
xor
aam
or
es
add
js
push
or
ljmp
mov
push
mov
cli
mov
sahf
sbb
xor
lods
inc
jb
lret
addr16
subl
mov
out
lret
jae
add
iret
inc
pop
xchg
sub
jmp
out
sbb
mov
loop
sbb
dec
sub
hlt
cmpsl
pop
insb
inc
cwtl
roll
sarl
lahf
mov
mov
loop
shlb
sbb
scas
add
sub
scas
insb
sbb
mov
stc
pop
outsb
jecxz
cmpsl
mov
push
cmp
out
push
das
fs
sbb
test
sub
pop
in
mov
inc
ljmp
or
mov
add
xor
aam
cld
mov
dec
dec
mov
andl
lds
test
xor
push
cmp
pop
ficomps
out
and
repz
aas
in
cmp
inc
mov
and
mov
xchg
sarb
jns
fs
pop
lahf
addr16
je
push
test
and
test
jns
stos
ret
loopne
mov
or
push
sbbl
ret
sbb
aas
nop
fsubp
jg
sar
out
imul
out
shrb
insb
nop
lods
fmull
lods
pushf
mov
push
and
sbb
pop
ret
pop
mov
pop
test
movb
mov
sub
outsl
xlat
add
neg
sti
xchg
pushf
clc
and
jnp
imulb
pop
ljmp
xchg
mov
int
hlt
repz
pushf
stos
dec
lret
daa
into
ret
popa
mov
frstpm(287
pcmpeqd
jle
fdivrl
and
mov
out
sub
pop
cmp
repz
pop
cwtl
addr16
clc
orb
outsb
ss
repz
dec
add
lahf
je
push
pop
fsubl
roll
addb
and
push
ja
xchg
pop
movsl
mulb
mov
and
lds
jp
insl
sbb
sarl
orl
pop
xor
and
cmp
lcall
insl
inc
sub
dec
push
stos
jno
sbb
mov
enter
rorb
rclb
and
scas
sbb
shlb
int
fdivrs
xchg
in
push
xlat
xor
int3
mov
dec
stc
pop
mov
aam
mov
ljmp
xchg
and
jg
pop
xchg
pop
mov
rorl
test
mov
in
mov
popa
and
cmp
jmp
test
xchg
adc
repnz
xchg
xchg
int3
mov
lods
roll
cmp
loope
jae
inc
js
pop
and
ss
fwait
xor
dec
pusha
mov
jl
ja
mov
stos
mov
add
adc
call
push
sbb
jmp
ret
add
sbb
cwtl
cmp
mov
xchg
sbb
repnz
popf
mov
lods
pop
movsl
jb
and
sbb
mov
mov
pop
in
sahf
jne
and
mov
out
fs
xchg
xchg
jne
mov
sub
pop
rorl
mov
dec
inc
xor
lret
push
or
jns
in
add
and
aas
add
mov
pusha
sbb
cmpsb
jge
lret
xor
xor
inc
std
sbb
lahf
clc
inc
mov
cmpsb
test
xchg
cmp
or
cmp
cmp
loope
test
pop
jo
cld
std
jge
ret
push
jno
mov
jb
xlat
push
and
pop
enter
cmp
jbe
out
mov
xchg
sub
jne
jno
mov
mov
pop
cld
andl
into
enter
xor
adc
pop
mov
dec
cmp
push
pop
mov
nop
outsl
mov
lods
in
lcall
rol
outsl
mov
sub
js
cmpsl
cmc
mov
loopne
xor
xchg
and
pushf
dec
ret
pop
mov
lahf
insb
sbb
sub
mov
mov
jno
sbb
mov
mov
jns
icebp
mov
xchg
sub
mov
xchg
shl
lahf
dec
ss
dec
cs
leave
sub
rolb
imul
inc
lds
adc
out
icebp
outsb
imul
and
bound
or
dec
push
cs
into
imul
dec
orb
inc
cmpb
push
fcompl
js
or
add
xor
js
movsb
sbb
cmp
stc
aad
lds
add
xchg
daa
in
pop
fidivrs
cmp
jge
repz
cli
fildll
movsb
push
gs
pushf
cwtl
sub
jno
cmp
jp
mov
adc
mov
sub
jge
ds
cs
dec
clc
data16
fsubrl
in
aaa
loopne
movb
lods
outsb
lods
mov
and
xor
jb
mov
mov
inc
inc
or
inc
jae
mov
push
sbb
mov
jne
sub
xor
pop
stos
test
sbb
xchg
into
mov
mov
clc
cld
mov
lret
jmp
jmp
aaa
jb
rol
int3
pop
fiadds
lahf
mov
loop
in
ljmp
outsb
lods
in
push
sbb
mov
jecxz
sbb
arpl
imul
dec
adc
sub
sbb
les
pop
xlat
aad
scas
mov
pusha
push
les
repz
cmp
jno
mov
in
sahf
addr16
mov
imul
add
scas
daa
add
aaa
adc
loopne
call
ja
pushf
lods
gs
and
fs
mov
cmp
jae
lea
jg
or
and
xor
lock
or
out
lss
jns
xchg
sub
inc
or
bound
scas
sub
xchg
sbb
jns
in
rcll
mov
inc
dec
jns
fcmovnu
mov
xor
test
xchg
jbe
sbb
gs
inc
mov
adc
iret
cmp
outsl
push
mov
or
popa
sbb
iret
sbb
push
jg
jne
cmp
mov
push
adc
mov
lods
iret
push
inc
mov
mov
xchg
lods
jg
fldl
stos
into
ficoml
push
imul
loope
pop
dec
sub
inc
jne
fisttpll
stos
insl
add
out
fadd
movsl
push
rolb
pop
jg
cmpsl
xchg
nop
leave
ja
pop
lret
out
or
pop
movsb
mov
mov
mov
fcoms
xor
adc
sbb
jecxz
sub
push
mov
std
stos
fstps
repz
mov
cmp
fisubrl
insl
aaa
xchg
mov
test
pop
ds
push
push
jle
add
arpl
out
aas
aad
sti
fwait
sub
bound
nop
push
popf
cmp
push
or
xchg
mov
xor
push
push
cmp
and
scas
cmp
stos
cmp
jg
xlat
ficoml
jmp
cmp
pop
inc
int
hlt
mov
sbb
sbb
jae
dec
mov
loope
into
push
sbb
test
stc
mov
cmp
push
mov
mov
cli
psadbw
adc
push
frstor
sbb
nop
fdivp
xchg
mov
lea
jb
not
daa
fmuls
stos
ds
cs
cmpsl
iret
fs
leave
cld
push
mov
das
scas
xchg
sbb
mov
loopne
das
sub
lcall
dec
push
stc
fiadds
and
push
aam
fs
arpl
out
pop
cmpsb
jp
push
xchg
dec
popf
sbb
mov
sbb
lahf
jl
pop
jbe
aad
inc
maskmovq
mull
test
in
popf
jle
rorl
mov
inc
clc
mov
inc
in
js
inc
xchg
cmp
mov
mov
stos
pusha
rolb
mov
dec
jnp
pop
shll
fsubs
xchg
jae
sub
popf
cmp
rorl
push
out
repz
iret
pop
das
jbe
or
repz
or
hlt
inc
xchg
adc
aam
outsb
in
lods
insb
jns
imul
mov
outsb
rorb
cltd
pop
lods
cmp
sbb
je
sub
loop
and
lcall
addr16
pusha
lahf
daa
ficompl
mull
out
sub
xchg
or
mov
pop
adc
fidivrs
je
add
jno
mov
push
jae
mov
mov
or
sarb
jmp
nop
decl
je
int
mov
scas
orl
incl
xchg
xlat
mov
inc
in
dec
mov
mov
repz
add
pop
or
inc
mov
mov
xchg
faddl
popa
or
pop
push
add
ss
sbb
sub
ret
ds
and
frstor
xor
push
pop
arpl
mov
mov
in
loop
pushf
dec
cmc
pop
mov
pop
mov
and
push
das
cmp
leave
ret
ljmp
imul
xor
ficompl
insb
dec
cmp
mov
call
es
inc
xchg
ljmp
js
test
xchg
int3
or
fldlg2
sub
ss
mov
cs
lods
push
pop
cmp
push
inc
fcomps
push
sbb
sub
jno
or
push
jmp
ja
adcb
cmpsl
push
call
aad
xchg
pushf
test
mov
dec
xor
sbb
mov
cmp
into
cmp
inc
and
sub
jge
lret
push
dec
jbe
int
lcall
xchg
pop
or
insb
imul
cmp
ret
in
fdivrp
fnstcw
jmp
mov
lret
sbb
lret
xchg
cli
test
add
mov
push
cmp
mov
fldl
pop
sbb
xchg
ret
pop
xchg
push
cmpsb
add
push
ljmp
and
or
into
xchg
add
into
stos
iret
leave
push
insb
xor
mov
test
push
in
not
jmp
lahf
pop
sbb
lret
dec
das
jbe
jo
xor
mov
push
mov
push
outsl
dec
insb
xlat
aam
jl
jno
pop
mov
fnstcw
xor
add
and
cmpsb
loopne
fnstenv
jno
test
in
fs
inc
imul
stos
add
lods
hlt
ds
call
in
sbbb
sbb
and
mov
inc
imull
sbb
insl
lds
shll
out
and
cmpsl
xor
push
dec
cld
xor
inc
push
addb
cmp
sub
loopne
imul
mov
sbb
aad
dec
and
pop
push
dec
dec
adc
jae
sub
int
ficomps
leave
jmp
inc
mov
cmpxchg
pop
outsb
push
xchg
and
push
and
dec
sbb
inc
aad
sbb
pop
orb
sbb
pop
mov
nop
jge
push
dec
add
into
push
xlat
mov
lret
xchg
inc
mov
cmp
aaa
xor
pop
sub
ret
pop
or
stos
out
ffreep
mov
lret
adc
in
flds
rcrl
vpavgb
xor
jo
sub
pusha
jecxz
and
pop
or
jno
out
rcll
lret
jb
sub
pop
adc
cs
jge
xchg
incb
stc
sub
jg
mov
push
mov
or
cmp
push
dec
cli
or
aam
lock
outsl
leave
cmpsl
in
cmc
inc
dec
pop
mov
sti
out
pop
dec
mov
mov
mov
and
xchg
rcrl
scas
mov
clc
and
movsl
dec
or
push
jne
ss
lret
mov
pop
xchg
lret
fsts
mov
clc
popa
pop
movsl
popf
sbb
cmp
ror
xchg
shll
fadds
jmp
aad
pop
test
in
out
and
xchg
popf
popf
xor
out
ss
insb
or
cld
pop
cmp
frstor
inc
xchg
rcrb
push
jecxz
into
popa
fistl
jnp
in
cmc
das
or
shrb
sarl
mov
sub
andb
fisttpl
xor
aas
filds
jmp
daa
xor
jnp
push
dec
xchg
push
cs
loopne
and
sub
cltd
xchg
xlat
mov
fldt
mull
mov
pusha
jnp
jns
jne
mov
jns
incb
xchg
pop
std
cmpsb
push
data16
pop
jl
in
xor
fldln2
inc
push
lcall
cmpsb
xchg
xor
sub
jo
inc
push
jge
pop
loopne
out
gs
in
cs
adcl
dec
loopne
cmp
bnd
leave
leave
jb
in
popf
add
aam
xchg
or
adc
ss
std
inc
xchg
dec
and
and
insl
mov
lods
negl
fxch
xlat
fisubrl
fs
add
mov
loop
adc
pop
jl
nop
xchg
add
rcll
jns
es
push
mov
jmp
int
pop
pop
mov
in
add
dec
pop
xchg
cmp
sbb
jmp
push
xchg
mov
dec
pop
cmp
jmp
mov
stos
xchg
inc
enter
jmp
adc
cmp
dec
xchg
ret
xor
cmc
cmp
stos
sbb
inc
in
aas
mov
cmpsl
movsl
mov
mov
out
add
mov
xchg
dec
xchg
in
dec
mov
fisubrs
push
dec
xor
sahf
mov
xor
adc
or
push
mov
sbb
sbb
nop
pop
dec
cli
pop
push
jne
pop
aas
adcb
mov
pop
xor
shrl
stos
arpl
jno
add
dec
jbe
push
jo
hlt
cmp
popf
xor
jns
mov
pop
movsl
movsb
push
mov
mov
inc
fisttps
stos
out
pop
xchg
lcall
scas
inc
bound
or
and
jae
cmp
push
push
jns
cmpsb
adc
hlt
inc
dec
lods
sub
cmpsw
adcl
outsl
add
ds
jns
sbb
divl
and
mov
repnz
repnz
xchg
sbb
adc
mov
and
cmc
test
rolb
ljmp
fs
aaa
mov
ret
cmp
jl
and
imul
jge
arpl
lods
popf
out
mov
out
imul
fstpt
addr16
xor
lret
movsl
scas
and
cmpsb
mov
mov
mov
notl
mov
add
xchg
jbe
imul
lret
sbb
lret
hlt
pop
sub
movsw
shrb
push
subb
ds
xor
mov
jo
scas
sub
mov
jae
scas
adc
outsb
sbb
fimull
rcrl
dec
jae
xchg
xchg
in
test
stc
sub
cli
sbb
leave
popa
decl
pmulhw
pop
inc
lahf
aam
rolb
cltd
bound
ss
adc
lcall
fsubrs
out
inc
xor
sbb
js
mov
bound
push
xchg
stc
test
movsb
scas
loope
ja
testl
xchg
sbb
mov
cmp
jmp
into
aad
dec
jno
or
pop
mov
mov
jmp
test
ljmp
fisttps
repnz
pop
jg
aas
xor
mov
fidivrl
mov
mov
add
pop
shll
mov
mov
nop
rcll
imul
add
int3
inc
cwtl
mov
xchg
fcmovbe
mov
lahf
gs
in
ss
ss
jge
out
sbb
inc
into
and
adc
popa
cmc
xchg
arpl
push
mov
pop
fisttpll
mov
sbb
and
ljmp
out
clc
icebp
iret
pop
cltd
push
mov
aam
aas
ljmp
out
aas
add
jb
jg
cmp
mov
test
rsm
test
jg
mov
fsubr
mov
jno
or
mov
dec
or
push
inc
mov
lea
adc
cmpb
mov
sub
inc
bound
pop
cld
sti
adc
sub
mov
sarb
ljmp
mov
sub
hlt
cld
xchg
mov
add
sbb
and
dec
cli
xlat
outsb
hlt
xchg
hlt
jge
cmpsl
incl
fmulp
pop
mov
or
jge
cmp
lcall
cltd
insb
cld
add
ds
aam
lcall
arpl
mov
mov
lcall
xchg
push
cmpsl
add
cmp
in
int3
mov
std
sahf
mov
sahf
jb
xchg
es
cmpsl
dec
imul
cmp
sub
enter
push
or
js
or
push
imul
mov
addr16
lods
sar
jecxz
nop
jg
and
clc
cmp
adc
nop
sub
loopne
mov
adc
mov
mov
addb
fadd
pushl
sbbb
push
lods
das
push
ret
insb
xor
adc
test
jno
adc
sarb
mov
mov
outsl
xchg
push
push
and
adc
repz
test
xchg
test
xchg
push
adc
xor
adc
xorb
mov
xchg
imul
shll
dec
mov
and
add
add
jno
ljmp
add
divl
in
mov
sbb
dec
inc
inc
leave
jle
out
pop
popf
dec
add
mov
xor
jb
push
aas
andb
jbe
jnp
push
mov
mov
xor
data16
push
sub
aad
add
and
and
cmp
lds
mov
popa
mov
decl
mov
cltd
repz
cmp
pop
data16
mov
ss
sub
stc
mov
cmp
outsl
mov
push
push
push
push
stos
and
out
mov
xor
pop
mov
je
hlt
ja
lret
sbb
ret
mov
rolb
push
adc
mov
test
mov
jle
cmpsl
mov
dec
push
ljmp
pop
jno
test
lcall
dec
jno
orl
jb
jns
inc
mov
or
xchg
add
mov
je
mov
in
repz
xchg
dec
mov
xchg
mov
aas
scas
push
push
dec
dec
or
sar
add
pop
or
xchg
xchg
fiadds
test
nop
in
jno
pop
mov
cmpsl
xchg
rcrl
das
mov
popa
out
dec
xor
movsl
sbb
test
xlat
mov
dec
mov
push
inc
jno
or
mov
in
cld
pushf
hlt
and
adc
lret
inc
mov
lods
xchg
or
xor
pusha
in
push
or
sbb
xchg
xor
outsl
incl
testb
lods
imul
mov
pop
xlat
out
hlt
jne
push
rclb
aad
push
cli
push
inc
and
in
sbb
movsl
xlat
cs
push
mov
fsubr
push
mov
xchg
pusha
test
mov
jl
adc
jae
filds
aas
mov
call
xor
add
jle
mov
out
lock
cmp
jno
int
xchg
mov
sub
dec
iret
cltd
xor
jo
inc
jb
movsl
mulb
pop
cli
or
int3
sub
or
mov
adc
xor
sub
pop
mov
insl
pop
lret
inc
xchg
xchg
std
xchg
xchg
repnz
or
cld
aas
push
negl
push
mov
or
ret
pop
cmpsl
jmp
daa
and
arpl
adc
xchg
sbb
mov
mov
push
mov
out
push
idiv
bound
jecxz
int3
movsb
shrl
dec
mov
jge
cmp
mov
fstpt
inc
stos
mov
test
in
repnz
xor
std
inc
repz
sbb
imul
enter
mov
cmp
bnd
fstpt
jle
adc
and
repnz
xchg
or
cmp
inc
sti
adc
and
repnz
xchg
or
cmp
inc
sti
adc
and
sti
imul
xchg
or
cmp
outsb
jmp
sti
adc
mov
icebp
pop
imul
in
or
dec
aam
les
out
test
cmp
xchg
std
mov
add
adc
push
gs
push
cs
ds
movsl
ficoms
mov
sahf
aad
dec
and
jle
bound
push
cs
ds
movsl
ficoms
mov
sahf
aad
lds
jns
add
dec
and
dec
ljmp
cmp
outsb
fisubs
ljmp
dec
and
add
inc
popa
std
popf
cs
leave
mov
jnp
mov
sbb
cmpsb
cmp
jnp
sbb
cs
lods
rcll
xchg
jmp
sbb
adc
sbb
push
xor
movsl
cli
inc
test
push
lds
mov
mov
mov
and
aas
dec
mov
jp
lods
push
in
push
les
adc
pop
lcall
dec
pop
push
push
decb
mov
pop
cmpsb
pop
aad
ljmp
dec
adc
lds
jns
movsl
ficoms
mov
sahf
aad
lds
adc
push
gs
push
cs
push
hlt
lret
cld
out
in
cmc
jmp
divl
aaa
inc
pop
adc
dec
gs
push
add
stos
sarb
loop
shrb
add
add
pop
cmp
push
rorb
jmp
sahf
aad
lds
adc
push
gs
push
cs
ds
movsl
ficoms
mov
sahf
aad
lds
adc
push
gs
push
cs
ds
xorb
cli
out
and
cld
inc
cmpsl
adc
push
cs
icebp
rclb
test
in
push
insl
mov
jecxz
push
mov
fnstsw
push
xchg
and
jns,pn
push
fmul
dec
loop
mov
fsubs
push
cmpsl
cmp
ret
fistps
jge
stos
xchg
push
imul
adc
dec
pop
mov
es
mov
cmp
inc
icebp
jne
adc
scas
jmp
adc
jg
shll
add
mov
mov
dec
inc
outsl
mov
mov
mov
scas
xchg
cmp
cmp
mov
pop
call
aad
les
mov
test
loope
jno
testl
call
and
jbe
pop
mov
dec
sub
lea
mov
test
cmp
movsb
push
xor
mov
es
into
clc
mov
imul
cs
shl
sbb
add
add
push
inc
push
mov
inc
mov
xchg
sbb
jbe
xchg
pop
ficomps
add
mov
sbb
ret
inc
push
lahf
call
lahf
cltd
loope
push
add
sbb
mov
mov
cmp
push
pop
ret
notl
xchg
sub
fstpt
test
lret
mov
fdivr
push
lds
hlt
push
mov
inc
movsl
sub
inc
test
push
repz
sub
xor
fisttpl
xchg
test
xchg
in
pop
inc
pusha
and
aad
outsl
pop
ss
loope
add
xchg
popf
repz
mov
inc
mov
adc
loope
loope
sub
jnp
mov
movsb
sbb
xchg
cld
cmpsb
gs
add
inc
mov
xchg
repnz
jnp
mov
mov
lds
jecxz
outsb
imul
jle
les
loope
aad
aad
aad
shll
sub
push
lahf
fdivrl
push
js
or
xor
push
xchg
jnp
outsl
or
stos
aaa
stc
shlb
jbe
repnz
mov
mov
inc
xlat
mov
andl
scas
lea
push
add
lcall
je
leave
xor
lods
aad
fisubrs
out
cmpsb
sub
in
pop
sub
sbb
icebp
cmp
jl
xlat
and
test
aam
decb
pop
fcompl
add
xor
stos
inc
scas
or
mov
iret
ds
popf
in
int3
cltd
pop
cmp
mov
lea
rclb
rcrb
test
mov
in
jmp
fsubr
pushf
int3
add
fcomip
les
aad
ljmp
xchg
and
mov
xor
push
pushf
inc
cltd
mov
pop
divb
sub
loope
cmp
sbb
push
mov
dec
test
lods
inc
add
cltd
add
dec
aas
scas
add
and
pusha
cs
je
sti
in
sub
mov
sbbl
adc
dec
mov
rorl
sbb
cmp
pop
rcrl
push
cltd
sub
in
pop
mov
adc
mov
aaa
incl
pushf
push
ds
call
shll
je
jl
leave
adc
and
add
ds
and
enter
xor
xchg
scas
scas
sub
clc
add
scas
stos
or
jno
cmp
cmp
clc
push
mov
insl
or
mov
jg
inc
pop
mov
mov
mov
data16
cli
jbe
pop
lods
jo
dec
ljmp
mov
fistl
mov
push
arpl
sbb
insl
movsb
stos
push
in
xchg
cmc
aam
cwtl
xchg
adc
loope
xchg
int3
adc
fsubrs
push
sub
adc
sub
or
orb
insl
inc
lods
jbe
or
jecxz
js
push
add
stc
addr16
add
gs
mov
push
les
mull
lret
push
mov
pop
add
sbb
sbbb
pop
ret
dec
aaa
sub
test
pop
bound
insb
inc
inc
mov
mov
in
adc
mov
or
push
icebp
jae
xor
test
cli
fsubl
mov
fsubrp
and
add
roll
mov
inc
cmp
iret
mov
push
test
inc
sub
mov
call
clc
and
adc
aaa
pop
or
jnp
ja
data16
stos
xchg
push
filds
and
sub
mov
sbb
fnstenv
sub
loop
int
clc
lret
ret
push
test
mov
inc
gs
xor
popf
push
cmp
lret
aad
inc
in
cmp
outsb
gs
or
pop
dec
and
adc
push
jbe
ljmp
or
xchg
in
mov
pop
xlat
or
int3
pop
loop
imul
and
xchg
and
add
sahf
aad
pop
mov
and
fldl
sub
in
ret
into
push
inc
pop
dec
mov
filds
sub
add
xchg
mov
lcall
mov
mov
xor
repz
movsb
test
jnp
sub
or
dec
push
mov
rorl
stos
or
xor
shll
ret
adc
fs
inc
out
scas
xor
inc
push
fnstenv
mov
pop
scas
data16
sub
xor
adc
ja
sub
pop
sahf
cmp
lock
sbb
sbb
jmp
in
sub
mov
mov
movsb
dec
fists
lahf
or
adc
out
lods
idiv
inc
mov
jb
pop
push
dec
std
xor
adc
cmp
std
add
pop
movsb
cmc
push
dec
lods
mov
out
sbb
add
cmpsb
or
roll
sub
int3
dec
pop
xchg
jnp
out
add
jp
jge
call
nop
cli
loope
lods
jne
push
pop
cmpb
incb
mov
subb
push
or
pop
dec
test
pop
into
mov
data16
push
push
add
into
add
jno
mov
mov
es
push
pop
mov
dec
enter
mov
sahf
imul
lahf
je
cmp
shrb
sub
pop
jae
insl
jp
aad
or
mov
push
and
push
xor
inc
scas
vpunpcklwd
mov
pop
lahf
aad
mov
inc
hlt
and
adc
mov
and
add
movb
aas
jbe
cld
inc
or
fwait
test
ljmp
xor
jno
pop
sub
cli
pop
and
stos
out
mov
pop
push
jge
movb
mov
lret
dec
imul
jne
insb
imul
add
or
push
je
push
cmc
int
int3
jbe
cltd
je
nop
mov
addr16
dec
jno
ljmp
js
loopne
or
das
mov
iret
adc
cltd
cmp
rcrb
iret
stos
fbld
mov
insb
mov
inc
hlt
popf
je
std
add
or
and
mov
or
push
addl
push
insb
push
fldt
add
out
sbb
xor
clc
inc
popf
dec
xor
mov
and
loope
xchg
push
scas
daa
jge
jecxz
mov
sub
inc
adc
xchg
int3
pusha
popa
ja
insb
push
das
into
jo
addr16
shl
adc
stos
lcall
popf
add
popa
bound
jmp
outsb
or
hlt
push
xor
fldenv
ds
cmp
negl
xchg
loope
fcmovnbe
hlt
add
mov
or
shl
jb
dec
adc
jmp
cld
out
ficoms
shll
pop
or
jne
mov
mov
ficompl
test
push
cltd
ljmp
and
outsl
cld
bound
adcb
jbe
fldcw
dec
xchg
lret
or
lods
test
push
mov
insl
add
lcall
jne
imul
aam
pop
xchg
pop
jge
inc
leave
pop
jp
lahf
mov
inc
leave
mov
cmp
lods
into
sbb
xor
mov
and
mov
in
push
test
xchg
sbb
loopne
loope
and
xchg
add
mov
jb
xlat
mov
fldl
cmp
int3
mov
std
xchg
or
lock
sub
call
mov
inc
xchg
lret
movsb
subb
loopne
ret
pop
daa
stos
pop
xchg
ficompl
adcl
pop
pop
jle
push
cmc
fnsave
into
push
push
aam
ss
add
jg
mov
pop
ret
sti
lcall
jb
cli
test
shll
test
clc
jo
out
int3
idiv
cld
dec
and
xchg
jae
das
aas
add
xchg
loope
pop
xor
inc
divl
dec
mov
add
xor
clc
pushf
adc
adc
outsb
int
mov
xor
in
adc
or
repz
aas
push
cmpsb
clc
movsl
push
es
jb
lods
xchg
pop
out
jo
inc
pop
call
xor
in
or
in
xchg
and
arpl
mov
mov
cmp
rcrb
push
lea
jno
cs
cmp
nop
gs
fs
cmovne
xchg
popa
dec
ficoms
mov
pop
pushf
sub
cmp
jmp
xchg
jl
mov
dec
popa
fidivrl
mov
loope
jbe
stos
lahf
ds
imul
mov
in
sbb
lods
add
mov
test
dec
lahf
add
cmp
cli
xor
pop
roll
ds
jbe
add
push
xlat
test
xchg
push
inc
aas
int
inc
fimull
loopne
xchg
orl
std
mov
and
dec
jle
int3
mov
outsl
insb
cltd
mov
sahf
xchg
sbb
repz
shll
cli
mov
imul
out
xor
jmp
in
js
fwait
mov
and
mov
cltd
sbb
call
test
pop
xor
dec
in
call
mov
cwtl
and
dec
daa
sahf
in
push
add
data16
rorl
aas
int3
icebp
stos
cmp
rcl
cmp
pop
lea
in
sbb
jne
sbb
and
cmp
pop
pop
lds
adc
into
xor
in
das
mov
add
jne
cmp
jno
xchg
inc
aad
test
repz
insb
mov
push
inc
adc
sub
scas
test
dec
fs
xor
je
xorl
or
aad
pop
or
pop
or
scas
jno
pushf
sbb
xor
daa
or
inc
es
jmp
sub
fdiv
mov
cmpsb
aam
and
aaa
lea
sti
and
pop
cmpsb
add
adcl
jmp
popa
hlt
pop
and
in
sub
xor
xchg
lods
fnstenv
xlat
dec
imul
add
adc
adc
or
fstl
xor
mov
movsb
js
loope
sub
push
stos
xchg
sar
ja
aad
out
loopne,pn
jg
mov
cmp
jno
leave
sub
or
dec
arpl
xchg
mov
dec
sbb
mov
ficomps
mov
fildl
jle
es
adc
pop
cld
dec
dec
inc
leave
sbb
int3
shl
shll
xor
out
pop
xchg
je
mov
in
mov
repz
testl
sti
scas
enter
in
and
rorl
movsl
test
adcl
into
shll
movsl
cli
inc
sbb
cmp
movsb
pop
lcall
xor
push
sti
mov
test
xchg
popa
mov
enter
and
sub
in
loopne
in
pop
lock
aas
and
lret
jo
mov
push
mov
test
loop
push
sub
pop
pushl
inc
insl
cmpl
mov
cmpsb
adc
clc
and
mov
fs
lahf
mov
sbb
sti
stos
addl
dec
mov
inc
add
addr16
je
hlt
push
dec
push
sub
mov
pop
mov
inc
aad
dec
or
xor
insb
out
loope,pn
xor
adc
pop
subb
fpatan
sahf
lret
scas
and
xor
jg
sbb
jl
mov
jecxz
cmp
and
roll
inc
mov
mov
popa
adc
add
mov
push
pop
dec
lretw
lods
mov
mov
cmp
cmp
out
cmpsb
sbb
xchg
push
repz
out
lret
or
mov
repz
mov
mov
sbbb
scas
push
mov
inc
lods
in
push
insb
inc
lret
push
sub
insb
popa
cs
and
xor
jne
mov
cwtl
outsb
enter
enter
or
sahf
insl
push
dec
clc
leave
adcb
xor
movsl
ret
in
pusha
test
js
jg
cmp
add
stos
push
or
adc
mov
xchg
lea
ja
xor
pop
aas
frstor
fbstp
lods
in
mov
addr16
cmpsb
add
adc
dec
sub
mov
xchg
xor
sub
out
pop
int
fimull
decl
insl
mov
movsl
movlps
mov
test
arpl
cmp
push
std
inc
and
mov
mov
stos
imul
test
or
sub
pusha
imul
xor
inc
dec
xchg
data16
ss
test
pop
fisubl
xor
xor
ljmp
xchg
call
sbb
jle
lods
sbbl
xchg
inc
call
stos
or
sahf
xchg
or
cmc
jle
mov
and
adc
sbb
bnd
mov
mov
pop
test
mov
ljmp
sahf
pop
outsl
stos
lret
xchg
aas
mov
push
push
fwait
or
std
lcall
jmp
cmp
push
cmp
aam
mov
xorb
lods
aas
rclb
scas
pop
je
jle
gs
adc
inc
xor
mov
mov
mov
pop
in
dec
sub
inc
pop
subb
add
cmp
int
pop
rcrb
add
ja
call
mov
movsb
adc
add
pop
outsb
push
lds
loopne
sbb
mulb
negl
pop
shl
aaa
hlt
jno
aas
aad
rcrb
xchg
les
popa
mov
mov
jp
or
push
mov
cmc
sbb
dec
add
xchg
sahf
add
cli
lea
xchg
jno
jae
iret
popf
push
xchg
repnz
pop
inc
pop
sbb
sarl
insb
jmp
cmp
pop
push
int3
cmpl
or
sti
cwtl
or
ret
pop
test
and
and
sbb
out
and
rclb
push
jmp
ret
ds
xchg
or
punpckhbw
jge
or
das
cmpsb
mov
cmpb
mov
scas
mov
jae
mov
xchg
enter
push
pop
arpl
sbb
rorb
jge
mov
les
popf
pop
mov
pop
push
inc
sub
inc
sub
pushf
sbb
loopne
push
inc
pop
cmp
xchg
xor
sbb
frstor
cwtl
push
xchg
add
imul
xchg
cld
popf
divb
sbb
aas
shl
pusha
push
add
scas
jae
or
repnz
xor
iret
mov
mov
push
and
mov
mov
cmp
movb
decb
lea
mov
sbb
jp
push
aam
inc
out
fcom
sub
jmp
cwtl
movsb
inc
xor
fiaddl
sti
test
pop
lds
push
icebp
ret
cmp
int3
mov
cs
fbstp
push
repz
fadds
cs
lcall
movsl
dec
insl
pop
mov
push
cmpsl
rol
mov
push
push
js
cmp
jo
inc
jl
adc
xchg
pushf
fs
pop
push
adc
add
jle
push
push
mov
push
pusha
and
repnz
pusha
pop
test
insl
js
jne
aam
repnz
or
rcrb
jp
xchg
and
fidivl
push
pop
addr16
mov
xor
or
cmp
mov
cmc
pop
mov
lret
and
ljmp
les
xor
sbb
jae
dec
pop
mov
jns
int3
mov
jg
xor
aas
inc
mov
sbb
sbb
inc
dec
xorb
xor
lret
mov
cmc
dec
lahf
fcmovbe
jno
mov
mov
in
adc
popf
and
sbb
clc
insl
and
mov
roll
aas
xor
mov
push
push
pop
dec
daa
jl
nop
pop
cltd
and
and
sbb
push
cmp
push
outsb
subl
push
pop
dec
cltd
inc
cmc
mov
xchg
repnz
jae
aaa
push
mov
jmp
dec
sub
lock
cmc
imul
ret
xchg
das
in
data16
dec
movsb
mulb
cld
repz
jge
mov
aad
sbbb
imul
loope
xchg
xchg
in
dec
repz
jb
and
xchg
xchg
add
nop
and
jmp
ds
lret
call
pop
fwait
test
cwtl
sti
mov
pop
dec
addr16
push
jl
add
push
cltd
push
push
mov
xchg
mov
push
sti
mov
sbb
and
or
fs
dec
sub
push
sti
mov
or
pop
mov
sarl
or
cmp
dec
adc
cwtl
fimuls
add
scas
inc
stos
inc
rol
sti
sti
pop
push
jge
ljmp
push
pop
add
lahf
jg
ss
and
cld
jp
cmp
cmp
and
dec
mov
inc
mov
xor
fs
pop
adc
jb
sahf
icebp
dec
sahf
sbb
xchg
loopne
pop
sbb
loopne
and
push
sbb
insb
add
test
dec
jae
js
push
xchg
mov
sar
fwait
xlat
lea
out
xchg
fnstcw
cli
dec
xchg
into
cmp
lea
and
repz
aam
cmp
jl
pop
std
dec
rcll
push
jne
mov
dec
sarb
mov
test
add
sti
test
mov
arpl
xor
xchg
clc
repnz
adc
ret
pushf
push
ds
lock
sub
ret
cmp
imull
or
add
push
jb
mov
insl
adc
in
xchg
xor
mov
xchg
ja
lahf
and
push
xor
icebp
decl
pusha
push
add
mul
ret
scas
lret
fs
ret
xor
stos
cmp
ja
lods
mov
xchg
outsb
pop
dec
ds
scas
inc
push
popf
jle
sub
insl
iret
test
push
xchg
out
cwtl
lods
xchg
in
in
mov
pop
jle
xor
mov
aaa
test
mov
cmp
ret
cmp
ftst
int
mov
lahf
mov
rcr
pop
ljmp
cs
popa
or
aad
push
mov
rolb
sub
call
sub
cmpsl
pop
stos
in
repz
xor
mov
jne,pt
fimuls
xor
call
or
mov
mov
xchg
lock
mov
stos
xor
ds
mov
js
jne
inc
movsl
nop
insb
jbe
mov
mov
scas
or
aaa
add
cmp
out
inc
sbb
sbb
rcrl
jl
cmc
decl
cmc
dec
mov
nop
imul
int
sbbl
jne
push
je
movsb
stos
xchg
dec
ja
out
mov
into
inc
cmp
push
or
addr16
and
mov
mov
jmp
dec
and
pop
and
pop
inc
cmpsl
sbb
push
imul
push
or
mov
adc
and
nop
push
test
loopne
cmp
pop
push
mov
push
les
lcall
fidivrl
sbb
ja
and
jle
mov
or
inc
addr16
cld
sub
add
cmp
sub
hlt
adc
je
out
pop
jge
popl
cmp
into
jg
adc
adc
xchg
cli
mov
lods
sub
pop
movsb
cwtl
and
das
sbb
cli
cmc
test
xchg
in
mov
test
mov
out
pop
loop
inc
dec
incl
repnz
xchg
pop
test
arpl
mov
pop
sub
dec
jp
hlt
dec
or
cmp
jnp
mov
loop
fucom
jno
loopne
inc
add
movsl
hlt
stos
cmc
mov
xchg
out
test
cmc
mov
sahf
aad
lds
adc
push
gs
push
cs
ds
movsl
ficoms
mov
sahf
aad
lds
adc
push
gs
push
cs
ds
and
jne
in
aad
inc
mov
adc
push
gs
push
cs
ds
movsl
ficoms
mov
sahf
aad
lds
mov
xchg
rcll
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
icebp
loopew
roll
push
add
daa
mov
jo
popa
notl
inc
xlat
xor
add
roll
push
mov
mov
pop
popa
out
xchg
push
dec
xlat
xor
add
leave
inc
fsts
daa
mov
pop
push
mov
dec
fmuls
push
xchg
cwtl
mov
shrl
mov
loop
mov
adc
jns
fcoms
and
xor
xor
imull
movsb
mov
push
hlt
cmovs
lods
mov
pop
adc
inc
push
aas
sbb
cmp
and
sti
sbb
sub
cmpsb
fnsave
js
push
lock
hlt
sbb
mov
call
cmp
dec
lcall
mov
test
es
xchg
jno
cmpsl
mov
leave
mov
dec
out
js
sbb
icebp
add
dec
push
mov
testl
mov
jo
xchg
add
roll
push
cmpsb
daa
mov
xchg
pop
cwtl
pop
push
pop
xlat
sub
add
popf
or
ret
aaa
fmull
inc
jno
or
xchg
xor
inc
les
insb
sahf
xorb
mov
push
xchg
jo
pop
xor
add
loopw
xchg
lea
daa
mov
pop
jno
popa
notl
inc
xlat
xor
add
roll
push
mov
mov
pop
jno
popa
notl
inc
xlat
xor
add
outsb
cmc
mov
fucomp
ret
mov
add
pop
adc
push
jne
pop
icebp
outsl
dec
inc
popa
xchg
sbb
or
adc
call
rolb
sub
add
jb
mov
movsb
das
popa
or
ja
fiaddl
in
ljmp
push
dec
inc
faddp
std
in
scas
addl
lahf
adc
xchg
pop
insb
dec
daa
addr16
sub
orb
in
mov
sbb
mov
pop
lahf
addl
lods
pushf
cmpsl
lret
and
xor
xor
insl
sub
jbe
xor
fidivs
jp
push
lods
repnz
jmp
push
hlt
and
fisubrl
cmp
push
aam
mov
shrb
cltd
cwtl
test
add
scas
mov
adc
test
mov
popf
stos
xchg
push
add
jb
daa
push
insl
es
notl
mov
adc
mov
and
sub
sub
sti
mov
sub
rep
enter
dec
mov
cmp
and
stos
xor
outsb
dec
stos
scas
xchg
mov
and
xor
setg
fwait
sub
inc
aaa
xor
pop
sub
xchg
push
out
jmp
lock
adc
inc
ret
push
pop
xor
movsl
in
out
loopne
xor
push
movsl
icebp
mov
ljmp
shll
or
ljmp
out
mov
pop
pop
pop
fdivr
push
sbb
iret
pop
xchg
gs
mov
rcr
je
add
clc
test
mov
pop
push
dec
dec
mov
pop
pop
notb
test
sub
sbb
aas
cmp
iret
inc
ljmp
xlat
sahf
leave
mov
jne
out
test
xor
and
lods
fstl
lea
add
inc
in
sbbl
pop
jo
push
into
jns
jo
push
movsb
leave
sub
add
inc
std
dec
mov
repz
add
cmp
ds
dec
repz
push
imul
push
xchg
pop
mov
sbb
lods
mov
adc
xchg
cld
pusha
push
div
pop
dec
cmpsb
ret
adc
xor
pop
dec
mov
icebp
pop
adc
mov
adc
mov
loop
dec
imull
cs
xchg
mov
clc
xchg
daa
stos
inc
add
js
sub
push
mov
xor
repz
add
mov
fbld
repz
pop
fsubl
lcall
sbb
rcrb
adc
cmovs
add
cwtl
fs
fld
into
sbb
mov
rcrl
outsl
mov
jge
aaa
mov
jl
int3
cwtl
lods
js
mov
or
mov
popf
into
sti
int3
repnz
aad
mov
int3
fsts
cmpsl
xchg
cmp
mov
stc
push
xchg
inc
jmp
pop
sbb
xchg
outsb
popa
cmp
xorl
adc
loopne
fisttpl
jmp
mov
xor
dec
mov
mov
pop
or
dec
add
mov
faddl
test
inc
pop
cltd
scas
test
and
sbb
dec
ficompl
lcall
andl
hlt
lods
xor
mov
out
add
pop
push
push
cmpsb
gs
jge
outsb
mov
dec
shlb
add
cmp
mov
repz
ds
pop
dec
lcall
sbb
stos
mov
fs
mov
jo
leave
mov
inc
fs
pop
xchg
push
cwtl
test
mov
mov
push
pop
sub
mov
lods
add
shll
clc
jns
push
and
lahf
sti
cmp
jo
mov
jo
insl
dec
pushf
mov
xor
pop
mov
mov
lods
xor
push
xchg
sbb
and
filds
aas
mov
or
add
xor
lahf
rorb
lods
push
test
popa
imulb
je
decb
pop
dec
iret
shr
jnp
jb
sbb
mov
int
xchg
push
inc
adc
daa
lock
clc
enter
aam
shll
lcall
icebp
lea
fucom
dec
fldt
mov
imul
mov
in
pusha
jne
clc
call
pop
mov
cmp
jno
xor
lahf
mov
lods
stos
push
sbb
push
mov
clc
jne
aad
dec
mov
sbb
jns
addr16
mov
inc
in
mov
jne
sbbl
xchg
out
or
or
xor
push
adc
inc
mov
mov
cld
std
cmpl
xchg
add
sbb
add
call
inc
fistps
adc
adc
xor
aad
frstor
fwait
and
adc
pusha
fcmovnu
lods
xchg
jmp
inc
incb
inc
cmpsl
test
cld
mov
sub
jo
jecxz
dec
pop
call
filds
push
rcrl
out
inc
ja
dec
enter
mov
sbb
cwtl
and
jle
add
fsubrl
xlat
pop
add
call
mov
xchg
jnp
imul
mov
pop
popa
loop
les
mov
xchg
jo
inc
fimull
pop
jmp
das
daa
les
mov
xor
mov
jae
push
mov
inc
xchg
or
ror
mov
rolb
lods
sub
xor
lret
filds
add
movb
mov
mov
cmp
mov
and
or
fsubr
mov
inc
lds
push
mov
iret
mov
add
or
and
jle
pop
sub
testb
mov
rolb
popf
cmp
xor
cmpsb
in
leave
pop
clc
dec
std
dec
in
call
loope
xor
cs
sub
call
clc
int
xor
or
test
js
out
rorb
out
xchg
or
aad
vcvttps2dq
pusha
in
loopne
adc
mov
push
cmc
fsubs
jb
lds
cmp
in
popa
sub
jge
mov
xchg
clc
and
sub
cmpsb
mov
lods
inc
rcrl
movsl
outsb
add
int3
cmpb
cmp
push
push
stc
xchg
xlat
xchg
dec
and
lock
ret
and
into
xchg
push
inc
dec
pop
push
inc
cmp
dec
ljmp
fisttpll
stc
imul
loopne
popa
out
sbb
fidivrs
flds
push
shrl
or
stc
mov
int3
push
stos
cs
out
xchg
arpl
sub
test
rcrl
sub
fucomi
loop
adc
clc
mov
or
push
pusha
fidivs
fsubrl
push
nop
negl
scas
mov
push
dec
xorl
inc
aad
sbb
fnstcw
inc
cltd
ljmp
add
rorl
cmpsl
filds
mov
stos
aad
cmp
xor
push
addl
mov
fnstsw
jns
mov
adc
test
cs
adc
pop
mov
outsl
sbb
adc
loopne
dec
mov
mov
leave
dec
jecxz
ret
lods
xchg
xchg
fcoms
cmp
mov
sbb
pop
cmp
push
mov
dec
inc
in
mov
xorb
test
mov
pop
xchg
aaa
aaa
cmp
jg
gs
daa
jecxz
xchg
xchg
add
cmp
mov
nop
out
pop
inc
mov
sub
mov
add
jns
scas
xchg
sbb
cmc
stc
outsl
add
sub
pushw
gs
bound
repz
or
inc
pop
pushf
aam
int
sti
scas
cmp
out
das
mov
xchg
xchg
das
add
cmp
or
das
bound
xchg
imul
dec
xor
mov
lds
in
xor
xchg
scas
std
sbb
stos
ds
xor
jmp
fcmove
daa
push
in
xchg
cltd
jmp
xor
pop
xchg
mov
inc
je
repz
add
cmpsl
sbb
cmp
imul
push
fsubr
mov
fs
dec
lds
mov
push
cmc
mov
popf
dec
mov
cmp
mov
stos
imul
scas
mov
or
cmp
aam
rorb
xor
lret
xor
xor
push
xchg
in
clc
push
fiaddl
call
arpl
dec
ds
mov
fcomp
dec
call
and
insl
cmpsb
fisttps
cld
pusha
test
adc
push
loopne
add
loop
inc
into
cmpsb
mov
insl
in
fwait
sbb
xchg
test
and
aam
ret
stos
push
pop
lods
call
int3
xchg
imul
adc
mov
outsl
arpl
fldl
pop
push
test
out
dec
testb
out
add
xchg
push
jp
push
pusha
mov
popf
jb
jl
jl
test
cmp
adc
mov
jns
pop
mov
dec
cli
fstl
lds
and
les
and
add
jg
clc
mov
int3
xchg
outsb
stos
movsb
popa
push
test
shl
mov
test
jle
add
xor
cmp
popa
pop
stc
lods
push
in
lret
fsub
js
jmp
mov
sbb
mov
popf
subb
repnz
xchg
icebp
dec
push
stos
int3
add
in
jle
cmpsl
ja
pop
pop
inc
fildll
mov
cld
xchg
das
pop
push
fwait
sti
mov
addr16
repnz
jbe
cmp
fstps
push
mov
xchg
push
mov
push
dec
pop
clc
and
push
lea
fisttps
or
cli
cwtl
jg
push
inc
test
or
cmpsl
lock
lret
jns
inc
pop
out
lea
xchg
push
inc
inc
xor
jbe
pop
push
negl
out
adc
out
add
mov
ja
lds
and
sbb
adc
pop
aam
nop
push
out
shll
stos
cmp
dec
js
fcmovu
in
cli
es
push
xor
fcompl
test
add
jns
pusha
mov
insl
pop
add
push
jbe
das
test
rolb
jno
jge
add
popa
pop
in
icebp
mov
stos
fiadds
adc
lds
jnp
xchg
fidivs
mov
sub
xor
lock
cmp
popf
orb
insl
add
sbb
aaa
ljmp
adc
arpl
lds
arpl
mov
outsl
push
rcrl
addr16
ret
sub
shrl
call
ret
out
out
ljmp
das
je
xchg
mov
idivl
mov
mov
or
ss
pop
or
cli
mov
loop
adc
adc
inc
in
adc
xchg
inc
and
icebp
or
shr
sub
int3
ljmp
lcall
mov
pop
imul
rcrl
and
cmp
into
xchg
int3
jmp
and
jns
bound
insl
mov
imul
mov
sbb
lea
xchg
xlat
ficomps
lock
mov
add
cmpb
jae
or
jp
fisttpll
movsl
dec
pop
in
xchg
adc
add
call
rclb
add
les
inc
inc
hlt
push
add
sbb
loope
mov
test
jb
arpl
mov
in
pop
sti
inc
pop
sub
outsb
mov
enter
jp
adc
mov
mov
popf
jmp
mov
lods
hlt
loope
out
jmp
pop
jb
sub
or
cmp
dec
loope
cs
pop
jb
das
jmp
pop
imul
push
adc
dec
subl
test
jns
pushf
inc
ss
dec
dec
je
pop
mov
ss
jbe
jp
jg
cli
pop
adc
scas
add
sub
add
jnp
jb
fimull
push
mov
les
xchg
in
js
inc
rclb
clc
fnstcw
push
test
xchg
or
aaa
cmp
push
add
outsl
push
pop
test
clc
lods
js
dec
test
sbb
xchg
sti
inc
dec
sbb
and
inc
outsb
pop
roll
mov
push
into
cmpsb
lret
pushl
lcall
dec
lock
jo
xor
popf
jae
sbb
fdivl
or
ja
out
xchg
mov
pop
das
dec
sub
dec
rorb
or
mov
sub
adc
mov
xchg
pop
aaa
sbb
lock
xchg
cmpsl
and
or
test
cli
jp
into
or
inc
or
add
cmpsb
add
jle
jno
or
adc
lods
jae
je
pop
outsl
adc
and
and
gs
rcrl
xchg
stos
adc
test
imul
imul
xchg
scas
faddl
push
mov
mov
imul
inc
fbld
xor
fsubrs
sub
jne
cmp
and
inc
fistps
int
sbb
lret
push
in
push
push
push
out
mov
icebp
xor
repz
pop
popa
pop
pop
lea
mov
repnz
es
and
fsubl
mov
adc
movsl
outsb
lcall
out
test
inc
add
pinsrw
addr16
cmpsl
pop
adc
int3
leave
out
push
enter
addr16
ss
lret
jp
scas
and
inc
ljmp
shlb
xor
push
fisttpl
inc
add
hlt
pop
cmc
pop
add
xlat
mov
push
shlb
lcall
nop
mov
xchg
pop
and
jmp
dec
les
and
mov
idivb
bound
mulb
mov
pop
xor
and
dec
lods
lds
xor
mov
mov
xchg
je
inc
jmp
rcr
mov
xor
mov
je
sahf
jae
leave
jle
jecxz
lods
push
jno
and
lds
ret
clc
inc
lds
ja
imul
push
sbb
outsb
mov
or
add
ss
and
xchg
lock
cmc
testb
mov
shrl
dec
jbe
aad
imul
test
cmp
clc
sbb
xchg
std
cmpsb
fs
sub
test
mov
imul
xlat
jns
pop
sub
js
test
addr16
or
xchg
mov
ljmp
fstpt
push
sbb
push
dec
pop
inc
enter
fcmovu
pop
jne
mov
inc
in
add
jns
inc
gs
pop
xchg
or
cwtl
ret
xchg
mov
pop
jge
add
and
cmpb
cltd
sarl
loop
mov
sbb
lea
sahf
ljmp
xor
jo
test
outsl
xor
dec
outsl
xchg
mov
pop
adc
pop
mov
or
sbb
xor
arpl
push
fnstcw
aad
mov
mov
jecxz
pushfw
data16
movsb
or
xor
mov
test
mov
lret
xchg
dec
aas
outsl
cmp
test
sbb
popf
jmp
push
fcmovnb
add
fiadds
stos
icebp
inc
dec
mov
cltd
xor
movsb
cmpb
movsl
ljmp
stc
out
sub
and
imull
subb
or
mov
jb
jmp
cwtl
test
pop
fdivs
jp
mov
jb
dec
btr
fsubl
scas
loope
cmp
out
mov
pop
insb
xor
jl
fcmovne
pusha
add
mov
mov
jg
dec
insl
or
test
inc
jg
push
or
clc
scas
cmp
pop
in
push
std
cmp
push
jb
sbb
out
pop
mov
push
pop
push
sub
cmp
jbe
pop
cmc
xchg
xchg
es
sbb
call
pop
push
enter
or
lahf
mov
or
push
cltd
test
sub
lock
lea
xor
lret
mov
mov
arpl
push
inc
mov
lock
std
sub
adc
mov
into
pusha
mov
push
rorb
jl
pop
inc
or
aad
xchg
and
or
xchg
add
les
mov
jl
loope
movsl
stos
lods
or
mov
das
push
xchg
push
mov
cmpsb
mov
inc
pop
cmp
dec
mov
ficompl
test
cmpsb
iret
pop
test
enter
mov
push
pop
jne
arpl
ror
cwtl
pop
dec
loopne
add
adc
add
push
pop
rclb
lret
loope
movsb
ljmp
mov
dec
xchg
ljmp
in
inc
sbb
xchg
test
add
pop
roll
insb
movsb
clc
movsb
xchg
sub
insb
mov
bound
xchg
xorl
push
cmpsl
negb
icebp
fcompl
ret
dec
cmp
xchg
es
lds
cmpl
in
fsubl
and
push
and
jbe
in
shrl
fmull
or
sub
and
pop
aam
jb
and
dec
int
sbb
cmp
lods
pop
xor
sbb
jae
imul
ss
daa
push
adc
pop
cmp
dec
lret
cmc
pop
mov
addb
cmp
sti
imul
or
cmp
hlt
sub
in
adc
out
and
inc
cmp
in
cmp
aad
filds
jnp
pop
test
cmp
je
xchg
mov
pop
icebp
xchg
or
nop
adc
icebp
aaa
roll
ljmp
enter
mov
js
mov
ret
aas
nop
dec
call
in
arpl
xchg
fwait
xchg
cmp
xchg
jnp
or
fcoms
loopne
xchg
sub
sbb
imul
push
cmpb
or
int3
lret
mov
pusha
pop
cld
dec
mov
mov
inc
add
int
cmpsb
fsub
mov
xchg
repz
cwtl
test
mov
sub
pop
mov
push
pop
inc
cmp
mov
add
orl
movsb
xchg
dec
aad
out
test
inc
and
jae
sub
cmp
and
push
push
xor
les
jecxz
cmc
fcmovnu
icebp
push
outsl
sbb
dec
mov
insb
xchg
sarb
or
aaa
pop
es
mov
inc
nop
loop
pushf
xchg
clc
jno
scas
push
fistpl
int
pop
mov
mov
stc
mov
xchg
cmp
outsl
inc
pop
inc
sub
lret
ljmp
nop
popf
pop
cmpsl
frstor
popa
stos
test
cmp
add
lret
hlt
rol
and
aad
rorb
out
pop
jns
jmp
sbb
lea
cltd
sub
dec
jno
test
mov
lock
pop
mov
aas
push
int3
ret
dec
repz
ret
mov
cmp
fiaddl
enter
incl
sti
jle
jecxz
cs
push
ror
cwtl
test
enter
inc
add
cmp
lods
add
mov
xor
jecxz
mov
pop
pop
cmc
fmull
cs
push
xchg
fbstp
into
stos
jge
jnp
or
xchg
loop
inc
insb
mov
stc
imul
mull
inc
addr16
insb
shlb
fiaddl
lods
mov
dec
cmp
sbb
sbb
jmp
cmpl
jmp
cmc
outsl
sub
sbb
repz
or
into
pop
pushf
lock
arpl
xchg
sbb
mov
and
xchg
ret
lcall
lret
movsb
inc
jo
cmp
jmp
mov
testb
lock
cltd
lret
xor
push
pop
out
int
cmp
inc
pop
pushf
sti
xor
xchg
cmpsb
adc
repz
or
sub
sbb
dec
sbb
or
or
xorl
daa
dec
mov
xlat
out
shll
fs
bound
popf
cwtl
iret
cmc
and
pop
mov
pop
pop
or
out
xor
fdivs
sub
popa
sti
xor
sbb
loopne
xor
stc
add
mov
mov
sub
bound
lcall
inc
push
xchg
push
jle
mov
arpl
ja
cwtl
jp
movb
mov
or
scas
aad
cltd
sub
cmp
push
stos
cmpl
fndisi(8087
adc
inc
leave
adc
out
mov
push
push
ja
push
cmp
push
push
mov
push
loop
mov
mov
in
pop
sahf
inc
fs
add
and
mov
faddp
pop
sarb
xor
lcall
rorl
xor
jae
es
mov
inc
mov
js
xor
jecxz
or
add
rcll
mov
pop
jno
popa
notl
inc
xlat
xor
add
roll
push
mov
mov
pop
jno
popa
notl
inc
xlat
xor
add
rol
rcll
mov
pop
jno
popa
notl
inc
xlat
xor
add
rolb
push
mov
mov
pop
mov
sahf
pop
sti
movl
out
js
push
pop
outsb
pop
outsb
ret
adc
push
movsb
into
mov
xchg
xchg
out
negl
dec
aaa
pop
pop
outsb
pop
jle
push
ja
inc
cs
dec
cmpsl
into
mov
xchg
xchg
out
negb
daa
fdivl
pop
pop
pop
jl
xor
inc
rclb
adc
out
test
test
mov
xor
sbb
push
xor
out
int
lea
mov
das
jmp
loopne
clc
xor
ret
ja
mov
jmp
mov
push
pop
xchg
scas
xchg
fmuls
pop
insl
je
push
xor
lea
mov
jae
scas
jl
inc
outsb
xlat
scas
daa
mov
dec
les
femms
mov
aad
rcll
mov
push
popa
aas
inc
pop
in
je
mov
cmpb
pop
mov
popf
mov
mov
ja
cmp
iret
jecxz
jg
inc
dec
dec
cld
popf
jecxz
inc
ret
repnz
adc
out
movsb
popa
add
aaa
scas
pop
ljmp
inc
hlt
push
mov
xchg
xchg
mov
mov
xlat
rolb
push
pop
inc
sub
sbb
inc
rcrl
mov
fwait
hlt
lcall
mov
or
orps
popa
cmp
add
push
aad
rorb
adc
xchg
shrb
sbb
sbb
jb
and
push
inc
cs
cmpsl
into
mov
xchg
xchg
out
negl
daa
dec
aaa
pop
pop
outsb
pop
jle
push
ja
inc
cs
cmpsl
into
mov
xchg
xchg
out
negl
daa
dec
push
mov
xchg
test
adc
fs
mov
push
into
in
mov
cmp
jnp
pop
fwait
inc
pop
pop
std
lea
out
rep
push
xchg
std
sub
fdivrs
push
mov
sub
cs
push
scas
lret
xor
sub
rorb
push
xor
mov
cltd
sub
mov
push
ret
outsl
ret
ret
mov
fnstcw
loop
jo
pushf
or
jnp
or
aam
ss
cmp
ja
loop
aaa
adc
push
pop
lret
xchg
xchg
cmp
mov
sub
jns
daa
sbb
and
mul
add
test
mov
pushf
cmc
jo
jle
test
jo
cmc
fwait
jne
pop
fwait
or
push
push
jecxz
out
sub
std
lret
hlt
xchg
jns
jbe
xchg
add
repnz
pop
add
cmp
xchg
jge
mov
mov
imul
or
dec
xchg
out
dec
pop
ljmp
dec
jmp
in
jo
cwtl
and
push
aas
push
insl
gs
xchg
aaa
inc
sub
pusha
shr
pop
jae
ljmp
cwtl
das
mov
clc
dec
jl
scas
mov
repnz
je
test
jmp
xor
inc
out
xchg
push
es
mov
into
lds
jb
in
jmp
push
mov
lret
jecxz
cmp
repz
sub
and
aam
shll
movsb
ret
xor
sub
int3
cmp
das
sub
test
rolb
iret
cmc
mov
repz
imul
mov
add
shl
push
repnz
movsl
or
int3
faddp
lcall
dec
adc
jg
sub
daa
cmp
aam
iret
mov
in
adc
inc
std
andb
or
mov
mov
sahf
xor
cmp
mov
dec
xor
add
mov
fsub
daa
inc
repnz
std
xor
ja
stos
pop
xchg
je
mov
dec
out
adc
dec
in
fsubrs
push
cld
fs
stos
push
dec
jmp
mov
add
outsl
call
dec
addr16
in
imull
popf
or
sbb
lods
jbe
pop
and
mov
ss
add
sbbb
jmp
push
into
bound
xchg
mov
xor
sbb
call
popf
pop
popa
mov
clc
repz
inc
leave
cmc
fstpl
mov
or
mov
sbb
mull
dec
inc
in
andb
sub
sbb
enter
imul
mov
pop
mov
sub
in
or
push
fsts
push
pop
jns
loope
movsb
test
out
xor
and
add
shll
test
icebp
stos
xchg
xor
push
sti
xor
pop
xchg
lret
push
std
cld
mov
icebp
jmp
or
daa
out
xchg
or
xchg
andb
lock
push
in
mov
insl
jne
inc
cmp
out
mov
imul
aaa
pop
sbb
sbb
out
mov
adc
or
add
cmpsb
aad
out
shll
notl
mov
mov
testl
ficoms
sbb
xlat
push
sub
pop
and
mov
sub
lock
or
mov
jmp
outsb
loopne
sub
inc
aas
pop
push
lock
outsb
sub
scas
das
xor
sbb
leave
in
mov
sub
out
dec
or
cmp
fldt
iret
sub
or
ljmp
icebp
imul
adc
add
push
lret
aas
adc
enter
or
inc
clc
sbb
lods
jge
add
jnp
repnz
outsb
adc
cli
je
mov
pop
push
adc
push
popa
xlat
fsubs
add
xchg
sbb
mov
jbe
push
lods
cmp
push
adcb
jbe
inc
mov
or
push
jle
je
jne
cli
sub
add
xor
fisubrs
push
jge
cmpsl
mov
adc
dec
lahf
dec
cmp
sbb
cmp
loop
adc
pop
addl
out
call
xchg
in
arpl
adc
mov
mov
test
aad
nop
dec
push
stos
ficompl
paddusw
dec
mov
clc
xchg
or
mov
lahf
pop
mov
ljmp
xchg
test
cmp
mov
leave
mov
lret
cmpsl
in
or
push
and
sub
push
fcoml
push
in
mov
and
xchg
jnp
stos
mov
mov
pushf
push
into
cmpsb
cmc
imul
mov
pop
shl
in
xor
mov
inc
mov
mov
test
fldcw
mov
lret
mov
das
adc
imul
mov
adc
out
and
aam
mov
mov
xchg
and
mov
test
and
aad
adcl
aas
fistl
adc
pop
push
addr16
lret
cmp
push
scas
mov
adcb
daa
cmpsl
push
xlat
daa
adc
mov
insb
push
sub
jb
cltd
pushf
add
mov
jp
inc
inc
sub
movsb
test
pop
out
pop
xchg
sbb
enter
inc
cltd
pop
xchg
out
sbb
repz
in
mov
xor
and
test
pop
sbbb
loopne
shrb
subl
lods
mov
sahf
and
pop
and
mov
mov
jmp
push
xchg
in
sbb
pop
fucomi
repnz
push
outsb
addr16
mov
cmp
int3
mov
and
push
das
inc
inc
neg
jnp
cltd
mov
pusha
push
aad
inc
jge
sbb
fchs
int
fstl
int
das
mov
mov
xchg
cmpsl
mov
into
pop
aam
pop
ret
lahf
fs
xchg
xchg
xchg
shll
mov
xchg
repz
xchg
iret
nop
sbb
scas
ret
outsb
mov
pop
sahf
or
cmp
sbb
ficompl
fidivl
push
cmp
or
xor
popa
adc
out
xchg
fwait
jg
sbb
inc
mov
pushf
int3
cmp
fcomi
xlat
call
inc
mov
push
filds
inc
arpl
push
nop
add
jmp
and
pop
fisttpl
int3
or
ljmp
leave
clc
jo
fistl
fwait
sub
lret
mov
pop
mov
inc
imul
aad
dec
inc
cmpb
cmc
jle
dec
dec
popa
or
lock
mov
les
add
cwtl
push
movsb
ror
mov
ja
out
jo
data16
adc
push
sti
mov
dec
adc
out
push
sahf
jnp
xlat
pop
cmpb
xor
adc
aas
jae
andl
fdiv
inc
jno
xor
mov
loop
cli
mov
aas
sbb
mov
jae
push
push
push
inc
mov
add
dec
lcall
in
fwait
ljmp
imul
jge
sti
push
mov
inc
mov
sbb
mov
repz
sbb
cld
mov
fadds
pop
jmp
add
psadbw
enter
call
mov
mull
stos
cwtl
loope
mov
cmp
cmp
divb
repz
pop
or
xor
test
xchg
and
xor
mov
pop
lcall
cmp
dec
mov
fidivrl
jne
test
ljmp
xchg
pop
jo
fs
xchg
mov
dec
mov
shl
popf
aam
jp
push
cli
push
xchg
lds
jecxz
scas
pop
xchg
mov
sub
jns
xor
lret
jo
xchg
cmp
popa
flds
xor
xorl
jnp
loop
dec
daa
ljmp
inc
cmp
add
xchg
push
xchg
add
mov
pusha
or
xchg
addr16
mov
out
inc
lcall
mov
daa
dec
push
sbb
repnz
dec
jecxz
sub
mov
dec
push
stos
ss
nop
xor
xor
popf
xor
mov
pop
cmp
mov
cli
push
add
xchg
pop
mov
cmp
in
push
xor
dec
decl
ljmp
add
mov
push
adc
imul
scas
mov
sbb
push
jmp
rcr
test
lock
pop
add
mov
push
inc
daa
sbb
cwtl
push
xlat
xchg
fwait
mov
add
add
test
pushf
ficoms
push
iret
adc
mov
dec
popa
pop
jne
xchg
ds
cli
flds
sub
hlt
enter
shlb
mov
icebp
nop
xor
sbb
inc
xchg
lods
lret
and
xchg
mov
inc
dec
daa
or
mov
mull
lods
dec
dec
stos
loop
enter
adc
sbb
adc
mov
insb
mov
cmp
stc
bound
xchg
fldcw
mov
push
dec
jno
int3
and
fwait
pop
mov
cltd
in
sub
mov
into
jbe
pop
jne
cmc
jl
push
jp
emms
jp
repnz
xchg
lret
loopne
je
stc
lock
loopne
push
inc
mov
sbb
imul
or
pop
ffreep
pop
sub
mov
ja
in
push
mov
push
int
insb
jne
std
sbbl
sahf
mov
dec
mov
nop
mov
or
sub
pushf
out
pop
pop
dec
mov
rol
push
push
movswl
mov
test
cli
cmp
fcmovbe
cmp
add
xor
popl
and
mov
mov
ljmp
pop
decl
lret
pop
mov
or
aam
out
mov
mov
adc
pop
mov
pusha
aas
mov
sbb
xor
xchg
insb
push
dec
or
jl
imul
clc
or
mov
add
push
das
or
ficoml
stos
stos
fistl
out
pop
add
ljmp
jle
mov
or
xor
pop
arpl
divl
je
or
or
bound
test
pop
add
mov
pop
aam
sbb
pop
and
mov
imul
sub
xor
add
lahf
jge
xchg
insl
mov
xchg
jmp
lret
test
sub
mov
dec
dec
lds
push
sub
mov
imull
mov
ja
dec
daa
add
jecxz
jg
xor
cmp
xor
mov
xor
pop
xchg
js
in
xorb
xchg
sbb
xor
jecxz
and
sbb
inc
lcall
cmp
sub
xchg
cmp
push
addr16
jp
lcall
xchg
xor
popa
aaa
lcall
xchg
imul
data16
in
arpl
inc
shr
fisubrs
int3
fstps
enter
mov
stc
pop
add
mov
sbb
mov
push
and
lahf
xchg
push
test
jbe
sti
dec
ja
dec
sub
scas
mull
inc
das
sbb
cmpsb
fwait
inc
push
adc
mov
or
out
out
mov
jnp
imul
sbb
std
push
jl
cmp
fnstsw
add
jmp
cmpsb
inc
pop
enter
xor
dec
ljmp
push
aad
in
dec
dec
test
add
push
mov
sub
sarb
mov
iret
push
pop
aaa
iret
mov
pop
out
mov
jns
pop
int
in
sub
leave
fchs
mov
outsb
fbld
scas
pop
cs
jmp
bound
push
mov
jmp
jmp
in
in
negb
aaa
xor
add
sti
add
xchg
es
xor
mov
cmp
adc
mov
add
adc
mov
dec
pusha
int
inc
in
lcall
into
jnp
push
cmpsb
ja
test
sti
pop
jne
fildl
iret
sbb
and
xchg
sub
loop
popf
dec
pop
jmp
loop
pop
mov
mov
add
push
push
sti
and
pop
stos
test
fisttpl
mov
push
jmp
adc
lods
jns
dec
pop
dec
mov
mov
inc
cwtl
cmp
cmc
inc
sub
les
les
mov
repnz
out
hlt
insb
dec
dec
add
jg
push
push
add
cwtl
aad
and
insl
mov
inc
daa
int
fisttps
add
mov
and
pusha
xchg
push
aaa
pusha
sbb
pop
ds
and
jecxz
add
jl
or
repz
mov
ja
pop
cmp
fisubl
shlb
ret
dec
add
add
sbb
xor
xchg
decl
dec
adc
pop
orb
adc
or
div
lret
sbb
dec
mov
adc
add
movsl
and
push
scas
jge
sub
mov
xchg
and
sbb
dec
dec
pop
or
adc
push
sbb
paddsb
jecxz
sub
lds
cmp
pop
push
bound
mov
sub
push
and
dec
sahf
loope
xor
xor
jnp
jo
pop
orb
adc
pop
call
pop
pushf
dec
add
mov
in
aad
add
xor
leave
nop
ss
jne
push
js
push
inc
xlat
mov
test
jmp
mov
pop
dec
and
dec
sub
cmp
sbb
mov
repz
mov
les
or
pop
add
jbe
popf
hlt
cmp
fsubp
mov
xchg
pop
xchg
jge
outsb
mov
popf
push
push
dec
push
sti
jno
ja
mov
push
xor
pop
cmp
cmp
call
jnp
adc
or
xchg
adc
jmp
pusha
aam
aad
bound
nop
xchg
out
cmp
fldcw
mov
mov
loop
repz
or
inc
add
jge
mov
scas
cld
xor
roll
ds
popf
sub
sub
sbb
jecxz
movsl
xlat
fwait
or
sbb
sub
aad
dec
mov
popf
jecxz
mov
cs
in
sbbl
mov
mov
cmp
repnz
mov
andl
icebp
and
add
cmpsb
shrb
xchg
fwait
cmp
xchg
add
jns
movsb
sbb
call
mov
sub
arpl
xchg
push
pop
xchg
insl
mov
fcoml
repz
data16
cvttps2pi
mov
xchg
sbb
mov
lods
lret
and
mov
add
stc
call
sub
pop
sub
daa
outsb
je
sti
inc
cmpl
push
daa
cli
mov
xchg
push
dec
add
js
test
icebp
lahf
mov
add
imul
popa
insb
cmp
push
fadd
mov
loopne
enter
lcall
or
out
xor
cmp
xchg
out
stos
jo
aam
aaa
xlat
js
pusha
pop
mov
sub
and
mov
std
xchg
call
inc
loopne
mov
call
roll
lock
nop
das
out
fdivrp
xor
cmpsb
loop
mov
sub
cmpsl
std
push
mov
xchg
andl
sub
mov
pop
inc
cmp
hlt
jo
out
enter
les
xor
ficoms
sar
lea
lmsw
mov
aaa
push
outsb
sub
cmp
jnp
imul
mov
clc
test
sbb
dec
lret
jb
loopne
cmpsl
ds
insb
fwait
imul
mov
sub
adc
imul
enter
lds
xor
cli
pop
push
nop
push
test
add
je
or
in
gs
mov
sti
repnz
imul
iret
movsb
out
dec
xchg
push
pop
test
add
adc
pop
lods
cmp
mov
jle
fwait
and
xlat
inc
push
out
lret
and
push
mov
jecxz
inc
mov
pop
cmpl
sahf
loop
outsb
jp
out
xchg
dec
notb
or
or
cmp
add
cmp
enter
cmp
stos
add
icebp
in
out
push
cmp
addr16
in
aad
dec
push
xchg
scas
mov
test
push
push
test
mov
pop
movsl
dec
mov
adc
push
mov
mov
pushf
clc
pop
xchg
add
test
xchg
ret
xchg
add
adc
and
lods
mov
sub
jmp
mov
data16
adc
jge
dec
mov
mov
xor
and
pop
and
push
fcomps
pusha
aad
mov
mov
pop
iret
aad
sti
push
hlt
adc
into
pop
add
cmp
fnstcw
jmp
scas
mov
xchg
mov
in
or
bound
ljmp
leave
add
bound
lods
call
scas
mov
testb
push
jnp
mov
mov
ja
sbb
call
pop
add
xor
aam
inc
xor
cmp
stos
ffree
mov
mov
jmp
movsl
cmp
inc
and
sti
or
push
inc
mov
or
shl
push
sub
popf
mov
repz
jns,pt
xor
or
dec
nop
pop
fmuls
or
xchg
inc
mov
shll
jmp
xor
rclb
iret
sti
ficoml
ljmp
rcrl
in
test
add
loop
mov
xor
mov
and
and
jo
gs
cmpsb
rcrb
icebp
fadds
mov
mov
mov
pop
xchg
leave
shll
xchg
add
loopne
dec
ss
mov
inc
mov
ret
out
insb
in
xor
daa
xor
mov
leave
aam
cmp
sbb
dec
adc
cld
inc
sub
std
mov
mov
cmp
icebp
stc
shll
xor
into
cmp
aaa
sbb
gs
xchg
push
add
nop
add
xor
add
sbbb
mov
sub
js
test
mov
mov
iret
sub
fnstenv
leave
jns
xlat
adc
jecxz
sub
pop
dec
xchg
mov
xchg
or
push
pop
lods
fistpl
jb
mov
pop
je
jnp
adc
jne
pop
cmpsb
fwait
lds
adc
cwtl
enter
cmp
sahf
xchg
cld
dec
sbb
imul
xchg
arpl
pop
repnz
or
push
and
sub
stos
pop
rorb
inc
jo
or
xor
cmp
xor
iret
xchg
mov
mov
push
push
fsubrs
sub
and
aaa
gs
jp
cmp
cmp
jno
insl
dec
sub
pop
mov
roll
add
xchg
lcall
sub
xchg
push
ss
adc
jne
or
bound
int3
test
xchg
mov
add
jo
cmpsb
repz
cs
cmp
rcll
bound
or
shrb
push
jmp
jp
mov
pushf
lods
mov
insl
jne
push
cmp
push
scas
sub
or
insl
pop
call
je
jle
ror
movsb
movsb
sub
notl
mov
sbb
ret
cwtl
sub
sbb
testl
pop
mov
sub
leave
imul
mov
or
mov
test
test
pushf
lock
xorb
aam
decl
loop
push
fstpl
pop
enter
cltd
xchg
test
mov
outsl
pop
aam
fistpll
es
insl
inc
push
ss
xchg
mov
push
ja
popa
push
mov
stc
adc
lods
ret
dec
scas
inc
sub
xchg
cs
lods
or
ds
fdivs
jb
jmp
mov
push
pushf
xchg
fs
in
fucomp
pop
and
cmp
popa
bound
arpl
mov
push
loopne
sbb
adc
cmpsl
or
and
and
jo
add
push
stos
out
adc
fstps
and
pop
movsb
sahf
cwtl
xor
push
mov
mov
lcall
inc
add
sub
inc
lret
mov
subl
mov
dec
and
pop
sysret
inc
cwtl
dec
shlb
imulb
mov
insl
pop
dec
scas
add
add
adc
loopne,pt
rcrb
mov
imul
sbb
sub
cli
das
sti
inc
ret
xchg
mov
int3
inc
cmp
aaa
mov
fstl
cmp
mov
mov
add
mov
add
push
xchg
fdivrs
imul
mov
xor
out
xchg
xchg
repz
inc
mov
mov
xor
cmpsl
sbb
cld
mov
mov
dec
adc
stos
out
test
mov
loop
pop
lock
mov
push
lods
in
push
sub
cmp
pop
jle
push
ja
inc
cs
cmpsl
into
mov
xchg
xchg
out
negl
daa
dec
aaa
pop
pop
outsb
pop
jle
push
ja
inc
cs
cmpsl
into
mov
xchg
xchg
out
negl
daa
dec
aaa
push
pop
push
pop
jle
push
jbe
inc
cs
cmpsb
push
mov
xchg
xchg
out
negl
daa
dec
aaa
pop
pop
outsb
pop
jg
push
ja
scas
xlat
ds
xor
sub
push
jg
aas
push
das
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
aad
push
mov
fisubrs
inc
and
add
add
or
add
add
or
xchg
lret
add
add
add
add
push
add
add
roll
add
add
add
add
fldl
scas
add
add
pop
add
add
add
push
add
add
or
lcall
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
addl
pop
add
push
add
flds
add
jbe
dec
add
into
add
add
add
jl
in
in
push
add
add
add
add
sbb
add
sub
outsb
add
or
mov
add
add
add
fadds
lcall
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
fadds
dec
add
lea
dec
add
add
adc
add
jbe
cs
add
add
add
add
add
add
lea
popf
add
add
add
add
ret
add
and
into
add
lcall
add
add
and
jl
rolb
dec
add
roll
push
add
add
add
add
add
add
add
add
add
mov
movsl
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
stos
add
add
sbb
popf
add
add
roll
add
dec
push
or
filds
into
add
lcall
add
add
add
add
sbb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
mov
cmp
add
add
add
cmp
mov
add
add
jno
add
and
add
add
stc
add
add
dec
add
adc
add
add
add
add
add
add
fadds
pop
add
add
and
sbb
adc
pop
add
add
add
add
pop
add
add
add
add
roll
add
pusha
add
or
adc
or
pop
add
add
add
add
add
add
pop
add
jns
sbb
add
add
add
add
mov
mov
and
lcall
add
push
and
push
add
mov
add
add
add
pusha
add
add
add
add
add
pusha
add
flds
or
sub
mov
add
add
add
add
jae
sbb
jmp
add
add
add
add
test
add
dec
add
add
add
add
add
and
aad
dec
add
add
add
add
push
add
add
add
add
add
add
lea
add
add
add
add
jl
in
or
or
adc
add
and
add
fiadds
stc
add
add
add
pop
cltd
xchg
dec
xchg
lods
lock
xor
lret
insl
addr16
xchg
fidivl
adc
int
aad
into
or
lea
cmp
ret
test
push
hlt
adc
ds
outsb
lods
xchg
adc
imul
add
pusha
outsb
icebp
pop
add
adc
sbb
or
xchg
fisubs
es
ret
inc
out
jmp
push
sbb
dec
mov
push
xchg
outsl
cmpsl
ljmp
pop
lods
sbb
push
nop
test
or
jo
outsb
mov
sbb
xor
and
mov
or
mov
pushf
cld
mov
push
out
dec
pop
out
shl
popf
push
scas
cli
sbbb
movsl
inc
daa
addr16
or
cmp
movsb
dec
inc
sub
lods
clc
adc
add
mov
pop
enter
mov
jmp
es
rcrw
jp
imul
fstps
sub
pushw
int
jns
xor
out
std
adc
out
roll
sbb
mov
stc
mov
push
out
jl
shr
mov
inc
popa
pop
and
sbb
sbb
inc
adc
sbb
cmp
cld
loope
in
jecxz
pop
add
adc
pop
test
push
cmp
xchg
inc
pop
inc
mov
repz
lea
shrb
sahf
jge
out
sbb
repz
pusha
jns
mov
jg
or
jb
jmp
testl
or
clc
or
add
ljmp
fistl
popa
push
xchg
movb
jle
cmp
hlt
mov
sub
add
add
mov
fs
lfs
sahf
xchg
mov
cmp
cmp
xchg
adc
repz
fadds
dec
test
xor
xor
jne
xor
js
dec
jae
add
movsb
aas
mov
sbb
add
jle
call
xchg
push
hlt
mov
inc
loope
push
and
dec
bound
pop
in
rcl
mov
push
push
lea
push
idiv
insb
pusha
mov
mov
sarb
lds
and
stos
dec
in
sub
xchg
inc
mov
push
adc
fisubl
mov
dec
push
mov
fmul
loop
xor
jle
negb
jle
js
lock
nop
mov
xor
lods
xlat
popa
xor
imul
jge
mov
fnstcw
insl
mov
aad
jno
test
movsl
dec
fidivrl
push
xchg
aad
push
out
add
xorb
testl
inc
notb
icebp
ja
push
fstpl
in
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
