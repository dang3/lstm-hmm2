call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
hlt
jne
inc
aam
lods
jno
pop
icebp
push
cltd
adc
inc
lds
movsl
xor
add
adc
in
hlt
jne
inc
aam
movsb
and
xchg
adc
inc
lds
movsl
xor
xchg
in
hlt
jne
inc
aam
movsb
and
xchg
adc
xor
xor
and
inc
roll
jge
nop
gs
add
and
hlt
outsl
push
pop
imulb
push
subb
push
pop
or
xor
movsb
fnsave
fcomps
xchg
mov
gs
push
test
sbb
mov
icebp
jb
mov
fisubl
rcll
xchg
xchg
in
shll
roll
and
and
xchg
stc
loopne
cmp
in
jnp
mov
clc
jno
inc
xchg
sub
js
pop
inc
mov
je
mov
sti
test
incb
out
aas
ss
test
mov
ds
pop
addr16
ret
nop
push
xchg
daa
gs
jne
inc
aam
movsb
and
xchg
adc
inc
lds
movsl
xor
add
adc
orl
xchg
adc
dec
adc
mov
pushf
aaa
stos
adc
popa
pop
fs
and
aas
cmpsl
inc
xchg
add
inc
lcall
shrl
push
mov
push
mov
insl
lock
xorl
and
dec
mov
test
je
inc
lds
movsl
xor
add
adc
in
hlt
jne
inc
aam
movsb
and
xchg
adc
inc
lds
movsl
xor
add
adc
in
xchg
pusha
pop
mov
test
and
push
or
cld
cmpsl
xor
cmp
cmp
sti
inc
jge
aam
mov
gs
dec
xor
sbb
xor
jnp
arpl
mov
or
xor
mov
push
scas
jg
rorb
aam
testb
mov
pop
leave
pop
pop
cltd
push
mov
push
nop
sub
add
imul
xor
mov
popf
pop
sbb
push
mov
or
pop
pusha
std
inc
je
test
mov
mov
mov
add
sub
cs
and
cwtl
sbb
ficomps
aam
mov
dec
insl
mov
cli
sub
xchg
notb
out
mov
in
fs
sub
xchg
push
pop
mov
sti
mov
fists
inc
ret
movsl
jns
lret
cwtl
ja
ficomps
xchg
ds
mov
inc
outsb
sub
mov
adcb
sti
add
cld
mov
pop
push
ja
jnp
jo
adc
sahf
test
adcb
daa
in
rcrl
lahf
inc
pop
in
sarb
enter
in
pop
dec
mov
imul
ja
jp
adc
push
xchg
cltd
loop
negl
hlt
fst
jp
outsb
push
clc
scas
jge
aad
mov
inc
mov
stos
test
jae
dec
je
lret
add
dec
outsl
std
jns
dec
cmp
inc
and
out
jle
movsb
jp
dec
divb
mov
sahf
jb
dec
insl
aad
cltd
cwtl
pop
stos
add
leave
das
adc
push
shl
insl
pop
cmp
pushf
sbb
mov
das
push
mov
lahf
fs
push
push
iret
int3
and
or
and
adc
fcoms
je
xchg
clc
sbb
fcoms
aaa
mov
add
xchg
adc
into
add
sub
sti
test
outsb
add
inc
and
lcall
cltd
inc
add
inc
ds
pop
mov
xor
rcl
adc
push
mov
xor
push
sbb
pop
xchg
mov
push
subl
add
mov
and
imul
lcall
cmp
pop
push
pop
leave
sub
push
mov
cmp
loope
sub
xchg
int3
xchg
xchg
icebp
push
and
and
pop
mov
mov
fcomps
mov
test
dec
push
xlat
cmpsb
test
add
sbb
pop
xchg
inc
xchg
adc
out
stc
push
outsl
test
sti
or
lret
mov
ljmp
push
lods
jnp
cli
xchg
testb
add
and
shll
or
fnstsw
mov
lret
in
add
pop
dec
mov
xchg
or
scas
mov
lret
or
mov
pop
mov
jge
out
outsb
xor
sti
es
jno
add
xchg
shlb
push
push
sbb
add
call
out
orl
es
pop
repnz
rcrl
add
insl
sub
sub
dec
mov
xchg
pop
movsl
shlb
xor
enter
add
js
lahf
popf
jge
outsb
xor
sbb
lcall
add
adcl
adc
mov
xor
xchg
sahf
xchg
cmp
mov
pushf
push
hlt
mov
mov
xchg
fdivrl
adc
cmp
dec
mov
movb
es
cmp
es
push
popa
push
aaa
jp
mov
rorb
inc
mov
lock
and
and
mov
sahf
adc
sub
jecxz
and
dec
aaa
jbe
ud0
xchg
inc
sub
sbb
and
pop
xorl
xchg
mov
jge
fs
cmp
xlat
cmp
mov
inc
mov
fcomps
sbb
mov
cld
inc
cmp
ja
sbb
decl
insl
or
insb
out
jnp
xchg
dec
aaa
jns
mov
in
xor
or
mov
dec
mov
push
jp
sti
xor
pop
fdiv
pop
push
jl
mov
inc
rclb
mov
xor
fsubs
jmp
jns
loop
xor
lea
lcall
and
int
xchg
dec
pop
gs
xor
mov
cmp
adc
jmp
pushf
nop
js
hlt
xchg
or
xchg
shll
inc
subl
test
sbbb
sub
sbb
rcrl
dec
add
xor
fstpt
lret
je
adc
lahf
push
xchg
in
mov
ds
gs
sbb
stos
mov
jns
out
sbb
pushf
mov
and
push
into
xor
bound
add
mov
dec
stos
mov
sbb
adc
xor
sub
roll
mov
ret
mov
imul
mov
mov
and
ror
sub
pusha
dec
cmp
aaa
sub
data16
insl
or
mov
movsb
arpl
xchg
cltd
das
outsl
in
and
push
pop
cmp
push
push
mov
imul
icebp
push
adc
cs
std
sub
push
or
test
fxam
inc
rcll
int3
xor
mov
push
ljmp
stc
xchg
fiaddl
mov
loope
repnz
push
add
or
out
push
jecxz
inc
stos
test
and
push
rcrb
mov
daa
mov
popa
int
and
xor
insb
clc
inc
pop
or
jp
or
shll
pop
bnd
popa
push
inc
sbb
dec
cmp
cmp
jge
jo
ret
adc
shl
daa
pusha
dec
arpl
dec
or
ds
es
add
test
lcall
arpl
test
faddl
fnstsw
inc
clc
jnp
xor
cmpsl
mov
call
adc
pop
outsb
subb
cmp
enter
mov
mov
in
adc
data16
xchg
ret
add
push
mov
or
mov
andl
sub
shr
std
dec
adc
rcl
or
xchg
push
cmp
or
ret
add
shll
sbb
out
cmp
sbb
mov
cld
testb
lahf
or
mov
or
adc
xchg
sub
roll
mov
sarb
stos
outsb
mov
pop
xlat
and
pushf
mov
dec
test
mov
mov
in
push
mov
xchg
roll
pushf
add
fsubs
ss
mov
outsb
cli
ret
pop
jns
pushf
aaa
inc
cmp
sub
jmp
jl
xorb
test
repnz
inc
sbb
xor
jge
rclb
cmp
lds
bound
pushf
rorb
jno
lds
ja
and
ljmp
jle
jne
cli
and
sub
test
movsb
dec
sub
sar
movsb
dec
adc
jecxz
fwait
call
lret
divl
add
lods
rorb
push
bound
sub
push
int
call
mov
mov
repnz
repnz
out
cmp
sub
sbb
int
fisubrs
sbb
inc
loop
cmp
imul
jb
jle
dec
or
push
cmpsl
in
and
sti
inc
jno
adc
fildll
sub
jmp
adc
jmp
xchg
push
add
aas
adc
test
ret
daa
ljmp
mov
xchg
xchg
orl
ret
dec
movsl
and
lods
rorb
test
adc
xchg
pop
orb
pop
sub
push
insb
hlt
cmc
sub
daa
sub
xor
cld
mov
mov
dec
cld
mov
scas
push
xor
sti
push
ss
mov
test
push
inc
ja
xchg
int3
sbb
or
jno
sbb
mov
add
shrb
call
push
fcomps
sbb
cmp
popf
test
and
xchg
sti
xchg
sahf
xchg
daa
mov
pop
pusha
inc
pop
inc
adc
sahf
xchg
dec
cmp
inc
dec
pop
icebp
repz
rcrl
xor
dec
sbb
jl
mov
nop
xchg
incl
jo
mov
add
adc
inc
movsl
or
lahf
cmp
and
sbb
lock
pop
mov
dec
and
repnz
andb
mov
cli
loope,pt
sub
cmc
mov
push
cld
shrb
and
sbb
jle
sub
jl
mov
cmpsl
xor
aam
fidivl
mov
rorb
mov
in
das
mov
fisubs
mov
push
in
mov
iret
dec
push
nop
subl
xor
inc
lahf
sub
andb
fidivrs
adc
adc
mov
dec
adc
pop
push
les
insb
gs
leave
push
push
mov
mov
adc
push
cmpsb
icebp
push
lret
jo
lds
mov
insl
pop
addr16
test
fnsave
clc
outsb
dec
mov
add
mov
cli
pop
in
and
mov
mov
lret
in
icebp
mov
cmovb
mulb
flds
fldt
or
adc
hlt
mov
xlat
mov
inc
sti
adc
mov
mov
adc
out
sub
repnz
cmp
fisubrs
sbb
in
roll
dec
inc
adc
xchg
jb
push
pop
lcall
in
lea
enter
fdivr
sub
xor
xchg
adc
adc
shlb
sarb
stc
lahf
stos
mov
lea
sub
dec
stos
jl
dec
cmp
xor
jne
sub
sub
mov
push
push
in
push
popa
or
push
jg
cmp
pop
imul
mov
shrb
andb
fildl
mov
xor
pop
stc
and
ror
mov
adc
dec
or
enter
pop
in
jmp
pop
sub
aas
adc
xor
sahf
scas
xchg
inc
icebp
jle
add
popa
mov
in
jo
add
std
mov
pop
shlb
ret
inc
jle
rcrb
mov
xorl
ljmp
mov
xchg
push
es
repz
and
leave
mov
scas
pop
movl
stc
pop
das
fisubrl
cmpsl
mov
xor
mov
iret
addr16
bound
idivl
imul
ffree
or
in
adc
or
sub
mov
sbbb
cmp
std
sub
sub
outsl
pushf
inc
rcr
add
stc
imul
sbb
loope
adc
das
cmp
mov
push
fucomip
sub
rcll
mov
js
pop
push
test
push
mov
sbb
aam
cmp
into
push
jnp
sub
mov
out
cmpsb
hlt
jnp
scas
cmc
jne
fwait
cmpsb
fmuls
sahf
rolb
xchg
mov
cmp
mov
mulb
jle
rol
xchg
and
mov
mov
mov
pushl
mov
add
inc
cmp
cmp
clc
inc
test
sub
enter
test
les
mov
push
and
inc
xchg
jbe
or
pop
or
xlat
out
mov
decb
or
mov
popa
pop
sar
mov
je
int3
push
mov
adc
xchg
jle
fstps
cmp
or
out
xchg
daa
xor
punpckhbw
push
repz
jae
push
mov
js
gs
fcompl
arpl
sub
call
outsb
cltd
cmp
jge
fldcw
lret
clc
nopl
dec
scas
daa
inc
scas
packsswb
cmpsl
fistpl
stos
fdivrs
add
xchg
aad
sbb
cmp
fadd
cmp
lds
testl
jb
adc
test
int
mov
dec
dec
and
xchg
insl
mov
sbb
aad
push
call
mulb
dec
outsb
pop
mov
xchg
ret
push
loope
popl
pop
dec
lret
cltd
push
mov
pop
cmpsl
jae
lcall
fwait
mov
and
je
pusha
push
jae
imul
pop
call
aam
aas
pop
shrb
sbb
xchg
lock
jbe
aam
cltd
and
les
aaa
cli
dec
shrb
loopne
inc
add
fisubrl
fisubrl
clc
mov
cmpb
jae
test
int
jns
gs
push
and
iret
loop
outsl
iret
test
gs
jecxz
aad
ret
outsb
mov
clc
sub
scas
movsl
add
fstl
aad
dec
fnstsw
in
dec
add
xchg
adc
insb
adc
call
lret
cli
cli
xor
pop
add
sbbb
bound
or
mov
stc
leave
or
lock
frstor
pop
lcall
out
add
call
je
mov
pop
ja
jnp
jmp
and
stc
in
cmp
shl
roll
jns
pushf
ljmp
idivb
xchg
aad
adc
mov
das
xchg
jbe
inc
mov
xlat
jns
cmp
pop
sbb
add
lahf
bound
cmp
cmp
addr16
dec
pop
mov
cwtl
mov
jbe
cmp
mov
lcall
mov
push
sub
add
push
pusha
mov
push
mov
or
out
aaa
sbb
sarb
xchg
push
dec
test
dec
mov
loopne
loope
or
push
xor
notb
jno
inc
vpcmpgtb
jo
dec
push
xlat
add
inc
stc
adc
stos
adc
aam
fdivs
lcall
mov
add
cmp
add
xrelease
pop
and
mov
xchg
mov
push
test
fidivs
add
movsl
popf
daa
cmp
inc
mov
push
adc
inc
or
sub
push
and
jp
data16
xchg
int
fistpl
imul
add
jae
inc
jmp
mov
push
sarb
jmp
shl
mov
mov
xchg
xchg
and
xchg
popa
dec
jne
aas
push
je
repnz
int3
stos
test
mov
mov
xchg
cmp
pop
icebp
sarl
inc
pop
dec
push
cld
inc
xor
dec
maxps
lret
or
test
jl
les
or
aad
ja
sub
xchg
sub
int3
jge
push
in
inc
mov
adc
dec
xchg
call
pushf
add
out
int
in
mov
xchg
dec
sub
out
adc
es
xlat
and
mov
cmp
cmpsl
rolb
lret
inc
cld
out
mov
pushf
inc
sahf
mov
mov
ljmp
aaa
add
je
pop
mov
leave
add
test
cli
mov
cwtl
jne
arpl
ja
cmp
and
repnz
or
repnz
js
pop
pop
xor
test
and
rol
aas
adc
test
xchg
roll
mov
popf
out
sbbl
in
mov
or
jge
or
xlat
pop
pop
test
rcrl
stc
fdivr
and
mov
cs
les
sbb
add
popa
cmp
loopne
xchg
arpl
and
mov
dec
jge
std
imul
jmp
mov
insb
movl
mov
insl
sahf
mov
int3
jl
jnp
ret
mov
inc
xchg
les
mov
xor
add
jbe
xchg
inc
xchg
sti
loop
mov
cmp
mov
enter
pop
mov
cmp
in
aas
cmp
push
sbb
movl
pop
pushf
std
inc
and
cmp
jb
xchg
push
pop
push
stc
and
pop
stc
dec
jle
jbe
mov
idivb
imul
in
decl
shrl
add
mov
std
add
inc
popf
push
push
push
sub
outsl
pusha
lock
cmc
xor
mov
imul
dec
je
mov
mov
gs
mov
sub
mov
pop
cli
adc
cmc
enter
cmpsb
jbe
stos
mov
fbld
ficoml
je
push
cwtl
jns
rolb
cmp
and
gs
call
cs
and
push
in
or
popa
or
cmp
popa
sahf
sub
pop
push
dec
fsubl
test
movsl
xchg
pop
jmp
and
fs
xchg
ret
ud0
test
test
in
dec
ret
std
pop
imul
arpl
addr16
dec
rorb
aaa
inc
ss
aas
cwtl
sbb
and
pop
gs
insb
int
dec
jmp
subl
rcll
jecxz
mov
lea
in
mov
mov
sub
bound
loop
sub
or
ja
push
push
and
push
divb
push
xchg
cmp
fdivs
and
rcll
adc
xor
jp
call
xchg
jge
pop
loop
and
lret
xlat
fstps
adc
cmp
enter
insl
adc
scas
sbb
lret
and
jae
sub
dec
add
push
clc
aas
je
leave
ret
dec
push
or
push
cli
test
lods
cmp
in
xlat
inc
pop
sbb
insb
jae
lahf
rolb
mov
adc
int
or
hlt
daa
push
xchg
cmc
adc
pop
test
testl
aaa
rcrb
sub
test
jle
arpl
daa
add
mov
xchg
adc
xor
repz
lcall
loop
sub
int
dec
and
jl
test
cs
lahf
dec
sub
jb
int3
into
sti
cmp
cwtl
add
adc
out
test
movsb
scas
jae
jo
test
imulb
notb
rorl
mov
aas
cmp
or
test
jne
lret
xchg
xor
push
mov
push
cwtl
fwait
nop
jmp
arpl
push
jne
orb
and
dec
jl
mov
add
adc
inc
testb
mov
inc
repz
ds
test
jp
adc
shr
in
daa
mov
loop
inc
ror
in
mov
out
loopne
xchg
rorb
iret
mov
jns
mov
cld
cmp
addr16
xlat
pop
fstpt
ret
insl
lahf
call
adc
pop
mov
mov
in
insl
hlt
xchg
repnz
push
int3
popf
fdivrs
sti
sbbl
pop
or
sti
add
sub
aad
cmp
xor
outsl
push
push
insb
push
mov
rolb
sbb
jp
push
fwait
std
inc
sbb
jg
lcall
aas
or
les
btc
mov
or
shlb
push
mov
jmp
jo
cmp
pop
sbb
mov
je
fildl
in
clc
dec
adc
jne
ds
movl
dec
movsl
negl
sbbl
repz
pusha
sahf
pop
push
mov
mov
cmpsb
push
cwtl
cli
leave
repz
sub
fxch
dec
mov
stos
fnstcw
mov
push
test
adc
cmp
pop
mov
xchg
inc
lds
adc
repz
pop
ret
inc
bound
aaa
push
call
sarb
fsubs
dec
clc
ffreep
sub
inc
lods
idivb
xchg
inc
insl
sub
rcll
bnd
mov
jnp
or
cld
pop
mov
lock
daa
adc
mov
cmc
ljmp
pop
fs
pop
pop
push
aam
insb
mov
sub
test
fbld
jno
je
shlb
les
cld
jp
and
ds
or
pop
push
mov
pop
sub
add
in
sbb
cld
adc
ret
jne
xchg
addr16
inc
jmp
dec
mov
lea
test
cmp
cmpsl
mov
clc
mov
mov
dec
xor
cmp
add
mov
cmp
and
es
mov
iret
adc
adc
push
jo
pop
sbb
test
pop
xor
cmp
inc
in
or
lock
insl
test
adc
mov
lret
imul
ret
pop
cmp
cld
mov
pop
xchg
adc
dec
das
pop
test
add
int3
push
xor
mov
pushf
sub
inc
pop
adcb
icebp
repz
adc
pop
stos
or
push
xor
dec
pusha
shl
movsb
dec
cmp
and
xor
jns
popa
add
in
dec
pop
lods
lock
rcl
cltd
insl
movsl
bnd
repz
sbb
ljmp
fstl
pusha
aas
mov
shr
push
sahf
sub
sahf
shl
je
cwtl
xchg
lahf
cmp
jo
jle
mov
lgs
sub
lret
push
lds
inc
aam
movsb
and
xchg
adc
inc
lds
movsl
xor
add
adc
in
hlt
jne
inc
aam
movsb
and
xchg
adc
inc
lds
movsl
xor
add
adc
in
hlt
jne
inc
aam
movsb
and
xchg
adc
inc
lds
and
xor
add
gs
jne
inc
aam
movsb
and
adc
fwait
sbb
mov
cld
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
sbb
sub
cmp
sbb
mov
cmpb
clc
sar
or
sbb
sub
cmp
dec
pusha
pop
cld
push
mov
mov
enter
call
mov
xor
test
adc
inc
dec
jo
js
xchg
jg
shl
ffreep
jecxz
mov
cltd
mov
scas
shlb
ja
sub
inc
sbb
sti
test
mov
loopne
rcrb
xor
out
push
pop
test
add
adc
call
enter
pop
pop
mull
in
fistpl
jle
mov
fmull
out
fcmovnu
sub
xor
lock
loopne
and
adc
mov
pop
sbb
pop
cltd
loopne
mov
insb
aaa
loope
packsswb
clc
sbbl
fsubs
inc
inc
xor
mov
pop
mov
xor
call
lea
sub
add
ja
adc
mov
sar
shll
shrb
cmp
pop
pusha
dec
jo
lcall
mov
mov
or
sar
fs
xor
dec
cmp
pop
and
out
cmc
fcomi
fdivr
enter
lcall
jno
popa
dec
xor
push
vcvttpd2dqy
mov
mov
insl
jbe
ja
push
push
jae
add
jo
inc
js
mov
mov
lock
and
xor
add
adc
pop
jo
inc
js
mov
mov
lock
and
out
mov
cmp
push
mov
fadds
cmp
orb
or
imull
sub
int
pusha
aas
nop
andb
shrb
lret
cs
jae
outsl
sti
jge
fdiv
out
hlt
push
xor
cmc
jecxz
clc
les
sbb
push
aaa
xchg
sbb
push
xlat
pop
popf
scas
and
ja
fldcw
push
movsb
mov
inc
lock
imul
jge
add
sahf
pop
jge
mov
sub
mov
mov
scas
stos
adc
jne
mov
jp
mov
mov
xchg
and
mov
push
or
int
aad
xchg
sbb
scas
mov
mov
mov
out
gs
iret
inc
aam
sbbb
add
addr16
std
jp
lcall
enter
mov
pusha
sub
repz
jb
in
sub
inc
xor
xchg
mov
test
lret
xchg
es
loope
test
push
repz
inc
push
inc
cmc
aam
push
dec
aaa
in
xor
xchg
xchg
push
mov
mov
shl
adc
pop
xchg
mov
push
mov
dec
mov
and
mov
test
fisttps
or
pop
and
or
orl
loope
mov
das
dec
stc
stc
test
add
les
arpl
and
aas
sub
je
imul
xchg
sbb
stc
cmp
fidivl
pop
fwait
loop
mov
popa
imul
pop
insb
cli
out
xchg
and
rolb
fsubs
notl
xor
cs
fidivs
enter
test
pop
jp
sub
pop
mov
jae
loop
outsl
call
daa
cs
add
stc
sbb
cli
pop
loopne
aaa
pop
lods
aad
aad
dec
lock
mov
cs
enter
cmc
cmp
call
push
mov
adc
lods
sbb
add
out
not
clc
jmp
out
icebp
inc
lock
xor
out
lea
test
cs
imul
inc
pmaxub
inc
jno
shll
lret
mov
or
mov
cmpsl
daa
push
xchg
movsl
cmp
jecxz
test
out
ja
push
xchg
loopne
cmp
xor
pusha
mov
aad
lods
cmp
imul
sahf
lds
push
enter
jae
jp
roll
mov
adc
push
test
or
xor
xor
dec
inc
repz
testl
sub
sub
pop
dec
lds
mov
cld
mov
pop
jp
fnstsw
xchg
xchg
pushf
movsb
dec
ja
test
ja
lods
pop
xchg
les
xchg
cmp
xchg
push
jne
xor
pop
pop
pop
mov
sub
xchg
lea
inc
lea
add
out
sbb
mov
push
test
dec
cmc
test
dec
mov
xchg
pop
or
jge
enter
and
es
jp
sbb
pop
loopne,pn
dec
repnz
leave
popf
cli
lea
cmp
and
xor
xchg
mov
iret
xchg
inc
add
jle
dec
pop
in
xchg
jb
cmp
stc
fstp
xor
arpl
fcoml
pop
arpl
jb
lea
xor
adc
adc
jbe
dec
repz
adc
sti
xchg
rorb
out
xor
test
mov
cli
adc
repnz
sbb
sbb
std
nop
sub
pop
jmp
lcall
es
jmp
mov
push
adc
int3
fldl
cmp
or
outsl
xor
inc
pop
loope
rorl
jae
jae
add
pop
inc
push
push
pop
mov
outsb
adc
arpl
vmovaps
adc
cld
xchg
ret
pop
maskmovq
negl
mov
xor
into
push
enter
in
mov
dec
cwtl
cmp
cmp
int3
xchg
sbb
mov
test
lods
mov
inc
xchg
ljmp
mov
int3
stos
mov
sbb
aaa
adc
fimull
adc
arpl
and
inc
js
jb
push
jmp
outsl
in
jg
ljmp
mov
sarl
daa
lret
cmp
xchg
in
push
scas
ja
neg
jbe
and
inc
sub
push
sbb
add
popa
sub
sub
rcr
xor
mov
mov
sub
xchg
mov
icebp
icebp
jns
leave
adc
jecxz
iret
push
fistpll
cmpl
cld
insb
jno
add
sbb
lods
mov
loope
dec
addr16
inc
aad
jns
push
cmp
sahf
jo
mov
inc
inc
out
aam
push
xchg
adc
mov
xor
call
xor
fsubrl
mov
subb
xor
loopne
mov
add
dec
mov
sub
adc
loop
and
aam
mov
fcmovnbe
aad
shrl
adc
in
lds
lcall
xchg
push
pop
fmul
je
in
jle
sub
xor
jge
cltd
mov
dec
call
pop
ds
insl
push
mov
hlt
fadd
push
mov
add
inc
pop
and
test
outsl
pop
mov
nop
sub
imul
ja
adc
fwait
fwait
cld
fs
imul
dec
fwait
inc
lock
sub
pop
sub
sub
into
xor
fcoml
es
or
movsb
idivb
sub
dec
dec
scas
inc
jae
mov
sbb
popf
movsb
orb
or
in
xchg
push
cmp
in
xchg
int3
push
adc
sub
dec
aaa
add
imul
fisttps
imul
dec
and
or
shlb
sbb
ljmpw
dec
pop
imul
mov
imul
xor
pop
das
das
pop
es
and
mov
bound
jmp
aad
or
stc
jmp
hlt
testl
xlat
hlt
scas
addr16
in
call
aam
loopne
in
sub
push
pop
out
xchg
mov
fmull
addr16
pusha
mov
pminub
inc
adc
jbe
lods
nop
inc
xor
es
cmpl
ret
pop
cmp
lods
xor
push
pop
mov
jge
mov
sti
cmp
mov
xchg
cmpsl
vpackuswb
dec
or
pop
popf
enter
jg
or
icebp
sub
xchg
cmc
push
div
js
push
mov
inc
mov
jns
aas
xchg
insb
fwait
daa
mov
insl
sti
mov
or
mov
add
mov
cmp
push
in
sarl
out
cmp
adc
mov
fs
stc
lods
fmuls
jns
push
fwait
pop
cmpsl
jmp
in
mov
es
mov
jl
xchg
jns
mov
jge
mov
add
gs
sub
int
sub
mov
add
jmp
sbb
ss
bound
push
push
push
sub
inc
lcall
in
aaa
xchg
test
scas
cmp
mov
jb
mov
sbb
and
call
outsl
push
in
bound
inc
fcmovnbe
push
xchg
mulb
rcrl
sbb
daa
inc
or
frstor
mov
shrl
sub
lret
and
in
cli
jns
jo
push
in
and
cmpsl
mov
in
mov
adcl
dec
sub
imul
imul
and
arpl
popl
ljmp
and
out
pop
stc
xchg
push
stos
sub
add
push
inc
fwait
call
inc
sbb
add
pop
popa
fdiv
mov
int3
shlb
add
jmp
cmpsb
and
or
pop
sub
cmp
pop
aaa
adcl
data16
pop
lcall
pop
add
hlt
iret
mov
addr16
push
arpl
adc
xor
push
sbb
mov
mov
enter
sbbl
mov
xlat
ljmp
std
lcall
lret
jecxz
jbe
fimull
push
rolb
xchg
jbe
jae
je
jne
dec
testb
ljmp
insl
sbb
add
cmp
or
inc
xchg
jl
add
pop
aad
test
mov
mov
nop
adc
push
inc
push
in
bound
call
in
faddp
dec
dec
stos
pmulhw
loopne
stos
cltd
lea
aaa
fdivl
push
cmpsl
mov
pop
pushf
sbb
mov
mov
jmp
bound
lock
mov
inc
std
call
shlb
popf
sbb
cmc
cltd
movsb
or
int3
fsubrl
pop
cmp
jmp
sub
dec
jno
inc
testl
das
les
imul
repnz
sbb
loop
sub
dec
cmp
loope
cmpsb
pusha
les
jmp
cmp
or
push
das
mov
stc
add
inc
test
fmul
lret
imul
int3
loopne
addl
pop
fildll
mov
aam
leave
xor
dec
mov
xchg
test
xor
sub
pop
ds
rcr
lods
sub
xor
dec
dec
popa
cmp
je
cmpsl
pop
adc
xor
mov
jns
lods
popf
xchg
mov
sahf
pop
adc
data16
add
mov
sarb
jmp
popf
push
mov
sub
jnp
shl
ss
mov
pop
pop
test
leave
jb
cmp
adc
stos
dec
jns
imul
cli
fcomps
mov
lods
or
addr16
insb
inc
jmp
shrb
mov
mov
arpl
cld
nop
ret
pop
stos
sub
jmp
sub
aam
mov
sarl
stos
loopne
fsubrs
int3
mov
add
and
push
mov
nop
jo
add
bound
cld
mov
icebp
fdivrp
mov
jle
mov
lods
in
lret
mov
test
mov
inc
clc
sbb
mov
and
test
pop
mov
cli
inc
pop
lea
or
fsts
inc
inc
add
jns
mov
sbb
cmp
lea
gs
sub
scas
mov
rorb
rcl
add
loope
enter
jge
push
xchg
push
xchg
shl
stos
mov
dec
push
les
pop
mov
jmp
mov
cltd
and
xchg
adc
sbbb
stos
jge
cmp
fists
add
xor
in
sbbb
enter
cmpsl
jle
xor
loopne
in
stos
and
add
dec
movsl
leave
test
sbb
es
and
xchg
jmp
repnz
fisubl
dec
call
push
sub
fsubl
mov
and
movsb
fisubs
mov
outsl
or
popa
mov
ljmp
sub
leave
inc
push
cltd
jp
popa
inc
jmp
jns
push
sahf
shlb
pop
loope
cmc
sbb
insl
add
dec
sbbb
push
movsl
lcall
outsb
mov
out
xor
imul
adc
lods
xor
mov
add
push
incl
or
and
daa
call
xchg
mov
insl
sbb
leave
inc
push
mov
pop
imul
adc
sbb
jbe
jge
loopne
or
sub
rcl
inc
out
push
add
jecxz
xchg
mov
in
lods
cmpsl
in
sub
les
and
sbb
sub
call
std
inc
test
popa
dec
mov
mov
or
or
int
stos
sbb
dec
mov
jnp
adc
mov
clc
or
push
jne
xchg
mov
sbb
fwait
and
mov
aas
loope
test
fisttpll
repnz
lahf
int
cmp
xor
call
mov
jnp
mov
subb
shlb
sbb
bound
mov
xchg
or
stc
aaa
das
and
xor
xchg
fsts
scas
inc
sub
mov
fwait
mov
sub
push
sub
push
inc
cmp
inc
hlt
stos
rcl
sbb
ds
cmc
xor
push
mov
push
mov
or
xchg
lods
adc
mov
pusha
scas
loop
sbb
xchg
out
ljmp
mov
adc
iret
ljmp
adc
push
cmp
inc
lcall
stos
test
xchg
pop
add
aas
cli
inc
data16
lcall
daa
sub
aam
out
sub
add
mov
add
push
mov
shrl
jmp
js
mov
mov
sbb
stos
mov
or
cld
xchg
xor
jne
aam
mov
rep
inc
mov
pusha
dec
jae
lret
iret
lret
repz
scas
lods
sbb
and
sub
jecxz
cmpsb
pushf
rcll
adc
add
xchg
ffree
sub
push
hlt
jecxz
repz
mov
cmp
xor
outsb
cmp
push
and
mov
push
push
in
dec
pushf
addb
or
loope
imul
push
lcall
inc
ljmp
adc
stc
push
movsb
mov
adc
cs
scas
imul
inc
cmpsb
enter
imul
std
sub
or
mov
sub
cmp
nop
mov
into
subb
pop
mov
mov
lods
adc
fwait
adc
repz
out
or
xor
inc
loopne
push
imull
sbb
jb
imul
push
aaa
push
jbe
andl
cmp
aas
hlt
adc
imul
adc
pop
imul
insb
movsb
pop
imul
xlat
lret
add
pop
pop
mov
stc
imul
mov
js
std
sbb
ror
repz
xchg
outsb
mov
cmp
sbb
xchg
pop
into
pop
sub
outsb
enter
cmp
call
pop
jne
jne
jns
xor
aas
lods
addr16
lock
and
jg
insl
jbe
fbld
shlb
imul
stc
sub
jb
push
scas
cmpsl
nop
call
imul
cmp
inc
clc
push
scas
lock
jg
repnz
loopne
cmc
jecxz
sbb
stos
cmpsl
fisubs
inc
mov
adc
flds
adc
clc
cmp
aad
xchg
int3
sbb
xor
mov
stos
inc
fimuls
cmc
aam
push
cmp
pop
mov
xchg
ret
sub
mov
test
mov
out
and
out
lods
jl
cmp
mov
jg
fwait
fwait
test
shlb
rcr
js
and
adc
aad
movsl
cld
add
inc
sbb
mov
lret
xchg
or
dec
pop
mov
mov
inc
jbe,pt
lahf
call
push
sbb
popa
stos
fmull
push
cwtl
aas
das
shll
and
cmpsl
imull
mov
je
nop
push
shrl
xchg
mov
add
into
dec
adc
out
inc
sub
and
adc
mov
add
xor
xor
xor
add
mov
sub
sbb
adcl
imul
sub
dec
sub
pop
pop
fsts
inc
ror
std
push
xchg
insl
in
int3
mov
popa
enter
mov
test
ror
mov
cmp
dec
xorb
xor
jae
sbb
dec
nop
insl
mov
popa
dec
mov
adc
push
or
and
fildll
insl
add
out
jg
jns
fstl
cmp
push
mov
mov
fwait
idiv
ffreep
xor
adc
loop
cmpsl
adcl
pop
sbb
mov
testb
test
pusha
push
jns
pop
pop
lea
mov
add
fisttpll
bsf
cmp
jecxz
mov
xchg
mov
xchg
mov
fisttpll
adc
aad
xchg
xor
sub
add
push
iret
xchg
add
sbb
fidivs
inc
int
outsl
loopne
out
enter
xchg
inc
jbe
lods
push
jmp
push
arpl
rcrb
test
mov
aas
xor
xchg
jo
stc
jns
clc
xchg
and
mov
xor
lods
mov
push
add
pop
inc
cwtl
out
sub
inc
call
push
shr
sub
mov
cld
lcall
lods
pop
lock
fwait
out
lcall
mov
sub
adc
int
sbb
jnp
mov
rorb
dec
mov
mov
shlb
test
xor
test
aam
outsl
fdivrl
les
sbb
or
sbb
lea
sti
mov
in
idivb
lods
lock
pop
cmpsb
mov
xor
pop
xor
sbb
dec
push
or
fld1
add
sahf
and
inc
in
outsb
mov
cwtl
xlat
in
test
mov
mov
aam
adc
mov
sbb
movsb
pop
dec
mov
int3
or
call
sbb
fsubrs
int
hlt
pop
ret
mov
push
outsl
ret
outsb
cwtl
rorl
fwait
jnp
pop
push
mov
dec
popa
cmp
pop
repz
movsb
push
or
xchg
clc
fisubrs
mov
int3
mov
in
and
inc
mov
dec
pop
mov
sub
jmp
stos
clc
mov
or
add
inc
or
xchg
and
in
fs
lret
js
ja
scas
or
push
les
mov
loopne
push
test
cmp
in
and
sbb
mov
cmp
adc
mov
inc
cmp
popa
sub
and
adc
sti
xor
lea
cmp
sti
das
cmp
sbb
lcall
scas
adc
test
push
dec
jmp
arpl
xlat
jg
ljmp
inc
push
bound
jae
int
inc
add
jmp
xor
dec
pop
pop
dec
loopne
mov
fbld
xchg
jge
jne
sbb
out
jg
inc
xor
stc
pop
push
outsl
push
jae
nop
add
and
push
mov
add
mov
inc
fwait
push
push
push
fists
stos
ret
loop
cs
enter
push
ss
inc
mov
leave
cltd
pop
and
out
xadd
jns
xor
fmuls
test
out
sub
and
mov
nop
loopne
cmpsl
stos
addr16
mov
pop
mov
dec
jno
dec
push
aaa
push
int3
pop
sbb
dec
cmp
dec
mov
dec
sbb
imul
ffree
and
sub
sub
mov
xchg
cmc
mov
inc
fldenv
cmp
xor
push
repz
add
insb
jne
xchg
insb
test
lret
notl
add
mov
mov
int
mov
stc
xchg
lahf
fwait
cmpsl
out
inc
xchg
jb
out
daa
stos
mov
lret
mov
mov
or
call
movsl
sti
pop
mov
mov
mov
sub
xor
mov
mov
push
pop
icebp
xor
sbb
mov
outsl
mov
or
jmp
pop
testl
sbb
test
arpl
sbb
jp
hlt
std
lock
subb
imul
push
mov
inc
cmp
mov
jae
aad
cmp
arpl
pop
mov
adc
cmp
or
rolb
sbb
adc
push
xchg
out
inc
mov
pop
dec
or
loope
repz
jge
lds
mov
push
movb
jae
in
dec
hlt
shl
and
jnp
dec
jbe
shl
push
lods
cld
in
dec
inc
adc
int3
jle
loope
dec
sbb
sub
testb
sbb
mov
dec
add
cmpsb
inc
sbb
lret
push
jnp
mov
mulb
xor
rcll
bound
in
ja
mov
shl
lods
fstps
ror
pop
es
jo
mov
fadds
in
mov
test
inc
and
jo
imul
pusha
jp
jae
cld
cmp
xor
jae
std
xchg
push
stos
int
stc
jge
mov
jmp
ret
ret
sbb
or
sbb
sub
scas
cmc
jns
sbb
pop
pop
scas
dec
mov
pop
push
adc
xchg
sarl
scas
loopne
sbb
push
jno
dec
fwait
inc
cmc
int
cmpsb
mov
lret
mov
and
dec
sub
aad
mov
pop
bound
pop
sub
pop
daa
sub
or
sub
cmp
scas
repnz
sbb
dec
das
and
out
outsb
repz
hlt
add
popf
mov
jecxz
out
inc
aad
xor
pop
imul
stos
mov
xor
insb
cmp
dec
pusha
pop
jo
inc
js
mov
mov
lock
and
xor
add
adc
pop
jo
inc
js
mov
mov
lock
and
js
js
adc
pop
fsubrs
js
mov
mov
cmpb
call
and
xor
add
adc
pop
jo
sar
ja
sbb
cmpb
pop
aas
pop
das
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sar
shr
fsubp
into
pop
push
repz
fcomip
stos
mov
inc
outsl
jno
pusha
pop
adc
add
sar
shr
fsubp
into
xchg
mov
mov
outsb
jno
popa
dec
rorl
xor
and
shl
shl
loope
xchg
cmpsl
xorl
sbb
jno
pop
inc
insb
dec
popa
mov
lea
mov
movsb
mov
clc
pop
mov
movsl
pusha
loope
ja
decb
lods
xlat
push
sahf
outsb
into
sbbl
add
mov
pop
add
out
lods
testb
xchg
xchg
sbb
call
push
jle
outsb
jno
mov
xchg
push
push
and
mov
loope
mov
xchg
mov
fcompl
or
out
add
mov
adc
jnp,pn
adc
and
mov
xor
pop
xchg
hlt
cmpsb
sbb
inc
cmp
ds
dec
and
xor
push
push
xor
or
mov
add
mov
mov
je
mov
icebp
loope
xchg
mov
mov
jbe
inc
popa
push
adc
add
xor
seto
mov
cwtl
mov
repz
aad
mov
outsb
jno
sbb
adc
sub
jno
bound
lea
leave
ljmp
jae
popa
dec
adc
cs
jns
jp
inc
out
sahf
mov
subl
jno
popa
dec
adc
add
xor
and
sar
shr
fsubp
into
xchg
mov
mov
outsb
jno
popa
dec
adc
add
xor
and
sar
in
insb
pop
into
int3
outsl
xor
push
xchg
es
xchg
jb
pop
sbb
push
sub
addr16
clc
cmpb
inc
inc
pop
pop
mov
rcl
xchg
es
mov
jno
bswap
sbb
mov
test
lret
dec
mov
xchg
sub
mov
sbb
lcall
hlt
or
imul
and
out
jae
imul
and
sub
outsb
leave
and
adc
out
jo
xchg
xchg
jne
and
jmp
jb
sub
xchg
xor
jl
inc
scas
mov
dec
push
xlat
cli
stc
lret
data16
mov
xlat
ljmp
jae
mov
sar
pop
push
and
push
iret
scas
or
lahf
mov
into
adc
push
or
pop
repnz
xor
rolb
add
cmp
mov
and
loopne
pop
add
push
dec
xor
in
das
in
into
cmp
sub
mov
add
cmp
jl
or
pop
mov
sbb
nop
and
push
cmp
clc
or
das
rorl
lea
sub
mov
mov
sub
cmp
cmp
pop
cmp
cs
lea
stos
lret
mov
mov
or
add
movsb
mov
dec
test
fs
fstpt
int
and
xor
or
sub
cmc
xchg
loope
xchg
bound
push
cmp
inc
adc
in
jle
stos
dec
in
mov
mov
rorb
dec
loope
adc
stc
jp
and
sub
lods
ljmp
adc
mov
xlat
out
pop
into
lods
rcrl
mov
repz
pushf
sub
loopne,pn
sub
dec
cmp
pop
mov
and
push
xchg
aam
push
movsl
sbb
movsl
mov
push
mov
lods
nop
rcrl
stos
or
gs
dec
lods
fcmove
jnp
lea
aaa
sbb
dec
std
andl
popa
cmpl
xchg
icebp
adc
push
cmp
mov
lret
jmp
jb
aam
adc
sbb
incb
fxch
roll
jae
mov
push
sub
dec
push
sbb
xchg
imul
inc
addr16
push
cmp
xchg
aad
mov
mov
lret
xchg
loope
push
shl
in
dec
sub
dec
cli
and
subl
mov
lcall
bound
ja
test
add
aas
shlb
mov
loop
sub
inc
and
xchg
inc
xchg
mov
or
mov
sub
daa
jl
cltd
repnz
sbb
stc
push
push
shlb
jmp
or
mov
popf
pop
jle
popf
std
andl
dec
dec
daa
cs
push
mov
xor
daa
mov
cld
cmp
xchg
jo
xchg
adcl
loopne
fs
add
xor
out
mov
or
cmp
ljmp
push
gs
mov
fidivrs
in
jae
push
cld
stos
inc
cmp
jno
jo
sbb
push
cmp
cmp
push
dec
xchg
leave
pop
adc
cmpsl
clc
inc
pop
push
xchg
sub
insb
cli
in
stc
adc
je
mov
test
aam
loop
sbb
pop
push
xchg
cmpsl
sub
sbb
stos
int
push
pop
movsl
adc
mov
mov
mov
loop
push
ficompl
push
imul
lock
sbb
or
cmpsl
push
sbb
mov
mov
call
mov
adc
add
or
or
jbe
mov
js
xchg
cmp
and
inc
iret
dec
fistps
adc
scas
push
lahf
loope
aam
fwait
scas
fs
cmovp
ficompl
xchg
sub
jle
push
hlt
fnstenv
mov
inc
xor
jne
pop
push
sub
pop
lds
and
and
aad
aam
sub
inc
jecxz
mov
jns
sti
in
dec
popa
ret
sub
jecxz
inc
mov
icebp
pop
xchg
xor
test
rcl
dec
xchg
dec
ds
frstor
lds
bound
pop
sbb
push
dec
cli
adc
or
int3
inc
adc
popl
adc
dec
cmpsb
lods
xchg
push
fwait
cs
sbb
inc
outsl
daa
add
xchg
sub
ss
imul
cmp
js
xchg
fwait
fwait
sbb
sbbl
jmp
outsb
cmp
fidivrl
and
test
scas
mov
mov
add
push
pop
mov
int3
icebp
insl
jbe
pushf
xchg
or
adc
mov
or
jae
lcall
and
in
sbb
test
aad
and
ret
inc
test
xor
fstl
ss
dec
mov
frstors
js
subb
push
jp
add
ja
jns
jno
adc
cwtl
mov
dec
dec
push
call
sbb
jae
adc
test
test
mov
rcll
or
andl
adcb
add
mov
mov
mov
mov
in
push
outsb
fs
sarb
into
adc
mov
cs
jle
cs
dec
bound
pop
xchg
adc
jp
push
inc
jbe
lfs
lods
cld
mov
sub
cmpsb
fdivrs
lods
jle
inc
shlb
jle
xchg
scas
dec
xchg
shll
inc
jno
push
icebp
call
jecxz
test
subl
dec
aam
sub
test
inc
loope
mov
and
gs
xor
mov
sahf
out
sahf
inc
in
cwtl
lret
jecxz
fwait
in
ljmp
test
lcall
lret
adc
push
aam
fcmove
loop
lods
lock
pop
inc
xor
cmp
inc
xor
mov
in
xor
fsubrl
loope
outsl
or
stos
or
xchg
scas
inc
mov
mov
pop
fldcw
sbb
mov
jle
subl
icebp
imul
cld
ss
sub
out
pop
push
mov
dec
je
push
sub
sti
cmpsl
jbe
and
aam
fadds
inc
adc
xchg
out
sbb
insb
mov
sbb
loop
push
adcl
andl
mov
inc
stos
xor
or
mov
int3
xchg
jb
dec
popa
jns
push
inc
sbb
sbb
rorb
sub
mov
jp
push
cld
jge
fs
push
xor
jae
lahf
sub
xor
push
push
pop
pop
paddusb
pop
dec
and
nop
add
and
rcl
mov
sub
sarb
imul
clc
pop
into
cmpsb
enter
aas
ljmp
iret
push
es
je
repz
push
dec
ret
das
fisubrl
and
push
test
cmp
clc
call
dec
pop
xor
add
in
call
int
cmp
mov
inc
ja
pop
xor
fs
enter
xchg
inc
cmpsb
testl
adcb
sbbb
xor
jg
jmp
lods
clc
pushf
mov
popa
jl
cmp
rsqrtps
fcmovne
sub
mov
mov
mov
fmull
arpl
xchg
add
rcrb
jbe
lret
sub
ljmp
xor
imul
out
pop
cltd
data16
cltd
add
dec
mov
add
aam
rclb
andl
xchg
lcall
fists
pop
daa
jne
or
sub
pop
loopne
dec
mov
jle
sbb
push
mov
pop
bound
cli
inc
into
ret
mov
sarl
add
shlb
xor
test
fs
outsl
cmp
dec
pop
into
ds
jno
dec
push
gs
xchg
stos
inc
out
cld
aas
cmpsb
jb
icebp
jb
inc
in
lea
jp
dec
mov
jl
push
add
sbbb
stc
sub
and
push
je
pop
cmc
and
outsb
jnp
push
fisubrs
fwait
pop
mov
add
outsl
idivl
push
arpl
sbb
sbb
movsb
push
movsb
cmp
or
sub
adc
out
lods
jns
mov
push
les
mov
inc
sbb
ja
xchg
cmpsl
mov
dec
inc
jp
mov
pushf
mov
inc
movl
repz
or
aam
imul
fisttpll
rclb
pop
shr
nop
pop
push
sbb
dec
pop
lcall
push
and
pop
push
cld
xchg
cs
jo
mov
push
cltd
dec
adc
mov
fwait
jp
stos
andb
cmpl
aam
xor
pop
test
shll
lret
ds
sub
inc
adc
inc
xor
pop
data16
movsb
sahf
pop
mov
mov
push
xchg
rorl
cmp
or
xor
add
cwtl
rsqrtps
sub
cmp
jp
cs
subl
je
mov
icebp
and
inc
das
pop
pusha
mov
fildll
fs
xor
sub
sub
out
pop
mov
mov
push
sahf
push
add
outsb
cmp
lret
lahf
sarb
lods
pop
xchg
or
adc
ret
adc
aam
pop
jp
hlt
pop
subl
ret
movsl
push
sub
imul
sub
dec
xchg
incl
lock
pushf
cmp
add
mov
imul
imul
loop
int
inc
inc
mov
ret
icebp
sbb
test
pop
push
mov
data16
pop
popa
dec
mov
or
mov
lcall
out
mov
rorl
sbb
repnz
ret
jns
icebp
mov
jo
mov
lret
inc
mov
cmp
sub
js
push
loopne
dec
iret
in
cmpsl
mov
push
or
cmc
out
mov
lea
pop
in
xchg
movsl
mov
adc
jp
jbe
pop
jecxz
stc
fistps
mov
call
js
cmc
inc
jne
push
bound
sbb
cmpsb
insb
stos
push
mov
rorl
lea
jae
cmp
add
cmp
add
in
movsl
ror
stos
adc
scas
dec
into
mov
ret
jns
dec
cli
lahf
inc
push
inc
dec
out
or
es
cmp
mov
cmp
inc
outsb
lcall
dec
jg
mov
mov
and
sub
sete
test
cmpsb
int3
daa
arpl
xor
or
in
adc
sti
mov
jmp
pop
add
enter
dec
push
pop
mov
jbe
std
cmp
loop
pop
es
insl
adc
adc
fs
lahf
jo
fiaddl
addr16
adc
jne
pop
outsb
leave
mov
cmpsb
xchg
in
push
shll
inc
xor
jle
inc
mov
fists
push
outsb
pop
or
mov
pop
mov
cmpsl
jmp
lock
cmp
nop
mov
test
cs
pop
js
add
inc
jle
mulb
mov
je
aam
add
pop
iret
dec
test
push
xlat
xchg
call
cmp
xchg
mov
das
xor
pop
xor
hlt
pop
sbb
pop
fxch
mov
mov
or
mov
dec
and
filds
mov
repnz
jecxz
push
idivl
push
imul
mov
ljmp
in
stos
vcmpss
outsl
out
or
icebp
adc
nop
push
push
pop
enter
mov
out
or
into
xchg
mov
pop
je
aam
jnp
cltd
or
stos
inc
out
mov
jne
and
xor
pop
xlat
xchg
jno
xchg
sub
add
mov
loopne,pn
mov
mov
sub
push
mov
in
sbb
lahf
pop
pop
mov
clc
cmp
or
subl
adc
pop
mov
call
movsl
adc
and
orb
mov
rcrb
and
fidivs
lods
xchg
xchg
jnp
or
lahf
fsubr
repz
jp
popf
es
cmc
stc
ja
and
mov
loope
popa
sub
dec
cmp
scas
out
setg
cwtl
loope
fcompl
cwtl
shr
lret
repz
push
int3
jecxz
push
mov
ljmp
fs
imul
std
std
loope
xchg
mov
dec
inc
fcompl
push
or
mov
xchg
push
clc
nop
mov
and
or
push
adc
adc
or
jnp
adcl
insb
mov
lahf
mov
loope
js
outsb
dec
loop
jno
divps
hlt
fadd
aad
or
icebp
ja
adc
and
fists
js
cmpsb
inc
inc
push
clc
mov
lret
leave
jo
xchg
dec
mov
ss
mov
mov
sarl
enter
xchg
add
sbb
sbb
push
and
pop
jg
stc
mov
ror
lret
xchg
das
lahf
xchg
inc
icebp
fmul
std
sahf
into
ret
addr16
cmp
lock
xor
int3
inc
dec
and
cmpsb
icebp
and
cmp
pop
lcall
dec
out
cmp
rcrl
pop
cmpsl
repz
ja
sti
mov
lcall
lds
js
sub
pusha
fwait
add
adc
fs
jo
shlb
and
insl
fdivrl
aas
sbb
jae
jmp
add
lahf
int3
sub
test
and
xorl
test
shl
push
je
insb
cmpsb
inc
aas
push
and
pop
push
dec
and
stc
and
cmp
xor
icebp
in
je
jecxz
sub
jne
xchg
movsl
pop
daa
mov
cmc
lahf
mov
data16
cmp
fwait
loop
push
mov
sub
hlt
or
sbb
subl
rcrb
xor
add
mov
mov
sub
mov
inc
cmc
xchg
aas
cmp
int
data16
jge
jno
push
jnp
nop
cli
rorb
xor
mov
nop
lret
aaa
mov
push
inc
movsl
sub
and
add
mov
add
lcall
mov
xchg
mov
mov
add
mulb
es
jmp
mov
aas
sub
dec
sbb
sub
xor
sub
in
lods
lret
add
icebp
daa
sti
out
pop
data16
and
mov
insl
lea
rolb
xchg
inc
sub
outsl
pop
fmull
sub
pushf
mov
call
pop
xchg
mov
pop
in
and
xlat
out
mov
mov
sub
std
add
js
fistps
cmc
js
dec
xor
jecxz
jmp
lcall
aas
test
sbb
xchg
int
pop
inc
lock
notl
pop
jmp
dec
aad
rcl
or
sub
ljmp
mov
repz
out
sub
repnz
rolb
cmp
push
xchg
js
and
stos
cmp
xlat
in
xchg
iret
addl
adc
jae
repz
cmp
dec
jecxz
mov
sarl
mov
xor
xchg
inc
push
mov
sub
pop
mov
lahf
iret
in
fwait
cmc
jo
cmp
daa
ret
xor
nop
rorl
out
insl
add
and
in
inc
mov
adc
sbb
fildl
and
js
stc
je
in
adc
mov
add
ljmp
es
dec
stos
push
in
cld
push
and
mov
jge
call
addr16
xor
push
je
fsubrs
icebp
xchg
rol
aas
mov
notb
fmuls
xchg
mov
xchg
jnp
jb
mov
outsb
push
and
jp
outsb
popl
shll
jmp
arpl
jl
mov
push
dec
or
test
dec
adc
aam
and
sbbb
cmp
push
pushf
xchg
dec
repz
lea
dec
jno
aaa
dec
roll
or
xor
cli
ret
mov
mov
add
sbb
inc
cmp
inc
mov
push
daa
pop
inc
dec
movsl
add
iret
pop
lret
lret
ljmp
es
mov
rcrb
pop
cld
rclb
and
lret
or
in
fistps
test
aaa
jnp
in
cmp
fwait
xor
lahf
daa
out
lea
add
lock
push
cltd
push
push
call
xchg
stos
sub
addr16
xor
cltd
shl
dec
mov
dec
add
mov
mov
ds
and
in
or
je
xchg
adc
jnp
jmp
in
sub
jl
or
xchg
jb
dec
jbe
mov
das
popf
imul
or
orl
clc
out
shl
and
cmp
sub
outsl
shl
dec
mov
aam
jae
fwait
jae
shrb
push
lcall
in
jbe
jmp
inc
pop
out
movsl
push
mov
mov
inc
inc
movsl
and
jmp
aas
or
aam
mulb
sub
cmp
sub
mov
ds
jl
mov
jne
jl
pop
andb
popf
adc
je
ret
repz
cmpl
or
repz
inc
in
scas
sarb
imul
sub
pushf
mov
es
lds
ds
enter
out
jp
sub
xor
ljmp
hlt
cmp
fimull
rcll
rcll
ljmp
jle
dec
inc
aas
leave
and
add
mov
into
and
sahf
cmp
xor
push
popa
nop
inc
and
into
fcmovb
andb
int
ds
push
sub
push
jle
testb
mov
xchg
or
jne
jae
jmp
in
stc
test
jle
adc
insl
inc
out
pop
xchg
push
adc
bound
lahf
bound
add
js
movsl
dec
ret
jns
movsl
xor
add
sahf
loop
imul
pop
ret
mov
cmp
jl
lds
ficoml
push
push
std
mov
insb
sub
cmp
pop
mov
cwtl
cmpsl
and
jae
rcrl
or
sbb
xor
adc
sbb
cld
or
cmp
xchg
fdivs
test
fildll
arpl
add
shr
jle
lock
stc
sub
sbb
testl
push
sub
add
hlt
ret
mov
and
pusha
sbb
pop
lret
pop
pop
or
lods
out
lods
push
dec
xchg
adc
xlat
or
sub
mov
lahf
insl
sbb
stos
loop
aas
imul
mov
les
test
and
test
in
stos
lret
clc
sub
imul
cmpsl
leave
sbb
test
in
lret
enter
mov
clc
dec
out
push
jae
sub
mov
dec
jo
sbb
imul
gs
psllq
and
xlat
xor
inc
inc
jp
or
and
xor
enter
lahf
and
fwait
adc
pop
add
pop
jl
sub
mov
jle
shll
iret
jb
shll
test
cmp
mov
fxch
cwtl
cmp
mov
push
lods
xchg
negl
or
cld
loop
push
jecxz
test
and
insl
inc
fstpt
dec
xor
cmp
cmp
jns
mov
addr16
and
push
pushf
or
clc
arpl
pop
or
js
dec
xchg
lret
addb
dec
imul
rcll
jo
ja
stos
push
jge
lods
push
popf
lahf
mov
mov
push
loope
cmp
push
mov
pop
cltd
jo
push
fidivl
xchg
out
xor
pusha
stos
stos
mov
lahf
sarb
imul
or
xchg
fldl
sub
jb
test
mov
push
pop
mov
cltd
jno
or
dec
cmp
std
daa
mov
arpl
pusha
pop
scas
pop
inc
cld
inc
pop
in
nop
mov
bound
gs
fsts
cmp
repnz
mov
push
mov
dec
mov
pop
aam
xor
mov
sbb
fwait
out
xchg
sbb
adc
push
out
dec
mov
arpl
aaa
pop
ljmp
mov
lcall
enter
adc
sub
ficoms
jnp
les
mov
push
inc
into
push
and
sbb
sub
hlt
mov
popl
cwtl
mov
cs
add
hlt
mov
orb
scas
subb
mov
sti
mov
aas
dec
xor
cmpsl
pop
inc
sbb
das
pop
scas
in
cwtl
test
sub
and
jp
lods
aas
shrl
pop
xchg
aam
xor
ljmp
repnz
pop
je
mov
inc
fimuls
dec
pop
jp
mov
and
and
or
mov
sbb
loope
insb
andps
inc
inc
dec
inc
pop
outsb
or
lock
into
xchg
mov
mov
outsb
jno
popa
dec
adc
add
xor
and
sar
shr
fsubp
into
xchg
mov
mov
outsb
jno
popa
dec
adc
add
xor
and
sar
inc
out
jno
loope
adc
and
jno
popa
dec
adc
add
xor
and
sar
shr
into
xchg
mov
mov
fistpl
cmp
jno
inc
popa
push
jno
nop
into
cmp
out
mov
lret
pop
dec
add
outsb
and
push
cmovo
jo
pusha
ficoms
out
mov
mov
adc
pop
xor
push
cmp
inc
jo,pt
pusha
ficoms
out
mov
mov
adc
pop
inc
or
add
pop
push
push
inc
adc
fdivrs
lds
popf
imul
dec
jne
stc
aas
pop
adc
movsl
aas
mov
inc
or
rolb
ljmp
jecxz
jecxz
icebp
mov
jo
xor
iret
icebp
fimull
inc
xor
inc
push
lea
imul
fcomps
aad
movsb
ficomps
mov
push
dec
out
mov
jg
xchg
push
pop
mov
and
xor
lods
loopne
sub
mov
out
cmp
outsb
and
add
mov
adc
imul
roll
inc
clc
push
push
or
jecxz
push
push
adc
jo
jne
nop
into
cmp
out
mov
mov
adc
jle
outsb
and
push
push
inc
jo,pt
or
mov
mov
stc
mov
mov
imul
push
push
inc
and
xor
cmpsb
mov
mov
pop
and
arpl
inc
push
jge,pt
outsb
xor
test
loopne
popf
ret
mov
mov
adc
jle
outsb
and
push
push
inc
jo,pt
pusha
ficoms
out
mov
mov
adc
jle
outsb
and
push
push
inc
jo,pt
pusha
ficoms
mov
das
int3
jg
mov
std
jo
inc
pop
mov
and
mov
movsb
fnstsw
cmp
in
lods
out
int3
or
jle
fiaddl
out
popa
push
lahf
movsl
cs
xchg
cltd
mov
les
loop
fldt
jae
push
cmp
mov
pushf
mov
movsl
jbe
mov
and
fdivl
adc
mov
daa
and
sbb
mov
fwait
mull
push
push
stc
out
pusha
or
and
sbb
mull
mov
cmc
push
pop
adc
call
xor
sbb
jnp
pop
push
std
add
or
and
inc
cld
enter
xchg
xchg
adcl
pop
pop
or
fnsave
mov
cmp
out
jmp
mov
jae
sbb
or
popa
add
sbb
fsubs
iret
push
loop
pop
sub
sbb
xlat
xchg
fstpt
jns
out
scas
stos
xchg
xor
in
movsb
icebp
jns
pop
ret
aam
sbb
fildl
sarb
stc
out
and
shrl
cs
and
jmp
pop
jnp
mov
or
dec
lock
lea
and
inc
fdivrl
movsl
vcvttps2dq
cld
dec
pop
arpl
ffree
mov
jno
dec
or
lds
pop
cmc
sti
scas
push
dec
daa
popa
xor
dec
lret
imul
cmp
pop
jae,pt
sub
pusha
fsubp
test
cmp
dec
jne
push
adc
mov
out
ds
mov
insl
shll
repz
adc
insb
jmp
jmp
rol
pop
mov
out
ds
ret
pop
hlt
in
fsin
mov
mov
inc
dec
repz
mov
cltd
mov
xchg
out
jmp
push
mov
in
jne
sbb
ret
and
out
faddp
adc
in
mov
dec
adc
xchg
jnp
push
pop
adc
push
shrl
pop
jno
ss
stc
jge
andl
push
ss
rcll
adc
dec
out
leave
pop
aad
and
xor
negb
mov
ljmp
bound
lahf
push
jno
movsl
push
sarb
sub
lahf
jae
divl
inc
mov
aam
add
dec
lret
daa
jns
jb
fcoml
into
sbb
dec
push
insl
mov
mov
inc
movb
aaa
cmp
nop
sbb
fwait
mov
jns
xor
popa
sub
sub
aam
sbb
icebp
sarl
ja
cmpsb
imul
lahf
dec
xchg
or
or
fmull
mov
add
pop
jb
lds
pop
std
push
fdivrl
cmp
mov
push
mov
dec
imul
sub
adc
and
ret
das
lret
out
repnz
loopne
push
sbb
loope
xor
or
pusha
pop
lret
aam
mov
scas
inc
cmp
insl
inc
inc
inc
testl
sub
sbb
pop
mov
int3
and
mov
les
in
notl
cmp
iret
loop
fwait
jmp
sbb
fwait
sub
mov
out
mov
add
repz
push
cmpsb
insl
or
inc
pop
sbb
mov
out
mov
mov
dec
cmp
cmp
orb
adc
orb
sbb
jne
push
add
ret
out
daa
jb
dec
in
push
push
testl
imul
mov
int
jecxz
or
xchg
les
and
xchg
lahf
mov
gs
dec
rcll
cmp
mov
mov
mov
inc
stc
dec
fninit
push
jnp
inc
xchg
lahf
push
and
mov
mov
fstp
xchg
cmp
in
enter
imul
jne
mov
mov
hlt
cmp
add
lods
orb
clc
inc
xchg
cs
sub
nop
mov
cwtl
out
xor
cmp
lds
push
repnz
mov
sbb
cmp
stc
sub
mov
mov
jae
mov
shll
add
lcall
stos
cs
les
sete
rcrb
and
sbb
jae
jb
or
or
or
sub
pop
jb
stos
in
aaa
fucomi
dec
ds
lods
out
jo
mov
cmp
out
inc
andb
push
lods
in
mov
lea
xor
ljmp
mov
pop
or
in
ret
lret
mov
flds
pop
rcll
mov
mov
fdivrl
inc
dec
out
out
aam
mov
add
xchg
addr16
jo
inc
or
dec
xchg
lock
testb
scas
jg
jb
sbb
pop
mov
xlat
ss
test
sti
inc
jae
pop
pop
pop
jmp
add
nop
mov
lea
fcmovnu
cmp
insb
and
jg
adc
fdivrs
outsl
mov
dec
dec
ja
icebp
dec
dec
cmc
inc
dec
push
into
cmp
stc
pop
sub
iret
sbbb
mov
inc
sbb
add
add
ss
rol
inc
iret
in
push
sub
sbb
or
and
mov
mov
and
fsubs
xchg
mov
out
add
imul
mov
pop
add
daa
rorb
mov
push
sub
xor
fwait
pop
xchg
sub
mov
mov
sbb
jl
ret
aad
fsubl
bnd
jno
test
lods
push
mov
sbb
mov
mov
xor
movsl
test
xor
shlb
out
mov
or
xor
or
mov
test
mov
dec
js
ja
call
push
xor
jp
pop
pop
mov
rcll
xor
sbb
dec
inc
pop
jb
test
imul
repnz
jae
xchg
or
or
daa
cltd
ret
lret
sub
rorl
rcll
in
xchg
mov
test
ds
pop
mov
xor
je
rcrb
ljmp
push
mov
lods
mov
mov
test
nop
sub
adc
andl
pop
pop
mov
imul
lcall
adc
inc
xchg
xchg
stos
popf
xor
adcl
jle
addl
mov
daa
das
jbe
sar
out
hlt
ss
int
mov
in
iret
dec
std
adc
and
aas
or
lret
xchg
lods
fbld
clc
add
xor
dec
repnz
cmp
movsl
test
sub
inc
pop
movsb
incb
mov
jae
ss
leave
dec
cmp
mov
sub
cmpb
cmpsl
adc
lret
push
jmp
in
shrl
rorl
jmp
sub
sbb
pop
ja
xor
ja
sub
stc
jo
push
mov
dec
outsb
leave
adc
or
pop
loope
shl
pusha
or
testb
dec
xchg
out
lret
mov
outsb
mov
pop
sub
std
mov
cmp
hlt
cli
adc
or
cmp
jmp
in
out
or
sarb
fs
nop
mov
xchg
scas
sub
jnp
adc
xor
movsl
mov
dec
les
popa
and
pop
js
xchg
fcmovnbe
jns
xchg
enter
push
pop
jnp
test
push
sahf
es
lret
ror
jp
test
outsb
popa
ret
fistps
mov
data16
pop
sahf
gs
lods
pop
loopne
mov
nop
add
inc
mov
jp
mov
adc
fs
je
faddp
lcall
xchg
hlt
fisttps
cmp
xchg
mov
dec
sub
and
mov
jge
hlt
sbb
xchg
testb
pop
xor
je
or
jl
push
pop
bound
dec
gs
and
jmp
sub
push
push
add
mov
cmp
push
inc
sbb
dec
xchg
push
aas
pop
aas
fimull
fsub
mov
outsb
mov
cmp
icebp
sub
movsl
pop
shrl
shll
arpl
aad
or
push
pop
imul
add
adc
mov
repnz
lods
mov
lods
jmp
insb
dec
sbb
stc
push
fs
jne
lods
imul
dec
and
enter
std
or
je
or
pop
jmp
sarl
call
mov
out
xchg
and
lret
aaa
jle
and
or
popa
push
test
nop
jecxz
clc
pusha
xchg
and
inc
mov
or
xor
stos
int
int3
mov
mov
cmp
sahf
add
push
dec
repnz
cmp
test
cmp
aad
cwtl
sub
es
or
mov
in
adc
adc
sarl
sti
push
push
mov
bound
lret
and
pop
ror
sbbl
dec
and
cli
jecxz
push
lea
lock
inc
icebp
loop
adc
stc
pop
adc
scas
cld
daa
imul
cmp
sbb
pop
out
fnstcw
cld
test
mov
xorb
lock
and
and
fdivrl
cli
lret
and
fisubl
push
or
and
or
adc
gs
mov
sub
lcall
hlt
loop
inc
sbb
shr
cmp
dec
pop
mov
aas
popl
in
xchg
aad
mov
mov
adc
or
mov
push
mov
xor
dec
or
leave
lret
inc
xchg
add
gs
sub
aaa
jecxz
stos
push
push
and
pop
mov
xadd
aad
and
cmpl
push
push
xor
push
and
cmc
pop
mov
pushf
dec
loop
mov
int
popa
popa
vunpcklpd
adcb
add
sbb
stos
rcrl
lods
lcall
xchg
pusha
jecxz
scas
add
dec
das
repz
push
inc
icebp
addr16
mov
aam
add
scas
cmpsb
sbb
aad
xchg
dec
test
jl
xor
mov
dec
or
sbb
out
push
je
cmpsb
xor
or
mov
in
pop
in
fstl
and
enter
xchg
fmulp
xchg
dec
pop
lods
das
sbb
pop
dec
push
cmpsb
push
add
mov
and
cmp
cmp
mov
and
cmpsb
add
inc
cs
jecxz
scas
mov
mov
lods
lock
and
push
dec
into
test
aam
add
adc
pop
xchg
rcr
dec
inc
dec
insb
pusha
sbb
aaa
sub
pop
pushf
jo
mov
mov
int
fnstcw
filds
cs
mov
mov
in
cmp
loop
repz
jbe
dec
andb
xlat
xchg
jae
out
lods
in
mov
nop
push
aad
cld
push
cld
shrb
leave
loop
iret
dec
jns
leave
pop
ficoms
sbb
add
mov
into
add
add
int
fwait
sub
push
enter
dec
movl
ljmp
ds
sar
scas
orb
cmp
jno
jecxz
dec
mov
inc
cmp
insb
pop
in
out
stc
ja
ret
dec
test
dec
test
xchg
nop
sub
mov
jnp
dec
roll
xchg
pop
inc
out
mov
adc
mov
jge
and
jg
xor
mov
xor
jb
pop
sub
sub
mov
mov
aaa
and
dec
adc
mov
or
sbb
jl
xchg
sbb
xchg
les
or
lods
mov
cmp
sub
loop
sbb
test
and
push
fbld
adc
jae
test
fisubl
push
test
sub
dec
add
adc
jae
xor
xor
mov
repz
sbb
loop
jl
mov
dec
or
push
cmpsb
ud1
push
xor
ret
xchg
mov
pop
js
es
jl
pop
jl
inc
sub
inc
inc
ret
fsubl
enter
rorl
or
jg
or
repz
cld
dec
sbb
and
in
xor
lock
in
jno
lock
fildl
add
xlat
jbe
jge
test
inc
sub
sarb
icebp
fwait
mov
xor
mov
bound
xor
insb
mov
call
cmp
dec
lea
inc
loop
mov
pop
imul
fsubrl
push
or
mov
inc
cmpsb
mov
and
mov
ret
cli
pop
pop
adc
xor
aas
dec
jle
cwtl
outsl
xor
adc
xor
repz
jns
int
adc
dec
jno
dec
or
mov
mul
aad
out
and
xchg
jl
repnz
in
cmpsl
cmp
mov
dec
mov
hlt
mov
jge
stos
ss
sub
add
dec
arpl
xchg
sub
push
leave
sbb
push
pop
pop
int
pop
mov
notb
mov
mov
in
push
test
pop
xorb
pusha
clc
js
fsubs
mov
aad
mov
mov
pusha
mov
dec
pop
xchg
stos
and
mov
fs
rcr
subb
cmc
call
ja
mov
pop
push
outsb
mov
jle
dec
and
pop
das
js
out
movsb
and
push
insb
add
push
xchg
stos
and
int
popf
push
jge
insl
ficoms
pop
lea
pop
pop
push
or
pop
add
pop
orb
push
xchg
push
jmp
xchg
shlb
aad
prefetch
and
in
insl
or
inc
ret
push
push
pop
fmuls
cmp
es
push
dec
daa
leave
shlb
jne
jns
xchg
inc
cli
loope
sub
iret
cmp
ret
cmp
cmpsb
pop
cmp
shlb
fsts
push
dec
push
sub
mov
adc
pop
xor
gs
movsl
inc
ja
out
sbb
xchg
rcrl
pop
xor
push
popf
fs
mov
or
mov
cmpsl
push
mov
cmc
in
popf
out
icebp
cwtl
jg
xchg
mov
dec
jmp
xchg
dec
and
or
out
xchg
hlt
add
pop
or
mov
sub
cs
xchg
inc
fst
out
lock
or
xchg
sahf
jo
call
push
xor
ljmp
scas
mov
cmp
push
lods
in
jmp
xor
dec
cmp
out
mov
inc
stos
xchg
imul
mov
jbe
fistpl
push
dec
sbbl
nop
and
sbb
push
scas
mov
stc
cmpsb
push
push
cmp
mov
or
aas
stc
mov
xchg
jo
ljmp
mov
in
inc
scas
xchg
dec
push
test
mov
test
sub
call
mov
xor
shlb
jmp
fstp
nop
arpl
sbb
jns
dec
clc
sub
inc
adc
jle
cmp
cld
sub
iret
repnz
xor
mov
mov
ret
dec
adc
insl
pop
cmpb
pop
pushf
inc
sarb
arpl
pusha
cmp
add
rol
adc
jp
push
rcrb
dec
stos
test
inc
inc
mov
add
mov
mov
add
inc
popa
xchg
nop
sub
xchg
jp
shl
out
jo
sub
jecxz
or
mov
mov
call
orl
add
insl
imul
inc
loope
cwtl
mov
jg
jae
sub
out
adc
adc
mov
insl
pop
rorb
cld
out
movsb
inc
cmc
mov
sbb
mov
xor
push
in
insb
sub
frstor
and
cld
dec
scas
dec
in
subl
insb
pop
insl
inc
push
hlt
sar
daa
in
sbbb
aas
dec
int3
xchg
jns
jmp
lret
imul
mov
lock
cmpb
rol
stos
or
js
out
sahf
daa
dec
push
xor
inc
and
stc
inc
add
inc
mov
xchg
sbb
cmp
sub
mov
xorb
cli
fcompl
movsl
inc
movsb
iret
in
das
in
jae
push
fs
daa
dec
dec
push
or
int3
negb
or
das
ret
and
dec
movsb
or
add
pop
shll
dec
ffreep
orb
jge
hlt
dec
mov
fdivrp
and
mov
xchg
push
and
mov
ja
inc
stos
ss
or
mov
pop
sar
imul
imul
and
push
inc
fwait
scas
xchg
xor
test
pop
cmp
push
sbb
sub
push
arpl
jae
xchg
mov
icebp
pop
sub
mov
mov
pop
pop
ret
pushf
data16
inc
insb
xchg
add
subb
in
jae
leave
repz
dec
fstpt
andl
pop
jl
aam
outsl
dec
lock
dec
cld
jecxz
add
test
xor
divb
scas
sbb
aas
adc
mov
push
mov
stc
cwtl
leave
push
aaa
inc
int3
or
add
add
xchg
out
xchg
in
das
dec
xchg
test
jl
push
add
cltd
xchg
cltd
into
call
inc
jl
test
adc
xchg
pushf
sub
out
pop
pushf
fdiv
hlt
adc
ja
sub
or
jne
push
sbb
rcl
lret
pusha
push
mov
data16
mov
xchg
movsb
fld
or
jae
dec
outsl
movsl
cmp
jl
scas
push
ljmp
jmp
xchg
xor
sbb
xchg
rorl
inc
enter
and
sarb
in
lret
test
add
xchg
sbb
mov
cmp
mov
pop
imul
repnz
imul
sbb
std
push
mov
jae
les
dec
jmp
call
mov
xchg
lock
dec
movsb
mov
in
dec
jnp
xor
xchg
cs
xor
push
cmp
cwtl
or
aaa
sbb
mov
daa
adcl
mov
ljmp
into
repnz
es
jbe
or
aad
dec
xor
sub
and
pop
pusha
xor
fwait
or
dec
outsb
lods
test
sbb
dec
icebp
test
stos
loope
jp
sbb
jp
out
mov
xchg
pop
sub
pop
sbb
mov
pop
adc
add
fwait
inc
into
jle
xlat
fnsave
xchg
testb
shlb
popf
or
adc
and
stos
jmp
pop
or
int3
nop
test
jecxz
adc
hlt
int
daa
fldt
into
lahf
daa
cmpsb
rcll
dec
mov
inc
fdivr
xlat
out
adc
popa
cmc
out
sub
push
pop
out
jp
lock
int
sub
lods
notb
daa
shl
mov
push
gs
xor
stos
ja
les
lret
mov
inc
mov
jno
bound
adc
sahf
cwtl
inc
mov
mov
cltd
mov
imul
xchg
cmp
jmp
rcrb
shlb
cmp
loop
add
ret
ljmp
mov
jg
inc
sub
shlb
enter
pop
fwait
cmp
cmp
in
xor
sbb
push
cwtl
dec
sub
mov
pop
inc
sbb
sub
shrb
jnp
pop
in
bound
out
je
test
sub
inc
sbb
or
aaa
bound
cwtl
inc
std
in
mov
repz
sahf
iret
and
and
adc
insl
mov
js
mov
fs
mov
inc
add
fisubrs
jns
pop
enter
fdivrp
jae
add
stos
adc
leave
push
sbb
xor
movsb
jae
clc
inc
in
sti
or
add
mov
add
icebp
loop
loope
into
xchg
push
sub
imul
jae
or
ret
push
jb
in
cmpsb
cmp
mov
or
lods
cmpsb
inc
ds
pushf
mov
pop
xor
popa
loope,pt
test
jmp
or
sahf
mov
imul
jne
fst
les
lcall
push
mov
and
test
jg
pop
popf
or
dec
jmp
out
and
xor
inc
ja
call
xchg
or
je
sbb
pop
mov
inc
repz
loopne
or
lock
jle
push
and
arpl
shr
pusha
pop
orb
push
inc
test
imul
dec
orb
dec
testb
repz
sti
scas
sub
les
sbb
rolb
std
pop
xchg
arpl
and
dec
jne
cmp
xlat
mov
stos
sar
lea
cli
and
out
inc
push
mov
shll
xchg
fldenv
mov
push
cmp
in
jl
adc
loopne
mov
int3
jb
js
outsb
adc
mov
mov
inc
add
pop
cmp
jb
outsl
mov
mov
fldl
sub
fcoml
xor
mov
or
sub
div
inc
cmpb
popa
push
ret
pop
jge
push
test
pop
cmp
lcall
pop
or
mov
inc
jne
test
sub
popf
inc
icebp
subb
mov
mov
adc
jle
outsb
and
push
push
inc
jo,pt
pusha
ficoms
out
mov
mov
adc
jle
outsb
and
push
push
inc
jo,pt
pusha
ficoms
out
mov
mov
adc
jle
outsb
and
push
push
inc
jo,pt
pusha
fists
out
mov
mov
adc
aam
outsb
push
imul
rcrl
dec
cmc
pop
in
std
push
ljmp
clc
inc
enter
lods
adc
cwtl
and
dec
cmc
pop
in
xchg
cmp
mov
jne
gs
faddl
mov
clc
sahf
in
xchg
jo
and
loopne
call
adc
push
inc
jmp
sub
pop
lcall
jge
or
sbb
and
jae
std
mov
cmp
das
inc
jo
rcrl
js
jp
mov
in
mov
xor
sub
gs
xlat
dec
add
mov
cmc
and
test
mov
push
adc
lds
lods
sub
cmp
test
cmp
pop
std
mov
xor
popf
lret
in
xor
cwtl
sbb
xchg
mov
sub
fmul
in
test
inc
js
mov
std
sbb
loopne
or
and
inc
leave
fsubs
mov
and
aad
lds
xor
sub
mov
inc
adc
gs
mov
push
lds
mov
dec
test
sti
jns
mov
mov
and
je
jbe
aaa
fbld
lock
pmaddwd
loope
ret
shrb
mov
outsb
std
push
fnstenv
pushf
dec
xchg
cmp
cmp
call
jne
gs
mov
and
dec
cmc
pop
in
xchg
cmp
call
jne
gs
mov
and
loopne
pop
mov
push
mov
sbb
in
pop
mov
out
sub
enter
lea
fscale
lcall
mov
jno
test
mov
mov
jbe
xchg
test
adc
clc
mov
mov
outsb
mov
push
xor
inc
popa
xor
popf
in
mov
and
pop
pop
mov
add
into
adcl
dec
inc
push
xor
movsl
push
jmp
sahf
xchg
mov
adc
lods
js
fst
mov
mov
movsl
and
sbb
ret
add
push
xchg
push
cwtl
dec
xchg
and
insl
repz
movsl
jl
jg
add
or
or
xor
daa
mul
aam
adc
movsl
pop
nop
xor
repz
fwait
sub
rcrb
sarl
pop
testl
nop
mov
inc
dec
mov
adc
popf
mov
movsb
mov
ljmp
das
sub
in
and
ds
mov
rclb
cmp
dec
jecxz
pusha
jb
cltd
aas
jecxz
pop
sbb
test
xchg
ja
cmpsb
jns
lcall
jmp
or
sub
lcall
int3
mov
repnz
inc
and
lea
fnsave
push
dec
push
push
das
mov
in
mov
scas
push
add
and
add
cli
or
int
and
out
fmulp
adcl
mov
push
pop
jae
and
jno
ljmp
mov
mov
fisttpl
push
jmp
pop
outsl
jmp
vorps
call
into
cmpsb
daa
xchg
pop
adc
cwtl
cmp
mov
add
mov
add
lods
pop
mov
outsb
mov
inc
jle
cld
aam
adc
jl
cmp
outsb
push
push
mov
sbb
gs
and
sbb
aaa
xchg
mov
in
stos
sbb
mov
xchg
out
aaa
stos
lds
xor
negb
fsubl
iret
mov
fwait
push
scas
sub
push
or
imul
jae
std
fwait
mov
jno
pop
repz
pop
jae
pop
adc
push
imul
push
cmp
dec
cmp
aam
inc
or
out
ret
daa
test
sub
dec
sub
outsb
push
leave
mov
cmpsl
repz
cmp
lock
and
jne
data16
sub
aam
loopne
or
js
xchg
push
sbb
inc
es
cmp
or
shll
enter
jle
ss
jo
jecxz
pop
scas
or
mov
add
mov
jmp
movsb
sub
sahf
in
inc
sbb
sub
fnstcw
dec
pop
dec
fbstp
xor
mov
lock
loop
loopne
xchg
movsl
inc
xor
jae
sarl
scas
cld
mov
shrb
xchg
es
inc
push
add
mov
cmpsl
mov
cli
nop
call
ret
push
cmpsl
mov
and
fwait
icebp
das
lahf
push
hlt
mov
push
sub
push
ljmp
out
decb
das
xchg
ljmp
mov
lods
or
lahf
out
cmpsl
repnz
cli
pop
cmp
xchg
out
stos
stos
test
mov
pushf
xchg
test
hlt
shll
icebp
mov
ds
int3
lret
aad
es
xor
mov
xor
movsl
push
decl
insb
xorl
icebp
push
je
add
std
es
leave
aam
movsb
das
mov
mov
fnstsw
aaa
pushf
into
mov
inc
testb
adc
icebp
push
incb
int3
jp,pt
mov
pop
cmc
mov
fistps
mov
roll
repz
repz
and
daa
jge
push
inc
xor
xor
sbbl
push
push
fdivs
mov
icebp
ret
leave
cmpb
lods
adc
pop
decl
mov
frstor
shlb
sub
adc
test
inc
sub
adc
sub
in
or
mov
repnz
jmp
loope
sarb
push
loopne
and
xchg
xchg
jno
xchg
mov
repnz
andl
es
xor
test
dec
xor
pop
pop
ds
push
push
sbb
test
mov
add
insb
bound
jno
mov
push
ljmp
loopne
inc
shlb
clc
jno
jp
addb
lret
loope
sti
mov
leave
or
addr16
test
push
les
daa
pop
lcall
jno
addr16
inc
daa
xor
inc
adc
push
pop
rcrb
nop
fcoml
xorb
cmp
dec
jle
icebp
int3
xor
and
mov
pop
push
es
repz
imul
xor
rorb
std
sub
cmp
fdiv
inc
sbb
lea
ret
insl
dec
adc
movsl
movl
mov
xchg
ljmp
add
push
mov
movaps
es
ret
rcl
out
mov
int
sbb
sti
mov
mov
js
dec
xor
or
sub
jp
or
inc
clc
out
std
xor
xor
sub
pop
dec
add
or
xchg
push
cmp
push
sub
lods
cli
out
stc
xchg
test
xchg
jbe
dec
lods
shr
cmp
xor
cmpsl
jg
mov
jns
jbe
mov
mov
xor
dec
xchg
or
pop
or
into
add
dec
in
xor
mov
pop
sbb
roll
fsubp
outsl
and
test
push
test
loop
mov
pop
insb
xchg
jmp
xchg
sar
inc
pop
loope
lea
mov
fsubrl
dec
pop
sbb
xchg
sbb
ror
sub
testb
mov
rcrb
sbbb
pop
cmp
js
inc
inc
icebp
aam
pushf
addr16
clc
and
pop
jg
call
pop
or
icebp
jg
cwtl
movsb
test
clc
or
outsb
cli
jg
popa
je
repz
mov
filds
shll
mov
and
mov
push
stc
mov
sub
xor
add
cld
xor
mov
mov
dec
adc
lahf
push
scas
pop
daa
jo
pop
addb
pop
dec
aaa
cs
mov
xchg
xor
rclw
inc
pop
add
mov
jnp
mov
and
cwtl
cmpsl
jg
iret
mov
lahf
mov
fstps
addr16
out
xchg
arpl
pop
jno
mov
inc
mov
ret
add
push
push
pushw
pop
das
popa
xor
pop
add
test
das
xchg
fildl
inc
mov
or
icebp
cmp
cmpsb
adcl
xchg
clc
add
sbb
xor
nop
enter
stos
jmp
or
lret
mov
pusha
lods
lods
mov
xchg
stos
mov
push
jp
fs
pop
mov
jns
es
adc
lahf
jb
test
or
push
xor
push
push
xor
test
fdivl
imul
dec
dec
bound
pop
popf
nop
cmp
jle
ds
add
clc
inc
decl
lahf
adc
and
test
mov
sub
xor
cli
push
lcall
mov
cwtl
add
ds
popf
fisttps
gs
mov
jge
add
jae
lock
fdivrp
or
xchg
mov
in
loopne
mov
ja
xchg
rcrb
loopne,pn
das
xor
ret
int3
mov
in
in
data16
lea
scas
sub
pop
in
repz
out
out
inc
xor
std
testl
xor
or
mov
inc
xchg
int3
sbb
xchg
and
cmpb
cmp
mov
dec
out
pop
jno
imul
out
xchg
push
push
add
xor
pop
jle
je
xor
add
aaa
xor
xchg
fs
mov
stos
sub
mov
stos
push
cmp
mov
push
dec
push
repz
pop
mov
in
or
dec
add
into
fwait
xlat
xor
adc
mov
nop
and
and
hlt
dec
int3
cld
push
and
mov
das
and
pop
shrb
sub
dec
iret
xlat
dec
ret
repnz
lcall
lahf
inc
xchg
stos
fstpt
jge
lret
dec
inc
std
dec
movsb
lahf
xor
jge
sub
jp
in
xor
mov
or
lcall
cltd
push
cmpsl
insl
fcoms
xchg
rorb
loop
lds
mov
fisttpll
fildl
cmp
lods
push
lcall
or
and
pop
and
lret
cmpsl
js
nop
stc
ja
lcall
sub
mov
stos
lcall
cwtl
inc
push
stos
fs
cs
sbb
outsb
pop
add
cmpb
lea
mov
nop
leave
cmp
xchg
xchg
cwtl
push
ja
jle
mov
xchg
cmp
sti
inc
jmp
xlat
in
sub
xchg
in
adc
shll
push
or
test
fs
mov
loopne
adc
inc
cmp
inc
fcoms
fisttpll
mov
push
imul
loop
inc
lret
and
int
inc
adc
icebp
sbb
addl
xchg
jg
mov
mov
sub
xchg
out
push
push
jmp
loopne
mov
sbb
xchg
sbb
inc
cmp
pop
ja
daa
imul
or
aas
hlt
xor
ret
inc
adc
cld
cmp
leave
lods
cmp
jo
mov
repnz
ds
shlb
hlt
out
rorb
pop
leave
in
dec
mov
cltd
cmc
dec
xor
adc
std
je,pt
ljmp
pop
frstor
mov
call
mov
pop
dec
leave
scas
in
mov
rol
in
or
mov
nop
mov
in
push
rcll
das
aaa
dec
xlat
push
xchg
add
xchg
inc
cmp
sbb
mov
rorb
mov
sub
xlat
mov
and
pop
mov
and
sbb
sub
sub
mov
xor
add
mov
fs
loopne
dec
lock
sbbb
push
ret
mov
xchg
mov
ja
xchg
add
dec
pop
idiv
xchg
dec
xchg
inc
mov
sub
sbb
xchg
mov
stc
divl
rcrl
arpl
add
in
adc
jecxz
or
and
scas
jge
in
gs
in
mov
mov
push
sti
loope
in
inc
dec
lds
ljmp
popa
adc
xor
inc
sub
cmpsb
test
fisttps
lcall
mov
int
cmp
test
hlt
dec
mov
jecxz
lret
adc
lret
mov
xchg
sub
or
dec
mov
cmp
mov
xor
pop
mov
sub
fnstenv
and
add
dec
xchg
inc
rcr
testb
dec
out
repnz
dec
loopne
and
xchg
movsb
clc
xlat
push
mov
in
cmpsl
loope
mov
pop
pop
mov
mov
mov
test
pop
lahf
jno
and
loope
data16
xchg
sub
repnz
shll
lret
or
ljmp
push
cmpsl
jmp
cmp
int3
or
imul
xor
add
lock
or
stos
rol
loope
testl
or
loope
ljmp
sub
push
test
fldt
inc
ja
mov
int
or
pop
loop
pushf
dec
push
mov
popa
adc
ljmp
testl
push
xlat
sarl
popf
dec
daa
lcall
and
pop
in
mov
add
dec
mov
xchg
int3
xor
shrb
gs
push
gs
fcmovb
in
cli
sti
jbe
and
inc
sti
xchg
dec
dec
sub
std
or
jg
mov
add
popf
mov
jns
xchg
sub
outsb
cli
cmp
in
mov
sbb
fstl
cmp
jne
rcrb
out
out
mov
sub
sbb
repz
aad
mov
mov
cmp
xchg
cwtl
sbb
ret
cmc
nop
aas
sub
adc
cmc
popa
fwait
pop
in
inc
and
dec
lret
sub
clc
jle
out
test
shrl
stc
dec
pusha
int
mov
aas
mov
hlt
cmp
loope
daa
icebp
xor
cmc
loopne
adc
fsubl
adc
xchg
cmp
and
es
call
std
xor
test
dec
inc
test
push
jg
jg
test
in
ficoml
loope
cwtl
dec
es
aaa
mov
sbb
sbb
cmpsl
fnstcw
rcl
sub
cmpsb
out
sbb
jne
xchg
cmp
push
int3
and
aam
into
imul
fnstsw
and
cld
int
testb
cmpsb
jbe
into
push
mov
sub
dec
cltd
js
mov
add
xchg
push
ljmp
fstpl
sar
pop
dec
xor
sbb
rcll
xchg
jne
cmp
orb
pop
pop
icebp
outsl
cs
subb
bound
mov
push
and
inc
mov
adc
iret
jmp
jge
xor
imulb
and
in
fstps
inc
and
xchg
sti
cmp
mov
cmp
xchg
sbb
add
xchg
scas
xchg
cs
lret
dec
ret
push
int3
das
aad
popa
in
add
fcmovnb
or
das
les
sub
pop
enter
and
pop
and
dec
mov
enter
ljmp
inc
cli
or
adc
addr16
je
sub
mov
push
mov
nop
aas
in
xchg
xchg
inc
jecxz
addl
cmp
xor
std
inc
test
cmp
push
xchg
inc
xor
not
fstpt
movsb
jae
rep
mov
or
test
xchg
fdivrs
adc
rorb
cmp
insb
lods
or
sub
punpcklwd
jmp
addr16
pop
push
push
int3
repz
adc
mov
mov
sub
movsl
les
inc
cmp
aas
sub
xchg
icebp
push
pop
fldt
pop
repnz
mov
shlb
repnz
dec
movsb
cmpl
pop
jmp
cmp
std
sub
jmp
jo
movsb
inc
orl
add
inc
fwait
lods
ficompl
pop
rolb
fnstsw
xchg
jge
lcall
jne
ja
jbe
pop
mov
jecxz
sub
dec
jl
push
cmc
mov
push
cmpsl
rolb
push
outsl
out
jnp
repz
mov
sbb
push
adc
lcall
jno
jge
dec
pop
mov
divl
outsl
xchg
sbbl
movb
push
xor
xor
inc
int3
jnp
ja
out
cmp
cld
xor
fcmovnb
mov
cld
push
mov
sub
jmp
jnp
or
js
loopne
dec
icebp
scas
mov
in
stos
jle
scas
inc
sahf
and
rcl
mov
cltd
xchg
pop
mov
or
mov
imul
cmpsl
sbb
xchg
xor
hlt
push
jp
jg
inc
inc
lock
adc
arpl
out
add
rolb
hlt
jp
popf
dec
mov
mov
and
or
pusha
lds
scas
xchg
int3
movsb
mov
mull
mov
xchg
dec
inc
mov
adc
fiaddl
mov
icebp
js
rclb
addr16
adc
sbb
sbb
push
jb
subb
add
jmp
mov
sub
cmpsb
into
arpl
ds
cmp
mov
int
cmp
loopne
sbb
dec
insl
lods
and
add
xchg
mov
or
lea
hlt
sahf
lds
push
call
mov
and
int
stc
stc
es
test
cmpsb
push
sub
sar
cmpsl
hlt
push
or
mov
mov
xor
xchg
je
xchg
loop
scas
out
fisubrl
lea
ss
jl
inc
out
inc
sbbl
lods
inc
jns
xchg
lods
cmpsb
cld
arpl
daa
add
xor
and
mov
out
andl
inc
imul
adc
push
loope
push
shr
pusha
aam
cwtl
push
and
jae
push
lods
jmp
pop
outsb
lea
mov
jbe
xchg
cmp
aam
mov
out
mov
inc
jcxz
inc
jnp
jo
lods
sub
add
fwait
jo
out
inc
dec
jb
adc
iret
addb
sbb
popf
pop
out
sub
mov
gs
movsl
xor
hlt
mov
pop
sbb
cmp
scas
sub
cmp
shr
and
dec
xor
or
stc
int3
loop
andl
mov
je
out
pop
lea
mov
ja
cld
movsl
fcomps
cltd
es
pop
xchg
mov
outsb
mov
lea
mov
and
push
jo
dec
push
in
and
and
testb
cmp
outsl
inc
shll
push
or
les
shlb
pop
xor
and
and
sbb
loop,pn
pop
fstps
repnz
jb
out
test
xor
test
mov
outsl
shll
xchg
rclb
cwtl
ja
sub
xlat
push
dec
imul
stos
popa
pop
jl
les
xorl
mov
test
and
jns
mov
out
cmpsb
in
jge
xchg
movsb
or
xorb
dec
mov
fnstcw
inc
mov
sub
ds
xchg
cmp
lret
aad
sub
xor
mov
xchg
or
adc
in
jo
adc
mov
fists
mov
pop
jbe
loop
ss
rclb
dec
push
or
lret
push
insl
cmp
pop
fsubrl
out
repnz
aad
or
dec
add
mov
dec
std
test
cmp
test
cwtl
add
push
push
jbe
mov
cmc
adc
adc
cli
mov
push
sub
or
pop
sbb
jle
mov
push
popf
inc
xchg
pop
jp
sbb
sub
jle
or
insl
and
add
pop
adc
mov
adc
mov
xchg
push
jns
dec
add
xchg
std
push
xchg
lcall
xor
mov
xor
and
shl
pop
xchg
sbb
in
cmp
dec
mov
incb
xor
cmpl
cmpsb
dec
jnp
orb
pusha
pop
sarl
add
jmp
push
mov
gs
incb
into
jmp
lods
out
movzbl
rorl
in
ret
imul
mov
gs
and
sbb
pop
sub
dec
pop
dec
push
shlb
je
outsl
mov
mov
pop
sub
push
int3
mov
jno
scas
pusha
std
fcmovnbe
jo
dec
pop
or
sbb
and
sarb
xchg
mov
pop
test
insb
aas
dec
or
out
clc
or
scas
xor
adc
and
cmc
mov
scas
aam
test
hlt
rclb
pop
test
loopne
jne
mov
sar
outsb
int3
je
imul
test
cmp
rcrl
mov
das
sub
xor
test
ret
scas
push
test
push
push
pop
cmp
int
inc
and
push
xchg
test
lahf
sbb
xor
add
daa
fwait
in
adc
notb
push
xchg
fcmovne
push
js
addr16
decl
lods
lods
add
aaa
sbb
pop
std
aad
jecxz
lock
adc
inc
and
xor
enter
cmpsl
cmpsl
cwtl
mov
push
rolb
xchg
jno
dec
mov
lods
fs
mov
test
or
inc
in
add
js
lods
in
sbb
or
push
push
mov
inc
aad
inc
ss
lods
push
jmp
jmp
sub
aas
dec
mov
jge
addr16
pop
inc
push
call
pop
jp
and
adc
cmpsl
leave
adc
mov
pop
jge
and
insl
mov
int3
sbb
or
rol
inc
push
inc
mov
sub
push
push
sbbb
and
push
aad
scas
fidivrl
or
lahf
int3
jg
dec
shrl
sbb
sarb
fdivs
sub
jmp
push
das
adc
es
sarl
loopne
lahf
lds
mov
and
pop
imul
adcl
pop
cmpsb
mov
mov
mov
push
adc
cltd
adc
dec
add
ret
jp
sub
push
out
add
cmc
inc
in
xchg
cmp
call
jne
gs
mov
and
dec
cmc
pop
in
xchg
cmp
call
jne
gs
mov
and
pop
jne
in
xchg
cmp
or
clc
inc
shll
test
mov
and
shl
in
xchg
sub
call
jne
adc
popf
xor
ja
ficoml
cmpsl
mov
cmpsl
xchg
mov
xlat
cwtl
leave
pop
aaa
out
aaa
pop
daa
add
ja
ja
repz
cmpsl
fistl
out
xlat
out
pop
xor
daa
pop
pop
adc
mov
push
addr16
das
scas
jne
and
out
cmpsl
jmp
aam
sbb
cmp
xor
inc
stc
mov
into
mov
into
or
sbb
ds
mov
stos
push
adc
sbb
ljmp
stc
jl
sbb
push
loope
jae
mov
fildl
test
sbb
ja
cwtl
or
ret
enter
mov
aam
inc
mov
out
stos
daa
addb
addr16
out
cmpsl
push
xchg
dec
mov
xlat
daa
or
pop
fdivs
and
cwtl
jbe
addr16
xchg
push
dec
sbb
aaa
mov
bound
adc
inc
ljmp
sbb
xchg
pop
dec
sub
cs
or
rorb
add
mov
and
adc
fs
int3
mov
mov
xchg
out
into
inc
das
popf
aas
inc
push
pop
push
pop
outsl
dec
jo
push
addr16
shl
cmpsl
ret
xchg
filds
cmpl
pop
push
inc
inc
push
push
push
add
fcmove
loop
vshufps
mov
stos
jo
push
inc
aaa
arpl
cs
es
imul
ret
hlt
repnz
out
pop
aaa
pop
daa
aaa
pop
daa
pop
push
ja
addr16
addr16
xchg
mov
cmpsl
mov
cmpsl
xchg
test
pop
aaa
pop
daa
aaa
pop
daa
pop
push
ja
addr16
addr16
xchg
mov
and
addr16
sbb
das
sbbb
hlt
dec
push
popf
or
lret
dec
scas
jp
gs
push
movsb
xchg
cmp
jecxz
mov
int
and
xchg
out
test
scas
xor
sub
push
scas
push
adc
orl
pushl
mov
cmpsl
test
fistpl
insl
arpl
push
cs
sub
cs
xchg
repz
mov
inc
enter
mov
les
or
cwtl
dec
or
sub
push
jecxz
shlb
inc
jne
ja
lahf
aaa
fsubr
test
add
cli
cmp
push
lods
enter
pop
xchg
in
jno
fldl2t
je
cmp
test
in
pop
inc
adc
out
xchg
int
fstp
xchg
lods
cltd
rcll
aad
das
leave
incl
jp
or
sar
cmp
xchg
pop
cmp
std
stos
jmp
clc
jbe
pop
jne
dec
dec
and
inc
repnz
add
cmpb
aad
fisttpl
test
repz
cwtl
cmp
das
add
insb
xchg
mov
movsb
dec
mov
out
int
cmpsl
or
dec
popa
fildll
fisttpll
dec
fdivrl
xchg
mov
xor
xchg
les
scas
push
jmp
cmp
fdivr
jp
outsb
mov
mov
pop
lret
dec
xor
mov
imul
cmpsb
sub
cli
dec
add
mov
mov
repnz
arpl
popa
scas
mov
pop
jmp
mov
and
pusha
sbb
nop
mov
das
or
add
ret
pusha
jp
frstor
sbb
ret
lods
mov
jp
cmp
repz
add
and
xor
test
pop
js
fsubrl
rol
in
mov
addr16
add
mov
mov
sbb
xor
adc
lret
stc
or
scas
mov
push
clc
add
fldl
or
xchg
and
add
fidivrs
dec
test
dec
push
dec
adc
xor
sub
push
mov
xor
icebp
push
repnz
call
mov
jmp
jge
jo
mov
push
jns
adc
mov
andb
xchg
das
and
out
sub
lods
int
inc
push
pop
xchg
pop
dec
popf
pcmpeqw
cmp
pushf
cmpb
push
or
push
mov
dec
sti
fsubl
xchg
sub
cltd
into
cmpsl
and
jno
pop
sbb
aad
hlt
fcmovnbe
or
dec
lret
sub
stc
call
jae
test
xor
adc
xor
lods
cmp
dec
inc
jmp
jecxz
dec
mov
mov
test
pop
mov
pop
adc
and
mov
test
arpl
sti
or
push
out
adc
push
loopne
lods
sbb
inc
orl
xor
insb
cmp
add
adcb
pop
dec
cmpsl
push
sub
hlt
nop
or
dec
lods
sahf
mov
fnstsw
into
popf
pop
or
ljmp
dec
mov
mov
ds
xchg
cld
xor
mov
jecxz
jbe
inc
sub
cmp
insb
loop
movsb
push
and
push
mov
es
xchg
inc
incb
jae
in
cmp
sub
or
mov
push
xor
aad
inc
dec
int
mov
loopne
mov
sbb
pusha
sbb
cmp
test
bound
push
jbe
arpl
jnp
cmp
sub
insb
pop
push
adc
xchg
daa
mov
in
mov
int3
sub
xor
mov
dec
xor
dec
ja
stc
pop
negb
fsubrl
cs
popf
jnp
adc
out
xor
daa
popf
cs
jmp
cmp
fwait
clc
jge
mov
mov
mov
aas
arpl
mov
adc
into
scas
js
add
decl
jmp
sub
stos
outsl
imul
fs
nop
lahf
dec
shlb
roll
call
dec
or
sbb
mov
out
sbb
mov
test
addl
cltd
jbe
sahf
push
mov
stos
clc
push
cmpsb
repz
dec
lahf
pop
inc
pop
mov
jle
mov
fnsave
dec
dec
lcall
cmp
or
movsb
clc
add
shrl
pop
sub
sub
adc
inc
dec
sub
lds
jle
inc
sbb
adc
ret
test
inc
push
hlt
cmp
mov
jns
cs
adc
lock
sahf
or
and
dec
lret
mov
jb
mov
dec
rcrb
aad
test
jb
mov
mov
outsb
addb
jg
stos
mov
inc
jne
or
xchg
push
arpl
sub
test
and
outsl
mov
sub
cmp
jg
in
pop
pop
jb
ffree
ja
dec
insb
inc
pop
ret
fbstp
adc
push
dec
rclb
ficoml
xor
push
sbb
scas
push
call
xchg
adc
mov
dec
pop
scas
jnp
out
lcall
sahf
adc
into
out
mov
iret
add
enter
icebp
inc
xor
jmp
mov
pop
push
dec
cltd
nop
in
shll
je
inc
push
jns
adc
andb
inc
push
insl
nop
stos
add
add
or
js
test
jo
daa
sub
xchg
xchg
out
xor
scas
jp
stos
into
js
push
callw
or
xchg
push
jl
test
adc
sti
mov
pop
pusha
inc
les
or
sub
lret
mov
scas
and
mov
outsb
popf
les
clc
xor
mov
cmp
dec
adc
imul
xor
and
sbb
in
shrb
adc
xor
or
mov
out
pop
cltd
dec
push
out
lcall
daa
sarb
bound
mov
inc
inc
inc
int
inc
sbbb
xor
sbb
bound
add
stc
call
mov
mov
imul
jg
mov
sbb
dec
ficoml
pusha
test
inc
mov
ret
xchg
mov
popf
shlb
sbb
bnd
outsl
lret
push
int3
push
icebp
push
add
inc
cwtl
loopne
mov
push
jle
push
notb
inc
dec
push
mov
xchg
negb
add
cmpsb
xchg
mov
pop
repz
xchg
or
fidivs
clc
jno
add
sarb
or
notb
fmull
dec
push
shlb
or
in
add
out
xchg
mov
xor
test
sbb
sbb
xchg
pop
pop
gs
jb
sub
push
sahf
jne
mov
jne
loop
in
mov
cmp
jne
iret
dec
not
inc
xchg
mov
mov
ror
inc
add
imul
sbb
add
rcr
mov
lds
hlt
jmp
xchg
cmp
lcall
fadds
addr16
jp
inc
mov
rcrb
std
jns
sti
lods
movsb
mov
pop
sub
pop
imulb
xorl
aad
add
sbb
push
dec
and
out
and
sbb
pop
aas
or
cmp
mov
dec
mov
sbb
push
iret
xor
mov
xchg
xor
xor
nop
outsb
aaa
rcr
nop
push
jo
xchg
push
push
adc
mov
or
or
sub
push
mov
add
rorl
mov
or
pop
or
sbb
pusha
xor
mov
jecxz
xchg
jl
push
imull
sti
pop
or
sbb
mov
out
mov
lret
outsb
es
and
pop
fstps
sub
imul
mov
lock
sbb
mov
xor
xor
add
enter
xor
cmp
fdivrs
mov
mov
loopne
sbb
push
jne
mov
scas
std
or
cmpsl
add
and
dec
xchg
in
inc
inc
ljmp
aas
jle
push
xor
cmc
push
mov
scas
push
icebp
cmp
xchg
sbb
jo
mov
sbb
into
mov
aam
stc
mov
lods
ret
std
in
call
dec
cmc
stc
outsl
lcall
xchg
daa
jge
push
xchg
lea
mov
out
outsl
popf
cli
push
xchg
xchg
mov
in
mov
jbe
adc
incb
xchg
dec
xor
mov
inc
fst
andb
add
ficoml
push
sub
js,pn
push
rclb
jg
push
and
scas
or
pop
mov
adc
jne
sti
mov
cmp
out
dec
or
push
in
xor
jge
push
lods
inc
stc
cmp
xlat
arpl
and
stc
movzbl
stos
xor
cmpsb
int
jb
mov
and
jmp
loopne
and
xchg
icebp
in
jbe
repnz
rclb
jno
and
xlat
push
sub
ficompl
je
jno
cbtw
rcr
or
xor
add
or
dec
xor
xchg
ret
mov
xchg
stc
pop
mov
repnz
adc
or
test
jae
jecxz
sub
pop
adc
cmpsb
mov
pop
in
testb
mull
inc
xchg
sbb
jae
notl
rol
popa
cmc
sub
sbb
scas
icebp
dec
andl
add
cltd
inc
dec
cmp
testl
cmp
inc
out
dec
mov
lods
lock
sbb
mov
popa
js
dec
das
pop
adc
loop
lods
loop
xchg
pop
insb
call
fsubr
arpl
xchg
xchg
jge
loop
in
jl
repz
fwait
adc
and
mov
inc
cmp
pop
push
add
std
push
out
test
shr
mov
jp
icebp
fldenv
dec
sarl
jbe
mov
scas
inc
int3
xor
mov
mov
push
sbb
mov
pusha
mov
in
popa
inc
jae
cmpsb
and
ficoml
adc
pop
les
add
addr16
inc
xor
pop
add
dec
sbb
inc
psrlw
adc
lahf
adc
aam
popa
mov
dec
daa
inc
xchg
dec
mov
dec
imul
sub
or
push
sbb
fsubl
loop
mov
jbe
flds
iret
movl
fidivrl
xchg
mov
push
push
jnp
into
xchg
test
rolb
cmc
sahf
addr16
lods
mov
dec
and
mov
jbe
mov
dec
jmp
out
push
mov
xchg
test
cld
dec
std
and
xchg
pop
add
cmc
xor
in
add
or
fs
ss
xchg
xchg
lahf
std
add
xor
xor
mov
inc
and
jmp
sbb
adc
jae
out
cld
inc
adc
out
xchg
xor
jg
cmp
hlt
push
push
sbb
popa
stos
out
call
stc
inc
out
sti
cli
pop
iret
out
xor
orb
dec
mov
xlat
jmp
push
pop
mul
mov
cld
jo
mov
mov
insb
inc
pop
mov
mov
pop
mov
push
mov
jle
mov
std
jg
cmp
xchg
push
adc
mov
jb
ss
cltd
fs
sbb
xor
cmc
pop
xor
xchg
jg
imul
adc
in
push
adc
lods
in
mov
call
fldenv
je
xor
cmpsl
popf
pop
xor
into
sub
dec
pop
sub
or
testb
loope
xchg
into
mov
or
enter
inc
push
cs
mov
add
pop
mov
ror
das
inc
outsb
addr16
pushf
mov
push
inc
cltd
push
push
lret
cmp
and
ljmp
adc
fsubl
sbb
dec
rcl
inc
mov
push
add
out
pushf
sbb
dec
sub
pop
fnstcw
cmp
in
jo
or
sbb
cmp
dec
jns
dec
inc
fistl
sub
dec
jecxz
and
adc
pop
adc
inc
xor
scas
dec
fnstcw
cmp
xor
mov
jecxz
std
cs
enter
ds
sbb
push
scas
add
mov
push
mov
jbe
jne
mov
fiadds
xor
xchg
xchg
inc
dec
stc
xchg
arpl
test
cmp
and
inc
fstps
rclb
xchg
jno
mov
jne
jo
mov
cmp
sbb
out
rorl
push
lea
add
pop
repnz
mov
mov
xchg
or
fistpll
lods
and
aaa
test
push
hlt
xchg
dec
orb
fnsave
rep
xchg
leave
nop
cmp
aad
ret
addr16
mov
xchg
mov
or
sbb
xorb
dec
xrelease
scas
movsb
cmc
dec
pop
shlb
into
lahf
lock
cmc
int3
fstpl
cs
push
mov
addr16
test
imul
push
fwait
and
ret
pushw
push
jbe
push
cltd
idivl
lcall
push
pusha
cmc
nop
or
popa
test
popa
lret
testb
and
push
jns
xchg
mov
pushw
cmpsl
cmpsb
out
dec
cmp
adc
fcmove
mov
ffree
and
cltd
int3
int
call
lcall
push
or
mov
movsl
leave
jle
sub
ljmp
xchg
sbb
outsl
pop
aam
rcrb
mov
inc
mov
pop
test
psrlw
jbe
stc
or
inc
mov
xor
out
xor
jge
addl
push
aas
xor
adc
sahf
insl
imul
mov
sbb
mov
or
pop
test
mov
dec
out
and
or
xor
pop
jmp
pop
inc
outsl
cmp
mov
mov
out
cltd
out
mov
sub
repnz
inc
mov
lods
fs
fmull
cmp
adc
mov
pushf
lods
sub
aaa
mov
frstor
in
stos
es
jbe
cmp
jge
out
mov
xchg
fsubr
push
push
lock
xchg
cmpsl
cmp
inc
mov
jne
mov
mov
lcall
dec
jmp
into
dec
fcomps
pusha
data16
cs
repz
and
pusha
divl
cs
push
pushf
add
dec
dec
pop
sbb
or
xchg
rclb
fists
adc
jne
aas
insb
mov
cmp
loopne
mov
mov
mov
aad
lods
mov
push
cmp
adc
scas
cmpsl
clc
mov
dec
bound
lock
sub
xor
mov
call
ficoms
xchg
dec
push
adc
stos
in
fdivl
xchg
sti
pop
inc
sub
ds
add
imul
pushf
lret
rep
mov
dec
push
outsb
jge
or
cmp
mov
dec
adc
or
inc
push
sbb
cmp
pop
das
cwtl
ljmp
in
iret
pushf
and
idivl
jle
adc
add
int3
call
sbb
lea
mov
jae
lods
ja
call
into
out
jg
leave
daa
cmp
jbe
xor
std
sahf
es
out
xchg
popl
xchg
pop
orb
fadd
and
rorl
and
xchg
and
pop
xor
push
inc
cs
or
sbb
pushf
push
test
js
mov
or
inc
stos
je
jp
fsubl
mov
sub
inc
stos
mov
es
xor
stc
cmp
xchg
js
jo
mov
iret
repnz
dec
push
or
sub
and
and
sub
into
sub
out
cmp
incb
xchg
dec
pop
mov
fwait
dec
incb
mov
sbb
ss
or
mov
std
jbe
jno
dec
fucom
leave
jle
pop
sbb
xchg
add
and
xor
pop
pop
ret
mov
push
add
push
pop
dec
test
fimull
into
jge
mov
in
push
sbb
sbb
cli
mov
sbb
and
and
not
or
xor
mov
mov
push
add
sti
pop
push
pop
sub
or
inc
lret
loope
push
sub
movsl
dec
divl
outsb
xchg
and
bound
jl
mov
mov
in
or
dec
icebp
lock
jmp
int3
out
sbb
scas
mov
mov
inc
mov
imul
loope
sbb
mov
push
or
adc
ds
fistps
mov
dec
ds
loop
xchg
jmp
stos
mov
pop
mov
push
out
push
mulb
rcrb
ficompl
dec
popa
mov
lock
pop
jb
addb
in
mov
daa
inc
fs
rorl
cmpsl
mov
popa
subb
call
mov
mov
jo
mov
push
and
out
dec
fadds
pop
loope
cmpsb
jb
mov
mov
and
pop
mov
mov
and
mov
xorl
rol
xchg
out
push
cmp
mov
movsb
dec
jp
jle
push
add
adc
jb
pushf
mov
sahf
outsb
sbb
sarl
jno
inc
cmc
test
lock
cmpb
fadd
rcrl
or
sar
adcl
cwtl
scas
add
add
insb
bound
or
jecxz
or
pop
insl
jp
add
addl
cwtl
out
fcmovb
mov
push
pushw
cmp
dec
loop
cli
fidivs
dec
loope
das
js
das
cmp
xchg
loop
lret
jl
mov
mov
in
iret
stos
adc
aaa
int
jo
inc
or
rclb
fucomi
jne
scas
dec
sbb
scas
jns
mov
cmp
add
mov
in
imul
dec
push
add
cli
addl
sub
xor
dec
in
mov
in
push
xchg
xlat
mov
fdivl
sbb
add
movsl
inc
mov
pushf
and
jo
rcr
daa
dec
or
dec
lea
adc
xlat
push
dec
mov
int3
stos
sarb
dec
loope
je
subb
cmp
imul
jge
int3
into
mov
mov
inc
lods
cwtl
xor
enter
add
xchg
xchg
adc
inc
pop
xlat
lods
inc
test
sbb
out
loop
int
sti
loope
cs
mov
lds
xor
mov
addr16
or
push
or
pop
xchg
sahf
mov
xor
iret
and
xor
inc
and
sbb
push
mov
shr
sbb
arpl
push
sbb
andl
mov
movsb
inc
lret
pushf
rorl
enter
xchg
popf
lahf
call
movsl
mov
fsubl
adc
fldt
into
mov
cltd
push
sti
int3
lods
push
in
sbb
fidivs
insl
fsubl
pop
cmp
dec
push
sbb
adc
sbbl
test
mov
push
imul
add
bound
int3
lret
mov
jl
inc
mov
sarb
rol
call
mov
das
enter
in
inc
cmpsl
lods
repz
add
mov
jg
imul
mov
inc
or
sarl
sbb
sbb
test
add
cli
out
dec
pop
or
xchg
sarl
cmc
enter
das
xor
lcall
inc
shlb
daa
adc
pusha
shl
fstpt
aam
xchg
mov
clc
outsl
in
jle
out
in
sti
jge
mov
jbe
int3
add
jle
or
fiadds
dec
int3
scas
push
js
subl
fimuls
fsts
push
cwtl
cwtl
leave
cmp
test
repz
or
cmp
and
in
lea
fdiv
bound
fisubrl
stc
test
xor
and
mov
fwait
inc
cmp
ds
jns
push
mov
adc
xchg
push
xchg
movsl
int3
test
je
pop
adc
mov
movsl
outsb
xor
ret
stos
mov
out
repz
notl
and
aaa
pop
lahf
sbb
jno
fadd
push
or
sbb
sbb
loope
cmp
xor
cs
cmc
push
testb
adcb
dec
andl
or
jmp
add
xor
sbb
idivl
aaa
arpl
xchg
adc
adcb
cmc
nop
jns
dec
out
push
add
pop
lock
roll
jp
fdivs
in
push
sbb
and
mov
or
dec
icebp
jle
jo
call
lret
adc
add
push
fcoml
jmp
imul
rcr
dec
or
add
shlb
pop
and
sbb
mov
xchg
int
jb
push
cmpsl
sub
nop
sub
mov
leave
mov
ljmp
popa
pop
ss
std
mov
daa
pop
cmp
icebp
xor
rol
xor
inc
mov
push
ret
dec
xchg
fwait
inc
imul
xchg
shr
movsb
decb
jbe
incb
inc
jne
addr16
mov
mov
and
push
shl
xchg
fisubs
add
js
xchg
test
pop
aaa
pop
daa
aaa
pop
daa
pop
push
ja
addr16
addr16
xchg
mov
cmpsl
mov
cmpsl
xchg
test
pop
aaa
pop
daa
aaa
pop
daa
pop
push
ja
addr16
addr16
xchg
mov
cmpsl
xlat
xchg
cmpsl
xchg
out
xlat
daa
pop
aaa
pop
daa
pop
daa
push
push
ja
addr16
popl
mov
cmpsl
in
xchg
xchg
not
addr16
pop
aaa
clc
lea
dec
cwtl
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
and
adc
add
jg
adc
mov
mov
dec
icebp
cmp
sub
or
or
stc
and
adc
add
jno
popa
test
mov
mov
dec
icebp
pop
loope
rcrl
rorl
stc
and
adc
add
jno
popa
test
mov
mov
daa
cltd
jg
jne
jl
jle
mov
cltd
bound
popa
inc
ficompl
jnp
pop
add
add
icebp
pop
pop
out
int
stc
popf
stc
in
mov
in
pop
adc
xchg
sbb
add
push
sub
jb
mov
stos
sub
or
addr16
scas
dec
mov
lret
push
push
push
lds
cld
addr16
sbbb
xchg
sub
test
int3
movaps
or
cmp
jnp
cmp
lret
inc
push
enter
xchg
andl
aam
into
mov
loope
mov
mov
add
jns
insl
imul
jns
sbb
jmp
jno
popa
test
mov
mov
dec
icebp
cmp
sub
sbb
dec
ja
dec
nop
je
mov
cld
add
lock
cmp
xchg
insb
xor
fs
aaa
cli
or
cmpsl
aam
mov
sbb
rcrl
inc
mov
jno
popa
test
mov
mov
dec
icebp
cmp
sub
sbb
or
stc
and
adc
add
jno
popa
test
mov
mov
dec
icebp
cmp
sub
sbb
or
stc
test
stos
mov
push
stos
dec
int
call
imul
sahf
js
push
inc
adc
mov
loop
lods
adc
jge
pop
aad
div
jno
scas
out
push
jb
and
jae
in
test
inc
jae
mov
sub
lret
iret
stos
pop
ja
cwtl
mov
push
sti
dec
cmc
inc
xchg
in
movl
add
std
pop
les
inc
lahf
sub
xor
lock
jb
jne
mov
insl
test
push
daa
mov
ja
jnp
push
cltd
mov
aaa
dec
cmp
rol
xlat
jnp
ljmp
inc
mov
xchg
xchg
incb
mov
stos
arpl
idivl
or
nop
sti
lods
inc
sti
dec
pop
pop
and
cli
jmp
imul
jge
pop
into
les
adc
adc
mov
or
lods
aam
mov
mov
insb
lds
xchg
pushf
loop
stc
mov
out
daa
push
stos
jns
and
adc
stc
cwtl
add
pop
mov
loopne
or
in
fwait
ljmp
sub
mov
jbe
mov
pop
xor
daa
adc
inc
frndint
je
sbb
ds
dec
mov
add
je
dec
and
xor
or
adc
mov
pop
fsubrp
imul
inc
or
xor
or
fwait
mov
push
loopne
add
test
pushf
aas
aaa
test
add
repz
jle
mov
push
gs
sub
sahf
sub
push
lods
inc
mov
int
fisttpl
call
mul
mov
cmp
sub
lock
push
iret
ss
add
pop
test
dec
in
inc
in
add
cmp
dec
mov
mov
jno
popa
add
jne
inc
call
sti
mov
xchg
ss
or
dec
js
cmpsl
daa
std
test
xor
jne
mov
outsl
dec
dec
out
cmp
jbe
sbb
sbb
cs
mov
negl
negb
or
aaa
into
mov
lea
popf
dec
pop
cmp
push
out
push
insl
stc
jae,pn
push
movsl
sub
movsb
or
xor
pop
mov
inc
shl
sbb
loope
repnz
mov
mov
jl
xchg
sub
arpl
jbe
shrb
jo
pushf
popf
jae
fimuls
sbb
push
fwait
and
cs
or
jae
cmpsb
rorb
stc
dec
enter
gs
into
repnz
jecxz
sub
sub
ret
xlat
or
shll
push
and
jns
rcrl
test
mov
dec
mov
sub
mov
aam
cmp
es
ljmp
sub
sahf
ret
push
push
sbb
mov
stos
jb
push
adc
inc
jecxz
in
imul
add
fstenv
je
sub
mov
shlb
jmp
jnp
mov
stc
jmp
into
ret
mov
lret
xor
es
jg
clc
fcomps
insl
lock
aaa
fsubl
cmp
dec
push
sbb
sub
shll
test
or
mov
add
imul
aam
mov
scas
jp
xor
push
or
idivl
dec
push
push
insl
jnp
or
inc
jp
push
sbb
repz
pop
jns
adc
adc
adc
int
mov
movsl
cltd
rorl
arpl
jle
fisubl
popf
mov
add
xor
mov
xor
sub
cmp
nop
ds
loop
dec
icebp
or
inc
fsts
sub
mov
shll
mov
xor
pop
push
stos
jns
mov
push
adc
ret
cltd
stos
and
jg
in
out
or
or
inc
adc
dec
pop
mov
jg
xchg
and
dec
jle
in
xor
rorl
popf
nop
daa
mov
sub
int
enter
add
sub
out
mov
cmp
sbb
ficoml
lea
sbb
sub
ret
pushf
cmp
mov
out
or
jno
rclb
std
xchg
fldt
test
iret
jne
xchg
int
mov
add
or
stos
clc
std
mov
xor
enter
imul
adc
inc
loopne
lea
cmp
push
std
inc
filds
lahf
nop
add
lock
xor
loope
test
jg
hlt
std
test
push
mov
loop
nop
add
sti
popf
xor
add
in
lods
jne
aas
mov
pushf
dec
jg
ljmp
mov
push
into
mov
add
jmp
push
adc
pop
jg
inc
adc
inc
mov
test
je
inc
push
add
add
push
xchg
pushf
outsl
lock
and
shll
fmulp
insl
push
loope
pop
faddp
call
ja
jae
inc
pop
jbe
mov
out
loop
sub
ja
stos
lret
shll
inc
in
xchg
and
into
testb
xchg
inc
mov
data16
add
aam
sbb
and
xchg
push
sahf
loope
or
out
sbb
loope
into
xchg
xor
fnstsw
inc
test
cmc
cmp
nop
mov
inc
pop
mul
xor
xchg
aam
cmp
inc
adc
lock
mov
cwtl
cmp
adc
push
int
or
inc
or
jle
pop
ret
pop
js
cmpl
mov
fmulp
dec
dec
sub
push
pop
scas
cmp
or
jnp
sub
lahf
clc
fldt
mov
inc
clc
xlat
inc
cmp
ucomiss
jge
les
cmp
xor
iret
cmp
and
pop
inc
in
xor
or
loope
jg
insl
push
loope
std
imul
cli
lods
jg
jb
inc
ljmp
push
mov
nop
adc
pop
cmp
sbb
mov
push
inc
mov
outsl
xchg
subb
ljmp
aas
fadd
mov
loop,pn
les
push
jno
lds
pop
outsb
lods
xchg
gs
ja
test
sbb
push
xor
adc
mov
rorb
ja
rcrb
outsl
dec
push
es
push
rcr
jmp
mov
imul
jbe
mov
pop
adc
push
dec
mov
in
mov
out
add
es
bound
mov
mov
int3
xor
loopne
adc
int
sti
ja
jg
loop
xor
aam
sub
addr16
imul
cmp
push
fsubrs
mov
and
imul
cmp
and
loopne
dec
xchg
call
mov
mov
ja
clc
stc
push
xchg
adc
and
mov
xor
lea
push
lds
das
adc
ficompl
into
aad
addl
mov
sti
cmpsl
insl
addb
push
add
sub
out
cmp
or
lahf
out
loop
jb
fisttps
xchg
lds
inc
mull
shll
adc
mov
inc
xchg
loope
popa
loop
repz
pushl
mov
pop
push
int3
xor
adc
iret
repz
push
call
repnz
pusha
xor
rorl
std
rcrl
inc
xor
test
jno
mov
sub
jp
ja
sbb
shll
lahf
xchg
jle
mov
call
push
scas
lea
movsb
jb
cmp
inc
adc
fstl
xor
popa
inc
mov
mov
rorb
jae
mov
scas
push
cmp
push
pop
popf
xor
push
xlat
jmp
loop
xlat
lods
ja
push
dec
ror
inc
dec
into
add
jno
xor
sub
xor
mov
mov
lahf
sub
lds
pop
icebp
testl
jmp
mov
sub
fisttpll
repnz
sbb
imul
xorb
sub
dec
je
aad
add
cs
ror
imul
cmp
xchg
mov
mov
xor
xor
jg
xchg
bound
pop
xchg
paddusb
push
xchg
fdivr
jo
mov
call
inc
or
mov
inc
or
outsl
inc
mov
xchg
fwait
mov
test
push
and
jae
ficoms
hlt
jbe
or
pop
jge
shll
cs
sub
es
inc
inc
cmp
xchg
inc
xor
mov
jno
adc
lods
repnz
pop
mov
daa
lcall
in
or
inc
bound
xchg
insl
shlb
sbb
pop
aas
aad
lcall
pop
addr16
dec
push
in
mov
jp
clc
fisttpll
push
pop
fstp
lahf
dec
xchg
mov
mov
push
shrb
ss
add
popa
outsb
sbb
cmp
out
pushf
scas
sbb
push
xchg
popf
mov
add
push
mov
pop
jne
pop
jns
cld
push
adc
dec
cmp
dec
dec
xor
imul
push
mov
jne
dec
xor
xor
aaa
imul
push
jmp
dec
rorb
outsb
mov
sbb
pop
push
scas
sbb
fstpl
popf
lahf
push
xchg
test
dec
lods
fdivl
xor
addl
xchg
dec
sbb
add
cltd
jmp
cwtl
fisubs
fistpl
sub
mov
xor
out
mov
jl
cli
xchg
xchg
sub
mov
test
shll
adc
pop
sub
subl
and
cld
adc
jp
das
lret
xor
add
mov
stc
in
push
push
gs
adc
lds
loope
dec
loope
sub
jbe
lret
cmp
outsb
cmc
dec
fisttps
jge
and
decl
int
jmp
shlb
sub
cmp
shll
popf
clc
inc
and
rclb
push
add
jno
push
lret
fsubs
decb
push
push
mov
js
jb
inc
mov
lahf
stos
fs
stc
mov
xchg
les
inc
xlat
jb
adc
mov
icebp
daa
sti
imul
lock
fs
fadd
aas
enter
sahf
xchg
xchg
cld
cmp
idivb
fimull
push
sub
je
add
mov
pop
repz
xchg
shrl
hlt
mov
cmp
jge
aam
rorb
xor
fidivrs
or
sub
daa
pop
xorb
jle
xor
sbb
and
fistps
jmp
in
jge
mov
and
add
inc
cmpsb
push
push
sbb
ret
idiv
and
out
pop
mov
sub
inc
outsb
imul
fidivl
addr16
push
xlat
icebp
shlb
inc
push
add
cmp
mov
pop
push
popa
jmp
sub
sub
jge
lret
and
into
js
mov
fisttps
insb
dec
lds
dec
in
lahf
mov
push
inc
pusha
or
rolb
sbb
jnp
or
stc
inc
or
in
dec
nop
loopne
xor
xchg
and
das
mov
jne
icebp
adc
out
out
push
es
add
shll
push
arpl
insb
add
dec
cmp
adc
fisubl
imul
xor
and
dec
add
and
dec
jne
cmp
jb
dec
dec
mov
outsb
cli
push
add
test
imul
lods
movsl
popf
inc
fdiv
add
push
or
pushl
push
int3
xor
js
data16
inc
repz
andl
jno
lcall
leave
out
inc
mov
push
add
sahf
enter
mov
or
pusha
gs
out
and
add
std
jmp
mov
aad
pop
jnp
dec
lret
pop
jge
popf
jle
icebp
jnp
movsb
ja
jge
and
jae
cmc
scas
pushf
jns
imul
xor
lret
ret
outsl
enter
jge
iret
push
and
add
in
add
dec
fwait
mov
insl
cltd
mov
repnz
ds
jb
cs
mov
ficoms
push
push
inc
xchg
sub
cwtl
jne
and
unpcklps
xchg
sqrtps
pop
in
mov
jecxz
mov
jne
fidivrl
mov
imul
push
cmp
es
push
and
xadd
mov
pop
scas
int
ss
arpl
xor
push
xchg
aaa
jmp
popf
push
jae
dec
jno
sub
icebp
stos
flds
aam
movsb
lock
mov
lret
enter
fbstp
lahf
jb
ja
test
pushf
data16
outsl
negb
or
sar
adc
mov
movsb
dec
push
cmp
sbb
out
in
push
jge
sbb
jo,pn
mov
jmp
add
sub
pop
addr16
sbb
pop
int
stos
mov
jno
and
push
jns
call
push
ds
sub
mov
out
mov
or
daa
inc
and
popf
mov
iret
out
jne
cmp
cwtl
divb
call
add
xor
mov
jecxz
mov
adc
shlb
arpl
dec
xchg
insl
subb
test
mov
adc
or
pusha
add
dec
and
sbb
sarl
push
pusha
xchg
mov
xor
adc
and
pop
mov
adc
sub
loopne
leave
and
popl
mov
jo
mov
out
pop
add
mov
mov
push
push
xor
movb
sub
outsb
sahf
or
fs
cmc
lds
in
xor
test
sub
pop
dec
sub
and
test
aad
data16
or
test
pushf
adc
cmc
xor
stc
fwait
arpl
push
pop
push
dec
loope
xor
mov
mov
in
sti
aas
rcrb
in
call
mov
je
jle
xor
loopne
aas
cwtl
gs
insb
jne
push
pop
pop
cmpsl
pop
mov
mov
jecxz
ja
int
out
sbb
cltd
fistl
push
dec
scas
push
push
ficomps
mov
sub
lahf
sbb
push
fcmovne
ds
inc
mov
jnp
imull
stos
out
cs
jb
dec
loopw
push
out
jae
cmpsb
and
sub
mov
arpl
inc
test
ss
push
inc
pop
je
mov
mov
mov
aas
in
jnp
sti
sub
adc
dec
in
add
pop
fs
pop
jle
adc
or
dec
push
popf
cltd
les
les
fisttpl
inc
dec
movsb
pop
and
sbb
mov
repz
jg
addr16
xchg
in
xchg
cmp
or
insb
dec
outsl
mov
scas
cld
les
sub
jmp
iret
aaa
jno
push
push
cmp
and
lods
cmp
jp
mov
mov
xchg
cmpsl
loope
pop
mov
inc
cmp
jne
mov
mov
push
stos
fst
adc
lods
jp
sarl
xchg
invd
clc
clc
mov
insb
popa
add
in
xchg
nop
adc
sub
pop
or
idivl
insb
mov
push
adc
xchg
popa
adc
pop
hlt
test
incb
cmpsl
in
push
fistl
mov
xor
adc
push
or
addl
adc
insl
inc
rol
jbe
loopne
ret
or
and
mov
mov
sbb
mov
mov
push
pushf
inc
fadd
push
shl
mov
push
push
xorb
mov
out
mov
push
sub
icebp
and
int3
xor
ljmp
fs
pop
xor
loopne
push
fld
mov
int3
inc
push
gs
fmul
cmc
jo
int
es
push
stos
push
sbb
daa
outsb
sub
cmp
mov
cmp
dec
test
mov
mov
pop
add
hlt
add
mov
push
add
fisubl
lods
xchg
push
cmp
cmp
cmpb
jg
pop
pushf
cld
shll
mov
xchg
mov
stos
stos
sbbb
cmpsl
mov
xchg
cmp
sbb
outsl
or
jmp
scas
loop
inc
pusha
out
scas
popf
cmp
xlat
in
cmc
cmp
mov
mov
mov
mov
add
or
jns
cwtl
adc
js
pop
subb
mov
jl
out
adc
aaa
mov
cwtl
pop
ficoml
pop
lods
cmc
out
data16
ret
inc
lock
aaa
ret
xchg
repnz
push
sbb
aad
cs
aam
pop
cmp
out
mov
cmc
test
push
shl
stos
hlt
notw
jns
test
cmp
sub
inc
negl
push
mov
icebp
ss
xor
int3
cwtl
mov
fsubs
insb
inc
lock
pop
adc
push
loop
in
out
inc
xor
push
push
cmp
sbb
clc
call
mov
xor
out
call
xchg
pop
cmp
inc
test
sub
push
int
les
pop
cmp
mov
pusha
roll
sahf
cmpsb
lock
arpl
xchg
js
add
sbb
jge
pop
mov
mov
movsl
or
xchg
nop
jb
ja
jnp
clc
in
out
mov
inc
ds
mov
and
inc
les
mov
adc
jecxz
mov
das
xchg
xlat
and
push
sbb
rcll
sub
inc
sub
lret
inc
out
dec
and
xchg
in
hlt
sbb
adc
dec
inc
out
pop
push
and
mov
outsl
xor
lret
push
mov
lods
hlt
mov
pop
rolb
stos
dec
lods
std
inc
out
je
cmp
imul
mov
push
aas
push
in
cs
jb
dec
mov
fistl
xchg
xchg
dec
repnz
or
xorl
fwait
addr16
sub
ret
sub
pop
mov
es
and
adc
neg
add
sub
imul
fwait
push
cld
xor
flds
outsl
outsb
jl
push
dec
scas
add
pop
sub
inc
daa
sub
js
mov
and
xchg
add
addl
push
or
or
test
inc
setns
push
sub
inc
dec
xlat
ja
lods
jbe
cmp
insb
fsubrs
dec
mov
mov
scas
dec
cmp
stos
ret
jmp
cmpsb
and
sbb
push
mov
pushf
mov
cmp
dec
cld
and
popf
ret
inc
dec
aad
testl
fsubrs
jl
pop
xlat
test
gs
in
stos
popa
fcomps
fs
xchg
xor
cli
inc
jns
repz
adc
test
aaa
adcb
mov
outsb
xchg
mov
mov
and
insb
jne
push
fdivl
pop
dec
push
subl
in
fs
das
cwtl
sbb
push
and
mov
test
insl
inc
and
add
mov
push
and
repz
mov
pop
inc
mov
sbb
lahf
xchg
test
xchg
stos
pusha
mov
in
sbb
cmp
cmp
out
les
or
mov
inc
inc
jno
enter
mov
pcmpgtb
ret
push
mov
push
stos
mov
dec
sub
gs
mov
cmp
sysexit
ret
lcall
mov
iret
in
sub
xchg
dec
mov
mov
sub
enter
inc
fwait
push
aad
cwtl
lods
mov
test
mov
lea
imull
or
mov
pop
mov
push
mov
mov
jg
fsubl
enter
cmp
loopne
ret
mov
sbb
pop
xchg
or
les
nop
mov
xchg
pop
fstpl
pop
out
dec
sarl
stos
test
inc
gs
jmp
push
xchg
cmp
add
mov
sbb
inc
mov
jecxz
popa
jns
xchg
mov
xchg
adcl
add
cs
adc
out
or
lods
cmpsb
jo
inc
sub
fs
movsl
idivb
mov
or
cmpsb
aas
adc
repz
lret
nop
clc
scas
dec
ficoms
enter
xor
pop
or
call
add
fdivl
popa
iret
mov
lret
push
fsubrs
dec
mulb
jbe
sbb
pop
jnp
into
hlt
cmpb
dec
sbb
or
xor
mov
test
and
pop
xchg
int3
cmp
pop
jbe
int
mov
inc
lahf
inc
mov
ljmp
xchg
mov
xchg
into
add
sarb
notb
int3
or
fistpll
cmpsl
add
mov
popf
in
fisttps
dec
pusha
and
shr
dec
clc
hlt
ljmp
lcall
nop
movsb
aam
ret
out
cwtl
jle
out
pop
into
lds
ljmp
scas
mov
add
inc
das
jecxz
adc
dec
std
std
enter
incl
out
gs
mov
out
out
adc
sti
int
jb
add
sar
dec
push
xchg
lahf
les
and
add
rorl
imul
shll
dec
test
lock
es
sbb
dec
adc
or
jmp
jno
popa
test
mov
mov
dec
icebp
cmp
sub
sbb
or
stc
and
adc
add
jno
popa
test
mov
mov
dec
icebp
cmp
sub
sbb
or
stc
and
adc
add
jno
popa
test
mov
mov
dec
icebp
cmp
sub
sbb
or
stc
and
adc
add
jno
popa
test
mov
mov
xchg
testb
movsb
xor
and
dec
xchg
xor
push
mov
mov
mov
addl
loope
push
hlt
add
add
and
push
mov
movsb
jno
popa
stos
fwait
je
fs
arpl
shlb
loope
or
and
dec
cmp
imul
aad
mov
data16
mov
movsl
jge
dec
mov
inc
pop
cwtl
inc
push
jns
js
dec
scas
movsl
in
cmp
dec
adc
mov
xor
mov
jnp
mov
dec
stos
lods
adc
and
dec
pushf
pushf
add
pop
pop
inc
pop
arpl
xchg
jne
je
push
pop
mov
pop
shlb
shl
in
shrb
xchg
cltd
push
popa
or
stos
std
inc
push
and
js
and
sbb
push
cmp
xchg
js
push
jle
movsb
mov
mov
pop
shlb
inc
sbb
jle
lods
adc
sti
lret
in
test
jle
dec
andb
adc
loope
sarl
les
mov
pop
movsb
jno
js
mov
test
or
lret
clc
ss
hlt
mov
test
adc
jae
or
in
adcl
jae
dec
xchg
pusha
test
mov
mov
and
std
and
xchg
adc
aam
mov
mov
xorl
add
mov
inc
movsb
jno
popa
test
push
mov
and
adc
add
hlt
add
xor
and
push
mov
movsb
jno
popa
test
push
mov
and
adc
add
hlt
ret
test
insl
lods
into
cmp
repnz
dec
lds
lahf
cld
dec
dec
inc
lea
enter
jb
aam
adc
daa
or
xlat
gs
testb
cmpsb
xlat
sbb
add
arpl
pusha
jns
pop
sahf
testb
lods
stos
fdivs
inc
pusha
data16
aas
repz
adc
arpl
ret
divl
outsb
jbe
or
mov
adcb
mov
mov
adc
dec
lret
insl
cmp
stc
in
xchg
rol
stos
mov
das
lea
mov
xor
out
aad
jne
cmp
sbb
cmp
jo
mov
pop
loop
nop
cmp
in
fisubs
or
adc
test
iret
adc
sub
push
cld
pop
or
cmc
subl
mov
out
mov
je
pushf
adc
lods
std
bound
cld
in
and
xchg
ss
cmp
mov
add
and
clc
popf
mov
add
in
and
sub
pop
fs
pop
mov
ror
jl
mov
mov
jl,pt
lret
in
fbld
rorl
mov
fnstcw
xchg
ret
stos
xchg
sub
pushf
mov
dec
out
xchg
inc
cmp
cmc
push
mov
jp
jne
stc
out
lret
xor
jp
sbb
ret
or
inc
cmpsb
cmpsb
xchg
cli
scas
daa
jge
insl
sub
out
push
pop
jne
insl
data16
pop
mov
subb
ficomps
sub
cmp
repz
add
xor
flds
dec
cli
sti
aad
fs
jbe
icebp
push
popf
mov
or
sub
push
xor
outsb
or
ror
mov
mov
popa
pop
orb
insl
cmpsl
aaa
jae
fildl
jle
fstpt
adc
arpl
stos
shlb
push
adcb
jle
shll
je
adc
or
iret
cmp
sub
push
mov
repz
dec
or
lock
jne
fsubrl
adc
outsl
pop
data16
incb
push
pop
dec
lahf
push
shl
jno
and
cltd
dec
repnz
cltd
pop
push
movsb
mov
dec
or
mov
ret
pop
mov
ret
mov
push
lcall
xor
aam
xchg
dec
outsl
sar
xor
roll
dec
xor
push
fistpl
mov
push
mov
dec
stos
push
orb
xor
mov
addb
enter
sbb
inc
mov
push
and
or
imul
loop
sarb
adc
mov
scas
out
lahf
xor
test
cmp
leave
divb
jg
pop
sarb
lcall
fs
inc
cmp
mov
insl
cmp
mov
jecxz
data16
cmpsl
or
pop
out
sti
jns
lds
adc
dec
dec
pop
adc
out
mov
mov
shl
push
and
push
mov
ret
leave
push
jg
dec
addr16
cltd
out
cs
pop
xor
mov
lods
xchg
int
out
jecxz
imul
adc
lods
xchg
add
or
insb
sub
in
fnstenv
xor
rcr
add
jno
sbb
pusha
xor
leave
mov
int3
mov
nop
scas
outsl
push
mov
inc
add
sub
push
pop
push
aad
outsb
jo
hlt
mov
mov
or
shrl
repnz
mov
add
ss
and
xchg
out
jb
sub
sbb
xor
test
sub
add
jle
fcompl
jnp
xor
les
fwait
nop
movsb
and
inc
cmpb
mov
mov
iret
and
scas
cmpsb
mov
stos
or
je
mov
sahf
arpl
dec
sbb
adc
jae
aas
loope
lock
xchg
clc
fildll
test
into
pop
mov
aam
mov
icebp
sarb
xchg
jg
add
xor
or
push
int
inc
cmpsb
jecxz
push
loope
inc
push
insl
mov
cs
sub
sub
mov
cmp
mov
mov
dec
imul
movsl
dec
fsubl
loopne
cld
add
sbb
xorb
xor
cmp
test
xchg
scas
ljmp
push
sub
push
mov
mov
pop
inc
outsb
movsb
sub
push
jnp
xchg
xchg
pop
stos
outsb
idiv
bound
mov
mov
int3
aas
stc
jmp
and
cmp
out
cmc
push
or
inc
mov
sub
jo
pop
das
push
mov
call
pop
addb
dec
cmp
jp
sub
popa
sbb
stos
mov
leave
bound
insl
out
sbb
fprem
scas
add
sub
push
xchg
aam
call
mov
test
repz
mov
xor
dec
push
cmp
push
cs
xor
ret
hlt
sahf
or
inc
push
or
test
pusha
cmpsb
pop
hlt
cmp
icebp
cli
subl
mov
stc
or
xor
push
pop
push
and
push
inc
mov
sbb
sub
mov
orb
add
lea
pop
fs
stc
or
dec
test
scas
jno
mov
push
stos
lret
push
push
fldt
in
arpl
inc
decl
xor
cmp
cmp
push
jge
cmpb
dec
xchg
inc
arpl
xchg
aas
xor
push
xor
sub
fimull
iretw
test
ss
int
aam
adc
push
sbb
test
out
in
adc
lcall
sbb
test
fwait
mov
jle
lods
or
shlb
mov
pop
outsb
adc
shrl
ss
cmpsb
push
push
in
pop
add
sbb
bound
out
iret
outsl
mov
lock
or
add
insl
mov
adc
push
ljmp
loop
scas
pop
icebp
sub
xchg
jg
mov
dec
mov
adc
cmc
fwait
lret
mov
test
lea
mov
clc
gs
frstor
bound
add
dec
mov
rclb
mov
mov
int3
jg
int3
xchg
dec
loope
jno
or
shl
cmpb
pop
pushf
xchg
cmpsl
cmpsb
in
sub
jecxz
sub
loop
and
outsl
push
push
roll
imul
xchg
add
mov
jecxz
sbb
adc
xor
mov
or
imul
add
cld
xchg
in
dec
xchg
mov
sub
push
xchg
add
arpl
outsb
int3
sbb
out
xor
xchg
add
adc
or
movsl
add
int3
subl
int
cmp
xor
test
add
sbb
adc
rcl
cmp
mov
pop
jns
test
dec
sbb
in
mov
cs
fsubrl
mov
or
cmp
movsb
push
adc
pop
mov
push
in
cmpsb
xchg
inc
dec
or
push
in
cmp
jg
mov
sbb
cmp
js
stc
sysenter
pop
adc
icebp
fnstcw
pop
pop
mov
pop
jg
leave
mov
mov
lahf
clc
imul
aas
xchg
pop
shlb
xchg
inc
xchg
jne
out
dec
mov
xor
or
ret
adc
sbb
loopne
fistps
cmp
jb
jl
rcll
js
imul
popa
xlat
sbb
mov
ret
das
inc
in
imul
std
inc
and
sar
repnz
lea
out
cltd
ljmp
jecxz
in
lahf
pop
push
out
inc
cmp
push
je
pop
dec
inc
stc
sub
inc
jno
sbb
js
dec
dec
inc
xor
push
imul
add
mov
icebp
lea
mov
rol
adc
loopne
dec
mov
inc
sbb
lds
cmpsl
sub
lock
std
imul
lods
aaa
sbb
push
test
sub
sar
popa
pop
xchg
dec
mov
push
sub
jno
shl
jge
pop
fidivs
in
mov
dec
pop
sbb
push
xchg
ljmp
aas
jno
stc
test
xor
xchg
cmp
stc
mov
out
dec
adc
mov
inc
into
push
cmp
addr16
pop
dec
inc
cmp
aaa
and
or
jne
adc
cmp
sbb
movsl
jl
ret
add
mov
pop
aad
xchg
cmp
mov
cs
gs
xchg
and
xor
inc
add
call
bound
stos
adc
cld
negb
add
cmp
out
fmul
adc
dec
sahf
jl
aaa
xchg
mov
xchg
push
and
lcall
cmc
xchg
fisubs
jo
mov
mull
sahf
jmp
push
dec
aas
notl
outsb
dec
and
adc
movsb
lock
sbb
mov
aaa
popa
imul
jmp
cmp
push
pop
out
jp
mov
push
dec
std
cltd
push
sti
cmp
jnp
cwtl
in
sub
leave
inc
xor
adc
daa
int
dec
incl
and
popa
rcrl
pusha
mov
shl
popf
test
xlat
cmpsb
sub
add
sub
xor
faddl
push
loop
shr
and
mov
stos
aas
icebp
jnp
pop
idivb
inc
aad
add
mov
pop
jo
jl
bound
call
cmp
or
fs
sub
mov
rolb
push
and
ret
inc
ja
mov
jecxz
leave
and
adc
out
jae
leave
psrlw
jne
cwtl
and
addr16
dec
mov
push
add
mov
ja
lds
inc
mov
sub
fldt
dec
cs
lret
mov
inc
lods
fwait
push
inc
mov
test
add
scas
repz
loopne
mov
adc
sbbb
mov
movsb
and
sub
xor
xchg
mov
inc
jnp
std
add
adc
pop
lods
xchg
mov
ficoms
add
mov
xor
in
data16
cmc
jg
jg
pop
mov
pop
dec
jnp
sbb
xor
mov
jbe
jb
push
in
mov
movsl
inc
sbb
adc
push
rcl
and
mov
jge
inc
loop
inc
inc
mov
mulb
jbe
hlt
adc
popf
push
scas
mov
in
std
jmp
push
loopne
pop
pushf
out
fdivrl
pop
fsubr
jp
or
sub
test
sbb
fisubrl
mov
les
pop
fstpt
mov
add
cmpsb
fnstenv
mov
xor
push
and
scas
xor
xor
cmp
or
pushf
cmp
add
andl
or
or
xor
xchg
or
push
jge
outsl
pop
fwait
mov
es
data16
pop
xchg
mov
repnz
jo
cwtl
xor
push
push
insl
cli
jl
loop
mov
mov
push
fidivl
mov
aam
pop
aaa
xlat
push
sub
or
add
mov
jno
sti
les
xchg
out
pop
xor
sub
sarb
xchg
subl
call
addr16
adc
xorl
jae
leave
mov
mov
inc
test
jno
jmp
imul
adc
lret
xorb
or
out
addr16
repz
out
loope
pop
andl
dec
xor
and
cld
fstpt
cltd
or
jmp
or
out
andb
xchg
scas
movsl
bsr
int
into
in
add
aaa
mov
pop
fimuls
aaa
stc
and
dec
inc
jl
dec
xchg
dec
out
sbbb
cltd
sbb
test
fistpll
jge
mov
jno
hlt
jne
cmp
push
jb
pop
ljmp
and
push
dec
pop
sbb
inc
mov
clc
cmp
cmp
add
ja
lock
cmp
enter
or
or
push
jp
jnp
inc
or
xchg
shr
fcoml
les
shufps
dec
xchg
push
fcompl
stos
data16
cmp
sub
mov
shlb
adc
repnz
or
cmp
inc
fiadds
ds
sahf
je
fwait
mov
or
lahf
jo
insl
pop
mov
lcall
cmp
push
dec
push
inc
adc
lahf
lods
insl
xchg
enter
ret
lods
mov
fcomps
xlat
xor
mov
outsl
push
test
push
jl
dec
negb
push
cmp
addr16
jnp
or
inc
sub
shlb
or
mov
scas
popf
addr16
inc
cmp
lea
test
sbb
xchg
inc
mov
lea
lods
xchg
fisubl
loope
or
xor
lret
enter
mov
scas
mov
popf
add
sbb
stc
xor
mov
cmp
sbb
lret
or
pop
jecxz
les
and
inc
jo
and
dec
mov
add
into
je
jp
sbb
sub
andl
xor
push
jb
mov
icebp
nop
xchg
fs
sub
call
mov
call
pop
cltd
jg
jb
inc
push
push
push
insl
inc
lahf
pushf
leave
xchg
test
push
adc
stos
gs
jne
mov
push
insl
mov
out
cli
std
adc
jge
test
and
push
xor
push
addl
ds
xchg
sbb
mov
and
in
dec
enter
js
in
xor
or
push
xor
mov
jno
fs
test
add
sbb
sub
movsb
cmp
imul
sbbl
sahf
data16
fldl
cmp
inc
dec
mulb
lock
pop
and
into
inc
cmp
sar
rcll
mov
addb
stos
xlat
sub
out
push
lock
inc
adc
xor
hlt
adcl
in
and
jp
scas
jge
iret
fisttps
and
aam
pusha
sub
std
fsub
or
dec
xor
push
pop
xchg
icebp
mov
clc
or
loopne
sbb
fucompp
push
in
cmp
cltd
xchg
pushf
gs
push
pop
outsb
ss
xor
fnop
xchg
adc
es
cmp
inc
movsl
cmp
hlt
pop
mov
int3
cmpb
xor
popf
lock
in
fidivs
fs
jbe
loope
insl
arpl
lea
push
push
iret
push
xchg
dec
fsubrp
pop
jns
cld
in
out
inc
pop
add
and
mov
fsubs
xchg
jmp
mov
daa
cmpsl
icebp
jg
and
hlt
pop
inc
adc
mov
xchg
sub
out
adc
call
enter
jno
sbb
add
jns
in
cmc
pop
loop,pt
stc
inc
loop
sbb
jmp
loopne
gs
cmp
lds
cmp
mov
jecxz
pop
push
pop
add
mov
out
jbe
fimull
ds
lret
pop
mov
pop
nop
cmp
xchg
out
xor
stos
dec
mov
adc
inc
addl
pop
push
je
inc
es
incb
popf
jl
pop
mov
nop
jne
xchg
fidivrl
pop
lea
int3
pop
xor
xchg
cld
mov
out
rorl
jmp
sub
lcall
inc
sbb
test
add
dec
and
cli
lea
sbb
dec
rolb
mov
das
push
xchg
je
aas
jle
mov
outsb
pop
sti
lret
sub
rclb
mov
push
sbbb
add
movb
adc
mov
mov
inc
mov
mov
mov
xor
rcl
adcb
stos
xchg
out
outsb
xchg
push
push
jp
xchg
int
pop
push
int
arpl
int3
mov
hlt
jle
pop
popa
inc
push
cmp
sbb
test
xlat
lea
inc
das
enter
out
inc
roll
popa
div
dec
lret
xchg
fwait
sti
push
addr16
pop
dec
addr16
adc
adc
pusha
cmp
push
and
mov
sub
xor
fnstenv
aad
add
addr16
rclb
cmpb
arpl
cmpsl
paddusw
mov
loope
test
cmpsb
dec
push
push
outsl
pop
imul
repnz
jmp
mov
repz
jge
nop
pop
mov
and
inc
jle
scas
sub
fidivl
push
ss
cmp
imul
push
push
mov
jbe
sub
sbb
insl
xchg
adc
dec
and
xlat
mov
in
les
leave
xchg
fnstsw
in
cmpl
scas
pop
pop
ds
imul
jbe
les
dec
stos
mov
sub
jge
iret
or
inc
test
push
dec
jmp
ja
mov
jge
jns
stos
jecxz
cmpl
push
add
push
adc
arpl
test
xchg
sbb
movl
pop
shl
shlb
mov
and
loope
insb
push
xor
push
jp
adc
push
int3
dec
pop
scas
jmp
popa
divl
dec
es
out
mov
incb
rorb
cmpsb
imulb
and
lea
out
lods
fisubrs
push
pop
loope
fsubrs
pop
jnp
and
inc
lahf
shll
jmp
icebp
out
arpl
or
push
mov
mov
mov
cmp
mov
out
dec
cmp
int
movsb
sub
add
fwait
xchg
adc
movsb
push
jns
loop
xchg
and
mov
pop
insb
sub
sub
mov
lahf
adc
and
pop
inc
inc
mov
sub
inc
sbb
insb
dec
jecxz
repnz
bound
sub
jge
pop
and
push
push
sahf
mov
dec
adc
test
cwtl
xor
xchg
aad
outsb
pop
mov
cwtl
adc
std
inc
lret
cltd
addb
push
push
scas
lahf
pop
int
shll
push
in
push
pop
adc
lahf
es
mov
mov
and
insb
repz
pop
sbb
aam
mov
in
cmpb
fsubp
div
cli
addb
cmc
sub
mov
mov
test
aad
fstpt
aam
dec
cmp
cmpsl
cs
mov
ds
cmp
lret
test
imul
test
in
mov
mov
test
or
icebp
ss
lds
inc
mov
jg
rcrb
call
lock
enter
xor
push
movb
mov
fstpt
mov
imul
lcall
lahf
inc
shll
or
int3
stos
lods
clc
or
inc
add
test
pop
jo
push
test
adc
mov
lds
xchg
sbb
add
mov
fbld
ja
movsb
cmp
pop
inc
cld
aaa
dec
lea
jne
jp
in
loope
pop
adc
inc
xchg
pusha
popf
xor
push
mov
outsb
lock
outsb
pop
push
lds
adc
nop
clc
xchg
mov
test
out
popf
lods
mov
and
push
test
int
push
mov
lock
mov
mov
jecxz
add
mov
int
or
clc
inc
mov
pop
jmp
cli
pusha
or
ret
and
mov
xor
dec
movsl
mov
jb
jmp
cmp
pop
dec
cld
cmpb
les
data16
movsb
jae
popf
adc
cmp
hlt
mov
fmuls
lea
aam
cld
jne
loop
sar
sbb
lods
cld
fsubrs
lret
cltd
data16
sahf
pushf
mov
repz
ds
jecxz
ds
lods
or
push
mov
dec
adc
negb
push
add
jg
insl
es
sub
into
sub
jecxz
pop
mov
mov
dec
mov
nop
fnstcw
mov
mov
and
mov
out
xchg
cmpsl
add
mov
push
sub
adc
pop
adc
jecxz
sti
movsb
jg
mov
adc
push
or
or
test
xor
and
and
lods
pop
or
outsb
addr16
rorl
jg
sub
pushf
jmp
xlat
lods
shl
lcall
insb
imul
adc
cmp
jmp
add
pop
pop
sbb
push
lods
iret
sbb
movq
add
repz
sub
movd
test
test
and
push
rol
sbb
aam
push
pop
ljmp
or
cli
xor
mov
repnz
insb
fnsave
sbb
ja
jb
outsb
subl
in
std
jle
ret
cmpsb
jno,pt
cmp
mov
inc
fdivrs
push
aas
pop
dec
jae
mov
bound
icebp
dec
dec
cwtl
xchg
and
out
mov
adc
sarl
in
shll
les
inc
movsb
jno
popa
test
push
mov
and
adc
add
hlt
add
xor
and
push
mov
movsb
jno
popa
test
push
mov
and
adc
add
lock
xor
and
push
mov
iret
jno
popa
test
push
mov
and
sbb
xor
test
inc
movsb
icebp
adc
inc
outsb
mov
sbb
cmpsb
dec
dec
pop
push
insb
push
jl
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
or
repz
sub
imul
or
push
add
add
add
add
push
add
adc
or
or
mov
mov
add
add
add
gs
add
add
add
aaa
add
add
add
add
add
add
leave
add
add
inc
add
add
add
add
add
add
add
loopne
push
add
add
add
add
add
pop
add
add
adc
push
add
add
add
add
add
add
add
add
or
roll
test
fwait
add
add
add
add
add
add
add
add
add
add
int3
add
cltd
add
add
sub
push
add
add
roll
mov
loopne
leave
add
roll
pop
add
add
add
add
add
add
pop
add
add
adc
adc
adc
movsb
add
add
mov
add
jle
xor
aas
add
add
or
xor
add
adc
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
sub
add
add
imul
add
add
je
inc
add
leave
add
push
add
add
add
add
add
add
add
mov
bound
rolb
loopne
add
add
push
add
aad
flds
movsl
add
pop
add
add
dec
add
add
add
add
pop
add
add
add
ja
call
add
add
add
add
add
add
loopne
xchg
add
adc
xchg
add
push
add
add
add
mov
lcall
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
xchg
add
add
add
pop
add
add
add
dec
add
pop
add
add
add
inc
add
add
pop
add
add
lea
sbb
fiadds
sbb
push
add
add
add
addb
add
add
add
add
add
pop
add
sti
add
add
add
add
and
add
add
add
add
add
add
inc
add
add
and
jno
sbb
test
add
add
dec
add
add
push
or
or
ljmp
add
add
mov
mov
add
add
add
nop
add
add
add
pop
add
jb
ret
add
add
add
pop
add
loopne
add
sbb
das
add
add
add
add
add
xchg
add
add
pop
add
add
mov
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
rolb
lcall
add
add
add
add
add
add
movsb
add
or
push
add
add
insb
outsl
xchg
clc
lods
scas
sbb
push
jno
mov
shrl
sub
shll
fwait
xor
out
xor
aaa
lods
pop
shrb
and
and
sub
ss
sbb
in
stc
mov
in
add
adc
jb
movb
xchg
repnz
mov
mov
cltd
pop
cmp
xor
hlt
inc
xor
faddl
in
push
adc
gs
daa
jle
fdivrl
sub
push
dec
jnp
aad
mov
sub
scas
lods
insb
sahf
add
cs
jnp
int3
ret
cwtl
popa
ret
imul
push
cmp
jae
mov
dec
test
dec
cwtl
jnp
fdivrp
movsl
or
inc
loop
mov
in
jecxz
ds
sub
lea
loop
repnz
pop
test
into
xor
push
push
inc
fistpll
outsb
cli
fidivrs
stos
std
rol
fs
mov
cmpl
stos
mov
rorb
xchg
popf
inc
test
push
pop
cmp
ret
stos
adc
enter
lahf
and
or
cmpsl
loope
das
jecxz
dec
jno
cld
mov
imulb
cmp
lcall
or
es
out
cmp
and
lcall
push
andb
push
xchg
push
test
mov
mov
fs
push
pop
stos
mov
cwtl
fstpt
outsb
inc
clc
pop
mov
mov
jbe
pushf
xchg
and
push
stos
push
mov
sbb
out
incb
out
arpl
mov
imul
test
lcall
or
add
aaa
icebp
xchg
xlat
outsl
gs
sbb
adc
icebp
sahf
sub
lret
push
sbbl
shl
xchg
stc
outsl
adc
cmp
add
cld
lds
sarl
dec
addb
or
and
aas
xchg
xor
fistpl
add
pop
pop
cmpsb
enter
dec
test
clc
xchg
inc
das
xchg
xor
shr
mov
xchg
sti
lret
les
and
enter
imull
xor
xchg
mov
pop
pop
ljmp
jnp
les
fldl
sub
ja
mov
push
adc
cld
lcall
mov
jmp
inc
cwtl
and
int3
lea
xchg
sbb
dec
sahf
mov
push
int
or
cmc
mov
test
test
push
xor
and
addr16
mov
lea
stos
push
fs
inc
and
dec
test
call
imul
push
loope
ljmp
dec
jo
jnp
mov
out
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
