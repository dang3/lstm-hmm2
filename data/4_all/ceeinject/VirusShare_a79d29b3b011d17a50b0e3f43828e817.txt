call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
out
negl
test
xor
addr16
adc
cs
ds
dec
aaa
pop
pop
jle
jle
mov
sahf
scas
xlat
mov
xchg
xchg
fwait
addr16
ja
xor
push
ds
sub
pop
pop
outsb
pop
jle
mov
sahf
scas
xlat
mov
xchg
xchg
addr16
ja
xor
jns
dec
or
or
scas
ret
mov
movsl
je
xor
lods
loop
jne
jne
daa
sub
mov
xor
pop
xor
popaw
je
push
pop
loope
rcl
sub
pop
and
pop
sahf
jl
pop
jns
andl
addr16
sbb
roll
xlat
mov
add
mov
iret
cmpsl
fidivrs
lcall
addr16
call
pop
mov
sbb
popa
lods
push
out
mov
inc
mov
ja
mov
push
rcr
ds
sbb
add
adcb
mov
xorl
aaa
push
sbb
rcrl
ss
pop
outsb
jg
mov
scas
xlat
mov
xchg
xchg
addr16
ja
inc
cs
ds
dec
aaa
pop
pop
outsb
pop
cmp
out
mov
lret
mov
stos
loop
mov
jle
pop
and
cmp
cmp
inc
sbb
sbb
loop
repnz
out
fucom
fistpl
add
insb
push
dec
adc
arpl
jne
pop
sub
lret
cmpsl
cld
mov
xchg
xchg
addr16
ja
inc
cs
ds
dec
aaa
pop
pop
outsb
pop
jle
mov
sahf
scas
xlat
mov
xchg
xchg
addr16
ja
inc
cs
ds
dec
aaa
pop
pop
outsb
pop
jle
mov
jl
repz
cmp
pop
ds
add
aad
add
xor
nop
imul
cmpsb
cld
leave
hlt
ret
lret
loope
fmuls
daa
mov
mov
sub
and
push
orl
lahf
inc
rcl
and
push
repnz
movl
push
pusha
and
daa
jbe
push
jg
stos
or
icebp
push
and
and
mov
jecxz
sub
pop
or
test
xlat
sarl
push
ss
jns
mov
fsts
add
in
xchg
inc
icebp
cli
sbb
leave
cmp
jo
cmp
inc
mov
add
sub
xlat
pop
add
cmp
jne
mov
xchg
dec
fistpll
pushf
ljmp
data16
repnz
stos
push
mov
or
outsb
mov
cmp
cmpl
rcl
and
push
xor
inc
das
shrl
movsl
mull
xlat
cmp
jb
loope
cmp
add
es
fisubl
pop
dec
jl
add
inc
pop
sub
jb
icebp
xchg
add
out
sbb
mov
fisubrs
xorl
jmp
pop
sbb
mov
or
or
call
popa
push
lea
cld
add
repnz
inc
xor
pop
lcall
jg
repnz
add
sub
and
mov
jns
repz
stc
loop
adc
addl
cs
add
dec
in
xchg
outsl
push
test
cmc
dec
pop
xchg
pop
sbb
fldl
es
and
sbb
mov
jmp
mov
fcoml
orb
and
push
and
jbe
add
rcrl
pusha
mov
xchg
stc
stos
inc
ja
mov
pop
jle
repnz
adc
adc
or
sub
mov
aas
jne
add
jl
cmp
mov
repnz
push
pop
mov
sti
xor
mov
jo
stc
stos
and
jmp
fimuls
test
mov
push
scas
lret
jg
enter
outsl
push
push
lret
cmpsl
movsl
jne
dec
sti
repz
jne
mov
enter
jae
rcrl
jle
mov
scas
push
aam
movsb
test
lcall
sub
cmp
outsb
loopne
inc
clc
lock
push
cmp
mov
enter
vcvtsi2sdl
je
adc
inc
lea
mov
fistpll
pop
call
sub
inc
cli
pop
sbb
ljmp
push
xor
mov
xor
lcall
imul
or
inc
or
mov
das
xchg
lcall
sahf
pop
cli
sbb
dec
fstl
jmp
push
test
sub
in
notl
and
clc
call
or
daa
xor
or
cwtl
cmp
loop
mov
inc
jle
push
mov
lods
jno
mov
faddl
push
popf
and
cmpsl
xlat
xchg
jl
dec
mov
hlt
mov
faddl
push
ljmp
fiaddl
les
lret
aaa
sub
cld
xor
inc
sub
rorb
pop
lods
les
ja
icebp
cmp
fsts
pop
cmc
mov
pop
mov
pop
pop
fsubl
adc
adc
xor
push
shlb
mov
jp
mov
mov
push
lret
cmc
les
rcrl
or
push
sti
stc
xor
insl
mov
push
jne
pop
adc
or
insl
mov
push
cld
and
aas
mov
daa
push
in
loope
cmc
cmp
xor
xchg
jno
mov
loop
arpl
das
into
xchg
testl
loope
dec
mov
push
mov
cmpsl
pop
movsl
pop
lret
sbbl
mov
push
pusha
adc
mov
repz
aas
int3
fcmovu
test
shr
incl
data16
or
dec
fmul
add
ror
fsubl
ret
js
mov
mov
sbb
pop
outsl
xchg
pop
addb
cli
sti
dec
mov
lcall
cli
cs
out
mov
xchg
xchg
xor
add
sub
aam
out
fnsave
mov
idivb
adc
popf
std
movl
call
sbb
mov
adc
fiadds
jp
dec
imul
add
cmp
add
jge
outsl
mov
xchg
leave
lret
ficoms
iret
dec
lcall
aam
xor
cmpb
jo
jne
dec
mul
or
pop
cli
nop
mov
cmc
xchg
in
das
in
pop
addr16
pop
mull
test
dec
push
and
add
sub
mov
cltd
pop
or
mov
lahf
mov
lret
icebp
mov
dec
dec
push
sbb
lcall
add
inc
aas
fs
xchg
jecxz
decl
sub
fidivrs
pushl
adc
lret
pop
repnz
fucomp
mov
out
jmp
cmp
daa
clc
aad
call
lea
loope
adc
in
pop
pop
fidivs
cltd
fsubrs
fs
enter
idivb
lods
dec
mov
xor
repnz
pop
setb
dec
ficompl
cmp
mov
pop
or
les
sub
out
aam
fsqrt
subb
fisttpll
inc
pop
sbb
push
lret
ficoms
lcall
jbe
test
or
leave
adc
mov
adc
out
cwtl
inc
xchg
mov
mov
out
add
sbb
mov
shrb
lock
fidivrl
add
jecxz
jp
adc
pop
nop
add
cmp
iret
xor
faddl
sub
iret
push
adc
xchg
xchg
test
insb
jp
or
mov
mov
arpl
adc
rcrb
mov
jmp
shr
adc
fistl
imul
stos
rorb
std
mov
into
xchg
frstors
inc
into
movsb
xor
ret
ret
fsub
mov
mov
fisubl
jbe
and
iret
mov
icebp
push
jmp
push
arpl
mov
outsl
addl
push
jmp
loopne
cltd
jle
push
pusha
lcall
push
xor
xchg
iret
ret
push
mov
cmp
fisttpll
jg
cmp
fists
push
ret
and
bound
mov
inc
xchg
dec
add
lret
dec
xor
push
jle
repz
dec
test
push
push
and
out
mov
xchg
mov
lret
push
push
adc
mov
arpl
jo
movb
pop
mov
adc
ljmp
mov
sbb
jmp
xchg
outsl
rorl
mov
insl
rcrl
fwait
or
pop
nop
sub
pop
cmp
mov
jno
mov
jg
insb
sarb
sarb
dec
push
xchg
daa
xchg
test
jp
mov
repz
cld
or
loop
fcmovb
mov
les
or
push
jmp
push
push
jns
outsl
fwait
inc
call
insb
add
and
insl
hlt
push
cs
mov
and
jo
stos
les
xchg
adc
sbb
jle
pop
lea
jae
inc
jp
mov
mov
mov
mov
inc
pop
gs
cs
pop
cmpsb
pop
shl
jns
cli
lea
iret
js
cwtl
dec
mov
xor
push
mov
mov
loop
jns
adc
fnstcw
test
mov
pop
ret
or
fisubrl
orl
fimuls
repz
div
ss
std
nop
inc
push
dec
call
or
sub
lcall
subb
dec
mov
mov
dec
sahf
xor
xchg
outsb
or
xor
pop
nop
pushf
jno
pop
add
sti
lcall
pop
stc
inc
out
scas
out
in
jg
test
notb
lcall
push
push
xor
xor
add
jno
ljmp
stc
insb
jl
sbb
clc
out
inc
sub
jne
loop
mov
xor
subb
mov
fcmove
adc
xchg
out
inc
ds
ljmp
pushaw
pop
movsb
jmp
mov
xchg
aam
test
push
cmpl
mov
rolb
iret
adc
inc
fsubl
pop
pop
xchg
adc
ret
jle
stc
mov
dec
cmc
or
push
fs
lds
push
int3
lock
rcll
mov
iret
push
lahf
or
sbb
xchg
fdivrl
xchg
add
lock
and
push
fistps
xor
lods
jns
jp
sub
cmp
xchg
mov
test
jmp
cmp
test
sub
cmpsl
je
ret
shll
out
dec
or
lahf
lcall
mov
insb
inc
cs
pop
orb
cli
mull
sbb
fildl
movsb
addr16
les
sbb
xchg
push
mov
daa
sahf
or
movsl
jae
mov
pop
mov
mov
and
into
fwait
pop
out
aaa
fcomip
stos
nop
sti
jecxz
mov
nop
fadds
sahf
xchg
dec
push
push
cmp
inc
push
in
inc
fwait
and
dec
fmull
dec
mov
data16
ja
pop
mov
fdivl
push
lret
inc
ja
out
roll
xchg
pop
pop
mov
mov
out
dec
sub
lods
mov
add
jl
or
lods
mov
ret
pop
adc
imul
pop
pop
xchg
ja
push
xchg
in
aad
dec
repz
addl
sbb
mov
jne
daa
cmc
out
cmp
cmp
iret
push
adc
jbe
jl
pop
lret
mov
sub
out
xacquire
xchg
dec
and
xor
or
push
pusha
out
mov
movsb
imul
cs
fdiv
outsb
lahf
pop
mov
dec
xchg
add
stc
bound
das
cltd
cmc
lret
out
movsb
jge
cmp
or
and
sbb
mov
xchg
sbbl
sub
cmp
mov
jle
pop
pop
jae
add
jae
adc
movb
int3
aaa
data16
jns
ljmp
fnsave
dec
out
fimull
in
enter
sub
adc
xchg
push
pop
fs
dec
scas
cltd
lret
in
cmp
dec
test
dec
dec
sti
mov
mov
ljmp
test
or
jmp
add
sub
and
xchg
push
pushf
daa
jae
add
inc
cmp
sub
repnz
lahf
nop
mov
xchg
add
enter
jp
lahf
push
pop
inc
insl
lret
ret
lcall
pop
dec
dec
rcr
dec
jnp
rcrl
dec
out
jae
jmpw
les
in
insl
pop
or
mov
jno
sbb
popf
mov
inc
mov
scas
ds
in
sub
push
adc
add
pop
and
adc
adc
int3
js
clc
bound
test
cltd
jg
jl
notl
or
mov
mov
sub
int3
add
aad
aad
push
pop
test
ljmp
call
pop
xchg
repz
shll
or
adc
stc
test
xchg
call
xor
out
push
js
adc
xor
xchg
mov
shr
test
clc
or
adc
adc
mov
push
hlt
outsb
or
sbb
adc
mov
mov
push
in
movb
push
mov
xchg
scas
fimull
push
push
inc
cli
jmp
mov
mov
rol
addr16
or
adc
fdivl
inc
scas
adc
inc
mov
std
pop
and
imul
mov
leave
xor
cmp
aam
lret
shlb
jmp
imul
adc
inc
jge
or
xor
sub
nop
sarl
mov
pop
notl
fwait
inc
xchg
dec
mov
out
mov
fsubr
inc
pop
ja
pop
inc
sbb
repz
cltd
jo
add
jae
mov
pop
mov
aam
jge
in
push
iret
mov
mov
mov
sub
incb
mov
movsl
add
add
xchg
shrb
sar
rcrl
pop
call
sbb
pop
je
and
aad
push
pop
jno
in
xchg
pop
adc
mov
cltd
sub
sbb
sub
imul
mov
inc
andb
sub
dec
or
mov
leave
pusha
sahf
popf
in
cld
cmp
sahf
add
dec
test
int3
cmpsl
and
fwait
out
ficoms
sub
mov
xchg
and
jnp
clc
xor
stc
enter
adc
mov
in
sub
cmp
daa
repz
call
jnp
fiadds
xchg
out
sub
and
pop
test
or
adc
sbb
lahf
std
in
ja
xchg
push
in
insl
adc
enter
push
negb
sbb
nop
cltd
adc
gs
mov
loop
lds
imul
call
ret
xchg
enter
cmc
in
push
repz
fiadds
sub
push
hlt
lret
lahf
roll
xchg
ret
sbb
add
mov
sbb
push
outsl
pop
adc
push
dec
sbb
insl
jge
mov
xchg
mov
nop
jecxz
mov
push
cltd
out
sub
xchg
rclb
sbb
jp
bound
les
aas
outsl
les
sbb
xor
cmc
dec
roll
outsb
in
stc
jne
mov
rcrl
or
std
fldl
loopne
pushf
mov
mov
sbb
iret
fwait
sub
stos
adc
cli
or
out
loopne
cltd
mov
xchg
test
insb
cld
shlb
clc
pusha
repz
ja
mov
dec
sub
inc
jo
movsl
mov
mov
ds
out
pop
insb
cmp
add
and
push
xlat
xor
into
cmpsl
jno
jmp
mov
test
in
test
jp
xchg
lock
pop
in
mov
cld
xor
mov
xchg
xor
addl
pop
mov
cmp
cmc
push
sti
cmpsb
imul
and
or
xchg
mov
insl
cli
lods
pop
daa
add
scas
pop
or
ja
jge
mov
scas
push
push
cmpsb
es
je
push
testb
xchg
xchg
add
out
xor
sub
jmp
ds
cmc
mov
pop
repnz
rorb
push
xchg
adc
sub
shrb
repz
push
loope
addb
out
rcll
pusha
insb
push
int
notb
mov
xchg
repz
scas
mov
repnz
iret
mov
in
dec
ljmp
inc
push
and
jge
or
add
adc
cli
push
in
mov
mov
mov
mov
sbb
mov
aaa
in
add
push
lret
sub
movsb
movsl
sbb
mov
jnp
arpl
fdivs
pop
jge
or
fstl
cltd
cmpb
adc
dec
mov
mov
add
lret
xchg
pop
sbb
das
mov
hlt
mov
addr16
insb
xchg
pop
smsw
enter
loop
xchg
push
hlt
add
mov
inc
dec
outsl
mov
xor
cmp
je
movsb
popf
mov
push
fsubr
adc
stos
movsb
popl
fdivl
movsb
dec
push
mov
outsb
bound
test
lcall
add
and
popf
popf
mov
mov
adcb
insb
enter
ja
int
ds
in
jmp
pop
push
scas
jmp
mov
sbb
aaa
jne
pop
mov
mov
shll
mov
mov
sti
fldl
mov
dec
push
fs
pop
mov
push
sub
rcrl
add
int3
mov
add
sub
inc
jp
or
loope
xor
mov
mov
mov
inc
cmp
pop
push
stos
inc
lret
mov
and
cmp
lret
cmpb
xor
adc
test
cmpsl
xor
ret
mov
fdivs
push
leave
push
out
add
into
mov
repnz
lcall
js
sbb
stos
mov
pop
xor
aam
shlb
data16
fstps
mov
push
mov
not
data16
push
notb
call
mov
xchg
loop,pt
xchg
jge
mov
mov
loopne
repnz
and
repz
popf
stos
or
loopne
sub
xchg
xchg
pop
cmp
mov
insb
dec
push
adcl
popl
mov
inc
cld
mov
sub
add
cmp
mulb
enter
xor
bswap
add
mov
jne
inc
sbb
push
inc
es
je
push
jge
repz
jge
pop
inc
icebp
pop
adc
imul
add
jecxz
jp
and
sbb
lea
push
pop
xor
iret
ret
or
adc
xchg
jl
and
jecxz
or
fcmove
xor
ret
or
mov
insb
xor
inc
adc
cmp
js
sbb
movsb
in
cmp
idiv
repnz
movsl
dec
test
dec
divb
fnstenv
mov
popf
test
adc
jmp
mul
data16
xchg
xchg
jge
adc
inc
daa
sub
mov
sbb
clc
stc
push
mov
lea
and
and
popf
xchg
stos
data16
lock
hlt
int
and
in
fdivrl
and
in
in
xchg
hlt
jae
mov
add
mov
mov
mov
jnp
andb
std
sub
mov
inc
mov
aam
mov
iret
out
stos
mov
fnstcw
fidivs
ret
dec
rclb
cltd
pushf
mov
sub
mov
push
mov
pop
add
adc
loop
cmp
mov
mov
outsl
pop
idivb
jae
lods
sbb
in
pushf
fimull
insb
mov
daa
or
aad
insl
loope
jne
insl
sbb
dec
sbb
push
pop
jp
ljmp
mov
and
subl
into
pop
xor
adc
fwait
in
mov
sbb
push
dec
xor
adc
or
outsl
les
data16
adc
xor
fs
adc
popf
aad
insl
xor
push
stos
rcr
in
ss
ja
adcb
cmpsl
in
mov
cmp
es
mov
pusha
in
xchg
lahf
sbb
lock
es
xlat
pop
push
cmp
push
jne
repnz
sbb
lret
sbb
into
and
lahf
outsl
jp
icebp
xchg
fwait
aaa
clc
inc
outsb
in
out
push
ljmp
cld
cmp
ja
movsb
clc
mov
enter
adc
loop
fidivrs
cmp
loopne
pop
call
movzbl
sub
xor
outsl
fdiv
popa
rorl
cli
ret
mov
or
xor
jle
cli
lahf
popa
pop
pop
cmp
lods
pop
rorl
mov
or
jb
rorl
nop
adcl
test
mov
jbe
or
push
jmp
sbb
add
ret
jmp
leave
push
inc
sarl
ret
mov
shl
roll
mov
sahf
cld
xchg
push
mov
jg
lea
ret
jo
push
jg
mov
ljmp
adc
and
jbe
jno
dec
jb
adc
std
jb
jns
and
jg
mov
rcrl
fwait
icebp
fdivr
icebp
out
fistl
sbb
cltd
imul
xchg
lock
pop
pusha
aas
cs
sub
sbb
sub
xor
test
mov
xor
push
inc
cmp
adc
sahf
inc
and
push
pushf
roll
adc
stos
sbb
add
fidivs
iret
imul
ss
push
pop
and
adc
pop
out
cmc
imul
gs
jbe
repz
enter
dec
jg
aaa
mov
pop
clc
in
imul
or
and
dec
bound
inc
sahf
fistl
xlat
data16
es
cmpsl
fsubr
les
in
add
popa
sahf
cmc
pop
ss
fbstp
in
mov
pop
out
jl
add
push
dec
shll
push
inc
ja
cmpsb
dec
pop
lret
cwtl
mov
subl
push
sbb
aas
ficompl
dec
dec
lock
shlb
sahf
mov
push
adc
mov
into
sti
or
imul
jne
mov
inc
test
rorl
outsl
or
mov
fisttps
pop
mov
xchg
sbb
sub
lcall
xchg
ja
fstpl
test
in
push
xchg
cmc
lds
and
lods
adc
pop
scas
iret
int3
jne
bnd
fwait
ret
lock
lock
mov
lret
adc
iret
aaa
mov
cmp
icebp
and
inc
mov
inc
jg
sahf
cmc
scas
xlat
mov
xchg
xchg
addr16
ja
inc
cs
ds
dec
aaa
pop
pop
outsb
pop
jle
mov
sahf
scas
xlat
mov
xchg
xchg
addr16
ja
inc
cs
ds
dec
aaa
pop
pop
outsb
pop
jle
mov
sahf
scas
xlat
mov
xchg
xchg
addr16
ja
inc
cs
ds
dec
aaa
pop
pop
outsb
pop
jle
mov
sahf
scas
xlat
mov
xchg
xchg
ds
ja
in
cs
dec
push
mov
adcl
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
pushf
adcl
movsl
ret
fcompl
sbb
sbb
insb
dec
repz
sub
lret
lods
int3
mov
pushf
in
mov
mov
and
or
sbb
push
or
pop
lds
hlt
test
aam
pop
sub
pop
adc
imul
ds
xor
cmp
and
cmp
cmpsl
divb
push
mov
and
cld
test
int3
pop
pushf
jae
dec
xor
xchg
shll
jecxz
or
and
mov
int3
xlat
mov
cs
shlb
xlat
scas
pushl
sub
xchg
jecxz
leave
dec
lds
repnz
jae
iret
mov
mov
and
jl
xor
jl
lds
xor
jae
call
lods
les
imul
or
fnstcw
int3
enter
push
and
pop
pop
int
mov
rep
jecxz
inc
sbb
fmull
pop
sbb
int3
lods
cld
xchg
sti
pushf
mov
xchg
cld
mov
sub
and
adc
adc
cmp
xor
into
cltd
jmp
loope
mov
inc
dec
cmp
or
jns
or
pop
and
fadd
int3
aad
out
repz
mov
dec
pop
cmp
push
jns
jg
dec
sub
mov
mov
in
mov
mov
sub
cmp
or
sbb
insb
or
cmp
sub
fsubrl
pushf
pushf
in
mov
mov
sub
cmp
or
sbb
insb
or
cmp
sub
fsubrl
sahf
mov
mov
ret
jb
aas
rolb
mov
jmp
jmp
add
scas
pop
jge
adc
sbb
lods
inc
xor
dec
icebp
jp
jo
out
jle
cmp
inc
imul
pop
mov
rcll
cmp
push
cmp
shlb
cmp
hlt
inc
movsb
sti
shl
jno
push
and
and
and
mov
outsb
sbb
fcomps
fnstcw
add
push
adc
pop
push
js
stc
mov
pop
xor
xor
popf
xor
add
je
jecxz
lret
movsl
cmp
cmpsb
add
ret
call
cmp
adc
add
shl
std
push
cmc
sub
stos
pop
pop
aas
sahf
fbld
cmpsl
xchg
insl
pop
mov
mov
mov
cmp
add
fnstsw
mov
cmp
inc
pop
jns
lret
repz
out
adc
pop
mov
add
cli
in
jecxz
pop
push
out
adc
xchg
nop
jmp
pop
ja
jno
mov
leave
loope
fs
ja
movsb
mov
ja
arpl
lret
push
das
mov
test
out
xchg
neg
cmp
inc
jb
pop
in
sti
out
mov
lret
mov
imul
mov
out
mov
das
mov
sub
and
xor
dec
cmpsl
sbb
cli
adc
pushf
imul
arpl
out
stos
mov
roll
pop
xchg
jae
cmp
cli
mov
cmp
add
and
hlt
and
sub
mov
hlt
in
xchg
sbb
ljmp
push
aad
pop
iret
int3
xchg
addr16
mov
push
inc
xchg
mov
cmpsl
xor
jnp
dec
xor
mov
cmp
fcmove
in
in
pop
xchg
sub
pop
dec
and
cmp
lods
dec
test
popa
dec
mov
or
ret
sbb
xorb
or
mov
ret
les
pushf
shll
mov
loop
mov
in
fimull
sbb
cmp
lea
adcl
pop
pop
inc
das
lods
dec
daa
xchg
mov
pop
jne
shlb
xchg
mov
outsl
mov
scas
fsub
sti
fnsave
scas
xlat
pop
cld
jb
cmp
icebp
arpl
shlb
fstl
mov
mov
ret
sub
test
stc
xchg
mov
pop
scas
push
push
mov
mov
lods
loopne
ljmp
mov
inc
push
jp
adc
lock
insl
and
jg
jg
mov
adc
je
mov
mov
dec
enter
mov
add
subl
out
stos
sbbl
jge
jne
cmp
cmpl
data16
shlb
pop
dec
stos
ret
or
push
jb
pop
js
push
loope
cmp
mov
jns
frstor
rclb
jbe
sbb
xchg
jnp
add
lds
and
dec
int
aaa
mov
mov
pop
inc
pop
cmp
dec
pop
inc
sub
cmp
mov
mov
dec
rolb
bound
lahf
mov
test
movsl
enter
mov
aad
aam
mov
adc
add
jg
in
repz
repz
int3
cmp
inc
xchg
mov
js
xor
call
adc
add
dec
mov
sbb
push
dec
jmp
xor
sub
pop
std
mov
mov
pusha
data16
dec
sahf
and
addl
lret
lds
fcompl
das
cltd
ret
ljmp
pop
cwtl
mov
mov
mov
call
stos
mov
pop
adc
mov
pop
fdiv
pop
out
arpl
fistpll
das
insl
or
in
ret
mov
fwait
popl
xlat
movsl
dec
jno
rclb
cmpsb
popa
loop
mov
jg
out
dec
sub
test
iret
inc
out
push
mov
repz
mov
mov
cltd
sub
xor
loope
ljmp
xor
ss
cltd
push
clc
cmp
push
lret
mov
mov
push
jmp
push
jnp
inc
mov
out
in
mov
pop
mov
stc
arpl
pop
mov
push
cmp
add
test
test
and
cwtl
xchg
outsb
stos
dec
out
cmc
movq
aaa
sub
popa
push
pop
or
mov
jnp
gs
mov
xchg
gs
in
leave
dec
push
lcall
and
xlat
pop
in
xchg
push
das
imul
out
xor
pop
mov
xchg
pop
jbe
in
fbstp
cmp
aad
js
loopw
cmpb
and
imul
dec
sub
sub
sbb
mov
or
clc
popa
loopne
dec
sub
inc
int
in
movsl
and
in
rol
push
pop
pop
fwait
jecxz
add
test
and
and
es
cli
adcb
mov
orl
rorl
sbb
dec
or
repz
pop
add
icebp
fidivs
jbe
outsb
loop
dec
aas
add
jns
cli
push
jmp
push
in
mov
dec
lock
inc
xor
sbb
dec
jg
fdivrl
nop
in
mov
scas
ret
or
push
packssdw
mov
mov
mov
jns
mov
stc
mov
sub
jns
xchg
aam
leave
test
in
das
push
lock
fimuls
adc
sub
ret
dec
xchg
je
je
test
and
or
bound
xchg
sbb
stos
repz
sub
fbld
sub
xchg
pop
sbb
lods
pop
push
out
clc
orb
jae
cmpsb
imul
jp
or
sub
shlw
sti
jle
fucomip
inc
loopne
and
mov
push
leave
inc
cmpsl
pop
cmpsl
sub
imul
int3
scas
push
mov
jg
push
adc
xor
in
mov
dec
jb
call
push
dec
jo
and
std
into
lods
movsb
push
lcall
pop
fmull
sbb
jmp
loopne
shl
push
sbb
cli
push
pop
lea
sub
cmc
jp
nop
xchg
in
push
xor
test
jae
cmpb
jl
loope
into
xor
test
or
or
or
ret
adc
add
push
out
outsb
xchg
dec
loope
fldenv
cmp
test
lret
xchg
daa
jns
sub
add
jmp
outsb
dec
fdivs
mov
add
sbb
mov
xlat
and
imul
scas
repnz
ds
push
icebp
add
lock
test
xchg
loop
push
test
nop
adcl
sbb
sbb
mov
cmp
jae
mov
test
sti
fisubrs
push
lcall
cltd
loop
inc
xchg
adc
int3
lahf
fisttpll
dec
jg
or
mov
push
arpl
pop
outsb
lcall
test
ljmp
mov
sar
add
popl
ljmp
scas
dec
iret
mov
shl
pop
aad
outsb
shll
stos
inc
mov
insb
xchg
cmp
leave
cmc
and
fldl
sub
movsb
cmp
int3
fnsave
xor
inc
xchg
jb
rcrl
push
adc
pop
push
gs
int
out
cmp
aaa
pop
popl
imull
sbb
fcomip
mov
icebp
outsl
call
jae
dec
lcall
mov
mov
into
dec
inc
xor
adc
add
and
adc
jnp
das
adc
movsl
arpl
sbb
pop
add
or
dec
sub
push
aaa
mov
ret
sub
out
adc
movsl
clc
lock
cmpsl
lahf
jg
jp
push
xorl
inc
jbe
xor
and
xchg
test
push
cmp
ja
inc
xchg
adc
jo
shlb
sub
dec
cmp
xor
dec
les
sbb
cmp
lcall
daa
inc
pusha
lcall
dec
jle
xor
lods
daa
daa
mov
push
and
xchg
sub
scas
mov
fisubrl
push
sbb
ds
stc
push
inc
int3
in
and
push
jmp
in
fsubl
adc
imul
rcr
xchg
scas
mov
xor
push
ja
xor
pop
adc
inc
test
sbb
icebp
dec
xor
pop
pushf
sub
add
insb
push
in
addr16
dec
add
xor
jg,pn
push
clc
loope
add
stos
bound
mov
fs
fldt
adc
mov
sub
jnp
xor
cmp
add
loope
movsl
push
xor
repz
xor
adc
push
jbe
aam
xchg
addl
insb
jmp
jns
dec
sbb
std
mov
ret
mov
jg
xchg
mov
and
push
shrb
adc
push
and
mov
lock
je
out
pop
dec
push
pop
mov
sub
jno
movsb
push
or
xchg
das
scas
cmp
add
push
sarb
cmpps
sub
mov
adc
xor
inc
mov
pop
xchg
and
adc
sbb
test
adc
lods
adc
pop
xchg
push
xchg
jp
hlt
mov
push
pop
arpl
and
out
push
mov
popf
mov
fisttpll
dec
lret
xchg
adc
add
cmpsb
xlat
fldl
popa
rcrb
cwtl
andb
xor
cmp
sbb
mov
sbb
ret
xor
test
add
mov
out
xchg
scas
mull
xchg
jmp
mov
jmp
fnsave
sbb
cltd
bt
orb
es
mov
in
and
jns
mov
fsubs
pop
cli
rcr
push
test
cmp
push
jg
repnz
loop
shll
add
sub
test
and
xchg
insb
cld
movsb
pop
iret
sbb
inc
adc
data16
sub
xchg
sub
and
inc
pop
push
mov
ret
dec
dec
mov
lcall
jg
xchg
xchg
mov
stos
pop
cmp
inc
dec
mov
xlat
push
mov
scas
shll
subl
adc
mov
add
cli
dec
pop
shl
sub
or
out
mov
imul
pop
xor
xor
mov
fwait
xor
lcall
mov
aas
xor
sub
jge
jns
fcmovne
fldt
and
mov
mov
mov
xchg
test
push
or
mov
rorb
adc
xor
sahf
jp
fdivrs
decb
mov
adc
jg
fwait
inc
add
je,pt
xchg
dec
dec
mov
mov
jmp
mov
test
mov
daa
in
in
sub
ret
insl
pop
out
mov
data16
adc
cli
mov
adc
xchg
adc
inc
jmp
jl
dec
outsl
roll
cmpsl
or
es
lock
ficompl
imulb
sub
xor
fmuls
jmp
dec
outsl
cmpsb
adc
jno
mov
fnsave
ror
lods
ljmp
mov
call
mov
push
jno
cmc
jle
adc
jno
decl
pusha
mov
jle
mov
in
inc
aaa
adc
das
adc
xchg
xchg
inc
stos
or
cs
imul
xor
mov
mov
fcmovnu
movsb
scas
dec
jmp
cmc
mov
dec
adc
std
leave
mov
insl
bound
inc
pop
jecxz
imul
push
repnz
popa
iret
xor
inc
repnz
jbe
sbb
jno
sahf
push
sti
cmp
pop
dec
cltd
jmp
cwtl
adc
repz
lea
jmp
cs
push
sub
fisubrs
imul
leave
bound
add
and
loopne
dec
cs
push
shr
test
lods
add
repz
adc
test
add
outsl
dec
movsb
in
ja
xlat
and
and
sbb
cmp
lock
out
in
fnstsw
dec
mov
fsub
push
outsl
test
jecxz
push
inc
lahf
inc
lock
sub
movsl
lock
daa
inc
in
rcr
aaa
pop
dec
out
jmp
sarb
aam
jno
and
iret
xor
sti
mov
push
rolb
jle
nop
pop
outsl
mov
mov
mov
lahf
inc
xchg
sub
test
mov
mov
xchg
dec
mov
rcrl
mov
adc
inc
mov
aas
mov
stos
mov
outsb
test
stos
repnz
lret
ficompl
ror
jp
jmp
lea
jge
pop
cmp
lods
out
test
mov
icebp
adc
cmp
xchg
shll
jno
adc
clc
or
or
jl
sbb
xlat
jl
insl
sbb
fistl
mov
out
repnz
pop
mov
sub
fnsave
jne
sbb
test
sub
cwtl
sub
xchg
lea
icebp
xlat
sbbb
sub
pop
inc
jne
sub
cmp
jl
ja
push
subl
andb
cwtl
lcall
mov
test
jno
jl
adc
push
ljmp
in
enter
fisubl
out
fwait
xor
dec
sub
aaa
int
movlps
sbb
aas
leave
pop
cmpsl
dec
pop
lahf
stos
xchg
jecxz
jno
addr16
ret
sub
adc
popa
cmp
fimuls
cmp
fnstcw
andb
adc
hlt
int
inc
sub
loopne
mov
add
jge
test
ljmp
ret
xchg
push
in
mov
inc
fistpl
sbb
jecxz
and
push
leave
lret
rcll
lret
mov
mov
pop
dec
enter
out
xchg
jg
pop
xor
leave
lea
addr16
dec
test
pop
call
gs
mov
mov
push
push
scas
imul
jno
cltd
cmp
rcr
and
popa
rolb
loope
xchg
xchg
inc
xchg
dec
mov
imul
cmp
insb
cld
test
pushf
push
lea
pop
outsb
incb
jnp
lcall
or
mov
sti
hlt
pusha
movb
add
xchg
les
adc
xchg
faddp
inc
sbb
or
sub
scas
jecxz
jns
and
movsb
outsl
dec
mov
cli
mov
push
test
in
sub
xchg
xor
into
in
inc
shlb
pop
imul
jecxz
daa
lds
pop
mov
pop
sub
xorl
jge
popf
xor
inc
pop
test
cmp
inc
mov
or
dec
inc
adcl
mov
dec
push
lret
mov
cmovne
xor
or
push
inc
test
dec
xor
push
push
pop
out
mov
pusha
adc
fdivl
hlt
rorb
cmpsb
into
push
mov
mov
and
adc
pop
mov
sbb
je
sbb
xor
stos
xchg
inc
ror
inc
mov
or
scas
arpl
sbb
xorb
lcall
mov
mov
adc
cmpsb
push
push
aam
loop
jle
fistpl
pop
aam
cmp
out
jo
sub
lock
lods
cmp
test
ljmp
in
scas
inc
cli
push
and
js
repz
add
data16
aaa
sbb
mov
dec
out
aas
cwtl
pop
sbb
mov
xchg
pop
pop
xor
call
ficoms
scas
test
loop
mov
or
cltd
std
pop
dec
cmpsl
incb
xor
hlt
jns
push
aas
mov
add
je
mov
adc
adc
dec
popf
mov
je
push
jg
mov
sub
mov
cmp
push
addb
das
movsl
push
or
insb
pushf
mov
mov
stos
push
incb
pushf
pop
mov
adc
sub
push
stc
out
jne
das
mov
cmp
jb
xchg
in
pop
out
js
mov
leave
clc
loope
jno
pop
mov
push
xchg
imul
xor
div
cmpsb
jne
mov
rol
jle
pop
arpl
iret
jno
push
mov
les
sbb
push
adc
iret
push
add
push
or
dec
xor
movsl
pop
enter
cmp
sbb
jecxz
fsubs
mov
mov
adc
cmp
rcr
xorb
sub
mov
xchg
push
ret
dec
add
fistpl
cmc
out
mov
mov
pop
xor
xor
not
frstor
into
imul
iret
lret
decb
imul
jo
fs
pop
push
mov
pavgb
xchg
out
and
push
push
mov
das
jg
adc
sbb
cmp
sbb
pop
xchg
lods
cwtl
cmp
xchg
jnp
sarl
aaa
or
and
daa
dec
xchg
loope
jne
out
jne
pop
pushf
cmp
jecxz
movsb
dec
xor
int
mov
lret
insl
xchg
sbb
in
sti
fcmovnbe
pop
cmp
fldt
js
mov
sbb
ja
dec
inc
arpl
ret
out
fs
scas
aad
adc
xchg
pop
or
test
lea
xorb
lock
jp
stos
mov
cmpsb
fwait
and
cmp
rorb
dec
enter
inc
insb
jmp
out
sub
in
or
jo
orl
je
std
sbb
or
test
mov
xor
lods
enter
lods
add
jge
adc
loopne
mov
es
ljmp
test
cmc
or
popf
sahf
inc
int
mov
aad
test
ljmp
inc
mov
adc
mov
out
cli
xchg
pop
dec
je
push
inc
cwtl
jmp
mov
mov
inc
std
movsl
ret
cmp
ljmp
adc
movsb
pop
mov
push
stos
fstl
movsb
push
mov
adc
sbbb
enter
movsl
or
dec
fnstcw
ds
sbb
adc
je
mov
sbb
ja
mov
adc
pop
jb
jnp
dec
add
out
push
mov
test
cld
pop
mov
movsb
out
shll
test
mov
inc
fs
mov
push
cmp
insl
and
fwait
nop
bound
movsb
insb
inc
mov
test
xor
fiaddl
sti
pop
aaa
jmp
call
adc
aam
sub
or
mov
mov
push
fucomp
mov
push
push
jns
test
subl
test
scas
xchg
push
pop
inc
pop
mov
xlat
add
cli
mov
pop
fcompl
inc
dec
adc
inc
insb
pop
lds
loopne
sbb
shlb
ljmp
arpl
mov
pop
mov
and
add
sbb
addr16
dec
lods
add
lret
int
dec
fldt
test
xchg
jmp
cs
xchg
dec
adc
fucomi
in
fiaddl
push
mov
shl
dec
and
adc
and
loopne
mov
push
sar
and
lret
cmp
data16
adc
pop
jp
xchg
mov
out
inc
addr16
add
push
stc
add
popf
mov
xchg
adc
xor
sbb
dec
pop
das
fdivrp
into
mov
jle
loop
in
lods
mov
mov
mov
lret
pop
push
jle
leave
fnstcw
mov
sub
mov
in
stc
xchg
lcall
roll
dec
mov
adc
insl
sbb
insl
sbb
daa
lret
xor
aam
aas
iret
cmp
sbb
add
pop
lret
fs
rclb
add
aam
stc
enter
sub
inc
or
mov
dec
push
daa
into
pop
mov
das
testl
in
mov
nop
xchg
xchg
add
pop
add
lods
mov
sarb
adc
scas
ds
ffreep
xor
inc
sarb
dec
xor
iret
mov
ja
clc
jmp
mov
fucomp
cmp
mov
and
iret
into
test
adc
mov
mov
sub
pushf
lahf
divl
push
sbb
arpl
pop
xchg
iret
sbb
lahf
leave
cmc
loopne
inc
lret
dec
imul
popf
jo
and
aam
es
add
test
cmp
pop
clc
cmp
rcrl
ficomps
je
jmp
xor
and
imul
aad
fmul
lahf
aaa
mov
shl
inc
add
or
outsb
sub
pop
fs
outsb
or
pop
push
cmp
push
pop
add
sbb
push
or
in
pushf
pushf
in
mov
mov
sub
cmp
or
sbb
insb
or
cmp
sub
fsubrl
pushf
pushf
in
mov
mov
sub
cmp
or
sbb
insb
or
cmp
sub
fsubrl
pushf
pushf
in
mov
mov
sub
cmp
or
sbb
or
sbb
mov
pushf
in
mov
cmp
sub
mov
or
imul
add
xor
and
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fmuls
mov
cld
das
in
in
outsl
in
sbb
cwtl
popl
dec
scas
insb
ficomps
into
loope
cmp
sub
fmull
int3
ds
das
in
pop
pushf
dec
mov
outsl
sbbb
scas
insb
fbstp
iret
or
cmp
sub
jp
or
data16
lcall
outsl
sahf
lahf
pop
outsl
ficomps
cmpsb
push
dec
orb
jge
aam
outsl
jne
aas
pop
insl
push
xlat
mov
rol
pop
add
filds
adc
inc
pop
cmc
inc
sbb
mov
and
or
push
divl
push
xchg
xor
lds
dec
sbb
lahf
pop
fistps
push
xchg
popa
out
jl
stos
jmp
fmull
int3
pop
clc
ret
in
pop
mov
lahf
jl
and
addl
or
loop
lock
adc
jge
push
idivl
sbb
pushf
scas
pushf
mov
sbb
adc
mov
stos
cmp
roll
lods
pusha
mulps
stos
and
stos
je
dec
shr
inc
inc
push
paddsb
mov
in
pop
pushf
dec
mov
outsl
ds
pop
in
jle
push
fbld
iret
loop
and
push
imul
mov
sbb
sub
cmp
or
negl
cmp
bts
arpl
lcall
cmp
sub
jg
pop
lahf
int
loop
cs
push
mov
pop
imul
dec
mov
outsl
lods
lahf
pop
dec
mov
sbb
or
cmp
sub
fmull
int3
aas
cld
das
in
pop
pushf
dec
mov
outsl
lods
lahf
pop
dec
mov
sbb
or
cmp
sub
fmull
lcall
inc
test
adc
ss
repnz
fdivrp
cwtl
mov
fs
pop
test
bound
and
insl
sbb
mov
daa
inc
push
or
iret
push
lds
in
jp
push
adc
rolb
jnp
lret
xchg
xor
outsb
fs
int3
pusha
inc
mov
push
pop
test
negw
cld
mov
adc
adc
sub
jmp
test
rcl
xchg
inc
fucomi
loopne
adc
sarl
pop
fstp
jnp
sbb
movsl
insb
out
mov
push
mov
adc
js
ja
pop
push
sbb
imul
testl
ret
push
push
xchg
jl
ss
xchg
push
mov
adc
lret
inc
pop
cmp
dec
jg
cmp
std
inc
or
je
or
leave
inc
and
jmp
stc
or
sbb
dec
jne
and
jno
mov
push
jb
push
rcll
jmp
mov
out
pop
jmp
lret
or
cmp
xorl
adc
add
pop
mov
aaa
pop
mov
cmpsl
stc
out
shll
xor
lret
insl
lea
jle
in
add
adc
imul
jns
ljmp
aad
in
push
cmp
fnstcw
sbb
inc
add
sub
add
inc
ret
dec
or
mov
or
jl
xchg
xchg
add
sub
int
sbb
jae
inc
int3
mov
fisttps
push
lcall
cltd
and
insl
or
and
jl
mov
ret
aaa
xchg
mov
sbb
shr
add
fcomp
inc
div
aad
enter
xlat
xorl
inc
stos
mov
dec
cmp
jne
std
es
je
xchg
inc
daa
adc
jb
mov
inc
mov
push
mov
jecxz
cs
push
cmpl
repz
movsl
push
stc
fmull
ret
dec
out
fnstsw
jbe
rcll
jnp
addr16
negl
jne
cmp
test
or
pusha
and
sub
mov
pop
bound
hlt
add
pop
scas
sti
loop
pop
jecxz
in
fstps
sbbl
sbb
sub
sub
popa
pop
jle
addr16
lods
sbb
cmp
inc
stc
aam
sub
add
jle
in
cwtl
lahf
test
pop
and
loop
cmp
mov
mov
push
loope
add
je
lock
icebp
mov
cli
into
sbb
lret
scas
mov
jl
pop
ffree
jbe
add
add
pop
fldenv
stos
cmp
push
xchg
dec
xchg
inc
dec
out
mov
mov
pop
cmp
jg
dec
mov
out
aam
adc
imul
mov
inc
ljmp
adc
cmp
jge
xor
push
adc
ljmp
jae
pop
jns
lcall
xor
mov
push
test
inc
inc
jp
call
pop
pop
push
mov
dec
inc
pop
add
je
mov
lock
push
mov
cmp
mov
or
insl
pop
adc
mov
rclb
sub
mov
lea
xchg
imul
xchg
sub
fwait
ret
mov
cltd
or
aad
add
lds
add
mov
and
and
mov
sbb
cmp
cmp
cmp
das
xor
lret
call
add
fisttpl
and
gs
jg
call
scas
int3
adc
out
or
shr
es
out
int
xchg
adc
lret
jle
enter
jge
sbb
stos
scas
adc
push
jb
fsubl
lods
mov
data16
mov
adc
cmp
popf
sbb
int3
call
sbb
sahf
data16
in
ds
xchg
call
inc
imul
dec
mov
and
leave
xor
mov
fidivs
arpl
outsb
xchg
enter
sbb
adc
adc
mov
daa
mov
push
insl
fdivrs
fldl
dec
out
push
std
cmp
iret
rcrb
cmpsb
daa
cmp
pop
and
rorl
or
rorl
mov
add
xor
mov
inc
jbe
ret
sbb
mov
mov
testb
mov
mov
adc
pop
jne
outsb
ret
pop
ret
and
push
out
push
inc
jl
outsl
out
icebp
inc
and
dec
push
clc
std
pop
shrb
shlb
aad
lods
mov
dec
adc
loopne
sub
mov
jns
orb
jno
cmp
les
fisubl
mov
jae
stos
lea
push
je
out
xchg
inc
pop
inc
sbb
adc
dec
push
or
les
pushf
popa
lret
sbb
mov
cmp
push
push
imul
ret
adc
jp
stos
ret
mov
in
loopne
sub
xlat
test
pushf
adc
inc
sub
adc
ret
addl
jnp
clc
mov
daa
xor
pop
into
push
or
in
dec
adc
bound
mov
sbb
out
pop
insl
xchg
test
cltd
sbb
and
mov
mov
popf
pop
dec
add
inc
ret
mov
push
adc
sbb
repz
fisttpll
mov
jmp
sub
dec
adc
dec
inc
sbb
hlt
stos
jecxz
mov
out
jmp
cmp
mov
sbb
sub
xor
stos
rcr
lret
mov
cmpsl
stc
fadd
mov
mov
mov
lcall
inc
in
stos
popa
stos
test
into
mov
addr16
mov
and
scas
inc
dec
and
nop
xchg
ret
push
sub
test
sbb
mov
and
mov
sarl
pusha
jg
inc
xor
cmp
mov
jmp
xchg
jbe
jmp
popf
cmp
or
lock
sub
and
ljmp
pop
jecxz
sub
mov
shrb
xor
mull
sub
data16
out
roll
lret
je
mov
fsubr
fcoml
jo
leave
or
sub
mov
and
aad
pop
pandn
mov
lret
xchg
xor
rolb
inc
jno
pop
mov
scas
sub
pop
je
pop
or
lock
mov
dec
jnp
roll
cmpsl
fidivrl
adc
xlat
jo
xchg
add
in
jae
mov
jb
pushf
scas
pop
adc
add
int3
ljmp
lock
sbb
lret
movsb
pop
sub
cmp
cmp
popa
mov
test
jbe
aas
dec
ja
push
xchg
popf
testb
mov
loopne
sub
cli
loope
push
out
std
add
jb
fcoml
or
jno
rorb
and
loop
call
sub
sub
sbb
movl
pop
hlt
data16
fdivl
cmpsl
jnp
xchg
test
shlb
out
mov
jmp
cmovns
or
adc
outsb
popa
scas
adc
cmp
mov
pop
daa
jno
aaa
cli
xchg
push
jae
dec
adc
sbb
add
xchg
inc
lods
data16
inc
stos
sub
mov
add
jge
xchg
xchg
inc
and
jl
shlb
xor
mov
adc
imul
and
stc
jno
out
call
xchg
dec
dec
cmp
or
lods
addb
sbb
mov
adc
sub
mov
adc
xchg
scas
stos
jl
mov
ljmp
mov
ficoms
outsb
or
imull
ds
pushf
mov
sbb
rcll
ret
sbb
mov
lea
icebp
dec
int
inc
outsb
sbb
out
push
mov
cli
sbb
and
pop
dec
in
cmp
mov
and
xlat
es
and
stos
test
mov
mov
arpl
ret
xorb
ja
out
dec
cmp
aad
test
mov
stos
mov
mov
push
sub
push
cmp
ljmp
shll
mov
sub
jp
jae
int3
rcrl
sub
mull
cmp
dec
pushf
bound
rcrb
sub
sbb
mov
or
fs
mov
outsb
jecxz
mov
test
sbb
push
jge
fisubl
dec
and
rorl
das
jge
xorl
jo
pushf
stos
aas
out
icebp
fwait
divl
int3
fcmovbe
andl
inc
or
test
iret
in
mov
cmp
les
std
xchg
pop
mov
fistl
scas
subl
or
les
mov
test
insb
imul
fsub
push
add
cli
jb
sub
push
inc
int
mov
mov
out
std
pop
or
add
loop
outsl
cmp
pushf
mov
shrb
jecxz
ret
mov
xchg
pop
leave
mov
aas
push
jge
xor
and
sti
pop
dec
dec
push
cmp
in
cmp
xchg
jae
xchg
pushf
mov
jmp
xor
push
shll
add
outsl
xchg
outsl
inc
aam
xor
inc
rclb
repz
imul
push
lcall
jmp
ds
mov
jecxz
mov
push
jmp
or
insb
gs
repz
or
mov
xchg
fwait
and
inc
sbb
scas
sub
daa
test
cli
xor
jmp
cmp
into
sti
and
or
sti
mov
cmp
aam
or
add
test
mov
stos
arpl
lret
fldl2e
xchg
das
psubd
addr16
cmp
loopne
addb
fldl
mov
sbb
add
push
aam
push
mov
mov
rorb
xchg
push
jge
sub
int3
leave
cmc
mov
sub
movsb
fwait
jb
cmovns
sahf
sbb
call
push
add
cmp
add
scas
sbb
inc
in
scas
dec
xchg
jle
mov
inc
adc
xchg
aam
loopne
call
in
adc
pop
scas
mov
std
lds
movsb
enter
jle
push
test
or
dec
or
movl
jle
iret
movsb
push
mov
pushf
mov
stc
bound
mov
not
arpl
aaa
cmc
adc
mov
xor
lea
in
fildl
cwtl
pop
xlat
mov
insb
or
movsl
sbb
std
mov
dec
dec
adc
add
leave
pop
inc
xchg
push
jns
mulb
out
shr
push
push
lfs
cld
inc
lds
cmp
andl
cmp
cltd
and
cmp
jmp
cmp
in
and
dec
push
stos
gs
arpl
ret
cmpsb
pop
sub
nop
cwtl
push
iret
addr16
jmp
stos
loop
movl
or
test
int
mov
mov
mov
sahf
divl
xor
enter
int
mov
sti
xlat
sbb
cmp
push
daa
scas
xchg
dec
xchg
xor
cwtl
dec
mov
dec
loope
sub
jmp
xor
repnz
inc
and
mov
lret
stc
xor
lahf
clc
cltd
mov
or
out
mov
in
out
mov
jne
dec
arpl
stos
ds
test
xchg
insb
adc
sbb
je
ret
gs
cs
xchg
mov
xor
iret
jp
fs
std
movsl
sti
clc
je
fidivrl
mov
imul
mov
jo
nop
sub
daa
jecxz
xchg
or
jno
ja
inc
inc
adcb
lods
cmp
or
push
jp
sbb
sub
xchg
mov
dec
mov
mov
mul
sbb
jle
adc
pop
ret
mov
xor
lods
sub
aaa
aaa
fnsave
cmp
jae
rcrl
ret
or
std
cld
push
faddl
mov
pop
mov
scas
lods
mulps
or
loope
movsl
imul
sub
rcrl
push
test
inc
xchg
divb
out
sbb
push
push
sbb
test
test
addl
repz
rorb
push
leave
negl
cmp
int
cmpsb
loopne
jecxz
pop
imul
cli
aad
mov
jge
popf
inc
addl
adc
pop
mov
ss
xlat
enter
and
sbb
cmc
jae
repz
popf
jb
xlat
insb
pusha
call
inc
push
testl
push
adc
es
jge
cmpsl
inc
push
mov
aaa
or
shl
scas
xor
stos
mov
push
out
mov
sub
mov
mov
scas
sbb
sub
test
jo
cltd
mov
jb
pop
fnstenv
vmwrite
pop
hlt
ret
mov
or
mov
xchg
imul
add
in
lds
sti
scas
test
lock
sbb
loop
mov
arpl
mov
push
std
pop
shl
lods
ss
cld
mov
inc
xchg
inc
or
fsubp
cmp
mov
mov
mov
lea
fucomp
inc
lahf
push
stos
repnz
jmp
sbb
aaa
pop
cmp
add
cli
mov
div
xchg
les
jle
aam
dec
mov
enter
vunpckhpd
fcoms
and
pop
daa
ljmp
outsl
xor
cltd
es
dec
movsl
and
pop
stos
mov
sbb
inc
pop
clc
data16
lret
lahf
arpl
ret
orl
and
in
dec
push
mov
xor
cmpsb
ffree
xchg
rcrl
and
cmp
nop
jle
jb
and
scas
add
jmp
fs
cmp
dec
jg
cs
dec
xor
push
or
mov
jg
mov
jo
dec
js
call
imul
je
sarl
add
mov
sbb
shlb
js
mov
inc
outsl
out
roll
jb
mov
imul
mov
inc
dec
rorl
add
aam
add
or
out
aas
scas
inc
inc
lret
ficompl
rclb
jnp
mov
cmpsb
push
fwait
fwait
jl
sarl
gs
scas
nop
pop
mov
aad
icebp
cmp
lock
popf
xchg
mov
scas
xchg
push
push
hlt
xor
add
and
dec
mov
sti
shll
mov
dec
movsl
lods
fstl
add
cld
push
rclb
lods
fwait
test
pop
testb
xor
inc
xor
not
popa
mov
mov
mov
or
add
push
xlat
ret
mov
out
sub
lret
minps
insb
imul
dec
dec
pop
adc
jge
rorl
push
jbe
cmp
mov
push
ss
and
jl
add
pop
in
cli
into
lds
in
in
std
popa
dec
pusha
jne
ljmp
mov
mov
fwait
nop
ds
repnz
mov
test
push
pop
pop
out
test
sti
jae
std
push
gs
fwait
pushf
or
mov
sti
push
sbb
pop
lea
and
mov
aaa
dec
popa
jg
or
mov
jne
ficoml
mov
loop
jmp
int3
fisttpll
inc
mov
sahf
add
mov
cld
push
addr16
adc
cmp
xchg
cmp
mov
loop
daa
xchg
mov
out
inc
leave
out
je
pop
shr
pop
mov
sarl
sbb
lea
push
sub
dec
or
fdivrl
loop
pop
fdivs
cmpsb
scas
sub
mov
sbb
xchg
xor
sarl
mov
in
mov
mov
inc
hlt
jbe
cmc
mov
pop
cmp
xchg
loop
push
pop
sub
fidivs
or
adc
cmp
mov
pop
orb
fcoml
mov
insb
loop
nop
stos
pop
cmpsl
push
jb
cld
pop
cmp
mov
repnz
mov
scas
inc
push
mov
incb
insb
adc
popa
push
pop
mov
fwait
add
xor
dec
rcrl
xchg
rcll
add
or
adc
shll
sbb
mov
push
xchg
push
mov
cmp
sbb
dec
inc
out
cmpsb
shrl
push
jnp
push
arpl
nop
ja
push
ret
mov
jb
push
das
dec
cmpb
add
mov
icebp
add
xor
lock
pusha
das
pop
cmp
or
lgs
add
push
movsl
arpl
jmp
test
xchg
cmp
jp
hlt
dec
sbb
xlat
lea
insb
pushf
sbb
sbb
dec
mov
bound
cmp
mov
pop
inc
stc
adc
fcoml
xor
pop
das
popa
fwait
sbb
lds
adc
lret
aaa
jbe
push
cmp
pop
sub
int3
xchg
mov
or
orb
aaa
les
loopne
dec
lds
adc
add
pop
and
adc
loop
jle
lahf
stos
mov
inc
dec
shrl
and
push
mov
data16
push
and
pop
inc
sub
je
pop
jmp
jle
orl
push
scas
test
dec
sub
dec
mov
add
aad
or
mov
adc
cld
mov
cld
jle
shlb
sbb
cmp
inc
adc
daa
push
cmp
xchg
jae
gs
or
sub
jns
int
ffreep
cs
scas
inc
outsl
ret
aas
cmpsb
xor
nop
push
adc
xor
fldcw
imul
movsl
mov
fst
iret
cmp
pop
mov
cmpsb
mov
add
lods
sbb
cmp
push
dec
pop
xchg
pop
xchg
mov
xchg
cld
push
gs
jcxz
xchg
faddl
add
aad
leave
xchg
dec
es
add
lahf
mov
inc
push
xchg
aad
test
cld
nop
ds
pop
xor
cmp
fsubrp
push
cmp
fdivrl
dec
pop
add
sahf
cmp
dec
add
add
hlt
sbb
cmp
mov
ds
cltd
mov
ror
dec
sub
push
cmp
sbb
into
mov
aad
jne
push
dec
jne
sbbb
sbb
pop
filds
decl
pop
push
leave
call
mov
mov
or
dec
inc
jmp
mov
add
xchg
pop
test
je
pusha
rolb
jle
jb
cwtl
sbb
push
cmpsw
pop
dec
lds
ret
adc
xchg
sbb
ret
clc
fmul
loopne
loopne
and
hlt
out
jl
pshufw
andl
and
xchg
or
out
push
xor
test
lds
cmp
jno
rol
stos
fsub
shl
icebp
test
push
jg
push
jmp
and
dec
sbb
cmp
xchg
or
fisubrs
ret
mov
inc
mov
push
jg
out
pop
jmp
daa
xchg
push
ljmp
aad
inc
inc
ret
scas
dec
imul
and
iret
inc
scas
subb
mov
popa
push
stos
insl
dec
int3
nop
pop
fnsave
jmp
xchg
out
jne
dec
adc
ret
push
cmpsl
xchg
sub
adc
rol
xor
stos
push
lret
repnz
xchg
bound
aad
pusha
jbe
lahf
lods
ja
fimull
ss
xor
mov
xor
or
or
aas
rclb
adc
mov
or
mov
insl
inc
cmp
push
add
shll
pop
mov
mov
lret
stc
ja
mov
mov
ljmp
bound
fs
jne
cld
test
add
movhps
imul
push
daa
enter
lods
bound
test
cwtl
fstps
adc
jl
das
ja
test
mov
in
mov
and
sbb
icebp
adc
cmp
repz
sub
sbb
enter
cltd
out
cmpsb
mov
adc
and
pop
dec
popa
shlb
push
stc
or
jge
sub
and
lcall
pop
adc
mov
sbb
dec
push
jmp
cmp
and
jbe
inc
lods
imul
push
jbe
jle
push
jb
leave
test
roll
popf
mov
mov
sbb
pop
mov
jecxz
es
sub
in
push
es
add
push
dec
aad
mov
add
stos
push
sub
mov
cmp
xor
sbb
daa
xchg
clc
fwait
shr
pop
xor
shlw
adc
shr
sub
shl
lods
loopne
mov
in
pop
ret
inc
mov
jo
lret
adcl
push
cmp
mov
in
pushf
loop
xchg
pop
movsb
sub
lret
dec
and
stc
das
in
pop
pushf
dec
mov
outsl
lods
lahf
pop
dec
mov
sbb
or
cmp
sub
fmull
int3
aas
cld
das
in
pop
pushf
dec
mov
outsl
lods
lahf
pop
dec
mov
sbb
or
cmp
sub
fmuls
ret
das
call
jg
outsl
lods
lahf
pop
scas
fistps
iret
or
xor
push
sub
sbb
lods
pop
pushf
dec
mov
outsl
insb
lahf
mov
scas
sbb
inc
adc
sarb
ss
lcall
push
cmp
jb
add
jns
dec
xor
stos
sarb
sub
ja
lret
mov
push
sub
bound
jl
add
jnp
or
pop
fstpt
lret
mov
fwait
xlat
mov
mov
hlt
jno
cmp
cmp
adc
gs
stos
stos
mov
into
rcr
xchg
jo
xlat
jne
les
test
pop
or
add
lcall
pop
daa
mov
cltd
push
jnp
sahf
arpl
and
cmp
xchg
mov
inc
mov
jb
adc
xchg
xchg
add
jnp
mov
dec
ret
imul
sub
xchg
xchg
pop
xor
imul
out
push
test
mov
adc
jge
mov
inc
js
sub
sbbb
cmp
jp
pop
and
lcall
push
mov
push
pop
hlt
and
inc
push
test
dec
xor
or
repnz
xchg
jmp
sti
mov
lods
dec
std
jp
imul
or
scas
stc
mov
xchg
xchg
out
mov
jle,pt
jg
jb
add
or
lods
out
mov
ljmp
mov
dec
aaa
insl
bound
jl
cmp
push
sub
cmpsl
std
mov
clc
lret
sti
mov
sub
bound
jb
add
jnp
dec
xor
stos
sarb
sub
sti
mov
sub
bound
jb
add
jnp
dec
xor
stos
std
insb
pop
sub
fsubs
jmp
push
mov
mov
or
push
pop
clc
outsb
je
jae
mov
inc
outsl
jecxz
insl
movsl
jge
jmp
fsubrs
cmp
mov
cmp
stos
lods
sub
aaa
pop
sub
aas
mov
out
adc
enter
jmp
cmp
imul
js
jno
lcall
mov
sub
pushf
push
push
or
fwait
andb
sbb
aas
jp
pop
fsubrl
add
scas
mov
divl
stos
push
flds
sbb
inc
pop
pop
xchg
test
test
jmp
lahf
jecxz
daa
leave
pop
bound
pop
test
xchg
mov
adc
enter
sub
sbb
rcrb
enter
xchg
adc
fisubs
inc
arpl
sub
aad
cmp
adc
xor
sbb
pop
lds
mov
cltd
outsb
xlat
sbb
push
jp
pushf
push
int3
std
insl
xchg
js
hlt
pop
pop
stos
push
test
call
jg
push
in
mov
jmp
mul
clc
inc
lahf
mov
test
into
and
imul
inc
cmc
int3
mov
out
int3
push
int3
fisubrl
xchg
mov
rolb
add
rorb
jno
jecxz
pop
cld
fimuls
adc
and
pop
fistps
jmp
xor
shrb
ljmpw
and
sub
pop
xor
imul
pop
xchg
test
cmp
pop
mov
aas
sbb
mov
inc
and
cltd
jne
jmp
push
scas
fisttps
out
roll
fs
adc
mov
mov
shl
aam
mov
xor
inc
mov
shr
jbe
loop
data16
and
fwait
add
fnsave
and
in
pushf
add
lods
iret
repnz
ja
mov
fiaddl
aaa
lock
loop
adc
les
rcrb
das
lods
repnz
push
cmp
sbb
add
jne
dec
test
scas
pop
lahf
out
gs
or
dec
out
test
and
cmp
shrb
dec
scas
add
shll
fwait
aas
sbb
jp
xor
inc
dec
ja
lods
xorb
xchg
std
lods
cltd
int
outsb
and
mov
jne
mov
pop
adc
or
xchg
cmpsl
xchg
ds
cmpsl
cmp
fwait
or
outsb
push
shl
insl
cmp
pop
out
rcrb
fistpl
adc
push
call
jo
loopne
icebp
outsb
test
adc
or
fldl
push
mov
jg
mov
ds
add
inc
or
aam
ja,pt
or
imul
sti
es
xor
fs
je
or
or
movsb
test
sahf
test
je
lds
and
mov
mov
test
or
in
cmp
mov
call
js
or
data16
fiaddl
mov
jno
mov
sbbl
je
flds
loopne
dec
ss
jno
or
push
push
leave
add
imul
aam
add
je
cs
leave
inc
hlt
movsl
sub
jo
stos
jp
and
sbb
push
dec
lret
jne
fcompl
push
jle
sahf
pop
adc
stos
popf
dec
push
loopne
mov
scas
pop
shrl
jns
pop
rcrb
or
clc
cmpsl
pop
mov
mov
push
sbb
mov
in
add
ljmp
jno
mov
mov
mov
jns
pushf
cmp
movsb
mov
sti
daa
lret
inc
les
into
jae
scas
jo
cltd
shl
js
movl
mov
push
push
jge
xchg
loope
movl
vmwrite
jb
adc
push
js
repz
jnp
mov
aaa
jb
aaa
dec
fsubrl
mov
push
std
les
sbb
xor
mov
incb
aaa
inc
ficomps
call
push
and
push
clc
inc
ret
rcrl
pop
mov
and
pop
rcll
subb
lods
loop
pop
mov
mov
stc
cmp
test
cwtl
pop
in
jae
aad
dec
mov
or
test
xlat
enter
xchg
inc
xchg
jge
adc
addl
daa
mov
add
mov
adc
jle
and
lea
jmp
jo
cmovnp
jmp
pop
push
in
sbb
std
xor
push
les
xlat
fstpl
pop
addr16
mov
cmp
insl
dec
sub
repz
ds
call
sub
push
bound
jg
cmp
adc
inc
xchg
jl
clc
sub
push
inc
pop
dec
mov
in
or
int3
dec
xchg
scas
clc
pop
dec
nop
mov
sahf
cmp
test
push
je
imul
imulb
das
jecxz
mov
lods
popa
mov
test
pop
fisubl
add
cmp
in
add
cmc
adc
incl
cltd
into
add
stos
inc
popa
fisubl
cmp
sar
add
mov
push
sahf
push
and
movsb
call
inc
or
ja
and
cmp
cmp
jmp
es
push
mov
lret
cmpsb
js
sbb
mov
xor
jb
hlt
sti
dec
idiv
push
sub
pop
inc
cs
mov
sti
push
pop
sub
xor
or
sti
clc
mov
mov
xchg
jmp
mov
jae
cs
adc
mov
es
push
loopne
daa
lea
sbb
push
inc
add
sub
sar
mov
loope
push
push
xor
xlat
dec
sbb
cmp
std
pop
mov
adc
pop
mov
adc
sbb
jbe
add
mov
into
ret
or
add
jle
sub
pop
lods
pop
add
xchg
es
push
shlb
xorb
fstpt
lahf
mov
dec
int3
jmp
inc
repz
mov
or
dec
insb
aas
popf
xchg
out
daa
ucomiss
pop
push
add
sub
mov
lods
mov
cmp
adc
jns
test
pop
lock
arpl
cmpsw
jno
jmp
outsl
push
sbb
xchg
sbb
cli
in
sahf
mul
pushf
inc
dec
test
dec
shll
arpl
mov
aaa
mov
pop
fimuls
jnp
sub
cmp
inc
leave
pushl
gs
jp
in
push
jle
jg
push
jae
mov
sbb
jbe
dec
movsb
jae
xchg
push
lcall
and
push
mov
fidivrl
dec
test
test
or
repz
dec
dec
fadds
dec
pop
adc
test
xor
in
neg
js
fcomp
pop
mov
imul
es
rclb
imul
pop
xchg
sbb
mov
xchg
mov
in
mov
sub
jb
fimull
push
andb
lea
mov
xchg
out
adc
int3
and
or
ss
je
push
inc
out
jno
fisttps
dec
in
mov
aaa
std
repz
dec
shrl
test
cmp
stos
pop
popa
out
xor
out
mov
add
stos
sub
stos
cltd
subb
int3
pop
add
dec
mov
dec
mov
in
jg
sbb
pop
adcl
fldl
mov
push
jae
cltd
stos
pop
stos
ss
push
das
sbb
mov
cmpsl
pop
mov
adc
mov
pop
jmp
clc
xor
mov
push
or
lock
ljmp
shrb
xchg
and
imul
adc
jmp
loope
mov
mov
lret
cmp
aaa
mov
sbb
pop
insb
and
inc
scas
push
add
inc
adc
fstpt
dec
inc
inc
inc
mov
sbb
mov
mov
out
cld
cmp
jle
ficoms
jno
jnp
iret
inc
fistl
iret
addr16
jne
mul
jo
adc
and
adc
mov
cwtl
xor
sub
and
ficompl
jne
enter
test
cmc
and
fdivl
fdivl
cmp
dec
fmull
xchg
xlat
rorb
lds
std
out
out
popa
repz
xchg
insl
xchg
cltd
popa
cld
movsb
xor
sub
mov
int3
fistl
push
push
xor
aas
xchg
pop
ja
sub
sbb
test
ret
jno
imul
div
vpcmpeqd
jmp
lock
in
and
mov
push
cltd
jno
dec
xor
in
fstps
jle
dec
cmp
jbe
test
test
lcall
push
xchg
out
fs
repnz
cmpsb
push
fcomp
lcall
clc
sub
jbe
add
fadd
cli
je
rcrb
cmp
inc
sub
shrl
daa
movsb
mov
add
xchg
cmp
repnz
mov
or
and
cmp
fwait
int3
repnz
rolb
xchg
cmpb
pop
adc
and
jle
inc
pop
movsb
jmp
add
or
cmp
call
pop
loopne
add
xchg
jp
cmp
add
arpl
nop
xchg
push
enter
stos
leave
arpl
sbb
push
cmpsl
lcall
mov
mov
mov
xchg
ret
pop
mov
jmp
test
stos
imul
or
sbb
and
stc
out
cld
add
jl
cmp
xchg
push
xchg
test
pop
dec
pop
xchg
sbb
imul
xchg
daa
ljmp
fcmovb
adc
sub
lcall
orb
pop
sahf
sti
outsb
ret
scas
test
fimull
scas
lds
popa
addr16
jbe
dec
out
xchg
fwait
pop
mov
sar
mov
lods
xor
les
aad
test
lock
inc
sarb
cld
push
cmp
addb
mov
ret
jle
mov
adc
cmp
xor
cmp
or
mov
ljmp
jne,pt
movsb
sub
in
vandps
inc
std
cmp
std
dec
test
sub
adcl
mov
lret
mov
lods
add
mov
cltd
ja
repnz
push
imul
jns
adc
mov
mov
jo
divb
addb
sbb
adc
nop
inc
add
sbb
ret
daa
push
cld
jmp
pop
cmp
movsl
not
ret
jp
mov
iret
iret
sub
push
mov
jnp
mov
push
mov
jmp
in
aam
mov
sbb
arpl
aad
clc
or
push
pop
in
scas
jle
lret
aad
add
jae
jnp
mov
pop
jmp
jmp
ljmp
sub
nop
dec
push
dec
ret
push
loopne
popf
pop
es
jae
push
pop
and
sarl
frndint
add
cwtl
aas
push
dec
mov
jmp
or
add
jo
ret
pop
gs
xlat
hlt
movsb
lahf
dec
or
mov
cs
aaa
cld
in
push
push
cmpsl
into
lds
popf
mov
stos
movsl
sub
mov
cmp
out
es
xchg
xchg
out
es
jb
add
ds
push
loopew
sbb
mov
arpl
mulb
test
loop
push
dec
dec
add
xor
and
imul
xchg
sub
testl
stc
add
cli
mov
cmpsl
mov
cld
jae
push
sub
ret
loope
jnp
rorl
stos
loopne
ret
sbb
mov
mov
lds
jge
mov
ss
out
jmp
pop
dec
jle
andl
shrb
cmc
pop
fsubrp
inc
imul
scas
sbb
inc
fcomps
test
out
mov
xor
mov
mov
fwait
add
pop
and
fwait
outsl
inc
push
stc
jbe
lock
clc
inc
lahf
sarl
dec
inc
xor
inc
int3
in
inc
enter
std
pop
cmp
inc
mov
jae
jge
jle
aad
pop
fs
out
into
jecxz
push
sahf
in
ret
and
push
cmpb
icebp
test
adc
xchg
das
mov
mov
dec
lods
push
test
push
sub
stos
pop
jnp
ficomps
dec
sti
movsb
lds
sub
fsubrl
ljmp
dec
push
testl
mov
mov
fidivrs
loop
into
xchg
add
notl
out
sbb
mov
pop
dec
cmp
sub
xchg
clc
mov
pop
add
pop
sbb
mov
stos
jg
das
xchg
push
push
stos
push
leave
inc
outsb
lret
or
mov
sahf
xor
jb
sub
pop
fisubl
push
fisttps
cmp
or
fcoml
outsl
ret
pop
fsubl
mov
subb
stos
adc
test
dec
xor
out
sahf
std
mov
addb
push
jl
adc
mov
bound
and
popf
sahf
fisttpll
repnz
loop
loop
ret
mov
pop
insl
or
adc
jmp
stos
xor
pop
mov
mov
adc
loope
ljmp
xor
cs
cli
add
cmp
loopne
inc
fs
outsl
outsb
call
push
mov
lds
loopne
lock
orl
mov
orl
add
sbb
cld
jae
sbb
sub
mov
cwtl
rcrb
cli
imul
and
std
pop
mov
add
mov
aad
insl
aad
rclb
or
jns
push
pusha
mov
mov
sbb
sbb
adc
jl
or
inc
cmp
inc
mov
inc
adc
das
mov
bound
std
sbb
adcl
mov
pushl
push
or
adc
stos
clc
cmp
jb
mov
sub
cli
mov
pop
pop
lret
imul
xchg
call
pop
sahf
jmp
mov
pop
dec
loopne
adc
negl
call
cmpsb
mov
sub
sbb
loopne
popf
mov
mov
loopne
jns
mov
jo
inc
dec
mov
adc
or
mov
ficompl
fldt
mov
and
daa
pusha
sbb
sub
push
mov
pusha
daa
jmp
addr16
cmp
sbb
popf
sub
mov
mov
imul
jle
inc
stc
lret
ja
dec
push
lcall
mov
mov
loop
inc
pop
xchg
rcl
rcll
xchg
std
lea
cmpsl
fcomps
mov
pop
fiadds
shl
addr16
rcr
nop
inc
xchg
lret
lahf
sub
jnp
pop
in
sbb
sbb
xchg
push
inc
lock
or
cmc
stos
dec
orb
aas
sbb
mov
push
orl
jno
sbb
inc
fstl
lods
fwait
pop
repz
fs
cltd
rcrl
push
sub
push
cld
les
mov
mov
adc
jmp
or
mov
adc
call
out
ret
leave
loop
pop
cmpsb
es
push
out
nop
jecxz
or
sub
and
sysexit
inc
in
cmp
dec
push
adc
repz
mov
pop
fimull
push
outsl
shl
inc
clc
lahf
bound
pop
les
loope
sub
inc
cmc
pop
inc
jle
mov
push
stos
xchg
pop
and
push
cs
sahf
mov
dec
inc
imul
mov
sub
ja
jle
fldenv
nop
daa
jecxz
xchg
sbb
sbb
or
clc
in
and
jns
ret
pop
xor
stos
nop
fsubrs
cmp
repz
adc
andl
daa
mov
jecxz
sarl
add
inc
xor
dec
imull
pop
dec
xchg
stos
jnp
ret
push
lods
scas
dec
mov
mov
fists
sub
fs
fadd
cli
push
push
arpl
xchg
subl
inc
movsl
add
dec
adc
popa
xchg
dec
push
mov
mov
stc
add
es
test
in
push
ja
fsubs
setl
int
inc
push
pop
lcall
shrl
stos
push
cmp
push
fdivrs
push
pusha
pop
mov
push
sub
scas
roll
dec
cmc
add
mov
fcmovbe
cwtl
repnz
fcoms
push
inc
int3
xlat
sarb
mov
fs
lods
dec
or
cmp
ficoml
jo
loope
jb
ds
xor
fidivl
aas
mov
divl
test
adc
incb
jge
add
test
pop
xchg
aas
cli
aad
xor
lds
cli
gs
loop
mov
loop
jp
jecxz
ja
xor
jne
aad
fdivr
pop
push
xchg
cmpsl
loope
fcoml
sub
test
popl
inc
mov
outsb
mov
call
push
inc
loopne
pop
sbb
loope
cmp
xor
ret
mov
daa
xchg
in
int3
ficompl
enter
pop
test
inc
fwait
mov
push
insl
sbb
push
cmp
stos
sub
loop
mov
in
mov
mov
sub
cmp
mov
pop
xchg
cltd
jae
jle
mov
in
popa
mov
dec
inc
jp
jno
lds
push
mov
sub
lret
imul
fmull
es
lcall
pop
fcmovb
pop
leave
xchg
sub
mov
dec
dec
in
call
inc
push
dec
or
mov
lock
xor
pop
adc
jo
fldt
pop
push
cmpsb
push
in
imul
pop
pop
iret
movsb
roll
cmp
shrb
mov
repz
out
mov
adc
ror
popf
or
stos
push
and
mov
mov
adc
in
lods
inc
stos
pop
test
xlat
repz
pop
insl
loope
adc
sahf
inc
mov
ds
sbb
enter
jbe
nop
lret
push
dec
adc
lret
daa
outsb
mov
test
fldl
decl
enter
lea
xor
xchg
daa
adc
shrl
xchg
dec
dec
movsl
iret
dec
mov
add
cmpsl
dec
mov
xchg
lcall
orb
test
add
jo
out
fs
mov
sub
fcomps
cs
inc
mov
test
cmpsb
mov
sbb
clc
loopne
xchg
push
xor
scas
jmp
mov
dec
jo
mov
movsl
cs
mov
enter
cmp
push
adc
xchg
sbb
test
in
imul
push
imull
adc
mov
add
scas
insb
add
sbbl
sahf
sub
mov
sbbb
xchg
ds
scas
and
or
sub
loope
sbb
sub
icebp
test
aas
les
pop
xchg
int3
inc
repnz
cmpsb
sbb
dec
mov
repnz
repz
stos
mov
jmp
mov
pop
outsb
out
mov
lea
sub
xor
jo
sbb
push
xor
mov
jl
imul
rcll
pop
cmp
sbb
sbb
inc
pop
fcmovbe
repz
mov
lods
lods
stos
push
pop
and
inc
sarb
jp
test
fcomip
sbb
pop
push
sarl
cmpl
fstps
popf
test
imul
xchg
pop
nop
out
loope
int
xlat
adc
js
cld
jae
mov
and
loopne
jp
arpl
cmc
mov
jno
mov
inc
fildll
es
sub
push
adc
mov
xor
int3
test
mov
xchg
xor
pusha
test
jns
test
push
testl
repz
inc
push
cmp
push
sub
cmp
mov
leave
mov
fists
popf
pop
repz
dec
in
pop
push
fcmove
inc
xchg
addr16
out
ret
jecxz
push
cs
inc
pop
cmc
mov
out
mov
stos
ljmp
xor
lahf
shl
jecxz
enter
xchg
jge
inc
mov
push
repnz
mov
inc
call
mov
dec
pop
cmp
loopne
mov
popa
mov
mov
imul
pusha
movsl
xor
mov
pop
test
inc
fdivrs
movsl
clc
out
sbb
pop
out
cmp
repnz
popa
pop
dec
mov
jl
cmp
loopne
xor
push
pop
cmpl
xchg
jne
fistpll
out
inc
xor
fnsave
fwait
imul
xor
ficomps
pop
shlb
xchg
push
int3
pop
push
orb
xchg
xchg
adc
mov
call
jmp
sti
mov
sub
bound
jb
add
jnp
dec
xor
stos
sarb
sub
sti
mov
sub
bound
jb
add
jnp
dec
xor
stos
shl
loop
repnz
sub
push
mov
repz
cmp
jb
add
jnp
imul
ret
mov
sub
sti
and
fstpt
or
jne
lcall
fistl
repz
in
fisubrl
and
xor
inc
sbb
cmp
fistl
les
hlt
stos
add
adc
inc
jnp
imul
or
sub
lretw
ss
insb
jmp
fwait
mov
cli
mov
aaa
dec
dec
pop
push
imul
es
sub
fcmovnu
xchg
movsb
xchg
fnstsw
ds
fildll
jnp
mov
andb
jmp
and
xor
sbb
mov
pusha
mov
jp
out
outsb
or
imul
rorl
xchg
sti
movl
mov
adc
lods
les
pop
into
cld
dec
inc
aaa
pop
jmp
lcall
add
test
cmp
les
cmp
adc
lcall
and
xchg
sbb
test
add
push
negl
or
out
cmp
dec
aaa
adc
imul
leave
push
pop
int3
fs
ja
ret
sti
mov
and
push
stos
ret
dec
push
jnp
imul
or
je
in
mov
lret
rclb
mov
sti
add
inc
aas
inc
adc
ss
js
cmp
push
fcomi
leave
sti
aad
lods
shll
stos
arpl
inc
ds
dec
add
js
pusha
or
xchg
clc
cwtl
lds
aam
in
hlt
stos
add
adc
and
xor
inc
sbb
cmp
fistl
les
hlt
stos
add
adc
and
xor
inc
sbb
cmp
andb
lods
or
aaa
mov
push
insl
insl
mov
pop
scas
fld1
mov
mov
cmp
xchg
push
mov
out
int
sub
je
mov
and
or
cmp
xchg
sub
shr
sbb
adc
ljmp
xor
mov
jecxz
ret
adc
dec
scas
pop
add
mov
dec
lret
orb
cwtl
leave
addr16
pop
cmp
dec
xchg
or
pushf
jge
aam
jns
aad
ja
mov
xchg
sbb
jge
mov
cmpsb
lods
in
test
xchg
mov
gs
cmp
adc
mov
cmpsb
mov
add
les
fisubl
in
fcmove
pop
lods
pop
hlt
mov
das
jne
stos
clc
icebp
jno
add
push
pop
inc
cmp
push
xchg
or
mov
xchg
cwtl
adc
inc
xor
mov
jecxz
cmp
sbb
movsl
inc
mov
rclb
aam
fnclex
cmpsl
xchg
inc
sbb
rcll
jne
insl
mov
arpl
push
sbb
out
adc
pop
cs
mov
jmp
outsb
in
xor
cs
mov
lods
add
aaa
dec
or
in
push
inc
add
jb
or
dec
dec
test
push
mov
push
fidivs
mov
and
adc
adc
out
shrb
xor
xchg
int
xor
and
jle
mov
in
push
pusha
insl
dec
dec
lds
push
jae
sub
outsl
aad
es
lahf
out
and
movsl
jmp
in
in
sbb
movsl
inc
inc
dec
inc
add
cs
ja
andb
out
or
push
cmp
mov
push
dec
dec
jecxz
arpl
cld
stos
shlb
jl
popa
sbb
jge
adc
repnz
movsl
ret
push
push
lret
popl
popa
enter
es
cmp
inc
push
add
or
loope
das
das
dec
imul
dec
mov
loope
mov
imul
inc
jl
test
aas
flds
mov
inc
mov
mov
dec
push
cmp
sub
sbb
or
mov
sub
lock
shlb
jb
pop
lods
jecxz
cs
mov
jae
add
icebp
and
add
xor
adc
dec
mov
call
mov
dec
idivb
fnstenv
and
pop
mov
addb
xchg
test
out
and
into
data16
sbb
sub
ss
adc
jns
clc
sbb
and
cmp
cmpl
sub
xchg
mov
insb
test
jecxz
stos
cmp
test
lds
in
push
add
cmp
lods
inc
sub
cmc
push
add
push
shrb
out
mulb
push
add
sbb
jno
dec
cld
xchg
repz
sbb
mov
dec
in
ss
into
cwtl
arpl
jg
data16
rclb
add
mov
mov
and
push
pop
test
push
sbb
mov
std
adc
sub
sbb
add
cwtl
mov
dec
shlb
cmp
dec
mov
lods
pop
push
push
xor
imul
inc
movsb
push
addr16
cmp
int3
jmp
cmpsb
cmp
mov
jg
inc
push
mov
add
xchg
loopne
push
add
mov
push
push
mov
call
add
mov
test
push
stos
pop
mov
jo
movsl
push
jmp
inc
adc
mov
inc
fnstenv
push
cmp
inc
movsb
inc
mov
pop
add
ja
push
aaa
js
fsubl
loop
mov
sub
adc
in
not
add
and
sbb
jb
leave
pop
pop
stos
xchg
jl
iret
imul
jp
and
imull
xor
test
mov
or
push
xchg
or
xor
push
mov
mov
js
sub
or
hlt
or
test
jl
mov
and
pop
mov
mov
push
ret
xchg
sbb
mov
sti
add
lret
sub
out
sbb
xchg
fmull
fldl
andl
jne
xor
repz
in
push
in
js
xchg
pop
pop
xchg
das
mov
mov
inc
test
push
or
addl
loope
iret
cmpsl
push
mov
mov
out
sbb
mov
jne
das
jb
fadds
or
xorl
xor
sbb
and
popf
pop
in
mov
jl
mov
jno
call
jb
mov
jns
ret
cmc
jno
out
iret
fwait
adc
pop
inc
xchg
pop
cmp
jns
out
ja
sbb
adc
nop
aas
sahf
enter
lahf
lods
hlt
insl
or
push
mov
fucomip
shlb
sbb
cmp
or
push
adc
sbb
mov
mulb
pop
sti
sub
jmp
ja
imul
fisttpll
jg
jl
xchg
movsl
scas
mov
sub
sub
xorb
out
add
mov
push
mov
adc
and
jle
fcompl
hlt
add
dec
mov
and
inc
cmp
es
xor
push
push
push
int
cmp
lea
mov
lds
int3
sub
fisttpl
mov
inc
mulb
sbb
jns
xchg
int3
aaa
divb
jbe
pop
push
push
cmp
or
jmp
mov
ret
xlat
popa
icebp
sahf
xchg
pop
push
cmc
data16
push
jnp
mov
clc
or
rolb
push
push
loop
daa
push
push
cmpsl
push
xor
test
dec
fsubrs
sbb
sti
fwait
rcrb
mov
dec
jl
cs
bnd
mov
sbb
jge
xchg
jbe
repnz
ss
jnp
dec
adc
sti
xor
ljmp
lahf
pop
xchg
insl
std
bound
add
and
jbe
lock
pop
outsb
mov
fstpl
mov
mull
sub
inc
sub
popf
fxch
mov
adc
sub
movntps
lahf
jno
fsubrl
sbb
jp
add
cli
cmpsl
lret
stc
xor
or
add
out
js
and
cmc
sub
sbb
jb
jl
lods
add
mov
lock
mov
pop
out
dec
imul
ljmp
fwait
in
popf
movsb
fs
lock
fstl
les
out
xchg
in
jle
pop
push
imul
out
xchg
test
adc
aad
scas
ss
enter
cmpsl
ss
int3
add
dec
fsub
push
clc
ds
stos
cwtl
xor
sbb
adc
dec
lcall
sub
daa
cwtl
std
pop
popf
popa
test
out
jne
in
xchg
or
daa
pop
jae
movsb
mov
lds
xchg
adc
pop
add
mov
les
loope
mov
in
jge
cs
aaa
mov
adc
mov
lock
das
imul
and
and
cmp
inc
dec
clc
lods
jecxz
std
lds
shl
pop
into
mov
cmp
jecxz
adc
cs
xchg
stos
jecxz
push
xor
inc
fldenv
movsb
push
xor
sub
aaa
divl
inc
std
cmc
fdiv
sbb
ffreep
pop
mov
test
rcll
pop
mov
or
or
or
xchg
mov
add
fimull
dec
mov
jo
cmpsb
test
dec
jmp
outsb
mov
fst
rorl
xlat
xchg
testl
xor
inc
pop
push
fsubr
out
pop
mov
jb
dec
loop
cmp
gs
add
dec
ret
xchg
das
xor
xchg
call
pop
jae
push
mov
es
mov
fcomip
xor
icebp
stos
scas
lahf
fists
iret
imul
subb
idiv
xchg
stos
dec
xor
cmp
mov
lret
xchg
xor
push
jno
dec
sbb
lock
push
fwait
mov
cmp
adc
in
aaa
sti
xchg
test
mov
mov
dec
pop
rolb
rcrl
js
ds
xchg
and
loop
dec
pusha
xor
daa
je,pn
cmp
pop
push
pop
hlt
pop
adc
cltd
aaa
in
sub
xor
push
xchg
aaa
adc
mov
rcrb
mov
jmp
stc
jne
in
lods
jmp
aad
fbld
sbb
cmp
iret
xchg
cs
pop
xor
jae
jbe
cmp
and
adc
dec
test
test
jle
test
pop
pop
fistps
out
in
loope
push
ja
dec
mov
and
dec
fs
icebp
sbb
outsb
cmpsl
mov
test
jecxz
dec
mov
cltd
sub
popf
outsl
and
pop
xchg
iret
sbb
fwait
nop
insl
stc
jmp
mov
cwtl
outsb
mov
stos
hlt
dec
push
lods
test
or
add
stos
fwait
hlt
aad
ljmp
jmp
outsl
sub
or
call
stos
dec
stc
cwtl
adc
in
out
xchg
imul
sub
mov
ret
cmp
cmp
hlt
xchg
inc
outsb
fcomps
sbb
and
mov
popf
rclb
shll
mov
push
mov
sub
add
xchg
mov
push
mov
sub
pop
jl
cmp
mov
js
sbb
frstor
adc
inc
rcr
ror
sub
mov
loope
dec
dec
cmpsb
lret
dec
mov
fcomps
nop
pcmpgtb
add
mov
in
or
loop
mov
jg
sbb
dec
cmc
insl
jae
dec
mov
and
mov
mov
aad
pop
mov
mov
mov
aad
js
xor
mov
xchg
mov
jle
xchg
jg
rorl
xchg
mov
fidivs
adc
adc
mov
cmp
addr16
dec
sbb
lds
jmp
std
loope
gs
cwtl
and
cmp
insl
xchg
sub
push
test
sbb
xchg
fmuls
sub
movsb
add
idivl
mov
fld
or
cs
pop
inc
sbb
in
daa
xchg
jno
movb
test
mov
in
cmpsl
lahf
jg
push
pop
and
sarl
pop
lock
int
jecxz
int
clc
and
fwait
cmpsl
push
adc
jo
arpl
push
out
ret
adc
jo
jmp
xor
xchg
jb
inc
push
out
mov
call
cwtl
push
jge
mov
push
shll
out
jp
mov
jmp
icebp
out
loopne
adc
orl
push
mov
jbe
ds
jno
loop
es
inc
dec
out
cs
lea
jecxz
mov
rolb
fimull
adc
or
or
nop
loop
jecxz
ljmp
test
or
xlat
loopne
push
push
stos
jne
push
mov
mov
fsubl
addr16
popa
or
inc
in
clc
dec
mov
stos
xchg
xchg
test
fdiv
lds
fnstcw
pop
mov
xor
mov
out
jle
push
and
cmpsb
bound
adc
cli
loop
aam
cmp
lret
add
imull
dec
call
imul
shlb
or
and
out
stos
gs
lock
enter
jbe
cmovnp
jecxz
add
push
mov
lock
push
dec
mov
jg
adc
pmaxub
mov
xchg
adc
std
and
mov
push
add
cmp
ljmp
mov
fdivrs
xor
jmp
hlt
sar
idivb
xor
cmpsb
ljmp
in
test
xchg
cmpsl
repz
movsl
mov
jmp
mov
push
jle
sub
mov
mov
mov
into
add
das
lret
sbb
inc
sbb
repz
mov
push
dec
cmp
cmp
xchg
cli
ljmp
mov
fildll
ja
repz
pop
pop
ja
andb
pop
jge
mov
mov
xchg
mov
add
movsl
imul
add
subl
outsb
jne
and
pusha
pop
dec
int
fxch
lea
dec
add
stc
inc
cwtl
std
dec
mov
and
and
lods
jns
mov
in
stos
mov
push
mov
mov
xchg
iret
inc
shll
je
mov
xchg
dec
bound
and
push
push
mov
push
push
cmp
gs
xchg
ljmp
cmp
xchg
test
in
fcoml
popa
aaa
in
ss
cltd
add
lock
xlat
dec
fwait
pushf
in
mov
push
cli
inc
fisttpl
xchg
and
xchg
inc
incl
sub
loope
popa
hlt
into
add
or
daa
in
in
and
push
repz
sahf
fcomp
mov
sub
sbb
lret
addr16
dec
insb
mov
ret
cli
mov
cld
shrl
lods
cltd
hlt
add
out
pop
cltd
daa
inc
push
das
sub
aad
das
adc
fs
pushf
push
lock
mov
jp
orb
jae
xor
xor
sbb
inc
bnd
sub
xor
adc
dec
sub
sbb
xor
pop
push
and
and
popf
outsb
repz
xchg
push
xchg
mov
out
shr
scas
iret
sub
sbb
test
das
add
push
outsb
pop
push
dec
mov
mov
and
test
ret
ret
cmpsb
int
pop
pop
sub
mov
dec
cmp
jb
inc
aas
jns
dec
push
cmp
jae
adc
ret
push
push
ss
jp
mov
inc
rcrl
je
jecxz
insl
dec
mov
and
arpl
es
mov
in
sub
mov
mov
ret
es
call
sti
mov
jbe
sbb
inc
mov
dec
mov
sahf
ret
and
lret
push
add
jo
gs
xlat
inc
loope
dec
jg
and
jmp
xchg
sub
scas
mov
outsb
push
push
fcoml
mov
arpl
fwait
pop
ds
jge
ljmp
out
xor
in
inc
push
push
out
sbb
fstpl
jns
mov
xchg
dec
jmp
cmp
xor
xlat
xlat
or
pop
add
sbb
sbb
or
cmp
dec
sarl
icebp
xchg
fisubl
mov
int3
lcall
xchg
inc
stos
jge
faddl
push
xchg
das
mov
or
fcompl
out
sub
cmp
leave
jp
lret
ficompl
fsub
inc
pop
outsb
das
xchg
push
lods
test
adc
adc
shlb
inc
repnz
or
adc
leave
fs
sti
adc
cmpsb
sarl
lret
ret
push
and
fistl
mov
mov
stos
inc
pop
test
fscale
sahf
xchg
lcall
andl
inc
xchg
or
add
mov
adc
mov
cmp
dec
filds
aam
and
aas
lret
addr16
daa
mov
or
mov
ds
pop
dec
jp
mov
cmpsb
cmc
scas
adc
cmpsl
hlt
gs
lcall
clc
sahf
cld
push
jg
mov
dec
or
inc
adc
mov
xchg
inc
pushf
pop
add
icebp
scas
inc
sub
mov
mov
mov
dec
mov
add
leave
fsubl
call
pop
gs
mov
bnd
je
data16
mov
xor
mov
pop
xchg
cmp
push
out
nop
orl
sub
in
adc
aad
fimuls
add
test
bound
arpl
ljmp
loope
call
mov
cmpsb
push
loop
xchg
fldenv
aam
lret
int
cltd
das
clc
andl
pop
inc
jg
mov
les
adc
adc
hlt
lret
jge
jg,pn
outsl
cltd
nop
mov
add
sbb
inc
xchg
inc
cmp
mov
sbb
repz
sub
xchg
sub
daa
mov
mov
dec
xchg
shr
pushf
adc
popf
xchg
sbb
sbb
fwait
rcrl
sub
mov
orl
jecxz
int3
cmp
popf
push
leave
dec
aam
mov
and
push
mov
adc
sarl
call
loop
aas
xor
pop
lods
cwtl
call
rcr
mov
pop
cmp
popl
mov
xchg
add
dec
cs
jae
sub
inc
leave
in
add
fnsave
loop
mov
into
lods
mov
cmp
jbe
stc
scas
dec
mov
mov
jno
pop
dec
add
adc
test
mov
push
jne
test
stc
scas
or
decb
iret
xor
loop
cmp
pop
adc
pushf
add
push
inc
pop
enter
pop
daa
daa
dec
mov
xchg
repnz
rcrb
xor
mov
arpl
outsb
movsb
lcall
loopne
data16
push
inc
jge
hlt
js
mov
xchg
data16
inc
add
int
stos
in
js
cmp
lahf
leave
and
mov
inc
lahf
add
mov
cwtl
es
and
adc
gs
fcoms
sub
xchg
ljmp
xchg
repnz
adc
aam
sahf
pop
or
xor
divl
push
movsb
jl
sahf
cmp
push
mov
xor
imul
inc
dec
cmp
push
inc
fwait
xor
push
sbb
lret
aad
rolb
fwait
cmpsb
or
adc
jne
cmp
push
jg
mov
push
cltd
bound
xor
frstor
loop,pn
sbb
out
sti
arpl
test
mov
mov
cld
inc
jmp
dec
mov
gs
lods
scas
sub
ljmp
fmulp
or
sbb
mov
sub
outsl
push
test
jmp
lret
jbe
arpl
test
in
test
push
stos
sbb
xchg
cmc
pop
outsl
shll
hlt
add
dec
add
adc
xchg
cld
lcall
shrb
cmp
xor
das
inc
adc
jecxz
push
mov
mov
push
mov
inc
repnz
mov
jle
push
int3
dec
dec
and
out
out
in
in
repz
popa
loopne
out
dec
cmp
inc
or
data16
decb
rorb
out
sub
push
adc
cltd
xchg
data16
or
dec
add
adc
jecxz
insl
popf
xor
mov
les
xor
adc
outsl
push
jl
into
fldl
ret
repnz
or
push
fisttpll
inc
outsl
pop
test
adc
or
nop
push
push
cmp
cs
mov
jp
dec
lea
mov
dec
in
lcall
insb
shrl
dec
sbb
mov
ljmp
jae
mov
push
bound
jmp
fxch
mov
sbbb
mov
mov
cli
loop
add
mov
fnsave
int3
loopne
and
jmp
jb
js
loope
std
push
xor
montmul
cmpsb
inc
das
sub
out
inc
sbb
cltd
js
test
popa
push
sub
int
adc
adc
pop
lcall
and
mov
loope
cmpsl
and
xor
fisubrl
adc
add
mov
repnz
cltd
cmp
xor
mov
ss
mov
dec
movsl
add
mull
cwtl
push
jmp
push
sarl
jp
lahf
and
push
dec
loop
in
push
movsb
cmp
pop
aas
xchg
test
or
ss
addr16
aas
push
add
aam
pop
js
mov
xor
mov
cli
je
pop
jae
fcmovne
lret
addr16
int
pop
popf
pop
mov
jo
movsl
out
in
in
inc
xor
in
hlt
mov
clc
xchg
arpl
insb
jne
fnstenv
jp
jg
sbb
repz
pop
popa
stos
psubb
mov
mov
shl
adc
imulb
or
fwait
sbb
dec
cmc
ret
mov
popf
mov
ss
mov
jnp
data16
dec
andb
xor
scas
stos
push
xlat
sbb
jne
jns
pop
mov
mov
adc
cmp
orb
iret
insl
cmpsb
ja
js
rcrb
push
xchg
insb
test
xchg
jne
inc
and
ret
mov
push
mov
inc
dec
mov
mov
jge
testl
rcr
outsl
lret
and
stos
movsb
mov
jecxz,pn
cwtl
or
xchg
xchg
jg
adc
inc
js
inc
fld
inc
dec
mov
out
add
mov
popf
lahf
es
scas
mov
mov
into
cmovo
pushf
add
daa
bound
imul
ficomps
add
mov
cmpb
lret
jecxz
mov
les
hlt
stos
add
adc
and
xor
inc
sbb
cmp
fistl
les
hlt
stos
add
adc
and
xor
inc
sbb
cmp
push
fwait
aam
in
xor
add
adc
aam
xor
inc
sbb
cmp
sti
xchg
jmp
fwait
les
add
jmp
mov
sbb
xchg
fdiv
fwait
les
test
cwtl
mov
mov
sub
aam
lds
negl
out
xchg
js
push
push
mov
mov
clc
pop
call
xlat
cmp
sub
sbb
or
pop
cmpsl
dec
push
mov
mov
clc
pop
call
xlat
cmp
or
sub
aas
hlt
ss
cmp
lret
es
lock
mov
fcoms
fcoml
inc
pop
fucomi
pop
std
shl
jo
cmp
loopne
mov
les
insl
lret
ror
ret
dec
xlat
or
xchg
test
sub
mov
aad
std
sub
imul
pop
xchg
insl
or
xor
cmpsl
lock
std
pusha
mov
clc
jmp
daa
dec
xlat
push
pushf
sbb
js
xchg
dec
push
sub
add
ret
enter
jo
popa
lret
mov
call
jp
insb
or
sub
push
imul
enter
and
sub
sbb
jo
movsl
pop
xchg
mov
mov
clc
pop
call
xlat
cmp
sub
sbb
or
pop
cmpsl
and
mov
and
pop
sahf
mov
sub
or
and
xor
adc
mov
dec
movsb
jb
bound
dec
out
pusha
push
loop
fimuls
int
xor
inc
loopne
ljmp
aaa
fsubs
enter
sub
sbb
or
pop
cmpsl
dec
push
mov
mov
clc
pop
call
xlat
cmp
sub
sbb
or
pop
cmpsl
dec
push
mov
sbb
mov
pop
addr16
mov
mov
pop
mov
cmpsb
mov
mov
push
ljmp
test
push
adc
jp
in
inc
repnz
mov
push
xchg
and
adc
adc
push
pop
mov
cmp
imul
mov
insl
pushl
push
outsl
stc
mov
sub
mov
add
gs
std
push
push
sub
dec
popa
inc
push
pop
and
pop
or
pop
imul
mov
insb
nop
cs
pop
xchg
fcoml
lea
lods
lret
add
sti
popa
adc
push
scas
cltd
imull
stc
sub
cs
jg
add
dec
and
test
ss
xor
dec
mov
pop
pop
dec
mov
pop
mov
clc
or
add
in
and
or
les
ss
enter
push
sub
mov
mov
in
lret
iret
or
xchg
inc
movb
sbb
loopne
lret
rcl
xchg
push
aam
sub
jbe
pop
sti
in
outsl
imull
xor
and
sbb
std
repz
dec
cmpsb
arpl
mov
outsb
fmulp
dec
int3
scas
fs
add
and
icebp
lahf
out
inc
sub
aaa
es
pop
int3
jnp
jnp
cwtl
pop
test
jne
daa
ret
xchg
push
iret
mov
subb
push
in
push
ljmp
imul
push
pop
nop
sbb
stos
xor
and
sub
das
adc
xor
xchg
aam
xchg
mov
popf
fwait
subb
mov
dec
icebp
inc
inc
dec
or
or
and
arpl
int3
gs
inc
rcrl
jbe
cmp
mov
jns
arpl
xchg
mov
icebp
scas
sti
xlat
fstps
or
lcall
add
dec
gs
inc
add
and
adc
int3
pop
xor
out
cmp
pop
inc
test
addl
pushaw
lahf
sub
or
sbb
shll
sbb
pop
xor
or
mov
xlat
movsl
inc
aad
jmp
pop
shlb
xchg
mov
fists
shlb
cmp
paddusb
or
out
dec
loopne
sbb
lahf
mov
and
adc
adc
pop
xor
dec
inc
jg
and
cmp
fucom
sub
nop
lods
mov
adc
setae
add
xor
ja
jbe
fsubrl
push
push
mov
xorb
sub
mov
mov
pop
fidivl
cmc
lods
mov
outsl
icebp
faddl
pop
sahf
cld
pop
jle
outsb
in
inc
add
mov
jp
call
and
mov
lahf
vpminsw
push
inc
add
mov
jnp
nop
jb
jmp
outsl
in
or
in
xchg
push
test
and
push
cld
mov
sbb
mov
call
addr16
mov
cltd
jb
xor
fsubp
shr
loopne
daa
and
lods
mov
adc
iret
xchg
and
pop
cli
lea
lods
push
aaa
scas
xor
pop
and
jns
mov
add
push
or
mov
add
sbb
sub
lds
xchg
cmp
add
inc
call
push
aas
add
scas
mov
jecxz
dec
outsb
cmp
cmp
or
cmp
mov
pop
std
pop
xor
jb
daa
push
sbb
aaa
sahf
cmp
leave
lods
or
out
xchg
gs
push
stc
lods
add
fs
pusha
pop
push
push
xor
sbb
push
sarb
sbb
jecxz
repnz
fcmovu
sub
imul
sbb
fldl
jg
jle
push
mov
dec
mov
imul
jo
and
sub
in
insl
mov
imul
cmp
jae
push
mulb
jp
sti
outsl
test
ss
movsl
faddl
lret
in
and
fwait
sbb
pop
adc
shrl
xor
sub
pop
mov
jl
inc
testb
lcall
roll
xlat
jns
pop
out
sbb
xor
ret
inc
mov
and
adc
inc
or
dec
mov
imul
push
adc
adc
xlat
repnz
lret
xorl
mov
add
pop
clc
push
dec
in
insb
icebp
gs
pop
aam
stos
dec
shlb
adc
push
pop
mov
imul
call
push
sub
aam
insl
pusha
lahf
pop
adc
cli
shll
jnp
adc
and
mov
inc
sub
loope
lahf
ficoml
fs
adc
mov
jae
in
stos
adc
adc
cld
cmp
xorb
mov
pop
scas
leave
test
clc
cli
and
loope
mov
test
inc
sbb
mov
test
arpl
ja
inc
fs
cld
xchg
movsb
in
mov
lds
pop
hlt
push
jo
loop
mov
enter
imul
test
mov
xor
push
xor
mov
sbb
lret
push
aad
or
push
sbb
fstl
cmpsl
ja
bound
adc
scas
fldt
cmp
lds
sub
lods
or
jbe
lret
adc
out
js
dec
cmp
push
int3
jbe
aad
pop
dec
xor
mov
and
mov
leave
and
test
push
mov
cwtl
xchg
fwait
sarb
nop
loopne
test
inc
insb
dec
inc
push
or
insl
adc
enter
jmp
outsb
mov
mov
hlt
fsubr
jno
inc
add
dec
call
fidivs
pop
adc
and
mov
push
xor
jnp
hlt
jo
jne
xchg
dec
cmp
pop
out
cltd
lahf
sub
repnz
out
mov
and
xchg
xchg
or
addl
ljmp
cmpb
add
popa
fs
bound
iret
movsb
aam
xlat
jnp
iret
add
iret
push
dec
addr16
in
xor
lret
xchg
pop
ds
sub
and
and
pop
xor
mov
mov
daa
movsb
push
dec
xchg
int
push
add
jg
lahf
lcall
ret
or
dec
pop
in
ja
pop
movsb
test
mov
xor
imul
push
jl
push
sub
mov
xchg
and
andl
jl
ljmp
enter
mov
mov
dec
dec
dec
mov
out
cmp
aam
decl
clc
xlat
lcall
je
insb
sub
push
cltd
addl
push
bound
stos
in
dec
pop
cmp
xor
push
pop
sti
adc
sti
xchg
lret
sahf
fwait
cmp
or
jnp
pop
add
frstor
inc
sar
popa
out
jns
stos
ljmp
adc
sub
cmpsb
push
test
mov
das
inc
rorl
je
lcall
aas
add
pop
sahf
xchg
mov
mov
pusha
jl
mov
sti
cwtl
out
fsubrs
sub
loop
dec
push
jmp
stos
icebp
into
lds
cmp
repnz
xorb
xor
push
adc
push
mov
cmp
or
inc
xchg
push
inc
movsb
fldenv
push
jbe
es
cs
push
ds
lcall
inc
xor
dec
fiaddl
ljmp
or
fwait
push
outsl
je
cmp
std
push
inc
int
aaa
mov
adc
stos
pop
jl
test
inc
add
imul
mov
andl
jae
jmp
call
imul
mov
das
sti
sahf
jbe
inc
xchg
addb
jmp
in
xchg
jbe
repnz
adc
sub
sbb
mov
repnz
lcall
je
adc
inc
and
and
pop
mov
xchg
sar
sbb
movsl
cs
fcmovne
or
ret
movsb
lahf
mov
pop
jp
xor
xchg
adcl
and
int3
and
movsb
adc
test
shr
gs
popa
push
lahf
cld
mov
jno
adc
in
sub
mov
fcompl
std
jle
cld
insl
sti
inc
gs
xor
notl
mov
cld
and
adc
xchg
sti
xchg
int3
ret
add
aas
andl
in
mov
push
loopne
mov
and
xchg
stos
cmpsb
xor
push
mov
sub
xchg
outsb
add
sbb
pushf
mov
callw
or
mov
pushf
vpaddusw
inc
mov
and
jge
movsl
test
sub
das
pop
cwtl
aaa
ljmp
mov
cmp
sbbl
cld
adc
out
mov
jp
jmp
xor
jmp
xchg
mov
push
xor
xchg
sub
cmpsl
fmul
pop
or
bound
lcall
fcmovu
cmp
cltd
in
es
sub
and
and
sbb
push
fstl
jns
and
push
adc
add
insl
pushf
lea
fiaddl
xchg
xlat
mov
outsb
mov
fisttpl
adc
bound
mov
or
fidivl
fcmovbe
push
sahf
sub
into
lods
sbb
movb
xor
pushf
in
cmp
jl
jo
sub
push
mov
in
or
push
lods
inc
idivl
rorl
pop
cmp
inc
xlat
adc
in
mulb
fstl
scas
sbbb
std
orl
pop
xchg
adc
sahf
hlt
mov
sub
filds
aam
adc
mov
stos
shll
mov
cmpsl
xchg
cmp
shrb
push
xor
or
mov
shl
sub
stos
cmc
sub
addb
xchg
push
pop
outsb
fxch
mov
scas
lods
mov
stos
and
faddp
mov
loopne
add
faddl
mov
pop
mov
lcall
pop
ja
inc
mov
and
sbb
dec
ret
add
xchg
stc
adc
xorb
fwait
std
mov
leave
xor
add
nop
sub
loope
push
ficomps
pop
push
cli
and
mov
icebp
add
or
vpsubb
jecxz
or
lcall
mov
out
sbb
jle
jns
test
add
fcomps
or
inc
add
inc
jbe
jle
sbbl
testb
scas
ret
cmc
sub
dec
test
sub
pushf
pop
pop
jo
jo
push
pop
sbb
in
cmp
dec
test
dec
pop
pop
xor
cmp
xchg
movsb
xor
pop
addr16
adc
mov
les
cmp
std
test
mov
sbb
mov
xchg
out
xchg
cmp
pop
pop
jmp
filds
sub
call
std
adc
mov
sbb
push
mov
js
test
ljmp
and
jns
push
mov
loope
fsubp
jbe
mov
mov
rcl
enter
mov
xchg
push
or
in
adc
ficoml
and
push
or
push
lods
mov
mov
sbb
mov
push
cmpb
arpl
push
or
add
inc
add
sub
push
shll
or
enter
outsb
cmc
paddsb
ja
cwtl
dec
lds
or
sbb
mov
inc
xchg
into
cmc
add
out
jne
out
cmp
mov
daa
adc
push
ror
repz
div
test
xorl
pop
insb
stc
mov
fdivl
pop
mov
scas
in
and
mov
fwait
sub
movb
xor
cmp
stc
es
rcll
inc
push
inc
js
jo
int3
jle
inc
xor
jle
mov
movsl
fildl
std
mov
int3
stc
sbb
push
out
jecxz
cld
sub
mov
adc
stos
mov
lods
jle
cli
cmc
aam
cmp
pop
pop
pop
mov
add
cli
or
rorb
xlat
rep
xor
je
push
jno
testl
fistps
mov
jae
mov
inc
push
lahf
xchg
jmp
test
popa
fistpll
popa
sbb
repnz
or
mov
lahf
jecxz
testl
das
inc
inc
in
xorl
mov
xchg
cmp
mov
mov
pop
dec
scas
mov
ljmp
add
fucomip
sub
mov
enter
out
outsl
daa
in
mov
rorl
ret
nop
movsb
sbb
outsl
mov
adc
jb
lahf
dec
addr16
cmc
sti
mov
scas
push
js
sub
cmp
mov
sub
incl
lret
aas
cld
out
in
jno
js
or
cmp
fstpl
jle
loop
ficoms
push
dec
into
sbb
sub
fstl
fsubs
mov
fdivrl
or
mov
sbbb
jmp
or
jb
jmp
movsb
rorb
dec
mov
adc
movsl
scas
xchg
pop
ss
mov
ds
lret
push
jl
bound
mov
cmpsb
xchg
pusha
nop
cmp
inc
sti
dec
outsb
or
sub
leave
inc
jmp
dec
testl
push
sub
push
pusha
divb
outsb
xchg
inc
xchg
int
pop
data16
inc
push
and
decl
jns
stos
mov
xor
mov
out
xchg
sbb
pop
push
xor
les
mov
and
add
push
adc
lods
fbld
dec
aam
sbb
mov
and
inc
aas
or
in
loope
inc
sti
mov
sbb
add
ja
xor
in
jo
or
ljmp
push
mov
dec
inc
xchg
cs
and
adc
and
xor
pop
pop
sub
push
and
xor
jne
mov
repnz
and
jnp
pop
adc
push
cmp
pop
cmp
jb
jmp
and
and
bound
dec
mov
fcmovne
sub
sti
xchg
addr16
mov
les
push
movsb
decl
in
in
aam
dec
cmpsb
jns
lods
sbb
shrb
loop
fs
or
pop
cmp
jl
or
cmp
aam
daa
or
lock
mov
sub
cli
dec
push
icebp
mov
movb
mov
push
int3
xchg
push
andnps
add
mov
and
mov
mov
inc
add
adc
popa
aas
dec
pusha
sbb
cld
lock
push
ljmp
push
adc
pop
test
push
daa
sar
sarl
decl
cltd
push
sbb
mov
imul
push
mov
xor
stos
mov
mov
sbb
hlt
gs
jmp
add
mov
add
ss
sbb
es
jnp
sbb
test
mov
rol
push
push
xor
test
push
ja
je
aaa
add
je
xor
lret
jecxz
adc
pop
sbb
push
and
test
mov
pop
lret
dec
cmp
fs
sbb
or
pop
xchg
jecxz
push
adc
neg
mov
add
lret
cmp
cmp
aaa
push
std
mov
loope
and
pusha
loopne
mov
and
aam
jl
xchg
jg
and
cmp
xor
aad
lods
loope
out
jmp
inc
das
call
out
inc
or
loopne
lcall
mov
es
in
lock
pop
jno
lret
jno
push
popf
lcall
sub
and
mov
mov
adc
jo
sbb
into
lcall
out
pop
cmp
jnp
xchg
insb
iret
xor
add
mov
adc
fidivs
outsb
mov
inc
sti
fildll
les
negb
das
sbb
int
jbe
loope
fstl
dec
jp
inc
clc
inc
adc
cltd
insb
fldt
and
or
xchg
hlt
fcomi
mov
add
mov
sbb
mov
jmp
cmp
pop
xlat
rclb
cmc
in
mov
mov
dec
jmp
movsb
subb
xchg
cltd
xchg
jg
sbb
popf
out
outsb
clc
data16
lock
fmull
or
das
and
or
stos
in
mov
pop
cmp
movsb
push
add
sbbl
dec
pop
sub
sbb
clc
lock
enter
and
inc
aad
sub
sub
fxch
dec
inc
stos
mov
int3
jecxz
sbb
stc
adc
mov
clc
sbb
outsb
addr16
sbb
ss
or
mov
out
dec
leave
sub
adcl
pushf
adc
xor
out
negl
add
mov
mov
jb
add
or
mov
adc
testl
pop
ficoml
stos
dec
inc
popf
cmpb
cmpl
fildl
rorl
mov
rcr
inc
inc
test
pop
push
push
jb
icebp
push
add
addr16
xlat
shrb
push
adc
adc
xchg
insl
aaa
jg
mov
sub
loopne
mov
and
xchg
pop
pop
push
pop
add
out
cld
inc
iret
mov
mov
lock
movsb
insb
push
lahf
lods
fnstenv
cs
mov
cmp
test
les
push
pushf
jle
mov
pop
inc
add
rorb
jmp
shll
and
andb
lcall
push
adc
and
cli
pop
addb
enter
ret
int
fidivrl
and
out
mov
and
mov
jg
fdivrl
lock
xchg
jp
adc
jae
push
lahf
fs
outsb
cmpsb
mov
inc
sbb
data16
ficoml
rorl
or
mov
inc
sub
imul
and
mov
cmp
fdivrl
arpl
push
fs
fisubrl
jp
stos
int3
fsubrs
xchg
fistps
or
mov
jge
xchg
add
incl
cmpsl
outsb
sahf
pop
repz
inc
or
sbb
mov
mov
or
push
fldl2t
push
scas
push
scas
ljmp
cmp
sub
data16
jecxz
les
push
sub
das
adc
jne
xchg
scas
push
jp
and
xor
out
mov
or
xor
mov
sub
xchg
test
mov
cltd
jo
and
push
shl
mov
inc
sub
or
cmp
add
pop
out
xchg
lret
xchg
cltd
pop
out
dec
test
mul
and
jge
push
pop
cmpb
out
enter
movsl
cmp
inc
pop
adc
loop
mov
add
xor
arpl
sub
imul
mov
inc
stos
xchg
jge
fidivrs
sub
fwait
xor
and
xor
mov
pop
jg
cmc
aas
xor
mov
notl
leave
iret
insl
cltd
adc
fdivl
pop
aam
lock
adcl
popa
in
push
dec
inc
push
repnz
clc
cmp
xchg
in
mov
ret
in
ret
sbb
and
mov
cli
data16
jp
xorb
adc
lret
mov
mov
inc
cmp
jg
fsubl
loope
in
xor
mov
jmp
inc
out
sub
ret
push
in
call
cmpsb
rcrb
rolb
inc
xchg
xor
imul
pop
xlat
xor
jae
ds
test
jno
or
imul
adc
or
imul
push
mov
add
pop
mov
fwait
and
xor
mov
data16
inc
adc
cmp
adc
js
notb
movsb
jle
imul
mov
fidivs
insl
xor
xor
test
or
nop
xchg
adc
pop
pop
arpl
sti
repz
jl
stos
nop
xor
outsl
cli
and
hlt
xchg
in
add
scas
test
clc
ljmp
cwtl
daa
loop
cld
hlt
cmc
add
sub
inc
sub
ds
inc
inc
mov
jg
aam
xor
lret
inc
push
sub
mov
ret
xacquire
mov
push
rorb
xchg
pop
mov
or
neg
fstps
jne
push
inc
cmp
pop
aam
cwtl
sub
mov
pop
fwait
mov
pop
outsl
testb
pop
pusha
scas
pushl
or
mov
and
movsb
test
inc
int3
mov
jg
xchg
push
add
inc
pop
les
add
bound
jns
inc
ljmp
clc
dec
stos
xor
push
repz
subl
aaa
fsubs
enter
sub
sbb
or
pop
cmpsl
dec
push
mov
mov
clc
pop
call
xlat
cmp
sub
sbb
or
pop
cmpsl
dec
push
mov
mov
clc
push
call
cmp
sub
sbb
or
pop
cmpsl
dec
push
mov
mov
clc
pop
call
sub
cmp
loopne
seta
pop
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lcall
and
push
mov
bound
xchg
or
pop
rorb
jp
push
lcall
and
push
lret
jb
bound
xchg
or
lcall
loop
adc
and
push
lret
jb
bound
lods
sub
push
ret
pop
andb
lds
out
jbe
push
into
adc
cmpl
jmp
push
aad
sbb
jns
sub
sbb
inc
out
push
frstor
jle
push
das
loop
mov
mov
sub
pop
adc
push
add
mov
sbb
jl
mov
bound
shlb
icebp
pop
or
mov
shlb
stos
ss
push
fists
fwait
ljmp
dec
inc
pop
movsl
orl
ret
gs
in
filds
lea
cmpl
mov
sub
imul
xor
push
sbb
ljmp
mov
mov
aas
out
loop
adc
and
push
lret
jb
bound
xchg
or
pop
rorb
jp
push
fstpt
rcl
je
fidivrl
call
jmp
fcoml
pop
mov
sub
call
dec
fbstp
jne
aaa
insb
sbbb
out
cmp
sub
pop
mov
pop
mov
inc
mov
inc
push
xchg
ds
jb
bound
xchg
or
pop
rorb
jp
push
lcall
and
push
lret
jb
bound
xchg
or
pop
rorb
jp
push
lcall
repz
enter
sbb
inc
cmp
adc
fdivrp
cmp
andl
sbb
mov
shr
out
incb
mov
and
cmpsl
in
in
outsl
ljmp
data16
loop
imul
out
mov
cmp
jne
shrl
sbb
inc
dec
push
dec
xchg
dec
jmp
inc
bound
or
fcoms
jp
fildll
xchg
insb
pop
and
add
sbb
leave
sub
pop
xor
mov
aam
repz
jge
dec
push
popf
out
aad
cmc
cmp
scas
sub
inc
push
aas
push
outsb
int
push
stos
sahf
mov
dec
dec
add
jnp
mov
dec
es
mov
out
lret
sbb
inc
andb
iret
adc
push
pushf
xor
mov
movsl
mov
and
jg
dec
push
mov
aad
jg
pop
nop
test
sbb
lahf
xchg
xor
in
dec
adc
fcmovne
dec
sti
pushf
testb
cwtl
mov
mov
cwtl
fcomps
and
cmpsb
push
aam
jns
jle
fildl
pop
jnp
addr16
fs
dec
sti
mov
int
mov
aam
gs
pop
sbb
movsl
std
dec
xor
mov
push
push
sti
sub
nop
loop
or
push
pop
dec
imul
add
into
sub
clc
jmp
ret
adc
dec
inc
sbb
inc
push
test
xchg
or
aad
cmp
and
repnz
aaa
outsl
dec
cmc
mov
call
ffreep
cwtl
pop
fxch
mov
jl
push
jmp
imul
jnp
int
push
adc
jae
pop
mov
popa
dec
in
pop
call
dec
pop
icebp
and
out
mov
mov
sub
mov
jp
cmp
js
arpl
adc
fwait
or
inc
sub
cmp
dec
sahf
addr16
mov
outsl
in
pop
outsl
dec
es
and
push
mov
scas
std
push
mov
cmp
mov
leave
mov
mov
pushf
fiadds
mov
sbb
andb
and
aad
push
stos
and
jmp
adc
ror
mov
movsb
or
adc
xchg
lret
add
mov
in
jmp
js
test
push
enter
ja
ss
repz
cs
cmp
jmp
stos
int
push
inc
incl
dec
divl
jne
rol
sbb
cltd
jae
sub
inc
aaa
adc
scas
gs
mov
jns
scas
loopne
cli
popa
inc
sbb
stos
out
out
aaa
gs
mov
xlat
dec
call
dec
rep
adc
pop
and
jb
and
adc
rolb
mov
sbbb
das
mov
jle
fnstenv
cmc
mov
pop
lcall
and
enter
pop
jmp
repnz
jge
aam
xchg
ljmp
in
sahf
push
andl
sbb
mov
ja
testl
mov
aaa
mov
jmp
insl
adc
cmp
clc
fistpll
or
xchg
or
mov
xor
int3
roll
mov
xchg
fisubs
add
add
lahf
cmc
jbe
sti
insl
cmp
mov
incl
cmpsb
sbb
sahf
xchg
xchg
mov
mov
cmp
jbe
inc
push
arpl
mov
inc
pop
div
int
push
into
mov
stos
mov
pop
and
std
adc
out
in
cmp
cmp
loop
inc
push
add
out
ret
inc
insb
lods
in
dec
punpckldq
test
ds
lods
push
movsb
test
repz
stc
subl
xor
jecxz
pop
lahf
xor
mov
sub
sub
mov
jno
cwtl
adc
adc
les
add
or
sbb
arpl
jmp
sbbb
jne
es
and
stc
mov
movsb
adc
fildl
shrb
stos
cmp
jae
jnp
movsl
and
stos
xchg
adc
insl
push
and
hlt
add
pop
pushl
repnz
aas
lea
stos
fbld
sub
test
add
mov
jmp
call
cltd
xchg
jmp
fldcw
mov
loop
int
ja
adc
clc
adc
sbb
adc
mov
ds
sub
cmp
out
dec
mov
aad
mov
and
cmp
bound
ret
in
out
mov
imul
adc
popf
or
adc
xchg
aad
mov
or
jnp
or
and
inc
adcb
inc
xor
mov
xlat
shll
mov
mov
arpl
sub
add
les
fmull
cmpsl
test
sbb
lods
xchg
fsubr
mov
mov
aas
xchg
inc
mov
cmp
cmp
loop
mov
stos
or
dec
sbb
sti
sarl
ljmp
cmp
jmp
test
pop
out
leave
xor
pop
mov
add
push
lahf
out
pop
jl
inc
push
push
lods
loope
inc
stos
lds
or
orps
and
sbb
jg
stos
out
scas
and
pop
dec
dec
cmp
pop
xchg
lds
fwait
jecxz
leavew
mov
out
pop
push
xchg
mov
xchg
pop
adc
hlt
cmpsl
mov
push
mov
mov
adc
add
sbb
ds
or
lret
xchg
dec
xchg
lods
lods
jecxz
imul
stc
pop
insl
and
pop
lret
adc
push
mov
push
mov
outsb
out
jae
fbld
mov
or
fnstcw
sub
fsub
push
jle
imul
in
std
out
fmuls
xchg
jns
movsl
mov
divb
aaa
pop
jno
dec
jle
or
nop
mov
shr
jbe
xor
sbb
mov
fcmovb
jnp
and
subl
dec
cmc
fidivrl
add
clc
jne
mov
lcall
sub
pop
sbb
pop
adc
idivb
mov
outsb
sub
lahf
insl
jns
lcall
pop
jle
xchg
rorb
bound
clc
push
push
and
lock
daa
into
iret
mov
fdivr
rclb
push
jmp
inc
jae
bound
and
xchg
push
popa
xlat
xor
stos
andb
into
int3
fildl
push
or
fwait
push
in
lds
nop
cmpsl
std
outsl
movsb
test
and
lret
insb
mov
cmpsb
fisubs
xor
xchg
add
repnz
ret
cmp
add
xchg
xor
pop
into
jbe
pop
sti
adc
mov
jnp
sbb
addr16
inc
push
aas
dec
pop
pusha
out
jb
inc
dec
in
mov
fnsave
mov
mov
and
outsl
rorb
int3
mov
mov
add
mov
sbb
cmp
lods
xchg
out
loope
xchg
mov
inc
jo
cmpsb
dec
repz
cmp
mov
dec
mov
clc
xchg
xlat
leave
xor
incl
outsb
inc
adcl
push
pop
sub
mov
addr16
repz
loop
leave
pop
mov
and
icebp
or
sub
and
into
ds
xchg
movsb
pop
xchg
lds
xchg
jno
loop
sub
mov
jae
xchg
push
sbb
jno
ret
lods
jne
scas
xor
addl
pop
or
inc
ljmp
loop
jbe
nop
stc
mov
scas
insb
xor
pusha
dec
or
movsb
test
ret
test
mov
cmp
loop
mov
mov
jns
popf
in
inc
sub
dec
xchg
mov
push
push
sub
aaa
fsubrs
xchg
sarb
mov
test
js
movsl
jne
push
iret
aaa
and
decl
mov
in
sub
mov
pop
cmc
js
inc
lea
gs
push
jp
jo
dec
add
jmp
or
sub
inc
call
push
lock
in
lret
jo
test
stc
cmc
stos
cmp
cli
or
mov
call
daa
into
mov
and
xchg
aad
jo
mov
adc
or
in
jmp
clc
movsl
in
stos
enter
mov
dec
je
cltd
push
adc
loope
lret
mov
jo
js
lea
sbb
and
jecxz
jne
cmc
popa
ret
cld
xchg
dec
in
lcall
ss
ljmp
mov
cli
mov
test
imul
cmc
push
outsb
mov
fildll
fwait
and
out
pushf
rcrb
aaa
aad
cs
cs
jne
inc
daa
dec
mov
cmp
jne
cmp
lret
lock
nop
push
aaa
xor
es
lea
sbb
mov
push
push
adc
imul
jge
jp
or
push
cmpb
jns
leave
cmp
dec
loope
inc
sub
or
lret
std
fstl
mov
fsubl
and
cmp
call
sub
jns
cmpsb
and
pop
movl
and
jmp
jmp
ljmp
rorl
sub
dec
bound
scas
mov
jmp
mov
aad
sub
btc
and
inc
inc
xchg
test
stos
mov
mov
lock
jecxz
loope
mov
rclb
aas
cltd
xchg
mov
mov
movsb
pop
in
sahf
jl
ss
js
mov
xchg
push
jmp
rcll
in
mov
mov
inc
xchg
pop
mov
xlat
inc
push
mov
push
sbb
imul
aam
xchg
adc
dec
jecxz
pop
das
test
xor
jb
sub
sub
cmpsb
ret
xor
cmpsl
clc
clc
fisubl
scas
movsl
push
in
mov
mov
and
jecxz
dec
push
lcall
mov
sub
and
sbb
lret
imul
addr16
aas
pop
fistl
pop
in
or
fistpl
mov
lock
insb
out
xchg
outsl
adc
mov
add
inc
push
insl
aaa
mov
push
mov
inc
ljmp
inc
addr16
lahf
xlat
insb
movsl
in
lods
pushf
divb
cmp
das
and
jbe
mov
test
inc
ret
ss
inc
pushf
cwtl
js
push
dec
xor
sbb
fistpl
rolb
bound
into
insl
sub
stos
ret
add
aaa
flds
aaa
sbb
out
subb
push
popa
xchg
add
mov
pop
hlt
sbb
ficoms
ret
shrl
and
xor
mov
push
loop
data16
imul
cmpsb
nop
jo
mov
inc
pop
pop
dec
jmp
fwait
dec
and
ret
pop
mov
je
js
cld
mov
pop
sbb
fmull
cmpsl
negb
pop
adc
pusha
pop
xlat
outsb
fs
pop
mov
xorb
jae
lock
push
in
adc
jp
adc
mov
jnp
aad
cld
or
movzbl
insl
mov
movsb
jge
push
mov
xchg
sub
imul
mov
lea
inc
lahf
mov
mov
sbb
notl
cmpsb
test
mov
xor
xor
rcll
cli
les
and
push
test
ret
dec
xor
js
jbe
mov
mov
sti
sub
mov
fs
inc
mov
imull
repnz
dec
enter
jp
xchg
dec
out
clc
add
cmpsb
leave
frstor
mov
fiaddl
sti
mov
out
jne
cmpsb
bnd
sti
enter
test
stos
aad
mov
inc
jb
leave
in
push
jp
cmp
imul
mov
push
xor
out
and
fmull
add
cmp
fsubp
dec
xchg
inc
sahf
jmp
std
xor
cmp
das
cmpsl
cmpb
mov
jecxz
aam
stc
sub
adc
dec
lcall
adc
cmp
sub
mov
jns
outsl
push
mull
jg
or
icebp
push
inc
movsl
push
daa
or
repz
cs
ret
das
std
inc
jecxz
push
dec
aad
xchg
sarb
jae
pop
pop
flds
xchg
in
into
mov
sbb
in
or
add
arpl
dec
in
outsl
out
xlat
shrb
and
dec
lret
nop
roll
xor
mov
mov
add
cmp
adc
repnz
cmp
lea
adc
imul
cmpb
in
repz
rorb
xchg
jne
enter
repnz
mov
mov
mov
dec
jno
lods
jecxz
ficomps
pusha
push
jmp
in
adc
int3
mov
popa
lret
outsl
dec
or
cmp
jmp
pop
cwtl
popf
dec
jle
mov
ja
mov
jae
pop
imul
pop
adc
sbb
cmp
call
or
mov
vmovdqu
dec
cli
add
dec
test
xchg
lret
and
sub
das
orb
cli
lret
inc
inc
loop
xchg
cmp
fistps
push
int3
pop
mov
xorl
pop
lret
pop
mov
or
aam
push
ret
ds
adc
and
xchg
sbb
in
lret
hlt
jae
sbb
or
inc
dec
insb
imul
add
shr
pop
loopne
cmpb
push
bound
outsl
sub
pusha
push
mov
imul
xchg
lock
pop
ljmp
nop
shll
sbb
xor
aaa
ljmp
xchg
ljmp
out
cmp
jl
sbb
orl
dec
fstl
jmp
push
fsubrp
add
jp
inc
lods
or
xor
lahf
aaa
lret
mov
jb
test
cmp
div
test
repnz
inc
jl
xchg
push
sbb
push
mov
insb
lret
xchg
sub
gs
dec
dec
mov
inc
and
dec
call
test
rcl
js
rorl
aas
sahf
pusha
cmp
rclb
cli
cmp
fsubl
outsl
in
pop
testb
jl
mov
adc
mov
or
scas
jne
in
stos
mov
push
ja
pop
xchg
dec
cmc
jmp
mov
jge
daa
sbb
insb
int
fbld
hlt
popf
data16
or
push
rorl
inc
xor
jecxz
in
mov
push
pop
call
int3
iret
cmc
mov
or
and
insb
sub
push
push
push
sbb
fnstsw
bound
cli
cmp
pushf
aad
out
in
js
or
jecxz
popf
or
xchg
xor
and
inc
sbb
jl
pop
jns
mov
xchg
xchg
xchg
inc
call
cmp
daa
movsb
stos
das
push
cmp
mov
loope
faddl
or
push
repnz
dec
jo
insl
add
adc
or
lret
leave
popf
je
aas
fidivl
sub
mov
addr16
push
adc
inc
jne
sbbl
subl
or
sbb
pop
push
inc
pop
int
scas
fs
bound
xor
and
xchg
pop
fadds
inc
cmp
psubd
push
in
add
les
add
xor
ljmp
bound
adc
insb
jne
hlt
cmpsl
jo
xchg
test
cli
or
in
or
lods
lock
aaa
jo
hlt
test
stos
loopne
mov
jecxz
shll
jbe
roll
mov
lret
cmp
jnp
rorb
jg
xor
je
pop
ds
pop
pop
xchg
jmp
xchg
xchg
incl
mov
pop
push
rcrl
mov
mov
mov
cwtl
js
arpl
fldcw
sar
stos
mov
mov
enter
notb
xor
xchg
pop
or
dec
jle
xor
sub
ficoml
int3
inc
xchg
adc
push
dec
repnz
adc
dec
stos
xor
fs
clc
leave
out
mov
inc
push
je
jne
les
add
inc
iret
inc
int
jbe
push
lods
jne
jo
fisubs
mov
and
dec
mov
push
jno
dec
mov
cmc
shll
adc
add
js
dec
push
pop
mov
out
lods
jmp
adc
jnp
imul
mov
scas
mov
pusha
iret
dec
jns
mov
mov
lahf
sub
pushf
xlat
add
insb
add
lcall
or
pop
leave
gs
push
imul
dec
arpl
test
inc
std
int3
sub
sbb
lcall
pop
mov
movsb
mov
shrb
xchg
jno
push
mov
sbb
jmp
sbbb
xor
xchg
cmpsl
stos
test
adc
iret
xor
xor
xchg
hlt
pslld
mov
xchg
scas
lea
push
idivb
movl
popa
sbb
inc
in
push
add
sub
adc
imul
cmpsl
adc
sbb
out
aaa
flds
jae
push
addr16
ret
pop
push
push
in
test
xchg
test
push
add
xchg
int3
inc
outsl
in
cmp
fcoml
push
jl
ficompl
scas
xor
push
outsl
push
mov
mov
das
lods
inc
pop
in
hlt
push
testb
push
loopne
or
mov
stos
dec
ds
or
movsl
imul
mov
mov
xor
sar
jnp
lret
adc
lahf
push
dec
or
addb
add
fsubl
repz
push
int3
mov
pusha
sub
insl
cmpsl
ja
dec
cmp
neg
adc
mov
xor
jbe
xchg
lods
mov
xor
mov
imul
test
fstpt
or
mov
add
mov
lock
xchg
add
mov
rcrb
repz
adc
mov
fisttps
ficoms
ljmp
stos
push
mov
and
imul
cmpsb
pop
jge
inc
sbb
dec
cmpb
or
xchg
in
rcrl
aaa
aaa
or
cmp
dec
mov
sahf
jb
arpl
pushf
sub
dec
mov
test
jae
orb
cmp
insb
dec
ja
dec
jle
sbb
cld
aad
scas
inc
call
mov
cmp
xor
cmp
cld
fnsave
sub
and
aad
cld
in
jne
rorl
dec
sbb
pop
inc
loope
not
sub
scas
in
mov
inc
insl
gs
push
inc
pop
shlb
jg
xor
dec
jmp
mov
sahf
inc
mov
push
push
push
adc
push
es
mov
gs
mov
sbb
xor
sbb
sbb
and
aam
xchg
mov
cmp
mov
and
fcomi
les
push
push
push
dec
adcl
pop
adc
jp
xchg
mov
lods
pop
sbb
xchg
add
fst
jae
adc
cmc
mov
nop
mov
xor
mov
es
loopne
xchg
std
iret
imul
aad
mov
or
xchg
xor
std
pop
sarb
jl
mov
cltd
cmp
xchg
xor
cmp
or
int
loopne
nop
inc
sub
inc
scas
addl
jecxz
mov
cmp
push
inc
mov
mov
jb
pop
xchg
sbb
mov
mov
mov
xor
cld
sub
fldt
inc
lods
pop
add
fnstsw
jne
cli
clc
filds
mov
pop
dec
dec
rorb
insb
push
rcl
push
lock
push
sub
pop
sbb
fwait
jp
push
rcr
jg
or
outsl
cltd
mov
lret
mov
jp
xchg
int3
pop
and
mov
add
cmp
popa
icebp
mov
fdivrp
test
pusha
pushf
out
add
repnz
lods
fimuls
stos
lea
arpl
jae
lods
ljmp
pop
cld
pop
stc
aaa
cmp
adc
in
pop
lcall
int
in
fsubrl
orb
sbb
add
inc
ss
xchg
mov
inc
popf
filds
dec
es
or
add
xor
out
mov
or
cli
xchg
adc
push
fsubr
in
push
dec
mov
xchg
dec
loope
sahf
pop
outsl
add
flds
mov
mov
and
pop
mull
popa
arpl
je
push
dec
push
or
xchg
insl
adc
jge
mov
mov
ret
sbbb
stos
mov
and
add
push
cmp
cmp
mov
adc
shlb
xor
and
imul
mov
adc
sub
es
push
xorb
push
or
push
push
pusha
sbb
addr16
xchg
xlat
pop
es
fsubl
mov
popa
hlt
push
jbe
repz
mov
push
lret
jb
bound
xchg
or
pop
rorb
jp
push
lcall
and
push
lret
jb
bound
xchg
or
pop
rorb
jp
push
lcall
and
lret
jae
bound
xchg
or
pop
rorl
jp
push
lcall
ficoml
ret
ljmp
mov
aad
pop
cmp
xchg
inc
jno
stc
sahf
jmp
or
into
or
dec
and
imul
dec
sub
mov
jmp
out
mov
cmp
cs
imul
cmp
dec
add
das
xchg
mov
shl
push
aam
frstor
push
cmp
push
add
pop
dec
cwtl
mov
sahf
add
mov
mov
movsl
jbe
loop
ret
push
jl
sbb
rcll
jb
jne
adc
mov
orb
sti
cwtl
cmp
inc
fldcw
stc
shrl
test
out
int
xchg
and
mov
xchg
mov
outsb
test
mov
mov
test
jbe
mov
outsb
sbb
imul
or
pop
xchg
push
popa
sub
fimuls
adc
mov
iret
cltd
mov
xchg
push
ljmp
mov
mov
dec
push
sahf
dec
inc
adc
jno
cmp
push
inc
mov
or
pushf
sub
cmp
mov
test
adc
stos
mov
popw
jns
pop
dec
sub
lahf
xchg
stos
mov
mov
sub
popa
jo
addr16
fld
inc
scas
mov
call
mov
sbb
add
add
sub
ljmp
out
mov
ds
jns,pn
imul
cmp
dec
fnstcw
jmp
out
mov
ds
jns,pn
imul
cmp
dec
fnstcw
mov
aad
out
fldenv
sbb
mov
lea
inc
push
jae
adc
sub
aas
sbb
jo
out
cmp
jae
mov
push
scas
mov
shlb
faddl
jg
daa
sarb
jge
mov
adc
sbb
jne
xchg
add
nop
js
push
pusha
lods
mov
sub
mov
lcall
cmc
and
aam
test
jbe
in
dec
jp
inc
ljmp
lret
xchg
xorl
rolb
and
negb
sbb
cwtl
test
xor
mov
movsb
sbb
out
mov
ljmp
mov
pop
xchg
fisubs
sub
dec
lock
clc
add
add
mov
out
cltd
lahf
andl
repz
cltd
orl
in
mov
in
inc
xlat
push
adc
aam
sub
fldt
fstpt
or
loop
out
push
rcrl
mov
sahf
or
pop
std
mov
out
mov
mov
mov
push
jbe
jne
inc
or
xor
aas
loope
ljmp
scas
dec
test
je
int
cmp
push
jb
inc
es
daa
pop
test
test
mov
sub
dec
push
fsub
dec
jle
or
xor
cmp
in
adc
jno
pop
out
jge
popf
test
and
sbb
jnp
adc
push
in
dec
cmp
pop
not
adc
adc
mov
sub
mov
aad
clc
daa
jo
pop
rolb
add
push
mov
xor
push
stos
mov
cld
mov
test
mov
insl
push
std
ds
in
aad
jp
imul
sbb
mov
pop
aam
mov
jns
orl
xor
mov
sar
add
pop
jmp
cli
or
mov
pop
sbb
mov
mov
mov
sbb
cli
or
mov
jmp
push
out
popf
test
sbb
jnp
loopne
xor
xor
adc
test
xor
fwait
and
mov
lret
arpl
out
aas
prefetch
xchg
int
mov
test
or
sti
sbbb
or
insl
lock
lret
lods
pop
cld
dec
push
nop
push
cltd
jae
mov
gs
mov
sub
fwait
xchg
divps
std
scas
and
jae
sub
shlb
inc
sbb
addr16
push
and
mov
dec
movsb
push
jae
push
aam
fistpll
mov
and
in
call
or
dec
sub
pop
int
mov
push
or
clc
pop
gs
mov
rorb
sub
xor
rolb
int3
or
sahf
jmp
mov
arpl
xor
inc
add
addr16
daa
aas
leave
rcll
push
ja
lods
cmpsb
or
nop
fdivl
test
pop
jns
adc
vaddsd
sbb
es
dec
and
popa
xor
mov
test
xchg
xor
lahf
test
in
push
rcrl
cmp
outsb
jo
addb
popa
pop
push
xchg
jp
jl
mull
pop
popw
mov
dec
inc
xor
push
and
lret
mov
ret
cld
mov
int3
sahf
mov
xor
cmp
out
adc
testl
insl
add
push
add
or
jno
push
lret
mov
stos
scas
dec
push
mov
cmc
mov
or
in
rcr
cmp
lret
rorb
stc
dec
lcall
test
sbb
fsts
cmpsb
mov
add
xor
mov
pop
loope
out
cs
xchg
add
push
movsl
dec
sub
sub
in
test
mov
jne
leave
cli
xor
insl
push
pop
mov
cli
insl
das
arpl
mov
fisttps
js
xchg
and
pop
in
xor
icebp
stos
popf
fiadds
ljmp
dec
add
add
push
test
push
inc
ss
xor
push
xor
or
test
dec
cs
fs
jnp
in
iret
add
add
mov
cmp
lahf
std
addb
shrl
iret
jnp
out
fidivl
mov
cld
je
sbb
mov
popa
xor
outsb
mov
jmp
cltd
mov
ljmp
aaa
retw
movsb
xchg
sub
ss
add
test
push
or
les
add
out
push
xchg
fisubrs
test
mov
xor
mov
xchg
nop
jns
xorl
or
ja
aas
mov
sbb
pop
int3
pop
clc
jns
aam
pop
mov
ret
arpl
or
enter
sbbl
lahf
and
xor
xor
sub
push
in
dec
ds
and
test
push
jmp
mov
sahf
xor
imul
xchg
loope
inc
daa
inc
push
jge
outsb
mov
xor
cmp
sbb
arpl
dec
cmc
mov
and
mov
mov
xchg
outsb
cltd
stos
adc
arpl
loope
fcomi
out
cmp
add
notb
dec
sbb
insb
fbstp
outsb
stos
stc
mov
push
fptan
jo
in
imul
std
push
pop
pop
bnd
pop
pop
fdivrs
loope
sub
jp
adc
mov
jo
mov
shlb
mov
adc
es
les
dec
lods
mov
mov
or
test
dec
cmp
ret
xor
fstpl
clc
or
and
ljmp
adc
sbb
sub
cld
dec
setge
mov
mov
ds
push
arpl
xchg
inc
orl
add
and
inc
xor
out
addr16
andb
sub
jge
xchg
icebp
faddl
dec
outsl
daa
push
add
cltd
pop
fbstp
pusha
jb
push
jmp
std
clc
xor
out
stc
or
pop
movsl
push
leave
add
loop
xor
insl
jnp,pn
clc
xorb
fcmovne
stc
pop
xchg
jge
ds
shll
popa
stos
hlt
push
not
stc
inc
cs
insl
fistl
add
and
aaa
inc
int
or
shl
mov
aam
ret
inc
sub
iret
fildll
je
aam
data16
in
sti
mov
sub
add
ljmp
into
jb
jge
lahf
xchg
jno
mov
aaa
dec
loope
test
cmp
mov
jo
out
and
cli
mov
mov
mov
iret
cltd
mov
inc
push
cmpsb
sbb
insb
subb
cmp
movsb
les
test
imull
nop
mov
popf
sub
mov
push
sub
int3
sub
out
sub
icebp
xchg
inc
cld
dec
sub
mov
pop
cmp
shll
lcall
pusha
pop
leave
sub
gs
and
aas
cwtl
dec
scas
loope
cmp
filds
sbbl
les
or
rolb
or
xor
rclb
enter
mov
lret
cmpsb
mov
dec
adc
test
pop
shl
pusha
dec
mov
lahf
or
mov
fs
mov
pop
test
scas
lahf
ds
in
jno
cmp
fisubrl
sub
out
mov
dec
int3
testb
outsl
sahf
or
push
lcall
dec
mov
adc
fwait
out
xlat
movsl
test
sbb
jle
inc
adc
jp
push
das
adc
xchg
jb
aam
pop
arpl
les
push
outsl
cmp
push
sarb
std
out
popf
add
cmpsb
jb
adc
cmp
int
sub
and
stos
mov
lock
nop
pop
loope
push
movsb
or
push
popf
mov
push
into
cs
and
cmp
sahf
enter
shll
mov
and
repnz
mov
xor
aaa
fwait
insl
dec
repz
out
dec
repnz
inc
add
inc
cld
popf
pusha
leave
push
mov
or
mov
pop
test
dec
xchg
xor
jb
iret
jne
fs
mov
cmp
jns
js
inc
ds
icebp
inc
insl
iret
and
xor
push
and
sbb
repz
lea
and
inc
sarb
push
cmp
mov
daa
push
and
sub
jo
mov
mov
jae
les
sahf
loopne
adc
stos
inc
xlat
push
push
pushf
sub
xchg
aam
xor
xchg
xchg
sub
xchg
add
lods
gs
rcrb
xor
in
jns
lahf
arpl
pop
call
cmpsb
data16
out
mov
mov
sub
cmpsl
and
push
push
out
popa
jge
cvttps2pi
sub
jge
fistpl
in
loopne
dec
cmp
out
loopne
add
pop
push
xchg
xor
aas
movsb
mov
xchg
outsl
jnp
stos
fistpll
xorl
sbb
pop
push
mov
sahf
ja
push
sub
enter
movsl
movsl
cmp
and
popf
mov
adc
push
or
aam
xchg
or
sbb
rcll
and
divl
ja
clc
xchg
mov
cmc
inc
jmp
and
sbb
outsb
dec
test
push
out
in
pop
mov
jae
mov
pop
xlat
jecxz
repnz
jge
inc
and
push
out
int3
movsl
jge
es
mov
pop
and
add
jns
or
jecxz
xor
test
in
loopne
rorb
fisttps
lods
lret
xchg
ljmp
je
jnp
pop
sbb
testl
mov
aad
cmp
jecxz
mov
fstpt
add
sub
xchg
lods
adc
and
loope
sbb
xchg
imul
mov
and
aad
sub
mov
icebp
fucom
pop
out
dec
inc
ljmp
sti
shrb
mov
or
lock
pop
repnz
jae
lds
fcos
push
pop
js
shrl
inc
popa
inc
icebp
mov
insb
cmpsl
gs
cmp
add
cmc
push
mov
repz
cwtl
jge
jne
jnp
push
xchg
inc
mov
push
mov
inc
aam
push
inc
mov
mov
mov
scas
inc
cmp
sub
jg
add
inc
outsb
sub
imul
dec
shll
cmc
in
jl
das
gs
and
cmp
out
in
sub
or
push
mov
repnz
das
arpl
xor
popa
push
jle
bnd
imul
outsl
call
jle
dec
sbb
adcl
sahf
das
pop
cmp
mov
ret
mov
push
mov
int
xchg
out
and
stc
jae
call
or
lods
mov
stos
mov
cmp
dec
jmp
fstl
and
xor
dec
xchg
in
cs
cmp
fs
pop
and
push
adc
or
jl
aad
push
jae
sti
rorl
pop
bound
lret
aas
nop
lret
imulb
mov
movsb
mov
xor
xchg
jecxz
cmp
je
andb
jecxz
fwait
xchg
inc
stos
int
jne
in
jo
repz
out
xchg
imul
sbb
jecxz
and
in
mov
ljmp
cmp
push
mov
add
mov
mov
pop
je
sti
jnp
jnp
cmp
adc
xor
push
sbb
cmp
inc
adc
dec
xchg
lret
mov
adc
cmp
test
daa
enter
jge
out
ret
loop
pusha
or
shlb
adc
dec
rcll
cmp
fildll
iret
mov
push
dec
or
ljmp
and
mov
dec
leave
pop
xchg
cmp
mov
les
adc
in
lahf
or
lahf
jno
inc
and
fbld
shrl
cwtl
xor
scas
jns
das
fistps
pusha
push
mov
dec
pop
or
cmpsl
mov
pusha
add
mov
outsl
mov
std
outsl
xchg
add
arpl
add
add
shlb
cwtl
cmpsb
adc
xchg
jg
xchg
orl
and
test
dec
sub
add
mov
ds
inc
jo
lock
jae
and
cmc
inc
das
iret
cs
rcrb
jle
pop
fimuls
add
mov
iret
test
pushf
repz
mov
pop
inc
fisubl
cld
cmp
push
sbb
ret
cmp
imul
pop
add
daa
and
in
add
aas
dec
mov
jle
xchg
adc
sub
in
jl
int3
lcall
jge
mov
in
loope
out
lds
andl
imul
lea
push
pop
xchg
int3
out
jb
mov
pop
dec
inc
cltd
rcll
stc
mov
push
mov
shll
mov
xchg
push
fbstp
lock
pop
sbb
fldt
stos
nop
inc
subb
data16
es
testb
mov
ret
call
inc
mov
adc
add
bnd
fstpl
imul
xor
inc
fcmove
pop
outsb
aad
and
out
push
sub
cli
and
add
lahf
inc
andl
and
ret
out
hlt
out
ja
inc
fld
sbb
push
sarb
push
or
cmp
sahf
or
ret
pop
stc
push
xchg
mov
push
scas
movsl
cmp
inc
adc
gs
jbe
sub
or
pop
cli
lods
jne
shr
inc
mov
js
lcall
sbb
pminub
scas
mov
shll
dec
mov
std
inc
cmp
dec
dec
ret
mov
ds
xchg
cwtl
sub
ljmp
add
sarb
inc
xorb
sub
jb
ret
jle
cmp
add
xor
mov
nop
insl
sub
and
pop
ret
cmp
stc
scas
mov
cmpsb
lret
sbb
das
je,pn
adc
dec
js
aam
or
push
mov
sub
mov
loop
and
lds
inc
loop
cltd
dec
imul
int
pop
ds
inc
fldcw
leave
and
sub
inc
das
xor
lods
cmp
les
add
std
dec
or
push
call
adc
mov
inc
adc
xlat
xor
je
sbb
jo
jmp
shll
leave
cli
pop
mov
insl
sti
push
pop
repnz
dec
mov
pop
push
loopne
and
xchg
fs
jae
loop
sub
push
mov
mov
dec
movsb
cmp
jnp
xor
nop
jecxz
cmp
bnd
bound
add
dec
pop
adc
sti
jae
dec
addr16
lods
pop
out
jo
aam
pop
jnp
sahf
inc
out
in
adc
mov
lea
mov
ja
sub
lods
jns
push
push
push
pop
outsl
outsb
ljmp
pop
in
mov
dec
lret
or
shll
cmpsl
in
xor
ljmp
test
or
xor
sbb
test
and
xchg
mov
xor
mov
push
sti
rol
cmp
mov
mov
lret
jno
mov
xchg
push
adc
pushl
daa
jbe
pop
das
sbb
sti
dec
mov
icebp
movsb
pop
outsl
lret
inc
ret
out
shlb
pop
jb
imul
sub
das
aam
cltd
jecxz
out
fsubr
cli
fisttpl
sub
imul
inc
mov
lahf
cmp
and
and
mov
test
push
sti
cs
sub
addb
aaa
shl
xchg
testl
cld
out
and
xor
or
pop
add
pop
push
repz
jp
clc
mov
ret
mov
mov
push
out
popf
icebp
sub
std
mov
push
pop
dec
and
fcmovnb
inc
lds
mov
aam
filds
scas
and
aad
movlps
int3
shr
cmpsb
lock
and
push
addr16
sahf
add
xchg
loope
adc
lret
aas
insb
jmp
mov
das
repnz
xchg
mov
stos
cli
push
xor
les
jl
pop
mov
adc
mov
cs
pop
pop
sub
ret
test
jmp
insb
pop
les
cs
addr16
sahf
shlb
les
mov
out
jecxz
rolb
ds
loopne
shlb
mov
xchg
aad
mov
adc
test
sbb
sub
xchg
cmpl
jne
xor
jle
push
and
test
insb
icebp
jo
pop
cltd
das
je
cmp
or
int
add
add
cmc
in
jne
push
stos
loope
push
fmull
andb
dec
loop
add
mov
sti
inc
aam
cltd
push
imul
jnp
les
mov
ret
add
out
insl
fldl
clc
cltd
data16
fs
pop
or
jae
repz
ljmp
add
add
cld
sub
inc
pushl
inc
jl
dec
in
jl
outsl
cmp
pop
push
out
das
mov
frstor
adc
rorl
fdivr
loopne
sbb
loopne
pop
icebp
insl
lock
and
pop
mov
imul
stos
push
hlt
daa
dec
jns
fiaddl
adc
inc
xlat
fildl
sbb
repz
cmpsl
cld
sbb
pop
stos
adc
pop
xor
cmc
imul
movsl
or
notl
test
xor
shrl
hlt
mov
mov
xorl
sub
mov
ret
push
mov
jecxz
cmp
mov
inc
jg
ja
add
sti
sbb
add
sub
repnz
xor
jnp
push
inc
and
mov
sub
outsb
cmp
inc
sysenter
jne
and
ss
hlt
or
or
pushf
jns
stc
sub
mov
sti
out
movl
es
repnz
out
faddl
pop
xchg
sti
in
jmp
cli
adc
jg
add
orb
lcall
ror
dec
leave
pop
leave
jb
popa
cmc
mov
sahf
inc
xchg
out
add
cmp
jb
adc
push
pop
adcl
out
cmp
pop
dec
xor
rolb
mov
and
movsb
mov
hlt
xor
arpl
popl
jl
pop
sbb
subb
jo
adc
cmp
in
pop
push
jl
pop
out
std
xlat
pop
hlt
jl
cmp
lds
fadds
and
xor
sahf
sahf
pop
pop
outsb
in
aaa
ja
jl
pop
dec
add
shl
or
adc
imulb
mov
mov
rcr
push
and
pop
xchg
cmp
rcl
and
jbe
popa
cltd
add
outsl
hlt
xchg
outsb
pop
out
sub
lahf
lahf
add
and
pop
popl
adc
lea
inc
mull
test
inc
ljmp
cmp
xlat
ja
aam
lock
sarb
sahf
jnp
cld
aad
sub
insb
push
enter
mul
clc
pop
mov
loopne
sahf
add
cmp
adc
js
adc
or
adc
nop
add
jge
push
call
jne
std
dec
mov
cmp
das
mov
aas
shlb
mov
sub
fs
lret
adc
je
cmp
cmp
sbb
mov
mov
ds
std
sbb
clc
jp
add
into
jge
adc
aam
jecxz
cmpsl
pop
gs
jecxz
jo
dec
ljmp
jno
loopne
sub
push
out
mov
cltd
jb
sbb
cmp
mov
imull
fs
hlt
fsubl
cld
sub
insb
pushf
mov
adc
rcrl
sbb
ror
inc
mov
xchg
sahf
sbb
lcall
inc
and
pop
push
out
in
sbb
push
jno
inc
pop
repnz
mov
pusha
sub
arpl
xchg
sahf
mov
into
mov
or
aaa
pop
ja
or
mov
mov
pop
iret
rorl
inc
mov
xchg
mov
mov
insb
sbb
pop
pop
lea
adc
jmp
fisubrs
dec
mov
fisubs
fnstsw
push
popf
add
xchg
or
cmp
aad
sub
or
and
fs
jecxz
mov
inc
ds
daa
sbb
xlat
cs
in
sub
sbb
outsl
lret
shrl
jnp
shrb
sar
or
and
jge
aad
imul
stc
push
decb
cltd
jge
mov
sbb
movsl
add
sub
cmp
mov
lea
subb
imul
or
xchg
cmp
int3
outsb
int
jne
scas
push
inc
out
std
jno
mov
fisubrs
jns,pn
imul
cmp
dec
fnstcw
jmp
out
mov
ds
jns,pn
imul
cmp
dec
fnstcw
jmp
out
mov
ds
jo,pn
insl
nopl
outsb
cmp
mov
rorl
fisubrs
into
pop
ds
rcrl
imul
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
popf
aam
test
or
add
add
add
push
add
pop
add
inc
add
pop
add
add
add
add
push
add
add
inc
add
add
sbb
push
add
add
pop
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
push
add
add
add
add
addl
loop
test
add
outsl
add
add
add
add
movl
pop
add
sbb
and
sub
mov
add
add
add
add
add
and
ltr
add
add
or
in
add
add
push
add
add
add
push
add
addb
add
add
add
pop
add
add
add
add
fiaddl
jle
push
add
add
or
in
std
add
add
xchg
add
add
add
add
add
add
add
add
addb
add
add
add
imul
les
push
add
add
jmp
nop
add
push
add
add
add
xor
adc
add
inc
add
pusha
add
add
add
add
add
add
mov
add
gs
add
add
les
cmp
xchg
mov
add
add
add
add
add
movl
adc
add
dec
add
daa
add
add
mov
add
add
insb
add
sahf
add
jg
lcall
add
add
push
add
push
add
add
xchg
add
jle
ret
add
add
add
add
add
add
add
add
addl
cmp
bound
push
add
add
add
add
add
add
add
insl
add
add
add
les
xor
mov
add
pop
add
add
add
add
add
lret
add
pusha
add
popl
fiaddl
xor
mov
imul
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
add
loop
fiaddl
fwait
add
add
add
push
add
inc
add
add
add
add
push
add
pop
add
imul
add
add
add
add
add
add
add
add
addl
bound
sub
add
push
or
add
add
add
add
imul
add
in
add
imul
add
add
add
jge
push
add
add
add
add
add
add
jge
ja
cmp
in
add
dec
add
add
add
add
add
lcall
add
push
add
pop
add
add
add
outsl
add
lea
les
lret
add
add
add
add
add
insl
add
sub
movsb
add
add
add
add
add
add
movsb
add
add
add
add
add
add
add
add
movsb
add
cmp
adc
push
add
fiaddl
inc
add
or
add
add
sar
fdivs
sahf
mov
mov
mov
scas
sahf
mov
push
sub
mov
addr16
jne
inc
addr16
idiv
jmp
icebp
add
mov
arpl
lret
mov
adc
cmp
mov
pop
xlat
jecxz
pop
jno
adc
stos
sahf
fidivl
sub
mov
pop
mov
xor
daa
push
ret
test
xchg
les
add
xor
jns
and
outsl
roll
shlb
stc
pop
xchg
das
cmp
cmp
popf
dec
or
insl
imul
mov
xor
xchg
not
out
adc
jns
sub
or
rorl
cmp
cs
mov
into
mov
add
adc
jbe
inc
sub
mov
xchg
or
or
call
rcrl
xorb
nop
out
xchg
and
push
adc
movl
pop
and
test
push
mov
xor
adc
frstor
pop
dec
push
lret
fdivl
xor
ljmp
sbb
lcall
mov
cmp
mov
popa
cli
fisttpll
in
aaa
jno
enter
frstor
cmp
sbb
fidivs
jne
push
xchg
lcall
dec
rcrl
daa
pop
fists
jmp
ja
push
pusha
dec
insb
loope
shll
mov
sub
movsl
pop
pop
xchg
in
pop
movsl
test
in
cmp
or
dec
sahf
or
cmp
icebp
out
sub
push
gs
mov
mov
pop
push
mov
jp
adc
test
rclb
mov
shr
cmp
inc
inc
jne
pop
xor
out
in
ret
fadd
mov
inc
inc
xor
jnp
icebp
pop
xchg
dec
mov
mov
mov
orb
mov
mov
inc
std
push
aas
xlat
rclb
cld
ret
loope
leavew
mov
fstpl
sub
sti
pusha
mov
adc
leave
lock
lods
mull
push
jns
push
cs
aaa
jp
ret
lret
daa
xor
jb
cmpsb
daa
sub
mov
adc
push
mov
or
xor
test
sahf
pop
mov
roll
push
cmpsl
lods
xchg
outsb
adc
xor
sub
jnp
push
inc
jmp
and
cmp
push
jl
insl
imul
push
xor
sbb
and
imul
imul
loop
or
xor
pop
and
jle
and
pop
dec
sbb
aaa
sub
xchg
pop
pop
dec
pushf
fs
filds
pop
or
daa
cmp
xchg
pop
flds
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
