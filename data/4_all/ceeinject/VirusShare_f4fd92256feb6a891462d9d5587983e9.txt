call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
popf
imul
pop
cwtl
or
pop
xchg
push
mulb
push
fldl
test
push
daa
lea
popf
shrb
jge
dec
negl
sub
mov
dec
in
push
std
add
mov
pop
adcl
daa
lea
popf
fmulp
into
mov
sahf
sbb
mov
fimuls
lods
add
push
lcall
mov
xlat
cmp
push
cltd
cmp
mov
mov
fwait
ss
jmp
das
jb
outsb
pop
mov
inc
cmp
push
bnd
mov
test
cwtl
xor
mov
push
mov
and
adc
lods
leave
rcll
inc
in
test
aaa
int3
mov
clc
pop
push
inc
lea
pop
pop
insl
jge
dec
jl
mov
int
nop
jae
aas
sbb
cmpb
loope
mov
andl
int3
cmpsl
loope
into
test
jb
ja
lods
push
test
fmulp
adc
xchg
xlat
subb
sbb
inc
jge
sbb
mov
jbe
mov
aaa
testl
cmp
pop
xchg
sub
scas
pop
in
dec
push
jg
outsb
loope
xchg
rcpps
xchg
cs
mov
mov
andb
xor
mov
push
movsl
js
pop
xor
sbb
inc
stc
push
hlt
sub
cmp
jg
outsl
lret
fs
mov
and
fs
scas
push
in
andb
xor
popa
xchg
cmp
inc
in
push
std
addr16
fldl
lods
pop
mov
insl
xlat
jge
dec
negl
sub
mov
inc
in
push
std
addr16
fldl
lods
pop
mov
insl
adc
mov
dec
mov
and
and
cltd
pop
inc
dec
mov
aad
lcall
adc
insb
stos
inc
stc
sub
in
or
cmp
cmp
rolb
das
mov
sub
jae
pop
bnd
push
jge
stc
fdivrl
sbbl
sub
adc
xchg
aad
fimuls
mov
adc
jno
cs
sbb
adc
jbe
lret
sti
sub
push
pop
fimull
or
add
jo
rcr
push
lds
xor
rorb
loope
jae
push
adc
adc
jnp
lock
stc
inc
fs
cld
hlt
sub
cmp
dec
es
test
mov
adc
cltd
iret
sbb
adc
cmp
icebp
mov
and
dec
fs
jno
call
mov
xchg
mov
xchg
insb
pop
and
insb
jne
enter
pusha
test
in
and
mov
test
mov
cmc
mov
xor
and
bound
repnz
and
pop
bound
xchg
adcb
add
fisttpll
rolb
test
or
js
sti
je
popf
aaa
jnp
out
insl
lret
inc
or
dec
fldcw
xchg
xchg
pop
cli
pop
filds
jmp
or
stc
push
sbb
stos
and
loope
inc
or
inc
xor
ret
shl
xor
mov
mov
xor
add
push
adc
add
and
adcb
mov
cld
sbbl
in
pusha
fisubrs
inc
or
testl
inc
mov
xor
dec
push
xchg
aaa
hlt
repnz
fsub
call
jecxz
fidivrs
add
mov
add
inc
mov
jne
int3
add
cmp
and
js
scas
icebp
mov
les
data16
jge
ret
lock
in
pop
xchg
scas
jbe
jl
mov
test
jb
mov
out
xor
js
jb
push
xchg
lods
dec
xchg
imul
lds
jno
mov
dec
cmp
jge
das
pop
fcompl
jne
push
xchg
push
sub
jg
push
loopne
jae
xchg
inc
stos
int
cltd
mov
mov
xchg
push
adc
in
mov
push
pop
mov
mov
ss
sub
pushf
loope
inc
test
imul
mull
test
mov
clc
fldenv
loopne
mov
call
or
or
adc
incb
ficompl
xchg
insl
lods
stc
les
sahf
mov
arpl
mov
jp
sbb
adc
push
adcl
or
xchg
lcall
scas
lahf
andb
ret
push
jg
mov
xchg
in
jmp
out
imul
jns
popa
out
lock
dec
lcall
jbe
aad
mov
fs
mov
adc
je
fmuls
jecxz
scas
dec
test
xor
pop
cmc
repnz
or
lods
xor
mov
push
dec
jb
add
mov
and
fistps
rcr
cld
cmp
cmpsb
mov
cwtl
clc
stos
das
sbb
jne
jne
pop
push
dec
inc
imul
pushl
fldt
mov
stos
adc
test
xor
push
stos
cmpl
mov
jb
cmc
jo
out
scas
iret
fists
mov
sbb
ja
out
es
pushf
dec
sbb
cltd
push
test
dec
sbb
mov
movsl
dec
pop
and
dec
cmc
jns
and
mov
imul
dec
lock
rorl
icebp
dec
stos
nop
xor
outsb
addr16
out
loopne
sbb
pop
push
mov
mov
fs
adc
ds
sti
cltd
lea
and
in
aam
xor
push
inc
push
hlt
imul
and
andb
dec
xor
add
ret
inc
xchg
sbb
inc
das
shlb
lds
pop
xor
jle
inc
scas
adc
sbb
pop
imul
sub
pop
addb
xlat
pop
dec
inc
popa
shlb
sbb
adc
add
jne
into
in
stos
mov
movsl
fwait
lods
fiaddl
outsb
mov
adc
rcrb
mov
xor
cltd
mov
sbb
xor
aam
loop
sbb
cmp
sbb
sub
rcrb
dec
adc
aaa
and
dec
xchg
push
mov
movsl
jae
xlat
push
int
add
and
mov
xchg
mov
insb
leave
mov
pop
popa
pop
and
call
cmp
arpl
or
sbb
cmpsl
aam
push
aam
xchg
lock
stos
pop
and
adc
hlt
jmp
jb
addr16
arpl
and
loope
fs
mov
xchg
daa
jmp
test
jne
imul
xor
lahf
fnstenv
enter
into
inc
decl
in
mov
fsubl
sub
test
lret
xchg
test
mov
jo
rclb
ss
repz
iret
dec
jmp
roll
jb
loop
in
test
hlt
out
push
js
dec
add
shlb
mov
shrl
cmpsb
xor
outsl
gs
or
push
sub
jg
adc
adcb
sbb
push
dec
pop
xchg
in
cmp
jae
pop
cmp
dec
xchg
push
xchg
js
add
add
jb
cmp
outsl
insb
xor
imul
xor
adc
mov
xchg
jne
adc
jge
ret
pop
js
cmp
fs
dec
pushf
mov
jbe
dec
mov
xchg
pop
xor
mov
mov
add
sub
push
add
jecxz
int
test
aad
xchg
outsb
mov
pop
jge
std
pop
addb
dec
fsubp
adc
jecxz
je
mov
leave
aad
cli
inc
xchg
and
inc
in
addr16
pop
aam
cmp
push
dec
clc
pop
ss
push
xchg
dec
cltd
lods
push
mov
jecxz
lret
cmpsb
leave
popa
int3
ret
cmp
dec
fldt
sbb
out
pushl
fcomps
leave
pop
pop
lret
jae
fldenv
xchg
hlt
jae
rcl
sub
pop
pop
mov
mov
loop
add
divl
cmpb
push
mov
les
or
out
ljmp
push
loopne
mov
dec
xchg
dec
dec
push
jne
cmp
cmpl
testl
dec
cs
pop
pop
inc
xchg
push
adc
rorb
das
nop
ja
mov
cltd
and
sti
mov
in
das
mov
cmp
inc
sub
in
lods
and
rclb
fdivp
loope
or
bound
repnz
push
ljmp
arpl
and
bound
orb
mov
lretw
pop
jle
jmp
pusha
cmp
mov
pop
or
or
push
or
xor
sub
cmp
jb
stc
sub
cmpsl
pop
ss
addl
or
fmulp
xchg
push
inc
adc
shl
add
stos
lods
mov
in
js
add
sbb
test
shll
cmpsl
je
cld
paddd
jb
out
push
ret
subb
sbb
dec
lret
sub
imul
ret
rolb
inc
xchg
cwtl
insb
test
ja
mov
sbb
mov
aam
cmc
shlb
lods
adc
xor
adc
leave
mov
push
cmc
and
in
scas
mov
stos
jns
stc
rcrb
mov
lret
sub
mov
push
rolb
add
or
mov
rclb
sub
test
daa
popa
cmp
call
and
cmp
jmp
inc
xchg
mov
add
inc
xor
shrl
ficoms
mov
mov
in
fisubs
jns
jmp
jb
xchg
outsb
fidivrs
cmp
aad
out
aam
push
sub
add
stc
repz
leave
andl
jge
jg
fcoms
mov
or
mov
cmp
repnz
sub
das
aaa
movl
pop
mov
or
rcr
mov
or
and
push
inc
jne
add
pop
jmp
test
push
push
hlt
push
insb
cmpsb
bound
daa
push
rcpps
roll
out
cmp
cmp
mov
and
cmpl
in
mov
cld
inc
rcrl
shlb
dec
inc
or
sbb
pop
dec
pusha
cmp
add
xorl
sarb
jmp
jbe
mov
or
aas
lock
jnp
lret
jle
ljmp
or
lcall
mull
addb
push
inc
push
dec
mov
jbe
fnstcw
xor
push
mov
dec
enter
dec
loop
mov
in
cmp
lea
icebp
cs
jb
inc
sub
daa
jmp
fldenv
xchg
push
push
cmpsb
outsb
push
ret
popf
cmp
inc
inc
fnstcw
mov
mov
inc
lret
out
and
iret
hlt
add
orb
shll
daa
scas
or
add
mov
or
arpl
bound
mov
sbb
fdivrs
push
stos
xchg
xchg
pusha
dec
adcl
stc
loope
popf
in
add
inc
outsb
mov
dec
or
inc
adc
and
sub
aaa
xor
mov
cmpsl
pusha
push
inc
mov
dec
jbe
push
out
flds
pop
int3
mov
sti
inc
les
pop
add
dec
pop
add
dec
fnstenv
and
pop
movsw
cmp
jne
mov
pop
add
pop
fcompl
test
jmp
imul
ja
push
cmp
mov
imul
fbld
pop
push
dec
into
dec
push
aas
iret
jns
mov
into
cwtl
dec
out
mov
xor
mov
xchg
or
mov
mov
mov
ficomps
add
sub
ljmp
fmul
jg
and
push
pop
ret
loopne
divb
daa
mov
sbb
sub
cmpsb
stos
scas
lods
out
and
sbb
pop
sahf
enter
inc
stc
cmp
sarl
sti
addr16
fisttps
loope
pop
popa
push
ja
pop
inc
mov
fpatan
pop
add
xchg
cmp
loop
fldl
cmp
dec
fildl
jge
xchg
roll
jp
dec
sub
fistpll
stc
pop
cmpsb
mov
rorb
or
add
mov
test
testl
jnp
lods
insl
loopne
loop
mov
shll
mov
ss
push
mov
dec
ja
jnp
add
jp
mov
and
fcomps
mull
push
xor
push
adc
and
jb
stos
shll
jbe
and
xchg
mov
jle
mov
dec
fcompl
pop
and
lret
inc
shlb
aas
fists
sbb
xor
adc
sub
out
icebp
in
sarb
rclb
clc
sti
cwtl
cmc
mov
adc
push
js
pop
lahf
js
popa
leave
dec
xchg
xchg
mov
enter
jbe
lea
lea
insl
mov
insl
decl
jbe
xchg
xchg
shll
jne
jno
add
jno
add
mov
dec
scas
or
adc
dec
es
inc
push
pop
sbb
orb
clc
pop
ss
das
fsubr
sarb
repz
jo
gs
fwait
pop
pop
test
imul
lods
mov
js
xor
inc
rcll
dec
movq
les
frstor
pop
sbb
pop
jno
call
hlt
jg
jg
lods
fnsave
dec
cmpsl
dec
and
addl
sbb
lahf
mov
mov
and
mov
pop
mov
mov
stc
repz
mul
imul
xchg
or
int
data16
testb
sarb
push
jne
push
xor
jl
das
push
adc
fmuls
es
xchg
and
jecxz
dec
mov
dec
inc
mov
shlb
xchg
push
and
cmp
dec
jnp
pop
mov
and
outsb
add
or
pop
sbb
push
push
scas
das
bound
arpl
jecxz
jl
inc
add
add
xchg
pushf
jge
push
and
xchg
jno
dec
cmp
js
mov
mov
notl
and
fucom
loop
sahf
loope
mov
ja
jne
add
fwait
test
push
mov
fwait
ja
push
or
cli
ret
mov
pop
cld
daa
jecxz
jo
call
mov
ja
pop
out
or
mov
xchg
ret
lock
inc
push
adc
jo
adcb
sbb
out
stos
mov
gs
dec
and
fisttpll
mov
rcll
sub
mov
cld
mov
faddp
arpl
adc
or
sti
jno
push
cmp
xchg
mov
jmp
sbb
push
and
or
aam
js
push
lret
push
and
pop
push
jb
inc
js
aam
pop
fbld
push
sahf
mov
test
out
dec
cld
in
jmp
inc
outsb
xchg
in
sbb
cmc
sbb
pop
push
cmp
into
pop
popf
lret
loop
push
aam
movsl
jnp
cmp
mov
mov
sbb
inc
enter
bound
gs
in
jns
dec
movsb
fwait
mov
and
jbe
push
ficoml
adc
push
inc
inc
cwtl
testl
jmp
mov
stc
inc
fbstp
and
mov
lret
add
sbb
jns
mov
push
xor
mov
push
xor
lods
mov
adc
pop
in
mov
dec
xchg
pop
jp
ss
out
push
dec
lahf
outsb
xor
fidivl
mov
pop
rclb
adc
call
mov
xchg
test
insb
pop
sbb
xchg
xor
jg
xchg
mov
adc
cmp
cmpsl
fdivrl
rcll
jnp
icebp
xchg
mov
test
push
pop
xchg
lds
jl
test
repz
cmp
inc
js
dec
mov
mov
dec
fisubl
and
xlat
mov
dec
mov
cs
idivl
xor
add
int
dec
imul
push
push
and
test
jg
ja
jbe
mov
popa
adc
cmp
es
xor
test
and
sub
adc
xchg
cwtl
imul
sub
jmp
mov
xlat
dec
mov
mov
in
dec
add
adc
sbb
bound
cmpl
comiss
js
adc
inc
pop
push
pop
out
mov
outsl
push
pop
add
inc
xor
push
pop
sub
inc
std
pop
sub
mov
xchg
inc
fisubs
test
inc
jne
repnz
push
popf
xchg
or
inc
jne
sbb
xor
bound
add
fldcw
add
sub
or
jl
push
sub
mov
setge
add
pop
xor
loopne
dec
sub
inc
lods
mov
mov
dec
sub
imul
dec
in
cmp
sbb
sub
add
js
insb
inc
in
lret
stc
repz
in
ret
shld
jne
or
or
jle
push
or
daa
and
xlat
cmc
push
sbb
jecxz
jo
fisttps
pop
out
cwtl
popf
jae
aam
test
mov
or
addr16
imul
sbb
lds
fidivs
out
add
rcll
shlb
pushf
subl
outsl
rolb
addl
cs
jp
add
xor
mov
dec
sbb
fstp
mov
addl
sub
pop
in
scas
adc
aaa
cmp
add
push
add
sub
mov
jmp
cltd
insl
inc
insb
cwtl
fninit
or
push
cmp
jle
push
lret
imul
push
push
leave
inc
inc
pusha
pop
shll
mov
icebp
push
cli
int3
xchg
fisubs
or
sti
xor
clc
cmp
bound
jns
xchg
and
dec
push
into
aad
shlb
push
ret
mull
xchg
sub
push
fcoms
mov
jne
xchg
aad
pop
jp
sbb
int
push
pop
xor
pop
das
sbb
jmp
mov
inc
sbb
insb
add
xchg
call
fs
xchg
cld
daa
loopne
and
jle
roll
xor
dec
int
int
scas
lods
jne
xor
push
cmp
cld
mov
add
mul
lcall
cmp
in
scas
into
into
push
scas
imul
jbe
pop
movsl
in
xor
icebp
aad
sub
loopne
xlat
daa
or
pop
insb
xor
cwtl
cmp
xor
mulb
xchg
push
or
out
push
sahf
mov
sub
add
sarb
out
lret
imul
cmp
imul
les
pop
es
fs
xor
push
sbb
mul
xchg
stc
cld
scas
inc
mov
jno
popa
cs
push
outsl
repnz
stos
xchg
rcrb
inc
cmpsb
dec
inc
dec
fwait
clc
in
loopne
and
lret
gs
shrb
stos
int
in
arpl
xlat
mov
push
add
mov
test
sub
sub
pop
xchg
add
mov
dec
into
rclb
push
enter
shll
cmpsl
loope
icebp
scas
pop
outsb
inc
icebp
notl
lods
push
cmp
lods
cmc
adc
and
jp
or
or
adc
push
pop
insl
fs
in
les
dec
call
or
lds
jno
std
push
ret
mov
into
aam
mulb
xor
ficoml
popf
mov
mov
push
cmp
cmp
mov
dec
add
scas
xor
mov
add
pop
ljmp
repz
rol
adc
popa
rcrb
fs
pusha
fmull
dec
adc
and
mov
aaa
sbb
addr16
test
mov
xrelease
call
xchg
push
popf
dec
jbe
fwait
shlb
sub
dec
add
popa
loop
xchg
data16
loopne
add
add
call
mov
in
cmpsb
add
aaa
out
mov
jl
lds
out
cmpsl
cmc
mov
xor
push
out
movl
mov
movb
into
mov
mov
test
movsb
insl
nop
mov
xor
and
pop
push
lea
or
push
lods
aad
inc
inc
jae
imul
pop
adc
cmp
xchg
xchg
jmp
jl
sahf
out
jo
xchg
int3
xor
push
shl
stos
inc
in
call
adc
pop
adc
dec
std
test
add
loopne
jns
ss
pop
push
sbb
hlt
test
mov
add
sbb
pop
xchg
sbbl
leave
xchg
inc
addr16
pop
int
push
cmovle
cmp
cmp
repz
sbb
rol
or
out
das
into
std
lahf
xor
in
sub
roll
imul
call
push
cmp
push
outsb
mov
outsb
jecxz
dec
insb
mov
aaa
push
or
lods
lods
push
orb
push
push
fistpl
out
add
push
cmpsl
sbb
jge
add
arpl
shrl
ret
fists
addr16
loop
jge
push
addl
iret
leave
pop
xchg
leave
pop
fmulp
pop
dec
shl
cmpsb
ss
and
or
test
pop
bound
lds
inc
lods
orl
dec
add
adc
mov
sub
sub
leave
fidivs
mov
sarb
and
int3
push
sub
dec
fnstsw
insb
bound
jae
sbb
cwtl
imul
mov
pop
lret
mov
sbb
lds
rclb
icebp
or
pop
clc
lea
add
xchg
fisttpl
push
lret
lds
int
je
test
mov
scas
sub
mov
cvtps2pd
mov
pop
push
push
data16
pushf
shll
lds
loope
sbb
pop
pop
sub
cmp
mov
sub
adc
push
insl
mov
insl
pop
adc
lret
sub
movsl
sub
repnz
push
std
mov
xor
iret
in
sub
out
dec
dec
adc
std
cld
bound
inc
sub
and
cmp
adc
xchg
jae
enter
in
xor
mov
scas
mov
push
and
push
cmp
dec
negl
sub
mov
inc
in
push
std
addr16
fldl
lods
pop
mov
insl
xlat
jge
dec
negl
sub
mov
inc
in
push
std
addr16
fldl
lods
pop
mov
imul
pop
xchg
mov
inc
in
push
stc
arpl
ja
pop
test
push
jns
mov
cltd
shrl
xchg
cmp
mov
int
stos
jo
lahf
enter
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sarl
das
loope
icebp
js
ss
scas
popa
mov
add
adc
fbstp
iret
sarl
das
loope
icebp
jno
pop
mov
inc
mov
scas
popa
lahf
jno
add
xor
shll
ss
icebp
pop
andl
push
inc
mov
adc
add
pop
mov
loope
cwtl
push
dec
mov
jp
imul
fs
and
sub
push
or
orl
pop
mov
inc
fcoml
iret
mov
lahf
adc
mov
mov
inc
imul
mov
hlt
jo
pop
lcall
popa
not
and
negb
outsb
jg
sub
push
andb
push
ret
adc
and
shlb
jnp
mov
cmp
inc
inc
pop
push
in
addr16
ss
std
xchg
fimuls
pop
push
test
pop
mov
lds
xlat
inc
fnsave
leave
add
sarl
loope
icebp
jno
pop
mov
inc
mov
jno
add
adc
and
xor
movsb
aas
mov
cmpsl
jp
push
jge
push
into
xor
scas
adc
push
in
inc
mov
mov
subb
jg
and
sub
jge
lret
ss
jno
testb
mov
cmpsl
jnp
dec
les
mov
mov
jno
add
adc
and
xor
sarl
das
loope
icebp
jno
pop
mov
inc
mov
jno
add
adc
and
xor
sarl
cmp
cwtl
mov
icebp
xchg
cs
repnz
sbb
sub
and
dec
mov
pop
dec
leave
jnp
mov
adc
inc
fnstcw
loope
stc
pop
sbb
sbb
ljmp
jae
ljmp
lahf
in
dec
sbb
or
loope
popa
insb
int3
ret
dec
jmp
setbe
outsb
movsb
xor
mov
dec
xor
pushl
mov
mov
cwtl
pop
ficomps
aad
popf
inc
sub
xchg
dec
push
lds
mov
das
in
scas
dec
lods
hlt
or
pusha
pop
pop
addl
xchg
fwait
mov
mov
fdivrp
xor
out
xorl
scas
stos
sbb
mov
mov
daa
js
outsl
xchg
add
add
cwtl
mov
insl
xchg
sbb
or
sbb
loopne
inc
adc
jo
dec
test
cmp
test
jb,pt
hlt
loopne
inc
dec
stc
iret
mov
jg
mov
pop
push
xchg
mov
mov
out
mov
je
adc
mov
add
fisttps
out
int
mov
into
push
push
clc
lcall
mov
sarb
inc
outsl
xor
xchg
push
cwtl
push
pop
mov
movsl
ffreep
cltd
ret
fwait
imull
xor
into
pop
dec
sub
je
mov
and
jbe
sub
xor
mov
shr
mov
add
mov
mov
mov
xchg
aas
dec
sbb
outsl
jmp
cwtl
mov
sub
das
dec
iret
jmp
mov
mov
movsb
ret
mov
xlat
push
adc
loope
inc
xchg
shrb
fdiv
xchg
push
into
gs
mov
outsl
insb
fwait
daa
pop
fninit
adc
mov
mov
xor
inc
addb
bound
xchg
jge
fs
xchg
xchg
cli
iret
mov
gs
and
pop
rorb
mov
sbb
test
mov
pop
incl
mov
jnp
mov
movsb
roll
mov
dec
loopne
jmp
mov
hlt
popf
or
sbbl
cmp
loope
inc
mov
lea
or
add
loope
sarb
sar
notl
inc
mov
popa
sub
cmpsb
mov
ja
jbe
xchg
dec
pusha
push
popa
add
dec
add
cmp
js
xchg
mov
movsb
aas
mov
inc
fiadds
jecxz
jae
adc
popf
cmp
outsl
mov
ss
sub
xor
adc
cmp
mov
jbe
xchg
test
mov
pop
sub
mov
add
call
in
xchg
adc
mov
out
add
mov
shlb
fdivs
jae
cmp
outsb
mov
push
and
adc
iret
mov
sub
outsb
dec
movsb
filds
inc
hlt
mov
pop
pop
loope
fisttpll
inc
mov
jl
sti
popa
xchg
sbb
inc
int
xchg
push
data16
or
adc
push
jp
sub
shlb
adc
pop
xor
inc
out
iret
jl
sub
inc
nop
push
pop
loopne
scas
stos
insl
sbb
or
scas
mov
and
xor
shrl
stos
inc
mov
xor
iret
and
repnz
push
fstps
xchg
jecxz
pop
or
push
movsl
xacquire
add
shlb
in
mov
mov
sti
xor
adc
sub
test
sbb
mull
dec
fstp
lods
imul
movsb
xchg
pop
fwait
nop
inc
push
jbe
sub
mov
cld
shl
ss
das
cli
lock
mov
pop
je
movsb
rcrb
jmp
in
mov
mov
push
sub
ja
cmp
mov
cmp
cltd
mov
fcomp
push
mov
inc
push
xor
stc
ja
loope
into
out
xchg
dec
mov
mov
ret
fs
ret
mov
mov
movsb
push
xchg
rcl
jecxz
pop
pandn
mov
xchg
xor
jnp
imul
mov
push
ljmp
stos
mov
movsb
pop
iret
or
insl
mov
iret
sbb
pusha
cmpsl
xor
and
sbb
rcll
sbb
lret
mov
pop
xchg
inc
stc
pushf
mov
inc
outsb
or
repz
inc
fiadds
mov
scas
xchg
pop
mov
sub
inc
ss
jmp
cli
add
popf
div
mov
mov
mov
adc
jae
add
xchg
mov
xchg
mov
scas
lea
push
cmc
stos
xchg
xor
imul
pop
sbb
imul
popf
xlat
aad
or
push
and
lds
sbb
add
repnz
cmp
mov
mov
mov
push
mov
in
push
and
in
xchg
mov
rclb
dec
lods
jo
shrb
rolb
xchg
jmp
call
cmp
dec
out
ljmp
aad
add
inc
inc
and
cld
dec
movsb
jne
push
mov
je
in
push
or
pusha
push
cli
mov
sbb
xchg
ficoml
dec
lock
jl
out
push
xchg
lret
cvttps2pi
inc
sbb
mov
or
pop
je
jae
outsl
mov
pushf
into
test
lahf
mov
mov
mov
pop
insl
pop
xchg
mov
sarb
stc
mov
dec
ds
bound
adc
imul
adc
lahf
shlb
sarl
test
dec
orb
shl
movsb
mov
jecxz
lock
test
push
in
xchg
cs
daa
inc
sub
fucomi
pop
cmp
pop
and
and
loope
lds
jne
stos
fstp
jle
pushl
mov
pushf
inc
sub
dec
add
mov
outsb
sbb
pop
mov
stos
push
mov
pop
mov
add
cmp
mov
gs
fwait
dec
mov
loope
mov
arpl
pop
push
imul
mov
into
cmp
xchg
jmp
and
jnp
jp
test
sub
push
push
test
daa
loope
xchg
data16
movsl
and
jne
mov
fimull
adc
loope
fisttpl
xchg
sti
int
das
pop
adc
pop
out
movb
lods
pop
and
sti
mov
push
in
mov
stc
pop
call
call
inc
or
dec
std
fmuls
fwait
rcrb
rcrl
adc
sub
xor
cmpsl
jecxz
lods
jnp
push
inc
pushf
sbbl
adc
daa
fldt
iret
inc
mov
andl
xchg
mov
sbb
xor
out
xor
lods
sub
push
mov
ss
test
inc
add
scas
push
loopne
adc
inc
or
out
fldenv
out
xor
cmc
adc
testl
xor
inc
xchg
jne
sub
or
cs
aad
loopne
insb
adc
or
xor
shl
xchg
fisubs
repz
jnp
xlat
jmp
mov
adc
add
fisubl
fs
sar
std
mov
lret
mov
adc
adc
fiadds
xor
push
scas
pusha
inc
jo
pop
cmp
gs
jmp
push
xor
out
cmp
aad
xlat
cmpsb
pop
jb
fldl
and
cmpsb
idiv
dec
sub
pop
inc
addb
sub
pop
pusha
mov
test
xchg
hlt
jno
in
test
pushf
and
lock
mov
loop
popa
es
test
fistl
stos
mov
imulb
mov
or
aad
or
ret
cli
jge
sub
fistl
or
jmp
lahf
leave
mulb
fstl
mov
notb
shlb
cmc
rolb
repnz
test
push
jmp
ljmp
ja
adc
mov
fwait
pop
pop
jecxz
jge
add
imul
pop
mov
js
cmpsl
fbstp
pusha
push
in
imul
nop
shlb
push
aaa
mov
inc
sub
mov
push
in
test
push
and
mov
jbe
pusha
mov
cwtl
pusha
dec
lds
xor
cmp
mov
jmp
push
jnp
test
repz
les
clc
stc
insl
push
mov
lea
iret
cwtd
sub
xor
mov
inc
sbb
shll
pop
xchg
in
jo
jg
mov
clc
pop
iret
aad
mov
outsl
int3
fs
lcall
inc
jge
inc
xchg
jl
push
mov
xchg
rep
cltd
sbb
inc
aam
xchg
lds
and
jne
fwait
andb
sub
sub
int3
adc
mov
fs
out
xchg
dec
jg
out
lret
adc
push
and
cld
int3
cmp
dec
pop
test
pop
loop
inc
add
outsl
test
cmovg
ds
adc
push
mov
in
adc
daa
aas
test
cmp
repz
xor
mov
iret
cs
imul
mov
cmp
test
adc
stc
mov
or
xchg
cmp
cmpsb
adc
fdivr
rorb
cmp
rorb
sahf
jnp
insl
inc
dec
jno
jecxz
cmp
fwait
fbstp
mov
idivb
mov
push
or
lea
jecxz
mov
xor
pop
cs
or
dec
popf
pusha
iret
or
out
dec
loope
out
mov
sbb
xchg
call
orl
xchg
pop
out
adc
das
loopne
xor
outsb
jne
inc
or
mov
cmpsb
aad
addr16
popf
rcll
lods
jl
jecxz
xchg
mov
or
hlt
fs
xchg
sahf
inc
push
jl
aad
ljmp
push
xor
dec
pop
test
repz
fmulp
inc
mov
or
outsb
cwtl
mov
out
imul
jg
mov
mov
inc
mov
mov
nop
push
stos
or
push
dec
mov
test
jne
scas
jb
inc
out
fstps
loope
cld
ljmp
movsb
je
test
lock
fcom
push
adc
push
and
lods
hlt
jno
mov
mov
es
dec
inc
mov
scas
push
mov
into
sub
sti
xchg
add
mov
cmpsb
in
scas
inc
mov
fisttpl
ror
std
pop
dec
into
adc
out
xchg
dec
inc
in
add
mov
jmp
pop
inc
insb
dec
pop
insb
fimull
cmc
mov
push
xchg
out
or
mov
push
scas
jne
jg
jmp
cmp
les
popa
mov
sub
push
in
imul
leave
pushf
imul
dec
inc
mov
xchg
dec
lahf
sbbb
in
xor
xchg
popa
xchg
rcrl
leave
lods
aas
ljmp
daa
bound
sub
and
subb
pop
fadds
ret
popf
xchg
pop
popf
mov
inc
pusha
ljmp
movsl
rorb
aas
shrb
inc
adc
mov
mov
cmc
std
ret
les
shl
cmp
in
or
das
fnstsw
lock
mov
call
std
mov
pop
popa
sarl
repnz
sbb
push
mov
fdiv
pop
and
inc
inc
fcoml
jb
filds
iret
or
out
xchg
lret
mov
je
pop
or
std
mov
mov
sbb
flds
scas
clc
pop
and
mov
mov
sbb
aaa
jmp
jo
rcrl
push
inc
jle
sub
incl
dec
fcomps
imul
scas
jnp
cmp
cmp
ss
adc
dec
loopne
fsubr
pop
inc
xorb
push
sti
push
mov
mov
or
scas
adc
mov
mov
fists
aaa
pusha
adc
mov
jge
int
aad
ret
pusha
ret
inc
pop
outsl
sbb
jae,pn
jl
shr
clc
cmpsb
imul
fldenv
mov
and
mov
sbb
and
mov
mov
sbb
inc
adc
cmpsb
dec
cmp
into
pop
sub
inc
lods
mov
or
mov
jle
sti
ret
lods
mov
sbb
cmp
decb
jo
rolb
mov
pop
pop
divb
dec
cmp
mov
pop
dec
data16
sub
test
push
xchg
loop
imul
push
lahf
mov
stos
mov
cmpsb
insl
in
ss
ds
xlat
cmp
jnp
nop
lods
jo
mov
test
push
in
imul
fdivrs
fisubl
dec
stc
or
in
into
int3
data16
sti
mov
repnz
push
mov
es
xchg
jle
pop
test
fndisi(8087
out
shlb
in
jbe
stos
ljmp
cmp
les
mov
and
ret
or
lret
jecxz
mov
xchg
adc
cli
sbb
sbbb
add
jbe
mov
or
sub
xsha256
cmpsb
xchg
in
mov
add
sub
mov
and
mov
add
roll
pop
les
xchg
test
and
aas
add
ss
dec
push
push
pop
int3
mov
pop
cmpsl
adc
cs
xchg
arpl
ljmp
jmp
icebp
shlb
mov
pop
fsts
xchg
rcrl
repnz
lcall
hlt
push
aas
jb
daa
jg
add
xchg
dec
insb
mov
pop
and
adc
stos
xor
sub
rcrb
or
xchg
add
pop
xchg
or
rcl
pop
mov
les
bound
into
dec
sub
pop
inc
push
ds
fstpl
cmp
stos
out
dec
das
jle
mov
dec
mov
mov
push
decl
repnz
insl
xor
arpl
xor
sub
incb
insb
aas
inc
pop
in
loop
jecxz
push
sub
and
sub
pop
aas
test
mov
jo
cmp
and
dec
call
imul
cmp
into
jl
les
push
sbb
aaa
xchg
fcmovne
ja
and
daa
xchg
sbb
mov
arpl
push
push
push
mov
aad
test
mov
mov
cmpsb
sbb
adc
pusha
add
sub
cld
adc
add
jns
push
hlt
inc
dec
adcl
aad
repnz
lea
pop
iret
or
inc
dec
inc
sub
cmp
roll
hlt
dec
cmp
inc
add
mov
jae
es
push
fwait
inc
les
rcrl
dec
xchg
dec
test
xor
dec
push
mov
stos
dec
cmp
pop
cld
mov
mov
nop
imull
pop
or
data16
ss
int
es
sub
ret
test
mov
mov
xchg
cs
cmpb
imul
mov
sbb
jb
ret
mov
mov
add
mov
jns
pop
xchg
xchg
mov
sub
and
xor
push
pop
stos
xchg
cmp
pop
pop
in
movl
cmp
inc
call
dec
pop
and
loope
int3
aam
mov
ljmp
mov
sbb
push
mov
addr16
mov
xchg
push
pop
dec
div
and
add
xchg
mov
jle
mov
push
pushf
mov
and
test
push
mov
inc
cmc
orl
pusha
sti
xor
lods
or
push
cwtl
ja
loop
test
mov
and
sbb
fldt
enter
mov
sbb
mov
insl
and
mov
mov
mov
mov
cmp
sbb
cwtl
cmpsl
loope
inc
add
inc
cld
nop
mov
push
xchg
adc
in
mov
mov
fwait
mov
test
pop
dec
jbe
fists
sub
mov
xor
jae
popf
out
jno
sub
xorl
or
shrl
fadds
jbe
pop
pop
dec
aad
sarb
sbb
addb
scas
movsl
inc
es
movsb
pop
inc
push
inc
fisttpl
xor
pop
mul
int3
in
out
mov
sub
pop
imul
ja
test
mov
and
pop
outsb
mov
jmp
nop
out
test
stc
outsb
test
fiadds
shlb
xor
adc
mov
sub
movsl
shl
shrl
cmp
fwait
or
adc
and
cmp
xor
je
jp
inc
call
hlt
pop
or
adc
cltd
mov
mov
sub
push
sbb
js
xlat
sbb
push
out
inc
ja
mov
xlat
and
int
fisttpl
adc
insb
repnz
pop
pop
add
shlb
testb
pop
xchg
cmpsl
sub
dec
std
inc
fcoml
or
jne
and
mov
mov
push
movsb
pop
pop
or
lcall
out
xchg
nop
dec
mov
out
fstps
in
in
ljmp
cmp
loop
das
pop
mov
loop
sub
ret
xor
add
pop
movsl
inc
sub
pop
jb
pop
xchg
jns
mov
hlt
outsl
ljmp
outsb
cmp
xchg
inc
imul
inc
in
addb
cmc
xor
adc
lret
jg
sub
and
jmp
xchg
jp
jno
cltd
fcom
stos
pushf
pop
cmpsb
cmp
jl
jp
dec
inc
lods
ss
mov
cmp
xor
cltd
icebp
xlat
sbb
cs
pop
in
or
fistpl
mov
adc
jecxz
rolb
mov
sbb
inc
or
in
std
xchg
mov
je
in
cmp
dec
mov
mov
and
mov
sahf
fs
pop
push
mov
or
or
inc
int
xchg
xchg
sahf
dec
xchg
orl
add
and
or
pop
fdivrp
lods
lahf
es
xchg
jns
add
into
jecxz
imul
cwtd
mov
loopne
inc
repz
movsl
scas
xchg
test
xor
add
mov
in
dec
mov
add
fidivl
adc
ret
and
cmp
mov
jno
cltd
xor
cmp
lret
rolb
sub
mov
mov
shl
into
jl
xor
dec
lock
fsubrl
jmp
cs
and
out
xor
add
xchg
and
push
js
xchg
pop
cmp
fisttps
lea
jp
repz
sub
xchg
xchg
xor
enter
fdiv
cmp
jp
mov
lret
mov
jne
jmp
inc
cmp
cmpsl
fs
jge
test
out
adc
pop
cmp
fidivl
push
arpl
shlb
xchg
mov
or
jns
in
push
outsl
fnstcw
in
mov
push
mov
sub
fsqrt
les
test
inc
xchg
jmp
cmp
lret
int
push
inc
xchg
mov
cmp
sarb
sub
mov
push
inc
pushf
inc
and
cmpsl
aad
test
jg
fstpt
inc
in
or
mov
xor
pop
clc
dec
jp
pushf
mov
dec
in
cmp
int3
pushf
jecxz
cld
fcmovnu
sub
mov
ret
shrb
push
out
pop
fmull
nop
add
adc
call
outsl
xor
jne
into
xchg
cld
sub
mov
outsb
test
lock
xchg
jae
fisubs
shrl
roll
xchg
jmp
std
in
push
add
mov
aam
push
jmp
sahf
adc
xlat
js
mov
dec
js
push
adc
dec
dec
cmp
pusha
pushf
fstpt
jmp
popf
jns
rolb
cltd
jp
mov
or
or
mov
sbb
inc
fcmovb
stc
ret
lock
js
lods
int3
lods
lds
push
xchg
loop
imul
jns
enter
push
dec
dec
mov
mov
mov
dec
in
out
or
pop
mov
or
fwait
xchg
js
je
fistpl
loope
and
leave
loop
sub
sbb
enter
jns
push
movsl
add
aad
and
movups
sub
cmp
test
in
addr16
ror
stc
push
xor
push
fistl
movsl
sub
add
fwait
std
inc
xor
and
pop
mulb
sub
xor
xor
movsl
push
pop
stc
pop
mov
sub
stos
push
inc
mov
pop
push
rclb
std
add
mov
inc
or
arpl
shr
xor
repz
dec
push
mov
pop
scas
ret
les
nop
fidivrs
xchg
jmp
xchg
lds
sub
in
push
scas
push
in
adc
dec
nop
sub
ficompl
pusha
push
sub
gs
sbb
mov
xchg
pop
xchg
scas
imull
add
dec
jno
mov
jle
pop
mov
shr
in
dec
cmpb
xchg
cmc
dec
loope
xchg
jmp
xor
jecxz
stos
pop
sbb
pop
daa
push
movsb
pop
sbb
cmc
sbb
js
je
adc
cmpl
pushf
mov
sub
ja
stos
stos
das
ficomps
icebp
jno
pop
mov
inc
mov
jno
add
adc
and
xor
sarl
das
loope
icebp
jno
pop
mov
inc
mov
jno
add
adc
and
xor
sarl
das
loope
icebp
jno
pop
mov
inc
mov
jo
add
adc
and
xor
sarl
sub
sbb
jno
pop
xor
lret
lahf
jno
jbe
cltd
nop
fldenv
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
or
pop
cmp
inc
or
sbb
or
xchg
neg
out
std
or
pop
cmp
insl
push
jge
lea
mov
out
xlat
std
or
pop
cmp
insl
push
jge
lea
xchg
jmp
mov
jnp
push
pop
inc
dec
bound
push
xchg
xor
pop
gs
out
int3
inc
jle
xchg
pusha
sub
aaa
fdivrs
mov
fldl2e
data16
pop
and
xchg
xor
enter
add
in
mov
adc
dec
test
lea
xlat
js
or
pop
cmp
xor
mov
addr16
pop
adc
pop
and
add
out
pop
in
mov
imul
idiv
push
mov
inc
popf
dec
popa
mov
push
fcomip
or
outsb
and
lgs
pushf
in
xchg
into
fnsave
clc
js
out
mov
xlat
xchg
cmp
sbb
pop
dec
ja
insl
push
jge
lea
mov
out
xlat
std
orl
pop
inc
and
adc
or
cmp
int3
cltd
mov
test
mov
test
pop
outsl
dec
jge
pop
or
and
jge
call
lock
aad
xchg
mov
mov
xchg
fs
je
jb
jg
inc
pop
insl
push
jge
lea
mov
out
xlat
std
or
pop
cmp
insl
push
jge
lea
mov
out
xlat
std
or
js
rclb
bound
aas
in
push
inc
xchg
insb
mov
fs
orl
add
and
mov
mov
mov
pop
mov
mov
add
cltd
xchg
pop
cmp
push
outsl
ret
add
push
sub
pop
and
fndisi(8087
push
mov
fsubrp
icebp
out
test
sub
mov
pusha
je
inc
or
jo
xor
arpl
call
aad
orb
repnz
fnstsw
mov
call
daa
jle
pop
adc
push
outsl
aad
mov
shll
aas
jmp
fwait
jle
out
cmpsl
or
ss
mov
mov
mov
lret
lods
imul
data16
lock
cmc
or
dec
lret
mov
jecxz
les
lahf
cld
jg
les
xor
mov
int3
ficompl
cmp
cwtl
cmp
fwait
insb
lea
out
dec
ja
mov
sarl
xor
aam
ds
insl
sbb
mov
and
pusha
xchg
cwtl
sbb
or
cwtl
repz
inc
popa
fistpll
scas
inc
and
sti
sub
jl
pop
insb
inc
scas
dec
bound
shr
gs
and
cmp
pop
sbb
rolb
xor
out
rolb
mov
das
and
or
repnz
dec
add
push
pop
lret
hlt
test
in
pop
xor
sub
das
icebp
push
push
fisttps
js
stos
push
insb
sub
add
and
sti
inc
add
cmpsb
cmpsl
cmp
insl
jne
mov
xor
in
sahf
fldcw
jle
in
dec
push
jb
pusha
scas
fwait
int
jmp
hlt
notb
sbb
dec
lock
popf
fstpt
mov
test
jnp
loop
popa
fistl
sub
mov
push
iret
repz
repnz
aaa
jnp
out
pop
adc
sbb
es
push
stos
push
xchg
mov
cmpsl
dec
incb
das
inc
cmp
cs
xchg
fldt
stos
xchg
fwait
add
xchg
rcl
jbe
dec
cwtl
mov
lcall
pop
popa
or
imul
jno
dec
jg
adc
movsl
sbb
pop
cmp
out
dec
push
aam
daa
ss
es
lock
in
out
mov
stc
in
pop
adc
pop
dec
das
mov
out
mov
std
lret
shll
int
sub
test
lcall
scas
call
xor
hlt
es
xchg
enter
adc
pop
daa
out
lret
scas
dec
insb
mov
xchg
mov
leave
imul
loope
sub
jp
jae
mov
in
notb
jmp
out
push
out
pop
and
std
jp
add
mov
add
leave
push
mov
sub
rcr
push
sub
loopne
mov
stc
cmc
cmc
push
ret
ljmp
ja,pt
lahf
xlat
xchg
ret
fsubr
jp
adc
mov
popa
mov
int
ja
in
decb
sbb
scas
or
fldl
inc
std
lret
test
pop
dec
xchg
mov
in
fiadds
jno
sbb
inc
add
push
shrb
jae
dec
mov
add
imul
fnstcw
and
cli
jo
int
sub
jle
xor
jbe
sbb
pop
stc
mov
sbb
ror
cmp
sar
sub
fidivrs
shll
mov
adc
dec
pushf
push
push
ds
jmp
iret
xchg
inc
mov
mov
jmp
jb
mov
push
js
mov
jnp
and
or
push
push
lret
jp
sub
pop
sub
sbb
push
aas
sub
sti
ret
lcall
pop
fmuls
cs
pop
and
xor
out
mov
lret
iret
jecxz
mov
rclb
jle
mov
or
xchg
in
stc
xchg
add
xor
fidivrs
insl
fbstp
cmp
or
cmp
inc
stc
push
push
jo
mov
movd
pop
ds
or
into
pushf
push
mov
movsb
pop
mov
stc
push
ret
lods
xor
pop
inc
dec
add
in
cmp
js
inc
int
mov
aam
int
lcall
les
mov
fstp
xchg
sti
xchg
dec
jge
push
cmp
dec
mov
xor
fdivrl
mov
sub
inc
mov
loopne
int
insl
jp
cmpsl
xor
cmpsb
aaa
push
add
sbb
sti
lahf
pop
jae
je
aad
and
addl
ror
mov
rclb
stos
hlt
mov
push
pusha
jecxz
jecxz
stos
leave
pop
gs
icebp
sbb
pop
sbb
pop
xchg
or
scas
sub
std
lret
inc
hlt
lods
mov
mov
hlt
lods
jne
mov
xchg
add
xchg
sbb
inc
push
es
in
jg
sti
mov
sahf
leave
cmpsl
inc
pop
outsb
orb
sub
andl
idivl
inc
mov
dec
mov
lret
mov
incb
or
and
pusha
sub
push
ds
push
mov
scas
mov
lds
sbb
lea
cmp
push
pop
add
xchg
mov
sub
inc
and
push
mov
and
sub
pop
stos
adc
je
and
xor
mov
sbb
test
xchg
pop
into
js
daa
cmpsl
mov
pop
dec
imul
pop
sbb
hlt
pop
jp
arpl
inc
push
pop
inc
and
mov
cld
jp
lcall
jmp
shr
sti
mov
sub
and
cmp
jo
push
adc
jae
sbb
fnstsw
or
icebp
mov
cmp
xchg
out
jbe
jno
out
fdivrp
cmp
ret
sub
iret
push
out
ljmp
or
divl
call
in
or
pop
lret
jbe
clc
pop
aad
aam
shll
aas
test
test
aas
lods
mov
inc
loopne
lret
pop
rcrb
add
jo
mov
adc
stos
imul
or
popf
inc
popa
mov
xor
or
test
xchg
pop
push
fildl
fs
stos
sarl
inc
sete
enter
sbb
jb
out
pop
stc
inc
or
pop
xchg
shr
inc
cmp
sbb
fstpt
mov
in
jge
orb
stc
movl
mov
and
pusha
pop
int3
cmpsb
aas
sbb
or
repz
sbb
cmpsl
outsb
stc
mov
push
push
adc
sub
add
push
mov
mov
cmpsl
repnz
mov
pop
pop
out
xchg
cmp
ret
arpl
out
jg
jo
xchg
mov
mov
jecxz
sbb
add
inc
icebp
lods
push
jne
push
pop
fsub
inc
lret
mov
ret
mov
inc
lea
mov
xlat
xchg
icebp
mov
push
daa
nop
inc
bound
or
gs
test
pop
add
mov
addb
lahf
push
shrl
out
in
or
out
pop
xchg
sbb
imul
imul
mov
pop
ficoms
jg
push
insb
jo
addr16
shr
dec
mov
and
cmpsl
out
mov
pop
repnz
enter
rclb
dec
enter
outsb
jecxz
inc
cmpsl
daa
rcrl
xor
aas
scas
sbb
or
leave
in
mov
lock
sbb
sbb
adc
mov
xor
mov
inc
out
xor
dec
mov
mov
cltd
sub
adc
lods
int
xchg
fsubr
inc
insb
mov
mov
jno
int3
dec
bound
fs
add
sbb
lret
cmp
or
xor
mov
stc
mov
or
in
dec
pop
inc
clc
out
and
pop
test
pop
or
inc
xor
pop
cmp
inc
in
jbe
repnz
cmc
pop
int
push
test
dec
popl
addr16
pop
adc
mov
mov
inc
pop
popa
jle
gs
repz
aaa
lret
cltd
dec
mov
add
cmc
mov
or
push
xchg
shrl
sbb
enter
cmp
jle
es
mov
add
addr16
cmp
push
mov
sbb
cmp
out
xchg
dec
or
jg
divb
push
push
cs
push
dec
cmp
je
mov
inc
nop
adc
pop
nop
fwait
pop
xor
ljmp
mov
dec
sbb
dec
xor
inc
or
addr16
nop
mov
mov
inc
mov
sub
sub
lods
ds
fistpll
add
sub
addr16
in
and
in
push
push
jbe
pop
cmp
push
push
push
sub
mov
movsb
pusha
enter
stc
and
nop
mov
mov
sub
pop
es
sbb
ret
pop
lret
das
mov
inc
popa
clc
sbb
je
pop
xchg
pushf
push
push
dec
pop
pop
mov
adc
sub
rorb
out
pop
enter
adc
mov
stc
push
add
dec
xor
push
mov
inc
jmp
into
xchg
cmp
xchg
xor
pop
shlb
out
pop
test
jle
pop
xor
xchg
inc
fidivs
pop
pop
stc
xchg
push
lea
cmp
inc
and
mov
jmp
mov
sub
stc
icebp
scas
and
cltd
sahf
mov
mov
addr16
mov
dec
or
iret
mov
sub
cmpsl
mov
stos
fldenv
sub
cmp
sbb
pop
push
pop
fwait
or
scas
outsl
sbbl
xor
insl
lods
mov
jle
pop
outsb
or
mov
cltd
jl
pop
mov
stos
or
lcall
sbb
je
pop
dec
aam
or
mov
fisttpl
inc
jne
push
lret
lods
int3
pop
dec
ret
push
lods
repnz
or
cmp
fmul
ja
fcmovu
jae
or
add
mov
mov
jo
add
ret
mov
ret
push
xchg
adc
mov
push
mov
mov
mov
stos
jle
xchg
fisttps
jbe
mov
aam
mov
jnp
and
bound
std
fsubrs
imul
xchg
stos
sub
stos
and
inc
ss
mov
popf
popa
out
xchg
aaa
aas
cmp
mov
popa
sbb
bnd
or
fnsave
xor
sub
enter
fmul
mov
lea
incl
add
aaa
lds
sbb
idivb
cmp
xchg
mov
pusha
push
ret
ret
std
popa
out
out
fnstsw
adc
mov
add
lcall
lods
mov
xchg
faddp
adc
mov
pop
inc
subb
clc
hlt
mov
int3
add
mov
pop
adc
sti
mov
push
lds
push
hlt
sub
add
outsb
push
push
jns
shl
pop
repz
mov
mov
faddl
cmpsb
pusha
lods
push
jp
mov
mov
ljmp
popl
inc
sbb
cmp
stc
cmp
inc
insb
add
xchg
movsb
jle
pop
xchg
cmc
pop
fwait
call
call
mov
jb
iret
wbinvd
push
inc
movsl
pop
pop
ja
jbe
in
in
xchg
repz
cwtl
push
pushf
jecxz
xor
imul
imul
frstor
mov
sub
mov
pop
addr16
dec
inc
pop
jns
pop
mov
loope
fnstcw
out
addb
sub
xor
fcmovnbe
push
push
mov
cmp
push
add
jmp
xor
faddl
test
pushl
mov
sbb
enter
daa
jmp
insl
lds
adc
or
jnp
xchg
xchg
std
int3
sahf
add
dec
and
hlt
loope
ret
shl
xor
jecxz
cmpsl
pop
pop
jae
pop
xor
outsl
add
xchg
popf
xor
mov
push
cld
sub
rcr
add
inc
outsb
out
cli
cltd
inc
adc
dec
in
jle
lods
test
roll
fisttpll
adc
bound
js
ds
scas
lahf
sti
loope
mov
xchg
loope
adc
lods
leave
aas
movd
pop
fstps
in
mov
loope
jp
fwait
aam
and
int
inc
out
cmpsl
mov
out
lods
popa
dec
push
add
fildl
push
jno
js
je
jb
xor
insb
aas
cmpsb
int3
sti
sbb
ds
cmpsb
mov
jle
shlb
or
lcall
mov
dec
les
sbb
mov
mov
mov
jg
and
and
xchg
or
lock
push
gs
xor
pop
pop
lds
fucomp
sbb
scas
and
lret
iret
jg
and
mov
test
and
popf
jmp
hlt
pop
mov
outsb
push
sub
cs
daa
mov
rcrb
outsl
loopne
lcall
jns
jmp
push
push
xor
adc
pop
in
sub
test
je
in
in
cmpsl
popf
dec
push
jbe
clc
cmpsl
frstor
movsb
xor
lahf
aas
daa
xchg
inc
in
lret
lods
hlt
ja
leave
test
outsb
std
std
pop
mov
pop
aaa
push
mov
test
pop
mov
add
jno
ds
xor
xchg
cli
sub
jne
xchg
or
test
mov
fstp
je
inc
jnp
pop
mov
rcll
pop
fwait
in
stos
lock
notb
repnz
out
jae
xor
push
lods
test
aas
jnp
fsts
test
mov
ret
sbb
push
push
sbb
mov
pushf
inc
xor
mov
add
aaa
mul
mov
xchg
cmp
cmpsl
jge
cmp
jmp
xor
sbb
mov
cmp
dec
adc
fcos
sub
pop
inc
pop
jg
lock
jbe
scas
enter
les
sub
loope
mov
sbbb
jg
popa
and
push
add
dec
push
jmp
or
dec
in
dec
out
push
jnp
aad
repz
hlt
loop
jne
push
pop
xchg
iret
sub
ljmp
inc
xlat
and
push
dec
test
stos
testb
cmp
pop
sbb
outsb
std
jns
pop
incb
pop
mov
das
mov
stc
rcrl
rcrl
cs
sub
dec
in
stos
pop
jecxz
test
cltd
sbb
pop
aaa
lods
dec
cmp
lret
and
inc
jge
cltd
aad
mov
repnz
clc
insb
je
cs
stos
int
imul
pop
lcall
cmpsl
mov
xchg
mov
fistpll
sub
mov
inc
sub
dec
cmp
pop
stos
popf
push
dec
jb
adc
scas
jb
test
add
mov
int3
lds
fisubrs
arpl
mov
dec
cli
xchg
and
mov
jmp
mov
popf
decl
push
jge
shrb
addl
mov
int
cwtl
outsb
push
repz
and
cltd
push
lcall
scas
xor
or
cmpb
and
in
in
push
fsubs
leave
repz
lahf
mov
push
push
rorb
rolb
aaa
or
push
xchg
adc
jl
jp
bnd
sbb
xor
adc
mov
xchg
daa
pusha
mov
add
and
inc
pop
jb
lret
lret
addr16
jo
jae,pt
push
xchg
stos
sbb
loop
lock
xor
or
and
addr16
pop
cmpb
inc
cmp
repnz
jo
mov
test
or
lock
and
hlt
loope
mov
mov
push
fmul
mov
add
lea
push
cmpsb
int3
jne
inc
mov
nop
mov
jg
jge
jae
leave
push
or
movsl
push
pop
or
jno
add
mov
leave
xchg
xor
dec
fs
mov
xchg
ss
les
sbb
xchg
lea
aad
mov
mov
mov
daa
xor
jbe
dec
xorb
jb
pop
movsb
shll
daa
std
cmp
test
inc
leave
jb
adc
cld
ja
mov
ja
lret
das
pop
rcll
mov
xor
or
xor
or
fsubrl
push
out
mov
mov
and
movsb
in
jae
pop
jle
sub
imull
fsub
aaa
mov
aas
xor
pop
jle
imul
add
imul
test
call
inc
jle
adc
test
push
popa
and
and
or
enter
or
mov
insl
loope
repnz
cli
cmp
dec
divb
push
lds
mov
int3
aas
lret
xchg
or
jmp
cmp
pop
fs
xor
shrl
fldcw
int3
psubb
push
inc
cli
fs
bound
addr16
jnp
xchg
or
dec
mov
inc
xchg
aas
daa
jns
jnp
xor
sub
int
cwtl
sbb
pop
xchg
shl
jb
pop
xchg
mov
out
xlat
xor
xchg
int
cmpsb
lcall
mov
sub
mov
scas
sub
ds
mov
inc
inc
jg
sbb
dec
jmp
es
cltd
hlt
gs
sub
in
push
pop
cwtl
sbbl
xchg
add
shll
pop
fidivl
mov
test
and
dec
xchg
mov
adc
xchg
xor
pusha
iret
out
cwtl
es
dec
jns
jbe
jp
enter
leave
adc
sub
push
xchg
xchg
int3
movsb
cmp
ss
out
mov
daa
les
in
sbb
sub
lods
into
mov
mov
fdivl
cld
push
cmp
aas
and
cmp
push
xchg
or
xchg
js
subb
mov
loop
in
xor
lods
xor
dec
mov
aaa
clc
add
sbb
stos
cmc
cmpsb
loopne
pop
inc
inc
mov
lret
ss
stos
pop
xor
mov
loopne
iret
cmpsb
adcb
mov
mov
mov
sbb
mov
push
pusha
fsts
jge,pn
inc
into
jns
mov
cltd
fstps
pop
xchg
loop
fdivs
mov
inc
subb
testb
and
shr
mov
xor
leave
sti
pop
jecxz
or
mov
jmp
imul
inc
ljmp
push
pop
xor
adc
jmp
mov
mov
mov
add
jne
add
je
xor
orl
sbb
push
lcall
lahf
out
addb
les
addr16
cmp
pop
add
mov
cmp
mov
popa
mov
fdivrl
and
ret
mov
xchg
mov
pop
or
insl
and
decb
aam
fldl
push
dec
inc
lcall
sub
hlt
les
mov
lds
ret
int
rcrb
lahf
stos
dec
adc
xchg
insl
mov
xchg
aad
in
into
xor
stos
adc
xchg
les
jns
out
pushf
imull
pop
xchg
jne
es
and
xchg
rolb
in
jg
xor
dec
aaa
push
ja
movsl
xor
mov
push
mov
or
into
stc
data16
fcmovb
adc
in
sub
sbb
dec
clc
imul
push
or
test
jmp
hlt
sti
push
aam
sbb
popf
enter
inc
xor
and
ds
pop
pop
in
inc
insb
jge
or
fsubrp
or
xchg
or
and
lods
xchg
mov
cmc
mov
sub
mov
pop
out
sar
jmp
pusha
frstor
fsubrp
jmp
sbb
add
pop
pop
mov
pop
add
mov
add
ficoms
or
pop
imul
data16
add
push
jp
push
jae
jb
movsb
mov
ljmp
insl
pop
and
out
dec
push
inc
add
lea
movsb
pop
addr16
mov
pop
imul
and
xlat
ds
xor
jp
cltd
pop
adc
sbb
in
sub
inc
jmp
mov
ror
iret
inc
in
call
mov
fildll
and
xor
das
enter
fscale
add
jae
fs
jmp
js
loop
cmp
ljmp
ficomps
ss
ljmp
arpl
rcr
ljmp
mov
pop
mov
hlt
aaa
pop
scas
xor
bound
pop
jb
push
mov
add
mov
push
bound
cmp
shlb
out
jne
lret
aas
jbe
and
mov
jge
arpl
pop
add
mov
ret
test
jo
jno
rol
cmpsb
adc
aas
test
test
push
mov
push
rcl
or
rcrb
test
add
jg
push
xchg
cs
pop
loopne
out
mov
daa
push
pop
cmp
insl
push
jge
lea
mov
out
xlat
std
or
pop
cmp
insl
push
jge
lea
mov
out
xlat
std
or
pop
cmp
insl
push
jge
lea
mov
out
xlat
std
or
pop
cmp
insl
push
jge
lea
mov
sbb
sub
cmp
mov
sbb
sub
inc
or
imul
add
pop
jmp
repz
mov
lret
xchg
scas
xor
jae
insl
or
and
jnp
or
pop
cmp
jae
inc
and
scas
and
pop
pop
and
cmp
adc
pop
mov
movsb
into
sub
divb
xlat
nop
add
jo
dec
leave
fcomps
xchg
jbe
inc
push
and
sti
rcrl
repz
out
mov
arpl
mov
mov
jecxz
ret
xchg
push
mov
mov
stos
push
and
lods
xchg
fmull
jnp
mov
imul
mov
xor
imul
out
push
test
mov
push
push
cmp
adc
pop
iret
xor
mov
int3
push
sbb
cmp
jp
pop
data16
imul
cmp
jbe
lods
dec
js
mov
fwait
sub
add
dec
add
shrb
mov
sti
adcl
pop
xchg
lods
loope
fwait
sbb
inc
inc
sub
xor
xchg
mov
xchg
nop
mov
xor
jg
jb
add
emms
or
out
jnp
test
sbb
out
movsl
loopne
pop
dec
xor
outsb
aas
jl
cmp
jbe
push
xor
fistl
sti
or
jae
inc
or
and
jnp
dec
adc
stos
repz
mov
lret
xchg
jae
inc
or
and
jnp
dec
adc
stos
aaa
insb
imul
mov
jb
fsub
xchg
notl
fs
mov
insb
fbld
jb
outsb
adc
jl
xchg
out
adc
sub
enter
or
add
adc
mov
xchg
repz
scas
gs
cmpsb
jg
lods
stos
jns
push
add
daa
cmc
inc
and
add
test
pushf
aaa
push
add
push
jb
nopl
cltd
sub
rol
decl
cmc
jo
aaa
sbb
sub
pop
and
jl,pn
sbb
mov
inc
ja
xor
mov
cmc
cli
stc
pop
push
aaa
dec
pusha
push
xchg
pop
std
cmpb
mov
in
bound
and
ret
push
dec
xchg
lds
in
xchg
mov
add
mov
popa
mov
scas
enter
insb
loopne
xchg
jno
or
adc
push
xchg
mov
mov
sahf
push
sbb
sub
adcb
ljmp
jne
inc
or
mov
jbe
jl
arpl
enter
int
pop
jp
xlat
fcmovnu
adc
call
fcomps
add
fwait
pcmpgtb
pop
stc
pop
dec
inc
mov
push
into
xor
jb
and
es
jo
loop
add
mov
mov
fisubs
ljmp
jg
cmp
jle
popa
sbb
and
mov
data16
or
pop
jmp
fildl
lcall
cli
jp
pop
in
add
fsubp
xchg
in
cld
xchg
dec
inc
xor
aad
hlt
clc
dec
sub
sub
adc
insl
scas
mov
shll
imul
movb
andl
lret
ss
xchg
fstpt
ljmp
adc
inc
push
cmp
mov
jmp
adc
popa
dec
cmp
jb
xchg
in
add
repz
cmpsl
pop
xor
mov
int3
jg
add
ss
pop
dec
push
adc
jmp
mov
inc
jmp
xor
xchg
sti
enter
test
addr16
xchg
push
push
cwtl
dec
pop
stc
iret
sub
cmpsl
inc
add
repnz
push
or
lahf
ret
movsl
shlb
or
repnz
pop
repz
out
xchg
dec
mov
mov
aaa
fmull
test
aad
in
inc
pop
or
or
negl
cmc
fidivs
shrb
cmp
fildll
pop
mov
pop
mov
insl
jl
sub
adc
mov
push
cmpb
jb
xlat
sub
imul
xchg
insb
pop
cmp
pop
mov
mov
cmpsb
push
pop
scas
push
xor
pop
subl
loop
dec
pop
sub
add
rcrb
sub
sub
pusha
dec
fisubs
mov
test
push
sbb
int3
or
mov
mov
negl
popa
xchg
xchg
pop
enter
mov
push
bound
enter
js
or
push
xorb
or
xor
pop
pop
lods
cmp
sbb
sbb
ja
scas
jae
testb
mov
out
lahf
lds
mov
shlb
les
cmp
mov
xchg
jo
mov
int3
xchg
mov
sahf
xchg
cmpsb
add
jne
push
orb
pop
gs
sti
dec
cld
add
jge
pop
push
cmp
fadds
and
in
jnp
mov
test
mov
mov
xor
cmp
pop
add
sbb
add
outsb
jl
push
cmp
cmpsb
in
inc
mov
hlt
mov
jno
and
loopne
ja
test
cltd
in
mov
cmpsl
shrb
repnz
mov
sarl
jnp
subb
mov
ds
mov
mov
outsb
out
ljmp
pop
sbb
sub
jae
out
clc
ja
popa
fisubl
push
loop
cmp
and
adc
inc
mov
add
push
xchg
push
add
scas
shrb
jae
xlat
lret
jmp
lahf
frstor
stos
push
out
cmp
gs
arpl
cmp
pop
pop
xchg
sarb
shrb
mov
fisttps
sub
mov
dec
and
subb
lock
std
repz
add
leave
cmp
jge
ror
sub
sbb
and
mov
push
and
add
pop
or
adc
dec
arpl
lea
push
ljmp
bound
rcl
and
rcll
push
and
aas
fwait
mov
es
xchg
pusha
mov
fcoml
loop
push
sar
xlat
jg
lods
mov
push
daa
rcrl
out
fsubl
fsub
inc
test
push
and
adc
fistpll
lea
mov
sbb
lods
pop
mov
cli
das
stos
jp
dec
pop
add
dec
dec
mov
xorb
sbb
stos
aad
lds
mov
jle
imul
popf
push
fwait
das
addb
push
enter
mov
scas
pop
es
adc
jno
push
in
mov
leave
mov
fs
push
xchg
loop
sub
outsl
dec
fmuls
movsl
inc
outsl
pop
mov
xor
in
push
mov
repnz
pop
lods
imulb
or
add
pop
or
scas
dec
aaa
mov
loope
and
int
push
daa
repnz
popf
cmp
pop
out
in
fwait
dec
and
xchg
pop
pop
loopne
les
lcall
std
xor
and
xor
or
mov
js
jno
sbb
sahf
add
inc
cli
and
dec
xchg
add
lea
aam
pusha
sub
dec
push
ja
dec
andb
or
int
dec
nop
fwait
lahf
outsl
pushf
cmc
xor
clc
mov
mov
fwait
pop
xchg
xchg
ffreep
in
cmpsl
cld
mov
xor
dec
lahf
xchg
test
lret
mov
adc
adc
adcl
lret
fnstcw
sbbl
outsl
call
addb
pop
adc
pop
ja
icebp
dec
cwtl
dec
xchg
inc
loopne
jae
mov
cld
xchg
aam
aas
call
lods
jb
pop
daa
mov
jl
and
mov
inc
shr
dec
dec
add
and
inc
push
arpl
xchg
cld
in
xor
pop
gs
adc
in
push
xchg
jp
into
fnsave
or
pop
test
test
shll
adc
xchg
mov
ja
cmp
ret
jge
call
mov
call
mov
lock
mov
shrb
pop
imul
or
cmp
icebp
mov
xor
std
dec
cmp
push
mov
fadds
mov
jecxz
mov
lock
jle
addr16
inc
mov
fistps
sti
cmc
call
int
lds
mov
in
pushf
in
imul
dec
add
mov
dec
arpl
mov
xchg
ret
xchg
push
mov
lahf
and
xchg
sbb
sub
in
push
sub
je
shlb
push
mov
in
gs
dec
xchg
mov
iret
imul
data16
push
sub
test
or
mov
stos
repz
mov
aad
loop
js
pop
xlat
cmp
mov
sarb
xor
aad
xchg
icebp
sub
dec
jg
adc
pusha
gs
xchg
sbb
bound
lret
mov
adc
mov
xchg
mov
rcrl
push
or
hlt
andl
mov
cmp
mov
push
jmp
dec
mov
mov
test
loop
sbb
adc
xor
fsubl
bnd
arpl
xor
jge
cwtl
push
in
cwtl
outsl
sub
out
mov
cmp
xchg
pushf
xchg
and
in
pop
lea
fnsave
rcr
jg
mov
dec
adc
or
jno
sbb
mov
pop
in
hlt
mov
sub
sahf
xchg
add
sub
mov
jo
pop
adc
inc
pushf
and
mov
divl
push
cli
lret
mov
movsb
rol
scas
or
stc
js
leave
test
jnp
or
push
leave
sahf
mov
adc
cwtl
or
repnz
xorb
ljmp
sub
inc
rcrb
fidivrs
mov
xchg
add
mov
sub
pop
xor
inc
cltd
cmp
lds
sbb
dec
int
sbb
gs
notl
clc
addr16
out
adc
inc
cmp
clc
aaa
mov
fbstp
mov
xor
fimull
aaa
jmp
insb
int3
adc
dec
xchg
movsb
mov
sti
lret
into
push
xor
lret
mov
outsb
mov
shl
sub
in
mov
out
jbe
sub
std
adc
jg
neg
mov
iret
push
add
test
aaa
hlt
jl
mov
and
repnz
pop
lea
xor
in
ficoml
aam
mov
push
push
pop
push
inc
fs
adc
pavgb
or
movsl
in
inc
and
dec
pop
aas
divb
cmpsl
insl
push
and
mov
or
push
cs
jmp
add
push
add
ret
add
jnp
test
mov
push
dec
sbb
pop
pop
jmp
adc
jns
out
push
xchg
bound
and
lds
enter
decb
xchg
or
int
das
into
mov
add
inc
mov
or
addr16
jle
cld
sub
or
mov
ret
into
cwtl
adc
aaa
into
movsb
das
or
repz
xchg
cwtl
pusha
adc
aas
dec
mov
or
inc
xchg
sbb
inc
mov
decl
lods
push
test
pushf
mov
mov
adc
fcomps
icebp
adc
xor
daa
fucomi
dec
dec
stos
inc
jnp
nop
sbb
fiadds
imul
mov
push
shl
fidivl
push
imul
or
je
in
stos
in
and
arpl
and
call
jl
sti
mov
xchg
push
aaa
es
dec
aam
mov
enter
push
xchg
push
pop
mov
xor
cmp
ja
into
jmp
xchg
sub
addr16
pop
inc
arpl
loope
lahf
loopne
push
and
data16
cmp
adc
cmpl
outsb
lret
ss
call
jno
mov
ds
xor
jle
jp
cmc
hlt
jno
mov
jge
pop
sbb
jg
notl
daa
stos
mov
ret
xor
shlb
je
sub
dec
xchg
adc
xor
push
jns
ljmp
icebp
rorl
sbb
jno
mov
sarb
mov
jge
or
shll
iret
sti
jp
jbe
addb
jl
xchg
mov
xchg
mov
jg
or
mov
sbb
and
jecxz
sbb
mov
int3
in
ljmp
mov
aas
xor
les
xor
loope
mov
leave
out
popa
lret
inc
dec
dec
and
inc
lret
jnp
jns
push
xor
add
out
mov
repz
jp
jle
push
fimull
into
push
mov
in
adc
popa
xor
xchg
or
cli
popa
scas
pop
in
addb
inc
and
shll
std
push
push
and
nop
ret
out
mov
push
mov
push
nop
mov
xchg
icebp
test
or
out
push
mov
mov
push
imul
cs
shrl
cmp
fcmovnu
cmp
insl
sub
jno
scas
push
mov
mov
sahf
mov
or
or
xchg
cmpsl
mov
dec
cmp
jecxz
pop
ja
fsubl
fnstenv
dec
fimull
test
ret
in
cmc
lahf
cmp
sub
outsl
pushl
xchg
out
iret
popf
pushf
add
adc
push
scas
push
fcoms
sub
mov
push
pop
or
ja
popa
pop
mov
mov
push
popf
or
mov
jo
or
cmpsl
xor
sbb
arpl
pusha
sub
out
xor
movsb
lds
xor
push
loop
sarb
xchg
mov
lock
into
push
pusha
iret
mov
out
fs
lahf
seta
loope
ds
push
mov
rcrl
out
popf
out
mov
cld
js
daa
test
xchg
add
repz
mov
hlt
add
adc
test
jo
or
orb
jle
xor
cmp
je
add
mov
out
or
dec
xchg
loop
aam
cltd
inc
sarb
add
filds
sbb
pop
cmp
mov
lcall
or
aam
imul
pusha
jns
ja
cmc
inc
outsl
dec
mov
push
cmpsl
cmp
arpl
loopne
pop
push
xchg
mov
push
xchg
imul
mov
mov
sub
lret
dec
sarb
loopne
jmp
in
sbb
pop
mov
lcall
cld
sbb
sbb
mov
rclb
ljmp
lea
inc
stos
xchg
push
add
int
or
push
cld
adc
into
js
movsl
ficompl
sahf
and
sub
arpl
sub
rolb
out
ret
mov
js
and
jmp
or
xor
dec
out
out
imul
ficoml
es
jno
pop
mov
mov
mov
pop
xchg
loope
stos
int
loope
pop
ds
pop
sbb
sub
movsb
or
les
in
lods
lcall
mov
pop
add
xor
out
in
in
mov
adcb
mov
add
icebp
jnp
jno
rcrl
mov
and
cld
xchg
mov
mov
aam
in
fcomps
aaa
mov
fidivl
pop
fwait
inc
inc
cld
jecxz
stos
aam
or
or
pushf
pop
jl
sub
call
adc
fisubl
clc
jne
push
dec
dec
cmp
adc
test
loop
dec
in
cmp
mov
xor
push
adc
out
cmpsb
jecxz
or
subb
cmp
adcl
pop
hlt
popf
pusha
iret
aam
xor
cmp
lock
mov
mov
movsb
call
jmp
push
push
adc
mov
std
daa
lock
push
gs
or
xchg
inc
jmp
cmpsl
stos
xor
pop
test
fistpl
mov
dec
test
mov
and
test
dec
aam
add
insb
sbb
nop
jae
adc
lret
gs
sahf
das
jne
mov
push
add
lcall
loopne
mov
cmp
js
sbb
bound
sbb
testb
xchg
dec
cmp
xchg
daa
out
xchg
jg
clc
aam
sbb
or
pop
fcomi
movsb
jb
incl
dec
add
xchg
mov
xchg
pop
jl
inc
push
andl
xchg
inc
fwait
dec
jbe
shl
icebp
pop
dec
data16
imul
mov
cltd
xchg
mov
lahf
or
sbb
pop
fnstsw
fsubs
adc
sahf
cmp
cwtl
daa
jecxz
mov
and
pop
cwtl
mov
cld
jmp
xchg
divb
sbb
jp
sub
iret
in
push
test
insl
adc
sbb
decl
push
jnp
ds
shll
pop
mov
outsb
rclb
idiv
lods
inc
add
cmp
lahf
or
or
fisubrl
pushf
call
test
rclb
repnz
pop
jbe
ja
or
leave
push
adc
pop
loopne
inc
inc
lret
lds
rcll
inc
rcrl
imul
nop
inc
fcmove
cmpl
adc
sub
ret
frstor
lods
mov
pushf
inc
outsb
lea
push
loop,pn
cltd
mov
jl
sbb
mov
xor
jbe
inc
fmuls
mul
inc
lret
jns
repnz
rcll
lret
add
fs
push
in
or
mov
scas
add
or
mov
mull
jb
or
jnp
and
data16
pop
js
pop
aad
sbb
jo
aas
or
cmp
adc
cmc
push
xlat
neg
popf
in
cmpsl
jno
pop
cld
fisubrs
arpl
xchg
xor
adc
les
sub
dec
inc
clc
push
mov
xchg
ret
lret
dec
jnp
mov
mov
outsb
fcomps
dec
mov
mov
jbe
imul
xor
inc
cmp
add
popa
mov
lea
movsb
out
jle
xor
jo
negl
cmc
or
repnz
push
arpl
outsl
push
push
addr16
lret
test
testl
mov
popa
mov
std
cmpb
stos
mov
push
jns
and
sbb
fsub
inc
or
mov
fadd
loopne
adcl
mov
pop
fistl
jmp
aaa
mov
jle
pop
xor
add
mov
fwait
icebp
dec
sub
jle
ss
add
fwait
xchg
cmp
shlb
mov
push
dec
frstor
shll
and
imull
jge
lret
xchg
xchg
int
cmp
jb
pusha
add
add
pop
jno
popf
divl
lds
pop
xor
pop
pop
rol
mov
mov
into
sub
push
xor
jnp
jo
fistpl
xchg
dec
sub
sbb
fildll
repz
imul
push
enter
jmp
xor
subb
sub
and
fnstenv
inc
loope
push
inc
sbb
mov
inc
leave
pop
inc
push
mov
pop
pop
or
push
lds
sbbl
mov
aas
sbb
inc
ljmp
push
jmp
test
lock
pop
sbb
cmp
jge
imul
sarl
mov
pushf
mov
xchg
adc
nop
mov
loopne
popf
xchg
insb
mov
mov
hlt
rorb
mov
fldl
push
push
sub
add
cmp
cmpl
xchg
adc
imulb
mov
sbb
in
orl
dec
cmpsb
cmp
fsubrl
jnp
dec
and
lock
sub
inc
dec
jo
clc
shll
scas
scas
cltd
sub
lods
cmp
sbb
stos
jne
jno
in
jp
pop
enter
jne
sbb
jmp
loop
scas
cmpl
jns
add
fadd
push
jnp
pop
xchg
lcall
enter
mov
dec
and
mov
mov
movsb
cltd
jge
jl
push
mov
stc
and
push
xchg
push
jne
addb
adc
out
jns
test
mov
stos
and
xchg
fisttpl
std
sbb
sbb
pop
mov
scas
push
fildl
inc
icebp
fs
mov
add
insl
jp
nop
rcr
ret
mov
push
call
sbb
jno
add
aad
ja
clc
jne
inc
ds
pusha
dec
into
js
add
lods
in
or
xchg
mull
add
ja
xchg
pop
out
xchg
aad
xchg
and
into
sahf
sub
and
pop
or
shrb
jno
imul
lds
ret
cld
xchg
fstpl
hlt
call
xor
cmp
nop
aaa
dec
inc
mov
xor
jae
cltd
xchg
xchg
test
pop
js
addb
or
jl
xchg
mov
inc
xor
subl
mov
gs
fdivrs
xor
movsl
add
stos
les
mov
push
or
inc
jo
xchg
push
pop
dec
xor
sbb
in
imul
mov
lea
mov
push
lret
adc
and
add
push
ja
movsb
mov
clc
je
lahf
lahf
shll
pop
push
push
pop
or
stos
push
imul
ret
fs
enter
lcall
pop
inc
inc
lret
xlat
ljmp
mov
cli
lahf
scas
pusha
sub
nop
xor
loop
test
lcall
push
cmc
sub
xor
nop
popf
fwait
xchg
or
push
xchg
mov
cmc
outsl
adc
jno
fs
out
xor
xchg
fwait
pop
adc
pop
mov
repnz
adc
dec
lods
lods
loope
int3
inc
dec
xor
pop
mov
adc
mov
add
dec
push
mov
add
aaa
loop
inc
mov
sahf
jge
ds
sbb
or
cmp
into
push
xchg
or
out
mov
mov
mov
mov
dec
icebp
adc
jl,pt
lret
aaa
xor
jp
xor
sbb
loope
jo
and
cmp
jp
sti
sub
jo
inc
into
movsl
fsubs
nop
ljmp
cs
mov
jle
cld
shrb
mov
pop
leave
std
sub
jbe
or
dec
enter
repnz
mov
mov
mov
lret
xchg
jae
inc
or
and
jnp
dec
adc
stos
repz
mov
lret
xchg
jae
inc
or
and
jnp
dec
adc
stos
lock
rcrl
or
jae
dec
or
and
jnp
imul
sti
stos
fistpll
mov
dec
adc
arpl
mov
push
jecxz
test
mov
movsb
out
imulb
sbb
or
sub
add
setnp
jbe
inc
pushf
push
mov
cld
xor
push
fcoml
int3
out
imulb
sbb
or
jl
insb
xchg
jbe
jbe
inc
pushf
pop
mov
cld
push
in
push
fcoml
int3
cmp
sub
sbb
or
jl
insb
sahf
pop
xchg
dec
jg
push
lock
mov
scas
pop
mov
inc
int3
cmp
pop
js
loopne
mov
push
scas
loopne
stc
iret
pushf
push
fldt
sti
aaa
xor
push
daa
add
mov
test
inc
jecxz
pop
int3
mov
cmp
addr16
fsubr
xor
sub
cli
xor
sub
out
pop
push
int
jl
push
jle
fisttpl
lret
and
int
ret
out
nop
sbb
mov
jns
xchg
sbb
ja
jae
test
mov
mov
jnp
dec
lret
pop
jl
xchg
lret
mov
mov
inc
pusha
cmpsb
mov
stc
fldl
pushf
push
mov
sub
mov
outsl
jne
sahf
leave
cltd
inc
sti
mov
arpl
sbb
leave
push
int3
das
cmp
sub
sbb
or
jl
insb
xchg
jg
outsb
lods
pop
pushf
dec
mov
cld
cs
sbb
push
mov
pop
mov
sub
data16
lds
xchg
push
xchg
je
jnp
mov
test
pop
lret
inc
xchg
lds
adc
inc
lret
es
pop
xorl
mov
stos
push
mov
xchg
mov
inc
pushf
push
mov
cld
ss
push
fcoml
int3
out
imulb
sbb
or
jl
insb
xchg
mov
inc
pushf
push
mov
cld
ss
push
fcoml
int3
out
fnstcw
jns
movsl
mov
push
xor
ss
fst
bound
and
mov
rclb
loope
push
or
test
fucomp
imul
mov
jbe
pop
and
cltd
pushl
lret
das
ljmp
add
mov
add
push
jp
and
mov
inc
mov
xchg
xchg
pusha
addr16
test
fwait
xor
mov
scas
and
pusha
mov
scas
pop
sub
pop
dec
push
outsb
cwtl
jecxz
stos
ficomps
dec
rorl
mov
hlt
or
mov
push
pusha
fstpl
add
fucomp
push
pop
add
sbb
xchg
fucomi
ja
inc
sbb
jle
jle
or
mov
xchg
mov
mov
mov
addl
xchg
mov
push
jb
mov
mov
outsb
or
or
xchg
cmp
sbb
cmpsl
in
pop
outsb
loop
sbb
xchg
call
insl
sbb
inc
xchg
jne
inc
push
aad
and
fcompl
ja
test
mov
add
push
dec
shrl
ljmp
sub
and
dec
je
or
ror
xchg
idivl
and
inc
mov
ss
sahf
pop
mov
fcompl
xchg
mov
and
out
fildll
sub
lcall
repz
mov
push
movsl
iret
jmp
nop
fisttps
shrl
sbbb
jne
movsb
cmp
lahf
cmp
mov
adc
cmp
xlat
inc
mov
xor
mov
loop
fucomi
jno
or
insb
lahf
cmc
clc
icebp
mov
test
icebp
cmovg
push
pop
aas
adc
push
inc
rorb
pop
sub
lret
inc
cmp
push
outsl
adc
sbb
mov
in
sub
push
loop
out
mov
popf
push
and
jl
jnp
mov
aaa
dec
jle
aaa
mov
les
sti
int3
fwait
cmpsl
subl
clc
cld
pop
inc
mov
lods
call
or
pop
jae
movsl
mov
pop
pop
lret
cld
mov
stos
adc
nop
xor
fiadds
xchg
jg
push
repz
stos
dec
push
aas
push
fadd
or
or
lahf
into
mov
or
movsb
dec
jnp
mov
dec
mov
jne
jae
pop
arpl
imulb
cmp
xchg
lea
xchg
std
mov
xchg
sbb
pop
sbbl
mov
lock
addr16
popf
out
mov
das
pop
push
inc
jb
pop
cwtl
mov
xchg
cmpsl
repz
adcb
push
stos
cmp
mov
mov
fldcw
cmpsl
add
test
pop
mov
xchg
or
mov
jno
or
stos
xor
cmp
fdivr
jbe
scas
dec
ds
xor
loopne
ja
es
in
add
and
mov
popf
push
mov
pop
insb
in
popa
nop
lcall
add
or
jno
mov
das
mov
ror
xor
fbstp
push
ret
push
xor
es
mov
rolb
sbb
mov
pushf
addr16
loope
mov
pop
call
and
mov
inc
add
cmp
adc
xlat
cmpsl
mov
pop
push
sbb
cmp
sarl
fisubs
fcomps
add
or
sahf
test
mov
mov
mov
ljmp
outsl
mov
push
pop
pushaw
sbb
xchg
xchg
inc
mov
jns
mov
inc
or
cli
lods
mov
cpuid
and
jo
jle
jge
loop
sub
ja
std
inc
xor
sub
push
push
jp
aam
arpl
sbb
int3
divl
mov
test
or
push
lock
test
inc
jmp
and
and
outsb
adc
sar
imul
sbb
push
add
add
xchg
js
pop
dec
orl
mov
cmp
stos
jne
adc
mov
dec
movsb
inc
mov
mov
popl
mov
fisttps
push
mov
cwtl
push
fisubrl
rcll
pop
cmp
imul
int
out
pop
mov
jo
call
cmp
and
push
iret
cwtl
xchg
sarl
cltd
imul
daa
imul
pop
daa
pop
mov
add
ds
lcall
out
mov
xor
bnd
push
cmp
mov
mov
cmpsl
ret
bound
js
push
xor
sub
scas
pop
int3
jne
out
mov
sbb
xchg
mov
jmp
inc
dec
mov
or
fnsave
jns
mov
adc
mov
inc
stos
or
lcall
and
pusha
mov
pop
mov
jnp
int
sbb
inc
mov
pop
pop
dec
push
pop
fxtract
xchg
push
psrld
loopne
ljmp
shlb
mov
jecxz
push
cmp
shlb
jge
or
sbb
mov
popa
out
fstps
filds
pop
cmp
shrl
lret
js
repz
push
loopne
les
mov
dec
dec
pushl
dec
fiaddl
popl
in
in
dec
push
mov
cmp
jmp
sub
sub
inc
or
and
mov
stc
je
lods
add
test
add
xchg
inc
aam
sub
mov
xor
push
push
xlat
push
outsb
stos
xchg
js
sub
cmp
cwtl
xlat
fstl
mov
cmp
pop
push
pop
add
ja
pop
and
add
xchg
clc
jmp
pusha
stos
xchg
xchg
push
xor
ret
or
dec
jb
pop
sti
fiadds
inc
mov
push
push
fidivs
pop
sbb
das
xor
cltd
sbb
mov
jo
lcall
push
push
imul
fwait
cmp
and
xor
rorl
dec
stos
add
fnstcw
push
aad
lds
xor
in
arpl
cmp
cltd
jns
cli
scas
sbb
add
sbb
adc
imul
popl
test
mov
and
in
lret
ljmp
ljmp
cmpsl
mov
mov
push
addr16
mov
jl
in
and
ljmp
dec
repnz
jbe
rorl
push
mov
outsb
and
in
sti
sub
or
ret
out
rcrb
jae
xchg
cli
in
mov
pop
sbb
mov
cld
fwait
xor
push
xchg
sub
xor
inc
push
cmc
mov
adc
outsl
mov
xchg
pop
clc
mov
push
mov
or
test
mov
stc
jp
in
jle
cmpsl
dec
enter
out
xchg
adc
popa
sbb
jl
aaa
xor
adc
adc
adc
add
int3
insl
rolb
ret
rcr
pop
mov
xor
out
jae
push
dec
cwtl
mov
loop
ficomps
icebp
flds
pop
iret
fs
mov
sbb
xor
jl
pop
cmp
add
pop
adc
out
shlb
jbe
ja
add
xchg
sub
mov
stos
out
in
out
and
fstl
lds
mov
cmpsl
and
inc
gs
mov
lock
dec
mov
adcl
mov
push
mov
push
pop
mov
popa
int3
cmp
mov
inc
pop
pop
add
pop
leave
mov
cmp
test
pusha
sub
sbb
enter
outsl
movsl
mov
pusha
xchg
xchg
outsb
stos
and
xchg
push
xchg
mov
pmulhw
xchg
inc
shrl
pop
and
movsl
cld
or
cmpsb
xor
jp
mov
xchg
fsubr
sub
leave
pushf
lea
ret
popa
pop
out
cmp
aas
pop
xchg
cmp
pop
sbb
adc
jle
mov
dec
lods
mov
push
loop
cmpsl
adc
mulb
xlat
jg
pop
push
iret
lea
out
inc
push
cmp
lret
push
shll
xchg
jb
loope
jnp
xor
push
clc
inc
cmp
push
jl
imul
jmp
push
mov
xor
mov
iret
dec
decl
clc
sub
mov
into
pop
cmc
neg
bound
sarb
popa
sbb
lds
ljmp
mov
xor
jae
test
push
lcall
cltd
cmpl
or
ret
push
xchg
mov
adc
mov
out
xor
cmc
sub
jb
stos
add
shll
sarl
cmp
iret
adc
pusha
and
sub
cmpsb
xor
dec
mov
sbb
pop
test
mov
stos
loope
lahf
sbb
adc
aam
adc
or
sbb
fistps
aam
loopne
daa
mov
xchg
mov
scas
dec
adc
sub
in
dec
incb
or
adc
fcoml
xlat
cmp
ds
adc
icebp
je
sub
pop
adc
inc
das
push
mov
les
lea
adc
adc
sub
jl
jo
das
push
pop
inc
aam
dec
inc
push
jle
push
rolb
mov
xor
fs
pop
js
shrl
addr16
mov
mov
jmp
xor
ss
cmp
mov
mov
into
fildll
fisubl
pop
xchg
and
out
fldl
fistl
mov
shll
mov
pop
into
lods
imul
inc
xchg
and
stos
int
jo
insb
mov
dec
push
int3
push
cmp
jmp
xchg
cmp
sub
ja
inc
xor
je
out
dec
imul
inc
in
shll
imul
popf
jg
pushf
fiaddl
fisubs
and
lret
sarb
or
sub
outsb
cmp
inc
or
and
mov
inc
xchg
outsl
jg
repz
sti
cs
inc
or
mov
mov
scas
sti
cmpsb
loope
aas
sub
ficoml
sub
mov
hlt
add
xor
test
daa
scas
test
sub
mov
sub
stos
mov
adc
rcrl
nop
adc
push
add
sub
int3
inc
out
sub
lods
rcl
add
mov
mov
in
out
sub
cmp
jg
cmc
cmp
daa
cld
mov
dec
lods
out
mov
inc
imul
jge
jecxz
sub
orb
add
into
mov
push
pop
loope
fcmovne
lcall
test
data16
lcall
add
jl
and
mulb
daa
pushf
out
cmp
js
add
push
mov
jl
stos
in
mov
int3
cmc
jg
in
mov
cli
mov
mov
out
lret
mov
divb
popa
dec
jbe
adc
add
pop
roll
scas
push
dec
call
das
adc
out
ds
xchg
mov
xor
ja
dec
das
fstpt
fwait
mov
cmp
jbe
flds
pusha
fldt
xchg
pop
hlt
inc
xlat
inc
pop
inc
xor
imul
je
in
or
sub
jo
mov
arpl
or
pop
jg
shl
sub
lahf
clc
cmpsl
cmp
lret
or
xor
mov
mov
int3
sahf
popf
mov
lods
sub
out
sub
divl
and
push
hlt
ror
and
push
adc
xchg
sbb
daa
addl
inc
lods
lahf
sub
cmp
cmpl
das
addr16
push
add
mov
xchg
mov
out
sbb
sbb
imul
xchg
jmp
jmp
clc
je
mov
jo
ror
nop
repz
lods
mov
sub
leave
jo
sbb
jp
outsb
int3
mov
leave
add
and
ja
jmp
imul
xlat
movsb
and
pop
dec
or
push
ret
xchg
or
and
adc
movsl
pushf
sub
xor
fnop
fnstsw
leave
ljmp
xor
xor
nop
adc
jge
ljmp
mov
jno
cwtl
repnz
aad
add
jecxz
rorb
push
ja
subl
lcall
lock
jns
lret
test
fildll
icebp
or
jns
adc
dec
and
inc
dec
xchg
pop
cmp
dec
push
mov
add
gs
push
lds
sub
fs
mov
repnz
ret
ds
sub
scas
movsl
cmpl
pusha
ret
push
and
xchg
or
cmpsl
fistps
insl
mov
cmc
mov
adc
xor
and
test
ja
int3
les
push
arpl
pop
dec
push
es
mov
fmul
mov
pop
andl
aaa
es
pop
mov
xor
ja
jmp
sub
xor
mov
icebp
jnp
or
mov
pop
xor
inc
ljmp
test
xchg
cmpsl
cltd
push
pushf
mov
xchg
pop
sub
arpl
not
call
ret
mov
xor
movsl
mov
pusha
lahf
push
lock
jo
or
aaa
xchg
push
outsl
mov
jne
mov
fildl
fwait
jge
push
loopne
fnstcw
xor
inc
push
repnz
xor
outsl
push
push
nop
mov
xchg
push
xchg
sar
jo
and
test
adc
imul
or
sbb
sbb
daa
imulb
ds
or
gs
pusha
fwait
lcall
or
notl
inc
loop
or
mov
lret
test
fnstenv
cmp
test
push
repz
xlat
sub
sahf
mov
push
xchg
or
inc
fistpll
loope
xchg
loope
hlt
push
push
je
sbb
inc
out
mov
inc
and
mov
pop
scas
idivl
imul
out
xlat
jns
enter
insl
xorl
scas
cli
aaa
test
mov
push
sbb
in
jno
call
push
mov
cmp
or
pop
daa
and
add
mov
cmpsl
dec
push
and
sti
pop
adc
sub
add
fistpll
fbstp
jge
mov
movsb
loope
and
shrb
je
rcrl
data16
ffreep
mov
arpl
rcll
mov
mov
pop
push
sahf
sbb
mov
sti
sbb
das
cmpsb
cmp
adc
divb
aam
lret
sarb
xlat
cmc
inc
mov
pop
jae
dec
inc
and
or
xchg
divb
mov
dec
pop
mov
imul
xlat
js
cmp
popa
out
into
mov
iret
and
inc
inc
pop
push
cmp
cmp
sbb
or
jb
mov
shl
xchg
ljmp
xchg
jle
mov
mov
fisubrs
mov
std
xor
loop
addr16
insl
mov
xchg
dec
clc
add
mov
xchg
push
add
mov
cmp
or
int
dec
in
loopne
mov
cmp
icebp
add
in
hlt
repnz
lret
in
addb
daa
mov
cmp
punpckhwd
popf
inc
mov
loop
cmp
jmp
cmp
jge
jmp
xchg
sub
mov
lahf
jle
scas
and
add
outsl
clc
inc
sti
loope,pn
in
jo
xchg
imul
flds
loop
aam
sarb
push
out
dec
dec
imul
in
xchg
inc
add
popa
sub
and
xchg
ljmp
jnp
addb
adc
dec
dec
and
push
jl
fsubrl
push
ret
inc
clc
and
repz
int3
ljmp
dec
bound
xchg
xor
ret
cltd
fimuls
loopne
ret
mov
fs
ljmp
les
es
xchg
test
xor
lret
jbe
enter
stos
xor
lcall
mov
xor
push
cmp
lock
popf
cmp
stc
out
and
inc
aas
add
mov
pusha
mov
aam
aaa
mov
jg
je
frstor
xor
out
and
les
mov
sub
and
test
mov
insb
aad
mov
push
cmpsl
lret
sub
sbb
dec
pop
inc
popa
xor
fldl
sbb
pop
dec
xchg
scas
pushf
dec
pushf
fsubl
mov
sarl
cli
lret
cmp
mul
nop
jnp
sbb
fcompl
adc
addr16
pushf
popa
test
imul
das
addr16
pushf
cwtl
xor
mov
cmpsb
inc
jns
push
testb
insl
jae
xchg
loope
pop
iret
mov
fwait
pop
xchg
mov
loopne
fwait
dec
aaa
cli
adcl
enter
add
popa
pop
jmp
into
pop
shrb
rcrb
pop
inc
andl
sub
pop
popf
outsb
xor
sub
add
push
stos
dec
incl
xor
mov
mov
sub
mov
lahf
adc
push
pop
in
jl
js
int3
jb
arpl
addr16
xor
mov
andb
mov
and
fs
and
xor
dec
push
mov
mov
clc
movsb
in
lret
les
lahf
push
sub
xlat
call
testb
ss
cmp
sahf
xor
cmc
rcrb
mov
xor
cmp
lret
dec
cltd
mov
xchg
cmp
mov
mov
push
pop
jnp
fxch
mov
ret
movsl
orl
jo
std
fmuls
jo
dec
scas
add
stos
lcall
xchg
adc
sub
and
imul
mov
pop
push
stos
std
mov
mov
mov
cs
jb
fnstenv
nop
inc
cltd
xor
das
pop
dec
xor
and
rorl
inc
cmp
pop
data16
mov
movd
mov
shlb
aad
adc
sar
mov
push
or
and
jne
sub
cmp
imul
fstp
sbb
mov
rcl
stc
cmp
aaa
enter
das
inc
std
jbe
pop
inc
mov
lret
jecxz
push
into
adc
xchg
outsb
and
pop
mov
push
dec
cmp
xor
sub
subl
mov
cmp
mov
loop
xor
add
inc
mov
insb
add
in
adc
les
push
je
fstpl
aam
lds
xor
or
nop
out
pop
sarb
xchg
mov
and
push
jbe
jae
mov
popf
rorb
lods
loope
pop
mov
test
mov
push
iret
pop
repz
stos
fidivl
xchg
aad
push
and
imul
jg
xchg
mov
pop
mov
cmp
jno
mov
repz
and
pop
mov
xor
xchg
in
test
ds
push
int
je
ja
inc
adc
adc
mov
ficompl
mov
xchg
and
jp
js
jne
data16
adc
mov
push
dec
out
xchg
hlt
xor
xchg
mov
pop
aad
repnz
mov
xchg
popf
leave
cmp
mov
shrb
lret
push
xor
adc
cmp
mov
sbb
mov
neg
es
fnstcw
add
mov
inc
sbb
in
out
dec
mov
xlat
sub
icebp
movsl
sbb
jmp
pop
loopne
and
mov
repz
xchg
push
sub
rcr
pop
mov
shlb
jp
pop
jae
xor
lods
jno
bound
mov
stos
test
in
jmp
cmp
jmp
xchg
mov
push
pop
jle
int
nop
push
rcll
xchg
in
dec
dec
jl
xchg
pop
loopne
mov
jnp
lds
sbb
jb
movb
inc
dec
int
xor
xor
jl
lods
imulb
dec
pop
sbb
sub
sahf
sbb
imul
in
ljmp
push
pop
jns
adc
cmp
xchg
adc
fwait
sbb
cmp
fnstsw
fsubrs
mov
pushf
rorl
outsl
adcl
mov
inc
xor
xchg
rcrl
daa
out
into
mov
mov
call
pop
push
sbb
mov
mov
xorl
dec
rcr
xor
stc
stos
or
or
mov
mov
pop
inc
xchg
xor
dec
fildll
cli
outsb
lock
xchg
mov
sbb
xchg
jg
adc
idivb
icebp
mov
out
sbb
sub
xchg
lods
mov
xor
add
jl
jecxz
pop
mov
lcall
or
jl
insb
xchg
mov
inc
pushf
push
mov
cld
ss
push
fcoml
int3
out
imulb
sbb
or
jl
insb
xchg
mov
inc
pushf
push
mov
cld
ss
push
fcoml
int3
out
imulb
sbb
or
xchg
dec
mov
inc
pushf
push
mov
std
aaa
in
push
fcoml
out
hlt
sub
sbb
or
push
mov
inc
mov
in
pushf
push
sti
push
je
adc
and
xor
adc
and
xor
mov
es
or
adc
mov
les
hlt
nop
add
adc
and
xor
inc
and
add
loop
lock
loopne
rolb
aam
in
hlt
nop
add
adc
and
xor
inc
cmp
sbb
add
rol
loope
ficoms
pusha
jo
and
pop
fisttpl
sahf
mov
in
pop
jnp
les
orb
mov
lock
dec
cmp
lret
lods
mov
mov
sbb
dec
sarb
and
jns
push
lahf
sbb
and
inc
xor
jbe
xor
je
cld
test
xor
test
nop
add
adc
dec
inc
xor
arpl
inc
lock
je
or
fisubrs
cmp
xchg
dec
addr16
cli
sti
pop
hlt
xchg
les
push
int3
out
xor
insb
insl
ret
test
rclb
xor
stc
outsl
jmp
out
mov
shr
cmp
loope
in
aad
rclb
or
adc
and
xor
inc
and
sbb
clc
xchg
call
les
hlt
hlt
inc
add
pop
push
inc
jbe
pop
add
test
int3
mov
xchg
jno
inc
xor
inc
push
adc
sbb
es
cltd
lds
fisttps
and
or
add
loopne
lock
shlb
xor
add
adc
and
xor
inc
and
add
loopne
lock
shlb
xor
add
xor
mov
sbb
cmp
jbe
fwait
cmpsl
dec
faddl
movsl
cltd
xor
jge
shrb
and
inc
shlb
add
iret
add
test
leave
lock
xor
and
fdivrl
dec
gs
pusha
ret
test
repnz
jp
je
mov
arpl
push
dec
test
sbb
mov
ja
je
ds
sub
push
push
mov
faddl
add
into
push
sub
arpl
js
inc
jo
jo
add
and
cld
sbb
or
nop
adc
subl
inc
jmp
mov
jns
lcall
mov
pop
add
test
add
sti
jb
lods
sub
jmp
mov
mov
xor
sbb
inc
or
dec
inc
sbb
xor
sbb
mov
or
push
daa
daa
adc
test
pop
and
jbe
outsl
outsb
add
int3
out
pusha
jbe
jnp
mov
mov
pop
sub
jecxz
cmc
pop
icebp
inc
testl
mov
clc
arpl
jmp
loopne
es
jns
mov
ret
mov
inc
mov
insl
push
cmp
mov
mov
push
pop
cmpsl
mov
inc
cmp
inc
leave
or
push
lret
jnp
les
dec
sbb
andb
jo
cmp
jl
cli
lds
sbb
and
vmovsd
or
insl
jle
inc
lret
int3
mov
cli
ret
sbb
mov
xchg
out
aam
test
loopne
add
or
lea
gs
dec
mov
and
push
xchg
pusha
imul
test
popa
mov
roll
mov
popa
cmp
in
loope
fcoms
mov
stc
sbb
ret
jne
dec
mov
mov
pushf
lret
fiadds
fadd
lds
push
inc
bndstx
dec
mulb
mov
stc
cld
push
push
and
hlt
add
jae
sbb
inc
sub
or
mov
popf
cmp
push
jl
call
xchg
clc
pusha
xchg
push
xchg
dec
lret
icebp
nop
stos
push
mov
sub
cli
scas
cmp
mov
sub
data16
idivb
ljmp
push
stos
push
loop
adc
mov
into
dec
mov
dec
cmpsb
dec
pushw
add
std
aas
add
xchg
loopne
in
pop
push
ficomps
movsb
rcrb
mov
xchg
push
pop
mov
adc
jge
aas
mov
rolb
sbb
out
out
fimull
data16
test
xorb
cmpsl
xchg
pop
and
les
xchg
nop
shl
es
je
movl
inc
popa
xorb
outsb
insl
decl
dec
aas
adc
pop
push
or
pop
cltd
xchg
gs
idivb
xor
pop
mov
xchg
sarl
mov
repnz
outsl
lret
mov
mov
xchg
imul
je
push
add
adc
sbb
stos
lcall
pop
add
std
lods
jb
xchg
daa
pop
pop
in
lcall
aad
sti
and
imul
repz
xor
cmp
cmpsl
sbb
inc
mov
mov
bound
cmp
push
push
out
call
aad
aaa
push
int
daa
push
inc
jmp
or
imul
loop
add
incb
mov
ja
pop
popa
jb
cmpsb
dec
add
jge
icebp
push
adcl
and
scas
dec
xchg
and
loope
adcl
add
test
mov
aam
bound
mov
ret
or
xchg
mov
cld
into
mov
ret
sbb
cli
adc
pop
jmp
das
insb
or
loopne
sub
sub
mov
enter
call
and
les
mov
popa
and
xor
faddp
daa
movsb
sub
fisttps
sbb
xchg
mov
cs
cmpl
lcall
jmp
jle
sbb
pop
dec
lea
add
mov
dec
and
cmc
jecxz
dec
cmc
xchg
push
mov
roll
rorb
imul
dec
adc
mov
icebp
ficomps
jne
cmp
shl
jge
cmpb
fmull
lahf
insl
hlt
add
stos
lods
add
shl
sarl
sahf
jne
mov
push
cld
daa
inc
rolb
mov
loop
ret
and
pop
arpl
and
out
xor
pop
sarl
mov
inc
push
fwait
dec
cmp
hlt
stos
clc
pusha
xor
movsl
pushf
jnp
mov
repnz
es
sarb
xor
movsb
int
mov
cmpsl
xlat
push
call
mov
adc
dec
aaa
push
popf
sbb
insb
dec
push
in
ficoms
lret
pop
dec
add
mov
jp
adc
lods
cltd
push
pop
jb
xchg
xor
out
enter
jl
in
repnz
fsubs
std
add
or
push
inc
jecxz
ret
shl
lea
ret
mov
xchg
xor
xlat
lock
push
mov
aad
cld
addl
mov
jp
js
dec
lods
test
cwtl
leave
lret
movsl
std
cmpsb
adc
pusha
and
ja
mov
test
hlt
push
dec
ffreep
pushf
mov
scas
add
fisttps
les
cmpsb
jnp
push
add
ja
sub
stc
pop
cmc
test
mov
jge
int
pushf
sbb
sbb
and
push
sbb
ficoml
test
adc
sbb
idivl
and
add
inc
dec
fdivs
inc
test
leave
out
insl
bound
add
push
out
and
pop
sub
lea
push
sbb
cmp
pop
and
sbb
and
scas
cltd
in
outsl
daa
in
mov
mov
jns
cmc
sbb
xlat
mov
mull
pop
adc
addr16
jo
mov
cmp
mov
shll
je
ds
mov
aam
jmp
jae
das
jno
gs
push
fnsave
xchg
xor
fstpl
nop
mov
dec
and
pop
aas
sbbb
js
mov
shrl
push
mov
lods
jb
or
sbb
fidivrl
push
mov
shr
js
cmpsb
or
lret
cmc
aas
xchg
sarb
cmc
adc
jl,pn
pop
adc
xchg
sub
cmp
sbb
neg
adc
into
dec
daa
xor
mov
adc
lret
push
add
lret
sub
sbb
jp
mov
hlt
push
cmp
add
inc
or
stos
pop
arpl
out
push
sahf
loop
pop
faddl
cmpsl
ljmp
leave
loope
in
and
mov
jecxz
xchg
das
xchg
add
cmp
and
pop
sahf
xor
dec
and
xchg
lahf
adc
jb
in
loop
out
adcl
jmp
xor
adc
add
lret
insl
fs
ficompl
push
cwtl
adc
mov
pop
pop
jo
xor
sbb
dec
push
push
in
cmp
mov
sub
cwtl
xchg
fstpt
sub
xchg
push
xchg
xor
mov
out
sub
sbb
fwait
mov
fs
xchg
mov
test
arpl
jg
icebp
scas
xchg
incb
dec
pop
call
rclb
inc
es
lds
cmpsb
sbb
dec
lret
shr
sbb
pop
and
inc
fstl
dec
sti
stos
ja
inc
and
repnz
pop
scas
pop
jb
or
in
dec
fidivs
nop
in
add
jge
jb
adc
clc
adc
fimuls
std
jb
push
repz
lahf
inc
sti
testb
outsl
test
xor
mov
mov
inc
in
out
jl
mov
xorl
xchg
cmp
mov
into
mov
xchg
das
pusha
xchg
pop
mov
xor
pop
lret
push
push
ljmp
cmp
dec
fildl
pop
inc
out
and
push
jbe
insl
lahf
and
js
or
lock
daa
mov
sub
dec
loop
pop
xor
pop
adc
inc
popa
inc
nop
arpl
push
in
mov
and
lcall
int3
push
push
inc
or
aas
mov
enter
mov
or
into
popa
dec
cli
out
cmp
aam
popl
mov
jb
xchg
xchg
dec
dec
fisttpll
push
mov
xchg
xor
push
insb
imul
daa
cmp
sub
frstor
les
ss
add
adc
adc
fstps
mov
mov
mov
insl
dec
adc
inc
pop
or
mov
gs
xor
cltd
and
fdivl
jne
cmp
shrl
aam
push
jns
jbe
inc
inc
xchg
lods
pushf
shrl
inc
scas
xchg
shll
add
push
scas
and
out
mov
mov
aaa
scas
inc
imulb
push
insb
inc
adc
sub
xchg
in
ror
sahf
jnp
and
test
push
sbb
dec
mov
mov
xor
ret
je
jne
sti
adcl
xor
or
sub
pop
jns
out
pop
lcall
pushf
in
cmp
or
xlat
push
lods
cli
push
add
scas
mov
xchg
push
or
mov
scas
dec
push
adc
jl
dec
push
rorb
enter
fcompl
loope
loopne
mov
mov
xchg
pop
jno
cmp
jge
movsb
out
inc
xor
ret
pop
sahf
add
push
pop
push
inc
mov
popa
out
adc
mov
daa
cmp
in
ficoml
xor
mov
jg
gs
mov
rorb
push
sub
shrl
xchg
in
sub
sbb
aad
xchg
das
inc
lret
insb
xor
adcl
es
sbb
test
test
pop
lahf
pop
mov
sub
adc
cvtps2pi
dec
pop
sbb
and
mov
pop
scas
out
aad
test
push
mov
stos
jl
sub
fldl2t
xchg
xlat
int3
aas
int
out
sbb
jg
dec
ss
jge
xor
jno
mov
movsl
aad
pop
mov
loope
cmp
jbe
jecxz
dec
sub
loop
mov
cwtl
ds
div
jge
sbb
push
scas
rcll
inc
adc
mov
xchg
in
lcall
sbb
or
pop
xor
loope
jecxz
mov
ds
lahf
sbb
add
js
loopne
pushl
rcl
leave
jns
outsb
dec
cs
or
nop
inc
dec
test
cmp
insb
mov
call
pop
jo
push
inc
add
mov
inc
jge
outsb
sbb
fwait
popf
pop
inc
imul
adc
jg
popf
jp
push
scas
icebp
rcrb
sub
dec
xchg
xor
mov
cmpl
hlt
aad
mov
mov
jmp
fistl
jmp
jp
push
mov
push
cwtl
mov
or
jp
and
gs
pop
ret
pop
lcall
nop
test
jae
adc
imul
data16
push
shlb
inc
or
test
shufps
jne
push
scas
jb
fs
leave
les
test
insb
pop
lds
xor
xlat
int
roll
add
push
mov
popa
and
dec
cmpsl
mov
push
xor
out
add
inc
push
hlt
adc
jno
sti
xor
sahf
lods
out
shrl
fnstenv
test
lahf
and
inc
push
testl
pop
inc
jp
js
cmp
mov
add
testl
fs
lret
jecxz
mov
xor
inc
fstpt
lahf
mov
ret
loop
mov
sbb
test
add
mov
popa
inc
inc
jg
cwtl
jnp
sbb
jge
insb
aam
inc
ret
sbb
js
mov
loopne
rolb
shrb
pop
inc
inc
xor
pop
mov
les
divb
das
add
aam
arpl
pop
pop
and
sbb
lret
or
sub
and
mov
jmp
lret
mov
ret
lcall
xchg
sbbb
mov
mov
and
int
bound
and
or
fwait
xchg
dec
xlat
imul
ljmp
dec
mov
aad
jae
lods
ja
pop
jo
fs
lds
jge
xor
fistps
loopne
sbb
push
jns
dec
dec
inc
addl
sbb
loopne
mov
pop
gs
sub
test
xchg
mov
push
dec
jno
sub
jl
push
lods
mov
lcall
dec
xor
xchg
shrb
mov
xchg
cmp
or
jecxz
and
pminub
pop
fidivrs
call
cmp
jae
js
gs
push
jl
mov
xor
push
sahf
add
into
imul
mov
sbb
js
inc
aad
stos
js
jne
xor
insb
pushf
sbb
in
sbb
inc
notb
sub
push
cmp
lahf
addr16
adc
sahf
das
lock
pop
sbb
cmp
or
andb
jae
ja
xchg
pop
pop
xchg
xchg
jp
mov
js
sbb
xorl
outsl
jo
and
cmp
andb
cltd
xchg
shll
or
mov
xlat
out
jbe
int
lcall
je
add
les
in
aad
rcrl
aaa
adc
push
lret
test
mov
int
adc
xchg
xchg
dec
sub
in
sarb
fmulp
dec
xor
lds
lds
sub
cmp
in
and
mov
xor
aaa
or
icebp
sbb
push
inc
sbb
jmp
les
and
lahf
sbb
loope
stc
xchg
mov
sbb
js
add
scas
xor
ss
vmovd
jge
and
fidivrl
or
rcrb
push
dec
dec
mov
inc
daa
dec
xchg
movd
xor
xor
movsl
inc
pop
sub
xor
inc
stc
out
xchg
jmp
mov
or
xor
inc
mov
movl
cmp
hlt
bound
cmp
dec
pop
fnsave
out
cmp
jmp
rorl
xchg
push
mov
icebp
xchg
cld
in
inc
aaa
sub
repz
adc
dec
je
mov
jbe
xor
jae
pop
mov
ret
stc
add
and
fadds
or
adc
cmpsl
es
shl
sub
sub
pop
jae
push
and
mov
mov
dec
inc
pusha
inc
mov
cmp
jmp
jl
add
or
fwait
pushf
jecxz
filds
das
icebp
xor
mov
icebp
mov
mov
add
sub
test
mov
sbb
ret
cmp
stos
sub
idivb
or
movsb
les
xchg
adc
pushf
and
adc
cmp
sti
jb
cmp
imul
xchg
movsl
popa
test
jg
xlat
pop
add
outsb
and
gs
sbb
fmulp
dec
inc
lods
and
ret
dec
push
insl
mov
int
lahf
stos
jo
in
js
dec
ret
or
sbb
mov
inc
out
je
mov
mov
pop
mov
in
mov
sahf
fwait
pinsrw
inc
pop
jb
push
insl
push
cmp
repz
mov
sahf
adc
xlat
shl
mov
and
pop
cmpsl
clc
xchg
mov
xor
and
pusha
roll
rcrl
scas
cmpsl
ljmp
xor
inc
xchg
and
ds
cld
push
jb
frstor
add
pushf
mov
jmp
and
int3
popa
lret
enter
fldcw
and
mov
lods
mov
out
pop
cld
cmc
sahf
add
xchg
imul
js
cwtl
pop
mov
in
fwait
stos
jmp
inc
or
mov
outsb
adc
and
cmp
addw
test
mov
dec
push
jp
and
into
js
pop
clc
mov
test
jne
jns
adc
inc
sbb
test
mov
mov
out
arpl
aaa
dec
mov
fisttps
out
arpl
or
add
sbb
aad
and
imul
jns
push
xchg
js
aad
repz
loopne
js
mov
outsb
loope
mov
pop
xlat
sub
ror
rorb
dec
and
lret
sbb
shlb
mov
pop
xor
and
insb
jo
or
push
dec
push
popa
fisttpll
xchg
sub
adc
inc
inc
leave
xchg
in
loope
outsb
mov
mov
dec
and
cwtl
jno
dec
xchg
mov
nop
mov
cld
cmp
aam
dec
std
dec
mov
jge
push
nop
pop
leave
push
xchg
cli
add
div
out
push
sub
repz
addr16
pop
mov
mov
ror
inc
sub
add
scas
into
push
pop
insb
repz
mov
loopne
adc
xchg
cmp
cmovge
int
mov
enter
lock
pop
test
add
lock
adc
or
popf
mov
pop
out
xlat
sbb
xchg
push
ror
jno
adc
rep
pop
mov
pop
fidivrs
in
sbb
cmc
imul
mov
test
mov
pop
idiv
mov
sub
hlt
push
fiaddl
addr16
jle
push
imul
or
inc
and
sub
shll
cmp
in
push
and
add
mov
pusha
fcmovnu
mov
stos
rcll
dec
push
jno
outsl
jge
inc
in
aam
adc
mov
imul
scas
mov
call
push
mov
push
fwait
pusha
pop
pop
icebp
and
dec
adc
ds
sarl
les
imul
xchg
ret
fidivrl
stc
jo
mov
adc
jp
lret
xchg
dec
test
outsb
cli
mov
dec
cmpsl
mov
push
push
repz
xor
cs
fwait
daa
fs
out
aam
xor
jecxz
dec
cmp
lahf
scas
out
push
aaa
outsl
test
lcall
or
cmp
ret
xor
inc
adc
jle
jl
and
jmp
or
or
ret
pop
clc
push
test
in
loope
push
xchg
xchg
ljmp
outsb
icebp
push
inc
jmp
or
xchg
pop
push
loopne
jg
loop
imul
xchg
mov
mov
int
roll
adc
adc
cmpb
jns
clc
xor
sahf
fnstsw
sub
jl
mov
xor
aas
xor
das
mov
mov
push
bound
addr16
mov
push
dec
cmc
pushf
cmpsl
divl
call
insb
dec
dec
inc
adc
or
mov
cmp
push
fisttpl
pop
mov
out
je
movsl
pop
fcmovnu
iret
sahf
pushf
bound
inc
dec
int3
or
inc
sub
lret
cmp
xchg
sti
mov
addl
xor
cs
mov
xchg
inc
push
push
jmp
mov
cmp
lods
cwtl
push
add
or
in
cmpsb
add
test
insb
out
or
mov
test
outsl
aas
dec
push
mov
clc
je
inc
andb
test
pop
jb
mov
insl
pop
aaa
dec
jb
out
mov
mov
ret
cld
loopne
aam
rcl
jbe
cmp
test
pop
sub
mov
lcall
xchg
icebp
enter
fdivs
and
cmpsl
add
mov
pop
fildll
jg
lods
cmp
call
adc
loopne
push
out
in
xor
sbb
adc
jno
adc
mov
mov
test
les
and
pushf
mov
ds
fwait
and
or
inc
arpl
pop
jbe
xlat
inc
aaa
roll
outsb
push
mov
rorb
mov
push
imul
sahf
sbb
xchg
pop
mov
adc
add
loop
dec
ret
aam
les
ss
movsb
ljmp
mov
leave
mov
xchg
and
mov
jns
lea
aam
mov
fistl
js
fstps
bound
or
xor
fstps
mov
sbb
mov
push
inc
jno
outsb
jp
repz
pop
xor
js
lea
stc
xchg
sbb
dec
out
jb
sbb
fwait
aam
xor
push
lock
xor
adc
fldenv
adc
mov
xchg
daa
arpl
jp
mov
xchg
push
scas
jo
fists
ror
outsl
xor
pop
push
and
jle
and
xor
inc
push
lock
clc
and
cmc
ja
fbld
mov
push
cli
jbe
jae
movsb
jne
cmc
jmp
nop
jnp
mov
cmp
xor
lret
and
mov
neg
lret
xchg
jae
fisttpl
mov
insl
cmp
movsl
insb
push
imul
mov
mov
fs
mov
xchg
imull
and
popw
mov
or
fnstenv
mov
sbb
popa
mov
bsf
xor
addb
cli
jg
jne
cwtl
test
test
scas
xor
inc
and
add
loopne
lock
shlb
xor
add
adc
and
xor
inc
and
add
loopne
lock
shlb
xor
add
xchg
jo
inc
xor
les
push
xor
adc
mov
les
hlt
nop
add
adc
and
xor
inc
and
add
loopne
pop
push
shlb
jg
outsl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
xchg
in
aam
fsubl
test
hlt
fs
xor
inc
xor
mov
loopne
xchg
in
aam
les
test
adc
inc
push
xor
add
push
and
push
je
cmp
data16
aam
fidivl
test
aaa
fs
xor
das
jno
dec
xor
add
hlt
fdivrs
shlb
ds
filds
jnp
mov
scas
pusha
sbb
push
mov
cmp
aaa
push
pop
imul
enter
or
fs
mov
lods
shl
shll
mov
jne
aam
push
xor
in
jmp
lea
cld
addr16
sbb
cmp
hlt
jnp
scas
adc
mov
pop
push
je
jnp
cltd
sbb
pop
mov
cmpl
and
jno
add
fcomps
or
movsl
mov
cmp
sbb
shll
lods
inc
rolb
pop
jecxz
add
fcomip
ret
aam
les
mov
movsb
in
push
test
je
fs
push
add
or
pop
and
adc
insl
in
fwait
out
sarb
mov
aam
adc
inc
cmp
add
push
cmp
push
adc
hlt
icebp
out
aam
mov
cld
mov
adc
mov
adc
cmp
jno
push
call
mov
aam
in
hlt
test
adc
and
xor
inc
xor
and
adc
add
hlt
xchg
in
aam
les
test
adc
and
xor
inc
xor
and
adc
add
hlt
xor
or
sbb
xchg
out
inc
int
sbb
cmp
lret
icebp
jb
jp
xchg
jecxz
ja
fwait
or
mov
jns
hlt
jmp
aad
jmp
push
scas
and
cmp
jle
dec
sub
jnp
mov
pop
pop
shlb
scas
add
xchg
mov
adcl
add
loopne
enter
cmc
mov
inc
mov
ljmp
call
ss
in
stos
sbb
insl
pop
push
cmpsb
scas
ja
mov
unpcklps
icebp
test
in
push
in
push
mov
ja
fcoml
xchg
aam
popa
jae
xchg
push
cltd
jmp
iret
mov
cmp
cmp
jb
inc
pop
jg
mov
hlt
inc
mov
out
mov
pop
fwait
push
mov
add
orl
and
mov
xchg
sub
and
fidivrl
test
sbb
adc
or
or
xor
ficoms
aam
stos
ja
ret
outsb
test
repz
ret
bound
sbb
push
ret
imul
jl
jb
ret
sbb
jb
fsubrs
das
out
and
push
ljmp
mov
pop
pop
nop
sbb
add
lahf
push
jmp
out
lea
mov
or
add
and
mov
out
leave
ds
int
mov
xchg
std
pop
sbbb
sbb
ds
xchg
popf
or
dec
aas
jo
je
insl
sarl
jb
out
stos
xor
pop
mov
sbb
testb
push
sarb
cli
adc
aad
movsb
call
mov
clc
dec
inc
into
sub
xor
mov
icebp
cmp
dec
mov
mov
pop
xor
cmp
fidivs
aad
shr
add
xor
imul
mov
nop
fstl
mov
jno
and
pop
mov
hlt
xchg
insb
add
ja
fst
je
and
insl
adc
gs
into
leave
insb
mov
cmp
xor
mov
dec
stos
pop
rorb
ret
jle
andl
push
clc
mov
pop
mov
sbb
cmpsb
arpl
sti
aam
lcall
jl
xor
cmp
ficoms
or
stc
jp
inc
gs
leave
test
sub
call
fucomip
pop
lds
mov
and
dec
rclb
lcall
and
imul
ss
dec
sahf
rcrl
imul
leave
pop
mov
and
sbb
enter
sbb
les
loop
int
xchg
loop
or
dec
push
pop
loope
das
sub
ss
push
clc
gs
ret
pop
add
cmc
cld
cmc
xchg
ss
mov
pop
push
sub
inc
stos
daa
aad
movsl
movsb
cwtl
sbb
ret
add
jbe
sub
push
pop
outsl
icebp
dec
xchg
lcall
lods
sub
rol
jge
dec
popa
adc
ja
jbe
jb
cmpl
mov
shrl
in
xor
and
daa
jnp
sub
pushf
cmp
icebp
ds
cmp
inc
dec
jp
or
lret
mov
push
repnz
mov
lcall
stc
cmp
in
and
adc
inc
xlat
lcall
and
nop
jo
dec
sub
rorl
and
cmp
push
mov
nop
sub
out
pushf
push
or
stos
push
mov
push
push
mov
std
xchg
adc
mov
push
mov
dec
int3
mov
push
jne
fstl
xchg
cmpsl
pop
ret
out
xor
repz
ss
out
mov
js
dec
xor
pusha
xor
lods
mov
inc
sti
xchg
or
shlb
sbb
jo
push
rcll
test
add
leave
out
nop
leave
call
mov
aaa
pop
outsl
je
xchg
out
inc
popa
pop
out
orb
jb
sub
jmp
mov
dec
adcl
arpl
call
lods
pop
fdivrs
aam
aas
stc
aaa
ss
lock
pop
jg
rol
or
dec
mov
and
xchg
dec
add
hlt
push
pop
sbb
loop
rcrl
ja
or
or
sub
mov
adc
jns
push
push
sti
inc
inc
movsb
jno
movsl
js
cmp
repnz
dec
lret
gs
pslld
popf
push
adc
or
sub
or
mov
push
mov
or
cmc
ljmp
push
cld
fsubrs
sub
inc
or
roll
add
pusha
xchg
shrb
push
jge
pop
int
lods
enter
pushf
mov
sbb
xchg
dec
xor
xchg
add
mulb
add
ljmp
jno
data16
xchg
pushf
mov
adc
jp
xchg
xor
adc
movsb
test
lret
insl
repnz
ljmp
fisttpll
out
rcrl
outsb
add
jge
or
in
mov
xchg
sbb
mov
dec
add
xor
fs
ljmp
adc
xchg
movsl
ficoms
push
mov
inc
shlb
jmp
mov
mov
mov
sub
ret
sub
test
lods
aam
mov
lcall
cwtl
jb
pop
and
pusha
cli
push
dec
xor
ret
and
and
lock
fstpt
adcl
popf
mov
xchg
and
mov
jl
rorb
jp
xchg
and
sbb
nop
xor
clc
xor
mov
sbb
insl
in
sub
dec
xlat
mov
pop
push
sbb
jbe
push
hlt
sub
stc
cmc
je
ret
mov
es
inc
lds
addb
push
inc
and
enter
ror
jmp
cld
and
rclb
outsl
pop
or
enter
das
or
or
mov
cmp
fsubs
pop
loope
sti
jg
bound
cmp
in
aas
dec
in
push
pop
jno
imul
ljmp
xor
or
lock
or
push
cmp
sbb
adc
cmp
call
sahf
xchg
adc
fcmovnu
in
dec
sub
movl
xlat
leave
xor
data16
sbb
bound
inc
jp
ljmp
inc
in
push
sub
pop
sub
jp
adc
push
pop
mov
pop
repz
sbb
cmp
xchg
adc
and
mov
lea
xor
scas
aas
dec
jp
and
pop
xchg
mov
aam
fwait
dec
xchg
popf
adc
outsl
jge
lods
mov
mov
lea
push
notb
sbb
and
mov
ss
jnp
sub
and
pop
dec
ljmp
xor
mov
addr16
pop
pop
or
jne
cmpsb
lods
mov
icebp
mov
dec
lcall
sub
fsub
dec
pop
mul
outsl
test
mov
fcompl
les
inc
sbb
lea
mov
sahf
fidivs
mov
data16
in
sbbb
pop
mov
jns
imul
xor
jno
xchg
notb
xchg
insb
loop
fdivrl
dec
cwtl
xchg
jno
mov
mov
sti
xchg
pop
das
lahf
int
ja
and
mov
jp
push
cmp
dec
fstl
xor
add
mov
or
cmp
or
aaa
or
xor
mov
dec
mov
bound
and
bnd
adc
inc
mov
jo
sbb
fwait
pop
jmp
sub
pop
cltd
push
int
loopne
add
mov
dec
adc
and
aam
imul
pop
ds
sub
stos
mov
or
mov
les
sub
adc
outsl
xchg
daa
and
outsb
sub
push
jb
sub
mov
sub
push
mov
cld
test
mov
aam
dec
add
or
sbb
dec
sarl
and
xchg
push
push
xchg
inc
and
cmp
xchg
ljmp
jno
inc
mov
adc
push
shrb
movsb
sub
fcomip
int
shlb
fwait
leave
jp
outsb
rcrb
mov
sub
mov
lods
mov
or
lea
movb
dec
sahf
jge
sahf
fs
lods
stos
jnp
lea
lcall
or
rcrb
pop
push
scas
add
pop
mov
dec
cmc
sbb
test
inc
addr16
ds
xor
mov
and
add
pop
add
lret
sbb
push
jae
cmp
dec
jmp
lds
and
outsb
dec
loop
jb
push
into
jmp
push
or
xchg
adc
les
fstpl
dec
cmc
or
mov
jl
sahf
vmovhpd
test
pusha
jge
mov
inc
ljmp
ss
mov
cmp
inc
int
rorb
loop
mov
das
outsb
or
mov
aaa
add
repz
sbb
xor
sbb
mov
mov
test
outsb
cmpsb
scas
aas
clc
mov
and
mov
sti
adc
pop
shrb
stc
push
test
add
call
movsb
add
dec
sbb
cmp
das
and
fwait
test
inc
inc
push
mov
adc
jl
mov
jnp
cmp
roll
jne
js
mov
push
inc
fldcw
jnp
dec
iret
cwtl
cltd
out
mov
enter
enter
push
jmp
dec
icebp
cmp
xchg
push
or
mov
insl
and
jg
cwtl
xor
sub
mov
mov
lcall
dec
sbb
jg
popf
outsl
mov
jg
imul
mov
gs
adc
mov
lea
sti
push
aas
cwtl
ret
ljmp
sti
sub
pop
insl
jb
xchg
jp
fldl
adc
test
add
jmp
mov
add
mov
xor
add
add
jmp
cmp
pop
mov
enter
or
mov
dec
mov
or
addr16
lds
lret
sub
aaa
fmul
addr16
inc
fisubs
and
pop
push
mov
andl
push
push
pushf
xchg
pop
data16
jae
cmp
loopne
push
int
cmp
hlt
int3
pop
mov
shlb
orb
lds
dec
into
in
jp
sub
dec
and
jb
mov
enter
in
pop
xor
push
out
jecxz
mov
mov
push
icebp
int3
xchg
mov
sbb
mov
inc
and
leave
insl
in
repnz
les
ljmp
jge
stos
lcall
mov
out
jae
loopne
jp
or
insb
fistpl
mov
sar
insl
inc
xchg
out
or
or
out
adc
xchg
adc
inc
stc
mov
sbb
xor
fbstp
out
ret
repz
clc
aaa
dec
shlb
rorb
imul
mov
jnp
inc
add
shl
gs
push
dec
sbb
mov
inc
jne
lods
cwtl
inc
stc
jmp
bound
mov
pop
jmp
testb
jns
pop
xchg
ret
and
mov
js
rcrb
fnsave
flds
jge
fwait
fs
shlb
sbb
rol
mov
jl
xchg
adc
inc
or
cmp
sub
mov
mov
dec
sbb
rcrl
stc
add
aas
mov
cmp
repz
loopne
and
sbb
pusha
mov
fwait
mov
int
inc
mov
das
and
rorl
jbe
fcompl
clc
and
adc
xor
arpl
cld
xor
push
repz
and
cmp
repnz
loop
nop
push
xchg
stos
sub
xchg
xor
dec
sbb
iret
mov
mov
cltd
aam
lahf
mov
inc
pop
rcrl
ljmp
outsl
in
loop
mov
mov
repz
fbstp
xchg
lcall
lods
mov
mov
mov
sbb
mov
shr
push
adc
js
int3
dec
loop
xor
testl
bound
lahf
cs
gs
imul
minps
push
fimull
paddb
xchg
jne
xchg
add
aam
rcrb
push
sub
stos
xor
loop
xchg
dec
inc
inc
add
cmpl
clc
pushl
and
xchg
fnstcw
xchg
inc
sub
jno
cmp
test
movsl
jnp
cmp
mov
lds
ficomps
mov
loop
sbb
in
call
decl
dec
add
sbb
roll
dec
xor
scas
pop
xchg
mov
sub
rorb
fwait
repz
out
push
pop
mull
or
bound
shlb
ds
std
pop
lea
dec
and
inc
sarb
iret
cwtl
and
mov
inc
fs
lock
fwait
pop
push
mov
cmp
push
ljmp
dec
outsb
mov
dec
cmp
mov
add
clc
push
out
orl
ja
sbb
aaa
addl
cmc
es
out
inc
dec
mov
scas
pushl
stos
sti
movsl
add
push
jmp
je
loopne
xor
maxps
sub
jmp
push
stos
xlat
push
adc
inc
outsb
jae
lret
outsb
cmp
movsb
cmp
cmpsb
out
sub
mov
dec
or
pop
xchg
cmpsb
jo
fnstcw
cmp
or
in
push
out
gs
pop
lahf
stos
xchg
daa
ficompl
mov
in
jmp
ss
sbb
add
dec
loope
jb
fldcw
out
nop
mov
xchg
and
xchg
pop
mov
pop
jns
push
int
jne
push
pop
les
xor
lcall
and
and
cmp
jne
mov
mov
es
dec
mov
gs
push
mov
ljmp
ffreep
xchg
push
mov
sbb
scas
xchg
mov
pop
cmpsl
loop
ret
xchg
loope
xchg
push
fs
arpl
mov
xchg
and
mov
pop
pop
test
stos
lds
sbb
ret
mov
sub
cmp
lret
aaa
and
shll
js
stos
jo
ror
sub
addl
outsb
pop
in
sbb
ja
mov
popf
and
jp
jl
add
push
mov
in
sarb
cmp
mov
xor
rclb
inc
arpl
testl
jbe
clc
or
test
xchg
sub
sub
clc
out
jb
inc
shlb
and
sub
insb
sub
mov
push
and
bound
stos
push
notb
dec
mov
btr
adc
lock
das
les
push
lcall
dec
fistl
fdivr
jle
ret
mov
xchg
push
mov
ret
stos
repz
dec
lahf
xor
int
icebp
out
ret
fimuls
xor
mov
xchg
fnstcw
jae
stos
cmp
mov
push
xchg
rcll
fmul
daa
jne
pop
lods
or
push
or
leave
das
in
je
ljmp
lock
movsl
mov
pushf
cmp
add
mov
jecxz
inc
mov
inc
jnp
cmp
js
aaa
xor
int3
sbb
adc
xchg
push
mov
rcl
div
xchg
imul
int3
lea
out
imul
pop
pop
popa
inc
bound
daa
cmp
shrl
mov
lock
int3
pushf
sub
inc
dec
jbe
sbb
fnstcw
fldenv
insl
lods
jae
mov
dec
rorl
js
rcr
sub
rclb
jp
popa
mov
xchg
inc
nop
sbb
push
adc
jecxz
adc
mov
add
in
test
pop
lds
fistpl
push
bound
jge
push
adc
je
adc
xchg
xor
insl
out
mov
sbb
test
sbb
sub
jbe
jp
cmp
pusha
sub
out
xchg
jp
adc
jno
popa
fdivs
repz
push
fidivrs
call
xor
sub
jnp
and
int3
push
and
lret
pusha
jo
mov
daa
loop
ret
mov
and
ret
cmp
push
mov
xchg
out
or
jl
dec
add
ja
push
and
xor
mov
sbb
mov
push
loope
mov
xchg
mov
cmpsl
pop
xchg
lods
scas
xor
loopne
mov
jae
cmp
repnz
lret
stos
incb
adc
dec
jno
jge
stos
test
lds
adc
xorb
dec
es
out
dec
cmp
sub
cmpsl
jno
push
inc
sub
inc
rolb
loop
inc
mov
imul
jne
dec
outsb
shlb
les
lret
aam
hlt
push
xor
mov
mov
ja
mov
fwait
loope
mov
addr16
lds
push
or
lods
mov
mov
bound
pop
inc
and
ret
xchg
mov
shr
int3
pop
push
ja
subb
mov
in
or
repz
xchg
cli
add
sub
daa
pop
xchg
dec
cmpsl
cmpsb
fistpl
out
inc
enter
pop
and
mov
mov
dec
mov
pop
mov
push
push
jecxz
inc
lds
ds
jns
orb
pop
or
out
repz
add
cmp
dec
jmp
sbb
xlat
leave
aam
pop
dec
pushf
pop
imul
leave
lock
mov
sbb
pusha
or
and
leave
push
cmp
inc
pushf
dec
aaa
and
mov
xor
dec
sub
aam
jp
addr16
call
imulb
cmp
xchg
mov
mov
xchg
ja
das
dec
lret
icebp
pop
loope
fcompl
roll
fistpll
pop
push
xchg
js
lods
pushl
pop
jp
jmp
mov
hlt
adc
pushf
orl
jle
movsb
ficomps
sbb
or
and
sarb
push
icebp
popf
lock
sub
aam
pop
pop
xor
fldenv
push
fcmovnu
mov
xchg
sub
and
cmpsb
mov
js
scas
popf
repnz
xor
push
test
push
push
rol
push
imul
and
and
push
pop
outsl
cmp
shll
outsb
push
add
fwait
pop
subb
push
dec
imul
pop
scas
xor
or
popf
test
inc
push
call
xor
in
pop
out
scas
sbb
pop
or
std
or
cmp
and
push
push
dec
sbb
xlat
test
dec
mov
sub
push
shll
cmp
adc
in
lds
sbb
icebp
fsubs
rolb
dec
iret
mov
lret
cmp
ja
mov
ds
mov
sbb
or
stc
cmpsb
cmp
or
rcl
adc
pop
out
mov
push
sahf
mov
or
xor
pop
mov
pop
cmp
outsl
icebp
sarl
mov
jl
or
iret
adc
jge
add
push
jbe
enter
mov
je
flds
cli
int3
in
xor
inc
inc
outsl
roll
stos
popf
push
jecxz
imul
pop
pop
repz
das
pusha
xchg
pop
xchg
mov
ljmpw
test
data16
push
ret
pop
fwait
inc
dec
push
and
lret
fsubp
push
gs
push
jmp
push
filds
xchg
push
xor
fnstenv
and
mulb
aas
imul
add
inc
inc
dec
jg
lret
std
iret
push
xchg
popa
inc
pop
pop
sub
icebp
jle
ja
mov
and
lods
ds
movsl
xchg
xchg
sub
out
jbe
mov
clc
xlat
sbb
leave
in
faddp
dec
jne
ret
xor
imul
popa
mov
add
or
lcall
add
inc
mov
sbb
pop
sub
add
outsb
mov
add
xor
fildll
call
mov
push
jg
mov
push
push
fldenv
pusha
cli
adc
test
sbb
dec
or
and
cmp
insl
push
push
repnz
loope
pop
rcll
das
or
add
sbb
dec
out
mov
cmc
push
inc
sub
rcrl
scas
xor
and
jecxz
mov
les
test
adc
and
xor
inc
xor
and
adc
add
hlt
xchg
in
aam
les
test
adc
and
xor
inc
xor
and
adc
add
hlt
movsb
les
push
mov
and
xchg
xor
add
adc
aam
xor
inc
xor
and
adc
add
hlt
enter
xchg
les
test
jmp
mov
xor
sti
sahf
sbb
or
cmp
sub
pop
jle
or
sbb
aad
mov
fcmovnu
lret
sti
jmp
sbb
or
cmp
sub
pop
dec
outsb
jnp
adc
mov
fmulp
out
sti
jmp
sbb
or
cmp
sub
pop
dec
outsb
jnp
imul
fcmovne
lods
mov
into
xchg
xchg
cwtl
jle
push
inc
bound
sub
jnp
dec
xchg
lock
loopne
js
mov
sahf
dec
fstpt
dec
xchg
sbbl
scas
dec
pop
push
into
in
or
out
popa
je
scas
xor
xor
and
out
push
mov
and
sub
in
or
mov
into
push
clc
loop
sti
jo
push
lret
insl
jle
push
leave
pop
push
das
push
adc
jl
clc
jb
mov
jle
sahf
fs
je
aas
push
dec
fisttpl
ljmp
sub
outsb
adc
out
jmp
incb
popf
mov
adc
movsb
sub
adcl
dec
fcomp
inc
xor
out
sti
push
sbb
or
cmp
sub
pop
dec
outsb
jnp
imul
mov
lret
out
sti
incb
inc
cmp
or
cmp
sub
rcr
fistpll
orb
pop
pop
jbe
sub
cmp
outsb
adc
paddusb
repz
call
lods
lret
loope
js
xor
dec
push
dec
pcmpeqw
outsb
jnp
imul
mov
lret
out
sti
jmp
sbb
or
cmp
sub
pop
dec
outsb
jnp
imul
mov
lret
out
sti
jmp
sbb
arpl
das
push
movsb
sbb
mov
cltd
jb
adc
add
pop
inc
xor
cmpsb
push
pop
sbb
mov
lret
add
mov
lcall
jmp
rcrl
mov
ja
push
mov
dec
mov
lods
adc
ret
add
cmp
mov
movsl
add
sub
movsl
dec
inc
jl
sbb
shrb
xor
pop
fdivrl
imul
imul
jmp
pop
cli
dec
mov
lret
adc
inc
test
inc
mov
flds
inc
in
xchg
clc
mov
cmp
rcll
add
out
rcl
cmp
aaa
push
insb
cmp
fmul
pop
int3
cs
sbb
push
outsl
xchg
push
adc
xor
les
loopne
dec
imul
shrl
adc
pop
stos
push
sbbb
add
jo
xchg
lods
sub
loop
arpl
std
or
movsb
lea
loop
pop
sbb
shll
mov
mov
mov
xor
inc
xor
cmpsl
jae
xchg
sub
test
in
je
dec
ljmp
jl
push
cmp
cmp
adc
outsb
xor
arpl
sbb
jns
mov
insb
and
sub
jno
mov
xchg
repnz
cli
inc
sub
cmp
push
data16
dec
push
nop
out
std
fnstcw
iret
xor
xlat
sub
mov
and
fcoms
pop
mov
pushf
inc
imul
and
inc
push
orb
dec
jle
inc
jae
cs
xor
or
fisubs
pop
xchg
dec
stc
sbbl
and
in
pop
shll
or
fucomip
cmp
mov
shll
movsb
jbe
scas
pusha
push
xorb
cmpsl
cwtl
pop
mov
test
enter
push
imul
add
test
xchg
repz
daa
stc
inc
shll
fisttps
xor
dec
mov
std
addr16
push
xchg
xchg
in
xor
fwait
mov
inc
daa
icebp
and
sti
ja
aaa
sahf
adc
push
cmp
or
lret
adc
test
sbb
pop
sbb
out
inc
fistl
clc
out
mov
sbb
sub
mov
adc
std
ret
xchg
jb
es
imul
shll
jo
mov
jb
aam
cmp
sbb
xor
lods
mov
push
mov
push
inc
or
and
add
cltd
cmp
arpl
in
adc
jo
jno
shrl
push
lret
popa
dec
movsl
in
sbb
add
std
and
push
scas
iret
cmp
data16
inc
outsb
fisttps
pop
sbb
jnp
call
fcomip
push
stos
mov
mov
cmpsb
jno
cmc
test
js
mov
xor
lret
mov
sbb
add
sbb
push
pop
or
in
cmp
jnp
sub
inc
in
scas
push
jbe
pop
xor
lahf
int3
adc
cmpsl
or
mov
les
mov
xor
inc
cld
adc
inc
stc
inc
sub
ffree
cli
adc
xlat
mov
addr16
sbb
or
add
dec
inc
movsb
out
cmp
dec
jge
inc
inc
mov
jae
stos
arpl
xor
loope
shll
mov
cwtl
xor
ficomps
pop
fcoml
and
pop
or
inc
leave
cwtl
push
ret
sub
and
pop
sbb
stc
pusha
add
loope
int
popf
push
roll
xchg
add
sub
out
add
jl
mov
movsl
orb
mov
xlat
add
cs
jge
ljmp
adc
sub
inc
movsl
push
cmp
pusha
insb
stc
jle
addr16
or
iret
sub
fdiv
xchg
mov
sub
subl
in
dec
scas
sar
scas
adcb
lds
push
enter
lret
fwait
gs
xchg
sahf
lcall
inc
jnp
inc
daa
jo
jp
jmp
sub
call
jnp
insb
mov
cli
scas
jae
adc
ja
repz
js
jp
mov
mov
aas
jne
jnp
mov
int
mov
dec
push
std
repnz
arpl
popf
add
inc
xor
mov
inc
cld
jb
xchg
mov
imul
pusha
adc
mov
mov
pop
dec
pop
jg
lods
adc
sahf
shrl
gs
jns
into
imull
push
mov
sbb
xchg
scas
sbb
cli
call
lret
fisubrs
push
jecxz
cmp
pusha
jge
pop
mov
ja
xchg
and
cmpsb
xchg
xor
fwait
add
pop
loopne
pop
add
mov
push
xchg
outsb
push
ds
sbbb
mov
mov
testb
aam
push
subb
sbb
mov
xchg
dec
icebp
test
mov
push
sub
imul
inc
adc
xchg
loopne
sbb
dec
in
dec
int
stos
adc
test
jge
test
mov
push
aas
fwait
movsb
data16
adc
movsl
sbb
js
js
ds
mov
test
pop
mov
cmp
pop
adc
stos
movsl
xchg
xchg
cmpsb
in
out
sbb
add
fnstcw
lea
out
js
mov
fstl
sti
jge
adc
rorl
dec
mov
sub
jge
lds
into
insl
xchg
dec
in
cld
int3
shll
sub
mov
jbe
gs
test
fistps
pop
jb
xchg
std
and
enter
mov
add
add
rolb
bound
lods
iret
cli
mov
sahf
addr16
jns
ja
in
cmc
jnp
add
roll
mov
aad
or
or
leave
add
push
aaa
pop
sbb
bound
mov
jl
inc
jb
lods
pop
adc
mov
daa
jge
clc
arpl
shufps
fnstenv
xchg
sarb
cmp
mov
nop
ljmp
sub
add
inc
imul
mov
insl
cld
xchg
pop
fwait
mov
and
leave
in
jecxz
fisttpll
mov
mov
js
nop
fcomps
inc
sarb
xor
imul
imul
sub
dec
push
pop
ss
xchg
dec
pop
in
add
xchg
push
dec
clc
add
cmp
cmp
in
or
xor
mov
vpaddusw
fisubrl
dec
aas
fnstsw
cmp
test
sti
movsl
xchg
bound
popa
add
std
push
cmp
cld
addl
flds
mov
lea
les
scas
or
pop
cmp
out
pop
andb
cs
ret
hlt
lcall
adc
mov
insb
push
lahf
je
xlat
xor
lcall
sti
vhsubpd
into
mov
filds
jg
and
add
in
or
xor
jp
xor
les
call
sub
call
inc
mov
sub
mov
adc
shll
rol
cmp
int
inc
push
sub
pop
in
jl
pushf
gs
stos
pop
movsl
repnz
popl
or
fdivrl
scas
mov
adc
inc
mov
pop
mov
dec
mov
or
jecxz
dec
or
or
inc
fstp
ret
xchg
add
dec
nop
roll
js
pop
mov
lods
sub
xor
push
push
dec
sub
and
adc
int3
in
imul
mov
pop
imul
movsb
push
add
push
push
or
push
or
rcll
into
adc
mov
in
pop
dec
mov
and
imul
clc
mov
clc
adc
and
repz
mov
xchg
mov
xor
and
fs
jl
lock
cmpb
aam
lds
or
inc
inc
mov
mov
fisttps
andl
popf
jno
xchg
std
mov
jae
lahf
fstl
adc
imul
push
data16
aas
data16
xor
inc
xchg
push
lea
add
loop
insl
in
inc
cli
sub
adc
pusha
adc
or
aad
adc
mov
lock
vmovd
mov
mov
js
cwtl
test
mov
add
xor
addr16
js
and
lret
sbb
jle
dec
test
push
jne
xor
inc
inc
mov
dec
test
cmp
lret
pop
lock
push
xchg
fisubl
cwtl
or
xchg
fiadds
cmp
sub
test
sub
and
scas
add
xor
lods
les
out
hlt
cli
jecxz
aad
or
add
push
push
xchg
aaa
xchg
in
xorb
aaa
dec
mov
test
sbb
or
iret
fisubs
add
or
pop
jmp
mulb
out
sub
dec
push
ds
mov
inc
push
scas
add
xor
xchg
sub
push
mov
out
cmpsl
fs
pop
mov
jne
xchg
push
int
and
xor
movsb
mov
or
sub
cwtl
cmp
orb
add
cmpsb
popf
lds
cmp
mov
inc
jg
and
leave
push
test
jnp
mov
xchg
and
sbb
pop
sbb
in
shrb
cmp
mov
incl
repz
inc
shrl
mov
lods
adc
mov
inc
adc
inc
clc
sub
push
sbb
adc
outsl
mov
pop
leave
int
push
mov
shlb
jnp
mov
lcall
jne
mov
dec
jmp
scas
gs
cmp
into
jne
xchg
or
pop
rclb
enter
gs
or
stc
xor
sub
xor
cmp
jl
and
adc
imul
ret
xor
es
dec
out
cmpsb
inc
push
sub
insb
adc
lea
cwtl
out
or
loop
cli
push
fisttpl
or
test
push
push
pop
or
sar
or
fnsave
push
jbe,pn
adc
push
push
fcoml
push
fsts
ret
adc
jae
cltd
mov
loopne
aam
xchg
cmp
pop
jmp
inc
inc
sbb
lret
lds
arpl
jmp
sti
cmp
inc
add
jp
clc
and
or
cwtl
sub
or
ret
adc
out
data16
lea
add
sub
push
cli
or
testb
jecxz
sbb
or
in
mov
repnz
es
dec
xorl
mov
fdiv
stos
in
ret
stc
dec
push
mov
cmp
cmp
and
rcrl
je
fistl
lcall
sbb
insb
mov
push
sub
pushf
jbe
movsl
inc
andl
into
fdivr
sub
jbe
les
sti
idivl
dec
xorl
out
into
add
fcompl
pop
jo
push
mov
mov
movsl
movsb
jmp
push
gs
pop
idivb
jnp
loop
cmp
cmp
pushf
sub
enter
bound
push
jmp
mov
arpl
fs
and
pop
and
add
sub
mov
loopne
push
jno
popf
push
pop
xchg
jmp
pop
sub
sti
add
rcr
dec
iret
shl
cs
movsl
mov
push
mov
movsb
add
pop
and
cmpsl
fmull
faddl
pop
imul
pop
or
jb
pop
mov
loope
sbb
in
bound
movsb
hlt
fstps
fildll
cld
mov
mov
or
bound
dec
addb
repnz
jge
inc
inc
jae
xor
and
xor
fidivrs
adcb
or
sub
lret
push
jae
add
mov
fwait
or
xchg
xchg
rol
add
pop
lods
push
ja
shlb
push
mov
dec
ret
cmp
mov
inc
pop
xor
repz
fldenv
jb
gs
fiadds
pop
push
pop
adc
mov
outsl
ss
imul
repnz
lea
out
jmp
sbb
jmp
mov
push
iret
in
gs
lret
mov
repz
add
push
cmc
push
sbb
ss
les
shll
inc
push
ss
scas
add
fwait
mov
lahf
push
rorl
arpl
fildll
push
arpl
aam
and
pop
movsl
fnstcw
add
inc
popl
push
inc
mov
push
sti
divl
in
leave
push
je
loop
imull
cmpsb
je
jmp
sbb
and
xlat
mov
xor
sub
sub
sbb
enter
arpl
imul
loope
lcall
inc
xchg
ficoml
adc
or
lock
push
push
sbb
push
shrb
xchg
xor
sbb
out
mov
aas
mov
or
lea
pop
std
sbb
jmp
xchg
adc
int
push
push
xor
inc
mov
js
or
lods
pop
add
push
xchg
pop
cmp
pop
mov
js
stos
lods
push
enter
mov
pushf
jl
adc
stos
sub
arpl
xor
rorb
jb
sbb
cmp
sti
jbe
xlat
popf
stc
mov
fidivrs
repnz
mov
insb
mov
xchg
or
loop
xor
repz
out
cmpsl
mov
sbb
incl
add
sub
sahf
or
push
dec
fdiv
dec
ja
ds
inc
inc
push
pusha
jle
inc
mov
jb
movsl
dec
test
popf
test
mov
and
cmpsb
ret
ljmp
ret
cwtl
imul
lahf
call
inc
data16
arpl
or
ljmp
cld
repz
dec
mov
adcl
test
add
out
ss
xchg
fisubrs
test
jp
int3
aad
fdivr
repz
lcall
sub
ret
aam
lods
cld
pop
inc
stc
dec
cmp
in
or
sub
pusha
stc
push
lods
jp
push
jne
lods
lds
add
push
inc
cld
mov
mov
jle
push
jg
mov
mov
xchg
adc
add
out
arpl
mov
inc
cwtl
xor
adc
adc
and
push
cmpsb
cmp
jmp
pop
mov
in
jle
sbb
sub
mov
movsb
fldt
mov
into
inc
sbb
outsb
mov
mov
mov
stc
mov
and
jbe
sub
mov
add
test
or
outsb
jl
inc
and
lea
sub
imul
adcb
das
adc
jle
rcll
insl
lahf
push
mov
les
pminsw
fwait
cmpsl
jmp
mov
jae
inc
add
inc
inc
pop
mov
cmp
pop
push
push
cmpsl
iret
out
adc
lret
jmp
sub
push
fs
xchg
mov
sub
call
repz
cmp
mov
jle
cld
popf
cltd
jecxz
shlb
or
adc
test
nop
les
sub
mov
div
fisttpl
mov
pop
shll
shrl
inc
cltd
pop
stos
mov
dec
aas
fisttpl
popf
inc
add
push
sbb
das
xlat
pop
cld
and
aaa
daa
gs
cmp
scas
scas
stos
rolb
test
clc
dec
fcmovnb
or
test
bswap
or
je
xchg
push
int
xchg
pop
mov
movsl
mov
mov
lock
lret
mov
jge
mov
cli
jae
out
fstpt
mov
loop
movsl
add
rcl
rclb
out
cmp
push
jge
adc
mov
inc
das
dec
or
or
int
cltd
xor
xorl
sub
inc
test
out
dec
das
out
mov
xor
push
popa
inc
adcl
pushf
scas
xor
mov
out
gs
sarl
fdivrl
fnstcw
dec
scas
fmul
pop
mov
loopne
hlt
dec
scas
xchg
test
out
mov
out
pop
mov
sbb
std
lods
mov
mov
cmpsb
lds
inc
imul
dec
fs
cmpb
lret
addb
inc
test
jmp
out
sbb
lret
lea
sub
bound
es
mov
and
popa
dec
mov
and
mov
std
arpl
adc
push
loope
dec
fisubrs
cli
leave
pop
stos
and
add
frstor
xchg
mov
sbb
lahf
cmpsb
lcall
mov
adc
movsb
dec
adc
inc
aas
clc
add
in
pop
loope
in
xchg
adc
push
lods
jne
scas
ss
add
jge
dec
ret
push
jbe
mov
arpl
adc
addr16
scas
insb
pop
repnz
fimuls
cmpsl
sub
mov
imul
mov
cli
mov
jae
leave
aas
sti
outsl
insb
call
or
and
jno
cli
mov
fcompl
cltd
dec
adc
shrb
sbb
xchg
xor
pop
adc
cmp
lea
lret
xor
out
lahf
pop
mov
or
repnz
dec
mov
xchg
call
mov
mov
xor
adc
jnp
dec
movsl
jle
push
in
cmp
add
and
cmpsl
adc
inc
jl
jns
jle
inc
out
stos
lcall
mov
sub
mov
or
mov
movsb
arpl
rolb
sub
adc
adc
mov
mov
cwtl
jne
addr16
xor
sub
lcall
fcomps
pushf
push
scas
cli
pop
inc
xor
dec
mov
ds
mov
dec
add
mov
in
xor
pop
xor
icebp
jbe
xchg
clc
push
xchg
xchg
adc
imul
cmp
popa
dec
fsts
sub
push
cmpsl
scas
enter
xchg
fwait
sahf
push
fisttpl
pop
andb
in
out
sub
mov
jge
scas
pop
idivb
clc
sub
xchg
or
std
sub
popf
sbb
jnp
jge
ljmp
out
mov
lods
push
addb
jo
imul
cmp
push
push
pop
mov
out
out
dec
les
and
repnz
push
hlt
mov
cltd
xchg
jnp
jb
imul
or
add
lret
pop
cwtl
stc
js
add
mov
imul
shr
and
dec
outsb
js
and
mov
jle
in
push
and
call
cli
sub
lahf
shr
or
test
fwait
mov
leave
add
mov
subb
mov
les
sbb
mov
fisttpll
fwait
rolb
or
cmp
inc
jg
test
xor
out
imul
fcmovne
out
pop
inc
mov
xchg
mov
push
pop
mov
push
jo
pop
pop
addl
cld
sarl
ja
cmp
xchg
std
add
aam
popf
call
push
mov
mov
mov
test
and
fstp
inc
negl
cmp
push
push
mov
clc
outsb
xchg
dec
enter
push
add
cwtl
test
xchg
in
pushf
jo
xchg
mov
mov
xor
push
leave
xchg
fiaddl
sub
sbb
ljmp
in
fcmovnb
fsin
adc
scas
cmp
mov
data16
popf
add
cmp
push
ret
jns
inc
or
fbld
sbb
mov
mov
mov
in
mov
das
sbb
sbb
scas
std
lock
mov
and
out
xor
sbb
popa
inc
mov
movsb
mov
out
cmpsl
jb
dec
into
xchg
mov
pop
dec
fstpt
rolb
or
mov
loopne
push
stos
push
add
xchg
arpl
sbb
cmp
and
inc
movsb
push
sub
xor
imul
add
jbe
loopne
and
loopne
icebp
cmp
push
lahf
add
mov
jmp
sub
sbb
jb
int3
push
cld
scas
push
cmpb
push
push
fwait
cltd
stc
push
push
fdivrs
and
cli
cli
iret
xor
int3
add
mov
or
xchg
cmpsl
push
inc
hlt
cwtl
mov
push
lods
add
and
gs
dec
jno
incl
dec
lcall
inc
and
mov
adc
dec
push
loopne
cli
in
xor
insb
and
out
pop
mov
mov
dec
arpl
mov
pop
or
and
lds
sub
pop
dec
outsb
jnp
imul
mov
lret
out
sti
jmp
sbb
or
cmp
sub
pop
dec
outsb
jnp
imul
mov
lret
out
sti
jmp
sbb
or
cmp
sub
pop
dec
outsb
jnp
imul
mov
lret
out
sti
jmp
sbb
or
cmp
sub
pop
dec
outsb
jnp
imul
mov
xor
add
adc
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jecxz
or
and
add
cmp
sti
add
or
pop
add
add
add
add
add
add
jno
cld
add
jg
mov
sub
flds
xor
jecxz
xchg
inc
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
xor
dec
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
add
jle
jbe
mov
add
pop
mov
pop
add
add
add
dec
add
add
imul
cmp
add
add
xor
mov
xchg
test
cmp
pop
add
adc
ret
add
add
add
mov
mov
roll
add
flds
ret
add
add
add
add
mov
cmp
add
mov
add
add
add
add
inc
add
mov
add
add
add
jle
jne
xchg
add
add
add
add
add
addb
add
add
jns
clc
add
xchg
add
add
add
add
add
add
add
add
add
add
add
addb
add
test
add
adc
insb
add
add
add
add
add
add
sub
add
sbb
dec
add
pop
add
add
add
add
add
jo
inc
add
xchg
add
add
add
add
add
cmp
filds
scas
add
add
add
add
add
add
add
add
popf
add
add
add
add
pop
add
add
rolb
add
sbb
dec
add
add
add
jbe
loop
or
mov
add
dec
add
add
add
add
inc
add
add
flds
xor
inc
add
add
add
test
leave
add
mov
ret
add
add
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
or
xchg
add
dec
add
ret
add
add
sbb
inc
add
add
add
mov
add
add
loop
jo
inc
add
xchg
arpl
jbe
ret
add
add
pop
add
inc
add
add
push
add
add
add
jbe
sbb
inc
add
add
lods
pop
xor
add
pop
rolb
add
add
dec
add
add
add
add
add
adc
adc
in
add
add
add
add
xor
dec
add
mov
add
add
add
stos
add
add
add
add
add
add
orb
insb
popa
nop
sahf
pusha
jl
jecxz
mov
jl
cmp
je
cmp
inc
in
mov
icebp
jae
pop
sti
les
rol
shl
imul
pop
test
and
mov
mov
repz
jmp
sub
push
and
ds
lret
and
pmaxub
xor
or
mov
jge
xchg
mov
ja
mov
mov
dec
xlat
add
mov
fiadds
push
stos
call
test
lock
sub
sti
push
sub
insl
scas
test
ss
rcr
out
std
test
mov
jae
and
jmp
ss
mov
add
jbe
in
fists
fdivs
test
imul
dec
cs
fsubs
in
or
and
xor
mov
rolb
insb
mov
mov
ljmp
sub
push
in
add
adc
jl
repnz
mov
imul
fs
or
pop
mov
add
dec
mov
out
add
mov
sub
inc
xor
dec
jl
mov
getsec
aam
les
add
addr16
mov
es
add
imul
mov
mov
aam
mov
inc
outsb
inc
pop
sub
icebp
js
in
popf
xchg
jbe
std
lcall
sarl
cwtl
adc
xor
jae
std
pop
dec
lret
mov
jb
pop
stos
stos
nop
xchg
fmul
jne
out
sbb
xchg
xlat
imul
dec
xor
jae
pop
add
out
jnp
test
and
sub
and
push
mov
lahf
inc
lret
std
sub
pushf
dec
out
stos
lret
jbe
dec
dec
add
insl
push
aaa
in
lahf
imul
mov
adc
call
adc
cmpsb
sbb
and
sbb
mov
push
mov
cmp
push
mov
pop
ret
push
iret
xchg
pop
shrb
inc
test
add
insb
mov
sbb
dec
xlat
jmp
fnstsw
in
push
idivl
inc
in
mov
test
pop
jg
cmp
mov
les
xchg
push
push
inc
xchg
mov
movsl
or
test
mov
cwtl
lahf
adc
adcb
sub
adc
outsl
in
push
imul
ss
ret
sahf
popf
nop
and
iret
inc
and
fmuls
mov
inc
jne
mov
test
xchg
cwtl
mov
inc
bound
mov
mov
test
inc
pushf
xchg
and
movsl
xchg
sub
mov
mov
popf
jmp
cmc
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
