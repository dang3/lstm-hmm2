call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fcomp
lret
into
sti
jmp
fwait
es
jecxz
xlat
test
jnp
imul
or
mov
jmp
fwait
sahf
mov
pop
push
dec
dec
sbb
outsb
pop
insb
or
sub
arpl
cmp
imul
jmp
movsl
cmpsb
stos
mov
pop
push
sbb
jns
outsl
dec
ja
mov
xchg
lahf
push
mov
pop
addb
js
and
out
pop
out
test
shrl
aaa
fidivs
inc
jnp
outsb
mov
ss
es
lods
mov
xchg
xchg
in
push
push
cmp
aam
and
int
mov
adc
cwtl
repz
adc
xchg
or
pop
imul
mov
mov
inc
lret
pop
mov
xchg
jecxz
and
mov
shrl
and
xor
add
addr16
add
xor
enter
xlat
pop
sbb
push
ret
insl
daa
stos
and
push
mov
fs
sub
push
sbbl
sub
out
out
jg
repz
pop
rcll
addr16
ja
push
add
or
das
mov
mov
mov
pushf
in
iret
shrb
dec
push
jp
or
gs
push
dec
inc
xchg
mov
cmpsl
mov
out
rorb
pushf
cmp
sbb
jnp
adc
fs
push
pop
push
mov
cmpsl
into
lcall
mov
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
into
sti
jmp
fwait
sahf
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
insl
fnstsw
jns
in
push
adc
or
sbb
cmp
jae
mov
add
jbe
cmp
sub
jl
or
xor
fnsave
mov
das
add
cltd
or
mov
adc
push
shlb
andl
pop
xchg
test
and
dec
cmp
cmp
add
add
push
mov
lods
xchg
daa
or
mov
cmpsl
repnz
cs
pmaxub
test
adc
pop
sbb
int3
and
fwait
or
movsl
stos
adc
mov
cmpsb
rcr
and
inc
cmpsl
mov
das
mov
outsb
xchg
dec
lods
test
xor
scas
xchg
and
sbb
ret
ret
xchg
fadds
inc
jae
mov
dec
test
fimull
aas
inc
inc
imul
pop
dec
dec
sub
xchg
or
xchg
cmp
add
xor
fwait
adc
addr16
push
mov
filds
ret
jne
insb
test
shr
inc
in
sbb
lock
iret
or
dec
out
or
and
sti
loop
mov
xchg
push
in
mov
notl
into
bound
inc
inc
popa
push
testl
cmc
sahf
iret
fbstp
ja
or
mov
mov
imul
xlat
ljmp
xchg
pop
out
push
notl
cmp
sarl
jno
testb
xor
ret
stos
mov
roll
jl
mov
cmpsl
mov
jg,pn
fs
jle
jl
jg
mov
shrl
rorb
sbb
loope
mov
jle
ds
das
bt
movl
and
testl
mov
hlt
push
cmp
cli
adc
inc
in
lods
das
push
add
mov
push
pop
sbb
xchg
lea
adc
sti
mov
or
sahf
outsb
out
jbe
mov
mov
outsl
jecxz
push
rolb
jecxz
inc
les
adc
mov
xor
add
stos
fdivs
push
dec
inc
xchg
mov
xchg
push
push
mov
jno
nop
sbb
pusha
and
fmull
sub
fwait
cmp
std
insl
or
jno
or
movb
mov
ljmp
ret
fs
jae
jo
jns
sbb
or
inc
push
int
cmpsl
pop
ret
cmp
sub
cmp
sar
test
out
outsl
mov
pop
lcall
dec
pop
dec
testb
sbb
aam
inc
xchg
sbb
mov
inc
jo
cltd
pop
or
pop
cmp
cltd
adc
sbb
xor
stos
insb
loopne
fsubrp
hlt
mov
xchg
push
xchg
test
cmc
sbb
subb
and
cmpb
mov
push
push
int
pop
cmpl
bound
jno
popl
inc
xchg
pop
fisubs
sbb
inc
add
adc
and
or
mov
or
mov
mov
pop
or
addr16
cmpsl
orb
mov
adc
push
jns
sub
jmp
mov
lcall
xchg
loope
lods
fmull
enter
cmp
cmp
pop
nop
and
aam
fwait
insb
out
adc
je
mov
mov
or
dec
ljmp
push
outsl
outsb
mov
loope
cli
push
xor
int
cs
jg
lcall
gs
xor
lcall
shlb
adc
xchg
imul
lret
adc
mov
add
arpl
xor
add
mul
fstps
jbe
lret
pop
scas
in
jo
pusha
in
cmc
sub
push
add
xchg
icebp
xchg
insb
std
fstps
add
mov
scas
push
notl
scas
mov
cwtl
jo
sbbl
jp
sbb
pop
imull
ds
inc
and
jp
push
call
sub
popf
ds
iret
test
sbb
ljmp
insl
cmp
push
lret
fdiv
test
dec
sbb
out
push
and
dec
pop
in
inc
dec
loopne,pt
or
sub
add
add
daa
xchg
inc
inc
jnp
andl
add
mov
add
int3
sub
fwait
adc
sti
jnp
pop
sar
push
lods
xchg
or
pop
mov
mov
fsubrl
dec
enter
or
sub
mov
cmp
ret
sbb
in
sub
cmp
xor
xor
mov
or
dec
push
dec
enter
clc
dec
sbb
xchg
add
lods
sarb
mov
outsl
insb
dec
jbe
lahf
sbb
pop
mov
repnz
push
es
lds
push
pop
xchg
cmp
adc
ret
inc
ror
clc
dec
push
inc
and
loopne
popa
and
xor
lds
int3
sti
dec
cwtl
adcl
js
int3
in
mov
inc
arpl
movsb
sbb
lahf
outsl
xor
pop
gs
mov
int
adc
out
lods
add
lahf
sub
bound
iret
pop
or
push
shl
lcall
jno
gs
fmul
pop
lahf
adc
xchg
scas
pop
ljmp
mov
mov
push
ss
fcmovbe
and
cld
aad
dec
incl
pushf
das
repz
and
pushf
ret
pop
jecxz
loope
iret
cmc
inc
inc
push
idiv
push
push
mov
and
repnz
xchg
ja
mov
sub
sbb
sub
sub
cli
test
ljmp
add
mov
into
mov
mov
mov
pop
fcomps
fwait
outsb
add
or
mov
bound
cmpsl
mov
mov
sub
fimuls
mov
sub
iret
in
outsb
mov
je
sbb
cmp
cwtl
sarl
xor
imul
sub
jg
mov
ds
jle
dec
mov
ret
test
mov
xor
negb
inc
push
into
in
jbe
nop
cmp
add
ret
jo
dec
or
repz
lret
pop
mov
inc
std
into
jmp
push
cli
insl
mov
cmp
dec
ret
fs
rclb
xlat
hlt
jae
cmp
inc
mov
mul
ljmp
sbb
sbb
into
xchg
dec
andb
mov
insb
aad
pop
loope
ss
fstps
fsub
outsb
mov
adc
xchg
sbb
and
mov
xchg
sub
jae
jns
shlb
mov
push
cmpsl
xchg
jmp
cmp
xor
add
and
jge
aas
xchg
pushf
jb
or
pop
mov
mov
loopne
jecxz,pt
mov
scas
xor
insl
pop
out
shlb
add
mov
push
out
fistpl
bound
shll
cwtl
popf
mov
and
outsb
jae
adc
fldenv
push
repnz
and
inc
jbe
push
mov
call
arpl
and
js
pop
out
xchg
add
aad
cmpsb
xchg
fmuls
pop
cmp
sub
outsl
xchg
dec
in
fildl
outsl
cld
push
loop
inc
sbb
adc
hlt
fisubrl
in
and
mov
dec
test
adc
loope
cmp
sub
sub
fisttps
adc
add
sub
int3
insl
inc
in
inc
aam
mov
push
test
cmpsl
lods
xchg
jns
adc
pop
rcrb
ret
and
icebp
popa
add
es
cmp
pushf
scas
xor
jp
popa
icebp
repnz
ret
bound
xchg
mov
mov
aas
jge
sahf
mov
add
jp
sub
add
data16
outsl
mov
sub
cmp
outsb
and
push
pop
arpl
out
gs
imul
ja
pushf
dec
add
cmp
xor
shrl
pusha
mov
ja
insl
cmp
in
lds
mov
and
pop
arpl
mov
adc
lahf
push
insb
lret
pop
test
imul
scas
mov
pop
push
orb
and
mov
ret
cmc
mov
mov
fs
in
out
xchg
jo
cwtl
hlt
sti
insl
in
inc
dec
dec
outsb
dec
into
daa
or
aad
test
dec
and
negb
dec
mov
rcll
xchg
and
push
roll
lock
hlt
dec
and
or
sti
pop
out
cmpsl
sub
fsts
xchg
faddl
push
stc
jb
sti
arpl
mov
lods
aas
push
dec
stc
mov
xchg
and
sbb
out
repnz
xor
jnp
test
push
or
jmp
mov
fmuls
push
mov
mov
shl
je
sbb
test
pop
xchg
jno
cmpsl
mov
out
push
add
loope
lret
jbe
push
mull
dec
pop
fsubp
insb
mov
mov
inc
repz
jae
leave
jb
xchg
pop
xchg
jl
imul
mov
sbb
push
cli
mov
repz
or
in
stc
mov
in
inc
mov
adc
sub
jno
enter
and
pop
xchg
popf
outsb
es
es
fadds
sub
xchg
jl
pop
shll
jbe
inc
int
push
pslld
inc
pop
fisttpll
xor
cmp
ret
enter
repz
and
fstl
xlat
not
test
or
ja
xchg
mov
xchg
insl
aaa
neg
xchg
das
sub
and
cs
add
mov
cltd
sarb
inc
leave
sbb
or
adc
xchg
ret
ja
movsl
cmpsb
xlat
cs
jb
imul
inc
lcall
jno
ret
lods
sbb
pop
pushf
xchg
fsubs
jo
mov
push
popf
aad
popa
cmpsb
adc
pop
or
fistl
stos
in
cmpsb
shrb
mov
loop
mov
mov
out
imul
pop
dec
je
adc
dec
adc
fimull
mov
pop
pop
push
inc
pop
and
mov
fcmovb
outsb
cmp
sti
idiv
add
sbb
mov
incl
mov
push
or
fwait
sub
in
cmp
dec
mov
insb
pop
loopne
mov
inc
mov
or
and
sarl
shlb
sub
lock
xchg
leave
roll
mulb
jnp
cmpsl
out
dec
xor
xor
mov
loopne
lock
dec
rorb
pusha
shlb
xlat
adc
das
jmp
xor
leave
push
bound
or
xchg
bound
mov
mov
adc
xchg
int
arpl
movsl
dec
xor
add
test
imul
inc
mov
push
hlt
mov
lcall
gs
xor
lcall
mov
fwait
mov
pop
lahf
pop
inc
loope
inc
xor
mov
rclb
dec
inc
xor
gs
xor
popa
mov
or
push
dec
mov
and
jmp
in
and
sbb
faddl
xchg
push
cmc
orb
aas
stos
push
leave
push
jl
cmp
lods
cmpsl
test
dec
sbb
test
shrl
dec
xchg
or
scas
mov
fs
dec
sbb
pop
push
into
and
xchg
dec
imul
mov
je
dec
dec
xlat
or
xchg
int3
lret
in
jbe
push
mov
das
push
push
adc
pusha
pop
enter
idivl
jns
out
addl
push
or
lret
jno
pop
cmc
mov
xchg
and
lcall
inc
jle
push
xor
add
xor
pop
shrb
mov
and
cmp
aad
jb
adc
insl
orl
popa
outsl
mov
out
push
dec
fists
lahf
jb
cmc
mov
sub
xchg
push
lea
call
dec
insb
xchg
and
in
xchg
ds
mov
ret
jp
aad
adc
std
es
dec
xchg
imul
push
cmc
and
add
mov
add
fisubs
push
jg
push
imul
cmpsb
and
and
mov
mov
stos
mov
jno
xchg
test
popa
and
mov
je
xor
jno
in
xchg
nop
mov
mov
call
outsl
push
inc
mov
cmp
jmp
and
inc
iret
push
outsl
adc
mov
mov
jge
inc
jnp
mov
xchg
out
push
dec
mov
inc
sarl
push
subb
test
adc
cli
mov
push
sub
shll
cmp
in
or
pop
cmp
out
shrb
loope
xchg
cmpsl
or
inc
pop
test
scas
leave
fisubrl
sarb
push
shll
push
aas
test
push
xorb
sbb
add
daa
xchg
nop
les
mov
or
add
inc
mov
notl
sub
mov
aad
cmc
movsb
sbb
in
clc
jecxz
pop
imul
stos
fst
and
std
mov
mov
push
cwtl
out
frstor
ret
mov
and
push
jge
cmp
pop
or
and
lret
sarl
fbstp
mov
fiadds
fsubp
cwtl
dec
add
mov
jae
pusha
xchg
sbb
ss
inc
mov
icebp
or
xchg
sub
cmp
enter
jae
xchg
and
sbbl
inc
enter
xchg
int
ror
inc
sbb
push
loop
ret
pusha
loopne
pop
jmp
and
bound
nop
mov
pop
adc
ret
add
push
sti
repnz
pushf
sub
lea
scas
loope
sub
in
lret
hlt
xor
add
cmp
pop
repnz
repnz
xchg
loop
mov
lea
or
cs
or
mov
pop
fs
loopne
jnp
jg
adc
jg
in
rol
inc
jg
sbb
lock
pusha
adc
imul
movsb
mov
repz
aam
loopne
push
outsl
push
outsl
push
jecxz
insl
sub
cmp
mov
int
dec
dec
mov
pop
int3
mov
push
sbb
push
inc
pop
dec
and
cltd
out
add
mov
int3
push
jl
sbb
pop
add
in
push
lods
out
in
fwait
fwait
arpl
add
lock
loopne
xchg
push
add
mov
nop
push
imul
and
pop
jns
sbb
mov
and
mov
sahf
sbb
xor
jmp
and
je
add
rolb
push
sub
and
adc
add
mull
jg
dec
rol
mov
out
outsl
es
dec
pop
lods
xchg
cmpsl
push
in
ja
mov
enter
sub
daa
sub
int
push
cmp
mov
rcll
insb
test
jns
pop
pop
cmp
sub
cmpsb
mulps
inc
jns
or
mov
test
roll
mov
xchg
sbb
inc
add
push
fwait
out
push
pop
mov
das
adc
and
and
mov
cltd
jae
outsb
cmp
dec
sub
lea
cmpsl
divb
test
and
loopne
mov
les
and
jecxz
loopne
ja
inc
loopne
mov
test
stc
dec
add
jbe
je
sbb
mov
cmp
add
pop
dec
imul
test
jecxz
fidivs
faddl
xchg
incl
push
cld
hlt
rcrl
cs
mov
push
xchg
test
es
add
aam
mov
mov
mov
in
sbb
shlb
xchg
mov
sbb
add
xchg
xor
mov
dec
ljmp
test
inc
adc
xchg
push
cmp
pop
mov
sbb
cmp
pop
mov
and
jne
pop
int
dec
lea
push
lret
enter
fistpl
lock
xor
jns
mov
mov
push
cmp
cmp
adc
ret
sub
int
insl
negb
push
mov
mov
in
imul
xor
lods
shrb
fwait
sub
imul
push
out
cwtd
push
stos
sbb
xor
pop
loope
mov
or
repnz
lret
push
push
int
out
mov
adc
ret
adc
fadds
sub
stos
pop
dec
adc
sbb
imul
ds
inc
out
sbb
jle
adc
adc
jmp
add
or
lock
test
mov
inc
cmp
push
ret
leave
fiadds
push
cmp
aas
icebp
movsl
imul
in
dec
mov
into
aaa
xor
sub
mov
push
cmp
xchg
pusha
in
mov
jg
in
add
pop
enter
repnz
ljmp
add
xchg
push
mov
rorb
pop
cli
sub
imul
dec
aam
sahf
lret
cmpsb
sbb
push
mov
push
inc
test
cmpsl
mov
sub
les
add
fldl
mov
pop
cmc
cmp
iret
xor
hlt
push
bnd
fildl
enter
dec
hlt
cmp
mov
sbb
mov
ret
mov
mov
sbb
sbb
fs
xor
in
das
push
clc
jne
sbb
cli
cmp
mov
insb
stos
shlb
inc
arpl
daa
mov
call
imul
push
xor
clc
data16
fcoml
rcr
mov
pop
ss
stos
inc
push
jnp
mov
fcomps
cltd
sub
leave
stos
loope
or
pop
je
stc
mulb
inc
sbb
inc
aas
mov
sub
cmc
in
rcl
mov
mov
sbb
jb
repz
sahf
xor
and
mov
dec
adc
test
iret
jo
std
pusha
mov
popf
je
cmp
mov
sbb
test
pop
aam
lock
cmp
mov
dec
push
sbbb
fstl
xor
pop
and
pop
data16
sub
or
mov
out
xchg
push
and
dec
loopne
cld
xchg
cltd
iret
pop
mov
pop
mov
sub
lcall
aaa
xorl
aas
adc
push
mov
movsb
lahf
pop
insb
cli
xchg
xchg
cmp
mov
push
dec
clc
jnp
mov
jnp
lret
loopne
cmc
arpl
ret
inc
add
push
jg
mov
shrb
scas
inc
add
les
cmc
insb
push
xor
ljmp
xor
insb
sahf
adc
test
mov
addb
push
jae
popf
push
inc
mov
inc
xchg
imul
inc
or
int3
popa
cli
jnp
sub
pushf
cwtl
iret
sbb
push
xchg
sbb
test
push
imul
lcall
push
cmp
pop
das
scas
lds
push
mov
mov
jge
shrb
jns
mov
or
and
pop
clc
mov
out
mov
je
or
leave
stc
or
mov
popl
cmp
xor
sbb
nop
jne
mov
or
push
ljmp
rcll
fistl
daa
sub
sahf
sub
cmc
test
sub
jle
jo
mov
and
pop
addr16
test
pop
popf
iret
or
shlb
push
mov
movl
mov
sub
jns
aas
popa
sahf
push
push
stos
mov
cmp
ret
not
mov
pop
je
and
cwtl
xor
mov
ret
fbstp
xor
xor
shll
loop
pop
cmpsl
ret
xchg
frstor
daa
ficomps
and
xchg
mov
and
out
push
dec
fsubp
add
or
movsl
bnd
les
mov
in
dec
and
xchg
or
inc
mov
mov
rol
js
lahf
sbb
pop
fs
xchg
js
sub
stc
pop
mov
mov
leave
inc
jg
shlb
cmovo
enter
or
stc
rorl
mov
and
or
mov
in
mov
mov
pop
enter
and
mov
cmp
push
sbb
je
mov
sahf
xor
clc
mov
int3
imul
pop
movsl
test
mov
sahf
lahf
pop
sub
inc
popf
inc
out
xchg
mov
add
cmpsb
add
adc
mov
adc
xor
mov
jmp
sub
std
xor
dec
adc
sub
sub
sbb
xchg
jae
mov
aam
call
fwait
pushf
rorb
int3
dec
add
xor
mov
adc
pop
push
push
push
sub
push
dec
imul
and
aam
mov
sahf
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
into
sti
jmp
fwait
sahf
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
sti
into
fwait
jmp
or
imul
jle
push
push
sbb
cmp
ret
sub
ficoml
out
fwait
sahf
fwait
mov
pop
mov
sarl
sbb
jno
inc
aam
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
testl
or
popf
loop
ja
sub
inc
or
jns
imul
pop
dec
idivl
mov
flds
or
sbb
aaa
push
daa
imul
sub
test
mov
cmpsl
aad
aaa
xchg
ja
addr16
and
imul
sub
out
movsb
in
mov
test
jl
mov
mov
dec
mov
sbb
pop
jl
pop
mov
popf
clc
and
sbbl
sbb
js
stos
push
pop
stc
les
mov
dec
cmpsl
jmp
jg
inc
ja
or
test
cltd
pop
mov
out
mov
stc
mov
imul
ja
fisubrl
cmc
leave
js
xchg
pop
mov
sbb
lods
xchg
inc
mov
addr16
cmp
into
or
dec
adc
nop
mov
mov
mov
or
daa
cmp
adc
js
xchg
pop
pop
outsl
int
mov
movl
ja
addr16
push
or
aaa
push
daa
xchg
pop
pop
pop
daa
mov
mov
fisttpl
lods
ss
insb
xor
sub
push
dec
sbb
hlt
cld
xchg
call
icebp
xchg
lret
ficoml
pop
gs
jl
outsb
push
sub
cmp
and
leave
ljmp
xchg
ja
sub
inc
or
jns
imul
mov
mov
flds
sub
inc
or
jns
imul
mov
jecxz
insl
pusha
or
xchg
inc
lds
mov
int
out
pop
mov
cwtl
pop
ljmp
jl
or
dec
push
adc
push
xchg
sub
jle
clc
loopne
jo
mov
jecxz
sbb
addr16
js
lret
jnp
ret
sbb
imul
fwait
or
push
jno
arpl
or
leave
xor
faddl
aad
mov
inc
push
test
stc
or
or
icebp
xchg
mov
xchg
mov
clc
pop
push
cli
cmc
push
orl
pop
stos
scas
stos
and
clc
fcmovne
adc
loopne
and
xchg
inc
jo
ss
mov
fmuls
rclb
addl
jge
aas
xor
xor
js
xchg
les
faddl
cltd
push
repz
pop
cli
jb
xchg
ret
jae
jle
stos
pop
hlt
mov
pop
shll
push
lods
pop
in
in
test
lods
pop
fcom
outsl
aas
xchg
xchg
icebp
dec
mov
movsb
xchg
mov
lret
mov
sbb
loope
loop
ret
insb
jbe
xchg
fisubrs
push
ficompl
xchg
pop
daa
stos
mov
aaa
dec
dec
test
sub
cltd
sbb
mov
inc
jno
xor
xchg
jmp
imul
cwtl
dec
inc
pop
xchg
pop
insb
das
mov
push
jnp
inc
in
into
adc
mov
cs
push
aas
sub
in
mov
pop
pusha
cmp
mov
dec
jmp
popa
mov
adcb
or
insl
cmpl
sahf
adc
or
pop
dec
mov
mov
xchg
cmp
jle
mov
and
pop
adc
ss
add
in
filds
dec
je
ds
rolb
mov
into
aam
add
sub
xchg
pop
int
addl
mov
jg
mov
test
xchg
jnp
xchg
bound
insb
clc
or
lds
jne
jae
mov
or
iret
call
mov
adc
sti
je
arpl
mov
sbb
pop
je
cmp
dec
lea
xchg
inc
cmp
pusha
inc
rol
add
je
cmp
or
or
outsl
aas
xor
cmpsb
add
and
mov
das
out
mov
inc
ret
jb
sbbl
mov
sti
or
outsb
pop
pop
les
mov
in
lds
pushl
icebp
fcoms
sbb
and
out
and
add
int
jl
pop
dec
mov
std
mov
push
mov
mov
mov
into
xlat
mov
call
jne
or
push
lret
loop
sub
adcl
cwtl
sti
scas
jp
daa
dec
push
mov
icebp
inc
mov
mov
in
mov
clc
jp
push
cltd
js
cld
adc
xor
ror
into
loope
mov
adc
jno
inc
xchg
or
js
enter
outsb
add
xor
push
xor
jg
add
das
aam
test
lret
cmpsl
lods
inc
push
dec
mov
push
inc
adcl
sub
and
fadds
repz
cmpsl
clc
xor
inc
lcall
mov
shl
pushf
adcl
rclb
test
bound
jecxz
call
loope
data16
mov
gs
sbb
inc
or
sub
pop
sbb
cltd
lock
cmpsb
test
cmpsl
jns
jo
mov
mull
xchg
jge
jae
pushf
xchg
xchg
dec
adc
lods
fnsave
leave
outsl
mov
inc
fiadds
outsl
pop
mov
movlps
pop
fsubr
int
dec
jnp
add
les
push
push
aad
sarl
leave
mov
pop
mov
fwait
clc
in
mov
adc
add
js
pop
or
xor
adc
in
jg
and
mov
out
inc
inc
iret
idivb
adc
mov
pop
push
mov
cld
adc
mov
rolb
bound
ror
adc
fscale
push
or
sub
fiadds
pop
xchg
repnz
push
sarl
xorl
adc
fs
shll
lds
mov
pop
popf
loop
das
negl
push
addr16
mov
mov
dec
cmp
xor
adc
sbb
cli
outsl
les
mov
dec
pop
rclb
xchg
mov
pop
mov
or
mov
mov
hlt
pop
jae
popf
push
or
jmp
das
test
push
cli
mov
fdivrs
in
fcoml
cmp
ret
and
dec
jecxz
and
fidivs
xor
std
xlat
add
in
push
or
iret
cmp
int3
push
fstpt
push
jmp
mov
jno
mov
jp
incl
mov
xlat
and
cmpl
mov
into
sub
fildll
insb
pop
cli
les
mov
inc
or
inc
addr16
and
bsf
pop
aam
inc
dec
add
pusha
fsubs
cld
jmp
test
arpl
test
loop
fwait
shrl
jmp
xchg
clc
test
cmp
sbb
cmc
sbb
xor
cmp
xor
in
or
dec
rorb
icebp
dec
ljmp
xor
adc
mov
pop
ljmp
mov
cmp
test
cmp
in
ja
daa
arpl
out
jmp
add
add
je
dec
stos
xor
jnp
js
push
cmp
fimuls
data16
int3
xchg
inc
jno
loop
push
aad
cld
arpl
fcomi
pop
lahf
ret
push
aam
scas
mov
enter
insb
or
mov
or
mov
xchg
mov
push
shl
int3
inc
mov
inc
jns
in
xchg
jb
mov
es
in
push
stc
push
pop
adc
lods
jle
mov
stc
roll
mov
xor
push
jo
inc
mov
and
xchg
or
arpl
out
imul
or
repnz
hlt
lcall
insb
sahf
lock
mov
ds
or
pushf
int3
sub
jbe
hlt
add
mov
test
sub
jae
stc
cmp
int
cmp
arpl
jb
sarl
pushf
pop
or
int
aad
jne
sti
shrb
inc
mov
or
pop
sbb
movsb
mov
sti
push
xchg
mov
or
mov
mov
negb
notb
div
lcall
mov
sbb
xlat
test
in
fbstp
xchg
mull
rcrb
or
gs
fwait
xchg
mov
insb
push
mov
push
push
testl
mov
lret
stc
mov
les
cs
stc
cmp
mov
sbb
jge
in
push
cli
rclb
lret
sub
sub
mov
aad
and
shl
rcll
ss
or
scas
hlt
inc
mov
test
mov
add
dec
xor
imul
fs
push
in
arpl
adc
pop
lea
std
mov
pop
repnz
pop
xor
inc
dec
aaa
and
or
in
daa
push
jb
xor
cmp
out
ret
int
notb
pushf
lret
adc
lahf
imull
pop
ficompl
imul
mov
push
fisubrs
scas
mov
leave
or
movsl
outsb
fs
cmp
dec
pop
push
sbb
push
rcl
repnz
mov
fisubrl
adc
sahf
adc
adc
and
sahf
mov
cs
hlt
dec
inc
testb
cs
mov
cmc
push
pop
xchg
subb
cli
pop
pop
jl
cmp
fcompl
in
jbe
movsb
sub
inc
xchg
mov
icebp
mov
push
mov
in
ret
cmp
shrl
jp
inc
push
addr16
xchg
xchg
xor
cmp
sub
adc
outsl
sbb
insl
repz
adc
mov
sbb
sub
sub
cmp
aaa
mov
push
mov
inc
andl
sti
mov
stc
mov
dec
fnstsw
lods
dec
outsl
xchg
les
cmpb
mov
jmp
pop
push
out
ficoml
xchg
inc
add
aad
out
xlat
outsb
sbb
ja
xchg
adc
push
xchg
pop
push
or
stc
xor
rclb
loope
mov
pop
mov
mov
testl
dec
cmp
jge
aaa
sbb
sbb
dec
add
push
stc
mov
iret
xchg
and
ja
mov
adc
inc
dec
jno
subl
or
in
xor
repnz
nop
pop
inc
negl
icebp
mov
inc
xchg
daa
cmpsb
xchg
inc
ret
sahf
mov
lret
js
dec
xchg
fstpl
mov
xor
pop
cltd
mov
into
push
pop
xchg
xchg
xlat
lret
xchg
cmp
or
fwait
jne
fcmovnbe
mov
rcll
jo
add
nop
js
aaa
mov
clc
mov
out
fs
popf
shrl
pop
jno
aaa
test
mov
in
jbe
sarl
add
adc
cmp
mov
sub
mov
roll
xchg
mov
dec
fst
sti
xor
mov
incb
jl
inc
inc
dec
repz
insl
lret
in
adc
in
xor
inc
push
lea
adc
test
out
sti
mov
adc
pavgw
sahf
cmp
push
icebp
loopne
sub
fildll
fidivrl
scas
mov
and
leave
mov
push
mov
xchg
out
sub
sub
mov
out
mov
rcrb
mov
jae
push
aad
cwtl
mov
ja
cmc
mov
ret
mov
cs
pop
adc
pop
dec
or
loop
mov
negb
je
pop
and
cmp
mov
pop
shr
decl
das
or
mov
ret
mov
dec
lretw
hlt
fistps
orl
pusha
addr16
out
mov
jo
push
test
hlt
pop
les
sub
adcb
lods
call
jbe
outsb
inc
xchg
push
dec
js
mov
fstps
or
sub
stos
inc
loope
mov
js
sbb
push
in
movsb
fisubs
lods
mov
jb
rolb
aas
rorb
dec
dec
orl
sub
add
sbb
in
mov
dec
test
cmpsl
add
fwait
push
mov
pop
insl
test
xor
ret
push
add
js
or
cmc
sbb
inc
push
mov
popf
call
cmp
pop
in
out
in
popa
imul
xchg
mov
xchg
xor
push
mov
flds
int
jbe
sti
shl
and
adc
mov
test
sti
mov
mov
mov
dec
jp
xchg
aaa
insl
or
je
cmp
ds
adc
mov
ds
hlt
pusha
jae
mov
hlt
jne
js
sti
mov
xchg
hlt
jb
fwait
mov
mov
imul
ror
enter
shlb
cmp
push
dec
add
and
push
sti
pusha
enter
loopne
outsl
aam
es
sbbb
repz
xor
push
pop
jge
add
fcom
sub
push
xlat
push
mov
mov
dec
dec
add
mov
push
and
cmp
test
iret
xor
arpl
xchg
mov
ret
testl
rcl
xor
daa
mov
pop
xchg
pop
jg
setge
or
pop
cwtl
in
xchg
push
mov
push
test
in
add
jle
push
sbb
lahf
dec
sti
bound
idivb
dec
or
ret
rol
mov
cs
xchg
xlat
xchg
fnsave
jl
dec
and
testb
and
and
pop
loopne
or
enter
das
sbb
jp
or
sbb
sub
in
movsb
fnstsw
lea
sbb
ror
pop
imul
cwtl
jmp
out
cmp
das
cltd
pop
xor
or
add
js
inc
mul
ja
sahf
mov
das
add
cmp
lcall
xchg
fwait
test
dec
jmp
cmp
cmpsb
divl
mov
xchg
sub
sub
dec
adc
or
or
std
push
dec
sbb
leave
pusha
pop
repnz
addb
cli
enter
insb
push
mov
fisttpl
xchg
addr16
lods
add
out
test
shlb
cltd
and
and
rorl
sub
lahf
setne
cmp
addb
pop
ja
movsl
idiv
test
sbb
incl
jbe
mov
or
stc
and
sub
js
push
or
push
pop
sti
pop
jne
and
adc
push
and
jb
or
adc
sbb
add
mov
cli
arpl
jnp
inc
inc
push
mov
sbb
mov
inc
or
loop
aad
pop
sbb
mov
test
cmp
cwtl
dec
mov
sbb
orl
push
inc
aaa
mov
inc
clc
movsb
jl
push
out
xchg
das
scas
hlt
popa
or
popf
out
decb
ss
pop
dec
cmp
cmp
bound
or
cmpsl
inc
imul
adc
stos
out
push
push
rcl
insl
inc
sub
or
xchg
add
jne
xchg
jb
int3
mov
ljmp
or
test
add
mov
gs
lcall
js
cmp
sbb
mov
pop
aas
pop
ja
push
cltd
cmp
fbstp
add
mov
and
dec
enter
je
test
rcl
iret
or
pop
push
or
xchg
sub
xchg
xchg
cltd
cmp
lock
call
sbb
enter
add
fiadds
xchg
fldl
xor
dec
dec
repz
aaa
pop
or
mov
jge
inc
add
fidivrs
flds
mov
popa
test
ds
sahf
jge
sbb
jo
xchg
mov
in
pop
pop
idiv
out
sahf
push
dec
in
pop
and
xchg
xchg
push
call
sahf
popa
jns
inc
pop
lahf
in
lds
leave
insl
ja
shlb
enter
fidivl
adc
pushl
and
aas
jle
shr
icebp
push
dec
cltd
dec
mov
outsb
pop
xchg
leave
insl
pop
sbb
mov
mov
mov
ficomps
fmuls
sbb
sub
mov
xor
jecxz
fidivs
fiadds
jl
cmpsb
int
lea
or
xor
push
ja
dec
or
in
rcll
jne
mov
or
jl
and
lods
inc
mov
dec
mov
sbb
popa
jbe
les
mov
fs
addr16
push
add
stos
cmp
cmp
jbe
pop
ss
mov
int3
sub
fucompp
das
xchg
std
xchg
push
cmp
push
addb
adc
push
imul
andl
nop
out
xor
jl
outsb
hlt
xchg
es
cmpsb
fs
mov
loop
sahf
sbb
clts
mov
inc
add
jecxz
lock
pop
lods
fcomps
xchg
jne
ss
out
and
popa
cmp
std
iret
cmp
push
lahf
loop
inc
mov
adc
mov
call
mov
pop
push
movl
clc
call
cmpsl
shl
adc
faddl
add
loope
jns
in
cmpb
dec
std
cltd
dec
jo
sbb
test
jns
shrb
sub
xchg
popl
scas
cmc
scas
fildl
xchg
mov
lods
jle
and
pop
outsb
xchg
sbb
mov
jo
xlat
push
outsb
mov
sub
lock
imul
mov
imul
dec
imul
js
mov
testl
mov
pop
mov
cmpsl
stc
mov
and
sbb
push
xchg
xchg
nop
fwait
and
mov
jbe
cmp
insl
mov
leave
pushf
jl
cmpsl
mov
xor
jmp
xorl
js
rorl
sub
jmp
push
push
ljmp
pop
sub
dec
je
inc
test
xor
xor
jbe
ljmp
mov
or
aaa
cli
fiadds
ljmp
push
push
daa
je
cmp
pop
mov
sti
dec
jne
addb
cmp
add
cli
add
lret
mov
inc
mov
int3
or
inc
adc
mov
repz
mov
add
stc
push
cltd
addr16
cld
xor
pop
lahf
pop
stos
xorb
push
std
ds
xchg
dec
xchg
jle
pop
inc
or
out
lret
push
sbb
pop
ret
iret
cmp
lods
inc
popl
std
repz
and
fs
xor
jae
cli
xchg
jno
dec
lds
jne
lret
popa
popa
mov
nop
cmp
sub
fnstenv
mov
je
xorl
and
jge
lds
push
adc
jp
loop
repnz
dec
add
add
sub
leave
les
pop
mov
in
push
sub
pop
pop
mov
xor
inc
out
cmp
push
jo
ljmp
add
xor
push
sub
loop
cwtl
mov
jg
mov
adcb
cwtl
add
insl
or
push
filds
jae
aam
lea
dec
push
mov
lret
fcmovb
ja
rcrb
xor
pusha
int3
jge
mov
aad
mov
fistps
push
and
mov
mov
inc
out
pop
adc
je
notb
push
pop
cwtl
inc
and
jbe
inc
repz
roll
cmp
ja
push
popa
and
dec
dec
loopne
out
outsl
cltd
das
jge
cmp
or
mov
out
and
sti
cmpsb
mov
mov
dec
adc
out
sbb
xor
mov
or
out
lds
xchg
daa
ds
sub
leave
dec
pop
les
pop
jne
or
inc
mov
and
mov
mov
sub
xchg
jecxz
test
and
xchg
scas
sub
popf
iret
sti
mov
push
add
xlat
pop
dec
test
repnz
add
cwtl
cwtl
xor
push
jno
cmp
pop
pop
fistpl
jg
lea
cwtl
sub
dec
mov
nop
repnz
and
mov
xchg
leave
jmp
inc
push
pop
cld
das
pop
pop
pushf
xchg
iret
dec
fisubrl
aad
lret
iret
in
mov
lds
push
mov
xchg
adc
cmpsl
cmp
test
mov
stos
daa
ret
sub
pop
mov
test
mov
iret
pop
cmp
add
mov
out
cmpsb
add
jne
sti
pop
inc
int
pop
sti
outsl
fs
mov
sbb
cli
and
data16
mov
dec
int
ljmp
mov
cmp
inc
inc
dec
imul
ficoml
sbb
lods
cmpsb
loope
das
and
pop
loope
adcl
inc
fcmovnu
cmpsb
out
fmul
addl
inc
sub
addb
add
add
js
xchg
leave
or
mov
or
mov
outsb
adc
jp
mull
jmp
subl
stos
or
push
add
clc
jmp
imul
xchg
xchg
orl
popf
xchg
add
insl
xchg
dec
roll
int3
repnz
lods
dec
loope
inc
dec
idivl
movsb
pop
fmul
sbb
test
fstps
add
cmp
repz
mov
xor
ds
cmp
adc
jnp
stos
movsb
call
hlt
mov
loop
hlt
outsb
call
adc
jecxz
push
jg
lea
add
mov
sub
and
fsubrl
mov
insb
lret
mov
fidivs
ret
popa
movsl
repnz
test
aam
sbb
add
adc
call
cmp
push
sbb
cmc
xchg
push
mov
inc
aam
repnz
inc
mov
push
jmp
pop
stos
cmpsb
sbb
orl
je
push
cmp
cld
cmc
mov
adc
ss
ss
and
fstl
adc
movsb
push
repnz
mov
fnstsw
fisubs
sub
outsb
sbb
pop
mov
push
in
cmp
pop
add
or
in
in
or
dec
mov
jnp
xchg
xor
testb
or
outsb
xor
pop
mov
out
fidivl
sbb
decl
jl
adc
dec
pop
xor
and
mov
mov
aaa
cwtl
arpl
xor
cwtl
xchg
test
outsl
std
int
fcom
rcr
lods
lds
pop
or
hlt
cld
loope
sub
xchg
pop
leave
fadds
aas
cmp
mov
fst
inc
loop
ja
jmp
mov
std
xor
int
mov
cwtl
sarl
add
or
adc
fstpt
add
xor
lea
inc
test
mov
cmpsl
jmp
ja
sub
inc
or
jns
imul
mov
mov
flds
sub
inc
or
jns
imul
mov
mov
flds
sub
inc
or
jns
imul
mov
mov
pop
xchg
ja
addr16
inc
jle
icebp
scas
xchg
call
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
hlt
orl
xor
adc
jno
and
xor
int3
mov
mov
test
xchg
loope
shll
dec
adc
jno
popa
and
xor
push
mov
mov
xchg
icebp
fsub
mov
dec
roll
add
add
dec
add
test
subl
shll
mov
sub
call
jbe
mov
enter
faddl
imul
fnsave
leave
rorb
xorl
les
data16
or
in
rcl
mov
icebp
stos
fistps
jno
push
xlat
scas
imul
lods
mov
test
imul
cmp
xor
out
mov
mov
push
xor
scas
lret
pusha
inc
sub
pop
sbb
jl
icebp
pop
push
loopne
cld
xchg
test
fwait
in
ja
idivl
inc
adc
aam
sbb
insb
loop
sbb
mov
adc
adc
popa
inc
and
divl
cwtl
addl
and
or
push
push
pop
mov
mov
ljmp
mov
pop
adc
outsl
insl
sbb
sbb
jae
lock
jmp
xchg
aas
in
xchg
cmc
iret
enter
jl
adc
insl
ja
jno
push
and
das
mov
out
xchg
in
cmc
rcrl
roll
adc
jno
popa
and
xor
les
hlt
addl
push
and
add
adc
and
xor
les
stos
push
enter
les
in
inc
dec
stos
inc
nop
pop
xchg
dec
mov
push
sarl
movsl
int3
jne
pop
jmp
mov
ret
xor
xchg
xcrypt-cfb
cmpsl
gs
dec
outsb
sub
or
into
cld
fisubs
sub
in
dec
divl
into
sbb
xchg
sub
add
adc
nop
pop
mov
lods
pop
test
mov
loop
icebp
pop
decb
xchg
mov
mov
dec
push
std
sbb
sub
sub
or
and
je
popa
hlt
xorb
cltd
in
call
out
pop
ss
mov
sbb
or
or
adc
jno
push
pop
repz
fcompl
js
jl
jne
in
cmp
xor
imul
std
sbb
stos
jecxz
and
push
aaa
mov
data16
sbb
movsl
pusha
loop
repz
inc
stos
push
sbb
out
repz
lods
mov
lret
adc
leave
push
nop
xor
mov
xchg
testb
das
jne
jb
stos
out
popf
dec
fwait
stos
insl
cmp
loopne
iret
mov
xor
xchg
add
push
cwtl
sub
jnp
fcomi
push
sar
sbb
mov
cmpsl
icebp
inc
push
xchg
movsl
jg
jmp
notl
call
dec
test
test
sub
out
ss
mov
sbb
lds
xor
xor
xor
and
cmp
cmp
sub
shrl
mov
inc
adc
int
js
mov
lcall
mov
jo
in
sub
mov
push
xor
inc
pop
clc
outsl
dec
lcall
sub
mov
fwait
and
shrl
in
mov
ds
mov
scas
sbb
push
aaa
lea
jo
ds
rorl
cli
out
xor
stos
lcall
loope
push
sbb
push
popf
stos
ja
adc
imul
int3
in
aaa
adc
mov
mov
loope
inc
movsb
xor
scas
push
out
movsl
pop
lock
pop
xor
adc
fcmove
es
aas
scas
pop
pusha
ret
or
mov
add
mov
dec
and
jge
data16
dec
cmp
dec
lcall
pop
pop
xor
mov
xchg
cmpsl
mov
inc
enter
xchg
rol
mov
push
dec
jns
or
jle
sbb
ds
jge
ljmp
push
inc
movsl
jle
scas
jecxz
push
pop
lcall
das
dec
mov
jb
jl
insl
sbb
into
into
mov
stc
sbb
inc
jnp
sub
mov
test
push
inc
lods
fimull
and
sub
test
stc
mov
jl
rcl
cld
es
pop
cltd
cmp
lea
xor
lock
add
imul
mov
clc
pop
mov
push
push
int
sub
push
mov
push
mov
sbb
vzeroall
mov
std
mov
cmp
push
sub
inc
movb
mov
pop
jmp
dec
test
cld
rcl
fdiv
in
or
jbe
jb
sbb
repz
mov
repz
lea
jne
movsb
and
pop
pop
pop
sbb
sahf
adc
mov
cmp
adc
mov
scas
pop
mulb
jge
adc
jno
pop
daa
mov
push
call
in
cli
lcall
test
lcall
addr16
test
or
test
jle
int3
add
aad
sub
sbb
fisubrs
xchg
mov
test
push
push
daa
dec
pop
mov
pop
mull
gs
test
jmp
sahf
push
inc
jns
shll
mov
fnstenv
add
shll
add
in
outsb
mov
cvtpi2ps
jg
clc
mov
mov
scas
adc
adc
jnp
int
cmpsl
adc
pop
shrl
push
cltd
mov
mov
push
jo
xor
es
scas
sbb
cld
dec
jmp
dec
xor
imul
rcl
and
bound
rcrl
add
sbb
lods
dec
shlb
xchg
dec
cmp
xorb
inc
jle
xchg
cmpsl
push
ja
mov
xchg
imul
adc
jns
pusha
add
repz
test
test
sbbl
add
xor
mov
dec
dec
and
xchg
stos
dec
mov
xchg
mov
xchg
and
loope
dec
sub
mov
adc
iret
push
mov
in
mov
push
xor
shll
mov
enter
aas
rclb
mov
adc
ja
movsb
in
xchg
adc
or
jnp
sti
and
js
push
push
mulb
add
js
adc
push
sbb
mov
mov
js
js
inc
and
out
test
lcall
or
scas
test
mov
dec
inc
sub
mov
jecxz
int
lret
in
rorb
icebp
mov
repz
or
xor
lret
push
and
xor
inc
call
std
loop
pop
xchg
xor
xor
sub
adc
pop
stos
enter
sbb
adc
push
popl
minps
sar
out
push
mov
inc
add
dec
xchg
or
clc
dec
cmp
cmp
or
xor
push
sbb
jb
dec
into
cltd
push
mov
leave
and
inc
sub
es
pshufb
int3
in
popa
out
test
jne
jle
xchg
insl
sbb
and
in
out
dec
jbe
ficomps
js
aas
xchg
cld
dec
rolb
inc
rorb
add
aas
data16
xor
mov
pop
jecxz
push
negb
mov
mov
nop
pop
pop
icebp
nop
jb
cmc
lret
aas
test
and
lds
sbb
ror
roll
sub
lahf
je
insb
lods
xor
pop
inc
mov
inc
cmp
daa
in
jae
fsts
in
cmp
movsl
or
fldenv
shlb
stc
mov
or
pop
das
cltd
push
push
decl
sbb
and
test
adc
cmp
into
cld
mov
aaa
dec
sahf
test
push
jnp
mov
mov
sbb
mov
lahf
pop
add
pusha
sub
test
pop
clc
ds
push
sbb
xchg
inc
mov
popa
lea
hlt
add
xlat
xlat
jno
pop
scas
cwtl
pop
pop
fucomi
xorb
and
out
mov
sarb
sub
jno
xor
cmpsl
and
mov
fldt
inc
inc
jg
mov
mov
or
push
sti
pop
out
jle
fidivs
shr
jb
test
stos
dec
sub
or
cmp
adc
fstl
add
js
xor
push
xor
mov
mov
dec
sbb
addr16
add
mov
mov
lcall
or
test
repz
fwait
or
ds
not
std
rcll
icebp
or
mov
pushf
xor
mov
add
jae
daa
popa
fwait
xchg
push
cli
jl
cmpsb
xchg
jecxz
fcoml
inc
xchg
dec
fldl
ds
adc
lcall
sub
sti
xor
or
cmp
fisubrs
fisttpl
in
mov
shrl
pop
into
sub
sbb
inc
int3
xor
pop
push
jle
ret
dec
dec
xor
lahf
dec
mov
lcall
scas
icebp
and
imul
pusha
or
cs
sbb
fcompl
sub
sub
cmp
cltd
pop
loopne
sub
insb
inc
mov
xchg
cmp
dec
test
les
pop
fstpl
mov
inc
xchg
xchg
inc
add
ja
imul
scas
adc
mov
xchg
dec
jne
sbb
cld
ss
nop
sbb
js
cmpsb
mulb
mov
mov
or
imul
sbb
inc
movsb
and
loopne
ljmp
and
in
and
das
leave
add
xchg
jne
clc
and
dec
mov
je
xor
jo
jecxz
adc
inc
pop
adc
repz
pop
mov
stos
xchg
jne
push
xlat
dec
push
inc
inc
or
cmp
cmp
out
lcall
jbe
into
loop
not
out
pop
push
mov
jo
arpl
mov
pop
rolb
popf
mov
les
jne
mov
mov
mov
loope
inc
je
mov
add
add
lods
push
imul
popa
loope
or
mov
loop
push
repz
fldenv
pop
dec
lods
mov
ret
movsb
orb
or
pop
fldenv
ds
cltd
adc
imulb
inc
imul
or
pushf
fists
stc
sbb
add
out
mov
cmc
cmp
fcoml
or
outsb
adc
out
ss
sahf
icebp
cmp
or
push
popa
test
mov
daa
xchg
and
dec
int
pop
adc
out
xchg
mov
frndint
adc
int3
pop
pop
jp
add
adc
out
jno
rcr
pop
sti
pop
shll
pop
mov
jo
fs
enter
fcmovb
mov
clc
or
ja
mov
pop
pusha
fwait
mov
pop
cmc
decl
test
mov
arpl
das
popa
inc
or
sbbb
mov
inc
mov
mov
cmc
push
aad
xor
arpl
sub
or
cmp
cmp
mov
ljmp
xchg
push
js
jmp
jne
adc
add
ss
lret
lods
push
insb
inc
out
push
jg
or
lea
mov
push
out
cmp
mov
jl
cmc
xor
sbb
lahf
dec
push
sbbl
inc
jb
adc
lcall
pop
mov
xchg
mov
xchg
nop
sub
sub
insb
mov
jecxz
imul
and
jecxz
sbb
negl
push
dec
cmp
cmp
mov
outsb
and
mov
int3
cmp
mov
push
dec
sbb
in
mov
andb
push
in
out
int3
inc
mov
popf
mov
mov
rclb
stos
mov
das
xchg
mov
sbb
sub
lods
dec
sbb
andb
les
inc
pop
clc
or
aam
dec
shlb
cmp
mov
mov
and
ret
jb
adcb
push
add
pop
jmp
or
jnp
xchg
push
mov
mul
int3
and
je
pop
arpl
sbb
fdivl
lret
sub
mov
test
rcrb
adc
cmp
and
orb
cs
jp
mov
and
lea
xchg
and
sbb
pop
mov
filds
fsubrl
xchg
out
daa
cmp
cmpsl
sub
dec
imul
enter
adc
ret
add
mov
push
loope
call
push
adc
mov
cwtl
cmpsl
and
lret
lods
insb
inc
in
xchg
imul
cmc
es
adc
or
imul
jl
sub
add
repnz
and
loop
lock
mov
xor
xchg
cmp
ret
mov
scas
std
icebp
test
inc
daa
call
ficoml
cs
push
dec
or
jne
xorb
cld
in
xor
pushf
ja
mov
daa
loopne
lods
jl
jnp
sub
and
and
std
repz
cld
push
sub
sahf
jb
mov
adcb
xor
jge
pop
mov
fdivrl
inc
es
mov
adc
fimuls
rcl
sbb
xchg
in
rcrl
movl
ret
sub
imul
push
jg
cwtl
stos
inc
sub
int
fnstsw
idiv
aas
stos
pop
test
stos
je
xchg
and
add
insb
mov
pop
sahf
ja
xor
hlt
pushf
cmp
xchg
xchg
ljmp
inc
aad
sbb
jnp
sahf
adc
js
pop
ret
inc
pop
test
add
fimuls
mov
cmp
and
popf
roll
adc
imul
mov
push
mov
lods
mov
fcmovbe
fbld
leave
stos
sbb
push
cmp
pop
cwtl
mov
cltd
rcl
adc
js
leave
fistpll
push
pop
dec
fimull
cwtl
xchg
mov
adc
ljmp
lret
mov
mov
and
or
bound
xlat
int3
ja
stos
mov
mov
leave
inc
pop
mov
movsl
sbb
pop
cs
cmp
std
jno
adc
stc
mov
inc
aam
mov
cli
sub
je
fcoms
jae
insl
mov
fnsave
jge
cmp
lret
mov
rol
test
jle
or
or
cs
fcompl
push
cmp
and
fs
xchg
cmp
jl
test
adc
in
ret
sub
jb
jbe
filds
sub
mov
and
mov
cs
rcrl
inc
or
cli
popa
xchg
arpl
rcl
jmp
out
add
or
sbb
iret
cmc
mov
out
pushf
test
cmp
push
sub
inc
sbb
mov
shll
dec
dec
jbe
jae
in
sbbl
loop
adc
test
lea
xlat
mov
fcmovnbe
and
push
into
push
xorl
or
pop
cmpsl
rolb
xchg
add
xor
xchg
into
xchg
jb
jae
and
mov
mov
dec
stos
mov
xlat
lds
mov
push
bound
pop
inc
pop
pop
xchg
cs
fld
hlt
sub
fistpll
ret
in
je
xchg
scas
rcll
xchg
jae
mov
cmpsl
add
ret
mov
in
ja
jp
arpl
cmp
or
mov
adc
iret
in
adc
add
push
fdivrs
adc
jbe
std
lea
lds
inc
and
movsb
sbb
xchg
push
adc
pop
pop
enter
mov
lahf
mov
or
pop
cmp
popf
repnz
inc
dec
call
test
movsl
jmp
xor
sub
xor
mov
test
popf
inc
xor
jle
mov
outsb
pop
mov
loop
jmp
call
fdivs
adc
pop
jge
pushf
icebp
sub
psubd
xchg
xor
fidivl
dec
cmp
rolb
imul
mov
js
mov
cs
aam
mov
enter
cmc
jle
insb
inc
dec
mov
add
es
inc
movsl
sbb
aam
in
xchg
dec
sub
loopne
mov
mov
mov
leave
add
out
shll
out
or
aam
pop
fstpt
jnp
js
adc
jecxz
pushf
test
lods
pop
hlt
mov
mov
push
add
adc
je
push
push
es
adc
cmpl
dec
mov
div
xchg
in
mov
push
dec
and
inc
lcall
push
iret
push
jmp
cmp
push
lods
xchg
xor
jb
or
inc
mov
ss
sbb
cmc
into
cmp
adc
jno
mov
mov
xchg
into
xor
xlat
loopne
xor
jle
aaa
stos
jno
xchg
je
mov
xor
mov
add
fldenv
popa
testb
call
test
aaa
sbb
mov
test
mov
rep
mov
sub
out
jbe
xchg
inc
dec
mov
inc
lahf
ret
mov
in
push
stos
jno
mov
mov
faddl
adcb
push
sub
push
jle
int
fcomps
rcrl
jle
dec
xchg
pop
aad
fnstcw
mov
out
adc
cli
out
mov
icebp
or
and
push
push
fisttps
dec
div
jmp
xchg
pushf
outsl
xor
out
cmp
sbb
add
cmp
inc
mov
stc
loopne
jno
pushf
mov
and
lds
fsubr
push
ljmp
fs
jg
sti
subl
xchg
fadds
outsl
ljmp
mov
neg
icebp
repnz
push
jmp
or
jbe
or
out
mov
mulb
adc
notb
jg
push
mov
jmp
and
shrb
inc
xchg
fmuls
mov
jae
insb
push
add
inc
fimuls
rcrb
mov
sub
fists
mov
add
inc
jge
mov
or
das
dec
xor
xchg
or
pushf
and
ds
in
gs
dec
cmpl
hlt
cmpb
inc
test
adc
stos
xchg
jns
repz
jns
adc
xchg
test
and
inc
fbstp
jne
aam
mov
out
xchg
add
fildl
xchg
mov
cmc
mov
cmp
inc
fsubr
push
sarl
xchg
push
pop
sub
addb
push
lock
mov
std
cld
test
pop
xor
popa
jns
sub
mov
mov
xchg
test
push
mov
sub
push
xchg
movsb
mov
aam
data16
inc
test
mov
inc
cmc
mov
jl
cmc
lods
xchg
add
ss
dec
dec
pop
leave
lahf
pop
cmp
nopl
xchg
sub
xchg
in
mov
ja
jmp
lahf
cmp
dec
fmull
and
jae
and
push
dec
pop
dec
sbb
sbb
and
lds
lds
in
pop
insb
push
inc
hlt
mov
pusha
sti
into
mov
jle
call
dec
test
pop
ljmp
test
fwait
xor
stos
mov
mov
pop
aad
and
mov
adc
fwait
or
pop
inc
push
lret
cwtl
mov
leave
mov
jbe
xchg
bound
dec
xchg
mov
cs
and
push
sbb
movl
ja
ja
push
or
sti
dec
ret
push
cmp
cmpb
imul
not
cli
pop
and
loope
into
xchg
fcomi
cmp
call
jb
out
pop
mov
popf
lea
jmp
into
fiaddl
inc
and
sahf
and
daa
cwtl
adc
push
jecxz
mov
call
mov
add
xchg
inc
jbe
pop
jnp
jle
mov
mov
push
mov
pop
popa
es
clc
xchg
or
rolb
insl
xchg
dec
shll
or
dec
or
mov
dec
jo
sbb
push
out
pop
fwait
out
enter
orb
push
xor
in
and
lcall
jp
jae
loopne
mov
and
ljmp
sahf
inc
mov
jp
adc
pop
xchg
and
mov
aam
addr16
mov
outsl
test
mov
cld
pop
cmp
xchg
sbb
jae
xor
bound
cmp
in
adc
ret
iretw
ror
or
xor
enter
icebp
dec
xchg
inc
ror
xor
ss
gs
xlat
call
adcb
cltd
push
data16
and
pop
lret
shrb
and
cmp
and
jp
xchg
inc
cmp
outsb
lods
xor
mov
push
xchg
or
mov
jne
sahf
or
mov
mov
add
test
shr
add
out
or
and
pushf
push
lret
mov
insb
adc
sub
mov
push
in
stos
aam
jns
pop
fyl2xp1
inc
call
or
push
push
and
je
lcall
xchg
clc
gs
pop
mov
mov
pop
push
mov
add
pusha
xor
sub
and
sub
sub
inc
push
sbb
sub
cs
and
jg
xorb
mov
int3
xlat
iret
mov
sahf
pop
mov
xor
out
sbb
push
es
cli
add
andb
lds
xchg
adc
iret
stos
lcall
call
jl
cmc
aad
sbb
mov
ret
subb
rorl
xorb
sub
fcomp
sub
and
imul
fbld
shrb
fs
mov
dec
shl
in
out
mov
and
push
push
sbb
cwtl
xor
add
popf
sbb
les
lock
outsb
out
cwtl
orb
or
push
push
shlb
xchg
and
sbb
sub
sbb
adc
push
push
andb
mov
loope
cmp
jbe
or
and
pop
dec
pop
shlb
jecxz
lahf
jge
sub
dec
cmpsl
sub
fidivrl
push
test
repnz
scas
push
jae
or
mov
mov
xchg
pop
or
inc
pusha
mov
test
xchg
loope
shll
adc
jno
popa
and
xor
les
hlt
addl
push
and
add
adc
and
xor
les
hlt
addb
mov
inc
xor
adc
add
or
inc
fdivl
faddl
movsb
push
xor
inc
into
stos
mov
adc
stc
pushf
sahf
fldt
in
aad
lds
loopne
mov
jbe
and
inc
or
jle
outsb
adc
mov
lds
xchg
fiadds
cs
ds
push
xor
pop
add
scas
aad
lds
xchg
movb
and
aas
push
add
insb
dec
cmpl
repnz
jle
push
bsr
inc
pop
mov
mov
sbb
sub
cmp
jne
adc
insl
inc
leave
mov
mov
cmp
push
add
inc
vphaddbw
pop
stos
fisubl
lret
mov
rorb
mov
ret
sahf
ret
ficomps
int3
xchg
shll
and
and
xchg
push
popa
cmp
fiadds
iret
je
insl
fcomps
push
gs
movsl
jecxz
pop
add
dec
out
sahf
cmp
les
rdtsc
in
inc
xor
and
movsl
or
push
shrl
pop
pop
ss
lds
movl
pop
xor
pop
add
scas
xchg
lahf
orl
mov
mov
es
add
adc
pop
jne
add
scas
mov
test
sarb
add
push
dec
ret
add
sub
jmp
out
xchg
fiadds
cs
push
inc
push
xor
pop
add
scas
aad
lds
xchg
fiadds
cs
push
inc
push
xor
pop
add
sub
mov
mov
bound
es
test
inc
push
sub
sbb
adc
sub
xchg
jle
loope
push
aas
nop
xchg
mov
xor
mov
mov
lock
jbe
mov
mov
mov
inc
add
xorl
insl
outsl
jnp
jnp
fsub
inc
fldl
jmp
sahf
xchg
ret
mov
xlat
mov
and
imulb
roll
push
gs
mov
push
aas
das
adc
push
clc
loop
testl
in
inc
xchg
or
cmp
mov
mov
inc
ljmp
inc
scas
cmp
mov
and
sbb
or
sbb
fidivrl
gs
lret
xor
xchg
or
bswap
dec
dec
mov
lcall
push
jg
sahf
add
xchg
fcomp
sbb
orl
push
fisubrl
ficoms
dec
dec
or
js
cltd
data16
into
xor
pop
imul
jae
sub
xchg
fstpt
ds
jle
cmp
push
in
pop
pop
add
inc
jb
push
mov
cmp
repnz
jge
jp
xchg
stos
inc
rcrb
stos
int
inc
cmpsl
push
cmpsl
cmp
mov
dec
jg
addl
mov
stc
add
lods
in
mov
mov
imul
call
jae
or
cmp
insb
xor
xor
push
fsubs
jp
xchg
xchg
jmp
aaa
xor
cmp
pop
and
mov
out
mov
aaa
stos
lret
pop
lods
mov
jbe
mov
adc
dec
cwtl
imul
hlt
sarb
lods
insb
adc
jecxz
in
ficoms
mov
into
jno
mov
lods
leave
test
je
lret
out
aas
dec
test
cli
lahf
jmp
fisubl
jno
sub
inc
xchg
sub
dec
mov
and
add
xchg
cltd
mov
shlb
les
std
mov
pop
or
cmp
inc
stos
je
and
or
cmp
xor
rcrb
xchg
xchg
shll
or
push
inc
sbb
roll
rcll
sbb
lret
push
int
jp
cltd
mov
sbb
mov
lret
adc
mov
mov
mov
cmc
addr16
loopne
pop
mov
mov
or
movsb
dec
pop
lcall
xchg
adc
push
mov
mov
nop
add
in
lods
in
incb
jae
xchg
add
xchg
movsl
pop
or
jge
iret
insb
mov
sub
jno
push
loop
scas
ljmp
inc
pushf
push
dec
xor
jmp
mov
es
sbb
sub
fwait
sbb
in
enter
xchg
sbb
mov
lret
ss
movsl
push
repz
dec
mov
pop
add
leave
dec
xorb
cmc
xor
xchg
dec
jle
xchg
mov
xchg
mov
adc
and
lods
mov
and
out
sub
inc
dec
pop
outsb
out
jne
mov
mov
push
push
fld
push
pop
ja
fistl
dec
cld
fbld
xor
pop
jae
scas
add
jecxz
xor
adc
cmpsl
addb
mov
fwait
outsb
add
sub
lock
add
in
addr16
lea
adc
loopne
jo
pop
pop
push
mov
iret
test
sub
shlb
mov
mov
mov
sub
push
lods
leave
cmp
jb
sbb
mov
jno
push
iret
xchg
cltd
lock
scas
xor
push
mov
xchg
mov
aam
dec
ds
sub
movsl
scas
inc
mov
out
push
movsb
dec
jge
loopne
mov
sub
push
cld
cmp
pop
adc
test
mov
push
add
out
cmp
sbb
mov
xchg
fiadds
stos
shlb
jae
xchg
loopne
jl
mov
bound
xchg
push
jp
shll
adc
push
into
loope
adc
sti
stc
das
xchg
in
xchg
loop
pop
xlat
adc
mov
jb
dec
cmp
dec
sbb
mov
push
xchg
sbb
cmc
loopne
sub
lahf
xor
adc
mov
xor
mov
shl
adc
out
jae
fistl
sbb
sarl
fldenv
adc
lods
das
pcmpeqd
fdivrp
xor
cwtl
aaa
adc
xchg
mov
int3
jle
js
xchg
jge
dec
insl
imul
dec
fsubrl
ljmp
dec
add
out
ss
xchg
repnz
es
lods
xor
lcall
cld
ss
test
pop
fidivrl
dec
adc
fwait
xchg
out
xor
cmpsb
and
push
fsub
mov
sub
inc
scas
adc
fcmovb
mov
mov
cs
in
jecxz
inc
pop
jne
shl
clc
adc
imul
jge
insb
mov
ljmp
into
scas
bound
ljmp
push
mov
mov
aaa
xchg
push
fsubrs
jo
and
cmpsb
xlat
loopne
mov
aaa
mov
mov
xchg
jle
lcall
pop
popf
sbb
imul
dec
rorl
and
jl
mov
mov
ja
call
add
cmp
ds
call
ftst
stos
inc
xchg
addl
jne
sahf
push
add
std
jle
sbbb
aas
push
mov
sti
rcl
pop
shlb
sub
out
sub
outsb
push
std
mov
arpl
shr
in
sub
inc
call
xchg
add
ret
xor
jne
dec
push
ss
daa
jle
jne
mov
test
pop
push
xor
xchg
adc
popf
insb
inc
dec
sbb
push
std
lods
or
mov
int3
xor
cmp
mov
out
add
lea
mov
dec
dec
jmp
scas
adc
xchg
popa
mov
jmp
mov
into
popf
fstpl
sbb
xchg
aam
and
mov
insl
sbb
and
dec
adc
jbe
scas
lods
aad
adc
icebp
stos
xor
cmp
cmp
popa
test
push
xor
xchg
cli
sbb
call
and
xor
add
repnz
fnstenv
sub
stc
or
jnp
jg
or
xchg
fisubrl
jno
lods
js
jecxz
cmpsl
es
or
lahf
sbb
mov
push
mov
cmp
daa
sbb
mov
dec
jae
seta
push
mov
jno
jbe
mov
insl
fisttpll
pop
cmpsl
pop
mov
adc
adc
xor
dec
js
into
fdivrs
push
gs
dec
pop
push
inc
mov
inc
loop
inc
test
shll
cmpl
jb
jl
sub
mov
xor
mov
inc
adc
dec
mov
iret
inc
jp
mov
js
adc
cmpsb
sbb
dec
rorb
adc
lock
dec
dec
xchg
inc
test
adc
mov
xor
and
or
les
or
cmc
xor
mov
xor
out
push
je
mov
call
inc
call
jmp
cmp
push
stc
ds
xor
lret
insb
push
mov
ss
or
push
cmp
push
push
mov
pop
and
fsubrp
adc
xchg
shrl
inc
push
insb
or
cmp
xor
pop
adc
cmp
stos
inc
pop
fs
repnz
or
dec
adc
sub
dec
dec
lods
into
add
xor
push
aas
lahf
cmp
mov
ja
xchg
lods
mov
aam
inc
imul
push
xor
or
lea
cmc
or
scas
mov
hlt
out
out
imulb
scas
out
dec
daa
xchg
mov
lods
xor
pop
or
push
xor
adc
scas
cmp
out
mov
fmul
loope
sbb
and
and
ss
stos
sarl
pop
jmp
frstor
out
adc
push
sub
orb
jnp
fnstenv
sbb
outsb
aam
and
dec
mov
mov
jmp
cld
sub
aam
dec
repz
jp
mov
leave
jnp
dec
mov
jmp
cmp
fbld
adc
cmpsl
call
and
sub
cmp
shll
shll
sub
xorb
scas
test
rclb
fnstcw
adc
xor
pop
mov
cld
addr16
fwait
jno
xor
pop
outsl
in
loop
xor
jne
or
inc
mov
sbb
cld
adc
fwait
sahf
shl
mov
aas
aam
jno
jne
jp,pt
mov
sahf
mov
xlat
add
jb
sub
lahf
inc
cli
xchg
jmp
jo
xchg
xlat
push
inc
adc
xchg
xor
push
xchg
mov
scas
sub
imul
sbb
scas
mov
xchg
jno
rcr
sbb
mov
repnz
jle
adc
cs
in
pop
push
decl
or
mov
push
rorl
pop
incl
pop
fidivs
sub
add
fistl
xor
pop
sbb
jmp
sub
ds
dec
cld
fdivrs
mov
adc
fwait
cmp
inc
inc
push
jae
loopne
mov
inc
fstl
mov
xor
jno
addl
test
jnp
stc
les
sub
je
cmp
cli
sub
cmpl
jnp
cmc
lret
je
sbbb
lods
test
mov
popa
fwait
test
sub
pop
mov
insb
test
cmp
lds
fistl
icebp
and
addr16
shrl
jbe
mov
sub
sbb
out
mov
pop
insb
aas
sub
jo
cmp
sub
movsl
mov
and
mov
pop
out
stc
add
pop
inc
and
addr16
sub
adc
addr16
out
jp
fsub
loopne
daa
xor
inc
jmp
sbb
jmp
mov
dec
mov
jmpw
pop
pop
inc
jae
dec
pop
adc
popf
out
aaa
int3
or
sahf
test
adc
enter
clc
fbstp
adc
ret
add
ds
call
sub
jmp
adc
into
cmp
test
cmp
lods
push
lock
mov
sub
imul
fadds
or
cmp
inc
andl
test
fsubrs
sub
dec
adc
clc
cmp
int
ret
lock
jbe
stos
insb
inc
pop
mov
aaa
cmp
cmp
pop
insl
mov
arpl
loopne
fcoms
jbe
push
sbb
fnsave
dec
mov
jae
mov
leave
jb
faddl
imul
xchg
pop
in
push
cmc
adc
jge
fdivrs
cli
xchg
xor
xor
hlt
pop
dec
in
and
add
sbb
into
lock
test
sbb
sub
in
jge
xor
pop
lds
mov
mov
insl
push
fists
xor
into
test
ja
ret
jo
mov
inc
mov
mov
pop
repnz
or
ljmp
shl
push
jp
add
dec
adc
pop
fsts
sub
dec
loope
push
sbb
rcll
pop
inc
xchg
and
jbe
pop
cmp
push
nop
pop
jo
pushf
lea
cmp
stos
sbb
xchg
xor
mov
fdivp
scas
and
mov
push
pop
adc
xor
sbb
cmpsb
repnz
and
or
faddl
cwtl
jle
js
adc
es
es
popf
incb
jb
push
aaa
pop
adc
jle
add
jno
in
ja
dec
mov
sbb
cwtl
sub
dec
jcxz
mov
mov
add
hlt
jo
insl
insl
xchg
pop
push
mov
pusha
inc
add
jnp
in
insl
dec
inc
jbe
jmp
cs
adc
xchg
mov
mov
add
jmp
icebp
cmp
push
jbe
xor
imul
or
push
cmp
test
rcrb
xor
mov
mov
inc
popa
xor
xor
xchg
mov
pop
mov
test
and
test
bound
repz
mov
add
xchg
sarb
popf
add
ret
mov
lods
mov
iret
stos
mov
pop
inc
mov
mov
or
mov
pop
test
outsb
cltd
imul
add
scas
xchg
dec
xor
ret
or
ret
imul
xor
or
aad
hlt
in
sidtl
outsb
repz
push
mov
sub
push
cmpsb
sahf
xor
cld
call
pop
push
jl
sahf
test
sbb
popf
sbb
das
cmp
nop
clc
push
xchg
test
sub
push
cmp
adc
xchg
xorl
xlat
pop
cli
cld
insb
mov
sahf
mov
sub
out
dec
xor
mov
jmp
sahf
shr
loop
movsb
adc
xchg
arpl
cs
jnp
push
imul
dec
jecxz
push
push
mov
fadd
fldenv
data16
in
dec
pop
clc
mov
js
inc
fmull
sbb
add
loopne
iret
pusha
pop
ficoml
jne
addr16
adc
push
subl
cmp
mov
push
enter
jl
xor
mov
add
mov
notl
mov
xchg
jp
aaa
cmpsl
mov
int3
loopne
or
jg
dec
fsubp
jo
ret
dec
hlt
ffreep
jne
push
and
outsb
xlat
xchg
divl
test
mov
lods
shlb
negb
jecxz
nop
imul
jmp
ja
shll
pop
xchg
popa
and
pop
je
arpl
sbb
and
pop
pop
mov
lods
call
sub
aaa
sub
fnstcw
xor
lock
ljmp
daa
arpl
mov
cwtl
roll
cmp
sbb
inc
ret
xchg
stc
cmp
loop
in
cmp
lret
mov
adc
push
xchg
clc
andb
and
or
rolb
jmp
push
sbb
sub
push
fdivs
jnp
out
pop
notb
inc
pop
cmp
jns
test
imul
clc
fdivrs
mov
inc
insl
clc
and
pop
aam
mov
push
js
mov
lods
mov
pop
je
mov
push
pop
mov
das
sub
xor
sbb
add
lret
outsl
mov
out
loopne
das
idivl
adc
out
pushf
add
inc
leave
xor
jne
sbb
bound
in
mov
push
call
loop
xchg
pushf
mov
adc
imul
cmp
adc
jbe
les
mov
adc
imul
out
dec
popf
les
fdivrl
cmpb
leave
xchg
out
add
jge
jb
aad
fwait
cmc
cli
int3
daa
roll
cmp
jmp
inc
sub
cmp
sub
ja
mov
test
sbb
jno
xchg
inc
stos
pushf
mov
pushf
and
add
xchg
dec
inc
xchg
and
sbb
xlat
sbbl
push
stc
out
ja
jo
dec
gs
push
idivl
aam
mov
inc
xchg
ret
sti
shlb
inc
icebp
jmp
jle
push
arpl
lcall
jle
jbe
inc
lret
das
inc
push
in
sub
mov
push
sbb
xchg
mov
push
ja
aad
pop
xchg
inc
lret
jecxz
pusha
imul
inc
mov
ljmp
data16
push
insb
jl
pushf
and
iret
adc
lcall
jmp
adc
mov
jno
insb
push
pop
push
lock
lods
lods
dec
outsb
sub
decb
and
lret
leave
out
mov
daa
mov
sti
adc
jne
cltd
cmp
mov
pop
mov
jne
stc
out
popf
fwait
les
test
fdivl
aam
ja
repz
mov
enter
sahf
fnstsw
jno
mov
push
sub
xchg
adc
add
mov
repz
mov
fnstcw
lea
gs
rcrl
bnd
adc
push
into
dec
cmp
sub
push
push
and
jae
ljmp
ret
loope
ret
mov
cmpsb
outsb
mov
js
pop
xchg
jmp
rcl
and
loope
mov
mov
jns
dec
push
fisubs
in
jmp
ss
arpl
mov
shr
pop
fcoms
or
sub
movsl
lret
sbbb
test
add
mov
test
cmpsb
push
inc
leave
inc
or
das
or
push
sbb
cmp
pop
inc
dec
sub
out
jg
cmp
xor
xchg
pop
pop
fcomip
out
mov
push
dec
outsb
ja
push
xor
mov
jne
ret
dec
mov
aas
div
into
shl
cli
or
cmp
jle,pn
xchg
jae
xor
adc
cs
pop
test
dec
fisubl
xchg
pop
push
test
sbb
and
push
dec
cld
inc
cmp
outsl
xor
xchg
dec
sbb
xor
ds
and
pop
jl
loopne
jae
insb
adc
imull
scas
jg
inc
aas
or
lret
aad
add
orb
cs
out
mov
rclb
or
test
lret
xchg
mov
push
push
sub
jo
dec
adc
bound
push
mov
xchg
scas
add
filds
es
adc
mov
ja
adc
addr16
jo
ljmp
scas
mov
jecxz
testb
add
ret
sbb
xchg
fnstenv
push
add
mov
hlt
push
fisubl
ja
sbb
lahf
int
pusha
insl
call
fsubs
pusha
push
jns
fildl
sbb
pop
push
cmp
popa
fs
cmp
subl
pop
or
ret
adc
ret
cmp
stos
adc
aam
push
pop
xchg
imul
lods
sbb
imul
stc
imul
cld
mov
dec
mov
test
push
das
fsubp
pop
xor
and
push
notl
or
jns
pop
addr16
out
cmpsb
jnp
add
and
push
outsb
and
cwtl
jecxz
hlt
mov
clc
inc
aam
cs
and
fucom
and
or
jns
sub
das
lret
pop
dec
sbb
outsl
movsl
add
lea
aas
sbb
mov
daa
sbb
dec
mov
lret
icebp
or
andb
lret
pop
push
jmp
xchg
add
sub
mov
jge
cmc
js
jbe
stc
daa
ds
cmp
aam
movsl
imul
fistpll
scas
push
aad
test
mov
es
imul
xor
jg
pop
cld
cs
out
cld
aaa
test
pushf
jbe
aad
out
cmpsl
into
fidivrl
cmpsb
and
pop
adc
jnp
pop
pusha
out
int
fimull
sub
jo
mov
dec
or
inc
adc
js
aam
jno
mov
adc
stos
sbb
out
pop
orb
jne
jnp
je
push
je
das
and
in
inc
cld
xlat
movsb
jno
int3
xor
sbb
sub
imul
icebp
xor
test
sub
lock
pusha
roll
outsb
fsubrp
jbe
pop
leave
cmp
call
cmp
sub
das
pop
insb
add
jmp
lods
mov
and
dec
stos
inc
outsb
push
jmp
cld
sbb
daa
xor
out
enter
mov
movsl
repz
fistpl
cmp
sahf
jp
orb
not
push
push
cltd
mov
push
mov
xchg
sub
sub
jno
stos
test
mov
into
jbe
add
jbe
lods
xor
dec
dec
xlat
xor
cmpsb
jne
sbb
jns
les
sub
inc
mov
fstpt
or
out
and
adc
and
jle
pop
pushf
xor
enter
scas
out
lahf
mov
jmp
xchg
sbb
mov
mov
insl
push
xchg
mov
jbe
push
or
pusha
push
scas
pop
stos
arpl
fdivr
sar
loop
pop
std
stos
xchg
add
mov
push
test
jle
fsubs
and
aad
push
cmp
pusha
fwait
lods
mov
jge
jb,pn
adc
aad
inc
fstps
lcall
inc
mov
xchg
pop
in
jae
stos
xchg
scas
fnstsw
mov
imul
dec
scas
ret
adc
out
ror
int
xchg
jno
xchg
sub
sub
push
test
mov
popa
add
cs
andb
int
scas
xor
mov
rcrl
fwait
call
push
mov
pushf
and
push
movsl
or
add
cmp
outsb
push
and
adc
testb
mov
adc
cmpsb
jl
mov
leave
inc
inc
pop
in
add
push
xchg
std
icebp
in
mov
fwait
mov
ljmp
out
xchg
fiadds
cs
push
inc
push
xor
pop
add
scas
aad
lds
xchg
fiadds
cs
push
inc
push
xor
pop
add
scas
aad
lds
xchg
fiadds
cs
push
inc
sysexit
jle
outsb
adc
add
scas
aad
lds
adc
ds
imulb
mov
ret
jecxz
shl
ret
rep
jmp
cld
mov
in
mov
inc
arpl
arpl
xor
arpl
in
jecxz
jecxz
ret
repz
mov
mov
inc
arpl
aaa
arpl
adc
popa
add
ljmp
rep
cmpl
jae
push
jae
inc
outsb
jl
push
push
add
mov
inc
pop
jo
jns
mov
fstpl
testb
cwtl
sbb
or
repz
outsb
push
roll
pop
insb
arpl
pushf
lods
lods
bound
jbe
pushl
bound
jecxz
lcall
inc
and
pushf
lods
add
sarw
repz
xor
dec
repz
xorb
inc
cwtl
or
push
pushf
pop
and
fsubr
mov
mov
or
andb
mov
xor
pushf
add
pushf
inc
mov
adc
out
sahf
fdivr
mov
pushf
test
push
imulb
push
jae
test
mov
pushf
push
lods
jae
jb
push
xor
repz
add
xor
jecxz
shl
aam
mov
mov
jnp
dec
arpl
sub
cmp
adc
sbb
lods
xchg
mov
cmpsl
lcall
out
jecxz
arpl
and
sub
pusha
jbe
data16
ret
jecxz
mov
roll
aam
mov
cmp
push
add
sbb
pusha
push
js
inc
add
mov
xorb
mov
mov
inc
arpl
arpl
xor
and
adc
add
repz
jecxz
shl
ret
repz
mov
mov
inc
arpl
arpl
xor
and
adc
add
repz
and
pushf
dec
das
sub
mov
je
lock
push
push
push
scas
xor
dec
add
jmp
pop
xchg
pop
imul
fcoml
fs
sbb
add
or
and
cmp
push
push
sub
jns
jae
sbb
mov
stc
mov
imul
mov
stc
stos
add
test
adc
mov
repnz
out
scas
and
ret
push
mov
fdivl
aaa
inc
mov
std
add
sub
mov
cmpsb
jo
repz
mov
or
cltd
sbb
jbe
addr16
loope
mov
add
mov
fiaddl
mov
loopne
movsl
mov
jns
jmp
dec
rolb
mov
pop
jne
test
mov
pop
lcall
jecxz
ffree
divb
sbb
test
mov
in
int
pop
xor
jmp
pushf
lods
les
add
and
cmp
jbe
daa
int3
cmpsb
fimuls
not
mov
call
loop
repnz
repz
mov
xchg
push
test
push
sarb
shlb
xor
sahf
push
ret
out
sbb
jle
cmp
sub
loop
push
fldl
std
and
xchg
inc
ret
and
and
test
xchg
push
dec
mov
mov
shrl
push
sahf
push
pushf
adc
out
cs
loopne
mov
push
mov
clc
sub
mov
mov
mov
xor
mov
out
loopne
ljmp
outsb
arpl
push
cld
xchg
xlat
cwtl
inc
out
lret
das
dec
dec
ljmp
mov
ret
mov
pop
cmc
fsubl
or
mov
sub
sub
aas
cmp
push
scas
lods
sbb
xchg
std
jl
push
aaa
insb
sahf
xchg
jmp
in
add
test
inc
cmp
add
pop
into
jnp
jns
rcrl
subl
aam
notl
cld
jmp
mov
jbe
adc
decl
and
stc
sbb
std
ljmp
sbb
ja
lahf
cmp
xchg
out
in
xchg
dec
jle
dec
je
mov
dec
dec
jl
insb
fsubs
mov
jp
xchg
sub
mov
dec
sahf
inc
cmpb
mov
pop
adc
sub
int3
lock
xchg
icebp
inc
in
pushl
movsl
and
test
mov
sub
push
jns
pop
into
inc
roll
lock
lods
mov
out
dec
test
fcomi
pop
rcl
fsubl
sub
cmp
inc
jge
cwtl
add
fstl
mov
push
cmpb
daa
out
pop
push
lods
das
xchg
int3
ja
lea
popf
mov
dec
inc
loope
jg
push
pop
jns
mov
cmpsl
clflush
cmc
mov
push
divl
test
ss
cwtl
sub
nop
cltd
and
mov
sbb
fwait
das
ljmp
sbb
or
fldl
fbld
ficoms
jp
xor
mov
jge
cmp
xorl
shlb
pop
lods
push
aaa
pop
xchg
jo
mov
sbb
sahf
jae
iret
and
add
popf
sbb
pop
cmp
cmp
sub
add
pop
sarl
xor
jl
daa
in
cmp
push
jg
daa
jl
sarl
xchg
mov
lea
or
jle
xlat
cld
cli
push
lea
xchg
mov
push
sbbl
sub
adc
sti
inc
adc
pop
in
popf
ljmp
addb
mov
leave
mov
sbbb
cmpsb
fwait
dec
pushf
mov
mov
push
dec
mov
fisubl
pop
shlb
push
pusha
mov
dec
xchg
bound
arpl
or
xor
mov
mov
mov
stc
inc
cltd
mov
addr16
push
mov
fisubrs
int3
inc
mov
sahf
or
xchg
popa
and
inc
add
sbb
xlat
inc
leave
push
xor
js
cltd
movsb
xor
out
inc
cli
cmpsl
mov
and
in
daa
sub
cmp
jo
push
sub
mov
nop
lret
pop
xor
xchg
xor
mov
test
or
fmull
pushf
ds
jp
jbe
push
bound
pusha
sub
mov
dec
lret
jge
loopne
and
sbb
and
xchg
das
pop
sub
mov
rclb
btc
adc
jmp
pop
or
or
popl
insl
stos
push
adc
lock
adc
lahf
stos
hlt
mov
xor
pusha
push
scas
lret
nop
inc
aam
jp
shlb
stos
lcall
out
push
jbe
mov
sub
ljmp
pop
imul
add
in
rol
jne
repz
or
popf
jbe
dec
jb
and
mov
or
or
ret
push
push
repz
dec
xor
ss
cmp
xor
dec
jg
cli
sub
xchg
xor
dec
inc
in
push
inc
mov
daa
and
ret
jns
cmpsl
inc
dec
out
lods
ret
add
jo
adc
imul
fidivs
mov
je
mov
jle
lret
or
pushf
inc
insb
cld
loopne
outsb
dec
dec
push
lret
push
in
mov
pop
xchg
cmp
movsl
test
not
inc
and
adc
cmp
ds
mov
stc
stos
cwtl
addb
sbb
jno
sbb
mov
and
mov
test
and
cmpsb
outsl
lret
addr16
pusha
pop
in
jl
push
mov
in
pop
add
add
std
push
std
aaa
xchg
mov
stos
bound
dec
mov
ss
int
ljmp
inc
mov
ljmp
pop
out
mov
std
xchg
test
scas
lods
aad
lods
shlb
adc
and
jae
nop
mov
sub
pop
pop
neg
xor
pushf
hlt
lret
pop
push
jo
or
push
fbld
daa
stos
mov
add
fisubrl
or
cmp
dec
pop
xor
jno
or
jbe
push
pusha
mov
js
xchg
mov
xor
jo
hlt
xchg
xor
ret
sbb
xor
daa
mov
inc
jne
js
add
adc
in
mov
jle
mov
mov
cmp
jae
add
mov
out
in
arpl
cli
mov
cs
popf
rorb
gs
dec
ret
jnp
cmc
pusha
adc
das
out
or
repnz
and
or
push
mov
jne
xchg
cmp
out
outsb
add
rcrb
pop
xchg
vsubps
jp
lds
push
cmp
dec
loope
and
dec
xchg
fwait
dec
loop
or
mov
pop
imul
ja
sub
stos
shrb
icebp
arpl
insl
mov
std
pop
xchg
cmc
pop
xor
ret
mov
in
mov
out
jo
xchg
push
mov
mov
cltd
test
popf
jle
imul
sub
movsb
add
mov
push
out
cltd
push
push
adc
cmp
xchg
lret
xchg
add
mov
cs
fmulp
mov
and
xor
cmp
sub
jp
inc
sub
jp
mov
mov
sahf
ret
xchg
xor
outsl
iret
push
pop
xor
iret
cmp
pop
icebp
pusha
movsl
pop
cmp
icebp
push
adc
mov
adc
iret
inc
pop
jne
xchg
int3
jns
rol
mov
dec
mov
inc
pusha
arpl
cmpsb
xchg
das
push
shr
loop
jge
rcrl
jg
inc
cltd
mov
hlt
idivb
jnp
fcom
sar
adc
and
aad
inc
dec
push
das
cmp
xchg
loope
xor
cmp
jae
dec
xchg
jl
subl
xor
cmpsl
inc
pusha
xor
sbb
cmpl
push
or
cmp
xchg
jae
pop
or
daa
sub
fldt
mov
in
add
je
mov
push
inc
movsl
adc
mov
jb
mov
or
inc
sub
inc
adc
push
ret
jnp
loope
adc
pop
inc
mov
scas
cmc
adc
mov
fstl
xlat
push
fwait
xchg
inc
jg
jl
jl
scas
inc
mov
jle
push
and
xor
loope
and
push
and
inc
dec
mov
pop
andb
cmp
ja
sbb
out
jnp
mov
inc
popf
mov
mov
popf
mov
pop
daa
cmp
aam
mov
add
mov
mov
mov
cli
pop
dec
jl
cmpsl
add
test
jno
cwtl
xorb
xor
inc
pop
sbb
rcrl
lret
in
icebp
add
sub
xor
add
lea
stc
out
jae
push
pop
mov
repnz
jmp
xor
mov
lods
push
cli
sbb
out
inc
cld
or
gs
cmp
ss
lret
mov
ja
add
daa
dec
jge
xchg
xor
ret
cld
push
xlat
dec
test
adc
cmc
cmp
loopne
push
mov
cwtl
or
pushf
inc
in
movsl
mov
push
js
pusha
xchg
pop
jg
push
dec
les
xchg
cmpsl
pop
ss
scas
push
cmpsb
pop
negb
pop
pop
or
push
mov
imul
mov
fdivrl
mov
stos
test
and
sbb
arpl
pop
je
lods
sbb
notl
loop
fdivrs
jo
mov
lret
cs
fsubl
daa
sub
pop
dec
icebp
aam
xchg
call
iret
mov
inc
cmp
dec
out
ret
mov
cld
add
dec
int
je
cmc
gs
mov
imul
call
mov
test
sub
out
aaa
insb
repnz
push
lods
sub
aaa
add
sahf
jle
ror
ds
mov
sub
sahf
aas
fnstenv
mov
cmp
fisttpl
inc
dec
cmp
lods
pusha
push
in
out
adcb
or
mov
loope
adc
js
call
jne
or
inc
dec
into
pop
push
leave
dec
inc
mov
enter
and
dec
and
cwtl
gs
into
mov
cmp
ljmp
xor
test
xor
cwtl
inc
fbld
pop
dec
dec
dec
ljmp
fstpt
adc
xor
mov
cmp
xchg
in
xchg
aas
or
sbb
pop
into
inc
repnz
test
cmp
cmp
push
fcoms
xchg
jg
stos
sbb
movsb
and
out
stos
jle
inc
test
mov
push
inc
mov
mov
xor
jno
add
push
xchg
and
cli
in
adc
mov
push
sub
mov
call
mov
and
outsb
mov
dec
enter
dec
mov
ja
or
in
pop
push
testl
in
xorl
bnd
push
popw
and
insb
sti
push
out
sbb
sbb
pop
scas
testl
push
orl
inc
sbb
hlt
adc
xor
sbb
ds
jb
scas
push
rol
push
mov
inc
popl
outsl
and
jg
inc
xor
out
add
int3
xor
sub
jnp
fisubs
mov
jecxz
rcrb
fsubrl
into
jae
sub
mov
stos
pusha
mov
add
push
push
insl
dec
shr
xor
outsb
cli
pop
jo
inc
notl
sbb
lcall
vmread
xor
xchg
inc
cmp
shrl
pushf
rclb
sbb
adc
inc
jle
and
push
jne
sbb
imul
adc
mov
xchg
sub
mov
shrl
push
das
out
mov
js
xchg
push
das
jb
sbb
fcomps
int
jmp
sbb
in
shrb
test
sub
cwtl
test
leave
sub
pop
vcmpss
mov
mov
push
push
pop
or
pushf
mov
jle
aad
les
sbb
xor
cmp
mov
sbb
movsl
or
mov
test
fidivl
iret
jae
std
outsl
aaa
mov
out
shrb
xchg
dec
dec
test
jnp
push
jno
gs
mov
adc
or
mov
imul
rdpkru
push
fwait
lods
push
pop
ret
jns
leave
pop
mov
jle
in
add
xchg
outsb
mov
stos
fldcw
shll
fstps
add
in
or
testl
repz
xchg
sbb
imull
mov
in
loop
push
and
loop
mov
xchg
mov
mov
ds
mov
lcall
pop
cli
lods
add
pop
mov
inc
ja
repz
dec
fiadds
or
mov
sbb
loopne
int
sti
xchg
push
sub
lret
stos
das
mov
fdivl
cmp
clc
sbb
test
push
outsl
xor
pop
mov
xchg
sub
xchg
popf
xor
adc
mov
lds
ljmp
xchg
rorl
jb
andl
nop
mov
repnz
pushl
xchg
mov
pop
and
daa
xor
popa
mov
mov
mov
cs
fidivs
test
sahf
lds
lahf
jg
sbbl
xor
jl
dec
sub
ror
aas
fmuls
mov
sbb
mov
sbb
fildll
hlt
cmp
pusha
cmpsb
xchg
mov
mov
inc
push
sti
jecxz
jae
xor
cmp
mov
adc
pop
aam
inc
ss
cmp
pop
sbb
jo
test
cld
mov
fs
rcl
adc
loopew
imul
xchg
push
aaa
rcr
xchg
call
pusha
and
nop
pop
jno
jg
cmp
xor
dec
pusha
and
mov
lock
ss
xchg
fnstenv
xor
cmp
push
stc
xchg
jb
jge
push
dec
test
imul
test
ficoms
into
xor
rcll
mov
jecxz
and
push
xor
aam
dec
div
fidivs
inc
sub
insb
lea
sbb
sub
psllw
inc
add
ljmp
aaa
and
xchg
gs
test
sbb
jb
xor
sbb
cltd
push
jbe
lcall
mov
jo
inc
adc
cli
push
inc
fs
lret
lods
fdivrl
repz
dec
ja
dec
lret
aad
sub
fs
pop
xor
pop
fisttpll
inc
mov
fs
xchg
mov
cld
filds
lret
rcll
mov
pop
pop
or
icebp
scas
call
mov
dec
inc
shrd
dec
stc
push
ret
mulb
jg
jmp
jl
popl
sub
add
mov
adc
sub
lea
cld
cwtl
xchg
jmp
idivl
loopne
inc
and
push
popf
dec
jge
or
lcall
dec
and
push
fs
je
repz
icebp
dec
mov
pushl
add
cli
pop
jnp
test
lock
and
xchg
std
lea
pop
test
fstpl
dec
pusha
ret
aad
push
popa
fcoms
inc
out
shlb
lock
sub
push
insl
mov
outsl
push
shll
sub
stos
scas
xchg
mov
xor
cmpsl
aad
out
xchg
call
and
sbb
ljmp
ds
mulb
addl
out
jmp
mov
stos
jle
icebp
shl
sbb
push
and
sbb
dec
inc
popa
mov
add
addl
inc
jns
mov
fmuls
add
cmp
movswl
push
mov
pop
jge
sbbb
movsl
xchg
mov
xchg
mov
lods
cmc
xchg
aad
jbe
and
je
cld
adc
scas
dec
inc
cwtl
and
cmc
push
leave
inc
rorb
fldcw
and
gs
mov
and
int
pop
std
repz
hlt
jb
adc
push
jno
xor
jbe
lods
or
xchg
lods
and
lods
pop
lods
inc
jecxz
adc
add
adc
das
sub
xor
cltd
int3
aaa
cmp
stos
sbbb
xchg
mov
loopne
sub
dec
xchg
cmpsl
xchg
xchg
push
sti
fsubrl
dec
adcl
sub
push
rorb
push
out
add
adc
ja
insb
cmpb
aad
out
inc
sbb
mov
and
sub
mov
out
sbbl
cmpsl
js
pushf
in
shrl
xor
icebp
jnp
pop
ljmp
hlt
stos
pop
pop
pop
xchg
testb
leave
push
adc
xor
push
test
sbb
xchg
sbb
mov
or
scas
adc
mov
imul
dec
lahf
or
pop
inc
sub
sub
jbe
mov
add
add
dec
sar
mov
fmuls
xchg
jp
cld
hlt
sbb
arpl
lods
adc
clc
xor
mov
in
push
add
sbb
xchg
adc
in
jmp
in
push
inc
xor
jg
daa
ds
and
pop
js
hlt
add
stos
add
push
jle
imul
mov
ds
lods
inc
add
mov
xchg
xchg
cmp
jg
jmp
inc
jle
push
add
mov
inc
cmp
inc
mov
xchg
lea
jg
jo
leave
jl
stos
shr
push
jp
xchg
cld
ret
mov
dec
negl
sbb
enter
shrb
pop
stc
inc
xchg
je
inc
jmp
xchg
or
arpl
xchg
lock
cmp
and
xor
lds
and
jmp
fisttpl
dec
push
jbe
in
into
imul
test
sbb
xlat
in
mov
cmc
je
cs
or
cmpsl
out
cmpl
mov
xchg
sar
sbb
xchg
mov
shr
and
jmp
imul
lret
cwtl
mov
push
outsl
mov
cld
push
pop
loope
js
xor
test
cmpsl
std
jge
cmp
mov
scas
jo
pop
or
int3
push
arpl
xchg
pop
shl
dec
popl
mov
and
push
cltd
jp
into
cmp
mov
mov
and
shl
xchg
jg
or
mov
or
adc
ret
cmp
out
inc
outsl
pop
dec
scas
inc
dec
fcompl
dec
add
mov
or
lret
stc
jb
fucomi
adc
push
int
push
ds
push
jg
cmc
inc
es
xor
mov
dec
or
inc
add
repz
xchg
pop
add
xor
sub
xrelease
loop
or
arpl
mov
ja
mov
mov
push
or
cltd
xchg
adc
and
sti
in
push
dec
dec
or
pop
cltd
addr16
cwtl
or
rcr
js
push
dec
loopne
jb
out
rcrl
cmp
pushf
add
mov
fnstcw
fwait
and
cli
pop
xchg
push
pop
loopne
sbb
cld
cmp
dec
mov
rorb
inc
ss
mov
sub
jle
xchg
push
sbb
sub
xchg
int3
sbb
mov
add
pop
push
orl
cld
jmp
lahf
xor
lock
add
inc
outsl
movl
je
sub
add
ljmp
xor
addr16
push
xor
jmp
cmp
movsl
mov
shl
push
ja
ja
mov
inc
and
sub
mov
sar
mov
inc
jnp
lea
ret
xor
rcll
push
cmp
inc
jmp
je
into
adc
das
sub
push
jb
push
xchg
cmc
std
subb
adc
popa
clc
iret
and
js
es
pop
inc
cmp
pop
lcall
and
push
inc
mov
out
and
rorl
cmc
sub
insb
cld
pop
int
cs
repnz
pop
cld
cmpsb
leave
fildll
mov
repnz
cmc
push
cmpsb
or
repz
es
enter
dec
addb
pop
adc
sahf
fcom
mov
jns
aam
ljmp
push
jo
int3
shl
push
xor
out
pop
lcall
in
push
jg
loop
dec
jp
hlt
scas
nop
push
cmp
mov
sti
negl
jno
jb
pop
es
fwait
mov
push
mov
and
lea
pushf
sti
lock
adc
jecxz
repz
mov
mov
inc
arpl
arpl
xor
and
adc
add
repz
jecxz
shl
ret
repz
mov
mov
inc
arpl
arpl
xor
and
adc
add
repz
jecxz
shll
repz
mov
mov
ret
arpl
arpl
xor
daa
adc
and
xor
ret
xlat
shl
jecxz
repz
mov
mov
inc
pushf
stc
stc
arpl
inc
mov
int3
adc
xchg
repnz
out
repz
sub
jb
inc
xor
and
jae
jae
and
repnz
mov
repz
xor
dec
push
xor
jae
and
repnz
mov
repz
add
push
inc
xor
and
gs
insb
sbb
repz
xchg
mov
dec
xor
sbb
rcrb
adcl
sub
and
clc
dec
mov
jp
sahf
repnz
ret
aaa
imul
mov
sti
imul
inc
push
loop
ljmp
pop
xor
xchg
add
pushl
int3
add
aaa
xchg
xor
xchg
stos
inc
cmpsl
xchg
sub
test
add
mov
call
aad
and
jae
jns
jle
insb
mov
sub
fstpt
jecxz
repz
popf
data16
xor
jno
xor
add
sub
ss
and
xor
and
mov
popa
bound
jb
fsub
xchg
repnz
mov
repz
add
jb
inc
xor
and
arpl
jae
mul
xlat
mov
ret
add
mov
es
popa
pop
push
push
jnp
pop
faddl
sti
shlb
jmp
notb
jle
pop
adc
or
xor
cmc
cmpsb
mov
mov
mov
mov
xor
add
jb
inc
xor
and
arpl
jae
and
repnz
mov
repz
add
jb
inc
xor
and
arpl
jae
and
lcall
fcomps
or
dec
jmp
inc
cld
add
jge
xlat
mov
mov
jle
sbb
jne
or
pushf
sbb
shl
scas
lahf
lock
push
inc
adc
xor
test
pop
push
daa
scas
cmp
psrad
sbb
jmp
cli
jp
in
movsb
inc
dec
and
test
pop
jecxz
xchg
cmp
in
jp
add
leave
adcl
pop
stos
repz
adc
cli
adc
inc
cltd
cmp
clc
les
repz
repnz
and
pop
fstpl
fstp
and
test
out
adc
add
cmp
ret
addr16
mov
fwait
adc
cltd
ffreep
push
adc
movsl
in
call
xchg
add
jecxz
sub
sbb
lods
pop
pop
sti
out
sbb
pop
cmp
sub
sub
addr16
lds
test
sub
fadd
cltd
aas
mov
iret
cmc
or
idivb
inc
test
xlat
pop
jl
nop
xor
or
inc
jge
ss
sub
cltd
jne
lcall
ret
mov
sbb
andb
dec
mov
cli
sub
lods
in
push
xor
in
sarl
insb
dec
lock
push
pop
jp
les
jns
nop
and
xor
jno
xchg
dec
pop
xor
lcall
je
loop
roll
dec
imul
das
jge
adc
push
gs
adc
pop
outsb
adc
pop
jle
push
in
into
lds
cmpsb
and
out
or
jmp
jp
and
lock
dec
cld
es
push
data16
scas
mov
cmp
sub
and
outsl
shrb
inc
fisttpll
insl
push
test
xor
mov
add
push
jg
mov
push
xor
or
mov
mov
inc
adc
xor
pop
adc
mov
mov
xchg
stos
xchg
mov
stc
xchg
sub
lods
and
cmpsb
or
or
call
adc
fsubrl
adc
movl
lds
movsl
and
imul
and
fwait
pop
xchg
xchg
mov
xchg
sbb
xchg
data16
mov
ljmp
into
mov
iret
sbb
adc
das
xchg
movsl
dec
sahf
stos
out
sahf
loopne
and
into
sbb
push
mov
int
fsubs
xchg
and
xor
andl
sbb
xor
imul
sub
cmc
pop
das
jle
shrl
out
lret
insl
aad
mov
inc
cmp
fidivrl
jb
ja
ljmp
insb
repnz
stos
pop
and
aas
dec
jb
imul
cwtl
pop
inc
push
jnp
mov
mov
lods
push
es
push
outsl
loope
push
xor
mov
popf
jp
mov
fs
cmp
ffree
jg
test
shlb
ja
jle
inc
mov
popf
xchg
add
dec
jg
inc
outsl
icebp
mov
out
jl
pop
lds
mov
cmp
adc
fdivr
mov
adc
stc
inc
arpl
lds
dec
je
push
stos
cli
mov
imul
jle
add
cli
jge
int3
cmc
icebp
repnz
cmp
fsubl
xor
test
outsl
mov
mov
outsl
pop
push
lahf
xchg
daa
pop
dec
test
jmp
adc
add
in
ficoml
fadd
fwait
pop
add
mov
adc
jmp
clc
xchg
divb
mov
and
mov
mov
sbb
cld
pop
mov
fcom
sbb
addr16
pop
sbb
push
mov
sub
dec
xor
jg
adc
add
ljmp
pop
push
xor
and
bound
cmp
outsb
lret
cmp
xchg
lahf
test
inc
mov
jns
push
inc
test
pop
movl
daa
les
popf
sbb
ret
sbb
pop
roll
js
and
and
insl
inc
xchg
popf
jb
dec
add
data16
cmpsb
mov
loope
pop
push
mov
xor
push
mov
push
xchg
push
xchg
les
ja
lods
and
mov
pop
pushf
push
mov
and
jae
add
jmp
lock
gs
lds
in
out
adc
out
in
fwait
lret
sti
xchg
shlb
pop
rorb
sub
sub
dec
fisubrl
lcall
jecxz
push
dec
bswap
das
stc
jg
fadds
inc
add
test
insb
xor
sbb
arpl
mov
jne
dec
movsb
fsubs
enter
rorl
std
ljmp
jg
lds
stc
aaa
xor
loope
xorb
cld
pop
mov
push
mov
test
sub
rcll
push
enter
mov
xchg
aas
fisubl
movsl
jp
xor
add
out
mov
int3
pushf
add
mov
orb
sbbb
push
and
add
leave
push
jmp
popa
or
adc
jb
scas
dec
or
cltd
or
cvtps2pi
fsub
sbb
mov
push
test
xor
fnstsw
pop
pop
dec
popf
or
push
cmp
data16
fwait
dec
fbld
es
add
pusha
mov
mov
mov
std
js
sub
mov
sbb
xor
fiadds
pop
lods
imul
dec
sbb
imul
lock
xor
dec
int3
xorb
test
test
hlt
dec
add
jg
call
mov
ficoms
or
hlt
int3
out
pop
pop
dec
xorb
and
into
jge
addr16
mov
push
pop
dec
sub
sbb
lds
mov
adc
test
add
mov
mov
loope
cli
mov
ficoml
movsb
mov
fnsave
insl
stos
mov
aad
jle
adc
es
mov
xor
push
rcrb
or
jns
jb
in
gs
cmpb
mov
stc
inc
mov
push
inc
push
cmp
mov
inc
mov
mov
sbb
and
sbb
das
gs
push
pop
loope
jns
mov
test
xchg
sarb
or
outsl
out
jmp
mov
adc
or
bswap
cmpb
cs
rolb
xchg
div
pusha
xchg
jo
sahf
rcrb
lahf
and
inc
rol
jmp
leave
out
mov
test
lret
mov
add
mov
test
cwtl
sahf
aas
dec
test
xlat
js
jle
add
xchg
notl
sbb
negb
mov
dec
adc
mov
push
std
hlt
and
jecxz
sbb
outsb
and
add
cmp
popf
and
xchg
cmp
aaa
push
or
sti
xchg
and
call
pop
leave
lods
repnz
std
and
mov
lahf
repz
ja
mov
xchg
repz
xor
push
rcrb
and
sahf
clc
cmp
cs
fsubrl
gs
push
jb
xor
int3
xchg
dec
and
mov
mov
jecxz
mov
sub
in
scas
hlt
sti
sub
lods
push
xchg
sub
xor
jp
push
pop
nop
clc
fcompl
mov
fsubrl
cmp
mov
mov
stos
int
mov
adc
add
mov
pop
or
pop
sbb
inc
or
xchg
and
je
inc
sub
jo
add
and
bnd
ja
lcall
jle
fldenv
or
fst
mov
out
test
out
xor
add
adc
jbe
add
mov
inc
xchg
pop
and
or
jp
es
cmp
sbb
xor
dec
fwait
add
imul
rolb
mov
out
adc
js
xor
or
inc
shrb
push
subl
sbb
sub
sti
cmp
cmp
stos
pop
into
or
pusha
aad
into
xchg
ds
lcall
je
push
and
mov
mov
mov
int3
lods
mov
sbb
aad
dec
mov
pop
xor
xchg
mov
test
and
in
sbb
push
jne
sub
push
mov
inc
hlt
or
lods
shlb
mov
call
pop
in
inc
jo
cmp
clc
mov
cmc
ja
fstpl
add
scas
push
popa
test
ret
xchg
hlt
jecxz
sub
lahf
xor
test
ret
popf
mov
sbb
mov
jmp
hlt
dec
mov
cmp
add
jne
xchg
incl
shlb
pushf
inc
add
mov
je
ss
rolb
filds
cmpl
daa
dec
jns
cmc
je
xor
mov
pop
mov
clc
cmp
std
cmp
push
mov
andl
xchg
sbb
mov
aaa
incb
xor
repnz
add
inc
xor
mov
test
mov
into
mov
sti
fs
daa
sub
rcrl
ds
push
mov
mov
sbbl
push
cmc
push
adc
add
mov
in
push
sub
daa
out
push
hlt
push
jae,pt
imul
adc
and
adc
outsb
push
lahf
cmp
gs
outsl
push
xchg
loopne
hlt
mov
inc
std
push
inc
mov
int3
cmp
cmpsl
mov
inc
out
xchg
divl
jp
clc
xor
in
jne
mov
out
sti
into
hlt
cmp
add
add
inc
xchg
mov
iret
dec
mov
not
adc
jo
test
insb
das
into
mov
mov
push
jp
es
sbb
mov
cmova
adc
in
mov
lds
arpl
jecxz
and
and
adc
je
adc
xor
es
data16
lods
xchg
pop
inc
xor
pop
dec
and
jne
jo
mov
and
mov
test
outsl
sahf
stos
mov
inc
in
daa
push
enter
popa
cmp
addb
test
movsb
pop
pop
fiaddl
jns
cmp
cmp
lods
lods
mov
push
les
cmp
xor
inc
and
addr16
xor
hlt
adc
jl
popf
push
and
add
pop
cmpsb
int3
faddl
xchg
xchg
pop
or
sub
in
movsb
mov
js
out
jo
add
mov
jmp
push
jp,pn
scas
outsl
jo,pn
fnstsw
push
add
mov
adc
add
pcmpgtd
mov
cs
notl
add
sbb
add
lret
and
mov
mov
movsb
out
loopne
xor
ror
cmp
push
sahf
lods
add
shl
mov
fstps
jl
mov
mull
mov
or
andl
shll
das
pop
jle
cmp
hlt
push
mov
test
xlat
ret
test
imul
add
xchg
pusha
aaa
cmpsl
adc
add
loopne
fs
jns
sub
es
cmp
lcall
pop
xor
push
inc
dec
ljmp
pop
jle
xor
enter
shrb
imul
push
sbb
popa
jmp
mov
pop
pushf
xchg
pusha
loop
cmp
mov
dec
push
loope
jbe
rol
push
and
loop
add
out
xor
aas
mov
cmp
inc
adc
add
adc
sbb
push
sti
jp
mov
fwait
dec
or
mov
or
push
cmpsl
lret
ss
movsl
xor
or
dec
dec
push
fmul
ret
mov
mov
shl
aaa
dec
jno
pop
loopne
in
pusha
sub
or
lahf
dec
mov
jle
pop
sbb
inc
adc
mov
inc
inc
in
gs
arpl
scas
sub
adc
es
dec
inc
stos
add
lea
mov
xchg
daa
cmp
add
jo
sahf
movl
jns
imul
movl
cmp
lret
mov
lds
insl
adc
rorb
sub
arpl
cs
xchg
jo
outsl
fwait
sahf
loop
mov
lret
mov
dec
icebp
call
fbld
adcb
dec
int
out
mov
xchg
push
lret
pop
jl
mov
repz
imul
jl
and
jp
mov
cld
in
dec
jg
pop
mov
mov
nop
fadds
stos
sbb
imul
pop
mov
lods
cwtl
std
movsb
cmp
popf
ret
sub
xor
imul
inc
mov
bnd
aam
xchg
xchg
inc
pop
mov
pop
loopne
mov
dec
icebp
movsb
xchg
and
mov
jns
inc
aaa
insl
imul
repz
xlat
jecxz
jmp
cmc
dec
in
flds
dec
mov
xor
test
xlat
test
imul
pop
adc
mov
bound
mov
and
in
mov
push
pop
fistps
fistpll
sahf
sti
cmp
pop
add
in
xor
iret
sub
mov
lea
add
inc
lds
xchg
pop
lea
xchg
idivl
xchg
inc
and
mov
cmpsl
shll
je
jg
leave
data16
mov
inc
ss
cmp
and
imul
adc
jg
cmc
ja
in
sub
repnz
les
adc
pop
in
push
iret
cld
test
or
pushf
inc
lea
sahf
push
lcall
in
fs
mov
add
es
mov
incl
fidivs
jecxz
xor
clc
xor
mov
push
xchg
mov
jmp
dec
or
fwait
push
push
xchg
jge
in
jo
dec
xor
pop
pop
cmp
mov
sbb
jnp
and
dec
mov
ret
mov
pusha
mov
icebp
dec
jge
fs
xchg
mov
lea
sbb
into
mov
and
cld
adc
mov
mov
out
nopl
sarl
sarl
mov
aaa
cmc
adc
je
inc
sbb
adc
fsubr
pop
arpl
lret
sbb
push
insb
xchg
xorb
imull
ljmp
out
gs
insl
mov
add
mov
popf
cmp
xchg
dec
pop
push
movd
dec
ja
push
lret
xor
jns
pushf
repz
sub
fisubrs
pop
or
outsl
mov
adc
stos
les
shlb
jmp
rolb
fdivl
lahf
call
stos
call
test
lods
jno
pop
mov
inc
sbb
push
aam
push
cmp
sbb
test
jmp
aaa
xchg
ret
and
outsb
push
lock
loopne
mov
inc
shl
and
in
jno
lea
mov
aad
and
lock
xor
ret
sub
inc
fcoms
and
lea
jne
in
xor
pop
ret
ret
xchg
flds
xchg
jecxz
adc
shrb
sahf
dec
testl
xchg
stos
sub
push
fists
xchg
jne
adc
cwtl
movsl
mov
fsubrl
xchg
call
movsl
xchg
jb
jns
movsl
mov
lahf
ja,pn
xor
mov
inc
mov
add
and
dec
es
xchg
xor
mov
or
and
pop
mov
push
out
scas
fisubl
pop
jg
cmpsl
cli
pop
dec
xor
xchg
or
rol
mov
repnz
fucomi
inc
jg
dec
mov
xchg
cmc
ret
and
repz
cmc
mov
pop
clc
cltd
iret
mov
movsb
push
repz
out
inc
push
lock
jg
lcall
add
mov
cmp
lcall
loopnew
out
push
cmp
pop
repz
cmp
xor
xchg
cwtl
imul
mov
in
sahf
add
lret
xchg
mov
dec
pop
push
and
inc
lea
pop
lahf
lahf
jo
dec
pusha
or
or
popa
fdivs
pop
mov
adc
pop
pop
mov
jb
mov
adc
shl
pop
dec
push
jo
inc
xchg
xor
inc
push
adc
jnp
jae
xor
dec
cs
xchg
cli
jo
push
lock
divl
mov
cmp
adc
fs
lahf
and
ret
jbe
daa
outsl
cmpl
dec
mov
aaa
add
ret
lcall
dec
pusha
inc
data16
add
movsb
sub
ss
mov
je
dec
call
pop
sbb
mov
shlb
add
in
loopne
or
inc
jbe
mov
jg
jnp
clc
add
mov
jle
and
fcompl
adc
mov
lahf
jbe
sub
testl
aam
mov
add
or
addb
push
cbtw
inc
xor
sbb
inc
dec
mov
mov
popf
sub
add
mov
xchg
add
popf
incl
sub
pop
mov
pop
xor
dec
outsl
jl
hlt
ja
push
subl
imul
xor
lret
push
pop
ds
mov
scas
xor
out
xorl
push
int
mov
ret
nop
pop
dec
lret
jle
sbb
xchg
lea
insl
jbe
jl
mov
test
cmpsl
sub
mov
mov
call
loopne
push
das
sbb
inc
mov
xorb
test
xor
enter
mov
adc
fldt
xchg
cwtl
mov
insb
loop
mov
jl
or
mov
nop
stc
cld
mov
push
addr16
pop
rcrb
jnp
mov
xchg
adc
fistl
add
fwait
xor
sbb
xor
imul
int
into
test
mov
fwait
xor
movsb
jae
aam
mov
or
les
out
enter
mov
mov
jl
aad
pushf
cs
xchg
aad
push
xchg
out
fs
jl
fsubrl
cmp
mov
mov
jp
fmull
cmp
jmp
daa
in
into
imul
stos
mov
jle
cmc
push
push
xchg
xchg
xor
jl
xchg
sbb
lret
cmp
pop
imul
sub
insb
inc
pop
out
cmp
out
and
and
dec
jle
out
cmp
mov
push
popa
or
hlt
stos
ss
inc
les
data16
ret
leave
push
outsb
cmpsl
lret
lahf
adc
and
fwait
addr16
xor
fdivr
dec
out
movsb
and
or
fwait
dec
mov
pusha
xlat
arpl
xchg
adc
clc
adc
dec
sbb
enter
test
ret
jle
ss
idivb
pop
adc
outsb
insl
cli
mov
adc
inc
dec
lcall
mov
movb
or
outsl
inc
ds
xor
sub
das
int3
pop
lock
jge
lcall
push
jmp
inc
add
fildll
jp
repnz
push
pop
mov
rol
lret
ret
shlb
sbb
mov
add
nop
pushf
clc
data16
clc
cs
sbb
jne
fidivl
hlt
subb
int3
cmpsb
inc
scas
mov
mov
inc
into
filds
adc
pop
mov
or
or
test
mov
pop
mov
xchg
test
adc
mov
cld
sub
xorb
sarb
mov
or
xchg
ja
mov
jle
inc
cmp
inc
fiadds
mov
js
ja
sub
pushf
mov
je
push
mov
mov
rorb
mov
mov
push
jno
xor
shlb
int
mov
int3
sub
pop
mov
and
lds
sub
adc
pop
mov
movsl
jmp
push
leave
into
ret
push
jmp
std
fld
mov
dec
clc
xchg
fwait
jnp
out
jg
inc
sbbb
shrb
xlat
sub
jp
inc
sub
aas
arpl
daa
aaa
fidivl
repz
jmp
mov
jl
mov
cli
in
shl
jecxz
int3
xchg
pop
shll
repz
addr16
dec
add
jae
shl
mov
pop
test
sub
sbb
imul
mov
into
xlat
cmp
loope
xlat
jns,pt
mov
cltd
stos
addr16
aad
dec
mov
adc
jecxz
popa
push
mov
cwtl
add
test
lahf
xchg
cmc
adc
mov
mov
push
cltd
test
xor
fstps
and
cld
ret
inc
mov
adc
xchg
popf
mov
mov
rorb
cmp
mov
imul
mov
xchg
mov
fstps
xorl
xchg
xor
jns
mov
mov
cmp
mov
ret
mov
repz
add
jb
inc
xor
and
arpl
jae
and
repnz
mov
repz
add
jb
inc
xor
and
arpl
jae
and
repnz
mov
repz
add
jb
inc
xor
and
arpl
jb
and
repnz
mov
repz
add
fmuls
stos
fcmovne
pushf
std
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cltd
stos
mov
adc
mov
fistpl
xchg
or
cmp
sub
pop
push
jp
pop
imul
mov
sti
stc
lret
jmp
cmp
or
sbb
dec
imul
mov
sti
stc
lret
jmp
sbb
sub
sub
pop
sub
out
lret
mov
push
inc
adc
enter
test
mov
call
push
sub
stos
in
push
push
es
leave
jbe
inc
adc
in
mov
hlt
push
cmpsb
jnp
and
repz
leave
mov
fcompl
mov
sbb
sub
cmp
xor
sbb
imul
ljmp
xchg
xlat
mov
int
sahf
cmpsb
jnp
fwait
cli
ds
pop
imul
je
xchg
andb
jp
lods
fcomi
aam
cs
cmp
mov
jp
and
je
jmp
aas
jle
in
jp
sub
jmp
mov
fldpi
leave
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
fldcw
scas
sbb
and
pop
push
imul
cmp
cmp
ds
in
xlat
fadd
test
mov
jl
pop
dec
cmp
pop
push
daa
in
adc
ljmp
xchg
fxch
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
mov
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
in
pop
daa
push
lret
js
pushf
push
aas
outsb
cmp
and
fisttpll
cmp
test
enter
iret
int3
mov
into
adc
xlat
push
push
mov
dec
xchg
xchg
test
je
in
inc
shl
inc
out
jle
je
sub
inc
mov
jp
xchg
mov
jg
inc
lods
mov
add
pushf
jae
jmp
xchg
xor
out
mov
dec
adc
cld
xor
jae
pop
popf
adc
test
mov
shr
push
frstor
cs
lea
movsl
push
sarb
sbb
mov
dec
inc
fadds
int
outsb
push
pop
xchg
pop
pushf
std
lods
rol
cmp
push
sub
xchg
cmpsl
dec
sbb
add
scas
out
decb
rclb
mov
loop
loop
sbb
lcall
jb
push
and
lret
and
out
mov
imul
movsl
fsubrp
pop
movsb
iret
cmp
mov
jmp
pop
cs
loope
sub
addb
add
pop
add
test
mov
stos
xchg
in
das
sub
dec
xor
loop
nopl
jecxz
inc
mov
inc
sarb
and
xchg
gs
lret
sbb
mov
mov
jp
lcall
push
test
movsb
inc
push
sar
or
add
inc
es
xchg
inc
add
or
sub
adc
es
mov
loop
jns,pn
xor
call
sbbl
cmp
les
jno
cmp
call
es
ljmp
adc
cli
cmp
out
xchg
and
or
dec
insl
cli
lods
and
cld
xchg
icebp
and
xor
addb
mov
mov
or
outsl
repz
jl
lds
inc
icebp
xchg
dec
sbb
or
test
shll
add
mov
pop
add
cmp
leave
popf
push
mov
xchg
xchg
sbb
mov
pop
sbb
js
mov
fs
test
loope
or
mov
cli
icebp
cmp
loop
pop
jmp
adc
sbb
adc
xor
outsb
addl
jno
jp
xor
rclb
inc
cmp
pop
push
pop
fists
enter
lods
pop
jb
imul
adc
sub
xor
imul
xchg
repz
movsb
inc
js
cmp
sub
sub
jle
icebp
adc
loop
imull
popf
adc
and
add
lods
cld
mov
jbe
cmc
pop
push
test
push
xchg
loop
pop
out
out
fists
fldt
iret
inc
xchg
aas
cltd
mov
push
inc
iret
jle
lret
imul
enter
add
dec
inc
adc
xchg
mov
push
mov
adc
fadds
mov
adc
cmpsl
pop
lea
js
filds
out
stos
cmp
pop
lret
push
inc
loop
stos
jnp
mov
and
push
movsb
xor
push
nop
test
int
lods
inc
push
pop
mov
movups
mov
dec
shr
fidivs
aam
jle
lret
cwtl
sbb
cmpsb
scas
aaa
stc
pop
xchg
int
mov
sbb
pushf
out
mov
stos
jecxz
outsb
lret
xchg
sub
lret
fld1
or
notl
mov
cli
mov
lods
repz
pushf
aas
jl
cwtl
cmp
es
xor
gs
jmp
faddl
ficoms
and
fs
in
and
mov
addb
inc
lods
aad
adc
or
mov
jg
imul
ffree
ljmp
outsl
dec
mov
add
add
adc
movsl
dec
cmp
or
in
jl
push
sbb
push
iret
xor
popf
lahf
je
xchg
and
mov
and
jg
xchg
sbb
inc
add
cmpb
mov
push
jecxz
dec
movsb
xchg
arpl
mov
lods
cmc
jmp
int
pop
in
addr16
mov
sbb
stc
outsl
cmc
jno
pop
or
push
fsubr
pop
push
push
sub
ja
pop
pop
xor
cmovb
testb
or
gs
ja
sub
lret
shrl
imul
addr16
mov
push
mov
fdivl
mov
sbb
cwtl
dec
jnp
out
push
adc
lock
lret
jecxz
ret
sti
sarb
sbb
pop
mov
push
stos
mov
jmp
fwait
int3
mov
and
mov
jnp
dec
aaa
fnstenv
popa
out
divb
push
les
mov
je
fistpll
fimull
cmpsl
jmp
dec
mov
push
xchg
hlt
xchg
insb
or
xchg
mov
test
mov
pusha
mov
outsb
dec
cvtpi2ps
push
negb
mov
dec
test
in
mov
sub
add
inc
idivb
xchg
pop
xor
int3
cmp
incb
addl
iret
sub
movsl
lret
test
inc
fiaddl
adc
js
clc
test
or
xor
mov
and
inc
out
out
andb
jne
imul
mov
jo
out
enter
loopne
cmp
add
pop
cli
or
into
in
sub
jbe
mov
imul
jnp
cmpsl
push
add
mov
xchg
mov
xor
insb
dec
pop
imul
add
test
inc
jae
sub
and
in
es
addr16
loopne
add
fildl
scas
mov
jecxz
in
inc
insl
arpl
mov
and
push
mov
add
scas
xchg
in
add
dec
sarb
call
in
lock
inc
push
mov
cmp
leave
mov
out
mov
adc
inc
jmp
jmp
mov
jmp
cmp
out
mov
dec
arpl
dec
arpl
inc
pop
stc
sub
jb
scas
jnp
jp
pop
inc
addr16
mov
insb
cmp
cltd
fwait
in
mov
shll
mov
fwait
lret
pop
pop
das
xlat
scas
aam
test
mov
push
lcall
arpl
adc
push
pop
mov
es
mov
sub
out
pushw
cmp
loop
inc
pop
enter
and
inc
call
sub
push
mov
xchg
jns
shrl
out
addr16
ret
push
mov
cli
sti
pusha
inc
lret
or
dec
pop
inc
cmc
sbb
push
inc
add
cmp
jl
cli
push
push
out
jl
popf
icebp
ficompl
cmp
xorl
test
decb
mov
cmp
popf
in
imul
mov
stc
mov
xor
shl
mov
out
jb
in
push
hlt
mov
push
icebp
push
xorl
inc
pusha
pusha
mov
adc
add
imul
inc
pop
mov
mov
inc
sub
cmp
aam
sub
pop
lret
jb
xchg
bound
cltd
pop
jl
dec
mov
sahf
xchg
cmpsb
mov
mov
pop
or
lods
sub
int
aas
sbbb
push
cwtl
jae
sbbb
fdivs
mov
int3
ljmp
push
and
bound
pop
or
jmp
xchg
rolb
xor
push
push
pop
cmp
xor
dec
mov
fistl
add
leave
out
test
push
mov
cmp
mov
sahf
loopne
push
inc
rorl
stc
sti
or
ds
mov
inc
fnstsw
arpl
insb
addl
fs
jg
mov
je
shlb
lahf
or
in
push
sub
aad
rcll
cmpsl
shr
lods
bound
lahf
and
stos
mov
ljmp
in
roll
push
shr
sbb
std
xor
xchg
and
mov
sbb
scas
adc
add
incb
push
sub
movsl
imul
mov
xorb
in
je
sahf
dec
lods
mov
mov
jmp
in
fsubr
cmp
outsb
push
repz
push
xor
pop
cmp
mov
adc
imul
or
stos
mov
cld
loope
cld
adcl
std
sub
icebp
mov
mov
lcall
jge
jo
out
lds
jge
fiaddl
rcll
pushf
aaa
call
les
mov
movsb
mov
xor
dec
mov
mov
or
movsb
hlt
fisttps
ja
cmp
aad
jnp
int
add
cmp
pop
xchg
cltd
pop
mov
xchg
xchg
mov
popf
jp
fildl
cmp
xrelease
jns
and
sbb
cmpsb
mov
andl
das
outsb
dec
stos
sbb
sbb
mov
or
pushf
cli
jl
std
test
mov
lcall
test
insb
fdivrs
insl
repz
xchg
lahf
sbb
inc
push
call
inc
and
aad
adc
dec
push
adcb
pushf
dec
cld
sub
divl
loopne
icebp
cmp
imul
and
roll
in
cmp
inc
movsl
xor
decb
lahf
call
mov
scas
fsts
xor
jg
and
xor
pop
jne
mov
std
mov
dec
dec
mov
and
or
sub
shlb
fisubs
xor
inc
rcrb
popa
push
jl
push
xor
mov
out
cmpsl
xlat
pop
jmp
cld
xor
jg
pushf
xchg
rcrb
sub
dec
in
orb
lock
fs
inc
xor
sub
mov
mov
icebp
jl
cltd
push
repnz
jge
or
push
dec
pop
mov
mov
ret
dec
add
lods
aas
fistl
sbb
mov
xor
mov
es
das
les
jns,pt
cmp
loop
add
fdivrl
pop
mov
cli
jl
popa
loop
out
push
mov
fiadds
mov
scas
dec
inc
add
notl
out
mov
adc
cwtl
aam
and
inc
inc
scas
sarb
xor
daa
std
xor
or
aam
insl
lcall
in
xchg
clc
bound
imulb
push
cmp
subl
jns
movl
data16
loopne
pusha
scas
jecxz
xchg
outsl
insl
inc
push
mov
mov
push
je
sub
mov
scas
repnz
pop
sahf
mov
nop
pusha
pop
outsb
mov
in
or
mov
fwait
scas
cs
dec
sub
loop
shrl
lods
aam
push
push
mov
pop
std
mov
sbb
xchg
adc
and
mov
pushf
inc
or
jo
imul
mov
in
faddp
pop
jae
push
mov
and
scas
stos
and
jb
mov
sub
in
sbb
jo
loopne
mov
pop
cmp
mov
dec
dec
in
inc
xor
cwtl
arpl
stc
repz
subb
cli
push
test
mov
and
dec
adc
xchg
cs
ss
call
ss
scas
pusha
dec
aas
hlt
das
mov
repz
mov
ja
nop
stc
mov
retw
imul
cmc
arpl
or
mov
ficompl
clc
ja
push
out
add
inc
or
jo
mov
icebp
scas
hlt
adc
xlat
or
push
pop
or
xchg
xchg
adc
pop
es
pop
mov
xchg
push
out
imul
and
dec
jbe
inc
out
repnz
loop
fisttps
fs
addl
push
cmpsb
stos
xor
mov
fs
xchg
lock
outsl
fs
hlt
aam
mov
dec
jb
pop
push
sbb
jb
or
sar
jle
mov
dec
ds
jae
nop
inc
add
nop
jns
mov
push
mov
test
sub
loop
jp
je
ss
fiadds
imul
xor
gs
cmpsl
out
lcall
xor
jge
std
cmpsl
adc
push
out
imul
mov
stos
repnz
jmp
je
xor
andl
imul
ret
fdivl
das
int3
mov
xchg
mov
xlat
mov
arpl
add
add
ret
inc
sub
adc
push
mov
dec
push
sub
cmp
hlt
xor
jle
andb
stos
mov
jns
xlat
mov
repz
test
mov
aas
jge
iret
mov
sbb
fwait
rorb
loop
loopne
roll
cltd
scas
xchg
outsb
pop
xchg
fwait
imul
mov
lock
ss
loope
sbbl
cmp
mov
push
cwtl
out
add
int3
mov
ret
ficoml
add
ret
jne
xchg
mov
lock
cld
mov
sbb
mov
add
mov
sbb
inc
sub
pop
mov
stos
addr16
in
cld
shl
andb
testb
pushf
xchg
fstpt
xor
out
xlat
xor
scas
in
pop
mov
sbb
or
adc
or
xchg
xor
insl
aas
mov
dec
xor
scas
xchg
scas
ja
out
xchg
mov
sub
xorb
pop
pushf
mov
nop
sbb
xor
cmpsb
or
sbb
mov
and
addl
mov
fstps
xchg
mov
jmp
mov
lods
add
sbbl
pusha
mov
rorl
or
jmp
add
in
push
daa
dec
cmc
and
and
or
and
into
data16
fcoms
ljmp
add
and
lret
lahf
xchg
fstl
and
insb
stc
mov
inc
mov
push
aam
dec
push
push
inc
add
das
jns
jne
add
sbb
out
mov
mov
int3
fcoms
mov
mov
test
adc
xacquire
push
rcll
xchg
js
cmp
jecxz
jne
cld
push
imul
call
jo
push
push
push
jns
cmpsb
jns
mov
rcr
rol
jecxz
or
xchg
pop
shrb
lahf
xor
aad
mov
in
cmp
fisttpll
or
nop
scas
lret
jae
mov
out
movsl
imul
or
or
sub
mov
stc
fdiv
out
push
loope
xlat
cli
jp
sbb
jno
idivl
jge
xchg
insl
xorb
sub
iret
xchg
pop
jae
sti
sahf
push
and
cmp
ret
mov
mov
push
xor
inc
xor
in
sbb
jle
jp
aad
push
pop
popl
test
loop
pop
adc
mov
push
lods
in
movl
out
jbe
adc
test
adc
add
ret
js
jne
sub
xor
add
push
divl
push
aaa
xchg
clc
cmp
pop
aad
add
sbb
into
clc
popa
aad
pop
jbe
sub
add
add
mov
stc
add
pop
gs
adc
add
pop
adc
cwtl
cmp
lods
es
mov
mov
scas
popa
adc
or
dec
push
dec
ja
jae
test
outsl
xor
inc
sar
jbe
bound
mov
push
addr16
into
xchg
out
inc
into
and
jns
inc
push
cltd
cltd
fnstsw
roll
idivb
mov
jb
scas
xchg
mov
sub
add
sbb
xchg
push
cmp
inc
xchg
jecxz
xlat
lock
cli
imul
ljmp
jmp
xor
pop
dec
mov
in
pop
js
mov
xor
add
jmp
popa
xchg
aam
inc
cmp
sub
dec
add
fcomp
sub
push
popa
mov
mov
xchg
mov
clc
pop
fbld
rorl
setno
push
pop
lahf
pop
out
shr
push
mov
add
jecxz
pop
xlat
loop
jns
out
mov
xchg
and
dec
add
mov
or
lock
dec
mov
xchg
rorb
jl
daa
mov
xchg
cmp
adc
adc
add
imul
jmp
adc
mov
pop
ret
loop
push
jg
das
mov
sub
xchg
mov
je
xchg
add
sbb
sub
add
xchg
cmp
dec
stc
insb
inc
jecxz
jge
mov
push
sub
cltd
or
cwtl
add
std
push
out
scas
inc
repz
adc
cld
jge
inc
adc
and
inc
lret
leave
bound
lcall
adc
adc
mov
cmp
jno
sbb
arpl
addr16
xor
cmpsl
aaa
mov
push
cmpsb
mov
int3
xor
insl
pop
push
sub
int
adcl
loopne
sbb
jno
pop
cli
push
push
lret
xchg
push
sbb
add
lods
push
cmc
pop
and
int3
shld
outsb
insl
fsubrl
pop
add
add
adc
cmpsl
mov
fcmovb
xchg
scas
pop
je
adc
xchg
inc
fucomip
inc
mov
pop
add
icebp
dec
adc
push
shrb
adc
push
lea
xor
push
cmp
jl
outsl
les
lahf
loope
xchg
and
nop
cs
inc
pop
mov
cmpsl
stos
lods
xchg
push
inc
mov
adc
jmp
sub
scas
ds
jg
push
rolb
decl
mov
xchg
adc
fildl
dec
xchg
mov
call
jp
ret
aas
stos
mov
cmpsl
ds
sbb
ja
jecxz
push
cmp
stos
mov
sbb
addr16
push
push
mov
and
dec
sbb
insb
leave
aaa
lret
sti
jecxz
sub
sub
fwait
jo
sbb
insl
shrb
daa
dec
cmp
dec
xor
out
mov
ljmp
scas
push
pop
jno
popf
mov
pop
and
dec
dec
movsb
add
xchg
xchg
in
mov
sub
push
jge
pusha
jb
outsb
pop
xor
cmc
call
pop
cmp
lods
cli
xchg
mov
nop
push
aam
js
repz
js
pop
pop
test
or
jmp
add
int
stos
pop
sbb
dec
fdivp
fcoms
and
dec
jp
adcb
arpl
mov
jecxz
cmp
ja
mov
leave
nop
pop
adc
lahf
sbb
sub
pop
pop
lret
in
ret
jbe
idivl
jb
cmc
ljmp
fmulp
dec
sbb
sbb
adc
ja
adc
inc
cmp
jno
adc
sbb
mov
pop
mov
dec
push
jb
mov
cmpsl
mov
in
clc
dec
vmwrite
push
movsl
fstps
xor
fs
mov
jp
sub
fmul
shlb
cmc
mulb
lret
inc
rcr
jbe
and
mov
mull
inc
out
addr16
call
loop
imul
jae
mov
loope
loope
push
lcall
out
sub
mov
pop
mov
sub
fildll
jns
loope
cmpsl
or
xor
mov
dec
les
mov
mov
fwait
repnz
daa
mov
mov
add
jl
xchg
sti
in
popl
out
std
rcll
push
sub
push
fwait
fsubl
scas
dec
pop
cmp
push
xchg
clc
sbb
xor
push
jmp
add
pushf
push
mov
hlt
xchg
add
outsb
inc
addr16
jo
into
or
ss
mov
pop
shlb
xlat
data16
ret
lods
out
sub
xor
jle
adc
xchg
int
stc
dec
sub
sub
stos
gs
gs
cmpb
mov
pop
stos
dec
cmp
adc
rcrb
nop
movb
lret
fcoms
test
sub
outsl
cmp
xchg
jge
insb
mov
push
lods
mov
mov
int3
sbb
es
in
inc
pop
js
add
push
mov
imul
repnz
mov
fxch
pop
xchg
scas
out
cmp
inc
lods
test
and
jno
call
push
idivl
imul
dec
cmc
test
pusha
rcll
outsb
arpl
mov
xchg
mov
popa
sbb
fidivrs
jns
push
sbb
push
push
mov
stos
iret
sarb
sbb
sahf
add
xlat
and
test
scas
fwait
sbb
ss
jle
insb
add
cmp
aas
inc
add
cmp
sub
sbb
and
cmp
imul
sti
cmp
scas
mov
mov
xchg
ficoms
sbb
cltd
stos
xor
icebp
mov
fldpi
leave
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
mov
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
mov
sti
stc
lret
imul
cmp
sub
pop
imul
dec
imul
mov
sti
stc
lret
jmp
xchg
xchg
or
insb
sub
cmp
cmp
push
adc
or
js
insb
data16
mov
daa
std
xor
enter
sub
sbb
or
pop
xchg
data16
ja
inc
nop
pop
mov
pop
call
sahf
out
out
filds
scas
and
mov
das
cli
daa
stos
pop
mov
inc
lods
mov
dec
mov
xchg
inc
fistl
loope
mov
fimull
arpl
and
in
daa
andl
jmp
insb
imul
insl
mov
add
pop
push
mov
in
daa
mov
push
call
jno
inc
xchg
clc
fs
xor
xor
fidivl
or
adc
or
cmp
sub
sbb
or
mov
js
xchg
jbe
jb
test
fsubr
aaa
mov
pop
mov
out
jp
dec
in
negl
scas
imul
fwait
mov
inc
js
js
xchg
aaa
std
clc
mov
inc
pop
xlat
subb
pop
aaa
mov
je
lahf
dec
cwtl
jmp
clc
cmp
loop
nop
lods
pop
xor
mov
insb
xlat
or
pop
mov
jle
outsl
add
dec
mov
les
push
sbb
cmp
fs
roll
addr16
sbb
xor
xor
daa
mov
jp
mov
outsb
test
cmpsl
fs
sub
jnp
fsts
fldl
push
mov
jno
jae
orb
stos
je
fs
xor
push
addr16
push
mov
clc
aaa
call
out
imull
sbb
or
pop
xchg
dec
addr16
push
mov
clc
aaa
call
out
fdivrs
movsb
out
pop
aad
test
push
ja
divl
shrb
push
arpl
cmpb
push
arpl
sbb
in
pop
subb
ror
cmp
mov
lcall
adc
or
stos
ljmp
sbb
mov
nop
stc
push
lods
mov
stos
lret
xchg
fstl
fidivrs
jno
fistps
mov
ret
ss
jecxz
mov
sbb
call
fldenv
test
adc
jp
jmp
xor
daa
dec
pop
and
in
into
xor
push
xchg
or
shll
adc
andb
lods
scas
xchg
or
fs
push
mov
sbb
sub
xor
push
rclb
mov
push
movsl
push
ret
cmp
mov
push
xlat
mov
in
add
jmp
pop
mov
cmp
aam
dec
stc
dec
sub
je
aam
add
xchg
xor
mov
pop
or
call
mov
jb
xor
inc
fisubl
xchg
sbb
push
outsb
push
jle
addr16
push
inc
cmp
lods
pop
push
test
js
sarl
les
cmpsl
push
stc
daa
pushf
aad
mov
out
insl
jp
mov
adc
sbb
mov
cli
in
dec
iret
bound
ja
add
jno
int
xor
lret
loop
jmp
out
orb
jmp
int3
leave
adc
jp
cld
adc
test
mov
sahf
adc
inc
cwtl
in
push
lds
inc
stc
push
xor
frstor
inc
jp
cmp
lcall
aaa
arpl
mov
push
int3
test
lret
sbb
stc
roll
aas
test
pop
inc
sbb
pop
pop
sub
sub
jmp
es
mov
inc
sbb
adc
mov
fwait
xchg
fcompl
mov
dec
xchg
in
call
mov
into
movsl
js
xor
push
or
jb
test
je
in
ret
jmp
mov
imul
inc
add
sub
pusha
sub
mov
pop
sbb
std
cmp
rolb
mov
test
arpl
cltd
pop
jge
pop
sub
stos
jo
bound
cmp
hlt
bswap
insl
dec
lds
cmp
std
aas
pop
push
hlt
frstor
inc
fs
cmp
fwait
popa
jmp
jle
xchg
pop
sti
lock
sbb
daa
lds
sub
and
pop
div
movsl
mov
jae
xlat
jae
pop
add
push
xchg
add
push
scas
or
add
addl
in
loope
adc
mov
jns
xchg
and
mov
sbb
loopne
xor
cmc
stc
push
out
cmp
pop
out
push
imul
ja
cmp
icebp
adc
xchg
push
xor
pop
pop
popf
or
ljmp
and
mov
mov
loop
lea
mov
testl
jmp
dec
enter
xchg
gs
xchg
fcompl
mov
in
scas
lds
inc
jae
fisttps
sbb
fs
cld
fbld
fs
stc
js
int
mov
and
push
push
out
arpl
mov
mov
push
sahf
add
loop
mov
and
mov
mov
xchg
je
and
bound
fsubrl
rcrl
jno
cmp
cmc
lods
enter
xchg
xchg
dec
fstl
addr16
addr16
inc
decl
nop
incb
pop
loop
jae
int3
add
fdivl
xor
jns
arpl
and
cmpsl
mov
mov
cmp
ss
inc
cmpsl
pushf
mov
adc
js
lret
popf
jnp
and
cmc
not
pushf
rcll
cltd
sub
icebp
cmp
or
call
adc
push
cmc
aam
add
pop
cmp
mov
sub
pop
or
jecxz
mov
inc
jecxz
or
dec
mov
sahf
dec
cmpsl
mov
pop
xchg
testl
jae
ret
fsubrl
xchg
jmp
enter
arpl
ret
cmpsl
cs
aam
nop
pop
pop
dec
test
dec
popa
cwtl
dec
mov
sub
aaa
sub
aad
stos
sbb
mov
pop
pop
add
mov
movsl
daa
cmpsb
mov
call
sub
loope
std
out
insb
mov
mov
pusha
dec
pop
fcompl
shll
in
pusha
push
xchg
in
test
test
sbb
adcl
mov
cmp
addr16
lret
sbb
fistpl
std
jns
pop
das
std
jnp,pt
rolb
or
gs
jmp
rclb
sub
xor
scas
jle
lcall
in
orl
jns
in
or
leave
mov
push
mov
and
loopne
sbb
cmp
test
std
rcl
mov
jg
and
test
mov
je
subl
dec
push
fisttps
out
gs
pop
push
sbb
in
ss
loope
push
xchg
loope
xor
push
sub
lret
jo
pop
sar
mul
dec
inc
shrl
fmuls
mov
jge
stos
fcomps
pop
or
cmc
loope
ret
dec
xchg
popa
inc
popa
sahf
clc
andl
inc
jmp
cmp
jg,pn
push
and
pushf
jnp
test
mov
cmp
sub
pop
cwtl
pusha
cli
nop
mov
push
jne
add
inc
les
pop
mov
add
cmc
shl
rol
jno
pop
repz
pop
aam
imul
pop
stos
jne
cmpsb
mov
js
or
xchg
xor
xor
dec
dec
ret
clc
test
ficoms
push
fildll
mov
dec
ss
adc
inc
js
in
fistpll
jg
mov
jb
mov
xor
jecxz
in
nop
fsubp
mov
outsb
cs
xchg
lods
dec
sub
leave
lock
xchg
xchg
cmp
dec
out
or
push
xchg
inc
mov
mov
dec
add
in
dec
gs
or
xor
mov
iret
call
add
fbld
add
mov
pop
bnd
in
jecxz
stc
enter
movsb
dec
fcmovu
add
repnz
adc
mov
scas
mov
add
mov
leave
sub
lods
xor
add
sbb
testl
cmp
iret
or
and
rcrl
mov
hlt
hlt
sbb
shlb
jg
and
cmp
sbb
lods
out
jg
scas
lahf
xchg
jmp
ljmp
daa
out
add
or
ljmp
ja
xor
cmp
bound
dec
std
cwtl
push
dec
popf
push
or
jb
pop
and
push
mov
mov
fs
stc
or
lcall
lds
sbb
xchg
xor
jb
out
xor
mov
adc
and
and
movsl
into
inc
stos
aas
and
fiadds
ficoms
nop
out
add
inc
fidivrs
rcll
cli
inc
aam
mov
fdivp
push
xor
outsb
sub
cmp
xchg
imul
xchg
test
sbb
jno
daa
adc
add
mov
dec
nop
ret
add
add
outsl
aad
daa
bound
and
in
sbb
push
js
mulb
adc
daa
jne
sbb
add
fmuls
fwait
adc
repnz
je
fsub
and
dec
rolb
pushf
push
fcomps
inc
not
rol
inc
aam
shlb
ficoms
inc
or
push
add
add
aam
idivb
andb
mov
sub
jg
orl
ds
pop
jns
ja
data16
imul
push
xor
or
insl
mov
push
js
xchg
jo
jle
jno
ud1
mov
inc
jnp
xchg
icebp
loopne
push
subl
and
inc
cmp
addr16
inc
out
fdivl
pop
into
repz
data16
jno
push
popf
out
or
notl
sbb
pop
mov
mov
pop
cmp
in
push
shll
rcl
movsl
cld
or
push
stos
stos
repz
jnp
scas
leave
in
and
sub
lods
aaa
sbb
or
pop
cmpsl
mov
aas
lds
shr
cltd
mov
movsl
mov
call
mov
shl
mov
dec
fisubs
ljmp
and
ffreep
mov
ss
jl
cwtl
cmpsl
xchg
fstp
mov
cmovp
rorl
or
xor
jge
leave
xor
leave
add
mov
notb
xchg
add
into
mov
ds
jno
add
jo
push
xlat
push
xchg
aaa
sub
and
jle
and
fildl
inc
insl
shrl
repnz
sub
mov
sti
adc
lahf
and
mov
push
fiaddl
xchg
sbb
mov
jno
xor
shrl
cltd
adc
jecxz
fidivl
test
sub
std
sub
loop
pop
andb
je
mov
mov
jmp
push
xor
pusha
clc
cli
inc
fwait
aad
cmc
mov
inc
ja
push
pop
xchg
test
sarb
std
sub
rolb
jg
jmp
cmp
push
jp
sti
xor
pop
and
roll
pop
push
shll
out
std
ret
push
imul
cmp
fisttpl
fdivl
and
mov
adc
cli
movsl
push
sbb
repnz
out
xchg
idiv
int
push
lahf
pop
push
loope
mov
ret
in
sar
xchg
pop
and
in
adc
adc
leave
js
and
mov
inc
push
jne
sub
or
jae
pop
inc
mov
mov
push
mov
cli
iret
fucomip
gs
push
pop
dec
dec
lods
push
and
imul
mov
out
aad
ret
mov
pop
xchg
mov
mov
sub
adc
lret
loopne
adc
jp
inc
daa
js
mov
adc
lock
sbb
xor
fcoms
and
pop
mov
faddl
loopne
jbe
adc
sbb
xchg
xchg
dec
cmpsb
fisubl
icebp
mov
loop
in
and
fstpt
cmp
add
in
js
std
pop
xor
sbb
loop
jp
adc
in
lock
jns
clc
popa
xchg
loope
fistpll
inc
xor
jo
icebp
lods
call
push
add
into
and
sbb
movsb
enter
ret
pop
sub
sbbl
push
xorb
bound
cltd
mov
out
dec
sub
jecxz
je
and
sbb
aad
push
adc
imul
xor
js
push
insb
mov
loopne
add
push
and
popa
or
adc
mov
push
mov
or
and
cmp
pop
push
lods
or
cmpsb
ret
jg
cmp
sbb
leave
cmpsb
pop
cmp
pop
in
sahf
rcl
mov
leave
fisttpl
lock
maskmovq
negl
jns
bound
cs
mov
es
push
dec
rolb
dec
xchg
pop
dec
movsl
aam
cs
ss
rol
mov
inc
add
push
outsl
mov
cmpb
jb
loope
dec
push
adc
rorb
adc
ret
leavew
lcall
jmp
and
arpl
adc
mov
mov
subl
pop
fsubr
sub
xor
scas
outsb
sbb
int
cmp
push
and
movsl
lret
cmc
mov
incl
stos
inc
das
jge
repnz
stos
orb
jb
xchg
ss
nop
out
jg
out
adc
inc
aas
xor
ficompl
js
out
push
xor
ss
fstpt
sbbl
pop
dec
shl
shl
out
xor
sub
fsubr
and
ja
dec
nop
mov
rcr
mov
push
cmpsl
imul
out
fdivs
xchg
mov
enter
fidivl
jle
test
mov
and
pusha
scas
out
cs
popf
sub
add
jle
negb
frstor
or
clc
data16
lods
xchg
test
xlat
sub
or
ds
in
aas
stos
in
inc
push
aaa
xchg
nop
mov
fcomps
imul
les
mov
cmp
sbb
mov
in
pop
imul
pusha
jns
xor
sub
lods
or
lahf
pop
push
inc
and
sbb
add
xchg
jmp
divb
mov
xchg
mov
ds
sub
iret
pop
xor
pusha
fmul
ret
icebp
sub
cli
and
cltd
xchg
adc
pushf
mov
addb
bound
and
mov
xlat
test
push
call
mov
sbb
mov
jg
add
js
jo
mov
jbe
pop
imul
inc
das
xor
add
xor
sbb
add
inc
ja
jae
adc
add
sbb
pop
sbb
and
xchg
dec
adc
jmpw
fwait
mov
aad
movsl
inc
lret
or
std
repnz
xchg
adc
lods
notl
imul
fisubrl
icebp
data16
scas
inc
inc
popl
test
xchg
dec
push
or
sti
mov
inc
lods
jecxz
mov
jnp
mov
test
push
cltd
and
xchg
sub
out
adc
cld
imul
int
and
ljmp
ret
adc
out
fs
ret
clc
les
stos
es
ficompl
inc
and
mov
push
sub
inc
pusha
insl
int3
ljmp
addl
imul
jnp
cwtl
std
jne
aaa
lods
jp
add
inc
scas
sub
or
orl
sub
aam
clc
adc
inc
out
sub
pop
cmpsb
pop
filds
fistpl
je
orb
adc
or
stos
mov
cmc
int
inc
lods
cld
mov
rorb
out
cld
nop
call
into
sarb
into
aas
cmp
sub
sbbl
pop
lret
sub
popf
add
push
jo
adc
push
cwtl
leave
stos
adc
sbb
stos
lahf
lock
insb
and
adc
loope
pop
fsubrl
outsb
fadds
push
adc
lahf
push
push
adc
add
lret
lods
shl
inc
mov
adc
call
and
pop
test
cmp
imul
daa
loopne
popf
call
or
push
pop
xor
pop
adc
scas
inc
es
mov
and
mov
pop
pushf
pop
in
out
xor
test
adc
cmp
das
mov
aaa
pop
push
shl
xor
fstp
mov
pop
mov
xor
andb
mov
sbb
sbb
popa
fcompl
test
lods
adc
in
fisubrs
fmull
mov
dec
mov
imul
test
inc
add
movsl
leave
sub
add
call
cwtl
loopne
enter
in
ror
adc
push
mov
int3
mov
add
sbb
cmp
sub
dec
push
popa
leave
in
ret
test
imul
cmp
dec
lea
rcr
or
xchg
and
and
pop
cmpsb
ja
adc
fisttps
add
xor
fadds
fwait
sub
xlat
outsl
jno
or
adc
adc
mov
xor
dec
xchg
mov
fdivs
iret
loope
lods
push
or
xchg
pop
enter
xor
sbb
xchg
test
add
pop
cmp
sbb
nop
jmp
xor
insl
add
lcall
cltd
pop
jb
fisubl
hlt
fnstsw
mov
idivl
pop
clc
cmp
outsl
out
out
jo
add
arpl
sbb
js
cmc
pop
lret
ljmp
jmp
imul
leave
and
mov
push
adc
cmpsl
jle
and
movq
ss
pusha
bound
push
in
cmpsl
xchg
mov
lahf
mov
sbb
movsl
pop
xor
mov
inc
xchg
emms
sar
xor
cmpsl
or
xchg
inc
dec
jae
push
outsl
insb
sub
lret
xor
cmp
lret
addl
insb
jmp
add
pop
and
lods
cmp
pop
loop
notb
or
nop
push
dec
and
mov
lret
pop
loope
clc
xorb
ret
push
pusha
iret
xchg
daa
pop
or
mov
xchg
pop
fdivl
ds
pop
xchg
fistpl
add
lea
mov
std
fcoms
movaps
sub
xor
stc
lcall
jmp
je
xlat
add
push
test
cmp
mov
jnp
xor
lds
int
int3
ljmp
jb
in
aaa
ret
push
mov
mov
into
pop
lods
outsl
push
shr
xlat
mov
push
ret
test
es
ja
out
xor
adc
hlt
lock
adc
fdivs
xchg
cmpb
inc
aaa
jg
imul
arpl
push
xor
pop
cld
loope
test
loopne
mov
js
pop
rcll
mov
mov
rcrb
gs
inc
add
mov
adc
loop
sbb
dec
add
mov
lea
out
or
mov
mov
out
jmp
or
push
cli
sub
ss
pop
sub
stc
pop
sbb
test
imul
in
popa
inc
cmp
test
jnp
mov
sbb
imul
push
mov
test
adc
push
and
adc
dec
es
icebp
push
sub
xor
add
adc
or
add
and
in
mov
dec
dec
or
pop
imul
int3
outsl
mov
mov
mov
cltd
cmp
aas
ds
cmp
inc
and
mov
pop
sti
add
push
insb
into
mov
or
lock
cmp
mov
gs
ljmp
add
add
pushf
mov
mov
aaa
dec
outsb
add
cmpsl
mov
shrb
js
jg
xchg
pop
movsl
mov
push
xchg
dec
and
enter
xchg
add
mov
cld
inc
fcoms
jb
push
lock
or
push
mov
pop
jne
sbb
cmp
mov
mov
int3
aas
mov
jae
popf
xor
je
dec
in
cmp
shrl
fstps
jb
push
push
dec
mov
cmp
sub
mov
mov
shll
mov
lods
mov
ss
mov
movd
adc
sub
cmp
jge
jg
dec
mul
rclb
xchg
outsb
adc
cmp
mov
sub
pop
inc
pop
mov
aad
shlb
adc
sbb
lahf
sbb
sbb
roll
insb
mov
daa
add
mov
cmp
in
xchg
aam
fs
xchg
xchg
gs
cli
push
or
mov
cmp
icebp
clc
fstl
cwtl
pop
icebp
dec
sub
jo
pusha
jmp
and
insb
imul
hlt
push
icebp
or
push
pop
aam
sarb
dec
into
test
cmp
shll
call
fs
stos
cmp
mov
iret
dec
sbb
xchg
adc
mov
in
decb
and
ret
leave
inc
ds
mov
stos
insl
sahf
movsb
repnz
lods
stc
inc
mov
mov
pusha
lcall
stos
xchg
fnstenv
test
lahf
mov
dec
mov
into
xor
cmp
pop
sar
repz
imul
jb
call
cmp
mov
lret
mov
adc
data16
lods
cmp
sub
cmp
jle
imul
push
call
mov
fmull
dec
loopne
insl
mov
sti
cmp
pop
xor
stc
mov
popa
mov
test
clc
jge
fbld
fnstcw
int3
jno
sahf
rclb
mov
cwtl
out
das
sub
addb
mov
xlat
testl
mov
shlb
xchg
mov
fimull
sti
std
pop
repz
popf
lret
or
mov
stc
lods
push
sbb
push
mov
shl
shlb
xchg
mov
pop
xchg
xchg
incl
and
pop
add
pusha
xchg
mov
dec
shrl
dec
sbb
jbe
mov
in
ret
idiv
push
stos
or
int
xlat
or
pop
xchg
dec
addr16
push
mov
clc
aaa
call
out
imull
sbb
or
pop
xchg
dec
addr16
push
mov
clc
aaa
call
out
mull
movl
mov
xchg
addr16
push
andl
rcll
int3
cld
xlat
dec
movsl
js
push
cwtl
inc
mov
in
cwtl
push
call
mov
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
repnz
xor
mov
int3
add
add
or
pop
push
add
add
jb
sub
sub
add
fadds
cltd
add
inc
add
add
add
add
add
add
push
add
add
add
mov
inc
add
add
in
add
add
add
pop
add
add
lahf
add
add
add
and
mov
push
add
xchg
add
inc
add
add
lahf
add
add
scas
add
addb
add
add
add
ret
add
add
add
add
add
add
add
add
add
jb
stc
add
add
add
pop
add
and
sti
add
in
add
add
and
scas
add
add
mov
add
add
add
add
add
jl
pop
add
add
and
ss
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
xchg
add
add
jmp
pop
add
add
push
add
inc
add
add
add
add
xlat
add
mov
add
add
cmp
ja
mov
add
add
add
add
movsb
add
add
add
ja
dec
add
add
add
add
add
or
xlat
add
add
movb
add
add
add
add
add
add
test
test
lret
add
add
add
add
add
add
add
add
add
outsb
add
add
add
loope
push
add
add
add
add
add
mov
add
pop
add
add
add
add
add
add
add
xlat
add
add
add
add
add
xchg
mov
add
dec
add
add
add
movb
add
add
movb
add
mov
sbb
test
push
add
adc
dec
push
pop
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
cmp
cltd
add
xchg
fadds
mov
xchg
inc
add
in
add
add
add
add
add
add
or
add
pop
add
add
mov
sub
inc
add
add
add
add
add
add
add
lods
add
test
enter
int
int3
add
add
test
test
xchg
enter
add
mov
addb
add
add
add
add
add
add
add
mov
add
pop
add
add
add
add
add
add
add
add
add
faddl
and
cmc
add
add
insb
add
inc
add
add
add
jb
dec
add
add
add
add
movb
add
add
add
add
add
add
add
add
add
add
add
jno
mov
testl
mov
add
loopne
mov
inc
add
add
ret
add
add
or
add
add
cmpl
std
imul
shl
cltd
fdivrl
ret
sbb
mov
pop
icebp
hlt
shl
dec
scas
daa
cmp
aaa
mov
cltd
mov
dec
adc
leave
das
pop
scas
inc
push
sub
lock
inc
ss
stos
cmp
call
out
inc
and
test
xchg
mov
cmp
mov
fildl
daa
int
out
lret
gs
enter
fisttpll
pop
aad
stos
push
jo
jbe
je
pop
xor
cmc
jg
movsl
xchg
pop
out
enter
jecxz
jge
int
pop
fstpt
xor
xchg
add
sbb
shrb
xor
stos
aas
aas
scas
inc
loopne
ss
xor
ja
mov
sbb
ret
push
clc
sbb
lea
imul
dec
mov
cmc
adc
test
cmp
in
mov
add
jb
fimull
outsl
xchg
lret
divl
sbb
popf
jecxz
xor
inc
xchg
rol
fists
dec
add
mov
test
mov
enter
mov
mov
lock
ret
repz
stos
stos
pushf
gs
mov
mov
add
mov
mov
push
inc
xchg
cmp
outsl
jno
jg
aam
xor
sarb
lret
ja
arpl
mov
arpl
int
addb
sbb
or
push
orb
push
arpl
sbb
sbb
sub
sbb
jge
and
les
jp
imul
out
dec
sub
cmp
test
pushl
mov
outsb
rcrl
push
jne
inc
das
js
pushl
mov
sbb
fistl
dec
mov
lea
mov
push
pop
inc
inc
aad
sbb
jo
cmpsb
sahf
in
ja
mov
out
add
pop
cmpsb
rorl
and
fisubrs
sahf
mov
push
sub
sub
gs
fs
ds
mov
jge
dec
mov
xchg
jp
mov
xchg
push
mov
mov
mov
movsb
xor
mov
inc
mov
hlt
mov
xor
sub
test
ja
test
sbbl
mov
pop
xor
fcomps
es
insl
jne
push
pop
xor
inc
pop
sbb
sbb
push
xor
inc
inc
sub
inc
adc
or
jb
outsb
jp
push
sbb
outsb
cmp
pop
xor
je
push
jge
mov
sub
inc
les
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
