in
mov
in
mov
movl
mov
inc
add
add
ret
int3
add
in
jl
add
movl
push
sahf
cmp
test
push
lea
jg
push
call
add
dec
cld
incb
jmp
imul
call
cli
jb
mov
scas
sbb
adc
mov
or
adc
inc
std
out
inc
std
push
js
clc
and
adc
mov
daa
cmp
mov
int
popf
and
mov
push
fisttpll
add
cld
imul
cmp
fs
adcb
shlb
aaa
js
lea
mov
xchg
adc
fnstcw
cli
les
js
insb
repz
out
or
cmpl
add
mov
pop
in
mov
cmp
into
addl
sbb
pop
ficoml
int3
add
stc
pushfw
mov
lea
sbb
mov
pop
or
clc
jns
cli
popa
cmp
xchg
or
inc
std
insl
mov
adc
aas
je
pop
cmpsl
jl
in
or
mov
sbb
sub
cmp
stc
loope
addb
data16
and
cmpl
lods
fsubrs
mov
add
lods
sahf
fstl
dec
stc
pop
add
sub
or
push
out
aad
or
add
test
stc
test
lret
lea
test
and
lea
roll
mov
daa
addl
stos
loopne
daa
lock
sti
cmp
jl
lock
push
rcll
push
xchg
inc
call
jle
xchg
push
push
daa
or
mov
mov
ret
or
mov
imul
adc
or
in
mov
test
test
mov
jo
subl
inc
pop
out
inc
mov
icebp
push
clc
outsb
movsl
pop
pushf
stc
imul
call
lock
je
ret
fwait
push
clc
ljmp
and
mov
mov
xlat
mov
imul
sbb
test
sub
mov
and
addr16
pop
inc
mov
sbb
mov
pop
pop
add
xor
in
sub
test
pusha
dec
jb
out
pop
std
cmp
jo
mov
popa
adc
xchg
and
sub
jmp
sbb
in
pop
pusha
popf
cmpsl
les
std
enter
adc
xor
enter
pop
decb
adc
adc
ja
sahf
cld
cmpsb
in
xchg
sbb
pop
std
fsubr
push
dec
inc
push
push
movsb
push
loopnew
jb
cmp
daa
push
jbe
in
out
sub
setle
add
popf
cmp
or
xchg
std
jae
nop
inc
test
sbb
mov
pop
scas
cmp
mov
add
outsl
jnp
orb
adc
shlb
sub
lock
and
ret
xchg
cli
pop
imul
fcompl
push
inc
std
or
xor
dec
roll
sbb
imul
scas
jo
push
pop
cld
or
or
stc
cmp
cmp
ret
mov
icebp
ret
push
call
out
lret
sbbb
sub
sub
sub
jge
pop
das
addr16
daa
lock
fsubs
ud1
and
mov
cmp
xor
mov
mov
stc
push
dec
xor
js
and
sub
xchg
inc
pop
in
aas
hlt
cmp
xchg
mov
arpl
inc
cld
outsl
mov
leave
sub
jle
sub
mov
inc
xchg
push
inc
adc
mov
cli
cmpsl
add
xchg
in
cmp
inc
push
test
lahf
std
lret
dec
adc
dec
cld
int
add
cld
jns
fs
in
les
mov
daa
hlt
incb
imulb
shlb
mov
dec
adc
dec
mov
xor
inc
or
lret
enter
push
mov
adc
jno
dec
lods
in
lock
push
mov
jge
test
jmp
clc
es
and
es
lea
hlt
hlt
or
mov
adc
and
push
xchg
add
sub
or
pop
mov
ljmp
lcall
mov
js
imul
pushf
mov
xchg
and
inc
dec
in
aad
dec
or
add
and
stos
jnp
addl
inc
sbb
xorl
push
or
cmc
lods
xchg
or
pop
pop
mov
add
sbbl
jle
pop
cs
outsb
mov
jb
or
lea
push
and
mov
rcll
stos
jno
ja
mov
jno
insb
mov
push
add
push
lock
rcll
pop
dec
cmpsl
sbb
mov
lret
std
inc
mov
xchg
lret
and
pushf
mov
or
push
dec
lds
ret
or
xchg
xchg
movb
adc
incl
xchg
sbb
sbb
dec
sbb
roll
cmp
push
test
testb
mov
pop
pop
aas
cltd
mov
jb
flds
iret
push
xchg
stos
insb
data16
nop
repnz
add
nop
stos
sbb
mov
ljmp
push
sub
rcrl
and
inc
mov
pop
shlb
push
gs
iret
inc
nop
call
pop
rcll
movsl
in
push
jne
gs
xchg
sub
pop
lds
das
mov
mov
or
mov
dec
push
mov
loope
sahf
dec
lea
or
ss
lock
cmpl
outsb
mov
inc
in
insb
jmp
sub
test
pop
dec
sub
pop
push
inc
addr16
push
in
dec
cmp
lds
adc
pop
mov
adc
push
adc
inc
or
or
xchg
lcall
cltd
call
js
push
jb
or
test
jne
mov
test
out
movb
push
adc
ss
mov
jb
sti
stc
adc
flds
sub
in
hlt
js
insl
adc
outsl
adc
lds
inc
ja
and
mov
shrl
push
sbb
cmp
pop
sub
pusha
pop
mov
mov
cltd
dec
or
test
cmpl
cmpsb
push
pop
ret
int
icebp
orl
inc
sbb
test
sbb
and
cmpsb
enter
mov
imul
pop
xchg
jbe
or
scas
adc
icebp
in
loope
popf
lea
fadds
leave
mov
in
aas
and
cmpsb
aas
add
push
loope
push
push
xchg
cwtl
sbb
cmpsb
xor
push
inc
mov
mov
popl
loopne
loope
aaa
movsb
std
xchg
mov
or
cmp
movsb
loop
int
cmpl
mov
adc
inc
add
add
js
mov
jae
mov
add
add
aaa
mov
sub
nop
or
xchg
imul
push
incl
mov
mov
test
lret
lea
jnp
movsl
jecxz
aam
sbbb
iret
jnp
inc
sub
jl
jl
push
mov
cmp
add
test
ror
out
repnz
push
lods
pusha
pop
rolb
mov
push
mov
cs
xchg
test
xor
adc
sbb
push
mov
push
test
test
inc
add
jmp
cmpsl
lcall
pop
sub
or
mov
mov
push
push
and
jo
mov
movsb
adc
sbb
sub
adc
dec
shl
bound
int3
subl
jae
dec
inc
or
inc
push
push
sbb
and
icebp
inc
push
test
adc
jae
imul
iret
add
inc
mov
sub
adc
in
adc
xchg
push
shll
pop
data16
push
lock
mov
test
popa
inc
inc
and
dec
or
in
adc
and
lret
xchg
test
inc
sbb
add
divl
inc
stc
movsl
flds
cmpsl
bound
and
xchg
or
pop
add
push
in
mov
xor
push
xchg
mov
fldcw
fs
cs
push
xchg
push
pop
cmp
in
mov
rcll
push
mov
xor
mov
push
js
imul
mov
xchg
xchg
and
push
push
imul
dec
xchg
gs
hlt
push
outsl
jecxz
mov
mov
lea
cmp
mov
jecxz
test
adc
inc
or
xchg
push
xchg
xchg
and
pop
push
in
and
in
mov
jmp
mov
mov
add
ja
dec
cmp
xchg
cs
aas
dec
xor
test
inc
push
pop
lea
jmp
and
or
bound
add
adc
lods
stos
mul
scas
xchg
sub
stc
rcll
and
sub
ljmp
add
mov
push
cld
add
cmpsb
sbb
dec
jp
dec
push
mov
in
movsb
mov
jb
fstps
leave
jecxz
jo
jo
lret
jle
repz
jb
sbb
stos
jmp
sbb
add
dec
pushl
xor
mov
push
dec
sub
pop
repnz
lock
cmp
xor
inc
jmp
jmp
cmp
inc
mov
in
or
push
mov
in
enter
test
inc
add
in
movsl
lcall
dec
daa
push
popf
adc
hlt
xlat
lea
ja
xor
push
or
cmp
pop
xchg
pop
xor
ret
sbb
rorb
push
or
inc
lahf
ds
or
xor
pop
pop
or
cmp
loop
adc
cmp
inc
imul
call
outsb
inc
add
adc
sbb
enter
sbb
mov
xchg
cmpsb
inc
in
push
es
ret
jmp
enter
lahf
ret
adc
cmpsb
fnsave
test
nop
std
sbb
inc
push
out
sbb
and
cmp
xchg
lods
jl
adc
cld
std
cmp
cmp
cmp
sbb
adc
dec
orb
adc
xlat
in
xorl
push
out
inc
sub
clc
in
push
lahf
rclb
loop
test
inc
jecxz
lock
sub
inc
clc
inc
leave
or
adc
cmpsb
inc
pop
push
inc
lods
stos
xor
dec
xor
or
mov
rorl
dec
xor
push
mov
pop
adc
call
fcomps
xchg
dec
dec
shr
mov
cmp
pushaw
jb
sub
or
mov
test
lea
lea
xchg
xchg
mov
jnp
and
and
xchg
stos
mov
jmp
insb
movzbl
test
je
dec
popa
test
push
jno
mov
or
add
mov
loope
sub
shlb
and
in
push
mov
push
lds
or
push
pop
push
push
inc
pusha
push
aas
sub
inc
push
out
jg
enter
js
add
add
push
or
shlb
cld
test
cmp
js
rolb
or
push
cmp
push
lock
fildl
sti
lock
adcb
in
dec
fstpt
adc
movsb
clc
pusha
dec
push
mov
push
push
mov
push
push
inc
shrl
mov
int3
in
push
outsl
addr16
mov
cmp
xor
insb
xchg
dec
push
cmp
ss
in
jge
sub
sub
sbb
rorb
push
and
dec
add
in
ds
hlt
es
in
cld
jle
scas
shl
mov
int3
aas
cmpl
fcomps
add
add
add
dec
subl
call
call
jp
mov
in
mov
lahf
dec
xor
push
or
cmpl
mov
adc
pusha
dec
loopne
sub
adc
jg
fwait
xor
or
jo
in
jo
clc
cwtl
jmp
jae
inc
imul
or
push
les
les
fsubrl
mov
in
in
pushf
mov
xchg
idiv
shl
jmp
or
xchg
and
mov
sub
aas
sbbl
hlt
xchg
bound
mov
and
bsf
pop
push
es
sub
ds
push
mov
cmpl
adc
repnz
mov
aam
mov
rcl
dec
jo
jmp
vpsubsw
jae
outsb
mov
and
call
add
adc
add
insb
inc
int3
xor
shr
cmp
fcomip
inc
jp
rclb
cmp
lcall
sbb
inc
add
adc
ficoml
int3
or
in
mov
jmp
push
hlt
and
adc
ficomps
adc
push
push
mov
push
sbb
jg
or
adc
aam
or
mov
mov
add
shr
and
jl
inc
add
aam
or
jmp
rcrl
cmpsb
or
add
sub
push
xchg
inc
mov
lock
push
xor
sub
push
sahf
aad
pop
push
fisttpll
add
rclb
pop
mov
sub
cmp
repz
sub
mov
adc
je
sti
push
aaa
or
call
addb
scas
and
sub
cltd
xchg
cmpsb
shl
cld
fdivrl
push
sbb
aas
sub
lret
mov
add
out
rorl
pushf
in
mov
jae
clc
and
sub
out
or
hlt
shll
jae
push
lock
adc
add
cmpsb
or
and
mov
jecxz
cmp
jne
cmpb
pop
sub
insl
imul
loop
add
andl
push
call
js
or
or
fs
push
imul
cmp
cmp
scas
popf
fidivs
in
clc
sbb
mov
pop
sub
iret
dec
aam
xor
leave
mov
leave
adc
or
sbb
ss
call
lods
addr16
xchg
push
cmp
push
bound
jno
popf
adc
mov
adc
xchg
or
mov
jne
mov
sub
ficompl
aaa
std
mov
das
ss
inc
loopne
push
push
push
sbb
or
es
xchg
adc
push
pop
fbstp
adc
stos
mov
aam
and
es
or
rcll
jnp
mov
fmull
loopne
pop
push
xchg
adc
out
popl
push
push
sti
lods
or
in
icebp
xor
mov
pop
fs
mov
xor
or
in
or
inc
enter
dec
loopne
lock
test
pusha
xor
popf
pop
pop
loop
pop
xchg
test
mov
xor
mov
idiv
add
leave
mov
popa
pop
mov
xchg
push
add
mov
sbb
pop
lea
sbb
jnp
lea
jo
lea
mov
push
icebp
add
xor
add
sbb
pop
popa
adc
or
jge
push
push
or
mov
addr16
push
inc
sub
inc
cmpsl
cmp
lcall
fldcw
xchg
sub
repz
loopne
inc
jne
push
push
cmp
test
xor
inc
cltd
lahf
rorl
negb
adc
js
adc
je
or
xor
jne
nop
cmpsl
push
inc
icebp
inc
xchg
lea
push
sbb
lds
jecxz
mov
pusha
push
mov
add
ret
js
je
and
das
adc
jne
xor
and
jo
xchg
aad
in
and
lea
push
addl
out
bound
lea
bound
aas
pop
lods
inc
mov
lea
mov
inc
cmp
repnz
mov
call
jo
xor
xor
mov
sbb
dec
inc
mov
fbstp
push
pop
push
add
xchg
hlt
lcall
fdivrs
or
cmpl
aas
jne
push
adcl
add
or
mov
add
mov
adc
push
mov
loop
rorb
aam
addr16
sub
rorb
lcall
mov
push
inc
testl
jecxz
shlb
loop
inc
movsb
add
jge
add
xor
push
xchg
mov
cmp
xchg
push
sbb
mov
cmp
int3
add
scas
push
sub
outsl
aas
sbb
or
sti
ja
mov
cmpl
jb
and
pop
ret
clc
fs
cmpl
jbe
das
mov
jg
hlt
mov
mov
adc
out
or
insb
pusha
cmpsw
stc
cs
dec
sbb
xor
das
icebp
movl
les
mov
js
and
shrb
shlb
pushf
in
dec
or
push
out
mov
or
mov
push
mov
inc
sbb
fsubr
or
test
je
movsb
mov
mov
cwtl
dec
mov
ret
pop
scas
dec
jae
sub
push
jne
jl
cmp
pop
sbb
xchg
dec
adc
mov
jbe
jbe
inc
repnz
fs
cmp
jae
dec
int
add
aam
mov
sbb
push
lahf
out
pop
sbb
sete
xchg
lret
mov
mov
mov
imul
sbb
mov
mov
pop
icebp
mov
mov
mov
lcall
outsb
rol
addr16
xor
std
lock
fdivrl
and
cmpsb
fcomps
lods
lods
add
lcall
bndstx
jb
fs
test
movsb
fnstcw
movsl
test
movsb
push
es
jne
testl
or
add
fwait
cmp
mov
mov
sbb
mov
mov
add
fldcw
orl
mov
mov
push
insl
adc
insb
or
cmp
insb
mov
lret
adc
mov
push
ficomps
fs
fildll
mov
cmp
sbbb
lock
insb
sub
sbb
test
pop
cld
sbb
arpl
mov
xor
or
dec
mov
sbb
mov
mov
fldenv
xor
mov
inc
sahf
dec
scas
test
xor
lret
mov
xchg
push
mov
hlt
mov
sbb
inc
lock
push
in
sub
imul
sbb
data16
sub
mov
loopne
loopne
pop
sub
in
mov
popf
mov
sbb
gs
dec
cmpsl
xor
push
and
add
pop
xchg
lock
std
jmp
rcll
jmp
imul
mov
jb
in
pop
xor
inc
mov
clc
clc
add
mov
sbb
ret
mov
push
scas
dec
push
add
and
mov
or
jo
lea
loopne
jae
push
loopne
pmaxsw
leave
sub
out
lods
or
cwtl
or
jae
ja,pn
xlat
lock
shlb
push
aam
xorl
aam
movsb
loopne
add
cmp
jne
call
loopne
push
pop
sub
shrb
out
or
rcrb
shl
icebp
add
jg
enter
xor
adc
xor
outsb
andb
clc
ret
out
adc
push
enter
sub
or
adc
push
fs
outsb
xchg
xchg
enter
sbb
les
pop
enter
es
add
and
rcrb
cmpsb
jmp
adc
in
in
rcl
iret
enter
sbb
enter
xchg
dec
jae
mov
aaa
sub
loopne
xchg
mov
and
ss
ret
sub
push
andb
and
jl
cmc
xchg
inc
cmpsl
or
call
dec
pop
in
mov
jae
xchg
pushf
mov
cmp
pop
div
sub
addr16
lcall
shll
fcomps
fisubl
lock
mov
insl
hlt
adc
in
fdivl
dec
mov
sub
mulb
test
fucomip
mov
sub
enter
push
inc
jl
fmuls
add
mov
jge
add
cmc
adc
test
push
mov
adc
push
adc
push
stc
add
lods
add
inc
sub
lods
and
adc
loope
das
mov
jae
pop
sbb
arpl
jmp
outsb
test
test
arpl
adc
inc
adc
cmpsb
in
add
inc
adc
xor
adc
mov
mov
rorl
ret
sub
data16
aad
popa
sbb
add
mov
push
mov
cld
clc
sbb
sbb
clc
in
dec
shll
jle
cld
hlt
mov
mov
loopne
cmc
ja
insl
add
add
das
sub
fists
adc
sub
cmp
adc
mov
test
or
mov
fsub
add
clc
add
ja
or
lea
addr16
adc
push
mov
movl
je
repz
fisttpl
inc
lock
fs
test
push
pop
lahf
or
je
outsb
sub
int
fisttps
dec
or
lock
lods
ficompl
mov
mov
jg
hlt
inc
adc
daa
inc
ds
clc
in
orb
cmp
jo
stc
fs
adc
repnz
jge
jmp
mov
shld
inc
pop
in
adc
cmp
pop
pusha
insb
jb
flds
data16
mov
cmpsl
loopne
dec
push
lea
or
cmp
adc
add
sbb
jb
mov
adc
sub
sub
adc
mov
jmp
jl
xor
sbbb
loopne
fmulp
push
push
pop
push
push
push
mov
pushf
pop
outsb
je
push
add
sbb
sbb
and
pop
lcall
dec
in
xchg
sti
call
adc
cwtl
pop
or
push
pop
inc
imul
pop
fistpl
push
jmp
xchg
inc
dec
movsl
test
fwait
nop
dec
ret
sub
js
rclb
std
xchg
insb
mov
xchg
nop
cwtl
jb
sbb
xor
repz
pusha
lods
xor
inc
adcb
push
mov
jns
mov
enter
mov
mov
hlt
sbb
xchg
mov
adc
xlat
nop
pop
pushf
mov
mov
cmp
mov
mov
inc
push
push
pushf
inc
or
sub
fnsave
lea
add
jae
mov
xchg
mov
aam
push
stos
fimuls
nop
mov
pop
or
call
fdivrs
xlat
xchg
xchg
xchg
adc
or
shrb
adc
std
out
push
adc
inc
add
add
xchg
aam
cmp
xchg
add
xor
cmp
test
test
dec
sub
xor
push
push
cmpsl
sub
dec
shll
enter
mov
dec
adc
lcall
jg
xchg
scas
push
sub
jl
xchg
or
clc
cmp
mov
movsb
mov
outsl
push
pop
or
lds
inc
daa
or
cli
mov
mov
enter
lock
psubusb
stos
xor
or
stos
imul
sbb
mov
mov
pop
enter
adc
cld
xor
or
mov
std
mov
arpl
xchg
fildl
jne
roll
add
or
cmp
orl
mov
test
adc
dec
fwait
and
lret
push
mov
add
rorl
or
out
sub
push
enter
push
or
das
add
sub
imul
inc
adc
pop
loope
shl
add
js
test
aaa
mov
mov
nop
lods
cwtl
xchg
push
sub
xadd
lods
push
loopne
pushf
test
shl
push
aaa
cmp
dec
mov
cmp
dec
jbe
pusha
jae
push
pop
ret
jno
sub
mov
inc
jae
nop
fs
mov
push
mov
inc
and
push
fsubp
adc
jnp
lret
in
push
mov
add
pop
push
in
inc
nop
mov
test
sbb
rolb
xchg
xchg
add
ds
cmp
rol
dec
or
jno
and
or
cs
test
addb
test
push
push
add
add
mov
and
mov
xchg
add
test
std
outsb
cmp
pusha
mov
andb
jge
in
jp
pop
mov
in
sbb
mov
rclb
loop
and
jne
xlat
inc
andb
popf
add
test
xchg
sbb
ret
mov
or
push
popa
inc
or
mov
pop
dec
popa
scas
pop
mov
mov
jge
mov
das
mov
push
and
jl
test
addr16
cmp
lea
es
pop
xchg
pop
enter
mov
sbb
mov
cld
cmp
pop
mov
xor
mov
jnp
mov
xchg
sbb
or
mov
sbb
add
gs
les
ja
xchg
fs
xchg
and
std
sub
xchg
push
loop
outsl
cmp
js
les
dec
adcb
addb
dec
xchg
mov
pusha
xlat
mov
jb
xchg
xchg
adc
mov
adc
xchg
mov
xlat
call
xchg
mov
or
mov
inc
dec
addr16
clc
inc
or
std
sub
loop
je
test
shrb
adc
inc
int3
aam
subb
pop
insb
and
outsb
stos
adc
inc
cmp
sbb
je
adc
mov
pop
jns
out
mov
cmpsl
mov
add
mov
adc
push
test
push
sub
push
cmp
test
mov
adc
add
inc
dec
shl
std
insl
xor
or
pop
mov
jle
or
out
addr16
outsl
cmp
push
ja
mov
and
jl
pop
je
fisttpl
adc
or
inc
add
jl
arpl
jl
add
or
pop
sbbl
and
rcrl
js
lods
lcall
daa
xchg
lea
les
and
inc
adc
mov
push
adc
jl
adc
clc
aaa
shl
jne
mov
cmp
mov
xor
push
sbb
push
or
adc
push
mov
mov
xor
mov
inc
fcoms
push
bound
xorl
jbe
out
popf
or
and
enter
or
xchg
and
cmp
sti
mov
jmp
outsl
addb
jno
pop
pop
jg
insb
and
push
pop
cld
cmp
push
mov
arpl
addl
pop
lcall
mov
pop
mov
sahf
fistpll
and
lods
xchg
jo
insb
je
ret
ja
push
jg
in
push
dec
leave
lret
addl
and
xor
repnz
lcall
push
mov
adc
sbb
sbb
mov
sbb
rolb
push
push
jge
mov
pop
or
adc
add
in
lar
push
lcall
jmp
or
hlt
adc
push
add
xchg
mov
aas
inc
imul
icebp
jecxz
movsl
and
xchg
test
insb
sub
aad
jecxz
arpl
lods
mov
or
mov
xor
pop
mov
inc
sub
jmp
mov
pusha
push
cmpsl
push
imul
sub
repnz
lea
add
bswap
add
cmpsl
sub
or
sbb
movsb
jno
daa
mov
adcl
incb
cld
sbb
push
sub
or
jmp
dec
xchg
lret
shll
push
cmc
pop
jg
add
xchg
inc
pop
enter
pop
xchg
fwait
arpl
inc
idivb
in
push
mov
cs
pop
or
lds
mov
jne
jmp
lea
subb
jecxz
lahf
insb
add
xchg
inc
push
cmp
adc
push
enter
mov
inc
mov
loope
inc
subl
cmpsl
test
and
fs
push
mov
xor
ds
sub
mov
cmpsl
roll
test
or
xchg
je
xchg
mov
dec
sub
mov
arpl
add
je
jp
add
das
mov
test
and
shll
addr16
xor
xchg
cmpsb
add
shlb
roll
cmp
xchg
addb
jb
pop
and
pop
xor
adc
xchg
sub
bound
and
jle
mov
fiadds
inc
fdivs
inc
pop
ret
add
dec
push
ret
jns
xchg
inc
xor
fistpl
mov
pop
sub
andb
adc
cltd
adc
aaa
sbbb
adc
xchg
stos
or
mov
mov
out
insb
push
adc
add
fwait
pop
lahf
sub
jae
or
xor
and
mov
ret
pop
xchg
and
es
inc
push
push
add
mov
mov
push
xchg
test
mov
lods
aad
ljmp
xchg
scas
inc
xchg
sti
popa
and
test
xchg
addb
xor
mov
pop
or
movsb
cmp
jne
jecxz
adc
adc
lods
adcl
add
jns
aaa
mov
outsl
mov
adc
mov
bound
mov
jge
fs
inc
push
cwtl
inc
cwtl
and
push
int3
neg
sbb
jo
xor
xchg
filds
std
in
sbb
sub
mov
stc
xchg
mov
aas
add
add
addl
nop
arpl
and
and
pop
adc
imul
sub
enter
sbb
mov
outsb
inc
push
jb
jl
shlb
xchg
or
loope
fdivs
int3
pop
imul
sbb
jb
rorb
mov
mov
and
or
push
sub
and
add
xchg
sbb
addl
sbb
sbb
test
and
sbb
xchg
dec
push
test
add
mov
insb
jae
cmp
mov
sbb
pop
lret
cmp
vmovaps
pop
enter
sub
nop
in
sbb
or
test
or
add
fwait
push
mov
jae
or
pusha
and
subb
and
push
push
movsl
shrb
xor
mov
add
or
lods
aaa
imul
sbb
fs
pop
lds
xchg
insb
mov
push
es
popa
mov
and
mov
and
and
lahf
cmpl
out
add
jns
mov
lea
dec
add
lret
push
mov
add
sub
pop
gs
adc
fiaddl
xchg
jo
movsl
inc
cmpsl
sti
add
and
mov
loop
or
add
ret
stos
push
xchg
xchg
xlat
addr16
mov
push
dec
inc
mov
pop
sub
mov
push
mov
in
xchg
jne
push
push
inc
mov
pop
pop
lock
dec
pop
add
cmpl
ljmp
mov
or
adc
mov
inc
add
xor
int3
les
test
adc
shlb
add
arpl
push
lret
test
arpl
sbbb
jb
and
sub
push
dec
movsl
in
push
push
sub
mov
cltd
dec
mov
dec
imul
cmp
adc
xorl
dec
xor
je
push
mov
push
jo
cmc
jmp
sbb
shrl
mov
fwait
cmp
sbb
push
movsb
rolb
sub
subb
xchg
nop
sbb
add
and
sbb
jae
adc
mov
das
mov
cwtl
je
adc
add
jne
call
leave
test
xchg
imul
sbb
jb
push
adc
test
jmp
mov
jae
insb
js
cwtl
jns
cltd
sbb
in
sti
xchg
mov
push
imul
cmpsl
add
stos
push
sub
or
sbb
add
das
sub
loope
inc
sbb
cmp
cmp
rorb
loop
cmpb
int
cltd
cs
js
mov
add
sbb
rcrl
lods
rclb
pop
dec
js
cld
js
add
test
movsb
add
push
shlb
cwtl
lods
imull
imul
dec
dec
nop
mov
movsl
xchg
inc
test
mov
xchg
mov
mov
push
dec
js
pop
movsb
mov
xchg
fdivl
out
sbb
notb
and
push
adc
or
mov
sbb
or
and
sbb
push
add
push
or
enter
xor
jne
fidivrs
ret
cs
std
add
xchg
add
pop
test
jmp
xchg
imul
inc
xchg
pop
jp
dec
js
mov
xor
cmp
mov
mov
cmp
jb
xchg
divl
stc
pop
mov
movsl
and
mov
sahf
jmp
sub
or
sub
or
frstor
or
out
jno
lea
mov
gs
xor
fnstcw
or
push
lea
cltd
icebp
pop
and
or
mov
or
dec
test
lock
cmpsl
add
xor
jne
inc
dec
dec
pop
push
shlb
js
sbb
repnz
add
pop
sbb
cmpl
xor
push
pop
int3
add
mov
add
testb
mov
int
pop
mov
rcl
dec
or
pop
xor
or
dec
test
mov
aas
jg
jo
push
pop
cwtl
add
sbb
pop
rcll
cmp
adc
cmp
movsb
jo
adc
out
inc
or
adc
sahf
jno
jb
popf
lret
cmc
add
test
push
mov
xor
movsb
hlt
inc
pop
cmp
xchg
sub
fmuls
scas
sub
or
mul
dec
sub
push
sti
push
stos
pusha
push
jmp
repz
sbb
adcb
jno
add
jge
sti
mov
xor
mov
xor
push
movsl
mov
shrl
cmpsb
shrl
das
and
mov
roll
mov
inc
jno
daa
cltd
xor
mov
or
cmc
cmpsl
das
movsb
jb
in
lea
test
add
xchg
lret
lea
arpl
stos
dec
push
push
dec
roll
xor
insb
or
loop
into
and
dec
inc
xor
adc
inc
add
mov
sbb
lahf
test
xchg
test
out
adc
inc
mov
sbb
mov
xor
push
inc
fstpt
mov
jne
bound
test
movsb
mov
mov
push
or
add
mov
xor
xor
mov
test
sbbl
push
arpl
adcl
dec
cmpsb
outsb
loope
mov
inc
lods
xor
test
roll
test
imul
mov
mov
jo
pop
xchg
mov
xchg
xchg
out
mov
add
adc
mov
gs
push
sbb
test
adc
and
fistps
ret
push
or
inc
std
icebp
popa
gs
sbb
bndldx
push
or
test
pop
pop
rolb
nop
rcrb
mov
jg
adc
arpl
or
add
pop
adc
add
push
loopne
xorb
ret
or
cmp
or
dec
xor
mov
inc
int3
stc
xor
mov
mov
mov
adc
add
sbb
or
lahf
push
ds
add
xor
mov
insl
les
adc
pop
xchg
fiadds
fabs
rorl
mov
push
into
xor
sub
xor
mov
inc
pop
push
jmp
in
mov
pop
xchg
jns
movzbl
loope
cli
jmp
sub
cmpsl
fsincos
cmp
add
movsb
pushf
mov
jns
dec
shll
xor
xlat
sbb
push
loopne
or
or
xor
inc
lock
fchs
fisttpl
sub
or
stc
std
or
cmpl
je
or
je
add
push
xor
pusha
jmp
fs
dec
or
clc
mov
lds
inc
stos
inc
dec
enter
dec
rcrl
inc
mov
push
adc
int
or
cld
push
or
add
scas
pop
add
push
out
in
cli
inc
pushf
arpl
or
jne
adc
adc
cwtl
hlt
dec
aad
jge
dec
hlt
push
in
je
mov
lods
fistl
push
cmc
mov
add
pop
out
or
add
jmp
pop
dec
adc
push
mov
push
xor
xor
loop
mov
mov
add
testb
mov
cs
push
add
ljmp
in
push
mull
jne
mov
inc
pop
xchg
push
loopne
add
lea
fbstp
inc
xchg
pop
ss
data16
movsb
dec
pop
xchg
or
add
gs
test
pop
add
inc
test
pop
adc
pop
and
xchg
push
stos
mov
cmp
pop
and
data16
jge
pop
xchg
cmpsb
jl
or
lods
shrl
cmpsb
into
adc
or
nop
fs
cmpsl
bnd
pushf
shrb
out
adc
js
add
jb
push
xchg
xor
dec
adc
addr16
rclb
adc
adc
dec
shll
fdivr
call
add
test
jl
jmp
xchg
jl
mov
cmp
push
mov
pop
mov
imul
dec
addr16
jl
xor
arpl
repnz
jnp
xchg
mov
sbb
and
sbb
bound
in
and
sub
out
in
xchg
adc
lock
movl
push
lret
xchg
dec
aad
sbb
xchg
jg
in
pop
addl
fxch
mov
adc
sub
cmp
xchg
shl
sub
push
pop
cld
vmread
jo
loop
jns
sub
cmc
xor
pop
cmp
fcomps
pop
pop
lods
jno
pop
xchg
popf
data16
add
add
lock
int3
mov
inc
xor
gs
fisubl
rol
test
cwtl
ficompl
sub
fs
movsb
mov
gs
mov
dec
lret
daa
cmp
adc
lods
pushf
je
imul
callw
mov
or
in
xor
xor
nop
aas
push
loopne
test
xchg
stos
dec
ret
mov
push
les
je
or
mov
cmp
test
jl
mov
rclb
or
je
pushf
rolb
lcall
js
rorb
sub
add
pop
rolb
sub
in
cmp
xchg
mov
pop
subl
mov
out
xor
add
mov
adc
clc
and
shl
jb
xor
shll
loopne
sbb
popf
or
dec
push
sahf
xchg
stc
sbb
pushf
or
insb
mov
insb
aad
cltd
pushf
or
sbb
cwtl
daa
pop
xor
mov
dec
neg
sbb
or
shlb
pop
and
je
lods
adc
sbb
dec
adc
icebp
popf
ret
pop
and
loopne
rcl
popf
add
push
jl
add
sub
adc
clc
mov
jecxz
stos
stos
and
insl
cmp
shlb
pusha
xchg
pop
shll
pop
mov
out
sub
adc
test
or
mov
pushf
clc
ret
scas
movsb
in
arpl
arpl
cs
nop
int3
int3
sti
movsb
pushf
shlb
push
cmp
lock
popa
inc
sbb
or
lea
and
test
mov
adc
fsubs
inc
insl
sbb
movsb
enter
mov
mov
mov
jl
and
ds
push
or
setge
inc
test
add
adc
cwtl
loopne
push
iret
sub
or
pop
sarl
pop
fs
cwtl
mov
add
loopne
fs
mov
cmp
mov
les
jmp
mov
cli
add
loope
nop
cmpsl
mov
ds
jl
int3
xchg
jmp
push
nop
scas
mov
lcall
xchg
mov
xor
jnp
push
mov
lahf
mov
mov
mov
cli
xchg
inc
xchg
add
add
add
push
pop
or
adc
pop
in
fmuls
adc
or
or
add
adc
cli
dec
js
js
mov
pop
cmpsl
movb
or
fisttpll
sbb
jo
lret
mov
idivb
pushl
test
pop
test
jecxz
mov
nop
mov
and
mov
mov
movsb
xchg
jecxz
adc
test
and
ret
in
jecxz
and
sbb
popa
jmp
or
xchg
pop
mov
mov
or
inc
lea
and
mov
or
ja
jo
cld
cwtl
fidivrl
rcll
jge
lret
xor
pusha
leave
movsl
lret
fstpt
mov
push
dec
cltd
es
dec
jnp
cmp
jne
xor
xor
loope
cmpsl
jl
or
mov
sbb
cld
jmp
cs
ret
cmp
ja
stos
or
rorb
jne
push
in
mov
ret
sbb
pop
mov
push
scas
and
popf
or
mov
push
jmp
xchg
repnz
or
inc
pop
push
test
cmp
lahf
and
jmp
xorl
outsl
or
jmp
call
cli
add
mov
sti
inc
lock
or
jl
das
add
and
mulps
leave
and
cmp
xor
ljmp
cmp
sbb
in
repnz
iret
mov
xchg
je
je
push
sbb
add
pop
and
sbb
xchg
insl
xor
test
xchg
inc
inc
or
cld
add
cmp
imul
lock
push
and
nop
sub
inc
pushf
cmpsl
repnz
adc
push
bound
jo
cmp
je
inc
fiaddl
into
xor
cmpsl
or
jl
cs
andb
das
ret
scas
fcoml
dec
movsb
stos
push
xor
stos
jle
shll
mov
inc
mov
push
shll
and
push
stc
mov
loopne
adc
add
nop
mov
add
jbe
das
jmp
cs
mov
enter
insb
mov
out
movsl
lods
jne
sbb
setl
pop
repnz
push
je
sti
loop
jmp
push
mov
jle
cmp
lcall
cmp
push
adc
jge
cli
add
cmp
jne
roll
adc
jecxz
inc
or
cmpsl
inc
shrl
je
sbb
das
movswl
push
or
addb
inc
or
fistpll
sbb
int
clc
xchg
insb
ret
dec
and
adc
jl
es
adc
ficomps
jge
or
xor
loopne
pop
cld
push
cs
bound
xor
lahf
cmp
add
dec
jns
inc
int3
into
add
adc
mov
arpl
xchg
out
jne
jne
test
sbbl
sub
cltd
pusha
push
loop
jmp
rorb
cli
adc
inc
mov
xchg
sbb
or
push
aaa
test
mov
arpl
sbb
or
scas
mov
xchg
jae
inc
mov
push
cmpsb
loope
xchg
mov
shll
push
loop
je
out
daa
xchg
insl
or
cwtl
adc
sub
jg
adc
xchg
insb
pop
addb
jns
clc
popl
xchg
mov
or
lods
push
frstor
add
adc
push
lret
push
jmp
xchg
in
test
jmp
xor
or
fwait
in
ja
cmp
fwait
inc
add
negb
sbb
outsb
ljmp
add
add
add
popa
or
lods
div
mov
or
sub
adc
pop
push
mov
xchg
decb
jne
cmp
clc
add
dec
cmp
pop
call
sub
dec
clc
jmp
mov
insl
orl
shl
mov
or
fists
sarb
shr
mov
push
sub
lea
lret
xor
clc
add
inc
push
sub
insl
clc
push
dec
cmp
push
nop
push
stc
jbe
adc
cmp
fcomps
mov
aas
sub
fsubrl
in
sub
dec
push
jl
pop
pop
cmp
push
pop
jo
adc
pop
mov
mov
cmp
ja
cltd
aaa
adc
cmp
lcall
pop
push
in
popa
add
xchg
or
cli
movl
aaa
xchg
lahf
rolb
ficomps
scas
lock
mov
or
cmp
insl
jmp
stc
sbb
hlt
mov
clc
hlt
hlt
and
iret
sub
cmp
push
mov
aas
insb
cmpb
cmp
and
shrl
shrb
adc
sub
shll
mov
cwtl
orl
lret
pop
cwtl
sub
cmp
fcoml
ds
xchg
roll
push
mov
push
and
in
filds
add
jns
inc
lock
jle
push
in
mov
jmp
shrl
icebp
hlt
cmp
icebp
inc
mov
sbb
sbbl
out
inc
xchg
aaa
cmp
stc
mov
inc
hlt
push
push
jo
mov
popa
pop
gs
negb
sbb
jmp
aaa
sbb
adc
rcll
shrb
ret
aaa
and
clc
jne
add
sbb
aad
lret
and
sbb
andl
sbb
push
clc
and
int
or
je
mov
enter
sbb
sub
jne
cmpsb
jmp
sarl
push
dec
mov
or
xor
jmp
or
xchg
xor
adc
aas
ficoms
adc
jmp
fidivs
dec
test
jge
shrb
sub
in
sbb
in
clc
cltd
add
das
sub
jnp
fwait
add
pop
push
adc
call
push
popa
pusha
xchg
xchg
imul
testl
pop
add
push
xchg
je
add
fists
and
les
or
add
sar
inc
testl
mov
xchg
test
xchg
adc
lahf
lods
ror
xchg
jne
pop
mov
xchg
mov
loope
mov
jecxz
pusha
icebp
jbe
xchg
mov
bound
shll
adcl
int3
enter
sub
filds
mov
push
aaa
cld
ljmp
mov
push
sbb
mov
pop
test
out
cwtl
mov
fcoms
pusha
das
or
dec
call
fdivrl
test
aas
push
or
call
push
mov
adc
cmp
imul
mov
adc
popa
mov
dec
and
fdiv
cmp
jne
scas
aam
add
gs
push
jecxz
add
inc
sub
or
mov
xor
or
pop
or
cmpl
pop
pop
ret
or
cmp
ret
push
sarb
adc
push
xchg
push
leave
test
xchg
sti
and
mov
or
jnp
xor
cltd
popa
rclb
cmp
dec
mov
push
mov
aas
or
mov
mov
adc
mov
add
adc
test
fiadds
and
imul
nop
and
or
pop
mov
fwait
push
inc
sub
cmp
inc
sub
icebp
clc
hlt
pop
mov
cmp
pusha
punpckldq
sbb
mov
ret
inc
add
in
ret
mov
push
push
or
shrb
xchg
sbb
pop
and
and
mov
ljmp
mov
xor
ret
or
or
repz
call
add
cmp
adc
add
push
xchg
add
mov
mov
dec
mov
fbld
lock
clc
or
jo
cld
mov
pop
mov
xchg
fldl
add
or
arpl
dec
scas
pushf
cmp
movl
fs
push
lea
in
hlt
je
add
std
imul
inc
in
shrb
pop
ds
icebp
fiadds
movsb
inc
lods
mov
test
push
bound
cld
xchg
add
pop
scas
test
mov
dec
test
push
movb
cmp
add
adc
mov
push
pop
insl
push
sub
push
jnp
mov
orb
sbb
movsl
mov
inc
pop
sbb
inc
inc
inc
push
add
mov
mov
or
sub
sub
inc
imul
cmp
out
cmc
inc
pop
stc
or
and
mov
dec
pop
dec
sbb
sbb
dec
xor
push
pop
inc
and
xor
or
or
std
dec
adc
push
loope
add
lea
repz
or
jle
hlt
out
sbb
shlb
mov
das
push
pop
pop
pop
clc
ret
lds
xchg
mov
add
xor
lods
xchg
mov
mov
out
push
cmp
add
gs
push
movsl
xor
shrb
and
add
mov
jmp
inc
addl
jecxz
cmp
xor
sub
daa
cmp
cmp
jb
mov
add
and
out
lock
fdivrs
enter
dec
mov
mov
mov
orb
sahf
fdivl
adc
jb
or
inc
mov
add
lods
add
int3
mov
popf
jne
sti
adc
in
mov
test
mov
and
mov
and
sub
pusha
push
mov
loope
pop
fs
pushf
cmp
inc
dec
mov
adc
jbe
loopne
das
clc
jne
popf
fsubl
xor
pop
addr16
dec
push
fmul
add
fcmovb
xchg
add
add
shlb
pop
in
sub
in
push
xor
add
mov
sub
cli
adc
add
inc
xlat
push
pop
or
loopne
sbb
les
inc
test
inc
sub
or
aaa
adc
pusha
fstl
sti
mov
cltd
add
enter
loopne
jl
lock
movl
stos
xchg
stos
push
jnp
cmp
xor
movsl
xor
xchg
sub
inc
adc
sbb
add
in
xchg
repnz
enter
add
std
push
cs
pop
push
adc
fwait
xchg
add
adc
shl
inc
comiss
mov
mov
pusha
and
rcl
mov
ja
and
lods
lret
mov
and
adc
repnz
or
jnp
sub
adcb
add
mov
shr
pusha
pop
push
lea
cltd
add
add
in
lret
daa
add
push
lret
add
imul
sar
fcmovnbe
stc
jmp
lea
cmc
add
test
sbb
jmp
push
xor
ret
loopne
loopne
addb
jae
cld
jo
sbb
or
mov
jae
les
or
mov
jno
adc
decl
cmpsb
and
jecxz
fsts
sti
shr
push
sbb
mov
inc
loopne
test
or
xor
add
pop
cmp
cli
mov
cli
mov
add
shrb
add
popf
subl
mov
mov
cmp
push
mov
inc
ljmp
xchg
push
mov
jmp
jge
insb
adc
loopne
insb
push
and
and
sub
jne
shlb
dec
xlat
push
jbe
in
js
int
mov
push
loope
lds
mov
clc
push
or
push
pop
cmpsb
dec
cmpsb
shr
fsub
xor
and
or
dec
in
nop
popl
cmc
repnz
ret
mov
fwait
mov
shlb
aam
push
push
mov
insl
xor
jmp
sub
xor
xor
rcr
jno
push
out
pop
xchg
arpl
dec
jne
add
adcb
mov
inc
fcoms
push
fildl
inc
xchg
jne
roll
add
jmp
cmp
shl
inc
cmp
push
adc
push
xchg
test
loope
dec
pop
cmp
and
or
enter
push
imul
rcll
aam
mov
adc
sbb
ret
add
pop
fimull
jb
neg
cmp
xor
cmp
daa
or
xor
mov
push
fwait
xchg
loope
xor
mov
fcoms
cmpsb
push
scas
add
les
clc
jne,pn
xchg
jl
aas
daa
dec
jne
dec
jne
push
jb
sub
jo
aaa
pop
lcall
jp
xor
adc
lods
sub
jge
xchg
popa
loopne
mov
jl
std
sbb
dec
cmp
mov
cmp
jmp
add
pop
push
mov
add
les
or
inc
add
lahf
pop
push
movsb
push
imul
inc
movsl
lods
aas
lret
cwtl
mov
bound
sub
xchg
cmp
push
sub
call
mov
lea
fdivl
pop
aad
mov
mov
add
inc
or
mov
push
or
push
hlt
or
mov
push
add
cmpsl
roll
add
insb
adc
jecxz
lcall
sub
pop
out
andl
popl
cmp
sti
fsubrs
or
pop
imul
mov
or
mov
cmp
and
out
lea
lret
cmc
stc
std
and
pop
je
cmp
insb
int
cmp
insb
jbe
mov
rcrb
hlt
jmp
cs
movl
sahf
xchg
jmp
xchg
mov
and
or
xor
jo
push
add
in
jge
inc
call
mov
adc
pop
aad
adc
in
mov
popa
jb
fnstcw
jmp
and
movsb
sub
sbb
jmp
add
sbb
pop
bound
push
ds
push
cmp
dec
push
xlat
pop
sub
add
ds
inc
rcll
push
shrb
sbb
pop
lea
push
lea
in
mov
sbb
addb
sub
add
rol
fnstcw
bound
sbb
sbb
loopne
movsl
rcr
xchg
push
fiadds
movsl
add
sbb
adc
mov
fadds
int3
adcb
hlt
add
mov
push
mov
das
or
mov
sub
push
ret
dec
stc
push
inc
nop
cs
push
fbstp
xchg
pusha
xor
mov
xchg
xchg
mov
movsb
cwtl
mov
cltd
fcomps
clc
fwait
mov
fstps
xor
inc
ss
dec
dec
xor
lea
push
dec
js
scas
or
push
fdivl
mov
mov
mov
inc
in
leave
push
fsub
nop
push
pop
adc
fs
xchg
inc
sarb
xor
adc
sbb
rcrl
cmp
xchg
cmp
xor
or
movsb
nop
dec
dec
in
mov
add
sub
cmp
cwtl
mov
sub
inc
sub
pop
mov
insb
push
xchg
jne
pop
pop
xchg
test
push
or
aad
roll
mov
test
cmp
scas
sbb
adc
ss
xor
test
xor
nop
fs
jo
lods
pushf
cmp
pop
sarb
mov
sahf
dec
xor
xchg
dec
scas
mov
xchg
lcall
mov
fs
cltd
mov
test
mov
inc
cmp
push
popa
or
or
xor
or
les
push
or
jo
push
pop
xor
jae
cs
push
mov
outsb
push
adc
jge
mov
enter
and
into
adc
or
sub
and
imul
adc
push
repnz
sub
push
in
test
sub
dec
cmp
ret
xor
xor
nop
inc
inc
dec
nop
dec
imul
pop
or
or
movsl
scas
cmp
test
ja
xor
jecxz
xchg
add
pushf
shl
add
inc
jg
push
adc
cmpl
stos
xchg
or
popa
add
jbe
mov
jmp
cmp
pop
js
fimuls
adcl
add
add
pusha
mov
fldl
xchg
outsl
hlt
adc
xor
or
mov
aam
xchg
jns
dec
in
test
or
arpl
jg
ret
push
adc
pop
sti
cld
shl
push
test
addb
cmp
or
or
mov
and
ds
lock
ret
insb
inc
sub
mov
inc
push
cmp
jl
rcll
sub
hlt
mov
out
jmp
jae
lcall
loop
xor
sbb
shll
mov
ret
in
adc
fdivl
cmp
shr
jb
dec
rcrl
inc
rcll
shrb
mov
jae
gs
adc
push
aas
mov
jnp
cmp
cld
push
pop
rcrl
popa
cld
cmp
mov
inc
mov
les
sub
jmp
sti
clc
mov
mov
shrl
mov
js
imull
and
sub
loopne
loopne,pt
and
inc
js
xor
or
les
in
or
pusha
adc
mov
clc
xor
mov
jle
movl
mov
daa
xor
or
fsubrl
fisttpll
rorb
fcmovbe
xchg
jmp
nop
std
xor
test
shl
mov
or
or
sub
scas
jge
inc
or
test
jne
jno
and
inc
cmp
je
or
push
mov
xor
mov
mov
xchg
push
leave
push
clc
arpl
push
jne
push
add
jmp
mov
lahf
jmp
dec
movsb
js
pusha
shr
ljmp
ss
add
dec
sbb
xor
jne
mov
push
sbb
push
jg
sbb
and
je
cmpl
je
shrb
punpckhbw
in
xorl
xchg
mov
clc
inc
mov
add
mov
xchg
inc
push
inc
cltd
cmp
clc
call
pop
xor
pop
ja
xor
pop
adc
pop
lods
jge
add
pop
adc
add
xchg
dec
and
pop
mov
cltd
insb
imul
cmp
jge
mov
push
popa
in
cmpsl
jmp
je
pop
xor
scas
daa
and
dec
sbb
jnp
xor
hlt
lea
cmpsl
push
mov
es
movsb
insb
cs
add
stc
addr16
xchg
shld
jge
jns
xor
int3
mov
dec
dec
je
jmp
nop
xchg
stos
test
jge
or
jecxz
push
xor
shl
fxch
xor
xchg
xor
jmp
int
jmp
push
pop
aas
add
or
add
push
and
add
add
add
test
pop
ja
mov
cmp
lock
add
mov
push
inc
inc
push
sbb
inc
xchg
jb
jl
inc
inc
add
test
loopne
jg
call
mov
mov
push
mov
hlt
clc
mov
xor
cmpsl
lods
shlb
les
push
aas
sarb
das
arpl
cmp
sub
and
pushf
mov
xor
out
adc
imul
pop
test
in
adc
adc
sbb
repz
pop
cmpsl
add
dec
in
int3
ljmp
xor
xor
push
jmp
sti
mov
add
xlat
pop
mov
or
push
dec
push
dec
into
arpl
jae
mov
inc
xor
dec
sahf
nop
sub
inc
push
cmp
lods
pop
or
cmp
dec
aam
lock
sub
int3
ret
test
add
dec
adc
or
aaa
mov
call
lsl
and
lea
vminps
sbb
cltd
movsb
cmp
int3
mov
pop
mov
push
fadd
add
ja
js
lock
xor
add
or
mov
cld
cld
inc
mov
push
dec
inc
dec
lods
xchg
cmpsb
sbb
push
inc
and
xlat
imul
test
and
mov
xor
push
mov
mov
cld
clc
flds
mov
int
aas
sub
inc
movsl
mov
sbb
add
pusha
xor
loopne
or
mov
add
hlt
xorl
or
push
popa
mov
test
push
lods
mov
mov
inc
cmp
int3
dec
nop
sbb
mov
pop
adc
test
lahf
ret
or
dec
dec
out
pusha
ret
ret
mov
pop
mov
sbb
jl
js
lds
ret
mov
lods
rcrl
jl
and
adc
push
sub
adc
adc
inc
icebp
mov
add
mov
test
test
add
xchg
movsl
cltd
pop
mov
and
xchg
push
add
mov
dec
imul
push
fisubl
push
push
jno
inc
in
and
rcl
xchg
adc
addb
insl
sub
lock
les
pop
cs
je
lret
in
fsub
xor
mov
lret
mov
adc
jo
shlb
mov
push
sub
loopne
bswap
and
jo
popa
in
add
mov
push
add
sbb
add
dec
dec
out
push
cmp
sbb
movaps
pop
test
arpl
out
add
std
outsb
xor
movl
sub
fsubs
inc
or
cltd
inc
shlb
or
push
cmp
cltd
lret
cmp
cmp
mov
adc
mov
and
sub
lahf
sarb
push
jecxz
pusha
or
or
lea
popa
test
cmp
or
inc
inc
mov
jmp
jecxz
ljmp
mov
adc
xchg
pop
cmp
jo
lret
loopne
dec
mov
sbb
add
outsl
adc
jecxz
ret
pushf
mov
jmp
aaa
clc
mov
shr
xor
mov
xor
mov
push
lods
test
jb
or
hlt
sub
xor
mov
inc
scas
je
or
pop
jb
cmp
push
mov
cmpsb
mov
cld
or
push
test
sbb
or
jne
stos
fnsave
adc
fdivs
clc
mov
hlt
pop
mov
stc
or
push
js
and
cmp
int3
pop
shlb
and
or
sub
xor
adc
mov
or
out
insl
movsb
push
ret
loopne
sub
int3
test
addr16
shlb
wbinvd
mov
mov
mov
mov
push
in
lods
cmpsb
mov
xchg
push
pop
test
adcl
sub
inc
pop
shl
or
loop,pn
ret
or
je
mov
shll
js
bound
push
adc
cmp
sub
adc
popf
test
push
es
cmp
add
sti
clc
imul
add
mov
or
fcompl
cmp
jbe
jne
pop
repnz
pop
xchg
push
enter
push
jns
jmp
out
les
in
mov
mov
test
push
mov
inc
movsb
sub
sar
push
jecxz
xor
or
push
rorl
enter
int3
call
mov
addl
add
bound
adc
dec
and
test
imul
movsl
add
int
and
push
hlt
lea
inc
adc
nop
les
mov
add
bound
sbb
data16
dec
and
loopne
cmp
ret
fnstenv
push
mov
adc
push
in
out
push
push
mov
cmp
inc
or
adc
mov
arpl
cmp
hlt
and
out
pop
iret
lcall
in
lahf
xor
xchg
and
inc
ret
movsb
jecxz
xchg
call
mov
mov
sub
lea
aad
push
push
xchg
outsb
popf
rcl
loop
std
sahf
push
loopne
xor
add
xor
lds
adc
je
enter
test
lret
jecxz
in
and
sub
push
push
dec
xchg
jl
mov
pop
test
dec
sbb
push
cmp
cmpsl
lods
or
xor
sub
xor
xor
or
in
xor
shlb
dec
cmp
cld
dec
popf
cmc
fildll
dec
mov
push
jno
bswap
in
into
cmp
add
push
aas
sub
sbb
outsl
loope
inc
jge
inc
fcomps
adc
push
les
ss
or
imul
mov
add
jl
jl
pop
cli
add
adc
xor
lods
shrl
int3
sbb
decl
rclb
mov
cmp
stos
mov
rclb
ret
pushf
push
and
cmp
jle
adc
lock
pop
loopne
fmull
shlb
adc
mov
jp
lods
pusha
cltd
or
mov
push
enter
push
fldt
push
andb
pop
add
fisttpll
mov
sar
stos
mov
sar
sub
adc
lock
movsl
adc
jecxz
rcrb
mov
push
lahf
loop
push
jecxz
in
sub
insl
sub
jo
pop
pop
mov
xor
mov
xchg
mov
or
and
mov
gs
pop
outsl
clc
jo
xchg
cmp
in
jno
xchg
aam
sub
fs
jns
push
mov
mov
mov
and
jg
mov
push
enter
xchg
mov
dec
dec
mov
or
or
sub
dec
or
inc
pop
push
je
in
pop
add
call
rolb
lods
lea
sub
pushf
inc
out
sub
or
add
adc
insb
dec
mov
js
xchg
stos
fs
lret
or
jne
jo
lock
jp
or
notl
das
jl
stos
cltd
stos
mov
out
add
add
adc
cmp
test
adc
in
or
int3
or
xorl
frstor
or
test
pop
pop
add
cltd
inc
push
mov
xchg
and
test
inc
in
cld
lock
adc
xchg
push
mov
push
ljmp
fldl
jp
shlb
fildl
outsl
aas
enter
inc
lahf
stos
jno
insl
mov
jnp
lea
pop
sbb
push
imul
movsb
loopne
cli
pop
idiv
outsl
stos
sbb
loope
roll
js
pop
cltd
xor
mov
xor
jns
arpl
arpl
push
mov
xor
mov
xor
adc
sbb
jmp
push
mov
inc
pop
add
imull
adc
jno
mov
aad
sbb
pop
cwtl
jnp
xor
or
mov
xchg
dec
mov
dec
dec
pop
sub
mov
and
jnp
or
cwtl
sub
dec
lcall
sbb
add
cmp
test
push
mov
and
mov
dec
cwtl
sbb
pop
pushf
shl
cltd
push
clc
dec
and
mov
in
stos
push
jle
pop
or
and
in
stc
insb
out
leave
mov
jo
push
call
push
inc
jge
cmp
jle
and
adc
push
mov
add
shll
loopne
push
js
adc
cmp
ja
adc
lods
ret
push
lods
cld
clc
fbstp
mov
cmp
and
out
pop
cmp
nop
pop
xor
test
test
sbb
cld
or
cltd
cs
jp
out
inc
loop
pop
lret
sahf
lret
es
sarb
enter
scas
punpcklbw
cltd
adc
or
mov
sbb
adc
sarl
jae
xor
sbb
test
add
or
adc
pop
lock
lret
jge
push
addr16
lahf
pop
push
ja
mov
mov
push
data16
imulb
pop
push
push
mov
ss
jge
ljmp
adc
mov
pop
xor
insl
inc
outsl
push
adc
cld
pushf
movsb
add
inc
nop
ffree
sbb
loope
das
movsb
insl
insb
cmp
push
lods
nop
dec
lret
adc
mov
jle
jmp
push
lock
xlat
mov
pop
andl
inc
pop
mov
in
jne
mov
inc
add
aam
fcomp
loopne
push
cmp
rorl
inc
sahf
inc
inc
jb
dec
mov
aas
pop
jo
je
shlb
add
hlt
pop
cmp
movq
hlt
jmp
or
je
lcall
add
jp
add
jno
cmp
push
mov
push
movsl
addl
sarl
mov
xor
push
out
enter
out
add
dec
inc
in
lret
add
xchg
int3
in
jmp
in
push
mov
inc
mov
xor
shrb
in
mov
test
call
dec
adc
arpl
mov
das
scas
mov
mov
mov
push
enter
and
popf
sub
or
xor
mov
or
pop
pop
mov
adc
stos
dec
pop
push
insl
incl
jnp
and
je
mov
adc
mov
push
ret
and
sbbl
or
inc
push
adc
and
jg
and
das
dec
add
xor
jmp
push
imul
add
mov
daa
icebp
cltd
mov
shrb
lahf
shlb
je
repnz
ret
push
cmp
push
outsl
push
xchg
aaa
aad
rorb
mov
dec
rolb
xlat
daa
js
jl
push
jl
and
push
add
jno
add
jmp
nop
pop
aas
mov
or
pop
mov
bound
nop
pop
clc
in
mov
imull
lea
push
push
sbb
arpl
jo
push
loopne
mov
les
es
clc
arpl
push
testb
sub
mov
mov
inc
xchg
lea
jbe
sub
ds
xor
lret
cmp
sub
sbb
push
adc
sarb
mov
mov
rclb
dec
add
std
dec
cmp
xor
inc
mov
ror
add
push
mov
test
mov
mov
mov
loopne
std
aam
sub
pusha
mov
aam
add
adc
jne
xor
push
sub
cmc
nop
negb
cltd
push
pop
mov
xor
xchg
loopne
mov
dec
int
mov
in
and
cmp
std
addb
inc
imul
fmuls
sbb
jne
xchg
je
fisubrs
rolb
sub
add
lock
das
js
mov
xor
fwait
and
jae
dec
fdivrl
roll
jne
cli
or
mov
fmul
push
ss
add
cmp
rolb
test
xchg
dec
push
xor
sti
and
popa
push
mov
int
int3
sbb
es
pop
fcomi
js
es
jmp
enter
fnstsw
mov
sbb
jne
dec
jmp
in
inc
mov
out
cmp
jb
and
ljmp
mov
sbb
ret
xchg
push
mov
and
jmp
lahf
or
nop
mov
add
mov
imul
and
enter
jmp
jle
dec
add
dec
jge
add
outsl
repnz
mov
jnp
adc
push
inc
add
mov
cwtl
cmc
add
mov
cld
push
popf
lock
lock
call
cmpsb
loopne
dec
and
cmpsb
push
test
add
jmp
push
lods
inc
push
aas
movl
call
mov
add
out
push
rcrb
lahf
inc
mov
inc
jmp
xor
popf
xor
test
push
lods
mov
xchg
dec
jge
adc
inc
outsl
dec
mov
aam
sbb
adc
pop
insl
sbb
mov
sub
or
add
sbb
mov
mov
cmp
or
lret
adc
shr
dec
xor
mov
mov
sbb
cmpsb
xchg
lret
sti
push
pushl
fidivrs
in
add
push
push
call
bound
xchg
or
sahf
pop
or
and
pop
je
xor
add
leave
sbb
or
and
inc
je
orb
sbb
sbb
mov
lock
pop
je
pop
cmp
push
cli
jl
mov
loopne
test
loop
jecxz
dec
orb
shr
aas
jmp
movsl
rcr
mov
mov
cmp
xlat
test
jbe
bswap
mov
inc
test
movsl
push
dec
mov
pop
scas
sbb
je
les
aad
add
loope
jne
inc
or
push
shlb
cmpsl
or
jbe
mov
fcoml
test
fsubrs
sub
es
or
fstpt
pop
add
loopne
dec
rolb
aad
leave
dec
jmp
sbb
call
xchg
adc
pop
jg
in
mov
add
cmpb
push
xor
xor
std
out
pop
ret
adc
incb
stc
sub
lea
bound
or
mov
inc
dec
jne
test
pop
jne
dec
mov
fisubrs
pop
mov
pop
push
vorps
shrl
push
lds
inc
or
cmp
or
push
push
loopne
lods
mov
lcall
je
mov
push
push
pushl
mov
inc
xor
add
ds
movsb
inc
into
es
jge
sbb
cmpsb
mov
fs
out
push
dec
cmp
sbb
inc
jmp
push
xor
popf
into
imul
pop
lock
mov
mov
dec
cli
out
ret
cmp
or
lock
call
pop
or
push
mov
jne
cmp
int
adc
xor
ret
scas
xor
call
mov
subb
mov
inc
mov
jne
movl
mov
push
mov
pop
adc
mov
inc
rcll
add
push
scas
shlb
jg
shlb
or
aam
xor
mov
lcall
push
mov
mov
inc
pop
std
or
jno
dec
mov
cmp
jb
neg
add
add
sub
mov
add
data16
dec
push
jne
shl
rorl
jmp
mov
or
rcrb
aaa
mov
push
clc
sub
das
push
les
shlb
enter
clc
push
jb
dec
shrl
xchg
mov
add
add
bswap
push
push
cmc
push
faddl
pop
jl
mov
xchg
mov
mov
arpl
loopne
leave
sub
mov
xchg
pusha
movsl
sub
fs
arpl
ss
clc
inc
mov
add
or
test
mov
movsl
les
cmp
mov
iret
lock
loop
cld
push
rclb
cld
sub
mov
or
roll
adc
and
lds
inc
mov
xor
sbb
leave
dec
inc
mov
outsb
jbe
jns
adc
mov
jbe
gs
push
addl
stc
jo
aaa
loopne
pop
add
inc
xor
adc
sbb
cltd
js
mov
rcrl
xor
rolb
mov
sbb
lock
in
and
pop
mov
pop
aam
push
push
mov
out
fiadds
popf
sahf
enter
call
jge
rclb
sub
mov
in
subb
pushl
inc
aam
pop
xchg
enter
ds
pop
sub
push
jae
pusha
mov
mov
ret
cltd
adc
dec
ret
and
je
aas
ror
jb
inc
and
inc
jmp
jmp
ret
repnz
sbb
jo
or
adc
in
in
add
sbb
add
call
insl
cltd
push
push
xchg
jge
xchg
cs
cmp
cmp
imul
cmp
jae
inc
les
mov
jmp
cmp
jecxz
cmpsl
dec
add
and
adc
sarl
adc
dec
add
add
inc
int3
pusha
add
loop
std
push
clc
jge
sub
xor
neg
sbb
ja
cmp
jbe
addl
jmp
push
cwtl
repnz
mov
sbb
mov
sub
in
xlat
loope
or
repnz
inc
out
mov
dec
test
jg
popf
repnz
pop
dec
add
mov
pop
push
xchg
cmp
mov
sbb
push
pop
jl
xchg
push
pop
sbb
xor
jl
ljmp
jo
shl
hlt
fsubrs
sbb
rclb
ds
call
push
jbe
mov
imull
sub
inc
xor
pop
inc
xor
fwait
mov
testl
pop
xor
lahf
clc
sub
xor
jae
pop
movsb
adc
lds
mov
mov
je
mov
je,pn
push
push
lea
xor
xor
xor
sub
divb
adc
mov
jmp
mov
xchg
psubusb
sti
fidivrs
adc
fs
sbb
cwtl
push
out
mov
and
or
test
js
xor
inc
in
jl
add
test
or
mov
push
adc
punpckhdq
stos
pop
sub
dec
pop
push
sub
sub
xor
rcr
push
dec
jecxz
and
and
daa
xchg
push
push
pop
mov
test
xor
inc
je
push
or
add
pop
lret
add
imul
loopne
divl
addb
nop
xchg
push
movl
push
jo
and
mov
imul
cmp
add
mov
pop
out
stc
pop
or
rorb
fisttps
cwtl
neg
pop
sbb
pop
inc
shr
push
or
xchg
loop
jle
push
roll
cmp
jbe
clc
jb
push
cmp
rcrl
push
pop
and
out
popa
mov
and
dec
pop
pop
adc
sti
push
fcomi
cmp
inc
mov
mov
stc
mov
xchg
or
fdivs
in
adc
mov
mov
jb
loopne
add
xor
mov
lea
lahf
mull
les
call
mov
mov
mov
or
and
in
scas
adc
cwtl
das
in
lea
dec
add
movl
cmpsb
inc
add
ficomps
nop
dec
add
push
jns
out
dec
inc
cmp
sub
mov
mov
jns
out
in
in
lock
sarb
out
clc
clc
cld
sub
add
lock
fnstcw
push
sbb
mov
cwtl
lods
and
or
or
mov
inc
pop
sti
ret
pusha
sbb
and
loop
mov
lea
jl
cld
or
std
cld
out
adc
inc
neg
enter
adc
rolb
daa
stc
jnp
mov
inc
pop
nop
and
dec
push
fcmovne
ror
jo
add
out
add
out
add
aaa
adc
mov
dec
addr16
add
roll
ljmp
dec
les
int3
push
aam
in
mov
pop
inc
ss
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
and
jnp
sub
cmp
lds
push
push
add
pop
prefetchw
lock
cmp
push
pop
mov
popf
fadds
push
cmp
lret
gs
sbb
push
dec
sbb
push
pop
mov
push
add
mov
ds
cmp
adc
mov
or
lcall
fildl
popf
and
jmp
scas
pop
pop
out
sub
stc
je
inc
jb
shl
sub
dec
jo
adcb
sbb
mov
roll
add
ja
mov
jb
mov
es
cmp
and
push
cld
mov
inc
push
adc
pop
stos
inc
add
adc
xor
pop
arpl
add
addr16
xor
mov
rcrl
fucomip
outsl
inc
fiaddl
push
cmp
inc
fiadds
push
add
xor
daa
iret
inc
hlt
daa
clc
inc
push
inc
outsl
repz
sbb
jae
testl
ss
lret
or
repz
jns
adc
or
jno
sbb
mov
add
add
repz
rolb
push
xchg
add
daa
into
sub
dec
repnz
dec
adc
or
hlt
or
sub
sbb
mov
out
testb
loop
jl
dec
or
push
push
scas
pop
push
jp
jo
fadd
inc
cld
fwait
scas
fcmovne
sbb
es
stos
add
push
lods
sti
sti
mov
adc
mov
les
cmp
jne
inc
inc
inc
inc
jmp
and
rcrb
shrl
jecxz
shrl
testb
mov
loop
mov
mov
inc
inc
sbbb
sbb
and
loopne
mov
in
cmp
jg
ret
rep
adc
data16
push
insl
movb
arpl
inc
scas
dec
insb
mov
or
dec
add
push
cmp
dec
mov
mov
push
add
decl
mov
push
mov
aas
lds
jnp
push
adc
aas
or
add
jo
adc
sub
enter
out
pop
sbb
inc
add
outsl
mov
into
and
sbb
movsl
pushf
adc
cmp
pusha
ja
mov
xor
jge
in
inc
add
and
jmp
jp
and
xor
pop
inc
in
insb
jg
adcb
int3
add
jno
es
mov
mov
in
mov
add
cmpb
pusha
jo
mov
push
jecxz
sbb
and
mov
loope
pop
sub
push
adcl
dec
push
inc
cmpsb
in
out
pop
inc
dec
jl
pushl
add
jge
cmp
into
pop
mov
cmc
push
arpl
stos
rorl
add
cld
cmp
jne
inc
push
lea
lret
add
jbe
sbb
adc
jnp
push
push
mov
jb
daa
cmp
inc
imul
add
xor
cmp
movq
jl
cmpb
cmp
jb
cmp
jl
jg
outsl
inc
xchg
jbe
add
int
and
pusha
repz
orb
add
cld
mov
dec
leave
hlt
mov
decb
icebp
mov
hlt
add
jbe
fcomps
in
push
sbb
push
mov
hlt
push
xor
andl
xor
test
cmpsl
popf
out
adc
xor
sbb
jae
popf
jge
sub
sbb
push
imul
cmp
and
clc
js
cmp
add
mov
xor
rcrl
ret
adc
sub
mov
sbb
cmp
jmp
sub
fidivl
repz
push
and
cld
mov
and
jbe
sarb
les
adc
aaa
dec
fs
add
push
mov
and
clc
sub
fisubl
data16
fs
sbb
sbb
sbb
sbb
jbe
mov
sub
leave
jbe
jl
idiv
sbbb
push
cltd
pop
idiv
add
mov
or
lahf
iret
int
lods
dec
jg
jl
out
lea
cltd
cltd
add
push
push
jns
rcrl
out
aam
decl
xor
adc
mov
cmp
cwtl
stos
adc
cmc
pop
testb
pop
not
pop
and
shrl
pop
enter
fistps
add
push
call
and
push
push
xchg
adc
sub
push
pop
lock
add
andl
pop
pusha
cvtps2pi
xchg
push
in
xchg
cmp
push
outsl
subl
enter
xor
imul
fdivp
pop
cld
mov
or
test
scas
jl
mov
sbb
movsb
in
inc
jne
mov
sbb
add
decl
jbe
xor
cmp
cli
in
pop
mov
pop
jne
jb
push
int
out
sti
popa
rorl
ss
and
cmc
nop
adc
mov
inc
ljmp
cmp
pop
rolb
cmp
dec
inc
mov
mov
dec
inc
clc
or
inc
addb
jbe
or
cmp
add
push
inc
and
enter
mov
lods
push
push
sbb
pop
jne
pop
in
push
fnstsw
jp
add
int3
or
lret
jl
aas
shll
bound
dec
sub
hlt
aaa
out
push
shr
adc
and
adc
dec
test
stc
pop
mov
jg
cmp
ret
adc
decl
in
jle
or
jmp
shr
ret
or
sbb
push
inc
adc
and
inc
push
popa
aas
ljmp
dec
jne
mov
lahf
daa
or
inc
mov
cli
pusha
or
incb
roll
adc
lret
mov
cwtl
or
insb
into
sub
lcall
hlt
rep
imul
lock
jg
lock
push
add
sub
adc
or
clc
jecxz
clc
or
addb
sub
in
xchg
adc
fldl
add
repnz
ret
loope
or
cltd
pop
loopne
in
push
inc
push
out
test
add
pop
aam
push
test
cmpsb
pusha
and
je
push
popf
fisubs
push
pop
sub
mov
loopne
icebp
and
loopne
mull
add
push
popa
fsubl
hlt
jnp
xorb
sub
and
jle
xor
adc
movl
les
ffree
add
jmp
sub
std
dec
jl
lock
lea
cmpb
and
in
pushf
adc
daa
sub
imul
dec
xchg
push
add
or
pop
mov
cld
add
test
sbb
jl
or
dec
dec
inc
loopne
sbb
jne
mov
ret
xlat
add
icebp
and
jle
sbb
adc
stc
insb
adc
pop
adc
cmpl
jae
outsl
lods
lods
dec
push
std
inc
jge
jne
je
movsb
jle
cmp
jl
sbb
test
pop
dec
or
xor
push
mov
inc
sahf
add
xchg
cli
jnp
mov
pushl
loope
inc
aam
jmp
pop
lcall
add
jmp
pop
out
sbb
jmp
sahf
xchg
and
jbe
push
in
inc
push
std
mov
cmp
sar
xchg
xor
cmp
je
push
and
push
cmpsb
or
jne
inc
sbb
rcrl
and
mov
sub
or
cmp
test
cmpl
sbb
cmpsb
jle
pushl
aam
out
pusha
sarl
mov
or
lret
call
and
out
mov
or
push
jl
pop
adc
fldt
cmpsb
xor
or
add
add
repz
or
jg
aas
add
or
or
jle
push
push
arpl
pop
fsubrl
jo
fstpt
addr16
add
clc
enter
jno
mov
test
or
pop
jg
jmp
nop
sar
xchg
movb
inc
cmp
jl
pop
pop
mov
leave
xchg
sbb
lock
bound
xorl
or
dec
cld
iret
loope
fmull
fneni(8087
rcrb
aaa
pushf
adcb
sub
inc
leave
xorl
in
int3
xchg
add
xor
pushl
add
mov
pop
inc
fadds
mov
mov
je
jae
or
loope
fdivs
sbb
pop
pop
sbb
xor
mov
int
loopne
and
jmp
and
push
hlt
movsl
je
fcompl
add
pop
cmp
add
cmpsb
or
adc
inc
or
sbb
push
mov
jle
adc
addb
cmp
shl
int3
dec
push
mov
xchg
pusha
in
mov
jo
aam
or
or
pop
pop
loopne
and
inc
pop
xor
and
inc
outsb
rcrb
pop
jnp
mov
jl
pop
scas
rcl
stos
ds
cmpl
shl
cmp
adc
test
cmp
movsl
and
jne
mov
inc
ret
or
mov
mov
xor
inc
adc
std
sbb
je
or
dec
fisubrl
or
negl
sub
push
ja
cmp
pop
sbb
mov
xor
add
or
test
inc
out
sbb
xor
pushl
mov
jo
push
xlat
mov
fsts
push
push
dec
adc
push
testb
decl
push
push
testb
lret
je
addr16
cltd
aam
push
rolb
ja
cmpl
jne
cli
jg
jl
or
pushf
cmp
or
je
or
ja
xchg
je
mov
sbb
xor
mov
mov
sbb
imul
pusha
mov
or
add
sbb
jmp
ss
dec
popa
jecxz
push
mov
jo
repnz
adc
js
xor
sbb
fmuls
adc
and
sarb
cmp
dec
je
dec
jne
bound
ja
adc
loopne
push
or
sbb
pop
add
or
test
adcl
mov
cmp
add
arpl
mov
aaa
fists
adc
push
icebp
enter
fcoml
arpl
test
mov
sti
sub
adc
adcb
adc
or
mov
cmpb
lea
or
cmp
je
pop
cmc
and
push
push
push
out
push
movsl
ret
push
add
sbbb
es
mov
ss
push
ja
push
jb
ljmp
inc
cmp
jae
push
cmp
jl
mov
inc
or
mov
sahf
jp
adc
mov
addb
pop
lock
jno
sti
testb
jne
clc
push
mov
in
loopne
lods
add
into
push
ljmp
jb
pop
pop
pop
pop
sub
aad
add
cmp
mov
push
pushf
in
dec
stos
sbb
pushl
enter
adc
mov
icebp
cmp
scas
xor
std
mov
xlat
dec
mov
adc
or
incl
sbb
cmc
add
insl
xor
or
jne
and
cmp
imull
xor
jne
jmp
fcmovnb
out
scas
in
rcll
mov
mov
adc
dec
dec
mov
mov
mov
dec
cmpb
jle
xchg
cwtl
shl
mov
sbb
mov
add
sub
inc
es
xchg
cmp
lret
repz
nop
aam
cld
fwait
push
inc
push
or
mov
push
jle
jecxz
test
push
jbe
inc
loopne
clc
insl
jnp
dec
inc
push
lock
jae
mov
adcl
jo
jl
push
sbb
loope
inc
fiaddl
adc
pop
cmpsb
jno
call
jbe
add
test
sbb
lcall
ret
add
dec
jg
adc
orl
cmp
mov
hlt
cmp
jecxz
dec
jne
aad
or
or
rolb
lret
nop
cmpb
mov
clc
push
or
fisttpll
scas
negb
std
jb
mov
xchg
or
add
adc
sub
sub
mov
sbb
push
dec
or
mov
mov
out
jnp
int3
mov
lret
test
test
pop
js
ljmp
inc
push
mov
fadd
or
cmp
adc
jns
mov
fldenv
dec
and
nop
lcall
xlat
je
cmp
adc
cmp
jb
testb
out
and
xchg
insb
testb
int3
inc
faddp
pop
dec
sbb
jge
cmp
add
inc
in
inc
jnp
cwtl
and
cmp
jne
loop
jecxz
cmpl
sub
pop
adc
daa
mov
push
or
addl
in
push
out
sbb
movsb
gs
push
call
call
and
fsubl
mov
or
adc
loopne
or
fidivrl
mov
mov
inc
sub
je
push
cmp
shl
pop
mov
in
daa
mov
in
push
jo
mov
and
pop
mov
movsb
sbb
stos
sbb
shlb
pop
mov
push
pop
cmc
and
dec
push
cld
insb
bnd
pop
cs
out
call
push
jne
and
push
mov
and
mov
and
mov
add
xor
aas
push
lods
inc
jl
jbe
sbbl
jge
adc
and
pop
push
mov
jle
cwtl
and
sbb
add
add
cld
push
jo
xchg
inc
xor
dec
add
or
mov
dec
pop
clc
je
in
addb
or
cs
or
mov
jl
bound
dec
pop
arpl
sbb
fnstsw
mov
dec
jne
adc
das
jns
cmp
xor
dec
out
cmpl
adc
sub
fs
in
and
push
sub
xor
mov
daa
sahf
jns
dec
xor
decl
decl
cmpsl
xor
push
add
icebp
cmp
mov
lret
adc
lret
pop
fcomps
xchg
inc
and
push
inc
push
movsb
gs
sbb
in
push
in
inc
inc
data16
inc
push
dec
pop
cmp
inc
xor
mov
test
push
repnz
je
movsb
jno
movsb
and
sub
mull
sub
pop
cmp
fistl
add
or
jne
xchg
stc
mov
add
insl
jg
pop
test
add
andl
mov
pop
xor
pop
pushf
pushf
adc
nop
bt
in
test
sarl
mov
cltd
xchg
es
adc
xor
daa
test
outsb
movl
cmc
ja
mov
ljmp
addr16
mov
imul
pop
mov
and
mov
flds
sbb
or
cwtl
mov
jb
mov
cmpsl
adc
xorb
ja
std
cmp
js
lahf
mov
aas
dec
mov
cmp
fnstenv
add
xchg
push
push
test
cmpsb
shrb
inc
arpl
imul
push
in
mov
mov
mov
sbb
shrb
mov
add
pop
es
jmp
fists
jle
jne
mov
pop
pop
leave
inc
mov
sub
mov
and
push
cmovle
dec
or
add
aaa
sub
insb
pushf
test
pusha
mov
and
adc
mov
push
push
testl
les
stos
cld
xor
jbe
repz
push
push
das
and
ret
sub
adc
cwtl
loope
rcrl
push
push
dec
dec
pushf
js
inc
les
fucomi
pop
adc
dec
sub
mov
sbb
or
sarl
cmp
lea
mov
mov
push
subb
dec
cmp
mov
pop
fists
pop
sub
adc
inc
push
add
insl
in
mov
mov
jg
clc
cmpl
mov
cmp
cmp
add
mov
sbb
mov
dec
or
or
push
push
pop
pop
fadds
and
mov
mov
mov
lea
lea
xchg
adc
out
bnd
divb
or
icebp
jb
push
or
shll
jb
scas
or
inc
pop
cmp
sbb
je
mov
mov
lret
fstpt
sub
and
sub
or
sbb
mov
fidivs
sbb
jg
mov
cmpsb
dec
pop
bound
bound
adc
cmp
xor
cld
adc
dec
aas
testb
cmovb
adc
fidivl
adc
add
pop
sbb
jb
cmp
jb
mov
call
faddl
xor
jb
add
loop
mov
int
cmp
jae
inc
add
push
pop
inc
add
jbe
test
scas
and
loopne
inc
loopne
xchg
mov
movsb
xchg
mov
sub
push
mov
fs
lcall
and
lea
or
mov
sub
jg
fidivl
dec
cld
mull
mov
leave
adc
aad
imul
xor
popf
comiss
repnz
pop
push
jle
mov
cmpsb
test
add
cmp
xor
cmp
je
aaa
lea
jl
sub
pop
and
cmpsb
jns
jmp
push
inc
jge
cmp
notb
inc
mov
mov
addr16
adc
mov
jno
lds
rolb
cld
push
cli
inc
cmp
jle
push
adc
mov
adc
pop
add
mov
sub
push
rclb
ret
mov
jo
lret
add
inc
mov
repnz
cmc
scas
fwait
je
testb
cmp
in
push
dec
insl
sbb
imul
cwtl
daa
cmpb
std
jmp
out
sahf
add
mov
andl
mov
sarb
cmp
jle
aas
movsl
mov
cmp
je
dec
sub
sbb
clc
jb
icebp
clc
inc
int3
sub
pop
xor
hlt
jg
mov
jmp
and
std
sbb
mov
mov
ss
pop
sub
sub
jne
scas
xchg
jp
pop
outsb
push
adc
pop
lock
add
cmp
les
rorb
or
sub
xchg
lds
nop
lret
inc
sub
push
dec
push
dec
xchg
das
mov
fdivrl
loop
mov
pop
dec
add
cmp
rorl
js
sbb
jnp
mov
leave
shr
lds
pop
add
test
pop
cmp
cmp
insl
ljmp
je
inc
cmp
add
sbb
adc
call
stos
ss
clc
rorb
nop
sbb
shl
shrb
xchg
mov
out
push
movsl
add
adc
sub
xor
bound
mov
adc
push
jmp
outsl
movdqa
data16
jge
dec
adc
push
and
loope
outsb
sahf
addr16
push
pop
outsl
inc
or
sahf
push
repz
jle
or
push
cld
jns
jg
lea
in
mov
or
lea
dec
ret
add
out
cmp
lret
prefetch
jg
dec
mov
or
jne
test
push
ds
or
sub
adc
icebp
push
push
sub
push
lahf
push
dec
mov
call
pop
rcl
fisubrl
add
sub
lock
in
pop
add
inc
rep
insb
push
cmp
jne
xor
test
rcll
adc
cltd
or
in
jb
jp
std
push
mov
cli
push
push
ret
add
cmp
sbb
xchg
icebp
push
outsb
dec
rep
mov
test
add
hlt
shll
sbb
je
inc
jmp
add
sbb
outsl
xor
sbb
pop
xchg
fdivl
dec
sbb
push
bound
scas
push
push
dec
push
js
dec
xor
fadds
lock
test
shlb
add
xor
movsb
aas
sbbb
je
push
push
cli
sub
mov
cmp
sub
sub
mov
or
sub
loopne
fsubrl
sub
sub
sarb
aas
data16
popf
enter
aas
das
das
movsl
shrb
int
add
std
add
dec
add
sarl
enter
in
cs
aaa
dec
cld
adc
cmp
popf
xchg
outsl
pop
pop
add
rol
mov
add
adc
jnp
fcoms
nop
inc
sub
dec
or
fildl
add
xor
pop
xor
xorl
in
fdivs
dec
pop
dec
adc
inc
into
push
pop
inc
fdivr
loopne
js
pop
mov
call
push
mov
cmp
jb
lea
push
adc
push
pop
out
or
adc
fs
insb
jle
and
lods
and
mov
push
mov
jns
mov
sub
out
stc
add
push
sbb
mov
push
clc
pop
test
js
mov
fmull
xchg
repz
push
dec
ljmp
xlat
inc
xchg
lods
fldcw
aaa
jno
test
pop
inc
enter
sub
out
in
xchg
sub
nop
xor
pop
push
subb
daa
mov
push
outsb
mov
fdiv
cmp
repz
in
hlt
cld
add
popa
add
les
sub
fwait
inc
xor
cmp
dec
pop
sub
pop
add
mov
cmp
or
movsb
lcall
lcall
mov
and
add
fimull
cmp
int3
in
scas
ret
inc
dec
jne
jo
sub
pop
bound
xorl
pop
push
pop
aas
les
xor
pushf
pop
pop
dec
sbb
pop
or
ret
adc
lahf
cmp
ja
cmp
adc
push
inc
sbb
inc
and
and
dec
cmp
ret
ds
add
push
push
clc
mov
jmp
and
iret
sbb
xchg
push
lret
sub
jecxz
xlat
mov
xchg
cs
rcrb
dec
or
mov
inc
add
fisttpll
push
dec
daa
inc
int
xor
pop
mov
xchg
shl
and
add
mov
rolb
sbb
pop
or
jle
rolb
outsl
les
ret
add
add
jb
dec
add
and
out
fiadds
rorb
int
inc
dec
sub
ret
xchg
adc
std
cld
addl
imul
adc
fcoml
pmaddwd
cmp
sub
cld
fisubrs
fisttps
ja
pop
call
dec
push
ds
jae
mov
push
jge
push
push
cmp
jb
cld
inc
ficomps
push
nop
adc
lea
sub
push
jg
push
sti
add
xor
sub
mull
rcrl
mov
add
mov
je
xor
pop
pusha
aam
test
push
fidivrs
loop
inc
dec
dec
sbbl
cld
das
lods
add
ret
andl
xor
mov
cmp
xlat
pop
xchg
or
test
dec
pop
add
enter
sub
pop
icebp
inc
push
inc
packssdw
add
add
lahf
xchg
cmp
test
cmp
sahf
cs
adc
mov
shrb
push
mov
scas
sub
popf
imul
pop
hlt
test
pushf
or
iret
add
and
cmp
je
add
and
outsl
adc
aaa
testb
add
and
or
aaa
shl
bound
call
ret
xchg
jge
dec
sbb
push
sub
xchg
jne
lahf
addr16
pop
fisubrs
adc
jl
mov
inc
cmp
dec
clc
js
or
or
adc
lock
jno
push
sbb
pop
push
jne
test
add
mov
fcomps
jne
push
pop
insw
mov
ja
pop
jbe
lea
insb
sbb
adc
std
fwait
jbe
add
leave
cmp
jae
insb
or
jae
pop
push
cld
jb
push
clc
jbe
add
sub
dec
dec
test
jne
sbb
pop
test
adc
movsl
test
scas
orl
adc
addl
sbb
mov
ja
push
sub
push
jbe
or
cmpsb
add
mov
or
arpl
mov
push
ret
add
arpl
rcr
loop
mov
xor
xchg
inc
dec
mov
pop
dec
mov
and
cmpb
js
sub
lock
add
mov
add
pop
or
mov
mov
inc
pop
or
push
or
pop
cmpsb
add
arpl
xor
data16
mov
inc
push
add
or
loope
or
lea
stos
add
mov
mov
mov
inc
dec
jne
lea
daa
fwait
popa
xor
or
mov
test
add
mov
orb
add
jle
jmp
inc
div
mov
and
mov
lea
jl
push
add
cmp
ja
and
lea
test
mov
inc
pop
orl
in
fdivrs
jbe
faddl
testl
jmp
jo
push
jp
cs
sub
or
lods
cmp
inc
inc
cld
sbb
dec
and
mov
inc
adc
mov
mov
lods
jmp
and
je
and
mov
push
xchg
or
test
add
pusha
cmp
push
mov
mov
leavew
sub
mov
push
sarl
lea
sti
rorb
push
movsl
jne
jg
add
cmpsb
cli
and
outsl
mov
add
lret
cmp
jb
push
movsb
ret
cmp
push
adc
stos
clc
mov
adc
je
cmpl
movsb
and
mov
and
push
or
inc
test
xor
adc
pop
sbb
push
add
mov
inc
push
mov
and
loop
sbb
and
jge
sarb
mov
mov
push
movl
cmp
push
popa
insb
jmp
xor
std
jne
sarb
es
fcmovu
sub
mov
pop
sahf
fsubrl
jmp
ja
clc
push
je
ss
pop
push
add
push
jmp
pop
lock
or
mov
cmp
push
mov
and
in
adcb
cmp
add
adc
mov
xor
or
movsl
fnsave
push
jmp
es
adc
xchg
push
es
push
out
push
and
xor
jp
das
orl
inc
in
imul
inc
jae
cmp
jbe
scas
js
movsb
iret
push
jne
mov
test
push
cmp
sbb
leave
inc
daa
call
rorb
fimuls
sub
mul
push
into
sub
add
jmp
hlt
fildll
jle
cmp
or
lcall
mov
rcrb
inc
inc
cmpb
shrl
add
push
add
loopne
xorb
pop
call
movl
je
push
mov
adc
mov
mov
mov
inc
inc
inc
dec
jne
mov
inc
mov
es
pop
ret
jl
sbb
divb
divb
inc
or
inc
dec
jne
out
mov
mov
inc
dec
mov
cwtl
gs
mov
jmp
cmp
pop
mov
imul
or
loopne
adc
or
mov
mov
test
jne
cmp
or
and
dec
sbbb
inc
mov
sahf
sbb
sti
rep
andl
pop
add
aas
jno
addr16
push
inc
jnp
ret
faddl
and
std
dec
inc
adc
push
mov
mov
pop
push
lods
mov
add
add
adc
or
pop
mov
or
pusha
lock
call
idivl
loopne
or
dec
sub
jmp
xor
mov
or
mov
int
add
add
ret
ss
cmp
jmp
adc
out
and
ljmp
sub
and
push
and
inc
ret
push
shll
leave
ds
adc
dec
lret
and
dec
pop
movl
xchg
jnp
cli
outsl
cmp
es
add
dec
sti
pop
cmp
jne
sbb
cltd
pop
out
pushl
inc
mov
pushf
cltd
sub
lahf
jno
iret
dec
in
mov
jmp
int3
call
int3
mov
popa
pop
lret
sub
and
push
out
push
add
mov
ja
cmp
cwtl
mov
jne
daa
mov
pushl
out
jle
cmp
cmpl
add
push
add
lds
cmp
adc
sub
adcl
jne
sbb
lock
adcl
push
sbb
orb
mov
in
xchg
and
lea
jnp
mov
aaa
fsubrs
loope
jnp
push
pop
into
cmp
adc
movsl
sub
addb
or
aaa
push
movsb
sub
sub
aam
dec
xor
inc
js
cmp
je
push
mov
sub
sbb
loope
test
cmpl
pop
in
inc
sbb
and
hlt
jbe
xchg
add
outsb
push
lock
test
ret
sbb
inc
push
cwtl
jo
insb
loope
pop
nop
xchg
lock
mov
cwtl
jne
lock
roll
jnp
int
jp
lock
jge
sub
inc
adc
mov
adc
jp
adc
pushl
sub
sbb
and
push
sbb
xor
stos
adc
and
in
rorl
fsub
push
popl
cmp
jp
or
sbb
inc
mov
sbb
lods
push
jb
gs
test
xor
dec
iret
push
push
mov
cmp
push
fistpll
les
repz
cmp
je
mov
ret
and
xchg
loop
sbb
push
cwtl
xor
pop
cld
inc
push
sti
pop
mov
subpd
pop
dec
xor
xchg
add
add
mov
or
push
cmp
mov
xchg
or
scas
imul
lock
mov
sub
cmp
ret
dec
sbb
lcall
outsl
fsubr
push
lock
push
inc
adc
sbb
pushl
push
push
mov
shlb
jne
ds
scas
int
mov
mov
jmp
adc
outsl
jo
cmpsl
repnz
psubd
adc
mov
adc
aam
mov
mov
mov
js
xchg
push
push
fimuls
inc
mov
jne
xchg
mov
jge
aaa
dec
and
pushw
xor
call
sub
sub
pop
imul
adcl
or
jl
cmp
jg
inc
jmp
xor
test
xor
push
movb
cmp
add
sub
pop
inc
jo
jge
aas
sbb
ret
pop
sub
dec
enter
mov
and
popa
pushl
or
inc
scas
pop
adc
xor
lods
or
inc
jne
xor
fcoml
and
subl
fiadds
nop
dec
aam
adc
std
xchg
call
jns
dec
or
add
outsl
fcomip
or
push
cltd
pop
idiv
fadd
fidivrl
insb
pop
cmp
mov
insb
sbb
add
cltd
jo
sub
fmull
pop
sub
insb
fistps
mov
inc
xor
fdivr
pop
ljmp
shlb
fimull
mov
aaa
mov
insl
cld
in
ret
lea
xchg
pushf
fs
dec
js
sub
add
decl
dec
pushf
sbb
lea
jmp
add
xorl
out
dec
push
sbbb
pop
jl
mov
adcb
lock
sub
cld
inc
sub
jmp
icebp
xchg
sbb
mov
jp
mov
pop
adc
fbld
sbb
leave
inc
dec
and
and
leave
call
rcll
or
mov
scas
hlt
inc
or
jb
gs
lods
add
or
or
or
fucomp
sbb
xor
popf
add
mov
pop
es
sbb
or
arpl
add
mov
mov
push
lock
hlt
aam
out
xchg
add
hlt
invd
mov
mov
popa
lock
cmp
pop
xchg
popf
mov
xor
jbe
idivb
or
notl
sub
sub
and
adc
es
push
jmp
ss
xchg
push
push
push
push
and
ja
stos
fimull
or
mov
lahf
out
xchg
dec
dec
int3
dec
pop
rorb
shll
shlb
dec
mov
jnp
mov
mov
into
stos
aaa
std
jmp
cmp
sahf
pop
push
pop
mov
or
scas
nop
lret
push
pop
mov
orb
push
mov
add
add
mov
daa
loop
mov
das
stos
dec
mov
xlat
mov
sbb
push
cmp
jl
cmp
jg
xchg
fsubrs
push
jge
adc
mov
dec
mov
repnz
jle
ljmp
or
push
mov
popf
jle
pop
jmp
jne
xchg
ret
ret
sub
mov
pushf
data16
popa
cwtl
rolb
nop
sub
sub
cmp
push
adc
mov
sub
adcb
sub
fwait
jl
pop
xchg
mov
add
or
fdivl
xlat
es
ss
cmpsl
or
and
imul
push
xor
and
or
sub
xchg
arpl
je
mov
or
mov
mov
jl
inc
push
bnd
lahf
movsb
movl
pushl
inc
xchg
ja
push
push
push
push
push
jmp
add
lea
sub
add
ficomps
lret
xchg
adc
pop
movsb
sub
adc
dec
clc
lea
push
lea
lods
std
fildll
mov
push
mov
and
xor
or
sub
jb
inc
add
or
das
movsl
jbe
ret
popa
mov
test
xchg
pop
ffreep
and
mov
out
daa
inc
add
outsl
jmp
ss
sub
ja
xchg
push
pusha
xor
push
jb
adc
insb
orb
ret
cltd
xor
int3
outsl
imul
mov
rorl
cmp
jge
ss
sbb
jl
incl
dec
adc
add
test
xor
or
push
xor
xor
xorb
cld
test
inc
decb
ljmp
icebp
neg
outsl
nop
call
push
dec
inc
inc
add
sub
pop
and
movsl
push
pop
xor
sahf
add
js
jne
pop
push
push
sbb
sbb
or
iret
or
adc
or
dec
mov
cwtl
popa
cli
inc
loopne
push
push
push
add
inc
cld
pop
sbb
sarb
loopne
fdiv
fiaddl
fdivrs
sbb
sbb
inc
pusha
jnp
sbb
jne,pn
sbb
add
sbb
icebp
pop
cltd
out
jle
inc
push
shr
inc
push
xor
clc
fbld
shr
rcr
shr
rcr
or
lods
lock
neg
cmp
movsb
out
shll
cmp
or
cmp
push
cwtl
out
dec
pop
fmuls
fiaddl
sbb
xor
xor
or
jnp
dec
adc
icebp
pop
push
into
repz
sbb
pop
shll
or
push
dec
jns
jmp
popa
pop
add
fdivrs
in
popa
enter
sti
sbb
push
push
jnp
f2xm1
jbe
sub
adc
push
or
lcall
pop
outsb
aas
mov
ret
cmpl
or
dec
ret
mov
rol
fcompl
adc
adc
popa
jb
adc
pop
cs
xchg
ror
repz
daa
xchg
or
test
sbb
and
sub
and
or
and
add
data16
imul
lock
cmp
push
xchg
xchg
in
int
pop
setne
sub
jmp
ja
pop
hlt
inc
neg
pop
mov
sub
jp
aam
idiv
rorb
enter
ficoml
mov
xchg
add
pop
push
jle
out
int3
push
imul
mov
adcl
push
imul
pusha
jb
and
je
ja
push
clc
into
push
test
inc
rorl
cmp
shlb
mov
xor
test
fcmovnb
sbb
pop
or
add
push
jo
add
jns
adc
push
push
add
outsl
inc
push
jl
mov
xchg
push
add
cld
mov
pop
and
dec
or
scas
or
and
push
xor
popa
ret
xor
jle
and
cmp
sbb
call
mov
mov
popf
outsl
dec
andl
push
movsl
fsub
js
and
or
cs
sub
push
cmp
fsubrp
pop
shlb
mov
je
sbb
ss
imul
push
call
test
sbb
in
cmp
cmpsb
outsl
lahf
dec
ja
fcompl
ret
mov
lahf
push
cmovs
and
and
push
popa
lds
loop
sub
sub
add
xlat
repnz
in
mov
add
or
add
ret
mov
sbb
sub
mov
xchg
and
or
pop
sbb
lods
jecxz
sub
insb
lcall
dec
xor
mov
pop
or
cs
xchg
jb
sbb
ffree
inc
jg
jae
jo
mov
cltd
mov
cmpsb
or
jo
cmp
sbb
sti
sbb
adc
dec
rol
push
fwait
mov
mov
test
push
aad
loopne
sbb
in
add
or
es
mov
ss
mov
cli
addl
mov
cmp
rcrl
cmp
push
mov
std
stos
fsubrs
sub
push
pop
push
popa
adc
mov
and
push
push
fsub
pop
pop
or
xor
lods
push
dec
imul
add
add
cmp
jecxz
and
push
notb
push
hlt
pop
mov
and
sti
in
pop
test
jb
loope
xor
lahf
stos
lods
push
add
push
xor
add
mov
jne
push
movsb
pop
adc
jg
movb
test
xchg
in
mov
lret
cmp
xor
fsubrs
or
add
push
out
imul
ret
jae
push
add
movsl
adc
mov
mov
fisubl
adc
add
ret
and
fiadds
cwtl
mov
adc
les
fstpt
or
roll
stc
sub
std
cmp
jge
imul
mov
andl
cmp
mov
mov
mov
mov
fs
fsubl
pop
cmp
lret
dec
cmp
xchg
sub
cmp
cmpsl
jb
nop
popl
mov
orb
pop
mov
mov
lock
leave
push
sbb
pusha
mov
push
bound
orl
out
xor
stos
xorl
cmpb
or
enter
fidivl
leave
adc
push
or
stc
push
jno
or
aas
add
jmp
push
fsubrl
loopne
xor
mov
fucomp
loopne
sbb
inc
inc
cmp
jbe
cs
inc
sbb
push
addb
inc
push
jmp
pusha
cmp
push
scas
dec
adcl
popa
idivl
orb
xor
push
pop
push
xor
dec
cmpsb
iret
mov
movl
lahf
shlb
adc
daa
or
lock
jge
sbb
cmp
dec
adc
mov
lea
mov
xchg
add
pop
out
add
scas
outsb
loopne
add
orl
mov
push
ss
adc
adc
adc
mov
incl
pop
add
mov
push
sbbb
inc
mov
push
inc
incl
mov
jnp
clc
cmp
faddl
orb
out
idiv
and
or
xchg
add
inc
push
data16
push
mov
jmp
push
mov
cmp
ss
jmp
xor
loopne
addb
add
movsb
push
clc
lods
dec
inc
inc
inc
pop
je
adcb
inc
lahf
pop
and
cmpb
nop
lock
addl
xchg
mov
xor
add
cmp
popa
mov
jne
xchg
xchg
or
dec
je
sarb
cmpsl
adc
leave
or
mov
mov
scas
or
cmp
xor
and
sub
pop
add
adc
idiv
pop
push
addl
aad
add
int
pop
sarl
sbb
push
mov
sbb
mov
dec
jge
add
sbb
add
repnz
pop
cmpsl
out
lea
addb
stos
cmp
movsb
aas
jae
aam
pushl
dec
adc
sar
out
lea
cmp
jb
loope
lods
add
sahf
sub
push
push
addl
inc
dec
jecxz
pop
push
push
popl
mov
lea
or
movsb
pop
pop
add
cmp
data16
cmp
inc
lret
and
cmp
sub
add
inc
js
mov
test
rorb
jne
fmul
in
incl
mov
cmp
je
inc
inc
or
jne
repnz
add
mov
sar
inc
push
push
mov
pop
jb
shlb
lock
xchg
cmp
lret
ss
loope
frstor
sbb
cld
and
andl
pop
xor
jo
sbb
pop
sbb
xorl
ss
mov
pop
movsb
or
sti
or
stos
ja
imulb
out
int
pop
pop
cmpl
adc
shll
mov
incb
lds
mov
adc
pushf
pop
ja
fadds
and
dec
cld
add
sbbb
and
cmp
or
or
out
dec
add
or
or
or
imul
or
cmp
xor
inc
mov
jo
or
in
js
into
adc
mov
mov
sub
mov
add
cmp
clc
scas
int3
mov
mov
add
sbbl
jb
rorl
xchg
jbe
rcrb
add
lea
lock
andb
mov
cmp
jb
mov
cmp
imul
movsl
xor
roll
dec
jge
fimull
je
mov
fmull
rolb
or
or
dec
std
and
repnz
add
out
add
cs
mov
add
mov
test
or
cld
outsb
fxch
sbbb
neg
inc
or
inc
adcl
jl
inc
call
xorl
jg
or
in
push
orb
jmp
xchg
adcl
add
dec
mov
cmc
push
roll
cmp
or
aas
push
aaa
xor
ds
mov
add
jmp
lret
or
je
and
popl
add
add
mov
jmp
and
je
scas
pop
notb
mov
bound
xchg
lds
cli
cmpsl
scas
inc
mov
jae
mov
jmp
arpl
icebp
testb
xchg
dec
sub
cmp
push
test
sbb
lods
mov
icebp
mov
mov
sub
cmpsl
cmp
push
lea
loopne
and
pop
cld
dec
dec
or
stos
lea
addb
jge
pop
ret
mov
push
mov
jo
and
inc
and
lock
gs
or
pusha
in
sarb
jl
pop
orl
sbb
add
lea
mov
sbb
sbbb
dec
outsb
mov
cld
dec
xchg
pop
add
faddl
movsl
icebp
imul
mov
pop
push
pop
xlat
add
sahf
shl
loopne
fsubr
jne
js
cltd
and
push
add
add
xor
push
dec
mov
leave
into
arpl
jb
xor
cmp
mov
loop
lahf
dec
push
sbb
push
loopne
fldenv
inc
and
orl
add
mov
sub
addr16
dec
or
lock
adcl
mov
push
or
fisttpll
pop
adc
bound
lock
shrl
aas
push
push
mov
mov
add
or
not
mov
cmc
push
or
test
in
lcall
mov
lock
ja
pusha
testb
and
mov
imul
or
or
mov
mov
call
rcrl
or
lds
or
gs
cwtl
cmp
mull
adc
sbb
cli
out
and
popl
insl
mov
pop
lods
mov
adc
rcrb
movl
cmp
mov
fsubs
movsb
jmp
shrl
mov
mov
jp
std
xor
push
push
sbb
pop
enter
add
insb
cmpsl
scas
push
push
pop
lea
sub
les
call
mov
out
mov
leave
aad
or
push
hlt
scas
and
pusha
inc
jecxz
pop
adc
hlt
inc
rclb
inc
jl
lea
adc
movsl
lcall
shr
sbb
or
cmp
jl
add
push
in
je
push
pop
icebp
xchg
negb
es
ficoms
cmpl
fcoms
rorl
scas
pop
ljmp
fadds
push
pop
cwtl
data16
pop
testl
aas
out
or
pop
sbb
loope
aam
gs
mov
test
inc
inc
in
fs
nop
sbb
outsl
sub
xchg
es
sbb
and
inc
jmp
push
xor
imul
ret
jmp
sbb
mov
jmp
and
inc
pop
or
or
xorb
mov
dec
mov
out
push
das
adc
ss
jne
arpl
lods
lods
xlat
mov
add
push
in
fs
rorb
adc
les
mov
mov
shlb
popa
mov
or
or
subb
fwait
leave
and
xchg
rcll
je
dec
xchg
mov
aad
scas
testb
pop
lds
or
out
inc
enter
and
adc
es
test
jne
add
imul
jns
in
cld
push
xor
lea
sbb
adc
adc
mov
mov
fistpl
or
stos
and
nop
or
jg
inc
cmp
shll
xor
aaa
mov
add
mov
arpl
or
fdivrp
clc
inc
or
ss
push
dec
or
fwait
movsb
xchg
cmc
test
jbe
and
stc
jb
outsl
fisubrl
shlb
add
cmp
jb
stos
dec
lret
lahf
imul
inc
pop
scas
cmp
push
mov
cs
ret
push
dec
sarl
mov
shr
not
dec
stos
les
ljmp
mov
and
add
pusha
push
dec
test
add
dec
adc
pop
push
push
push
push
loopne
rorl
sub
pop
es
loope
xor
push
xor
pop
sub
fiadds
sub
xchg
cli
jbe
je
mov
lea
test
push
out
movsl
je
gs
movsl
push
cli
jmp
popl
shl
xor
in
inc
loopne
negl
pushl
jo
cmpsl
hlt
adc
push
pop
stc
lods
adc
inc
ja
mov
cltd
cld
add
sub
movsl
or
mov
xor
into
inc
push
rcrl
ljmp
sbb
shl
test
movsl
addr16
pop
push
arpl
pushf
and
sub
ror
insb
push
push
and
inc
rolb
xor
adc
lock
dec
loopne
insb
adc
adc
sub
aam
adc
call
sub
sbb
adc
mov
sub
adc
sbb
shr
mov
imul
ret
add
push
dec
or
scas
dec
pop
sbb
stos
shll
push
lea
mov
mov
jle
clc
push
cld
rclb
fstl
decl
add
sar
dec
sub
mov
push
fildll
mov
inc
mov
mov
and
lret
lea
shll
pop
mov
decb
or
lea
xor
inc
cmp
pop
add
lea
pop
ljmp
rcrb
push
or
mov
rol
jmp
clc
and
clc
popa
shlb
xchg
sub
and
sti
add
mov
dec
pop
cmp
jbe
jg
lret
fimull
jl
and
cmp
je
roll
jno
sbb
aaa
xchg
mov
shr
not
and
outsl
mov
dec
jne
sub
jmp
lea
das
mov
cmpsb
jl
pop
xor
add
dec
pusha
dec
pop
add
sbb
pusha
cltd
and
fbld
in
pop
les
ficomps
into
outsl
pop
lock
mov
pop
or
or
insb
or
or
dec
pusha
mov
mov
or
sbb
adc
jle
xchg
xchg
sbb
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
fwait
jle
sbb
pop
adc
mov
jecxz
mov
mov
jecxz
loope
add
sbbl
jmp
jnp
mov
push
or
jnp
testl
adc
inc
aam
dec
sbb
add
and
fisttpll
and
in
pop
int
fsubr
in
push
mov
adc
push
lea
adc
fnstenv
loopne
call
insl
or
mov
jno
scas
xchg
aam
add
mov
mov
add
pushf
lock
rclb
pop
loope
add
push
add
bound
or
mov
add
pusha
aas
repz
negb
les
iret
xor
mov
mov
shrb
sbb
stos
mov
sub
sbb
pushf
jmp
orl
insl
insb
orb
mov
and
mov
mov
add
int3
shlb
add
inc
push
mov
mov
imul
nop
fidivrl
incb
pop
mov
add
inc
dec
jne
cmp
xchg
adc
rcrb
mov
add
lea
ficoms
inc
sub
shr
xbegin
orl
orl
js
nop
cld
or
adc
out
inc
inc
cld
lock
testl
add
mov
add
xchg
inc
fs
sub
fadd
mov
sahf
inc
popf
mov
negl
inc
inc
mov
lock
push
mov
jne
or
clc
aad
js
lds
not
and
ds
inc
les
adc
add
jns
movsb
xlat
sub
add
shr
jb
shld
cld
and
icebp
stos
mov
add
lds
adc
mov
test
lods
daa
loop
inc
jp
pop
cmp
ljmp
add
mov
addb
int3
push
pop
inc
pop
dec
int
push
mov
iret
dec
in
cmp
add
sti
pop
add
cmp
nop
aam
fdivrl
or
push
jns
ret
mov
mov
sbbb
mov
inc
sti
cmpsb
incl
mov
fstl
push
lea
jbe
rcl
int3
pop
pop
jg
or
mov
shll
pop
adc
lcall
iret
subl
jmp
pop
pop
shl
aaa
js
test
xchg
inc
jne
iret
push
mov
insb
xor
jnp
sbb
push
mov
sub
adc
cltd
jle
pop
inc
inc
or
stos
rclb
insb
pop
xor
or
sbbl
jp
movsb
and
pop
pop
idiv
sbb
fidivrl
xor
cmp
out
push
mov
fists
push
or
mov
insb
rcr
fbstp
loopne
fnstenv
dec
ficoms
add
mov
ja
data16
dec
lea
mov
and
xchg
js
test
xchg
dec
ret
push
lods
decb
into
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
mov
add
lods
call
xchg
and
add
js
and
inc
cmp
push
push
ja
mov
push
inc
into
call
out
adc
jmp
sub
push
in
push
imulb
dec
or
icebp
add
nop
cmp
and
or
outsl
pop
add
cmp
jb
push
jne
mov
loop
jne
jmp
sub
popf
cmp
jae
xor
aaa
jo
rcl
lock
fsubs
incb
aaa
pop
pop
jb,pn
gs
add
inc
lods
ljmp
in
mov
mov
clc
and
cmp
mov
aas
inc
mov
dec
pop
iret
popa
xchg
loope
lcall
mov
xchg
mov
pop
add
stos
ljmp
into
jne
out
clc
insl
mov
push
pop
outsb
leave
inc
test
inc
and
inc
push
pushf
mov
sub
icebp
sbb
fdivrl
push
test
mov
add
test
sbb
iret
add
dec
cmp
into
in
rcll
inc
mov
decb
jne
dec
repnz
jp
or
sub
dec
mov
pop
pusha
dec
bound
dec
push
and
jo
push
clc
into
xor
sub
jns
jp
pop
mov
mov
inc
mov
mov
das
pop
xor
mov
jge
inc
or
jge
jle
push
or
dec
hlt
pop
adc
jl
push
inc
push
inc
or
push
mov
mul
mov
orb
or
lock
scas
inc
repz
and
sbb
mov
lea
loop
ret
sbb
sbb
pop
xor
pop
add
sbb
leave
es
rorb
xor
push
adc
adc
aam
cmp
adc
test
inc
cmp
push
or
mov
push
inc
mov
in
mov
cmp
data16
add
mov
dec
cmp
sub
add
push
sbb
mov
mov
xor
mov
fistps
sbb
jae
rolb
push
mov
push
sti
add
adcl
in
jle
ret
js
sub
pop
lock
jae
loope
or
pop
lcall
inc
pop
mov
nop
xchg
inc
sub
in
orl
imul
and
dec
dec
out
outsl
mov
or
dec
push
pop
push
push
mov
shrb
jae
fstl
push
sub
sub
ss
lods
loopne
and
xor
mov
or
popf
jbe
sbb
or
aas
mov
pop
push
inc
dec
jle
xor
mov
mov
add
cltd
adc
mov
dec
and
loope
shll
aas
and
sbb
sub
sbb
or
adc
adc
punpckhdq
inc
test
out
inc
cmp
push
inc
push
test
adc
mov
insl
push
jbe
dec
movsb
adc
cmp
adc
fistl
or
mov
mov
iret
pop
jns
je
nop
sub
and
outsb
xchg
cmpl
fmull
mov
mov
cmp
push
dec
dec
jmp
add
pop
dec
add
jae
cmp
inc
jmp
pop
movl
cs
dec
adc
dec
cmp
pop
inc
cmp
jne
push
rcll
out
dec
popf
sbb
inc
out
pop
scas
jmp
je
lods
mov
andl
add
nop
and
aas
rolb
xor
sbb
or
adc
cmp
lds
jnp
jmp
push
das
or
mov
mov
aas
or
shll
ja
les
mov
test
push
cmp
or
imul
pusha
fiadds
add
hlt
mov
ds
loope
sar
xor
xlat
pop
jecxz
ret
shlb
inc
sub
rcrb
js
xor
outsl
inc
testl
sbb
into
adc
dec
adc
movl
jle
jge
cmp
hlt
cmp
je
movl
sbb
sbb
mov
inc
or
xchg
shlw
or
push
adc
fldt
jecxz
and
sbb
mov
inc
gs
xor
push
sbb
cmp
or
or
test
stos
add
fmull
in
fsubl
outsb
cmp
fildl
insb
adc
push
addr16
outsl
push
push
xor
adc
sub
jns
ret
gs
mov
shll
pop
and
test
ja
enter
cs
cld
cmp
je
movl
push
out
call
fsubs
in
lds
sbb
hlt
jecxz
push
mov
lcall
push
lock
and
sub
mov
testl
mulb
jl
ljmp
jecxz
cltd
dec
lock
adc
incl
clc
orl
sbb
lea
push
cmpsb
adc
add
adc
mov
fstpt
mov
mov
push
shll
aad
mov
int3
cmp
aad
xor
aam
push
xlat
push
push
test
movsb
int3
jl
fs
ljmp
jg
add
sahf
sbb
add
add
pop
jb
dec
jb
and
or
lahf
orl
cmp
call
stos
stos
sbb
ja
ja
xor
mov
push
cwtl
cmp
in
jnp
push
xchg
mov
add
fldl
lret
lret
push
fs
jne
mov
or
sbb
mov
mov
inc
cmp
or
adc
cltd
inc
inc
or
mov
add
push
and
jae
pop
push
and
cmp
push
inc
lcall
jns
jno
gs
sbb
loope
lods
dec
sahf
movsb
in
mov
sbbl
adc
xchg
xchg
fldt
sbb
xchg
xchg
xchg
xchg
sub
xor
mov
movsb
xchg
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
pop
pop
aad
adc
xchg
dec
xor
mov
and
pushf
mov
movsb
test
inc
pop
test
jns
jo
mov
cmp
sub
add
movsb
pop
mov
xor
jle
dec
dec
imul
lods
adc
mov
or
adc
sbb
sbb
mov
imul
psrld
xchg
cmp
insb
pop
ret
adc
daa
in
jne
js
inc
pushf
dec
and
cli
or
cmp
je
inc
dec
jne
out
mov
mov
add
movsb
sarb
test
sbb
xchg
or
and
or
push
daa
icebp
mov
cmpsb
stc
push
jp
push
xor
mov
movsb
push
mov
rolb
xor
fcmovne
mov
jne
aad
mov
aad
sahf
push
jmp
mov
hlt
xor
add
jne
mov
inc
add
push
jmp
jecxz,pn
sbb
outsb
out
pusha
out
inc
sarb
rcr
mov
cmp
push
mov
mov
pop
sbbl
and
cmp
icebp
lea
repz
pop
xchg
xchg
mov
xchg
outsl
sbb
arpl
cmp
pusha
fdivp
jnp
mov
dec
sbb
je
xchg
and
jle
push
and
sbb
cmpb
jne
in
jno
xchg
mov
stos
or
test
ss
rcrl
push
lea
jmp
scas
lea
dec
inc
sub
add
sarb
jb
imul
insb
mov
add
cmp
lret
push
add
jo
testb
es
clc
and
xchg
jb
out
dec
or
mov
cmp
aaa
pushl
mov
in
mov
sti
or
je
mov
add
ss
sti
pop
sub
je
push
or
add
sarb
mov
sbb
rep
cmpsb
mov
pusha
pushl
mov
mov
push
mov
call
push
je
dec
je
aaa
mov
cmp
sub
sub
mov
mov
rorb
push
xchg
mov
pop
pop
xchg
inc
jecxz
pop
add
daa
pop
mov
and
in
rorb
push
sbb
scas
cmpsb
dec
xor
add
and
sti
pop
popa
insb
mov
aam
inc
pusha
jne,pn
sbb
rol
inc
andb
cmpsl
mov
dec
shr
pop
cs
jge
or
push
pop
mov
fsubr
fisttpl
outsb
jo
sub
je
pop
sbb
push
push
dec
add
lods
sub
pop
in
jo
addb
loopne
nop
or
mov
sub
adc
fs
jecxz
sub
addb
mov
lcall
and
jmp
add
sub
push
sahf
pop
pop
dec
xor
pop
test
jo
xchg
insl
movl
pop
dec
das
test
mov
shrb
iret
sub
ret
add
push
push
js
mov
xchg
arpl
fs
dec
aam
mov
movsb
sbb
repz
push
push
mov
jb
scas
cmpb
sbb
sub
push
daa
adc
ret
aam
lret
mov
adc
or
inc
les
push
div
jne
pop
push
jmp
and
mov
add
pop
fldenv
ds
adc
pushf
cmp
cmp
imul
adc
mov
roll
subb
jl
and
or
adc
adc
jle
cld
jmp
or
adc
imulb
mov
adc
sbb
rcr
rcll
mov
sar
sbb
jle
and
push
mov
hlt
xchg
rolb
in
lods
add
jge
aas
lret
pop
xor
jbe
push
pop
les
fs
lods
in
nop
ss
or
imul
out
jb
dec
mov
icebp
mov
pop
push
into
or
cld
js
outsb
ja
orl
dec
out
cmp
dec
mov
es
jb
mov
push
cwtl
sbbl
push
pop
into
dec
xor
sub
out
xchg
or
xor
xchg
fdivl
push
adc
pop
movlps
sbb
jl
dec
push
inc
mov
rclb
cmp
push
hlt
mov
aaa
sub
or
loopne
movsb
mov
popa
jmp
cmpsl
xchg
pop
pop
and
lods
imul
add
dec
xchg
fnop
xchg
pop
insl
push
mov
rolb
xor
pop
inc
daa
mov
dec
jo
mov
ret
push
in
lahf
pushf
jnp
lahf
pop
pop
nop
sbb
dec
es
mov
pop
adc
enter
cmpsl
and
loop
adc
cltd
adc
jae
mov
rorb
jne
or
ret
add
or
adc
push
leave
push
mov
cmp
push
sub
mov
shll
shrl
mov
ja
sbb
loop
dec
je
push
jmp
adc
adc
add
mov
int
mov
and
rorl
stos
and
xor
inc
xorb
lret
jbe
mov
push
pop
adc
inc
pop
sbb
fwait
cmp
inc
mov
cmp
mov
adc
fidivs
sub
or
pop
add
add
notl
test
cmp
jecxz
push
fwait
inc
shr
add
mov
inc
cli
pusha
sbb
cmp
cs
test
xor
insl
mov
imul
push
jl
push
sbb
pop
rcrl
imul
imul
mov
or
adc
hlt
mov
ret
pop
in
pusha
fs
dec
and
in
add
inc
call
push
or
das
cmp
dec
jle
cmp
ss
xchg
dec
inc
das
je
sub
imul
or
ret
adc
mov
lock
jb
sbb
fmuls
sbb
push
push
popf
pop
jg
outsb
divl
sbb
adc
nop
jp
insl
cmp
cmpsb
inc
push
sbb
mov
inc
add
je
push
pushf
cmc
add
inc
mov
pop
mov
dec
and
ret
xchg
fsubrs
jne
adc
fstl
xchg
outsb
mov
addr16
clc
inc
push
fisttps
sub
cmpl
mov
leave
or
out
jecxz
inc
mov
pop
xchg
xor
xchg
or
jno
mov
pop
outsb
mov
clc
pop
adc
aad
mov
shlb
mov
scas
aaa
rorb
js
ja
lret
mov
and
jbe
dec
clc
bound
pop
adc
sbb
adc
add
and
popf
pop
repnz
cmp
cmp
arpl
lret
and
loopne
add
or
jnp
int
lock
xchg
lahf
lret
adc
in
jb
jno
or
add
or
add
push
int
dec
cmp
jp
cmp
lods
push
mov
adc
insb
cmpsb
jle
cmpl
push
ljmp
pop
insl
or
jge
inc
inc
out
xchg
aas
lock
jle
xor
loopne
sbb
add
pop
cmp
or
sub
sub
mov
fisttps
inc
adc
cmp
push
xor
dec
adc
pop
cmp
je
cmp
and
mov
or
adc
push
push
add
add
lds
sub
pop
xor
or
nop
hlt
mov
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
xchg
repnz
ror
dec
adc
sbb
jb
movsb
cmp
inc
add
pop
and
and
mov
aaa
or
fsts
mov
inc
push
sbb
sbb
xor
sbb
xor
dec
popa
dec
jge
into
mov
ret
jo
xlat
insl
jnp
adc
mov
pushf
push
dec
xchg
aas
cmp
jns
aas
xchg
hlt
aam
inc
xor
sbb
add
js
js
jle
push
or
ljmp
and
xchg
adc
mov
std
jae
jp
pusha
or
inc
add
jle
test
jo
pop
es
push
push
roll
xor
push
cwtl
mov
cld
and
push
dec
movsb
into
xor
pushl
dec
cmp
push
mov
jb
dec
test
or
je
mov
inc
jg
pop
fcoms
push
in
leave
jne
shll
testb
popa
cld
jmp
push
xlat
xor
js
iret
or
add
mov
sbb
pop
push
push
mov
imul
mov
xchg
call
xor
add
push
in
cmpsb
and
xchg
jmp
push
dec
jne
cmpsb
mov
xor
mov
dec
cmp
cmp
jg
cmp
or
adc
mov
test
clc
std
movb
je
jg
cmpb
std
add
xor
sub
mov
pop
testb
push
push
push
push
sbb
mov
pushf
outsl
int
call
rorb
mov
cli
or
inc
outsb
push
adc
pushf
lock
mov
bound
leave
je
xchg
ds
mov
mov
jbe
test
in
je
mov
aaa
sbb
xchg
out
push
cmp
ja
add
cmp
push
and
jns
ret
cmp
jne
pop
int
test
fidivrl
std
jb
neg
mov
into
leave
icebp
add
dec
sbb
adc
or
ja
hlt
xorb
jne
clc
stc
inc
lcall
stc
and
inc
or
push
in
sbb
daa
int
push
test
inc
dec
loope
or
adc
rorl
nop
cmp
jmp
inc
in
pop
dec
cmpb
inc
or
and
pop
push
pop
jb
mov
push
aaa
neg
pop
pop
fdivl
or
loope
cmp
addr16
jecxz
mov
mov
cmp
sbb
test
adc
push
loop
andl
jle
cli
sbb
xlat
jle
add
mov
sub
or
adcb
jge
lds
ss
jl
inc
je
mov
stc
stc
add
push
icebp
add
aam
js
enter
mov
dec
push
hlt
dec
sbb
loopne
loope
jb
jne
mov
test
insl
add
inc
jae
inc
add
jmp
cmc
sbb
or
mov
aad
shrb
loopne
fs
fistpll
xlat
mov
je
mov
cmp
jb
cmp
jbe
inc
inc
mov
xorb
call
jle
sbb
lds
mov
sbb
jo
jbe
or
loope
into
inc
sbbl
jbe
push
push
or
and
fisttps
test
mov
mov
or
push
daa
push
rorb
mov
pop
test
mov
movsl
loopne
pop
sbb
test
pshufw
in
mov
jmp
push
je
xchg
in
add
jle
pushl
and
in
aad
pushl
rcr
fldt
push
xor
mov
aam
jecxz
pop
and
or
fcomps
adcl
mov
fstpl
xchg
inc
pop
jge
sbb
roll
test
mov
lret
outsl
shl
sbb
hlt
daa
fmul
dec
cmp
sbb
dec
repnz
jmp
test
jp
dec
push
inc
lea
pop
or
mov
cmp
add
inc
add
xchg
mov
and
loopne
shlb
jle
stos
mov
adc
push
test
pop
cmpsb
nop
dec
push
sbbl
cs
sub
inc
adc
push
push
push
ja
aas
jo
mov
sub
sti
aam
push
ret
test
imul
sbb
xlat
aaa
dec
jmp
add
mov
adc
push
fsts
arpl
insb
pop
sahf
pop
mov
push
dec
xor
mov
inc
xor
or
pusha
mov
cmpsl
mov
jecxz
lods
dec
mov
jmp
xor
push
lahf
adcb
xlat
push
jne
push
sub
cs
les
pop
fcompl
pop
fsubrs
push
pop
sub
push
in
and
push
sbb
pop
jge
push
inc
pop
mov
mov
les
adc
mov
test
add
mov
pop
jo
mulb
enter
cmp
movsb
sbb
dec
rcll
sub
cmc
incb
xchg
sbbb
fimuls
xor
xor
iret
cli
adc
lock
cs
add
jb
jl
jb
lea
gs
enter
test
or
mov
mov
pop
nop
cmp
popf
pop
iret
and
stos
dec
popa
loopne
jmp
scas
call
lods
jge
fisttps
mov
sbb
in
jne
sub
js
icebp
inc
jmp
and
mov
inc
pop
xorb
push
sbb
add
ret
inc
js
jae
dec
xchg
sbb
inc
sar
push
push
fiaddl
fcompl
pop
mov
icebp
dec
nop
mov
add
mov
inc
and
mov
enter
stos
xor
hlt
sti
push
and
push
mov
in
or
xchg
sub
sub
push
xchg
add
stc
pop
xor
push
loopne
loopne
push
popa
adc
mov
add
jmp
or
and
hlt
cmp
cmp
arpl
jp
shl
inc
xor
mov
cmp
je
movzwl
es
loope
sti
test
or
loopne
jne
dec
jmp
and
cmp
pop
scas
pop
push
or
ds
push
aas
adc
jns
push
fs
push
jmp
jns
xchg
test
lea
pop
ret
and
fs
or
mov
pop
sbb
movsl
mov
push
sub
scas
push
mov
fsubs
ret
shl
push
adc
xor
xor
lret
dec
loopne
add
stc
xor
pop
adc
jo
and
mov
je
add
add
test
jne
lods
add
cld
ret
test
sub
cmp
je
mov
popf
out
dec
jb
adc
xorl
outsb
or
cmpsb
xor
mov
out
and
mov
jb
fsubr
add
movsb
jb
push
clc
sbb
dec
and
push
mov
into
flds
cld
jle
add
dec
or
push
movsb
ret
or
fldt
rorl
and
jb
outsb
cmpsb
int3
pop
jp
push
push
mov
jl
mov
pop
dec
into
pop
ret
sub
js
mov
and
jmp
dec
popa
mov
ret
sbb
ja
pusha
pop
cwtl
xchg
aas
popf
mov
mov
mov
inc
mov
sbb
rcl
and
aam
push
inc
push
mov
mov
push
outsl
enter
aam
dec
push
and
sub
pushf
insl
popf
mov
movsl
lods
push
movsl
into
daa
xor
ja
push
insb
stc
repnz
mov
jb
or
mov
inc
and
aam
mov
dec
shl
add
cld
xor
jmp
mov
aam
mov
xchg
mov
daa
dec
mov
or
sub
call
idivb
pusha
mov
pushf
aas
and
imul
adc
dec
in
inc
mov
cmp
es
lods
add
mov
insl
popa
jnp
mov
movl
pop
add
mov
incb
or
add
push
ljmp
xor
bound
and
insb
outsl
arpl
imul
ljmp
dec
js
inc
jae
je
outsl
jp
bound
arpl
jo
push
dec
dec
push
jb
ljmp
inc
jbe
pop
je
jae
inc
inc
jns
pop
jno
addr16
imul
pop
inc
arpl
jmp
push
pop
inc
bound
push
push
jae
outsl
outsl
push
arpl
jbe
insl
je
dec
push
popa
in
mov
decb
jae
inc
push
cmpsb
push
jns
arpl
imul
inc
push
addr16
jae
js
dec
imul
jo
push
outsb
push
jp
push
lcall
cld
dec
dec
jae
imul
arpl
dec
push
gs
push
insb
push
dec
inc
popa
dec
imul
rorb
fs
jbe
jo
push
je
push
jae
js
pop
push
insl
dec
pop
ljmp
sub
jne
push
push
jbe
push
jbe
jo
push
ja
jbe
ja
gs
outsl
push
insb
jb
push
jo
dec
push
jns
push
addr16
push
push
fs
insb
jp
dec
push
sti
jg
push
insl
jo
insb
push
jne
inc
imul
jns
imul
push
mov
bound
ret
call
outsb
dec
dec
push
pop
je
pop
addr16
push
push
inc
jb
dec
inc
inc
jg
fists
pop
jo
inc
jb
push
push
dec
js
inc
jns
gs
dec
bound
inc
dec
aaa
jl
orl
jo
push
imul
mov
js
jno
dec
dec
jo
bound
sub
pop
inc
fs
imul
jns
push
inc
popa
dec
fs
push
bound
cmp
sbb
mov
add
in
ljmp
inc
push
pop
insb
jae
jns
push
imul
loop
dec
jno
insb
add
lods
fs
imul
pop
add
ja
push
dec
push
push
stc
aas
mov
outsl
dec
outsb
insb
bound
dec
jae
outsl
and
ja
sub
ss
and
lock
addr16
xchg
push
pop
mov
push
sbb
jb
outsb
aas
mov
xchg
popa
js
outsb
outsb
gs
and
and
sub
sbb
push
dec
lret
xchg
gs
sub
lods
pop
das
pusha
mov
push
shrl
fisttpll
mov
sahf
jb
addr16
inc
jb
xchg
int
pop
gs
pminub
push
cs
fcomps
jb
cvtps2pd
ja
in
sbb
push
jbe
cs
and
scas
stos
imul
fs
xor
cmc
lcall
pop
ja
outsb
insl
popa
jo
imul
or
sbb
pop
add
inc
or
test
je
enter
addb
js
dec
dec
cmp
xchg
jbe
xor
cmc
push
sahf
ljmp
add
add
jmp
fcompl
iret
jmp
call
pop
dec
push
lahf
or
push
dec
inc
pop
jnp
inc
inc
cmp
xor
sub
mov
xor
inc
or
xor
aaa
sub
xor
inc
aaa
inc
sbb
jge
jo
push
jb
gs
xchg
add
roll
mov
xchg
mov
dec
add
in
or
outsl
ja
and
arpl
mov
push
cs
mov
jl
enter
inc
outsb
mov
adc
push
outsl
movsb
je
dec
and
push
add
out
cmpb
add
add
add
cwtl
fadds
inc
or
pushf
gs
je
cmp
pop
inc
xchg
xchg
mov
rcrb
or
adc
adc
push
call
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
pushl
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
ljmp
stos
mov
pop
pop
pop
pop
pop
pop
or
popa
bound
data16
insb
insl
or
std
jg
jno
fidivs
ja
jns
jnp
jge
jg
cmp
add
add
stos
in
sub
dec
add
add
in
in
addl
mov
cmp
push
and
push
and
add
mov
inc
cmpsb
add
ja
stos
pusha
push
mov
dec
adc
aaa
add
pusha
inc
push
test
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
jmp
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
ljmp
adc
add
mov
ljmp
sub
imul
mov
outsl
outsb
push
jne
push
gs
push
push
popa
push
fildll
dec
popa
outsb
inc
bound
jb
jo
or
dec
add
inc
jne
push
mov
jo
arpl
jbe
xchg
jb
js
flds
lods
les
gs
insl
add
jg
mov
add
add
push
jb
outsb
je
insl
gs
push
test
and
jb
or
jge
dec
dec
push
push
and
inc
add
dec
dec
inc
and
push
ss
adc
inc
decl
and
jo
imul
in
dec
sub
je
gs
jo
and
insb
outsl
es
push
fadds
mull
mov
mov
out
insb
jns
or
xorb
fidivl
aaa
and
popa
arpl
jo
mov
sbb
xor
and
insl
push
addb
xchg
lock
loopne
xor
mov
jnp
pop
push
mov
rolb
les
pop
mov
insl
bound
and
and
idivl
dec
mov
sbb
jp
or
pop
es
notb
push
and
je
and
test
addr16
ds
fistl
loopne
popf
jb
je
outsl
mov
into
or
fcoms
sub
dec
imul
insb
jb
add
sbb
push
sbb
shll
mov
ret
mov
inc
xchg
sub
xor
out
xor
int3
gs
inc
inc
orl
lcall
pop
insb
popa
pop
mov
add
mull
fadd
sub
push
fistps
push
xor
cs
aaa
mov
xchg
shll
inc
jns
cmp
popa
sbb
data16
add
add
aaa
mov
scas
or
ja
outsl
nop
nop
imul
push
push
scas
xor
stos
fnsave
push
mov
and
cmp
mov
cwtl
shl
mov
je
in
inc
out
outsl
jo
xlat
outsl
push
hlt
xchg
imul
arpl
lcall
bound
push
inc
mov
insl
in
ljmp
adc
imul
pop
mov
imul
push
pop
in
inc
jno
sbb
leave
nop
sub
mov
jbe
fbstp
cmp
xorl
in
xor
dec
pusha
or
and
and
add
sub
push
jae
xor
and
ljmp
mov
jo
mov
fsubrs
dec
jb
push
sub
lret
inc
sub
jne
jo
pop
dec
jmp
movsb
in
pop
add
cmp
sub
jno
dec
jp
jne
ds
gs
fmuls
pop
push
dec
cmp
mov
pop
sbb
in
lea
mov
nop
xchg
add
mov
and
adc
push
scas
pop
dec
lock
inc
jbe
dec
bound
mov
mov
js
push
daa
inc
ss
movsb
sbb
js
and
fisubl
repnz
xor
mov
jo
ds
in
xchg
pop
xchg
or
daa
pop
push
and
push
jns
pop
mov
xchg
push
sub
jo
rcll
cmp
lcall
in
mov
jno
jbe
pop
mov
pop
pusha
inc
jbe
push
loop
jnp
push
lahf
fs
stos
rcll
fdivs
mov
and
cmp
push
and
push
and
mov
dec
dec
jmp
lock
test
cmp
pop
pop
push
push
jae
pop
in
or
cmp
cmp
sbb
gs
addr16
mov
das
pop
ja
inc
loopne
push
mov
inc
or
xchg
inc
push
push
push
push
dec
negl
data16
push
jne
repnz
je
outsb
pusha
ss
popa
mov
cmp
adc
dec
jge
adc
pop
imul
or
push
xchg
cli
pandn
stos
or
outsl
jae
nop
shll
xor
jg
popa
cmp
insb
dec
xor
jg
fadd
push
jns
pusha
push
or
push
addr16
das
je
sub
outsl
xchg
daa
xchg
mov
imul
es
cmp
push
das
push
sub
inc
jl
push
addr16
jle
fdivl
sub
push
push
cmp
cmp
cmp
add
add
sub
sub
sub
shr
int3
loopne
xchg
add
mov
jae
cmp
dec
test
rcll
into
je
lods
ret
fs
jb
imul
jo
ss
push
arpl
xor
cld
sbb
xor
cwtl
adc
ss
jo
sub
mov
jl
out
cmp
sti
outsb
sub
je
inc
add
push
dec
out
iret
repz
sub
adc
stos
mov
call
imul
push
clc
iret
repz
hlt
lock
call
repz
ror
enter
iret
repz
iret
lods
test
mov
repz
nop
mov
repz
iret
repz
insb
push
ds
repz
xor
adc
mov
fdivrl
lahf
out
sbb
mov
cmp
xchg
test
iret
repz
xor
add
mov
sahf
push
xchg
insb
inc
and
sbb
out
fdivrl
mov
ja
dec
dec
cmp
cmp
add
in
jne
and
adc
add
das
das
movsb
shrb
adc
push
dec
push
inc
test
test
or
gs
pop
mov
mov
je
mov
jne
cmp
outsb
gs
push
fisttpll
cmp
push
push
filds
mov
xchg
out
jae
xchg
xchg
addr16
cmp
mov
mov
and
jb
daa
push
clc
adc
mov
pushf
mov
xchg
and
cmp
pop
dec
inc
aas
add
pop
mov
mov
push
cmp
push
push
loop
mov
hlt
sbb
xchg
ss
arpl
stos
push
and
jne
daa
pop
lea
pop
test
outsl
js
fisttpll
pop
push
push
inc
push
ljmp
mov
mul
cwtl
push
mov
push
sub
cld
jns
int3
rorb
jb
les
add
test
and
sbb
inc
add
fsubr
mov
push
lds
mov
mov
outsl
add
push
push
sarb
scas
in
inc
cli
outsl
les
add
cmpsl
ja
lahf
das
xchg
out
int
cmp
push
fsub
pusha
mov
jbe
mov
pusha
int
out
sbb
sub
in
fwait
adc
les
cmp
imul
xchg
je
je
dec
sahf
or
and
je
shlb
mov
loopne
xchg
add
dec
shlb
and
xor
mov
cmp
push
stc
push
cli
xchg
data16
xor
add
mov
lret
lcall
adc
ror
repz
test
mov
dec
cmp
cmp
add
xor
mov
jne
dec
aas
pop
int3
lds
jns
fdivrl
ja
idivl
cmpsl
adc
push
push
jg
cs
and
mov
sub
cwtl
aaa
iret
lock
jo
inc
sbb
leave
mov
aam
cs
inc
iret
es
cmpsl
stc
jl
add
movl
jo
add
add
inc
adc
mov
or
push
pop
aam
xchg
in
jo
aas
xor
xlat
movsl
mov
test
push
das
pop
or
mov
aaa
xor
fs
fists
enter
cmp
movb
out
outsb
cmp
testb
outsb
bnd
mov
jbe
std
or
or
shlb
or
and
dec
lds
or
xchg
cmp
jno
out
pop
in
xchg
nop
and
hlt
enter
in
sbb
aas
mov
adc
pop
jo
adc
cwtl
adc
adc
shll
lahf
mov
mov
ror
cmpsl
in
sbb
push
sbb
out
mov
dec
repnz
pop
sbb
adc
xchg
pop
enter
imul
pop
shlb
sbb
jg
cs
nop
adc
lods
xor
xor
or
pop
pop
mov
inc
inc
inc
jg
stc
xor
daa
xchg
inc
cmp
das
cltd
nop
pop
xor
sub
loopne
repnz
add
pop
dec
pop
aas
jbe
pop
jne
popa
pop
jmp
outsb
aas
sub
inc
shrb
push
ss
cmp
pushf
mov
int
jns
add
jge
int3
shl
jns
aaa
add
push
int
xchg
negb
lcall
cmp
and
pop
shrb
or
adc
lods
int
push
adc
and
add
movsb
inc
jmp
adc
or
outsl
dec
jb
inc
jno
jno
jb
outsl
jmp
outsb
outsb
push
jp
inc
dec
inc
dec
ja
push
bound
jp
push
dec
imul
push
push
call
dec
push
outsb
push
push
dec
dec
dec
jo
jbe
inc
imul
jo
imul
jnp
pushl
inc
push
arpl
fs
push
inc
nop
insl
push
jne
dec
dec
je
push
dec
dec
dec
in
push
call
outsb
pop
je
arpl
inc
ja
popa
pop
dec
dec
jne
data16
jo
pusha
push
jg
cmc
sbb
push
sbb
push
jne
dec
push
call
inc
push
addr16
dec
push
js
jno
inc
ja
dec
push
dec
popa
jp
popa
addr16
dec
push
test
dec
inc
inc
push
inc
imul
mov
jbe
jp
dec
insl
addr16
jb
dec
imul
inc
addr16
jo
popa
push
push
inc
outsb
mov
clc
dec
push
imul
popa
data16
jo
inc
bound
inc
imul
inc
inc
gs
inc
imul
dec
test
push
dec
add
push
push
imul
in
push
dec
jp
cmp
fsubl
add
es
inc
jb
jbe
xchg
sti
mov
jle
rcll
clc
lcall
push
out
or
pop
dec
and
sbb
or
insb
sub
jmp
lcall
aaa
push
add
push
push
and
add
inc
inc
testl
inc
rolb
enter
dec
fiaddl
adc
sti
shll
and
lea
outsl
push
leave
lret
sub
dec
push
and
sbb
repz
pusha
jae
inc
out
sub
jns
cs
push
xchg
addr16
xchg
insb
inc
inc
jmpw
repz
or
push
pop
jle
cmp
sub
repz
sahf
and
imul
faddl
adc
xor
jmp
mov
pop
aas
adc
xor
dec
jnp
dec
dec
and
bound
xchg
fbld
dec
lds
pop
fstl
popf
push
adc
push
and
add
sub
add
decl
and
add
push
add
adc
add
cmp
add
sub
data16
aas
add
mov
mov
aam
inc
mov
pop
xchg
je
out
test
cmc
pop
test
push
mov
popa
xchg
push
cmpsl
cld
lea
scas
bound
mov
mov
scas
addr16
cli
jmp
insl
cmc
js
addr16
loop
push
fadds
dec
nop
rorl
movsb
jmp
addr16
xor
inc
dec
push
mov
stos
and
xchg
jns
inc
dec
insl
imul
loop
cmp
call
push
je
outsl
clc
cmp
outsl
jp
outsb
xchg
mulb
push
push
imul
outsl
arpl
fs
out
lahf
lahf
jae
stos
imul
pop
cld
jg
pop
pop
inc
jo
dec
push
fnstenv
push
dec
stc
dec
jle
test
xor
jns
xor
scas
bound
insb
add
sub
and
cmpsl
stc
cmpsb
out
icebp
insl
push
lock
inc
orl
sbb
add
or
cmp
inc
push
pop
int
push
aas
fisubl
inc
mov
jl
dec
adc
push
pop
int
dec
jl
andb
out
sbb
xchg
inc
sbb
or
fidivl
inc
imul
movsb
inc
add
adc
adc
and
xor
int
adc
xor
addr16
mov
and
inc
jo
sub
xchg
movsb
inc
push
mov
test
inc
roll
mov
mov
jne
outsl
decb
ja
movsb
movsb
sub
and
orl
imull
decl
mov
mov
adc
jae
jecxz
mov
pushl
sbb
and
es
push
push
inc
pop
in
inc
cmpsb
rolb
or
push
addr16
add
lods
pop
stos
movsb
jo
add
xor
cli
outsl
pushl
xor
add
in
push
inc
imul
je
pushl
ss
out
mov
jnp
movsl
mov
lock
dec
loop
fs
sub
stc
pushl
add
imul
sbb
push
test
andl
xor
stc
jg
arpl
lret
call
cmp
andb
loop
lcall
ljmp
das
push
xor
sub
and
loop
incl
jmp
sbb
daa
or
xor
add
add
imul
enter
sub
pop
jecxz
jns
xor
mov
jg
incl
mov
decb
push
stc
cmpsl
cmp
das
xor
flds
jae
jns
and
push
push
mov
out
ret
dec
sub
es
jg
arpl
pop
jg
aas
shrb
inc
clc
or
pop
xchg
arpl
in
pusha
pop
mov
aad
aas
sarl
adc
cmp
loop
push
jp
and
adc
lods
sbb
jg
cmpsl
popa
decb
cmp
sub
and
and
mov
cld
ljmp
pop
push
pop
dec
sti
cmp
sub
insl
clc
or
es
xor
mov
push
stc
ljmp
xor
mov
ss
sub
mov
mov
repz
addr16
lcall
sbb
mov
xchg
imul
pushf
mov
mov
mov
stc
lcall
call
push
cmp
add
sub
cmp
push
addr16
lret
lcall
cli
xor
fstps
inc
push
and
pop
dec
imul
jmp
cld
jg
ljmp
insb
pushf
mov
arpl
stos
sqrtps
pop
inc
aaa
jmp
jns
mov
ret
add
adc
pop
cmp
fisubs
dec
jae
icebp
pop
in
cmpsl
xchg
ds
data16
std
inc
xlat
call
out
mov
shll
dec
incb
arpl
fbstp
loopne
jg
sbb
test
xor
pop
into
cs
addb
ret
call
mov
scas
and
out
mov
imul
dec
lahf
lods
add
icebp
jg
test
das
dec
jl
mov
cmp
xor
sub
mov
insl
pop
stos
mov
xchg
mov
xchg
or
add
jmp
push
jl
outsl
cmp
dec
ret
jge
xchg
test
data16
das
clc
mov
je
mov
mov
orw
mov
jae
pop
cld
call
inc
out
cmpsl
xchg
pushf
xor
or
scas
scas
aas
loope
addr16
jecxz
call
sbb
xor
inc
loop
jbe
lea
add
mov
mov
bound
in
and
ljmp
repnz
lahf
fwait
cwtl
les
je
fwait
scas
test
jae
mov
data16
outsl
sti
fs
pushl
and
mov
jp
and
pusha
out
mov
shll
divl
mov
loop
dec
jb
loop
bound
das
sti
in
dec
dec
cli
aas
adc
or
dec
inc
xchg
and
cmpsl
pop
mov
fwait
incl
jecxz
addr16
xchg
stos
mov
mov
cmp
mov
hlt
lcall
daa
testb
jp
mov
loopnew
inc
ret
in
aas
pusha
int
outsl
call
pusha
lds
decl
aad
dec
dec
mov
movsb
mov
add
and
sar
lcall
lahf
shrl
cmp
xchg
push
push
inc
mov
loop
push
stc
daa
int
jecxz
repz
cmp
inc
push
pop
andb
repz
jg
sbb
fs
sub
gs
xchg
shll
incl
cld
jbe
in
jmp
fdiv
jno
adc
mov
pop
dec
out
ljmp
pop
pushf
mov
push
mov
xor
lcall
xchg
cmpsl
sti
xchg
insl
mov
mov
mov
outsb
lcall
cltd
mov
sub
rcll
push
mov
mov
pushl
packssdw
or
and
cmp
dec
insl
out
jae
inc
call
out
testb
sub
xor
or
mov
jae
lcall
ja
subb
repnz
js
lods
insl
insb
addb
xchg
shll
sbb
add
inc
je
sub
es
fistl
bound
aas
sub
jb
leave
mov
dec
mov
jb
scas
push
jg
incl
inc
repz
xor
addr16
dec
cmp
decl
mov
dec
addr16
adc
popa
mov
jb
out
adc
cmc
fs
cmpsb
dec
push
fdivs
in
stos
pop
pop
xchg
add
adc
stc
or
lcall
nop
cmpsb
mov
mov
insl
jo
xor
adc
push
ss
cld
clc
mov
mov
adc
loope
insb
and
outsb
push
scas
clc
jg
xchg
push
inc
and
add
cmpsb
leave
sbb
dec
xchg
push
lea
dec
mov
int3
xor
and
pop
scas
push
arpl
mov
jmp
cmpsl
inc
ja
cmpsb
cmpsb
mov
xor
push
mov
xor
call
outsb
push
aaa
in
jp
clc
mov
push
scas
mov
cs
pop
arpl
cmp
or
mov
out
andb
andb
push
and
cmp
insb
jg
jecxz
in
pusha
mov
cltd
shll
mov
cmp
andb
inc
gs
push
sti
mov
xor
pop
mov
sbb
pushl
pusha
xchg
test
out
mov
outsb
fbstp
dec
adc
adcl
sub
sbb
push
jae
stos
imul
dec
inc
adc
pop
sub
cmp
shll
andb
mov
or
pop
push
fs
mov
and
lods
jl
scas
mov
outsb
jl
push
clc
sub
pop
int3
mov
jp
mov
mov
cwtl
mov
stc
add
mov
shlb
out
ss
out
int
call
dec
jb
cmp
out
cli
mov
jnp
js
and
or
mov
filds
push
inc
inc
adc
arpl
je
sub
inc
insb
cltd
test
cmp
fbld
inc
push
jno
lcall
shrl
jl
and
imul
rcr
test
cmc
loop
sbb
movsl
dec
mov
jo
xchg
insl
pop
jae
xchg
mov
push
jecxz
push
push
mov
inc
jae
fwait
inc
cld
dec
add
or
sub
xor
push
pop
mov
popf
xchg
movsl
sub
imul
mov
dec
arpl
fs
scas
dec
and
movsb
aaa
mov
mov
dec
and
pop
loope
and
mov
push
les
mov
out
xchg
mov
pusha
lods
dec
pop
out
push
cmp
sub
jns
xchg
rorb
out
loope
ja
outsb
sbb
dec
ss
mov
outsb
adc
incl
sti
cmp
call
into
inc
mov
push
dec
jae
add
fwait
cmpsb
add
daa
lret
add
mov
loopne
stos
test
fimuls
mov
mov
icebp
mov
loopne
jg
cmp
add
stc
repz
dec
inc
push
mov
push
add
mov
or
inc
frstor
inc
clc
jp
xor
jo
add
roll
dec
dec
ljmp
icebp
and
sti
mov
xor
cmp
push
jae
cmp
mov
int
and
add
push
xchg
movsl
cmp
fstpt
cs
call
dec
ss
mov
inc
flds
jg
decl
cli
and
insl
add
popa
jle
or
out
sub
gs
lods
stos
dec
jg
push
xchg
dec
xor
pop
cmpb
sbb
mov
or
sub
movq
inc
adc
mov
push
filds
jb
adc
loope
push
jmp
ret
incl
push
outsl
mov
mov
mov
dec
movsb
sbb
cmp
mov
push
stos
inc
push
push
enter
out
xchg
push
bound
or
jg
ja
test
addr16
and
jnp
cmove
lcall
cmp
scas
push
cmpb
shrl
lcall
insb
cli
mov
rclb
adc
jmp
imul
jmp
and
das
and
mov
lcall
lahf
out
clc
cmp
lcall
icebp
xor
aaa
jle
movsl
jl
inc
jae
jg
ljmp
dec
outsb
lret
ss
fbld
dec
and
mov
jne
jp
scas
cltd
ss
mov
cld
imul
jle
and
cltd
ret
mov
xchg
scas
mov
test
jae
mov
scas
imul
mov
addr16
testl
dec
sbb
aaa
inc
movsl
push
or
popa
loope
jb
xor
adc
sbb
mov
cli
sarl
sub
xchg
sub
jle
mov
ljmp
stos
ds
in
dec
jns
inc
clc
pop
push
xor
cmpsb
inc
adc
addr16
call
xor
sbb
push
cs
jae
jo
lock
ljmp
add
lds
mov
jp
sti
add
cmp
mov
insl
cmpsb
in
lahf
ss
jl
pushl
inc
dec
push
xor
sbb
add
out
pop
sbb
lret
rep
pop
inc
movsb
add
xor
push
pop
cs
dec
sub
or
or
xor
call
out
dec
adc
sub
sbb
outsl
cmp
xor
clc
sub
cmc
int3
arpl
aas
xor
cld
push
cltd
mov
gs
xchg
dec
iret
and
mov
in
inc
out
scas
pop
pop
pop
outsl
cmp
sahf
inc
jae
hlt
insb
push
lcall
push
mov
or
lods
ljmp
insl
jge
gs
push
pop
jle
pushl
pop
jl
dec
push
lods
jo
jne
mov
sbb
decl
insl
pop
in
push
hlt
out
cli
outsl
into
and
add
cmp
lret
jnp
jb
out
push
jb
leave
incl
pop
or
testb
add
outsb
sub
ljmp
add
outsb
inc
ja
jle
ss
push
pop
clc
ja
jmp
inc
dec
xor
das
push
xor
call
jle
arpl
sbb
xchg
insl
pusha
push
mov
pop
cmc
call
adc
and
out
adc
ljmp
cld
mov
out
xor
test
jo
sbb
push
popf
jno
add
cmpsb
mov
mov
mov
addr16
mov
notl
and
outsb
push
jmp
ljmp
pop
adc
add
and
xor
jge
fstl
mov
incl
xchg
xchg
mov
mov
movsb
cs
jle
jg
jg
cmp
das
popa
daa
sbb
inc
test
loop
dec
in
push
out
push
cmp
xor
lock
gs
cmp
xchg
ljmp
insb
ret
decl
cmp
aad
add
jmp
mov
je
dec
cltd
popa
jns
js
sbb
hlt
jmp
incl
push
in
dec
jbe
stos
mov
push
inc
repz
test
push
lock
push
push
addr16
mov
ljmp
insl
sub
adc
daa
dec
pop
or
cli
mov
leave
dec
sub
gs
js
mov
add
sub
and
pop
inc
lea
ficoml
test
mov
mov
dec
add
addr16
insb
pop
push
mov
mov
add
repnz
xchg
lods
out
lcall
decl
push
inc
push
inc
repz
sbb
jp
loope
inc
mov
out
and
push
nop
pushf
mov
xchg
ss
imul
xor
fcomip
out
clc
movsl
sbb
dec
and
out
outsb
outsb
adc
jmp
jmp
dec
sub
gs
cmp
cmp
jbe
aam
orb
sbb
xor
enter
bound
mov
js
inc
adc
ljmp
dec
js
movsb
fwait
jnp
mov
ss
add
push
outsb
xor
mov
call
ja
adc
mov
mov
incl
cmp
jbe
and
test
addr16
cmp
push
push
jnp
cmpsl
fmull
fidivl
cmp
ret
sub
daa
mov
ja
decl
cmpsb
xor
add
jb
adc
mov
inc
outsl
gs
ljmp
fisubs
test
mov
sbb
mov
or
stos
push
dec
outsl
clc
lcall
push
xor
or
and
sub
outsb
cmc
test
scas
cs
ja
hlt
push
sub
lods
das
pop
dec
addr16
mov
outsb
push
test
push
dec
jle
insl
cmp
vcvttps2udq
lea
clc
incl
imul
mov
ds
jle
xor
or
mov
lret
insl
and
cmp
sbb
dec
movsl
out
push
pop
xchg
cmp
jge
lea
jg
arpl
jg
jmp
hlt
mov
and
inc
subb
inc
inc
push
je
aaa
arpl
or
cli
js
adc
stos
ret
pusha
iret
sbb
pop
cmpsb
xchg
push
pusha
inc
push
mov
dec
dec
mov
xor
dec
jae
dec
cmp
dec
sbb
rcrb
in
mov
movsl
ds
add
push
movsb
mov
insb
inc
ds
xchg
cli
mulb
imul
inc
xor
ja
outsl
sub
push
ja
add
mov
add
gs
test
dec
add
push
push
inc
dec
add
push
sbb
lock
inc
add
jo
sub
dec
pop
lcall
bound
xor
imul
sti
cmp
xchg
pxor
push
int3
outsb
cmp
or
fwait
add
pop
xchg
shr
mov
out
cs
stc
enter
dec
push
lcall
cmc
cmpsl
push
push
dec
and
mov
push
jne
mov
call
dec
jle
stos
into
cmp
out
aam
out
xchg
insl
inc
mov
fistpll
movsl
cs
inc
pop
sbb
sbb
sbb
adc
jg
mov
adc
test
lea
cmpsl
gs
test
fdivs
jmp
xchg
cli
testl
les
jge
sub
out
push
imulb
jo
push
cmp
es
lret
into
pop
scas
leave
imul
xchg
out
dec
in
out
push
bound
dec
cmp
cld
jmp
jg
outsl
aas
shrl
add
jle
inc
mov
push
fimuls
cmpsb
push
lods
inc
das
arpl
orl
faddp
lods
das
pop
sbb
call
filds
jnp
in
loopne
fwait
stc
cmp
stc
lods
data16
into
inc
cmp
jg
mov
adc
bound
int3
cli
inc
sbb
xchg
pop
ss
scas
sbb
push
ja
cmp
xor
jo
or
xchg
and
orl
incl
fs
frstpm(287
inc
pop
imul
adc
pop
loope
dec
adc
dec
ss
decb
shll
lods
clc
sub
and
push
outsb
push
outsb
mov
lea
shll
movl
or
lods
lods
into
push
lret
xor
dec
inc
and
cmc
scas
xchg
push
or
sub
cmpsl
inc
dec
dec
aam
inc
ja
jmp
in
enter
arpl
and
pop
adc
test
sub
jo
rorl
call
aaa
jbe
es
inc
leave
xchg
insl
xor
movsl
out
push
stc
inc
arpl
and
imul
jle
and
add
cmp
xchg
outsb
jnp
mov
std
cmpsl
add
push
jle
dec
and
add
outsl
adc
sar
push
lcall
jle
jbe
imul
jge
mov
fcomip
cmp
lods
dec
jge
pop
lahf
dec
add
pop
pop
dec
push
add
and
jnp
lea
pop
inc
pop
ja
insl
adc
inc
cmpb
outsb
xor
sbb
fiadds
push
jno
scas
mov
sub
lcall
iret
lea
ss
int
inc
gs
sbb
pop
icebp
pop
cmc
mov
inc
push
movsb
jl,pn
jecxz
stos
stc
jl
into
mov
sbb
xchg
movl
push
inc
lods
enter
ljmp
sahf
or
and
and
call
push
test
lret
mov
mov
jmp
clc
mov
adc
pop
jnp
sub
lods
rclb
jmp
jg
lods
ja
andl
and
xor
aas
clc
or
mov
lods
pop
pusha
mov
in
loopne
data16
aas
cmc
jo
inc
mov
xor
addr16
gs
int3
mov
stos
jmp
mov
pusha
fcoml
cmp
jo
popa
call
jmp
and
mov
outsl
inc
or
fidivrl
decl
mov
add
or
out
les
add
out
sahf
std
xor
add
cmpsl
addr16
in
test
adc
mov
pop
out
add
arpl
and
test
pop
jns
out
cs
mov
call
add
jo
les
scas
dec
cwtl
popf
mov
push
cltd
lcall
pop
cld
out
mov
ss
mov
pop
adc
incl
das
fldenv
adc
shll
ja
fnstcw
jg
cmpsb
xchg
mov
mov
and
aas
and
popf
out
into
sbb
mov
nop
mov
nop
incl
xchg
cmp
imul
dec
loop
ret
sbb
je
fiaddl
movsb
pop
jg
sbb
jno
push
jb
loopne
inc
pusha
adc
jnp
call
jl
jg
xor
stos
lret
add
pop
ljmp
incl
stc
xor
lret
faddp
subb
jg
cmpsl
cmp
popf
sbb
scas
lret
jmp
pop
xor
cmp
xchg
mov
dec
mov
bound
push
push
out
push
inc
xchg
jns
in
js
jl
push
jne
decl
xor
mov
xchg
imul
adc
xorl
decl
pop
outsb
xor
and
and
loopne
push
jle
jle
pop
int3
mov
add
cld
jge
incl
aas
jbe
std
aam
push
mov
incl
out
or
cmpsl
int3
mov
popa
rolb
lds
mov
jmp
and
aaa
inc
push
jecxz
pop
data16
lock
xchg
adc
repz
fnstenv
shrb
mov
jb
and
sbb
lret
movsb
pop
aam
ss
or
cmp
mov
sub
call
pop
jle
gs
inc
inc
mov
cmp
icebp
add
mov
call
pop
je
mov
leave
and
leave
jbe
outsb
jae
inc
arpl
cld
adc
sarl
mov
cmpsl
in
andb
fwait
mov
cmpsl
cmp
adc
in
fildll
cmpsb
and
testb
mov
push
mov
aaa
ds
pop
es
xor
out
cmc
jg
decl
lea
mov
and
jg
pop
xchg
adc
outsl
mov
mov
insl
jl
sbb
mov
cmpsl
pop
xchg
xor
or
mov
xchg
xchg
push
aas
orl
push
hlt
sahf
inc
call
lcall
mov
out
imul
pop
jp
outsl
fildll
inc
jnp
fidivrs
inc
rcll
jecxz
push
jp
mov
jecxz
jge
call
ja
mov
pusha
mov
loopne
decl
repz
add
mov
mov
movsl
or
out
xor
mov
sub
mov
outsl
aad
cmp
adc
daa
out
dec
push
and
test
pop
xor
xchg
les
data16
cmp
jno
test
loopne
pop
cltd
pop
inc
sub
call
mov
cmp
imul
cmp
stos
jg
jg
inc
cltd
lods
adc
inc
bound
push
ja
stos
cmp
cmp
int
xlat
incl
psllq
push
pop
sbb
sbb
inc
out
test
xchg
pop
test
icebp
testb
loopne
jne
mov
subl
jp
and
sbb
or
inc
dec
frstor
push
lcall
arpl
pop
cli
movsl
xor
cmp
inc
loop
pop
mov
jnp
sbb
mov
jecxz
mov
into
test
jbe
in
aas
dec
jnp
test
fistps
or
jl
in
mov
xor
test
push
addr16
sub
or
adc
jb
dec
fucomip
push
bound
das
call
push
pop
roll
fs
pop
lds
ja
incl
test
outsl
sbb
jmp
decl
jae
stos
xor
mov
add
pop
das
or
call
mov
adc
cmpsl
pop
dec
cli
lcall
rcrb
outsb
repnz
jbe
lods
ja
lcall
sub
clc
add
in
gs
insb
ljmp
jbe
inc
scas
pop
xlat
add
mov
nop
in
les
sbb
xor
adc
or
das
insl
push
jmp
imul
and
add
dec
decl
add
xor
int3
push
repnz
mov
push
inc
out
js
incl
loopne
mov
out
jmp
out
push
pop
jae
sti
scas
fisubl
popa
cld
lcall
pop
hlt
mov
and
fldt
sbb
jmp
jmp
jo
aaa
sbb
ja
decl
cmp
aad
mov
push
jecxz
dec
jbe
lret
push
jg
ds
push
scas
jnp
jne
jmp
sbb
rcll
pushl
adc
mov
scas
out
in
std
xor
or
ret
imul
bound
jg
lds
inc
pop
adc
dec
xor
xchg
insb
push
je
adc
adc
out
jg
ljmp
inc
mov
jecxz
pop
push
jmp
cmpsb
incl
cld
in
xchg
inc
xchg
arpl
js
insl
mov
mov
in
stos
jnp
ljmp
into
jmp
cli
sub
nop
stc
popf
xchg
push
jno
in
dec
jae
sub
in
incl
push
repz
push
and
call
lcall
sbb
cltd
inc
call
pusha
int3
mov
dec
repnz
inc
fs
adc
xlat
pop
movsb
arpl
ljmp
pushf
sbb
popa
fldt
dec
lock
xor
and
inc
roll
lcall
push
inc
lea
ss
adc
jg
xchg
and
inc
adc
mov
je
das
sub
mov
lcall
fldt
outsb
lods
jle
push
adc
cli
and
call
std
sub
mov
cwtl
out
ss
call
push
in
pushf
pop
ds
stc
jl
ljmp
nop
push
lock
xor
fs
xchg
out
aaa
jg
mov
lea
inc
ret
adc
mov
xor
jecxz
xchg
cmpsb
scas
xchg
scas
sub
xor
std
push
lcall
out
mov
sub
pop
imul
fbld
outsb
ret
out
jmp
clc
sbb
mov
aad
lahf
add
dec
imul
sub
adc
cmp
lods
adc
fistl
cmpsb
into
mov
adc
dec
sti
lock
dec
test
popf
cmp
in
sbb
es
call
insb
inc
in
sub
add
ficoms
movsl
mov
sbb
insl
out
xchg
adc
sar
push
ss
inc
jb
fwait
push
xor
cmp
cs
sub
jne
sar
decb
js
jbe
push
xchg
gs
dec
aaa
clc
mov
mov
cmpsl
fbld
out
add
ljmp
aas
push
mov
bound
incl
popf
sbb
enter
outsl
sarl
mov
cmp
jg
bound
pop
popa
flds
cmp
jnp
movsb
add
push
lea
sub
lea
repnz
jge
in
mov
jnp
push
cld
sbb
pop
lods
adc
cmp
adc
cli
cmpsb
add
push
insb
aad
xor
in
jnp
jb
out
lea
jle
mov
push
mov
mov
sbb
mov
insl
ss
outsb
repz
scas
dec
push
ljmp
scas
sub
jle
call
mov
add
cmp
enter
xor
pop
sar
sbb
arpl
push
in
outsl
call
adc
xchg
or
sbb
addr16
scas
push
jne
outsb
and
adc
outsl
mov
inc
call
aas
mov
jp
in
dec
test
outsl
inc
arpl
lcall
popa
pop
rcrl
sbb
push
out
mov
mov
leave
daa
mov
outsl
mov
push
mov
mov
cli
jg
jmp
repz
int3
adc
pusha
clc
cmpsb
sbb
punpckhbw
adc
test
je
das
pop
out
aas
test
cmp
jae
in
out
ds
and
orl
stc
aas
pushl
aam
xchg
add
in
movsb
cld
mov
inc
jmp
mov
cmp
ja
sbb
xchg
xchg
pushf
sbb
or
fimuls
jp
jbe
mov
add
ljmp
add
in
lcall
mov
add
xor
cld
jmp
mov
jmp
jg
adc
and
je
lods
jmp
addr16
jo
pop
in
dec
adc
inc
scas
xor
adc
in
inc
test
imul
stos
pop
lret
jnp
ret
mov
je
xor
int
addl
xor
xor
incl
mov
mov
and
test
mov
xchg
pop
push
out
ss
std
int
fcos
mov
andb
enter
xchg
inc
mov
jecxz
push
jns
stc
and
pushl
mov
aas
push
inc
andb
iret
xchg
pop
dec
fwait
xlat
cmpsl
pushf
jg
cmpsl
sub
outsl
ret
dec
lock
pop
pushf
push
incb
lahf
into
and
mov
pop
addr16
or
mov
mov
scas
or
shrl
mov
jecxz
pushl
jecxz
insl
mov
fildl
xchg
daa
ficoms
pushl
ret
hlt
cld
dec
push
jne
loope
xchg
leave
push
mov
xchg
aas
pop
lock
xor
mov
es
jnp
sub
cmp
jno
pop
xchg
incl
push
pop
add
sbb
inc
dec
inc
lock
and
and
incl
pop
dec
out
pop
iret
scas
bound
inc
in
mov
inc
je
ds
das
inc
arpl
sbb
xor
stos
xor
xor
call
lock
loop
jne
adcb
or
add
fisubrl
add
sar
xchg
add
add
push
je
int3
and
decl
inc
std
mov
pop
or
js
dec
push
mov
mov
popf
lcall
outsl
pop
and
daa
outsb
jne
lock
leave
push
jp
or
xorb
push
je
sar
dec
inc
push
shrb
xchg
add
or
add
outsb
add
arpl
jmp
jmp
jb
or
adc
add
adc
popa
or
sbb
loopne
popa
push
mov
insb
dec
push
testl
push
pop
jp
in
lcall
or
xor
js
or
dec
int3
push
in
popa
pushl
outsb
pop
jnp
sarb
fs
pop
jno
enter
shlb
fwait
and
outsl
icebp
pop
decl
jne
push
jns
daa
dec
call
ffree
cmpsl
xor
and
pop
pop
ljmp
dec
push
imul
loop
inc
out
out
pop
jb
addb
or
mov
jge
mov
xchg
testb
xchg
testl
cmpsb
jne
test
out
push
cmpsb
pop
push
pop
and
cmp
rorl
call
es
insl
sub
jle
shll
push
mov
jo
ret
aaa
xchg
push
add
mov
sub
inc
out
push
iret
cmp
inc
outsb
clc
push
add
pusha
scas
lea
xchg
sbb
call
cmp
inc
xchg
xchg
mov
adc
push
or
outsl
es
and
push
xor
loop
repz
clc
enter
in
aaa
outsb
fs
or
push
xor
jnp
outsb
lods
out
pop
lret
cmp
in
incl
and
ret
adc
in
pop
out
stos
mov
in
ljmp
sbb
inc
sti
das
jle
cmpsl
lcall
cmpsb
adc
ja
decl
xchg
xchg
cmp
mov
mov
out
cmp
fbstp
push
cltd
push
out
jno
jl
jne
test
mov
stos
test
out
insl
xor
and
xor
lock
lds
pop
addr16
incb
pop
push
ss
jmp
std
sahf
hlt
push
jbe
pop
jb
outsb
decl
outsb
sbb
or
mov
popl
jmp
outsb
push
add
scas
xor
outsb
xor
pushf
mov
mull
in
lcall
adc
imul
pop
or
jbe
pushf
inc
sahf
rcll
xchg
js
std
and
loope
jmp
dec
bnd
push
cmpsl
xor
cmc
cmp
orl
push
xor
out
push
lcall
push
fwait
push
pushf
mov
add
push
mov
jmp
and
in
cmp
stos
sbb
jl
push
dec
in
push
jnp
pushf
test
push
out
mov
sub
or
ds
cmpsl
inc
push
loop
ds
shr
loop
out
insb
jmp
adc
js
mov
jmp
inc
ret
es
insl
enter
pusha
xchg
outsb
mov
jecxz
out
jb
arpl
clc
cmpsb
xchg
insl
in
dec
cmc
mov
scas
lcall
stc
or
movsb
mulb
or
dec
ljmp
cmovp
sahf
jp
jne
clc
or
mov
cwtl
xor
loop
outsb
and
lahf
js
xchg
mov
es
inc
xchg
jmp
imul
mov
jbe
fisttps
dec
aaa
fbstp
inc
dec
es
cwtl
popa
ss
push
cmc
push
std
loope
insl
fs
dec
add
sub
lea
dec
in
jns
mov
int
bound
xor
xor
lods
lahf
sar
pop
add
inc
inc
data16
pushl
sar
loop
es
jge
cvttps2pi
ret
add
xchg
neg
or
lret
fldt
xchg
adc
aam
in
pop
jmp
cld
aaa
in
push
inc
jb
out
fmull
int
fildl
popa
fwait
lea
insb
cmp
outsb
mov
cmp
dec
aas
out
outsb
inc
jecxz
pushf
cli
je
dec
push
hlt
xchg
call
adc
aas
insl
pusha
mov
jg
movl
adc
fnstenv
dec
sbb
mov
ret
imul
fs
popf
cmp
push
cld
dec
sub
lods
cld
pop
inc
cld
pushf
mov
mov
insl
add
add
gs
scas
add
std
mov
outsb
outsb
mov
repz
addr16
ss
sub
jecxz
pop
pushl
movd
sbb
mov
pop
cmpsl
data16
loop
add
in
aam
dec
push
jns
adc
adc
lahf
out
ljmp
sbb
bound
pop
testl
fcoms
test
xor
mov
loop
mov
jle
in
inc
dec
cmp
aaa
popa
ja
cmc
push
cld
lahf
sbb
cmpsb
leave
jb
mov
clc
aaa
cmp
repnz
inc
pop
out
insl
rorb
and
cmp
mov
pusha
ljmp
cmp
jo
incl
jle
mov
mov
sbb
incl
jo,pt
mov
sahf
xchg
lcall
or
ljmp
enterw
or
orl
data16
inc
dec
pop
test
jl
arpl
scas
cmpsb
jle
mov
sbb
cmp
push
bound
outsb
mov
dec
fmull
into
xor
pushl
xor
subl
cmpsb
out
fucomp
cld
iret
pop
les
outsb
or
xor
cs
stos
idiv
jmp
lcall
adcl
call
xor
imul
dec
inc
cmp
cld
call
std
xchg
mov
jge
dec
addb
pop
popa
out
cmpsb
insl
xchg
out
out
loopne
or
popa
or
cmpsb
add
out
push
test
les
xchg
inc
sbbb
and
das
lret
fildl
xchg
loope
jno
mov
cltd
cmp
mov
or
mov
add
inc
in
nop
ss
sti
xor
test
jle
xchg
shlb
test
lcall
js
add
repz
pop
add
cmp
dec
dec
aaa
cld
mov
jg
mov
into
add
jne,pn
mov
ret
and
ja
mov
pusha
push
out
push
push
enter
call
cld
js
sahf
xchg
xorb
ss
and
into
ss
dec
jmp
jno
clc
ljmp
xchg
data16
push
loope
test
mov
and
out
mov
xchg
mov
mov
test
sub
mov
subb
lahf
or
inc
loopne
jns
fs
xor
ret
in
mov
mov
xor
sarl
pop
lea
neg
ja
push
mov
call
enter
sbb
xor
popa
test
cmp
ljmp
lods
push
push
push
and
call
xor
mov
in
xchg
out
cs
adc
dec
push
xor
adc
repz
cmp
mov
ja
and
mov
outsl
jp
call
outsb
and
cmp
add
pop
decb
cmp
lock
hlt
fstps
js
adc
mov
subb
push
fbld
movsl
arpl
andb
lds
push
mov
cmp
and
xchg
clc
push
call
xchg
imul
xor
mov
orb
mov
dec
ljmp
and
push
jl
adc
cwtl
dec
xchg
xchg
movsl
xor
jno
dec
dec
out
scas
add
fnstsw
imul
mov
mov
xor
add
ret
cmp
stc
insl
pushl
and
arpl
adc
sti
and
les
mov
sbb
inc
and
int3
add
ljmp
mov
fwait
mov
and
add
outsl
lods
pop
mov
xchg
clc
dec
in
push
pusha
lods
cld
aaa
fs
mov
ljmp
dec
ds
inc
or
xor
mov
push
dec
fs
int
fcomip
scas
clc
outsl
ljmp
jae
int
push
dec
ficomps
test
add
decl
or
and
adcl
xchg
mov
cmp
mov
mov
bnd
incb
ljmp
sub
jnp
mov
mov
xchg
es
push
loopnew,pt
cmp
mov
xor
aas
leave
incl
cld
fwait
sub
arpl
idiv
and
cld
mov
jg
fstps
push
mov
into
xor
jae
in
mov
incl
ljmp
in
pushf
mov
cli
scas
test
xchg
jnp
sbbl
pushl
push
mov
call
mov
xchg
xchg
push
lcall
imul
sub
xor
test
add
or
cld
pop
call
pop
mov
adc
popa
inc
fists
jl
xor
sub
sbb
es
xor
sub
cmp
decl
cmp
outsb
addr16
push
sub
or
loope
jb
pusha
repz
mov
jg
call
gs
inc
lock
nop
mov
pushl
rcrl
push
push
sarl
dec
clc
sbb
jmp
mov
bound
add
stos
outsl
or
mov
and
ljmp
lods
mov
mov
or
and
mov
ds
arpl
sti
sub
invd
std
cmp
int
sbb
xchg
add
stc
lcall
fwait
jnp
pop
mov
push
pop
xlat
mov
ret
test
dec
dec
je
lahf
jg
test
dec
mov
mov
dec
ret
push
movsb
sbb
out
mov
xor
clc
stos
jnp
mov
insl
push
enter
in
xchg
insl
dec
decb
dec
jae
popf
fwait
ljmp
rorb
add
out
adc
mov
and
push
pop
test
inc
repz
out
add
xchg
sbb
rdmsr
cld
pop
rep
push
sub
imull
pop
inc
aas
sub
pusha
xor
ss
and
stc
iret
ljmp
sub
hlt
daa
jge
add
imul
inc
jo
cs
daa
xchg
pop
lahf
mov
scas
aas
sub
stos
push
arpl
adc
movsb
and
sahf
sbb
and
int
imul
inc
dec
ret
xor
pushl
scas
push
arpl
call
aaa
dec
das
mov
mov
mov
cmp
adc
cld
aas
sub
sub
stos
outsb
stos
dec
lahf
jg
ljmp
add
jb
je
sub
adc
decl
jo
roll
xlat
loopne
lods
cs
idivl
aaa
push
adc
out
data16
repz
dec
sahf
rcll
jb
mov
outsw
and
clc
pop
add
and
mov
pop
sti
addb
popa
test
dec
mov
lods
adc
lods
mov
clc
ljmp
inc
stc
movsl
push
push
add
fildll
jae
inc
add
mov
arpl
inc
test
stc
out
out
sbb
inc
loope
dec
test
push
dec
xchg
stos
das
test
insl
push
roll
es
icebp
cmpps
nop
or
jg
rcr
pop
add
cs
jle
cmp
or
frstor
jmp
and
inc
mov
push
dec
jo
loop
pop
scas
incl
dec
roll
push
dec
in
adcb
lcall
mov
push
in
push
arpl
and
and
clc
addb
sub
outsl
enter
dec
loopne
push
sub
dec
cmp
jb
test
pushl
andl
and
or
cmpsl
nop
or
cmpsl
jae
cmp
mov
dec
popa
mov
cs
js
and
dec
inc
pop
jp
lock
mov
out
mov
push
filds
std
and
inc
mov
stos
cs
cli
test
call
mov
mov
xor
insl
dec
andb
cmp
dec
push
jbe
pop
xchg
pushf
lods
leave
and
inc
in
leave
mov
cmp
sahf
add
sbb
cli
cmpsl
dec
hlt
mov
jns
das
jg
adc
dec
rorl
inc
loop
call
sahf
clc
out
cli
jmp
and
clc
adc
pop
movsb
addr16
push
incl
jp
pop
lea
loope
movl
sub
mov
incl
insb
int
jae
pushf
popa
xchg
ja
daa
push
pop
mov
jno
cltd
inc
mov
inc
cld
or
std
test
push
std
jne
push
addr16
iret
ret
scas
jecxz
jl
pop
mov
cs
call
call
out
jle
mov
popf
inc
clc
sbb
ljmp
push
add
popa
popf
or
adc
filds
jmp
and
xor
push
out
sub
ficomps
jg
or
out
inc
jecxz
adc
movsb
push
gs
cmpsb
clc
and
jmp
inc
shll
push
dec
pop
inc
sahf
outsb
fisttpl
call
test
outsb
mov
clc
xor
xor
mov
and
lret
nop
int3
jo
scas
aas
adc
xchg
subl
ljmp
shlb
hlt
nop
adc
mov
add
and
je
movsl
imul
fidivrs
or
xchg
test
imul
out
ss
out
icebp
test
je
mov
decl
dec
pop
and
jp
and
jge
sub
loop
fnsaves
lds
daa
sub
testl
jg,pn
dec
shll
jo
push
dec
cmp
mov
call
mov
fwait
decl
lock
jmp
mov
in
repz
push
lock
int3
cmp
jnp
gs
mov
adc
push
call
loope
addr16
mov
int
ljmp
addr16
insl
daa
jo
es
pop
inc
roll
jb
mov
es
lahf
jge
ljmp
incl
inc
push
frstor
clc
and
ja
sub
rclb
pop
nop
in
pop
jns
inc
jle
pop
push
dec
dec
test
inc
cmc
testb
decl
ret
ds
ret
mov
in
jmp
sti
inc
fildll
push
dec
push
mov
je
push
inc
dec
pushf
std
dec
cwtl
cmp
cli
push
loop
adc
loopne
clc
decl
dec
jge
dec
inc
test
loope
push
popa
jecxz
inc
dec
pop
add
push
insb
mov
mov
sbb
adc
fldenv
push
loope
cld
add
clc
notb
inc
out
lret
fwait
add
out
mov
push
in
pushl
mov
pop
mov
pop
or
in
dec
jnp
xorl
pushl
lcall
scas
dec
popa
ds
std
dec
out
pusha
jmp
jecxz,pn
add
in
sub
mov
push
mov
imul
call
imul
inc
mov
lret
lods
adc
jge
nop
inc
loop
or
ja
cmpsb
jo
push
lods
push
out
lcall
cmpb
addb
adc
jnp
test
jg
incl
jecxz
sbb
arpl
adc
sahf
pop
bound
mov
decl
dec
dec
outsl
xchg
or
jno
mov
and
cmp
jg
incl
imul
inc
xor
jne
inc
mov
pop
xlat
mov
jbe
sarl
cmp
ss
dec
stos
dec
cltd
or
int3
ss
dec
sahf
jb
decl
out
and
insb
mov
pop
cmp
es
pop
xchg
sbb
popa
loope
jno
sbb
cmp
jg
loopne
jb
das
and
sub
jmp
and
subb
pop
loopne
cmp
jg
movsl
inc
jl
aad
dec
sahf
mov
lahf
sub
adc
nop
aaa
jbe
jmp
dec
dec
imul
pop
cs
outsb
fistps
jg
cld
stc
xchg
mov
dec
add
xchg
dec
inc
dec
cmp
bound
sahf
mov
call
incb
incb
pop
sti
sahf
pop
les
xor
out
add
fnstenv
jle
pop
enter
pop
pop
mov
cmp
je
xor
jmp
imul
jge
push
shll
gs
cltd
fldenv
add
lock
into
xor
je
dec
js
and
sbb
hlt
fistpll
cmp
incl
mov
test
and
insb
or
inc
xor
incl
push
adc
xor
into
mov
lahf
mov
leave
adc
addr16
fcomip
jg
or
imul
ss
jecxz
frstor
je
adc
sbb
jno
sub
mov
adc
xchg
dec
decl
jbe
mov
jns
call
xor
je
cmp
ja
outsb
pusha
ja
cmpsb
ret
adc
cwtl
sbbl
cmpl
lock
sbb
cmc
sbb
pop
icebp
pop
lock
adc
sbb
xlat
add
ljmp
add
jmp
sub
sbb
movsb
mov
mov
push
jl
es
pop
jecxz
push
lods
and
mov
inc
inc
cmpsl
cmp
stc
incl
in
bound
sbb
dec
pusha
loope
push
push
cmpsl
jecxz
mov
pop
cmp
cmc
cmp
sbb
or
in
lds
dec
scas
mov
push
int
add
dec
dec
pop
dec
out
ds
add
push
movsl
icebp
cwtl
jg
pop
cmc
xchg
add
xor
call
outsb
loop
pop
out
andb
jg
or
insb
out
out
jp
adc
dec
jmp
or
jl
sbb
orb
outsb
or
jmp
roll
dec
in
sbb
xor
mov
lcall
ljmp
shrl
dec
lret
push
inc
aas
ds
or
loopne
push
pop
sbb
lret
cmp
inc
rorb
out
jl
mov
cmp
adc
out
aas
add
or
clc
or
pop
xchg
stos
ss
cld
inc
dec
cld
push
sbb
push
jae
xor
cmpsl
jmp
lcall
cmp
and
dec
xor
cmp
out
pop
sub
xor
adc
or
ljmp
popf
sub
loope
stc
xchg
xorb
nop
adc
adc
scas
sbb
call
cmp
or
xor
jae
mov
ljmp
addr16
and
mov
clc
adc
cmp
xor
enter
cmp
jle
push
dec
insl
pushl
inc
jmp
xor
push
cmp
fnstenv
imul
mov
ljmp
punpckhbw
xchg
lea
fwait
cwtl
dec
adc
inc
jne
inc
xchg
and
mov
ja
decl
jle
or
cmc
mov
push
add
push
pushf
push
lcall
xchg
outsl
iret
mov
jge
xorb
imul
mov
mov
movsl
xchg
std
cmp
inc
inc
mov
cmpsb
jmp
add
bound
ljmp
mov
mov
stos
or
add
test
cmp
pop
insl
push
adc
dec
cmp
pop
sbb
insb
inc
popa
and
cmp
pop
ds
cmp
je
ss
decl
add
sbb
add
pop
or
imul
adc
pop
outsb
sub
outsb
cmc
jnp
sbb
loopne,pt
jg
push
inc
sbb
add
sbb
outsb
sbb
stos
mov
mov
clc
xor
jg
pop
shlb
pop
nop
sbb
jne
mov
stos
outsl
sub
cmpsb
imul
mov
sbb
mov
outsb
dec
in
dec
jmp
pushl
out
mov
loope
push
jne
stos
jo
jnp
pop
inc
jp
ljmpw
inc
call
stos
mov
ljmp
xchg
out
pop
add
push
or
cmp
aas
cmp
ss
inc
sub
movd
jge
xor
sub
add
aaa
inc
jg
jbe
pop
jge
xchg
ss
pop
push
jb
xchg
add
push
call
pop
sub
mov
sub
mov
xor
push
rol
lcall
in
cmpsl
outsl
jbe
rcr
mov
or
into
cmpsb
cmp
or
ds
sbbb
in
xor
repz
sti
xor
pop
mov
jle
das
pop
jno
push
jns
jb
aas
push
inc
and
aas
pushf
mov
or
jmp
in
jo
sbb
xor
adc
aam
and
push
adc
stos
pop
sub
pushf
sub
subl
cmpl
jl
aas
loope
rolb
and
push
inc
xor
cmp
fnstcw
sarb
cmp
enter
xor
xor
xor
inc
test
outsl
mov
mov
aas
outsb
push
sbb
sbb
dec
jmp
jb
cs
dec
sub
and
movd
push
test
pop
xchg
pop
mov
adcb
pop
mov
mov
rsm
stos
mov
mov
push
push
lods
loop
dec
xor
addr16
aaa
jle
adc
jecxz
jno
pop
icebp
pushl
add
adc
dec
xor
shrb
push
jbe
mov
fs
rcr
fimuls
add
stos
mov
sbbb
lret
mov
aaa
xor
sbb
mov
out
insb
aaa
ss
test
andb
xchg
scas
cs
incl
pushl
mov
pusha
inc
nop
out
push
sbb
aaa
jl
and
call
adc
or
push
and
and
loop
push
jmp
xor
inc
pushf
inc
jae
es
dec
cmpb
sub
and
clc
mov
out
test
inc
inc
pusha
and
stos
daa
pop
gs
cmp
loopne
fcomip
incl
adc
dec
mov
in
test
mov
cmpsl
adc
or
stos
ljmp
jne
add
cmc
dec
into
ss
cli
mov
call
sub
es
adc
stc
sbb
leave
mov
jl
add
es
dec
lret
dec
imul
test
ljmp
fbld
daa
jg
stos
jg
push
jno
inc
mov
pop
ljmp
inc
dec
insb
loopne
es
jbe
mov
inc
lcall
jmp
mov
mov
xchg
test
addr16
jmp
and
mov
clc
sub
xchg
lods
je
test
mov
hlt
call
insb
or
mov
subb
xchg
push
sahf
mov
fists
adc
dec
test
lods
mov
mov
scas
test
mov
sti
pop
xor
insb
sbb
push
mov
orl
cld
incl
cmp
xchg
loopne
gs
pop
push
repnz
loopne
jge
cmpsb
out
mov
add
cli
aaa
mov
mov
popa
mov
mov
mov
sub
push
adc
dec
es
decb
pop
xor
lea
jo
dec
dec
add
icebp
lcall
mov
js
lods
imul
js
cmpsb
or
mov
lcall
jno
jl
push
mov
out
out
subl
inc
adc
and
call
jecxz
jg
sarb
pop
push
cmpl
jmp
imul
test
jno
push
cli
push
gs
cmp
aaa
dec
or
das
xor
lcall
adc
shll
sbb
sbb
or
sbb
jne
je
into
inc
mov
clc
mov
fs
add
mov
stos
insb
je
or
stos
daa
cmp
cmpsl
leave
mov
clc
jmp
fnstcw
mov
pop
inc
popf
out
dec
shr
pop
dec
sti
cmp
push
pusha
stc
sub
das
jle
lret
mov
jae
push
xchg
mov
insl
dec
insl
filds
inc
push
inc
jmp
out
xchg
dec
push
inc
outsl
aam
outsl
inc
mov
push
insl
push
inc
dec
pop
in
push
xchg
lods
mov
jns
mov
inc
push
dec
scas
sub
jns
test
stos
fwait
cmpsl
xchg
mov
adc
lcall
scas
sbb
jge
mov
dec
repnz
dec
lahf
stos
or
cld
js
cld
fistps
test
mov
xchg
mov
push
test
mov
inc
lcall
ja
jb
mov
dec
lods
std
or
push
xchg
popa
cmpb
sbb
mov
call
ljmp
lcall
rcll
mov
pop
inc
inc
jbe
mov
fcomip
add
mov
xchg
mov
mov
daa
dec
xor
iret
daa
arpl
inc
dec
mov
lret
adc
test
imul
iret
test
jo
repnz
mov
data16
and
pusha
push
outsl
insb
out
std
cs
and
int3
cmp
or
mov
js
cmp
and
xlat
adc
cmp
cld
arpl
and
xorl
and
cmp
stc
add
xor
sbb
fwait
testl
nop
pushl
mov
out
pop
and
sbbl
xchg
pop
mov
push
std
jg
jecxz
testl
adc
ret
in
fs
jmp
daa
dec
and
add
pop
mov
jbe
xor
mov
loopne
popa
ss
push
jo
daa
push
xor
daa
or
inc
arpl
ljmp
out
jle
loope
je
mov
mov
outsl
outsl
flds
lcall
and
das
pop
movsb
and
jne
leave
xchg
fcomip
incl
pop
cmp
ja
in
ja
mov
mov
jg
std
inc
shll
xor
idivb
sub
cmp
jnp
mov
cli
cld
stc
or
shl
sbb
push
inc
sub
mov
test
mov
cmp
cmpsl
in
pop
cmpsb
mov
mov
jle
xchg
js
add
xor
jl
mov
inc
in
jg
sub
orb
dec
fildll
mov
push
xchg
stc
aas
dec
incl
cld
ljmp
pop
pop
xor
adc
dec
jp,pt
or
dec
cli
std
cmp
and
std
daa
jp
cmp
mov
mov
repz
push
incl
dec
popl
sub
movsl
dec
leave
ss
xchg
and
aas
pop
stc
and
inc
les
pop
sarb
cld
pop
mov
xor
ss
addr16
inc
arpl
push
cli
aas
cmpsb
cmp
add
adc
add
scas
cli
cwtl
jb
jo
addb
sub
xor
sbb
push
and
and
fwait
sbbl
rcl
jecxz
sbb
dec
int3
jecxz
inc
into
inc
xchg
decb
movsl
incl
cmc
dec
hlt
das
mov
push
and
jo
jle
icebp
jg
out
push
dec
fbstp
jno
mov
jg
mov
cs
mov
dec
loopne
popf
adc
roll
data16
sbb
push
cld
mov
mov
xchg
lahf
jno
sarb
in
dec
jecxz
es
in
pushf
lcall
mov
jns
incl
jg
bnd
aaa
jno
sbb
sti
mov
clc
xor
shrl
ss
pop
outsb
and
daa
outsb
xor
cld
aas
ss
sbb
inc
inc
push
inc
lret
sub
jle
add
mov
ja
jbe
out
push
jmp
int
xor
call
out
cmovo
or
xor
mov
jo
pop
dec
fsubl
pop
cmp
es
mov
xchg
mov
iret
lods
adc
ret
in
inc
cld
mov
add
sbb
lods
ljmp
cmc
aas
outsb
xor
outsb
sbb
add
stos
repz
outsb
test
push
or
push
imul
jns
and
aaa
push
das
mov
mov
ret
iret
inc
sbb
ljmp
adc
jge
scas
pop
je
loop
out
cmpsb
push
jle
jmp
sbb
data16
incl
inc
push
cli
jg
mov
push
cmp
into
push
push
sub
outsb
push
insb
fldl
popa
push
ljmp
pop
adc
mov
push
ja
decl
inc
sbb
ds
dec
mov
shlb
cmpsb
adc
mov
add
sub
test
out
dec
out
rcrl
add
repnz
repnz
mov
stos
ffreep
adc
inc
std
sbb
xor
push
xor
outsl
xchg
sub
xor
fistpll
loope
insl
jg
ds
inc
out
adc
rcll
fistl
add
jbe
sbb
lods
and
popa
lretw
adc
pop
out
es
sar
incl
aaa
mov
adc
jl
and
loope
jb
ljmp
leave
aaa
mov
rorb
jecxz
jmp
push
shl
ficoms
aas
ret
fwait
repnz
dec
outsl
push
inc
push
fldcw
jae
call
imul
mov
movsb
dec
cmpb
aas
into
out
xor
inc
push
lcall
enter
add
push
push
outsb
and
or
adc
loopne
fmuls
ljmp
add
or
xor
out
pop
jb
int3
test
aaa
add
fiaddl
roll
ss
sub
std
fsubrl
mov
dec
add
adc
push
outsb
repz
fimuls
fsts
iret
ljmp
ret
test
aad
int
sarl
dec
mov
das
into
jae
fdivs
fidivrs
outsl
jle
xor
fstl
ljmp
fistpl
push
inc
pop
xor
mov
push
shlb
mov
test
out
mov
mov
push
ljmp
fiadds
cmp
pop
cmp
cmpsb
cmpsl
jb
decl
pop
cmp
fucom
in
mov
cmp
jp
incb
add
call
cmpsb
icebp
pop
and
fdivrs
adc
sbb
jle
or
push
out
lahf
add
push
movsb
das
pop
ljmp
xor
mov
call
int3
cmc
inc
icebp
outsb
leave
mov
push
or
fldt
es
addr16
cltd
mov
jl
adc
add
aas
jb
loope
icebp
xchg
lock
push
in
jle
dec
adc
fabs
inc
es
sarl
loope
dec
push
cmpsb
sti
jge
inc
mov
int3
push
enter
cs
outsl
loop
ret
and
sti
jg
pop
loopne
outsb
fistpll
nop
pop
push
negl
enter
xchg
test
push
cld
addr16
xor
mov
ret
push
iret
inc
mov
adc
pop
push
xor
das
push
lea
out
dec
std
add
cli
cmp
je
mov
or
in
push
call
movsl
jb
cmp
jl
jl
dec
sbb
mov
out
in
dec
fsubr
lock
jo
sub
arpl
mov
mov
jl
in
lahf
subl
into
daa
xlat
dec
lea
fcomip
arpl
outsb
xrelease
repz
dec
push
pop
cmp
jp
call
ds
push
dec
call
test
inc
repz
ds
arpl
jg
outsl
add
ljmp
jecxz
sub
jecxz
in
imul
jecxz
pop
int
jmp
iret
sub
xor
cli
and
and
mov
mov
inc
out
ljmp
inc
ljmp
ljmp
ja
jns
ret
sti
mov
sbb
xor
cwtl
adc
push
jb
cmp
outsl
fdivrp
pop
dec
in
outsl
rol
int
in
ljmp
jecxz
dec
ror
stc
adc
out
cli
in
push
pop
mov
dec
mov
stc
push
jns
jp
dec
aas
cmpb
mov
jbe
mov
sub
xor
dec
jae
add
and
push
sbb
cmp
sub
and
scas
jo
jg
fisubs
in
xchg
xor
sbb
je
pop
loopne
ljmp
bound
scas
sub
test
outsb
cmp
mov
jo
call
jl
imul
add
mov
imul
cmpsl
pop
mov
or
xorl
les
add
arpl
es
outsl
adc
xor
ja
movsb
and
add
and
fisubl
call
inc
movsl
and
jbe
scas
jbe
dec
andb
mov
cwtl
cmp
and
sbb
add
aaa
lods
lahf
sar
and
roll
cmpsb
cmp
ljmpw
lcall
dec
popa
pop
mov
cmc
or
daa
sub
or
std
ds
sub
lds
je
test
mov
cli
jg
jl
mov
insl
mov
stos
mov
inc
sbb
out
sbb
adc
into
xchg
xchg
fildll
sub
test
loop
mov
ja
lret
out
adc
andl
and
decl
inc
rcll
std
jl
push
out
push
inc
frstor
incl
in
faddp
jne
ret
aas
push
aaa
shlb
data16
jnp
cmp
lcall
jge
or
sbb
inc
dec
sub
movsb
lret
cmc
and
lods
js
push
jae
sarb
sbb
and
xchg
nop
and
cmp
cld
cwtl
cmpb
clc
or
dec
pop
addr16
jmp
clc
xchg
xchg
hlt
out
clc
incl
popa
cli
xor
hlt
jge
sub
in
add
xor
mov
outsl
push
xchg
mov
add
stc
gs
bound
in
ljmp
xchg
dec
xor
lcall
jle
scas
push
test
sbb
lods
pop
lea
and
dec
push
fwait
mov
das
fmuls
push
jae
inc
jo
aam
bound
lock
cld
pushl
in
dec
push
cld
arpl
cmp
sbb
sbb
jl
outsl
mov
or
arpl
rclb
scas
cli
pushl
dec
cs
inc
sahf
jecxz
jne
lods
push
dec
in
xchg
adc
push
add
dec
xchg
push
push
aas
in
mov
jg
mov
xor
out
in
push
nop
pop
gs
xchg
outsl
mov
roll
sub
loopne
cli
jmp
and
jecxz
dec
pop
xor
mov
push
out
push
ja
ret
pop
ja
loopne
jecxz
popa
call
push
sub
push
add
dec
and
or
jae
std
decl
notb
insl
fildll
jle
ljmp
jo
clc
cmp
add
xchg
ja
inc
in
pop
pushf
mov
cmp
sub
xor
pop
loopne
dec
ja,pn
add
imul
jg
cmp
out
insl
clc
push
out
jb
call
jmp
cwtl
out
jo
mov
stc
xchg
cld
xchg
xor
mov
cmpsb
jecxz
inc
les
insl
cmp
sub
dec
sbb
arpl
aas
dec
jg
stos
addr16
mov
ds
into
jnp
sub
sbb
loopne
sar
and
adc
mov
call
outsl
es
jecxz
cld
mov
and
testb
ljmp
enter
jl
sub
jnp
sub
pushf
jg
mov
loopne
pop
ja
cmpsb
andb
in
and
into
movsb
ds
dec
rcrb
push
jmp
test
arpl
std
adc
adc
ja
inc
cli
cmp
daa
rcll
jo
add
fistpll
xchg
lcall
adc
and
jg
add
xor
lret
xchg
in
es
push
imul
lcall
clc
lret
xor
rcrb
stos
sub
out
ja
fnstcw
pushf
mov
popa
idivl
cmovl
rorb
pop
dec
ljmp
and
mov
mov
sbb
sbb
test
sub
inc
clc
sbb
repz
lods
nop
sti
mov
lods
pop
aas
or
dec
shlb
aas
loope
pusha
cmpsb
cmp
and
out
and
pop
clc
test
test
jnp
xchg
xchg
rcrb
dec
movl
jns
sbb
lret
dec
ss
je
call
mov
sub
mov
push
mov
sahf
sub
push
jne
loop
and
in
sbb
jl
stc
xor
js
or
cmp
ljmp
aas
lds
std
mov
mov
adc
mov
add
out
xchg
and
scas
es
sbb
clc
mov
bound
jg
mov
xchg
daa
jb
and
test
insb
loop
insl
ret
in
pop
int3
inc
daa
in
aas
sbbl
mov
sbbb
cmpsl
push
xor
add
jg
aaa
data16
jle
xorb
mulb
add
mov
dec
ffree
outsl
and
ja
movsb
int
pop
cmp
aad
jp
push
jb
inc
push
mov
xor
out
mov
push
cld
pushf
pop
mov
mov
ss
sbb
cld
cmp
fs
mov
dec
mov
mov
daa
repnz
inc
sar
pushl
dec
nop
sub
mov
push
std
and
and
mov
mov
sbb
stc
adc
mov
jo
pop
push
ret
inc
mov
jl
test
cmc
fwait
pop
in
cmp
aaa
enter
dec
jge
pop
stc
or
adcl
out
scas
lods
pop
icebp
decl
push
mov
jnp
loopew
mov
jmp
into
cmp
sub
aas
cmpsb
out
hlt
or
sbb
arpl
je
ja
inc
cmp
out
movsl
mov
jge
inc
cmp
push
bound
push
inc
test
scas
das
jne
decb
std
decl
xchg
mov
or
lret
mov
jecxz
loopne
jg
jge
xchg
xor
sbb
sbb
sahf
lcall
push
repnz
incl
punpckldq
mov
jp
add
stos
dec
out
pop
add
lcall
push
loope
js
ja
push
push
ds
shlb
xchg
faddp
scas
cs
in
pop
dec
fs
mov
xchg
clc
xor
xchg
add
xor
inc
cmp
aas
test
dec
test
pop
mov
es
push
lock
mov
decl
push
sarl
push
loop
push
dec
push
fwait
and
pop
push
out
test
movsb
push
lret
xor
call
adc
and
inc
insb
dec
addr16
mov
and
pop
mov
outsl
jns
fldt
outsl
fs
dec
add
mov
sar
cld
ljmp
xor
and
jecxz
mov
jg
test
les
jo
iret
clc
push
pop
push
loope
aam
std
xor
pushf
out
mov
out
cli
int
pushf
out
mov
push
mov
arpl
lods
fsubl
push
push
or
lods
push
mov
sbb
mov
xor
int3
xor
xchg
nop
xchg
jmp
xchg
mov
out
xchg
pop
pusha
loope
enter
jecxz
lcall
add
icebp
call
push
fcomp
lea
or
cmpsl
jp
les
push
xor
out
ljmp
ss
pop
cmp
imul
jmp
pop
mov
cmpb
jo
mov
and
jg
sbb
sbb
lods
mov
mov
inc
mov
jmp
das
push
inc
subb
push
jnp
xor
or
inc
push
add
cmp
pop
aaa
in
jbe
out
sbb
das
add
mov
lock
stos
push
movsl
aam
ds
or
jecxz
push
cmp
sub
add
jge
test
int
sub
push
jle
repz
dec
and
pop
adc
out
data16
movsb
mov
xchg
mov
das
ficomps
mov
xor
cmpsb
mov
cmp
xorl
fwait
arpl
scas
or
daa
test
cld
ljmp
push
mov
adc
and
mov
sub
out
dec
fsubrs
out
mov
or
dec
test
lahf
loop
lds
jl
and
xchg
sbb
push
jg
mov
test
incb
sbbl
sub
mov
cld
stos
popa
push
es
adc
ja
cltd
jmp
xchg
push
leave
ja
sbb
call
lock
lods
inc
cmc
fwait
sbb
sbb
lret
xor
arpl
dec
push
out
sbb
call
rcll
push
repnz
push
fstpt
popa
in
mov
lcall
fs
outsl
out
pushf
int
pop
xlat
cmpsb
mov
rclb
roll
in
idivb
mov
sub
jns
sbb
fcompl
and
mov
jbe
mov
lds
icebp
pop
hlt
sub
push
clc
or
dec
mov
cs
leave
in
hlt
filds
fildll
add
push
mov
ljmp
pop
scas
clc
xchg
lcall
stc
mov
out
sbb
pusha
repnz
nop
test
lahf
notb
or
call
aaa
dec
jecxz
dec
imul
adc
cmp
stos
cmp
dec
stos
lds
pop
in
xchg
sub
and
push
cli
add
adc
mov
hlt
adc
xchg
ja
pop
mov
and
arpl
pushl
sbb
cmp
pop
in
push
inc
out
popa
push
ret
inc
int3
push
jbe
sar
lcall
fwait
mov
pop
hlt
pop
lods
addb
xchg
adc
lcall
in
pop
loopne
jae
adc
shrl
jmp
imul
lcall
or
cs
xorb
pop
decl
repnz
call
aad
orb
mov
xor
jle
cmc
push
push
push
pop
jp
cmp
and
mov
call
ljmp
pop
jno
into
sbb
sbb
xchg
call
jl
js
jae
pop
dec
loop
pusha
push
cmp
loopne
aaa
jmp
add
call
sub
jbe
daa
jnp
scas
clc
stos
jno
popa
imul
in
movsl
cmp
cmpsb
mov
mov
inc
push
pusha
aas
jnp
inc
les
fwait
ja
std
cmp
icebp
xchg
in
mov
add
lcall
imul
jmp
sub
push
mov
insb
shlb
dec
mov
ficomps
sub
add
out
ljmp
insl
call
push
mov
jno
jp
lock
into
jge,pn
test
and
mov
push
data16
lods
inc
je
xchg
sub
xchg
jle,pn
dec
mov
xchg
nop
xchg
test
xchg
js
out
scas
out
jb
add
call
cmpsl
lock
lret
mov
sbb
fs
lock
decl
outsl
and
andl
in
xor
and
sub
sub
adc
incl
push
push
push
fwait
addr16
inc
jns
jg
mulb
addr16
pop
lret
ss
addr16
loop
ffreep
inc
add
dec
fwait
inc
mov
push
loopne
pop
outsb
jge
outsl
mov
ret
out
repz
jle
jnp
out
or
inc
call
jmp
push
add
inc
in
dec
cmp
pushl
js
inc
out
xchg
add
imul
and
outsb
jb
cmp
jns
and
incl
mov
in
in
xchg
cmp
loopne
es
sti
cmpl
orb
and
push
inc
lock
mov
or
addr16
dec
cmpsb
dec
arpl
or
push
out
es
jp
mov
sub
inc
inc
mov
neg
jnp
inc
push
jg
lods
adc
jnp
cmpsl
and
xor
das
arpl
add
dec
shrl
hlt
cs
test
mov
add
mov
mov
cmpsb
fsubp
lods
icebp
cs
push
xchg
sub
pop
aas
adc
in
mov
mov
xchg
mov
nop
add
fidivrs
pop
mov
es
divb
adc
jle
pop
subb
fcmovu
popf
ds
push
in
scas
add
fwait
sbb
sti
sbb
cwtl
pop
out
or
xor
cmpsb
outsl
mov
fdivr
and
pushf
shrl
enter
sarb
das
mov
inc
cmp
fidivs
ljmp
xchg
push
jb
testl
adc
popa
push
mov
shlb
outsl
idivb
test
inc
sub
pusha
pop
jnp
into
incl
fwait
push
ret
nop
lods
xchg
cmpsb
jbe
movsl
adc
inc
adc
out
ss
push
adc
inc
fildl
mov
insl
sarb
iret
pop
stos
inc
lods
jmp
call
incb
jl
ljmp
xor
mov
or
push
mov
pop
stc
incl
sbb
push
cwtl
in
xor
pop
aam
mov
outsb
pop
ds
add
lods
push
sbb
out
mov
or
in
popa
repnz
jo
pop
or
loop
cld
out
les
mov
ss
test
xchg
mov
pop
sbb
fistps
stos
ret
ss
push
jne
shll
test
ja
xor
and
cmp
adc
push
out
test
mov
inc
inc
rep
enterw
scas
inc
sbb
add
xchg
dec
int3
nop
mov
into
mov
cltd
fwait
int
fwait
lahf
mov
dec
sbb
or
jae
outsl
call
mov
fsubp
xchg
push
in
outsb
push
jbe
push
mov
lret
out
cmpl
mov
and
gs
out
sbb
and
cmp
jno
xor
jnp
cmp
xor
pop
or
repz
js
paddw
inc
ret
mov
ja
dec
fs
push
loope
add
test
das
jbe
adc
pop
mov
jle
jb
pop
enter
ja
insl
xor
lcall
pop
mov
jb
out
jbe
fistl
ret
lds
jbe
es
xor
filds
ret
xor
out
push
jecxz
push
mov
mov
cmp
es
ljmp
push
push
in
out
mov
test
jmp
pop
aas
das
xor
mov
xlat
decb
iret
and
in
or
cltd
decl
incl
xchg
push
or
std
jbe
mov
jecxz
call
std
inc
jl
adc
sub
xorb
imul
iret
addr16
inc
std
ljmp
stos
adc
inc
sbb
sbb
call
std
push
xor
int
js
femms
xchg
sub
js
mov
mov
dec
cli
mov
sahf
les
cli
jns
and
clc
out
mov
rorl
data16
jo
mov
xor
mov
add
xor
js
shlb
lcall
cmp
int3
mov
int3
cld
xchg
das
jp
jo
jne
sub
call
add
xchg
subl
pushf
add
subb
imul
lcall
in
jp
sbb
or
in
scas
xor
daa
insl
mov
xchg
push
mov
sbbl
jno
decl
pop
sbb
xchg
jno
bound
sti
stos
into
nop
stos
movsl
inc
shl
push
push
jl
sbb
cli
scas
cli
pushl
insb
inc
arpl
sbb
dec
cmp
daa
mov
xchg
inc
lcall
mov
push
sub
pop
push
and
fwait
repz
inc
jns
add
and
cmpsb
dec
fnstcw
imul
xchg
pop
push
test
sbb
push
std
filds
or
push
mov
je
cmpsb
imul
hlt
jno
mov
lcall
ret
inc
jl
orl
xor
push
jg
mov
adc
dec
lods
pop
mov
loopne
cmc
ljmp
sahf
daa
in
inc
sbb
call
dec
push
add
xchg
sub
arpl
filds
cwtl
sbb
xchg
fwait
pop
ja
fs
imul
decl
call
rolb
imul
lods
cmp
inc
cld
jmp
xchg
cmp
fstpt
dec
test
add
addr16
gs
adc
dec
fldt
bound
stos
jnp
mov
cmp
and
xor
out
dec
push
add
mov
jl
sbb
mov
outsl
pop
adcb
sub
mov
test
out
mov
sahf
popa
insb
ljmp
dec
out
push
inc
fwait
jae
sub
xchg
sub
push
lods
inc
jbe
and
dec
xchg
out
js
sub
mov
xchg
mov
cmp
cld
sbb
stos
pop
data16
jecxz
sub
clc
call
cmp
ss
aas
in
mov
jb
jmp
in
lea
cs
decl
ss
das
mov
cmpl
bound
cmpsl
sub
push
mov
aad
pop
or
in
ds
aas
sar
mov
repz
subb
jo
jae
nop
addr16
sar
mov
outsb
pushf
pop
leave
pushf
fistps
jae
stos
or
scas
push
xor
cmp
xchg
imul
pop
subb
mov
lret
mov
popf
and
pop
cmp
test
out
and
cld
daa
addr16
mov
or
ljmp
andl
push
xor
and
adc
call
out
pop
and
adc
aas
je
jge
xchg
add
cmp
out
push
jbe
test
mov
jnp
gs
testl
cmp
outsb
movsb
fisubrl
ljmp
frstor
mov
sbb
sbb
mov
mov
push
inc
cltd
pop
test
cs
xor
pop
or
adc
xor
jne,pn
jecxz
adc
es
aas
xchg
dec
push
cld
aas
xchg
xchg
xchg
mov
jl
xchg
jl
pop
adc
and
filds
decl
sbb
cmp
sti
js
push
cld
mov
sub
adc
shrb
sub
js
notl
dec
out
pop
cmp
dec
test
jecxz
sbb
dec
out
push
jo
add
in
cmp
scas
inc
cmp
mov
mull
repnz
cwtl
xchg
outsb
cli
out
xchg
clc
ljmp
pushf
inc
push
loopne
popw
fs
shlb
roll
call
xchg
out
mov
lods
lahf
cwtl
xor
cltd
popa
stos
loopne
jo
scas
xchg
or
lds
test
sbb
js
mov
gs
lahf
cmp
adcl
xchg
daa
das
lods
decl
mov
das
test
std
jg
xor
push
mov
jne
into
jnp
mov
mov
pop
out
cmp
sbb
mov
decl
add
je
scas
jno
pushf
cmpsb
sub
lcall
stos
outsl
dec
out
add
mov
es
mov
imul
xor
jg
fwait
mov
pop
scas
adc
data16
inc
dec
fldcw
or
jmp
mov
call
jae
and
sbb
cmpsb
pop
jae
enter
ja
clc
mov
and
aaa
sbb
les
xchg
ljmp
shrb
test
mov
mov
loopne
repnz
mov
jnp
daa
outsb
outsb
cmc
ljmp
pop
daa
dec
cwtl
mov
dec
leave
nop
sar
filds
repz
jbe
jb
ret
inc
jnp
sub
in
shll
jnp
or
sub
pushf
add
lock
mov
jno
xor
call
lcall
nop
nop
cmp
mov
adcb
movsb
clc
mov
in
mov
ljmp
or
test
or
out
jl
xchg
in
sahf
rcll
or
aas
lcall
stc
mov
xchg
jb
and
loopne
stc
out
xchg
lea
scas
out
je
loop
mov
mov
in
out
mov
jno
pop
cmp
mov
pop
sahf
into
decl
push
scas
es
cld
mov
xchg
lcall
cli
lcall
movsl
mov
xchg
loopne
mov
out
call
adc
xlat
lcall
xchg
sarl
jecxz
shlb
dec
out
jmp
pushf
mov
dec
cmc
cmp
ljmp
mov
jno
fucomip
adcb
xchg
lea
xchg
cld
cmp
int
mov
xor
pushf
lods
inc
out
xchg
add
mov
push
cs
pushl
je
stos
mov
jnp
bound
jecxz
mov
js
hlt
jbe
les
pop
aaa
cld
lcall
pop
jns
or
ja
scas
nop
inc
push
lds
xchg
popa
scas
cli
call
jne
xchg
xchg
inc
sbbl
xchg
mov
adcl
fimull
arpl
mov
jnp
xchg
lods
add
pop
jns
pop
sub
mov
push
test
and
and
mov
repnz
pusha
mov
mov
clc
movsl
stc
sbb
sub
bound
aaa
jne
dec
popl
push
outsb
push
lcall
xor
push
cltd
and
aaa
adc
cmp
out
pop
loopne
lock
cli
adc
cmp
flds
inc
insb
pop
mov
cmpsb
nop
fildll
gs
mov
out
dec
mov
add
out
inc
inc
and
bound
cmp
movsl
repz
data16
sbb
decl
icebp
mov
insl
imul
xchg
jl
mov
dec
fwait
xchg
jmp
dec
jno
movsl
mov
stos
jg
mov
addr16
sbb
outsb
int3
decl
inc
lcall
repz
popa
xchg
loope
inc
loope
pop
outsb
test
ja
outsb
pop
jne
push
imul
adc
sar
xchg
push
jmp
insl
jg
lret
gs
sti
dec
mov
mov
jb
fcomip
lcall
std
gs
dec
hlt
imul
data16
inc
mov
insl
es
inc
fidivrl
adc
pop
insb
incl
mov
push
dec
aas
sub
jmp
add
push
ss
lcall
dec
hlt
inc
stos
nop
pushf
sbb
jle
inc
add
fwait
add
popf
decl
cmpsb
mov
ds
sbb
fcomip
pushf
jle
ret
adc
or
xchg
jge
test
mov
call
out
xchg
ja
dec
add
jo
adc
cmp
decl
decl
dec
add
mov
jl
mov
inc
dec
mov
mov
sub
icebp
mov
jmp
cmpsl
inc
in
pop
mov
dec
lcall
repnz
ds
fsubrl
outsb
cld
lcall
adc
repz
pop
cmp
and
dec
mov
movb
cld
mov
ss
lcall
movsl
enter
popf
imul
mov
ss
cmp
in
pop
loope
mov
aad
call
sub
cmpsb
out
jg
incl
outsl
sbb
sbb
ret
xchg
adc
setl
adc
addb
dec
hlt
xchg
sbb
sub
xchg
test
sub
jecxz
in
test
call
jae
xor
push
or
xchg
jp
mov
mov
dec
int3
mov
ljmp
insb
andl
mov
cli
es
call
pushf
mov
insb
fisttpl
dec
je
insb
into
int3
inc
dec
inc
call
ljmp
pop
lret
bound
std
fs
fs
jl
pop
les
push
inc
inc
add
lcallw
pushl
in
mov
dec
jp
cld
insb
idivb
out
insl
or
std
jmp
push
in
insb
dec
popa
or
pusha
in
dec
inc
arpl
sti
pop
cmpsl
jge
jb
pop
gs
jb
decl
out
mov
jl
sub
scas
pop
cmpsb
clc
lret
xchg
ljmp
inc
je
imul
xchg
jo
push
rcl
call
jae
popa
jge
nop
stos
push
aas
inc
pop
fidivs
xlat
sbb
jne
ret
xlat
mov
addb
inc
cs
mov
push
jl
dec
jg
je
insl
scas
and
jae
adc
pop
push
shlb
daa
jp
jno
test
pop
lock
pushl
inc
je
jo
dec
push
jl
dec
cltd
cmp
das
jp
cltd
nop
outsl
pop
ret
clc
decl
xor
jno
cmpsb
mov
call
ss
stos
popa
jo
or
sbb
lahf
dec
xor
pushf
inc
add
mov
rclb
xor
scas
mov
popa
imul
mov
pop
xchg
mov
addr16
adcl
fldl
loopne
lods
orl
xchg
movsb
sbb
mov
pusha
arpl
loop
push
xor
push
cmp
xchg
mul
adc
loope
jmp
das
rcrb
mov
sbb
mov
cmpsb
cmp
mov
push
test
jnp
imul
jg
xchg
pop
and
call
and
mov
xchg
add
push
cmpsl
add
mov
xchg
ljmp
hlt
addr16
inc
imul
mov
addr16
cmp
dec
imul
cld
push
clc
jmp
std
pop
rcll
pop
shll
push
lcall
mov
pop
push
dec
mov
cmpsl
bound
in
or
aam
call
adc
jle
imul
lea
lods
clc
add
js
fs
sbb
idivl
cmpsb
dec
cmp
add
inc
xchg
mov
dec
pop
rorl
mov
inc
bound
push
ja
mov
js
sar
fcomip
dec
push
dec
enter
mov
arpl
cmp
stos
cs
and
xchg
dec
add
mov
lods
adc
lods
in
jbe
xchg
xchg
insl
inc
test
jecxz
adc
cmpsb
pop
loopne
jg
fstpl
int3
push
ljmp
gs
lcall
iret
dec
jo
lret
mov
mov
outsl
jp
cmpsb
fcompl
rorb
inc
xor
push
adc
or
negl
mov
sbb
push
cli
out
sbb
mov
pop
addb
adc
inc
imul
xchg
mov
aam
bound
mov
das
mov
push
js
jge
fwait
adc
add
adc
xchg
je
scas
push
out
sub
xchg
push
lahf
test
sbb
push
sbb
aaa
jmp
cmp
clc
mov
lea
mov
mov
pop
jl
pop
stos
xchg
xor
jb
aaa
ds
sar
sub
ss
jo
popa
adc
dec
jae
and
mov
daa
push
daa
cwtl
lock
pushf
mov
mov
outsl
call
cs
adc
lcall
mov
mov
gs
movsb
mov
inc
enter
jb,pn
push
scas
cmp
inc
mov
call
std
xchg
cmp
test
pop
mov
mov
out
inc
cmpsl
outsb
mov
adc
push
std
jg
jnp
js
test
popa
sub
leave
jno
push
adc
ret
jmp
retw
push
pop
sbb
gs
sub
cmc
mov
jg
bound
dec
out
inc
jns
add
fisttpl
lcall
push
adc
pop
lock
call
push
es
cltd
push
xchg
movsb
mov
mov
iret
arpl
cli
jns
sbb
out
scas
xchg
movsb
jbe
jmp
in
jp
jecxz
lds
xchg
fnstenv
lahf
jecxz
or
gs
push
add
dec
adc
and
add
sbb
outsb
ljmp
inc
sbb
movsb
mov
mov
mov
push
push
sar
call
pop
jno
push
iret
das
addl
xchg
lahf
cmp
test
filds
mov
jb
ds
pushw
jge
add
in
xor
out
xor
and
push
cmp
ss
inc
jmp
insl
fldenv
lods
clc
xchg
xor
cli
ljmp
out
dec
sbb
jp
fnstcw
enter
push
xchg
pop
loopne
scas
imul
mov
mov
adc
pusha
or
dec
repz
add
outsb
adc
cmp
ljmp
clc
stos
push
mov
scas
sbb
pop
jg
sbb
pop
jl
inc
testb
mov
pop
sbb
mov
mov
lcall
dec
enter
push
mov
ret
xchg
test
fisubs
scas
xchg
add
and
or
dec
adc
daa
push
mov
idiv
jge
push
push
push
push
call
pushl
inc
mov
lock
mov
jnp
ret
and
ret
inc
test
or
aas
jg
lock
or
stc
add
dec
aas
pop
sbb
loope
pusha
insb
fcomip
aas
cld
lock
mov
outsb
leave
mov
push
jp
movsl
shll
push
push
ret
js
dec
aam
sar
lcall
outsb
nop
push
lret
bound
data16
cmp
sub
jmp
incl
sub
mov
cld
pop
dec
push
data16
and
ljmp
call
aam
inc
call
in
jne
fldenv
mov
jl
mov
cld
das
adc
inc
jg
push
out
arpl
mov
jle
dec
outsb
test
outsl
cli
push
fstl
rcll
or
jo
test
lret
jmp
xor
outsl
dec
arpl
inc
inc
js
push
push
dec
ds
inc
dec
push
out
and
jge
test
jo
jae
call
dec
in
lcall
clc
xorps
insl
gs
out
and
adc
push
add
add
call
lcall
loope
pusha
xchg
or
add
push
mov
dec
jl
add
and
sahf
push
lahf
popa
jno
mov
cli
inc
inc
jl
mov
addr16
pop
adc
pop
pop
xor
jge
dec
outsb
std
mov
sbbb
xlat
jle
movsb
loope
cmpb
lret
outsb
push
sub
fisttps
in
js
rorl
jl
popa
pop
lds
dec
inc
incl
sub
imul
call
xor
jne
adc
lcall
stos
jbe
xchg
pop
out
pusha
popa
aas
xchg
dec
mov
outsb
inc
mov
iret
push
jae
mov
push
lcall
scas
outsl
push
pop
enter
popa
jp
lds
pop
cltd
jge
jnp
pop
jno
mov
xchg
jnp
dec
mov
popa
sub
imul
inc
push
lods
pop
mov
rep
adc
jae
jnp
popa
and
call
jp
cmp
pushf
addr16
jns
inc
nop
jbe
in
push
bound
movsl
lcall
mov
popa
in
and
popa
xchg
lds
mov
sahf
xor
loope
dec
jmp
out
and
sahf
test
es
xchg
incl
mov
xchg
gs
enter
jmp
pop
xchg
add
pop
fwait
sbb
push
dec
sti
mov
sbb
mov
js
insb
dec
test
jnp
movsb
xor
outsb
cmp
jns
mov
mov
lock
cmc
fistpll
add
sarb
xchg
cmp
out
test
pop
loop
or
in
out
clc
pop
loopne
lcall
dec
jns
rcr
idivl
call
pop
inc
ljmp
andl
add
jae
sbb
jg
orb
dec
lret
call
dec
jg
ljmp
dec
dec
mov
loopne
fcoms
out
xchg
mov
inc
cld
push
mov
das
push
clc
aas
adc
data16
repnz
lcall
mov
mov
nop
das
jecxz
iret
scas
imul
inc
cmp
cmp
pop
cmc
jmp
ds
int3
mov
mov
xchg
scas
arpl
out
insb
and
jg
push
enter
sub
jmp
cltd
in
pop
lods
out
cli
or
seto
hlt
lahf
push
and
jecxz
ljmp
xchg
insb
in
js
arpl
and
icebp
ds
ljmp
adc
xchg
ss
fbld
test
push
mov
cmp
xchg
mov
ljmp
out
jnp
pop
out
mov
fwait
sti
sbb
test
call
inc
int3
xor
js
in
or
loop
dec
in
push
cld
adc
adc
adc
push
jb
cmpsb
imul
dec
loope
push
cld
icebp
call
mov
inc
mov
cltd
insl
adc
lcall
es
ds
jae
in
pop
repz
xor
cli
adc
daa
dec
loop
jo
std
incl
shrl
jne
aaa
bound
sub
out
pop
mov
cld
daa
dec
jne
mov
push
push
jg
jo
incb
cmpsl
fsts
jecxz
test
push
mov
or
ss
test
push
fidivrs
arpl
or
push
push
out
test
and
xor
fpatan
lret
pop
scas
dec
dec
out
and
add
fbld
push
jg
outsl
fs
inc
mov
push
decb
inc
out
adc
stos
int
mov
jno
add
loope
imul
pop
in
jne
xchg
call
sub
stos
in
jnp
pushf
insb
ss
xor
add
insl
push
jb
mov
fsubr
lcall
cltd
mov
stos
push
adc
out
push
push
cmp
ss
cli
popf
jns
jg
lea
popa
mov
das
pushf
insl
pop
sub
loopne
dec
outsb
push
jno
push
mov
jl
cmc
sbbl
ljmp
ljmp
inc
bound
jo
pushw
dec
incl
data16
push
sub
aaa
pop
in
adc
dec
or
mov
dec
fbstp
add
cmpsb
dec
pop
push
out
xor
lahf
stc
xor
aas
arpl
or
call
ret
or
shrb
pop
dec
adc
push
jbe
fsubl
insb
mov
fdivrs
push
in
mov
call
inc
hlt
xor
dec
repnz
out
ret
mov
loopne
gs
insl
mov
mov
cli
push
shll
loopne
mov
daa
dec
bound
test
and
decl
fldcw
insl
jle
push
push
cmpb
es
mulb
in
cmpb
es
mov
sub
dec
mov
xor
repz
jge
int3
insb
dec
mov
push
fs
mov
leave
clc
call
scas
lea
add
mov
push
adc
lods
mov
mov
pop
mov
loopne
pop
gs
lea
mov
inc
mov
std
lcall
mov
in
xor
out
push
dec
sbb
xor
mov
pushl
push
js
add
out
iret
popa
insl
jg
jb
and
out
push
adc
sbb
dec
xorb
imul
stos
pop
sahf
sbb
pusha
int
jo
adc
test
cmp
jno
add
lock
pushl
add
jl
popa
mov
bound
ret
dec
mov
cmp
cmp
out
mov
shlb
cltd
adc
cltd
jns
outsl
arpl
movsb
push
decl
cmp
xor
jg
pop
mov
data16
or
fisttps
fdivrl
jle
shll
push
sbb
sub
mov
adc
or
mov
cmp
enter
fwait
dec
mov
push
dec
xchg
sub
mov
mov
repz
je
ret
xor
dec
jecxz
lock
or
mov
and
lea
push
data16
loope
jg
mov
or
jns
stos
or
lods
push
stos
leave
cmp
dec
lcall
and
pop
cmp
lea
or
cmp
out
dec
insb
gs
cld
adc
incl
push
ss
stc
sbb
lahf
mov
out
sbb
fwait
mov
std
sbb
out
psraw
les
cwtl
pop
adc
cmp
mov
inc
ret
push
cwtl
mov
fucomi
jmp
push
je
incl
jg
or
pusha
repz
ja
pop
jns
or
mov
jp
insb
jmp
lret
or
jmp
push
std
ljmp
dec
xchg
and
cmp
cmp
sub
add
arpl
daa
popa
outsl
cmp
cs
loop
dec
pushf
mov
xchg
pop
in
sbb
push
push
mov
adc
adc
mov
inc
das
shrb
jecxz
fwait
repnz
adc
sub
xchg
cwtl
sbb
lret
sbb
xor
or
add
stc
xchg
jg
icebp
cs
imull
lretw
cltd
popf
jge
sarl
call
into
jns
cmp
xchg
imul
mov
mov
inc
lds
nop
enter
outsl
cli
mov
insl
xlat
or
or
bound
inc
je
jns
fcomip
pop
jle
jp
gs
jnp
fs
push
mov
xor
xor
stos
cmpsb
pop
imul
insl
and
jg
clc
or
fisttpl
inc
jp
adc
cmp
cmp
cmp
ljmp
mov
das
nop
mov
mov
xor
cmpsb
outsb
out
mov
mull
cwtl
sbb
into
mov
es
movntps
xor
sbb
or
mov
sbb
xor
push
insb
scas
xor
insl
mov
lcall
mov
adc
lcall
outsl
lahf
inc
dec
push
xchg
test
mov
push
inc
push
fwait
sti
fisttps
movsb
cltd
lods
out
bound
jmp
arpl
cmp
dec
add
icebp
xor
mov
pop
std
cmp
outsb
xor
cs
insb
stc
sub
pop
ret
rcrb
cmc
ss
dec
mov
mov
hlt
sahf
pushf
rcrl
ljmp
mov
out
xor
adc
es
mov
xchg
mov
movsl
je
push
les
adc
inc
sbbl
inc
push
lea
nop
push
and
cmp
pop
mov
push
orb
xchg
mov
call
sub
scas
lea
push
push
mov
push
rcrl
cmp
insb
cmp
pop
scas
jne
popa
jae
mov
jb
mov
add
mov
scas
push
loope
jo
and
jno
jg
aad
xor
dec
adc
ss
sub
gs
mov
cmp
push
les
cmp
popa
cltd
xlat
cmpl
add
je
jb
push
mov
mov
and
test
sub
outsl
aad
dec
aas
fadd
sbb
fisttps
and
orl
fldcw
inc
mov
jg
and
and
adc
mov
pushl
add
adc
dec
mov
jno
sbb
add
jmp
sub
cmp
cmc
sbb
mov
bound
mov
outsb
dec
jbe
push
sub
and
popf
mov
dec
cld
push
fwait
pop
mov
mov
out
outsl
enter
jge
cmp
sub
orb
or
decb
decb
push
dec
push
pop
xchg
mov
add
jo
lds
je
call
mov
xor
and
mov
ds
mov
test
test
jg
dec
popl
je
ret
cmpsl
sub
xchg
xor
or
cmp
shlb
movb
add
call
fnsave
jo
jno
xchg
jle
jb
mov
dec
mov
dec
jae
push
out
jle
incl
adc
mov
mov
push
stos
and
xorl
ds
ss
ljmp
cmpsb
scas
sub
scas
sbb
add
out
mov
leave
mov
xor
push
push
jne
lcall
xor
xor
mov
data16
push
test
pop
jbe
adc
cs
les
push
cltd
or
subl
xchg
aam
incl
movsl
mov
mov
xchg
pop
adc
and
fwait
push
into
push
dec
pop
mov
filds
mov
sahf
xor
pop
bnd
cmp
data16
movsb
sbb
ss
outsb
stc
add
xchg
not
out
out
call
mov
mov
mov
test
push
in
cmp
mov
incb
shll
xchg
insb
xor
and
ljmp
cmpsl
movsb
std
xor
je
xchg
lods
out
test
lock
fistpll
xor
pop
mov
pop
add
inc
imul
lahf
and
pop
in
push
call
mov
cld
daa
jle
lret
mov
push
movb
dec
out
out
insl
outsl
jne
add
stos
pop
add
or
mov
pop
mov
decl
rorl
mov
out
test
mov
pusha
jo
enter
mov
js
loopne
outsl
scas
subb
mov
loope
sbb
loop
dec
sti
pushf
cs
lahf
sti
xor
sahf
xor
lcall
lcall
inc
cli
and
inc
int3
mov
movsl
pop
test
jns
sub
inc
loopne
shl
mov
cmpsb
push
pop
fildll
jp
inc
pop
notb
adc
test
subb
aaa
xor
mov
cmp
sub
lods
imul
ljmp
push
lock
rorb
pop
ret
icebp
imul
sub
push
in
adc
cltd
inc
pusha
xchg
dec
in
inc
lret
dec
incl
dec
rclb
out
cmc
fsubrp
dec
jns
dec
int
jp
cmc
jno
out
std
das
clc
ljmp
inc
mov
rorl
sub
sub
xchg
dec
iret
xor
negl
mov
popa
iret
mov
aad
jo
ja
dec
inc
mov
shlb
xor
jmp
jo
mov
int
insl
shrl
push
ja
push
roll
loop
icebp
stos
push
mov
insl
in
xchg
out
jle
in
loopne
jbe
jb
loopne
dec
push
pop
jecxz
jp
cld
inc
jae
jmp
xchg
loope
jl
sarl
jno
iret
js
movsb
leave
imul
xor
mov
rclb
mov
cli
xor
push
sub
mov
ret
fwait
repz
mov
lret
xor
pushl
icebp
ljmp
ss
jecxz
sti
divb
inc
mov
jg
gs
out
xchg
dec
enter
icebp
pop
push
pop
in
bound
in
pop
push
jmp
fbld
clc
lods
xchg
cld
fidivl
mov
cmp
mov
ret
and
subb
xor
pop
cmp
mov
ljmp
outsb
out
dec
lock
jecxz
inc
fisubs
arpl
pshufw
test
xchg
aad
dec
stos
ljmp
loope
lods
push
fwait
dec
leave
xchg
ja
mov
sbb
mov
in
or
mov
call
mov
pushf
jbe
adc
push
jg
add
mov
sahf
loopne
jo
jg
cmpsl
inc
push
stos
cmpsb
push
jecxz
cmp
call
lds
push
aad
ja
shll
push
call
cmp
bound
mov
adc
mov
mov
inc
aad
push
mulb
dec
mov
and
scas
push
jno
xchg
push
clc
dec
jmp
cmp
stos
xchg
dec
dec
in
in
xor
imul
dec
int
dec
mov
insl
repnz
arpl
add
mov
inc
xrelease
sbb
xchg
mov
mov
enter
pushl
lret
pop
fidivs
or
ss
leave
outsb
sub
cmpsl
pop
mov
in
ss
neg
loop
jl
aaa
lret
sub
fistps
push
in
jns
xor
jne
add
dec
ljmp
jb
push
jp
std
cmp
loope
in
je
and
fs
adc
imul
or
je
dec
ret
std
dec
push
push
sahf
imul
inc
mov
repz
je
mov
repz
jg
sub
mov
fsubrl
pusha
cmpsb
inc
or
xor
shlb
dec
sti
or
popa
shll
fs
push
insb
push
mov
mov
pop
pushf
push
sbb
loopne
fs
dec
scas
mov
sub
ljmp
jg
and
sub
or
int3
mov
aas
jo
pushf
scas
xchg
out
out
loop
repnz
inc
sbb
jne
incl
pop
pusha
jno
js
cmp
xchg
popa
dec
mov
sub
arpl
xor
xor
inc
sbb
loopne
outsl
lcall
push
stc
out
repz
inc
cli
mov
push
mov
dec
loopne
lahf
fwait
int3
int3
call
out
mul
popf
push
in
lock
cld
clc
sti
incl
mov
insb
jge
xchg
rclb
jb,pn
add
fsubs
popa
stos
popf
jnp
and
out
scas
ljmp
sti
mov
mov
cwtl
inc
out
icebp
jbe
shll
push
cltd
lds
pushl
adc
cmpb
jns
test
enter
xchg
inc
add
xchg
xchg
shlb
mov
call
xchg
inc
mov
push
in
movsb
dec
iret
test
loop
lock
data16
mov
or
or
pop
ss
int
loop
jecxz
clc
inc
in
mov
cmp
repz
xchg
popf
mov
mov
ss
std
in
out
shl
jbe
sar
clc
push
in
inc
adc
mov
fs
inc
int3
cmp
pop
cs
sub
xor
movsb
into
sub
bound
stos
test
pop
je
loop
pop
cltd
xorb
jmp
dec
rcrb
fdivrl
loop
pop
ret
mov
in
popa
xorb
jmp
xor
mov
jae
jmp
and
push
stos
xchg
pop
icebp
dec
clc
dec
pop
mov
push
outsb
sub
js
ljmp
push
in
lea
mov
les
sub
mov
in
jg
ja
or
test
sbb
mov
pusha
xacquire
mov
jnp
out
mov
decl
pop
xchg
mov
jnp
and
es
jmp
or
popf
addr16
cs
das
inc
xchg
adc
mov
int
cli
push
jle
and
loop
fs
xchg
jl
lcall
mov
jecxz
fists
arpl
xor
dec
out
ret
push
loop
out
stc
jnp
xor
addr16
decl
pop
clc
insl
call
jns
or
imul
decl
das
in
imul
aad
jmp
and
push
mov
xchg
xchg
push
rolb
jbe
xchg
inc
movl
push
or
cmp
inc
jae
out
jns
es
stos
cld
int3
adc
ljmp
dec
repz
mov
shlb
jb
sub
cmp
loopne
xlat
dec
aaa
fsubp
aaa
inc
push
mov
dec
das
xchg
aaa
dec
cld
push
insl
lock
add
popf
lods
call
add
or
inc
mov
movsl
push
inc
fwait
shrb
add
cmp
adc
mov
add
popf
add
push
pusha
jmp
rolb
inc
jb
sub
jge
jnp
inc
in
addr16
cmp
cltd
mov
cmp
cmp
cltd
lods
cmp
or
jns
es
cmpsb
inc
into
addl
test
push
inc
sbbl
repz
xlat
in
outsl
dec
ss
xchg
xor
jbe
outsb
cmovbe
ss
pop
xor
push
pop
mov
push
lea
xor
lcall
dec
cs
xor
cwtl
jne
movsl
inc
outsb
lea
pushf
out
mov
jmp
loopne
sarl
mov
jmp
mov
gs
fidivl
lods
outsb
pop
push
adc
test
mov
ret
popa
jmp
xor
jae
jb
lods
data16
dec
xchg
out
cmp
cwtl
sbb
fildll
sub
pop
push
mov
dec
lods
push
and
inc
test
add
push
dec
enter
sub
push
leave
jecxz
ss
jg
xchg
dec
xchg
sbb
and
pushf
mov
repz
inc
scas
jae
pop
jno
ds
inc
cld
mov
movsb
jnp
jno
sbb
mov
psrad
pop
mov
rol
mov
fistl
sar
les
xchg
sub
ss
lea
sub
or
mov
and
inc
negl
jg
mov
mov
cli
call
sbb
cli
subb
test
ss
xchg
mov
sar
sbb
addr16
jb
xor
sti
in
ffree
out
out
imul
or
insl
test
xor
xlat
decl
mov
sub
rorl
adc
ljmp
xor
jns
dec
cmp
xor
pusha
and
sbb
pusha
push
arpl
test
leave
mov
add
orb
mov
pushl
daa
mov
sahf
sbb
inc
sbb
jo
and
mov
pop
test
adc
mov
add
icebp
mov
inc
ds
outsb
pop
add
cmpsb
pusha
or
push
call
loop
je
mov
lods
das
push
inc
outsb
jmp
push
arpl
pop
ljmp
cli
data16
out
adc
xchg
mov
adc
xor
icebp
call
mov
xchg
mov
and
mov
std
lcall
addr16
and
mov
loope
daa
cli
sub
xchg
jne
jmp
std
ljmp
and
dec
popa
cmp
jo
or
dec
mov
xor
subb
shrl
out
push
dec
or
jo
mov
mov
lcall
outsb
movsb
sbb
fldcw
or
fstpt
loope
in
lcall
push
testb
hlt
or
rcll
test
decl
mov
sbb
mov
cmpsb
jae
cmp
mov
jmp
pop
clc
pop
insb
mov
cmp
cmpb
clc
lea
ljmp
test
scas
es
mov
mov
push
mov
pop
sub
movsl
cmc
mov
push
ds
sti
xchg
aas
jl
ljmp
leave
inc
dec
mov
push
mov
jl
mov
hlt
cmpsl
pop
dec
pushf
fimull
cmpsb
call
mov
sahf
fs
add
mov
nop
xor
test
pop
test
subps
mov
xchg
lcall
rolb
or
ljmp
leave
add
adc
jns
jg
push
jg
cmp
lock
call
js
out
andl
decl
or
daa
rorl
add
mov
xchg
sbb
test
mov
xlat
ljmp
push
fwait
mov
arpl
xor
ret
dec
mov
cmovae
outsb
or
test
loop
cmp
sarl
lret
jbe
xor
popa
jecxz
lods
sub
and
jle
outsb
inc
call
clc
add
mov
std
pop
mov
pop
lahf
jne
lret
pop
mov
arpl
mov
cltd
mov
add
add
mov
add
xchg
mov
filds
sahf
sub
push
sub
dec
ljmp
pop
or
lcall
jno
and
movsb
js
lea
popf
movsl
mov
fisttps
pop
sub
fisubrl
pop
mov
add
dec
ret
es
lods
and
push
outsl
sbb
call
inc
test
add
mov
sub
mov
pop
sbb
bound
insl
fcomip
cmp
adc
fidivrs
lock
xchg
xor
pushl
bound
xor
xchg
rclb
push
mov
add
add
pusha
xlat
test
pop
pusha
mov
je
decl
pop
ss
push
and
and
dec
push
push
mov
cmp
aaa
popf
add
cltd
ss
cmp
sub
push
lods
and
mov
ljmp
push
lcall
movsl
push
insl
inc
mov
push
inc
cmp
xor
jnp
outsb
and
push
jg
loopne
sbb
dec
sbb
gs
stc
dec
ja
scas
lock
lcall
lahf
cwtl
pop
pop
lret
arpl
ds
stos
and
lock
mov
arpl
dec
jg
push
xor
sbb
repz
clc
lds
sar
out
or
jmp
call
jmp
jne
and
sbb
rcrb
out
dec
sbb
mov
push
rcrb
addr16
or
adcl
imul
cmp
add
or
sbb
inc
push
nop
idivb
in
outsb
dec
cmc
mov
popa
pop
icebp
ljmp
and
and
pop
icebp
xchg
pop
inc
cld
outsl
mov
pusha
ja
icebp
mov
pop
iret
pop
jno
dec
rorb
ret
jg
outsl
push
repz
pop
mov
cmp
cmp
mov
jmp
pop
movsw
ss
fiaddl
pop
inc
sahf
ljmp
incl
mov
lods
sahf
in
jl
or
dec
adc
sbb
loope
call
insl
xchg
sbb
or
mov
outsl
dec
insb
push
adc
mov
decl
sbb
imul
xchg
or
mov
sar
es
subl
xchg
add
mov
mov
push
lret
mov
jb
inc
adc
sbb
popa
addr16
ss
cmp
or
pop
icebp
jg
push
push
xchg
pop
sbb
jo
ds
cmpsb
xor
decl
mov
test
scas
add
imul
inc
jl
cmp
dec
das
fwait
mov
aas
xor
insl
testb
and
pop
cmpb
test
mov
xor
xor
mov
sub
icebp
lea
les
mov
jecxz
fwait
jmp
mov
and
fnstenv
rorl
lea
cmpsb
sbb
rorb
mov
dec
or
aaa
fs
adc
lcall
sahf
test
imul
repnz
out
and
jb
repnz
mov
jge
mov
inc
xchg
clc
decl
cmpsb
pushf
xor
aas
push
out
sbb
xchg
popf
int3
mov
jl
adc
std
sub
or
and
jecxz,pt
xor
scas
xchg
cmp
mov
outsl
aam
mov
inc
xorb
stos
push
pop
adc
lcall
add
rolb
pop
and
fists
push
push
mov
xor
adc
rcrl
aaa
loop
loope
pop
subb
or
cmp
aaa
xor
clc
test
decl
jns
call
inc
adc
fsts
imul
or
incl
lds
cli
fnstenv
adc
das
ffreep
test
bound
dec
shr
cld
push
inc
jecxz
cs
xchg
xchg
ret
ja
adc
les
std
shlb
add
xor
mov
shl
push
repz
mov
call
dec
jl
out
pop
dec
std
mov
adc
pop
push
sbb
mov
pop
jae
mov
scas
ret
subb
lcall
jbe
ljmp
lods
lret
mov
lods
addr16
adc
std
jle
ljmp
or
sub
std
adc
arpl
jp
repz
ret
ss
adcb
js
aaa
sti
into
sbb
jno
sbb
pop
sbb
mov
mov
loopne
mov
xor
or
jmp
sub
ret
jecxz
in
pxor
loopne
cmp
cmp
add
movsl
sbb
hlt
test
cld
adcb
push
cli
pop
ret
xchg
xor
xor
push
add
cs
test
enter
fnsave
jge
out
adc
in
std
pop
ss
add
cld
call
data16
and
sub
add
idivb
jle
incl
jns
pop
and
and
pop
lcall
push
inc
ljmp
adc
and
mov
out
inc
jecxz
adcl
pop
shlb
push
and
hlt
aas
data16
cld
xchg
popf
pushf
or
outsb
repnz
fs
shlb
scas
inc
shlb
pushf
shlb
mov
sub
mov
pushf
fistps
mov
cld
ljmp
mov
mov
and
cmpsl
jno
mov
hlt
add
push
test
mov
cmp
adc
imul
jmp
loop
mov
bound
sti
sub
mov
inc
mov
xor
mov
outsb
cmp
call
xchg
outsb
adc
call
xchg
cmp
clc
mov
mov
lcall
add
mov
dec
out
insl
pop
lock
pushf
xor
loop
adc
and
add
push
dec
ja
adc
stc
int
xchg
cmpsl
and
ret
test
test
out
aas
mov
addl
je
and
js
lock
add
sbb
movl
or
faddp
adc
pusha
shrb
lret
mov
mov
cld
ds
mov
pop
arpl
fbld
push
movsb
fidivrs
orb
cmpsb
lcall
pop
loope
mov
mov
mov
push
jmpw
shll
movsb
incl
jmp
mov
sub
cmp
adcl
push
pop
lock
adc
xchg
enter
add
mov
sbb
pop
loop
cmp
mov
mov
fists
xchg
mov
popa
push
icebp
mov
cld
or
adc
jae
push
inc
loopne
mov
out
ds
push
push
inc
pop
jae
jg
out
add
scas
xor
jl
ss
cltd
mov
out
mov
dec
xor
xor
lret
ror
mov
fstps
testb
push
ljmp
fwait
push
ret
lret
shrl
scas
repz
shl
incl
clc
inc
sbb
dec
cmp
in
sbb
hlt
sub
pusha
push
cmp
cli
and
leave
xor
push
sbb
or
sbb
sarl
cltd
mov
loope
outsb
mov
sbb
fwait
orb
daa
or
xchg
das
or
jmp
xchg
xlat
sbb
sbb
call
cld
dec
js
lcall
dec
sti
adc
imul
scas
xchg
data16
or
sahf
lret
xor
add
xchg
decl
jl
and
push
dec
das
ret
adc
mov
inc
shr
es
data16
lods
mov
mov
subl
ss
ret
fdiv
xchg
dec
test
test
and
test
outsl
sar
shrl
outsb
push
lcall
pop
negb
inc
movsb
loopne
dec
shlb
mov
and
in
or
ljmp
clc
sub
ret
data16
mov
mov
mov
dec
mov
jne
in
and
das
xchg
daa
inc
mov
xchg
clc
in
sbb
movsb
scas
fistpl
xchg
dec
push
push
cmpsb
fildl
mov
out
cli
sti
adc
sbb
stc
sahf
adc
repnz
xchg
jl
pop
push
and
cmpsb
mov
fs
ja
mov
and
scas
in
or
mov
pop
push
push
cmpsb
jnp
loopne
fbld
aas
inc
push
xchg
ljmp
inc
rol
fmul
xor
imul
inc
hlt
cmp
push
mov
inc
aad
pop
ds
cmp
shrl
push
xchg
ret
jecxz
test
ds
jb
fldl
pop
mov
or
sub
testb
into
inc
mov
mov
stc
aas
rolb
mov
pop
xchg
push
mov
xor
sbb
incl
mov
in
adc
out
xchg
mov
or
imul
adc
xor
stos
push
xchg
xor
ffreep
mov
enter
test
sub
inc
push
in
or
fistl
mov
bound
mov
jle
cmp
fdivl
lea
push
xchg
cmpsb
loope
mov
lods
std
fsts
cs
notb
and
arpl
jle
pop
pusha
push
pop
call
mov
pop
push
add
jecxz
bound
out
push
inc
test
cld
adc
xlat
add
ret
scas
aas
xchg
sub
pop
loopne
add
out
add
cld
not
dec
mov
push
test
in
or
in
fistps
inc
xchg
mov
imul
decb
mov
testb
mov
push
dec
lcall
popf
dec
mov
xchg
out
movl
icebp
xchg
inc
adc
icebp
aas
lcall
inc
ss
cwtl
mov
lcall
xor
stc
scas
xor
adc
adc
jb
xchg
mov
inc
lods
in
pushl
xchg
aaa
pop
adc
fwait
mov
push
jns
xor
cmp
mov
adc
xchg
sar
pushl
sti
test
cmp
xchg
jmp
and
xchg
inc
call
outsb
mov
and
int3
mov
or
mov
scas
cmp
dec
lea
mov
sub
ja
sbb
add
mov
mov
cmp
incl
rcll
push
orb
std
sarl
pop
dec
sbb
dec
or
ja
xchg
add
xchg
loop
xor
leave
adcl
push
mov
loop
pop
push
out
add
fwait
hlt
pop
cmp
mov
add
add
stos
cwtl
ret
mov
stos
icebp
sets
sbb
pop
test
xorb
add
pushl
sar
rolb
cs
popf
test
xchg
push
push
scas
mov
or
test
cmpsb
loopne
js
decl
jle
pop
mov
jno
jno
andb
mov
das
movsl
push
mov
jg
jecxz
outsl
sbbb
sub
pusha
mov
or
jns
test
test
mov
popf
xchg
mov
stos
outsl
xchg
sub
scas
int
mov
loop
cmp
pop
inc
test
in
pop
fcmovu
mov
jmp
aas
imul
into
in
mov
fbld
mov
outsb
push
mov
xchg
loopne
es
sti
lock
outsb
arpl
int3
and
outsl
push
and
or
jb
push
mov
sbb
dec
push
cmp
add
fwait
adcl
xchg
cmp
addr16
sub
push
aas
mov
mov
enter
decl
cmpb
jb
xchg
dec
int
incb
or
jnp
xchg
inc
push
adc
push
das
xchg
call
int
enter
jg
mov
call
sub
sub
dec
inc
push
xlat
addb
push
jecxz
cmp
add
data16
add
cmp
test
stos
mov
in
and
xor
mov
in
andl
pushf
cmp
outsl
pop
xchg
xchg
sar
pushl
xchg
insb
sbb
insl
inc
clc
mov
cltd
daa
js
inc
sub
das
es
mov
sbbl
push
dec
xchg
bound
insb
mov
in
xor
mov
xchg
rclb
dec
addr16
jns
dec
movb
pop
decl
lahf
jnp
xchg
fldcw
jae
leave
mov
inc
and
popa
add
inc
outsl
mov
xchg
lcall
inc
test
movsb
icebp
mov
xchg
std
and
ja
mov
cmp
push
cld
mov
sub
pop
in
jbe
dec
jmp
dec
jo
ss
insl
loopne
sbb
int3
outsb
inc
xor
push
int3
insb
fs
push
shl
sahf
inc
and
lds
pushf
pop
nop
xchg
nop
incb
mov
loop
push
and
cmc
add
pushl
pop
xsaveopt
sbb
mov
mov
mov
mov
and
or
xor
or
std
jmp
stos
push
mov
stc
sub
xor
scas
xor
inc
jge
jg
add
xchg
xchg
lods
or
pop
into
test
mov
ds
and
clc
cmp
jae
push
les
fwait
movsl
rclb
lds
pop
xchg
xchg
test
add
xchg
mov
adc
insb
je
dec
add
xchg
inc
cld
call
push
orl
pop
xchg
xchg
mov
aam
pop
inc
ss
movsl
test
mov
mov
ret
jo
dec
adc
cmpsb
sub
cmp
out
or
mov
sbb
xchg
cwtl
push
or
call
leave
push
xor
xchg
sub
sbb
mov
hlt
sahf
pop
jo
sbb
push
jp
fldenv
lods
xchg
dec
inc
cli
or
inc
mov
xlat
xchg
insb
out
mov
mov
in
lods
cmp
fwait
cli
mov
daa
pop
jo
mov
and
inc
add
sub
sub
or
scas
mov
ds
cmp
inc
gs
add
outsb
sti
adc
out
cmp
test
cmpsb
dec
cmp
xor
testb
lock
out
das
aaa
jae
rcll
inc
xor
ljmp
add
outsl
cltd
scas
mov
xor
cmp
insb
cmp
mov
mov
push
jae
dec
cmpsl
outsb
mov
js
mov
outsb
xchg
test
mov
cmpl
mov
sub
fucomp
adc
out
test
dec
das
pushf
lret
dec
push
inc
test
mov
mov
sbb
pop
dec
aaa
bound
repnz
stos
movsb
or
push
xchg
cmpsl
mov
and
pusha
imul
pop
xchg
pushf
mov
outsb
cltd
lock
mov
mov
pop
jge
add
add
leave
das
imul
cmpsb
ss
clc
pusha
clc
inc
add
outsb
pop
xchg
ljmp
dec
push
stc
xor
add
inc
dec
lcall
jbe
inc
shll
mov
mov
xchg
add
mov
jg
inc
fwait
jnp
loope
mov
and
or
adc
pushl
sbb
das
stc
jne
and
hlt
cmpsb
adc
xor
gs
cld
mov
cmp
enter
enter
adc
call
jbe
cmp
sub
dec
inc
sahf
mov
call
icebp
cmp
xchg
out
jns
in
sub
je
mov
jno
js
pop
enter
pop
pusha
add
call
jno
js
add
jbe
js
jnp
add
insb
out
push
fimuls
jg
arpl
jecxz
ret
push
push
mov
or
xchg
int
jl
jg
jp
jge
dec
xlat
sub
push
mov
jbe
pop
nop
push
dec
loop
call
popf
push
ss
xchg
pop
pushl
mov
xlat
push
or
xor
mov
push
mov
call
cmp
imul
cs
jp
xor
in
pop
decl
or
ss
cltd
and
fildl
gs
mov
mov
adc
mov
jb
lea
mov
rorl
xchg
aaa
es
bound
and
testb
cmp
xchg
sbb
dec
push
pushf
pop
add
jp
fistps
mov
cmp
xor
repnz
jbe
jmp
ja
lret
movsl
and
mov
adc
adcb
xor
mov
push
movb
push
outsb
pop
subl
loope
outsl
cmp
repz
xchg
nop
cmp
xchg
into
scas
jo
mov
clc
xchg
pop
xchg
lock
inc
pop
adc
ljmp
ljmp
jbe
js
xor
fistpl
dec
jae
adc
xor
call
sbb
sbb
ljmp
xor
out
pop
dec
into
and
and
lods
jb
push
arpl
rep
sbb
adc
push
xor
jg
fwait
sub
jnp
pushf
xor
push
cli
pushl
xchg
mov
icebp
jne
scas
push
scas
aad
push
add
mov
xor
mov
cmpsl
test
add
and
rep
into
push
decl
jecxz
outsl
mov
inc
dec
push
mov
inc
mov
mov
or
shrb
mov
jg
inc
xchg
js
mov
mov
cwtl
mov
xor
mov
pop
ds
mov
lods
data16
incl
xchg
test
test
mov
mov
dec
push
add
hlt
inc
jmp
sahf
mov
mov
cmp
fs
lock
xor
cmpsb
imul
add
pop
cli
pop
std
dec
xlat
xchg
pop
adc
push
xchg
incl
push
xchg
mov
movsl
ds
leave
and
jecxz,pn
mov
sub
in
jb
lret
nop
cld
clc
mov
lahf
enter
sub
bound
insl
add
lcall
icebp
js
adc
lahf
nop
daa
xchg
in
jg
mov
push
push
jne
test
es
sbb
nop
and
jg
test
insb
adc
xor
cmp
test
pusha
xor
jo
out
call
lods
sti
mov
push
ret
or
or
inc
addl
ss
mov
lret
pop
inc
aam
dec
cmp
xchg
mov
inc
into
add
pop
call
jge
xchg
imul
xchg
lret
outsl
dec
ss
cltd
inc
xor
gs
call
lods
jo
mov
arpl
out
lods
xor
mov
fs
cld
sbb
cmp
fildll
dec
hlt
xor
xor
jg
mov
jecxz
dec
sub
stc
decl
aas
dec
inc
xchg
and
loope
jo
outsl
sbb
mov
addr16
je
incl
dec
cli
or
mov
stc
mov
lcall
iret
mov
call
ja
xchg
mov
int3
xchg
push
int3
xchg
mov
loopne
cli
dec
popa
cld
lret
push
mov
jbe
sub
pop
add
pushl
jbe
push
sub
aad
dec
push
mov
hlt
mov
pop
xor
loopne
cmpsl
push
push
lods
and
xor
lcall
cmp
pusha
xchg
sub
sar
pop
inc
sti
cmp
ljmp
test
mulb
in
push
rcrl
aaa
cld
mov
mov
inc
inc
out
cmp
lret
and
stc
sbb
lcall
sub
push
dec
jle
pop
fs
les
pop
inc
incl
mov
addl
jmp
addr16
nop
imul
cli
cs
repnz
pop
daa
outsl
jg
lock
fldenv
outsb
mov
shrl
adc
sub
lods
data16
in
ret
in
das
push
mov
ljmp
loop
mull
jp
dec
xchg
sahf
mov
xchg
imul
cld
jg
into
mov
in
mov
mov
out
add
add
pop
add
pushl
push
dec
js
xor
xchg
mov
adc
xor
add
ffreep
stos
xchg
mov
sar
jg
push
xchg
sbb
outsl
mov
and
mov
jne
add
pop
lret
xor
lock
fisubrs
test
pusha
pop
jb
pop
push
push
scas
cmp
xchg
xor
sbb
jg
sub
das
mov
xchg
pop
mov
shll
addb
adc
les
call
sbb
mov
or
je
pushf
movsl
daa
sbb
ss
incl
jmp
scas
mov
jno
mov
jmp
jmp
test
fs
push
mov
popf
pop
xchg
add
cli
fcomip
pop
mov
jne
js
cmp
cmp
imul
idiv
inc
lods
je
mov
mov
mov
xchg
mov
lcall
mov
or
and
popf
jmp
pusha
in
mov
test
incl
std
decl
pop
je
mov
push
xchg
mov
popf
cmp
mov
pop
inc
loope
cmova
add
adc
cmc
cmpsl
aaa
jne
scas
out
jns
pop
sbb
xchg
out
sar
jmp
hlt
mov
xor
mov
pop
cmpsb
test
fbld
stos
outsb
pop
pushf
adc
jge
imulb
loop
inc
in
ss
push
or
pop
xor
aad
out
insl
pop
fwait
imul
push
sti
icebp
mov
mov
sub
ss
andb
fisttps
inc
mov
jl
popf
and
add
call
pop
pusha
jnp
outsl
es
jne
data16
xchg
push
cli
pop
pop
ret
xlat
repnz
xchg
jl
mov
jbe
inc
lds
addb
test
test
lea
mov
jp
cmpsb
mov
fs
popa
cmp
mov
fwait
incl
lods
add
inc
mov
xor
test
aas
jo
decb
inc
inc
imul
pusha
cltd
push
xchg
xchg
adc
mov
loopne
sbb
add
jb
mov
imul
jbe
jle
jno
aas
pushf
pop
pop
lock
divb
das
jl
mov
adc
cltd
adc
ss
incl
push
mov
jp
xor
aad
xchg
xchg
mov
test
mov
mov
out
adc
mov
testb
inc
aaa
imul
xor
mov
out
pop
push
mov
sbb
icebp
cmpl
fcomip
repnz
push
cli
adc
pop
clc
cwtl
call
pop
js
pop
sbb
add
pop
jg
shrl
inc
push
xchg
ss
and
fmull
lcall
das
arpl
ret
rorb
das
or
adc
add
and
scas
insb
add
stos
and
fisubrl
push
dec
and
add
inc
adc
xor
push
fnstsw
sub
pop
scas
push
cmp
push
add
push
push
and
cli
adc
imul
mov
incl
adc
insb
mov
mov
stos
mov
ficoms
adc
dec
jbe
adc
inc
cld
idiv
inc
repz
or
pop
jne
lret
pusha
xlat
adc
aad
idivb
inc
lret
jle
test
cmp
mov
sbb
jg
sbbb
push
pop
push
mov
nop
cld
jmp
mov
add
loope
sbb
imul
mov
test
dec
lcall
cs
pusha
aas
test
xor
push
push
mov
mov
jle
mov
pop
out
es
mov
ficoms
push
xchg
xchg
call
ljmp
add
setae
gs
or
std
xor
test
sbb
jg
cli
or
jecxz
pusha
in
inc
dec
pop
mov
push
push
sti
jne
lret
out
out
imul
divb
dec
decl
push
imul
enter
cmp
lcall
mov
ss
cmp
pop
lea
cmp
sbb
xchg
filds
inc
cmp
sahf
push
inc
nop
mov
dec
xchg
hlt
jg
mov
adc
add
or
xchg
xchg
stos
jle
mov
cmp
xchg
mov
mov
scas
icebp
mov
cmpsb
cmp
mov
orl
add
test
add
xor
dec
adc
mov
push
imul
mov
xchg
xchg
dec
dec
stc
out
fbld
add
mov
jmp
in
mov
mov
fucomi
inc
jbe
and
sub
dec
aaa
sbb
scas
xor
out
idivb
iret
in
dec
jb
sarl
jb
push
jp
orl
jbe
leave
jnp
dec
std
ljmp
xor
dec
mov
dec
jo
and
in
sbb
loopne
cmp
push
in
mov
dec
inc
jle
mov
add
mov
mov
pop
and
imul
mov
mov
scas
test
into
push
xlat
sbb
insb
push
lock
push
lods
pop
lock
addr16
mov
adc
xor
arpl
xchg
pop
fidivrs
in
mov
inc
cmc
roll
jl
push
in
sti
mov
dec
sar
jl
xorl
arpl
in
mov
inc
dec
repz
lret
push
inc
mov
adc
outsl
mov
and
push
jae
loopne
or
adc
fs
mov
jp
rcrb
dec
repnz
out
push
ret
dec
cli
call
xor
xor
imul
adc
les
dec
ds
inc
cmc
mov
jns
daa
sub
rolb
dec
mov
cld
mov
jecxz
into
adc
roll
inc
fbld
or
pushf
dec
push
sub
shrl
cmpsl
test
fidivs
call
pop
lock
cwtl
xor
inc
xchg
ljmp
loop
popa
inc
leave
cmp
pop
inc
iret
test
sbb
or
mov
mov
push
pop
sbb
test
lcall
mov
adcl
roll
adc
cmp
jno
insb
decl
inc
cltd
outsb
iret
mov
and
cmp
sbb
into
hlt
test
incb
jl
or
arpl
jg
nop
push
imul
jg
xchg
aaa
pop
test
xor
sub
cld
int
xor
nop
dec
jle
adc
mov
sub
test
in
inc
jne
xchg
test
mov
sub
inc
inc
ss
push
xchg
dec
mov
pushl
xor
les
pop
out
rorl
bound
push
pop
loope
pusha
push
pop
and
jp
idiv
jo
stos
xor
dec
pop
push
add
jg
add
fsts
push
out
test
add
rcrb
or
jl
sbb
pushf
mov
cli
arpl
insb
imul
pop
push
leave
mov
lcall
inc
xor
inc
mov
arpl
inc
hlt
mov
test
dec
or
lcall
loope
add
dec
iret
dec
inc
imul
rcrl
in
jbe
outsl
ss
and
mov
fidivrl
sub
pop
dec
lcall
adc
adc
sub
push
sbb
lock
insb
pop
pushl
xchg
mov
sti
mov
ljmp
dec
or
jbe
pop
cmpsl
cmp
decl
and
js
push
dec
ljmp
pop
ss
adc
pop
mov
pop
cli
into
stos
dec
fisubrl
or
aam
test
int3
mov
rcrl
add
call
dec
mov
mov
cmp
mov
js
ljmp
int3
push
push
aaa
push
shlb
insb
loope
in
adc
sbb
mov
dec
jnp
cld
dec
rorb
inc
jecxz
adc
jb
inc
and
cmp
mov
push
mov
jo
loopne
rolb
dec
adc
call
cmp
cmp
inc
ljmp
pop
arpl
mov
inc
in
or
cmp
sub
cmp
loopne
es
mov
stos
outsl
loopne
mov
repnz
inc
popa
ret
lahf
decl
jne
xor
pusha
and
lods
fildll
in
pop
push
js
xchg
into
loopne
bound
imul
decl
push
pop
mov
push
mov
lds
lahf
lret
push
push
cmp
nop
xchg
fs
jne
add
arpl
pusha
loop
insl
into
jno
push
push
pushf
lods
andb
incl
nop
inc
std
mov
or
mov
test
insb
mov
dec
idivb
js
jle
xchg
sbb
and
jp
push
bound
sub
add
shll
cmp
mov
icebp
push
mov
sbb
pushl
sub
sub
insb
and
loope
pushf
das
data16
jl
add
gs
xor
cli
pushl
insb
sub
cmp
lods
sbb
into
mov
push
daa
ljmp
xchg
or
xchg
cmpsb
rep
aaa
aaa
ret
xchg
adc
push
mov
jg
ljmp
xchg
pushf
jge
pop
mov
sub
insb
bound
lret
dec
jno
jo
jg
cmc
or
jbe
mov
jae
push
out
cli
pushl
push
jg
cwtl
push
decb
mov
je
add
out
gs
jg
adc
popf
add
or
push
lahf
mov
mov
dec
lods
jne
push
dec
ss
clc
jmp
mov
mov
dec
lea
push
add
call
inc
xchg
push
push
pushf
sbb
and
aaa
aaa
mov
decl
mov
pushf
jl
cmc
sbb
jmp
add
js
cwtl
ja
and
add
mov
sub
mov
int3
mov
into
lret
scas
add
outsl
add
iret
bound
test
fnsave
mov
or
movsb
cmp
push
testb
stos
bound
mov
push
sub
lret
fdivs
inc
xchg
cmc
arpl
push
inc
fst
loopne
cmpsb
in
imul
mov
push
nop
mov
scas
or
decl
ja
or
and
or
adc
je
fwait
sti
inc
lock
pushl
mov
lcall
ja
xchg
dec
decl
fiadds
daa
mov
cmpsb
pop
jae
and
cmp
repz
das
js
push
mov
inc
iret
es
cmp
call
xlat
pop
push
call
xchg
pop
aaa
dec
stos
sbb
lock
in
imul
jge
imul
jo
mov
mov
ja
adc
ljmp
mov
pop
sar
sahf
data16
ja
movsl
sub
mov
mov
fisttps
xchg
addr16
jb
loopne
call
test
outsb
push
cmp
addb
fnstcw
call
mov
les
adcb
test
pushf
bswap
out
mov
je
jecxz
insb
jne
cld
mov
jmp
out
lcall
popa
imul
xchg
call
cmp
adc
scas
mov
imul
call
out
fwait
push
jnp
mov
outsl
clc
xchg
adc
ja
je
sub
sbb
stos
sbb
push
pop
dec
shll
icebp
ljmp
shrb
ljmp
cwtl
scas
xor
jg
scas
push
inc
iret
xor
jo
pop
lahf
mov
mov
dec
pop
out
std
mov
loopne
mov
sub
adc
inc
data16
std
loopne
bound
fidivrl
push
into
push
sbb
mulb
aaa
jbe
scas
inc
jecxz
adc
add
arpl
dec
or
cmp
lcall
jo
ljmp
shll
adc
pop
mov
jmp
cld
add
test
lahf
xor
dec
jae
push
inc
mov
adc
add
cwtl
pop
dec
enter
pop
inc
test
pop
mov
js
jle
push
pop
fisttps
test
cwtl
popa
jp
or
add
add
mov
stos
mov
aad
arpl
vxorps
clc
incl
push
mov
push
es
add
sub
jmp
pop
sahf
mov
loope
sub
push
xchg
lahf
test
sub
lret
aas
xor
add
lcall
xor
push
popl
ds
popf
xchg
and
mov
mov
in
into
xchg
pop
out
mov
nop
iret
daa
cltd
arpl
adc
fdivr
incl
js
xor
cltd
add
lahf
in
mov
lcall
gs
push
xchg
push
push
xchg
xchg
dec
xchg
jmp
pop
mov
sub
adc
pop
cmp
mov
enter
cltd
pop
test
in
pop
xchg
jg
mov
dec
mov
sbb
and
in
lahf
xor
cmpsl
es
pushl
lds
dec
pop
popf
mov
inc
and
xor
push
aas
rcr
js
push
sbb
mov
lock
shrd
lea
ljmp
inc
adc
les
stos
repnz
jno
clc
mov
push
mov
into
sub
mov
xor
cmpsb
mov
mov
adc
js
adc
sub
mov
lcall
push
cmp
mov
iret
sub
clc
clc
subb
jns
shll
fisttpl
xchg
insl
insl
jmp
or
mov
ret
push
mov
inc
ret
inc
fisttps
clc
push
outsb
add
mov
lret
cmp
arpl
jne
fwait
sbb
out
fisubs
pop
bswap
dec
mov
jnp
jns
or
jae
cwtl
push
rolb
mov
mov
decl
cmp
add
data16
push
movsl
ljmp
inc
jbe
packsswb
insb
nop
jl
out
dec
push
inc
dec
cs
arpl
orl
hlt
xorl
cmp
lcall
lds
movsl
nop
test
xchg
inc
push
pop
sbb
mov
insb
movsl
es
jmp
das
sbb
pop
fs
out
clc
je
test
sahf
or
xor
lcall
aad
xchg
flds
or
cmp
cmc
clc
out
and
outsb
pop
aaa
xor
sar
jmp
scas
pusha
repnz
pop
stos
in
push
sub
xchg
jo
scas
sbb
test
pop
out
add
imul
sbb
fmuls
and
jle
push
mov
dec
iret
jg
jle
push
lcall
sbb
fnsave
add
std
xchg
adc
jae
out
mov
popa
mov
pop
cld
mov
xchg
jle
int
inc
sub
test
pusha
adcb
bound
jmp
rorl
lock
js
inc
push
push
fwait
imul
push
cmp
movsb
jae
dec
in
pop
push
test
addr16
mov
lea
test
pushf
sahf
xorl
stos
mov
xor
daa
outsb
push
sar
pop
scas
aas
or
and
push
sarl
or
inc
out
incl
dec
pop
rclb
pop
sub
fiadds
push
and
mov
incl
mov
pop
dec
ljmp
out
mov
xchg
adc
pop
cmpsb
xor
jmp
cmp
lcall
incl
pushl
dec
push
mov
das
out
pop
out
jb
and
inc
loope
sbb
jle
ds
push
jns
decl
jl
xchg
cmp
add
sbb
bound
clc
lock
mov
xchg
outsb
adc
pop
mov
dec
cli
fdivrl
inc
inc
jns
sbb
add
or
cmpsl
data16
cmpsl
push
jg
xor
cmp
out
addr16
lcall
movsl
xchg
cmp
ss
mov
clc
test
xchg
inc
sahf
jns
push
mov
xchg
mov
push
cmp
push
jns
arpl
xchg
imul
out
cli
xor
or
push
fs
cmp
in
mov
addr16
mov
xchg
incl
ret
or
cmp
outsb
push
pop
dec
ss
push
xchg
pop
mov
adc
push
and
inc
outsb
xor
and
cli
aas
pop
push
jle
movsl
enter
aas
loope
bswap
mov
mov
add
pusha
cwtl
jl
jnp,pn
xor
inc
pop
push
cmpsb
adc
push
imul
sbb
sub
xorb
int3
xor
push
jne
or
loopw
jns
ljmp
jns
xchg
mov
jg
sbb
pop
sbb
aas
or
out
hlt
dec
push
stc
test
adc
ret
test
cld
pushl
sub
sub
push
cmpsl
addb
decl
jle
cmpsb
inc
lcall
mov
pop
aas
loope
dec
dec
imul
aas
lods
scas
fs
and
subb
je
mov
sbb
xchg
xor
cltd
or
inc
jbe
sbb
cmp
inc
push
adc
decl
movsb
mov
scas
gs
mov
or
mov
mov
xor
mov
sub
mov
ds
cmp
popf
dec
adc
imul
dec
aad
idiv
sub
push
adc
and
add
adc
decl
das
pop
pop
push
sub
adc
add
or
or
mov
or
sub
xchg
lcall
lcall
add
lahf
push
mov
cmc
mov
mov
lret
dec
cli
sbb
mov
std
call
icebp
and
pop
mov
xchg
les
icebp
cmp
xchg
leave
nop
adc
push
pop
pusha
pop
xchg
out
mov
nop
stc
adc
lock
movsb
mov
mov
loopne
popa
out
sbb
xchg
xor
call
jb
mov
insb
add
loopne
jnp
sar
outsl
add
mov
test
mov
jg
jecxz
push
jne
cmpsl
mov
mov
incl
mov
mov
sete
insb
imul
jno
dec
stos
sub
dec
dec
outsb
push
push
popa
pop
mov
mov
adc
mov
add
mov
sub
ljmp
push
ss
push
xchg
into
xor
sar
lcall
pop
int3
mov
cmpsb
inc
addr16
cmc
xor
adc
jb
fs
sahf
rcrl
jg
decl
sub
ljmp
jl
das
mov
scas
outsb
insb
pop
inc
stos
cmp
out
mov
inc
push
xchg
imul
mov
mov
orb
ss
in
dec
push
lret
mov
decl
loopne
outsb
jecxz
jl
aas
pop
mov
cmc
push
add
lcall
dec
or
call
add
arpl
push
adc
outsl
cmpsb
cmp
dec
add
and
imul
push
or
add
daa
insb
add
adc
addr16
push
xor
incl
adc
in
loope
cmc
frstor
daa
popf
call
test
push
cli
jg
mov
loopne
mov
std
scas
aad
mov
negb
pop
mov
mov
mov
mov
mov
mov
incl
xchg
pop
mov
cltd
dec
movsb
cmp
rcrb
push
lods
iret
mov
dec
andl
add
test
lcall
fs
xchg
les
inc
int3
or
in
push
je
ds
ljmp
jg
rcll
push
pop
mov
add
jecxz
xchg
mov
pop
mov
dec
mov
sbb
pushf
leave
xchg
jno
push
mov
cmp
das
insl
hlt
nop
mov
call
mov
or
jo
mov
sbb
daa
test
call
add
mov
jmp
aad
rcrb
in
into
cltd
dec
mov
ret
in
xchg
jmp
inc
mov
leave
xor
scas
stc
movsb
enter
aas
test
cmp
insb
inc
stos
jo
loop
adc
outsb
cmpsb
sarb
rol
stos
push
test
popf
mov
push
and
xchg
sub
cs
and
test
lcall
scas
clc
sub
test
add
push
pop
cmp
or
ss
cmp
out
cmpsb
lock
fistpll
inc
cmp
inc
mov
xchg
aad
lcall
sbbb
bound
jecxz
inc
sbb
inc
xchg
aas
jecxz
mov
adc
call
fs
pop
adc
push
lods
aaa
mov
adc
sub
call
es
pop
sub
cld
and
adc
gs
jmp
lcall
xlat
pop
jnp
or
pop
cmpsb
into
daa
cmpl
xchg
pop
nop
daa
lahf
outsb
sti
sub
cmp
sub
inc
add
dec
xchg
add
aas
sbbl
mov
push
mov
mov
xor
xchg
ja
filds
dec
cmp
pop
xchg
pop
mov
test
sbb
mov
decl
pop
or
iret
and
or
fnsave
adc
mov
cmpsb
stc
or
sbb
scas
out
adc
or
ds
movsl
xor
nop
addb
out
xchg
cmp
mov
cmp
out
push
jo
sbb
sbb
cmp
push
sbb
push
push
cs
sbb
and
idiv
pushl
mov
xor
inc
mov
xor
test
push
movsb
and
scas
clc
aas
sbb
or
fldt
sub
adc
or
cli
mov
adc
jg
cmc
push
add
and
cmpsb
sbb
mov
lcall
mov
pop
xchg
out
or
sbb
sbb
pop
fwait
dec
push
inc
andl
adc
and
or
cwtl
cmp
jg
and
adc
sub
mov
xor
shrl
fbld
xor
add
mov
lcall
mov
jl
or
sub
sub
xchg
and
nop
fnstenv
imul
decb
or
cmp
sbb
xchg
cmp
pushf
hlt
sub
lock
inc
mov
pushl
sub
cmp
aam
mov
xor
mov
adc
xor
add
mov
or
jmp
jae
dec
mov
or
jp
out
popf
ss
add
arpl
imul
test
adc
aaa
sar
test
stc
add
add
pop
mov
pop
push
xchg
add
mov
push
cmp
jb
push
cwtl
in
mov
cld
incl
js
addr16
ss
and
fldt
lcall
mov
mov
xor
xchg
add
or
and
cmpsl
mov
adc
ffreep
lock
push
push
loopne
ss
sbb
fstpl
shlb
shlb
popa
mov
push
pop
xchg
push
and
lret
xlat
cmp
ljmp
push
in
or
ljmp
fidivrs
ss
jg
loope
test
or
cmpl
inc
jae
mov
jmp
and
gs
outsb
push
jmp
and
xlat
mov
dec
fwait
out
ret
jae
imul
cmp
pusha
shlb
push
ljmp
in
mov
sbb
addr16
inc
ficomps
pop
lock
aad
roll
imul
das
mov
adc
xor
pushl
loop
dec
and
xchg
icebp
scas
cmp
sub
mov
outsb
es
retw
fdivp
dec
xchg
jge
and
adc
lock
sub
mov
les
icebp
pop
add
into
lcall
outsl
inc
es
aad
adc
call
jl
test
popa
cld
jbe
xchg
mov
ffree
dec
mov
mov
lret
outsl
pop
data16
or
or
and
add
lock
jg
rcrb
push
inc
mov
popf
push
fs
xor
ljmp
mov
xchg
jnp
push
shlb
mov
jmp
icebp
jmp
stos
sbb
movsb
jo
push
setle
mov
cmp
scas
push
lds
mov
mov
lcall
adc
mov
push
les
mov
pop
mov
popa
shl
push
mov
add
clc
out
negl
loop
sbb
mov
lcall
sbb
shl
pop
ret
cs
lcall
movsb
popf
clc
gs
lret
ret
cld
pop
pop
ds
cli
shll
test
ljmp
or
icebp
out
aad
add
add
pushf
cmpsb
repnz
in
jmp
dec
lods
add
iret
iret
and
push
aam
sahf
and
popa
ror
ss
xchg
leave
pop
and
jno
je
subb
mov
iret
lods
shrl
bound
and
int
xor
and
std
incl
idivb
xor
iret
or
ds
jg
pop
scas
or
test
sbb
mov
lcall
std
mov
jne
xchg
popf
jae,pt
stos
pop
mov
cmc
lea
sbb
lods
xchg
movsb
faddl
mov
in
xchg
sarb
loopne
mov
cltd
xor
dec
loope
push
or
pop
nop
sub
xor
inc
clc
decl
cmp
xor
xchg
adc
jne
sub
shlb
jecxz
or
decl
cltd
insl
push
and
call
push
jl
jp
test
outsl
add
jmp
imul
sub
push
push
adc
push
out
sub
scas
pop
adc
addr16
daa
ja
pop
lds
xorb
sub
test
cmpsb
jge
mov
inc
or
stos
bound
or
push
pushf
push
bound
add
mov
ds
test
test
xchg
fcmovbe
in
mov
ret
ja
adc
mov
mov
and
outsl
imul
inc
push
ja
or
pushl
je
sub
xchg
push
jb
lcall
fwait
sahf
enter
push
jg
sub
jb
pop
icebp
sbb
pop
add
jle
add
jmp
fldcw
mov
dec
add
jmp
scas
popaw
xchg
stos
dec
dec
cs
sbb
ficoms
cmp
mov
xlat
pop
imul
jae
jecxz
mov
xor
add
mov
ljmp
stos
outsb
push
cmp
mov
jmp
call
imul
pop
adc
imul
and
ljmp
add
cmp
outsl
loopne
repnz
jecxz
hlt
push
jb
cld
mov
xchg
loopne
inc
dec
repz
push
pop
mov
jb
out
pop
jp
jno
out
clc
ja
push
mov
sbb
add
sarl
mov
das
add
in
in
ds
adc
fisttps
inc
pop
popa
xor
es
adc
jae
mov
lcall
lods
mov
iret
sbbw
fwait
movsl
rorl
call
fadd
push
loope
jbe
xchg
in
out
cmp
mov
pop
sub
jmp
jp
mov
mov
push
jno
mov
pop
dec
and
lret
fdivrs
and
inc
xor
add
loopne
xchg
push
std
and
loop
lods
aaa
mulb
out
incb
mov
call
icebp
xor
cs
push
and
add
lcall
push
fs
ss
or
and
cmpsb
pop
or
fisttps
push
in
cwtl
cmp
sub
cmp
sti
add
cmp
scas
icebp
xor
incl
sahf
sti
ss
fs
or
pop
into
push
mov
and
rcrl
add
mov
xor
movsb
loope
jg
outsb
enter
pop
test
inc
inc
popl
scas
or
pop
jno
arpl
pop
insb
es
adc
mov
mov
loope
pop
je,pn
idiv
mov
ljmp
lea
ret
pop
popf
pop
mov
repz
aas
std
add
xchg
push
lret
adc
cs
sub
jno
mov
jecxz
jnp
or
sub
and
pushf
das
sbb
or
and
loop
cwtl
mov
das
js
lea
ss
loop
push
sbb
cmp
icebp
pop
or
bound
pushf
push
and
push
mov
and
xor
inc
clc
fildll
pop
adc
push
cmp
sub
pushl
xchg
clc
mov
inc
ja
xchg
loopne
popa
sbb
xor
ja
fdiv
sub
mov
add
mov
jbe
les
lahf
aaa
mov
es
xor
and
cmp
lcall
jmp
or
add
daa
jle
dec
pop
fwait
xlat
and
outsl
jno
out
punpckhwd
fsubp
cli
xor
and
movsb
fisubl
addr16
loopne
mov
and
pusha
and
lcall
mov
insb
xor
xor
sub
xorb
gs
addr16
push
inc
aas
cmp
pop
loop
xor
cli
xor
xor
dec
add
xor
cmp
or
adc
addl
stos
xor
loopne
jb
mov
mov
mov
movsb
xor
cmpsl
cwtl
and
xchg
xchg
xchg
ud0
icebp
sahf
xorb
jle
arpl
decl
mov
jmp
mov
sbb
stos
inc
clc
pop
das
jecxz
dec
and
mov
mov
ljmp
push
cli
xchg
out
fs
movsl
addps
in
xchg
push
call
daa
add
push
loope
jecxz
in
lcall
addr16
ljmp
push
ljmp
pop
loopne
push
sahf
imul
jno
into
stos
adc
cmp
cwtl
loopne
int
mov
testb
dec
cmp
cmp
and
sti
mul
jbe
movsl
sbb
and
addr16
aaa
hlt
push
add
out
mov
mov
les
mov
cld
ds
loop,pn
int
outsb
cmp
or
ret
call
pushl
int
fisubrl
push
test
call
decl
arpl
lods
lock
sbb
sub
mov
call
mov
cmp
adc
in
rorb
push
insb
ret
jp
imul
jg
cmpsb
dec
push
pop
shlb
inc
and
std
call
jo
xor
jl
xchg
aas
out
out
ja
sbb
push
test
jo
xor
fmull
mov
mov
pushf
xchg
stc
lods
pushl
mov
xchg
scas
lea
inc
cmp
xor
mov
inc
adc
popl
mov
jle
es
ds
ljmp
sbbl
push
xchg
insb
loope
je
sbb
shl
add
jne
mov
and
decl
jbe
xchg
in
pop
lods
lds
sti
pusha
popa
sub
outsl
mov
mov
sub
shlb
jmp
decb
jg
mov
in
bt
repz
ljmp
jnp
cmp
std
sbb
add
pop
adc
cli
pop
push
test
cmp
les
popa
icebp
mov
scas
mov
pop
insb
out
jns
pop
mov
push
cmp
jecxz
or
xchg
sbb
inc
into
sub
dec
cmp
aas
test
xchg
test
pop
jo
jno
cmpsb
jle
cmp
pop
push
icebp
mov
ds
xchg
mov
and
jg
sbb
cltd
cmp
mov
testb
sub
test
dec
jae
aas
adc
mov
push
jo
sbb
movsb
add
adc
out
jnp
adc
repnz
in
xchg
hlt
mov
hlt
daa
xchg
bound
or
mov
out
adc
jg
fsubrs
out
sub
shl
inc
push
incl
mov
cmp
mov
jmp
jge
lcall
pop
shll
mov
dec
std
clc
add
and
pop
dec
lcall
mov
je
sub
sub
clc
and
mov
lds
adc
add
jmp
fisttpl
xchg
dec
or
scas
incl
dec
jecxz
jbe
push
and
xor
and
inc
rorb
cmc
ja
cs
inc
cmp
lea
je
sbb
push
hlt
mov
dec
push
adc
jg
add
pop
cmpsb
daa
and
push
ud0
mov
rcrb
cmp
loop
pop
mov
push
dec
scas
sub
out
jle
stos
neg
in
jmp
shrb
scas
scas
bound
fcmovnb
mov
lret
clc
aad
call
movsb
inc
es
std
leave
mov
jle
hlt
push
outsl
in
loopne
loopne
movsl
in
shlb
loopne
mov
in
cmpsb
xchg
sbb
decl
ss
lods
mov
test
adc
mov
cltd
daa
test
mov
xchg
mov
dec
test
adc
lea
int
outsb
dec
cmc
int
mov
dec
cmp
gs
mov
mov
jne
fwait
movsb
jmp
mov
fdivrs
movsl
lret
mov
shlb
clc
jno
test
loopne
dec
cld
jle
mov
adc
mov
ljmp
pushf
inc
sub
mov
shld
jle
ffreep
jb
jge
mov
add
push
cmp
push
sub
mov
popl
das
pop
push
insl
das
xor
or
or
pushf
call
ja
or
subl
mov
addr16
cwtl
add
cli
dec
jmp
xchg
inc
mov
sbb
mov
pusha
fmull
cmp
sbb
iret
stos
push
jae
scas
mov
hlt
dec
push
dec
push
jb
repz
mov
xchg
out
xchg
cmp
mov
negb
out
sub
or
xchg
xchg
jl
jmp
mov
addr16
or
adc
stos
inc
push
push
sub
int
insl
xchg
scas
mov
pop
ss
xchg
sub
mov
js
jecxz
icebp
ja
cmp
mov
push
sti
inc
data16
cmp
shlb
jb
dec
js
aaa
orl
stos
repz
out
jecxz
jecxz
mov
dec
mov
stos
int3
inc
jle
rcrb
fmulp
mov
ret
mov
popa
xchg
in
mov
mov
mov
out
mov
xchg
xchg
pop
loope
mov
fadds
sarl
ja
mov
and
xlat
imul
pushf
xchg
push
pop
adc
cmp
sub
push
les
mov
jp
leave
xchg
mov
sbb
and
fucomi
push
cld
sub
jne
jb
hlt
push
cmpsb
jns
in
ljmp
mov
cmpsb
cmp
aas
out
leave
mov
and
movsb
loopne
call
and
divb
or
jmp
pop
cmp
mov
add
adc
cmp
mov
pop
mov
mov
add
and
pop
std
fsubr
arpl
ja
movsb
popa
push
popa
stc
push
gs
dec
in
imul
push
pop
inc
pop
cwtl
inc
mov
sqrtps
push
push
or
out
mov
adc
add
push
jmp
mov
mov
push
es
jle
push
adc
push
jae
fmul
stos
imul
out
or
dec
and
repz
sbb
imul
dec
outsb
out
aam
jp
jae
popa
movsl
push
sbb
add
outsb
maxps
outsb
lods
inc
jg
jno
mov
push
xchg
mov
xchg
aad
mov
pop
loopne
call
sub
sbb
pop
pop
fs
in
aas
jo
movsb
loope
decl
cwtl
mov
adc
not
xchg
lea
leave
push
mov
push
push
std
cli
pop
fs
cmp
dec
in
xchg
cmp
pushf
inc
ss
ljmp
ljmp
mov
push
add
xchg
mov
push
fcoms
jo
out
add
loop
mov
xchg
fs
das
movsl
xor
test
lea
mov
fsts
xor
or
add
mov
clc
mov
push
mov
mov
xchg
xchg
push
je
cmp
jmp
jns
mov
dec
je
outsb
pop
outsl
mov
mov
cs
aaa
xchg
push
daa
jecxz
mov
adc
mov
dec
call
mov
push
jno
jne
mov
nop
loop
jae
cltd
repz
mov
inc
jp
ss
jae
fs
mov
enter
shlb
scas
sbb
mov
mov
fldcw
js
fnstenv
mov
xor
add
jg
icebp
cmp
test
outsb
imul
mov
das
and
jg
sbb
jb
ja
inc
in
loope
xchg
sbb
daa
cmc
xchg
pop
push
fwait
scas
or
jp
mov
xchg
into
add
stc
mov
mov
out
xchg
push
imul
mov
jae
mov
xor
mov
mov
sbb
fdivl
es
jg
push
xlat
add
xor
push
mov
fsts
push
cli
sarb
pop
mov
mov
mov
dec
cltd
fnstsw
daa
mov
fs
out
fcomp
movsl
pop
rolb
loopne
sbb
rol
shrl
and
cmpsl
stos
ljmp
pop
movb
inc
out
stos
mov
out
test
lcall
push
addr16
dec
shll
mov
int3
mov
decl
pop
push
pop
jns
loopne
mov
lods
repnz
push
aaa
and
call
inc
mov
xor
push
mov
xchg
and
push
clc
sub
xor
lea
lea
adc
loopne
decl
js
lds
push
jne
or
dec
add
sub
cmp
clc
xchg
cmpl
mov
mov
add
jo
je
xchg
adc
adc
jp
in
dec
outsl
cmp
or
int
cs
inc
ss
push
mov
call
adc
sbb
jp
push
and
and
insb
ljmp
pushl
mov
mov
ror
repnz
cmpsb
jns
pop
loopne
mov
daa
xchg
add
adcb
xchg
cltd
mov
push
ret
jnp
mov
mov
rorb
mov
jg
push
in
push
mov
pop
cmp
adc
testb
in
iret
adc
adc
xor
repnz
pop
cwtl
adc
or
out
xorb
in
mov
dec
jae
jecxz
das
shlb
adc
in
idivl
sub
fstpl
orl
nop
pushw
xchg
xor
pop
mov
out
das
add
xchg
daa
idiv
or
sbb
jecxz
adc
sub
popa
push
pushf
sub
jbe
addr16
imul
pop
jmp
in
or
dec
ret
jne
jmp
jmp
js
imul
inc
xchg
out
stc
mov
insl
add
or
loop
xor
fs
push
shrb
sahf
push
arpl
mov
enter
out
fs
sub
xchg
and
mov
jae
add
sar
jle
inc
xor
pop
pushf
sbb
ljmp
nop
sbb
jne
outsb
inc
pop
insl
adcl
sbb
mov
push
jae
xor
push
or
pop
lahf
mov
cld
adc
dec
mov
call
fsubrs
mov
js
push
jle
insb
sub
push
scas
xchg
mov
js
jg
xchg
pop
in
mov
xchg
rorl
rcr
or
sbb
dec
mov
push
js
outsl
and
ret
inc
out
adc
movsl
pushl
cmp
pop
enter
xchg
push
jle
loope
mov
push
decl
das
sahf
daa
lods
add
mov
out
push
jp
decl
test
pop
pusha
sub
xor
bnd
inc
sub
dec
cmpl
pop
in
mov
insl
xchg
pop
jnp
jp
ds
roll
popf
add
pop
adc
pop
jno
daa
ljmp
ja
pop
imul
push
dec
inc
sub
sbb
mov
in
ds
xchg
mov
orb
cmp
pop
cmp
adc
and
clc
mov
test
jle
sbb
lock
pushl
jo
push
dec
lret
js
mov
pop
pusha
xchg
movsl
xor
arpl
or
dec
scas
sbb
jb
and
shlb
or
dec
mov
jne
decl
inc
aas
jl
jbe
push
mov
call
inc
repz
add
mov
outsb
ficompl
leave
nop
pushf
outsb
or
fs
sub
les
mov
aas
and
cmp
mov
cld
pop
dec
pusha
test
dec
test
stos
xchg
mov
jg
call
nop
bound
sub
in
push
js
mov
imul
pop
jb
lret
push
dec
xchg
dec
jb
jg
xlat
xor
gs
in
inc
in
mov
test
mov
xor
pushl
mov
arpl
mov
aaa
mov
clc
test
cmp
or
xchg
mov
jg
orb
cmp
mov
imul
mov
test
ds
popl
push
sub
mov
or
mov
add
out
push
sahf
cmp
cmp
jg
andl
push
std
or
pushl
fs
mov
cmp
dec
push
inc
mov
imul
outsl
es
scas
cmpb
insl
push
push
fadd
not
out
fisubrl
xor
mov
mov
jno
mov
mov
push
inc
adc
je,pt
pop
lock
add
cmp
orl
adc
add
lcall
outsl
fidivl
jae
pop
hlt
mov
dec
sbb
adc
test
inc
shll
xchg
pop
int3
pop
insl
mov
pusha
out
xchg
ss
scas
ss
xor
xchg
cs
sub
gs
lods
sub
cwtl
jg
imul
stos
movsl
out
inc
decl
icebp
ss
aas
cmp
sub
nop
cmp
jle
mov
cmc
mov
cltd
shr
clc
jmp
ds
lcall
shll
dec
mov
mov
popf
pop
scas
lds
decl
and
loope
ljmp
cmp
push
and
cltd
out
shrb
xchg
out
xchg
add
sub
jbe
xor
test
cmp
push
fwait
xor
outsb
add
call
bound
inc
mov
mov
test
add
mov
push
aad
mov
push
pop
stos
loopne
mov
adc
jmp
and
lcall
imul
jge
dec
dec
push
sti
subb
push
dec
in
mov
mov
cltd
mov
mov
jno
jnp
push
adc
inc
loopne
push
xor
xchg
cwtl
xchg
mov
push
pop
mov
pop
repnz
stos
cmp
cmpsb
daa
mov
lret
xchg
inc
jb
lods
loope
cltd
add
pop
clc
cmp
pop
shrb
test
mov
outsb
or
es
lret
and
js
sub
ret
ja
jae
pop
push
add
jl
and
out
cwtl
add
imul
xchg
push
jle
ss
add
cmp
jle
icebp
cltd
pusha
adc
nop
pop
hlt
and
mov
inc
sahf
fisubs
fs
incl
stos
outsb
add
cmp
pop
sbb
out
adc
jmp
dec
data16
push
add
sub
xor
or
dec
imul
inc
dec
neg
pop
xchg
pop
ljmp
sbbl
je
dec
lds
push
push
xchg
xchg
jmp
js
and
push
dec
jp
mov
das
aam
les
push
int3
cmp
jp
inc
test
insb
fdivrl
add
out
jle
lods
lcall
mov
push
xor
jge
lcall
xchg
int3
es
xor
jno
pop
mov
pop
les
xchg
popa
sub
sbb
imul
jg
and
and
sub
pop
mov
mov
and
sbb
data16
sbb
mov
push
pusha
out
hlt
and
bound
sub
push
push
cwtl
loopne
cltd
test
std
add
push
out
xor
into
pop
or
add
cmp
pop
mov
inc
cltd
xchg
cmc
sbbl
adc
je
cmp
lods
fwait
mov
pop
ret
adc
jmp
adc
inc
test
cld
mov
dec
call
mov
mov
out
and
adc
mov
test
mov
ljmp
fs
xchg
push
in
mov
dec
outsb
sub
xor
jmp
das
out
sub
cmpsb
adc
aas
js
loopne
loope
xor
sub
lock
incl
or
rcrl
push
ss
std
adc
xor
inc
outsb
push
das
outsl
push
jg
push
and
int3
mov
sbb
jl
pushl
aas
jnp
sbb
loope
push
orb
push
testb
jg
add
inc
dec
lods
push
mov
mov
call
mov
mov
sub
insl
loopne
out
outsl
mov
jl
lock
pushl
iret
pop
pusha
je
push
jecxz
fs
xchg
gs
pushf
mov
or
mov
les
inc
mov
icebp
cs
ljmp
clc
push
inc
arpl
jnp
push
insl
arpl
fisubrl
push
adc
mov
inc
cmpsl
call
aam
out
push
cltd
gs
fwait
jg
sub
in
inc
add
popa
xor
fs
mov
cltd
mov
mov
arpl
sub
jbe
inc
and
mov
dec
daa
gs
pusha
scas
outsl
and
adcl
mov
cmc
pop
loop
push
inc
stc
cmp
xor
pop
adc
inc
jp
jbe
jae
pop
repz
imul
cmp
pop
pop
and
test
loope
dec
out
shll
ja
aas
mov
pop
int3
push
inc
repz
sarb
hlt
xor
nop
inc
mov
cmp
push
mov
pop
mov
mov
xor
or
push
ljmp
xchg
scas
mov
mov
call
add
aas
outsl
fwait
repnz
mov
subb
and
jmp
pop
imul
pop
pushl
xchg
test
test
push
popl
pop
xor
loop
push
repz
popa
lcall
pop
test
arpl
ja
sub
lods
pusha
mov
push
imul
pop
lea
stc
ss
out
push
iret
jp,pn
dec
ljmp
test
movsb
call
lods
in
mov
mov
add
daa
dec
out
insl
out
or
jecxz
adcb
movlhps
lods
les
cmp
rorl
push
jne
stos
jnp
in
add
call
nop
leave
insl
push
shll
sub
icebp
mov
jns
ljmp
subb
es
cmp
cli
or
shrl
xchg
mov
int3
dec
movsl
cmpsb
ret
jl
xchg
pop
pop
aaa
push
sbb
and
test
lret
pop
lret
gs
xor
incl
lods
xor
movsb
mov
dec
sub
cmp
lock
mov
dec
ljmp
loop
inc
cmp
enter
or
outsb
pop
mov
in
aas
jo
cmp
jbe
mov
cmp
and
or
stos
add
subb
cmp
sub
and
les
dec
sti
mov
xchg
incb
jo
jge
jle
imul
ljmp
int
dec
outsl
jp
insl
enter
ljmp
or
cmp
pop
es
test
push
mov
pop
xor
dec
insb
out
push
pop
mov
fwait
push
mov
sbb
add
jmp
or
jbe
js
lds
inc
mov
clc
incl
fwait
jnp
mov
cmp
push
xlat
sub
clc
push
adc
fnstenv
outsb
gs
jmp
push
arpl
jnp
push
jle
push
imul
arpl
testb
jmp
sub
ret
mov
dec
inc
scas
ljmp
xorb
dec
and
out
push
dec
fcomps
jb
test
ret
cld
lcall
out
mov
pop
inc
insb
fstl
cld
mov
faddl
inc
dec
sbbb
int3
loop
dec
pushf
out
test
lcall
incl
shrb
sbb
cmc
aas
push
dec
nop
push
popa
dec
cltd
out
arpl
stos
loope
push
xchg
fnsave
xchg
in
lcall
sbb
data16
sub
jg
ljmp
inc
jmp
fs
in
xchg
stc
mov
js
dec
xor
scas
icebp
push
ss
decl
inc
hlt
adc
js
pushf
pop
pop
jg
negl
fists
inc
mov
or
dec
cld
sub
pushw
pusha
fs
xor
jg
cs
push
mov
xchg
gs
push
cltd
into
ds
jecxz
loopne
arpl
pop
inc
outsl
outsl
pop
aad
jge
fidivl
outsb
mov
in
test
add
movsl
fistpll
js
decl
push
add
ficompl
pop
dec
xchg
clc
mov
ret
out
mov
adc
sti
cmpb
addr16
xchg
call
inc
dec
roll
push
cmp
or
cmp
ljmp
pop
hlt
pushl
cltd
loopne
pop
fnsave
mov
xlat
inc
mov
ret
inc
push
cld
push
push
je
stos
add
lahf
shrl
lret
xchg
int3
repnz
inc
push
jmp
ficomps
ja
out
pop
pop
mov
jp
mov
scas
stc
sbb
xchg
cli
adc
leave
xor
jbe
add
dec
aad
hlt
jmp
lcall
repz
cmp
rorl
addb
pop
ljmp
xchg
xchg
jp
or
push
jnp
sub
lds
popa
sbbb
jmp
mov
mov
xor
jmp
xlat
imul
pusha
aad
pop
pop
les
push
imul
mov
xchg
mov
cmp
push
js
pushl
jno
aam
js
test
in
pop
nop
in
out
js
mov
mov
jne
fisubrs
pop
push
icebp
dec
cld
adc
jecxz
test
xor
lds
fsubp
mov
mov
add
xor
add
fdivs
jg
xchg
sbb
inc
mov
mov
ljmp
std
mov
jne
adc
sarl
inc
or
addl
mov
scas
into
xor
test
aas
add
fisttps
push
push
jno
shlb
jge
sahf
adc
add
les
jmp
loopne
fimuls
jecxz
lcall
inc
insb
shrl
popa
inc
sahf
add
in
inc
divl
out
nop
xorl
clc
fsubrp
pop
insl
sahf
add
pop
and
outsb
lds
pusha
call
xchg
pop
xor
pop
icebp
test
repz
test
jne
push
ljmp
jle
add
ja
push
push
xchg
cli
mov
lcall
imul
mov
inc
movsl
hlt
jnp
sub
mov
jbe
stos
jecxz
dec
sti
stos
out
jbe
fbstp
jg
jo
out
movsl
jle
cmc
adc
fisubs
jle
lahf
and
jbe
ljmp
cli
mov
xor
into
mov
mov
mov
es
gs
pop
sbb
lds
aaa
and
test
mov
in
outsl
mov
cltd
fldl
sbb
add
fisubs
imul
out
mov
push
mov
clc
push
lcall
sbb
cmp
push
or
aam
xchg
leave
cmpsb
jge
and
insl
pushf
roll
cmpsb
cmp
iret
adc
sarb
pop
dec
lcall
das
cli
push
fisubs
test
cmpsb
adc
xchg
jo
inc
pop
lock
call
lock
xchg
mov
push
scas
in
ja
lret
cltd
gs
dec
leave
sahf
mov
out
push
arpl
test
xor
push
pop
mov
adc
imul
pop
xchg
pop
mov
pop
shlb
mov
sbb
xor
fdivr
pop
cld
lcall
push
ja
fnstenv
cld
cmp
jge
adc
cmpsb
pushl
popf
idivb
or
push
push
aad
shll
push
idivl
pushl
mov
push
jnp
xchg
out
idivl
jle
clc
mov
insl
popa
xchg
jmp
insl
repz
cmp
xchg
and
pop
mov
mov
add
jle
fstl
mov
jg
cmp
fisubs
cwtl
jge
push
jle
mov
mov
mov
out
loopne
hlt
cwtl
fcomip
or
jnp
push
incb
sub
xchg
pop
int
incl
mov
mov
add
xchg
enter
insb
fistpll
mov
aaa
lods
cld
decl
mov
sub
jo
loope
mov
push
xchg
add
aas
subl
add
arpl
xchg
add
jg
jecxz
xchg
jmp
push
pushf
int3
sahf
ljmp
filds
and
pop
mov
lcall
das
pop
sbb
aas
lcall
cmp
inc
fwait
cmpsb
pusha
in
out
sbb
call
rcll
popf
mov
incl
lods
dec
sbb
cld
daa
mov
cmp
xchg
ret
mov
xor
daa
cmc
lcall
push
mov
xor
and
scas
add
sahf
pop
lds
inc
mov
outsl
cld
fbstp
push
popf
xchg
mov
gs
mov
mov
jg
outsl
cwtl
fs
xor
js
mov
and
ret
mov
mov
pushl
loopne
xchg
popf
notb
jg
pop
pop
jg
test
aaa
add
mov
dec
mov
andl
lcall
add
fnsave
xchg
fsubrl
mov
subl
cld
stc
lahf
mov
loop
inc
pushf
out
test
mov
sahf
xchg
aaa
cmpsl
stc
repz
int
xchg
nop
stos
loope
pop
xchg
xchg
sbb
mov
mov
inc
test
stc
mov
adc
xchg
cld
cld
filds
jmp
jae
nop
mov
add
mov
push
clc
mov
jmp
jns
arpl
inc
xor
clc
ljmp
xchg
data16
xchg
dec
cmpsb
add
mov
cmc
test
push
sub
jg
jecxz
cld
xchg
pop
jmp
pusha
in
pushf
js
cmp
lock
push
mov
roll
xchg
mov
ret
cmp
xchg
xchg
xchg
inc
decl
mov
cmp
data16
mov
mov
sbb
xchg
roll
incl
movsb
xchg
mov
popl
add
cld
in
mov
or
cmpsl
inc
push
xchg
xlat
mov
cmc
xchg
pushf
mov
add
sbb
pushl
ljmp
pop
push
inc
mov
mov
imulb
repnz
lcall
jo
adc
push
sub
jl
lods
loop
jno
repnz
sbb
repz
rcrb
xchg
pop
mov
out
jnp
sub
jle
in
mov
je
decl
mov
push
cwtl
mov
cmp
mov
mov
jg
mov
mov
mov
dec
inc
mov
mov
hlt
mov
pop
sbb
push
nop
cmpsb
xor
jns
lcall
pusha
add
addr16
pop
jl
std
xchg
filds
add
insb
out
add
mov
mov
out
mov
addr16
mov
cmpsb
out
pop
mov
xor
pop
sahf
sbb
cwtl
xlat
xchg
imul
pop
jp
push
cltd
fsts
pusha
fistps
inc
into
std
jg
and
mov
mov
cmp
sbbl
cmpsb
call
in
cltd
xchg
xchg
ds
jo
xchg
add
push
push
sub
incl
lcall
aaa
inc
mov
insb
leave
and
aaa
sahf
roll
inc
and
scas
push
add
add
out
jmp
movsbl
cs
popf
pushf
fisubrs
push
xchg
and
arpl
aaa
dec
mov
out
sarb
push
mov
push
mov
pushl
in
pop
mov
xor
int
mov
std
lcall
leave
outsb
mov
dec
and
addr16
and
inc
push
loopne
mov
sbb
mov
xchg
in
in
sahf
pushf
jg
ds
addr16
decl
stc
sbb
int3
mov
xchg
push
hlt
fcomps
push
jmp
es
xchg
pop
ja
mov
mov
cmp
lcall
repnz
lcall
cmpsb
sbb
sahf
mov
imul
mov
insl
cli
lret
mov
xchg
mov
lcall
icebp
xchg
add
inc
sub
test
add
mov
mov
cmp
roll
mov
mov
inc
nop
cmp
mov
int
fsubrp
xchg
loop
pop
mov
sub
popa
ret
movsl
mov
mov
iret
xor
mov
jle
xchg
cli
push
push
pushf
loopne
decl
test
jo
dec
mov
iret
adc
mov
popf
mov
jb
movsl
dec
jmp
movl
cwtl
dec
jo
icebp
mov
popf
cmpb
mov
fwait
pop
std
pop
xchg
dec
cmpl
lahf
jg
mov
ds
cli
movsb
dec
jmp
incl
mov
pop
pushf
add
lcall
jp,pn
mov
xor
clc
rorb
fwait
dec
jg
call
fs
adc
popf
insl
pop
pushf
jno
push
pusha
pop
mov
dec
repz
adc
fsts
call
cwtl
out
clc
lcall
push
and
sbb
insb
icebp
sbb
sarb
pop
dec
mov
test
xchg
ljmp
cmc
clc
incl
mov
push
movb
popa
fdivrl
orb
popa
pop
mov
test
mov
fwait
lock
mov
push
add
push
decl
jecxz
fs
roll
pushf
cmpsb
jle
pop
mov
add
mov
xchg
and
test
cld
test
push
add
cli
lcall
xchg
lods
mov
cld
mov
cmp
xor
pop
xlat
xchg
inc
ficoms
cli
out
clc
adc
loope
rol
mov
into
mov
mov
xchg
pop
repz
das
les
repnz
mov
outsl
cld
dec
mov
fistps
movsb
jnp
and
jg
mov
mov
jb
mov
lcall
out
jg
jg
popa
mov
xor
outsb
scas
pusha
mov
mov
icebp
test
add
jmp
popa
mov
orb
pop
lret
inc
cld
call
clc
mov
inc
mov
jb
mov
callw
fldl
xchg
test
or
xchg
pop
inc
mov
mov
sbb
in
xchg
inc
mov
lods
mov
sbb
sub
jnp
movsb
out
jnp
mov
adc
call
lret
sahf
xchg
mov
sbb
lcall
cmp
lahf
adc
test
lret
xchg
cmp
sbb
push
mov
iret
and
mov
lret
mov
sbb
cwtl
xchg
xchg
scas
mov
xchg
sbb
dec
lods
pop
and
add
test
cwtl
insl
mov
cmpl
fnstsw
stos
lcall
jge
stos
into
iret
mov
cmp
call
xchg
repnz
mov
lods
outsb
sarb
fwait
jl
adc
inc
stos
rep
in
cmp
rcrl
dec
ret
ret
mov
push
cwtl
sbb
pop
mov
cs
mov
in
pop
add
scas
dec
icebp
sbb
or
push
xchg
pop
call
int
std
and
nop
call
lcall
sub
pop
xchg
sub
adc
negb
xchg
js
iret
add
rcrb
lcall
inc
jae
mov
add
ljmp
or
xchg
test
movsl
dec
aam
call
inc
mov
xlat
xchg
push
mov
cmp
shll
push
in
clc
lcall
adc
insb
sahf
sbb
mov
adc
std
ljmp
popf
movsl
jg
pop
push
cld
mov
pop
stos
icebp
cwtl
jge
mov
and
cli
pushf
lahf
dec
dec
mov
push
jbe
test
add
rcrb
pop
lods
ret
popf
inc
negl
fsubrl
aas
pop
xchg
loopne
js
push
imul
xchg
insl
pop
and
adc
mov
pop
fcomip
call
ret
xchg
iret
movsb
outsb
stc
mov
daa
pop
mov
icebp
test
incb
outsb
xchg
dec
fwait
sbb
mov
out
sar
mov
jnp
mov
fisubs
mov
scas
jbe
outsb
xchg
pusha
mov
sarb
ljmp
out
mov
pushf
fiadds
xchg
pop
fnstenv
test
mov
jecxz
ljmp
daa
pop
mov
inc
nop
outsb
in
add
ja
dec
data16
mov
fsubrl
jg
lea
adc
subb
out
xor
jbe
pop
ret
mov
xlat
and
subb
mov
mov
jbe
mov
daa
jbe
sub
xchg
outsb
idiv
or
xchg
fiadds
xchg
outsb
cmp
pop
mov
dec
out
jecxz
pop
mov
xchg
jmp
mov
out
fidivrs
pushf
push
fldcw
orb
je
orb
out
sbb
stc
sahf
test
add
loopne
je
mov
or
mov
xor
fidivrs
dec
std
jno
pop
jle
mov
fsubl
mov
fstpl
ret
jns
adc
mov
dec
int
and
pusha
in
std
ljmp
sbb
pop
mov
decl
out
bound
jne
sbb
cmp
inc
xchg
imul
lods
idivl
mov
xchg
mov
mov
inc
mov
jl
cs
loopne
decl
icebp
sub
jo
in
popf
inc
repnz
fldenv
dec
mov
jg
jns,pn
or
outsb
popf
sbb
mov
repnz
enter
in
mov
gs
insb
icebp
test
sbbb
nop
cmpsb
mov
inc
inc
mov
mov
mov
xchg
adc
mov
loope
xor
pop
or
cwtl
fs
ljmp
push
mov
dec
mov
push
outsl
aam
dec
fsubrs
ret
jmp
cld
call
andb
test
cmp
mov
ss
lcall
test
test
mov
lods
sbb
addr16
dec
cmpsl
imul
cmp
call
pushf
xchg
dec
sar
cld
dec
repz
out
dec
mov
scas
mov
insb
shll
addl
mov
pop
je
xchg
xor
dec
out
xorb
mov
nop
scas
mov
xchg
push
mov
inc
lcall
fwait
mov
lea
aaa
jle
xchg
sbb
pop
test
pop
std
jg
fnsave
push
push
sti
cmpsb
ljmp
mov
cld
adcl
cmpsb
cs
xchg
pushf
pop
sbb
push
test
xor
dec
mov
pusha
cld
adc
scas
cmpsl
cli
and
pushl
mov
sahf
add
and
jge
jno
mov
in
jle
push
mov
push
cmp
test
mov
sbb
ret
lock
xchg
ja
clc
mov
fcoml
push
inc
jns
pop
incl
jae
cmc
js
mov
popl
fnstcw
push
imul
fwait
int
pop
mov
inc
dec
daa
dec
sbb
jns
lret
dec
nop
cmpb
popa
adc
jne
jae
mov
ret
jle
clc
stos
jg
mov
mov
mov
loop
scas
lcall
jo
xor
ret
int3
jle
mov
adc
negb
insb
in
xor
inc
push
sub
pusha
push
mov
mov
mov
xor
roll
scas
sub
es
sti
pop
clc
xor
test
dec
pusha
inc
scas
mov
pop
mov
sub
xchg
icebp
add
add
adc
ds
ja
insb
xchg
jg
jno
popf
pop
jle
mov
xor
test
xchg
push
xchg
int3
lcall
lcall
outsb
fs
popf
dec
push
cwtl
rorb
xchg
push
jae
cmpsb
jo
fildll
ja
push
sahf
inc
data16
mov
inc
push
mov
lcall
lahf
mov
xor
dec
jge
mov
dec
or
push
lea
gs
mov
jae
mov
push
jae
xchg
jbe
jb
inc
pop
jns
pop
and
dec
push
fisubl
pushl
aad
dec
pop
filds
adc
lds
call
pusha
pop
push
mov
loopne
pop
stos
or
sbb
sub
dec
push
mov
dec
aad
jg
test
push
dec
inc
inc
pusha
fwait
pusha
nop
jbe
xor
mov
dec
pushl
jge
pop
pop
inc
push
mov
push
out
imul
ja
jp
fs
rcrb
lcall
fisubrs
mov
insl
cld
jno
sub
ljmp
outsb
jo
imul
cmp
xchg
jae
stc
scas
jg
jne
inc
jl
ss
push
cwtl
adc
mov
loopne
add
std
xchg
ja
jg
jecxz
push
dec
xlat
xchg
lock
out
sbb
dec
inc
ja
jo
dec
push
jge
loopne
ret
add
sbb
bound
push
and
mov
sbb
inc
stos
mov
dec
mov
int3
lahf
cld
mov
jl
add
test
fisttpl
xor
mov
jge
imul
jno
and
ljmp
addr16
loope
mov
mov
mov
ljmp
push
or
push
inc
out
and
jae
outsb
sbb
decl
dec
jecxz
push
xor
jb
into
dec
notl
mov
or
sbb
incb
or
aaa
sub
jg
out
loopne
push
imul
pushf
das
pusha
mov
pop
mov
jns
and
lcall
xchg
out
insb
jne
push
insb
xor
jmp
sbb
mov
xor
clc
or
cld
ljmp
push
sahf
mov
mov
ljmp
outsb
fildll
xchg
addb
dec
in
mov
sbb
mov
pop
xchg
cmp
jl
sbb
pushf
pop
mov
repz
out
pop
xchg
jp
outsl
repz
mov
push
sub
and
push
add
or
inc
push
mov
fisubrl
decl
pop
loope
xchg
ret
xor
add
add
jae
mov
in
pusha
dec
cmp
pop
add
mov
or
cmp
data16
mov
addb
loopne
mov
cs
es
jmp
xor
mov
ss
jge
sub
pop
mov
xor
pop
shrl
lea
inc
jns
or
jg
add
push
xchg
fnsave
sahf
adcl
mov
lahf
shlb
cmp
push
pop
xor
nop
aas
xchg
pop
adc
aaa
and
insb
cli
dec
pop
les
scas
lods
test
test
je
sbbl
mov
dec
clc
daa
or
xor
out
out
inc
call
insb
shrl
push
jl
imul
add
pushf
inc
inc
xchg
adc
cmp
jb
loopne
jbe
cld
xchg
add
cmpsb
stos
ljmp
and
gs
out
cwtl
sahf
inc
mov
sub
dec
stos
inc
fisubrl
xchg
das
inc
cld
pop
test
and
cmp
cltd
mov
mov
lret
mov
addr16
test
jmp
pushf
inc
push
aaa
dec
sbb
call
in
xchg
adc
mulb
mov
movb
inc
movsb
sub
out
mov
clc
jmp
sbb
xchg
push
scas
mov
mov
loopne
xchg
js
mov
cmpsb
ljmp
cltd
lods
cmpsb
push
fisubs
call
call
je
mov
in
lea
sbb
xor
fucomip
add
shll
xchg
add
sahf
test
lods
aas
pusha
xchg
xchg
lcall
pop
scas
jmp
daa
push
std
cmp
or
dec
iret
dec
call
je
cmp
dec
stc
incl
sbb
stos
lods
loopne
mov
out
dec
push
out
jae
xchg
inc
loop
mov
jmp
in
mov
sub
subb
fs
or
fiadds
jmp
sub
es
lds
insl
push
mov
push
je
mov
cmpsl
mov
addr16
scas
mov
xchg
pop
sub
adc
shlb
js
xchg
filds
std
das
pop
lret
pop
mov
outsl
push
and
mov
mov
outsb
lock
mov
xchg
mov
into
js
ljmp
icebp
xchg
jl
test
popa
push
std
cs
insb
loope
icebp
jmp
fs
nop
nop
fistpl
xchg
xchg
mov
inc
push
aaa
fisttpll
sbb
and
mov
adc
jg
lcall
loopne
xchg
in
xchg
xchg
fistps
popf
clc
dec
mov
out
cli
pushl
pop
dec
push
jle
add
punpckhdq
outsl
pop
inc
stos
xchg
clc
cmp
mov
sahf
movsb
ljmp
out
das
sbb
and
fsubs
loopne
out
out
jg
fistps
xchg
scas
lcall
bound
aad
decb
rorb
and
inc
inc
outsl
fisubl
test
pop
insl
xor
lock
cli
leave
ja
lods
lcall
fstps
xchg
mov
or
gs
adc
addr16
mov
jg
pop
in
push
mov
jecxz
cwtl
iret
das
out
cmp
mov
incb
xchg
adc
cs
lret
mov
push
andb
orl
outsl
push
out
incl
mov
dec
mov
pop
arpl
mov
xchg
lock
mov
jg
or
loopne
pop
ss
cli
and
lods
push
push
arpl
add
scas
and
pushf
push
xor
lahf
sbb
aaa
fwait
pushl
out
stos
jge
or
sub
and
jno
js
insb
js
add
fcmovne
ss
xchg
xchg
or
push
icebp
pushl
mov
mov
inc
lock
insl
jp
mov
mov
sbb
popf
push
sub
aad
mov
sar
jg
mov
jnp
into
hlt
inc
mov
je
push
call
mov
mov
push
out
cmpsb
popf
mov
std
mov
mov
mov
les
lock
xchg
aaa
cld
decl
pop
mov
jmp
icebp
mulb
jl
fsub
jl
test
inc
xchg
mov
repnz
inc
in
pop
es
sti
les
decl
call
mov
notb
mov
mov
add
pop
ljmp
adc
add
call
and
xor
ljmp
push
cmpsb
fwait
xchg
inc
test
inc
inc
lcall
popf
sarb
in
cmp
jg
lcall
mov
jecxz
dec
sub
push
js
loopne
mov
out
ret
xchg
xchg
push
mov
pop
in
dec
xor
inc
pop
cld
pushl
cmp
aas
add
out
sub
mov
push
cmpsb
mov
sarb
and
push
je
jmp
leave
insb
xchg
xchg
mov
scas
and
mulb
mov
push
pusha
mov
jge
xchg
push
cld
aaa
call
call
popf
cli
in
xchg
scas
outsl
xchg
cli
mov
decl
push
mov
mov
into
insb
cmpsb
loopne
sbb
xchg
out
mov
in
push
stos
lret
cli
pop
inc
push
push
push
ljmp
mov
mov
mov
lret
out
lock
sbb
scas
jne
hlt
xchg
mov
pop
lahf
and
pop
sub
pop
xchg
cltd
repz
pop
xchg
and
push
inc
jbe
aam
inc
xchg
negl
xor
outsl
in
loope
mov
inc
and
jg
add
add
lcall
xor
jbe
or
or
sbb
shl
pop
decl
mov
dec
outsb
dec
cmp
cmp
shll
test
ljmp
lret
mov
push
push
dec
mov
outsl
mov
inc
cmpsl
xor
int
xchg
dec
push
in
adcl
stos
inc
pusha
push
inc
sti
jle
jl
leave
je
call
mov
or
dec
jp
scas
test
sbb
scas
popf
push
imul
pop
xchg
cs
sub
pop
testb
ljmp
pop
pop
out
inc
jae
shrb
outsb
pushf
out
xchg
repnz
pop
mov
std
decl
lods
xchg
cwtl
sahf
dec
xor
push
cmp
int
xchg
ljmp
xchg
inc
xchg
lret
mov
add
hlt
pop
xchg
mov
mov
jmp
outsb
sub
push
and
stos
out
fimuls
test
cs
outsb
inc
add
shrl
cmp
ljmp
repnz
xchg
outsb
inc
popf
clc
mov
enter
lods
pop
testl
pop
jne
jb
sub
sarb
dec
mov
jg,pt
insb
jmp
jmp
mov
xchg
in
sub
fldl
jp
inc
das
js
repnz
adc
loopne
pop
mov
push
mov
fcmove
inc
lea
out
cmpsw
and
call
sub
push
sbb
xchg
ljmp
pushf
cmpsb
jae
rclb
sub
popa
fld
push
mov
sbb
jo
cmp
aad
mov
mov
orb
or
loopne
ja
repz
mov
adc
jmp
nop
xchg
inc
xchg
and
loope
mov
pop
pushf
popa
aaa
xor
sti
mov
cmpsl
mov
mov
sbbb
sarb
mov
jo
dec
test
mov
mov
clc
add
leave
push
rolb
incl
inc
mov
pushf
ja
inc
jge
jl
test
sub
sbb
jbe
push
and
sahf
enter
jbe
dec
fisubrs
mov
lds
cmpsl
dec
xor
pop
sbb
call
repnz
push
aam
scas
das
xor
call
rcrl
dec
push
ja
stos
dec
mov
aam
repz
sahf
mov
outsw
mov
int
lods
mov
lock
push
sbb
ja
call
pop
mov
adc
arpl
incb
jg
stc
shlb
bound
lcall
cltd
lea
pushf
mov
add
pop
hlt
sahf
enter
or
mov
jecxz
sub
xchg
test
adc
stos
inc
mov
stos
cmpsb
dec
inc
ja
clc
pop
push
jns
roll
imul
mov
mov
jbe
out
xor
ljmp
cmpsb
jl
adc
mov
iret
inc
shl
adc
int
push
mov
inc
js
test
fidivrs
dec
dec
mov
mov
iret
sbb
mov
adc
pushf
mov
ljmp
dec
fincstp
push
cmpsb
outsb
popf
outsl
movsl
popa
rorl
into
cld
and
pop
mov
cmp
out
xchg
inc
cmp
fstp
sar
sub
sbb
lods
movsb
gs
adc
lcall
or
lods
sahf
out
jnp
dec
mov
es
pushf
adc
call
das
ss
xchg
fldenv
out
outsl
lcall
repz
std
call
mov
jo
pop
pop
inc
mov
dec
subb
xchg
mov
js
fidivrs
outsb
in
push
dec
sti
cmpb
out
sbbl
das
sub
and
repnz
add
mov
xor
push
push
orb
jle
movsl
sub
sbb
push
mov
dec
shrb
jl
dec
fiaddl
pop
sbb
dec
cli
outsl
ret
sahf
push
pushf
divb
pushf
mov
mov
mov
cmp
bound
pushl
std
shll
jp
mov
mov
mov
jl
daa
jnp
in
xchg
dec
or
pop
fwait
mov
loope
mov
xchg
push
jb
jno
jns
cmp
pop
dec
mov
sbb
mov
mov
pop
lods
dec
fs
adc
sbb
jp
sub
cmp
mov
cld
add
sbbl
je
clc
decl
cmpsb
pop
xchg
push
outsb
jg
insb
pop
xchg
push
ret
into
sub
outsl
xchg
lock
cmp
jge
add
lahf
xor
jle
clc
call
xchg
jae
xor
decl
pop
cli
xor
jbe
mov
jg
xor
cmp
arpl
adcl
loopne
mov
ss
and
xchg
pop
jge
je
js
hlt
jmp
cmovb
push
dec
in
sub
call
clc
cmp
adc
jo
mov
shll
jno
mov
ja
leave
mov
cmpsl
mov
clc
inc
into
jno
jae
xchg
jg
fnstsw
je
ljmp
xchg
inc
inc
movsb
rcrb
xor
cmp
jge
jg
jg
loopne
jae
outsb
subl
lret
imul
and
and
ljmp
call
addr16
inc
lock
jae
dec
in
jo
jmp
cmp
arpl
pop
mov
mov
push
xchg
push
xchg
or
jae
outsb
popa
jmp
pushl
xchg
leave
cwtl
push
jl
cltd
das
xchg
xor
fdivl
lea
and
mov
imul
pusha
fs
ret
out
cltd
jmp
inc
out
outsb
out
mov
or
pop
scas
sbb
cmpsl
adc
ret
dec
loope
mov
call
mov
mov
or
jbe
imul
stos
and
inc
mov
das
sub
scas
ljmp
mov
sub
fistpll
cli
test
mov
jne
push
mov
push
xchg
jecxz
pushw
out
cli
or
cmp
cmp
adc
push
mov
add
push
add
inc
xor
add
and
leave
js
cmp
ljmp
mov
sub
and
cmp
das
arpl
push
xchg
jns
push
out
dec
in
dec
popa
sbb
dec
call
mov
jb
mov
jne
mov
ds
iret
nop
push
cmp
jnp
bound
mov
mov
int3
xchg
call
push
out
sub
xor
xor
test
ss
jp
mov
adc
addb
scas
dec
cli
jmp
out
and
cmpsb
fldenv
sbb
sub
xchg
in
adc
adc
cmp
mov
pop
ja
mov
pop
pop
clc
mov
daa
add
out
rclb
ss
inc
mov
push
les
mov
cld
lcall
mov
inc
inc
mov
inc
jge
and
mov
int3
stos
push
sub
cwtl
xor
push
pop
sbb
call
and
mov
bound
aaa
pusha
clc
jo
mov
hlt
pushl
sub
mov
xchg
cmc
out
sbb
out
and
cltd
lods
pcmpeqw
in
add
and
cmpb
in
movsb
pop
sar
data16
jle
test
sub
out
negl
ljmp
data16
mov
scas
add
mov
das
fs
in
lods
rcrl
call
jb
fwait
mov
repnz
dec
jg
test
jp
lahf
jmp
in
cli
rolb
mov
pop
pop
cwtl
sbb
cld
das
xor
fidivrs
push
out
mov
mov
jge
scas
outsb
loop
xchg
mov
add
mov
into
out
add
mov
and
lock
inc
push
jb
mov
dec
aaa
mov
decl
lock
xorl
cmc
cmp
sbb
cmp
or
adc
dec
mov
jo
jp
enter
inc
jnp
jl
ljmp
xchg
and
mov
jne
lret
outsl
jl
icebp
sub
repnz
sbb
pop
cmpsl
js
es
jg
push
cmpsb
popf
pop
xchg
fcompl
pop
das
mov
sub
ljmp
sarl
mov
jbe
movsl
hlt
push
adcb
pop
mov
lcall
mov
stos
aad
jno
aas
je
and
cld
out
xchg
jns
and
popa
lds
push
je
dec
jno
sar
add
mov
push
or
scas
mov
push
fldcw
cmc
scas
dec
sarb
sahf
or
dec
xchg
sarb
out
addr16
xchg
movsl
cld
cld
out
xor
or
dec
push
fwait
inc
mov
out
cwtl
out
test
call
xchg
jg
mov
xor
movsb
out
popa
pop
fnstenv
push
mov
fldl
ljmp
sbb
pop
pop
out
inc
cld
jmp
sahf
jne
ds
and
push
add
sub
or
es
xor
push
push
push
pusha
ljmp
in
pop
sub
sbb
jg
scas
scas
mov
mov
mov
mov
fwait
sti
mov
cmp
sub
incb
imul
call
ja
inc
fwait
push
pop
js
xorl
aas
jbe
nop
xchg
or
pop
push
mov
in
ss
fwait
and
popf
lahf
push
rcrl
in
push
pusha
mov
call
call
xchg
testl
gs
xor
xchg
adc
popa
loope
decl
and
lods
cmp
jmp
inc
mov
arpl
pop
in
mov
jnp
movsb
mov
jns
cmp
clc
mov
mov
jp
push
pop
leave
mov
jecxz
cmc
mov
outsb
cmp
mov
fs
jg
xchg
pop
mov
cmp
das
dec
push
mov
jecxz
jno
sbb
dec
fists
dec
das
add
int3
testl
add
jmp
lcall
scas
int3
nop
mov
jmp
ret
xchg
ficoms
or
push
leave
mov
cmp
lds
bound
jg
pop
sub
pop
and
jmp
pop
ret
scas
mov
or
call
rorb
rorb
dec
shlb
ljmp
add
push
mov
scas
out
inc
scas
inc
jae
mov
push
jno
mov
mov
mov
fildl
arpl
int
or
call
pop
mov
xor
adc
mov
rcrl
sbb
movsb
int
addr16
insb
or
gs
ljmp
mov
incb
mov
hlt
xor
ljmp
js
hlt
mov
rol
out
les
mov
ljmp
jmp
fdivr
mov
mov
arpl
jl
jbe
lahf
test
jg
out
ret
push
ja
mov
addb
xor
addr16
in
jg
cmp
push
arpl
pusha
fldz
movsl
and
mov
inc
in
outsb
push
inc
scas
clc
mov
jb
sub
addr16
ds
dec
push
movsb
jg
icebp
scas
arpl
lods
push
add
insl
cmpsb
outsb
hlt
out
std
jg
ljmp
jp
mov
fildl
frstor
loope
loopne
mov
neg
xchg
mov
icebp
orl
outsb
loope
mov
decl
stos
nop
mov
inc
push
cli
std
lods
les
fwait
dec
xor
movsl
sub
ljmp
das
aaa
jo
orl
je
inc
push
xchg
sahf
xchg
xchg
mov
imul
pop
cmp
ja
lods
xchg
scas
ja
push
pushw
cli
xchg
jmp
jmp
nop
decw
insb
in
in
mov
jno
inc
push
out
pop
aas
pushl
call
dec
loopne
test
mov
rorl
cmpsb
in
xchg
mov
jae
out
or
sahf
mov
cmp
test
jbe
mov
pusha
fldl
lret
mov
enter
fmull
popa
cmp
jle
jl
movsb
outsl
jmp
mov
pop
jmp
fwait
push
xchg
loope
lea
idivb
inc
mov
test
mov
add
scas
fiadds
mov
dec
fisttpll
incl
mov
cmp
xchg
sbb
or
nop
xor
imul
loop
fs
xchg
mov
inc
jno
popf
push
jo
inc
dec
decl
push
jb
sub
cmp
out
outsl
push
push
jo
cmpsl
mov
fwait
xchg
cmc
out
stos
push
pop
scas
cmp
lds
xchg
xchg
cmpsb
dec
cmpsl
dec
insl
push
hlt
incl
pop
pop
jle
adc
pop
sub
clc
call
out
cmc
push
sbb
clc
mov
popf
mov
adc
mov
xchg
addr16
adc
clc
out
mov
jbe
mov
call
jae
inc
adc
mov
add
mov
adc
outsb
jb
sar
das
clc
aas
jl
xlat
dec
ss
xor
dec
je
aaa
jne
into
dec
cmp
mov
lea
and
dec
push
inc
jecxz
ss
jl
test
inc
clc
jecxz,pn
stos
mov
out
mov
cmpsb
cs
out
cmpsb
xlat
pop
jge
mov
xchg
jmp
out
mov
mov
scas
push
in
mov
cltd
fildll
pop
popa
loopne
mov
andb
dec
aam
ss
js
fisubrl
cltd
cmpsb
rclb
or
push
jb
xchg
or
movsl
incl
outsb
into
jne
jmp
and
add
incl
inc
icebp
push
push
out
push
scas
add
push
decb
popf
into
sti
xchg
cmpsl
icebp
jmp
cli
scas
push
jno
cli
mov
xchg
xchg
imulb
sbb
scas
and
xchg
mov
in
push
insb
xchg
imulb
loop
adc
movsl
in
inc
xor
mov
add
out
sahf
loop
xor
xlat
lret
dec
inc
js
loopne
nop
in
ljmp
push
pop
inc
imul
lea
jp
in
mov
sbb
ss
data16
or
inc
test
test
js
lock
pop
in
fimuls
data16
je
mov
dec
out
xchg
pop
popa
out
loop
orl
out
add
sub
adc
cli
sbb
sarl
adc
je
mov
inc
cld
push
gs
mov
mov
mov
cmpsb
cli
mov
fnstenvs
push
jl
aas
mov
roll
cs
jg
ds
lcall
mov
pop
jmp
lea
push
mov
lds
outsb
mov
and
movsb
leave
lods
cmpsb
std
lcall
filds
ret
cmpsb
mov
pop
and
push
out
xchg
popf
out
push
enterw
mov
or
outsl
pop
ljmp
in
mov
pop
mov
icebp
xchg
loopne
cmpsb
inc
inc
xchg
mov
lods
ficoms
xorl
push
stc
push
sbb
call
dec
mov
jnp
mov
cld
test
into
mull
dec
fisubrs
decl
or
iret
test
sbb
in
mov
push
ss
mov
inc
ret
push
xchg
jmp
fadds
clc
xor
cs
andb
out
addr16
xchg
jo
sbbb
lcall
mov
mov
scas
xchg
orl
sub
add
jle
insb
loop
sahf
stos
push
dec
mov
xchg
xor
out
mov
jne
aad
push
inc
out
outsb
xor
imull
inc
sahf
rorb
pop
push
insl
in
cli
in
inc
mov
adc
in
pop
sub
xor
mov
ret
aas
xchg
outsb
xor
test
ljmp
out
decb
into
fiaddl
xor
sbb
push
cld
mov
stc
fldcw
cmp
icebp
aad
addr16
push
outsb
out
pop
icebp
testb
mov
std
mov
arpl
mov
xor
test
das
jg
and
cmp
jle
sub
clc
jmp
mov
push
incl
mov
fadds
loope
sahf
mov
fxch
mov
aas
pop
cld
xchg
mov
cmpsb
lret
xor
xchg
dec
jge
xor
clc
pop
test
movsl
mov
xlat
lcall
test
popf
mov
dec
in
out
mov
sbb
loop
mov
mov
mov
push
inc
mulb
jle
mov
xor
or
dec
loop
cmp
outsb
and
pop
mov
loope
aad
fiadds
jno
add
cld
sahf
fsubrl
cmpsb
aaa
shl
sahf
mov
mov
adc
ss
dec
popf
inc
cli
add
neg
pushf
cmp
push
adc
imul
dec
test
pop
repnz
pop
fmuls
loopne
out
testb
loopne
inc
incl
mov
sahf
lcall
insb
push
cmp
xchg
pop
out
mov
arpl
cmpsl
mov
aaa
cmc
mov
dec
pop
push
jg
sbb
popa
movsl
insb
lcall
cbtw
mov
or
ljmp
mov
fbld
flds
pop
dec
aad
add
es
xchg
out
stos
mov
pop
cld
ret
stc
mov
data16
jp
out
ja
fwait
loop
clc
push
inc
cmp
ss
in
mov
push
call
push
mov
popf
add
idiv
mov
mov
mov
imul
xchg
mov
lret
inc
cld
vpcmpgtb
loop
cmpsb
or
in
cwtl
cli
aas
sbb
loope
jnp
and
out
stos
fdivrp
sbb
jg
push
jecxz,pn
cmpsb
ret
jb
test
stos
push
popa
leave
loopne
jg
mov
aas
xor
movsb
clc
xchg
mov
push
out
shrl
call
inc
addr16
mov
jns
stos
fsubp
daa
nop
inc
lods
sbb
out
xchg
xchg
xchg
cmpsb
cli
rorb
xchg
xor
xlat
mov
int3
jp
xor
ljmp
jns
incl
adcb
in
jae
jle
sub
mov
mov
addl
mov
orl
pop
cmc
pushl
jae
out
inc
push
daa
mov
cmc
mov
loopne,pt
xchg
dec
test
jae
shrb
push
sbb
decl
test
mov
shll
xchg
dec
jg
push
xchg
xchg
nop
lods
dec
mov
sbb
iret
xchg
leave
xchg
push
aas
rorb
mov
jmp
icebp
xchg
dec
test
mov
cld
sub
cli
lret
jmp
cmp
push
xchg
mov
mov
int3
into
jmp
mov
mov
xchg
in
ljmp
mov
mov
push
test
mov
pop
inc
loopne
incl
xor
push
pop
out
mov
mov
xchg
mov
data16
stos
dec
jns
aad
lods
pusha
sbb
xlat
mov
test
std
pop
clc
bound
pusha
lods
call
inc
loope
popf
cmp
int3
push
add
cmpsl
call
test
or
jbe
enter
xchg
iret
repnz
and
notl
xchg
jmp
into
aad
xor
stc
test
nop
mov
fstl
outsb
pop
sti
out
cmpsl
repnz
pushf
add
fstpt
pushl
jbe
roll
push
jno
cmp
arpl
hlt
mov
sahf
mov
movsb
xchg
loopne
fcmovnbe
je
pop
lods
aam
mov
rolb
movsb
xor
dec
jg
inc
xor
stc
loopew
test
jnp
sbb
aaa
cld
icebp
mov
mov
test
xlat
test
mov
jmp
imul
mov
scas
bound
fildl
stos
es
lock
clc
paddd
sbb
out
ss
daa
aaa
test
fsubrl
push
out
and
adc
push
cltd
sub
js
outsb
stos
xchg
sar
push
jbe,pn
jo
pop
jno
inc
or
push
lods
or
mov
jl
jge
pop
xor
pop
clc
jns
push
or
or
xor
stos
sub
and
sub
call
loopne
pop
inc
jp
push
mov
inc
jb
xor
push
xorb
jg
outsb
outsb
test
and
and
filds
xchg
out
jle
mov
aaa
fs
mov
mov
jae
cltd
and
mov
nop
cmpsl
add
push
dec
push
inc
or
fidivl
imul
inc
out
pop
dec
pop
orl
pop
icebp
pop
stos
pop
adc
scas
push
dec
xchg
pushf
lcall
adc
ljmp
and
stos
or
jg
cmp
test
mov
lods
pusha
jge
adc
and
cwtl
pusha
jb
mov
push
mov
push
mov
cs
inc
mov
inc
and
adc
sbb
scas
clc
mov
cmp
ja
push
add
outsl
fwait
sub
inc
pushf
roll
inc
sbb
pop
pusha
repz
scas
lcall
or
xchg
add
addr16
ja
push
loope
stos
mov
inc
add
mov
cs
outsb
xor
push
push
sahf
aas
pop
sahf
adc
insb
and
jbe
dec
jmp
cltd
sbb
sbb
xchg
xor
cmpsb
dec
dec
jns
jnp
fsubl
cmc
decl
es
test
pushf
mov
in
scas
jmp
jg
or
ss
xor
cmp
mov
dec
xchg
negb
mov
xor
adc
xor
jne
arpl
push
addb
mov
incl
enter
push
mov
and
nop
sbb
xchg
ds
outsb
push
mov
sbb
and
jg
test
mov
jnp
mov
cmp
test
loopne
cld
lcall
dec
aad
outsb
lock
mov
sbb
daa
mov
arpl
mov
and
pop
imul
sub
imul
mov
jno
out
cmpsb
mov
nop
mov
or
cmpl
pop
add
xchg
outsb
sahf
dec
decl
xor
xchg
add
fs
xchg
fldl
push
pop
xor
bound
push
inc
jb
jge
out
cwtl
push
in
pop
call
test
sbb
clc
pop
inc
aaa
adc
xlat
ficompl
xchg
loope
jg
dec
outsb
jg
inc
sbb
xchg
push
ljmp
test
xor
mov
mov
jg
push
js
pushf
add
test
aaa
into
sub
insl
mov
std
lret
push
ret
jmp
pushl
test
or
cmp
add
movsl
inc
fwait
dec
mov
jp
paddsb
push
pusha
cwtl
leave
and
push
pop
pop
xor
in
lock
clc
mov
scas
mov
mov
ficomps
lea
sub
and
and
aaa
outsb
test
mov
mov
xchg
jb
inc
sbb
call
xorl
and
ja
in
xorb
inc
push
adc
mov
push
push
cltd
nop
std
cld
jg
push
pop
or
mov
jns
or
mov
mov
xchg
in
movsb
inc
loopne
xor
inc
fwait
lret
xchg
pop
pop
cs
out
dec
sub
cs
mov
lods
xlat
testb
xor
fcomps
jno
insl
inc
mov
lret
inc
loop
mov
mov
test
push
test
test
aad
xchg
mov
push
js
bnd
ret
ljmp
dec
jp
sti
mov
in
loopne
push
inc
fs
call
jmp
test
ljmp
dec
and
dec
or
push
jg
jne
push
push
arpl
lahf
sub
outsl
pop
add
dec
jl
adc
sbb
lods
push
push
dec
or
imul
aad
xchg
xchg
stos
ret
imul
dec
cmp
sbb
mov
xor
jg
push
and
ret
mov
xor
mov
sbb
adcl
or
jmp
outsb
adc
dec
jnp
popa
iret
dec
pop
jp
lods
adc
clc
add
scas
call
fildll
push
xchg
sar
push
test
cmc
mov
cmp
pop
scas
fdivrl
cmpsb
mov
mov
iret
mov
xor
mov
sub
inc
int
arpl
test
addr16
int3
dec
push
dec
inc
mov
arpl
push
xor
jp
cmp
cmp
push
xchg
sub
pop
cmpsl
loop
stos
jns
call
je
or
ja
push
xchg
test
popf
xchg
sahf
scas
shrb
pop
mov
cmp
rolb
in
andl
daa
pop
sti
aas
xor
adc
ljmp
cwtl
lds
adc
mov
adc
addb
out
loopne
out
test
in
sbb
lds
mov
mov
outsb
push
sahf
fisttps
sbb
ds
adc
cs
and
ret
icebp
ret
push
jo
push
scas
cmpsl
cwtl
mov
loopne
std
jg
dec
mov
xchg
dec
and
add
sub
insl
ret
adc
or
imul
jmp
cs
mov
mov
mov
jns
push
sbb
or
jmp
dec
aaa
je
pop
xchg
stc
aaa
xor
cwtl
inc
cmp
or
add
push
xchg
pop
sbb
clc
pop
sar
mov
jne
sub
aas
pop
loop
xchg
iret
push
pushl
aas
in
pop
xor
aaa
pop
pusha
xor
in
pop
ljmp
pcmpgtd
mov
xchg
aas
es
inc
in
cmp
test
mov
pop
loopne
or
jg
js
xchg
push
xchg
imull
jmp
pop
pop
into
jne
sti
mov
or
adc
scas
test
cmp
xchg
aaa
pusha
loope
js
lea
les
pop
dec
mov
es
adc
dec
popl
sbb
push
cmp
je
ss
sbb
lods
adc
ret
sbb
mov
mov
jle
xchg
pop
je
js
mov
mov
push
mov
pop
ret
jbe
dec
jg
push
pop
mov
adc
dec
sbb
aaa
std
decl
jbe
and
xchg
fwait
push
and
mov
push
and
and
shlb
rol
jne
push
loop
push
jge
pop
cmp
pop
movsb
mov
jle
bound
or
push
fadds
xor
mov
sub
call
add
adc
outsl
fnsave
jp
dec
adc
add
xchg
or
add
xchg
jnp
mov
clc
push
in
iret
push
pop
xlat
movsl
sbb
or
mov
rorb
xchg
bound
adc
out
pusha
in
xor
push
ja
jne
mov
jl
or
sub
jp
clc
lcall
scas
icebp
cmpsl
pop
mov
arpl
cmp
pushf
fs
mov
pushl
push
in
pushl
pushf
call
push
pop
add
dec
cmp
out
adc
inc
les
fs
mov
push
cmpsl
lcall
and
pop
insb
jmp
jmp
stos
jecxz
xor
cmpb
das
outsl
nop
daa
imul
sahf
imulb
xchg
jno
cli
addl
mov
dec
sti
dec
cmp
push
push
les
jl
divb
add
mov
pop
xchg
dec
push
cmpsb
loope
lcall
mov
fs
push
fmuls
dec
pusha
xchg
jl
dec
pushl
popa
pop
push
pop
rcrb
bound
loopne
push
je
or
or
mov
movsb
inc
je
jmp
aaa
or
inc
mov
addr16
mov
js
inc
cmp
inc
xor
push
arpl
out
mov
mov
andb
pushf
mov
mov
pop
dec
push
clc
mov
fsubs
jl
jns
xor
cmpsl
es
je
pop
mov
jnp
jb
pushf
push
lock
sub
ljmp
incl
popa
std
mov
pop
mov
data16
add
xchg
hlt
cmp
sbb
xchg
lods
aaa
push
add
add
ljmp
outsb
inc
pop
lcall
jne
adc
mov
out
stos
cs
mov
add
and
pop
cmpsb
add
and
add
test
jg
cmpb
mov
das
mov
orb
loope
sbb
adc
fbstp
push
push
inc
xchg
add
pop
push
sub
inc
cmpsb
xor
jmp
adc
orl
sbb
dec
inc
xchg
jp
aam
push
icebp
call
ljmp
jne
mov
and
dec
ja
outsb
push
into
stos
in
cmp
jg
jecxz
mov
cmp
add
outsl
inc
jg
call
cmpsb
lea
pop
insb
insl
sub
adc
ljmp
bound
dec
orb
fisttpl
sbb
dec
cmp
jo
push
scas
mov
xchg
test
jg
add
sbb
shll
push
add
jle
fidivrs
lcall
outsb
popa
out
cmc
pop
push
daa
data16
pop
pop
xor
or
clc
jns
iret
pop
sar
pushl
xchg
inc
mov
ret
jge
cli
addr16
jmp
cmp
loopne
popf
pop
push
jmp
sbb
inc
adc
es
enter
lret
fldcw
inc
std
or
dec
push
jmp
xor
dec
mov
jg
fwait
pop
out
or
jo
cmp
jl
in
int3
scas
inc
das
jg
aas
ljmp
or
jmp
pop
ja
sbb
inc
int3
and
jg
incb
or
insl
ficoml
xchg
adc
lret
mov
bound
and
clc
mov
or
lock
or
cli
pushl
cmp
mov
inc
pushf
mov
inc
test
jb
je
xor
push
inc
popa
adcb
gs
push
mov
pop
sar
cwtl
jno
mov
cmp
insb
mov
mov
cmp
outsb
or
jmp
add
test
decl
mov
cs
cmp
das
ret
mov
push
add
insl
push
pop
pop
scas
xchg
hlt
call
push
pushf
adc
outsb
jae
dec
ficoms
xchg
push
push
icebp
ffree
ret
cmp
inc
adc
jbe
push
fwait
jl
scas
jg
cmpsb
xlat
and
lods
adc
outsl
clc
fildll
jno
dec
fstpt
push
in
inc
sub
add
aas
movsb
loop
fnop
scas
mov
cmpsl
sbb
jle
js
ljmp
adc
adc
ljmp
jle
enter
dec
fnstsw
sbbb
add
dec
shll
sqrtps
mov
push
std
mov
cmp
mov
cmpsb
dec
push
std
jg
dec
cmp
sbb
mov
mov
ret
enter
decl
and
xor
sub
das
pop
imul
inc
bound
clc
jmp
insb
movsb
gs
sbb
sub
adc
mov
out
cwtl
movsl
dec
icebp
call
dec
ljmp
nop
push
xor
and
pop
mov
dec
sbb
test
scas
call
inc
dec
jmp
jle
push
das
mov
xchg
pusha
popf
lcall
mov
pop
lea
outsb
inc
jbe
cs
jbe
push
dec
ret
leave
ja
clc
vminss
pop
imul
jbe
add
lods
mov
pop
sahf
movsl
outsb
mov
cld
outsb
push
call
inc
mov
stos
arpl
in
inc
dec
pop
jg
test
push
popa
arpl
outsl
stos
incb
jne
or
mov
shlb
xchg
insb
cmp
add
lcall
fwait
add
xchg
outsb
mov
push
mov
dec
inc
adcb
cli
add
add
push
mov
jbe
mov
repz
pusha
cmc
xchg
sbb
pop
imul
and
outsl
mov
pop
xchg
mov
daa
xor
test
pop
mov
add
into
mov
popa
bound
adc
push
or
sub
mov
punpckhwd
inc
jecxz
movl
inc
adc
sub
imul
sub
or
mov
popa
test
push
jg
pop
xchg
ds
cmp
jae
popl
xchg
push
push
push
das
dec
jne
mov
sbb
ds
cmp
scas
and
mov
push
jo
or
sti
inc
incl
push
pop
add
loop
add
cltd
into
add
lcall
sahf
sbb
mov
mov
bound
inc
ficomps
jle
loop
clc
mov
mov
jo
mov
sbb
jle
call
cmpsb
push
jge
inc
mov
out
adc
incl
sbbb
adc
mov
scas
les
outsb
dec
push
popl
cmp
sbb
add
sbb
lcall
cs
xchg
or
outsb
in
mov
adc
adc
incl
movsb
mov
jle
call
stos
testl
sub
xor
pop
xchg
lock
popf
push
jle
das
push
popf
add
xchg
or
scas
jns
sbb
pop
cmp
mov
fisubl
xabort
loopne
jg
mov
lock
push
xor
fs
test
cs
mov
repz
or
ret
inc
idivb
mov
test
cs
mov
out
in
xchg
pop
cmp
and
dec
aas
and
and
cmpsb
push
push
ud0
es
fs
out
xchg
or
ret
clc
add
mov
loop
lds
imul
push
xor
aam
out
in
loope
jo
out
dec
pop
lds
push
in
and
mov
decl
outsl
sbb
test
dec
push
mov
cltd
cmp
cmp
ss
and
in
test
or
scas
xor
mov
pop
pushf
cmpsl
pop
xchg
cmpsl
imul
push
cmp
into
ret
lahf
dec
xor
mov
adc
xchg
ret
ja
cmp
jo
jmp
fists
outsl
ja
and
mov
or
out
mov
testb
sub
cmp
lcall
es
loope
sbb
adc
or
sub
bound
mov
mov
sub
push
call
stos
jmp
push
mov
cmpsb
xchg
sub
or
mov
xor
lods
pusha
xor
push
pop
dec
andl
movsb
ss
pop
sbb
pop
adc
dec
sarl
call
ja
lock
rorb
jbe
popa
inc
aaa
inc
dec
and
push
movsb
jo
xchg
mov
xchg
push
xchg
mov
adc
sbb
insb
arpl
pop
mov
lods
or
adc
pop
fwait
lcall
xor
dec
push
mov
insb
inc
xchg
call
inc
fs
push
ss
jo
movsb
iret
mov
mov
add
sub
mov
mov
es
sub
int3
out
outsb
in
mov
jmp
lods
mov
dec
movsb
leave
pop
lea
dec
aaa
sbbl
cmpsb
mov
sbb
xchg
cmp
adc
and
cmp
stos
pop
mov
test
dec
add
pop
lods
or
sahf
cltd
sbb
inc
jp
adc
inc
sub
lcall
data16
adc
pop
arpl
sub
dec
decl
sub
dec
adc
inc
push
inc
jb
stos
call
dec
sub
mov
sub
mov
call
sub
aam
iret
sub
inc
outsl
arpl
dec
fadds
cs
and
add
and
mov
cwtl
push
je
arpl
test
lcall
xor
lods
and
lahf
ljmp
pop
push
inc
jge
jge
jl
daa
xchg
add
push
xor
xor
inc
hlt
adc
insl
inc
add
decl
icebp
shlb
xor
adcb
xchg
pop
and
xor
mov
js
xchg
mov
jg
pop
sub
icebp
xchg
aaa
scas
xor
add
addl
mov
idivl
sub
into
ja
adc
in
scas
push
out
js
arpl
fiadds
fbld
ss
cli
jne
lea
ja
cli
arpl
out
lods
into
idivb
dec
call
push
out
dec
push
stos
xor
xchg
push
mov
mov
sbb
repz
push
loopne
mov
adcl
insb
inc
imull
mov
rorl
decl
add
aas
mov
cmpsl
push
adc
pushl
enter
cmpsb
push
xchg
clc
or
jne
jns
sti
loope
pop
out
fidivs
sar
rclb
jecxz
and
xchg
sub
and
in
adc
stos
jmp
sbb
out
jl
inc
dec
sbb
scas
cli
mov
packsswb
push
test
test
push
cmp
sbb
push
sub
inc
das
movsb
sbb
sub
cmpsb
sub
bound
mov
orb
ljmp
dec
out
xchg
out
or
or
daa
mov
add
mov
sub
loopne
mov
and
pop
ljmp
or
or
sbb
in
adc
cmp
ljmp
cmp
in
sub
push
mov
dec
cs
cmp
pop
clc
push
test
gs
cmp
push
mov
sub
and
aaa
cmp
cmpsb
ds
pop
mov
xor
pop
xchg
lea
lock
mov
dec
lcall
lods
mov
daa
xchg
mov
and
aad
xchg
mov
das
add
cli
ljmp
jno
pop
pop
jo
jae
push
in
mov
mov
ja
stos
dec
cmp
mov
ss
incl
idivb
sbb
clc
mov
adc
outsl
xchg
gs
sbb
in
push
add
xchg
pop
adc
xor
das
mov
test
add
cld
jl
test
mov
jae
mov
and
jl
cmp
sbb
push
mov
nop
jbe
es
clc
outsl
pop
jmp
ds
decb
add
pusha
or
adc
ds
out
push
lcall
popf
mov
lcall
js
in
call
pusha
xor
mov
inc
cmp
adc
add
adc
aas
mov
sbbl
ljmp
push
cld
scas
xor
xchg
xchg
pop
ss
popl
mov
cmpsb
in
add
add
cmpsl
mov
pop
mov
aas
mov
mov
xchg
mov
push
xor
decl
fmull
mov
lods
adcb
lret
mov
xchg
jns
movsl
bound
mov
outsl
ret
push
push
jmp
sub
pusha
popa
imul
es
jo
sbb
das
mov
sahf
sbb
pop
addr16
push
jne
insl
divl
pushf
je
or
cld
fwait
test
mov
mov
push
dec
mov
xchg
pop
adc
mov
daa
pusha
sti
mov
ds
shlb
add
add
jg
mov
je
push
loope
mov
xchg
adc
dec
fdivr
aaa
std
call
push
sbb
xchg
push
mov
inc
int3
adc
push
fs
test
fwait
and
push
jbe
gs
sub
cmp
cmp
mov
or
fists
jbe
inc
xor
pop
inc
push
xchg
cmovbe
je
inc
jae
fistpll
es
es
lods
test
nop
loop
push
mov
adc
aam
dec
jp
xor
mov
inc
and
pop
sub
fdivrp
adc
xor
adc
push
push
pop
roll
mov
mov
jno
push
mov
mov
lcall
mov
xchg
push
push
pop
push
sbbb
jb
cmpsb
jl
test
outsb
lcall
inc
jae
in
pop
pop
cmp
call
cmp
decl
pusha
sbb
sbb
lahf
in
cmp
rcrb
ss
lods
lods
outsl
std
xor
and
inc
ds
xchg
cli
push
inc
mov
imul
or
jno
stos
sbb
into
pop
jb
loop
mov
mov
dec
mov
or
loopne
into
sub
sbb
adc
filds
fstps
lahf
nop
jp
ret
fs
xchg
adc
rcrl
idiv
ljmp
arpl
and
es
cmp
xchg
jns
call
mulb
clc
inc
pop
clc
lcall
mov
add
out
mov
cmp
pop
ljmp
in
inc
repz
mov
inc
jg
add
dec
test
ss
mov
xchg
inc
dec
std
call
in
cmc
clc
cmp
mov
mov
jbe
adc
pop
dec
pop
test
pop
mov
test
sbb
and
sbb
sub
shrb
pop
ss
fdivrl
lret
imul
sbb
lock
xchg
jne
daa
mov
add
fbstp
mov
xchg
loop
add
jmp
notl
ljmp
or
mov
addr16
mov
xchg
incl
adc
jns
pop
addr16
lods
shrb
jmp
std
es
add
ljmp
outsb
jl,pn
iret
cmpsb
adc
cmp
aam
addb
out
aas
lahf
gs
aas
push
jecxz
mov
or
out
sbb
lcall
dec
inc
mov
pop
push
xchg
pop
dec
mov
jae
cli
mov
mov
cs
data16
xchg
dec
aas
sbb
aas
sbbb
mov
lea
in
inc
clc
jg
out
mov
rcrl
mov
addr16
mov
mov
cmpsl
inc
pop
mov
out
mov
aas
add
insb
mov
push
xchg
sbbl
jmp
mov
loopne
xor
fbstp
inc
inc
test
arpl
mov
bound
jo
push
stos
cmp
sub
pushl
mov
inc
mov
mov
pop
xchg
fbld
loope
jg
inc
adc
lds
adc
ja
sar
xorb
xchg
int3
push
push
pushl
xor
loope
xchg
insl
lea
scas
lock
pop
iret
or
pop
mov
ja
negl
adc
repz
les
fwait
push
push
dec
movsb
lahf
dec
decl
push
out
outsl
dec
add
cwtl
mov
decl
push
xor
pushf
test
cmp
jno
and
xlat
mov
pop
push
xor
mov
mov
add
pop
clc
jg
mov
dec
cmp
push
inc
mov
xchg
mov
ja
mov
test
mov
nop
ds
in
mov
pop
cmp
lahf
insb
leave
aas
bound
mov
clc
fimull
jle
jmp
sbb
mov
mov
stos
cmp
mov
cwtl
xor
mov
bound
mov
push
xor
xchg
fstpt
pushf
mov
arpl
outsb
aaa
jbe
xor
lcall
mov
or
jbe
mov
movsl
and
or
addr16
cld
scas
push
lock
adc
jns
adc
jg
pop
dec
mov
mov
sbb
std
repnz
lcall
push
stc
push
jb
pop
sub
dec
xchg
js
or
pop
and
test
add
cmp
or
insl
jae
loopne
and
cwtl
xchg
pop
jne
sbb
push
pop
xchg
sub
inc
pushf
xchg
pop
push
xchg
and
arpl
ja
stos
pop
aaa
insl
and
pop
xor
pop
es
aaa
pop
js
push
daa
iret
pop
mov
jle
test
jbe
adc
add
mov
sub
mov
out
and
jg
js
ret
or
mov
pushf
sub
lcall
sbb
push
mov
mov
pop
xchg
xchg
push
adc
lods
pop
sti
pushf
xlat
xorl
scas
outsb
into
and
fisttps
or
or
push
pop
mov
jne
adc
or
pop
add
pushf
xchg
xor
test
inc
xchg
sub
hlt
jg
xchg
push
popf
ja
imul
leave
xor
fwait
cli
mov
shlb
pop
push
jle
jne
push
push
outsb
adc
or
test
push
inc
xor
in
jg
aaa
test
adc
leave
fadds
pop
push
data16
xchg
jne
stos
adc
test
popa
fwait
cmpsb
pop
popf
in
mov
xchg
fsubp
xorl
inc
cmc
popa
and
mov
push
pop
cltd
stos
ret
xchg
push
gs
inc
fnstcw
push
jno
inc
movl
stos
push
cmp
test
stos
pop
dec
call
jmp
and
ss
push
push
push
push
add
das
sahf
dec
in
inc
sbb
pop
testb
ret
cmc
movb
sub
dec
movsb
add
lea
pop
mov
jge
into
jg
jns
andb
jmp
loopne
dec
or
push
xor
data16
repnz
cli
xorb
dec
imul
lcall
jne
outsb
add
into
lahf
in
mov
pop
fisttpll
loop
lods
inc
push
pop
imul
cmpsb
es
incl
adc
orb
lods
outsl
cmp
jp
das
jnp
push
pop
mov
inc
scas
es
pop
loopne
dec
sarl
pop
imul
jae
add
insb
or
pop
adc
enter
fsub
dec
aaa
mov
outsl
jmp
sbb
xor
jo
loopne
mov
fdivrl
cwtl
rol
push
fdivs
push
ret
dec
aad
dec
decb
adc
loopne
jg
sahf
pop
push
add
or
arpl
pop
popa
pop
add
xlat
and
sub
sub
jo
into
ljmp
incb
test
sbb
jecxz
cmpsb
push
mov
pop
mov
xchg
loop
xchg
push
inc
jmp
lcall
adc
pop
jae
outsb
in
lds
stos
ljmp
mov
push
stos
das
es
test
nop
cmp
mov
jp
and
imul
pop
inc
imul
mov
jp
fiadds
mov
mov
and
mov
lods
jmp
mov
incl
inc
es
lcall
mov
fcoms
xor
dec
cltd
notb
or
cmp
popf
dec
fstpl
out
inc
jecxz
mov
lahf
dec
hlt
mov
stc
jl
adc
ljmp
fisubs
mov
out
and
loop
mov
das
into
push
stc
mov
mov
sub
aad
ss
fsubr
xchg
xchg
loope
cmp
mov
aas
ja
cs
clc
jmp
add
xor
jnp
or
jo
rorb
or
aas
es
cmpsb
push
sbb
scas
or
dec
jmp
fwait
lret
clc
and
bnd
inc
xor
out
out
or
mov
jecxz
xchg
inc
fisubrs
out
xchg
pop
and
jae,pn
fmulp
jecxz
cwtl
pushf
lahf
sbb
call
out
jg
outsl
cmpsb
roll
fwait
movsl
daa
push
sbb
cld
in
test
sahf
jmp
pop
and
jne
popa
xchg
inc
std
mov
mov
ret
lods
or
push
loop
ss
cld
pop
or
iret
lods
push
repnz
mov
dec
adc
mov
and
mov
pop
pop
pusha
dec
jge
and
add
loopne
fwait
cltd
imul
lock
push
jne
jmp
fs
mov
and
sub
movsb
aas
mov
jbe
loop
loopne
loopne
push
sub
push
pop
imul
cmpl
or
lcall
aas
cmp
cld
dec
cmp
mov
adc
ds
cmp
xchg
call
mov
scas
stc
sub
dec
mov
mov
jbe
or
cld
mov
xchg
add
jecxz
aaa
pushl
sbb
test
nop
ficoms
cmp
es
xor
in
and
pop
lea
dec
or
loop
xchg
out
xor
ss
loope
sub
stos
jl
adc
pushl
add
cmpsl
das
notl
inc
dec
arpl
scas
pushl
cli
sub
mov
jb
jnp
imul
dec
pop
cmpsb
or
add
sub
xor
mull
push
cld
xor
cs
push
xchg
cs
push
pop
mov
push
pushf
push
outsb
pushf
jg
negb
sub
push
adc
out
mov
push
pop
scas
stos
aaa
adc
call
lret
les
jbe
adc
pop
pop
into
xlat
pop
loopne
push
mov
sub
mov
sbb
and
jle
add
push
pusha
xchg
ljmp
jle
mov
aas
jns
imul
push
gs
jg
pop
std
stc
nop
pusha
inc
fisttpl
mov
jmp
ss
stos
ss
cld
jg
clc
jle
jg
jg
inc
repnz
and
xor
jg
adc
pop
pop
mov
stos
loop
fwait
push
movsb
das
inc
push
mov
repnz
mov
sbb
xchg
hlt
mov
dec
enter
pop
dec
insb
jmp
call
mov
pop
mov
subb
cmc
xchg
lods
mov
and
cmp
add
dec
mov
cs
loopne
clc
sbb
push
mov
out
add
or
mov
ds
cmp
addr16
fwait
jbe
sbb
cmp
adc
cld
outsb
jecxz
mov
into
int3
mov
and
dec
jmp
sahf
loop
movsl
jg
and
xor
clc
pop
add
push
pop
push
mov
xor
jg
pop
shl
test
in
pop
dec
mov
test
mov
out
daa
test
jo
or
xchg
add
xchg
xor
arpl
decl
incb
or
outsb
push
insb
icebp
das
nop
sti
adc
outsl
mov
push
sub
stc
adc
xchg
adcl
add
fnstsw
pop
cld
xchg
add
add
and
dec
or
xor
jo
xlat
mov
into
and
loopne
stos
push
into
xchg
push
cs
xor
xchg
inc
jl
out
mov
jne
out
loopne
dec
jle
jae
inc
pop
dec
loopne
push
loopne
add
leave
mov
or
lock
call
inc
ret
and
js
or
push
jae
xor
mov
pop
sti
fdivp
rolb
shrl
aaa
xchg
ret
aas
xchg
bound
jg
dec
inc
movsl
lret
pushl
mov
push
clc
or
jne
xor
loopne
test
or
adc
es
fadd
cmpb
mov
loopne
pop
push
sub
push
fisubrl
mov
inc
pop
xlat
sub
cmpsl
rcrb
xchg
push
jle
cs
push
sbb
rclb
out
pop
inc
inc
jp
insb
cmp
xor
sbbl
mov
jnp
mov
lea
inc
fwait
mov
roll
adc
incl
jg
test
sbb
jp
sbb
adc
out
es
jg
sub
adc
mov
inc
xlat
mov
ret
pop
test
loope
sbb
adc
mov
insl
xchg
pop
test
jge
incl
cmpsb
fwait
popa
test
stos
sbb
cmc
add
lcall
sbb
xor
and
sub
paddd
push
push
pop
ja
pop
pusha
shlb
imul
icebp
jnp
ret
dec
xchg
and
jg
aam
repnz
mov
jo
mov
nop
lods
cld
in
mov
in
mov
movl
mov
inc
add
add
ret
int3
add
in
jl
add
movl
push
sahf
cmp
test
push
lea
jg
push
call
add
dec
cld
incb
jmp
imul
call
cli
jb
mov
scas
sbb
adc
mov
or
adc
inc
std
out
inc
std
push
js
clc
and
adc
mov
daa
cmp
mov
int
popf
and
mov
push
fisttpll
add
cld
imul
cmp
fs
adcb
shlb
aaa
js
lea
mov
xchg
adc
fnstcw
cli
les
js
insb
repz
out
or
cmpl
add
mov
pop
in
mov
cmp
into
addl
sbb
pop
ficoml
int3
add
stc
pushfw
mov
lea
sbb
mov
pop
or
clc
jns
cli
popa
cmp
xchg
or
inc
std
insl
mov
adc
aas
je
pop
cmpsl
jl
in
or
mov
sbb
sub
cmp
stc
loope
addb
data16
and
cmpl
lods
fsubrs
mov
add
lods
sahf
fstl
dec
stc
pop
add
sub
or
push
out
aad
or
add
test
stc
test
lret
lea
test
and
lea
roll
mov
daa
addl
stos
loopne
daa
lock
sti
cmp
jl
lock
push
rcll
push
xchg
inc
call
jle
xchg
push
push
daa
or
mov
mov
ret
or
mov
imul
adc
or
in
mov
test
test
mov
jo
subl
inc
pop
out
inc
mov
icebp
push
clc
outsb
movsl
pop
pushf
stc
imul
call
lock
je
ret
fwait
push
clc
ljmp
and
mov
mov
xlat
mov
imul
sbb
test
sub
mov
and
addr16
pop
inc
mov
sbb
mov
pop
pop
add
xor
in
sub
test
pusha
dec
jb
out
pop
std
cmp
jo
mov
popa
adc
xchg
and
sub
jmp
sbb
in
pop
pusha
popf
cmpsl
les
std
enter
adc
xor
enter
pop
decb
adc
adc
ja
sahf
cld
cmpsb
in
xchg
sbb
pop
std
fsubr
push
dec
inc
push
push
movsb
push
loopnew
jb
cmp
daa
push
jbe
in
out
sub
setle
add
popf
cmp
or
xchg
std
jae
nop
inc
test
sbb
mov
pop
scas
cmp
mov
add
outsl
jnp
orb
adc
shlb
sub
lock
and
ret
xchg
cli
pop
imul
fcompl
push
inc
std
or
xor
dec
roll
sbb
imul
scas
jo
push
pop
cld
or
or
stc
cmp
cmp
ret
mov
icebp
ret
push
call
out
lret
sbbb
sub
sub
sub
jge
pop
das
addr16
daa
lock
fsubs
ud1
and
mov
cmp
xor
mov
mov
stc
push
dec
xor
js
and
sub
xchg
inc
pop
in
aas
hlt
cmp
xchg
mov
arpl
inc
cld
outsl
mov
leave
sub
jle
sub
mov
inc
xchg
push
inc
adc
mov
cli
cmpsl
add
xchg
in
cmp
inc
push
test
lahf
std
lret
dec
adc
dec
cld
int
add
cld
jns
fs
in
les
mov
daa
hlt
incb
imulb
shlb
mov
dec
adc
dec
mov
xor
inc
or
lret
enter
push
mov
adc
jno
dec
lods
in
lock
push
mov
jge
test
jmp
clc
es
and
es
lea
hlt
hlt
or
mov
adc
and
push
xchg
add
sub
or
pop
mov
ljmp
lcall
mov
js
imul
pushf
mov
xchg
and
inc
dec
in
aad
dec
or
add
and
stos
jnp
addl
inc
sbb
xorl
push
or
cmc
lods
xchg
or
pop
pop
mov
add
sbbl
jle
pop
cs
outsb
mov
jb
or
lea
push
and
mov
rcll
stos
jno
ja
mov
jno
insb
mov
push
add
push
lock
rcll
pop
dec
cmpsl
sbb
mov
lret
std
inc
mov
xchg
lret
and
pushf
mov
or
push
dec
lds
ret
or
xchg
xchg
movb
adc
incl
xchg
sbb
sbb
dec
sbb
roll
cmp
push
test
testb
mov
pop
pop
aas
cltd
mov
jb
flds
iret
push
xchg
stos
insb
data16
nop
repnz
add
nop
stos
sbb
mov
ljmp
push
sub
rcrl
and
inc
mov
pop
shlb
push
gs
iret
inc
nop
call
pop
rcll
movsl
in
push
jne
gs
xchg
sub
pop
lds
das
mov
mov
or
mov
dec
push
mov
loope
sahf
dec
lea
or
ss
lock
cmpl
outsb
mov
inc
in
insb
jmp
sub
test
pop
dec
sub
pop
push
inc
addr16
push
in
dec
cmp
lds
adc
pop
mov
adc
push
adc
inc
or
or
xchg
lcall
cltd
call
js
push
jb
or
test
jne
mov
test
out
movb
push
adc
ss
mov
jb
sti
stc
adc
flds
sub
in
hlt
js
insl
adc
outsl
adc
lds
inc
ja
and
mov
shrl
push
sbb
cmp
pop
sub
pusha
pop
mov
mov
cltd
dec
or
test
cmpl
cmpsb
push
pop
ret
int
icebp
orl
inc
sbb
test
sbb
and
cmpsb
enter
mov
imul
pop
xchg
jbe
or
scas
adc
icebp
in
loope
popf
lea
fadds
leave
mov
in
aas
and
cmpsb
aas
add
push
loope
push
push
xchg
cwtl
sbb
cmpsb
xor
push
inc
mov
mov
popl
loopne
loope
aaa
movsb
std
xchg
mov
or
cmp
movsb
loop
int
cmpl
mov
adc
inc
add
add
js
mov
jae
mov
add
add
aaa
mov
sub
nop
or
xchg
imul
push
incl
mov
mov
test
lret
lea
jnp
movsl
jecxz
aam
sbbb
iret
jnp
inc
sub
jl
jl
push
mov
cmp
add
test
ror
out
repnz
push
lods
pusha
pop
rolb
mov
push
mov
cs
xchg
test
xor
adc
sbb
push
mov
push
test
test
inc
add
jmp
cmpsl
lcall
pop
sub
or
mov
mov
push
push
and
jo
mov
movsb
adc
sbb
sub
adc
dec
shl
bound
int3
subl
jae
dec
inc
or
inc
push
push
sbb
and
icebp
inc
push
test
adc
jae
imul
iret
add
inc
mov
sub
adc
in
adc
xchg
push
shll
pop
data16
push
lock
mov
test
popa
inc
inc
and
dec
or
in
adc
and
lret
xchg
test
inc
sbb
add
divl
inc
stc
movsl
flds
cmpsl
bound
and
xchg
or
pop
add
push
in
mov
xor
push
xchg
mov
fldcw
fs
cs
push
xchg
push
pop
cmp
in
mov
rcll
push
mov
xor
mov
push
js
imul
mov
xchg
xchg
and
push
push
imul
dec
xchg
gs
hlt
push
outsl
jecxz
mov
mov
lea
cmp
mov
jecxz
test
adc
inc
or
xchg
push
xchg
xchg
and
pop
push
in
and
in
mov
jmp
mov
mov
add
ja
dec
cmp
xchg
cs
aas
dec
xor
test
inc
push
pop
lea
jmp
and
or
bound
add
adc
lods
stos
mul
scas
xchg
sub
stc
rcll
and
sub
ljmp
add
mov
push
cld
add
cmpsb
sbb
dec
jp
dec
push
mov
in
movsb
mov
jb
fstps
leave
jecxz
jo
jo
lret
jle
repz
jb
sbb
stos
jmp
sbb
add
dec
pushl
xor
mov
push
dec
sub
pop
repnz
lock
cmp
xor
inc
jmp
jmp
cmp
inc
mov
in
or
push
mov
in
enter
test
inc
add
in
movsl
lcall
dec
daa
push
popf
adc
hlt
xlat
lea
ja
xor
push
or
cmp
pop
xchg
pop
xor
ret
sbb
rorb
push
or
inc
lahf
ds
or
xor
pop
pop
or
cmp
loop
adc
cmp
inc
imul
call
outsb
inc
add
adc
sbb
enter
sbb
mov
xchg
cmpsb
inc
in
push
es
ret
jmp
enter
lahf
ret
adc
cmpsb
fnsave
test
nop
std
sbb
inc
push
out
sbb
and
cmp
xchg
lods
jl
adc
cld
std
cmp
cmp
cmp
sbb
adc
dec
orb
adc
xlat
in
xorl
push
out
inc
sub
clc
in
push
lahf
rclb
loop
test
inc
jecxz
lock
sub
inc
clc
inc
leave
or
adc
cmpsb
inc
pop
push
inc
lods
stos
xor
dec
xor
or
mov
rorl
dec
xor
push
mov
pop
adc
call
fcomps
xchg
dec
dec
shr
mov
cmp
pushaw
jb
sub
or
mov
test
lea
lea
xchg
xchg
mov
jnp
and
and
xchg
stos
mov
jmp
insb
movzbl
test
je
dec
popa
test
push
jno
mov
or
add
mov
loope
sub
shlb
and
in
push
mov
push
lds
or
push
pop
push
push
inc
pusha
push
aas
sub
inc
push
out
jg
enter
js
add
add
push
or
shlb
cld
test
cmp
js
rolb
or
push
cmp
push
lock
fildl
sti
lock
adcb
in
dec
fstpt
adc
movsb
clc
pusha
dec
push
mov
push
push
mov
push
push
inc
shrl
mov
int3
in
push
outsl
addr16
mov
cmp
xor
insb
xchg
dec
push
cmp
ss
in
jge
sub
sub
sbb
rorb
push
and
dec
add
in
ds
hlt
es
in
cld
jle
scas
shl
mov
int3
aas
cmpl
fcomps
add
add
add
dec
subl
call
call
jp
mov
in
mov
lahf
dec
xor
push
or
cmpl
mov
adc
pusha
dec
loopne
sub
adc
jg
fwait
xor
or
jo
in
jo
clc
cwtl
jmp
jae
inc
imul
or
push
les
les
fsubrl
mov
in
in
pushf
mov
xchg
idiv
shl
jmp
or
xchg
and
mov
sub
aas
sbbl
hlt
xchg
bound
mov
and
bsf
pop
push
es
sub
ds
push
mov
cmpl
adc
repnz
mov
aam
mov
rcl
dec
jo
jmp
vpsubsw
jae
outsb
mov
and
call
add
adc
add
insb
inc
int3
xor
shr
cmp
fcomip
inc
jp
rclb
cmp
lcall
sbb
inc
add
adc
ficoml
int3
or
in
mov
jmp
push
hlt
and
adc
ficomps
adc
push
push
mov
push
sbb
jg
or
adc
aam
or
mov
mov
add
shr
and
jl
inc
add
aam
or
jmp
rcrl
cmpsb
or
add
sub
push
xchg
inc
mov
lock
push
xor
sub
push
sahf
aad
pop
push
fisttpll
add
rclb
pop
mov
sub
cmp
repz
sub
mov
adc
je
sti
push
aaa
or
call
addb
scas
and
sub
cltd
xchg
cmpsb
shl
cld
fdivrl
push
sbb
aas
sub
lret
mov
add
out
rorl
pushf
in
mov
jae
clc
and
sub
out
or
hlt
shll
jae
push
lock
adc
add
cmpsb
or
and
mov
jecxz
cmp
jne
cmpb
pop
sub
insl
imul
loop
add
andl
push
call
js
or
or
fs
push
imul
cmp
cmp
scas
popf
fidivs
in
clc
sbb
mov
pop
sub
iret
dec
aam
xor
leave
mov
leave
adc
or
sbb
ss
call
lods
addr16
xchg
push
cmp
push
bound
jno
popf
adc
mov
adc
xchg
or
mov
jne
mov
sub
ficompl
aaa
std
mov
das
ss
inc
loopne
push
push
push
sbb
or
es
xchg
adc
push
pop
fbstp
adc
stos
mov
aam
and
es
or
rcll
jnp
mov
fmull
loopne
pop
push
xchg
adc
out
popl
push
push
sti
lods
or
in
icebp
xor
mov
pop
fs
mov
xor
or
in
or
inc
enter
dec
loopne
lock
test
pusha
xor
popf
pop
pop
loop
pop
xchg
test
mov
xor
mov
idiv
add
leave
mov
popa
pop
mov
xchg
push
add
mov
sbb
pop
lea
sbb
jnp
lea
jo
lea
mov
push
icebp
add
xor
add
sbb
pop
popa
adc
or
jge
push
push
or
mov
addr16
push
inc
sub
inc
cmpsl
cmp
lcall
fldcw
xchg
sub
repz
loopne
inc
jne
push
push
cmp
test
xor
inc
cltd
lahf
rorl
negb
adc
js
adc
je
or
xor
jne
nop
cmpsl
push
inc
icebp
inc
xchg
lea
push
sbb
lds
jecxz
mov
pusha
push
mov
add
ret
js
je
and
das
adc
jne
xor
and
jo
xchg
aad
in
and
lea
push
addl
out
bound
lea
bound
aas
pop
lods
inc
mov
lea
mov
inc
cmp
repnz
mov
call
jo
xor
xor
mov
sbb
dec
inc
mov
fbstp
push
pop
push
add
xchg
hlt
lcall
fdivrs
or
cmpl
aas
jne
push
adcl
add
or
mov
add
mov
adc
push
mov
loop
rorb
aam
addr16
sub
rorb
lcall
mov
push
inc
testl
jecxz
shlb
loop
inc
movsb
add
jge
add
xor
push
xchg
mov
cmp
xchg
push
sbb
mov
cmp
int3
add
scas
push
sub
outsl
aas
sbb
or
sti
ja
mov
cmpl
jb
and
pop
ret
clc
fs
cmpl
jbe
das
mov
jg
hlt
mov
mov
adc
out
or
insb
pusha
cmpsw
stc
cs
dec
sbb
xor
das
icebp
movl
les
mov
js
and
shrb
shlb
pushf
in
dec
or
push
out
mov
or
mov
push
mov
inc
sbb
fsubr
or
test
je
movsb
mov
mov
cwtl
dec
mov
ret
pop
scas
dec
jae
sub
push
jne
jl
cmp
pop
sbb
xchg
dec
adc
mov
jbe
jbe
inc
repnz
fs
cmp
jae
dec
int
add
aam
mov
sbb
push
lahf
out
pop
sbb
sete
xchg
lret
mov
mov
mov
imul
sbb
mov
mov
pop
icebp
mov
mov
mov
lcall
outsb
rol
addr16
xor
std
lock
fdivrl
and
cmpsb
fcomps
lods
lods
add
lcall
bndstx
jb
fs
test
movsb
fnstcw
movsl
test
movsb
push
es
jne
testl
or
add
fwait
cmp
mov
mov
sbb
mov
mov
add
fldcw
orl
mov
mov
push
insl
adc
insb
or
cmp
insb
mov
lret
adc
mov
push
ficomps
fs
fildll
mov
cmp
sbbb
lock
insb
sub
sbb
test
pop
cld
sbb
arpl
mov
xor
or
dec
mov
sbb
mov
mov
fldenv
xor
mov
inc
sahf
dec
scas
test
xor
lret
mov
xchg
push
mov
hlt
mov
sbb
inc
lock
push
in
sub
imul
sbb
data16
sub
mov
loopne
loopne
pop
sub
in
mov
popf
mov
sbb
gs
dec
cmpsl
xor
push
and
add
pop
xchg
lock
std
jmp
rcll
jmp
imul
mov
jb
in
pop
xor
inc
mov
clc
clc
add
mov
sbb
ret
mov
push
scas
dec
push
add
and
mov
or
jo
lea
loopne
jae
push
loopne
pmaxsw
leave
sub
out
lods
or
cwtl
or
jae
ja,pn
xlat
lock
shlb
push
aam
xorl
aam
movsb
loopne
add
cmp
jne
call
loopne
push
pop
sub
shrb
out
or
rcrb
shl
icebp
add
jg
enter
xor
adc
xor
outsb
andb
clc
ret
out
adc
push
enter
sub
or
adc
push
fs
outsb
xchg
xchg
enter
sbb
les
pop
enter
es
add
and
rcrb
cmpsb
jmp
adc
in
in
rcl
iret
enter
sbb
enter
xchg
dec
jae
mov
aaa
sub
loopne
xchg
mov
and
ss
ret
sub
push
andb
and
jl
cmc
xchg
inc
cmpsl
or
call
dec
pop
in
mov
jae
xchg
pushf
mov
cmp
pop
div
sub
addr16
lcall
shll
fcomps
fisubl
lock
mov
insl
hlt
adc
in
fdivl
dec
mov
sub
mulb
test
fucomip
mov
sub
enter
push
inc
jl
fmuls
add
mov
jge
add
cmc
adc
test
push
mov
adc
push
adc
push
stc
add
lods
add
inc
sub
lods
and
adc
loope
das
mov
jae
pop
sbb
arpl
jmp
outsb
test
test
arpl
adc
inc
adc
cmpsb
in
add
inc
adc
xor
adc
mov
mov
rorl
ret
sub
data16
aad
popa
sbb
add
mov
push
mov
cld
clc
sbb
sbb
clc
in
dec
shll
jle
cld
hlt
mov
mov
loopne
cmc
ja
insl
add
add
das
sub
fists
adc
sub
cmp
adc
mov
test
or
mov
fsub
add
clc
add
ja
or
lea
addr16
adc
push
mov
movl
je
repz
fisttpl
inc
lock
fs
test
push
pop
lahf
or
je
outsb
sub
int
fisttps
dec
or
lock
lods
ficompl
mov
mov
jg
hlt
inc
adc
daa
inc
ds
clc
in
orb
cmp
jo
stc
fs
adc
repnz
jge
jmp
mov
shld
inc
pop
in
adc
cmp
pop
pusha
insb
jb
flds
data16
mov
cmpsl
loopne
dec
push
lea
or
cmp
adc
add
sbb
jb
mov
adc
sub
sub
adc
mov
jmp
jl
xor
sbbb
loopne
fmulp
push
push
pop
push
push
push
mov
pushf
pop
outsb
je
push
add
sbb
sbb
and
pop
lcall
dec
in
xchg
sti
call
adc
cwtl
pop
or
push
pop
inc
imul
pop
fistpl
push
jmp
xchg
inc
dec
movsl
test
fwait
nop
dec
ret
sub
js
rclb
std
xchg
insb
mov
xchg
nop
cwtl
jb
sbb
xor
repz
pusha
lods
xor
inc
adcb
push
mov
jns
mov
enter
mov
mov
hlt
sbb
xchg
mov
adc
xlat
nop
pop
pushf
mov
mov
cmp
mov
mov
inc
push
push
pushf
inc
or
sub
fnsave
lea
add
jae
mov
xchg
mov
aam
push
stos
fimuls
nop
mov
pop
or
call
fdivrs
xlat
xchg
xchg
xchg
adc
or
shrb
adc
std
out
push
adc
inc
add
add
xchg
aam
cmp
xchg
add
xor
cmp
test
test
dec
sub
xor
push
push
cmpsl
sub
dec
shll
enter
mov
dec
adc
lcall
jg
xchg
scas
push
sub
jl
xchg
or
clc
cmp
mov
movsb
mov
outsl
push
pop
or
lds
inc
daa
or
cli
mov
mov
enter
lock
psubusb
stos
xor
or
stos
imul
sbb
mov
mov
pop
enter
adc
cld
xor
or
mov
std
mov
arpl
xchg
fildl
jne
roll
add
or
cmp
orl
mov
test
adc
dec
fwait
and
lret
push
mov
add
rorl
or
out
sub
push
enter
push
or
das
add
sub
imul
inc
adc
pop
loope
shl
add
js
test
aaa
mov
mov
nop
lods
cwtl
xchg
push
sub
xadd
lods
push
loopne
pushf
test
shl
push
aaa
cmp
dec
mov
cmp
dec
jbe
pusha
jae
push
pop
ret
jno
sub
mov
inc
jae
nop
fs
mov
push
mov
inc
and
push
fsubp
adc
jnp
lret
in
push
mov
add
pop
push
in
inc
nop
mov
test
sbb
rolb
xchg
xchg
add
ds
cmp
rol
dec
or
jno
and
or
cs
test
addb
test
push
push
add
add
mov
and
mov
xchg
add
test
std
outsb
cmp
pusha
mov
andb
jge
in
jp
pop
mov
in
sbb
mov
rclb
loop
and
jne
xlat
inc
andb
popf
add
test
xchg
sbb
ret
mov
or
push
popa
inc
or
mov
pop
dec
popa
scas
pop
mov
mov
jge
mov
das
mov
push
and
jl
test
addr16
cmp
lea
es
pop
xchg
pop
enter
mov
sbb
mov
cld
cmp
pop
mov
xor
mov
jnp
mov
xchg
sbb
or
mov
sbb
add
gs
les
ja
xchg
fs
xchg
and
std
sub
xchg
push
loop
outsl
cmp
js
les
dec
adcb
addb
dec
xchg
mov
pusha
xlat
mov
jb
xchg
xchg
adc
mov
adc
xchg
mov
xlat
call
xchg
mov
or
mov
inc
dec
addr16
clc
inc
or
std
sub
loop
je
test
shrb
adc
inc
int3
aam
subb
pop
insb
and
outsb
stos
adc
inc
cmp
sbb
je
adc
mov
pop
jns
out
mov
cmpsl
mov
add
mov
adc
push
test
push
sub
push
cmp
test
mov
adc
add
inc
dec
shl
std
insl
xor
or
pop
mov
jle
or
out
addr16
outsl
cmp
push
ja
mov
and
jl
pop
je
fisttpl
adc
or
inc
add
jl
arpl
jl
add
or
pop
sbbl
and
rcrl
js
lods
lcall
daa
xchg
lea
les
and
inc
adc
mov
push
adc
jl
adc
clc
aaa
shl
jne
mov
cmp
mov
xor
push
sbb
push
or
adc
push
mov
mov
xor
mov
inc
fcoms
push
bound
xorl
jbe
out
popf
or
and
enter
or
xchg
and
cmp
sti
mov
jmp
outsl
addb
jno
pop
pop
jg
insb
and
push
pop
cld
cmp
push
mov
arpl
addl
pop
lcall
mov
pop
mov
sahf
fistpll
and
lods
xchg
jo
insb
je
ret
ja
push
jg
in
push
dec
leave
lret
addl
and
xor
repnz
lcall
push
mov
adc
sbb
sbb
mov
sbb
rolb
push
push
jge
mov
pop
or
adc
add
in
lar
push
lcall
jmp
or
hlt
adc
push
add
xchg
mov
aas
inc
imul
icebp
jecxz
movsl
and
xchg
test
insb
sub
aad
jecxz
arpl
lods
mov
or
mov
xor
pop
mov
inc
sub
jmp
mov
pusha
push
cmpsl
push
imul
sub
repnz
lea
add
bswap
add
cmpsl
sub
or
sbb
movsb
jno
daa
mov
adcl
incb
cld
sbb
push
sub
or
jmp
dec
xchg
lret
shll
push
cmc
pop
jg
add
xchg
inc
pop
enter
pop
xchg
fwait
arpl
inc
idivb
in
push
mov
cs
pop
or
lds
mov
jne
jmp
lea
subb
jecxz
lahf
insb
add
xchg
inc
push
cmp
adc
push
enter
mov
inc
mov
loope
inc
subl
cmpsl
test
and
fs
push
mov
xor
ds
sub
mov
cmpsl
roll
test
or
xchg
je
xchg
mov
dec
sub
mov
arpl
add
je
jp
add
das
mov
test
and
shll
addr16
xor
xchg
cmpsb
add
shlb
roll
cmp
xchg
addb
jb
pop
and
pop
xor
adc
xchg
sub
bound
and
jle
mov
fiadds
inc
fdivs
inc
pop
ret
add
dec
push
ret
jns
xchg
inc
xor
fistpl
mov
pop
sub
andb
adc
cltd
adc
aaa
sbbb
adc
xchg
stos
or
mov
mov
out
insb
push
adc
add
fwait
pop
lahf
sub
jae
or
xor
and
mov
ret
pop
xchg
and
es
inc
push
push
add
mov
mov
push
xchg
test
mov
lods
aad
ljmp
xchg
scas
inc
xchg
sti
popa
and
test
xchg
addb
xor
mov
pop
or
movsb
cmp
jne
jecxz
adc
adc
lods
adcl
add
jns
aaa
mov
outsl
mov
adc
mov
bound
mov
jge
fs
inc
push
cwtl
inc
cwtl
and
push
int3
neg
sbb
jo
xor
xchg
filds
std
in
sbb
sub
mov
stc
xchg
mov
aas
add
add
addl
nop
arpl
and
and
pop
adc
imul
sub
enter
sbb
mov
outsb
inc
push
jb
jl
shlb
xchg
or
loope
fdivs
int3
pop
imul
sbb
jb
rorb
mov
mov
and
or
push
sub
and
add
xchg
sbb
addl
sbb
sbb
test
and
sbb
xchg
dec
push
test
add
mov
insb
jae
cmp
mov
sbb
pop
lret
cmp
vmovaps
pop
enter
sub
nop
in
sbb
or
test
or
add
fwait
push
mov
jae
or
pusha
and
subb
and
push
push
movsl
shrb
xor
mov
add
or
lods
aaa
imul
sbb
fs
pop
lds
xchg
insb
mov
push
es
popa
mov
and
mov
and
and
lahf
cmpl
out
add
jns
mov
lea
dec
add
lret
push
mov
add
sub
pop
gs
adc
fiaddl
xchg
jo
movsl
inc
cmpsl
sti
add
and
mov
loop
or
add
ret
stos
push
xchg
xchg
xlat
addr16
mov
push
dec
inc
mov
pop
sub
mov
push
mov
in
xchg
jne
push
push
inc
mov
pop
pop
lock
dec
pop
add
cmpl
ljmp
mov
or
adc
mov
inc
add
xor
int3
les
test
adc
shlb
add
arpl
push
lret
test
arpl
sbbb
jb
and
sub
push
dec
movsl
in
push
push
sub
mov
cltd
dec
mov
dec
imul
cmp
adc
xorl
dec
xor
je
push
mov
push
jo
cmc
jmp
sbb
shrl
mov
fwait
cmp
sbb
push
movsb
rolb
sub
subb
xchg
nop
sbb
add
and
sbb
jae
adc
mov
das
mov
cwtl
je
adc
add
jne
call
leave
test
xchg
imul
sbb
jb
push
adc
test
jmp
mov
jae
insb
js
cwtl
jns
cltd
sbb
in
sti
xchg
mov
push
imul
cmpsl
add
stos
push
sub
or
sbb
add
das
sub
loope
inc
sbb
cmp
cmp
rorb
loop
cmpb
int
cltd
cs
js
mov
add
sbb
rcrl
lods
rclb
pop
dec
js
cld
js
add
test
movsb
add
push
shlb
cwtl
lods
imull
imul
dec
dec
nop
mov
movsl
xchg
inc
test
mov
xchg
mov
mov
push
dec
js
pop
movsb
mov
xchg
fdivl
out
sbb
notb
and
push
adc
or
mov
sbb
or
and
sbb
push
add
push
or
enter
xor
jne
fidivrs
ret
cs
std
add
xchg
add
pop
test
jmp
xchg
imul
inc
xchg
pop
jp
dec
js
mov
xor
cmp
mov
mov
cmp
jb
xchg
divl
stc
pop
mov
movsl
and
mov
sahf
jmp
sub
or
sub
or
frstor
or
out
jno
lea
mov
gs
xor
fnstcw
or
push
lea
cltd
icebp
pop
and
or
mov
or
dec
test
lock
cmpsl
add
xor
jne
inc
dec
dec
pop
push
shlb
js
sbb
repnz
add
pop
sbb
cmpl
xor
push
pop
int3
add
mov
add
testb
mov
int
pop
mov
rcl
dec
or
pop
xor
or
dec
test
mov
aas
jg
jo
push
pop
cwtl
add
sbb
pop
rcll
cmp
adc
cmp
movsb
jo
adc
out
inc
or
adc
sahf
jno
jb
popf
lret
cmc
add
test
push
mov
xor
movsb
hlt
inc
pop
cmp
xchg
sub
fmuls
scas
sub
or
mul
dec
sub
push
sti
push
stos
pusha
push
jmp
repz
sbb
adcb
jno
add
jge
sti
mov
xor
mov
xor
push
movsl
mov
shrl
cmpsb
shrl
das
and
mov
roll
mov
inc
jno
daa
cltd
xor
mov
or
cmc
cmpsl
das
movsb
jb
in
lea
test
add
xchg
lret
lea
arpl
stos
dec
push
push
dec
roll
xor
insb
or
loop
into
and
dec
inc
xor
adc
inc
add
mov
sbb
lahf
test
xchg
test
out
adc
inc
mov
sbb
mov
xor
push
inc
fstpt
mov
jne
bound
test
movsb
mov
mov
push
or
add
mov
xor
xor
mov
test
sbbl
push
arpl
adcl
dec
cmpsb
outsb
loope
mov
inc
lods
xor
test
roll
test
imul
mov
mov
jo
pop
xchg
mov
xchg
xchg
out
mov
add
adc
mov
gs
push
sbb
test
adc
and
fistps
ret
push
or
inc
std
icebp
popa
gs
sbb
bndldx
push
or
test
pop
pop
rolb
nop
rcrb
mov
jg
adc
arpl
or
add
pop
adc
add
push
loopne
xorb
ret
or
cmp
or
dec
xor
mov
inc
int3
stc
xor
mov
mov
mov
adc
add
sbb
or
lahf
push
ds
add
xor
mov
insl
les
adc
pop
xchg
fiadds
fabs
rorl
mov
push
into
xor
sub
xor
mov
inc
pop
push
jmp
in
mov
pop
xchg
jns
movzbl
loope
cli
jmp
sub
cmpsl
fsincos
cmp
add
movsb
pushf
mov
jns
dec
shll
xor
xlat
sbb
push
loopne
or
or
xor
inc
lock
fchs
fisttpl
sub
or
stc
std
or
cmpl
je
or
je
add
push
xor
pusha
jmp
fs
dec
or
clc
mov
lds
inc
stos
inc
dec
enter
dec
rcrl
inc
mov
push
adc
int
or
cld
push
or
add
scas
pop
add
push
out
in
cli
inc
pushf
arpl
or
jne
adc
adc
cwtl
hlt
dec
aad
jge
dec
hlt
push
in
je
mov
lods
fistl
push
cmc
mov
add
pop
out
or
add
jmp
pop
dec
adc
push
mov
push
xor
xor
loop
mov
mov
add
testb
mov
cs
push
add
ljmp
in
push
mull
jne
mov
inc
pop
xchg
push
loopne
add
lea
fbstp
inc
xchg
pop
ss
data16
movsb
dec
pop
xchg
or
add
gs
test
pop
add
inc
test
pop
adc
pop
and
xchg
push
stos
mov
cmp
pop
and
data16
jge
pop
xchg
cmpsb
jl
or
lods
shrl
cmpsb
into
adc
or
nop
fs
cmpsl
bnd
pushf
shrb
out
adc
js
add
jb
push
xchg
xor
dec
adc
addr16
rclb
adc
adc
dec
shll
fdivr
call
add
test
jl
jmp
xchg
jl
mov
cmp
push
mov
pop
mov
imul
dec
addr16
jl
xor
arpl
repnz
jnp
xchg
mov
sbb
and
sbb
bound
in
and
sub
out
in
xchg
adc
lock
movl
push
lret
xchg
dec
aad
sbb
xchg
jg
in
pop
addl
fxch
mov
adc
sub
cmp
xchg
shl
sub
push
pop
cld
vmread
jo
loop
jns
sub
cmc
xor
pop
cmp
fcomps
pop
pop
lods
jno
pop
xchg
popf
data16
add
add
lock
int3
mov
inc
xor
gs
fisubl
rol
test
cwtl
ficompl
sub
fs
movsb
mov
gs
mov
dec
lret
daa
cmp
adc
lods
pushf
je
imul
callw
mov
or
in
xor
xor
nop
aas
push
loopne
test
xchg
stos
dec
ret
mov
push
les
je
or
mov
cmp
test
jl
mov
rclb
or
je
pushf
rolb
lcall
js
rorb
sub
add
pop
rolb
sub
in
cmp
xchg
mov
pop
subl
mov
out
xor
add
mov
adc
clc
and
shl
jb
xor
shll
loopne
sbb
popf
or
dec
push
sahf
xchg
stc
sbb
pushf
or
insb
mov
insb
aad
cltd
pushf
or
sbb
cwtl
daa
pop
xor
mov
dec
neg
sbb
or
shlb
pop
and
je
lods
adc
sbb
dec
adc
icebp
popf
ret
pop
and
loopne
rcl
popf
add
push
jl
add
sub
adc
clc
mov
jecxz
stos
stos
and
insl
cmp
shlb
pusha
xchg
pop
shll
pop
mov
out
sub
adc
test
or
mov
pushf
clc
ret
scas
movsb
in
arpl
arpl
cs
nop
int3
int3
sti
movsb
pushf
shlb
push
cmp
lock
popa
inc
sbb
or
lea
and
test
mov
adc
fsubs
inc
insl
sbb
movsb
enter
mov
mov
mov
jl
and
ds
push
or
setge
inc
test
add
adc
cwtl
loopne
push
iret
sub
or
pop
sarl
pop
fs
cwtl
mov
add
loopne
fs
mov
cmp
mov
les
jmp
mov
cli
add
loope
nop
cmpsl
mov
ds
jl
int3
xchg
jmp
push
nop
scas
mov
lcall
xchg
mov
xor
jnp
push
mov
lahf
mov
mov
mov
cli
xchg
inc
xchg
add
add
add
push
pop
or
adc
pop
in
fmuls
adc
or
or
add
adc
cli
dec
js
js
mov
pop
cmpsl
movb
or
fisttpll
sbb
jo
lret
mov
idivb
pushl
test
pop
test
jecxz
mov
nop
mov
and
mov
mov
movsb
xchg
jecxz
adc
test
and
ret
in
jecxz
and
sbb
popa
jmp
or
xchg
pop
mov
mov
or
inc
lea
and
mov
or
ja
jo
cld
cwtl
fidivrl
rcll
jge
lret
xor
pusha
leave
movsl
lret
fstpt
mov
push
dec
cltd
es
dec
jnp
cmp
jne
xor
xor
loope
cmpsl
jl
or
mov
sbb
cld
jmp
cs
ret
cmp
ja
stos
or
rorb
jne
push
in
mov
ret
sbb
pop
mov
push
scas
and
popf
or
mov
push
jmp
xchg
repnz
or
inc
pop
push
test
cmp
lahf
and
jmp
xorl
outsl
or
jmp
call
cli
add
mov
sti
inc
lock
or
jl
das
add
and
mulps
leave
and
cmp
xor
ljmp
cmp
sbb
in
repnz
iret
mov
xchg
je
je
push
sbb
add
pop
and
sbb
xchg
insl
xor
test
xchg
inc
inc
or
cld
add
cmp
imul
lock
push
and
nop
sub
inc
pushf
cmpsl
repnz
adc
push
bound
jo
cmp
je
inc
fiaddl
into
xor
cmpsl
or
jl
cs
andb
das
ret
scas
fcoml
dec
movsb
stos
push
xor
stos
jle
shll
mov
inc
mov
push
shll
and
push
stc
mov
loopne
adc
add
nop
mov
add
jbe
das
jmp
cs
mov
enter
insb
mov
out
movsl
lods
jne
sbb
setl
pop
repnz
push
je
sti
loop
jmp
push
mov
jle
cmp
lcall
cmp
push
adc
jge
cli
add
cmp
jne
roll
adc
jecxz
inc
or
cmpsl
inc
shrl
je
sbb
das
movswl
push
or
addb
inc
or
fistpll
sbb
int
clc
xchg
insb
ret
dec
and
adc
jl
es
adc
ficomps
jge
or
xor
loopne
pop
cld
push
cs
bound
xor
lahf
cmp
add
dec
jns
inc
int3
into
add
adc
mov
arpl
xchg
out
jne
jne
test
sbbl
sub
cltd
pusha
push
loop
jmp
rorb
cli
adc
inc
mov
xchg
sbb
or
push
aaa
test
mov
arpl
sbb
or
scas
mov
xchg
jae
inc
mov
push
cmpsb
loope
xchg
mov
shll
push
loop
je
out
daa
xchg
insl
or
cwtl
adc
sub
jg
adc
xchg
insb
pop
addb
jns
clc
popl
xchg
mov
or
lods
push
frstor
add
adc
push
lret
push
jmp
xchg
in
test
jmp
xor
or
fwait
in
ja
cmp
fwait
inc
add
negb
sbb
outsb
ljmp
add
add
add
popa
or
lods
div
mov
or
sub
adc
pop
push
mov
xchg
decb
jne
cmp
clc
add
dec
cmp
pop
call
sub
dec
clc
jmp
mov
insl
orl
shl
mov
or
fists
sarb
shr
mov
push
sub
lea
lret
xor
clc
add
inc
push
sub
insl
clc
push
dec
cmp
push
nop
push
stc
jbe
adc
cmp
fcomps
mov
aas
sub
fsubrl
in
sub
dec
push
jl
pop
pop
cmp
push
pop
jo
adc
pop
mov
mov
cmp
ja
cltd
aaa
adc
cmp
lcall
pop
push
in
popa
add
xchg
or
cli
movl
aaa
xchg
lahf
rolb
ficomps
scas
lock
mov
or
cmp
insl
jmp
stc
sbb
hlt
mov
clc
hlt
hlt
and
iret
sub
cmp
push
mov
aas
insb
cmpb
cmp
and
shrl
shrb
adc
sub
shll
mov
cwtl
orl
lret
pop
cwtl
sub
cmp
fcoml
ds
xchg
roll
push
mov
push
and
in
filds
add
jns
inc
lock
jle
push
in
mov
jmp
shrl
icebp
hlt
cmp
icebp
inc
mov
sbb
sbbl
out
inc
xchg
aaa
cmp
stc
mov
inc
hlt
push
push
jo
mov
popa
pop
gs
negb
sbb
jmp
aaa
sbb
adc
rcll
shrb
ret
aaa
and
clc
jne
add
sbb
aad
lret
and
sbb
andl
sbb
push
clc
and
int
or
je
mov
enter
sbb
sub
jne
cmpsb
jmp
sarl
push
dec
mov
or
xor
jmp
or
xchg
xor
adc
aas
ficoms
adc
jmp
fidivs
dec
test
jge
shrb
sub
in
sbb
in
clc
cltd
add
das
sub
jnp
fwait
add
pop
push
adc
call
push
popa
pusha
xchg
xchg
imul
testl
pop
add
push
xchg
je
add
fists
and
les
or
add
sar
inc
testl
mov
xchg
test
xchg
adc
lahf
lods
ror
xchg
jne
pop
mov
xchg
mov
loope
mov
jecxz
pusha
icebp
jbe
xchg
mov
bound
shll
adcl
int3
enter
sub
filds
mov
push
aaa
cld
ljmp
mov
push
sbb
mov
pop
test
out
cwtl
mov
fcoms
pusha
das
or
dec
call
fdivrl
test
aas
push
or
call
push
mov
adc
cmp
imul
mov
adc
popa
mov
dec
and
fdiv
cmp
jne
scas
aam
add
gs
push
jecxz
add
inc
sub
or
mov
xor
or
pop
or
cmpl
pop
pop
ret
or
cmp
ret
push
sarb
adc
push
xchg
push
leave
test
xchg
sti
and
mov
or
jnp
xor
cltd
popa
rclb
cmp
dec
mov
push
mov
aas
or
mov
mov
adc
mov
add
adc
test
fiadds
and
imul
nop
and
or
pop
mov
fwait
push
inc
sub
cmp
inc
sub
icebp
clc
hlt
pop
mov
cmp
pusha
punpckldq
sbb
mov
ret
inc
add
in
ret
mov
push
push
or
shrb
xchg
sbb
pop
and
and
mov
ljmp
mov
xor
ret
or
or
repz
call
add
cmp
adc
add
push
xchg
add
mov
mov
dec
mov
fbld
lock
clc
or
jo
cld
mov
pop
mov
xchg
fldl
add
or
arpl
dec
scas
pushf
cmp
movl
fs
push
lea
in
hlt
je
add
std
imul
inc
in
shrb
pop
ds
icebp
fiadds
movsb
inc
lods
mov
test
push
bound
cld
xchg
add
pop
scas
test
mov
dec
test
push
movb
cmp
add
adc
mov
push
pop
insl
push
sub
push
jnp
mov
orb
sbb
movsl
mov
inc
pop
sbb
inc
inc
inc
push
add
mov
mov
or
sub
sub
inc
imul
cmp
out
cmc
inc
pop
stc
or
and
mov
dec
pop
dec
sbb
sbb
dec
xor
push
pop
inc
and
xor
or
or
std
dec
adc
push
loope
add
lea
repz
or
jle
hlt
out
sbb
shlb
mov
das
push
pop
pop
pop
clc
ret
lds
xchg
mov
add
xor
lods
xchg
mov
mov
out
push
cmp
add
gs
push
movsl
xor
shrb
and
add
mov
jmp
inc
addl
jecxz
cmp
xor
sub
daa
cmp
cmp
jb
mov
add
and
out
lock
fdivrs
enter
dec
mov
mov
mov
orb
sahf
fdivl
adc
jb
or
inc
mov
add
lods
add
int3
mov
popf
jne
sti
adc
in
mov
test
mov
and
mov
and
sub
pusha
push
mov
loope
pop
fs
pushf
cmp
inc
dec
mov
adc
jbe
loopne
das
clc
jne
popf
fsubl
xor
pop
addr16
dec
push
fmul
add
fcmovb
xchg
add
add
shlb
pop
in
sub
in
push
xor
add
mov
sub
cli
adc
add
inc
xlat
push
pop
or
loopne
sbb
les
inc
test
inc
sub
or
aaa
adc
pusha
fstl
sti
mov
cltd
add
enter
loopne
jl
lock
movl
stos
xchg
stos
push
jnp
cmp
xor
movsl
xor
xchg
sub
inc
adc
sbb
add
in
xchg
repnz
enter
add
std
push
cs
pop
push
adc
fwait
xchg
add
adc
shl
inc
comiss
mov
mov
pusha
and
rcl
mov
ja
and
lods
lret
mov
and
adc
repnz
or
jnp
sub
adcb
add
mov
shr
pusha
pop
push
lea
cltd
add
add
in
lret
daa
add
push
lret
add
imul
sar
fcmovnbe
stc
jmp
lea
cmc
add
test
sbb
jmp
push
xor
ret
loopne
loopne
addb
jae
cld
jo
sbb
or
mov
jae
les
or
mov
jno
adc
decl
cmpsb
and
jecxz
fsts
sti
shr
push
sbb
mov
inc
loopne
test
or
xor
add
pop
cmp
cli
mov
cli
mov
add
shrb
add
popf
subl
mov
mov
cmp
push
mov
inc
ljmp
xchg
push
mov
jmp
jge
insb
adc
loopne
insb
push
and
and
sub
jne
shlb
dec
xlat
push
jbe
in
js
int
mov
push
loope
lds
mov
clc
push
or
push
pop
cmpsb
dec
cmpsb
shr
fsub
xor
and
or
dec
in
nop
popl
cmc
repnz
ret
mov
fwait
mov
shlb
aam
push
push
mov
insl
xor
jmp
sub
xor
xor
rcr
jno
push
out
pop
xchg
arpl
dec
jne
add
adcb
mov
inc
fcoms
push
fildl
inc
xchg
jne
roll
add
jmp
cmp
shl
inc
cmp
push
adc
push
xchg
test
loope
dec
pop
cmp
and
or
enter
push
imul
rcll
aam
mov
adc
sbb
ret
add
pop
fimull
jb
neg
cmp
xor
cmp
daa
or
xor
mov
push
fwait
xchg
loope
xor
mov
fcoms
cmpsb
push
scas
add
les
clc
jne,pn
xchg
jl
aas
daa
dec
jne
dec
jne
push
jb
sub
jo
aaa
pop
lcall
jp
xor
adc
lods
sub
jge
xchg
popa
loopne
mov
jl
std
sbb
dec
cmp
mov
cmp
jmp
add
pop
push
mov
add
les
or
inc
add
lahf
pop
push
movsb
push
imul
inc
movsl
lods
aas
lret
cwtl
mov
bound
sub
xchg
cmp
push
sub
call
mov
lea
fdivl
pop
aad
mov
mov
add
inc
or
mov
push
or
push
hlt
or
mov
push
add
cmpsl
roll
add
insb
adc
jecxz
lcall
sub
pop
out
andl
popl
cmp
sti
fsubrs
or
pop
imul
mov
or
mov
cmp
and
out
lea
lret
cmc
stc
std
and
pop
je
cmp
insb
int
cmp
insb
jbe
mov
rcrb
hlt
jmp
cs
movl
sahf
xchg
jmp
xchg
mov
and
or
xor
jo
push
add
in
jge
inc
call
mov
adc
pop
aad
adc
in
mov
popa
jb
fnstcw
jmp
and
movsb
sub
sbb
jmp
add
sbb
pop
bound
push
ds
push
cmp
dec
push
xlat
pop
sub
add
ds
inc
rcll
push
shrb
sbb
pop
lea
push
lea
in
mov
sbb
addb
sub
add
rol
fnstcw
bound
sbb
sbb
loopne
movsl
rcr
xchg
push
fiadds
movsl
add
sbb
adc
mov
fadds
int3
adcb
hlt
add
mov
push
mov
das
or
mov
sub
push
ret
dec
stc
push
inc
nop
cs
push
fbstp
xchg
pusha
xor
mov
xchg
xchg
mov
movsb
cwtl
mov
cltd
fcomps
clc
fwait
mov
fstps
xor
inc
ss
dec
dec
xor
lea
push
dec
js
scas
or
push
fdivl
mov
mov
mov
inc
in
leave
push
fsub
nop
push
pop
adc
fs
xchg
inc
sarb
xor
adc
sbb
rcrl
cmp
xchg
cmp
xor
or
movsb
nop
dec
dec
in
mov
add
sub
cmp
cwtl
mov
sub
inc
sub
pop
mov
insb
push
xchg
jne
pop
pop
xchg
test
push
or
aad
roll
mov
test
cmp
scas
sbb
adc
ss
xor
test
xor
nop
fs
jo
lods
pushf
cmp
pop
sarb
mov
sahf
dec
xor
xchg
dec
scas
mov
xchg
lcall
mov
fs
cltd
mov
test
mov
inc
cmp
push
popa
or
or
xor
or
les
push
or
jo
push
pop
xor
jae
cs
push
mov
outsb
push
adc
jge
mov
enter
and
into
adc
or
sub
and
imul
adc
push
repnz
sub
push
in
test
sub
dec
cmp
ret
xor
xor
nop
inc
inc
dec
nop
dec
imul
pop
or
or
movsl
scas
cmp
test
ja
xor
jecxz
xchg
add
pushf
shl
add
inc
jg
push
adc
cmpl
stos
xchg
or
popa
add
jbe
mov
jmp
cmp
pop
js
fimuls
adcl
add
add
pusha
mov
fldl
xchg
outsl
hlt
adc
xor
or
mov
aam
xchg
jns
dec
in
test
or
arpl
jg
ret
push
adc
pop
sti
cld
shl
push
test
addb
cmp
or
or
mov
and
ds
lock
ret
insb
inc
sub
mov
inc
push
cmp
jl
rcll
sub
hlt
mov
out
jmp
jae
lcall
loop
xor
sbb
shll
mov
ret
in
adc
fdivl
cmp
shr
jb
dec
rcrl
inc
rcll
shrb
mov
jae
gs
adc
push
aas
mov
jnp
cmp
cld
push
pop
rcrl
popa
cld
cmp
mov
inc
mov
les
sub
jmp
sti
clc
mov
mov
shrl
mov
js
imull
and
sub
loopne
loopne,pt
and
inc
js
xor
or
les
in
or
pusha
adc
mov
clc
xor
mov
jle
movl
mov
daa
xor
or
fsubrl
fisttpll
rorb
fcmovbe
xchg
jmp
nop
std
xor
test
shl
mov
or
or
sub
scas
jge
inc
or
test
jne
jno
and
inc
cmp
je
or
push
mov
xor
mov
mov
xchg
push
leave
push
clc
arpl
push
jne
push
add
jmp
mov
lahf
jmp
dec
movsb
js
pusha
shr
ljmp
ss
add
dec
sbb
xor
jne
mov
push
sbb
push
jg
sbb
and
je
cmpl
je
shrb
punpckhbw
in
xorl
xchg
mov
clc
inc
mov
add
mov
xchg
inc
push
inc
cltd
cmp
clc
call
pop
xor
pop
ja
xor
pop
adc
pop
lods
jge
add
pop
adc
add
xchg
dec
and
pop
mov
cltd
insb
imul
cmp
jge
mov
push
popa
in
cmpsl
jmp
je
pop
xor
scas
daa
and
dec
sbb
jnp
xor
hlt
lea
cmpsl
push
mov
es
movsb
insb
cs
add
stc
addr16
xchg
shld
jge
jns
xor
int3
mov
dec
dec
je
jmp
nop
xchg
stos
test
jge
or
jecxz
push
xor
shl
fxch
xor
xchg
xor
jmp
int
jmp
push
pop
aas
add
or
add
push
and
add
add
add
test
pop
ja
mov
cmp
lock
add
mov
push
inc
inc
push
sbb
inc
xchg
jb
jl
inc
inc
add
test
loopne
jg
call
mov
mov
push
mov
hlt
clc
mov
xor
cmpsl
lods
shlb
les
push
aas
sarb
das
arpl
cmp
sub
and
pushf
mov
xor
out
adc
imul
pop
test
in
adc
adc
sbb
repz
pop
cmpsl
add
dec
in
int3
ljmp
xor
xor
push
jmp
sti
mov
add
xlat
pop
mov
or
push
dec
push
dec
into
arpl
jae
mov
inc
xor
dec
sahf
nop
sub
inc
push
cmp
lods
pop
or
cmp
dec
aam
lock
sub
int3
ret
test
add
dec
adc
or
aaa
mov
call
lsl
and
lea
vminps
sbb
cltd
movsb
cmp
int3
mov
pop
mov
push
fadd
add
ja
js
lock
xor
add
or
mov
cld
cld
inc
mov
push
dec
inc
dec
lods
xchg
cmpsb
sbb
push
inc
and
xlat
imul
test
and
mov
xor
push
mov
mov
cld
clc
flds
mov
int
aas
sub
inc
movsl
mov
sbb
add
pusha
xor
loopne
or
mov
add
hlt
xorl
or
push
popa
mov
test
push
lods
mov
mov
inc
cmp
int3
dec
nop
sbb
mov
pop
adc
test
lahf
ret
or
dec
dec
out
pusha
ret
ret
mov
pop
mov
sbb
jl
js
lds
ret
mov
lods
rcrl
jl
and
adc
push
sub
adc
adc
inc
icebp
mov
add
mov
test
test
add
xchg
movsl
cltd
pop
mov
and
xchg
push
add
mov
dec
imul
push
fisubl
push
push
jno
inc
in
and
rcl
xchg
adc
addb
insl
sub
lock
les
pop
cs
je
lret
in
fsub
xor
mov
lret
mov
adc
jo
shlb
mov
push
sub
loopne
bswap
and
jo
popa
in
add
mov
push
add
sbb
add
dec
dec
out
push
cmp
sbb
movaps
pop
test
arpl
out
add
std
outsb
xor
movl
sub
fsubs
inc
or
cltd
inc
shlb
or
push
cmp
cltd
lret
cmp
cmp
mov
adc
mov
and
sub
lahf
sarb
push
jecxz
pusha
or
or
lea
popa
test
cmp
or
inc
inc
mov
jmp
jecxz
ljmp
mov
adc
xchg
pop
cmp
jo
lret
loopne
dec
mov
sbb
add
outsl
adc
jecxz
ret
pushf
mov
jmp
aaa
clc
mov
shr
xor
mov
xor
mov
push
lods
test
jb
or
hlt
sub
xor
mov
inc
scas
je
or
pop
jb
cmp
push
mov
cmpsb
mov
cld
or
push
test
sbb
or
jne
stos
fnsave
adc
fdivs
clc
mov
hlt
pop
mov
stc
or
push
js
and
cmp
int3
pop
shlb
and
or
sub
xor
adc
mov
or
out
insl
movsb
push
ret
loopne
sub
int3
test
addr16
shlb
wbinvd
mov
mov
mov
mov
push
in
lods
cmpsb
mov
xchg
push
pop
test
adcl
sub
inc
pop
shl
or
loop,pn
ret
or
je
mov
shll
js
bound
push
adc
cmp
sub
adc
popf
test
push
es
cmp
add
sti
clc
imul
add
mov
or
fcompl
cmp
jbe
jne
pop
repnz
pop
xchg
push
enter
push
jns
jmp
out
les
in
mov
mov
test
push
mov
inc
movsb
sub
sar
push
jecxz
xor
or
push
rorl
enter
int3
call
mov
addl
add
bound
adc
dec
and
test
imul
movsl
add
int
and
push
hlt
lea
inc
adc
nop
les
mov
add
bound
sbb
data16
dec
and
loopne
cmp
ret
fnstenv
push
mov
adc
push
in
out
push
push
mov
cmp
inc
or
adc
mov
arpl
cmp
hlt
and
out
pop
iret
lcall
in
lahf
xor
xchg
and
inc
ret
movsb
jecxz
xchg
call
mov
mov
sub
lea
aad
push
push
xchg
outsb
popf
rcl
loop
std
sahf
push
loopne
xor
add
xor
lds
adc
je
enter
test
lret
jecxz
in
and
sub
push
push
dec
xchg
jl
mov
pop
test
dec
sbb
push
cmp
cmpsl
lods
or
xor
sub
xor
xor
or
in
xor
shlb
dec
cmp
cld
dec
popf
cmc
fildll
dec
mov
push
jno
bswap
in
into
cmp
add
push
aas
sub
sbb
outsl
loope
inc
jge
inc
fcomps
adc
push
les
ss
or
imul
mov
add
jl
jl
pop
cli
add
adc
xor
lods
shrl
int3
sbb
decl
rclb
mov
cmp
stos
mov
rclb
ret
pushf
push
and
cmp
jle
adc
lock
pop
loopne
fmull
shlb
adc
mov
jp
lods
pusha
cltd
or
mov
push
enter
push
fldt
push
andb
pop
add
fisttpll
mov
sar
stos
mov
sar
sub
adc
lock
movsl
adc
jecxz
rcrb
mov
push
lahf
loop
push
jecxz
in
sub
insl
sub
jo
pop
pop
mov
xor
mov
xchg
mov
or
and
mov
gs
pop
outsl
clc
jo
xchg
cmp
in
jno
xchg
aam
sub
fs
jns
push
mov
mov
mov
and
jg
mov
push
enter
xchg
mov
dec
dec
mov
or
or
sub
dec
or
inc
pop
push
je
in
pop
add
call
rolb
lods
lea
sub
pushf
inc
out
sub
or
add
adc
insb
dec
mov
js
xchg
stos
fs
lret
or
jne
jo
lock
jp
or
notl
das
jl
stos
cltd
stos
mov
out
add
add
adc
cmp
test
adc
in
or
int3
or
xorl
frstor
or
test
pop
pop
add
cltd
inc
push
mov
xchg
and
test
inc
in
cld
lock
adc
xchg
push
mov
push
ljmp
fldl
jp
shlb
fildl
outsl
aas
enter
inc
lahf
stos
jno
insl
mov
jnp
lea
pop
sbb
push
imul
movsb
loopne
cli
pop
idiv
outsl
stos
sbb
loope
roll
js
pop
cltd
xor
mov
xor
jns
arpl
arpl
push
mov
xor
mov
xor
adc
sbb
jmp
push
mov
inc
pop
add
imull
adc
jno
mov
aad
sbb
pop
cwtl
jnp
xor
or
mov
xchg
dec
mov
dec
dec
pop
sub
mov
and
jnp
or
cwtl
sub
dec
lcall
sbb
add
cmp
test
push
mov
and
mov
dec
cwtl
sbb
pop
pushf
shl
cltd
push
clc
dec
and
mov
in
stos
push
jle
pop
or
and
in
stc
insb
out
leave
mov
jo
push
call
push
inc
jge
cmp
jle
and
adc
push
mov
add
shll
loopne
push
js
adc
cmp
ja
adc
lods
ret
push
lods
cld
clc
fbstp
mov
cmp
and
out
pop
cmp
nop
pop
xor
test
test
sbb
cld
or
cltd
cs
jp
out
inc
loop
pop
lret
sahf
lret
es
sarb
enter
scas
punpcklbw
cltd
adc
or
mov
sbb
adc
sarl
jae
xor
sbb
test
add
or
adc
pop
lock
lret
jge
push
addr16
lahf
pop
push
ja
mov
mov
push
data16
imulb
pop
push
push
mov
ss
jge
ljmp
adc
mov
pop
xor
insl
inc
outsl
push
adc
cld
pushf
movsb
add
inc
nop
ffree
sbb
loope
das
movsb
insl
insb
cmp
push
lods
nop
dec
lret
adc
mov
jle
jmp
push
lock
xlat
mov
pop
andl
inc
pop
mov
in
jne
mov
inc
add
aam
fcomp
loopne
push
cmp
rorl
inc
sahf
inc
inc
jb
dec
mov
aas
pop
jo
je
shlb
add
hlt
pop
cmp
movq
hlt
jmp
or
je
lcall
add
jp
add
jno
cmp
push
mov
push
movsl
addl
sarl
mov
xor
push
out
enter
out
add
dec
inc
in
lret
add
xchg
int3
in
jmp
in
push
mov
inc
mov
xor
shrb
in
mov
test
call
dec
adc
arpl
mov
das
scas
mov
mov
mov
push
enter
and
popf
sub
or
xor
mov
or
pop
pop
mov
adc
stos
dec
pop
push
insl
incl
jnp
and
je
mov
adc
mov
push
ret
and
sbbl
or
inc
push
adc
and
jg
and
das
dec
add
xor
jmp
push
imul
add
mov
daa
icebp
cltd
mov
shrb
lahf
shlb
je
repnz
ret
push
cmp
push
outsl
push
xchg
aaa
aad
rorb
mov
dec
rolb
xlat
daa
js
jl
push
jl
and
push
add
jno
add
jmp
nop
pop
aas
mov
or
pop
mov
bound
nop
pop
clc
in
mov
imull
lea
push
push
sbb
arpl
jo
push
loopne
mov
les
es
clc
arpl
push
testb
sub
mov
mov
inc
xchg
lea
jbe
sub
ds
xor
lret
cmp
sub
sbb
push
adc
sarb
mov
mov
rclb
dec
add
std
dec
cmp
xor
inc
mov
ror
add
push
mov
test
mov
mov
mov
loopne
std
aam
sub
pusha
mov
aam
add
adc
jne
xor
push
sub
cmc
nop
negb
cltd
push
pop
mov
xor
xchg
loopne
mov
dec
int
mov
in
and
cmp
std
addb
inc
imul
fmuls
sbb
jne
xchg
je
fisubrs
rolb
sub
add
lock
das
js
mov
xor
fwait
and
jae
dec
fdivrl
roll
jne
cli
or
mov
fmul
push
ss
add
cmp
rolb
test
xchg
dec
push
xor
sti
and
popa
push
mov
int
int3
sbb
es
pop
fcomi
js
es
jmp
enter
fnstsw
mov
sbb
jne
dec
jmp
in
inc
mov
out
cmp
jb
and
ljmp
mov
sbb
ret
xchg
push
mov
and
jmp
lahf
or
nop
mov
add
mov
imul
and
enter
jmp
jle
dec
add
dec
jge
add
outsl
repnz
mov
jnp
adc
push
inc
add
mov
cwtl
cmc
add
mov
cld
push
popf
lock
lock
call
cmpsb
loopne
dec
and
cmpsb
push
test
add
jmp
push
lods
inc
push
aas
movl
call
mov
add
out
push
rcrb
lahf
inc
mov
inc
jmp
xor
popf
xor
test
push
lods
mov
xchg
dec
jge
adc
inc
outsl
dec
mov
aam
sbb
adc
pop
insl
sbb
mov
sub
or
add
sbb
mov
mov
cmp
or
lret
adc
shr
dec
xor
mov
mov
sbb
cmpsb
xchg
lret
sti
push
pushl
fidivrs
in
add
push
push
call
bound
xchg
or
sahf
pop
or
and
pop
je
xor
add
leave
sbb
or
and
inc
je
orb
sbb
sbb
mov
lock
pop
je
pop
cmp
push
cli
jl
mov
loopne
test
loop
jecxz
dec
orb
shr
aas
jmp
movsl
rcr
mov
mov
cmp
xlat
test
jbe
bswap
mov
inc
test
movsl
push
dec
mov
pop
scas
sbb
je
les
aad
add
loope
jne
inc
or
push
shlb
cmpsl
or
jbe
mov
fcoml
test
fsubrs
sub
es
or
fstpt
pop
add
loopne
dec
rolb
aad
leave
dec
jmp
sbb
call
xchg
adc
pop
jg
in
mov
add
cmpb
push
xor
xor
std
out
pop
ret
adc
incb
stc
sub
lea
bound
or
mov
inc
dec
jne
test
pop
jne
dec
mov
fisubrs
pop
mov
pop
push
vorps
shrl
push
lds
inc
or
cmp
or
push
push
loopne
lods
mov
lcall
je
mov
push
push
pushl
mov
inc
xor
add
ds
movsb
inc
into
es
jge
sbb
cmpsb
mov
fs
out
push
dec
cmp
sbb
inc
jmp
push
xor
popf
into
imul
pop
lock
mov
mov
dec
cli
out
ret
cmp
or
lock
call
pop
or
push
mov
jne
cmp
int
adc
xor
ret
scas
xor
call
mov
subb
mov
inc
mov
jne
movl
mov
push
mov
pop
adc
mov
inc
rcll
add
push
scas
shlb
jg
shlb
or
aam
xor
mov
lcall
push
mov
mov
inc
pop
std
or
jno
dec
mov
cmp
jb
neg
add
add
sub
mov
add
data16
dec
push
jne
shl
rorl
jmp
mov
or
rcrb
aaa
mov
push
clc
sub
das
push
les
shlb
enter
clc
push
jb
dec
shrl
xchg
mov
add
add
bswap
push
push
cmc
push
faddl
pop
jl
mov
xchg
mov
mov
arpl
loopne
leave
sub
mov
xchg
pusha
movsl
sub
fs
arpl
ss
clc
inc
mov
add
or
test
mov
movsl
les
cmp
mov
iret
lock
loop
cld
push
rclb
cld
sub
mov
or
roll
adc
and
lds
inc
mov
xor
sbb
leave
dec
inc
mov
outsb
jbe
jns
adc
mov
jbe
gs
push
addl
stc
jo
aaa
loopne
pop
add
inc
xor
adc
sbb
cltd
js
mov
rcrl
xor
rolb
mov
sbb
lock
in
and
pop
mov
pop
aam
push
push
mov
out
fiadds
popf
sahf
enter
call
jge
rclb
sub
mov
in
subb
pushl
inc
aam
pop
xchg
enter
ds
pop
sub
push
jae
pusha
mov
mov
ret
cltd
adc
dec
ret
and
je
aas
ror
jb
inc
and
inc
jmp
jmp
ret
repnz
sbb
jo
or
adc
in
in
add
sbb
add
call
insl
cltd
push
push
xchg
jge
xchg
cs
cmp
cmp
imul
cmp
jae
inc
les
mov
jmp
cmp
jecxz
cmpsl
dec
add
and
adc
sarl
adc
dec
add
add
inc
int3
pusha
add
loop
std
push
clc
jge
sub
xor
neg
sbb
ja
cmp
jbe
addl
jmp
push
cwtl
repnz
mov
sbb
mov
sub
in
xlat
loope
or
repnz
inc
out
mov
dec
test
jg
popf
repnz
pop
dec
add
mov
pop
push
xchg
cmp
mov
sbb
push
pop
jl
xchg
push
pop
sbb
xor
jl
ljmp
jo
shl
hlt
fsubrs
sbb
rclb
ds
call
push
jbe
mov
imull
sub
inc
xor
pop
inc
xor
fwait
mov
testl
pop
xor
lahf
clc
sub
xor
jae
pop
movsb
adc
lds
mov
mov
je
mov
je,pn
push
push
lea
xor
xor
xor
sub
divb
adc
mov
jmp
mov
xchg
psubusb
sti
fidivrs
adc
fs
sbb
cwtl
push
out
mov
and
or
test
js
xor
inc
in
jl
add
test
or
mov
push
adc
punpckhdq
stos
pop
sub
dec
pop
push
sub
sub
xor
rcr
push
dec
jecxz
and
and
daa
xchg
push
push
pop
mov
test
xor
inc
je
push
or
add
pop
lret
add
imul
loopne
divl
addb
nop
xchg
push
movl
push
jo
and
mov
imul
cmp
add
mov
pop
out
stc
pop
or
rorb
fisttps
cwtl
neg
pop
sbb
pop
inc
shr
push
or
xchg
loop
jle
push
roll
cmp
jbe
clc
jb
push
cmp
rcrl
push
pop
and
out
popa
mov
and
dec
pop
pop
adc
sti
push
fcomi
cmp
inc
mov
mov
stc
mov
xchg
or
fdivs
in
adc
mov
mov
jb
loopne
add
xor
mov
lea
lahf
mull
les
call
mov
mov
mov
or
and
in
scas
adc
cwtl
das
in
lea
dec
add
movl
cmpsb
inc
add
ficomps
nop
dec
add
push
jns
out
dec
inc
cmp
sub
mov
mov
jns
out
in
in
lock
sarb
out
clc
clc
cld
sub
add
lock
fnstcw
push
sbb
mov
cwtl
lods
and
or
or
mov
inc
pop
sti
ret
pusha
sbb
and
loop
mov
lea
jl
cld
or
std
cld
out
adc
inc
neg
enter
adc
rolb
daa
stc
jnp
mov
inc
pop
nop
and
dec
push
fcmovne
ror
jo
add
out
add
out
add
aaa
adc
mov
dec
addr16
add
roll
ljmp
dec
les
int3
push
aam
in
mov
pop
inc
ss
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
and
jnp
sub
cmp
lds
push
push
add
pop
prefetchw
lock
cmp
push
pop
mov
popf
fadds
push
cmp
lret
gs
sbb
push
dec
sbb
push
pop
mov
push
add
mov
ds
cmp
adc
mov
or
lcall
fildl
popf
and
jmp
scas
pop
pop
out
sub
stc
je
inc
jb
shl
sub
dec
jo
adcb
sbb
mov
roll
add
ja
mov
jb
mov
es
cmp
and
push
cld
mov
inc
push
adc
pop
stos
inc
add
adc
xor
pop
arpl
add
addr16
xor
mov
rcrl
fucomip
outsl
inc
fiaddl
push
cmp
inc
fiadds
push
add
xor
daa
iret
inc
hlt
daa
clc
inc
push
inc
outsl
repz
sbb
jae
testl
ss
lret
or
repz
jns
adc
or
jno
sbb
mov
add
add
repz
rolb
push
xchg
add
daa
into
sub
dec
repnz
dec
adc
or
hlt
or
sub
sbb
mov
out
testb
loop
jl
dec
or
push
push
scas
pop
push
jp
jo
fadd
inc
cld
fwait
scas
fcmovne
sbb
es
stos
add
push
lods
sti
sti
mov
adc
mov
les
cmp
jne
inc
inc
inc
inc
jmp
and
rcrb
shrl
jecxz
shrl
testb
mov
loop
mov
mov
inc
inc
sbbb
sbb
and
loopne
mov
in
cmp
jg
ret
rep
adc
data16
push
insl
movb
arpl
inc
scas
dec
insb
mov
or
dec
add
push
cmp
dec
mov
mov
push
add
decl
mov
push
mov
aas
lds
jnp
push
adc
aas
or
add
jo
adc
sub
enter
out
pop
sbb
inc
add
outsl
mov
into
and
sbb
movsl
pushf
adc
cmp
pusha
ja
mov
xor
jge
in
inc
add
and
jmp
jp
and
xor
pop
inc
in
insb
jg
adcb
int3
add
jno
es
mov
mov
in
mov
add
cmpb
pusha
jo
mov
push
jecxz
sbb
and
mov
loope
pop
sub
push
adcl
dec
push
inc
cmpsb
in
out
pop
inc
dec
jl
pushl
add
jge
cmp
into
pop
mov
cmc
push
arpl
stos
rorl
add
cld
cmp
jne
inc
push
lea
lret
add
jbe
sbb
adc
jnp
push
push
mov
jb
daa
cmp
inc
imul
add
xor
cmp
movq
jl
cmpb
cmp
jb
cmp
jl
jg
outsl
inc
xchg
jbe
add
int
and
pusha
repz
orb
add
cld
mov
dec
leave
hlt
mov
decb
icebp
mov
hlt
add
jbe
fcomps
in
push
sbb
push
mov
hlt
push
xor
andl
xor
test
cmpsl
popf
out
adc
xor
sbb
jae
popf
jge
sub
sbb
push
imul
cmp
and
clc
js
cmp
add
mov
xor
rcrl
ret
adc
sub
mov
sbb
cmp
jmp
sub
fidivl
repz
push
and
cld
mov
and
jbe
sarb
les
adc
aaa
dec
fs
add
push
mov
and
clc
sub
fisubl
data16
fs
sbb
sbb
sbb
sbb
jbe
mov
sub
leave
jbe
jl
idiv
sbbb
push
cltd
pop
idiv
add
mov
or
lahf
iret
int
lods
dec
jg
jl
out
lea
cltd
cltd
add
push
push
jns
rcrl
out
aam
decl
xor
adc
mov
cmp
cwtl
stos
adc
cmc
pop
testb
pop
not
pop
and
shrl
pop
enter
fistps
add
push
call
and
push
push
xchg
adc
sub
push
pop
lock
add
andl
pop
pusha
cvtps2pi
xchg
push
in
xchg
cmp
push
outsl
subl
enter
xor
imul
fdivp
pop
cld
mov
or
test
scas
jl
mov
sbb
movsb
in
inc
jne
mov
sbb
add
decl
jbe
xor
cmp
cli
in
pop
mov
pop
jne
jb
push
int
out
sti
popa
rorl
ss
and
cmc
nop
adc
mov
inc
ljmp
cmp
pop
rolb
cmp
dec
inc
mov
mov
dec
inc
clc
or
inc
addb
jbe
or
cmp
add
push
inc
and
enter
mov
lods
push
push
sbb
pop
jne
pop
in
push
fnstsw
jp
add
int3
or
lret
jl
aas
shll
bound
dec
sub
hlt
aaa
out
push
shr
adc
and
adc
dec
test
stc
pop
mov
jg
cmp
ret
adc
decl
in
jle
or
jmp
shr
ret
or
sbb
push
inc
adc
and
inc
push
popa
aas
ljmp
dec
jne
mov
lahf
daa
or
inc
mov
cli
pusha
or
incb
roll
adc
lret
mov
cwtl
or
insb
into
sub
lcall
hlt
rep
imul
lock
jg
lock
push
add
sub
adc
or
clc
jecxz
clc
or
addb
sub
in
xchg
adc
fldl
add
repnz
ret
loope
or
cltd
pop
loopne
in
push
inc
push
out
test
add
pop
aam
push
test
cmpsb
pusha
and
je
push
popf
fisubs
push
pop
sub
mov
loopne
icebp
and
loopne
mull
add
push
popa
fsubl
hlt
jnp
xorb
sub
and
jle
xor
adc
movl
les
ffree
add
jmp
sub
std
dec
jl
lock
lea
cmpb
and
in
pushf
adc
daa
sub
imul
dec
xchg
push
add
or
pop
mov
cld
add
test
sbb
jl
or
dec
dec
inc
loopne
sbb
jne
mov
ret
xlat
add
icebp
and
jle
sbb
adc
stc
insb
adc
pop
adc
cmpl
jae
outsl
lods
lods
dec
push
std
inc
jge
jne
je
movsb
jle
cmp
jl
sbb
test
pop
dec
or
xor
push
mov
inc
sahf
add
xchg
cli
jnp
mov
pushl
loope
inc
aam
jmp
pop
lcall
add
jmp
pop
out
sbb
jmp
sahf
xchg
and
jbe
push
in
inc
push
std
mov
cmp
sar
xchg
xor
cmp
je
push
and
push
cmpsb
or
jne
inc
sbb
rcrl
and
mov
sub
or
cmp
test
cmpl
sbb
cmpsb
jle
pushl
aam
out
pusha
sarl
mov
or
lret
call
and
out
mov
or
push
jl
pop
adc
fldt
cmpsb
xor
or
add
add
repz
or
jg
aas
add
or
or
jle
push
push
arpl
pop
fsubrl
jo
fstpt
addr16
add
clc
enter
jno
mov
test
or
pop
jg
jmp
nop
sar
xchg
movb
inc
cmp
jl
pop
pop
mov
leave
xchg
sbb
lock
bound
xorl
or
dec
cld
iret
loope
fmull
fneni(8087
rcrb
aaa
pushf
adcb
sub
inc
leave
xorl
in
int3
xchg
add
xor
pushl
add
mov
pop
inc
fadds
mov
mov
je
jae
or
loope
fdivs
sbb
pop
pop
sbb
xor
mov
int
loopne
and
jmp
and
push
hlt
movsl
je
fcompl
add
pop
cmp
add
cmpsb
or
adc
inc
or
sbb
push
mov
jle
adc
addb
cmp
shl
int3
dec
push
mov
xchg
pusha
in
mov
jo
aam
or
or
pop
pop
loopne
and
inc
pop
xor
and
inc
outsb
rcrb
pop
jnp
mov
jl
pop
scas
rcl
stos
ds
cmpl
shl
cmp
adc
test
cmp
movsl
and
jne
mov
inc
ret
or
mov
mov
xor
inc
adc
std
sbb
je
or
dec
fisubrl
or
negl
sub
push
ja
cmp
pop
sbb
mov
xor
add
or
test
inc
out
sbb
xor
pushl
mov
jo
push
xlat
mov
fsts
push
push
dec
adc
push
testb
decl
push
push
testb
lret
je
addr16
cltd
aam
push
rolb
ja
cmpl
jne
cli
jg
jl
or
pushf
cmp
or
je
or
ja
xchg
je
mov
sbb
xor
mov
mov
sbb
imul
pusha
mov
or
add
sbb
jmp
ss
dec
popa
jecxz
push
mov
jo
repnz
adc
js
xor
sbb
fmuls
adc
and
sarb
cmp
dec
je
dec
jne
bound
ja
adc
loopne
push
or
sbb
pop
add
or
test
adcl
mov
cmp
add
arpl
mov
aaa
fists
adc
push
icebp
enter
fcoml
arpl
test
mov
sti
sub
adc
adcb
adc
or
mov
cmpb
lea
or
cmp
je
pop
cmc
and
push
push
push
out
push
movsl
ret
push
add
sbbb
es
mov
ss
push
ja
push
jb
ljmp
inc
cmp
jae
push
cmp
jl
mov
inc
or
mov
sahf
jp
adc
mov
addb
pop
lock
jno
sti
testb
jne
clc
push
mov
in
loopne
lods
add
into
push
ljmp
jb
pop
pop
pop
pop
sub
aad
add
cmp
mov
push
pushf
in
dec
stos
sbb
pushl
enter
adc
mov
icebp
cmp
scas
xor
std
mov
xlat
dec
mov
adc
or
incl
sbb
cmc
add
insl
xor
or
jne
and
cmp
imull
xor
jne
jmp
fcmovnb
out
scas
in
rcll
mov
mov
adc
dec
dec
mov
mov
mov
dec
cmpb
jle
xchg
cwtl
shl
mov
sbb
mov
add
sub
inc
es
xchg
cmp
lret
repz
nop
aam
cld
fwait
push
inc
push
or
mov
push
jle
jecxz
test
push
jbe
inc
loopne
clc
insl
jnp
dec
inc
push
lock
jae
mov
adcl
jo
jl
push
sbb
loope
inc
fiaddl
adc
pop
cmpsb
jno
call
jbe
add
test
sbb
lcall
ret
add
dec
jg
adc
orl
cmp
mov
hlt
cmp
jecxz
dec
jne
aad
or
or
rolb
lret
nop
cmpb
mov
clc
push
or
fisttpll
scas
negb
std
jb
mov
xchg
or
add
adc
sub
sub
mov
sbb
push
dec
or
mov
mov
out
jnp
int3
mov
lret
test
test
pop
js
ljmp
inc
push
mov
fadd
or
cmp
adc
jns
mov
fldenv
dec
and
nop
lcall
xlat
je
cmp
adc
cmp
jb
testb
out
and
xchg
insb
testb
int3
inc
faddp
pop
dec
sbb
jge
cmp
add
inc
in
inc
jnp
cwtl
and
cmp
jne
loop
jecxz
cmpl
sub
pop
adc
daa
mov
push
or
addl
in
push
out
sbb
movsb
gs
push
call
call
and
fsubl
mov
or
adc
loopne
or
fidivrl
mov
mov
inc
sub
je
push
cmp
shl
pop
mov
in
daa
mov
in
push
jo
mov
and
pop
mov
movsb
sbb
stos
sbb
shlb
pop
mov
push
pop
cmc
and
dec
push
cld
insb
bnd
pop
cs
out
call
push
jne
and
push
mov
and
mov
and
mov
add
xor
aas
push
lods
inc
jl
jbe
sbbl
jge
adc
and
pop
push
mov
jle
cwtl
and
sbb
add
add
cld
push
jo
xchg
inc
xor
dec
add
or
mov
dec
pop
clc
je
in
addb
or
cs
or
mov
jl
bound
dec
pop
arpl
sbb
fnstsw
mov
dec
jne
adc
das
jns
cmp
xor
dec
out
cmpl
adc
sub
fs
in
and
push
sub
xor
mov
daa
sahf
jns
dec
xor
decl
decl
cmpsl
xor
push
add
icebp
cmp
mov
lret
adc
lret
pop
fcomps
xchg
inc
and
push
inc
push
movsb
gs
sbb
in
push
in
inc
inc
data16
inc
push
dec
pop
cmp
inc
xor
mov
test
push
repnz
je
movsb
jno
movsb
and
sub
mull
sub
pop
cmp
fistl
add
or
jne
xchg
stc
mov
add
insl
jg
pop
test
add
andl
mov
pop
xor
pop
pushf
pushf
adc
nop
bt
in
test
sarl
mov
cltd
xchg
es
adc
xor
daa
test
outsb
movl
cmc
ja
mov
ljmp
addr16
mov
imul
pop
mov
and
mov
flds
sbb
or
cwtl
mov
jb
mov
cmpsl
adc
xorb
ja
std
cmp
js
lahf
mov
aas
dec
mov
cmp
fnstenv
add
xchg
push
push
test
cmpsb
shrb
inc
arpl
imul
push
in
mov
mov
mov
sbb
shrb
mov
add
pop
es
jmp
fists
jle
jne
mov
pop
pop
leave
inc
mov
sub
mov
and
push
cmovle
dec
or
add
aaa
sub
insb
pushf
test
pusha
mov
and
adc
mov
push
push
testl
les
stos
cld
xor
jbe
repz
push
push
das
and
ret
sub
adc
cwtl
loope
rcrl
push
push
dec
dec
pushf
js
inc
les
fucomi
pop
adc
dec
sub
mov
sbb
or
sarl
cmp
lea
mov
mov
push
subb
dec
cmp
mov
pop
fists
pop
sub
adc
inc
push
add
insl
in
mov
mov
jg
clc
cmpl
mov
cmp
cmp
add
mov
sbb
mov
dec
or
or
push
push
pop
pop
fadds
and
mov
mov
mov
lea
lea
xchg
adc
out
bnd
divb
or
icebp
jb
push
or
shll
jb
scas
or
inc
pop
cmp
sbb
je
mov
mov
lret
fstpt
sub
and
sub
or
sbb
mov
fidivs
sbb
jg
mov
cmpsb
dec
pop
bound
bound
adc
cmp
xor
cld
adc
dec
aas
testb
cmovb
adc
fidivl
adc
add
pop
sbb
jb
cmp
jb
mov
call
faddl
xor
jb
add
loop
mov
int
cmp
jae
inc
add
push
pop
inc
add
jbe
test
scas
and
loopne
inc
loopne
xchg
mov
movsb
xchg
mov
sub
push
mov
fs
lcall
and
lea
or
mov
sub
jg
fidivl
dec
cld
mull
mov
leave
adc
aad
imul
xor
popf
comiss
repnz
pop
push
jle
mov
cmpsb
test
add
cmp
xor
cmp
je
aaa
lea
jl
sub
pop
and
cmpsb
jns
jmp
push
inc
jge
cmp
notb
inc
mov
mov
addr16
adc
mov
jno
lds
rolb
cld
push
cli
inc
cmp
jle
push
adc
mov
adc
pop
add
mov
sub
push
rclb
ret
mov
jo
lret
add
inc
mov
repnz
cmc
scas
fwait
je
testb
cmp
in
push
dec
insl
sbb
imul
cwtl
daa
cmpb
std
jmp
out
sahf
add
mov
andl
mov
sarb
cmp
jle
aas
movsl
mov
cmp
je
dec
sub
sbb
clc
jb
icebp
clc
inc
int3
sub
pop
xor
hlt
jg
mov
jmp
and
std
sbb
mov
mov
ss
pop
sub
sub
jne
scas
xchg
jp
pop
outsb
push
adc
pop
lock
add
cmp
les
rorb
or
sub
xchg
lds
nop
lret
inc
sub
push
dec
push
dec
xchg
das
mov
fdivrl
loop
mov
pop
dec
add
cmp
rorl
js
sbb
jnp
mov
leave
shr
lds
pop
add
test
pop
cmp
cmp
insl
ljmp
je
inc
cmp
add
sbb
adc
call
stos
ss
clc
rorb
nop
sbb
shl
shrb
xchg
mov
out
push
movsl
add
adc
sub
xor
bound
mov
adc
push
jmp
outsl
movdqa
data16
jge
dec
adc
push
and
loope
outsb
sahf
addr16
push
pop
outsl
inc
or
sahf
push
repz
jle
or
push
cld
jns
jg
lea
in
mov
or
lea
dec
ret
add
out
cmp
lret
prefetch
jg
dec
mov
or
jne
test
push
ds
or
sub
adc
icebp
push
push
sub
push
lahf
push
dec
mov
call
pop
rcl
fisubrl
add
sub
lock
in
pop
add
inc
rep
insb
push
cmp
jne
xor
test
rcll
adc
cltd
or
in
jb
jp
std
push
mov
cli
push
push
ret
add
cmp
sbb
xchg
icebp
push
outsb
dec
rep
mov
test
add
hlt
shll
sbb
je
inc
jmp
add
sbb
outsl
xor
sbb
pop
xchg
fdivl
dec
sbb
push
bound
scas
push
push
dec
push
js
dec
xor
fadds
lock
test
shlb
add
xor
movsb
aas
sbbb
je
push
push
cli
sub
mov
cmp
sub
sub
mov
or
sub
loopne
fsubrl
sub
sub
sarb
aas
data16
popf
enter
aas
das
das
movsl
shrb
int
add
std
add
dec
add
sarl
enter
in
cs
aaa
dec
cld
adc
cmp
popf
xchg
outsl
pop
pop
add
rol
mov
add
adc
jnp
fcoms
nop
inc
sub
dec
or
fildl
add
xor
pop
xor
xorl
in
fdivs
dec
pop
dec
adc
inc
into
push
pop
inc
fdivr
loopne
js
pop
mov
call
push
mov
cmp
jb
lea
push
adc
push
pop
out
or
adc
fs
insb
jle
and
lods
and
mov
push
mov
jns
mov
sub
out
stc
add
push
sbb
mov
push
clc
pop
test
js
mov
fmull
xchg
repz
push
dec
ljmp
xlat
inc
xchg
lods
fldcw
aaa
jno
test
pop
inc
enter
sub
out
in
xchg
sub
nop
xor
pop
push
subb
daa
mov
push
outsb
mov
fdiv
cmp
repz
in
hlt
cld
add
popa
add
les
sub
fwait
inc
xor
cmp
dec
pop
sub
pop
add
mov
cmp
or
movsb
lcall
lcall
mov
and
add
fimull
cmp
int3
in
scas
ret
inc
dec
jne
jo
sub
pop
bound
xorl
pop
push
pop
aas
les
xor
pushf
pop
pop
dec
sbb
pop
or
ret
adc
lahf
cmp
ja
cmp
adc
push
inc
sbb
inc
and
and
dec
cmp
ret
ds
add
push
push
clc
mov
jmp
and
iret
sbb
xchg
push
lret
sub
jecxz
xlat
mov
xchg
cs
rcrb
dec
or
mov
inc
add
fisttpll
push
dec
daa
inc
int
xor
pop
mov
xchg
shl
and
add
mov
rolb
sbb
pop
or
jle
rolb
outsl
les
ret
add
add
jb
dec
add
and
out
fiadds
rorb
int
inc
dec
sub
ret
xchg
adc
std
cld
addl
imul
adc
fcoml
pmaddwd
cmp
sub
cld
fisubrs
fisttps
ja
pop
call
dec
push
ds
jae
mov
push
jge
push
push
cmp
jb
cld
inc
ficomps
push
nop
adc
lea
sub
push
jg
push
sti
add
xor
sub
mull
rcrl
mov
add
mov
je
xor
pop
pusha
aam
test
push
fidivrs
loop
inc
dec
dec
sbbl
cld
das
lods
add
ret
andl
xor
mov
cmp
xlat
pop
xchg
or
test
dec
pop
add
enter
sub
pop
icebp
inc
push
inc
packssdw
add
add
lahf
xchg
cmp
test
cmp
sahf
cs
adc
mov
shrb
push
mov
scas
sub
popf
imul
pop
hlt
test
pushf
or
iret
add
and
cmp
je
add
and
outsl
adc
aaa
testb
add
and
or
aaa
shl
bound
call
ret
xchg
jge
dec
sbb
push
sub
xchg
jne
lahf
addr16
pop
fisubrs
adc
jl
mov
inc
cmp
dec
clc
js
or
or
adc
lock
jno
push
sbb
pop
push
jne
test
add
mov
fcomps
jne
push
pop
insw
mov
ja
pop
jbe
lea
insb
sbb
adc
std
fwait
jbe
add
leave
cmp
jae
insb
or
jae
pop
push
cld
jb
push
clc
jbe
add
sub
dec
dec
test
jne
sbb
pop
test
adc
movsl
test
scas
orl
adc
addl
sbb
mov
ja
push
sub
push
jbe
or
cmpsb
add
mov
or
arpl
mov
push
ret
add
arpl
rcr
loop
mov
xor
xchg
inc
dec
mov
pop
dec
mov
and
cmpb
js
sub
lock
add
mov
add
pop
or
mov
mov
inc
pop
or
push
or
pop
cmpsb
add
arpl
xor
data16
mov
inc
push
add
or
loope
or
lea
stos
add
mov
mov
mov
inc
dec
jne
lea
daa
fwait
popa
xor
or
mov
test
add
mov
orb
add
jle
jmp
inc
div
mov
and
mov
lea
jl
push
add
cmp
ja
and
lea
test
mov
inc
pop
orl
in
fdivrs
jbe
faddl
testl
jmp
jo
push
jp
cs
sub
or
lods
cmp
inc
inc
cld
sbb
dec
and
mov
inc
adc
mov
mov
lods
jmp
and
je
and
mov
push
xchg
or
test
add
pusha
cmp
push
mov
mov
leavew
sub
mov
push
sarl
lea
sti
rorb
push
movsl
jne
jg
add
cmpsb
cli
and
outsl
mov
add
lret
cmp
jb
push
movsb
ret
cmp
push
adc
stos
clc
mov
adc
je
cmpl
movsb
and
mov
and
push
or
inc
test
xor
adc
pop
sbb
push
add
mov
inc
push
mov
and
loop
sbb
and
jge
sarb
mov
mov
push
movl
cmp
push
popa
insb
jmp
xor
std
jne
sarb
es
fcmovu
sub
mov
pop
sahf
fsubrl
jmp
ja
clc
push
je
ss
pop
push
add
push
jmp
pop
lock
or
mov
cmp
push
mov
and
in
adcb
cmp
add
adc
mov
xor
or
movsl
fnsave
push
jmp
es
adc
xchg
push
es
push
out
push
and
xor
jp
das
orl
inc
in
imul
inc
jae
cmp
jbe
scas
js
movsb
iret
push
jne
mov
test
push
cmp
sbb
leave
inc
daa
call
rorb
fimuls
sub
mul
push
into
sub
add
jmp
hlt
fildll
jle
cmp
or
lcall
mov
rcrb
inc
inc
cmpb
shrl
add
push
add
loopne
xorb
pop
call
movl
je
push
mov
adc
mov
mov
mov
inc
inc
inc
dec
jne
mov
inc
mov
es
pop
ret
jl
sbb
divb
divb
inc
or
inc
dec
jne
out
mov
mov
inc
dec
mov
cwtl
gs
mov
jmp
cmp
pop
mov
imul
or
loopne
adc
or
mov
mov
test
jne
cmp
or
and
dec
sbbb
inc
mov
sahf
sbb
sti
rep
andl
pop
add
aas
jno
addr16
push
inc
jnp
ret
faddl
and
std
dec
inc
adc
push
mov
mov
pop
push
lods
mov
add
add
adc
or
pop
mov
or
pusha
lock
call
idivl
loopne
or
dec
sub
jmp
xor
mov
or
mov
int
add
add
ret
ss
cmp
jmp
adc
out
and
ljmp
sub
and
push
and
inc
ret
push
shll
leave
ds
adc
dec
lret
and
dec
pop
movl
xchg
jnp
cli
outsl
cmp
es
add
dec
sti
pop
cmp
jne
sbb
cltd
pop
out
pushl
inc
mov
pushf
cltd
sub
lahf
jno
iret
dec
in
mov
jmp
int3
call
int3
mov
popa
pop
lret
sub
and
push
out
push
add
mov
ja
cmp
cwtl
mov
jne
daa
mov
pushl
out
jle
cmp
cmpl
add
push
add
lds
cmp
adc
sub
adcl
jne
sbb
lock
adcl
push
sbb
orb
mov
in
xchg
and
lea
jnp
mov
aaa
fsubrs
loope
jnp
push
pop
into
cmp
adc
movsl
sub
addb
or
aaa
push
movsb
sub
sub
aam
dec
xor
inc
js
cmp
je
push
mov
sub
sbb
loope
test
cmpl
pop
in
inc
sbb
and
hlt
jbe
xchg
add
outsb
push
lock
test
ret
sbb
inc
push
cwtl
jo
insb
loope
pop
nop
xchg
lock
mov
cwtl
jne
lock
roll
jnp
int
jp
lock
jge
sub
inc
adc
mov
adc
jp
adc
pushl
sub
sbb
and
push
sbb
xor
stos
adc
and
in
rorl
fsub
push
popl
cmp
jp
or
sbb
inc
mov
sbb
lods
push
jb
gs
test
xor
dec
iret
push
push
mov
cmp
push
fistpll
les
repz
cmp
je
mov
ret
and
xchg
loop
sbb
push
cwtl
xor
pop
cld
inc
push
sti
pop
mov
subpd
pop
dec
xor
xchg
add
add
mov
or
push
cmp
mov
xchg
or
scas
imul
lock
mov
sub
cmp
ret
dec
sbb
lcall
outsl
fsubr
push
lock
push
inc
adc
sbb
pushl
push
push
mov
shlb
jne
ds
scas
int
mov
mov
jmp
adc
outsl
jo
cmpsl
repnz
psubd
adc
mov
adc
aam
mov
mov
mov
js
xchg
push
push
fimuls
inc
mov
jne
xchg
mov
jge
aaa
dec
and
pushw
xor
call
sub
sub
pop
imul
adcl
or
jl
cmp
jg
inc
jmp
xor
test
xor
push
movb
cmp
add
sub
pop
inc
jo
jge
aas
sbb
ret
pop
sub
dec
enter
mov
and
popa
pushl
or
inc
scas
pop
adc
xor
lods
or
inc
jne
xor
fcoml
and
subl
fiadds
nop
dec
aam
adc
std
xchg
call
jns
dec
or
add
outsl
fcomip
or
push
cltd
pop
idiv
fadd
fidivrl
insb
pop
cmp
mov
insb
sbb
add
cltd
jo
sub
fmull
pop
sub
insb
fistps
mov
inc
xor
fdivr
pop
ljmp
shlb
fimull
mov
aaa
mov
insl
cld
in
ret
lea
xchg
pushf
fs
dec
js
sub
add
decl
dec
pushf
sbb
lea
jmp
add
xorl
out
dec
push
sbbb
pop
jl
mov
adcb
lock
sub
cld
inc
sub
jmp
icebp
xchg
sbb
mov
jp
mov
pop
adc
fbld
sbb
leave
inc
dec
and
and
leave
call
rcll
or
mov
scas
hlt
inc
or
jb
gs
lods
add
or
or
or
fucomp
sbb
xor
popf
add
mov
pop
es
sbb
or
arpl
add
mov
mov
push
lock
hlt
aam
out
xchg
add
hlt
invd
mov
mov
popa
lock
cmp
pop
xchg
popf
mov
xor
jbe
idivb
or
notl
sub
sub
and
adc
es
push
jmp
ss
xchg
push
push
push
push
and
ja
stos
fimull
or
mov
lahf
out
xchg
dec
dec
int3
dec
pop
rorb
shll
shlb
dec
mov
jnp
mov
mov
into
stos
aaa
std
jmp
cmp
sahf
pop
push
pop
mov
or
scas
nop
lret
push
pop
mov
orb
push
mov
add
add
mov
daa
loop
mov
das
stos
dec
mov
xlat
mov
sbb
push
cmp
jl
cmp
jg
xchg
fsubrs
push
jge
adc
mov
dec
mov
repnz
jle
ljmp
or
push
mov
popf
jle
pop
jmp
jne
xchg
ret
ret
sub
mov
pushf
data16
popa
cwtl
rolb
nop
sub
sub
cmp
push
adc
mov
sub
adcb
sub
fwait
jl
pop
xchg
mov
add
or
fdivl
xlat
es
ss
cmpsl
or
and
imul
push
xor
and
or
sub
xchg
arpl
je
mov
or
mov
mov
jl
inc
push
bnd
lahf
movsb
movl
pushl
inc
xchg
ja
push
push
push
push
push
jmp
add
lea
sub
add
ficomps
lret
xchg
adc
pop
movsb
sub
adc
dec
clc
lea
push
lea
lods
std
fildll
mov
push
mov
and
xor
or
sub
jb
inc
add
or
das
movsl
jbe
ret
popa
mov
test
xchg
pop
ffreep
and
mov
out
daa
inc
add
outsl
jmp
ss
sub
ja
xchg
push
pusha
xor
push
jb
adc
insb
orb
ret
cltd
xor
int3
outsl
imul
mov
rorl
cmp
jge
ss
sbb
jl
incl
dec
adc
add
test
xor
or
push
xor
xor
xorb
cld
test
inc
decb
ljmp
icebp
neg
outsl
nop
call
push
dec
inc
inc
add
sub
pop
and
movsl
push
pop
xor
sahf
add
js
jne
pop
push
push
sbb
sbb
or
iret
or
adc
or
dec
mov
cwtl
popa
cli
inc
loopne
push
push
push
add
inc
cld
pop
sbb
sarb
loopne
fdiv
fiaddl
fdivrs
sbb
sbb
inc
pusha
jnp
sbb
jne,pn
sbb
add
sbb
icebp
pop
cltd
out
jle
inc
push
shr
inc
push
xor
clc
fbld
shr
rcr
shr
rcr
or
lods
lock
neg
cmp
movsb
out
shll
cmp
or
cmp
push
cwtl
out
dec
pop
fmuls
fiaddl
sbb
xor
xor
or
jnp
dec
adc
icebp
pop
push
into
repz
sbb
pop
shll
or
push
dec
jns
jmp
popa
pop
add
fdivrs
in
popa
enter
sti
sbb
push
push
jnp
f2xm1
jbe
sub
adc
push
or
lcall
pop
outsb
aas
mov
ret
cmpl
or
dec
ret
mov
rol
fcompl
adc
adc
popa
jb
adc
pop
cs
xchg
ror
repz
daa
xchg
or
test
sbb
and
sub
and
or
and
add
data16
imul
lock
cmp
push
xchg
xchg
in
int
pop
setne
sub
jmp
ja
pop
hlt
inc
neg
pop
mov
sub
jp
aam
idiv
rorb
enter
ficoml
mov
xchg
add
pop
push
jle
out
int3
push
imul
mov
adcl
push
imul
pusha
jb
and
je
ja
push
clc
into
push
test
inc
rorl
cmp
shlb
mov
xor
test
fcmovnb
sbb
pop
or
add
push
jo
add
jns
adc
push
push
add
outsl
inc
push
jl
mov
xchg
push
add
cld
mov
pop
and
dec
or
scas
or
and
push
xor
popa
ret
xor
jle
and
cmp
sbb
call
mov
mov
popf
outsl
dec
andl
push
movsl
fsub
js
and
or
cs
sub
push
cmp
fsubrp
pop
shlb
mov
je
sbb
ss
imul
push
call
test
sbb
in
cmp
cmpsb
outsl
lahf
dec
ja
fcompl
ret
mov
lahf
push
cmovs
and
and
push
popa
lds
loop
sub
sub
add
xlat
repnz
in
mov
add
or
add
ret
mov
sbb
sub
mov
xchg
and
or
pop
sbb
lods
jecxz
sub
insb
lcall
dec
xor
mov
pop
or
cs
xchg
jb
sbb
ffree
inc
jg
jae
jo
mov
cltd
mov
cmpsb
or
jo
cmp
sbb
sti
sbb
adc
dec
rol
push
fwait
mov
mov
test
push
aad
loopne
sbb
in
add
or
es
mov
ss
mov
cli
addl
mov
cmp
rcrl
cmp
push
mov
std
stos
fsubrs
sub
push
pop
push
popa
adc
mov
and
push
push
fsub
pop
pop
or
xor
lods
push
dec
imul
add
add
cmp
jecxz
and
push
notb
push
hlt
pop
mov
and
sti
in
pop
test
jb
loope
xor
lahf
stos
lods
push
add
push
xor
add
mov
jne
push
movsb
pop
adc
jg
movb
test
xchg
in
mov
lret
cmp
xor
fsubrs
or
add
push
out
imul
ret
jae
push
add
movsl
adc
mov
mov
fisubl
adc
add
ret
and
fiadds
cwtl
mov
adc
les
fstpt
or
roll
stc
sub
std
cmp
jge
imul
mov
andl
cmp
mov
mov
mov
mov
fs
fsubl
pop
cmp
lret
dec
cmp
xchg
sub
cmp
cmpsl
jb
nop
popl
mov
orb
pop
mov
mov
lock
leave
push
sbb
pusha
mov
push
bound
orl
out
xor
stos
xorl
cmpb
or
enter
fidivl
leave
adc
push
or
stc
push
jno
or
aas
add
jmp
push
fsubrl
loopne
xor
mov
fucomp
loopne
sbb
inc
inc
cmp
jbe
cs
inc
sbb
push
addb
inc
push
jmp
pusha
cmp
push
scas
dec
adcl
popa
idivl
orb
xor
push
pop
push
xor
dec
cmpsb
iret
mov
movl
lahf
shlb
adc
daa
or
lock
jge
sbb
cmp
dec
adc
mov
lea
mov
xchg
add
pop
out
add
scas
outsb
loopne
add
orl
mov
push
ss
adc
adc
adc
mov
incl
pop
add
mov
push
sbbb
inc
mov
push
inc
incl
mov
jnp
clc
cmp
faddl
orb
out
idiv
and
or
xchg
add
inc
push
data16
push
mov
jmp
push
mov
cmp
ss
jmp
xor
loopne
addb
add
movsb
push
clc
lods
dec
inc
inc
inc
pop
je
adcb
inc
lahf
pop
and
cmpb
nop
lock
addl
xchg
mov
xor
add
cmp
popa
mov
jne
xchg
xchg
or
dec
je
sarb
cmpsl
adc
leave
or
mov
mov
scas
or
cmp
xor
and
sub
pop
add
adc
idiv
pop
push
addl
aad
add
int
pop
sarl
sbb
push
mov
sbb
mov
dec
jge
add
sbb
add
repnz
pop
cmpsl
out
lea
addb
stos
cmp
movsb
aas
jae
aam
pushl
dec
adc
sar
out
lea
cmp
jb
loope
lods
add
sahf
sub
push
push
addl
inc
dec
jecxz
pop
push
push
popl
mov
lea
or
movsb
pop
pop
add
cmp
data16
cmp
inc
lret
and
cmp
sub
add
inc
js
mov
test
rorb
jne
fmul
in
incl
mov
cmp
je
inc
inc
or
jne
repnz
add
mov
sar
inc
push
push
mov
pop
jb
shlb
lock
xchg
cmp
lret
ss
loope
frstor
sbb
cld
and
andl
pop
xor
jo
sbb
pop
sbb
xorl
ss
mov
pop
movsb
or
sti
or
stos
ja
imulb
out
int
pop
pop
cmpl
adc
shll
mov
incb
lds
mov
adc
pushf
pop
ja
fadds
and
dec
cld
add
sbbb
and
cmp
or
or
out
dec
add
or
or
or
imul
or
cmp
xor
inc
mov
jo
or
in
js
into
adc
mov
mov
sub
mov
add
cmp
clc
scas
int3
mov
mov
add
sbbl
jb
rorl
xchg
jbe
rcrb
add
lea
lock
andb
mov
cmp
jb
mov
cmp
imul
movsl
xor
roll
dec
jge
fimull
je
mov
fmull
rolb
or
or
dec
std
and
repnz
add
out
add
cs
mov
add
mov
test
or
cld
outsb
fxch
sbbb
neg
inc
or
inc
adcl
jl
inc
call
xorl
jg
or
in
push
orb
jmp
xchg
adcl
add
dec
mov
cmc
push
roll
cmp
or
aas
push
aaa
xor
ds
mov
add
jmp
lret
or
je
and
popl
add
add
mov
jmp
and
je
scas
pop
notb
mov
bound
xchg
lds
cli
cmpsl
scas
inc
mov
jae
mov
jmp
arpl
icebp
testb
xchg
dec
sub
cmp
push
test
sbb
lods
mov
icebp
mov
mov
sub
cmpsl
cmp
push
lea
loopne
and
pop
cld
dec
dec
or
stos
lea
addb
jge
pop
ret
mov
push
mov
jo
and
inc
and
lock
gs
or
pusha
in
sarb
jl
pop
orl
sbb
add
lea
mov
sbb
sbbb
dec
outsb
mov
cld
dec
xchg
pop
add
faddl
movsl
icebp
imul
mov
pop
push
pop
xlat
add
sahf
shl
loopne
fsubr
jne
js
cltd
and
push
add
add
xor
push
dec
mov
leave
into
arpl
jb
xor
cmp
mov
loop
lahf
dec
push
sbb
push
loopne
fldenv
inc
and
orl
add
mov
sub
addr16
dec
or
lock
adcl
mov
push
or
fisttpll
pop
adc
bound
lock
shrl
aas
push
push
mov
mov
add
or
not
mov
cmc
push
or
test
in
lcall
mov
lock
ja
pusha
testb
and
mov
imul
or
or
mov
mov
call
rcrl
or
lds
or
gs
cwtl
cmp
mull
adc
sbb
cli
out
and
popl
insl
mov
pop
lods
mov
adc
rcrb
movl
cmp
mov
fsubs
movsb
jmp
shrl
mov
mov
jp
std
xor
push
push
sbb
pop
enter
add
insb
cmpsl
scas
push
push
pop
lea
sub
les
call
mov
out
mov
leave
aad
or
push
hlt
scas
and
pusha
inc
jecxz
pop
adc
hlt
inc
rclb
inc
jl
lea
adc
movsl
lcall
shr
sbb
or
cmp
jl
add
push
in
je
push
pop
icebp
xchg
negb
es
ficoms
cmpl
fcoms
rorl
scas
pop
ljmp
fadds
push
pop
cwtl
data16
pop
testl
aas
out
or
pop
sbb
loope
aam
gs
mov
test
inc
inc
in
fs
nop
sbb
outsl
sub
xchg
es
sbb
and
inc
jmp
push
xor
imul
ret
jmp
sbb
mov
jmp
and
inc
pop
or
or
xorb
mov
dec
mov
out
push
das
adc
ss
jne
arpl
lods
lods
xlat
mov
add
push
in
fs
rorb
adc
les
mov
mov
shlb
popa
mov
or
or
subb
fwait
leave
and
xchg
rcll
je
dec
xchg
mov
aad
scas
testb
pop
lds
or
out
inc
enter
and
adc
es
test
jne
add
imul
jns
in
cld
push
xor
lea
sbb
adc
adc
mov
mov
fistpl
or
stos
and
nop
or
jg
inc
cmp
shll
xor
aaa
mov
add
mov
arpl
or
fdivrp
clc
inc
or
ss
push
dec
or
fwait
movsb
xchg
cmc
test
jbe
and
stc
jb
outsl
fisubrl
shlb
add
cmp
jb
stos
dec
lret
lahf
imul
inc
pop
scas
cmp
push
mov
cs
ret
push
dec
sarl
mov
shr
not
dec
stos
les
ljmp
mov
and
add
pusha
push
dec
test
add
dec
adc
pop
push
push
push
push
loopne
rorl
sub
pop
es
loope
xor
push
xor
pop
sub
fiadds
sub
xchg
cli
jbe
je
mov
lea
test
push
out
movsl
je
gs
movsl
push
cli
jmp
popl
shl
xor
in
inc
loopne
negl
pushl
jo
cmpsl
hlt
adc
push
pop
stc
lods
adc
inc
ja
mov
cltd
cld
add
sub
movsl
or
mov
xor
into
inc
push
rcrl
ljmp
sbb
shl
test
movsl
addr16
pop
push
arpl
pushf
and
sub
ror
insb
push
push
and
inc
rolb
xor
adc
lock
dec
loopne
insb
adc
adc
sub
aam
adc
call
sub
sbb
adc
mov
sub
adc
sbb
shr
mov
imul
ret
add
push
dec
or
scas
dec
pop
sbb
stos
shll
push
lea
mov
mov
jle
clc
push
cld
rclb
fstl
decl
add
sar
dec
sub
mov
push
fildll
mov
inc
mov
mov
and
lret
lea
shll
pop
mov
decb
or
lea
xor
inc
cmp
pop
add
lea
pop
ljmp
rcrb
push
or
mov
rol
jmp
clc
and
clc
popa
shlb
xchg
sub
and
sti
add
mov
dec
pop
cmp
jbe
jg
lret
fimull
jl
and
cmp
je
roll
jno
sbb
aaa
xchg
mov
shr
not
and
outsl
mov
dec
jne
sub
jmp
lea
das
mov
cmpsb
jl
pop
xor
add
dec
pusha
dec
pop
add
sbb
pusha
cltd
and
fbld
in
pop
les
ficomps
into
outsl
pop
lock
mov
pop
or
or
insb
or
or
dec
pusha
mov
mov
or
sbb
adc
jle
xchg
xchg
sbb
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
fwait
jle
sbb
pop
adc
mov
jecxz
mov
mov
jecxz
loope
add
sbbl
jmp
jnp
mov
push
or
jnp
testl
adc
inc
aam
dec
sbb
add
and
fisttpll
and
in
pop
int
fsubr
in
push
mov
adc
push
lea
adc
fnstenv
loopne
call
insl
or
mov
jno
scas
xchg
aam
add
mov
mov
add
pushf
lock
rclb
pop
loope
add
push
add
bound
or
mov
add
pusha
aas
repz
negb
les
iret
xor
mov
mov
shrb
sbb
stos
mov
sub
sbb
pushf
jmp
orl
insl
insb
orb
mov
and
mov
mov
add
int3
shlb
add
inc
push
mov
mov
imul
nop
fidivrl
incb
pop
mov
add
inc
dec
jne
cmp
xchg
adc
rcrb
mov
add
lea
ficoms
inc
sub
shr
xbegin
orl
orl
js
nop
cld
or
adc
out
inc
inc
cld
lock
testl
add
mov
add
xchg
inc
fs
sub
fadd
mov
sahf
inc
popf
mov
negl
inc
inc
mov
lock
push
mov
jne
or
clc
aad
js
lds
not
and
ds
inc
les
adc
add
jns
movsb
xlat
sub
add
shr
jb
shld
cld
and
icebp
stos
mov
add
lds
adc
mov
test
lods
daa
loop
inc
jp
pop
cmp
ljmp
add
mov
addb
int3
push
pop
inc
pop
dec
int
push
mov
iret
dec
in
cmp
add
sti
pop
add
cmp
nop
aam
fdivrl
or
push
jns
ret
mov
mov
sbbb
mov
inc
sti
cmpsb
incl
mov
fstl
push
lea
jbe
rcl
int3
pop
pop
jg
or
mov
shll
pop
adc
lcall
iret
subl
jmp
pop
pop
shl
aaa
js
test
xchg
inc
jne
iret
push
mov
insb
xor
jnp
sbb
push
mov
sub
adc
cltd
jle
pop
inc
inc
or
stos
rclb
insb
pop
xor
or
sbbl
jp
movsb
and
pop
pop
idiv
sbb
fidivrl
xor
cmp
out
push
mov
fists
push
or
mov
insb
rcr
fbstp
loopne
fnstenv
dec
ficoms
add
mov
ja
data16
dec
lea
mov
and
xchg
js
test
xchg
dec
ret
push
lods
decb
into
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
mov
add
lods
call
xchg
and
add
js
and
inc
cmp
push
push
ja
mov
push
inc
into
call
out
adc
jmp
sub
push
in
push
imulb
dec
or
icebp
add
nop
cmp
and
or
outsl
pop
add
cmp
jb
push
jne
mov
loop
jne
jmp
sub
popf
cmp
jae
xor
aaa
jo
rcl
lock
fsubs
incb
aaa
pop
pop
jb,pn
gs
add
inc
lods
ljmp
in
mov
mov
clc
and
cmp
mov
aas
inc
mov
dec
pop
iret
popa
xchg
loope
lcall
mov
xchg
mov
pop
add
stos
ljmp
into
jne
out
clc
insl
mov
push
pop
outsb
leave
inc
test
inc
and
inc
push
pushf
mov
sub
icebp
sbb
fdivrl
push
test
mov
add
test
sbb
iret
add
dec
cmp
into
in
rcll
inc
mov
decb
jne
dec
repnz
jp
or
sub
dec
mov
pop
pusha
dec
bound
dec
push
and
jo
push
clc
into
xor
sub
jns
jp
pop
mov
mov
inc
mov
mov
das
pop
xor
mov
jge
inc
or
jge
jle
push
or
dec
hlt
pop
adc
jl
push
inc
push
inc
or
push
mov
mul
mov
orb
or
lock
scas
inc
repz
and
sbb
mov
lea
loop
ret
sbb
sbb
pop
xor
pop
add
sbb
leave
es
rorb
xor
push
adc
adc
aam
cmp
adc
test
inc
cmp
push
or
mov
push
inc
mov
in
mov
cmp
data16
add
mov
dec
cmp
sub
add
push
sbb
mov
mov
xor
mov
fistps
sbb
jae
rolb
push
mov
push
sti
add
adcl
in
jle
ret
js
sub
pop
lock
jae
loope
or
pop
lcall
inc
pop
mov
nop
xchg
inc
sub
in
orl
imul
and
dec
dec
out
outsl
mov
or
dec
push
pop
push
push
mov
shrb
jae
fstl
push
sub
sub
ss
lods
loopne
and
xor
mov
or
popf
jbe
sbb
or
aas
mov
pop
push
inc
dec
jle
xor
mov
mov
add
cltd
adc
mov
dec
and
loope
shll
aas
and
sbb
sub
sbb
or
adc
adc
punpckhdq
inc
test
out
inc
cmp
push
inc
push
test
adc
mov
insl
push
jbe
dec
movsb
adc
cmp
adc
fistl
or
mov
mov
iret
pop
jns
je
nop
sub
and
outsb
xchg
cmpl
fmull
mov
mov
cmp
push
dec
dec
jmp
add
pop
dec
add
jae
cmp
inc
jmp
pop
movl
cs
dec
adc
dec
cmp
pop
inc
cmp
jne
push
rcll
out
dec
popf
sbb
inc
out
pop
scas
jmp
je
lods
mov
andl
add
nop
and
aas
rolb
xor
sbb
or
adc
cmp
lds
jnp
jmp
push
das
or
mov
mov
aas
or
shll
ja
les
mov
test
push
cmp
or
imul
pusha
fiadds
add
hlt
mov
ds
loope
sar
xor
xlat
pop
jecxz
ret
shlb
inc
sub
rcrb
js
xor
outsl
inc
testl
sbb
into
adc
dec
adc
movl
jle
jge
cmp
hlt
cmp
je
movl
sbb
sbb
mov
inc
or
xchg
shlw
or
push
adc
fldt
jecxz
and
sbb
mov
inc
gs
xor
push
sbb
cmp
or
or
test
stos
add
fmull
in
fsubl
outsb
cmp
fildl
insb
adc
push
addr16
outsl
push
push
xor
adc
sub
jns
ret
gs
mov
shll
pop
and
test
ja
enter
cs
cld
cmp
je
movl
push
out
call
fsubs
in
lds
sbb
hlt
jecxz
push
mov
lcall
push
lock
and
sub
mov
testl
mulb
jl
ljmp
jecxz
cltd
dec
lock
adc
incl
clc
orl
sbb
lea
push
cmpsb
adc
add
adc
mov
fstpt
mov
mov
push
shll
aad
mov
int3
cmp
aad
xor
aam
push
xlat
push
push
test
movsb
int3
jl
fs
ljmp
jg
add
sahf
sbb
add
add
pop
jb
dec
jb
and
or
lahf
orl
cmp
call
stos
stos
sbb
ja
ja
xor
mov
push
cwtl
cmp
in
jnp
push
xchg
mov
add
fldl
lret
lret
push
fs
jne
mov
or
sbb
mov
mov
inc
cmp
or
adc
cltd
inc
inc
or
mov
add
push
and
jae
pop
push
and
cmp
push
inc
lcall
jns
jno
gs
sbb
loope
lods
dec
sahf
movsb
in
mov
sbbl
adc
xchg
xchg
fldt
sbb
xchg
xchg
xchg
xchg
sub
xor
mov
movsb
xchg
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
pop
pop
aad
adc
xchg
dec
xor
mov
and
pushf
mov
movsb
test
inc
pop
test
jns
jo
mov
cmp
sub
add
movsb
pop
mov
xor
jle
dec
dec
imul
lods
adc
mov
or
adc
sbb
sbb
mov
imul
psrld
xchg
cmp
insb
pop
ret
adc
daa
in
jne
js
inc
pushf
dec
and
cli
or
cmp
je
inc
dec
jne
out
mov
mov
add
movsb
sarb
test
sbb
xchg
or
and
or
push
daa
icebp
mov
cmpsb
stc
push
jp
push
xor
mov
movsb
push
mov
rolb
xor
fcmovne
mov
jne
aad
mov
aad
sahf
push
jmp
mov
hlt
xor
add
jne
mov
inc
add
push
jmp
jecxz,pn
sbb
outsb
out
pusha
out
inc
sarb
rcr
mov
cmp
push
mov
mov
pop
sbbl
and
cmp
icebp
lea
repz
pop
xchg
xchg
mov
xchg
outsl
sbb
arpl
cmp
pusha
fdivp
jnp
mov
dec
sbb
je
xchg
and
jle
push
and
sbb
cmpb
jne
in
jno
xchg
mov
stos
or
test
ss
rcrl
push
lea
jmp
scas
lea
dec
inc
sub
add
sarb
jb
imul
insb
mov
add
cmp
lret
push
add
jo
testb
es
clc
and
xchg
jb
out
dec
or
mov
cmp
aaa
pushl
mov
in
mov
sti
or
je
mov
add
ss
sti
pop
sub
je
push
or
add
sarb
mov
sbb
rep
cmpsb
mov
pusha
pushl
mov
mov
push
mov
call
push
je
dec
je
aaa
mov
cmp
sub
sub
mov
mov
rorb
push
xchg
mov
pop
pop
xchg
inc
jecxz
pop
add
daa
pop
mov
and
in
rorb
push
sbb
scas
cmpsb
dec
xor
add
and
sti
pop
popa
insb
mov
aam
inc
pusha
jne,pn
sbb
rol
inc
andb
cmpsl
mov
dec
shr
pop
cs
jge
or
push
pop
mov
fsubr
fisttpl
outsb
jo
sub
je
pop
sbb
push
push
dec
add
lods
sub
pop
in
jo
addb
loopne
nop
or
mov
sub
adc
fs
jecxz
sub
addb
mov
lcall
and
jmp
add
sub
push
sahf
pop
pop
dec
xor
pop
test
jo
xchg
insl
movl
pop
dec
das
test
mov
shrb
iret
sub
ret
add
push
push
js
mov
xchg
arpl
fs
dec
aam
mov
movsb
sbb
repz
push
push
mov
jb
scas
cmpb
sbb
sub
push
daa
adc
ret
aam
lret
mov
adc
or
inc
les
push
div
jne
pop
push
jmp
and
mov
add
pop
fldenv
ds
adc
pushf
cmp
cmp
imul
adc
mov
roll
subb
jl
and
or
adc
adc
jle
cld
jmp
or
adc
imulb
mov
adc
sbb
rcr
rcll
mov
sar
sbb
jle
and
push
mov
hlt
xchg
rolb
in
lods
add
jge
aas
lret
pop
xor
jbe
push
pop
les
fs
lods
in
nop
ss
or
imul
out
jb
dec
mov
icebp
mov
pop
push
into
or
cld
js
outsb
ja
orl
dec
out
cmp
dec
mov
es
jb
mov
push
cwtl
sbbl
push
pop
into
dec
xor
sub
out
xchg
or
xor
xchg
fdivl
push
adc
pop
movlps
sbb
jl
dec
push
inc
mov
rclb
cmp
push
hlt
mov
aaa
sub
or
loopne
movsb
mov
popa
jmp
cmpsl
xchg
pop
pop
and
lods
imul
add
dec
xchg
fnop
xchg
pop
insl
push
mov
rolb
xor
pop
inc
daa
mov
dec
jo
mov
ret
push
in
lahf
pushf
jnp
lahf
pop
pop
nop
sbb
dec
es
mov
pop
adc
enter
cmpsl
and
loop
adc
cltd
adc
jae
mov
rorb
jne
or
ret
add
or
adc
push
leave
push
mov
cmp
push
sub
mov
shll
shrl
mov
ja
sbb
loop
dec
je
push
jmp
adc
adc
add
mov
int
mov
and
rorl
stos
and
xor
inc
xorb
lret
jbe
mov
push
pop
adc
inc
pop
sbb
fwait
cmp
inc
mov
cmp
mov
adc
fidivs
sub
or
pop
add
add
notl
test
cmp
jecxz
push
fwait
inc
shr
add
mov
inc
cli
pusha
sbb
cmp
cs
test
xor
insl
mov
imul
push
jl
push
sbb
pop
rcrl
imul
imul
mov
or
adc
hlt
mov
ret
pop
in
pusha
fs
dec
and
in
add
inc
call
push
or
das
cmp
dec
jle
cmp
ss
xchg
dec
inc
das
je
sub
imul
or
ret
adc
mov
lock
jb
sbb
fmuls
sbb
push
push
popf
pop
jg
outsb
divl
sbb
adc
nop
jp
insl
cmp
cmpsb
inc
push
sbb
mov
inc
add
je
push
pushf
cmc
add
inc
mov
pop
mov
dec
and
ret
xchg
fsubrs
jne
adc
fstl
xchg
outsb
mov
addr16
clc
inc
push
fisttps
sub
cmpl
mov
leave
or
out
jecxz
inc
mov
pop
xchg
xor
xchg
or
jno
mov
pop
outsb
mov
clc
pop
adc
aad
mov
shlb
mov
scas
aaa
rorb
js
ja
lret
mov
and
jbe
dec
clc
bound
pop
adc
sbb
adc
add
and
popf
pop
repnz
cmp
cmp
arpl
lret
and
loopne
add
or
jnp
int
lock
xchg
lahf
lret
adc
in
jb
jno
or
add
or
add
push
int
dec
cmp
jp
cmp
lods
push
mov
adc
insb
cmpsb
jle
cmpl
push
ljmp
pop
insl
or
jge
inc
inc
out
xchg
aas
lock
jle
xor
loopne
sbb
add
pop
cmp
or
sub
sub
mov
fisttps
inc
adc
cmp
push
xor
dec
adc
pop
cmp
je
cmp
and
mov
or
adc
push
push
add
add
lds
sub
pop
xor
or
nop
hlt
mov
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
xchg
repnz
ror
dec
adc
sbb
jb
movsb
cmp
inc
add
pop
and
and
mov
aaa
or
fsts
mov
inc
push
sbb
sbb
xor
sbb
xor
dec
popa
dec
jge
into
mov
ret
jo
xlat
insl
jnp
adc
mov
pushf
push
dec
xchg
aas
cmp
jns
aas
xchg
hlt
aam
inc
xor
sbb
add
js
js
jle
push
or
ljmp
and
xchg
adc
mov
std
jae
jp
pusha
or
inc
add
jle
test
jo
pop
es
push
push
roll
xor
push
cwtl
mov
cld
and
push
dec
movsb
into
xor
pushl
dec
cmp
push
mov
jb
dec
test
or
je
mov
inc
jg
pop
fcoms
push
in
leave
jne
shll
testb
popa
cld
jmp
push
xlat
xor
js
iret
or
add
mov
sbb
pop
push
push
mov
imul
mov
xchg
call
xor
add
push
in
cmpsb
and
xchg
jmp
push
dec
jne
cmpsb
mov
xor
mov
dec
cmp
cmp
jg
cmp
or
adc
mov
test
clc
std
movb
je
jg
cmpb
std
add
xor
sub
mov
pop
testb
push
push
push
push
sbb
mov
pushf
outsl
int
call
rorb
mov
cli
or
inc
outsb
push
adc
pushf
lock
mov
bound
leave
je
xchg
ds
mov
mov
jbe
test
in
je
mov
aaa
sbb
xchg
out
push
cmp
ja
add
cmp
push
and
jns
ret
cmp
jne
pop
int
test
fidivrl
std
jb
neg
mov
into
leave
icebp
add
dec
sbb
adc
or
ja
hlt
xorb
jne
clc
stc
inc
lcall
stc
and
inc
or
push
in
sbb
daa
int
push
test
inc
dec
loope
or
adc
rorl
nop
cmp
jmp
inc
in
pop
dec
cmpb
inc
or
and
pop
push
pop
jb
mov
push
aaa
neg
pop
pop
fdivl
or
loope
cmp
addr16
jecxz
mov
mov
cmp
sbb
test
adc
push
loop
andl
jle
cli
sbb
xlat
jle
add
mov
sub
or
adcb
jge
lds
ss
jl
inc
je
mov
stc
stc
add
push
icebp
add
aam
js
enter
mov
dec
push
hlt
dec
sbb
loopne
loope
jb
jne
mov
test
insl
add
inc
jae
inc
add
jmp
cmc
sbb
or
mov
aad
shrb
loopne
fs
fistpll
xlat
mov
je
mov
cmp
jb
cmp
jbe
inc
inc
mov
xorb
call
jle
sbb
lds
mov
sbb
jo
jbe
or
loope
into
inc
sbbl
jbe
push
push
or
and
fisttps
test
mov
mov
or
push
daa
push
rorb
mov
pop
test
mov
movsl
loopne
pop
sbb
test
pshufw
in
mov
jmp
push
je
xchg
in
add
jle
pushl
and
in
aad
pushl
rcr
fldt
push
xor
mov
aam
jecxz
pop
and
or
fcomps
adcl
mov
fstpl
xchg
inc
pop
jge
sbb
roll
test
mov
lret
outsl
shl
sbb
hlt
daa
fmul
dec
cmp
sbb
dec
repnz
jmp
test
jp
dec
push
inc
lea
pop
or
mov
cmp
add
inc
add
xchg
mov
and
loopne
shlb
jle
stos
mov
adc
push
test
pop
cmpsb
nop
dec
push
sbbl
cs
sub
inc
adc
push
push
push
ja
aas
jo
mov
sub
sti
aam
push
ret
test
imul
sbb
xlat
aaa
dec
jmp
add
mov
adc
push
fsts
arpl
insb
pop
sahf
pop
mov
push
dec
xor
mov
inc
xor
or
pusha
mov
cmpsl
mov
jecxz
lods
dec
mov
jmp
xor
push
lahf
adcb
xlat
push
jne
push
sub
cs
les
pop
fcompl
pop
fsubrs
push
pop
sub
push
in
and
push
sbb
pop
jge
push
inc
pop
mov
mov
les
adc
mov
test
add
mov
pop
jo
mulb
enter
cmp
movsb
sbb
dec
rcll
sub
cmc
incb
xchg
sbbb
fimuls
xor
xor
iret
cli
adc
lock
cs
add
jb
jl
jb
lea
gs
enter
test
or
mov
mov
pop
nop
cmp
popf
pop
iret
and
stos
dec
popa
loopne
jmp
scas
call
lods
jge
fisttps
mov
sbb
in
jne
sub
js
icebp
inc
jmp
and
mov
inc
pop
xorb
push
sbb
add
ret
inc
js
jae
dec
xchg
sbb
inc
sar
push
push
fiaddl
fcompl
pop
mov
icebp
dec
nop
mov
add
mov
inc
and
mov
enter
stos
xor
hlt
sti
push
and
push
mov
in
or
xchg
sub
sub
push
xchg
add
stc
pop
xor
push
loopne
loopne
push
popa
adc
mov
add
jmp
or
and
hlt
cmp
cmp
arpl
jp
shl
inc
xor
mov
cmp
je
movzwl
es
loope
sti
test
or
loopne
jne
dec
jmp
and
cmp
pop
scas
pop
push
or
ds
push
aas
adc
jns
push
fs
push
jmp
jns
xchg
test
lea
pop
ret
and
fs
or
mov
pop
sbb
movsl
mov
push
sub
scas
push
mov
fsubs
ret
shl
push
adc
xor
xor
lret
dec
loopne
add
stc
xor
pop
adc
jo
and
mov
je
add
add
test
jne
lods
add
cld
ret
test
sub
cmp
je
mov
popf
out
dec
jb
adc
xorl
outsb
or
cmpsb
xor
mov
out
and
mov
jb
fsubr
add
movsb
jb
push
clc
sbb
dec
and
push
mov
into
flds
cld
jle
add
dec
or
push
movsb
ret
or
fldt
rorl
and
jb
outsb
cmpsb
int3
pop
jp
push
push
mov
jl
mov
pop
dec
into
pop
ret
sub
js
mov
and
jmp
dec
popa
mov
ret
sbb
ja
pusha
pop
cwtl
xchg
aas
popf
mov
mov
mov
inc
mov
sbb
rcl
and
aam
push
inc
push
mov
mov
push
outsl
enter
aam
dec
push
and
sub
pushf
insl
popf
mov
movsl
lods
push
movsl
into
daa
xor
ja
push
insb
stc
repnz
mov
jb
or
mov
inc
and
aam
mov
dec
shl
add
cld
xor
jmp
mov
aam
mov
xchg
mov
daa
dec
mov
or
sub
call
idivb
pusha
mov
pushf
aas
and
imul
adc
dec
in
inc
mov
cmp
es
lods
add
mov
insl
popa
jnp
mov
movl
pop
add
mov
incb
or
add
push
ljmp
xor
bound
and
insb
outsl
arpl
imul
ljmp
dec
js
inc
jae
je
outsl
jp
bound
arpl
jo
push
dec
dec
push
jb
ljmp
inc
jbe
pop
je
jae
inc
inc
jns
pop
jno
addr16
imul
pop
inc
arpl
jmp
push
pop
inc
bound
push
push
jae
outsl
outsl
push
arpl
jbe
insl
je
dec
push
popa
in
mov
decb
jae
inc
push
cmpsb
push
jns
arpl
imul
inc
push
addr16
jae
js
dec
imul
jo
push
outsb
push
jp
push
lcall
cld
dec
dec
jae
imul
arpl
dec
push
gs
push
insb
push
dec
inc
popa
dec
imul
rorb
fs
jbe
jo
push
je
push
jae
js
pop
push
insl
dec
pop
ljmp
sub
jne
push
push
jbe
push
jbe
jo
push
ja
jbe
ja
gs
outsl
push
insb
jb
push
jo
dec
push
jns
push
addr16
push
push
fs
insb
jp
dec
push
sti
jg
push
insl
jo
insb
push
jne
inc
imul
jns
imul
push
mov
bound
ret
call
outsb
dec
dec
push
pop
je
pop
addr16
push
push
inc
jb
dec
inc
inc
jg
fists
pop
jo
inc
jb
push
push
dec
js
inc
jns
gs
dec
bound
inc
dec
aaa
jl
orl
jo
push
imul
mov
js
jno
dec
dec
jo
bound
sub
pop
inc
fs
imul
jns
push
inc
popa
dec
fs
push
bound
cmp
sbb
mov
add
in
ljmp
inc
push
pop
insb
jae
jns
push
imul
loop
dec
jno
insb
add
lods
fs
imul
pop
add
ja
push
dec
push
push
stc
aas
mov
outsl
dec
outsb
insb
bound
dec
jae
outsl
and
ja
sub
ss
and
lock
addr16
xchg
push
pop
mov
push
sbb
jb
outsb
aas
mov
xchg
popa
js
outsb
outsb
gs
and
and
sub
sbb
push
dec
lret
xchg
gs
sub
lods
pop
das
pusha
mov
push
shrl
fisttpll
mov
sahf
jb
addr16
inc
jb
xchg
int
pop
gs
pminub
push
cs
fcomps
jb
cvtps2pd
ja
in
sbb
push
jbe
cs
and
scas
stos
imul
fs
xor
cmc
lcall
pop
ja
outsb
insl
popa
jo
imul
or
sbb
pop
add
inc
or
test
je
enter
addb
js
dec
dec
cmp
xchg
jbe
xor
cmc
push
sahf
ljmp
add
add
jmp
fcompl
iret
jmp
call
pop
dec
push
lahf
or
push
dec
inc
pop
jnp
inc
inc
cmp
xor
sub
mov
xor
inc
or
xor
aaa
sub
xor
inc
aaa
inc
sbb
jge
jo
push
jb
gs
xchg
add
roll
mov
xchg
mov
dec
add
in
or
outsl
ja
and
arpl
mov
push
cs
mov
jl
enter
inc
outsb
mov
adc
push
outsl
movsb
je
dec
and
push
add
out
cmpb
add
add
add
cwtl
fadds
inc
or
pushf
gs
je
cmp
pop
inc
xchg
xchg
mov
rcrb
or
adc
adc
push
call
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
pushl
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
ljmp
stos
mov
pop
pop
pop
pop
pop
pop
or
popa
bound
data16
insb
insl
or
std
jg
jno
fidivs
ja
jns
jnp
jge
jg
cmp
add
add
stos
in
sub
dec
add
add
in
in
addl
mov
cmp
push
and
push
and
add
mov
inc
cmpsb
add
ja
stos
pusha
push
mov
dec
adc
aaa
add
pusha
inc
push
test
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
jmp
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
ljmp
adc
add
mov
ljmp
sub
imul
mov
outsl
outsb
push
jne
push
gs
push
push
popa
push
fildll
dec
popa
outsb
inc
bound
jb
jo
or
dec
add
inc
jne
push
mov
jo
arpl
jbe
xchg
jb
js
flds
lods
les
gs
insl
add
jg
mov
add
add
push
jb
outsb
je
insl
gs
push
test
and
jb
or
jge
dec
dec
push
push
and
inc
add
dec
dec
inc
and
push
ss
adc
inc
decl
and
jo
imul
in
dec
sub
je
gs
jo
and
insb
outsl
es
push
fadds
mull
mov
mov
out
insb
jns
or
xorb
fidivl
aaa
and
popa
arpl
jo
mov
sbb
xor
and
insl
push
addb
xchg
lock
loopne
xor
mov
jnp
pop
push
mov
rolb
les
pop
mov
insl
bound
and
and
idivl
dec
mov
sbb
jp
or
pop
es
notb
push
and
je
and
test
addr16
ds
fistl
loopne
popf
jb
je
outsl
mov
into
or
fcoms
sub
dec
imul
insb
jb
add
sbb
push
sbb
shll
mov
ret
mov
inc
xchg
sub
xor
out
xor
int3
gs
inc
inc
orl
lcall
pop
insb
popa
pop
mov
add
mull
fadd
sub
push
fistps
push
xor
cs
aaa
mov
xchg
shll
inc
jns
cmp
popa
sbb
data16
add
add
aaa
mov
scas
or
ja
outsl
nop
nop
imul
push
push
scas
xor
stos
fnsave
push
mov
and
cmp
mov
cwtl
shl
mov
je
in
inc
out
outsl
jo
xlat
outsl
push
hlt
xchg
imul
arpl
lcall
bound
push
inc
mov
insl
in
ljmp
adc
imul
pop
mov
imul
push
pop
in
inc
jno
sbb
leave
nop
sub
mov
jbe
fbstp
cmp
xorl
in
xor
dec
pusha
or
and
and
add
sub
push
jae
xor
and
ljmp
mov
jo
mov
fsubrs
dec
jb
push
sub
lret
inc
sub
jne
jo
pop
dec
jmp
movsb
in
pop
add
cmp
sub
jno
dec
jp
jne
ds
gs
fmuls
pop
push
dec
cmp
mov
pop
sbb
in
lea
mov
nop
xchg
add
mov
and
adc
push
scas
pop
dec
lock
inc
jbe
dec
bound
mov
mov
js
push
daa
inc
ss
movsb
sbb
js
and
fisubl
repnz
xor
mov
jo
ds
in
xchg
pop
xchg
or
daa
pop
push
and
push
jns
pop
mov
xchg
push
sub
jo
rcll
cmp
lcall
in
mov
jno
jbe
pop
mov
pop
pusha
inc
jbe
push
loop
jnp
push
lahf
fs
stos
rcll
fdivs
mov
and
cmp
push
and
push
and
mov
dec
dec
jmp
lock
test
cmp
pop
pop
push
push
jae
pop
in
or
cmp
cmp
sbb
gs
addr16
mov
das
pop
ja
inc
loopne
push
mov
inc
or
xchg
inc
push
push
push
push
dec
negl
data16
push
jne
repnz
je
outsb
pusha
ss
popa
mov
cmp
adc
dec
jge
adc
pop
imul
or
push
xchg
cli
pandn
stos
or
outsl
jae
nop
shll
xor
jg
popa
cmp
insb
dec
xor
jg
fadd
push
jns
pusha
push
or
push
addr16
das
je
sub
outsl
xchg
daa
xchg
mov
imul
es
cmp
push
das
push
sub
inc
jl
push
addr16
jle
fdivl
sub
push
push
cmp
cmp
cmp
add
add
sub
sub
sub
shr
int3
loopne
xchg
add
mov
jae
cmp
dec
test
rcll
into
je
lods
ret
fs
jb
imul
jo
ss
push
arpl
xor
cld
sbb
xor
cwtl
adc
ss
jo
sub
mov
jl
out
cmp
sti
outsb
sub
je
inc
add
push
dec
out
iret
repz
sub
adc
stos
mov
call
imul
push
clc
iret
repz
hlt
lock
call
repz
ror
enter
iret
repz
iret
lods
test
mov
repz
nop
mov
repz
iret
repz
insb
push
ds
repz
xor
adc
mov
fdivrl
lahf
out
sbb
mov
cmp
xchg
test
iret
repz
xor
add
mov
sahf
push
xchg
insb
inc
and
sbb
out
fdivrl
mov
ja
dec
dec
cmp
cmp
add
in
jne
and
adc
add
das
das
movsb
shrb
adc
push
dec
push
inc
test
test
or
gs
pop
mov
mov
je
mov
jne
cmp
outsb
gs
push
fisttpll
cmp
push
push
filds
mov
xchg
out
jae
xchg
xchg
addr16
cmp
mov
mov
and
jb
daa
push
clc
adc
mov
pushf
mov
xchg
and
cmp
pop
dec
inc
aas
add
pop
mov
mov
push
cmp
push
push
loop
mov
hlt
sbb
xchg
ss
arpl
stos
push
and
jne
daa
pop
lea
pop
test
outsl
js
fisttpll
pop
push
push
inc
push
ljmp
mov
mul
cwtl
push
mov
push
sub
cld
jns
int3
rorb
jb
les
add
test
and
sbb
inc
add
fsubr
mov
push
lds
mov
mov
outsl
add
push
push
sarb
scas
in
inc
cli
outsl
les
add
cmpsl
ja
lahf
das
xchg
out
int
cmp
push
fsub
pusha
mov
jbe
mov
pusha
int
out
sbb
sub
in
fwait
adc
les
cmp
imul
xchg
je
je
dec
sahf
or
and
je
shlb
mov
loopne
xchg
add
dec
shlb
and
xor
mov
cmp
push
stc
push
cli
xchg
data16
xor
add
mov
lret
lcall
adc
ror
repz
test
mov
dec
cmp
cmp
add
xor
mov
jne
dec
aas
pop
int3
lds
jns
fdivrl
ja
idivl
cmpsl
adc
push
push
jg
cs
and
mov
sub
cwtl
aaa
iret
lock
jo
inc
sbb
leave
mov
aam
cs
inc
iret
es
cmpsl
stc
jl
add
movl
jo
add
add
inc
adc
mov
or
push
pop
aam
xchg
in
jo
aas
xor
xlat
movsl
mov
test
push
das
pop
or
mov
aaa
xor
fs
fists
enter
cmp
movb
out
outsb
cmp
testb
outsb
bnd
mov
jbe
std
or
or
shlb
or
and
dec
lds
or
xchg
cmp
jno
out
pop
in
xchg
nop
and
hlt
enter
in
sbb
aas
mov
adc
pop
jo
adc
cwtl
adc
adc
shll
lahf
mov
mov
ror
cmpsl
in
sbb
push
sbb
out
mov
dec
repnz
pop
sbb
adc
xchg
pop
enter
imul
pop
shlb
sbb
jg
cs
nop
adc
lods
xor
xor
or
pop
pop
mov
inc
inc
inc
jg
stc
xor
daa
xchg
inc
cmp
das
cltd
nop
pop
xor
sub
loopne
repnz
add
pop
dec
pop
aas
jbe
pop
jne
popa
pop
jmp
outsb
aas
sub
inc
shrb
push
ss
cmp
pushf
mov
int
jns
add
jge
int3
shl
jns
aaa
add
push
int
xchg
negb
lcall
cmp
and
pop
shrb
or
adc
lods
int
push
adc
and
add
movsb
inc
jmp
adc
or
outsl
dec
jb
inc
jno
jno
jb
outsl
jmp
outsb
outsb
push
jp
inc
dec
inc
dec
ja
push
bound
jp
push
dec
imul
push
push
call
dec
push
outsb
push
push
dec
dec
dec
jo
jbe
inc
imul
jo
imul
jnp
pushl
inc
push
arpl
fs
push
inc
nop
insl
push
jne
dec
dec
je
push
dec
dec
dec
in
push
call
outsb
pop
je
arpl
inc
ja
popa
pop
dec
dec
jne
data16
jo
pusha
push
jg
cmc
sbb
push
sbb
push
jne
dec
push
call
inc
push
addr16
dec
push
js
jno
inc
ja
dec
push
dec
popa
jp
popa
addr16
dec
push
test
dec
inc
inc
push
inc
imul
mov
jbe
jp
dec
insl
addr16
jb
dec
imul
inc
addr16
jo
popa
push
push
inc
outsb
mov
clc
dec
push
imul
popa
data16
jo
inc
bound
inc
imul
inc
inc
gs
inc
imul
dec
test
push
dec
add
push
push
imul
in
push
dec
jp
cmp
fsubl
add
es
inc
jb
jbe
xchg
sti
mov
jle
rcll
clc
lcall
push
out
or
pop
dec
and
sbb
or
insb
sub
jmp
lcall
aaa
push
add
push
push
and
add
inc
inc
testl
inc
rolb
enter
dec
fiaddl
adc
sti
shll
and
lea
outsl
push
leave
lret
sub
dec
push
and
sbb
repz
pusha
jae
inc
out
sub
jns
cs
push
xchg
addr16
xchg
insb
inc
inc
jmpw
repz
or
push
pop
jle
cmp
sub
repz
sahf
and
imul
faddl
adc
xor
jmp
mov
pop
aas
adc
xor
dec
jnp
dec
dec
and
bound
xchg
fbld
dec
lds
pop
fstl
popf
push
adc
push
and
add
sub
add
decl
and
add
push
add
adc
add
cmp
add
sub
data16
aas
add
mov
mov
aam
inc
mov
pop
xchg
je
out
test
cmc
pop
test
push
mov
popa
xchg
push
cmpsl
cld
lea
scas
bound
mov
mov
scas
addr16
cli
jmp
insl
cmc
js
addr16
loop
push
fadds
dec
nop
rorl
movsb
jmp
addr16
xor
inc
dec
push
mov
stos
and
xchg
jns
inc
dec
insl
imul
loop
cmp
call
push
je
outsl
clc
cmp
outsl
jp
outsb
xchg
mulb
push
push
imul
outsl
arpl
fs
out
lahf
lahf
jae
stos
imul
pop
cld
jg
pop
pop
inc
jo
dec
push
fnstenv
push
dec
stc
dec
jle
test
xor
jns
xor
scas
bound
insb
add
sub
and
cmpsl
stc
cmpsb
out
icebp
insl
push
lock
inc
orl
sbb
add
or
cmp
inc
push
pop
int
push
aas
fisubl
inc
mov
jl
dec
adc
push
pop
int
dec
jl
andb
out
sbb
xchg
inc
sbb
or
fidivl
inc
imul
movsb
inc
add
adc
adc
and
xor
int
adc
xor
addr16
mov
and
inc
jo
sub
xchg
movsb
inc
push
mov
test
inc
roll
mov
mov
jne
outsl
decb
ja
movsb
movsb
sub
and
orl
imull
decl
mov
mov
adc
jae
jecxz
mov
pushl
sbb
and
es
push
push
inc
pop
in
inc
cmpsb
rolb
or
push
addr16
add
lods
pop
stos
movsb
jo
add
xor
cli
outsl
pushl
xor
add
in
push
inc
imul
je
pushl
ss
out
mov
jnp
movsl
mov
lock
dec
loop
fs
sub
stc
pushl
add
imul
sbb
push
test
andl
xor
stc
jg
arpl
lret
call
cmp
andb
loop
lcall
ljmp
das
push
xor
sub
and
loop
incl
jmp
sbb
daa
or
xor
add
add
imul
enter
sub
pop
jecxz
jns
xor
mov
jg
incl
mov
decb
push
stc
cmpsl
cmp
das
xor
flds
jae
jns
and
push
push
mov
out
ret
dec
sub
es
jg
arpl
pop
jg
aas
shrb
inc
clc
or
pop
xchg
arpl
in
pusha
pop
mov
aad
aas
sarl
adc
cmp
loop
push
jp
and
adc
lods
sbb
jg
cmpsl
popa
decb
cmp
sub
and
and
mov
cld
ljmp
pop
push
pop
dec
sti
cmp
sub
insl
clc
or
es
xor
mov
push
stc
ljmp
xor
mov
ss
sub
mov
mov
repz
addr16
lcall
sbb
mov
xchg
imul
pushf
mov
mov
mov
stc
lcall
call
push
cmp
add
sub
cmp
push
addr16
lret
lcall
cli
xor
fstps
inc
push
and
pop
dec
imul
jmp
cld
jg
ljmp
insb
pushf
mov
arpl
stos
sqrtps
pop
inc
aaa
jmp
jns
mov
ret
add
adc
pop
cmp
fisubs
dec
jae
icebp
pop
in
cmpsl
xchg
ds
data16
std
inc
xlat
call
out
mov
shll
dec
incb
arpl
fbstp
loopne
jg
sbb
test
xor
pop
into
cs
addb
ret
call
mov
scas
and
out
mov
imul
dec
lahf
lods
add
icebp
jg
test
das
dec
jl
mov
cmp
xor
sub
mov
insl
pop
stos
mov
xchg
mov
xchg
or
add
jmp
push
jl
outsl
cmp
dec
ret
jge
xchg
test
data16
das
clc
mov
je
mov
mov
orw
mov
jae
pop
cld
call
inc
out
cmpsl
xchg
pushf
xor
or
scas
scas
aas
loope
addr16
jecxz
call
sbb
xor
inc
loop
jbe
lea
add
mov
mov
bound
in
and
ljmp
repnz
lahf
fwait
cwtl
les
je
fwait
scas
test
jae
mov
data16
outsl
sti
fs
pushl
and
mov
jp
and
pusha
out
mov
shll
divl
mov
loop
dec
jb
loop
bound
das
sti
in
dec
dec
cli
aas
adc
or
dec
inc
xchg
and
cmpsl
pop
mov
fwait
incl
jecxz
addr16
xchg
stos
mov
mov
cmp
mov
hlt
lcall
daa
testb
jp
mov
loopnew
inc
ret
in
aas
pusha
int
outsl
call
pusha
lds
decl
aad
dec
dec
mov
movsb
mov
add
and
sar
lcall
lahf
shrl
cmp
xchg
push
push
inc
mov
loop
push
stc
daa
int
jecxz
repz
cmp
inc
push
pop
andb
repz
jg
sbb
fs
sub
gs
xchg
shll
incl
cld
jbe
in
jmp
fdiv
jno
adc
mov
pop
dec
out
ljmp
pop
pushf
mov
push
mov
xor
lcall
xchg
cmpsl
sti
xchg
insl
mov
mov
mov
outsb
lcall
cltd
mov
sub
rcll
push
mov
mov
pushl
packssdw
or
and
cmp
dec
insl
out
jae
inc
call
out
testb
sub
xor
or
mov
jae
lcall
ja
subb
repnz
js
lods
insl
insb
addb
xchg
shll
sbb
add
inc
je
sub
es
fistl
bound
aas
sub
jb
leave
mov
dec
mov
jb
scas
push
jg
incl
inc
repz
xor
addr16
dec
cmp
decl
mov
dec
addr16
adc
popa
mov
jb
out
adc
cmc
fs
cmpsb
dec
push
fdivs
in
stos
pop
pop
xchg
add
adc
stc
or
lcall
nop
cmpsb
mov
mov
insl
jo
xor
adc
push
ss
cld
clc
mov
mov
adc
loope
insb
and
outsb
push
scas
clc
jg
xchg
push
inc
and
add
cmpsb
leave
sbb
dec
xchg
push
lea
dec
mov
int3
xor
and
pop
scas
push
arpl
mov
jmp
cmpsl
inc
ja
cmpsb
cmpsb
mov
xor
push
mov
xor
call
outsb
push
aaa
in
jp
clc
mov
push
scas
mov
cs
pop
arpl
cmp
or
mov
out
andb
andb
push
and
cmp
insb
jg
jecxz
in
pusha
mov
cltd
shll
mov
cmp
andb
inc
gs
push
sti
mov
xor
pop
mov
sbb
pushl
pusha
xchg
test
out
mov
outsb
fbstp
dec
adc
adcl
sub
sbb
push
jae
stos
imul
dec
inc
adc
pop
sub
cmp
shll
andb
mov
or
pop
push
fs
mov
and
lods
jl
scas
mov
outsb
jl
push
clc
sub
pop
int3
mov
jp
mov
mov
cwtl
mov
stc
add
mov
shlb
out
ss
out
int
call
dec
jb
cmp
out
cli
mov
jnp
js
and
or
mov
filds
push
inc
inc
adc
arpl
je
sub
inc
insb
cltd
test
cmp
fbld
inc
push
jno
lcall
shrl
jl
and
imul
rcr
test
cmc
loop
sbb
movsl
dec
mov
jo
xchg
insl
pop
jae
xchg
mov
push
jecxz
push
push
mov
inc
jae
fwait
inc
cld
dec
add
or
sub
xor
push
pop
mov
popf
xchg
movsl
sub
imul
mov
dec
arpl
fs
scas
dec
and
movsb
aaa
mov
mov
dec
and
pop
loope
and
mov
push
les
mov
out
xchg
mov
pusha
lods
dec
pop
out
push
cmp
sub
jns
xchg
rorb
out
loope
ja
outsb
sbb
dec
ss
mov
outsb
adc
incl
sti
cmp
call
into
inc
mov
push
dec
jae
add
fwait
cmpsb
add
daa
lret
add
mov
loopne
stos
test
fimuls
mov
mov
icebp
mov
loopne
jg
cmp
add
stc
repz
dec
inc
push
mov
push
add
mov
or
inc
frstor
inc
clc
jp
xor
jo
add
roll
dec
dec
ljmp
icebp
and
sti
mov
xor
cmp
push
jae
cmp
mov
int
and
add
push
xchg
movsl
cmp
fstpt
cs
call
dec
ss
mov
inc
flds
jg
decl
cli
and
insl
add
popa
jle
or
out
sub
gs
lods
stos
dec
jg
push
xchg
dec
xor
pop
cmpb
sbb
mov
or
sub
movq
inc
adc
mov
push
filds
jb
adc
loope
push
jmp
ret
incl
push
outsl
mov
mov
mov
dec
movsb
sbb
cmp
mov
push
stos
inc
push
push
enter
out
xchg
push
bound
or
jg
ja
test
addr16
and
jnp
cmove
lcall
cmp
scas
push
cmpb
shrl
lcall
insb
cli
mov
rclb
adc
jmp
imul
jmp
and
das
and
mov
lcall
lahf
out
clc
cmp
lcall
icebp
xor
aaa
jle
movsl
jl
inc
jae
jg
ljmp
dec
outsb
lret
ss
fbld
dec
and
mov
jne
jp
scas
cltd
ss
mov
cld
imul
jle
and
cltd
ret
mov
xchg
scas
mov
test
jae
mov
scas
imul
mov
addr16
testl
dec
sbb
aaa
inc
movsl
push
or
popa
loope
jb
xor
adc
sbb
mov
cli
sarl
sub
xchg
sub
jle
mov
ljmp
stos
ds
in
dec
jns
inc
clc
pop
push
xor
cmpsb
inc
adc
addr16
call
xor
sbb
push
cs
jae
jo
lock
ljmp
add
lds
mov
jp
sti
add
cmp
mov
insl
cmpsb
in
lahf
ss
jl
pushl
inc
dec
push
xor
sbb
add
out
pop
sbb
lret
rep
pop
inc
movsb
add
xor
push
pop
cs
dec
sub
or
or
xor
call
out
dec
adc
sub
sbb
outsl
cmp
xor
clc
sub
cmc
int3
arpl
aas
xor
cld
push
cltd
mov
gs
xchg
dec
iret
and
mov
in
inc
out
scas
pop
pop
pop
outsl
cmp
sahf
inc
jae
hlt
insb
push
lcall
push
mov
or
lods
ljmp
insl
jge
gs
push
pop
jle
pushl
pop
jl
dec
push
lods
jo
jne
mov
sbb
decl
insl
pop
in
push
hlt
out
cli
outsl
into
and
add
cmp
lret
jnp
jb
out
push
jb
leave
incl
pop
or
testb
add
outsb
sub
ljmp
add
outsb
inc
ja
jle
ss
push
pop
clc
ja
jmp
inc
dec
xor
das
push
xor
call
jle
arpl
sbb
xchg
insl
pusha
push
mov
pop
cmc
call
adc
and
out
adc
ljmp
cld
mov
out
xor
test
jo
sbb
push
popf
jno
add
cmpsb
mov
mov
mov
addr16
mov
notl
and
outsb
push
jmp
ljmp
pop
adc
add
and
xor
jge
fstl
mov
incl
xchg
xchg
mov
mov
movsb
cs
jle
jg
jg
cmp
das
popa
daa
sbb
inc
test
loop
dec
in
push
out
push
cmp
xor
lock
gs
cmp
xchg
ljmp
insb
ret
decl
cmp
aad
add
jmp
mov
je
dec
cltd
popa
jns
js
sbb
hlt
jmp
incl
push
in
dec
jbe
stos
mov
push
inc
repz
test
push
lock
push
push
addr16
mov
ljmp
insl
sub
adc
daa
dec
pop
or
cli
mov
leave
dec
sub
gs
js
mov
add
sub
and
pop
inc
lea
ficoml
test
mov
mov
dec
add
addr16
insb
pop
push
mov
mov
add
repnz
xchg
lods
out
lcall
decl
push
inc
push
inc
repz
sbb
jp
loope
inc
mov
out
and
push
nop
pushf
mov
xchg
ss
imul
xor
fcomip
out
clc
movsl
sbb
dec
and
out
outsb
outsb
adc
jmp
jmp
dec
sub
gs
cmp
cmp
jbe
aam
orb
sbb
xor
enter
bound
mov
js
inc
adc
ljmp
dec
js
movsb
fwait
jnp
mov
ss
add
push
outsb
xor
mov
call
ja
adc
mov
mov
incl
cmp
jbe
and
test
addr16
cmp
push
push
jnp
cmpsl
fmull
fidivl
cmp
ret
sub
daa
mov
ja
decl
cmpsb
xor
add
jb
adc
mov
inc
outsl
gs
ljmp
fisubs
test
mov
sbb
mov
or
stos
push
dec
outsl
clc
lcall
push
xor
or
and
sub
outsb
cmc
test
scas
cs
ja
hlt
push
sub
lods
das
pop
dec
addr16
mov
outsb
push
test
push
dec
jle
insl
cmp
vcvttps2udq
lea
clc
incl
imul
mov
ds
jle
xor
or
mov
lret
insl
and
cmp
sbb
dec
movsl
out
push
pop
xchg
cmp
jge
lea
jg
arpl
jg
jmp
hlt
mov
and
inc
subb
inc
inc
push
je
aaa
arpl
or
cli
js
adc
stos
ret
pusha
iret
sbb
pop
cmpsb
xchg
push
pusha
inc
push
mov
dec
dec
mov
xor
dec
jae
dec
cmp
dec
sbb
rcrb
in
mov
movsl
ds
add
push
movsb
mov
insb
inc
ds
xchg
cli
mulb
imul
inc
xor
ja
outsl
sub
push
ja
add
mov
add
gs
test
dec
add
push
push
inc
dec
add
push
sbb
lock
inc
add
jo
sub
dec
pop
lcall
bound
xor
imul
sti
cmp
xchg
pxor
push
int3
outsb
cmp
or
fwait
add
pop
xchg
shr
mov
out
cs
stc
enter
dec
push
lcall
cmc
cmpsl
push
push
dec
and
mov
push
jne
mov
call
dec
jle
stos
into
cmp
out
aam
out
xchg
insl
inc
mov
fistpll
movsl
cs
inc
pop
sbb
sbb
sbb
adc
jg
mov
adc
test
lea
cmpsl
gs
test
fdivs
jmp
xchg
cli
testl
les
jge
sub
out
push
imulb
jo
push
cmp
es
lret
into
pop
scas
leave
imul
xchg
out
dec
in
out
push
bound
dec
cmp
cld
jmp
jg
outsl
aas
shrl
add
jle
inc
mov
push
fimuls
cmpsb
push
lods
inc
das
arpl
orl
faddp
lods
das
pop
sbb
call
filds
jnp
in
loopne
fwait
stc
cmp
stc
lods
data16
into
inc
cmp
jg
mov
adc
bound
int3
cli
inc
sbb
xchg
pop
ss
scas
sbb
push
ja
cmp
xor
jo
or
xchg
and
orl
incl
fs
frstpm(287
inc
pop
imul
adc
pop
loope
dec
adc
dec
ss
decb
shll
lods
clc
sub
and
push
outsb
push
outsb
mov
lea
shll
movl
or
lods
lods
into
push
lret
xor
dec
inc
and
cmc
scas
xchg
push
or
sub
cmpsl
inc
dec
dec
aam
inc
ja
jmp
in
enter
arpl
and
pop
adc
test
sub
jo
rorl
call
aaa
jbe
es
inc
leave
xchg
insl
xor
movsl
out
push
stc
inc
arpl
and
imul
jle
and
add
cmp
xchg
outsb
jnp
mov
std
cmpsl
add
push
jle
dec
and
add
outsl
adc
sar
push
lcall
jle
jbe
imul
jge
mov
fcomip
cmp
lods
dec
jge
pop
lahf
dec
add
pop
pop
dec
push
add
and
jnp
lea
pop
inc
pop
ja
insl
adc
inc
cmpb
outsb
xor
sbb
fiadds
push
jno
scas
mov
sub
lcall
iret
lea
ss
int
inc
gs
sbb
pop
icebp
pop
cmc
mov
inc
push
movsb
jl,pn
jecxz
stos
stc
jl
into
mov
sbb
xchg
movl
push
inc
lods
enter
ljmp
sahf
or
and
and
call
push
test
lret
mov
mov
jmp
clc
mov
adc
pop
jnp
sub
lods
rclb
jmp
jg
lods
ja
andl
and
xor
aas
clc
or
mov
lods
pop
pusha
mov
in
loopne
data16
aas
cmc
jo
inc
mov
xor
addr16
gs
int3
mov
stos
jmp
mov
pusha
fcoml
cmp
jo
popa
call
jmp
and
mov
outsl
inc
or
fidivrl
decl
mov
add
or
out
les
add
out
sahf
std
xor
add
cmpsl
addr16
in
test
adc
mov
pop
out
add
arpl
and
test
pop
jns
out
cs
mov
call
add
jo
les
scas
dec
cwtl
popf
mov
push
cltd
lcall
pop
cld
out
mov
ss
mov
pop
adc
incl
das
fldenv
adc
shll
ja
fnstcw
jg
cmpsb
xchg
mov
mov
and
aas
and
popf
out
into
sbb
mov
nop
mov
nop
incl
xchg
cmp
imul
dec
loop
ret
sbb
je
fiaddl
movsb
pop
jg
sbb
jno
push
jb
loopne
inc
pusha
adc
jnp
call
jl
jg
xor
stos
lret
add
pop
ljmp
incl
stc
xor
lret
faddp
subb
jg
cmpsl
cmp
popf
sbb
scas
lret
jmp
pop
xor
cmp
xchg
mov
dec
mov
bound
push
push
out
push
inc
xchg
jns
in
js
jl
push
jne
decl
xor
mov
xchg
imul
adc
xorl
decl
pop
outsb
xor
and
and
loopne
push
jle
jle
pop
int3
mov
add
cld
jge
incl
aas
jbe
std
aam
push
mov
incl
out
or
cmpsl
int3
mov
popa
rolb
lds
mov
jmp
and
aaa
inc
push
jecxz
pop
data16
lock
xchg
adc
repz
fnstenv
shrb
mov
jb
and
sbb
lret
movsb
pop
aam
ss
or
cmp
mov
sub
call
pop
jle
gs
inc
inc
mov
cmp
icebp
add
mov
call
pop
je
mov
leave
and
leave
jbe
outsb
jae
inc
arpl
cld
adc
sarl
mov
cmpsl
in
andb
fwait
mov
cmpsl
cmp
adc
in
fildll
cmpsb
and
testb
mov
push
mov
aaa
ds
pop
es
xor
out
cmc
jg
decl
lea
mov
and
jg
pop
xchg
adc
outsl
mov
mov
insl
jl
sbb
mov
cmpsl
pop
xchg
xor
or
mov
xchg
xchg
push
aas
orl
push
hlt
sahf
inc
call
lcall
mov
out
imul
pop
jp
outsl
fildll
inc
jnp
fidivrs
inc
rcll
jecxz
push
jp
mov
jecxz
jge
call
ja
mov
pusha
mov
loopne
decl
repz
add
mov
mov
movsl
or
out
xor
mov
sub
mov
outsl
aad
cmp
adc
daa
out
dec
push
and
test
pop
xor
xchg
les
data16
cmp
jno
test
loopne
pop
cltd
pop
inc
sub
call
mov
cmp
imul
cmp
stos
jg
jg
inc
cltd
lods
adc
inc
bound
push
ja
stos
cmp
cmp
int
xlat
incl
psllq
push
pop
sbb
sbb
inc
out
test
xchg
pop
test
icebp
testb
loopne
jne
mov
subl
jp
and
sbb
or
inc
dec
frstor
push
lcall
arpl
pop
cli
movsl
xor
cmp
inc
loop
pop
mov
jnp
sbb
mov
jecxz
mov
into
test
jbe
in
aas
dec
jnp
test
fistps
or
jl
in
mov
xor
test
push
addr16
sub
or
adc
jb
dec
fucomip
push
bound
das
call
push
pop
roll
fs
pop
lds
ja
incl
test
outsl
sbb
jmp
decl
jae
stos
xor
mov
add
pop
das
or
call
mov
adc
cmpsl
pop
dec
cli
lcall
rcrb
outsb
repnz
jbe
lods
ja
lcall
sub
clc
add
in
gs
insb
ljmp
jbe
inc
scas
pop
xlat
add
mov
nop
in
les
sbb
xor
adc
or
das
insl
push
jmp
imul
and
add
dec
decl
add
xor
int3
push
repnz
mov
push
inc
out
js
incl
loopne
mov
out
jmp
out
push
pop
jae
sti
scas
fisubl
popa
cld
lcall
pop
hlt
mov
and
fldt
sbb
jmp
jmp
jo
aaa
sbb
ja
decl
cmp
aad
mov
push
jecxz
dec
jbe
lret
push
jg
ds
push
scas
jnp
jne
jmp
sbb
rcll
pushl
adc
mov
scas
out
in
std
xor
or
ret
imul
bound
jg
lds
inc
pop
adc
dec
xor
xchg
insb
push
je
adc
adc
out
jg
ljmp
inc
mov
jecxz
pop
push
jmp
cmpsb
incl
cld
in
xchg
inc
xchg
arpl
js
insl
mov
mov
in
stos
jnp
ljmp
into
jmp
cli
sub
nop
stc
popf
xchg
push
jno
in
dec
jae
sub
in
incl
push
repz
push
and
call
lcall
sbb
cltd
inc
call
pusha
int3
mov
dec
repnz
inc
fs
adc
xlat
pop
movsb
arpl
ljmp
pushf
sbb
popa
fldt
dec
lock
xor
and
inc
roll
lcall
push
inc
lea
ss
adc
jg
xchg
and
inc
adc
mov
je
das
sub
mov
lcall
fldt
outsb
lods
jle
push
adc
cli
and
call
std
sub
mov
cwtl
out
ss
call
push
in
pushf
pop
ds
stc
jl
ljmp
nop
push
lock
xor
fs
xchg
out
aaa
jg
mov
lea
inc
ret
adc
mov
xor
jecxz
xchg
cmpsb
scas
xchg
scas
sub
xor
std
push
lcall
out
mov
sub
pop
imul
fbld
outsb
ret
out
jmp
clc
sbb
mov
aad
lahf
add
dec
imul
sub
adc
cmp
lods
adc
fistl
cmpsb
into
mov
adc
dec
sti
lock
dec
test
popf
cmp
in
sbb
es
call
insb
inc
in
sub
add
ficoms
movsl
mov
sbb
insl
out
xchg
adc
sar
push
ss
inc
jb
fwait
push
xor
cmp
cs
sub
jne
sar
decb
js
jbe
push
xchg
gs
dec
aaa
clc
mov
mov
cmpsl
fbld
out
add
ljmp
aas
push
mov
bound
incl
popf
sbb
enter
outsl
sarl
mov
cmp
jg
bound
pop
popa
flds
cmp
jnp
movsb
add
push
lea
sub
lea
repnz
jge
in
mov
jnp
push
cld
sbb
pop
lods
adc
cmp
adc
cli
cmpsb
add
push
insb
aad
xor
in
jnp
jb
out
lea
jle
mov
push
mov
mov
sbb
mov
insl
ss
outsb
repz
scas
dec
push
ljmp
scas
sub
jle
call
mov
add
cmp
enter
xor
pop
sar
sbb
arpl
push
in
outsl
call
adc
xchg
or
sbb
addr16
scas
push
jne
outsb
and
adc
outsl
mov
inc
call
aas
mov
jp
in
dec
test
outsl
inc
arpl
lcall
popa
pop
rcrl
sbb
push
out
mov
mov
leave
daa
mov
outsl
mov
push
mov
mov
cli
jg
jmp
repz
int3
adc
pusha
clc
cmpsb
sbb
punpckhbw
adc
test
je
das
pop
out
aas
test
cmp
jae
in
out
ds
and
orl
stc
aas
pushl
aam
xchg
add
in
movsb
cld
mov
inc
jmp
mov
cmp
ja
sbb
xchg
xchg
pushf
sbb
or
fimuls
jp
jbe
mov
add
ljmp
add
in
lcall
mov
add
xor
cld
jmp
mov
jmp
jg
adc
and
je
lods
jmp
addr16
jo
pop
in
dec
adc
inc
scas
xor
adc
in
inc
test
imul
stos
pop
lret
jnp
ret
mov
je
xor
int
addl
xor
xor
incl
mov
mov
and
test
mov
xchg
pop
push
out
ss
std
int
fcos
mov
andb
enter
xchg
inc
mov
jecxz
push
jns
stc
and
pushl
mov
aas
push
inc
andb
iret
xchg
pop
dec
fwait
xlat
cmpsl
pushf
jg
cmpsl
sub
outsl
ret
dec
lock
pop
pushf
push
incb
lahf
into
and
mov
pop
addr16
or
mov
mov
scas
or
shrl
mov
jecxz
pushl
jecxz
insl
mov
fildl
xchg
daa
ficoms
pushl
ret
hlt
cld
dec
push
jne
loope
xchg
leave
push
mov
xchg
aas
pop
lock
xor
mov
es
jnp
sub
cmp
jno
pop
xchg
incl
push
pop
add
sbb
inc
dec
inc
lock
and
and
incl
pop
dec
out
pop
iret
scas
bound
inc
in
mov
inc
je
ds
das
inc
arpl
sbb
xor
stos
xor
xor
call
lock
loop
jne
adcb
or
add
fisubrl
add
sar
xchg
add
add
push
je
int3
and
decl
inc
std
mov
pop
or
js
dec
push
mov
mov
popf
lcall
outsl
pop
and
daa
outsb
jne
lock
leave
push
jp
or
xorb
push
je
sar
dec
inc
push
shrb
xchg
add
or
add
outsb
add
arpl
jmp
jmp
jb
or
adc
add
adc
popa
or
sbb
loopne
popa
push
mov
insb
dec
push
testl
push
pop
jp
in
lcall
or
xor
js
or
dec
int3
push
in
popa
pushl
outsb
pop
jnp
sarb
fs
pop
jno
enter
shlb
fwait
and
outsl
icebp
pop
decl
jne
push
jns
daa
dec
call
ffree
cmpsl
xor
and
pop
pop
ljmp
dec
push
imul
loop
inc
out
out
pop
jb
addb
or
mov
jge
mov
xchg
testb
xchg
testl
cmpsb
jne
test
out
push
cmpsb
pop
push
pop
and
cmp
rorl
call
es
insl
sub
jle
shll
push
mov
jo
ret
aaa
xchg
push
add
mov
sub
inc
out
push
iret
cmp
inc
outsb
clc
push
add
pusha
scas
lea
xchg
sbb
call
cmp
inc
xchg
xchg
mov
adc
push
or
outsl
es
and
push
xor
loop
repz
clc
enter
in
aaa
outsb
fs
or
push
xor
jnp
outsb
lods
out
pop
lret
cmp
in
incl
and
ret
adc
in
pop
out
stos
mov
in
ljmp
sbb
inc
sti
das
jle
cmpsl
lcall
cmpsb
adc
ja
decl
xchg
xchg
cmp
mov
mov
out
cmp
fbstp
push
cltd
push
out
jno
jl
jne
test
mov
stos
test
out
insl
xor
and
xor
lock
lds
pop
addr16
incb
pop
push
ss
jmp
std
sahf
hlt
push
jbe
pop
jb
outsb
decl
outsb
sbb
or
mov
popl
jmp
outsb
push
add
scas
xor
outsb
xor
pushf
mov
mull
in
lcall
adc
imul
pop
or
jbe
pushf
inc
sahf
rcll
xchg
js
std
and
loope
jmp
dec
bnd
push
cmpsl
xor
cmc
cmp
orl
push
xor
out
push
lcall
push
fwait
push
pushf
mov
add
push
mov
jmp
and
in
cmp
stos
sbb
jl
push
dec
in
push
jnp
pushf
test
push
out
mov
sub
or
ds
cmpsl
inc
push
loop
ds
shr
loop
out
insb
jmp
adc
js
mov
jmp
inc
ret
es
insl
enter
pusha
xchg
outsb
mov
jecxz
out
jb
arpl
clc
cmpsb
xchg
insl
in
dec
cmc
mov
scas
lcall
stc
or
movsb
mulb
or
dec
ljmp
cmovp
sahf
jp
jne
clc
or
mov
cwtl
xor
loop
outsb
and
lahf
js
xchg
mov
es
inc
xchg
jmp
imul
mov
jbe
fisttps
dec
aaa
fbstp
inc
dec
es
cwtl
popa
ss
push
cmc
push
std
loope
insl
fs
dec
add
sub
lea
dec
in
jns
mov
int
bound
xor
xor
lods
lahf
sar
pop
add
inc
inc
data16
pushl
sar
loop
es
jge
cvttps2pi
ret
add
xchg
neg
or
lret
fldt
xchg
adc
aam
in
pop
jmp
cld
aaa
in
push
inc
jb
out
fmull
int
fildl
popa
fwait
lea
insb
cmp
outsb
mov
cmp
dec
aas
out
outsb
inc
jecxz
pushf
cli
je
dec
push
hlt
xchg
call
adc
aas
insl
pusha
mov
jg
movl
adc
fnstenv
dec
sbb
mov
ret
imul
fs
popf
cmp
push
cld
dec
sub
lods
cld
pop
inc
cld
pushf
mov
mov
insl
add
add
gs
scas
add
std
mov
outsb
outsb
mov
repz
addr16
ss
sub
jecxz
pop
pushl
movd
sbb
mov
pop
cmpsl
data16
loop
add
in
aam
dec
push
jns
adc
adc
lahf
out
ljmp
sbb
bound
pop
testl
fcoms
test
xor
mov
loop
mov
jle
in
inc
dec
cmp
aaa
popa
ja
cmc
push
cld
lahf
sbb
cmpsb
leave
jb
mov
clc
aaa
cmp
repnz
inc
pop
out
insl
rorb
and
cmp
mov
pusha
ljmp
cmp
jo
incl
jle
mov
mov
sbb
incl
jo,pt
mov
sahf
xchg
lcall
or
ljmp
enterw
or
orl
data16
inc
dec
pop
test
jl
arpl
scas
cmpsb
jle
mov
sbb
cmp
push
bound
outsb
mov
dec
fmull
into
xor
pushl
xor
subl
cmpsb
out
fucomp
cld
iret
pop
les
outsb
or
xor
cs
stos
idiv
jmp
lcall
adcl
call
xor
imul
dec
inc
cmp
cld
call
std
xchg
mov
jge
dec
addb
pop
popa
out
cmpsb
insl
xchg
out
out
loopne
or
popa
or
cmpsb
add
out
push
test
les
xchg
inc
sbbb
and
das
lret
fildl
xchg
loope
jno
mov
cltd
cmp
mov
or
mov
add
inc
in
nop
ss
sti
xor
test
jle
xchg
shlb
test
lcall
js
add
repz
pop
add
cmp
dec
dec
aaa
cld
mov
jg
mov
into
add
jne,pn
mov
ret
and
ja
mov
pusha
push
out
push
push
enter
call
cld
js
sahf
xchg
xorb
ss
and
into
ss
dec
jmp
jno
clc
ljmp
xchg
data16
push
loope
test
mov
and
out
mov
xchg
mov
mov
test
sub
mov
subb
lahf
or
inc
loopne
jns
fs
xor
ret
in
mov
mov
xor
sarl
pop
lea
neg
ja
push
mov
call
enter
sbb
xor
popa
test
cmp
ljmp
lods
push
push
push
and
call
xor
mov
in
xchg
out
cs
adc
dec
push
xor
adc
repz
cmp
mov
ja
and
mov
outsl
jp
call
outsb
and
cmp
add
pop
decb
cmp
lock
hlt
fstps
js
adc
mov
subb
push
fbld
movsl
arpl
andb
lds
push
mov
cmp
and
xchg
clc
push
call
xchg
imul
xor
mov
orb
mov
dec
ljmp
and
push
jl
adc
cwtl
dec
xchg
xchg
movsl
xor
jno
dec
dec
out
scas
add
fnstsw
imul
mov
mov
xor
add
ret
cmp
stc
insl
pushl
and
arpl
adc
sti
and
les
mov
sbb
inc
and
int3
add
ljmp
mov
fwait
mov
and
add
outsl
lods
pop
mov
xchg
clc
dec
in
push
pusha
lods
cld
aaa
fs
mov
ljmp
dec
ds
inc
or
xor
mov
push
dec
fs
int
fcomip
scas
clc
outsl
ljmp
jae
int
push
dec
ficomps
test
add
decl
or
and
adcl
xchg
mov
cmp
mov
mov
bnd
incb
ljmp
sub
jnp
mov
mov
xchg
es
push
loopnew,pt
cmp
mov
xor
aas
leave
incl
cld
fwait
sub
arpl
idiv
and
cld
mov
jg
fstps
push
mov
into
xor
jae
in
mov
incl
ljmp
in
pushf
mov
cli
scas
test
xchg
jnp
sbbl
pushl
push
mov
call
mov
xchg
xchg
push
lcall
imul
sub
xor
test
add
or
cld
pop
call
pop
mov
adc
popa
inc
fists
jl
xor
sub
sbb
es
xor
sub
cmp
decl
cmp
outsb
addr16
push
sub
or
loope
jb
pusha
repz
mov
jg
call
gs
inc
lock
nop
mov
pushl
rcrl
push
push
sarl
dec
clc
sbb
jmp
mov
bound
add
stos
outsl
or
mov
and
ljmp
lods
mov
mov
or
and
mov
ds
arpl
sti
sub
invd
std
cmp
int
sbb
xchg
add
stc
lcall
fwait
jnp
pop
mov
push
pop
xlat
mov
ret
test
dec
dec
je
lahf
jg
test
dec
mov
mov
dec
ret
push
movsb
sbb
out
mov
xor
clc
stos
jnp
mov
insl
push
enter
in
xchg
insl
dec
decb
dec
jae
popf
fwait
ljmp
rorb
add
out
adc
mov
and
push
pop
test
inc
repz
out
add
xchg
sbb
rdmsr
cld
pop
rep
push
sub
imull
pop
inc
aas
sub
pusha
xor
ss
and
stc
iret
ljmp
sub
hlt
daa
jge
add
imul
inc
jo
cs
daa
xchg
pop
lahf
mov
scas
aas
sub
stos
push
arpl
adc
movsb
and
sahf
sbb
and
int
imul
inc
dec
ret
xor
pushl
scas
push
arpl
call
aaa
dec
das
mov
mov
mov
cmp
adc
cld
aas
sub
sub
stos
outsb
stos
dec
lahf
jg
ljmp
add
jb
je
sub
adc
decl
jo
roll
xlat
loopne
lods
cs
idivl
aaa
push
adc
out
data16
repz
dec
sahf
rcll
jb
mov
outsw
and
clc
pop
add
and
mov
pop
sti
addb
popa
test
dec
mov
lods
adc
lods
mov
clc
ljmp
inc
stc
movsl
push
push
add
fildll
jae
inc
add
mov
arpl
inc
test
stc
out
out
sbb
inc
loope
dec
test
push
dec
xchg
stos
das
test
insl
push
roll
es
icebp
cmpps
nop
or
jg
rcr
pop
add
cs
jle
cmp
or
frstor
jmp
and
inc
mov
push
dec
jo
loop
pop
scas
incl
dec
roll
push
dec
in
adcb
lcall
mov
push
in
push
arpl
and
and
clc
addb
sub
outsl
enter
dec
loopne
push
sub
dec
cmp
jb
test
pushl
andl
and
or
cmpsl
nop
or
cmpsl
jae
cmp
mov
dec
popa
mov
cs
js
and
dec
inc
pop
jp
lock
mov
out
mov
push
filds
std
and
inc
mov
stos
cs
cli
test
call
mov
mov
xor
insl
dec
andb
cmp
dec
push
jbe
pop
xchg
pushf
lods
leave
and
inc
in
leave
mov
cmp
sahf
add
sbb
cli
cmpsl
dec
hlt
mov
jns
das
jg
adc
dec
rorl
inc
loop
call
sahf
clc
out
cli
jmp
and
clc
adc
pop
movsb
addr16
push
incl
jp
pop
lea
loope
movl
sub
mov
incl
insb
int
jae
pushf
popa
xchg
ja
daa
push
pop
mov
jno
cltd
inc
mov
inc
cld
or
std
test
push
std
jne
push
addr16
iret
ret
scas
jecxz
jl
pop
mov
cs
call
call
out
jle
mov
popf
inc
clc
sbb
ljmp
push
add
popa
popf
or
adc
filds
jmp
and
xor
push
out
sub
ficomps
jg
or
out
inc
jecxz
adc
movsb
push
gs
cmpsb
clc
and
jmp
inc
shll
push
dec
pop
inc
sahf
outsb
fisttpl
call
test
outsb
mov
clc
xor
xor
mov
and
lret
nop
int3
jo
scas
aas
adc
xchg
subl
ljmp
shlb
hlt
nop
adc
mov
add
and
je
movsl
imul
fidivrs
or
xchg
test
imul
out
ss
out
icebp
test
je
mov
decl
dec
pop
and
jp
and
jge
sub
loop
fnsaves
lds
daa
sub
testl
jg,pn
dec
shll
jo
push
dec
cmp
mov
call
mov
fwait
decl
lock
jmp
mov
in
repz
push
lock
int3
cmp
jnp
gs
mov
adc
push
call
loope
addr16
mov
int
ljmp
addr16
insl
daa
jo
es
pop
inc
roll
jb
mov
es
lahf
jge
ljmp
incl
inc
push
frstor
clc
and
ja
sub
rclb
pop
nop
in
pop
jns
inc
jle
pop
push
dec
dec
test
inc
cmc
testb
decl
ret
ds
ret
mov
in
jmp
sti
inc
fildll
push
dec
push
mov
je
push
inc
dec
pushf
std
dec
cwtl
cmp
cli
push
loop
adc
loopne
clc
decl
dec
jge
dec
inc
test
loope
push
popa
jecxz
inc
dec
pop
add
push
insb
mov
mov
sbb
adc
fldenv
push
loope
cld
add
clc
notb
inc
out
lret
fwait
add
out
mov
push
in
pushl
mov
pop
mov
pop
or
in
dec
jnp
xorl
pushl
lcall
scas
dec
popa
ds
std
dec
out
pusha
jmp
jecxz,pn
add
in
sub
mov
push
mov
imul
call
imul
inc
mov
lret
lods
adc
jge
nop
inc
loop
or
ja
cmpsb
jo
push
lods
push
out
lcall
cmpb
addb
adc
jnp
test
jg
incl
jecxz
sbb
arpl
adc
sahf
pop
bound
mov
decl
dec
dec
outsl
xchg
or
jno
mov
and
cmp
jg
incl
imul
inc
xor
jne
inc
mov
pop
xlat
mov
jbe
sarl
cmp
ss
dec
stos
dec
cltd
or
int3
ss
dec
sahf
jb
decl
out
and
insb
mov
pop
cmp
es
pop
xchg
sbb
popa
loope
jno
sbb
cmp
jg
loopne
jb
das
and
sub
jmp
and
subb
pop
loopne
cmp
jg
movsl
inc
jl
aad
dec
sahf
mov
lahf
sub
adc
nop
aaa
jbe
jmp
dec
dec
imul
pop
cs
outsb
fistps
jg
cld
stc
xchg
mov
dec
add
xchg
dec
inc
dec
cmp
bound
sahf
mov
call
incb
incb
pop
sti
sahf
pop
les
xor
out
add
fnstenv
jle
pop
enter
pop
pop
mov
cmp
je
xor
jmp
imul
jge
push
shll
gs
cltd
fldenv
add
lock
into
xor
je
dec
js
and
sbb
hlt
fistpll
cmp
incl
mov
test
and
insb
or
inc
xor
incl
push
adc
xor
into
mov
lahf
mov
leave
adc
addr16
fcomip
jg
or
imul
ss
jecxz
frstor
je
adc
sbb
jno
sub
mov
adc
xchg
dec
decl
jbe
mov
jns
call
xor
je
cmp
ja
outsb
pusha
ja
cmpsb
ret
adc
cwtl
sbbl
cmpl
lock
sbb
cmc
sbb
pop
icebp
pop
lock
adc
sbb
xlat
add
ljmp
add
jmp
sub
sbb
movsb
mov
mov
push
jl
es
pop
jecxz
push
lods
and
mov
inc
inc
cmpsl
cmp
stc
incl
in
bound
sbb
dec
pusha
loope
push
push
cmpsl
jecxz
mov
pop
cmp
cmc
cmp
sbb
or
in
lds
dec
scas
mov
push
int
add
dec
dec
pop
dec
out
ds
add
push
movsl
icebp
cwtl
jg
pop
cmc
xchg
add
xor
call
outsb
loop
pop
out
andb
jg
or
insb
out
out
jp
adc
dec
jmp
or
jl
sbb
orb
outsb
or
jmp
roll
dec
in
sbb
xor
mov
lcall
ljmp
shrl
dec
lret
push
inc
aas
ds
or
loopne
push
pop
sbb
lret
cmp
inc
rorb
out
jl
mov
cmp
adc
out
aas
add
or
clc
or
pop
xchg
stos
ss
cld
inc
dec
cld
push
sbb
push
jae
xor
cmpsl
jmp
lcall
cmp
and
dec
xor
cmp
out
pop
sub
xor
adc
or
ljmp
popf
sub
loope
stc
xchg
xorb
nop
adc
adc
scas
sbb
call
cmp
or
xor
jae
mov
ljmp
addr16
and
mov
clc
adc
cmp
xor
enter
cmp
jle
push
dec
insl
pushl
inc
jmp
xor
push
cmp
fnstenv
imul
mov
ljmp
punpckhbw
xchg
lea
fwait
cwtl
dec
adc
inc
jne
inc
xchg
and
mov
ja
decl
jle
or
cmc
mov
push
add
push
pushf
push
lcall
xchg
outsl
iret
mov
jge
xorb
imul
mov
mov
movsl
xchg
std
cmp
inc
inc
mov
cmpsb
jmp
add
bound
ljmp
mov
mov
stos
or
add
test
cmp
pop
insl
push
adc
dec
cmp
pop
sbb
insb
inc
popa
and
cmp
pop
ds
cmp
je
ss
decl
add
sbb
add
pop
or
imul
adc
pop
outsb
sub
outsb
cmc
jnp
sbb
loopne,pt
jg
push
inc
sbb
add
sbb
outsb
sbb
stos
mov
mov
clc
xor
jg
pop
shlb
pop
nop
sbb
jne
mov
stos
outsl
sub
cmpsb
imul
mov
sbb
mov
outsb
dec
in
dec
jmp
pushl
out
mov
loope
push
jne
stos
jo
jnp
pop
inc
jp
ljmpw
inc
call
stos
mov
ljmp
xchg
out
pop
add
push
or
cmp
aas
cmp
ss
inc
sub
movd
jge
xor
sub
add
aaa
inc
jg
jbe
pop
jge
xchg
ss
pop
push
jb
xchg
add
push
call
pop
sub
mov
sub
mov
xor
push
rol
lcall
in
cmpsl
outsl
jbe
rcr
mov
or
into
cmpsb
cmp
or
ds
sbbb
in
xor
repz
sti
xor
pop
mov
jle
das
pop
jno
push
jns
jb
aas
push
inc
and
aas
pushf
mov
or
jmp
in
jo
sbb
xor
adc
aam
and
push
adc
stos
pop
sub
pushf
sub
subl
cmpl
jl
aas
loope
rolb
and
push
inc
xor
cmp
fnstcw
sarb
cmp
enter
xor
xor
xor
inc
test
outsl
mov
mov
aas
outsb
push
sbb
sbb
dec
jmp
jb
cs
dec
sub
and
movd
push
test
pop
xchg
pop
mov
adcb
pop
mov
mov
rsm
stos
mov
mov
push
push
lods
loop
dec
xor
addr16
aaa
jle
adc
jecxz
jno
pop
icebp
pushl
add
adc
dec
xor
shrb
push
jbe
mov
fs
rcr
fimuls
add
stos
mov
sbbb
lret
mov
aaa
xor
sbb
mov
out
insb
aaa
ss
test
andb
xchg
scas
cs
incl
pushl
mov
pusha
inc
nop
out
push
sbb
aaa
jl
and
call
adc
or
push
and
and
loop
push
jmp
xor
inc
pushf
inc
jae
es
dec
cmpb
sub
and
clc
mov
out
test
inc
inc
pusha
and
stos
daa
pop
gs
cmp
loopne
fcomip
incl
adc
dec
mov
in
test
mov
cmpsl
adc
or
stos
ljmp
jne
add
cmc
dec
into
ss
cli
mov
call
sub
es
adc
stc
sbb
leave
mov
jl
add
es
dec
lret
dec
imul
test
ljmp
fbld
daa
jg
stos
jg
push
jno
inc
mov
pop
ljmp
inc
dec
insb
loopne
es
jbe
mov
inc
lcall
jmp
mov
mov
xchg
test
addr16
jmp
and
mov
clc
sub
xchg
lods
je
test
mov
hlt
call
insb
or
mov
subb
xchg
push
sahf
mov
fists
adc
dec
test
lods
mov
mov
scas
test
mov
sti
pop
xor
insb
sbb
push
mov
orl
cld
incl
cmp
xchg
loopne
gs
pop
push
repnz
loopne
jge
cmpsb
out
mov
add
cli
aaa
mov
mov
popa
mov
mov
mov
sub
push
adc
dec
es
decb
pop
xor
lea
jo
dec
dec
add
icebp
lcall
mov
js
lods
imul
js
cmpsb
or
mov
lcall
jno
jl
push
mov
out
out
subl
inc
adc
and
call
jecxz
jg
sarb
pop
push
cmpl
jmp
imul
test
jno
push
cli
push
gs
cmp
aaa
dec
or
das
xor
lcall
adc
shll
sbb
sbb
or
sbb
jne
je
into
inc
mov
clc
mov
fs
add
mov
stos
insb
je
or
stos
daa
cmp
cmpsl
leave
mov
clc
jmp
fnstcw
mov
pop
inc
popf
out
dec
shr
pop
dec
sti
cmp
push
pusha
stc
sub
das
jle
lret
mov
jae
push
xchg
mov
insl
dec
insl
filds
inc
push
inc
jmp
out
xchg
dec
push
inc
outsl
aam
outsl
inc
mov
push
insl
push
inc
dec
pop
in
push
xchg
lods
mov
jns
mov
inc
push
dec
scas
sub
jns
test
stos
fwait
cmpsl
xchg
mov
adc
lcall
scas
sbb
jge
mov
dec
repnz
dec
lahf
stos
or
cld
js
cld
fistps
test
mov
xchg
mov
push
test
mov
inc
lcall
ja
jb
mov
dec
lods
std
or
push
xchg
popa
cmpb
sbb
mov
call
ljmp
lcall
rcll
mov
pop
inc
inc
jbe
mov
fcomip
add
mov
xchg
mov
mov
daa
dec
xor
iret
daa
arpl
inc
dec
mov
lret
adc
test
imul
iret
test
jo
repnz
mov
data16
and
pusha
push
outsl
insb
out
std
cs
and
int3
cmp
or
mov
js
cmp
and
xlat
adc
cmp
cld
arpl
and
xorl
and
cmp
stc
add
xor
sbb
fwait
testl
nop
pushl
mov
out
pop
and
sbbl
xchg
pop
mov
push
std
jg
jecxz
testl
adc
ret
in
fs
jmp
daa
dec
and
add
pop
mov
jbe
xor
mov
loopne
popa
ss
push
jo
daa
push
xor
daa
or
inc
arpl
ljmp
out
jle
loope
je
mov
mov
outsl
outsl
flds
lcall
and
das
pop
movsb
and
jne
leave
xchg
fcomip
incl
pop
cmp
ja
in
ja
mov
mov
jg
std
inc
shll
xor
idivb
sub
cmp
jnp
mov
cli
cld
stc
or
shl
sbb
push
inc
sub
mov
test
mov
cmp
cmpsl
in
pop
cmpsb
mov
mov
jle
xchg
js
add
xor
jl
mov
inc
in
jg
sub
orb
dec
fildll
mov
push
xchg
stc
aas
dec
incl
cld
ljmp
pop
pop
xor
adc
dec
jp,pt
or
dec
cli
std
cmp
and
std
daa
jp
cmp
mov
mov
repz
push
incl
dec
popl
sub
movsl
dec
leave
ss
xchg
and
aas
pop
stc
and
inc
les
pop
sarb
cld
pop
mov
xor
ss
addr16
inc
arpl
push
cli
aas
cmpsb
cmp
add
adc
add
scas
cli
cwtl
jb
jo
addb
sub
xor
sbb
push
and
and
fwait
sbbl
rcl
jecxz
sbb
dec
int3
jecxz
inc
into
inc
xchg
decb
movsl
incl
cmc
dec
hlt
das
mov
push
and
jo
jle
icebp
jg
out
push
dec
fbstp
jno
mov
jg
mov
cs
mov
dec
loopne
popf
adc
roll
data16
sbb
push
cld
mov
mov
xchg
lahf
jno
sarb
in
dec
jecxz
es
in
pushf
lcall
mov
jns
incl
jg
bnd
aaa
jno
sbb
sti
mov
clc
xor
shrl
ss
pop
outsb
and
daa
outsb
xor
cld
aas
ss
sbb
inc
inc
push
inc
lret
sub
jle
add
mov
ja
jbe
out
push
jmp
int
xor
call
out
cmovo
or
xor
mov
jo
pop
dec
fsubl
pop
cmp
es
mov
xchg
mov
iret
lods
adc
ret
in
inc
cld
mov
add
sbb
lods
ljmp
cmc
aas
outsb
xor
outsb
sbb
add
stos
repz
outsb
test
push
or
push
imul
jns
and
aaa
push
das
mov
mov
ret
iret
inc
sbb
ljmp
adc
jge
scas
pop
je
loop
out
cmpsb
push
jle
jmp
sbb
data16
incl
inc
push
cli
jg
mov
push
cmp
into
push
push
sub
outsb
push
insb
fldl
popa
push
ljmp
pop
adc
mov
push
ja
decl
inc
sbb
ds
dec
mov
shlb
cmpsb
adc
mov
add
sub
test
out
dec
out
rcrl
add
repnz
repnz
mov
stos
ffreep
adc
inc
std
sbb
xor
push
xor
outsl
xchg
sub
xor
fistpll
loope
insl
jg
ds
inc
out
adc
rcll
fistl
add
jbe
sbb
lods
and
popa
lretw
adc
pop
out
es
sar
incl
aaa
mov
adc
jl
and
loope
jb
ljmp
leave
aaa
mov
rorb
jecxz
jmp
push
shl
ficoms
aas
ret
fwait
repnz
dec
outsl
push
inc
push
fldcw
jae
call
imul
mov
movsb
dec
cmpb
aas
into
out
xor
inc
push
lcall
enter
add
push
push
outsb
and
or
adc
loopne
fmuls
ljmp
add
or
xor
out
pop
jb
int3
test
aaa
add
fiaddl
roll
ss
sub
std
fsubrl
mov
dec
add
adc
push
outsb
repz
fimuls
fsts
iret
ljmp
ret
test
aad
int
sarl
dec
mov
das
into
jae
fdivs
fidivrs
outsl
jle
xor
fstl
ljmp
fistpl
push
inc
pop
xor
mov
push
shlb
mov
test
out
mov
mov
push
ljmp
fiadds
cmp
pop
cmp
cmpsb
cmpsl
jb
decl
pop
cmp
fucom
in
mov
cmp
jp
incb
add
call
cmpsb
icebp
pop
and
fdivrs
adc
sbb
jle
or
push
out
lahf
add
push
movsb
das
pop
ljmp
xor
mov
call
int3
cmc
inc
icebp
outsb
leave
mov
push
or
fldt
es
addr16
cltd
mov
jl
adc
add
aas
jb
loope
icebp
xchg
lock
push
in
jle
dec
adc
fabs
inc
es
sarl
loope
dec
push
cmpsb
sti
jge
inc
mov
int3
push
enter
cs
outsl
loop
ret
and
sti
jg
pop
loopne
outsb
fistpll
nop
pop
push
negl
enter
xchg
test
push
cld
addr16
xor
mov
ret
push
iret
inc
mov
adc
pop
push
xor
das
push
lea
out
dec
std
add
cli
cmp
je
mov
or
in
push
call
movsl
jb
cmp
jl
jl
dec
sbb
mov
out
in
dec
fsubr
lock
jo
sub
arpl
mov
mov
jl
in
lahf
subl
into
daa
xlat
dec
lea
fcomip
arpl
outsb
xrelease
repz
dec
push
pop
cmp
jp
call
ds
push
dec
call
test
inc
repz
ds
arpl
jg
outsl
add
ljmp
jecxz
sub
jecxz
in
imul
jecxz
pop
int
jmp
iret
sub
xor
cli
and
and
mov
mov
inc
out
ljmp
inc
ljmp
ljmp
ja
jns
ret
sti
mov
sbb
xor
cwtl
adc
push
jb
cmp
outsl
fdivrp
pop
dec
in
outsl
rol
int
in
ljmp
jecxz
dec
ror
stc
adc
out
cli
in
push
pop
mov
dec
mov
stc
push
jns
jp
dec
aas
cmpb
mov
jbe
mov
sub
xor
dec
jae
add
and
push
sbb
cmp
sub
and
scas
jo
jg
fisubs
in
xchg
xor
sbb
je
pop
loopne
ljmp
bound
scas
sub
test
outsb
cmp
mov
jo
call
jl
imul
add
mov
imul
cmpsl
pop
mov
or
xorl
les
add
arpl
es
outsl
adc
xor
ja
movsb
and
add
and
fisubl
call
inc
movsl
and
jbe
scas
jbe
dec
andb
mov
cwtl
cmp
and
sbb
add
aaa
lods
lahf
sar
and
roll
cmpsb
cmp
ljmpw
lcall
dec
popa
pop
mov
cmc
or
daa
sub
or
std
ds
sub
lds
je
test
mov
cli
jg
jl
mov
insl
mov
stos
mov
inc
sbb
out
sbb
adc
into
xchg
xchg
fildll
sub
test
loop
mov
ja
lret
out
adc
andl
and
decl
inc
rcll
std
jl
push
out
push
inc
frstor
incl
in
faddp
jne
ret
aas
push
aaa
shlb
data16
jnp
cmp
lcall
jge
or
sbb
inc
dec
sub
movsb
lret
cmc
and
lods
js
push
jae
sarb
sbb
and
xchg
nop
and
cmp
cld
cwtl
cmpb
clc
or
dec
pop
addr16
jmp
clc
xchg
xchg
hlt
out
clc
incl
popa
cli
xor
hlt
jge
sub
in
add
xor
mov
outsl
push
xchg
mov
add
stc
gs
bound
in
ljmp
xchg
dec
xor
lcall
jle
scas
push
test
sbb
lods
pop
lea
and
dec
push
fwait
mov
das
fmuls
push
jae
inc
jo
aam
bound
lock
cld
pushl
in
dec
push
cld
arpl
cmp
sbb
sbb
jl
outsl
mov
or
arpl
rclb
scas
cli
pushl
dec
cs
inc
sahf
jecxz
jne
lods
push
dec
in
xchg
adc
push
add
dec
xchg
push
push
aas
in
mov
jg
mov
xor
out
in
push
nop
pop
gs
xchg
outsl
mov
roll
sub
loopne
cli
jmp
and
jecxz
dec
pop
xor
mov
push
out
push
ja
ret
pop
ja
loopne
jecxz
popa
call
push
sub
push
add
dec
and
or
jae
std
decl
notb
insl
fildll
jle
ljmp
jo
clc
cmp
add
xchg
ja
inc
in
pop
pushf
mov
cmp
sub
xor
pop
loopne
dec
ja,pn
add
imul
jg
cmp
out
insl
clc
push
out
jb
call
jmp
cwtl
out
jo
mov
stc
xchg
cld
xchg
xor
mov
cmpsb
jecxz
inc
les
insl
cmp
sub
dec
sbb
arpl
aas
dec
jg
stos
addr16
mov
ds
into
jnp
sub
sbb
loopne
sar
and
adc
mov
call
outsl
es
jecxz
cld
mov
and
testb
ljmp
enter
jl
sub
jnp
sub
pushf
jg
mov
loopne
pop
ja
cmpsb
andb
in
and
into
movsb
ds
dec
rcrb
push
jmp
test
arpl
std
adc
adc
ja
inc
cli
cmp
daa
rcll
jo
add
fistpll
xchg
lcall
adc
and
jg
add
xor
lret
xchg
in
es
push
imul
lcall
clc
lret
xor
rcrb
stos
sub
out
ja
fnstcw
pushf
mov
popa
idivl
cmovl
rorb
pop
dec
ljmp
and
mov
mov
sbb
sbb
test
sub
inc
clc
sbb
repz
lods
nop
sti
mov
lods
pop
aas
or
dec
shlb
aas
loope
pusha
cmpsb
cmp
and
out
and
pop
clc
test
test
jnp
xchg
xchg
rcrb
dec
movl
jns
sbb
lret
dec
ss
je
call
mov
sub
mov
push
mov
sahf
sub
push
jne
loop
and
in
sbb
jl
stc
xor
js
or
cmp
ljmp
aas
lds
std
mov
mov
adc
mov
add
out
xchg
and
scas
es
sbb
clc
mov
bound
jg
mov
xchg
daa
jb
and
test
insb
loop
insl
ret
in
pop
int3
inc
daa
in
aas
sbbl
mov
sbbb
cmpsl
push
xor
add
jg
aaa
data16
jle
xorb
mulb
add
mov
dec
ffree
outsl
and
ja
movsb
int
pop
cmp
aad
jp
push
jb
inc
push
mov
xor
out
mov
push
cld
pushf
pop
mov
mov
ss
sbb
cld
cmp
fs
mov
dec
mov
mov
daa
repnz
inc
sar
pushl
dec
nop
sub
mov
push
std
and
and
mov
mov
sbb
stc
adc
mov
jo
pop
push
ret
inc
mov
jl
test
cmc
fwait
pop
in
cmp
aaa
enter
dec
jge
pop
stc
or
adcl
out
scas
lods
pop
icebp
decl
push
mov
jnp
loopew
mov
jmp
into
cmp
sub
aas
cmpsb
out
hlt
or
sbb
arpl
je
ja
inc
cmp
out
movsl
mov
jge
inc
cmp
push
bound
push
inc
test
scas
das
jne
decb
std
decl
xchg
mov
or
lret
mov
jecxz
loopne
jg
jge
xchg
xor
sbb
sbb
sahf
lcall
push
repnz
incl
punpckldq
mov
jp
add
stos
dec
out
pop
add
lcall
push
loope
js
ja
push
push
ds
shlb
xchg
faddp
scas
cs
in
pop
dec
fs
mov
xchg
clc
xor
xchg
add
xor
inc
cmp
aas
test
dec
test
pop
mov
es
push
lock
mov
decl
push
sarl
push
loop
push
dec
push
fwait
and
pop
push
out
test
movsb
push
lret
xor
call
adc
and
inc
insb
dec
addr16
mov
and
pop
mov
outsl
jns
fldt
outsl
fs
dec
add
mov
sar
cld
ljmp
xor
and
jecxz
mov
jg
test
les
jo
iret
clc
push
pop
push
loope
aam
std
xor
pushf
out
mov
out
cli
int
pushf
out
mov
push
mov
arpl
lods
fsubl
push
push
or
lods
push
mov
sbb
mov
xor
int3
xor
xchg
nop
xchg
jmp
xchg
mov
out
xchg
pop
pusha
loope
enter
jecxz
lcall
add
icebp
call
push
fcomp
lea
or
cmpsl
jp
les
push
xor
out
ljmp
ss
pop
cmp
imul
jmp
pop
mov
cmpb
jo
mov
and
jg
sbb
sbb
lods
mov
mov
inc
mov
jmp
das
push
inc
subb
push
jnp
xor
or
inc
push
add
cmp
pop
aaa
in
jbe
out
sbb
das
add
mov
lock
stos
push
movsl
aam
ds
or
jecxz
push
cmp
sub
add
jge
test
int
sub
push
jle
repz
dec
and
pop
adc
out
data16
movsb
mov
xchg
mov
das
ficomps
mov
xor
cmpsb
mov
cmp
xorl
fwait
arpl
scas
or
daa
test
cld
ljmp
push
mov
adc
and
mov
sub
out
dec
fsubrs
out
mov
or
dec
test
lahf
loop
lds
jl
and
xchg
sbb
push
jg
mov
test
incb
sbbl
sub
mov
cld
stos
popa
push
es
adc
ja
cltd
jmp
xchg
push
leave
ja
sbb
call
lock
lods
inc
cmc
fwait
sbb
sbb
lret
xor
arpl
dec
push
out
sbb
call
rcll
push
repnz
push
fstpt
popa
in
mov
lcall
fs
outsl
out
pushf
int
pop
xlat
cmpsb
mov
rclb
roll
in
idivb
mov
sub
jns
sbb
fcompl
and
mov
jbe
mov
lds
icebp
pop
hlt
sub
push
clc
or
dec
mov
cs
leave
in
hlt
filds
fildll
add
push
mov
ljmp
pop
scas
clc
xchg
lcall
stc
mov
out
sbb
pusha
repnz
nop
test
lahf
notb
or
call
aaa
dec
jecxz
dec
imul
adc
cmp
stos
cmp
dec
stos
lds
pop
in
xchg
sub
and
push
cli
add
adc
mov
hlt
adc
xchg
ja
pop
mov
and
arpl
pushl
sbb
cmp
pop
in
push
inc
out
popa
push
ret
inc
int3
push
jbe
sar
lcall
fwait
mov
pop
hlt
pop
lods
addb
xchg
adc
lcall
in
pop
loopne
jae
adc
shrl
jmp
imul
lcall
or
cs
xorb
pop
decl
repnz
call
aad
orb
mov
xor
jle
cmc
push
push
push
pop
jp
cmp
and
mov
call
ljmp
pop
jno
into
sbb
sbb
xchg
call
jl
js
jae
pop
dec
loop
pusha
push
cmp
loopne
aaa
jmp
add
call
sub
jbe
daa
jnp
scas
clc
stos
jno
popa
imul
in
movsl
cmp
cmpsb
mov
mov
inc
push
pusha
aas
jnp
inc
les
fwait
ja
std
cmp
icebp
xchg
in
mov
add
lcall
imul
jmp
sub
push
mov
insb
shlb
dec
mov
ficomps
sub
add
out
ljmp
insl
call
push
mov
jno
jp
lock
into
jge,pn
test
and
mov
push
data16
lods
inc
je
xchg
sub
xchg
jle,pn
dec
mov
xchg
nop
xchg
test
xchg
js
out
scas
out
jb
add
call
cmpsl
lock
lret
mov
sbb
fs
lock
decl
outsl
and
andl
in
xor
and
sub
sub
adc
incl
push
push
push
fwait
addr16
inc
jns
jg
mulb
addr16
pop
lret
ss
addr16
loop
ffreep
inc
add
dec
fwait
inc
mov
push
loopne
pop
outsb
jge
outsl
mov
ret
out
repz
jle
jnp
out
or
inc
call
jmp
push
add
inc
in
dec
cmp
pushl
js
inc
out
xchg
add
imul
and
outsb
jb
cmp
jns
and
incl
mov
in
in
xchg
cmp
loopne
es
sti
cmpl
orb
and
push
inc
lock
mov
or
addr16
dec
cmpsb
dec
arpl
or
push
out
es
jp
mov
sub
inc
inc
mov
neg
jnp
inc
push
jg
lods
adc
jnp
cmpsl
and
xor
das
arpl
add
dec
shrl
hlt
cs
test
mov
add
mov
mov
cmpsb
fsubp
lods
icebp
cs
push
xchg
sub
pop
aas
adc
in
mov
mov
xchg
mov
nop
add
fidivrs
pop
mov
es
divb
adc
jle
pop
subb
fcmovu
popf
ds
push
in
scas
add
fwait
sbb
sti
sbb
cwtl
pop
out
or
xor
cmpsb
outsl
mov
fdivr
and
pushf
shrl
enter
sarb
das
mov
inc
cmp
fidivs
ljmp
xchg
push
jb
testl
adc
popa
push
mov
shlb
outsl
idivb
test
inc
sub
pusha
pop
jnp
into
incl
fwait
push
ret
nop
lods
xchg
cmpsb
jbe
movsl
adc
inc
adc
out
ss
push
adc
inc
fildl
mov
insl
sarb
iret
pop
stos
inc
lods
jmp
call
incb
jl
ljmp
xor
mov
or
push
mov
pop
stc
incl
sbb
push
cwtl
in
xor
pop
aam
mov
outsb
pop
ds
add
lods
push
sbb
out
mov
or
in
popa
repnz
jo
pop
or
loop
cld
out
les
mov
ss
test
xchg
mov
pop
sbb
fistps
stos
ret
ss
push
jne
shll
test
ja
xor
and
cmp
adc
push
out
test
mov
inc
inc
rep
enterw
scas
inc
sbb
add
xchg
dec
int3
nop
mov
into
mov
cltd
fwait
int
fwait
lahf
mov
dec
sbb
or
jae
outsl
call
mov
fsubp
xchg
push
in
outsb
push
jbe
push
mov
lret
out
cmpl
mov
and
gs
out
sbb
and
cmp
jno
xor
jnp
cmp
xor
pop
or
repz
js
paddw
inc
ret
mov
ja
dec
fs
push
loope
add
test
das
jbe
adc
pop
mov
jle
jb
pop
enter
ja
insl
xor
lcall
pop
mov
jb
out
jbe
fistl
ret
lds
jbe
es
xor
filds
ret
xor
out
push
jecxz
push
mov
mov
cmp
es
ljmp
push
push
in
out
mov
test
jmp
pop
aas
das
xor
mov
xlat
decb
iret
and
in
or
cltd
decl
incl
xchg
push
or
std
jbe
mov
jecxz
call
std
inc
jl
adc
sub
xorb
imul
iret
addr16
inc
std
ljmp
stos
adc
inc
sbb
sbb
call
std
push
xor
int
js
femms
xchg
sub
js
mov
mov
dec
cli
mov
sahf
les
cli
jns
and
clc
out
mov
rorl
data16
jo
mov
xor
mov
add
xor
js
shlb
lcall
cmp
int3
mov
int3
cld
xchg
das
jp
jo
jne
sub
call
add
xchg
subl
pushf
add
subb
imul
lcall
in
jp
sbb
or
in
scas
xor
daa
insl
mov
xchg
push
mov
sbbl
jno
decl
pop
sbb
xchg
jno
bound
sti
stos
into
nop
stos
movsl
inc
shl
push
push
jl
sbb
cli
scas
cli
pushl
insb
inc
arpl
sbb
dec
cmp
daa
mov
xchg
inc
lcall
mov
push
sub
pop
push
and
fwait
repz
inc
jns
add
and
cmpsb
dec
fnstcw
imul
xchg
pop
push
test
sbb
push
std
filds
or
push
mov
je
cmpsb
imul
hlt
jno
mov
lcall
ret
inc
jl
orl
xor
push
jg
mov
adc
dec
lods
pop
mov
loopne
cmc
ljmp
sahf
daa
in
inc
sbb
call
dec
push
add
xchg
sub
arpl
filds
cwtl
sbb
xchg
fwait
pop
ja
fs
imul
decl
call
rolb
imul
lods
cmp
inc
cld
jmp
xchg
cmp
fstpt
dec
test
add
addr16
gs
adc
dec
fldt
bound
stos
jnp
mov
cmp
and
xor
out
dec
push
add
mov
jl
sbb
mov
outsl
pop
adcb
sub
mov
test
out
mov
sahf
popa
insb
ljmp
dec
out
push
inc
fwait
jae
sub
xchg
sub
push
lods
inc
jbe
and
dec
xchg
out
js
sub
mov
xchg
mov
cmp
cld
sbb
stos
pop
data16
jecxz
sub
clc
call
cmp
ss
aas
in
mov
jb
jmp
in
lea
cs
decl
ss
das
mov
cmpl
bound
cmpsl
sub
push
mov
aad
pop
or
in
ds
aas
sar
mov
repz
subb
jo
jae
nop
addr16
sar
mov
outsb
pushf
pop
leave
pushf
fistps
jae
stos
or
scas
push
xor
cmp
xchg
imul
pop
subb
mov
lret
mov
popf
and
pop
cmp
test
out
and
cld
daa
addr16
mov
or
ljmp
andl
push
xor
and
adc
call
out
pop
and
adc
aas
je
jge
xchg
add
cmp
out
push
jbe
test
mov
jnp
gs
testl
cmp
outsb
movsb
fisubrl
ljmp
frstor
mov
sbb
sbb
mov
mov
push
inc
cltd
pop
test
cs
xor
pop
or
adc
xor
jne,pn
jecxz
adc
es
aas
xchg
dec
push
cld
aas
xchg
xchg
xchg
mov
jl
xchg
jl
pop
adc
and
filds
decl
sbb
cmp
sti
js
push
cld
mov
sub
adc
shrb
sub
js
notl
dec
out
pop
cmp
dec
test
jecxz
sbb
dec
out
push
jo
add
in
cmp
scas
inc
cmp
mov
mull
repnz
cwtl
xchg
outsb
cli
out
xchg
clc
ljmp
pushf
inc
push
loopne
popw
fs
shlb
roll
call
xchg
out
mov
lods
lahf
cwtl
xor
cltd
popa
stos
loopne
jo
scas
xchg
or
lds
test
sbb
js
mov
gs
lahf
cmp
adcl
xchg
daa
das
lods
decl
mov
das
test
std
jg
xor
push
mov
jne
into
jnp
mov
mov
pop
out
cmp
sbb
mov
decl
add
je
scas
jno
pushf
cmpsb
sub
lcall
stos
outsl
dec
out
add
mov
es
mov
imul
xor
jg
fwait
mov
pop
scas
adc
data16
inc
dec
fldcw
or
jmp
mov
call
jae
and
sbb
cmpsb
pop
jae
enter
ja
clc
mov
and
aaa
sbb
les
xchg
ljmp
shrb
test
mov
mov
loopne
repnz
mov
jnp
daa
outsb
outsb
cmc
ljmp
pop
daa
dec
cwtl
mov
dec
leave
nop
sar
filds
repz
jbe
jb
ret
inc
jnp
sub
in
shll
jnp
or
sub
pushf
add
lock
mov
jno
xor
call
lcall
nop
nop
cmp
mov
adcb
movsb
clc
mov
in
mov
ljmp
or
test
or
out
jl
xchg
in
sahf
rcll
or
aas
lcall
stc
mov
xchg
jb
and
loopne
stc
out
xchg
lea
scas
out
je
loop
mov
mov
in
out
mov
jno
pop
cmp
mov
pop
sahf
into
decl
push
scas
es
cld
mov
xchg
lcall
cli
lcall
movsl
mov
xchg
loopne
mov
out
call
adc
xlat
lcall
xchg
sarl
jecxz
shlb
dec
out
jmp
pushf
mov
dec
cmc
cmp
ljmp
mov
jno
fucomip
adcb
xchg
lea
xchg
cld
cmp
int
mov
xor
pushf
lods
inc
out
xchg
add
mov
push
cs
pushl
je
stos
mov
jnp
bound
jecxz
mov
js
hlt
jbe
les
pop
aaa
cld
lcall
pop
jns
or
ja
scas
nop
inc
push
lds
xchg
popa
scas
cli
call
jne
xchg
xchg
inc
sbbl
xchg
mov
adcl
fimull
arpl
mov
jnp
xchg
lods
add
pop
jns
pop
sub
mov
push
test
and
and
mov
repnz
pusha
mov
mov
clc
movsl
stc
sbb
sub
bound
aaa
jne
dec
popl
push
outsb
push
lcall
xor
push
cltd
and
aaa
adc
cmp
out
pop
loopne
lock
cli
adc
cmp
flds
inc
insb
pop
mov
cmpsb
nop
fildll
gs
mov
out
dec
mov
add
out
inc
inc
and
bound
cmp
movsl
repz
data16
sbb
decl
icebp
mov
insl
imul
xchg
jl
mov
dec
fwait
xchg
jmp
dec
jno
movsl
mov
stos
jg
mov
addr16
sbb
outsb
int3
decl
inc
lcall
repz
popa
xchg
loope
inc
loope
pop
outsb
test
ja
outsb
pop
jne
push
imul
adc
sar
xchg
push
jmp
insl
jg
lret
gs
sti
dec
mov
mov
jb
fcomip
lcall
std
gs
dec
hlt
imul
data16
inc
mov
insl
es
inc
fidivrl
adc
pop
insb
incl
mov
push
dec
aas
sub
jmp
add
push
ss
lcall
dec
hlt
inc
stos
nop
pushf
sbb
jle
inc
add
fwait
add
popf
decl
cmpsb
mov
ds
sbb
fcomip
pushf
jle
ret
adc
or
xchg
jge
test
mov
call
out
xchg
ja
dec
add
jo
adc
cmp
decl
decl
dec
add
mov
jl
mov
inc
dec
mov
mov
sub
icebp
mov
jmp
cmpsl
inc
in
pop
mov
dec
lcall
repnz
ds
fsubrl
outsb
cld
lcall
adc
repz
pop
cmp
and
dec
mov
movb
cld
mov
ss
lcall
movsl
enter
popf
imul
mov
ss
cmp
in
pop
loope
mov
aad
call
sub
cmpsb
out
jg
incl
outsl
sbb
sbb
ret
xchg
adc
setl
adc
addb
dec
hlt
xchg
sbb
sub
xchg
test
sub
jecxz
in
test
call
jae
xor
push
or
xchg
jp
mov
mov
dec
int3
mov
ljmp
insb
andl
mov
cli
es
call
pushf
mov
insb
fisttpl
dec
je
insb
into
int3
inc
dec
inc
call
ljmp
pop
lret
bound
std
fs
fs
jl
pop
les
push
inc
inc
add
lcallw
pushl
in
mov
dec
jp
cld
insb
idivb
out
insl
or
std
jmp
push
in
insb
dec
popa
or
pusha
in
dec
inc
arpl
sti
pop
cmpsl
jge
jb
pop
gs
jb
decl
out
mov
jl
sub
scas
pop
cmpsb
clc
lret
xchg
ljmp
inc
je
imul
xchg
jo
push
rcl
call
jae
popa
jge
nop
stos
push
aas
inc
pop
fidivs
xlat
sbb
jne
ret
xlat
mov
addb
inc
cs
mov
push
jl
dec
jg
je
insl
scas
and
jae
adc
pop
push
shlb
daa
jp
jno
test
pop
lock
pushl
inc
je
jo
dec
push
jl
dec
cltd
cmp
das
jp
cltd
nop
outsl
pop
ret
clc
decl
xor
jno
cmpsb
mov
call
ss
stos
popa
jo
or
sbb
lahf
dec
xor
pushf
inc
add
mov
rclb
xor
scas
mov
popa
imul
mov
pop
xchg
mov
addr16
adcl
fldl
loopne
lods
orl
xchg
movsb
sbb
mov
pusha
arpl
loop
push
xor
push
cmp
xchg
mul
adc
loope
jmp
das
rcrb
mov
sbb
mov
cmpsb
cmp
mov
push
test
jnp
imul
jg
xchg
pop
and
call
and
mov
xchg
add
push
cmpsl
add
mov
xchg
ljmp
hlt
addr16
inc
imul
mov
addr16
cmp
dec
imul
cld
push
clc
jmp
std
pop
rcll
pop
shll
push
lcall
mov
pop
push
dec
mov
cmpsl
bound
in
or
aam
call
adc
jle
imul
lea
lods
clc
add
js
fs
sbb
idivl
cmpsb
dec
cmp
add
inc
xchg
mov
dec
pop
rorl
mov
inc
bound
push
ja
mov
js
sar
fcomip
dec
push
dec
enter
mov
arpl
cmp
stos
cs
and
xchg
dec
add
mov
lods
adc
lods
in
jbe
xchg
xchg
insl
inc
test
jecxz
adc
cmpsb
pop
loopne
jg
fstpl
int3
push
ljmp
gs
lcall
iret
dec
jo
lret
mov
mov
outsl
jp
cmpsb
fcompl
rorb
inc
xor
push
adc
or
negl
mov
sbb
push
cli
out
sbb
mov
pop
addb
adc
inc
imul
xchg
mov
aam
bound
mov
das
mov
push
js
jge
fwait
adc
add
adc
xchg
je
scas
push
out
sub
xchg
push
lahf
test
sbb
push
sbb
aaa
jmp
cmp
clc
mov
lea
mov
mov
pop
jl
pop
stos
xchg
xor
jb
aaa
ds
sar
sub
ss
jo
popa
adc
dec
jae
and
mov
daa
push
daa
cwtl
lock
pushf
mov
mov
outsl
call
cs
adc
lcall
mov
mov
gs
movsb
mov
inc
enter
jb,pn
push
scas
cmp
inc
mov
call
std
xchg
cmp
test
pop
mov
mov
out
inc
cmpsl
outsb
mov
adc
push
std
jg
jnp
js
test
popa
sub
leave
jno
push
adc
ret
jmp
retw
push
pop
sbb
gs
sub
cmc
mov
jg
bound
dec
out
inc
jns
add
fisttpl
lcall
push
adc
pop
lock
call
push
es
cltd
push
xchg
movsb
mov
mov
iret
arpl
cli
jns
sbb
out
scas
xchg
movsb
jbe
jmp
in
jp
jecxz
lds
xchg
fnstenv
lahf
jecxz
or
gs
push
add
dec
adc
and
add
sbb
outsb
ljmp
inc
sbb
movsb
mov
mov
mov
push
push
sar
call
pop
jno
push
iret
das
addl
xchg
lahf
cmp
test
filds
mov
jb
ds
pushw
jge
add
in
xor
out
xor
and
push
cmp
ss
inc
jmp
insl
fldenv
lods
clc
xchg
xor
cli
ljmp
out
dec
sbb
jp
fnstcw
enter
push
xchg
pop
loopne
scas
imul
mov
mov
adc
pusha
or
dec
repz
add
outsb
adc
cmp
ljmp
clc
stos
push
mov
scas
sbb
pop
jg
sbb
pop
jl
inc
testb
mov
pop
sbb
mov
mov
lcall
dec
enter
push
mov
ret
xchg
test
fisubs
scas
xchg
add
and
or
dec
adc
daa
push
mov
idiv
jge
push
push
push
push
call
pushl
inc
mov
lock
mov
jnp
ret
and
ret
inc
test
or
aas
jg
lock
or
stc
add
dec
aas
pop
sbb
loope
pusha
insb
fcomip
aas
cld
lock
mov
outsb
leave
mov
push
jp
movsl
shll
push
push
ret
js
dec
aam
sar
lcall
outsb
nop
push
lret
bound
data16
cmp
sub
jmp
incl
sub
mov
cld
pop
dec
push
data16
and
ljmp
call
aam
inc
call
in
jne
fldenv
mov
jl
mov
cld
das
adc
inc
jg
push
out
arpl
mov
jle
dec
outsb
test
outsl
cli
push
fstl
rcll
or
jo
test
lret
jmp
xor
outsl
dec
arpl
inc
inc
js
push
push
dec
ds
inc
dec
push
out
and
jge
test
jo
jae
call
dec
in
lcall
clc
xorps
insl
gs
out
and
adc
push
add
add
call
lcall
loope
pusha
xchg
or
add
push
mov
dec
jl
add
and
sahf
push
lahf
popa
jno
mov
cli
inc
inc
jl
mov
addr16
pop
adc
pop
pop
xor
jge
dec
outsb
std
mov
sbbb
xlat
jle
movsb
loope
cmpb
lret
outsb
push
sub
fisttps
in
js
rorl
jl
popa
pop
lds
dec
inc
incl
sub
imul
call
xor
jne
adc
lcall
stos
jbe
xchg
pop
out
pusha
popa
aas
xchg
dec
mov
outsb
inc
mov
iret
push
jae
mov
push
lcall
scas
outsl
push
pop
enter
popa
jp
lds
pop
cltd
jge
jnp
pop
jno
mov
xchg
jnp
dec
mov
popa
sub
imul
inc
push
lods
pop
mov
rep
adc
jae
jnp
popa
and
call
jp
cmp
pushf
addr16
jns
inc
nop
jbe
in
push
bound
movsl
lcall
mov
popa
in
and
popa
xchg
lds
mov
sahf
xor
loope
dec
jmp
out
and
sahf
test
es
xchg
incl
mov
xchg
gs
enter
jmp
pop
xchg
add
pop
fwait
sbb
push
dec
sti
mov
sbb
mov
js
insb
dec
test
jnp
movsb
xor
outsb
cmp
jns
mov
mov
lock
cmc
fistpll
add
sarb
xchg
cmp
out
test
pop
loop
or
in
out
clc
pop
loopne
lcall
dec
jns
rcr
idivl
call
pop
inc
ljmp
andl
add
jae
sbb
jg
orb
dec
lret
call
dec
jg
ljmp
dec
dec
mov
loopne
fcoms
out
xchg
mov
inc
cld
push
mov
das
push
clc
aas
adc
data16
repnz
lcall
mov
mov
nop
das
jecxz
iret
scas
imul
inc
cmp
cmp
pop
cmc
jmp
ds
int3
mov
mov
xchg
scas
arpl
out
insb
and
jg
push
enter
sub
jmp
cltd
in
pop
lods
out
cli
or
seto
hlt
lahf
push
and
jecxz
ljmp
xchg
insb
in
js
arpl
and
icebp
ds
ljmp
adc
xchg
ss
fbld
test
push
mov
cmp
xchg
mov
ljmp
out
jnp
pop
out
mov
fwait
sti
sbb
test
call
inc
int3
xor
js
in
or
loop
dec
in
push
cld
adc
adc
adc
push
jb
cmpsb
imul
dec
loope
push
cld
icebp
call
mov
inc
mov
cltd
insl
adc
lcall
es
ds
jae
in
pop
repz
xor
cli
adc
daa
dec
loop
jo
std
incl
shrl
jne
aaa
bound
sub
out
pop
mov
cld
daa
dec
jne
mov
push
push
jg
jo
incb
cmpsl
fsts
jecxz
test
push
mov
or
ss
test
push
fidivrs
arpl
or
push
push
out
test
and
xor
fpatan
lret
pop
scas
dec
dec
out
and
add
fbld
push
jg
outsl
fs
inc
mov
push
decb
inc
out
adc
stos
int
mov
jno
add
loope
imul
pop
in
jne
xchg
call
sub
stos
in
jnp
pushf
insb
ss
xor
add
insl
push
jb
mov
fsubr
lcall
cltd
mov
stos
push
adc
out
push
push
cmp
ss
cli
popf
jns
jg
lea
popa
mov
das
pushf
insl
pop
sub
loopne
dec
outsb
push
jno
push
mov
jl
cmc
sbbl
ljmp
ljmp
inc
bound
jo
pushw
dec
incl
data16
push
sub
aaa
pop
in
adc
dec
or
mov
dec
fbstp
add
cmpsb
dec
pop
push
out
xor
lahf
stc
xor
aas
arpl
or
call
ret
or
shrb
pop
dec
adc
push
jbe
fsubl
insb
mov
fdivrs
push
in
mov
call
inc
hlt
xor
dec
repnz
out
ret
mov
loopne
gs
insl
mov
mov
cli
push
shll
loopne
mov
daa
dec
bound
test
and
decl
fldcw
insl
jle
push
push
cmpb
es
mulb
in
cmpb
es
mov
sub
dec
mov
xor
repz
jge
int3
insb
dec
mov
push
fs
mov
leave
clc
call
scas
lea
add
mov
push
adc
lods
mov
mov
pop
mov
loopne
pop
gs
lea
mov
inc
mov
std
lcall
mov
in
xor
out
push
dec
sbb
xor
mov
pushl
push
js
add
out
iret
popa
insl
jg
jb
and
out
push
adc
sbb
dec
xorb
imul
stos
pop
sahf
sbb
pusha
int
jo
adc
test
cmp
jno
add
lock
pushl
add
jl
popa
mov
bound
ret
dec
mov
cmp
cmp
out
mov
shlb
cltd
adc
cltd
jns
outsl
arpl
movsb
push
decl
cmp
xor
jg
pop
mov
data16
or
fisttps
fdivrl
jle
shll
push
sbb
sub
mov
adc
or
mov
cmp
enter
fwait
dec
mov
push
dec
xchg
sub
mov
mov
repz
je
ret
xor
dec
jecxz
lock
or
mov
and
lea
push
data16
loope
jg
mov
or
jns
stos
or
lods
push
stos
leave
cmp
dec
lcall
and
pop
cmp
lea
or
cmp
out
dec
insb
gs
cld
adc
incl
push
ss
stc
sbb
lahf
mov
out
sbb
fwait
mov
std
sbb
out
psraw
les
cwtl
pop
adc
cmp
mov
inc
ret
push
cwtl
mov
fucomi
jmp
push
je
incl
jg
or
pusha
repz
ja
pop
jns
or
mov
jp
insb
jmp
lret
or
jmp
push
std
ljmp
dec
xchg
and
cmp
cmp
sub
add
arpl
daa
popa
outsl
cmp
cs
loop
dec
pushf
mov
xchg
pop
in
sbb
push
push
mov
adc
adc
mov
inc
das
shrb
jecxz
fwait
repnz
adc
sub
xchg
cwtl
sbb
lret
sbb
xor
or
add
stc
xchg
jg
icebp
cs
imull
lretw
cltd
popf
jge
sarl
call
into
jns
cmp
xchg
imul
mov
mov
inc
lds
nop
enter
outsl
cli
mov
insl
xlat
or
or
bound
inc
je
jns
fcomip
pop
jle
jp
gs
jnp
fs
push
mov
xor
xor
stos
cmpsb
pop
imul
insl
and
jg
clc
or
fisttpl
inc
jp
adc
cmp
cmp
cmp
ljmp
mov
das
nop
mov
mov
xor
cmpsb
outsb
out
mov
mull
cwtl
sbb
into
mov
es
movntps
xor
sbb
or
mov
sbb
xor
push
insb
scas
xor
insl
mov
lcall
mov
adc
lcall
outsl
lahf
inc
dec
push
xchg
test
mov
push
inc
push
fwait
sti
fisttps
movsb
cltd
lods
out
bound
jmp
arpl
cmp
dec
add
icebp
xor
mov
pop
std
cmp
outsb
xor
cs
insb
stc
sub
pop
ret
rcrb
cmc
ss
dec
mov
mov
hlt
sahf
pushf
rcrl
ljmp
mov
out
xor
adc
es
mov
xchg
mov
movsl
je
push
les
adc
inc
sbbl
inc
push
lea
nop
push
and
cmp
pop
mov
push
orb
xchg
mov
call
sub
scas
lea
push
push
mov
push
rcrl
cmp
insb
cmp
pop
scas
jne
popa
jae
mov
jb
mov
add
mov
scas
push
loope
jo
and
jno
jg
aad
xor
dec
adc
ss
sub
gs
mov
cmp
push
les
cmp
popa
cltd
xlat
cmpl
add
je
jb
push
mov
mov
and
test
sub
outsl
aad
dec
aas
fadd
sbb
fisttps
and
orl
fldcw
inc
mov
jg
and
and
adc
mov
pushl
add
adc
dec
mov
jno
sbb
add
jmp
sub
cmp
cmc
sbb
mov
bound
mov
outsb
dec
jbe
push
sub
and
popf
mov
dec
cld
push
fwait
pop
mov
mov
out
outsl
enter
jge
cmp
sub
orb
or
decb
decb
push
dec
push
pop
xchg
mov
add
jo
lds
je
call
mov
xor
and
mov
ds
mov
test
test
jg
dec
popl
je
ret
cmpsl
sub
xchg
xor
or
cmp
shlb
movb
add
call
fnsave
jo
jno
xchg
jle
jb
mov
dec
mov
dec
jae
push
out
jle
incl
adc
mov
mov
push
stos
and
xorl
ds
ss
ljmp
cmpsb
scas
sub
scas
sbb
add
out
mov
leave
mov
xor
push
push
jne
lcall
xor
xor
mov
data16
push
test
pop
jbe
adc
cs
les
push
cltd
or
subl
xchg
aam
incl
movsl
mov
mov
xchg
pop
adc
and
fwait
push
into
push
dec
pop
mov
filds
mov
sahf
xor
pop
bnd
cmp
data16
movsb
sbb
ss
outsb
stc
add
xchg
not
out
out
call
mov
mov
mov
test
push
in
cmp
mov
incb
shll
xchg
insb
xor
and
ljmp
cmpsl
movsb
std
xor
je
xchg
lods
out
test
lock
fistpll
xor
pop
mov
pop
add
inc
imul
lahf
and
pop
in
push
call
mov
cld
daa
jle
lret
mov
push
movb
dec
out
out
insl
outsl
jne
add
stos
pop
add
or
mov
pop
mov
decl
rorl
mov
out
test
mov
pusha
jo
enter
mov
js
loopne
outsl
scas
subb
mov
loope
sbb
loop
dec
sti
pushf
cs
lahf
sti
xor
sahf
xor
lcall
lcall
inc
cli
and
inc
int3
mov
movsl
pop
test
jns
sub
inc
loopne
shl
mov
cmpsb
push
pop
fildll
jp
inc
pop
notb
adc
test
subb
aaa
xor
mov
cmp
sub
lods
imul
ljmp
push
lock
rorb
pop
ret
icebp
imul
sub
push
in
adc
cltd
inc
pusha
xchg
dec
in
inc
lret
dec
incl
dec
rclb
out
cmc
fsubrp
dec
jns
dec
int
jp
cmc
jno
out
std
das
clc
ljmp
inc
mov
rorl
sub
sub
xchg
dec
iret
xor
negl
mov
popa
iret
mov
aad
jo
ja
dec
inc
mov
shlb
xor
jmp
jo
mov
int
insl
shrl
push
ja
push
roll
loop
icebp
stos
push
mov
insl
in
xchg
out
jle
in
loopne
jbe
jb
loopne
dec
push
pop
jecxz
jp
cld
inc
jae
jmp
xchg
loope
jl
sarl
jno
iret
js
movsb
leave
imul
xor
mov
rclb
mov
cli
xor
push
sub
mov
ret
fwait
repz
mov
lret
xor
pushl
icebp
ljmp
ss
jecxz
sti
divb
inc
mov
jg
gs
out
xchg
dec
enter
icebp
pop
push
pop
in
bound
in
pop
push
jmp
fbld
clc
lods
xchg
cld
fidivl
mov
cmp
mov
ret
and
subb
xor
pop
cmp
mov
ljmp
outsb
out
dec
lock
jecxz
inc
fisubs
arpl
pshufw
test
xchg
aad
dec
stos
ljmp
loope
lods
push
fwait
dec
leave
xchg
ja
mov
sbb
mov
in
or
mov
call
mov
pushf
jbe
adc
push
jg
add
mov
sahf
loopne
jo
jg
cmpsl
inc
push
stos
cmpsb
push
jecxz
cmp
call
lds
push
aad
ja
shll
push
call
cmp
bound
mov
adc
mov
mov
inc
aad
push
mulb
dec
mov
and
scas
push
jno
xchg
push
clc
dec
jmp
cmp
stos
xchg
dec
dec
in
in
xor
imul
dec
int
dec
mov
insl
repnz
arpl
add
mov
inc
xrelease
sbb
xchg
mov
mov
enter
pushl
lret
pop
fidivs
or
ss
leave
outsb
sub
cmpsl
pop
mov
in
ss
neg
loop
jl
aaa
lret
sub
fistps
push
in
jns
xor
jne
add
dec
ljmp
jb
push
jp
std
cmp
loope
in
je
and
fs
adc
imul
or
je
dec
ret
std
dec
push
push
sahf
imul
inc
mov
repz
je
mov
repz
jg
sub
mov
fsubrl
pusha
cmpsb
inc
or
xor
shlb
dec
sti
or
popa
shll
fs
push
insb
push
mov
mov
pop
pushf
push
sbb
loopne
fs
dec
scas
mov
sub
ljmp
jg
and
sub
or
int3
mov
aas
jo
pushf
scas
xchg
out
out
loop
repnz
inc
sbb
jne
incl
pop
pusha
jno
js
cmp
xchg
popa
dec
mov
sub
arpl
xor
xor
inc
sbb
loopne
outsl
lcall
push
stc
out
repz
inc
cli
mov
push
mov
dec
loopne
lahf
fwait
int3
int3
call
out
mul
popf
push
in
lock
cld
clc
sti
incl
mov
insb
jge
xchg
rclb
jb,pn
add
fsubs
popa
stos
popf
jnp
and
out
scas
ljmp
sti
mov
mov
cwtl
inc
out
icebp
jbe
shll
push
cltd
lds
pushl
adc
cmpb
jns
test
enter
xchg
inc
add
xchg
xchg
shlb
mov
call
xchg
inc
mov
push
in
movsb
dec
iret
test
loop
lock
data16
mov
or
or
pop
ss
int
loop
jecxz
clc
inc
in
mov
cmp
repz
xchg
popf
mov
mov
ss
std
in
out
shl
jbe
sar
clc
push
in
inc
adc
mov
fs
inc
int3
cmp
pop
cs
sub
xor
movsb
into
sub
bound
stos
test
pop
je
loop
pop
cltd
xorb
jmp
dec
rcrb
fdivrl
loop
pop
ret
mov
in
popa
xorb
jmp
xor
mov
jae
jmp
and
push
stos
xchg
pop
icebp
dec
clc
dec
pop
mov
push
outsb
sub
js
ljmp
push
in
lea
mov
les
sub
mov
in
jg
ja
or
test
sbb
mov
pusha
xacquire
mov
jnp
out
mov
decl
pop
xchg
mov
jnp
and
es
jmp
or
popf
addr16
cs
das
inc
xchg
adc
mov
int
cli
push
jle
and
loop
fs
xchg
jl
lcall
mov
jecxz
fists
arpl
xor
dec
out
ret
push
loop
out
stc
jnp
xor
addr16
decl
pop
clc
insl
call
jns
or
imul
decl
das
in
imul
aad
jmp
and
push
mov
xchg
xchg
push
rolb
jbe
xchg
inc
movl
push
or
cmp
inc
jae
out
jns
es
stos
cld
int3
adc
ljmp
dec
repz
mov
shlb
jb
sub
cmp
loopne
xlat
dec
aaa
fsubp
aaa
inc
push
mov
dec
das
xchg
aaa
dec
cld
push
insl
lock
add
popf
lods
call
add
or
inc
mov
movsl
push
inc
fwait
shrb
add
cmp
adc
mov
add
popf
add
push
pusha
jmp
rolb
inc
jb
sub
jge
jnp
inc
in
addr16
cmp
cltd
mov
cmp
cmp
cltd
lods
cmp
or
jns
es
cmpsb
inc
into
addl
test
push
inc
sbbl
repz
xlat
in
outsl
dec
ss
xchg
xor
jbe
outsb
cmovbe
ss
pop
xor
push
pop
mov
push
lea
xor
lcall
dec
cs
xor
cwtl
jne
movsl
inc
outsb
lea
pushf
out
mov
jmp
loopne
sarl
mov
jmp
mov
gs
fidivl
lods
outsb
pop
push
adc
test
mov
ret
popa
jmp
xor
jae
jb
lods
data16
dec
xchg
out
cmp
cwtl
sbb
fildll
sub
pop
push
mov
dec
lods
push
and
inc
test
add
push
dec
enter
sub
push
leave
jecxz
ss
jg
xchg
dec
xchg
sbb
and
pushf
mov
repz
inc
scas
jae
pop
jno
ds
inc
cld
mov
movsb
jnp
jno
sbb
mov
psrad
pop
mov
rol
mov
fistl
sar
les
xchg
sub
ss
lea
sub
or
mov
and
inc
negl
jg
mov
mov
cli
call
sbb
cli
subb
test
ss
xchg
mov
sar
sbb
addr16
jb
xor
sti
in
ffree
out
out
imul
or
insl
test
xor
xlat
decl
mov
sub
rorl
adc
ljmp
xor
jns
dec
cmp
xor
pusha
and
sbb
pusha
push
arpl
test
leave
mov
add
orb
mov
pushl
daa
mov
sahf
sbb
inc
sbb
jo
and
mov
pop
test
adc
mov
add
icebp
mov
inc
ds
outsb
pop
add
cmpsb
pusha
or
push
call
loop
je
mov
lods
das
push
inc
outsb
jmp
push
arpl
pop
ljmp
cli
data16
out
adc
xchg
mov
adc
xor
icebp
call
mov
xchg
mov
and
mov
std
lcall
addr16
and
mov
loope
daa
cli
sub
xchg
jne
jmp
std
ljmp
and
dec
popa
cmp
jo
or
dec
mov
xor
subb
shrl
out
push
dec
or
jo
mov
mov
lcall
outsb
movsb
sbb
fldcw
or
fstpt
loope
in
lcall
push
testb
hlt
or
rcll
test
decl
mov
sbb
mov
cmpsb
jae
cmp
mov
jmp
pop
clc
pop
insb
mov
cmp
cmpb
clc
lea
ljmp
test
scas
es
mov
mov
push
mov
pop
sub
movsl
cmc
mov
push
ds
sti
xchg
aas
jl
ljmp
leave
inc
dec
mov
push
mov
jl
mov
hlt
cmpsl
pop
dec
pushf
fimull
cmpsb
call
mov
sahf
fs
add
mov
nop
xor
test
pop
test
subps
mov
xchg
lcall
rolb
or
ljmp
leave
add
adc
jns
jg
push
jg
cmp
lock
call
js
out
andl
decl
or
daa
rorl
add
mov
xchg
sbb
test
mov
xlat
ljmp
push
fwait
mov
arpl
xor
ret
dec
mov
cmovae
outsb
or
test
loop
cmp
sarl
lret
jbe
xor
popa
jecxz
lods
sub
and
jle
outsb
inc
call
clc
add
mov
std
pop
mov
pop
lahf
jne
lret
pop
mov
arpl
mov
cltd
mov
add
add
mov
add
xchg
mov
filds
sahf
sub
push
sub
dec
ljmp
pop
or
lcall
jno
and
movsb
js
lea
popf
movsl
mov
fisttps
pop
sub
fisubrl
pop
mov
add
dec
ret
es
lods
and
push
outsl
sbb
call
inc
test
add
mov
sub
mov
pop
sbb
bound
insl
fcomip
cmp
adc
fidivrs
lock
xchg
xor
pushl
bound
xor
xchg
rclb
push
mov
add
add
pusha
xlat
test
pop
pusha
mov
je
decl
pop
ss
push
and
and
dec
push
push
mov
cmp
aaa
popf
add
cltd
ss
cmp
sub
push
lods
and
mov
ljmp
push
lcall
movsl
push
insl
inc
mov
push
inc
cmp
xor
jnp
outsb
and
push
jg
loopne
sbb
dec
sbb
gs
stc
dec
ja
scas
lock
lcall
lahf
cwtl
pop
pop
lret
arpl
ds
stos
and
lock
mov
arpl
dec
jg
push
xor
sbb
repz
clc
lds
sar
out
or
jmp
call
jmp
jne
and
sbb
rcrb
out
dec
sbb
mov
push
rcrb
addr16
or
adcl
imul
cmp
add
or
sbb
inc
push
nop
idivb
in
outsb
dec
cmc
mov
popa
pop
icebp
ljmp
and
and
pop
icebp
xchg
pop
inc
cld
outsl
mov
pusha
ja
icebp
mov
pop
iret
pop
jno
dec
rorb
ret
jg
outsl
push
repz
pop
mov
cmp
cmp
mov
jmp
pop
movsw
ss
fiaddl
pop
inc
sahf
ljmp
incl
mov
lods
sahf
in
jl
or
dec
adc
sbb
loope
call
insl
xchg
sbb
or
mov
outsl
dec
insb
push
adc
mov
decl
sbb
imul
xchg
or
mov
sar
es
subl
xchg
add
mov
mov
push
lret
mov
jb
inc
adc
sbb
popa
addr16
ss
cmp
or
pop
icebp
jg
push
push
xchg
pop
sbb
jo
ds
cmpsb
xor
decl
mov
test
scas
add
imul
inc
jl
cmp
dec
das
fwait
mov
aas
xor
insl
testb
and
pop
cmpb
test
mov
xor
xor
mov
sub
icebp
lea
les
mov
jecxz
fwait
jmp
mov
and
fnstenv
rorl
lea
cmpsb
sbb
rorb
mov
dec
or
aaa
fs
adc
lcall
sahf
test
imul
repnz
out
and
jb
repnz
mov
jge
mov
inc
xchg
clc
decl
cmpsb
pushf
xor
aas
push
out
sbb
xchg
popf
int3
mov
jl
adc
std
sub
or
and
jecxz,pt
xor
scas
xchg
cmp
mov
outsl
aam
mov
inc
xorb
stos
push
pop
adc
lcall
add
rolb
pop
and
fists
push
push
mov
xor
adc
rcrl
aaa
loop
loope
pop
subb
or
cmp
aaa
xor
clc
test
decl
jns
call
inc
adc
fsts
imul
or
incl
lds
cli
fnstenv
adc
das
ffreep
test
bound
dec
shr
cld
push
inc
jecxz
cs
xchg
xchg
ret
ja
adc
les
std
shlb
add
xor
mov
shl
push
repz
mov
call
dec
jl
out
pop
dec
std
mov
adc
pop
push
sbb
mov
pop
jae
mov
scas
ret
subb
lcall
jbe
ljmp
lods
lret
mov
lods
addr16
adc
std
jle
ljmp
or
sub
std
adc
arpl
jp
repz
ret
ss
adcb
js
aaa
sti
into
sbb
jno
sbb
pop
sbb
mov
mov
loopne
mov
xor
or
jmp
sub
ret
jecxz
in
pxor
loopne
cmp
cmp
add
movsl
sbb
hlt
test
cld
adcb
push
cli
pop
ret
xchg
xor
xor
push
add
cs
test
enter
fnsave
jge
out
adc
in
std
pop
ss
add
cld
call
data16
and
sub
add
idivb
jle
incl
jns
pop
and
and
pop
lcall
push
inc
ljmp
adc
and
mov
out
inc
jecxz
adcl
pop
shlb
push
and
hlt
aas
data16
cld
xchg
popf
pushf
or
outsb
repnz
fs
shlb
scas
inc
shlb
pushf
shlb
mov
sub
mov
pushf
fistps
mov
cld
ljmp
mov
mov
and
cmpsl
jno
mov
hlt
add
push
test
mov
cmp
adc
imul
jmp
loop
mov
bound
sti
sub
mov
inc
mov
xor
mov
outsb
cmp
call
xchg
outsb
adc
call
xchg
cmp
clc
mov
mov
lcall
add
mov
dec
out
insl
pop
lock
pushf
xor
loop
adc
and
add
push
dec
ja
adc
stc
int
xchg
cmpsl
and
ret
test
test
out
aas
mov
addl
je
and
js
lock
add
sbb
movl
or
faddp
adc
pusha
shrb
lret
mov
mov
cld
ds
mov
pop
arpl
fbld
push
movsb
fidivrs
orb
cmpsb
lcall
pop
loope
mov
mov
mov
push
jmpw
shll
movsb
incl
jmp
mov
sub
cmp
adcl
push
pop
lock
adc
xchg
enter
add
mov
sbb
pop
loop
cmp
mov
mov
fists
xchg
mov
popa
push
icebp
mov
cld
or
adc
jae
push
inc
loopne
mov
out
ds
push
push
inc
pop
jae
jg
out
add
scas
xor
jl
ss
cltd
mov
out
mov
dec
xor
xor
lret
ror
mov
fstps
testb
push
ljmp
fwait
push
ret
lret
shrl
scas
repz
shl
incl
clc
inc
sbb
dec
cmp
in
sbb
hlt
sub
pusha
push
cmp
cli
and
leave
xor
push
sbb
or
sbb
sarl
cltd
mov
loope
outsb
mov
sbb
fwait
orb
daa
or
xchg
das
or
jmp
xchg
xlat
sbb
sbb
call
cld
dec
js
lcall
dec
sti
adc
imul
scas
xchg
data16
or
sahf
lret
xor
add
xchg
decl
jl
and
push
dec
das
ret
adc
mov
inc
shr
es
data16
lods
mov
mov
subl
ss
ret
fdiv
xchg
dec
test
test
and
test
outsl
sar
shrl
outsb
push
lcall
pop
negb
inc
movsb
loopne
dec
shlb
mov
and
in
or
ljmp
clc
sub
ret
data16
mov
mov
mov
dec
mov
jne
in
and
das
xchg
daa
inc
mov
xchg
clc
in
sbb
movsb
scas
fistpl
xchg
dec
push
push
cmpsb
fildl
mov
out
cli
sti
adc
sbb
stc
sahf
adc
repnz
xchg
jl
pop
push
and
cmpsb
mov
fs
ja
mov
and
scas
in
or
mov
pop
push
push
cmpsb
jnp
loopne
fbld
aas
inc
push
xchg
ljmp
inc
rol
fmul
xor
imul
inc
hlt
cmp
push
mov
inc
aad
pop
ds
cmp
shrl
push
xchg
ret
jecxz
test
ds
jb
fldl
pop
mov
or
sub
testb
into
inc
mov
mov
stc
aas
rolb
mov
pop
xchg
push
mov
xor
sbb
incl
mov
in
adc
out
xchg
mov
or
imul
adc
xor
stos
push
xchg
xor
ffreep
mov
enter
test
sub
inc
push
in
or
fistl
mov
bound
mov
jle
cmp
fdivl
lea
push
xchg
cmpsb
loope
mov
lods
std
fsts
cs
notb
and
arpl
jle
pop
pusha
push
pop
call
mov
pop
push
add
jecxz
bound
out
push
inc
test
cld
adc
xlat
add
ret
scas
aas
xchg
sub
pop
loopne
add
out
add
cld
not
dec
mov
push
test
in
or
in
fistps
inc
xchg
mov
imul
decb
mov
testb
mov
push
dec
lcall
popf
dec
mov
xchg
out
movl
icebp
xchg
inc
adc
icebp
aas
lcall
inc
ss
cwtl
mov
lcall
xor
stc
scas
xor
adc
adc
jb
xchg
mov
inc
lods
in
pushl
xchg
aaa
pop
adc
fwait
mov
push
jns
xor
cmp
mov
adc
xchg
sar
pushl
sti
test
cmp
xchg
jmp
and
xchg
inc
call
outsb
mov
and
int3
mov
or
mov
scas
cmp
dec
lea
mov
sub
ja
sbb
add
mov
mov
cmp
incl
rcll
push
orb
std
sarl
pop
dec
sbb
dec
or
ja
xchg
add
xchg
loop
xor
leave
adcl
push
mov
loop
pop
push
out
add
fwait
hlt
pop
cmp
mov
add
add
stos
cwtl
ret
mov
stos
icebp
sets
sbb
pop
test
xorb
add
pushl
sar
rolb
cs
popf
test
xchg
push
push
scas
mov
or
test
cmpsb
loopne
js
decl
jle
pop
mov
jno
jno
andb
mov
das
movsl
push
mov
jg
jecxz
outsl
sbbb
sub
pusha
mov
or
jns
test
test
mov
popf
xchg
mov
stos
outsl
xchg
sub
scas
int
mov
loop
cmp
pop
inc
test
in
pop
fcmovu
mov
jmp
aas
imul
into
in
mov
fbld
mov
outsb
push
mov
xchg
loopne
es
sti
lock
outsb
arpl
int3
and
outsl
push
and
or
jb
push
mov
sbb
dec
push
cmp
add
fwait
adcl
xchg
cmp
addr16
sub
push
aas
mov
mov
enter
decl
cmpb
jb
xchg
dec
int
incb
or
jnp
xchg
inc
push
adc
push
das
xchg
call
int
enter
jg
mov
call
sub
sub
dec
inc
push
xlat
addb
push
jecxz
cmp
add
data16
add
cmp
test
stos
mov
in
and
xor
mov
in
andl
pushf
cmp
outsl
pop
xchg
xchg
sar
pushl
xchg
insb
sbb
insl
inc
clc
mov
cltd
daa
js
inc
sub
das
es
mov
sbbl
push
dec
xchg
bound
insb
mov
in
xor
mov
xchg
rclb
dec
addr16
jns
dec
movb
pop
decl
lahf
jnp
xchg
fldcw
jae
leave
mov
inc
and
popa
add
inc
outsl
mov
xchg
lcall
inc
test
movsb
icebp
mov
xchg
std
and
ja
mov
cmp
push
cld
mov
sub
pop
in
jbe
dec
jmp
dec
jo
ss
insl
loopne
sbb
int3
outsb
inc
xor
push
int3
insb
fs
push
shl
sahf
inc
and
lds
pushf
pop
nop
xchg
nop
incb
mov
loop
push
and
cmc
add
pushl
pop
xsaveopt
sbb
mov
mov
mov
mov
and
or
xor
or
std
jmp
stos
push
mov
stc
sub
xor
scas
xor
inc
jge
jg
add
xchg
xchg
lods
or
pop
into
test
mov
ds
and
clc
cmp
jae
push
les
fwait
movsl
rclb
lds
pop
xchg
xchg
test
add
xchg
mov
adc
insb
je
dec
add
xchg
inc
cld
call
push
orl
pop
xchg
xchg
mov
aam
pop
inc
ss
movsl
test
mov
mov
ret
jo
dec
adc
cmpsb
sub
cmp
out
or
mov
sbb
xchg
cwtl
push
or
call
leave
push
xor
xchg
sub
sbb
mov
hlt
sahf
pop
jo
sbb
push
jp
fldenv
lods
xchg
dec
inc
cli
or
inc
mov
xlat
xchg
insb
out
mov
mov
in
lods
cmp
fwait
cli
mov
daa
pop
jo
mov
and
inc
add
sub
sub
or
scas
mov
ds
cmp
inc
gs
add
outsb
sti
adc
out
cmp
test
cmpsb
dec
cmp
xor
testb
lock
out
das
aaa
jae
rcll
inc
xor
ljmp
add
outsl
cltd
scas
mov
xor
cmp
insb
cmp
mov
mov
push
jae
dec
cmpsl
outsb
mov
js
mov
outsb
xchg
test
mov
cmpl
mov
sub
fucomp
adc
out
test
dec
das
pushf
lret
dec
push
inc
test
mov
mov
sbb
pop
dec
aaa
bound
repnz
stos
movsb
or
push
xchg
cmpsl
mov
and
pusha
imul
pop
xchg
pushf
mov
outsb
cltd
lock
mov
mov
pop
jge
add
add
leave
das
imul
cmpsb
ss
clc
pusha
clc
inc
add
outsb
pop
xchg
ljmp
dec
push
stc
xor
add
inc
dec
lcall
jbe
inc
shll
mov
mov
xchg
add
mov
jg
inc
fwait
jnp
loope
mov
and
or
adc
pushl
sbb
das
stc
jne
and
hlt
cmpsb
adc
xor
gs
cld
mov
cmp
enter
enter
adc
call
jbe
cmp
sub
dec
inc
sahf
mov
call
icebp
cmp
xchg
out
jns
in
sub
je
mov
jno
js
pop
enter
pop
pusha
add
call
jno
js
add
jbe
js
jnp
add
insb
out
push
fimuls
jg
arpl
jecxz
ret
push
push
mov
or
xchg
int
jl
jg
jp
jge
dec
xlat
sub
push
mov
jbe
pop
nop
push
dec
loop
call
popf
push
ss
xchg
pop
pushl
mov
xlat
push
or
xor
mov
push
mov
call
cmp
imul
cs
jp
xor
in
pop
decl
or
ss
cltd
and
fildl
gs
mov
mov
adc
mov
jb
lea
mov
rorl
xchg
aaa
es
bound
and
testb
cmp
xchg
sbb
dec
push
pushf
pop
add
jp
fistps
mov
cmp
xor
repnz
jbe
jmp
ja
lret
movsl
and
mov
adc
adcb
xor
mov
push
movb
push
outsb
pop
subl
loope
outsl
cmp
repz
xchg
nop
cmp
xchg
into
scas
jo
mov
clc
xchg
pop
xchg
lock
inc
pop
adc
ljmp
ljmp
jbe
js
xor
fistpl
dec
jae
adc
xor
call
sbb
sbb
ljmp
xor
out
pop
dec
into
and
and
lods
jb
push
arpl
rep
sbb
adc
push
xor
jg
fwait
sub
jnp
pushf
xor
push
cli
pushl
xchg
mov
icebp
jne
scas
push
scas
aad
push
add
mov
xor
mov
cmpsl
test
add
and
rep
into
push
decl
jecxz
outsl
mov
inc
dec
push
mov
inc
mov
mov
or
shrb
mov
jg
inc
xchg
js
mov
mov
cwtl
mov
xor
mov
pop
ds
mov
lods
data16
incl
xchg
test
test
mov
mov
dec
push
add
hlt
inc
jmp
sahf
mov
mov
cmp
fs
lock
xor
cmpsb
imul
add
pop
cli
pop
std
dec
xlat
xchg
pop
adc
push
xchg
incl
push
xchg
mov
movsl
ds
leave
and
jecxz,pn
mov
sub
in
jb
lret
nop
cld
clc
mov
lahf
enter
sub
bound
insl
add
lcall
icebp
js
adc
lahf
nop
daa
xchg
in
jg
mov
push
push
jne
test
es
sbb
nop
and
jg
test
insb
adc
xor
cmp
test
pusha
xor
jo
out
call
lods
sti
mov
push
ret
or
or
inc
addl
ss
mov
lret
pop
inc
aam
dec
cmp
xchg
mov
inc
into
add
pop
call
jge
xchg
imul
xchg
lret
outsl
dec
ss
cltd
inc
xor
gs
call
lods
jo
mov
arpl
out
lods
xor
mov
fs
cld
sbb
cmp
fildll
dec
hlt
xor
xor
jg
mov
jecxz
dec
sub
stc
decl
aas
dec
inc
xchg
and
loope
jo
outsl
sbb
mov
addr16
je
incl
dec
cli
or
mov
stc
mov
lcall
iret
mov
call
ja
xchg
mov
int3
xchg
push
int3
xchg
mov
loopne
cli
dec
popa
cld
lret
push
mov
jbe
sub
pop
add
pushl
jbe
push
sub
aad
dec
push
mov
hlt
mov
pop
xor
loopne
cmpsl
push
push
lods
and
xor
lcall
cmp
pusha
xchg
sub
sar
pop
inc
sti
cmp
ljmp
test
mulb
in
push
rcrl
aaa
cld
mov
mov
inc
inc
out
cmp
lret
and
stc
sbb
lcall
sub
push
dec
jle
pop
fs
les
pop
inc
incl
mov
addl
jmp
addr16
nop
imul
cli
cs
repnz
pop
daa
outsl
jg
lock
fldenv
outsb
mov
shrl
adc
sub
lods
data16
in
ret
in
das
push
mov
ljmp
loop
mull
jp
dec
xchg
sahf
mov
xchg
imul
cld
jg
into
mov
in
mov
mov
out
add
add
pop
add
pushl
push
dec
js
xor
xchg
mov
adc
xor
add
ffreep
stos
xchg
mov
sar
jg
push
xchg
sbb
outsl
mov
and
mov
jne
add
pop
lret
xor
lock
fisubrs
test
pusha
pop
jb
pop
push
push
scas
cmp
xchg
xor
sbb
jg
sub
das
mov
xchg
pop
mov
shll
addb
adc
les
call
sbb
mov
or
je
pushf
movsl
daa
sbb
ss
incl
jmp
scas
mov
jno
mov
jmp
jmp
test
fs
push
mov
popf
pop
xchg
add
cli
fcomip
pop
mov
jne
js
cmp
cmp
imul
idiv
inc
lods
je
mov
mov
mov
xchg
mov
lcall
mov
or
and
popf
jmp
pusha
in
mov
test
incl
std
decl
pop
je
mov
push
xchg
mov
popf
cmp
mov
pop
inc
loope
cmova
add
adc
cmc
cmpsl
aaa
jne
scas
out
jns
pop
sbb
xchg
out
sar
jmp
hlt
mov
xor
mov
pop
cmpsb
test
fbld
stos
outsb
pop
pushf
adc
jge
imulb
loop
inc
in
ss
push
or
pop
xor
aad
out
insl
pop
fwait
imul
push
sti
icebp
mov
mov
sub
ss
andb
fisttps
inc
mov
jl
popf
and
add
call
pop
pusha
jnp
outsl
es
jne
data16
xchg
push
cli
pop
pop
ret
xlat
repnz
xchg
jl
mov
jbe
inc
lds
addb
test
test
lea
mov
jp
cmpsb
mov
fs
popa
cmp
mov
fwait
incl
lods
add
inc
mov
xor
test
aas
jo
decb
inc
inc
imul
pusha
cltd
push
xchg
xchg
adc
mov
loopne
sbb
add
jb
mov
imul
jbe
jle
jno
aas
pushf
pop
pop
lock
divb
das
jl
mov
adc
cltd
adc
ss
incl
push
mov
jp
xor
aad
xchg
xchg
mov
test
mov
mov
out
adc
mov
testb
inc
aaa
imul
xor
mov
out
pop
push
mov
sbb
icebp
cmpl
fcomip
repnz
push
cli
adc
pop
clc
cwtl
call
pop
js
pop
sbb
add
pop
jg
shrl
inc
push
xchg
ss
and
fmull
lcall
das
arpl
ret
rorb
das
or
adc
add
and
scas
insb
add
stos
and
fisubrl
push
dec
and
add
inc
adc
xor
push
fnstsw
sub
pop
scas
push
cmp
push
add
push
push
and
cli
adc
imul
mov
incl
adc
insb
mov
mov
stos
mov
ficoms
adc
dec
jbe
adc
inc
cld
idiv
inc
repz
or
pop
jne
lret
pusha
xlat
adc
aad
idivb
inc
lret
jle
test
cmp
mov
sbb
jg
sbbb
push
pop
push
mov
nop
cld
jmp
mov
add
loope
sbb
imul
mov
test
dec
lcall
cs
pusha
aas
test
xor
push
push
mov
mov
jle
mov
pop
out
es
mov
ficoms
push
xchg
xchg
call
ljmp
add
setae
gs
or
std
xor
test
sbb
jg
cli
or
jecxz
pusha
in
inc
dec
pop
mov
push
push
sti
jne
lret
out
out
imul
divb
dec
decl
push
imul
enter
cmp
lcall
mov
ss
cmp
pop
lea
cmp
sbb
xchg
filds
inc
cmp
sahf
push
inc
nop
mov
dec
xchg
hlt
jg
mov
adc
add
or
xchg
xchg
stos
jle
mov
cmp
xchg
mov
mov
scas
icebp
mov
cmpsb
cmp
mov
orl
add
test
add
xor
dec
adc
mov
push
imul
mov
xchg
xchg
dec
dec
stc
out
fbld
add
mov
jmp
in
mov
mov
fucomi
inc
jbe
and
sub
dec
aaa
sbb
scas
xor
out
idivb
iret
in
dec
jb
sarl
jb
push
jp
orl
jbe
leave
jnp
dec
std
ljmp
xor
dec
mov
dec
jo
and
in
sbb
loopne
cmp
push
in
mov
dec
inc
jle
mov
add
mov
mov
pop
and
imul
mov
mov
scas
test
into
push
xlat
sbb
insb
push
lock
push
lods
pop
lock
addr16
mov
adc
xor
arpl
xchg
pop
fidivrs
in
mov
inc
cmc
roll
jl
push
in
sti
mov
dec
sar
jl
xorl
arpl
in
mov
inc
dec
repz
lret
push
inc
mov
adc
outsl
mov
and
push
jae
loopne
or
adc
fs
mov
jp
rcrb
dec
repnz
out
push
ret
dec
cli
call
xor
xor
imul
adc
les
dec
ds
inc
cmc
mov
jns
daa
sub
rolb
dec
mov
cld
mov
jecxz
into
adc
roll
inc
fbld
or
pushf
dec
push
sub
shrl
cmpsl
test
fidivs
call
pop
lock
cwtl
xor
inc
xchg
ljmp
loop
popa
inc
leave
cmp
pop
inc
iret
test
sbb
or
mov
mov
push
pop
sbb
test
lcall
mov
adcl
roll
adc
cmp
jno
insb
decl
inc
cltd
outsb
iret
mov
and
cmp
sbb
into
hlt
test
incb
jl
or
arpl
jg
nop
push
imul
jg
xchg
aaa
pop
test
xor
sub
cld
int
xor
nop
dec
jle
adc
mov
sub
test
in
inc
jne
xchg
test
mov
sub
inc
inc
ss
push
xchg
dec
mov
pushl
xor
les
pop
out
rorl
bound
push
pop
loope
pusha
push
pop
and
jp
idiv
jo
stos
xor
dec
pop
push
add
jg
add
fsts
push
out
test
add
rcrb
or
jl
sbb
pushf
mov
cli
arpl
insb
imul
pop
push
leave
mov
lcall
inc
xor
inc
mov
arpl
inc
hlt
mov
test
dec
or
lcall
loope
add
dec
iret
dec
inc
imul
rcrl
in
jbe
outsl
ss
and
mov
fidivrl
sub
pop
dec
lcall
adc
adc
sub
push
sbb
lock
insb
pop
pushl
xchg
mov
sti
mov
ljmp
dec
or
jbe
pop
cmpsl
cmp
decl
and
js
push
dec
ljmp
pop
ss
adc
pop
mov
pop
cli
into
stos
dec
fisubrl
or
aam
test
int3
mov
rcrl
add
call
dec
mov
mov
cmp
mov
js
ljmp
int3
push
push
aaa
push
shlb
insb
loope
in
adc
sbb
mov
dec
jnp
cld
dec
rorb
inc
jecxz
adc
jb
inc
and
cmp
mov
push
mov
jo
loopne
rolb
dec
adc
call
cmp
cmp
inc
ljmp
pop
arpl
mov
inc
in
or
cmp
sub
cmp
loopne
es
mov
stos
outsl
loopne
mov
repnz
inc
popa
ret
lahf
decl
jne
xor
pusha
and
lods
fildll
in
pop
push
js
xchg
into
loopne
bound
imul
decl
push
pop
mov
push
mov
lds
lahf
lret
push
push
cmp
nop
xchg
fs
jne
add
arpl
pusha
loop
insl
into
jno
push
push
pushf
lods
andb
incl
nop
inc
std
mov
or
mov
test
insb
mov
dec
idivb
js
jle
xchg
sbb
and
jp
push
bound
sub
add
shll
cmp
mov
icebp
push
mov
sbb
pushl
sub
sub
insb
and
loope
pushf
das
data16
jl
add
gs
xor
cli
pushl
insb
sub
cmp
lods
sbb
into
mov
push
daa
ljmp
xchg
or
xchg
cmpsb
rep
aaa
aaa
ret
xchg
adc
push
mov
jg
ljmp
xchg
pushf
jge
pop
mov
sub
insb
bound
lret
dec
jno
jo
jg
cmc
or
jbe
mov
jae
push
out
cli
pushl
push
jg
cwtl
push
decb
mov
je
add
out
gs
jg
adc
popf
add
or
push
lahf
mov
mov
dec
lods
jne
push
dec
ss
clc
jmp
mov
mov
dec
lea
push
add
call
inc
xchg
push
push
pushf
sbb
and
aaa
aaa
mov
decl
mov
pushf
jl
cmc
sbb
jmp
add
js
cwtl
ja
and
add
mov
sub
mov
int3
mov
into
lret
scas
add
outsl
add
iret
bound
test
fnsave
mov
or
movsb
cmp
push
testb
stos
bound
mov
push
sub
lret
fdivs
inc
xchg
cmc
arpl
push
inc
fst
loopne
cmpsb
in
imul
mov
push
nop
mov
scas
or
decl
ja
or
and
or
adc
je
fwait
sti
inc
lock
pushl
mov
lcall
ja
xchg
dec
decl
fiadds
daa
mov
cmpsb
pop
jae
and
cmp
repz
das
js
push
mov
inc
iret
es
cmp
call
xlat
pop
push
call
xchg
pop
aaa
dec
stos
sbb
lock
in
imul
jge
imul
jo
mov
mov
ja
adc
ljmp
mov
pop
sar
sahf
data16
ja
movsl
sub
mov
mov
fisttps
xchg
addr16
jb
loopne
call
test
outsb
push
cmp
addb
fnstcw
call
mov
les
adcb
test
pushf
bswap
out
mov
je
jecxz
insb
jne
cld
mov
jmp
out
lcall
popa
imul
xchg
call
cmp
adc
scas
mov
imul
call
out
fwait
push
jnp
mov
outsl
clc
xchg
adc
ja
je
sub
sbb
stos
sbb
push
pop
dec
shll
icebp
ljmp
shrb
ljmp
cwtl
scas
xor
jg
scas
push
inc
iret
xor
jo
pop
lahf
mov
mov
dec
pop
out
std
mov
loopne
mov
sub
adc
inc
data16
std
loopne
bound
fidivrl
push
into
push
sbb
mulb
aaa
jbe
scas
inc
jecxz
adc
add
arpl
dec
or
cmp
lcall
jo
ljmp
shll
adc
pop
mov
jmp
cld
add
test
lahf
xor
dec
jae
push
inc
mov
adc
add
cwtl
pop
dec
enter
pop
inc
test
pop
mov
js
jle
push
pop
fisttps
test
cwtl
popa
jp
or
add
add
mov
stos
mov
aad
arpl
vxorps
clc
incl
push
mov
push
es
add
sub
jmp
pop
sahf
mov
loope
sub
push
xchg
lahf
test
sub
lret
aas
xor
add
lcall
xor
push
popl
ds
popf
xchg
and
mov
mov
in
into
xchg
pop
out
mov
nop
iret
daa
cltd
arpl
adc
fdivr
incl
js
xor
cltd
add
lahf
in
mov
lcall
gs
push
xchg
push
push
xchg
xchg
dec
xchg
jmp
pop
mov
sub
adc
pop
cmp
mov
enter
cltd
pop
test
in
pop
xchg
jg
mov
dec
mov
sbb
and
in
lahf
xor
cmpsl
es
pushl
lds
dec
pop
popf
mov
inc
and
xor
push
aas
rcr
js
push
sbb
mov
lock
shrd
lea
ljmp
inc
adc
les
stos
repnz
jno
clc
mov
push
mov
into
sub
mov
xor
cmpsb
mov
mov
adc
js
adc
sub
mov
lcall
push
cmp
mov
iret
sub
clc
clc
subb
jns
shll
fisttpl
xchg
insl
insl
jmp
or
mov
ret
push
mov
inc
ret
inc
fisttps
clc
push
outsb
add
mov
lret
cmp
arpl
jne
fwait
sbb
out
fisubs
pop
bswap
dec
mov
jnp
jns
or
jae
cwtl
push
rolb
mov
mov
decl
cmp
add
data16
push
movsl
ljmp
inc
jbe
packsswb
insb
nop
jl
out
dec
push
inc
dec
cs
arpl
orl
hlt
xorl
cmp
lcall
lds
movsl
nop
test
xchg
inc
push
pop
sbb
mov
insb
movsl
es
jmp
das
sbb
pop
fs
out
clc
je
test
sahf
or
xor
lcall
aad
xchg
flds
or
cmp
cmc
clc
out
and
outsb
pop
aaa
xor
sar
jmp
scas
pusha
repnz
pop
stos
in
push
sub
xchg
jo
scas
sbb
test
pop
out
add
imul
sbb
fmuls
and
jle
push
mov
dec
iret
jg
jle
push
lcall
sbb
fnsave
add
std
xchg
adc
jae
out
mov
popa
mov
pop
cld
mov
xchg
jle
int
inc
sub
test
pusha
adcb
bound
jmp
rorl
lock
js
inc
push
push
fwait
imul
push
cmp
movsb
jae
dec
in
pop
push
test
addr16
mov
lea
test
pushf
sahf
xorl
stos
mov
xor
daa
outsb
push
sar
pop
scas
aas
or
and
push
sarl
or
inc
out
incl
dec
pop
rclb
pop
sub
fiadds
push
and
mov
incl
mov
pop
dec
ljmp
out
mov
xchg
adc
pop
cmpsb
xor
jmp
cmp
lcall
incl
pushl
dec
push
mov
das
out
pop
out
jb
and
inc
loope
sbb
jle
ds
push
jns
decl
jl
xchg
cmp
add
sbb
bound
clc
lock
mov
xchg
outsb
adc
pop
mov
dec
cli
fdivrl
inc
inc
jns
sbb
add
or
cmpsl
data16
cmpsl
push
jg
xor
cmp
out
addr16
lcall
movsl
xchg
cmp
ss
mov
clc
test
xchg
inc
sahf
jns
push
mov
xchg
mov
push
cmp
push
jns
arpl
xchg
imul
out
cli
xor
or
push
fs
cmp
in
mov
addr16
mov
xchg
incl
ret
or
cmp
outsb
push
pop
dec
ss
push
xchg
pop
mov
adc
push
and
inc
outsb
xor
and
cli
aas
pop
push
jle
movsl
enter
aas
loope
bswap
mov
mov
add
pusha
cwtl
jl
jnp,pn
xor
inc
pop
push
cmpsb
adc
push
imul
sbb
sub
xorb
int3
xor
push
jne
or
loopw
jns
ljmp
jns
xchg
mov
jg
sbb
pop
sbb
aas
or
out
hlt
dec
push
stc
test
adc
ret
test
cld
pushl
sub
sub
push
cmpsl
addb
decl
jle
cmpsb
inc
lcall
mov
pop
aas
loope
dec
dec
imul
aas
lods
scas
fs
and
subb
je
mov
sbb
xchg
xor
cltd
or
inc
jbe
sbb
cmp
inc
push
adc
decl
movsb
mov
scas
gs
mov
or
mov
mov
xor
mov
sub
mov
ds
cmp
popf
dec
adc
imul
dec
aad
idiv
sub
push
adc
and
add
adc
decl
das
pop
pop
push
sub
adc
add
or
or
mov
or
sub
xchg
lcall
lcall
add
lahf
push
mov
cmc
mov
mov
lret
dec
cli
sbb
mov
std
call
icebp
and
pop
mov
xchg
les
icebp
cmp
xchg
leave
nop
adc
push
pop
pusha
pop
xchg
out
mov
nop
stc
adc
lock
movsb
mov
mov
loopne
popa
out
sbb
xchg
xor
call
jb
mov
insb
add
loopne
jnp
sar
outsl
add
mov
test
mov
jg
jecxz
push
jne
cmpsl
mov
mov
incl
mov
mov
sete
insb
imul
jno
dec
stos
sub
dec
dec
outsb
push
push
popa
pop
mov
mov
adc
mov
add
mov
sub
ljmp
push
ss
push
xchg
into
xor
sar
lcall
pop
int3
mov
cmpsb
inc
addr16
cmc
xor
adc
jb
fs
sahf
rcrl
jg
decl
sub
ljmp
jl
das
mov
scas
outsb
insb
pop
inc
stos
cmp
out
mov
inc
push
xchg
imul
mov
mov
orb
ss
in
dec
push
lret
mov
decl
loopne
outsb
jecxz
jl
aas
pop
mov
cmc
push
add
lcall
dec
or
call
add
arpl
push
adc
outsl
cmpsb
cmp
dec
add
and
imul
push
or
add
daa
insb
add
adc
addr16
push
xor
incl
adc
in
loope
cmc
frstor
daa
popf
call
test
push
cli
jg
mov
loopne
mov
std
scas
aad
mov
negb
pop
mov
mov
mov
mov
mov
mov
incl
xchg
pop
mov
cltd
dec
movsb
cmp
rcrb
push
lods
iret
mov
dec
andl
add
test
lcall
fs
xchg
les
inc
int3
or
in
push
je
ds
ljmp
jg
rcll
push
pop
mov
add
jecxz
xchg
mov
pop
mov
dec
mov
sbb
pushf
leave
xchg
jno
push
mov
cmp
das
insl
hlt
nop
mov
call
mov
or
jo
mov
sbb
daa
test
call
add
mov
jmp
aad
rcrb
in
into
cltd
dec
mov
ret
in
xchg
jmp
inc
mov
leave
xor
scas
stc
movsb
enter
aas
test
cmp
insb
inc
stos
jo
loop
adc
outsb
cmpsb
sarb
rol
stos
push
test
popf
mov
push
and
xchg
sub
cs
and
test
lcall
scas
clc
sub
test
add
push
pop
cmp
or
ss
cmp
out
cmpsb
lock
fistpll
inc
cmp
inc
mov
xchg
aad
lcall
sbbb
bound
jecxz
inc
sbb
inc
xchg
aas
jecxz
mov
adc
call
fs
pop
adc
push
lods
aaa
mov
adc
sub
call
es
pop
sub
cld
and
adc
gs
jmp
lcall
xlat
pop
jnp
or
pop
cmpsb
into
daa
cmpl
xchg
pop
nop
daa
lahf
outsb
sti
sub
cmp
sub
inc
add
dec
xchg
add
aas
sbbl
mov
push
mov
mov
xor
xchg
ja
filds
dec
cmp
pop
xchg
pop
mov
test
sbb
mov
decl
pop
or
iret
and
or
fnsave
adc
mov
cmpsb
stc
or
sbb
scas
out
adc
or
ds
movsl
xor
nop
addb
out
xchg
cmp
mov
cmp
out
push
jo
sbb
sbb
cmp
push
sbb
push
push
cs
sbb
and
idiv
pushl
mov
xor
inc
mov
xor
test
push
movsb
and
scas
clc
aas
sbb
or
fldt
sub
adc
or
cli
mov
adc
jg
cmc
push
add
and
cmpsb
sbb
mov
lcall
mov
pop
xchg
out
or
sbb
sbb
pop
fwait
dec
push
inc
andl
adc
and
or
cwtl
cmp
jg
and
adc
sub
mov
xor
shrl
fbld
xor
add
mov
lcall
mov
jl
or
sub
sub
xchg
and
nop
fnstenv
imul
decb
or
cmp
sbb
xchg
cmp
pushf
hlt
sub
lock
inc
mov
pushl
sub
cmp
aam
mov
xor
mov
adc
xor
add
mov
or
jmp
jae
dec
mov
or
jp
out
popf
ss
add
arpl
imul
test
adc
aaa
sar
test
stc
add
add
pop
mov
pop
push
xchg
add
mov
push
cmp
jb
push
cwtl
in
mov
cld
incl
js
addr16
ss
and
fldt
lcall
mov
mov
xor
xchg
add
or
and
cmpsl
mov
adc
ffreep
lock
push
push
loopne
ss
sbb
fstpl
shlb
shlb
popa
mov
push
pop
xchg
push
and
lret
xlat
cmp
ljmp
push
in
or
ljmp
fidivrs
ss
jg
loope
test
or
cmpl
inc
jae
mov
jmp
and
gs
outsb
push
jmp
and
xlat
mov
dec
fwait
out
ret
jae
imul
cmp
pusha
shlb
push
ljmp
in
mov
sbb
addr16
inc
ficomps
pop
lock
aad
roll
imul
das
mov
adc
xor
pushl
loop
dec
and
xchg
icebp
scas
cmp
sub
mov
outsb
es
retw
fdivp
dec
xchg
jge
and
adc
lock
sub
mov
les
icebp
pop
add
into
lcall
outsl
inc
es
aad
adc
call
jl
test
popa
cld
jbe
xchg
mov
ffree
dec
mov
mov
lret
outsl
pop
data16
or
or
and
add
lock
jg
rcrb
push
inc
mov
popf
push
fs
xor
ljmp
mov
xchg
jnp
push
shlb
mov
jmp
icebp
jmp
stos
sbb
movsb
jo
push
setle
mov
cmp
scas
push
lds
mov
mov
lcall
adc
mov
push
les
mov
pop
mov
popa
shl
push
mov
add
clc
out
negl
loop
sbb
mov
lcall
sbb
shl
pop
ret
cs
lcall
movsb
popf
clc
gs
lret
ret
cld
pop
pop
ds
cli
shll
test
ljmp
or
icebp
out
aad
add
add
pushf
cmpsb
repnz
in
jmp
dec
lods
add
iret
iret
and
push
aam
sahf
and
popa
ror
ss
xchg
leave
pop
and
jno
je
subb
mov
iret
lods
shrl
bound
and
int
xor
and
std
incl
idivb
xor
iret
or
ds
jg
pop
scas
or
test
sbb
mov
lcall
std
mov
jne
xchg
popf
jae,pt
stos
pop
mov
cmc
lea
sbb
lods
xchg
movsb
faddl
mov
in
xchg
sarb
loopne
mov
cltd
xor
dec
loope
push
or
pop
nop
sub
xor
inc
clc
decl
cmp
xor
xchg
adc
jne
sub
shlb
jecxz
or
decl
cltd
insl
push
and
call
push
jl
jp
test
outsl
add
jmp
imul
sub
push
push
adc
push
out
sub
scas
pop
adc
addr16
daa
ja
pop
lds
xorb
sub
test
cmpsb
jge
mov
inc
or
stos
bound
or
push
pushf
push
bound
add
mov
ds
test
test
xchg
fcmovbe
in
mov
ret
ja
adc
mov
mov
and
outsl
imul
inc
push
ja
or
pushl
je
sub
xchg
push
jb
lcall
fwait
sahf
enter
push
jg
sub
jb
pop
icebp
sbb
pop
add
jle
add
jmp
fldcw
mov
dec
add
jmp
scas
popaw
xchg
stos
dec
dec
cs
sbb
ficoms
cmp
mov
xlat
pop
imul
jae
jecxz
mov
xor
add
mov
ljmp
stos
outsb
push
cmp
mov
jmp
call
imul
pop
adc
imul
and
ljmp
add
cmp
outsl
loopne
repnz
jecxz
hlt
push
jb
cld
mov
xchg
loopne
inc
dec
repz
push
pop
mov
jb
out
pop
jp
jno
out
clc
ja
push
mov
sbb
add
sarl
mov
das
add
in
in
ds
adc
fisttps
inc
pop
popa
xor
es
adc
jae
mov
lcall
lods
mov
iret
sbbw
fwait
movsl
rorl
call
fadd
push
loope
jbe
xchg
in
out
cmp
mov
pop
sub
jmp
jp
mov
mov
push
jno
mov
pop
dec
and
lret
fdivrs
and
inc
xor
add
loopne
xchg
push
std
and
loop
lods
aaa
mulb
out
incb
mov
call
icebp
xor
cs
push
and
add
lcall
push
fs
ss
or
and
cmpsb
pop
or
fisttps
push
in
cwtl
cmp
sub
cmp
sti
add
cmp
scas
icebp
xor
incl
sahf
sti
ss
fs
or
pop
into
push
mov
and
rcrl
add
mov
xor
movsb
loope
jg
outsb
enter
pop
test
inc
inc
popl
scas
or
pop
jno
arpl
pop
insb
es
adc
mov
mov
loope
pop
je,pn
idiv
mov
ljmp
lea
ret
pop
popf
pop
mov
repz
aas
std
add
xchg
push
lret
adc
cs
sub
jno
mov
jecxz
jnp
or
sub
and
pushf
das
sbb
or
and
loop
cwtl
mov
das
js
lea
ss
loop
push
sbb
cmp
icebp
pop
or
bound
pushf
push
and
push
mov
and
xor
inc
clc
fildll
pop
adc
push
cmp
sub
pushl
xchg
clc
mov
inc
ja
xchg
loopne
popa
sbb
xor
ja
fdiv
sub
mov
add
mov
jbe
les
lahf
aaa
mov
es
xor
and
cmp
lcall
jmp
or
add
daa
jle
dec
pop
fwait
xlat
and
outsl
jno
out
punpckhwd
fsubp
cli
xor
and
movsb
fisubl
addr16
loopne
mov
and
pusha
and
lcall
mov
insb
xor
xor
sub
xorb
gs
addr16
push
inc
aas
cmp
pop
loop
xor
cli
xor
xor
dec
add
xor
cmp
or
adc
addl
stos
xor
loopne
jb
mov
mov
mov
movsb
xor
cmpsl
cwtl
and
xchg
xchg
xchg
ud0
icebp
sahf
xorb
jle
arpl
decl
mov
jmp
mov
sbb
stos
inc
clc
pop
das
jecxz
dec
and
mov
mov
ljmp
push
cli
xchg
out
fs
movsl
addps
in
xchg
push
call
daa
add
push
loope
jecxz
in
lcall
addr16
ljmp
push
ljmp
pop
loopne
push
sahf
imul
jno
into
stos
adc
cmp
cwtl
loopne
int
mov
testb
dec
cmp
cmp
and
sti
mul
jbe
movsl
sbb
and
addr16
aaa
hlt
push
add
out
mov
mov
les
mov
cld
ds
loop,pn
int
outsb
cmp
or
ret
call
pushl
int
fisubrl
push
test
call
decl
arpl
lods
lock
sbb
sub
mov
call
mov
cmp
adc
in
rorb
push
insb
ret
jp
imul
jg
cmpsb
dec
push
pop
shlb
inc
and
std
call
jo
xor
jl
xchg
aas
out
out
ja
sbb
push
test
jo
xor
fmull
mov
mov
pushf
xchg
stc
lods
pushl
mov
xchg
scas
lea
inc
cmp
xor
mov
inc
adc
popl
mov
jle
es
ds
ljmp
sbbl
push
xchg
insb
loope
je
sbb
shl
add
jne
mov
and
decl
jbe
xchg
in
pop
lods
lds
sti
pusha
popa
sub
outsl
mov
mov
sub
shlb
jmp
decb
jg
mov
in
bt
repz
ljmp
jnp
cmp
std
sbb
add
pop
adc
cli
pop
push
test
cmp
les
popa
icebp
mov
scas
mov
pop
insb
out
jns
pop
mov
push
cmp
jecxz
or
xchg
sbb
inc
into
sub
dec
cmp
aas
test
xchg
test
pop
jo
jno
cmpsb
jle
cmp
pop
push
icebp
mov
ds
xchg
mov
and
jg
sbb
cltd
cmp
mov
testb
sub
test
dec
jae
aas
adc
mov
push
jo
sbb
movsb
add
adc
out
jnp
adc
repnz
in
xchg
hlt
mov
hlt
daa
xchg
bound
or
mov
out
adc
jg
fsubrs
out
sub
shl
inc
push
incl
mov
cmp
mov
jmp
jge
lcall
pop
shll
mov
dec
std
clc
add
and
pop
dec
lcall
mov
je
sub
sub
clc
and
mov
lds
adc
add
jmp
fisttpl
xchg
dec
or
scas
incl
dec
jecxz
jbe
push
and
xor
and
inc
rorb
cmc
ja
cs
inc
cmp
lea
je
sbb
push
hlt
mov
dec
push
adc
jg
add
pop
cmpsb
daa
and
push
ud0
mov
rcrb
cmp
loop
pop
mov
push
dec
scas
sub
out
jle
stos
neg
in
jmp
shrb
scas
scas
bound
fcmovnb
mov
lret
clc
aad
call
movsb
inc
es
std
leave
mov
jle
hlt
push
outsl
in
loopne
loopne
movsl
in
shlb
loopne
mov
in
cmpsb
xchg
sbb
decl
ss
lods
mov
test
adc
mov
cltd
daa
test
mov
xchg
mov
dec
test
adc
lea
int
outsb
dec
cmc
int
mov
dec
cmp
gs
mov
mov
jne
fwait
movsb
jmp
mov
fdivrs
movsl
lret
mov
shlb
clc
jno
test
loopne
dec
cld
jle
mov
adc
mov
ljmp
pushf
inc
sub
mov
shld
jle
ffreep
jb
jge
mov
add
push
cmp
push
sub
mov
popl
das
pop
push
insl
das
xor
or
or
pushf
call
ja
or
subl
mov
addr16
cwtl
add
cli
dec
jmp
xchg
inc
mov
sbb
mov
pusha
fmull
cmp
sbb
iret
stos
push
jae
scas
mov
hlt
dec
push
dec
push
jb
repz
mov
xchg
out
xchg
cmp
mov
negb
out
sub
or
xchg
xchg
jl
jmp
mov
addr16
or
adc
stos
inc
push
push
sub
int
insl
xchg
scas
mov
pop
ss
xchg
sub
mov
js
jecxz
icebp
ja
cmp
mov
push
sti
inc
data16
cmp
shlb
jb
dec
js
aaa
orl
stos
repz
out
jecxz
jecxz
mov
dec
mov
stos
int3
inc
jle
rcrb
fmulp
mov
ret
mov
popa
xchg
in
mov
mov
mov
out
mov
xchg
xchg
pop
loope
mov
fadds
sarl
ja
mov
and
xlat
imul
pushf
xchg
push
pop
adc
cmp
sub
push
les
mov
jp
leave
xchg
mov
sbb
and
fucomi
push
cld
sub
jne
jb
hlt
push
cmpsb
jns
in
ljmp
mov
cmpsb
cmp
aas
out
leave
mov
and
movsb
loopne
call
and
divb
or
jmp
pop
cmp
mov
add
adc
cmp
mov
pop
mov
mov
add
and
pop
std
fsubr
arpl
ja
movsb
popa
push
popa
stc
push
gs
dec
in
imul
push
pop
inc
pop
cwtl
inc
mov
sqrtps
push
push
or
out
mov
adc
add
push
jmp
mov
mov
push
es
jle
push
adc
push
jae
fmul
stos
imul
out
or
dec
and
repz
sbb
imul
dec
outsb
out
aam
jp
jae
popa
movsl
push
sbb
add
outsb
maxps
outsb
lods
inc
jg
jno
mov
push
xchg
mov
xchg
aad
mov
pop
loopne
call
sub
sbb
pop
pop
fs
in
aas
jo
movsb
loope
decl
cwtl
mov
adc
not
xchg
lea
leave
push
mov
push
push
std
cli
pop
fs
cmp
dec
in
xchg
cmp
pushf
inc
ss
ljmp
ljmp
mov
push
add
xchg
mov
push
fcoms
jo
out
add
loop
mov
xchg
fs
das
movsl
xor
test
lea
mov
fsts
xor
or
add
mov
clc
mov
push
mov
mov
xchg
xchg
push
je
cmp
jmp
jns
mov
dec
je
outsb
pop
outsl
mov
mov
cs
aaa
xchg
push
daa
jecxz
mov
adc
mov
dec
call
mov
push
jno
jne
mov
nop
loop
jae
cltd
repz
mov
inc
jp
ss
jae
fs
mov
enter
shlb
scas
sbb
mov
mov
fldcw
js
fnstenv
mov
xor
add
jg
icebp
cmp
test
outsb
imul
mov
das
and
jg
sbb
jb
ja
inc
in
loope
xchg
sbb
daa
cmc
xchg
pop
push
fwait
scas
or
jp
mov
xchg
into
add
stc
mov
mov
out
xchg
push
imul
mov
jae
mov
xor
mov
mov
sbb
fdivl
es
jg
push
xlat
add
xor
push
mov
fsts
push
cli
sarb
pop
mov
mov
mov
dec
cltd
fnstsw
daa
mov
fs
out
fcomp
movsl
pop
rolb
loopne
sbb
rol
shrl
and
cmpsl
stos
ljmp
pop
movb
inc
out
stos
mov
out
test
lcall
push
addr16
dec
shll
mov
int3
mov
decl
pop
push
pop
jns
loopne
mov
lods
repnz
push
aaa
and
call
inc
mov
xor
push
mov
xchg
and
push
clc
sub
xor
lea
lea
adc
loopne
decl
js
lds
push
jne
or
dec
add
sub
cmp
clc
xchg
cmpl
mov
mov
add
jo
je
xchg
adc
adc
jp
in
dec
outsl
cmp
or
int
cs
inc
ss
push
mov
call
adc
sbb
jp
push
and
and
insb
ljmp
pushl
mov
mov
ror
repnz
cmpsb
jns
pop
loopne
mov
daa
xchg
add
adcb
xchg
cltd
mov
push
ret
jnp
mov
mov
rorb
mov
jg
push
in
push
mov
pop
cmp
adc
testb
in
iret
adc
adc
xor
repnz
pop
cwtl
adc
or
out
xorb
in
mov
dec
jae
jecxz
das
shlb
adc
in
idivl
sub
fstpl
orl
nop
pushw
xchg
xor
pop
mov
out
das
add
xchg
daa
idiv
or
sbb
jecxz
adc
sub
popa
push
pushf
sub
jbe
addr16
imul
pop
jmp
in
or
dec
ret
jne
jmp
jmp
js
imul
inc
xchg
out
stc
mov
insl
add
or
loop
xor
fs
push
shrb
sahf
push
arpl
mov
enter
out
fs
sub
xchg
and
mov
jae
add
sar
jle
inc
xor
pop
pushf
sbb
ljmp
nop
sbb
jne
outsb
inc
pop
insl
adcl
sbb
mov
push
jae
xor
push
or
pop
lahf
mov
cld
adc
dec
mov
call
fsubrs
mov
js
push
jle
insb
sub
push
scas
xchg
mov
js
jg
xchg
pop
in
mov
xchg
rorl
rcr
or
sbb
dec
mov
push
js
outsl
and
ret
inc
out
adc
movsl
pushl
cmp
pop
enter
xchg
push
jle
loope
mov
push
decl
das
sahf
daa
lods
add
mov
out
push
jp
decl
test
pop
pusha
sub
xor
bnd
inc
sub
dec
cmpl
pop
in
mov
insl
xchg
pop
jnp
jp
ds
roll
popf
add
pop
adc
pop
jno
daa
ljmp
ja
pop
imul
push
dec
inc
sub
sbb
mov
in
ds
xchg
mov
orb
cmp
pop
cmp
adc
and
clc
mov
test
jle
sbb
lock
pushl
jo
push
dec
lret
js
mov
pop
pusha
xchg
movsl
xor
arpl
or
dec
scas
sbb
jb
and
shlb
or
dec
mov
jne
decl
inc
aas
jl
jbe
push
mov
call
inc
repz
add
mov
outsb
ficompl
leave
nop
pushf
outsb
or
fs
sub
les
mov
aas
and
cmp
mov
cld
pop
dec
pusha
test
dec
test
stos
xchg
mov
jg
call
nop
bound
sub
in
push
js
mov
imul
pop
jb
lret
push
dec
xchg
dec
jb
jg
xlat
xor
gs
in
inc
in
mov
test
mov
xor
pushl
mov
arpl
mov
aaa
mov
clc
test
cmp
or
xchg
mov
jg
orb
cmp
mov
imul
mov
test
ds
popl
push
sub
mov
or
mov
add
out
push
sahf
cmp
cmp
jg
andl
push
std
or
pushl
fs
mov
cmp
dec
push
inc
mov
imul
outsl
es
scas
cmpb
insl
push
push
fadd
not
out
fisubrl
xor
mov
mov
jno
mov
mov
push
inc
adc
je,pt
pop
lock
add
cmp
orl
adc
add
lcall
outsl
fidivl
jae
pop
hlt
mov
dec
sbb
adc
test
inc
shll
xchg
pop
int3
pop
insl
mov
pusha
out
xchg
ss
scas
ss
xor
xchg
cs
sub
gs
lods
sub
cwtl
jg
imul
stos
movsl
out
inc
decl
icebp
ss
aas
cmp
sub
nop
cmp
jle
mov
cmc
mov
cltd
shr
clc
jmp
ds
lcall
shll
dec
mov
mov
popf
pop
scas
lds
decl
and
loope
ljmp
cmp
push
and
cltd
out
shrb
xchg
out
xchg
add
sub
jbe
xor
test
cmp
push
fwait
xor
outsb
add
call
bound
inc
mov
mov
test
add
mov
push
aad
mov
push
pop
stos
loopne
mov
adc
jmp
and
lcall
imul
jge
dec
dec
push
sti
subb
push
dec
in
mov
mov
cltd
mov
mov
jno
jnp
push
adc
inc
loopne
push
xor
xchg
cwtl
xchg
mov
push
pop
mov
pop
repnz
stos
cmp
cmpsb
daa
mov
lret
xchg
inc
jb
lods
loope
cltd
add
pop
clc
cmp
pop
shrb
test
mov
outsb
or
es
lret
and
js
sub
ret
ja
jae
pop
push
add
jl
and
out
cwtl
add
imul
xchg
push
jle
ss
add
cmp
jle
icebp
cltd
pusha
adc
nop
pop
hlt
and
mov
inc
sahf
fisubs
fs
incl
stos
outsb
add
cmp
pop
sbb
out
adc
jmp
dec
data16
push
add
sub
xor
or
dec
imul
inc
dec
neg
pop
xchg
pop
ljmp
sbbl
je
dec
lds
push
push
xchg
xchg
jmp
js
and
push
dec
jp
mov
das
aam
les
push
int3
cmp
jp
inc
test
insb
fdivrl
add
out
jle
lods
lcall
mov
push
xor
jge
lcall
xchg
int3
es
xor
jno
pop
mov
pop
les
xchg
popa
sub
sbb
imul
jg
and
and
sub
pop
mov
mov
and
sbb
data16
sbb
mov
push
pusha
out
hlt
and
bound
sub
push
push
cwtl
loopne
cltd
test
std
add
push
out
xor
into
pop
or
add
cmp
pop
mov
inc
cltd
xchg
cmc
sbbl
adc
je
cmp
lods
fwait
mov
pop
ret
adc
jmp
adc
inc
test
cld
mov
dec
call
mov
mov
out
and
adc
mov
test
mov
ljmp
fs
xchg
push
in
mov
dec
outsb
sub
xor
jmp
das
out
sub
cmpsb
adc
aas
js
loopne
loope
xor
sub
lock
incl
or
rcrl
push
ss
std
adc
xor
inc
outsb
push
das
outsl
push
jg
push
and
int3
mov
sbb
jl
pushl
aas
jnp
sbb
loope
push
orb
push
testb
jg
add
inc
dec
lods
push
mov
mov
call
mov
mov
sub
insl
loopne
out
outsl
mov
jl
lock
pushl
iret
pop
pusha
je
push
jecxz
fs
xchg
gs
pushf
mov
or
mov
les
inc
mov
icebp
cs
ljmp
clc
push
inc
arpl
jnp
push
insl
arpl
fisubrl
push
adc
mov
inc
cmpsl
call
aam
out
push
cltd
gs
fwait
jg
sub
in
inc
add
popa
xor
fs
mov
cltd
mov
mov
arpl
sub
jbe
inc
and
mov
dec
daa
gs
pusha
scas
outsl
and
adcl
mov
cmc
pop
loop
push
inc
stc
cmp
xor
pop
adc
inc
jp
jbe
jae
pop
repz
imul
cmp
pop
pop
and
test
loope
dec
out
shll
ja
aas
mov
pop
int3
push
inc
repz
sarb
hlt
xor
nop
inc
mov
cmp
push
mov
pop
mov
mov
xor
or
push
ljmp
xchg
scas
mov
mov
call
add
aas
outsl
fwait
repnz
mov
subb
and
jmp
pop
imul
pop
pushl
xchg
test
test
push
popl
pop
xor
loop
push
repz
popa
lcall
pop
test
arpl
ja
sub
lods
pusha
mov
push
imul
pop
lea
stc
ss
out
push
iret
jp,pn
dec
ljmp
test
movsb
call
lods
in
mov
mov
add
daa
dec
out
insl
out
or
jecxz
adcb
movlhps
lods
les
cmp
rorl
push
jne
stos
jnp
in
add
call
nop
leave
insl
push
shll
sub
icebp
mov
jns
ljmp
subb
es
cmp
cli
or
shrl
xchg
mov
int3
dec
movsl
cmpsb
ret
jl
xchg
pop
pop
aaa
push
sbb
and
test
lret
pop
lret
gs
xor
incl
lods
xor
movsb
mov
dec
sub
cmp
lock
mov
dec
ljmp
loop
inc
cmp
enter
or
outsb
pop
mov
in
aas
jo
cmp
jbe
mov
cmp
and
or
stos
add
subb
cmp
sub
and
les
dec
sti
mov
xchg
incb
jo
jge
jle
imul
ljmp
int
dec
outsl
jp
insl
enter
ljmp
or
cmp
pop
es
test
push
mov
pop
xor
dec
insb
out
push
pop
mov
fwait
push
mov
sbb
add
jmp
or
jbe
js
lds
inc
mov
clc
incl
fwait
jnp
mov
cmp
push
xlat
sub
clc
push
adc
fnstenv
outsb
gs
jmp
push
arpl
jnp
push
jle
push
imul
arpl
testb
jmp
sub
ret
mov
dec
inc
scas
ljmp
xorb
dec
and
out
push
dec
fcomps
jb
test
ret
cld
lcall
out
mov
pop
inc
insb
fstl
cld
mov
faddl
inc
dec
sbbb
int3
loop
dec
pushf
out
test
lcall
incl
shrb
sbb
cmc
aas
push
dec
nop
push
popa
dec
cltd
out
arpl
stos
loope
push
xchg
fnsave
xchg
in
lcall
sbb
data16
sub
jg
ljmp
inc
jmp
fs
in
xchg
stc
mov
js
dec
xor
scas
icebp
push
ss
decl
inc
hlt
adc
js
pushf
pop
pop
jg
negl
fists
inc
mov
or
dec
cld
sub
pushw
pusha
fs
xor
jg
cs
push
mov
xchg
gs
push
cltd
into
ds
jecxz
loopne
arpl
pop
inc
outsl
outsl
pop
aad
jge
fidivl
outsb
mov
in
test
add
movsl
fistpll
js
decl
push
add
ficompl
pop
dec
xchg
clc
mov
ret
out
mov
adc
sti
cmpb
addr16
xchg
call
inc
dec
roll
push
cmp
or
cmp
ljmp
pop
hlt
pushl
cltd
loopne
pop
fnsave
mov
xlat
inc
mov
ret
inc
push
cld
push
push
je
stos
add
lahf
shrl
lret
xchg
int3
repnz
inc
push
jmp
ficomps
ja
out
pop
pop
mov
jp
mov
scas
stc
sbb
xchg
cli
adc
leave
xor
jbe
add
dec
aad
hlt
jmp
lcall
repz
cmp
rorl
addb
pop
ljmp
xchg
xchg
jp
or
push
jnp
sub
lds
popa
sbbb
jmp
mov
mov
xor
jmp
xlat
imul
pusha
aad
pop
pop
les
push
imul
mov
xchg
mov
cmp
push
js
pushl
jno
aam
js
test
in
pop
nop
in
out
js
mov
mov
jne
fisubrs
pop
push
icebp
dec
cld
adc
jecxz
test
xor
lds
fsubp
mov
mov
add
xor
add
fdivs
jg
xchg
sbb
inc
mov
mov
ljmp
std
mov
jne
adc
sarl
inc
or
addl
mov
scas
into
xor
test
aas
add
fisttps
push
push
jno
shlb
jge
sahf
adc
add
les
jmp
loopne
fimuls
jecxz
lcall
inc
insb
shrl
popa
inc
sahf
add
in
inc
divl
out
nop
xorl
clc
fsubrp
pop
insl
sahf
add
pop
and
outsb
lds
pusha
call
xchg
pop
xor
pop
icebp
test
repz
test
jne
push
ljmp
jle
add
ja
push
push
xchg
cli
mov
lcall
imul
mov
inc
movsl
hlt
jnp
sub
mov
jbe
stos
jecxz
dec
sti
stos
out
jbe
fbstp
jg
jo
out
movsl
jle
cmc
adc
fisubs
jle
lahf
and
jbe
ljmp
cli
mov
xor
into
mov
mov
mov
es
gs
pop
sbb
lds
aaa
and
test
mov
in
outsl
mov
cltd
fldl
sbb
add
fisubs
imul
out
mov
push
mov
clc
push
lcall
sbb
cmp
push
or
aam
xchg
leave
cmpsb
jge
and
insl
pushf
roll
cmpsb
cmp
iret
adc
sarb
pop
dec
lcall
das
cli
push
fisubs
test
cmpsb
adc
xchg
jo
inc
pop
lock
call
lock
xchg
mov
push
scas
in
ja
lret
cltd
gs
dec
leave
sahf
mov
out
push
arpl
test
xor
push
pop
mov
adc
imul
pop
xchg
pop
mov
pop
shlb
mov
sbb
xor
fdivr
pop
cld
lcall
push
ja
fnstenv
cld
cmp
jge
adc
cmpsb
pushl
popf
idivb
or
push
push
aad
shll
push
idivl
pushl
mov
push
jnp
xchg
out
idivl
jle
clc
mov
insl
popa
xchg
jmp
insl
repz
cmp
xchg
and
pop
mov
mov
add
jle
fstl
mov
jg
cmp
fisubs
cwtl
jge
push
jle
mov
mov
mov
out
loopne
hlt
cwtl
fcomip
or
jnp
push
incb
sub
xchg
pop
int
incl
mov
mov
add
xchg
enter
insb
fistpll
mov
aaa
lods
cld
decl
mov
sub
jo
loope
mov
push
xchg
add
aas
subl
add
arpl
xchg
add
jg
jecxz
xchg
jmp
push
pushf
int3
sahf
ljmp
filds
and
pop
mov
lcall
das
pop
sbb
aas
lcall
cmp
inc
fwait
cmpsb
pusha
in
out
sbb
call
rcll
popf
mov
incl
lods
dec
sbb
cld
daa
mov
cmp
xchg
ret
mov
xor
daa
cmc
lcall
push
mov
xor
and
scas
add
sahf
pop
lds
inc
mov
outsl
cld
fbstp
push
popf
xchg
mov
gs
mov
mov
jg
outsl
cwtl
fs
xor
js
mov
and
ret
mov
mov
pushl
loopne
xchg
popf
notb
jg
pop
pop
jg
test
aaa
add
mov
dec
mov
andl
lcall
add
fnsave
xchg
fsubrl
mov
subl
cld
stc
lahf
mov
loop
inc
pushf
out
test
mov
sahf
xchg
aaa
cmpsl
stc
repz
int
xchg
nop
stos
loope
pop
xchg
xchg
sbb
mov
mov
inc
test
stc
mov
adc
xchg
cld
cld
filds
jmp
jae
nop
mov
add
mov
push
clc
mov
jmp
jns
arpl
inc
xor
clc
ljmp
xchg
data16
xchg
dec
cmpsb
add
mov
cmc
test
push
sub
jg
jecxz
cld
xchg
pop
jmp
pusha
in
pushf
js
cmp
lock
push
mov
roll
xchg
mov
ret
cmp
xchg
xchg
xchg
inc
decl
mov
cmp
data16
mov
mov
sbb
xchg
roll
incl
movsb
xchg
mov
popl
add
cld
in
mov
or
cmpsl
inc
push
xchg
xlat
mov
cmc
xchg
pushf
mov
add
sbb
pushl
ljmp
pop
push
inc
mov
mov
imulb
repnz
lcall
jo
adc
push
sub
jl
lods
loop
jno
repnz
sbb
repz
rcrb
xchg
pop
mov
out
jnp
sub
jle
in
mov
je
decl
mov
push
cwtl
mov
cmp
mov
mov
jg
mov
mov
mov
dec
inc
mov
mov
hlt
mov
pop
sbb
push
nop
cmpsb
xor
jns
lcall
pusha
add
addr16
pop
jl
std
xchg
filds
add
insb
out
add
mov
mov
out
mov
addr16
mov
cmpsb
out
pop
mov
xor
pop
sahf
sbb
cwtl
xlat
xchg
imul
pop
jp
push
cltd
fsts
pusha
fistps
inc
into
std
jg
and
mov
mov
cmp
sbbl
cmpsb
call
in
cltd
xchg
xchg
ds
jo
xchg
add
push
push
sub
incl
lcall
aaa
inc
mov
insb
leave
and
aaa
sahf
roll
inc
and
scas
push
add
add
out
jmp
movsbl
cs
popf
pushf
fisubrs
push
xchg
and
arpl
aaa
dec
mov
out
sarb
push
mov
push
mov
pushl
in
pop
mov
xor
int
mov
std
lcall
leave
outsb
mov
dec
and
addr16
and
inc
push
loopne
mov
sbb
mov
xchg
in
in
sahf
pushf
jg
ds
addr16
decl
stc
sbb
int3
mov
xchg
push
hlt
fcomps
push
jmp
es
xchg
pop
ja
mov
mov
cmp
lcall
repnz
lcall
cmpsb
sbb
sahf
mov
imul
mov
insl
cli
lret
mov
xchg
mov
lcall
icebp
xchg
add
inc
sub
test
add
mov
mov
cmp
roll
mov
mov
inc
nop
cmp
mov
int
fsubrp
xchg
loop
pop
mov
sub
popa
ret
movsl
mov
mov
iret
xor
mov
jle
xchg
cli
push
push
pushf
loopne
decl
test
jo
dec
mov
iret
adc
mov
popf
mov
jb
movsl
dec
jmp
movl
cwtl
dec
jo
icebp
mov
popf
cmpb
mov
fwait
pop
std
pop
xchg
dec
cmpl
lahf
jg
mov
ds
cli
movsb
dec
jmp
incl
mov
pop
pushf
add
lcall
jp,pn
mov
xor
clc
rorb
fwait
dec
jg
call
fs
adc
popf
insl
pop
pushf
jno
push
pusha
pop
mov
dec
repz
adc
fsts
call
cwtl
out
clc
lcall
push
and
sbb
insb
icebp
sbb
sarb
pop
dec
mov
test
xchg
ljmp
cmc
clc
incl
mov
push
movb
popa
fdivrl
orb
popa
pop
mov
test
mov
fwait
lock
mov
push
add
push
decl
jecxz
fs
roll
pushf
cmpsb
jle
pop
mov
add
mov
xchg
and
test
cld
test
push
add
cli
lcall
xchg
lods
mov
cld
mov
cmp
xor
pop
xlat
xchg
inc
ficoms
cli
out
clc
adc
loope
rol
mov
into
mov
mov
xchg
pop
repz
das
les
repnz
mov
outsl
cld
dec
mov
fistps
movsb
jnp
and
jg
mov
mov
jb
mov
lcall
out
jg
jg
popa
mov
xor
outsb
scas
pusha
mov
mov
icebp
test
add
jmp
popa
mov
orb
pop
lret
inc
cld
call
clc
mov
inc
mov
jb
mov
callw
fldl
xchg
test
or
xchg
pop
inc
mov
mov
sbb
in
xchg
inc
mov
lods
mov
sbb
sub
jnp
movsb
out
jnp
mov
adc
call
lret
sahf
xchg
mov
sbb
lcall
cmp
lahf
adc
test
lret
xchg
cmp
sbb
push
mov
iret
and
mov
lret
mov
sbb
cwtl
xchg
xchg
scas
mov
xchg
sbb
dec
lods
pop
and
add
test
cwtl
insl
mov
cmpl
fnstsw
stos
lcall
jge
stos
into
iret
mov
cmp
call
xchg
repnz
mov
lods
outsb
sarb
fwait
jl
adc
inc
stos
rep
in
cmp
rcrl
dec
ret
ret
mov
push
cwtl
sbb
pop
mov
cs
mov
in
pop
add
scas
dec
icebp
sbb
or
push
xchg
pop
call
int
std
and
nop
call
lcall
sub
pop
xchg
sub
adc
negb
xchg
js
iret
add
rcrb
lcall
inc
jae
mov
add
ljmp
or
xchg
test
movsl
dec
aam
call
inc
mov
xlat
xchg
push
mov
cmp
shll
push
in
clc
lcall
adc
insb
sahf
sbb
mov
adc
std
ljmp
popf
movsl
jg
pop
push
cld
mov
pop
stos
icebp
cwtl
jge
mov
and
cli
pushf
lahf
dec
dec
mov
push
jbe
test
add
rcrb
pop
lods
ret
popf
inc
negl
fsubrl
aas
pop
xchg
loopne
js
push
imul
xchg
insl
pop
and
adc
mov
pop
fcomip
call
ret
xchg
iret
movsb
outsb
stc
mov
daa
pop
mov
icebp
test
incb
outsb
xchg
dec
fwait
sbb
mov
out
sar
mov
jnp
mov
fisubs
mov
scas
jbe
outsb
xchg
pusha
mov
sarb
ljmp
out
mov
pushf
fiadds
xchg
pop
fnstenv
test
mov
jecxz
ljmp
daa
pop
mov
inc
nop
outsb
in
add
ja
dec
data16
mov
fsubrl
jg
lea
adc
subb
out
xor
jbe
pop
ret
mov
xlat
and
subb
mov
mov
jbe
mov
daa
jbe
sub
xchg
outsb
idiv
or
xchg
fiadds
xchg
outsb
cmp
pop
mov
dec
out
jecxz
pop
mov
xchg
jmp
mov
out
fidivrs
pushf
push
fldcw
orb
je
orb
out
sbb
stc
sahf
test
add
loopne
je
mov
or
mov
xor
fidivrs
dec
std
jno
pop
jle
mov
fsubl
mov
fstpl
ret
jns
adc
mov
dec
int
and
pusha
in
std
ljmp
sbb
pop
mov
decl
out
bound
jne
sbb
cmp
inc
xchg
imul
lods
idivl
mov
xchg
mov
mov
inc
mov
jl
cs
loopne
decl
icebp
sub
jo
in
popf
inc
repnz
fldenv
dec
mov
jg
jns,pn
or
outsb
popf
sbb
mov
repnz
enter
in
mov
gs
insb
icebp
test
sbbb
nop
cmpsb
mov
inc
inc
mov
mov
mov
xchg
adc
mov
loope
xor
pop
or
cwtl
fs
ljmp
push
mov
dec
mov
push
outsl
aam
dec
fsubrs
ret
jmp
cld
call
andb
test
cmp
mov
ss
lcall
test
test
mov
lods
sbb
addr16
dec
cmpsl
imul
cmp
call
pushf
xchg
dec
sar
cld
dec
repz
out
dec
mov
scas
mov
insb
shll
addl
mov
pop
je
xchg
xor
dec
out
xorb
mov
nop
scas
mov
xchg
push
mov
inc
lcall
fwait
mov
lea
aaa
jle
xchg
sbb
pop
test
pop
std
jg
fnsave
push
push
sti
cmpsb
ljmp
mov
cld
adcl
cmpsb
cs
xchg
pushf
pop
sbb
push
test
xor
dec
mov
pusha
cld
adc
scas
cmpsl
cli
and
pushl
mov
sahf
add
and
jge
jno
mov
in
jle
push
mov
push
cmp
test
mov
sbb
ret
lock
xchg
ja
clc
mov
fcoml
push
inc
jns
pop
incl
jae
cmc
js
mov
popl
fnstcw
push
imul
fwait
int
pop
mov
inc
dec
daa
dec
sbb
jns
lret
dec
nop
cmpb
popa
adc
jne
jae
mov
ret
jle
clc
stos
jg
mov
mov
mov
loop
scas
lcall
jo
xor
ret
int3
jle
mov
adc
negb
insb
in
xor
inc
push
sub
pusha
push
mov
mov
mov
xor
roll
scas
sub
es
sti
pop
clc
xor
test
dec
pusha
inc
scas
mov
pop
mov
sub
xchg
icebp
add
add
adc
ds
ja
insb
xchg
jg
jno
popf
pop
jle
mov
xor
test
xchg
push
xchg
int3
lcall
lcall
outsb
fs
popf
dec
push
cwtl
rorb
xchg
push
jae
cmpsb
jo
fildll
ja
push
sahf
inc
data16
mov
inc
push
mov
lcall
lahf
mov
xor
dec
jge
mov
dec
or
push
lea
gs
mov
jae
mov
push
jae
xchg
jbe
jb
inc
pop
jns
pop
and
dec
push
fisubl
pushl
aad
dec
pop
filds
adc
lds
call
pusha
pop
push
mov
loopne
pop
stos
or
sbb
sub
dec
push
mov
dec
aad
jg
test
push
dec
inc
inc
pusha
fwait
pusha
nop
jbe
xor
mov
dec
pushl
jge
pop
pop
inc
push
mov
push
out
imul
ja
jp
fs
rcrb
lcall
fisubrs
mov
insl
cld
jno
sub
ljmp
outsb
jo
imul
cmp
xchg
jae
stc
scas
jg
jne
inc
jl
ss
push
cwtl
adc
mov
loopne
add
std
xchg
ja
jg
jecxz
push
dec
xlat
xchg
lock
out
sbb
dec
inc
ja
jo
dec
push
jge
loopne
ret
add
sbb
bound
push
and
mov
sbb
inc
stos
mov
dec
mov
int3
lahf
cld
mov
jl
add
test
fisttpl
xor
mov
jge
imul
jno
and
ljmp
addr16
loope
mov
mov
mov
ljmp
push
or
push
inc
out
and
jae
outsb
sbb
decl
dec
jecxz
push
xor
jb
into
dec
notl
mov
or
sbb
incb
or
aaa
sub
jg
out
loopne
push
imul
pushf
das
pusha
mov
pop
mov
jns
and
lcall
xchg
out
insb
jne
push
insb
xor
jmp
sbb
mov
xor
clc
or
cld
ljmp
push
sahf
mov
mov
ljmp
outsb
fildll
xchg
addb
dec
in
mov
sbb
mov
pop
xchg
cmp
jl
sbb
pushf
pop
mov
repz
out
pop
xchg
jp
outsl
repz
mov
push
sub
and
push
add
or
inc
push
mov
fisubrl
decl
pop
loope
xchg
ret
xor
add
add
jae
mov
in
pusha
dec
cmp
pop
add
mov
or
cmp
data16
mov
addb
loopne
mov
cs
es
jmp
xor
mov
ss
jge
sub
pop
mov
xor
pop
shrl
lea
inc
jns
or
jg
add
push
xchg
fnsave
sahf
adcl
mov
lahf
shlb
cmp
push
pop
xor
nop
aas
xchg
pop
adc
aaa
and
insb
cli
dec
pop
les
scas
lods
test
test
je
sbbl
mov
dec
clc
daa
or
xor
out
out
inc
call
insb
shrl
push
jl
imul
add
pushf
inc
inc
xchg
adc
cmp
jb
loopne
jbe
cld
xchg
add
cmpsb
stos
ljmp
and
gs
out
cwtl
sahf
inc
mov
sub
dec
stos
inc
fisubrl
xchg
das
inc
cld
pop
test
and
cmp
cltd
mov
mov
lret
mov
addr16
test
jmp
pushf
inc
push
aaa
dec
sbb
call
in
xchg
adc
mulb
mov
movb
inc
movsb
sub
out
mov
clc
jmp
sbb
xchg
push
scas
mov
mov
loopne
xchg
js
mov
cmpsb
ljmp
cltd
lods
cmpsb
push
fisubs
call
call
je
mov
in
lea
sbb
xor
fucomip
add
shll
xchg
add
sahf
test
lods
aas
pusha
xchg
xchg
lcall
pop
scas
jmp
daa
push
std
cmp
or
dec
iret
dec
call
je
cmp
dec
stc
incl
sbb
stos
lods
loopne
mov
out
dec
push
out
jae
xchg
inc
loop
mov
jmp
in
mov
sub
subb
fs
or
fiadds
jmp
sub
es
lds
insl
push
mov
push
je
mov
cmpsl
mov
addr16
scas
mov
xchg
pop
sub
adc
shlb
js
xchg
filds
std
das
pop
lret
pop
mov
outsl
push
and
mov
mov
outsb
lock
mov
xchg
mov
into
js
ljmp
icebp
xchg
jl
test
popa
push
std
cs
insb
loope
icebp
jmp
fs
nop
nop
fistpl
xchg
xchg
mov
inc
push
aaa
fisttpll
sbb
and
mov
adc
jg
lcall
loopne
xchg
in
xchg
xchg
fistps
popf
clc
dec
mov
out
cli
pushl
pop
dec
push
jle
add
punpckhdq
outsl
pop
inc
stos
xchg
clc
cmp
mov
sahf
movsb
ljmp
out
das
sbb
and
fsubs
loopne
out
out
jg
fistps
xchg
scas
lcall
bound
aad
decb
rorb
and
inc
inc
outsl
fisubl
test
pop
insl
xor
lock
cli
leave
ja
lods
lcall
fstps
xchg
mov
or
gs
adc
addr16
mov
jg
pop
in
push
mov
jecxz
cwtl
iret
das
out
cmp
mov
incb
xchg
adc
cs
lret
mov
push
andb
orl
outsl
push
out
incl
mov
dec
mov
pop
arpl
mov
xchg
lock
mov
jg
or
loopne
pop
ss
cli
and
lods
push
push
arpl
add
scas
and
pushf
push
xor
lahf
sbb
aaa
fwait
pushl
out
stos
jge
or
sub
and
jno
js
insb
js
add
fcmovne
ss
xchg
xchg
or
push
icebp
pushl
mov
mov
inc
lock
insl
jp
mov
mov
sbb
popf
push
sub
aad
mov
sar
jg
mov
jnp
into
hlt
inc
mov
je
push
call
mov
mov
push
out
cmpsb
popf
mov
std
mov
mov
mov
les
lock
xchg
aaa
cld
decl
pop
mov
jmp
icebp
mulb
jl
fsub
jl
test
inc
xchg
mov
repnz
inc
in
pop
es
sti
les
decl
call
mov
notb
mov
mov
add
pop
ljmp
adc
add
call
and
xor
ljmp
push
cmpsb
fwait
xchg
inc
test
inc
inc
lcall
popf
sarb
in
cmp
jg
lcall
mov
jecxz
dec
sub
push
js
loopne
mov
out
ret
xchg
xchg
push
mov
pop
in
dec
xor
inc
pop
cld
pushl
cmp
aas
add
out
sub
mov
push
cmpsb
mov
sarb
and
push
je
jmp
leave
insb
xchg
xchg
mov
scas
and
mulb
mov
push
pusha
mov
jge
xchg
push
cld
aaa
call
call
popf
cli
in
xchg
scas
outsl
xchg
cli
mov
decl
push
mov
mov
into
insb
cmpsb
loopne
sbb
xchg
out
mov
in
push
stos
lret
cli
pop
inc
push
push
push
ljmp
mov
mov
mov
lret
out
lock
sbb
scas
jne
hlt
xchg
mov
pop
lahf
and
pop
sub
pop
xchg
cltd
repz
pop
xchg
and
push
inc
jbe
aam
inc
xchg
negl
xor
outsl
in
loope
mov
inc
and
jg
add
add
lcall
xor
jbe
or
or
sbb
shl
pop
decl
mov
dec
outsb
dec
cmp
cmp
shll
test
ljmp
lret
mov
push
push
dec
mov
outsl
mov
inc
cmpsl
xor
int
xchg
dec
push
in
adcl
stos
inc
pusha
push
inc
sti
jle
jl
leave
je
call
mov
or
dec
jp
scas
test
sbb
scas
popf
push
imul
pop
xchg
cs
sub
pop
testb
ljmp
pop
pop
out
inc
jae
shrb
outsb
pushf
out
xchg
repnz
pop
mov
std
decl
lods
xchg
cwtl
sahf
dec
xor
push
cmp
int
xchg
ljmp
xchg
inc
xchg
lret
mov
add
hlt
pop
xchg
mov
mov
jmp
outsb
sub
push
and
stos
out
fimuls
test
cs
outsb
inc
add
shrl
cmp
ljmp
repnz
xchg
outsb
inc
popf
clc
mov
enter
lods
pop
testl
pop
jne
jb
sub
sarb
dec
mov
jg,pt
insb
jmp
jmp
mov
xchg
in
sub
fldl
jp
inc
das
js
repnz
adc
loopne
pop
mov
push
mov
fcmove
inc
lea
out
cmpsw
and
call
sub
push
sbb
xchg
ljmp
pushf
cmpsb
jae
rclb
sub
popa
fld
push
mov
sbb
jo
cmp
aad
mov
mov
orb
or
loopne
ja
repz
mov
adc
jmp
nop
xchg
inc
xchg
and
loope
mov
pop
pushf
popa
aaa
xor
sti
mov
cmpsl
mov
mov
sbbb
sarb
mov
jo
dec
test
mov
mov
clc
add
leave
push
rolb
incl
inc
mov
pushf
ja
inc
jge
jl
test
sub
sbb
jbe
push
and
sahf
enter
jbe
dec
fisubrs
mov
lds
cmpsl
dec
xor
pop
sbb
call
repnz
push
aam
scas
das
xor
call
rcrl
dec
push
ja
stos
dec
mov
aam
repz
sahf
mov
outsw
mov
int
lods
mov
lock
push
sbb
ja
call
pop
mov
adc
arpl
incb
jg
stc
shlb
bound
lcall
cltd
lea
pushf
mov
add
pop
hlt
sahf
enter
or
mov
jecxz
sub
xchg
test
adc
stos
inc
mov
stos
cmpsb
dec
inc
ja
clc
pop
push
jns
roll
imul
mov
mov
jbe
out
xor
ljmp
cmpsb
jl
adc
mov
iret
inc
shl
adc
int
push
mov
inc
js
test
fidivrs
dec
dec
mov
mov
iret
sbb
mov
adc
pushf
mov
ljmp
dec
fincstp
push
cmpsb
outsb
popf
outsl
movsl
popa
rorl
into
cld
and
pop
mov
cmp
out
xchg
inc
cmp
fstp
sar
sub
sbb
lods
movsb
gs
adc
lcall
or
lods
sahf
out
jnp
dec
mov
es
pushf
adc
call
das
ss
xchg
fldenv
out
outsl
lcall
repz
std
call
mov
jo
pop
pop
inc
mov
dec
subb
xchg
mov
js
fidivrs
outsb
in
push
dec
sti
cmpb
out
sbbl
das
sub
and
repnz
add
mov
xor
push
push
orb
jle
movsl
sub
sbb
push
mov
dec
shrb
jl
dec
fiaddl
pop
sbb
dec
cli
outsl
ret
sahf
push
pushf
divb
pushf
mov
mov
mov
cmp
bound
pushl
std
shll
jp
mov
mov
mov
jl
daa
jnp
in
xchg
dec
or
pop
fwait
mov
loope
mov
xchg
push
jb
jno
jns
cmp
pop
dec
mov
sbb
mov
mov
pop
lods
dec
fs
adc
sbb
jp
sub
cmp
mov
cld
add
sbbl
je
clc
decl
cmpsb
pop
xchg
push
outsb
jg
insb
pop
xchg
push
ret
into
sub
outsl
xchg
lock
cmp
jge
add
lahf
xor
jle
clc
call
xchg
jae
xor
decl
pop
cli
xor
jbe
mov
jg
xor
cmp
arpl
adcl
loopne
mov
ss
and
xchg
pop
jge
je
js
hlt
jmp
cmovb
push
dec
in
sub
call
clc
cmp
adc
jo
mov
shll
jno
mov
ja
leave
mov
cmpsl
mov
clc
inc
into
jno
jae
xchg
jg
fnstsw
je
ljmp
xchg
inc
inc
movsb
rcrb
xor
cmp
jge
jg
jg
loopne
jae
outsb
subl
lret
imul
and
and
ljmp
call
addr16
inc
lock
jae
dec
in
jo
jmp
cmp
arpl
pop
mov
mov
push
xchg
push
xchg
or
jae
outsb
popa
jmp
pushl
xchg
leave
cwtl
push
jl
cltd
das
xchg
xor
fdivl
lea
and
mov
imul
pusha
fs
ret
out
cltd
jmp
inc
out
outsb
out
mov
or
pop
scas
sbb
cmpsl
adc
ret
dec
loope
mov
call
mov
mov
or
jbe
imul
stos
and
inc
mov
das
sub
scas
ljmp
mov
sub
fistpll
cli
test
mov
jne
push
mov
push
xchg
jecxz
pushw
out
cli
or
cmp
cmp
adc
push
mov
add
push
add
inc
xor
add
and
leave
js
cmp
ljmp
mov
sub
and
cmp
das
arpl
push
xchg
jns
push
out
dec
in
dec
popa
sbb
dec
call
mov
jb
mov
jne
mov
ds
iret
nop
push
cmp
jnp
bound
mov
mov
int3
xchg
call
push
out
sub
xor
xor
test
ss
jp
mov
adc
addb
scas
dec
cli
jmp
out
and
cmpsb
fldenv
sbb
sub
xchg
in
adc
adc
cmp
mov
pop
ja
mov
pop
pop
clc
mov
daa
add
out
rclb
ss
inc
mov
push
les
mov
cld
lcall
mov
inc
inc
mov
inc
jge
and
mov
int3
stos
push
sub
cwtl
xor
push
pop
sbb
call
and
mov
bound
aaa
pusha
clc
jo
mov
hlt
pushl
sub
mov
xchg
cmc
out
sbb
out
and
cltd
lods
pcmpeqw
in
add
and
cmpb
in
movsb
pop
sar
data16
jle
test
sub
out
negl
ljmp
data16
mov
scas
add
mov
das
fs
in
lods
rcrl
call
jb
fwait
mov
repnz
dec
jg
test
jp
lahf
jmp
in
cli
rolb
mov
pop
pop
cwtl
sbb
cld
das
xor
fidivrs
push
out
mov
mov
jge
scas
outsb
loop
xchg
mov
add
mov
into
out
add
mov
and
lock
inc
push
jb
mov
dec
aaa
mov
decl
lock
xorl
cmc
cmp
sbb
cmp
or
adc
dec
mov
jo
jp
enter
inc
jnp
jl
ljmp
xchg
and
mov
jne
lret
outsl
jl
icebp
sub
repnz
sbb
pop
cmpsl
js
es
jg
push
cmpsb
popf
pop
xchg
fcompl
pop
das
mov
sub
ljmp
sarl
mov
jbe
movsl
hlt
push
adcb
pop
mov
lcall
mov
stos
aad
jno
aas
je
and
cld
out
xchg
jns
and
popa
lds
push
je
dec
jno
sar
add
mov
push
or
scas
mov
push
fldcw
cmc
scas
dec
sarb
sahf
or
dec
xchg
sarb
out
addr16
xchg
movsl
cld
cld
out
xor
or
dec
push
fwait
inc
mov
out
cwtl
out
test
call
xchg
jg
mov
xor
movsb
out
popa
pop
fnstenv
push
mov
fldl
ljmp
sbb
pop
pop
out
inc
cld
jmp
sahf
jne
ds
and
push
add
sub
or
es
xor
push
push
push
pusha
ljmp
in
pop
sub
sbb
jg
scas
scas
mov
mov
mov
mov
fwait
sti
mov
cmp
sub
incb
imul
call
ja
inc
fwait
push
pop
js
xorl
aas
jbe
nop
xchg
or
pop
push
mov
in
ss
fwait
and
popf
lahf
push
rcrl
in
push
pusha
mov
call
call
xchg
testl
gs
xor
xchg
adc
popa
loope
decl
and
lods
cmp
jmp
inc
mov
arpl
pop
in
mov
jnp
movsb
mov
jns
cmp
clc
mov
mov
jp
push
pop
leave
mov
jecxz
cmc
mov
outsb
cmp
mov
fs
jg
xchg
pop
mov
cmp
das
dec
push
mov
jecxz
jno
sbb
dec
fists
dec
das
add
int3
testl
add
jmp
lcall
scas
int3
nop
mov
jmp
ret
xchg
ficoms
or
push
leave
mov
cmp
lds
bound
jg
pop
sub
pop
and
jmp
pop
ret
scas
mov
or
call
rorb
rorb
dec
shlb
ljmp
add
push
mov
scas
out
inc
scas
inc
jae
mov
push
jno
mov
mov
mov
fildl
arpl
int
or
call
pop
mov
xor
adc
mov
rcrl
sbb
movsb
int
addr16
insb
or
gs
ljmp
mov
incb
mov
hlt
xor
ljmp
js
hlt
mov
rol
out
les
mov
ljmp
jmp
fdivr
mov
mov
arpl
jl
jbe
lahf
test
jg
out
ret
push
ja
mov
addb
xor
addr16
in
jg
cmp
push
arpl
pusha
fldz
movsl
and
mov
inc
in
outsb
push
inc
scas
clc
mov
jb
sub
addr16
ds
dec
push
movsb
jg
icebp
scas
arpl
lods
push
add
insl
cmpsb
outsb
hlt
out
std
jg
ljmp
jp
mov
fildl
frstor
loope
loopne
mov
neg
xchg
mov
icebp
orl
outsb
loope
mov
decl
stos
nop
mov
inc
push
cli
std
lods
les
fwait
dec
xor
movsl
sub
ljmp
das
aaa
jo
orl
je
inc
push
xchg
sahf
xchg
xchg
mov
imul
pop
cmp
ja
lods
xchg
scas
ja
push
pushw
cli
xchg
jmp
jmp
nop
decw
insb
in
in
mov
jno
inc
push
out
pop
aas
pushl
call
dec
loopne
test
mov
rorl
cmpsb
in
xchg
mov
jae
out
or
sahf
mov
cmp
test
jbe
mov
pusha
fldl
lret
mov
enter
fmull
popa
cmp
jle
jl
movsb
outsl
jmp
mov
pop
jmp
fwait
push
xchg
loope
lea
idivb
inc
mov
test
mov
add
scas
fiadds
mov
dec
fisttpll
incl
mov
cmp
xchg
sbb
or
nop
xor
imul
loop
fs
xchg
mov
inc
jno
popf
push
jo
inc
dec
decl
push
jb
sub
cmp
out
outsl
push
push
jo
cmpsl
mov
fwait
xchg
cmc
out
stos
push
pop
scas
cmp
lds
xchg
xchg
cmpsb
dec
cmpsl
dec
insl
push
hlt
incl
pop
pop
jle
adc
pop
sub
clc
call
out
cmc
push
sbb
clc
mov
popf
mov
adc
mov
xchg
addr16
adc
clc
out
mov
jbe
mov
call
jae
inc
adc
mov
add
mov
adc
outsb
jb
sar
das
clc
aas
jl
xlat
dec
ss
xor
dec
je
aaa
jne
into
dec
cmp
mov
lea
and
dec
push
inc
jecxz
ss
jl
test
inc
clc
jecxz,pn
stos
mov
out
mov
cmpsb
cs
out
cmpsb
xlat
pop
jge
mov
xchg
jmp
out
mov
mov
scas
push
in
mov
cltd
fildll
pop
popa
loopne
mov
andb
dec
aam
ss
js
fisubrl
cltd
cmpsb
rclb
or
push
jb
xchg
or
movsl
incl
outsb
into
jne
jmp
and
add
incl
inc
icebp
push
push
out
push
scas
add
push
decb
popf
into
sti
xchg
cmpsl
icebp
jmp
cli
scas
push
jno
cli
mov
xchg
xchg
imulb
sbb
scas
and
xchg
mov
in
push
insb
xchg
imulb
loop
adc
movsl
in
inc
xor
mov
add
out
sahf
loop
xor
xlat
lret
dec
inc
js
loopne
nop
in
ljmp
push
pop
inc
imul
lea
jp
in
mov
sbb
ss
data16
or
inc
test
test
js
lock
pop
in
fimuls
data16
je
mov
dec
out
xchg
pop
popa
out
loop
orl
out
add
sub
adc
cli
sbb
sarl
adc
je
mov
inc
cld
push
gs
mov
mov
mov
cmpsb
cli
mov
fnstenvs
push
jl
aas
mov
roll
cs
jg
ds
lcall
mov
pop
jmp
lea
push
mov
lds
outsb
mov
and
movsb
leave
lods
cmpsb
std
lcall
filds
ret
cmpsb
mov
pop
and
push
out
xchg
popf
out
push
enterw
mov
or
outsl
pop
ljmp
in
mov
pop
mov
icebp
xchg
loopne
cmpsb
inc
inc
xchg
mov
lods
ficoms
xorl
push
stc
push
sbb
call
dec
mov
jnp
mov
cld
test
into
mull
dec
fisubrs
decl
or
iret
test
sbb
in
mov
push
ss
mov
inc
ret
push
xchg
jmp
fadds
clc
xor
cs
andb
out
addr16
xchg
jo
sbbb
lcall
mov
mov
scas
xchg
orl
sub
add
jle
insb
loop
sahf
stos
push
dec
mov
xchg
xor
out
mov
jne
aad
push
inc
out
outsb
xor
imull
inc
sahf
rorb
pop
push
insl
in
cli
in
inc
mov
adc
in
pop
sub
xor
mov
ret
aas
xchg
outsb
xor
test
ljmp
out
decb
into
fiaddl
xor
sbb
push
cld
mov
stc
fldcw
cmp
icebp
aad
addr16
push
outsb
out
pop
icebp
testb
mov
std
mov
arpl
mov
xor
test
das
jg
and
cmp
jle
sub
clc
jmp
mov
push
incl
mov
fadds
loope
sahf
mov
fxch
mov
aas
pop
cld
xchg
mov
cmpsb
lret
xor
xchg
dec
jge
xor
clc
pop
test
movsl
mov
xlat
lcall
test
popf
mov
dec
in
out
mov
sbb
loop
mov
mov
mov
push
inc
mulb
jle
mov
xor
or
dec
loop
cmp
outsb
and
pop
mov
loope
aad
fiadds
jno
add
cld
sahf
fsubrl
cmpsb
aaa
shl
sahf
mov
mov
adc
ss
dec
popf
inc
cli
add
neg
pushf
cmp
push
adc
imul
dec
test
pop
repnz
pop
fmuls
loopne
out
testb
loopne
inc
incl
mov
sahf
lcall
insb
push
cmp
xchg
pop
out
mov
arpl
cmpsl
mov
aaa
cmc
mov
dec
pop
push
jg
sbb
popa
movsl
insb
lcall
cbtw
mov
or
ljmp
mov
fbld
flds
pop
dec
aad
add
es
xchg
out
stos
mov
pop
cld
ret
stc
mov
data16
jp
out
ja
fwait
loop
clc
push
inc
cmp
ss
in
mov
push
call
push
mov
popf
add
idiv
mov
mov
mov
imul
xchg
mov
lret
inc
cld
vpcmpgtb
loop
cmpsb
or
in
cwtl
cli
aas
sbb
loope
jnp
and
out
stos
fdivrp
sbb
jg
push
jecxz,pn
cmpsb
ret
jb
test
stos
push
popa
leave
loopne
jg
mov
aas
xor
movsb
clc
xchg
mov
push
out
shrl
call
inc
addr16
mov
jns
stos
fsubp
daa
nop
inc
lods
sbb
out
xchg
xchg
xchg
cmpsb
cli
rorb
xchg
xor
xlat
mov
int3
jp
xor
ljmp
jns
incl
adcb
in
jae
jle
sub
mov
mov
addl
mov
orl
pop
cmc
pushl
jae
out
inc
push
daa
mov
cmc
mov
loopne,pt
xchg
dec
test
jae
shrb
push
sbb
decl
test
mov
shll
xchg
dec
jg
push
xchg
xchg
nop
lods
dec
mov
sbb
iret
xchg
leave
xchg
push
aas
rorb
mov
jmp
icebp
xchg
dec
test
mov
cld
sub
cli
lret
jmp
cmp
push
xchg
mov
mov
int3
into
jmp
mov
mov
xchg
in
ljmp
mov
mov
push
test
mov
pop
inc
loopne
incl
xor
push
pop
out
mov
mov
xchg
mov
data16
stos
dec
jns
aad
lods
pusha
sbb
xlat
mov
test
std
pop
clc
bound
pusha
lods
call
inc
loope
popf
cmp
int3
push
add
cmpsl
call
test
or
jbe
enter
xchg
iret
repnz
and
notl
xchg
jmp
into
aad
xor
stc
test
nop
mov
fstl
outsb
pop
sti
out
cmpsl
repnz
pushf
add
fstpt
pushl
jbe
roll
push
jno
cmp
arpl
hlt
mov
sahf
mov
movsb
xchg
loopne
fcmovnbe
je
pop
lods
aam
mov
rolb
movsb
xor
dec
jg
inc
xor
stc
loopew
test
jnp
sbb
aaa
cld
icebp
mov
mov
test
xlat
test
mov
jmp
imul
mov
scas
bound
fildl
stos
es
lock
clc
paddd
sbb
out
ss
daa
aaa
test
fsubrl
push
out
and
adc
push
cltd
sub
js
outsb
stos
xchg
sar
push
jbe,pn
jo
pop
jno
inc
or
push
lods
or
mov
jl
jge
pop
xor
pop
clc
jns
push
or
or
xor
stos
sub
and
sub
call
loopne
pop
inc
jp
push
mov
inc
jb
xor
push
xorb
jg
outsb
outsb
test
and
and
filds
xchg
out
jle
mov
aaa
fs
mov
mov
jae
cltd
and
mov
nop
cmpsl
add
push
dec
push
inc
or
fidivl
imul
inc
out
pop
dec
pop
orl
pop
icebp
pop
stos
pop
adc
scas
push
dec
xchg
pushf
lcall
adc
ljmp
and
stos
or
jg
cmp
test
mov
lods
pusha
jge
adc
and
cwtl
pusha
jb
mov
push
mov
push
mov
cs
inc
mov
inc
and
adc
sbb
scas
clc
mov
cmp
ja
push
add
outsl
fwait
sub
inc
pushf
roll
inc
sbb
pop
pusha
repz
scas
lcall
or
xchg
add
addr16
ja
push
loope
stos
mov
inc
add
mov
cs
outsb
xor
push
push
sahf
aas
pop
sahf
adc
insb
and
jbe
dec
jmp
cltd
sbb
sbb
xchg
xor
cmpsb
dec
dec
jns
jnp
fsubl
cmc
decl
es
test
pushf
mov
in
scas
jmp
jg
or
ss
xor
cmp
mov
dec
xchg
negb
mov
xor
adc
xor
jne
arpl
push
addb
mov
incl
enter
push
mov
and
nop
sbb
xchg
ds
outsb
push
mov
sbb
and
jg
test
mov
jnp
mov
cmp
test
loopne
cld
lcall
dec
aad
outsb
lock
mov
sbb
daa
mov
arpl
mov
and
pop
imul
sub
imul
mov
jno
out
cmpsb
mov
nop
mov
or
cmpl
pop
add
xchg
outsb
sahf
dec
decl
xor
xchg
add
fs
xchg
fldl
push
pop
xor
bound
push
inc
jb
jge
out
cwtl
push
in
pop
call
test
sbb
clc
pop
inc
aaa
adc
xlat
ficompl
xchg
loope
jg
dec
outsb
jg
inc
sbb
xchg
push
ljmp
test
xor
mov
mov
jg
push
js
pushf
add
test
aaa
into
sub
insl
mov
std
lret
push
ret
jmp
pushl
test
or
cmp
add
movsl
inc
fwait
dec
mov
jp
paddsb
push
pusha
cwtl
leave
and
push
pop
pop
xor
in
lock
clc
mov
scas
mov
mov
ficomps
lea
sub
and
and
aaa
outsb
test
mov
mov
xchg
jb
inc
sbb
call
xorl
and
ja
in
xorb
inc
push
adc
mov
push
push
cltd
nop
std
cld
jg
push
pop
or
mov
jns
or
mov
mov
xchg
in
movsb
inc
loopne
xor
inc
fwait
lret
xchg
pop
pop
cs
out
dec
sub
cs
mov
lods
xlat
testb
xor
fcomps
jno
insl
inc
mov
lret
inc
loop
mov
mov
test
push
test
test
aad
xchg
mov
push
js
bnd
ret
ljmp
dec
jp
sti
mov
in
loopne
push
inc
fs
call
jmp
test
ljmp
dec
and
dec
or
push
jg
jne
push
push
arpl
lahf
sub
outsl
pop
add
dec
jl
adc
sbb
lods
push
push
dec
or
imul
aad
xchg
xchg
stos
ret
imul
dec
cmp
sbb
mov
xor
jg
push
and
ret
mov
xor
mov
sbb
adcl
or
jmp
outsb
adc
dec
jnp
popa
iret
dec
pop
jp
lods
adc
clc
add
scas
call
fildll
push
xchg
sar
push
test
cmc
mov
cmp
pop
scas
fdivrl
cmpsb
mov
mov
iret
mov
xor
mov
sub
inc
int
arpl
test
addr16
int3
dec
push
dec
inc
mov
arpl
push
xor
jp
cmp
cmp
push
xchg
sub
pop
cmpsl
loop
stos
jns
call
je
or
ja
push
xchg
test
popf
xchg
sahf
scas
shrb
pop
mov
cmp
rolb
in
andl
daa
pop
sti
aas
xor
adc
ljmp
cwtl
lds
adc
mov
adc
addb
out
loopne
out
test
in
sbb
lds
mov
mov
outsb
push
sahf
fisttps
sbb
ds
adc
cs
and
ret
icebp
ret
push
jo
push
scas
cmpsl
cwtl
mov
loopne
std
jg
dec
mov
xchg
dec
and
add
sub
insl
ret
adc
or
imul
jmp
cs
mov
mov
mov
jns
push
sbb
or
jmp
dec
aaa
je
pop
xchg
stc
aaa
xor
cwtl
inc
cmp
or
add
push
xchg
pop
sbb
clc
pop
sar
mov
jne
sub
aas
pop
loop
xchg
iret
push
pushl
aas
in
pop
xor
aaa
pop
pusha
xor
in
pop
ljmp
pcmpgtd
mov
xchg
aas
es
inc
in
cmp
test
mov
pop
loopne
or
jg
js
xchg
push
xchg
imull
jmp
pop
pop
into
jne
sti
mov
or
adc
scas
test
cmp
xchg
aaa
pusha
loope
js
lea
les
pop
dec
mov
es
adc
dec
popl
sbb
push
cmp
je
ss
sbb
lods
adc
ret
sbb
mov
mov
jle
xchg
pop
je
js
mov
mov
push
mov
pop
ret
jbe
dec
jg
push
pop
mov
adc
dec
sbb
aaa
std
decl
jbe
and
xchg
fwait
push
and
mov
push
and
and
shlb
rol
jne
push
loop
push
jge
pop
cmp
pop
movsb
mov
jle
bound
or
push
fadds
xor
mov
sub
call
add
adc
outsl
fnsave
jp
dec
adc
add
xchg
or
add
xchg
jnp
mov
clc
push
in
iret
push
pop
xlat
movsl
sbb
or
mov
rorb
xchg
bound
adc
out
pusha
in
xor
push
ja
jne
mov
jl
or
sub
jp
clc
lcall
scas
icebp
cmpsl
pop
mov
arpl
cmp
pushf
fs
mov
pushl
push
in
pushl
pushf
call
push
pop
add
dec
cmp
out
adc
inc
les
fs
mov
push
cmpsl
lcall
and
pop
insb
jmp
jmp
stos
jecxz
xor
cmpb
das
outsl
nop
daa
imul
sahf
imulb
xchg
jno
cli
addl
mov
dec
sti
dec
cmp
push
push
les
jl
divb
add
mov
pop
xchg
dec
push
cmpsb
loope
lcall
mov
fs
push
fmuls
dec
pusha
xchg
jl
dec
pushl
popa
pop
push
pop
rcrb
bound
loopne
push
je
or
or
mov
movsb
inc
je
jmp
aaa
or
inc
mov
addr16
mov
js
inc
cmp
inc
xor
push
arpl
out
mov
mov
andb
pushf
mov
mov
pop
dec
push
clc
mov
fsubs
jl
jns
xor
cmpsl
es
je
pop
mov
jnp
jb
pushf
push
lock
sub
ljmp
incl
popa
std
mov
pop
mov
data16
add
xchg
hlt
cmp
sbb
xchg
lods
aaa
push
add
add
ljmp
outsb
inc
pop
lcall
jne
adc
mov
out
stos
cs
mov
add
and
pop
cmpsb
add
and
add
test
jg
cmpb
mov
das
mov
orb
loope
sbb
adc
fbstp
push
push
inc
xchg
add
pop
push
sub
inc
cmpsb
xor
jmp
adc
orl
sbb
dec
inc
xchg
jp
aam
push
icebp
call
ljmp
jne
mov
and
dec
ja
outsb
push
into
stos
in
cmp
jg
jecxz
mov
cmp
add
outsl
inc
jg
call
cmpsb
lea
pop
insb
insl
sub
adc
ljmp
bound
dec
orb
fisttpl
sbb
dec
cmp
jo
push
scas
mov
xchg
test
jg
add
sbb
shll
push
add
jle
fidivrs
lcall
outsb
popa
out
cmc
pop
push
daa
data16
pop
pop
xor
or
clc
jns
iret
pop
sar
pushl
xchg
inc
mov
ret
jge
cli
addr16
jmp
cmp
loopne
popf
pop
push
jmp
sbb
inc
adc
es
enter
lret
fldcw
inc
std
or
dec
push
jmp
xor
dec
mov
jg
fwait
pop
out
or
jo
cmp
jl
in
int3
scas
inc
das
jg
aas
ljmp
or
jmp
pop
ja
sbb
inc
int3
and
jg
incb
or
insl
ficoml
xchg
adc
lret
mov
bound
and
clc
mov
or
lock
or
cli
pushl
cmp
mov
inc
pushf
mov
inc
test
jb
je
xor
push
inc
popa
adcb
gs
push
mov
pop
sar
cwtl
jno
mov
cmp
insb
mov
mov
cmp
outsb
or
jmp
add
test
decl
mov
cs
cmp
das
ret
mov
push
add
insl
push
pop
pop
scas
xchg
hlt
call
push
pushf
adc
outsb
jae
dec
ficoms
xchg
push
push
icebp
ffree
ret
cmp
inc
adc
jbe
push
fwait
jl
scas
jg
cmpsb
xlat
and
lods
adc
outsl
clc
fildll
jno
dec
fstpt
push
in
inc
sub
add
aas
movsb
loop
fnop
scas
mov
cmpsl
sbb
jle
js
ljmp
adc
adc
ljmp
jle
enter
dec
fnstsw
sbbb
add
dec
shll
sqrtps
mov
push
std
mov
cmp
mov
cmpsb
dec
push
std
jg
dec
cmp
sbb
mov
mov
ret
enter
decl
and
xor
sub
das
pop
imul
inc
bound
clc
jmp
insb
movsb
gs
sbb
sub
adc
mov
out
cwtl
movsl
dec
icebp
call
dec
ljmp
nop
push
xor
and
pop
mov
dec
sbb
test
scas
call
inc
dec
jmp
jle
push
das
mov
xchg
pusha
popf
lcall
mov
pop
lea
outsb
inc
jbe
cs
jbe
push
dec
ret
leave
ja
clc
vminss
pop
imul
jbe
add
lods
mov
pop
sahf
movsl
outsb
mov
cld
outsb
push
call
inc
mov
stos
arpl
in
inc
dec
pop
jg
test
push
popa
arpl
outsl
stos
incb
jne
or
mov
shlb
xchg
insb
cmp
add
lcall
fwait
add
xchg
outsb
mov
push
mov
dec
inc
adcb
cli
add
add
push
mov
jbe
mov
repz
pusha
cmc
xchg
sbb
pop
imul
and
outsl
mov
pop
xchg
mov
daa
xor
test
pop
mov
add
into
mov
popa
bound
adc
push
or
sub
mov
punpckhwd
inc
jecxz
movl
inc
adc
sub
imul
sub
or
mov
popa
test
push
jg
pop
xchg
ds
cmp
jae
popl
xchg
push
push
push
das
dec
jne
mov
sbb
ds
cmp
scas
and
mov
push
jo
or
sti
inc
incl
push
pop
add
loop
add
cltd
into
add
lcall
sahf
sbb
mov
mov
bound
inc
ficomps
jle
loop
clc
mov
mov
jo
mov
sbb
jle
call
cmpsb
push
jge
inc
mov
out
adc
incl
sbbb
adc
mov
scas
les
outsb
dec
push
popl
cmp
sbb
add
sbb
lcall
cs
xchg
or
outsb
in
mov
adc
adc
incl
movsb
mov
jle
call
stos
testl
sub
xor
pop
xchg
lock
popf
push
jle
das
push
popf
add
xchg
or
scas
jns
sbb
pop
cmp
mov
fisubl
xabort
loopne
jg
mov
lock
push
xor
fs
test
cs
mov
repz
or
ret
inc
idivb
mov
test
cs
mov
out
in
xchg
pop
cmp
and
dec
aas
and
and
cmpsb
push
push
ud0
es
fs
out
xchg
or
ret
clc
add
mov
loop
lds
imul
push
xor
aam
out
in
loope
jo
out
dec
pop
lds
push
in
and
mov
decl
outsl
sbb
test
dec
push
mov
cltd
cmp
cmp
ss
and
in
test
or
scas
xor
mov
pop
pushf
cmpsl
pop
xchg
cmpsl
imul
push
cmp
into
ret
lahf
dec
xor
mov
adc
xchg
ret
ja
cmp
jo
jmp
fists
outsl
ja
and
mov
or
out
mov
testb
sub
cmp
lcall
es
loope
sbb
adc
or
sub
bound
mov
mov
sub
push
call
stos
jmp
push
mov
cmpsb
xchg
sub
or
mov
xor
lods
pusha
xor
push
pop
dec
andl
movsb
ss
pop
sbb
pop
adc
dec
sarl
call
ja
lock
rorb
jbe
popa
inc
aaa
inc
dec
and
push
movsb
jo
xchg
mov
xchg
push
xchg
mov
adc
sbb
insb
arpl
pop
mov
lods
or
adc
pop
fwait
lcall
xor
dec
push
mov
insb
inc
xchg
call
inc
fs
push
ss
jo
movsb
iret
mov
mov
add
sub
mov
mov
es
sub
int3
out
outsb
in
mov
jmp
lods
mov
dec
movsb
leave
pop
lea
dec
aaa
sbbl
cmpsb
mov
sbb
xchg
cmp
adc
and
cmp
stos
pop
mov
test
dec
add
pop
lods
or
sahf
cltd
sbb
inc
jp
adc
inc
sub
lcall
data16
adc
pop
arpl
sub
dec
decl
sub
dec
adc
inc
push
inc
jb
stos
call
dec
sub
mov
sub
mov
call
sub
aam
iret
sub
inc
outsl
arpl
dec
fadds
cs
and
add
and
mov
cwtl
push
je
arpl
test
lcall
xor
lods
and
lahf
ljmp
pop
push
inc
jge
jge
jl
daa
xchg
add
push
xor
xor
inc
hlt
adc
insl
inc
add
decl
icebp
shlb
xor
adcb
xchg
pop
and
xor
mov
js
xchg
mov
jg
pop
sub
icebp
xchg
aaa
scas
xor
add
addl
mov
idivl
sub
into
ja
adc
in
scas
push
out
js
arpl
fiadds
fbld
ss
cli
jne
lea
ja
cli
arpl
out
lods
into
idivb
dec
call
push
out
dec
push
stos
xor
xchg
push
mov
mov
sbb
repz
push
loopne
mov
adcl
insb
inc
imull
mov
rorl
decl
add
aas
mov
cmpsl
push
adc
pushl
enter
cmpsb
push
xchg
clc
or
jne
jns
sti
loope
pop
out
fidivs
sar
rclb
jecxz
and
xchg
sub
and
in
adc
stos
jmp
sbb
out
jl
inc
dec
sbb
scas
cli
mov
packsswb
push
test
test
push
cmp
sbb
push
sub
inc
das
movsb
sbb
sub
cmpsb
sub
bound
mov
orb
ljmp
dec
out
xchg
out
or
or
daa
mov
add
mov
sub
loopne
mov
and
pop
ljmp
or
or
sbb
in
adc
cmp
ljmp
cmp
in
sub
push
mov
dec
cs
cmp
pop
clc
push
test
gs
cmp
push
mov
sub
and
aaa
cmp
cmpsb
ds
pop
mov
xor
pop
xchg
lea
lock
mov
dec
lcall
lods
mov
daa
xchg
mov
and
aad
xchg
mov
das
add
cli
ljmp
jno
pop
pop
jo
jae
push
in
mov
mov
ja
stos
dec
cmp
mov
ss
incl
idivb
sbb
clc
mov
adc
outsl
xchg
gs
sbb
in
push
add
xchg
pop
adc
xor
das
mov
test
add
cld
jl
test
mov
jae
mov
and
jl
cmp
sbb
push
mov
nop
jbe
es
clc
outsl
pop
jmp
ds
decb
add
pusha
or
adc
ds
out
push
lcall
popf
mov
lcall
js
in
call
pusha
xor
mov
inc
cmp
adc
add
adc
aas
mov
sbbl
ljmp
push
cld
scas
xor
xchg
xchg
pop
ss
popl
mov
cmpsb
in
add
add
cmpsl
mov
pop
mov
aas
mov
mov
xchg
mov
push
xor
decl
fmull
mov
lods
adcb
lret
mov
xchg
jns
movsl
bound
mov
outsl
ret
push
push
jmp
sub
pusha
popa
imul
es
jo
sbb
das
mov
sahf
sbb
pop
addr16
push
jne
insl
divl
pushf
je
or
cld
fwait
test
mov
mov
push
dec
mov
xchg
pop
adc
mov
daa
pusha
sti
mov
ds
shlb
add
add
jg
mov
je
push
loope
mov
xchg
adc
dec
fdivr
aaa
std
call
push
sbb
xchg
push
mov
inc
int3
adc
push
fs
test
fwait
and
push
jbe
gs
sub
cmp
cmp
mov
or
fists
jbe
inc
xor
pop
inc
push
xchg
cmovbe
je
inc
jae
fistpll
es
es
lods
test
nop
loop
push
mov
adc
aam
dec
jp
xor
mov
inc
and
pop
sub
fdivrp
adc
xor
adc
push
push
pop
roll
mov
mov
jno
push
mov
mov
lcall
mov
xchg
push
push
pop
push
sbbb
jb
cmpsb
jl
test
outsb
lcall
inc
jae
in
pop
pop
cmp
call
cmp
decl
pusha
sbb
sbb
lahf
in
cmp
rcrb
ss
lods
lods
outsl
std
xor
and
inc
ds
xchg
cli
push
inc
mov
imul
or
jno
stos
sbb
into
pop
jb
loop
mov
mov
dec
mov
or
loopne
into
sub
sbb
adc
filds
fstps
lahf
nop
jp
ret
fs
xchg
adc
rcrl
idiv
ljmp
arpl
and
es
cmp
xchg
jns
call
mulb
clc
inc
pop
clc
lcall
mov
add
out
mov
cmp
pop
ljmp
in
inc
repz
mov
inc
jg
add
dec
test
ss
mov
xchg
inc
dec
std
call
in
cmc
clc
cmp
mov
mov
jbe
adc
pop
dec
pop
test
pop
mov
test
sbb
and
sbb
sub
shrb
pop
ss
fdivrl
lret
imul
sbb
lock
xchg
jne
daa
mov
add
fbstp
mov
xchg
loop
add
jmp
notl
ljmp
or
mov
addr16
mov
xchg
incl
adc
jns
pop
addr16
lods
shrb
jmp
std
es
add
ljmp
outsb
jl,pn
iret
cmpsb
adc
cmp
aam
addb
out
aas
lahf
gs
aas
push
jecxz
mov
or
out
sbb
lcall
dec
inc
mov
pop
push
xchg
pop
dec
mov
jae
cli
mov
mov
cs
data16
xchg
dec
aas
sbb
aas
sbbb
mov
lea
in
inc
clc
jg
out
mov
rcrl
mov
addr16
mov
mov
cmpsl
inc
pop
mov
out
mov
aas
add
insb
mov
push
xchg
sbbl
jmp
mov
loopne
xor
fbstp
inc
inc
test
arpl
mov
bound
jo
push
stos
cmp
sub
pushl
mov
inc
mov
mov
pop
xchg
fbld
loope
jg
inc
adc
lds
adc
ja
sar
xorb
xchg
int3
push
push
pushl
xor
loope
xchg
insl
lea
scas
lock
pop
iret
or
pop
mov
ja
negl
adc
repz
les
fwait
push
push
dec
movsb
lahf
dec
decl
push
out
outsl
dec
add
cwtl
mov
decl
push
xor
pushf
test
cmp
jno
and
xlat
mov
pop
push
xor
mov
mov
add
pop
clc
jg
mov
dec
cmp
push
inc
mov
xchg
mov
ja
mov
test
mov
nop
ds
in
mov
pop
cmp
lahf
insb
leave
aas
bound
mov
clc
fimull
jle
jmp
sbb
mov
mov
stos
cmp
mov
cwtl
xor
mov
bound
mov
push
xor
xchg
fstpt
pushf
mov
arpl
outsb
aaa
jbe
xor
lcall
mov
or
jbe
mov
movsl
and
or
addr16
cld
scas
push
lock
adc
jns
adc
jg
pop
dec
mov
mov
sbb
std
repnz
lcall
push
stc
push
jb
pop
sub
dec
xchg
js
or
pop
and
test
add
cmp
or
insl
jae
loopne
and
cwtl
xchg
pop
jne
sbb
push
pop
xchg
sub
inc
pushf
xchg
pop
push
xchg
and
arpl
ja
stos
pop
aaa
insl
and
pop
xor
pop
es
aaa
pop
js
push
daa
iret
pop
mov
jle
test
jbe
adc
add
mov
sub
mov
out
and
jg
js
ret
or
mov
pushf
sub
lcall
sbb
push
mov
mov
pop
xchg
xchg
push
adc
lods
pop
sti
pushf
xlat
xorl
scas
outsb
into
and
fisttps
or
or
push
pop
mov
jne
adc
or
pop
add
pushf
xchg
xor
test
inc
xchg
sub
hlt
jg
xchg
push
popf
ja
imul
leave
xor
fwait
cli
mov
shlb
pop
push
jle
jne
push
push
outsb
adc
or
test
push
inc
xor
in
jg
aaa
test
adc
leave
fadds
pop
push
data16
xchg
jne
stos
adc
test
popa
fwait
cmpsb
pop
popf
in
mov
xchg
fsubp
xorl
inc
cmc
popa
and
mov
push
pop
cltd
stos
ret
xchg
push
gs
inc
fnstcw
push
jno
inc
movl
stos
push
cmp
test
stos
pop
dec
call
jmp
and
ss
push
push
push
push
add
das
sahf
dec
in
inc
sbb
pop
testb
ret
cmc
movb
sub
dec
movsb
add
lea
pop
mov
jge
into
jg
jns
andb
jmp
loopne
dec
or
push
xor
data16
repnz
cli
xorb
dec
imul
lcall
jne
outsb
add
into
lahf
in
mov
pop
fisttpll
loop
lods
inc
push
pop
imul
cmpsb
es
incl
adc
orb
lods
outsl
cmp
jp
das
jnp
push
pop
mov
inc
scas
es
pop
loopne
dec
sarl
pop
imul
jae
add
insb
or
pop
adc
enter
fsub
dec
aaa
mov
outsl
jmp
sbb
xor
jo
loopne
mov
fdivrl
cwtl
rol
push
fdivs
push
ret
dec
aad
dec
decb
adc
loopne
jg
sahf
pop
push
add
or
arpl
pop
popa
pop
add
xlat
and
sub
sub
jo
into
ljmp
incb
test
sbb
jecxz
cmpsb
push
mov
pop
mov
xchg
loop
xchg
push
inc
jmp
lcall
adc
pop
jae
outsb
in
lds
stos
ljmp
mov
push
stos
das
es
test
nop
cmp
mov
jp
and
imul
pop
inc
imul
mov
jp
fiadds
mov
mov
and
mov
lods
jmp
mov
incl
inc
es
lcall
mov
fcoms
xor
dec
cltd
notb
or
cmp
popf
dec
fstpl
out
inc
jecxz
mov
lahf
dec
hlt
mov
stc
jl
adc
ljmp
fisubs
mov
out
and
loop
mov
das
into
push
stc
mov
mov
sub
aad
ss
fsubr
xchg
xchg
loope
cmp
mov
aas
ja
cs
clc
jmp
add
xor
jnp
or
jo
rorb
or
aas
es
cmpsb
push
sbb
scas
or
dec
jmp
fwait
lret
clc
and
bnd
inc
xor
out
out
or
mov
jecxz
xchg
inc
fisubrs
out
xchg
pop
and
jae,pn
fmulp
jecxz
cwtl
pushf
lahf
sbb
call
out
jg
outsl
cmpsb
roll
fwait
movsl
daa
push
sbb
cld
in
test
sahf
jmp
pop
and
jne
popa
xchg
inc
std
mov
mov
ret
lods
or
push
loop
ss
cld
pop
or
iret
lods
push
repnz
mov
dec
adc
mov
and
mov
pop
pop
pusha
dec
jge
and
add
loopne
fwait
cltd
imul
lock
push
jne
jmp
fs
mov
and
sub
movsb
aas
mov
jbe
loop
loopne
loopne
push
sub
push
pop
imul
cmpl
or
lcall
aas
cmp
cld
dec
cmp
mov
adc
ds
cmp
xchg
call
mov
scas
stc
sub
dec
mov
mov
jbe
or
cld
mov
xchg
add
jecxz
aaa
pushl
sbb
test
nop
ficoms
cmp
es
xor
in
and
pop
lea
dec
or
loop
xchg
out
xor
ss
loope
sub
stos
jl
adc
pushl
add
cmpsl
das
notl
inc
dec
arpl
scas
pushl
cli
sub
mov
jb
jnp
imul
dec
pop
cmpsb
or
add
sub
xor
mull
push
cld
xor
cs
push
xchg
cs
push
pop
mov
push
pushf
push
outsb
pushf
jg
negb
sub
push
adc
out
mov
push
pop
scas
stos
aaa
adc
call
lret
les
jbe
adc
pop
pop
into
xlat
pop
loopne
push
mov
sub
mov
sbb
and
jle
add
push
pusha
xchg
ljmp
jle
mov
aas
jns
imul
push
gs
jg
pop
std
stc
nop
pusha
inc
fisttpl
mov
jmp
ss
stos
ss
cld
jg
clc
jle
jg
jg
inc
repnz
and
xor
jg
adc
pop
pop
mov
stos
loop
fwait
push
movsb
das
inc
push
mov
repnz
mov
sbb
xchg
hlt
mov
dec
enter
pop
dec
insb
jmp
call
mov
pop
mov
subb
cmc
xchg
lods
mov
and
cmp
add
dec
mov
cs
loopne
clc
sbb
push
mov
out
add
or
mov
ds
cmp
addr16
fwait
jbe
sbb
cmp
adc
cld
outsb
jecxz
mov
into
int3
mov
and
dec
jmp
sahf
loop
movsl
jg
and
xor
clc
pop
add
push
pop
push
mov
xor
jg
pop
shl
test
in
pop
dec
mov
test
mov
out
daa
test
jo
or
xchg
add
xchg
xor
arpl
decl
incb
or
outsb
push
insb
icebp
das
nop
sti
adc
outsl
mov
push
sub
stc
adc
xchg
adcl
add
fnstsw
pop
cld
xchg
add
add
and
dec
or
xor
jo
xlat
mov
into
and
loopne
stos
push
into
xchg
push
cs
xor
xchg
inc
jl
out
mov
jne
out
loopne
dec
jle
jae
inc
pop
dec
loopne
push
loopne
add
leave
mov
or
lock
call
inc
ret
and
js
or
push
jae
xor
mov
pop
sti
fdivp
rolb
shrl
aaa
xchg
ret
aas
xchg
bound
jg
dec
inc
movsl
lret
pushl
mov
push
clc
or
jne
xor
loopne
test
or
adc
es
fadd
cmpb
mov
loopne
pop
push
sub
push
fisubrl
mov
inc
pop
xlat
sub
cmpsl
rcrb
xchg
push
jle
cs
push
sbb
rclb
out
pop
inc
inc
jp
insb
cmp
xor
sbbl
mov
jnp
mov
lea
inc
fwait
mov
roll
adc
incl
jg
test
sbb
jp
sbb
adc
out
es
jg
sub
adc
mov
inc
xlat
mov
ret
pop
test
loope
sbb
adc
mov
insl
xchg
pop
test
jge
incl
cmpsb
fwait
popa
test
stos
sbb
cmc
add
lcall
sbb
xor
and
sub
paddd
push
push
pop
ja
pop
pusha
shlb
imul
icebp
jnp
ret
dec
xchg
and
jg
aam
repnz
mov
jo
mov
nop
lods
cld
jmp
leave
inc
mov
stos
mov
popf
cmp
lea
lea
push
sbb
les
push
cmpsb
repnz
cwtl
js
sub
call
pop
stos
mov
cmp
cld
pop
mov
inc
js
test
pop
and
imul
shlb
lock
xor
xor
ljmp
lds
ds
mov
pop
or
ljmp
fists
jbe
add
jecxz
sub
sub
out
js
mov
push
shlb
movsl
xchg
ljmp
dec
test
cmp
pushf
imul
jno
clc
jmp
push
mov
sbb
adc
mov
inc
cltd
cwtl
shlb
mov
sbb
and
outsb
ljmp
pop
and
xchg
cmp
sbb
incl
add
call
mov
outsb
mov
cld
scas
mov
xchg
out
popa
cmp
loopne
fisubrs
loopne
sahf
insb
add
out
movb
int3
mov
ljmp
or
mov
dec
pop
out
push
ds
lea
imul
mov
data16
add
aas
adc
mov
es
pushl
stos
cwtl
mov
jg
leave
dec
dec
jge
or
mov
gs
insb
or
js
cmp
clc
mov
aaa
cmp
dec
push
adc
movsb
setbe
inc
mov
insb
bound
ljmp
inc
mov
pop
int3
iret
adc
inc
clc
add
pop
push
sbb
insb
jecxz
mov
arpl
test
pop
xchg
xchg
jg
test
out
jmp
xor
mov
inc
mov
cmpsl
int3
lahf
push
adc
or
aam
mov
aad
xor
xor
jl
into
sbb
mov
call
ja
test
fstpt
insl
mov
fs
add
add
and
mov
lea
pop
xchg
ret
jnp
or
jno
sub
into
or
xchg
incl
mov
sbb
das
adcl
xchg
or
add
mov
sbb
sub
decl
mov
es
out
aaa
pusha
dec
adc
lcall
push
mov
inc
les
mov
or
addr16
arpl
es
loopne
and
addr16
pop
jns
ds
dec
mov
adcb
outsb
jge
mov
sbb
in
lcall
ljmp
or
xchg
pop
sub
dec
nop
jno
xchg
xchg
sub
in
or
mov
or
cmp
popf
lahf
test
movsl
dec
aas
jns
jle
rcr
movb
mov
mov
xchg
movb
hlt
jecxz
sbb
push
iret
cli
lods
movsl
push
jo
divb
xchg
mov
lock
pop
ljmp
sub
xchg
sub
mov
mov
cs
xchg
decl
rorl
adc
je
sbb
sahf
cltd
mov
inc
cli
xchg
shrl
je
push
scas
adc
pop
pusha
loope
jge
xchg
xchg
std
fwait
test
scas
inc
dec
mov
cmp
nop
inc
pusha
sbb
sub
lahf
mov
filds
lret
jbe
in
jmp
push
addl
sbb
iret
das
and
pop
into
rcll
xchg
cwtl
push
push
mov
ret
sub
incl
imul
arpl
inc
fisttps
mov
adc
xchg
mov
push
test
adc
jg
and
mov
movsl
lods
adc
cltd
xchg
mov
xlat
cs
adc
add
loop
push
sarb
push
xchg
push
jl
fwait
mov
fdivp
xor
nop
push
pop
mov
or
std
sub
dec
das
xor
or
pop
fstl
dec
inc
mov
or
xor
nop
adcl
dec
sbb
jge
subl
pop
cld
xchg
aaa
xor
mov
mov
mov
mov
jecxz
mov
cltd
xchg
imul
pushf
nop
pop
mov
call
loopne
push
pop
jbe
out
mov
and
cmpsl
insl
dec
dec
add
out
mov
mov
sub
loopne
adc
adc
scas
es
dec
mov
cmp
inc
jmp
jmp
sbb
mov
adc
add
xor
out
nop
cmp
pop
jo
clc
sub
int3
and
ja
xor
jne
xchg
scas
xor
movsl
add
sar
mov
dec
inc
aaa
mov
popa
fsubrp
dec
in
lret
push
cmp
cmp
adc
xor
stos
adc
inc
adc
jb
std
mov
pop
add
call
into
xor
dec
jp
cwtl
inc
pop
push
mov
decl
jg
pop
adc
lcall
mov
icebp
cld
lcall
or
insl
jae
movsb
dec
jnp
inc
aaa
int3
mov
pop
mov
jae
inc
les
fcomip
aaa
bound
or
xchg
mov
ljmp
scas
mov
scas
popf
add
andb
xchg
or
imul
mov
scas
adc
add
pushf
xchg
mov
out
jae
sub
mov
pushf
push
cmpsl
xchg
xorl
jns
imul
fstpl
mov
or
clc
icebp
popf
cmp
jnp
mov
fwait
xchg
jl
jg
imul
pop
js
test
scas
aas
nop
stos
cs
adcl
xor
test
xchg
inc
iret
push
data16
pop
sahf
lahf
adc
jecxz
roll
dec
inc
es
dec
ja
insl
mov
push
ja
pop
push
insb
fs
lea
fs
imul
push
ljmp
dec
icebp
push
cli
es
test
les
dec
mov
pop
push
repz
outsb
loope
jbe
ja
xor
dec
ret
notl
add
jg
rcll
sbb
jb
inc
out
stos
lods
push
cmc
xchg
mov
fbstp
int3
inc
idivb
lahf
push
ret
scas
test
cltd
xchg
call
pop
aas
xor
es
mov
push
mov
repz
js
lea
ss
gs
inc
loop
mov
lods
in
mov
out
and
push
jle
xlat
push
enter
mov
mov
int3
xchg
and
pusha
out
mov
jp
ja
ds
rolb
inc
cld
aaa
push
and
insb
inc
fucomi
push
call
loopne
cmp
jo
ja
xor
inc
add
cs
popf
pusha
fnstenv
js
cmpsb
mov
movsl
call
nop
push
cmpsl
add
es
push
addr16
push
aas
std
das
mov
aaa
insb
imul
xchg
out
imul
jp
sub
pop
scas
call
in
arpl
or
scas
jne
lret
test
mov
lcall
dec
rorb
dec
jns
sbb
ljmp
and
imul
test
nop
mov
aad
jg
pop
ja
pop
mov
xchg
mov
decl
call
mov
imul
xor
mov
xchg
sub
test
cld
out
xchg
imul
roll
cltd
inc
arpl
icebp
les
and
jg
push
xlat
mov
and
ljmp
cltd
call
cmp
mov
lods
loopne
stos
nop
and
data16
sbb
test
jae
cwtl
cmp
aas
sahf
push
loop
or
cmp
push
inc
popl
jge
ljmp
pop
add
mov
out
lods
popa
push
jg
push
cwtl
scas
fdivr
decl
data16
mov
mov
mov
pop
ja
sub
aaa
call
loope
jo
das
xor
imul
fists
mov
sbb
adc
mov
inc
faddp
mov
dec
add
xor
and
fs
xchg
xchg
sbb
push
jg
push
es
divl
push
jecxz
xor
rcrl
xor
mov
pop
jp
test
lcall
stc
test
leave
adc
mov
bound
dec
bound
fs
sahf
pop
xlat
mov
incl
lods
cli
and
sbb
and
out
fsubr
xchg
inc
xor
add
dec
in
push
mov
sub
dec
and
insl
xchg
imul
cmp
mov
mov
push
ljmp
sbb
push
push
adc
incl
ss
in
xchg
mov
mov
sbbb
subb
cmp
jb
push
push
clc
decl
lahf
ja
aas
data16
adc
xchg
pop
ret
cmpsb
jbe
push
push
add
dec
mov
jle
sub
inc
sti
adc
cmp
sub
pop
mov
movsb
loope
rcrb
sbb
bound
sub
xchg
jmp
cmp
cmp
add
scas
push
mov
outsl
mov
xor
mov
jg
pop
shll
xchg
add
aad
xchg
scas
mov
daa
sub
mov
ljmp
loope
nop
icebp
xchg
sti
xor
into
stc
ja
sbb
xchg
test
out
mov
add
andl
add
xchg
jo
push
cs
imul
call
stos
dec
mov
push
jne
push
mov
xchg
xchg
loop
filds
xor
daa
out
add
xor
xchg
data16
out
cwtl
push
sbb
adc
into
ljmp
dec
fimuls
xor
lret
es
xchg
loop
cld
aaa
adc
mov
jo
in
and
aaa
mov
or
stos
pop
pusha
mov
hlt
aad
jae
std
scas
outsb
add
mov
lcall
adc
and
sub
mov
fisubrs
dec
lcall
fiadds
not
scas
push
pop
movsl
fimuls
dec
movhps
int3
pop
sub
jl
xabort
fwait
push
push
idivb
xchg
stos
xor
fwait
mov
aam
xchg
cmp
push
push
xchg
aam
lock
sbb
decl
test
or
subl
call
loopne
jno
sub
je
cmp
add
cmp
adc
rcll
mov
inc
dec
sub
jno
dec
out
xchg
inc
sbb
and
stos
test
into
xchg
add
xchg
mov
mov
popa
call
lods
outsb
insb
cli
or
mov
mov
sbb
adc
pop
fistpll
popf
call
jbe
adcl
jecxz
ficompl
mov
test
pushf
adc
push
push
addr16
pushl
cmp
adc
test
mov
outsb
dec
daa
scas
or
xor
and
jg
pop
les
mov
push
jl
jnp
clc
int3
push
ljmp
or
dec
pop
jae
jle
cltd
in
adc
cmp
jge
test
xor
out
xor
jg
roll
xor
jb
dec
dec
inc
inc
and
shlb
aas
loopne
mov
adc
pop
inc
arpl
cld
lcall
sub
stos
xchg
push
jae
lods
lods
push
lea
mov
or
xchg
push
fldcw
pusha
out
push
add
std
or
mov
dec
xchg
inc
sti
push
cwtl
clc
mov
addr16
mov
test
mov
ja
push
and
incl
stc
sbb
push
or
stc
sub
ljmp
sbb
mov
aam
jbe
fs
adc
adc
mov
movsl
mov
cmpsl
xchg
xchg
or
scas
xor
arpl
and
add
stos
mov
ss
jmp
popf
mov
push
mov
clc
jg
test
data16
mov
mov
dec
pop
das
cmp
popf
mov
mov
adc
fiadds
dec
aas
cwtl
sub
jle
mov
sti
mov
xor
cld
xchg
and
cmpb
fisubrs
mov
fs
sbb
test
mov
es
pop
xchg
lcall
lcall
popf
jb
mov
push
scas
dec
pushf
cmpsb
mov
insb
sbb
adcl
ds
decb
sub
leave
test
js
mov
test
ljmp
xchg
bound
cmp
data16
fildll
roll
mov
orb
fdivrl
out
enter
or
test
xchg
ljmp
and
call
dec
dec
add
jo
jecxz
mov
lret
or
jg
out
xor
movsl
sub
cmpsb
pushl
and
outsb
push
daa
cld
adc
ds
lds
jmp
add
std
cmp
call
xor
into
add
add
adc
movsb
insl
inc
cmpsl
and
add
ficompl
jecxz
jp
mov
outsl
fstps
add
mov
mov
push
xchg
push
mov
pop
mov
mov
mov
mov
mov
aaa
lcall
test
jbe
pop
mov
jle
jg
mov
subl
call
pushf
cmp
push
aaa
xchg
dec
or
into
pushf
dec
sub
push
pop
mov
pop
insb
pop
stos
scas
lcall
sub
repz
mov
loopne
outsb
jge
xchg
and
lcall
dec
push
es
mov
into
mov
dec
xchg
jnp
inc
pop
or
ja
push
mov
insl
push
aad
imul
in
mov
iret
sub
dec
sbb
xchg
jg
arpl
test
test
push
mov
ret
test
xchg
add
mov
lcall
xchg
cmp
inc
push
mov
or
dec
arpl
cld
incl
cmpsl
sbb
mov
xchg
inc
andb
enter
clc
daa
jge
test
into
xor
pop
call
clc
dec
out
out
je
iret
insl
daa
outsb
shlb
aam
incl
lahf
xchg
xchg
and
xor
dec
insl
xchg
scas
xchg
adc
jns
pop
movsb
and
and
mov
scas
mov
push
or
test
push
stos
mov
clc
or
popl
and
ss
dec
ss
adc
mov
push
daa
out
dec
adc
arpl
mov
insb
cmp
mov
xor
xor
mov
imul
sbb
xchg
and
push
push
in
jmp
and
xchg
adc
jmp
and
pop
andb
inc
add
or
push
dec
clc
nop
sar
mov
jns
aaa
mov
xor
cld
pop
inc
dec
leave
popf
push
daa
int3
add
add
ljmp
push
out
cs
lret
jno
mov
or
filds
out
es
mov
xchg
aaa
jg
dec
inc
cld
sub
loopne
scas
out
dec
pop
movsl
call
idiv
incl
sub
in
add
fwait
push
loopne
jbe
or
jl
insl
dec
call
dec
lods
hlt
pop
mov
pop
pop
jbe
cmp
xchg
mov
std
sub
movsb
mov
inc
dec
jmp
lods
stc
sub
xchg
jp
cmp
mov
and
sbb
sub
js
cld
jg
sti
push
in
xchg
lds
in
mov
les
xchg
and
in
cld
call
lds
adc
and
das
jge
inc
pop
jecxz
jg
ss
das
imul
add
addr16
js
or
push
arpl
out
add
or
pop
outsl
mov
sbb
loop
inc
mov
addr16
sub
mov
out
gs
clc
mov
mov
push
cwtl
push
pop
pop
mov
in
or
push
jg
nop
mov
inc
nop
mov
push
push
lcall
jp
bound
inc
packsswb
pop
mov
cmp
bound
ljmp
out
mov
rcrl
sbb
sbb
pushl
clc
mov
aas
cmp
xor
jmp
lea
fldcw
lods
clc
fwait
test
popf
lcall
decl
add
mov
xorl
call
add
push
and
sti
lea
imul
jg
outsb
icebp
add
jl
xor
aaa
fistps
cs
jmp
inc
sub
cld
incl
outsb
mov
sub
pop
ja
pop
cmp
xchg
arpl
sti
push
shrb
and
hlt
xlat
push
into
aas
addr16
xor
xorl
jbe
and
mov
xor
add
fucom
cwtl
dec
in
imul
inc
xor
es
stos
outsb
push
mov
das
stos
arpl
jbe
inc
jb
outsl
xchg
int3
insb
xor
xchg
and
clc
xor
mov
mov
mov
add
call
clc
cmp
sbb
cld
jnp
mov
add
sub
push
subb
call
icebp
inc
sbbb
stos
jne
lock
inc
cmpsl
in
push
insb
fidivrs
pop
mov
and
jo
loope
popf
outsb
sub
mov
in
xor
jmp
out
das
push
adc
call
sar
rorb
in
inc
loop
xchg
aaa
add
fisttpll
dec
in
push
inc
fs
jl
and
cmp
inc
icebp
mov
or
mov
gs
cld
push
mov
sub
mov
hlt
xor
lcall
pop
lock
xor
pop
les
adc
outsl
cmpsb
push
ss
es
xchg
push
mov
and
std
pushf
out
xchg
push
leave
cmpsb
stos
jecxz
xchg
xor
pop
decl
loopne
or
sub
fbld
out
xchg
aaa
inc
pop
lock
mov
ret
and
inc
cmp
adc
push
sub
mov
cmpsl
test
cld
dec
fucomip
pushf
jno
mov
push
push
jbe
pushf
rcrb
lock
push
mov
xor
daa
sti
sub
call
test
jle
pusha
je
dec
les
dec
repnz
decl
adc
test
pop
aas
enter
out
lcall
cld
imul
push
jnp
popf
ret
mov
sbb
dec
push
adc
dec
mov
push
adc
xchg
sbb
ss
bound
push
pop
sub
or
outsl
push
add
test
inc
mov
and
lret
ljmp
addl
dec
cmc
call
xchg
cmp
ret
ljmp
scas
ds
es
sbb
outsl
test
std
or
and
fmuls
mov
dec
jg
call
mov
mov
fisubrs
gs
jae
xchg
fcoml
arpl
or
filds
loop
mov
dec
adc
movsb
xchg
xchg
call
test
call
out
divb
mov
xor
pop
loopne
lcall
and
and
push
arpl
pop
or
mov
scas
dec
mov
lcall
gs
xor
and
in
jg
push
pop
sub
adc
push
mov
lahf
mov
xchg
mov
add
jno
cmpsb
aam
cmpsl
sub
out
movsb
icebp
mov
aad
cltd
inc
stos
clc
mov
ret
rcrl
outsl
sbb
push
pop
stc
mov
pop
stos
mov
in
cmp
lea
stc
inc
add
imul
xorb
lea
xor
jecxz
jae
je
mov
push
push
pop
loop
jnp
js
stos
jle
pop
ljmp
xor
cmpsl
or
add
xor
mov
cmpsb
or
dec
cmp
cmp
xchg
movsb
incl
jl
inc
dec
mov
sub
idiv
jmp
pushf
push
subl
scas
in
pop
imul
imul
push
push
inc
ss
out
pop
in
push
pop
je
outsl
aas
push
incl
mov
pop
mov
out
shl
adc
ret
jle
ss
jmp
lods
push
adc
dec
mov
cld
mov
les
push
int3
pop
jne
inc
cld
push
arpl
mov
popf
xchg
xchg
pop
enter
push
cmc
incl
and
cmp
ds
push
sub
addl
add
cmpsl
into
mov
adc
push
and
mov
outsb
adc
pop
and
and
fnstenv
int3
add
mov
repnz
cli
adc
jge
mov
adc
push
fwait
lds
pushf
sub
js
test
jbe
dec
loop
and
push
nop
into
mov
mov
xor
and
sbb
call
sbb
xchg
punpckhdq
sub
sarl
ja
in
lret
loopne
ljmp
mov
out
shrb
ret
data16
or
fwait
jb
not
ljmp
dec
add
fdivr
scas
xchg
imul
push
xchg
mov
testb
insl
ficoms
mov
inc
pushf
jne
sbb
push
push
in
es
mov
or
xchg
mov
mov
add
sbb
lds
imul
or
cmpsb
sbb
gs
push
imul
insl
mov
lock
pusha
push
insb
mov
movsl
sarb
loope
es
sbb
pop
sub
inc
outsl
xchg
lock
and
jae
cmp
sti
adc
test
mov
dec
push
mov
stos
call
test
decl
aaa
into
cli
sub
mov
xchg
iret
jmp
dec
or
sub
inc
mov
out
jne
push
movsb
lock
es
cmp
sub
push
or
addb
loop
das
sar
sbb
jnp
jb
mulb
popa
jbe
jbe
push
clc
lcall
jbe
push
cmpsb
je
pop
loopne
mov
je
aas
pusha
fwait
enter
add
sbb
ljmp
movb
sbb
push
mov
inc
push
cwtl
cli
and
dec
fwait
mov
sub
push
xor
stos
lock
loope
push
sbb
pop
xchg
pop
test
xchg
test
imulb
jle
decl
push
push
push
push
pop
inc
jmp
xor
ret
push
sub
or
jo
rcrl
cmc
outsb
jmp
xchg
jle
cmp
out
out
jg
pop
scas
xchg
lret
gs
and
lods
inc
sbb
fwait
mov
pop
ss
or
mov
cmpsl
add
jno
pop
adc
les
jl
rcr
sbb
outsl
and
add
mov
push
xchg
cmc
lods
xor
push
lcall
outsb
mov
xor
dec
ret
pop
add
int
insl
add
pop
xor
or
dec
pop
scas
xor
mov
fwait
push
push
cmp
cmp
outsb
sbb
sub
mov
lea
adc
cmp
adcb
popa
add
mov
lods
cmp
and
ret
popfw
pop
pusha
push
mov
loope
mov
cwtl
scas
ljmp
adc
mov
out
mov
xchg
xor
mov
cltd
ljmp
fwait
scas
jg
pop
fmull
test
gs
mov
mov
push
xchg
jle
and
ljmp
cs
test
sub
and
sub
add
dec
jecxz
pop
adc
test
notb
clc
call
pop
xor
jnp
sbb
data16
xor
insb
sbb
cmpsl
and
cltd
xchg
xchg
xchg
jbe
or
cltd
pop
fisubrs
mov
inc
cmp
mov
es
mov
xor
add
subl
mov
sbb
pushf
loope
mov
jl
pop
inc
dec
add
mov
outsl
xor
pusha
push
xor
jmp
decl
jecxz
pop
gs
push
inc
cmp
jmp
ret
dec
data16
adc
push
pop
adc
push
mov
or
dec
xchg
cmp
mov
jge
add
stos
push
cwtl
adc
shll
cmp
mov
jg
jle
jge
cmp
pop
mov
xchg
pop
cli
andb
adc
icebp
jnp
dec
pop
fsubrp
insl
enter
cli
pop
inc
lcall
iret
hlt
rclb
xor
jns
sbb
ret
push
movsl
sub
fwait
mov
int
incl
push
adc
pushf
pop
dec
movsl
ss
or
adc
arpl
or
jg
pop
iret
xchg
outsb
jecxz
pop
adc
enter
sbb
push
mov
test
ss
ss
cmp
add
sub
ljmp
pop
and
adc
ljmp
mov
xchg
jp
lods
adc
sub
push
or
add
adc
cli
sub
aaa
push
data16
out
xchg
dec
ja
outsb
loop
decl
cmpsb
arpl
sub
add
mov
xchg
xor
xor
jg
dec
outsl
sub
mov
jae
adc
xchg
test
call
jbe
gs
mov
push
sahf
cli
sub
push
push
enter
lods
rcrb
cmpsl
leave
mov
and
dec
lods
addr16
hlt
incl
sub
dec
ss
fisubl
lods
push
in
sub
orl
jae
push
pop
cwtl
das
xchg
out
push
sbb
add
aaa
icebp
jl
rorl
xor
cld
push
dec
out
pusha
pushl
jg
push
out
and
inc
push
inc
dec
fisttps
addr16
in
push
icebp
scas
ret
mov
les
jg
jle
xchg
adcl
loop
xchg
out
out
push
andb
sbb
insl
lahf
int3
and
lock
lret
jb
lret
lea
pushl
sahf
sbb
mov
pusha
aad
jno
outsb
std
pushl
sar
sub
mov
inc
pop
jecxz
and
dec
jg
jno
jo
mov
push
dec
push
jno
sti
test
pop
add
dec
push
addl
lea
push
aad
adc
es
clc
sub
add
fcmovnbe
mov
lcall
loopne
push
add
insl
push
callw
pop
incl
jmp
nop
dec
xchg
scas
testl
adc
lods
inc
nop
sahf
cltd
and
cmp
add
insl
adc
stos
mov
movsl
lods
or
decb
lods
jle
loopne
inc
cmp
add
mov
jne
jns
adc
pop
jo
out
xor
ds
jl
cmp
cld
decl
sti
jnp
dec
pop
inc
push
shrl
rorl
pop
fisttpl
je
adc
outsb
add
lret
dec
add
outsb
xchg
aaa
cmpsb
xchg
dec
xor
outsb
cmpsb
ja
xchg
roll
xchg
dec
sub
sub
inc
rcr
push
idiv
push
fistpll
jle
push
push
sbb
das
arpl
cmp
and
xor
in
jo
or
cmp
out
fbld
testb
sti
ja
mov
lods
stc
xor
xchg
sahf
sub
lock
out
into
push
out
and
xchg
aaa
lcall
mov
js
xor
pop
and
adc
sub
ficomps
std
call
xor
sub
xor
ss
add
cmpsl
ja
fwait
cmp
popf
push
mov
sub
outsl
sbb
fs
pushl
lcall
leave
in
clc
outsl
aam
imulb
push
pop
push
dec
insb
call
cli
out
rorl
loopne
pop
int
jnp
pop
out
push
out
xchg
es
sarl
out
jmp
or
and
shrb
cltd
lock
mov
xchg
and
jo
test
pusha
fucom
add
fwait
jle
sbb
jp
pop
mov
push
cmpsl
aaa
mov
fwait
dec
mov
mov
pop
cld
cmp
xchg
sub
mov
lahf
ss
decl
dec
outsl
sbb
imul
pop
mov
add
stos
xor
pusha
cld
push
cli
sbb
mov
scas
mov
dec
scas
jo
inc
push
sbb
sahf
shl
popf
mov
cmpsl
aas
cwtl
mov
sbb
jge
iret
and
fldl
add
or
into
sti
bound
clc
call
mov
dec
movb
sbb
fcos
mov
pusha
outsb
das
popa
call
jo
mov
or
movsl
jle
sbb
lock
and
cmpsb
xchg
daa
dec
push
pop
outsl
rolb
rcrb
xchg
divl
sbb
jae
sbb
and
mov
xchg
push
lret
aaa
pop
add
mov
out
add
leave
or
and
pushl
std
dec
cmp
arpl
jne
and
leave
xor
fsts
js
xchg
jle
cli
and
push
cmp
push
inc
and
pop
imul
aaa
cwtl
xchg
call
and
push
xchg
pop
inc
cmp
das
push
popf
add
xchg
add
xchg
inc
push
mov
xor
incl
jmp
sbb
loopne
push
push
rolb
test
es
jns
cmp
clc
sbb
cmp
movsl
sub
inc
loope
mov
clc
lahf
ljmp
jno
sbb
das
cmpsb
ds
ja
mov
cmp
or
jno
xchg
inc
lods
add
dec
ljmp
xor
pop
popa
gs
dec
fstps
lcall
jnp
data16
imul
arpl
outsb
inc
movsb
pusha
mov
insl
jge
sbb
dec
inc
ret
imul
adc
mov
cmp
in
adc
mov
sub
mov
clc
lret
cwtl
xchg
jno
setb
aaa
sbb
lret
sub
push
inc
jno
cmc
aad
int
mov
push
xchg
add
repz
pop
jmp
mov
cmp
int
out
nop
cmp
stc
inc
sub
cld
mov
inc
sub
jno
test
stos
add
xchg
jle
outsb
sub
pop
add
in
xchg
sub
xor
out
test
ret
out
mov
in
pop
in
insl
sub
ja
gs
in
sub
orb
and
shrb
imul
mov
addr16
inc
decl
into
out
and
mov
clc
xor
jns
add
ret
mov
enter
ss
fisubs
test
movsl
clc
fs
decl
iret
mov
xor
lcall
in
mov
aas
fidivrl
pop
cwtl
call
dec
das
popa
cmp
jge
jne
push
inc
daa
in
and
decl
jle
movsb
add
adc
sahf
roll
decl
mov
lds
scas
jl
mov
jns
xor
pop
popa
imul
jmp
or
mov
ds
cs
mov
js
aaa
push
clc
mov
lcall
repz
jmp
popa
add
std
adc
movsb
mov
jb
enter
push
std
inc
and
add
mov
sub
jmp
mov
popf
sahf
push
aas
mov
das
out
mov
call
sub
dec
lcall
sbb
cltd
dec
loop
scas
clc
push
push
cmp
sub
orl
divl
and
push
icebp
mov
mov
push
sub
jmp
test
call
xchg
mov
mov
mov
sbb
and
incl
or
add
push
mov
jmp
mov
cmp
cmp
ficoml
push
lcall
or
test
mov
outsl
adc
roll
outsb
hlt
jmp
mov
imul
jno
lcall
out
mov
dec
lahf
ljmp
data16
jbe
sbb
xchg
pop
add
call
data16
adcb
push
inc
arpl
mov
mov
out
mov
mov
iret
push
pop
mov
pop
fistpl
push
jg
hlt
inc
jnp
roll
sti
scas
shrb
push
das
and
movsl
pop
pop
pop
out
es
dec
mov
idivb
inc
xor
jmp
and
xor
mov
subl
test
push
mov
addr16
sbbb
xchg
mov
mov
loop
push
pop
cmp
outsl
stos
jb
rcll
and
push
inc
cmp
adc
mov
xchg
sub
pushl
mov
addr16
mov
cmc
xchg
inc
adc
xor
in
imul
jge
jge
pop
lahf
ret
dec
pop
pusha
jmp
inc
sbb
jnp
push
jb
and
imul
das
mov
iret
xor
xchg
jo
sbb
cmp
mov
mov
push
xchg
inc
je
scas
pushl
data16
push
adc
add
cld
and
movsl
aaa
push
clc
mov
out
jl
insb
loopne
cmp
mov
popf
jo,pt
xchg
xor
daa
sub
push
scas
in
fcomip
filds
lea
addb
adc
cmp
std
sbb
jmp
or
lcall
incl
loopne
pop
mov
dec
cwtl
inc
out
scas
pop
mov
add
pop
sub
iret
aas
mov
pop
shrb
pushl
inc
rcll
push
ds
fildll
jge
push
pop
stc
jns
pop
fwait
sbb
ret
sub
mov
movsl
xor
ret
fisubs
lcall
pop
lahf
cmp
mov
ss
mov
ja
add
push
dec
xchg
sbb
pop
mov
je
inc
cmp
push
adc
push
mov
jle
xchg
pop
cmp
pushl
cmp
or
pcmpgtb
aaa
dec
mov
jns
sbb
pop
and
inc
insb
add
jno
cmp
cmp
cmpsl
out
sbb
pop
inc
arpl
jae
fidivs
ljmp
ljmp
push
adc
icebp
jne
sbb
xchg
ret
xor
inc
add
fldcw
mov
dec
cmpsb
jge
inc
mov
pop
test
std
data16
xor
xchg
cmpsl
add
push
call
pop
in
dec
call
push
cld
mov
movsb
inc
mov
out
push
add
cs
scas
cld
push
iret
dec
bound
inc
mov
pushl
mov
push
push
insl
rdtsc
js
sbbl
daa
cmpb
xor
lcall
jne
dec
ficoms
xchg
int3
adcb
insl
movsl
sub
aaa
or
ja
stos
push
inc
insb
outsl
dec
jle
inc
lods
bound
mov
sub
inc
xor
xchg
gs
mov
sahf
dec
push
add
outsb
repz
ljmp
test
js
cmp
negl
lea
inc
movsl
push
jb
aas
push
in
int
scas
lea
sub
pop
std
sbb
cmpsl
jb
addr16
scas
insl
jg
ljmp
xor
add
push
ja
outsb
rclb
jle
and
call
out
data16
jg
and
inc
lret
mov
decl
mov
gs
push
mov
stos
or
out
cmp
pop
shrl
dec
sbb
add
push
xor
out
mov
push
mov
inc
scas
adc
xorb
dec
mov
and
in
flds
test
cmpsl
lea
dec
rolb
xchg
push
jp
cmc
lock
ss
push
push
hlt
pop
in
mov
cmp
and
cs
dec
pop
mov
xchg
incl
mov
in
stos
imul
sti
sub
pop
adc
inc
cld
fcomip
mov
ss
sub
lahf
xchg
jns
dec
sbb
fs
decl
out
arpl
scas
jl
jg
jp
mov
mov
int3
pop
dec
jo
inc
xchg
pop
jg
push
sbb
lea
mov
inc
clc
jo
push
dec
ljmp
std
jbe
idiv
jmp
mov
dec
adc
add
bound
test
pop
push
mov
push
mov
xor
xchg
push
cld
jmp
inc
sbb
push
xchg
mov
test
jno
adc
es
sbb
or
ds
xor
test
inc
pop
out
sub
sbb
clc
movsl
pop
push
cmc
jmp
mov
negb
dec
adc
add
adc
jmp
jl
out
ret
xor
mov
mov
cli
mov
cli
es
nop
push
dec
and
mov
pop
loopne
call
inc
out
xchg
mov
lahf
aaa
sub
sbb
imul
mov
mov
daa
roll
nop
daa
add
push
in
scas
std
pop
cmpsb
mov
mov
jg
jecxz
dec
xor
mov
loopne
fdivrp
dec
add
xor
cmp
outsl
push
jo
dec
xchg
mov
xchg
loope
xchg
shr
inc
add
cmovae
mov
inc
cmp
lcall
cltd
in
inc
inc
insl
fadds
mov
fs
dec
inc
enter
movsl
pop
pop
ret
adc
decl
add
push
cmpsb
ss
cmp
loop
cmpsb
xor
incl
sub
fnstcw
outsb
jno
sub
mov
mov
in
call
push
jmp
or
mov
hlt
add
dec
pop
pusha
mov
push
xor
xor
loop
xor
mov
cmp
pop
es
arpl
mov
xor
inc
stos
xchg
inc
jecxz
and
mov
dec
mov
inc
dec
sbb
punpcklbw
js
and
push
decl
pop
xchg
push
xchg
pop
mov
jmp
mov
nop
pop
incb
add
push
jae
adc
movsl
cs
aas
mov
cmp
push
mov
call
sub
and
ljmp
movb
dec
cmpsb
mov
add
dec
dec
clc
scas
inc
std
ljmp
sub
bound
iret
adc
pop
inc
fldt
mov
mov
call
lahf
jle
add
stc
or
shlb
push
cmc
dec
cmp
adcl
mov
fists
xchg
sub
lds
ljmp
and
or
cmp
in
test
inc
sar
mov
outsb
push
arpl
lods
jle,pt
daa
jp
std
xchg
mov
jns
mov
xor
dec
lock
mov
mov
pop
mov
cwtl
and
stc
xor
mov
negl
sti
lea
imul
sub
sbb
mov
jns
fistps
jne
mov
test
or
ljmp
inc
jmp
add
jno
lods
jbe
outsb
sub
subb
fwait
and
out
das
mov
clc
bound
and
mov
jne
push
sbb
jb
enter
cld
add
stos
divl
inc
std
pushl
mov
xchg
mov
sbb
and
xchg
adc
push
mov
dec
outsb
mov
into
or
adc
xor
pop
xchg
xchg
mov
decl
xor
iret
mov
push
jne
mov
imul
pushl
clc
mov
outsl
stos
rcrl
jp
push
ja
push
jb
jecxz
dec
addr16
lods
push
inc
mov
jo
jno
add
popf
push
cs
pop
ds
push
loop
sbb
adc
xor
adc
es
cmp
add
xor
jbe
mov
sbb
jb
aaa
rol
je
dec
jno
sbbb
inc
inc
push
outsl
cli
adc
push
inc
adc
lock
mov
mov
scas
enter
fstps
cmpb
sub
mov
pop
mov
mov
stos
pop
test
daa
lcall
mov
movsl
cltd
stos
es
call
inc
mov
movsb
mov
mov
jb
xchg
subb
inc
push
jbe
aam
imul
mov
arpl
fisubs
xchg
xchg
out
add
arpl
jmp
mov
dec
xorl
je
mov
lret
push
jge
add
pop
stos
orb
call
icebp
fistpl
push
xchg
pop
fs
fiadds
inc
mov
push
fisttps
push
fsubrp
sbb
das
mov
jo
decl
sub
mov
enter
mov
cli
ds
test
sbb
pushf
stos
mov
out
xchg
push
fwait
adc
add
scas
clc
pushl
cmpsl
inc
repz
jbe
sub
cs
loope
or
xor
scas
clc
incl
or
mov
jecxz
test
add
sti
sbb
cmp
jg
sub
cltd
pushl
xchg
dec
lock
inc
incl
loop
and
mov
push
into
das
lods
addb
scas
loope
scas
adc
ss
cmp
jle
loope
lods
adc
jge
mov
or
das
test
mov
sbb
pop
ljmp
lahf
pusha
push
pop
inc
sub
int3
or
jg
dec
cld
push
addl
je,pt
cs
das
cli
ljmp
adc
mov
xchg
or
sub
rcll
test
adc
pop
xchg
cmpsb
sub
inc
sbbb
insl
cld
dec
loope
mov
out
inc
repz
aas
jbe
push
mov
pop
sbbb
scas
sbb
out
xor
push
cli
incl
loop
pop
jecxz
movsl
scas
pop
aaa
js
lahf
call
push
adc
mov
clc
cmpsb
daa
pop
ss
vmread
adc
sarl
cmpsl
test
dec
stc
sub
push
stc
jnp
addl
shrd
sub
ja
sbb
jmp
out
xor
dec
pop
aas
arpl
repz
xor
mov
pop
sub
xchg
sub
jo
or
mov
enter
cli
enter
cltd
mov
inc
inc
test
dec
insb
push
into
ds
roll
imul
scas
add
sub
pushl
mov
jecxz
insb
rclb
movsl
incl
arpl
popa
inc
iret
scas
shrb
push
inc
ss
and
jg
push
cmpsl
add
mov
push
mov
js
lods
push
jp
bound
hlt
pop
lahf
aaa
imul
jb
lcall
xchg
out
xchg
scas
cs
lock
xor
jb
test
xchg
test
mov
outsb
sar
ja
cli
push
out
sbb
clc
pushf
insb
mov
movsl
filds
lret
lock
movsb
cmc
subb
ja
dec
jecxz
push
and
jne
lods
sbb
or
and
jg
xor
rolb
pop
mov
push
test
cmp
repz
mov
sbb
cmp
cs
and
lret
and
outsl
adc
mov
leave
mov
icebp
or
movsb
jo
pop
shlb
push
jnp
ss
into
inc
jbe
sbb
and
jmp
and
ret
push
pop
test
xor
adc
test
adc
std
and
aas
in
mov
pop
stos
lahf
push
jae
cmpsl
cmp
sbb
lea
jb
push
aaa
insl
xor
xchg
fs
lds
repz
cmp
fs
aam
xchg
js,pn
push
pop
ss
jmp
scas
pusha
mov
subl
out
xor
dec
mov
jl
xchg
test
notb
xchg
adcl
push
mov
call
daa
inc
jno
ret
jle
aaa
ret
cli
jmp
mov
mov
cmovbe
cmp
int3
je
xchg
clc
mov
aam
cmpsb
push
mov
push
push
fbld
movsl
cmpsb
mov
inc
mov
lock
loopne
cmp
imul
inc
adc
popa
cmp
je
mov
inc
sbb
popa
dec
cmp
aaa
sbb
scas
cltd
stos
enter
mov
jmp
in
fiadds
mov
mov
xchg
inc
cmp
or
out
lcall
sbb
cmpsl
movsl
mov
test
mov
push
cld
ja
ljmp
stos
and
lods
call
in
mov
mov
cmpsl
lods
xor
call
mov
sbb
out
or
fwait
dec
mov
mov
or
orb
pop
cs
pop
fisttps
sbb
insb
je
add
xchg
sub
cld
lcall
arpl
std
push
outsl
imul
inc
lea
adc
cmpsl
dec
movl
lods
dec
mov
call
push
lret
std
sub
xchg
les
inc
jbe
pop
lock
jg
jecxz
xchg
pop
es
jmp
mov
pop
data16
fbstp
test
and
scas
push
push
out
add
out
mov
cmpsb
push
cmpsb
mov
int
ss
xchg
call
sub
xor
cld
push
push
shrb
lret
and
ror
pop
or
fcomip
dec
pop
and
pushf
imul
repnz
je
clc
fildll
std
adc
jno
in
push
sarl
jmp
sar
cmp
mov
inc
test
mov
xlat
mov
add
loope
out
jg
ja
scas
xchg
or
scas
push
push
jmp
push
jecxz
cld
cmp
or
insb
lods
xchg
fwait
pusha
mulb
jbe
jg
push
das
in
mov
dec
lods
pop
cmpsb
cmp
mov
jg
mov
pop
cld
jg
push
ja
adc
push
jb
mov
fcomip
sbb
icebp
jae
jne
pop
inc
jno
push
outsb
leave
outsl
pop
dec
add
or
icebp
cmp
out
test
sbb
ljmp
jno
pop
orb
mov
cmp
sub
sbb
test
jge
xchg
push
daa
decl
pop
arpl
lret
push
pop
inc
jb
mov
outsb
inc
dec
pushf
adc
mov
fildll
push
es
ret
dec
ljmp
scas
aaa
mov
movsb
loop
mov
sar
out
cli
call
fnsave
xchg
jae
lock
dec
and
mov
lahf
lcall
or
mov
mov
xchg
push
dec
outsb
es
mov
daa
pusha
out
adc
filds
push
fwait
out
mov
enter
push
scas
std
jl
cmp
jns
and
xchg
sbb
loopne
mov
inc
mov
cmp
mov
adc
popa
in
out
test
pop
lock
jbe
inc
clc
jmp
out
popf
inc
iret
sbbb
pop
or
int3
add
std
ljmp
loopne
jae
stos
lods
mov
repz
mov
decl
add
iret
mov
xor
inc
test
mov
ds
cwtl
std
xchg
and
jmp
cmpsb
fwait
icebp
or
jmp
andl
push
aaa
js
xlat
xchg
pusha
xor
imull
jns
dec
mov
mov
jno
out
popa
daa
call
adc
push
mov
mov
ljmp
hlt
mov
dec
call
pushf
push
test
bound
lcall
push
fistpl
push
pusha
cwtl
push
scas
es
es
cltd
leave
jb
push
outsb
pop
xchg
jne
or
and
jmp
xchg
insl
xor
ret
dec
std
mov
call
pop
scas
mov
aas
xchg
sub
mov
and
out
hlt
mov
dec
mov
pushl
js
and
cmp
mov
jae
fistpll
outsb
inc
outsb
aam
inc
pcmpgtd
testl
outsb
shrb
addb
dec
cwtl
lods
xchg
ja
pop
loop
in
clc
mov
arpl
mov
call
decl
mov
adc
ret
cmp
testl
adc
call
jno
outsb
lret
sbb
cmpsb
adc
std
cmp
mov
mov
loope
jl
dec
icebp
push
mov
inc
mov
cwtl
xor
cmpsb
mov
push
hlt
dec
out
ja
popa
dec
push
push
incl
scas
out
xor
cmpsl
fisubs
push
jg
les
pusha
fwait
cli
mov
mov
call
gs
pop
or
out
jmp
adc
push
lcall
out
inc
inc
inc
cmp
cmp
push
fldcw
mov
ret
mov
inc
or
xor
jo
adc
pushl
mov
sbb
imul
mov
lcall
add
mov
out
je
xchg
insb
out
aas
add
mov
pusha
fbld
dec
dec
inc
pushl
pop
xchg
mov
dec
out
ret
inc
jnp
fcoms
ljmp
xchg
cs
push
hlt
mov
mov
xchg
pop
ret
call
sarl
xchg
gs
adc
mov
adc
mov
arpl
jno
mov
in
loope
std
inc
mov
stos
loopne
mov
lods
mov
shll
or
scas
loope
cmp
xchg
mov
push
inc
mov
cld
ret
or
mov
mov
mov
ljmp
pop
fldcw
ret
mov
ljmp
outsb
and
xchg
mov
sar
decl
jb
js
cmp
in
outsl
out
and
pop
mov
push
dec
enter
ljmp
pop
in
jp
das
mov
fucomip
mov
mov
data16
ljmp
jecxz
in
dec
stc
cmp
in
imul
lret
or
xchg
jne
mov
lods
std
sbb
ljmp
xchg
xchg
arpl
inc
xchg
push
aas
leave
lods
and
inc
or
dec
xchg
mov
incl
dec
mov
call
test
push
ret
incl
arpl
out
mov
int
out
gs
push
jno
and
sbb
out
mov
out
imul
lods
or
sbb
jg
ljmpw
imul
jmp
cmpsl
cmp
cmp
icebp
dec
inc
out
aad
mov
das
lahf
stc
test
sahf
cltd
mov
orb
icebp
lods
js
shr
decl
lret
adc
cld
or
push
mov
pushl
aas
adc
adcl
mov
out
call
mov
push
das
push
lock
pop
push
das
dec
adc
cmp
outsb
in
or
ljmp
mov
gs
adc
cmpl
adc
cmp
adc
and
sbb
out
and
aas
xchg
sub
cmpsb
mov
decl
sbb
mov
sbb
imul
stc
adc
stos
popa
mov
in
or
cmp
xor
clc
pop
insl
push
stos
addr16
cmc
pusha
push
push
dec
test
sub
mov
sub
scas
jnp
je
enter
jnp
pop
pop
and
xchg
sbb
popa
mov
lcall
dec
mov
and
ficomps
and
loop
mov
mov
insl
loope
add
imul
fwait
mov
les
test
pop
int
inc
scas
cli
pop
mov
cmpsb
lahf
pop
cmp
sahf
inc
fstpl
lcall
adc
ret
push
subb
lcall
dec
mov
pushf
add
mov
dec
out
push
in
mov
mov
rolb
repz
xchg
les
inc
inc
imul
outsb
cmpsl
xchg
pop
lret
ljmp
daa
test
insl
xor
lcall
cwtl
push
mov
movsl
mov
stos
cld
call
into
jnp
enter
loopne
mov
cmp
mov
add
insb
xor
loop
test
filds
jb
scas
xchg
outsb
sti
test
je
or
lock
add
decl
jl
dec
lcall
ss
add
add
jns
add
cltd
aas
dec
xchg
aaa
fs
arpl
incl
jnp
pop
ret
inc
cld
xchg
mov
insb
push
stos
dec
test
callw
sbb
test
pop
cmpb
mov
ds
sbb
push
jne
sub
sbb
jo
into
sbb
test
inc
mov
sti
push
pop
or
xor
xorb
ljmp
jbe
ret
outsl
adc
mov
mov
sbb
cld
xchg
mov
mov
pop
sbb
scas
mov
push
clc
sbb
sti
mov
fstpt
mov
push
xor
outsb
in
insb
push
cmp
cld
stos
sub
test
daa
mov
dec
mov
fistpl
pop
rorb
loop
insb
daa
divl
clc
ljmp
add
cwtl
ds
jmp
jp
mov
fimull
mov
pop
add
mov
add
icebp
cmp
lock
xchg
imul
mov
rep
scas
mov
xchg
imul
jg
pop
jno
sti
andb
stc
or
pushf
jmp
sub
xchg
mov
call
shlb
cmp
jecxz
push
test
mov
mov
call
pop
lcall
push
in
xchg
mov
jmp
outsb
loopne
lods
adc
pop
fwait
adc
fdiv
cmp
stos
incb
cmpsl
insb
dec
test
stos
push
or
inc
push
ja
jle
jnp
jl
icebp
and
pop
sub
mov
xorl
push
xchg
lea
call
mov
mov
mov
sbb
sbb
mov
mov
dec
rcll
fs
in
mov
or
mov
mov
mov
xchg
rorl
lcall
decl
sbb
adc
mov
lcall
push
gs
xor
stos
xchg
jnp
sti
dec
fildl
cmpsl
push
sahf
in
clc
push
xchg
shll
clc
jg
push
ljmp
inc
mov
add
xor
cld
jnp
jle
test
ds
pushf
xchg
push
cmc
lock
decl
lods
shlb
imul
cmp
pop
in
inc
jmp
in
push
mov
mov
cmp
xor
shrb
cmp
cmpsl
loop
sbb
mov
fwait
es
popa
push
pop
rcll
pusha
sub
cmp
int3
sub
fldenv
imul
add
ljmp
push
ret
lds
fstpt
xlat
jecxz
ror
jecxz,pt
xor
in
aad
cs
xor
outsl
cmp
push
push
nop
lahf
xchg
mov
and
sbb
lahf
jo
test
jbe
cltd
xchg
push
js
lcall
xchg
pop
icebp
sbb
jns
jbe
imul
pop
imul
jge
insb
and
inc
sub
pusha
jno
inc
mov
out
adc
addr16
lods
jmp
pop
add
xor
mov
js
loope
mov
jg
sbb
pusha
cs
stos
lret
mov
cmp
incl
mov
mov
adc
or
imul
hlt
jbe
dec
xor
mov
incl
and
ljmp
dec
sahf
sar
aas
data16
jns
inc
sbb
hlt
push
push
sbb
jo
adc
addl
jo
decl
add
jg
cmp
cmp
inc
or
add
dec
das
xor
pop
jle
insl
movsl
in
das
jl,pt
cmp
jmp
lds
jb
mov
pushl
xchg
clc
or
pop
call
outsl
aaa
dec
jo
outsb
loop
push
jns
outsl
push
lock
pop
loope
into
leave
ss
jnp
jg
inc
rorb
sub
push
popa
add
lcall
insl
pop
fwait
jb
sub
loope
and
or
loopne
int
adc
out
inc
jge
inc
lock
mov
addr16
pop
jg
cmc
cltd
xor
iret
sub
incl
imul
movsb
aaa
xchg
xorb
sbb
jp
imul
aad
outsb
adc
adc
lcall
pop
imul
pmaxub
dec
stos
clc
ljmp
out
ds
cs
cmpsl
jmp
jnp
outsb
push
dec
mov
test
sbbl
pusha
repnz
dec
shr
inc
push
push
data16
leave
jmp
push
sub
dec
and
xor
pop
lcall
repnz
pop
cmp
jg
mov
mov
push
pop
int
orb
and
call
mov
and
stos
xor
adc
push
call
lock
fwait
or
add
or
or
mov
inc
in
popf
jno
in
add
sarb
loope
incl
sahf
popf
xor
lret
mov
push
cmc
int
xchg
xchg
cmp
pop
add
fadds
cltd
push
jbe
or
mov
lds
inc
cltd
cmc
mov
aas
xor
popa
adc
or
sbb
or
popf
push
adc
push
dec
fildl
outsl
andb
cmp
mov
fldt
xor
cmp
xchg
adcb
sub
inc
push
xor
pop
cmpsb
lcall
add
stos
rcll
pop
aad
aas
aam
inc
loop
cld
jmp
je
cmp
cmp
ss
cmp
mov
cmc
fbld
fidivs
fwait
mov
xchg
lret
jmp
adc
aaa
out
mov
lcall
lahf
lret
pop
jg
sub
pop
pop
push
add
lds
lcall
cmp
mov
movsb
jbe
or
dec
mov
xor
loope
jmp
cmp
mov
rorl
push
mov
add
sbb
mov
jae
outsl
outsl
xor
add
sahf
stc
cmp
test
rcrl
pop
shrb
pusha
inc
mov
sub
ss
cmp
fstl
jbe
mov
into
mov
rcll
insb
inc
jmp
inc
les
imull
rcrb
jb
push
in
bound
std
cwtl
fcoml
push
dec
andl
dec
add
call
sar
push
inc
jbe
popa
mov
into
cmp
shlb
mov
pop
inc
cld
das
push
fwait
add
das
pop
and
fs
sbb
xchg
push
and
xchg
add
xchg
das
xor
dec
test
dec
xor
fisttps
adc
loop
push
pop
cmp
push
test
cld
adc
fists
movsl
lcall
xor
jg
xchg
je
loopne
cli
jecxz
fsubrl
ret
icebp
mov
outsl
and
mov
aaa
push
out
enter
out
testb
pop
jg
fsubs
sub
jb
in
scas
int3
hlt
xlat
inc
dec
dec
mov
sub
and
fwait
decb
xor
out
sbb
ja
ss
pop
into
xchg
insl
lcall
flds
jae
add
lock
outsl
sub
sub
mov
loop
sbb
lds
into
dec
pop
loop
andl
int3
adc
cld
xchg
ss
xchg
xchg
mov
mov
lahf
jnp
mov
ljmp
std
pop
scas
jmp
test
imul
out
cwtl
push
mov
or
push
mov
in
es
call
pushl
pusha
lcall
mov
clc
xor
sbb
mov
test
out
adc
mov
and
ds
mov
sbb
pop
inc
lock
decb
in
pop
mov
iret
jbe
into
xorb
pop
jp
push
mov
test
inc
in
outsb
dec
jp
add
lds
mov
jmp
aaa
mov
adc
cmpsl
jo
xor
mov
gs
icebp
xor
mov
mov
lcall
or
loope
add
adc
clc
pushl
or
pop
or
fnstenv
movsb
dec
cli
xchg
es
cmp
push
add
stc
loop
jno
cwtl
cmp
and
movsl
push
add
xor
pop
cld
add
das
scas
roll
ss
repnz
cmp
add
jbe
ficoms
push
push
push
xchg
pop
adc
mov
jmpw
mov
mov
fildl
lods
sti
add
cltd
mov
lods
aas
imulb
push
jns
int3
xchg
out
sub
xor
xorb
stc
push
push
test
jno
adc
pushl
int3
or
push
xor
adc
and
cli
and
lret
push
pop
sbb
imul
pop
push
cmpsb
cmp
stos
mov
jne
fs
icebp
lcall
sbb
jae
add
jl
add
adc
dec
push
andb
jae
pop
and
ljmp
dec
pop
mov
call
or
cli
or
cmp
jg
xor
or
ds
movsb
int3
dec
mov
push
xor
lds
mov
mov
cmpb
mov
cmpl
pop
sar
incl
pushf
add
nop
movsb
es
popf
push
out
jo
mov
adc
data16
ss
xchg
and
push
stos
aaa
inc
push
adc
rclb
dec
out
add
pushf
xor
mov
out
xchg
lock
jmp
ret
imul
dec
scas
xor
inc
pop
inc
stc
add
and
outsb
lret
jae
dec
mov
out
sarb
mov
out
sar
in
mov
je
stos
sbb
scas
add
inc
push
fwait
popf
jne
cwtl
dec
xor
les
and
test
push
inc
call
mov
push
mov
stos
ss
hlt
xchg
sbb
aas
sar
imulb
cmp
lahf
add
mov
jg
addb
ret
pushf
les
jnp
das
dec
dec
xchg
pop
or
stos
inc
inc
ljmp
pop
outsb
sub
xchg
adc
outsl
xchg
pushf
in
mov
lock
mov
jb
cmc
outsl
jbe
ss
mov
mov
xchg
lcall
and
lea
out
fidivrs
rep
incl
cmpsb
push
mov
mov
in
mov
cli
inc
popa
jnp
mov
daa
lds
loope
mov
sbb
pop
jmp
lods
jns
icebp
ds
insb
fimuls
jno
mov
rorl
mov
insb
dec
lret
xor
cmpsl
lds
mov
pushf
push
push
and
push
jae
dec
in
loop
js
outsb
jb
jae
push
jp
and
lret
shll
ljmp
push
dec
shlb
pop
jno
stc
sbb
out
fnstcw
cwtl
lret
std
cs
mov
mov
pop
jno
adc
ficoml
lcall
aam
aam
and
das
mov
mov
rol
mov
push
test
jg
outsl
lret
push
popa
add
jl
mov
aad
jns
add
call
rorb
and
mov
pushl
dec
clc
push
sub
adc
ja
or
aas
xchg
cli
das
incl
pusha
jns
or
or
push
lods
sbb
imul
aaa
or
mov
pop
cmp
and
repz
push
repnz
cmp
lcall
jl
sub
out
cmp
dec
movsb
in
add
fists
out
das
addr16
subl
cld
lock
out
out
fsubs
es
js
ds
xor
mov
cs
jae
inc
insb
imul
subb
push
dec
sti
push
shrb
stos
adc
mov
cmc
sub
imul
outsl
cmpsb
mov
rorb
adc
push
sub
decl
stos
leave
or
je
test
jno
je
or
xchg
sbb
mov
fwait
hlt
call
call
pushf
xchg
or
mov
cld
incl
mov
mov
aad
movsl
mov
jle
xchg
or
mov
xchg
sbb
rcrl
dec
pushl
stos
sbbl
sahf
ss
es
pushl
call
cwtl
lahf
and
mov
sar
incl
xchg
ljmp
cmpb
movb
cmpsb
sbb
push
aas
into
sbb
adc
aas
mov
or
int
adc
and
adc
sti
mov
stos
inc
lock
sbb
xor
and
jmp
pop
les
push
rsqrtps
xchg
adc
roll
sub
insl
or
call
xchg
sub
adc
push
arpl
dec
mov
filds
push
cmpsb
js
adc
and
cmpsl
and
cmc
bswap
repnz
imul
jns
dec
mov
in
or
jmp
adc
rclb
adc
sbb
ja
dec
mov
xchg
mov
cmp
ljmp
aam
mov
inc
incl
pusha
cmpsb
cmpsb
loop
je
mov
ljmp
lahf
or
cmp
pop
mov
jmp
mov
gs
or
dec
call
iret
leave
push
insl
je
jno
push
sub
cmpsl
out
stc
pop
test
popf
bound
imulb
icebp
ss
sub
jo
mov
or
adc
gs
pop
popf
sbb
sbb
add
lret
clc
ja
hlt
mov
roll
mov
sub
mov
push
dec
add
xor
popa
push
push
mov
js
pop
xchg
cmp
std
aaa
sbb
into
add
pop
mov
adc
push
adc
insl
push
das
mov
imul
jbe
es
subb
int3
sub
fists
mov
into
shlb
leave
out
or
dec
cs
in
shl
or
sub
arpl
inc
push
lret
mov
inc
jp
and
dec
mov
adc
xor
jae
mov
sub
dec
divl
js
and
out
jo
xchg
sub
ljmp
decl
clc
lea
sub
mov
and
inc
jns
faddl
xchg
out
mov
call
lret
mov
lcall
ja
movsb
fldcw
movsb
mov
jo
push
pop
outsb
mov
incl
inc
subb
in
test
lea
ljmp
or
xlat
xchg
sbb
cmc
mov
lcall
push
jmp
add
test
mov
dec
xchg
xor
call
or
mov
imul
push
cld
mov
jae
psubd
shlb
mov
pop
push
and
movsb
outsb
fcomi
mov
jle
or
xchg
sub
lock
mov
pushf
mov
push
sub
lock
xchg
push
daa
mov
jmp
xchg
push
fbstp
test
outsb
outsl
or
add
in
mov
mov
mov
mov
cmp
fstpt
jne
or
test
out
clc
xor
xlat
ret
mov
test
push
jmp
push
lret
jp
ds
jmp
jp
std
and
mov
mov
icebp
or
sub
push
lret
and
mov
aad
arpl
scas
les
xchg
cmc
xchg
aam
push
xchg
mov
in
pushl
cld
test
or
ss
jmp
push
add
push
dec
std
push
xchg
aad
cld
adc
inc
jle
into
insb
in
cmpsb
sub
and
push
lea
jo
dec
repz
fwait
stos
dec
jns
jmp
outsb
test
cmp
xor
cmpsb
or
push
push
pop
ss
add
call
test
mov
push
test
mov
idivb
xchg
and
movsl
cmp
mov
xor
lcall
cwtl
mov
jo
mov
jmp
sbb
ljmp
cmp
xchg
orb
data16
mov
es
incl
sbbb
mov
xchg
pop
mov
sub
outsb
movsl
iret
movsb
push
mov
sbb
cmp
mov
dec
loope
sahf
sub
cmpsb
and
mov
scas
mov
mov
mov
mov
cwtl
jp
decl
imul
push
ja
clc
orl
xchg
shll
xchg
xor
mov
jo
adc
jb
xchg
jle
repnz
data16
pushl
addr16
mov
movsl
cs
and
daa
stos
out
push
aaa
int
mov
and
insb
and
lcall
movsl
mov
insl
call
lock
movsb
mov
pop
mov
test
scas
call
mov
outsl
sub
dec
icebp
add
shlb
sar
dec
sbb
push
adc
mov
outsl
clc
lcall
ja
xor
mov
xchg
sub
push
aas
mov
popa
and
mov
mov
int3
cmpsl
push
jge
mov
pop
rcrb
jne
add
call
xchg
ds
orl
fidivrl
push
sub
pushl
enter
popf
pop
adcb
gs
push
cmp
orl
pusha
imul
incl
mov
movsl
inc
pop
test
testb
jno
dec
cmp
aad
sbb
inc
add
mov
out
mov
jne
dec
repnz
push
mov
dec
add
mov
adc
gs
push
mov
pop
lret
push
xchg
add
xorl
ja
cli
sub
imul
inc
pusha
gs
aaa
leave
jp
data16
mov
nop
outsb
push
cs
mov
mov
jg
rorl
arpl
outsl
jg
adc
mov
scas
cmpsb
cmp
push
jne
push
dec
adcb
into
fldl
mov
std
push
mov
bound
cwtl
cli
dec
push
pop
jge
inc
popf
mov
outsb
jp
sbb
out
xchg
arpl
dec
clc
jae
cmp
push
popa
pop
test
mov
jg
pop
push
mov
jne
mov
xor
pop
adc
push
imul
gs
imul
inc
cmp
adc
stos
push
inc
sbb
cltd
xchg
jg
sbb
fwait
daa
outsb
imul
dec
and
and
inc
arpl
incl
mov
fisttpll
addb
stos
jno
dec
and
incl
push
sbb
mov
sahf
mov
xorb
pop
add
mov
cmp
sahf
mov
cwtl
inc
jo
push
pusha
aam
xchg
int3
insb
dec
outsb
inc
push
movsl
in
xchg
or
arpl
adc
movsb
or
decl
xor
pusha
mov
fs
clc
adc
in
insb
dec
mov
mov
das
ss
je
inc
shrl
bound
je
andl
iret
addl
enter
dec
lods
decl
fidivrs
push
mov
jl
xchg
popa
out
decl
mov
mov
mov
cmpsb
xchg
adc
mov
xor
incl
fs
push
sub
mov
sarl
add
mov
xor
cmp
loopne
jae
movsb
arpl
push
test
jne
inc
loop
and
cmpsb
jg
push
hlt
test
js
push
inc
mov
sbb
gs
insb
sbb
mov
testb
testb
mov
movsl
imul
insb
inc
mov
or
mov
push
cmp
mov
xlat
movsb
incl
ja
js
lahf
mov
jne,pt
inc
jno
je
sub
scas
sbb
pop
decb
pop
dec
loope
jbe
mov
dec
clc
incl
jo
call
ss
sub
aas
adc
andb
jae
inc
pop
push
pop
dec
bound
imul
add
stc
stos
push
lds
push
loopne
jbe
insb
sahf
ds
loopne
pop
or
out
scas
jmp
mov
insl
in
hlt
mov
ss
in
insb
push
push
addr16
jp
cmpsl
jo
add
icebp
mov
lock
jmp
hlt
mov
push
movsl
cmp
pop
mov
pop
outsl
push
gs
add
jne
mov
outsb
mov
sahf
into
insl
lods
jo
xchg
loop
ljmp
xchg
call
mov
dec
mov
add
movsl
adc
add
inc
inc
mov
cmp
and
fisttps
movsb
test
dec
ss
int
cmp
cltd
inc
xchg
into
fwait
sbb
call
sub
push
ja
mov
lods
outsl
insl
mov
jnp
scas
insl
fwait
xchg
push
jnp,pt
cmpsb
dec
sahf
mov
pop
dec
push
jae
mov
outsl
aam
jnp
std
mov
jae
dec
cli
scas
push
mov
fcomip
insb
jp
imul
or
gs
pop
jns
add
dec
push
jb
dec
decl
jle
out
lea
jno
mov
adc
lea
pop
ficomps
mov
push
jge
test
jmp
inc
outsl
mov
addr16
mov
movsl
inc
sub
mov
or
and
mov
es
outsb
xchg
or
sbb
cmpsb
stos
lahf
out
je
es
pusha
arpl
mov
mov
xor
scas
daa
mov
xchg
fsubp
dec
std
push
jbe
cmp
out
xor
dec
push
inc
jle
xor
ret
in
in
mov
pop
pop
roll
in
inc
test
mov
and
in
nop
inc
add
mov
test
mov
xchg
jb
fstl
cli
jne
aas
xchg
sub
jo
mov
mov
mov
scas
pop
pop
loope
push
lock
cli
cmp
cmp
std
incl
inc
loope
je
add
sahf
inc
lods
sbb
jo
add
mov
std
mov
pushl
in
nop
arpl
out
mov
in
lea
gs
mov
add
jno
and
insb
cmp
loop
imul
jno
push
jb
aas
stos
js
and
call
push
push
stos
adc
sbb
pop
ljmp
pusha
push
cltd
push
mov
imul
ljmp
dec
or
sub
dec
test
je
arpl
lea
stos
jl
mov
cli
push
push
mov
and
stc
pop
rorl
inc
mov
mov
arpl
xor
popa
ljmp
fcomp
clc
decl
push
jmp
call
into
add
lcall
inc
xchg
test
mov
inc
gs
xchg
loopne
imul
fwait
test
mov
and
hlt
pop
std
fnstcw
dec
ljmp
or
or
or
ss
mov
mov
sbb
das
lea
jecxz
jno
or
or
or
jbe
sub
jae
sbb
loop
mov
lock
sahf
addr16
ficomps
loopne
outsb
dec
dec
mov
xchg
inc
dec
out
test
dec
jno
mov
cld
call
iret
imul
adc
jnp
es
fldl
lcall
or
icebp
lret
add
jg
pop
xchg
xchg
popf
mov
addl
nop
push
daa
popa
loopw
outsl
out
cmp
add
mov
dec
fsubr
cmp
nop
loop
push
cmc
xor
es
lods
stos
incb
es
xchg
xchg
mov
ljmp
dec
sahf
subl
sahf
icebp
mov
jecxz
mov
cmp
das
jbe
lds
pop
mov
xchg
xchg
mov
das
nop
hlt
mov
mov
aas
pushf
stos
push
movb
fwait
inc
pop
lock
jmp
cli
xor
jmp
lea
mov
mov
pop
pushl
sub
pushf
mov
fnstenv
inc
jg
sti
cs
decl
cmpsb
popa
test
mov
ljmp
mov
orb
xchg
mov
lret
adc
ljmp
fld
mov
mov
aad
mov
stc
sub
rolb
inc
mov
mov
mov
xchg
test
dec
dec
jecxz
jp
adc
mov
cli
mov
push
mov
aaa
and
pop
mov
cli
pop
inc
add
pusha
hlt
daa
test
sbb
sbb
out
mov
mov
push
mov
xchg
or
sahf
mov
int3
and
je
mov
sub
pop
out
xchg
sbb
mov
fimull
mov
mov
push
add
ljmp
mov
mov
mov
jnp
ss
test
enter
jg
decl
mov
in
jb
xchg
les
call
hlt
and
movsb
je
js
popf
xchg
jmp
jg
callw
std
ret
icebp
xchg
outsb
push
mov
lcall
mov
sub
call
sahf
cwtl
lods
fucomp
mov
imul
sti
mov
sbbb
shrb
out
ret
cmp
scas
sbb
mov
jb
ret
into
xchg
lea
or
push
jmp
fisttps
leave
cmp
mov
xchg
stc
cmp
lret
sarl
cmpsl
inc
xchg
push
cmp
leave
xchg
xchg
lcall
pop
cmpsl
lea
add
xchg
jmp
dec
aas
cmp
outsb
test
sar
lcall
push
shrl
incl
mov
mov
imul
ljmp
cmp
mov
pop
iret
xor
mov
pushl
popf
idivb
lcall
fistpll
pop
test
pop
int3
jle,pt
out
xor
mov
cmp
ljmp
int
mov
lahf
and
xor
cwtl
mov
cli
mov
jmp
ss
pop
jle
ss
mov
jecxz
shufps
mov
clc
icebp
aaa
push
lods
jp
ret
arpl
in
fbstp
cwtl
out
pop
ret
subb
xchg
jmp
ffreep
cmpsb
movsl
mov
stc
pop
adc
push
xchg
mov
rorl
fs
dec
mov
jecxz
pushf
mov
fcomi
and
stos
xchg
xchg
sub
pop
rcl
mov
ja
inc
add
cli
out
out
xchg
loope
sub
dec
cmpb
dec
add
pop
jle
into
xor
test
pop
mov
xchg
push
test
shrl
decl
mov
fimuls
inc
fnsave
mov
and
inc
stos
cltd
add
pushl
jmp
mov
fistpll
pop
out
mov
xor
aaa
pop
scas
movsl
in
mov
lahf
jno
xchg
mov
lcall
jmp
mov
pop
jmp
add
mov
mov
add
xchg
sbb
stc
or
loope
faddl
xchg
dec
std
mov
jns
pushf
test
dec
movsb
dec
push
lcall
sbb
pop
out
xchg
xlat
cmp
mov
sarl
popl
lcall
xor
ljmp
sti
push
stos
adcb
fs
test
cwtl
fwait
push
xchg
lods
fldt
sbb
mov
cmpsl
fisubrs
popf
xor
jbe
mov
cmpsl
and
stc
cmp
adc
dec
aaa
mov
into
jge
sti
sub
fwait
ja
pop
xchg
jbe
std
xor
lcall
enter
xchg
lcall
ss
or
xchg
mov
mov
and
mov
inc
pusha
jmp
arpl
push
push
pop
and
lods
in
jmp
sahf
stos
aaa
fwait
inc
or
or
imul
dec
xlat
fwait
sbb
ret
hlt
sahf
vpmacsswd
ljmp
popf
push
pop
insl
mov
mov
lcall
mov
mull
popf
xchg
rol
cli
pop
mov
push
incl
testl
mov
call
mov
jge
test
movsl
mov
ss
cmp
subl
xchg
xchg
imul
mov
push
popl
sub
gs
xlat
loopne
add
mov
fcoms
loopne
aad
movsl
frstor
pop
mov
lahf
mov
jb
andb
mov
mov
in
stos
loop
fsubl
jecxz
mov
mov
loopne
mov
dec
loopne
mov
jecxz
cmpsw
mov
cs
hlt
daa
and
jg
pop
mov
cmc
lcall
lret
push
mov
and
jecxz
mov
mov
lock
stos
mov
mov
adc
or
out
pushf
xor
outsl
bound
xor
ret
das
mov
outsb
pushl
sub
inc
iret
loopne
or
mov
lret
outsl
push
lahf
int
mov
mov
outsl
and
pop
cwtl
ret
mov
mov
fisubrs
cs
sub
mov
lcall
pusha
dec
inc
mov
cmpsb
loopne
add
cs
stc
cmp
mov
mov
mov
inc
mov
out
sub
or
jle
popa
lcall
loope
mov
mov
sbbb
add
mov
jmp
sbb
pushl
fistpll
inc
inc
rcll
out
xorb
mov
lahf
ret
cld
cwtl
js
mov
rcr
fnstenv
adcb
sub
popf
xchg
test
decl
lcall
arpl
sub
mov
mov
pop
pop
mov
stc
cmp
xor
les
ss
xchg
in
mov
xor
and
aaa
test
test
sarl
mov
fdivrp
add
mov
mov
cli
mov
jmp
adc
sti
cmp
jp
ret
sti
sbb
sti
mov
cmpsb
int3
push
mov
das
adcb
cmp
fisubrl
inc
int
push
scas
clc
or
add
out
sbb
pop
clc
push
dec
rolb
push
push
dec
xchg
popf
mov
pop
mov
decl
mov
mov
push
out
mov
aad
vmaxsd
xorl
xchg
cmc
stc
mov
jnp
mov
aas
fisttpll
imul
out
in
mov
jne
dec
pop
mov
iret
xchg
mov
out
xchg
out
movsb
xchg
movsb
lret
mov
jbe
cli
xchg
sub
out
push
cmpsb
mov
out
fstp
gs
std
scas
mov
loop
sahf
shrl
mov
sbb
call
ret
in
loop
dec
aaa
sbb
std
push
sarb
push
test
clc
mov
les
sti
xchg
test
in
mov
mov
mov
sub
lock
loop
jbe
cmp
lods
mov
cmpsb
mov
push
in
push
imul
jecxz
or
popf
push
int3
repz
push
mov
mov
rorl
fwait
pop
stos
loop
aas
mov
mov
imul
outsl
cli
sti
mov
ss
mov
clc
push
add
imul
test
in
movsb
cmp
cmc
lea
jg
sub
add
icebp
sub
mov
int3
ja
fdivr
stos
jo
popf
mov
pushl
inc
pusha
cwtl
lahf
jg
xchg
sbb
rclb
mov
push
fmull
mov
pop
inc
cli
aaa
cld
imul
aad
outsb
add
fimuls
daa
xorb
mov
in
js
inc
jge
stos
push
mul
push
or
lea
jbe
mov
sarl
inc
jbe
lret
les
xchg
adc
ljmp
jbe
jl
int3
rcrb
pop
addb
mov
clc
mov
jo
aad
cmp
ss
lods
insb
gs
xchg
pop
inc
jno
arpl
pop
inc
call
std
lcall
imul
lcall
xchg
insl
insl
loop
dec
push
ret
orb
ljmp
test
cbtw
andl
inc
mov
mov
pop
subl
cmp
test
dec
push
xchg
jo
hlt
jp
lea
rclb
push
lods
mov
mov
pop
outsl
pop
mov
mov
push
js
jno
daa
test
add
arpl
xchg
dec
jae
mov
insb
ss
sti
movsl
test
xchg
orl
push
adcb
mov
fldcw
xchg
cli
mov
ss
int
mov
xchg
test
fldcw
inc
mov
insb
ss
int
cwtl
adc
ret
pushf
int
mov
mov
stos
mov
dec
fldcw
mov
inc
mov
and
push
shlb
popf
aas
scas
loope
mov
mov
lcall
or
pop
aad
push
dec
in
jge
add
mov
mov
filds
mov
outsl
jns
cmc
dec
push
xor
vmwrite
xchg
loopne
test
jo
xchg
xchg
lods
and
mov
ss
mov
sbb
ljmp
loop
jno
xor
add
and
pop
or
sub
cli
mov
push
jl
sbb
mov
mov
insb
jge
mov
inc
jbe
js
es
les
inc
jae
imul
or
sub
or
cmp
or
lret
adc
pop
ds
das
cmp
jp
sub
aaa
cmp
sbb
cmp
add
xor
stc
int
xor
sub
shlb
outsl
mov
insb
push
mov
ja
jb
xchg
xlat
pop
sti
jo
dec
mov
jns
xchg
js
insb
jle
lcall
dec
cwtl
arpl
lods
pop
push
inc
rcll
push
jl
mov
lock
out
mov
xchg
pusha
fs
insb
jbe
inc
outsb
scas
clc
lcall
push
jae
jle
jge
pop
pop
pusha
push
jb
pop
mov
push
push
call
push
pop
pop
bound
pop
pop
pop
pop
pop
dec
push
pop
dec
dec
push
dec
into
dec
dec
push
or
ljmp
or
adc
aaa
es
push
pop
es
or
cmp
adc
ljmp
fdivr
and
sub
xor
adc
xor
sbb
sub
jmp
cmp
xor
cmpsb
es
insb
imul
and
xor
jle
push
and
sub
pop
sub
or
or
jmp
pop
clts
cmpsb
or
sub
dec
pop
js
fs
popa
pop
dec
cmp
and
call
cmp
adc
sbb
xor
decl
adc
and
and
femms
push
sbb
adc
add
sub
pop
add
inc
js
sub
add
sub
add
push
inc
outsb
icebp
jle
call
insb
and
push
dec
pop
sub
ds
pop
push
cmpsb
insb
je
inc
insb
outsl
insb
dec
hlt
clc
xchg
es
sub
inc
push
pop
jbe
dec
jbe
fbld
subb
movsb
mov
outsb
pop
pop
cmp
fwait
mov
jns
sbb
sbb
daa
or
pop
add
sbb
out
pop
fs
pop
xchg
jp
inc
callw
cld
lcall
sbb
sub
adc
adc
ss
dec
push
gs
ja
inc
adc
jns
jle
arpl
lret
jno
push
cld
xchg
adc
movsl
jl
jl
dec
test
mov
enter
inc
mov
lods
dec
loop
test
adc
daa
fwait
xchg
int
mov
fcomps
rclb
fldenv
adc
add
cmp
or
push
outsb
jg
mov
ds
sbb
or
popa
pop
cmp
sub
ret
push
adc
sbb
inc
inc
push
add
icebp
daa
sbb
inc
cmpsb
or
and
pop
jb
insl
jmp
sbb
and
adc
push
sbb
sbb
or
sub
pop
adc
cmp
and
adc
dec
and
or
je
or
xor
adc
arpl
sub
adc
sub
push
imul
or
add
xor
call
add
inc
or
sub
or
or
or
dec
and
sbb
and
push
sbb
or
add
imul
cmp
add
pop
add
inc
popa
inc
incl
pusha
push
push
inc
inc
dec
or
aas
push
hlt
js
push
jbe
sbb
pop
das
cmp
cmp
and
push
push
or
cmp
and
lcall
sub
pop
or
xor
sub
pop
je
add
and
add
adc
sbb
decl
stos
fisubl
bound
sbb
add
cmp
cmp
and
decl
push
push
sbb
arpl
add
dec
adc
jo
aas
push
aaa
dec
push
and
lcall
inc
or
cmpsb
das
aas
dec
sbb
arpl
cmp
adc
push
sub
dec
adc
imul
or
push
sub
sbb
and
pop
push
sub
dec
adc
add
adc
adc
or
sti
sbb
arpl
cli
sbb
sbb
push
aas
pop
add
add
mov
or
aas
and
sbb
sbb
add
xor
sub
pop
daa
xor
sbb
inc
push
push
inc
push
push
pushw
lock
aam
xor
pop
or
dec
and
and
or
or
pop
movsb
cli
pop
and
aaa
inc
enter
scas
cwtl
sarb
das
js,pt
dec
decl
inc
popw
xchg
push
daa
or
dec
cmp
push
sub
push
inc
push
xor
sbb
push
or
add
push
push
bound
sub
sub
inc
cmp
insb
sub
pop
cmp
adc
sbb
sub
cmpsb
adc
cld
call
xor
aaa
aaa
adc
sub
push
cld
dec
push
sub
pop
inc
pop
pop
sbb
or
add
sbb
add
push
es
pusha
pop
imul
cmp
and
decl
push
dec
add
bound
sub
and
push
inc
add
daa
es
out
pop
jp,pt
inc
inc
inc
inc
inc
js
push
and
add
sbb
decl
dec
sbb
mov
push
inc
xor
sbb
add
jo
and
push
jge
testb
pop
jno
dec
je
outsl
jl
jp
and
outsl
and
sbb
xor
push
outsb
or
mov
call
sub
add
aaa
or
add
push
and
repnz
gs
in
decl
and
pop
inc
dec
inc
jg
pusha
sbb
insb
xor
or
pop
adc
sbb
sub
add
imul
dec
fisubs
push
pop
dec
and
inc
pop
push
es
push
cld
cmp
adc
add
xchg
pop
or
and
sbbb
sahf
sub
adc
insb
loopne
sbb
sbb
aaa
lods
clc
decl
cmp
jg
outsb
dec
xor
pop
sbb
test
addr16
mov
stos
adc
inc
add
sbb
or
adc
pop
aad
mov
inc
mov
push
outsb
jo
data16
push
add
or
scas
adc
inc
add
sbb
dec
jb
jo
gs
push
cld
incl
daa
sbb
xor
add
mov
add
fcmovbe
cmc
sub
dec
xor
cmp
jne
decl
jnp
and
jnp
arpl
pop
adc
aaa
add
insb
xor
add
daa
push
push
cmp
daa
dec
push
in
fsubs
nop
jns
pop
dec
adc
push
outsl
clc
decl
or
sbb
sbb
add
inc
adc
adc
or
or
mov
cmp
add
add
and
aas
or
sub
mov
sbb
adc
or
sbb
add
movlps
pushl
jb
pop
add
sbb
push
xor
pop
adc
or
add
cmp
push
cmp
add
cmp
and
and
rcrb
out
mov
add
sub
pop
add
sbb
dec
cmp
outsl
testb
jg
jbe
dec
push
inc
jp
inc
or
push
jo
daa
sbb
dec
add
sbb
sub
or
cli
jle
outsl
cmp
jnp
inc
push
sub
outsb
scas
pop
jo
or
adc
jle
and
sbb
cmp
pop
and
or
mov
mov
sub
aaa
push
pop
push
add
insl
adc
pop
sub
gs
sbbb
add
xor
inc
sbb
loope
pusha
sbb
jp
cmp
adc
cmpsb
push
cmp
push
adc
jge
dec
inc
dec
arpl
fcomip
ljmp
sub
add
add
xor
or
sbb
stos
ljmp
cs
ss
and
and
sub
xor
rclb
push
daa
pop
outsb
pop
lock
lods
dec
push
ret
add
add
or
push
and
std
fcomip
out
inc
sub
adc
sub
or
add
ja
add
push
xor
push
pop
in
bound
adc
or
test
inc
test
pop
arpl
xor
jg
jo
outsl
add
xor
dec
das
sub
push
ljmp
or
inc
add
dec
jb
inc
and
or
adc
fiaddl
pop
test
pop
push
data16
and
clc
jg
sbb
sub
pop
add
sbb
or
or
add
in
xor
jbe
xor
push
cmp
ficoml
push
pop
daa
aas
adc
push
cmp
pop
scas
xor
push
dec
sbb
das
add
dec
dec
je
sbb
and
cmp
jg
cmp
aas
daa
inc
add
or
getsec
or
or
adc
mov
or
and
inc
aaa
cmp
in
cli
das
jb
sbb
sub
add
or
cmp
sbb
jne
pop
adc
pop
aas
or
das
clc
aaa
inc
add
cwtl
or
pop
sub
dec
lsl
pop
ljmp
fdivp
xor
out
daa
adc
and
push
xor
adc
dec
jg
jle
or
jl
js
push
pop
and
sbb
cmp
icebp
lcall
sub
imul
add
pop
and
adc
or
or
push
arpl
mov
mov
and
sub
or
sbb
pushw
and
xchg
xor
jno
adc
xor
push
xor
pop
push
add
and
cmp
cmp
stos
mov
and
pop
dec
add
add
jo
outsl
and
sub
in
add
mov
or
cmp
push
sbb
sub
jns
pop
scas
mov
incl
cmp
ds
sbb
daa
fisubrs
imul
aaa
mov
cmp
enter
push
arpl
add
xor
addb
fisubs
xor
push
sbb
pop
addb
sub
push
das
and
adc
sbb
or
adc
dec
test
stos
push
xor
cmp
loop
sub
add
adc
sbb
mov
dec
jo
ficomps
and
sbb
or
dec
aaa
sub
sbb
imul
or
jle
push
lcall
and
inc
das
and
add
xor
and
or
push
sub
and
test
clc
ja
cmpsb
sahf
dec
sbb
add
push
dec
sub
jmp
xor
xchg
aas
push
jo
xor
icebp
pop
or
jb
add
push
shl
pop
push
sbb
sbb
dec
push
sbb
mov
ja
mov
inc
hlt
sbb
ds
adc
es
fdivrs
or
adc
fmull
push
or
insl
jle
dec
decl
cmp
xor
add
daa
or
ss
sbb
add
mov
adc
inc
addr16
cmpb
cld
push
jo
adc
sbb
pop
cmp
add
arpl
sbb
and
xor
add
sbb
mov
lret
add
hlt
and
cmp
mov
dec
pop
push
adc
and
mov
cmp
adc
daa
and
adc
push
aaa
fmuls
cmp
xor
cmp
fbld
rcrb
sub
sbb
insl
mov
stos
and
rcrb
and
adc
enter
add
lcall
jecxz
es
pop
pop
ds
sub
push
dec
sub
mov
inc
add
or
or
jo
ds
xchg
js
subb
or
out
mov
or
mov
orb
sbb
sub
dec
xchg
adc
push
lods
cli
xor
cmp
adc
cwtl
dec
jp
mov
adc
das
fistps
adc
sbb
sub
outsb
in
pop
orb
pop
xchg
cmp
into
pop
jno
outsb
dec
push
inc
dec
jp
jne
les
add
inc
jns
cmpsb
dec
jle
pop
xor
jb
pop
push
xor
sbb
cmp
icebp
dec
fidivrs
outsl
dec
dec
loope
stc
pop
fimuls
dec
push
pop
push
ss
sub
pop
pop
inc
push
push
pop
xor
imul
popa
outsb
inc
sub
xor
testb
das
dec
js
sub
inc
cmpsl
cwtl
push
outsb
pop
out
jne
cli
das
push
bound
dec
or
clc
ja
xor
add
xchg
addb
add
adc
add
cmp
or
mov
adc
arpl
adc
bound
cvttps2pi
push
sbb
inc
popf
js
add
sbb
sbb
cmp
or
xchg
ss
inc
sub
outsl
ja
ret
xor
adc
pop
or
outsl
sub
sbb
add
aam
pop
sub
out
ret
pop
call
call
push
les
add
pop
scas
lret
cmpsb
fbstp
mov
dec
lcall
insl
push
mov
fisttps
mov
repz
cmpsl
jmp
insb
jne
fcomps
call
les
pop
leave
pop
push
fcmovu
imul
faddl
std
bound
fldcw
shr
dec
fistpll
mov
ret
clc
inc
jae
ret
outsb
jns
loope
push
repz
push
jno
in
data16
push
jp
fbstp
push
lds
or
jns
push
fnsave
das
fldt
shrl
sahf
cmpsl
fstps
or
das
ss
int
insb
push
call
dec
negb
in
dec
loope
jg
lds
stc
xor
test
mov
insb
sahf
int
fmul
jmp
or
or
fwait
int
mov
xlat
pop
ret
stos
leave
repnz
mov
insb
ss
add
and
sbb
ss
int
push
push
lds
jae
mov
data16
insb
xchg
in
fdivrs
ss
int
fdivrl
iret
js
xchg
in
mov
fpatan
in
sti
repnz
sub
jo
adc
fdivl
sub
push
fwait
push
gs
push
bound
arpl
loope
sbb
inc
pop
arpl
push
inc
addr16
inc
inc
inc
imul
add
jp
inc
arpl
jp
cli
jg
inc
jno
xor
insb
inc
jae
outsl
jg
jae
addr16
insl
fs
pop
push
lods
adc
stos
pop
adc
inc
gs
pushl
mov
ret
insb
jmp
call
fs
insb
ret
popa
js
cld
mov
jns
fs
dec
jo
push
out
push
jp
jmp
ja
stc
je
jb
dec
jb
push
jo
jne
cmp
lock
push
pop
outsl
jnp
inc
bound
or
gs
outsb
cmp
xchg
dec
je
jae
inc
push
or
fcomip
in
out
jmp
ja
inc
popa
imul
push
add
push
jnp
sub
mov
es
pop
pop
and
jbe
dec
cmp
jno
fs
adc
sbb
test
js
js
insl
int3
scas
push
xorb
gs
jbe
out
push
inc
data16
shl
imul
jp
dec
push
outsb
insb
dec
lds
push
scas
cmpsb
push
and
ja
adc
popa
pop
jnp
shlb
dec
divl
dec
cmc
outsb
lock
cld
dec
ret
jae
je
outsl
mov
push
decb
push
jg
pushl
push
shll
inc
out
inc
mull
jne
jb
inc
inc
js
pop
jo
call
dec
insb
fs
jbe
inc
bound
bound
pop
jo
mov
loopne
push
insl
push
inc
outsb
mov
aas
jecxz
leave
imul
fs
jbe
pop
inc
insl
insl
push
jno
imul
fcomip
insl
inc
push
gs
jp
outsb
dec
imul
jmp
push
or
jae
insb
imul
pop
dec
push
leave
jmp
outsb
push
dec
pop
dec
addr16
ljmp
push
push
std
and
fs
jb
js
imul
inc
mov
jg
dec
pop
js
sbb
ja
dec
mov
rolb
dec
dec
push
jo
cld
mov
mov
jns
fimull
jb
push
jo
jne
xor
aaa
stos
dec
inc
jb
jne
outsb
jnp
add
push
inc
jno
ret
sub
jno
outsb
bound
push
inc
inc
insb
inc
je
pop
shrb
pushl
inc
inc
js
pop
jae
decw
push
jbe
inc
popa
push
bound
pop
ss
jo
loopne
push
or
inc
outsb
popa
shrb
insb
jbe
dec
push
mov
jno
inc
addr16
incl
hlt
clc
shl
jmp
ret
repz
jmp
cmc
repnz
out
loope
aad
jmp
call
rcl
cmc
lret
rcl
ret
in
vpsubw
fcmovnb
cli
shl
enter
push
leave
out
mov
mov
mov
addl
mov
std
ljmp
and
cltd
cmpsb
cmpl
mov
lcall
es
nop
sahf
lahf
lods
mov
mov
ss
mov
jg
data16
inc
pop
jno
pop
jnp
pop
push
jno
jl
incl
pop
jl
fmull
imul
dec
inc
inc
inc
outsb
call
jnp
inc
pop
jns
dec
jb
fs
decl
sbb
or
and
pop
sbb
ds
xor
or
and
xor
add
es
es
cmp
add
ss
add
add
ds
add
and
sbb
ret
out
lret
jmp
fdivr
ror
out
out
in
cli
sti
enter
ljmp
add
loope
lret
out
fcomi
iret
repz
ror
lret
ljmp
loopne
int
in
std
icebp
aad
rcl
sar
sti
rcl
lods
mov
jmp
lods
stos
mov
popf
mov
mov
mov
mov
orb
or
xchg
lods
lods
fwait
popf
or
mov
mov
xchg
cwtl
jg
pushl
ret
xlat
jmp
lret
out
loop
clc
in
lret
loopne
rcl
out
sti
inc
jmp
sti
fdivrp
test
iret
lock
out
ret
mov
in
rol
fcmovu
int
out
call
lret
shr
fstp
mov
scas
scas
mov
mov
mov
mov
mov
lahf
add
sbb
mov
mov
xchg
xchg
cmpsl
enter
mov
xchg
mov
test
xchg
sahf
xchg
xchg
fbstp
ja
adc
jle
inc
dec
jl
gs
jl
fbstp
decb
insl
outsb
dec
dec
inc
hlt
pushl
or
outsb
pop
dec
jbe
popa
pop
jg
jne
loope
lcall
inc
push
pop
jp
push
push
jae
pop
adc
sbb
daa
cs
and
adc
cs
mov
aas
add
adc
aaa
or
sub
xor
adc
or
and
add
fisttps
ljmp
xor
cmp
xor
adc
cli
or
xlat
in
idiv
dec
icebp
in
jecxz
clc
vpmulhw
loope
std
in
cli
icebp
loop
repnz
aad
rcl
leave
jmp
dec
shr
shl
in
fsub
fincstp
ror
sar
idiv
in
leave
pop
jg
fdivp
pause
mov
subb
test
mov
mov
mov
fistpl
mov
addb
loop
xchg
mov
andl
xchg
xchg
xchg
xchg
mov
jno
push
jbe
adc
mov
imul
add
pop
dec
dec
adc
ds
push
adc
arpl
dec
adc
or
imul
sbb
add
cmp
add
sub
push
adc
or
and
add
push
adc
sub
std
dec
out
mov
xor
push
sub
dec
jae
xor
add
sub
vmovntps
pmaxsw
or
and
ljmp
push
and
cmp
aaa
xor
add
push
jmp
xor
push
sbb
arpl
sbb
imul
adc
insb
or
ss
cmp
jbe
sub
lock
push
cmp
xchg
cli
movups
or
adc
je
sub
xor
cmp
cmp
mov
adcb
add
outsb
jp
pop
or
and
arpl
outsb
pop
cs
jns
sub
ljmp
push
cmp
das
sbb
add
pop
arpl
or
push
add
sub
cmp
adc
adc
add
aaa
adc
or
sub
dec
add
xor
jmp
cmp
push
sbb
or
data16
adc
mov
pop
daa
cmp
xor
cmp
or
or
sub
incb
insl
pusha
or
xchg
or
xor
and
or
pushl
or
sub
xor
outsb
sbb
pop
aas
repz
pushl
and
pop
ss
adc
and
imul
push
xor
arpl
sbb
jmp
out
or
add
adc
or
mov
cs
or
and
or
add
cmp
aaa
call
inc
or
das
and
or
sbb
shll
insb
push
or
push
es
aaa
movntps
movd
adc
sbb
and
cmpsb
and
cmp
sbb
sub
aaa
int3
mov
sbb
and
pop
mov
cli
sbb
aaa
adc
cmp
xor
add
add
ud2
xchg
adc
or
adc
cmp
incl
xor
gs
enter
jg
adc
sbb
and
cmp
or
jmp
xor
pop
sub
cmp
out
es
rsqrtps
pop
sbb
dec
cmp
adcb
sbb
adc
mov
pop
ret
push
adc
adc
das
mov
sbb
add
jbe
fsubs
mov
scas
es
jbe
sub
xchg
xor
push
push
cmp
clc
cmp
and
cs
cmp
or
pop
sbb
xor
icebp
adc
or
or
add
push
subb
aas
sub
or
adc
push
pop
icebp
imul
add
adc
int3
icebp
inc
pushl
pop
cmp
push
sbb
pop
sbb
add
sbb
aas
add
sub
inc
aaa
sub
sub
sbb
icebp
daa
stc
dec
adc
add
and
dec
cs
es
or
sbb
sub
scas
push
dec
or
or
and
add
sbb
add
jge
sti
divb
add
add
cmp
sub
push
sbb
mov
add
pop
pop
dec
cmc
pop
mov
or
sbb
stc
outsl
dec
pop
add
cmp
adc
and
scas
jg
jo
daa
roll
sbb
out
adc
out
js
sbb
add
push
add
add
lock
incl
sub
push
push
add
adc
jbe
das
pop
or
sbb
and
aaa
adc
push
sbb
xorb
and
les
int3
and
fbld
pop
adc
pop
sbb
push
js
push
or
and
and
add
insb
push
adc
sub
sbb
adc
pop
add
ret
decl
ficoms
push
pop
sbb
es
or
and
or
cmp
push
or
das
pop
xor
dec
or
jae
sub
rorl
outsl
adc
or
clc
scas
xor
push
add
enter
add
inc
or
ljmp
dec
sub
sbb
sub
and
push
decl
push
sbb
and
outsl
push
or
es
push
das
dec
dec
xchg
pop
cmpsl
lods
adc
es
pop
push
pop
jl
ja
pop
add
sbb
add
and
mov
or
sub
hlt
mov
add
sub
movhps
or
cmp
add
icebp
mov
push
add
xor
sbb
sbb
push
cmpsb
das
push
arpl
je
and
xor
outsl
push
sub
and
add
dec
sub
sub
jg
add
push
adc
sub
outsb
call
mov
mov
xor
cmpsb
outsb
orb
and
sbb
or
or
jmp
lods
cmp
adc
dec
add
mov
das
push
arpl
adc
or
insb
jg
add
add
xor
and
cmpsb
dec
aaa
jge
sub
add
adc
push
adc
push
push
loope
mov
sub
out
add
dec
shlb
jg
movsb
orl
testl
cmpsb
aad
jg
ljmp
es
pop
ss
dec
vpcmpeqw
add
jae
lret
pop
jg
es
pop
cld
and
bound
cmp
dec
pop
or
and
jae
mov
clc
inc
imul
cld
gs
push
ds
pop
push
test
jmp
aad
push
and
cmp
inc
ficoml
push
aas
pop
outsl
dec
in
bound
cmp
insl
insb
cli
dec
inc
and
or
call
sub
pop
sub
push
movl
test
dec
push
jp
insb
lcall
mov
add
pop
cmp
into
jo
sub
jp
jns
sub
dec
dec
cmp
and
fcomip
push
inc
arpl
push
outsl
push
arpl
push
sub
jno
sub
insl
push
aaa
cld
stos
sub
arpl
lret
or
jns
out
jbe
jg
imul
or
aad
jae
das
sbb
iret
imul
into
inc
jg
call
pop
das
gs
lret
insl
jge
pop
push
lods
fisttpl
add
data16
fsubs
cmp
ret
push
shrl
and
sbb
fldcw
or
xor
and
daa
jo
cmc
cld
repz
outsl
or
push
xor
cmp
je
iret
daa
sub
sar
out
fistpll
leave
cmp
and
push
xchg
fistpll
fists
sti
pop
daa
or
sti
or
cmpsl
mov
sbb
cmp
arpl
daa
and
stc
out
adc
out
and
xor
daa
lock
lds
cmp
cmp
ljmpw
sbb
jbe
lock
push
lret
cmp
rcll
fldcw
or
dec
xchg
repz
xchg
mov
mov
dec
mov
sub
out
or
or
loop
sbb
imul
repz
shrb
lret
adc
int3
enter
gs
mov
cmp
push
push
in
fnstsw
fidivs
xor
out
xor
das
push
pop
js
fists
add
popa
adc
aas
sbb
outsl
jle
and
repz
aaa
push
sub
sub
sub
sub
stc
xor
push
adc
cs
aaa
mov
xor
push
imul
xor
inc
lcall
daa
push
jae
cld
or
imul
pop
pop
popa
pop
ja
pusha
lods
jp
adc
dec
push
cs
adc
adc
js
adc
push
sbb
mov
stc
ret
in
out
imul
in
push
push
bound
paddw
ljmp
shr
mov
fdivr
jno
outsb
inc
dec
inc
xor
clc
je
jb
jp
lock
lock
and
ret
push
enter
negb
sbb
mov
or
lcall
and
adc
pop
jb
dec
outsb
dec
jbe
out
or
aad
outsl
adc
xor
cld
add
pop
and
add
sub
sbb
sbb
xor
cmp
or
and
add
pop
add
xor
dec
sub
aas
aaa
daa
xor
inc
jg
xor
imul
sbb
add
das
adc
push
jle
sbb
adc
cmp
dec
xor
cmp
sub
push
xor
ds
dec
and
push
scas
out
add
sbb
sbb
sub
add
sub
clc
pop
cwtl
push
adc
add
sub
movaps
add
cli
mov
xor
xor
sub
cs
pop
icebp
ljmp
and
sub
jle,pt
inc
mov
jl
mov
es
dec
jle
cmp
pusha
fimuls
push
xchg
lods
bound
cmp
outsb
jns
test
daa
push
or
add
std
fildll
cld
dec
add
daa
outsl
push
test
add
sbb
add
sbb
ja
sbb
sbb
insb
jle
mov
arpl
push
sbb
or
incb
push
xor
or
outsb
sub
xor
mov
add
insl
xor
xor
inc
push
sbb
es
adc
xorb
ljmp
outsl
sbb
testb
inc
xor
xor
cmovle
jp,pn
idiv
outsb
cmp
adc
adc
or
push
jbe
pop
adc
int3
or
orb
and
push
cld
adc
add
imul
adc
inc
cmp
push
sub
cmp
decl
and
inc
push
and
add
sbb
aas
mov
inc
adc
sbb
jb
outsl
js
stos
fdivs
inc
sahf
push
das
add
cld
jne
adc
and
sbb
inc
xor
js
out
sub
sub
push
icebp
mov
add
dec
and
adc
mov
adc
add
add
cmp
cmp
sbb
inc
add
sbb
daa
push
pop
add
and
or
aas
add
cmp
adc
cmp
stc
dec
popa
sbb
cmp
sub
or
push
adc
jmp
and
add
sub
inc
xor
cs
mov
push
and
add
sbb
sbb
mov
fidivrs
das
in
loopne
je
adc
adc
push
sub
cmp
sub
andl
mov
or
push
je
cmp
cmpsb
outsb
jle
mov
inc
or
push
mov
jg
stos
push
push
dec
arpl
imul
fs
imul
push
lcall
ret
dec
bound
dec
pop
push
mov
inc
ficoms
inc
jg
ja
jne
pushl
mov
sub
inc
inc
dec
js
andl
inc
inc
jae
sub
jmp
pop
imul
and
xchg
jno
outsl
js
int3
imul
mov
jno
push
sub
bound
fs
push
dec
pop
arpl
lds
xchg
inc
arpl
fwait
add
push
jae
enter
mov
insb
ss
popa
iret
push
xchg
dec
mov
ss
int
pop
pop
je
add
jl
addr16
insb
jp
push
sbb
data16
jle
push
inc
jbe
aas
xchg
and
fnstenv
in
adc
xchg
sbb
add
data16
cld
add
add
fisubs
push
icebp
outsl
ss
and
cmp
xor
mov
fstp
in
dec
mov
dec
and
sub
mov
mov
mov
mov
hlt
push
jb
add
xchg
push
fcomip
out
popl
ret
popf
mov
lcall
mov
mov
sbb
and
and
push
clc
aas
sbb
xor
xor
insl
sbb
mov
mov
push
ja
cs
xor
xor
lcall
and
sub
pop
mov
jns
or
clc
stos
subl
xor
mov
add
repz
push
push
clc
stos
dec
inc
insl
adc
xor
add
cmp
das
add
incl
or
cmp
prefetcht2
adc
xor
or
and
call
dec
jp
mov
ja
pop
frstor
xchg
pop
js
lods
mov
lock
je
pop
xchg
mov
mov
push
insl
mov
test
cmpsb
in
aad
pushl
imul
outsb
pusha
mov
xchg
aaa
iret
dec
mov
test
clc
or
lcall
jns
cs
sbb
mov
outsl
push
pushf
mov
pop
push
out
popa
add
shrl
daa
mov
push
aaa
add
imul
xor
fildl
clc
add
aas
cmpsb
cmp
bound
xchg
incl
shll
xchg
push
mov
cld
shll
addl
or
mov
ret
insb
dec
mov
ds
outsb
pop
sbb
inc
in
in
inc
xchg
fs
mov
sarl
nop
pop
enter
mov
push
push
fldcw
cmpsb
mov
sub
push
xor
mov
cld
orl
push
push
mov
inc
arpl
add
movsb
pop
divb
test
push
pushf
loope
clc
rcll
xchg
jo
aaa
pop
js
mov
mov
xchg
int
add
in
mov
cltd
nop
push
push
ss
cmpl
mov
fs
mov
xor
lret
mov
data16
test
popa
jne
push
xor
sahf
aaa
adc
cmp
mov
push
push
gs
xchg
sub
cmpsl
repnz
dec
xchg
push
incb
bnd
jno
sahf
jbe
arpl
mov
or
stc
mov
imul
jae
movsl
outsl
xchg
dec
cld
mov
xchg
int3
mov
or
sbb
add
adc
outsl
pop
into
mov
mov
dec
jp
mov
mov
mov
repnz
dec
inc
arpl
xor
cmpsb
lods
xlat
lock
stc
cwtl
mov
jae
inc
mov
xchg
int
pop
cmpsl
pop
mov
lahf
xchg
xchg
adc
sahf
pop
xchg
iret
and
adc
xchg
mov
jg
cmp
cmp
inc
imul
mov
decb
or
mov
cmp
adc
movsl
arpl
push
sarb
test
sub
fidivrs
ret
cmpsl
inc
add
pop
test
dec
mulb
mov
outsl
mov
inc
or
cltd
cmp
stos
outsl
aaa
cmc
mov
aaa
inc
data16
subb
add
imul
mov
cwtl
decb
inc
jg
pushf
push
data16
inc
dec
inc
arpl
xchg
and
pop
xor
xchg
dec
dec
imul
dec
jp
sarb
fwait
mov
stc
out
mov
lea
xchg
jmp
pusha
sbb
mov
and
das
xchg
mov
in
pusha
shrb
ss
fs
ss
mov
lods
out
mov
rcrb
pushf
testl
aas
mov
pop
shlb
xor
outsl
mov
imul
insb
outsb
fbstp
adc
sar
and
dec
push
stc
jo
in
gs
je
clc
dec
dec
sub
cmp
push
dec
jl
inc
jae
lcall
adc
and
out
bound
sti
jno
decl
dec
dec
js
insl
inc
into
lret
data16
dec
jae
lret
or
out
adc
jo
imul
cmc
pop
arpl
incb
push
insb
sub
lcall
xlat
frstor
lahf
stc
insl
insl
fs
push
pop
testb
faddl
ret
push
jmp
fwait
int
std
ss
cmc
cld
iret
fadds
fildll
and
mov
es
out
xchg
xchg
jo
mov
mov
xor
aas
insl
sub
inc
pushf
cmpsl
mov
dec
dec
dec
mov
das
cmpsl
mov
jge
lahf
popl
sahf
insb
push
sbb
dec
push
leave
out
out
mov
and
pop
mov
inc
adc
add
push
mov
popf
mov
test
dec
pop
cs
xchg
push
imull
pushf
pop
pop
xchg
xchg
adcb
loope
xchg
push
push
pop
mov
lods
cmpsl
xchg
rolb
js
push
jl
lock
jns
cmc
lret
sbb
outsl
mov
daa
sub
outsl
push
jmp
pop
popa
clc
adc
js
pop
jg
lcall
mov
aaa
xchg
jecxz
pushf
push
fisubrs
mov
lcall
xor
cmpb
test
or
xlat
incl
mov
jno
pop
les
movsb
ret
or
mov
mov
push
pop
in
arpl
sbb
mov
gs
stc
aas
dec
jecxz
jbe
stc
fs
fld1
aad
mov
stc
ja
pop
outsl
xor
inc
jg
jmp
outsb
push
cltd
mov
addl
mov
test
xchg
ds
leave
xchg
test
filds
shll
inc
push
in
ja
movsb
test
xchg
add
cmpsl
jbe
js
pop
jg
xchg
xchg
lock
cmp
mov
dec
inc
test
cmp
outsl
lea
shl
jle
fisttps
loope
lahf
xchg
fistpll
pop
lahf
js
inc
imul
fistps
loope
pusha
outsl
cmpsl
fildll
push
daa
ja
enter
fisttps
test
jecxz
push
insl
jmp
pop
add
mov
and
adc
adc
mov
mov
mov
cmpsb
popf
add
scas
lock
in
xlat
add
bound
jae
je
jecxz
fimuls
into
jge
dec
js
or
out
xlat
call
sbb
dec
insb
pop
mov
push
iret
jnp
mov
sbb
data16
ljmp
push
dec
sub
push
lock
mov
scas
outsb
mov
adc
mov
mov
je
push
stc
rorl
xchg
pop
sub
arpl
xchg
out
addr16
xchg
cmp
jns
cmp
imul
int3
jo
incl
mov
arpl
mov
jo
pop
ja
pop
ss
add
leave
sbb
push
xchg
cmp
dec
lret
sti
dec
and
cmp
arpl
cmpsl
jo
jno
iret
xor
shrl
ss
pop
push
fisubs
pop
arpl
sub
fwait
push
cmp
fisttps
add
or
jo
dec
mov
xchg
ljmp
sbb
sbb
pop
jg
aaa
nop
jle
or
mov
dec
arpl
mov
ret
daa
int3
adc
mov
outsb
lds
jmp
inc
jg
gs
rcrl
mov
inc
jae
mov
fwait
je
jbe
pop
js
cmpsl
mov
aaa
bound
sbb
arpl
cmovle
test
jns
pop
push
and
nop
mulb
arpl
pusha
xor
scas
xchg
pop
and
dec
imul
insb
jge
add
popf
pop
inc
mov
adc
xlat
pop
icebp
push
xchg
inc
push
push
xchg
push
inc
push
pop
imul
pop
dec
mov
mov
inc
fisttps
mov
xchg
daa
cmpsl
cs
pop
push
cmpsb
dec
add
jno
pop
bound
mov
out
aaa
inc
je
jno
cmpsb
shrb
inc
scas
push
fimuls
jl
outsb
jns
dec
fisubl
scas
mov
lcall
aaa
repz
inc
arpl
loop
cli
repnz
jmp
insb
push
stc
clc
xchg
sahf
xchg
jg
inc
test
bound
iret
dec
out
popf
outsb
push
or
inc
jae
imul
aaa
fcomip
jns
outsl
push
popf
dec
stc
outsb
push
jno
push
jo
dec
popf
push
dec
aam
push
push
sub
fwait
pop
or
cmpsb
insl
inc
aam
bound
lcall
xchg
pusha
outsl
roll
lret
scas
pusha
jno
aaa
pop
jno
insb
out
insl
inc
test
push
push
mov
jns
andb
push
test
fisubrs
pop
outsb
or
push
cs
cmpsl
pop
adc
test
adc
dec
cli
mov
push
imul
jns
mov
xor
aaa
cmp
outsb
aad
pusha
testb
popa
scas
clc
mov
jmp
jbe
or
testl
mov
xchg
stos
inc
mov
add
popa
test
jb
repnz
dec
and
fldcw
out
test
loope
fildll
jmp
fs
hlt
js
rclb
push
cwtl
xchg
daa
jb
and
test
scas
mov
imul
mov
lahf
pop
addr16
pop
jmp
or
lahf
outsb
sbb
dec
and
jb
nop
call
cltd
loope
in
fdivr
outsl
push
stos
fwait
popf
push
out
lcall
das
out
xlat
ja
mov
inc
lds
leave
out
cs
dec
test
nop
std
aaa
lcall
xlat
ss
lret
dec
sub
icebp
arpl
jno
inc
idivb
pop
outsl
fists
outsl
xorb
mov
add
in
lods
pop
test
cld
dec
xor
mov
in
xchg
ret
aaa
sub
adc
jmp
pop
xchg
int
dec
gs
outsb
repnz
nop
std
test
xchg
lods
mov
push
jl
jp
lds
enter
nop
movl
ss
sbb
fisubrs
lret
dec
mov
bound
pop
push
idivl
dec
cs
pop
adc
jp
or
outsb
push
repz
loope
outsb
mov
ja
mov
addr16
pop
cld
xchg
outsl
inc
in
mov
das
outsl
xchg
out
push
movsb
dec
dec
popa
sbbl
scas
test
push
add
cmp
hlt
fildll
mov
jbe
pop
scas
xlat
insb
fidivs
sub
jle
test
orl
icebp
fs
out
xchg
sbb
jg
iret
ficompl
call
ds
outsb
jno
fidivrs
and
into
push
loop
inc
push
lcall
fs
out
push
inc
jae
mov
add
decb
push
mov
add
dec
arpl
into
pop
lret
jo
imul
insb
jne
sbb
nop
es
arpl
out
ds
pop
popa
inc
shl
jg
in
mov
push
ds
hlt
clc
popa
ss
xchg
jl
sbb
push
mov
cmp
push
enter
mov
add
dec
xchg
stc
ss
pop
loopne
das
mov
inc
and
dec
push
icebp
test
fbstp
negl
outsb
imul
fwait
xchg
sub
call
xor
or
mov
and
dec
addr16
lea
sahf
lock
orb
xchg
insl
inc
jl
add
nop
mov
sub
sti
cmpsl
insb
gs
jg
cmpsb
imul
mov
inc
outsl
imul
outsl
xchg
pop
mov
inc
pushw
andb
pushf
dec
shrl
xor
clc
outsl
or
mov
subb
mov
push
dec
mov
xchg
push
and
ret
jae
push
enter
pop
ficoms
mov
cmpsb
xchg
pop
mov
xor
test
ret
xchg
fwait
int
mov
cmpb
jle
mov
insb
ss
inc
movsb
push
lea
xchg
ss
int
sub
mov
mov
fldcw
cmpsb
mov
insb
ss
int
xorl
mov
sub
bound
add
jnp
sahf
cmpsl
cmp
call
test
xlat
push
dec
cmp
sbb
xor
add
xor
fwait
ds
sub
and
add
wbinvd
decl
adc
or
sub
sub
stos
xor
daa
lcall
xor
sub
xor
cmp
js
or
add
sbb
sub
mov
push
sub
pop
sub
sbb
scas
clc
cmp
sbb
sub
sbb
dec
das
nop
ss
sub
or
or
push
adc
pushl
push
cmp
or
cmp
das
or
sub
and
xor
or
or
ja
mov
cmp
arpl
pop
sub
fimuls
xor
sbb
or
jo
outsl
sub
sbb
and
xor
jno
imul
dec
ljmp
and
and
pop
add
enter
sbb
add
fiadds
ss
sub
push
and
and
out
pop
adc
pushl
adc
sub
xor
sub
dec
add
sbb
and
and
push
xor
adc
aaa
xor
or
aaa
ud2
aaa
add
xchg
mov
adc
adc
add
push
push
aas
daa
daa
or
or
test
aaa
test
sbb
adc
je
xor
sub
mov
and
aaa
or
push
js
push
xor
call
std
sbb
push
sub
or
sbb
daa
xor
add
sub
outsl
cli
decl
ss
aas
add
sub
push
adc
add
cmp
adc
dec
xor
es
or
sbb
xor
xor
xor
and
in
pop
ss
es
add
or
sbb
cmp
push
pop
mov
cli
sub
or
add
or
outsl
mov
sub
add
add
sub
xor
sbb
repnz
push
push
ret
cmovle
xchg
es
adc
sti
lcall
or
push
sbb
pop
cmp
sbb
das
inc
jg
and
or
and
add
orl
sbb
or
sub
bound
xor
sbb
mov
push
sub
jae
incl
test
or
int3
loop
pop
jno
insb
sub
lods
clc
sub
cmpsb
push
popa
aam
adc
push
dec
rorb
adc
push
pop
and
scas
pusha
adc
sub
add
push
fwait
jg
push
push
xchg
add
adc
cmp
aaa
push
dec
outsb
loope
mov
test
je
mov
sbb
cmp
push
push
or
jo
cmpsb
out
push
incl
insb
call
add
push
popa
or
and
sbb
inc
pop
fdivr
es
adc
sbb
jo
outsb
lods
loop
sbb
push
adc
adc
adc
out
push
and
sub
sbb
push
and
sbb
push
mov
add
adc
pusha
push
sub
add
cmp
adc
sub
and
movlhps
pop
push
sbb
add
fcoms
or
and
and
int3
and
dec
or
sbb
push
icebp
dec
adc
adc
cmp
aaa
jne
pop
xor
arpl
sub
or
or
clc
jg
or
xor
arpl
pusha
cmp
aas
xor
and
xor
cmp
fiadds
push
lock
sub
or
sub
insb
cs
aam
and
rcrb
fildll
xor
and
cmp
pop
and
lcall
jo
sar
sub
or
enter
pop
and
outsb
push
iret
je
ljmp
pop
push
out
cmp
or
inc
and
and
add
sub
jns
pop
ss
sub
gs
ljmp
and
push
dec
inc
and
sub
cmp
sahf
insl
and
or
and
cs
idiv
mov
push
dec
and
xor
clts
cmp
add
or
add
mov
sbb
or
push
jo
cmp
mov
cmp
pusha
and
sbb
push
adc
dec
xor
adc
and
cmpsb
gs
pop
push
add
js
les
cmc
fwait
adc
xchg
add
cmp
sub
pop
mov
cmp
or
inc
and
push
xor
jo
test
push
insb
divb
jge
ja
jo
or
insb
insl
stos
inc
sbb
and
sbb
xor
push
sbb
bound
dec
sbb
outsb
push
add
xchg
jmp
xor
or
push
sbb
cmpsb
sub
shrl
adc
sarl
das
pop
xor
jb
sub
sbb
icebp
fcomip
inc
stos
add
and
addb
push
and
add
xor
sub
and
lods
jno
adc
add
xchg
add
popw
fbstp
pop
inc
mov
ss
ljmp
aad
sar
add
cmc
insb
adc
lock
sbb
adc
pop
sub
push
push
aaa
sub
lret
push
xor
cmp
sbb
sbb
sub
xor
dec
aas
adc
add
cld
add
add
sbb
push
sahf
or
xor
and
cmp
cmp
sbb
dec
add
or
and
sbb
mov
outsb
and
ret
inc
cmp
ss
sbb
roll
aaa
add
jg
mov
mov
outsb
into
jbe
xor
inc
cltd
movsl
ss
bound
mov
dec
xchg
cmp
sub
dec
ljmp
xor
pop
adcl
mov
test
out
stos
repnz
test
pop
into
mov
mov
push
cld
jle
sub
and
pop
pop
jns
out
jmp
outsl
jne
jno
pushl
std
pop
push
jecxz
pusha
jae
pop
push
loop
push
stc
arpl
shlb
jg
push
popa
jne
sbb
outsb
jge
cmp
pop
inc
outsb
fisubs
inc
movsb
mov
out
clc
ret
sub
outsb
jbe
jns
out
insb
data16
jl
jns
out
inc
jge
dec
sahf
out
sahf
arpl
push
dec
push
outsl
addr16
outsb
jl
jns
out
jnp
bound
out
sahf
data16
jae
jb
and
outsb
xor
xor
dec
cmp
cmp
jns
outsb
adc
out
sahf
out
add
inc
sahf
out
sahf
cmp
imul
sti
pop
in
out
sahf
out
lock
loop
sahf
out
sahf
ljmp
sahf
out
lret
jns
jg
sarl
insb
movsb
jp
dec
inc
and
sub
jbe
dec
push
movl
fbld
daa
daa
pop
outsb
jne
daa
daa
pop
jb
insl
pop
arpl
jns
add
sbb
addb
dec
jbe
mov
sbbl
add
popfw
nop
add
inc
cltd
push
pop
popf
push
lods
pop
femms
pop
inc
mov
je
pop
or
aaa
push
adcl
aas
shrl
std
dec
inc
and
pop
stos
mov
inc
jae
lcall
cmc
data16
jmp
pusha
mov
jmp
out
pusha
fistpll
out
pusha
outsb
pusha
adc
int
jg
jp
pop
push
push
int3
push
jl
xlat
sti
jge
adc
in
ss
xchg
jg
jl
ss
mov
push
cmpsb
int3
out
push
aas
xor
data16
push
in
pusha
insl
dec
fdivs
je
iret
aas
mov
xlat
shrl
insl
add
push
pop
xor
jg
iret
arpl
dec
ss
aam
aas
cld
lds
cmpsb
xchg
rorl
insl
dec
cld
jo
pop
jg
insb
cld
repz
jne
addr16
arpl
xchg
aad
js
mov
insb
sbb
xchg
shrb
mull
aaa
fistpll
ret
mov
push
sahf
in
int
fsubrs
movsb
divb
mov
dec
jp
lret
aaa
mov
ret
enter
into
std
aam
pop
lock
into
pop
jg
sarb
mov
lret
and
das
pop
fs
xor
ss
inc
imul
jecxz
stc
gs
hlt
adc
pop
push
jecxz
push
rcrb
out
push
lret
push
fists
dec
leave
jnp
bound
int3
mov
mov
insb
ss
filds
shl
data16
aad
dec
fidivs
mov
insl
sahf
pop
pop
rcll
inc
jae
addr16
fs
pop
cmpsb
jbe
js
or
push
jbe
jne
das
dec
dec
dec
outsb
clc
fcomip
enter
jbe
inc
sbb
dec
insb
dec
push
push
push
sub
adc
or
decl
sub
aaa
sbb
or
cmp
xor
adc
or
jg
mov
pop
pop
and
sub
and
pop
or
sub
lds
nop
cld
add
xor
js
pop
cld
fs
pop
jp
aas
daa
icebp
incl
jp
push
js
fs
pop
pop
push
insl
pop
push
cli
push
imul
inc
inc
jb
push
mov
xor
adc
daa
or
aaa
add
push
sbb
arpl
jmp
pop
cmp
addr16
ljmp
cmp
sub
and
sub
sub
adc
fs
outsl
mov
outsb
adc
add
dec
scas
sub
bnd
mov
ss
shrb
pop
enter
mov
cmpsl
inc
mov
push
inc
incl
mov
icebp
outsl
outsl
imul
stc
mov
scas
hlt
cmp
xchg
cs
mov
stc
mov
xchg
sbb
adc
cld
out
xchg
scas
mov
movb
dec
repnz
push
ljmp
rorb
push
jne
pop
adc
test
add
push
jl
pop
inc
jg
jg
jne
pop
clc
lcall
push
js
popa
inc
jbe
dec
bound
push
inc
jae
inc
pusha
adc
push
pop
pop
xchg
xchg
fadds
xchg
cltd
mov
in
jp
lret
aaa
pop
xchg
jl
xor
ss
data16
xchg
shrb
into
outsb
dec
enter
jae
repz
inc
pop
jno
imul
cmp
and
mov
inc
push
push
in
jbe
mov
mov
pshufw
push
push
repz
shrl
add
movl
dec
ds
loopne
mov
mov
cmp
cld
loop
dec
pop
aad
push
ja
and
pop
enter
adc
or
xor
adc
or
es
mov
ret
addl
clc
inc
inc
jno
out
ljmp
cmp
cmp
adc
add
or
cmp
outsl
pop
dec
sub
xor
add
sub
push
insb
adc
push
pop
push
xor
mov
sub
sub
adc
sbb
mov
ljmp
add
and
adc
sbb
loop
pop
decl
or
add
or
and
cmp
dec
push
jne
jg
call
pusha
jb
inc
je
sbb
cmp
cmp
sub
sbb
aaa
add
add
adc
add
aas
add
add
pop
dec
dec
es
dec
push
sub
inc
ss
incl
and
dec
add
xor
sub
mov
in
mov
mov
add
or
sub
sub
adc
mov
icebp
adc
movsb
rcrl
clc
push
cmp
push
push
xor
sbb
add
lods
mov
push
cmp
push
pop
jo
pop
aaa
xor
std
jg
fisubs
or
outsl
push
movntps
xor
es
cmp
add
adc
adc
add
sbb
push
add
push
xchg
lret
adc
cmp
ljmp
sbb
and
or
sub
xor
ds
cmpsb
outsl
mov
or
adc
sbb
jmp
popa
jmp
pop
ja
aas
cmp
or
notrack
or
or
iret
addr16
sbb
sbb
add
ss
cmp
das
adc
sub
xor
out
js
das
pop
jge
pop
adc
pop
fbstp
ss
sbb
add
xor
outsb
add
sub
push
pop
push
or
sbb
cld
adc
sbb
daa
and
xor
jne
add
daa
pop
sahf
aaa
or
cmp
xchg
sub
add
xor
das
sub
mov
dec
daa
inc
jae
subb
ffree
sbb
or
add
xor
pop
sti
lcall
or
adc
cmp
sub
pop
cmp
or
xor
sbb
cmp
stos
das
call
xor
adc
xor
incl
push
fildll
cmp
adc
add
jg
decl
call
xor
and
xor
call
xor
pop
cwtl
or
cmp
mov
mov
inc
jno
cs
inc
or
js
shrl
adc
inc
addr16
adc
pop
xchg
loopne
mov
adc
sbb
xor
ret
sub
or
jae
aad
mov
jg
insb
pop
and
das
adc
sbb
dec
inc
inc
cs
inc
lds
xor
and
add
add
sbb
popf
movl
jl
cmp
push
xor
sbb
sub
cmp
icebp
jg
lretw
cmp
add
push
and
mov
ds
xor
cmpsl
pop
adc
pushl
xor
or
or
or
lods
rorl
incb
je
sub
adc
push
sub
sahf
das
push
lcall
add
and
adc
xor
adc
aaa
add
pmulhuw
cmp
cs
inc
rorl
cmp
xchg
rcrb
outsb
mov
test
xchg
leave
ss
pop
mov
das
imul
pop
jns
push
notl
out
dec
inc
jle
xchg
das
and
inc
adc
jno
jmp
in
pop
cmp
hlt
popa
ss
dec
lock
jg
fisttpl
mov
incl
inc
fsub
mov
sub
lahf
jb
add
loopne
xor
cmpsl
shrl
add
cmc
pop
cld
into
cmp
movsb
shrb
mov
int
jmp
and
stc
repnz
hlt
add
push
lods
fwait
mov
shll
mov
mov
rolb
dec
in
ljmp
pop
imul
test
ret
mov
sub
fbstp
loope
out
loope
dec
dec
inc
xchg
rclb
arpl
jl
pop
jmp
add
jg
push
dec
js
cli
stos
and
mov
ja
sti
icebp
or
inc
mov
cmc
pop
add
mov
push
mov
ja
mov
ss
in
or
mov
pusha
xor
scas
jg
outsl
mov
popf
decl
add
pop
push
dec
mov
ja
mov
inc
mov
sub
js
sbb
cli
mov
test
adc
mov
push
xchg
pop
inc
in
call
fisubrl
out
stc
add
je
pop
in
addb
les
adc
sahf
fmulp
mov
call
push
add
fistpll
lods
pop
ffree
xlat
xchg
mov
ja
mov
fcmovnu
fldenv
add
rclb
inc
pusha
mov
push
xor
ds
jmp
jo
aaa
push
scas
mov
push
int
ljmp
leave
test
insl
mov
call
loopne
sub
pop
sub
movsb
pop
pop
and
imul
xlat
lods
mov
xor
push
rcrl
outsb
xchg
mov
jl
ret
mov
ljmp
mov
xor
jg
fiadds
jle
ja
dec
sbb
popa
mov
sub
in
mov
test
dec
ror
ret
push
mov
adc
popa
dec
inc
or
ss
mov
jmp
stos
mov
ds
cltd
scas
jbe
sbb
pop
loop
sarb
roll
cmp
vpackuswb
adc
cld
pushl
jns
popa
popf
stc
pushf
mov
outsb
test
add
xchg
aas
clc
arpl
imul
jne
adc
outsl
int
jp
data16
push
insb
dec
ja
dec
in
push
arpl
gs
inc
xchg
movsb
pop
mov
jg
xorb
sub
mov
push
jno
outsb
incl
cmp
sbb
or
and
xor
imul
add
or
aam
outsl
sbb
outsb
or
and
push
inc
and
sub
sbb
jle
addr16
aaa
sbb
add
adc
adc
or
push
cmp
into
addr16
out
loopne
inc
push
addr16
arpl
sbb
or
and
ds
ud2
add
dec
sbb
sub
and
push
cs
cmp
adc
adc
sldt
das
cmp
pop
insl
mov
sub
lcall
sub
add
data16
push
dec
pop
inc
push
or
ljmp
cmp
adc
sbb
and
cmp
gs
call
out
adc
cmp
and
pop
xor
and
sub
pushl
and
add
pop
dec
or
xor
dec
inc
push
add
cmp
test
sarb
cmc
push
pop
add
les
push
jge
add
add
fisttpl
xchg
adc
pop
sbb
sub
pop
loopne
std
sbb
imul
sbbb
and
adc
sbb
pop
sbb
cmp
push
jp
ss
push
adc
inc
sbb
aas
xor
popa
push
push
pop
cmp
xor
add
aas
fildll
cmpsb
push
and
sbb
sbb
add
sub
daa
or
incl
or
or
xor
xor
xor
push
sub
adc
adc
xor
decl
and
sub
sub
sub
xor
es
cmp
xor
adc
cmp
add
or
inc
arpl
cmpsb
jle
call
and
shll
xchg
jp
inc
pop
jge
inc
es
pop
push
and
pop
repnz
inc
sbb
jge
inc
arpl
dec
jne
sar
xor
xor
dec
rclb
push
mov
imul
jg
pushl
mov
ja
dec
xor
jl
pop
dec
loopne
jnp
inc
dec
gs
ds
lcall
jg
push
cmp
dec
fnstcw
ret
push
jl
dec
fiadds
sbbb
fcomip
incl
movsl
push
inc
inc
push
pop
ss
lock
js
ss
push
cmp
pop
repz
call
cld
ficoml
pop
xor
push
ljmp
pusha
push
push
inc
jge
inc
scas
jne
dec
daa
ret
pushl
push
outsb
dec
aaa
push
push
push
clc
dec
icebp
jne
inc
imul
sar
sahf
out
jmp
mov
sbbb
pop
push
pusha
fs
pop
gs
push
sar
pusha
std
jge
inc
fnstenv
mov
or
fwait
push
jmp
pop
cltd
jnp
push
insb
inc
dec
jbe
pop
or
je
dec
outsb
push
popa
pop
ja
dec
fstl
imul
nop
jns
outsl
imul
aaa
jno
pop
rcrl
push
mov
dec
pop
inc
sub
aas
dec
push
xor
push
mov
jg
sbb
jns
inc
leave
jg
inc
push
jl
sar
lcall
inc
mov
dec
ljmp
jb
dec
ss
push
xchg
je
cltd
mov
inc
push
xor
pop
outsb
push
insb
outsl
fdiv
mov
aad
mov
popf
jns
xchg
dec
mov
inc
mov
jne
jb
dec
push
xchg
ja
pop
mov
jge
dec
sarb
pop
adc
ret
leave
inc
mov
pusha
dec
sub
jle
push
imul
push
sbbb
pop
jge
dec
adc
pop
inc
gs
clc
jns
inc
cmpl
pop
rolb
std
pop
ret
pop
leave
inc
mov
ljmp
es
sbb
jne
jo
dec
fisttpl
mov
je
pop
dec
imul
ljmp
pop
dec
jbe
dec
pop
jns
jge
pop
aad
sbb
inc
fsubl
pop
mov
arpl
js
lcall
dec
insb
jl
push
or
push
sbb
xor
push
or
fstl
dec
es
add
pop
into
dec
lods
lcall
jp
push
dec
push
pop
pop
dec
sbb
cmp
mov
jp
dec
repz
out
pop
lret
push
jmp
jmp
inc
leave
jge
inc
jns
pop
cltd
inc
mov
dec
mov
inc
mov
jb
insb
js
pop
out
clc
ljmp
pop
jp
inc
jg
pop
pop
xor
cmp
pusha
ss
mull
push
mov
loopne
add
dec
je
push
insl
inc
or
add
mov
into
add
jo
pop
out
cli
push
leave
inc
stc
jb
lcall
aad
stos
pop
mov
fwait
inc
xchg
pop
pop
push
jns
adc
pop
xor
push
cmovb
pop
inc
jo
mov
jmp
push
das
pop
aam
notb
push
mov
scas
dec
stos
push
mov
nop
pop
data16
pop
pop
incl
outsb
and
jb
ljmp
push
xlat
dec
in
icebp
push
int
fsubr
clc
call
dec
test
dec
mov
push
xorl
push
dec
popa
dec
pop
inc
push
jne
dec
cld
incl
pop
das
outsl
cmp
pop
push
jbe
dec
jmp
nop
into
cmp
dec
jle
dec
push
cmc
jae
pop
pop
jg
push
lock
pop
lock
jecxz
jo
sbb
pop
pop
ds
adc
lcall
inc
mov
push
push
inc
inc
pop
inc
jo
addr16
enter
push
push
loope
push
lock
dec
sahf
sti
sbbb
dec
addr16
jno
mov
cmc
jl
inc
sarb
int3
jle
pop
cwtl
inc
nop
pusha
gs
push
dec
es
xor
inc
sbb
jg
jge
inc
xor
jp
jg
inc
std
inc
loope
pop
pop
je
pop
jmp
int
out
repz
in
je
dec
mov
pop
inc
dec
push
dec
outsl
jle
inc
dec
pusha
pop
pop
push
jp
ljmp
adc
dec
js
push
xchg
pop
imul
inc
dec
inc
push
push
pop
pusha
push
add
lcall
stos
jb
xlat
pop
iret
dec
shl
jg
push
mov
pop
ljmp
inc
outsb
pop
aas
push
notl
flds
push
push
mov
pop
ljmp
push
je
dec
push
jae
dec
sahf
rclb
dec
mov
inc
mov
dec
outsb
loop
dec
ret
jg
out
ja
gs
js
inc
push
inc
leave
pop
cli
pop
dec
jle
push
clc
pusha
lods
inc
test
lock
push
pop
jg
inc
jmp
divb
idivb
cmc
decb
popa
divps
mov
jnp
sti
lcall
push
aaa
pop
adc
andps
pop
sub
push
xchg
outsb
pop
data16
jg
pop
js
outsl
sub
push
push
jno
pop
ficomps
push
faddl
test
push
mov
inc
mov
mov
mov
push
je
lcall
sub
jbe
push
cmp
push
notl
dec
stos
dec
xchg
je
dec
sub
push
add
fdivs
jecxz
adc
std
aad
stos
fs
inc
sbb
inc
outsl
jg
pushl
jbe
push
jg
fs
je
push
dec
xor
adc
jg
ja
fcomip
push
lret
dec
pop
rcll
pop
in
movsb
inc
movsl
pop
lcall
xlat
inc
stos
push
arpl
pop
jge
inc
pusha
inc
push
pop
pop
jle
pusha
call
sub
push
cs
add
jl
dec
cld
xor
pop
std
mov
lods
js
inc
popa
jg
inc
xchg
fcomip
incl
gs
pop
and
pop
enter
jg
inc
and
push
jle
inc
incl
push
pop
je
pop
sbb
dec
int3
insb
cmpsl
pop
mov
jp
jle
outsl
lcall
dec
sbb
cmp
inc
mov
jp
push
fs
pop
je
jno
push
sub
call
call
jns
dec
jmp
ljmp
and
pop
pop
dec
pop
push
es
imul
mov
pop
add
int3
inc
sbbb
push
pop
jae
inc
push
push
mov
decl
dec
xor
dec
loope
jmp
test
push
sub
rcrl
push
les
jmp
xor
jg
pop
inc
pop
es
push
aad
mov
xorl
fbstp
xchg
inc
mov
push
push
dec
jo
pop
mov
mov
pop
jne
push
pop
xchg
push
imul
pop
push
push
pop
pop
pop
inc
sub
sbb
inc
mov
jae
mov
and
pop
push
jp
or
pop
mov
test
sbbb
jns
dec
add
cld
pop
test
jb
add
dec
test
dec
aaa
int3
mov
push
push
mov
fcomip
cmpsl
ficoms
and
lds
cmpsb
inc
mov
pop
sub
mov
addr16
inc
andl
push
jne
jno
or
adc
fisttpll
lods
jg
inc
ss
mov
jb
pop
fwait
dec
lea
push
lahf
pop
sti
push
sbb
call
adc
push
loopne
call
insl
mov
lods
dec
inc
xchg
pop
fadds
mov
push
mov
pop
cmp
cmp
xchg
pushl
xchg
addr16
push
js,pn
inc
mov
cwtl
inc
ja
push
pop
jle
pop
sub
dec
aaa
std
jg
sti
inc
out
fnstcw
inc
int
mov
jl
inc
cmc
inc
out
pop
jnp
jp
push
pop
fs
push
sbb
inc
movsl
je
jo
pop
orb
sarl
inc
test
mov
adc
scas
bound
dec
lods
test
scas
into
adc
pop
push
pop
into
jle
push
jg
push
addl
nop
inc
xchg
ja
pusha
xchg
push
mov
mov
cmp
push
push
push
rclb
jae
push
push
push
inc
pop
imul
push
inc
jns
inc
push
jg
pop
jnp
pop
pop
jb
jg
cmp
dec
cmp
inc
xor
inc
repz
pop
fidivrs
jnp
inc
cmpsl
inc
ficomps
pop
or
jp
push
lea
daa
arpl
push
xor
inc
mov
data16
pop
jl
or
jle
bound
incl
mov
jle
push
test
pop
inc
add
bound
pop
xchg
inc
imul
scas
clc
xor
or
jmp
push
lea
jge
push
mov
dec
imul
jle
and
jl
dec
ret
mov
jns
inc
sbb
inc
fdivrs
incl
popa
or
dec
xchg
pop
jb
pop
dec
xor
add
ja
push
cmp
jmp
pop
add
test
pop
sub
push
xor
inc
sub
push
das
jle
ja
inc
ljmp
fs
or
dec
fsubrl
push
add
lcall
std
jp
push
mov
pop
bound
out
leave
jbe
inc
fwait
pop
xchg
pop
fs
call
icebp
pop
pop
sub
inc
or
test
pop
pop
jnp
push
lcall
pop
xor
push
lret
cmpsb
jns
inc
adc
outsl
test
xchg
jae
loop
decl
adc
stc
jb
push
repnz
shrl
inc
mov
mov
jo
dec
loope
mov
jbe
jae
dec
fimuls
push
cmpsl
push
adcl
or
enter
insb
xor
jle
ret
pop
mov
xchg
dec
lahf
dec
xchg
jp
inc
pop
addr16
jl
push
imul
adc
xchg
push
out
push
ja
cmp
inc
loope
int3
push
mov
adc
inc
repnz
lret
or
shrl
repnz
pcmpeqb
incl
pop
jl
sub
cmp
daa
inc
or
push
lret
pop
das
cli
mov
lock
push
push
dec
push
insl
adc
push
int3
dec
pop
jbe
dec
repz
lahf
push
dec
jo
ja
dec
movsl
dec
scas
mov
gs
pop
jo
inc
scas
out
add
inc
mov
push
add
addb
pushf
std
dec
mov
mov
jl
push
test
sbbl
sbbl
pop
out
push
inc
pop
outsl
inc
loopne
loopne
and
gs
push
mov
xchg
push
jae
imul
aaa
push
fdivs
pop
inc
adc
xchg
into
fidivl
inc
adc
push
int3
jne
call
pop
hlt
add
jbe
adc
jo
sar
ljmp
push
imul
inc
xor
dec
dec
stc
ja
pop
mov
test
jbe
dec
lds
push
fsts
inc
shrb
stos
pop
push
and
and
pushl
std
jne
push
push
roll
cwtl
jne
dec
dec
push
push
or
jge
push
loopne
mov
pushl
pop
mov
pop
inc
ja
inc
or
lret
inc
lcall
data16
sahf
inc
pushf
pop
jno
ljmp
fdiv
insl
push
pop
mov
imul
dec
xchg
pop
cli
pop
divb
push
std
js
inc
push
pop
sbb
lea
jae
mov
loopne
sub
add
dec
jle
jp
cli
pop
mov
lret
jns
inc
fistpll
pop
ss
jg
inc
mov
cmp
jnp
push
pop
gs
xor
push
pop
jnp
inc
cmp
aam
std
mov
aas
inc
es
int
pop
inc
mov
gs
incl
jno
pop
enter
xchg
sbbb
adc
push
inc
xor
imul
mov
xlat
or
jecxz
sub
push
adc
pop
dec
pop
fcoms
inc
sti
pop
sub
ds
mov
cmp
data16
int3
inc
xor
pop
aam
push
gs
dec
cmp
dec
xor
adc
incl
dec
cmp
push
push
cmp
push
pop
pop
fistpll
cmp
inc
stos
inc
loop
std
inc
stos
popa
mov
fcomip
jp
push
loopne
aad
dec
movsb
js
push
and
push
pushf
jns
pushf
push
add
push
test
fwait
decb
outsb
fldt
js
sbb
inc
clc
jbe
or
pop
jne
add
incb
pop
mov
imul
push
popf
or
jg
and
pop
mov
fs
pop
sub
pop
cs
or
daa
jns
inc
out
jns
pop
cli
jle
jnp
jmp
in
out
pop
in
ficomps
and
gs
push
decl
lock
inc
add
push
rolb
inc
xlat
jbe
lock
mov
movsl
jb
pop
lahf
jg
push
test
push
addr16
loop
or
push
inc
sbb
inc
or
push
cmp
inc
xor
pop
pusha
sbb
inc
in
pop
lock
pusha
in
push
fistpl
jle
push
into
push
out
sbb
mov
mov
dec
cmp
incl
adc
push
sub
inc
or
or
pop
sub
cmp
add
dec
loop
cld
inc
out
jp
inc
lcall
js
ja
jecxz
loope
cmc
pop
jl
push
fbld
inc
mov
data16
incl
ja
push
mov
ja
dec
xchg
imul
push
pop
inc
push
inc
ljmp
jb
inc
jb
inc
dec
pop
push
push
jl
pusha
inc
jno
arpl
sbb
pop
push
aaa
mov
arpl
shr
ret
push
pop
adc
push
xor
pop
sbb
cs
aaa
jb
inc
js
adc
xor
addr16
jecxz
in
inc
hlt
jge
inc
aam
jmp
loope
lcall
inc
frstor
pop
fisttps
pop
les
mov
dec
mov
mov
cld
pop
inc
imul
enter
sub
inc
dec
rcpps
and
pushl
mov
xlat
inc
out
ja
dec
shrl
push
cmpsl
jae
pop
mov
inc
mov
xchg
mov
lcall
pop
push
js
aad
aas
ss
das
arpl
push
daa
inc
xor
adc
and
xor
jge
push
ret
call
aam
ljmp
jg
dec
mov
addr16
push
cmpl
insb
jle
inc
and
pop
js
pop
fs
pop
push
dec
and
inc
ds
mov
inc
add
pop
or
clc
jp
inc
flds
pop
ficompl
fbld
int3
push
pusha
dec
inc
pusha
pusha
sub
inc
dec
ja
pop
addb
inc
ja
jnp
and
push
pop
ja
cmp
pop
adc
push
sbb
push
ja
pop
ss
xor
inc
pop
adc
call
pop
and
pop
pop
fs
push
testl
fs
push
fistps
jp
insb
ljmp
cli
jg
pop
fmull
push
negl
pop
aam
dec
mov
lods
pop
mov
push
mov
cld
adc
pushf
jle
pop
inc
test
pop
xchg
dec
bound
inc
out
jp
incl
jge
inc
jg
imul
popa
pop
pop
dec
pop
push
fildll
xor
daa
push
add
inc
cmp
sub
cmc
mov
inc
daa
jo
rep
in
jle
xchg
loopne
dec
jbe
pop
rorb
push
fimull
lock
push
lcall
pop
movsb
jbe
add
call
imul
dec
push
push
cmp
scas
pop
push
pop
sahf
sbb
std
jg
ficompl
call
push
scas
push
call
lcall
push
stos
outsl
xchg
pop
mov
jbe
dec
inc
jb
push
lock
fcomip
fs
xor
inc
adc
dec
ljmp
jo
push
enter
or
jb
dec
popf
dec
pop
lcall
dec
pop
std
jmp
ja
dec
cmp
jl
pop
ss
aas
jle
cmp
push
aad
iret
js
push
xlat
jne
pop
nop
dec
xchg
jp
push
xchg
pop
xchg
push
cmpsb
js
dec
je
push
pop
pusha
push
push
call
dec
add
outsb
pop
pop
add
push
cld
jns
outsb
icebp
pop
rcll
pop
xchg
pop
mov
lods
inc
fwait
and
sahf
pop
cmpsl
incb
jno
pop
pushl
dec
shlb
dec
adc
push
and
imul
out
inc
ljmp
clc
dec
out
mov
ja
push
nop
jo
jne
dec
pop
dec
jns
pop
push
dec
jb
pop
aaa
ljmp
sbb
pop
cmp
and
adc
jns
pop
repnz
testl
addr16
pop
xchg
jge
icebp
call
jo
pop
dec
dec
push
and
ds
add
or
add
dec
fldl
js
push
mov
cmpsb
insl
insl
mov
mov
pop
mov
push
dec
pop
cmp
sub
out
push
lcall
jg
dec
mov
addr16
push
imul
cmp
inc
add
pop
int3
inc
mov
ficompl
dec
mov
inc
jae
sub
jns
cmp
jnp
inc
xchg
jmp
mov
js
or
inc
shlb
push
test
inc
cwtl
fbld
xchg
jb
jnp
sbb
dec
or
repz
pop
xlat
jnp
call
inc
stos
je
pop
lcall
inc
pop
pop
inc
push
adc
inc
or
cmp
inc
in
ret
mov
int
sti
pop
mov
pop
mov
pushl
jb
jae
and
jns
dec
add
pop
popa
out
push
jge
inc
les
inc
ljmp
pop
mov
pop
outsl
inc
push
je
jp
push
jb
dec
push
jb
push
xor
pushl
push
adc
dec
sub
push
push
je
pop
out
push
dec
mov
mov
or
sub
std
mov
dec
ja
add
pusha
sbb
data16
pop
cmp
jmp
dec
out
mov
push
sbb
dec
add
pop
sub
les
mov
outsl
cli
pop
fwait
dec
xchg
push
push
dec
pop
jnp
dec
ja
bound
push
add
incl
pop
out
ret
push
mov
pop
imul
fcmovnu
mov
add
xor
fldcw
push
mov
and
aaa
mov
hlt
addr16
jb
mov
dec
ljmp
rclb
jno
pop
cmpsl
outsl
cmpsb
dec
subb
jo
sbb
push
jns
lcall
push
dec
jecxz
xchg
inc
mov
jl
push
pop
jno
pop
adc
jle
mov
pop
lret
jl
dec
movsb
push
repnz
push
push
xchg
inc
outsl
aaa
ljmp
fidivl
lcall
jl
push
push
mov
pop
xchg
pop
mov
mov
dec
xchg
inc
imul
fs
dec
jge
mov
inc
jns
out
cmp
push
pop
adc
adc
incl
inc
sarl
inc
ret
jnp
pop
nop
jl
jns
test
jle
lcall
push
inc
inc
fs
push
je
insb
inc
sub
sub
push
push
inc
pop
inc
sbb
mov
decl
imul
lds
inc
xchg
jb
or
pop
pop
ja
pusha
pop
imul
sub
pop
inc
out
sti
inc
clc
pop
call
push
lcall
fbstp
push
sahf
push
mov
test
cmpsb
push
stos
pop
fwait
pop
nop
jp
or
push
push
cs
push
pop
jg
or
inc
xor
or
inc
cmp
dec
cmp
lcall
inc
push
inc
das
jg
inc
pop
jg
pop
add
jge
inc
leave
inc
fstpl
pop
out
repnz
jg
mull
inc
in
popa
iret
push
call
jbe
jb
push
loop
repz
jb
dec
stos
insb
mov
loopne
jbe
cli
jnp
push
mov
mov
incl
pop
dec
fcoms
pop
call
push
stos
outsl
add
js
insb
in
mov
jae
pop
ss
or
inc
ljmp
adc
inc
sahf
jb
pop
push
add
int3
inc
mov
jg
rolb
addr16
cmp
cmpb
ljmp
xchg
inc
imul
jle
and
dec
xchg
xchg
add
add
or
call
aaa
sbb
popa
dec
rorl
call
jno
push
jns
int3
outsl
ja
insb
mov
mov
cmp
or
cmp
sbb
xor
or
sbb
sub
addr16
and
push
aas
je
cmp
or
aas
repnz
mov
into
adc
sbb
out
adc
lret
cltd
and
sar
xor
lods
adc
sbb
out
shlb
sbb
in
pop
cmc
or
popf
out
or
fsubr
add
in
ss
enter
repz
and
enter
cmp
int
ss
shrb
pop
dec
popf
cmp
int3
ret
adc
mov
push
repnz
and
lcall
cmp
leave
and
push
mov
lock
xor
push
dec
inc
sbb
outsl
test
xchg
int
inc
jns
jnp
push
jle
xorl
gs
xchg
inc
aaa
jo
inc
decl
fisubs
jno
jae
dec
pop
js
push
push
xchg
subl
repz
push
push
dec
jge
push
inc
jns
aas
mov
dec
or
pusha
jbe
or
mov
add
fiadds
sub
push
push
fcoml
xor
push
jle
repnz
mov
or
cmp
add
stc
imul
and
insb
xchg
inc
xor
ljmp
jp
cmovle
mov
bound
int3
sbbb
imul
incl
mov
jmp
pusha
push
xor
js
or
sbb
mov
dec
cli
icebp
call
insl
stos
comiss
mov
and
call
int3
mov
or
nop
pop
push
push
pop
mov
pushl
lcall
gs
xchg
outsb
fldenv
mov
outsl
push
adc
into
cmpl
jbe
out
rcrl
pusha
lock
xor
and
adc
cmp
push
sbb
push
rcrb
mov
push
stos
cmp
ljmp
adc
push
pop
outsl
sub
je
xor
xor
mov
pop
adc
call
xor
pop
loopne
insb
pop
jno
sub
xchg
xchg
mov
cs
jno
dec
fstps
and
fnsave
aam
ljmp
and
jge
das
sub
dec
es
lods
or
or
xor
or
gs
lcall
and
andb
lahf
iret
in
jbe
add
add
addb
decl
test
fadd
sub
jl
movl
loopne
icebp
mov
out
inc
cmpsl
loopne
sbb
cmpb
sub
popa
push
in
loop
jmp
mov
push
ljmp
daa
jnp
outsb
sbb
leave
in
or
out
iret
sbb
xchg
stos
cmp
sbb
rol
enter
push
addr16
mov
mov
jecxz
sbb
ljmp
lahf
jo
test
imull
sub
cmp
sar
data16
pop
xor
test
das
mov
inc
mov
fistpl
or
cwtl
test
xchg
pop
movzbl
inc
insb
push
dec
sub
leave
xchg
pop
cli
pusha
aaa
and
mov
and
push
mov
push
push
cld
or
mov
fs
add
stc
out
pop
jle
inc
mov
jo
mov
fcomip
incl
shlb
sbb
mov
adc
dec
mov
jge
and
mov
sbb
or
sub
push
mov
xor
divw
in
add
dec
mov
cmp
mov
sub
testl
sbb
mov
pusha
push
xlat
jb
loopne
or
call
sbb
xorb
sub
sbb
sbb
mov
xor
inc
adc
adc
push
push
push
adc
js
mov
xor
flds
jmp
cmp
movsb
pop
xor
xlat
add
jmp
pop
lods
inc
test
add
inc
mov
mov
jns
call
arpl
jg
jg
aaa
sbb
imulb
dec
sbb
das
pop
cld
add
sbb
aas
pop
sbb
cmpsb
add
jbe
lea
sahf
or
inc
ret
push
or
pop
xor
aad
push
fidivs
hlt
sarb
ret
or
enter
incl
or
iret
inc
pop
adc
cmp
pop
dec
cmp
push
ret
mov
decl
and
pop
lahf
and
stos
jg
in
ljmp
dec
mov
xor
add
aaa
mov
jg
pusha
orl
pushl
jb
inc
std
cli
fidivrs
stc
dec
outsb
mov
pusha
lcall
xchg
rcll
cli
or
iret
push
adc
add
jmp
dec
insl
lret
adc
fistl
push
and
cmp
insb
xor
aas
fisubs
int
idivb
jmp
ja
adc
cmp
push
and
jge
nop
hlt
push
lea
push
cld
sub
mov
pop
and
or
sbb
repz
pop
adc
loopne
lcall
fldt
sub
imul
jp
add
decl
jns
es
xor
push
adc
fs
stc
jnp
rcrl
sub
xlat
mov
in
fstps
add
push
stc
or
inc
cld
jg
cmp
xor
sub
lahf
hlt
daa
scas
dec
and
mov
jg
adc
xchg
add
jae
mov
sub
imul
adc
fstpl
or
incl
out
es
rclb
outsl
or
adc
adc
sub
repz
loopne
mov
cli
loopne
sub
out
cmp
cmpsl
insl
aas
mov
sub
lret
sbb
mov
fldcw
push
loope
xchg
and
cmp
idiv
call
cmp
addl
iret
and
mov
or
into
mov
mov
lret
jno
shll
dec
inc
iret
rorb
hlt
incl
jae
mov
dec
mov
inc
cmp
or
loop
inc
dec
imul
cmp
scas
mov
mov
aaa
sbb
fldcw
out
test
dec
pop
dec
ret
clc
mov
out
int3
fwait
or
xchg
push
pop
jno
int
cmpsl
rolb
mov
mov
dec
lcall
or
ljmp
add
xchg
ret
sbb
jae
cs
pop
cld
decl
iret
jg
add
pop
mov
dec
jbe
addr16
push
je
aam
sub
mov
in
cld
fcomip
ljmp
inc
fildll
das
icebp
add
push
fnstenv
mov
ljmp
jo
push
push
jb
mov
shlb
cmpsb
sbb
mov
lret
mov
dec
jle
mov
sbb
and
lcall
mov
mov
cmc
in
pop
fisubs
popf
outsb
insb
jno
sbb
jno
fs
mov
arpl
gs
or
out
arpl
dec
push
fcmovnu
jmp
xchg
ret
cmp
daa
add
into
out
xchg
sub
sub
adc
in
mov
or
jmp
jnp
push
and
dec
enter
insb
adc
adc
cld
incl
je
test
inc
sub
xor
jb
ss
add
insl
jae
adc
pop
or
maxps
decl
push
adcl
sbb
cmp
sub
push
pop
ljmp
cmc
decl
pop
and
das
add
push
sbb
or
jbe
cld
mov
decl
sub
int
push
adc
cli
pop
cmc
ss
inc
sub
add
lods
jmp
dec
sbb
mov
lret
jmp
leave
int3
lea
inc
cmp
pop
mov
sub
push
pop
pusha
inc
push
lret
fcmove
int3
jbe
cli
jg
subb
push
jmp
gs
xchg
aaa
pop
mov
inc
push
xchg
inc
insl
je
clc
pop
push
push
ficomps
jg
nop
icebp
fdivrl
pushl
add
dec
inc
push
or
or
sub
js
add
outsl
jae
jae
aaa
mov
jns
incl
mov
xor
adc
das
cmp
outsl
cmp
lcall
fdivl
and
or
inc
pop
inc
das
into
arpl
aaa
std
inc
ja
adc
dec
or
pop
cs
lahf
daa
fsubp
sbb
cli
or
ja
dec
popl
jp
aam
lahf
or
mov
enter
fiaddl
adc
sbb
push
jne
xor
inc
aaa
decl
cmpsl
dec
mov
dec
daa
mov
movsb
das
pusha
jo
lds
out
stos
je
pop
lret
mov
xlat
cli
cwtl
adc
inc
arpl
fmuls
enter
test
lcall
das
ficoml
or
sbb
lret
adc
add
out
cli
lcall
push
jnp
push
idiv
mov
cmp
ss
inc
or
push
push
jmp
in
pop
push
xlat
daa
shll
inc
xor
ljmp
sbb
or
jmp
jns
and
pop
or
icebp
push
jp
mov
and
pop
jae
repnz
repz
lcall
pusha
pop
pop
out
pop
pushl
xor
push
out
xor
pop
enter
or
sar
inc
mov
psrlq
jmp
into
push
inc
lret
scas
addr16
dec
pop
mov
loopne
jg
mov
mov
xor
inc
mov
mov
enter
mov
add
das
sub
xor
lcall
mov
push
mov
xchg
fs
cli
outsl
push
push
adc
jmp
sbb
daa
cmpsb
sbb
rolb
jbe
cmpl
pop
push
add
adc
mov
pushl
dec
movsl
or
pop
lret
and
std
add
and
or
jns
scas
add
mov
pop
cmp
lcall
xor
stc
pop
icebp
sub
scas
leave
jb
dec
or
iret
add
inc
call
hlt
inc
or
push
jae
push
adc
or
shlb
adc
mov
gs
pop
shll
adc
rcrb
mov
and
pop
or
xor
or
sbb
and
jno
cmp
push
cmp
dec
pop
xor
jns
and
pop
adc
out
sar
adc
or
or
add
daa
cmp
push
xor
xor
aam
xchg
ljmp
adc
mov
test
push
mov
add
jmp
ret
xor
cmp
stos
jl
xor
pop
jg
lcall
test
or
sbb
cmpl
and
mov
cld
add
or
es
sbb
filds
cmp
xor
mov
cmp
imull
popf
or
lcall
xor
pop
or
shr
lods
adc
adc
jmp
enter
jnp
dec
cld
sub
iret
cmpsl
sub
cmc
test
xlat
push
push
fstpl
lock
rorb
cmp
es
jl
push
sbb
cmc
lods
or
jg
sub
and
mov
call
push
jb
mov
dec
jb
or
push
and
cmp
pushl
cld
nop
cmp
dec
sub
cli
dec
aaa
or
dec
ror
sub
sub
std
dec
call
test
ljmp
bound
adc
and
es
pop
loopne
adc
xor
sub
mov
ljmp
sbb
cmp
jg
arpl
fstl
push
out
out
push
inc
and
add
aas
insb
mov
test
pop
rolb
push
cld
incl
js
pop
xor
rorl
mov
cld
int3
inc
jl
add
clc
add
sub
dec
xor
xchg
rolb
push
lret
gs
jg
jmp
and
jns
outsl
mov
mov
lcall
aas
jecxz
incb
sub
push
adc
mov
adc
addr16
jbe
incl
dec
in
jl
jg
lds
xchg
pop
fsubl
in
push
xor
daa
ljmp
call
jmp
into
rolb
arpl
sbb
testl
cmp
jle
mov
rcr
dec
ret
mov
adc
and
jmp
pop
ret
adc
and
inc
mov
mov
inc
aam
cld
sub
adc
jo
es
decl
adc
xlat
jge
dec
imul
push
fwait
cltd
xlat
jecxz
inc
rcll
cmp
data16
scas
rcl
filds
pop
inc
sbb
ljmp
push
push
imul
stos
lods
ficoml
xor
add
add
lock
sub
push
or
jg
push
mov
jae
test
decl
push
lods
push
or
sub
sbb
icebp
stos
mov
lods
ja
incl
mov
pop
test
test
pop
loop
adc
sbb
out
xlat
popf
xchg
cli
andl
in
rcll
push
enter
aaa
scas
and
loop
jg
cmp
jg
lcall
stos
adc
jns
lods
jns
jno
fistpll
sbb
mov
ret
mov
aas
push
sub
ret
ljmp
xchg
mov
and
xchg
jl
pop
sub
cmp
mov
adc
push
pop
pop
cmp
call
in
or
lret
test
cmpsb
lods
int3
clc
addl
fs
std
adc
out
lods
mov
sbb
mov
mov
adc
shr
xorb
cmp
push
lock
sahf
pushf
xchg
lcall
aam
pop
push
sub
test
cs
sub
cmc
stos
and
call
ljmp
aam
cld
cli
xchg
adc
enter
jnp
fsub
lahf
or
outsb
mov
fwait
pop
mov
add
lock
xchg
ljmp
aaa
std
mov
jle
movsb
cmp
push
lret
jae
ds
pop
pop
jg
fwait
pushl
and
lret
jae
dec
dec
push
pop
lods
movsl
or
subl
inc
ljmp
xchg
sbb
je
sbb
push
lods
inc
mov
and
icebp
decl
ja
mov
push
dec
xor
push
push
jge
or
ljmp
lea
adc
xchg
jge
adc
and
decl
add
mov
or
sbb
add
std
call
sbb
dec
dec
daa
sbb
cmp
out
mov
fidivrs
bound
cwtl
dec
pushl
and
mov
addr16
ror
pop
in
mov
cmp
loop
ljmp
jno
sub
ficompl
ret
hlt
mov
icebp
or
mov
adcb
pop
cld
incl
pushf
pop
out
fcomp
test
jnp
adc
inc
or
add
push
jg
call
fwait
cmpb
pop
loopne
daa
and
sarl
cld
mov
xchg
fdivl
pop
sub
in
mov
fnstenv
outsl
push
mull
cli
cmpsb
add
xor
addr16
pop
test
add
fdiv
xchg
adc
push
adc
lret
add
adc
sbb
jo
cli
mov
dec
dec
add
stc
xchg
add
cwtl
test
sbb
xor
pushf
mov
mov
rcll
sub
mov
pop
push
xor
jno
scas
sbb
adc
sbb
jg
frndint
lea
adc
shll
into
ljmp
adc
jmp
mov
pop
push
int3
push
dec
dec
push
leave
scas
lcall
inc
or
sbbb
jge
push
repz
or
sbb
jecxz
call
cmpsl
sub
cwtl
filds
push
jle
or
push
iret
jnp
cld
dec
nop
xor
arpl
ljmp
xor
js
rcr
leave
adc
cld
lods
push
add
std
decl
test
loopne
int3
lcall
gs
and
xchg
pop
cs
ljmp
aaa
lcall
inc
push
and
loope
imul
jb
ja
ss
incl
scas
repnz
adc
pop
jle
fs
mov
xchg
pop
incb
pop
int3
mov
pop
insb
dec
jno
mov
xchg
pop
cmp
incl
push
jne
fcmovne
lcall
or
dec
add
test
call
cmpsl
leave
sub
mov
shl
jg
pop
adc
xchg
inc
xchg
fistps
jno
outsl
outsl
jmp
push
adc
inc
cwtl
loop
ret
filds
xor
push
mov
out
mov
sub
loope
fcomip
decl
add
or
aaa
sahf
dec
pusha
xor
ljmp
inc
lcall
insb
push
popa
adc
xor
ret
lcall
or
push
notb
outsl
xor
push
daa
sub
xor
bound
push
dec
inc
jns
stos
movsb
loopne
ja
call
mov
gs
inc
lea
inc
pop
es
sbb
stc
sbb
clc
decl
add
cmp
or
fwait
dec
mov
das
js
subl
out
push
insb
jno
fdivrl
loop
lret
add
jg
test
sub
incl
test
pop
jg
push
cwtl
inc
dec
dec
xor
aas
loopne
push
into
sbbb
mov
sar
or
out
xor
sub
pushl
add
xor
ds
and
mov
clc
jg
lret
xchg
outsb
dec
imul
jge
sahf
fmuls
push
leave
inc
sbb
push
adc
std
push
std
sbb
jmp
aam
pop
xor
out
push
inc
adc
or
xchg
xlat
cmp
dec
fldenv
and
loope
push
push
xor
shlb
mov
cltd
jp
push
xor
call
clc
lea
mov
and
ror
sub
fsubrp
mov
xchg
fldt
out
push
push
addb
call
cmp
sub
fnstsw
add
cmpsb
loop
cli
add
jo
xchg
fwait
aaa
ret
les
jl
shrl
scas
and
push
nop
sbb
sbb
lock
xlat
jns
pop
xchg
mov
or
or
loopne
jmp
push
add
pop
hlt
test
shl
dec
lods
add
inc
outsl
call
lcall
dec
jl
adc
dec
scas
jo
xor
pop
loopne
lock
xorb
sarl
lods
add
fldenv
inc
push
in
adc
adc
adc
mov
adc
aad
cmp
xor
adc
call
sub
lods
rcrb
test
jmp
test
jmp
decl
dec
inc
dec
or
ljmp
int
cmpb
sub
decl
xchg
push
xor
xchg
adc
push
adc
jg
jbe
scas
ljmp
outsb
mov
fbld
cs
rorb
aam
or
clc
pushl
call
rolb
inc
pusha
pop
rclb
movsb
cld
decl
ret
adc
pop
sbb
call
pop
inc
jmp
scas
and
out
mov
das
inc
clc
filds
push
sbb
rcl
xchg
nop
leave
cmp
push
aaa
cld
pop
nop
and
xor
and
xchg
call
decl
jb
cltd
mov
jmp
pushf
adc
cmp
lock
adc
jb
mov
fsubr
xor
decl
repnz
mov
leave
icebp
pop
xchg
pop
push
mov
lcall
getsec
mov
lea
fsubr
pop
jns
pop
inc
popf
mov
add
subl
je
mov
push
rorb
pop
mov
incl
iret
jecxz
ficomps
int
iret
push
insb
sbb
lcall
call
ds
adc
mov
inc
fiadds
xor
punpcklwd
jmp
sgdtl
pop
loop
lea
or
out
xchg
pop
fdivl
rorl
cmp
inc
xchg
cmp
add
push
adc
and
mov
fnsave
cmpsl
ror
xor
add
adc
outsb
sbb
sbb
mov
xchg
jmp
adc
pop
push
xor
adc
cmc
mov
scas
cmp
fucomi
stc
in
sbb
hlt
fstl
fld
lret
fstps
or
ror
aaa
jmp
inc
clc
outsl
jns
int3
add
ss
test
sbb
clc
incl
inc
lcall
xorb
test
into
jo
pop
sub
add
je
mov
divb
jnp
inc
and
icebp
jmp
cs
pop
mov
cs
stos
push
add
call
negb
lds
cli
mov
pop
xor
xor
dec
in
push
gs
inc
loop
les
push
push
daa
or
adcb
cmp
add
scas
test
scas
adc
outsl
rdmsr
push
lahf
hlt
jg
outsb
inc
pop
lods
or
ficompl
stos
push
or
imul
and
in
add
aaa
sbb
cmp
aam
mov
movsl
mov
mov
adc
filds
push
fsts
adc
or
adc
mov
fidivrs
clc
add
sti
out
sbb
sub
test
jg
push
insb
sub
ljmp
add
lea
sbb
add
mov
sub
int3
shlb
xorb
dec
ljmp
xor
push
dec
sti
cmc
or
aaa
or
pop
dec
add
mov
hlt
adc
push
inc
jg
cmp
jmp
mov
pop
addr16
aam
movsl
xchg
xor
cld
fs
cmpsl
in
sub
divl
or
into
and
add
xchg
int3
in
test
xor
sbb
push
fbstp
pop
inc
cmp
jns
scas
fcmovnb
mov
xor
jmp
dec
pop
or
lea
test
sub
dec
and
adc
jg
dec
sub
and
and
xchg
jmp
imul
fxch
push
mov
nop
rorb
adc
xor
sbb
and
or
xchg
adc
push
inc
cmc
cmc
ss
nop
sub
adc
xchg
cli
fildll
mov
imul
or
ljmp
sbb
push
and
jmp
adc
cmp
cmc
pop
fadds
mov
push
pop
inc
pop
roll
fdivrp
mov
leave
xlat
fidivs
fistps
jbe
and
add
cmpl
mov
sar
push
lock
std
hlt
sub
jp
jmp
andl
nopl
rclb
cld
das
inc
ficoms
std
adc
shll
incl
mov
pop
gs
push
push
in
cmp
jl
sub
add
mov
sbb
imul
outsl
gs
push
adc
cmc
sub
mov
and
cs
xor
fmul
mov
test
pushl
add
leave
fstpl
es
push
fistl
xlat
add
lcall
sar
scas
dec
sahf
adc
lock
pusha
nop
or
fmull
icebp
adc
imul
inc
cwtl
jmp
mov
lock
mov
adc
pop
jo
icebp
or
or
add
push
into
leave
movsl
andb
xchg
mov
push
mov
inc
or
call
lcall
insl
scas
push
or
push
lods
push
jg
xchg
mov
loopne
xchg
add
lea
jo
add
ja
push
call
lcall
lahf
sbb
xor
or
sbbb
aad
lcall
std
daa
std
aaa
out
adc
lret
sub
push
mov
call
mov
sbb
mov
std
xor
out
mov
mov
mov
cmp
push
shlb
fcmovnbe
cmp
cmpsl
xchg
insl
into
inc
push
idivl
adc
dec
push
add
cli
jmp
jmp
xchg
lcall
dec
rolb
push
mov
lahf
inc
and
jl
mov
jge
pop
xchg
call
push
mov
outsl
cmpsl
incl
addl
sbb
shlb
cs
test
sbb
mov
ret
sub
pusha
and
ja
dec
xchg
dec
xor
mov
mov
or
call
pop
addb
scas
xor
hlt
test
or
inc
jae
mov
jmp
inc
inc
adc
insb
and
cmp
pop
jl
dec
enter
jmp
ljmp
and
int
aas
mov
in
pop
enter
ljmp
sub
and
icebp
dec
and
test
and
or
xor
in
ljmp
aaa
add
fs
adc
sarl
roll
pop
pop
xor
pop
pop
pop
adc
shlb
cld
mov
adc
cs
push
sub
add
cli
call
add
leave
subb
ficompl
push
push
repnz
out
sti
bound
fbstp
sbb
or
jnp
adc
jno
scas
lock
fdivl
incl
sbb
stc
mov
cmp
out
ljmp
pop
outsl
mov
arpl
stos
rolb
mov
test
dec
pushl
sub
push
aas
imull
shlb
sbb
mov
or
push
jns
inc
leave
dec
adc
leave
nop
add
mov
mov
cld
nop
decl
pslld
push
inc
xor
dec
lret
adc
push
shlb
add
dec
pop
jmp
aas
ljmp
mov
aas
inc
in
sti
int3
loop
ror
cmp
push
popa
dec
enter
adc
mov
push
data16
mov
push
das
int
xchg
sub
push
repz
fidivrs
fbld
sub
mov
xchg
and
xor
add
test
subb
adc
incl
dec
into
sub
jbe
jo
int
pop
add
add
add
into
rcrl
add
std
aaa
jmp
sahf
pop
xor
loope
call
dec
das
pop
inc
imul
rorb
fldenv
popa
stos
test
scas
or
movsb
cmp
add
sbb
out
aas
sub
mov
cs
shlb
xchg
push
mov
pavgb
fisttps
sbb
call
adc
adc
or
jg
lock
out
xchg
retw
xchg
hlt
inc
add
add
or
or
dec
inc
ljmp
in
jmp
pushf
hlt
jl
adc
sbb
or
mov
xchg
and
jmp
shlb
cmc
mov
scas
into
dec
fldenv
cmp
mov
pop
mov
ljmp
adc
int
or
cmc
cltd
dec
inc
daa
stos
xchg
xchg
and
adc
shll
fbstp
xor
out
sbb
daa
adc
ljmp
cli
xchg
and
lods
sti
push
adc
push
out
sub
cld
add
push
out
lcall
hlt
mov
xor
xor
int3
int3
mov
pop
or
cld
inc
scas
add
cmp
mov
icebp
mov
add
cwtl
mov
or
push
aaa
or
xor
xor
stc
sub
sbb
ljmp
lret
cwtl
jmp
das
or
xor
mov
xor
loopne
pop
cld
ja
inc
mov
adc
cli
jge
adc
add
mov
push
call
adc
mov
iret
loopne
cmp
xlat
xchg
rorb
xor
movb
jmp
les
scas
jg
xor
xlat
shlb
add
std
add
rorl
test
sub
push
push
add
mov
pop
push
push
push
loop
lock
fimuls
rcrl
icebp
popf
clc
jg
pop
sub
scas
and
adc
lret
js
incl
mov
shlb
adc
inc
lcall
pushl
or
in
mov
loope
mov
jo
jg
sbb
shll
push
jmp
cmp
mov
and
sti
in
sahf
nop
mov
hlt
push
mov
cmp
pushl
in
iret
dec
jnp
aaa
loopne
and
xor
push
roll
and
ljmp
stos
mov
sub
into
int3
repnz
dec
push
adc
sti
pop
or
mov
sahf
adc
sar
fisttps
int
call
cmpsb
sbb
call
ds
stc
ret
int
das
leave
scas
xor
xor
mov
test
xor
outsb
fmul
xchg
mov
push
in
icebp
out
mov
fsts
negl
clc
lods
fbld
jo
sub
jp
stos
lret
imul
cmp
jae
stos
mov
rcll
sbb
mov
mov
and
lock
ss
push
xlat
out
mov
enter
incl
jg
jo
cld
cmp
mov
inc
xor
pusha
xorl
lcall
in
adc
or
jg
fadd
sbb
out
dec
in
mov
xor
fsubrp
and
pop
sbb
push
xor
scas
in
push
sahf
xor
clc
mov
dec
xchg
add
adc
stos
scas
call
adc
aas
std
mov
sub
pop
jmp
mov
mov
or
les
sub
sahf
cli
mov
jl
and
fs
icebp
cmp
sbb
shll
mov
adc
mov
ret
mov
jge
aaa
or
in
fstps
lods
jg
adc
aad
scas
mov
cmp
pop
jp
out
xchg
mov
shl
push
and
mov
aas
leave
cs
scas
mov
fdivrs
add
adc
daa
js
ret
xor
loopne
jnp
lods
xchg
or
insb
sti
clc
pop
jg
and
push
pop
lret
in
add
mov
add
add
inc
xchg
lods
or
sbb
pop
inc
insl
xor
xlat
or
or
add
nop
test
dec
fs
xchg
mov
or
mov
addr16
rolb
bswap
and
aad
clc
call
push
stos
adc
lock
adc
in
test
hlt
pushl
sub
sbb
and
pop
lock
or
pop
mov
aam
sub
push
lds
mov
xor
sahf
loop
and
push
pop
cli
xchg
incl
test
lret
push
sbb
jle
lock
rclb
faddl
sti
test
inc
push
mov
mov
movsb
pop
setns
aaa
test
add
decl
fnstsw
cmp
mov
mov
mov
cld
setne
sub
scas
imul
xchg
sub
sarl
ud0
sbb
dec
imul
icebp
jmp
pop
push
into
shrb
mov
jbe
cld
mov
cmp
xchg
pop
adc
push
mov
push
dec
out
and
pop
sbb
or
xor
decl
sarl
dec
dec
stc
xor
jae
int
shl
pop
jl
lahf
enter
sar
push
pop
inc
pop
mov
sbb
mov
jg
jmp
push
sbb
idivl
inc
xlat
dec
icebp
push
mov
sti
and
pop
jnp
pop
sahf
push
ret
icebp
pop
aaa
cli
ljmp
test
jno
mov
xchg
jae
sti
loopne
or
cmc
inc
push
add
clc
xchg
sub
adc
cmp
enter
mov
lret
adc
and
sbb
xlat
stos
jns
jle
int
mov
decl
push
sbb
jp
or
incl
loope
cmp
adc
xlat
lods
inc
imul
sub
fimuls
aaa
es
incl
sbb
insl
cld
cmp
jne
jge
jae
pop
ds
inc
adc
lret
xchg
jg
dec
jmp
stos
rol
push
and
insl
cmp
sbb
lea
sbb
jbe
decl
cwtl
ljmp
sub
xor
inc
jg
dec
enter
loopne
lock
cmp
pop
jecxz
sahf
or
pop
icebp
dec
mov
jns
dec
jne
jno
loop
sbb
ljmp
test
mov
push
leave
shl
repnz
out
mov
gs
lret
xorb
ret
cmp
out
adc
or
xorb
fistps
xor
mov
imul
push
ret
mov
cmpsl
mov
insb
lret
jb
mov
lret
and
lea
cltd
stos
cmp
jl
adc
decl
pop
or
sahf
cmpsl
iret
adc
sbb
rorl
add
jecxz
jno
leave
push
or
mov
shll
sbb
orb
xor
cmpsl
sbb
in
das
loope
adc
pusha
shrb
out
dec
outsb
sub
stos
mov
pushl
imul
pop
xchg
std
loop
jbe
push
popf
xor
jl
ffreep
cs
pushl
add
mov
adc
xorb
int3
mov
idivb
ljmp
repnz
and
push
inc
insb
ret
xor
sbb
adc
daa
cmc
adc
pop
hlt
call
into
dec
insl
push
and
cmpb
inc
xor
sbb
push
jg
sarl
and
push
loop
add
adc
xor
repz
in
fsubrp
lcall
lds
testb
out
push
ljmp
les
test
mov
xlat
shrl
popa
adc
movsb
push
xor
add
jmp
aaa
sub
mov
sub
adc
jne
lock
xor
imul
sub
lods
xchg
ja
push
movsl
aam
pushl
or
and
in
mov
cmp
sbb
test
push
sub
lcall
mov
inc
aam
data16
add
push
sub
inc
enter
out
nop
lock
test
inc
cs
lcall
push
xor
add
xchg
sub
div
fucomip
push
jo
lea
leave
sahf
sub
fsubrl
cmp
mov
pushl
mov
push
gs
outsb
or
test
cld
daa
loopne
sub
loop
icebp
in
ljmp
jo
sub
imul
sub
popf
sarl
push
push
and
sbb
push
cwtl
push
int
push
jmp
int
mov
xor
andl
adc
rorb
jmp
or
pop
aam
jo
or
add
or
inc
jae
repnz
pop
and
insb
mov
fwait
or
das
ja
mov
movb
insl
inc
cmc
jmp
ljmp
pslld
adc
mov
test
es
cmpsl
repnz
mov
xor
or
or
sub
fsubr
mov
adc
inc
scas
xor
outsb
push
inc
ret
cmp
add
or
add
sub
jg
lods
outsb
and
xor
add
ds
push
sbb
outsl
loopne
cmpsb
fimull
pusha
jns
adc
outsb
add
aas
sti
int3
push
cmpsl
cli
xor
cmp
inc
fs
and
add
scas
ffreep
call
sub
xchg
and
cmp
out
mov
sbb
jae
adc
mov
dec
aaa
stc
cs
pop
cmp
mov
pop
xchg
lret
out
mov
xor
xchg
daa
lods
adcl
sub
and
cmc
inc
or
add
fidivs
out
hlt
mov
dec
jo
add
push
subl
movsb
lcall
adc
dec
clc
pushl
das
adc
sbb
cmc
enter
add
xor
clc
ljmp
loopne
out
pop
jmp
xor
push
aas
mov
dec
xchg
std
cmp
or
inc
dec
jne
cwtl
add
lcall
fadds
or
and
xor
inc
inc
push
iret
xchg
or
call
jno
cmp
jg
jg
inc
cmp
aam
mov
mov
fwait
adc
ljmp
js
roll
and
sub
xchg
mov
outsb
test
ds
sbb
and
clc
push
icebp
mov
or
jle
std
in
push
mov
ffree
push
push
ja
adc
sub
sahf
xchg
or
push
loop
ficoms
testl
xchg
or
jle
int3
mov
adc
or
loope
jle
or
add
cmpsl
les
adc
ret
push
sbb
jge
mov
setb
sbb
shlb
pop
pusha
jae
rcll
das
add
mov
xor
push
sbb
dec
mov
adc
ljmp
cmp
sbb
adc
lret
incl
jl
out
adc
aas
add
pop
stos
daa
pop
lahf
xor
and
das
pop
jg
pop
call
into
enter
dec
push
ds
add
daa
pop
stc
mov
ljmp
ljmp
mov
das
mov
pop
cvtdq2ps
mov
das
mov
add
dec
call
jecxz
and
fisttps
ss
out
mov
sbb
cmc
incl
cli
adc
push
mov
inc
xchg
or
pop
lcall
fwait
dec
cmp
cmpsb
push
mov
js
push
mov
ret
mov
xchg
add
or
inc
incl
popa
push
jno
sbb
decl
jno
lock
mov
xor
push
dec
mov
int
jo
jg
hlt
sub
pop
xchg
stc
repz
adc
pop
push
adc
inc
andb
sbb
pop
push
or
out
jns
jnp
mov
add
push
cmpsl
xor
inc
inc
inc
rcrl
movsl
out
jecxz
jg
push
or
inc
pop
or
add
ret
xor
jns
cltd
mov
mov
movsl
lcall
pop
decl
js
mov
sahf
pop
fidivrl
call
push
mov
fs
mov
inc
sbb
xor
das
stos
int3
int3
xor
loope
aad
cmp
sbb
std
adc
mov
popf
cli
decl
push
fld
inc
xor
inc
jecxz
fiaddl
lock
mov
stc
push
nop/reserved
in
jg
push
pop
jmp
int3
cmp
stos
scas
mov
fstl
scas
lret
loopne
incl
ss
ret
push
xchg
sub
loope
xchg
jle
in
fdivr
in
js
adc
lock
lret
xor
leave
dec
adc
inc
xchg
cwtl
call
jg
bound
mov
adc
aad
add
adc
sar
mov
test
iret
in
shr
imul
rcr
sub
imul
pushl
or
shrb
xchg
or
sbb
pop
add
add
mov
mov
cmp
and
dec
xor
lret
ja
mov
push
cltd
mov
decb
or
jo
push
jg
clc
mov
fdivr
mov
mov
add
mov
or
bound
or
ja
sahf
shll
mov
push
lahf
jmp
xor
decl
pushl
dec
mov
mov
test
or
outsb
int3
xor
and
adc
mov
dec
mov
fdivp
ljmp
jne
adc
data16
lahf
mov
cwtl
mov
push
ljmp
addr16
mov
aam
mov
or
push
xor
outsb
push
sbb
dec
scas
mov
movsb
push
pushf
cs
fbld
sti
outsb
nop
jle
fcmovb
mov
ja
cmc
push
sarl
sbb
scas
pop
add
mov
jecxz
mov
sbb
stos
push
mov
push
sub
int3
fbld
sub
cmp
aaa
loopne
jmp
cmc
rcrl
sub
inc
push
into
mov
mov
outsb
xchg
lods
xlat
fs
push
xchg
cmpsb
or
out
push
xor
inc
xchg
jge
outsl
sbb
popf
sub
addr16
fcomip
jg
xor
popa
xlat
xchg
sbb
push
jns
sub
and
in
mov
rcr
cmc
push
lret
pop
sbb
into
inc
repnz
aam
and
fisttpll
cld
js
mov
js
inc
xchg
sub
add
call
cmp
rcrb
jne
xor
pop
push
in
push
sarb
pop
cli
gs
es
fs
inc
pushl
pop
leave
fbld
dec
movl
jge
rcr
rolb
push
mov
sub
adc
pop
pop
rcrl
jns
adc
sbb
call
std
mov
fisubs
sub
frstor
push
adc
fucomip
inc
sub
fldenv
mov
dec
fnstcw
clc
xor
icebp
cwtl
or
jg
popa
xor
daa
pop
adc
iret
lods
ja
mov
xor
sbb
jmp
cmp
stc
or
int3
pop
cmp
pop
das
movsb
stos
cmp
or
push
pop
das
incb
dec
movsb
jg
inc
pop
pop
and
mov
add
mov
jmp
ret
mov
pop
push
cmp
jl
jo
mov
ljmp
xor
xchg
pextrw
js
aaa
sub
sbb
outsl
filds
mov
push
inc
xor
mov
or
push
xchg
add
sbb
ss
jp
sbbb
push
pop
mov
and
ljmp
sub
xchg
push
xor
xor
cmp
jae
push
adc
decb
outsl
mov
or
and
dec
mov
mov
push
data16
cmpsb
add
scas
insb
test
xlat
jmp
pusha
jbe
xchg
sbb
xor
daa
adc
push
mov
mov
jg
dec
rorl
ljmp
xchg
mov
mov
jge
cmpsl
mov
stos
shll
add
clc
decl
hlt
xor
int
xchg
adc
sbbb
test
cmpsl
loopne
pop
cmp
jae
push
xor
pushl
imul
xor
mov
ret
xchg
jae
add
lods
iret
jmp
dec
mov
ljmp
xchg
sbb
push
cmp
mov
sbb
lcall
andb
popa
pop
test
sbb
jo
mov
lret
xchg
inc
cmp
mov
aaa
lret
mov
cwtl
imul
inc
jp
ss
xor
or
cmp
data16
jg
and
fdivrs
push
push
hlt
jg
adc
mov
jg
mov
xor
xchg
xor
fwait
sbbb
jg
stos
pop
movsl
pop
sbb
call
adc
sub
mov
cmp
bound
jae
pushl
mov
sub
int3
pop
popa
orb
ja,pt
jo
lahf
or
int3
ljmp
pop
jmp
pop
shr
popa
cmp
jg
mov
int
or
sahf
add
sbb
nop
daa
pushf
push
xor
imulb
inc
lea
jns
xchg
loope
jge
cmpsl
cmp
incl
mov
ds
jae
orl
xor
or
sbb
jo
mov
add
pushl
aam
stc
inc
dec
enter
rep
xor
add
scas
jmp
mov
ret
lock
mov
imul
fwait
xchg
nop
mov
cltd
mov
mov
test
int
mov
sub
dec
xchg
scas
fdivs
jle
jnp
stos
adc
incl
sete
sbb
leave
xlat
or
dec
pop
lahf
gs
mov
or
pop
jg
mov
push
mov
xor
decl
xor
mov
dec
inc
rcll
or
hlt
pop
aas
jecxz
cmp
inc
cltd
test
movaps
or
dec
popf
xchg
orb
mov
incl
sub
stos
xchg
cld
inc
loop
outsl
movsb
mov
loop
mov
inc
jmp
out
push
mov
pop
test
sub
ja
ljmp
out
popa
fnstenv
mov
pushl
jae
and
stc
pop
mov
xor
xchg
outsl
adc
sbb
inc
mov
jp
inc
outsb
sbb
lea
leave
jae
nop
xchg
sbb
gs
mov
sub
xor
add
aam
cmp
sti
test
adc
cltd
insb
test
jnp
bound
lea
lret
jp
push
subl
sub
add
xchg
je
out
dec
dec
arpl
add
loop
stos
inc
push
mov
jnp
sbbb
fwait
mov
xchg
adc
pop
jg
xor
mov
aas
push
pushf
inc
lds
mov
mov
mov
lret
mov
out
scas
mov
mov
xor
loope
sub
in
ja
dec
orl
and
pusha
mov
les
fnstenv
or
push
inc
jecxz
xor
sub
rclb
dec
lcall
sahf
lahf
std
xchg
aaa
fdivl
jg
pop
sub
pop
mov
mov
mov
xor
push
scas
sbb
xchg
xchg
cmp
decl
sub
stos
das
sub
fisubs
sbb
lods
xor
pop
sbb
mov
or
pop
mov
lcall
mov
leave
repz
ljmp
movsb
cmp
and
pusha
cmpsl
cmp
outsb
aaa
ljmp
mov
aas
mov
outsl
ret
arpl
call
les
out
mov
data16
or
sub
loopne
mov
sbb
jge
cvtpi2ps
push
fwait
icebp
dec
int
xor
les
mov
sub
adc
xor
fidivs
popa
mov
adc
pushl
inc
or
mov
clc
fwait
pop
incb
pop
pop
cmp
pop
adc
mov
pushl
or
pop
mulb
cmp
jge
xchg
mov
adc
add
cmp
test
leave
les
adc
out
lcall
cs
clc
ljmp
shrb
mov
cmp
repnz
decl
scas
mov
fwait
cmp
testl
lods
aad
decl
loope
inc
or
inc
popl
bound
mov
dec
inc
xor
decl
mov
push
dec
aaa
dec
lods
dec
mov
or
movsl
out
push
jbe
xor
jae
lcall
jb
daa
fcmovbe
pop
gs
ljmp
adc
add
int
incl
pop
mov
adc
loop
jnp
cli
shll
dec
adc
cmp
cmp
inc
rorl
and
jmp
jg
pop
mov
cmpsl
fsubrs
jno
push
data16
rolw
or
cld
lcall
add
addl
mov
and
test
inc
sub
pop
add
stc
jg
inc
xor
lea
or
adc
sub
aad
pop
pop
int
repz
ror
add
in
cmpsb
adc
out
dec
jl
lock
mov
outsb
mov
clc
fildll
aam
adc
ds
cmp
int
ror
aaa
cmp
push
addb
add
mov
cld
cs
stos
or
and
xchg
or
fistpl
mov
sbb
jns
test
add
das
clc
lock
xor
aad
inc
lret
adcl
loop
or
leave
sbb
leave
sub
mov
dec
inc
push
ret
cli
aas
loopne
ss
inc
mov
leave
filds
jb
and
adc
dec
jmp
mov
add
xor
les
test
and
cmp
pushf
mov
mov
aas
jno
add
rcr
or
pusha
xchg
sub
cli
repnz
sbb
pop
loopne
sub
jle
push
test
adc
inc
insl
mov
fbld
test
xor
pop
cmp
jmp
je
mov
sub
jg
or
fcomip
dec
or
or
and
and
decl
add
or
xchg
cmp
sub
ret
dec
test
xor
cld
incl
sbb
push
lods
ret
out
insl
xor
xor
dec
push
test
or
int
push
adc
popa
mov
and
ljmp
cld
pop
into
inc
mov
add
mov
rcll
add
mov
inc
test
lcall
fwait
jo
jl
jp
adc
adc
mov
subl
sbbb
rcrb
incl
xor
ret
push
inc
mov
imul
mov
adc
rolb
jns
jle
xchg
je
sbb
cmpl
fbld
cltd
idivl
push
sub
ret
or
fistpll
cmpsb
mov
xchg
lea
mov
in
jle
cmc
mov
xchg
lcall
add
lock
sbb
inc
cmp
add
loop
or
decl
mov
push
fdiv
cs
inc
push
mov
fwait
sbb
movntq
out
decl
push
adc
inc
or
cmc
push
aaa
push
xor
add
inc
fwait
lock
sub
cmp
adc
cmp
dec
mov
and
ss
add
jg
sub
push
add
sub
add
ficomps
ds
decl
push
jl
jp
and
pop
xor
in
jg
push
call
in
add
jp
or
lods
or
push
sti
jg
call
ss
arpl
jge
aaa
cmp
movsl
and
push
inc
xor
jg
cmp
adc
das
aas
lods
lods
push
cwtl
jo
add
cld
jg
ja
aad
xor
cli
sti
pop
cmp
mov
dec
mov
push
sub
in
das
push
sub
push
adc
cmp
pop
pop
push
jbe
ret
pop
ja
and
xchg
xchg
add
pushl
mov
or
mov
jg
mov
dec
daa
fs
xchg
outsl
pushf
or
push
jecxz
pop
xchg
popf
sarl
jno
add
roll
cmpsl
inc
sbb
inc
mov
pushf
inc
sbb
adc
lcall
dec
mov
in
lahf
add
push
mov
pop
inc
decl
jp
mov
in
push
dec
adc
xchg
pop
sub
jae
mov
sub
stos
pop
xchg
pop
ja
adc
dec
sub
dec
fdivr
jg
mov
push
loop
jo
mov
popa
xchg
jae
add
nop
and
push
decl
stc
ss
lret
cmp
pop
cli
dec
sub
hlt
outsl
incl
js
scas
test
lahf
jne
pushf
rorl
jg
adc
jmp
and
inc
aas
popa
sub
cmp
aas
jns
jmp
xchg
popf
stc
dec
clc
add
aas
or
add
lods
mov
imul
mov
pop
cmp
fisubl
push
scas
mov
sbb
mov
test
xchg
cli
rorl
sti
flds
push
sub
xor
xchg
xor
cmpsb
jle
mov
dec
or
mov
mov
repz
and
or
jge
mov
xlat
xlat
lcall
jl
nop
jnp
pusha
sub
jge
sahf
pop
or
inc
jb
bound
jb
in
mov
mov
push
mov
icebp
xchg
popf
sub
sbb
or
push
push
or
push
push
pop
cmc
decl
or
repnz
sbb
xchg
mov
jp
stos
lcall
jle
dec
test
xchg
pop
aas
jo
inc
sbb
push
icebp
repz
dec
movsl
sbb
jle
cmp
adc
popf
popa
push
clc
add
cmpsl
in
xchg
adc
loop
add
clc
andl
xchg
inc
jns
jae
mov
adc
sbbb
cs
add
add
pop
shr
push
out
cmp
xor
lcall
aam
push
mov
cmp
or
pop
jbe
jae
cmp
stos
push
andw
pop
xor
aaa
mov
push
pop
or
lcall
xchg
sub
dec
outsl
xor
add
fimuls
pop
xchg
adcl
sub
push
mov
ror
lcall
jle
lds
es
dec
sbb
sub
stos
mov
call
rclb
incl
xor
sub
xor
fwait
pop
cmp
pop
mov
push
add
mov
xorb
sub
pop
lcall
adc
out
push
sahf
inc
add
mov
inc
bound
xchg
dec
cmp
mov
incl
xchg
and
out
pop
ljmp
lea
or
in
ljmp
out
push
fidivs
lcall
mov
pop
add
cmp
nop
push
add
jne
dec
popa
cmp
std
adc
mov
sbb
push
dec
cwtl
add
pop
xchg
je
pop
xor
jae
and
decl
push
dec
push
inc
daa
mov
sbb
roll
push
adc
or
aas
xchg
fiaddl
push
push
gs
jmp
in
int3
push
sbb
mov
or
dec
jp
vmovaps
dec
adc
sbb
add
and
jecxz
dec
lahf
mov
sub
mov
mov
add
and
out
incl
stos
inc
mov
ljmp
jg
xchg
loope
aaa
sbb
dec
and
push
fidivrl
out
scas
cli
mov
adc
sub
out
mov
lret
dec
inc
addb
push
in
add
cmp
xor
dec
cmp
and
arpl
std
mov
sub
sbb
inc
inc
lods
stc
cmp
in
dec
gs
icebp
mov
or
and
pop
pop
adc
repnz
adc
out
mov
pop
adc
fcomip
sahf
jb
mov
lret
dec
ss
inc
imul
movsl
jge
popf
jle
lcall
xchg
push
mov
pop
xchg
pop
mov
mov
adc
adc
outsl
cli
lcall
xor
hlt
test
lcall
cmp
jae
ljmp
xor
jae
xchg
xchg
add
and
pop
or
ret
push
mov
decl
aas
pusha
in
lock
cltd
push
adc
add
pop
xchg
push
sub
aam
or
stos
aas
loopne
lea
outsl
fimuls
mov
mov
fdivp
mov
inc
pop
int
bound
out
out
sub
pop
pushf
cltd
xor
cmp
add
fucomip
je
lea
pop
jg
shrl
sub
hlt
test
andl
xchg
pop
sbb
xchg
mov
popa
cwtl
sahf
sbb
imul
jno
jg
loopne
push
orb
dec
sub
cmp
push
mov
repnz
or
fiadds
scas
pop
dec
outsb
out
cld
inc
cmp
mov
jbe
dec
int3
fsts
pusha
add
fwait
or
insl
or
in
ss
mov
aaa
xchg
add
stos
or
cmpl
adc
push
dec
jae
incl
fistps
and
lahf
sbbl
out
push
inc
or
das
aas
clc
pushl
test
cmp
inc
callw
sbb
push
adc
cmp
mov
ljmp
lock
pop
stos
outsl
scas
add
fs
cmpsl
outsl
adc
imul
mov
daa
fs
fisttpl
jp
sub
repz
sub
les
lcall
inc
pop
add
sub
mov
or
dec
ret
pop
and
xchg
xchg
dec
mov
mov
movsl
sub
xchg
inc
mov
or
rorl
adc
inc
jg
push
fistpll
incl
jp
cs
add
dec
and
sbb
pop
and
incl
jl
jp
pop
call
std
jb
aas
clc
push
jbe
or
pop
dec
add
jo
lcall
add
sub
and
jg
sub
dec
sub
or
dec
and
pop
sbb
ds
outsl
cli
cmp
insl
add
movsb
add
jle
xor
push
jge
sbb
or
in
inc
add
jg
js
rcrb
pop
push
and
inc
and
add
pushf
sbb
inc
pop
xor
call
sub
sub
dec
adc
pushf
test
xor
std
dec
insb
sbb
aas
xor
icebp
inc
adc
frstor
ret
lret
xchg
pop
leave
dec
inc
daa
int3
xlat
mov
lcall
movb
sub
insl
dec
jl
test
push
pop
mov
jg
and
icebp
xor
insl
inc
lret
lcall
dec
jae
jns
sub
jo
lds
xchg
push
inc
jne
push
test
out
lcall
push
add
inc
inc
inc
xchg
and
pop
pop
les
out
loope
out
adc
xchg
clc
sub
push
push
ret
arpl
sub
shll
dec
sub
fildl
loopne
dec
mov
dec
or
pop
cmpsl
cmp
xor
adc
jmp
jge
iret
pop
subl
js
movsl
lods
xor
inc
cmp
sbb
mov
incl
in
adc
pushf
out
js
mov
mov
fdivs
xchg
mov
jmp
sub
cld
or
jmp
into
outsl
gs
or
xchg
test
xor
outsb
pop
xor
mov
mov
cmp
arpl
adc
xchg
sahf
sbbl
stos
test
int3
in
aaa
loopne
adc
ds
and
sbb
and
sub
jg
out
loopne
dec
sub
dec
nop
cwtl
mov
or
mov
jnp
fistpll
mov
ljmp
and
lcall
faddl
outsb
cmp
inc
outsl
clc
decl
fildll
and
dec
xor
jmp
gs
mov
and
mov
dec
dec
addb
and
mov
xor
cmp
mov
jge
mov
inc
push
fstl
lahf
and
ret
pushl
aaa
es
jle
sbb
add
mov
pop
dec
adc
ljmp
out
aaa
loop
js
mov
dec
or
cld
mov
mov
loop
inc
cmp
or
out
jo
xor
dec
mov
lcall
add
xor
push
xor
pop
or
sbb
inc
out
les
decl
addb
push
mov
or
sbb
outsl
out
push
mov
pop
stos
mov
ret
jg
scas
or
mov
jl
aad
in
in
inc
jge
push
mov
jmp
sahf
xchg
lret
adc
out
iret
pop
mov
dec
call
inc
cmp
iret
cmp
push
mov
cmpsb
mov
popa
gs
xchg
pop
ret
lock
fcoml
cmp
adc
cmp
sbb
add
gs
push
dec
sub
mov
sbb
decl
push
jle
rclb
call
sbb
sbb
lcall
mov
sbb
clc
sbb
adc
mov
pushf
testl
or
push
add
lahf
xchg
ljmp
shrb
sub
loop
outsb
clc
mov
cmpsb
aad
mov
ss
lock
fmull
das
fistl
xor
jae
sub
inc
outsl
clc
or
add
roll
push
add
arpl
orl
shll
clc
lcall
sti
inc
mov
or
or
dec
movsl
out
lcall
fsubl
cli
mov
adc
aas
lds
pop
lcall
aas
and
cmp
sarb
lcall
bound
mov
out
jno
or
mov
lcallw
sub
incl
pop
pop
mov
pop
mov
pop
inc
sbb
pop
dec
enter
out
rorl
add
outsl
cmpsl
adc
aam
stc
addr16
push
imul
dec
jo
decl
sub
shr
inc
push
popf
aas
lock
jae
iret
xor
mov
inc
mov
call
data16
cmp
cmc
sbb
aad
sbb
fiadds
nop
push
sbb
sar
jp
cmpsl
iret
outsb
jg
push
xor
adc
ffreep
jae
push
in
and
call
sub
pop
xchg
sarb
dec
xor
jno
mov
es
clc
xchg
jg
jg
push
and
cmc
add
push
dec
jb
xor
inc
sub
jmp
push
pusha
jmp
mov
xor
pop
popf
int
pushf
push
mov
lret
jae
mov
jg
cmp
xchg
repz
lcall
aas
fcomip
stc
pop
jbe
xor
pushf
mov
adc
sbb
lcall
inc
jmp
pop
xchg
xchg
andl
jb
sbb
andb
or
push
dec
mov
and
sub
out
add
mov
js
test
sarl
add
cmp
push
mov
inc
ss
xor
stos
jecxz
ljmp
or
lret
cmp
sbb
sar
dec
pop
pop
cmp
adc
jg
jcxz
cwtl
inc
sub
test
xchg
sub
jb
bound
repnz
mov
dec
aaa
dec
or
add
mov
add
lret
sbb
push
sub
mov
cmp
inc
scas
inc
sbb
arpl
cli
pop
cmp
decl
cli
push
adc
iret
add
pusha
sbbl
decl
sub
jmp
push
mov
daa
or
jg
ja
mov
jo
sbb
jo
fs
xor
adc
test
loop
rclb
push
repnz
imul
jg
jg
ds
mov
and
js
scas
xor
jnp
lcall
lret
push
add
jo
cmpsb
xchg
iret
jmp
imul
adc
fs
mov
inc
imul
mov
push
and
mov
outsb
jnp
push
int
add
outsb
xor
sbb
mov
jp
sbb
hlt
or
push
sub
mov
or
decl
dec
lods
and
pop
adc
test
dec
pushl
or
xor
in
fadds
cltd
es
cmp
push
xor
cmp
xchg
jle
stos
push
nop
fcomip
inc
push
cmp
xor
push
pushf
sti
outsl
xor
push
ret
fdivp
add
push
and
popa
pop
adc
sbb
jg
sub
jg
test
pop
imul
jbe
daa
pop
mov
aad
out
push
mov
push
or
mov
fbld
or
dec
dec
pop
jg
cmp
add
bound
out
mov
aad
sti
bound
or
popf
test
gs
imul
arpl
fdivr
sbb
lahf
cltd
mov
arpl
cwtl
popf
lods
xor
or
push
imul
out
icebp
jb
or
cmp
and
or
pop
or
outsb
push
inc
insl
dec
enter
ficoml
xor
and
pop
icebp
jmp
push
dec
test
jno
jo
jo
fstpt
ret
ficomps
aad
xlat
dec
aaa
push
adc
mov
mov
fmull
pushf
mov
dec
out
xor
decl
fs
xchg
mov
jg
push
into
loopne
int
xor
xlat
ljmp
aaa
push
adc
sarb
sbb
sbb
inc
sbb
ljmp
dec
clc
mov
mov
xchg
pop
or
std
decl
push
dec
js
sbbb
dec
dec
fists
jns
out
inc
sahf
sub
loop
mov
jge
xor
inc
andl
fwait
repnz
fbld
shlb
add
das
leave
imul
mov
ja
inc
or
cmp
test
pop
mov
mov
ret
and
xchg
add
pop
cld
ljmp
in
scas
mov
xor
jb
push
scas
fnstenv
mov
pushl
cmp
inc
repnz
test
add
cs
sbb
and
out
pop
lcall
add
dec
dec
jns
sub
adc
clc
in
xlat
dec
inc
dec
mov
inc
sub
rcrb
or
int
push
adc
ret
or
sahf
adc
add
repnz
jg
movsl
pop
pop
mov
int3
je
add
iret
sbb
enter
mov
dec
cli
ret
sbb
daa
mov
inc
leave
mov
call
pop
sub
pop
or
stos
and
ljmp
xor
push
jecxz
add
jg
jns
pop
inc
inc
add
inc
dec
or
inc
cmp
out
loope
mov
or
outsl
fwait
int3
sbb
dec
sbb
repnz
mov
rcr
push
adc
jnp
sbb
sub
aad
std
lret
jge
mov
jnp
jns
data16
shrb
std
lcall
aas
pop
xlat
lret
mov
xchg
fstpl
pusha
and
sbb
fsubl
xchg
mov
stc
push
push
ja
dec
fs
pop
fchs
pop
cmp
sub
sub
and
add
pop
decl
inc
movlps
inc
adc
adc
fisubs
lahf
cmp
out
adc
push
jo
cmc
push
push
clc
fbld
sbb
outsl
clc
fisttps
sbb
mov
jno
add
out
sbb
hlt
add
jg
icebp
jae
mov
cmp
jg
pop
icebp
filds
add
pusha
xor
mov
jmp
test
sub
popa
adc
inc
in
push
mov
jg
incl
xor
popa
cmp
clc
rolb
outsb
inc
xor
xor
inc
push
jg
cmc
incl
pop
repz
mov
mov
cmp
adc
pop
es
push
mov
and
dec
cli
stos
movsl
fcomp
ret
jle
pop
push
sti
jp
jmp
mov
adc
jecxz
add
cmp
insb
mov
jecxz
sbb
mov
adc
mov
imul
aad
push
push
pop
add
incl
test
xlat
shll
or
int
pushl
mov
es
leave
jns
push
mov
sbb
pop
add
fwait
and
cmpsl
imul
faddl
cmpsl
iret
inc
sub
pop
cmp
jmp
std
push
jae
jge
mov
pop
neg
push
sbbl
fldl
cmpsb
repnz
jmp
xor
stos
and
into
dec
xor
pop
add
jmp
push
pop
xor
push
outsl
packuswb
fstpl
rol
rcrl
sub
or
inc
adc
sub
cmpsb
lock
inc
mov
push
add
jae
mov
sub
aas
cs
decl
jmp
jae
or
dec
cld
out
xor
cmp
hlt
in
out
scas
adc
int
push
and
sub
lea
mov
pop
gs
inc
ds
lods
dec
idivl
aas
arpl
fisttps
aad
and
jb
jb
jg
xor
push
jg
daa
sub
lret
mov
push
xor
pop
flds
cmp
mov
dec
daa
lret
outsl
addl
and
sub
and
mov
pop
pusha
pop
push
lahf
fwait
ret
pop
sub
pop
es
shl
outsl
mov
cli
aaa
jmp
outsl
jl
inc
out
popa
mov
mov
pop
pop
sarb
and
sbb
outsl
add
push
movsl
andl
cmp
iret
pop
push
mov
ror
or
dec
sub
aaa
push
test
ja
jbe
out
pop
jo
jecxz
adc
or
jmp
test
inc
jno
pop
enter
cmp
lahf
adc
push
punpckhbw
jecxz
cmp
aaa
loop
outsl
fldcw
or
or
ss
mov
and
push
pop
lock
cmpsl
out
filds
insl
cld
outsl
sub
and
add
rol
push
add
push
jo,pt
js
or
aas
hlt
rorl
push
ljmp
stos
jb
mov
or
add
push
repz
cli
popf
cmp
int3
or
sub
mov
shl
adc
ret
popf
outsb
ja
adc
filds
stos
out
decl
sub
sahf
pop
mov
cs
add
mov
loopne
repz
push
pop
out
adc
shlb
or
adc
sti
arpl
add
add
lock
inc
jns
mov
jge
add
stos
jmp
inc
lret
out
js
mov
lret
ljmp
fdivrs
pop
es
mov
mov
cmp
outsb
jle
mov
pop
and
aas
dec
ret
cmp
add
shrb
jno
add
roll
mov
adc
shl
cld
out
fidivs
rcl
push
adc
daa
hlt
adcb
fildll
fadds
xchg
mov
imul
or
mov
sub
pop
shll
out
pop
jno
inc
lcall
adc
dec
and
rcr
shl
decl
sub
and
mov
movsl
cmp
rorb
pop
ljmp
in
fmuls
sub
sub
inc
mov
add
mov
sbbb
pop
cs
outsl
jmp
cmp
jecxz
jge
mov
mov
sub
push
dec
aaa
sbb
fcompl
dec
jmp
xlat
sahf
add
or
mov
sbb
adc
imull
add
cli
mov
insb
cs
cmp
gs
xor
xchg
mov
xchg
loop
inc
cmp
xor
decl
pop
cmpb
add
push
dec
adc
int3
inc
sbb
add
push
out
call
add
inc
sbb
stos
or
sub
push
sbb
call
out
and
aas
ljmp
hlt
sub
gs
stos
incl
mov
in
push
xor
adc
jl
inc
cltd
repnz
push
pop
js
sub
out
out
daa
adc
jg
add
xlat
outsb
cmp
push
xchg
sbb
cld
jnp
jp
mov
sbb
pop
jmp
pop
or
cmp
xor
pushl
xchg
out
sub
xchg
push
dec
out
inc
mov
es
pushl
ja
add
fidivs
inc
add
lods
or
sarl
dec
and
aad
mov
loop
and
add
std
pop
mov
cmp
daa
cld
lcall
pop
mov
mov
outsb
add
adc
mov
decl
push
dec
adc
add
and
xor
cmp
std
fisttps
push
pop
sar
pop
addb
cmc
sbb
inc
xor
decl
mov
das
sub
movsl
movsl
ret
push
outsb
mov
add
repz
jg
decb
jl
fisubl
cmp
jge
adc
push
sidtl
jge
dec
mov
hlt
adc
sbb
sti
jecxz
inc
stos
pop
mov
daa
jle
mov
sub
inc
enter
std
dec
add
and
mov
sbb
pop
sub
or
bound
pop
cmp
aas
mulb
xchg
lock
fcmovu
addr16
fdiv
ja
inc
sub
xor
mov
pop
dec
jp
cld
jg
adc
push
push
sub
xlat
les
aad
jne
inc
add
adc
mov
jo
popa
jb
xor
inc
sub
cld
ret
add
add
xlat
mov
dec
add
adc
repz
add
enter
push
inc
push
faddp
ret
add
sbb
test
pushl
push
out
xor
ret
add
outsb
sbb
hlt
inc
sub
add
out
dec
pop
jbe
jmp
inc
es
lret
inc
jne
and
scas
inc
aas
fistpll
cmpsl
push
and
lcall
adc
adc
lea
add
loope
decl
xchg
push
cwtl
shlb
imul
inc
dec
sbb
pop
sbb
jmp
pop
pop
sahf
and
and
cmc
jge
push
jb
lret
or
push
in
jg
sub
pop
fildll
cmp
pop
and
cmp
or
inc
outsb
sub
inc
push
or
sub
push
out
mov
sbb
inc
push
mov
out
inc
aas
jbe
popf
mov
decl
push
adc
in
pop
scas
adc
pop
pop
sub
jno
sub
fnstcw
push
jle
into
outsl
push
int
sbb
and
adc
bound
lcall
or
dec
xor
fmull
jecxz
jmp
or
pop
fs
gs
pop
dec
cmp
jno
xchg
paddw
cld
jge
daa
out
sub
cmp
int
jae
fisttpl
in
lret
and
pusha
inc
cwtl
cmpb
dec
ja
sbb
cs
add
or
cmp
add
call
lcall
xchg
movsl
rol
jb
outsb
or
add
scas
adcl
aas
inc
pushf
add
dec
rol
xchg
sbb
sahf
cmp
data16
xor
jb
sbb
mov
dec
xor
sub
cld
cmpsb
jmp
je
bound
or
sub
lret
mov
fistpl
fiaddl
cmp
ret
loope
sbb
push
sbb
popl
xchg
std
daa
push
adc
lcall
in
inc
dec
andl
add
xor
aad
filds
pop
mov
cmp
les
test
pop
rcrb
pop
mov
rcrl
pop
push
mov
cmpsb
icebp
ds
adc
jae
pop
adc
cld
out
cld
lcall
pushl
push
pop
mov
xor
fildl
push
ret
in
mov
hlt
call
mov
dec
dec
and
jp
fidivs
mov
jno
or
pushf
cli
test
aaa
rcrl
dec
adc
or
negb
push
ret
es
int3
outsl
dec
jo
jge
xchg
test
adc
lahf
cmp
incb
jle
rorl
xchg
mov
xchg
push
or
mov
int
ja
test
push
dec
mov
mov
add
pushl
jp
ds
dec
and
or
mov
cmpsb
clc
mov
in
aad
icebp
inc
insl
mov
jb
std
dec
sbb
stos
and
cmp
inc
mov
pushf
imul
pushl
inc
pop
xchg
xchg
mov
mov
enter
or
dec
in
push
mov
scas
inc
sbb
cmp
scas
enter
push
iret
movsl
rol
push
adc
mov
cmp
xor
push
fnstcw
sti
add
incl
ja
sub
mov
daa
lock
iret
jne
data16
pop
int3
fdivrs
lock
push
pop
dec
mov
pop
popf
incl
jmp
mov
sarb
popf
mov
sbb
jmp
negl
pushw
shlb
jae
and
jecxz
decb
ljmp
shlb
cmpsl
mov
add
push
push
shrb
mov
bound
arpl
loopne
adc
or
jmp
xor
js
and
imul
adc
icebp
mov
sub
aas
jecxz
ja
cmp
jmp
sub
popf
icebp
outsb
jnp
xor
clc
aad
pop
ret
mov
push
jecxz
add
add
ljmp
mov
pop
pop
xchg
sbb
or
cmp
pop
lret
xchg
pushf
aam
ljmp
gs
add
ljmp
sub
sub
dec
xchg
das
dec
push
add
inc
pop
add
cmp
imul
mov
test
enter
push
cld
scas
out
sarl
mov
xor
out
lcall
or
push
test
mov
testl
call
mov
jbe
push
sub
mov
imul
std
sbb
in
push
push
mov
inc
push
pop
jb
adc
into
lret
push
mov
sbb
sti
lahf
mov
bound
jno
shll
cltd
call
lock
cmp
dec
imul
sub
cmp
pop
lock
aas
testl
cmp
and
xlat
in
adc
jg
jmp
mov
hlt
out
jo
jae
std
xor
mov
and
fsubrp
mov
in
inc
sbb
outsl
mov
sub
scas
cmp
mov
outsb
out
mov
mov
stc
icebp
jo
jl
adc
mov
aas
enter
mov
mov
fistpll
cmp
sbb
mov
int3
push
xor
inc
sub
mov
loope
dec
adc
or
roll
ja
or
mov
pop
int
cld
push
mov
dec
sbb
jecxz
jno
arpl
and
push
xchg
or
jg
adc
xor
hlt
pushf
cmp
das
add
xor
push
in
jae
inc
sub
dec
mov
pushl
jle
arpl
mov
scas
mov
sub
cli
xor
scas
jmp
movsl
sub
add
jb
scas
fwait
shl
and
cvtpi2ps
or
ljmp
or
rolb
outsb
dec
push
arpl
in
lds
outsb
xor
sbb
popa
inc
xchg
adc
xlat
xorl
inc
cmp
mov
pop
jbe
ljmp
or
xor
lcall
xor
outsl
clc
fisttps
addps
xchg
sub
lcall
icebp
daa
xor
and
negb
sbb
lcall
hlt
out
pop
cs
push
or
in
cmp
and
mov
rol
add
jp
pop
sub
and
inc
cli
lcall
inc
repz
lcall
xchg
cmp
dec
mov
push
jo
or
inc
sbbb
add
call
add
adc
mov
clc
decl
dec
sbb
outsl
mov
shrl
std
outsl
push
add
stc
inc
mov
and
xchg
adc
add
scas
mov
add
mov
or
sbb
call
jg
or
ljmp
add
jo
lcall
test
popf
ror
jno
sub
jecxz
out
push
insb
test
aad
jmp
decl
lds
lock
ljmp
movsl
xor
jmp
push
pop
je
xor
or
inc
mov
aam
rorl
js
test
sbb
and
aaa
cld
pop
push
pop
ss
mov
das
lds
mov
pop
lcall
jle
push
sbb
add
or
xchg
fxch
jb
imul
xchg
mov
imul
xchg
int3
lock
jg
or
es
lock
xor
dec
dec
sub
pop
jecxz
ljmp
cmp
fdivs
push
pusha
jb
pushf
lods
fdivp
testl
jno
jno
lock
subl
decl
jg
leave
js
test
xor
push
pop
or
pop
or
or
jns
add
adc
xor
sbb
add
incl
pop
sub
and
out
stc
inc
pop
xchg
and
out
xchg
popa
cmp
cmc
orb
jo
push
rcl
out
push
adc
or
or
int3
sbb
and
xchg
js
fldl
incb
popl
push
bound
lcall
jo
sbb
push
ror
jo
mov
jae
pop
daa
int3
or
mov
add
repz
push
clc
inc
or
rorb
bound
add
fs
pusha
and
repz
or
pusha
mov
cwtl
mov
push
outsl
sub
cli
and
jmp
orl
aaa
cltd
cmp
sub
insb
xchg
in
mov
mov
aam
mov
jmp
and
rorb
jae
aas
lret
and
insb
jnp
sub
mov
jg
push
dec
add
xchg
cltd
mov
and
into
fildll
add
and
inc
xchg
mov
pop
bound
inc
cmpsb
push
test
add
jae
incl
push
pop
adc
add
jb
insl
pop
and
mov
outsb
loopne
add
jg
das
and
outsb
push
lcall
jg
in
ljmp
fistl
fldl
aas
jo
push
test
mov
push
ret
scas
jo
scas
daa
pop
ljmp
mov
cmpsb
mov
std
inc
xor
mov
sbb
andb
rorl
pop
or
pop
ss
std
jle
mov
insl
cmp
push
incl
inc
daa
cmp
ljmp
fisubl
aad
jp
jbe
pop
mov
arpl
inc
inc
cmp
jmp
mov
fwait
push
adc
std
dec
mov
test
pop
pushl
cltd
lret
or
mov
int
sub
sub
or
bound
push
push
aaa
fmul
fistl
push
test
sub
sbb
jg
mov
scas
incl
jge
lds
mov
inc
mov
out
jbe
push
imul
fcomip
pop
push
add
pop
sbb
sbb
add
std
jge
pop
ds
fwait
or
jns
xlat
add
int3
fimuls
mov
dec
sub
cld
stos
add
lock
pop
test
shll
call
cmpb
mov
or
add
pop
inc
xchg
lock
or
or
test
incl
loope
xchg
sub
aas
es
mov
sub
dec
add
cli
jmp
adc
sahf
loopne
fildll
push
sub
inc
or
lahf
loope
test
cmp
insb
sbb
jp
imul
jmp
add
add
daa
mov
jb
pop
pop
enter
in
lcall
mov
add
outsl
mov
push
lahf
push
xchg
ret
jg
or
test
jno
xor
repnz
lods
das
sbb
xor
int
jmp
xorl
push
fisubs
sar
xchg
inc
pop
push
or
inc
cmp
pop
jmp
and
je
pushl
jl
xchg
and
fwait
cs
fiaddl
mov
push
das
dec
in
add
jo
bound
stos
mov
divps
xchg
mov
ror
stos
fwait
xor
sub
lcall
inc
rcrb
push
mov
icebp
jnp
mov
sahf
cmovb
dec
shl
xor
cmc
dec
push
bound
fwait
cmpsb
xor
rol
push
adc
lods
cmp
loope
dec
outsb
mov
fstp
test
inc
pop
sbb
jmp
out
jae
sub
xor
out
shlb
ljmp
fnstenv
push
cmp
cmp
jmp
jle
insl
jae
aas
scas
adc
push
andb
test
aam
jecxz
fcoms
cmp
out
std
aaa
fdiv
test
inc
sub
adcb
aas
push
adc
jl
sub
decl
jecxz
aaa
jge
dec
cmp
les
pop
or
push
mov
jno
inc
adc
out
cli
lcall
faddp
pop
in
addl
sbb
repz
mov
mov
sub
adc
pop
xor
std
icebp
jg
or
ss
jns
pop
movsl
xchg
jmp
dec
add
mov
lret
movsb
test
inc
jg
push
jnp
rclb
push
scas
dec
jmp
mov
or
sub
mov
jle
jge
daa
pushf
stos
daa
test
fidivrs
inc
push
mov
add
fscale
pop
ja
sub
std
mov
cld
add
mov
mov
sub
cld
fisttps
roll
xchg
xchg
push
mov
and
arpl
jo
mov
cmpsl
and
enter
pop
sub
cld
jno
mov
push
popl
pop
dec
adc
add
fsubl
push
popf
mul
insl
adc
inc
mov
mov
sbb
fwait
mov
xor
cs
leave
jecxz
pop
or
dec
inc
cltd
ror
pop
jp
sbb
lcall
test
jae
adcl
outsl
add
cs
bound
push
pushl
mov
roll
fadd
pop
cmp
push
imul
lahf
cmpsb
loope
cmp
jg
push
dec
mov
lret
pop
fisttps
add
clc
fiaddl
and
ljmp
repz
mov
stc
inc
test
push
and
ret
imul
mov
dec
dec
xchg
push
cs
cmp
shr
pop
mov
nop
pop
cmp
cli
aaa
adc
sub
dec
xchg
sarb
mov
push
imul
pop
sub
push
sub
xor
lcall
inc
adc
in
ss
cmp
call
fidivs
mov
push
sub
add
mov
sbb
mov
and
mov
xchg
xor
pop
xor
ljmp
mov
mov
fisttps
mov
adc
bound
jle
pop
push
adc
aas
cli
mov
call
xor
mov
repnz
sub
jge
or
inc
les
xchg
jle
nop
ss
xchg
ds
clc
iret
cs
ds
ljmp
and
push
sub
loop
fcomip
push
jo
in
push
movsb
fiaddl
push
xor
pop
cmpsl
pop
sbb
cmp
out
add
add
jnp
aaa
push
xchg
mov
cld
out
ret
pop
aas
cmpsl
movsl
ljmp
fs
rolb
mov
mov
aaa
stc
inc
pop
push
mov
jg
sbb
cld
or
adc
aam
negl
inc
jp
ds
cs
pop
ror
inc
push
xchg
daa
rol
mov
adc
or
mov
shl
out
lret
jo
jmp
sub
mov
xor
jbe
scas
out
cmp
aas
xor
inc
or
jae
xchg
fsubrs
cmp
lret
and
cmp
cltd
ja
cmp
cmp
leave
repnz
and
data16
mov
xchg
jmp
aas
ds
movsl
adc
inc
sbb
lret
roll
out
jb
es
lds
jg
push
jecxz
sub
jbe
je
pusha
add
pop
cmp
shrl
dec
or
aas
sub
mov
sbb
cld
sbb
bound
cwtl
fmulp
dec
aaa
push
stos
mov
incl
orl
pop
sub
inc
mov
mov
pop
ljmp
inc
mov
jl
filds
pop
add
adc
adc
sahf
lcall
cmpsl
mov
inc
outsb
repz
inc
jg
mov
mov
jno
and
fbld
mov
xchg
ret
push
cmp
ljmp
xor
jle
inc
mov
add
into
insl
cmp
call
push
fidivrl
dec
dec
fdiv
pop
push
in
divb
cmp
pushf
test
add
sub
mov
sub
aad
addr16
loop
jb
or
xor
out
popa
jb
outsl
aam
ret
rolb
inc
sub
pop
or
inc
leave
cmp
fs
add
icebp
push
cld
mov
ss
lds
ja
inc
push
xor
lcall
cmc
pushl
xlat
stc
or
imul
cld
icebp
or
cmp
xor
ljmp
sbb
lds
loop
cwtl
pop
jbe
or
push
xor
fdivr
pop
push
cltd
call
cld
aaa
out
out
adc
sub
fsub
cmp
pop
push
inc
in
jns
leave
loope
add
push
pop
jl
addr16
lret
negb
rcr
imul
fbld
jo
repz
xlat
imul
and
adc
loop
mov
subl
and
cwtl
inc
lcall
data16
sub
mov
out
fwait
inc
push
fst
lcall
lock
xchg
lret
movsb
lahf
imul
pop
je
pop
decl
jmp
mov
rcr
roll
jle
mov
mov
mov
push
mov
cwtl
push
mov
leave
sbb
jb
or
mov
or
cmp
cmpsb
aas
jno
push
cmc
add
mov
xchg
lahf
das
mov
dec
ljmp
imul
xchg
mov
rorb
adc
xchg
clc
scas
decl
bound
fs
or
mov
pop
ljmp
mov
and
les
inc
pop
xor
incl
daa
or
or
push
movsb
mov
test
popa
addl
lcall
out
hlt
add
int
stos
push
roll
adc
cmp
stos
mov
xor
dec
mov
or
pop
lret
mov
mov
decl
cmp
ja
xor
daa
faddl
xor
fidivrl
loop
xor
xor
jo
js
aas
test
dec
push
jmp
xchg
cmp
clc
decl
jmp
jbe
xor
aas
dec
dec
sub
outsb
dec
and
insb
jnp
insb
sbb
incl
pop
push
and
or
sbb
pop
add
sub
inc
cmp
add
jmp
pushf
test
mov
mov
xchg
adc
fwait
pop
popa
cld
sub
sub
std
cmp
sub
sbb
inc
dec
icebp
lods
pop
dec
or
dec
pop
test
cmp
je
icebp
dec
mov
les
inc
sub
xor
lds
pop
es
lahf
iret
xchg
pusha
add
cld
ss
nop
xchg
sbb
mov
mov
incb
pop
and
sbb
sub
dec
or
dec
and
mov
imul
pop
daa
ljmp
and
push
mov
jge
xchg
or
inc
arpl
xchg
sub
sub
mov
adc
lcall
pop
incl
sahf
popf
sahf
push
cmp
mov
cmpsl
das
enter
sbb
rcll
pushl
enter
movsb
and
add
or
push
pop
mov
push
sub
sub
lcall
aaa
inc
and
inc
subl
shrb
iret
add
xor
add
lds
rolb
xchg
and
cmp
push
xchg
sar
or
sbb
pusha
sub
fisubl
fwait
jle
mov
je
roll
adc
add
ja
cltd
jne
ds
xchg
adc
jb
std
mov
mov
pushf
scas
in
and
mov
gs
loope
pop
sbb
xchg
arpl
mov
outsb
das
mov
cmp
mov
call
and
negl
mov
push
lret
ljmp
popf
das
outsl
push
cld
add
or
and
cltd
stos
mov
mov
lcall
cltd
jno
xor
pop
xor
scas
mov
hlt
fisttps
addr16
mov
and
decb
outsl
and
mov
rclb
dec
imul
and
mov
call
aaa
fisttpll
and
or
fbstp
test
mov
aaa
fidivrs
sub
or
jl
dec
inc
add
repnz
fwait
inc
ret
and
jns
cmpb
shrl
scas
aas
or
adc
pop
in
jmp
push
pop
inc
arpl
adc
outsl
xchg
lahf
inc
pop
test
adc
roll
cli
fsub
das
mov
and
repnz
push
repnz
adc
int
hlt
ljmp
enter
adc
in
pop
leave
jo
sti
xchg
hlt
dec
xor
xchg
pop
jns
dec
scas
lahf
and
sbb
inc
pop
xor
popa
pop
push
das
lock
cs
ljmp
mov
repz
and
lods
mov
repnz
jne
mov
loop
sbb
jmp
push
ret
and
das
inc
test
jne
mov
lods
ud0
mov
cltd
sahf
mov
mov
fimuls
add
divb
mov
decl
daa
jb
jns
mov
imul
dec
lods
pop
add
inc
mov
dec
push
mov
sbb
pop
or
xlat
pop
lret
in
leave
mov
outsl
clc
nop
jb
ss
xchg
push
xor
or
pusha
addb
decl
jae
sub
pushf
adc
lds
imul
or
xor
xchg
inc
mov
incl
mov
push
lret
das
cwtl
out
mov
push
cli
pushl
jne
scas
push
mov
dec
xor
call
rclb
fwait
rolb
adc
rcrb
jne
popa
inc
incl
jmp
dec
out
jo
outsl
ss
jno
cld
decl
imul
add
mov
xlat
jns
test
cs
inc
in
fildll
stos
cli
pop
sub
jl
jle
cltd
addr16
push
imul
adc
sbb
push
pushf
fwait
cmp
mov
inc
jo
or
xlat
ljmp
pushl
mov
std
pop
fidivrl
fdivr
ljmp
adc
lahf
mov
push
cmc
push
pop
rorl
cwtl
mov
lahf
lds
sbb
outsl
enter
mov
xchg
rolb
add
sahf
lock
cmp
adc
inc
jnp
adc
ss
add
cmp
pop
jg
adc
aas
sbb
sub
dec
cmp
adc
aaa
push
fiaddl
loope
movsb
push
xchg
xor
inc
jg
test
inc
ljmp
adc
push
fdivrl
jecxz
mov
loop
or
add
int3
inc
xor
or
pusha
pop
or
push
lock
lea
mov
lcall
call
adc
jmp
ret
imul
adc
adc
decb
sub
mov
sbb
and
mov
hlt
cmpsb
mov
cmp
mov
cwtl
fs
jg
out
and
mov
adc
in
fsub
adc
pushl
mov
loopne
inc
mov
aaa
rdmsr
inc
sbb
push
xor
sbb
cmpsl
fcoms
mov
xlat
incl
mov
jbe
aaa
mov
in
inc
dec
add
loopne,pn
lcall
arpl
pop
lahf
push
outsb
push
adc
cmp
aas
lret
pop
push
adc
jmp
mov
inc
adc
mov
fprem
lcall
rcrl
std
lret
push
mov
decl
lret
xor
call
das
dec
mov
cmpb
incl
lcall
inc
cmp
xchg
dec
push
int
xchg
sbbl
pop
add
mov
push
jg
mov
mov
mov
cmpsb
add
arpl
andl
insl
mov
and
es
addl
ja
inc
cmp
xchg
mov
dec
fistpl
adc
fidivrs
mov
push
jo
inc
sbb
daa
in
xchg
push
cmp
cmp
popa
or
daa
sahf
mov
andl
cmpsb
jmp
cmp
dec
test
hlt
das
mov
hlt
add
push
xchg
or
cmp
xchg
sahf
sbb
aas
mov
xor
sub
push
sub
std
cmp
sub
push
scas
sahf
and
pop
stos
xchg
push
push
jle
jecxz
es
sbb
pop
push
add
mov
clc
lahf
adc
mov
sub
test
mov
clc
pop
or
adc
adc
mov
inc
xchg
test
adc
inc
inc
loop
jnp
and
jp
mov
aaa
fsts
shll
inc
insb
xor
mov
outsb
sahf
scas
or
stc
adc
add
mov
or
mov
mov
xchg
jno
cmp
push
imul
mov
sub
inc
stos
iret
aas
xchg
add
pop
bound
sahf
push
out
out
ss
andl
andl
mov
lahf
dec
mov
aaa
test
out
inc
xlat
add
sbb
mov
mov
add
fisubrl
loop
outsl
mov
in
addr16
and
mov
xor
jecxz
sbbl
and
sbb
cld
cmp
ja
xchg
test
mov
stos
sar
decl
das
ljmp
in
inc
stc
push
inc
mov
in
add
mov
pop
push
ljmp
jmp
jb
stos
dec
mov
add
cmp
or
dec
sbb
inc
push
sub
pushl
pop
jg
sbb
jle
outsb
or
int
sahf
ror
jg
pop
std
adc
jb
icebp
pop
push
test
sbb
lahf
stos
sub
inc
loopne
add
xor
xchg
test
pop
xchg
fwait
inc
jg
call
xor
cli
loope
or
xchg
or
lds
fisttps
push
mov
or
cmp
jge
adc
incl
xor
xor
mov
sti
mov
inc
jecxz
fldt
iret
sbb
inc
xor
jg
xchg
sbb
outsl
andb
and
shrl
subb
maxps
jg
xchg
mov
mov
jb
sbb
dec
push
rolb
fpatan
hlt
outsl
mov
and
arpl
insl
jmp
ja
sbb
push
pop
or
outsl
mov
dec
pop
push
stc
dec
push
dec
shl
lcall
cli
fimull
iret
cwtl
jb
stos
push
jnp
pushf
ljmp
jle
mov
and
or
icebp
icebp
pop
ret
js
mov
fsubs
data16
nop
push
cmpsb
xor
push
ret
in
cmp
out
sbb
popf
inc
jmp
lahf
es
ficomps
push
xor
mov
decb
sbb
add
sbb
negb
cmp
pop
push
jmp
jae
popa
xchg
outsl
decl
push
inc
pop
ja
inc
icebp
jo
movsb
mov
stos
in
ret
fstl
sub
in
decb
adc
add
ljmp
loope
cs
cmp
jnp
lea
pop
mov
mov
pop
lock
cbtw
sub
jge
adc
fisubl
ljmp
outsl
cmp
jmp
mov
push
jbe
cmp
sub
or
cmpsl
hlt
adc
push
xor
or
outsb
adc
insb
jns
fs
cmp
dec
jg
filds
fldl
push
cld
mov
push
mov
or
mov
fimuls
fcomip
sbb
add
mov
mov
popa
fcomip
lret
jb
loop
pop
jo
pop
inc
mov
and
daa
rorl
test
and
inc
push
or
out
push
jp
mov
sub
adc
cmp
out
jo
ljmp
inc
cmp
jnp
data16
mov
cld
mov
cld
ficompl
fs
filds
jmp
sbb
cmp
int3
mulb
sbb
pop
popa
inc
jg
push
mov
push
fildll
std
mov
fcomps
dec
add
decl
jmp
ljmp
dec
pop
lahf
xchg
lcall
sbb
push
and
add
dec
adc
cmp
and
dec
push
add
pop
mov
loop
add
sub
in
inc
mov
fidivs
dec
add
mov
jns
sub
and
xor
fildll
push
xchg
jbe
loopne
cmpsb
sarb
lcall
jg
hlt
movsl
rcll
add
sbb
imul
decl
sub
inc
jl
mov
je
subb
fwait
loope
add
pop
dec
jmp
push
roll
mov
push
xchg
sbbb
pop
mov
in
movsb
push
lret
xor
adc
orl
jbe
into
jae
or
push
or
or
jg
sbb
bound
pop
xor
loope
push
pop
jg
jle
xor
ja
mov
clc
xor
jo
mov
pop
shlb
jmp
nop
jecxz
xor
stos
jbe
or
int
rcll
in
setb
sub
popf
clc
dec
jg
push
fnstenv
ja
add
jg
sub
ss
repz
fwait
jg
mov
inc
test
mov
xor
xor
pop
and
jp
add
scas
daa
int
bound
add
cli
push
and
int3
out
jae
cli
sbb
jl
add
cltd
push
push
and
adc
aaa
sub
push
inc
jae
fists
or
sbb
add
inc
xchg
inc
dec
inc
adc
cli
mov
cmp
dec
imul
sbb
or
mov
jns
out
push
icebp
jmp
pop
les
fwait
cmp
mov
inc
cmp
push
jb
rol
fimull
cs
xchg
and
jg
int
cmpsl
or
jg
mov
insb
scas
mov
inc
add
xchg
inc
pop
mov
jne
add
sbb
mov
fldenv
loope
and
pop
in
mov
pushl
xor
mov
and
test
std
cld
gs
xchg
inc
mov
dec
js
mov
jecxz
nop
shll
mov
inc
popf
lcall
mov
or
add
sbbb
cmp
jns
call
pushf
inc
mov
sub
sarb
inc
sbb
pushl
jne
inc
push
mov
xchg
cmpb
movsl
movsb
stos
popf
xchg
mov
push
mov
mov
jnp
aaa
rcl
push
jno
clc
out
cmp
xor
jne
adc
cld
sbb
adc
sub
insl
and
jo
je
sub
in
mov
cmp
pop
punpckldq
test
xchg
ffreep
arpl
inc
sub
add
adc
ret
dec
jmp
cs
jnp
aaa
loope
outsl
sbb
idivl
adc
movsb
and
pop
dec
pushl
xchg
dec
push
mov
mov
lcall
mov
loopne
ljmp
repnz
xor
out
fneni(8087
sub
pop
inc
cld
lcall
cmpsl
rorl
popa
push
adcb
add
out
dec
sarl
push
xchg
cmpsl
jno
pop
cli
or
inc
cmc
pop
sar
call
sbb
and
jecxz
rclb
outsl
clc
pop
adc
sub
xchg
push
std
lcall
rcrl
push
add
add
popf
jl
mov
ds
mov
pop
xor
push
pop
sub
hlt
xchg
hlt
ljmp
cmp
pop
push
arpl
sahf
pop
adcb
mov
repnz
adc
and
iret
mov
rcrb
inc
add
pop
imul
sbb
mov
or
sbbl
inc
adc
or
cld
jg
xchg
aas
pop
pop
pop
call
push
push
mov
das
fst
or
push
cs
cld
imul
inc
insb
dec
fdivrp
adc
jbe
jg
or
pop
inc
or
fwait
dec
ljmp
or
jae
jno
jge
ljmp
push
adc
push
mov
es
lcall
scas
push
jb
cmpsb
adc
mov
in
push
lahf
dec
cmp
int3
adc
mov
in
rcll
mov
addr16
mov
push
lock
push
mov
dec
popf
dec
adc
leave
mov
inc
mov
xchg
rcrl
lret
xchg
inc
dec
adc
push
push
or
sbb
lock
lcall
pushl
jecxz
pushl
or
push
loop
lcall
pop
adc
sbb
push
repnz
loope
sub
outsl
or
out
ljmp
movsb
call
sbb
push
popl
inc
cmpsl
push
cld
pop
hlt
pop
fs
pop
mov
add
jmp
hlt
pushl
std
inc
xadd
sarl
xchg
mov
mov
mov
std
ja
mov
iret
lcall
add
call
call
sub
es
mov
or
mov
inc
call
cltd
movsl
iret
lea
xor
ljmp
in
fld
stc
jg
in
call
shlb
test
or
push
sub
push
xor
filds
enter
lahf
scas
sbb
test
mov
cmp
jecxz
sub
das
imul
or
lcall
call
test
dec
pop
and
imul
xor
jp
push
cltd
jno
xor
sbb
pushl
xchg
sub
cmp
cmp
xchg
loopne
jb
pushl
dec
jmp
in
xor
fs
inc
pop
lods
stc
jno
inc
arpl
ljmp
shlb
leave
mov
inc
data16
mov
jnp
incb
call
pop
mov
aam
xchg
rolb
adc
dec
cld
jg
movsb
sbbl
jne
cmpsl
daa
lcall
mov
adc
pop
orb
leave
adc
adc
lcall
push
mov
cmp
push
in
xor
jl
or
mov
mov
mov
ss
sahf
fstl
and
ljmp
flds
imul
push
adc
or
pop
mov
aam
dec
push
popf
mov
push
bound
xor
push
sub
or
dec
cmp
movsb
bnd
inc
pop
push
fdiv
dec
jmp
movsl
or
in
sbb
cmp
je
push
popf
mov
lcall
or
scas
adc
add
fs
mov
cmp
adc
sbb
sub
sub
outsl
dec
xchg
xchg
sub
ja
jmp
scas
sahf
mov
xor
jae
cmp
stos
cltd
push
cmp
push
pop
sub
decl
inc
inc
aaa
mov
adc
push
xchg
or
lods
test
test
js
scas
mov
pop
xchg
lahf
add
push
test
push
rolb
xchg
mov
ret
xor
incl
adc
aaa
adcl
and
call
movsb
mov
push
sbb
pop
or
pushl
call
inc
adc
pop
jp
and
xor
sarl
mov
shlb
es
jp,pn
mov
popf
push
pop
cli
ffree
decl
imul
xor
adc
lahf
inc
mov
frstor
mov
push
add
call
and
inc
push
or
pop
sub
in
aaa
sub
mov
cmp
sbb
jg
lock
sub
cmp
or
fwait
jl
sbb
pop
push
jg
bound
xchg
push
sub
push
dec
cld
call
pop
adc
adc
outsl
xor
popa
fimuls
sbb
inc
jae
movsl
ret
decl
fildl
inc
push
int
cmp
in
addr16
scas
test
decl
adc
outsb
mov
and
pusha
data16
js
xor
jecxz
gs
mov
jmp
sub
mov
push
enter
pop
dec
add
imul
mov
decl
jle
sahf
fs
fstl
xor
push
loopne
mov
jno
fldt
mov
sub
mov
xchg
js
in
movsl
mov
lret
add
cmp
cs
ljmp
push
xor
scas
aad
addr16
mov
pop
out
iret
daa
pop
or
or
outsl
dec
add
pop
popf
jns
push
sbb
xchg
hlt
mov
daa
mov
or
push
shll
cmp
shrb
adc
getsec
jg
ja
push
pop
sbb
xor
ljmp
imul
cmp
pop
outsb
lret
or
in
inc
aam
cmp
cwtl
lea
imul
mov
inc
inc
jg
jne
or
xacquire
pushf
mov
std
scas
sbb
decb
push
xor
ljmp
mov
pushl
outsb
call
sub
cmp
sub
sahf
mov
daa
icebp
mov
mov
inc
mov
test
psrlw
lods
pop
ret
or
ds
lea
hlt
inc
add
shrb
cli
and
push
stos
iret
and
cmp
mov
icebp
sub
inc
jl
jns
push
sarb
std
cmp
sahf
adc
fists
lret
adc
mov
sub
aaa
jnp
fwait
inc
sbb
sbb
xchg
mov
mov
std
dec
sub
dec
test
inc
aaa
lret
adc
jae
gs
decl
xor
xchg
lcall
push
fbstp
add
mov
inc
mov
mov
fdivrl
push
les
jmp
xchg
out
push
xchg
call
pop
ss
xor
shrb
push
jo
ljmp
add
pop
jle
jb
pop
sbb
push
cmp
repz
jmp
cmc
cmp
sub
dec
push
adc
cmp
mov
jns
aas
mov
dec
test
push
jmp
nop
pop
cmp
std
ljmp
mov
jge
bound
xor
cwtl
mov
das
negb
gs
cs
dec
and
inc
ds
dec
mov
fwait
cmp
cltd
lret
pop
jl
adcb
aas
adc
cmp
shll
cmp
unpcklps
pop
push
push
sub
inc
stos
gs
sub
int3
and
dec
popf
outsl
xor
fbstp
fwait
push
pop
sbb
add
das
push
mov
jg
orl
mov
xorb
jnp
aaa
lahf
imul
lock
jg
scas
pop
jg
xor
cli
mov
add
mov
clc
sbb
jae
sbb
adc
cmpsl
push
push
cmp
popa
push
pushf
push
xadd
dec
popa
mov
push
test
call
cmp
dec
mov
xor
push
push
or
or
lcall
movsb
lret
jns
mov
add
aaa
dec
add
mov
data16
ljmp
xchg
aas
xlat
inc
push
shll
pop
pop
push
sahf
shll
or
or
fimuls
sub
andb
jnp
mov
mov
mov
lcall
xchg
cmp
adc
js
inc
jg
aaa
add
inc
insl
sub
inc
push
xor
adc
mov
inc
jp
add
das
test
xchg
jae
popf
mov
sub
dec
jmp
stc
aam
cltd
dec
inc
and
in
scas
adc
push
cmp
orps
out
fwait
cmc
mov
jmp
dec
xor
pop
insb
dec
push
add
sar
aam
push
inc
xor
mov
jle
jl
out
mov
mov
scas
jne
adc
push
idivl
aaa
test
add
pusha
push
or
cmp
std
cmp
sub
add
push
inc
lea
ljmp
jg
mov
sti
push
ret
decl
sbb
add
scas
pop
icebp
es
push
test
xor
loopne
call
rcrb
push
ds
jge
mov
pop
adc
sub
sbb
pop
push
cmovg
popa
scas
mov
aas
arpl
push
xchg
push
jmp
or
movsb
pop
jbe
jle
int3
cli
pushl
lods
fnsave
lahf
addl
test
pop
and
jbe
stc
jg
shl
xlat
inc
mov
clc
mov
and
cld
jne
mov
sub
dec
mov
jg
adc
pop
call
jle
aad
loope
scas
mov
subl
xlat
adc
mov
jle
mov
sub
aam
lea
lock
fildll
call
inc
mov
fwait
xor
cld
cltd
movsl
mov
adc
mov
mov
shll
mov
push
pop
popf
cmp
adc
push
inc
aaa
sub
adcb
mov
pop
inc
push
jle
sahf
sarb
pop
fldenv
cmpsl
pop
ja
scas
dec
popf
jmp
mov
addr16
or
push
addl
cld
iret
shrb
test
jg
add
dec
stos
mov
xchg
loope
ss
cmp
push
adc
jl
or
xchg
and
mov
add
push
inc
mov
mov
add
add
es
mov
mov
and
dec
jbe
dec
jns
push
push
xchg
pop
adc
aam
mov
push
adc
lea
test
pusha
push
mov
add
std
cmp
mov
rorb
adc
imul
push
sub
or
rorb
js
push
jbe
and
rclb
cmp
addb
loopne
sub
push
xchg
cs
jp
jns
sbbl
lahf
pop
and
mov
test
incl
icebp
adc
es
jp
cmpb
and
call
jns
add
shrb
daa
ljmp
xchg
pop
hlt
cmp
push
aas
testb
rorl
push
adc
lock
cmp
add
rolb
aad
sbb
pushl
outsb
jge
sar
mov
or
pop
sbb
cmp
or
pop
std
outsb
add
and
xor
icebp
jmp
inc
mov
aam
cld
outsb
wbinvd
inc
pop
jo
sbb
lock
sbb
popf
sbb
lcall
mov
push
cmp
std
mov
mov
popf
adc
out
sahf
mov
ror
sub
jg
lret
test
call
dec
mov
adc
push
add
fbld
push
sub
add
pop
jmp
inc
mov
incl
flds
stos
mov
ret
imul
aam
or
jns
pushf
cmpsl
xor
stos
mov
jge,pn
adc
pop
xchg
lcall
hlt
outsl
loop
cmc
dec
cmp
test
xor
fistpll
pop
clc
fstl
xor
or
arpl
push
lahf
pop
sub
jg
stc
rolb
pop
iret
rcr
out
movsb
sahf
sub
ja
inc
addr16
inc
mov
sar
sub
jp
ds
movsb
mov
jb
ljmp
jb
add
scas
xor
ljmp
sbb
outsl
shlb
pop
into
clc
sbb
data16
jge
cltd
lcall
data16
jae
or
dec
mov
pop
inc
jg
cmp
fisttps
add
movsb
es
dec
jno
and
inc
pop
pop
cwtl
jbe
and
mov
or
lcall
add
gs
mov
fs
cmp
inc
add
arpl
out
xchg
daa
js
jecxz
mov
sub
stos
sbb
loopne
daa
add
push
push
dec
lret
movsl
pop
sub
gs
stos
bound
ljmp
jle
push
jle
insb
cmp
rorb
jg
fbld
lock
bound
ret
mov
dec
pop
decl
inc
bound
cld
sub
inc
pop
nop
insb
sbb
call
pop
or
adc
jns
lahf
lret
push
shlb
push
push
mov
dec
je
sahf
sbb
push
in
loopne
jg
inc
nop
jnp
sahf
dec
add
aas
mov
bound
inc
add
loop
adc
call
mov
jle
push
mov
xor
sbb
out
push
shr
xor
ljmp
or
mov
out
jl
xorb
jle
xchg
pop
sbb
mov
cmp
push
add
or
nop
and
clc
sub
fs
dec
call
jl
add
mov
xor
xor
test
push
popf
adc
fisttpl
lret
xchg
mov
cmp
adc
sbb
scas
push
adc
mov
das
out
pushl
stos
push
dec
js
cmpsb
shlb
push
dec
push
lahf
dec
jp
and
lods
dec
adc
push
mov
push
rcll
stos
cmp
movl
and
scas
cmpsb
dec
jo
jecxz
ret
pop
pop
aad
push
adc
jg
jg
mov
test
push
or
outsl
aaa
mov
es
scas
adc
divb
aaa
jb
pop
iret
sbb
jnp
xchg
arpl
add
movsl
cmpl
aam
shlb
xchg
cmp
jg
mov
test
jno
aaa
imul
cmp
cmpsl
inc
jp
stc
add
lea
sbb
mov
adc
mulb
sbb
xchg
rorl
or
shr
adc
add
or
test
jg
push
pusha
inc
mov
test
sub
cld
sbb
jp
aaa
dec
push
lahf
out
ljmp
or
ljmp
sub
jo
js
test
adc
inc
shlb
mov
ds
add
out
inc
sbb
rclb
out
add
or
outsl
xchg
add
imulb
outsl
mov
test
push
adc
add
push
jne
setae
mov
aaa
jnp
xchg
pop
mov
call
jnp
packuswb
or
dec
cmp
add
cmp
add
and
add
dec
insb
add
loope
and
cmp
enter
ljmp
xor
movsb
add
inc
jle
jnp
sub
fcomip
out
xorl
xchg
lods
inc
push
mov
cmp
dec
stc
cmp
mov
inc
cld
adc
test
data16
dec
decl
mov
push
test
push
lods
pop
dec
add
dec
loopne
cli
push
pop
push
mov
shld
pushl
pop
pop
sbb
xchg
jae
stos
mov
pop
sub
sbb
adc
jge
dec
mov
mov
call
aas
stos
ret
int
outsb
repnz
imul
out
pusha
jae
out
scas
arpl
add
cmc
test
jg
mov
cmp
lcall
pmullw
enter
mov
add
add
add
into
jo
mov
or
imul
adc
add
std
arpl
cltd
and
mov
push
je
add
jg
rolb
call
push
dec
gs
ret
ret
or
push
mov
lea
or
shrb
inc
add
mov
pop
xor
outsl
popa
push
lock
and
and
pop
pop
add
addr16
hlt
das
push
data16
mov
pop
add
out
mov
js
push
imul
je
filds
movsb
xor
test
push
push
and
sbbb
pop
pop
xor
sbb
sbb
lsl
loope
mov
inc
lcall
mov
in
mov
filds
inc
add
sub
mov
xchg
lcall
inc
sar
push
mov
inc
or
xchg
or
pop
mov
je
fistpll
push
or
and
test
adc
push
inc
into
int3
into
xchg
dec
add
or
jo
dec
sub
or
outsb
or
jmp
outsl
insl
push
test
xchg
pop
sbb
aas
pushl
call
jecxz
pop
shlb
xchg
sbb
inc
shl
lret
mov
fwait
inc
lcall
fdivrs
mov
jmp
or
adc
dec
aad
imul
outsl
inc
sbb
push
pop
js
mov
mov
fldt
mov
push
cmc
lcall
and
push
adc
data16
pop
scas
inc
movsb
and
push
pop
cltd
cltd
rolb
aaa
scas
clc
call
and
nop
jb
or
xchg
push
mov
fwait
jmp
sbb
popl
dec
imul
gs
push
incl
push
test
pop
sbb
ret
xor
cltd
adc
ret
icebp
call
add
sub
jp
enter
or
in
push
push
add
jnp
fs
sub
pop
push
jo
lcall
sbb
or
sbb
fists
mov
adc
inc
dec
xchg
js
lcall
movsb
pop
or
ss
mov
jmp
outsl
ret
sarb
aam
fwait
add
loopne
lcall
sbb
gs
sub
push
aas
inc
jl
test
push
aas
pop
pop
lahf
outsb
mov
jmp
pop
dec
mov
inc
dec
cltd
dec
or
cmp
xchg
or
mov
pop
cmc
shl
sarb
ret
cmp
loopne
dec
xchg
imul
sub
jmp
push
ja
push
cmpsb
popa
pop
sub
dec
stos
lret
cmp
or
adc
jg
es
pop
add
pop
push
mov
mov
test
orl
jae
mov
mov
dec
dec
and
std
sbb
in
and
in
adc
xor
add
pop
je
pop
add
add
inc
mov
cmp
cmp
mov
aas
adc
inc
cmpsl
jnp
add
jmp
scas
addr16
inc
cli
fs
pop
or
int3
int
js
fs
cltd
cmpsb
jg
fcompl
rcrb
jb
pop
inc
cmp
call
push
bound
and
decb
push
pushf
push
mov
mov
lcall
pop
stc
and
xor
and
ret
ss
test
jmp
and
stc
imul
imul
sub
and
and
faddl
xor
cmp
mov
cmp
pop
adc
movsb
push
and
mov
cmp
sub
call
imul
adc
mov
and
shrb
or
jo
out
lock
mov
cmp
bound
push
mov
andb
sahf
cmp
jo
js
push
sbb
fnstenv
out
addps
out
sar
clc
push
jg
addr16
and
cmp
gs
call
aam
sub
ds
fdivrs
ss
cmpps
xor
rolb
mov
int
or
pop
or
sub
shl
rcll
sub
lock
out
movb
cs
das
mov
rcr
inc
sub
push
pop
push
pop
cld
jg
bound
popf
ficoml
sub
sub
lret
repnz
xchg
arpl
stos
outsl
mov
and
movsl
fisubrs
jb
add
lock
test
add
aad
cltd
xchg
loope
xor
fstpl
lea
jle,pt
mov
incl
ss
dec
pop
mov
fiadds
xchg
adc
lcall
mov
in
dec
sub
in
add
ds
adc
int
int
jle
fs
inc
jnp
dec
mov
in
mov
pop
add
rcrl
add
or
hlt
inc
rcrl
or
out
mov
or
addb
frstor
dec
jg
cmpl
arpl
cld
hlt
pushl
ud0
ret
sub
dec
dec
icebp
fiadds
enter
cld
pop
pop
sbb
pop
push
dec
sbb
in
cmp
ljmp
mov
jle
std
insl
dec
and
sub
lcall
out
add
sub
mov
lcall
jbe
lods
fwait
leave
and
in
inc
aas
out
mov
adc
mov
incl
push
cmp
lcall
mov
mov
scas
arpl
or
mov
subb
sub
imul
lret
dec
pop
outsl
sub
loopne
fbstp
fsubrp
add
add
jg
lock
loopne
pop
inc
or
outsb
pop
push
pop
push
mov
es
sub
loope
add
cld
or
inc
sbb
xor
ret
loopne
dec
cmp
jle
mov
or
cld
lcall
mov
pop
out
out
fadd
fisttps
xor
scas
push
or
outsl
and
inc
and
add
xchg
pop
pop
and
dec
nop
add
push
dec
sar
jg
mov
lret
std
fwait
jge
jb
sbb
insl
lock
ljmp
loop
sub
or
inc
push
push
mov
mov
and
mov
or
xchg
repnz
push
mov
jg
cmc
lcall
hlt
clc
dec
adc
gs
ss
in
and
pop
fs
jmp
outsb
insb
das
inc
dec
mov
add
lahf
or
push
insl
js
xor
add
and
movsb
dec
push
xor
pushw
call
fisubrs
sbb
push
inc
mov
mov
jbe
and
lcall
lret
push
sbb
jp
idivb
mov
mov
pop
iret
pop
je
mov
cmp
out
adc
scas
xchg
cmp
sbb
iret
push
in
xchg
mov
loopne
lods
gs
es
mov
lahf
pop
ret
cmp
push
fs
jmp
push
shl
imul
cld
add
outsb
pop
fdivs
pop
sbb
adc
or
divb
ficoml
jbe
or
mov
xor
add
xor
cmp
add
dec
xlat
pushl
out
inc
bound
cli
js
es
mov
dec
loope
cmp
add
sahf
insl
cmp
jnp
ds
dec
dec
pop
mov
aaa
mov
adc
jp
adc
add
jg,pt
rcrl
imul
pop
pop
inc
mov
cmp
sub
out
fs
mov
fcmovnu
and
push
push
test
jno
scas
fdivrs
jmp
decl
jl
testb
pop
shlb
mov
cmp
lock
xor
pop
push
jl
add
adcb
lcall
je
lret
imul
and
adc
or
mov
inc
or
pushf
pop
jno
idivb
in
and
mov
cmp
jns
addr16
mov
pop
dec
incl
cmp
lcall
sahf
das
mov
xor
bound
pop
arpl
leave
or
decl
cwtl
or
int3
imul
mov
mov
lock
or
lods
outsb
push
sti
loopne
push
jp
push
hlt
decl
or
push
push
pop
imul
movsl
in
cld
ss
incl
cmovbe
loopne
jge
and
cs
add
imul
pop
fs
push
jo
sub
cmpb
int
fidivrs
addb
push
dec
in
dec
out
cmp
add
shrb
sub
out
cli
call
stos
les
pop
add
fadds
xlat
and
push
ljmp
mov
push
ja
adc
dec
cmpsb
pop
add
jl
rcl
add
jbe
jmp
dec
push
inc
dec
adc
xor
andb
push
addr16
adc
mov
push
int3
icebp
add
call
sbb
out
movsb
jbe
xor
fmuls
fisttps
std
pushl
call
push
or
les
addl
add
lahf
cmp
dec
push
sbb
clc
outsl
pop
xor
das
push
or
pop
test
std
xchg
xor
jle
ljmp
jg
jbe
cli
inc
sub
inc
push
push
rorl
out
sub
or
shrb
lods
incl
cmpl
cmp
pop
push
or
pop
xlat
dec
sub
and
cld
rorb
je
xor
pop
rorb
adc
mov
es
gs
inc
mull
xor
pop
addl
sahf
imul
jmp
jmp
jns
stos
ret
adc
test
rorl
push
adc
sbb
add
jnp
adc
out
mov
clc
lcall
jle
mov
or
dec
sub
mov
filds
pop
daa
int
mov
loope
pop
mov
add
adc
shll
negb
mov
xlat
cmp
std
mov
pushl
mov
dec
pop
in
call
scas
xor
addr16
jecxz
pop
push
and
jns
repz
jae
pop
and
scas
push
aam
jp
sbb
push
std
jg
lock
push
jbe
adc
sbb
movsb
push
push
sub
pushl
cmp
mov
xchg
or
jns
and
or
pop
pop
pop
dec
or
sahf
repnz
andb
testb
std
dec
inc
xor
pop
dec
aaa
jno
mov
decb
jge
cmp
push
repz
cmp
jae
out
es
pop
imul
clc
incl
inc
or
mov
pop
push
rcrl
clc
jmp
sbb
xlat
pop
add
scas
sbb
ss
popa
jg
push
arpl
jg
adcl
sub
jg
out
fistps
xor
or
sbb
das
icebp
imul
daa
es
insb
push
adc
mov
lret
push
mov
jl
cmpl
xchg
shll
loopne
mov
pop
and
aas
mov
inc
inc
cli
popf
adc
lret
cmp
filds
cwtl
cli
mov
ljmp
xchg
xor
dec
cs
cmp
mov
dec
mov
loope
out
dec
or
repnz
pop
jg
xor
jg
lock
dec
mov
fcoms
int
xchg
adc
rorb
pop
inc
xlat
popa
decl
sbb
sbb
mov
test
jl
mov
jb
pop
pushf
es
lcall
jg
negl
aas
push
sbb
adc
hlt
jge
shrb
or
call
sub
sbb
xor
aam
sub
inc
dec
lea
jp
mov
rcrb
sbb
jecxz
repnz
bound
adc
push
insb
push
mov
cld
jg
sub
shll
test
mov
sub
lds
mov
add
push
dec
pop
mov
push
inc
aas
add
outsl
pop
xchg
insb
dec
cwtl
jle
push
popa
pop
ss
cmp
jg
push
sub
std
or
push
jmp
dec
sub
inc
mov
inc
jp
jae
sbb
lea
jmp
push
push
add
xor
mov
jae
and
std
sbb
mov
push
sbbb
or
popa
jmp
jae
pop
add
mov
icebp
and
enter
lcall
pop
or
xor
stos
pop
mov
mov
push
xor
rorb
sub
add
fmull
fcmovnbe
dec
jnp
sbb
cwtl
rorb
pop
add
ficomps
lcall
test
popw
loope
push
loop
dec
xor
pop
dec
lock
shrb
dec
and
pop
inc
out
inc
jnp
orb
mov
add
mov
push
lcall
cmp
push
in
adc
push
inc
stos
push
dec
mov
xor
addb
xor
test
cmp
inc
and
loop
sub
cs
pop
ja
or
jg
sbb
bound
pop
mov
das
pop
mov
jg
xchg
and
sub
aaa
or
outsl
adc
bnd
pop
or
push
cmpsb
mov
sub
jmp
push
xchg
arpl
and
pop
in
push
pop
adc
and
adc
aad
sub
addb
ds
sar
adc
outsl
dec
sub
xor
outsb
pop
jge
add
mov
outsb
insl
or
fisubrs
pop
jo
jge
or
call
and
pop
mov
sahf
call
bound
push
imul
mov
pop
sub
hlt
lahf
cmc
adc
call
stc
pop
push
push
ss
fwait
lcall
lcall
and
and
mov
pop
je
jb
ss
xchg
push
add
sbb
push
or
incl
xor
pushf
and
mov
popf
push
adc
sbb
mov
insb
xor
outsb
mov
add
jmp
inc
hlt
outsb
dec
mov
nop
faddl
xor
xchg
cmp
ljmp
enter
jae
ljmp
ljmp
or
jge
push
xchg
pop
push
add
push
sub
aad
push
push
pop
and
popa
xor
je
push
cli
sbb
xlat
push
dec
imul
inc
cmc
cmc
lea
cmp
sbb
push
add
sub
jb
std
clc
or
jns
add
adc
cld
add
add
adcb
rol
or
inc
jecxz
sarb
or
ret
std
jle
out
add
fnsave
mov
ss
sbb
icebp
decl
mov
sbb
cwtl
popa
add
mov
je
aas
cmp
mov
test
jmp
ret
shlb
shll
pushf
cmp
sub
inc
cmp
add
pusha
adc
pop
les
lahf
ds
out
ret
push
test
out
push
frndint
ret
lret
mov
fsubp
sub
cmp
sub
adc
push
xorl
xchg
ret
xchg
mov
or
push
mov
push
and
dec
xor
bnd
xchg
idivb
inc
test
test
nop
pusha
out
xchg
nop
or
loopne
add
aaa
add
ret
loopne
cli
xchg
repnz
lret
or
push
clc
xor
pop
test
and
incl
cmp
inc
push
mov
xor
cmp
ffree
mov
push
inc
xor
sar
push
and
adc
out
cs
repnz
inc
jmp
xchg
push
addl
xchg
pop
mov
sbb
cmp
jg
adc
dec
sarl
icebp
imul
mov
es
adc
jno
leave
sbb
dec
mov
out
inc
ds
mov
sbbl
mov
lods
adc
outsl
cld
neg
xlat
stos
lds
mov
push
cld
leave
inc
inc
adc
fwait
pop
dec
jmp
push
sub
push
add
scas
ljmp
mov
push
sbb
cld
dec
dec
shlb
jae
mov
imul
jge
leave
rcr
test
adc
xor
inc
pushl
ss
sub
test
cmpsb
pushl
std
ja
movsb
lds
jle
add
ss
sub
imul
outsl
insl
cmp
aad
sub
lcall
es
push
loopne
pop
xchg
push
adc
aam
jle
mov
jp
cmp
ret
sbb
pop
loop
inc
ds
test
fisubl
dec
sub
adcb
push
loope
jb
addr16
or
rol
push
push
mov
mov
decb
add
in
cmp
pushl
lcall
inc
pop
xor
movsl
add
push
push
sub
sti
dec
hlt
jl
cwtl
pop
xor
pop
fwait
bound
rol
aas
imul
ss
add
inc
cmp
or
ret
add
aas
and
incl
repz
inc
mov
inc
or
dec
xchg
xor
adc
clc
cmp
mov
fcomip
mov
dec
mov
outsb
adc
cld
es
dec
pop
and
jle
and
lock
fwait
dec
push
xor
shl
jns
sub
popa
push
push
push
jg
icebp
fists
das
xchg
push
mov
out
sub
lock
push
xor
ss
or
outsl
test
ret
pop
bound
dec
rorb
sti
dec
sbb
push
jl
inc
fldl
and
sahf
rorb
cli
dec
jp
dec
std
xor
jb
pop
dec
or
sbb
add
clc
mov
mov
sbb
xchg
aas
addl
xchg
call
fcompl
ffree
lock
cmp
adc
aaa
push
dec
lea
push
or
test
and
mov
push
ljmp
test
sub
cld
mov
inc
ljmp
test
daa
mov
lcall
lods
pop
add
arpl
into
cli
pushl
test
movsb
mov
cmp
jnp
out
push
and
lea
outsl
or
or
fcoml
jmp
jg,pn
stos
push
jb
shlb
push
scas
jae
insb
pop
cmc
jg
sti
adc
ja
jo
jle
es
std
mov
mov
pop
enter
xor
dec
inc
sub
jmp
sahf
idivb
imul
sub
xchg
mov
fisttps
test
sbb
out
outsl
dec
repnz
sbb
movsl
dec
push
adc
gs
sbb
jmp
adc
push
ret
mov
mov
add
push
movsb
jg
cmc
pop
inc
and
xchg
mov
dec
add
mov
adc
add
jb
jae
mov
push
add
outsl
in
sbb
icebp
push
sbb
call
sbb
dec
and
jns
out
mov
jae
xchg
popa
cmp
aam
jae
mov
daa
mov
mov
insb
inc
je
and
mov
sub
add
outsb
bswap
pop
clc
fildll
inc
mov
xor
add
mov
incl
dec
pop
mov
pop
pop
inc
lahf
std
push
sbb
pop
pop
or
pop
pop
scas
xlat
mov
pop
dec
inc
and
xor
inc
jg
imul
push
jmp
ds
mov
ficompl
outsl
add
inc
jno,pn
push
mov
jg
icebp
cmp
xor
lcall
push
dec
es
ret
out
hlt
je
sub
pushf
cmp
mov
data16
addr16
popf
dec
mov
arpl
or
cmovl
ret
stos
stos
mov
sbb
sbb
subl
jmp
scas
lods
sbb
es
das
cmp
push
pusha
sbb
add
ds
insb
pop
dec
xor
scas
cli
subb
jp
cld
out
ret
pop
and
add
push
xlat
inc
mov
xor
flds
mov
enter
xchg
and
outsb
daa
xchg
cltd
push
sahf
outsb
xor
fsts
and
sub
fistpll
cmp
test
jg
cmpb
jle
cs
mov
push
sbb
lcall
filds
and
in
or
scas
inc
or
jo
stos
rorb
sub
cld
sub
icebp
pop
pop
sti
pop
and
add
dec
pop
lods
fwait
aas
xorb
cmp
loopne
sbb
ja
jle
pusha
inc
outsb
lods
jno
jl
cmp
stos
lret
lahf
mov
fdivl
mov
ds
add
fbld
outsb
jg
sbb
mov
js
jmp
xchg
sub
loopne
les
mov
mov
cmp
add
mov
dec
xchg
pop
or
test
lcall
lahf
inc
pop
ss
or
and
fisubl
sbb
jnp
adc
test
sub
pop
lock
dec
mov
pop
ljmp
jns
dec
fs
pop
test
adc
and
inc
outsl
inc
cld
mov
pmullw
rorl
adc
and
mov
aad
add
jp
mov
clc
lcall
mov
aam
jp
adc
ss
xchg
push
stos
lahf
push
scas
pop
adc
or
in
outsl
sbb
xor
dec
push
mov
pusha
loope
push
pusha
clc
jbe
xchg
imul
dec
arpl
aas
cmpsb
bound
repz
mov
cwtl
jg
mov
jge
addr16
dec
push
sub
inc
in
jecxz
mov
int
cmc
add
hlt
fadds
das
adc
pusha
dec
and
add
das
out
adc
je
clc
out
inc
fstl
data16
dec
xlat
mov
xor
adc
call
fnstsw
outsl
jg
mov
dec
jno
pop
mov
rcl
cmpsl
shl
sub
inc
sub
fcmovb
add
ljmp
pop
and
mov
dec
repnz
cmpsl
add
xor
add
adc
mov
rcr
cmp
fstl
or
aaa
xor
or
or
xor
xchg
cmp
and
add
call
ja
and
jl
aas
cltd
fisttps
es
add
xchg
scas
jg
leave
or
xchg
xor
out
mov
add
pop
inc
sar
test
sbb
mov
mov
add
inc
pop
loopne
sub
xchg
mov
lret
clc
outsl
mov
outsl
sbb
cmpsl
xor
icebp
mov
xchg
push
les
outsl
dec
xchg
dec
mov
add
int3
data16
test
fldcw
imul
out
sar
decl
pop
insl
sub
call
shll
mov
add
or
cmc
call
das
stos
inc
xor
or
add
ss
dec
and
cwtl
decl
movsl
mov
adc
in
mov
mov
fadds
popa
stos
or
pop
sbb
sub
mov
ret
jo
addb
push
clc
aas
or
jae
cs
cmpsl
push
adc
movsl
mov
mov
int
cmc
out
adc
clc
in
rolb
leave
shrb
leave
dec
sbbb
jle
xor
stos
sub
fbld
jl
xchg
ss
jns
mov
outsl
popf
xchg
mov
iret
sbb
stos
pop
aas
adc
loop
sbb
and
pop
in
inc
or
loopne
dec
pop
out
push
loop
mov
mov
popa
mov
test
test
test
es
jb
pop
xor
add
scas
add
idivl
jle
mov
cmpsb
xor
mov
lods
lahf
mov
cmp
js
pop
jg
push
and
in
dec
fisttpl
mov
shrb
jle
add
pop
insb
loopne
pop
pusha
fisttpll
pop
mov
inc
jl
jb
inc
xchg
and
in
push
ljmp
xor
push
xor
push
out
xor
imul
fisttps
inc
mov
lods
sbb
mov
ljmp
decb
inc
add
dec
subl
mov
sbb
ja
push
fsubl
fidivrl
push
or
ljmp
push
data16
and
mov
cmp
jge
stc
pop
dec
jle
cmp
dec
out
mov
test
test
pop
outsb
jg
jo
mov
pop
mov
sbb
and
ret
xor
arpl
jl
jo
imul
sti
pusha
mov
jge
push
push
fiadds
sti
xorb
adc
xor
pushl
dec
aaa
sbb
mov
dec
sub
mov
addb
out
shlb
ss
movnti
sub
imul
fs
cmp
fwait
cld
lret
into
rcrl
sarb
adc
or
jle
sbb
jnp
or
push
out
hlt
filds
jbe
jne
sub
add
sbb
fistps
outsb
daa
fcompl
aaa
jmp
jb
jnp
dec
jo
negb
jecxz
xchg
testb
in
mov
push
mov
adc
jmp
je
mov
add
inc
pop
cmovo
mov
hlt
rol
aam
push
push
cmpsb
cmp
dec
mov
xchg
loope
fistpll
addl
cs
xor
loope
add
inc
btc
add
jbe
outsl
jg
lcall
jl
adc
xor
pop
pop
or
outsl
adc
sar
mov
sbb
cmp
paddb
xor
adc
pushf
data16
push
mov
xchg
clc
shll
cmp
bnd
std
mov
pop
repnz
stos
jo
repnz
lods
cmpsb
dec
and
jns
incb
sub
data16
or
mov
xor
xor
pop
adc
decl
lock
popa
inc
scas
cmpsl
push
int
pop
ss
push
mov
incl
push
sarb
xor
test
mov
notl
xor
das
into
lret
dec
test
cmpsl
outsb
adcl
lea
push
add
jns
adc
jg
orb
cmp
movb
push
or
cmp
nop
sub
pop
subb
testb
ja
sahf
xor
dec
sbbl
lods
push
push
adc
fwait
add
sub
push
ret
adc
cwtl
pop
adc
inc
adc
adc
jle
sbb
mov
repnz
pushf
xchg
cmpsb
push
or
pusha
push
jle
sub
adc
mov
fldcw
or
push
xor
cmp
mov
add
jne
fstpt
aam
xor
lahf
cmpsl
cmp
sub
and
scas
jns
xchg
lock
sar
incl
loope
jp
adc
jp
adc
sbb
lcall
outsl
dec
pop
jns
inc
cmp
add
sbb
aad
xor
jg
mov
adc
sti
mov
cmp
subb
adc
mov
push
jae
and
incl
fisubrs
das
in
pop
push
test
dec
push
xchg
fstpt
sbb
sub
jg
adc
xor
in
or
insl
aaa
or
and
fs
dec
incl
push
cwtl
shrb
jb
or
outsl
fs
out
cli
incl
jnp
inc
loopne
jnp
xor
cwtl
jb
sbb
add
inc
mov
pushl
add
stos
test
cmp
push
mov
dec
outsl
lcall
xor
pop
xor
lods
mov
or
sbb
push
pop
and
fbld
std
add
sbb
inc
movsl
push
dec
adc
rolb
ret
mov
jg
loopne
add
jecxz
cltd
bound
cmp
shl
jmp
bound
or
aaa
add
shlb
aaa
scas
xor
dec
sub
das
in
lods
mov
or
ss
fldt
adc
mov
inc
je
icebp
adc
sub
call
sbb
lahf
xor
mov
roll
xor
loopne
inc
ret
and
repz
or
xchg
ss
mov
jbe
jns
fldt
add
ds
sbb
xchg
ficomps
or
popf
scas
aaa
add
xchg
dec
jno
xchg
push
push
bound
incl
jb
loopne
jae
sbb
add
arpl
decb
lock
adc
daa
jp
aas
and
jp
call
adc
addr16
jle
adc
push
sub
sahf
lcall
pop
adc
cmp
and
pop
fmull
and
jecxz
fdivrs
sahf
cmpsl
sub
or
add
jp
and
mov
outsl
cld
data16
pop
xchg
mov
outsl
inc
jecxz
shlb
je
inc
add
ret
mov
xchg
or
inc
push
popf
sarb
xor
gs
ljmp
jo
fwait
hlt
fwait
and
outsb
jmp
push
std
cmp
adc
outsl
adc
sub
insb
dec
mov
dec
das
fstl
sub
fwait
or
dec
pop
pop
push
aas
cmp
out
jo
out
mov
addl
aam
jns
dec
jo
xor
arpl
daa
lock
push
rorb
sub
movsl
adc
jae
lcall
xor
sub
js
decl
add
pop
sub
sub
cmp
ficoms
aas
cs
loopne
push
push
repnz
pop
push
jo
bound
push
pop
sar
push
sbbb
dec
xor
outsl
icebp
or
add
sbb
pushf
lcall
popa
xorl
in
and
mov
adc
insb
sbb
jg
add
cmpsl
mov
sarl
js
and
adc
jecxz
inc
orb
push
inc
xor
bnd
adc
fildll
cld
inc
stos
aas
lea
lock
sbb
mov
add
cmp
loope
test
mov
enter
cltd
popf
add
push
enter
cmpsl
cs
jg
sub
test
iret
and
and
pusha
decb
daa
pop
shrb
lods
cmp
shll
test
jg
and
jnp
or
xchg
in
inc
jg
mov
jbe
sbb
sub
adcl
inc
cmp
cs
cmp
pop
lock
jg
sub
pop
cmp
or
iret
jno
addr16
cmp
mov
sub
fldenv
add
in
jge
jg
fisttps
mov
dec
push
lods
mov
pop
push
pop
or
outsl
jl
jl
lahf
cli
add
add
push
inc
inc
jg
sub
lods
shlb
jle
in
jnp
sub
cmp
fdivrs
xor
sahf
mov
loop
cmp
mov
dec
pop
hlt
mov
push
cmpsl
cmp
int
cmpsl
fwait
test
add
iret
pop
cmp
aas
jo
or
imul
mov
mov
cmpsl
xor
es
sbb
dec
cmp
cmpsb
fbld
xchg
and
push
enter
cmpsw
mov
fidivrs
sub
filds
mov
push
xor
and
inc
imul
xchg
adc
xor
js
or
pop
or
das
in
ror
enter
inc
and
inc
xchg
test
add
xor
sbb
movsb
stc
clc
dec
sub
loop
xchg
pop
push
lcall
add
mov
pop
adc
xor
fwait
inc
sub
sub
push
adc
mov
ljmp
or
pop
pop
nop
insl
push
or
jo
inc
sar
mov
jae
fistpl
pop
int3
and
mov
mov
sbb
hlt
push
mov
movsl
jl
or
decl
sbb
add
loopne
jmp
inc
sahf
push
sbb
sahf
xor
fwait
call
add
or
lret
mov
push
jle
xlat
add
dec
jg
sbb
add
add
cld
daa
stc
or
pop
or
inc
addr16
sub
push
add
ss
cmc
outsl
inc
inc
mov
ss
cli
or
sbbl
aaa
es
je
lods
push
xchg
inc
loope
lock
adc
lcall
push
sbb
jmp
lea
add
push
pop
lcall
jbe
adc
out
push
add
mov
into
pusha
inc
ret
pushf
shlb
mov
shll
mov
xor
fstpt
bound
adcb
inc
mov
inc
sbb
mov
mov
lahf
iret
mov
push
mov
pop
mov
and
or
out
sub
dec
inc
lcall
add
imul
test
add
jnp
ds
mov
adc
pop
adc
jle
fistps
and
loope
xchg
add
aad
repz
or
push
js
test
cs
push
push
sub
jo
sbb
mov
in
inc
prefetchnta
incl
outsl
sbb
cmpb
int
imul
inc
jb
push
ja
xchg
cmp
jp
jb
adc
loope
pop
dec
fimuls
xchg
mov
dec
leave
fwait
mov
or
and
daa
popa
test
dec
incl
push
ja
mov
jp
dec
loop
pop
adc
cmp
popa
xor
imull
aas
inc
mov
jo
adc
xor
mov
sub
int
push
pop
or
ja
inc
dec
sbb
jg
xchg
lock
inc
and
clc
lcall
icebp
sbb
xor
add
pop
ret
je
mov
lret
call
pop
pop
xor
ds
arpl
loop
push
sahf
and
mov
mov
jle
xor
inc
or
das
cli
push
adc
dec
mov
fs
mov
sbb
decl
adc
adc
hlt
fsts
push
repnz
sbb
movsl
xor
pop
jb
loope
jo
cmpsb
pop
ds
add
mov
std
pop
ret
leave
clc
lret
test
inc
add
mov
push
subb
mov
call
bound
stos
jns
cmpsl
inc
or
inc
xor
mov
roll
jle
pop
lahf
sub
pop
subl
decl
sbb
mov
push
xchg
cs
clc
mov
adc
cmp
mov
mov
popa
add
or
adc
gs
fstps
loopne
jmp
sub
push
xor
xchg
fisttpll
pop
xorb
inc
xor
lock
dec
fsts
pusha
mov
xchg
adc
pop
adcl
dec
enter
pusha
adc
je
adc
fbld
std
jg
jge
add
cmp
sub
test
mov
mov
jp
mov
rolb
pop
loopne
mov
jg
scas
jle
insl
adc
shrb
rorb
lcall
or
arpl
mov
jno
dec
ds
jmp
add
or
lret
push
lods
adc
jg
in
push
stc
or
jl
int
jmp
push
jecxz
xor
sbb
loopne
sbb
xor
sub
lcall
mov
push
mov
pop
dec
xchg
add
push
decb
pop
xor
lret
das
mov
pusha
icebp
iret
aam
push
fistpll
mov
loop
js
scas
cmpsb
es
insb
ret
aaa
cmpb
push
push
ja
insw
sbb
inc
add
pusha
add
push
lods
sbb
jmp
bound
mov
dec
rcrb
clc
sbb
inc
outsl
sbb
adc
inc
ja
jg
in
push
pop
push
mov
call
sbb
sub
fsubl
test
xchg
sub
jbe
sbb
clc
scas
sbb
pop
add
outsl
ljmp
imul
xchg
bound
jg
inc
lahf
stc
mov
and
ljmp
lea
cltd
jnp
ss
fisttps
pop
aaa
test
fsubs
pop
scas
imulb
push
push
adc
mov
jo
movsb
bound
test
and
push
aas
inc
fwait
mov
lahf
mov
or
inc
pop
xor
fwait
ret
out
pop
push
sbb
adc
dec
in
and
add
cli
jg
loope
or
cmpsl
jg
mov
and
cmp
cmp
add
pop
adc
popf
data16
mov
pop
mov
add
pop
add
clc
jg
sub
xchg
mov
inc
xchg
hlt
lcall
sbb
inc
adc
cld
lods
sub
sub
cwtl
adc
cmp
std
dec
push
or
clc
call
cmp
ret
add
sbb
sub
cmpsb
or
and
pop
je
js
stc
stos
sub
push
cmpsl
pop
or
jg
mov
cld
adc
xchg
ds
or
sbb
scas
out
or
loop
shlb
xor
out
repnz
sub
call
pushf
ret
sub
mov
push
or
push
xchg
or
mov
daa
mov
sub
jno
dec
incl
or
xorl
stos
xor
repnz
lahf
push
sub
cwtl
lret
test
jg
mov
ss
in
or
cmp
cmp
add
push
mov
push
cmpsb
das
mov
in
jmp
pop
lods
pop
xchg
xor
out
inc
cli
sbbl
or
mov
and
dec
mov
adc
xchg
add
mov
mov
sbb
fcoml
jge
or
bound
and
xorb
call
sahf
jne
xor
mov
aas
and
fdivrs
and
and
push
outsl
incl
adc
lcall
jp
sbb
loop
cmpsl
das
sti
in
sbb
sub
push
test
xchg
test
fbstp
cli
inc
push
fistpll
inc
movsb
cs
jp
inc
lods
call
cld
incl
lods
imul
fdivs
fcmovu
rcrl
movsb
or
imul
ljmp
int3
in
mov
inc
daa
lods
sub
mov
push
mov
xchg
cmp
jmp
fs
cmp
push
cld
jb
xor
jns
inc
pushl
test
mov
lcall
aaa
std
sbbl
cld
mov
cmp
add
clc
ret
lods
lcall
xlat
lods
fdivs
nop
sub
shl
lcall
decl
les
adcb
add
add
mov
sub
out
adc
pop
loop
mov
mov
mov
or
push
cld
aas
xorb
scas
push
mov
aam
xchg
lcall
adc
mov
jmp
xor
adc
sbb
adc
xor
std
adc
shlb
stc
cmp
jns
pop
ds
xchg
sbb
fsubr
and
jns
mov
out
dec
or
das
cmp
mov
nop
aad
test
fisubrs
call
pop
test
mov
add
pop
mov
mov
mov
sub
out
pop
fsubs
jge
cld
xchg
sub
inc
xchg
sub
mov
or
arpl
sub
mov
jg
test
sbb
inc
mov
sub
lcall
cmp
stos
xor
out
imulb
ljmp
ret
loope
fstps
iret
pop
sub
sti
stc
add
mov
dec
test
cs
clc
push
jecxz
xor
mov
ss
aam
mov
pop
icebp
jmp
push
nop
adc
repnz
mov
ljmp
test
add
jmp
sub
sbb
cmp
xor
xor
and
lar
inc
std
mov
cmp
or
out
les
lcall
icebp
mov
pop
jb
mov
mov
sbb
in
pushl
dec
pop
mov
inc
jae
or
fdivrs
add
jge
decl
mov
fsubs
icebp
stc
hlt
xor
mov
mov
pop
ss
jg
call
add
xor
or
arpl
jge
test
mov
loope
enter
xchg
pop
into
ret
dec
push
add
mov
mov
or
dec
push
mov
sub
mov
and
mov
sbb
lahf
fisubrl
inc
pop
mov
fbld
push
test
rcrb
fstpt
test
daa
xchg
push
xor
cmp
mov
inc
lea
minps
sbb
push
pop
xor
and
imul
mov
aaa
jp
or
fimuls
jl
pop
rorb
imul
sbb
jbe
dec
mov
ljmp
out
push
or
inc
or
push
outsb
std
xor
lods
aaa
dec
xor
loop
dec
inc
jg
or
scas
js
mov
roll
popf
je
and
rcl
pop
std
pop
pop
outsb
cltd
out
add
data16
or
popa
cmp
mov
loope
int
jle
mov
inc
idiv
decl
mov
dec
push
mov
fs
push
lcall
jg
popf
inc
mov
rcrb
sub
and
adc
jg
inc
cld
add
dec
lcall
dec
inc
bound
push
loop
loop
add
in
add
or
xchg
repnz
stos
sbb
outsb
decl
cmp
cmp
inc
imul
daa
inc
adc
or
cmp
mov
dec
aam
iret
pop
rcrb
cwtl
dec
lods
dec
out
shlb
movsb
and
pushf
pop
popa
pop
call
ret
pop
mov
jl
lret
movsb
jno
jecxz
xchg
outsl
sbb
pop
pop
stc
xlat
dec
popa
inc
push
ret
dec
movb
dec
repnz
push
jmp
popf
adc
pop
inc
adc
por
sbb
add
mov
loop
or
jg
xchg
mov
cmp
mov
inc
sbb
mov
in
lods
xchg
cmp
aam
mov
fs
or
adc
mov
out
cwtl
sbb
clc
int
out
sti
sub
cmp
xor
negl
xchg
scas
cmc
insb
mov
fsub
jg
mov
xchg
out
daa
int3
fsubs
xchg
movsb
sbb
sbb
incb
push
mov
ret
mov
outsl
adc
ss
leave
or
fnstenv
mov
mov
ljmp
int3
pusha
cmc
pop
xchg
outsb
mov
inc
cld
lcall
shlb
adc
movsl
sarl
ret
fcomip
mov
push
xlat
cmp
sub
scas
adc
xchg
mov
cld
call
dec
in
clc
jae
adcl
ljmp
ljmp
rorl
fnsave
icebp
sub
inc
xor
mov
jg
insl
add
push
dec
sub
adc
push
lahf
jne
dec
dec
lcall
mov
loop
mov
jge
dec
dec
lahf
loope
cld
push
adc
jle
pusha
fidivrl
dec
int
ljmp
jns
add
adc
xor
jmp
push
dec
inc
pop
lret
jg
shlb
sbb
jo
orb
push
xchg
add
out
adc
jns
mov
lock
std
or
fwait
js
xor
push
mov
movsl
sub
fwait
dec
jecxz
subl
or
in
cmp
sbb
outsl
clc
sub
add
sbb
sahf
test
lcall
or
and
lods
mov
and
das
movb
mov
arpl
push
adc
or
cmpl
scas
mov
xchg
mov
jmp
ja
adc
cmpsb
dec
imul
outsb
ret
jne
add
lcall
cmc
dec
add
dec
shrl
outsl
xchg
and
sbb
add
sub
test
push
mov
push
cmp
xor
pop
inc
mov
fwait
test
out
mov
scas
jb
or
incl
pop
push
sub
mov
jne
shl
fs
add
and
inc
or
pop
fs
pop
movsb
data16
add
sahf
and
testb
pop
xchg
mov
xchg
or
xor
fstl
decb
into
add
fisubrl
push
ret
add
lds
push
dec
sub
mov
sub
movsl
nop
mov
mov
sbb
sar
das
out
push
or
stc
and
roll
je
fisubrl
pop
adc
xor
sub
mov
psubsb
cmpsl
push
das
xor
adc
xor
pop
pop
mov
add
push
pushf
and
adc
out
mov
shll
bound
xchg
xchg
les
mov
rorb
push
xchg
dec
adc
pop
fildll
adc
lods
or
call
cmc
das
cld
jl
fcomip
jmp
jl
testb
out
mov
movsb
inc
aaa
testb
movsl
fidivrs
sub
lea
daa
sub
xor
dec
jecxz
test
setl
ljmp
mov
xchg
loope
adc
or
repz
sbb
notb
xchg
jmp
sub
push
mov
loop
loope
ds
shll
inc
cs
push
mov
adc
push
mov
mov
adc
incl
pop
in
mov
xchg
pusha
xchg
sbb
ds
lcall
imul
in
sbb
popl
rsqrtps
dec
mov
xor
jg
dec
pushf
cs
push
mov
cmpl
push
mov
aaa
push
pop
or
in
fcmovne
pop
add
cld
jg
inc
mov
xchg
sub
add
notb
inc
mov
push
sbbb
in
idiv
aaa
xchg
push
xchg
pusha
pushf
out
sub
adc
shl
int3
xchg
mov
inc
loope
sbb
dec
idivb
push
push
outsb
inc
popa
and
inc
incl
pop
pop
lahf
inc
fwait
adc
pop
aas
push
xor
mov
outsb
daa
je
mov
cmp
mov
test
scas
lea
out
xor
jnp
mov
xchg
stc
mov
aaa
sub
das
inc
pop
inc
stos
adcb
inc
mov
lcall
sub
jg
clc
or
sub
lock
ret
cmc
mov
stos
xchg
icebp
jg
or
push
mov
or
cli
addr16
or
pop
movsb
addr16
clc
mov
push
xor
je
out
out
int
outsl
jns
lcall
sub
scas
in
inc
and
jle
inc
xchg
jbe
push
scas
add
fmull
mov
mov
cmp
xor
outsb
dec
ficompl
cltd
mov
cmp
xor
push
cwtl
add
sub
es
dec
es
push
mov
mov
push
pop
or
xor
cmc
sbb
xchg
sub
adc
adc
pop
add
das
out
frstor
ds
cli
ja
push
outsb
data16
jge
mov
ja
or
andb
stos
xchg
mov
in
and
incl
arpl
mov
in
pop
int
sti
stos
pop
sub
or
and
fildll
sahf
xor
adc
pop
fiaddl
mov
inc
pop
ljmp
jg
ja
cmp
scas
outsl
nop
repnz
sub
inc
push
outsb
mov
add
insl
int
inc
xor
cld
cmpsb
jg
jle
mov
bound
subl
and
sub
jb
loop
mov
ss
int3
insb
js
and
xorb
or
bnd
mov
and
mov
paddsw
add
aaa
sub
test
repz
js
pop
pop
sarb
xor
fistpl
and
ss
or
lcall
sub
lock
nop
sub
sub
lahf
insl
scas
mov
and
ss
adc
shl
xchg
ljmp
aas
imul
cld
sub
int
mov
mov
fbstp
icebp
divl
adc
dec
push
mov
test
xor
add
aaa
ror
in
add
cs
jg
mov
outsb
cli
ss
add
in
adcb
mov
sti
xor
pop
mov
sti
cmp
push
ljmp
mov
xchg
loopne
cmp
lret
and
or
sub
ret
lcall
mov
stos
push
adc
aaa
jbe
popf
inc
test
cmp
popa
shl
call
loopne
adc
push
adc
jge
xchg
cmp
inc
sub
pop
pop
dec
cmpsl
icebp
inc
adcb
pop
and
sub
fildll
mov
ret
aas
leave
nop
and
ret
jle
mov
movsl
imul
int3
or
push
sbb
and
ficompl
cmp
jb
push
xlat
push
sub
js
mov
mov
aas
shll
inc
mov
push
cmp
sub
add
outsl
add
xor
mov
bnd
mov
cmp
ljmp
aas
inc
mov
and
pop
add
inc
inc
push
iret
out
xor
ds
les
fistl
rolb
outsl
adc
es
inc
jno
clc
jp
ja
pop
sbb
adc
pop
or
imul
sar
lahf
es
mov
sahf
add
ja
iret
ljmp
lods
xchg
cmp
jg
xchg
arpl
out
sbb
add
repz
sbb
cmp
sar
ljmp
xchg
or
adc
cli
lock
sbb
add
call
orl
outsl
adc
mov
jg
mov
mov
mov
lods
imul
mov
mov
les
and
daa
or
fnsave
fbld
dec
jecxz
aas
or
or
dec
adc
dec
jmp
mov
movsb
jmp
sub
jbe
mov
aas
shrl
xchg
and
das
adc
es
shl
dec
adc
pop
dec
insb
ret
test
jns
sbb
into
stos
ljmp
pop
xchg
dec
mov
lcall
jg
inc
sbb
ljmp
mov
add
xor
xchg
or
adc
insb
cld
data16
repz
mov
das
dec
ja
fmul
ja
pop
aaa
sbb
or
mov
rcl
scas
mov
fbld
dec
clc
push
mov
jnp
sbb
in
dec
mov
cmpsb
lods
pop
xchg
xor
push
out
stos
cmp
int
add
push
and
or
shrb
hlt
in
or
ret
dec
mov
decl
je
or
cltd
mov
xor
sbb
lock
mov
xor
orl
lods
pop
adc
lock
xlat
call
jmp
mov
dec
xchg
sarb
jg
lock
xchg
testl
ret
cmp
icebp
aaa
mov
sbb
mov
inc
test
pushl
or
out
sub
add
ds
jl
pop
and
mov
in
xor
sbb
jmp
add
rdpmc
sbb
decl
xlat
adc
shr
mov
cmp
push
cmpsb
mov
add
add
clc
divl
stos
xchg
xchg
push
jp
mov
clc
out
cmp
nop
inc
jg
cmp
and
das
pop
outsl
pop
les
mov
incl
mov
lods
fildll
or
lock
int
test
sbb
fidivrs
push
dec
ljmp
add
ja
popf
scas
xchg
sbb
into
adc
fcom
in
push
scas
mov
inc
lea
dec
sbb
sbb
nop
inc
test
or
bound
xor
out
mov
cmp
mov
outsl
ret
stos
fnstcw
mov
xchg
xchg
adc
or
push
mov
popa
cld
fisttps
xor
push
outsb
stos
jae
lret
cmp
and
jp
mov
movsl
mov
adcl
mov
or
add
dec
stos
pop
lods
pop
pop
addw
subb
mov
mov
icebp
fcmovnb
cld
fnstsw
lcall
aas
xchg
fistps
xchg
pop
je
pop
lods
mov
mov
pop
clc
fwait
mov
test
jg
push
push
pushf
mov
push
mov
stos
inc
adc
adc
icebp
out
add
mov
jl
xchg
mov
into
mov
mov
ds
addl
dec
jle
mov
mov
jb
es
sub
aaa
jg
jle
ljmp
andb
lret
loop
movsb
decl
insl
stos
mov
cmp
popa
mov
mov
sub
jmp
mov
ljmp
xor
lcall
xchg
or
ljmp
and
push
outsl
cli
loopne
xor
inc
or
incl
aaa
jbe
pop
add
cwtl
mov
pop
test
cmp
ja
jg
jg
push
adc
jns
cmpl
pop
pop
addb
adc
fisubrs
add
and
incl
inc
inc
jg
lea
jbe
cmp
enter
mov
fsubrp
inc
in
push
cmpsl
sar
je
rclb
inc
outsb
adc
ljmp
push
cmp
lret
pop
out
mov
mov
scas
mov
push
pop
call
inc
cmp
lock
sbb
mov
adc
popa
pop
xor
testb
das
mov
insb
ss
divb
jae
ss
sub
jb
pushl
incl
push
fisubs
cs
pop
and
ss
cmpsb
pop
popa
jnp
incl
loopne
xor
loop
or
pushf
and
add
fwait
sbbb
push
ds
movsl
jg
mov
xchg
push
xchg
in
dec
add
loop
mov
lock
stc
lds
or
push
aas
cmp
loop
jns
jl
lock
je
loop
or
mov
adc
loop
and
cld
imul
and
push
push
loopne
xor
xor
ret
int3
jle
fs
loopne
outsb
outsb
xor
mov
push
mov
cmpsl
icebp
es
repnz
adc
dec
loopne
inc
dec
ret
jo
std
test
adc
inc
xchg
sbb
hlt
icebp
pop
add
mov
ret
xchg
add
sar
ret
cld
push
add
lock
xchg
push
push
dec
daa
aas
es
cld
arpl
add
addb
mov
clc
subb
xchg
ds
xlat
das
jp
mov
sub
cmp
in
xchg
fstpt
and
mov
outsb
js
daa
mov
aas
or
and
or
ret
aas
or
pop
cmp
add
push
mov
imul
repnz
scas
adc
mov
clc
or
push
xchg
jb
push
pop
mov
and
sbb
subb
pop
dec
loopne
inc
mov
jle
jb
and
inc
cmpl
cmp
and
or
pop
push
xchg
incl
daa
jo
mov
xor
or
rcr
andl
lcall
roll
pushf
or
or
and
mov
jg
test
or
fnstsw
jns
stmxcsr
ss
jno
jge
sub
add
sti
mul
sbb
jp
popf
push
sbb
sub
sub
mov
sub
push
sbb
mov
xchg
ljmp
std
mov
clc
out
xchg
imul
fisttps
bound
xor
daa
imul
push
pop
xor
sub
mov
and
sub
ficoml
mov
cmp
pop
push
pop
mov
movsb
push
xor
or
mov
rcl
sub
push
test
fsubs
in
pop
and
rcl
out
jb
shll
and
incl
push
push
addl
rclb
das
fdivrl
adc
mov
lcall
or
outsb
dec
pop
outsl
push
pop
adcl
in
mov
lcall
adc
pop
sub
bswap
sub
lcall
adc
xchg
mov
or
icebp
filds
lock
arpl
mov
push
scas
mov
mov
das
cmp
outsl
mov
xchg
and
sub
test
sahf
adc
std
out
fisubs
fwait
imull
or
scas
push
and
cmpsb
out
inc
call
ret
int3
loopne
jns
frstor
sub
pop
testl
repnz
mov
xor
pop
mov
cmp
popf
test
jecxz
xchg
xor
adc
add
adc
push
ja
loop
fisttps
cs
pop
cld
ja
imulb
or
lcall
pushf
add
adc
adc
insb
loop
pop
push
aaa
icebp
add
addr16
xor
popf
xor
ret
and
xor
sub
adc
clc
addb
outsl
push
xor
outsl
adc
sar
decl
cmp
clc
pxor
lock
in
decl
incl
inc
xlat
stc
jl
or
add
sti
push
das
xor
or
xlat
add
or
and
fisubl
mov
ljmp
sarb
xor
push
imul
xchg
jne
xlat
sub
jecxz
cs
lcall
shlb
and
pop
add
sub
add
xchg
in
mov
fwait
into
xor
pop
adc
push
pop
dec
sbb
inc
push
xchg
and
add
std
cmp
or
xor
scas
ds
jae
out
out
sti
ljmp
pop
hlt
xor
and
leave
ret
and
sub
xor
pop
add
mov
icebp
push
dec
mov
push
gs
or
xchg
xor
pop
cmpl
sub
mov
pop
cld
incl
sub
sbb
push
bound
mov
filds
clc
pop
arpl
cwtl
and
lds
push
add
ss
out
adc
ljmp
bound
arpl
mov
sbb
and
add
bsr
faddl
xor
push
sub
aas
aad
cld
fisttps
mov
dec
mov
mov
ja
cli
pushf
add
adc
jecxz
aaa
mov
xor
or
mov
inc
adc
xlat
sub
add
call
cmp
mov
fwait
dec
mov
imul
or
jg
cwtl
xor
aaa
or
inc
int3
shrl
fdiv
jg
or
stc
fstps
xchg
jge
test
or
cmp
call
jecxz
xor
sub
cmp
inc
adc
cmp
xchg
cmpsb
and
xchg
insl
imul
adc
addr16
int
pop
ret
fadds
jecxz
in
push
mov
cld
outsl
xchg
test
call
cs
out
add
decl
mov
sub
inc
mov
mov
cli
call
loopne
lods
or
nop
pushf
cmp
cs
xor
xchg
test
push
sub
jb
js
fistpl
daa
sbb
pop
aas
push
rolb
andl
jbe
jbe
rcrl
jg
cmc
sbb
into
lret
mov
xor
outsb
sahf
adc
sub
mov
gs
cmpsl
sahf
add
iret
hlt
rcrb
adc
jg
jo
mov
mov
adc
dec
cmp
ret
in
adc
inc
add
pushl
jp
mov
es
popf
xchg
ss
in
div
adc
mov
aas
aaa
cs
cmp
jge
filds
cld
faddl
mov
cmp
inc
std
ljmp
into
imul
jecxz
lock
sar
cs
pop
xchg
add
addr16
rorb
mov
das
jecxz
lahf
mov
sbbb
xor
or
mov
clc
jg
pop
adc
push
dec
sub
jne
add
imul
and
and
sub
adc
cmc
fistpll
jbe
inc
mov
mov
in
cmp
dec
adc
out
pop
cwtl
pop
pop
es
clc
jmp
lahf
jg
sbb
bound
push
repnz
arpl
std
jg
mov
sahf
fdivs
icebp
dec
scas
or
xchg
jnp
xlat
push
lds
mov
movsb
dec
ss
xor
add
cmpsl
mov
cmp
adc
pop
cwtl
js
jge
stos
mov
aaa
jmp
jmp
fcmovb
inc
jbe
sub
cltd
lds
test
fwait
test
in
mov
sub
dec
xchg
dec
push
mov
cli
push
sub
sahf
lea
lock
aas
push
adc
mov
jmp
subb
sbb
int
or
jg
hlt
enter
cld
dec
inc
xchg
clc
ja
test
push
cmp
mov
cmpb
mov
subl
mov
das
or
xchg
clc
jmp
aam
ret
lret
push
fwait
test
movsb
inc
ss
jb
xchg
fs
mov
mov
and
mov
cwtl
jbe,pt
pop
pop
xchg
jg
popa
sahf
lret
ds
adc
test
and
pop
add
imul
ljmp
cld
cvtpi2ps
cmpsl
xor
add
int
call
xchg
gs
mov
push
ficomps
add
add
mov
or
xor
lods
and
add
jg
mov
push
stc
adc
mov
fisttps
clc
ljmp
pop
inc
gs
or
lret
std
iret
aad
sar
xor
das
fidivs
neg
mov
lcall
xor
cmpsb
mov
xchg
pop
insl
push
out
loope
jno
int3
mov
lock
or
adc
aad
mov
jbe
iret
incl
fs
mov
cld
sbb
out
sti
test
push
pop
fidivl
mov
or
ret
inc
movsb
lock
mov
sub
and
sahf
xor
lahf
out
xlat
cmp
test
and
push
cmp
and
push
sub
sub
icebp
pop
or
push
cmp
mov
mov
push
xchg
pop
xchg
lret
adc
xor
aaa
push
or
add
les
dec
lods
dec
aaa
bound
aam
push
pop
pop
push
xor
into
mov
divb
or
nop
jno
lods
and
into
imul
cmpsb
adc
pop
je
add
mov
outsb
push
mov
jmp
ficomps
push
mov
sbb
xor
shlb
testl
daa
lock
inc
cmp
hlt
ja
pop
movsb
add
data16
push
mov
sbb
jnp
enter
aas
mov
adc
es
push
jmp
jmp
push
sub
in
orb
fs
fwait
movsl
jg
mov
imul
ds
pop
fwait
loop
mov
shrb
push
outsb
fsubs
imul
paddusb
fsubs
or
and
popa
mov
int
pop
or
ret
sbb
lahf
pop
dec
test
pop
sarl
add
imul
sub
add
sub
sub
mov
cwtl
data16
iret
xor
push
sub
mov
push
push
vandnpd
es
or
cmpsb
mov
jg
and
imul
fsubs
sbb
sub
insl
data16
xchg
test
js
xchg
mov
jo
icebp
mov
mull
xor
add
sbb
mov
cmpsb
fildll
rol
mov
outsl
mov
clc
pop
je
sub
dec
imull
out
mov
sub
mov
xchg
call
fidivrl
into
jg
ds
ffree
adc
scas
leave
ds
mov
sub
adc
jbe
fsub
and
mov
ficoml
repz
int
push
mov
lahf
or
ret
push
mov
pop
mov
add
jns
mov
ljmp
int3
bound
adc
add
lea
mov
out
dec
aas
sbb
js
adc
pushf
adc
jl
mov
adc
sarl
aaa
mov
inc
push
pop
jmp
scas
push
dec
pop
jno
mov
jnp
rclb
mov
out
aad
xor
adc
fdivrl
movsb
jl
jecxz
enter
or
or
sbb
cs
sub
mov
aas
xchg
shlb
push
mov
js
jo
push
scas
jmp
es
xchg
cmpsb
incl
dec
push
rcrl
dec
mov
sub
lock
sahf
ljmp
cli
ja
cmpsb
insb
adc
cs
inc
cmpsl
inc
xlat
push
ja
clc
cmp
bound
call
inc
jecxz
sub
jg
ljmp
and
in
adc
pop
idiv
sbb
in
in
pop
sarl
cs
aad
add
mov
xchg
sub
jo
ja
call
push
sbb
mov
jae
adc
fwait
popa
cmp
insl
ljmp
push
jg
fwait
mov
push
sub
mov
jmp
loopne
int3
leave
pop
shrb
cmp
xor
pop
mov
xorb
jmp
lret
das
inc
addr16
ret
push
jg
inc
sbb
daa
jnp
sub
add
mov
xor
scas
pop
cmp
pop
mov
ljmp
lods
push
mov
adc
lods
pop
arpl
cli
ja
imul
sub
jg
dec
mov
rcrb
outsb
cld
fs
icebp
xorl
mov
cmp
cld
pop
dec
cmpsl
jne
or
cmp
jg
pop
mov
sbb
jns
cltd
lcall
adc
mov
sar
in
fdivrl
mov
or
stc
push
push
mov
mov
mov
xchg
inc
sbb
out
movsl
test
gs
inc
sbb
adc
mov
gs
jo
std
clc
cltd
mov
jo
add
add
or
pushl
push
mov
sbb
nop
xchg
icebp
push
cmpb
xchg
jbe
xchg
jg
inc
adc
int
pop
push
xchg
mov
adc
add
cmp
or
jb
das
in
mov
out
lock
and
mov
lcall
pop
pop
ret
xchg
cmpsb
xchg
jle
inc
cmp
sub
icebp
jg
adc
mov
push
loopne
lods
xchg
dec
inc
and
clc
pop
scas
xor
xchg
mov
jo
sub
mov
sub
ljmp
insl
mov
sbb
lcall
inc
mov
pop
add
cmpsl
fisubrs
das
sub
clc
ja
clc
testl
pop
movsl
sub
icebp
ja
jb
lahf
mov
ret
es
dec
mov
sub
add
adc
or
push
adc
repnz
xor
or
shll
xchg
cmp
scas
mov
mov
pop
dec
fwait
das
test
rclb
pop
cs
pushl
das
test
mov
add
out
and
push
lods
popa
montmul
cmpsb
adcb
aas
add
fs
push
fnstcw
xor
mov
stos
loope
ja
aas
push
fsubl
pop
in
ss
xor
decl
and
call
stos
sub
xor
or
or
push
inc
adc
stos
repz
xorl
push
lods
sub
cwtl
xchg
add
daa
jo
test
cltd
incl
dec
test
cmpsb
xor
jmp
fbld
jp
repz
sub
jbe
or
enter
in
cmp
cmpsl
jb
adc
test
add
fstpt
lcall
scas
or
ja
hlt
movsb
push
cli
aaa
push
inc
aas
and
pop
mov
clc
dec
add
sbb
ret
jns
es
orb
out
fisttps
inc
je
xorb
push
scas
push
mov
sbb
pop
jg
lock
mov
icebp
sbb
mov
adc
pop
stos
cmp
test
push
sbb
dec
xchg
adc
mov
cmpsb
mov
das
fdivs
outsl
and
iret
nop
mov
clc
dec
adc
cwtl
std
fdivp
in
mov
scas
xchg
pushl
pop
add
lock
push
and
shlb
decb
arpl
bound
inc
push
push
xor
outsl
test
dec
into
jmp
lods
sbb
aam
cmp
ljmp
test
iret
iret
arpl
pop
cltd
mov
ficoms
jae
lea
push
scas
imul
jns
hlt
arpl
es
jbe
jle
xor
dec
out
jle
mov
xchg
int3
add
aaa
bound
adc
loopne
jecxz
es
addr16
push
fwait
int3
sub
jb
imul
xor
das
push
arpl
mov
out
clc
mov
out
sbb
jg
inc
sbb
cmp
scas
sub
jecxz
int
sub
popf
jge
xor
outsl
les
outsb
and
in
adc
pusha
cltd
sbb
xor
sbb
outsl
stc
pushf
sbb
std
fisttpl
cmp
push
out
jb
xor
dec
dec
ljmp
fcomp
cld
scas
mov
pop
aas
cld
mov
pop
leave
lret
loop
mov
mov
femms
sar
es
fxch
inc
mov
push
push
jg
hlt
ljmp
fimuls
cld
mov
and
insb
leave
in
outsl
test
mov
mov
insb
test
outsl
ljmp
push
sbb
dec
adc
notl
nop
xchg
repz
adc
or
ret
adc
push
mov
inc
sbb
scas
fidivs
sub
int3
sub
leave
orb
xor
pop
cmp
add
lods
filds
fists
pop
xchg
adc
ljmp
add
push
loopne
fidivrl
lcall
xor
dec
inc
loop
and
adc
daa
and
ret
cmpsl
cmpsl
out
add
push
inc
mov
in
rcrb
push
ja
mov
jne
addr16
fwait
test
sub
fwait
cmpsb
add
shrl
pop
push
jmp
cmpsl
ljmp
movsb
ret
imul
mov
popf
cs
add
outsl
or
and
mov
sbb
and
pop
or
fs
dec
not
push
test
je
rcrl
hlt
movsl
or
xchg
fsubrs
ret
pusha
or
push
popf
pop
add
gs
das
or
andb
adc
cmp
cs
mov
fwait
mov
fisubrs
and
pushf
fdivp
pop
add
sbbl
mov
cmp
scas
push
ret
cmpsb
inc
add
jle
or
sbb
dec
mov
pop
sahf
fsubl
lcall
ljmp
cltd
add
jne
dec
cmpsl
mov
clc
fwait
incl
xchg
inc
push
add
jne
pop
sbb
pop
rcrb
lods
fcompl
jb
push
xchg
fisubrs
cmpsl
cmpsb
pushf
xchg
test
jl,pn
dec
add
pop
push
inc
repnz
jg
mov
inc
aas
push
test
sbb
fidivs
xchg
mov
cmp
inc
decl
andl
xchg
outsb
xchg
sbb
std
int
mov
mov
cli
push
dec
jl
icebp
pop
lods
adc
ret
ds
mov
cmp
jbe
mov
shll
and
mov
incl
adc
insl
cwtl
sbb
xchg
and
cli
cmp
xorl
ja
jmp
int
fbld
ror
dec
or
xorb
or
and
lcall
add
xor
dec
mov
lods
mov
out
add
mov
insl
mov
xor
xor
lcall
add
and
mov
pop
and
and
push
ret
repnz
sbb
in
cmp
cmc
sub
scas
idivl
or
testb
xorb
in
gs
test
cld
push
add
ja
decb
push
cmp
mov
push
pop
cmpsl
adc
adc
das
lret
jmp
cmp
mov
nop
push
dec
xor
outsl
bound
xchg
xor
aaa
scas
push
xor
roll
fisttps
pop
mov
ret
aam
add
xchg
xor
and
icebp
aaa
or
dec
pusha
xor
clc
dec
dec
jl
movsl
sub
cs
inc
adc
out
adc
push
fisttpll
adc
insb
sub
negb
cs
loop
mov
pop
mov
std
or
sub
xchg
shlb
sbb
ljmp
jg
inc
xor
and
or
mov
inc
aas
movsb
push
and
pop
repnz
inc
loop
or
fwait
dec
sub
ljmp
fstpt
mov
mov
mov
jl
dec
push
and
push
ja
filds
xor
inc
sbb
inc
repz
decl
in
test
and
subl
into
or
sbb
xor
int
sub
loop
cld
xorb
sub
cld
add
add
jp,pt
sar
in
cmp
xor
dec
shr
and
push
adc
xor
pop
mov
pop
shlb
push
cld
and
lcall
sarl
add
pop
rclb
clc
xor
or
add
aaa
ja
incl
xorl
aad
sub
mov
dec
inc
pop
gs
push
dec
pop
cmpsb
cmpsb
ficompl
outsb
mov
pop
sub
mov
cmp
pop
ljmp
push
cmpsl
xor
cmp
xchg
cli
mov
pop
fadds
xor
dec
sub
cmp
sub
fiadds
cld
pop
mov
hlt
stos
shll
or
pop
mov
and
cmp
les
je
push
decb
adc
mov
inc
and
inc
popf
and
cmpsb
mov
cmp
cli
decl
jle
out
das
adc
adc
es
and
cmp
xchg
mov
jno
lret
adc
push
xchg
mov
push
inc
jno
leave
cli
inc
fdivl
repnz
push
sbb
call
jmp
mov
sbb
adc
sbb
shl
popf
js
imul
addl
mov
andb
mov
filds
inc
mov
int
add
jmp
sarl
mov
decl
std
inc
sub
jmp
and
pop
call
jecxz
std
or
push
sub
push
or
cld
cmc
lahf
in
xor
dec
mov
xchg
lret
sbb
jge
mov
xor
xor
and
and
decb
aas
jb
and
scas
cmp
jns
arpl
push
add
pop
jle
decb
or
or
push
inc
xor
and
es
outsl
sbbl
mov
xor
xor
mov
movb
push
lock
mov
in
imul
inc
push
xor
fwait
pushl
movb
lods
add
popa
out
fidivs
and
add
dec
adc
cmp
jo
sbb
mov
adc
cmp
repnz
push
or
sti
mov
aas
ds
pushf
sub
cmp
cs
and
push
icebp
sub
xor
loop
sbb
in
inc
push
or
and
lcall
push
add
push
mov
mov
inc
sbb
repnz
pop
das
fsubl
cmp
cmp
pushf
xor
outsl
mov
cvtpi2ps
sbb
imul
sub
adc
mov
shll
decl
adc
pop
sub
pop
cmp
dec
lods
push
orl
cld
dec
inc
shll
pop
sbb
push
sbbl
add
cld
mov
std
sahf
test
ret
jge
lock
lock
fimuls
mov
in
mov
mov
cmpsl
movsl
outsb
dec
out
xchg
and
incl
push
into
pop
mov
jl
cmp
jecxz
xchg
out
jnp
ret
cs
jne
notl
testl
pop
sub
and
jg
arpl
cmp
push
cmpb
imul
sub
fbld
ficomps
rolb
or
xor
icebp
jg
adc
fisubrs
sbb
xchg
jle
xchg
pop
mov
and
push
add
sbb
jbe
js
jmp
incl
fbld
insl
into
jae
sub
xor
data16
or
ljmp
loop
in
sbb
cltd
inc
or
scas
jns
jbe
arpl
out
clc
or
mov
pop
movsb
in
mov
cmp
fcompl
subl
lods
lret
and
cmp
jns
sub
sub
sbb
sub
cli
jg
lock
cmpsl
cs
sub
or
xor
ss
jb
jno
mov
test
xor
cmpsb
icebp
movsb
stos
sbb
mov
mov
mov
mov
cwtl
inc
outsl
or
xchg
enter
stos
movsb
or
insl
mov
sbb
mov
push
pop
mov
sbb
lods
push
xchg
jl
in
adc
and
loop
sahf
jge
push
nop
cmc
xor
adc
stos
push
mov
jecxz
ror
int3
nop
icebp
push
lods
data16
adc
adc
sub
dec
xor
dec
jae
pop
rorb
or
ds
push
mov
enter
mov
dec
xlat
ja
int
xor
int3
push
mov
fnstcw
ds
or
fnstenv
or
in
sbbb
pusha
jl
cmc
arpl
xor
adc
pop
add
jb
inc
sbb
mov
push
lods
cli
pop
das
xor
or
or
pop
adc
dec
xchg
mov
sbbl
neg
out
sub
imul
cs
or
add
cmp
fbld
add
inc
xor
mov
fs
fs
mov
aam
mov
lcall
sahf
dec
insb
add
jbe
mov
adcb
push
mov
inc
inc
movsl
dec
cltd
mov
cwtl
clc
das
movsb
push
dec
sbb
jb
jne
movsl
imul
ljmp
mov
push
or
dec
cli
jnp
aas
pop
push
sbb
adc
mov
sbb
xchg
jecxz
popl
mov
lods
mov
popf
jg
lock
xor
hlt
dec
xor
push
cmp
repnz
dec
mov
mov
pop
aam
sbbb
mov
add
pop
cs
test
in
sbb
clc
mov
jle
adc
data16
jmp
sbb
data16
aad
sub
sahf
sub
dec
sub
dec
or
clc
mov
in
jb
mov
mov
xor
loop
clc
out
xor
add
xor
sbb
mov
iret
out
arpl
fwait
dec
cld
sbb
das
or
push
mov
rcrb
aaa
jg
adc
mov
jnp
cmp
push
sub
add
aam
adc
leave
aaa
lock
xchg
jg
ja
mov
ret
xchg
inc
and
test
std
addl
or
incl
mov
dec
pushf
and
push
pop
dec
cld
fwait
xchg
lods
add
sti
add
mov
and
ret
pop
pop
sbbl
daa
cmp
pop
imul
pop
mov
clc
pop
shrb
popf
xchg
sub
jmp
lcall
pusha
xor
xor
fwait
movsl
stos
and
addl
int3
add
cmpsb
sbb
test
pop
xor
pop
push
cmpsl
jl
out
clc
cwtl
das
add
push
sti
loop
sahf
das
incl
adc
das
aaa
lods
pop
cmp
jg
lcall
inc
mov
sub
mov
sub
shlb
icebp
adc
mov
mov
sti
imul
leave
sbb
sub
cmpsb
cmp
jmp
jecxz
mov
movntps
add
std
pushf
lds
cmp
push
add
jmp
xchg
add
sub
cmpsb
cld
pushf
dec
pop
sbb
mov
push
stos
xlat
sub
jne
outsl
femms
dec
pushf
mov
mov
loopne
lret
clc
dec
shlb
stos
mov
mov
lret
shl
hlt
push
mov
call
xchg
xor
push
ret
into
push
mov
xor
cmp
shrb
pop
movsl
xchg
add
mov
int3
mov
int
shlb
sbb
scas
jecxz
or
dec
fwait
cmpb
subl
or
lcall
xor
in
mov
adc
mov
aas
xchg
fcomip
scas
sub
addr16
cltd
xchg
clc
pushf
or
xchg
fadds
xchg
aas
cmpsb
add
xor
add
and
push
push
or
cmc
ja
clc
push
mov
dec
cli
sub
adc
lea
adc
xchg
jp
cli
pop
adc
into
bound
out
jg
xor
call
push
fsts
add
aas
int3
push
pop
adc
stos
test
sbb
enter
mov
aas
cs
testb
add
xchg
push
stos
stos
fistps
call
jb
dec
mov
add
imul
fistpl
sbb
insl
dec
or
cmpsb
ja
mov
jb
clc
aaa
mov
rcrl
lret
adc
adc
jno
pop
fbld
add
cmp
subb
sub
add
sahf
out
or
out
cmp
int3
inc
push
cltd
lcall
adc
into
mov
insb
flds
push
jg
lods
movsb
sub
outsl
mov
pop
add
push
push
pop
sbb
rclb
call
aam
mov
xchg
test
adc
fildl
pop
test
dec
or
fildl
mov
or
cmp
fwait
add
jg
bnd
movsl
inc
xchg
push
cmc
testb
ljmp
bound
sbb
push
div
fdivrl
adc
gs
pop
push
and
stos
mov
fwait
sub
and
call
mov
cld
das
inc
aad
or
xchg
sarb
or
imul
dec
cli
sub
dec
rcrl
outsb
jge
xor
mov
pop
and
jg
jmp
stc
lret
or
es
or
idivl
inc
jno
sbb
xchg
cld
data16
aaa
and
add
adc
bound
cmpsb
movsb
popf
xor
int
cmc
inc
jp
mov
cmp
pop
sub
subl
ss
or
sub
popf
adc
incb
jo
rolb
lock
jle
add
add
inc
cli
sub
call
xchg
shlb
stc
ret
in
pop
std
xor
mov
dec
filds
decb
aaa
outsl
xor
jp
xor
or
xor
adc
dec
insl
or
dec
cmp
bound
outsl
push
and
or
adc
test
test
cmp
das
pop
cmc
incl
dec
xor
adc
inc
push
enter
dec
dec
in
out
repnz
push
inc
scas
je
ljmp
add
pusha
inc
lahf
adc
jp
insl
fs
cmp
mov
ficoml
dec
adc
jg
fdivr
bound
jb
out
push
lea
leave
dec
push
sub
sub
loope
ud0
sbb
pop
loop
push
dec
mov
in
pop
cmp
and
inc
pop
ss
dec
sahf
inc
jae
in
add
cmp
and
pop
and
pop
movsb
cld
pop
aaa
pop
out
popa
out
and
icebp
mov
pop
shlb
pop
mov
jnp
fwait
sub
pop
aam
mov
sub
cmpsl
or
cli
lds
punpckldq
lods
scas
push
jbe
data16
inc
pop
lds
xchg
imul
push
pop
iret
or
inc
or
and
xchg
fdivl
sub
jg
xor
cmp
dec
mov
inc
fucomip
adc
xchg
lods
fiaddl
or
cmp
adc
add
clc
data16
xor
xchg
cmpsl
lret
in
test
loop
or
mov
cli
fcos
mov
pop
jge
lcall
test
jae
stos
leave
xorl
cmp
mov
es
mov
jg
xor
cmp
cmp
sub
sbb
xchg
sub
jg
inc
loopne
inc
frstor
adc
in
inc
and
cmp
pop
aaa
xchg
data16
mov
in
fadds
repz
out
push
leave
cmp
sub
rorb
lea
jo
mov
xor
adc
das
insl
aam
push
cli
or
push
mov
cs
pop
pop
inc
pop
xor
dec
pop
insb
inc
stos
sbb
fs
aaa
shll
xchg
add
adc
add
testb
dec
shlb
and
incl
xchg
pop
or
xor
test
sbb
shlb
pop
mov
out
xchg
ljmp
xor
fwait
js
inc
xor
push
das
aaa
jge
adc
jg
push
mov
jge
shll
cmpsb
ljmp
pop
loopne
hlt
mov
cmc
imulb
addr16
cmpsl
inc
jle
add
xlat
icebp
sbb
cmp
rorl
addr16
mov
movb
cmc
sub
xchg
decl
mov
bound
enter
rol
push
in
push
mov
pop
adc
imul
rcrb
add
insb
lahf
cmp
jmp
movsb
leave
sbb
inc
ficoms
adc
out
loop
or
aam
adc
xor
stos
or
inc
test
jg
cmp
mov
cmp
or
push
mov
mov
fstpt
shrl
or
or
shl
test
and
or
xchg
sbb
push
shlb
sbb
scas
rcrl
jb
loop
outsb
cmpsl
dec
and
mov
call
inc
aaa
aam
sub
test
popf
xor
adc
icebp
xchg
pop
fisubrs
and
test
aaa
std
cwtl
enter
add
sub
enter
test
jle
adcb
cmp
out
rcrb
jge
push
inc
sub
mov
mov
inc
mov
mov
fisubs
dec
sub
or
mov
and
scas
repnz
jp
mov
jb
jae
xor
jp
stos
add
or
push
out
adc
and
inc
pop
push
inc
mov
push
jno
push
scas
push
cmc
push
cld
jecxz
fs
inc
xor
scas
push
push
inc
xchg
loop
rcrb
pop
jo
arpl
xchg
inc
or
dec
dec
mov
popf
pop
sub
mov
jmp
inc
adc
fs
jmp
fbld
or
add
loopne
nop
je
pop
or
sahf
add
lods
xchg
pop
cmc
addr16
mov
or
movsl
shlb
add
inc
pop
lock
push
sub
loop
pop
mov
push
out
mov
enter
mov
xor
pushf
fdivs
lea
or
loopne
push
and
mov
jmp
fists
sahf
lret
xor
test
jge
inc
imul
xchg
es
jp
sbb
xor
xchg
fwait
icebp
dec
sbb
sub
push
dec
mov
testb
sub
pusha
and
jo
dec
cwtl
mov
aaa
ljmp
inc
inc
or
xchg
or
rcrb
push
sbb
push
push
sub
cmp
pop
mov
cwtl
test
pcmpgtw
xor
inc
lock
push
cmp
iret
pop
add
daa
aas
pop
stos
out
pop
adc
out
in
pop
ds
adc
xchg
push
lss
lods
pop
cmp
jl
pop
dec
dec
mov
lcall
lahf
xlat
lcall
jge
test
push
ss
inc
inc
mov
and
subb
adc
dec
aas
data16
cmpsb
mov
sbb
enter
mov
outsb
pop
and
loop
idivl
cmp
jbe
xchg
scas
cmp
and
cmc
incl
es
into
push
jg
xor
dec
lahf
push
cmpb
and
imul
xchg
xchg
fdiv
fs
or
fsubrs
and
mov
pop
add
stos
mov
loop
cld
aas
mov
fadds
adc
sbb
cltd
and
jg
outsb
scas
dec
mov
inc
push
cltd
inc
dec
iret
mov
fisubl
jnp
ret
mov
add
cmp
scas
lock
cwtl
cmp
test
orb
femms
insl
xchg
das
adc
pop
movsl
adc
ds
mov
cld
mov
jns
test
push
outsl
insl
add
es
or
push
pop
cld
decl
mov
ljmp
push
and
je
adc
cmpsb
jle
shrl
mov
dec
inc
mov
and
mov
jle
cmp
push
pusha
and
dec
push
pop
sbb
jo
and
xor
and
aaa
pusha
xchg
test
sbb
dec
inc
inc
dec
testb
in
outsl
int3
fisubrs
fwait
cmc
adc
adc
dec
jns
dec
and
mov
dec
pushl
std
stc
ret
outsl
mov
out
push
xor
pop
adc
sbbb
push
aaa
popf
xchg
xchg
xor
xlat
sahf
mov
xlat
and
cwtl
mov
or
dec
mov
sbb
push
aas
clc
pop
or
add
or
xchg
mov
sub
jg
mov
aas
push
in
or
add
in
add
push
mov
and
jg
jl
and
xor
test
sub
pop
lods
add
in
mov
outsl
lea
into
push
xor
push
cmpsb
clc
or
fimull
xchg
lret
add
ljmp
icebp
add
adc
push
sub
xchg
push
adc
or
addr16
fwait
lcall
addr16
sbb
outsl
inc
xchg
xor
dec
mov
pusha
lcall
inc
mov
or
mov
push
ret
adc
aas
in
stc
ja
loop
mov
xor
dec
mov
xchg
add
pop
jge
lcall
add
cmp
xor
in
in
rolb
out
test
mov
mov
lds
push
inc
fwait
in
mov
push
clc
pop
or
or
push
scas
mov
lock
bound
je
out
out
mov
bound
xor
pop
fidivrs
mov
test
cmp
mov
mov
fidivl
or
add
mov
jno
lea
lock
dec
push
mov
lahf
lsl
xor
mov
sub
loopne
xchg
push
fstpl
das
xchg
fwait
aad
pop
lods
jg
icebp
rep
mov
xor
sbb
rcr
inc
xor
sub
lahf
add
xor
mov
sub
xor
and
clc
je
jae
aaa
lahf
add
xlat
sbb
and
push
xchg
or
xor
scas
jb
sub
mov
insb
xor
mov
add
fbstp
test
push
bound
cmp
addl
or
mov
mov
dec
jmp
mov
sbb
pop
xchg
sar
cmpsl
jg
daa
pushf
jns
mov
lock
call
test
mov
pop
jo
add
sbb
pop
lods
xchg
iret
sbb
jbe
subl
je
jne
push
push
stos
jl
pop
adc
clc
das
incb
scas
shll
xchg
dec
xor
das
or
cwtl
out
cmp
xlat
aam
sub
dec
sbb
data16
mov
mov
fs
fsubrs
cmp
inc
pop
mov
sbb
ret
dec
push
push
xor
cmp
jbe
push
dec
loope
outsl
adc
addr16
or
push
movsb
mov
pop
adc
jg
outsl
cltd
das
mov
adc
sbb
je
mov
clc
mov
fisttpll
bound
aad
inc
std
mov
mov
enter
xor
ja
subl
outsb
dec
lea
push
and
add
stc
aam
mov
cwtl
lcall
mov
fisubrs
or
test
or
shlb
mov
fidivs
push
push
mov
arpl
pop
iret
dec
sarb
sahf
mov
iret
xor
push
enter
aad
mov
push
push
pop
mov
cmp
adc
and
incl
outsb
push
add
pushf
test
cmp
or
shr
and
movsl
daa
sbb
decl
call
fcompl
mov
xor
inc
aam
rolb
mov
pop
jb
test
jg
jbe
cmpb
imul
sbb
cli
incl
push
cld
cmp
xor
adc
jge
add
data16
xor
sub
mov
push
call
mov
lock
sub
cmp
loop
add
jbe
lock
mov
cmp
je
loope
xchg
cli
lahf
cmc
xor
push
adc
adcl
xlat
mov
lcall
jl
or
add
sbb
insl
jnp
cwtl
sub
ret
pusha
or
addr16
rcrb
je
movsl
cmc
stos
mov
xchg
adc
add
adc
push
and
cs
add
or
or
mov
into
and
sbb
xor
or
sar
jl
add
scas
inc
inc
adc
sbb
daa
hlt
aas
mov
or
roll
addr16
repnz
inc
mov
leave
cmp
les
add
cmp
mov
cld
outsl
fwait
test
es
xchg
add
cs
and
mov
cmp
cltd
xchg
push
ret
pop
and
mov
std
inc
arpl
scas
es
lods
ficompl
xlat
and
mov
pop
adc
push
stc
pop
inc
out
sbb
add
fcompl
jae
mov
cmpsb
test
cmp
inc
test
sub
mov
mov
dec
ljmp
shll
adc
clc
mov
jp
inc
adc
out
push
adc
arpl
pop
xor
cld
clc
repz
mov
out
rolb
dec
out
and
jp
es
mov
iret
jge
push
es
lea
pushl
xchg
divb
jmp
outsl
sub
jmp
adc
cmpl
xor
mov
cmpsb
adc
les
mov
xor
push
cld
lcall
sbb
or
cmp
imul
dec
popa
jae
xlat
mov
dec
outsb
or
inc
or
xchg
or
dec
out
lret
xor
add
stos
test
into
inc
jg
sub
cltd
push
pop
mov
andb
dec
sahf
adc
incl
push
add
dec
imul
mov
add
push
xchg
mov
mov
and
push
inc
or
add
pop
sub
icebp
cmp
out
sub
xchg
mov
cs
or
lods
mov
mov
insb
lahf
mov
or
inc
sub
xor
lods
or
test
gs
mov
mov
push
cmc
sbb
movsb
aaa
or
sbb
xchg
xor
mov
jg
outsl
and
pushf
add
arpl
or
in
leave
repnz
mov
add
or
repnz
inc
lock
inc
fwait
mov
cwtl
adc
pop
subl
mov
and
push
in
add
stos
xchg
and
setns
xchg
adc
jg
lea
xor
sbb
sbb
xchg
nop
mov
loop
inc
inc
sbb
xor
adc
mov
pushl
lcall
adcl
or
ds
outsl
sub
cltd
jae
das
cli
jnp
mov
push
pop
repz
je
je
push
js
loope
jp
fisttps
and
aad
loopne
cmova
jmp
dec
jge
in
fcmovnu
jb
inc
aas
or
out
jbe,pn
stos
push
shlb
or
fs
jnp
jno
aaa
insl
cmp
std
add
imul
iret
and
push
popa
push
outsb
pop
jg
roll
cmp
enter
stc
subl
jg
out
mov
sub
inc
bound
mov
outsb
or
jmp
aaa
lret
sbb
sub
arpl
push
push
jecxz
cmpsb
mov
pop
push
dec
mov
incl
pop
dec
das
stc
in
sahf
mov
fbld
ss
dec
adc
mov
clc
sbb
xor
sub
mov
pop
shrb
or
xchg
mov
test
imul
lock
jle
dec
insb
pop
push
add
adc
out
sbb
scas
in
ret
xor
sbb
cmpb
adcb
mov
jp
or
cmp
movsb
sub
add
mov
mov
and
push
push
std
fwait
sub
cmp
imul
dec
test
mov
pop
add
mov
sti
add
cmp
or
data16
std
push
or
push
test
push
and
pop
pusha
cs
stos
push
xchg
adc
cmp
fbstp
pop
adc
lock
xor
out
aaa
leave
int3
sbb
mov
push
daa
adc
ret
lcall
fwait
sahf
pop
daa
adc
push
cmp
out
rolb
lcall
jecxz
subb
push
mov
xchg
jbe
push
addb
mov
idivl
or
push
lahf
out
adc
mov
pop
push
dec
push
add
mov
sbb
mov
loope
enter
dec
mov
inc
popf
push
mov
dec
jecxz
negb
mov
mov
lea
xchg
ss
decl
push
lock
jbe
xlat
cmp
or
test
clc
add
imul
aaa
cwtl
sbb
cmp
stc
inc
and
or
fsubl
push
decl
adc
fsubl
das
in
fxtract
imul
ret
mov
inc
popa
mov
sbb
jge
xor
sub
or
leave
ret
mov
inc
sahf
sbb
test
push
repnz
xchg
inc
in
xorb
mov
fists
and
shl
add
and
push
ja
pushl
sub
mov
test
gs
iret
mov
je
inc
adc
inc
push
dec
sub
idiv
inc
into
outsb
cmp
xor
or
inc
mov
adc
pusha
ss
in
sti
cld
mov
outsl
mov
pop
es
xlat
jnp
xlat
mov
gs
sbb
add
xorb
orl
dec
mov
cltd
jg
test
subl
or
sub
aaa
pop
clc
outsl
stos
cmp
mov
sbb
adc
das
jle
pop
pushl
mov
cmp
inc
inc
mov
stos
xor
mov
popl
notb
adc
daa
dec
push
test
scas
and
xor
fs
inc
daa
add
jp
sbb
fwait
sub
pop
lods
jbe
or
test
aad
sbb
pop
das
mov
xor
add
push
pop
pop
dec
loopne
pop
xor
and
add
insl
cmp
inc
outsl
stos
or
sub
das
mov
mov
cwtl
lretw
mov
xor
xor
xchg
or
das
push
clc
call
sub
push
fwait
ja
adc
and
adc
sub
movsb
mov
jmp
sbb
ljmp
xchg
mov
or
sub
mov
cmp
in
out
push
aam
out
ret
push
aam
shll
xor
cmp
outsb
pop
insl
cld
call
mov
xchg
inc
fwait
cmp
insl
idivl
aam
imulb
mov
lcall
push
pop
push
cld
mov
push
mov
ds
outsl
xchg
test
pushf
mov
mov
add
decl
lret
or
jbe
pop
in
scas
or
dec
pop
loop
scas
jmp
stos
mov
test
sub
push
movsb
pop
aas
and
daa
dec
mov
pop
cltd
xchg
ret
nop
xor
inc
or
cwtl
outsl
je
pop
cmp
mov
outsl
clc
mov
shl
aam
das
xor
jl
arpl
push
add
mov
sahf
cmpsb
imul
sbb
rcrl
das
iret
paddw
xor
jmp
and
mov
and
mov
insl
xor
fistps
out
inc
dec
or
outsl
inc
jecxz
mov
imul
popa
mov
bt
stc
cli
fbld
lret
xor
outsl
shl
adc
sbbl
sub
nop
in
fistpl
out
in
sbbl
mov
mov
mov
ds
decl
xchg
or
sbb
shll
mov
std
fcoms
pop
mov
mov
adc
and
fxch
sbb
dec
sbb
cmp
repz
jo
mov
das
mov
js
ds
ss
divb
cmp
cld
mov
lds
push
ljmp
pop
push
adc
shrb
cmp
or
dec
das
xchg
dec
scas
adc
sub
hlt
ror
lock
xor
repz
adc
mov
fsubrl
fnstcw
cltd
cltd
push
xchg
ret
inc
and
loop
add
mov
fiadds
xlat
mul
icebp
movsl
push
jo
ja
cmc
lock
cmpsb
cmc
cmpsb
mov
les
pop
xchg
sub
push
cmp
stos
xchg
mov
lahf
mov
sub
jnp
lods
pop
stos
or
mov
and
mov
aas
cmpl
lock
repnz
out
ss
jo
mov
loope
or
inc
lcall
stc
xchg
fsubs
rcrb
cld
in
jge
in
fistpl
into
ss
mov
sub
ds
adc
mov
and
lock
lea
mov
pop
push
ret
jecxz
daa
and
jp
adc
stc
cltd
dec
push
and
dec
in
lret
jg
shr
fdivs
pop
imul
ljmp
fildll
and
popf
cmp
xor
cmp
insb
adc
adc
xchg
icebp
sbb
rcrb
cmpsl
sub
adc
pushf
jbe
jne
sahf
scas
adc
ljmp
xor
test
and
sub
sbb
imul
jge
shll
mov
add
push
mov
mov
xchg
dec
psllw
add
roll
sub
pop
jbe
xchg
or
cwtl
pop
adc
or
cmpsb
push
xor
arpl
adc
sbb
test
pop
rorb
call
cld
aaa
sbb
pop
add
xorb
out
test
mov
sarb
int
cmpsb
push
pop
sub
mov
inc
or
push
mov
lods
dec
cli
jne
sub
push
sub
or
push
pop
push
mov
pushl
stc
cmc
sarl
cmp
scas
inc
sbb
scas
adc
xchg
lods
push
and
enter
jg
negb
jmp
cld
sub
xor
ret
stos
or
dec
add
inc
daa
xchg
jns
decl
push
or
arpl
mov
aam
divl
pop
outsl
shlb
push
cmp
cmpsb
js
inc
inc
insb
jnp
lds
lcall
sahf
out
fsubr
fcmove
pop
add
or
push
ss
add
mov
push
iret
gs
mov
xor
dec
sub
icebp
push
and
mov
into
fiadds
test
pop
and
mov
mov
icebp
xor
adcb
mov
loop
mov
adc
inc
das
push
adc
push
insb
sbb
fiaddl
dec
sbb
ljmp
xchg
mov
fimull
pop
imul
inc
xchg
inc
or
imul
aam
sub
inc
or
inc
movsl
lea
sbb
add
jmp
icebp
scas
push
stc
dec
mov
jp
adc
imul
pop
push
and
mov
popa
mov
sbb
out
clc
mov
fidivrl
rolb
mov
jns
cmpsb
pop
xor
or
push
jl
loopne
pop
xor
adc
outsb
cld
jg
into
pop
push
xchg
cmp
icebp
or
and
test
call
inc
xor
xor
dec
test
sti
push
cmp
mov
or
sahf
jnp
daa
cmp
scas
dec
loope
decl
xchg
mov
mov
or
js
xor
or
lcall
out
push
jle
add
add
dec
dec
daa
mov
shlb
outsb
and
ja
mov
xor
or
inc
jns
test
add
stos
insb
cmp
inc
ds
mov
sahf
ss
jmp
sbb
xchg
pop
ss
inc
and
add
pop
lea
pop
sbb
into
xchg
ret
rcrb
mov
repz
std
aas
gs
int3
xor
sbb
xlat
adc
adc
push
jle
clc
push
mov
sub
mov
dec
xchg
xlat
mov
cmp
add
jge
push
mov
sbb
fwait
pop
cmpsb
and
cmpl
ljmp
ja
in
inc
add
jns
jle
fldl
fldl
outsl
add
lock
bound
popa
sbb
cs
pop
and
mov
aaa
js
mov
adc
add
out
mov
jg
popa
popa
add
cli
aam
out
push
lcall
decl
adc
inc
es
or
hlt
sub
add
addr16
add
in
push
xor
xor
xchg
rcll
jbe
and
leave
jae
mov
repz
xchg
pop
fimuls
out
inc
cmp
sub
dec
decb
ja
lock
dec
jl
dec
mov
data16
and
shlb
or
lods
pop
sub
jp
inc
testl
cmpsl
test
add
ds
add
shrl
cmp
xchg
sub
sbb
aam
xor
or
scas
pop
sub
mov
pushf
push
xor
dec
xor
inc
fisttps
test
shrb
dec
subb
mov
out
arpl
cmp
or
pop
test
dec
mov
sbb
pop
xchg
and
sbb
pushf
es
or
jb
adc
in
xchg
jge
dec
xchg
std
scas
add
imul
outsl
mov
adc
sub
movsb
loopne
ffreep
cmp
mov
push
mov
outsb
push
dec
sub
cmpb
das
ffree
shl
addl
push
mov
int3
cltd
dec
call
shlb
cmp
lock
mov
mov
les
int3
es
mov
outsb
decl
incl
add
insb
mov
and
nop
sub
or
inc
inc
shrl
dec
xchg
insl
inc
pop
lock
cltd
mov
inc
mov
xchg
aam
sub
sbb
or
mov
insb
push
cs
sbb
pushf
decl
push
xchg
scas
stc
mov
jne
sahf
fwait
pop
mov
pop
decl
outsl
je
test
dec
sti
xchg
xchg
and
or
aaa
sbb
fildll
pop
and
orb
imul
mov
dec
cwtl
mov
ja
jg
push
pop
sahf
inc
push
pushl
xchg
not
sti
clc
pusha
mov
push
imul
mov
jg
sbb
cmp
jge
or
lock
dec
test
ljmp
mov
aad
adc
push
mov
nop
inc
dec
push
cs
pop
les
data16
int
repz
jg
test
pushl
insb
pop
cld
xchg
sub
push
dec
loop
ljmp
jb
push
adc
imul
mov
lock
popa
adc
or
cld
inc
mov
or
leave
movsb
xchg
into
sbb
iret
dec
nop
xchg
pop
mov
inc
jbe
mov
les
jecxz
push
es
xchg
inc
push
cmp
hlt
addr16
jne
out
cmp
adc
push
push
pop
popf
cmc
ret
mov
inc
mov
fs
xchg
jl
inc
xchg
and
das
sub
adc
jbe
ja
hlt
jo
xchg
fisubl
and
add
or
ss
cli
ja
clc
push
mov
hlt
imull
ret
repnz
shrb
incl
pop
add
dec
sbb
xor
les
adc
insb
test
js
mov
dec
sbb
push
dec
xor
leave
sti
dec
in
push
aas
push
imul
jecxz
stc
push
stc
lcall
inc
imul
sarb
and
outsb
add
loop
cs
mov
mov
outsb
loope
leave
mov
mov
sbb
inc
mov
jbe
jmp
ja
jge
jnp
fs
adc
fcomip
test
inc
imul
mov
cmp
mov
inc
mov
ljmp
pop
lea
rcrb
cmp
pop
loop
sub
push
js
xchg
sub
sbb
mov
jle
jbe
jbe
ljmp
daa
shll
jg
push
and
jg
pop
data16
loopne
sub
cmpsl
pusha
js
sarl
sti
push
les
mov
stos
cmpsl
sub
js
mov
push
hlt
push
incl
popf
xchg
push
sahf
jb
je
add
lret
rcll
ds
sub
add
decl
clc
sahf
jl
mov
xchg
pusha
popa
inc
arpl
incl
pop
cmp
les
mov
aad
int
lcall
or
pushl
fistl
mov
bound
pop
aas
pop
xchg
cmp
and
inc
add
loope
testl
pop
xor
push
xor
cmc
push
push
loope
adc
iret
sub
sub
pop
arpl
dec
call
hlt
xchg
jecxz
jno
push
pop
jp
notb
cmp
push
sub
pop
inc
cmp
les
loop
add
and
dec
rcr
push
push
pop
es
or
cmp
sarb
lock
sbb
sub
test
sbb
sub
test
sar
pop
cmp
pop
add
adc
fsubrl
add
decl
xchg
shlb
sar
mov
cmc
dec
test
add
adc
cmp
pushf
aam
fwait
inc
jg
dec
mov
pop
mov
and
push
dec
ret
cmp
pop
or
add
clc
call
in
std
mov
mov
lock
call
movsb
xor
daa
xchg
in
pop
mov
inc
outsl
sub
or
out
pandn
call
and
loop
and
filds
lock
or
or
mov
in
pushf
sbb
cmpsl
les
jmp
push
adc
fbld
pop
shlb
pusha
stc
stc
jle
aam
test
cmp
lret
mov
dec
ret
and
scas
dec
divb
sub
in
sbb
cmp
sbb
mov
mov
out
lret
dec
dec
push
mov
out
addb
and
clc
data16
jecxz
push
push
fcomip
bound
ret
push
jp
popf
pushf
and
cltd
roll
sbb
outsb
nop
jns
jp
mov
jae
lcall
mov
and
push
outsl
addb
jo
dec
inc
adc
mov
jb
fwait
sbbb
and
lds
mov
dec
push
or
pop
outsb
movsl
rclb
push
jge
or
imull
loop
ljmp
out
rolb
ss
test
sub
inc
inc
cld
jmp
lcall
femms
rcll
lahf
dec
inc
cld
out
ficoml
xchg
adc
dec
mov
arpl
or
sbb
scas
xlat
add
pushl
adc
push
imul
bound
jno
out
mov
shlb
pop
jecxz
xchg
and
jp
jp
adc
loope
lret
xor
push
pmuludq
add
mov
rclb
sbbb
jo
adc
lret
or
xchg
enter
movsl
rcll
mov
xchg
dec
pop
sub
imul
enter
mov
cli
cld
popa
xchg
shll
mov
pushf
hlt
cld
lahf
jb
mov
insb
xchg
inc
imul
pop
ja
xchg
ljmp
addr16
push
cwtl
ret
lods
sub
lods
in
add
sub
call
xchg
clc
ljmp
pop
dec
push
and
lcall
cmpsb
cmp
pop
inc
mov
sub
test
mov
incl
les
and
jg
and
scas
inc
iret
or
mov
cmp
and
fists
pop
cmc
pop
jno
pop
push
sub
or
mov
cmp
std
in
push
icebp
jae
add
les
sbb
cmp
xchg
pop
rorb
call
and
jb
imul
hlt
pop
idivb
cmp
fcompl
fadd
push
loopne
lock
push
mov
fdivs
sahf
mov
jbe
lock
sbb
xor
adc
or
or
fdivrl
gs
mov
xor
jno
ret
jns
ror
add
mov
xor
js
xor
pop
fs
push
scas
mov
push
out
mov
mov
loope
fstps
daa
adc
jb
push
jp
lcall
pop
pop
incl
int
idivb
jae
jg
fs
sahf
jge
lcall
inc
sub
je
std
xchg
mov
add
jbe
adc
fists
or
dec
push
jnp
iret
or
xchg
pop
dec
arpl
hlt
push
loopne
sbb
push
jmp
lock
mov
pop
inc
lea
stos
sub
dec
ret
in
adc
jae
dec
push
das
imulb
pushf
mov
pusha
sbb
mov
loope
or
inc
pop
jp
sbb
incl
lea
fmull
in
inc
or
data16
dec
cld
scas
mov
add
insl
mov
inc
bound
cs
inc
outsl
shrb
lcall
xchg
scas
and
inc
fidivs
add
inc
pop
jmp
lahf
cmpsb
cmc
or
fcomip
xlat
stc
inc
fwait
sub
jge
adc
jns
push
xchg
jo
and
jle
repz
fcomip
inc
mov
sub
xlat
and
jge
das
xor
add
or
jnp
in
les
inc
xlat
dec
ljmp
mov
cltd
xlat
out
call
shrb
mov
xchg
dec
pop
sar
cmp
mov
cld
or
fildl
pop
pop
inc
jns
mov
stos
ljmp
fistpll
in
ds
sub
popa
js
lahf
loopne
jno
xchg
mov
add
pop
add
out
sub
push
mov
mov
sahf
mov
addr16
mov
aaa
in
add
ja
sub
jae
cmp
sbb
mov
daa
cmpsb
pop
pop
sbb
or
xchg
mov
pop
dec
aam
inc
mov
lcall
out
inc
pop
jb
xor
adc
fs
out
fsubrp
mov
stc
xor
fisubrl
jmp
jb
repnz
insb
sub
push
push
xor
test
mov
out
sahf
cmp
xchg
call
test
pop
fisttpll
cmc
sbb
push
mov
dec
dec
push
dec
jnp
cmpl
lcall
pop
push
dec
push
push
push
in
movsb
cltd
push
mov
push
push
aas
add
andb
xchg
and
clc
push
inc
lret
sub
movsl
fwait
scas
pushl
cli
iret
test
imul
ljmp
clc
decl
push
push
jnp
xor
cmc
inc
outsb
ja
jbe
push
fisttps
push
dec
inc
lret
add
test
decl
ret
test
pop
xchg
popa
insl
idivb
lret
jbe
pusha
aad
fisubrl
dec
test
cwtl
adc
ds
sub
xchg
pop
les
add
aaa
lods
cli
jmp
lods
xchg
aam
jnp
ret
cltd
cmp
push
jae
sahf
adc
mov
sub
jle
add
gs
jp
xor
dec
arpl
aaa
jmp
sti
or
cwtl
cli
push
mov
ret
and
lods
jns
sbb
mov
sar
mov
sbb
or
sbb
push
shl
xchg
xor
rcrb
and
push
lret
rcrb
icebp
in
sub
out
aad
xor
sub
mov
dec
test
cmp
call
pop
loop
push
test
push
scas
sub
sub
into
or
mov
arpl
jo
decl
dec
clc
sbb
pop
mov
int
out
inc
add
or
xchg
sbb
mov
inc
mov
dec
cmpsl
jge
and
add
xor
jae
xor
jg
pop
bound
cmp
loope
out
mov
or
lcall
push
cmp
cmc
nop
adc
add
dec
mov
pop
cmp
cs
cli
mov
loope
cld
or
xor
gs
subl
inc
test
jmp
fwait
and
inc
mov
sub
scas
push
sub
fwait
icebp
pushl
dec
pusha
cmpsb
push
lret
and
sub
mov
lret
aaa
fdivl
rcll
xor
es
stos
mov
fwait
shll
adc
stc
out
ret
aad
pop
cmc
add
out
clc
popf
push
jae
xchg
es
mov
and
push
jb
mov
cmp
movsb
jmp
std
push
mov
push
lea
dec
mov
std
pop
push
fwait
dec
dec
leave
lahf
mov
push
in
adc
pop
movsl
cmpl
inc
push
push
push
gs
ja
sbb
es
dec
dec
in
add
add
mov
lcall
or
decb
fwait
or
in
xchg
add
stos
into
adc
dec
clc
decl
enter
pusha
inc
outsb
adc
fldt
out
sub
sbb
clc
inc
inc
or
lds
cmp
mov
int
lock
jmp
dec
cli
push
test
push
dec
cmp
mov
push
add
outsb
addl
test
add
dec
mov
ds
mov
sub
arpl
repnz
mov
movsb
rorl
out
xchg
jp
mov
mov
in
ret
js
dec
and
inc
push
sub
imul
cs
scas
loopne
cmpsb
jns
push
sub
stc
mov
mov
add
jle
push
jne
jne
adc
fs
xchg
jl
insl
adc
add
jnp
lods
call
inc
inc
iret
scas
mov
xorb
add
dec
jae
push
sub
inc
data16
ds
gs
sti
movsl
jmp
jecxz
bound
dec
stos
loopne
xchg
aam
jg
push
dec
mov
push
rcll
hlt
and
imul
adc
inc
addr16
mov
insl
pushl
jmp
test
add
imul
dec
xchg
inc
mov
mov
out
ljmp
inc
sub
sbb
push
test
clc
out
iret
lahf
xor
mov
jo
mov
addb
incl
clc
incl
pusha
jge
mov
shrl
fdivr
lcall
outsb
lahf
jbe
push
or
stos
js
movsb
mov
dec
repnz
cwtl
add
dec
ljmp
lods
shrb
sub
dec
sub
test
cltd
fdivrs
jg
jo
hlt
lret
lret
push
fidivrl
lcall
hlt
mov
ficompl
fimuls
hlt
push
cld
jg
push
push
mov
inc
push
sti
shrl
and
incl
or
cltd
inc
pushf
xor
push
dec
into
test
aam
jmp
arpl
ja
popa
jge
fsubs
ja
clc
stos
xchg
fidivl
jmp
push
push
test
adcl
clc
jg
dec
sbb
push
dec
cmp
pop
push
int
call
bound
mov
fisubl
mov
pop
jns
ja
xorb
sahf
andb
cs
je
jg
add
inc
sti
les
adc
inc
pop
int3
mov
rorl
sbb
adc
js
ljmp
lcall
fistl
lahf
push
test
dec
adc
aas
push
sbb
inc
popa
ja
sub
jnp
ficomps
mov
xchg
and
xchg
sub
sub
xor
dec
decl
pusha
loop
mov
mov
test
ljmp
adc
mov
xchg
lock
mov
loop
mov
hlt
decl
stos
lcall
sahf
out
adc
jmp
cmpsl
adc
push
fimull
js
push
lahf
add
js
stos
sub
gs
aas
idiv
pushl
push
fmull
rol
insl
mov
jb
fisubrl
rcrb
lds
stc
lcall
jge
push
adc
icebp
je
push
xor
repnz
mov
mov
and
fstpl
xchg
jne
jge
hlt
scas
mov
insb
loope
adc
mov
and
ret
sub
mov
pop
push
nop
xor
adc
jge
jae
or
cmpsb
call
inc
adc
and
push
pop
dec
cwtl
mov
jecxz
pop
xchg
jnp
daa
cltd
imul
dec
cli
pushf
mov
sbb
testb
insl
xchg
bound
pop
mov
push
jae
ficomps
jl
into
fcompl
mov
jo
jbe
cmpsl
sbb
ficomps
cmp
ljmp
outsl
incl
jmp
jnp
xchg
dec
fwait
push
outsb
jmp
mov
or
dec
mov
ljmp
add
test
xchg
jle
lahf
sbb
in
xor
mov
out
push
ljmp
mov
jns
das
fists
adc
inc
inc
mov
xchg
fs
in
jg
cmc
call
pop
push
addr16
add
out
outsl
nop
mov
pop
push
dec
push
pause
rclb
jle
or
mov
and
incl
scas
jl
out
lods
mov
dec
filds
mov
inc
inc
sub
insb
jg
dec
pop
cld
ss
mov
adc
fs
mov
cmp
ja
dec
adc
fs
decl
pop
push
movsb
out
out
pop
rcrb
mov
dec
dec
cs
out
pop
orl
xchg
jg
sub
insb
dec
cmp
sahf
imul
ficomps
mov
pushl
addb
into
js
and
pop
pop
jp
mov
data16
push
jmp
bound
cmp
sub
push
divb
push
incl
fistpl
shlb
in
pop
dec
or
dec
xorb
insb
fldcw
adc
jmp
or
push
outsb
fldl
jmp
leave
bound
cmp
icebp
jg
dec
sbb
stos
iret
push
ficoml
decl
add
pop
pop
aas
add
daa
test
sub
mov
pop
arpl
add
push
ret
sahf
fwait
sub
cltd
mov
lahf
cmc
ljmp
out
movsl
adc
pop
dec
jg
pop
inc
arpl
sbb
inc
push
lahf
bound
lahf
test
cmp
cli
adc
icebp
icebp
aaa
int
mov
xchg
cmp
cmp
xchg
ret
and
call
push
shr
inc
hlt
popa
sti
int3
iret
pop
cmpsb
mov
rcrb
mov
jmp
decl
cmp
or
stos
xchg
out
repz
add
mov
push
leave
pop
lcall
std
test
rorl
imul
and
rclb
lret
dec
loop
dec
iret
sahf
pop
mov
push
sar
mov
or
cmp
jmp
jp
icebp
or
mov
test
xchg
mov
or
dec
xor
outsl
mov
out
mov
cwtl
jbe
or
pushf
mov
shrb
cmpsb
sbb
pop
sbb
lahf
jmp
jo
dec
popa
and
lret
add
adc
test
mov
mov
loop
cld
inc
call
incl
mov
rorl
jmp
cmp
dec
movsb
inc
aaa
std
decl
xor
inc
enter
push
xchg
or
aam
insb
sub
sub
push
daa
pop
jno
icebp
pop
inc
pushf
adc
or
bound
gs
lret
lret
xchg
xor
les
jne
cli
jmp
xchg
loop
jo
xor
cmp
sub
sub
in
aam
and
dec
out
mov
xchg
hlt
mov
test
icebp
sahf
in
jae
fisttps
jg
mov
outsb
sbb
push
mov
into
ret
cmc
incl
add
repnz
into
or
sbb
pop
push
cmp
pop
mov
pop
arpl
mov
sub
fidivrs
pop
outsl
mov
jg
rclb
in
out
repz
inc
or
jle
mov
inc
sti
fldl2e
and
add
push
mov
jmp
mov
push
pop
pop
outsb
add
pop
mov
sbb
fbld
mov
ljmp
shr
xchg
sarl
add
sbb
pop
int
movsb
inc
or
scas
and
std
call
shrb
iret
adc
lcall
inc
bound
sbb
and
call
sbb
lds
xchg
xor
mov
sub
inc
pushl
aam
data16
push
fcomi
dec
out
pop
out
pop
or
jae
push
loop
sub
add
les
sti
jl
hlt
inc
out
xchg
incb
mov
ret
adc
dec
mov
xchg
sub
cmp
jg
mov
push
push
dec
mov
fwait
std
ja
add
lret
mov
bound
rcr
inc
mulb
sarb
push
loopne
rcr
into
daa
sub
es
adc
movsb
cmp
pop
and
sub
js
lret
jg
loopne
mov
inc
mov
rorl
popa
repz
push
mov
imul
adc
mov
lcall
ds
loope
xor
andb
aad
mov
ja
mov
jecxz
cmp
out
enter
ljmp
daa
out
int3
test
scas
movsb
sub
fisubl
cli
fcmovb
dec
test
dec
outsl
xor
or
out
add
lcall
inc
adc
pop
fsts
add
cmp
cmc
xor
xor
andl
test
jle
and
and
xor
ja
mov
out
in
imul
cmp
pop
movsb
lcall
or
fs
dec
add
les
or
cmp
addr16
or
lcall
pop
push
aas
cmc
mov
test
shrb
mov
cmpsb
loopne
push
ljmp
cmp
std
push
sub
testl
das
jp
jbe
out
pop
ud0
fisttps
inc
or
jae
sub
pop
or
cli
es
hlt
add
cmp
jbe
clc
jno
and
mov
imul
imul
imulb
pop
daa
xchg
test
mov
push
lret
xor
jl
jg
scas
cmp
push
adc
jae
sbb
sub
aaa
sbb
mov
pop
mov
fidivrl
shr
mov
add
sbbb
and
dec
jp
ds
mov
cmp
jb
into
dec
jg
push
mov
inc
popf
mov
adc
lock
stos
clc
dec
fidivrs
jmp
clc
or
sub
jmp
xor
sub
push
add
and
add
ljmp
iret
mov
stc
mov
jmp
cld
hlt
xchg
xor
outsl
je
fcompl
hlt
fistpll
cmp
bnd
jge
sub
mov
outsl
cmp
or
mov
push
mov
sbb
fdivrs
and
and
mov
insb
jecxz
int3
mov
mov
js
lock
inc
cmp
test
pop
pop
mov
int
sbb
cs
mov
loopne
inc
in
fstpl
repz
fiadds
call
imul
je
sub
into
cmp
int3
mov
sub
test
sarl
ret
sub
mov
out
pushf
pop
in
jecxz
mov
int
jp
add
cld
mov
or
dec
loopne
loope
data16
incl
push
out
sub
aaa
orb
test
mov
pushl
mov
hlt
popf
sbb
inc
insb
cltd
dec
mov
pop
adc
call
mov
and
lods
movsl
stos
and
jg
lahf
filds
push
fistpll
mov
jmp
pop
loopne
sub
mov
cli
sahf
loopne
mov
jmp
scas
sub
mov
pop
ljmp
and
push
test
or
mov
sub
scas
push
decl
clc
mov
xlat
mov
xchg
sbb
cmp
mov
pushl
or
cmp
mov
fisttpl
dec
or
mov
xor
sub
cwtl
pop
loop
xlat
or
or
fbstp
repz
flds
sub
sti
outsl
aam
or
je
cld
push
stos
insb
add
mov
adc
out
enter
pop
lcall
pop
js
xchg
or
or
xchg
lret
and
cmpb
in
cmc
mov
adcb
cld
inc
dec
jae
ja
jmp
je
add
test
cmc
test
ret
stc
test
sti
mov
out
xor
xchg
adc
andb
sbb
int3
rcll
dec
in
mov
cmp
pushf
dec
cld
movsl
leave
sub
mov
mov
xchg
cli
mov
add
adc
jmp
jmp
sub
mov
add
scas
push
fimull
call
sub
jmp
cmp
ret
lea
rolb
iret
mov
push
stc
add
aam
jg
imul
pop
fsubrs
sbb
scas
mov
cmpsb
mov
shrb
or
popf
push
sub
mov
add
rcrb
decb
fimuls
cmp
mov
clc
lcall
dec
jno
jl
jb
mov
loop
fcmovb
pop
lock
pop
add
scas
loop
xchg
outsb
inc
jnp
xchg
and
or
in
push
std
or
das
lock
push
mov
cmp
decl
mov
call
aaa
cmp
xchg
xchg
fwait
xchg
push
movsb
nop
hlt
ss
and
sti
cwtl
mov
loope
adc
add
push
jo
in
cli
fs
or
jnp
and
andb
add
mov
or
loope
jne
sbb
imul
daa
and
mov
decb
or
sar
lcall
cmp
xchg
sub
sub
sub
xor
xor
das
hlt
xor
aas
dec
pop
clc
ss
ljmp
xor
sahf
scas
adc
and
xor
hlt
adc
cmpsb
call
sub
shrb
or
xor
sub
mov
sbb
adc
xor
fnsave
or
cmp
cmp
adc
or
and
testb
xor
icebp
sbb
aaa
ret
sub
push
dec
xor
adc
inc
mov
pop
shrb
ficoms
push
and
and
or
cmpsb
cmp
xor
adc
lcall
sub
sub
cs
or
adc
outsb
mov
xor
xor
add
pop
push
sub
mov
lret
ss
idiv
and
insb
cmp
das
sub
out
and
cmp
mulb
fwait
out
pop
rorl
adc
add
xor
daa
shlb
xor
testb
cmp
xchg
and
cmp
pushl
adc
fwait
push
add
lods
imul
ret
jge
mov
pop
xchg
jle
test
mov
mov
cmovo
es
mov
fbstp
or
gs
fadd
or
inc
gs
inc
pushf
jne
push
aaa
jmp
add
scas
push
cmp
pop
lret
clc
scas
cmpsb
sub
add
insb
popf
jno
dec
adc
mov
inc
std
jne
push
add
adc
jge
pop
mov
loop
insl
mov
outsb
sbb
jl
add
dec
jg
push
test
xor
and
imul
jbe
jnp
fildll
dec
adc
je
pop
jl
dec
lret
inc
in
adc
jb
sbb
out
add
lcall
push
push
push
xor
insb
popf
sbb
push
aas
adc
lahf
jbe
aaa
fildll
sub
sbb
inc
mov
sub
bound
mov
pop
push
jae
aaa
insl
xor
mov
arpl
ss
pop
sub
pop
sbb
lods
sbb
icebp
add
or
into
cs
ja
xchg
fdiv
outsl
jp
cmpsb
sub
imulb
mov
push
das
add
mov
and
inc
mov
add
sbb
add
mov
fcmovnb
icebp
jg
rorl
or
add
add
add
push
push
mov
sbb
or
repnz
loop
xor
mov
mov
sub
or
sar
call
cmp
xchg
ljmp
xor
add
pop
and
push
sbb
fbld
push
sub
push
mov
xchg
sar
cld
dec
cmpsl
pop
xor
xor
and
add
dec
mov
xchg
mov
and
cs
sub
popf
cmpsl
test
enter
pop
add
filds
xor
fstps
out
pop
xor
cwtl
and
sbb
push
test
mov
or
push
push
mov
mov
xchg
iret
testl
xchg
call
lcall
sub
lahf
push
add
xchg
adc
push
fwait
pusha
sahf
fisubrs
loopne
call
mov
out
shl
les
fsubs
cmp
popa
insb
mov
cs
sub
out
pop
xor
xor
xchg
pushl
mov
pop
jo
fistpll
and
ljmp
rcrl
xor
fwait
push
icebp
cmc
xor
adc
ja
xchg
fbstp
adc
cmp
lcall
add
and
cmp
xor
jnp
cmpsb
jo
cli
xchg
jb
outsb
cmpsl
and
sar
push
push
mov
and
xchg
sar
decl
popf
aaa
xchg
jp
sti
jae
pop
adc
dec
fcmovnu
pop
ss
lahf
or
lcall
inc
jle
mov
in
jmp
test
mov
icebp
out
test
out
push
add
es
sarl
and
inc
push
cltd
out
dec
sbb
cmp
dec
hlt
imulb
or
call
cld
idiv
mov
sbb
outsl
xchg
daa
flds
mov
cmpsb
cmp
jae
lds
dec
mov
ficoms
call
or
jl
cmp
pop
or
adc
scas
mov
std
loope
xor
cmp
sub
adc
idiv
lcall
sbb
or
lea
pop
in
aaa
loope
inc
clc
aam
and
jmp
mov
mov
xlat
jg
or
mov
add
adc
adc
sbb
test
outsb
or
popw
out
lods
push
adcb
lret
lock
cmp
push
jo
repz
aas
mov
and
and
iret
and
or
or
dec
lcall
push
xor
pop
stc
aam
idiv
pop
adc
mov
xor
sub
sub
pop
loop
mov
fsts
daa
adc
xor
push
mov
clc
decl
test
ret
lock
out
jg
ret
rolb
add
pop
inc
lcall
shll
nop
push
dec
add
pop
dec
pop
jge
mov
fs
jg
mov
xor
jp
in
repnz
push
mov
filds
pop
jmp
pop
sbb
or
cmpl
into
or
sbb
std
adc
push
arpl
xchg
ds
jb
push
lret
jg
sar
into
xor
loope
inc
and
into
cmp
incl
dec
jmp
push
int3
add
xor
cmp
jmp
push
loope
sub
ret
cmp
insl
adc
push
pop
sub
mov
lods
add
rcrb
add
xor
ljmp
xchg
or
stos
push
test
pop
jne
inc
pushl
adc
pop
jb
aam
or
xor
mov
add
cvtps2pi
out
push
jg
out
adc
lcall
mov
mov
adc
daa
nop
add
stc
cmp
or
add
push
or
jne
out
cmp
clc
or
out
or
adc
jae
or
adc
adc
ficomps
stos
es
sbb
icebp
call
enter
mov
aas
pop
popa
pop
inc
arpl
add
loop,pn
or
test
fdivr
aas
jle
sbb
aad
js
push
test
ja
cwtl
aaa
pop
adc
or
ffree
push
inc
outsb
rcll
popf
and
retw
push
call
add
pmovmskb
mov
std
sub
xacquire
aaa
lcall
mov
push
xchg
push
add
scas
icebp
sub
mov
inc
and
jno
or
pop
dec
scas
je
dec
incl
aaa
pop
inc
fwait
cmp
xchg
in
pop
inc
in
inc
cli
ja
rolb
arpl
popa
jae
adc
insb
mov
out
jp
push
sub
jmp
sbb
inc
xlat
lcall
push
pop
xor
fnstcw
or
push
in
int
rol
or
cs
mov
cltd
fwait
movsb
aaa
push
cli
and
imul
je
jp
bnd
push
lock
jmp
and
lods
outsb
xor
aaa
push
cmp
jg
xor
pop
fldl
loop
add
xor
mov
jle
lock
ds
hlt
sbb
and
push
outsb
cmp
and
adc
xchg
add
out
pop
repnz
jg
aad
adc
sub
and
fwait
adc
fildl
jns
leave
add
add
sbb
mov
dec
xor
pop
gs
inc
mov
roll
adc
adc
sar
or
icebp
xlat
jge
fdivrs
jg
pop
fcomps
fisttpll
pop
xor
ja
addr16
or
lods
pop
jae
mov
jp
out
movsb
hlt
add
sbb
push
push
adc
jne
jno
sbb
fcomip
incl
and
mov
movsl
mov
cmp
js
sub
or
test
dec
lret
jmp
jno
loop
sarl
cmp
adc
lcall
add
das
and
notrack
or
shrl
insl
imul
aad
hlt
or
push
dec
inc
call
fidivl
cs
add
xchg
cmp
outsl
inc
fwait
lock
outsb
enter
adcb
mov
and
movsb
dec
js
jl
xchg
jo
sbb
jp
cmp
enter
sar
lcall
out
cmp
sbb
in
xorl
ljmp
or
push
push
lock
cmp
xor
mov
mov
mov
xchg
xchg
clc
or
es
sub
pop
add
ret
addr16
push
aad
or
popa
sub
stc
add
ret
lret
fildll
sbb
mov
notl
and
pop
in
sub
jmp
xor
pusha
push
adc
cmpsb
mov
testb
clc
stc
or
sub
add
sub
xchg
mov
pop
pop
addr16
push
jmp
push
in
fsubrl
in
inc
add
jg
cmp
negb
push
hlt
cmp
add
xor
ss
or
jbe
cmp
dec
xor
psrad
push
adc
int3
aas
adc
sbb
shr
mov
mov
push
xor
outsb
dec
decl
adc
push
sbb
push
das
cli
incl
jne
dec
mov
or
pop
push
xor
sbb
cmpsl
ret
xor
aam
clc
jmp
push
and
aaa
add
adc
and
push
sub
adc
ds
lcall
mov
add
mov
push
and
or
jg
push
add
fldenv
aaa
push
in
mov
cmp
pop
js
mov
dec
xor
push
xchg
loope
xor
add
mov
lock
or
pop
dec
sub
xor
add
sbb
or
pop
decl
jle
xchg
in
push
clc
test
rcrb
push
push
pop
sbb
cmp
arpl
push
push
addb
ljmp
lock
adc
push
adc
push
pop
lcall
jl
sbb
xchg
imul
adcl
push
incl
sub
inc
cs
mov
sub
out
adc
dec
push
sub
push
insb
fcomip
out
xchg
jg
sub
inc
mov
sbb
clc
add
inc
dec
add
or
daa
sbb
pop
decb
call
mov
add
inc
bound
mov
fstp
push
andb
or
adc
xor
sbb
mov
push
aaa
mov
cmp
enter
xor
sub
xor
jae
and
pop
fists
fildll
sbb
xchg
fnstsw
push
mov
adc
mov
ss
push
lods
shl
bound
ljmp
fcomps
sub
out
push
mov
jge
and
aaa
mov
and
dec
loopne
xor
sub
loopne
mov
ret
sbb
adc
and
outsl
ljmp
adc
in
nop
sarb
lret
outsb
ret
jl
adc
mov
mov
add
mov
int
mov
fidivs
decl
clc
pop
jp
jnp
idivl
add
aas
int
pop
xchg
jb
add
and
or
loope
lds
jbe
xor
out
mov
pop
cld
movsb
js
es
dec
push
cmp
jp
imul
or
arpl
inc
lock
xor
pop
push
mov
mov
decl
push
cmp
pop
xchg
aaa
add
cmp
inc
mov
jmp
lahf
push
mov
mov
cs
sbb
push
in
push
or
push
jb
mov
and
dec
fcomip
enter
and
ljmp
outsl
test
data16
pop
jnp
sbb
and
jge
add
xor
pop
xchg
mov
and
inc
adc
aaa
shlb
subl
pop
or
in
pop
jl
pop
push
sub
sar
jo
testb
inc
mov
out
xor
das
lret
call
cmp
jo
daa
out
lahf
out
or
nop
and
enter
ffree
or
call
cltd
and
pop
or
aam
movsb
sub
ja
clc
es
pop
mov
faddl
bound
std
jg
dec
aaa
movsb
sbb
lret
mov
insb
stos
lret
pop
push
shlb
inc
sbb
lcall
or
scas
inc
movsb
add
push
adc
lret
adc
leave
outsb
inc
rolb
clc
decl
and
xor
mov
cltd
scas
add
popa
jmp
push
and
cld
incl
mov
arpl
inc
sbb
or
push
andb
inc
outsl
subb
insl
push
loopne
hlt
mov
cmp
data16
or
in
mov
ljmp
and
sahf
or
call
fs
imul
add
in
sarb
dec
mov
fiaddl
mov
mov
roll
cld
imull
rcrl
clc
sub
mov
sbb
scas
mov
movsl
sti
addr16
sbb
call
dec
sbb
push
mov
mov
fsubrl
inc
aas
xor
sub
pushf
xor
enter
mov
or
pop
insb
insl
int
add
and
cmpsb
adc
cld
in
push
add
data16
mov
push
clc
sbb
pop
cmp
xchg
mov
and
nop
add
cmp
mov
pushl
push
mov
es
add
dec
shrl
add
aaa
jge
add
data16
mov
xchg
or
fcomps
mov
cmc
push
push
sbb
xlat
cmpsb
pop
push
mov
jl
jl
lcall
push
inc
pusha
mov
xor
cli
pushl
pop
and
shl
lds
sahf
jbe
add
inc
adc
or
fcomip
cmp
sbb
cmp
add
xor
xor
cltd
sbb
out
mov
fsubrs
push
inc
movlps
jp
cmp
xchg
or
mov
xor
xor
jae
das
dec
ljmp
insb
cmp
cmpsl
lods
jg
or
out
xchg
add
jg
icebp
lock
fisttps
xorl
jp
push
add
mov
jg
popf
mov
jne
cmp
add
in
decl
add
bound
push
add
jmp
pop
sub
arpl
loop
cld
cmp
fs
or
adc
ljmp
sbb
inc
and
pop
paddw
sbb
arpl
sbb
jl
inc
mov
pop
xor
jnp
mov
inc
jge
sar
decl
dec
add
jp
sti
push
aaa
pusha
fdivl
mov
aaa
mov
mov
int3
cltd
dec
decl
add
sub
addr16
xor
xor
je
mov
mov
lcall
sub
jbe
mov
dec
daa
out
rclb
outsl
call
cmp
adc
and
fstps
xor
movl
dec
pushf
pop
sub
scas
in
mov
aaa
cs
push
xor
dec
xor
out
loopne
incl
dec
loopne
inc
push
dec
mov
cmp
and
jl
loopne
lahf
lgs
data16
daa
aaa
xor
push
pop
xchg
repnz
pop
ja
hlt
xor
mov
xchg
fwait
lcall
daa
mov
cmc
loope
jnp
pushf
dec
out
std
sbb
adc
add
incl
cld
cmpsl
sbb
xor
inc
xchg
cmp
push
movsl
ja
std
dec
add
fs
in
add
pop
scas
push
pop
dec
jmp
jp
ds
push
test
ret
cs
out
mov
adc
sbb
pop
mov
dec
movsb
and
mov
push
add
pop
lcall
pop
xorl
dec
cli
jg
add
pop
push
imul
mov
mov
fstl
js
pop
dec
incl
or
push
jbe
jp
adc
push
mov
pushf
pushl
icebp
ljmp
fsubrs
pop
mov
sbb
pop
aaa
jge
movsl
ret
adc
movsb
fs
adc
dec
mov
ds
cwtl
sub
inc
dec
pushf
push
jle
mov
cld
shrl
cmpsl
sbbb
inc
xchg
cmp
lcall
or
or
push
mov
pop
lcall
pop
aam
testb
xor
push
outsb
jge
push
ds
or
pop
popf
push
xchg
int
or
jo
js
movsl
add
rorl
ja
xchg
and
incl
push
fnstsw
or
push
pop
jno
ljmp
add
adc
sub
rep
inc
mov
or
clc
call
inc
jg
sub
in
flds
ljmp
scas
jge
ss
sahf
mov
mov
aad
pop
mov
adc
das
xor
jmp
insl
das
xor
divb
and
and
fcom
aaa
xor
outsl
jmp
sub
jg
test
mov
iret
call
out
cs
lock
testb
mov
add
dec
and
pop
inc
mov
xor
es
in
dec
inc
leave
mov
push
clc
bnd
add
loope
push
and
xchg
xchg
add
or
dec
mov
inc
jge
or
mov
dec
adc
js
jg
mov
incl
or
jecxz
push
cmp
outsb
cmp
inc
or
sub
inc
stos
pop
ljmp
pop
pop
ret
or
push
in
aas
cwtl
cli
dec
mov
mov
stos
sub
and
sbb
jg
hlt
mov
sub
aaa
jp
dec
icebp
add
or
arpl
cmp
ljmp
loopne
pop
outsb
pop
movsb
jae
or
xchg
fs
adc
add
dec
in
mov
sbb
jg
pusha
mov
mov
mov
scas
jg
push
add
pop
push
stos
ja
or
adc
jnp
add
jg
sub
jnp
and
orl
jmp
inc
aaa
js
add
jmp
jl
pop
pop
sub
inc
pop
pop
inc
shll
addb
pusha
inc
sub
call
jg
stc
push
xor
aad
push
dec
pop
lods
jge
sbb
xlat
sub
xchg
sbb
add
hlt
lcall
pop
stos
inc
ja
decl
loopne
std
pop
xor
pop
or
das
gs
call
cli
fcomip
sbb
aas
data16
inc
lcall
outsl
inc
aaa
es
or
cmp
aaa
loopne
cmp
and
adc
lret
and
or
xor
daa
lock
inc
lret
adc
mov
mov
cmpb
pop
mov
dec
mov
bound
jp
mov
or
aaa
sbb
pop
add
jmp
cmp
mov
or
fisttps
mov
or
ss
jnp
xor
lds
jle
es
jle
add
adc
cmp
out
fistps
sub
mov
outsl
clc
lcall
sbb
jno
adc
int
ds
add
inc
outsb
dec
out
les
lods
or
es
int
jp
pop
cs
sub
out
decl
cld
or
cmp
stc
pop
lock
mov
mov
cmpsb
sbb
inc
xchg
sbb
jno
inc
incl
into
xlat
dec
push
sub
shll
jmp
push
jg
inc
lds
mov
jg
out
fsubl
jge
xor
dec
cmp
cmp
dec
dec
jmp
adc
sbb
mov
inc
cmp
pop
cmp
pop
ljmp
stos
xorb
pop
inc
jnp
ss
and
inc
fsubr
jns
cmp
outsl
cli
xor
lods
adc
jo
push
adc
mov
loopne
movsl
push
addr16
loop
lret
dec
sahf
aaa
ds
pop
movaps
inc
add
jge
jg
test
subb
test
cmp
jns
pop
cmp
ret
sbb
pusha
adc
or
inc
adc
sub
in
jbe
jecxz
push
or
jle
ficoms
xor
repz
jo
jnp
inc
and
pusha
sub
jle
jo
stc
mov
pop
or
dec
pop
cs
dec
add
ds
inc
or
mov
xchg
sbb
jg
lcall
push
jbe
push
test
cmpb
shr
adc
dec
jecxz
fs
rolb
call
dec
dec
repnz
sbb
jp
out
inc
sbb
inc
fs
jle
add
sar
mov
pushl
or
xchg
xor
inc
int3
es
inc
test
xor
nop
aad
dec
aaa
cmpsb
add
ss
gs
mov
sarb
sbb
xor
xor
leave
jge
mov
cmp
xchg
pop
int3
jge
add
sbb
outsb
dec
cmp
rcrl
xor
scas
add
es
stos
jp
cmp
ss
lock
cld
push
cmpsb
pop
call
adc
jno
aas
std
fbld
shll
cmp
in
add
lret
inc
or
pop
adc
ss
or
fucom
xor
pop
push
adc
aaa
sub
and
in
test
ficoms
sarl
sbb
ss
mulb
dec
or
es
cli
or
fnstcw
push
xor
cmp
pop
inc
clc
dec
das
cltd
into
adc
repz
push
loopne
inc
pop
xorb
sub
int3
out
js
pop
addr16
sub
add
jnp
fs
into
daa
hlt
jg
xorl
ds
insl
sbb
stc
in
jecxz
repnz
mov
loop
add
in
fwait
repnz
pushf
out
jne
fbstp
add
pushl
ljmp
or
mov
jb
and
jp
or
nop
in
jg
repz
inc
imul
out
fwait
out
inc
push
jb
aaa
mov
lock
aaa
jmp
push
mov
push
out
push
pop
xlat
mov
dec
cmp
decl
add
or
clc
sbb
aas
scas
xorb
lcall
jmp
sahf
or
dec
out
lret
cmpsb
aaa
xchg
cld
sub
push
mov
xchg
push
adcb
dec
and
aas
mov
cmpsl
int
jbe
sub
mov
outsl
sarb
xor
add
int
inc
daa
lret
push
aam
jbe
mov
mov
adc
mov
aad
idiv
or
or
mov
sub
mov
movsb
sti
cmpsl
pop
and
loopne
aam
lcall
stc
mov
inc
push
std
hlt
pop
lcall
out
lret
sub
mov
cmp
push
into
xchg
sti
loope
enter
and
pop
cs
or
jg
xchg
out
dec
rol
xor
outsb
dec
mov
cltd
dec
out
push
in
cmp
std
popf
xor
cmp
dec
and
out
aas
push
sahf
lahf
dec
push
xor
inc
scas
add
adc
xchg
into
lret
movsl
add
incl
dec
mov
in
push
mov
and
sbb
dec
cli
push
add
ds
or
pop
out
sub
test
cmc
in
int3
jb
cmp
xor
pop
push
rorb
lret
pusha
xor
cmp
stos
jnp
dec
cltd
and
cmp
and
cmp
jp
mov
stos
sub
xchg
pop
inc
into
hlt
pop
rcl
insl
mov
sub
mov
add
ja
inc
imul
call
ss
add
iret
mov
daa
push
cmpsl
or
stos
loopne
fdivrp
jg
jecxz
pop
popf
push
mov
pop
sub
sub
cmp
and
sub
add
mov
xor
cs
sahf
or
sbb
jg
or
ds
and
inc
insb
aaa
popa
sahf
push
mov
pop
and
test
fwait
rcrb
jmp
push
jg
cmp
cmp
jo
lock
mov
bound
jmp
leave
add
push
and
jg
lds
pop
out
push
pop
lcall
dec
repnz
scas
jge
stc
xor
add
add
out
mov
cmp
repnz
gs
call
add
arpl
outsb
push
cmp
pop
cmp
fcmove
jle
sar
dec
adc
add
mov
fs
lods
dec
mov
adc
sub
and
pop
xor
and
cmp
sbb
push
das
mov
lahf
push
sub
sbb
push
inc
jmp
jae
push
xchg
test
stc
xorl
sub
adcb
jno
jns
data16
jo
xchg
mov
roll
jge
cmpsl
cltd
mov
cmp
pushf
ret
mov
mov
stc
mov
mov
inc
jne
lock
push
imul
mov
pop
ss
js
aas
sub
xchg
hlt
scas
call
xlat
sub
cli
or
addr16
dec
jmp
and
ljmp
jg
sub
loope
sub
pop
out
adc
pop
bound
insl
mov
add
stos
cmp
pop
insl
adc
mov
xchg
imul
out
and
xor
rcl
xchg
ss
testb
push
inc
pop
scas
das
test
scas
lret
aad
inc
leave
adc
mov
xchg
cmp
lea
int
push
sbbl
cld
call
adc
cltd
or
sub
sub
add
sub
xor
push
add
sbbb
xchg
xchg
data16
push
cli
mov
data16
pop
push
lods
cmp
sbb
shr
add
pushl
mov
add
and
aaa
add
push
lods
ljmp
decl
mov
es
cwtl
fst
incl
push
adc
and
sub
push
and
es
sar
push
std
incl
pop
or
gs
outsl
aaa
push
sti
jbe
xchg
cmp
jae
mov
dec
lahf
xchg
repnz
or
xor
sahf
xlat
sbb
or
pop
sbbb
out
sub
lods
shlb
add
sub
jo
sub
ja
jg
push
ret
dec
push
cltd
cltd
shll
jge
dec
add
inc
mov
dec
push
rolb
pop
xorb
lcall
cmp
push
push
jmp
xlat
cmc
fwait
sbb
xchg
jl
nop
push
pusha
pop
inc
call
aam
ja
fwait
xor
sbb
sti
or
sub
sbb
and
dec
jae
mov
dec
popf
mov
inc
orb
and
xor
dec
push
push
xor
lahf
lcall
pop
daa
sbb
insb
pop
mov
inc
mov
xor
adc
jg
popa
in
scas
sub
mov
or
and
jnp
iret
adc
in
jl
mov
mov
enter
jg
fcompl
mov
adc
movsl
or
sbb
fidivrl
pop
insb
add
sbb
test
hlt
jg
fdivl
xchg
add
sbb
aaa
arpl
and
pop
cld
movsl
mov
push
pop
pushf
push
mov
sbb
cmpsb
add
and
sahf
bound
jge
xor
repnz
push
mov
push
loopne
sub
add
adc
loope
sar
ret
or
orb
mov
fwait
sub
ret
outsb
outsb
rorb
jmp
int3
cmc
aas
add
xor
cli
push
enter
push
jg
out
sub
xor
out
and
xchg
stc
lods
sti
dec
pop
mov
test
or
xchg
pop
sub
fs
pop
stos
gs
xor
ljmp
movsb
ficoml
call
outsl
mov
call
and
jge
pop
hlt
incl
lahf
xlat
mov
cmp
lret
hlt
cld
mov
jg
cmp
jns
adc
cmp
sbb
int3
sbb
daa
lcall
cmp
add
stc
out
fiaddl
jmp
out
nop
sub
adc
fisttps
std
decl
scas
pop
sbb
push
fsub
fidivrl
mov
lea
pop
loope
mov
adc
dec
add
push
ljmp
mov
pushf
jb
mov
add
icebp
adc
ror
adc
movsb
cltd
call
cld
call
fisttps
mov
enter
sub
cltd
xor
mov
out
clc
pop
cmpsb
inc
cmp
daa
xchg
adc
push
adc
leave
aaa
ljmp
adc
pushl
int3
xor
cmc
les
ss
push
or
in
sbb
add
call
aaa
cmp
push
or
jecxz
and
movl
adc
mov
das
and
or
push
test
mov
xchg
cmpsb
xor
call
fcoms
fisttpll
les
leave
and
sub
stos
mov
sti
sub
filds
sarb
xor
fmuls
cmpsb
inc
arpl
addr16
int
inc
movsl
fwait
and
sub
mull
and
pushl
dec
lods
fistps
mov
ljmp
jbe
pop
mov
movsb
jae
mov
jg
adc
mov
xchg
shlb
push
sub
adc
outsl
push
jecxz
aam
mov
xor
cmp
and
jmp
mov
int
mov
in
mov
pushf
div
outsb
pushl
sub
xchg
call
scas
ds
bndstx
xorb
xor
dec
cld
and
sahf
decb
cmpsb
dec
movsl
rorl
and
xor
cmp
loopne
idiv
clc
mov
mov
cmp
push
stc
cmpsb
jp
lds
jmp
ljmp
xchg
xor
mov
ljmp
sbb
test
repnz
aaa
std
in
sub
lds
aaa
scas
push
inc
shll
mov
lock
bound
ret
negb
adc
xlat
cmc
incl
aam
sbb
scas
xor
xor
push
sub
in
add
sub
cmp
ljmp
mov
inc
cs
sub
daa
jle
test
incl
into
mov
popf
push
xor
clc
xor
cmp
mov
fs
ss
movsb
pop
stos
out
inc
xchg
or
ud0
testl
push
aad
lea
pop
fcoms
jmp
in
push
dec
clc
iret
mov
lret
hlt
cmpb
ret
push
lock
or
fwait
dec
in
cwtl
cli
cmp
cli
aad
adc
fistpl
pop
fdivp
inc
or
jno
icebp
ja
push
repnz
add
sahf
add
pushf
fdivr
lcall
jns
sti
xchg
rclb
pop
pop
dec
sub
out
cmp
push
aad
insl
ss
jg
and
mov
lcall
mov
inc
add
mov
cmp
dec
rol
ljmp
mov
dec
dec
fisubs
push
mov
loop
popa
sub
bound
out
shlb
ds
and
cmp
add
adc
decl
pop
nop
stc
add
pop
iret
sub
fists
mov
pop
popa
aam
ss
enter
movb
cld
mov
xchg
mov
xor
incl
lcall
loop
cli
ja
cmp
mov
xor
and
lcall
lock
shrb
jge
mov
and
dec
lcall
icebp
ja
test
push
sbb
adc
xor
or
sub
add
lock
push
jae
jno
cld
mov
into
sbb
int3
push
out
push
xor
dec
jae
inc
xchg
pop
cmpsl
stos
daa
adcb
or
add
lods
sbb
dec
cmpsl
fistpll
stos
ljmp
xor
jg
adc
inc
mov
adc
pop
xchg
sbb
pop
je
xor
jg
lock
push
bound
mov
push
add
nop
xchg
outsb
aaa
nop
sti
lret
nop
pop
pusha
das
pop
outsb
lods
push
sbb
jmp
call
cli
push
pop
pop
xorb
shl
sahf
sub
rorb
ret
add
and
ret
bound
or
dec
mov
inc
mov
mov
mov
jmp
pop
clc
jno
lods
aad
sahf
jns
ret
cld
ja
incl
mov
sub
dec
sbb
mov
adc
add
inc
xchg
mov
add
testl
test
and
cmpl
leave
xor
arpl
xor
add
into
add
or
lcall
movsb
hlt
jo
sbb
push
add
or
inc
jp
lret
js
or
sbb
sub
cmp
adc
pop
cli
jae
or
or
cli
push
outsb
aam
adc
sub
frstor
mov
xor
dec
clc
xlat
sbb
scas
cmc
jg
jl
add
movsb
cmp
adc
mov
push
cmp
mov
push
push
or
jmp
xchg
jns
rcl
dec
imul
mov
push
sub
divl
ret
push
adc
dec
ljmp
push
lock
out
test
call
clc
ja
clc
repnz
fwait
loopne
jp
leave
cltd
push
xlat
aam
cmpsl
es
jp
out
pop
pop
cmp
test
das
dec
ret
roll
jg
fs
in
fisttpll
jo
lock
xor
dec
imul
add
sbb
cmp
or
dec
repz
outsb
push
hlt
rol
iret
clc
jg
icebp
dec
cmpsb
out
mov
mov
pop
shrb
add
xchg
cli
pop
add
dec
jg
cmp
clc
jg
jg
iret
roll
fisubrl
outsl
adc
dec
cmp
fcmovu
outsl
pushf
cld
push
jb
pushl
stc
mov
push
mov
adc
idiv
movsl
mov
pop
add
mov
fstl
movsb
cs
into
mov
test
jg
insl
jae
pop
xor
jmp
loop
in
mov
adc
int
or
push
push
pop
and
inc
lock
in
lock
std
scas
ficomps
push
imul
inc
and
in
das
and
and
daa
dec
inc
jg
mov
and
mov
or
ljmp
xchg
cmpsl
popa
jg
aaa
out
add
repnz
add
add
fldl
fidivrl
cltd
repnz
xchg
inc
iret
das
add
fbstp
hlt
mov
or
rolb
inc
and
cmp
out
mov
test
cmpsl
push
lret
push
shlb
incl
lock
adc
jecxz
into
or
call
ja
pop
xchg
ret
testb
pop
push
aas
es
call
xchg
scas
adc
sub
dec
sub
pop
ret
int3
flds
imul
inc
mov
fs
cmp
adc
jmp
jmp
imul
jecxz
lcall
lock
push
and
pop
shr
sub
push
rorl
inc
push
mov
push
push
stos
inc
incl
jmp
push
mov
adc
xlat
int
pushf
je
jne
mov
sysenter
imul
call
inc
sub
cmp
and
mov
xor
cmp
mov
xor
xchg
push
mov
stos
pop
icebp
xchg
sbb
or
test
scas
push
hlt
icebp
xlat
push
dec
clc
sbb
ss
call
in
cmpsb
jecxz
fcmove
inc
push
mov
test
gs
cli
pushl
add
enter
mov
pop
push
dec
testl
push
xchg
adc
adc
xorb
test
icebp
jnp
lahf
and
mov
fsubl
lods
sub
insl
jg
stos
xchg
xor
lods
pop
gs
push
daa
fwait
movsl
out
jbe
mov
ljmp
jmp
rol
cmp
les
inc
ljmp
shrb
add
rcl
sub
lock
mov
mov
and
dec
mov
cmpsb
cmp
das
inc
scas
rcll
in
and
dec
pop
sarb
sbb
pop
addr16
lds
pop
call
aaa
inc
inc
ja
cmpb
xor
ljmp
dec
or
jp
push
hlt
lcall
jecxz
in
lcall
jnp
sbb
ljmp
cli
add
ret
adc
push
lock
or
or
fimull
rolb
call
xchg
lcall
out
jg
cmp
mov
bound
cs
decl
jno
push
loope
aad
mov
or
fimull
fstl
lods
mov
shll
jp
xchg
cmc
decl
xor
jecxz
out
xor
out
jb
arpl
cmp
push
xchg
mov
shll
gs
jno
fdivr
cmp
sarl
add
andb
inc
loop
jno
and
cmp
pop
int3
adc
mov
and
aaa
or
cmc
sbb
push
push
jmp
sub
fcomps
loop
adc
add
in
and
xlat
add
xchg
xor
push
push
and
out
add
stos
call
lock
gs
push
sbb
jmp
or
incl
push
cmpsb
add
add
jmp
nop
sar
lcall
sbb
std
mov
movsb
addr16
in
lret
mov
out
ret
mov
fimuls
imul
mov
push
mov
aam
incl
aas
sub
jmp
incl
dec
or
jecxz
mov
fcom
out
divb
les
sub
cltd
stos
mov
std
incl
fadd
dec
test
fildl
je
xor
scas
out
xchg
lock
repnz
or
icebp
mov
imulb
mov
imull
lret
sub
sbb
jg
negb
and
sahf
adc
mov
push
roll
incb
push
repz
ret
sub
mov
popf
adc
or
pushl
mov
inc
cmpsl
nop
shlb
mov
fisubl
jp
pop
cs
mov
push
inc
mov
icebp
dec
xor
dec
pop
jno
inc
cwtl
inc
jp
inc
add
lcall
fmuls
or
data16
ret
movsb
stc
movsl
jmp
mov
pop
in
fildll
pop
out
icebp
xchg
das
lret
loope
xor
mov
jecxz
out
out
push
hlt
jg
mov
sbb
xchg
xchg
and
jle
pop
mov
lahf
cld
jg
call
mov
sti
cmp
push
mov
xchg
cmp
scas
xor
xchg
dec
cmpl
decl
jo
xchg
inc
inc
push
imul
fwait
incl
repnz
adc
pop
sub
sbb
imul
or
inc
add
xorb
shll
mov
mov
mov
ds
pop
dec
decl
xor
mov
dec
outsb
imul
faddl
jb
lret
sbb
imul
mov
pop
in
lods
in
loopne
pop
push
call
xor
jl
inc
jb
xchg
cli
enter
int
into
jecxz
mov
es
loop
mov
jmp
cmpsl
mov
jmp
cmpsl
movsl
ss
fwait
orl
pushl
bnd
cmpsb
push
subl
mov
add
out
idivl
add
mov
les
cmp
fnstcw
pop
sti
add
enter
call
jnp
mov
enter
push
in
dec
adc
cmpsl
dec
xor
cli
scas
pushf
into
pushl
dec
or
imul
mov
dec
daa
or
in
vpunpckhbw
add
sahf
fcomip
sarw
or
mov
and
aad
add
pop
stc
ss
lcall
add
or
sub
inc
jmp
lods
lcall
inc
loopne
call
test
pop
push
mov
mov
jg
mov
pop
cltd
test
ja
nop
dec
xchg
jecxz
aaa
add
pusha
test
mov
lock
daa
test
jae
lret
test
adc
enter
nop
or
es
rorl
mulb
jge
dec
nop
stos
sub
repnz
decl
fxch
cwtl
dec
xadd
cmp
pop
mov
movsb
mov
dec
cli
lds
ljmp
es
test
int3
into
leave
incb
lret
daa
hlt
dec
aad
icebp
sarb
outsl
ret
bound
xor
cli
clc
fwait
mov
iret
push
jg
ljmp
imul
movsb
push
mov
sub
mov
or
cmp
clc
cltd
lahf
addb
inc
loope
cld
or
popf
jae
inc
cmp
and
xor
loope
push
inc
xchg
mov
popa
lahf
or
lock
hlt
incl
sub
or
movb
jg
cmp
pop
insb
call
inc
and
ljmp
mov
jg
and
cld
imulb
das
icebp
xchg
data16
mov
incl
push
daa
dec
pop
lods
les
add
push
push
mov
incl
ljmp
jge
jb
rcrl
push
frstor
arpl
decl
mov
inc
leave
mov
test
mov
loop
push
lds
cmp
pop
dec
push
lods
lret
decl
adc
ficoml
aaa
mov
in
subb
pop
jg
push
ljmp
imul
pop
ficomps
cmp
xchg
cwtl
xchg
dec
popa
movsl
mov
aas
imul
test
mov
dec
pop
push
arpl
xchg
pop
xor
inc
movsl
pop
loopne
jp
sbb
jmp
ficoms
out
nop
jp
mov
push
xlat
mov
cs
call
pop
cmpsb
lcall
add
xchg
jp
cmpsb
sub
mov
mov
incl
dec
ljmp
adc
dec
out
adc
or
jnp,pn
popa
adc
pushl
dec
adc
xchg
lahf
dec
fmuls
scas
jp
sbb
pop
cmp
out
and
int3
mov
je
pop
cmp
lock
sbb
jp
data16
cmp
in
xchg
dec
shr
ljmp
and
sar
cmp
jno
sahf
dec
aam
dec
cmp
cld
fwait
mov
idiv
xor
pop
jne
and
out
push
fbld
mov
jecxz
shll
jae
jmp
imul
jo
stc
decb
sar
aaa
lods
lods
mov
mov
push
or
shll
adc
prefetchw
cli
repz
cmp
data16
out
xchg
push
aad
loope
aas
loopne
mov
stos
sbb
dec
das
imull
dec
aam
aaa
adc
or
add
iret
push
mov
inc
push
jp
mov
push
std
dec
lret
das
lcall
idivl
es
or
mov
jmp
arpl
scas
sarb
outsl
shlb
fidivrs
mov
std
push
das
aaa
cmp
add
divl
fstps
xor
call
jb
ret
push
adc
addb
sub
loopne
and
sub
pop
dec
clc
mov
cmove
in
sbb
hlt
xor
add
xchg
test
jbe
cmp
jg
cmp
cmpsb
mov
cmpsb
lds
dec
push
xchg
lods
push
and
int
inc
ljmp
sti
loope
rcr
lods
mov
or
sbb
pop
pop
fbld
mov
ljmp
mov
cmc
mov
outsl
pop
push
mov
shr
lahf
and
int
mov
stos
xor
mov
xchg
aad
in
add
add
lret
pop
es
adc
xorb
mov
jg
shrb
or
or
and
mov
test
jle
inc
movsb
icebp
push
int
repnz
sti
mov
pop
rolb
scas
dec
adc
add
sbb
inc
fsub
aad
mov
daa
sbb
call
or
aad
add
sub
or
mov
xor
cli
jns
push
shl
xchg
pusha
jbe
mov
push
loop
iret
ret
lcall
cmp
std
add
nop
cmp
jbe
pop
and
mov
dec
xchg
and
fisttps
jecxz
sub
adc
in
push
imul
jg
dec
xor
leave
sbb
loopne
add
testl
mov
int3
cmpl
addl
out
mov
ss
mov
mov
dec
sbb
insl
call
mov
mov
clc
imul
pop
add
jg
mov
and
bound
test
addr16
and
push
jmp
repnz
mov
mov
ds
and
cld
xchg
push
bound
push
mov
iret
dec
push
loopne
xor
add
dec
in
imul
incl
sub
pop
rclb
jmp
in
inc
or
incl
cld
xor
cli
adc
xchg
stos
mov
sbb
hlt
ja
outsb
adc
stos
stos
jp
xchg
lock
movsl
mov
and
pop
and
dec
cmpsb
mov
clc
ljmp
push
jnp
andl
xchg
and
dec
xor
icebp
and
adc
out
jecxz
pop
sbb
mov
push
inc
and
aam
decl
jl
cli
popf
jno
jle
inc
fldl
xor
jmp
mov
pop
sbb
mov
add
stos
ret
and
es
arpl
int
cmp
fwait
mov
sbb
mov
cs
jns
pop
cli
incl
or
ret
ret
add
iret
add
repnz
ja
js
outsl
jle
xor
jg
jo
jp
jle
dec
ret
out
outsl
add
add
je
idivl
es
mov
lret
scas
jno
add
cmc
sbb
adc
pop
dec
pop
pusha
aaa
int
clc
decl
divl
cli
mov
shl
insb
push
dec
fildl
add
lcall
cmpsb
mov
loope
dec
fmuls
dec
or
fwait
repnz
cli
jg
cli
sbb
adc
loop
jne
dec
imul
sub
in
out
subb
dec
dec
enter
or
cmpsb
ret
ret
in
xlat
lods
xor
repz
ljmp
mov
mov
pinsrw
jns
stc
jnp
lock
xor
dec
adc
push
rcll
fcoml
into
sbbb
ds
pop
test
cli
fcoml
pop
das
loop
cmp
xor
xchg
enter
xchg
sbb
or
mov
ljmp
lock
sbb
insb
mov
xchg
lret
enter
xlat
shr
push
xor
fucomi
das
call
mov
loope
cmp
and
out
scas
not
or
add
jg
pop
cli
cmp
or
test
fdivp
adc
add
push
dec
lcall
scas
stc
scas
imull
xchg
mov
rep
addr16
inc
xor
inc
pushf
test
mov
aas
stos
add
lret
and
push
xchg
enter
fld
ss
aas
jmp
mov
xchg
test
mov
das
mov
mov
xor
mov
ljmp
incl
ds
jnp
pop
sahf
out
daa
inc
or
das
loopne
test
pop
xor
decl
call
or
movsl
jg
stc
xor
test
and
mov
add
out
inc
fidivs
call
and
cwtl
push
ret
fcoml
clc
loop
fnstenv
nop
pop
cs
push
call
iret
ds
mov
sbb
out
mov
xor
mulb
and
cs
jo
scas
cmp
push
cmp
andl
out
adc
sub
mov
push
mov
iret
add
movsb
clc
andl
xor
incl
std
out
or
sbb
and
sbb
in
insl
push
aaa
in
jb
add
movsl
shr
cmpsl
insb
mov
mov
pop
leave
into
push
jp
cmp
push
enter
or
lcall
into
test
iret
xor
lcall
fildll
sahf
mov
inc
das
mov
fldenv
outsb
ljmp
dec
loop
adc
cld
push
popa
or
clc
push
aas
jp
movsb
sbb
cmp
in
js
adcb
mov
xor
mov
arpl
mov
aad
call
mov
inc
pop
lods
aas
andb
sbb
ss
cmpl
das
cli
jmp
js
enter
xchg
cmp
enter
pop
sub
lahf
pop
mov
inc
cmp
lods
add
pushf
loop
mov
cwtl
pop
add
int3
pop
shll
cmc
decl
ss
xchg
add
imulb
xchg
push
loope
cli
lret
mov
pop
pusha
or
std
aaa
out
xchg
lods
dec
xchg
or
lret
ljmp
or
add
mov
insl
nop
aaa
sbb
dec
and
dec
inc
mov
or
mov
stc
out
shl
ffreep
dec
mov
adc
push
xchg
add
jmp
ds
adc
push
sarb
clc
clc
xchg
push
adc
imul
xor
sti
pushl
lret
and
sbb
cmp
and
and
push
sbb
pop
jg
jp
fisttpl
or
inc
mov
push
decl
xchg
leave
rcrl
stos
adc
jbe
jl
incl
dec
je
and
jno
lock
bound
idiv
dec
sar
push
or
fs
movsb
xor
js
push
je
mov
stc
lret
aam
mov
repz
aas
inc
stos
mov
mov
xchg
jge
add
jg
aaa
loopne
std
sbb
subb
inc
js
dec
scas
in
shrl
cmpsb
cmp
adc
dec
xchg
mov
shlb
pop
scas
enter
cld
jb
push
sbb
add
push
or
fisttps
mov
call
and
popf
xor
or
sahf
adc
jo
insl
jge
repnz
fisubl
add
stos
incl
jae
and
pop
push
inc
mov
out
aam
xchg
add
fists
or
jno
cltd
inc
vpor
aaa
xchg
sar
mov
or
inc
inc
jge
push
rcl
add
jnp
push
shl
fcomps
outsb
adc
dec
xlat
dec
mov
dec
or
sbb
ret
das
cmpsb
es
bnd
pop
sti
xor
inc
call
jg
hlt
pushl
aad
mov
incb
sbb
aad
fwait
loop
incl
das
xor
outsl
lret
sbb
and
repz
pop
and
cmp
xchg
adc
and
fstps
push
jnp
pop
and
das
jns
pop
and
sbb
push
xchg
insb
sub
pop
outsb
shrl
sbb
dec
and
lea
add
mov
outsb
std
dec
sbb
mov
lods
add
mov
out
lock
fnstcw
add
adc
movsb
or
pop
sbb
scas
add
in
arpl
adc
out
pushl
and
add
cmp
ret
jg
sbb
add
lahf
icebp
pop
push
or
jg
lods
add
hlt
nop
into
xor
das
or
push
or
xchg
ret
das
mov
inc
ljmp
cmp
es
scas
or
inc
xor
push
sahf
xchg
adc
cltd
sub
jge
pop
rol
popa
push
jbe
lods
jg
aam
add
jbe
loop
adc
mov
popf
sar
add
ret
in
in
inc
xor
inc
aaa
std
ss
pop
loope
call
jg
push
mov
cld
fiadds
sbb
sbb
lret
data16
cs
cli
shl
out
xor
subl
ljmp
loop
jecxz
adc
pop
bound
rorl
paddd
pop
enter
outsb
pop
in
add
subb
adc
mov
dec
imul
add
fs
xchg
mov
outsb
xchg
out
pop
decl
aas
cmpl
xor
popa
and
std
jmp
jbe
lods
pop
lahf
daa
dec
sub
ja
cli
fadds
repnz
outsb
pop
test
xchg
xor
daa
push
push
daa
mov
xchg
cmp
aam
xchg
ret
scas
sub
lret
push
adc
cld
jo
popf
ljmp
shlb
sbb
mov
push
insb
call
sub
shll
cli
out
xchg
fcmovnu
hlt
std
sar
pop
cmp
cli
inc
xor
or
cmp
mov
cli
fwait
mov
rolb
xchg
shrl
push
aaa
punpckldq
shlb
decb
mov
icebp
call
int3
imull
repnz
out
push
pop
adcl
decl
loop
pop
lahf
nop
cmp
test
std
cltd
push
mov
cmp
outsl
sub
pop
inc
hlt
filds
fcmovu
out
inc
shrb
int3
test
aas
xchg
leave
mov
adc
jmp
std
mov
mov
sub
jno
movsl
out
test
in
jg
add
adc
mov
jmp
lods
aas
cmp
lods
pop
add
sbb
mov
rcr
mov
cs
aaa
and
in
loop
push
adc
scas
rclb
xor
inc
cli
int
cld
sub
and
mov
repz
fildll
pop
sbb
push
push
mov
imul
or
inc
ficoms
mov
and
fcomip
std
shlb
sti
jnp
mov
jae
subb
and
sub
pusha
gs
dec
notb
iret
cmp
add
inc
shl
inc
jb
and
adc
pusha
arpl
jne
lock
movsb
outsl
popf
jmp
jp
in
pop
xchg
enter
mov
jge
or
jle
cmpsl
mov
scas
mov
cmp
sar
dec
ret
push
sar
aaa
es
jo
mov
push
popf
adc
arpl
lods
and
push
inc
hlt
decl
push
add
mov
xor
jo
ret
fcos
jg
repnz
mov
loope
stos
xchg
xor
jmp
add
jbe
cltd
lcall
lcall
lods
loopne
test
lock
sub
mov
int3
into
outsb
add
inc
cwtl
sbb
jecxz
lcall
push
dec
sbb
cmc
jp
push
add
push
jbe
dec
notb
mov
mov
or
das
lods
inc
dec
std
incl
sar
mov
mov
ljmp
imul
loopne
or
sub
into
cmp
adc
clc
decl
loopne
or
push
lds
out
xchg
setge
inc
call
rorb
sahf
sbb
dec
push
or
jbe
lcall
push
cmp
sbb
jmp
inc
cmpsb
add
and
iret
hlt
mov
sub
mov
cmp
mov
out
je
jnp
dec
insl
andb
fstpt
dec
fs
das
mov
je
or
jo
fbld
imul
cmp
leave
dec
jp
out
mov
stc
out
xchg
call
jae
popf
sbb
mov
addb
hlt
pushl
sbb
jle
adc
pushf
jp
xor
ss
xchg
mov
inc
and
jg
push
pop
mov
and
lods
inc
xorl
xchg
pop
mov
std
push
movsb
dec
xor
xchg
mov
jbe
je
imul
jb
outsb
stos
negb
add
or
cmp
pop
mov
loopne
adc
rol
pop
insl
pop
jbe
cwtl
add
pop
lods
inc
mov
lret
addr16
jg
or
jne
xor
sub
enter
jg
lods
mov
jl
cmp
ficomps
icebp
mov
repnz
aaa
add
mov
gs
test
xchg
mov
cli
mov
aaa
cwtl
stos
fwait
inc
or
mov
push
aaa
add
cld
out
pusha
lret
jl
fistl
mov
clc
jecxz,pn
mov
mov
sahf
push
mulb
call
jecxz
fimull
popf
dec
lds
add
decl
dec
in
add
mov
fs
mov
dec
dec
jg
test
fisubrs
sbb
ljmp
and
dec
add
push
fs
call
xchg
hlt
fsubs
sub
shr
push
into
jno
or
and
pop
fldl
ljmp
cmc
mov
add
imul
jne
mov
sbb
sbb
jge
notl
and
mov
adc
sub
mov
je
js
imul
dec
xchg
xor
ljmp
adc
adc
and
add
mov
add
mov
xchg
ret
adc
ds
fidivs
scas
mov
and
cli
dec
cmp
cli
loop
icebp
add
lcall
aad
in
addr16
out
jbe
cmp
popa
xor
rcrl
sub
movsl
pop
pop
adc
xchg
sbb
sbb
pop
inc
shlb
and
and
outsb
adc
adc
aaa
sub
fistpll
xor
push
jbe
inc
imul
push
rcll
or
push
dec
popa
cli
pop
pushl
std
int
aaa
mov
adc
inc
dec
or
sbb
add
xor
jmp
and
cmc
jne
or
cmpsl
cli
leave
divl
lar
adc
sub
push
bnd
loop
fst
pusha
and
dec
jae
sub
jg
pop
push
sub
jb
cld
mov
push
inc
rclb
push
jmp
jmp
loop
fidivl
and
or
cwtl
cmp
push
in
sarb
mov
dec
jb
or
sub
les
shl
mov
inc
iret
sub
or
in
fisttpl
sti
add
jmp
add
imul
cwtl
xor
ljmp
and
pushf
loopne
fucomip
cmp
pop
lret
mov
jp
out
ss
or
cmp
fs
enter
sub
sbb
out
iret
aam
or
or
xor
or
sbb
or
pusha
das
sub
xor
mov
cmpsb
fmuls
sbb
enter
aaa
out
cmpsl
sub
jmp
test
jae
ffree
lret
add
xlat
iret
dec
bswap
push
and
insl
ljmp
jmp
pop
fwait
das
xlat
popa
insb
in
sar
jg
cmpl
mov
cmp
or
arpl
rol
hlt
push
sub
test
pop
push
or
out
and
pop
int3
mov
ljmp
hlt
mov
sbb
or
repz
fstps
cli
cmpsb
or
imul
cmp
xor
mov
sub
and
fbstp
rcrl
mov
ret
push
push
mov
jo
enter
pusha
adc
sub
inc
add
out
clc
jg
adc
or
fucomi
push
movaps
xlat
add
xchg
cli
jg
lods
clc
and
fisubl
insl
dec
ljmp
lcall
cmp
test
scas
cld
call
sub
fs
out
imul
movsb
sahf
leave
cmp
mov
push
leave
popa
xchg
mov
sbb
js
or
sarb
xchg
rolb
mov
lcall
lcall
jbe
adc
push
out
xor
sub
push
daa
mov
dec
xor
xchg
iret
push
xor
into
lret
cmp
add
repz
iret
insb
shll
cmpsb
ljmp
push
loope
test
dec
sub
fisttpl
outsl
jmp
inc
inc
js
push
rcr
hlt
movsb
pop
rcll
fiadds
adc
adc
aas
stc
cmp
adc
insb
lods
rorl
and
mov
push
outsl
push
rorb
imul
in
inc
jmp
pop
sbb
mov
jmp
mov
out
stos
shl
out
aad
xor
or
inc
andl
es
jg
stos
ret
repnz
out
xor
stos
fprem1
xor
push
dec
pop
add
repz
pop
popf
in
sub
sahf
mov
sbbl
or
std
dec
icebp
cmp
add
sbb
leave
sti
mov
mov
pushl
or
mov
ret
fdivr
outsb
ret
add
mov
push
call
add
and
sbb
adcl
add
in
mov
or
popl
repnz
pop
add
ret
fptan
cli
aaa
sti
xchg
scas
xchg
push
jg
pushl
pop
cmpsl
psrlw
pushf
pop
xchg
test
addr16
fisttps
push
pop
in
pop
test
push
ja
outsl
xor
sub
scas
test
inc
push
push
adc
pop
cmp
dec
mov
jns
sub
push
scas
or
ds
ja
jmp
lds
ds
outsl
ljmp
fsubrs
adcl
push
lcall
rclb
cmp
cmp
aaa
ljmp
into
xorb
or
inc
pusha
xorb
sub
mov
ds
mov
clc
incl
repnz
jl
adc
ljmp
aas
fimuls
je
xchg
xor
cmp
pop
sbb
sub
jle
mov
pushf
outsl
cld
jl
sub
inc
loop
addr16
enter
sub
mov
pop
cmpsb
add
lcall
ljmp
push
mov
scas
out
fnstenv
inc
inc
leave
pusha
stos
mov
pop
clc
popa
xor
js
xor
add
adc
aaa
in
xchg
adc
fsubl
mov
sub
xadd
push
inc
cli
inc
out
mov
iret
scas
pop
adc
or
popa
mov
outsl
mov
jp
sub
cmpsl
inc
mov
push
leave
mov
decl
fnsave
cmp
nop
adcb
sub
and
dec
popa
movb
das
inc
xchg
sub
in
out
aam
mov
shll
int3
or
fdivl
xor
dec
jge
incb
inc
push
sbb
mov
dec
or
mov
and
sbb
xchg
xchg
add
aam
mov
push
ljmp
sub
ret
jmp
xchg
xlat
out
mov
xor
loop
mov
dec
loop
jno
rcr
sahf
sub
repnz
or
ret
loopne
cmpsb
sub
aam
jg
imul
fildl
sti
jl
mov
or
pop
add
iret
xor
jp
fwait
or
push
cmp
lahf
adc
movsb
or
test
dec
add
xor
cmpsl
rol
cmp
inc
push
int3
mov
cmpsb
sub
cmpsb
pop
std
push
nop
cmpsl
sar
jmp
pop
pop
mov
fwait
xor
scas
jecxz
pushl
inc
sub
push
or
xchg
int3
push
push
jne
cli
into
inc
loop
loopne
lcall
and
fistpll
adc
leave
ja
sub
bound
aas
pop
ret
inc
jg
inc
cld
fisttps
out
scas
jns
mov
fst
inc
pop
icebp
push
adc
call
cltd
dec
lret
push
in
outsb
sub
adc
jmp
mov
mov
fistpll
mov
cmp
push
outsb
xor
or
pushf
mov
ds
aas
jnp
xorb
fistps
frstor
call
loopne
lea
sub
mov
xchg
test
cmp
cmp
lock
fwait
push
mov
add
outsb
test
fs
push
mov
in
mov
int
fidivs
sub
test
inc
push
into
in
ds
mov
sbb
xor
std
xchg
sub
int3
mov
fstpl
inc
imul
pop
scas
lea
pop
cmpsb
mov
cs
int3
ss
or
and
pushl
popf
xchg
sbb
jg
out
jnp
sarb
mov
sbb
loop
std
jbe
icebp
or
out
adc
loope
fadds
sbb
call
imul
in
mov
sbb
std
inc
test
push
mov
inc
jmp
and
out
mov
jb
call
hlt
pop
sub
xor
cmc
aad
sub
test
in
ja
mov
sbbl
outsw
outsb
add
shrl
cs
aad
mov
jg
ljmp
inc
ret
jmp
mov
mov
test
adc
cmp
inc
inc
pop
out
ret
les
aad
xchg
mov
jo
stos
fdivs
cmpsb
enter
inc
or
and
in
xorb
mov
out
fwait
pusha
pop
test
jl
pushf
js
adc
ja
fsubrs
or
or
stc
jns
popf
mov
dec
test
inc
xchg
inc
loope
out
pushl
cmpb
dec
mov
or
iret
and
add
scas
or
add
push
pop
xchg
adc
or
xor
mov
leave
mov
dec
loopne
stos
std
hlt
shl
sbb
jg
mov
je
insl
jecxz
sub
mov
and
mov
lret
test
xchg
movb
stos
pop
ds
movsb
xor
pop
jg
popf
dec
aad
push
and
or
xor
call
sbb
push
cmp
dec
mov
int3
sub
and
xchg
jbe
addr16
pop
mov
or
jbe
lret
popa
add
mov
cwtl
cld
das
cmpsl
test
gs
adc
mov
mov
int
jne
push
divl
es
and
into
out
fcomps
mov
add
sti
ret
test
fisttpll
pop
adc
sbb
cmc
test
out
fwait
inc
cld
sbb
jmp
dec
dec
jl
push
retw
pop
pop
and
mov
mov
sarl
rcrb
mov
sarl
roll
mov
push
or
mov
dec
lcall
dec
dec
int
push
cmp
adc
mov
sar
loopne
or
data16
or
add
dec
inc
or
xchg
lods
ljmp
loop
cmp
test
leave
xor
scas
xorb
fcmovbe
int3
into
ficoms
sbb
adc
push
icebp
jp
cmp
push
mov
ss
ja
aaa
jle
inc
push
xlat
enter
add
test
xchg
clc
fbld
and
sub
xor
or
fs
push
pop
pop
lcall
jnp
adc
pop
add
call
jae
sbb
mov
xor
mov
pop
push
out
into
repnz
add
jg
cmpsl
adc
fbstp
mov
psrld
lds
shr
ljmp
or
dec
lock
arpl
lea
test
inc
lcall
shrl
shlb
loope
xchg
and
out
adc
bound
sub
clc
adc
sbb
or
andl
fs
fwait
mov
ficoms
orps
fst
mov
and
xor
lock
jbe
dec
mov
add
push
mov
cld
sub
pop
push
lahf
in
jns
stos
cvtps2pd
sub
and
icebp
mov
clc
idivl
orl
add
ret
inc
jmp
fisttps
add
push
popf
mov
fsubl
dec
mov
rcrl
push
jmp
loop
cmpsb
and
xchg
or
rcll
pusha
jg
fwait
fs
mov
div
adc
add
rcll
pusha
mov
repnz
mov
xchg
mov
dec
or
cmp
insb
inc
imul
mov
cmc
aad
jle
mov
stc
clc
xor
mov
push
cmpl
jnp
sbb
lods
int
es
add
adc
int
loop
lock
ja
sar
add
push
call
stc
in
cs
decl
test
jl
jl
fwait
in
inc
rcrb
inc
incl
xchg
cltd
lahf
dec
into
movsl
cmp
lret
dec
push
pop
mov
push
jmp
jmp
jmp
popa
repnz
sbb
into
outsl
mov
sbb
xchg
add
gs
push
hlt
cmp
sub
cmp
push
loopne
cld
leave
mov
sub
cmpsl
inc
into
mov
pop
lock
xchg
pop
mov
xchg
scas
add
popf
mov
xchg
rcrb
sbb
adc
test
les
xor
outsl
loopne
mov
mov
push
mov
outsb
cwtl
jo
addb
ret
cmpl
push
mov
clc
xor
sub
adc
lahf
pop
push
lods
and
pop
add
gs
mov
mov
lahf
dec
ja
fbstp
sahf
cld
mov
mov
xlat
mov
sub
mov
sbb
push
xchg
xor
loopne
inc
jae
test
ficoms
inc
cwtl
push
fnstcw
std
in
jno
push
mov
pop
pusha
insl
jb
cmp
adc
rcl
out
cli
sbb
fsubl
jae
pop
add
or
push
lret
push
arpl
test
mov
jae
adc
bt
mov
aad
jno
lods
scas
push
mov
xchg
ljmp
shll
clc
mov
jmp
outsb
ljmp
cwtl
iret
add
mov
or
inc
ret
and
aaa
pop
clc
push
add
sbb
les
push
cld
scas
pop
dec
sub
call
lock
aas
stos
add
jbe
pop
fisubl
insb
hlt
mov
int
inc
mov
shufps
cmp
insb
lods
mov
mov
repnz
mov
sub
cld
xor
mov
and
es
adc
mov
sub
scas
xor
add
xor
cmp
adc
bound
push
push
pop
adc
test
adc
ret
sub
test
sbb
sub
out
sbb
lods
push
adc
shrl
mov
fwait
dec
sbb
or
aam
adc
mov
inc
push
or
lret
cli
pop
cmc
pop
pop
push
push
jb
inc
push
xor
jecxz
mov
ucomiss
leave
out
imul
jle
lods
jmp
or
push
add
rol
sub
push
dec
testb
pop
cmc
sbb
jge
push
out
ret
test
inc
push
pop
or
lcall
hlt
dec
cld
ljmp
mov
faddp
mov
adc
cmp
pushf
add
gs
incb
out
je
inc
inc
cmp
pop
adc
push
or
out
sahf
mov
or
cmc
out
int3
cmp
fsubrl
sub
mov
jg
enter
jno,pt
je
fs
das
add
subl
cmp
push
lods
and
cmp
ja
jmp
mov
data16
or
mov
nop
adc
les
adc
int
mov
in
lcall
lret
fisttps
xchg
add
xchg
daa
incl
or
mov
add
movl
fsubrl
out
or
pop
lods
add
push
mov
mov
mov
sub
adc
push
dec
and
and
push
test
and
sub
das
loopne
sub
testb
fwait
mov
repnz
pop
mov
adc
push
aas
and
sub
cld
xor
sub
incl
add
mov
and
scas
xor
mov
ret
mov
shll
outsb
lods
or
push
xchg
mov
cli
scas
pop
mov
cmpsb
cld
push
std
addr16
out
xchg
xor
das
and
sbb
fs
sub
ds
popf
fimuls
push
mov
add
sbb
jo
mov
test
jp
out
loopne
push
test
mov
jecxz
jp
out
or
lret
lds
pop
pop
mov
clc
jmp
sbb
lods
sbb
cs
sbb
lcall
movb
xchg
popf
sub
int
dec
pop
xor
inc
je
test
jmp
or
rclb
xor
jp
orl
fwait
sub
mov
lcall
sub
jbe
jb
and
fsub
clc
sbbl
pushf
inc
je
aaa
es
cmpl
jge
xor
mov
or
gs
lock
aaa
xor
rorb
cmc
call
add
jg
xchg
sbb
pusha
xorl
lret
add
data16
jno
ret
xchg
mov
mov
outsl
out
mov
jl,pn
addl
adc
das
or
ret
stos
mov
gs
add
mov
scas
incb
inc
inc
std
ret
lahf
push
dec
sbb
jmp
jecxz
dec
jl,pt
pop
jbe
cli
add
movsb
push
mov
es
pop
fs
mov
mov
inc
pop
cs
adc
dec
mov
es
cmc
jge
and
loopne
scas
sub
push
dec
push
or
mov
mov
mov
mov
push
out
add
test
push
dec
mov
aas
cld
hlt
mov
sub
sbb
dec
mov
inc
clc
dec
outsl
pop
out
xor
xchg
sbb
push
cmp
cmp
sub
fldl
pop
sti
cmp
or
sbb
xor
fiaddl
sbb
or
jg
or
push
xor
andb
adc
adcb
pop
push
mov
xor
decl
incl
xlat
pop
and
out
mov
mov
pop
xor
rolb
push
push
loopne
fcompl
outsb
lret
clc
out
push
push
repnz
iret
aas
aad
nop
jmp
dec
dec
xchg
aam
sub
ret
addb
shl
enter
cmp
push
das
mov
mov
push
xchg
movsl
xor
and
xor
dec
mov
clc
int
sti
mov
dec
add
pop
pop
std
vaddpd
mov
or
add
out
pop
and
xchg
pop
push
cmp
loop
fwait
cmp
cwtl
test
sub
ss
sarb
call
xchg
pop
mulb
add
ss
call
cmp
mov
loope
cmp
cmp
mov
mov
cmp
enter
inc
pop
push
mov
sbb
inc
cmp
mov
sbbl
decb
aam
push
cli
dec
fidivrs
sub
cmpsb
jns
shlb
ljmp
cmpsb
sbb
andb
outsb
fmulp
call
sbb
adc
dec
and
push
fs
jmp
cmc
jg
test
or
pop
int
loop
xchg
add
inc
imulb
pop
dec
clc
out
decb
adc
cmpsl
inc
js
mov
pop
out
jmp
std
xor
pop
cmp
imul
xor
scas
nop
push
ds
jle
cmc
insb
push
or
adc
out
divb
ljmp
mov
xchg
stc
or
xor
ljmp
stos
dec
push
imul
sub
and
push
push
dec
rolb
ljmp
xor
pop
out
cmp
jl
sub
rclb
lcall
imul
pop
xor
or
les
add
sub
mov
lcall
ja
adc
fbstp
inc
movswl
sti
das
test
adc
pop
mov
int
xchg
inc
outsb
jl
stc
add
out
in
decl
sahf
pop
sti
in
filds
cld
sub
dec
jo
scas
push
je
dec
fmull
xchg
cmova
dec
cmp
notb
das
gs
inc
jno
cld
in
daa
jmp
das
xchg
pop
js
xchg
push
push
and
lcall
adc
sbb
scas
in
xchg
test
mov
mov
xor
roll
add
cltd
sub
lods
pop
jg
icebp
mov
iret
in
out
data16
mov
push
loop
xchg
cltd
mov
aam
test
mov
mov
jmp
idiv
outsl
push
cwtl
scas
stos
push
leave
in
push
aas
jb
sub
dec
test
imul
icebp
mov
scas
int3
sbb
xor
and
mov
sahf
and
jno
mov
in
push
arpl
mov
adc
mov
add
js
loopne
push
sub
pop
add
push
adc
out
sbb
sbb
or
add
aad
xor
dec
mov
daa
rcl
xor
mov
sbb
add
xor
cld
loopne
mov
mov
out
ficomps
ds
sub
psubb
or
enter
cmc
sarb
pop
dec
call
mov
iret
xor
push
hlt
stc
sub
add
add
mov
push
adc
mov
xor
cmp
cli
decl
sub
xor
sahf
stos
ja
sub
sbb
push
mov
cmp
sarb
ljmp
mulb
fs
xchg
xchg
adc
fcompl
hlt
and
jno
incl
data16
aaa
stc
push
rorb
rorl
es
mov
ret
cmp
leave
leave
push
outsl
mov
scas
std
repnz
jle
je
mov
shrl
in
dec
out
jmp
jle
out
sub
jecxz
jmp
loope
stc
jb
sub
jmp
sub
pop
call
dec
cmp
sti
xchg
or
ret
push
mov
push
xor
adc
xchg
lret
stos
adc
add
fwait
lea
jo
and
icebp
mov
mov
movsb
les
sub
mov
clc
pop
cld
gs
pop
jp
mov
aaa
xchg
cpuid
and
xchg
decl
bound
pop
cmp
pop
jg
fisttps
adc
scas
movsl
push
and
mov
mov
inc
or
xor
call
jle
mov
pop
in
or
jmp
lcall
dec
mov
jne
aad
sub
call
cmp
sub
cwtl
sub
shlb
scas
jle
push
inc
sub
jmp
leave
out
leave
popf
bnd
cs
adc
sbb
into
xor
mov
fdivrl
test
outsl
sbbl
jg
sbb
lock
sub
xor
pushf
arpl
sub
xlat
je
rolb
and
pop
sti
ljmp
push
mov
jne
loop
jg
inc
xor
or
js
push
cltd
cmp
inc
pop
or
mov
mov
jge
xchg
scas
push
mov
xor
xchg
cmp
or
mov
pop
std
lds
pop
data16
lods
pop
mov
sub
push
mov
iret
sub
cmp
leave
lcall
pop
popf
fdivrp
or
in
xor
and
xchg
sub
xor
test
out
sub
pop
sar
dec
enter
gs
fadd
xor
pusha
ret
push
xlat
dec
jge
xchg
outsl
xor
into
add
cld
mov
sar
ljmp
push
fstp
movsb
sbb
ja
jae
jo
add
mov
and
xchg
fucomip
and
push
aam
sub
and
dec
add
push
cld
push
dec
sub
inc
xchg
mov
loope
lock
dec
cmpsl
ss
pop
inc
xor
push
xorb
pop
inc
in
jb
testb
inc
or
push
fmuls
outsl
cmp
faddl
push
in
pusha
inc
ljmp
pop
aad
or
xlat
pop
das
frstor
push
xlat
jbe
push
xchg
icebp
or
mov
pop
xchg
adc
jp
test
subb
scas
jmp
bound
loope
int
fisubrl
negb
std
ljmp
adcb
adc
dec
mov
pop
sarb
jmp
dec
clc
and
xor
jbe
in
sub
clc
adc
push
inc
negb
push
push
sbb
push
shrl
addr16
mov
cli
jg
xorl
icebp
mov
cmc
push
out
mulb
or
loop
xchg
sbb
lds
adc
pop
mov
repnz
bound
adc
aam
or
outsb
or
jg
ret
xchg
int3
cltd
or
fbld
cmpsl
pusha
arpl
lock
cmp
mov
loopne
cwtl
pop
ss
in
inc
inc
jbe
push
cmp
sbb
int3
lret
add
pop
xchg
decl
or
daa
mov
or
iret
pop
add
mov
movsb
xor
inc
out
aaa
loop
xor
sub
xor
fcmovne
into
jg
lock
fidivrl
shlb
jne
add
add
push
ss
cmp
sbb
and
test
pop
cmp
xchg
sbb
add
xlat
ds
lcall
xchg
shl
push
jnp
jmp
mov
lret
pop
outsb
xor
dec
pop
adc
call
mov
and
sbb
pop
mov
call
add
or
adc
aad
movsl
xor
add
gs
ljmp
movsl
in
xor
mov
subb
lock
orb
xor
adc
scas
es
xor
mov
das
sti
in
out
jbe
lea
pop
xor
scas
cmp
jns
inc
dec
push
mov
jg
add
adc
sbb
xor
add
out
mov
cmc
or
test
iret
mov
sbb
xchg
hlt
into
fsub
out
repnz
mov
pop
push
and
mov
lcall
cmp
sub
pop
adc
sub
jno
bndldx
lcall
mov
icebp
sbb
outsb
xchg
pop
adc
out
pop
mov
icebp
push
push
fldt
add
hlt
arpl
lods
hlt
xchg
xchg
push
push
adc
das
cli
lcall
gs
scas
out
mov
cmp
dec
sub
or
mov
loopne
mov
xor
push
fdivr
pop
sub
push
mov
lcall
or
adc
mov
fldenv
mulb
in
or
cld
fisttps
pop
test
cmp
call
aaa
lea
xchg
pop
mov
pop
push
xchg
inc
xchg
xchg
cld
decl
cmc
pop
test
imul
inc
clc
stc
movsb
filds
jg
data16
pop
pop
xor
cmp
cwtl
test
loop
ret
pop
or
xchg
stos
inc
dec
pop
xchg
sarl
mov
movsl
por
push
test
call
test
insl
adc
push
add
xor
lret
ror
xchg
sbb
test
add
fs
fnstcw
jbe
mov
arpl
imull
lcall
leave
aaa
pop
nop
into
lods
xor
cmovp
adc
mov
inc
jmp
cwtl
push
or
mov
mov
leave
mov
jmp
add
mov
mov
adc
insl
fdiv
xchg
add
leave
in
ljmp
pop
sti
pop
adc
out
negl
and
mov
data16
call
cmp
ficomps
add
test
add
inc
std
dec
pop
mov
clc
and
jbe
xchg
imul
add
daa
testb
ret
mov
add
imul
xor
jl
hlt
fbld
in
sbb
or
lret
pop
adc
xor
fdivp
jmp
rorl
ss
xor
cwtl
push
lret
ss
aad
stos
fsubl
xchg
call
fiaddl
and
je
or
sarb
aaa
ret
sub
mov
and
push
push
les
out
dec
or
push
pop
lcall
jno
movsb
test
and
mov
fcmovnbe
jp
clc
sub
pop
push
sbb
jmp
inc
ds
aaa
or
pop
and
cmp
in
aaa
incl
inc
pop
push
int
push
jg
mov
push
sbb
mov
adc
sarl
cwtl
mov
in
dec
cwtl
sub
jo
pop
or
out
xor
aaa
xchg
test
add
call
sbb
cltd
movsb
dec
fs
aas
inc
outsl
mov
add
lret
cmp
fisubl
mov
sub
mov
inc
sbb
lcall
mov
mov
sbb
insl
cmp
popf
mov
cmp
mov
ret
jmp
orb
jg
add
out
adc
mov
fucompp
clc
decl
xor
gs
bsf
and
or
loop
addb
add
jge
inc
out
aad
dec
xor
jns
fwait
rclb
xchg
dec
add
cmp
stos
hlt
adc
jp
pop
xchg
add
mov
cld
jl
inc
adc
cmp
dec
dec
push
mov
roll
outsl
or
or
jmp
cmp
out
mov
aam
or
lcall
sbb
fwait
dec
push
sahf
adc
aas
or
imul
pop
sub
jmp
cli
add
fsubr
push
aam
leave
lock
ljmp
sarl
cwtl
jno
je
adc
inc
mov
mov
decl
mov
lods
cmp
leave
jle
sahf
jmp
cmp
mov
test
sti
sbb
inc
les
or
addr16
xor
sub
inc
outsl
sub
aam
pop
push
rcl
repnz
xchg
push
popa
std
sub
pop
mov
push
dec
inc
decl
and
pop
fdivs
adc
roll
scas
push
ss
aaa
or
pusha
btc
pop
lcall
add
clc
add
and
test
jmp
loopne
ljmp
push
psubd
or
dec
jl
ret
xor
jecxz
sbb
add
scas
cltd
in
jmp
add
dec
inc
outsl
mov
pushf
arpl
jmp
adc
xor
bound
leave
mov
js
mov
sub
adc
lea
js
hlt
lcall
add
out
mov
or
jmp
push
sub
or
adc
jae
or
inc
mov
sbb
sbb
mov
daa
or
push
mov
xchg
mov
mov
movsb
jns
mov
mov
jp
jmp
loope
mov
push
cmp
dec
adc
shlb
jbe
ljmp
push
mov
add
jmp
imul
fwait
push
test
mov
xchg
movsb
popa
test
xadd
cmpsb
push
jmp
ss
sar
aaa
or
in
or
gs
das
nop
hlt
xor
addl
popa
leave
push
pushl
mov
daa
xchg
ja
mov
sub
xor
cmpb
filds
cli
iretw
mull
pop
mov
xor
in
int
or
lcall
jg
xchg
test
inc
adc
arpl
clc
inc
mov
ret
mov
ret
jg
and
sbb
pop
push
arpl
cmp
jp
mov
loope
nop
jg
adc
fimull
cmp
jbe
dec
xchg
mov
cmp
loope
lea
or
pushl
push
roll
into
mov
addb
shlb
cld
pop
push
cwtl
out
push
xorb
push
outsl
mov
push
scas
pop
fwait
add
nop/reserved
add
addr16
mov
out
mov
mov
sub
inc
shr
call
adc
xchg
cmp
fmuls
cmp
add
xor
jge
push
hlt
add
xor
adc
or
adc
ficompl
outsb
mov
cmpb
add
loop
movsl
jno
xchg
dec
fsqrt
xor
stc
xchg
popf
ret
push
inc
iret
das
pop
cmp
inc
jno
mov
insb
sahf
push
and
and
stc
cmpsb
fwait
cltd
cli
addr16
inc
inc
divl
pop
lock
jg
adc
jecxz
lods
add
imul
pop
cmp
or
pop
data16
iret
icebp
ret
mov
push
mov
sar
outsb
mov
imul
fiadds
imul
ja
xchg
sbb
pushl
scas
clc
jo
pusha
into
pop
push
xchg
scas
inc
and
xlat
sbb
in
mov
pop
sub
jle
and
inc
fstps
cltd
pusha
imul
push
mov
loopne
cmpsb
and
dec
cmp
mov
pop
push
mov
lcall
sub
fiadds
mov
lods
in
cmp
and
mov
pop
xor
clc
mov
or
stos
cmp
mov
loopne
sbb
sub
dec
in
mov
ljmp
inc
or
and
xchg
mov
xlat
sub
data16
or
stos
lods
or
and
test
inc
sbb
xchg
mov
push
decb
mov
insb
adc
mov
dec
add
fdiv
outsl
xor
push
stos
fstpt
ret
out
push
jp
mov
mov
pop
or
mov
inc
or
adc
cld
mov
ja
adc
xchg
dec
int3
addr16
insb
arpl
sub
mov
icebp
inc
enter
cmp
pop
adc
pop
dec
xchg
jb
push
lret
lcall
jb
dec
pushf
aaa
adc
inc
or
mov
ss
jmp
dec
mov
enter
mov
or
xchg
ds
sbb
ljmp
cwtl
cmp
push
xor
push
testb
lcall
mov
or
fdivl
push
sahf
xlat
or
cld
lcall
divl
xchg
gs
arpl
push
fistl
lods
jbe
scas
add
decl
sbb
mov
adc
mov
es
mov
cmpsl
jecxz
mov
dec
cmpsl
jmp
inc
aad
sbb
cmp
jecxz
repnz
pop
sub
js
rcrl
test
data16
add
cmpsl
es
or
testb
out
cmpsb
incl
add
cld
ljmp
out
leave
aaa
std
cli
ret
sub
and
jp
pop
sbb
and
stos
and
sub
loop
pop
push
negl
rol
sbb
and
clc
cmp
and
xchg
and
daa
mov
add
jg
or
pop
xchg
adc
les
data16
hlt
or
idiv
sbb
stc
shlb
repz
xchg
pusha
ret
fisubs
aaa
stc
mov
ja
lock
dec
adcl
test
push
inc
outsl
mov
jmp
jmp
test
testl
jns
xchg
ja
std
lcall
lods
fnstsw
lods
test
mov
pop
lods
jbe
dec
scas
cltd
call
add
outsl
lret
das
jp
sub
xor
and
pop
and
in
in
sahf
mov
mov
jbe
cmpsl
sbb
lock
mov
adc
sbb
and
lds
sbb
int3
xor
shrl
out
mov
movsb
pushl
sbb
outsb
pushf
repz
push
mov
daa
add
fildll
inc
add
aad
stc
xchg
subl
jbe
movsb
dec
cltd
in
call
push
lcall
sbb
pop
clc
sbb
bswap
xchg
sti
repnz
push
subb
dec
and
outsl
in
jg
repz
mov
lahf
rcll
xor
nop
sub
add
sub
fists
cmpl
fidivrs
aad
mov
shrb
cmp
adc
sbb
adc
or
out
pop
xor
lret
or
fs
inc
lret
clc
mov
jnp
fsubr
cmp
loop
fcomip
pushl
in
sub
and
and
push
divb
cmp
xor
and
mov
and
pop
mov
pop
ds
aad
ret
push
sar
loop
xchg
fdivr
syscall
call
movsb
inc
repnz
xchg
add
add
mov
negb
call
or
test
mov
fcomps
inc
call
cmpsl
std
or
mov
lea
pushl
loope
push
pusha
push
xorb
cwtl
ds
lods
test
mov
pop
xchg
jnp
sub
dec
mov
push
sub
lcall
jmp
xor
jmp
inc
sarb
dec
jg
out
and
mov
xchg
xchg
mov
or
pop
ja
sahf
fnstsw
enter
or
enter
mov
adc
das
ljmp
decl
sub
lea
lods
pop
sub
mov
sbb
mov
ljmp
push
in
pop
sbb
xor
cmp
jle
icebp
pop
adc
mov
roll
cmp
or
mov
cmp
mov
xchg
pop
push
nop
andl
lcall
push
ja
out
aam
les
out
jbe
or
add
mov
repnz
cmp
icebp
decl
popa
add
mov
sarl
pushf
sarb
popf
testb
js
in
jge
adc
inc
jecxz
setns
imulb
or
je
and
mov
xor
xor
montmul
cmpsb
movsb
mov
ret
xor
jge
fsubr
dec
rorl
xchg
jo
subl
mov
outsl
out
dec
in
and
fdivrl
adc
xor
filds
rcrl
insl
add
jecxz
loope
ljmp
into
and
enter
mov
and
sbb
fildll
add
cli
mov
adc
and
add
cmpsb
fcomip
ljmp
dec
sbb
xchg
or
ljmp
das
out
out
cmpsb
push
loopne
cmpsl
sbb
inc
js
adc
in
mov
pop
out
stos
inc
push
xchg
push
cs
or
inc
add
negl
cmp
mov
mov
xchg
sub
or
jg
pushl
inc
cmp
imull
adc
sahf
jnp
add
or
mov
adc
pop
sub
testb
push
xor
or
sbb
orb
sbb
mov
push
aas
add
shlb
and
push
mov
ficoml
jne
aad
xor
scas
xchg
xorb
mov
in
dec
movsl
sbb
cmpsb
mov
insb
fldl
pop
xchg
cmp
hlt
xor
decl
and
inc
jbe
sub
mov
ja
das
sbb
inc
push
jg
lret
les
dec
imul
fs
inc
je
jg
mov
inc
xlat
imul
push
and
pushl
sti
adc
and
aaa
adcb
loop
jmp
mov
in
fimuls
call
sbb
dec
gs
xor
mov
daa
sub
mov
inc
movsl
mov
pop
icebp
or
jmp
adc
fucom
mov
ret
jae
adc
fwait
loop
or
popf
into
insb
jmp
mov
cmp
rolb
or
mov
test
mov
push
push
lcall
jge
jmp
test
imul
ljmp
or
test
sub
cmp
jmp
mov
pop
add
lcall
out
add
popf
mov
adc
pop
rcl
mov
ret
sub
fwait
ljmp
and
cmpsl
adc
les
ds
sbb
mov
push
ja
push
test
sub
mov
loopne
mov
lods
notl
in
mov
dec
mov
xchg
xchg
mov
nop
sahf
push
mov
clc
ljmp
mov
mov
lahf
xorb
and
jmp
xor
pop
or
sti
lods
lret
icebp
cmp
cld
pop
in
int
adc
push
adc
cmp
mov
sbb
cmpsb
or
ljmp
pop
jnp
jle
sub
sbb
cmp
inc
adc
adc
testb
incl
push
xchg
add
cwtl
pxor
xor
jg
mov
arpl
push
lahf
push
imul
sar
push
dec
or
outsl
aas
pop
gs
adcb
out
sbb
imul
pop
mov
mov
add
lahf
add
rcrb
ljmp
mov
xchg
out
mov
bound
pop
and
cmc
add
jmp
popa
mov
mov
jp
cmp
popa
rorl
jg
mov
and
pop
ret
mov
inc
pop
icebp
add
stc
push
lret
push
fnstsw
stos
xor
adc
pop
inc
loopne
out
insl
lcall
or
aaa
or
mov
aas
push
push
adc
movsb
pop
or
sbb
sahf
push
and
add
jg
lret
rorl
out
hlt
ffree
iret
es
addr16
jmp
dec
pop
in
push
call
inc
xlat
insb
neg
in
fwait
dec
dec
scas
and
or
ret
arpl
stos
shll
rol
sub
inc
cs
hlt
xor
ljmp
lock
sbb
cmc
std
xor
ja
push
out
pop
mov
rol
ds
sti
hlt
sub
fld
ljmp
xchg
lahf
cmp
stc
enter
aas
mov
adc
cmp
call
pop
jnp
dec
mov
jl
or
push
leave
sub
aad
push
jp
mov
inc
fs
int3
cmp
sarb
enter
aaa
loop
fcmovne
pop
mov
adc
and
xor
outsb
movsb
and
fidivrs
into
out
movsl
jl
and
clc
aas
inc
cmpl
mov
rorb
jmp
xchg
jbe
outsb
sub
adc
loop
add
cwtl
and
pop
iret
and
fisttps
cltd
ja
fwait
lahf
push
dec
rorb
outsb
add
inc
rcll
xchg
iret
insl
stc
es
clc
cld
pop
adc
call
push
icebp
shrb
adc
out
fildl
cmp
mov
cmc
xorl
xchg
cmp
xor
mov
mov
add
filds
cltd
mulb
inc
mov
cwtl
sar
bound
xchg
mov
push
nop
lods
sbb
fiaddl
clc
fcomps
aam
or
sbb
cmc
push
test
shlb
scas
movsb
ljmp
jl
add
pusha
and
insl
lds
pop
sub
pop
and
sar
and
movsb
lret
adc
mov
shll
xor
mov
dec
push
fprem
jg
lcall
add
or
cld
jmp
aaa
jns
adc
add
rep
pop
cltd
push
pop
lock
fstpt
addl
test
lretw
loop
sarl
nop
inc
or
es
sub
rorb
out
xor
jg
push
lcall
and
int
imul
in
add
daa
movsb
pusha
or
out
mov
add
add
adc
push
mov
jg
shlb
inc
push
pop
or
into
lcall
jle
test
repz
lea
sbb
pop
popa
jle
sub
call
sub
and
sti
rcrl
cmpsb
ficompl
jbe
jle
inc
fisttps
incl
mov
aad
add
cwtl
clc
sbb
mov
cmp
imul
mov
push
das
test
aad
mov
xchg
adc
movsl
xchg
push
ljmp
sbb
dec
mov
out
add
sub
adc
cs
icebp
jmp
jns
sbb
faddl
xor
cmp
bound
aas
fildll
ror
add
cs
pushl
test
pop
push
cmp
sti
jecxz
push
ds
ret
daa
mov
enter
mov
jmp
or
xlat
pop
repnz
aaa
sbb
mov
int
aaa
pop
mov
inc
stos
lret
repz
aaa
sub
lcall
sbb
dec
sbb
inc
mov
inc
push
mov
dec
outsl
fdivrl
or
test
sbb
iret
in
add
in
push
push
into
aam
cmc
popl
mov
ss
stc
lock
in
add
pop
dec
daa
test
aaa
cld
push
test
cld
or
push
cmc
mov
cmp
sub
dec
push
jo
dec
pop
imull
out
shlb
loopne
add
loopne
stos
mov
xor
iret
pop
cmc
test
aad
imulb
bound
cmp
xor
xchg
jb
cmp
sarb
mov
daa
push
adc
loopne
dec
call
loopne
out
jp
jb
aad
xchg
test
ret
decl
xorb
pop
fs
dec
add
fsubl
ds
rorl
decl
pushf
repz
repnz
insb
xchg
push
dec
add
loop
leave
sbb
daa
cmp
inc
loope
ljmp
in
sbb
pop
and
cmp
cmp
xor
dec
mov
cmp
aaa
jbe
fistpl
mov
std
mov
mov
mov
cmp
fsubrs
popa
or
add
mov
movhps
incl
inc
or
bound
cmp
push
adc
stos
mov
sti
jle,pt
sub
in
cmp
mov
mov
pushf
mov
std
call
add
cltd
ret
mov
cmpsl
out
addr16
ret
inc
dec
hlt
sbb
jo
mov
jge
pop
rolb
push
adc
push
adc
xchg
repnz
add
pop
cmp
sub
sub
sbb
pushl
popa
jg
call
mov
jmp
push
test
and
jmp
mov
dec
clc
addl
js
pop
test
or
mov
xchg
dec
push
pop
and
jno
sub
cli
jg
add
pushf
jg
push
xchg
js
clc
mov
rcrl
xor
add
scas
jnp
cmp
pushl
jb
cmp
adc
sub
dec
out
xor
es
fcoml
ficoms
lods
cmp
xchg
jmp
pop
xorl
pushl
push
push
leave
jge
nop
jnp
fwait
xor
pop
aas
out
daa
mov
dec
in
lds
hlt
ljmp
movsb
adc
in
or
ds
pop
cmp
mov
jb
sti
sub
lock
pop
mov
rcr
mov
sti
outsb
ja
cmp
es
cmp
or
in
arpl
mov
jp
mov
sub
ja
decl
test
leave
outsb
lods
nop
mov
loop
mov
mov
xchg
sub
data16
pop
sub
or
incl
mov
shlb
or
push
filds
stc
test
je
int
pushl
jo
xchg
xchg
sbb
dec
xor
cmp
ljmp
or
outsl
mov
sub
pushf
dec
xchg
daa
xchg
mov
jg
xchg
dec
xor
xor
lea
stos
loopne
mov
pop
insb
addr16
cmp
out
mov
adc
cmp
filds
sub
xor
sbb
mov
filds
inc
dec
jnp
sbb
icebp
cwtl
cmp
outsb
movsl
or
cmp
mov
sub
ret
mov
mov
hlt
mov
push
jb
add
add
xchg
push
stos
scas
jle
adc
nop
or
jle
mov
leave
sti
and
cli
es
movsl
jo
jo
fdiv
pop
fmull
bound
add
xor
sub
cmpsl
sub
lds
les
cmp
sti
pop
test
jbe
pop
pushf
mov
test
pop
cmp
test
out
ret
arpl
mov
pop
es
mov
mov
and
push
aas
sub
stc
insl
popa
pop
xor
out
jp
inc
sbb
xor
pusha
aaa
cld
sub
sbb
repz
mov
adc
inc
ljmp
pop
and
out
nop
jne
cmp
out
mov
cmp
or
mov
decl
scas
jo
sub
add
xchg
cmpsb
adcb
push
dec
push
outsl
pop
sub
push
andb
jbe
mov
jb
and
mov
cmc
outsb
dec
out
push
cmp
push
push
xchg
xor
movsb
push
inc
imul
mov
ret
push
pop
lret
add
fwait
cmp
push
adc
inc
add
add
push
sbb
add
std
out
mov
fisubl
or
lock
cmp
in
or
add
jo
or
decl
insb
movsb
add
dec
xor
add
aam
sbb
or
sar
cmpb
xchg
xchg
daa
jmp
cli
fcmovu
xor
movsl
add
adc
and
bound
cli
or
xchg
lock
ss
sub
sub
hlt
xor
or
or
or
stos
stos
mov
xlat
mov
and
sub
jg
aad
mov
imul
les
dec
inc
add
pop
aaa
roll
push
nop
fistpl
sub
jns
js
and
lcall
and
and
xor
pop
dec
push
ret
pushf
cmp
push
mov
out
daa
xchg
or
sub
sbb
mov
je
mov
cmpsb
icebp
or
repnz
jmp
mov
lods
sub
sbb
adc
jo
pop
lods
iret
xchg
pop
adc
add
incl
push
arpl
test
scas
les
push
or
clc
lret
mov
nop
dec
outsl
call
ret
jg
std
sub
loopne
cmp
jecxz
add
int
out
inc
jno
jge
std
pop
add
sbb
cmp
rolb
aaa
cltd
pushf
or
sub
aaa
push
clc
stos
cmp
lret
sub
pop
or
mov
scas
loope
sbb
xchg
sub
sub
jnp
adc
std
ljmp
test
lret
jl
imulb
les
mov
scas
mov
pop
ret
shll
out
cmp
mov
into
pop
add
inc
xchg
adc
sub
js
sbb
subl
out
xchg
pop
stc
jle
mov
frstor
xchg
cmp
sbb
cli
inc
adc
jae
outsb
loop
dec
leave
cmpb
fstpt
xor
and
daa
fidivrs
cmp
iret
cmp
sbb
sub
std
fcomip
sti
sbb
aam
aam
cwtl
div
clc
dec
je
mov
ja
into
mov
mov
movl
movsb
ja
add
insl
and
sub
and
sbb
std
cs
clc
fistps
cltd
jae
adc
fwait
dec
sbb
sub
popa
loop
jns
and
mov
cmpb
cld
jmp
hlt
out
fs
cmpsl
jb
adc
negb
pop
dec
dec
mov
xlat
lcall
pop
sub
sahf
mov
repnz
pop
mov
push
mov
jns
in
sub
xchg
adc
decl
lock
sbb
or
cmpsb
pop
daa
add
push
or
push
cmpsl
test
les
stos
mov
ss
ja
clc
jg
dec
lret
mov
leave
int
mov
add
add
push
adc
std
xor
cli
cmp
mov
into
int3
orl
jp
icebp
pop
mov
or
xchg
lcall
inc
pop
xor
imul
mov
mov
adc
ljmp
mov
scas
and
inc
inc
push
rolb
pop
xchg
out
idiv
or
sbbb
out
cmpsb
inc
cmp
movsl
scas
dec
fcmovb
dec
and
and
mov
cmp
das
inc
jge
cmpb
jae
xchg
out
push
inc
mov
mov
aam
dec
aam
mov
hlt
test
test
pop
push
dec
in
or
jecxz
sub
mov
mov
push
pop
adc
xchg
movsb
adc
das
lods
mov
aaa
dec
clc
xchg
sti
aad
mov
or
scas
mov
or
mov
add
jns
xchg
inc
call
and
mov
jmp
mov
jmp
adc
decl
or
cmp
pop
push
or
pop
lock
mov
adc
loop
stc
push
out
mov
loop
aas
test
and
shll
stc
sbb
iret
jae
xchg
jo
xchg
ljmp
sahf
push
jbe
cmp
icebp
xchg
scas
sbb
jl
xchg
xchg
imul
jg
mov
clc
cmc
subb
cli
xchg
mov
mov
dec
loope
adc
xchg
stos
fadds
les
jg
lods
call
xor
sub
push
cmp
cli
ss
out
push
adc
push
fcoml
mov
ss
cmpsb
repz
add
subb
sti
add
loopne
and
add
lods
incl
dec
push
dec
popa
dec
pop
sbb
jg
daa
cld
call
pop
mov
pop
xor
sbb
test
and
cmpsb
movsl
pop
popf
xchg
add
incl
sub
push
mov
mov
cmovbe
stos
ds
out
clc
xchg
mov
xchg
add
incl
fdivr
cmp
sbb
ret
dec
add
std
or
outsl
ja
call
sar
into
arpl
inc
lret
mov
push
mov
mov
cs
pop
dec
lret
inc
cmp
imul
rcrb
dec
loopne
lcall
outsb
aam
insb
sub
movsb
lcall
adc
sbb
clc
xchg
pop
out
jbe
push
jb
jl
pushl
repnz
rcrl
adc
bound
mul
push
in
or
pop
cmp
stc
or
mov
mov
mov
mov
mov
jg
das
push
nop
mov
xor
pop
push
nop
mov
stos
icebp
cli
leave
xchg
mov
push
mov
or
cmp
int3
jg
sub
adc
popf
gs
sti
jecxz
xor
in
lcall
call
daa
ljmp
lock
push
aam
pop
fistpl
ror
fcmovbe
sub
insl
fidivrs
orb
or
mov
dec
gs
or
data16
sbb
ret
aaa
xchg
std
push
xchg
sbb
aad
outsl
xchg
hlt
scas
push
ficompl
mov
add
movsb
incl
mov
lahf
mov
adc
push
add
testl
fiadds
mov
sub
jnp
test
push
adc
or
xchg
scas
jmp
lret
mov
mov
sub
mov
dec
jae
inc
subb
pop
incl
adc
insb
push
xor
pop
sar
dec
pop
daa
lret
orl
dec
pop
cmp
mov
inc
push
sbb
jns
cmpsb
imul
mov
sar
push
add
sarl
lock
leave
mov
push
cmp
cld
decl
mov
xor
sbb
adc
cmpsb
movsb
mov
decl
cmpsb
aas
pop
add
nop
clc
stos
lcall
or
iret
cli
cmp
jne
stc
in
out
mov
lcall
or
leave
lcall
daa
lods
ja
push
push
pop
clc
fldl2t
cltd
outsb
dec
add
sbbl
jae
pop
scas
or
lret
pop
cltd
adc
call
xchg
xchg
mov
fbld
jmp
cmp
sub
fimull
pop
fisttps
fisttps
jnp
mov
xchg
insb
ljmp
dec
and
inc
push
je
push
int3
push
xchg
jne
cmpsl
push
xor
pop
das
and
cmp
lds
fsubrp
pop
inc
push
push
jbe
jns
mov
cmp
or
fdivl
ljmp
push
cmp
sahf
cmpb
pop
push
ret
cmpsb
and
jg
sub
and
push
xor
sar
sahf
mov
pushf
ss
bound
pop
lods
xchg
movb
call
sub
xchg
sbbb
test
jecxz
and
push
sub
addl
inc
and
repnz
sar
pushl
push
or
arpl
sbb
adc
mov
lods
gs
inc
iret
jmp
dec
cli
subb
mov
or
jb
out
lods
mov
pop
lock
cmpsb
mov
leave
mov
mov
jg
xor
pop
cmp
out
sar
scas
fisttps
and
out
rcll
pushf
mov
mov
xchg
mull
inc
testl
mov
adc
xor
lret
lahf
add
push
add
cli
push
lods
mov
lock
cmp
xor
stc
cmp
filds
imul
fbld
adc
stos
mov
sub
mov
nop
jae
jg
jge
or
sbb
jl
xor
das
out
jecxz
lock
push
iret
jl
dec
cli
dec
dec
push
xor
mov
rcr
scas
nop
add
mov
push
and
ret
les
and
xor
jmp
pop
add
push
arpl
adc
out
in
mov
xchg
mov
and
mov
push
mulb
sub
pop
sbb
imull
out
push
mov
sub
out
enter
stos
and
insb
call
fiaddl
mov
popf
in
addb
push
xchg
clc
mov
cli
inc
xchg
pop
push
loopne
xor
mov
xchg
pop
and
ret
mov
je
icebp
fwait
leave
ret
subb
leave
call
pop
jmp
sub
fmuls
shrb
mov
dec
das
insl
in
sub
push
mov
xchg
pop
mov
dec
rcrb
enter
decl
push
gs
push
jmp
cli
jae
lcall
sub
xor
stos
sbb
roll
enter
or
cmp
push
cwtl
mov
adc
xchg
andb
stos
shr
ljmp
imulb
gs
loop
bnd
add
lea
lret
hlt
enter
loop
cmp
filds
arpl
add
int3
add
fimuls
mov
test
mov
dec
pop
aad
out
jp
fcomip
out
push
mov
inc
loope
pop
adc
les
hlt
outsb
rorb
cmpsl
cmc
lcall
aam
int3
sbb
int
inc
sbb
repz
or
arpl
fisubrl
stos
leave
sbb
rorb
mov
loopne
jl
lods
xor
or
xchg
lock
lcall
mov
jne
insb
js
push
hlt
pusha
mov
add
or
push
in
mov
call
add
cmp
mov
sub
mov
sar
or
in
add
lretw
add
lret
pop
imul
sub
pop
negb
pop
jmp
mov
ljmp
mov
xor
cwtl
or
loopne
jo
daa
out
lock
pop
lcall
insl
xchg
inc
mov
cmp
sub
xchg
icebp
pop
das
clc
incl
mov
jmp
insl
and
pushf
inc
loopne
mov
add
mov
lret
pop
out
and
cwtl
mov
dec
xchg
or
mov
xchg
scas
and
jmp
cwtl
xchg
cmp
out
pushf
dec
xchg
adc
fistpll
lods
or
lahf
data16
add
xchg
and
jno
lods
lcall
les
push
stos
dec
stc
daa
cli
incl
mov
roll
dec
mov
mov
lret
pushf
add
movsl
rorl
mov
push
sub
stos
outsb
daa
lcall
decl
mov
mov
test
add
inc
push
lea
fldl
call
adc
pop
mov
push
imul
xchg
out
or
lcall
rol
inc
or
sti
xor
add
roll
fwait
bswap
mov
rorb
jl
jnp
mov
dec
push
pop
cmp
and
test
xchg
movsb
movsl
test
cmpsb
out
in
lcall
in
fs
jl
inc
add
mov
in
in
pop
add
cli
mov
cmp
ds
jbe
dec
in
fstl
and
or
or
out
cli
jns
mov
push
mov
mov
mov
stc
inc
or
hlt
lcall
outsb
int
and
ret
xchg
notb
subb
push
add
mov
es
lcall
or
cmc
mov
call
or
add
ljmp
iret
outsl
rclb
scas
fidivl
je
jnp
jae
call
dec
out
cmp
and
in
loopne
fsubs
sbb
stos
ljmp
cmp
sub
mov
mov
sbbb
incl
mov
and
fs
das
lea
out
clc
outsl
adc
pop
adc
pop
dec
aas
test
dec
dec
decl
repnz
mov
dec
out
cmpsl
jmp
mov
or
pop
shrl
pushl
or
call
jae
outsl
and
mov
sub
mov
or
ss
out
or
inc
xchg
pop
jle
sarl
fldt
dec
movsl
loopne
push
dec
testb
ror
cld
jg
mov
mov
add
push
ljmp
lcall
and
out
sbb
mov
jb
je
jg
call
or
fwait
popa
rcr
ss
int3
insl
inc
sub
push
add
repnz
sbb
shl
cmp
push
jno
cmc
mov
or
das
sarb
inc
push
push
adc
cs
incb
icebp
dec
movsb
mov
imul
cmpsb
or
imul
cmpsb
es
push
push
xor
mov
loope
xorl
ljmp
fnstsw
cmp
jg
jb
inc
pop
popa
inc
xor
sub
mov
aaa
push
imul
cmp
jmp
lock
sub
aam
adc
sbb
sar
xor
cmp
std
ss
adc
xor
adc
adc
sub
lcall
push
mov
iret
iret
pop
or
insb
ljmp
sub
out
imul
lret
mov
call
mov
dec
cmpsl
mov
lcall
ljmp
out
mov
and
rcrb
jmp
out
sahf
out
cltd
or
call
xchg
mov
lock
push
jg
inc
call
ljmp
hlt
incl
add
les
xchg
or
cld
and
ljmp
mov
int
xchg
dec
fmuls
je
mov
push
pop
icebp
jg
aam
repnz
jmp
inc
and
push
aas
add
sbb
imul
aam
aas
sbb
notl
inc
add
outsl
adc
sbb
or
sub
out
or
cld
sub
sahf
shll
scas
into
int
incl
push
xchg
cld
push
lret
xchg
lock
and
cmp
xchg
inc
jecxz
mov
sbb
dec
test
roll
outsb
xor
out
loopne
dec
cld
push
mov
scas
push
mov
dec
mov
push
adc
scas
inc
cmpsb
mov
sahf
outsb
sbb
fmull
cld
jmp
lahf
pop
lcall
out
jne
bound
fwait
inc
push
mov
or
xor
call
xchg
andl
adc
mov
or
push
mov
and
push
cmpsb
sbb
ljmp
icebp
sbb
fwait
mov
add
das
inc
push
aaa
mov
pop
rolb
dec
pop
sub
push
pop
push
sub
add
sub
das
mov
lcall
ja
mov
jmp
cltd
push
loope
int
jle
mov
jmp
imul
rorb
les
fldcw
aaa
dec
lcall
adc
out
xchg
adc
dec
cltd
cld
xor
repnz
repnz
jg
fdivp
outsl
add
mov
call
enter
aaa
xor
add
inc
sub
out
cmp
jae
and
mov
push
es
movb
add
ds
jnp
sbb
or
ffree
jle
push
cld
sub
jg
pop
push
cmp
sub
and
or
push
add
and
out
shlb
push
sub
add
jno
pop
std
ljmp
cmp
dec
js
xor
jl
push
rcl
pop
repnz
mov
or
pop
pop
add
hlt
cmpsb
push
ret
mov
fldenv
dec
lock
shlb
or
adc
or
std
push
scas
push
lock
das
mov
out
lret
push
stc
inc
ja
cli
jmp
sti
push
cwtl
gs
adc
loope
inc
push
xor
pop
incl
scas
mov
out
enter
sub
xor
sub
addr16
inc
dec
or
lods
and
or
outsb
mov
dec
loope
fwait
add
popf
int
dec
and
orl
xor
add
ljmp
pop
dec
add
pop
shll
dec
ret
mov
cmpsb
daa
out
clc
decl
in
add
dec
adc
push
or
mov
test
enter
decl
sub
and
aam
sbb
out
push
or
fprem1
outsl
push
push
sub
push
xor
ret
mov
cmp
ljmp
call
push
mov
inc
dec
ja
adc
stc
sbb
xor
outsl
jp
inc
arpl
cltd
mov
movsb
pop
das
popf
cmp
cmp
gs
sub
or
lret
or
add
dec
in
icebp
std
inc
pop
xchg
and
leave
in
rclb
adc
or
mov
jno
bnd
xor
bound
adcb
and
xor
and
ret
sub
adc
jl
and
fldt
lret
arpl
fisttpl
decl
xchg
loope
jbe
push
cmpsb
push
movsb
std
push
xchg
popa
or
iret
out
adc
in
loopne
xchg
dec
stc
test
or
jae
mov
idivb
negb
xor
incl
xchg
test
inc
aam
cmpsb
aaa
fwait
daa
pop
dec
sbb
xor
ja
call
daa
pop
std
push
xchg
dec
add
subb
stc
out
ret
jg
das
loopne
fwait
xchg
jg
ds
jecxz
lds
dec
push
sub
loop
fwait
insb
lcall
and
jge
adc
sub
adc
fisttpl
je
mov
pop
and
clc
repnz
pop
pop
sbb
scas
inc
fwait
cmc
mov
sub
mov
test
insb
out
mov
cli
cld
mov
add
out
pop
jo
push
mov
stos
testb
ja
lret
mull
movsb
in
in
jp
xor
nop
jno
dec
movsb
repnz
stos
sub
decl
inc
sub
push
decb
jl
outsl
dec
add
les
out
push
loopne
xor
xchg
mov
mov
adc
rorl
cwtl
dec
push
aaa
int
push
dec
xchg
scas
mov
call
push
call
cmp
call
loop,pn
mov
add
outsb
outsb
push
jb
insl
mov
ficoml
out
mov
leave
pop
dec
jecxz
adc
test
loope
loope
lds
stc
xchg
xchg
jmp
stc
adc
cld
jae
lods
inc
ja
test
aas
push
jno
stc
xor
pop
jle
ret
lods
enter
ds
mov
xlat
lock
sub
dec
inc
fbstp
jno
sbb
int
push
aaa
es
xorl
leave
ljmp
js
lcall
aas
movsl
subl
pop
icebp
sbb
imul
lock
inc
movsb
scas
mov
push
jle
push
cmp
xor
cmpsl
je
ds
jg
adc
repnz
ljmp
fidivrl
adc
in
pop
stc
dec
lea
inc
cmp
scas
les
rorb
ret
in
hlt
mov
sub
incl
and
dec
mov
insb
outsb
inc
sbb
mov
scas
push
add
repnz
clc
das
lods
pop
int3
add
push
jnp
adc
scas
mov
push
cmp
sti
lcall
clc
jg
inc
dec
adc
or
push
fld
fcom
mov
test
out
cmc
repz
jle
insl
xchg
add
jp
cs
sbb
push
fbstp
jmp
add
jl
in
insb
jp
call
loopne
inc
fidivs
dec
aaa
mov
add
loop
lret
test
add
sub
jb
push
int3
emms
sbb
lock
daa
dec
dec
lock
int
sbb
and
lds
adc
in
cmpsl
in
call
xor
int
mov
out
cli
ljmp
mov
fldl
mov
adc
lcall
icebp
jnp
xlat
ret
dec
int3
outsl
and
mov
mov
xlat
xor
or
fs
shl
pop
push
ret
out
div
sbb
in
inc
bound
xor
pop
das
cmpsb
sub
adc
test
and
adc
fs
jo
add
jg
xchg
fstpt
cmp
das
cmpsb
es
leave
negl
mov
xor
inc
push
jne
in
lret
push
mov
mov
cmp
jecxz
mov
mov
loop
inc
fldcw
adc
sub
cmp
push
pop
adc
andl
repnz
inc
mov
adc
inc
loope
leave
and
pop
and
jp
mov
and
shrb
aam
fdivs
cmp
sti
push
int3
adc
or
pop
dec
dec
cmp
in
das
mov
test
aad
push
jecxz
hlt
dec
or
xchg
sbb
fwait
movsb
outsl
xor
add
mov
cli
mov
pop
cmp
jne
mov
add
ja
mov
pop
pop
cld
xor
cmc
ja
jmp
dec
jp
push
outsb
or
sbb
add
pop
lods
cli
pop
add
ret
mulb
std
pop
jmp
push
lock
cmp
sbb
mov
fldenv
jp
icebp
pop
jmp
xlat
cmpsl
cmp
loop
xlat
and
or
out
xchg
cli
jle
je
test
outsl
nop
jbe
pop
mov
loope
repnz
mov
clc
stos
or
jne
scas
xchg
pop
stos
xlat
popf
mov
pop
pop
mov
int3
push
sahf
push
rcrl
push
pop
sub
mov
dec
dec
and
scas
and
clc
subl
jge
repz
iret
add
push
cli
jg
mov
pushf
push
rcrl
inc
push
ficompl
pop
loop
xchg
lahf
xlat
and
xor
es
dec
mov
xor
mov
test
inc
mov
ljmp
sub
and
xchg
loop
adcl
sar
jae
inc
sub
mov
pop
sbb
cltd
or
nop
hlt
clc
push
ss
or
push
cmp
enter
sub
and
cmp
orb
repnz
iret
push
pushf
push
fadds
xchg
mov
pop
mov
mov
xlat
outsb
inc
cmc
cmp
mov
mov
shrb
dec
movsb
mov
add
jge
std
lcall
mov
cmpsl
add
outsl
into
mov
mov
hlt
rcrl
icebp
lcall
and
test
and
jg
add
leave
sub
cli
or
inc
adc
iret
xor
cmc
int
cwtl
test
cmc
push
aad
cmp
cmp
sub
cli
push
pop
push
fists
loopne
xor
inc
pop
mov
ljmp
movsl
cmp
enter
loop
cwtl
out
aam
pop
inc
sub
sbb
scas
xor
mov
push
icebp
std
out
or
cmc
movsb
xor
add
mov
push
ficoml
jle
inc
lods
outsb
pop
xchg
sub
mov
dec
pop
ljmp
insl
loopne
xchg
lods
xor
out
lods
js
pop
lock
and
test
pop
mov
jno
insl
rorl
cmpsb
xor
lea
and
pop
or
or
add
adc
mov
mov
jle
ljmp
repnz
shlb
mov
in
adc
call
lock
sub
mov
out
fstl
sub
and
cmp
rorl
decl
jo
xor
or
hlt
cmpsl
jmp
ja
cmpsb
cld
fildll
mov
sub
scas
imul
mov
xlat
int
fbld
jbe
pusha
xor
out
cmp
dec
mov
push
xchg
pop
sbb
incl
hlt
sahf
js
jno
jae
xchg
xchg
sarb
movsb
std
lock
push
imul
fldl
das
icebp
lcall
hlt
adc
dec
out
pop
add
insb
sbbl
rcll
cmp
inc
cld
cli
push
push
int
xchg
sbb
pushf
repz
inc
inc
adc
mov
cmp
push
push
push
cmpsl
xor
xor
inc
sahf
xlat
cmp
push
adc
popf
shrb
xchg
mov
sbb
push
ljmp
push
or
mov
scas
lods
pop
or
aad
loope
xchg
pop
mov
stos
mov
cmp
mov
out
das
std
pop
jle
mov
sub
and
and
sub
jl
ljmp
fisttpl
push
jg
lods
cld
lods
call
or
mov
mov
dec
add
push
and
int
lret
sarl
sub
ja
ss
cmp
not
jae
pop
imul
mov
call
clc
mov
lock
lcall
int3
iret
or
out
repz
jmp
std
mov
jmp
xor
xorb
or
ret
sbb
mov
push
fidivrl
sarl
movsl
cmpb
or
stos
cmc
cwtl
addl
lret
pushl
enter
pop
pop
push
sub
dec
mov
jmp
add
imul
es
and
sti
pop
loope
mov
mov
shrb
out
pop
pop
adc
lret
sub
fstpl
test
push
fdivrl
or
or
push
push
xchg
das
repnz
pop
gs
jne
inc
test
aaa
cmp
jae
lcall
mov
jae
mov
sub
or
pop
mov
jg
jmp
jl
test
add
pop
enter
aas
jp
daa
and
sbb
jmp
mov
inc
pushl
leave
ds
in
xor
arpl
stos
mov
push
push
mov
pop
xchg
sub
mov
mov
adc
cwtl
aam
cmp
sub
outsb
inc
fsubl
fbld
scas
mov
and
push
sahf
shll
mov
dec
jo
dec
sub
dec
adc
out
mov
mov
fs
push
cmp
cmpsb
push
push
mov
or
lcall
std
nop
in
and
ljmp
mov
push
or
shrl
jo
and
ljmp
push
adc
outsl
mov
dec
stos
loopne
dec
das
mov
scas
and
mov
repnz
xor
cmp
aam
clc
pop
mov
int3
push
sbb
add
and
cmp
inc
mov
lcall
pushw
jecxz
pushf
jmp
and
sahf
jge
cmp
daa
and
decl
lcall
pop
fsubs
cmpsl
aas
push
add
shrb
std
lcall
jno
and
xor
xor
xor
out
adc
and
jnp
dec
cmpsb
sub
add
es
imul
in
repnz
ffreep
out
cld
aas
push
out
mov
xchg
pop
sub
inc
aas
pushl
xor
ret
mov
cmove
scas
shrb
mov
pop
data16
subl
pop
pop
pop
mov
add
lods
xchg
insb
and
mov
shr
pop
cmp
ljmp
incb
ljmp
aad
aaa
shrl
sub
push
cmpsb
push
adc
decl
xor
mov
inc
cltd
push
jae
xor
jg
test
lock
jbe
mov
cmp
lret
ljmp
cmp
mov
mov
mov
xor
push
mov
cmp
push
xchg
gs
mov
jle
pop
add
sub
xor
fmuls
stos
and
shr
ljmp
fisubrs
cmpsl
sub
int
mov
addb
insb
neg
imul
adc
or
pop
sbb
in
icebp
into
enter
mov
dec
dec
call
pop
out
sub
ds
leave
enter
xchg
sbb
inc
jno
adc
and
loopne
loop
sbb
aam
fbld
mov
adc
repnz
xor
std
fwait
pop
pop
pop
xchg
rclb
pushf
or
dec
xlat
fbstp
pop
inc
adc
daa
sahf
xor
cmpsb
ljmp
jbe
test
repnz
push
add
repz
int3
mov
jmp
push
stos
jb
loope
pop
cmp
fistl
adc
sbb
je
fstp
cld
in
dec
std
push
push
imul
ret
add
hlt
insb
lahf
das
cmp
dec
lahf
ja
out
imul
add
jg
mov
pushf
es
mov
xchg
adc
arpl
and
jo
cmp
cmpsb
popf
mov
test
add
sbb
adc
scas
or
xlat
popl
lret
hlt
lret
pop
scas
test
and
or
mov
mov
mov
push
jg
scas
out
sbb
sarl
outsl
xchg
divl
ja
mov
xor
fdivrp
out
push
icebp
mov
jge
mov
sbb
pop
ljmp
incl
mov
cmc
ret
and
mov
xor
mov
sti
jnp
adc
dec
push
xor
data16
mov
pushf
or
lods
outsb
jmp
pop
push
or
fistpll
stos
push
mov
cwtl
push
cmp
cli
mov
cmp
sbb
mov
jg
in
mov
pop
loopne
xchg
push
dec
mov
hlt
ja
mov
das
push
lcall
pop
mov
aad
push
dec
push
jmp
fwait
jno
or
pop
add
sbb
lock
outsb
es
mov
mov
dec
mov
pop
repnz
mov
sbb
sub
inc
xchg
sbb
pop
add
fidivrl
add
enter
jg
dec
mul
insb
scas
popa
popf
push
addr16
add
sbb
dec
xchg
enter
xchg
xchg
push
push
loopne
mov
out
cmp
xchg
inc
xor
bound
shr
out
nop
sub
test
jg
pop
testb
cltd
clc
test
lret
mov
jo
push
push
cltd
inc
subl
mov
shrb
cli
push
ret
pusha
jg
push
fdivl
and
sbb
cli
adc
mov
sub
mov
jge
in
gs
jne
outsl
add
adc
sub
imul
sbb
mov
shrb
pop
pop
pushl
loop
dec
pusha
and
orb
adc
aaa
add
lcall
mov
in
pop
jg
push
adc
decl
in
loop
dec
loopne
adc
cmc
rorb
push
adc
jmp
int3
loopne
mov
call
sub
ret
stc
cmp
in
xor
adcb
movsb
inc
pusha
push
xchg
bound
jg
outsb
fclex
jle
call
cwtl
adc
jne
or
ret
add
cli
bound
call
insl
jmp
fisttpll
ljmp
mov
dec
cmp
push
rol
ljmp
xchg
push
lock
jg
sbb
jg
pop
inc
cmpsb
lock
std
and
fldenv
push
imul
cmpsb
ljmp
hlt
inc
scas
imul
daa
aam
inc
bound
pop
cs
mov
loope
fcoms
mov
sarb
add
incl
mov
cmp
int
orb
clc
rep
lods
pop
cmpsb
ss
and
mov
pop
and
daa
push
lret
testb
sub
dec
mov
jl
adc
add
ds
icebp
test
cmp
sub
sbb
dec
mov
and
push
push
xchg
ficoms
xchg
adc
push
rcrb
inc
push
push
dec
out
pusha
out
pop
fdivs
decl
call
pop
stc
xor
xchg
inc
push
mov
inc
outsb
or
sar
xlat
sarl
cmpb
adc
cmpsb
lock
sub
sub
mov
out
add
fildl
pop
jmp
mov
or
pop
insl
pushf
adc
mov
clc
cmpb
in
adc
cmp
sbb
xchg
mov
fdivp
test
sar
jmp
cmp
lods
out
lds
aaa
cmp
cld
mov
or
decl
xor
jbe
daa
pop
mov
dec
or
and
mov
mov
ljmp
ror
ds
sub
push
jnp
and
mov
pop
pop
cmpsl
fdivrl
inc
loopne
inc
ds
mov
pop
jmp
add
pushf
pop
mov
push
xchg
jle
aas
xchg
shrb
mov
fwait
dec
lock
mov
decl
push
adc
sub
mov
lods
pop
dec
xchg
cmp
dec
stc
jg
loop
incl
imul
sbb
add
mov
gs
dec
fbstp
adc
dec
mov
adc
mov
adc
rcrb
mov
fidivl
add
addb
outsb
ljmp
js
mov
mov
sbb
aaa
add
imul
out
and
jecxz
pop
mov
pushl
pop
cltd
push
sbb
mov
ds
lahf
lahf
cmp
mov
mov
ja
pop
mov
add
xchg
sahf
pop
cmpsb
mov
mov
es
jge
mov
hlt
jae
iret
inc
shlb
loop
xor
mov
sub
mov
fistpl
mov
lcall
push
cld
incb
xor
popf
cli
lcall
cmc
jb
mov
sub
push
inc
aas
xchg
dec
mov
cmp
sbbb
mov
sub
inc
dec
and
iret
mov
pusha
jae
fisubl
data16
mov
lock
aam
or
pop
or
cmpsb
inc
shll
lcall
jmp
and
rorb
cld
mov
mov
and
sarb
insb
xor
jl
add
xor
ss
ss
mov
bound
adc
mov
call
mov
popa
add
mov
add
mov
adc
push
cmp
jge
mov
clc
xor
and
scas
test
xor
iret
sti
xor
add
mov
adc
cmc
incl
cmp
shrb
test
adc
sbbb
imul
cmpsl
add
out
xor
xor
cmpsb
out
leave
inc
mov
pop
adc
cmp
inc
inc
in
aas
idivb
jg
or
xchg
xchg
pop
jge
add
add
push
jecxz
pop
push
mov
and
pop
cmp
sbb
ja
mov
mov
clc
jmp
push
inc
sbb
pop
dec
notb
add
dec
xchg
mov
rcrb
pop
mov
mov
xchg
jb
jnp
mov
or
inc
cld
mov
aaa
sub
sub
mov
mov
mov
push
push
std
mov
or
push
adc
mov
and
mov
les
mov
sbb
add
adc
jg
clc
xchg
pusha
insb
add
sub
inc
pop
dec
outsl
xor
aad
sub
push
cmc
sbb
mov
or
stos
adc
ret
test
fwait
pushf
jp
jnp
icebp
pop
in
sbb
push
jp
xor
scas
mov
push
leave
fdivs
enter
repz
cmc
call
pop
test
jae
in
adc
testl
jl
clc
and
and
icebp
or
cmp
inc
cmp
hlt
push
mov
inc
ljmp
mov
cmp
sbb
sti
icebp
nop
sub
lock
xchg
push
add
stos
push
add
mov
or
decb
jg
pop
mov
sti
ret
adc
test
mov
push
enter
add
push
push
sub
andb
add
ss
cltd
out
int3
filds
lds
test
out
mov
jno
iret
dec
adc
out
cld
arpl
mov
push
cs
outsb
loope
mov
add
jmp
hlt
dec
rcll
ds
xor
filds
pop
repz
jg
repnz
xor
lock
leave
loopne
mov
enter
and
lcall
xchg
sub
stos
xchg
or
je
stos
leave
mov
cli
or
jbe
xchg
cli
push
insb
push
testl
mov
mov
xor
aad
add
cld
in
call
pop
pop
inc
orl
sbb
sbb
and
and
fdivr
ljmp
mov
ss
aaa
jmp
lods
popa
cmpsl
jb
jge
aam
insb
out
adc
aad
aaa
mov
or
pop
mov
dec
dec
js
lock
test
sbb
sbb
push
ja
mov
rcr
out
and
aam
das
fidivrs
mov
sub
popa
adc
or
xchg
clc
pushl
inc
pop
push
cmp
mov
cli
jbe
inc
mov
roll
ljmp
ljmp
outsb
in
jmp
inc
sub
je
mov
mov
dec
iret
inc
mov
shrb
ljmp
lret
iret
xchg
js
lock
jg
push
and
popf
jp
cli
ja
incl
mov
cld
aas
xchg
stos
aaa
loop
push
pmulhuw
lret
push
adc
push
stc
insb
jle
clc
pushl
cmp
push
mov
adc
jne
stos
or
cmp
aam
inc
and
mov
insl
cld
add
inc
and
orb
push
adc
bound
sbb
sbb
push
add
icebp
pop
xorb
mov
mov
add
test
mov
inc
testl
shr
xor
sbb
pop
jg
sbbb
add
or
xor
scas
xchg
jmp
sbbl
lods
aas
test
popf
cmpsb
int3
and
fs
jg
into
aad
ss
insl
sbbl
imul
sar
les
mul
insb
cmp
out
push
push
cmpsb
bound
lods
adc
pop
call
test
cmpsb
lret
pop
call
push
push
out
mov
and
insb
adc
out
rcrb
adc
xchg
scas
mov
add
scas
xor
incl
or
outsl
cld
jmp
mov
jae
ficoms
repz
cmp
not
outsb
movsb
cs
out
roll
push
jmp
in
std
outsb
adc
adc
bound
sub
adc
out
push
mov
ljmp
ror
mov
ret
mov
aam
popf
pop
popa
loopne
dec
sbb
xor
lcall
cmp
mulb
cmc
jge
pop
pop
ret
imul
aaa
jg
fsts
jle
iret
int3
mov
jmp
pusha
loope
popf
cld
mov
sahf
cmp
jo
xchg
cltd
das
subb
jns
std
movsb
adc
cmp
or
sub
call
insb
sub
mov
iret
nop
push
iret
mov
or
mov
cmpsb
pushl
xor
xor
pusha
inc
pop
popf
dec
jne
rclb
inc
jp
outsl
push
cmp
cmovbe
pop
dec
pop
jae
push
hlt
decl
cmp
mov
mov
hlt
and
adc
and
ret
lret
hlt
adc
xchg
inc
mov
and
pop
pop
jmp
loopne
mov
pop
fsubp
adc
sbb
jmp
loop
lea
in
cmp
xorb
inc
repnz
lock
push
enter
decl
mov
add
jnp
fcmovbe
sbb
dec
addr16
js
jg
mov
lahf
ja
sbb
test
mov
rclb
or
jp
mov
or
movsb
outsl
mov
jg
cmp
hlt
inc
sub
ja
inc
inc
adc
int
jne
mov
les
push
scas
clc
decl
sbbl
orb
hlt
cs
add
push
xchg
cmc
mov
xchg
or
mov
xchg
xchg
adc
je
cli
add
cld
out
dec
je
mov
mov
inc
dec
mov
aaa
cmpsb
or
jmp
mov
push
lock
dec
out
cwtl
ret
push
push
fstpt
fimuls
mov
cli
dec
dec
push
mov
int
add
neg
neg
test
outsl
lret
or
xchg
or
push
mov
lcall
push
jmp
hlt
push
out
data16
in
mov
xor
pop
test
xor
loop
pusha
jae
jmp
pop
jmp
or
pop
std
sbbb
pop
loope
push
push
and
jmp
out
test
xor
movl
lock
adc
xchg
adc
and
adc
push
push
add
fldl2e
cmp
test
mov
imul
sub
sub
out
inc
shll
sub
fisttps
jo
xor
or
hlt
jno
into
bound
enter
sub
xchg
cli
incl
icebp
xchg
mov
out
popf
leave
inc
int3
and
add
loop
mov
js
loopne
push
xchg
sub
aaa
stc
loopne
lock
lret
cwtl
push
in
in
jb
cld
clc
inc
lahf
sub
sar
add
test
decl
shll
inc
push
cmp
js
int3
lds
cvttps2pi
cld
pop
or
jg
cmp
cmp
adc
aaa
cmp
sbb
jo
cld
ljmp
jle
mov
xor
ja
sbb
ret
sub
pop
call
je
outsb
or
call
sbb
std
out
and
jnp
and
nop
push
clc
push
jne
shlb
repnz
les
xchg
retw
fnsave
and
lcall
sub
leavew
jge
sbb
es
or
mov
cmp
fbld
jecxz
add
mov
out
mov
mov
add
jp
in
fisubs
xchg
push
add
and
repz
cmp
fs
mov
ljmp
xchg
insl
hlt
pusha
cwtl
cmp
sbb
fldcw
cld
lods
jns
jmp
incb
pushf
aam
fcmovnb
mov
sub
mov
xchg
pusha
push
sbb
pop
sahf
pop
pop
push
mov
fxch
fcom
in
clc
cli
into
adc
cwtl
ffreep
fcomps
add
aad
call
movsl
add
in
xor
mov
aam
sbb
loopne
mov
xchg
std
jecxz
add
sbb
jo
lods
mov
dec
jl
incl
pushl
and
xlat
pop
cs
into
inc
lcall
push
lcall
dec
push
pushf
int3
or
mov
test
aam
adc
jmp
aad
sub
out
add
lods
lahf
cmp
push
test
push
pop
inc
inc
shr
jmp
dec
xor
es
popf
mov
insb
fs
or
mov
pusha
scas
push
rolb
or
pop
push
push
gs
push
cld
out
mov
lcall
dec
test
sbb
sbb
push
jp
mov
mov
cmpsb
mov
sub
cmp
sbb
mov
ror
pop
movsb
orl
incl
incl
dec
test
movsl
dec
jmp
leave
pop
jb
push
mov
adc
mov
xor
gs
jg
dec
dec
pop
cmp
push
lods
jbe
xor
pop
scas
lock
push
cwtl
outsl
push
iret
inc
aad
jle
add
das
icebp
and
addl
aad
mov
movsl
xor
cmp
insl
inc
push
jo
jg
jmp
push
xor
or
push
out
mov
or
add
cld
fwait
inc
loope
cs
xchg
sub
adc
fisttps
bound
xlat
adc
fiaddl
mov
int3
sar
ljmp
pop
leave
imul
sbb
xchg
fisubl
cmp
lret
test
xchg
outsl
add
mov
sub
scas
decl
mov
xchg
and
sub
xor
aas
lcall
sub
cmp
push
test
sbb
sub
or
cmp
push
stos
mov
je
push
mov
add
add
mov
hlt
sahf
out
stos
ss
push
xchg
in
mov
add
loope
jne
xor
adc
fcomps
xchg
sbb
pop
adc
sub
cmp
int
add
jns
push
jge
sbb
cmp
ret
pop
mov
xor
dec
sbb
jg
jp
or
jmp
movsb
push
dec
shr
iret
push
and
aaa
pop
ds
xor
jbe
jb
ret
jns
fwait
mov
xor
cmc
xor
inc
sub
bound
push
add
mov
jmp
adc
inc
loope
cmpsb
jno
bound
mov
mov
add
cmp
es
push
xor
mov
adc
stos
xchg
iret
push
cmpl
xor
dec
xor
add
addr16
mov
lcall
pushf
in
jne
xchg
jmp
addb
add
lds
add
out
pushf
sbb
add
mov
or
inc
adc
ret
and
push
dec
into
into
mov
std
add
xor
mov
xchg
out
ret
decl
cltd
pop
add
lcall
fistl
cmpsl
sbb
loop
div
es
leave
orl
das
inc
mov
push
mov
adc
xchg
push
lahf
in
mov
mov
jb
xchg
pop
scas
adc
stos
xchg
push
jmp
and
push
mov
das
mov
jle
clc
js
pusha
ljmp
push
pop
jo
xor
mov
sar
cmp
jle
inc
in
mov
mov
sub
cmpsb
xor
or
test
mov
loopne
insb
pushf
or
jge
mov
sbb
in
mov
xor
jo
push
mov
jmp
xorb
das
xor
and
clc
ljmpw
adc
arpl
push
push
scas
push
jo
lcall
push
sub
add
jp
aam
loopne
cli
sbb
sahf
jmp
jbe
push
pusha
lea
loopne
mov
pop
sbb
add
call
and
fildl
ljmp
xor
sbb
sbb
std
cli
repz
call
rol
out
in
jne
call
and
je
in
pop
jbe
adc
jo
dec
call
cld
call
rol
jne
sti
pop
or
aam
inc
xor
and
fs
xchg
out
mov
pushl
out
cmp
fcomip
pushl
jbe
nop
out
and
imul
mov
dec
icebp
adc
aas
jmp
jmp
dec
das
xlat
add
adc
pop
pushf
popf
pop
mov
dec
repnz
std
mov
cltd
cld
cmp
xlat
adc
fwait
mov
push
xchg
cmp
hlt
ljmp
fidivrs
and
sub
add
sbb
mov
mov
adc
in
jb
adc
out
fimuls
push
sti
sbb
add
es
in
ss
xchg
nop
jmp
cmp
jns
repnz
xchg
sbbl
mov
addl
sar
jae
inc
push
mov
notl
mov
push
imul
stc
push
hlt
jle
xchg
stos
pextrw
pop
xor
cs
xor
xor
out
mov
dec
pop
push
jle
clc
lcall
rolb
jle
aaa
pop
mov
mov
and
adc
fisubs
sbb
movsl
lods
jns
add
lcall
xor
sti
xor
and
ja
shrl
and
sbb
xchg
jbe
mov
outsl
mov
mov
push
inc
jge
sub
pop
lcall
sbb
fidivrs
dec
or
loop
mov
or
pop
mov
shll
sbb
push
push
xchg
add
cli
pop
out
pop
and
mov
mov
outsl
push
cmp
jl
cmpsb
mov
or
popf
mov
push
and
daa
xor
pop
sub
dec
adc
push
scas
push
mov
je
out
cmc
sub
mov
sub
lea
xchg
or
pop
subb
xchg
cltd
xchg
in
out
sbb
add
adc
add
rclb
lods
sbb
dec
pop
xor
and
nop
pop
mov
lcall
inc
dec
lret
push
fwait
mov
daa
cld
and
flds
jo
mov
push
dec
clc
inc
add
mov
clc
push
in
ret
mov
pop
ss
xchg
or
mov
xor
scas
sub
ficoml
cmc
adc
lock
jns
or
sarb
adc
andl
stos
mov
sbb
aas
cmp
lea
lods
dec
shrl
push
fprem
or
lea
mov
xor
fnstsw
das
ret
mov
popa
mov
pop
lea
les
or
icebp
adc
sbb
xchg
cli
fwait
icebp
adc
cmp
sub
add
ljmp
push
mov
shrl
push
or
rolb
fwait
sbb
or
scas
push
mov
sbb
adc
aas
cmpb
jno
ss
ljmp
pop
mov
sub
add
sub
mov
or
cltd
push
aam
rcrb
mov
rcll
xchg
inc
push
insb
cs
add
jmp
or
stos
lahf
sbb
sub
xor
and
repnz
ljmp
xchg
test
mov
ud0
push
in
frstor
test
add
sbb
xchg
repz
and
addb
loope
mov
out
add
daa
pop
movsb
outsb
mov
add
jnp
sbb
cmp
mov
mov
inc
testl
cmc
imul
xor
sub
rolb
cwtl
js
mov
loope
pop
push
adc
enter
add
or
movsl
out
or
test
mov
cmpsb
insl
mov
push
ret
into
and
loop
xchg
dec
cmp
add
cmp
mov
mov
jns
cmp
pusha
pushf
sub
mov
shlb
push
xor
or
ss
bound
sbb
rep
adc
loop
add
ret
cmp
add
push
call
push
out
xchg
lock
cmc
cmp
inc
or
dec
dec
or
mov
jne
scas
sbb
sub
push
out
jno
push
mov
jns
scas
and
sbb
add
jnp
and
pop
idiv
dec
mov
mov
mov
cmc
cmpl
and
movsb
mov
inc
xor
pop
push
stc
aaa
dec
add
jbe
push
sub
pop
lds
jo
out
sub
decb
push
mov
lcall
mov
bound
add
call
ffree
mov
jnp
out
push
loope
rorl
mov
je
mov
rcrb
add
call
cld
stc
stc
jge
cmpsl
incl
push
pop
test
jb
xor
and
lret
ljmp
pop
jg
sub
or
ss
cli
jg
in
inc
test
adc
pop
jo
adc
addr16
rorb
pop
inc
shrl
add
clc
add
pusha
dec
insb
fidivs
add
xor
fcoml
rcrb
cmp
adc
inc
imul
gs
in
pop
mov
jmp
daa
inc
or
jae
out
sar
push
xchg
mov
mov
mov
cld
jmp
frstor
sarb
pop
add
gs
test
lods
test
pop
xor
xchg
cmpsb
out
int
jp
mov
ret
fwait
gs
push
xlat
adc
push
hlt
cltd
jbe
les
stc
push
sbb
jg
jbe
les
insb
jmp
aam
ret
pop
xchg
ret
xor
sub
jp
in
jge
inc
push
sub
es
pusha
fnstenv
cli
pop
cld
pop
lcall
jmp
pop
and
clc
push
std
dec
ficoms
or
ds
incb
in
jmp
dec
iret
imul
jbe
lock
clc
into
dec
jmp
push
daa
test
loopne
or
inc
push
push
adc
push
jp
jle
icebp
jp
sub
ds
push
stc
cmp
pop
push
rcll
fistpl
dec
sbb
loopne
sub
pop
in
lcall
fdivrl
shrl
push
in
adc
sbb
push
insb
rorb
int3
push
push
outsl
push
pop
jns
push
icebp
aam
sarl
or
decb
iret
aaa
sub
mov
aaa
add
lock
call
jno
jg
push
pop
sub
popa
addr16
pop
in
dec
stc
mov
daa
push
ljmp
or
dec
into
push
jecxz
xor
scas
cld
lcall
repz
ljmp
pop
bound
add
jmp
add
pop
rorl
adc
loopne
push
out
push
pushl
iret
dec
xor
clc
and
xlat
adc
pop
data16
sbb
dec
repz
cmp
lahf
cld
stc
sbb
call
add
mov
xor
fisubl
jbe
and
jmp
fdivl
cmp
pop
or
fsubl
and
out
jle
ret
icebp
insb
imul
and
cmp
std
pop
jae
or
xor
and
push
rcll
adc
bound
adcb
pop
fsubp
pusha
push
and
sub
aaa
loopne
push
pop
ret
call
idivb
adc
lds
leave
inc
jmp
lcall
clc
jp
jns
inc
fadd
inc
out
and
repnz
jne
fwait
jmp
inc
aam
inc
jp
pop
cmpsl
call
daa
jg
cld
jb
repz
or
sub
sbb
sbb
fiadds
mov
ret
ret
pop
adc
mov
hlt
cld
aas
and
stc
sbb
jg
incl
or
icebp
and
js
dec
xchg
sti
lods
pop
aad
stc
jmp
push
adc
in
sub
shll
call
js
push
jne
rol
mov
fildl
jp
popa
pop
popa
jb
imul
or
sub
outsb
dec
ljmp
inc
in
jmp
or
lret
jmp
inc
ljmpw
jb
cmp
inc
outsl
repz
lcall
les
arpl
adc
pop
sbb
inc
cmp
shrb
xor
in
and
dec
jl
lods
mov
fnsave
aaa
aad
bound
add
xor
aam
jbe
jb
dec
jo
jns
loope
ss
int3
cmp
lret
cmp
int
aaa
sbb
fisttps
push
imul
xlat
pushf
scas
mov
push
cmp
inc
aas
jg
jmp
sarl
mov
and
and
xor
jge
sub
inc
dec
lahf
outsb
das
or
inc
leave
addb
inc
adc
sub
bswap
cmp
cmp
shll
jl
inc
inc
lock
cmp
dec
daa
cld
das
push
into
inc
jne
jns
outsb
jne
lret
repz
cmp
sbb
fs
cmp
pushl
loop
loopne
cli
mov
sub
sub
insl
mov
cs
pop
pop
pop
repnz
adc
je
loopne
jg
cmp
push
int
sub
push
inc
push
shl
gs
lret
cmp
jb
push
fwait
gs
pushf
outsl
es
jbe
cmp
pop
inc
repz
inc
div
lock
dec
pop
lcall
repz
ret
sub
imul
adc
inc
sbb
aaa
sub
pop
clc
loopne
and
pop
mov
in
push
cmpl
and
and
in
enter
out
cmp
ja
dec
dec
or
lret
push
idiv
clc
dec
std
aaa
in
or
fisubrs
jb
lcall
loopne
imul
fidivrl
ljmp
jbe
in
jmp
cmp
sti
add
mov
hlt
push
jg
fisttps
inc
jne
sub
sub
nop
jmp
pushl
in
and
adc
push
lds
rcll
sbb
or
or
cmp
dec
decl
hlt
mov
adc
fsubrl
or
xlat
dec
jl
lret
jmp
andb
js
xchg
loopne
xor
loopne
jmp
xor
jbe
popf
clc
pop
sub
cmp
dec
loopne
daa
in
call
nop
dec
aaa
jo
jb
in
jmp
or
sub
aas
mov
dec
lock
push
out
repnz
jbe
pop
jecxz
decl
lcall
inc
lcall
in
js
jg
leave
sbb
inc
insl
imul
out
das
inc
addr16
pop
in
dec
ret
ja
cmc
and
iret
jp
add
cmovne
mov
mov
push
push
jae
scas
or
or
push
in
mov
adcl
push
in
fstl
mov
cmp
rep
jnp
jne
mov
sti
xchg
ret
pusha
test
lds
push
scas
hlt
jnp
jno
xchg
push
nop
adc
push
push
sarl
mov
icebp
popf
jg
aam
cwtl
adc
pop
adc
sti
enter
add
cmp
out
in
mov
jmp
aaa
repz
ret
xchg
int
sbb
jecxz
sbb
adc
mov
jmp
sahf
sbb
mov
arpl
bound
push
mov
push
jmp
inc
pop
dec
insb
insl
bound
pop
push
test
shll
ss
xchg
mov
pop
jne
push
inc
mov
into
fwait
popaw
ja
imul
push
movsl
icebp
mov
outsb
jbe
xchg
cmpsb
bound
push
and
sbb
mov
fstpt
push
jns
lcall
call
pushf
sbb
sbb
out
je
cmp
insl
jle
pop
insl
fs
push
fcom
jmp
arpl
iret
ja
movb
mov
dec
inc
daa
jns
sub
mov
sar
lods
lods
in
xchg
jmp
adc
ja
cmp
insl
ffree
inc
loope
std
jg
dec
pop
rolb
in
fdiv
pop
sub
arpl
pop
dec
test
add
sub
outsl
lock
in
in
dec
ret
ja
gs
loopne
mov
add
cli
adc
or
xor
sbb
ljmp
fldcw
sub
inc
loopne
ss
jbe
add
repnz
mov
push
pop
lret
pop
or
jns
jg
mov
call
cmp
xorl
jg
int3
cli
pop
dec
dec
inc
in
int
dec
int3
jmp
jno
in
rcl
loop
leave
icebp
fs
xchg
cld
ljmp
int3
rcr
pop
sbb
and
aad
dec
inc
fidivs
sub
insb
dec
ljmp
fiadds
jecxz
and
rolb
adc
sti
or
ljmp
jmp
stc
lret
or
push
or
jle
jmp
addr16
jo
cmp
dec
push
mov
add
shll
jl
jecxz
dec
and
xchg
enter
push
stc
fcomip
dec
sbb
and
pop
pop
es
insb
shll
pop
push
jg
or
decl
mov
outsb
outsb
add
jl
call
arpl
loop
in
iret
inc
pop
out
or
dec
jle
aad
fs
leave
enter
inc
call
shl
leave
adc
dec
dec
mov
lret
push
in
adc
cmp
data16
jnp
out
and
and
jl
inc
mov
sub
ljmp
bound
jg
repz
popa
jge
fldcw
in
adc
iret
jae
add
shrb
cmp
decl
fbld
repnz
jl
pop
outsb
out
jg
fwait
push
xchg
pusha
xor
xor
cmp
aaa
mov
jbe
in
shlb
dec
js
pop
es
idiv
out
jge
sbb
xor
js
jo
add
xor
mov
in
hlt
sbb
insl
les
inc
jns
mov
jg
data16
jns
pop
je
and
dec
sti
jnp
rcr
pop
pop
aad
int3
adc
pop
mov
mov
mov
in
add
push
iret
dec
pop
pop
add
pop
outsb
aad
lcall
add
jnp
or
jl
cmp
fistpll
imul
je
and
push
inc
loopne
data16
insb
ss
push
cli
pop
xor
jg
pop
adc
nopl
dec
in
rcrl
in
sbb
icebp
xor
jns
push
dec
pop
ja
jmp
loope
lock
orl
sub
inc
ret
jg
fnstenv
push
movsb
ficoml
push
adc
mov
ljmp
popf
shl
xor
loopnew
shll
add
pop
ss
jp
pop
incl
adc
cmp
fs
cmp
insl
push
push
xor
push
rep
in
fiadds
xlat
inc
hlt
sbb
insl
xlat
pop
and
add
push
xor
push
lret
inc
notl
jl
nop
pop
ret
std
adc
or
adc
jno
jne
fistps
ds
es
pop
push
imull
outsl
insl
out
int
jne
loopne
pop
out
inc
int
inc
loop
fwait
icebp
mov
pop
fwait
push
addb
sub
lcall
sahf
cmc
add
sbb
push
dec
idivb
lock
inc
adc
adc
inc
mov
adc
dec
ja
js
roll
js
int
push
sub
jecxz
shrb
push
shr
pop
xor
adc
push
jno
cmp
pusha
repz
cld
mov
cs
dec
loope
sub
sbb
inc
adc
and
aaa
jbe
cmp
inc
decl
jo
push
popa
add
sub
add
icebp
adc
jno
jg
pushl
cmpsl
das
repz
cmp
cld
ret
push
add
mov
dec
push
jg
pop
subb
xchg
pop
mov
push
add
mov
inc
sub
add
or
ficoml
ss
adc
daa
loope
decl
hlt
pop
sub
jae
std
data16
rol
adc
add
sub
or
leave
jnp
sar
pushl
jecxz
pusha
dec
clc
popa
std
or
xchg
testb
ljmp
fucomip
pusha
pop
fcoml
fadds
mov
pop
dec
shlb
cmc
mov
cwtl
or
cmp
ficompl
out
nop
mov
pop
xchg
sahf
adc
and
add
outsb
insb
data16
jge
lret
sbbb
and
repz
inc
icebp
push
outsl
jnp
xlat
loop
ljmp
lock
cmc
jmp
inc
jne
pop
in
fsin
mov
outsb
insl
jb
push
lds
fcmovb
cmc
xchg
jle
cld
sbb
fs
out
pop
adc
lcall
pop
fsubrl
lret
or
clc
jl
push
or
push
fstpl
jg
and
addr16
std
jb
aam
repnz
outsb
clc
and
ja
and
jnp
outsl
call
ljmp
cld
mov
push
stc
dec
shll
jns
sbb
in
fidivrs
xchg
push
leave
out
ret
jno
leave
dec
imul
cmp
jo
xchg
push
das
cli
ljmp
sahf
ficoms
test
fdivr
fstpt
jnp
inc
add
pop
loopne
in
ret
pushl
inc
lock
imul
mov
jnp
push
ljmp
xchg
inc
xchg
mov
out
repnz
std
sub
push
inc
inc
pop
int
out
roll
lcall
outsb
outsl
jmp
push
pop
and
xlat
jle
enter
jg
mov
int
iret
pusha
int
in
frstor
enter
jmp
rorl
imul
aas
std
js
add
mov
adc
mov
out
clc
fdivr
ljmp
fistpll
push
lock
fisubs
ret
push
inc
in
nop
push
loope
insl
arpl
cmc
faddl
mov
inc
mov
lcall
add
cmpsl
or
in
repz
out
push
or
jmp
inc
hlt
inc
outsl
lret
or
out
ret
icebp
dec
outsl
lcall
jecxz
into
add
ljmp
and
std
pushf
not
jl
dec
jl
jg
iret
adc
fldl
bnd
add
push
and
sub
jnp
leave
repz
push
fadds
xchg
iret
stos
out
add
add
fwait
stc
mov
aad
loop
xlat
adc
lcall
dec
jns
shlb
fildl
and
pop
or
aaa
push
enter
or
lcall
jbe
imul
dec
in
push
flds
inc
jnp
push
iret
and
xchg
loopne
cli
push
cmp
testl
arpl
jp
fsub
loopne
repz
jecxz
and
push
fst
mov
aam
scas
sti
dec
jns
jle
push
insb
inc
inc
sar
inc
xor
outsl
ja
rclb
aad
fs
in
imul
jmp
xor
inc
sar
lcall
js
fldcw
jge
ret
cmc
rcl
push
jmp
ret
dec
loope
jmp
scas
mov
iret
dec
js
in
dec
jo
call
push
mov
cmp
sbb
gs
repz
loope
sbb
insb
bound
stc
mov
mov
movsb
repz
test
xor
mov
frstor
stc
push
rcl
sub
outsl
pop
dec
dec
rcl
or
inc
in
iret
push
in
push
aam
mov
daa
movsl
add
pop
test
lods
ret
and
mov
leave
aam
outsb
popa
rcrl
clc
cmp
and
sbb
add
inc
int3
or
fsubr
arpl
inc
and
std
clc
aas
loop
aam
push
jecxz
inc
stos
lock
sub
sub
filds
ficompl
jmp
ret
arpl
fldl
in
dec
jle
jns
fwait
jmp
out
sub
addr16
std
into
addr16
repz
jo
or
outsb
popw
xchg
ds
aam
popa
movsb
daa
ljmp
fldcw
push
cmp
fidivrl
ret
lcall
add
adc
bswap
push
int3
and
sbb
xor
jmp
and
sub
sub
add
or
or
es
sub
sub
das
mov
cmp
push
leave
ss
push
stc
add
adc
sub
and
xor
push
pop
fs
xor
sub
adc
ss
xor
push
decl
imull
or
fdivrl
loop
ljmp
fstl
iret
add
or
sbb
adc
sub
adc
add
adc
cs
ljmp
add
cmp
sub
or
fbld
mov
sbb
push
or
pop
sbb
imul
int
push
dec
ljmp
and
jb
mov
push
leave
xor
aaa
ljmp
add
fisttpl
jb
add
jge
dec
sub
dec
and
dec
inc
std
jg
jbe
pop
adc
push
push
or
dec
adc
sbb
aaa
inc
outsb
add
sub
imul
incl
jecxz
shll
aaa
rorl
stc
pop
int3
dec
push
sbb
cmp
add
aas
nop
loop
andb
cwtl
jb
push
mov
imul
mov
push
imul
pop
dec
push
imul
pop
jae
jnp
pop
lock
pop
pushl
in
pop
outsl
push
jb
pop
jae
jge
dec
jne
outsb
dec
jnp
in
push
imul
dec
pop
dec
dec
pop
push
push
dec
push
dec
dec
insb
dec
dec
inc
cmp
aaa
dec
sbb
outsb
pop
push
je
inc
dec
push
pop
repnz
xor
or
sub
push
lret
mov
repnz
cmp
jb
adc
add
stc
lcall
int
xchg
loop
push
pop
push
dec
push
inc
gs
pop
pop
in
bnd
push
jns
add
dec
outsb
test
add
dec
or
inc
ja
mov
cmpl
add
imul
in
imul
cmp
lret
mulb
addl
xor
leave
dec
inc
fdivl
mov
int
cmp
incl
stos
ljmp
inc
sarb
xchg
cmc
dec
rorb
jge
push
mov
rolb
or
jle
in
loope
outsl
pop
fsubr
jg
fisubrs
pushl
outsb
and
cmpsl
enter
cmc
dec
ret
arpl
dec
add
int
addr16
in
loopne
stc
imul
jg
incl
shrl
mov
fdivrl
or
sub
mov
inc
xchg
xchg
in
add
jae
adc
sub
sbb
sbb
ja
cli
sub
ds
push
loop
dec
rcll
fs
nop
int3
ret
mov
xchg
add
inc
jcxz
jns
jmp
lds
pop
ds
jmp
aad
loop
xor
jmp
lock
ret
dec
lret
lret
xor
ror
jg
lock
idiv
fbstp
push
outsl
decl
jb
loope
ror
xor
pushl
push
repnz
fs
lret
push
hlt
out
arpl
sub
inc
js
push
in
into
jecxz
out
adc
jge
fiadds
enter
lcall
insb
jbe
cmc
sub
pop
int3
pop
cli
enter
jmp
shl
cli
pop
lret
jbe
sbb
ljmp
ljmp
addr16
call
inc
ljmp
dec
dec
inc
sti
enter
add
incl
or
insb
int
cli
jmp
or
out
les
pop
push
call
icebp
dec
lret
jb
negb
ret
aad
cli
cmp
fisubl
pusha
pop
fs
dec
jne
addr16
out
pop
fstl
shl
hlt
dec
into
fwait
clc
mov
pop
dec
cmp
and
stc
insl
outsl
jg
pop
or
addr16
push
jmp
sti
xor
outsl
int
jl
loopne
dec
push
dec
xor
out
ljmp
int3
dec
pop
iret
stc
std
out
ss
gs
jge
aam
dec
jno
lds
pop
loope
xlat
push
mov
out
dec
push
inc
iret
outsb
ja
out
arpl
pop
lret
hlt
dec
ljmp
clc
iret
in
insl
jo
mov
lds
jne
pop
xlat
incl
add
idivl
and
dec
xor
popa
or
repz
dec
std
ljmp
cmp
xchg
out
cmp
leave
arpl
adc
mov
inc
or
sbb
push
into
or
je
aad
loop
aaa
ds
fwait
outsl
mov
adc
mov
rcll
mov
xchg
outsb
fldcw
iret
sub
clc
or
xor
adc
push
insl
repz
fisttps
mov
lcall
push
and
add
jne
jmp
push
add
dec
rorb
push
xor
fsubr
cs
adc
dec
jb
nop
mov
nop
ss
cli
lret
repz
mull
pop
add
in
adc
sbb
ret
push
push
fwait
inc
or
sub
adc
aam
insb
hlt
cmc
push
sbb
cli
movsl
jle
shl
cvtps2pd
lret
jo
cmpsb
aaa
dec
ss
in
pop
jl
int
dec
lods
hlt
rorl
ss
out
aaa
lahf
mov
clc
sbb
repnz
jns
fdecstp
das
jecxz
aad
mulb
fwait
jmp
fwait
es
sbb
out
lock
cs
aas
adc
cmc
ss
xlat
loope
ljmp
outsb
add
pop
rorb
cmc
jg
add
lret
cmp
push
sub
adc
dec
adc
xor
or
pop
mov
out
packssdw
out
dec
je
shlb
dec
aaa
push
data16
cld
repz
cmp
cmp
sub
mov
sbb
xchg
mov
or
xor
cmp
add
call
int
push
popa
sbb
sbb
add
rorl
pop
subb
inc
xor
sbb
mov
xchg
pop
jno
pop
adc
outsl
mov
aaa
filds
push
and
xchg
and
movsl
ds
lock
pop
aaa
add
cs
stc
adc
ss
arpl
pop
mov
mov
sarl
out
movsb
inc
push
push
enter
mov
and
out
push
test
lods
pop
jb
jne
add
sbb
notl
xor
insb
inc
std
inc
dec
outsb
push
pop
je
push
dec
xchg
int
jecxz
aas
jmp
mov
cld
aaa
or
clc
pop
xchg
jno
aam
cmpb
nop
out
push
test
repz
mov
sub
loop
jecxz
pop
or
int
shrl
mov
push
lahf
out
mov
or
fisubs
pmovmskb
nop
push
pop
push
mov
inc
xlat
out
or
lahf
mov
sbb
xor
push
sub
cmpsl
xchg
cmp
repz
fsubrl
in
pop
mov
cs
repnz
jg
pcmpgtw
aas
dec
shlb
push
xchg
or
aas
and
pop
ret
incl
cmpsb
dec
pop
push
das
mov
dec
fwait
dec
mov
or
xchg
adc
ja
pop
jle
icebp
or
repz
adc
push
ja
loopne
inc
dec
or
ss
add
cmp
inc
pop
mov
or
push
pop
add
out
jnp
add
pop
in
and
and
insb
adc
inc
dec
incl
push
aaa
xchg
cmp
cmp
mov
dec
push
jmp
dec
bts
insb
adc
ss
insl
ret
outsb
add
add
jmp
arpl
icebp
fldcw
iret
loop
es
ficoml
insl
mov
push
decb
outsb
sti
insl
and
xor
sbb
lret
repnz
jp
pop
push
lods
outsb
sub
xor
out
cli
ja
cmp
push
xor
jp
lea
ljmp
dec
adc
mov
sub
mov
sbb
js
or
filds
fsubr
popf
je
cltd
pushf
js
xchg
dec
popf
jge
cwtl
pushf
push
add
ljmp
popf
bound
mov
add
push
pop
and
scas
pop
sub
test
cmp
lahf
pop
xor
pop
outsl
es
push
sub
dec
or
push
jne
lock
decl
addr16
add
push
jns
ja
dec
xor
push
fwait
dec
push
ja
icebp
pop
jae
xor
sahf
les
and
dec
and
and
dec
adc
in
dec
enter
push
or
rorb
sub
call
stos
xor
pop
adc
mov
push
sub
cmp
les
arpl
pop
add
arpl
pop
and
or
xchg
sub
movsl
push
push
call
dec
or
mov
cmc
or
movl
out
lcall
add
cld
adc
dec
sub
incl
jecxz
cmp
test
push
out
cwtl
nop
bound
push
test
xchg
stos
icebp
mov
adc
add
es
mov
cs
lods
push
add
mov
sar
out
int
pop
push
sbb
pop
sbb
sbb
insl
push
into
jg
lahf
pop
lds
jge
push
add
dec
adc
jno
jle
adc
add
gs
ss
jg
fwait
sbb
pop
imul
mov
cmpsl
fldcw
in
fmull
lods
je
add
push
jns
sbb
dec
ja
sahf
or
into
sbb
decl
sbb
add
add
or
je
or
pop
cs
das
sub
cli
lcall
ret
lret
ror
stos
add
inc
out
dec
stc
in
jnp
hlt
adc
jnp
push
out
rcll
movsb
ljmp
xor
sub
jg
ret
xor
add
gs
cmpsb
popa
dec
inc
dec
fisttps
or
sbb
pop
push
xor
adc
jge
adc
cmp
dec
dec
cmp
jmp
sar
inc
adc
and
arpl
enter
jp
add
mov
fldt
fisttpll
std
lret
int
movsb
push
dec
loopne
fists
jnp
iret
and
push
into
xor
in
in
dec
fmuls
pushl
roll
gs
fs
inc
out
hlt
add
jne
adc
outsb
xchg
shl
adc
pop
ljmp
js
rclb
fisttps
fcomip
int
sub
cwtl
jbe
clc
pop
out
push
ret
iret
pop
dec
or
mov
lret
jecxz
outsl
sbb
cmp
fldenv
test
loope,pn
jle
jno
shl
push
hlt
mov
push
cmp
into
incb
pop
push
fsubrp
jmp
mov
iret
js
pop
repnz
lret
jmp
pop
push
cmp
adc
sub
push
mov
idivl
jne
ja
ljmp
repz
lcall
lock
addr16
pushf
fs
xlat
inc
stc
push
jp
enter
dec
repnz
sar
jb
decb
loop
dec
cs
pop
pusha
arpl
testb
gs
sbb
je
sub
xor
or
adc
jge
rorb
fildl
ljmp
push
dec
mov
insl
inc
imul
out
push
jg
jne
cmc
into
int
pusha
imul
adc
xlat
loope
or
sub
lock
ret
xchg
pop
clc
sbb
add
push
push
xor
jmp
pusha
jbe
imul
enter
aad
and
inc
mov
sbb
or
lods
jmp
add
mov
jno
in
ss
jno
ss
xchg
dec
cmp
ret
push
loopne
push
aas
int
fxtract
fsubrl
sub
jns
loop
sub
ja
push
fwait
jo
out
das
cli
test
lds
sub
jb
sbb
in
inc
inc
aam
pushl
aad
in
push
push
xor
cli
push
inc
mov
clc
or
xor
fisubl
push
outsl
clc
das
cmpsb
imul
arpl
push
pop
pop
sbbl
bound
sbb
dec
push
xchg
sar
addr16
fs
push
dec
mov
bnd
sub
ljmp
jo
pop
adcl
lods
and
jge
clc
scas
adc
sub
cmp
dec
jnp
ljmp
pop
mov
rclb
movsb
sub
into
out
pop
add
or
inc
push
xchg
jg
hlt
sbb
pop
nop
or
dec
insb
push
pop
in
mov
ljmp
dec
rcrb
inc
pop
pusha
int
data16
xor
jno
icebp
sbb
aad
jo
or
gs
fcompl
es
mov
push
mov
push
ret
push
add
incl
or
push
add
jo
pusha
push
shrl
inc
xchg
outsl
inc
push
xor
jbe
jmp
push
fdivrs
xlat
dec
push
shrb
das
out
xchg
in
bnd
in
repz
enter
fcomip
push
cmp
test
test
push
insb
push
pop
pop
or
out
adc
jnp
into
sbb
cs
push
lock
iret
insb
pop
leave
aaa
or
in
push
outsb
ljmp
push
ret
enter
or
push
mov
je
aam
xor
sbb
nop
lret
lock
jmp
push
pop
or
outsl
xor
jbe
iret
pop
sub
add
stos
je
push
aaa
jg
inc
dec
push
sbb
pop
pop
lods
out
loopne
lds
add
into
leave
or
incl
and
ja
push
pop
addr16
or
gs
add
stos
add
dec
inc
or
lcall
inc
scas
les
lret
stos
enter
lcall
push
lcall
jle
aam
cld
jne
xor
movsl
cld
insl
enter
lock
in
fs
bound
subb
push
decl
jecxz
cmp
sub
repnz
jge
pop
jns
cli
and
test
decl
cmp
sbb
jnp
add
pop
stos
gs
notl
push
repnz
adc
loope
daa
lock
pop
inc
inc
std
aaa
fmuls
sub
call
dec
aam
pop
cmp
fs
jnp
jae
pop
imul
push
pop
aaa
enter
xor
dec
jns
sub
ds
cld
mov
inc
push
or
in
pop
jns
cmp
mov
xchg
adc
sub
add
je
fmulp
or
cmp
ret
ljmp
xor
dec
rorl
loopne
pop
arpl
insl
mov
pop
ja
leave
adc
sbb
int
bound
decl
mov
sub
gs
iret
stos
arpl
jge
lds
adc
add
jmp
in
test
incl
pop
rclb
in
js
enter
popa
push
in
add
cld
cmp
dec
or
int
in
fisubrs
loopne
push
pop
jmp
adc
add
hlt
jg
push
loope
es
pop
ret
jns
icebp
inc
sarl
and
jecxz
pop
ss
cld
or
insb
frstor
dec
xor
add
mov
jle
outsb
lret
or
jae
jl
push
iret
bound
jns
xlat
push
sub
jns
pop
aaa
or
sub
out
insb
decl
out
mov
pop
push
sub
pop
into
jbe,pt
adc
loope
cmp
inc
lcall
addr16
shll
jmp
add
xchg
call
imul
push
push
aad
xor
hlt
pop
fucom
pop
adc
adc
sar
ljmp
ds
rcl
cli
int
adc
push
jbe
repnz
sbb
jg
mov
jae
pushl
add
push
xor
xor
and
js
arpl
cmp
jne
jg
cmp
add
dec
cld
inc
mov
or
cs
lcall
enter
add
pop
stos
pop
enter
adc
cmp
fisubrs
mov
push
sub
pop
mov
or
lahf
loop
push
js
cmp
jg
push
ficoml
push
sub
jle
lds
or
incl
in
das
daa
sidtl
and
sbb
mov
sub
adc
mov
lret
sbb
pop
push
jns
xor
and
inc
pop
mov
ds
data16
dec
add
shlb
mov
add
jle
outsl
insb
arpl
mov
inc
rcl
sbb
outsl
xor
push
insb
sub
out
clc
sbb
loop
pop
cmc
minps
in
pop
pop
pop
lock
push
xchg
fdiv
shll
inc
mov
fbld
femms
pushl
lods
negl
jecxz
bnd
push
out
dec
inc
pop
pop
arpl
ret
push
pop
cmp
roll
add
ljmp
out
stc
adc
sub
push
xor
or
inc
test
inc
ds
push
inc
pop
push
or
mov
pop
jne
leave
jmp
add
pop
repz
outsl
fdiv
fbld
jl
jmp
or
push
sbb
add
pop
lods
sar
ljmp
ret
jnp
aam
fs
push
lret
push
jp
out
cmp
or
jno
fimuls
xchg
dec
dec
inc
fiadds
pop
xor
pop
js
bnd
adc
jg
inc
jmp
roll
imul
pop
les
sub
fwait
daa
out
ljmp
shlb
adc
or
rcrb
rol
ljmp
pop
popw
mov
xor
dec
pop
clc
out
push
lds
push
adc
fwait
push
shr
sbb
arpl
daa
xlat
add
out
mov
jl
push
or
push
or
loope
es
jno
push
movsb
dec
xor
jb
push
xor
push
pop
add
test
gs
in
out
js
sbb
xor
inc
or
mov
cmc
js
outsb
daa
sbb
rolb
pop
mov
shrl
push
arpl
mull
cs
or
leave
pop
lock
aam
or
fidivrs
and
push
add
call
fsubrl
jns
inc
push
aam
mov
lret
icebp
or
push
cmpsb
add
pop
pop
aaa
pop
lods
in
out
lds
pop
push
fldcw
jg
call
adc
test
and
shll
dec
adc
push
popa
or
inc
dec
les
push
inc
iret
shlb
enter
popa
data16
add
push
jne
fwait
leave
lock
xchg
ror
sub
pusha
cli
leave
jbe
incb
pop
mov
aas
pop
inc
inc
push
rcrb
push
lret
push
xchg
push
jmp
xor
frstor
push
in
push
adc
je
cmc
or
push
adc
in
popa
inc
mov
jbe
in
insb
push
push
cmc
popa
cmp
pop
jne
inc
fisttps
pop
aam
cld
fsts
add
lcall
push
add
shrl
lea
out
cld
adc
jnp
ja
das
sbb
ljmp
inc
xchg
sbb
inc
inc
mov
leave
push
in
jp
pop
popf
ret
pop
std
pop
or
xchg
pop
inc
aam
dec
js
push
ljmp
ljmp
xor
rcrb
out
push
cmp
pop
xor
mov
test
aas
enter
xor
adc
in
cmp
call
sub
cmp
cli
jp
xor
or
imul
js,pn
pop
iret
adc
icebp
in
dec
pop
push
xor
nop
fsin
push
sub
cli
lcall
jb
imull
pusha
fadds
call
or
aam
mov
in
sbb
or
jge
jge
xor
jno
aaa
cld
inc
out
inc
pop
sbb
ja
loopne
xor
add
lock
orb
outsb
out
ret
movb
push
mov
out
add
out
jbe
sub
cli
inc
cmp
scas
pop
add
sbb
or
dec
mov
inc
lahf
pushl
loope
neg
mov
or
mov
xor
push
je
nop
aad
sbb
daa
lcall
cmp
jl
cmp
adc
pop
jnp
fstps
add
and
xor
ret
dec
dec
sub
ja
incl
sbb
add
outsb
shlb
add
sub
outsl
push
jge
cmp
or
call
dec
pop
or
in
pop
jcxz
dec
shlb
and
pop
inc
arpl
insl
shll
rol
push
lds
sub
push
into
loopne
jbe
idiv
int3
idiv
jmp
aaa
jb
add
jbe
add
sbb
mov
cwtl
pop
loopne
outsl
inc
pop
rolb
add
dec
pop
gs
ljmp
incb
shrb
int
shl
mov
pop
shlb
inc
out
dec
ljmp
fcompl
insb
outsl
icebp
dec
sub
fdivrl
push
testb
outsl
and
ss
cmp
decl
sbb
pop
je
ret
xchg
or
notl
or
jle
stc
call
jl
cmp
fcmovne
dec
and
repz
call
sbb
push
xor
xor
notl
fisttps
lret
dec
push
and
dec
xlat
je
lret
push
pop
cmp
loope
aad
dec
push
imul
push
lock
jmp
jle
call
push
adc
push
push
bound
pop
in
lcall
popa
sub
dec
or
or
sbb
pmuludq
rorl
repnz
sub
jle
outsb
jne
fnstsw
push
mov
inc
jb
sub
clc
push
pushl
dec
inc
push
ds
sub
mov
cmp
jns
mov
out
push
ja
cmp
and
scas
cld
dec
pop
lcall
pushl
add
inc
in
dec
enter
insb
addb
dec
push
sub
or
ljmp
inc
push
pop
outsl
mov
and
pusha
xor
je
loopne
push
pop
fnstenv
and
lcall
xor
fidivs
es
and
sysexit
icebp
fsubrs
adc
inc
inc
ljmp
or
pop
repnz
add
push
inc
fmulp
pop
push
dec
and
cmp
adc
jle
out
push
jmp
push
ljmp
jmp
cld
push
or
push
setb
sub
imul
mov
sahf
jo
jno
xor
or
and
push
inc
inc
ja
pop
add
jg
push
adc
jnp
or
or
call
lret
sub
ja
add
dec
mov
dec
lret
mov
add
jl
cmp
mov
pop
push
dec
ss
or
inc
jl
fisttps
ss
decl
inc
gs
jp
jge
and
mov
add
xor
inc
push
mov
sbb
ds
ljmp
stos
enter
pop
shrl
jge
incl
push
mull
cs
inc
push
and
xor
dec
ret
or
shll
cmp
ljmp
or
push
insb
insl
jecxz
add
or
fsubrs
stos
movsb
push
jl
dec
and
into
daa
push
xor
arpl
inc
call
loop
js
or
jo
fildll
cld
push
pop
push
cmc
jl
xchg
loope
push
out
xor
ljmp
add
fisubrl
push
repnz
add
pop
call
cs
call
imul
or
std
out
orb
adc
js
pop
das
push
adc
sub
ja
add
std
push
add
lcall
adc
xor
sbb
xlat
push
in
push
adc
sub
jl
pop
xor
incl
popa
into
ja
inc
push
and
push
sbb
pop
dec
iret
dec
cmp
cs
jg
push
dec
push
push
fisubrl
daa
sbb
sub
dec
clc
jmp
pop
dec
xor
dec
sbb
inc
sub
outsb
in
jg
pushl
or
iret
inc
icebp
dec
decb
pop
jns
rcrb
xor
push
fdivl
cld
decl
lret
adc
outsb
bnd
arpl
adc
pop
dec
pop
inc
fwait
pushl
add
jge
inc
push
or
add
xor
pop
sbb
push
in
jge
scas
cmpsb
cmc
cmp
out
sbb
adc
xor
xchg
pop
pop
jbe
cmp
call
sub
and
xlat
rcrb
out
outsb
adc
and
jmp
movsb
cmp
adc
adc
icebp
add
push
pop
repnz
aaa
add
testl
jae
add
push
les
and
xor
add
dec
jl
pop
mov
je
add
popa
das
adc
clc
dec
gs
and
dec
inc
inc
pusha
sub
data16
dec
outsl
roll
adc
jnp
sub
loop
adc
ljmp
mov
enter
push
jl
or
outsl
add
fimuls
and
push
xor
pop
in
js
call
push
add
jg
push
bnd
and
inc
push
iret
push
xor
testl
xor
push
dec
cli
call
cld
sub
inc
ret
dec
test
scas
data16
lret
push
shlb
and
ljmp
mov
daa
jo
adc
arpl
in
inc
dec
fcom
dec
roll
je
sub
enter
roll
adc
jo
push
jne
adc
sub
inc
fists
sbb
mov
scas
int
push
or
push
dec
push
rcl
jp
push
jmp
in
dec
ret
sub
push
leave
push
add
or
lock
add
or
adc
fistps
gs
lock
sub
scas
inc
and
out
xor
jo
out
jge
jno
dec
push
pop
loopne
lcall
jg
outsl
or
out
loop
pop
gs
std
or
or
fbstp
or
inc
and
notb
je
sub
and
adc
inc
insl
in
jns
adc
sub
rol
pop
fs
loopne
clc
dec
pop
lcall
aam
rcr
or
arpl
les
clc
jo
loope
jae
ja
add
ja
jmp
rcrl
out
add
jne
repz
and
or
inc
je
ret
shr
add
cmp
adc
jmp
dec
in
out
insb
je
cld
pop
add
pop
pop
sub
jle
repz
adcb
mov
jmp
aam
jno
inc
inc
int3
sbb
jmp
and
loop
pop
xor
call
fcoml
js
inc
lds
or
pop
jae
xor
das
and
and
add
aaa
dec
sar
jl
bnd
add
pop
int
dec
push
dec
inc
cld
das
sar
sub
cmpsl
ret
dec
test
pop
push
add
inc
movsl
shll
push
aaa
add
xor
mov
ljmp
sbb
jo
clc
xor
loopne
xlat
scas
pop
pop
xlat
or
cli
clc
pcmpeqb
dec
and
and
jg
pop
add
insl
out
mov
je
pop
movl
or
les
cmp
inc
decb
sbb
cmp
jl
pop
sub
add
pop
into
ja
pushl
dec
out
jb
xchg
loopne
add
cli
pop
ret
inc
push
jmp
dec
ficomps
insb
repz
add
testl
cs
cli
lcall
sub
xor
outsb
xlat
xor
inc
out
shrl
sub
dec
jmp
adc
and
pop
enter
add
dec
enter
xor
mov
mov
outsb
add
sub
pop
dec
cmc
call
shrb
or
pop
mov
jl
out
clc
das
mov
dec
and
std
jo
hlt
fsubrs
icebp
push
xchg
scas
aad
shl
lock
or
incl
xchg
enter
push
ljmp
adc
push
hlt
cmp
in
dec
in
inc
xor
pop
or
pop
loop
inc
sti
or
push
aam
jg
rcll
jl
lock
jg
fadds
and
adc
cmp
pop
add
fstl
lods
jne
repnz
out
pop
inc
jge
inc
pop
incb
addr16
and
outsl
insl
pop
shll
push
push
out
movsb
icebp
and
cmp
pop
xor
mov
ljmp
xor
xor
inc
jp
sysexit
sbb
push
testl
jl
shrb
dec
aaa
add
sbb
and
popa
dec
decl
sub
decl
add
int
fsubs
iret
idivl
adc
rcl
push
pcmpgtb
repz
jae
or
arpl
lcall
loopne
pop
int
fs
push
lret
xor
pop
ror
jl
push
and
dec
fisttps
aam
dec
and
inc
insb
lret
outsl
sarl
push
mov
mov
fs
aaa
dec
dec
pop
sbb
and
das
add
pop
ficompl
popa
fdivrp
mov
push
jbe
xor
and
and
push
inc
inc
icebp
sbb
arpl
inc
push
lcall
decl
jle
jp
jl
pop
pop
push
gs
cmp
dec
pop
and
fs
adc
push
in
sarb
imul
or
jg
sub
jecxz
dec
inc
dec
gs
insb
adc
ret
jmp
divps
jp
cs
cmpsb
pop
xor
jno
inc
push
ret
push
int3
insb
mov
add
jg
xor
loop
gs
pop
gs
inc
js
add
ljmp
push
pop
jp
jno
dec
insb
push
imul
or
imul
dec
xor
jnp
sarl
fs
call
loope
mov
jno
sbb
and
seto
fstpl
push
adc
jo
lcall
jp
fs
aad
cld
aaa
cmp
mov
rdpmc
rcll
addr16
scas
fidivl
add
mov
daa
std
pop
js
inc
sub
jo
ror
outsb
or
lds
sub
adc
fisubrl
xor
sarl
enter
aas
sub
push
out
mov
rcrl
pop
sbb
nop
cld
push
jmp
dec
dec
sbb
inc
pusha
in
in
lret
adc
sti
gs
xchg
pushl
rolb
rcr
out
loop
std
in
inc
push
ss
hlt
incl
notl
rcrl
int3
repnz
rcrb
loopne
out
adc
xor
nop
loope,pn
aaa
ret
add
les
sbb
add
sarl
aam
out
cmp
enter
imul
sbb
add
lret
addl
sub
ljmp
loope
and
push
leave
pop
add
addl
shlb
mov
insl
enter
mov
je
ds
arpl
push
fld
scas
dec
dec
pop
std
push
outsb
test
jnp
rorl
adc
hlt
les
sub
mov
inc
std
push
pop
test
add
push
xchg
repnz
decl
je
xchg
pop
xchg
jecxz
and
repnz
idiv
inc
insb
jl
sub
pop
repz
lock
jmp
arpl
jmp
int3
dec
inc
dec
pop
cmc
add
imulb
pushl
jge
mov
sahf
ja
mov
push
loop
inc
ja
cmp
insb
stc
shll
sbb
in
inc
pop
fcom
or
sahf
fldl
fbld
std
imul
push
pop
scas
jge
fnstenv
popa
sbb
pop
repnz
les
jl
jg
pusha
sbb
mov
imul
cld
pushl
in
mov
loop
aad
js
fstpt
arpl
dec
iret
push
testb
push
lcall
jnp
js
dec
out
push
jle
cmp
shl
push
cli
outsl
mov
clc
sahf
xchg
xchg
in
xor
stos
mov
and
pop
data16
jle
les
pop
jns
jae
push
test
int
aad
outsb
sbb
aas
rclb
sti
and
sbb
pop
adc
cmp
addl
ret
and
mov
stos
hlt
push
gs
je
fldenv
call
pop
int3
push
arpl
iret
or
dec
into
das
les
pop
mov
adc
roll
in
add
jno
lock
jle
push
inc
test
push
sub
or
je
aad
repz
sahf
into
fstps
jge
and
int
fistpll
repnz
jne
shlb
stos
roll
jge
aaa
fistpll
notl
push
out
add
scas
lock
pusha
icebp
lods
enter
int
mov
in
add
ret
dec
xchg
int
dec
fwait
outsl
les
clc
ja
or
pop
cmc
sub
pusha
outsl
mov
mov
jae
push
test
pop
loope
sub
pop
stc
adc
adc
aas
sbb
fists
dec
pop
loop
push
adc
xchg
or
ss
fwait
mov
mov
aas
repnz
add
sbb
mov
mov
sbb
fnstsw
jns
sub
and
mov
add
mov
popa
roll
ficoml
xor
pop
cmp
mov
push
push
gs
sub
repnz
mov
adc
daa
imul
stc
inc
sbb
es
scas
add
arpl
pop
insb
xlat
and
push
ds
xchg
add
mov
mov
pop
insl
cmp
pop
enter
mov
cltd
das
adc
sbb
xchg
xchg
adc
test
sbb
es
adc
cmp
iret
sbb
iret
das
xchg
scas
push
add
add
jne
inc
ljmp
pop
out
outsl
nop
cltd
je
add
adc
insl
dec
xchg
nop
shll
in
pop
sub
arpl
xor
pop
lahf
pop
cmp
lock
cwtl
add
mov
push
mov
or
lcall
shll
fstps
in
ja
movsl
lahf
xor
shll
inc
jge
mov
sbb
mov
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
ds
mov
sahf
sahf
out
out
jb
negl
dec
pop
push
js
sub
lcall
mov
cmpsb
imul
adc
nop
xchg
mov
scas
jle
jle
stos
pop
aas
cltd
jg
std
test
sbb
inc
mov
dec
or
lahf
not
shrl
mov
repz
stos
xchg
insl
test
mov
into
data16
stos
mov
cmp
pusha
lahf
in
dec
add
xchg
cmp
xor
lods
lds
pushl
push
mov
rorb
js
cmpsl
fwait
std
out
fs
dec
in
xchg
cmp
cli
mov
sub
mov
mov
push
xlat
inc
lds
jg
pop
push
int3
aam
andl
xchg
sbb
lcall
xorl
mov
mov
mov
cli
jmp
call
testl
enter
mov
cs
mov
mov
and
push
cwtl
dec
sub
iret
xor
in
cmp
jne
and
push
test
outsb
adc
inc
mov
mov
imul
mov
cs
xor
sub
es
call
cmpsl
cmp
pusha
push
sbb
loop
dec
jg
adc
and
test
mov
inc
jnp
sbb
loopne
loope
lods
std
push
cld
ljmp
mov
push
data16
and
ret
scas
orb
jg
add
das
adc
pop
sahf
sub
ds
mov
ja
jmp
sbb
lret
mov
fldcw
jnp
push
and
lods
loop
imul
inc
adc
imul
in
loopw
or
push
ljmp
add
add
adc
push
enter
std
adcl
sub
add
jecxz
lret
enter
mov
int3
xor
lcall
lods
dec
xchg
add
xor
mov
fimuls
xchg
push
and
jecxz
cmp
push
jbe
or
scas
popf
adc
add
inc
popa
jp
push
rcrb
cltd
mov
sub
loop
cmc
inc
cmpb
xor
pop
iret
mov
out
scas
in
pop
jne
inc
out
shlb
add
mov
and
in
jne
sbb
cltd
lahf
xchg
lcall
add
jp
addr16
jbe
inc
fs
adc
jmp
push
mov
out
mov
icebp
in
incl
cli
insl
test
cmp
decl
stos
or
pop
aam
outsl
inc
sub
jg
bound
popa
add
insl
inc
push
int
gs
leave
mov
aaa
imul
aad
mov
popa
dec
notb
push
repnz
enter
xor
int
call
xchg
lea
jb
imul
bound
sti
inc
dec
jo
ljmp
imul
mov
push
jns
icebp
jl
pop
in
dec
push
pop
lock
xchg
bound
dec
mov
jg
inc
lcall
arpl
ja
or
pop
pushl
jbe
adc
dec
js
les
mov
pop
cmp
std
repnz
and
mov
outsb
sub
fnstcw
dec
mov
aas
sahf
xchg
mov
pop
adc
push
push
loope
push
push
sbb
or
adcb
lcall
add
add
push
sub
sbb
add
or
and
adc
and
sbb
and
adc
inc
inc
xchg
inc
daa
incl
cmp
aas
xor
add
push
push
jg
ret
inc
add
cmp
sbb
or
add
sub
bound
call
sbb
sbb
sahf
movmskps
filds
xor
dec
pop
inc
femms
sub
pop
stc
decl
sub
xor
adc
adc
or
add
cmp
adc
xor
adc
xor
cmp
sub
stc
incl
or
xor
add
insl
push
cmp
and
or
sub
or
xchg
aam
add
push
add
inc
jns
adc
xor
sub
lret
std
add
pop
cmp
enter
pop
sub
or
or
int3
cmp
jne
dec
adc
and
and
add
add
jg
adc
adc
cmp
cmp
and
add
sbb
jle
loope
push
adc
xor
enter
iret
rcl
in
cwtl
xchg
rorb
and
pop
push
pop
loope
pusha
push
out
jp
pop
divb
xor
dec
movl
pushl
inc
fwait
scas
lret
bound
push
adc
cld
pop
jb
sub
popa
inc
inc
jmp
pusha
outsb
idivl
fbstp
xchg
std
pushf
dec
mov
or
add
sahf
aas
fcos
pushl
xorb
pop
lcall
mov
sub
pop
mov
and
inc
mov
xchg
arpl
dec
sahf
cmp
mov
add
push
jge
mov
ljmp
cmp
fisttpll
test
xlat
mov
and
push
mov
jns
mov
push
test
lcall
je
sub
imul
lcall
adc
pop
push
test
aas
jg
xsaves
dec
stos
loopne
je
loope
mov
aas
add
sahf
dec
push
sub
pop
dec
mov
dec
es
je
cmpsl
jbe
jmp
lods
dec
sub
addr16
mov
jns
aam
mov
inc
pop
insl
std
ljmp
jbe
or
jp
out
das
popa
mov
dec
inc
mov
xchg
decb
push
and
aam
jne
jno
sub
arpl
push
jnp
jmp
sarb
push
push
stc
push
jl
popf
pop
pop
popa
cmp
or
cld
mov
arpl
es
pop
pop
negl
cmp
inc
push
enter
aam
push
scas
inc
push
jecxz
incl
rcrb
push
jns
inc
jns
sbb
sub
gs
jne
mov
icebp
stc
inc
dec
add
insl
cli
dec
push
inc
push
ljmp
imull
jns
pop
dec
incl
data16
outsl
ss
pop
incl
dec
inc
cmc
popa
pop
inc
sub
cmp
inc
pop
lcall
or
in
js
andb
movsb
jge
push
call
pushw
stc
pop
inc
inc
test
push
jb
dec
je
clc
call
outsl
imul
and
mov
dec
inc
add
popa
push
gs
icebp
jbe
push
jnp
repz
cmp
test
push
dec
inc
shl
nopl
sbb
mov
ljmp
inc
jmp
mov
pop
mov
adc
filds
clc
lret
dec
and
push
pop
adc
jae
push
jg
and
in
dec
das
jle
jae
int
adc
ljmp
aad
sbb
mov
adc
mov
push
and
xor
sub
sbb
lcall
and
insl
adc
fwait
push
sub
mov
rcrl
inc
fiadds
and
call
adc
jmp
push
daa
bound
sub
or
pop
cmc
jmp
outsl
add
xor
add
repz
stc
push
sbb
adc
dec
out
cli
ds
cmpsl
xor
mov
push
pop
push
or
push
pop
sub
or
jne
mov
lcall
jg
sbb
bound
sbb
cltd
sbb
fistps
xchg
fs
enter
into
ljmp
clc
jg
pop
xabort
fcmovbe
pop
stc
pop
dec
in
fildll
dec
inc
jnp
ret
inc
std
push
pop
fisttps
pop
jmp
call
decb
inc
fstpt
call
shlb
ret
in
fstpl
sarb
pushf
dec
out
test
sub
ret
pop
xlat
cmpsb
push
rcll
decl
out
sbb
loope
int
adc
out
stc
dec
test
cld
dec
dec
pop
fldt
into
mov
jg
or
fsubl
repz
hlt
push
or
aam
jo
inc
xchg
ror
out
inc
sbb
dec
jecxz
lea
push
aas
fcompp
ror
fmuls
in
xor
loop
std
jle
dec
in
sub
jmp
lcall
pop
into
loop
add
jne
ffree
jae
inc
jnp
adc
dec
add
shll
lcall
jb
aas
pop
adc
cmp
push
push
adc
xor
sbb
mov
push
movsl
or
orb
push
call
xor
mov
xchg
lock
cmp
daa
in
cld
and
add
add
and
push
pop
std
xor
insl
adc
jecxz
aad
clc
ljmp
shrb
int3
in
dec
or
push
jg
jl
xor
jmp
sub
rclb
sar
jmp
jb
imul
pop
les
aam
add
aad
push
cld
call
cmp
ljmp
xchg
mov
lods
cwtl
xlat
pop
scas
sub
adc
sbb
lcall
mov
adc
std
mov
xchg
insb
popl
movsb
xor
mov
add
adcb
mulb
mov
nop
push
fwait
adc
popf
scas
jle
fidivrs
das
add
mov
test
jne
mov
xchg
dec
mov
and
fidivrs
cmc
push
add
lret
push
inc
enter
mov
sbb
pop
dec
push
dec
mov
shlb
inc
adc
mov
mov
push
xchg
pop
outsl
cmp
fbld
ss
test
xchg
pop
xor
pop
pusha
mov
sbb
dec
xorb
jns
ret
decl
arpl
shl
push
add
add
jns
fs
scas
add
xlat
popf
mov
add
pushl
or
jle
ret
bound
sbb
into
into
inc
aas
cli
jns
pop
lahf
mov
shlb
ss
xor
sub
push
or
xchg
inc
xor
dec
movsb
pop
into
dec
jnp
call
imul
or
or
call
outsl
subb
bound
hlt
cmp
stos
imul
pop
lret
dec
push
gs
sbb
sbb
mov
sub
push
scas
jp
stc
xor
sbb
sub
ljmp
call
out
add
cmp
jle
pop
xchg
lock
pop
mov
ljmp
dec
clc
xchg
cmp
data16
jae
pop
ret
ljmp
jg
mov
jns
inc
shlb
js
decl
jge
popf
dec
sbb
mov
sbb
out
dec
jg
test
lock
dec
subb
jno
int3
push
and
cs
xchg
jg
incl
or
and
pop
mov
gs
hlt
add
fs
ds
inc
incl
sub
xorl
stos
xchg
mov
jge
into
push
mov
lcall
adc
xor
adc
insl
mov
vmwrite
test
lret
out
jp
ljmp
fldt
pusha
cmp
iret
sbb
insb
ret
pop
out
out
das
mov
and
xchg
mov
repnz
sub
dec
addl
mov
jle
jae
lcall
cli
hlt
push
mov
aas
imul
mov
push
inc
mov
xorb
pop
enter
jle
push
stos
mov
pushl
ret
pop
and
outsb
fistps
js
inc
adcb
pop
shlb
ljmp
add
push
jmp
or
in
rorb
testb
push
lcall
sbb
decl
jmp
mov
shlb
lea
addr16
rcrl
das
js
sbb
jbe
xor
loop
gs
or
jae
es
addr16
repnz
sub
pop
mov
jg
dec
xchg
scas
push
push
push
daa
std
scas
jno
mov
lcall
mov
jp
outsb
pop
loopne
rorb
cltd
jno
pop
clc
sbb
bound
sar
outsb
pop
shrb
push
xlat
repz
aaa
pop
jmp
xor
aad
xor
push
outsb
stc
orl
mov
push
adcl
mov
std
or
sbb
sbb
lds
mov
and
outsl
or
mov
sahf
imul
inc
ficoms
je
jb
mov
add
mov
mov
outsb
mov
jb
adc
xchg
jl
fidivl
pop
mov
lods
mov
push
pop
aas
mov
adc
outsl
mov
push
outsl
jae
mov
dec
inc
lods
fcos
fbld
ljmp
fs
xor
rclb
or
sub
cld
pushl
cmp
sub
jno
pop
or
sub
jne
lds
pop
call
pop
jl
lea
cwtl
cltd
inc
stos
xchg
arpl
xchg
das
dec
jle
fildll
jo
je
scas
sbb
sbb
add
mov
pushl
scas
adc
insl
cmpl
xor
hlt
popa
and
pusha
inc
loopne
push
cmpsb
adc
add
cmp
ss
jne
punpcklwd
dec
cld
pop
hlt
popa
inc
sbb
ljmp
add
lods
mov
lgs
sti
push
sub
ffreep
jg
adc
mov
orl
pop
push
cmc
sbbb
out
adc
fisttps
pop
pop
mov
push
push
cmpsl
add
lcall
call
bound
pop
js
mov
xor
push
sar
dec
les
xchg
loopne
push
jecxz
sahf
int
jmp
call
push
and
dec
add
pop
sbb
push
push
hlt
cmp
popa
aad
mov
sub
lcall
sub
cmc
cli
jnp
jbe
cmp
mov
div
and
cli
jmp
int3
pop
pop
outsl
xchg
cmp
dec
cmp
jle
mov
pusha
cmp
ljmp
fildl
shlb
out
mov
sub
adc
push
outsb
andl
das
sar
mov
and
pop
lock
pushf
or
fisttps
add
dec
addr16
lret
xor
mov
std
sub
out
add
cmp
scas
adc
or
dec
ds
loope
repnz
pop
hlt
flds
mov
mov
sub
icebp
fdiv
out
rorl
scas
sti
cmpsb
je
inc
test
push
mov
push
mov
mov
dec
add
gs
aam
fistps
insl
jge
lcall
jne
test
scas
mov
rol
mov
add
jno
ljmp
movsl
sbb
hlt
mov
pop
data16
add
rorb
sub
or
ficoms
aam
sub
test
ljmp
insl
mov
adc
push
jg
pushl
fwait
movsb
in
loopne
dec
adc
sbb
sbb
xchg
sub
xlat
faddl
sub
frstor
push
or
das
xor
scas
movsb
jnp
out
scas
jae
subl
call
jb
arpl
fbstp
mov
xchg
push
or
mov
ret
jg
test
ds
cmpsb
fmuls
or
hlt
insb
inc
add
push
xchg
pushl
jecxz
lods
jp
and
scas
or
dec
adc
add
pop
sbb
and
and
inc
or
call
loopne
lds
mov
inc
jbe
das
xor
or
xor
mov
call
push
sbb
push
cwtl
cmpsl
sbb
push
xchg
add
mov
pop
push
and
dec
jns
xor
pop
cmp
ljmp
xor
inc
mulb
dec
lods
add
lret
lahf
mov
xor
inc
jbe
mov
add
push
push
mov
mov
aaa
out
xchg
jg
cmp
pop
push
cmp
xchg
or
cmp
xor
push
jg
sub
push
jb
sbb
sbb
stos
inc
cmc
sbb
add
pushf
lea
pop
add
sbb
dec
mov
loopne
daa
push
adc
shll
xor
push
cld
scas
cmp
shr
in
decl
scas
cmp
imul
add
sbb
sub
dec
ret
insb
dec
pop
dec
aam
mov
pop
scas
in
loope
sahf
sub
xchg
out
lahf
sub
jns
stos
fwait
aaa
add
lret
leave
pop
mov
jg
mov
cmpsl
adc
xchg
xchg
mov
jge
adc
outsl
decl
xchg
outsl
clc
and
lahf
inc
push
imul
bound
pop
leave
inc
adc
fistpll
shl
fidivs
mov
mov
add
data16
push
mov
incl
adc
pop
lods
stos
scas
popf
xchg
xor
mov
pop
xor
and
dec
cmp
les
mov
bound
push
pop
pop
add
inc
inc
jbe
popa
push
jmp
fstpl
push
push
ss
lret
fsubrs
daa
mov
sar
ljmp
shl
sub
cmp
add
loopne
pusha
xchg
dec
scas
loop
insb
jg
out
mov
mov
sbb
inc
inc
adc
push
decl
movsb
cmp
dec
or
cmp
rcrl
push
insb
gs
add
sar
decl
int
ds
jo
push
ja
add
and
aaa
cld
mov
cmpsl
sub
mov
sub
data16
inc
pop
mov
js
cmp
mov
call
dec
dec
lahf
sti
sbb
mov
xor
xchg
xchg
xchg
aas
fildl
jecxz
test
scas
outsl
dec
mov
sbb
ret
rcrl
mov
xchg
in
or
lcall
cltd
inc
dec
mov
jo
dec
push
sbb
enter
lcall
or
and
pop
push
adc
jle
push
cmp
adc
xor
add
pushl
arpl
dec
and
cmp
inc
in
sbb
push
pushf
add
es
test
sti
cs
inc
inc
nopl
inc
push
test
pop
inc
push
push
push
cmp
aaa
repnz
test
aaa
aaa
add
add
mov
adc
in
inc
pop
xor
es
loop
jno
jb
pusha
add
push
add
aas
sbb
sbb
cmp
sbb
cs
push
push
add
dec
push
sti
fbstp
sbb
push
or
inc
xor
pop
and
fs
sub
daa
imul
scas
rcrl
sbb
sub
sub
or
and
jg
cmp
inc
sbb
and
sbb
jb
cmp
and
push
sbb
adc
aaa
sbb
out
lcall
inc
dec
pop
ss
aas
push
and
cmp
cmp
xor
ljmp
or
aaa
sub
or
add
in
sti
gs
sbb
or
push
adc
pop
cmp
push
sbb
sub
xor
ja
shlb
enter
das
aas
or
sbb
or
ljmp
mov
ss
cmp
cmp
aaa
pop
and
and
xor
stos
xor
push
pop
fs
cmp
std
fnstenv
add
sub
or
add
mov
pushl
or
add
aaa
add
add
and
xor
xor
mov
sub
dec
adc
and
and
and
mov
mov
xor
sub
sbb
stc
sub
sbb
ss
xor
xlat
popf
dec
call
sub
popl
and
es
mov
or
pop
jns
imul
inc
add
cmp
sbb
fisttpl
es
pslld
or
or
jle
lock
xor
sub
xor
and
gs
gs
imul
push
inc
push
imul
inc
push
push
jns
and
adc
push
jb
data16
mov
jno
push
push
dec
insl
je
jne
push
push
dec
outsb
out
cli
incl
inc
jp
push
jbe
jne
push
jns
dec
cs
jne
ljmp
pop
inc
dec
pop
jae
dec
outsb
jns
dec
jae
outsl
jae
dec
push
stos
mov
pop
pop
push
addr16
mov
add
push
imul
sbb
jns
jne
dec
dec
mov
and
int3
jns
push
inc
inc
inc
jbe
dec
inc
jo
jae
ja
dec
inc
dec
inc
push
inc
jno
push
dec
pop
bound
jns
lcall
je
dec
inc
insb
push
and
js
test
je
add
popa
add
xor
pop
das
add
add
cmp
adc
or
repz
repz
sbb
push
iret
repz
pop
and
and
sub
iret
repz
cs
xor
repz
repz
ds
pop
iret
repz
inc
inc
push
push
push
push
add
loopne
sub
bound
out
cmp
lods
push
mov
repz
repz
fdivp
sahf
out
sub
fsubrs
jns
out
loopne
call
sahf
out
clc
cld
add
or
iret
repz
adc
sbb
loopne
iret
repz
sub
sbb
dec
adcb
xchg
out
loope
jne
imul
inc
sub
fidivrs
arpl
das
mov
addr16
loope
and
outsb
add
cmpsb
imull
mov
jge
xchg
push
nop
sarl
mov
push
cs
sti
add
mov
push
or
cs
pop
out
mov
out
pusha
xchg
xorb
pushw
ja
pop
aas
pop
jle
pop
add
arpl
jb
mov
pop
jecxz
insb
xor
fstpt
inc
arpl
jo
insl
push
outsb
cmpsl
aaa
dec
out
in
subb
je
outsl
aaa
push
out
mov
ds
imull
mov
fs
jb
push
gs
jnp
mov
and
jne
das
scas
inc
mov
aas
fisttpl
fiadds
jae
addr16
stos
jge
jo
jg
loopne
daa
dec
das
je
jns
sbb
inc
out
pop
sahf
testl
adc
imul
push
push
jp
add
jb
mov
push
pop
push
arpl
addr16
imul
je
push
jae
push
sbb
out
jge
fs
ja
inc
cmpsl
shl
loopne
xchg
inc
pop
arpl
mov
mov
dec
push
popa
xchg
daa
fidivs
cmp
push
adc
adc
loopne
pop
ja
rcll
sbb
pcmpeqb
insl
aaa
dec
inc
jno
xchg
pop
das
push
xlat
mov
xchg
pop
das
pop
sbb
add
pop
js
and
scas
dec
push
arpl
xlat
mov
sti
outsl
mov
push
hlt
xchg
pop
es
leave
fs
leave
rorl
and
rcll
pop
out
inc
pop
mov
cmp
jb
push
pop
loopne
fisubs
das
mov
and
lock
es
or
jb
jmp
in
mov
and
push
push
xchg
or
test
push
jnp
push
push
inc
arpl
push
jp
mov
pop
pop
fisubs
mov
fs
pop
inc
jnp
insl
cmp
jmp
popf
xlat
add
push
shl
out
inc
dec
out
inc
mov
add
movsb
and
xor
jo
pop
pop
jb
fiaddl
call
and
pop
fsubp
rclb
ss
pop
js
lods
xor
inc
push
dec
lock
lds
fcmovnbe
gs
lahf
incl
adc
push
out
push
iret
repz
sbb
repz
pop
or
or
outsb
daa
or
or
mov
daa
adc
and
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
jns
xlat
pop
sbb
addr16
or
sub
add
mov
push
or
les
incl
inc
les
adc
mov
fsts
push
movsb
add
xchg
pushf
cmp
movsl
sbbl
subb
mov
cmp
inc
inc
jg
mov
iret
mov
in
call
sti
popf
jle
adc
push
ficompl
mov
xor
sti
sub
fcomp
loopne
jb
jle
scas
ss
adc
jns
roll
xor
add
loopne
push
mov
scas
mov
mov
inc
cs
inc
pop
push
inc
mov
jl
xor
out
addr16
mov
xorb
icebp
daa
push
pop
mov
jle
jl
daa
dec
sbb
pop
push
pop
dec
push
cs
add
sarb
sahf
out
or
loopne
adc
repz
mov
test
pusha
adc
sbb
mov
aam
sahf
out
sbb
sahf
out
push
sbb
mov
dec
and
iret
repz
call
enter
iret
jae
push
cld
mov
movsb
mov
outsl
pop
or
orb
inc
mov
add
fisttpl
mov
xchg
aas
test
push
cmp
fs
sub
jns
push
jno
ret
push
and
sbb
jns
out
adc
add
ror
cmp
lock
ror
enter
cmp
sarb
mov
lods
test
mov
cwtl
mov
iret
repz
pop
push
inc
cmp
cmp
repz
and
add
pop
movsl
loope
add
xchg
pushf
scas
insl
stos
jge
push
pop
jg
daa
push
jecxz
xchg
fbld
cmp
pop
xchg
push
mov
repz
addr16
sahf
mov
xchg
mov
ficoms
shl
dec
das
push
dec
insb
mov
mov
sbb
mov
arpl
fmuls
outsb
mov
aas
outsb
addr16
inc
incb
xchg
aas
outsl
jne
pop
outsl
pop
jb
dec
gs
or
pusha
push
pop
dec
add
leave
mov
push
add
sub
mov
dec
add
add
and
xchg
hlt
push
push
pop
daa
mov
sub
push
int3
jg
dec
add
add
sbb
add
addr16
add
rolb
and
add
out
add
aad
mov
or
int3
sub
popf
idivl
pop
mov
test
in
jbe
cmp
popa
subb
pusha
pop
out
out
fcmovu
pusha
pusha
or
jle
jbe
mov
popa
aas
pop
out
aas
add
jbe
data16
pop
fcmovu
mov
or
push
andl
or
push
ficomps
sbbl
and
mov
out
pop
jg
push
out
pop
out
adc
add
adcl
jle
in
add
data16
orb
mov
lock
jmp
push
rolb
movsl
in
ror
pop
shlb
jb
lock
cld
mov
jb
incl
mov
dec
cmc
iret
adc
popl
or
hlt
punpckhdq
mov
ja
jo
in
pop
jnp
pop
push
xlat
pop
jle
jg
push
fimull
push
out
pop
inc
pushf
cltd
in
fnsave
push
inc
jle
loopne
push
ja
push
pop
and
push
xchg
push
punpckhwd
mov
add
mov
mov
add
xchg
mov
addb
mov
jne
sub
das
mov
add
ss
arpl
insl
ss
or
pop
das
mov
fisubl
cmp
out
jle
mov
scas
andb
pop
aas
sub
icebp
outsl
jns
fidivl
mov
insb
pop
out
fidivs
pop
das
xchg
ficoml
add
pop
aam
nop
pop
rorl
mov
rorl
mov
shrl
lods
notb
das
sarl
pop
sarl
das
sarl
rorl
in
js
das
shlb
pop
mov
ss
shrl
arpl
push
addb
or
push
lahf
rcll
subl
shld
in
lods
push
inc
das
shrl
xchg
das
data16
out
out
or
add
jmp
mulb
sbb
pop
xlat
mov
orb
and
movsl
loop
in
vmread
sldt
scas
and
mov
rcrb
orb
loopne
pop
enter
leave
test
lcall
or
shl
pop
enter
ret
or
add
pop
scas
daa
mov
mov
fisttps
out
sub
sub
or
fwait
int
fiaddl
fdiv
lret
add
or
or
fldcw
adc
push
add
and
fwait
int
add
add
dec
add
cmp
jl
push
push
push
xchg
add
es
jns
std
in
int3
add
out
adc
test
cmp
idivb
int3
sbb
out
scas
repnz
inc
push
xor
sahf
cltd
int3
insb
incl
xor
mov
out
int3
xchg
incl
xor
push
out
cltd
int3
sub
fnstsw
idiv
int3
aad
pushw
cltd
daa
dec
repz
std
push
xor
xor
cmp
repz
xor
xor
repz
repz
xor
xor
repz
xor
xor
xor
xorl
es
and
sahf
xor
mov
out
adc
push
data16
out
sahf
data16
out
data16
jae
sub
repz
xor
xor
int3
int3
fidivrl
cmp
incl
data16
xchg
gs
test
add
mov
xor
popw
call
es
into
xor
push
cs
cltd
mov
cltd
cltd
sbb
cltd
cltd
xor
cmp
cmp
pop
das
lcall
cmp
mov
jns
xor
push
mov
mov
push
data16
pop
xorl
xchg
psllq
add
int3
mov
repz
repz
int3
int3
jmp
push
into
call
int3
int3
repz
lds
or
push
dec
repz
dec
out
into
repz
dec
mov
xor
into
repz
cltd
int3
cs
into
repz
int3
int3
int3
int3
int3
lret
in
decb
incl
imul
ficomps
push
and
movsl
add
insb
ss
int
ja
xchg
xchg
add
add
add
add
add
add
add
xor
sti
jbe
mov
cmp
in
inc
fmuls
repnz
imul
add
lock
lock
into
int
sbb
aas
xor
mov
mov
aas
add
jnp
push
add
pop
icebp
jg
cltd
div
fidivrl
push
fidivrl
insl
add
int3
loopne
imul
aas
mov
fstpt
jg
or
mov
jnp
sarl
out
movsb
insl
inc
mov
ret
mov
inc
inc
or
test
add
cmp
mov
rcr
aas
inc
sbb
or
sub
imul
loopne
mov
pop
add
mov
jg
pop
imulb
sbb
or
cmp
imul
ret
sbb
shll
test
fldt
popf
or
icebp
jg
loop
add
pop
insl
ret
add
or
hlt
rcll
rcll
sarl
inc
hlt
test
shlb
jg
addl
push
dec
pusha
inc
or
push
cmpl
inc
cmc
inc
sbb
inc
loop
aas
jbe
lret
push
inc
add
mov
add
leave
push
add
mov
aas
jb,pn
push
pop
cmpsb
lds
push
add
xchg
add
outsl
pop
adc
push
mov
sbb
inc
xchg
push
and
scas
mov
mov
and
pop
hlt
add
add
hlt
es
fiaddl
add
or
icebp
subl
pusha
pop
push
add
subl
mov
adc
mov
test
or
movsl
sbb
pop
and
add
pushf
jnp
loope
push
sbb
or
std
les
rorl
inc
outsb
add
das
adc
jnp
or
mov
mov
inc
fs
les
daa
xchg
roll
data16
dec
inc
xchg
sbb
in
into
xor
popa
mov
push
sub
add
insb
loope
aam
push
bound
jbe
mov
rolb
cmp
mov
or
pop
popa
sub
fiaddl
fcoml
mov
popa
loope
mov
jo,pn
jle
cwtl
pop
cmpl
fs
outsb
loope
mov
or
into
sub
imul
rorb
das
sub
shrl
or
fildll
xor
mov
adc
cmp
or
and
rcrl
fisubrs
inc
cmp
mov
aaa
pop
xor
shl
daa
shl
lods
pusha
fnstsw
pusha
out
and
imul
fimull
rorl
imul
mov
pusha
repnz
and
sbb
popa
mov
ret
in
out
out
ret
or
rcrl
pop
arpl
sbb
and
aaa
push
scas
mov
pushw
insl
shll
icebp
or
mov
popa
sbb
int3
rcll
xor
icebp
sbbl
or
add
sbb
shll
or
adc
xchg
xchg
sbb
pop
loop
push
je
mov
jne
and
rol
mov
add
xor
sbb
pusha
add
repz
pop
imul
add
pop
int
pop
mov
into
loop
sbb
push
bound
pop
pop
lds
imul
shrl
mov
add
int3
loop
addl
push
clc
or
inc
mov
xor
outsl
in
xor
or
add
fs
add
mov
dec
add
adc
add
pop
add
test
ret
or
pop
ja
in
int
push
push
mov
and
push
mov
loopne
push
pop
aas
mov
cmpsb
push
mov
inc
mov
outsb
or
es
pop
mov
pop
add
repnz
mov
cld
outsb
daa
jae
or
mov
ret
xor
cmc
mov
pop
pop
mov
loopne
fsubrl
and
jae
add
mov
out
inc
jnp
xor
push
ds
hlt
clc
add
mov
int
addb
cmc
push
jb
cwtl
test
aas
in
push
nop
nop
lock
int3
cmpsb
add
add
push
or
or
call
mull
int
sub
or
xor
push
dec
sti
add
test
ss
sbb
outsb
add
outsb
pop
sbb
addr16
add
es
pop
or
ja
inc
andl
dec
sbb
mov
add
insb
addl
push
fnstenv
and
cmpsb
adc
pusha
pusha
and
ss
mov
dec
push
and
xchg
push
add
jb
mov
xchg
sbb
inc
pop
js
es
push
je
xchg
rcrl
sbb
daa
outsl
adc
inc
rcrb
jne,pn
add
ja
je
pop
aaa
add
es
mov
mov
cmp
xchg
cmpl
aas
push
add
inc
cs
pop
insb
xchg
adc
scas
aaa
add
mov
ret
inc
and
jge
loopne
push
sub
aas
sub
outsl
push
shrb
dec
push
aam
or
mov
in
ffree
inc
fnstenv
mov
cmp
xchg
sbb
cmp
js
add
imul
inc
add
xor
imul
fidivl
popa
sub
push
daa
cmpsb
mov
loope
pop
outsl
out
dec
addl
add
pop
xchg
jo
push
push
pop
inc
jae
or
rclb
jb
rorl
out
adc
mov
adc
inc
sub
mov
jb
or
cmp
sub
fildl
pop
inc
pop
adc
sbb
repz
mov
rolb
sahf
push
stos
sub
inc
xchg
pop
pand
es
inc
imul
add
xor
sbbl
imul
imul
jbe
ja
fidivrl
jne
jae
xor
ljmp
jb
and
in
imul
mov
jae
out
sti
push
out
cmpsb
insl
dec
or
out
mov
ja
fildll
and
sarw
aaa
lahf
fisubrl
test
andl
inc
pop
loopne
xchg
pop
jb
gs
jle
pusha
cmp
bound
xor
jmp
xchg
pop
push
pop
ret
mov
insl
mov
push
adc
mov
mov
scas
ss
push
push
jle
jbe
mov
jle
testb
push
pop
cmp
fcmovnu
sbbl
into
and
add
orl
pusha
xchg
bound
jae
insl
jo
mov
mov
stos
or
dec
fimuls
pcmpeqw
cmpsb
jns
jecxz
sub
clc
fidivl
inc
stos
and
mov
fnstsw
ret
adc
or
sub
in
enter
cmp
jo
jo
arpl
ja
add
jnp
jmp
je
ret
aas
out
jge
inc
sti
fldt
pop
mov
stos
adc
in
xlat
outsb
stos
push
mov
sub
daa
scas
or
ljmp
lock
ret
inc
add
data16
inc
scas
dec
sbb
imul
loopne
mov
out
mov
outsb
ret
pop
out
mov
arpl
ret
cwtl
popa
and
sub
jg
sub
inc
mov
aad
mov
fwait
das
adc
cmp
addr16
mov
loop
arpl
loop
scas
sub
adc
lret
movl
mov
inc
divl
xchg
andl
mov
adc
sbbl
adc
xchg
aas
loop
test
lods
push
iret
pop
scas
or
sub
aad
daa
outsl
rcl
xchg
ja
xchg
pop
xor
das
insl
push
insl
sbb
jbe
bound
icebp
cmpsb
loop
mov
jo
jmp
popl
ljmp
outsl
and
mov
lea
add
orl
cmpl
dec
fildll
dec
pop
mov
outsl
pop
insb
cwtl
bound
jb
jmp
data16
cmp
gs
shl
jae
daa
fisttps
lret
inc
inc
jo
in
adc
jbe
dec
mov
clc
nop
fildll
pop
and
ficoml
inc
sti
mov
push
pusha
inc
daa
xchg
rcl
sahf
pop
add
int3
mov
lods
xchg
es
gs
xchg
clc
pop
mov
fs
pop
rorl
sbb
xchg
call
inc
sbb
mov
xchg
pusha
adc
cmpsl
mov
lds
push
test
sti
xor
and
shlb
push
or
aad
aas
pop
jbe
fs
sbb
mov
dec
mov
ret
out
stos
mov
inc
mov
adcb
mov
push
push
lea
aaa
sti
insl
repz
push
add
jg
jne
sub
cmp
mov
adc
shrl
loop
sbb
jo
xchg
and
adc
jecxz
dec
stos
adc
or
push
sub
xchg
js
lahf
and
sahf
ja
add
outsl
outsb
add
ret
je
jb
or
and
and
sbb
imull
pop
add
or
pop
adc
push
arpl
rcrb
jecxz
push
xchg
jne
or
sbb
imull
loop
imul
inc
xor
jbe
out
push
cmp
pop
psraw
mov
out
inc
lods
mov
scas
cld
fmuls
sub
fdivl
adc
cmp
pop
adc
rcll
shrb
pop
xorl
adc
sbb
imul
ja
sahf
mov
mov
pop
jmp
pop
push
mov
xor
cmp
imul
les
push
push
adc
or
pusha
mov
mov
sub
pop
cmc
fsub
sbb
xchg
leave
add
xor
jb
mov
inc
sbb
scas
insl
inc
xchg
scas
insl
cmpsl
dec
xor
push
fwait
insb
pop
fwait
sbb
and
insl
dec
jmp
scas
aas
rol
imul
pop
or
adc
xchg
dec
mov
adc
push
sub
sbb
lea
adc
jae
in
xor
ficoml
mov
adc
bound
pop
jmp
add
cmp
test
outsw
add
add
dec
mov
jle
lret
and
mov
lods
inc
jno
pop
inc
pop
aas
sub
jne
pop
dec
stos
sbb
loope
mul
jmp
add
push
imul
outsl
dec
imul
nop
lods
push
xlat
fscale
aas
daa
or
dec
inc
imul
or
push
mov
jmp
movsl
or
data16
inc
repz
bound
sub
nop
lods
xchg
cmp
mov
cmpsb
in
and
mov
adc
or
nop
lods
jecxz
mov
dec
addr16
pusha
push
loopne
subb
insl
mov
sub
jg
push
add
cmp
dec
pop
dec
jae
or
lock
inc
push
dec
adc
adc
jae
adc
xchg
mov
ret
push
pop
iret
xchg
push
movsb
imul
lretw
cltd
push
xorb
dec
loope
xchg
in
imul
pop
jne
push
pop
fnstcw
fldl
test
sub
adc
pop
xor
in
out
mov
push
sbb
dec
gs
adc
sarb
xchg
inc
inc
xchg
mov
jmp
pop
adc
test
cli
cmp
dec
fs
das
xor
pop
push
jne
jns
add
in
test
xor
add
inc
mov
sbb
pop
inc
sbb
scas
push
jae
pop
push
xor
push
insb
popa
pop
inc
cmp
clc
dec
outsl
fs
cmp
mov
jo
fs
ss
mov
shl
mov
push
inc
inc
sarb
fs
cmp
cmp
incb
inc
dec
cmp
and
shlb
jb
cmp
add
or
push
clc
cmc
fs
inc
ss
inc
mov
pop
aaa
enter
mov
dec
add
pop
pop
pop
xor
dec
outsb
mov
cmpsb
inc
push
dec
test
movsl
adc
popa
or
push
sahf
push
hlt
outsb
sub
jo
and
xchg
lock
push
aad
push
push
lock
fsubrl
add
int
mov
aaa
push
je
ja
and
push
stos
loop
fwait
ret
jns
fisubl
cmpsb
icebp
push
xor
pop
std
shrb
fwait
jp
int3
xchg
adc
fs
inc
fstpt
dec
push
jb
push
mov
inc
data16
push
xchg
and
mov
mov
out
jns
sub
adc
imul
jle,pn
jne
push
test
pushf
mov
mov
int
lret
sub
fidivs
out
pushf
js
cmc
xchg
xchg
leave
nop
outsb
cmpxchg
mov
pop
jne
push
loop
shll
popa
jno
lea
xchg
cld
sbb
cli
push
xorb
ret
xchg
cs
fwait
xorb
xchg
push
or
cmpsb
push
fs
rol
jo
mov
jne
jns
or
std
inc
dec
mov
mov
inc
dec
and
cmp
inc
je
jmp
dec
sub
addr16
xchg
mov
gs
jnp
sub
dec
lea
or
sbb
out
gs
push
fsubrl
dec
aaa
lods
cmp
sbb
add
sub
pusha
adc
aaa
lcall
and
mov
pop
adc
cmpsl
push
and
pop
adc
call
push
or
push
outsb
arpl
inc
ja
cmp
adc
notb
or
adc
bound
mov
test
adc
mov
test
dec
and
lds
aas
push
adc
inc
pop
outsl
inc
push
and
insb
ss
inc
jo
and
adc
ljmp
shlb
movsl
je
push
filds
xor
lds
dec
push
paddusw
inc
push
and
jnp
add
push
xor
insl
mov
push
fs
push
lods
sub
jnp
mov
ljmp
push
lret
fs
imul
sbb
lods
add
in
push
loopne
arpl
repz
loope
fdivp
xchg
jno
push
push
jns
jl
sub
sub
mov
and
dec
cli
outsl
add
jp
insl
push
scas
pop
cmp
imul
xor
xor
adc
roll
xchg
test
das
jns
outsb
aaa
push
mov
pop
fisubrl
roll
jnp
jae
test
inc
push
aad
lret
mov
rol
insb
imul
cmp
and
aad
push
pop
je
pop
insb
add
jae
cmc
adc
or
arpl
shll
mov
ljmp
push
inc
stos
mov
jae
mov
mov
jno
push
gs
push
rolb
dec
pop
sub
sbb
adc
nop
jne
mov
dec
mov
mov
cwtl
push
and
fs
or
aas
add
fstps
inc
pop
imul
sbb
sti
xchg
mov
repz
adc
and
or
in
push
sbb
arpl
push
dec
dec
in
xor
popa
data16
sbb
adc
inc
push
je
je
imul
mov
das
inc
pop
test
addr16
jg
pop
test
dec
popa
jns
lods
cwtl
mov
fnstsw
cltd
dec
ret
xchg
lret
xchg
xchg
subl
pop
sbb
or
dec
into
test
ss
pop
cmp
out
pop
adc
andl
and
test
outsb
dec
jbe
dec
fcmovnbe
inc
cwtl
gs
push
outsl
jge
inc
ret
or
cmp
pushf
lds
sub
jbe
mov
add
push
data16
and
adc
insb
mov
pusha
dec
cmp
jo
aad
inc
and
xchg
and
test
xor
mov
bound
aaa
sbb
xchg
inc
jne
mov
fdivl
xchg
lret
inc
cmp
or
or
mov
push
sub
sbb
jmp
in
add
addb
add
xor
dec
add
add
or
and
scas
lods
mov
loope
add
mov
xor
pop
inc
fst
shll
cmp
add
push
fldcw
cmp
mov
maxps
int
mov
imul
leave
nop
inc
lock
pop
daa
cmpsb
fadds
dec
clc
add
sbb
or
scas
xlat
mov
inc
fcmovnb
das
mov
cmp
es
pop
jnp
add
out
lcall
adc
lock
pop
add
pop
fucomp
dec
rcrb
out
inc
repnz
xchg
and
out
jg
mov
sub
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
inc
add
