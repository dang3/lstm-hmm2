call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
leave
inc
fldcw
xorb
fcompl
pop
sub
jns
or
imul
cmp
mov
stc
mov
fnstcw
or
jns
or
sbb
sbb
dec
leave
sub
test
mov
cltd
aad
aaa
mov
dec
sbb
jp
cs
push
push
dec
mov
in
nop
faddl
lds
adc
fstpt
test
jle
and
ret
add
mov
cltd
adc
cmc
sbb
jns
jno
sbb
sbb
ss
mov
fsubrl
out
divl
test
pop
xchg
imul
mov
xor
stc
xor
ss
sub
cmc
pop
js
xchg
shll
pop
inc
insb
lret
jbe
mov
leave
dec
push
cmp
fdivp
or
cltd
push
cmc
jns
adc
mov
mov
mov
test
inc
cltd
out
adc
js
xchg
out
pop
cmp
or
stc
orl
mov
out
imul
sbb
lods
jmp
test
in
testb
jg
insb
sbb
pusha
push
pop
sbb
mov
clc
mov
mov
movsl
cmp
adc
jns
sub
cmp
scas
out
fldz
scas
leave
pushf
ljmp
mov
sub
jns
or
imul
mov
stc
mov
fnstcw
sub
jns
or
imul
mov
xchg
stc
xchg
cmp
mov
jg
mov
adc
rcrl
pushf
mov
mov
mov
test
nop
rcll
xor
inc
rorl
mov
lahf
cmpsl
jo
pusha
xchg
push
xor
lock
xor
cmp
jp
popf
and
frstor
into
call
movsl
test
cmc
lcall
and
stos
int3
pop
pusha
push
call
cmpsl
testb
in
pop
aaa
sbb
jne
mov
dec
add
dec
in
repnz
push
pushf
popf
mov
inc
push
xchg
ds
jp
andl
mov
out
das
push
xchg
negb
clc
push
mov
xchg
pop
movsb
icebp
out
mov
dec
in
mov
jnp
jecxz
push
lds
pop
sub
dec
adc
add
imul
ret
cwtl
loope
cmp
sbb
jg
mov
lret
inc
mov
movsl
enter
mov
push
push
loope
mov
jge
sub
sbb
xor
xchg
jne
xchg
push
shrb
out
push
sahf
lcall
pop
in
pushf
ljmp
xchg
arpl
xlat
pop
mov
ja
adc
mov
xchg
lahf
mov
flds
mov
mov
and
out
in
pop
movsl
inc
jmp
out
out
mov
insl
cmp
shll
nop
mov
adc
ret
push
addr16
push
adc
sub
cwtl
inc
out
popa
xchg
xchg
cmp
orb
fistl
mov
in
cld
mov
ja
dec
adc
adc
fldt
cmp
aas
lea
or
push
mov
sbb
scas
sub
aam
xor
repnz
add
aaa
pop
scas
std
mov
sub
and
push
and
movsb
movsl
and
sub
sbb
or
fdiv
push
test
mov
out
sbbl
sub
sahf
lret
jmp
fldcw
test
sbb
stc
xor
movb
les
dec
add
rcr
cmp
xchg
mov
pop
or
int3
clc
add
inc
jo
or
xor
hlt
xchg
mov
mov
repz
pop
iret
jbe
dec
out
outsl
lret
push
xchg
iret
test
enter
xchg
loop
call
sbb
or
adc
inc
add
push
or
cs
lahf
mov
cmp
pop
bound
or
mov
mov
cmp
or
fxch
cli
repnz
bound
hlt
icebp
int
sahf
es
icebp
dec
test
xchg
mov
in
add
sub
shr
lds
pop
adc
push
push
lret
insb
pop
jns
icebp
in
aaa
dec
mov
cmpsb
aad
xor
adc
push
pop
pop
xchg
adc
lods
sub
or
lds
xor
popf
leavew
mov
add
in
addl
xchg
add
dec
sub
les
dec
not
das
jmp
inc
lret
fwait
inc
adc
add
push
and
popf
lahf
cmp
movsl
pop
mov
inc
sti
mov
fistpl
mov
leave
add
inc
mov
out
cmp
incl
jbe
pop
cmp
sub
inc
push
imul
xor
std
cltd
pop
and
push
xor
or
pop
jbe
stc
mov
adc
mull
loopne
mov
pushf
std
xor
sub
hlt
pushl
lahf
pop
jo
std
mov
xchg
addr16
pop
test
enter
in
daa
push
sbb
imul
inc
push
ljmp
lcall
add
scas
pop
mov
ja
lcall
aaa
adc
cli
xchg
and
jp
xchg
test
shlb
add
scas
xor
shll
and
inc
clc
add
push
adc
pop
pop
test
fsts
rcll
pop
xchg
mov
lods
xchg
xchg
and
xchg
shlb
shlb
mov
dec
adc
bound
mov
xor
push
push
jmp
aaa
pop
mov
rclb
cmp
sbb
or
aas
mov
mov
in
jl
jne
in
mov
popa
mov
outsl
add
imul
fwait
loopne
pop
mov
dec
imul
int3
and
andl
jle
rclb
pop
push
jne
stos
outsb
cmp
push
lea
shlb
stos
lods
es
adc
mov
sub
pop
fs
js
xchg
jns
dec
pop
pop
mov
add
stc
stc
mov
dec
jno
shlb
pop
lods
test
rol
jmp
adc
cmp
shlb
cmp
mov
leave
cwtl
jno
mov
nop
addr16
jg
nop
xor
daa
mov
fdivrl
test
andb
jmp
add
stos
push
mov
andl
cmc
jno
dec
jl
or
mov
ret
inc
pop
cmp
cmp
lcall
loope
inc
mov
gs
test
icebp
cmp
inc
lret
jb
cs
and
test
adc
insl
repnz
inc
inc
das
inc
call
mov
mov
insb
xchg
test
jns
jmp
xchg
dec
movsl
inc
in
sub
mov
jg
mov
sbb
sub
stc
push
xchg
dec
xchg
and
out
cmp
mov
adc
test
outsl
sbb
xor
es
dec
int
movsb
cmpsl
inc
jb
mov
stos
mov
mov
ja
push
fld
mov
ret
inc
adc
cmp
shll
addr16
sbb
and
sbb
xchg
addr16
xor
cmp
sbb
mul
adc
dec
xchg
sbbb
repnz
imul
icebp
sub
pop
jnp
jb
ja
mov
adc
cmp
mov
sub
push
jne
iret
xorb
add
or
lods
xchg
pcmpgtw
jo
rolb
insl
jmp
call
cmc
add
int3
mov
test
negl
mov
cltd
pop
cld
pusha
in
out
xchg
loope
sub
pop
cwtl
add
gs
in
pop
adc
dec
stc
enter
decb
adc
jg
add
pop
roll
in
cmc
inc
sub
iret
jno
adc
rcll
mov
add
int
les
mov
loop
pop
insb
push
dec
xchg
lods
js
push
push
inc
in
repz
addr16
jle
jg
push
loopne
add
sub
filds
outsl
xor
cmp
cmpsl
mov
inc
add
shrl
and
dec
lock
andb
lcall
cwtl
mov
sub
mov
mov
dec
stos
pop
ret
out
shll
movsl
inc
sub
or
fstpl
pop
adc
clc
lahf
jge
mov
cmp
test
add
jb
mov
sbb
in
adc
jecxz
lds
pushf
lahf
in
mov
imul
jne
mov
ss
cmp
inc
push
mov
fisubl
rcll
les
pop
iret
aam
or
cwtl
popf
mov
cmp
pop
loopne
and
imul
or
mov
movhps
in
ret
add
int3
mov
sub
ret
and
out
xchg
push
dec
lret
or
mov
xchg
imul
or
lods
mov
mov
inc
push
mulb
push
fldl
andl
xchg
lods
loopne
jno
push
add
rorb
or
sti
lds
ret
lods
sbb
lret
jne
daa
dec
dec
inc
outsl
add
out
inc
movsl
cltd
and
and
dec
jnp
loop
jge
mov
or
es
mov
pop
cmc
lret
xchg
pop
xchg
cwtl
ret
mov
ret
mov
jle
rol
aam
cs
out
shr
dec
jmp
xchg
bound
sub
imul
ret
mov
and
push
mov
enter
lods
cmp
insb
loop
push
inc
hlt
test
or
ret
nop
aam
inc
lock
lods
or
jo
lods
clc
jns
out
repnz
ret
aam
mov
and
je
mov
push
xchg
push
and
idivb
and
cld
fisttpll
mov
or
add
loop
adcb
into
addr16
mov
gs
dec
outsl
bnd
jae
cwtl
fisubs
adc
push
dec
neg
mov
aad
mov
push
cltd
fstl
int3
insl
adc
mov
mov
adc
shlb
inc
jg
mov
jno
push
cmc
lret
sbb
mov
stos
out
or
dec
mov
int
xchg
pusha
scas
in
jg
fadds
cld
test
inc
xchg
out
fcoms
dec
xchg
adc
loop
jns
jp
jb
test
icebp
inc
push
lods
jle
iret
rorl
shrl
xchg
adc
xor
leave
ds
nop
jbe
push
daa
mov
dec
fcoms
test
jb
enter
sbb
add
ret
push
inc
mov
rcrb
adc
scas
inc
rorb
pop
cmpsl
sti
hlt
icebp
outsl
xor
sbb
sar
and
mov
gs
xchg
iret
std
loope
push
push
cmp
mov
pop
shll
mov
jbe
jp
xchg
dec
jmp
in
icebp
jecxz
stos
jno
incl
pop
popa
rcll
fucom
xor
mov
ret
sub
jg
fwait
das
sti
mov
sti
dec
cmp
cmc
pusha
adc
movsb
push
arpl
stos
outsl
add
in
sbb
mov
popf
inc
xor
push
cmp
cltd
and
add
mov
or
inc
stc
scas
cmp
push
mov
xrelease
cld
pop
and
out
xchg
pop
das
push
gs
cli
fbstp
push
fnstenv
adc
ror
add
repnz
mov
xor
out
sarl
lds
lea
test
in
pop
mov
ds
adc
std
push
jmp
lock
fcmovbe
subl
cmp
cmp
or
mov
mov
or
aad
jnp
push
sbbl
stc
gs
mov
loop
out
andl
aas
mov
imul
movsl
and
mov
add
xlat
aaa
add
loope
push
mov
and
repnz
fwait
enter
fmull
fldenv
xchg
mov
movsb
pop
in
dec
testl
out
jb
insl
cmpl
adc
stos
push
pop
mov
sbb
jmp
push
out
mov
dec
int
nop
enter
sbb
pop
mov
ror
or
and
cmp
nop
pop
mov
sub
mov
cmp
jns
xlat
jl
in
ret
mov
ret
cltd
cmp
sbbl
icebp
push
int
fistpl
push
ja
sbb
loop
daa
fldlg2
aas
bound
daa
pop
add
lahf
js
mov
lock
xchg
and
incl
mov
std
mov
fmull
cltd
mov
fsubl
mov
mov
fnstsw
cmp
cmpsl
mov
sbb
add
sbb
jmp
sub
jmp
mov
loopne
jb
push
xlat
push
mov
dec
jnp
scas
push
test
scas
call
in
xor
jae
xchg
fcoms
popf
xchg
xchg
enter
call
cwtl
in
fwait
repz
xchg
movsl
sub
std
push
inc
sarb
in
cwtl
push
dec
jecxz
push
xchg
mov
push
testb
mov
repnz
ds
cmp
mov
dec
fwait
aas
xor
bound
and
loop
mov
jecxz
adc
mov
insb
adc
push
xchg
out
leave
fld
push
mov
add
adc
add
xchg
lds
dec
inc
fldl
mov
ss
enter
mov
and
int3
lea
sbb
push
les
dec
jg
mov
mov
jle
jg
xchg
cs
out
lcall
mov
adc
ljmp
pop
orb
sub
mov
shrl
pop
cltd
sub
mov
das
sub
jp
ss
add
sub
mov
in
add
rorl
aam
scas
rol
or
mov
cmp
mov
pusha
iret
daa
push
pop
push
jne
sahf
inc
in
push
fwait
rcll
daa
lds
leave
lahf
sbb
test
xlat
cwtl
lds
repnz
add
mov
or
arpl
dec
mov
rcr
mov
aam
addl
mov
jnp
sbb
mov
mov
jmp
call
jnp
mov
arpl
jne
in
sbbl
movsl
cmpb
in
insb
adc
clc
jne
aam
stc
dec
adc
cli
fldenv
jb
dec
jno
shrl
cld
stos
loopne
xor
fcmovbe
xor
lock
les
and
xlat
xor
adc
subl
dec
xor
mov
mov
lret
loopne
mov
sub
or
icebp
cs
js
pop
rcr
jle
sub
xor
add
test
mov
fidivl
out
out
jg
xchg
loopne
adc
popf
xchg
dec
fs
dec
fmul
mov
or
insl
mov
test
sub
in
lret
cmpsl
movsl
pop
rol
pop
sbb
iret
pop
jg
call
mov
incl
fucomp
pushl
add
pop
in
fimull
pop
ja
fstps
cld
adc
xchg
dec
test
out
xchg
dec
addb
decl
data16
xorb
ja
int
mov
jmp
stos
or
aas
lea
push
in
lret
lcall
and
out
dec
xor
pop
rep
sub
sbb
lret
les
xor
lcall
shlb
mov
shr
cmpsl
push
repz
mov
pop
mov
mov
mov
cld
mov
push
xor
daa
mul
lea
decl
in
adc
insl
test
or
shlb
lods
inc
pop
inc
inc
mov
sub
out
cmp
lret
imul
lods
inc
sbb
loopne
pmuludq
lret
pop
cli
add
lds
movsb
xor
sbb
rcll
out
loopne
loop
shll
iret
int3
cmp
push
ljmp
mov
sbb
hlt
out
dec
mov
fidivs
lods
jecxz
into
push
sbb
loope
cmpb
mov
andl
leave
adc
test
daa
mov
xor
out
ret
outsl
mov
insb
dec
adc
sub
push
cli
or
loopne
rcl
int
mov
inc
dec
xchg
and
ss
popf
xor
je
lock
push
pop
sub
cmp
movsb
push
jo
jge
shrb
add
mov
faddl
stos
add
jnp
cmpsl
sub
lret
sti
sbb
or
pop
test
xor
aad
adc
mov
cmp
lods
imul
sar
jge
pushf
leave
ljmp
fisubl
in
aas
ja
push
iret
cmpl
jle
cld
xchg
dec
and
jbe
ljmp
and
pop
and
xchg
outsl
sbb
loop
les
lds
mov
pop
repnz
dec
ljmp
ret
mov
inc
ret
mov
pcmpeqw
adc
out
sbb
roll
sahf
add
in
fdivl
or
cmp
jo
mov
cmpsb
sbb
and
push
and
cmpsl
imul
fistpll
push
mov
or
xorb
xor
enter
bound
push
cmpsb
ret
ja
cmpsb
add
or
iret
xchg
mov
lahf
fs
insb
aam
iret
pop
insb
adc
push
push
xor
xorl
roll
pop
mov
mov
int
insb
lcall
add
inc
xchg
push
mov
mov
push
stos
pop
mov
out
sub
push
fdivrp
sub
xchg
xor
adc
sti
test
push
and
xchg
lea
test
xor
cmpsb
and
fmull
jg
mov
lcall
adc
mov
lcall
push
xchg
loope
push
lahf
andl
sbb
lds
jmp
shrl
mov
inc
cld
jb
dec
addl
mov
push
push
pop
scas
sbb
in
push
lahf
cmc
adc
mov
decb
inc
test
push
inc
ds
fs
ficompl
sub
cmp
push
jcxz
mov
sbb
stc
outsl
cs
ds
pushf
aad
add
pop
rorb
xchg
mov
mov
fbld
fdivs
and
lods
jge
insw
or
bound
and
dec
out
mov
sub
xor
lcall
adc
filds
jp
fisttpl
pushf
outsb
test
jle
iret
xchg
xchg
inc
cwtl
lods
push
push
xchg
and
sahf
mov
insl
mov
cmp
dec
mov
jne,pn
pusha
setne
jae
imul
inc
test
shlb
inc
push
out
fimull
lods
cmp
lret
arpl
jp
push
adc
xchg
push
fwait
push
add
les
imul
cmpb
outsl
jno
jp
inc
adc
inc
pop
mov
lret
insb
push
mov
adc
lods
push
data16
jns
mov
pop
push
ror
push
iret
out
repz
insb
imul
push
or
inc
cmc
mov
jnp
mov
sub
xchg
xchg
jmp
or
scas
push
sub
cmp
mov
pop
sbb
je
fidivrl
fsubrl
xchg
icebp
ss
pop
xchg
movsl
imul
inc
cmp
ja
add
add
pushf
mov
sahf
sub
jnp
push
daa
xchg
lcall
shlb
nop
sbb
fiaddl
push
or
ror
ret
cmpsb
movsb
ljmp
push
pop
pop
dec
and
jns
and
sub
cmc
imul
imul
jo
test
mov
xchg
roll
mov
pushf
xchg
add
loopne
into
icebp
bswap
filds
push
dec
cltd
sbbl
cs
push
test
pop
ds
mov
notl
fs
stc
mov
cli
or
mov
push
lea
xchg
or
pop
sti
sub
mov
les
xchg
cmc
sub
rolb
inc
leave
xlat
xor
iret
mov
mov
lds
sbb
push
xor
xor
dec
sub
inc
mov
push
xchg
xorl
xor
jno
popf
mulb
sarb
adc
pop
outsb
inc
ficoms
sub
icebp
mov
or
fbstp
sub
mov
jne
pop
stos
loopne
stc
iret
push
sbbb
loopne
inc
out
icebp
repz
int
nop
int
xchg
mov
push
add
sbb
fsubrs
dec
rcrl
push
hlt
gs
ret
jbe
dec
cmp
push
sub
mov
subl
dec
test
cltd
lods
repz
ror
pop
xchg
arpl
insb
mov
iret
inc
sbb
xor
inc
mov
fucomip
and
cmp
or
popf
inc
xor
in
and
bound
int3
aas
xchg
mov
sub
lret
mov
push
mov
insl
testl
dec
bound
ds
or
cmc
cmp
ds
jns
movsl
adc
ficoml
leave
or
pop
cld
cmpsl
bound
cmpsl
std
cwtl
sbb
cmp
xchg
mov
push
mov
loop
fisttpll
sbb
mov
lcall
jmp
mov
sub
in
xor
enter
xor
xor
vmovntps
sbb
repz
mov
lret
or
and
dec
jae
cld
jge
add
popf
bnd
repnz
aad
mov
mov
ficoms
std
jo
pop
sbb
cli
into
fdivrs
push
pop
or
cmp
insb
jp
or
xchg
push
jnp
sbb
lods
stos
and
data16
pop
daa
xor
xchg
fcoms
subl
scas
and
xchg
imul
inc
stos
xor
lahf
jb
fldt
enter
xchg
fists
push
mov
jbe
cmp
popa
out
jle
cli
cmpsb
int3
sbb
fldpi
fdivl
xorb
mov
test
mov
shlb
adc
sbb
insb
into
fimuls
and
addl
mov
fnstcw
sub
jns
or
imul
mov
stc
mov
fnstcw
sub
jns
or
imul
mov
stc
mov
fnstcw
sub
js
or
imul
mov
stc
mov
pop
cmp
mov
cmpsb
add
jns
jle
xchg
xchg
shll
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lret
pop
ljmp
aas
les
aas
dec
jno
aad
out
jnp
or
cmp
ljmp
pop
stos
das
mov
fildll
jp
lret
lahf
sub
ficompl
outsl
cli
jg
setp
stos
das
mov
cld
push
mov
or
jne
pop
lret
xchg
add
sbb
adc
mov
dec
xchg
and
mov
mov
push
pop
ljmp
push
dec
mov
add
xchg
push
cmpsl
inc
mov
and
lahf
sbb
jge
mov
lcall
mov
and
in
dec
iret
push
fisubrs
mov
mov
lret
dec
cmpb
lods
push
pop
das
daa
mov
and
pop
jg
fimull
mov
or
lcall
xor
out
adc
lcall
in
jp
cmp
push
and
ja
inc
push
mov
iret
stos
fistl
sahf
xchg
iret
outsl
scas
mov
pop
ljmp
pop
stos
das
mov
fildll
jp
or
cmp
mov
subl
mov
imul
mov
push
add
dec
fnstsw
and
sbb
dec
fistps
js
adc
stos
or
or
je
inc
lret
scas
push
fimull
cmp
mov
fildll
jp
or
cmp
ljmp
pop
stos
das
mov
fildll
jp
or
cmp
ja
aad
je
cwtl
pushf
inc
js
fstpt
popf
inc
sub
adc
mov
xor
into
inc
cmp
or
lret
fsub
dec
mov
add
mov
cmpsb
and
into
mov
and
cmpb
jl
pop
rcrl
or
adc
jle
bound
fcmovnb
mov
clc
int3
fs
sbb
test
or
insb
inc
cwtl
xor
or
or
jp
mov
insl
movsl
xchg
mov
std
cmp
pop
and
push
sahf
test
or
out
dec
fs
mov
roll
popf
sub
test
cs
adc
mov
roll
scas
adc
add
push
fwait
mov
outsb
sub
mov
lea
cld
shll
jns
cmp
push
mov
loope
and
pusha
pop
push
sub
lea
mov
push
jb
mov
stos
add
mov
cmpsl
mov
dec
lahf
into
lea
xchg
pop
pop
icebp
mov
ficompl
in
out
xchg
fnstsw
mov
in
jecxz
iret
enter
lock
push
pushf
dec
and
les
mov
cwtl
popf
pusha
fisubs
inc
loop
sub
lock
arpl
mov
movsl
in
mov
cmp
out
cmc
ja
jns
stc
test
adc
mov
dec
popf
inc
arpl
ret
sub
push
dec
mov
dec
xchg
cmp
xchg
push
fistpl
sbb
pop
repnz
testb
fiaddl
xlat
or
push
xchg
dec
rclb
out
inc
ja
call
sub
std
mov
cmpsl
mov
in
bound
lods
push
test
adc
pop
mov
pushf
mov
sbb
xor
clc
adc
push
cmpsb
cltd
int3
inc
lods
mov
jb
aad
aad
xchg
fldcw
aad
mov
lods
push
mov
or
int3
addr16
sub
test
dec
pop
inc
das
lcall
add
sub
sub
mov
mov
daa
popf
addr16
in
loopne
and
adc
stos
ja
push
sbb
sbb
repz
lods
dec
adc
mov
xorb
in
adc
jecxz
ljmp
je
fnstsw
clc
ljmp
dec
aaa
cmpsl
enter
and
sbb
out
and
and
imul
lcall
dec
push
sub
ffree
in
lea
add
cmp
insb
out
clc
roll
lods
sub
rcrl
mov
cltd
leave
add
and
push
cmp
sahf
sbb
sub
es
inc
test
js
aad
fcoml
lds
inc
mov
out
jbe
mov
jne
mov
cwtl
ljmp
cmp
xchg
pushf
or
movb
std
jae
ret
hlt
int3
insb
rclb
ret
rorl
shl
hlt
sbb
les
in
mov
das
sbb
and
sub
insl
dec
iret
jle
fwait
roll
cmp
and
dec
xchg
ss
xor
hlt
jg
sahf
std
shll
add
sub
ds
fwait
cli
shl
adc
fucom
or
enter
into
xchg
mov
push
cmpb
dec
push
or
int
sti
xchg
movd
cmpsl
xchg
adc
mov
sbb
inc
mov
push
or
ljmp
pop
mov
mov
add
fists
xor
loope
test
push
fcomi
lock
aad
pop
mov
shrb
es
lods
sbb
filds
or
and
cli
mov
inc
or
dec
inc
pop
ljmp
outsb
in
ja
pop
pop
pop
sbb
fisttpl
or
outsb
in
mul
dec
sub
stos
pop
jle
xchg
imul
xor
stos
orb
lahf
insb
aas
inc
fcmovne
ret
pop
into
mov
loop
sub
push
mov
or
or
fsubrl
mov
nop
jb
mov
and
ss
add
in
push
lds
inc
dec
mov
and
push
aad
and
imul
mov
sub
enter
popf
pop
arpl
mov
xchg
xor
je
jle
adc
icebp
dec
mov
cmpsb
jnp
mov
test
pop
mov
mov
inc
inc
enter
loop
jg
fldcw
mov
inc
jmp
lahf
call
dec
mov
aas
daa
xor
rcrl
mov
xchg
aaa
cmp
fsubr
cmpsb
push
mov
jb
std
fdivl
mov
push
xchg
or
movsl
neg
xchg
call
xchg
lock
cmp
das
arpl
imul
out
inc
mov
fdivrl
dec
xor
test
mov
push
js
scas
pop
mov
das
jmp
ds
andb
sahf
pop
test
cmpsl
loope
clc
cmp
adcl
inc
out
lahf
xchg
mov
scas
lods
mull
pop
sbb
push
int
lods
inc
repz
les
iret
pop
mov
mov
cwtl
mov
out
mov
mull
pop
incl
adc
inc
pushf
pop
sbb
aaa
hlt
mov
mov
adc
mov
jmp
les
or
cmp
mov
in
lds
inc
dec
adc
add
add
push
aad
dec
cmpsb
ret
stc
inc
jmp
push
call
inc
sub
sbb
cmp
pop
add
cmp
je
sti
lds
fldcw
notl
sbb
and
add
xchg
movsb
sub
cmpsl
sub
in
mov
ja
mov
lret
sbbl
inc
lahf
arpl
stos
adc
aad
and
and
pop
add
idivb
jne
jno
mov
pushl
or
push
mov
ljmp
add
leave
rep
cmc
mov
shll
int3
cli
or
dec
push
sbb
pop
push
xchg
sub
in
add
out
mov
adc
js
std
sbb
dec
cmc
shlb
add
inc
or
mov
add
mov
sbb
mov
pop
push
cmc
out
sbb
push
adc
pusha
mov
or
leave
or
sbb
fsubrl
shlb
insl
inc
mov
mov
xor
xchg
shll
add
cmc
dec
jmp
xchg
mov
mov
aaa
lods
cmp
dec
mov
mov
xchg
pop
pusha
add
sbb
popf
pusha
push
or
jbe
mov
mov
push
mov
iret
mov
daa
out
aaa
xchg
out
call
fisttps
and
out
and
fxch
push
aam
movsb
std
sti
mov
fs
inc
push
call
mov
test
repz
movsb
aas
adc
pop
xor
mov
sub
popl
mov
pop
push
orl
repz
jp
pop
xor
dec
shr
lahf
pushf
repnz
rcr
scas
sub
adc
mov
and
outsl
mov
push
push
dec
push
fldenv
jp
pop
xchg
jg
mov
mov
dec
xor
mov
fcoms
mov
sub
insl
or
dec
in
arpl
and
shlb
cmp
xor
stos
cltd
out
pop
pusha
push
jp
outsl
cmp
stos
cmp
push
jg
push
mov
and
cmpsl
outsb
aaa
sub
mov
stc
push
lds
pushf
pop
in
movsb
lret
or
or
push
pop
jp
pop
scas
or
push
xchg
mov
pop
test
outsl
cmpsb
mov
sbb
jbe
cs
and
aas
stos
fcomi
repz
adc
test
clc
pop
push
jg
xchg
shlb
clc
push
inc
loop,pt
adc
cli
sub
outsb
dec
jp
rcrl
jb
shl
cwtl
fldl
xor
jae
mov
and
adc
loope
cltd
xchg
push
pop
stc
adc
mov
sbb
fiadds
mov
je
ja
rcrl
rclb
mov
into
sub
dec
bound
sbb
mov
movsl
sub
stos
pusha
jnp
ss
sbb
and
pop
cltd
or
cli
xlat
jbe
and
movsl
sub
fwait
dec
jecxz
fisttpll
cmp
rorb
and
cli
jne
jmp
js
add
mov
arpl
popf
lahf
aas
sub
lahf
cmp
movsl
sbb
mov
loopne
lcall
cmp
fadd
mov
lret
lds
jmp
mov
shlb
repnz
sbb
dec
push
lret
rcrl
stos
or
shr
push
sahf
fnsave
cwtl
mov
dec
sbb
cmp
rolb
xchg
sub
sub
mov
imul
fimull
mov
push
pop
mov
and
push
std
mov
mov
insl
leave
mov
mull
scas
adc
js
mov
cwtl
adc
enter
mov
sbb
jl
lret
pop
iret
das
mov
vpmacssdd
xorb
jb
pushf
push
sti
rol
mov
ret
pop
das
xchg
or
mov
or
sbb
mov
in
mov
add
pop
js
lret
sarb
adc
pop
or
fdivrs
adc
cmp
lea
pop
push
scas
insb
mov
fcomps
out
test
repz
push
push
hlt
int3
psadbw
jnp
mov
nop
inc
lahf
mov
mov
push
mov
mov
sbb
enter
lods
jnp
xchg
adc
push
outsb
push
arpl
clc
cmpsl
test
ljmp
mov
lret
push
xor
iret
daa
xchg
xlat
out
xchg
daa
push
pop
arpl
fsubr
mov
push
dec
or
ret
cwtl
out
sti
das
ret
cmp
sub
mov
inc
call
xchg
enter
and
xchg
mov
daa
add
jecxz
scas
push
jge
pushf
sbb
dec
lods
push
loope
xchg
mov
cmpb
fcomps
inc
xchg
inc
dec
arpl
xchg
inc
call
inc
int
jg
xchg
and
test
aam
or
inc
in
push
jbe
repnz
lock
jnp
and
call
addr16
xchg
clc
popf
jae
dec
xchg
mov
dec
jbe
inc
cs
or
sbbb
call
and
jle
lea
xchg
mov
xlat
daa
and
lea
pop
std
int3
lret
loopne
loopne
push
xchg
fsts
fidivrl
jp
testb
jecxz
int
lret
iret
cmpsb
in
sub
jae
dec
push
and
adc
sub
adc
jb
xorb
sbb
sbb
mov
mov
or
jmp
dec
out
jnp
sbb
lock
aas
bound
sbb
into
ljmp
repz
xor
pushf
je
hlt
leave
pop
hlt
bound
mov
ds
jb
xchg
add
pop
cmp
test
in
mov
mov
mov
lock
pop
lahf
pusha
shll
jae
cmp
loope
add
popa
stc
cmc
and
int3
out
out
jg
jbe
fs
add
mov
lcall
shlb
sub
adc
jp
jl
imul
ret
into
add
inc
lahf
inc
add
testl
cmp
adc
outsl
push
leave
sarl
mov
dec
and
sub
popf
jmp
mov
push
dec
cmp
insb
es
add
rcr
scas
mov
fsubrl
mov
mov
and
shrb
cltd
cmp
add
mov
xchg
or
push
lea
das
xor
outsb
sbb
dec
ljmp
fldt
pop
sub
inc
popa
sbb
cs
lea
mov
data16
sbb
pslld
cltd
outsl
xchg
adc
stos
or
pop
fcomps
push
add
xchg
or
push
mov
push
repz
inc
cwtl
add
jmp
mov
mov
jmp
ds
xchg
jp
pop
sbb
cwtl
adc
push
mov
push
xor
mov
push
in
mov
xor
rclb
ret
xor
outsl
cwtl
daa
push
mov
pop
aaa
xchg
add
loope
push
mov
sub
stos
mov
loopne
dec
jnp
xchg
imul
nop
and
push
mov
add
cmpsb
movsb
xor
sub
xor
dec
loop
adc
jmp
ja
fcomi
jne
in
rorl
cmp
pop
aad
mov
dec
fistpl
adc
pop
or
fldl
xor
mov
and
cli
shr
clc
add
aad
andb
sub
nop
insb
add
xor
pop
sub
stos
leave
ds
lods
ja
or
in
jecxz
cli
adc
jecxz
cmp
fnsave
xlat
sub
xchg
xor
dec
icebp
jp
push
xor
inc
pusha
or
popf
dec
js
add
dec
iret
lods
pop
mov
aad
mov
cmpsb
xchg
mov
loopne
icebp
lret
and
jg
push
stos
add
pusha
imul
insb
inc
in
push
scas
jbe
hlt
xor
sbb
sbb
xor
imull
mov
mov
les
sbb
cmpsb
in
sub
xlat
sub
stos
fimuls
sbb
ljmp
fistl
or
repz
int3
pop
push
xchg
push
cmp
adcl
loope
jg
xchg
jo
and
sbb
bound
je
repnz
aas
mov
mov
test
and
imul
out
movsl
out
fcompl
stos
test
testl
or
push
inc
mov
or
gs
bound
mov
loop
fs
lock
mov
mov
stc
ret
in
enter
cmp
inc
add
push
jo
xor
bound
cwtl
dec
cmpsb
xor
data16
mov
dec
into
js
xchg
loopne
pop
loop
bound
pop
xlat
jge
or
es
mov
push
mov
cltd
test
jne
clc
or
sub
push
jg
push
add
xchg
push
sbb
pushf
popf
rcl
mov
jb
dec
push
fisttpll
mov
and
test
cmp
mov
ret
repnz
sbb
push
in
jle
dec
cli
rclb
nop
lock
stos
push
push
cmc
jp
hlt
scas
in
xorb
push
push
bound
cmp
cmc
push
mov
rol
inc
sbb
jbe
mov
rcl
adc
mov
add
jb
xor
push
outsl
fidivrs
add
cmp
jg
dec
add
dec
xchg
les
fwait
jbe
jmp
mov
jecxz
jmp
push
xchg
xchg
in
mov
aas
outsl
in
orl
sahf
or
pop
cmp
sbb
aaa
pop
push
in
sbb
ret
sti
test
scas
fidivrs
les
xchg
add
adc
xor
cmp
mov
lds
in
dec
mov
sbb
int3
mov
push
xor
pusha
js
fsubl
fsubrl
pop
sbb
xor
cmpsb
mov
xchg
repnz
push
and
loopne
inc
lahf
xchg
pushf
mov
mov
push
pop
mov
les
lock
lcall
pop
mov
sub
mov
les
ss
sbb
int3
clc
mov
lods
leave
push
inc
xchg
adc
neg
cmp
fxch
jno
js
lods
push
jbe
mov
pop
test
nop
pop
sub
mov
daa
test
xor
xor
lods
lret
add
dec
lret
cmpsb
mov
xchg
xchg
mov
xor
adc
mov
jecxz
dec
and
dec
jb
add
mov
in
inc
repz
std
in
pushf
xlat
mov
lods
dec
mov
and
shl
sbb
xchg
test
fstpt
lods
arpl
add
das
repz
xchg
cmpl
test
imul
push
shrb
subb
cmp
sub
dec
pop
mov
push
std
addr16
push
fsincos
call
mov
pop
sbb
inc
mov
mov
inc
jne
sbb
or
fadd
pop
xor
mov
cmp
ljmp
insb
in
lods
test
out
or
icebp
jnp
fcoms
cmp
push
sbb
add
and
mov
push
fcoml
iret
fcmovnbe
mov
idiv
xor
mov
mov
pushf
cwtl
not
arpl
fwait
and
jg
push
pop
jb
pushf
jnp
mov
rcr
push
fwait
mov
jg
mov
cmc
inc
xchg
addr16
xor
out
pop
fs
or
stos
add
fnstcw
stos
mov
popf
cmp
cmpsl
out
xor
cwtl
into
or
mov
leave
cmpsl
xor
sbb
ret
mov
sub
adcb
cmp
jno
jo
mov
shrl
mov
cs
insl
xor
fsubs
or
pop
mov
or
cmp
outsb
push
popl
jb
sub
fwait
xchg
negb
adc
cmpsb
aas
into
insb
aam
inc
int
insl
push
lret
mov
dec
sub
adc
push
popf
push
mov
je
loope
in
inc
fsubl
and
mov
mov
repz
je
into
mov
fisttps
repz
aam
adc
xor
xchg
mov
pop
cmc
sbb
out
jmp
lret
add
ret
jp
sbbl
adc
insb
xchg
sti
cwtl
out
fwait
sub
clc
xor
xlat
xor
iret
sar
mov
mov
add
loope
neg
roll
mov
daa
fxch
lods
scas
addr16
pop
sar
mov
test
pusha
sti
push
pop
xor
mov
std
xor
cli
add
pop
push
jnp
jb
mov
cmc
jae
mov
sbb
outsb
mulps
push
add
dec
mov
ret
push
je
jl
and
pop
sbb
mov
mov
cmpsb
xchg
dec
mov
arpl
mov
xchg
rorl
or
cmpsl
cli
mov
xchg
or
inc
pavgw
dec
leave
clc
mov
push
ds
movsb
mov
loop
push
aaa
testb
mov
dec
pusha
mov
popa
test
inc
pop
stos
mov
ljmp
jp
dec
mov
movsl
push
icebp
cltd
bnd
pusha
adc
mov
and
cmpsb
and
sbb
fldcw
jno
loope
add
push
mov
mov
sbb
cltd
jo
mov
leave
icebp
pop
stos
add
pop
stos
in
insb
mov
insb
je
dec
jmp
add
stos
push
call
stc
inc
lds
into
xchg
jae
mov
cmp
jp
dec
xchg
hlt
mov
fwait
data16
add
leave
sub
fwait
sti
es
adc
popf
pop
push
jnp
sub
mov
popf
cmp
xor
adc
aaa
ret
pushf
pop
inc
out
loopne
xchg
test
xor
stos
shll
and
mov
push
push
lret
sbb
pusha
inc
inc
dec
dec
cmp
jno
add
fistps
mov
adc
push
daa
sub
jl
scas
fnstcw
shrb
popa
inc
shlb
enter
popf
dec
imul
repnz
outsb
xchg
xor
sbbl
add
lock
clc
into
xchg
shlb
add
push
jmp
fldt
ss
or
in
fs
xchg
cmp
push
cs
ds
aaa
jmp
and
daa
fistps
popf
rcrb
xchg
add
in
rolb
in
outsl
sarb
sub
lret
aaa
mov
int3
sub
movsb
sti
int3
lret
gs
xorl
sbb
and
dec
aad
or
das
in
pop
shl
mov
shll
nop
xor
xor
fs
inc
jmp
insl
test
pop
data16
pop
xchg
push
pop
adc
in
mov
hlt
and
andb
cmp
jg
popa
ret
mov
stos
fisubrl
inc
pusha
js
jecxz
std
or
pusha
test
sbb
sbb
jno
scas
rorb
cmpsb
add
cmp
insl
add
jle
out
cmpsb
sbb
xorb
inc
jl
push
xor
fimull
mov
sbb
jp
sbb
dec
jns
xor
inc
jmp
push
sahf
fdivrs
sbb
inc
loope
or
shl
roll
mov
lds
stos
dec
push
or
mov
mov
setns
fldenv
je
testl
repz
xchg
sbb
adc
aaa
and
jnp
ret
jae
add
das
mov
jmp
cli
jg
setp
stos
das
mov
fildll
jp
or
cmp
ljmp
pop
stos
das
mov
fildll
jp
or
cmp
push
cli
jg
setp
stos
das
cmp
dec
iret
pop
fildll
jp
or
cmp
ljmp
pop
stos
das
mov
jne
out
jp
jp
push
pop
push
dec
inc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
and
pusha
add
add
bound
sub
push
mov
addl
and
or
jo
add
popa
and
and
addl
mov
clc
cmp
or
js
imul
mov
xchg
in
scas
loop
hlt
mov
mov
pusha
sbb
test
sbb
mov
sbb
test
and
adc
scas
ss
movsb
dec
rorl
jg
int3
scas
mov
mov
dec
leave
ljmp
xchg
mov
lock
nop
inc
aad
push
jg
into
test
pushf
inc
jmp
popa
fbstp
rorb
jle
sbb
fstl
sarl
in
gs
mov
mov
dec
loopne
mov
loope
xchg
mov
inc
popa
stc
mov
filds
add
leave
aam
imul
adc
ss
and
jo
in
push
dec
push
mov
rorb
inc
adc
or
jle
push
sub
xorl
test
repz
scas
aad
or
jb
jle
popa
jne
aad
arpl
in
xchg
stc
xchg
push
leave
cmpsb
icebp
movsl
sub
cmp
add
push
push
push
adc
inc
xor
mov
lock
and
icebp
mov
and
pusha
add
add
jno
inc
xor
mov
lock
and
icebp
mov
and
and
ljmp
test
cltd
fcmovnb
sbb
mov
dec
pop
inc
in
movsl
sbb
je
call
popf
out
pop
mov
lret
push
in
movsl
stc
jl
hlt
dec
imul
hlt
jbe
cmp
inc
pop
divb
jle
cld
cmp
cltd
shrl
mov
fmuls
dec
add
mov
pop
inc
mulb
sub
cmpsb
lahf
gs
repnz
cmc
lahf
xchg
xchg
inc
jge
fsubrl
loop
pop
clc
je
pop
cmp
pop
mov
sub
mov
bnd
push
push
dec
ds
mov
jbe
jecxz
mov
fcompl
xor
iret
xor
cs
icebp
lret
add
leave
mov
je
jmp
jns
dec
xor
pop
mov
jns
repnz
nop
rorb
scas
push
js
ds
clc
lods
cmp
xlat
fldt
jo
pop
cmp
aaa
jg
sub
fisubs
add
xchg
push
je
repz
jle
cmp
ljmp
jp
jns
shll
push
loopne
xchg
mov
aas
loop
daa
add
test
inc
cld
jle
jnp
gs
fwait
test
push
iret
cwtl
push
aad
xor
cli
rcr
mov
cmp
xchg
fstps
push
cmp
sub
push
jne
jmp
rorb
mov
sub
adc
inc
cld
ss
das
int3
cmp
mov
lock
xor
push
popf
in
jecxz
mov
xor
adc
adc
sbb
push
sti
addr16
sub
std
cmp
mov
repz
imul
sbb
js
inc
adc
add
adc
mov
pop
adcb
xchg
mov
movsl
mov
lret
xor
cmp
jl
xor
addb
enter
ror
mov
add
pop
cmp
adc
imul
hlt
sub
xlat
fidivrl
mov
and
xor
in
popf
jl
gs
xor
jnp
mov
adc
sub
decl
jb
test
inc
mov
fs
daa
loop
lea
mov
xchg
sahf
repz
inc
mov
cltd
lahf
test
sub
inc
je
lds
dec
xor
jmp
ret
sbb
rolb
xchg
cmp
frstor
mov
movsl
sub
das
rol
sbb
insb
fnstcw
jns
leave
xchg
jecxz
popf
adc
jns
lahf
xor
jmp
push
push
jae
mov
mov
lcall
out
repnz
int3
sub
sbb
repz
add
push
das
incl
cmpsl
mov
shr
and
bound
insb
push
cwtl
nop
push
sbb
cmp
and
rorb
ljmp
out
jno
int
fadd
lret
and
in
bswap
or
lods
mov
shlb
mov
or
adc
in
mov
movsl
dec
test
and
icebp
inc
sub
sbb
add
loop
jns
aam
stos
xchg
into
cmpsb
push
lock
sbb
and
cmp
je
pop
test
ret
mov
mov
xchg
inc
inc
mov
jle
mov
insb
or
mov
mov
fwait
or
shlb
out
xor
fsubrs
and
push
xor
mov
xchg
xor
pushf
inc
adc
mov
xlat
push
sbb
out
pop
ljmp
sarl
dec
fistpll
jne
push
repnz
xor
das
pop
or
imul
add
ljmp
push
aam
mov
loope
mov
jns
cmp
out
icebp
scas
mov
add
and
sbb
sbb
imull
cltd
insb
xor
std
cmpsl
repnz
adc
andb
ljmp
mov
rolb
jo
xchg
call
adc
xor
int
dec
adc
xor
cwtl
sub
adc
jmp
xchg
mov
push
fwait
xchg
and
jb
pusha
xor
fwait
jne
add
sbb
or
sbb
stos
cmp
pop
iret
fcmove
das
mov
imul
mov
cwtl
imul
adc
pop
aaa
pop
xchg
call
mov
pop
fstps
or
mov
jg
xchg
pop
and
imul
fcomps
xchg
and
adc
sbb
inc
xor
shrl
movb
addl
jge
xchg
pushf
pop
mov
mov
push
fildl
hlt
inc
mov
jae
add
movsb
loop
jns
jecxz
ljmp
push
jne
jns
jne
and
cmp
xchg
mov
pop
testl
jle
js
and
pushf
add
jne
add
or
pushf
shll
mov
sbb
popa
push
or
jg
adc
mov
dec
adc
xor
cltd
fidivrl
dec
inc
mov
pop
adc
jb
mov
rcrb
popa
pop
push
mov
loopne
mov
lret
dec
jecxz
fsts
xchg
mov
js
ss
sbb
adc
stc
or
scas
mov
and
jecxz
sahf
pop
cmp
pop
js
mov
in
in
cmpsb
pusha
xor
adc
in
gs
mov
xchg
xchg
scas
test
push
push
push
add
or
jae
pop
mov
sub
or
das
out
mov
cmp
clc
pop
packssdw
lea
jns
xchg
ds
xchg
jns
sub
lds
rorl
or
inc
xchg
dec
inc
mov
cmp
shlb
data16
mov
push
cli
pop
outsl
cmpl
add
cmp
hlt
std
insb
sarl
jns
or
adc
mov
popa
iret
popf
fcoml
cwtl
and
dec
sahf
jle
sbb
fs
fcoml
pop
lods
jg
jl
pop
test
cli
rcll
call
and
dec
xchg
movsl
lahf
hlt
sbb
push
cmpl
xor
sbb
fcompl
int3
std
xor
int3
and
into
or
lock
mov
mov
mov
ds
dec
mov
mov
call
jmp
lret
xlat
stos
inc
pop
add
test
cbtw
and
adc
dec
or
idivb
sub
nop
mov
dec
or
pushf
inc
fadds
in
movsl
subl
mov
or
shrb
aaa
sar
mov
lds
int
mov
out
sahf
xorb
inc
mov
out
xchg
jecxz
push
mov
fwait
push
call
stos
xchg
pop
lahf
psadbw
adc
push
call
push
pop
or
flds
jp
xor
addr16
data16
aaa
mov
dec
fstpt
je
cltd
lods
add
js
test
rcrl
fwait
push
lods
pushf
outsb
add
dec
sub
movsl
mov
jmp
push
sub
cmp
fimuls
out
imul
sbb
mov
and
xchg
sahf
sbb
jmp
fs
sbb
adc
xchg
mov
xor
cmp
inc
arpl
dec
fldcw
xor
mov
lahf
fbld
sub
ret
pop
xor
mov
mov
shrb
xchg
mov
jle
sub
sub
repz
sahf
mov
add
pop
dec
int3
fidivrs
cmpsl
jnp
jmp
push
xor
test
std
mov
mov
add
jo
xchg
pop
add
mov
inc
dec
mov
mov
enter
xor
pop
or
fsubrs
push
xor
rcrb
sbb
adc
outsl
sub
nop
icebp
les
orl
das
cmp
test
push
mov
xchg
add
pushf
imul
mov
push
push
fwait
mov
or
ja
mov
xchg
jno
xchg
inc
mov
sbb
aam
int3
js
ret
inc
mul
hlt
mov
cltd
mov
lahf
imul
pop
lret
out
and
fmuls
les
adc
dec
dec
or
push
push
adc
or
ret
leave
adc
xchg
mulb
jne
pop
lret
inc
push
popf
mov
mov
outsl
cmova
jno
aam
push
mov
mov
inc
dec
add
ds
out
add
fdivrs
jns
mov
mov
shll
fimull
and
push
inc
pop
scas
arpl
fbstp
sbb
dec
and
int
lret
fsubs
sub
shlb
push
add
jecxz
sub
repz
xchg
xorl
xlat
enter
xchg
xchg
cli
and
lods
iret
xchg
or
lea
mov
ljmp
int3
jne
mov
stos
mul
mov
jmp
push
cmp
sti
cmp
loopne
adc
scas
mov
xchg
mov
ds
push
push
push
addr16
push
sbb
and
xor
sbb
mov
jge
or
mov
jae
es
mov
cmp
rorb
mov
orb
push
hlt
aad
mov
push
daa
xchg
insl
xchg
in
dec
push
xor
sub
jne
pop
dec
std
repz
inc
push
sahf
leave
jns
dec
loope
leave
mov
pop
in
fistpll
mov
movsb
pop
test
mov
aas
rcrl
addr16
je
sbb
ds
sub
and
jge
push
sbb
nop
jmp
adc
mov
insb
add
mov
sbb
adc
stos
addl
aas
sub
adcb
cmp
ljmp
push
pop
jmp
das
xor
push
lock
mov
cmp
shll
in
sbb
and
lods
or
adc
jp
push
adc
xor
sahf
ss
ret
lods
inc
sbb
leave
fidivs
aas
mov
push
adc
lahf
out
xlat
lock
add
sar
dec
mov
movsb
aad
das
push
adc
add
xor
mov
sbb
mov
sub
in
fs
pop
popf
cmpsb
std
loop
scas
idivl
out
xor
loope
pop
lock
mov
push
aad
cmp
int3
out
push
repz
or
outsl
mov
mov
add
mov
dec
insb
inc
repnz
scas
or
xor
popa
insb
jge
adc
jne
icebp
xchg
add
sub
test
xchg
xchg
adc
or
xor
jl
adc
sub
push
fwait
inc
inc
sub
or
jo
subl
mov
inc
mov
jp
fsubl
sbb
inc
xor
push
add
pop
and
push
ja
sbb
jns
pop
jo
cmp
imul
je
xor
sub
push
dec
sub
add
xor
add
lcall
int3
dec
push
repz
pop
insl
test
loope
into
sahf
inc
out
paddd
dec
add
enter
lods
or
mov
loopne
sbb
pop
mov
and
pushf
mov
gs
dec
adc
jb
or
mov
fidivl
push
bnd
or
or
jecxz
jl
outsl
inc
adc
outsl
outsl
clc
cmp
pop
inc
jle
adc
in
lret
sbb
rorb
clc
or
mov
dec
les
lcall
shr
pusha
fwait
jle
popf
into
js
or
in
mov
or
jo
pop
shll
push
mov
into
xchg
rcrb
lcall
outsb
scas
push
pop
or
popf
xchg
adc
jbe
xchg
xchg
cld
push
add
ljmp
imul
jge
std
jne
jmp
popa
adc
sbb
jae
mov
push
sub
jne
addr16
out
mov
mov
adc
inc
bound
adcl
push
mov
test
pop
je
je
mov
jne
sbb
or
aam
shll
clc
shl
orl
sbb
xlat
cltd
out
add
test
popa
cli
adc
js
add
rorb
std
cli
mov
mov
int3
sar
fisubrl
add
cmp
jo
adc
cwtl
testl
push
xor
arpl
dec
push
xor
outsl
out
mov
daa
setge
fsubrs
in
mov
jge
jns
inc
iret
push
dec
push
and
outsb
sub
aad
push
inc
orl
fsubr
sub
les
fs
in
mov
push
push
xor
jbe
mov
imul
nop
xor
dec
xor
decb
ret
lods
or
imul
shl
sarb
sbb
or
add
loopne
mov
arpl
popa
xchg
insb
jo
fsubrp
ret
stc
inc
mov
dec
adcl
in
push
mov
scas
int3
jno
dec
adc
push
jg
call
imul
adc
mov
dec
scas
pop
sub
pop
mov
or
fldl
pop
cli
js
or
dec
or
mov
pusha
push
pop
subps
mov
mov
shlb
icebp
push
jp
xchg
add
mov
in
mov
mov
gs
bound
mov
pop
sbb
addr16
xchg
lods
push
adc
xchg
inc
mov
orb
aad
xor
xchg
mov
in
fdivrl
imul
mov
mov
sub
lret
push
lret
pop
iret
cmp
dec
insl
fisubrl
cld
adc
daa
xchg
lock
mov
repz
push
cmp
sub
pop
mov
pinsrw
mov
stos
xchg
sub
pop
or
xchg
add
bnd
ficompl
inc
cwtl
or
insl
jecxz
jb
pop
inc
out
mulb
sub
std
xchg
je
jo
je
cltd
lock
dec
xchg
out
push
and
sti
mov
movsl
lock
fsubrs
sahf
jnp
pop
rcr
pop
lahf
or
add
ret
jg
lret
pop
out
pusha
jl
rep
xchg
popf
pop
into
shrl
add
pop
lahf
les
jbe
fcom
and
mov
out
push
sbb
sbb
jne
jle
aad
and
add
adc
dec
sbb
push
add
lds
stos
add
or
sub
add
push
pop
inc
cwtl
cmp
push
test
sbb
imul
pop
out
cltd
hlt
std
hlt
jns
in
add
xor
roll
sbb
mov
xchg
push
into
aaa
subl
aam
out
repnz
mov
ljmp
cmp
notb
lock
test
or
mov
xchg
xchg
lock
mov
fwait
push
repz
nop
jno
cwtl
pusha
sbb
or
repz
push
sub
out
xor
mov
mov
fbstp
pusha
movsb
clc
xor
xchg
addr16
and
jecxz
and
xchg
push
addr16
popf
mov
cs
mov
sub
jl
test
inc
pop
or
mov
adc
sub
data16
sbb
fiaddl
dec
mov
sbb
mov
pushf
lret
lea
mov
xchg
dec
cmp
ljmp
daa
fdivrp
pop
cmpsl
out
inc
nop
repz
pop
mov
lock
xor
subl
push
dec
lds
stos
fldcw
out
ljmp
loop
daa
shll
cld
add
dec
pop
xor
sub
cmc
mov
adc
mov
push
dec
sbb
imul
mov
fldl
incb
out
lods
loopne
adc
imul
push
pop
sti
lds
mov
negl
lea
xor
in
hlt
xor
nop
inc
cmpsl
inc
mov
sub
sub
fisttpl
ret
mov
xor
das
cld
cmpsl
or
ror
jl
int3
stc
scas
aas
push
stc
xor
push
inc
sti
std
call
adc
adc
imul
decl
call
push
pop
inc
insb
ret
mov
scas
rol
dec
jae
out
sahf
ljmp
push
ja
stc
cli
leave
dec
pushf
pop
ja
xorb
gs
pop
mov
lods
shll
sahf
stos
jbe
adc
sub
out
dec
psllq
push
test
movsl
dec
pop
lds
jg
stc
sub
icebp
jo
fwait
pop
cmp
ss
adc
adc
fs
and
push
sbb
cmp
sub
icebp
jge
adcl
pop
push
add
push
insb
or
cmp
ljmp
push
in
add
mov
mov
mov
jmp
adc
pop
mov
xchg
stos
push
mov
xor
aam
jecxz
sbb
lods
in
sbb
pop
fs
movsb
jmp
jno
inc
cli
stos
in
mov
mov
cmp
enter
xchg
int3
xchg
daa
imul
pop
shlb
sub
sbb
jg
out
xor
imul
imul
cmpsb
fwait
inc
mov
add
sti
sbb
xor
mov
test
push
push
push
addr16
cmpsl
lods
imul
xor
rorb
jmp
mov
mov
ficoml
and
lcall
test
scas
sbb
daa
jbe
inc
or
shll
scas
inc
pop
mov
xchg
inc
sub
or
rol
sub
push
add
adc
or
lret
inc
or
iret
popa
mov
mov
mov
mov
cltd
cmpb
imul
ret
xchg
adc
xchg
jnp
pop
call
xchg
mov
or
inc
mov
push
inc
jecxz
ljmp
push
sahf
std
imul
mov
daa
jmp
popa
push
dec
icebp
sbb
sbb
push
ljmp
test
test
and
xor
xor
in
or
jo
mov
lods
mov
jle
std
sub
movsl
ja
sub
shrd
mov
pop
out
pop
lret
mov
and
jl
or
in
aam
adc
aaa
mov
mov
lret
int
mov
xchg
test
repnz
mov
ss
iret
pop
add
pop
cmp
aaa
jmp
rcrb
and
mov
and
inc
xchg
mov
xchg
and
pusha
movsb
sbb
aaa
and
call
aas
and
aaa
push
std
ds
bnd
sbb
dec
ret
xlat
jnp
loope
stos
mov
iret
je
inc
adc
jmp
mov
xor
test
ffree
adc
xchg
pop
fldt
push
cmp
add
addr16
push
mov
pop
into
cmp
addr16
stos
out
mov
add
in
pop
movsl
dec
mov
pop
aam
sbb
lea
push
sarl
jae
mov
xchg
adc
aas
add
je
xor
aam
lods
call
push
pop
les
and
jb
nop
inc
or
xlat
or
xor
popf
sbb
sub
sub
inc
inc
call
popa
repnz
and
pop
add
jl
adc
xchg
mov
fldenv
sti
xchg
mov
xchg
add
shlb
lods
test
aas
outsl
xchg
popf
std
mov
out
ja
xchg
mulb
mov
xchg
and
mov
cmpl
repnz
lret
int
addr16
sbb
xchg
movsb
cli
xchg
int
cmp
pop
test
inc
dec
out
orl
nop
sbb
in
shlb
mov
mov
popf
push
shll
das
xchg
mov
call
btcl
lds
xchg
jns
xlat
push
ljmp
jle
jno
fs
in
ret
dec
outsl
sti
sbb
cli
lock
rcrl
repnz
xor
pop
and
jae
and
or
inc
xor
sbb
pop
mov
jle
sarb
pushf
mov
shll
and
out
or
repnz
addb
cmp
popa
mov
insl
add
gs
outsl
cmpsb
jnp
add
sbb
mov
movsl
cmp
xchg
mov
fidivrs
push
pusha
mov
mov
xor
cwtl
dec
adc
leave
xor
mov
push
leave
and
and
jnp
xchg
fdivrs
dec
sti
jecxz
call
loop
cmp
leave
sbb
outsl
and
cmp
mov
aaa
xchg
and
mov
mov
jle
lahf
cmp
test
rcll
cli
dec
sbb
scas
jae
inc
in
add
pop
and
cmp
ss
dec
mov
stc
mov
cmpsl
mov
xor
outsl
jae
ja
loop
pop
xlat
inc
sbb
push
mov
mov
sahf
adc
add
xor
das
adc
test
sub
push
data16
mov
cltd
push
rcrb
push
in
sub
mov
dec
push
or
xor
nop
add
lds
movsl
outsl
mov
mov
fcomi
mov
repnz
shr
xchg
stos
xchg
daa
add
add
jno
inc
xor
mov
lock
and
icebp
mov
and
pusha
add
add
jno
inc
xor
mov
lock
and
icebp
mov
and
add
jo
nop
popa
adc
inc
lock
shlb
xchg
and
icebp
mov
and
push
adc
popa
add
inc
mov
shlb
out
imul
scas
adc
mov
or
cld
add
sbb
sub
cmp
dec
push
fnstenv
jno
orl
fsub
in
icebp
cld
add
jl
sub
cmp
dec
push
pop
popa
jno,pn
orl
fsub
in
icebp
cld
add
cmp
or
xor
push
jl
mov
in
dec
or
aas
sbb
ret
xchg
adc
jns
mov
ss
mov
aam
lock
rorb
imul
mov
js
mov
mov
cmp
sub
scas
pop
rcl
lds
or
add
inc
jecxz
in
into
sar
xchg
pushf
loop
xor
inc
cltd
xchg
pop
andl
faddl
arpl
add
xlat
xlat
jo
rcr
insb
mov
xchg
jnp
jl
outsb
arpl
sub
loope
icebp
jg
lock
jno
xor
adc
in
mov
jns
xchg
arpl
lret
and
aaa
sbb
jns
sbb
cmp
cmp
pusha
js
jge
mov
mov
loope
icebp
cld
add
sbb
sub
cmp
dec
push
pop
popa
insb
jno
cmc
jecxz
pushf
int
call
andb
lods
imul
jp
sub
add
sahf
aad
stc
into
movsb
test
cld
push
je
imul
and
xor
outsb
sub
lds
flds
in
icebp
cld
add
sbb
sub
cmp
dec
push
pop
popa
insb
jno
orl
fsub
in
icebp
cld
add
sbb
sub
cmp
dec
push
pop
popa
insb
jno
orl
pusha
xchg
xchg
add
inc
mov
mov
aad
push
xchg
jmp
sbb
jne
shl
mov
mov
aad
add
icebp
add
mov
jmp
mov
adc
movsb
popa
xchg
cmp
cwtl
insl
icebp
or
push
xchg
sub
cmpl
faddl
dec
xor
dec
movb
lahf
pushf
cmp
mov
movsb
lods
xchg
sub
ffree
test
xchg
cmp
xlat
xchg
pop
vscatterqps
loop
mov
sub
popf
sbb
call
push
shl
jbe
inc
pop
popf
sbb
mov
dec
xchg
repz
inc
ret
loop
fstps
sar
shrl
inc
js
in
aas
fdiv
jae
cmp
ss
mov
and
jbe
arpl
data16
push
mov
mov
shlb
sub
or
adc
aas
jbe
xor
inc
pushl
and
aaa
jo
jg
lds
scas
cmp
aas
es
shr
rolb
mul
adc
cmpsb
pop
jb
lods
ret
mov
iret
cli
out
cmp
dec
gs
shl
mov
in
lret
clc
sub
cmp
lcall
aad
aam
ja
rcr
mov
xor
jmp
cmpsl
sbb
lods
sbb
xchg
les
ret
fwait
js
mov
popf
call
mov
xchg
mov
inc
ror
iret
push
mov
dec
repnz
loope
xchg
jp
jle
popf
inc
in
jecxz
ja
fadd
jp
pop
cmp
mov
sub
jp
xor
and
repnz
mov
push
pminsw
sub
adc
cmp
lret
cmpsb
idivb
adc
cmp
lea
aad
ss
mov
xchg
fsubrp
mov
dec
outsb
push
cmp
loope
lds
out
push
out
das
jmp
fstp
add
nop
and
out
cmove
shll
adc
stc
cmpsb
insb
jbe
dec
cmp
sbb
push
aas
sbb
dec
pop
pop
pop
push
pushf
int
shl
xor
cmp
rcll
insb
insb
fildl
lret
nop
jecxz
jmp
fs
aad
ss
or
sub
std
mov
scas
sbb
mov
shrl
stc
dec
push
outsb
cmpb
repz
cmp
mov
aas
cltd
mov
dec
sbb
scas
aas
fstl
cli
cmc
dec
jno
lds
sub
test
sbb
sti
std
enter
mov
icebp
pop
and
fs
jae
cli
gs
jge
mov
sub
xchg
xchg
ss
adc
test
mov
sbb
ds
sub
into
xchg
pop
sub
ret
int3
pop
lret
fmul
outsl
fadd
sbb
and
test
test
jb
sub
pop
mov
or
repz
xchg
sahf
adc
sar
movl
sub
jno
push
sbb
stos
dec
inc
mov
xor
mov
outsl
dec
pop
pusha
lahf
mov
lcall
inc
mov
jo
repz
inc
sub
insl
pop
ja
aas
mov
mov
movsb
push
fdivs
jno
jb
pushf
ret
xor
dec
wrmsr
mov
stos
repz
jne
out
mov
xor
fisubrs
push
popf
fldt
popa
cmp
mov
test
dec
imul
neg
popf
addr16
jle
shrb
cmp
sub
mov
in
popa
inc
sarl
jge
sub
push
jle
mov
mov
pop
or
mov
in
jae
xlat
inc
rorb
and
decl
inc
fs
pop
fisttps
mov
inc
inc
lea
jecxz
mov
stc
ds
test
jo
dec
lods
imul
xor
fsubrs
mov
cmp
fcmovnbe
scas
sub
mov
aaa
push
sbb
ficoml
popf
pop
movsb
pop
out
cmp
int
test
les
sbb
cmp
add
mov
or
daa
in
sub
loop
or
mov
in
decb
sbb
ds
jle
xor
cmp
sbb
xchg
cmpsl
lret
ja
pop
or
jmp
mov
adc
stos
popf
daa
out
push
mov
push
lea
popa
inc
inc
jb
push
mov
mov
stos
xchg
int3
add
cmc
js
cmpsb
mov
out
in
mov
sahf
test
jno
imul
xor
sub
sub
push
cmp
lock
push
xlat
sbb
int3
pop
adc
inc
and
lea
sub
dec
shrb
in
movb
or
adc
repnz
lods
add
inc
jge
sub
mov
inc
push
gs
pop
mov
dec
mov
mov
xor
xlat
lds
pop
xchg
push
into
pop
inc
insb
jnp
out
jbe
ja
js
mov
push
dec
ret
sahf
xlat
add
test
mov
and
xchg
test
push
mov
cld
adc
mov
sahf
dec
xchg
adc
cmp
daa
pusha
cli
inc
test
js
shl
jge
jge
cli
shll
sbb
sbb
lea
rol
xor
fsubs
inc
jne
inc
aas
pop
outsb
nop
dec
dec
sbb
push
orps
xchg
cmp
inc
fwait
push
fstpl
pushf
push
out
rcrl
aaa
fdivrl
pop
btr
test
out
cmpsl
pushf
shl
adc
mov
xchg
pop
shlb
xlat
scas
jae
sbb
or
add
push
mov
mov
stc
xchg
ja
cmpl
or
push
loope
xor
inc
gs
cmp
popa
scas
mov
mov
mov
cs
subb
movsb
pushf
stos
xor
stos
cltd
flds
ret
lret
rorl
xchg
fldl
add
clc
jns
cmp
fldenv
mov
out
mov
scas
and
xchg
xor
ds
ljmp
mov
push
push
out
inc
xor
inc
fbstp
inc
call
mov
and
or
jne
or
stos
movb
mov
sbb
fwait
adc
mov
cmp
call
and
je
or
mov
jae
jno
sti
adcl
notl
pop
cld
adc
nop
bswap
inc
out
testl
and
dec
subb
pop
fsubs
fs
idivb
push
xchg
cmp
mov
pusha
outsb
and
scas
je
push
dec
inc
enter
cmp
cmp
orl
xor
arpl
fdivrp
mov
push
xchg
adc
std
aad
fldl
mov
and
xchg
add
mov
inc
jecxz
push
fnstsw
and
insl
ficoml
inc
aaa
or
mov
adc
fbstp
pop
cmp
push
ret
shrb
and
cmp
mov
enter
imul
push
xchg
out
inc
bnd
cmc
fcompl
ror
or
sub
jne
or
dec
test
mov
mov
es
cmp
mov
sub
pop
push
mov
push
pusha
idivl
push
adc
mov
and
stc
sub
sub
cmp
lret
jnp
movsl
imul
out
push
dec
lret
inc
pop
movsl
jecxz
add
add
je
mov
xor
xchg
and
dec
push
leave
mov
and
cmc
loope
stc
ljmp
jne
jno
xor
shrb
ficoml
roll
jns
into
aam
inc
sbbb
mov
test
jle
jae
icebp
xor
int3
xor
mov
jg
movsb
mov
xchg
jp
sbb
push
movsl
popl
ret
fnstsw
inc
xor
sub
movsl
shrb
push
pop
pop
jno
sbb
and
shll
jp
dec
sub
xchg
lret
jb
jo
push
jp
inc
out
add
xor
cmc
cli
call
sub
neg
push
popa
mov
loop
les
sub
loop
adc
cmc
xlat
sbb
dec
jb
roll
scas
or
cmc
push
aad
leave
jno
add
dec
movsb
jnp
aam
rep
or
test
mov
out
jmp
in
mov
cwtl
pop
fsubs
xchg
into
push
and
int3
pushf
xchg
int3
xchg
dec
int3
adc
iret
insb
jne
lods
jns
in
call
dec
pushf
arpl
xchg
mov
hlt
cmp
pop
cmp
add
pop
ds
iret
test
filds
mov
mov
dec
cmpsb
cmp
jecxz
sub
sbb
sarb
adc
sbb
sti
xchg
or
sbb
fst
testb
mov
loop
cmp
in
loop
push
shrw
jnp
clc
cmpsb
dec
icebp
js
mov
lds
loop
shll
in
outsl
fs
sbb
inc
mov
aas
fisttpl
push
ss
mov
or
scas
xchg
push
or
jno
jecxz
iret
test
lahf
in
jmp
rorb
sbb
loope
aam
pop
test
ficompl
and
or
cmpb
mov
popf
popf
daa
inc
cmc
iret
cwtl
push
vmovups
push
out
adc
mov
lcall
or
insl
jmp
mov
push
cmp
sbb
jns
insl
xor
push
and
mov
adc
mov
je
dec
sbbb
fcomps
adc
test
ret
out
sbb
cmp
int3
mov
lcall
jne
xor
mov
dec
stc
scas
lds
mov
addl
hlt
xchg
xchg
pop
lret
insb
mov
mov
and
clc
int3
addr16
pop
pop
or
and
adc
sbb
outsl
mov
xchg
jle
mov
stc
icebp
push
sbbl
xchg
mov
test
adc
pop
and
es
test
or
jb
xor
rcll
dec
or
push
xor
inc
orl
popa
sub
cmp
xchg
sbb
xor
loop
fs
cli
imul
cmpsb
notb
or
cmovns
mov
cmp
sbb
or
push
push
mov
fisubl
aaa
cmp
fsts
subl
fsubs
mov
mov
push
mov
inc
test
leave
data16
push
or
pop
xchg
and
jg
add
push
jns
mov
loop
cmp
cmp
iret
test
mov
mov
das
push
sti
test
push
cmp
or
loop
cltd
nop
and
jle
jbe
icebp
rol
loopne
arpl
fst
lods
and
add
mov
hlt
jmp
leave
les
add
lds
mov
data16
fldcw
jge
in
jl
dec
pop
loope
push
xchg
jl
or
fdivl
sahf
ds
pusha
xor
jge
and
std
cmc
ficomps
jnp
insl
clc
ret
pop
dec
negl
sbb
sub
or
mov
mov
inc
adc
push
sub
cmp
or
push
xchg
mov
and
mov
xor
push
repnz
add
adc
mov
jb
push
nop
mov
rcrb
subb
test
iret
popa
shrl
mov
dec
les
icebp
aaa
pop
or
shrl
frstor
nop
dec
push
and
out
jnp
xor
mov
ret
std
xor
dec
pop
imul
adc
or
xor
test
imul
cmp
std
int3
xor
lcall
xchg
xor
movsb
fwait
sub
nop
in
add
pop
repnz
flds
push
xor
aas
aas
mov
pop
lahf
sbb
add
pop
call
sub
adc
fistpll
pop
sti
lret
aas
xchg
fsubrl
fwait
movsl
push
xchg
or
xchg
mov
xor
rcr
ss
jmp
add
xor
sahf
in
shr
jns
mov
mov
jbe
inc
sbb
sbb
shr
test
jae
je
adc
jmp
and
mov
sbb
lahf
fldcw
jle
cltd
mov
add
add
pushf
aam
cli
repnz
jmp
jno
push
inc
jbe
xchg
loop,pn
daa
mov
add
lcall
fidivrl
pop
cwtl
mov
adc
mulb
sbb
inc
push
xchg
sbb
fs
je
xlat
mov
shrb
iret
mov
jae
adc
ja
xchg
cmp
fisttpll
sbb
sub
fisubrl
pop
mov
pusha
dec
shll
popf
fadds
mov
stc
jbe
incb
scas
xor
and
pusha
push
pop
iret
xchg
pop
inc
unpckhps
inc
push
add
imul
push
xor
xor
jae
lock
or
fistpll
push
aaa
push
push
xchg
outsb
and
dec
and
push
ret
push
mov
push
mov
fmull
dec
les
xchg
roll
inc
clc
mov
ljmp
pop
mov
cltd
push
lcall
roll
mov
lfs
shrd
in
cmp
mov
adc
mov
cmp
push
ss
or
aas
and
xor
push
push
jb
int
cmpsl
pop
mov
and
dec
out
popl
rcrl
rcrl
add
and
sub
pop
add
lret
mov
jmp
test
clc
mov
iret
cli
inc
jmp
sub
popa
stc
push
or
inc
jl
sub
push
dec
imul
loop
icebp
pop
int3
adc
jb
sbb
xor
and
sbb
sti
mov
into
inc
pop
push
mov
test
repnz
cli
outsb
aas
or
jecxz
add
imul
mov
fs
cwtl
stos
shlb
adc
mov
xorb
test
push
lcall
and
dec
cmp
mov
enter
xchg
ret
xchg
loopne
outsb
out
sub
test
or
mov
imul
movsb
stc
mov
mov
rolb
xlat
and
xor
mov
dec
subb
sub
lret
push
call
cmp
jne
mov
xor
mov
adc
cli
outsl
push
sub
xlat
in
xor
leave
pop
out
pop
into
inc
lret
cltd
aas
in
push
xchg
ds
mov
fiadds
inc
or
imul
xlat
imul
mov
out
and
lods
ja
sub
push
or
in
std
outsl
mov
sbb
mov
push
insb
pusha
es
mov
mov
ficomps
mov
int
or
inc
mov
pop
jle
fiadds
popa
mov
mov
lods
and
fcoms
into
fwait
fs
xchg
popa
mov
jg
mov
push
fists
add
add
inc
enter
sbb
repz
fs
jl
stos
cmpsb
xor
adc
int
fldt
icebp
es
shll
lahf
dec
sub
dec
sbb
jle
enter
arpl
sbb
xchg
sbbl
add
fs
lahf
jg
insl
jne
aas
pop
xor
les
mov
sbb
fldl
pop
add
xor
sahf
mov
cltd
outsl
jp
loop
pop
lret
cmc
or
icebp
adc
cmp
aaa
push
into
out
clc
cmp
shl
lods
inc
insl
cmpsl
jns
sub
int3
and
jno
jmp
mov
pop
xor
jmp
xor
rorb
push
out
mov
rcrb
ds
sub
std
sarb
inc
rcl
sub
jp
sarl
push
add
mov
fwait
pop
daa
aaa
enter
fwait
and
sub
add
jb
cmp
xor
outsl
int3
nop
dec
or
stos
jo
mov
ja
adc
lds
dec
sbb
xchg
outsl
repnz
xor
into
leave
add
cwtl
dec
insb
sub
push
cld
cmp
in
into
xchg
jns
in
mov
inc
pop
jecxz
shlb
pop
dec
gs
xchg
jb
std
ret
and
sbb
mov
push
push
cltd
les
popf
adc
ret
mov
popa
icebp
jo
mov
in
pop
adc
jne
pop
mov
inc
mov
movsl
outsl
hlt
push
sbb
jb
daa
xchg
pop
add
xchg
jg
aaa
push
outsl
fcoms
icebp
sub
out
jle
fldcw
int
jno
add
jl
mov
dec
test
and
jne
lret
fucomp
in
push
cltd
jno
cmp
xor
mov
in
stc
adcl
jp
addl
mov
call
inc
test
pop
imul
leave
sub
pop
bswap
sbb
inc
dec
jle
cmc
nop
cmpsb
xor
jle
sti
mov
ja
nop
cltd
add
or
and
aaa
repnz
cltd
mov
mov
adc
mov
jecxz
nop
lds
shll
insb
mov
in
fsubs
popf
pop
insb
adcl
nop
pop
js
and
lret
push
icebp
je
mov
push
xor
dec
mov
xchg
aad
add
or
into
aam
xor
test
jl
adc
push
sub
pop
mov
mov
xor
fiadds
lcall
mov
je
xchg
or
add
sbb
cmp
movsl
cmp
jg
dec
outsb
jg
aaa
clc
out
pop
dec
dec
jbe
sub
stc
mov
arpl
das
aas
shl
mov
shld
out
fldenv
lds
or
out
push
dec
je
scas
fxtract
daa
ja
mov
pop
out
out
movb
or
cmp
jnp
cmp
adc
mov
sub
push
mov
sub
sub
dec
mov
push
cli
cmp
ds
mov
mov
adc
pushf
in
es
in
aam
ret
dec
or
in
nop
scas
cli
test
pop
js
das
inc
cltd
jae
int
testl
andl
sub
sub
fsubs
lea
push
mov
jnp
das
jne
jecxz
into
fdivs
push
sarb
or
push
adc
mov
xorb
and
sub
add
jecxz
and
push
mov
movsb
mov
ljmp
mov
insl
sbbl
mov
mov
fldt
and
cmp
mov
lret
sub
filds
rcrb
outsl
scas
mov
lea
sahf
cmp
pop
sub
add
in
aas
or
adc
xor
and
xchg
dec
pop
repnz
popa
mov
mov
xor
push
mov
enter
pop
dec
jmp
jb
ja
pand
jae
mov
sub
fsubrl
outsb
mov
sub
dec
insl
mov
sbb
loop
jne
in
cmpsl
pop
scas
leave
sbb
dec
and
inc
or
lods
je
fdivr
inc
jns
mov
add
out
stc
xchg
and
inc
jne
adc
adc
jg,pn
pop
cmp
sti
mov
adcl
push
mov
inc
repz
int3
and
ljmp
cmp
iret
sub
sbb
fdivs
mov
dec
push
out
je
fidivs
adc
push
xor
imul
sbb
lods
ficoml
je
inc
or
pop
jns
lar
jecxz
insb
adc
inc
das
dec
outsl
lods
xor
xchg
mov
mov
sub
cmp
sub
ficomps
sub
mov
sbb
inc
popf
jae
cmp
push
inc
cmp
ss
inc
add
fcomps
jns
repz
iret
in
movntq
mov
adc
lret
push
dec
adc
fiadds
jno
stos
sbb
push
xchg
mov
sbb
inc
cld
incl
inc
fildll
test
out
shl
lahf
cmc
lds
arpl
adcl
mov
mov
pop
push
les
scas
call
jno
clc
mov
inc
rorl
out
lock
inc
mov
pop
incl
js
jo
xor
jg
jne
sahf
xchg
mov
adc
push
jp
dec
mov
movsl
sub
icebp
mov
xor
scas
add
push
mov
lds
sbb
hlt
fnop
ss
or
mov
push
cmc
stos
push
xchg
mov
iret
dec
sub
xchg
push
lret
cli
push
shll
sti
push
outsl
cmp
popa
out
rcrb
mov
and
mov
loope
hlt
ret
xchg
and
cmpsl
sahf
inc
testb
into
in
mov
mov
jbe
add
insl
inc
lret
xchg
adc
lea
nop
pop
push
repz
loope
add
mov
push
test
in
mov
mov
push
xchg
push
sub
mov
stos
mov
cmp
cli
cmp
sbb
cmp
adc
xor
lahf
or
mov
push
mov
pop
mov
fidivs
shlb
fdivrl
pushf
dec
lods
mov
ror
fsub
in
icebp
cld
add
sbb
sub
cmp
dec
push
pop
popa
insb
jno
orl
fsub
in
icebp
cld
add
sbb
sub
cmp
dec
push
pop
popa
insb
jno
orl
pop
loope
icebp
cld
add
cmp
dec
push
pop
popa
insb
jo
orb
ror
fsub
in
icebp
cld
add
mov
sub
dec
ss
fldenv
cmp
jae
inc
out
push
cmp
inc
lock
jl
cmpsb
dec
repz
shrl
mov
cs
je,pt
jae
jae
push
and
adc
cmpsl
outsb
adc
push
mov
subl
jp,pt
push
pop
out
dec
cmp
add
jecxz
clc
add
pop
jp
dec
cli
ds
jae
jp
iret
pop
xor
or
or
sub
or
mov
sahf
inc
incl
in
int3
popa
repz
or
cmp
fidivrs
into
in
outsl
cs
ret
jae
or
xchg
xchg
insl
fnstenv
adc
loope
or
xchg
imul
push
imulb
mov
arpl
mov
es
inc
adc
xlat
jge
dec
ret
nop
popl
ret
sarb
adcl
sbb
daa
add
repz
adc
call
xchg
rorl
mov
push
das
imul
jae
or
fimuls
jecxz
cmp
sbb
or
cmp
sarb
icebp
mov
mov
out
inc
xor
or
fldt
jle
push
stos
push
subl
js
mov
aaa
mov
add
jle
xchg
and
aaa
mov
mov
addr16
negb
jae
es
push
test
outsl
rcll
or
xor
popa
shlb
xchg
push
or
push
mov
xor
jecxz
repz
ret
outsb
sarl
push
mov
subl
ds
jae
inc
out
push
and
adc
ret
outsb
sarl
push
mov
subl
ds
mov
sbb
das
or
pop
mov
sbbb
and
dec
mov
and
movsl
test
xchg
push
lods
test
push
sub
aam
cmpsb
data16
sbb
push
decb
push
ss
mov
inc
jmp
mov
sub
jg
push
and
rorb
insl
cmp
jnp
bound
ljmp
jo
add
sub
in
fs
adc
fucomip
add
cli
fs
jns
repz
loope
and
je
cltd
adc
fimull
jge
jl
pop
adcb
push
in
jo
or
push
lret
push
mov
mov
test
clc
popa
add
mov
jle
adc
sub
push
nop
in
xor
or
movntps
add
int3
inc
mov
cmp
sbb
sarb
inc
pop
mov
xchg
enter
mov
fdivr
jb
sub
addr16
inc
mov
adcl
fs
aam
jo
es
push
push
cmp
mov
repz
and
js
push
fisubs
jno
iret
push
in
das
inc
add
test
jbe
lods
cmp
movsb
sbb
xchg
inc
mov
jmp
js
shrb
lock
jmp
inc
insl
pop
rcl
and
insb
jns
xchg
adc
into
loop
or
sub
repz
mov
cmpsb
mov
mov
xor
rolb
jnp
add
push
out
arpl
pusha
add
push
in
adc
out
dec
mov
jle
frstor
mov
ror
scas
loope
outsl
hlt
lret
jmp
xchg
push
lcall
mov
and
test
adc
dec
pushl
mov
scas
popa
imul
jne
aaa
jo
jp
mov
dec
addb
popf
mov
xchg
int
adc
cmpsb
int3
mov
lret
in
or
and
push
test
pop
leave
repz
xlat
xchg
lret
andb
test
adc
push
mov
mov
xchg
mov
das
in
xor
rorb
scas
pop
outsl
push
dec
adc
xchg
mov
mov
jle
cmp
mov
mov
sub
scas
inc
scas
ja
and
in
imull
aad
jae
faddp
push
outsb
mov
mov
dec
adc
notl
lds
add
dec
and
arpl
inc
cli
inc
icebp
ljmp
xchg
imul
inc
std
mov
mov
mov
cld
ret
loop
dec
cmpsl
push
test
adc
jbe
and
arpl
stos
pop
pop
xchg
imul
xor
sub
dec
add
lret
paddw
sub
pop
push
imul
lahf
sbb
pop
inc
jmp
push
push
dec
cmp
cmpl
sbb
lods
adc
es
and
mov
shl
aas
adc
jnp
cmc
cli
cmp
cltd
mov
cmpsb
xor
clc
xchg
jne
lods
add
popa
ret
addr16
cmp
xchg
adc
aaa
movsb
sub
xor
mov
xor
jl
ljmp
push
jb
mov
out
sbb
mov
jg
loop
mov
cmpsl
jmp
sub
mov
jl
push
xor
mov
std
sub
sbb
das
test
bound
roll
aad
and
push
push
jnp
pop
mov
sbbl
jne
inc
test
inc
daa
adc
icebp
fsubl
jne
push
enter
and
and
movsl
insb
and
daa
jns
jb
insl
incb
xchg
or
add
ret
js
pop
push
popa
test
adc
dec
icebp
lea
inc
sub
add
adcl
push
push
or
in
lcall
test
add
lock
mov
sub
test
sbb
popa
rclb
pop
sbb
mov
cs
mov
xchg
mulb
sub
loopne
mov
sbb
repnz
out
movsl
es
fcmovnu
jns
inc
movsl
mov
pop
xor
ljmp
pop
sti
mov
jo
aaa
sub
mov
push
lea
jae
rcll
mov
movsb
push
mov
test
sbb
ljmp
dec
addb
push
test
dec
pop
pop
gs
iret
lret
mov
mov
cmc
jl
int
or
lds
daa
clc
mov
sbb
mov
inc
xchg
je
into
sbb
xchg
jle
add
aas
ficoml
xor
push
pop
sarb
jns
xorl
loop
shlb
xchg
out
and
or
and
cmp
call
and
daa
jns
and
or
push
fs
cli
cmpsl
movsb
cmp
xchg
adc
sbb
loopne
mov
sbb
mov
jnp
cs
push
fistps
sahf
lret
mov
mov
pop
imul
jcxz
jmp
pop
es
sub
mov
loopne
test
in
mov
push
aam
xor
mov
cmp
std
out
jbe
and
mov
xchg
gs
xor
or
jg
sub
rcl
add
test
adc
push
dec
lss
dec
cmpsb
xchg
xor
jo
dec
push
out
push
scas
bound
push
dec
mov
dec
push
inc
mov
in
xchg
mov
xor
ds
sub
xor
cmp
push
mov
jb
add
sbb
arpl
mov
test
clc
fwait
sbb
idiv
pop
int
inc
mov
in
jns
or
mov
xchg
ficoml
push
cs
or
and
sahf
fmull
sub
jg
xchg
sbb
adc
and
mov
cmp
std
push
loopne
xchg
aaa
daa
sub
cli
rcrl
mov
int
shr
int
mov
pusha
mov
xchg
mov
call
and
stos
lds
or
cmp
xchg
ficompl
in
das
jp
and
inc
scas
jno
pop
rclb
stos
sub
mov
add
push
xchg
dec
cltd
hlt
cwtl
sbb
in
cmp
jge
loop
xorl
inc
and
and
push
inc
pop
xchg
xor
mov
cwtl
pop
or
and
cmp
hlt
push
leave
adc
mov
dec
cli
xchg
aad
pusha
add
lret
lahf
dec
jns
into
mov
pop
pop
add
outsb
push
out
inc
xchg
popf
outsb
in
mov
jno
push
test
adc
lods
or
in
ss
fimull
movsl
jl
lods
inc
adc
loop
pop
in
js
ficompl
xor
sub
mov
inc
loopne
inc
mov
enter
jp
aaa
pop
xor
mov
jno
push
pop
mov
dec
dec
ds
fiadds
or
or
cwtl
addl
cmpsl
mov
dec
in
pop
pop
popa
mov
ja
fisttpl
mov
repz
leave
fisubrs
dec
sbb
sub
jmp
ljmp
lcall
and
outsl
scas
add
fisubs
sub
imulb
or
movsb
enter
fdivrp
push
sbb
dec
addr16
mov
or
mov
jbe
icebp
xor
lret
cmp
mov
and
sub
xchg
xchg
xchg
repnz
test
jo
jmp
jo
shlb
and
outsl
mov
into
stos
enter
pop
push
mov
mov
dec
fistps
and
insb
rcll
arpl
jbe
jmp
int
adc
sahf
cmp
push
std
jo
jnp
lods
xchg
add
jnp
push
bound
bound
sub
outsl
jge
aaa
sub
das
filds
mov
inc
sbb
pop
and
mov
or
icebp
add
mov
cmp
add
std
in
jle
adc
es
push
jns
fcompl
sbb
push
jns
push
pop
lcall
cs
mov
add
int3
addr16
jl
and
dec
mov
fdivs
cmc
inc
xor
xor
mov
xchg
addl
dec
repz
mov
pop
int
sbb
and
movsl
outsb
lret
lret
or
ret
clc
adcb
test
popf
ja
aas
je
mov
add
pop
cmpsb
daa
idivl
or
mov
lcall
xor
into
jnp
jo
jno
imul
fsubp
xchg
in
loope
lahf
test
sub
mov
push
out
add
xor
jno
inc
mov
repnz
jl
pushf
pop
lret
lcall
in
test
insl
ret
adc
mov
into
in
stos
inc
scas
and
fildl
lods
in
inc
xor
repz
mov
fldl
mov
inc
mov
cwtl
cmpl
stc
enter
inc
add
or
mov
aaa
fnstsw
adc
leave
xlat
aas
stos
add
cmp
push
and
mov
sahf
mov
sub
sbb
repnz
int3
shl
mov
fcomi
in
or
andb
bnd
or
inc
jo
adc
out
adc
or
inc
gs
aam
repnz
repz
insb
outsl
out
cmp
gs
mov
push
bound
jo
mov
ds
adc
shlb
sub
repz
scas
popa
in
mov
mov
jp
out
mov
mov
pop
fsubs
dec
sbb
cmpsb
lcall
test
push
movl
add
ret
dec
ret
cld
lds
decl
push
ss
aas
int
push
xchg
sub
rol
cmpsb
mov
push
push
adc
add
and
cmp
cltd
adc
pusha
sub
notl
inc
imul
aam
pushf
lds
call
popa
cs
mov
add
unpcklps
adc
mov
ja
dec
and
sbb
mov
inc
or
sbb
and
mov
jne
fidivl
pop
insb
lods
andl
cwtl
movsl
adc
lea
iret
popa
lods
push
cmp
mov
loope
test
sub
jecxz
aaa
jne
sbb
aas
sahf
dec
punpckldq
fsubrp
inc
cwtl
in
subl
lea
xorb
pop
or
icebp
pushf
or
and
pop
and
fbld
gs
fidivl
mov
adc
push
jmp
andb
stos
repz
cmp
cli
bound
orb
aaa
sbb
mov
cmp
clc
pop
sbb
mov
xor
int3
adc
sbb
dec
mov
insl
test
in
mov
test
outsb
mov
xlat
adcb
outsl
add
inc
add
sahf
pop
test
out
out
fstps
xchg
mul
out
adc
pop
mov
sub
ss
vcomisd
cmp
out
jb
push
sub
int
fiaddl
sbb
int3
adc
xor
or
dec
sbb
sub
inc
scas
jg
mov
mov
cmp
jg
cltd
mov
movsb
push
repz
je
es
jmp
add
jae
and
and
repnz
outsl
pxor
es
cmp
mov
fwait
push
add
jmp
fninit
sub
sti
jge
scas
lret
xorl
xorl
imull
jo
pop
jp
clc
and
mov
je
bound
push
aaa
cltd
aas
popw
adc
sbbl
jg
pop
jmp
ja
pusha
adc
sbb
cmp
rorb
and
xchg
dec
mov
jbe
ret
push
push
lods
sti
pop
inc
les
jbe,pn
push
inc
ds
shrb
cmp
addr16
stos
mov
fs
movsl
sub
jmp
xchg
aad
inc
jmp
xchg
xchg
add
sub
addr16
idivl
push
pop
jne
jp
loop
pop
insl
inc
stos
popl
push
lcall
dec
pop
enter
sub
cmpsl
xchg
push
cld
nop
in
sub
nop
fldl
cmpl
adc
push
pusha
insl
add
sbb
fisubrl
sub
xchg
sbb
cmpsl
mov
mov
cmpsb
movsb
inc
fs
pop
push
xor
scas
addr16
push
pop
fwait
mov
mov
mov
outsl
inc
xchg
in
test
xorl
pop
add
or
test
out
or
mov
sbb
int
inc
cli
mov
sub
inc
push
sets
mov
mov
repnz
xchg
sti
sbb
shll
leave
push
mov
inc
jecxz
sbb
filds
jg
xor
andb
call
lret
aam
pop
sub
test
xor
xchg
jb
jecxz
repnz
fucomip
cmc
les
icebp
sbb
mov
xchg
ret
insl
pop
push
sti
outsl
push
lret
mov
mov
mulb
es
cmp
push
rclb
xor
leave
mov
in
iret
and
xchg
lret
fadd
inc
pop
and
adc
insb
add
dec
push
in
aad
sub
sub
ret
dec
fcomps
adc
mov
mov
setnp
pop
add
pop
adc
xchg
inc
and
pusha
mov
add
or
jg
xchg
dec
and
dec
into
xor
test
push
mov
mov
xchg
hlt
andb
imul
gs
xlat
push
xchg
cli
push
fidivrl
in
mul
jg
fidivs
add
fdivl
and
mov
ret
cmpl
shrb
jno
retw
add
jmp
mov
das
roll
dec
hlt
jnp
ja
pop
mov
ret
cld
push
pop
out
or
jbe
gs
in
addr16
inc
rorb
test
add
ret
rcr
cwtl
dec
cmc
xchg
mov
push
ss
das
dec
pop
call
jp
int3
sbb
mov
js
gs
leave
dec
sub
pop
xchg
sbbb
mov
loope
repnz
stc
mov
adc
lods
dec
sti
mov
and
fnstcw
dec
clc
stos
mov
sbb
test
call
fs
je
test
xchg
lods
sahf
xchg
imul
rclb
mov
sahf
sbb
out
dec
sub
scas
sbbl
cmpsb
and
std
ret
jmp
add
mov
andb
mov
lahf
pop
inc
push
push
adc
jns
aaa
popf
lcall
sar
rclb
jle
or
adc
stos
leave
add
int
popf
cmpsb
scas
ret
cmp
add
fmul
push
cmpb
pop
in
mov
mov
xor
sub
stc
inc
pop
xor
and
adc
sahf
mov
sbb
push
xlat
sbb
sbb
mov
aad
cltd
fstpl
jecxz
fimull
scas
pop
adc
xor
push
stc
mov
pushf
xor
pop
mov
cmp
in
int3
jnp
shlb
loope
lahf
adc
dec
lea
mov
lock
sub
mov
ret
mov
xor
cmp
int
scas
sti
jmp
jecxz
repz
jle
pop
repnz
jg
mov
rcrl
inc
shll
sbb
aam
adc
adc
dec
inc
andl
mov
sahf
les
mov
jbe
xchg
jae
call
jns
cld
and
int3
and
sub
lret
add
fs
lea
jb
jno
cmc
xchg
fsubl
sbb
add
mov
jno
cmp
jne
cmp
and
mov
repnz
mov
test
mov
push
mov
call
testl
aas
inc
nop
addr16
mov
shll
lods
xchg
shlb
cwtl
movsl
cltd
iret
pop
sbb
cmpsl
sub
sbb
cmpb
stos
cmp
movsb
dec
sbb
mov
scas
cmp
push
outsl
lods
pop
nop
in
sub
sbb
push
mov
insl
dec
pop
movsl
fs
adc
inc
movb
mov
ss
cltd
cmpsw
pusha
clc
shl
mov
sub
mov
fstp
cmpsl
xchg
mov
mov
inc
xchg
aaa
scas
leave
lahf
ljmp
xor
test
pushf
dec
cli
pop
or
pop
mov
inc
cmp
mov
jae
and
ret
dec
add
popf
and
adc
sub
rolb
jb
stc
pop
aas
fcmovne
jg
mov
dec
sub
pop
pop
mov
lahf
mov
pusha
adc
cwtl
push
adc
sub
pop
and
pop
jo
add
in
and
adcb
jns
push
aaa
jecxz
jge
push
xchg
adc
sub
jl
or
xlat
roll
jo
in
mov
pop
cld
shlb
sbb
scas
pop
and
sbb
xlat
mov
dec
jg
mov
and
jbe
jp
push
movb
inc
xor
cmp
jo
dec
loopne
mov
dec
sub
adc
stc
fistpll
rorl
dec
das
cmpsl
enter
cli
ror
test
dec
jecxz
dec
mov
pop
jle
xor
ret
mov
out
sub
adc
mov
mov
sahf
ljmp
pusha
dec
rorl
pop
in
shl
inc
push
movl
sub
add
adc
adc
pop
dec
xor
call
mov
mov
sbb
mov
dec
enter
and
lock
xor
xchg
dec
movsb
push
loopne
sub
adc
pushf
dec
dec
pop
mov
dec
xor
je
push
pop
loop
mov
movl
sti
fcmovnu
jmp
cli
jecxz
or
mov
les
js
enter
cld
sbb
testl
cmpsl
cmp
cltd
jb
push
adc
clc
jnp
movsl
fimull
pop
push
or
pop
movntps
int3
xchg
inc
stos
out
gs
sti
imul
push
in
loop
adc
es
lea
fsubl
fidivrl
push
lods
test
xorl
xor
orb
inc
pcmpgtb
add
mov
or
add
jle
xchg
fimull
in
arpl
cmp
jns
fldl
mov
push
int
lock
mov
dec
and
add
mov
xchg
xchg
lods
cmp
out
push
test
and
add
xchg
add
rcrl
mov
ret
xchg
imul
sub
popa
mov
or
inc
test
jge
push
inc
stos
lahf
adc
clc
sar
xchg
int3
push
pop
sbb
scas
dec
in
mov
into
xchg
insl
xchg
lds
sti
adc
mov
out
jmp
and
inc
xor
addl
push
loop
mov
shl
cmp
mov
adc
xlat
rolb
cmp
sub
stos
cmp
inc
push
add
mov
negb
test
dec
xacquire
adc
dec
cmpsb
lcall
mov
das
mov
or
imul
mov
dec
jg
into
sbb
pushf
push
iret
adc
dec
das
push
push
jge
movaps
lock
and
mov
jg
sbb
push
in
mov
add
iret
cmp
ja
xchg
ret
imul
push
add
cmp
andl
inc
xor
out
pop
imul
test
out
add
aad
mov
xchg
mov
mov
gs
dec
add
or
or
and
jecxz
gs
pop
dec
push
fwait
loope
push
add
push
push
ret
inc
jge
cltd
sbb
push
cmp
xchg
add
adc
xor
cmpsb
adc
sbb
jge
in
xlat
fdivr
je
push
stos
mov
testl
inc
int
xor
test
adc
mov
cmp
sub
shlb
inc
mov
test
sti
mov
mov
or
and
mov
xchg
lods
pop
pop
pop
and
enter
cmp
mov
rcrl
mov
jg
jb
mov
imul
hlt
scas
js
push
fcoml
cmp
fcompl
aam
mov
xchg
sti
cmpsl
call
lahf
sub
mov
pop
push
out
mov
dec
adc
andl
fsubrl
add
shrb
xchg
and
jp
pushf
push
sbbl
testb
pop
cwtl
adc
xor
jge
shr
xor
xor
adc
or
iret
add
sti
das
adc
push
cli
adc
jl
lea
dec
dec
scas
repnz
arpl
fdivrl
xor
insb
mov
jno
popa
sub
in
mov
mov
fidivrs
lahf
mov
jns
cmp
mov
iret
cli
cmc
jo
add
jmp
mov
push
gs
cld
out
insb
push
adc
xchg
mov
mov
pop
sub
nop
jmp
mov
je
pop
loopne
fidivs
out
push
and
adc
ret
outsb
sarl
push
mov
subl
ds
jae
inc
out
push
and
adc
ret
outsb
sarl
push
mov
subl
ds
jae
inc
out
push
jmp
mov
sahf
add
repz
outsb
sarl
movzwl
subl
ds
into
inc
fidivs
push
cli
and
xchg
inc
sbb
or
imul
loope
shrl
mov
mov
movsl
lret
ss
daa
sbb
sub
cmp
gs
inc
push
jp
mov
mov
xlat
ljmp
pop
sub
cmp
push
pop
push
push
jp
mov
mov
iret
ljmp
dec
pop
jg
ja
or
fdivrp
enter
icebp
mov
push
popa
add
jmp
pop
inc
jg
dec
loope
and
out
idivb
aas
out
push
loop
lock
push
in
aas
stc
pop
daa
dec
ja
push
push
sub
pop
xchg
fs
xor
arpl
sbb
scas
pusha
pop
fcoms
ja
fwait
pop
push
out
inc
ret
mov
pop
andb
sub
es
scas
clc
fimull
pusha
inc
jnp
sub
sbb
addr16
or
push
lcall
push
push
aad
ds
sbb
test
push
test
inc
pop
sarb
in
and
iret
mov
push
push
das
xor
or
inc
outsl
jle
mov
mov
xlat
ljmp
cvtpi2ps
cmp
jg
dec
push
adc
mov
fcomi
stos
repz
lcall
sbb
dec
ja
add
and
out
clc
iret
idivl
xlat
adcl
jns
pop
ja
or
and
adc
sti
fsubr
fistpll
ljmp
pop
sub
cmp
addr16
push
push
jp
mov
mov
xlat
ljmp
pop
sub
cmp
addr16
push
push
jp
mov
js
mov
add
sti
push
pop
mov
xchg
and
xlat
je
rclb
xchg
aas
jbe
xlat
out
aad
jno
jecxz
push
push
sti
push
fwait
push
dec
add
or
out
push
jb
add
jbe
jnp
loopne
popa
cltd
out
dec
push
aad
dec
cmp
jecxz
mov
mov
pop
out
adc
dec
mov
sub
cwtl
cmp
lret
ret
in
mov
daa
inc
imul
push
and
push
aaa
inc
jns
adc
push
adc
scas
scas
in
cli
loopne
imul
inc
int3
je
jge
or
adc
sub
leave
sti
push
xchg
cmpsb
add
lret
inc
es
sti
int3
cs
lea
imul
imul
add
icebp
insb
sbb
xchg
and
push
stos
add
push
sub
xlat
xchg
xor
repz
bnd
in
lahf
ficomps
lahf
pop
lods
dec
outsb
test
pusha
push
adc
repz
push
fs
or
pop
sahf
jne
nop
or
push
je
mov
mov
stos
jmp
cmp
xchg
push
push
jle
add
mov
cld
lret
dec
xchg
xchg
pop
nop
stos
movsb
jo
test
sbb
push
or
dec
xchg
xor
xchg
jecxz
push
mov
test
push
nop
in
ret
jbe
mov
or
jl
pop
fldenv
les
cmp
rep
mov
pop
adc
ds
bound
push
mul
ret
push
lcall
push
xor
movsl
rcl
pop
jg
mov
out
sbb
outsw
cmp
es
loopne
adc
push
push
push
lcall
mov
or
mov
cs
push
mov
adc
sahf
data16
mov
dec
or
pushf
cmp
and
idivb
int3
stos
cmp
popf
push
adc
fidivrs
movsb
outsl
jo
jp
movsl
fildl
fdivr
sub
jle
jmp
sub
pop
into
js
arpl
push
pusha
jno
jb
out
pop
xchg
add
push
inc
outsb
in
xor
inc
dec
pop
aad
jnp
cld
xchg
call
scas
lea
sub
sub
xchg
jnp
pop
data16
mov
lret
mov
mov
sub
stc
push
or
jb
mov
xchg
das
outsb
sub
movl
andl
lea
scas
fwait
xchg
cmc
xor
inc
mov
shll
lock
jb
cmpsb
or
xlat
movl
mov
mov
jl
test
cltd
lds
arpl
push
pop
xor
jmp
rolb
fnstenv
rcr
adc
icebp
ret
outsb
int
xchg
int
out
xchg
dec
sub
mov
xchg
idivb
push
into
test
push
cmp
pop
xor
scas
les
add
enter
jbe
gs
jmp
lret
scas
rol
sbb
scas
lods
ret
push
fcmovnu
mov
mov
orb
push
xor
test
mov
adc
push
xorb
or
je
gs
mov
and
lock
daa
cmp
ljmp
mov
mov
in
int3
fadds
pop
das
scas
jbe
out
mov
inc
xor
punpckldq
and
addr16
jns
fldcw
shlb
jo
and
sub
jns
rcr
sahf
pop
sub
clc
push
repz
sub
lcall
orl
jecxz
sbb
mov
addr16
xor
mov
ja
repnz
mov
dec
adc
or
rcll
scas
mov
add
jmp
inc
je
fldl
mov
xor
cmpb
inc
icebp
xchg
sbbl
inc
stos
adc
xchg
daa
push
mov
push
mov
test
adc
mov
test
in
push
inc
imul
inc
adc
popa
and
sub
mov
dec
add
push
or
or
push
call
fsubs
fdivl
mov
adc
jecxz
lret
mov
xor
mov
outsl
in
ja
mov
movsb
mull
mov
mov
leave
out
xchg
js
push
push
repz
xlat
cli
push
sub
movsl
negl
push
stos
int3
sahf
dec
inc
mov
or
mov
sbb
xchg
sbb
lods
xlat
lret
lock
lahf
test
and
popa
mov
mov
sbb
pushf
add
pop
jle
dec
mov
lea
jl
dec
xlat
sbb
xchg
hlt
pop
mov
mov
mov
iret
pop
enter
mov
lods
xchg
ljmp
std
roll
popa
pushf
mov
jg
inc
xor
mov
ljmp
jno
daa
out
xchg
mov
add
sbb
inc
xchg
test
arpl
lods
mov
and
call
ljmp
mov
icebp
cmpsl
sub
and
cmp
xor
jp
adc
mov
sbbb
daa
fimuls
or
insb
jge
data16
jae
test
in
cmc
inc
xchg
sti
inc
das
std
arpl
push
push
pop
xor
stos
sahf
sarb
xor
arpl
xlat
mov
bnd
fcmovu
pop
aam
mov
adc
pcmpeqw
xor
pop
push
push
mov
jmp
xchg
js
cmp
xchg
pop
xchg
out
aam
dec
scas
xor
xor
jmp
aad
fs
add
adc
ret
and
pop
sbb
testb
pop
cmpsl
rclb
mov
out
out
mov
sbb
jbe
inc
adc
inc
add
inc
xlat
sti
xchg
cmpsl
out
push
jle
sete
test
add
xor
pop
and
test
filds
xchg
xchg
mov
pusha
and
jmp
pop
mov
mov
sub
add
das
ja
or
inc
mov
xchg
cmc
loope
cmpsb
data16
cmp
push
pop
cmp
loopne
addl
js
mov
stc
pop
fidivrl
push
sbb
xchg
lret
and
jo
stos
cs
int
push
xchg
dec
fildl
pop
push
int3
xchg
ret
das
stos
mov
mov
jg
insl
jo
cmp
lock
leave
push
lods
fs
mov
fs
scas
dec
jge
jae
imul
cwtl
sbb
cmp
mov
lods
std
inc
dec
int
adc
out
addr16
inc
sahf
pop
xchg
sbb
mov
mov
cmp
jg
notl
push
rorb
fnstsw
jno
inc
dec
test
mov
cld
xor
jge
cli
out
ss
mov
test
ljmp
aaa
or
cmc
adc
popa
mov
adc
mov
pop
add
xor
ret
mov
lahf
in
fdivrs
adc
call
adc
ss
aaa
add
mov
aad
jle
test
and
sub
sahf
mov
movsl
add
cmpsb
fldcw
test
push
mov
push
cmpsb
sbbl
repz
sub
dec
dec
mov
inc
sbb
sbb
push
roll
inc
lahf
cmp
push
jne
xor
push
cmc
in
test
inc
ficompl
lea
jnp
shll
mov
cmp
addr16
insb
or
fwait
xor
add
scas
mov
ljmp
push
fstpt
test
stos
int
fs
jle
fdivl
cmp
leave
imul
cmp
dec
mov
imul
add
aaa
add
inc
out
cmp
add
add
sbb
addr16
jl
js
mov
dec
pop
shll
xchg
addr16
imul
mov
mov
movsl
mov
or
repnz
jecxz
push
leave
ret
push
sti
mov
shlb
mov
add
loope
dec
add
insl
das
xchg
mov
xor
mov
cmc
aaa
jbe
out
inc
push
gs
mov
push
push
and
push
cmp
pop
push
push
and
fistpl
incl
lock
int
mov
dec
mov
cmpsl
mov
fcoms
xchg
ret
clc
xchg
xchg
scas
insl
ret
xchg
imul
fldt
jp
push
mov
and
int
pop
push
push
lock
rorl
fcomps
xlat
aaa
pop
subl
fucom
ret
les
iret
cmc
arpl
test
test
popa
fld
dec
inc
ds
sub
jae
adc
sbb
pop
imulb
dec
xchg
stos
sub
gs
jg
push
xor
inc
test
cmp
imul
pop
mov
adc
stos
jge
cltd
daa
or
dec
mov
scas
lret
and
lea
xchg
dec
test
mov
lods
xor
lret
cmp
and
lds
jl
jl
pop
mov
lods
mov
pop
cmp
cld
bswap
jle
scas
imul
sub
sahf
loop
das
andb
sbb
dec
sbb
xchg
xor
jg
ljmp
and
imul
test
test
xor
ficoms
sbb
movsl
adc
aas
xchg
std
arpl
addr16
xor
xchg
les
pusha
add
sahf
inc
testb
jnp
ffree
into
or
shrb
jge
scas
cwtl
inc
pop
fimuls
and
lret
xor
pop
jp
sub
into
out
mov
or
xchg
push
and
test
punpckhbw
push
inc
pusha
mov
movsb
lret
jnp
mov
scas
xchg
enter
insb
sbb
fidivl
or
inc
mov
xor
std
mov
inc
fcmovne
ficoml
and
mov
imul
scas
popf
repnz
inc
mov
lahf
xchg
mov
pop
bound
adc
addr16
aas
pushf
jnp
jno
outsl
sub
jne
sub
sub
gs
popf
push
repz
mov
fs
filds
ret
mov
mov
cs
xchg
push
inc
or
sub
adc
fidivrs
inc
repnz
adc
pop
adc
outsb
jnp
mov
mov
out
xor
popa
add
push
sbb
shll
and
xor
xor
cli
fwait
incl
push
jp
xchg
push
and
sbb
adc
mov
and
inc
sti
and
pusha
sbb
js
imul
popa
xchg
sub
sbb
lds
sti
sbb
add
movsl
add
dec
or
xchg
cli
sbb
mov
push
mov
mov
xlat
push
lahf
sub
js
leave
mov
mov
pushl
dec
cmp
aam
add
dec
xchg
out
mov
jp
out
cmp
fisubrs
lahf
pop
outsb
pop
mov
pop
sbbl
testb
mov
lret
fmuls
shlb
loope
popa
mov
fisttpll
pusha
dec
scas
cld
push
xor
loopne
pop
adc
out
movsl
sbbb
cmp
das
shll
test
sub
push
sbb
and
in
mov
loope
mov
sub
mov
shrl
popa
pop
out
and
cmc
pop
cmpsb
in
test
pop
and
mov
xlat
sbb
je
cmp
popa
lret
mov
loope
mov
testl
aad
out
xchg
ds
mov
stos
adc
std
inc
dec
lods
mov
pop
shld
scas
and
sub
test
imul
in
adc
cmpb
or
push
lahf
stc
out
hlt
jp
shlb
sub
pop
and
push
insl
lahf
dec
icebp
push
inc
aad
mov
or
aad
inc
test
pop
leave
sbb
dec
jbe
cltd
mov
mul
cmp
js
paddb
imul
mov
or
icebp
sahf
or
in
adc
std
pop
cld
mov
push
fs
cmp
sub
in
cmpsl
cltd
fwait
push
inc
fcoml
push
and
iret
fnstsw
gs
inc
int
pushf
mov
movsl
xor
ret
add
push
addr16
xlat
and
and
jo
into
sbb
in
movsb
xor
sbb
dec
sti
mov
cs
loope
xor
mov
and
xlat
mov
int
inc
in
xchg
testl
xchg
adc
mov
dec
cld
insl
scas
and
add
lds
xchg
movsl
sahf
sahf
sarl
mov
loope
push
inc
jnp
jg
sbb
lock
sahf
lret
lret
popf
push
loopne
stos
out
incl
gs
out
mov
pusha
aad
lods
push
fsincos
and
xor
in
jp
pop
idivl
or
and
iret
aaa
add
jo
ficompl
mov
int3
xorb
ret
jb
pop
loop
cmp
or
cmpsl
mull
jb
push
pop
mov
imul
xchg
call
xor
stos
cmp
out
adc
shl
neg
enter
sub
imul
dec
out
test
mov
mov
xor
and
push
lods
sbb
cmc
push
or
or
nop
adc
cmpl
pop
pop
mov
repz
sbb
xor
sub
mov
sar
xchg
or
cmpb
orl
shl
fdivrs
insb
jg
sub
xchg
mov
cmp
sbb
shrb
jge
shll
mov
or
sub
sahf
dec
jl
jge
stos
pop
ret
sub
cmp
pop
scas
push
push
and
cs
repz
movsb
lcall
jge
add
mov
push
jmp
fwait
test
lock
pop
ret
jb
ffreep
mov
jp
ds
cmp
and
shrl
fsubl
std
cmpsb
mov
sahf
mov
inc
dec
addr16
inc
adc
pop
das
rorl
xor
adc
loopne
push
andl
mov
cmp
popa
test
movsl
pusha
icebp
imul
test
insb
mov
shrl
sbb
cmpsb
bound
imul
xor
pop
pop
aam
xchg
inc
dec
enter
leave
jno
movsl
test
mov
add
xchg
push
loopne
aad
in
push
cli
add
int
call
fcompl
xorl
mov
jmp
jg
cmc
lds
mov
xchg
inc
pop
sub
mov
or
add
mov
pop
sbb
cmp
mov
and
dec
dec
jp
and
jg
lock
jne
repnz
cmp
addl
test
mov
push
sbb
dec
mov
je
lods
mov
jp
xchg
or
mov
fisubs
xchg
pop
pop
ja
icebp
pop
clc
fldcw
lahf
pop
and
xorl
ret
fcoml
sub
or
in
test
sub
flds
sbb
inc
mov
out
pop
imul
xchg
js
cmp
pop
jnp
ljmp
insl
xchg
push
clc
outsb
arpl
jns
xor
das
rcll
lods
out
test
push
cltd
sbb
xor
pusha
jl
fistl
jecxz
sbb
mov
pop
jo
push
and
push
or
adc
out
les
in
sbb
xlat
lahf
mov
adc
mov
xchg
mov
sbb
mov
mov
push
or
or
lods
xor
pop
aam
arpl
stos
cmpsb
pop
xorl
dec
ror
sub
popa
mov
adc
outsl
pop
xchg
mov
or
aam
mov
fnsave
aaa
enter
andb
cwtl
shrb
test
scas
sbb
push
cmp
mov
xor
cs
iret
in
mov
mov
mov
push
xor
inc
scas
orps
push
je
push
sub
jb
sbb
jmp
scas
movsb
add
movsl
inc
mov
ret
lcall
xchg
jae
jp
jnp
cmc
and
mov
push
sbb
bound
sbb
popa
rolb
ljmp
test
jns
clc
sahf
pop
ret
mov
jecxz
add
and
or
xchg
push
orl
lock
pop
in
push
pop
addr16
push
pop
inc
rcr
inc
jnp
sbb
and
jae
setge
mov
imul
adc
shrb
mov
cld
inc
aam
pop
jecxz
aaa
into
fadds
inc
scas
cmp
jne
pushf
adc
inc
fnstenv
jns
in
in
inc
enter
xor
push
cwtl
jae
rcrb
outsl
mov
mov
inc
mov
sbb
sbb
sub
loope
mov
pop
inc
das
sbb
shlb
dec
jo
fadd
jne
mov
push
sbb
dec
mov
movsl
sub
pop
filds
out
rcr
jmp
add
mov
filds
sbb
mov
ret
test
js
fldl
fisubl
xor
pop
addr16
imul
push
inc
xor
sub
outsl
arpl
mov
push
hlt
sbb
lahf
mov
push
out
sbb
stc
push
xor
add
push
jl
ja
fisubrl
inc
cli
inc
jno
push
ljmp
arpl
movsl
dec
faddp
in
sti
imulb
jb
mov
xchg
sbb
dec
xor
jns
xchg
fdivs
call
aam
stc
pusha
jae
dec
mov
add
adc
addr16
jae
loop
lods
inc
mov
lds
xchg
je
dec
push
xor
shl
mov
pop
stos
jge
dec
lea
add
sbb
out
cmpsl
sbbb
mov
das
sbb
cmp
sbb
adc
push
fdivl
lock
daa
and
dec
insb
cmp
xchg
insb
fstl
enter
jns
fbstp
pop
fbstp
push
pop
test
xchg
mov
dec
push
iret
test
lret
sti
add
xchg
lds
in
sahf
dec
inc
push
lret
mov
ficoms
inc
push
clc
xchg
mov
outsb
imul
cs
lahf
xchg
in
test
sti
xor
jg
mov
sahf
xor
and
xchg
in
pop
jbe
shll
mov
lcall
sbb
movsl
pushf
push
shll
lret
dec
sbb
es
fcmovnu
push
add
icebp
fstl
ret
mov
lea
mov
fiaddl
dec
or
jge
inc
vmovups
addr16
or
cmp
push
test
out
enter
ja
mov
xchg
mov
pop
ret
out
cs
sti
add
outsb
je
callw
ss
mov
pop
cmp
nop
les
push
out
repz
inc
mov
jge
xchg
aad
xchg
mov
pop
pop
xor
loop
cmp
dec
call
mov
adc
or
inc
mov
push
ror
addr16
mov
xorl
pusha
mov
cs
pop
add
xchg
push
iret
sub
or
mov
popa
popa
pop
orb
mov
out
dec
mov
ret
outsb
inc
iret
mov
adc
push
jae
push
jb
jecxz
sub
xor
push
lret
cli
jo
sbb
out
sti
jle
popa
sub
sub
mov
lcall
mov
rorb
cs
xlat
or
xor
cmp
add
mov
push
adc
scas
leave
and
push
movsb
cmp
call
lds
inc
mov
add
add
fcoms
pop
xor
loopne
fwait
repz
push
inc
cld
lcall
jmp
push
or
ss
mov
jbe
mov
out
nop
xchg
mov
mov
jno
iret
add
mov
pop
mov
mov
popl
sbb
pop
cld
xor
iret
daa
mov
adc
lock
es
or
lret
mov
lahf
popa
test
cmc
roll
outsb
mov
cmp
pop
inc
mov
push
lock
imull
sti
mov
jbe
stos
mov
dec
cli
add
mov
loopne
jae
dec
fdivrp
popf
test
into
ljmp
cmpsb
sub
pop
push
aad
mov
fmuls
scas
lahf
push
lods
fucomi
movsl
scas
add
cmpsl
sahf
and
shrl
into
mov
mov
inc
mov
sbb
cwtl
jg
fs
loop
sub
rol
outsb
cmp
pop
and
mov
inc
adc
mov
mov
sti
sbb
mov
pop
push
mov
adc
xor
pop
rcll
jge
cmp
mov
xchg
cmp
in
mov
adc
mov
pop
push
addr16
cwtl
pop
xchg
jp
cvttps2pi
fwait
and
loopne
daa
stc
mov
inc
nop
or
push
arpl
test
cli
aaa
or
sbb
sub
cmp
addr16
push
push
jp
mov
mov
xlat
ljmp
pop
sub
cmp
addr16
push
push
jp
mov
mov
xlat
ljmp
pop
sub
cmp
pop
push
push
jp
mov
mov
push
ljmp
mov
ret
test
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
sbb
or
imul
stos
les
imul
test
xchg
lret
mov
mov
inc
cmp
sbb
jnp
dec
and
xor
mov
hlt
jmp
sti
inc
lret
movsb
jl
insl
imul
cs
daa
mov
hlt
add
cli
test
mov
bound
js
imul
sarb
pop
inc
loopne
mov
inc
pop
fwait
out
mov
in
xchg
mov
ljmp
xchg
cmp
hlt
push
hlt
adc
out
ror
and
rol
cmp
adc
push
mov
stos
inc
rcll
pop
icebp
jno
xchg
jb
scas
pop
sbb
fs
jl
lret
stos
xchg
stos
sub
add
or
cs
aam
dec
mov
fwait
and
je
xor
fwait
mov
stc
sbb
movsb
into
dec
aam
add
ds
mov
jae
fsubp
xlat
xlat
cli
loope
pop
mov
jne
cmp
je
outsb
imul
dec
cmp
mov
in
jmp
sti
or
fcmovnbe
insl
and
outsb
gs
pop
push
xor
dec
sbb
lods
mov
fwait
mov
xchg
movsb
fldcw
cmp
push
pop
adc
jno
ja
es
inc
pop
pop
into
mov
fidivs
mov
add
sbb
imul
dec
and
xor
les
hlt
jmp
sti
xchg
lret
movsb
sbb
jnp
dec
and
xor
les
hlt
jmp
sti
xchg
lret
movsb
inc
aas
addr16
xlat
jno
cwtl
inc
fadd
push
int3
mov
decb
or
or
in
adc
inc
enter
mov
cmp
jne
xchg
addr16
mov
lods
ret
ret
cltd
mov
sahf
call
lea
and
jns
loop
ficomps
jle
and
pop
and
mov
test
xchg
fiadds
out
mov
pop
stos
fcoms
lods
sbbb
testb
pop
fwait
pusha
fs
ret
dec
fisubl
movd
jnp
loop
imulb
inc
push
hlt
xchg
je
xchg
cli
pop
dec
push
rorl
pop
pop
sub
cmp
jb
and
shrl
inc
and
mov
lret
xchg
icebp
mov
push
call
scas
mov
mov
dec
je
xchg
addr16
fdivrp
push
fidivl
jge
pop
push
loop
cs
arpl
xchg
shrl
pop
cwtl
xor
pop
mov
cmp
aaa
xchg
test
cmc
push
mov
sbb
inc
mov
push
mov
test
mov
loop
repz
scas
insl
cmp
xchg
repz
xor
pop
push
daa
mov
pop
jg
mov
cmp
xor
jae
push
inc
inc
syscall
fiadds
jbe
clc
repz
out
push
fsin
and
dec
int
push
mov
lods
and
lcall
jge
cmp
pop
mov
mov
movsb
inc
xlat
movl
scas
mov
les
sbb
add
out
add
rcrl
mov
or
adc
or
aam
rolb
pop
fsubrs
mov
xor
cmp
cmpl
pop
js
jp
push
cld
dec
sahf
and
out
pop
aad
lcall
cltd
lds
mov
insb
inc
sbb
jnp
in
push
and
push
pop
ss
inc
mov
aaa
and
xchg
rol
ljmp
xchg
out
or
les
pop
cld
data16
pop
pop
jg
cmpsb
and
js
sbb
nop
outsl
out
adc
pop
adc
sbb
pop
xchg
pop
xchg
mov
imul
pop
out
dec
sbb
jo
mov
bound
lods
dec
pop
add
call
lahf
jp
cli
outsb
aaa
dec
push
shlb
xchg
imul
push
push
lods
inc
xchg
es
add
xchg
les
adc
mov
test
push
mov
adc
pop
adc
sub
loop
nop
mov
jbe
add
cmc
cmp
lods
mov
imul
test
and
mov
rcrb
gs
xor
mov
jns
sub
rcl
sbb
jne
aas
mov
sbb
lahf
jecxz
or
xor
inc
hlt
xchg
inc
push
lret
jae
add
add
or
push
mov
cld
stos
movsb
mov
sub
in
in
gs
mov
dec
xchg
fdivr
mov
js
mov
aam
mov
xchg
or
cld
pop
sbb
fstps
sub
adc
mov
and
xor
inc
mov
push
pop
sbb
test
std
sbb
stos
mov
sbb
push
cmp
adc
mov
mov
jne
inc
inc
in
bound
sarl
xor
mov
orl
inc
push
and
movsb
and
cmp
fimuls
das
imul
in
mov
jo
outsb
loopne
jg
inc
shll
fisubs
mov
popf
sbb
dec
ffree
out
pop
add
inc
fidivrs
pop
imul
imull
test
insb
mov
xchg
cmp
push
mov
push
sti
add
in
mov
mov
push
ret
and
mov
cmp
push
out
and
xor
bound
mov
pop
test
test
fimuls
pusha
dec
fistps
and
and
jecxz
inc
pop
loop
xchg
mov
fwait
fs
gs
sub
or
cmpsl
jno
fcmovb
aad
adc
dec
test
pop
mull
aaa
mov
dec
int
int
add
cmp
aam
in
lcall
mov
adc
xchg
fiadds
pop
in
sub
test
jo
test
mov
jno
std
mov
jge
or
jne
push
fstl
and
mov
or
lahf
iret
dec
jo
cmp
and
int
or
push
push
sarb
mov
leave
xchg
call
ljmp
out
das
ss
mov
movsb
push
gs
lcall
cld
xor
in
push
ds
notl
imul
cmc
gs
imul
lcall
xchg
shll
or
dec
and
xchg
shll
aas
hlt
dec
repnz
dec
or
lods
aaa
in
cmpsb
scas
movsb
or
aaa
xor
loope
cmp
xchg
mov
xor
lret
pop
subb
push
cli
fs
sti
rolb
arpl
pop
gs
out
jmp
roll
pop
xchg
push
stc
pop
mov
lea
mov
enter
push
adc
mov
sbb
xchg
testb
mov
adc
or
or
push
enter
std
pop
jnp
ret
jecxz
push
mov
cmp
dec
adc
xchg
ja
inc
adcb
sbb
sub
arpl
mov
imulb
cwtl
imul
inc
inc
push
test
jno
push
lret
loop
push
iret
mov
cld
rorl
test
daa
pop
mov
add
in
pop
pop
in
jge
packsswb
inc
inc
adc
enter
roll
adc
xor
xor
mov
pop
ds
pop
iret
cmp
les
les
inc
cli
sbb
sbb
jne
gs
test
xchg
dec
or
mov
pop
test
cmp
mov
xchg
push
jle
and
dec
push
jnp
or
rcl
xor
in
mov
cltd
dec
adc
lock
stos
enter
dec
insl
push
les
or
mov
stc
ljmp
imul
pop
and
or
cmp
xchg
test
in
scas
mov
push
pop
xchg
je
cwtl
test
fbstp
inc
ret
scas
aam
data16
adc
lea
lods
and
icebp
xchg
loop
inc
dec
jmp
ret
in
ret
pusha
popa
fsubl
dec
adc
cmp
nop
mov
inc
jg
fs
mov
mulb
sbb
outsl
lea
dec
into
loopne
addr16
movsl
cwtl
jbe
das
ljmp
inc
add
push
stc
mov
xor
cmp
cld
sub
mov
inc
jl
lret
pop
mov
adc
push
sbb
ret
sub
sub
fildl
xchg
cmp
fimull
push
jmp
jae
xor
testb
mov
inc
xor
int3
ja
rcr
inc
cwtl
inc
out
imul
rcl
nop
inc
add
or
xchg
pop
xor
mov
cmp
ret
popf
add
imul
ja
cmpsb
movl
mov
inc
mov
xor
xchg
repz
pop
mov
xchg
repz
cs
cmp
je
add
rcl
repnz
push
fimuls
push
mull
xchg
mov
test
inc
pop
sbb
pop
clc
sub
call
mov
mov
cld
xor
lock
daa
mov
push
inc
cmp
test
jo
cmp
jp
or
add
outsb
pusha
out
enter
xchg
xchg
scas
aad
push
xchg
jne
dec
cmp
lret
les
test
jl
outsb
pop
pop
xor
sub
or
ret
in
jne
sbb
movsb
lods
pop
outsl
push
add
lcall
das
xchg
cld
push
out
sbb
pop
lret
in
cltd
cwtl
cld
jmp
jae
or
das
jle
das
in
xchg
cmp
mov
sub
dec
add
mov
lret
adc
cmpsb
sub
shll
inc
xchg
sbb
mov
test
cmp
mov
lods
xchg
and
adc
mov
bound
cmp
add
dec
lds
fsubl
push
push
pop
push
mov
test
mov
insl
loope
mov
pop
mov
xchg
xchg
mov
mov
and
sub
jne
ljmp
test
mov
test
sbb
inc
mov
xchg
dec
cmp
sbb
test
imul
jb
in
pop
stos
mov
mov
dec
or
jae
cs
test
pushf
das
mov
lods
dec
push
xchg
stos
test
push
sti
jg
dec
cmp
or
jnp
lock
or
shrb
xchg
xor
into
mov
aas
push
jns
cli
cli
mov
sti
sbb
shll
cmpsb
adc
cmpsl
xor
or
call
mov
push
mov
push
inc
and
push
ljmp
cwtl
pop
jl
leave
mov
aam
mov
shl
cmp
cwtl
icebp
push
int3
dec
sub
movsl
cld
sub
test
orb
jbe
leave
fcmovu
pop
cmp
pusha
or
pop
jo
ret
movsl
fsubr
insb
adcb
pushf
scas
jo
xchg
sbb
jnp
clc
cltd
rolb
aam
pushf
icebp
cmp
mov
pushf
mov
jmp
push
movsb
dec
in
and
outsb
xor
testb
test
sbb
ret
sbb
mov
jne
push
adc
cmc
rcrb
inc
rcll
rcll
sarl
push
adc
adc
in
pop
ret
xchg
or
push
mov
mov
test
in
pushf
and
and
inc
scas
mov
icebp
fstpl
cmp
insl
frstor
mov
cwtl
sub
subl
pop
lods
mov
sbb
insl
cs
in
in
stos
mov
test
xor
test
dec
pop
into
pop
add
out
adc
xchg
cmp
cmp
test
or
out
push
pushf
int3
jns
push
lds
insl
in
xor
mov
or
ja
out
scas
or
fwait
pop
xor
jmp
dec
xchg
mov
or
xchg
cmp
gs
pop
sar
and
mov
test
lea
xchg
cmp
sarl
add
sbbb
aam
mov
ljmp
jmp
aad
push
add
ret
xchg
inc
adc
popa
daa
ss
push
add
cmpsl
ljmp
jne
or
cld
mov
shrd
push
pop
in
dec
adc
jp
out
mov
cmp
sub
mov
fldt
adc
mov
lahf
sbb
cmp
inc
out
jo
sbb
adc
jbe
aam
xor
and
shrb
dec
add
push
aaa
inc
dec
ret
xor
lret
idivl
and
out
xchg
js
or
and
pop
mov
rolb
lcall
lods
divl
in
mov
sbbb
nop
xor
out
xor
mov
rolb
jl
xchg
sub
shr
dec
jbe
jnp
mov
ret
aam
adcb
out
mov
cmpsb
out
or
fwait
dec
insl
popa
add
outsb
mov
cmp
jnp
jmp
jle
push
bound
inc
jo
jae
cltd
dec
add
and
mov
daa
jge
jle
insb
es
push
test
js
es
jl
add
adc
mov
fs
pop
test
leave
dec
jne
fdivs
aas
filds
xor
fdivl
xchg
fbld
lcall
out
mov
push
or
mov
and
into
lcall
je
cmpsl
jno
mov
adc
aaa
fdivrl
jle
stc
js
push
pop
sub
cmp
cmp
xor
and
mov
push
clc
push
mov
pop
fwait
sub
jmp
in
push
rcr
pop
xor
sbb
enter
mov
push
rcrw
call
repnz
pop
jne
push
into
cmc
mov
sbb
rorb
jmp
jne
mov
sbb
sbb
mov
cltd
xor
mov
cwtl
add
repnz
pop
ret
lds
ret
fsubp
dec
sub
pop
push
fadds
in
jae
lret
pop
les
push
cmp
test
mov
sahf
int3
pop
or
aad
add
cmc
jle
jns
fisttps
fidivrs
jl
in
or
xchg
gs
xchg
sbb
jle
out
aam
in
es
inc
inc
outsb
adc
xor
lods
and
imul
mov
xchg
adc
clc
sbb
lock
pop
test
addr16
rcrb
sahf
sbb
mov
mov
in
popa
xchg
jecxz
or
sub
cmp
adc
insb
adc
psrlq
add
aaa
js
cmpsl
xchg
ret
fsts
bnd
mov
or
sbb
inc
sbb
jecxz
fmull
adc
int3
push
icebp
push
adc
sbb
dec
lods
fmull
loop
cmpsl
lcall
ret
sub
inc
int3
mov
stos
push
scas
push
adc
adc
dec
fnstenv
ljmp
scas
fadd
outsb
mov
mov
in
ficoml
orb
aas
in
pop
mov
or
gs
or
xlat
jecxz
aas
push
xchg
cmp
mov
or
shll
xchg
mov
dec
cltd
jbe
pop
callw
inc
loop
iret
jp
lahf
mov
cltd
push
iret
mov
cmpsb
inc
sub
rorb
dec
in
xor
lock
sub
inc
std
mov
data16
mov
and
leave
dec
loopne
xchg
cmpsl
popf
jl
stos
out
stc
jge
test
sub
cmpsl
fs
and
pop
inc
shlb
test
rol
shll
repnz
call
mov
dec
xchg
pop
jne
inc
inc
lea
sbb
add
push
iret
pop
in
jo
imul
pop
int
inc
bnd
or
inc
ljmp
insb
insl
jp
push
mov
jnp
bound
cmpsl
add
loopne
inc
mov
loopne
in
sbb
cmc
xor
add
dec
xchg
pusha
ret
movsl
test
sahf
andnps
shr
mov
cmc
idiv
out
test
jne
scas
xchg
es
sbb
mov
out
and
push
jno
insl
cmp
cld
mulb
in
flds
repnz
hlt
add
rcll
adc
xchg
mov
stos
andl
repz
out
dec
stc
repz
addr16
stos
je
dec
push
mov
jge
mov
imul
fst
in
and
mov
js
mov
outsb
mov
cmp
enter
repnz
orl
ret
cmc
jp
inc
imull
jle
and
add
pop
xchg
mov
mov
mov
xchg
sub
pop
inc
inc
data16
dec
pop
data16
sub
xor
popl
and
je
enter
xlat
iret
cwtl
andl
mov
xor
xchg
and
lret
mov
dec
xor
fcoml
jg
test
sbb
mov
inc
mov
aas
jmp
ds
int
lds
or
or
push
cld
jbe
xchg
movsb
cmc
push
mov
mov
jge
xchg
cltd
lcall
xchg
push
mov
inc
out
pop
mov
inc
fucom
push
xor
cmp
mov
mov
mov
jae
in
pop
mov
mov
cld
add
lahf
ficomps
sub
pop
fstpt
les
addr16
lods
inc
jge
lcall
addr16
movsb
inc
dec
mov
test
cmp
pop
push
and
fsub
mov
sbb
inc
int3
sub
stc
push
sub
mov
repz
nop
bound
mov
rcrb
xchg
std
test
mov
scas
push
rolb
clc
enter
xor
test
adc
sbb
inc
inc
or
inc
mov
xlat
arpl
cwtl
pushf
pop
pop
cmpl
mov
xchg
jae
std
sbb
push
movsl
cmpsl
inc
scas
sub
popa
sbb
adc
test
nop
ss
shlb
push
sub
sbb
pop
add
lds
add
xor
dec
mov
xor
push
stos
shr
jns
loop
addl
mov
cmp
loope
outsl
insb
fs
imul
ss
outsl
test
xchg
pop
push
sub
add
mov
ds
sub
das
cwtl
xor
push
dec
add
jnp
mov
pop
add
jae
and
cli
cmpsl
scas
add
mov
inc
pop
xor
cmc
mov
xor
je
ss
cmp
sbbl
mov
rorb
cmp
fisttpl
mov
mov
fists
or
mov
pop
std
xchg
cmp
arpl
loop
divl
mov
pop
pop
clc
jnp
and
sbb
negl
test
fidivrs
insl
shrl
dec
pop
pop
mov
loop
cmpsb
sbb
mov
repz
dec
jbe
mov
lret
pop
popf
call
dec
ds
sub
pop
cli
in
push
push
les
or
push
insl
insb
sub
jmp
mov
ffree
dec
or
je
notl
pusha
mov
inc
cmp
sahf
ficomps
lods
pop
int
mov
nop
ret
fstl
pop
xchg
movsl
xor
mov
hlt
jne
fcompl
inc
mov
call
les
push
call
ds
and
std
outsb
les
mov
hlt
mov
pop
btl
dec
jmp
lret
out
xchg
lds
xor
pop
cmp
movsl
mov
jge
xchg
in
mov
ret
ja
and
inc
cli
pushf
rolb
and
lahf
out
dec
xor
and
nop
popa
outsl
mov
loope
rorb
mov
jb
pop
mov
repz
and
repz
das
sti
sub
ret
outsb
push
xor
adc
push
push
inc
repz
xchg
cmpsl
loopne
or
cmp
lcall
gs
xor
insl
push
lods
push
add
cmp
loopne
icebp
mov
je
jne
lods
pop
jnp
mov
sti
mov
dec
sbb
jl
outsb
nop
cmp
movsl
add
inc
add
pushf
jo
dec
xchg
fsubs
or
loope
xchg
xor
bound
arpl
stc
and
jmp
faddl
and
sbb
add
icebp
call
out
outsl
lret
adc
repz
pusha
je
in
mov
inc
mov
sub
jmp
leave
loopne
lock
and
cmp
mov
push
in
xor
ret
int3
sub
dec
sbb
mov
out
mov
movl
inc
bnd
mov
add
aad
enter
iret
cmp
sub
into
mov
push
jge
pop
inc
pop
mov
pop
sub
xchg
stc
inc
shll
sbb
adc
lcall
adc
fsts
test
test
scas
imul
jae
jg
or
fwait
in
and
push
mov
aaa
pop
cmp
xorl
insl
fdivr
sahf
pop
scas
ror
sub
and
sub
pusha
sbb
inc
jnp
sub
es
repz
sub
mul
imul
push
or
mov
or
daa
mov
pop
push
sbb
or
and
les
sub
inc
imul
push
repz
cmpsb
xchg
cmp
push
ret
shlb
lock
je
int3
or
and
push
mov
cld
sbb
cmp
test
jb
mov
mov
mov
lcall
loope
pop
lret
pop
inc
sbb
in
fidivs
cli
cmp
sbb
jmp
call
incl
ret
xor
mov
push
pop
iret
popa
cli
xchg
pop
sahf
es
arpl
dec
insl
mov
sarl
mov
hlt
push
repnz
add
jg
cld
sub
fistpl
sbb
pop
loop
sbb
imul
setle
lds
test
push
xchg
adc
jmp
inc
mov
push
mov
mov
les
es
adc
cmp
lods
rolb
insl
outsb
hlt
shll
pop
inc
jle
bound
fimull
sub
inc
adc
sbb
lds
and
out
mov
sub
repz
jno
scas
fldcw
pop
and
clc
stos
inc
jle
dec
mov
sti
dec
lea
outsl
pop
pop
or
and
mov
pop
sub
inc
dec
stos
call
aas
cmp
push
mov
mov
cs
in
in
cmc
xchg
sub
dec
pop
sub
push
lock
pop
es
negb
mov
je
add
adc
and
xor
les
hlt
jmp
sti
xchg
lret
movsb
sbb
jnp
dec
and
xor
les
hlt
jmp
sti
xchg
lret
movsb
sbb
jnp
dec
and
xor
les
cmc
jmp
sti
xchg
lret
movsl
sbb
jnp
dec
and
xor
les
sbbl
dec
jl
cltd
dec
adc
add
jg
or
and
pop
mov
stos
hlt
fsubp
es
shr
sbb
or
cmp
sub
popa
dec
push
jnp
inc
loope
mov
stos
icebp
cmc
test
sar
shr
mov
pop
popa
imul
jge
mov
test
mov
jo
add
push
and
push
clc
inc
stos
adcb
je
stc
or
add
cmp
dec
mov
and
sarb
xchg
xor
inc
push
je
jo
push
jo
cmpsb
popa
jae
push
adc
mov
mov
mov
icebp
lcall
push
sub
das
sahf
sub
sbb
insb
aas
push
sub
sahf
jnp
mov
repnz
jecxz
les
xchg
mov
fdiv
out
mov
mov
dec
adc
mov
sbbb
loope
subl
movsb
sti
cld
adc
mov
dec
enter
insl
add
xchg
pop
roll
adc
sub
and
stc
inc
fwait
xor
dec
mov
jmp
inc
sbb
push
push
outsl
inc
pop
adc
inc
push
and
fsub
sti
rcrl
enter
movsb
movsl
popl
dec
push
dec
lret
or
sbb
cli
loopne
hlt
jmp
test
movsb
sahf
sbbb
push
inc
inc
xor
popa
dec
push
jnp
imul
subl
xor
and
adc
add
jno
popa
dec
push
jnp
imul
subl
xor
in
mov
cmp
inc
xor
and
icebp
mov
pop
aas
gs
jb
jno
dec
inc
and
adc
movsl
imul
pop
es
ficompl
xchg
je
icebp
sbb
xor
rcrl
adc
or
pop
mov
push
jmp
inc
hlt
lret
inc
cltd
fisubrs
call
jnp
cmp
add
shr
jns
push
stos
mov
in
adc
data16
push
aad
xchg
popa
loop
pop
jo
pop
pop
and
fidivrl
dec
jne
outsb
test
pop
mov
addr16
aas
xor
into
loope
out
inc
jbe
aaa
cs
sbb
aas
movsl
repnz
adc
push
in
insl
sub
push
xchg
or
js
cwtl
sub
in
fs
dec
popl
xor
movsb
fwait
inc
pop
push
dec
outsl
hlt
int3
xchg
add
out
cmp
cmpb
fsts
les
cmpsb
aad
pop
xchg
jbe
mov
arpl
iret
sub
roll
into
push
lods
mov
adc
adc
insb
adc
mov
inc
push
jne
xchg
les
xor
xor
cmpsb
xchg
test
scas
mov
daa
dec
sarl
adc
jl
cmp
out
pop
rclb
fisubrs
loop
xchg
rcrb
mov
mov
movsl
fwait
sbb
adc
pop
pop
std
mov
pop
mulb
mov
jnp
ds
push
repz
js
es
mov
cmp
stc
nop/reserved
out
jp
adc
add
es
lcall
lea
mov
mov
inc
xor
xchg
lahf
mov
movsl
aaa
pop
cmp
cmp
xchg
and
enter
push
gs
sbb
mov
outsl
pop
ret
xchg
sub
add
cltd
add
jbe
push
adc
call
ds
or
icebp
mov
jo
push
or
popf
cwtl
jno
dec
shrb
orl
loope
fsubs
test
icebp
stos
or
lods
jb
loop
call
dec
push
rol
repnz
pop
dec
out
fdiv
loopne
test
dec
add
or
mov
or
xchg
or
cmp
jmp
jb
sub
jb
add
xor
imul
in
push
jns
xchg
mov
sarb
adc
pop
insb
push
jg
nop
cwtl
xlat
sub
jb
and
aam
dec
sti
and
bound
in
mov
pusha
or
mov
shl
xchg
test
dec
xchg
in
fnsave
loopne
mov
xchg
jle
lods
push
jae
xor
mov
or
mov
loopne
mov
or
or
js
jo
mov
or
mov
sarb
sub
add
xor
xchg
lahf
mov
sbb
xlat
add
inc
or
mov
lds
mov
js
hlt
or
mov
sbb
cmp
mov
test
movsb
aam
push
aam
ficoml
loopne
pop
mov
xchg
mov
dec
lret
mov
aad
repnz
and
mov
xchg
pop
jnp
push
in
pop
xor
movsl
xor
dec
movsl
faddl
pop
xchg
inc
test
xor
lahf
loopne
ja
jns
lds
stos
icebp
aad
das
mov
ljmp
dec
push
loopne
jno
mov
inc
loopne
mulb
jb
and
arpl
cwtl
sbb
mov
or
test
sub
leave
lcall
mov
out
dec
cmpsl
repz
xchg
daa
xor
inc
dec
in
js
jp
xchg
add
sti
enter
mov
outsb
fisubl
push
imul
add
adc
sbb
loopne
cmp
call
ja
cmp
pusha
nop
xchg
popa
insb
push
mov
shlb
push
push
ljmp
shll
loopne
mov
loop
mov
jb
dec
decl
mov
out
cmp
nop
into
jae
pop
out
test
or
or
mov
inc
rcl
das
stos
das
xchg
jne
cmp
and
iret
mov
pushf
enter
jbe
jmp
das
stos
leave
jecxz
je
pop
adc
sahf
adc
push
pop
pop
pop
sbb
std
mov
cltd
push
xor
mov
fnstcw
pusha
das
cmc
lea
sbb
repnz
scas
aad
inc
ds
add
lods
jb
push
ret
push
sbb
jge
ret
cltd
in
adc
lcall
cwtl
inc
and
pusha
push
add
icebp
cmp
mov
xchg
mov
rcrb
add
push
outsl
cmp
sub
mov
scas
mov
jg
shr
rclb
xchg
mov
xchg
mov
or
out
push
mov
shll
int
lock
pop
pop
xor
add
lock
iret
movsl
adc
add
jl
loopne
aam
frstor
fs
xor
mov
arpl
call
dec
leave
ret
loop
xor
test
dec
push
aam
lods
sbb
jne
add
and
xchg
mov
fisubs
cltd
cmp
cmp
icebp
test
mov
hlt
mov
jo
ds
adc
popa
xchg
jmp
lcall
jbe
leave
cmp
out
es
xchg
jne
dec
push
fstl
xor
mov
and
test
insl
sbb
or
roll
dec
jmp
inc
enter
les
push
jle
mov
es
push
jp
int
jmp
push
jns
push
mov
mov
dec
inc
mov
add
fwait
push
loop
xchg
mov
je
jno
rorl
inc
test
mov
cltd
and
leave
fchs
gs
and
rorl
test
adcb
jb
xchg
mov
int
mov
jb
and
and
cwtl
int
test
into
xor
enter
cmpsl
adc
mov
push
insb
ja
push
pop
leave
or
mov
idivl
adc
dec
fidivl
je
mov
lock
pop
in
jb
dec
int3
jecxz
mov
pop
xor
in
jl
pop
jbe
icebp
in
add
push
mov
and
xlat
in
adc
cmp
cmp
push
mov
fs
mov
add
in
mov
leave
movl
lock
rcll
xor
mov
mov
xor
sbb
ss
push
test
pop
sub
pop
push
dec
hlt
pop
xor
and
xor
ja
ss
sbb
call
mov
mov
cwtl
add
jmp
sbb
xor
fdivrs
inc
je
loopne
jo
ror
mov
add
or
pop
and
fists
sbb
in
pop
int
push
push
jecxz
sbb
andl
popf
leave
push
pop
and
dec
outsl
push
fldcw
add
loop
mov
test
test
sahf
mov
pop
in
icebp
mov
pop
mov
mov
fwait
test
das
lcall
jb
jne
adc
pop
add
adc
pop
adc
lods
adc
mov
cmp
test
in
add
scas
adc
repz
push
fwait
dec
push
in
cmp
ljmp
and
xor
push
mov
mov
jnp
dec
in
lds
dec
fs
cmp
cmp
ljmp
mov
jmp
ret
pop
clc
imul
cmpl
sub
jmp
cs
xchg
scas
outsb
xchg
addb
aad
idivl
out
std
fsubl
shrb
adc
test
xchg
sub
sbbl
or
sub
cmp
sub
jno
xor
jb
lcall
lea
outsb
inc
mov
or
not
push
imul
mov
popa
loop
das
lea
in
shr
jg
mov
xor
sub
das
orb
cmpsl
nop
cwtl
push
add
pop
out
push
or
insl
sub
cmp
push
stc
or
sbb
adc
push
mov
pop
int
xchg
mov
repnz
and
mul
out
jo
jl
lret
cmp
mov
push
jne
sbb
jo
orl
stos
shr
push
lret
ja
loop
lcall
push
fldcw
repz
dec
mulb
pop
in
out
jmp
repnz
mov
decb
xchg
adc
jle
mulb
stc
iret
and
lret
xchg
test
movsl
lods
or
outsb
int3
ljmp
or
or
or
std
das
jg
std
gs
inc
mov
mov
aam
inc
pop
jb
mov
test
cmp
fsubs
sbbl
scas
daa
icebp
xchg
scas
cli
loopne
push
or
jmp
or
neg
sbb
mov
pop
push
aam
std
cmpsl
jl
mov
ja
movsl
scas
mov
mov
call
mov
dec
call
push
jns
inc
rcrb
ja
clc
jne
sbb
repnz
mov
int
dec
vpshufd
dec
mov
jae
mov
out
and
xor
cmp
jo
pop
stc
push
mov
jge
xchg
mov
lcall
sub
xor
es
jmp
aad
mov
cwtl
stos
into
sub
mov
dec
push
lret
mov
pushf
xor
jnp
imul
add
loopne
mov
mov
scas
in
clc
cmpsl
mov
loope
sub
fimull
sti
cmpsl
add
aad
mov
mov
xchg
sbb
mov
addr16
jecxz
fwait
outsb
cmp
scas
sub
xchg
xor
pop
cmp
jns
inc
mov
loop
adc
arpl
xchg
sub
data16
mov
outsb
lcall
xor
bound
push
aaa
stc
pop
jle
test
push
push
pop
push
movsb
dec
dec
fmull
cmpsl
mov
repnz
or
dec
jge
jl,pt
test
aad
jmp
lahf
repnz
xchg
jge
jl
pop
push
sahf
jno
icebp
or
loop
sub
pusha
sbb
dec
shlb
sbb
dec
sarl
notl
jle
insl
sbb
jo
add
push
inc
cmpb
lods
lods
pop
sahf
dec
shll
mov
addb
dec
rclb
add
pop
mov
inc
int
push
cmpsl
cmpsl
aas
mov
popf
repnz
mov
stos
les
es
cltd
aaa
pop
dec
loopne
dec
cmp
xlat
std
cmp
scas
movsl
add
mov
push
mov
push
jo
xchg
cwtl
int3
mov
in
leave
mov
in
adc
sbb
std
cltd
push
mov
mov
push
in
adc
outsl
cmp
int
or
int
sub
in
fnstenv
add
lods
or
movsb
and
lahf
dec
or
mov
inc
lods
jle
pop
ja
fisubs
mov
loop
into
push
or
dec
mov
mov
movsl
lahf
push
call
aaa
pop
cmp
xchg
stos
pusha
hlt
hlt
stos
jb
fldl2t
dec
ljmp
pop
pop
stos
jp
sub
dec
sub
dec
int
mov
push
dec
out
xchg
pop
repnz
mov
and
fsubrl
or
lds
mov
xor
dec
add
xchg
jne
add
xor
ja
fs
mov
jne
and
sub
test
pop
out
xorl
outsl
stos
pushf
pop
xor
dec
push
mov
out
xchg
pop
insl
mov
loopne
push
pop
push
add
and
insl
jle
sbb
pop
mov
popf
mov
add
lods
jmp
cwtl
add
push
pop
mov
push
lcall
jmp
pop
lods
sbbl
int3
or
xchg
sbb
ljmp
add
ret
rolb
sbb
jnp
dec
cmp
jo
fidivrs
shl
pop
outsb
pop
add
rcll
rorb
and
mov
cmp
jne
cmp
cwtl
outsb
scas
push
lds
add
js
test
jle
or
cmp
or
jg
aas
sub
pop
mov
or
inc
and
jle
lds
and
jcxz
mov
inc
lret
ret
fs
jnp
fbld
jp
stc
sub
dec
and
jmp
pop
fcomp
fldt
pop
jb
pop
and
jmp
es
inc
bswap
push
imul
inc
aaa
pop
rcrl
or
dec
dec
aas
fimuls
ds
cwtl
xlat
push
inc
pop
popa
xchg
in
mov
dec
push
lea
pusha
xchg
aam
inc
arpl
lods
pop
cmpsb
out
cmpsl
mov
mov
inc
mov
pop
ret
inc
repnz
in
nop
add
lcall
pop
lods
in
cmp
xchg
insl
iret
std
sarb
sub
cmp
adc
xor
mov
adc
movaps
jp
test
into
enter
shlb
jge
or
sbb
and
test
and
inc
arpl
adc
jl
mov
adc
xchg
push
stc
push
jmp
mov
lcall
addr16
push
call
add
sbb
stc
adc
mov
cwtl
jmp
dec
repz
and
popa
out
ja
dec
insb
and
gs
test
mov
push
sbb
jl
jle
pop
dec
aad
xor
xchg
cltd
sub
push
sarb
adc
dec
rclb
inc
test
and
jl
mov
or
and
xor
jno
xchg
repz
xchg
jl
mov
insb
mov
es
cmp
mov
and
jbe
pusha
jb
cmp
xor
es
mov
inc
mov
sbb
idivb
mov
add
xor
pop
iret
sbb
gs
int3
push
jbe
stc
das
pop
aas
sbbl
push
push
jmp
fimuls
inc
xchg
outsb
rol
sbb
dec
cmc
push
pop
push
ret
mov
dec
clc
push
inc
ror
gs
sub
imulb
aam
aam
xor
dec
dec
add
cmp
shrb
push
mov
ret
push
inc
inc
pop
insb
jo
ds
ja
lcall
cmc
cld
js
push
mov
clc
push
into
push
imul
daa
ficoml
xchg
leave
jae
mov
aas
adc
push
dec
mov
jbe
xor
in
mov
scas
cwtl
xchg
gs
xchg
ret
insb
inc
aas
and
push
mov
in
fdivr
xor
leave
fcmovbe
xchg
pop
xchg
inc
cmp
and
sub
iret
push
add
pop
dec
or
dec
test
ret
mov
add
outsb
ds
fcmovnb
in
xchg
jno
test
mov
sub
out
add
leave
push
fldcw
dec
cmp
add
rorb
fwait
dec
int
or
scas
adc
sub
sub
out
movsb
sub
ficoml
aad
push
xchg
inc
xchg
sub
pop
push
jb,pn
mov
mov
cli
les
cmovge
in
test
adc
cwtl
jle
call
shlb
shll
jmp
inc
add
movsl
mov
hlt
add
jno
shll
call
inc
mov
mov
push
into
sbb
xlat
ret
and
and
cli
out
adc
cmp
or
lahf
in
out
inc
inc
shrl
popf
and
filds
ret
and
xchg
imul
lods
and
mov
jp
cmp
fdivrs
xor
xlat
push
sub
jae
push
lret
push
and
xor
add
les
xchg
xor
push
out
sub
je
jl
andl
imul
int3
out
dec
addr16
mov
sub
lret
pop
and
call
inc
lahf
jne
cmp
clc
or
jne
or
stc
bound
adc
xchg
sahf
sub
cmp
in
aad
mov
jae
xor
ja
fadds
lcall
stc
add
cmp
gs
pop
cmp
fmulp
sbb
add
clc
add
aam
adc
adc
inc
loop
jmp
adc
jmp
push
cmp
xor
je
lret
clc
aas
enter
fwait
lods
fcoms
mov
lods
int3
pop
sbb
sub
imul
dec
jmp
js
pop
xchg
lret
mov
outsb
push
test
test
outsl
pusha
push
test
lret
jmp
push
rcrl
int
push
push
out
and
pop
movsb
lea
pop
in
add
mov
sarl
inc
ret
inc
sub
xor
popf
scas
and
sar
pop
mov
std
mov
dec
lea
push
pusha
jle
cmp
cmp
cmpsl
jne
les
mov
mov
xchg
fwait
xor
loope
data16
lahf
in
roll
movsb
or
out
sbb
adc
arpl
adc
inc
inc
add
and
and
je
fcmovne
adc
push
dec
jne
test
add
mov
and
cmpsb
enter
repnz
push
div
mov
xchg
pop
lods
cwtl
adc
sahf
dec
jae
cwtl
mov
cli
insb
cmp
lahf
bound
fld
test
movsl
jns
mov
in
test
jecxz
sub
pop
sbb
mov
add
adc
cltd
sarb
test
sub
xchg
xchg
dec
mov
test
mov
aaa
and
and
arpl
shll
scas
addr16
inc
pop
out
ds
jg
int
je
popf
lea
jmp
push
inc
xlat
sub
jae
rol
and
adc
les
lock
mov
dec
popf
aaa
sub
jne
xlat
push
jmp
xchg
daa
xchg
or
mov
cmpsl
mov
lea
adc
movsl
and
sbbb
inc
add
push
xor
sub
push
and
jno
sub
call
jo
int3
cli
cwtl
xchg
in
pop
push
stos
cmp
nop
add
inc
repz
xor
and
pop
test
sub
add
fcoml
leave
and
fsin
adc
mov
call
lds
dec
cmp
ss
and
nop
adc
cmpl
jge
or
push
lret
xor
fmull
cmpsb
jle
fs
shl
hlt
js
hlt
jne
mov
jp
outsl
mov
and
mov
mov
arpl
add
cmpsl
inc
mov
into
and
xor
dec
cmc
xchg
jnp
imul
or
pop
leave
imul
jo
mov
ret
repz
sub
loope
jge
lods
mov
push
lcall
pop
imul
pop
xor
mov
mov
pop
mov
add
test
pop
mov
iret
sbb
stos
cmp
cmp
add
jl
add
jle
xchg
adc
loope
xchg
lock
inc
pop
push
pop
dec
lcall
add
mov
pop
sub
mov
pusha
mov
lock
pop
jg
dec
insb
mov
mov
push
fistl
push
mov
clc
xchg
cmp
leave
xchg
shll
stc
cltd
or
dec
int3
test
fidivl
in
push
pop
aaa
cmpl
mov
mov
sbb
push
in
add
or
xchg
ja
mov
gs
pop
hlt
pop
adc
pop
xor
ds
pop
lahf
dec
mov
out
sarb
add
aas
loopne
dec
add
mov
mov
aam
ss
pop
push
inc
loop
cmp
mov
aam
sahf
cmc
jle
hlt
mov
push
push
cld
adc
ljmp
aam
xor
mov
mov
adc
mov
cmpsl
es
stos
rcrl
ror
xor
fiaddl
lock
ljmp
add
mov
ja
pop
mov
std
add
fisubrl
jb
jne
fldt
sub
cwtl
inc
or
sti
jp
xor
das
adc
stc
jmp
xchg
mov
in
pop
test
jmp
popf
frstor
pusha
in
xchg
pop
dec
adc
add
and
sbb
paddw
push
and
push
adc
mov
adc
lods
in
insl
pop
sbb
imul
fisubl
js
ja
sub
jne
mov
push
xor
push
test
push
dec
push
in
std
mov
divps
mov
jecxz
inc
or
es
mov
xor
sub
ja
add
inc
ds
xor
test
subb
out
scas
pop
into
xchg
stc
mov
pop
add
mulb
adc
mov
subl
add
aad
fistps
jg
mov
fnstsw
sbb
dec
push
jnp
imul
subl
xor
and
adc
add
jno
popa
dec
push
jnp
imul
subl
xor
and
jo
and
inc
imul
test
aad
icebp
movaps
or
imul
dec
push
sti
shrl
mov
imul
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
sub
int
sub
mov
rolb
push
add
or
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
outsb
add
add
jo
mov
sahf
add
add
pop
push
jae
pusha
add
add
or
xor
add
add
add
add
add
cmpsb
add
mov
sbb
add
stos
add
add
add
mov
push
add
add
fildl
lea
fildl
sbb
jbe
and
aam
lldt
add
out
add
sub
sub
sahf
add
loopne
test
arpl
dec
add
add
add
and
and
add
mov
popf
add
add
jnp
mov
add
add
add
add
add
cmp
or
roll
dec
add
add
add
add
add
sbb
add
add
add
add
add
sub
add
add
add
lcall
add
add
add
add
add
add
add
mov
add
inc
add
add
ljmp
add
add
inc
add
add
es
add
add
add
iret
add
add
xor
mov
add
add
add
push
add
add
push
add
add
add
add
fildl
xor
movsl
add
add
add
add
add
add
sub
sub
push
add
mov
add
dec
add
xchg
add
and
addl
add
outsb
add
add
add
popf
add
add
mov
add
mov
or
mov
xchg
add
add
add
add
add
add
add
pop
pop
add
add
cmp
jb
pop
add
and
jbe
bound
push
add
push
add
and
pop
add
lea
push
roll
sub
add
sub
add
and
pop
add
add
add
add
add
add
dec
add
pop
add
add
add
add
outsb
add
add
or
add
add
add
add
add
add
add
add
add
add
add
lcall
add
sub
push
add
add
add
jbe
cmp
or
jno
inc
add
add
add
add
add
add
mov
add
add
sbb
repz
es
add
add
dec
add
add
add
add
popf
add
popa
add
add
mov
mov
add
or
mov
add
cmp
or
pop
add
pop
add
add
add
add
or
daa
add
mov
cs
add
add
add
push
add
add
add
add
add
or
add
add
add
add
add
cmpsb
add
sub
xor
sub
test
dec
add
rolb
mov
add
lea
rolb
popa
add
sbb
add
and
push
add
or
add
add
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
test
roll
pop
jb
add
cs
gs
in
mov
and
flds
lret
jb
stc
mov
dec
or
mov
xor
enter
and
cltd
fcoml
add
in
lcall
out
jae
shrl
jge
popf
cld
push
es
push
inc
faddl
ret
ljmp
sti
add
pop
cltd
pop
add
mov
scas
cmp
pop
es
pop
inc
dec
int
xchg
test
packuswb
mov
jg
aam
push
test
ja
mov
fwait
cmpsl
movsl
imul
fnstsw
inc
test
insl
mov
dec
and
roll
repnz
repnz
bound
jbe
outsl
xchg
push
ret
jns
push
sbb
xchg
adc
or
sub
sbb
daa
sarl
inc
and
xchg
mov
adc
inc
inc
adc
dec
mov
sub
inc
inc
cmp
sbb
fistl
andl
lods
dec
pop
mov
xchg
sbb
loop
add
stc
mov
xor
add
idivb
or
xchg
pop
cmp
popa
xor
push
cmp
push
call
or
inc
and
test
mov
daa
jg
push
or
cmp
mov
inc
imul
test
dec
leave
pop
mov
dec
xor
inc
jns
push
daa
pop
xor
pop
sbb
shrl
xchg
out
insl
fs
dec
outsl
cmp
sbb
adc
mov
xorb
rclb
js
ljmp
mov
mov
and
pop
imul
sbb
jle
fnstcw
jmp
jb
cmp
ss
push
les
sub
dec
jne
mov
xlat
cmp
mov
ja
in
pop
out
sbb
pop
jmp
sub
sub
sbb
jb
daa
xchg
mov
in
mov
loop
incl
fisubs
sahf
iret
mov
mov
xchg
lahf
in
sahf
pop
xchg
ja
loop
xlat
test
adc
dec
cwtl
mov
fld
inc
inc
xchg
fidivl
inc
jo
loope
je
aas
bound
push
mov
cmp
dec
pusha
and
xlat
popf
xchg
aam
stos
into
in
call
mov
in
test
test
push
sti
jecxz
dec
insb
xchg
or
lret
cmc
push
gs
mov
loopne
jns
addr16
xor
lret
mov
ja
mov
push
outsb
dec
xchg
fldl
mov
add
lahf
or
rdtsc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
