call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cltd
dec
mov
imul
cmp
ljmp
mov
jp
jp
decb
pop
imul
cmp
leave
or
sbb
push
and
pop
sub
jns
or
cmp
sub
push
lea
xor
cmp
mov
mov
into
lret
repz
mov
dec
adc
outsb
jnp
pop
jbe
cmp
das
xchg
mov
ja
addr16
and
mov
cld
push
jne
stc
xchg
call
iret
sahf
mov
enter
aad
xor
es
sub
add
mov
pop
mov
push
xor
loop
pop
movsl
inc
jns
or
sbb
adc
mov
push
aam
movsl
jecxz
data16
push
gs
aaa
xchg
or
jno
popa
mov
cmp
outsl
cmp
cltd
dec
adcb
fists
cmpsb
mov
jl
xchg
add
mov
fdivrp
xlat
pushf
sbb
mov
fcompl
imul
cmp
leave
nop
stc
adc
push
repz
pop
into
add
adc
addr16
orl
adc
out
pop
enter
mov
scas
jge
pop
mov
lods
cmp
and
jmp
fildl
stc
sbb
or
sbb
sub
cmp
leave
or
cmp
sub
pop
mov
jp
push
lcall
jns
or
sbb
sub
cmp
leave
or
cmp
sub
pop
mov
jp
push
lcall
ds
push
dec
pushl
stc
xchg
add
jp
pushf
mov
jecxz
xchg
adc
pop
mov
or
scas
insl
sub
push
sarl
jbe
in
jne
cmpsl
ficomps
cli
sbb
lock
addr16
fimull
add
es
or
adc
loope
inc
les
mov
xor
inc
ficoml
js
mov
enter
sub
dec
jg
or
or
aaa
popa
pop
cmp
dec
push
repnz
mov
in
inc
rcrl
sub
pop
je
xlat
cmc
mov
jno
jecxz
or
fs
push
js,pt
xchg
scas
dec
push
push
inc
js
lahf
sub
std
cmc
dec
ret
jmp
or
ljmp
mov
lret
dec
clc
xor
mov
sub
push
jg
or
xchg
les
and
ljmp
sub
sbb
mov
and
mov
sbb
dec
adc
push
dec
lods
or
lock
add
imul
jle
push
pushf
xchg
push
loope
jae
inc
es
enter
inc
xor
add
cmp
int
jo
idivl
xor
push
pop
add
pop
mov
mov
test
rclb
pop
mov
jge
jno
addr16
mov
push
or
fwait
xor
loopne
adc
mov
popf
lea
cli
dec
dec
fisttpll
scas
dec
adc
push
xor
lahf
repnz
icebp
popa
loopne
pop
xchg
lcall
and
test
push
adc
add
test
add
sbb
in
int3
cmp
stc
add
push
loope
mov
addr16
add
or
or
lret
and
sbb
sbb
mov
cli
fcoms
xchg
push
out
xchg
and
push
lahf
mov
repnz
sbb
cmpsb
es
inc
loop
aam
mov
pop
sbb
jge
sub
xor
cmp
std
stos
scas
daa
int3
add
in
push
call
cmc
dec
and
cs
outsl
mov
mov
xchg
xor
imul
xchg
xchg
lret
sbb
outsl
push
mov
pop
push
into
fidivrl
stos
or
clc
inc
lods
addl
insb
and
scas
ljmp
popf
pop
out
adc
adc
popa
mov
fimuls
mov
jl
rolb
pop
out
jb
or
jns
xchg
dec
add
stos
push
adc
pop
sahf
inc
pusha
cmp
in
xor
rorb
xchg
sub
repz
dec
jns
mov
xchg
jl
ja
mov
push
out
int3
or
add
mov
and
xchg
mov
jmp
push
outsb
ret
arpl
fldcw
js
ds
dec
mov
or
mov
cltd
pop
mov
in
add
mov
inc
xchg
and
push
mov
xor
das
sub
mov
in
fs
mov
mov
xor
fidivrl
inc
ret
into
cs
mov
inc
sub
pop
outsl
mull
pop
push
or
movsl
mov
pop
clc
jmp
push
and
inc
jae
cwtl
mov
enter
pop
jne
xchg
hlt
xor
into
hlt
mov
aaa
outsb
pop
cwtl
into
or
mov
adc
leave
dec
cmp
pop
ret
push
rolb
out
test
pop
insb
cmp
jge
lret
xchg
leave
adc
xchg
rcrb
scas
subb
push
pop
push
ret
stos
ds
inc
shll
xchg
mov
adc
mov
inc
insb
inc
lret
call
mov
lock
push
ret
cltd
cld
add
das
mov
dec
cmpb
sbb
sub
push
inc
mov
rclb
mov
mov
clc
stc
jae
mov
push
popf
leave
lea
insb
cwtl
movsb
inc
xor
and
fbstp
jmp
mov
dec
adc
pusha
adc
out
and
pop
bound
out
divl
lds
jg
pushf
and
cs
sbb
pop
aaa
inc
adc
mov
lcallw
add
scas
cld
pushf
fistpll
pop
jnp
and
enter
lret
test
cmp
xor
insl
mov
push
lds
or
lahf
fistl
test
test
into
notb
cmc
mov
out
sti
pop
sub
adc
jecxz
test
push
inc
mov
cmp
daa
jl
orl
jnp
repz
cltd
mov
dec
sub
inc
mov
andb
rorb
mov
imul
out
push
lock
mov
mov
das
jne
adcl
popa
int3
mov
inc
pop
fdivs
jg
jo
or
or
cmp
je
inc
mov
mov
stos
popf
lahf
and
and
xchg
in
add
cmpsb
mov
push
leave
jg
and
mov
cmp
arpl
lcall
clc
shlb
push
push
cli
pop
hlt
inc
inc
arpl
into
dec
xchg
and
movsl
sbb
pusha
cmp
test
sub
jp
mov
adc
jge
dec
push
xorb
ss
and
int3
je
push
pop
mov
sbb
inc
fimull
hlt
cmpsb
loope
mov
outsl
dec
cmc
fsubp
push
lods
sub
dec
pop
js
jb
xchg
push
push
fcompp
int
subl
push
xchg
jnp
mov
jmp
aas
jmp
adc
push
sbb
mov
pop
push
xor
mov
xor
mov
jecxz
mov
clc
outsb
push
shlb
data16
dec
imul
pop
dec
sbb
mov
int
fdivl
push
es
setns
push
loop
pop
sbb
mov
loop
mov
aam
sti
fs
leave
fucom
xor
sub
fsubrl
in
rol
fstpt
mov
cltd
mov
out
shlb
add
sbb
iret
rcrl
mov
mov
mov
add
mov
mov
fadds
nop
push
enter
xchg
push
inc
jo
jg
lret
fwait
data16
je
sbb
jns
je
pop
sbb
shll
jae
lret
mov
cmp
adc
jle
aas
mov
imul
lret
scas
sahf
jmp
insb
pop
cmp
sahf
mov
cmpsb
std
cmpsb
xlat
jb
into
popa
dec
fisubs
adcl
fs
cmp
outsb
clc
inc
test
ficoms
repz
lods
cmp
push
or
stos
or
cmp
and
xchg
loop
lock
lds
xchg
cmp
int3
test
bnd
ja
inc
pop
int3
movsl
loopne
cmc
pop
aam
inc
fcmovu
outsl
in
sbb
int
fs
jne
pop
rorb
xchg
cld
mov
pop
jns
push
sbb
dec
daa
adc
and
loopne
ljmp
push
je
aam
je
stos
leave
add
push
sti
dec
int
pop
in
insb
sahf
pop
xchg
iret
pushf
add
fldl
sbb
cli
xchg
xor
and
mov
ja
push
out
daa
pop
inc
pop
stc
jns
mov
shlb
ficoml
in
inc
gs
xlat
adc
cmpsb
jle
jge
adc
mov
loope
mov
pop
jge
inc
test
outsb
dec
out
fldt
daa
aas
imul
add
push
ret
cli
movsl
arpl
fimull
cmp
mov
push
push
sbbl
neg
inc
cmp
inc
pop
cmp
test
push
movsb
ss
pop
sub
cld
sub
in
lods
mov
into
dec
ret
ljmp
cmp
xor
inc
out
sahf
stos
testb
fldl
jle
or
fildll
xor
subl
icebp
mov
lock
and
pusha
decb
int
scas
fidivs
or
adc
lret
jno
jle
lods
fildll
fidivl
cmovnp
popa
into
cmp
adc
pushf
stos
aad
cs
pop
mov
dec
or
sbb
push
cwtl
jne
ret
mov
xchg
xchg
pop
call
and
outsl
dec
xchg
xor
mov
dec
lcall
imul
sub
mov
clc
pop
xor
cmpsb
mov
lret
xchg
jp
icebp
sub
orb
in
les
sub
and
pop
loopne
push
rolb
loop
pop
test
rorb
in
mov
aam
ds
sbbb
pop
lret
mov
in
sub
scas
pop
out
add
shrl
ret
pop
imul
mov
add
outsb
imull
sub
mov
int
cmp
gs
scas
aas
fucom
outsl
lret
jb
push
cmpl
ud0
subl
adc
or
xchg
or
push
xchg
xchg
dec
jo
cltd
inc
and
mov
hlt
xorb
ja
pop
inc
inc
enter
pop
mov
mov
jmp
out
sbb
cmp
rolb
adc
push
lret
andb
jae
ja
mov
fucomp
cmpsb
shrb
outsl
inc
fcomps
cwtl
std
lods
mov
push
rorb
cwtl
push
roll
dec
and
repz
int
inc
push
mov
cmp
xchg
loope
xchg
pop
push
outsl
jno
push
bound
jbe
and
xchg
mov
mov
push
xchg
mov
and
mov
sub
pop
cwtl
leave
mov
mov
xor
sbb
adc
es
add
clc
cmp
jg
and
pop
xor
or
xor
jecxz
jecxz
add
adc
lock
daa
scas
pop
xlat
je
popf
dec
cmp
xor
mov
dec
neg
rolb
xor
cmpsl
sahf
gs
outsb
repnz
pop
nop
push
repnz
jb
push
and
into
scas
lods
loope
push
ljmp
or
data16
cmp
xchg
mov
lods
and
or
sbb
fdiv
pop
ret
inc
lods
and
xor
out
cmp
rcll
cld
pop
xor
imul
loope
inc
repz
ret
mov
cmp
sub
push
add
xchg
mov
clc
lds
jl
rep
mov
sub
lret
in
cld
cmc
insl
and
shll
nop
push
jno
jno
push
lcall
test
xor
mov
rcl
data16
fcomip
sbb
push
movsb
or
push
add
jnp
pop
lds
mov
inc
not
xchg
clc
inc
fnstsw
or
adc
out
mov
pop
out
andb
xchg
js
push
aam
mov
jg
mov
or
add
loop
hlt
or
mov
iret
cmp
cmc
in
dec
dec
outsl
and
jmp
idivb
fcompl
aas
push
xchg
mov
jmp
and
in
iret
fcoms
mov
or
jl
scas
cld
sarb
mov
pop
rcll
dec
imul
lret
lret
scas
add
ret
push
cmp
cmp
push
iret
sahf
lds
loop
jb
sbb
insl
lret
mov
int
adc
lock
jbe
fsubs
dec
loop
test
mov
pop
sti
inc
movsl
stos
jp
mov
es
das
loop
mov
mov
sbb
cmp
jmp
xchg
ljmp
icebp
mov
or
cwtl
xchg
enter
mov
and
mov
in
jmp
jl
inc
cli
dec
lods
stos
mov
sub
lcall
xchg
cmc
sti
test
pop
push
adc
stc
xchg
jae
subl
jle
cmp
jno
movsb
loope
loopne
in
popa
enter
sbb
jae
pushl
add
mov
fcmovbe
mov
lock
out
rcrb
pop
or
cmc
inc
leave
xchg
add
sub
out
pop
xchg
add
pop
out
and
push
inc
inc
mov
jl
xor
pushf
test
icebp
fdivl
leave
call
jge
cmp
xor
fcoms
cli
cmc
ds
orl
cmc
lret
and
leave
xchg
xchg
repz
ret
cmp
data16
sub
rcrb
imul
sysexit
and
cmp
cmp
fs
xchg
movsl
lret
xor
inc
xchg
fdiv
int
rcrb
subb
mov
bound
mov
cmp
repnz
xor
mov
loopne
cmp
lds
ds
leave
movsb
into
cmpsl
icebp
lcall
int3
in
les
mov
inc
out
mov
clc
jbe
ret
mov
ss
pop
inc
xor
inc
inc
push
dec
das
daa
adc
or
mov
ss
sti
punpckldq
cmpsb
or
fmull
int3
into
dec
out
xor
in
mov
int3
in
cltd
sbb
lret
das
push
sbb
movsb
jns
fadds
mov
mov
sbb
icebp
or
call
jno
pop
and
or
das
scas
jae
dec
ret
je
xchg
movsb
sti
addb
ficoml
xchg
ret
fnstcw
test
jns
cmpsl
fdivs
jl
cs
pushf
cmp
call
jecxz
movq
hlt
lahf
add
subl
rolb
pushf
push
mov
push
in
or
scas
es
imul
lods
and
mov
fildl
gs
inc
iret
inc
std
leave
lcall
stc
lcall
push
cs
dec
mov
and
stc
lods
sbb
cmpsb
ljmp
pop
mov
sub
int3
and
dec
pop
xor
add
test
push
sahf
inc
mov
sbb
adc
push
arpl
inc
repnz
sbb
jnp
mov
mov
aam
mov
jno
addb
and
mov
inc
cmc
ss
dec
inc
cmpsb
adc
jnp
std
shll
pop
pop
movsl
dec
mov
mov
lock
jns
inc
inc
adc
add
lods
mov
sub
inc
imul
pop
or
outsl
leave
pop
mov
and
pop
inc
popf
imul
push
lahf
test
test
mov
div
sbb
xchg
mov
mov
add
cmp
and
inc
das
mov
jl
and
repnz
or
adc
ljmp
xor
xchg
bswap
scas
test
mov
bound
jne
loopne
outsb
popf
cmpb
mov
out
icebp
andl
nop
dec
pushl
in
js
stos
movsl
adc
push
xor
sahf
sub
dec
mov
insl
ja
xchg
insl
jno
popf
dec
pop
and
ja
outsb
leave
xchg
cmp
fnstsw
mov
inc
shlb
jae
mov
data16
pop
pop
sub
outsb
cmovge
inc
lret
ret
and
int
out
dec
mov
les
hlt
xchg
into
xor
mov
inc
test
mov
xchg
or
jmp
xchg
stos
jmp
imul
addr16
ljmp
cmp
incw
fdivp
das
xchg
xchg
subl
mov
add
scas
in
cmp
aad
int3
out
mov
cmc
fmul
mov
push
js
rorl
lret
fwait
mov
or
cmc
push
sbb
xchg
out
rcl
inc
dec
pusha
add
cwtl
mov
lret
sub
mov
lods
jno
mov
test
mov
push
cltd
push
scas
roll
pusha
mov
cmc
imul
inc
xchg
mov
test
shrd
pop
dec
hlt
sbb
jns
out
sbb
popa
enter
mov
xor
js
or
les
xchg
fdivrl
sbb
mov
pushf
jge
sub
or
aaa
arpl
jmp
pop
cmc
fnstenv
sub
jno
mov
pop
fdivl
test
or
inc
stos
addb
cmc
push
aas
in
sub
xor
pop
cli
test
and
out
pop
out
push
dec
aad
bsf
sub
mov
out
jbe
push
or
sbb
fcmovnb
iret
push
loop
scas
lret
das
xchg
insb
insl
loopne
sahf
ss
mov
insl
xchg
sti
mov
jns
popa
int
ret
movsb
testb
cmp
mov
sahf
push
jmp
das
pop
sub
cmpsl
es
pushf
cld
loope
xchg
cmp
lcall
cmp
dec
or
rol
nop
adc
out
je
jbe
jle
les
jo
xor
data16
lret
push
cwtl
dec
pop
jg
aas
add
out
mull
scas
cmp
fs
dec
bound
mov
das
ds
xlat
pop
bound
mov
xor
mov
mov
add
mov
and
and
xchg
add
orb
dec
ds
jmp
pop
mov
outsb
xchg
inc
dec
addr16
stc
xor
enter
cld
or
mov
lcall
push
daa
prefetch
or
insb
xchg
cmp
mov
cmpsl
and
in
loop
push
int3
dec
mov
jno
dec
loop
adc
inc
roll
stc
jecxz
sbb
arpl
pop
rol
mov
inc
lea
fldt
movsb
addr16
cmp
ficomps
test
sti
movsb
or
in
repnz
outsb
cmp
sar
or
xchg
cmp
sub
icebp
loope
inc
test
mov
push
jmp
pop
inc
loope
pop
std
cs
in
sub
lea
xor
xchg
mov
scas
push
test
pop
cltd
lret
lahf
sbb
sbb
and
jno
sbb
mov
hlt
mov
nop
andl
cmp
rorl
imul
cwtl
data16
sub
test
cmpsl
adc
loope
mov
aad
mov
aam
mov
cmpsb
mov
jp
mov
push
and
push
shl
nop
out
mov
int
sbb
push
add
cs
dec
or
jne
add
jno
add
out
rclb
push
pop
movb
enter
std
pop
out
pop
and
xchg
mov
ljmp
aaa
adc
aas
out
cmpsb
jo
ret
insb
sti
cmp
lret
outsb
xor
sarb
pop
jge
and
xchg
fwait
xchg
sbb
clc
jg,pt
mov
fstpt
imul
sub
pop
jnp
fists
mov
divl
push
je
ret
repnz
jbe
add
in
xor
stos
xchg
xlat
nop
outsl
mov
lret
stos
outsb
std
js
mov
push
xchg
ss
loope
movsb
cmp
out
mov
lock
pusha
dec
push
mov
pop
rcl
mov
cmp
mov
dec
push
mov
roll
repz
xlat
and
cmpsb
es
sub
clc
xchg
idivb
jg
imul
movsl
insb
inc
loopne
pop
pop
mov
fisubrs
cmp
adc
daa
sbb
stos
mov
dec
repnz
incl
cld
aam
push
push
xchg
lods
jno
fwait
movsb
mov
es
mov
in
jns
mov
mov
cmp
adc
pop
cs
xchg
dec
inc
das
mov
inc
mov
sub
push
or
imul
shrl
pop
add
fcomps
bound
call
cmp
lods
or
add
aaa
into
adc
mov
fisubrl
adc
xchg
add
sbb
sbb
pop
adc
addr16
fisubrs
idivb
lds
outsb
and
push
pop
mov
dec
aad
mov
cmp
loopne
push
pop
nop
and
mov
aaa
ret
and
pop
insb
fcomip
push
xrelease
xchg
jecxz
or
ficoml
outsl
pop
cmp
in
mov
and
sub
xor
outsb
mov
leave
xchg
xchg
orb
mov
pop
faddl
lds
out
xor
cltd
ss
push
ss
pop
mov
fwait
inc
sub
pop
rcll
loopne
push
and
sbb
cmp
mov
fadd
out
int
je
mov
into
or
nop
jo
repz
or
fsubs
dec
and
jns
push
mov
out
xor
arpl
fnsave
sbb
pop
rcl
cmp
dec
jge
and
mov
nop
dec
leave
inc
or
adc
or
stc
scas
cltd
imul
adc
push
add
push
andl
sbb
imul
std
jmp
pop
shrb
stos
jge
lret
lods
dec
popf
mov
lcall
sbb
rolb
in
mov
or
inc
mov
or
push
repnz
inc
sbb
dec
rdpmc
xor
insl
or
jbe
aad
push
sahf
enter
pop
cmovg
lret
ljmp
adc
push
pop
jle
mov
xchg
dec
mov
int
les
data16
mov
clc
mov
lods
xchg
pop
and
aas
xchg
xchg
or
cmp
cmp
gs
mov
push
daa
mov
js
mov
add
fimull
lret
sub
cmp
leave
or
cmp
sub
pop
mov
jp
push
lcall
jns
or
sbb
sub
cmp
leave
or
cmp
sub
pop
mov
jp
push
lcall
jns
or
cltd
cli
sub
cmp
dec
or
lret
stc
pop
mov
jp
cmpb
imul
cmp
leave
cmc
jae
jmp
ret
push
xchg
inc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
icebp
mov
lcall
mov
jb
arpl
push
sub
xor
pop
adc
jp
mov
lcall
mov
xorb
sbb
inc
cmp
and
push
jp
mov
lcall
mov
cli
jno
inc
cmp
pop
and
xor
push
or
test
adc
ret
mov
popa
or
jmp
inc
inc
mov
loope
and
idivb
mov
mov
lock
in
in
aas
mov
xchg
inc
push
sub
mov
mov
pop
sbb
scas
iret
pop
je
inc
jae
push
pop
stos
pop
xchg
out
add
icebp
iret
mov
fldcw
fcmovne
addb
mov
mov
movsb
jmp
fs
cmp
dec
inc
adcl
cmc
imul
sbb
test
nopl
jmp
ds
lcall
mov
mov
dec
jb
push
outsl
xor
sarl
ljmp
push
sub
xor
pop
adc
adc
xchg
lods
add
sbb
dec
add
mov
pusha
aas
je
jno
xchg
xchg
pushl
cmpsb
ljmp
inc
push
arpl
inc
pop
and
pop
js
imul
fsubs
xchg
ljmp
push
sub
xor
pop
adc
jp
mov
lcall
mov
cli
jno
popa
sbb
inc
cmp
dec
and
push
jp
mov
js
mov
push
mov
outsb
push
pop
sbb
pop
push
jno
sub
ljmp
sti
stos
daa
pop
mov
or
loopne
or
cli
xchg
push
loope
mov
xchg
aas
fsubrl
sti
addb
cs
les
inc
jnp
mov
int3
dec
xchg
or
and
subb
sub
lahf
popa
fiadds
sbb
xor
repnz
push
xor
aas
adc
mov
stos
jl
lahf
les
sbb
gs
fldt
mov
xchg
mov
push
adc
push
xchg
mov
pusha
insb
xchg
cmp
sbb
dec
fiadds
mov
push
dec
or
pop
xchg
int
jmp
xchg
pop
xor
roll
adc
es
aad
test
dec
icebp
cmp
mov
je
sarl
je
adc
inc
add
push
mov
fstl
sub
int3
push
sbb
call
mov
ljmp
and
jle
flds
cmpsl
sti
data16
push
adcb
test
stos
xchg
shlb
mov
jae
xchg
and
andl
into
fiaddl
repnz
in
cmp
insb
fcom
cwtl
or
jo
dec
pop
scas
jp
inc
sub
test
or
icebp
test
test
inc
add
cmp
test
jns
bswap
jecxz
adc
mov
push
push
scas
and
mov
push
enter
xor
cmp
mov
addr16
fmull
fcoms
dec
enter
pop
push
mov
xor
testb
add
stos
and
bound
mov
mov
inc
mov
outsl
push
ljmp
sbb
pop
jg
ss
pop
mov
push
pop
in
rorb
jae
es
mov
mov
rclb
lret
hlt
push
inc
outsb
lods
cmc
hlt
icebp
jp
pop
push
jl
sbb
repnz
lea
adc
and
adc
stos
adc
push
bound
nop
sub
mov
fs
jbe
and
inc
movsb
test
mov
push
mov
mov
or
in
ljmp
ja
fsubl
pop
clc
dec
inc
push
add
ljmp
lret
fimuls
out
pop
inc
int3
movsl
fsubrs
push
push
mov
mov
pop
icebp
cwtl
pop
popa
cmp
pop
cmc
jl
out
xor
pushl
sub
gs
xchg
test
mov
les
xor
mov
push
cwtl
cli
pop
repnz
call
shl
loopne
cltd
stc
in
daa
movl
stos
popa
pusha
push
fwait
leave
popa
ret
add
xchg
pop
pop
mov
sub
and
mov
jo
mov
lahf
dec
or
sub
sub
nop
mov
mov
shlb
sbb
out
popa
cmp
mov
notb
xchg
out
mov
lahf
iret
std
xlat
cmpsb
cmp
iret
add
mov
pop
jnp
pop
test
dec
data16
fwait
jns
bound
and
add
xor
fcomp
out
mov
inc
sbb
or
into
dec
cmp
adc
adc
jle
stos
outsl
shl
push
xor
dec
fnstcw
add
shl
adc
imul
adc
fsubl
pop
rclb
dec
cs
inc
mov
xchg
in
dec
addr16
rorb
sbb
or
jmp
movsb
test
sub
cmpsl
scas
popf
sub
add
sbb
mov
adc
push
mov
add
pop
daa
lea
mov
add
push
mov
sub
jle
pop
pop
mov
push
mov
mov
paddb
add
xchg
flds
mov
movsb
imul
cmp
pop
lock
adc
or
mov
and
testl
aas
pop
sbb
call
mov
inc
pop
stos
test
fnsave
xchg
cmp
imull
mov
inc
rorb
insb
lret
fsts
leave
adcl
sub
test
cmp
add
f2xm1
and
movsl
mov
movsb
mov
movsb
inc
cmovbe
mov
mov
push
cli
cmpsl
aam
push
mov
push
cmpsb
and
add
gs
cmp
nop
out
fsts
in
hlt
jns
push
xchg
adc
mov
mov
fnstenv
dec
mov
lcall
ret
mov
push
and
cmp
js
and
js
xchg
xor
movaps
pop
call
test
ret
dec
mov
xchg
inc
stos
add
push
cli
mov
scas
jp
lea
scas
inc
insl
push
lcall
popa
into
jno
js
hlt
mov
fcmovnb
sahf
fmull
aas
out
stc
loopne
icebp
call
fstpl
das
fwait
jmp
in
out
cmc
mov
cld
scas
imul
sbb
iret
mov
cld
cmpsb
jbe
push
adc
or
lahf
sub
mov
jb
out
stos
dec
lret
loopne
xor
pop
js
xor
ljmp
fcoml
sub
cmpb
movsb
lahf
mov
int3
sbb
je
cmp
loope
jl
mov
adc
ficoms
cltd
mov
push
dec
jno
xor
ret
or
inc
es
and
push
aaa
dec
sbb
sbbb
add
push
push
mov
xchg
mov
fimull
xchg
cmpsb
mov
ret
cmp
leave
lcall
loope
lea
int
dec
pop
and
jns
pop
fwait
jns,pn
pop
or
mov
aad
xchg
sbb
push
inc
sub
sub
out
pop
aam
icebp
and
int
xlat
mov
inc
popa
imul
imul
add
lds
fdiv
aaa
sbb
xchg
mov
mov
sbb
adc
or
pop
mov
push
adc
test
sbb
outsb
mov
and
pop
jge
stc
mov
jbe
movl
popf
xchg
add
dec
lds
movsb
pushf
imul
pop
mov
jnp
scas
mov
or
test
shll
scas
xchg
cmp
mov
rcrl
lods
fwait
movsb
sub
and
sub
pop
mov
mov
xor
mov
inc
mov
rcr
inc
dec
mov
lret
lret
outsl
inc
orb
rolb
cmpsl
lret
dec
js
outsl
adc
mov
mov
pop
xchg
cmp
jp
and
mov
imul
mov
out
adc
enter
inc
rcl
adc
shll
lea
or
icebp
outsb
fldln2
dec
lock
arpl
filds
pop
insb
mov
jmp
inc
aas
add
loop
jg
mov
xorl
mov
xor
stc
mov
jne
mov
sub
push
enter
mov
mov
pop
in
scas
dec
jne
pop
push
mov
pop
imul
mov
daa
xchg
mov
mov
mov
sub
xchg
sub
jge
add
mov
nop
mov
outsl
mov
pushf
fistpl
push
out
sti
pusha
dec
scas
mov
bound
lods
mov
push
in
add
in
jo
push
roll
in
aam
and
cmp
call
and
cmp
cmp
jnp
dec
gs
and
shl
fistps
in
rcrl
pop
mov
aad
faddl
mov
push
jno
shlb
lods
aaa
lcall
xchg
scas
insl
mov
jl
dec
lock
adc
add
jle
mov
ljmp
dec
push
jge
pop
pushl
xlat
jl
cmp
adc
aad
inc
cld
cmpsl
push
repnz
xor
cltd
mov
and
jge
aad
rorb
pop
sbb
push
jmp
repnz
aam
ds
aam
mov
imul
popf
push
lret
or
add
repz
and
sahf
or
jl
or
xchg
xchg
lds
jecxz
or
in
jo
mov
mov
pop
fsubrl
iret
dec
aam
test
jg
int3
or
and
faddl
xor
ljmp
clc
xorb
mov
adcb
imul
mov
out
inc
lahf
mov
jae
icebp
into
addr16
add
bnd
ja
mov
xchg
adc
pop
xchg
xor
ljmp
mov
in
xchg
enter
mov
mov
loope
push
adcl
loope
mov
sbb
or
stc
push
push
pop
sub
adc
xlat
fistpl
pop
xor
add
out
ds
mov
xlat
sbb
es
mov
xchg
push
jl
inc
cmpsb
sub
sti
pusha
leave
xchg
ljmp
inc
lahf
xchg
in
push
pop
pop
cltd
ljmp
jecxz
add
or
and
and
sub
loopne
std
pop
adc
int3
outsb
ljmp
sub
jl
xor
or
enter
int3
sarl
imul
addl
push
mov
jp
rclb
popf
in
rolb
imul
mov
test
dec
gs
add
push
push
arpl
lds
and
sbb
sub
scas
inc
shrl
mov
jmp
push
lcall
adcb
sahf
mov
out
mov
xlat
or
push
cmp
xchg
mov
repnz
jmp
lock
rcr
jnp
aad
popf
mov
inc
test
sbb
push
bound
jecxz
loopne
dec
pushf
push
sub
and
jns
cmpsb
leave
sbb
rcrb
mov
dec
shrb
xchg
add
cmpb
insb
and
or
lods
mov
leave
data16
subb
in
clc
test
pop
or
jmp
sbb
cmp
mov
xchg
cltd
adc
sbb
push
sbb
mov
xchg
movl
je
lret
movsb
testl
decl
mov
clc
aas
cmc
jl
xchg
repz
xchg
sbb
leave
adc
jne
outsb
out
mov
or
test
cs
push
cwtl
daa
sub
test
pushf
shrb
inc
in
inc
in
out
pop
inc
jbe
xchg
add
ficompl
lret
cmpsb
adcl
clc
jecxz
xorl
imull
mov
push
daa
fcom
cmp
cmp
mov
cmp
repnz
mov
outsl
ret
adc
ja
jnp
jg
lods
push
out
pop
xchg
xchg
xor
push
and
scas
xor
push
sbbb
mov
xchg
incb
inc
jb
test
and
xchg
xchg
js
int3
pop
inc
and
add
repnz
adc
mov
push
mov
push
fcmovne
cmp
sbb
inc
add
xchg
cltd
inc
and
dec
mov
push
add
xchg
jbe
cmp
lea
mov
mov
jns
cli
jg
sbb
or
ror
add
stc
stos
test
xchg
mov
lods
jno
jle
sub
repz
push
aas
mov
push
scas
jle
imul
test
jp
dec
leave
ror
leave
clc
insb
xchg
or
push
xor
lds
push
mov
test
imull
mov
es
test
dec
mov
push
push
cmpsb
sub
dec
pop
sbbb
jne
push
dec
inc
mov
lret
adc
cmp
nop
sub
sbb
decl
mov
jno
and
cwtl
dec
cmp
jg
sbb
push
sbb
lds
test
outsl
mov
loopne
or
es
ds
rcl
dec
std
fsubrl
sarb
in
mov
add
lds
popa
cld
out
pushf
imulb
mov
push
cmpl
add
jbe
loop
cmp
inc
test
pop
or
addb
inc
add
inc
pop
mov
sahf
sbbb
in
jle
ret
pop
sarl
scas
out
or
jge
jg
or
cmp
ss
pop
cmp
jp
gs
ret
xchg
pop
cmp
or
in
mov
fninit
and
jnp
sti
fistl
ljmp
xchg
adc
repnz
outsl
pop
xchg
flds
push
dec
and
aam
dec
lcall
mov
dec
jns
jno
jb
fdivrl
rorb
pop
sub
leave
cmc
push
xchg
push
xchg
shrl
shlb
inc
fistps
jmp
sbb
popa
pop
jo
xor
sub
pusha
sbb
jne
inc
xor
sbb
inc
lahf
pop
cli
icebp
add
mov
add
pusha
pusha
out
lret
jge
jns
mov
fs
sbb
dec
cmpsb
fimull
xor
adcb
jbe
in
and
or
or
or
or
adc
xorl
punpcklbw
rorb
lods
xchg
not
push
dec
rclb
inc
ja
mov
rcr
out
lods
fdivrp
sub
lock
fsubr
in
sbb
mov
mov
sbb
or
outsl
les
stos
hlt
mov
ret
out
xlat
xchg
cmp
popa
xchg
insb
loopne
scas
mov
shlb
lods
pop
xchg
ret
pusha
mov
jno
sub
lret
ret
cmpsb
cmp
sbb
scas
lea
and
das
fistpl
test
mov
jp
mov
push
sub
mov
data16
sub
insb
jge
lret
xor
data16
add
mov
in
inc
mov
repnz
add
popa
js
arpl
mov
mov
repz
fistpl
cli
popa
repz
lret
mov
ljmp
jae
jl
xchg
jns
push
jne
mov
adc
cmpsb
pop
xlat
cmp
popf
mov
addr16
inc
adc
dec
mov
mov
loopne
sub
inc
push
pop
pop
rcrb
push
pause
int
pop
ds
lcall
mov
push
push
add
mov
movsl
and
hlt
stos
mov
lret
sub
bound
push
pop
sbb
cld
scas
inc
inc
ss
ja
and
pshufw
fwait
jnp
push
mov
lock
mov
int
aas
cmp
jp
sbb
mov
aaa
inc
loope
cltd
or
subl
xor
mov
push
xchg
sub
shl
mov
orb
mov
les
testl
sbb
jp
adc
out
cmp
in
repnz
mov
movsl
jmp
cld
dec
mov
movsb
dec
and
and
fstpl
push
jg
ret
push
xor
pusha
lcall
cld
push
jmp
stos
adc
lret
xchg
pop
push
push
les
sbb
and
fidivs
push
movsl
xor
push
and
aad
push
xchg
mov
std
das
and
and
cmp
ficompl
lret
mov
xor
jmp
shlb
hlt
lea
cmp
stos
sub
push
push
ss
xchg
fidivs
in
mov
jns
int
pop
inc
test
lds
push
jno
xlat
rcl
shrl
andl
imul
out
push
pop
imul
test
adc
in
std
xchg
arpl
mov
lahf
sarb
ljmp
and
popa
pop
shl
call
inc
or
aaa
inc
dec
pusha
in
mov
mov
pop
pop
jmp
cwtl
jmp
and
pushf
lcall
test
das
lods
push
inc
leave
outsb
pop
jno
push
adc
leave
mov
clc
push
repnz
xchg
inc
pop
mov
scas
loope
lahf
pop
mov
loope
add
lahf
stos
ljmp
xor
lret
pusha
pushf
and
inc
cmpsl
roll
fldt
pop
in
sub
sahf
popa
bound
cmp
push
inc
pop
sub
call
fmul
mov
hlt
daa
mov
jmp
add
scas
popf
lock
cmp
add
jl
mov
jmp
mov
xchg
ret
in
mov
in
adc
xor
jp
jo
push
out
or
or
pop
dec
and
xlat
test
sbb
xchg
add
cmpsl
and
cmpsl
scas
mov
rcrl
movsl
xchg
fbld
mov
mov
sarb
or
flds
and
cmpsl
dec
adc
jb
sub
mov
movsb
loope
call
cwtl
nop
inc
jns
and
stos
inc
pop
pusha
cmp
jbe
leave
xchg
sub
inc
push
xor
je
xchg
mov
push
jg
shll
xchg
ret
mov
xchg
lock
push
xchg
outsb
in
xchg
pop
addr16
pop
cmpsb
push
aad
push
iret
mov
js
fwait
inc
push
push
dec
outsl
mov
add
inc
fstpl
xchg
mov
imul
out
push
xchg
pop
rclb
aam
jbe
in
add
mov
popf
mov
pop
xlat
shrb
adc
sbb
insb
lods
ret
movsl
gs
popa
movsb
jbe
lock
push
daa
ljmp
cmpsl
sar
cmpsb
jle
xor
lds
mov
mov
lret
push
lods
dec
pop
das
cld
sbb
sub
pop
mov
add
sbb
aam
cld
mov
jge
push
frstor
test
scas
imul
es
rcrb
fidivs
mov
movsl
xor
jmp
cltd
insb
out
rclb
or
js
mov
scas
nop
jl
lret
shlb
jne
bound
mov
in
roll
roll
xchg
mov
popf
sub
mov
int
ror
mov
mov
push
jbe
out
and
xchg
cmc
xlat
xchg
jae
adc
xor
icebp
pushf
in
push
xchg
popa
sbb
shrb
into
test
cltd
cld
movsl
jmp
out
subl
test
or
loop
fiadds
mov
jg
mov
and
inc
push
pop
ss
shrb
adc
adc
div
jle
xchg
and
cs
jle
adc
js
std
xor
in
imul
psrlw
pop
xchg
adc
fs
dec
sbbb
movsl
sub
je
je
lods
xor
repnz
sbb
inc
cmpsb
ret
fistl
jmp
push
add
rclb
lock
dec
jp
mov
add
dec
lods
xchg
rclb
leave
js
push
ds
pop
xchg
mov
sbb
mov
popf
aas
pop
test
addr16
insl
adc
adc
and
aam
es
insl
xchg
lret
setle
mov
pop
sbb
xor
lret
dec
fwait
dec
inc
mov
stc
jp
adc
mov
rcrb
movsb
or
mov
data16
cwtl
cltd
sahf
std
adc
push
sub
push
mov
xchg
cmp
push
pop
pop
pop
jno
das
fisubrs
and
iret
sbb
dec
sbb
into
add
mov
lcall
mov
cmp
push
lds
cs
mov
xlat
sbb
xchg
addr16
in
cwtl
aaa
or
sbb
and
add
push
imul
mov
stos
mov
out
xor
subb
add
pop
mulb
push
test
push
int
aas
cmc
xchg
shll
xchg
imul
mov
inc
icebp
and
hlt
hlt
mov
test
rcrb
and
fisttps
mov
pop
cltd
mov
in
and
cwtl
inc
cmpsb
lret
jg
push
test
dec
addr16
push
and
fisttpll
fsubr
repnz
inc
inc
sbb
es
sub
cltd
ret
ljmp
pop
rcll
or
dec
mov
push
insl
push
add
insl
mov
add
lods
pop
inc
or
stc
lret
cmpsl
in
daa
xor
aad
fiaddl
rorb
xchg
mov
inc
and
pusha
repz
sub
imul
fsubrp
and
jg
into
mov
data16
pusha
lock
sahf
sbb
cmp
cmp
or
movsl
xchg
idiv
inc
xlat
jb
cmp
push
and
popa
ss
nop
add
cli
cmp
fnstcw
rorl
enter
add
pop
jge
add
sbb
push
addr16
xchg
add
mov
cs
cwtl
movsl
sbb
jg
adc
mov
cmp
jge
xchg
das
inc
iret
sbb
jge
push
adc
mov
es
push
adc
std
push
jle
jno
lahf
xorb
or
pop
mov
sbb
imull
xor
icebp
movsl
stos
and
xchg
cmp
leave
push
out
mov
pop
sbb
push
loopne
mov
dec
or
out
into
std
aad
movsl
shlb
in
xor
sbbl
mov
into
cwtl
adc
sub
push
out
stos
sarl
ljmp
push
sub
xor
pop
adc
jp
mov
lcall
mov
cli
jno
popa
sbb
inc
cmp
dec
and
push
jp
mov
lcall
mov
cli
jo
popa
sbb
inc
cmp
dec
and
push
jp
mov
lcall
mov
cli
mov
sahf
mov
sub
inc
ret
jmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
enter
movsl
scas
mov
lret
lcall
push
push
adc
ds
dec
push
push
outsb
jne
lea
mov
fsubp
out
cmc
push
push
adc
ds
dec
xor
outsb
jne
pop
mov
mov
leave
out
or
inc
inc
pop
push
ds
cmp
or
jle
mov
push
dec
or
sbb
sub
mov
xchg
in
mov
xchg
ficomps
sub
into
loop
testb
fidivrs
rorb
adc
test
pop
xor
push
xchg
jmp
ljmp
dec
fsubrs
xchg
sub
jno
lahf
fsubrs
sub
in
imull
xor
sbb
mov
adc
pop
js
inc
cmp
push
and
dec
inc
pop
fcmovbe
ss
xor
or
lret
dec
add
or
std
icebp
in
sub
stos
and
jle
mov
mov
in
dec
testl
sub
and
outsb
adc
mul
jecxz
loope
stos
mov
xchg
mov
ja
inc
push
push
sub
cmp
adc
xor
test
sbb
jmp
mov
push
jb
js
push
and
xor
sbb
neg
cmpsb
ljmp
aad
in
cmc
incb
cs
pop
outsb
jne
test
mov
fsubp
out
cmc
incb
cs
pop
outsb
jne
test
ljmp
mov
movsb
fiaddl
jne
js
pusha
or
lahf
cwtl
dec
push
sbb
call
sub
int3
pop
loope
fidivrl
mov
in
push
mov
jp
jmp
and
mulb
add
and
movsb
mov
mov
pop
enter
mov
xchg
fdivrl
stos
add
xchg
xor
stos
cmp
mov
lods
mov
and
out
clc
mov
aaa
out
rcr
push
push
lods
je
scas
negb
movsb
xlat
sbb
mov
pop
inc
push
scas
mov
pop
or
jp
loop
repnz
pop
mov
pop
dec
xor
pushf
or
push
mov
cmp
mov
call
mov
dec
adc
cwtl
nop
jmp
fidivs
stos
xchg
push
pusha
inc
fistl
add
out
inc
ja
jb
popa
shll
popa
je
lods
iret
shll
lret
insl
std
jns
sub
mov
fmull
xchg
shlb
jmp
lods
push
gs
xchg
je
mov
adc
pop
movsb
lcall
rcrl
lahf
mov
movsb
ljmp
enter
sub
cmpsl
add
or
ljmp
mov
outsl
and
int
jle
insl
xor
mov
mov
out
dec
bound
dec
add
pop
push
jmp
nop
fcompl
stos
cmp
jae
lods
mov
mov
pusha
push
adcl
adc
cmpsb
dec
mov
testb
lods
add
and
xor
test
imul
fisubrl
cmp
inc
mov
fmull
insl
cltd
shlb
lds
ror
adc
arpl
int
sub
pop
popf
shll
lcall
or
loopne
out
fisubs
in
pop
std
push
aas
xor
mov
sbb
sti
fldpi
das
test
push
cmp
mov
xchg
les
scas
out
cli
jle
mov
mov
mov
out
sub
cld
addr16
pop
add
inc
stc
int
mov
xchg
push
jmp
nop
lret
push
mov
sub
stos
fwait
mov
inc
ja
sahf
sub
ja
aam
rol
xchg
pusha
mov
hlt
sbb
ds
xlat
loop
js
jmp
stos
mov
pop
jmp
jmp
in
mov
xchg
into
pop
cwtl
dec
fbstp
add
gs
das
dec
cmp
out
stos
xorl
add
je
cmpsb
movsb
jl
push
mov
cltd
sbb
mov
and
jecxz
add
cltd
xor
sub
ds
pop
or
jl
fadd
push
mov
jmp
daa
cmp
sbb
mov
ret
int3
dec
movsb
push
or
xor
test
push
cmp
insb
stos
gs
jns
sbb
outsl
mov
repnz
add
cmp
sbb
jp
pop
mov
ret
test
jp
test
or
aaa
cli
mov
cmpsl
or
sbb
jecxz
pop
adc
fidivs
mov
popa
pop
or
pop
xchg
out
or
test
in
pop
sbb
jno
xor
push
mov
and
mov
aam
mov
subl
pusha
mov
dec
push
sahf
movd
sarb
iret
mov
inc
es
sub
sbb
cmpsb
add
jmp
pop
pusha
js
out
push
mov
ja
insl
pop
repnz
push
pop
jp
xlat
inc
ljmp
adc
adc
sbb
xchg
push
fcmovne
movsl
test
jg
pushf
push
jno
fadds
mov
sbb
xchg
sub
pusha
sub
clc
fsts
repnz
testl
mov
addr16
pop
stc
or
fdivl
fldl
int3
addr16
shl
dec
pop
mov
fwait
les
inc
pop
mov
mov
cmp
xchg
xchg
es
push
adc
pushf
mov
insb
call
push
push
fs
mov
inc
popf
inc
in
pop
add
cmpsb
jg
and
rcll
jmp
stos
jmp
sbb
cld
push
cwtl
insl
mov
stos
out
cmpsl
in
push
sub
fs
mov
sbb
xchg
pop
inc
pop
repnz
xchg
ret
mov
ficoml
cwtl
jmp
mov
data16
js
mov
jae
push
mov
sbb
mov
xor
test
cmp
mov
xchg
push
dec
stos
lods
xchg
in
pop
dec
sahf
add
aaa
sub
xor
push
mov
xchg
push
lods
data16
adc
xor
or
push
lahf
fistps
pushf
imul
rol
mov
sbb
cmp
or
adc
cmc
lea
add
jne
aad
dec
out
rep
pop
xchg
inc
testl
mov
sub
cli
in
pop
jae
test
and
fsts
insl
dec
loope
pop
add
sbb
inc
cmp
push
popf
leave
cmp
in
ds
inc
pusha
mov
add
inc
test
and
or
dec
or
or
sbb
nop
jp
or
inc
sbb
es
ror
insb
cmpsl
inc
sbb
push
add
aas
fcoms
mov
mov
in
std
add
ds
xchg
loop
pop
popa
lret
mov
push
inc
fildl
popa
lds
popf
xchg
push
cmp
xchg
add
mov
jge
test
std
in
fld1
jbe
jp
sub
cmp
pop
or
ret
mov
popa
lea
sbb
jno
inc
loopne
ja
flds
mov
pop
repz
add
insl
pushf
adc
mov
sti
cmp
pop
jb
mov
iret
mov
pop
fstp
or
sub
sahf
or
push
xchg
mov
out
stos
and
cli
rcll
call
out
mov
cmp
insb
movsl
imul
dec
cmp
sub
roll
lahf
fiadds
or
xlat
xchg
pop
out
push
xchg
cmp
pop
and
les
pop
pop
add
add
or
sub
mov
sub
pop
lods
inc
je
iret
inc
aaa
daa
jno
jae
xchg
cli
add
cli
jae
mov
and
push
fnstcw
insl
fld1
pusha
xchg
addr16
shlb
pop
push
insb
fs
adc
rorl
or
inc
cmp
xchg
cwtl
insl
pop
pop
pop
adc
shl
push
and
daa
xchg
lret
adc
or
cmp
inc
loope
leave
loop
sbb
aam
fcoms
out
jmp
repz
mov
popa
dec
lret
ss
les
repz
stc
mov
pop
ror
sti
jle
sub
dec
add
or
adc
clc
scas
xor
call
xor
cwtl
sub
ljmp
cwtl
cmp
nop
dec
sarb
add
pop
scas
mov
push
sarl
test
mov
test
aas
mov
sbb
mov
pop
add
pop
pop
scas
fdivl
jp
adc
add
mov
inc
or
dec
jno
jno
mov
enter
in
jg
arpl
xchg
pusha
jle
adc
lea
cmp
int3
mov
dec
fidivl
dec
or
xchg
inc
ja
add
mov
xor
push
pop
push
cmc
lahf
lds
sbb
jecxz
pop
nop
gs
fldenv
add
clc
xchg
xor
push
sti
dec
mov
push
cmc
movsl
mov
imul
ljmp
frndint
add
jnp
shl
cld
in
dec
dec
sub
pop
mov
lcall
in
frstor
and
sbb
ret
ss
hlt
enter
and
fwait
push
divb
in
add
hlt
mov
jno
adc
xor
jl
hlt
jns
jl
pusha
aam
inc
cmpsl
imul
jae
adc
push
sbb
mov
enter
bound
fdivrl
cmpsl
ficomps
int
in
xor
fs
cld
inc
add
fisubl
insl
mov
mov
push
add
pop
and
enter
ja
popa
in
mov
fwait
sbbb
push
lods
cwtl
and
jge
adc
jb
jno
sbb
enter
mov
shll
adc
pop
rorl
cli
push
data16
xlat
idiv
outsl
dec
xchg
dec
or
sub
lea
jg
inc
inc
xorb
pop
pop
popa
loopne
cmp
jge
scas
loopne
adc
adc
call
push
xor
js
lea
dec
sub
std
inc
aam
jmp
or
dec
dec
xor
stc
sahf
js
sub
sub
dec
ja
imul
pushf
sub
testb
pop
inc
cmp
leave
and
mov
push
int3
xchg
bound
loop
lret
and
mov
mov
stos
or
xor
shlb
xlat
out
loopne
js
inc
and
test
imul
add
xchg
aad
xchg
jb
sahf
stc
pop
fucomp
daa
repnz
dec
cmpsl
sub
mov
xchg
lock
push
and
pop
inc
out
ljmp
and
lods
push
pop
lock
in
xchg
cmp
bound
into
push
fisubrs
jne
inc
jecxz
xchg
roll
scas
stc
or
cmpsb
push
cli
mov
sub
arpl
aas
push
insb
lds
add
mov
es
scas
es
shlb
jbe
or
mov
dec
test
fwait
movsl
arpl
dec
outsb
mov
sahf
push
cli
imul
mov
ficoms
lock
sti
mov
add
jle
cld
pop
fcmovb
inc
jge
ret
sti
jb
bound
pop
sub
mov
cli
mov
rcll
push
sahf
inc
add
jecxz
int
xor
outsb
xchg
xchg
shlb
push
mov
movsb
mov
mov
int
stc
jbe
gs
ljmp
call
sahf
dec
pusha
cmpsl
adc
xor
cltd
mov
cmpsb
stos
sbb
jae
roll
sub
scas
dec
arpl
cmp
loop
in
out
fmuls
in
cwtl
xchg
mov
mov
add
imul
mov
or
and
lods
in
pop
jno
adc
xor
out
mov
insl
das
xchg
jbe
add
mov
movl
mov
and
in
xor
pop
lea
sti
xchg
sbbb
mov
push
sub
frstor
sub
dec
push
cmp
and
dec
xor
addr16
and
aaa
mov
cmp
lock
bound
loop
aaa
sbbl
into
dec
xchg
mov
imul
test
vcmppd
lock
xchg
mov
arpl
jae
push
pop
adc
xchg
cmp
jle
ds
sbb
jne
push
sub
sub
sub
mov
out
dec
sbb
mov
or
fidivl
jbe
call
push
mov
popa
jns
test
xchg
cmc
lcall
pop
jb
push
dec
pop
js
outsb
popa
dec
repz
add
pushf
push
cmp
or
cmc
dec
ljmp
mov
shr
dec
rol
pop
pop
mov
out
test
add
in
cmpl
mov
and
sbb
popa
std
add
int
lods
cmp
divl
push
popf
ret
pop
clc
xor
in
jbe
jb
mov
iret
jle
lock
xchg
pop
decb
mov
sbb
push
mov
adc
leave
negl
lahf
mov
jb
icebp
gs
imul
leave
ja
in
mov
aas
popa
push
xor
das
adc
push
push
leavew
xchg
insb
xchg
mov
xor
in
rclb
out
fcoml
stos
adcb
inc
or
fmuls
cld
push
in
push
ret
dec
cwtl
in
dec
pop
pop
and
das
and
and
lcall
hlt
iret
inc
jo
pusha
or
jl
and
stos
aas
imul
cmpsb
faddp
push
arpl
lods
in
pop
lret
sbb
insl
lret
mov
mov
imul
and
bound
out
adc
pop
gs
xchg
bound
xor
test
andl
call
jno
insl
daa
cmpsl
popa
push
arpl
mov
test
xchg
pop
sub
sbb
push
fsts
rcr
xor
dec
aam
bound
jns
xchg
imul
orb
xchg
popf
add
push
jp
cltd
popf
xchg
mov
fisubl
pushf
xchg
popa
sbb
loop
lret
jno
pop
test
xlat
mov
push
mov
mov
jbe
jmp
xlat
ljmp
mov
jle
loope
insl
cs
xlat
pop
xor
rcll
ljmp
pop
cld
dec
sbb
inc
jg
adc
cwtl
dec
aam
int
jns
scas
loop
loop
mov
test
mov
mov
sbb
fldcw
mov
push
cmp
loope
add
mov
xchg
xchg
add
push
hlt
xor
and
cld
je
stos
sub
push
aaa
rorb
sub
jne
sub
add
in
ss
adc
mov
sbb
fwait
sbb
sarl
insl
pop
in
shll
pop
ficompl
pop
or
push
and
lock
pop
cmpsl
out
adc
jmp
xchg
aad
push
in
shrb
mov
cmp
xchg
sar
mov
enter
js
mov
loopne
cmp
dec
enter
movb
jae,pn
test
or
outsb
popaw
into
pop
mov
mov
pop
cmp
daa
imul
add
pop
mov
or
stc
sbb
psrad
cmc
dec
stos
sub
sbb
and
cmp
sub
scas
lcall
push
cmp
cmp
loope
jge
test
in
adc
outsl
mov
idivb
and
or
int
sbbb
outsb
mov
mov
jp
mov
stos
mov
mov
mov
xor
mov
dec
xor
loop
addr16
sbb
lcall
add
pop
push
jge
and
in
mov
addr16
fxch
jmp
sub
mov
add
add
or
jbe
fmul
cmp
cld
sub
fcoml
mov
into
lret
or
test
cltd
cmpb
pop
and
pop
shr
cmp
mov
push
es
js
movsl
add
imul
addb
imul
dec
dec
cmpsl
dec
push
push
cwtl
or
mov
movsb
es
fcmovbe
push
orl
inc
jmp
mov
mov
and
jle
sbb
loopne
sub
sar
pop
test
lea
jb
adc
mov
push
push
rclb
stos
test
sarb
inc
pusha
xlat
jns
js
mov
icebp
fnstsw
mov
jmp
daa
test
push
andl
out
sbb
shrb
pusha
dec
pop
dec
scas
jmp
mov
mov
pop
xchg
sti
xchg
jmp
push
loop
mov
xor
lods
fdivrs
shlb
fcmovne
sbb
dec
push
das
jae
inc
nop
bound
aaa
imul
in
fwait
arpl
jbe
inc
push
xor
arpl
fisttps
insl
fdiv
inc
aam
ret
sub
out
xor
loopne
mov
and
pop
insb
in
cmp
outsl
push
sahf
inc
sub
in
call
enter
adc
jecxz
aam
or
jb
xchg
out
and
out
sti
ja
ret
cmp
fisubl
or
pushf
aas
cmpsl
pop
std
pop
je
sub
mov
aas
call
mov
pusha
popf
push
cmp
test
jecxz
mov
add
icebp
push
das
xor
mov
scas
repnz
inc
mov
scas
mov
sbb
cs
sarb
mov
inc
or
push
imul
je
inc
lods
mov
cmp
mov
aaa
imul
test
lahf
jne
sbb
cltd
outsb
lret
loopne
call
mov
lock
fnsave
fisubrs
iret
cltd
cmp
repz
lahf
push
pop
cltd
cld
int3
adc
scas
lcall
test
sbb
repnz
mov
lock
mov
sbbl
insb
sbb
or
push
fdivrs
enter
and
aas
jl
add
sbb
shll
mov
ret
std
mov
cmp
mov
sahf
xlat
inc
test
in
xchg
das
and
bnd
repz
sahf
int3
xor
mov
out
les
pop
mov
test
in
mov
jmp
xchg
lcall
cmpsb
dec
sub
inc
rolb
or
mov
out
ds
andb
lahf
leave
push
or
pop
test
dec
lret
and
xor
push
lods
mov
xchg
push
inc
ret
aad
jmp
sbb
stc
xchg
and
jne
mov
add
xchg
inc
jg
outsb
out
in
fmul
cmp
scas
and
sub
hlt
icebp
enter
dec
ljmp
sub
es
ret
shlb
shr
lea
jae
jmp
movsl
leave
xchg
add
bound
add
lahf
aam
into
xor
lret
dec
pop
adcl
and
adc
daa
movsb
insl
adc
nop
mov
adc
lret
fdivs
pop
aam
xchg
fs
mov
mov
ja
test
arpl
inc
xchg
or
mov
xor
in
daa
pop
pop
push
jbe
scas
imul
or
lock
jbe
popa
inc
xor
outsl
nop
mov
or
loope
ja
or
dec
and
sahf
push
insb
push
outsb
jecxz
or
pop
xchg
jl
fldcw
in
mov
and
xor
pop
scas
xchg
push
test
mov
pop
out
sbb
and
cltd
xor
lret
stc
cmp
roll
fwait
mov
xor
movsb
je
dec
ds
rolb
pop
roll
mov
dec
cltd
dec
lret
arpl
icebp
cmp
jp
jnp
popa
inc
cli
or
mov
dec
sti
movl
mov
mov
call
jle
xor
dec
mov
mov
jp
sbb
ljmp
dec
add
dec
mov
ja
in
addb
imul
lds
sub
jns
inc
xchg
out
aas
popa
push
in
xchg
cmp
stos
inc
inc
in
add
notb
cltd
jge
jae
enter
mov
mov
mov
pusha
inc
mov
mov
call
les
inc
call
sub
dec
xor
in
fnsave
xchg
out
int
es
push
pop
addr16
and
pop
and
sub
or
pop
xor
jmp
sahf
aad
sub
push
addr16
sbb
cli
shll
das
sbb
stc
scas
adc
jp
sub
cltd
or
rclb
pop
xor
cld
inc
in
or
out
push
mov
push
or
dec
les
or
mov
sub
cld
divb
hlt
and
lea
int
mov
inc
jmp
xchg
test
or
adc
cwtl
add
fists
jecxz
jae
and
pop
pop
cmp
push
inc
dec
jb
jnp
add
sti
nop
out
jmp
jg
jae
in
jmp
bt
push
push
push
stos
inc
jae
or
adc
or
fwait
mov
jb
or
popf
and
sti
ja
jnp
lcall
inc
push
adc
sub
in
fcmovb
and
add
dec
xor
or
xchg
mov
xor
ja
jmp
sbb
cmp
js
mov
xchg
stos
push
lods
xor
sahf
push
test
lar
mov
push
repz
bound
cld
out
push
sub
gs
push
stos
aad
shrb
popf
lds
aaa
mov
in
std
lods
mov
cmp
and
mov
sbb
jmp
cmp
mov
mov
nop
scas
adc
dec
xchg
imul
gs
imul
mov
imull
into
cld
push
xchg
test
or
aam
ss
test
ret
sar
loopne
pushf
mov
mov
mov
push
pop
int
fisubrl
je
dec
jns
adc
pop
xor
daa
je
iret
dec
sarl
pop
rcr
push
ja
test
jg
loop
push
repz
or
pop
push
pop
outsb
aam
sbb
mov
add
jno
mov
mov
cmpsb
jne
sbb
fldcw
push
inc
lcall
mov
testb
push
bnd
sahf
dec
scas
test
fsubp
out
cmc
incb
cs
pop
outsb
jne
test
mov
fsubp
out
cmc
incb
cs
pop
outsb
jne
test
mov
into
rcr
in
hlt
incb
push
adc
ds
dec
dec
pop
popa
outsb
inc
jle
mov
mov
in
jne
add
cs
mov
cmpsb
pop
mov
xchg
push
sbb
es
rolb
pop
ljmp
push
stos
cmpsb
pop
mov
xchg
push
sbb
or
cmp
dec
fidivl
lret
push
ljmp
push
stos
cmpsb
pop
mov
xchg
push
sbb
or
cmp
sub
ficoml
test
sbb
xor
cmp
stc
push
sarb
xchg
cli
comiss
cs
inc
pop
stc
ss
mov
xor
pop
inc
push
outsb
out
pop
cmp
out
or
xchg
mov
mov
stc
add
ja
adc
testb
subl
mov
fisubl
push
cld
adc
and
push
data16
xlat
mov
in
outsl
xchg
cmp
sbb
or
lret
mov
clc
cmp
outsl
cltd
mov
push
iret
arpl
test
mov
imul
addl
lcall
dec
pop
inc
les
orl
into
stc
ds
add
mov
xchg
push
sbb
or
cmp
sub
fidivl
lret
push
ljmp
push
in
out
ret
cmp
sub
pop
test
pop
aam
es
push
roll
test
jbe
and
shll
jecxz
cli
or
pop
mov
mov
mov
push
mov
sub
and
ret
sbb
adc
cmp
sub
fidivl
lret
push
ljmp
push
stos
cmpsb
pop
mov
xchg
push
sbb
or
cmp
sub
fidivl
lret
push
ljmp
push
stos
cmpsb
pop
xchg
bound
adc
hlt
mov
lret
add
stc
pop
loope
add
or
shrb
into
jmp
inc
and
rcl
pop
test
inc
adc
jge
pushf
adc
scas
int3
shll
xor
mov
jbe
fwait
out
loop
jecxz
add
iret
inc
pushf
ja
jp
outsb
push
cmp
jl
hlt
aam
mov
pop
push
xor
mov
jmp
insb
jo
sub
cmpsl
out
or
adc
inc
adc
adc
fsubrl
push
idivb
rorl
or
test
in
bound
xor
jb
push
add
push
shlb
pusha
cltd
mov
lret
adc
filds
push
pop
lds
sub
push
add
pop
lret
lods
cmc
inc
cld
mov
rcrl
xchg
or
cmc
imul
test
fnsave
test
pushf
and
enter
mov
pop
sahf
leave
fs
aam
in
or
aad
adc
js
popf
lcall
or
jns
xchg
mov
int
pop
xchg
cmp
pop
sub
stc
or
add
rorl
addr16
inc
cmp
rorl
xchg
mov
sbb
int3
stc
mov
fistpl
dec
add
lods
dec
fsubr
loop
ret
in
stc
push
shr
pop
jg
push
inc
or
cmp
mul
insb
shl
sarb
fadds
insb
cs
or
das
cli
adc
pop
ret
test
sub
imul
pushf
out
negl
adc
xor
cld
roll
xchg
pop
jge
jnp
pop
push
xchg
lret
add
popa
loope
sub
inc
or
arpl
xchg
xor
test
in
pop
rcrl
adc
jae
hlt
fimuls
lock
loope
dec
inc
xchg
inc
call
and
mov
stc
movq
repnz
and
out
lds
push
xchg
inc
fiadds
outsl
cld
dec
orb
cwtl
xchg
mov
mov
hlt
add
adcb
leave
js
arpl
jnp
push
mov
fidivrl
lock
icebp
stos
stc
xlat
inc
sahf
xchg
inc
repnz
jl
or
cmp
fwait
sub
pop
sbb
and
scas
pop
pop
dec
xchg
lea
sbb
loope
cmpsb
or
pop
scas
imull
sub
xchg
std
test
mov
and
mov
rclb
push
ljmp
mov
out
xlat
and
fildl
push
call
mov
mov
xchg
pop
andl
cmp
xchg
push
push
pop
dec
in
xlat
mov
aad
rorl
cmp
adc
lret
mov
hlt
adc
and
scas
test
jnp
dec
xchg
pop
xor
sub
push
xor
mov
xor
in
popa
mov
cmp
shlb
ficompl
add
int
and
sbb
loop
jp
scas
fwait
and
shrb
les
test
lret
ror
into
imul
mov
call
and
enter
lods
cmp
jmp
fdivrl
and
fists
adc
ret
xor
push
sub
jge
dec
inc
lods
ret
inc
or
out
dec
xlat
int
xchg
mov
push
or
inc
rorl
jle
inc
inc
push
mov
push
lret
leave
pop
aad
push
fwait
pop
mov
sahf
ret
pop
and
pop
cmpsl
mov
and
stos
jle
xor
push
aas
repnz
out
mov
js
incb
testl
cmp
fdivl
imul
sub
hlt
leave
movl
fcomi
mov
popa
jb
cmp
daa
and
sub
jmp
js
dec
pop
inc
das
sub
xlat
je
hlt
out
dec
repz
mov
in
push
xchg
jecxz
pushf
stc
cmp
inc
out
jns
fisubs
and
stos
repz
sub
push
cli
in
test
pushf
aas
cmp
xlat
rorb
cmp
dec
pusha
mov
out
lcall
mov
pushl
cmpsb
ror
sarb
xchg
mov
push
sahf
push
pop
xchg
pop
adc
xchg
and
mov
inc
ffree
imul
or
push
packsswb
jo
int3
jmp
push
inc
rorl
xor
and
clc
push
inc
mov
cli
jmp
push
sub
push
and
or
rcll
insl
and
enter
sti
ret
adc
xor
pop
out
sub
push
out
pusha
insl
pop
xor
mov
mov
sti
jno
movsb
push
push
xchg
scas
jmp
and
xor
stos
scas
jnp
push
jno
iret
pop
movsb
push
jl
mov
sub
lcall
hlt
cld
ret
pop
lcall
data16
dec
out
jmp
pop
aas
cld
lods
sbb
fsubs
inc
inc
and
scas
mov
in
inc
xor
jle
jge
jns
push
or
enter
int3
scas
mov
fmul
je
lods
enter
pushf
xchg
jbe
pop
mov
jne
push
in
mov
mov
sbb
xlat
and
aaa
sbb
or
std
scas
mov
add
aam
cld
add
in
cmpsb
aad
or
lret
mov
lahf
in
daa
mov
xor
ret
xor
lret
test
out
call
dec
out
mov
out
fists
fisttps
mov
push
lods
jnp
imul
test
inc
push
lret
cmpsb
sbb
int
mov
nop
addl
arpl
jmp
jns
aas
testl
and
xchg
arpl
out
push
call
int3
test
je
mov
xor
out
cmpsl
rol
cltd
js
cltd
mov
mov
fiadds
jecxz
mov
add
or
inc
cltd
xchg
or
call
add
xchg
cltd
out
push
jmp
pop
imul
lret
mov
push
mov
or
in
sub
test
bound
jns
mov
mov
in
jnp,pt
es
pop
fdivr
adc
jg
push
test
inc
jae
add
enter
dec
aaa
scas
inc
xor
and
repnz
bound
aaa
sub
mov
jmp
lock
pop
pop
lcall
iret
idivl
addr16
push
push
rol
and
in
in
push
pop
setg
cli
and
cmc
sub
sub
add
cmp
cld
lods
xor
clc
cli
push
vpextrw
lds
sbb
repnz
aad
jecxz
mov
fsts
add
loop
cmp
sub
daa
dec
pop
pop
dec
out
test
mov
aas
stc
adc
cmpsl
aaa
dec
mov
inc
inc
stc
inc
shl
call
adc
xchg
push
push
out
out
aam
mov
in
adc
cwtl
dec
iret
sti
inc
push
shlb
ss
je
cli
out
cltd
test
cmpsl
cli
inc
cmp
lret
in
jnp
jne
ret
xchg
or
xchg
push
nop
and
pop
shll
sub
sub
pop
cmp
popa
pop
xchg
and
or
ds
add
arpl
push
leave
mov
dec
sbb
int
mov
lock
test
addr16
subb
push
adcl
mov
pop
adc
mov
cmpsl
popa
jl
cmc
xor
adc
lret
cmpsb
xchg
js
xchg
sub
fcoml
clc
add
mov
sbb
cwtl
dec
int
mov
jp
adc
pop
lds
add
pop
push
adc
pushf
out
test
add
mov
rorl
decb
pop
cmp
sti
inc
fistpl
mov
or
shrb
xor
cltd
aad
test
into
mov
push
pop
cmp
adc
xor
mov
add
clc
jp
and
filds
sbb
or
cmp
rcrb
scas
push
sbb
mov
jle
cmpsl
mov
push
std
dec
push
cld
scas
hlt
sti
push
in
inc
mov
jne
aaa
adc
add
ja
enter
loope
rolb
and
xchg
adc
and
add
mov
in
push
pop
dec
negb
push
push
or
dec
jne
lcall
ret
cmp
or
inc
and
jns
push
call
mov
aam
inc
or
rcl
sbb
lds
cltd
push
cwtl
and
push
rcll
inc
pop
mov
ficomps
adc
push
add
mov
loope
jns
es
push
es
pop
xor
or
int
jmp
adc
hlt
mov
in
sahf
sbb
inc
loope
mov
push
push
jge
inc
mov
call
xorl
dec
jmp
mov
mov
pop
sbb
adc
sbb
and
loop
js
pop
stc
in
stos
cmpsb
fwait
and
mov
xlat
jne
ss
or
sbb
push
xchg
fadd
rcll
sti
push
mov
mov
xor
stc
mov
cmc
mov
sti
xor
and
cs
adc
and
iret
ret
out
repz
or
lret
cld
cmpsl
cmpb
mov
push
cmp
mov
mov
dec
xor
aad
push
inc
jae
clc
cmc
pop
fidivrs
ret
aaa
test
inc
dec
push
jecxz
mov
inc
stos
and
pop
lds
adc
cltd
mov
outsl
aam
adc
movsl
loop
and
dec
push
cltd
iret
dec
adc
lds
test
aas
lods
aaa
ss
cmpsl
cmp
out
and
mov
lret
cmp
or
fs
jae
xor
mov
das
jo
inc
mov
shr
in
mov
out
and
into
int3
stos
pop
mov
out
icebp
jecxz
dec
jmp
adc
xor
inc
jno
push
xchg
outsb
and
mov
imul
mull
dec
jo
push
mov
mov
pop
dec
lods
sub
xor
in
cmp
cmc
rcll
xor
lock
push
push
mull
push
daa
inc
pop
cmpsl
ja
inc
inc
leave
pop
dec
jmp
sub
inc
stos
shlb
fidivs
xchg
aam
xor
xchg
sub
add
push
outsl
popa
jp
rol
cmp
imul
out
or
or
dec
shlb
mov
mov
mov
jle
or
lret
and
shl
and
sub
dec
les
push
ljmp
hlt
push
rolb
shl
sbb
xor
dec
in
mov
pop
repnz
lahf
test
popf
shll
movsl
and
xchg
pop
mov
out
subl
out
mov
xor
sub
into
pop
mov
loope
test
sub
adc
lcall
inc
inc
call
add
test
shll
push
aam
aad
jnp
mov
inc
mov
pop
in
repnz
stos
mov
andb
push
loope
out
into
in
xchg
jge
jno
mov
int3
shl
sub
lret
stc
jo
inc
popa
dec
shrl
xchg
repnz
outsl
fidivrl
xor
pop
scas
nop
cmp
cmc
addb
xor
cmpsb
mov
sbb
mov
cmp
mov
adc
xor
cmp
mov
addr16
pop
or
and
sbb
imul
xchg
cld
cltd
jl
popa
and
or
out
lea
loope
mov
jge
les
sbb
adc
adc
test
adc
lret
lret
inc
jb
add
hlt
push
das
movsl
shrb
lods
cmp
mov
out
jle
and
inc
shlb
icebp
dec
add
fdivs
mov
arpl
out
pushf
pop
dec
aam
sub
pop
lea
xor
mov
cli
outsl
test
push
sbb
sahf
push
mov
jns
dec
pop
es
fidivrs
inc
push
dec
aas
andb
mov
sbb
out
fidivl
mov
clc
lock
mov
and
push
jp
sbb
cmc
in
push
or
xchg
xlat
and
sub
sbb
jns
inc
add
xor
or
cwtl
dec
movsb
je
mov
jo
cld
bound
movb
pop
mov
sbb
and
pop
int
ret
iret
push
sub
int3
pop
daa
fcompl
mov
inc
jge
mov
gs
aaa
mov
es
jno
test
mov
jo
jo
xor
dec
and
xor
sysenter
inc
mov
jg
stos
push
xchg
test
adc
adc
rol
or
jg
test
jns
imul
ret
adc
sub
incl
lock
xchg
mov
jbe
dec
dec
inc
dec
ja
into
jl
mov
rorl
and
push
setl
jge
dec
sbb
ret
inc
sub
cltd
negl
push
and
mov
std
push
adc
imul
sub
inc
sub
and
cmpsl
sbb
pop
dec
cs
mov
mov
mov
lods
in
push
mov
hlt
mov
int3
jno
jg
arpl
push
stc
aas
mov
add
aaa
or
pop
stos
sbb
cmp
xlat
jb
divb
add
aas
in
clc
adc
loop
jno
in
mov
ds
add
aas
sbbb
xor
in
stos
jge
inc
xor
mov
inc
adc
xlat
adc
pop
lock
gs
cmp
pop
movsl
jns
cmp
aas
sbb
out
sub
mov
movsl
and
pop
mov
xor
or
rcrb
mov
imul
dec
mov
xchg
adc
jge
adc
mov
xchg
iret
jns
test
je
pop
in
or
loop
iret
jp
jne
pop
jle
mov
shl
sahf
inc
xor
aam
enter
in
fdivp
mov
inc
arpl
scas
enter
pop
mov
push
or
insb
shll
rorl
jg
aam
fwait
sbb
xor
movl
mov
fcoml
xor
xchg
jle
cmp
and
lock
mov
pop
shll
data16
sti
jae
ret
inc
pop
jl
sub
push
xor
loop
test
mov
mov
icebp
xor
mov
xor
int3
fildll
inc
sub
add
shll
imull
icebp
stc
push
adc
das
outsl
mov
cmp
mov
sub
push
es
sub
mov
fidivs
xchg
movsl
clc
adc
shll
or
fldcw
jo
sahf
xorl
scas
and
testl
lcall
pop
dec
popf
cwtl
xchg
lea
pushf
mov
jecxz
jo
sti
adc
mov
sub
ja
lahf
mov
loope
mov
out
int
stos
cmpsl
and
adc
hlt
mov
pushf
std
fimull
shrb
push
test
adc
mov
xchg
rclb
or
adc
mov
icebp
fwait
stos
sbb
rcrb
sbb
mov
test
sbb
sub
lret
std
cwtl
test
mov
cmpsl
data16
cmpsb
push
and
push
push
jl
repz
pop
lds
fisubl
mov
mov
cmp
mov
mov
popa
and
andl
ja
xor
sbb
jno
loopne
xchg
xchg
xchg
jp
or
jle
cmp
popf
wbinvd
adc
lods
addr16
fists
rcl
pop
sub
push
push
sub
jb
pop
xor
lock
mov
mov
imul
jnp
les
cmpsb
push
add
insl
hlt
add
lds
inc
jl
sub
mov
out
add
mov
push
fisubs
sub
jae
jb
in
popa
rcll
jg
les
jge
fs
pop
insb
cltd
ljmp
push
mov
adc
repnz
dec
std
sub
insb
incl
add
test
imul
cmp
pop
aad
es
add
or
ret
jmp
out
sarb
jno
scas
inc
clc
movsb
arpl
push
into
jbe
sub
lcall
or
sbb
ds
cmp
test
sbb
out
mov
push
int3
popf
movsl
out
call
dec
lods
mov
pop
sbb
dec
leave
call
inc
cltd
mov
mov
sbb
sub
sbb
inc
xlat
mov
xchg
fwait
idivl
pop
pop
add
dec
daa
push
inc
mov
sub
inc
lea
sbb
add
mov
dec
dec
icebp
test
push
test
jae
jno
and
jp
mov
push
xchg
mov
int
pusha
sub
gs
mov
dec
gs
popa
push
shl
sub
mov
pop
dec
arpl
fwait
mov
or
dec
mov
shl
and
out
and
inc
xchg
dec
pop
outsl
icebp
mov
lock
outsl
xlat
fcomps
pop
push
lds
mov
push
cmpsl
call
les
add
nop
mov
int
push
dec
xor
stos
xchg
xchg
imul
xchg
sbb
int3
loope
cmp
inc
mov
mov
hlt
dec
cmpsl
pop
aam
rcll
lcall
movsb
dec
lock
test
iret
lcall
insl
data16
mov
or
xchg
mov
loope
arpl
es
adc
inc
fwait
push
shrl
mov
jno
stos
inc
sbb
inc
push
outsl
std
push
and
xor
ja
and
mov
jne
jl
adc
pop
loope
ret
mov
ud1
cmp
je
push
sbb
pop
push
jo
push
in
cmp
mov
roll
fldl
jge
mov
mov
push
inc
dec
popa
outsl
cld
inc
lds
and
repnz
mov
push
pop
dec
sti
mov
jmp
pusha
cmp
daa
notl
jle
cltd
mov
jae
aam
add
sti
cmp
jg
sub
mov
pop
cwtl
std
inc
jle
push
popf
push
fs
std
jo
pop
push
xchg
imul
dec
jl
test
imul
inc
cmp
pusha
mov
scas
ja
inc
lret
jle
cld
add
jge
loopne
xchg
lods
xchg
aam
mov
inc
out
mov
xchg
sbb
aad
mov
sbb
mov
xchg
imul
je
xchg
jnp,pt
mov
add
pop
pop
rcrl
ss
pop
arpl
lret
lea
lods
mov
imul
shrl
adc
lret
cmp
adc
add
mov
fistps
outsb
xchg
idivb
push
push
test
xchg
imul
jbe
jae
lahf
mov
or
lret
jmp
xchg
mov
shll
adc
fdivrp
in
adc
divl
scas
mov
and
ljmp
jl
and
mov
jae
and
insb
ljmp
dec
inc
scas
mov
stc
cmc
insb
cmp
jmp
out
pop
int3
jns
mov
push
and
push
outsl
mov
mov
mov
fsubrl
and
xor
mov
not
jnp
mov
jbe
push
sbb
xchg
adc
jg
lahf
jle
bound
fcoml
inc
push
in
push
xor
sbb
adc
es
xchg
or
das
and
movsb
int
aam
test
add
movb
mov
xchg
inc
in
ss
cs
inc
adc
add
mov
lret
and
fwait
nop
add
sub
stc
shl
jne
jle
outsl
cmp
mov
std
and
fstps
and
movsb
pop
and
imul
icebp
push
mov
andw
in
std
rcll
cmp
lahf
sub
adc
sbb
stos
adc
sub
sahf
jb
fstpl
cmpsb
insl
test
outsb
inc
daa
out
adc
and
mov
les
cmc
dec
adc
in
xchg
das
cmp
lea
mov
pushf
test
jp
hlt
sub
or
xor
iret
or
xorb
in
fwait
mov
fsubs
out
repnz
gs
adc
or
mov
add
or
mov
ret
fsts
in
in
call
sub
push
fdivr
add
cltd
fisubl
loopne
sbb
mov
xchg
sub
adc
ja
sub
fs
les
gs
js
je
icebp
das
inc
bound
mov
mov
add
cmc
jmp
mov
dec
shlb
pop
dec
lock
stos
sub
jne
xor
xor
daa
test
pop
add
push
dec
and
xor
mov
push
push
inc
mov
out
loop
mov
loopne
add
xor
jnp
test
cs
xchg
push
sbb
or
cmp
sub
fidivl
lret
push
ljmp
push
stos
cmpsb
pop
mov
xchg
push
sbb
or
cmp
sub
fidivl
lret
push
ljmp
push
stos
cmpsb
pop
ss
push
jp
push
sbb
or
cmp
fidivl
lret
push
ljmp
push
stos
cmpsb
pop
mov
xchg
push
sbb
or
cmp
ljmp
push
popf
push
adc
jne
inc
es
sub
cmp
or
sbb
loopnew
and
test
lods
cltd
mov
leave
clc
fld1
sub
cmp
or
sbb
imul
sbb
xchg
mov
test
stos
stc
lret
fld1
sub
cmp
or
sbb
imul
jb
cwtl
mov
fldl
mov
js
pop
imul
jns
ret
xchg
arpl
inc
mov
jmp
xchg
mov
xor
inc
xchg
jbe
call
in
xchg
enter
roll
ja
shrl
xor
mov
test
shl
push
dec
jge
jno
clc
sbb
jg
cwtl
jnp
pop
imul
js
jbe
inc
mov
dec
leave
pop
popf
dec
mull
and
jb
dec
jo
add
inc
adc
fs
fsubrs
stos
int3
insl
out
jl
sar
xchg
sarb
cmp
lock
jno
fcoml
lock
sub
cli
mov
ja
cmp
or
sbb
imul
jno
cwtl
mov
mov
sar
leave
loop
jmp
insb
pop
jl
add
adc
or
ljmp
lret
lea
dec
jl
das
pop
adc
pop
int3
in
mov
stos
mov
fstps
pop
sbb
imul
js
push
mov
stc
enter
call
or
sbb
imul
push
mov
stc
enter
call
mov
cmp
lock
ja
add
je
mov
dec
or
mov
xchg
mov
sub
out
dec
mov
or
negl
in
stos
clc
pop
mov
pusha
imul
out
stos
dec
lcall
jge
pop
out
std
or
and
cwtl
inc
notb
xlat
mov
loope
pop
adc
lcall
jnp
push
jp
add
sbb
in
das
jns
xor
cli
lods
xchg
cmc
insl
cmpl
gs
xchg
lahf
cmpb
or
push
push
gs
into
pshufw
fucomip
jb
mov
xor
xchg
and
mull
nop
jns
popf
jg
xor
jp
dec
and
dec
mov
sub
cwtl
jb
sti
push
sub
mov
rcl
dec
inc
jnp
sub
or
repz
out
dec
daa
sbb
pop
jb
icebp
movsb
mov
mov
mov
and
leave
adc
jmp
out
lret
mov
in
lods
pop
loope
sti
testb
mov
adc
negb
call
pop
mov
or
jne
push
mov
jnp
add
add
cmc
aam
int3
stos
call
es
loopne
sbb
int
nop
lods
inc
inc
lods
or
popa
xor
or
sub
dec
insb
mov
jo
insl
in
mov
sub
cmp
test
xchg
or
jmp
mov
js
aam
inc
imul
hlt
adc
test
mov
add
mov
add
xor
sub
sbbl
push
loope
std
dec
test
mov
loope
jp
stos
push
dec
fwait
sbb
lock
dec
jp
repz
leave
outsb
cli
or
arpl
in
lea
pushf
ljmp
push
mov
aam
pop
pop
adc
mov
xchg
mov
shl
or
pop
add
in
icebp
sub
jecxz
pop
jmp
jmp
inc
sub
and
pop
sbb
ror
out
xchg
fisttps
push
mov
adcb
xchg
test
sub
mov
mov
movsw
sbb
mov
cmp
dec
mov
sub
addr16
movsl
mov
iret
sub
stos
aaa
mov
aam
stos
jns
xlat
cmpsl
mov
lea
rcrb
jle
fbld
xlat
add
pop
xor
out
addr16
xor
fsubr
test
test
icebp
push
aas
jae
or
cld
mov
xorb
sahf
adc
in
stc
test
rsm
sahf
fs
pop
push
sbb
clc
add
mov
sbb
movsl
add
mov
test
mov
push
aaa
cmpsb
pop
mov
stc
push
pop
pop
shr
sub
jb
jno
sub
pop
xchg
jbe
aaa
sbbl
movsb
add
and
add
xchg
inc
jo
jecxz
sub
xor
push
add
sub
jo
dec
lcall
jnp
ret
push
pop
push
fs
mov
cltd
mov
leave
testb
xor
cmp
icebp
push
sbb
mov
cmp
push
cwtl
hlt
pop
and
pusha
outsb
push
mov
mov
cmp
xor
sahf
stos
movsl
sub
cmc
dec
jae
pushf
shr
mov
out
xchg
mov
nop
loope
pop
sti
stc
gs
ljmp
xor
xchg
enter
adc
sub
dec
jnp
lods
cwtl
push
cmp
lret
fdivrl
les
pop
xchg
cld
jno
jmp
xchg
idiv
or
repz
das
into
insb
mov
shl
in
and
das
adc
mov
lcall
outsl
fdivl
cwtl
leave
je
lea
mov
das
pusha
ficoml
sbb
pushf
push
xchg
aam
out
dec
push
mov
and
jno
mov
pop
adc
ror
xchg
shll
add
repnz
in
jge
cld
jo
push
cmp
in
inc
pop
dec
loop
add
pop
push
int
xchg
and
sub
shlb
and
fadds
cs
test
sbb
js
adc
test
cs
lea
and
in
cmpsl
int3
out
imul
frndint
push
jns
push
and
loopne
pop
jae
cltd
aaa
fistps
push
push
mov
decb
add
cli
punpcklbw
add
adc
lods
xor
in
mov
add
in
leave
sub
inc
pop
mov
loopne
rol
shll
mov
and
dec
cmp
rol
pusha
popa
xor
dec
mov
pusha
imul
mov
mov
sbbb
sub
orl
int
in
fdivr
pop
dec
push
xor
leave
arpl
xor
mov
xchg
and
ss
scas
cld
sar
aad
ja
or
shl
or
insb
in
lds
or
xchg
lods
shll
push
sbb
addl
idivl
dec
mov
or
les
call
rclb
out
jae
mov
add
pusha
xchg
iret
mov
pushf
call
xchg
inc
push
push
iret
retw
cwtl
decl
xchg
jb
stos
iret
inc
fstpl
cmp
sub
aaa
adc
cmp
loopne
scas
mov
into
mov
jmp
repnz
push
cmp
jle
xchg
out
push
xor
mov
xchg
xor
or
push
repnz
cmp
out
inc
jmp
gs
push
mov
sbb
mov
addr16
and
add
leave
addr16
lret
in
mov
xor
cmp
in
lock
mov
mov
xor
xchg
push
push
sub
mov
inc
jno
sarb
loope
ja
pop
sahf
mov
pop
pushf
test
js
cmp
fisttpl
jns
mul
popf
subb
adc
repz
aad
repnz
xchg
call
mov
mov
inc
fstpt
and
cmpsl
pop
fmull
out
mov
mov
push
and
aas
push
inc
inc
scas
mov
pop
push
cli
pop
aam
ret
jmp
xchg
fidivs
cmpsl
mov
test
pusha
fcmovnu
inc
jle
enter
jle
ret
in
jp
arpl
jbe
clc
mov
in
clc
test
or
rcr
in
mov
iret
push
sbb
push
cmp
mov
aaa
push
jo
in
nop
in
jge
test
clc
mov
nop
sbb
adc
lock
fs
aad
loopne
cmp
repnz
dec
sti
shrb
cmpsl
scas
dec
or
test
lcall
jl
jnp
mov
leave
xor
vpmacsww
sbb
xor
icebp
pushf
push
and
into
cld
call
mov
lods
inc
int3
mov
test
inc
ljmp
fisubl
jbe
es
xchg
push
js
stos
pop
lret
pop
or
inc
add
dec
int
ret
sub
pushl
xchg
scas
push
inc
mov
aad
jnp
add
fidivs
cmpsl
jmp
imul
icebp
enter
jmp
add
dec
ljmp
sbb
lahf
xchg
inc
fsubr
sbb
push
sbb
inc
cmpsb
jb,pn
lret
fdivrl
jge
call
ja
aaa
and
divb
push
mov
aam
push
sub
ja
xor
mov
inc
aad
xor
stos
jbe
out
adc
sub
add
in
push
jo
xchg
subl
leavew
jp
insl
lret
inc
push
mov
shll
stc
pushf
clc
and
mov
jb
ret
mov
mov
sub
js
popa
sahf
sub
inc
mov
mov
mov
out
das
inc
lcall
loopne
add
dec
outsb
xor
cltd
sub
insb
bound
dec
leave
nop
imul
stos
shrb
movsb
outsl
inc
xchg
pop
push
mov
out
in
lret
lcall
sub
inc
inc
ffree
enter
cs
ret
repnz
int3
lock
pop
xchg
push
stos
xor
les
les
bound
or
mov
outsl
jbe
test
xlat
test
addr16
iret
dec
imul
xor
aaa
repnz
sbb
jp
fs
add
in
sub
cmpl
movsb
fs
sbb
dec
sbb
mov
mov
shrb
xchg
cmpsb
test
stc
cwtl
jp
rcrb
dec
pop
and
into
clc
sti
mov
push
xlat
xor
and
jmp
and
lods
lret
sahf
inc
mov
jp
scas
mov
mov
sbb
arpl
mov
add
into
xchg
aad
mov
cltd
movsb
inc
xor
jnp
adc
adc
and
push
testb
frstor
fcmovne
scas
das
test
lea
andb
fwait
add
test
pop
and
fnstenv
out
pop
cli
jg
je
inc
stc
movsb
adc
in
inc
mov
mov
cltd
pusha
lods
dec
adc
inc
mov
sbb
aas
mov
adc
mov
mov
lods
lods
sbb
xchg
dec
mov
aam
mov
fwait
inc
call
clc
ss
out
sbb
push
adc
inc
fdiv
fwait
inc
xorl
or
out
xor
pop
mov
ja
das
mov
and
sub
jp
mov
and
or
or
daa
jns
lods
dec
loopne
inc
lcall
loope
test
pushf
imull
in
aas
dec
sbb
ja
pushl
xor
nop
in
ljmp
lock
jmp
inc
rorb
enter
into
cmp
lcall
pop
test
jo
inc
mov
push
adc
cmp
and
lods
loope
push
or
xchg
pop
enter
pop
ficompl
mov
and
or
arpl
lods
push
lret
mov
fwait
push
cmc
enter
and
pop
aad
inc
movsb
pop
lcall
sub
dec
xchg
mov
fs
outsl
fs
and
lds
test
iret
jle
lock
adc
mov
outsl
sub
ja
add
cmp
xlat
xchg
shlb
decb
jp
sti
in
popf
adc
mov
or
dec
mov
xchg
xchg
lret
int3
cwtl
lods
mov
iret
mov
or
sub
and
adc
mov
shlb
cmp
mov
dec
sbbl
cmp
pusha
cmp
xchg
dec
rcr
mov
stc
iret
jb
mov
or
or
imul
outsl
inc
and
rcrl
out
xchg
sub
pop
lret
and
sub
cmp
inc
or
xor
lock
sub
clc
inc
lahf
cli
push
arpl
insl
xchg
inc
and
aad
add
ret
cmc
fmuls
xor
faddl
repz
xchg
cmpsb
enter
push
cwtl
cmp
dec
icebp
lea
ret
lcall
pop
mov
sub
or
test
mov
minps
fyl2x
popl
pop
jmp
jle
pop
les
test
mov
movsl
popf
adc
aam
cmp
dec
mov
inc
stc
test
fs
pop
sbb
lds
mov
adc
mov
mov
add
lods
xchg
imul
xchg
or
sub
leave
xor
inc
loope
adc
or
lock
test
sbb
out
add
push
pusha
inc
ds
mov
stc
les
and
inc
jmp
pop
or
push
addr16
movsl
call
mov
mov
pop
fldl
data16
hlt
cmp
pop
out
imul
mov
dec
aas
lds
dec
clc
cmc
or
sub
int3
fmull
sub
xor
push
mov
pop
in
fs
mov
pop
mov
iret
sbb
and
cmp
scas
ljmp
push
add
stos
mov
outsb
dec
adc
shl
int
inc
sti
push
push
sub
jnp
jno
xlat
lods
jle
aad
test
std
jmp
ret
test
mov
pop
sub
stos
adc
push
lods
push
nop
nop
adcl
dec
decl
jae
mov
push
aaa
lods
push
in
les
cltd
pop
ds
incl
or
or
aad
test
pop
std
hlt
es
add
cld
dec
mov
sbb
out
sub
je
cld
and
push
int
adc
sahf
push
sub
popa
mov
xor
aaa
sbb
adcb
adc
int3
fistl
cwtl
push
dec
adc
fiadds
jo
iret
xchg
dec
cmpsb
xchg
jns
xor
loope
inc
aam
pop
push
jne
cmp
xor
lahf
or
pop
nop
push
icebp
aaa
aam
and
pop
or
and
fists
shll
ja
pop
popf
int
sbb
outsl
sub
or
mov
std
mov
je
and
adc
xchg
shl
mov
je
mov
pop
mov
and
cmpb
xchg
xchg
aam
cmc
scas
dec
out
mov
outsb
ss
cmp
sbb
and
push
sbb
ds
adc
pop
gs
jmp
popa
or
pop
hlt
popf
sub
adc
xchg
bswap
xchg
out
fldenv
les
out
aad
pop
dec
cmp
push
dec
sbb
repz
pop
loope
sbb
insl
mov
pop
std
pop
xor
stos
icebp
cmc
cmp
pusha
or
pop
or
shl
cmp
add
cmc
xor
cld
ljmp
push
cmp
mov
test
pop
pop
inc
rorl
xchg
xor
jge
add
lods
mov
out
dec
add
insb
sti
dec
jne
pop
mov
xlat
inc
fs
iret
leave
jmp
insl
imul
test
push
push
mov
push
push
popa
lods
sbb
int
outsl
and
rclb
cmpb
int
mov
sbb
outsb
lods
scas
push
push
aam
or
sbb
jns
mov
test
jno
mov
scas
or
sahf
dec
cltd
push
ret
jae
mov
sti
cmpsl
lcall
lods
jae
pop
sbb
fidivl
push
dec
cmc
adc
aad
xorb
jb
mov
inc
jbe
fxch
mov
or
shlb
push
es
mov
sub
mov
pop
xor
adc
mov
lcall
cwtl
adc
inc
outsl
pop
int
push
stos
es
lods
xchg
outsl
outsl
jae
mov
add
jp
insl
shlb
test
ja
push
ficompl
push
jl
sub
dec
loope
cmp
addr16
jle
xlat
js
test
aad
adc
mov
ret
jmp
sbb
shlb
sub
mov
sub
sbb
fists
insl
xchg
push
push
xor
lret
push
pop
and
popf
pop
lods
dec
mov
icebp
push
jle
out
inc
lds
addl
ret
scas
sub
xor
arpl
hlt
dec
les
shll
es
jecxz
ds
push
adc
add
pop
insb
sarb
xchg
fdivs
mov
cli
cltd
xor
fwait
scas
sti
dec
mov
pushf
into
jbe
sti
inc
daa
jl
and
loopne
sub
mov
out
xor
mov
jno
jmp
das
inc
mov
dec
int
or
dec
mov
inc
fmull
fldenv
aas
lods
imul
pop
cmp
dec
movsl
lahf
rcr
notl
inc
push
sahf
jbe
fucomip
lcall
cmp
or
pusha
pop
es
adc
lea
rcr
push
mov
pop
rorb
adc
or
fdivr
dec
lock
add
clc
jo
jno
inc
or
movsb
ror
scas
xor
mov
mov
fnsave
gs
ss
cmp
cmpsl
xchg
sbb
jnp
or
mov
lcall
mov
mov
mov
jp
es
push
mov
enter
xchg
mov
mov
xchg
shlb
add
mov
ljmp
repnz
sbb
fwait
scas
das
jns
icebp
mov
sbb
mov
outsb
test
cwtl
mov
test
and
xchg
out
popf
lods
add
int3
insb
fwait
andl
cmp
notl
out
mov
sti
jl
sub
mov
sbb
fmull
push
pop
pop
push
push
xchg
lods
clc
mov
xchg
push
cmp
jne
xchg
adc
ljmp
testl
jl
stos
fucomip
daa
nop
sbb
outsl
lock
mov
add
fisubrl
mov
mov
bts
insw
add
pop
incl
push
rcl
push
jg
inc
jae
leave
and
cmp
ss
mov
pushf
mov
notb
adc
outsb
cmp
ds
jae
ja
lods
mov
mov
lea
xchg
cmc
xor
loop
outsb
scas
lds
and
call
mov
dec
adc
jp
adc
add
mov
repz
orb
or
mov
and
inc
icebp
cmp
xorb
dec
xor
mov
jno
lods
fdivl
std
adc
pusha
add
iret
push
xchg
test
pop
sbb
cmp
mov
and
xchg
and
shrb
pushf
adc
in
push
les
sub
fsubrl
or
cmp
pop
xchg
loop
sbb
xlat
js
insl
add
icebp
in
xchg
imul
jnp
repz
cmp
add
xchg
add
lods
dec
xchg
pop
repnz
testb
mov
cmp
adcl
dec
push
xchg
int3
mov
cmp
mov
mov
mov
mov
insl
aam
pop
adc
or
push
test
add
sbb
scas
fldcw
mov
in
mov
cld
fnstcw
cmp
icebp
insl
and
mov
insb
mov
sahf
cmp
jne
and
push
out
cmc
pop
imul
adc
fucomi
cmpsb
or
popa
mov
bound
out
imul
les
jno
mov
leave
pusha
xlat
movsl
sbb
fadds
sub
cmc
stc
in
mov
mov
lret
pop
pop
insl
ljmp
insb
cld
pop
pop
ret
xchg
stos
cmp
mov
push
dec
add
sarl
mov
inc
nop
pop
xchg
and
inc
stos
lock
sbb
adc
jo
xchg
sub
jne
imul
outsb
lods
sbb
insb
push
xchg
adc
cs
cmp
movsb
push
push
mov
shr
scas
out
ljmp
jl
out
shll
roll
cmpsb
mov
pop
jnp
fmul
xor
stos
and
mov
dec
pop
xchg
mov
xchg
fistl
mov
sbb
ror
and
push
mov
imul
pmulhw
lret
or
dec
fcmovne
push
outsl
outsl
xchg
or
pop
jecxz
lods
mov
cld
loop
sub
fwait
mov
fildll
or
ficompl
sbb
data16
push
les
das
out
gs
pop
leave
sbb
xchg
movsb
cmp
jle
es
imul
je
das
jbe
mov
les
stos
adc
xchg
inc
dec
call
loope
stos
xchg
test
cmp
push
inc
pop
pop
push
in
jge
jle
xor
xchg
scas
icebp
out
adc
out
in
xor
adc
test
mov
cmpsb
jnp
ss
clc
lret
push
loopne
pop
cmp
es
mov
sbb
pop
and
push
adc
add
mov
pop
es
mov
push
mov
push
and
and
fistpl
loopne
es
inc
aad
or
add
cmp
cmp
sub
gs
imull
gs
outsl
dec
test
cwtl
cmp
jbe
jecxz
rcrb
clc
and
iret
xchg
movsb
fmul
pop
das
jmp
push
fistps
cli
insl
pop
xlat
pop
out
push
xor
aaa
inc
std
jge
arpl
jmp
mov
sub
cs
jg
repnz
dec
dec
ret
lock
add
xor
pop
mov
inc
lods
adc
inc
ret
ror
cmpsl
lock
push
lret
fnstsw
out
push
insl
test
mov
adc
cmp
mov
pop
je
jmp
xlat
loope
add
jecxz
mov
jnp
stc
sbb
push
cmp
xchg
iret
stos
cmp
jecxz
ds
push
mov
pop
or
lcall
mov
test
fcoml
pop
cmp
frstor
out
cmp
inc
fisttps
sub
pop
inc
arpl
mov
notb
fwait
mov
dec
pop
cmpsb
or
sbb
xchg
push
jmp
adc
dec
inc
mov
aaa
icebp
and
push
test
add
daa
sbb
jne
popf
push
test
sub
cmp
sub
jns
dec
js
push
mov
stc
enter
call
or
sbb
imul
push
mov
stc
enter
call
or
sbb
imul
push
mov
stc
enter
in
sub
or
cmp
sub
jns
dec
js
test
cwtl
mov
fistps
xchg
xchg
pop
dec
adc
pop
aam
mov
push
xchg
sub
jne
gs
icebp
inc
push
mov
movsl
adc
push
in
aad
lds
xor
shlb
sbb
pushf
pop
in
dec
std
jns
data16
pusha
lds
xchg
add
int3
insl
loope
push
dec
sbb
add
mov
pop
push
mov
sub
push
add
pushf
in
sbb
scas
sbb
mov
int
add
xchg
or
dec
adc
push
mov
imul
icebp
test
xchg
gs
stos
ss
shl
add
fs
and
mov
stc
fisubl
sbbb
out
inc
js
inc
gs
xchg
sbb
popa
les
push
mov
imul
mov
outsb
xchg
mov
add
out
pop
dec
jle
outsb
xor
mov
add
rcll
stos
icebp
push
shll
lahf
push
cmc
dec
in
int3
push
cmp
fldcw
jb
push
call
movsl
inc
xchg
push
test
mov
xchg
pop
roll
push
sbb
sub
int
movsl
inc
in
xorb
xor
orl
popa
les
pop
mov
and
and
inc
hlt
xor
cmp
jno
xorl
shll
push
icebp
inc
add
xor
popa
aad
lds
adc
shll
push
icebp
inc
add
pop
xchg
outsb
enter
imul
dec
pop
lahf
xchg
jge
popa
dec
in
js
mov
pop
jne
inc
cmp
lcall
icebp
jmp
push
mov
push
mov
or
mov
add
popf
dec
adc
push
repz
add
repz
popaw
xor
pop
hlt
jo
test
jmp
cmc
lock
push
xor
xor
clc
outsb
jge
sete
jecxz
lea
lret
or
ja
stc
mov
xor
jmp
sti
fs
scas
and
das
inc
cmp
inc
inc
push
adc
or
dec
pop
jmp
xchg
and
mov
jno
jl
jmp
push
notl
xlat
jmp
ds
test
inc
cmpsl
and
js
inc
clc
pop
push
mov
pop
xor
adc
bound
lds
or
sub
sbb
jmp
lret
add
pusha
aam
sub
inc
mov
lea
aad
sahf
inc
xchg
lcall
adc
lret
mov
and
dec
xchg
push
lcall
adc
sub
dec
popa
sbb
and
movsb
loopne
cmp
scas
stc
mov
push
inc
pop
push
ja
and
jne
jp
dec
pop
mov
add
aam
xchg
sbb
sbb
into
movsl
shll
mov
notl
sub
inc
roll
repnz
jge
mov
push
or
push
sbb
stc
sbb
xchg
cltd
aam
loope
push
pop
lcall
jo
je
insb
test
fnstcw
adc
xor
push
rcrl
add
pop
jle
jg
jge
jmp
int
push
mov
shrb
bound
data16
inc
xchg
lock
cwtl
fld
shlb
push
push
dec
js
ja
xlat
cmpsl
push
enter
adc
out
cmpsl
out
jo
ret
sbb
or
and
xor
cltd
dec
push
insb
inc
ret
leave
add
sub
loop
sbb
rcrl
adc
xor
and
lods
daa
pop
sub
inc
jg
cmpsl
sub
cmp
pop
fsubl
or
loopne
jo
lods
movsb
out
xchg
mov
mov
pop
decl
leave
jmp
lret
sub
scas
push
insb
out
test
aad
enter
and
cld
add
sub
sub
pop
adc
add
pop
xor
insb
jg
sub
inc
ljmp
or
int
mov
das
adc
adc
aad
add
lods
xor
mov
xor
inc
mov
pop
and
scas
adc
add
fucomi
leave
adc
inc
cwtl
mov
xor
inc
std
cmp
add
loop
dec
xor
xchg
or
lcall
mov
shl
out
adc
fidivl
fs
sbb
int
dec
lret
inc
jg
mov
xchg
fdivrl
int
fisubl
iret
mov
jl
lahf
and
enter
xlat
ljmp
xchg
xchg
mov
lret
or
mov
stos
ret
mov
mov
loopne
adc
push
stos
arpl
movsl
push
in
xchg
stos
and
sbb
xorl
adcl
jp
loope
mov
sti
cmpsl
jge
mov
and
cmc
xchg
pop
out
stos
lret
or
test
sub
sahf
and
adc
inc
or
push
inc
mov
stc
jle
hlt
mov
rol
pop
mov
outsl
pop
and
enter
mov
sahf
or
outsl
scas
in
pop
pusha
cmp
xchg
int3
imul
rcll
jns
mov
and
jns
call
mov
mov
sub
jp
ljmp
sbb
dec
fcoms
adc
leave
scas
out
jl
jle
push
iret
ljmp
aam
ss
and
jecxz
xor
adc
mov
xchg
rcr
fs
test
ss
or
insb
inc
cmp
test
sbb
nop
aad
test
sahf
and
dec
jecxz
mov
imul
rcl
mov
inc
mov
jle
xchg
xchg
stos
dec
in
loop
and
cmpl
lcall
and
mov
out
and
dec
pusha
or
push
test
jo
popa
icebp
loop
jge
and
dec
stos
lods
shlb
fdivrs
arpl
pop
xchg
mov
mov
clc
add
mov
inc
fbstp
or
dec
popf
mov
lahf
out
push
jmp
jbe
addr16
out
mov
sbb
rolb
enter
adc
mov
lock
mov
sub
jge
mov
sbb
ret
cli
hlt
xchg
push
ret
dec
jne
add
divb
jne
mov
fdivs
out
pop
adc
mov
sbb
movsl
mov
push
sbb
loope
icebp
movsl
rorb
stc
cld
out
aam
shrl
xchg
icebp
mov
scas
and
fsubs
shrl
xlat
adc
std
xor
dec
push
and
into
mov
aas
movsl
mov
pop
ja
jno
scas
mov
pushl
xor
pop
rol
pop
scas
es
add
rolb
sub
xor
pop
pop
js
mov
xchg
and
daa
call
scas
mov
lock
in
nop
gs
scas
lods
iret
repz
ret
leave
add
leave
ss
sub
ret
incl
fildll
popa
ss
test
push
adc
iret
mov
in
call
fildl
pop
jo
les
or
outsb
add
fisubs
pop
or
je
cmc
jnp
inc
out
pop
add
cmpsl
loopne
and
stos
pop
push
jno
mov
roll
and
mov
pushf
xor
repnz
in
bound
stos
fdivl
or
xor
and
inc
mov
and
shrb
lret
mov
out
jno
and
pop
dec
pop
out
fnstenv
sub
mov
add
push
sbb
sarl
xor
dec
dec
in
mov
and
dec
or
sbb
lgs
in
add
xor
and
push
xchg
cmp
adc
mov
inc
lahf
shrl
sub
pop
scas
fisubl
push
lods
mov
sub
in
in
ret
lods
out
adc
loopne
push
std
jg
sbb
sarl
mov
shll
enter
and
test
xchg
xor
mov
js
ljmp
je
mov
push
lret
adc
nop
in
in
mov
lret
mov
in
lcall
mov
xor
pop
lods
xchg
push
out
mov
aas
mov
cmpl
push
nop
subl
aad
pop
adc
in
in
cmpsl
adcl
sub
sti
xor
loope
lcall
ljmp
dec
aam
leave
icebp
mov
shrb
jo
cltd
fdivrs
push
mov
fimull
sbb
xor
cli
cmpb
push
mov
and
add
cwtl
pop
sub
stc
lds
push
jnp
add
push
out
mov
xchg
add
mov
mov
loop
or
adc
sbb
neg
insl
cmc
mov
xchg
loopne
sub
insl
cmpsb
add
xor
ds
imul
imul
invd
or
daa
aas
cmp
pop
or
mov
adc
orb
pop
aad
fwait
imul
mov
fwait
xor
lret
adc
add
push
dec
imul
rcr
pop
call
xabort
ds
xchg
add
cld
pop
sbb
movsb
xchg
iret
xchg
psubsb
mov
out
push
push
int3
in
xlat
xchg
sub
push
and
jecxz
lea
pop
icebp
daa
add
jmp
or
sub
push
xchg
fxch
cmp
fistps
rcrb
fwait
subb
test
in
cmp
lds
push
aad
fidivs
shrl
jmp
sub
hlt
insl
sub
test
es
jne
notl
arpl
pop
add
and
mov
in
or
ret
hlt
out
jb
stos
pushl
ret
dec
mov
mov
xchg
pop
pushf
push
in
mov
flds
test
mov
scas
jmp
pop
and
pop
repz
dec
sbb
mov
mov
aaa
sahf
jle
sbb
les
add
in
sub
ja
sbb
mov
and
mov
lcall
xchg
and
dec
push
xchg
fistps
pop
inc
cli
arpl
sahf
fsts
shr
stc
xor
mov
sub
jge
mov
and
xchg
lret
push
pop
sahf
pop
in
mov
pop
leave
xchg
mov
jp
xchg
loopne
mov
ret
dec
in
aad
cmp
fidivrl
dec
daa
jne
loopne
test
and
mov
stc
aam
pusha
push
inc
push
outsl
add
cmp
movsb
inc
push
or
hlt
adc
hlt
imul
andl
rolb
inc
dec
jnp
into
out
xchg
jge
loope
mov
imulb
insl
mov
mov
pop
xchg
adc
aas
adc
inc
cmp
shll
out
out
and
mov
movsb
and
adc
push
push
icebp
data16
popf
call
outsl
xor
icebp
xor
pop
ret
jne
push
push
pop
js
jne
cltd
xor
test
sub
iret
add
xchg
cld
and
orl
mov
iret
or
inc
ret
sub
mov
mov
add
dec
mov
das
insb
aam
ljmp
addr16
stc
adc
xchg
ss
ret
sub
xchg
jae,pt
cld
xor
je
loope
xchg
push
rcll
sbb
fistpll
aaa
lock
dec
ljmp
push
sub
xor
or
inc
sti
arpl
out
sahf
mov
call
xchg
mov
add
lea
jle
js
mov
jmp
movsb
or
icebp
pop
into
aaa
jge
push
xor
cmp
loope
test
and
pop
ret
pushf
mov
xor
push
cmp
mull
push
neg
iret
push
sub
jg
mov
mov
in
iret
fwait
daa
and
pop
arpl
inc
push
andl
imul
pop
mov
dec
cwtl
aaa
jg
cmp
lcall
notl
xor
push
jbe
loopne
shll
fdivrs
sahf
loope,pn
or
jne
or
mov
or
pop
mov
sbb
lea
sbb
lret
repz
loop
add
aaa
and
cld
movl
mov
sahf
push
clc
add
mov
xchg
call
pop
add
mov
or
sti
ja
mov
call
bound
jmp
notl
mov
je
jb
pop
rcl
jmp
jg
inc
push
js
push
and
jmp
ret
jno
insl
repz
std
fcomi
nop
stos
lcall
es
mov
dec
jmp
ror
arpl
push
mov
frstor
leave
xchg
adc
fldt
add
push
shr
push
lret
or
xchg
jmp
bnd
aad
jns
sahf
pop
out
mov
pop
sahf
cmpsl
jle
fstps
and
mov
aaa
xchg
notb
cmpsb
dec
jle
pushf
daa
cld
pop
aas
dec
push
aad
xor
jns
jno,pt
push
jne
ss
sub
adc
adc
adc
bound
jo
jle
sbb
push
mov
lret
and
insl
mov
jo
adc
mov
push
xor
push
pop
push
push
mov
stc
dec
adc
pusha
pop
leave
lret
dec
inc
int3
mov
sti
pand
cmp
add
and
mov
rolb
repz
sbb
fistpll
addb
movsb
mov
xor
adc
xchg
dec
jo
mov
jle
or
dec
mov
mov
ljmp
aaa
or
push
xchg
and
out
jae
es
lret
pusha
cmpsb
mov
sub
jb
int
push
jo
push
push
aaa
inc
mov
or
adc
push
pop
jbe
jb
loop
dec
mull
add
adc
cmp
les
js
dec
orb
fdivp
push
int
sti
lea
sub
cmp
cmpsl
fcomps
or
jnp
add
mov
outsl
ret
les
mov
jne
mov
jle
xchg
in
mov
xor
sbb
sti
cwtl
jbe
cwtl
xchg
cld
sbb
fcomi
cld
aas
fnsave
aad
mov
inc
pop
xchg
aaa
movsb
mov
addb
ss
popa
test
sub
test
rcll
push
lret
pop
imul
dec
imul
push
xchg
out
mov
bound
and
jl
lret
nopl
add
insl
lret
inc
mov
sub
into
sti
sub
jecxz
aad
hlt
aas
xchg
in
ds
push
pop
insb
mov
mov
lret
test
pop
push
inc
call
xor
in
fimull
imul
sbb
lret
mov
mov
ret
clc
lahf
out
aas
pop
fnstcw
dec
ds
cmp
inc
imul
icebp
cld
jb
bound
and
inc
pusha
mov
loop
mov
aas
popf
popf
movsl
mov
mov
iret
add
xchg
xlat
adc
int
ja
fstps
add
pop
je
xchg
jno
push
fdiv
pop
into
add
test
daa
mov
adc
leave
inc
pop
mov
cwtl
lods
push
lods
loope
push
cmp
cmp
push
add
into
not
inc
rolb
jg
xchg
xor
in
lods
xchg
cmp
sub
push
notl
xchg
loop
xor
inc
or
and
ljmp
or
cmp
or
dec
gs
lea
inc
adc
push
inc
sub
sub
mov
andl
add
push
daa
mov
hlt
mov
pusha
adc
nop
les
fnstenv
adc
in
mov
test
pop
xchg
or
push
mov
inc
xchg
adc
scas
sub
cli
hlt
iret
adc
mov
mov
jle
add
pop
arpl
jno
push
addr16
push
pop
cld
dec
enter
popf
cmpb
cmp
mov
and
push
push
mov
mov
cmp
mov
idiv
mov
std
and
jns
mov
xor
inc
push
cmp
mov
in
and
mov
cli
and
or
and
rcrl
adc
ja
int3
or
int
mov
sbb
dec
in
lock
ss
mov
out
mov
movmskps
push
inc
jbe
xchg
sbb
mov
outsb
mov
js
inc
sub
sbb
das
xchg
lcall
call
dec
fucom
xor
push
outsb
xchg
popf
jbe
xor
sbb
hlt
and
sbb
pop
lock
sub
es
mov
and
aaa
push
int
cmp
icebp
outsb
sarl
insb
xor
push
push
adc
stos
stos
push
fs
shl
cs
mov
pusha
push
pop
jno
mov
call
mov
into
fwait
es
or
jmp
iret
test
into
fwait
in
addr16
lret
xor
jmp
dec
push
inc
sbb
les
or
mov
mov
xchg
pop
test
lcall
leave
adc
lahf
iret
negl
test
scas
cwtl
fsubr
ret
inc
out
fiadds
cmp
pop
hlt
lock
lret
lock
or
out
add
mov
pushf
inc
jg
xlat
adc
shll
push
mov
mov
dec
pop
ds
jae
cmpsb
rorl
xchg
gs
add
or
mov
adc
dec
shll
ret
mov
gs
stos
xor
mov
push
lea
inc
inc
das
lahf
pop
pop
jmp
xor
pop
into
xor
aaa
cmp
aam
out
cmc
and
dec
clc
out
lods
xorb
fsubs
mov
inc
in
push
lea
mov
stos
add
pop
outsb
out
jno
xchg
test
sub
jecxz
lret
imul
lcall
clc
mov
clc
mov
stc
mov
xor
jg
lods
loopne
arpl
pop
xor
inc
aaa
arpl
es
pop
jecxz
fxch
ret
adc
inc
in
fxch
arpl
addb
cmp
adc
aad
imul
imul
mov
in
out
add
leave
imul
test
jns
out
add
mov
sbb
pusha
es
aas
pop
mov
push
push
sub
addr16
xor
ja
jp
in
dec
or
and
inc
push
aam
outsb
mov
movsb
out
scas
aam
pop
in
mov
or
mov
out
adc
or
sub
mov
stos
stos
daa
cmp
pop
lea
jne
inc
push
into
jbe
xor
ret
call
popa
mov
add
arpl
rclb
mov
xchg
dec
ret
xor
pop
addb
sub
notb
iret
mov
add
jle
lret
xchg
push
mov
adc
mov
xor
stos
mov
xchg
sbb
and
inc
jl
jns
pop
lods
mov
addl
clc
xchg
and
icebp
pop
mov
leave
or
mov
push
insl
mov
jno
pop
or
cmpsl
cs
sbb
sub
cmp
ds
mov
dec
or
rol
repnz
repz
iret
cwtl
or
negl
iret
cmpsb
jmp
out
xor
and
cmpsl
pusha
and
mov
imul
mov
inc
push
push
add
lahf
movq
loope
push
out
mov
mov
call
jo
pop
mov
jle
mov
pop
push
sbb
scas
jle
or
jae
outsb
pop
adc
in
das
add
pushf
xor
and
arpl
jnp
sbb
jg
shrb
xchg
imul
lret
inc
jle
popf
aam
sbb
adc
mov
adc
lods
lcall
fiaddl
js
pushf
cli
push
lea
sbb
sub
xchg
pop
pushf
pushl
cmp
push
add
in
arpl
jmp
ss
scas
aas
imul
rcrb
aad
cmp
mov
mov
int
das
inc
pusha
mov
fwait
out
std
jmp
jo
mov
sub
repz
movsb
or
dec
mov
sar
push
repz
call
dec
or
sub
stos
pop
aad
jp
sbb
ss
jbe
add
je
or
xchg
or
iret
stos
mov
push
mov
mov
add
inc
repnz
jle
sti
loop
dec
and
fwait
sub
daa
adc
ljmp
idivb
call
imul
and
test
jbe
add
addr16
mov
jb
lret
orb
scas
gs
fbld
and
push
repz
mov
and
cmp
add
gs
les
mov
and
mov
sub
cs
dec
push
xor
sbb
inc
repz
add
sub
movsl
test
sbb
cmc
fadd
push
sbb
pop
cmpb
idivb
addb
sti
cld
fsubp
add
out
out
push
xor
es
stos
mov
roll
sub
sbb
sub
xor
loopne
xchg
push
ja
add
lret
ds
mov
jl
cltd
xor
cli
addb
pop
aaa
xor
xchg
stos
and
lahf
out
iret
in
les
pop
insl
lds
mov
push
loopne
in
mov
inc
popa
mov
aam
out
iret
jbe
or
imull
jp
aas
divb
xor
mov
jmp
dec
add
sbb
outsl
cmpsl
sbb
or
xchg
loopne
movsb
mov
cmp
pop
mov
xchg
sbb
stc
lock
imul
add
cltd
ret
sbb
cmp
outsl
fwait
loopne
sub
jg
stos
push
or
scas
insl
icebp
nop
fisttpl
add
push
lods
mov
push
pusha
fxch
loopne
outsl
mov
aam
popf
fildl
mov
push
test
push
in
aad
lds
adc
shll
push
icebp
inc
add
xor
popa
aad
lds
adc
shll
push
icebp
inc
add
xor
popa
aad
lds
adc
aad
loope
rolb
and
test
push
in
aad
lds
outsb
or
pop
lcall
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
pop
pop
mov
test
sub
pop
xorb
int
fdivl
add
adc
fs
jbe
inc
mov
mov
test
in
js
les
fsubl
adc
add
adc
or
push
ss
mov
sub
xchg
adc
sub
aad
call
pop
test
xor
sbb
and
icebp
or
pop
rcrl
in
fdivr
or
daa
daa
mov
movsb
push
test
lea
int
mov
sub
in
or
add
adc
fsubl
mov
inc
inc
fnstenv
sahf
cmp
cmpsl
cld
pop
fwait
test
jno
mov
lods
test
movsl
xchg
pop
sub
in
pushf
sarl
cmp
fnstenv
add
jae
pushf
mov
lods
mov
pop
loope
pushf
adc
rolb
int3
int3
aam
ja
and
ret
or
je
pushf
jne
push
lods
stos
movsb
fs
scas
repz
xor
xor
pop
xchg
sti
lods
or
gs
mov
inc
inc
insb
add
in
hlt
sub
and
repnz
adc
pop
xchg
dec
test
idivb
mov
or
popa
lods
cmp
int3
bound
jge
or
add
add
cmp
mov
mov
sub
outsl
mov
in
popa
mov
cmp
and
xor
add
adc
inc
sbbb
les
int3
and
xor
add
adc
fs
je
inc
mov
mov
test
in
hlt
sub
cmp
int3
and
xor
add
adc
fs
je
inc
mov
arpl
daa
pusha
jge
xlat
cs
add
mov
in
sarb
stc
inc
mov
and
fldl
shl
jne
push
es
andl
out
lahf
cmp
stos
push
push
add
jns
or
inc
imul
pop
push
ss
and
push
push
xor
mov
hlt
mov
push
ficompl
mov
push
filds
dec
fwait
in
mov
movsl
xchg
adc
das
divb
les
fildll
sarb
out
loopne
jno
cmp
clc
rcrb
icebp
out
bound
cmp
add
cld
cmp
mov
cmp
cmp
mov
mov
xor
push
je
sbb
inc
enter
scas
ja
popf
out
gs
mov
sub
mov
in
sub
mov
xchg
testb
outsb
pop
aad
sbb
mov
movsb
nop
lret
icebp
insl
ret
cld
test
adc
cltd
xor
inc
mov
mov
xor
xchg
or
jle
mov
add
mov
sbb
xchg
mov
sbb
je
cmp
scas
or
pop
inc
xchg
ss
xchg
lahf
jl
jae
popa
popa
xchg
inc
mov
rcll
add
dec
mov
ds
loope
fisubrs
cmp
ficoml
pop
pushf
mov
clc
mov
stos
nop
lcall
adc
cmp
out
decl
mov
or
rdpmc
out
std
xchg
mov
int
imull
cmpsl
add
sub
je
mov
jb
incl
aas
mov
jbe
adc
mov
and
hlt
mov
call
add
outsl
push
pop
mov
mov
sbb
xchg
cmpsl
es
shl
xor
mov
dec
dec
push
std
pop
das
mov
sub
out
push
movb
lock
add
lahf
stos
add
je
hlt
sti
sbb
fs
mov
in
sarb
fbld
lock
adc
xchg
jae
test
mov
mull
xchg
xchg
dec
int3
fidivrs
mov
jae
mov
push
add
xor
and
pop
popf
xor
inc
mov
loopne
jmp
testb
es
cmp
xchg
imul
repz
ret
and
stos
aad
insl
divl
fcoms
inc
dec
mov
in
add
loope
pop
fdiv
xlat
jp
pop
pop
pusha
repz
add
pop
dec
lahf
jmp
mov
pop
fiadds
in
aam
into
std
mov
xor
inc
jle
imul
mov
pusha
leave
push
or
lret
cmpb
sub
sub
dec
insb
push
mov
sbb
mov
rorb
xchg
xchg
adcb
or
sbb
mov
fstps
stos
xor
les
sbb
fistpll
and
fwait
sbb
data16
mov
movsb
fnstenv
jle
movsb
sub
or
xchg
push
or
xor
or
aam
and
push
in
pop
or
ljmp
scas
sahf
or
fcomps
and
push
frstpm(287
lods
aam
je
sub
flds
sbb
cmp
mul
call
stc
test
lret
lods
jg
rcrl
in
fdivs
cmp
adc
mov
add
fs
jae
push
insl
fistl
jne
xchg
push
je
mov
pop
aad
sbb
adc
jb
inc
jle
in
leave
pop
mov
lret
js
xchg
aam
outsb
or
mov
sahf
mov
dec
push
aas
push
mov
sar
lcall
cmp
fidivrl
lcall
idivl
cmp
adc
mov
cmpsl
adc
pop
mov
dec
jb
insl
or
dec
mov
stos
push
or
cmc
push
sti
test
push
je
push
xchg
adc
fwait
fwait
push
pop
dec
scas
clc
ficoml
add
mov
lock
je
or
push
filds
outsb
out
pop
pop
aaa
clc
mov
sub
fs
pop
jno
mov
and
lods
mov
jae
rolb
jno
outsb
jae
fcomip
insl
addr16
push
int3
xor
test
jae
int
xor
sbb
jb
jae
loopne
or
cmpsl
int3
and
adc
add
in
xchg
mov
mov
xchg
add
and
mov
mov
push
idivl
and
mov
test
fidivrs
sbb
dec
pop
or
test
jns
jae
mov
dec
dec
mov
arpl
and
push
mov
or
push
mov
mov
pop
popa
dec
les
aad
dec
mov
lret
pusha
mov
jmp
cmp
inc
dec
cmc
inc
cmpsl
or
repnz
cmp
cmpsb
lock
shrl
in
int
push
enter
push
push
push
frstor
das
or
mov
sbb
add
lea
cmp
nop
bound
dec
push
mov
int
pop
xchg
subb
in
pop
xchg
dec
cmp
xor
bound
or
int3
test
fisttps
outsb
int
mov
mov
dec
sub
mov
mov
add
jns
or
cmp
dec
inc
or
rcll
fstpt
cmp
adc
stc
ror
mov
and
lahf
push
add
lahf
ret
fsubrl
mov
xor
das
leave
mov
ljmp
adc
fdivl
std
out
and
cs
and
fildl
mov
sbb
adc
dec
lods
aad
popl
imul
mov
icebp
cmc
stos
pop
push
adc
push
sub
sahf
xchg
sub
sub
dec
push
pushf
pop
xor
push
pop
add
fadds
and
push
mov
add
add
cs
loope
cmp
fnstenv
insb
cld
push
mov
mov
je
push
jge
mov
jnp
and
scas
je
fwait
dec
dec
shrb
add
pop
sbb
mov
push
pop
ret
and
add
fisttpl
icebp
sar
subb
addr16
ds
pop
clc
pop
push
xchg
sti
cs
loope
xchg
test
inc
pop
into
cmp
mov
pop
outsl
pop
test
jg
jp
mov
dec
sbb
call
sub
inc
pop
sbb
mov
cli
mov
mov
int
cwtl
mov
xchg
lcall
aaa
jmp
aad
aaa
int
stc
cmp
pop
movsl
cmp
adc
jb
mov
and
sbb
mov
movsl
or
sbb
jp
pop
sub
das
mov
ss
xor
xorl
or
mov
or
mov
add
xchg
sbb
decb
popa
rcl
faddl
stos
mov
repnz
inc
adc
mov
sbb
xor
jecxz
add
jg
outsb
push
mov
cwtl
sub
popf
inc
loopne
push
pop
pusha
mov
cmp
sbb
pop
and
xchg
xchg
or
jg
mov
dec
fdivr
add
scas
outsb
xor
pop
pop
mov
mov
pop
fists
nop
cmc
mov
sbbb
mov
pop
repnz
addb
movsl
test
pop
jg
and
test
ja
out
mov
push
in
jae
cmp
test
adc
rcr
sti
adc
js
jae
adc
in
mov
mov
pop
xchg
pop
jae
pop
ljmp
stos
stos
xlat
enter
scas
pushf
add
xor
fdivrp
adc
xchg
xchg
push
pop
insb
jl
mov
shlb
shll
pop
out
aam
mov
nop
loope
cmp
adc
ret
mov
iret
out
mov
inc
call
jb
sbb
sbb
push
mov
adc
int
push
scas
jl
and
testl
lahf
jo
jle
adc
loope
orb
bound
push
sbb
xchg
pop
daa
mov
cmp
push
dec
or
repnz
or
call
popl
test
add
call
imul
mov
xor
cmc
frstor
inc
mov
push
push
aaa
adc
xor
orl
sub
pop
orl
or
add
les
cwtl
test
sbb
cmp
jns
mov
jno
aas
shrl
insb
xor
in
push
jnp
adc
loope
cwtl
jle
stc
aas
or
xchg
jecxz
aad
add
out
aas
sub
lods
icebp
cs
dec
jb
lahf
xchg
mov
ret
aad
dec
mov
xchg
aaa
mov
pop
dec
push
dec
jne
dec
ja
sub
mov
in
mov
jp
lea
ds
mov
jne
push
xchg
bound
out
pop
xor
adc
ljmp
fsubs
or
and
stos
mov
push
jecxz
xor
insb
inc
sarl
popf
and
call
mov
insb
sti
div
sti
mov
hlt
ljmp
scas
push
std
hlt
icebp
push
mov
xchg
jle
mov
call
popa
sub
push
ja
jecxz
cwtl
mov
daa
mov
test
jbe
das
aaa
out
xor
ss
nop
cmpsb
mov
mov
call
mov
mov
filds
jl
mov
mov
call
pushf
cwtl
cmp
ss
xor
mov
test
testb
adc
outsl
pop
js
out
jp
aaa
faddp
xchg
and
loopne
ljmp
leave
movsb
sbb
rorb
inc
je
shlb
xor
das
add
xchg
jo
mov
stc
cli
adc
sub
lods
icebp
dec
sti
sub
adc
sbb
leave
pushf
jae
pushf
outsl
inc
and
push
ret
jg
xor
xchg
jo
or
mov
push
int3
ja
xchg
pop
je
setns
lret
push
mov
jne
fmull
inc
xor
cwtl
push
pop
sbb
jo
call
dec
call
add
mov
sbb
sbb
loopne,pn
cmp
mov
imul
xchg
cltd
jne
movsb
test
push
sti
jmp
xor
cmp
or
leave
lea
add
or
pop
popf
mov
fld
cwtl
mov
cmp
ret
sbb
lods
fwait
pop
das
cltd
cmp
mov
popf
iret
movsb
in
stc
or
pop
xchg
and
pavgw
cwtl
pop
je
out
test
mov
inc
pop
ret
icebp
loopne
and
in
sbb
data16
pop
xchg
sub
stos
imul
push
enter
mov
sub
mov
adc
sbb
fs
mull
push
sub
jp
sub
mov
fwait
xchg
inc
rcrl
orb
mov
sub
jnp
jb
lods
cmc
mov
loopne
jne
mov
mov
xlat
mov
in
or
sub
add
shll
mov
in
adc
jmp
xchg
pop
mov
dec
lods
gs
push
adc
cli
push
mov
stos
sub
arpl
adc
lahf
fcoms
popa
nop
mov
sti
lods
cmp
cmp
push
enter
int
aad
cmp
hlt
inc
idivl
iret
stc
jg
adcl
leave
lret
pop
mov
pop
push
push
and
dec
out
negb
and
fadd
mov
jp
mov
outsb
dec
out
loopne
xchg
adc
pop
fdiv
stos
fst
mov
jl
pop
or
popaw
pusha
hlt
xchg
cwtl
imul
or
and
mov
mov
xchg
push
or
mov
enter
xchg
sub
and
stc
testl
add
jmp
repz
inc
push
andb
outsl
mov
pop
icebp
lcall
jp
dec
int3
add
and
movsl
ljmp
ficoml
jle
sbb
cmp
in
inc
or
xlat
push
mov
push
sarl
dec
std
mov
xchg
xchg
and
xchg
iret
decl
insb
stc
outsb
cs
inc
xor
cmp
mov
and
xlat
insl
push
stc
xlat
xchg
ja
jbe
sbb
mov
enter
and
or
mov
mov
mov
jns
cmp
bound
xchg
mov
xlat
mov
ffree
hlt
mov
lahf
or
push
cs
mov
sbb
popf
fstps
xor
lods
adcb
shrb
std
nop
xchg
mov
in
add
xor
sub
adc
clc
inc
inc
lahf
cmp
inc
pop
dec
lcall
insl
lods
pusha
pop
or
insl
cld
pusha
cmp
jp
xchg
cld
out
xor
idivl
and
mov
lret
insb
pushf
sbb
xchg
roll
jns
pop
dec
cmp
push
std
add
push
mov
pop
add
mov
movsb
and
pop
dec
cmp
mov
push
sbb
jg
mov
in
mov
lret
jno
enter
xlat
sbb
xor
pop
xchg
test
pushf
aad
dec
pop
pusha
jmp
sub
aaa
into
jb
lds
push
aaa
outsb
add
mov
lea
adcb
into
push
pop
push
pushf
adc
mov
cmc
lcall
movsl
sub
cmpsb
ss
movsl
lock
pop
es
mov
sbb
fisubrs
sbb
mov
xor
and
cli
cmp
cwtl
mov
fxch
bound
icebp
adc
sub
outsb
bnd
mov
xor
sbb
push
cmp
fs
push
out
inc
mov
les
cltd
jae
nop
mov
out
xor
mov
std
outsl
cmp
insl
or
js
xchg
mov
push
movl
mov
pop
stos
and
into
rol
lret
cmp
cmp
leave
pushf
or
nop
fstpt
insb
imul
xchg
jge
and
out
sbbl
xchg
out
repnz
andl
jle
vmwrite
mov
out
jnp
jne
fbstp
dec
mov
into
lret
insb
add
not
jl
stos
and
jl
xlat
cmp
mov
shll
mov
cmp
xor
push
lods
pop
aam
mov
daa
xchg
mov
gs
sub
stc
cs
sub
popa
adc
inc
aas
sub
scas
cld
cltd
cli
neg
inc
sub
xchg
out
out
mov
out
shl
inc
iret
and
aam
push
jp
ss
xor
pop
pop
daa
inc
out
dec
jo
aas
ret
rclb
icebp
inc
in
xor
sub
stos
test
int3
pop
leave
sbb
enter
or
outsl
clc
mov
push
push
std
popf
sub
nop
inc
bnd
imulb
sub
sbb
test
mov
adc
xchg
test
inc
cmpsl
fldt
call
or
addr16
imul
ret
repz
inc
neg
cmp
push
sub
mov
mov
stc
jecxz
mov
fdecstp
jmp
xchg
push
dec
inc
fs
jle
arpl
jle
inc
int3
or
adc
add
arpl
sbb
sub
cmp
fisubrl
adc
and
adc
adc
cmpsb
mov
mov
aad
icebp
jns
xor
cmpsl
clc
jnp
clc
daa
popf
xor
and
lods
xchg
pop
jno
lahf
sbb
inc
dec
daa
xchg
fwait
dec
rcr
mov
push
out
mov
popa
loope
insl
cld
cmp
xor
xor
int3
test
out
jbe
int3
fistps
jo
outsb
cmp
sahf
sbb
and
out
insl
fildl
subb
cmc
mov
scas
fiadds
sbb
cmp
popf
rol
mov
ds
lahf
mov
xchg
gs
mov
in
jmp
jge
mov
mov
dec
cmp
add
push
cs
adc
push
and
push
lahf
adc
int3
mov
jb
xchg
inc
mov
sbb
dec
mov
mov
jb
loope
dec
push
push
dec
xchg
pop
xlat
sbb
ret
cmc
mov
data16
cltd
inc
lods
jno
cltd
js
aaa
popf
push
sbb
or
cwtl
xchg
mov
jmp
jmp
xlat
xor
ret
insb
sbb
adc
xchg
pop
dec
mov
daa
mov
ds
ficompl
iret
stos
int
xchg
xor
into
pop
or
or
leave
pop
fcomip
cmp
add
stos
aam
inc
testl
xchg
inc
scas
adc
cmp
inc
scas
lds
test
das
fwait
sub
mov
int3
sub
testl
mov
sti
lahf
into
fcmovb
push
sbb
std
mov
cmp
movsb
sub
inc
mov
xchg
mov
es
iret
cmp
rorb
int3
jle
cmp
cmp
or
ret
inc
sub
sub
out
lock
rcrl
fmull
mov
or
dec
pop
jle
aad
mov
mov
jecxz
dec
fdivs
xchg
add
mov
stos
in
aaa
aas
or
sub
mov
mov
mov
fwait
ret
lea
push
add
mov
roll
dec
ljmp
enter
adcl
movsb
mov
jmp
xchg
pop
das
xchg
xchg
das
mov
dec
add
scas
shlb
outsl
mov
push
sbb
sbb
sahf
andl
stos
sarb
jp
xorb
std
ror
shr
lret
lods
ret
mov
xchg
push
imul
fildl
pop
sahf
lods
jae
inc
push
push
imul
mov
or
mov
test
add
test
insl
jb
xlat
inc
shlb
jns
fmuls
mov
inc
or
je
cmp
jnp
call
pop
push
clc
daa
nop
dec
lods
cmp
or
ret
popf
sbb
cmc
xor
xchg
cmp
inc
cli
and
jge
adc
add
mov
sbb
mov
inc
adcb
ljmp
imul
int
pushf
push
mov
sahf
rcr
idivb
push
fs
mov
dec
lods
add
and
shrl
sub
imul
xor
movsb
adc
scas
adc
es
ljmp
push
jp
subb
inc
xchg
xlat
lret
xor
or
jne
bound
popf
lcall
lea
inc
fwait
leave
aaa
inc
cs
sub
fucomip
mov
mov
and
gs
shrb
mov
and
sbb
jl
popf
int
incl
xor
bound
xchg
test
loopne
jg
pop
dec
and
fstps
lret
cmp
les
push
and
and
movsb
sbb
add
jmp
or
repnz
sub
push
jle
ret
add
jbe
push
shlb
adc
add
dec
aad
cmp
movsl
push
add
xchg
mov
imul
dec
std
lret
lret
add
push
mov
adc
xchg
repnz
jne
out
pop
js
mov
clc
sbb
xlat
sub
in
mov
shl
or
imul
daa
cmpl
or
rcl
cmp
adc
sbb
movsl
mov
in
aam
std
xor
jae
xchg
rol
cmp
sbb
pop
xorl
adc
call
cltd
mov
or
out
das
mull
xor
ss
jne
js
in
xchg
insl
mov
outsl
dec
mov
cli
jne
repnz
mov
pop
pop
fs
jp
sbb
or
jp
es
cwtl
daa
jecxz
add
dec
adc
dec
ds
hlt
push
inc
jae
leave
adc
mov
les
fldenv
inc
mov
pop
loopne
mov
int
dec
mov
mov
sbb
jb
repz
loope
stos
xchg
add
dec
packsswb
pop
xchg
test
inc
aas
je
xor
loopne
dec
lods
es
sarb
xchg
jae
stos
cmc
xchg
jo
in
ds
aaa
test
mov
jmp
sub
add
mov
les
push
arpl
xchg
pusha
xor
shll
cli
xchg
cli
push
scas
add
repnz
scas
hlt
jmp
and
mov
adc
mov
jmp
mov
sub
and
call
sbb
sub
cmp
int3
and
xor
add
adc
fs
je
inc
mov
mov
test
in
hlt
sub
cmp
int3
and
xor
add
adc
fs
je
inc
mov
cld
insb
cld
jl
or
sbb
sub
cmp
int3
cld
fdivl
add
adc
fs
je
fs
mov
test
in
hlt
lods
inc
mov
sahf
inc
add
arpl
in
adc
push
mov
pop
in
xchg
aas
test
aad
test
lock
das
scas
and
add
jno
mov
push
incl
pop
movsb
cs
aas
test
pop
in
aam
ljmp
mov
fs
push
incl
pop
bound
push
aas
repnz
les
outsl
fidivrs
xor
pop
into
jne
jbe
daa
mov
iret
es
and
pop
in
outsl
loope
sti
jg
xchg
push
dec
add
mov
lods
dec
push
pop
mov
addr16
loopne
jnp
loope
outsl
in
or
cli
lret
pusha
fdiv
jmp
push
xor
cmp
filds
or
int
je
sbb
sbb
xor
inc
cli
jno
pop
cwtl
insb
cmpb
seto
test
jae
adc
dec
lahf
mov
les
popa
mov
ljmp
loopne
jl
sub
push
in
adc
ljmp
push
mov
push
add
testl
push
scas
mov
mov
je
ret
mov
mov
pop
test
loopne
test
pop
in
aam
push
xor
mov
dec
fisttps
jnp
pop
lret
inc
clc
jno
or
cmp
out
sub
addr16
and
loop
out
call
outsl
mov
repnz
xlat
inc
fidivl
cmp
jns
xor
pop
call
outsl
aam
les
adc
add
je
fs
push
incl
pop
movsb
das
xchg
aas
test
pop
in
aam
les
adc
add
je
fs
push
incl
sbb
mov
xchg
push
in
sbb
jnp
pop
sub
loop
into
xchg
mov
icebp
or
pop
add
imul
push
mov
scas
enter
mov
push
and
sub
mov
mov
inc
cmp
jp
ljmp
mov
and
and
mov
dec
xchg
flds
mov
dec
pop
add
addl
inc
jle
mov
xchg
jbe
out
push
mov
lret
sbb
test
xchg
cmp
cmp
xor
jecxz
xchg
mov
push
or
sbb
popa
in
mov
mov
daa
add
mov
aad
cli
push
mov
test
cmp
pop
mov
das
popf
adc
dec
dec
cmpl
lds
adc
insl
int
and
aaa
iret
push
test
sbb
xor
add
idivl
inc
fs
inc
loop
xchg
pop
icebp
mov
xchg
or
ljmp
imul
cmpsb
mov
lea
pop
mov
ret
sub
mov
outsb
push
cmp
mov
push
js,pn
push
fbstp
mov
mov
sub
jo
dec
sub
xor
fbld
jecxz
dec
inc
out
xlat
pop
fsubs
lcall
out
fistpll
leave
popf
testl
jecxz
push
inc
inc
push
sub
cmc
movsb
stos
in
sbb
push
mov
push
movsb
dec
outsl
rorb
cmp
push
pop
and
vrcpss
dec
pop
mov
aam
sahf
xchg
leave
mov
aas
sarl
or
and
jp
ss
add
xchg
mov
rcll
adc
arpl
shlb
jo
push
es
xor
push
dec
push
inc
cmc
in
enter
xchg
inc
arpl
xor
dec
adc
pushf
or
ja
pop
jb
cmp
ret
xchg
test
adc
pop
out
mov
mov
mov
mov
pop
leave
test
nop
lods
jnp
loop
scas
in
aam
mov
frstor
cmp
fsts
xchg
add
scas
fucomip
fucomip
adc
inc
pop
jae
adc
ret
adc
mov
fistpll
aas
repz
xor
andl
ljmp
cli
leave
arpl
inc
scas
test
lret
pop
or
or
aaa
cmp
push
fcomp
mov
dec
testl
in
cmp
inc
jmp
inc
jno
mov
data16
adc
nop
cltd
in
adc
rdtsc
jg
testb
movsl
outsl
mov
adc
mov
hlt
roll
add
in
stc
aam
ljmp
fsubrp
xlat
clc
mov
sub
mov
aad
test
sti
out
out
rorl
mov
dec
aaa
or
call
out
int3
and
push
pop
sbb
push
xchg
xchg
xchg
push
shlb
push
outsb
imul
outsb
aas
nop
add
xchg
xchg
arpl
xor
sub
nop
push
int3
cmp
adc
aam
mov
rcrl
xor
mov
mov
outsl
mov
in
cli
cwtl
data16
aam
xor
add
ret
mov
aas
pop
push
aam
int3
pop
mov
imul
mov
hlt
in
inc
pop
mov
pop
das
std
jecxz
and
movsl
inc
jle
aas
loope
push
clc
test
aas
add
dec
into
fldl
movsb
imul
out
iret
dec
xor
cmpb
sub
and
mov
es
inc
into
or
sbb
xor
lods
or
fsts
push
push
sbb
jbe
jae
test
test
fidivrl
push
stos
aad
gs
jae
and
mov
sub
push
push
incl
xorb
mov
fiadds
dec
mov
fcoms
lods
and
idivb
loopne
lea
iret
inc
orb
cs
sbb
enter
aam
mov
movsb
push
lret
hlt
cmc
inc
cmc
bound
mov
addr16
ret
stos
adc
inc
loope
scas
jge
test
xor
adc
cli
testl
lret
mov
dec
rolb
sarb
inc
cltd
pop
sbb
fucomi
nop
pop
mov
popf
jb
shrl
sbb
dec
stos
imul
and
mov
push
inc
call
add
add
imul
cmpsl
cmpsl
movsb
jo
popf
arpl
test
cmp
scas
lahf
fwait
push
jle
sahf
push
fwait
out
and
loope
pop
xor
pop
xchg
cmc
cli
scas
pop
pop
jg
push
sbb
pop
jg
mov
fwait
mov
cmp
lds
add
cmpb
orl
adc
and
hlt
xchg
stos
fwait
in
add
and
cmp
mov
xlat
or
push
addb
xor
or
inc
test
ret
icebp
mov
mov
pop
pop
mov
dec
in
sbb
or
testl
or
push
lods
das
enter
loop
dec
sub
loopne
or
add
std
enter
shrb
mov
and
sub
jg
push
das
pop
leave
loope
push
jno
ja
out
or
nop
ss
fimull
push
push
pop
push
push
adc
stos
jmp
xlat
pop
stc
mov
cmp
mov
adc
cs
or
pop
jl
test
pop
xchg
ficoms
bswap
leave
outsb
pop
stos
xorl
movsl
int3
pusha
and
pushf
mov
stos
mov
test
lods
cmpsl
mov
js
fldl
xchg
bound
pop
add
xchg
xor
ss
xchg
dec
push
movsl
sbb
pop
test
fisubrs
cwtl
cmp
hlt
sti
or
outsb
inc
mov
inc
test
sahf
iret
and
scas
add
pop
sub
dec
out
in
pop
fwait
loope
test
lods
mov
cmp
push
popa
jb
mov
adc
imul
in
scas
mov
lods
jg
inc
mov
mov
push
mov
int3
add
jmp
or
sbb
hlt
sub
mov
and
pop
sbb
outsb
call
xor
cltd
adc
adc
xchg
out
into
ret
lcall
das
cmc
fs
sub
dec
dec
cld
mov
and
adc
dec
jb
mov
fisttpl
push
pop
push
mov
xchg
mov
or
scas
sub
clc
insb
shll
ja
jne
dec
push
call
jae
xchg
jmp
pushf
arpl
shrb
aaa
push
clc
stos
in
cmp
in
or
sbbl
test
repnz
or
cli
mov
fmuls
jecxz
shlb
andl
push
insl
mov
repz
and
sti
std
icebp
outsl
pop
nop
call
sub
aaa
xor
out
arpl
das
jge
fcomi
or
jge
dec
int
fldlg2
gs
push
scas
int
out
mov
insb
cmp
aam
dec
pushf
xchg
jo
pop
outsb
xor
cli
jp
sbbl
pop
sub
pop
rorb
in
mov
addr16
pusha
mov
hlt
leave
test
andl
imull
cmpsl
mov
add
scas
push
out
mov
int3
ret
gs
hlt
jbe
cmp
pop
add
fs
pop
mov
adc
jmp
and
loopne
pop
jle
repnz
mov
cmp
outsb
inc
into
cwtl
jno
rcrb
pop
or
adc
mov
leave
or
pop
bound
xchg
dec
hlt
hlt
data16
sbb
sbb
and
test
add
inc
aad
fstpl
enter
sub
gs
popa
outsl
mov
lcall
cmpsb
fcompl
xchg
or
inc
test
inc
out
loop
cs
divl
insb
push
xchg
in
adc
jns
add
cmp
or
adc
stos
push
xlat
mov
and
shl
fs
jne
mov
in
call
mov
out
cmp
out
or
ja
fistps
enter
mov
jb
jmp
cmp
push
mov
mov
add
and
notb
aad
out
mov
mov
fdiv
add
jno
jnp
incl
jmp
xchg
loope
aad
sbbl
mov
lcall
ret
xchg
or
and
push
jbe
xchg
out
pop
pop
daa
push
mov
int
xor
shll
xchg
push
ret
lods
xor
sbbb
push
into
lds
lcall
pop
and
cltd
or
orl
notb
or
loopne
pushl
rcrb
xchg
aad
dec
das
xor
xchg
jge
inc
stos
jle
push
or
subl
popa
mov
sarl
cmp
pop
xchg
nop
icebp
int3
or
and
xchg
xchg
push
sahf
fdivrs
adc
das
fsubs
jno
stos
flds
orb
repz
xorl
std
or
aam
test
add
imul
cmpsb
cwtl
inc
dec
or
cld
mov
mov
mov
pop
outsl
mov
add
push
arpl
xor
ds
jae
iret
jne
sub
stos
int
in
mov
push
ss
pop
mov
xchg
into
inc
out
xlat
or
jae
into
and
data16
or
enter
jnp
add
les
pop
hlt
jl
into
xor
dec
push
jbe
mov
pop
push
les
cmp
ds
test
aam
cmp
and
lds
jae
test
pop
hlt
add
sub
xor
sub
loopne
sbb
insl
mov
sti
cmp
popa
out
inc
mov
mov
mov
xor
push
or
mov
call
stos
das
notl
insb
xchg
fsub
paddusw
xlat
jae
xchg
xchg
hlt
movsb
xlat
sub
sbb
push
cwtl
and
or
pusha
shrl
imul
mov
push
or
ret
mov
adc
cmp
enter
pop
jge
push
lret
in
mov
mov
add
pop
lret
cltd
unpckhps
xchg
cltd
xchg
jo
aaa
inc
pop
or
les
push
pop
scas
inc
jmp
dec
dec
xor
int3
mov
sbbb
clc
adc
ljmp
cld
cld
sbb
or
jne
push
test
das
test
fnstsw
rcll
stc
or
mov
sub
testl
repnz
out
stos
inc
xchg
aas
lods
popf
pop
insl
fldl
mov
and
mov
jnp
xlat
mov
adc
add
sub
flds
cmc
outsb
adc
ret
hlt
iret
add
fadds
xor
xchg
mov
jno
addr16
mov
pusha
mov
mov
pop
sub
stos
int3
das
rol
test
rol
push
mov
js
push
cli
lcall
dec
ror
adc
push
pop
dec
ds
jmp
push
adc
push
dec
bound
adc
filds
push
inc
cmp
scas
pop
jne
call
cmp
inc
lea
repnz
test
mov
insl
jb
cmpsl
adcb
loop
imul
aaa
sbb
jnp
sbb
xor
xchg
pop
mov
mov
pop
mov
adc
push
dec
cmpl
ja
and
mov
pop
mov
fimuls
inc
mov
cltd
data16
mov
dec
jge
clc
pop
lahf
jp
insl
adc
xlat
mov
sbb
mov
je
sub
test
sub
xchg
inc
pop
or
xchg
ss
adc
lahf
test
std
in
sbb
mov
inc
dec
mov
insl
push
push
push
lock
xor
inc
push
push
xlat
mov
out
mov
cmpsb
std
popf
and
das
cmp
pop
ds
mov
data16
incb
fucom
and
cs
or
lock
stc
sbb
jb
mov
fcmovnbe
pop
int
bound
adc
sub
clc
movsb
xor
mov
shll
sbb
ret
jmp
jmp
jnp
inc
in
ror
mull
cmp
js
and
stos
and
xor
adc
loopne
ret
xor
scas
pushf
xor
jns
mov
jo
mov
dec
out
in
aaa
fcomip
ret
inc
bound
or
adc
notb
jnp
inc
aam
adc
pop
std
insb
or
cmp
scas
mov
inc
sbb
ret
and
daa
push
cmp
xchg
mov
loop
lods
cltd
flds
adc
js
shlb
nop
js
sbb
pop
inc
jp
cmpsb
pop
fisttps
sbb
fs
mov
fdivl
inc
adc
push
and
dec
arpl
xchg
call
rcll
adc
xchg
push
pop
lret
mov
or
data16
adc
cmp
call
int
push
fcompl
mov
arpl
push
xchg
cmp
test
fwait
sbb
movsl
xor
xchg
repz
enter
cmpsl
bnd
mov
mov
mov
fstps
clc
loopne
sub
xchg
in
pop
jnp
int
cmpsb
hlt
mov
adc
pop
mov
and
or
or
in
lret
push
jmp
mov
insl
bound
mov
repz
lret
jle
pop
roll
shll
adc
lret
outsl
pop
jbe
je
pop
xor
ret
inc
lahf
addl
in
and
shrl
cmpsl
test
sbb
and
or
fistpl
movsb
std
in
mov
jae
ret
push
mov
add
fisubl
sbb
stc
fisubl
and
es
mov
and
inc
jae
fs
movsl
out
es
add
outsb
jg
sub
mov
inc
dec
pop
ds
sbb
pop
insb
mov
sub
pushw
xor
lods
repnz
andb
adc
rcr
push
push
adc
lods
incl
scas
rorl
push
sub
xchg
and
pop
sub
data16
jne
lret
or
or
sahf
push
rorl
inc
jae
sbb
xchg
std
lcall
xchg
dec
inc
xor
xor
inc
adc
loope
jecxz
lret
nop
cmp
dec
mov
mov
or
daa
push
add
sbb
push
sti
sbb
jno
dec
js
cmp
clc
stc
mov
mov
cld
je
inc
cmp
loope
mov
sbb
fsubrs
inc
cmp
mov
ss
or
scas
ljmp
or
push
jb,pt
or
jno
addr16
pop
movsl
adc
incl
orb
sbb
jb
aam
cmp
in
dec
enter
popa
call
bound
mov
jle
pop
mov
or
call
cs
push
adcb
enter
call
xchg
inc
pop
inc
leave
gs
scas
inc
cmp
mov
out
jno
jno
xchg
xlat
adc
push
adc
jecxz
ds
xchg
mov
in
jmp
add
jl
adc
imul
mov
sub
add
orb
sti
bound
mov
jg
jae
jno
mov
daa
dec
mov
mov
imul
pop
shrb
fidivs
jecxz
pop
mov
mov
loop
ss
sub
pop
into
adc
sbb
scas
sbb
add
clc
push
scas
jns
int3
pop
adc
pop
insb
jo
inc
sbbb
cmc
pop
jp
enter
jg
arpl
mov
std
xor
jp
xor
dec
aad
sub
mov
loopne
pop
mov
ret
lock
pop
shll
mov
jbe
mov
mov
shlb
push
imul
mov
mov
aaa
addr16
imul
push
jno
out
shll
popa
clc
dec
jl
cmp
push
mov
push
mov
pop
mov
sbb
sbb
outsl
mov
push
out
call
std
sarl
jmp
push
ja
loopne
lret
test
and
mov
aaa
sbb
fistps
les
dec
xchg
andb
fisubl
jbe
add
jge
sbb
arpl
xor
xor
jl
dec
iret
and
fimull
arpl
int3
push
mov
fldl
jmp
leave
testb
lret
adc
ret
cmp
mov
int3
or
arpl
and
jl
int3
adc
and
xor
sbb
cmp
jl
and
or
je
adc
mov
adc
lock
stos
cmp
js
cmp
orl
mov
mov
addl
fsubl
inc
mov
cmc
pop
dec
jns,pn
sti
fidivrl
push
ret
add
xor
mov
adc
and
in
adc
subl
int
clc
jnp
add
fsubrl
orb
jecxz
mov
ja
mov
mov
xchg
xchg
lods
fs
push
mov
and
jb
out
cmp
jae
mov
ret
lods
ret
inc
mov
fcmove
dec
imul
outsb
fdiv
faddl
cmc
lods
test
testb
jno
jecxz
pop
mov
dec
and
cwtl
dec
fwait
hlt
cwtl
xchg
sub
jg
sub
mov
add
scas
jne
sub
daa
stos
push
in
imul
lcall
adc
pop
adc
adc
stos
add
mov
jnp
mov
cltd
fmull
and
xchg
or
xlat
push
into
add
repz
outsl
mov
aas
int3
xor
jae
push
ja
lret
test
test
jge
push
mov
in
inc
lods
xor
aam
inc
out
cmp
cmp
add
out
inc
and
stos
push
jnp
add
mov
daa
cmp
mov
test
lret
jno
adc
jecxz
inc
or
loope
les
pop
mov
lret
scas
outsl
notb
mov
shll
shl
ljmp
and
or
cmp
xor
leave
sub
jl
loop
arpl
insb
in
jge
popa
push
lods
fcoml
mov
push
pushf
wbinvd
jl
or
shl
arpl
aad
ja,pt
mov
mov
sbb
sbb
stos
pop
dec
sub
pop
out
jno
daa
lret
sub
cmp
insb
mov
pushf
int
sbb
in
push
xchg
cmp
push
jnp
mov
jno
popa
mov
es
mov
xchg
subl
pop
lahf
and
or
jne
xlat
std
out
cmp
cs
cmpsl
es
cli
fs
and
cmpb
lock
addl
test
xchg
xor
xadd
inc
clc
mov
cs
adc
aad
pop
xor
mov
and
adc
stos
xchg
mov
repz
pop
lahf
push
jnp
rorb
in
sbb
adc
dec
xlat
mov
cmp
je
lahf
xchg
cmp
sarb
adc
pop
bound
test
lcall
enter
add
in
pop
jl
scas
mov
outsb
or
adc
or
cli
mov
jb
push
stos
cmp
mov
fs
iret
pop
out
andb
sub
inc
imul
xor
dec
std
or
andl
loopne
cmp
sub
stc
xchg
out
mov
inc
xlat
dec
pop
int
stos
in
inc
shll
gs
pop
jge
pop
cmp
cmp
jne
dec
dec
mov
nop
pop
int
mov
and
or
jo
cwtl
mov
xchg
mov
jo
mov
inc
adc
negb
jb
jno
xor
pusha
push
push
rolb
loop
jne
lods
xchg
jbe
jns
sub
mov
stos
push
add
mov
fs
lret
sub
and
pop
cmc
jae
pusha
or
mov
shlb
cltd
test
pop
jb
add
sub
inc
mov
sahf
dec
inc
cmp
mov
xchg
push
jns
cli
rclb
mov
sbb
cltd
repnz
push
mov
jae,pn
ss
movsl
loop
hlt
mov
sub
mov
and
pop
mov
sub
add
push
add
in
out
addb
aaa
sbb
hlt
xchg
sub
cmp
jnp
pop
sti
js
and
lret
jle
dec
roll
push
mov
leave
push
dec
adc
pop
lcall
pop
xchg
in
mov
add
les
xlat
xor
xchg
sti
push
lret
insl
repnz
jae
jne
and
push
xorl
inc
mov
out
in
aas
test
pop
in
aam
les
adc
add
je
fs
push
incl
pop
movsb
das
xchg
aas
test
pop
in
aam
les
adc
add
je
fs
push
incl
pop
stos
das
mov
orb
outsl
sarb
xor
mov
fs
pop
mov
jo,pn
les
pop
in
push
jg
lret
lahf
mov
or
sbb
sub
cmp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
test
or
mov
test
addb
or
or
add
str
lcall
add
add
add
imul
pop
add
add
add
and
mov
add
xor
fadds
or
into
add
add
and
mov
add
add
or
mov
add
or
insl
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
mov
gs
add
push
add
add
add
add
add
add
add
add
addb
add
mov
add
add
add
incb
cltd
add
add
add
add
add
add
add
add
add
add
add
sbb
loop
sub
jnp
verr
add
add
sub
addl
add
add
add
add
add
add
add
and
dec
add
add
imul
enter
loop
mov
pop
add
lldt
add
pop
add
add
add
add
add
add
inc
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
adc
inc
add
repnz
add
add
add
add
cltd
add
add
roll
jnp
add
add
add
add
add
mov
add
add
add
enter
rolb
int
mov
add
add
add
add
cltd
add
sub
add
mov
add
cltd
add
add
cmp
add
stos
add
add
add
add
add
or
fadds
inc
add
add
add
add
rolb
add
inc
add
add
add
enter
add
push
add
add
addl
add
and
scas
add
add
add
add
add
add
add
cmp
mov
add
add
cltd
add
add
add
add
add
add
or
test
mov
add
add
mov
pop
push
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
addl
add
add
add
mov
add
add
add
add
add
add
and
add
add
sub
xor
and
scas
add
add
add
add
add
add
add
sbb
movsb
add
add
add
pop
add
add
pop
mov
add
add
pusha
add
add
xchg
add
add
add
add
add
add
add
add
push
add
add
add
mov
adc
add
add
add
add
mov
add
add
add
popl
loop
roll
push
add
rolb
popa
add
add
mov
stos
jbe
jp
mov
mov
dec
test
or
imul
mov
sub
dec
pop
testl
sbb
std
arpl
and
out
mov
inc
in
icebp
js
test
aaa
cmp
mov
mov
mov
and
cs
pop
inc
or
lds
jge
add
loop
sbb
sub
lds
cmp
test
dec
mov
outsl
mov
and
jo
addl
push
dec
rorb
roll
insl
jmp
es
mov
enter
xor
cli
jne
pop
pop
or
xor
mov
test
jmp
and
repnz
out
and
jle
cmp
je
xchg
stos
jp
inc
push
add
aam
imul
lock
je
add
mov
add
int3
es
outsb
mov
lods
push
inc
or
xor
jmp
int3
fimull
push
xchg
roll
lret
sbb
gs
test
and
cmp
or
mov
pop
lcall
daa
sbb
mov
lds
and
xchg
mov
aad
push
adc
jecxz
push
outsl
add
pop
and
outsb
jmp
dec
cmpl
aas
mov
loop
mov
cmp
push
ss
mov
pop
les
repz
dec
sub
lds
idivl
and
xor
and
dec
mov
jno
push
sahf
js
push
js
dec
pop
out
inc
aad
mov
cmp
xchg
mov
mov
incl
adc
notl
test
sti
fcmovb
mov
in
sbb
or
and
iret
sbb
and
mov
test
jbe
jle
lret
outsb
mov
repnz
jno
mov
pop
jne
dec
or
jmp
gs
test
xchg
addb
xchg
fldt
dec
das
sbb
sbb
mov
jge
cmp
loopne
add
loope
cwtl
outsl
leave
outsl
mov
or
fiaddl
imul
inc
sbbl
cli
sub
inc
mov
aad
ret
cmp
cmp
add
idivb
push
jle
mov
aaa
sbb
push
cmpsl
jo
int
pop
adc
repnz
cmpsb
and
sbb
sbb
fstl
lods
and
adc
negb
jne
mul
jmp
mov
jp
fiaddl
stc
adc
pop
daa
sbb
sti
and
adc
cmp
sub
sti
pop
sbbb
and
or
pop
xchg
mov
xor
or
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
