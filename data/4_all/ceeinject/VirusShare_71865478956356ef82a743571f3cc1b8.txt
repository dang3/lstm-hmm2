mov
jg
sbb
stc
insb
pop
shrl
pusha
add
test
test
adc
xor
inc
es
movsl
xorl
es
test
outsb
cmpsl
dec
adc
push
pusha
aam
mov
inc
std
arpl
push
xor
add
shll
adc
dec
or
ret
xchg
sub
or
aam
in
sti
fcompp
imul
mov
mov
ss
pop
pop
outsb
movsl
and
test
clc
push
fistl
sub
idivb
mov
xchg
into
sbb
in
mov
stos
cmp
sbb
sbb
or
dec
jo
mov
in
outsl
or
xchg
inc
sbb
pop
int
xchg
xchg
pop
dec
pop
scas
ss
mov
push
sahf
inc
shlb
push
mov
mov
addr16
pop
mov
jae
and
lds
jmp
inc
rcl
or
inc
adc
and
sub
repz
sbb
cmc
scas
dec
mov
cs
dec
push
mov
mov
repz
and
adc
dec
pop
fwait
mov
inc
xchg
xchg
cmpsl
aam
mov
insl
and
dec
mov
jnp
mov
pop
shll
inc
sbb
add
or
push
jmp
insb
inc
shl
loop
imul
ss
notb
mov
repnz
sbb
cmp
add
lcall
mov
fsubrs
iret
mov
icebp
xchg
lea
mov
ret
jns
aas
pop
xlat
stos
popf
or
adc
in
dec
push
xor
cmpb
jmp
adc
aad
ret
add
xchg
out
out
xchg
push
push
sarl
mov
mov
add
in
xchg
fsubl
xor
aas
jmp
and
adc
xchg
daa
xchg
pcmpeqw
push
sub
fstps
in
pusha
push
dec
sub
aaa
jmp
lahf
adcb
enter
xchg
test
xor
lahf
loopne
mov
adc
ja
mov
lcall
pop
cmp
dec
scas
daa
xchg
push
vmptrst
out
pop
imul
jge
jno
lcall
in
mov
lret
jae
sbb
addr16
xor
shll
cmp
not
sbb
ret
mov
mov
jecxz
icebp
mov
mov
push
pushf
push
dec
aaa
push
lret
or
add
pop
pop
stc
cmp
or
cmpsl
aaa
in
sbb
or
lret
repz
mov
mov
dec
xor
cmpsl
fisubl
xchg
xchg
insl
mov
lret
cmc
sub
popf
outsl
xchg
dec
stc
hlt
and
movsb
cmp
inc
adc
jmp
xor
clc
lret
or
imul
mov
int
add
adc
dec
pop
pushf
cmp
mov
cmpl
into
push
push
test
imul
mov
outsb
dec
outsl
fisubrl
negb
push
dec
jecxz
rcrl
loopne
jle
jnp
fimuls
or
ffreep
test
inc
mov
test
mov
dec
dec
cmp
daa
inc
std
out
add
ja
add
mov
cmpsb
sarl
or
les
frstor
pop
dec
inc
hlt
and
frstor
icebp
inc
cwtl
push
in
daa
insl
mov
xchg
xchg
or
pminsw
push
mov
jae
hlt
xor
dec
pop
inc
lret
iret
sahf
add
and
xor
sarb
out
dec
in
fsubs
dec
add
movsb
notl
shlb
push
das
lcall
icebp
push
push
or
mov
mov
imul
inc
and
add
pusha
or
push
lea
testl
sahf
fstpl
sub
xchg
xchg
dec
adc
add
mov
xchg
stos
out
in
inc
shlb
mov
mov
loope
aad
pop
mov
jb
add
lret
das
ret
ret
jbe
enter
subb
push
andb
or
xchg
or
fidivrl
lds
mov
mov
sub
lcall
aad
adc
add
push
out
push
bound
and
adc
leave
xchg
inc
dec
pushw
jp
or
cmp
and
lea
outsl
jo
xchg
inc
push
xchg
or
push
cli
dec
mov
push
xlat
movsb
xchg
es
mov
leave
cmp
movsb
push
fbld
loopne
xor
lea
push
sbb
xor
mov
cmpsb
enter
outsl
int
nop
dec
xchg
cmpb
xor
pushf
test
jae
fsubrs
sub
mov
add
jg
out
pop
mov
jg
and
stos
add
into
or
mov
cmp
push
and
push
imul
int
inc
cld
dec
mov
out
add
rolb
jno
xor
andl
push
xorb
cmpsl
push
add
xor
jle
cmpsl
ljmp
adc
jg
or
inc
mov
inc
push
mov
lods
add
into
xchg
pop
pop
inc
and
mov
dec
xor
push
das
lahf
popa
add
mov
aaa
lret
inc
fdivrl
daa
pusha
ret
jl
adc
or
inc
mov
fldcw
enter
push
jg
push
pusha
jge
xor
je
xorl
out
and
add
mov
int
hlt
adcb
jg
add
sbb
std
cltd
mov
sbb
leave
add
mov
jmp
cmp
repz
mov
xchg
dec
xor
and
into
xor
pushf
jp
bound
cmpsl
roll
adc
sub
jecxz
jae
xchg
jp
imul
mov
dec
ret
lcall
pushf
push
ret
mov
pop
les
mov
sub
clc
mov
js
jp
loopne
scas
dec
roll
int3
loope
jnp
pushf
popf
add
mov
out
add
xchg
dec
js
pop
mov
push
push
sbb
loopne
dec
mov
cmc
inc
roll
aad
push
mov
fwait
loopne
cli
mov
test
ret
and
fstl
leave
and
sbb
jecxz
mov
lds
inc
and
orb
mov
mov
enter
outsl
inc
repnz
insl
cmp
jmp
notl
int
faddl
aad
ret
mov
cmp
outsb
iret
jb
lea
or
movsb
dec
call
sub
jnp
lea
jle
mov
adc
cmp
test
shrb
enterw
push
sub
sbb
jns
push
divb
sub
cmp
subb
adc
rclb
loop
mov
sbb
mov
or
push
and
lods
hlt
ss
cmp
roll
popf
repnz
gs
jnp
push
andl
outsb
pop
xchg
mov
mov
cmp
fwait
out
out
push
dec
push
pop
call
xchg
add
add
xchg
adc
ds
mov
mov
mov
jb
sbb
pop
or
adc
clc
push
xchg
nop
push
mov
shlb
mov
ds
or
enter
mov
or
push
pop
adc
cmp
nop
mov
pop
jmp
cmp
cmp
jns
sub
or
inc
xor
rcrl
jo
call
lods
mov
loope
negl
jnp
pop
mov
mov
inc
pop
dec
int3
cmpsl
sarb
inc
cmp
ret
shlb
mov
dec
lret
sbb
dec
push
sub
arpl
or
in
fs
fadds
xchg
jbe
pop
add
mov
stc
mov
or
in
push
push
mov
insb
mov
inc
inc
call
or
push
or
sub
fnstsw
mov
test
dec
or
sub
pop
popf
pop
lea
jecxz
out
scas
mov
sti
and
loope
add
stc
xor
in
pusha
pop
sub
mov
popa
movsl
push
cmp
data16
push
push
xor
xor
push
push
ja
call
cmp
repz
mov
xor
cwtl
aam
js
pushf
cmp
or
movsl
push
xor
jne
or
test
mov
or
pop
outsb
pusha
xchg
into
scas
xor
cmp
push
push
mov
and
jl
ss
sbb
pop
inc
cmp
rcl
jge
outsl
jge
in
lret
inc
fwait
mov
lret
push
push
pop
mov
xchg
daa
pop
jns
pop
lret
mov
sub
sar
mov
out
sub
lods
mov
mov
repnz
notb
lea
xchg
test
push
mov
pop
test
cld
int3
mov
inc
mov
adc
mov
adc
sub
dec
scas
mov
inc
insl
data16
jmp
int3
js
inc
push
stc
aad
jge
scas
mov
into
das
adc
bound
adc
scas
popa
pusha
mov
jb
das
jbe
inc
mov
adc
sub
cld
fnstsw
add
dec
aaa
add
add
adc
and
dec
sbb
fistpl
loop
sub
push
scas
push
jmp
jmp
mov
or
add
rorb
das
mov
fstpt
mov
loop
lock
and
cmp
into
popa
pop
mov
xlat
iret
cmp
jmp
stos
pop
inc
pop
inc
add
repz
mov
aad
mov
fdivrs
mov
iret
push
nop
add
jae
mov
add
daa
xchg
push
lds
push
iret
dec
jo
mov
lahf
movsb
or
or
pop
mov
sub
mov
and
pop
or
jg
lods
js
cmp
lods
sti
mov
mov
cli
rol
cld
xor
or
sub
je,pn
jns
fdivrl
dec
mov
cs
enter
sub
out
out
xchg
sbb
inc
js
pop
or
mov
cs
cs
pop
pop
cmp
pop
lods
or
sub
mov
sbbl
fwait
popf
mov
pop
sbb
std
ret
mov
or
mov
mov
sbbl
in
cltd
mov
popf
pop
xorl
into
inc
cmp
test
inc
mov
adc
inc
rclb
mov
mov
aas
test
test
out
sbb
out
mov
mov
xor
je
add
and
fxch
sahf
pop
fdivs
jnp
lock
int3
sti
lcall
mov
jae
mov
jmp
sub
sub
aad
sahf
fidivl
int
push
dec
mov
sub
push
shll
addr16
adc
rcrl
inc
std
jnp
ljmp
loope
cmp
iret
shll
jg
scas
push
js
dec
mov
cmovne
sub
adc
add
adc
pop
jl
fidivl
bound
popf
hlt
movsb
ds
addr16
out
int3
sub
mov
mov
insb
adc
test
test
scas
adc
push
loope
arpl
mov
dec
in
sti
in
in
pushf
xor
add
pop
imul
mov
sub
movsb
xor
adc
pop
xor
jne
gs
sbbb
outsb
xor
mov
xchg
cltd
cmp
lcall
in
push
test
fidivrl
adc
pop
push
add
push
push
mov
dec
popf
stos
test
mov
adc
add
outsb
mov
inc
jge
push
std
rcll
mov
jnp
arpl
fwait
test
nop
subb
add
aaa
pusha
loope
inc
cmp
cmp
cld
test
addl
fadds
enter
add
sarb
push
lock
adc
dec
enter
orb
add
std
shrb
imul
pop
loopne
hlt
cmp
mov
sbbl
fadds
adc
mov
std
xorb
loopne
popa
pop
cmp
aaa
cmp
inc
sbb
add
sbb
sete
xchg
shlb
cwtl
add
shrl
daa
sbb
and
popa
movsb
xchg
add
dec
xchg
mov
inc
and
sub
pushf
dec
adc
inc
mulb
pop
not
lcall
lds
aad
lret
out
jl
mov
repnz
dec
cltd
and
jns
jbe
pushf
adc
push
xchg
mov
adc
add
xchg
test
or
xchg
inc
and
sti
mov
outsb
dec
fsubrl
inc
xchg
mov
xor
arpl
mov
mov
enter
dec
jg
nop
mov
aad
xchg
jno
sbb
leave
xlat
jne
or
sbb
adc
inc
xchg
pop
cmp
cli
sub
adcl
js
cwtl
rclb
clc
loopne
daa
xchg
push
and
inc
adc
mov
imul
scas
sub
xchg
lods
push
outsl
xor
cmp
sbb
jge
sub
push
enter
and
cld
cmp
jae
popa
cmc
cli
jp
jmp
xor
outsb
push
push
push
mov
mov
pushf
fstps
mov
imul
rclb
adc
sbb
pushf
das
out
mov
lea
mov
cmp
jae
xlat
test
cli
outsl
clc
imul
xchg
cmp
pop
pop
push
mov
mov
nop
fldenv
push
jp
shlb
test
ja
xchg
int3
and
enter
mov
inc
aad
frstor
imul
daa
int
cwtl
mov
jmp
cmp
mov
ss
xchg
lea
jmp
cmp
jecxz
mov
filds
scas
paddusb
mov
addb
sub
mov
lahf
pop
pop
rcrb
stc
push
aas
jge
test
push
and
dec
lock
pop
gs
jae
xlat
testb
inc
mov
push
mov
loopne
pop
insb
aam
xor
cmpsb
xor
jb
pop
out
and
mov
xchg
je
dec
push
push
adc
sbb
sbb
sbb
xor
ja
jmp
jbe
faddp
push
scas
es
cli
xchg
pop
lcall
jl
lret
fisubrs
sub
adc
mov
fcmovnu
lods
pop
add
xchg
mov
jne
xor
shll
gs
scas
push
aam
xchg
rcl
or
mov
mov
sbb
mov
mov
add
test
fistl
sbbl
cmp
mov
mov
push
push
or
dec
adc
jle
push
rorb
jp
mov
into
push
fstpl
sbb
icebp
data16
sub
imulb
push
pop
xchg
add
mov
fcompl
scas
xor
dec
push
scas
in
or
cmp
xor
mov
in
out
xor
ret
or
jge
loopne
mov
subl
leave
cmp
ss
outsb
sbb
jbe
scas
and
sub
xor
fwait
scas
push
loop
sub
jp
sub
outsb
inc
lods
jmp
aas
sub
xchg
sbb
mov
repz
rorb
xchg
add
lahf
cmpsb
loop
xchg
jle
mov
rclb
int
add
mov
loopne
mov
ret
rolb
push
adc
xchg
mov
js
push
cmp
mov
or
and
or
scas
xchg
sub
test
dec
sub
cmp
mov
push
ja
popf
test
jb
out
cmpsl
popf
or
push
imulb
mov
push
mov
mov
push
sti
sti
xor
arpl
hlt
xor
jbe
movsl
add
fld
outsl
xor
xchg
pop
nop
repz
lret
daa
int3
pop
mov
fwait
mov
sbb
imul
cwtl
nop
rcr
in
lods
enter
pop
rclb
mov
inc
sahf
test
push
dec
xor
hlt
xor
cmp
dec
dec
sti
xchg
lods
xchg
sti
mov
inc
rcrb
jge
and
daa
imul
mov
cld
pop
inc
jb
sub
dec
lret
out
fnstsw
mov
arpl
pop
sub
jp
inc
push
aas
mov
repnz
popf
mov
daa
out
push
mov
outsl
insl
dec
ds
ja
ss
and
insl
stos
mov
in
fisubs
ror
and
pop
testl
das
jne
out
cmp
or
dec
pushf
sbb
rolb
push
adc
pop
jne
ss
cltd
out
mov
out
sub
sub
stos
sub
aas
out
fidivrl
mov
enter
ljmp
lret
fldt
pop
xchg
jns
loope
imul
xchg
fildll
enter
movq
adc
mov
int
xchg
pop
cwtl
adc
inc
mov
ss
lods
popa
test
dec
insl
lret
adcl
or
cltd
jmp
ja
push
out
cli
aam
in
sahf
mov
jno
mov
inc
enter
hlt
das
and
adc
push
mov
jb
fcoml
jne
mov
mov
push
pop
jp
push
test
inc
mov
stos
int
jns
int
mov
xor
fdivrl
push
push
ds
lcall
pop
mov
sbbl
ret
cmp
aam
xlat
cmc
xchg
mov
mov
ret
mov
mov
sbb
xor
xor
sub
daa
sub
lods
in
sub
pop
cmpsl
cmp
aam
or
mov
int
lret
jbe
je
out
rorl
imul
xchg
push
aas
xor
stc
sub
jle
mov
ds
outsl
push
pop
push
cli
add
mov
inc
pop
xor
andb
enter
dec
sahf
adc
std
and
add
loop
xchg
mov
pop
xor
push
or
and
repnz
mov
mov
popf
dec
jp
lret
ljmp
mov
leave
mov
lahf
xchg
sti
cs
cmp
mov
cmp
xor
cmpsb
mov
ret
cli
pop
shl
lahf
fs
cmpsl
fadds
mov
repz
test
mov
repz
pusha
push
cltd
ljmp
in
mov
enter
dec
je
pop
in
mov
inc
mov
push
mov
mov
aas
cltd
aas
shlb
cltd
adc
andl
xor
shlb
push
cltd
orb
lcall
fwait
negb
add
lods
mov
push
inc
xor
lahf
dec
jbe
mov
shlb
stos
dec
dec
mov
push
iret
ds
idiv
loop
divl
cmp
cmp
mov
pop
in
into
xor
hlt
enter
in
add
mov
inc
cmp
inc
pop
mov
movl
popf
scas
popf
pop
mov
lods
push
push
dec
inc
mov
je
dec
inc
jge
ljmp
hlt
fimull
or
test
dec
cmp
inc
mov
ds
cmp
in
fidivl
enter
mov
mov
inc
addb
in
shl
fcmovnb
push
call
adc
jle
aaa
arpl
cs
dec
in
inc
sub
rcrb
adc
shl
push
sub
cmp
arpl
scas
mov
inc
jo
adcl
push
dec
mov
sub
aad
sarl
mov
lods
adc
insl
cltd
mov
js
push
mov
out
mov
insb
popa
sub
mov
mov
inc
or
imul
das
sub
pop
cmpsb
or
adc
fwait
clc
adc
xor
lea
adc
dec
sbb
mov
or
xchg
ret
test
aam
sub
mov
xor
sub
daa
pop
rcll
or
repz
loopne
paddq
and
xchg
dec
adc
out
daa
ret
mov
rcrl
and
in
mov
or
loopne
adc
mov
js
imul
daa
push
jp
xchg
jmp
jae
lods
sub
or
loop
and
xchg
fcmove
dec
xchg
daa
fisubs
sbbl
jns
sbb
jae
pop
jnp
mov
imul
aas
add
dec
xor
and
sbb
repz
add
jne
push
lock
adc
push
hlt
xchg
jns
xor
ljmp
adc
fdiv
test
clc
shl
clc
pop
lods
call
add
arpl
push
mov
insb
push
fisubl
daa
mov
daa
push
xlat
push
arpl
rorb
scas
loope
push
fidivrs
pop
xchg
jb
mov
jg
ss
aas
xchg
out
lods
pop
and
push
xchg
fsubrs
push
mov
jno
adc
ja
or
lret
unpcklps
inc
fwait
or
lcall
adc
push
mov
jb
or
lock
cmp
push
xchg
fnstcw
stos
cli
jmp
jns
imul
cmpsl
push
call
loopne
xchg
data16
lcall
imull
adc
push
cltd
int
jge
sub
jmp
js
lods
and
xor
hlt
cltd
sub
mov
cld
fistps
lods
lock
pop
mov
fdivr
jnp
iret
decl
std
mov
jb
mov
mov
cli
decl
jecxz
sahf
mov
xchg
jp
sahf
mov
xchg
imul
adc
cmp
loopne
xchg
cmp
and
sbb
or
jb
fninit
push
mov
je
pop
leave
ljmp
sub
cs
fistps
mov
sbb
push
mov
xchg
xchg
aas
cmp
sbb
movsl
icebp
loop
subps
xor
imul
push
into
cld
inc
pop
mov
jle
adc
xor
push
jmp
fwait
iret
repnz
inc
cli
mov
aam
lock
cli
or
rcrl
popf
mov
mov
cmp
inc
and
mov
mov
pushf
dec
adc
nop
jb
push
fldcw
pusha
mov
cmpsb
loope
testl
mov
out
or
ss
notb
mov
shlb
int
shlb
or
pusha
xor
repz
sti
clc
xchg
sub
push
jecxz
or
mov
rclb
sub
int3
cmp
lods
lret
data16
inc
mov
call
sbb
jbe
iret
shlb
hlt
or
inc
iret
shlb
hlt
or
inc
iret
shlb
hlt
or
aas
lea
std
dec
mov
loopne
jno
jmp
jnp
les
mov
fnstcw
jb
out
push
loopne
dec
in
out
fcoml
push
mov
hlt
xchg
cmp
sbb
in
mov
push
push
mov
in
sbb
aad
sbb
and
popf
ljmp
pop
jns
xchg
mov
mov
mov
jnp
out
push
jnp
xchg
fiadds
cmp
cmp
push
push
add
add
pop
popa
je
nop
repz
and
into
sbb
jno
ss
inc
sbb
jae
cmpsb
and
push
gs
jnp
cmc
fistpll
scas
divb
mov
unpcklps
pop
and
dec
stos
loope
aaa
xlat
adc
fidivl
push
loop
fisttpl
mov
pop
negb
imul
cmpsb
fidivl
pop
push
jg
xchg
popa
pop
jnp
and
push
mov
out
sbb
jge
testl
xor
shrb
jecxz
cltd
xchg
pop
lods
xor
sahf
testb
xchg
in
fidivs
cmc
pop
scas
push
aaa
push
out
outsl
rorb
xchg
repnz
push
push
insl
pop
dec
loope
fs
sbb
js
sbb
test
mov
inc
inc
bound
sti
fdivl
push
mov
lock
xor
out
and
or
mov
cwtl
push
and
movsb
adc
ret
cmp
pop
cmpl
push
stc
bound
loop,pn
roll
jns
lds
repnz
enter
mov
dec
je
cmp
ja
rcl
or
xchg
cmp
aaa
xchg
mov
pop
enter
and
jle
push
push
sub
cli
add
pop
mov
cltd
inc
fnstsw
stos
mov
sub
and
aas
push
or
xor
cmp
xchg
loope
or
cli
dec
aad
aam
cmp
ret
adc
dec
xor
mov
cmp
push
cmp
cmp
push
stc
lods
shr
lds
sub
fiadds
sbb
repnz
pop
in
inc
push
push
sahf
cltd
mov
or
stc
pusha
jmp
js
inc
jnp
xchg
out
in
mov
push
ret
xchg
les
mov
inc
add
dec
sub
lahf
dec
int3
popa
push
xor
mov
andb
cmpsl
jge
xlat
cmp
sar
call
add
or
sub
lock
inc
xor
sub
testb
and
adc
cmp
and
dec
xchg
shlb
cmp
jg
lahf
adc
xor
sahf
arpl
push
lock
shll
cmc
push
imul
negb
aaa
xchg
in
ljmp
jo
add
pop
out
arpl
xchg
pop
fwait
cmp
jg
mov
das
icebp
scas
stc
in
xlat
pop
into
cld
jb
jbe
repz
scas
nop
pop
add
out
mov
stos
rorl
add
jae
cmp
jmp
cs
xor
and
jne
or
loopne
add
pushw
out
sti
addl
data16
pop
lret
adc
fimuls
pushf
xor
lock
popf
push
aad
mov
jae
jmp
mov
mov
xchg
xchg
mov
cld
push
mov
cli
mov
sarl
insl
jmp
inc
push
sbb
stos
lret
push
ds
call
xchg
and
mov
loop
push
push
out
sub
mov
mov
pushf
push
arpl
and
sbb
dec
sarb
sub
pop
inc
gs
pop
mov
inc
adc
or
enter
dec
pop
jo
cmp
mov
mov
mov
jnp
inc
jo
mov
pop
push
mov
stos
add
jl
or
adc
popf
fistpll
es
pop
fisubl
lea
adc
outsb
test
insl
flds
int3
aam
mov
bnd
std
xlat
cmpsb
add
mov
jmp
iret
enter
dec
stos
repnz
jae
pop
rol
mov
lahf
es
mov
xor
ss
out
mov
sarb
mov
mov
cli
mov
xchg
adc
xchg
in
mov
call
into
outsl
push
arpl
aaa
add
cmp
insl
and
cmpsl
mov
mov
sub
icebp
mov
je
in
xchg
sub
sbb
pop
andb
mov
pop
iret
dec
adc
insb
stos
fdivrl
test
mov
shrl
jl
jle
icebp
ret
sbb
fidivl
sbb
xor
out
pop
test
cli
stos
vminss
xchg
pop
jb
push
stos
dec
dec
push
pop
in
pop
sub
fisubrl
mov
sarb
in
push
jbe
inc
arpl
inc
fstpt
adc
lods
push
sub
scas
push
and
lods
out
or
movsb
xor
popf
sahf
mov
add
out
xor
cmpl
lds
popa
lahf
xchg
lret
push
outsl
fcmovnu
push
mov
negl
sub
iret
xchg
aas
mov
aam
nop
fwait
sbbl
outsl
in
push
inc
sub
fisttpll
aam
ret
roll
filds
or
shrl
xlat
push
inc
ss
imul
ficompl
loop
fsubl
outsl
jmp
xchg
pushf
add
mov
mov
cld
popa
test
das
push
std
int
dec
and
sbbb
push
mov
adc
movsb
jge
jo
in
xor
mov
jge
and
ret
pop
mov
shl
jns
rolb
add
inc
icebp
mov
inc
mov
mov
xchg
and
cli
nop
dec
adc
inc
jb
data16
add
out
fwait
shl
gs
inc
jg
sbb
das
nop
jnp
outsl
std
in
and
mov
cwtl
unpckhps
in
pop
lods
test
loop
insl
hlt
gs
repz
adc
repz
subl
outsb
int
aam
dec
or
mov
fisttpl
pushf
jp
lret
test
inc
push
xor
outsl
sti
xor
mov
data16
fdivrs
and
xor
cltd
push
iret
in
mov
mov
mov
add
jge
enter
jle
xchg
aam
adcl
pop
cwtl
frstor
jp
cs
ficoms
cmpsb
stc
adc
push
xchg
sbb
fisttpl
push
popf
lcall
adc
push
int
and
push
mov
add
cld
cmp
les
mov
mov
or
gs
push
push
rcr
dec
imul
or
leave
pop
mov
cmp
xchg
inc
push
push
jl
mov
xchg
push
shr
loopne
sti
push
push
add
jno
test
mov
pop
mov
sub
pop
mov
add
xchg
sbb
rcr
aam
pusha
push
pop
rclb
sub
movsb
add
or
insl
cmp
into
dec
or
aaa
and
data16
test
das
add
add
and
stc
fimull
iret
cmp
in
sbb
gs
sub
insl
fisttpll
mov
and
es
out
std
sub
jb
xchg
jb
xlat
pop
test
push
adc
hlt
rcrb
das
in
pop
dec
xchg
insb
pop
out
sub
jb
pop
mov
sub
xchg
movsb
push
mov
push
mov
fs
mov
movsb
inc
pop
jns
cmp
xchg
mov
daa
cmp
andb
pushf
dec
and
test
ss
fidivl
xor
into
fldenv
pop
std
int3
cmp
or
inc
push
aad
cs
sbb
xor
mov
int
je
dec
lahf
push
gs
sub
pop
push
sub
sahf
das
lock
inc
dec
pusha
test
pop
addr16
sub
cmc
pop
sub
aas
loopne
push
jle
insb
or
inc
cmp
lret
jbe
mov
outsb
test
adc
stos
out
sbb
mov
loope
add
mov
xchg
pusha
test
or
repz
jbe
enter
add
div
test
sahf
nop
mov
fdivs
shlb
cmpsb
fidivl
and
mov
movsl
inc
mov
xchg
inc
and
xor
jmp
nop
inc
sahf
cmp
sahf
mov
ret
dec
jecxz
jecxz
pop
insl
cmp
pop
xchg
mov
leave
outsb
sub
push
insl
pop
pop
movsb
sbb
jmp
xor
cwtl
pop
rep
aaa
sub
jnp
xchg
cmpsl
addr16
mov
or
cmp
int
ljmp
adc
clc
add
sub
mov
rcrb
jmp
jl
mov
fsub
cs
jmp
nop
mov
aas
sbbb
xor
repnz
loope
jle
lods
mov
xchg
ret
add
nop
push
outsl
pop
dec
fidivrs
aas
lock
push
mov
sar
xor
jns
cmp
jl
inc
fwait
in
out
aam
xchg
push
mov
add
fs
fdivrs
fs
mov
xchg
xor
jb
adc
mov
std
xchg
cmc
mov
mov
sub
out
push
mov
aad
adc
js
add
xchg
jns
adc
push
push
push
and
xchg
xor
cmp
mov
fwait
add
mov
sbb
cmp
stos
jno
je
push
jmp
mov
dec
in
dec
and
arpl
xor
outsb
mov
sbb
fsubrl
pop
xlat
data16
mov
push
dec
jae
movsb
aam
or
stc
int
mov
jb
xchg
dec
in
push
dec
sub
in
icebp
shrb
sbb
fistps
bndldx
cmp
shll
nop
push
xor
mov
dec
add
cmp
lret
popf
ljmp
add
mul
sub
push
push
or
icebp
lods
ss
xchg
xlat
fsubp
loop
xor
icebp
jbe
pushf
leave
pusha
cmp
xlat
leave
into
test
daa
jb
mov
fistpll
sub
popa
iret
les
dec
mov
mov
mull
add
cs
in
pop
push
mov
stos
adc
xchg
repz
std
push
pop
mov
loopne
push
sub
sub
pushf
repnz
lret
insb
out
insb
jae
dec
icebp
notb
mov
insl
jb
in
mov
movsl
mov
mov
push
imulb
mov
scas
movsl
ljmp
adc
jno
push
stc
jns
ret
xor
pushf
xchg
cmpsb
stos
inc
dec
out
stos
sbb
aaa
cltd
mov
and
dec
adc
bound
and
push
mov
pop
and
dec
mov
ret
mov
out
jo
pop
push
mov
add
add
nop
icebp
out
pop
int
add
add
ret
sarb
lcall
mov
adc
mov
data16
and
orl
bound
fs
pop
inc
popa
int
das
xchg
mov
je
inc
aad
stos
sub
stos
mov
addr16
mov
mov
test
cmpsb
jns
in
adc
mov
cmp
fwait
enter
mov
stos
xchg
dec
mov
in
adc
inc
add
scas
sbb
out
dec
mov
int
mov
lea
jns
push
mov
arpl
cltd
push
and
outsb
insl
mov
push
ljmp
shrb
test
cwtl
repnz
fdivrp
scas
rcrl
ret
dec
pop
or
cmc
mov
lcall
insb
jae
mov
mov
mov
jbe
add
loop
mov
pushf
js
adc
jmp
mov
mov
jbe
mov
and
pusha
xor
popf
adc
icebp
adc
push
adc
fld
sarb
xchg
aad
fldenv
jecxz
mov
mov
sahf
sbb
push
jl
xchg
mov
fdivrs
adc
enter
mov
and
cmc
inc
lods
divl
dec
test
mov
push
push
sub
aam
lods
aam
frstor
sahf
xchg
insl
sbb
pop
mov
xchg
xor
sbb
sub
mov
mov
cwtl
fisubrl
test
dec
mov
lods
call
inc
repnz
and
dec
div
addr16
jno
fcmovnbe
loope
lock
idivb
dec
bound
dec
rcll
fwait
vpsubusw
test
push
clc
push
mov
mov
outsl
insl
je
xchg
cmp
dec
mov
mov
mov
mov
dec
xorb
iret
aam
int3
push
push
ficompl
hlt
lods
ja
pusha
push
outsl
xor
mov
cmp
xchg
insb
pop
pop
scas
fidivrl
jne
insb
fwait
in
fldcw
mov
call
sbbb
mov
loop
enter
jg
ret
push
pop
cmp
mov
mov
mov
pop
mov
adc
sub
pop
dec
sbbl
push
sub
enter
rcrl
mov
adc
xor
pop
vmovhps
add
out
xchg
add
insl
push
inc
jl
insl
push
outsl
daa
scas
mov
fidivl
and
cmp
sbb
jg,pn
sub
mov
xchg
mov
scas
jmp
cmpsb
jae
shrl
das
fidivl
xchg
or
sti
xchg
adc
popf
fs
push
aad
test
cmp
aas
inc
ret
in
cli
mov
add
lahf
xorb
sahf
addr16
sub
test
pop
push
std
js
jmp
out
into
lret
and
and
sbb
or
sbb
in
xlat
das
and
mov
push
arpl
mov
fcoms
lret
mov
cmp
std
sbb
in
pop
mov
sub
jge
jo
adc
jmp
sub
jge
pop
aad
enter
daa
clc
xchg
mov
in
fdivs
pushl
inc
cmc
xchg
ds
stc
push
stos
adc
or
xor
ss
push
add
testl
jns
cltd
inc
mov
or
int
xor
hlt
ss
stos
jg
lret
jnp
int3
and
sti
xor
jge
mov
std
add
pop
mov
lret
stos
pop
xchg
push
call
inc
enter
xchg
mov
xchg
std
jbe
adc
jp
mov
hlt
cmp
scas
movsl
and
adc
mov
inc
popa
sbb
pop
sbb
inc
out
xchg
xchg
loop
fisubl
sub
and
mov
pop
pop
pop
lahf
sub
lods
adc
mov
addr16
notl
or
mov
mov
faddl
push
pop
xchg
xlat
lahf
inc
lds
cmp
xchg
jle
mov
sbb
filds
jb
test
or
or
in
xchg
cwtl
jae
scas
dec
xchg
outsl
sbb
cmp
jbe
cmp
outsl
jno
popf
add
shl
or
mov
xchg
dec
add
loope
jno
xorb
popf
pop
in
push
add
andb
aas
ds
inc
lods
shr
mov
push
inc
divb
jae
dec
add
movsb
ja
push
jg
mov
subl
jp
xchg
or
sub
pop
dec
cmp
xchg
ret
jecxz
or
xchg
loope
js
xor
les
pushf
pop
push
das
test
mov
or
pushf
fidivrs
repnz
ret
add
fnstenv
jl
mov
enter
mov
test
inc
inc
jmp
adc
dec
mov
fistpll
dec
imulb
ficomps
mov
daa
das
call
test
xchg
cmpsb
repnz
mov
fcmovnu
mov
in
mov
repnz
dec
mov
fildll
mov
xchg
pop
mov
mov
imul
insl
pop
sub
ret
cmpsb
add
xchg
or
sarb
or
push
pop
repnz
test
lods
jl
or
push
stc
scas
inc
sahf
test
cmpsb
or
adc
adc
outsl
mov
mov
cmpsb
repnz
loop
fsubrs
popa
daa
xchg
xor
mov
or
push
shrl
mov
mov
xchg
jle
lahf
mov
sbbl
push
push
lods
iret
mov
pop
daa
sub
xchg
cmc
sbb
mov
test
jmp
insb
mov
insl
adc
xchg
pop
jmp
sarb
inc
ror
scas
mov
ja
rcr
jo
mov
cmp
fidivrs
aad
xchg
inc
in
fimull
pusha
xlat
sti
adc
and
in
ret
add
and
andb
sbb
xor
push
jge
mov
jb
outsl
jp
xor
ret
aas
cmp
leave
mov
dec
pusha
cmp
call
cmp
jnp
ret
stos
cmp
stos
into
test
mov
call
pop
fsubp
or
stc
xor
mov
addr16
and
popa
shll
mov
in
push
sbb
scas
xor
xor
sub
mov
cmpsl
sub
in
addr16
clc
cli
xchg
mov
outsb
inc
ficomps
push
push
push
xor
mov
sub
jnp
pushf
adc
lds
ja
sbbl
in
xchg
cwtl
outsb
jo
lea
into
lds
xlat
and
shrl
mulb
fsubr
outsl
cmp
test
pop
scas
jnp
adc
mov
fbstp
sub
cmpsb
and
movsl
mul
out
and
daa
jnp
and
sti
add
xor
mov
sub
out
mov
xchg
scas
sbbb
adc
div
inc
jbe
filds
je
cli
shrl
push
aas
pop
mov
sbb
inc
push
jns
mov
pop
mov
jbe
popa
stos
pusha
fistpl
testb
cmpsb
jg
pusha
or
iret
or
jae
inc
shl
addr16
jno
push
jl
shr
hlt
scas
and
mov
stos
jbe
push
lds
sti
repz
fiaddl
popa
and
pop
ret
sub
cmp
iret
enter
or
adc
lods
jbe
aad
or
pop
outsl
or
in
jge
scas
fldenv
pusha
out
pop
orl
lahf
dec
pop
sbb
mov
iret
rclb
iret
hlt
xor
fisttpll
je
and
xchg
lahf
jnp
enter
xlat
sub
dec
cmp
ljmp
or
dec
xchg
movsb
xlat
mov
sub
enter
movsl
dec
lahf
adc
cmp
sahf
pop
jae
aaa
lods
push
jne
cld
scas
cmp
mov
inc
pop
xor
mov
mov
jbe
and
insl
pop
xchg
shl
imul
xchg
test
jp
mov
daa
repz
jbe
mov
insw
fwait
mov
stc
cmp
jae
mov
lods
inc
lret
pop
mov
or
outsl
fiaddl
fisttpll
mov
les
xchg
jge
mov
jge
xchg
fadds
insl
cltd
mov
adc
repz
fists
mov
imul
mov
mov
stc
jmp
cmp
repnz
data16
push
loop
xor
rcrb
jg
lds
pop
inc
cmp
andl
ror
insl
mov
jae
stc
icebp
mov
data16
jp
fmull
mov
adc
test
ljmp
dec
enter
es
movsb
dec
jl
add
jle
lret
shrl
rcr
arpl
xchg
dec
out
or
sbb
mov
lock
in
ror
pusha
xchg
out
add
dec
mov
dec
and
mov
mov
imul
or
inc
sahf
rcll
loopne
push
lods
dec
mov
out
rcrl
es
cwtl
cmpsl
adc
rorl
jmp
faddl
cmp
jb
test
jno
jp
mov
lret
out
ret
int3
add
ret
pop
enter
sbb
mov
pop
jle
mov
in
cli
icebp
mov
je
dec
filds
cs
adc
cmp
outsl
sub
jp
adc
cltd
inc
dec
adc
and
mov
mov
pop
jmp
cld
enter
js
mov
icebp
pop
dec
fistps
or
sbb
pop
rcrb
pop
fcmovb
xor
testl
xor
or
inc
iret
shlb
hlt
or
inc
iret
mov
jecxz
and
clc
cli
aam
sbb
inc
mov
xorb
or
or
cmovns
nop
es
inc
mov
bound
sbb
pop
xor
dec
out
mov
and
aam
in
cmp
push
in
inc
lret
jmp
addr16
xchg
xchg
mov
xor
imul
push
add
dec
mov
sbb
xor
cli
and
mov
shrb
movsb
lahf
and
pop
and
rol
dec
pop
xchg
mov
xor
es
aam
cmp
sbb
inc
sahf
mull
lods
mov
lods
sub
mov
stc
lds
mov
mov
in
mov
xchg
adc
jmp
lahf
psubb
inc
das
cmp
out
das
sub
fistps
cmp
mov
insb
dec
lds
test
mov
das
cmp
std
or
cmpsb
testl
arpl
jae
pop
je
mov
lods
stos
mov
rorb
mov
dec
or
scas
fisubrs
and
out
xor
jo
dec
scas
pushf
jle
fwait
pushf
arpl
data16
jb
ljmp
decb
sub
roll
out
dec
or
jnp
repnz
jne
stos
sub
addr16
xor
mov
pop
pop
stos
or
lret
dec
push
lods
and
das
scas
mov
arpl
sub
adc
stos
xchg
loop
ljmp
pop
mov
mov
lcall
xchg
push
push
push
push
insl
sub
sub
push
outsb
cltd
mov
scas
push
mov
mov
pop
gs
scas
popa
out
xchg
pop
cmp
daa
jg
rol
cwtl
xor
loope
jmp
add
out
lcall
std
xor
sbb
xchg
xor
bound
inc
lods
dec
push
fdivl
cmp
xor
sbb
clc
int
xor
sub
andb
jo
je
rclb
shl
mov
cmp
pop
jecxz
cld
out
or
pop
icebp
movsb
loopne
and
inc
sub
lret
adc
jecxz
or
mov
or
aas
mov
jg
and
adc
or
or
test
enter
and
and
fcoml
cmp
jb
mov
pusha
enter
ret
add
shll
ret
inc
dec
js
hlt
insl
mov
cld
inc
add
cli
out
jecxz
out
jecxz
aaa
inc
fistps
mov
jle
dec
cltd
decl
call
adc
insl
and
or
mov
aaa
inc
jns
clc
test
sbb
arpl
les
nop
cmp
and
lret
and
pop
ror
les
inc
cmpl
or
pop
push
leave
addb
inc
push
aas
dec
push
sub
mov
add
push
sub
pop
and
dec
inc
std
addl
popa
dec
xor
daa
adc
inc
dec
push
inc
jle
push
clc
dec
cmp
inc
inc
pop
mov
leave
add
rclb
int3
dec
adc
sbb
and
dec
inc
add
repnz
or
cld
lds
adc
cmp
mov
out
sub
adc
inc
inc
inc
jle
loopne
nop
push
adc
push
add
add
mov
enter
mov
add
pusha
adcl
mov
cmc
adc
and
out
adc
inc
movups
add
mov
loope
add
add
add
xchg
clc
mov
addb
out
loop
andl
add
or
dec
lds
or
or
dec
mov
push
xchg
bound
roll
cs
and
or
popa
fsubs
add
mov
bound
push
test
rcrb
mov
xlat
dec
mov
push
add
sub
adc
cmp
add
inc
movsl
xor
and
mov
and
or
or
and
and
inc
adc
add
cmpsb
and
inc
int3
cmp
xchg
pusha
lds
les
or
xchg
adc
cmpsl
push
stos
loope
dec
aad
das
mov
mov
je
xchg
sbb
push
fidivs
test
jbe
xchg
aas
jge
mov
jge
jg
push
jne
dec
out
popf
xchg
ljmp
push
idivb
ds
call
rolb
add
mov
cmpsb
jae
xor
mov
mov
dec
inc
adc
stc
dec
cmc
repnz
cmpl
std
insb
sub
adc
sub
insl
hlt
js
jle
xor
mov
mov
sbb
push
clc
jp
inc
clc
mov
adc
dec
clc
daa
cmp
dec
pop
and
shr
lock
lock
mov
outsl
mull
cmp
pusha
push
andl
lahf
fadds
mov
ret
or
sbb
pop
add
fs
leave
stos
fs
cld
jb
aad
add
sub
mov
lret
pop
mov
cmp
ds
jmp
sarl
cld
fidivl
mov
movsl
fsubl
cld
cs
in
push
cltd
lret
repnz
sub
das
xchg
leave
movsl
xchg
in
in
xchg
mov
fists
push
shl
mov
jle
and
xchg
lret
lret
sub
cmp
push
xlat
and
xchg
add
xor
lcall
adc
mov
sub
cwtl
dec
lea
dec
xlat
lods
add
pop
or
imul
and
pop
dec
stos
add
sarb
sti
push
ss
leave
cli
cmc
and
xchg
and
test
pop
dec
mov
iret
push
fistpll
inc
lcall
popf
pop
ficomps
adc
dec
lret
adc
pop
xchg
outsl
mov
mov
imul
mulb
xchg
xlat
lods
sub
sbb
jmp
mov
cmp
sub
jbe
push
pop
xchg
fidivs
adcl
or
jmp
and
mov
mov
dec
mov
and
mov
inc
and
pushf
push
fs
dec
inc
repz
in
es
lods
mov
testb
shlw
mov
sbb
pushf
push
into
dec
notl
pop
in
out
pop
inc
cld
aad
mov
ds
aas
adc
faddl
sub
mov
ja
mov
xchg
lret
repz
in
pop
xchg
pop
push
push
push
lods
shrl
dec
rcr
mov
shrl
loopne
pop
rcll
loope
adc
insb
fsubrl
stos
inc
sbb
push
pop
movsl
imul
leave
imull
xor
cmpsl
jp
inc
pop
mov
jl
popa
inc
jle
test
stc
test
loop
jge
inc
ds
cltd
arpl
xor
aaa
cmp
push
push
lcall
shr
lock
xchg
loop
sub
ja
pusha
notb
xor
jge
icebp
mov
stos
xchg
jbe
add
imul
fistpll
cmp
and
test
into
mov
jne
pop
cmp
lret
push
repz
mov
jl
lret
sub
push
xchg
jae
inc
cmpsl
js
add
inc
sbb
xchg
pop
xchg
sub
adc
inc
insb
decb
jo
int
push
fadds
inc
stc
jp
pop
jnp
cmpsl
pusha
pop
pop
pop
push
leave
jb
adc
cs
scas
test
out
js
rclb
xor
dec
pop
leave
mov
add
cmp
idiv
xchg
in
push
cltd
mov
mov
xor
dec
out
scas
sub
mov
popa
mov
in
cmp
cmp
xchg
sub
dec
pop
add
fdivs
mov
fbld
decl
addr16
push
rcll
inc
mov
aas
push
xor
lahf
popf
shlb
ja
loope
xor
mov
inc
jmp
mov
mov
push
sub
sub
addr16
loop
jg
and
xor
test
pop
mov
ret
lret
mov
movsb
cs
int3
xor
dec
rol
dec
shr
jne
mov
fs
add
cltd
pop
jecxz
dec
lahf
aam
pop
xor
inc
push
call
push
push
cmpsl
pop
xchg
mov
int
cvttps2pi
call
push
pop
mov
sub
hlt
fs
mov
dec
insb
addb
cmp
scas
inc
popa
cmp
mov
in
in
test
aas
imul
dec
leave
mov
add
cmp
mov
and
xorl
fmuls
add
stos
incl
aas
les
repnz
movsb
push
call
ret
or
or
pushf
cmc
and
je
dec
repz
xor
mov
mov
inc
xor
cmc
sub
pop
insl
mov
and
and
mov
push
imul
xchg
xor
rcrl
sbb
pop
sahf
cmpsb
sahf
mov
or
push
sub
lahf
lock
mov
xor
inc
ret
sahf
loop
ja
out
push
insb
ss
lods
flds
mov
adc
mov
pop
or
ja
xor
imul
xor
mov
rorl
das
sbb
les
sub
cmp
mov
lret
mov
mov
jb
jnp
lret
cmp
mov
jmp
lret
out
lock
push
sbb
pushf
mov
jle
mov
lea
push
push
loop
lods
dec
xchg
lahf
outsl
jl
jmp
sub
jg
ret
lret
lea
xor
outsl
mov
mov
or
jno
aas
xor
pop
fwait
sbb
mov
jae
sbb
addb
xor
sub
or
mov
push
and
lahf
stos
push
cwtl
or
dec
mov
xor
std
xchg
push
in
stc
imul
pop
pop
xor
mov
int
push
movsb
sub
mov
sub
iret
int3
mov
pop
mov
fnstcw
test
arpl
jle
incb
lcall
lods
ja
div
ljmp
cmpb
scas
pop
rorl
cmp
insb
cmp
insb
cmp
xor
or
daa
stos
xchg
scas
mov
jmp
sub
add
cmp
data16
shl
cmc
fs
test
cmp
jp
loopne
jns
dec
icebp
mov
inc
iret
dec
and
lcall
negl
adc
scas
imul
bt
inc
pop
imul
ss
sbb
pop
loopne
outsl
cs
ljmp
inc
mov
lds
push
cld
call
aad
mov
push
inc
xlat
movsb
imul
lods
outsb
cmp
test
addb
test
jp
mov
lods
inc
aas
xchg
mov
sub
loop
mov
into
inc
repnz
or
mov
adc
sub
ret
insl
mov
cmp
jg
cltd
in
cmp
push
cli
adc
ljmp
lea
ficoms
fidivs
clc
iret
arpl
fnstsw
inc
mov
mov
fiadds
cwtl
sub
cmc
pop
lock
pop
ds
lock
mull
cmp
stos
jb
adc
arpl
int3
sub
adc
cmp
push
cmpsl
mov
adc
dec
fistps
js
jmp
mov
and
mov
and
or
sbb
aam
mov
subl
data16
adc
aas
xor
in
cmp
repz
lcall
stos
aad
pop
xor
and
pushf
fxch
xchg
lods
jne
shrl
cmp
mov
cmp
inc
iret
int3
adc
outsb
cmp
jne
cmpsb
movsb
xbegin
je
jns
loop
cmp
mov
xchg
adc
lret
les
mov
and
shll
shl
sti
dec
cmp
lahf
fcompp
je
jg
hlt
jmp
push
mov
pop
sbb
push
push
xchg
negl
out
out
dec
sub
xchg
lea
psllw
push
push
fldl
dec
pop
aas
aaa
dec
shll
sbb
push
jle
aad
es
xlat
ffreep
cmp
jo
ret
sbb
mov
shrl
sub
fists
rorl
repnz
fistpl
adc
xor
repnz
pop
ret
fwait
jb
ret
mov
mov
push
mov
push
inc
test
popa
push
push
adc
clc
xor
lcall
fs
mov
js
sbb
mov
push
jl
leave
ret
repz
sub
sub
rorl
data16
popf
add
mov
repz
sarl
ret
pushl
sub
in
xchg
das
mov
fsubl
pop
push
cmp
jl
cld
jns
popa
push
jp
ljmp
pop
xor
out
cmpsl
pusha
pandn
xor
sub
jmp
pop
pop
into
sbb
mov
mov
inc
pusha
int
leave
ficompl
pop
fstpt
es
rolb
push
dec
repnz
cmc
pusha
jl
jns
jnp
jp
js
frstor
inc
mov
fs
or
pop
fstps
pop
push
push
lahf
sub
stc
insb
loopne
pop
mov
int3
call
movsb
test
in
xor
repnz
cmp
pop
incb
je
adc
adc
jg
in
cmp
shl
sti
adc
cmp
je
aas
or
mov
std
roll
sub
lods
xchg
mov
loope
sbb
mov
out
nop
cmpsb
dec
stos
lret
jmp
xchg
dec
inc
push
mov
add
outsl
pop
fdivs
shl
out
cltd
rcrb
xchg
mov
mov
xor
psllw
jns
mov
and
cs
cld
jnp
das
pop
sbb
xchg
jge
lods
jno
rcll
mov
adc
subb
sti
out
cwtl
inc
shll
ret
out
jns
das
rcll
in
idivl
mov
xchg
mov
in
fdivp
fld
mov
mov
xor
and
repnz
fcom
jae
ret
sub
orb
aam
jmp
push
mov
ja
jg
sti
dec
outsl
sarl
ret
pop
pop
mov
clc
repz
push
ret
xchg
test
add
lahf
out
scas
aas
xchg
adc
and
push
lcall
jle
les
fdivrs
in
scas
inc
fsubrp
jmp
js
lret
pop
sbb
outsl
sbb
mov
sbb
sbb
cvtpi2ps
sub
scas
xor
jmp
das
shlb
scas
jno
sbb
cmp
jg
enter
orl
inc
jecxz
push
mov
ds
jp
cs
scas
mov
jnp
mov
popl
push
jb
mov
les
lea
repnz
pusha
lret
loopne
inc
fdivr
in
push
add
daa
cmp
push
or
mov
nop
sahf
daa
mov
cli
mov
cli
xor
xchg
and
mov
bound
push
jmp
sbb
mov
std
jmp
inc
mov
and
xor
push
es
std
iret
sarb
popa
shlb
popa
aas
popf
pop
and
mov
les
adc
mov
push
push
xlat
aam
in
mov
cmpsb
pusha
arpl
push
dec
sub
cmp
pop
jle
arpl
xor
add
cmp
aaa
lods
pop
adc
pop
into
lret
fstpt
daa
imul
add
adc
jne
xorb
shll
and
cli
xor
pop
dec
hlt
mov
js
mov
notl
loopne
push
fucomip
adc
adc
pop
xlat
fs
orb
cs
mov
jp
stos
sbb
shrb
insb
lret
push
dec
xchg
ljmp
call
mov
and
test
dec
out
mov
pop
fdivl
test
movsl
out
inc
sbb
in
int3
cmp
inc
dec
je
adc
lock
cli
xlat
sti
mov
dec
icebp
js
and
jge
les
fistps
xchg
xor
adc
cmp
adc
mov
push
clc
and
jo
pop
in
das
pop
adc
sub
sub
mov
ret
jne
and
push
fs
in
sbb
lret
xorl
daa
sbb
xlat
sub
sub
xor
ds
shll
cmp
and
xchg
pop
adc
push
inc
mov
pop
mov
ret
mov
pop
inc
or
inc
cwtl
je
int
pop
enter
jne
mov
arpl
xchg
inc
loop
push
cmc
inc
out
inc
jae
shl
cld
fistpl
and
or
mov
pop
enter
cs
jl
inc
cmp
inc
push
cld
adc
and
push
mov
lahf
inc
xor
lds
inc
popf
aam
repnz
dec
hlt
sbb
mov
xor
into
bound
sti
cmp
pop
outsb
movsl
xchg
inc
push
mov
sbb
xor
cmc
stos
jo
ljmp
decb
jb
int
addr16
lea
mov
lret
rcl
aad
iret
roll
push
dec
cld
frstor
cmp
stc
je
xlat
inc
aas
jbe
mov
or
mov
mov
cmp
jbe
ret
int
ror
pcmpeqd
ror
xor
sahf
dec
lds
mov
dec
call
or
jmp
sti
adc
bound
cmp
in
jnp
add
paddusw
sub
xchg
push
and
adc
add
lods
in
test
shrb
mov
jp
xor
add
loopne
and
dec
xorl
movsb
push
dec
mov
and
or
shlb
dec
or
arpl
lea
lea
and
shl
dec
push
movsb
push
dec
mov
sbb
cmp
rorl
dec
sbb
clc
repz
rcl
in
mov
into
mov
dec
jg
data16
adc
pop
sti
fists
sbb
mov
mov
es
sub
stos
out
mov
lcall
mov
loopne
sbb
nop
popa
xor
hlt
dec
dec
cmpsl
shll
aas
xor
jg
xchg
sbb
fnstcw
ss
sarl
push
jl
dec
hlt
dec
icebp
insl
je
jnp
pushf
xchg
jns
mov
push
xor
clc
icebp
shr
xchg
cmp
xchg
int3
push
lea
mov
pop
pop
adc
popf
cmp
cld
stc
imul
stos
neg
pop
jbe
xchg
stos
daa
fbstp
sub
iret
dec
pushf
loop
out
cmp
add
aaa
lahf
incb
pushf
jle
stc
dec
mov
push
jl
fistps
push
pop
jle
hlt
xchg
mov
jmp
push
jg
loop
xchg
jg
loop
xchg
mov
sti
mull
inc
pop
or
pop
in
nop
and
lcall
cmp
lret
mov
popa
push
xor
fwait
jns
sbb
mov
aas
mov
inc
gs
int
xor
pusha
xchg
and
mov
aam
xlat
repz
mov
push
inc
shlb
cmp
stc
div
push
stos
daa
into
push
and
in
das
inc
jg
hlt
repz
scas
add
ret
xchg
xchg
jae
daa
stos
daa
adc
out
fdivl
cmpl
xchg
pop
xchg
stos
pop
cmp
fmull
ja
aas
inc
xchg
cli
and
out
push
inc
add
adc
pop
aaa
jecxz
sbb
sbb
sahf
mov
xchg
jp
push
idivb
xchg
push
lret
jmp
in
sub
loop
movsl
pop
inc
push
push
cli
lret
dec
gs
dec
pushf
fldcw
mov
arpl
fs
bound
cmpsl
subl
pushf
ljmp
jne
out
jg
xchg
rcr
aad
mov
loopne
faddl
mov
mov
mov
mov
arpl
test
dec
lret
mov
test
je
iret
mov
mov
fwait
cltd
outsl
sbb
sub
aad
mov
xchg
adc
ret
inc
stos
in
fucomp
mov
dec
dec
sbbl
shlb
jae
sub
jbe
xor
test
add
push
jge
nop
out
cli
jle
andb
je
xor
int
jbe
in
jbe
mul
mov
daa
jmp
xor
into
adc
popa
mov
push
push
gs
push
xchg
pushf
lret
mov
adc
call
mov
stos
push
mov
dec
push
popf
dec
cmp
add
pop
dec
mov
js
push
mov
movsb
mov
ja
cmp
sub
arpl
mov
mov
inc
inc
mov
pop
out
xor
jle
mov
out
arpl
sbb
cmp
pop
js
stc
dec
sti
les
mov
push
push
jne
or
sahf
push
mov
pop
mov
jno
mov
xchg
add
inc
mov
jmp
push
das
rcrl
mov
jp
das
jne
push
in
lods
je
gs
xchg
sbb
das
in
pop
pushf
dec
test
add
add
stos
xchg
mov
ret
sub
cmp
scas
jle
imul
lds
lret
ss
ficoms
lea
je
jne
push
cmc
mov
xchg
push
gs
jo
inc
les
popf
stos
adc
iret
jb
xor
lock
xchg
fstps
xor
jmp
test
lcall
fsts
xor
call
xor
xchg
test
jne
mov
test
add
xchg
jo
inc
xlat
pop
bound
stos
dec
mov
test
or
cmpsl
stos
mov
xchg
jmp
pushf
and
mov
daa
add
xchg
inc
rcll
mov
xchg
dec
rcrl
xchg
ds
xchg
repz
andb
pop
mov
in
push
mov
fstps
and
loope
out
add
mov
decb
lret
add
pop
jbe
pop
lret
imul
pusha
pop
jo
out
mov
jno
mov
xchg
es
cmc
xchg
es
mov
or
pop
test
xchg
je
mov
pop
leave
xchg
jne
cmp
imul
scas
xor
cmp
int
and
jbe
sub
stos
dec
and
xchg
cmp
add
cmp
fs
incl
cwtl
sbb
movsb
lcall
ret
out
in
cmp
or
lods
adc
and
add
cmp
fisubs
jge
push
sub
dec
pop
inc
lret
mov
add
adc
fsubrl
addb
fs
dec
or
in
mov
or
fcmovb
pop
dec
push
cmp
mov
sub
std
loope
lret
add
test
xchg
bndstx
cli
dec
jnp
push
fnstcw
pop
stos
stos
jno
popf
ficoml
xor
xor
pop
test
xchg
inc
dec
xor
push
inc
push
aam
lea
lret
ja
fcomi
add
int
test
fsubs
insl
ret
push
push
out
mov
cli
hlt
jo
jb
xchg
je
xchg
and
or
aas
jnp
pop
pop
leave
in
mov
dec
iret
inc
cmp
pop
mov
shlb
add
mov
pusha
enter
out
adc
insb
jp
mov
xchg
mov
popa
loop
lock
outsl
js
rep
push
adc
shlb
call
cmp
fnstcw
mov
aad
mov
pop
fiadds
es
lods
jp
jo
jns
adc
out
add
jp
xchg
call
mov
cwtl
or
jnp
pusha
testl
xor
imul
adc
push
repz
push
pop
push
pop
xor
push
cs
or
mov
mov
mov
imul
add
idivl
xor
aas
add
out
jns
pop
sbb
push
sbb
icebp
and
xor
out
cmpsl
dec
rcll
dec
push
or
push
fsts
dec
or
aad
inc
jp
sbb
int
subl
ret
ss
mov
lahf
and
scas
push
cltd
cmpsl
sbb
rcr
lock
or
pop
popa
mov
aad
scas
xor
dec
outsl
nop
inc
jmp
sub
xchg
jle
fs
and
pop
insb
xchg
jnp
cmpsb
in
ja
pushf
cltd
adc
xor
ljmp
jae
push
aas
sub
xchg
test
pusha
xchg
cmpsl
std
inc
fstpl
cmp
pop
ret
stc
sbb
inc
jne
movsl
gs
mov
inc
lods
mov
add
imul
rclb
and
aas
stc
xchg
stc
mov
lds
gs
inc
or
movsl
mov
mov
test
xchg
or
lret
push
push
ret
comiss
inc
cmpsl
stos
les
or
out
push
imul
shll
test
pop
sbb
adc
es
icebp
or
in
pop
cmp
jecxz
pop
or
ljmp
pop
icebp
enter
les
ljmp
lret
mov
ljmp
mov
fisttpll
sbb
push
lods
lret
lret
and
rol
out
xor
mov
push
call
fs
pop
ret
xlat
ljmp
jno
icebp
or
popf
lret
adc
add
cmp
out
xlat
xor
test
jae
jmp
stos
inc
fidivrs
rcrl
enter
cltd
mov
jmp
gs
mov
jle
outsl
es
ret
add
das
addb
add
stos
and
adc
xor
test
xchg
je
insl
mov
mov
jle
stos
mov
jne
jmp
push
push
push
loopne
movsl
mov
lcall
push
push
mov
mov
xchg
imul
jns
loop
outsb
cmp
in
xlat
nop
cltd
xchg
cltd
outsb
mov
sub
icebp
inc
mov
jmp
pushf
and
mov
ljmp
rclb
enter
shll
fsubrl
sub
popf
mov
and
ja
sbb
stc
fst
push
or
mov
inc
fmuls
sbb
mov
cmpsl
jmp
push
mov
pushf
inc
cwtl
inc
adc
sub
jp
add
not
testl
into
cmc
movsb
mov
repnz
pop
push
fidivs
lds
test
aaa
cwtl
fstpt
pop
sub
je
cmp
cmpsb
jbe
imul
pop
dec
xchg
mov
push
in
push
or
jo
in
lods
add
cmc
push
inc
daa
and
pop
mov
push
push
stos
and
dec
jno
inc
mov
dec
cmp
pusha
sbb
sub
add
adcl
add
sub
mov
hlt
mov
and
scas
cmp
and
mov
lcall
cmpsl
cltd
jns
scas
js
aad
aad
stc
scas
je
call
push
stc
xor
notb
lea
je
jno
fsubr
je
js
xchg
add
ds
shll
mov
sub
test
pop
popa
push
fstl
movsl
push
lods
cmp
dec
push
xchg
push
imul
ljmp
pop
mov
mov
push
addr16
cmpsl
add
cmp
sub
mov
jae
lds
pop
inc
cmp
jno
and
icebp
push
imul
sbb
rorb
fcompl
xchg
adc
push
hlt
or
gs
and
xchg
int
mov
jne
test
cli
stos
mov
cmp
xor
jecxz
je
ljmp
call
ss
ret
aad
pusha
push
lea
add
jp
mov
lds
push
arpl
cmpsl
xchg
test
insl
jb
sbb
inc
xchg
pop
mov
rol
push
scas
aad
aaa
inc
int3
push
call
in
cmpl
fs
add
or
mov
js
jmp
dec
xlat
ret
jecxz
xchg
jne
mov
imul
std
stos
pop
and
inc
ret
lods
lock
lahf
cmp
mov
add
lds
imul
popf
aas
add
adc
mov
insb
outsl
int
in
cmp
das
lret
repz
sbb
sub
ljmp
mov
popa
in
jecxz
jecxz
loopne
mov
mov
push
inc
push
adc
sahf
cmpsb
jno
cmp
sbb
push
nop
pop
inc
mov
dec
mov
mov
pop
aaa
xor
stos
add
mov
out
add
test
adc
decb
xchg
mov
sub
loop
je
xor
pop
mov
or
mov
xchg
aad
dec
pop
mov
movsl
shll
cmpsl
mov
xchg
jl
in
jo
xor
sbb
inc
push
mov
mov
dec
repz
push
scas
adc
out
pop
push
pop
in
cld
cs
add
mov
pushf
xchg
testl
xchg
inc
les
mov
cmp
stc
xor
inc
inc
dec
cmpsl
push
cltd
loop
ja
mov
mov
mov
fcoms
dec
pop
adc
mov
js
ja
pushf
jno
mov
rolb
xchg
add
cmp
mov
jne
stc
or
out
cmc
xor
lea
and
inc
sar
fsts
shlb
in
out
jns
insl
enter
in
mov
push
out
aam
cs
ja
push
sbb
mov
aaa
push
fwait
mov
ret
pop
in
loope
imul
sbb
jbe
shrb
cmp
les
outsl
jp
fimuls
pop
adc
adc
mov
xchg
ja
mov
fdivs
pop
pop
sbb
pop
and
adc
ss
outsl
pop
add
fsubs
ja
or
ds
jb
hlt
movsb
jle
and
ja
popf
scas
arpl
sub
xlat
and
mov
in
and
sbb
outsb
loope
push
out
cmp
inc
jno
fsubrl
xor
ja
jo
aam
push
ljmp
je
push
stos
xor
or
push
push
xor
jnp
and
sahf
lret
inc
mov
in
lds
jne
jb
push
push
iret
adc
push
adc
cmp
cltd
mov
push
or
out
fstl
sbb
cs
pop
dec
cmp
ja
pop
adc
pop
call
or
xchg
inc
sub
push
inc
mov
pop
mov
jne
jno
fs
imul
sahf
or
push
pusha
dec
sbb
add
pop
es
mov
and
xor
jne
jb
jbe
xlat
sub
faddl
mov
rclb
lahf
jns
les
jmp
lret
jns
xchg
loop
sbb
clc
sbb
shrb
iret
and
sahf
inc
inc
sub
insb
add
xchg
adc
cmp
sub
shl
outsb
push
enter
movsb
nop
pop
jg
lods
and
fsincos
dec
and
lret
jle
xor
fwait
jbe
add
mov
jbe
mov
repz
mov
jnp
cmpsb
xchg
dec
sbb
into
pushf
jo
out
lahf
testl
ret
imul
jbe
adc
cs
pushf
popl
mov
jne
jmp
xchg
inc
shlb
pop
flds
lret
jnp
bound
ret
out
int
dec
nop
movsb
test
sbb
call
pusha
call
outsb
bound
shll
repz
pop
push
popa
sub
shr
into
push
sub
std
mov
pop
enter
and
mov
int
xchg
jmp
fsubs
or
inc
push
pushf
out
rcll
int
movsb
sub
dec
btc
push
mov
in
shrb
mov
xchg
cmp
pop
add
repz
jecxz
leave
test
xchg
mov
mov
call
sub
push
lea
inc
orb
pop
or
ds
cmp
pop
lcall
inc
inc
add
pusha
repnz
dec
test
inc
test
fstl
shlb
push
inc
mov
jnp
pop
lods
into
mov
xlat
push
add
mov
cwtl
lret
cmp
in
mov
adc
jp
subb
shl
cmp
out
push
xchg
popf
mov
sub
bound
ret
in
fsts
jmp
sbb
int
test
dec
xor
mov
icebp
adc
mov
and
mov
mov
jge
aad
pop
cltd
les
cmp
ss
mov
pop
popf
add
xor
sub
repz
xchg
icebp
repz
mov
jecxz
push
stos
pop
in
mov
sub
xchg
lcall
cmp
mov
aad
gs
jle
pop
inc
xchg
shll
ja
loop
sbb
test
in
add
aaa
out
jg
arpl
shll
jns
mulb
lds
loop
test
pop
push
das
ljmp
aad
or
sbb
pop
loop
rcrl
add
push
imul
xchg
mov
cltd
push
call
call
mov
aad
dec
in
inc
jecxz
or
lcall
pop
dec
pop
in
std
dec
aad
xlat
orl
pop
hlt
push
cld
call
pushf
push
push
fs
push
push
nop
mov
popf
xor
sbb
sbb
fstpl
leave
aas
in
push
gs
and
mov
scas
je
mov
or
push
test
sahf
fmul
xorl
sub
test
std
icebp
loopne
dec
rolb
jne
and
mov
pushf
repz
sbb
adc
mov
mov
jle
outsb
mov
je
push
in
in
insl
lea
xchg
daa
push
imul
stos
dec
inc
int
test
mov
lret
arpl
nop
insl
push
mov
inc
cmc
jo
lret
xlat
add
test
fmull
xchg
xlat
inc
push
sbb
jge
popa
js
popf
data16
inc
mov
je
pushf
test
add
push
into
push
imul
into
cmp
loope
lea
or
jge
inc
negl
mov
lcall
lret
lds
out
imul
push
mov
movsb
inc
xchg
and
scas
pop
cmp
out
or
dec
testl
xchg
mov
adc
aas
call
cmp
lds
scas
mov
xchg
js
fsubrl
dec
push
icebp
or
push
cmpsl
jg
or
in
sub
rcll
xorb
pop
push
fdiv
adc
std
inc
cmpsb
imul
inc
sbb
pop
jo,pt
lods
sbb
cli
bnd
repnz
jl
idivb
test
dec
xchg
cmp
out
push
pop
adc
mov
rcr
push
pusha
mov
mov
fisttps
or
sub
test
or
call
mov
or
into
xchg
test
pop
cltd
jp
add
mov
shlb
cmp
xor
fsubrs
ja
into
aam
jecxz,pt
xchg
mov
pop
cmp
jmp
mov
sub
pop
sub
and
lea
cmc
std
fisttpll
push
adc
dec
pop
fisubrs
jmp
clc
aam
pop
lahf
mov
mov
test
push
add
aam
rcrb
inc
pop
cwtl
rcrl
inc
sarb
loopne
subl
and
pop
out
lret
pop
sbb
out
cmp
rcl
shrl
std
push
xchg
cli
lock
jb
shlb
dec
jbe
cmpsb
jae
out
js
int
add
mov
xchg
lock
ffree
fdivp
inc
or
das
cmp
in
nop
test
push
icebp
dec
mov
xchg
mov
pop
loopne
mov
cmp
cli
xchg
idivl
das
sbb
mov
cmp
aaa
int3
movsb
cmp
test
fildl
and
aad
sbb
ret
dec
ja
xchg
es
js
es
int3
mov
mov
dec
cmp
les
jo
cmpsb
mov
cwtl
adc
cmp
push
jmp
lahf
sbb
dec
cmc
out
movsb
ret
mov
mov
mov
aas
mov
into
sbb
sub
push
sub
jne
aaa
xchg
jne
xor
pop
popf
inc
sbb
in
dec
push
xchg
push
scas
ficoms
push
outsl
jno
sahf
and
mov
cmp
inc
icebp
in
sahf
outsb
mov
enter
fdivr
xor
mov
mov
or
sbb
mov
push
push
insb
push
inc
jnp
das
repz
push
repz
arpl
jo
mov
mov
mov
sti
enter
insb
movsl
adc
pop
mov
out
lea
jne
cli
sbb
adc
pop
shlb
rcll
sub
inc
shll
pushf
xchg
sub
cmp
outsl
mov
into
xchg
test
xlat
ljmp
ja
sti
inc
mov
adc
pushf
test
mov
lahf
lahf
int
sbb
xchg
scas
shlb
mov
pop
fmull
cmpsb
jecxz
or
ljmp
sahf
mov
adc
sbb
mov
cmp
mov
in
shrb
out
mov
je
addl
stos
rcr
mov
mov
js
aas
and
push
jp
lds
in
sbb
sub
addr16
mov
out
sub
mov
repnz
xchg
dec
std
mov
test
mov
xchg
or
loope
xchg
stos
pop
notl
mov
icebp
ja
jmp
das
nop
add
add
test
or
add
jbe
inc
pop
repnz
into
add
push
mov
pop
shl
push
cmp
xor
sbb
and
iret
mov
dec
loopne
jecxz
or
mov
and
sarl
mov
sti
jp
movsl
jp
dec
inc
cmp
jmp
pop
fs
lcall
cmp
sti
push
fcomps
sbb
inc
add
mov
jbe
inc
arpl
dec
repnz
cmp
cmp
out
cmpl
xchg
js
arpl
xchg
dec
mov
xchg
mov
sbb
xchg
mov
sbb
inc
cwtl
ljmp
sbb
sbb
fstpl
loope
test
push
cld
insb
dec
sti
inc
lock
loop
xor
movsb
fldl2t
sbb
jp
sti
pusha
arpl
xor
jmp
out
cs
bound
push
push
ret
fistpll
mov
mov
sbb
test
jns
jns
rep
pop
or
gs
pushw
mov
xchg
push
sbb
inc
mov
sbb
out
cmp
or
lods
movsl
and
adc
jnp
je
xchg
rolb
out
mov
imul
mov
mov
fs
les
mov
dec
sbb
mov
ljmp
inc
mov
pop
cmp
ja
push
mov
arpl
add
mov
mov
mov
push
out
or
loopne
clc
mov
aaa
xor
fisttps
loop
sbb
push
pushf
jns
sbb
icebp
jle
daa
jge
cs
xchg
outsb
call
jg
lahf
cltd
push
jmp
mov
daa
sub
jne
cmp
test
loope
and
in
popf
dec
shl
lret
and
fbld
je
push
inc
cmpsl
dec
lret
xor
jbe
mov
int3
lods
fiadds
addl
call
sti
mov
and
cmp
shl
js
loope
xchg
in
rorb
sbb
xchg
adc
je
jmp
call
mov
inc
xchg
sbb
icebp
test
push
outsl
iret
in
pop
jl
pop
mov
cmp
divl
js
pop
dec
loop
mov
or
faddp
dec
scas
rclb
pop
mov
shll
sti
sbbb
and
and
and
inc
push
test
pop
mov
dec
daa
fcoms
mov
bound
repz
xor
xchg
sub
sbb
enter
mov
jne
jp
or
out
sub
and
movsb
jno
adc
test
fbstp
mov
and
cmp
mov
mulb
xor
adc
loope
push
fisubrl
pop
aas
out
jns
sub
jl
or
imul
cltd
cs
cmpsb
mov
ror
rclb
sbb
add
cli
fildll
mov
cmp
and
scas
cld
mov
and
stos
jecxz
push
shlb
mov
sbb
scas
cwtl
push
or
lret
ss
inc
and
jp
in
push
or
sub
mov
jbe
mov
mov
in
mov
lods
icebp
into
aad
cmpsb
fwait
jnp
jnp
adc
sbb
pop
xchg
pushf
sub
je
shll
loop
pushf
into
sub
mov
ds
and
mov
fmull
iret
enter
jb
cli
sbb
xor
sbb
jge
xchg
popf
cltd
sbb
cltd
lret
cmp
call
ljmp
outsl
mov
shll
xor
mov
sbb
lods
xor
cmpsb
cmp
subl
mov
mov
and
jp
cltd
sti
dec
add
and
pop
mov
call
ss
add
in
mov
dec
lea
test
adc
scas
xchg
mov
mov
stc
jle
jns
sub
repnz
push
xchg
movsl
sahf
jbe
jno
repz
xorl
ffreep
in
cmp
jns
cmp
popa
cmp
add
jnp
push
movsl
jbe
mov
pop
sbb
mov
pop
pop
inc
test
add
sub
shrl
cmp
popf
popf
loop
rol
lahf
jecxz
cli
cmp
lea
fwait
push
push
xchg
rorb
xorb
mov
or
push
testl
loop
subb
loopne
inc
scas
cmpl
or
inc
cli
add
scas
cmpsl
inc
fimull
adc
mov
bound
imul
in
rsm
jecxz
mov
pusha
flds
stos
xchg
shr
fldcw
pushf
repz
mov
ret
lds
out
rclb
mov
and
stos
mov
je
adc
jg
nop
or
mulb
xchg
repnz
pop
adc
sub
call
lret
scas
jnp
mov
push
mov
cmp
cli
daa
jns
fbstp
shrb
sbb
or
and
push
sub
push
adc
inc
jl
mov
mov
jns
xor
pusha
xchg
dec
out
std
jl
cli
push
insl
scas
push
mov
pop
test
jmp
ljmp
or
mov
fdivs
adc
cmp
mov
arpl
push
xchg
lods
adc
add
dec
mov
sti
shl
popa
out
aaa
subl
sbb
out
sub
ret
nop
fistpl
jmp
adcl
and
push
mov
sbb
mov
jo
aam
pop
cmp
push
out
mov
cmpl
add
push
test
fistps
outsl
lock
or
sbb
mov
stos
jno
or
mov
fwait
arpl
leave
push
nop
loop
mov
or
outsl
cli
leave
or
leave
push
push
sub
ret
outsb
sub
jp
pop
xor
insb
mov
adc
repz
je
in
scas
xor
sbb
lds
lcall
dec
loope
cmpsb
jae
cmp
cli
icebp
mov
in
andb
insl
add
or
cmpsl
jmp
repnz
sub
repnz
jnp
ret
lods
cmp
add
mov
test
je
jmp
int3
mov
or
sarb
repnz
fidivrs
mov
xor
jns
jg
mov
popf
jb
mov
and
sub
scas
arpl
les
inc
jne
out
mov
int
sbb
outsb
enter
and
lods
dec
jo
cmpsb
inc
mov
inc
xchg
jp
cli
fsts
shl
or
rclb
jae
in
cli
sub
cmp
fnstsw
sub
jmp
pop
mov
jmp
sub
or
mov
mov
jl
cmp
sarl
mov
pop
jns
dec
or
mov
jae
jp
or
cld
sbbb
xor
cmp
imul
ret
pop
pop
subl
push
hlt
shlb
out
test
testl
pusha
repz
inc
out
jbe
mov
fdiv
inc
negl
mov
dec
repz
pusha
add
aaa
dec
out
out
push
xchg
xor
stos
lea
cwtl
mov
xchg
sub
mov
or
rcrb
push
out
mov
cmpsb
jmp
cmp
inc
pop
jbe
aad
xor
mov
push
xchg
into
addr16
push
pop
popf
jne
or
sub
mov
notl
xor
add
lahf
je
jp
scas
adc
pop
lret
pop
jl
lods
pusha
xchg
add
in
dec
cmp
fucomp
push
cmp
inc
mov
arpl
jg
or
hlt
ljmp
push
pop
add
clc
adc
shl
xor
or
or
xor
sarb
add
repnz
mov
movsl
xor
aas
jae
xchg
daa
mov
xchg
pop
sbb
add
fucomp
fnsave
sub
lods
cld
popf
jae
repz
or
in
mov
imull
repnz
fsubrl
fdivl
cmp
sar
dec
mov
adc
cmp
cmpsb
jae
scas
or
xor
jae
ja
mov
adc
stos
nop
out
scas
xor
lcall
stos
clc
into
and
mov
mov
sbb
popa
inc
orl
fwait
jns
popa
fs
jmp
xor
stos
dec
movsl
inc
add
or
or
jp
mov
ret
mov
jmp
adcb
cs
inc
fimull
rclb
and
repnz
mov
mov
inc
add
sbb
sub
in
aad
mov
push
test
mov
push
jb
adc
test
int3
push
test
mov
mov
sbb
orl
ja
loopne
adc
orl
aam
loope
jmp
cli
test
shlb
cmpsb
jno
sub
fldenv
mov
fs
out
and
daa
lcall
sbb
xchg
lahf
adc
and
push
ljmp
jecxz
pop
add
sub
add
icebp
movsb
daa
cmp
mov
pop
add
fnsave
fucomi
push
mov
aam
mov
dec
loop
xchg
xchg
inc
mov
mov
cmp
jg
arpl
loope
sahf
sub
popa
mov
in
push
sub
roll
xchg
iret
loop
stos
cltd
lock
stos
lret
test
mov
jns
inc
ljmp
shlb
lods
mov
inc
dec
aas
pop
inc
xchg
outsl
jo
andb
dec
jmp
and
fistpl
lcall
and
xchg
push
xor
jne
dec
xchg
mov
jne
insl
lock
or
or
pusha
fldl
movsl
arpl
fstpl
scas
and
push
push
sahf
out
fistl
out
xor
lea
js
push
sbb
push
and
lret
or
push
mov
imul
adc
push
icebp
mov
pop
cmp
cwtl
xor
and
push
sbb
into
mov
or
jnp
mov
sbb
sub
fbstp
lahf
adc
push
cmp
mov
mov
dec
add
in
jo
out
imul
jae
xchg
test
inc
jle
mov
pop
pushl
sbb
pop
gs
xorl
jns
jg
mov
push
dec
push
dec
xor
lods
xchg
insb
mov
faddp
dec
aas
push
sub
dec
dec
cs
pop
and
jecxz
and
sti
and
aad
pop
and
mov
jb
pop
leave
out
aaa
inc
xchg
jbe
ret
jae
pop
aad
loope
push
push
jne
and
or
inc
leave
mov
adc
jnp
fwait
rorl
in
shlb
xor
xor
addl
mov
adc
int3
mov
add
cs
and
xchg
int3
and
cmpsb
push
cmp
cmp
fdiv
mov
pop
and
aam
xchg
push
inc
xchg
outsb
sti
scas
jl
pop
int
and
mov
aas
test
shl
pusha
divb
jnp
popf
fmulp
inc
sbb
ljmp
pop
aad
sbb
push
enter
cmpl
stos
push
or
dec
hlt
pushf
mov
or
add
mov
push
pop
repz
jae
aaa
cmp
rcrb
dec
fs
add
dec
lahf
daa
adc
inc
sbb
mov
xchg
mov
mov
testl
mov
lods
aaa
lods
sbb
mov
or
popf
xor
and
or
lahf
fwait
mov
int
mov
sub
xor
jle
decl
ror
in
mov
test
insl
test
mov
stc
loop
cmc
sub
dec
mov
jno
into
sub
mov
in
adc
aaa
or
jle
or
inc
scas
pop
lret
enter
pop
in
in
push
adc
xchg
jg
int
and
sbb
or
aad
pop
stc
dec
pusha
lret
and
pop
stc
xlat
test
dec
push
std
in
arpl
cmp
enter
std
cwtl
mov
mov
xchg
add
xchg
jb
mov
call
add
loop
or
into
mov
repnz
into
iret
stos
inc
jle
in
jl
xor
movsl
enter
stos
mov
mov
insb
fiadds
jl
js
cmpsl
add
popf
cmpsb
sub
cltd
mov
pop
dec
cmp
scas
inc
clc
push
loopne
push
mov
lods
loop
pop
ss
pop
mov
repnz
call
call
test
pop
movsl
dec
rcl
icebp
scas
jb
xlat
push
mov
jnp
sbb
inc
and
sub
mov
xor
inc
inc
push
notl
lea
dec
data16
xorl
adc
pop
cmp
je
movsb
ja
aam
in
and
stos
rcll
scas
sbbl
out
inc
inc
jg
in
inc
aas
movsb
lahf
mov
mov
fisubs
push
pop
mov
push
sbb
push
mov
jno
jmp
daa
mov
loopne
xor
incl
sub
std
sub
or
repnz
pop
xor
jle
mov
sub
and
xchg
mov
adc
ljmp
jb
mov
mov
stos
and
dec
data16
mov
test
sarl
lret
push
lret
out
jl
dec
movsb
mov
dec
push
jmp
adc
push
mov
cli
flds
cmpsb
lcall
or
push
mov
out
xor
cmp
sbb
loop
jns
xor
mov
and
pop
int3
dec
cmp
push
adc
mov
pusha
push
pop
sarl
add
fsubr
pop
cvtps2pd
ret
stos
imul
pop
mov
or
pop
lret
push
leave
imul
aam
ficoms
inc
mov
or
arpl
dec
mov
cs
loope
inc
and
adc
cmpsb
mov
jo
cmp
or
pusha
sbb
stc
ljmp
add
loope
in
scas
divb
test
insl
jge
mov
lcall
lcall
in
test
dec
outsb
sbb
test
push
xor
xor
lret
sahf
repnz
enter
sub
data16
inc
out
sti
lds
fs
push
sub
push
js
jo
mov
aaa
dec
push
out
xchg
push
lret
imul
sbb
and
xor
push
icebp
mov
int
mov
or
pop
arpl
inc
and
xchg
add
add
jne
jle
stc
test
addl
fwait
adc
mov
sbb
orl
jno
int
dec
mov
jmp
ret
xchg
sbb
inc
or
cmp
cmp
xlat
loopne
push
out
xchg
push
pop
ljmp
sar
movsl
push
pushf
inc
cmc
sahf
into
and
sub
dec
and
add
cwtl
add
out
cmp
dec
xlat
adc
in
pop
cwtl
aaa
sahf
rclb
push
lret
call
add
out
dec
pop
fwait
add
mov
pop
sub
inc
in
movsb
mov
sbb
xchg
bound
inc
dec
xor
or
mov
into
pop
cs
push
xchg
icebp
cmp
cmp
out
mov
push
ja
addb
jo
movsl
jecxz
fidivrs
jbe
push
call
in
push
dec
mov
ja
fbld
xor
cmp
iret
stc
lock
insl
cmpsb
sbb
mov
add
ss
enter
jae
loopne
loopne
push
adc
inc
fimull
cmp
insl
or
loopne
fiadds
orl
lock
rclb
ja
inc
adc
lcall
mov
in
mov
in
push
pop
mov
inc
repz
jge
xchg
or
pop
jge
adc
inc
fdivrs
fsubr
jb
nop
pop
insl
push
jle
cld
and
out
bound
enter
add
mov
push
roll
inc
sub
xor
movsb
imul
ljmp
mov
cwtl
movsb
inc
add
sub
das
jl,pt
sbb
in
lret
je
mov
shlb
call
push
fbld
in
sahf
mov
adc
in
inc
imul
mov
and
adc
dec
jge
ficompl
adc
pusha
and
les
rcll
xor
lea
es
movsl
nop
dec
mov
jg
mov
fsubl
data16
or
mov
imul
push
adc
push
inc
int
mov
push
mov
inc
scas
sub
aaa
arpl
insl
and
jbe
pusha
test
mov
insl
push
xchg
push
xor
inc
dec
fwait
inc
ljmp
test
in
popa
fwait
fidivl
sbb
adc
das
xor
aaa
push
and
jns
or
push
leave
shlb
dec
scas
hlt
movsl
inc
fcmovnbe
andb
lea
sbb
lods
pop
xlat
in
int3
pop
cmpsl
push
push
aam
ljmp
xchg
xchg
cmp
movsl
mov
or
lahf
fists
gs
pop
scas
ret
xor
into
fidivs
in
xchg
push
sub
fbld
ss
psrld
or
sahf
ja
pop
fcoms
fdivl
aaa
int3
xchg
push
push
aaa
sub
mov
test
imul
je
arpl
or
adc
shrl
inc
repnz
push
sarb
mov
mov
aam
adc
adc
dec
scas
repnz
subb
xchg
dec
jl
mov
movsb
ljmp
je
mov
or
mov
push
mov
in
movsb
stos
xor
mov
clc
adc
rorb
or
cmp
stc
dec
fdivp
icebp
or
ljmp
mov
mov
andl
mov
dec
cmp
test
insl
inc
or
push
repnz
jmp
in
shlb
lret
mov
ss
fimull
scas
aad
imul
ret
addr16
xchg
push
push
push
aam
pop
bt
mov
cmp
xor
push
scas
mov
dec
lret
and
fs
push
pop
sbb
add
sbb
sub
push
add
mov
jo
rep
enter
fcoml
pop
mov
jmp
mov
das
mov
sahf
jecxz
jbe
cmc
or
mov
pusha
fcomps
jns
dec
jns
dec
jnp
cmp
cltd
lret
fs
xchg
cs
fwait
pop
push
sub
cmp
sahf
jp
int
gs
pop
adc
test
mov
add
test
dec
xchg
mov
adc
adc
ficoms
cmp
cli
jo
repnz
or
rcll
add
dec
jno
jns
addl
add
mov
add
jns
or
mov
mov
sbb
iret
jae
daa
pop
and
xor
bt
adc
or
pusha
in
mov
cs
mov
stc
and
lret
cmp
sahf
adcl
mov
das
xor
shrb
xchg
sbb
xlat
ss
mov
sarb
pop
jae
sbb
lea
dec
push
cmp
jne
mov
jge
jnp
push
add
mov
mov
fstl
xchg
gs
xchg
push
dec
mov
cld
xchg
clc
cld
mov
mov
sub
jae
dec
mov
fisubrs
icebp
aam
outsl
mov
sbb
fimull
subl
mov
out
nop
mov
sti
lret
sbbb
fs
mov
int
shlb
loop
insl
pushf
scas
lea
inc
mov
xor
xchg
fucomip
lods
cwtl
adc
punpcklbw
lret
lret
xchg
mov
push
and
mov
sbb
call
and
mov
lret
loop
or
lds
pop
icebp
lret
popa
lock
mov
xlat
sub
xor
cwtl
pop
cld
ljmp
dec
pop
sub
push
movsb
cmpsb
mov
es
movsb
addr16
jmp
xor
and
mov
into
dec
ja
xlat
push
sti
jbe
outsl
rcrl
add
or
jmp
sub
imul
mov
dec
cwtl
xchg
int
stos
sarl
mov
or
lret
test
out
mov
pop
ss
mov
xchg
push
mov
pop
dec
aaa
movsb
xchg
xlat
mov
dec
out
pop
insb
xchg
pop
lcall
ds
divb
adc
scas
dec
andl
ljmp
pop
and
insb
icebp
push
jle
nop
mov
sub
sub
mov
test
popf
repz
pop
lock
xlat
pusha
jmp
and
pop
ret
xchg
pop
mov
cs
cli
pushf
outsb
xchg
repz
pop
jg
cs
sbb
inc
pop
push
pusha
stc
hlt
inc
jg
fisubl
push
push
arpl
inc
inc
jmp
cmp
xlat
js
scas
das
pop
loopne
jmp
outsb
loopne
cwtl
adc
jl
loop
pop
call
fildll
test
stos
xchg
push
adc
mov
test
loop
pop
adc
loopne
adc
xchg
pop
lods
popa
int
cs
push
loop
mov
or
mov
test
push
xchg
das
les
test
push
cltd
fidivl
cmpl
cmpsb
scas
sbb
notb
ret
jmp
jns
xor
jmp
cmpsl
mov
negl
push
xor
and
ror
jmp
shr
neg
sub
sbb
paddsw
adcb
push
notb
mov
das
in
aad
xor
out
adc
int
push
cmp
loopne
loope
out
pushf
pop
jmp
icebp
fdivr
pop
cmpsl
cmpsb
clc
cmp
cmpsb
pop
mov
icebp
clc
shlb
shll
pop
push
xchg
test
mov
and
adc
xorl
stc
cmp
xor
in
divb
mov
cmp
repz
out
nop
mov
xor
pop
push
lock
push
sub
std
and
lea
leave
fsubrs
pusha
fmuls
pop
ret
xchg
pop
cmpsb
dec
adc
imul
xchg
inc
clc
xchg
add
inc
mov
and
mov
and
jecxz
dec
insb
or
popa
cmpsl
adc
aas
xorb
cld
scas
ret
jge
cmp
fs
scas
push
ret
movsb
push
adc
and
xchg
mov
cmp
mov
cmp
push
sub
add
repnz
mov
mov
test
cltd
or
loop
jb
dec
cs
test
out
xor
test
dec
subb
filds
shrl
pop
orb
mov
add
leave
lret
xor
push
pop
pop
xor
iret
jp
mov
dec
shlb
mov
inc
jae
aam
pop
mov
lods
filds
push
pop
imul
sub
cld
imulb
cmp
daa
pop
sahf
jp
cmp
mov
or
pop
mov
jg
xor
cmp
popf
inc
inc
jecxz
mov
sub
lods
std
cltd
and
out
mov
dec
push
or
test
pop
mov
rcl
cli
xor
mov
mulb
or
mov
mov
mov
addl
and
jns
or
repnz
mov
pop
mov
inc
sub
out
inc
jns
popa
mov
test
xchg
add
cmpsl
shlb
popa
movl
mov
mov
test
mov
addr16
pop
insl
add
ss
movsl
movsb
sbb
shll
jl
or
ret
out
gs
mov
xchg
mov
mov
dec
xchg
xor
xchg
stos
mov
test
pop
les
push
mov
out
xor
scas
cmp
idivl
sub
stc
jecxz
fucomi
push
add
jp
cmp
jno
fnsave
out
and
add
mov
loopne
jl
in
test
xchg
lock
popa
xchg
cmp
aam
mov
out
dec
je
roll
fs
test
js
push
sbb
ret
int
jns
jbe
push
adc
pop
xchg
stos
test
mul
inc
adc
push
ret
enter
push
cmc
ret
test
popf
divl
enter
xor
fisubs
loop
insb
pop
insl
loopw
nop
out
in
repnz
push
add
decb
call
jmp
jge
dec
pop
out
aas
fists
iret
xor
xchg
lock
dec
jae
cmp
sbb
test
sub
mov
sub
and
add
dec
xor
jl
aad
popf
imull
or
dec
out
sbb
fdivrl
inc
adc
repz
pushf
mov
mov
lods
hlt
xchg
lds
dec
inc
mov
xchg
mov
in
ret
rcl
orb
mov
loop
test
rcrl
int3
mov
repz
sahf
loop
js
mov
js
lret
js
add
jp
shll
std
rorb
scas
imul
sub
jl
in
pop
sahf
mov
outsl
movsl
jnp
pop
push
test
mov
std
mov
jnp
push
das
mov
pop
push
mov
scas
jmp
cli
push
or
dec
into
aad
ja
mov
adc
repnz
push
pop
out
mov
mov
pusha
stc
push
not
lods
scas
xor
cmp
repz
les
ds
jmp
dec
lds
mov
mov
xchg
cmp
nop
loop
int3
jl
pop
stos
dec
push
scas
int
xchg
fnsave
dec
aaa
mov
push
test
mov
fnstenv
push
pop
mov
loopne
pop
and
mov
push
sbb
and
cs
lock
cli
pop
ficoms
scas
stos
push
out
dec
sub
jo
xor
or
int
cmpl
sub
push
push
mov
aad
adc
cmpsb
mov
call
insb
pop
repz
cwtl
repnz
pop
and
cmp
adc
scas
xchg
xchg
jae
pop
xchg
cmp
dec
sbb
push
jnp
loop
inc
clc
cmp
and
aaa
dec
pusha
mov
mov
lods
inc
aaa
daa
adc
jmp
mov
xchg
pop
xchg
push
jl
inc
jp
hlt
scas
cwtl
jae
adc
test
pop
adcb
stos
mov
div
bound
jle
mov
dec
inc
dec
xchg
inc
sub
icebp
add
inc
push
sti
add
mov
or
jl
mov
jns
ret
xorb
popf
mov
cld
xchg
push
in
mov
dec
test
out
jmp
xor
in
loop
mov
pushf
call
dec
add
dec
aad
flds
inc
mov
push
call
scas
shll
push
pop
inc
pop
out
inc
jl
loope
dec
xor
test
imul
jae
xorb
cmpsl
mov
cmp
inc
mov
mov
cmp
xchg
dec
ret
outsl
sti
xchg
lret
inc
dec
enter
imul
out
ret
jb
out
xchg
sbb
lret
leave
adc
or
sarl
stos
ja
add
insl
inc
clc
lock
xorl
arpl
add
orl
es
imul
movsl
dec
fimull
jnp
sub
sarb
xor
pop
scas
nop
out
push
mov
dec
sti
fs
lods
jb
cmp
pop
pop
mov
mov
xchg
inc
into
and
push
adc
pop
jge
fisubrl
push
jno
stos
xor
dec
push
inc
mov
loope
jne
dec
loope
movsl
jo
inc
test
or
jns
push
cmp
std
xor
das
mov
lcall
int3
imul
fs
gs
shlb
jp
ljmp
sbb
push
and
shll
cltd
mov
shlb
iret
int
add
addl
ja
fmuls
sub
xorb
fwait
ret
sahf
push
mul
pusha
stos
ds
iret
cmp
mov
ds
imul
js
mov
or
push
add
cmpsb
bound
addr16
sbb
imull
js
out
pop
mov
mov
xchg
mov
test
movsb
adc
shrb
cmpsb
and
jns
pop
insl
sub
out
pop
mov
pop
divl
arpl
xchg
cmp
jne
sub
mov
test
mov
mov
adc
scas
inc
xchg
es
sbb
mov
xchg
pop
mov
xor
cmp
lea
lods
js
andb
iret
movsl
adc
in
sbb
mov
mov
or
movsl
fbld
mov
das
cmp
push
insb
ret
sbb
and
xor
or
in
in
lea
stos
in
nop
enter
mov
sahf
cmp
xchg
loop
mov
push
mov
test
leave
jno
sbb
into
mov
cs
inc
cld
cmpsb
test
mov
or
out
pop
mov
jne
push
leave
fidivl
mov
adc
cmc
push
adc
ss
inc
out
jbe
sub
sarl
adc
dec
xor
into
jo
mov
sti
stos
push
jle
nopl
movsl
add
jp
loopne
jle
jnp
imull
mov
dec
push
add
lcall
pop
and
lea
js
xchg
xor
loopne
adc
xor
loop
push
push
mov
jnp
cs
jecxz
dec
pop
in
ljmp
mov
fidivl
mov
pop
std
mov
jae
pop
ss
rcll
lcall
hlt
mov
xchg
scas
pushf
xor
imul
cmpsl
hlt
cli
sub
sub
aas
adc
mov
xchg
mov
daa
divl
push
adc
dec
lods
mov
pop
xchg
push
mov
fs
out
mov
fucomi
test
mov
shrb
mov
js
and
sbb
sub
mov
adc
pop
imul
in
mov
in
dec
insl
ja
cmp
imul
mov
rcr
mov
repz
push
cmp
dec
cmp
insl
cs
mov
pop
sub
mov
ljmp
pop
sahf
xlat
inc
add
faddp
jbe
fdivr
mov
ljmp
sarb
pusha
mov
push
lods
test
movsb
pop
out
adc
cmpsl
adc
inc
mov
xchg
dec
imul
push
sbbb
push
fwait
iret
and
dec
ficoml
dec
pop
out
fnstsw
xchg
jg
xorl
cs
or
sbb
ja
dec
sub
inc
sub
ss
mov
arpl
sub
out
ret
outsl
loopne,pt
mov
nop
mov
and
sbb
les
sahf
dec
jnp
inc
sub
jae
push
sbb
lret
xchg
fs
adc
add
mov
xchg
leave
ljmp
imul
xlat
jle
das
add
jns
pop
into
stos
sbb
test
xchg
lods
sub
test
push
dec
or
cmp
dec
mov
clc
push
hlt
cwtl
lahf
xor
dec
push
xchg
jle
xchg
lea
jmp
mov
pop
test
sbb
push
mov
xor
dec
aas
mov
sbb
imul
outsb
loopne
xlat
ret
imul
xchg
in
xor
movsl
fwait
dec
sub
push
mov
lret
fucomi
pop
mov
outsb
movsb
clc
cmp
repnz
aad
mov
push
pop
fsubp
push
sub
inc
std
push
pop
sub
mov
std
loop
test
cmp
test
js
mov
cmc
jmp
sahf
mov
insb
and
je
data16
push
mov
rcrl
repz
sbb
loope
sbb
mov
int
test
add
cmpsb
mov
in
cmp
mov
jl
lea
clc
mov
icebp
dec
lea
paddusw
out
sub
cmc
mov
fs
rcrl
sbb
clc
xchg
outsl
xchg
and
xor
jg
cmc
pop
push
sub
mov
sub
pushf
pop
mov
sbb
loope
sbb
adc
dec
pop
orb
lods
je
test
or
into
mov
inc
incl
mov
inc
fs
or
cmp
sub
push
sbb
pop
or
stos
jp
add
or
xchg
pop
pop
idivb
sbb
stos
mov
lock
mov
lret
insb
mov
cmp
lcall
sbb
inc
mov
shlb
or
pop
cli
xchg
bound
imul
xchg
lock
lret
mov
cmp
scas
loop
pop
sub
mov
mov
loopne
notb
mov
mov
sub
pop
jl
add
jnp
inc
notb
and
dec
pushf
cld
shll
clc
mov
sub
stos
iret
xchg
fwait
and
add
bound
test
cmp
adc
jg
fstp
outsl
out
stos
xlat
outsl
in
cmpsb
xlat
pop
ret
push
sbb
out
add
adc
push
mov
inc
leave
jbe
jmp
mov
sub
call
xchg
dec
mov
sub
out
faddl
xor
sbb
dec
mov
mov
lahf
sub
mov
pop
mov
test
fs
into
cld
into
cld
movl
aas
shrl
call
jp
in
and
in
inc
dec
nop
aad
mov
xlat
lea
cmp
cmp
loopne
fnstsw
pop
fsubl
and
push
std
lds
loop
mov
scas
adc
inc
leave
adc
push
addr16
jno
mov
inc
ja
pop
mov
xchg
mov
mov
mov
sbb
mov
movsl
dec
int3
lods
fldl2t
mov
jns
int
mov
ja
pop
or
test
xor
jge
aam
outsb
sub
popa
sub
dec
fcompl
or
popf
outsb
in
jl
push
inc
mov
fists
lods
dec
cmp
jne
es
adc
adc
add
rol
aam
add
sbb
mov
fdivs
xor
xchg
adc
adc
sub
insl
in
stc
push
push
dec
sub
xchg
in
lds
mov
insl
data16
xchg
push
cmc
push
mov
adc
adc
or
xchg
push
idiv
inc
les
xor
jle
rcrb
pop
and
rorl
adc
movsl
test
jno
nop
int3
cmc
cmp
sub
cmp
jne
or
pop
out
push
jns
jl
pop
and
inc
add
lock
jge
inc
mov
adc
loop
shll
lods
cmp
pushf
aam
dec
pop
repnz
pop
jns
mov
jmp
leave
cmpsl
mov
mov
data16
imul
xchg
fldl
ficompl
je
xchg
pop
mov
jp
jle
add
int
jge
push
lea
fchs
add
sub
in
jmp
jecxz
fs
and
aaa
lods
sbb
aaa
inc
adc
fs
mov
mov
clc
jno
out
inc
iret
and
imul
in
shlb
inc
jb
mov
mov
xchg
mov
imull
adc
push
test
mov
adc
mov
cmpsl
sbb
mov
cmp
pop
jo
lods
lahf
stos
cltd
jbe
dec
pop
insb
in
push
dec
fisubrl
pop
dec
push
push
push
push
sahf
aaa
jbe
inc
daa
in
xor
cli
ret
rorb
push
add
mov
mov
ljmp
xor
and
ret
orl
push
sub
pop
mov
sbb
push
lods
sahf
jno
cmpl
mov
jne
dec
xchg
shl
lock
pop
into
imulb
and
dec
lcall
mov
jmp
rclb
xchg
cmp
cmp
pop
sarb
jnp
addr16
push
rcll
xchg
xor
mov
std
xchg
jae
jmp
sub
jl
push
arpl
fstp
cmp
outsb
mov
mov
sahf
inc
mov
mov
push
bound
pushf
pushf
les
data16
aaa
dec
ret
mov
insl
and
shrl
xchg
pop
es
sbb
sub
mov
lods
and
movsb
lret
test
hlt
popf
xchg
xchg
lcall
ror
or
pop
push
cs
inc
scas
icebp
sbb
lods
sub
call
xchg
pop
xlat
call
mov
and
mov
push
stc
xor
test
mov
adc
or
outsl
aam
cmp
mov
or
jae
fimull
das
test
or
data16
or
pop
out
push
enter
fxch
inc
cli
repnz
or
pop
test
xor
pop
out
cmpsb
inc
or
push
inc
jmp
scas
mov
out
xlat
lock
xchg
test
lods
mov
ss
adc
inc
jl
mov
in
cltd
leave
das
stos
pop
jp
int3
sbb
adc
fimull
cmc
lcall
repnz
iret
or
xchg
jo
xor
leave
ret
dec
stc
dec
mov
je
pop
cwtl
js
mov
add
push
js
xchg
fisubrl
inc
pushf
fmull
mov
and
mov
adc
xor
xor
jne
leave
and
cmpb
push
dec
sub
push
mov
cld
pop
push
mov
cltd
add
fsts
xor
or
out
jecxz
ljmp
push
add
aaa
jl
inc
mov
push
ffreep
test
idivb
insl
rcr
mov
aaa
call
jp
cmp
js
lods
test
mov
cmp
mov
daa
pushl
push
adc
xlat
or
iret
push
int3
jl
sbb
cmp
mov
jg
sbb
mov
mov
out
adc
xor
ljmp
mov
add
jae
pop
xor
fnstsw
push
jl
mov
sbb
inc
pop
arpl
pop
out
xchg
sub
nop
dec
cmp
push
pop
movsl
mov
call
imul
push
bound
into
imul
jge
cmp
cltd
std
xor
mov
rcrl
fst
mov
push
sub
int
sahf
fcomi
push
or
cmpb
fidivs
decb
or
clc
mov
sbb
mov
mov
shrl
fcoml
mov
push
and
in
cmc
rcll
push
or
mov
inc
call
jne
lret
sbb
adcb
fsub
push
sahf
filds
call
repnz
lcall
faddl
aam
inc
icebp
sub
lods
push
cmc
dec
inc
push
jmp
je
cmp
or
inc
fidivrs
and
inc
jg
sbb
rcll
adcl
mov
pop
push
xor
xchg
fstps
stos
jecxz
outsl
das
mov
pop
scas
out
outsl
mov
push
xor
cmc
sub
hlt
add
in
cmp
xchg
jo
mov
ja
cmp
jae
sub
scas
add
imul
add
fidivrs
sub
or
cmp
sbb
adc
mov
les
cs
xchg
xchg
jle
jns
iret
dec
inc
outsb
nop
add
mov
push
out
ljmp
or
and
test
add
addr16
adc
push
pop
sub
jl
int
std
xor
sub
dec
out
sbb
xchg
jecxz
push
dec
jno
inc
repz
mov
test
stos
jae
add
sub
fnstsw
push
push
ret
sbb
xor
and
arpl
sbb
mov
mov
mov
sbb
or
jne
sub
push
sbb
mov
adc
test
cli
sbb
gs
lcall
or
into
shl
jb
out
add
push
cmp
sbbl
adc
mov
inc
jl
fmul
fistps
mov
stos
insl
andb
scas
hlt
gs
mov
lods
test
push
ja
mov
fistpl
sub
test
aas
mov
ljmp
pop
cmp
repz
js
rcl
dec
or
push
cmpb
les
jge
and
sub
iret
fst
in
mov
xchg
int3
cmp
sbb
test
lea
out
xor
ret
jg
daa
lds
cmc
sbb
lock
outsl
cmp
lea
jno
jno
dec
push
jmp
pop
dec
push
movsb
enter
sub
leave
std
xchg
jns
or
push
xchg
movsl
jg
out
into
imul
xchg
xlat
cmp
iret
mul
push
inc
ds
xor
dec
jp
std
lcall
xchg
stc
stc
xor
add
pop
outsb
aas
mov
shrl
cmpb
jns
push
push
sub
push
xchg
lods
sub
jmp
je
adc
mov
outsb
stos
sbbb
pop
xor
addr16
pop
punpckhdq
std
aas
fdivs
out
push
ds
clc
pop
mov
insl
lock
dec
adc
sar
cmp
dec
pop
xchg
fimull
push
rcrl
sbb
jge
mov
sub
xor
ret
aad
pop
cmp
leave
pushf
dec
push
dec
imul
push
mov
clc
roll
xchg
xchg
sub
add
jl
mov
outsb
push
mov
shlb
pop
add
std
sub
fdivrs
pop
xchg
jmp
add
jge
pusha
shrb
fdivl
xchg
xchg
in
sbbb
mov
lods
ror
pop
jle
mov
ja
fucomi
fidivl
jnp
xchg
cld
lret
mov
sbb
xor
xchg
jge
ret
adc
pop
call
push
stos
les
ljmp
test
mov
aaa
ficoms
xor
jns
mov
push
sub
xchg
add
sbb
jns
xor
int3
cmpsb
fimull
adc
outsb
and
cmpsb
dec
cmp
pop
mov
rorb
into
pushf
xor
repz
adc
movsl
dec
sbbb
sbb
orb
fucomip
lods
rcrb
adc
std
test
xchg
pop
call
sbb
mov
push
pusha
ret
jge
les
cmp
shrl
lea
out
lds
pop
jmp
sarb
cmp
and
push
adc
jp
adc
sahf
mov
movsl
dec
xchg
dec
jns
inc
pop
cltd
sbb
pop
add
ljmp
mov
sbb
sarl
pusha
out
fstps
jns
pop
push
bnd
ljmp
dec
fcompl
xchg
jnp
cmc
xchg
dec
jmp
mov
and
ja
bound
mov
lahf
adc
nop
and
jle
xor
pop
test
mov
or
iret
in
stc
inc
xor
push
sub
xchg
aam
sub
inc
movsl
test
pextrw
mov
popf
mov
add
jae
enter
imul
xchg
stos
dec
ret
stos
js
dec
fildll
xor
jp
ss
inc
mov
lcall
dec
adc
sbb
pop
imul
testb
ja
dec
dec
cmp
outsb
repnz
mov
and
push
push
jo
mov
jae
ja
gs
cmc
jle
aas
cmp
jecxz
decb
imul
stos
iret
rcll
add
xchg
in
xchg
addr16
mov
sub
jp
faddl
push
cld
sbb
ds
jmp
adc
mov
mov
adc
mov
pop
imul
mov
sub
cs
scas
and
xrelease
jecxz
or
sub
fwait
add
icebp
xchg
jl
xor
in
add
data16
xchg
mov
imul
movsb
or
inc
and
addr16
fistps
or
iret
mov
rcr
dec
or
inc
ss
jmp
adc
or
daa
int
xchg
jb
pop
shrl
int
xlat
ds
lea
scas
or
popf
lods
sti
sbb
notb
dec
adc
sub
fiaddl
test
dec
adc
xor
or
jnp
add
insl
fmull
int
mov
imulb
sbb
cmp
pusha
jo
ds
push
stc
data16
insb
mov
ficoml
arpl
adc
scas
adc
cmc
jae
mov
mov
mov
popf
jg
mov
jp
mov
lret
sahf
movsl
push
les
mov
fildl
xchg
dec
xchg
lods
mov
cmc
test
inc
mov
popf
loope
sub
mov
movsl
mov
fists
sub
xor
and
xchg
movsl
mov
inc
mov
fisubs
out
inc
xor
shrb
jmp
mov
outsl
and
jno
sub
insb
in
mov
cmp
push
mov
jns
in
test
cwtl
lods
outsb
pop
daa
adc
stos
call
aaa
pusha
mov
xchg
inc
icebp
mov
add
enter
dec
jmp
test
pop
or
cmp
fwait
out
aas
das
adc
pop
inc
stc
mov
shlb
adcb
jns
leave
movsb
dec
fidivl
js
push
push
inc
dec
out
hlt
ss
push
mov
xor
and
cli
lahf
or
push
int
enter
popf
mov
lods
fisubl
shll
js
les
mov
iret
mov
shl
stc
ss
notl
shrb
lds
dec
je
cmp
jmp
xor
jns
jne
inc
push
shrl
mov
push
inc
cld
jmp
mov
imul
shrb
fsts
xor
int
imul
add
in
in
stos
inc
push
pop
lods
pop
mov
ficompl
pop
jg
ja
js
sub
je
inc
loope
sahf
aam
pop
mov
adc
or
mov
dec
roll
lock
inc
inc
push
mov
push
loope
dec
xchg
jnp
pop
xchg
cmp
lcall
outsl
mov
adc
add
cmpsl
bswap
pop
out
les
cmp
or
mov
aad
mov
adc
inc
push
icebp
push
pop
mov
pop
leave
xor
leave
leave
outsl
insb
mov
movsl
mov
pop
mov
adc
mov
testl
loop
adc
lcall
add
cmp
inc
hlt
stos
ret
mov
hlt
mov
xor
std
inc
cmp
adc
rorb
pop
cmp
jne
mov
pop
sbb
mov
push
popf
cmp
stos
lods
daa
stos
test
stc
imul
inc
mov
sbb
mov
insb
cld
hlt
loop
jl
dec
pop
xchg
and
xchg
sub
adc
adc
xchg
imul
lret
push
rclb
cmp
and
sub
ret
push
and
in
pop
rclb
mov
out
out
jmp
js
out
mov
fstpt
jge
shlb
movsl
pop
out
sbb
loopne
mov
loope
mov
icebp
mov
lahf
dec
lds
add
cli
stos
pop
js
adc
xchg
pop
cmp
orb
in
lods
aam
clc
xchg
push
xchg
daa
pop
les
dec
fdivr
int
outsl
jecxz
je
push
out
jecxz
mov
cmp
mov
inc
imul
out
cmpsl
les
lahf
adc
sti
xchg
test
lcall
cmp
sahf
gs
xor
xchg
jo
mov
ficoms
pop
ja
iret
pusha
or
imul
jle
push
mov
bound
pop
mov
out
xor
mov
cmpsl
jno
out
fdivr
mov
mov
movsl
adc
fcmovu
push
and
pop
mov
xchg
add
out
in
movsb
lahf
sbb
fisttps
imul
leave
imul
sahf
test
pusha
pop
arpl
repnz
cmpsl
enter
jb
cltd
pop
push
clc
sti
add
mov
dec
mov
in
pop
rcrl
xchg
jo
and
jo
jb
icebp
push
mov
daa
mov
dec
xchg
leave
and
pop
dec
jb
mov
jp
ljmp
cld
sbb
cmc
push
int
pop
mov
loope
cmc
xor
add
shrb
xchg
pop
push
shrb
jnp
inc
inc
inc
jns
js
into
scas
and
push
sbb
mov
add
lds
outsb
cmpsb
insl
push
mov
lret
xlat
movsb
lods
les
mov
test
inc
enter
out
in
jmp
fdivrs
mov
cltd
mov
dec
fistps
mov
ret
jnp
ret
rcr
sub
jnp
cmp
aas
jge
and
adc
add
inc
sbb
mov
or
cmp
pop
jnp
xchg
movsb
popf
jo
jecxz
xchg
clc
jnp
adc
shll
lret
sbb
push
cmp
mov
test
loopne
stc
out
pop
xlat
xor
shrl
insl
pop
dec
pop
cwtl
xchg
inc
cmp
arpl
loop
call
push
dec
cmp
cmpsb
test
and
lcall
pop
scas
repz
xlat
dec
cmp
sub
repz
push
xchg
cmp
out
andnps
xchg
pop
call
pop
fcmovb
inc
xor
inc
pop
cmp
orl
inc
fwait
mov
imul
mov
jnp
js
dec
inc
outsl
stos
repz
sarl
and
in
adc
and
push
hlt
cmp
sahf
mov
aad
jmpw
outsl
jg
mov
mov
imul
mov
int
negb
insl
inc
pop
test
cmp
mov
pop
sub
jp
ja
ficoml
mov
sub
pop
gs
pop
xchg
fistps
or
pusha
stc
in
cmpsl
mov
sbbl
fucomp
cmp
pop
push
vpmaddwd
jg
sbb
pop
inc
mov
adc
dec
inc
cli
xor
pop
call
shll
adcb
mov
add
out
outsb
repz
ja
push
fsubrs
call
fidivl
fs
call
je
sub
fldt
push
pop
mov
add
mov
sarl
loopne
add
fsubs
add
daa
mov
inc
fmull
scas
cmp
in
cmp
xchg
icebp
out
repnz
cmp
and
mov
jecxz
and
mov
loop
iret
jecxz
xor
pop
mov
pop
mov
pushf
cmp
cs
arpl
stos
mov
and
or
out
add
inc
pop
jge
or
iret
ja
jmp
clc
leave
adcl
add
xchg
arpl
enter
jle
leave
dec
repnz
cmp
dec
add
sti
leave
cmpsl
leave
mov
sub
jno
sub
enter
mov
sbb
ss
pusha
in
lock
sbb
pop
rol
lds
push
add
sbb
stos
push
pop
sbb
out
pop
jae
arpl
jae
loope
jbe,pn
push
fldcw
pushf
popf
arpl
inc
out
or
inc
gs
insb
pop
pop
jmp
pop
popf
mov
test
loopne
ret
int3
xchg
cs
jne
mov
test
mov
rcrl
push
push
push
push
and
outsl
mov
in
inc
outsb
jno
or
mov
int
mov
dec
aas
fstpt
out
clc
loop
xchg
or
in
add
push
xchg
int3
pop
mov
mov
bound
push
jmp
fisubrl
mov
outsl
fucomi
and
mov
mov
out
jmp
mov
mov
adc
inc
adc
pop
mov
and
mov
movsb
das
inc
adc
xor
dec
ja
rcrl
leave
xchg
icebp
unpckhps
xchg
sbb
mov
mov
and
cli
mov
add
pop
int3
pop
rcrb
xlat
sti
jp
mov
sub
pop
pop
adc
and
rclb
push
sub
test
jae
mov
jmp
stc
test
mov
repz
mov
daa
ljmp
xor
xchg
xor
dec
jno
push
dec
adc
or
push
test
mov
arpl
or
das
inc
fcmovu
scas
pop
jmp
enter
mov
push
rcr
push
pop
int
enter
mov
adc
mov
mov
in
jb
cs
mov
mov
pop
test
gs
add
sbb
das
out
push
cmp
call
pop
ja
add
adc
icebp
and
mov
popa
and
iret
xor
jp
imul
and
or
outsl
mov
sbb
push
xchg
or
jo
daa
js
daa
js
cwtl
lods
and
jo
lock
pop
mov
jmp
cmp
adc
mov
enter
ret
adc
xlat
add
icebp
lret
xor
and
orl
xchg
jbe
dec
inc
mov
dec
jl
mov
xchg
push
fucomi
cmp
push
lds
inc
adc
sbb
cltd
loopne
dec
ss
lock
jge
lods
nop
faddl
push
jns
cmc
mov
std
arpl
push
sbb
dec
cmp
mov
xlat
ret
or
pop
mov
int3
cltd
test
xlat
xor
jbe
pop
pushf
repz
adc
adcb
lods
sbb
and
stos
jno
mov
ja
shl
jne
in
inc
jns
outsl
adc
cmpsb
addr16
stos
mov
test
cltd
stos
dec
pop
push
push
lock
in
jbe
fbld
lcall
std
xor
pop
scas
jns
lahf
inc
lock
test
sbb
cmp
xor
xor
inc
xor
mov
mov
push
enter
shl
add
pop
dec
mov
mov
jbe
mov
xor
dec
mov
mov
fldl
out
add
dec
sbb
push
aam
or
lock
lods
or
xchg
out
call
int
xorl
lea
xor
and
call
out
enter
fiadds
ljmp
jae
fs
pop
je
aaa
das
stos
mov
sbb
mov
mov
mov
dec
sbb
cs
aam
xchg
scas
push
dec
dec
sahf
test
push
lea
xor
in
shll
loop
sub
inc
ret
sub
into
rcrb
lahf
add
insb
js
cmpsl
fldenv
clc
mov
xchg
mov
xor
movsl
pop
mov
xlat
cmpb
mov
pushf
out
pop
clc
add
dec
xor
adcl
add
fidivl
stos
xorb
sti
ljmp
adc
repz
sbbb
sub
dec
andl
mov
ljmp
sahf
lods
adc
call
cmp
pop
sbb
or
sub
xor
sub
les
fwait
aas
mov
pop
fstl
push
test
or
mov
mov
lret
leave
inc
dec
xchg
aaa
int3
jo
popa
push
jle,pn
enter
hlt
into
inc
nop
mov
orb
dec
out
inc
or
xor
push
jg
les
aas
imul
icebp
arpl
clc
loope
jge
push
fldenv
sub
fadds
jmp
mov
pop
pop
add
mov
adc
fistps
mov
sahf
sarl
cmp
cltd
movsl
push
mov
pop
clc
push
scas
fldl
lock
sbbb
cmc
xor
mov
addl
push
lcall
jbe
dec
in
or
scas
adc
rcl
data16
lods
jecxz
out
out
pop
mov
xor
push
push
pop
dec
mov
nop
push
dec
mov
dec
ljmp
sbbb
adc
push
cmpsl
mov
enter
push
int3
push
inc
lahf
or
test
hlt
dec
jg
mov
das
jge
insl
out
push
dec
scas
lods
leave
fidivl
jle
ret
movsb
sbb
add
cmp
call
cmp
out
cmpsb
push
jbe
outsb
mov
mov
cld
mov
jg
sbb
mov
mov
mov
xor
scas
inc
repz
cld
imul
mov
pop
jnp
mov
cmpsl
lret
int3
outsb
cmp
out
jle
pop
ss
xor
call
mov
or
arpl
push
xor
stos
add
jmp
in
lea
inc
fiadds
lds
repz
xorb
divl
pop
or
dec
cmc
lea
jmp
loope
jno
xchg
test
pop
mov
imul
mov
mov
clc
adc
pop
clc
xchg
cmpsl
fcomip
sub
outsl
adc
int3
sub
cmpsl
pop
call
xor
cmp
popa
gs
lahf
push
test
loop
pop
mov
loop
pushf
sbb
jo
xor
cwtl
inc
sub
push
and
aas
repz
jg
repz
aas
lock
mov
loopne
fisttpll
jecxz
pop
arpl
das
test
out
int
cmpsl
adc
shll
pop
sub
fcoml
ret
cwtl
lea
std
repnz
in
jg
fwait
mov
sbb
add
add
adc
jo
add
push
mov
ja
fcompl
push
aaa
sbb
push
jo
sbbb
scas
cli
and
rcrb
jbe
mov
cmpsl
add
push
pushf
push
fdivrl
loopne
cmpl
push
das
subb
adc
cmp
jecxz
dec
add
sti
sbb
jns
filds
jne
jl
fcompl
jo
pop
mov
cmp
xor
inc
jo
jo
cmpb
out
jae
filds
stos
loopne
add
fsubl
into
in
mov
or
mov
sbb
std
sbb
lahf
sarb
sarl
mov
add
pop
fcoml
jo
jo
loopne
add
pop
fdivl
stos
mov
pop
pop
jge
mov
jo
shrb
pop
jo
sub
mov
cmp
and
xor
or
ds
sbb
and
jno
xchg
rorb
jo
rcll
push
rolb
mov
lods
dec
repnz
int3
imul
pusha
jge
lock
add
in
orl
dec
inc
cli
or
mov
add
mov
cmp
sarb
adc
pop
bound
pop
jo
or
loopne
rcl
popf
daa
shll
ret
pop
or
and
iret
inc
pmulhw
add
add
mov
addl
jge
and
add
outsl
or
sti
sub
pop
icebp
in
cli
cmpl
lea
add
add
mov
sub
push
add
or
cli
testb
dec
aam
dec
xor
pcmpgtw
pop
push
dec
addb
adc
xor
nop
and
sbb
adc
rcll
pushf
adc
sbb
and
dec
sbb
imul
sbb
mov
add
push
push
or
cmp
test
cmc
fldcw
jnp
dec
mov
cmpb
cmp
int3
loopne
loopne
mov
scas
sbb
stos
xlat
ljmp
mov
push
or
push
hlt
sub
fnstenv
andb
pop
das
jo
fnstcw
in
push
and
cmp
nop
nop
sahf
ds
cmp
push
cmpsl
daa
dec
rol
cmpsb
jmp
pop
xchg
fs
std
imul
pop
pop
inc
jmp
fwait
fs
adc
sbb
loopne
mov
inc
addl
inc
push
mov
or
pop
and
adc
cmp
push
movsl
xchg
lds
inc
mov
popa
mov
mov
sub
daa
movsl
or
lret
inc
andl
je
dec
or
les
mov
sbb
push
addr16
sahf
dec
pop
subb
cld
xlat
mov
xchg
int
mov
jae
adc
sahf
out
xchg
cwtl
out
add
pop
lahf
cwtl
cs
dec
aaa
push
dec
cmpsl
cmp
cmp
mov
pop
testl
in
rolb
inc
rcll
push
lahf
sahf
xchg
mov
subl
mov
or
push
xchg
das
test
sbb
adc
ds
mov
int3
stc
jmp
enter
lods
ret
cwtl
or
or
cmp
jge
pushf
add
out
repnz
add
jecxz
jl
nop
mov
icebp
fidivl
jg
push
sbb
rcrb
sub
sti
dec
data16
xchg
sub
pop
repnz
mov
xchg
jle
push
out
int
adc
jecxz
mov
pusha
pop
sti
fstpl
adc
loopne
aas
pushf
iret
aas
lret
mov
add
add
hlt
jg
decb
xchg
jg
jnp
push
cmpxchg
fldenv
jecxz
mov
cmp
cmpsb
dec
xlat
imul
cld
xor
xor
push
int
sbb
sub
jmp
or
shl
out
in
mov
and
lds
sbb
push
sti
mov
icebp
aaa
jg
icebp
pop
pop
stc
loopne
es
lods
lods
sbb
jae
idiv
sub
pop
cli
lods
xchg
dec
sti
mov
int
subb
push
arpl
loope
mov
jmp
jecxz
adc
ret
sub
loop
lret
pop
inc
orl
in
mov
iret
cld
jo
inc
mov
idivb
sahf
jge
loop
rol
icebp
xor
xlat
dec
iret
mov
in
nop
lret
fistpll
inc
adc
pop
sbb
stc
mov
cwtl
cli
mov
lods
lods
mov
je
push
mov
or
std
cmpsl
scas
pop
in
jnp
mov
xor
jae
mov
dec
cmc
fcmovnbe
out
adc
je
mov
cmp
cwtl
aaa
ss
push
leave
pushw
notl
insl
push
mov
mov
lods
ja
out
cs
mov
out
arpl
cltd
shl
pop
pop
int3
mov
xor
std
push
shll
and
adc
jno
pop
ret
in
movsb
adc
pop
pop
mov
hlt
cmc
sbb
mov
hlt
pop
xchg
inc
arpl
aaa
dec
gs
cwtl
add
lret
lock
or
inc
loop
xchg
and
shrl
dec
push
cli
add
fidivl
cmp
dec
fdivp
mov
dec
shrl
jns
cs
dec
scas
pop
mov
mov
fcomps
mov
scas
pop
mov
popa
aad
arpl
xchg
mov
aad
mov
mov
clc
jno
dec
outsl
int
mov
adc
in
sbb
clc
lods
lods
ret
movsl
outsl
popf
mov
jle
cmp
push
push
fdivs
cmc
mov
aas
cmp
out
scas
ds
or
push
lret
lahf
in
out
mov
lods
js
cli
notl
xchg
push
xchg
test
push
ss
pop
or
call
int3
insl
pop
sbb
push
fwait
xor
out
lret
sub
insb
cmp
dec
into
outsl
sub
xor
cmpsb
in
jmp
mov
or
jecxz
mov
ficomps
xor
xchg
xchg
fidivrs
mov
mov
mov
aas
dec
rcrb
cwtl
xor
xchg
add
sbbl
xor
mov
mov
aas
sbb
into
daa
aas
cs
sbb
jg
aas
pop
aaa
pop
mov
std
stos
lret
pop
mov
mov
mov
and
jnp
mov
nop
jecxz
inc
push
movsb
dec
sbb
fwait
lahf
ds
mov
lock
cli
test
scas
in
mov
cmp
out
mov
xor
leave
mov
ds
into
repnz
out
adc
cmpsl
mov
mov
daa
call
lret
sub
inc
js
dec
inc
jb
inc
push
repnz
gs
clc
xchg
and
xchg
icebp
lock
dec
adc
cltd
dec
dec
pop
inc
mov
push
push
xchg
sti
shrb
cmpsl
mov
icebp
lahf
repz
sahf
and
test
cli
scas
adc
loop
fdivrp
icebp
jno
dec
mov
loop
loope
stc
repnz
loopne
sub
fists
jp
daa
ds
xchg
popa
mov
push
push
mov
mov
pop
add
and
adc
movsl
lea
dec
pop
sbb
push
push
jno
gs
cmp
add
xchg
js
sbb
repz
jns
je
aam
mov
xchg
ret
call
pop
inc
and
test
jge
sqrtps
xchg
repz
stos
out
sub
repnz
shl
arpl
push
scas
data16
inc
sbb
das
movsl
mov
mov
mov
jmp
lret
popa
jb
mov
insb
clc
xor
movsb
aam
push
pop
inc
js
inc
mov
lahf
jg
mov
cmp
daa
mov
rorb
out
mov
out
decl
clc
lret
idivl
xchg
cmp
icebp
out
loope
leave
lahf
aad
jl
and
dec
cmp
mov
lret
add
pop
mov
xchg
jno
xchg
data16
pop
mov
flds
inc
sti
add
pusha
lods
jle
lods
and
dec
push
push
pop
add
and
scas
out
test
cld
mov
fisubrl
stos
jmp
repz
std
icebp
sub
mov
jb
loope
jmp
out
inc
rolb
in
fistl
loopne
pop
mov
jl
aad
mov
pop
push
sub
pop
loopne
loop
jmp
lret
arpl
xor
pushf
sbb
xchg
aas
cs
lods
in
aad
dec
into
sub
call
lahf
sbb
data16
test
xchg
mov
fstpl
out
sti
ja
sub
in
leave
cld
popa
inc
jbe
in
dec
arpl
sarl
into
std
scas
test
icebp
scas
dec
das
jne
test
xor
xor
rolb
lcall
andb
add
add
push
xchg
mov
push
int3
pop
inc
in
pop
into
imul
dec
mov
jno
jge
dec
push
adc
pop
jecxz
jp
rol
push
xchg
inc
adc
or
addl
lea
cmpsl
mov
pop
lahf
adc
or
and
dec
bound
cmc
jl
xor
jbe
sub
jg
push
sbbb
xchg
loopne
sbb
cmp
ds
fldenv
fdivrs
cmc
pop
in
outsl
sahf
fcom
stc
loope
xchg
out
cmp
aad
stos
jg
stc
fucomp
fistl
pop
fidivs
mov
imul
data16
jle
in
mov
lret
xchg
mov
std
pop
mul
mov
daa
jle
mov
fwait
xor
out
aas
xchg
repz
outsl
into
jl
mov
mov
sub
jno
push
loop
pop
aaa
lcall
dec
dec
dec
mov
jle
xchg
or
fisttpll
fwait
cs
rsm
mov
sti
pusha
pop
mov
lret
cld
mov
stos
sub
cmp
inc
stc
insl
sbb
jbe
or
ja
aad
fimuls
xchg
insl
sahf
jb
call
cs
xor
mov
jns
lret
push
aas
pop
and
push
test
xor
push
jne
dec
jl
jb
mov
cmp
sbb
adc
mov
fcoms
insl
inc
outsl
bound
xor
dec
jns,pt
popf
dec
mov
mov
jmp
sub
add
nop
pop
sahf
cld
std
sysret
dec
mov
imul
sub
sahf
into
fcomi
and
jne
cmpsl
pop
fnstcw
or
push
cmc
clc
xchg
dec
sub
pushl
rorb
jg
sub
cmpsl
out
js
inc
mov
dec
inc
mov
jbe
jl
lahf
jnp
stc
out
clc
cmp
adc
mov
cmc
pushf
fidivrl
ret
jnp
ret
mov
mov
jg
into
inc
lahf
scas
jo
pop
lock
je
and
mov
cmpsb
std
dec
push
jbe
outsb
ret
outsl
pop
jne
mov
call
cmpsb
pop
aad
jp
jge
cld
mov
stos
mov
adc
pop
adc
loope
push
imul
stos
movsb
fisttpl
xchg
jno
pop
sbb
ret
ja
int3
mov
pop
ss
pop
xchg
leave
cli
data16
mov
clc
xchg
mov
and
mov
push
mov
mov
fiadds
int
mov
pop
cmp
aam
sub
mov
sbb
fwait
sub
int3
mov
fidivs
adc
jg
out
lret
pushf
lods
movsl
test
lcall
insl
pop
jbe
mov
mov
mov
out
ja
loop
and
lods
mov
dec
sbb
fwait
aad
mov
out
jae
mov
push
push
cmpsb
sarl
lret
cmp
mov
notl
fcoml
iret
fnsave
fwait
cmp
popf
ja
cmp
shll
mov
fisubrs
jns
mov
pop
nop
pop
jb
sub
stc
shll
dec
cmc
xchg
lock
cli
dec
cmp
xchg
ljmp
loopne
fsubs
out
popf
popa
mov
insl
jbe
fstl
gs
fstps
into
stc
in
push
test
and
push
loop
and
shlb
rcrl
int
pushf
jl
and
sahf
xor
outsl
jbe
lds
cmp
int
stc
imulb
aaa
iret
xchg
arpl
xchg
fldcw
jne
pop
mov
cltd
cmp
lret
call
fldt
mov
fdivs
cmp
les
mov
insb
or
int3
lret
into
xorl
scas
int
int3
xor
cmp
cmp
addr16
mov
int3
jl
shl
enter
pop
in
out
cmp
imul
cmpsb
insb
mov
imul
pop
mov
outsb
mov
fs
jb
pop
jle
cmp
push
mov
pop
in
cmpsb
mov
jb
nop
and
fs
mov
stc
inc
data16
sbb
aas
aas
xchg
cltd
mov
add
cmpsb
lds
fimull
into
mov
hlt
cmp
cmpsb
frstor
in
out
sub
int3
int
push
dec
push
loopne
mov
mov
jae
aad
enter
xor
jae
xchg
jl
lret
int3
ss
repnz
and
and
push
inc
and
pop
jnp
cltd
fldcw
pop
sahf
sub
xchg
out
enter
ss
cmpsb
adc
adc
adc
leave
into
je
in
jae
xor
cmpsl
or
push
sub
psubsb
in
inc
jae
ret
lcall
push
xchg
cmp
cmpsb
frstor
cmpb
sbb
aas
push
mov
push
shlb
stos
arpl
mov
jbe
jne
shll
inc
mov
pop
jae
pop
rcrb
sbb
sbb
mov
pusha
fisubrs
std
mov
fcmovnu
in
mov
mov
ljmp
mov
out
pop
in
mov
cld
clc
loope
push
mov
cmp
lcall
mov
dec
mov
pushf
lds
popf
pop
pop
int
add
bound
outsl
fwait
jne
push
nop
negb
push
xchg
fisttps
inc
mov
popf
in
das
xchg
in
out
cld
dec
out
negl
movsb
lahf
mov
jg
repz
xchg
pop
mov
mov
jno
mov
sbb
cmp
jno
cmc
leave
push
pop
lcall
in
add
incb
dec
add
jo
cmpl
out
imul
cmp
repz
and
scas
outsl
inc
jae
sbb
jo
push
cmc
das
aas
mov
mov
dec
sub
filds
xchg
repnz
jns
das
into
lret
sub
mov
jle
cmp
div
incl
xchg
lahf
fbld
mov
xchg
xor
cmp
insl
mov
lock
lock
sahf
pop
push
pop
pop
iret
test
scas
setg
sbb
popf
cmp
pushl
clc
ficoml
cmc
xchg
mov
inc
in
adc
and
stc
cmp
mov
push
test
sub
sbb
test
fistps
and
or
std
insl
mov
dec
ret
push
das
sub
sti
aam
imul
cmc
bnd
in
imul
pop
fildl
jmp
mov
jl
imul
push
aas
pop
lea
out
add
out
mov
mov
lods
loop
pop
pop
jne
mov
std
repz
fidivrl
xlat
lods
repnz
nop
scas
in
mull
lock
cmp
scas
ret
dec
das
test
fisttps
icebp
loope
lock
aas
hlt
cltd
sbb
mull
cmp
std
pop
jno
incl
mov
lods
out
loop
jle,pt
scas
mov
jp
imull
push
jge
daa
xor
sti
pusha
stos
mov
fistps
cwtl
pop
mov
and
les
pop
sbb
aad
mov
add
pop
loop
stc
roll
inc
std
add
int
sbb
subb
add
push
std
pusha
iret
loop
adc
cmpl
das
sti
mov
ljmp
aam
sbb
andl
stos
and
lret
stc
dec
fsubrl
stos
sbb
loop
in
mov
mov
cmpsb
cmpsl
xchg
das
pop
lods
popf
movsb
addr16
jg,pt
andb
nop
mov
push
insl
mov
sbb
addr16
das
push
movsl
movsb
imul
adc
inc
arpl
sbb
lods
orl
adc
and
inc
sbb
cmp
jnp
popf
jbe
jecxz
in
dec
sub
adc
dec
lret
push
xor
xor
arpl
xorl
popa
push
cmp
push
addr16
and
xchg
dec
or
fiaddl
je
cli
test
and
repnz
fidivs
fidivs
into
push
lahf
scas
aaa
les
in
mov
dec
xlat
add
fimull
xchg
and
xchg
es
nop
cmp
jnp
cld
push
cmp
daa
cld
cli
lcall
adc
xlat
lret
or
pop
add
sub
and
cmp
and
mov
push
movsb
ficoms
enter
divl
icebp
icebp
pop
xchg
cmp
xor
ds
jmp
xchg
cs
mov
adcl
and
ret
aam
adc
call
lods
pop
jle
sub
dec
roll
jae
inc
rolb
test
subl
sti
jle
and
ss
inc
fwait
push
stos
xor
jns
cmp
out
addl
mov
mov
fldenv
cmp
add
test
nop
dec
lahf
mov
push
outsl
dec
mov
pop
xchg
pushfw
pop
mov
popa
in
add
adc
out
icebp
outsl
mov
adc
pop
dec
cmp
shl
inc
push
jnp
push
cwtl
add
mov
sub
cli
loopne
adcl
xlat
repnz
dec
mov
pop
mov
in
jmp
add
test
mov
jb
imul
ficoml
adc
insl
dec
jbe
test
xor
cmpl
test
movsl
mov
imul
or
inc
aad
jmp
fidivl
push
mov
std
push
outsl
out
mov
gs
adc
dec
nop
jp
xor
arpl
jl
jp
jbe
xchg
inc
scas
rcll
pushaw
inc
pushf
push
into
push
or
sbb
xor
add
dec
inc
adc
mov
es
pop
adc
and
sbb
xchg
in
std
or
xor
or
jne
leave
push
shlb
addb
mov
mov
sbb
or
loopne
les
pushf
mov
lds
add
lea
fcmovb
pusha
imul
rorb
jecxz
ds
or
mov
aad
adcl
jmp
xor
pusha
sub
cmp
dec
mov
sahf
add
dec
mov
and
mov
bnd
add
jns
das
inc
jge
scas
int3
xor
mov
bound
add
sub
jne
dec
or
imul
icebp
jg
and
adc
jg
cli
mov
call
rcrl
outsb
inc
popa
dec
lds
lds
pop
xchg
pop
xchg
scas
mov
mov
lock
sub
jp
and
notb
xchg
lcall
jg
mov
adc
bound
mov
pop
mov
in
movsb
mov
push
mov
fs
das
or
in
inc
inc
pop
xor
cmp
push
sub
add
sbb
or
push
imul
test
enter
ret
das
fwait
add
cmc
nop
pop
push
repz
shll
pusha
sbb
cmp
lds
sbb
dec
cmp
xor
movsb
mov
mov
icebp
dec
cmpsb
fisubs
push
in
xor
jno
mov
out
mov
dec
frstor
cs
or
xchg
adc
out
mov
push
icebp
repz
bound
cmp
add
movsl
mov
in
fldenv
sarb
jb
scas
pop
push
inc
cmp
imul
xor
push
push
movsb
mov
dec
loop
xor
push
cmpb
cmp
pop
mov
daa
in
mov
loopne
or
or
je
lods
mov
icebp
xchg
fldenv
push
mov
inc
loop
push
into
fsubrs
jecxz,pt
mov
mov
popf
xor
cmp
dec
out
cwtl
ljmp
xchg
mov
fs
ds
push
push
sbb
pop
adc
fmull
hlt
rorl
test
mov
adc
dec
mov
adc
int
aaa
clc
iret
fcomps
push
addl
insl
jb
jp
push
jg
outsb
adc
or
test
mov
out
push
int3
adc
add
dec
inc
push
aad
sub
outsl
iret
rolb
inc
decl
jg
mov
cmc
xchg
and
mov
sbb
xor
cmp
les
cld
sbb
test
inc
and
and
sub
arpl
lret
fiadds
dec
mov
aam
and
and
mov
jg
xchg
pusha
push
imul
scas
and
data16
xchg
outsl
and
and
pop
ja
out
jge
sub
popaw
jmp
lcall
jbe
lock
out
xchg
mov
dec
fcmovb
out
stc
mov
jo
rorl
mov
loopne
push
mov
jg
and
test
cmp
fsubrl
filds
inc
push
pop
or
jecxz
iret
mov
add
pop
pop
loop
in
pop
sar
bound
sub
sbb
clc
xchg
fs
ds
sub
push
adc
shll
shrl
or
nop
pop
or
add
sbb
push
pushf
mov
das
mov
in
out
fsub
int3
cltd
je
cmp
outsb
lock
jmp
into
cltd
fdivrl
pop
out
jp
jae
sub
into
push
loope
cmp
mov
adc
adc
fcmovbe
lock
pop
or
jecxz
subl
je
js
cmp
in
repz
jmp
or
push
cwtl
cltd
pop
sbb
pop
or
rorl
inc
clc
mov
cltd
xor
outsb
outsb
or
xor
ret
inc
int3
loope
add
clc
clc
or
sbb
and
repnz
in
lret
out
xchg
fildll
mov
jle
std
repnz
in
lret
out
decl
pop
stos
pushf
in
jge
sbb
jmp
cmpsl
or
incl
pop
incb
xor
std
sbb
or
ljmp
clc
push
fstpt
push
cld
insl
mov
mov
pop
sub
scas
pop
sub
lock
add
loopne
subb
xor
addl
daa
std
push
xchg
fsub
pusha
adc
cmp
pop
mov
mov
push
cmp
cltd
or
fwait
imul
adc
lret
adc
mov
loopne
add
loope
jg
lods
mov
cmp
push
xchg
jno
xor
fbld
push
xor
mov
mov
pop
sub
cmp
rclb
nop
dec
pop
js
les
lret
xor
les
pop
aas
sbb
cmp
sbb
inc
mov
adc
jmp
jo
and
xchg
adc
pop
mov
cmp
add
leave
adc
xchg
mov
test
shlb
gs
push
bound
cs
sbb
mov
sub
scas
sbb
cmp
in
lret
jg
fwait
int
sbbb
cmpb
mov
sbb
in
adcb
adc
xchg
cs
push
out
push
jecxz
shlb
mov
and
clc
push
dec
lods
jnp
rorb
imul
imul
jle
cld
jnp
lock
inc
gs
adc
adc
xor
mov
cmp
jge
and
int3
pop
cli
cmp
mov
sbb
insl
xchg
xor
sbb
enter
das
jae
test
mov
sub
jo
cs
cwtl
cmp
lcall
jno
cmpl
int3
lods
icebp
or
push
into
scas
mov
jb
enter
sbb
lea
idivb
xchg
pop
repnz
mov
dec
push
mov
jae
cmp
call
in
icebp
shl
push
pop
lock
gs
push
sub
mov
inc
enter
ret
and
ret
xchg
test
push
xchg
xchg
scas
nop
test
hlt
jae
call
fimull
mov
jns
dec
cltd
dec
divl
xchg
adc
es
cmp
and
cmp
sti
mov
xor
sbb
xchg
movsb
int
ret
push
stc
test
pop
les
mov
shrl
pop
idivl
in
leave
jae
sbb
sub
push
mov
loopne
out
dec
mov
loope
jg
jno
add
mov
cmp
pop
inc
mov
testb
push
nop
incb
js
add
jmp
out
jns
pop
pop
inc
mov
lahf
xor
xor
sub
jo
jp
jo
adc
cmp
adc
lea
adc
jp
lahf
test
gs
jge
sub
lahf
arpl
hlt
xchg
arpl
cmp
or
cmp
data16
mov
inc
shrl
or
idivl
jl
xchg
fs
xchg
dec
cmp
or
iret
sub
pop
scas
ds
les
gs
mov
or
xchg
stos
push
dec
sbb
mov
push
scas
js
and
pop
cmp
inc
add
addr16
sbb
call
or
xor
aas
jmp
jns
int
fimull
sbb
inc
adc
push
adc
push
push
leave
int
es
dec
inc
adc
out
das
sahf
fisubrl
stos
sub
sbbl
insb
sbb
push
test
aam
popf
out
shl
into
int3
fstpt
js
out
cmp
jns
sub
out
mov
inc
out
inc
in
sub
mov
inc
addl
insb
jne
mov
sub
mov
sub
idivl
xchg
cltd
test
inc
or
incl
xlat
call
adc
test
and
test
mov
cltd
fadd
cli
das
jb
pop
cmc
mov
xor
sub
push
sub
cmc
test
sti
out
sahf
ret
jne
push
ds
xchg
cmp
ljmp
lret
jae
in
iret
icebp
jg
cmc
jnp
pop
ret
clc
push
cmc
sti
jbe
jge
mov
jg
into
daa
cmc
jne
out
inc
das
mov
pop
sahf
jno
xor
stos
ror
ljmp
repnz
lock
mov
clc
mov
cmp
nop
jp
repz
jmp
cli
fstpt
leave
mov
and
adc
callw
jne,pn
or
fdiv
mov
adc
pop
mov
add
fildl
sarb
xchg
fnstsw
testl
aas
stc
cli
rcll
movsl
rcr
repz
cs
push
xor
sub
je
xchg
lods
pushl
cwtl
addr16
jg
jl
div
cmp
int3
mov
push
mov
imul
mov
xor
jb
popa
loope
cmp
flds
pop
int
push
je
leave
test
adc
pop
roll
cmpsl
adc
fldl
ss
dec
daa
cmp
mov
addb
and
cmc
cmp
push
dec
aam
jne
sar
std
pop
dec
mov
sub
std
xchg
add
xlat
insl
mov
jno
cmpsb
push
out
mov
fisubrl
test
cltd
sbb
ljmp
lret
xchg
int3
leave
jge
stos
repnz
pop
es
movsl
adc
cmp
push
or
popf
shlb
pop
xor
icebp
loop
shll
cmpsb
mov
icebp
mov
jp
and
jno
pop
and
adc
addb
in
and
add
ret
xchg
icebp
jmp
mov
jbe
xlat
mov
sbb
ret
mulb
mov
in
or
jge
add
fs
xchg
xor
in
mov
daa
aad
sbb
mov
dec
aam
push
mov
cli
test
inc
dec
and
int
add
jno
add
mov
fcmovne
int
sub
mov
cltd
cmp
lahf
ret
sub
movsl
push
mov
ficompl
fisubl
insl
cwtl
ljmp
inc
push
mov
sub
mov
notb
xchg
je
and
cmc
bound
and
adc
xlat
test
ret
xor
lahf
ret
add
and
out
ja
sub
xchg
mov
mov
in
ja
imul
jmp
insl
push
mov
inc
out
mov
and
mov
xor
mov
sbb
movsl
xchg
aam
stos
sub
mov
rcl
xchg
mov
jecxz
clc
push
jl
and
insb
push
test
outsb
push
push
stos
mov
xchg
pop
dec
and
pop
sub
adc
js
jnp
daa
stc
add
xchg
sti
and
xchg
push
imul
sbb
push
out
data16
jns
mov
or
test
adc
dec
push
xchg
jmp
js
push
sub
or
or
pop
cmp
les
jp
sbb
mov
mov
in
fists
pop
mov
fimull
jp
jge
lods
mov
cwtl
sub
loope
ret
mov
fdivrl
stos
call
xor
cwtl
int3
pop
cmpsb
cwtl
cltd
int3
jl
and
or
shr
call
or
and
xchg
inc
push
push
xor
jne
push
push
pop
pusha
movsl
icebp
in
xor
inc
push
xchg
aaa
enter
nop
fcmovnb
and
sub
sbb
xor
mov
mov
add
imul
or
mov
dec
lret
rcll
xor
lock
iret
ficompl
mov
pop
test
jno
mov
mov
dec
sub
mov
push
add
xor
mov
jno
inc
in
mov
stc
arpl
in
jle
pop
sub
xchg
cli
dec
aas
dec
out
dec
push
nop
rcr
inc
mov
dec
pop
xchg
inc
ret
adc
inc
or
jne
movsl
adc
scas
in
mov
nop
mov
cmp
mov
add
data16
mov
sbb
jbe
sub
xor
adc
xor
mov
inc
repz
es
je
and
fisubs
adcb
xor
hlt
xor
ficompl
cmpsb
pop
stos
adc
mov
push
push
test
test
sbb
popf
sbb
push
xchg
jmp
mov
inc
sbb
loop
js
push
sarb
imul
cltd
xchg
lods
push
add
bound
sbb
dec
movsl
xchg
mov
xchg
lret
dec
mov
xchg
arpl
mov
jnp
mov
fldenv
in
dec
repnz
inc
mov
xor
adc
mov
les
js
xchg
jo
movsb
icebp
inc
clc
pop
pop
jl,pn
or
movl
incl
out
mov
sbb
adc
sbb
cs
fdivrl
into
xchg
jmp
sbb
rclb
ss
or
out
addr16
mov
mov
in
jns
sbb
inc
inc
push
sbb
push
and
inc
cmp
push
call
je
jge
push
sub
sub
into
hlt
pop
cltd
out
popa
pop
mov
dec
fbld
xlat
test
xchg
cmp
mov
jns
adc
inc
scas
and
popa
dec
sbb
cmp
adc
das
loopne
test
cmpsl
movsl
imul
aad
push
push
pop
movsb
jle
mov
add
push
sub
gs
pop
mov
shl
popa
stc
cwtl
cld
push
sahf
das
iret
xchg
cmovp
dec
pop
movsl
int
push
pusha
sub
adc
or
add
fwait
inc
cltd
lock
daa
repnz
jl
clc
push
jl
pop
or
out
cmp
aaa
add
xchg
jecxz
jo
faddl
add
cwtl
mov
jo
fsubl
mov
xchg
jae
jo
in
or
xchg
int
inc
mov
fildl
adc
fstpl
sub
pop
sub
adc
mov
pusha
xchg
push
adc
mov
xor
roll
add
mov
dec
movsb
repz
call
and
hlt
jns
cwtl
sahf
dec
das
movsl
pop
rcrl
call
jae
or
dec
xchg
xchg
sbb
push
test
mov
adc
cmp
cmpsb
sahf
sbbb
test
inc
bound
xchg
insl
add
fwait
xchg
sbb
jl
or
mov
cld
xchg
cld
sahf
lods
and
push
enter
cmp
out
adc
push
cmp
dec
add
js
dec
js
out
push
mov
out
inc
lock
adc
loopne
fadds
or
adcl
stos
fildll
adc
cli
mov
push
mov
xchg
push
xchg
ds
imul
lret
pop
test
fldenv
test
lret
add
das
lret
adc
jl
ds
fists
xor
adc
dec
mov
push
lcall
dec
sbb
push
add
insb
sub
adc
pop
lds
icebp
mov
dec
cmp
push
mov
shll
cltd
addb
ret
cmpsb
mov
sub
inc
repnz
out
movb
sbbb
mov
faddl
and
fistl
lahf
rcr
movsl
in
cmpsl
in
sbb
stc
mov
jno
sub
mov
sbb
jmp
xchg
sarb
push
test
xchg
lea
cmp
and
pop
mov
jns
add
lock
xlat
jnp
inc
mov
and
lods
test
imul
test
or
scas
in
adc
inc
and
push
xchg
sub
xchg
xor
movsl
je
adc
xchg
cltd
andb
mov
pop
loop
jno
cwtl
and
test
test
push
jl
sbb
cmp
add
cmp
daa
mov
jo
mov
ss
sbb
fcomps
in
adc
mov
je
sbb
je
cmp
mov
out
mov
ror
xor
pushf
orb
mov
lret
cwtl
mov
sbb
add
fs
mov
and
sbb
inc
cmpsl
shrb
sbb
jp
pop
mov
dec
add
inc
push
pop
inc
fiaddl
xor
aaa
fs
and
cmp
cwtl
pop
inc
xchg
add
outsb
movsl
lods
movsb
mov
add
push
xchg
mov
mov
sbb
pop
stc
sbb
cmp
ds
cmpl
scas
scas
cmp
sbb
pop
les
add
sti
loop
sbb
lock
jo
push
jle
fwait
inc
cli
mov
jle
lahf
and
aad
push
fidivrl
mov
pop
push
sbb
insb
push
lcall
mov
icebp
push
cli
sub
xchg
xor
insl
mov
add
cmp
leave
sub
jmp
cmp
pop
test
and
bound
in
mov
inc
loop
xor
and
inc
test
pop
das
and
and
push
jle
lahf
or
add
pushf
pop
enter
out
repz
and
cmp
pop
shrl
mov
les
fcmovnb
insl
out
jo
les
lods
mov
lds
jg
addr16
fnstenv
fadd
lcall
and
cmp
pop
test
shlb
inc
enter
int3
pop
shl
xor
aam
jle
xchg
test
cs
jb
or
jbe
xchg
test
sbbl
mov
gs
mov
in
fisubs
cmp
push
jns
out
cli
inc
pushf
nop
bound
fisubrl
popf
xchg
into
dec
daa
movsl
jecxz
adc
js
cltd
mov
pop
sub
xchg
jbe
in
push
leave
sub
mov
cmp
outsb
pop
cmp
push
pop
stos
lds
out
dec
shlb
jno
mov
mov
nop
sub
loopne
roll
ret
mov
or
sbb
mov
pop
pop
iret
mov
xlat
jl
inc
daa
arpl
in
insb
or
mov
stos
jbe
pop
imul
xor
push
or
test
ret
ds
mov
and
mov
xor
stc
jle
popa
jle
jg
xor
lahf
pop
ret
mov
outsl
xor
jo
mov
faddl
scas
lcall
dec
push
enter
push
mov
mov
sub
fimuls
sub
mov
test
xor
adc
pop
mov
mov
inc
cmp
xor
jb
mov
sub
adc
jecxz
fmuls
jae
mov
lods
mov
inc
aam
clc
or
cmc
xor
mov
sbb
mov
push
adc
jle
push
jnp
insb
and
in
leave
cmpsb
pushf
inc
push
xchg
aad
xchg
add
cmp
mov
insb
dec
ss
mov
xchg
js
mov
bound
mov
test
and
inc
mov
inc
push
sbb
aam
mov
sbb
or
cmc
add
shrl
inc
pop
cmpsb
jle
repnz
cwtl
cmp
cmp
movsl
pusha
ror
cld
adc
adc
push
push
fmuls
aad
dec
sub
jg
shll
je
mov
pop
mov
add
pop
push
push
xchg
insb
or
cmp
dec
cmpsl
jmp
cmpsb
add
jnp
mov
cmp
lods
lret
sub
pop
ret
pop
inc
loop
adc
push
inc
roll
in
pop
inc
mov
icebp
jg
in
stos
mov
or
push
add
mov
push
adc
mov
repz
lcall
pop
lret
cmp
jno
testl
jne
or
sbb
cmp
es
add
xor
repz
test
sbb
std
loopne
imul
mov
icebp
popf
jmp
fsubp
cmp
aam
jae
sti
mov
lock
cmpsl
ss
jg
mov
in
mov
clc
repz
mov
dec
pop
popa
add
fsubrs
cmp
imul
dec
add
cltd
int
push
sub
jmp
shrl
sbb
jl
jmp
mov
mov
test
out
adc
add
jg
fsts
pop
hlt
fistpl
mov
in
call
arpl
push
in
lcall
iret
jnp
int3
hlt
dec
fwait
pop
xchg
push
sbb
push
xchg
or
sbb
repz
fldt
mov
loopne
movsb
iret
xorb
icebp
push
mov
lret
sub
lahf
aam
cli
in
mov
jle
cmc
lahf
xchg
push
mov
xlat
test
mov
rclb
leave
mov
ret
mov
sti
adc
mov
pusha
call
cmp
int
stos
sub
lock
cmp
pop
mov
into
adc
xchg
adc
cs
lods
mov
jge
push
add
pop
scas
sub
andl
outsb
jg
cmp
lea
imul
add
loope
sti
mov
and
lods
mov
sahf
inc
out
dec
inc
aad
mov
add
int3
int3
call
fnstsw
in
addr16
or
addr16
outsl
fildl
mov
call
aas
pushf
jnp
jle
cmc
mov
mov
dec
fsubr
push
jno
loopne
or
jp
mov
lret
mov
mov
pop
mov
out
adc
sti
stos
fisttpll
rorl
fwait
jge
dec
outsl
sbb
insl
mov
movsl
int
inc
pop
jp
aad
fst
in
ja
jle
out
test
jle
in
sub
cli
lods
sub
lods
xchg
mov
sub
and
and
xchg
pusha
dec
and
dec
inc
repz
cltd
jno
mov
pusha
or
fwait
fs
lods
mov
insb
pop
mov
inc
jle
xorl
and
adcb
js
das
jne
pusha
sub
hlt
jo
jo
jbe
shll
test
cmp
cmp
xchg
xor
lds
addr16
lret
outsl
or
movsl
movsb
sbb
mov
sbb
sub
push
into
mov
rorl
xchg
ret
inc
cltd
xchg
movsl
cmp
jge
xchg
adc
stos
fldcw
xor
out
xor
jecxz
mov
push
add
cltd
xor
inc
sbb
inc
dec
stos
orl
lods
mov
push
stos
fsts
push
xchg
cltd
pop
cmpl
mov
pop
xlat
xorb
mov
sbb
sbb
aad
aas
test
dec
cltd
test
test
cmp
lds
repz
test
xor
cmpl
ja
leave
push
mov
addr16
pop
push
dec
sbb
fwait
mov
ret
xor
dec
ret
int3
inc
sbb
push
push
cmp
push
imul
xor
mov
cli
jp
dec
mov
inc
mov
insb
xor
in
popa
inc
mov
imul
stos
xor
xchg
or
or
jmp
ds
andl
sub
scas
roll
mov
mov
sbb
mov
ljmp
js
sbb
adc
data16
jne
hlt
imul
lods
loope
cltd
push
xchg
xor
ja
shll
push
xchg
push
insl
test
int3
jbe
and
or
mov
pop
daa
into
daa
int
mov
data16
dec
jge
cli
jl
rol
cmp
cmp
jnp
notl
push
out
mov
stos
ja
jbe
std
mov
cmc
div
psadbw
lock
repz
in
xchg
decl
lcall
repnz
incl
pop
mov
insb
cmp
outsb
xchg
dec
pop
mov
xchg
outsb
test
fstpl
jle
std
ss
jge
aaa
fucomp
stos
pop
push
sti
mov
xlat
mov
mov
xorl
fdivrl
push
in
pop
cmpb
push
daa
lock
loopne
shl
in
add
add
subb
inc
movsl
push
xor
xor
je
push
repz
fisttps
mov
pop
enter
inc
xchg
test
or
sbb
in
enter
cli
jp
jge
std
or
jge
jge
pop
daa
call
aas
aam
lods
fbld
rcr
push
ljmp
sbb
pop
stc
sbb
jle
ja
dec
movsb
dec
xchg
dec
aas
pop
fiadds
xor
xchg
repnz
repz
testb
push
adc
aas
movsl
mov
scas
cmp
jb
adc
jbe
jno
sbb
fistpl
fstpl
jmp
xor
in
lock
pop
push
mov
popf
xchg
mov
cld
and
mov
movsb
lea
outsl
je
cmp
lahf
xor
cmovge
shrl
pop
mov
fisttpll
xor
insb
movsb
pop
daa
xor
push
cmp
gs
mov
push
es
es
es
es
es
xchg
push
lahf
lcall
in
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
add
pop
or
or
or
mov
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
push
pushl
mov
pushfw
pusha
push
mov
add
push
push
call
mov
lea
mov
push
push
mov
mov
add
lea
mov
push
mov
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
push
addb
push
addb
push
addb
push
addb
push
addb
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
push
push
add
push
call
test
je
pop
pop
pop
pop
jmp
push
push
mov
mov
mov
sar
rep
mov
and
rep
pop
pop
ret
push
mov
mov
sub
lea
orl
mov
lea
mov
mov
lea
push
mov
mov
push
xor
xor
lea
push
mov
mov
mov
mov
mov
xor
mov
movl
test
jne
push
pop
cmp
jae
push
pop
sub
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
mov
and
mov
shr
and
sub
mov
je
dec
jne
shr
mov
sub
mov
jmp
sub
push
mov
pop
and
shr
shr
sub
mov
mov
jmp
mov
cmp
jne
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
not
and
shr
xor
jne
xor
xor
test
mov
mov
je
push
pop
jmp
mov
neg
sbb
and
mov
cmp
jne
cmpl
jne
mov
mov
cmp
jne
mov
lea
cmp
je
lea
lea
cmp
mov
jae
lea
sub
dec
mov
jmp
lea
sub
mov
cmpl
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
mov
jae
mov
sub
dec
jmp
mov
sub
cmp
mov
jne
lea
cmp
je
lea
mov
lea
cmp
lea
jae
sub
dec
mov
jmp
sub
mov
mov
test
je
mov
andl
cmp
jbe
mov
push
pushl
pushl
call
add
add
add
sub
add
sub
jne
mov
neg
sbb
and
mov
jmp
mov
push
pop
cmp
jne
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
push
and
sub
shr
xor
pop
mov
mov
mov
mov
jmp
mov
xor
cmp
jne
shr
add
cmp
jae
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
mov
and
sub
add
movzbl
shr
mov
mov
incl
shr
add
cmp
jb
mov
push
pop
cmp
jae
mov
add
movzbl
mov
incl
jmp
lea
movl
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
mov
call
add
test
jne
cmp
je
push
mov
pop
mov
cmp
jne
mov
mov
shr
and
and
lea
cmp
mov
jae
mov
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
shl
mov
dec
and
lea
mov
lea
cmp
movzbl
jae
mov
sub
mov
shrl
mov
incl
jmp
cmp
jne
push
pop
jmp
lea
xor
cmp
setne
dec
and
add
mov
lea
cmp
jae
sub
add
shr
add
mov
movzbl
mov
add
shl
lea
or
incl
cmp
jb
mov
push
shrl
pop
mov
shl
add
mov
sub
dec
and
shrl
add
mov
mov
lea
cmp
ja
cmp
jne
cmp
jb
cmp
jne
mov
jmp
xor
lea
mov
inc
add
dec
jne
mov
jmp
lea
mov
push
lea
push
lea
push
lea
push
mov
lea
and
andl
andl
push
pushl
pushl
lea
push
push
lea
movl
push
movl
call
add
test
jne
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
shr
push
and
pushl
pushl
inc
push
lea
push
push
call
add
test
jne
mov
test
jne
test
jne
mov
andl
mov
push
mov
pop
mov
mov
cmp
jne
mov
mov
mov
andl
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmpl
jne
cmp
jb
mov
mov
mov
mov
andl
cmp
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
push
mov
mov
pop
shl
mov
push
dec
mov
pop
shl
dec
mov
cmp
jae
push
pop
sub
shr
add
movzbl
mov
add
shl
or
inc
cmp
jb
mov
mov
mov
and
lea
lea
movzbl
mov
test
movzbl
jne
shr
movzbl
sub
mov
mov
inc
decl
jmp
shr
movzbl
sub
testb
jne
jmp
mov
testb
jne
mov
push
pop
shl
dec
and
add
lea
lea
movzbl
mov
test
movzbl
je
shr
sub
testb
je
andl
push
mov
pop
shl
sub
dec
and
add
shr
cmp
mov
jae
push
pop
sub
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
mov
and
lea
lea
movzbl
mov
movzbl
shr
sub
testb
jne
testb
jne
mov
push
pop
shl
dec
and
add
lea
jmp
andl
cmp
jae
mov
sub
add
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
push
pop
sub
shl
dec
and
add
lea
shr
mov
sub
mov
sub
cmp
jb
mov
sub
mov
mov
mov
inc
inc
mov
inc
inc
subl
jmp
mov
lea
sub
sub
cmp
jbe
sub
mov
mov
inc
inc
dec
jne
lea
mov
mov
inc
inc
decl
jne
jmp
shr
sub
mov
mov
inc
decl
mov
cmpl
jae
mov
shr
cmp
jb
mov
mov
sub
shl
sub
andl
mov
mov
mov
jmp
testb
je
mov
shr
cmp
jb
mov
mov
mov
shl
sub
sub
mov
mov
movl
mov
andl
cmp
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmpl
je
cmpl
jne
mov
movl
jmp
movzbl
mov
mov
mov
movl
mov
cmpl
jne
mov
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
shl
mov
dec
and
lea
lea
movzbl
shrl
sub
movzbl
test
mov
jne
mov
movl
mov
jmp
test
je
and
mov
mov
mov
movl
jmp
test
je
test
je
movl
jmp
cmpl
jne
mov
cmp
jae
mov
sub
add
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
push
mov
pop
movl
shl
dec
and
shrl
add
mov
sub
mov
movzbl
mov
mov
jmp
mov
cmpl
jne
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
push
pop
shl
dec
and
lea
movzbl
shrl
lea
sub
mov
movzbl
test
je
and
mov
mov
mov
movl
jmp
test
jne
mov
mov
lea
lea
mov
jmp
cmpl
jne
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
movl
shl
dec
and
shrl
add
sub
mov
cmpl
jne
mov
lea
sub
cmp
jae
mov
lea
lea
sub
sub
jmp
mov
sub
cmpl
je
mov
mov
jmp
mov
test
jne
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
je
andl
mov
mov
mov
inc
inc
dec
cmp
jne
lea
decl
jne
andl
mov
cmpl
jne
test
jne
mov
cmp
jne
mov
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
je
mov
andl
mov
inc
dec
andl
cmpl
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
movl
cmpl
je
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
lea
mov
push
lea
push
lea
push
lea
push
call
add
cmpl
jne
jmp
mov
push
mov
pop
lea
mov
push
lea
push
lea
push
lea
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmp
mov
jne
mov
xor
mov
jmp
push
pop
cmp
jbe
orl
add
dec
mov
mov
mov
cmp
jne
mov
mov
lea
push
lea
push
lea
push
lea
push
call
mov
add
cmp
mov
jae
mov
sub
dec
jmp
mov
sub
cmp
mov
jne
push
pop
mov
cmp
je
jmp
mov
mov
jmp
movl
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
call
add
cmpl
jge
xor
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
incl
lea
dec
jne
cmp
jne
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
push
pop
lea
mov
mov
cmp
jne
inc
add
cmp
jbe
cmp
mov
jae
mov
mov
push
lea
pop
cmp
jne
dec
sub
cmp
jne
cmp
mov
jbe
mov
mov
push
mov
pop
shl
cmp
jae
lea
sub
js
inc
add
shl
cmp
jb
mov
shl
mov
lea
sub
mov
js
add
mov
xor
dec
mov
je
xor
add
add
dec
mov
jne
mov
xor
mov
add
test
mov
je
mov
mov
lea
mov
mov
inc
mov
mov
inc
cmp
jb
mov
andl
andl
orl
mov
mov
mov
mov
mov
neg
cmp
jg
lea
mov
mov
mov
mov
dec
test
mov
je
jmp
mov
lea
cmp
jle
inc
mov
incl
add
mov
mov
add
sub
cmp
jbe
mov
mov
push
sub
pop
shl
cmp
jbe
or
sub
add
mov
cmp
jae
inc
cmp
jae
jmp
mov
add
mov
mov
shl
cmp
jbe
sub
inc
cmp
jb
mov
push
pop
mov
shl
mov
add
cmp
ja
mov
lea
lea
mov
shl
cmpl
mov
lea
mov
mov
mov
mov
je
mov
mov
mov
mov
sub
mov
shr
mov
mov
sub
mov
push
cltd
pop
idiv
mov
sub
mov
lea
lea
lea
movsl
movsw
jmp
mov
mov
mov
mov
mov
cmp
jg
mov
mov
sub
mov
mov
lea
cmp
jb
movb
jmp
mov
mov
cmp
jae
cmp
sbb
and
add
mov
jmp
sub
mov
mov
add
mov
mov
movzwl
addl
mov
mov
mov
push
sub
pop
mov
shl
mov
shr
cmp
jae
mov
lea
lea
lea
shl
mov
mov
add
lea
add
cmp
movsl
movsw
jb
mov
mov
mov
push
lea
pop
shl
test
je
xor
shr
jmp
xor
mov
mov
lea
push
mov
pop
shl
dec
and
cmp
je
decl
sub
sub
jmp
mov
decl
mov
test
jne
incl
addl
mov
cmp
jle
test
je
cmpl
je
or
jmp
or
jmp
push
mov
push
mov
push
push
mov
mov
push
mov
mov
cmp
mov
mov
jbe
mov
mov
sub
mov
cmp
jbe
mov
test
je
mov
cmpl
jne
andl
sub
push
push
push
call
add
mov
add
add
cmp
jne
cmp
lea
mov
jne
mov
mov
mov
sub
cmp
jbe
mov
test
je
mov
cmpl
jne
andl
sub
push
push
pushl
call
add
add
add
mov
mov
pop
mov
mov
mov
pop
pop
leave
ret
nop
pop
xor
andb
add
pop
add
pushf
dec
add
adc
add
add
add
fists
add
test
adc
add
xor
add
pop
add
mulb
add
mov
add
mov
add
add
add
xchg
add
mov
inc
add
lods
inc
add
in
add
mov
inc
add
lds
add
inc
add
push
inc
add
add
add
sbb
add
inc
add
ss
add
dec
inc
add
pop
inc
add
add
add
addb
add
add
nop
inc
add
add
add
add
inc
js
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
addr16
jo
outsb
dec
gs
add
add
gs
insb
inc
js
arpl
gs
add
push
dec
inc
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
inc
dec
dec
xor
cs
insb
