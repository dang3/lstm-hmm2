call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
dec
nop
sub
sbb
lret
push
fistpl
outsb
mov
pop
clflush
daa
mov
sub
cmp
or
sbb
jmp
sti
ds
fistpl
jmp
mov
pop
shll
addl
sbb
int
add
jnp
push
shrb
adc
sbb
pop
add
cli
xor
rcll
pop
lods
movsl
enter
push
dec
out
test
add
lret
push
fisubs
gs
push
sbb
push
daa
push
push
jmp
sub
push
cmp
rorl
loop
jp
add
sti
fidivs
jle
mov
pop
mov
adc
aam
cmp
hlt
xchg
sbb
ljmp
loope
cmp
fwait
xor
xchg
jbe
imul
xlat
into
mov
sbbb
ds
dec
sahf
push
out
push
mov
mov
dec
mov
pop
hlt
hlt
cs
fsubrs
ljmp
inc
sbb
push
es
cwtl
dec
xor
pop
test
out
inc
decb
xlat
mov
es
jbe
imul
and
jg
sbb
scas
pop
mov
sub
es
push
mov
inc
popf
pop
int3
stos
dec
mov
push
test
pop
rcrb
adc
and
cmp
out
pop
fldt
out
or
js
cmp
or
sbb
jmp
sti
ds
push
fistpl
stos
outsb
mov
pop
imul
sahf
sub
cmp
or
sbb
jmp
sti
ds
push
fistpl
stos
outsb
mov
pop
imul
in
rcrl
cmpb
adc
adc
push
push
arpl
mov
pop
sti
stos
add
jmp
subl
jns
or
and
outsb
push
push
fwait
pop
rcrl
shrb
jmp
or
and
pushf
jmp
loopne
in
and
cwtl
pop
adc
dec
push
stos
lods
and
pop
lea
je
sbb
dec
enter
mov
lcall
and
cmp
cmp
ds
jp
add
sbb
jo
or
push
int
mov
test
mov
ror
pop
adc
mov
mov
test
inc
mov
aas
sbb
mov
pop
fbld
or
inc
mov
jno
scas
stos
add
xchg
xor
or
dec
out
mov
and
pusha
add
jno
rcll
dec
push
loopne
jl
and
jmp
xor
cmp
mov
popa
fisttpl
imull
dec
mov
adc
sub
mov
test
sahf
and
or
cmp
xor
idiv
pushf
mov
mov
pop
or
push
hlt
sub
fidivl
ljmp
test
scas
cmp
xchg
jne
inc
dec
adc
pop
xchg
inc
mov
mov
cmovb
push
vcvtsi2ssl
jae
dec
pop
lret
ja
pop
in
add
aas
in
and
mov
mov
add
jmp
je
cmpsl
add
insl
fs
scas
inc
fidivs
add
ret
sub
test
out
push
jo
fisttpll
inc
mov
mov
rorl
push
arpl
and
mov
pop
enter
mov
nop
and
sbb
pop
push
in
jg
loopne
pop
and
mov
rorb
int3
daa
inc
into
outsb
cmpsb
dec
lret
daa
or
inc
dec
adc
es
lea
fisttpl
and
add
jmp
cmp
lahf
push
movsb
jo
nop
arpl
divl
jnp
xchg
fdivrs
jo
push
outsb
inc
or
insb
icebp
mov
movb
cmpsb
stos
imul
or
mov
jecxz
sti
push
mov
fcomps
mov
iret
dec
mov
enter
push
iret
scas
jbe
jbe
mov
sbb
daa
stc
mov
ret
sarb
xor
and
adc
cwtl
push
aam
sbb
xchg
jo
fists
lods
pop
cmp
outsl
mov
call
pop
mov
cmp
stos
mov
sbb
ja
push
mov
jmp
fimuls
pop
pop
sarl
sub
addr16
int
icebp
fwait
inc
ret
leave
jbe
inc
stc
sbb
repz
out
fs
cmp
sahf
sub
push
xor
or
call
jmp
hlt
loop
push
sti
sub
adc
inc
lds
aad
pop
daa
xor
and
xor
push
mov
jp
xchg
icebp
filds
mov
fdivrl
sahf
mov
rorb
fsub
xlat
cmp
cld
sub
popf
add
xchg
adc
aam
ret
push
pop
mov
mov
mov
outsl
sahf
lods
mov
fwait
mov
pop
in
lods
repnz
mov
inc
push
jl
pusha
sub
data16
xor
hlt
sbb
test
add
dec
enter
std
inc
pop
out
loope
xchg
mov
push
add
cmc
adcb
sarb
mov
call
dec
icebp
ja
jnp
mov
andb
push
imul
push
pop
das
fildl
jl
adcb
mov
adc
pop
scas
adc
mov
push
push
sbb
stos
and
mov
fisttpll
inc
push
dec
idiv
cld
adc
rorb
mov
and
scas
loopne
sbb
jbe
jns
cwtl
and
scas
mov
cld
adc
xor
andb
dec
xor
or
sar
rcrb
xchg
xchg
jbe
xor
mov
cmp
cs
inc
inc
popf
jmp
pop
out
aad
push
xor
dec
add
push
lahf
enter
ds
nop
jb
sub
jmp
adc
shll
adc
stos
jnp
jb
loope
dec
fdivr
add
mov
and
popa
movsl
add
adc
jge
xchg
aad
mov
xor
jge
and
int3
jo
sbb
imul
sbb
push
in
pop
loope
cmc
je
popf
negl
cmp
jmp
andl
ret
and
jecxz
push
xchg
lcall
add
cmp
call
push
daa
sub
or
xchg
fwait
push
jp
incb
popa
dec
xor
cmp
in
add
push
xchg
imul
mov
xor
sbb
and
xor
mov
mov
int
add
inc
std
out
fldcw
lods
add
pop
jbe
inc
adcl
xor
add
movsb
cmp
mov
xchg
adc
or
add
or
cmp
icebp
sahf
jle
xchg
imul
outsb
mov
push
movb
and
popf
and
sub
push
cmp
cmpsb
sbb
and
xorb
and
xchg
jg
daa
xchg
mov
addr16
mov
push
xor
ljmp
sub
dec
mov
shll
lahf
or
mul
cmp
into
push
mov
or
push
shlb
jecxz
int
inc
pushf
xchg
ss
mov
outsl
sub
mov
ffreep
lahf
xor
mov
js
test
mov
cltd
lods
dec
or
adc
arpl
jne
popa
outsb
int
jecxz
mov
xor
out
dec
and
test
add
sbb
lea
mov
adc
xor
into
or
mov
pop
imul
sbb
imul
and
fcmovne
orb
jp
sub
clc
int
cmp
inc
icebp
roll
cmp
iret
sub
out
add
notl
dec
sub
incl
jno
mov
fldt
pop
and
add
popf
xchg
sarb
cwtl
and
cmp
fwait
adc
pop
add
pop
jae
rcrl
sbb
ss
mov
test
outsb
jnp
popf
neg
lock
in
or
cmp
mov
int
mov
jecxz
test
dec
fs
lret
or
adc
mov
dec
cmp
and
inc
push
jnp
adc
test
mov
adc
fcoml
bswap
ja
pop
dec
out
jns
pop
pop
add
cmp
cwtl
call
imul
ljmp
jne
gs
sub
xor
inc
lods
pop
push
mov
mov
movsl
pop
mov
push
movsb
inc
addr16
insl
xlat
fwait
inc
push
mov
pop
leave
push
pop
or
mov
int3
bound
mov
adc
and
cmp
mov
in
out
pop
movsb
cmc
sbb
xchg
loop
mov
or
fisubrl
loop
and
mov
stos
xchg
dec
xor
push
mov
ds
cmp
and
or
mov
mov
dec
clc
cmp
adc
data16
pop
push
aas
mov
fcmovne
jge
dec
xor
test
jp
std
lods
mov
lret
imul
lods
rolb
lret
mov
mov
outsb
mov
mov
pop
lret
repnz
movsb
push
sbb
adc
aas
dec
mov
xchg
inc
cltd
or
sub
mov
or
sahf
in
pop
inc
sub
sbb
loopne
je
test
pop
fimuls
iret
das
clc
fwait
out
in
out
loope
and
in
pop
mov
sbb
aas
std
xchg
xchg
inc
fwait
dec
add
or
sub
sub
shll
pop
and
enter
mov
hlt
cli
stos
sub
mov
lock
fnstenv
call
jecxz
lock
fdivs
in
ret
int3
loopne
jge
mov
sub
dec
loopne
stos
xchg
and
add
mov
mov
outsb
ss
adc
test
mov
sub
and
sbb
pop
jp
jl
andl
cmpsb
and
icebp
fdivrs
jg
sbb
shll
and
push
or
fmulp
std
add
xchg
popf
int
push
bound
xor
push
xlat
cld
sbb
mov
pop
stc
dec
outsb
fwait
stos
in
leave
or
fisttpll
push
mov
add
jns
jle
push
mov
lods
sbb
push
and
ljmp
xor
dec
loop
pop
push
and
xlat
out
cmp
fisubrs
cmp
mov
mov
hlt
push
pop
xlat
jl
and
push
sbb
or
test
add
test
xchg
xor
stos
xchg
les
out
jbe
pusha
in
jg
cs
lahf
push
sbb
pop
jns
pop
fs
mov
dec
roll
movb
or
idivb
sbb
xchg
addr16
test
imul
xchg
mov
xchg
jmp
stos
mov
jbe
push
fmul
jnp
xor
out
arpl
imul
ds
push
fwait
xor
cmp
ljmp
mov
fs
push
stos
scas
inc
data16
inc
mov
call
mov
mov
cmp
mov
sbb
int
out
lahf
or
das
push
inc
pusha
dec
push
fadds
dec
scas
mov
cmpsl
insl
stos
push
call
xor
pushf
and
pop
and
lret
rcrl
fwait
cltd
xchg
int
insb
mov
cld
jne
stos
xchg
pop
lds
jmp
mov
mov
das
mov
subb
adc
movb
imul
movsb
out
sub
sub
xchg
stos
test
mov
sti
loope
ret
imul
jle
aad
mov
dec
aad
and
cmp
sti
fildll
pop
shlb
cmpsl
cmpsl
sub
subl
inc
push
dec
push
cwtl
insb
xor
leave
jb
dec
in
dec
adc
and
mov
pop
std
xlat
ss
fwait
out
jae
aam
hlt
insb
adc
dec
ret
sub
inc
push
fildl
xor
clc
roll
test
repz
lods
dec
testb
mov
push
inc
ja
dec
jle
gs
nop
lock
lret
and
pop
out
dec
jle
jnp
push
jnp
or
std
sub
enter
stc
addr16
jmp
es
shr
not
push
clc
sbb
movsb
dec
rclb
sub
mov
pop
mov
push
cmpsl
pop
mov
or
test
inc
int3
ss
shrb
in
pop
adc
jg
pop
shll
mov
and
iret
fildl
pop
and
mov
aad
xchg
mov
xor
sti
test
push
loopne
jmp
pop
sub
arpl
sbb
and
int
adc
ss
mov
pop
cmpsb
and
push
and
adc
pop
push
jge
fwait
cwtl
xchg
or
xchg
mov
cs
ret
mov
mov
inc
or
dec
in
mov
scas
sbb
add
mov
pusha
jns
mov
rclb
int3
jmp
pop
push
mov
mov
cmp
jno
test
dec
sub
add
cmp
cmpl
add
hlt
or
pop
adc
pop
scas
cmp
adc
call
movsb
mov
xor
outsb
mov
popf
cmp
sbb
out
mov
test
mov
clc
call
add
aam
inc
mov
jbe
lods
mov
jno
js
add
fisubrl
cmpsl
in
mov
roll
scas
push
and
orl
or
jmp
icebp
mov
in
rcrl
daa
fsubr
sbb
fimuls
xlat
jge
and
push
jge
clc
mov
cmp
push
loopne
xchg
aad
les
mov
and
les
push
jno
into
adc
and
mov
pushf
or
pop
mov
mov
in
or
in
adc
dec
push
sbbb
dec
pop
pop
add
insl
push
push
lods
jbe
add
xchg
sub
imul
cltd
sub
mov
pop
test
jo
aaa
arpl
add
hlt
imul
sbb
mov
ljmp
mov
cmp
cmp
mov
pop
cmp
mov
adc
adc
adc
mov
repz
fcmovnu
jg
ret
aas
dec
imul
mov
pop
mov
sbb
sbb
dec
sbb
sbb
pop
mov
shll
xchg
dec
call
dec
sbb
jge
inc
inc
mov
sub
int
dec
in
cmp
das
cmp
sbb
sbb
cmp
out
xchg
xchg
ja
sub
mov
movsb
into
mov
enter
in
xchg
lods
lds
sub
les
or
sbb
mov
iret
fldenv
push
lds
mov
jg
das
xor
inc
test
in
rep
and
xor
arpl
lret
lahf
jnp
jmp
and
shlb
ss
das
jmp
movsl
cmp
cmp
lods
push
ss
andl
std
pop
and
sub
pop
sbb
decl
push
adc
mov
rol
or
pop
mov
cmp
adc
adc
outsb
push
push
dec
faddl
ljmp
cli
mov
pop
mov
aad
aas
dec
daa
rcl
or
jnp
lret
lods
push
ljmp
xlat
into
push
loope
dec
fnstenv
fbstp
pop
xchg
add
fstpl
and
pop
cs
fildl
psubsb
rolb
push
fwait
arpl
outsl
inc
fcmovb
mov
sahf
test
pushf
es
neg
popa
mov
sbb
jecxz
testb
mulb
xlat
adc
into
out
xor
popf
cmp
xchg
lods
notl
icebp
pusha
jnp
bound
mov
mov
push
add
cmp
xor
xor
je
sbbb
xchg
mov
out
cmp
aaa
mov
inc
icebp
subb
roll
out
insl
sbb
enter
inc
call
xchg
xchg
in
lds
mov
js
lock
lcall
shll
pop
addr16
inc
outsl
ds
test
sbb
xor
shlb
dec
outsl
xchg
and
in
xchg
rcll
xlat
fldt
or
sbb
cmp
pop
ret
outsl
hlt
jge
imul
int3
pop
jmp
adc
jge
cmp
into
cmp
loopne
lods
pushf
sub
jp
push
mov
mov
lahf
cmp
jl
or
or
pusha
mov
sbb
mov
loopne
aas
in
adc
mov
dec
ds
movsb
je
fmul
mull
jbe
adc
sub
out
and
add
push
xlat
stos
in
sbb
and
icebp
fcmovne
sbb
cmp
or
push
cld
stc
add
cmp
pop
push
mov
std
aad
aam
ja
fisubl
inc
cli
add
jle
and
jmp
mov
push
repz
fidivrl
mov
test
push
jl
inc
jp
jecxz
cmp
out
lret
and
aas
cmp
out
insl
out
mov
rol
cmpsb
cwtl
cltd
loop
or
push
pop
leave
divb
push
cmc
jge
push
jg
ret
or
pop
sbb
lahf
dec
imul
or
in
fcmovne
aaa
mov
and
enter
dec
in
pop
in
data16
insb
call
shrb
loop
gs
and
adcb
sbb
xor
out
mov
sub
mov
xchg
rcrl
lcall
je
add
lock
std
ret
ljmp
nop
adc
cmp
pop
adc
mov
lods
cs
lods
shll
call
and
insl
jmp
pop
or
or
les
push
outsl
frstor
scas
jno
fs
sub
insl
scas
dec
enter
pusha
shrb
stc
xchg
or
nopl
sub
mulb
je
test
std
jl
aas
inc
lret
or
cmp
inc
ret
jae
xchg
mov
cmpsb
mov
dec
out
jnp
shrl
je
stos
js
pop
sbb
imul
sti
clc
push
cmp
jp
jb
icebp
daa
mov
add
mov
mov
aam
and
adc
and
inc
xchg
iret
jno
mov
jg
or
test
add
mov
inc
shll
jl
jne
mov
jae
adc
test
dec
adc
out
mov
dec
jp
or
sub
adcl
repz
pop
cs
adcl
out
dec
xor
xchg
movsl
mov
stos
or
sbb
fcmovnbe
int
sbb
test
xchg
test
data16
aas
mov
xchg
popa
pop
arpl
dec
mov
cmp
sbb
test
lahf
arpl
loope
xchg
mov
mov
inc
mov
mov
sub
std
cmpsb
inc
loope
das
in
lcall
mov
mov
xorl
arpl
inc
sarb
pop
mov
in
inc
jno
insb
jg
pop
cmpsl
pop
cmp
pop
mov
ss
inc
cmc
in
mov
push
dec
push
jno
or
cmpl
cmp
mov
push
out
sub
inc
cmp
xchg
mov
loopne
shlb
push
sti
shrb
stos
add
insb
enter
cmpsb
xor
xchg
pminub
stos
or
mov
pop
insb
jno
adc
sub
inc
push
lcall
mov
pop
mov
and
int
mov
aad
pop
fldt
cmpsb
inc
sti
movsl
mov
sar
lahf
insl
jmp
push
mov
cmp
pop
test
mov
cli
enter
pop
xor
sar
mov
stos
mov
add
daa
imul
lock
pop
test
out
je
push
or
dec
or
mov
movsb
jg
push
push
int
test
push
cmp
test
in
clc
inc
sub
xlat
into
cmpsb
cmp
mov
imul
sarb
pushf
pop
cmc
xchg
inc
js
das
scas
mov
fistpl
cmpsb
sub
xor
adc
daa
jl
leave
fildll
mov
das
push
nop
cmp
lods
push
push
jmp
mov
pop
divl
ffreep
cmpsl
pop
mov
and
sbb
push
add
add
scas
or
sub
add
sub
cld
adc
pop
or
test
aam
cmp
testl
jne
push
mov
loope
adc
cmp
fmulp
pushf
arpl
ret
lock
orl
jbe
sbb
je
push
jg
sub
jge
mov
push
test
data16
popf
cmp
inc
insb
lods
inc
push
aas
cmp
lcall
in
pop
loopne
movsb
push
ds
xchg
je
pop
jl
pop
lock
nop
jl
cmp
mov
mov
ss
mov
or
test
pop
sbb
bnd
cmp
pop
test
arpl
clc
or
mov
push
add
pusha
cmp
pop
xlat
call
sarb
sub
outsb
dec
popa
scas
mov
or
lcall
adc
out
pusha
fwait
mov
adc
and
jno
sub
jns
mov
sub
enter
and
jae
orl
repnz
fidivrs
aas
cmp
nop
mov
pop
sub
dec
stos
rcrl
sub
and
mov
pop
jbe
in
fwait
aaa
loope
scas
add
mov
cmp
add
test
xor
iret
push
test
sti
out
scas
mov
pop
fs
or
xchg
adc
dec
pop
mov
push
sub
out
or
and
jno
loop
repz
fs
lods
std
int3
dec
inc
lret
imul
test
std
mov
add
push
cmp
mov
pop
dec
mov
fisubl
push
test
outsl
mov
stc
xor
lea
jl
es
stc
in
rol
pop
or
jae
jle
cld
xor
cmp
xlat
dec
xchg
stos
add
fldenv
mov
pop
and
fmul
xchg
xchg
loope
add
fwait
es
mov
icebp
rclb
sbb
pop
jmp
sbb
push
aam
pop
add
fucomp
pop
jl
mov
sub
cmp
or
sbb
jmp
sti
ds
push
fistpl
stos
outsb
mov
pop
imul
sahf
sub
cmp
or
sbb
jmp
sti
ds
push
fistpl
stos
outsb
mov
pop
imul
sahf
mov
into
fcmovnu
jmp
sti
cmp
fistpl
stos
outsb
stos
jle
dec
jae
jg
daa
mov
sub
sub
or
fsubrp
cs
popa
push
fldt
out
xorl
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
sbb
sub
cmp
test
sub
push
ljmp
test
mov
dec
call
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
dec
test
mov
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
adc
enter
popf
pop
xchg
sub
jl
sub
rorl
mov
push
sbb
jns
mov
popf
sarl
rcll
push
mov
pop
jbe
mov
mov
push
jns
push
mov
int3
adc
das
push
dec
test
into
sub
sub
jl
test
xabort
or
sbb
inc
clc
cmp
outsl
cwtl
dec
cltd
in
push
js
add
xchg
xchg
aaa
dec
cwtl
pop
imul
or
inc
clc
xor
adc
cmp
dec
sub
shll
dec
mov
pop
out
jmp
mov
mov
mov
jb
sub
cmpsb
push
imul
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
dec
test
mov
or
cmp
outsl
dec
mov
sbb
push
scas
dec
imulb
enter
pop
rolb
je
jo
mov
jge
dec
stc
push
mov
adc
sub
stos
das
mov
data16
insl
mov
mov
add
pop
mov
js
mov
dec
test
mov
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
dec
test
mov
or
cmp
sub
fnstcw
cmp
out
xlat
incl
lea
aaa
test
cli
dec
mov
sbb
lahf
lock
mov
or
into
and
repnz
pusha
pushf
or
fs
outsb
mov
add
or
jns
mov
or
aaa
sbb
push
jl
fdiv
lods
pop
xchg
sbb
dec
mov
jle
push
aas
push
push
faddl
fwait
add
sbb
movq
in
lea
test
divl
test
in
jb
push
mov
movsl
insb
xchg
fld
cwtl
adc
xchg
movsl
aas
das
inc
outsl
stos
push
dec
shlb
aaa
js
int
add
cli
ss
ds
sub
and
fadd
jb
popa
out
mov
xchg
pop
mov
fwait
cmp
cmp
mov
popa
inc
sub
pop
mov
mov
dec
fnstenv
cmp
in
sti
insb
lock
bound
loopne
add
pop
popa
push
inc
add
addr16
mov
inc
mov
popa
pop
jle
inc
inc
dec
in
out
jle
cld
int3
mov
sbb
pop
test
adc
inc
xor
sub
pop
les
pop
mov
test
test
push
sarl
pop
loop
mov
or
xchg
ret
jp
pushf
repnz
xor
sti
push
orb
sbb
cs
cmp
insl
insb
fwait
xlat
lret
and
push
clc
mov
mov
ja
mov
ljmp
orb
add
inc
insb
out
sub
outsb
aas
sub
test
push
pop
shrl
loopne
daa
mov
sub
or
in
mov
loop
mov
dec
cwtl
dec
insl
sbb
scas
dec
pop
inc
fcoms
mov
xor
fistpll
mov
push
dec
push
sub
out
lods
movsl
sbb
mov
out
mov
mov
into
scas
fistpl
and
mov
movsb
popa
add
pop
mov
xchg
jns
adc
push
xchg
iret
sti
add
dec
aaa
std
lds
mov
test
bound
daa
shlb
stos
and
and
push
dec
push
jns
movsl
and
xlat
cmp
mov
fidivrl
jbe
insb
jae,pt
out
jnp
rclb
mov
xchg
jle
cltd
roll
dec
neg
std
inc
inc
jmp
rorl
mov
loope
mov
pop
pop
inc
fmull
mov
bound
sbb
outsb
pop
or
pusha
push
shlb
jl
outsl
in
adc
pop
mov
or
sbb
test
cmpl
cltd
out
adc
jmpw
pushf
pop
sub
adc
sub
sub
inc
cmpsl
gs
or
repnz
pop
push
sbb
test
es
xorb
lock
shll
cmpsb
lods
inc
sub
iret
pop
or
jmp
adc
lods
int3
movsl
jbe
pop
push
out
sub
jo
mov
xor
clc
sarl
ret
mov
dec
xchg
xchg
cmp
sbb
sbb
sub
sbb
das
jmp
and
data16
jge
iret
jmp
xor
into
sub
dec
aam
mov
fisubs
lods
xorb
outsl
jmp
or
int
aad
cmpsl
aas
dec
add
mov
mov
imul
mov
mov
dec
xchg
push
or
lahf
das
mov
pusha
and
xchg
and
pop
pushf
je
or
push
ss
mov
pushf
sub
mov
jb
pop
stos
xchg
xchg
dec
xor
jo
fst
aas
jne
mov
cmp
jnp
or
movsb
stc
jge
pop
push
hlt
xchg
push
pop
jmp
hlt
push
dec
jnp
popf
out
insl
add
int
addr16
sub
mov
jb
mov
jbe
xchg
and
in
mov
in
ret
xchg
push
lods
or
fcmovb
out
cmp
xchg
jle
push
lcall
in
je
packsswb
sbb
xchg
jp
cmp
fwait
pushf
clc
sbb
shrb
pop
jg
ficompl
mov
cltd
jno
or
sub
sbb
test
lea
add
adc
sbb
pop
jmp
je
push
or
test
adcb
cmp
xchg
out
jge
ret
mov
popa
lods
lcall
fwait
lahf
insb
lret
test
stos
pop
jae
push
inc
push
cmp
sbb
cmpsl
subb
ja
mov
cwtl
repz
mov
fmull
insl
mov
fnstsw
jae
jp
pop
fwait
inc
pop
lahf
mov
outsb
pushf
shr
pop
mov
stc
arpl
ljmp
sub
adc
inc
xchg
sbb
pop
sbb
fwait
adc
je
cmpl
add
outsl
push
dec
stc
xor
jle
scas
lods
mov
jae
adc
pop
iret
jno
cmp
rolb
stos
add
repz
add
into
mov
or
or
xchg
fwait
lcallw
out
int
or
inc
lcall
mov
fs
out
jmp
inc
xchg
jg
pusha
fimull
gs
dec
scas
mov
mov
test
and
inc
popf
dec
pop
lret
mov
testl
or
add
jb
rorb
lahf
xchg
mov
or
pop
xor
ja
add
mov
fsubrs
pop
movb
adc
sbb
ds
lret
sti
dec
dec
pop
and
pop
mov
leave
sahf
adc
push
sbb
fstpl
inc
int
inc
or
mov
jle
push
cmpsl
icebp
dec
loop
or
clc
fiadds
add
push
aad
jns
movsl
cmp
jno
push
mov
add
mov
pop
pop
and
sub
jg
push
and
adc
cmp
push
vpshlw
fucom
push
push
xor
popf
enter
std
push
ds
mov
test
ljmp
fimull
cmpsb
mov
lret
sbb
adc
call
jl
jo
dec
and
ljmp
clc
pop
out
cmp
imul
outsl
int3
call
jmp
add
xor
sbb
dec
adc
xor
nop
ss
jle
jnp
xchg
push
sbb
lcall
jno
rcrl
sti
rorl
daa
and
int
sbb
in
jo
test
push
fimuls
sub
mov
popf
jbe
sbb
inc
jmp
mov
mov
mov
push
fistpll
xor
pop
push
mov
loop
call
mov
jp
inc
jne
int3
xor
sbb
pusha
pop
or
add
sbb
or
inc
cs
cli
or
imul
sbb
lods
test
add
push
push
pop
sti
leave
shrl
jmp
add
cmp
aad
cmpsb
dec
movsb
stc
xor
xor
jo
push
scas
xor
mov
dec
add
cld
shrb
sub
adc
push
xor
popf
lret
jp
mov
cmc
mov
sbb
daa
mov
and
test
ret
inc
jmp
push
add
mov
loope
xchg
popa
int3
movsl
dec
int3
lret
pusha
inc
sarl
movsl
nop
ret
xor
push
inc
mov
pop
pop
enter
into
icebp
int3
push
adc
adc
enter
mov
cmp
cmpsl
inc
insb
cmp
cltd
pop
and
xchg
out
lea
push
cmp
lds
rcrb
and
sub
xchg
mov
xor
fstl
neg
jl
inc
lcall
icebp
test
out
jp
and
or
add
mov
pop
insb
leave
sbb
mov
das
xor
xor
nop
pusha
ret
sbb
scas
addr16
out
cltd
pop
icebp
sti
pop
iret
sub
fadds
inc
and
xchg
out
dec
inc
inc
mov
pop
mov
stos
std
iret
cmp
adc
pop
imul
xchg
pop
ljmp
pop
xchg
inc
daa
shlb
imul
andl
mov
outsl
or
sub
and
aaa
add
imul
dec
cmp
mov
orb
jbe
inc
push
jb
pop
fsubs
je
pop
mov
jl
push
dec
xchg
push
dec
mov
inc
mov
and
icebp
subl
or
movsb
fidivrs
stc
push
xchg
outsl
repz
es
mov
insb
mov
in
mov
inc
add
subb
cld
hlt
leave
push
lock
jae
mov
push
inc
ds
movsl
push
add
push
jl
or
cltd
ljmp
or
xchg
aaa
jp
int3
cmp
inc
sbb
and
cmp
adc
ss
cmc
inc
clc
jge
inc
xchg
inc
mov
iret
lahf
cmp
mov
sub
in
daa
mov
mov
adc
mov
sub
imul
icebp
out
pop
sub
mov
sbb
cmp
jbe
adc
adc
mov
nop
push
addr16
xchg
adc
dec
dec
jg
and
sbb
fcoms
ret
cmpl
xor
popf
shrb
mov
aam
jbe
mov
xrelease
and
pop
ret
and
cmpsb
pop
sahf
adc
adc
cmp
pop
into
loope
pop
cli
test
addl
cmp
imul
dec
inc
inc
enter
pushf
xchg
xor
mov
sub
stc
mov
das
pop
into
mov
int3
mov
fidivrl
add
mov
xchg
dec
xorl
insb
push
jmp
enter
and
orl
sbb
dec
or
jns
inc
scas
adc
int3
jp
fwait
jnp
imul
pop
shll
ror
sub
int3
cs
xor
in
jge
mov
imul
mov
dec
mov
out
icebp
ja
lcall
scas
inc
iret
mov
adc
adc
mov
inc
lods
pop
cli
movsb
out
lods
hlt
faddl
add
hlt
or
add
mov
xchg
mov
insb
and
jno
fcoml
iret
das
js
nop
sub
mov
and
out
mov
sbb
add
inc
mov
fstp
and
add
ljmp
arpl
pop
cmp
xchg
in
jno
negl
add
ljmp
inc
es
aas
popf
cmp
mov
push
fwait
icebp
les
loopne
add
jge
inc
nop
add
xchg
loopne
out
insl
out
shl
mov
and
incb
mov
mov
pop
lods
jmp
pop
imul
cltd
std
xor
mov
insb
add
test
mov
add
popa
insb
iret
call
inc
pop
mov
lods
lahf
xor
jmp
aas
cmpsl
sahf
in
cmp
push
inc
lods
sbb
sbb
push
mov
or
mov
xchg
and
and
inc
repnz
inc
xor
mov
mov
cld
sti
pop
adc
push
lahf
cmp
push
mov
mov
icebp
inc
jge
add
jb
xchg
js
lea
inc
mov
int3
int
outsb
pop
push
xchg
sarb
insl
and
xchg
pop
push
add
push
sub
mov
sub
imul
pusha
sub
enter
xchg
mov
fwait
push
repz
add
out
xchg
lret
popa
faddl
and
arpl
or
jecxz
fcoml
jmp
dec
jge
mov
xchg
sahf
cs
in
cmpb
loopne
pop
outsb
or
add
div
orb
pop
pop
push
mov
jl
test
cmp
mov
dec
sbb
popa
inc
cmpsl
inc
jecxz
pand
fildl
mov
sbb
sbb
mov
repz
aad
bound
cmp
pop
dec
stc
mov
xchg
xor
mov
notb
rol
lds
fcomps
testl
out
loope
cmc
xchg
pop
sbb
gs
imull
loope
sbb
mul
orb
push
cmpsb
shll
pushf
mov
out
xchg
fwait
shll
lods
xlat
popa
je
mov
xchg
psubq
push
inc
pop
test
dec
outsb
out
fcmovnb
lret
push
and
sbb
jecxz
mov
icebp
push
cmpsl
mov
dec
adc
hlt
mov
repz
mov
cmpsl
and
or
sbb
stc
imul
sbb
xor
jns
xlat
fs
popf
movsb
mov
rorl
int
fldt
dec
jecxz
loopne
pop
cmp
inc
jmp
stc
movsb
add
fisubrs
sbb
std
cmp
data16
imul
imul
push
adc
daa
xchg
js
add
arpl
testl
mov
lods
pop
mov
jno
push
dec
test
es
push
mov
lret
jp
idivb
jns
out
les
pop
cld
imulb
incb
addr16
in
leave
xor
adc
pop
mov
jp
inc
mov
xchg
fwait
loop
mov
cltd
mov
loope
mov
ja
sub
ss
fcoml
cmp
cli
pop
mov
pop
dec
jp
push
inc
or
imul
mov
cs
rdpmc
adc
lcall
jecxz
lcall
fsubrs
mov
or
and
and
push
mov
cmpsb
dec
arpl
fwait
mov
mov
pop
andl
push
repnz
test
lret
xor
lods
je
mov
shll
dec
xor
inc
push
imul
xchg
xorl
xchg
pop
jns
dec
xlat
mov
rcll
and
idivb
call
scas
lock
add
push
mov
mov
jecxz
in
outsl
mov
daa
push
and
cmpb
cmpsb
jl
pop
jae
mov
rolb
cmc
mov
inc
das
mov
xor
pushf
pushf
les
std
cmp
ret
push
insl
pop
fstpt
xchg
dec
jno
push
pop
aad
in
loop
and
jo
fisttpll
push
mov
mov
loop
fmul
int3
sbb
inc
sub
ja
mov
jg
mov
jb
es
cmpl
xor
nop
inc
mov
push
sbb
jnp
mov
cmp
pop
sub
adc
jg
push
jge
loope
inc
lock
mov
xchg
or
xor
movsw
scas
jle
pop
fisttpll
or
cmovo
jo
decl
movsl
xor
adcb
shr
popa
xor
mov
jb
rcrb
sbb
xchg
lods
sbb
xchg
iret
mov
ret
imul
fistpll
adc
or
add
fdivrs
ljmp
jge
push
xchg
pushf
jge
loope
pusha
add
and
sbb
push
cmpsl
mov
mov
insl
jecxz
ljmp
bound
inc
lock
es
lods
push
sub
sbb
push
push
aas
ljmp
jo
int
fcom
xchg
mov
dec
mov
pusha
inc
and
loopne
xor
cmpsl
push
add
clc
into
call
rolb
enter
fsubr
inc
adc
xchg
leave
ret
jg
out
xchg
inc
jnp
mov
mov
in
adc
shrl
cltd
jb
push
call
sub
xchg
mov
or
add
fwait
sbbl
loopne
jo
mov
outsl
xor
clc
cltd
enter
dec
fwait
roll
pop
sbb
pop
dec
rorb
lods
lods
mov
cli
pusha
imul
add
das
daa
iret
jle
dec
mov
daa
sub
les
aad
mov
jp
mov
or
stos
pop
mov
sub
inc
test
push
daa
mov
stos
mov
or
outsb
pop
adc
arpl
adc
sbb
movsl
pop
xlat
cs
jecxz
dec
adc
mov
mov
mov
pushf
lods
inc
outsl
xor
jmp
add
push
loopne
cmp
lahf
in
testb
push
push
rclb
and
in
dec
pop
dec
and
cmpsl
lret
lahf
sahf
mov
add
xchg
or
loop
pop
push
mov
lea
lock
cmpsl
cmc
adc
or
ja
sbb
adc
stos
cs
cld
and
jle
dec
or
pop
daa
lods
or
dec
lds
stc
cmp
nop
cmp
jp
fistpll
lret
cs
ljmp
pop
stc
shll
xor
pop
or
insb
xor
add
sub
bound
movsl
dec
mov
push
aam
loopne
icebp
sbb
mov
iret
mov
jnp
testb
add
push
int3
dec
mov
loop,pn
cld
add
jnp
mov
xchg
pop
cs
out
xchg
enter
mov
adc
mov
xchg
xchg
jp
pop
dec
mov
je
jecxz
mov
sarl
insl
negl
pop
loop
jb
sbb
out
inc
lods
cli
in
pop
aaa
cmp
into
subl
xlat
enter
pop
cli
lock
adc
outsb
mov
adc
mov
sub
aaa
mov
ret
pop
jno
xor
mov
enter
int3
lahf
pop
stc
mov
movsl
xchg
push
das
cmpb
mov
pop
mov
lea
push
jae
ds
sti
fbstp
pop
mov
mov
jl
sbb
cmp
in
fwait
out
jg
add
je
int3
push
nop
or
cltd
add
je
xor
int3
mov
mov
sbb
lock
popa
xor
push
mov
cmp
mov
mov
sbb
and
cwtl
sub
in
in
sbb
xchg
or
outsb
cmp
pop
sbb
mov
jne
or
rcrl
xchg
aaa
movsb
out
inc
popa
xchg
xchg
lret
mov
push
jp
mov
iret
fistpll
pop
pop
adc
arpl
clc
cmp
pusha
mov
je
test
push
jle
jmp
push
push
negb
scas
push
cmp
loopne
pop
or
lret
pop
dec
jb
sbb
push
xor
movsb
pusha
mov
addr16
mov
adc
sbbb
push
out
js
data16
gs
mov
pop
stos
enter
andb
jge
sub
and
inc
push
mov
mov
or
fcoml
and
push
xchg
jno
rol
rcrl
imul
je
cld
xor
mull
cmp
jge
lret
mov
jnp
movsl
jb
mov
outsl
movsl
add
incl
xor
jle
adc
mov
pop
mov
notb
sarb
aas
sub
scas
mov
mov
loope
adc
fstp
add
ljmp
pop
pop
gs
mov
add
push
fcomi
or
leave
jb
add
dec
shrb
xor
mov
movsl
or
sti
scas
scas
nop
test
fwait
push
pop
hlt
roll
icebp
and
and
cs
ret
mov
pop
mov
imull
mov
mov
dec
jbe
outsb
push
and
mov
mov
loope
or
movsb
imul
and
shr
jle
addr16
mov
hlt
arpl
pop
add
sbb
mov
daa
add
inc
cmp
mov
sbb
rcrl
stos
jns
stc
stos
push
or
inc
shrb
hlt
mov
xor
notb
sbb
ljmp
jg
cmp
pop
roll
outsl
mov
in
xchg
cli
insb
xlat
cltd
loopne
adc
insb
jmp
fst
repnz
push
push
push
dec
div
fisubs
mov
sub
jmp
push
mov
or
lods
lods
jle
jg
push
nop
loopne
mov
je
mov
in
inc
push
subb
comiss
pop
mov
jle
movsl
pushl
std
pop
mov
test
jp
int3
test
in
adc
leave
in
scas
out
pop
repz
pop
push
dec
xchg
pop
inc
inc
lds
ds
lahf
mov
inc
inc
lahf
std
cltd
mov
mov
mov
mov
sub
cmp
aam
es
xchg
cmp
pop
push
lock
xorb
add
test
mov
mov
mov
mov
cs
add
xchg
cmp
mov
ss
ljmp
mov
fcompl
outsl
rolb
inc
lcall
test
inc
insl
test
in
lret
mov
mov
sub
ret
icebp
adc
and
sarb
adc
jno
roll
mov
pop
addr16
push
jne
cmc
jb
sti
or
mov
hlt
daa
lret
in
and
mov
add
and
jge
adc
lods
mov
and
rcr
int
fbld
leave
std
hlt
loope
pop
rcr
notb
lahf
dec
adc
js
cmp
mov
mov
pop
fcompl
push
fs
pop
les
sub
pop
push
pop
test
push
pop
push
pop
repz
xchg
call
dec
shrb
imul
clc
out
inc
maskmovq
lea
rclb
outsl
inc
orl
clc
inc
fidivl
mov
leave
sub
cmp
dec
cltd
pop
mov
js
mov
dec
test
mov
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
dec
test
mov
or
cmp
sub
fstpl
call
push
pop
cwtl
dec
test
mov
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
or
js
mov
mov
negb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lret
mov
fwait
jmp
sti
mov
fxch
mov
dec
or
imul
cmp
dec
sbb
cmp
jnp
mov
fwait
jmp
sti
mov
stos
jmp
sti
pop
or
imul
cmp
dec
sub
sub
jnp
mov
fwait
rep
jecxz
xchg
lret
sbb
jmp
sti
push
mov
add
or
je
ja
insb
jnp
mov
fmuls
cmp
jl
int
mov
mov
repz
mov
xchg
int
inc
mov
in
cs
xchg
sub
mov
cmp
sub
daa
mov
pop
mov
or
stos
jnp
sbb
movsb
in
jmp
or
fwait
sub
sbb
fistpll
lcall
rcrb
pop
aam
imul
sbb
imul
sbb
or
decb
dec
negl
sti
repz
sbb
and
add
je
cltd
push
pop
sahf
mov
mov
sbb
cmp
cmp
dec
pushf
sub
jp
mov
fwait
jmp
sti
mov
stos
jmp
sti
push
or
jae
bound
adc
pop
xor
adc
ret
clc
cmpsl
std
movsl
mov
outsl
sbb
jge
sub
pop
imul
test
fwait
mov
or
outsb
imul
or
jo
pop
push
pop
sub
ret
xchg
faddp
lret
fldt
or
imul
cmp
dec
sbb
imul
lret
mov
fwait
jmp
sti
mov
stos
jmp
sti
dec
or
imul
cmp
dec
sbb
imul
lret
mov
rclb
cld
out
stc
addr16
jmp
data16
lock
push
loopne
fwait
aaa
or
xchg
imul
popf
pushf
outsb
movsl
and
xor
sub
push
ret
inc
rcll
mov
inc
mov
rorl
sti
mov
jl
ffreep
push
sub
sbb
call
inc
push
jns
sarb
add
dec
sarb
negb
push
inc
adcb
cld
or
push
cmc
push
test
dec
out
xor
dec
sbb
push
xor
adc
mull
sub
sub
mov
mov
cli
lret
movsl
mov
faddl
out
clc
int
add
test
icebp
xchg
cmp
mov
enter
sub
adc
repz
xchg
sub
lods
loopne
add
ss
aam
cmpsl
gs
je
test
pop
fstps
pminub
push
adc
xchg
addl
stos
andb
sub
movsl
jg
xchg
mov
shrb
pop
rorl
insl
repz
cmc
mov
pop
sar
fistpl
test
lcall
scas
jecxz
push
or
xchg
std
fcomps
mov
ret
dec
cmc
lret
jg
dec
out
mov
push
jle
sub
sbb
push
sarb
sbb
push
push
xor
cli
in
xor
xlat
sub
fdivp
mov
mov
pop
gs
in
jp
aaa
fnsave
xor
aaa
clc
mov
sbb
jg
and
stc
loopne
push
arpl
pop
out
jg
jae
inc
push
mov
jbe
aam
dec
jl
mov
cld
xchg
ficoms
fnstsw
adc
inc
pop
adc
out
pusha
pushf
push
mov
sarl
xchg
jge
push
ret
fidivrs
nop
pop
push
push
hlt
test
ret
nop
mov
enter
mov
push
dec
mov
cmp
fldenv
adc
jbe
insl
shlb
mov
out
ret
mov
mov
mov
mov
sbb
sub
rcl
test
test
mov
sub
sub
mov
adc
mov
pop
cmp
mov
pop
daa
jp
aas
xchg
mov
adc
sbb
dec
or
ret
icebp
push
fldenv
fs
fisubrl
sbb
iret
fld
out
in
filds
fs
mov
test
es
adc
xchg
stc
stos
setg
mov
outsl
sbb
popf
jmp
out
cmp
mov
iret
sbb
ficoms
mov
mov
push
cmovnp
fs
repz
repz
push
out
lretw
out
mov
fwait
push
adc
cmp
clc
clc
js
ds
rcl
sub
push
shlb
or
jae
mov
inc
mov
adc
sbb
fisttpll
or
fwait
daa
and
inc
arpl
sbb
aas
cs
into
clc
pop
scas
sub
dec
cmp
bound
cmp
xchg
jne
iret
das
dec
mov
mov
inc
repnz
ljmp
pop
or
movsb
pop
sbb
loop
lret
mov
sbb
imul
sub
cltd
cmp
and
fwait
pusha
iret
mov
fwait
test
ficoml
pop
inc
jp
push
les
cs
or
pop
xor
fadd
insl
mov
in
dec
stc
ds
repnz
loopne
and
pop
inc
push
aad
push
outsl
inc
arpl
sbb
clc
std
lock
sub
dec
call
sub
fsub
scas
xor
mov
js
xchg
imul
push
ret
aam
jecxz
es
sub
or
shlb
ds
es
int3
bound
push
leave
push
add
aaa
cwtl
lahf
sbb
xchg
js
pop
es
aaa
rclb
in
call
jmp
xor
filds
gs
mov
outsb
movsl
test
xchg
mov
imul
jnp
inc
jb
mov
adc
jmp
shl
popa
jne
mov
pop
cld
movsl
and
sbb
popl
fnstcw
cltd
mull
fs
mov
cmp
jno
mov
cld
cmpsl
push
in
clc
adc
mov
lahf
scas
and
hlt
pop
xchg
jle
lds
cmpsb
aas
ret
out
push
in
mov
mov
stc
jle
lea
cmp
jmp
inc
flds
inc
divl
xor
out
stos
fyl2x
mov
pop
jl
pop
jae
insb
daa
fmul
adc
roll
inc
lcall
scas
jge
ss
insb
cld
sbb
fs
pusha
sarb
ljmp
fsubl
xchg
adc
add
loopne
fiadds
faddl
xchg
sbb
mull
push
inc
push
fimull
ret
stc
loope
imul
push
cltd
test
add
les
jle
cmpsl
cmp
push
and
push
movsb
nop
lea
adc
sub
add
push
mov
cmp
and
add
jmp
jmp
loopne
ds
jae
imul
fidivl
jne
jne
inc
push
mov
test
lahf
pop
icebp
and
push
add
inc
or
xor
mov
xor
mov
jl
rcrb
adc
jg
shl
dec
lcall
ss
jne
or
mov
dec
xor
xchg
shr
pop
sarb
sub
jnp
and
sahf
mov
ret
ss
xchg
shlb
lret
out
repz
addr16
jle
vcvttpd2udqx
loope
dec
sbb
popf
ja
dec
clc
mov
push
lock
notb
adc
jae
sti
jp
lcall
xchg
push
fimull
dec
push
cmpsl
push
mov
add
xor
xor
xor
cmp
xor
xor
inc
lret
out
mov
mov
jmp
push
shll
outsb
pusha
sub
mov
mov
out
xchg
cmp
iret
repz
rcll
dec
cmp
fsubrl
jl
call
push
out
test
push
or
sbb
clc
nop
xchg
ret
out
dec
dec
popw
addr16
dec
sbb
push
arpl
xchg
xchg
call
movsb
in
and
fsubs
jmp
sub
ficoml
sbb
push
popf
int
cs
mov
jne
dec
cmp
pusha
fstpt
movb
mov
xor
repnz
outsb
les
add
xchg
lods
mov
pop
test
mov
call
in
mov
popf
popf
dec
jle
shr
mov
das
movsb
dec
mov
or
pop
nop
sbb
aam
mov
adc
inc
pop
jg
xchg
xchg
mov
sti
cmp
mov
add
test
test
cmp
mov
mov
fadds
imul
jmp
inc
pop
dec
cli
push
xchg
aas
repz
mov
icebp
xor
test
dec
stos
lcall
or
cltd
mov
xor
mov
imul
dec
add
pop
sub
ret
ds
push
out
test
pusha
stos
xor
mov
loop
repnz
mov
bound
dec
enter
and
cltd
stos
pop
xlat
sub
fnstenv
sub
shrb
in
mov
out
js
sub
and
fwait
rolb
insl
push
xchg
or
jp
scas
ret
dec
aam
jp
orb
test
xor
dec
inc
mov
mov
pusha
cmp
pushf
shrb
push
lock
push
dec
pop
popf
jno
push
xchg
fsubl
jp
fbld
mov
ret
rolb
dec
jmp
jnp
nop
sbbl
es
lret
loope
mov
subl
cmp
ret
aas
mov
xchg
bound
mov
mov
adc
adc
mov
aam
repnz
out
cmp
add
pop
sbb
sub
cmp
insl
icebp
movsl
push
inc
mov
lds
nopl
movsb
push
pop
fistps
ljmp
gs
cld
pop
xor
ljmp
in
fisttps
mov
stos
mov
sbb
xchg
divl
inc
mov
sbb
out
fisttpl
pop
dec
or
push
lea
ja
cmp
jmp
mov
pop
in
insb
xchg
pop
lahf
out
incb
dec
arpl
punpckldq
adc
in
and
adc
sahf
ja
decl
fwait
out
adcb
mov
push
dec
adcl
sub
xchg
cmpsl
push
mov
cmp
mov
add
sbb
mov
mov
adc
cs
out
inc
adc
testb
dec
andb
jbe
lods
je
sti
test
fs
arpl
or
adc
and
arpl
xorb
mov
pop
sub
pusha
xor
pop
ss
jecxz
ss
ds
addl
jp
xor
push
mov
in
push
dec
and
pop
xchg
inc
fdivrs
mov
movsl
mov
mov
sahf
sbb
push
cltd
mov
and
outsl
jecxz
out
and
cmp
or
add
lret
and
pop
lahf
inc
xchg
divb
xor
addr16
in
leave
aam
repnz
or
negb
bound
pusha
fcomps
mov
cmpsl
adc
lret
or
jmp
cmp
push
lds
cli
jecxz
push
xor
pop
shl
adc
sub
mov
je
addps
sbb
adc
shl
popf
inc
pushw
mov
jl
sbb
dec
mov
jo
icebp
mov
mov
dec
cwtl
imul
cld
js
inc
in
imull
aad
dec
mov
cmc
pop
cmp
jnp
sbb
push
jg
cld
pop
ret
mov
out
sbb
adc
insl
fwait
ljmp
scas
jp
popa
sti
lock
mov
seto
sub
inc
xchg
push
bound
xor
stos
cmp
add
lods
ror
ffree
lcall
repnz
mov
jle
js
leave
sbb
iret
jl
push
push
and
out
enter
arpl
ficompl
mov
fistps
push
mov
inc
leave
shll
out
imul
pop
pop
mov
fistps
adc
cmpb
xchg
mov
hlt
out
or
mov
and
int3
push
and
add
insb
mov
xor
xor
mov
cmp
test
lret
sbb
dec
in
shll
int
out
pusha
mov
movsl
inc
popa
bswap
inc
popf
ds
stc
ret
mov
jmp
dec
es
dec
loope
adc
jecxz
add
push
mov
cmpsb
inc
div
outsb
pop
inc
push
and
scas
fnsave
aas
lods
sub
jne
xchg
mov
jnp
mov
outsb
cld
fstl
sub
fldenv
fbld
mov
subb
hlt
gs
and
icebp
adc
mov
push
mov
sub
lds
xor
adc
les
adc
out
cmc
jg
in
int3
fsubs
pop
xor
les
ret
mov
xor
push
sbb
adc
or
push
push
xor
cmp
adc
adc
adc
sahf
add
adc
push
or
arpl
push
aad
add
fs
lret
daa
pop
xchg
push
daa
cld
jle
rorb
repnz
jo
add
sarl
xchg
mov
inc
inc
shll
roll
inc
cmp
aad
push
stos
or
mov
mov
sbb
mov
sub
pop
sub
sbb
ret
push
adcl
add
sbb
cli
mov
xor
aaa
out
dec
imul
jae
je
adc
or
sub
xchg
and
pop
cmp
loopne
scas
bound
dec
mov
sub
cli
xchg
or
push
sub
test
xlat
dec
addr16
xchg
jo
loopne
lds
mov
push
ljmp
mov
lret
insl
arpl
popf
aad
push
cmp
mov
fnstenv
pop
jl
or
add
dec
jae
icebp
pop
jecxz
and
out
stos
jne
loope
sbb
in
test
js
dec
inc
pusha
imul
mov
cmp
mov
test
notl
lods
pop
add
xchg
inc
pop
cmpsl
out
int3
lods
jge
jl
add
inc
loope
push
inc
insb
scas
pop
fmul
and
fmuls
scas
push
sbb
cs
and
lret
inc
mov
inc
push
and
sahf
jle
sub
mov
cld
mov
nop
pop
mov
fistpll
daa
movsb
fsubs
insl
lea
and
sbb
mov
mov
je
push
cmp
xchg
pop
xlat
mov
mov
sahf
adc
out
test
rcl
ss
cmpsb
ret
das
pushf
popf
mov
andl
pop
pop
push
or
mov
dec
mov
mov
decl
movsb
adc
pop
das
inc
loope
shr
out
test
lock
xchg
inc
or
jb
sub
fiadds
enter
sbb
jo
push
xchg
scas
scas
and
int
pop
lret
mov
aaa
lods
mov
fwait
mov
push
inc
std
js
popf
jmp
scas
adc
popf
fs
ja
xchg
cmpsl
mov
dec
xchg
or
sub
test
jbe
mov
fadd
mov
sbb
adc
mov
fisubrl
cmp
or
nop
jle
sbb
mov
outsb
loope
xor
add
cmp
inc
jb
or
lahf
cmp
mov
fnsave
in
xchg
push
xor
xor
enter
add
enter
jmp
jmp
cli
aaa
push
imul
stos
mov
xor
mov
xor
ror
mov
xchg
movsl
enter
mull
cltd
cmpsl
aam
adc
popa
fsubrl
adc
iret
and
out
jo
add
out
xor
jns
out
push
cmpb
addr16
sub
jne
lods
dec
push
pop
fisttpl
mov
xchg
ja
push
sbb
outsl
push
pusha
aad
imul
xchg
sub
pusha
mov
pop
lods
pushf
push
scas
test
mov
jns
out
adc
dec
and
lret
les
aas
jge
daa
xchg
add
sbb
mov
and
push
push
inc
pop
fdivl
daa
and
js
xchg
sub
ja
js
mov
into
jbe
rorb
mov
sarl
cmp
jg
pop
scas
int3
loop
fs
loopne
cmp
out
mul
cmp
cmc
jl
mov
decl
and
mov
mov
lods
flds
loopne
mov
mov
sub
cmp
pop
mov
insb
jno
sub
mov
jne
cmc
cmp
bound
addr16
push
push
ror
cmp
inc
cmpsl
inc
xor
sbb
xchg
pop
xchg
mov
stc
out
dec
loopne
int
jg
cld
xchg
pop
add
fsubl
or
lods
push
mov
jmp
js
shll
mov
xor
mov
sub
xchg
sbb
jnp
jmp
add
inc
iret
jns
sbbb
mov
cli
pop
mov
add
ljmp
test
cltd
mov
ja
xchg
fidivs
fsubrl
test
mov
scas
ret
and
dec
rclb
negb
or
xor
inc
iret
shl
addr16
aas
rol
xor
es
add
sbb
mov
xchg
pop
sti
sbbb
inc
xchg
pop
arpl
lahf
mov
jl
stos
adc
mov
insl
or
xchg
mov
ss
outsb
ds
mov
stc
aad
scas
mov
cmp
aad
scas
cmp
rcll
or
jnp
bound
rorb
fwait
or
out
fs
ljmp
xchg
sub
jnp
cmp
rorl
lods
xchg
mov
push
xor
sti
jns
cs
movsl
lock
repz
and
cmp
jo
loopne
mov
sub
push
or
and
fisttps
jmp
pop
sbb
xor
repz
shlb
shll
call
out
fistl
in
and
gs
out
out
xchg
adcl
xor
insl
jbe
dec
aad
xchg
daa
adc
sub
push
or
loop
imul
inc
fs
sub
lcall
lea
dec
mov
mov
test
or
push
lods
pop
inc
pop
xchg
xor
or
out
xchg
jbe
loopne
arpl
or
repnz
mov
pop
pop
cld
jl
pushf
ret
mov
fwait
roll
popf
iret
adc
je
sub
inc
mov
cltd
clc
push
stc
xchg
mov
fcomps
call
push
enter
rcrl
adc
or
out
and
mov
xchg
mov
push
pop
inc
pop
xor
out
jecxz
fwait
sbb
iret
imul
fisubrs
or
xchg
fisttpl
popf
xchg
icebp
stc
push
adc
mov
ljmp
push
call
or
roll
inc
pop
add
adc
inc
popa
pop
std
icebp
mov
les
xorb
and
mov
cmp
inc
sbb
cmp
xchg
addr16
pop
shlb
repnz
das
pop
jae
mov
pop
inc
push
sub
sub
popa
push
push
or
add
icebp
loop
pop
mov
sub
cwtl
xor
mov
pop
sbb
mull
scas
adc
lahf
mov
pop
hlt
fadds
scas
sub
push
mov
cltd
test
sbb
mov
gs
cmpsb
jle
pop
adc
pop
cmpl
pop
pop
push
scas
xchg
fidivrl
xchg
fistpll
jo
pop
aam
sbb
xchg
push
jnp
shlb
sub
lods
pop
loopne
fldl
sbb
inc
mov
push
mov
fwait
testl
and
movsb
jle
jl
cmp
ret
repnz
sti
inc
jmp
and
mov
xchg
and
inc
in
inc
xchg
sub
mov
mov
adc
stos
mov
jne
and
mov
push
divl
enter
ret
js
outsb
ds
outsl
popf
inc
sub
ja
adc
add
test
add
pop
loop
hlt
sub
subb
jmp
outsb
vmread
mov
adc
ljmp
jg
sub
out
mov
fcom
shll
xlat
pop
rcrl
cltd
mov
shl
xor
inc
dec
jmp
lcall
push
add
cld
int3
or
mov
repz
out
xor
sub
mov
addb
sar
and
fcoml
and
mov
inc
lods
loope
std
and
in
and
and
outsl
pop
sub
lahf
arpl
mov
sub
inc
cmpsl
adc
cmp
mov
out
pop
pop
inc
adc
pop
dec
mov
popf
mov
sub
addr16
cli
inc
adc
jae
hlt
int3
cmp
frstor
sub
jns
mov
sbb
pop
lcall
dec
dec
les
mov
imul
adc
pop
cmp
aaa
mov
and
mov
dec
repz
push
mov
imul
xchg
cli
pop
jecxz
pop
sahf
dec
cmp
inc
rorl
inc
mov
cld
cmp
mov
fistl
movsb
sbb
stc
mov
les
lcall
jbe
mov
shrb
xchg
dec
ljmp
ss
push
sbb
jmp
push
mov
add
and
lock
dec
subl
or
lea
adc
enter
xchg
dec
mov
xor
dec
push
sahf
adc
dec
fs
lds
ja
push
xchg
sub
sbb
jg
lahf
nop
lret
pop
js
mov
daa
or
xchg
pop
add
lret
pop
lcall
push
or
loopne
mov
sub
sbb
jbe
aam
and
cmc
pop
iret
xchg
xchg
loope
mov
ficomps
cwtl
mov
mov
pushf
movsl
mov
scas
xor
sub
push
pop
leave
pushf
pop
xor
ret
or
or
ljmp
cmpsl
out
push
outsl
push
xor
nop
rol
adc
les
repnz
mov
ljmp
push
imul
subl
dec
mov
je
adc
xchg
movsl
mov
cmp
lret
push
lahf
cmp
add
repz
push
and
mov
fwait
loope
sti
mov
stos
jmp
sti
dec
or
imul
cmp
dec
sbb
imul
lret
mov
fwait
jmp
sti
mov
stos
jmp
sti
dec
or
imul
cmp
dec
sbb
imul
lret
mov
sbb
sub
mov
stos
jmp
sti
dec
mov
imul
cmp
dec
sbb
imul
lret
mov
fwait
ljmp
fldt
jmp
sti
mov
movsb
mov
sub
jl
xchg
movsb
aam
les
push
add
or
mov
call
icebp
cwtl
shrl
pop
add
js
or
inc
sub
mov
call
icebp
cwtl
shrl
pop
add
js
or
inc
sub
mov
lcall
pop
mov
adc
arpl
sub
lret
mov
sub
dec
and
subb
mov
out
sbb
std
dec
or
popf
dec
and
daa
or
adc
push
mov
push
shrb
push
leave
add
cwtl
cmp
mov
push
jle
sti
test
popf
js
movsb
sub
xor
nop
das
popa
stos
popa
sbb
aaa
mov
sbb
mov
mov
imul
cmc
fiaddl
push
sbb
pop
sbb
insb
fcomi
cwtl
and
or
inc
js
cmp
and
jge
mov
aam
fisttpll
mov
pop
add
js
or
inc
sub
mov
call
icebp
cwtl
shrl
sbb
js
insl
cmp
outsb
adc
mov
loop
std
mov
test
and
je
daa
fs
pop
les
aam
test
movsl
cltd
mov
rcl
dec
or
adc
adc
inc
sub
mov
call
icebp
cwtl
shrl
pop
add
js
or
inc
sub
mov
call
icebp
cwtl
shrl
xor
jl
idiv
cmpsl
dec
jp
and
inc
adc
inc
sbb
adc
mov
test
mov
jo
shll
add
ss
adc
jmp
out
popf
mov
in
xchg
stos
pop
sub
cmpsl
or
repz
cmp
and
mov
xlat
xchg
shll
and
jmp
add
pop
xchg
imulb
mov
out
outsb
fmulp
mov
mov
xor
jns
mull
mov
not
je
xor
sub
sbb
repz
pop
cld
cmp
cmpsb
xor
mov
xchg
icebp
add
divb
and
loop
sub
rorb
mov
mov
jmp
mov
add
je
mov
imulb
call
cmp
ficompl
rclb
sbb
ret
insb
jl
mov
or
xor
rolb
leave
negb
mov
or
add
les
cmp
sahf
push
and
fsubrs
pop
push
fdivr
int3
xor
loope
repnz
jo
ret
cmp
aaa
cmpsb
shrl
rclb
push
pop
mov
je
shll
sahf
enter
shr
aas
std
or
sub
xbegin
or
pop
and
test
mov
mov
fsqrt
xchg
cltd
adc
test
js
push
mulb
and
jp
pop
cmp
push
movsl
out
mov
adc
pushf
jge
mov
xchg
lea
ss
mov
mov
adc
clc
in
inc
ja
sub
fimull
loop
jno
fnstenv
push
jle
push
push
leave
inc
pop
movsb
mov
sarb
mov
jecxz
push
cmpsl
jns
gs
mov
enter
pop
push
je
filds
cld
ds
xor
loopne
ss
mov
sbb
fnsave
lret
mov
jbe
les
and
imul
or
loop
xor
add
lock
cmp
and
dec
shl
jo
adc
ficoml
arpl
cmp
mov
push
int
or
adc
ret
fsubrp
sbb
lods
mov
adc
fstpt
jmp
mov
fstpt
push
or
sub
cmp
mov
or
ss
fldcw
fs
lea
jo
sbb
rcrb
jg
xor
xchg
lcall
pop
sti
pop
mov
push
pop
push
push
inc
fidivs
cmp
outsl
mov
ret
enter
inc
pop
sub
scas
iret
cltd
mov
test
bound
sbb
lcall
jnp
imul
in
or
or
xor
cmpb
push
es
dec
and
sbb
lock
pushf
mov
bound
or
push
inc
dec
ja
mov
pop
mov
test
ficomps
xorl
dec
das
hlt
sub
cmpsb
imul
repnz
pop
in
inc
shl
xchg
aaa
jge
lret
data16
hlt
cmpsl
movsb
imul
add
loop
cmc
or
jecxz
andl
sub
popl
out
inc
mov
cmp
scas
loopne
cltd
pop
push
pushf
iret
push
mov
mov
sbb
inc
add
pop
jno
ret
inc
addr16
lcall
std
xlat
hlt
jb
mov
push
lcall
push
ljmp
sti
ret
in
mov
in
test
repz
xor
or
je
dec
sbb
pop
xchg
push
add
out
xchg
sarl
mov
lock
mov
jg
sbb
sub
push
pop
lret
cmp
dec
adc
repnz
or
js
lea
xchg
fwait
xchg
insl
mov
cmp
cmp
sti
in
xlat
aam
cmp
adc
icebp
or
add
pop
adc
loopne
imul
dec
enter
push
jge
subl
idiv
clc
shll
icebp
xchg
in
mov
clc
cmp
push
out
add
sub
and
orb
pusha
mov
and
sub
jae
sbb
mov
ljmp
mov
jb
pop
stos
and
dec
in
mov
leave
arpl
adc
or
sbb
dec
or
add
inc
rorb
imul
in
ret
lret
lret
pop
sahf
negb
movsb
hlt
fwait
xchg
xchg
jecxz
jmp
xchg
or
lods
mov
into
dec
test
mov
add
and
dec
jge
insb
add
fisttpl
fldenv
mov
cmp
jle
pusha
mov
cmpsl
clc
xor
lds
adc
sbb
xor
int3
lock
ds
xchg
ljmp
sbb
and
mov
and
mov
and
push
pop
jns
sbb
mov
jmp
faddp
jno
dec
pop
mov
test
in
xor
xchg
fnstsw
push
push
sub
inc
jecxz
inc
push
xor
sbb
adc
pop
int3
ret
jmp
adc
or
dec
pop
inc
sbb
es
sub
pop
sub
lods
add
dec
loopne
iret
int3
stos
inc
outsb
popa
pop
cld
ror
lock
xchg
nop
ret
test
or
cltd
stc
pop
je
dec
jb
sbb
sub
jmp
jmp
clc
mov
call
inc
out
mov
push
push
into
dec
cmc
mov
mov
pop
jno
gs
lahf
xchg
mov
jns
xor
popf
or
mov
dec
sahf
push
inc
push
or
sbb
push
ds
repnz
shll
insb
sbb
mov
out
mov
cmp
jp
iret
and
hlt
fwait
mov
repz
test
jb
jno
mov
insl
in
xchg
jp
fistpll
jecxz
cmc
negl
or
jae
jg
pop
xor
int
and
fldcw
mov
lret
adc
push
repnz
dec
test
jnp
mov
mov
inc
pop
lds
sub
xorl
and
push
gs
imul
call
pop
lea
mov
sti
lds
ret
push
dec
push
or
lahf
imul
xchg
fsubs
and
sub
clc
mov
dec
adcb
xchg
cbtw
lret
cmp
and
rorb
in
shll
cmp
repnz
in
xchg
je
cwtl
in
mov
or
or
jecxz
dec
shl
adc
ss
sbb
imul
arpl
imul
mov
cltd
scas
fcomp
dec
jmp
test
push
pop
add
inc
fcomps
jnp
into
sub
jg
lock
in
add
mov
pop
les
jns
pop
xchg
aam
into
inc
fwait
test
sub
ja
lret
add
push
ret
inc
and
mov
ret
pop
mov
insl
mov
out
push
dec
jmp
test
mov
cmp
lods
pop
inc
pop
jg
mov
mov
xor
rcll
or
jle
jne
add
xor
sub
adc
mov
mov
mov
xchg
jle
insl
cltd
mov
sub
push
lret
push
push
imull
sbb
sbb
push
test
mov
inc
lret
push
nop
cltd
cmp
sbb
and
jnp
cmp
push
sub
add
int
lods
inc
adc
push
pushf
cmp
xchg
mov
cmp
or
push
sub
fisubl
xchg
cmc
xlat
aas
notb
adc
pusha
sti
icebp
fs
adc
sbb
in
sbb
and
fisubrs
fistpll
ljmp
jge
push
into
inc
mov
test
test
imul
jp
mov
mov
popa
sbb
shlb
scas
dec
and
movsb
add
mov
or
cmpl
cmpsl
jp
out
mov
fsubr
lahf
ss
add
xchg
vcvttpd2dq
xor
xor
mov
xor
add
fimull
out
mov
xchg
xor
and
cmp
dec
inc
xchg
xlat
test
sub
ficoms
daa
hlt
add
mov
dec
mov
mov
test
out
test
jp
or
aam
add
push
icebp
inc
fs
outsl
les
xor
in
fisttps
ljmp
fistpll
sbb
or
fnsave
gs
lcall
scas
push
or
rorl
cwtl
pop
fimuls
pop
cmp
add
fsts
or
mulb
pop
movb
mov
in
push
mov
push
nop
xchg
mov
jno
xchg
pop
loope
push
movsb
xor
pop
pop
dec
fistl
push
jg
or
jo
out
jg
loop
jb
scas
dec
xor
stos
add
jnp
ret
cwtl
pop
mov
jo
xchg
loopne
inc
mov
scas
sbb
bt
xchg
lock
pop
sbb
sub
sbb
inc
repz
and
adc
cmp
inc
jnp
fcoml
cmpsb
mov
and
cmpsl
int
xor
cmp
sub
dec
pusha
or
aad
inc
pop
and
mov
inc
loope
sbb
mov
push
ds
mov
dec
mov
fdivs
sar
lds
mov
cmp
mov
cmp
test
add
mov
fdivp
or
or
imul
sti
std
mov
pop
cmp
dec
push
insl
xor
bound
push
jl
mov
mov
push
xor
daa
xchg
or
outsb
outsl
mov
fnsave
imul
cmp
outsl
xchg
inc
cmp
cltd
fdivr
mov
inc
insl
xor
mov
push
mov
leave
add
xchg
push
outsl
or
fs
sti
std
arpl
jb
mov
add
loopne
dec
cltd
cmp
xor
aaa
stos
inc
hlt
std
xor
xchg
and
data16
mov
xchg
movzwl
lret
xchg
sbb
sub
jge
jbe,pn
mov
cmpsl
lea
xchg
dec
int3
and
jecxz
cli
clc
sbb
shlb
imul
inc
dec
cmc
mov
aaa
sbb
jb
mov
xchg
push
das
mov
popl
shlb
cli
mov
stos
dec
xor
loope
icebp
lods
pop
mov
scas
add
or
divl
jmp
pop
lret
fucomi
xor
xchg
fsubrl
jecxz
shll
xchg
mov
push
mov
or
fbld
ret
jbe
sbb
pushf
testb
and
sbb
push
aam
shll
enter
lcall
xlat
pusha
fcomi
repz
loopne
mov
mov
fucom
push
jb
and
mov
rorb
rol
cmpsl
xchg
les
xlat
mov
scas
out
pop
jge
into
nop
hlt
insb
test
ret
xor
enter
dec
imul
mov
imul
or
mov
push
add
js
xchg
dec
pushf
movsb
xchg
mov
xor
xchg
cmc
call
insb
fdivr
mov
std
cmc
fmull
stc
fsubrs
cld
mov
fbld
inc
add
xlat
xchg
test
adcl
add
and
jno
xor
lods
mov
jbe
dec
call
push
stos
mov
loopne
sub
xchg
xor
imull
popa
jl
pop
push
sbb
popa
and
cs
or
fcompl
sbb
and
xor
aad
add
push
pop
mov
in
fsubs
sub
or
or
repz
sbb
push
inc
mov
lds
mov
popf
addr16
push
in
xor
sbb
xor
pop
xchg
jg
aaa
inc
mov
jg
pop
test
and
gs
pop
or
es
cmpsl
sbb
mov
rcrl
mov
rclb
arpl
addr16
add
dec
or
xor
nop
aad
push
test
repz
push
scas
test
jb
shlb
pop
cs
sub
stc
pop
call
mov
popf
add
push
stos
out
xor
nop
sub
fdivrs
lahf
xor
cmp
lods
and
sahf
xchg
cmc
sbb
fsubr
movsl
inc
or
sub
loopne
adc
ds
add
and
ret
dec
cltd
jo
sbb
mov
call
inc
outsb
mov
pushf
mov
cmpsb
sbbb
mov
sarb
pop
ret
dec
and
movsl
fldl
lret
movsl
jecxz
es
popa
jmp
cs
cltd
test
sbb
cli
push
mov
cmp
xchg
or
cs
dec
push
hlt
int3
sbb
jae
xchg
mov
mov
mov
aas
mov
stos
or
pop
cmpl
mov
aaa
cmc
clc
lret
arpl
pop
pop
negb
enter
ljmp
adc
push
cmp
je
repz
pop
enter
cmpsl
loope
leave
fmuls
fsubrl
mov
push
je
jae
jbe
clc
xor
jg
sub
mov
pusha
js
or
mov
or
fs
fildl
iret
cmp
xchg
ret
movsl
sub
scas
xchg
fdivrs
call
fisubs
subl
mov
mov
dec
jg
loopne
adcb
fbld
dec
les
mov
sub
push
popf
sub
adc
inc
scas
inc
arpl
xor
test
popf
add
dec
cli
cmpsb
daa
pushf
jle
scas
mov
addr16
mov
sub
loope
inc
inc
pop
mov
pop
pop
push
out
jns
fnstcw
or
xchg
mov
movsl
subl
roll
dec
lret
aaa
int
icebp
sarl
or
xchg
adc
loope
ret
ficompl
pop
add
sbb
dec
sub
jb
jl
jge
sbb
xlat
imul
out
xor
or
dec
loope,pt
into
ss
pop
mov
mov
movups
sbb
pop
cmp
ds
lret
inc
pop
testb
aaa
xchg
sbb
add
mov
aam
jg
movb
mov
and
out
popf
and
fwait
sar
mov
or
pop
popf
mov
repnz
xor
imul
fcmovbe
movsb
mov
inc
jnp
pushl
adc
stos
inc
mov
xchg
mov
leave
cmp
fsubs
or
cli
inc
lret
ficoml
lcall
lret
mov
mov
cmpsl
packsswb
xor
repnz
sbb
or
inc
das
movsl
dec
push
insl
scas
mov
mov
mov
pop
inc
xor
js
out
scas
and
enter
int
sbb
out
and
cmp
int3
pop
int3
gs
cltd
aam
lods
in
fisubl
xchg
rorb
fisubrs
xor
push
sbb
addb
adc
adc
in
test
pusha
jg
and
or
and
cmp
orw
data16
sti
dec
adc
inc
ret
mov
push
das
lahf
add
pop
cmp
cld
xor
and
jo
mov
pop
pop
or
or
and
pop
sbb
lds
fcmovu
std
jne
inc
mov
jbe
lret
pop
sbb
mov
jp
ss
lahf
ret
adc
mov
jmp
bnd
fldenv
imul
je
sti
push
je
pushw
bound
fcmovbe
cmp
push
push
aad
jo
ret
notb
js
mov
arpl
mov
iret
and
inc
scas
dec
pop
dec
dec
push
sbb
call
insb
sbb
out
inc
in
aad
add
adc
into
sarb
lahf
test
pushf
jecxz
adc
movsb
mov
push
sbb
sarl
sbb
mov
pop
push
insl
rclb
imul
xorl
mov
lret
rcll
mov
push
jmp
jne
mov
push
ret
test
mov
jge
lcall
inc
xor
lock
add
es
fxch
sar
out
dec
pop
xor
shll
push
iret
dec
mov
aam
push
sbb
xchg
sub
inc
mov
and
insb
movsl
and
out
push
jg
sbb
mov
out
ljmp
or
and
and
adc
and
push
sbb
add
push
pop
stos
sub
or
or
cmp
jmp
and
push
inc
pop
mov
std
faddl
mov
jle
pop
inc
add
jecxz
ja
test
leave
icebp
cmp
xor
in
sbb
mov
mov
mov
repnz
inc
mov
adc
addr16
mov
adc
sbb
or
and
push
mov
ret
xor
cmp
insl
das
xor
dec
fdecstp
nop
pop
add
loope
mov
es
xchg
fcoms
pushf
gs
in
fwait
inc
mov
add
push
int
lods
mov
adc
push
xor
mov
imul
lret
bnd
mov
mov
jo
xor
lock
insb
lahf
movsb
mov
jl
cmp
push
lea
inc
mov
pop
and
push
pop
icebp
fwait
repz
enter
jne
insb
inc
ret
out
or
sti
mov
nop
mov
rcl
fwait
ljmp
xor
fnstcw
adc
sub
repnz
mov
into
out
xchg
add
cs
int3
pop
cmp
imul
lret
outsl
pop
sub
jne
push
mov
mov
call
pop
popf
pop
cli
es
xor
filds
sbb
pop
mov
sbbl
adc
fmuls
sub
fmulp
adc
pusha
pop
push
push
mov
fisubrl
mov
xchg
and
stos
lea
sub
jg
aaa
xor
mov
stc
sub
jmp
mov
shl
inc
rcr
aaa
mov
fld
add
pop
jns
cmp
popa
sub
push
xor
or
push
inc
mov
push
icebp
test
call
push
adcl
in
out
jge
jmp
stc
mov
inc
or
cmpb
iret
push
jmp
call
ret
ja
sub
or
xchg
int
hlt
mov
mov
pop
rclb
or
test
or
ret
sti
and
add
pop
clc
call
mov
xchg
or
xor
pop
cs
ret
push
cli
sbb
pop
test
leave
pop
jb
imul
repz
in
fnstenv
dec
mov
daa
mov
mov
mov
adc
in
cltd
fwait
xor
test
pushf
mov
arpl
inc
push
xor
int3
mov
pop
in
lock
adc
iret
inc
adc
cltd
or
fucomi
shrl
sbb
xchg
pop
sbb
in
cmp
mov
push
popa
addr16
jmp
icebp
mov
ret
sahf
sub
dec
jnp
jmp
insl
mov
andb
xchg
repnz
cmp
lcall
dec
mov
jno
xor
and
popa
outsb
idiv
adc
or
call
jg
or
dec
shll
inc
lods
cmp
cmpsl
xchg
fstpl
loope
test
shrl
sbb
pop
lock
dec
dec
xchg
fisubrl
mov
jne
mov
ds
ja
xor
stc
scas
or
jl
repnz
gs
xchg
add
sbb
mov
pop
xchg
push
mov
mov
pop
or
dec
mov
push
adc
rcr
sub
rcrb
je
outsb
xchg
gs
rcl
ret
mov
insb
xor
and
jnp
push
xchg
adc
xor
out
test
scas
mov
xor
test
out
mov
lcall
cmp
dec
sti
push
add
add
jns
mov
ffree
rcll
add
push
pop
in
repnz
ljmp
mov
imul
popf
push
cmp
dec
xor
sub
push
repnz
pop
das
repz
push
fbld
and
lds
bsr
pop
push
orl
and
push
and
sub
cmpsl
test
and
aad
pop
cwtl
das
mov
sub
scas
imul
inc
outsb
pop
sub
push
outsl
push
inc
movsb
pop
fistpl
push
loope
mov
imull
or
scas
dec
test
adc
or
inc
sub
mov
call
icebp
cwtl
shrl
pop
add
js
or
inc
sub
mov
call
icebp
cwtl
shrl
pop
add
js
or
inc
sub
mov
call
icebp
cwtl
shrl
pop
add
js
or
inc
sub
mov
call
jns
ds
cs
pop
test
and
pop
fldt
addr16
jb
es
add
mulb
test
mov
cmpsb
sbb
inc
xor
push
push
inc
mov
arpl
and
mulb
xchg
mul
cmpsb
leave
les
fs
sub
cmp
fwait
ds
or
movsl
aad
ret
rcrl
push
push
and
ja
push
xor
and
lea
pusha
mov
xor
cmpsb
or
or
fstl
sub
fiaddl
pop
mov
fs
repz
dec
sahf
dec
notb
push
inc
jb
outsb
sub
adc
insb
mov
ds
nop
pop
lods
rcrl
inc
dec
jnp
imul
xchg
jbe
mov
xchg
jnp
dec
data16
push
push
mov
flds
ret
pop
sbb
sarl
sbb
xchg
inc
scas
int3
and
rolb
sub
push
test
dec
xor
xchg
xchg
add
int3
xchg
push
mov
fisubrl
jnp
mov
mov
jns
mov
and
push
add
push
push
pop
push
jae
imul
scas
mov
fnstsw
mov
enter
inc
ja
dec
dec
cmp
pop
add
nop
ret
add
mov
mull
je
call
xor
stos
mov
nop
xchg
iret
andl
add
add
bound
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
adc
inc
xor
push
push
inc
push
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
adc
xchg
fwait
aad
dec
pop
sub
adc
insl
rclb
xor
inc
hlt
push
xchg
pushf
and
outsb
inc
pop
xchg
pop
xchg
movl
mov
shlb
int3
and
mov
test
pop
cwtl
fneni(8087
mov
push
pop
push
ss
jle
fsubl
lea
or
sub
or
add
add
jp
call
je
es
mov
mov
sbb
jbe
sub
lret
jae
jge
xchg
jmp
iret
stos
mov
inc
mov
or
push
cld
sbb
setge
xorl
test
push
lock
clc
xor
lods
xor
je
cmp
xchg
pop
xchg
xchg
insb
test
bound
jmp
sbb
sub
out
popf
inc
mov
lods
add
xor
mov
rorb
arpl
inc
pop
pushf
fists
mov
mov
or
push
sar
adc
and
xchg
push
adc
leave
xchg
jmp
dec
mov
gs
xchg
int
lods
sbb
clc
pushf
hlt
jl
fsubp
test
into
popa
mov
push
in
sub
sahf
shrb
dec
daa
adc
mov
add
cld
into
fidivl
hlt
xchg
dec
ss
mov
push
ljmp
pusha
jno
sahf
mov
cmp
lods
xor
mov
mov
dec
xor
pop
mov
dec
jo
adc
lea
stc
test
imul
xor
push
dec
rolb
push
inc
imul
xor
sbb
int3
iret
mov
push
insb
jle
jno
test
gs
sub
mov
imul
ds
popa
clc
scas
mov
stos
sahf
jae
inc
dec
xor
mov
and
push
mov
iret
push
popa
and
add
adc
hlt
push
add
test
idivl
inc
arpl
loope
sub
lds
cli
iret
mov
mov
divb
icebp
inc
lcall
clc
paddusw
ja
imul
push
pusha
and
cwtl
test
push
cs
lods
enter
cmp
loope
xor
and
fldz
les
xlat
ret
mov
dec
adc
rolb
mov
out
xlat
add
pop
stos
mov
daa
pop
outsb
jmp
popf
pop
loop
push
adc
xor
xchg
cli
push
mov
or
push
repz
sub
mov
leave
pop
ja
and
inc
and
sbb
lds
fmuls
popf
pop
fists
out
adc
pop
mov
mov
mov
mov
lock
fstpl
adc
shl
add
adc
pop
movsl
fisubrs
inc
and
push
jae
cmp
xor
div
mov
dec
push
add
ja
and
xchg
adc
stc
cmp
or
jle
loop
mov
int3
leave
ss
es
mov
cld
lods
test
xchg
mov
jecxz
xor
ljmp
push
fcompl
push
dec
cmp
xor
xchg
jo
jb
jo
outsl
or
pop
imul
movb
xor
scas
aaa
jmp
cmp
push
lock
push
std
mov
in
dec
fdivrl
imul
pop
cmp
ljmp
mov
orl
push
xor
jae
stos
sbb
je
sbb
mov
outsb
lret
mov
in
pop
adc
xchg
xor
jo
ficomps
mov
xor
jb
sub
xchg
outsb
cmp
adc
fcom
cld
and
lret
xchg
out
add
add
mov
jae
pop
outsl
loop
pop
push
or
xlat
sar
and
jnp
iret
inc
lahf
aaa
sbb
movsb
cmp
out
imul
out
mov
stc
mov
jecxz
cmpb
mov
or
push
out
inc
pop
jne
daa
out
xor
popa
sbb
flds
scas
jb
push
aas
sarl
pop
mov
mov
sub
out
in
adc
xor
mov
mov
push
push
or
xor
dec
loope
mov
shl
fldl
and
dec
or
frstor
jb
lea
cwtl
popf
fidivrl
pop
inc
into
add
loop
fdivrl
mov
aam
negb
inc
add
mov
cmp
mov
adc
adc
fldcw
cwtl
sub
into
pop
inc
movsb
and
jo
mov
mov
scas
adc
enter
cmp
pop
push
std
shlb
popl
ficompl
bound
sub
push
lods
scas
bound
ds
arpl
jnp
popf
cmp
dec
add
shr
jmp
jp
pop
dec
xchg
mov
ds
aam
mov
arpl
mov
jns
in
pop
aaa
mov
pop
loop
das
out
in
dec
sarl
jp
jno
lea
ret
xlat
pushf
mov
lods
jb
repz
xchg
push
dec
mov
lods
dec
fidivl
sub
xchg
call
out
and
jo
jns
dec
adc
stos
dec
aas
gs
xor
inc
sub
fwait
dec
cs
xlat
nop
insb
arpl
inc
cmp
bound
cld
scas
stc
xor
mov
sti
lea
jmp
insb
lahf
in
outsb
sbb
mov
sub
lds
test
mov
rcrl
popa
push
into
push
je
imul
push
or
xor
pusha
stc
outsb
outsb
mov
std
movsb
mov
in
sbb
pop
pop
dec
or
adc
xor
repz
mov
push
mov
mov
test
adc
and
loope
or
cli
mov
out
je
in
aam
icebp
adc
inc
pop
pop
and
xor
mov
rcrl
stc
mov
imul
xor
iret
popa
data16
fsubp
cli
jne
rcl
scas
cmp
dec
xlat
mov
mov
pop
lahf
fwait
cmc
gs
xchg
mov
imul
hlt
push
ret
jns
xlat
fmuls
xor
test
lahf
sub
icebp
xor
mull
aas
data16
sbb
jle
or
nop
iret
mov
popa
sbb
cmpsb
fiadds
int3
push
xchg
pushf
mov
sbb
push
inc
sbb
mov
dec
mov
pop
fstl
out
leave
fmul
jle
aam
cld
cmp
sbb
xchg
push
pushf
xchg
adc
adc
movsb
test
movsb
int3
cmpsb
adc
jae
mov
mov
dec
sub
push
adc
out
or
shrb
addr16
popa
jbe
call
lea
mov
pusha
popf
js
pop
clc
mov
popa
jmp
enter
push
xor
scas
and
and
sub
dec
xlat
xor
insb
adc
sub
sub
lods
loopne
xchg
out
xlat
xor
dec
maskmovq
testl
pop
out
fimull
mov
aas
mov
ret
mov
or
fcmovu
das
pop
cmovo
sbb
jbe
xlat
xlat
add
adc
iret
je
pop
bound
call
out
add
push
xor
fisubs
fs
cmp
imul
xlat
jl
jnp
jg
pop
stos
add
roll
dec
test
fucomi
popl
and
adc
stc
aas
pop
cmp
in
mov
mov
ret
pusha
xchg
mov
xlat
addr16
popa
jns
fidivs
and
scas
sub
mov
cmpsb
fxch
mov
ret
into
les
popf
loop
ss
mov
xor
sbb
push
bswap
lods
popf
mov
mov
cmp
int3
loopne
daa
lahf
loopne,pn
fdivl
adc
sbb
mov
incl
lahf
rorb
inc
cld
outsl
aaa
jl
lods
adcb
inc
shl
adc
out
add
cmpsb
push
aad
enter
hlt
ftst
scas
es
or
jno
iret
sbb
das
push
xchg
in
iret
mov
cmp
es
sbb
mov
or
fdivl
push
incl
out
subb
sti
xor
fidivs
repz
adc
jmp
repnz
das
das
and
lds
addr16
jge
std
adc
rol
pusha
sarb
adc
fsubl
fs
cmc
js
mov
jo
fiaddl
push
cmpsl
into
dec
test
pop
fs
les
push
aad
fisubrl
adc
or
lds
push
je
or
das
out
dec
dec
add
ss
sti
cld
and
xchg
or
or
dec
lods
cmp
data16
and
adc
add
test
shlb
mov
sub
addr16
push
out
shlb
lds
push
adc
xor
lods
sti
mov
icebp
inc
or
imul
pop
pusha
adc
mov
fadd
jecxz
daa
stc
push
fisubrs
js
inc
loopne
and
pop
mov
idiv
dec
imul
clc
xor
leave
jg
in
mov
dec
icebp
lahf
mov
pop
cmp
fisttps
sbb
fidivrs
icebp
enter
insl
inc
cld
sub
jno
xorb
and
xchg
pop
xchg
popf
xchg
mov
jae
pop
mov
dec
loopne
in
adc
fstps
stc
int3
mov
xlat
sarl
or
sub
mov
adc
sub
int
pusha
dec
out
adc
push
mov
icebp
insl
jnp
in
jge
pop
mov
stc
xchg
mov
test
or
mov
nop
mov
push
insl
test
xchg
aaa
mov
jae
outsb
mov
cmpsl
jge
or
imul
cmc
jp
push
nop
pop
movsb
mov
mov
cmp
jp
inc
cmpsb
fadd
mov
or
add
icebp
daa
cmp
inc
insb
sub
cmp
dec
xchg
mov
or
fyl2x
shlb
and
aaa
sar
int
lock
outsb
lds
and
mov
or
jle
mov
lret
push
sbb
iret
scas
repnz
mov
sbb
and
push
push
test
loope
adc
inc
mov
sbbb
pop
push
xchg
lods
cmp
jge
cmp
test
push
add
sbb
jle
jne
sub
out
shll
lret
push
lret
sar
jg,pn
push
divl
adcl
sub
mov
mov
in
xchg
mov
xor
and
push
add
dec
xor
scas
mov
lcall
leave
add
out
movsl
repz
adc
ss
sbb
sub
fdivrp
iret
aam
and
pop
jne
xchg
lods
out
inc
xchg
cmc
cs
pop
lret
outsl
and
lods
inc
dec
pop
in
add
sub
addl
mov
cmp
pop
jmp
or
mov
xchg
xchg
xor
and
scas
jo
xchg
repz
sub
out
leave
xor
mov
dec
pushf
cld
push
sub
lahf
jbe
out
jne
clc
mov
mov
xor
cs
sbb
mov
xor
push
mov
add
nop
sarl
aam
push
dec
push
hlt
negl
movsb
inc
fldenv
sahf
pushf
push
imul
pop
pop
sbb
and
aad
jnp
faddl
frstor
and
sbb
mov
pop
sub
call
or
mov
enter
jmp
pop
pop
jb
adc
jg
sbb
mov
and
add
mov
adc
mov
int
sarb
adc
pop
imul
dec
lock
mov
hlt
adc
mov
enter
subb
jns
cmpsb
mov
psrad
xchg
jbe
adc
outsb
dec
lea
dec
sub
fwait
lcall
inc
lods
fsincos
and
insb
mov
pop
sub
jb
stos
dec
arpl
mov
or
lods
xor
js
cmp
jecxz
mov
pusha
sti
ds
push
popf
mov
sbb
into
push
popa
or
mull
out
xchg
into
fwait
in
mov
cmp
push
fstpt
stos
push
out
adc
pop
fcmovnbe
push
subb
outsl
mov
call
dec
mov
sub
sub
scas
mov
mov
mov
psllq
mov
adc
add
add
cmc
sbbb
mov
push
adc
cmpsb
orl
sub
mov
rolb
loopne
incb
imul
sbb
stos
movsl
or
mov
mov
and
push
into
clc
mov
xor
cmp
imul
sbb
clc
sahf
xor
mov
jp
sbb
int3
mov
stos
out
jno
add
cmc
cld
test
cmpsl
clc
fcoms
dec
lds
aas
shll
hlt
xor
outsb
xor
mov
jo
lcall
aad
and
call
push
lahf
xchg
sub
les
push
xor
inc
inc
mov
push
mov
call
pop
mov
dec
pop
repz
scas
jmp
ss
adc
xlat
mov
adcl
es
test
andb
mov
hlt
ja
fs
repnz
ss
insl
fmuls
and
push
and
xlat
imul
mov
xor
sub
dec
cli
mov
rcrb
enter
into
cmpsb
cs
xchg
repz
jecxz
pop
pop
xchg
bound
cwtl
mov
pop
insl
stc
daa
jecxz
push
test
out
jbe
push
add
sub
test
push
js
add
call
leave
push
mov
mov
pop
cwtl
add
fwait
adc
daa
arpl
dec
mov
pop
iret
pop
mov
cmp
or
stc
lcall
mov
adc
pusha
cld
sbb
or
imul
popf
shll
jmp
adc
cmp
hlt
mov
stos
hlt
lock
mov
rolb
mov
adc
push
jl
pop
jg
cmpb
or
mov
out
sub
mov
pop
stos
repnz
fimull
clc
icebp
mov
ret
inc
adc
cld
pusha
lret
test
out
mov
shr
add
or
jg
dec
data16
mov
xor
in
or
mov
add
jge
popl
inc
popa
push
insl
pop
loop
sbb
iret
es
test
mov
jmp
jge
lret
data16
mov
jmp
mov
test
shrb
icebp
addb
clc
jns
nop
cmpsl
xor
loope
jnp
fcomps
mov
stos
push
scas
jle
pop
pop
fxch
mov
or
sbb
jno
push
jp
notb
mov
mov
pusha
and
jne
dec
sub
sub
jo
jl
add
add
xchg
lock
shrb
pop
xchg
arpl
xor
or
mov
iret
adc
dec
in
sti
add
mov
lahf
bound
mov
adc
sbb
xor
dec
movsb
jns
lret
pop
data16
sub
outsb
mov
jo
into
and
cmp
clc
cmpsl
xchg
sti
mov
nop
mov
mov
xor
pop
out
iret
repz
daa
adc
jae
sarl
mov
mov
or
in
mov
lods
cmc
arpl
in
mov
loope
cmp
mov
frstor
in
push
adc
les
push
nop
sub
lock
test
repz
enter
and
dec
insb
repz
andb
sbb
xchg
push
stos
adc
outsb
jl
in
arpl
sbb
or
jge
pop
dec
mov
mov
pop
iret
xor
sbb
loope
mov
in
std
add
arpl
lds
mov
pop
mov
clc
in
and
xorl
sub
jge
pop
shlb
incb
shl
int
sbb
gs
mov
push
or
ljmp
ss
adc
adc
leave
leave
sti
adc
mov
out
inc
pop
add
std
sub
pop
lods
pop
out
xchg
inc
dec
lret
pushf
ss
movsl
inc
scas
mov
add
aaa
or
loop
adc
cltd
and
insl
push
jo
rcpps
mov
jns
sti
and
dec
outsb
inc
popf
sub
cmp
lcall
in
inc
imulb
mov
aam
jne
add
mov
sbb
jmp
or
bswap
mov
inc
jmp
pop
scas
andb
in
enter
insb
stos
test
ret
in
mov
jmp
jl
sbb
mov
pop
add
xchg
sub
iret
add
test
xor
push
test
lea
sbb
jbe
cwtl
xchg
lds
dec
into
movsl
cmp
push
out
adc
jmp
orb
mov
dec
scas
pushf
clc
or
insl
sahf
aam
popf
jb
dec
mov
stos
pusha
movsl
xorb
popf
out
mov
nopl
push
ret
jb
dec
dec
mov
lea
fstps
dec
mov
mov
or
adcb
cmp
push
xor
lret
lods
jbe
loop
test
mov
xlat
mov
sub
mov
jmp
push
out
rorl
notl
jae
sub
ja
scas
cmp
pop
inc
adc
cs
add
dec
and
jmp
push
stos
push
imul
mov
aam
inc
pop
pop
lock
mov
cltd
cld
or
jge
dec
pop
jp
sbb
or
or
and
aad
dec
cmpl
or
in
ret
pop
or
cmpsb
clc
mov
sub
push
cmp
mov
fsubs
or
das
push
outsb
pushl
mov
inc
mov
and
or
add
mov
sbb
inc
testl
jb
adc
lods
xchg
dec
stos
or
faddl
mov
sahf
and
dec
dec
test
popf
mov
jae
loop
push
mov
cmc
jecxz
mov
insl
loope
ja
sbb
inc
add
push
ret
xlat
cmp
or
push
arpl
and
dec
in
mov
in
pop
hlt
jnp
jo
ja
lds
mov
xchg
sbbb
adc
jmp
das
adc
call
das
fdivs
lods
mov
pop
xchg
pusha
lds
icebp
lret
xchg
mov
mov
cld
push
or
add
loope
sti
in
movsb
cltd
fildl
das
adc
jno
movsl
cli
or
mov
add
jo
inc
sub
sarl
and
das
add
pop
cmp
aad
or
mov
sbbl
repz
cmpsb
mov
nop
fwait
test
mov
add
cwtl
je
or
ret
ja
mov
loopne
mov
pop
mov
insl
pop
add
adc
rcl
mov
pop
adc
aam
inc
sbbl
outsl
mov
dec
nop
inc
int3
and
fistpll
mov
sbb
mov
inc
rcr
pop
jl
fs
push
dec
mov
les
inc
push
rcr
adc
gs
pusha
jge
sub
jo
xlat
sti
fimull
sbb
xor
cmp
xchg
loopne
dec
jmp
les
lods
jle
sub
sub
mov
rclb
scas
lahf
mov
adc
popl
lds
mov
jb
dec
iret
in
jl
add
jecxz
add
jne
mov
jo
fwait
jle
gs
ljmp
lcall
sub
movsl
or
sbbl
add
nop
aas
lret
push
mov
int
lea
inc
fiadds
popf
loop
jp
sbb
push
sbb
enter
inc
and
push
mov
mov
add
and
loopne
dec
call
sahf
push
mov
ljmp
push
mov
mov
cmp
cmpsl
inc
orb
mov
ljmp
ret
pop
iret
fstpt
out
cmpb
hlt
push
jae
pop
cmp
cmp
insb
bound
hlt
add
sbb
insl
andl
pop
mov
adc
mov
pop
out
jge
mov
dec
inc
xchg
dec
ss
cmp
fildl
cmp
lods
xorl
xor
fstl
cld
add
loopne
mov
mov
hlt
mov
imul
jae
hlt
fisubs
inc
jp
push
rol
xor
sub
into
shrb
dec
rcrl
icebp
outsl
scas
add
adc
iret
or
sarb
pop
fisubrl
lret
gs
repnz
add
fwait
test
adc
xchg
add
mov
push
fidivrl
and
adc
xor
cmp
es
mov
adcl
fs
fdivl
mov
insb
mulb
dec
jbe
xchg
roll
shrl
leave
nop
inc
sarb
push
inc
nop
test
movsb
leave
mov
mov
in
pop
inc
xchg
push
mov
test
adc
jbe
mov
mov
in
pop
fwait
scas
aad
shl
fdivs
cwtl
cmovae
ret
ret
xor
pop
jle
add
in
dec
mov
dec
xchg
js
out
fists
jae
dec
sub
data16
inc
mov
push
inc
push
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
adc
inc
xor
push
push
inc
push
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
adc
push
and
and
push
inc
scas
jae
bound
xchg
push
add
mulb
xchg
xchg
shll
mov
push
push
push
jae
jecxz
xchg
sub
mulb
jns
dec
sbb
jne
or
inc
sub
inc
imul
imul
out
aad
lds
xchg
jmp
jmp
sbb
push
cmp
xor
jnp
push
cmc
fwait
in
aad
lds
xchg
sti
test
jne
or
inc
sub
jnp
imul
test
fisubs
xchg
sahf
in
pushf
add
jnp
push
jb
js
outsb
cmp
loopne
loopne
push
cs
cltd
sbb
cmpsb
xor
repz
loope
mov
sub
loop
movsl
nop
ret
inc
aam
mov
bswap
aas
jmp
testl
lds
notl
jbe
daa
jne
inc
push
xchg
cs
jge
pop
fimull
jae
mov
jge
cs
movsl
sub
push
jmp
fneni(8087
hlt
rol
mov
movsb
jmp
fs
sahf
pop
inc
dec
stos
in
and
or
popf
sbb
push
adc
shlb
mov
push
push
lret
push
sti
xchg
sbb
push
cmp
xor
jnp
imul
in
aad
lds
xchg
sti
test
adc
push
sbb
aas
jp
sbbl
cmpsb
call
in
lock
mov
ja
addr16
dec
push
sbb
push
sub
inc
xchg
cmp
fadd
stc
inc
mov
out
mov
adc
push
jo
and
imul
in
aad
lds
xchg
sti
test
jne
or
inc
sub
jnp
imul
in
aad
lds
xchg
sti
test
jne
add
enter
in
xlat
enter
popl
ss
ljmp
mov
es
pop
pop
out
imul
push
int3
mov
test
sahf
mov
or
push
push
and
mov
enter
lods
or
hlt
mov
cwtl
sub
inc
cwtl
sub
jp
and
aas
or
test
pop
xchg
pop
push
mov
iret
xchg
fsts
pop
sahf
jge
push
mov
adcl
push
ljmp
mov
cld
jecxz
lods
je
pusha
addr16
xchg
icebp
pop
daa
clc
jbe
or
push
add
push
xor
dec
fdivrs
mov
mov
frstor
pop
push
and
mov
sub
xchg
test
pop
rcll
divl
ds
push
inc
aaa
out
adc
ret
ljmp
sub
mov
bound
stos
jns
movsl
lret
test
loop
or
ja
push
jecxz
sub
mov
lcall
jmp
bound
cmpsl
xor
aam
mov
sar
lcall
xchg
mov
inc
insl
jg
xor
ror
movsb
and
loop
test
xchg
mov
movntq
lcall
rcll
add
cmp
adc
adc
pop
in
mov
cmp
data16
aas
or
jmp
push
ds
aam
sub
sub
bound
cmc
adc
stc
repz
lock
cltd
sub
int3
leave
jnp
in
loopne
dec
fnstsw
insb
or
sbb
clc
cmp
xchg
cltd
dec
pusha
test
mov
loope
cmc
push
shll
das
enter
add
add
rcrb
add
jge
pop
adc
jno
das
mov
pop
xchg
mov
jae
cmp
jl
jecxz
push
xchg
jl
lods
roll
sub
lock
ja
enter
push
in
and
ret
jns
push
mov
test
sub
adc
jg
movsb
adc
in
cmp
daa
dec
adc
pushf
fidivs
int
int3
adc
push
and
pusha
js
test
rcll
fs
insb
and
jnp
je
mov
cmp
subb
mov
cmpsb
test
cmp
std
push
or
ficoml
xchg
and
mov
mov
add
inc
cmp
scas
in
andb
fnstcw
jae
or
mov
cmp
lea
out
dec
icebp
mov
lods
xor
mov
pushf
ffreep
xor
in
das
leave
cmp
and
into
movsb
xchg
fstpl
pop
add
adc
adc
stc
mov
and
xchg
lods
lods
push
inc
imul
dec
xchg
es
pop
outsb
inc
loope
mov
sub
fldenv
ret
push
and
pushf
xor
in
inc
xchg
int3
push
ds
lock
mov
xchg
lock
arpl
and
sub
aad
pop
mov
ss
ret
jp
out
in
xchg
stos
iret
dec
pop
shlb
fwait
aam
push
push
mov
xchg
sub
and
sbb
fistpl
adc
lock
ja
nop
std
pop
loopne
aad
scas
mov
pop
push
mov
loop
jmp
dec
lods
lret
into
inc
push
mov
test
out
movsb
lret
fidivs
fdivs
lret
insb
xor
pop
repz
mov
lock
inc
in
jge
cmp
outsb
movsb
mov
inc
fisttpll
dec
pop
adc
cli
dec
jmp
and
mov
mov
xchg
fsubl
mov
dec
adc
xchg
xor
add
mov
mov
xorl
stc
push
test
test
lea
push
inc
adc
pop
loopne
add
mov
mov
mov
xor
jmp
arpl
mov
jle
int3
mov
fidivrl
js
aas
lahf
cmp
outsl
cli
sub
push
nop
push
sub
cmp
movsb
fsubrl
stos
xlat
lret
out
dec
fwait
sbb
cmp
orb
sbb
out
jb
imul
popa
lcall
cmp
inc
adcl
pop
stc
dec
push
int
push
test
cmp
enter
pop
mov
sbb
dec
mov
ret
inc
sbb
or
pop
xchg
and
div
jb
repz
mov
enter
ret
xchg
push
jno
dec
mov
dec
movsl
mov
pop
inc
outsl
push
sti
inc
jl
mov
lret
gs
shrb
or
xchg
in
mov
xchg
imul
and
jl
mov
add
aad
addr16
sub
and
push
inc
jne
push
std
mov
jb
xor
loop
jge
and
and
ljmp
mov
data16
je
inc
in
jae
gs
jbe
xchg
movsb
adc
gs
addr16
int
inc
cmp
outsb
jo
jp
mov
inc
xor
push
add
sbb
scas
cmp
outsb
cs
faddl
jl
ja
add
cmpb
jnp
mov
mov
pop
loope
dec
pop
add
mov
xor
sub
sbb
stc
xor
out
push
sub
out
pop
pop
push
jb
and
je
lahf
hlt
and
mov
and
pop
loope
add
jecxz
dec
xchg
push
cld
cli
pushf
bound
repnz
add
cs
dec
sub
loope
in
inc
mov
scas
pop
insl
sbb
push
loop
outsb
dec
setbe
subl
or
cmp
sub
inc
pop
aam
adc
xchg
ret
pop
fisttps
push
mov
xor
push
sbb
std
adc
sub
xchg
scas
fsts
or
inc
sub
imul
mov
cli
mov
js
dec
sub
lret
popf
lcall
dec
imul
mov
lahf
inc
sahf
adc
pop
daa
lods
je
mov
push
in
hlt
dec
pop
adc
mov
cmpsl
imul
xor
aas
bound
popf
xor
lret
sub
mov
or
mov
xchg
aas
arpl
mov
icebp
jno
and
pop
ret
cmp
aas
lret
rcll
cmpsl
int3
or
push
stos
popf
andb
sbb
jnp
icebp
jecxz
sahf
in
sub
nop
xor
push
dec
xchg
into
inc
nop
pop
int
jl
inc
leave
nop
out
xlat
adc
cmp
aaa
roll
mov
int
jmp
nop
push
cmpsb
mov
adc
add
or
cltd
and
push
out
mov
add
popa
ret
mov
das
lock
jle
adc
je
xchg
insb
sbb
push
cmp
mov
mov
xlat
out
sub
adcl
add
data16
imul
xchg
scas
ficoml
aam
cmp
sbb
loope
mov
cmpsl
cld
push
cli
in
jg
subb
repz
mov
bound
sbb
out
jae
rclb
xchg
sbb
out
add
push
andb
xlat
push
pop
incb
jl
inc
pop
out
aam
das
ljmp
mov
push
inc
jle
mov
pop
inc
mov
add
xchg
xchg
leave
out
pop
repnz
cmpsl
pop
dec
cmp
mov
call
jle
out
pop
outsl
fnstcw
mov
out
dec
sub
mov
cld
mov
pop
lret
add
cmp
adc
outsl
hlt
insl
or
and
xchg
xchg
idivl
fisttpll
shr
rorb
jle
xchg
hlt
mov
xor
popf
je
sub
push
outsl
or
inc
jp
push
fildl
lods
mov
sub
mov
cmp
test
sahf
cmpsb
pushf
sbb
or
add
sub
adc
lcall
movsb
ljmp
repnz
aad
fisttpl
es
mov
mov
fsubrp
fnsave
std
movb
mov
iret
stos
movsl
mov
insl
jp
xor
jb
xor
pop
xor
pop
nop
lret
pop
adc
sbb
and
push
fnstcw
out
loopne
xchg
daa
ljmp
push
ss
sbb
adc
inc
mov
mov
sub
mov
cmpsl
lret
movsl
or
loop
loop
cmp
sahf
les
mov
les
fs
sub
dec
push
lahf
xchg
jbe
push
orb
and
or
jns
stos
ljmp
push
fisttps
jnp
dec
mulps
sbb
xchg
add
push
nop
add
enter
mov
xchg
outsb
or
pop
lahf
jecxz
jbe
mov
dec
sub
stc
push
inc
push
pushw
lahf
jg
pusha
mov
and
sbb
add
cld
cs
mov
and
jp
lahf
repz
push
push
cli
cld
outsb
pushf
dec
cmp
lods
mov
pop
fidivl
out
sub
lcall
pop
adc
push
mov
mov
je
orb
inc
int
mov
shrb
outsb
hlt
in
sub
push
jg
outsb
xor
jb
xor
sahf
ret
jae
push
jns
notl
pop
push
mov
pop
test
movsb
and
xlat
stc
jnp
xorb
mov
mov
jnp
imul
scas
ret
hlt
jbe
adc
dec
je
mov
mov
test
ret
pop
mov
and
pop
push
cmp
dec
out
lds
movsb
testb
cmp
out
jmp
lock
jecxz
jp
mov
lods
aas
sahf
push
lods
pushf
sbb
xchg
mov
mov
jo
inc
scas
rolb
pop
sbb
sub
in
in
stc
inc
repz
jp
jl
loopne
lahf
jge
xor
call
jl
xchg
fld1
mov
jb
icebp
call
arpl
loop
out
iret
push
cmp
pop
fmuls
stos
pop
add
push
sbb
pop
lods
fs
pop
test
and
leave
and
aas
rorb
and
adc
leave
push
pushf
nop
imul
xchg
or
out
dec
pop
out
cmp
movsl
inc
and
add
loopne
jbe
xchg
aas
mov
idivb
movsl
mov
adc
arpl
mov
xor
mov
sti
cld
pop
in
cmp
dec
in
test
and
cmp
leave
xrelease
cmpsl
loopne
movsl
push
dec
enter
test
sub
mov
mov
movsl
sahf
add
xchg
jnp
adcb
push
mov
push
aad
mov
xor
ja
mov
bound
xchg
add
insl
sbb
addr16
adcl
jae
insl
lahf
aam
jle
or
jmp
addr16
cmp
mov
fsubs
sub
jl
bound
or
dec
pop
jmp
fdivs
or
out
mov
fbstp
sub
push
repz
fldcw
push
mov
or
gs
or
out
les
push
adc
sub
pop
dec
jl
lahf
into
shlb
dec
adc
jbe
and
fstps
xchg
shlb
int
les
rclb
adc
cmc
pop
lret
cmpsl
push
and
mov
sub
add
sahf
pop
lds
jle
pop
mov
popf
push
jecxz
jecxz
mov
pusha
in
xor
mov
jp
mov
push
jl
push
mov
jnp
movsl
pop
adc
out
std
dec
pop
jp
pop
sub
adc
mov
mov
lea
call
dec
jnp
sahf
mov
pop
jns
jns
add
aaa
jl
pop
pusha
push
xchg
inc
js
add
adc
jmp
in
imul
cmp
lahf
int3
std
jecxz
push
loope
or
jno
popf
xchg
mov
pop
lock
cmp
loope
push
adc
pop
dec
sti
lahf
arpl
or
sub
cld
ljmp
aad
outsb
dec
add
test
pop
lahf
xchg
xchg
add
ret
jmp
enter
in
pop
jl
jns
rcrl
jge
jg
jge
dec
dec
mov
inc
add
mov
cmp
push
xchg
adc
inc
dec
push
mov
addr16
and
lods
push
inc
test
dec
sbb
lods
cmp
mov
in
add
jecxz
push
cmp
outsl
cmp
imul
jae
mov
jecxz
cs
imull
iret
std
scas
lock
shrl
lods
pop
lods
cmp
hlt
cmpsl
popf
xor
fldt
loope
inc
lods
adc
cwtl
and
lods
outsl
and
es
add
movsb
cmc
sti
dec
andl
in
jmp
jae
outsb
in
xchg
jno
cmpl
adc
mov
repnz
cmp
sbb
pop
cmp
add
dec
pop
fisubrs
cmc
data16
push
enter
inc
xchg
cmp
out
sub
xor
sub
sbb
add
loope
lret
int3
push
arpl
or
push
mul
test
jp
iret
cmc
cs
out
inc
test
jl
jl
mov
add
aaa
jns
pop
mov
or
cmp
jns
arpl
ss
or
bound
mov
push
or
lret
jae
iret
sbb
mov
dec
inc
cmp
push
jg
cwtl
add
pop
test
mov
dec
jl
shrb
mov
loope
add
ds
icebp
mov
ds
mov
out
insb
scas
fists
test
sbb
lahf
xorl
xchg
mov
add
adc
arpl
dec
mov
mov
dec
pop
mov
sub
aas
xchg
adc
inc
inc
fwait
aad
je
pusha
lods
fsubp
push
adcb
stc
xchg
pop
bound
ret
imul
add
mov
nop
jns
outsb
imul
dec
sbb
outsb
insb
sahf
sarl
jne
pop
dec
adc
or
rolb
xchg
xchg
cltd
xchg
pop
movsl
sub
sbb
imull
inc
imul
divps
aad
bound
pop
rcll
rcll
test
cmp
and
push
addb
mov
imul
pop
sbb
sub
mov
scas
pushf
mov
mov
subb
xor
fsin
cmp
into
in
dec
shr
cltd
jnp
jmp
jns
jo
inc
xchg
mov
stos
sbb
push
adc
xchg
mov
cld
std
scas
lret
pop
lret
xchg
mov
add
sbb
xchg
sub
add
das
sub
dec
loop
mov
decl
pop
and
cmpsb
out
mov
add
pop
lods
repz
mov
andb
fdivp
pop
call
sub
sti
xchg
pop
or
movsl
mov
pop
enter
scas
cmpsb
and
pop
pusha
lds
adc
es
or
andb
mov
movsl
xor
imul
xor
insb
jl
loop
stos
inc
out
shll
sti
mov
enter
mov
mov
shll
movl
repz
mov
pop
sbb
leave
imulb
lds
sbb
jg
sbb
push
mov
fimull
jae
shrb
lret
testb
jb
sbb
daa
fwait
push
divb
mov
pop
in
mov
inc
out
pop
mov
repz
sbb
inc
xchg
cmp
test
cmp
jno
in
data16
sbb
jle
xorb
cmp
scas
mov
out
lret
in
cmp
mov
stc
sbb
inc
subl
cmp
mov
mov
fwait
ljmp
push
test
scas
push
insl
out
jne
repnz
push
push
push
cmp
and
scas
inc
sbb
loop
lock
mov
add
and
xchg
sti
adc
sbb
push
push
dec
andb
mov
fstpl
jge
xchg
mov
dec
and
scas
xchg
int3
xchg
mov
rorb
shr
dec
pop
sub
insb
add
cmp
icebp
pop
dec
mov
repnz
inc
sub
jae
sbb
fistl
mov
cmp
inc
sub
les
jbe
iret
cmpsb
ret
fldl2t
sub
jns
mov
mov
xchg
insl
enter
mov
and
outsb
inc
popf
sarb
push
and
pop
xchg
jo
sub
ss
fmuls
pop
scas
mov
ficoms
mov
popa
popa
inc
cltd
cli
adc
xor
aam
sub
adc
cmpsl
and
cmp
out
nop
sub
aaa
outsb
add
mov
push
inc
out
sarl
in
arpl
push
clc
jp
iret
leave
cmp
mov
cwtl
mov
movsb
addr16
and
inc
gs
jg
mov
push
inc
push
test
mov
cmpsb
imul
jne
in
and
imul
je
imul
repnz
popf
movsb
pop
imul
rcl
mov
xchg
mov
xchg
sbb
ret
add
cmpsl
mov
push
dec
aas
rclb
jl
xor
cmc
adc
xor
sahf
cli
in
mov
out
adc
movsb
pop
add
cwtl
jmp
popa
add
add
xchg
repz
pop
mov
out
ret
mov
cmp
push
xchg
sbb
pmulhw
sti
fcmovne
mov
lret
mov
mov
fistps
push
jae
scas
popl
add
xchg
push
push
push
pop
aaa
jbe
mov
ficomps
fld
push
jnp
lods
and
adc
in
inc
push
out
xchg
movsb
dec
mov
fsubl
jle
mov
fsts
movsl
pop
call
fmulp
or
jge
sbb
mov
push
xor
in
and
dec
popf
sahf
pop
adc
push
daa
xlat
mov
pop
push
ljmp
xor
loope
gs
lds
jecxz
cltd
imul
or
lcall
push
data16
hlt
dec
jge
jecxz
lock
fwait
mov
pop
or
bound
arpl
mov
mov
gs
xlat
dec
cmp
jo
es
adc
push
aad
nop
push
jno
sbb
test
push
mov
and
nopl
mov
add
fwait
daa
push
mov
testb
imul
ret
lods
fldt
jae
dec
test
cmp
insb
dec
jl
inc
out
jmp
add
cmp
jnp
add
loopne
mov
jmp
mov
mov
sti
mull
mov
test
ds
pop
bound
dec
dec
inc
notl
shll
cmp
sbb
xchg
stos
mov
jg
push
inc
insl
outsb
jecxz
xor
push
call
daa
push
fucom
mov
mov
es
scas
ret
xor
gs
sub
and
adc
adc
inc
jmp
dec
dec
mov
je
add
add
xlat
pop
dec
mov
das
adc
fcomps
cli
inc
fwait
mov
scas
aam
jb
mov
icebp
mov
rolb
push
dec
jb
mov
sbb
iret
push
mov
pop
das
mov
mov
dec
pusha
pop
test
stc
pushl
cmpsl
xor
xchg
in
push
mov
lahf
dec
inc
add
lret
inc
ret
mov
shlb
cwtl
pop
pop
mov
push
ret
int
xchg
sub
adc
push
movsb
or
pop
mov
cmp
lahf
lods
push
mov
push
lods
or
repz
push
stos
mov
out
cwtl
out
add
mov
xlat
bound
cmp
test
aas
mov
mov
popa
dec
push
aas
mov
clc
movsb
test
rolb
and
inc
out
es
je
mov
lods
add
fdivrl
lret
sbb
mov
rorb
xor
xchg
pop
dec
push
imul
mov
out
dec
fwait
lea
dec
mov
adc
mov
xchg
mov
push
stos
imul
adc
xchg
mov
and
cmpsl
mov
pop
inc
ljmp
data16
in
xor
fs
push
push
cli
arpl
test
loopne
jge
aas
and
mov
mov
lock
cmp
out
cmp
adc
mov
jns
pop
frstor
inc
cmp
xchg
aas
into
fwait
add
pop
inc
out
push
and
movsb
ret
mov
jno
iret
pop
shl
or
jae
xchg
add
mov
adc
incb
cli
push
loop
xchg
adc
pop
mov
out
sar
lods
ret
mov
pop
daa
add
movsb
ljmp
mov
in
lods
cmp
or
lods
fnstcw
mov
cmpsb
push
popa
inc
push
or
push
dec
in
pop
in
pop
icebp
scas
adc
dec
sbb
sbb
data16
daa
fidivrl
push
sbb
subl
mov
lds
loop
pop
out
or
cwtl
mov
outsb
mov
inc
sub
jnp
imul
in
aad
lds
xchg
sti
test
jne
or
inc
sub
jnp
imul
in
aad
lds
xchg
sti
test
jne
or
inc
sub
jnp
imul
in
aad
les
xchg
sti
test
jne
or
inc
sub
jnp
stos
or
vcmpps
insl
add
adc
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cli
in
hlt
dec
les
nop
sbb
fldcw
jle
ljmp
inc
stos
and
mov
push
jp
dec
les
sub
loopne
push
ficoml
mov
adc
std
jp
dec
fcompl
sub
sbb
stos
cmp
roll
jbe
jnp
test
test
mov
sbb
sub
mov
mov
fsubrl
mov
aas
in
jle
int
test
aam
inc
cmpb
lahf
fwait
add
stos
push
inc
inc
push
hlt
in
out
js
lahf
inc
idivl
mov
das
mov
xorl
and
lea
add
push
lods
mov
mov
sub
adc
test
lret
mov
jmp
add
popa
test
sbb
dec
mov
or
mov
shlb
push
gs
xchg
sbb
sarb
lret
adc
test
les
mov
mov
adc
fstpl
sub
ljmp
dec
stos
cmp
sub
push
lcall
mov
pop
aad
call
dec
je
inc
mov
ss
out
js
lea
popf
ds
mov
or
bound
mov
mov
xor
arpl
hlt
sub
cmp
fs
je
inc
ficoml
mov
adc
in
hlt
dec
les
sub
xchg
ljmp
push
stos
and
xor
add
adc
in
out
inc
or
pop
das
xor
js
out
mov
std
mov
add
dec
jnp,pt
jo
mov
mov
in
fwait
loop
mov
inc
lahf
adc
xchg
lods
inc
sbb
decb
mov
test
mov
js
js
lods
pop
and
mov
stos
outsl
stos
or
push
mov
rcll
push
subb
push
and
inc
fimull
in
daa
repnz
sarb
push
inc
push
pop
lods
jle
and
cmp
mov
fnstenv
negl
or
aaa
outsb
cmp
jp
in
loopne
cmp
out
inc
sbb
notb
leave
add
mov
pusha
pop
scas
mov
or
add
dec
push
lahf
fimull
int
cmpsl
mov
and
inc
dec
and
addr16
inc
mov
mov
mov
rorl
jo
add
fsubl
pop
xor
mov
push
mov
jle
test
mov
insl
or
lea
mov
data16
mov
cmp
lock
les
sbb
sub
adc
fdivrs
jecxz
pop
outsl
mov
jnp
pop
gs
xor
test
mov
sarb
xor
ja
xor
xchg
stos
inc
dec
ds
lds
push
or
sub
cmp
out
sub
pop
cmp
add
sub
mov
ror
sarb
and
in
cmp
outsl
xor
cwtl
lods
mov
dec
pop
lcall
pushf
in
sbb
sbb
ljmp
rcrb
xor
push
into
mov
sbbb
sbb
push
outsb
push
inc
stos
and
xor
jmp
xor
mov
and
adc
in
push
or
psraw
mov
and
pop
push
add
sbb
push
jbe
ss
jo
arpl
cmp
add
fimuls
mov
sarl
sub
mov
negb
sbb
jl
lret
pop
sbb
arpl
psubusb
pop
in
mov
xor
lret
mov
pop
cmp
pushf
stos
push
cwtl
shll
lahf
lret
ja
clc
aas
add
push
lods
mov
push
pop
fwait
sub
rolb
sub
sub
mov
mov
push
adc
inc
sub
cs
pop
push
cli
sbb
imul
mov
hlt
pop
scas
adc
leave
xchg
andl
xchg
push
imul
mov
into
dec
mov
loop
nop
inc
lcall
cmp
and
cmc
sub
and
mov
repnz
hlt
xchg
movsl
push
push
mov
repnz
jp
std
dec
mov
movsl
mov
and
adc
cmp
jecxz,pt
dec
call
in
inc
inc
inc
xlat
jnp
jl
je
test
pop
scas
stos
cmp
jnp
pop
sbb
and
mov
push
mov
stos
dec
in
ja
dec
fldl2e
call
fsts
lea
pop
data16
fnsave
repnz
imul
leave
or
test
and
lea
daa
push
or
outsb
fimuls
repnz
je
add
cmp
div
mov
lret
adc
cld
pop
xlat
outsl
xchg
or
add
nop
outsl
mov
dec
daa
mov
outsl
sub
js
adcl
dec
clc
jne
dec
xchg
mov
pop
jecxz
add
and
inc
jecxz
sub
and
jmp
rcll
mov
int
call
outsb
mov
lret
outsb
repnz
in
dec
and
push
icebp
rcpps
int3
rorb
inc
jle
push
mov
movsl
std
sbb
sbb
mov
aas
addr16
cmc
push
ret
shrd
pop
or
mov
data16
sbb
out
ficompl
jmp
jle
enter
push
lret
ja
rcrb
scas
mov
ret
or
xor
adcl
movsb
rcrb
fildl
pushf
out
xchg
xchg
fs
hlt
in
clc
les
fidivs
mov
inc
push
push
xor
daa
inc
mov
loope
push
mov
pop
pop
cltd
lds
push
inc
fcomip
pop
push
je
repnz
sarl
rorl
add
repz
imul
mov
lcall
loopne
push
xor
and
dec
out
push
or
mov
sarb
jae
sub
cmp
add
jns
pop
sub
sbb
sbb
push
mov
scas
xor
dec
push
in
rcrb
mov
leave
mov
fs
jns
sub
loope
lea
int
push
movsb
test
mov
jb
shrl
mov
mov
cmp
and
leave
shll
and
and
fbld
jmp
mov
push
popf
xor
pop
add
sbb
mov
cs
push
cmp
gs
std
in
popa
mov
sbb
push
gs
xorl
mov
sbb
cltd
push
or
idiv
shll
dec
testl
mov
pusha
sub
rcrb
aam
pop
lds
int3
mov
lock
xchg
lods
mov
das
out
testl
push
cmp
pop
stos
xorb
hlt
jbe
outsb
add
adc
adc
jmp
fsubrl
inc
stc
pop
sbb
xor
dec
daa
mov
into
in
shld
mov
adc
sub
adc
nop
fisttpll
add
lods
sbb
outsb
pop
or
jp
rolb
test
adcb
shr
push
mov
add
sub
mov
dec
cmp
lret
ss
lock
cmpsb
imul
lds
cmp
dec
push
inc
sub
xchg
sub
js
bound
dec
scas
sbb
rcl
sub
pop
add
out
pop
movsb
pcmpgtb
and
repnz
addr16
jp
test
pop
mov
out
adc
adc
pop
cmpsb
xor
dec
cmp
jmp
xchg
mov
fsubs
gs
sbb
pop
add
pop
jl
jb
fistpll
pop
adc
addr16
or
pop
cli
cmp
lahf
pushf
cmp
mov
adc
dec
cmpsb
aaa
flds
cltd
sub
jl
lods
pop
scas
add
xchg
es
fs
fisubs
cmp
mov
shlb
lcall
push
inc
mov
push
mov
lea
ror
data16
push
rclb
jae
rcll
int3
dec
xchg
sub
in
call
fstpt
mov
xor
mov
into
mov
xchg
je
jnp
addr16
inc
negl
cmp
rcrl
adc
notb
adc
push
jp
jne
mov
test
aad
repnz
push
in
xchg
push
loop
push
imulb
add
and
add
popf
inc
aaa
bound
ja
mov
out
or
lea
and
mov
mov
shlb
mov
rcrb
add
inc
addr16
xchg
xchg
inc
push
sub
pop
and
mov
fucom
add
or
xor
cltd
pop
icebp
test
es
imul
aam
or
and
sub
sbb
xchg
iret
roll
scas
inc
popf
mov
hlt
push
aad
pushf
out
adc
sbb
es
stc
add
in
repz
insb
jg
or
fwait
sub
pop
cmp
xchg
pusha
popa
push
mov
lods
jecxz
push
out
inc
cli
mov
and
dec
xor
loopne
sub
enter
cld
cltd
es
int3
sub
sub
mov
add
push
and
mov
or
push
in
sbb
aam
cmp
dec
lahf
pop
push
out
out
sbb
push
cmp
mov
into
and
sarl
shl
xchg
sar
inc
mov
ljmp
rorb
inc
repnz
mov
or
mov
insb
jmp
jecxz
jnp
cmpsb
mov
dec
mov
and
push
fiaddl
push
lods
leave
add
jle
add
in
add
aam
lret
pop
dec
push
jae
xchg
lods
cmp
push
loopne
dec
or
xchg
jns
push
out
jp
jnp
xchg
push
gs
pop
sahf
js
and
lcall
sub
mov
stc
xchg
rol
pop
insb
jne
pop
fcomi
or
fildll
pop
push
jnp
ficoml
sti
insb
xchg
in
push
and
pop
add
addr16
out
and
or
stos
xchg
jbe
movsl
mov
mov
mov
aaa
scas
mov
mov
mov
sub
push
ret
movups
imul
aam
jmp
jno
fistpl
xchg
xchg
pop
fwait
push
cmpsb
mov
and
xor
cmp
mov
push
dec
mov
repnz
lock
orl
dec
loopne
cmp
lods
test
push
dec
push
or
ret
cmc
inc
push
jl
mov
repnz
mov
push
jl
jnp
sub
or
sub
or
mov
xlat
movsb
in
out
aad
mov
aaa
lcall
mov
pop
sbb
ret
out
pusha
jb
outsl
ljmp
cmp
sub
loop
adc
or
pop
shlb
mov
sbb
add
sarl
test
subl
sub
mov
and
jg
test
cmp
insl
pop
rorb
xorl
aas
push
xor
in
jae
stc
add
aaa
cmp
xor
js
movsb
sbb
mov
sub
lea
test
sbbl
cld
sub
adc
dec
pop
pcmpgtw
lret
mov
shll
cmp
mov
xadd
outsl
and
nop
data16
arpl
fdivrs
jnp
cmp
hlt
aam
push
pusha
jae
addr16
push
sub
or
dec
pop
rcrb
int
out
call
mov
fwait
pop
dec
addb
mov
jl
popf
adc
clc
jmp
std
inc
sti
fldcw
setge
xchg
adc
fs
adc
xchg
push
mov
add
loope
jne
imul
mov
mov
sbb
sbb
out
mov
nop
cmp
jae
and
push
mov
add
mov
xchg
lea
sbbb
mov
sbb
jb
inc
ljmp
rcr
inc
sub
inc
cmc
jns
mov
mov
push
lcall
in
add
sub
test
lahf
inc
sbbb
xchg
mov
lds
mov
mov
test
ficoml
jl
jmp
jns
mov
lock
and
and
adcb
cmpsb
push
mov
push
pop
mov
mov
aad
ds
and
or
adc
or
bound
xor
and
cmp
icebp
inc
jnp
xchg
in
adc
les
mov
in
pushf
sub
ss
fsubs
int3
loope
test
mov
xor
xor
lret
mov
jns
mov
fldcw
pop
es
insl
push
imul
dec
cmp
icebp
and
adc
lds
stos
inc
xchg
sbb
push
fadds
xor
add
adc
cmpsb
stos
pop
bound
mov
push
in
sub
out
pop
cmp
aad
push
lahf
push
push
xor
mov
dec
push
push
inc
cmp
sahf
and
add
imul
ja
mov
add
out
or
pop
mov
mov
xchg
and
pop
loop
pop
cmpsl
mov
nop
jae
ss
xchg
imul
cli
shlb
push
repnz
cwtl
pop
sub
clc
popf
pop
shll
mov
stc
jecxz
pushf
mov
mov
mov
in
sbb
lahf
cli
test
mov
mov
jp
and
sub
out
mov
lret
sbbl
inc
lret
cmp
cmp
xor
mov
xchg
jae
push
inc
or
ljmp
je
jp
sbb
pusha
push
mov
or
mov
or
mov
inc
out
adc
and
sub
ljmp
and
and
lret
xchg
xchg
data16
sub
xchg
cmp
scas
sbb
sbb
jnp
ret
mov
adc
and
jecxz
les
cltd
xor
aad
xor
cmp
xchg
xlat
andl
leave
mov
je
outsl
lcall
jecxz
int
in
and
xor
arpl
mov
int3
out
lret
daa
ret
stos
mov
add
jle
dec
or
and
adc
lret
or
out
sahf
xchg
dec
and
xchg
jno
insb
dec
or
inc
cld
aaa
xchg
cmp
mov
cmp
loope
lret
jl
push
fld
mov
xor
js
push
dec
mov
fistl
jns
pusha
pop
xor
pop
rcll
dec
cmpsl
arpl
xor
std
mov
xlat
cs
popf
xchg
pop
loopne
ss
or
jmp
or
in
xlat
dec
add
insl
out
cmp
out
adc
adc
or
outsl
sub
inc
insb
aam
cmp
loope
pop
out
insl
movsl
iret
mov
cmp
inc
xchg
dec
ret
js
and
xchg
inc
insl
in
pushf
xchg
repz
stc
cmp
call
je
xchg
pusha
mov
dec
test
pop
dec
jmp
dec
in
jge
mov
dec
stos
pop
mov
mov
mov
jl
mov
or
sbb
add
xchg
jo
jbe
inc
fcoml
call
ficompl
and
loop
cwtl
sub
sbb
imul
dec
je
ret
push
lret
mov
testb
mov
int3
push
pop
push
insb
movsb
inc
bnd
jmp
mov
cmpsl
sub
add
out
in
psubq
push
aam
mov
pop
mov
scas
test
push
sahf
xchg
mov
test
pop
pop
movsl
shr
neg
rorl
mov
mov
mov
adc
stos
nop
das
mov
out
movsl
fwait
nop
imul
dec
les
cmp
mov
jg
pop
mov
mov
insb
pop
mov
jns
cmp
nop
hlt
pop
push
or
cmpb
fwait
push
enter
int3
push
movsb
stos
lock
scas
arpl
adc
mov
xor
inc
ss
or
sub
stos
frstor
push
adc
xchg
push
mov
fnstcw
aad
loop
cwtl
fcomi
aam
test
cmp
cmp
inc
xchg
rolb
xchg
jbe
adc
lret
push
fdivl
fists
movsl
fcmovnb
add
pop
jg
push
test
sti
xor
scas
add
stos
mov
jge
fdivl
out
ja
dec
sahf
mov
push
cltd
push
xchg
jns
xchg
popf
imul
and
pop
xor
push
imul
jo
lret
or
and
push
clc
dec
stc
jecxz
add
or
dec
in
movsl
outsl
pop
jl
nop
push
out
repz
inc
sbb
mov
popa
mov
cli
je
inc
adc
or
popf
jno
push
dec
pop
pop
rcr
fwait
cmpsl
and
shll
xor
mov
xor
and
sub
test
dec
mov
aam
incb
push
mov
test
std
fnstenv
int3
inc
gs
xchg
mov
out
stos
out
lcall
mov
mov
or
or
shll
es
mov
outsb
les
dec
xchg
shll
imul
lcall
out
icebp
repnz
je
imul
inc
inc
xchg
jbe
out
shrb
ja
iret
xchg
lret
sub
ss
xor
ficoml
xchg
inc
sahf
loop
mov
shlb
bound
inc
mov
cwtl
xchg
pop
test
jl
inc
fndisi(8087
hlt
pop
sarb
adc
test
loop
lods
stos
mov
jmp
lret
test
cs
jb
xor
pop
mov
ret
sub
pop
js
xor
loopne
cwtl
xchg
mov
xor
shrd
mov
repz
cltd
pop
clc
jno
lods
or
sbb
lret
mov
pop
cmp
std
mov
jecxz
mov
lods
loop
in
test
cmovo
mov
push
shr
gs
or
mov
jns
testl
scas
xchg
adc
aaa
mov
add
jns
call
sub
jne
aam
mov
jge
xchg
xchg
sysret
dec
xor
pop
int3
rclb
test
xchg
adc
arpl
sarl
cmp
mov
in
test
dec
pop
pop
pop
dec
dec
ja
sbb
add
push
sub
inc
mov
call
push
mov
daa
int3
jecxz
and
clc
xchg
jle
lea
push
andb
test
fsubrl
inc
fstp
cmp
ljmp
movsl
sarb
call
ret
in
into
int3
push
lods
and
mov
pushl
mov
push
mov
push
repz
sub
mov
push
jmp
loop
fcmovbe
fstps
cmp
fdivrl
push
jg
push
mov
nop
push
lea
mov
xlat
mov
dec
adc
orb
insb
stos
mull
mov
cmp
xchg
add
inc
sub
or
leave
mov
inc
push
sbbb
rcr
ljmp
js
outsl
dec
nop
in
pushf
subb
fcmovb
or
or
arpl
in
ljmp
xchg
into
xchg
xor
sub
xor
xor
divb
sub
int3
mov
jnp
loope
out
cmp
cmp
jae
push
mov
insl
xchg
pushf
inc
lock
addl
jbe
jb
ret
and
filds
fwait
cmp
mov
fbld
fs
es
push
sti
push
mov
sub
pop
imul
imul
push
inc
mov
cltd
fs
pop
cmc
std
adc
pop
cmp
loope
insb
and
rcrb
xor
les
je
gs
movsb
cs
movsl
push
enter
icebp
dec
pop
pop
xchg
pusha
mov
cmp
leave
push
jecxz
dec
push
mov
xor
cwtl
mov
cmc
mov
movsb
dec
sbb
fbstp
push
aaa
enter
mov
mov
jmp
dec
sub
cmovno
lahf
shrb
aam
es
xor
or
xor
mov
ret
adc
dec
cmpsb
rorl
lods
add
enter
in
pop
testb
or
push
loope
inc
bound
or
or
js
pop
shll
jb
pop
push
pusha
and
aaa
cmc
add
sub
jp
sbb
or
lcall
fs
jle
pop
je
aaa
insl
cltd
xor
ljmp
mov
xchg
push
lock
or
mov
push
cmp
cmp
out
in
push
and
xchg
sti
push
ret
or
jge
and
and
push
cmp
jno
mov
sarb
xorb
movsl
int3
mov
enter
js
mov
pop
mov
and
dec
ret
jnp
mov
cwtl
push
rcll
jb
fnsave
inc
clc
adc
dec
dec
adc
mov
in
out
xor
stc
xorl
jl
sti
scas
cmp
imul
sub
stos
std
jle
cmp
in
mov
movntps
std
fdivs
call
arpl
call
xor
es
stos
sbb
jnp
call
pusha
inc
pop
pop
mov
movl
or
mov
test
pop
aaa
pop
cmp
or
sbb
mov
xchg
cld
mov
push
cmp
aam
xchg
and
xor
xchg
lcall
mov
lret
arpl
push
icebp
test
sub
mulb
ret
push
inc
das
jl
pop
add
xchg
lcall
push
inc
sbb
fdivr
jge
mov
push
sti
fstps
and
fwait
xchg
mov
shll
jl
dec
or
test
sbb
shrb
xchg
xchg
lods
mov
dec
movsl
stc
xchg
cli
lds
jge
in
mov
repz
test
inc
xor
ljmp
cmpsl
arpl
pusha
into
push
dec
iret
inc
dec
adc
je
sub
outsb
mov
mul
fneni(8087
push
push
sbb
add
add
ss
jo
mov
adc
jle
sbb
out
les
sub
xchg
ljmp
push
stos
and
xor
add
adc
in
hlt
dec
les
sub
xchg
ljmp
push
stos
and
xor
add
adc
in
hlt
dec
les
sub
xchg
ljmp
push
stos
and
xor
add
lock
rcrb
movsb
cmp
fs
fisubs
fisubl
imul
lret
sti
fldcw
aas
fisubrs
pop
or
cmp
cmpsl
sbb
push
lcall
mov
cli
mov
jo
push
xor
dec
sbb
push
cmp
dec
ret
fsubl
lock
fdivrs
popa
sub
pop
ds
adc
or
mov
ljmp
aad
xor
xchg
xchg
cmc
xchg
js
rorl
inc
adc
addr16
fcmove
ficoml
iret
push
inc
push
inc
adc
movsl
lds
xchg
adc
ja
ljmp
ss
xor
sbb
aam
test
int
sub
inc
stos
lahf
into
mov
addr16
lahf
add
pop
lds
sub
test
push
sbb
addl
ljmp
push
jb
xchg
pop
dec
fimull
nop
xor
pop
xchg
sub
out
gs
xchg
and
jp
mov
pop
movsl
in
dec
inc
cli
xor
psubd
ljmp
fidivl
js
sbb
inc
cmp
and
movsb
sbb
pop
mov
scas
fidivrs
cmpsl
cwtl
out
push
pop
push
sub
dec
and
cli
fsubr
int3
mov
mov
cwtl
notb
push
pop
push
pop
dec
push
or
xchg
jmp
lret
xchg
stos
lret
mov
jp
push
pop
cmp
cmp
dec
sbb
push
lcall
mov
cli
mov
jp
push
pop
cmp
cmp
dec
sbb
push
lcall
xchg
mov
rcl
push
push
sbb
stos
jge
xchg
cs
aaa
xor
mov
push
addl
jp
movsb
outsb
xor
xchg
jmp
sub
pop
pop
das
inc
jbe
mov
pop
call
stos
mov
shll
adc
and
dec
push
add
dec
insb
js
in
cmp
outsl
xor
test
push
add
xchg
jl
movsl
jl
push
aam
insb
sub
cmp
jle
jle
test
pop
ror
into
je
into
flds
jns
jmp
pop
mov
push
adc
sub
dec
mov
lea
lods
dec
pop
imul
dec
loop
daa
into
push
mov
aaa
pop
mov
loopne
adcb
popf
pop
aaa
sahf
imulb
out
rcll
and
add
xchg
dec
std
bswap
xlat
das
inc
les
roll
stos
js
push
push
and
jbe
arpl
fmul
movsb
addr16
adc
mov
out
cmp
bound
push
ja
je
inc
pop
aam
mov
das
cmp
push
jns
test
pop
dec
daa
jl
pop
dec
sub
pop
push
movl
cwtl
outsl
shrl
ret
push
inc
xchg
rol
es
aas
push
cmp
cmp
enter
loope
sahf
or
push
jl
es
das
je
pop
xchg
lret
aad
cmp
xchg
addl
push
xchg
xchg
push
repz
sahf
ljmp
mov
mov
movsb
mov
rcr
mov
out
out
mov
sub
int3
leave
movsl
fstpl
push
mov
pop
add
sbb
xlat
cmp
cmp
push
jecxz
jne
ljmp
movsb
or
cmc
cmp
fdivrl
rcl
and
sti
lods
pop
int
push
inc
fistl
pop
test
daa
mov
add
mov
repz
mov
cmp
std
mov
inc
push
sub
push
pop
lock
and
inc
outsb
xorl
jns
mov
sub
rcll
mov
outsl
inc
in
pop
iret
lock
push
aam
or
adc
out
pop
cmp
cltd
cmp
mov
test
lcall
arpl
test
mov
fistl
mov
mov
test
mov
out
mov
add
and
pushf
mov
test
push
sub
xor
insl
ds
mov
daa
mov
and
ret
push
fcmovnbe
jl
inc
dec
jns
sbb
pop
out
cwtl
xor
repnz
mov
cmp
sub
cltd
lret
or
mov
mov
fiaddl
xor
xchg
repz
imul
adc
dec
mov
pop
ljmp
fs
pop
mov
inc
inc
mov
in
xchg
test
fsubl
outsl
jecxz
push
test
xlat
adc
movsl
out
mov
dec
mov
mov
ljmp
xchg
in
and
adc
jmp
adc
mov
lret
inc
xor
ss
adc
mov
inc
cmpsl
fnstcw
imul
pushf
fnsave
lock
lret
jnp,pn
cmp
inc
mov
adc
xchg
lea
roll
andl
nop
push
popa
sbb
sub
fisttpll
mov
addr16
shrl
jle
cmpsl
scas
and
mov
ljmp
outsl
sbb
mov
cmp
push
shll
push
out
stc
popf
repnz
ja
repz
stos
xor
inc
or
mov
dec
cmc
sbb
sbb
aam
or
adc
sub
cmp
mov
repz
push
jmp
or
pushf
jmp
ds
mov
mov
repz
push
fistpll
jb
sub
cmp
insl
sub
adc
and
jne
xor
xchg
push
mov
adc
mov
mov
fcomi
sbb
push
and
xchg
das
in
xor
mov
pop
mov
lock
sub
sub
dec
gs
ss
ja
add
fdivs
jbe
xchg
sub
test
hlt
xorb
cs
inc
sub
ret
ret
imul
push
add
das
bound
orl
data16
push
iret
add
shrl
mov
adc
mov
jle
dec
dec
fldl
dec
pop
scas
adc
lods
subl
cld
push
cmpsl
test
add
loop
mov
lods
adc
or
pop
test
xor
sbb
aas
push
mov
push
stos
push
ffree
imul
gs
popa
std
jl
or
mov
clc
xor
adc
xchg
call
and
sbb
cmp
inc
movsl
sub
mov
xchg
std
sbb
push
fisttpll
std
dec
xchg
hlt
xchg
mov
lea
mov
fstl
test
daa
cmp
mov
outsl
testl
sub
dec
push
shl
mov
test
lahf
stos
jecxz
mov
test
stos
orl
out
enter
icebp
ret
mov
mov
mov
dec
pop
lock
ja
push
fldenv
or
dec
xor
xor
dec
cmp
push
pop
into
sub
cmpb
mov
mov
xor
xchg
fldl2e
pop
pop
pop
or
mov
dec
jno
pushf
fisubrs
cld
xchg
or
mov
push
lret
testb
mov
jmp
jns
or
scas
rcrl
xor
rcl
int
loop
pop
xchg
pusha
sub
popa
scas
pop
mov
aam
imul
sub
fwait
and
push
mov
mov
icebp
mov
or
or
xchg
xorl
in
out
sarb
jno
mov
es
jnp
repnz
fadds
sub
and
jnp
jl
dec
jnp
cs
mov
clc
sub
jae
call
cli
pushf
sti
sbb
add
mov
or
adc
inc
insb
inc
rorb
inc
xchg
or
jl
mov
push
inc
mov
dec
insl
cmpsb
pop
test
into
rolb
pop
scas
xchg
and
dec
sar
sbb
loope
and
adc
scas
fiaddl
dec
pop
lea
nop
gs
jnp
insb
dec
hlt
arpl
mov
mov
push
adc
cmpsl
jbe
shll
xchg
xchg
mov
xchg
cmp
or
cld
addr16
mov
rolb
jle
icebp
pop
add
jecxz
add
in
and
and
xlat
push
mov
jmp
ficoms
push
ss
inc
popf
jle
movsb
adc
adc
fwait
gs
mull
enter
push
jo
jge
call
mov
xor
nop
in
sbb
adc
add
lcall
stc
inc
enter
pop
rolb
mov
std
push
icebp
insl
cmc
cmpsb
int
aad
and
inc
xchg
idivl
insl
xchg
sub
jmp
insl
test
arpl
adc
lock
sbb
ds
pop
stc
and
pop
incb
adc
xchg
push
push
mov
sahf
mov
jo
repz
ljmp
ficomps
push
sarb
aam
jmp
pop
leave
pusha
ret
lret
stc
push
push
xchg
aas
int3
cmc
pop
cmpl
popa
or
aad
xor
sar
data16
test
jmp
mov
and
mov
fistpl
add
les
mull
cwtl
jnp
out
cmc
mov
inc
out
sbb
push
inc
sti
inc
movsb
out
add
dec
insb
fcoms
aas
cmp
loopne
sbb
mov
subb
aad
mov
or
sbb
ds
orl
mov
jnp
adc
icebp
pop
push
pop
insl
sub
mov
lods
and
or
sbb
push
bound
sarl
and
sti
jo
xor
jp
mov
adc
lds
dec
or
mov
pusha
imul
stc
call
lock
sub
repnz
mov
and
sbb
jecxz
mov
scas
pop
aaa
xor
or
call
aad
daa
sub
imul
in
in
jno
sbb
xor
lret
loope
aam
mov
arpl
sahf
jns
stos
out
lret
mov
shrb
inc
arpl
loopne
xor
mov
mov
mov
inc
ss
je
xchg
sub
decl
cmp
mov
and
push
clc
pop
andl
lods
clc
insb
or
jge
subl
iret
cs
popf
mov
dec
jmp
add
jns
inc
pop
add
repnz
fidivrl
jmp
sbb
xchg
mov
aam
into
out
es
cmpb
stc
push
lret
add
loope
ja
cwtl
mov
cmpl
dec
pop
rorb
gs
add
mov
cwtl
xchg
lahf
sub
or
xchg
xchg
and
jae
out
or
dec
repz
movsl
arpl
push
cmp
int
movsb
pusha
jp
cmp
or
icebp
inc
decb
xchg
loop,pn
aad
push
or
cli
sar
decl
jbe
fmuls
mov
mov
mov
orl
mov
mov
cmc
mov
popa
adc
add
add
dec
cmp
mov
arpl
clc
ljmp
sahf
add
add
movl
jns
dec
lret
or
subb
rclb
mov
dec
xor
je
xchg
aas
inc
and
and
mul
aaa
mov
mov
pop
or
test
pop
in
add
dec
cmp
loopne
push
fdivrl
into
js
lods
mov
lods
sbb
ljmp
lcall
xchg
aam
insb
int3
lret
xchg
mov
data16
pop
mov
adc
in
mov
xor
loope
pop
push
fwait
xchg
ja
mov
fcoms
jmp
cmp
mov
cmp
imul
notl
aam
push
xor
negb
push
flds
stc
mov
push
inc
in
xchg
mov
mov
push
call
rcll
pop
daa
sbb
shr
aaa
xchg
xchg
aaa
hlt
mov
rcr
js
into
sarb
iret
sbb
adc
fdivrs
cmp
nop
fildl
push
push
rclb
stos
pop
js
sub
fnstenv
into
lock
scas
add
lea
dec
or
pop
cmp
pusha
mov
lock
test
aaa
and
xlat
inc
adc
or
sarl
sahf
cmc
xor
dec
cwtl
mov
lods
dec
pop
aam
out
xor
pop
add
repnz
sub
mov
sbb
aam
inc
xchg
push
adc
dec
xchg
lret
pushf
fs
push
ret
jo
dec
es
pusha
jl
add
out
push
mov
divb
aaa
pop
fmull
mov
out
cli
int3
in
lcall
sbb
into
adc
push
pop
andb
xor
jb
sti
into
lock
sbb
mov
and
sub
mov
fwait
and
push
mov
ret
dec
mov
repnz
bound
mov
xchg
and
cs
add
cmp
fildll
repz
dec
lds
daa
js
mov
scas
sub
xor
pop
es
add
xchg
fisubs
inc
cmp
sti
popf
les
or
popf
std
mov
jmp
jne
xchg
sahf
negl
loop
jle
push
andb
mov
mov
add
cwtl
inc
lcall
test
xor
iret
loopne
push
out
sbb
pop
pop
push
je
mov
sub
movsb
lds
add
jne
mov
gs
lcall
inc
out
jne
repz
nop
ljmp
pop
ret
scas
xor
add
adc
push
push
push
mov
sbb
xchg
stc
sbb
lret
cmc
and
fisubl
int
sbb
pushl
pop
movsb
and
and
jmp
aaa
test
sahf
xchg
test
adc
mov
lods
sub
cmc
lea
sbb
and
imul
in
frstor
je
mov
in
out
faddl
add
jle
pop
les
popa
mov
negb
iret
and
inc
ja
mov
sbb
mov
xchg
jae
stos
mov
sbbl
push
add
fisubrl
cld
popa
mov
leave
xchg
jmp
mov
fistpl
ja
scas
in
adc
sbb
inc
mov
push
dec
fucomp
mov
cmp
mov
ss
int
sahf
dec
mov
lock
pop
and
out
lods
or
movsb
rcrb
shrl
jecxz
call
test
push
pop
xlat
or
cli
rorl
and
push
cmpsb
fdivrs
fsubrs
inc
scas
insl
into
jo
sub
jbe
adc
pop
and
inc
mov
paddusb
sahf
xor
xor
nop
fstpt
insb
xor
shrb
mov
mov
sbb
out
imul
imulb
and
pop
push
cmp
jno
jecxz
push
test
pop
add
push
test
jecxz
loop
inc
jo
es
sbb
and
es
push
mov
shll
mov
xor
cmc
mov
mov
dec
fs
jp
fwait
stc
push
mov
push
cmpl
jle
xchg
mov
pop
push
dec
imul
loope
and
lret
lcall
push
xchg
jnp
jo
add
test
xor
and
push
fs
imul
mov
bound
lret
sub
sub
test
mov
jecxz
mov
inc
adc
movsb
bound
fisttpll
popf
adc
mov
arpl
pop
mov
mov
lcall
or
push
jbe
int
xchg
mov
shl
jp
mov
xor
push
movsb
dec
jb
mov
pop
sbb
mov
aas
sub
sub
sahf
jnp
insb
sub
stos
out
xor
aad
jnp
mov
fldenv
mov
pop
insb
adc
xchg
xchg
in
pop
ja
adc
cmc
outsl
and
dec
fwait
sbb
adc
icebp
loop
shl
out
mov
cmp
leave
xor
addb
in
and
cwtl
pop
xor
test
jmp
insb
outsb
pop
xchg
dec
xchg
lds
aaa
sbb
cmp
ret
fnstenv
in
sub
fnstenv
aaa
xchg
mov
icebp
pop
lds
and
jb
cmp
cmp
inc
push
mov
push
mov
pushf
inc
sahf
xor
jb
push
xchg
jae
sbb
inc
and
mov
out
aaa
push
jno
cmp
jp
out
loop
mov
mov
imul
mov
bnd
outsb
inc
cmp
mov
or
mov
pushf
xchg
cmp
les
fisttpll
das
dec
pop
punpcklbw
or
and
sahf
mov
loope
mov
inc
sti
mov
ja
arpl
push
in
insb
cmc
pop
sbb
pop
aaa
int
movsb
jbe
push
or
pop
pop
cmp
push
es
dec
pop
nop
decl
arpl
std
insl
int3
xor
out
and
outsl
shr
daa
iret
iret
nop
dec
mov
loop
adc
sub
pop
sbb
mov
lahf
in
repz
pop
jp
in
aaa
cmp
push
movsb
mov
addr16
shlb
ss
sar
shlb
in
pop
cmpsl
rcrl
rcrl
mov
mov
or
nop
push
dec
pop
pop
jecxz
test
mov
fsubl
imul
jl
jecxz
and
jl
lret
fisubs
xchg
jp
jp
jmp
test
shll
popa
add
dec
fcomp
je
sub
out
imul
and
clc
fisubrs
and
push
shrb
add
sbb
imul
or
cmp
jecxz
jle
jbe
push
add
pop
dec
add
xchg
test
sbb
out
aaa
mov
or
insl
pop
pop
cmp
xor
mov
addl
insl
into
or
daa
nopl
xor
sbb
iret
mov
adc
mov
inc
fidivs
adc
mov
or
aas
leave
sbb
clc
pop
mov
mov
jl
mov
mov
jne
mov
outsl
and
cmp
notb
mov
xorl
xor
dec
push
dec
mulb
mov
std
adc
ljmp
push
sub
xor
push
sahf
inc
xor
insl
mov
jns
and
sub
inc
mov
push
add
xor
je
fucomi
cmpb
and
cli
adc
jp
push
or
jg
or
push
shl
imul
push
lds
hlt
mov
pushf
ret
inc
rcl
ljmp
jge
idiv
jo
pop
fstl
stc
sahf
iret
cmp
insl
mov
dec
mov
sub
jge
cmpsl
xor
sbb
scas
aas
mov
test
leave
shrl
adc
sub
lret
stc
repz
and
and
test
xor
loope
insl
push
scas
cmp
rclb
mov
ljmp
pop
cmc
and
enter
jno
es
or
iret
xchg
mov
stc
pop
mul
cltd
adc
jb
xchg
pop
jb
jecxz
in
mov
enter
sub
jns
mov
lcall
xchg
call
jl
push
adc
fisttpll
jl
test
add
cltd
stos
sbb
jp
cs
xchg
pusha
pop
or
mov
out
push
negl
dec
fwait
lds
push
adc
or
lret
rclb
aam
mov
test
mov
xchg
jns
xor
shll
out
xchg
ljmp
movsb
mov
out
push
and
das
stc
aaa
mov
je
jg
inc
mov
das
and
shll
push
and
js
movsb
jnp
orb
or
xchg
and
and
fbstp
loope
icebp
mov
push
aaa
clc
sub
fldt
in
dec
je
dec
mov
fbld
xor
xor
push
clc
imulb
cmp
cmp
push
gs
add
mov
and
stos
add
ljmp
sti
push
inc
mov
cmpsb
sub
fcoms
fcomps
push
roll
int3
xchg
push
jle
jmp
cltd
lret
adc
xchg
lahf
or
cmpsb
cwtl
and
adc
test
cmp
mov
sti
add
popa
xor
mov
out
aad
std
sbb
scas
inc
ret
xor
cmpsb
out
xchg
jae
mov
mov
mov
mov
fstl
psubw
xor
test
loop
adc
lret
loope
imul
xchg
shl
sbb
daa
sub
lret
ret
hlt
mov
test
cmp
aam
mov
cmp
xorb
pop
dec
pop
xor
or
bound
flds
call
xor
dec
mov
sar
shr
or
daa
mov
push
idivb
or
rcrb
loop
or
int
rclb
shrl
lcall
jmp
test
subb
push
fdivrp
mov
inc
pop
ret
mov
push
out
lret
push
sub
in
cli
aam
pop
cmp
test
sbb
inc
lods
xchg
push
scas
adc
mov
rorb
sarb
push
cmpsl
cwtl
mov
push
out
enter
jo
sbb
inc
pop
mov
adc
cltd
push
cmp
inc
ficoms
mov
addb
sbb
cmp
in
imul
mov
sub
add
fstpl
stos
mov
xor
adc
pop
test
xchg
add
add
adc
xchg
add
sbb
pushl
cmp
xchg
int3
movsb
xchg
mov
cs
scas
push
nop
fdiv
add
pop
mov
lahf
addb
scas
fs
mov
mov
bound
lods
cmp
mov
dec
cld
shl
and
fimull
push
cmpsb
mov
push
pop
sbb
or
pop
lret
mov
dec
cmp
jns
orb
cmpb
mov
fidivrs
mov
mov
jge
insb
dec
pusha
lock
xchg
push
sbb
test
sub
push
pop
inc
or
mov
cmp
lahf
addr16
push
mov
mov
lock
cmp
scas
mov
stos
lret
mov
jp
push
pop
cmp
cmp
dec
sbb
push
lcall
mov
cli
mov
jp
push
pop
cmp
cmp
dec
sbb
push
sahf
ljmp
fisubrl
ljmp
dec
and
pop
cs
sbb
mov
jle
outsb
in
pop
lret
fisubrl
sub
cmp
dec
and
adc
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
push
setb
adc
mov
pop
add
add
add
pop
push
add
add
add
add
add
pop
add
add
add
add
add
push
imul
add
add
add
add
add
lea
movb
add
push
add
out
filds
testl
inc
add
add
pop
add
sbb
sbb
and
fldl
xchg
or
jg
cs
add
add
add
add
into
add
add
nop
add
add
add
add
pop
add
fldl
aaa
add
add
add
add
add
add
xor
cmc
add
add
add
les
lea
pop
add
add
add
or
in
add
add
add
add
jb
xchg
sbb
roll
add
jg
stos
add
add
add
add
add
sbb
xor
add
add
add
add
add
add
add
add
add
add
jl
pop
add
add
add
adc
add
add
add
add
fiadds
sbb
xor
int
data16
sbb
and
and
jg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
xchg
add
add
add
add
add
inc
add
mov
cmp
je
and
and
and
out
roll
add
pop
add
mov
filds
pop
add
das
add
add
or
movl
fwait
add
or
jg
pop
add
add
add
and
and
fldl
push
add
mov
pop
add
add
add
or
or
sbb
pop
add
add
add
add
add
xchg
add
addl
add
add
xor
add
add
add
add
add
add
add
movl
xchg
cmp
out
mov
in
xor
add
int
pop
add
add
and
xor
add
pop
add
or
mov
add
add
add
daa
add
sbb
adc
in
nop
add
add
add
add
insl
add
pop
add
sbb
lahf
add
add
add
add
add
ltr
add
inc
add
add
add
stc
add
add
add
add
add
add
add
into
add
dec
add
add
inc
add
add
add
adc
mov
add
add
add
mov
add
add
add
add
sbb
sbb
adc
inc
add
add
add
add
sbb
adc
xchg
in
add
addb
add
add
pop
add
add
add
add
add
add
jnp
adc
jecxz
out
or
add
add
jo
popf
add
add
add
pop
add
mov
dec
add
je
pushf
add
xor
arpl
push
and
and
test
add
add
add
pop
add
testb
add
add
add
add
adc
faddl
push
add
filds
enter
in
arpl
add
inc
jno
mov
xchg
mov
ret
arpl
lds
out
push
jo
out
dec
adc
xchg
mov
or
rcrl
jg
adc
mov
push
or
js
leave
pusha
mov
cltd
xor
call
push
stos
sub
mov
shll
mov
pop
adc
jg
test
xor
pop
or
add
insl
push
fdiv
stc
jb
sub
testl
lea
adc
mov
jo
mov
cmpsl
rcrl
mov
dec
xorl
push
outsl
std
inc
outsl
test
jno
and
js
push
xor
psubusb
or
mov
aam
mov
adcb
nop
sahf
into
add
fisubrl
clc
leave
vcvtpd2qq
jmp
pop
cmp
mov
mov
sbb
adc
lea
lock
add
cmp
add
inc
inc
jo
add
dec
dec
push
cmc
jmp
stos
and
cmp
and
pop
data16
and
mov
and
cmp
adc
outsl
bound
xchg
sbb
fs
inc
stc
inc
xchg
pop
int
loop
xchg
mov
stos
adc
jne
int
popa
ja
xchg
inc
adc
ja,pt
jns
sti
lods
adcl
xor
and
dec
fs
ficoml
adc
icebp
fsts
repnz
lea
mov
out
xor
push
outsl
test
scas
mov
xor
scas
push
mov
mov
push
lret
jg
mov
mov
xor
ss
cmp
cmp
cwtl
xchg
dec
push
js
invd
std
add
mov
mov
cltd
add
xor
hlt
imul
gs
jno
sub
lret
cmc
or
push
mov
pop
cmp
clc
sahf
insl
sbb
xor
cmpsl
add
testl
dec
mov
das
lahf
into
jg
push
jmp
ds
sub
lods
out
lret
cmpl
popf
test
gs
cmp
fst
mov
mov
out
and
call
leave
into
mov
movsl
repnz
shrb
lahf
test
sbb
pop
int3
push
imul
mov
and
cmp
inc
xchg
add
xor
push
and
pusha
sbb
jecxz
push
movsb
aam
les
push
fcoms
ss
mov
xchg
cmp
mov
fistpl
dec
js
stc
loop
pusha
cmp
sub
lea
push
mov
aad
pop
setno
mov
push
inc
cltd
xlat
lds
pop
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
