call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
test
imul
ds
push
sbb
or
sti
sahf
out
lret
sahf
leave
into
mov
decb
push
pop
ds
dec
cmp
outsb
sbb
test
sahf
jmp
sti
jl
into
fcomp
jnp
fwait
decb
ss
es
push
and
jbe
imul
ret
lret
loope
xchg
lds
jnp
add
push
rolb
repnz
test
pusha
fists
mov
addr16
rorb
es
sub
shrl
mov
mov
aad
xchg
mov
inc
jnp
add
mov
jb
mov
add
push
in
addr16
das
add
sub
out
jle
sub
addr16
dec
xor
cmp
into
pop
mov
imul
jmp
inc
jle
mov
cmp
xor
call
pop
loope
inc
loope
ja
dec
stos
push
sbb
or
sahf
mov
arpl
push
mov
mov
repz
lret
push
xchg
popa
call
mov
fimuls
fs
fwait
into
jnp
jl
dec
sub
cmp
add
xchg
jecxz
repz
cmpsl
rcl
mov
out
jge
jnp
dec
pop
pop
dec
sub
inc
insb
ja
data16
xchg
sahf
xchg
fmull
mov
out
add
imul
dec
cmp
sbb
jg
mov
jmp
lret
mov
idiv
out
cmp
push
dec
cmp
ds
pop
sub
jle
mov
sahf
jmp
fstpt
stos
out
fwait
decb
cs
ds
dec
cmp
outsb
sbb
mov
sahf
jmp
fstpt
stos
out
fwait
decb
ja
push
pop
popa
push
jb
shll
in
adcb
jb
outsb
and
push
ljmp
loop
cmp
cmpsb
cli
and
movsb
mov
enter
and
mov
addr16
inc
add
adc
sub
and
mov
sub
cltd
in
xor
mov
pop
cltd
xor
xchg
cmp
cmp
imul
aas
adc
mov
inc
leave
div
sbb
add
sbb
or
add
pushf
ja
xchg
xchg
aam
movsb
js
mull
xchg
xor
xchg
sbb
insb
push
push
mov
adc
and
push
xor
pop
frstor
jmp
and
adc
int
pop
test
dec
out
sbb
pushf
xor
and
sbb
in
pop
push
push
repz
lods
stc
es
jae
mov
mov
jno
push
xchg
fadds
jb
les
cmpsl
sbb
stos
mov
sub
pushf
insb
mov
into
popf
jle
into
xchg
add
dec
adc
out
roll
in
or
or
jb
inc
les
inc
dec
xor
adc
lods
call
push
inc
aad
mov
outsl
dec
inc
lahf
das
push
imul
cltd
cld
pop
xchg
sub
shl
pop
jae
ret
adc
mov
shrl
lea
mov
repnz
icebp
lods
inc
xchg
imull
push
mov
cmp
inc
cld
sbb
sbb
cmpsl
pop
leave
lcall
das
ret
push
int3
xchg
sub
shlb
dec
cmp
ror
daa
inc
inc
sub
in
and
xlat
pop
mov
outsl
popf
jge
test
imul
sbbb
or
ljmp
push
faddp
ljmp
sbb
or
enter
hlt
insl
sbb
subl
jno
xchg
stc
pop
outsb
cli
mov
push
xor
lahf
adc
jae
out
pop
mov
push
imul
test
pop
pop
loope
xchg
push
loope
and
arpl
jl
mov
cmp
inc
and
inc
pop
xor
pop
xor
fisubs
push
inc
dec
imul
lds
in
xchg
or
fs
sbbb
adc
mov
fsubl
shlb
pusha
hlt
jo
out
ljmp
cmp
jmp
adc
fisubrl
dec
mov
add
outsl
fwait
sbb
cli
and
out
ret
adc
rcr
outsb
inc
pusha
mov
popa
ret
and
out
ret
jmp
scas
xorl
dec
repnz
xor
push
mov
xor
mov
xchg
ljmp
mov
xor
xchg
cmpsb
and
call
inc
and
xchg
rcrb
inc
orl
jmp
dec
jp
loop
scas
sub
aad
push
arpl
jns
jge
cs
rclb
add
movsl
ret
js
pop
mov
popf
xor
jbe
jne,pt
mov
mov
or
sbb
cmpsl
xor
imul
add
aam
insl
clc
inc
rorl
dec
jmp
std
or
mov
push
adc
icebp
jmp
into
cmp
push
lret
jl
inc
mov
adc
adc
jbe
mov
hlt
push
imul
mov
fldcw
andl
adcl
jo
int3
imul
sbb
data16
sbb
adc
orb
xor
lock
inc
pop
push
mov
sahf
mov
cmpsb
push
dec
setge
ljmp
jle
jmp
sub
xchg
dec
imul
inc
cltd
adc
cmc
or
mov
jl
jae
pop
ds
in
aaa
xor
pushl
loope
stos
test
lret
cmp
adc
cmpsb
fnstenv
add
rclb
mov
sub
imul
pop
or
fiadds
gs
pop
inc
jno
inc
inc
dec
mov
mov
sarb
xlat
out
orb
into
inc
pop
repz
mov
cmp
popf
mov
cli
out
rolb
loope
in
adc
inc
xor
push
rorb
outsb
cmpsl
sbb
or
call
mov
rclb
jl
mov
ja
aaa
and
ljmp
out
insl
add
sarb
repz
push
in
push
flds
pusha
add
pushl
fnstcw
push
mov
dec
sub
adc
sub
xchg
shrb
push
lret
pop
mov
push
xchg
inc
xchg
rolb
ret
mov
or
push
adc
push
addl
sub
xorl
adc
popa
out
xchg
and
sub
fnsave
pop
int3
repnz
in
outsb
cmpb
dec
pop
jg
push
sbb
mov
inc
mov
adcb
jae
pop
sub
lds
leave
rol
faddl
sbb
mov
adc
mov
and
push
xor
and
push
mov
sti
inc
mov
jnp
divl
sub
lods
jmp
insl
popf
sub
add
mov
loope
mov
xchg
inc
jo
call
inc
add
lahf
sbb
mov
sti
orl
aaa
adc
stc
sub
lret
rol
fidivs
dec
push
hlt
cltd
jl
sub
repz
aas
out
mov
dec
dec
pop
dec
pop
in
clc
and
add
push
mov
adc
cmp
pop
shrl
jge
lahf
pop
lods
jbe
imul
xchg
xchg
loop
test
dec
pusha
pop
xchg
ljmp
xchg
xor
push
fwait
imul
movlps
cld
inc
add
push
shll
fs
xchg
std
popa
sub
popa
inc
sub
xchg
fdivrs
stc
in
and
xchg
ret
ja
cmp
int
sub
lock
std
adc
sub
inc
fwait
mov
inc
mov
jp
adcl
sbb
sub
sub
push
pop
fstps
push
inc
insb
add
pop
mov
jge
fsubl
sub
popf
xchg
cmp
stos
mov
push
mov
cltd
xor
hlt
inc
jae
xorl
icebp
scas
leave
jns
loopne
jmp
cld
scas
mov
repnz
call
jo
cmpsb
adc
or
mov
dec
xchg
jmp
inc
jns
or
pop
push
addl
inc
mov
aaa
sarl
sbb
pop
jnp
xor
jnp
push
out
sub
call
adc
cmpsl
in
loope
rcl
jl
jne
mov
xor
lcall
into
push
fisubl
arpl
in
push
xchg
add
fidivrl
adc
stos
sub
addr16
gs
sub
xchg
scas
cmp
flds
shlb
aam
addb
mov
fwait
in
sti
sbb
rclb
fwait
int3
fisttpll
pop
inc
lock
xchg
and
sub
pop
inc
or
es
rcrl
jae
ss
pop
jbe
mov
xchg
sbb
mov
cmc
scas
mov
dec
pop
or
xchg
mov
ljmp
int3
fcmovne
add
icebp
xchg
mov
cmp
mov
lods
dec
mov
out
outsl
fadds
jge
addl
pusha
mov
xor
jl
and
xchg
cli
xchg
test
sub
int
push
clc
shl
loopne
or
lcall
nop
in
or
pop
scas
clc
aaa
push
fsub
add
setnp
cltd
xor
xor
fdecstp
mov
sbb
out
adc
cli
ja
add
push
xchg
in
sub
pop
lcall
pop
jne
imul
out
pop
mov
push
repnz
pop
mov
mov
aam
and
scas
inc
fsubrs
cs
int
jecxz
jno
stc
push
out
ja
dec
fisubs
sbb
xchg
cmp
bound
icebp
cld
mov
pusha
inc
cmp
cmp
icebp
jo
mov
movsl
push
sti
mov
cmp
lock
call
insl
push
sbb
jb
jae
push
mov
loopne
push
fimuls
xor
cltd
sbb
cmp
scas
aaa
les
mov
mov
sub
test
popa
imul
js
push
mov
popf
jle
es
rcrb
in
adc
cltd
mov
sbb
fwait
mov
je
stos
mov
inc
xchg
adc
in
mov
add
cmp
jne
xchg
adc
inc
loop
rcrb
popf
mov
outsl
inc
sarb
xchg
out
mov
mov
cmpl
dec
push
pop
mov
les
test
add
dec
or
out
gs
adc
popl
inc
push
ud2
bound
xchg
or
adc
push
shl
adc
or
sti
lock
iret
je
dec
cmp
mov
mov
les
or
pop
xor
aad
lahf
mov
imul
not
mov
mov
pop
inc
fildll
jb
pop
push
loopne
loop
xchg
notl
xor
or
nop
add
fisttpl
mov
push
mov
in
xchg
pop
fldt
pop
and
adc
dec
push
xchg
jmp
stc
cs
loopne
push
rcll
xlat
loope
insl
cmp
lods
push
jnp
mov
push
js
roll
std
mov
mov
pop
dec
pusha
bound
test
es
pop
aaa
pop
out
add
push
lcall
xor
xchg
inc
jge
inc
lock
mov
xor
and
and
xor
rclb
ret
mov
lret
int3
mov
mov
jmp
mov
fcoms
mov
pop
sub
xchg
loope
aaa
mov
adc
mov
jmp
pushf
mov
mull
in
scas
in
inc
bound
adc
je
stos
sbb
xchg
mov
int
outsb
mov
test
mov
jne
notl
jecxz
cwtl
xor
sub
lods
dec
mov
sbb
pop
into
mov
or
mov
jb
jle
mov
cs
roll
cmpsl
inc
lods
dec
and
add
daa
sub
mov
push
lea
xchg
ret
xchg
inc
frstor
lret
fwait
es
jbe
repnz
xor
fstps
jl
shlb
mov
push
int
aam
push
jae
xchg
push
mov
or
lock
fidivrl
test
out
dec
test
xchg
mov
sbb
sbb
sbb
loope
aad
mov
jns
out
fisubl
jmp
pop
adc
loope
addr16
mov
insb
pop
stos
jmp
ret
xlat
arpl
mov
cli
adc
stc
mov
push
out
sbb
aaa
jge
das
andl
adc
enter
sbb
arpl
enter
popa
je
mov
or
ret
hlt
mov
mov
inc
mov
fisubrs
stos
add
inc
lods
adc
xchg
lahf
or
mov
mov
test
sub
sub
ja
ds
xchg
add
push
out
dec
movsl
push
cmp
cmp
sbb
dec
test
jmp
or
ret
imul
test
subl
inc
adc
out
icebp
dec
or
xchg
mov
mov
dec
mov
inc
add
push
mov
pcmpeqd
xchg
mov
data16
pop
jecxz
in
out
movsl
add
lret
sbb
pop
arpl
xlat
cmpsb
out
mov
or
xadd
daa
out
or
movsb
sti
ror
in
out
dec
push
divb
mov
cltd
test
lods
clc
lods
sub
sti
mov
push
push
and
dec
mov
inc
sbb
cmp
dec
dec
cli
sbb
scas
push
dec
shll
aad
push
loop
dec
repz
mov
mov
mov
add
je
pop
push
xchg
xchg
inc
jno
pop
sub
frstor
gs
cld
arpl
fcmovne
outsl
pushf
add
push
sub
or
push
mov
or
cmp
incb
mov
adc
cld
mov
sub
rorb
sbb
dec
mov
repnz
and
dec
leave
sti
sub
mov
leave
adcb
dec
or
sahf
jge
pop
fsubs
test
fcmovu
andl
jle
mov
push
adc
push
mov
xlat
sbb
ja
xchg
loope
cmp
and
xor
pop
mov
mov
out
jmp
jns
cs
mov
pop
sbb
push
push
lods
cwtl
pop
iret
div
ljmp
stos
mov
push
adc
icebp
pop
jge
pop
and
in
push
shrl
das
cltd
jns
sbb
iret
mov
enter
lods
or
nop
cld
pusha
rcll
inc
fwait
xor
ret
imul
and
jno
es
pop
icebp
adc
lret
inc
cmp
sbbb
xor
mov
jnp
cmp
sarl
jmp
push
cwtl
ret
push
sub
add
pop
mov
das
into
addb
stos
inc
in
cs
push
shrl
jge
pop
sub
or
jae
xor
cmp
sub
in
add
andl
sbbl
mov
cld
or
test
rorb
inc
mov
add
jne
loopne
jo
adc
fstpl
push
mov
rorl
jg
cmp
jmp
ja
icebp
test
mov
outsb
mov
jbe
inc
pop
jne
vpaddsw
dec
sub
jl
mov
jecxz
fiadds
rorb
sub
rep
or
cmp
insb
into
push
sbb
mov
call
cmpsl
mov
add
adc
out
aad
push
mov
sarl
jo
sbbl
lcall
push
jnp
dec
jmp
mov
pop
movsb
inc
fsub
cmpb
shlb
sub
imul
pop
xor
shll
ret
push
pop
pop
dec
maskmovq
imull
pop
lea
cmp
mov
mov
pushf
stc
loope
leave
sub
jno
push
add
sub
faddl
cs
fwait
sub
je
gs
inc
or
scas
loope
sbb
sub
decl
xchg
or
jecxz
or
inc
scas
or
cld
mov
xorb
lcall
dec
mov
and
call
test
fisubrs
or
sub
imul
jb
mov
inc
cltd
addr16
stos
sbb
ret
js
enter
pop
pop
in
jle
xchg
ficomps
cmp
jp
daa
push
addr16
clc
inc
cmp
aaa
mov
cmp
mov
pop
mov
stos
clc
adc
inc
mov
mov
pop
jecxz
bound
push
or
xor
shll
cmc
mov
sub
jb,pt
inc
cld
std
jae
jo
out
clc
test
sub
fdivp
or
xor
cmp
lcall
lea
std
movsl
and
scas
sti
xchg
cmp
push
mov
mov
lret
lahf
hlt
lahf
jmp
jg
testl
lret
cmp
jle
das
movsl
push
js
shl
popa
outsl
sub
test
int3
jmp
in
sbb
add
sbb
sub
cmp
enter
mov
mov
pushf
pop
xchg
jge
cmp
lcall
add
addl
cmp
outsl
jp
sub
jmp
dec
mov
lds
pop
push
fs
stc
jecxz
push
shrb
daa
add
das
xchg
mov
lea
jnp
ret
ret
xchg
push
imul
pushl
loope
shl
mov
jae
iret
nopl
bound
mov
inc
mov
inc
mov
adc
nop
xchg
faddl
add
xchg
mov
gs
ja
jl
aaa
mov
mov
ja
lcall
mov
xchg
xlat
addb
fsubr
mov
jge
dec
mov
inc
data16
scas
and
mov
inc
mov
pop
sbb
dec
mov
ret
xor
jne
mov
or
add
xchg
inc
xor
xor
scas
pop
aaa
loopne
popf
gs
mov
decb
xchg
ret
inc
adc
imul
xchg
lods
and
sub
stos
sub
adc
fistpll
nop
flds
inc
jns
sarb
mov
jae
and
pop
cld
stos
fnstenv
dec
mov
inc
or
cltd
jmp
or
mov
sbbb
outsl
in
mov
outsb
cwtl
dec
repz
push
mov
xor
mov
sahf
dec
xchg
std
addr16
xor
pop
aad
in
cmp
call
adc
add
dec
jbe
insb
push
mov
loope
ds
lcall
cmp
sbb
aas
adc
add
repz
decb
sbb
cmpsl
aaa
stos
loopne
lahf
mov
rcr
stc
or
enter
xchg
lods
ds
cmpb
insl
inc
dec
xorb
in
out
xlat
mov
jno
rcrl
sbb
xchg
jnp
call
movsl
jne
imul
mov
add
test
repz
rcl
int3
sar
inc
sti
aas
mov
movsl
jb
adc
out
xor
sbb
out
cli
mov
inc
push
rcrl
sbb
cmp
addr16
xor
nop
mov
shrl
pushf
jae
loope
and
inc
ljmp
or
lahf
mov
test
or
je
push
rorl
mov
in
movsb
or
andl
cld
mov
nop
pop
pop
add
add
lea
call
das
out
daa
sub
xchg
shrb
adc
add
call
xor
shll
arpl
pop
jecxz
or
adc
cmp
popa
and
inc
mov
aam
pop
cmc
mov
mov
iret
jns
es
xor
mov
inc
pushf
divb
xor
sti
movsb
mov
fwait
cmc
add
cmp
jo
add
mov
in
push
pushl
popf
jl
fidivl
sub
cli
add
movsl
bound
sbb
push
fwait
jmp
loopew
sub
mov
aad
scas
shrl
dec
dec
mov
sti
daa
loope
dec
aad
xchg
add
mov
rorb
push
lcall
push
push
xchg
pusha
xor
mov
pusha
subl
cmp
stos
cmp
pusha
clc
fdivs
pop
stc
inc
sbb
hlt
leave
fdivs
mov
xor
and
lret
je
dec
test
inc
jne
push
pusha
in
sub
jne
leave
out
lcall
les
js
js
and
in
or
aaa
shrb
push
les
scas
je
cmc
xor
call
cmpsb
mov
insb
xor
sub
cmp
add
add
and
or
mov
and
mov
cmp
movsl
and
mov
jb
daa
mov
pop
aad
pusha
lods
lods
adc
or
scas
jbe
push
push
xchg
xor
xchg
lret
aad
stos
mov
cmp
imul
gs
push
dec
push
fimull
sub
dec
mov
fildl
cmp
adc
aad
dec
es
or
push
sub
jge
jle
mov
xchg
cli
xchg
in
cmpl
subl
push
enter
in
or
add
sahf
jp
mov
cmp
in
movsb
push
cmpsl
sub
jg
icebp
inc
scas
xor
push
add
rsqrtps
out
mov
inc
ror
or
daa
arpl
enter
add
ds
dec
and
das
aaa
imul
stc
dec
out
push
sub
test
ja
movsl
xchg
mov
mov
out
add
or
orl
mov
or
jecxz
adc
inc
add
add
bound
inc
addr16
adc
push
jp
cmp
xchg
cmc
pusha
nop
adc
data16
loopne
add
add
sbb
pop
pushf
inc
add
adc
adc
cmp
xor
bound
in
sub
mov
jns
mov
pop
into
in
and
dec
imul
cltd
and
inc
fldl
addl
adcl
jg
inc
out
pushf
lret
cli
cltd
rclb
jp
test
cmc
roll
icebp
and
cwtl
cmpsl
mov
cmp
jae
ds
dec
cmp
outsb
sbb
mov
sahf
jmp
fstpt
stos
out
fwait
decb
cs
ds
dec
cmp
outsb
sbb
mov
sahf
jmp
fstpt
stos
out
fwait
decb
cs
ds
dec
cmp
outsb
sbb
mov
sahf
jmp
fstpt
stos
out
lcall
sbb
dec
dec
cmp
out
sbb
or
popa
inc
add
mov
push
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
aaa
mov
repnz
pushf
addr16
sub
jl
insb
pop
out
out
pop
lods
pop
pushf
aaa
mov
cld
push
in
inc
fdivl
add
sub
push
mov
pop
testl
aaa
mov
cld
push
in
inc
fdivl
addr16
sub
outsl
shlb
leave
adc
setnp
xchg
and
out
incb
in
in
test
je
adc
jnp
in
pop
in
negl
mov
or
aaa
pop
adc
imul
lret
cmp
lret
js
dec
mov
pop
dec
mov
inc
pop
daa
push
in
loopne
sbb
mov
xchg
inc
xchg
mov
pop
fsubrl
in
cmp
sub
lcall
cld
push
cld
inc
and
xchg
cmp
xchg
jno
and
orb
xlat
fdivr
test
sub
out
frstor
int
sub
rclb
icebp
test
mov
dec
xchg
adc
mov
sbb
out
insb
xchg
inc
and
dec
pop
inc
insl
xchg
pop
mull
loop
lods
pop
pushf
aaa
mov
cld
push
in
inc
fdivl
addr16
sub
sbb
or
jl
insb
pop
testl
jbe
xchg
adc
adc
sub
sbb
sbb
int3
jg
inc
mov
and
dec
pop
repnz
pop
rorb
sbb
dec
mov
push
enter
lea
gs
inc
fdivl
addr16
sub
sbb
or
jl
insb
pop
testl
aaa
mov
cld
push
in
inc
fdivl
addr16
sub
sbb
or
jl
insb
pop
testl
pop
test
mov
roll
mov
pop
jo
mov
lods
popf
dec
aad
lods
mov
aam
mov
cwtl
jo
inc
add
mov
leave
in
xor
iret
ss
fs
jmp
add
std
push
inc
fisubrs
add
mov
pop
mov
xchg
jecxz
data16
adc
or
icebp
inc
adc
aaa
movsb
cld
pop
shr
and
xchg
jl
iret
dec
imul
adc
sbb
test
jecxz
xchg
xchg
xchg
lock
je
sbb
les
sti
pushf
xlat
push
divl
xorl
fmulp
mov
inc
push
or
insl
sub
lds
pop
test
lock
xabort
mov
rorl
xor
mov
lods
and
das
push
addr16
xchg
jle
icebp
dec
jl
sub
mov
cmpsb
push
pop
iret
movsb
mov
or
outsl
rcl
mov
lock
cmc
sub
loopne
test
mov
nop
cmp
into
xchg
mov
popf
addr16
daa
shrl
xchg
roll
enter
insl
aam
insl
xchg
loope
pop
cmpsb
or
nop
icebp
pop
adc
push
aaa
adc
les
cmpsl
rcll
sahf
dec
xchg
adc
xlat
jmp
movsb
cmc
jo
scas
mov
pop
mov
test
jg
bound
inc
adc
dec
mov
jne
xlat
fnsave
sahf
inc
xor
xchg
bound
adc
rorl
mov
lcall
pusha
shl
shlb
push
adc
ljmp
pop
sub
cmp
push
adc
aas
les
sub
pushl
addl
mov
iret
push
dec
movsb
xlat
lds
roll
adc
ljmp
ljmp
jl
insb
sbb
movsb
jp
sub
addb
xor
fdivs
add
test
and
mov
popa
jbe
lcall
in
add
insl
jg
push
mov
or
arpl
inc
jno
inc
in
fdivrs
rolb
out
jmp
gs
jle
std
loop
inc
or
push
adc
push
push
mov
rolb
fcomps
pop
push
popa
adc
and
fcmove
xchg
adc
test
lcall
mov
decl
repnz
push
add
sub
push
push
jbe
mov
insl
mov
cmp
addr16
imul
jmp
pop
mov
outsb
sub
pop
sbb
push
insl
les
dec
leave
sub
pop
fimull
xchg
jb
stos
pushf
sub
in
sbb
push
neg
dec
jae
mov
pusha
sub
std
push
push
mov
das
sbb
lcall
shll
jo
adc
or
adcb
cltd
pop
inc
call
and
out
xor
pop
xor
fwait
xchg
push
je
adc
pop
ss
jmp
pushf
aas
cmp
or
mov
adc
sbb
mov
lods
cmp
lret
mov
lcall
lock
test
repz
testb
mov
jg
js
dec
movsb
ss
fcoms
ljmp
add
jns
inc
repz
mov
mov
cwtl
js
fwait
jg
or
scas
fmuls
mov
or
dec
dec
in
and
jmp
subb
jno
rol
and
leave
insl
lods
pop
stos
sbb
mov
push
call
sbb
mov
inc
push
aas
idiv
ljmp
push
outsb
aam
or
mov
jp
mov
inc
imul
in
jl
data16
sbb
xchg
pop
mov
insb
push
orl
cmc
xchg
and
fbld
mov
mov
cwtl
adc
adc
mov
lcall
fmuls
mov
ficompl
loopne
xchg
mov
and
or
push
pop
mov
bnd
sbb
cmp
pop
shll
icebp
lcall
jge
das
cmpsb
shr
enter
or
repz
mov
pop
sbb
pop
testb
lock
ss
icebp
out
jb
addl
or
hlt
jnp
enter
or
mov
std
ds
bound
mov
andb
call
call
lock
xor
int
sub
movsl
sub
lret
loopne
xchg
jbe
int
and
aad
or
mov
repz
sub
or
add
negl
dec
fists
popf
xchg
pop
add
sbb
lods
mov
iret
pop
and
scas
into
gs
sub
mov
hlt
xor
pop
pop
dec
loopne
imul
imul
gs
pop
adc
movsbl
sahf
xor
cmc
mov
mov
jbe
ficomps
das
cmc
or
cmp
push
push
pop
cmp
dec
push
cmp
dec
xorl
loopne
jle
rorl
daa
and
or
lods
nop
push
mov
int
push
stc
mov
je
push
mov
test
inc
mov
pop
sub
xchg
scas
lock
sub
push
sub
shrl
inc
je
pushf
bound
arpl
or
fstpt
fsubp
or
adc
pop
xchg
call
mov
in
stc
movsb
and
jns
pop
inc
pop
pop
mov
inc
and
or
adc
cmpsl
mov
mov
sub
fwait
dec
lds
mov
mov
cld
lea
xchg
lods
hlt
fmull
and
lret
inc
push
testl
jp
lds
inc
pop
mov
data16
jo
push
jb
jle
xchg
sti
in
xor
pop
nop
out
popf
loopne
sub
lock
je
fstpl
ficoms
ja
xchg
int3
aaa
inc
leave
leave
mov
jno
leave
shl
jle
mov
pop
and
mov
enter
jb
mov
push
sbb
sarb
add
pushf
and
icebp
add
xor
std
xor
loopne
into
ficompl
add
outsb
mov
das
adc
push
or
mov
push
sub
gs
lock
mov
xorl
mov
xor
mov
test
xchg
fs
and
adc
xchg
sbb
inc
fsubrs
pop
aas
and
push
push
pop
daa
mov
sub
push
or
jp
rolb
dec
xchg
inc
rcrb
dec
pop
inc
pop
add
xor
fwait
sub
js
pop
sahf
fstps
stos
dec
loope
lea
repz
cltd
pop
cmp
data16
and
pop
or
xor
mov
add
mov
sub
jns
ret
adc
xor
lahf
push
ret
scas
mov
xchg
mov
arpl
ds
and
scas
fcmovbe
jl
addr16
or
cmc
ja
add
mov
int3
leave
adc
xlat
xor
xchg
mov
xor
pushf
xor
sub
push
dec
push
xorb
pusha
mov
shlb
in
adc
cmpsb
xor
adc
add
sub
mov
lods
push
jnp
das
movl
lods
outsl
pop
push
int
add
cmpsl
lcall
insb
mov
sbb
sub
xlat
dec
int
mov
pop
loop
in
or
jle
inc
sti
stos
sbb
inc
sbb
data16
testl
repz
cmpsb
mov
popf
imulb
dec
lret
pop
push
xchg
adc
push
cmpsb
jno
into
mov
push
adc
push
mov
adc
mov
cmc
lds
cmc
dec
fwait
outsl
fisttpl
dec
mov
std
add
iret
jno
pushf
inc
cmp
mov
and
xchg
jne
dec
sbb
pusha
sbb
cmp
add
push
jae
pop
insb
xor
or
inc
shll
cmp
add
xchg
push
sbb
es
outsl
xor
daa
adc
fs
out
nop
sub
dec
sub
lods
repnz
div
lret
in
inc
lahf
pop
cld
adc
and
loopne
aam
cmpsl
iret
sbb
add
addr16
gs
clc
js
pop
in
fucom
adc
adc
jge
fs
imul
out
pop
or
bound
adc
test
mov
jo
dec
test
rcrl
xchg
popf
icebp
jne
into
mov
fidivrl
mov
sbb
sub
pop
lock
lods
dec
ret
fldl
ret
push
add
inc
fcoml
sbb
push
add
daa
xor
enter
inc
mov
xor
cs
repnz
aad
mov
rorb
adc
and
aad
mov
add
push
repnz
mov
add
inc
xchg
inc
and
shlb
scas
jmp
or
or
push
addl
ljmp
jmp
gs
loope
xchg
adc
and
aam
mov
lods
in
shrb
test
sbb
inc
jle
cmp
sbb
fnstenv
sahf
cmp
mov
adc
test
push
mov
or
inc
xchg
xchg
pop
aaa
cs
in
les
or
in
jge
xchg
jg
mov
fucom
cmp
aas
fwait
xchg
dec
outsl
lds
stos
bound
mov
dec
ljmp
aaa
or
aaa
xchg
fisttpl
jno
outsl
mov
mov
push
inc
mov
sub
add
fcmovnb
dec
sub
mov
out
push
inc
mov
and
mov
jmp
pop
stc
push
pop
std
fs
inc
mov
mov
enter
dec
sbb
jae
mov
dec
jl
xchg
jnp
pop
dec
pop
and
out
and
enter
es
dec
arpl
mov
xor
adc
into
out
jnp
and
xchg
inc
dec
rolb
push
mov
rorb
inc
movsl
xchg
jns
out
stc
pushf
xor
xlat
xchg
jbe
in
sbb
mov
and
movups
test
stc
shlb
cwtl
mov
cmpsb
jb
in
pop
cmpb
pop
ret
sbb
mov
jg
dec
cld
mov
int3
mov
fists
pop
dec
mov
out
push
dec
popa
jbe
test
scas
lock
imul
pop
shl
jne
in
idivl
mov
push
fnstcw
mov
push
push
jns
fnstcw
mov
add
jb
adc
bound
jns
cmc
push
pop
divb
add
fwait
sbb
in
push
pop
mov
popf
mov
sti
arpl
or
jmp
jge
fnsave
out
ss
dec
pop
lds
jl
les
pop
mov
xor
or
push
mov
fwait
jbe
mov
xor
repz
loop
inc
shl
pop
inc
push
mov
jmp
and
mov
mov
test
aad
lret
and
rorl
std
inc
iret
jg
ret
mov
xor
jae
sbb
stos
lret
mov
ja
or
mov
je
in
jns
sti
ds
mov
ds
mov
adc
aad
ljmp
mov
ret
dec
cwtl
divl
sbb
cltd
add
mov
push
adc
push
cld
mov
leave
mov
mov
outsb
push
cs
fptan
jb
or
or
inc
jns
sbb
push
inc
sbb
lock
mov
xor
sbb
es
testl
xor
mov
jecxz
adcb
mov
pop
mov
jb
xchg
out
mov
xchg
das
gs
sarl
out
mov
lahf
adc
fisubrs
shll
cs
mov
subl
mov
sbb
outsb
or
dec
mov
inc
pop
test
push
int
sbb
cmp
fbstp
sti
mov
lds
xor
popf
push
repnz
aaa
and
pop
insl
pop
mov
mov
or
mov
ljmp
cmc
mov
sbb
mov
push
jp
ret
aam
sbb
sub
scas
in
lcall
aad
dec
cmp
jmp
aaa
and
inc
test
pop
add
lods
enter
dec
cmp
inc
leave
mov
sub
jb
mov
outsl
sbb
mov
loop
pop
pop
add
push
out
cmp
xchg
cmp
aaa
jl
pop
cmpsb
imul
shrb
xor
adc
movsb
inc
jns
ds
inc
xor
outsl
or
xchg
cwtl
lea
add
jno
dec
inc
loop
add
ss
inc
and
pop
mov
jp
push
imul
mov
mov
mov
cmp
dec
sbb
sbbb
in
int3
filds
daa
xor
sbb
lock
movsbl
imul
and
push
pop
sbb
aas
mov
sbb
push
shll
cmp
out
hlt
mov
mov
mov
push
or
sub
jo
bound
outsl
sub
test
inc
js
ss
push
sti
je
ret
mov
cmp
push
mov
sahf
cli
mov
popa
fs
leave
sti
mov
xor
sub
adc
xor
cli
inc
adc
daa
cmc
icebp
push
loop
mov
sahf
sbb
and
xor
mov
outsb
out
lret
sbb
insb
mov
out
shll
inc
aaa
xor
lock
xlat
dec
int
data16
mov
je
scas
test
push
cmc
pop
xchg
imul
imulb
clc
dec
and
add
push
inc
or
jo
les
outsb
xchg
add
add
or
inc
and
xor
int3
adc
data16
sysexit
es
xchg
ss
jle
in
rorb
pop
inc
daa
cltd
icebp
mov
jl
stos
push
pushf
fcomps
jecxz
sub
enter
lods
leave
xor
movsl
dec
add
xor
sub
jecxz
arpl
pop
push
sti
dec
repz
lds
dec
push
adcb
jmp
popf
xchg
sbb
or
jle
dec
das
adc
jb
int3
push
xorb
popa
sahf
inc
mov
subb
sbb
fiaddl
loopne
adc
int3
adc
rol
jnp
fs
or
movsb
int
mov
fldt
aam
insl
popf
cmp
mov
bound
jg
sbb
adc
dec
shl
jle
sti
ret
mov
fmull
xchg
fadds
add
shl
pop
idivb
movsb
rcrl
pop
hlt
stc
pop
push
arpl
repnz
bound
inc
cwtl
add
cmpsb
jb
pop
inc
ficoml
outsb
pop
cmpsb
scas
aam
mov
pop
push
in
gs
jnp
out
xor
push
mov
push
jl
ret
repz
sahf
and
pop
fldenv
cmp
jo
ret
int3
xor
pop
sbb
inc
mov
mov
or
xchg
adc
out
sbb
insb
push
lds
test
jbe
in
dec
push
cmpb
add
lds
add
jno
jae
jmp
inc
jnp
pop
or
inc
fcoml
pop
cwtl
xchg
in
xor
add
dec
cmp
outsb
test
cmpsl
xor
pop
jmp
sub
iret
mov
sub
daa
cmpsb
imul
shl
ljmp
push
in
jb
mov
test
fwait
outsl
adc
lret
inc
inc
dec
inc
cld
jne
mov
sub
xor
out
push
pusha
filds
pop
lock
sbb
lods
sub
scas
mov
inc
add
inc
bound
inc
xchg
xchg
inc
sub
ljmp
mov
xchg
pop
push
fcomip
pop
dec
insl
in
and
mov
stos
iret
xchg
es
fnstenv
xchg
lcall
in
mov
ret
mov
inc
aad
cmp
out
das
jg
jg
dec
cld
imul
sub
cmpsb
lods
movsl
or
lret
gs
and
pop
std
jg
ret
lods
xchg
cltd
xor
and
dec
out
xchg
ficomps
or
jo
enter
outsb
jle
int3
fstp
inc
movsb
pop
pop
cli
and
cltd
push
sub
bound
mov
enter
or
or
jl
xchg
scas
out
scas
out
jmp
pop
mov
mov
sahf
and
lahf
xchg
int3
daa
mov
add
lahf
xchg
in
push
xchg
out
fwait
inc
sub
xor
mov
mov
cmp
data16
pop
pop
push
sub
push
enter
mov
xchg
adc
pop
popf
mov
outsl
ret
mov
cs
cli
popf
or
mov
jp
dec
cmc
clc
ret
xor
sbb
in
mov
das
mov
inc
lcall
mov
jns
and
sti
mov
mov
dec
dec
mov
adc
push
repnz
dec
dec
cmp
sub
jnp
or
les
push
xchg
fcom
and
mov
rcrb
or
cmp
insb
hlt
push
lods
mov
adc
gs
cmpsl
add
mov
cmc
mov
sarl
jl
sub
push
sbb
inc
fimuls
stc
pop
sbb
cwtl
and
scas
js
loope
rorl
aas
lahf
lret
xchg
sbbb
popf
aas
aaa
pop
das
cmp
pop
dec
push
adcb
cmpsl
lret
aaa
cmp
push
mov
iret
dec
dec
and
les
sti
lret
mov
add
out
and
dec
cs
add
gs
adc
orb
xor
pop
xor
shll
push
push
xchg
loop
test
pop
out
rcrb
mov
pop
shl
nop
mov
repnz
xchg
xor
pusha
cmpsb
test
jno
sub
mov
outsb
inc
push
or
xor
pop
xchg
push
stos
stos
mov
out
jae
std
leave
cmpsl
inc
sahf
sub
cmpsl
cs
bound
adc
inc
hlt
shll
cmp
sub
mov
insb
cmpb
jae
cmpsl
xor
inc
jb
sahf
push
inc
gs
repz
push
xor
jb
lock
add
inc
pop
scas
sub
fildl
test
add
sub
clc
xor
adc
sub
cmp
je
mov
cli
sbb
push
mov
mov
stc
loopne
jg
inc
jo
imul
sbb
add
cmpsb
and
sarl
xchg
sbb
movsl
xor
jbe
jno
sbb
push
jl
lcall
mov
add
adc
jge
loope
loope
mov
jl
sub
jb
cmp
xchg
mov
int3
add
fisttps
data16
push
stc
jg
add
push
or
push
stos
fistpl
ficoms
mov
popf
push
cmpsl
int3
mov
lret
cmpl
lcall
repnz
mov
dec
jo
cmp
push
mov
jp
mov
mov
insl
or
das
fisttps
jge
jno
inc
in
cli
mov
lcall
xor
les
into
shll
jnp
dec
gs
add
dec
mov
xchg
ds
fidivs
aam
movsb
sbb
cwtl
inc
push
adc
lret
fisttpll
xorl
mov
jno
movsl
or
jns
push
ja
shrb
cld
cmpb
negb
xchg
add
cmp
xchg
into
cmpsb
imul
lds
add
add
int3
nop
dec
nop
push
nop
add
and
lods
xchg
sbb
fwait
mov
icebp
addr16
jecxz
jge
cmp
imul
mov
mov
cmp
and
adc
adc
adc
in
xchg
cmpsl
and
push
cmc
fstl
lea
loope
mov
cli
and
mov
push
mov
hlt
cmpsb
cli
jne
mov
pop
andb
insb
cmp
shrl
inc
push
mov
xor
ss
scas
cld
scas
lcall
test
bound
inc
dec
iret
add
jb
and
negb
mov
out
xor
fcomi
in
mov
sbb
int
sbb
pop
adc
scas
lret
ja
mov
lahf
push
stc
push
jno
mov
cmp
add
jp
inc
pop
dec
out
mov
lea
or
adc
push
in
rcl
xchg
mov
xor
test
clc
push
pop
xor
or
outsl
pushf
jl
les
mov
cmc
cltd
out
cmp
xor
inc
aas
push
xchg
push
movsb
add
out
or
add
aaa
push
aam
or
cmp
out
mov
pop
popa
and
or
push
popa
jo
adc
mov
and
pop
ja
je
out
jno
sti
add
mov
popf
pop
xchg
iret
aam
add
aaa
mov
cld
push
in
inc
fdivl
addr16
sub
sbb
or
jl
insb
pop
testl
aaa
mov
cld
push
in
inc
fdivl
addr16
sub
sbb
or
jl
insb
pop
testl
aaa
mov
cld
push
in
inc
fdivl
addr16
sub
sbb
or
jl
insb
pop
testl
aaa
mov
cld
push
in
inc
fdivl
cmpsl
cmp
sub
mov
or
or
cmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cli
shr
rcr
lret
stc
xchg
xchg
pop
jno
popa
cmp
sub
shr
rcr
lret
xchg
stos
sbbl
jno
popa
cmp
sbb
sbb
and
shl
rol
shl
mov
mov
mov
add
push
inc
outsb
inc
inc
pop
and
sahf
mov
bound
dec
movsl
cld
iret
xchg
dec
shll
in
sub
jnp
adc
push
nop
adc
loope
mov
mov
push
cmp
sbb
jo
mov
shrl
push
mov
adc
dec
dec
sub
mov
pushf
cmp
rcrl
or
adc
stos
andl
imul
jnp
xchg
into
or
je
push
inc
nop
mov
xlat
movsb
jp
jp
lods
push
pop
mov
std
in
sbb
xchg
xor
or
les
inc
daa
popa
sbb
add
sbb
repz
lret
xchg
mov
mov
inc
jno
popa
and
xor
add
or
mov
mov
adc
xor
xor
cmp
jb
xor
xchg
rorl
xchg
fldcw
mov
pop
adc
push
cmp
push
push
outsb
jno
cwtl
xchg
repnz
stos
sbbl
jno
popa
cmp
sub
sbb
or
cli
shr
rcr
lret
xchg
stos
sbbl
jno
popa
cmp
sub
sbb
or
cli
rol
mov
mov
cmp
pop
mov
pop
mov
push
movsb
shl
add
inc
fs
mov
lret
sarb
xchg
pop
scas
push
rcr
jle
fabs
mov
fmull
js
imul
mov
je
xlat
xchg
test
and
cmp
mov
pop
and
dec
add
repz
hlt
add
xchg
push
shll
dec
loopne
ja
scas
pop
int
or
jge
movsb
gs
push
ds
add
push
out
xor
mov
lods
pop
in
mov
or
push
int3
or
adc
dec
aam
scas
sub
sbb
stos
mov
hlt
xor
jno
xor
push
shll
dec
cmpsl
mov
fnstcw
stos
cmpsb
mov
cld
push
rorl
lock
test
dec
sbb
in
cmc
sub
cltd
xchg
sbb
lcall
ret
xor
out
add
cs
add
cmp
js
cmp
shrl
int
leave
ds
es
push
mov
sbb
in
or
xor
sbb
ret
rorl
sbb
xor
and
shll
pop
cmpsl
clc
mov
lahf
int3
imul
inc
daa
mov
outsb
js
cwtl
pop
fwait
jae
lods
xchg
xor
outsb
das
push
negl
jmp
add
mov
fildl
jecxz
or
ljmp
or
in
call
mov
cld
cmp
iretw
aaa
aam
mov
jmp
fdivrl
stos
add
and
data16
leave
mov
repz
or
and
push
mov
sub
rorb
outsl
ret
xchg
mov
fdivr
insb
stos
pushf
sbb
mov
repz
movl
out
adc
jbe
jle
outsb
cmpsl
dec
cltd
test
cs
daa
pop
mov
and
sbb
and
lock
inc
push
jo
das
jg
xor
xchg
into
inc
sub
or
push
dec
cmp
orb
adc
shll
cmpsb
push
sbb
rolb
aam
or
inc
dec
addr16
jne
ficoms
outsb
or
enter
cmp
jp
pop
incl
mov
in
sbb
leave
xchg
mov
inc
xchg
lea
push
mov
jp
mov
push
inc
ds
adc
cmp
out
imul
push
pop
sbb
or
jp
xchg
stc
inc
test
test
and
lock
cmp
pop
pushf
xchg
movsb
fistl
iret
pop
lahf
sub
jg
ja
mov
adc
jae
lret
fisttpl
test
fwait
call
jl
lcall
and
mov
adc
and
test
lods
filds
cli
scas
scas
cmp
and
xor
sub
out
sub
jns
inc
stos
pop
dec
xchg
sti
xchg
sub
in
inc
scas
jmp
push
dec
shlb
and
dec
das
lock
xchg
xchg
pop
mov
xchg
test
iret
in
sub
jbe
jns
loopne
jmp
add
mov
cmp
push
adcl
negl
loope
dec
jecxz
sbb
popa
mov
sti
xchg
xchg
scas
mov
fsubrs
mov
and
repz
pushf
push
add
mov
push
mov
cltd
jl
mov
jmp
loopne
mov
xor
fimull
call
jns
lret
cwtl
xchg
mov
mov
xor
les
inc
pushf
xchg
out
shlb
jns
inc
sti
repz
fs
mov
xchg
adc
mov
inc
dec
out
inc
mov
ficoml
lods
and
hlt
cmp
adc
mov
and
out
and
cmc
ret
ret
fs
jno
imul
adc
repz
loope
rcrl
inc
out
adcb
data16
mov
lods
bound
xchg
push
jl
jns
sub
rolb
xorb
gs
rolb
cmp
addr16
int3
or
and
in
mov
and
lret
pop
push
push
push
xchg
popa
push
dec
jo
insb
cmp
mov
xor
cmpsb
dec
dec
fistps
daa
add
int
in
sub
xor
dec
push
xchg
pop
shl
inc
lock
push
loope
jmp
mov
and
dec
pop
jb
sbb
and
rorb
in
popf
idiv
inc
add
pop
xchg
inc
dec
cltd
cmpsb
xchg
negl
lcall
xchg
lock
js
push
incl
pop
mov
cmpb
out
mov
pop
adc
cli
xchg
sbb
jb
push
xor
insb
sub
and
je
ds
test
xchg
stos
daa
cld
rorl
mov
sbb
scas
lret
mov
setne
out
mov
mov
push
flds
sub
jnp
ja
in
jne
jo,pn
jo
jae
inc
xor
cmp
lret
frstor
test
outsl
pop
pop
add
ds
lods
pushf
repz
sarb
negb
xchg
jmp
sbb
push
mov
cltd
sbb
or
loope
mov
mov
bound
rcll
fldl
psadbw
sbb
pop
aas
out
sub
rolb
fisubrs
add
sub
add
out
loopne
xchg
fiaddl
dec
xor
cli
das
out
add
bound
fadds
outsl
mov
sub
push
jle
mov
add
dec
sti
dec
ret
aaa
jne
inc
js
pop
lods
hlt
and
cmp
cmc
pop
call
xor
push
jb
adc
arpl
mov
rorl
insb
dec
push
sbb
pop
xchg
jo
push
dec
jmp
nop
lcall
xor
insb
and
cltd
stos
daa
mov
sarl
pop
lcall
jge
and
lods
rclb
mov
cltd
js
pop
stc
push
push
xor
loopne
mov
or
sbb
stos
shll
pop
inc
test
adc
daa
pop
jp
sbb
mov
out
xor
mov
cli
dec
in
push
jmp
inc
int
and
or
mov
push
xchg
mov
call
sub
and
xchg
loop
adc
cmc
scas
dec
jecxz
pop
mov
add
shll
push
std
sub
cli
dec
shll
outsl
mov
mov
gs
push
lcall
iret
sub
test
push
gs
dec
aaa
xchg
sbb
adc
and
ret
out
insb
xchg
pop
adc
pop
fsubs
nop
lea
xchg
inc
pop
int
ss
dec
sbb
inc
xor
outsb
push
add
pop
fldln2
movsb
pop
push
les
das
push
ftst
xlat
mov
pushf
or
xor
sarl
negl
jl
fwait
sbbb
push
leave
add
xchg
xor
jb
sbb
pop
or
aad
add
lds
in
dec
mov
ja
aas
mov
icebp
adc
ret
popa
adc
push
ljmp
xor
xchg
dec
xor
sbb
jge
nop
cmp
stc
xor
fwait
repz
add
test
out
lcall
fsubp
dec
push
sahf
out
sbb
pop
pop
sahf
xor
jne
lret
cmp
and
test
mov
ret
pop
pop
loope
stc
add
mov
push
into
out
dec
and
adc
pop
cld
adc
xchg
dec
add
shlb
fidivl
push
pop
pop
dec
mov
test
mov
xchg
sbb
fsubl
mov
pop
inc
arpl
sub
insb
sbb
xchg
push
cmc
mov
pop
inc
popa
cmp
enter
push
dec
adc
jmp
sub
inc
cmp
cmp
cmp
mov
inc
leave
popf
pop
inc
in
and
sbb
inc
icebp
enter
adc
aad
lds
and
loope
adc
or
arpl
xchg
cli
cmp
mov
pop
or
stos
dec
cmp
pusha
or
lahf
out
jo
inc
addr16
sub
sbb
fsubrl
in
mov
pop
icebp
rorb
das
xchg
in
pop
sub
push
mov
imul
lret
inc
mov
les
movsl
cli
js
lret
mov
inc
call
jmp
or
lock
mov
imul
push
xor
jb
cwtl
cltd
xor
cmp
enter
mov
imul
aad
lock
out
mov
push
adc
lea
and
iret
push
adc
xor
lret
add
out
call
and
push
inc
mov
aam
nop
inc
push
dec
cmp
xchg
les
sub
and
dec
mov
idiv
sub
inc
fisttpll
in
mull
pop
rolb
movsb
ret
mov
add
add
insl
pop
daa
pop
fnstsw
mov
jg
push
std
pushf
jmp
mov
je
mov
jno
popf
insl
add
in
in
rorl
and
jo
fistpl
xor
jns
and
add
test
daa
inc
insl
mov
lahf
cltd
mov
jmp
stc
out
aaa
je
sub
or
fadd
xchg
sub
pop
scas
mov
pop
dec
mov
push
xchg
mov
outsb
and
pusha
roll
or
cwtl
aaa
test
insl
jle
dec
push
mov
test
arpl
adc
sbb
aaa
cld
adc
rorb
and
inc
lcall
adc
andb
out
inc
add
add
jecxz
dec
xor
pop
xor
fldcw
bnd
imul
fdivrl
inc
dec
sub
adc
call
out
adc
arpl
iret
pop
jecxz
adc
repz
push
sbb
outsl
call
into
mov
dec
testb
pop
jbe
scas
jae
push
imull
xchg
xchg
call
mov
add
fucomi
xchg
cmp
les
mov
ret
inc
add
call
sub
lods
mov
mov
xchg
scas
push
mov
imul
testb
out
cmp
add
cmpsl
jae
mov
subb
aad
dec
and
adc
decb
into
dec
or
lahf
in
inc
pop
mov
int3
sahf
push
jae
xchg
mov
ret
insb
mov
xor
sub
xchg
push
je
loope
push
xchg
call
push
push
cs
ja
aas
xorl
in
ljmp
push
push
jbe
push
xchg
jae
aad
ss
sbb
push
test
repz
sub
cli
pop
mov
movsl
jg
or
mov
xchg
sub
cmp
pop
syscall
sbb
and
or
push
adc
mov
adc
push
ret
pusha
xchg
and
fisubs
inc
ret
jno
inc
sbb
ljmp
sub
arpl
xchg
mov
ja
xor
mov
inc
push
mov
jge
insl
xor
fcomps
inc
addr16
and
ret
add
mov
jle
shll
inc
cli
imul
adc
push
mov
xlat
and
jns
dec
cmp
jbe
pop
sahf
in
mov
cmp
mov
scas
xor
xchg
or
add
cmp
in
subl
aas
aaa
push
or
inc
cmp
fcmovnb
divb
mov
jle
mov
js
mov
xor
sbb
dec
mov
cmp
js
int
icebp
loope
fisttpl
ja
shll
sbbb
mov
orl
cs
and
dec
cmpsl
push
adc
dec
xor
test
lds
lds
insl
add
xchg
aaa
in
out
ljmp
push
sahf
movl
cmp
mov
adc
sbb
push
mov
cli
cli
mov
popa
sub
les
mov
je
rolb
cmc
xchg
jne
subb
repz
pop
push
rclb
ljmp
sub
adcl
scas
inc
mov
or
pop
icebp
mov
add
flds
call
sar
xchg
out
inc
loop
push
jb
lahf
orl
aas
push
add
pop
in
leave
inc
lods
outsl
mov
dec
cmp
mov
mov
imul
pop
mull
cmc
ret
fdivrs
out
adc
inc
aas
dec
add
and
inc
adc
out
aas
adc
mov
rcr
inc
inc
mov
out
shlb
out
mov
pop
add
fisttpl
sub
ss
cmp
insb
lret
xchg
cmc
sahf
sti
in
cmp
aad
adc
popf
push
jno
mov
and
xor
inc
add
cmpsl
and
mov
fmuls
imulb
adc
mov
repz
mov
call
imul
repz
stos
loop
out
push
jno
ja
xor
and
je
out
in
mov
or
pop
push
mov
push
sbb
lea
jne
add
mov
and
pop
jmp
das
jne
fwait
mov
push
movsb
stos
adc
push
jne
test
aaa
outsl
xlat
imul
lds
inc
aas
cmp
cld
push
jae
in
hlt
imul
dec
jb
inc
arpl
outsl
stc
pop
outsl
lods
fs
lea
and
lcall
lock
iret
lds
out
std
or
out
pop
mov
les
es
hlt
pop
and
fisttpll
push
call
repnz
in
inc
mov
shlb
call
or
inc
dec
jo
ja
xchg
push
daa
sub
jne
fmuls
xor
repz
popf
xor
popa
xchg
add
out
mov
rcr
mov
stc
sbb
in
scas
mov
iret
ds
sub
cmp
pushf
sbb
mov
jge
gs
jo
sbb
call
sub
xchg
js
movsb
iret
or
scas
pushf
push
loop
inc
movl
jg
cld
xor
pop
or
xchg
xchg
jecxz
repnz
insl
mov
add
jno
mov
inc
pop
lret
js
push
pop
test
inc
leave
mov
and
cld
mov
dec
inc
shr
mov
sub
movsl
fsubr
popa
jmp
xor
mov
fildl
pusha
mov
sbb
cmc
or
rcrb
sub
and
mov
nop
and
aam
jmp
mov
imul
out
idivl
test
xchg
mov
pop
xchg
fidivrl
mov
pop
dec
adcb
sub
inc
add
test
mov
pop
hlt
ret
jmp
mov
mov
idiv
pop
lea
sbb
xchg
inc
jns,pn
mov
adc
dec
stos
sbb
hlt
into
jg
mov
adc
push
mov
pop
outsl
mov
lods
test
fwait
pop
sbb
ljmp
jae
push
pop
push
int
xchg
stos
cmp
pop
loop
jp
dec
data16
jnp
adc
pop
test
test
xor
outsb
repnz
aas
in
mov
jge
es
mov
idivl
pop
pop
fs
add
lret
pop
pop
or
pop
scas
mov
bound
dec
aaa
bound
lds
sub
and
cmp
adc
mov
scas
adc
imul
or
inc
sub
cmp
les
pop
xchg
cmpsb
stos
inc
push
lcall
outsl
test
jg
mov
lret
mov
dec
xchg
stos
mov
mov
dec
xchg
ja
jmp
or
inc
cmp
pop
adc
test
sbb
and
push
and
and
and
add
subb
roll
cs
adc
push
lock
scas
pop
scas
cmp
aaa
jle
sbb
push
rol
jmp
xchg
aas
ret
dec
jg
push
aas
pop
enter
xor
mov
leave
outsl
cmp
adc
pop
mov
cltd
jge
mov
int3
mov
sbbb
mov
and
jp
jle
imull
stos
mov
mov
mov
int3
insb
out
imul
addb
jb,pt
jo
lock
mov
jl
test
mov
lret
imul
sbb
adc
inc
nop
sbb
jg
mov
insb
fwait
mov
inc
mov
stos
mov
insb
push
lds
mov
dec
cmp
add
push
ss
mov
std
or
pop
add
or
aam
jle
iret
xor
jae
adc
jbe
int3
gs
sbb
daa
in
xchg
iret
ljmp
push
sub
jnp
mov
jge
bound
mov
xor
mov
stc
adc
xor
scas
push
jae
mov
adc
mov
popf
test
lds
xchg
xchg
cli
outsl
lock
iret
inc
jae
lahf
sub
inc
cmp
mov
mov
push
xchg
loope
decb
or
xchg
mov
cld
dec
adc
cs
push
rcll
out
mov
bound
imul
cmc
dec
push
mov
xchg
xor
int
pop
test
mov
mov
test
stc
pop
pop
push
test
call
dec
push
outsl
fists
sbb
mov
and
icebp
hlt
scas
jmp
sbb
sub
cmp
push
addr16
mov
push
adc
je
movsl
sub
mov
ret
xchg
jecxz
xor
push
push
nop
push
add
pop
outsb
jb
sbb
sub
push
add
pusha
rolb
and
sbb
xor
loopne
lds
inc
ljmp
sbb
jnp
sbb
or
movsb
icebp
and
adc
jae
add
ficomps
rol
ss
addr16
xorl
add
insl
lcall
stos
rcl
mov
or
push
out
add
mov
jo
pop
lea
stc
mov
jmp
ja
mov
xor
fcoms
pop
jo
pop
sub
jp
fsubrl
push
pop
push
pop
test
inc
insl
cmpsb
jae
push
lods
push
push
xchg
or
inc
inc
data16
ret
inc
sbb
push
cmpsl
mov
jae
loop
cld
inc
addr16
adc
fs
test
sahf
lock
pop
mov
pop
sub
adc
aam
push
and
mov
cmp
inc
jo
loopne
popf
mov
mov
aam
dec
out
xor
repnz
int3
pushf
cmp
sbb
leave
sti
cmp
pop
ret
or
sbb
mov
sub
pop
and
clc
int3
je
inc
jns
icebp
lfs
sbb
xor
mov
int3
xor
repz
popa
add
setge
in
add
and
outsl
pop
cmpsl
outsl
mov
add
or
out
and
gs
cld
xchg
cmpsl
rorb
or
jecxz
outsb
clc
jmp
xchg
mov
or
ds
dec
rolb
lods
pushf
pop
mov
mov
lock
push
add
xchg
lods
adc
pop
cmp
adc
cld
enter
push
inc
rorb
cmp
cmp
enter
icebp
sbb
xchg
ret
call
fwait
mov
adc
pushf
cli
inc
add
cltd
jno
dec
mov
inc
mov
pop
add
adc
lahf
mov
cmp
mov
mov
pushl
push
mov
xchg
pop
mov
pop
sub
sub
mov
xchg
pop
lods
add
pop
call
inc
sti
mov
std
fwait
dec
fstpl
outsl
sbb
xor
xor
loope
cmp
in
sub
mov
sub
fisubs
sahf
out
inc
adc
icebp
mov
shrl
in
and
fnstenv
dec
dec
adc
lret
ds
fwait
mov
push
jmp
mov
lds
push
sub
lret
sbb
pop
fistpl
xchg
cmpsl
cs
lock
in
aam
pop
popf
fidivs
pop
and
add
push
fucom
cmp
ret
sbb
add
xchg
cmpsl
fwait
out
rclb
aas
xchg
add
int
std
pop
dec
imul
stc
loop
call
adc
xor
es
inc
ds
leave
xchg
in
subb
push
out
sbb
jne
cs
add
xchg
xchg
xorl
rcrl
nop
lds
cmp
pop
push
clc
js
mov
in
mov
and
pop
sti
cmp
sub
aaa
std
enter
cli
mov
pop
orl
push
sahf
stos
push
dec
sub
mov
mov
int3
cld
cmpsb
stos
cmp
iret
and
les
out
enterw
mov
mov
cmc
cmp
mov
cmp
lcall
test
add
add
cmp
lock
icebp
dec
cmp
xchg
fbld
and
loope
xchg
stos
sbbl
jno
popa
cmp
sub
sbb
or
cli
shr
rcr
lret
xchg
stos
sbbl
jno
popa
cmp
sub
sbb
or
cli
shr
inc
fidivl
loope
xchg
stos
add
shrl
pop
jno
popa
cmp
sub
sbb
or
cli
shr
rcr
lret
xchg
stos
sbbl
push
xchg
jmp
jno
push
dec
cltd
mov
fidivs
fbld
mov
sti
pop
jmp
mov
dec
mov
movsl
inc
xchg
dec
xchg
push
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
test
jae
imul
out
xlat
cmp
sub
jge
or
ja
addr16
push
mov
cltd
mov
test
sbb
sbb
dec
xchg
insl
xchg
dec
scas
dec
inc
lahf
inc
mov
test
mov
xor
cmp
push
rorb
jp
insb
pop
aas
les
or
cli
adc
mov
stos
inc
scas
push
or
cmp
mov
enterw
jge
dec
sbb
ja
jb
dec
sbb
or
pop
xchg
xchg
imul
insb
notl
in
aaa
fildl
lret
aam
add
pop
cwtl
mov
inc
fisubrs
stos
jbe
js
cmpsl
push
out
das
les
or
cli
adc
test
mov
js
sbb
fwait
or
cmpsl
jno
push
sub
cmpsb
or
xor
mov
cmp
js
lret
push
stos
lock
sbb
in
add
jae
dec
adc
lds
push
daa
jmp
popl
jmp
fwait
mov
inc
cmp
jns
push
mull
out
xlat
and
sbb
inc
movsb
push
xchg
inc
xchg
ds
cmp
ret
in
sbb
cmp
faddp
or
cmpsb
fs
mov
inc
popf
push
lea
xchg
leave
sub
adc
add
ljmp
or
test
sub
bound
push
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
fildl
mov
xchg
addb
fcoms
ljmp
jmp
jbe
sbb
dec
mov
outsl
cltd
sub
xor
ret
lahf
mov
xchg
sbb
push
addl
mov
sub
fs
sub
cmpsb
inc
push
popa
insl
push
or
lss
shrl
sbb
leave
adc
icebp
and
movsb
mov
ja
xchg
push
hlt
insb
and
notl
pop
jge
lret
fcompl
lcall
xor
out
xlat
nop
jne
push
lods
lahf
jmp
lds
mov
outsl
insb
outsl
adc
pop
mov
sti
sbb
dec
inc
inc
roll
jae
mov
mov
mov
pushf
in
hlt
pop
fcmovnb
or
sub
notl
and
out
clc
sub
inc
push
inc
push
gs
and
imul
push
pop
sbb
mov
or
jo
stc
out
fstpt
jnp
fs
outsl
lock
imul
mul
mov
lret
std
sub
jo
mov
adc
pop
jnp
inc
pop
shll
ss
xor
lcall
xchg
sbb
inc
xchg
les
cmp
xchg
xor
add
jb
add
aaa
dec
jb
sub
mov
pop
aam
mov
jecxz
mov
adc
xor
enter
pushl
lods
dec
push
aas
push
arpl
mov
inc
adc
jp
movsl
ret
popa
inc
jns
out
fbld
jno
out
sbb
cmp
jbe
pop
or
out
and
mov
xor
clc
sbb
movsl
inc
lret
lods
sub
cltd
out
push
sbb
hlt
xchg
out
movsb
mov
insl
frstor
sbb
sub
mov
push
dec
jae
adc
mov
sahf
jg
mov
rol
out
repz
mov
mov
xchg
adc
repz
dec
pushf
dec
sbb
adc
aaa
fbld
test
sub
popa
and
pushf
repz
imul
cmp
ds
sub
jge
mov
push
leave
mov
pop
push
bound
or
repnz
mov
cltd
xchg
fists
xor
mov
je
imul
testb
insl
aaa
mov
scas
jno
pop
notl
pop
mov
ret
testb
jne
shrb
mov
inc
push
clc
les
push
or
fstpl
dec
mov
sub
mov
icebp
out
mov
xchg
jno
data16
or
mov
pushf
inc
aas
mov
or
movsl
xchg
jle
rcrl
jecxz
popa
outsl
pop
fisttpll
mov
fistpl
add
cld
push
sbb
frstor
push
cmp
cmp
cmpsl
ja
lods
mov
mov
mov
dec
testb
sbb
and
cltd
cltd
inc
mov
fisttps
loopne,pn
fistpl
mov
add
clc
nop
fdiv
mov
mov
mov
adc
out
imul
adc
mov
leave
or
xlat
mov
mov
adc
lds
mov
push
sar
pop
or
mov
cmp
test
sbb
test
jb
mov
and
lods
lret
xchg
rolb
pop
andb
outsl
inc
dec
and
inc
les
in
cld
sti
sbb
push
and
sti
mov
test
mov
or
inc
lock
test
add
mov
adc
imul
cmpsl
cmp
jecxz
cli
push
xchg
gs
std
push
mov
or
clc
pushf
pop
mov
into
jbe
cmp
xor
fists
js
mov
fldcw
and
hlt
scas
xchg
sub
dec
jmp
mov
pop
mov
sbb
pop
jl
push
inc
arpl
jns
rorl
inc
shrb
pop
xlat
or
lea
sbb
xchg
pop
and
push
cmp
push
mov
bound
packssdw
test
mov
mov
lahf
leave
jns
push
rolb
jbe
int
pop
shlb
add
cmp
cmp
int
push
push
sbb
outsl
jne
pop
xor
xchg
inc
xor
stc
dec
mov
cmp
cmp
sti
sub
and
rcl
popf
gs
lret
fidivl
subb
es
cmp
pop
subb
sbb
fisubrl
mov
int3
fimuls
pop
ret
mov
or
sbb
sub
adc
sbb
dec
in
and
addr16
adc
cmpsl
mov
jno
jns
daa
xor
imul
xor
enter
test
xor
xor
insb
data16
int
into
jl
loop
pop
sbb
mov
ds
sbb
iret
inc
pop
fs
mov
cmp
xchg
mov
sbb
sahf
adc
dec
pop
lock
dec
push
adc
adc
insb
rorl
dec
scas
pop
ljmp
cs
xor
push
pop
add
imul
inc
and
mov
sbb
sbb
idivb
daa
sbb
lea
jp
fidivrs
fcomps
or
sbb
outsb
fdivp
mov
in
xor
inc
push
or
mov
out
hlt
cltd
test
cmpsb
mov
sub
stos
leave
mov
mov
addb
xchg
mov
push
fisttpll
xchg
daa
cmc
cmpsb
fcmovnu
inc
add
add
int3
xor
sbbb
leave
pop
mov
push
into
cs
add
jge
ss
cmp
pop
push
add
dec
repz
mov
pop
ds
shrb
xchg
jno
add
or
jp
xchg
sub
cmpb
outsb
pop
dec
neg
and
and
cs
or
and
xchg
subl
pop
mov
loopne
jp
aad
jne
daa
and
xchg
jle
or
mov
pop
pop
jecxz
adc
cmpsl
or
test
fwait
in
mov
scas
mov
mov
push
sub
add
lea
enter
xchg
pop
adcl
scas
xor
inc
add
sbb
add
out
insl
movsl
push
scas
xorl
dec
sub
in
push
dec
shrl
mov
mov
aam
mov
ss
push
int
insl
cmpsl
jl
int
inc
sbb
mov
repz
mov
std
xor
dec
jmp
cmp
mov
sub
imulb
or
in
in
cmp
jecxz
addb
sbb
xchg
or
and
dec
sbb
and
xchg
sbb
jecxz
pop
scas
mov
pop
or
sub
jno
js
lock
mov
js
mov
or
inc
hlt
lods
fs
mov
jnp
roll
add
outsb
adc
out
jbe
cwtl
popf
lahf
int3
outsb
and
push
xchg
adc
add
pop
iret
mov
mov
mov
shl
xchg
pop
pop
mov
enter
fsub
mov
xor
popa
lcall
lahf
test
pcmpeqw
mov
jmp
into
js
push
out
dec
mov
cmc
sbb
xchg
aam
test
inc
jae
push
xlat
jg
ljmp
lock
jno
mov
mov
sbb
rolb
aad
xor
out
addl
cs
dec
xor
and
mov
in
cmp
cli
pop
cmpsb
mov
and
fcmovnbe
mov
cmp
xor
inc
lea
dec
js
rcr
sub
hlt
cmp
xor
xlat
dec
repz
cmp
add
dec
jnp
imul
and
scas
jnp
jge
in
sub
out
aas
lahf
cld
ljmp
mov
or
adc
insl
gs
xor
cmp
jbe
xchg
aas
dec
call
xor
push
fwait
adc
scas
sahf
pop
clc
sbb
mov
adc
mov
jge
std
mov
enter
sub
movsb
dec
orl
fcomps
addr16
inc
das
cmp
mov
sbb
cmp
scas
pop
imul
pop
inc
into
dec
pop
xor
icebp
adc
sub
lea
push
jns
inc
in
mov
mov
pushl
push
lods
lock
mov
jns
add
into
pop
adcl
arpl
lds
repz
lret
jle
test
sub
mov
sahf
dec
pop
xlat
and
aad
mov
xchg
jle
mov
adc
sbb
in
les
push
dec
mov
pushf
and
popa
loopne
sti
cwtl
pushf
test
subb
jnp
push
sbb
jge
test
push
popf
in
mov
cwtl
sbb
daa
adc
rclb
ja
js
in
aam
mov
pushf
les
movsl
mov
or
push
push
hlt
push
ss
notb
adc
push
mov
and
scas
mov
in
lcall
test
or
scas
hlt
sbb
data16
cli
lret
sub
mov
movsb
adc
jae
cld
jp
sbb
lret
mov
cs
jb
xchg
jge
and
xor
jno
cmp
mov
enter
mov
jns
jle
rcl
test
jo
rolb
inc
pop
mov
sbb
in
adc
dec
repnz
dec
pop
pop
mov
inc
ja
adc
lds
push
or
nop
cmp
js
in
aad
push
jmp
dec
shr
scas
rolb
cmpsl
fmul
mov
or
fwait
adc
pop
push
and
sti
ja
scas
pop
adc
xchg
std
testb
dec
xchg
dec
push
out
adc
das
test
cmc
xor
sub
sub
pop
pop
clc
add
dec
add
or
mov
mov
in
sbb
int3
sarl
pop
cmc
test
sub
mov
add
cmp
das
push
mov
stos
pusha
pop
inc
dec
arpl
sbb
fldt
add
pop
repnz
pop
xchg
rolb
pop
bound
sbbb
push
mov
lods
ds
or
adc
insl
push
hlt
add
stos
dec
iret
imul
push
fisttpl
fisttps
scas
lret
into
push
fcmove
adc
lods
jae
dec
and
push
outsb
cmc
inc
inc
inc
mov
and
lods
ja
jb
sub
in
out
popa
cs
xlat
jo
lock
lea
imul
les
sti
repz
push
or
cmp
divl
iret
ds
lock
push
lods
loop
inc
jno
jge
test
jno
mov
xor
inc
or
test
loop
mov
xchg
aas
inc
scas
lock
xchg
sbb
lods
loop
pusha
in
pop
in
aad
adc
rcll
push
xchg
jl
jl
out
shll
sahf
int
nop
popa
add
and
xor
cmp
pop
in
xchg
aas
adc
sub
pop
add
imul
enter
sbb
push
xchg
loop
and
jge
scas
pop
mov
lods
jb
add
jne
out
or
stos
pop
shlb
sbb
dec
jae
dec
rcrb
jb
int3
jnp
out
pop
fcoms
push
pop
mov
ljmp
adc
fidivl
or
push
dec
test
push
fsub
dec
sti
aam
sbb
xor
inc
roll
mov
sbb
je
pop
push
lds
and
jo
inc
dec
inc
and
ljmp
mov
dec
add
stos
out
pop
xchg
movl
or
xor
fsts
fsubl
cli
orl
int
mov
or
scas
nop
mov
fs
push
lock
pop
mov
nop
lcall
and
cmp
lock
sbb
and
jb
loop
test
xchg
fwait
jb
pop
and
and
push
push
sub
fwait
std
stc
adc
xor
mov
add
xchg
into
mov
imul
addr16
ja
jle
pop
rclb
push
xchg
jl
pop
xchg
jl
fwait
pop
or
xlat
pop
and
jmp
ret
mov
push
sar
mov
pop
mov
sbb
test
gs
ss
stos
adc
sub
ret
mov
xorb
cli
lret
ljmp
fwait
jb
fstpl
sarl
cli
mov
mov
xlat
pop
cmp
push
jge
cmp
mov
loop
sti
daa
dec
mov
and
fstpt
mov
xchg
xchg
aad
cmp
inc
lods
sarl
pop
cmpl
xor
and
push
xchg
nop
stos
mov
out
fadds
mov
inc
dec
sub
mov
cmpsl
aam
inc
xor
sbb
sub
cmp
jmp
hlt
test
cli
mov
dec
jmp
dec
pop
pop
ficomps
fisubl
cmp
inc
dec
xchg
and
icebp
xor
icebp
mov
ret
ret
ret
cmp
mov
mov
adc
sahf
rcrb
loopne
pop
movsb
jbe
xlat
xchg
pop
test
xchg
jmp
jnp
loop
jmp
jecxz
test
adc
mov
lods
mov
ret
imul
fldcw
push
or
js
pop
call
adc
daa
jns
sub
adc
outsb
xchg
mov
fcomps
repz
div
cmovp
fistpl
fiaddl
lods
pusha
push
loop
cmp
mov
mov
lods
cltd
inc
repnz
cwtl
adc
ret
sub
movl
xchg
dec
fldcw
xor
sub
mov
daa
pop
out
mov
xor
bound
in
pop
fcmovb
popf
cltd
add
cmpsl
jge
aad
lock
lock
xor
sbb
in
cmpsb
sbb
mov
stc
push
mov
inc
jne
repz
mov
jge
push
es
enter
mov
or
mov
adc
out
mov
dec
inc
pusha
push
sbb
ficoms
aam
aad
inc
sbb
mov
out
push
cmc
out
daa
cmp
fmul
mov
cmp
int3
and
add
call
pop
or
xchg
jns
shll
dec
shrl
leave
shrb
out
mov
into
adcl
sub
lods
jae
test
lcall
xchg
js
pushf
outsb
decb
mov
jne
jge
mov
stc
inc
cmpsl
mov
jbe
or
gs
dec
inc
stc
or
jns
xchg
sub
in
and
push
stos
cmp
sahf
mulb
fcmovnu
shlb
fstpl
ret
or
cmp
dec
or
dec
inc
mov
pop
dec
jp
xchg
add
and
and
cld
testb
je
jne
xchg
and
mov
shll
xlat
and
pop
rcl
ss
mov
sub
cmp
divl
subb
jecxz
jbe
push
testl
int
xchg
stc
sahf
ret
mov
push
cli
add
adc
stc
dec
mov
mov
insb
xchg
fnstenv
mov
lods
or
aaa
sub
or
lahf
outsb
cmpsb
push
and
and
mull
roll
fsub
adc
sub
sbb
ljmp
or
sbb
popf
jge
jge
dec
sbb
cli
sahf
mov
sub
jbe
inc
mov
xor
xor
pop
loopne
dec
mulb
pop
inc
movsl
std
pop
sbb
xchg
push
adc
sbb
fcmovnbe
fwait
pop
jnp
push
push
or
jge
adc
xor
jmp
push
subb
aaa
cmp
fnsave
xchg
adc
mov
cmp
sub
sbb
inc
mulb
inc
aad
add
mov
push
inc
divl
and
xchg
rcl
and
cmp
push
adc
jecxz
push
mov
mov
ret
mov
pop
jg
bnd
ljmp
and
or
mov
clc
mov
or
mov
jg
mov
xorb
jo
mov
insb
insl
push
sbb
iret
mov
orps
and
jo
and
add
jecxz
mov
insl
ds
gs
push
and
xor
and
int3
test
nop
add
jno
xchg
adc
cmc
or
outsl
sbb
jne
jmp
xchg
jne
pop
popa
add
mov
lds
stos
insl
mov
adc
push
inc
pop
outsb
ja
or
aas
mov
add
fmuls
into
xor
jns
mov
cmp
mov
jle
jae
imul
fsubrs
and
mov
call
or
push
sbb
xor
aad
shlb
mov
fiaddl
js
insl
sub
sbb
sbb
or
loop
cmp
inc
pop
scas
std
mov
cld
dec
int3
cmpsb
sbb
and
ds
jecxz
push
xlat
lea
sbb
decl
cmp
mov
fadd
adc
adc
in
push
jg
daa
popa
in
ds
sbb
sbb
stos
orb
mov
fstl
sub
xor
fldt
mov
aaa
mov
or
std
xchg
push
notb
test
test
test
and
sahf
loop
int3
clc
xchg
adc
mov
scas
add
cs
mov
stc
loope
or
sub
movsl
fnstsw
dec
mov
sbb
lret
aaa
imul
cmp
jae
mov
sub
cmpsl
rol
outsb
jnp
jno
repz
lods
out
inc
mov
xor
sub
xchg
sub
inc
sub
enter
lret
scas
add
xor
cmpsb
jbe
mov
push
xor
movsb
push
int
or
cmp
in
dec
lods
add
fildll
movl
scas
sbb
test
cmp
fldl
xor
pop
std
sbb
cmp
test
jle
mov
adc
pusha
and
cmpsb
add
xchg
sbb
dec
test
jg
mov
mov
out
xor
mov
leave
jl
inc
testl
stos
push
test
rolb
movsl
les
popa
das
enter
cmpsb
ret
stos
lods
lahf
outsl
insl
stos
and
repnz
add
xchg
mov
and
mov
ds
push
inc
leave
incl
pop
scas
shr
scas
sub
add
push
mov
testl
push
pop
cwtl
test
jl
xor
jmp
sbb
or
mov
jle
adc
adc
outsl
cmp
push
xchg
sbb
int
jo
popf
add
mov
jne
cmc
sub
jp
test
xlat
and
movb
sub
mov
push
lret
mov
call
cmc
es
pop
pushf
enter
jno
push
sbb
sti
push
clc
sbb
mov
test
ja
test
jl
xor
sub
xlat
or
push
fstl
xor
cs
or
out
sub
push
and
aas
adc
jge
adc
out
or
sub
cmpsb
popf
and
sbb
cs
dec
scas
scas
pop
pop
sub
fistpl
rorl
pop
add
adc
xor
inc
sub
jmpw
fdivrs
cld
insb
mov
mov
lret
pop
outsb
sub
out
pusha
jns
imul
rcrb
rorl
notb
add
incb
jno
test
sub
mov
sahf
add
in
fs
repz
cmp
mov
xlat
es
push
jbe
xchg
inc
lea
incb
dec
sbb
push
fists
outsl
mov
lods
iret
dec
imul
repz
xchg
xor
xor
mov
call
shlb
out
inc
and
sub
mov
jne
jle
test
iret
cmp
xor
aaa
in
pop
iret
xor
mov
and
stc
mov
xlat
cmp
mov
xor
popf
imul
cmc
ret
out
arpl
fcomps
mov
leave
pop
mov
mov
xlat
sbb
orb
sub
xchg
xor
push
jbe
mov
jae
loop
push
int3
inc
clc
inc
push
sub
in
xadd
xchg
or
or
push
push
loopne
pop
xor
sub
and
sbb
adc
jg
in
inc
aas
lods
pop
andl
inc
add
jne
sbb
ljmp
xor
push
pop
mov
and
stos
pop
sti
lds
add
pop
or
mov
arpl
arpl
mov
mov
xor
mov
rcrl
daa
pop
pop
cli
aad
push
stos
fcoms
loope
mov
stos
mov
xchg
mov
jbe
add
cmp
mov
mov
inc
mov
lret
sub
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
fbld
lds
jecxz
out
ja
data16
mov
cmpsl
dec
xchg
jnp
negl
out
xor
iret
aaa
aas
daa
das
pop
pop
pop
stos
ja
addr16
cmp
imul
loope
jnp
sbb
arpl
das
inc
aas
push
xor
adc
pop
or
push
dec
inc
mov
movsb
movsl
xchg
xchg
test
aad
xor
add
gs
push
inc
inc
mov
movsl
movsl
xchg
xchg
test
aad
xor
add
gs
push
inc
inc
mov
xchg
stc
in
test
cmpsl
mov
push
inc
push
adc
mov
movsb
pop
push
mov
lock
inc
shlb
pop
rorl
cli
cli
mov
mov
lds
jp
or
dec
cmp
sub
imul
push
sbb
mov
icebp
pop
xchg
nop
inc
inc
movsl
cmc
cwtl
mov
lret
jg
add
jne
mov
and
or
lock
test
fprem1
ret
cli
clc
sub
gs
rep
adc
mov
cmp
les
adc
jo
mov
inc
shl
push
mov
xchg
lods
test
rolb
xor
add
gs
push
inc
inc
mov
movsl
movsl
xchg
xchg
test
aad
lds
jl
insb
inc
jne
pop
and
xor
mov
ror
sti
std
jmp
cwtl
in
mov
andl
adc
and
cmp
inc
shl
hlt
leave
xchg
ret
test
hlt
lcall
push
gs
jno
sbb
push
push
inc
inc
mov
movsl
movsl
xchg
xchg
test
aad
xor
add
gs
push
inc
inc
mov
movsl
movsl
xchg
xchg
test
aad
xor
sub
mov
mov
ret
popa
xchg
into
mov
mov
and
jb
jle
mov
cmp
xor
mov
and
out
xor
push
mov
push
ret
xchg
pop
jno
enter
fdivrl
inc
or
fmuls
aas
jno
mov
js
inc
scas
add
xor
mov
ds
pop
pop
xchg
mov
mov
and
xlat
mov
jp
cmp
subl
jecxz
mov
or
das
das
pop
mov
add
mov
pop
pop
test
xor
movsl
dec
frstor
sbb
movsb
sub
pop
mov
mov
fwait
pop
arpl
outsl
in
mov
xor
mov
mov
jle
cmpsb
xchg
mov
jnp
cmp
icebp
cmpsb
jmp
mov
fistpll
rolb
rcll
iret
or
mov
lcall
adc
pop
addr16
xor
lods
jbe
xchg
mov
jg
shrb
push
ficompl
xor
and
xor
xchg
test
push
add
orl
xchg
enter
dec
popa
mov
cli
mov
mov
mov
outsb
in
mov
in
add
and
fisubs
xor
inc
mov
adc
or
fldl
mov
lret
fstps
mov
adc
xor
xchg
xlat
inc
mov
addr16
xlat
add
cmc
xchg
mov
jns
scas
cwtl
mov
mov
push
cli
ficompl
and
add
mov
xor
jmp
testb
jmp
rorb
andb
call
jecxz
inc
xchg
xorb
bound
hlt
jae
in
jb
adc
inc
or
xlat
in
dec
int3
and
sbb
jae
cld
test
push
mov
leave
popa
frstor
jle
popa
jle
cmc
stos
add
jecxz
push
pop
aas
cwtl
fcoml
aaa
add
pop
jge
jno
test
jg
adc
pop
push
mov
mov
pop
lahf
xchg
adc
aam
fsub
and
jae
out
pop
jp
test
addr16
lret
dec
fcoms
mov
int3
jb
hlt
push
pextrw
mov
in
or
nop
sbb
aas
mov
cmp
adc
mov
pop
push
mov
out
push
popf
ss
in
jge
inc
mov
xchg
dec
mov
xchg
movsb
xchg
insb
xchg
ljmp
loopne
imul
mov
pop
pop
or
std
lret
in
and
lea
jbe
bound
je
imul
cld
or
sub
mov
xchg
sbb
or
push
pop
mov
fnstsw
fadds
insl
lds
xorb
sub
popf
xchg
idiv
mov
sub
xchg
jmp
sbb
ret
int
cltd
mov
xor
xor
lods
icebp
rclb
dec
adc
xchg
out
negb
add
ja
loope
shr
test
cmp
jns
mov
insl
lret
das
and
mov
outsb
sub
inc
adc
inc
push
mov
js
xchg
sub
inc
mov
cmp
leave
mov
mov
out
aam
inc
jmp
lcall
dec
cvtps2pd
inc
shl
mov
pop
les
mov
ljmp
mov
jns
mov
stc
xorb
pop
mov
or
push
add
pop
dec
and
xor
imul
cmpsl
inc
jne
rorl
fwait
sbb
pop
repnz
cmpsb
mov
outsl
mov
lret
rcrl
push
out
dec
cmp
jmp
scas
scas
xor
stos
std
add
dec
mov
push
xor
add
aas
out
lret
push
and
jb
repz
out
sbb
repz
pop
mov
xchg
je
stc
mov
add
mov
cmp
pop
mov
cld
repz
push
mov
lcall
lahf
pop
loop
clc
out
push
outsl
cltd
stc
jne
cmovb
cld
ds
cmc
sub
xchg
push
adcl
lret
roll
and
lods
xchg
xor
push
cmpsl
jmp
mov
stos
jle
cmp
incb
aad
sbb
ret
mov
adc
dec
rcr
mov
add
imull
cmp
push
sbb
stos
lcall
jno
push
inc
mov
mov
sbb
mov
push
mov
out
outsb
insb
outsl
cmp
xchg
xor
push
mov
cmp
pusha
adc
dec
xchg
xchg
sbb
push
insl
test
jg
inc
call
xchg
add
rorb
pushf
xor
cmp
or
push
hlt
pusha
ret
add
sbbb
jb
add
jmp
jno
cld
sbb
jo
lods
or
jl
add
xlat
addl
mov
adc
adc
push
and
xchg
testb
imul
mov
scas
xlat
cltd
add
fsubrs
mov
lods
dec
dec
mov
cmpsb
jae
lahf
aam
pop
test
sub
dec
sub
cwtl
int3
mov
pop
ror
and
dec
nop
jne
es
xor
ret
daa
add
mov
mov
jg
add
push
inc
inc
xchg
icebp
je
jp
lea
aam
sbb
xchg
lret
add
adcb
push
das
lcall
xor
mov
adc
shl
aad
dec
icebp
mov
or
push
mov
repz
pusha
dec
sbb
inc
sbb
mov
and
dec
insl
adc
dec
cli
mov
lret
mov
popf
xchg
stos
sti
out
sti
dec
push
fsubl
in
cmp
sbbl
lods
sbb
add
bound
or
jo
xor
push
jo
fisubrs
stc
ja
mov
mov
cmp
xchg
inc
loopne
pop
sbb
push
push
pop
mov
test
faddl
add
and
mov
sbb
ja
mov
dec
data16
pop
xlat
and
pop
sbb
inc
fstp
mov
mov
xor
bound
push
or
or
test
rclb
jg
lahf
fisubrs
cmc
inc
cltd
dec
jns
inc
mov
push
push
cmp
sbb
std
pop
sub
cmp
sbb
jecxz
ss
movsb
dec
and
shll
fidivrl
sbb
cld
insl
popf
fstpl
pusha
cmpsl
fisubrs
popa
fdivp
xchg
lahf
xchg
pop
cmp
movsl
test
xor
cmp
adc
adc
fdivl
mov
and
mov
std
int3
add
mov
xor
sbbb
jecxz
stos
enter
hlt
ficoms
jmp
and
jbe
and
mov
mov
push
pop
mov
ret
push
push
xor
in
mov
cmc
sbb
add
xor
sub
loopne
idiv
jo
jbe
ret
mov
inc
ficoml
mov
or
jne
dec
sub
push
pop
fistl
dec
int3
jge
push
and
mov
fiadds
fcomi
cld
xchg
rorl
lods
fcompl
out
mov
jge
or
lock
dec
pusha
dec
mov
insl
inc
cmpl
lods
sbb
and
push
cmp
and
out
rorb
popf
loope
pusha
in
dec
sub
xchg
cmp
roll
sub
mov
push
jle
into
leave
mov
pusha
rol
cmp
daa
add
xchg
movb
jns
jae
push
cs
pop
ret
dec
js
mov
nop
and
add
mov
nop
mov
bound
fistl
sbb
orl
pusha
mov
js
mov
or
mov
push
aad
scas
xchg
dec
dec
repz
shll
mov
int
adcb
insl
cwtl
scas
inc
sub
or
stos
scas
mov
movsb
mov
mov
enter
fiaddl
xor
fstl
inc
xor
leave
in
imul
pop
lahf
out
pushf
xor
cmc
out
dec
xchg
mov
lea
mov
or
cmp
xlat
lock
or
sahf
mov
inc
pusha
dec
test
and
data16
scas
push
ja
xor
out
repnz
push
enter
sub
jg
aaa
sbb
add
xor
and
lahf
mov
push
in
lock
cmp
andb
jmp
xlat
je
and
and
notb
nop
jno
mov
lahf
sub
movl
lds
mov
lcall
cmp
dec
xor
fdivrs
lock
ret
fninit
pop
xchg
add
and
sbb
adc
mov
xchg
stos
dec
pusha
push
dec
divl
sub
push
ds
xor
ds
call
ds
pop
cmc
pop
sbb
imul
int
lds
fwait
cmp
inc
mov
shr
jge
cmpsl
pop
repz
ficompl
mov
or
mov
xor
add
dec
mov
in
jae
loopne
and
xor
pop
dec
loope
les
sbb
add
and
jb
jl
cmpsb
fwait
repnz
push
out
xchg
pop
sub
lahf
int3
mov
call
into
inc
jl
imul
shll
sbb
pusha
sub
pop
sub
fldenv
scas
mov
ljmp
jae
fisubl
cmp
lods
movsb
cmp
xchg
cmp
jne
pop
inc
js
movsl
or
cmp
xchg
or
rorl
jle
jae
jae,pt
sbb
lcall
lods
mov
out
mov
rclb
data16
push
jne
mov
pusha
or
mov
pusha
mov
cli
inc
nop
mov
pop
clc
xor
rol
and
pop
loop
testl
push
sub
add
shll
dec
sub
jmp
imul
daa
imul
cmpsb
int
lds
inc
ret
cli
ljmp
cmpb
sbb
stos
pop
lret
push
mov
mov
adc
cs
cmp
lock
test
test
test
gs
pop
sbb
movsb
stc
outsl
mov
cmp
xchg
cli
out
jmp
dec
out
dec
mov
mov
jno
push
sbb
leave
rcr
push
push
std
push
popf
cmp
or
fistpll
or
xchg
lods
xchg
push
sub
fdivrs
jl
or
pushf
mov
push
pop
add
insb
in
loop
stos
mov
jle
sahf
dec
and
dec
or
pop
fisubrs
pushf
movsb
and
push
loop
push
mov
lock
adc
mov
xchg
shll
lret
push
cwtl
jmp
adc
mov
xchg
or
aas
push
cmp
mov
dec
insl
dec
in
mov
pop
ja
jl
insb
jnp
and
dec
add
and
fwait
or
rorl
mov
outsb
cs
pop
cld
das
push
mov
rorb
xchg
pop
test
xor
es
dec
dec
roll
pusha
stos
push
ret
jns
aam
loope
insl
aas
ja
mov
rorb
popa
or
fsubrs
pushf
nop
and
sub
add
push
mov
adc
xchg
push
insl
mov
sqrtps
mov
rcll
mov
mov
out
in
arpl
and
inc
outsl
dec
mov
imul
xor
jns
pop
leave
jp
add
xor
sub
pop
ficompl
inc
faddp
inc
push
test
or
push
jl
pop
outsb
pop
cwtl
cmp
xchg
inc
xchg
xchg
sub
mov
sbb
adc
jle
jle
int
das
dec
and
push
lods
adc
outsl
push
adc
fdivrp
inc
push
inc
or
add
arpl
into
mov
dec
iret
pop
jo
xor
jecxz
and
lcall
lods
into
arpl
rcrl
adcb
mov
pop
xchg
stos
clc
shl
adc
cmp
pop
lods
sub
leave
lea
mov
mov
daa
lods
xor
fdivr
aaa
cmp
mov
notl
mov
in
dec
adc
jnp
insb
js
sbbl
shll
mov
or
inc
push
dec
sbb
test
inc
pop
stc
dec
fwait
out
adc
call
lods
lock
out
addr16
test
lret
jge
push
pop
jmp
adc
adc
stos
push
mov
mov
sbb
adc
jbe
repnz
aas
cmp
mov
xor
insb
imull
stos
flds
mov
mov
add
out
into
inc
mov
add
sbb
lret
pop
cmpsl
push
xor
cmp
movsl
jbe
addb
sar
push
je
pop
mov
repz
test
fisubrs
mov
mov
xor
xchg
in
sbb
cmp
jo
roll
aam
xor
or
std
pop
xor
cli
ja
scas
pop
dec
inc
push
push
sub
insl
pushf
jge
mov
aam
and
mov
push
scas
scas
adc
mov
js
loop
fmul
arpl
cmp
jne
loope
incl
adc
inc
loope
decb
fmuls
cmpsl
std
mov
xor
outsl
sub
in
repz
xchg
movsbl
popa
pop
test
cmp
insl
mov
js
lcall
push
xor
push
stos
cmp
cmp
xor
ficomps
sub
cmp
es
lcall
mov
shrl
stc
ljmp
dec
mov
loope
outsb
clc
shrl
pop
dec
mov
out
mov
or
sbb
mov
or
fistps
fdivp
testl
arpl
add
mov
adc
mov
mov
movsb
dec
add
jl
adcb
leave
jno
xorb
mov
and
dec
push
add
sbb
ljmp
out
xchg
add
push
jns
cmpsb
and
mov
popa
out
or
notl
repnz
or
hlt
idivl
inc
xchg
mov
cmp
out
pop
mov
jle
mov
imul
out
imul
js
movsl
mov
jb
dec
cwtl
lahf
shlb
push
cmpsb
daa
into
push
popf
mov
movsl
mov
out
inc
cmp
mov
cmc
nop
mov
push
sbbb
leave
mov
pop
std
jle
push
add
fidivrs
iret
frstor
out
inc
das
mov
std
fisttpll
xchg
cmp
jp
scas
movsb
testb
and
mov
cmc
out
mov
aad
loope
xorl
int
pshufw
loopne
push
popf
push
adc
ja
pop
dec
ja
xlat
popf
rclb
mov
mov
push
xor
xor
imul
je
pushf
pusha
jp
mov
iret
movsb
xchg
sub
pop
xchg
movsl
xor
jno
pushf
adc
mov
jae
sbb
jp
inc
mov
outsb
lods
das
or
sahf
mov
mov
and
sbb
rolb
int3
dec
out
and
xchg
jne
xchg
mov
mov
cmc
xor
dec
std
ss
jge
mov
scas
jae
scas
test
lea
test
mov
mov
test
xlat
mov
sbbb
adc
inc
dec
repz
in
sbb
xchg
stos
fnstsw
sub
test
xor
mov
jb
cltd
pop
stc
pusha
mov
sub
cltd
sub
es
jns
sub
xchg
cmp
aaa
sbb
rcrl
into
js
outsb
mov
sub
pop
rcr
dec
push
in
mov
xlat
pop
mov
push
xchg
jge
xor
rorl
loopne
and
outsl
adc
loop
sbb
scas
repz
ja
xchg
cld
xlat
shlb
dec
pop
pop
jle
gs
or
push
scas
rorl
push
shlb
test
aam
fsubs
jno
sbb
and
mov
mov
insb
inc
or
or
or
rcr
ljmp
js
mov
cmpsl
mov
mov
adc
cmp
or
lahf
lods
mov
shlb
jo
sbb
xchg
add
pop
clc
fidivrs
mov
push
push
cmp
mulb
nop
ljmp
or
shll
fimull
push
and
addr16
rorl
lret
and
or
insb
lret
jae
in
inc
dec
pop
sub
fwait
rolb
or
ljmp
mov
or
pop
sbb
adc
xchg
mov
rcrb
shl
lods
adc
push
xchg
add
or
hlt
movsb
xor
xchg
rorb
repz
push
adc
add
outsb
sub
or
mov
loope
lock
mov
dec
mov
into
ret
int
iret
mov
sbb
leave
ja
popa
sti
ret
jne
add
faddp
and
or
mov
clc
xchg
mov
lods
add
mov
repnz
or
in
in
stos
jge
mov
pop
addb
jge
or
xor
lock
sbb
mov
cmp
mov
sbb
sub
in
xor
movsl
dec
icebp
test
lods
enter
dec
lock
inc
in
push
jb
jbe
lret
mov
imull
stc
std
and
adc
fstl
jmp
mov
popf
cmp
jo
xchg
outsb
xlat
mov
fsub
loop
shll
jg
lods
in
mov
les
push
popf
push
jns
std
outsb
out
mov
shr
inc
popf
push
cmp
stos
arpl
jl
xchg
std
and
test
mov
test
mov
mov
mov
xor
pop
icebp
mov
ss
mov
mov
movsb
pop
sub
push
mov
adc
rcrw
cwtl
mov
leave
xor
mov
mov
lea
shl
ss
clc
sub
add
add
mov
sub
cmp
push
jb
dec
ss
out
xor
adc
cmp
mov
cmp
mov
jmp
xchg
sbb
add
movsb
popf
scas
cld
loopne
ror
sub
xchg
loope
push
rcl
mov
sub
repnz
mov
xorl
cli
cltd
addl
jae
mov
mov
and
sub
decb
cmp
cmp
sbb
iret
mov
sbb
test
push
or
cmpsl
enter
or
loop
push
test
mov
cmpsl
loop
adc
jbe
pop
loop
mov
rorl
mov
dec
repnz
jecxz
jne
add
testl
fwait
stos
aaa
mov
and
mov
sub
lods
jg
hlt
pop
movsb
decl
xorl
fsubrs
push
push
je
mov
inc
insl
jb,pn
mov
loopne
aad
test
pop
enter
loop
and
cs
add
and
lahf
into
mov
sbb
int
loop
cli
dec
data16
jmp
sbb
psubq
loop
lahf
outsl
mov
stos
es
pop
sahf
xchg
testl
jnp
cltd
outsb
mov
mov
cmp
adc
test
inc
leave
push
aam
add
scas
cmc
aad
cmp
repnz
ja
xor
testl
mov
ret
mov
xor
sbb
jmp
mov
stos
push
mov
push
mov
adc
es
inc
jge
shlb
scas
jecxz
pushf
push
subb
loopne
sub
xchg
xlat
aad
mov
lea
icebp
aaa
jp
sub
scas
push
stos
call
fadds
pop
loope
lea
cmpsb
cmpsb
imul
jns
push
jecxz
adc
push
jmp
cmp
divb
and
inc
or
lcall
jle
inc
gs
cmpb
ja
fdivs
jg
aam
mov
outsl
xchg
cmpsl
push
out
pop
inc
or
dec
mov
cli
mov
iret
lahf
or
inc
dec
mov
sub
lock
mov
mov
dec
aad
ret
mov
addl
jl
shl
lahf
das
mov
mov
mov
aad
mov
xor
jnp
sbb
je
mov
xchg
mov
ret
loop
cli
mov
jl
aad
xchg
fdivr
fs
sbb
push
aam
jb
shll
rolb
adc
mov
mov
mov
clc
and
out
mov
cmp
icebp
xor
dec
dec
jecxz
xchg
push
ret
ds
pop
leave
cltd
push
sub
pop
add
mov
mov
inc
pop
fucomp
mov
setle
addb
sbb
push
pop
mov
or
jp
sbb
sahf
mul
scas
fdivl
fldt
sub
mov
dec
pop
movsb
inc
std
mov
add
push
push
inc
inc
mov
movsl
movsl
xchg
xchg
test
aad
xor
add
gs
push
inc
inc
mov
movsl
movsl
xchg
xchg
test
aad
xor
add
jne
gs
push
lds
mov
movsb
xchg
xchg
test
aad
xor
add
in
aad
mov
aas
xchg
test
test
sbb
bound
push
out
outsb
mov
and
adc
fdivp
push
ret
outsb
mov
dec
xchg
lret
jb
inc
sahf
push
out
and
xor
add
push
loop
repnz
ret
cs
jle
dec
sbbb
bound
inc
inc
push
lock
adc
sbb
mov
testb
adc
cmp
add
aaa
adc
cmc
cltd
imul
xchg
stos
sub
jle
dec
or
inc
xor
push
push
sbb
shlb
mov
or
fcoms
loop
xchg
mov
mov
jg
sub
mov
icebp
in
inc
js
jg,pt
fwait
push
cmpb
mov
pop
bound
jb
push
imul
adc
fsubrp
das
sbb
loopne
xchg
mov
pop
xchg
push
push
mov
scas
adc
fists
stos
jbe
inc
push
mov
sub
jle
mov
push
insb
push
out
decl
and
cli
xor
jmp
sbb
cmp
jecxz
sub
xchg
call
push
or
xchg
into
add
call
ret
mov
pop
sti
data16
xor
inc
out
addl
inc
cs
insl
repz
xlat
daa
sti
cmp
jecxz
fistl
cld
daa
call
dec
fwait
jle
imul
push
xchg
data16
int3
adc
ret
cmp
xor
aaa
mov
add
adc
loop
repnz
ret
outsb
mov
pop
xchg
scas
bound
push
out
and
xor
add
adc
loop
repnz
ret
outsb
mov
pop
xchg
scas
bound
sbb
nop
and
frstor
or
imul
lcall
cmpsb
pop
shrb
lock
xchg
pop
inc
xchg
mov
mov
jge
jo
jmp
jge
adcb
xor
cwtl
testl
das
inc
or
adc
orl
stos
jo
inc
and
adc
mov
sbb
push
insl
sub
test
int3
pop
addr16
loop
push
cmp
test
scas
jne
inc
outsb
sub
mov
out
jle
fldcw
or
shlb
inc
clc
pop
sbb
xorl
sti
push
ficoms
fdivl
pop
pop
jge
fs
jg
sub
mov
out
sahf
scas
out
lods
cmpsb
and
pop
aas
inc
inc
fdivs
xchg
inc
dec
push
add
popa
mov
sti
push
dec
pop
shrl
pop
cmp
dec
arpl
mov
cmpsl
ret
movsb
push
lret
pop
pop
mov
in
lret
or
cwtl
stos
leave
inc
dec
andb
andl
cmp
push
mov
pop
mov
or
int
int
jns
mull
sub
into
push
js
ror
or
int3
aad
push
add
sub
mov
xchg
mov
add
jg
iret
or
mov
xchg
movsl
notl
enter
inc
rcrl
pop
hlt
test
out
sub
sub
jne
les
rorb
sub
xchg
mov
loop
aad
out
in
loopne
test
xor
or
scas
push
xchg
mov
jle
push
not
xorb
cld
pop
iret
dec
insb
adc
aad
and
int
lods
sahf
mov
push
cmp
dec
sbb
and
loop
cmpsb
mov
adc
loopne
fs
shl
fbstp
lods
push
xlat
xchg
in
pop
test
lret
dec
dec
xchg
push
dec
pusha
lods
xor
pop
pop
dec
inc
mov
xchg
cld
std
sbb
mov
push
call
cmpb
outsb
lret
mov
add
cmp
dec
cmpsb
in
push
adc
pop
into
dec
mov
pop
xor
mov
adc
shll
sbb
xor
mov
xchg
stos
inc
xchg
movsl
lret
pushf
push
jbe
aam
jp
inc
addl
dec
push
cmpsb
icebp
pop
mov
mov
inc
popa
and
mov
int3
sub
sti
jnp
xchg
daa
outsl
push
lds
cmp
scas
daa
pop
insl
fwait
cmp
push
sbb
sub
cmp
mov
icebp
subb
mov
mov
out
or
inc
xchg
dec
loop
test
lret
mov
jp
mov
pushf
pop
clc
mov
push
sbb
sbb
cmpl
inc
mov
xor
sarb
sbb
pop
add
scas
cwtl
pop
sub
and
mov
jnp
sbb
cmp
fwait
rol
cmp
mov
repnz
sbb
jbe
ds
fwait
xchg
mov
inc
repnz
ficoms
mov
std
enter
mov
xorb
pop
pop
out
call
imulb
icebp
mov
push
add
lret
xchg
push
jge
aas
xchg
sar
push
call
jns
fcmovb
xchg
out
or
fnstenv
out
in
jmp
pop
aaa
mov
or
xchg
loope
loop
sbb
mov
adc
mov
jns
js
int
shll
mov
je
popa
add
sbb
stos
mov
arpl
jg
into
cmp
daa
loopne
test
xor
fnstsw
popa
adc
cmc
push
xchg
push
pop
push
addr16
lea
add
mov
ficoms
jge
mov
lret
aad
ds
icebp
xchg
stos
inc
xor
xchg
cmp
inc
divb
addl
in
pop
jmp
ds
sub
adc
and
popa
pop
cwtl
insl
cmp
mov
test
test
in
lods
popl
outsb
pop
inc
ror
cmp
lahf
mov
outsl
or
jno
mov
lds
or
ret
outsl
dec
aam
cmp
hlt
push
mov
add
jne
mov
sub
jns
fnstsw
cmp
leave
loop
push
shll
sbb
mov
pop
add
push
sahf
bound
mov
add
or
cmp
dec
jmp
mov
das
cld
movsl
mov
inc
cltd
mov
cmp
shll
xor
xchg
lret
pop
xor
xchg
xchg
push
lods
dec
sahf
rclb
addr16
movsb
inc
cld
inc
jae
aaa
inc
stos
out
push
lods
out
ja
push
mov
iret
pusha
jge
push
lds
out
sbb
ljmp
sbb
xor
push
lods
cmp
idiv
adc
incl
imul
mov
inc
jp
mov
jno
mov
sbb
aad
rcr
mov
std
ljmp
ds
fmull
stc
mov
fstl
repz
leave
xor
loopne
repnz
lcall
jmp
push
mov
mov
sbb
gs
or
lods
or
sbb
imul
mov
dec
push
pop
lds
imul
popf
nop
icebp
push
cmp
imul
sbb
fwait
les
or
inc
sti
mov
jns
sbb
lock
pop
daa
or
std
ret
xlat
popa
int
sub
out
mov
call
or
pop
add
mov
or
cltd
ret
aaa
out
mov
mov
int3
test
imul
mov
arpl
jmp
dec
cmc
add
or
mov
aam
fmuls
out
push
and
aam
xchg
push
cmovnp
mull
inc
xlat
sub
mov
into
test
mov
xlat
ds
pop
popf
outsb
xchg
stc
ficoml
fbld
cmpsb
or
or
aaa
or
nop
lret
ret
jno
test
mov
add
sbbl
loopne
mov
mov
jne
daa
push
and
or
cmpsl
cmpsl
mulps
jg
xor
pop
pop
dec
mov
ss
push
and
imul
or
icebp
icebp
push
imul
std
xor
adc
sbb
sbb
jo
xor
cmpsb
enter
aam
ret
xchg
cwtl
jl
adc
sbb
inc
dec
add
imul
insb
loope
mov
lea
mov
mov
cltd
adc
sub
ret
xor
aaa
fsubrs
daa
dec
add
cmp
xchg
xchg
lcall
jle
int3
pushf
imul
dec
pop
hlt
xor
sub
lret
add
ss
adc
mov
mov
fbld
imul
xor
sar
cs
ror
incb
enter
sbb
outsl
inc
or
or
sub
jle
adc
mov
xor
fcoms
mov
int3
pop
in
in
cmc
and
stos
add
xlat
int3
or
sti
inc
iret
or
rcr
inc
das
push
cmp
xchg
arpl
loopne
lret
cmpsb
fucom
aam
sbb
enter
insb
or
sarl
cmp
mov
dec
lret
pop
inc
popa
xor
movsb
pop
jae
addr16
loopne
push
pop
mov
jp
rolb
fistpll
cltd
sub
outsb
jae
orb
xor
aad
test
xor
push
push
ja
xor
adc
dec
or
sub
push
mov
scas
orl
lea
dec
mov
jae
pop
leave
dec
jbe
leave
adc
test
sbb
dec
popa
xchg
jnp
cmpxchg
fbstp
lods
cld
mov
inc
xor
sub
add
xchg
mulb
mov
addr16
or
insb
ficomps
icebp
inc
push
jb
ss
add
jnp
pop
js
xchg
cmp
cmp
push
or
ret
daa
test
sbb
xchg
cmpsl
inc
cld
pusha
and
cmp
ret
fdivrp
push
clc
push
push
lret
mov
cmpsb
movsl
lret
rorl
mov
popf
dec
xor
pop
fwait
scas
movsb
movsb
arpl
negb
inc
nop
lods
call
leave
ds
jmp
mov
sbb
or
sub
std
ret
add
sbb
jg
movb
test
fcmovb
repz
mov
out
mov
in
sub
adc
mov
arpl
and
adc
jl
sti
lret
sub
ss
add
stos
jbe
fidivl
lahf
dec
shl
mov
pop
jecxz
inc
lods
fdiv
insl
jae
push
ss
adcb
push
push
pop
push
jp
jnp
push
push
cli
jno
pop
es
adc
inc
sarl
adc
andl
mov
je
xchg
out
sbb
fstpt
jp
in
cmp
jecxz
ror
int
push
dec
add
js
inc
fs
pop
push
inc
adc
push
fdiv
cmp
int
or
or
cmp
adc
popa
or
mov
out
xchg
jle
repz
ret
mov
hlt
xlat
add
push
cli
fsts
cmp
hlt
cmp
xor
out
or
mov
add
test
sbbl
push
adc
in
adc
xor
jg
int3
in
cmp
decl
dec
popf
int3
sbb
push
xor
pop
xchg
dec
loopne
shr
je
sbb
jb
scas
imul
push
mov
jnp
sub
imul
push
aad
ljmp
shl
cwtl
mov
push
aaa
bound
fstps
pop
xchg
aaa
clc
popf
push
cmpsb
das
jb
in
imulb
imul
bound
sbb
xchg
mov
movsl
mov
xchg
mull
outsl
push
xor
mov
arpl
hlt
mov
pop
sub
sbb
loopne
fstl
in
jb
inc
mov
jae
or
add
lea
mov
pop
inc
jb
push
or
push
sbb
ret
aam
cmp
jns
inc
push
out
cmp
mov
fsubrp
mov
xchg
dec
out
fcmovne
xor
jge
push
adc
mov
scas
ss
pop
add
les
mov
cmp
movsb
clc
mov
gs
ljmp
and
lods
add
out
dec
mov
jb
sub
xor
lods
cmp
dec
popf
mov
stos
flds
fcmovbe
js
ljmp
cltd
scas
fcmovnu
sub
mov
arpl
ja
arpl
lret
inc
gs
jns
jnp
or
sbb
fs
outsl
fwait
pop
test
or
cwtl
mov
pushf
insl
fldl
std
jno
xlat
jl
lds
imul
add
xor
dec
dec
insb
dec
or
pop
sub
and
enter
add
cmp
mov
or
in
push
cld
mov
sahf
insl
adc
pop
out
sbb
cmpsl
ljmp
pushf
xchg
mov
repnz
jp
mov
dec
outsb
sbb
cmp
dec
repnz
jbe
gs
jae
call
shr
pop
add
push
std
sbb
insb
popa
aaa
jbe
dec
cli
jp
repz
xchg
dec
lret
mov
out
and
decl
dec
and
repz
sti
cmp
ja
rorl
shrb
push
shlb
mov
aam
out
stos
in
mov
popf
pop
cmp
ds
xchg
ficoml
or
stc
je
xchg
cli
xchg
hlt
stos
cmc
test
data16
pop
jmp
fsubrl
int3
push
gs
loop
and
int3
mov
aaa
inc
mov
rol
fsub
sbb
add
mov
mov
std
cmp
das
fiaddl
jo
popf
pop
repz
fiadds
push
push
push
mov
int
adc
lods
mov
sbb
cmp
loopne
sub
jno
mov
xchg
or
into
dec
add
loop
lock
jg
mov
mov
push
inc
jl
sbb
mov
jle
loopne
pop
imul
mull
cmp
mov
scas
push
mov
shlb
nop
hlt
adc
mov
aad
jp
mov
or
pop
mov
mov
mull
sub
jp
xchg
daa
dec
jg
or
es
pop
das
push
xchg
lds
outsb
popa
inc
inc
inc
lods
sbb
aaa
movsl
xor
or
mov
enter
inc
enter
jecxz
and
aam
jle
inc
xor
mov
mov
imul
les
movsl
sti
addb
mov
or
ret
fwait
aad
sbb
fcoml
mov
mov
cmc
not
dec
mov
cmp
jecxz
jp,pt
daa
ds
hlt
mov
mov
out
aaa
test
mov
and
imul
movsl
dec
dec
cmp
loope
push
cs
es
fcmovne
mov
fld
cmp
js
cmc
jmp
pop
push
xchg
and
test
dec
xor
test
cmc
sbb
xor
adc
sbb
adc
cld
fcmovbe
jg
cwtl
jg
popf
leave
sbb
aaa
xchg
mov
pop
push
sbb
xchg
or
aam
push
into
xchg
mov
dec
clc
mov
mov
in
sbb
stc
out
xorb
sub
cli
inc
test
data16
pop
movsb
mov
mov
jecxz
jo
insl
push
sub
sbb
fadds
mov
stos
movsl
js
jb
ja
lret
sbb
pop
sbb
popf
pop
or
mov
dec
push
mov
jg
out
pushf
mov
hlt
adc
test
xchg
ror
outsl
iret
sbb
push
lret
cmp
add
and
jmp
cmp
js
cs
mov
mov
adc
dec
movsb
sub
jecxz
sbb
and
daa
clc
loope
cmpsl
or
aas
lods
lret
repz
mov
sub
mov
es
mov
les
jle
jl
mov
adc
paddq
fstl
mov
jmp
out
daa
mov
repz
cwtl
dec
ret
or
pop
movsl
add
and
inc
xchg
add
inc
ror
mov
mov
jmp
repz
add
inc
sbb
imul
adc
mov
fnstenv
jnp
popa
xchg
xchg
mov
icebp
add
pop
mov
pusha
int
xchg
adc
mov
or
jo
mov
inc
repnz
call
sahf
lods
xchg
cmp
add
mov
push
shll
sub
sbb
push
les
mov
int
fstl
adc
dec
movsb
push
cmp
in
iret
idivl
shrb
or
in
adc
shll
fimull
shlb
or
rcrb
sub
push
gs
add
sbbb
lret
cltd
pop
xchg
adc
int
in
cmc
cmpsl
sub
into
lret
or
cmp
sub
pop
and
cmovs
inc
movsb
pop
shrb
adc
ror
jno
cmp
or
lea
test
push
mov
pop
pop
push
repz
sub
sbb
mov
ds
lahf
lock
into
mov
shr
push
adc
incb
ret
sti
scas
mov
pop
fwait
loop
xchg
add
push
mov
pusha
int3
inc
iret
lods
cmp
push
in
add
cmpsl
idivl
fwait
cmc
push
shrb
push
aaa
mov
dec
jo
fsubs
das
jecxz
jne
add
pushf
mov
fwait
sti
xor
mov
pop
in
fdivrl
push
mov
add
data16
lret
fwait
test
xor
dec
enter
xchg
repz
div
in
clc
inc
jno
fsub
popa
test
sub
xor
pop
jb
xchg
test
stos
frstor
dec
xchg
hlt
or
movsl
fnstsw
mov
mov
lods
jno
mov
sub
mov
jecxz
xorl
sar
fsub
std
ja
outsl
lock
leave
pop
je
repz
fistl
sbb
push
xchg
fisubl
adc
fldt
arpl
push
iret
js
insl
jmp
jbe
sahf
ss
pop
loopne
sbb
sub
mov
cmp
insl
pop
dec
movsl
jne
mov
jb
fbld
out
or
sub
ja,pn
adc
inc
into
adc
out
fcomi
jge
mov
das
popf
aaa
bound
dec
cmp
jne
lcall
out
pop
xor
xchg
mov
cmpsb
mulb
jbe
mov
test
mov
push
adcb
xchg
lea
mov
pop
pusha
and
adc
into
clc
jecxz
pop
cmpsb
adc
jmp
dec
mov
xchg
jecxz,pt
adc
frstor
popa
jns
push
mov
jo
ret
pop
sahf
test
adc
xchg
xchg
mov
adc
cmp
mov
loope,pt
push
mov
or
mov
xchg
fbld
shl
cmpsb
cld
enter
inc
int3
repz
in
sbb
or
das
movsl
fcmovbe
pop
sub
push
dec
inc
mov
cmp
lds
hlt
cmc
leave
sub
mov
aas
mov
add
test
iret
insl
sub
lcall
mov
iret
mov
push
int3
movsl
stc
or
dec
pushf
lret
pop
rolb
push
je
cmpsl
scas
rcrl
sub
ja
data16
cs
jge
dec
sbb
loop
imul
scas
pop
and
pop
pop
add
mov
cmc
cmc
ja
minps
add
testb
lea
in
jne
and
movl
sub
and
inc
xor
adc
push
and
jmp
jmp
das
ljmp
jecxz
stos
jg
je
test
popa
adc
mov
scas
and
negb
lcall
arpl
mov
push
imul
sbb
or
data16
test
mov
xlat
jmp
add
ja
add
push
int
loope
bound
pop
add
daa
xchg
jecxz
out
movsl
push
inc
das
adc
cmp
xor
sti
dec
xchg
mov
and
sub
movsb
lods
ja
hlt
rolb
push
xor
mov
ret
sbb
mov
push
inc
int3
jne
push
fistpll
ja
or
pop
pusha
lahf
std
xor
data16
sbb
xchg
xor
mov
shll
pop
daa
cmp
xchg
sub
xor
mov
add
cmp
sbb
pop
push
mov
sbb
mov
cmp
sbb
sbb
xor
cmp
sub
cmovle
jmp
mov
out
movsb
xchg
repnz
cltd
sti
in
and
testb
sarl
pushf
dec
out
mov
adcb
cmp
lods
mov
ret
xchg
leave
leave
adc
int
sbb
xchg
in
jg
push
test
push
pop
ror
dec
sahf
gs
cmc
inc
stc
or
push
mov
dec
out
pop
bound
pop
lds
lret
out
andl
movsb
stc
mov
mov
add
mov
call
inc
inc
jp
fldt
in
into
dec
les
sbb
into
mov
xchg
jae
push
dec
adcb
into
cmp
pop
repnz
adc
adc
push
testl
add
cwtl
xor
jne
sbb
mov
inc
xchg
aas
cmp
in
scas
jb
or
mov
xor
xor
test
mov
xorb
cld
ljmp
cmp
rcrl
lret
inc
xchg
cmpsb
xchg
sbb
ror
shrl
aam
cmpsb
data16
pop
scas
shl
in
ficompl
xchg
pusha
fdivrs
xlat
cmp
sbb
sub
test
pop
pop
insl
sub
cmp
add
int
adc
and
in
jmp
fsts
mov
or
movl
inc
xchg
cmp
in
shrl
stos
jno
leave
jg
mov
jecxz
dec
inc
cmp
push
cmp
scas
int3
mov
test
mov
loop
jp
xor
test
cmp
push
arpl
cld
decl
sbb
mov
test
stos
loopne
lock
xor
aas
push
arpl
popf
pop
movsb
shrb
clc
cli
cmp
subb
sti
icebp
sbb
sbb
push
or
in
lret
andb
jmp
mov
push
shrb
inc
inc
bound
cmp
dec
xchg
aad
popf
xlat
adc
jnp
xor
test
ljmp
cmpl
dec
and
insb
push
fmul
xchg
mov
loopne
iret
mov
sub
shrb
xchg
mov
dec
stos
lds
xchg
outsl
push
mov
mov
in
stos
xchg
roll
jo
roll
mov
dec
ret
xor
stos
shll
sarb
mov
add
pop
lcall
pop
sarl
add
int3
jae
mov
sti
imul
insb
pop
imul
call
ror
inc
ret
gs
add
xor
inc
sahf
push
out
and
xor
add
adc
loop
repnz
ret
outsb
mov
pop
xchg
scas
bound
push
out
and
xor
add
adc
loop
repnz
ret
outsb
mov
pop
xchg
scas
bound
push
jle
xor
add
adc
loop
repnz
push
shrb
outsb
mov
xorb
aam
mov
xor
add
loop,pn
pop
movsb
ret
sbb
testb
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
shrl
push
lea
je
mov
sbb
or
jl
outsb
mov
popa
mov
pop
mov
cld
cmp
fcompl
mov
out
adc
insb
mov
dec
mov
stc
lods
iret
xor
mov
shlb
xor
aam
jecxz
dec
scas
inc
mov
add
sub
fldenv
rcrb
fidivrl
cli
xchg
ficoms
jb
cld
loope
sbb
mov
jns
adc
pushf
popf
mov
add
ss
sbb
jge
scas
or
sarl
imul
jge
and
mov
test
push
pop
xor
jp
pop
sub
add
cld
movb
stos
jl
sub
lock
mov
pop
in
test
cltd
or
fdivrs
int3
sub
cmp
fcmovnu
or
das
mov
mov
jl
adc
mov
loopne
adc
inc
enter
sub
mov
enter
pop
dec
sbb
in
or
mov
ljmp
cmpsl
xchg
mov
sbb
shrd
dec
sbbl
js
mov
imul
sbb
icebp
in
push
std
xchg
test
gs
mov
lods
jns
imul
fsubl
cld
cmp
dec
jmp
int3
sbb
insb
cwtl
cmp
or
sbb
jmp
sbb
or
jl
insb
mov
imul
in
or
sbb
jmp
sbb
or
jl
insb
mov
imul
iret
imul
push
cmpsb
cmp
enter
mov
cmp
push
adc
lret
gs
xlat
subps
add
xchg
dec
pushf
sbb
push
jle
xlat
mov
stos
mov
xchg
cmp
scas
fdivrl
aad
cmp
mov
lods
or
xchg
outsl
or
push
jl
push
mov
out
lret
shl
cli
inc
sbb
xchg
sbb
insl
jecxz
jno
jbe
mov
xor
sub
inc
fcmovnu
out
xlat
jl
xlat
adc
subb
xchg
mov
or
das
icebp
jno
fists
mov
mov
into
mov
add
in
dec
pusha
inc
pop
pop
sub
mov
fisubrl
sub
sbb
enter
mov
cld
dec
inc
incl
push
xlat
or
jp
adc
dec
mov
mov
inc
cmpsl
adc
sub
clc
push
mov
fcmovnb
insb
shlb
and
mov
int
xor
sti
movsb
inc
in
jmp
shl
jno
in
shrb
xchg
jno
mov
out
fists
xchg
pop
adc
push
in
dec
cmp
les
out
sub
addb
pop
add
int
repnz
lods
repz
idivl
inc
xor
bound
inc
mov
shr
shrb
ja
bound
lfs
mov
jle
xchg
cltd
xor
mov
test
sub
stos
sahf
or
call
inc
xchg
or
push
and
mov
jecxz
mov
js
xor
les
and
aad
and
loop
inc
fcoms
addb
cld
mov
push
sbb
dec
sbbb
push
xlat
push
mov
bound
rcll
adc
divb
add
push
push
mov
negb
lods
jne
push
jns
gs
cli
cmp
lcall
lock
add
mov
shrl
sub
dec
dec
or
push
and
int3
push
cmpsl
aad
push
cld
fcmovnb
mov
push
xchg
push
push
jbe
jb
movsb
add
cmp
stos
iret
negb
xor
cmpsb
dec
mov
sub
in
roll
push
pushf
inc
mov
jge
sbb
push
inc
pop
cmc
cli
mov
adc
inc
cmpsl
mov
ret
xchg
xchg
leave
into
dec
push
sbb
dec
addr16
outsl
mov
and
aam
icebp
stc
mov
jae
fwait
xchg
mov
repz
pop
pop
aad
mov
xlat
mov
cltd
adc
rorb
cmp
stos
jge
mov
sarb
hlt
mov
push
inc
push
pop
mov
cmp
subb
sbb
std
not
mov
xor
test
or
push
clc
pop
mov
std
outsb
mov
pop
mov
out
ret
je
adc
adc
divl
fs
aam
and
std
lods
pop
cwtl
arpl
cltd
iret
cs
inc
cmp
pop
aas
loop
movsb
int
fistpl
stos
loopne
adc
shrl
mov
push
pop
xchg
pusha
dec
dec
adc
test
dec
mov
inc
pop
push
cmp
ror
insb
push
pop
je
and
sti
adc
sub
mov
lcall
jp
out
push
lret
das
and
mov
aas
cmpsb
das
pop
jo
pop
dec
movsb
sbb
mov
inc
or
fsub
xchg
call
cs
add
sarl
repnz
out
jbe
dec
jp
inc
pop
insb
cltd
rol
fbld
sti
and
push
push
jge
xchg
sbb
mov
repnz
mov
repnz
add
jb
les
xor
loop
shlb
cmpsb
mov
push
or
mov
nop
xor
inc
mov
in
movsl
je
cmp
test
cmp
fisttpl
cltd
mov
lods
arpl
mov
cmp
fsts
adc
cmpb
cmp
in
sar
and
cmc
popa
testl
fiaddl
jl
out
mov
pop
lock
addl
mov
hlt
or
push
mov
xchg
out
sbb
arpl
ds
movsl
mov
inc
mov
xchg
and
movsb
cmp
jne
add
movsb
ret
outsl
shll
mov
cmp
sbb
test
outsl
mov
fnstcw
fwait
cmp
mov
jns
mov
xchg
arpl
loope
inc
jno
and
xchg
jbe
jecxz
push
mov
xchg
inc
pop
jb
mov
inc
inc
cmp
and
push
pop
and
dec
push
jl
ficomps
mov
es
sub
xchg
xlat
push
sub
jne
cmp
mov
or
mov
push
xor
mov
and
mov
sub
dec
cwtl
aaa
mov
lret
pop
xlat
into
xorl
inc
and
dec
push
test
inc
cmp
lea
in
std
xor
push
punpcklwd
dec
loopne
xchg
push
js
xlat
mov
inc
xchg
lret
xchg
push
xchg
fwait
dec
xchg
dec
adc
out
adc
icebp
inc
ds
popf
lcall
push
decb
mov
fidivl
or
hlt
xchg
sub
orl
mov
iret
jg
es
les
xchg
and
xchg
push
std
loop
sbb
repz
sbb
pop
push
jmp
sub
scas
push
and
scas
ret
dec
cmp
insb
in
pusha
xor
mov
loopne
push
inc
rol
ficompl
and
inc
sub
and
xchg
and
hlt
dec
jg
cli
cmpsb
and
mov
xorl
adc
int
inc
imul
ficomps
and
js
hlt
add
xchg
aad
mov
lahf
xor
jo
daa
mov
lret
scas
les
pop
push
pushf
cmp
sub
sbb
mov
std
pop
aam
jmp
ja
pop
jecxz
jbe
mov
cld
xor
xrelease
movsb
pop
add
and
push
movsl
fwait
xchg
mov
sar
loope
jle
jmp
xchg
pop
je
ljmp
inc
inc
sub
mov
dec
out
pusha
mov
pop
sub
test
push
jmp
jmp
test
sub
pop
bound
pop
mov
arpl
outsl
dec
pop
xor
mov
leave
ljmp
jo
push
adc
stc
dec
mov
pop
int3
jecxz
push
je
or
add
aad
cmp
mov
lcall
pusha
inc
in
cmpsl
jns
nop
cmc
test
mov
in
decb
inc
push
test
or
adc
mov
mov
je
and
int
add
sub
xchg
push
push
sbb
or
or
cmp
cmp
aam
out
push
int3
add
lds
xchg
push
cmpsb
and
push
arpl
fidivs
push
dec
std
insb
xchg
pop
je
stc
cmp
and
addr16
aad
push
aaa
xchg
das
inc
testb
insl
gs
pop
sbb
pop
les
adc
cmp
cmpb
mov
fiadds
jecxz
jmp
cwtl
shlb
hlt
mov
in
test
push
and
daa
add
shlb
add
cpuid
jmp
ficomps
cltd
adc
xor
jae
aad
sbb
sub
mov
push
sub
outsl
roll
add
mov
into
pop
cmp
mov
and
movsb
sbb
push
mov
jecxz
in
pop
xchg
or
adc
js
push
or
jmp
inc
inc
jbe
in
pop
xor
and
cld
scas
ret
mov
sbb
fsubrp
sub
jg
dec
rol
push
lret
push
out
imul
int3
xchg
adc
ror
scas
mov
daa
loop
sub
loope
fisubs
or
sbb
xor
sbb
dec
dec
dec
push
or
into
cmpsb
jb
sbb
mov
mov
jb
sbbb
test
add
cmp
jl
and
mov
cltd
ss
dec
and
cld
mov
xchg
sbb
scas
fstps
mov
xor
or
sbb
inc
push
xchg
mov
bound
outsb
aad
xor
mov
call
cwtl
or
insb
pop
jne
and
adc
adc
dec
rcrl
add
fcompl
add
jbe
addr16
inc
popf
cmp
addr16
repnz
xor
add
les
sbb
dec
imul
hlt
icebp
adc
cmp
and
cmp
dec
addr16
and
pushf
testb
aad
or
inc
jne
mov
loopne
mov
fsubl
jno
outsb
and
xchg
lret
fdivl
inc
pop
lock
sarl
cli
mov
dec
jg
lods
jg
icebp
push
mov
lods
cmpsl
loopne
movsb
loopne
aam
divb
pop
sub
fmuls
hlt
mov
pop
cli
dec
mov
xchg
adc
popf
dec
add
fdivl
lret
in
in
cmovno
mov
data16
lret
and
sub
jbe
xor
repnz
js
and
out
mov
fbstp
adc
xor
xchg
or
test
xor
negl
aaa
add
in
jne
xor
aad
push
data16
mov
pop
ret
adc
fstl
pop
push
and
pop
jle
push
pop
sbb
loop
mov
std
repnz
xor
push
push
test
add
and
mov
cmp
sbb
lds
xchg
sbb
mov
cmp
mov
nop
and
lcall
mov
loope
scas
loop
dec
into
fistpll
frstor
jne
fists
sahf
or
ja
enter
nopl
fs
or
mov
sub
repz
movsl
jne
ss
adc
sti
or
stos
or
aaa
xchg
in
mov
ret
in
das
mov
or
and
lcall
or
test
mov
bound
push
call
add
lock
mov
adc
mov
int
jl
pushf
xor
dec
pusha
lret
inc
mov
and
push
sbb
push
lcall
sub
sbb
pop
dec
leave
lcall
pop
jnp
xor
xchg
pusha
mov
push
hlt
mov
pop
mov
ret
xchg
div
mov
and
lret
jbe
lods
xchg
mov
jae
dec
inc
les
lock
xor
sub
sub
das
add
mov
fcom
sbb
loop
fimull
jo
mov
lcall
mov
mov
xchg
in
fwait
outsl
imul
add
or
pop
loop
cmp
mov
fcmovne
ficomps
rolb
subb
outsl
in
fpatan
inc
inc
pop
ja
mov
xchg
add
mov
fwait
ss
add
add
and
stos
add
pop
mov
lock
sbb
mov
mov
fdivl
push
iret
xor
jno
cmc
mov
lds
fcoms
imul
shr
mov
xchg
mov
das
int
testb
jns
aam
data16
js
sbb
stos
mov
fisttpl
push
ficomps
fucomi
pop
repz
lds
rorl
jo
call
mov
mov
sbb
or
fwait
mov
push
bound
and
in
jns
sbb
xchg
xchg
movb
xchg
in
push
push
xor
punpckhdq
inc
push
sbb
xchg
gs
bnd
cmpsb
bound
mov
in
fdivrl
das
pushf
repz
or
jo
push
mov
pop
scas
sub
scas
push
lds
nop
subb
mov
dec
ret
xchg
test
leave
test
add
mov
outsb
xchg
popf
sbb
or
call
push
mov
pushf
arpl
je
invd
xchg
adc
mov
dec
and
lcall
adc
lods
ret
mov
sarl
adc
sbbl
in
ffreep
cmp
mov
rcl
xchg
xchg
push
cmpsl
adc
and
dec
mov
in
out
gs
pop
cmpsb
insb
mov
nop
mov
lcall
iret
ljmp
mov
or
push
cmp
mov
jns
lret
jmp
outsb
pop
add
frstor
data16
enter
adc
icebp
sbb
mov
loope
inc
fldl
jo
and
fs
sbb
pop
pop
fdivrl
jg
mov
scas
xorb
pop
add
jbe
inc
nop
cmpsb
rorl
mov
gs
hlt
sarl
dec
iret
adc
cld
inc
into
aaa
jnp
hlt
ss
aam
outsb
pop
mov
loopne
movsl
sarb
mov
in
inc
push
int
lea
and
jns
mov
pop
cmp
sarl
dec
dec
mov
and
int3
sbb
es
inc
mov
movb
mov
dec
adc
movsl
ret
inc
jge
pop
incl
jmp
xchg
subb
imul
out
lock
mov
out
loopne
popa
fs
hlt
cmp
insb
push
jb
add
out
test
pop
fnstenv
and
push
out
cmpsl
push
xchg
mov
scas
sahf
dec
sub
clc
ret
repnz
mov
jg
std
mov
leave
xlat
sub
xchg
popf
adc
mov
mov
xchg
pop
loopne
das
fwait
pop
mov
cmp
daa
xchg
fldenv
lea
mov
push
rcrb
aas
out
fwait
mov
sbb
adc
divl
cmc
xor
mov
incl
jns
fwait
leave
frstor
lods
adc
sub
jl
xchg
popf
icebp
pop
inc
aad
dec
and
sub
sbb
in
mov
push
sub
and
ret
sbb
test
mov
outsl
xor
and
sub
and
add
aas
scas
insb
pop
cltd
xor
mov
xchg
add
lds
add
sti
sub
dec
dec
ds
xchg
fsubl
mov
daa
ljmp
in
jb
call
iret
sbb
dec
pop
daa
es
sub
jne,pt
aaa
iret
inc
xchg
sbb
cwtl
out
add
pop
cli
mov
outsb
stc
aam
rcl
das
dec
jecxz
mov
mov
popf
stc
aam
sbb
inc
movsl
pushf
or
std
cmp
test
lods
cmc
xchg
cmp
xlat
xlat
inc
pop
std
dec
jge
fsubrp
jo
inc
mov
dec
fidivl
pop
fldl
out
or
imul
shll
adc
addr16
xchg
dec
enter
leave
ret
int3
in
inc
pop
jnp
jno
jbe
xor
enter
adc
and
insb
mov
mov
jp
test
cmpsl
addb
pop
jg
out
lods
loope
add
adc
dec
add
add
xchg
jo
jl
aam
inc
xor
je
mov
add
adc
adc
jge
sub
mov
add
out
mov
dec
cmp
sbb
pop
xchg
cmp
add
pop
rol
repz
subl
sti
lcall
in
loopne
lock
mov
inc
imul
push
cli
cmp
add
add
jne
xor
sub
mov
xchg
sbb
lahf
int3
ljmp
mov
fstl
ficomps
fs
push
xor
out
mov
cmpsb
dec
lds
xchg
push
jle
iret
sub
xchg
mov
inc
data16
cmpsb
xchg
jp
fwait
adc
aas
adc
cwtl
adc
in
xor
fstpl
fcmovbe
sbb
mov
shlb
rorl
xor
dec
inc
or
and
dec
cltd
dec
xchg
jb
mov
stc
pop
repnz
sbb
xchg
rol
adc
out
hlt
xor
jp
cltd
dec
add
and
fs
ds
inc
ficompl
mov
fmuls
and
out
sbbl
es
or
ljmp
icebp
add
mov
cli
xchg
dec
cmp
dec
push
out
leave
test
ss
and
dec
stc
cmc
popa
jmp
jns
sbb
and
test
and
push
mov
in
xor
rolb
push
mov
loopne
aad
mov
out
cli
inc
hlt
mov
mov
mov
lret
fmull
sbb
ds
fistps
add
adc
inc
les
out
test
push
insl
dec
xor
scas
aam
lock
mov
insb
fcompp
mov
mov
pop
adc
add
test
aam
stos
outsl
and
fdivr
xchg
mov
mov
xchg
notb
mov
mov
pop
rolb
scas
sub
lds
pop
push
mov
sub
push
repz
das
addl
adc
mov
addb
arpl
mov
fnstcw
push
and
push
jo
or
sahf
lret
stos
mov
repnz
es
or
sbb
jle
pop
loope
lods
lret
shrb
mov
incb
adc
mov
sub
movsb
cmp
test
into
fidivl
sub
stos
xor
repnz
xchg
jp
pop
call
sbb
movsl
dec
mov
das
movsl
mov
or
fisttpll
ss
jnp
push
cmpsb
fs
popf
and
int3
stos
sbb
adc
xchg
bound
xchg
or
and
xchg
mov
lock
aam
adc
test
inc
ljmp
adc
je
push
mov
pop
cmp
decl
cmp
fs
test
push
push
cs
scas
shl
cld
jae
mov
fs
cmpsl
dec
mov
pushf
lret
inc
div
dec
outsl
repz
mov
jge
pop
call
and
push
data16
jb
push
test
mov
in
rolb
pusha
inc
push
int3
mov
xchg
int
add
popf
sahf
outsl
adc
stos
sbb
adcb
js
xchg
xor
shll
cmp
dec
cmpsl
fmull
mov
cld
sahf
jbe
sarl
int
cmp
xor
lret
ss
movb
mov
aam
fdivrl
pop
sbb
mov
sbb
xlat
insl
mov
cld
aam
mov
addr16
sub
xchg
jl
add
test
popf
loop
or
rcrl
aaa
cmp
popa
fsubrl
xchg
ficomps
mov
mov
and
nop
popa
cmpb
mov
test
dec
popa
jg
xor
sbb
lods
mov
fsubl
lods
loop
lea
adc
loop
sbb
cmp
dec
cwtl
and
push
dec
js
xchg
push
lds
lcall
mov
sbb
scas
decb
cwtl
lea
adc
repz
and
or
push
sbb
inc
subb
cld
dec
or
lock
pop
jp
push
sbb
loope
mov
xor
pusha
shlb
repnz
xchg
jbe
or
xchg
pop
out
ja
stos
jo
xor
or
jae
mov
es
mov
fs
out
stos
adc
imul
lret
push
mov
sub
sbb
lcall
inc
and
adc
sbb
movsb
fwait
xchg
and
sbb
scas
xchg
in
lret
cmpsb
jnp
sbb
int
push
cs
mov
cli
imul
in
test
stos
xchg
fwait
sbb
inc
rol
mov
cwtl
dec
in
nop
popa
sbb
mov
rcrl
and
sbb
dec
mov
xorb
adc
je
jmp
mov
fst
push
test
or
outsb
aaa
fs
test
mov
adc
cmp
mov
ret
sbb
xchg
mov
mov
sti
jns
dec
xor
xlat
aas
pop
fdivrs
scas
mov
and
mov
gs
int
sbbl
lock
idivb
iret
sub
lcall
stos
inc
jbe
sub
lds
jmp
rorb
xchg
inc
sahf
push
movsb
mov
dec
mov
nop
xchg
stos
mov
dec
fisubl
leave
inc
push
sub
repnz
lds
mov
cmc
jns
lcall
dec
stos
pop
push
inc
and
jmp
leave
fwait
jg
scas
jno
sub
jb
xor
movsb
shl
pop
fs
mov
add
mov
inc
faddl
negb
or
cmp
jns
std
pop
sub
ja
jns
xchg
mov
sub
ljmp
sti
mov
mov
sbb
pusha
xchg
adc
jmp
fisubrl
mov
mov
daa
pop
cwtl
push
test
outsb
popl
dec
aad
mov
mov
dec
lock
mov
cld
cmp
or
sbb
jmp
sbb
or
jl
insb
mov
imul
in
or
sbb
jmp
sbb
or
jl
insb
mov
imul
inc
or
sbb
in
in
sub
sbb
or
jl
insb
lea
jno
push
lods
rcrl
or
jmp
sbb
jnp
hlt
xor
add
inc
mov
mov
imul
add
xor
and
push
xchg
inc
or
bound
mov
mov
push
repnz
adc
add
push
mulb
out
in
test
bound
mov
mov
push
repnz
adc
add
push
popl
xor
sub
push
les
ss
adc
add
loop
or
ror
xchg
or
mov
outsb
or
push
bswap
jg
shll
cmc
js
xchg
fldenv
std
cmp
scas
sbb
inc
lcall
inc
ret
cmp
popf
dec
sub
adc
push
fs
fstpl
in
xor
jecxz
or
xor
adc
mov
xor
lret
stos
adc
bound
mov
sarl
loope
mov
cmp
lret
loop,pt
jp
ja
bound
and
xchg
sub
push
xorb
mov
in
xor
jbe
mov
scas
sbb
mov
arpl
mov
mov
push
repnz
adc
add
xor
and
push
mov
jb
bound
ficoms
in
add
pop
xchg
mov
inc
andl
push
test
fsts
lret
shrl
add
cmpsb
dec
repnz
lcall
xchg
inc
in
out
xchg
sarl
in
lods
inc
rcll
andb
and
loop
adc
add
xor
and
push
xchg
inc
xchg
bound
mov
mov
push
repnz
adc
add
xor
and
push
xchg
inc
xchg
bound
aas
icebp
lock
clc
push
cmp
out
jg
push
addr16
loope
das
pop
jg
pop
inc
in
into
jp
out
outsb
mov
lds
aad
std
shr
pop
in
sub
fdiv
sub
repz
cmp
cmp
jecxz
xor
ror
cmp
es
mov
push
add
addr16
push
sbb
jne
xchg
stos
arpl
cld
popf
mull
roll
dec
shll
fcompl
inc
outsb
outsl
push
sub
imul
iret
dec
in
push
imul
dec
std
push
xchg
shrb
sub
cs
ja
or
es
mov
ljmp
jle
sbb
fnsave
pop
mov
stos
nop
push
nop
adc
insl
lcall
lret
cmpsl
lret
or
push
test
adc
stos
inc
jp
mov
das
pushf
jb
out
mov
movsb
and
add
and
shll
flds
leave
add
mov
inc
sahf
or
insl
rclb
mov
xchg
mov
pop
popf
daa
adc
int
mov
pop
sarb
jnp
or
subl
xor
mov
push
pcmpgtw
popl
repnz
push
sub
cwtl
xchg
test
popf
xor
mov
fidivrl
sarb
in
fmuls
cmpsb
fbstp
stos
push
outsw
aas
inc
out
jnp
data16
adc
fdivrs
mov
dec
xchg
pushf
jl
inc
push
js
jnp
lods
js
stos
clc
mov
decb
inc
insb
inc
push
mov
or
cmpsl
jle
push
cltd
jmp
fstps
xlat
and
inc
daa
and
cmp
jle,pn
movsl
test
fdivl
cmpsb
jne
mov
xchg
jb
mov
cmpsl
pop
mov
push
jnp
or
icebp
incb
inc
pop
add
clc
pusha
in
push
or
fwait
sbb
jne
inc
add
dec
pushf
out
fldl
cwtl
adc
cltd
xchg
aas
pop
xorl
xlat
pop
add
out
aad
pop
add
inc
clc
rorl
sub
fcomip
cmp
xor
pushf
xchg
pop
mov
in
sub
mov
mov
repnz
sub
incl
or
fbstp
fildll
nop
gs
dec
or
sbb
mov
in
inc
jmp
inc
push
push
mov
cmp
int3
out
fcmovnbe
repnz
inc
in
jnp,pt
jmp
and
mov
clc
movsb
xchg
and
aam
push
or
mov
or
insl
sbb
push
test
push
movsl
xor
adc
sbb
push
rclb
mov
mov
stos
jge
add
dec
shlb
stos
sbb
mov
push
lret
insb
cmp
mov
push
aam
filds
inc
jp
lds
sti
icebp
mov
lds
imul
xchg
dec
test
inc
push
pop
movsl
or
pop
or
divl
je
repz
jo
mov
insl
arpl
test
psubd
mov
movsl
fadds
test
pop
sbb
loope
push
shll
in
in
mov
mov
or
inc
iret
fisubl
stos
ret
push
hlt
hlt
fsts
cmc
scas
in
les
mov
jb
mov
and
int3
dec
inc
jmp
pop
ja
ss
jo
sbb
jno
adc
loopne
popf
imul
cmpsl
mov
fstpt
jge
std
shll
mov
adc
stos
mov
mov
mov
sahf
mov
inc
and
loope
lds
push
mov
int
repz
rorb
push
icebp
jbe
xor
daa
jbe
or
je
jb
push
jecxz
or
push
cmp
adc
or
ret
mov
and
mov
incb
fdivs
outsl
bnd
arpl
dec
inc
test
pop
lret
imul
dec
push
lret
pop
jne
and
sub
push
pop
aad
lods
movsl
fbld
in
xchg
mov
sbb
shlb
ja
pusha
inc
out
in
mov
push
cs
mov
test
mov
cwtl
mov
clc
cwtl
mov
fwait
lcall
leave
mov
gs
push
and
mov
shl
push
lods
or
adc
push
xchg
or
ss
je
xchg
shll
shlb
pop
xor
movsb
aas
es
adc
jmp
test
iret
shrl
xor
dec
fwait
pop
repz
cmp
and
cmp
fcoms
mov
fistpl
push
repnz
divl
push
sbb
aad
sbb
or
insb
out
iret
ss
int
push
and
cli
pop
xor
cmp
dec
ds
movsl
out
pop
loop
rcrb
cld
pop
icebp
cli
or
aad
mov
jns
test
scas
imul
pushf
cmp
cmpsb
pop
aam
or
rclb
add
jne
sub
stc
icebp
or
mov
loopne
pop
in
adc
push
jle
leave
rcll
mov
jo
mov
lahf
cltd
mov
pop
push
jne
lret
imul
xchg
pop
ds
push
lods
push
out
pop
sub
subb
rcr
out
mov
sub
pushl
pop
cwtl
inc
sbb
cmp
mul
dec
xor
sbbl
xchg
in
decb
cli
ja
adc
dec
mov
mov
xchg
jmp
cmpsl
sub
xor
in
jp
xor
adc
jl
cli
icebp
lods
mov
lcall
fildll
cmp
or
jecxz
or
sbb
cmp
add
leave
inc
mov
pop
js
xchg
bound
stos
les
pushf
loopne
pop
and
movsl
test
gs
dec
out
pop
scas
js
fisttpll
ds
or
inc
pop
push
sbb
xor
std
cld
lock
lcall
shrb
inc
or
test
xor
cli
fsubrl
icebp
xor
mov
daa
in
int3
inc
scas
call
dec
lret
jp
jo
loope
cld
and
loopne
xchg
xchg
cltd
lds
ret
pop
mov
ja
in
mov
inc
es
pusha
cmp
push
out
mov
fucomi
jb
mov
or
cld
out
or
or
jno
pop
add
push
loopne
inc
inc
jp
les
insb
scas
xor
in
clc
sub
test
pop
or
mov
pushf
addr16
push
xchg
mov
stos
adc
cmp
mov
rcr
add
pop
ja
mov
sahf
pop
sti
jno
iret
hlt
jmp
testb
test
or
and
mov
popa
dec
inc
stos
int
xchg
inc
dec
in
xlat
mov
fbld
pop
in
movsb
mov
loope
add
or
repz
inc
pop
jae
scas
adc
push
mov
js
push
dec
lcall
jmp
test
cmpl
jmp
int
pop
aaa
testl
mov
sarb
push
es
jl
popl
mov
xchg
into
mov
ja
mov
mov
out
enter
jae
dec
sbb
push
cmc
ss
sarb
or
sahf
aaa
sub
pop
cmpl
sub
adc
push
mov
cmpb
push
cli
or
inc
lods
inc
enter
loopne
adc
jb
inc
mov
out
ljmp
add
xlat
mov
pushf
mov
dec
imul
lds
outsb
jae
sub
adc
mov
add
push
aad
lahf
in
push
lret
mov
stc
pop
aas
les
daa
in
scas
dec
orl
and
std
int3
cs
inc
ljmp
mov
mov
sbb
fwait
out
lret
sbb
in
jo
mov
scas
push
lds
mov
insb
shl
jne
push
jge
ja
mov
mov
out
fisubs
cmpb
es
dec
sbb
popf
and
or
das
jnp
fsin
jnp
out
cmc
pop
push
pop
dec
sub
xchg
pop
dec
xor
jns
xor
rcrb
cmpsl
sub
push
sbb
ret
sarl
sub
scas
loope
xor
rcrl
dec
xchg
aas
cmpsb
cld
fildl
repz
sahf
xor
stos
mov
mov
mov
cwtl
outsb
pushf
ja
dec
fs
shr
sbb
fidivrs
test
jmp
pop
xor
dec
pop
pop
cli
ret
xchg
mov
xorb
fcoml
dec
dec
pop
gs
inc
jnp
mov
test
xchg
imul
sub
pop
push
popa
aaa
lret
ljmp
push
rcll
jecxz
or
leave
into
jmp
mov
or
pop
add
sub
inc
and
loop
testb
dec
push
or
sub
cwtl
and
leave
mov
mov
sub
ret
xchg
mov
call
push
out
in
je
mov
mov
mov
movsl
jns
call
pop
or
addr16
add
lods
pop
sub
jo
mov
push
xchg
int3
and
outsl
mov
fistpll
shl
out
out
push
dec
cmpl
subl
cwtl
fbstp
pop
sub
and
xchg
mov
pop
jno
sub
outsb
ficoml
sahf
subl
mov
ror
sbb
jo
mov
ljmp
ret
ljmp
or
inc
mov
aas
decb
mov
lahf
lahf
leave
xchg
pop
icebp
outsb
add
in
loopne
xor
outsb
leave
lret
rcrb
mov
jp
xchg
or
std
aad
es
insb
popa
shll
and
dec
movb
mov
shlb
dec
sahf
icebp
imul
inc
jp
sbb
lods
push
push
xor
in
sti
aam
jae
and
popa
js
mov
out
iret
test
push
hlt
dec
jnp
jbe
jp
dec
aam
sub
adc
xor
mov
pop
xor
mov
mov
xor
andl
mov
dec
xor
call
ss
out
sbb
sbb
xor
fmulp
jg
sbb
popf
push
out
jmp
imul
push
out
pop
mov
das
sub
or
mov
dec
mov
int3
in
outsb
pop
es
cmp
lods
cmp
jne
insb
aad
stc
rol
inc
js
pop
adc
cmp
cltd
fcomp
int3
or
subb
mov
jecxz
aaa
rcll
cltd
or
jne
insl
insl
fbld
and
pop
nop
jp
inc
dec
leave
and
test
adc
pop
cmp
inc
cmp
lods
rcrl
mov
iret
divl
mov
cmc
cmp
xchg
mov
sbb
push
mov
or
dec
cmp
icebp
mov
pop
jnp
sub
inc
sbb
mov
mov
mov
push
add
add
mov
add
jg
cmp
xchg
push
adc
jg
or
dec
pop
imul
jb
in
in
mov
jno
jle
pop
pushf
ret
mov
mov
addr16
cltd
push
mov
idiv
in
mov
mov
js
sub
mov
xchg
or
in
xor
push
xchg
push
jmp
mov
out
shlb
pop
lds
cmp
rcrl
ret
add
xchg
adc
push
sbb
xchg
jns
imul
jb
dec
mov
out
mov
cs
push
jge
ss
xchg
subb
add
in
pop
out
jge
mov
aas
pop
push
sbb
sbb
cmp
pushf
dec
add
insb
push
push
adc
aad
mov
adc
fdivr
sub
mov
and
std
fisttpl
or
loope
std
loopne
int
cmp
rolb
aaa
or
js,pn
add
and
int
lock
push
jnp
stc
add
push
mov
lea
cs
pop
mov
mov
adc
insl
xchg
push
int3
push
pop
pop
adc
idivl
mov
es
lods
mov
dec
sbb
jecxz
jno
test
adc
ficoml
cs
cltd
or
mov
pop
mov
fdivrl
sbb
sti
cmp
in
fnstenv
pop
mov
scas
gs
in
inc
xor
jb
or
testl
ja
fildll
push
sub
jae
push
daa
test
mov
ja
movsb
jecxz
test
movb
stos
push
cmp
pop
mov
addr16
pop
mov
bound
and
mov
stos
rsm
mov
mov
mov
adc
mov
push
mov
add
inc
sub
dec
mov
mov
stc
insl
and
test
das
nop
test
jle
cwtl
imul
inc
iret
jmp
mul
sub
lea
cwtl
mov
cmpsl
push
sub
mov
xor
inc
je
sbb
aad
shlb
pop
inc
lcall
leave
sbb
pop
popf
inc
jp
insb
ret
sub
out
mov
mov
roll
test
int3
mov
mov
xorb
jle
js
insl
dec
inc
mov
mov
jmp
das
inc
sub
push
and
mov
das
icebp
int
aad
and
jb
loopne
ret
mull
and
dec
mov
cmpsl
popl
test
insl
ret
mov
push
cmp
adc
loopne
push
outsb
jo
mov
popf
les
inc
pusha
xchg
sub
sahf
div
jns
xchg
in
int3
jb
push
ret
loopne
ja
mov
mov
sub
pushf
cmc
scas
push
and
push
add
cpuid
sub
push
callw
aas
fwait
dec
call
cli
push
inc
fstpl
mov
jge
mov
out
push
mov
ret
mov
aam
adc
adc
cli
mov
jecxz
adcl
lds
nop
adcl
mov
jle
jnp
aad
fucom
mov
adc
lret
xor
cmp
ret
insb
jg
dec
inc
push
fbstp
sbb
pop
inc
clc
mov
pop
not
mov
jge
outsb
push
mov
ljmp
jp
adc
jns
int
dec
mov
pop
hlt
faddp
aam
sub
adc
mov
xor
add
jge
mov
cmp
pop
mov
idivb
popa
add
test
jno
pusha
push
fisttpl
insb
mov
imul
cmp
add
push
xchg
mov
cwtl
sub
jmp
xchg
cmp
adc
adc
jp
adc
add
mov
pop
imul
daa
std
pop
xchg
mov
jbe
aad
scas
arpl
sbb
imulb
ficomps
lcall
sub
jg
inc
mov
push
enter
cmpb
enter
mov
fisubl
ja
add
gs
jmp
mov
jne
repz
aas
jnp
sbb
jno
in
dec
aaa
sub
out
fwait
loope
push
int
cld
std
ret
dec
jnp
cwtl
icebp
mov
pop
xor
mov
push
scas
lret
bound
dec
sub
nop
and
ds
push
arpl
mov
aad
test
nop
aaa
hlt
cltd
or
inc
jge
aad
in
int
fstps
pop
inc
jle
fprem1
cmpsb
mov
or
inc
mov
inc
adc
insl
inc
sbbl
cmc
add
imul
iret
icebp
dec
cmpl
lret
fwait
in
cmp
push
loope
sub
imul
dec
in
jne
decl
js
insb
and
aas
mov
mov
or
jne
jns
rorl
sub
xchg
sti
call
cmp
std
xor
mov
in
jge
or
int
loope
push
stos
jns
or
into
and
lds
and
arpl
mov
loop
inc
push
orb
mov
ret
lcall
push
aad
fdivrl
adc
movsb
inc
inc
adc
cmp
mov
pop
clc
sahf
stos
enter
stos
ret
or
adc
mov
push
stc
xor
sbbb
call
sub
sub
xchg
scas
add
and
jne
push
or
sbb
adcl
in
aas
stos
adc
mov
sub
out
mov
mov
mov
mov
loope
jp
jmp
pop
dec
jb
xchg
xor
sahf
sbb
loop
cmp
aam
nop
xlat
add
lcall
lea
pop
mov
add
add
out
sub
addr16
icebp
mov
das
push
enter
jg
push
and
xchg
repz
sarl
cltd
gs
fidivrs
xlat
cmpsb
lret
cmp
mov
and
add
pop
add
cmp
push
leave
ret
arpl
in
cmp
mov
jns
and
inc
fidivl
test
enter
pop
xchg
fisubrs
je
sbb
dec
icebp
rcll
iret
daa
add
jecxz
inc
mov
pop
daa
adc
fldl
lock
push
adc
cltd
mov
xchg
jno
sbb
mov
xchg
test
orb
inc
pop
fstpt
lea
rolb
mov
nop
fidivs
mov
repz
rcrl
and
xchg
lret
aad
pushf
mov
mov
fucomip
orl
dec
test
jecxz
cld
jl
into
sbb
pop
mov
cmovle
and
mov
add
in
inc
mov
pop
repz
jl
sub
pop
push
fucomp
jns
xchg
loopne
xlat
sti
enter
xor
and
pushf
sub
in
sbb
in
xor
pop
adc
fcomps
outsb
pop
sub
iret
sbb
mov
pop
js
ljmp
xchg
inc
dec
cmc
mov
aas
or
mov
imul
sub
out
ja
mov
sub
ss
popf
shll
xor
scas
stos
push
xchg
push
outsb
and
sti
pop
nop
icebp
sub
adc
add
dec
adc
lea
sbb
inc
push
pusha
fs
in
fnsave
out
pushf
mov
in
lcall
pop
cmp
mov
bound
xor
outsb
lret
xchg
cmc
es
out
faddl
and
out
cwtl
stos
aam
pop
push
repnz
sub
in
push
sub
fnstcw
movsb
pop
xchg
loop
lcall
jbe
mov
pop
sti
std
pop
lods
jle
xor
jmp
pop
stos
fbstp
push
sub
sbb
test
aam
out
cld
inc
push
pop
xor
lods
iret
adc
push
pop
xor
pusha
xchg
sub
shlb
dec
add
sub
ret
add
pusha
mov
rorl
add
fistpll
add
cmp
lea
test
or
push
fists
movsl
push
and
shlb
mov
pop
ret
imul
mov
sub
add
sar
loope
jae
popf
jmp
aam
cmp
ja
xchg
aam
gs
fistps
pop
cmp
adc
pop
out
loop
jge
pop
mov
int3
popf
and
xor
call
push
stc
das
mov
std
cltd
into
fimull
scas
push
push
movsb
out
orb
dec
iret
push
test
dec
outsb
push
inc
pop
cmp
dec
shll
xchg
lods
adc
lea
repnz
xchg
adc
cmpsl
sarb
repz
ret
cmc
jae
xor
rcl
sub
mov
popa
xchg
inc
jae
das
cmp
ret
cmp
mov
dec
mov
out
jmp
push
inc
dec
rcrb
mov
xchg
mov
dec
lods
cli
inc
mov
shll
mov
ficomps
test
add
aam
repz
mov
cmp
cwtl
out
adc
rorl
dec
mov
push
mov
enter
std
mov
lods
push
inc
mov
sub
aaa
mov
add
pop
mul
xorb
gs
push
jo
dec
stos
inc
or
lock
stos
push
sbb
mov
inc
xchg
call
pop
mov
push
and
cmp
add
fidivrl
mov
xor
ss
xor
aaa
mov
jge
pop
xor
add
pop
pop
mov
xor
and
scas
jne
jecxz
or
jp
lahf
push
lods
push
adc
lods
loope
sbb
hlt
mov
test
shrl
in
enter
roll
lods
add
xor
movsl
nop
jbe
outsl
adc
mov
push
mov
pop
xlat
ret
dec
xor
sbb
in
mov
dec
mov
xor
cmpsl
push
fldt
cmp
das
jg
xchg
jbe
data16
ret
ss
adc
add
xor
and
push
xchg
inc
xchg
bound
mov
mov
push
repnz
adc
add
xor
and
push
xchg
inc
xchg
bound
mov
mov
push
repnz
adc
add
xor
and
push
xchg
inc
xchg
arpl
mov
mov
push
repnz
adc
add
and
leave
popf
fsts
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
imul
xor
rcrl
imul
add
pop
add
add
add
add
add
add
or
add
add
xlat
add
add
pop
add
add
add
add
add
push
add
add
add
add
dec
add
add
add
cmp
add
dec
add
add
add
add
ret
add
add
and
inc
add
mov
bound
push
add
add
movsl
add
pop
add
bound
xor
test
cli
add
add
add
add
add
add
add
add
add
adc
dec
add
and
jne
dec
add
add
add
add
loopne
adc
inc
add
xor
jae
push
gs
add
mov
add
sub
push
add
add
add
add
imul
push
add
add
daa
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
out
sbb
mov
add
xor
push
add
add
add
push
add
arpl
and
add
add
add
add
add
add
add
ret
add
add
dec
add
add
add
arpl
dec
add
add
inc
add
add
add
clc
add
bound
outsb
add
fadds
pop
add
add
add
add
cmp
loopne
xchg
add
add
add
fldl
ret
add
add
add
add
int
dec
add
add
add
dec
add
push
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
das
add
xor
dec
add
and
pop
add
add
add
add
add
add
add
add
addl
sub
xor
inc
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
test
or
and
push
add
add
add
add
pop
add
add
add
dec
add
dec
add
add
add
in
add
add
add
ljmp
add
xor
inc
add
add
add
lret
add
sti
add
bound
push
lret
add
add
insl
add
add
add
add
popa
add
add
pop
jne
inc
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
inc
add
add
adc
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
jg
cwtl
add
add
sub
add
add
jecxz
cmp
add
dec
add
ja
xor
filds
outsl
add
add
add
add
lock
add
add
add
mov
jmp
imul
dec
jp
pop
sti
out
shll
fiaddl
inc
jb
fstpt
pop
cs
add
cmpl
movsb
shll
gs
lahf
adc
add
sbb
mov
pop
mov
into
outsb
mov
popf
leave
cmp
inc
and
add
jp
int3
out
mov
shll
inc
cmp
xor
push
movb
push
cmpsl
enter
test
add
ret
shr
cs
and
fwait
lahf
xor
dec
mov
xor
dec
xchg
pop
mov
pop
cmp
std
orb
sub
xchg
div
or
and
loope
and
add
mov
cltd
fs
les
out
dec
lds
sbb
and
cld
push
mov
fmuls
aam
sbb
loop
scas
aas
lret
divb
mov
aas
add
wbinvd
or
or
inc
push
xor
ret
fidivl
std
inc
jle
ds
pop
int
pavgb
pop
jae
jmp
into
add
or
mov
xor
push
pusha
arpl
push
jne
cmp
xchg
push
xor
in
sbb
iret
lcall
sub
test
or
lret
jl
fxch
in
roll
mov
mov
pushf
push
pop
mov
cmpsl
iret
dec
xchg
js
les
mov
js
les
sbb
dec
push
ret
and
ja
fsubrl
test
ret
xchg
adc
add
scas
jl
jbe
mov
outsl
jnp
mov
mov
and
xchg
cmp
in
mov
fnstsw
aad
dec
leave
sub
outsl
sahf
push
mov
push
addb
xor
mov
stos
cmp
subl
test
movhps
pop
pop
adc
mov
inc
mov
ljmp
es
mov
sbb
jne
mov
jb
and
ja
gs
cli
aad
cld
std
negl
ja
mov
fnsave
lcall
and
push
pop
push
cmc
cmpsl
cmp
mov
ljmp
addr16
das
push
cmp
push
push
out
mov
mov
jmp
or
add
enterw
pop
add
loop
inc
test
mov
push
out
cmp
popa
jmp
fwait
mov
cli
mov
arpl
stos
and
cmp
orb
test
or
mov
popl
and
dec
out
in
aas
fidivl
aas
pop
dec
mov
std
das
out
mov
imul
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
