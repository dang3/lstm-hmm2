call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
gs
jne
inc
jle
outsb
sub
jo
in
cmc
iret
movsl
sahf
mov
test
jne
inc
jle
outsb
and
ds
into
mov
aad
movsl
in
mov
test
jne
inc
push
jbe
pop
xor
xor
fdivp
in
mov
sti
fwait
int
cli
lret
int3
sti
shrl
ds
or
xor
shll
das
orl
movsl
add
out
pop
leave
les
outsb
mov
push
shl
adc
dec
scas
push
adc
mov
push
popf
ret
lea
xor
and
js
sti
jae
ficomps
adc
mov
je
xor
and
stos
in
in
dec
add
arpl
fisttpll
test
mov
das
subl
add
adc
cmc
and
xor
push
pop
push
sub
sub
xchg
stos
cli
aas
sahf
jle
mov
movsb
cmp
mov
outsb
test
pop
inc
addr16
outsb
and
ds
mull
movsb
xchg
scas
and
cmp
sbb
or
jl
pusha
push
push
dec
movsb
mov
into
cmpsb
cli
mov
mov
rol
ret
pop
daa
adc
push
pop
inc
add
stos
imull
shr
mov
fsts
dec
sub
push
sub
ds
into
out
movsl
sahf
mov
test
jne
inc
jle
outsb
and
ds
into
out
movsl
sahf
mov
test
rcrb
stc
jno
call
or
mov
xor
xchg
inc
repz
adc
pop
and
xor
stc
cs
mov
xor
mov
adc
call
adc
arpl
test
mov
jg
cmp
addr16
jne
shll
ret
data16
roll
sub
pop
adc
mov
or
jo
movsl
imul
inc
mov
inc
fcmovb
je
lcall
mov
popa
xchg
cli
pop
xor
adc
das
inc
arpl
icebp
sbb
jb
mov
pop
shll
cmp
lods
js
lock
data16
or
fldenv
xor
cltd
dec
mov
test
pop
dec
or
pop
loop
mov
movswl
out
repnz
scas
add
movsb
int3
jae
mov
lret
jecxz
xor
loopne
push
or
mov
call
push
mov
cmp
push
adc
sub
cwtl
orb
mov
pop
lcall
cwtl
movsl
pop
pushf
push
int
mov
lods
jge
push
fs
stos
push
lock
ret
movsb
xor
test
stc
lods
loop
dec
aad
int
daa
push
pop
out
jno
aas
mov
hlt
push
fisubl
test
mov
hlt
dec
push
fcmovnbe
sub
jp
inc
fwait
je
pop
daa
iret
in
or
mov
aad
cli
lahf
addr16
scas
or
push
jb
data16
cmp
pop
aad
shlb
or
jne
fwait
pop
andl
gs
fdiv
or
sbb
in
addr16
data16
out
loopne
sbb
fldenv
enter
fistpll
not
cld
add
imul
push
aam
push
sbb
cwtl
loop
xor
jne
jl
pop
cmp
mov
mov
xor
xchg
cmp
mov
inc
repnz
jb
push
popf
mov
movsb
movsl
fs
sub
in
lret
xchg
int
dec
fidivs
jecxz
cmc
push
rolb
test
outsb
dec
das
mov
and
jge
ror
test
in
jae
popa
xor
push
push
lret
mov
push
dec
or
lods
dec
jl
arpl
mov
lea
lret
je
outsl
cmp
int3
scas
fnstenv
mov
movsb
or
push
jg
adc
xor
pop
in
dec
jno
daa
add
lds
xchg
les
out
sub
dec
push
xor
xchg
stos
into
push
dec
inc
xor
adc
inc
push
add
add
mov
mov
fdivrl
and
daa
popa
jle
mov
popf
lock
xchg
insb
test
pusha
xchg
xchg
xorl
hlt
test
jns
out
adc
scas
pop
mov
test
mov
jnp
stos
mov
inc
into
inc
dec
mov
leave
repz
mov
syscall
clc
xorl
jmp
mov
out
loopne
adc
xor
lock
push
or
mov
test
jo
pop
push
adc
dec
fwait
mov
push
pop
pusha
aam
ja
imul
daa
add
xchg
andl
add
pop
das
mov
mov
xor
repnz
test
shll
sub
mov
test
test
sbb
data16
sbb
mov
sar
and
cmpsb
flds
ja
cld
xlat
aad
pop
push
inc
lahf
cltd
jl
jecxz
fadd
mov
std
push
mov
pop
mulb
jl
ds
ficompl
shlb
add
xchg
frstor
cwtl
negb
fisubrs
push
lods
into
and
cwtl
adc
adc
dec
push
push
inc
inc
push
xchg
mov
in
push
daa
popa
push
xor
insb
imul
mov
orb
stos
lcall
adc
cld
cmc
sahf
and
sbb
mov
mov
pop
gs
outsl
cmpl
inc
inc
cmp
or
or
xchg
or
enter
xchg
fsubp
dec
push
out
inc
addb
ljmp
mov
pop
test
mov
outsb
lcall
nop
fs
enter
push
push
xchg
dec
inc
fisttpll
loope
push
sarl
js
mov
inc
in
inc
or
cmp
jnp
and
ja
adc
add
jl
mov
jnp
ja
jb
icebp
loop
into
pop
pusha
or
fcmovnb
movl
imul
jbe
cwtl
and
popa
sub
outsb
push
enter
pop
test
sub
loop
nop
push
and
push
xchg
mov
add
test
xchg
ss
ret
scas
jbe
add
pop
add
dec
test
xor
cmpsb
les
jnp
bound
das
xchg
adc
cmp
mov
loopne
movsb
hlt
xchg
inc
sbb
loope
ljmp
scas
inc
adc
lods
call
dec
test
leave
push
out
sahf
cwtl
pop
sub
aad
aad
rcr
dec
cmp
push
fistl
ret
adc
sbb
ret
xor
fsub
outsl
dec
sar
outsl
mov
pop
pop
shrb
in
in
dec
xor
or
sub
out
out
push
mov
fs
jo
adc
xlat
and
clc
jbe
out
mov
xlat
pop
inc
cmp
out
pushf
cmp
imul
cmp
sub
cltd
mov
push
pop
rcrl
stos
out
pushf
cmovae
push
push
lahf
scas
outsl
insl
loopne
or
lcall
in
repz
pop
test
lods
addr16
dec
dec
jae
stc
sub
in
sbb
xorl
sbb
loopne
jns
push
dec
iret
mov
cmp
pop
rcrl
jge
sti
std
rol
ret
loop
pop
lcall
mov
jl
fcomps
or
ja
popl
adc
test
pop
popa
sub
adc
pop
cmp
lock
cmp
mov
aas
and
out
jnp
insb
and
pop
mov
movsb
std
pop
sbb
mov
cmp
mov
daa
push
mov
push
mov
popa
dec
fdiv
repnz
jmp
cmpsl
popa
movsb
xchg
xchg
fcomps
cmp
leave
adc
hlt
cmp
cs
out
arpl
addr16
xlat
fsubs
out
mov
iret
shlb
ds
mov
or
rol
aad
lods
fs
lret
icebp
clc
enter
loopne
fstpt
mov
sub
dec
mov
fadds
jo
sub
push
push
push
lock
jo
sub
push
mov
imul
rclb
adc
xchg
int3
adc
bound
push
sub
or
dec
jbe
mov
pop
roll
push
imul
xchg
mov
cli
fcmove
xbegin
out
ds
jo
or
shrl
mov
xchg
fcomip
jmp
out
sub
jns
pop
hlt
mov
in
loopne
mov
cwtl
or
in
jmpw
dec
iret
sub
mov
sti
in
push
or
popl
mov
xchg
or
inc
sbb
push
xlat
or
hlt
jne
in
in
pop
jmp
push
add
jae
xor
ret
dec
idivl
pop
aam
sub
sub
xchg
add
sbb
adc
sub
push
rep
stos
pushw
or
add
sub
pusha
inc
test
mov
insl
pop
fsub
jbe
iret
enter
call
iret
add
sbb
jae
repnz
jno
repz
inc
xor
xor
jnp
xchg
add
cmp
fadds
movl
dec
je
add
shll
idiv
adc
notb
lods
loopne
shlb
out
cmc
mov
pop
mov
sti
cmp
lock
out
dec
in
bound
cli
nop
adc
mov
leave
aaa
jle
mov
push
loop
addr16
mov
icebp
mov
repnz
in
cmp
mov
jl
sarb
lds
push
mov
sti
or
push
shrl
mov
aad
repz
mov
imul
push
cmp
pop
sbb
arpl
xor
push
mov
aam
popf
neg
pusha
fsubs
dec
mov
ror
push
in
push
add
sub
inc
mov
pop
popa
pushf
cli
add
xor
xor
sub
cmpsl
arpl
mov
stc
xor
lcall
jl
fcom
repnz
sbb
or
or
shlb
ja
mov
mov
mov
push
cmp
mov
sahf
xchg
mov
jmp
out
movsl
cmp
add
cmpsl
mov
in
es
mov
push
lcall
mov
shl
push
iret
xor
jo
mov
or
ljmp
jecxz
push
and
lds
mov
cmpb
xchg
add
mov
xor
ficoml
fistl
pop
cli
out
outsb
add
mov
lahf
shlb
leave
mov
mov
mov
push
fcomps
fwait
cmc
movsb
sbb
adc
cmpb
repnz
in
sbb
xor
aas
dec
outsl
leave
mov
int
ds
fmull
or
push
inc
int3
cmp
sub
lds
xor
mov
mov
out
mov
push
jecxz
mov
xor
add
jmp
mov
jge
int
loopne
repz
enter
inc
cmpb
sbb
pop
das
dec
cmpsl
sahf
xlat
mov
cltd
mov
leave
leave
push
imul
pusha
mov
das
call
lret
pop
inc
dec
adc
popf
add
out
gs
mov
jns
clc
movsl
inc
xor
push
scas
adc
xchg
push
fnstsw
les
or
push
push
int3
push
fdivs
pusha
fsts
les
or
push
add
push
imul
out
aam
xchg
mov
imulb
in
xor
xchg
loop
mov
mov
bound
or
adc
dec
call
lea
dec
xchg
or
push
int
jle
addb
daa
outsl
xor
or
lret
es
add
mov
pcmpeqb
push
into
push
fdivs
orl
popf
mov
jno
mov
orb
test
mov
mov
outsb
push
adc
insl
test
lods
cs
les
pop
add
inc
fbld
pop
mov
ljmp
hlt
sbb
xchg
dec
mov
mov
sarl
ds
idiv
inc
jmp
fisttpll
lret
push
sub
pop
popa
mov
push
stos
or
pop
mov
je
mov
mov
sbb
add
test
dec
hlt
repnz
fimuls
test
dec
adc
push
imul
ljmp
mov
sbb
sub
xor
cli
mov
fists
dec
jo
dec
xchg
cs
loopne
cmpsb
sub
rcll
test
xor
data16
xchg
ficomps
and
addr16
sarl
xor
movsb
pop
sub
cmpsb
aaa
mov
push
and
xchg
adc
adc
mov
cmpsb
inc
add
cmp
clc
call
jnp
mov
outsb
je
arpl
fldt
pushf
jo
leave
dec
push
jns
mov
ja
add
fadds
dec
mov
cmpsb
and
adc
dec
and
add
fstpt
movsl
cltd
rolb
push
aas
xor
scas
mov
inc
jns
sbb
xor
cmpsb
lds
adc
aas
sub
decl
mov
je
icebp
orl
pop
movsb
adc
cmp
das
rol
clc
adc
mov
loope
addl
xor
ja
adc
arpl
mov
out
ret
add
sub
out
pop
adc
mov
pop
dec
sub
pusha
add
push
adc
cmp
cmp
into
aas
mov
adc
iret
lahf
mov
int
push
fdivrs
cmp
xchg
leave
daa
andnps
int3
mov
inc
xor
insl
outsl
gs
sub
push
xchg
push
dec
inc
in
adc
not
jmp
mov
pop
popf
int
in
xchg
js
rorl
adc
rolb
jge
jno
lret
pop
xor
aaa
mov
push
nop
mov
jge
mov
pop
push
dec
pop
adcl
lahf
jbe
xor
cmp
mov
outsb
jno
addl
jmp
shlb
xchg
js
push
cld
pusha
xchg
and
mov
insl
push
xor
popf
sbb
icebp
leave
mov
movsb
push
out
fcoml
jno
xchg
movsl
scas
mov
push
loop
inc
fs
in
lods
incb
stos
pusha
int3
gs
lret
ret
iret
mov
dec
xchg
mov
flds
subl
xchg
jg
pop
cli
sbbl
inc
add
scas
ret
and
inc
sub
es
iret
xchg
lods
xor
jo
mov
lret
lret
mov
imul
in
jge
jno
mov
adcl
cmc
jmp
push
ret
cmp
in
bound
jbe
lods
out
dec
dec
pmaxub
out
xchg
push
testl
mov
fmuls
add
cmp
shll
cs
notb
jg
add
ret
and
jno
inc
add
cmp
or
xchg
pop
sbb
arpl
mov
mov
hlt
in
rorl
mov
push
mov
inc
mov
loop
and
jecxz
cmp
cmpsb
push
push
mov
mov
cmp
pop
icebp
mov
mov
std
mov
scas
pop
in
leave
mov
lock
es
sub
movsb
push
testb
popa
lods
dec
arpl
add
jno
and
rcrb
pop
or
test
mov
xchg
int
movsl
push
cs
enter
xchg
jae
dec
fnstsw
mov
inc
sti
faddl
pushf
leave
dec
sbbl
push
sbbl
cmc
int3
dec
and
cwtl
mov
fs
xor
push
clc
test
leave
mov
mov
mov
addb
mov
fs
inc
rorb
cmc
mov
ljmp
fcomp
jo
out
dec
js
mov
xchg
jp
adc
stc
movsb
or
loope
les
mov
jmp
cltd
movsl
xchg
sub
jge
jecxz
int3
jns
xchg
hlt
rorb
add
imul
add
mov
dec
int
ret
jnp
clc
popa
rcrb
sbb
add
pop
in
stc
push
jge
pushf
divb
jge
test
pop
hlt
fwait
test
int
sub
and
xchg
test
test
pop
sbb
sar
subl
xchg
fimull
add
loope
fisubrs
fstl
pushf
xchg
jle
out
push
and
cmp
sub
push
mov
push
jo
mov
jecxz
jecxz
xchg
pop
add
and
sahf
mov
xchg
dec
insl
mov
clc
nop
mov
pop
xchg
xlat
negb
and
pop
sbb
xor
aad
ret
add
push
mov
mov
nop
push
sub
push
push
jno
cmp
lds
add
fimuls
dec
or
and
jne
jle
lds
rcr
and
sub
ret
jl
mov
sub
adc
ljmp
mulb
shl
idiv
rcll
add
inc
mov
lock
rcrl
sbb
or
cmp
dec
enter
pop
push
aas
jo
nop
dec
push
push
icebp
inc
push
cltd
sub
sbb
jmp
roll
mov
mov
and
sub
repz
jmp
cmp
notl
push
xchg
xlat
rcr
pshufw
fs
dec
inc
daa
cmpsl
dec
call
mov
xor
push
sbb
data16
std
push
loopne
push
adc
mov
adc
pop
adc
xchg
mov
or
test
test
and
xor
adc
repz
sbb
dec
pusha
sub
jge
adc
cmp
dec
jnp
shll
addr16
icebp
inc
mov
xchg
adc
xchg
call
dec
pushf
sarl
rclb
push
jbe
mov
xor
mov
fsubl
sub
xchg
jge
jbe
fwait
jb
fildl
imul
js
sbb
mov
xor
ljmp
pop
ret
jp
push
imul
test
jne
dec
pusha
adc
shr
fadds
test
mov
outsb
insb
sbb
jge
mov
imul
inc
out
cmpsb
mov
mov
cmp
dec
add
mov
icebp
lods
sahf
iret
or
push
mov
dec
stos
daa
mov
call
or
or
push
ret
xchg
jge
fisubs
add
sar
js
mov
jge
imul
cmpsb
jo
add
repz
jle
pop
stos
rcr
orl
in
xchg
or
xorl
inc
mov
arpl
dec
sti
ljmp
dec
lods
sub
xchg
sub
ds
int3
jnp
das
cli
mov
and
or
lret
std
add
sbb
stos
mov
rcr
lahf
out
scas
pop
lds
cmp
jmp
mov
xchg
cmc
into
sbb
mov
test
shlb
mov
outsb
and
cmp
ljmp
aas
inc
cmp
sub
in
stc
loope
jmp
pop
cmpsl
popa
pushf
popf
jns
inc
lret
cwtl
dec
movsb
subl
ljmp
jge
xchg
cmpsb
mov
sbb
iret
fmull
adcl
jg
in
in
sub
add
inc
or
fistps
cs
fwait
outsl
fdivs
xchg
pop
incb
pop
gs
mov
push
add
add
gs
fwait
xor
inc
push
aam
pop
aas
imul
arpl
mov
popa
lods
add
jbe
movsl
rol
pop
or
dec
or
sub
jle
sub
xor
jno
nop
mov
loope
cmpsb
rolb
orl
xor
mov
xchg
mov
or
into
mov
sbb
aad
inc
push
into
scas
repz
sbbb
std
cmp
mov
mov
mov
jl
cmc
cmp
das
rolb
movsb
push
ja
adc
push
decl
dec
jne
ficompl
loopne
mov
adc
mov
adc
mov
repnz
ljmp
or
jg
mov
loope
add
jae
sbb
and
movsl
sub
orb
iret
inc
push
jmp
outsl
popa
shll
fildl
sahf
int
movsb
in
add
je
dec
popf
out
inc
popa
sbb
inc
fstl
xor
and
cli
jns
loop
sub
cmp
mov
push
dec
inc
mov
dec
inc
xchg
addr16
mov
ja
mov
dec
jge
xchg
insl
shll
pop
pop
stc
mov
out
cmp
and
cmp
push
or
arpl
jno
mov
pop
xchg
loopne
mov
test
sub
pop
loope
cmc
addr16
inc
pushl
mov
in
clc
popa
cli
out
jno
daa
sub
fidivrl
inc
in
jnp
pop
jp
push
sbb
mov
mov
lods
sbb
mov
jne
jmp
les
fcoms
js
jge
mov
or
xchg
lret
and
mov
cmpsb
cmp
xor
pop
lea
push
cltd
inc
outsb
lods
jle
test
mov
add
xchg
or
inc
mov
push
fistpl
arpl
or
imul
aas
pop
pop
imul
repnz
inc
out
xor
imul
push
lret
xor
shlb
out
loope
stos
shr
jbe
out
leave
mov
lock
mov
in
ljmp
add
outsl
sar
sbb
and
xor
sub
loopne
xchg
dec
adcb
or
pop
mov
xchg
aaa
add
imul
pop
scas
rolb
cld
xor
jecxz
xchg
aad
out
inc
add
cmp
and
in
mov
inc
lods
jne
xchg
sti
xchg
outsl
into
push
loop
cmc
mov
or
mov
test
dec
jle
sub
out
int
dec
push
push
out
jo
loopne
nop
lret
jle
push
fwait
adcb
mov
das
pushf
xchg
movsl
lods
pop
addb
and
mov
jae
cmp
mov
sub
and
dec
xchg
jge
jmp
pop
pushf
ret
mov
and
inc
rcll
or
fistpl
xchg
adc
jg
neg
imul
push
into
pop
lret
test
in
cmpsb
fucomi
push
cmp
and
ficompl
sbb
push
fcomp
mov
stos
gs
movsl
push
and
adc
cs
push
mov
xor
pop
add
push
cmp
adc
add
je
jp
xor
mov
out
add
xchg
mov
pop
pop
jecxz
movsl
xchg
out
out
outsb
mov
pop
test
frstor
jmp
cmpsb
mov
lret
mov
lret
mov
push
outsb
and
ds
into
out
movsl
sahf
mov
test
jne
inc
jle
outsb
and
ds
into
out
movsl
sahf
mov
test
jne
inc
jle
outsb
and
ds
into
ljmp
xchg
stos
gs
jne
inc
jp
outsb
and
ds
outsl
aad
rclb
cmp
rcll
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
and
push
daa
inc
in
adc
add
xchg
xor
mov
dec
out
out
pop
je
fs
daa
inc
push
xor
and
adc
sub
fsubl
movsb
notl
mov
push
add
insb
ja
addr16
hlt
xchg
mov
mov
out
ret
mov
xor
and
fdivrl
fisttpll
lds
jg
sbb
insb
push
test
imul
mov
push
and
std
jmp
sti
loop
js
out
sub
xchg
sub
pop
leave
xchg
sbb
cmp
push
fmul
in
pop
xchg
cmc
xlat
hlt
loope
pop
cmp
pop
pop
je
mov
fs
push
lret
inc
push
and
xchg
aam
mov
sub
aaa
mov
in
clc
ljmp
mov
ja
addr16
call
repnz
xor
xor
fisubrs
or
mov
fwait
mov
jnp
xlat
mov
mov
add
scas
mov
js
out
dec
clc
pop
inc
aaa
and
inc
push
xor
and
adc
xchg
xchg
hlt
xchg
cmpsl
clc
xlat
mov
dec
testl
sub
and
popa
add
mov
xchg
fdivs
cmpsl
mov
loopne
in
dec
xor
daa
outsl
sub
and
jge
aaa
lds
ret
sti
mov
cmpsl
icebp
clc
mull
sub
js
and
adc
add
hlt
xchg
mov
cmpsl
xlat
mov
movsb
notl
fs
push
daa
inc
push
xor
and
adc
add
hlt
xchg
mov
cmpsl
xlat
mov
movsb
notl
xor
push
dec
sub
cmpb
push
push
nop
pop
jmp
or
or
dec
or
ds
loope
popf
cmp
mov
loop
iret
stos
xchg
imul
sti
sub
daa
and
xchg
push
pop
insb
xor
xchg
xchg
jmp
fisttpll
xchg
mov
lcall
ficoms
ret
mov
mov
sahf
jnp
mov
adc
inc
fisubs
stos
cwtl
pop
jnp
es
in
jg
mov
xchg
lods
je
add
inc
int
dec
fsub
push
sbb
sbb
xchg
cmp
lahf
mov
jmp
xor
mov
jg
fistps
lds
mov
dec
mov
add
stos
push
xchg
cmp
and
out
adc
pop
sbb
xchg
or
mov
jne
rcrb
clc
adc
or
insl
movsl
cmpsl
aam
push
xchg
jo
and
enter
out
lret
jmp
and
btc
sub
push
sbb
out
dec
mov
stos
add
shr
jbe
mov
test
loope
cwtl
fwait
outsl
in
sbb
or
jg
mov
sbb
aaa
lcall
adc
push
icebp
je
jne
push
je
aaa
call
sahf
fmull
cmp
imul
out
and
jg
mov
movsl
push
pushf
pop
test
out
add
sahf
ljmp
lcall
dec
inc
lret
lcall
pusha
xor
push
popf
test
or
popf
xchg
mov
add
repnz
xchg
mov
clc
aas
mov
adc
aad
add
inc
xchg
scas
dec
jg
out
push
pop
jge
xchg
sbb
xor
cmp
and
ja
mov
push
mov
aad
cmp
das
shll
pop
dec
mov
xchg
das
jae
jae
pop
and
movsb
in
sub
and
jmp
cmpl
sub
repnz
jae
and
idivb
push
call
in
ss
cmp
jo
inc
sbb
mov
arpl
or
mov
hlt
sub
shrl
imul
adc
aam
pop
ds
dec
add
fdivs
iret
lds
or
jle
jae
stos
jmp
jb
adc
stos
js
sub
adc
xchg
sbb
fisubl
stc
dec
inc
cmpsb
jno
cmpl
jnp
cltd
jno
inc
cwtl
addl
pusha
mov
out
rcll
push
inc
pop
lret
dec
outsl
push
sub
and
sbb
inc
xor
fcoml
nop
xchg
scas
ss
mov
mov
push
jns
fadds
je
ret
imul
shr
rclb
adc
les
push
leave
inc
xchg
call
jl
sub
dec
aas
movsl
hlt
fistpl
cmpsb
cmp
cmpsb
loop
xchg
repz
testl
push
xchg
fildll
sti
xchg
mov
popa
cmp
daa
sbb
imulw
ljmp
cs
inc
pop
iret
aad
scas
pop
jecxz
add
mov
sbb
decb
or
jmp
xchg
xchg
dec
adc
push
sbb
cmp
outsl
xchg
das
jns
jmp
pusha
gs
cmpsb
and
and
fwait
stc
into
adc
adcl
insl
mov
push
and
add
into
lods
pop
sub
pusha
shrl
mov
mov
mov
test
jmp
stos
mov
aaa
or
cld
pop
scas
test
test
bound
adc
jecxz
rol
pop
jle
dec
bnd
fs
leave
ficompl
fmull
loope
arpl
loopne
lods
out
out
out
sub
ss
rcrb
mov
mov
jne
cs
xor
jg
and
cmp
pop
mov
jbe
fidivs
mov
movsb
xor
scas
mov
sub
inc
loopne
and
stos
out
pop
test
mov
xchg
pop
imul
and
pushf
rorl
jl
xchg
stos
xchg
push
xchg
lahf
fstl
rorl
cmp
jl
shrl
pop
roll
push
inc
pop
pop
inc
sub
dec
or
pusha
decl
add
sub
dec
pop
aam
sub
jns
sbb
adc
and
ja
adcb
sbb
adc
xchg
sbb
test
lret
mov
and
into
repnz
adc
jl
dec
sbb
mov
sbb
fistpll
cmp
and
pushf
scas
sbb
lea
fs
jne
ret
arpl
xchg
adc
loopne
mov
xchg
jb
pop
jbe
sbbl
test
ss
pop
repz
sbbb
mov
or
xor
mov
dec
out
scas
xor
dec
sub
adc
bound
push
rcl
push
dec
push
sbb
and
test
and
inc
xorb
movsb
lcall
movsb
mov
imul
push
inc
sbb
aas
mov
inc
sub
shll
jle
rol
inc
cmp
cmp
push
sub
daa
sub
in
mov
leave
dec
rorl
andl
aam
rcrl
push
push
iret
mov
mov
mov
js
out
jbe
jecxz
aas
mov
dec
jns
sahf
aam
inc
mov
mov
enter
push
push
xor
add
leave
rsm
inc
jo
mov
pusha
or
push
mov
xchg
ficompl
daa
clc
ret
out
jnp
out
aam
stos
in
push
or
lds
xchg
inc
out
pmaddwd
into
mov
lds
in
ret
subl
in
mov
stc
lock
xor
jmp
mov
popa
mov
sub
and
sarl
je
cmpsl
pop
out
inc
in
dec
xchg
cmpsl
ja
mov
test
add
xor
je
jns
adc
andl
imul
nop
frstor
xor
dec
cld
stc
repz
push
pop
inc
push
outsl
mov
sbb
pushw
mov
pushf
outsb
xchg
icebp
mov
aam
pop
add
pushf
arpl
mov
leave
cli
std
cmc
xor
js
and
fisubl
jbe
test
sub
xor
push
aaa
filds
nop
ds
sub
pop
mov
out
jecxz
stos
push
int3
out
mov
mov
inc
or
mov
fdiv
pop
xchg
pop
lahf
daa
xchg
sub
imul
sub
pop
stos
xchg
push
rolb
test
sbb
mov
push
test
inc
sbb
mov
cmp
lcall
in
fdivrs
les
rcrb
ret
push
jnp
dec
pop
movsb
leave
xchg
je
or
push
fmull
mov
sbb
fisttps
fiadds
jg
jbe
push
push
addb
stos
sbb
xchg
xchg
add
dec
shll
lods
test
sbb
fwait
pushf
cmp
scas
lock
sub
sbbb
push
pop
cmp
xlat
int3
mov
mov
into
stc
dec
jl
or
xor
scas
adc
sbb
lds
mov
jb
test
xchg
and
iret
iret
cmp
cmp
aaa
push
xor
pop
nop
sbb
jo
mov
aas
add
cwtl
int3
and
inc
fdivl
fbld
cld
jp
testl
addr16
fiadds
int
cli
jne
cmp
repnz
and
pop
inc
jg
stos
fnstcw
cmpsb
pop
rcr
fmulp
add
arpl
sub
shl
call
push
or
fcoml
movsl
movsl
and
sbb
push
pop
inc
adc
pop
arpl
dec
js
std
add
push
sbb
jp
xchg
push
mov
lcall
pop
ss
xchg
fdivrl
clc
xor
xor
inc
in
fcmovbe
sub
nop
js
in
out
insl
push
icebp
or
inc
add
shrb
enter
xchg
cmp
lret
fstpt
outsb
xchg
cwtl
xor
enter
insb
mov
mov
or
xor
inc
rcl
pop
xchg
mov
popf
mov
push
dec
test
xchg
fmul
add
icebp
arpl
fs
jae
popf
insb
dec
and
xor
sub
cmp
adc
adc
dec
jle
xchg
xchg
cmpb
push
popf
cmp
cltd
dec
mov
xor
pop
add
scas
or
add
insb
cmp
orl
push
pop
popa
cmp
sub
xor
ds
mov
aad
std
inc
xchg
adc
xor
xor
jo
lock
mov
out
cmp
cwtl
xchg
out
outsb
inc
push
inc
xchg
lret
rcrl
je
cld
aas
arpl
mov
cmp
pushf
rcrl
jg
and
aam
js
in
mov
ret
and
in
nop
shlb
add
ja
stos
stos
ds
repnz
lret
jge
dec
dec
leave
inc
push
loopne
test
pop
cmp
insl
scas
shl
sub
data16
push
add
inc
stos
cwtl
mov
add
xor
mov
adc
jge
dec
push
push
mov
sbb
jb
mov
out
mov
push
jge
es
xor
movsl
xchg
lods
xchg
jecxz
or
mov
adc
pop
jo
push
push
cld
xchg
cmp
out
jl
aam
jg
arpl
and
add
pop
sbb
out
pop
out
mov
jne
or
push
test
ds
test
sbb
jl
mov
movsb
fadd
xor
test
inc
rorb
mov
or
repnz
inc
or
mov
jmp
outsb
pop
xor
subb
clc
jb
out
out
fsubrp
sbb
out
rol
stos
mov
sub
negb
xor
sarb
dec
lds
or
ljmp
mov
or
mov
pop
push
lds
mov
lock
pop
inc
jecxz
testb
fwait
andl
sbb
mov
push
jns
stos
push
ret
incb
add
push
adc
xchg
arpl
jmp
testl
adc
pop
push
aas
xor
into
mov
js
push
cmp
ud1
adc
and
or
fistps
and
dec
rcl
mov
sbb
aas
jnp
add
jno
xor
in
flds
nop
sub
or
xor
std
aaa
push
daa
cmp
movsl
je
sbb
lods
push
jnp
xlat
shlb
lock
mov
fsts
mov
adc
out
cmp
pop
jmp
and
movsb
test
fwait
sub
inc
repz
mov
jmp
leave
xor
jno
mov
lods
rcrl
into
scas
pusha
cmpb
sub
jns
into
and
xlat
pushf
pop
jp
xorb
mov
stc
pop
mov
ljmp
add
mov
xchg
pop
dec
jp
lcall
cmc
or
mov
cmp
cmc
aam
std
movsb
jo
iret
test
xchg
inc
scas
test
lret
xorl
sbb
rcrl
out
or
insl
aas
add
dec
xor
push
adc
jmp
jbe
mov
dec
and
xchg
xorl
pop
outsl
insl
adc
xor
push
jo
jp
lock
arpl
push
subl
es
movsl
loop
inc
and
sub
pop
lret
sbb
pop
cmp
sbb
icebp
clc
stc
icebp
cmpb
jge
mov
cmp
fstps
sbb
inc
xchg
cs
or
testb
cld
sub
jmp
dec
ljmp
pop
jo
or
out
in
jecxz
shlb
outsb
xchg
xchg
rorb
shrb
sub
cmp
lods
push
or
push
xchg
jl
cmpsl
push
inc
mov
xor
enter
ret
aaa
js
icebp
fcoml
ds
pop
repz
jne
lcall
in
cmp
scas
in
fsubs
data16
cmpsb
popa
adc
lahf
push
repnz
mov
pop
and
loop
cs
rcrl
xchg
dec
nop/reserved
dec
or
cmp
dec
roll
adc
mov
lcall
cld
leave
adc
subb
inc
pop
add
out
xor
sub
imul
inc
push
dec
inc
adc
jge
out
jne
xor
or
or
mov
ljmp
mov
shrb
arpl
lds
add
mov
imul
cmp
scas
arpl
push
and
mul
lods
push
push
test
cmp
mov
adc
and
loope
inc
push
and
add
jmp
mov
push
add
in
les
cs
pop
fs
aam
or
mov
negb
pop
xor
imul
push
fs
push
ds
fdivs
lret
inc
sub
aad
lods
fwait
rcll
sti
cmp
je
test
pop
bound
inc
xchg
adc
push
in
push
insl
clc
or
outsb
dec
push
push
mov
jecxz
jne
sbb
es
mov
push
std
or
adc
scas
xor
jb
sbbb
pop
and
movsl
test
nop
sbb
jb
sbb
pop
adc
adc
xlat
scas
test
and
movsl
mov
jne
and
adc
adc
sbb
repnz
imul
test
dec
lods
sbb
lods
push
pop
push
xor
cmp
icebp
iret
add
sub
push
jae
sub
popf
jl
pop
arpl
sbb
jo
shrb
jp
adc
shrl
lods
jmp
ret
sub
sub
loop
sub
sub
xchg
das
out
adc
push
mov
std
push
aad
mov
leave
adc
and
jo
cwtl
aad
mov
inc
orl
pop
cmp
xchg
notb
in
pop
mov
mov
sub
jno
movsl
push
adc
adc
pop
pop
pushw
repz
aaa
cmpsb
hlt
cmp
xchg
clc
mov
xchg
or
sbb
cmp
rcrl
sbb
mov
jne
push
repz
push
cmp
dec
outsl
shr
out
jg
pop
mov
or
adc
adc
lret
jne
popf
sub
rorl
in
aas
rorl
push
pop
icebp
push
int
xor
fistpl
movq
test
sub
aad
mov
sub
adc
xor
out
pop
pop
inc
sbb
add
dec
outsb
mov
jne
sub
mov
lahf
lea
add
cmpsb
stos
cwtl
inc
in
and
lcall
nop
sub
push
dec
xor
jecxz
mov
pop
ss
inc
insl
inc
xchg
stc
or
pop
int
or
aas
push
iret
sub
jb
insb
mov
or
xor
test
cli
arpl
jno
add
hlt
sbb
xchg
and
sub
call
popf
pop
jns
and
mov
jmp
repnz
repz
aas
sub
mov
jae
dec
mov
leave
push
mov
mov
jnp
sahf
mov
pop
push
push
jle
cmp
inc
or
dec
pushf
aam
stc
jmp
leave
adc
sub
add
les
xchg
cmpsb
dec
cltd
mov
arpl
xor
mov
cs
push
jb
xchg
shl
cmpsl
clc
insb
mov
inc
jecxz
dec
mov
sbb
subb
loopne
scas
mov
movsb
xor
mov
pop
xor
adc
sub
fdiv
push
mov
xor
mov
cmp
sbb
imul
test
jp
sbb
push
sub
pop
xchg
mov
mov
arpl
jne
push
scas
xor
push
in
jno
mov
mov
pop
jp
sbb
jno
movsb
xor
arpl
jmp
imul
lcall
test
jb
test
out
add
mov
adc
data16
jl
dec
cltd
mov
fisubrl
scas
xchg
fdiv
push
or
dec
mov
push
sub
adc
pop
sub
pop
xor
hlt
jp
jmp
push
pop
in
int
jle
fadd
mov
xlat
bound
aas
xchg
inc
or
pushf
icebp
pop
pop
jge
out
adc
loope
or
push
adc
and
divb
xchg
adc
cmp
pop
dec
insb
or
dec
pop
xchg
adc
sub
sub
mov
pop
je
orl
fldt
inc
insb
jcxz
lods
xor
and
sti
add
jp
stos
add
pop
test
pushf
out
ja
es
add
push
mov
mov
push
jne
sub
mov
sbb
js
out
sbb
test
int
pop
mov
aaa
fsub
mov
call
decb
jmp
dec
mov
popa
inc
cld
sar
leave
mov
fists
push
cld
cmp
dec
pop
pop
loop
imul
sbb
les
mov
test
loop
xchg
pop
mov
push
and
addr16
fs
movsl
in
mov
push
popa
or
das
mov
idiv
cbtw
shr
add
pop
pop
or
stc
daa
arpl
js
or
dec
or
not
mov
inc
insl
fistpl
pop
xchg
mov
xorb
fwait
inc
inc
fs
std
dec
notl
aam
daa
and
mov
and
adc
sbb
xlat
jne
les
stos
inc
inc
mov
sub
adc
ret
daa
lea
imul
lods
xchg
dec
add
jns
dec
int
xor
mov
insl
cmc
fbld
mov
mov
adc
out
mov
in
or
cmp
fstpl
ss
xor
mov
call
push
jge
insl
xchg
xchg
pop
cmp
mov
clc
add
pop
cmp
lret
bound
jg
push
lds
cwtl
shlb
jl
shll
fsubrl
push
xchg
cmp
loop
in
mov
sub
push
xor
test
add
dec
lret
xchg
mov
push
or
lret
lods
jp
sub
mov
jmp
jmp
jle
inc
loopne
inc
inc
ret
ds
aas
lods
test
loope
sub
cs
mov
out
xor
rcrl
repnz
jl
cmp
mov
nop
data16
ja
mulb
dec
test
sub
mulb
lock
daa
mov
aas
xchg
popa
push
clc
mov
push
mov
mov
lock
fs
xor
gs
cmp
icebp
sbb
cli
xor
mov
cmp
ds
int
sbb
xchg
cmc
inc
loope
sub
adc
pop
sub
mov
icebp
adc
stos
dec
and
rorl
sub
cltd
and
jnp
shll
int3
dec
dec
idiv
ja
add
ja
mov
mov
pop
aaa
add
cmp
cltd
int
cmp
dec
aam
call
mov
clc
inc
repnz
out
fldl
popf
mov
sti
out
stos
cwtl
stc
fists
ja
mov
or
sub
subl
aas
mov
js
cmp
mov
ljmp
fists
jno
pop
shlb
xchg
push
xor
cwtl
divb
adc
cmpsb
xor
mov
jne
cmpsb
push
cmp
or
shll
mov
sbb
test
iret
lds
xchg
xchg
shlb
jnp
mov
je
mov
cmpsl
cmp
inc
mov
push
aas
loop
xor
cmp
and
jle
push
add
cmp
sub
adc
movsb
scas
sahf
or
mov
movsb
add
insl
sub
cmc
sbb
loop
jle
sahf
sti
sbb
pop
add
mov
lea
pop
mov
daa
das
push
scas
push
pop
sbb
sub
testb
adc
aam
sbbb
subb
mov
stos
sub
es
int3
in
xor
scas
push
and
cmp
ss
pushl
ja
cmp
xchg
fdivr
xor
fsubrs
add
clc
cld
leave
add
xor
push
sarl
add
insb
dec
jecxz
ds
and
dec
mov
pushl
insb
and
mov
test
call
sub
sub
jg
dec
xchg
iret
xchg
mov
into
je
dec
repnz
pushf
xor
xor
daa
fsubrl
lcall
rcr
jge
mov
and
push
push
push
xor
xchg
jae
les
imul
xorl
lods
mov
mov
fs
push
daa
inc
push
xor
and
adc
add
hlt
xchg
mov
cmpsl
xlat
mov
movsb
notl
fs
push
daa
inc
push
xor
and
adc
add
hlt
xchg
mov
cmpsl
xlat
mov
movsb
notl
push
dec
daa
inc
push
xor
dec
ja
addr16
cmc
xchg
mov
cmpsl
int
mov
movsb
negl
push
xorb
daa
add
xor
and
xchg
les
dec
sbb
int3
dec
fmull
in
sbb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lds
mov
idiv
xchg
or
adc
inc
cmp
xor
lds
xchg
int
fnsave
or
cmpsl
cmp
xor
fcompl
mov
pushf
or
adc
or
inc
or
rol
mov
ja
xor
mov
jbe
stc
sub
lea
cmc
cmc
xor
jp
inc
gs
ja
sbb
push
push
test
pop
popf
lds
jg
jp
addb
or
lcall
loopne
mov
add
mov
int3
nop
fstpl
movsl
sbb
jne
cmp
jne
int3
jge
dec
cmp
push
xchg
mov
inc
inc
xor
repnz
cmp
mov
aam
mov
orb
push
mov
or
fs
adc
adcb
repnz
mov
mov
sbb
or
insl
cmp
cmpsb
lea
cld
icebp
mov
test
and
add
jle
dec
jns
popa
sbb
inc
sbb
loope
icebp
nop
in
fsubp
mov
cwtl
fnstcw
inc
outsl
xor
outsl
jo
jbe
inc
or
into
nop
enter
incl
std
push
or
gs
xor
lds
xchg
int
fnsave
or
gs
xor
lea
mov
ret
mov
mov
add
cs
cmp
mov
dec
add
shl
xor
add
roll
ljmp
xor
jl
jp
out
in
out
aad
sub
repz
sub
sti
push
push
mov
xchg
mov
fistl
test
xchg
jle
dec
pop
fstps
lds
leave
jnp
pop
sbbl
xor
cmp
movsl
mov
push
xor
dec
mov
pop
cltd
sbb
xchg
inc
in
cs
ja
js
aaa
loope
insl
xchg
fldcw
xchg
push
pop
inc
inc
lahf
mov
mov
idiv
pop
imul
std
or
lret
imul
mov
mov
mov
jmp
xor
pop
in
lret
scas
out
push
bound
pop
daa
int3
cwtl
sbbl
sar
add
and
out
xor
mov
add
xchg
mov
pop
add
or
cmc
fcomi
xor
ret
jbe
xchg
mov
fcoms
or
xchg
add
mull
pop
xchg
sti
test
mov
xlat
es
test
jbe
out
sahf
dec
add
insl
call
xchg
mov
pushf
mov
cmp
dec
mov
hlt
push
inc
push
pop
addl
fcmovb
sti
out
jge
add
adc
lret
repz
mov
stos
leave
mov
xchg
mov
shrl
xlat
mov
rorl
mov
sbb
pop
and
and
mov
aad
ds
add
in
bound
fistpll
fildll
xlat
ds
jbe,pn
mov
fwait
aam
clc
add
and
inc
ret
push
das
aad
jge
mov
ss
dec
inc
adc
jne
push
push
outsb
adc
popa
fistl
and
sbb
pop
sbb
stos
fadds
mov
jno
repnz
sub
mov
ljmp
ret
nop
outsb
test
mov
or
les
jl
mov
lahf
sbb
jmp
jg
js
in
rcrb
stc
enter
stos
xchg
push
jge
leave
cli
pop
mov
adc
pop
adc
outsl
mov
insb
jae
loopne
aas
inc
pushf
repnz
lret
adc
inc
sub
mov
cmp
push
adc
popf
jmp
push
testb
xchg
inc
loop
xor
mov
add
xchg
mov
push
daa
int3
sarl
les
or
jmp
jns
pop
dec
cltd
xchg
push
insb
add
adcb
fstps
cmp
inc
popa
outsl
scas
dec
push
sub
xchg
mov
push
das
pop
adcl
int3
jecxz
dec
push
mov
mov
int3
stos
jno
dec
je
mov
inc
lcall
lods
aaa
ret
divb
push
pop
jp
mov
inc
cmp
or
fbstp
repz
or
int3
aad
aas
rcl
adc
sub
cwtl
jo
loope
repz
popf
or
and
jns
dec
movsl
pop
aad
es
sbb
mov
aam
push
mov
ljmp
xor
or
lcall
push
ss
subb
xchg
sbb
add
or
dec
cs
mov
mov
fmull
adc
int3
fdivl
jecxz
or
cmp
repnz
dec
es
cmp
jne
mov
lods
ja
pop
jle
and
mov
dec
fimuls
sub
jae
fdivr
mov
xchg
jns
movsl
cmp
out
xchg
std
jge
fs
mov
mov
push
mov
in
rcrl
xchg
loop
jecxz
cmp
inc
jecxz
mov
call
arpl
clc
popf
pop
clc
cltd
daa
add
popa
loop
xor
rcll
dec
or
pushf
inc
sbb
xor
scas
repz
mov
inc
adc
fldt
add
jl
or
lahf
mov
insl
stos
int3
sbb
or
xlat
adc
or
daa
sub
cmp
mov
clc
lods
lcall
xlat
in
add
lock
pop
int3
scas
insb
das
test
pushf
rorb
cltd
out
sbb
xchg
dec
inc
ss
idivl
fs
inc
mov
cs
jo
rcrl
and
ds
sub
xorb
mov
cmpsb
mov
add
xor
pushl
sahf
sbb
cmpsb
mov
pop
dec
leave
xlat
out
enter
xchg
jmp
mov
outsb
xchg
add
ret
cmp
or
add
test
mov
imul
pop
pop
mov
jnp
imul
mov
mov
or
pop
sbb
sbb
add
loopne
dec
fxch
jmp
xchg
sahf
subl
loope
push
dec
jo
inc
and
das
xor
aas
xor
les
xor
lret
mov
mov
sbb
test
imul
lret
cmp
into
inc
or
mov
and
jg
add
inc
mov
pop
push
stc
lock
add
test
xor
scas
and
push
movsb
pusha
dec
sahf
mov
mov
sbb
mov
mov
jo
and
pop
mov
scas
mov
mov
add
insb
ret
mov
lret
jecxz
arpl
sub
inc
sbbb
popa
test
sahf
mov
jmp
or
cmpsb
test
xor
outsl
pop
pop
mull
add
aad
ljmp
or
mov
jno
adc
or
test
enter
inc
pop
mov
mov
pop
lods
jae
or
dec
repnz
mov
and
leave
mov
or
popa
popf
or
dec
xlat
cmp
xchg
push
add
mov
jp
arpl
mov
addr16
mov
les
inc
fs
xchg
xchg
sbb
or
push
aam
jns
mov
cmc
adc
mov
pushf
sub
hlt
add
sub
test
ret
adc
cmp
sub
push
push
out
adc
arpl
hlt
cmp
mov
mov
data16
mov
fwait
cmp
mov
and
cmp
aas
sub
xchg
dec
cmpsb
lcall
cmpl
fwait
addb
aas
and
sbb
nop
rcll
cmp
or
add
mov
ds
loope
sbb
add
xchg
pop
pop
arpl
mov
xor
cs
cmpsl
mov
mov
stc
mov
pushf
and
cltd
lock
adc
out
xchg
inc
push
inc
mov
xchg
shll
cmp
inc
inc
ja
xor
sbb
sarl
roll
cwtl
sbb
push
or
stc
inc
jmp
test
daa
mov
add
rorl
imul
fnsave
push
mov
jno
mov
jl
fxch
push
jo
rorl
adc
loopne
cs
ss
cmp
pop
adc
push
xor
aaa
lret
add
dec
fsubrl
scas
int
insl
std
movsl
xchg
xchg
bound
dec
mov
popa
pop
clc
notl
sub
cli
cwtl
mov
jns
jns
popa
data16
mov
imull
popa
xor
dec
pop
fs
pop
add
jle
cmp
jle
imul
ljmp
repnz
mov
sbb
dec
jmp
mov
nop
mov
cmp
mov
ret
push
mov
push
jo
daa
iret
pop
push
inc
mov
test
fldcw
inc
fimuls
jbe
je
mov
and
inc
nop
test
out
sub
sbb
addr16
sahf
jmp
push
fisubrs
roll
andl
push
mov
xchg
push
enter
test
or
outsl
pop
jge
adc
sarl
mov
jo
cmpsl
sub
mov
fcoms
pop
fmul
cld
push
ret
inc
scas
push
mov
add
mov
clc
aad
fmul
ret
shufps
in
sbb
sbb
dec
jge
jbe
xor
adc
jecxz
hlt
jle
jl
cmc
lret
rol
in
jl
out
repnz
je
jg
icebp
and
test
ror
jecxz
in
push
or
or
jne
aam
mov
std
sti
pop
push
popa
movsb
cmc
in
adc
sahf
js
out
popa
fldenv
cmp
movsb
jp
lret
imulb
sbb
add
das
lahf
in
jle
filds
adc
sub
lods
jg
loop
add
pop
ss
inc
mov
andl
sub
lahf
sbb
cmp
pushf
into
sub
in
lds
sbb
outsb
push
xchg
jo
pop
cmp
inc
insb
aas
lods
mov
cmp
jb
push
mov
mov
out
pop
inc
cmc
cli
in
push
cmp
shl
add
jb
inc
test
and
call
daa
pop
psubusw
aad
rol
arpl
addr16
out
iret
fidivs
ja
inc
enter
add
repz
jp
ss
scas
sahf
ret
push
enter
out
adcl
lret
push
xorb
sar
cld
push
cmp
ret
mov
dec
mov
mov
cwtl
rcrb
xchg
add
pop
test
dec
aam
or
sub
inc
jecxz
cmp
xor
add
jne
incl
push
mov
cmp
or
les
shlb
test
sub
rclb
xor
test
push
jp
cmp
lds
js
cwtl
xor
sbb
inc
mov
add
movsl
test
testl
into
inc
mov
movsl
ret
xchg
bound
lods
roll
dec
loopne
test
ss
es
ret
add
ljmp
cwtl
daa
cmpsb
adc
mov
xchg
jno
mov
and
in
cmp
je
mov
add
adc
push
rclw
cmp
pop
or
jno
push
fdivl
rcl
or
stc
test
fstpt
ret
mov
daa
or
cld
sub
xchg
push
fidivrs
in
push
roll
mov
fisttpll
popa
mov
ja
in
js
xor
jo
aam
mov
jl
out
jmp
push
rclb
in
outsb
xor
enter
wrmsr
mov
int3
notb
sbb
add
gs
pop
inc
out
lods
js
or
loope
pushw
sub
xor
push
pushf
dec
stos
lods
dec
mov
repz
and
std
ret
notb
clc
adc
cmp
test
dec
xchg
inc
adc
data16
jo
lahf
scas
pushl
in
jge
mov
jp
jp
js
jge
jne
xchg
outsl
test
add
sbb
mov
jae
rcrl
adc
ret
cmpsb
imul
push
inc
hlt
mov
add
or
add
or
mov
xor
cmp
idivl
xchg
cmp
jle
mov
stos
mov
aam
push
fwait
jl
pop
cmpsl
test
pop
retw
pop
adc
mov
test
ret
xor
mov
or
aas
outsb
jle
addr16
ret
lock
inc
enter
arpl
inc
sahf
mov
imul
test
mov
adc
xor
push
lock
ret
sub
xchg
fwait
test
xor
mov
shrl
push
jne
pop
andb
rcl
ret
aad
xor
aas
call
pop
xor
mov
aad
inc
repnz
add
sahf
aam
scas
pusha
sbb
and
jns
adc
xchg
xchg
xchg
cmp
cmpb
push
loop
fadds
int3
and
jne
addr16
mov
cmp
lock
les
adc
and
sbb
xor
mov
ljmp
mov
mov
cmp
fimuls
sahf
adc
push
jns
insl
shlb
loopne
in
cs
popf
outsl
add
add
mov
lcall
adc
or
mov
inc
cmp
sbb
lret
aam
nop
cmp
mov
fcompl
push
push
dec
pop
sbb
jmp
dec
popf
mov
setl
je
adc
xchg
adc
mov
sub
scas
or
aam
push
cmp
fisttpl
sub
mov
jb
adc
lods
jb
loope
xchg
test
or
arpl
mov
cmp
loopne
pop
fwait
xchg
cs
clc
mov
ret
aas
test
fstps
and
sbb
cmp
jns
in
xlat
sbb
sarb
add
incb
fnsave
dec
sub
mov
jg
lods
lock
call
dec
and
int3
inc
push
or
push
mov
fbstp
das
aam
clc
mulb
push
test
mov
lret
push
dec
ficompl
fsubrl
mov
sub
mov
repz
sub
fs
loopne
adc
inc
lcall
xchg
dec
repnz
out
lcall
add
and
imul
mov
inc
pop
or
mov
jno
fiadds
pop
mov
insl
int
jmp
daa
pop
lret
cmp
or
bound
push
mov
je
cs
pop
cmp
adc
subl
cmp
jmp
inc
push
pop
test
or
arpl
rolb
xchg
call
dec
aam
outsl
push
rol
mov
inc
pop
or
js
js
jmp
test
xor
add
std
jl
dec
ja
inc
inc
insl
popf
push
jmp
xor
add
scas
bound
cmp
mov
dec
fists
or
inc
push
fwait
inc
fildll
mov
sbbb
dec
leave
lcall
lahf
or
xor
push
sbb
pop
inc
fwait
and
adc
enter
imul
adc
jne
xchg
add
pop
ret
inc
outsl
fisubl
iret
testl
fistpl
daa
pop
out
cmp
sub
fnstcw
ret
rcrb
aas
add
enter
mov
jnp
and
mov
pop
push
xchg
sub
les
cmp
cmp
xchg
pop
adc
push
sbb
pop
inc
cmp
mov
inc
or
jno
push
shrl
aaa
and
in
lods
loope
sub
push
push
push
stos
ficoms
subb
jp
mov
sbb
add
lret
add
jbe
ljmp
jg
or
push
adc
pop
inc
push
cmp
sbb
negb
dec
test
jnp
rol
mov
lods
stc
xchg
outsb
push
ss
fsqrt
mov
movsl
cld
fadd
movsb
ss
dec
pop
dec
imul
dec
push
and
sbb
fldt
cmp
insl
sub
xchg
cltd
sbb
sub
movsl
lds
repz
or
out
dec
dec
cmp
xor
or
inc
add
clc
stos
push
jl
cmp
add
cli
mov
xor
or
fsubr
into
sbb
sbb
push
scas
cmc
cs
cmp
or
cmpsl
push
sbb
ss
iret
gs
adc
xchg
jmp
fsubrl
or
push
mov
fisubl
test
call
add
stos
leave
cwtl
adc
xchg
fidivrs
fs
stos
lret
mov
adc
pop
fcompl
aas
shl
cld
imul
fcomp
mov
pop
add
cmp
sub
add
in
cmp
fisttpll
xor
adc
loopne
sbb
mov
lea
jne
pop
leave
xor
mov
mov
ret
pop
sarb
sbb
mov
adc
add
popf
outsb
sub
add
mov
dec
das
xor
mov
xor
out
dec
xor
pop
cmp
cwtl
fildll
cmp
push
jle
cmc
mov
dec
adc
pop
mov
or
jmp
fucomp
js
mov
or
xor
notb
ret
rcll
xor
jp
adc
jge
inc
mov
xchg
jp
cltd
jae
push
shlb
add
mov
lcall
dec
add
xchg
arpl
push
ret
mov
cli
aad
push
mov
add
out
and
cs
shl
mov
xchg
or
cmpsb
sahf
pop
bound
jo
push
jns
repnz
cmp
loop
xchg
cmpb
cmp
mov
pop
clc
cmp
xor
jo
pop
rcrl
pop
xorl
cs
cli
stos
adc
bound
insb
ss
stos
into
push
lret
pop
stc
lahf
ljmp
fmull
js
dec
in
mov
xor
push
pop
jae
xlat
mov
push
int
pop
pop
sbbb
rcll
xor
mov
out
fidivrs
out
adc
adc
lret
mov
rclb
add
test
repnz
inc
in
push
aas
jg
dec
call
addr16
pop
adc
xchg
push
rclb
aas
mov
mov
pusha
ss
sub
mov
iret
fisubl
mov
loopne
sbb
loope
pop
mov
int3
out
cmp
mov
cmp
aam
and
jae
shrb
test
jne
ret
outsl
inc
loope
notl
inc
call
push
mov
mov
xchg
mov
and
push
fs
sbb
shrl
repz
fdivs
inc
leave
loope
sub
popa
sbb
add
lcall
sti
dec
inc
fwait
pop
and
pop
jnp
pand
jo
rcr
adc
std
inc
insl
in
nop
cmp
and
pop
jecxz
fsubrl
int
mov
outsb
jg
xchg
sbb
test
mov
incl
xor
jb
push
adc
pop
or
hlt
popa
jae
sub
jb
lock
jno
xchg
cmp
jl
in
cmp
and
outsl
lods
dec
in
xor
lret
xor
cmc
and
lods
popa
sbb
cmp
lock
xor
push
aas
mov
dec
stos
in
aad
fidivrs
xchg
cmp
stos
mov
nop
repz
pop
dec
cmp
xchg
cmpb
leave
jno
and
cld
ljmp
js
dec
ret
jp
sbb
aam
xchg
cmp
mov
in
mov
icebp
iret
pop
ljmp
sbb
cli
or
mov
cwtl
add
mov
cwtl
fwait
mov
mov
cwtl
push
mov
inc
enter
gs
dec
push
mov
or
pop
add
jne
js
inc
sub
dec
push
cmp
fimuls
insb
insb
int3
mov
cmp
nop
jnp
sub
jno
mov
ja
mov
loope
sbb
shrb
mov
das
add
popa
gs
addb
or
and
sub
aad
insb
stos
ficompl
addr16
insl
in
stc
das
loope
mov
les
sbb
xor
mov
jns
mov
push
sub
mulb
add
shl
xchg
and
jmp
mov
cmp
jge
lahf
mov
mov
xchg
jge
xor
sbb
pop
arpl
bound
mov
nop
pop
fldl
scas
sub
or
bound
sbb
and
not
xlat
xchg
rorl
movsb
add
inc
jno
pop
lahf
xchg
mov
jb
inc
scas
inc
repnz
dec
loopne
jno
dec
scas
inc
fiaddl
call
and
lock
outsb
cmc
sbb
icebp
jle
imul
mov
sub
lock
daa
ja
scas
cmp
faddp
mov
sub
ficoms
pushl
iret
sti
and
xchg
rcl
movsl
mov
and
int3
lcall
fisubl
push
mov
rcrb
jno
fwait
adc
into
xchg
xchg
outsl
inc
adc
xchg
push
popf
pusha
add
iret
scas
shlb
adc
mov
sub
imul
es
cmp
pop
out
iret
div
sub
mov
out
jnp
cwtl
push
mov
popa
daa
sub
rolb
stos
cmp
fldl2t
mov
lods
xchg
mov
sbb
dec
insl
and
add
dec
rcrb
movsl
stos
shrb
push
mov
adc
pop
lcall
mov
in
sub
push
lcall
mov
lahf
or
or
push
and
sbb
scas
and
inc
scas
lret
jg
lret
push
fdivs
mov
xor
aaa
mov
add
les
jg
jo
adc
xchg
mov
gs
cmp
out
mov
nop
sub
jb
stos
push
mov
inc
mov
jle
lea
pop
out
push
add
or
sbbl
and
push
popf
subb
fnsave
or
gs
xor
lds
xchg
int
fnsave
or
gs
xor
lds
xchg
int
fnsave
or
gs
xor
icebp
popf
ret
lods
in
xchg
int
fnsave
or
gs
lds
andb
fs
push
push
inc
xchg
pusha
pop
dec
jne
sbb
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
outsb
fs
push
dec
inc
ds
and
adc
add
lret
cwtl
movsb
scas
les
icebp
rolb
and
pop
shl
popa
call
xchg
scas
mov
jl
pop
cmpsb
dec
out
mov
inc
jmp
or
sbb
test
aam
cmpsl
das
xchg
mov
mov
mov
mov
xlat
test
rcrl
cmpsl
mov
xchg
xchg
test
mov
push
fdivs
push
push
insb
div
repnz
cmp
mov
or
xchg
movsl
aaa
jmp
mov
fdivs
fisttpl
out
out
xor
sub
negl
mov
js
xchg
icebp
xchg
pushf
add
xor
pushl
sbbl
rolb
push
xchg
outsb
fs
push
push
inc
xor
and
adc
add
hlt
out
in
aam
les
xchg
xchg
ret
adc
push
pop
push
gs
jno
je
cwtl
fwait
lea
rcr
cmc
push
cli
loope
xor
daa
adc
aaa
or
jnp
add
mov
mov
adcb
icebp
loope
ljmp
aas
xor
aaa
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
pop
jno
cmpsb
and
dec
icebp
push
xor
in
mov
sub
jecxz
iret
gs
popa
xchg
cmp
pop
clc
push
sub
adc
pusha
mov
out
hlt
repz
outsl
push
in
mov
jo
mov
push
xchg
pusha
iret
jmp
adc
jge
push
add
or
sub
repnz
es
test
int3
or
cmpsl
outsb
stc
sbb
dec
out
mov
out
sub
or
mov
and
inc
arpl
push
push
data16
rcll
cmp
push
mov
cmpsl
les
sub
mov
int
stos
dec
or
push
xor
mov
test
les
jo
mov
pop
fstpl
sub
adc
fcoms
jb
mov
stc
add
in
sar
mov
cwtl
jne
bound
push
inc
inc
loopne
lds
dec
adc
rcrb
inc
popf
sahf
cwtl
pop
decb
insb
pop
pop
push
fldenv
imul
xorl
arpl
xchg
enter
dec
push
xchg
sbb
ljmp
cmpsb
aad
in
out
sbb
js
push
sub
mov
fistpl
or
repz
outsl
pop
jmp
pusha
shl
icebp
jns
into
cwtl
mov
add
dec
andl
leave
aam
ds
push
mov
popf
mov
xor
sub
inc
scas
jp
cs
jnp
add
lds
mov
insb
enter
adc
push
scas
cmpsl
inc
jbe
pop
cltd
dec
sbb
mov
inc
stos
mov
pop
fistl
jb
push
push
push
imul
pusha
cmp
mov
mov
xlat
mov
lds
dec
bound
dec
fxch
dec
rcrb
dec
and
pop
jmp
iret
arpl
jp
lahf
or
dec
test
xchg
jle
arpl
into
dec
cmp
cmp
mov
pop
test
sub
jnp
lea
pop
enter
push
lahf
std
aad
je
xor
cmc
push
jnp
stc
pop
dec
inc
cmp
pop
or
sahf
cmpsb
idivl
lock
and
arpl
or
adcl
lock
in
adc
mov
inc
stos
repz
dec
push
jnp
popa
jle
clc
jbe
out
lea
aad
fstp
mov
fstpl
push
loope
js
inc
icebp
adc
cmp
sub
aam
cltd
xchg
lea
test
sub
pop
sub
push
mov
jo
dec
jle
mov
push
rolb
hlt
call
sbb
or
fiadds
test
jg
int3
aam
sbb
pushf
shlb
jnp
mov
stos
push
jb
fidivrl
inc
and
jmp
sub
xor
loope
lock
test
add
aaa
sub
nop
push
int
cmpsb
lock
stos
fidivrs
shll
dec
popa
and
mov
repz
lcall
jne
popa
sahf
add
in
add
test
or
lods
leave
xor
hlt
decl
push
add
lods
ljmp
std
fnstsw
mov
jl
xchg
imul
stc
enter
sbb
aad
call
sub
adc
pusha
jo
cmp
push
fs
lods
inc
mov
ss
xchg
addr16
pop
leave
mov
jecxz
aam
and
ds
mov
add
mov
lahf
movsl
xchg
mov
pop
cltd
loop
sub
jno
iret
xor
popa
jge
js
mov
add
push
jne
insl
inc
call
mov
pop
mov
sub
pop
rclb
out
nop
lods
and
sub
arpl
loope
mov
xlat
out
fstpt
dec
pop
jg
adc
and
fwait
mov
les
lcall
enter
jl
push
lds
cs
sub
xor
dec
into
add
and
pop
pop
movsb
imul
xchg
or
jecxz
cmp
aad
btr
push
pop
sbb
cmp
imul
mov
xchg
jne
push
popa
and
out
add
lods
fcoms
andnps
pusha
and
push
fimuls
mov
or
mov
jmp
mov
out
data16
pop
sub
stos
adc
xor
loop
lret
inc
inc
movsb
lods
loope
rorl
std
cmp
adc
js
icebp
sti
and
cli
movsl
call
jbe
sbb
call
xor
pop
ja
dec
mov
mov
neg
inc
lcall
sbb
andps
repz
push
scas
mov
cmp
fsubs
and
mov
test
push
out
inc
push
inc
or
inc
fdivrs
enter
aas
mov
xchg
ds
mov
mov
xor
repz
and
hlt
jg
test
lds
in
jae
mov
jae
sbb
mov
mov
cmp
sti
push
xchg
fiadds
xchg
aas
lds
push
mov
push
add
xchg
pop
test
lahf
jl
adc
sub
add
mov
lret
or
jne
loope
jbe
or
xchg
in
loopne
or
callw
jp
sti
outsb
movsb
fdiv
sub
mov
xchg
outsl
movsb
jg
js
mov
repz
jge
ret
lcall
in
movsb
push
and
xlat
loopne
dec
jmp
inc
mov
scas
sub
add
out
mov
mov
test
or
push
and
or
testl
push
or
sub
idivl
xchg
ss
repz
scas
cltd
js
mov
loope
xchg
insb
in
ljmp
sub
seta
jecxz
sub
stos
lods
call
in
in
push
sub
outsl
daa
and
ja
fnstcw
mov
mov
pop
xchg
test
hlt
cmp
mov
xchg
test
clc
jle
adc
outsb
lods
arpl
xchg
loopne
dec
inc
xchg
lods
inc
xchg
and
dec
mov
aad
jmp
sahf
mov
repz
sti
aad
mov
and
mull
pop
xor
bound
ds
es
pop
stos
js
fadds
xchg
repnz
in
mov
mov
mov
cltd
push
xchg
sbb
stc
nop
dec
or
cmc
push
sbb
fadd
pop
adc
add
mov
ds
dec
dec
add
in
pop
test
je
insl
clc
inc
and
gs
test
gs
xchg
jmp
fadd
sbb
insl
dec
test
pop
cmpsl
pop
into
xor
into
aas
cld
or
lahf
data16
mov
subl
testl
jecxz
sti
shl
and
xor
test
cld
dec
cld
push
bound
lods
pushf
push
mov
out
ds
dec
test
or
push
dec
arpl
fistpl
mov
cli
and
or
jecxz
aad
pop
mov
loope
inc
sub
adc
and
mov
mov
cmp
loop
std
aam
shrb
leave
cmpsb
inc
xchg
fimuls
dec
imul
pop
into
pop
push
add
dec
jmp
push
pop
mov
and
lcall
jl
or
call
adc
cmc
sub
pusha
cmc
cmpb
sbb
test
iret
aam
aas
popf
in
xlat
and
and
lea
sbb
xor
pop
sahf
push
mov
push
sbb
xchg
es
mov
dec
pop
ja
push
adc
add
push
mov
dec
adc
sbbl
sub
loop
test
mov
lcall
mov
fwait
pop
testb
inc
rcrl
fisttpl
shrl
sbb
insl
aam
jne
or
shlb
fwait
xor
mov
int3
push
scas
xlat
add
jns
mov
cmp
jbe
pop
jnp
sbb
cmpsl
idivb
test
mov
or
sbb
sub
aas
xor
repz
imul
dec
subl
dec
addr16
mov
dec
out
inc
fistps
push
call
mov
xorl
and
fisubs
sub
fsubrs
jo
cmp
test
add
ficompl
add
rclb
je
rclb
xor
stos
sub
pop
inc
xor
test
mov
fmull
fisttpl
xchg
movsb
mov
pop
and
push
push
cld
sub
mov
shl
les
iret
rcrl
mov
push
mov
push
mov
jns
mov
mov
inc
mov
testl
test
and
and
mov
mov
icebp
and
popl
sbb
mov
add
subb
aas
lcall
test
daa
pop
data16
push
lret
cmc
aas
adc
jge
sub
and
adc
rcrb
loopne
sbb
arpl
clc
and
jl
bound
push
inc
shrb
adc
mov
sahf
xor
test
xchg
mov
pop
jnp
int
ficoms
xor
scas
loopne
cwtl
pop
xchg
pcmpeqb
sarb
aaa
stos
lock
and
out
sti
inc
xorl
or
dec
inc
mov
pop
je
mov
je
jle
hlt
jg
outsb
negb
icebp
addr16
out
jbe
aaa
mov
aam
divl
pop
imul
addr16
sarl
int3
data16
pop
cmp
mov
stc
xchg
shlb
xchg
hlt
push
int3
adc
xchg
stc
fstpl
jle
add
imul
test
adcl
ret
pop
jb
iret
out
adc
dec
rcl
push
ss
mov
jne
jbe,pt
pop
rorl
dec
cmp
xchg
pushf
cwtl
popf
lea
outsb
pop
push
mov
out
adc
pop
popf
and
mov
add
lds
xor
xor
cmp
or
or
das
movsb
xchg
sub
stos
scas
push
jmp
pusha
and
movsl
ficoms
dec
test
rsqrtps
nop
xor
dec
xchg
loopne
in
adc
pop
test
xchg
inc
xchg
sub
in
add
jmp
mov
aas
inc
in
or
jmp
add
jecxz
mov
daa
andl
nop
fnstsw
sti
lds
sbb
ret
mov
fs
dec
mov
xchg
pop
enter
test
repnz
out
in
lock
das
in
addb
punpckhbw
pop
inc
add
or
repnz
add
ret
jge
imulb
lahf
ret
jecxz
es
in
mov
jl
xor
push
flds
inc
scas
addr16
sbb
das
ret
roll
jb
adc
mov
xor
or
jmp
xchg
dec
push
sti
inc
and
leave
inc
xchg
xchg
lea
in
cmpsl
ljmp
adc
das
ja
in
jnp
out
mov
sti
mov
stc
sbb
jl
and
movsl
movsl
movsl
faddl
sub
pushf
jb
xchg
cmp
cmp
sbb
jge
push
and
lcall
mov
scas
mov
daa
test
test
addr16
out
cli
cli
ror
pop
int3
cwtl
pop
push
out
daa
ds
aas
and
loope
shlb
gs
pop
cltd
adc
xchg
pop
test
aas
dec
sbb
aas
cltd
bnd
pusha
js
addb
cld
adc
shl
pop
mov
mov
push
xor
ljmp
rol
jns
inc
mov
add
shll
mov
aas
je
sub
iret
stos
mov
dec
inc
enter
xchg
ss
mov
jl
mov
push
shrb
jns
ja
mov
jbe
test
ja
jecxz
mov
dec
pop
sub
out
adc
lcall
push
or
mov
cli
xchg
mov
in
test
cs
test
dec
push
aas
cs
es
inc
jmp
aas
jne
adcl
int3
mov
and
dec
cli
hlt
fcompp
addr16
daa
hlt
mov
fwait
iret
jnp
je
xchg
je
sub
ljmp
arpl
mov
push
aam
mov
in
out
cmp
cmp
dec
imul
aaa
aad
cmp
sub
xchg
inc
pop
ds
jb
sbb
pop
inc
sub
cmp
adc
cmp
or
adcl
push
or
adc
data16
pop
inc
adcl
sbb
mov
lahf
cmp
inc
jmp
inc
add
dec
xor
divl
in
imul
xor
cmp
mov
fadds
pop
mov
jns
cmp
dec
mov
add
jo
jle
clc
fstl
mov
ljmp
xor
loop
bound
test
dec
xor
dec
popa
mov
push
popa
fcoms
lcall
ja
lds
push
sub
add
fcomp
mov
js
mov
or
notl
mov
or
test
sub
and
sbb
xchg
inc
in
mov
je
jmp
sub
stc
add
sub
sbb
je
ficompl
scas
pop
fisubrs
jge
notb
aaa
mov
sbb
fimuls
inc
xor
and
ljmp
xor
iret
cltd
insb
rcrb
dec
int3
lds
stos
adc
addb
fistps
popa
lahf
sub
lds
movsl
jo
sbb
stos
dec
sub
cmp
push
cli
push
pop
add
add
je
cs
push
outsb
int3
adc
mov
add
in
jb
inc
and
cmc
fdivrp
daa
inc
ss
das
out
adc
movsl
nop
adc
or
icebp
in
xchg
push
add
mov
test
call
cmp
rolb
icebp
mov
inc
add
add
mov
pop
aaa
out
cmp
and
lret
mov
dec
lods
cld
js
mov
into
outsl
mov
popa
scas
cmpsb
hlt
push
dec
sti
xor
fdivs
mov
cmpsl
jo
in
leave
repnz
movsb
ret
add
sub
mov
jnp
push
in
adc
popf
fcmovnb
pusha
fsts
rcrb
scas
nop
inc
dec
mov
pop
adc
inc
insl
jns
mov
mov
dec
ds
add
aad
sahf
xor
ret
or
test
cmc
iret
pop
xchg
xchg
cld
ficoms
cmpsl
jg
cwtl
insl
mov
pop
les
test
ficoms
icebp
shrb
les
mov
jmp
enter
aad
bound
gs
lods
dec
popf
dec
test
stc
sub
add
outsl
adc
cld
sbb
xor
push
daa
aam
idivb
sub
test
lds
out
mov
mov
movsb
cli
es
mov
adc
xor
adc
cmp
fildl
into
bound
mov
in
sbb
in
or
pop
bound
jl
insb
lods
add
mov
cmp
and
lock
outsb
data16
mov
adc
mov
xchg
in
jb
inc
jp
pop
mov
or
cmp
repnz
dec
and
jo
push
mov
adcl
jmp
inc
push
jo
mov
adc
and
cmpl
mov
and
into
cmc
mov
and
pop
xor
adc
jl
jno
pop
arpl
push
nop
cmp
in
cmp
jb
ret
test
xor
xor
pushf
sbb
mov
adc
out
inc
jne
gs
sbb
shlb
ljmp
and
lret
push
mov
leave
xchg
repz
dec
mov
outsl
fs
ret
or
std
fbstp
mov
int
out
dec
jecxz
xorb
xchg
push
fimuls
in
scas
mov
pusha
mov
mov
push
push
pushf
repz
mov
clc
xchg
repz
idivl
fmul
gs
push
mov
xchg
fnstenv
or
and
stos
inc
insw
jge
subps
xlat
icebp
rorb
xor
movl
dec
cwtl
jae,pt
pop
rol
sbb
fbld
mov
shlb
adcb
jns
lock
cli
leave
pop
loope
in
push
push
mov
test
loope
mov
inc
dec
lea
inc
pop
xchg
pop
loopne
ret
ret
mov
fldt
mov
jnp
xchg
xchg
int3
ljmp
sub
xor
repz
inc
fdivp
adc
sbb
shl
mov
fcomps
mov
ss
nop
rcll
lods
mov
sarb
mov
in
pop
mov
cltd
mov
cs
bound
xlat
mov
dec
cmpsb
rorl
cs
dec
insl
inc
lret
push
and
mov
in
test
xchg
sub
jp
andb
xchg
inc
lahf
sbb
mov
loop
and
psubsb
shrb
add
icebp
aaa
adc
lods
jo
dec
dec
xchg
push
out
aaa
nop
cmp
pop
out
call
cwtl
mov
cld
cmp
out
add
gs
or
xchg
movsb
xchg
or
fstl
sbb
jle
push
push
pop
shlb
pop
inc
dec
data16
out
adc
cmp
jge
rclb
arpl
fcom
aam
pop
pop
jl
aam
stos
mov
arpl
jmp
xchg
icebp
outsl
mov
jge
je
xor
mov
xchg
xchg
push
loopne
xchg
je
mov
or
pop
jle
sbb
shr
fcmovbe
push
xor
jo
enter
or
test
fisubl
loope
aam
stos
inc
daa
mov
cmp
lods
lea
xor
and
cmp
push
jl
xchg
xor
scas
lret
lea
mov
or
add
fldl
xor
push
movsb
xchg
sti
pop
leave
in
jle
inc
call
sbb
inc
or
scas
adc
pop
fstpt
shll
addr16
pop
pop
push
arpl
push
pusha
inc
aas
out
mov
jae
xlat
je
fwait
inc
loopne
iret
adc
sbb
and
pop
int
scas
repz
dec
andl
jb
paddb
test
lret
sahf
sub
aad
gs
xchg
push
mov
cmp
sub
mov
scas
xor
mov
push
sbb
push
imulb
adc
lret
loope
ss
fcoml
imul
addr16
movsb
test
mov
mov
daa
xor
loop
sub
testb
and
mov
add
dec
dec
cwtl
sub
popf
test
lds
xchg
cwtl
shll
repz
lock
enter
mov
xor
in
add
mov
fnsave
sahf
jge
outsb
ds
bts
mov
fsts
pop
stos
mov
cmp
add
and
xchg
outsb
nop
out
test
add
xlat
rorb
loopne
mov
test
addb
push
xchg
pop
mov
out
fadd
subb
out
and
inc
push
dec
fidivrl
dec
mov
adc
xlat
movsl
jno
das
orl
lock
lods
popf
mov
xchg
lret
lea
ret
mov
out
out
fstpl
mov
icebp
stos
andb
jbe
jmp
sbb
cmp
mov
ja
mov
mov
scas
fs
xor
inc
mov
dec
loope
fdivrp
mov
push
sbb
add
int
add
dec
mov
loopne
mov
jne
cmp
push
cmp
in
fidivl
in
lods
subb
add
adc
jbe
mov
dec
lahf
push
xchg
mov
mov
addr16
in
call
adc
js
insb
test
jmp
ret
sbb
sbb
push
ret
gs
sarl
mov
mov
cmp
test
das
insl
jle
dec
inc
inc
mov
cli
outsl
cs
mov
in
cmp
xor
jmp
mov
adc
fldcw
aam
rolb
mov
mov
mov
or
sub
pop
and
ds
aam
push
cmc
cld
bound
stos
fbstp
jae
adc
cmp
ficomps
mov
cmpsl
sti
sub
mov
xchg
shl
xor
std
movsb
jl
adc
mov
out
dec
ficomps
xchg
and
addr16
sub
inc
cmp
arpl
dec
sub
gs
xorb
loopne
add
test
adc
call
rorl
decl
loope
sar
popf
add
xchg
movsb
jno
cmp
add
mov
loopne
je
js
cs
add
pop
je
dec
xchg
aas
cmp
int
xor
pop
mov
enter
call
ja
js
pop
loope
clc
vpshufd
xor
mov
aam
dec
imul
call
sbb
stc
xchg
pop
aas
dec
xchg
sbb
and
pop
mov
sti
scas
mov
aad
daa
andl
ret
xor
mov
dec
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
mul
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
xchg
xchg
sti
sbb
or
aam
mov
cmp
pop
js
push
and
adc
mov
inc
sbb
or
test
in
aad
lds
lods
add
cld
push
in
cmp
cmp
sub
pushf
cltd
dec
in
aad
lds
lods
add
cld
push
in
inc
sbb
das
xchg
sub
pop
mov
add
mov
push
inc
pusha
neg
adc
jge
ret
shlb
mov
cmc
sub
popw
lods
loopne
push
andb
int3
loopne
pop
adc
rorl
mov
aad
xchg
int3
xor
flds
push
jge
in
cmpsb
mov
sbb
pop
sub
in
aad
loopne
in
push
insb
jge
jo
add
cmp
fldenv
in
mov
ret
mov
fistps
arpl
jne
inc
push
mov
aas
test
jmp
mov
sub
insl
cmp
jae
jg
daa
inc
push
je
lods
jno
in
add
cld
test
add
or
shll
xor
lods
add
cld
push
in
inc
sbb
or
cmp
sub
pop
cmc
dec
in
aad
lods
fnsave
clc
fs
lds
cwtl
adc
adc
imul
lods
sub
fnstenv
add
test
and
pop
fdivrl
sub
pop
fwait
and
adc
mov
shlb
int3
gs
push
in
inc
sbb
or
cmp
sub
pop
cmc
dec
in
aad
lds
lods
add
cld
push
in
inc
sbb
or
cmp
sub
pop
cmc
dec
in
aad
lds
add
add
mov
ficompl
pop
imul
aad
loopne
sub
push
mov
ljmp
adc
jne
mov
lea
cltd
xchg
xor
test
in
insl
pop
leave
xchg
or
ret
mov
adc
jo
mov
loop
adc
pop
mov
outsb
aam
mov
bound
cs
xchg
sarb
mov
bound
mov
inc
push
repnz
dec
aas
push
xor
mov
jecxz
stc
int3
mov
push
mov
test
xor
sub
cwtl
xchg
lock
mov
fnstsw
scas
aad
in
in
cltd
scas
inc
xor
and
loop
xchg
lret
inc
xor
mov
jnp
in
push
xchg
mov
mov
pop
fmul
insb
in
ljmp
inc
push
xchg
jmp
sbb
out
mov
cmp
push
scas
cmp
sar
jg
push
aas
mov
adc
xchg
in
fsubrl
and
rol
int
and
lds
pop
nop
pop
sub
loopne
stc
add
rorl
pop
ljmp
cmp
sub
sub
pop
adc
jge
std
mov
mov
push
test
mov
pop
fmul
fmul
js
lea
mov
push
push
arpl
mov
mov
and
fcoml
pop
fdivp
and
outsl
inc
mov
cli
dec
cmc
sub
movsb
push
es
inc
ret
aaa
fists
dec
mov
movsl
and
and
adc
xor
leave
mov
loop
sub
test
xor
adcl
inc
xchg
enter
jl
jl
lret
outsl
cmpsl
ret
push
or
inc
xor
mov
nop
es
mov
mov
imul
xlat
push
xchg
push
add
mov
fiaddl
jbe,pn
add
ror
das
int3
jae
add
imul
pop
ja
and
stos
cmp
clc
idiv
ror
xor
cwtl
fsubs
arpl
mov
insl
rcl
adc
icebp
cltd
pusha
jl
xor
cltd
pop
push
ja
std
test
jo
loope
adc
xor
and
mov
and
and
bound
test
and
mov
lret
and
xchg
xor
and
popf
xchg
jns
xlat
and
mov
push
fldt
xor
mov
icebp
push
cmpsb
jae,pt
aas
test
data16
pop
es
inc
sti
sbb
icebp
in
push
or
repnz
cmp
popa
gs
adc
mov
jne
adc
jmp
ljmp
pop
mov
sbb
ficomps
or
ret
push
ljmp
gs
ss
cltd
dec
jmp
jb
stc
xor
insb
out
sub
ret
arpl
push
pop
popl
jne
orl
popf
or
cltd
mov
in
mov
repz
ficoml
push
iret
pop
ret
mov
and
loopne
gs
pop
pusha
arpl
sub
pop
jmp
movsl
push
mov
cmp
ja
mov
fisubs
addl
sub
outsb
jl
xchg
jnp
ds
bound
fsubrl
fdivp
inc
fs
cmp
nop
lret
into
je
mov
mov
test
push
outsb
xchg
cmp
push
das
orl
out
cmp
cmp
push
cmp
incb
stc
pop
mov
and
xchg
das
xor
jp
cmp
aaa
fdivrl
inc
pop
xchg
xchg
xchg
push
xor
cld
iret
fdivs
call
lret
aas
stos
push
fsubl
pusha
ds
sub
push
lds
mov
sbb
and
data16
iret
sbb
pop
xor
in
pop
mov
pop
add
xor
cmp
jg
cmp
xor
adc
dec
add
or
sub
lahf
xchg
and
push
pop
daa
in
jge
push
mov
fnstcw
test
addr16
lcall
sbb
cmpsb
sub
fistl
lds
cwtl
or
add
dec
cmp
out
and
arpl
xor
inc
cmp
out
and
adc
cmc
dec
jle
adc
or
mov
xor
imul
cmp
in
movsl
xchg
push
mull
mov
aas
xlat
fmul
xchg
leave
pop
push
loopne
fisttpl
jmp
and
aaa
cwtl
jle
aaa
ds
and
faddl
cmpsl
popa
xor
sbb
and
ret
push
and
mov
mov
popa
mov
inc
push
lret
js
dec
push
shr
loop
arpl
cmp
imul
rcl
sbbb
lock
cld
cmp
push
stos
push
jmp
adc
xchg
mov
xor
push
js
push
jae
xor
cmc
add
fimuls
sub
push
int3
push
mov
mov
pop
out
es
jno
pop
pop
outsb
gs
icebp
aad
dec
imul
mov
das
and
insl
mov
push
lea
xchg
push
mov
ljmp
mov
push
jg
stos
sti
mov
out
hlt
inc
adc
dec
xchg
jle
adc
xchg
fidivrs
xchg
rcl
ud1
sahf
jae
cmp
insb
inc
aaa
cmc
icebp
fcmovnu
lcall
fcmovb
repnz
sub
sub
inc
test
aad
cld
adc
insl
cmpsl
scas
xor
dec
pop
repz
mov
mov
add
jl
mov
jo
hlt
push
push
fldl
mov
mov
inc
aas
push
mov
mov
inc
outsl
inc
cmpsb
shlb
xchg
jl
dec
clc
jno
lds
shlb
xchg
sub
mov
push
pop
xor
jmp
fldcw
cmp
mov
adc
sbb
push
sub
outsb
xor
push
xchg
arpl
and
inc
dec
jne
jmp
fcoml
mov
cmp
push
aas
dec
jmp
sbb
js
sbb
sbb
insb
jns
int
pop
aaa
adc
in
sub
std
jne
xchg
xchg
in
lahf
test
sti
insb
inc
mov
mov
xchg
adc
loope
adc
mov
out
pop
loop
cmpsl
jge
lahf
es
push
add
jmp
adc
or
pop
xor
and
xchg
movsl
pcmpeqw
xchg
in
and
sbb
inc
dec
xor
stc
add
sub
fidivrl
sbb
adc
push
xchg
cmp
je
ss
insb
pusha
lcall
cld
adcl
aad
dec
fsqrt
movsb
lock
data16
cmp
lret
xchg
ficoml
dec
mov
popf
push
cmp
push
adc
jle
mov
cmp
or
push
sub
inc
mov
mov
and
ja
push
shlb
pusha
outsl
insb
ds
xor
data16
sahf
lret
cmp
sbb
pop
dec
or
mov
pop
pop
sarb
lods
fnsave
int3
fstl
push
mov
cmpsb
shlb
mov
or
addr16
sbb
mov
jae
mov
lock
mov
xor
insl
mov
call
jle
sbb
adc
insb
dec
inc
cli
push
cld
mov
call
xchg
mov
aas
sub
dec
mov
cli
mov
aaa
cli
or
or
movsl
inc
mov
jmp
aam
icebp
cmp
repnz
cmp
out
pop
inc
cmpb
push
shrb
loope
cmc
jne
push
fwait
pusha
stos
mov
cmp
inc
mov
shrb
cs
adc
push
in
ja
dec
mov
mov
rcrl
sahf
pop
aad
aad
enter
popf
and
imulb
aam
adc
jmp
outsl
fcomps
or
das
sti
cli
fcmove
mov
int
arpl
negb
cmpsb
mov
push
adc
dec
call
stos
inc
add
cltd
jge
popf
lret
out
repz
mov
out
outsl
call
mov
jae
push
arpl
xchg
pop
mov
xor
or
mov
xlat
sub
ja
inc
icebp
in
push
push
in
repnz
pop
dec
cmp
adc
fstpt
adc
in
cmp
mov
mov
cmp
xor
iret
mov
dec
mov
push
sbb
loopne
fmulp
add
lret
movsb
ljmp
jns
shlb
gs
out
adcb
pushf
repz
call
lods
iret
call
or
into
mov
fdivr
and
mov
cmp
fsubrp
pop
push
mov
mov
outsb
repz
jle
jp
mov
pop
insb
test
fldenv
xchg
pushf
jp
xor
push
mov
outsb
in
je
xchg
ja
rcl
xchg
aam
scas
push
fsub
dec
mov
sarb
jne
jbe
jecxz
orl
push
add
out
daa
cmpsb
xchg
xchg
lea
cmp
cs
ret
jbe
in
gs
or
jne
jmp
xor
into
dec
xchg
or
jg
mov
scas
and
xlat
or
or
loopne
rcl
arpl
pop
push
aaa
das
xlat
fprem
dec
cmc
nop
mov
incb
mov
lret
xor
jo
inc
adc
mov
fnstcw
out
fistps
sub
pop
pop
movl
insb
xchg
and
cld
mov
cmp
aam
jnp
pop
or
sbb
and
ljmp
add
cmpb
stos
xchg
test
insb
mov
pop
hlt
pop
test
insb
adc
xchg
mov
pop
sub
sbb
sbb
fcoml
int3
pop
rolb
push
repnz
dec
adc
dec
test
mov
lcall
repz
mov
mov
js
dec
scas
test
loope
outsb
pop
add
dec
dec
jns
aad
popa
adc
dec
dec
stos
add
shrl
cmp
sub
jae
lret
scas
mov
es
movsl
cmpsb
mov
adc
sbb
push
inc
or
loopne
insb
mov
or
or
scas
add
ss
js
or
or
xchg
arpl
movsl
sub
inc
fcomip
cwtl
xor
dec
leave
and
add
push
out
aas
cwtl
lock
xor
in
pop
jl
and
mov
mov
mov
xchg
jl
iret
aam
inc
mov
pop
fdiv
pop
arpl
mov
mov
push
add
stos
addl
arpl
dec
fcomps
xlat
cmp
aam
int3
push
addl
sub
cli
js
leave
std
add
fwait
mov
arpl
mov
mov
jg
ds
ja
out
sbb
cmp
aaa
pop
imul
iret
movsl
inc
repnz
outsl
push
push
jp,pt
cmp
daa
cmp
lea
xor
adc
test
in
pop
rcrl
fidivs
xor
lods
cwtl
outsb
movsb
mov
xchg
sub
mov
out
lcall
mov
scas
out
xor
mov
and
or
xor
insl
inc
jle
lods
xor
gs
xor
jo
aas
push
scas
pushf
sub
and
int
xchg
enter
adc
mov
inc
sbb
lcall
xor
test
xor
test
cmp
pop
hlt
bound
arpl
and
je
or
jle
outsl
add
aam
cld
mov
mov
mov
sbb
fwait
out
mov
sbb
leave
adc
faddl
cmp
es
add
cmp
xchg
cld
or
sub
mov
es
lods
mov
icebp
xchg
ret
sbb
gs
mov
xor
es
xchg
adc
jg
loope
fdiv
and
mov
jne
fbstp
push
cmp
jge
xchg
pop
jg
test
clc
adc
rorl
subb
popa
pop
cmp
fidivrs
adc
rclb
cmpsl
sarl
inc
addb
mov
negb
mov
shrb
pop
fdivrl
cltd
int
jge
call
or
adc
lods
iret
sbb
mov
sub
dec
imul
in
push
mov
pop
jae
dec
cmp
ss
sbb
mov
xchg
adc
sbb
repz
incb
into
and
scas
and
pop
inc
push
mov
pop
movsb
adc
decb
mov
loop
inc
xchg
add
das
or
add
xlat
jmp
dec
call
repnz
in
jbe
or
sub
gs
xchg
icebp
xchg
test
add
repz
sbb
and
lods
enter
pushf
or
dec
jl
adc
pop
loop
daa
jno
loop
bound
ret
add
fs
mov
sbb
out
lods
in
mov
sub
in
add
je
insb
dec
fistl
jns
mov
jo
push
shll
jle
lea
cmp
imul
scas
cmp
inc
cli
icebp
fnstenv
mov
pop
dec
cmovno
mov
jbe
mov
hlt
flds
xor
andl
xlat
mov
lock
in
lea
mov
cs
push
int
enter
imul
xchg
jp
and
repnz
movb
push
punpcklwd
lret
bound
xor
pop
inc
lock
cmp
push
xchg
in
pop
lahf
or
fistl
and
cmp
xor
dec
imul
repnz
push
rolb
mov
xchg
lock
lods
and
stos
jno
pop
pop
dec
xchg
sub
xchg
test
call
xchg
movsl
mov
sti
call
mov
adc
arpl
std
stos
mov
in
jecxz
cld
dec
pop
ror
mov
pop
imul
test
ret
mov
xor
jge
lods
add
mov
sbb
ficomps
cli
je
lahf
in
jp
pop
inc
stos
pop
lcall
in
in
inc
decb
push
cmp
pop
push
sbb
mov
sbb
inc
fdivrs
adc
ljmp
mov
xchg
jecxz
push
pushf
jge
insl
xchg
cltd
int
and
mov
mov
scas
jo
movsl
lea
pop
xor
xchg
lea
pushf
leave
jl
mov
shll
jge
clc
fnstsw
sub
fiaddl
mov
inc
push
dec
push
fildl
cmp
sbb
ds
js
outsl
sub
cmp
xchg
loopne
sbb
dec
mov
adc
push
xor
in
push
jno,pn
pop
pop
mov
push
fisttps
imul
lods
push
ds
out
inc
insb
xlat
or
adc
xchg
pop
pop
mov
aad
ss
outsb
pushf
imul
stos
push
dec
xor
icebp
icebp
ret
and
lods
or
fwait
stc
icebp
pop
das
in
sub
stos
or
aad
outsb
shl
repnz
mov
cmp
inc
insb
repz
int3
fisttpll
ss
movsb
pushf
outsl
loop
adc
imul
cmp
xchg
cmpsb
mov
cmc
imul
lea
mov
mov
es
ljmp
xchg
lea
jg
add
sub
cmpb
enter
out
or
pop
mov
fwait
push
pop
dec
icebp
dec
xchg
jle
push
dec
imul
lds
mov
jae
and
pop
mull
lcall
stos
shlb
imul
push
lods
sti
cs
pop
cwtl
jnp
sbb
add
test
sub
int3
xchg
dec
xchg
ficomps
ret
scas
pop
sbb
pop
push
stc
bound
bound
adc
dec
mov
and
lret
lds
xor
push
addr16
outsl
ret
mov
sub
cwtl
arpl
lret
push
add
xor
cmc
mov
push
push
mov
mov
push
fcoml
out
cmpsl
or
sbb
shll
or
orl
pop
cmp
jnp
xchg
jg
leave
out
cs
sub
pop
hlt
inc
loopne
and
jo
int3
gs
adc
mov
stos
fwait
xor
inc
ss
mov
mov
xor
sar
fdivs
mov
stc
jns
pop
jno
lret
dec
inc
aam
cmpxchg
mov
ret
aad
sbb
iret
fcmovbe
pop
mov
xchg
lods
mov
sbb
push
insb
xchg
dec
lds
in
sbb
jp
jbe
mov
xor
inc
xchg
xor
and
xchg
cld
or
mov
add
loop
push
stos
cmp
push
ds
jno
lea
inc
sahf
mov
mov
mov
shr
pop
mov
mov
jns
ds
and
xchg
push
je
test
fimuls
popa
jg
push
mov
xchg
sahf
lods
js
dec
xchg
cmp
inc
lret
inc
adc
and
out
aaa
jecxz
dec
add
das
push
mov
xor
pop
loopne
fisttpl
pop
addb
mov
sub
adc
cwtl
add
int3
nop
in
jbe
adc
mov
inc
rolb
push
inc
es
outsl
mov
aad
pop
cli
repnz
push
cwtl
arpl
dec
rolw
in
jb
sub
xchg
cs
mov
adc
inc
mov
mov
cwtl
and
cmp
dec
adc
push
aad
ret
mov
addr16
loope
add
pop
mov
div
fsubrp
mov
mov
push
int3
xchg
mov
ret
mov
pop
in
mov
push
cmp
sahf
lds
scas
mov
sub
mov
hlt
out
dec
add
in
lahf
jae
lds
sbb
sbb
bound
xlat
xchg
fnsave
lret
push
or
push
lret
loopne
cmp
ss
adc
ljmp
cmp
lret
mov
nop
out
das
or
dec
ds
push
mov
add
ficomps
mov
sub
cmp
sti
pop
jmp
setp
cmp
pushl
mov
xlat
js
xor
fadd
pop
es
mov
mov
popf
push
jno
jmp
paddb
xor
jno
push
sub
outsl
mov
mov
sub
repnz
mov
rol
xor
pop
aas
test
shrl
imul
mov
hlt
xchg
les
notl
inc
mov
lds
movsl
mov
dec
mov
lret
lcall
popf
or
mov
dec
test
mov
push
inc
insb
fs
mov
xchg
push
xor
arpl
divb
es
stos
pop
jb
in
and
ja
mov
pop
add
and
push
out
not
inc
sbb
push
aas
lock
pop
insl
lret
les
daa
mov
xchg
movsb
adc
ss
aaa
mov
mov
sub
push
enter
loopne
mov
or
stos
dec
jmp
out
xor
loope
xchg
push
cmp
cmpsl
iret
jmp
inc
iret
sub
lea
fs
das
fnstcw
dec
or
lock
mov
ljmp
sub
xchg
mov
negb
sbb
loop
mov
push
movsb
cmp
xchg
sub
mov
stc
shll
mov
mov
and
ret
jb
or
mov
pop
in
add
outsb
ficompl
imul
add
mov
leave
sahf
inc
sub
clc
lods
int3
sub
outsb
loopne
iret
xor
lods
and
aam
mov
pusha
mov
pop
inc
push
idivl
jecxz
inc
aad
imul
mov
mov
stc
int3
loop
pop
scas
push
dec
add
mov
inc
add
out
jmp
mov
xor
test
or
mov
fs
mov
fwait
mov
xchg
push
test
mov
dec
xor
xchg
mov
mov
xchg
push
out
dec
call
mov
adc
pop
cli
cmp
dec
addr16
in
nop
jnp
loop,pn
pop
lods
popa
icebp
sti
rorl
loopne,pn
sbb
inc
pop
out
dec
xlat
xchg
inc
stc
cmp
loop
sub
push
sub
rcl
xor
mov
aam
cli
lret
das
jmp
test
repnz
lea
jne
out
mov
lods
and
jo
mov
repnz
shr
xor
or
icebp
xor
xchg
cmp
repz
in
das
dec
or
xor
jno
lret
sbb
pusha
mov
or
adcb
call
mov
inc
cmp
mov
or
dec
xchg
out
sbb
fmuls
test
int
shlb
and
test
aaa
xchg
std
testl
add
mov
cwtl
mov
mov
mov
sbb
xchg
aad
ja
inc
xlat
mov
lods
add
cld
push
in
inc
sbb
or
cmp
sub
pop
cmc
dec
in
aad
lds
lods
add
cld
push
in
inc
sbb
or
cmp
sub
pop
cmc
dec
in
aad
lds
lods
add
cld
push
insb
inc
sbb
or
cmp
sub
pop
cmc
dec
in
aad
lds
lods
add
cld
push
in
inc
sbb
or
xchg
xchg
sub
sub
cmp
or
sbb
andl
push
orb
fsubs
rcll
sbb
pop
icebp
insb
sarl
sbb
sub
cmp
les
jno
inc
cld
push
mov
pushf
xor
pop
xchg
inc
sarl
js
sub
cmp
push
popa
pop
jno
inc
cmp
and
xor
dec
xor
or
inc
ficomps
dec
xchg
lea
cs
mov
pop
out
shrb
jg
stc
arpl
cmp
or
icebp
aam
jne
fsubl
cmp
or
pop
mov
lea
shll
arpl
mov
cmp
fadds
std
or
mov
sub
mov
arpl
mov
xchg
lea
xor
cmp
popf
jl
addl
jle
sbb
andl
scas
jae
pop
and
adc
xchg
mov
jg
pushl
dec
sbb
neg
mov
daa
pop
test
push
fs
mov
movsb
icebp
insl
sarl
mov
jbe
xchg
sub
jmp
jno
inc
nop
push
mov
fdivs
lods
add
mov
shll
mov
pop
clc
mov
sub
xor
test
xchg
shlb
cmpl
popa
push
jae
inc
aaa
and
imul
adc
test
mov
jns
pop
in
sarl
mov
xor
pop
icebp
insb
sarl
sbb
sub
cmp
int3
popa
fdivl
inc
cld
push
mov
pushf
xor
pop
icebp
insb
sarl
sbb
sub
cmp
int3
popa
sbb
inc
repz
int3
jg
xlat
lsl
scas
dec
pop
mov
mov
testl
push
inc
fstp
test
sbbl
and
or
pushf
imul
insl
dec
sub
leave
mov
out
or
ds
jnp
jge
cltd
add
xor
int3
sub
and
sub
fsubrs
pop
inc
test
lds
pop
jle
xchg
sti
aam
jl
popf
arpl
xchg
stos
clc
add
lods
xchg
jnp
sub
jge
popf
sahf
out
mov
and
jecxz
pop
jp
sbb
sbb
es
mov
in
dec
or
loope
pop
push
jp
enter
add
out
pop
loop
and
into
and
hlt
jne
int3
repz
pop
xor
or
imul
sbb
cltd
rcr
and
les
clc
scas
lret
shll
fsubrs
repnz
sahf
shll
repnz
dec
mov
adc
in
cmp
jl
test
lods
sub
jbe
cwtl
dec
xchg
rcl
outsl
xorb
dec
pop
popa
mov
je
popf
icebp
jno
fnsave
inc
pop
dec
sub
sbb
rcr
adc
dec
pop
ja
rcll
jne
and
xchg
inc
insl
push
lret
insb
js
pop
adc
xor
rcrb
aaa
cmc
dec
cmp
and
sub
mov
inc
cmp
cwtl
push
lcall
pop
loop
xchg
cmp
lea
xchg
clc
mov
sub
out
push
pop
ja
mov
test
nopl
pop
mov
xchg
test
testb
cltd
sbb
filds
es
mov
out
sub
subb
dec
xor
sub
mov
add
and
xchg
jne
sub
test
mov
lea
scas
std
cmp
dec
cltd
sub
pop
dec
mov
sub
test
cwtl
in
jecxz
lods
std
dec
xor
or
les
mov
or
mov
into
mov
lods
pop
dec
in
jns
xchg
pop
cmpsb
xchg
xor
add
dec
lock
or
stos
sbb
ss
insl
dec
ret
sarb
cmp
sbb
and
inc
ret
aas
imul
sub
test
inc
push
aam
sbb
cmp
push
je
fisubrl
push
dec
xor
mov
shll
mov
sbb
mov
lock
dec
dec
loopne
arpl
dec
add
xchg
inc
inc
jl
dec
add
and
fidivrs
cmpsb
in
nop
push
loope
testb
jge
enter
mov
or
arpl
addr16
push
pop
shll
or
push
jno
clc
push
pop
ror
jl
lea
imul
mov
push
jae
xchg
mov
xchg
sub
jecxz
or
jge
sub
jno
pop
aam
cmp
push
mov
cld
hlt
fiadds
insl
pop
mov
dec
mov
pop
xchg
or
mov
lea
cs
test
loopne
int
jb
add
push
bound
jmp
xor
outsb
ja
mov
pusha
ret
xchg
mov
and
push
cld
and
aaa
cmp
cmpsb
sbb
fnstsw
loop
and
sar
ficoml
cli
lahf
add
sub
pop
mov
pop
sbb
js
and
pop
xchg
insl
and
or
cmp
cld
xchg
cs
jle
xchg
add
jp
push
xor
xor
fisttpll
mov
and
xor
mov
stos
inc
cltd
mov
inc
fwait
lea
icebp
xchg
pop
mov
xchg
jmp
ret
loop
xor
mov
mov
shr
add
pop
mov
mov
mov
in
cmp
stc
out
xchg
xorb
inc
sbb
fisubrs
pop
cmp
sub
sub
add
lods
jb
movsl
mov
popf
outsb
jle
pushf
fstl
mov
xor
cld
mov
xor
sbb
xlat
cmp
popl
test
xchg
lcall
lcall
mov
bound
dec
adc
movsb
and
xchg
std
add
xchg
into
aaa
aad
cmpl
test
jecxz
cs
shrb
inc
or
out
insl
shrl
pop
in
and
rcrb
ret
mov
xchg
imul
pop
in
mov
and
into
ficoml
test
cmpsl
push
mov
popf
and
les
mov
xorl
lods
mov
cli
scas
add
and
ljmp
mov
imul
adc
lret
aaa
es
inc
dec
dec
mov
fmull
ds
cmp
out
arpl
ror
xchg
or
in
mov
cmp
mov
fs
mov
loop
daa
gs
data16
loopne
imul
imul
fcomps
mov
fistl
faddp
ljmp
inc
imul
mov
jno
adc
and
les
pop
or
lret
popf
jle
dec
daa
arpl
mov
shlb
jecxz
out
cmp
enter
or
mov
lahf
fildl
inc
mov
xor
inc
lret
daa
sbb
dec
insb
arpl
and
mov
add
inc
sahf
shr
cwtl
gs
leave
jp
popl
fstl
push
fstpt
pop
mov
inc
mov
jg
lea
sbb
xchg
sarl
pop
pop
mov
in
dec
movsl
std
mov
negl
gs
adc
xor
or
cs
lds
ror
jae
dec
insl
xchg
push
pusha
push
mov
popa
jle
sub
aaa
hlt
jbe
xor
or
add
shrb
cmpsl
or
out
or
mov
mov
jb
loope
repnz
dec
mov
ficoml
or
roll
or
mov
scas
jge
std
test
bnd
dec
add
cmp
cwtl
push
iret
insl
imul
adc
repnz
fwait
mulb
push
add
lock
les
jmp
jecxz
add
mov
fldt
push
jno
gs
test
sti
mov
jle
mov
dec
std
cmp
mov
jb
out
sbb
out
lea
fstps
fimuls
ss
clc
dec
daa
sub
adc
adc
push
adc
jnp
inc
xor
xchg
scas
push
repnz
clc
sub
mov
mov
clc
popf
bound
push
outsb
movsl
fwait
sbb
jg
dec
push
xchg
mov
sarl
dec
add
pop
mov
jecxz
stos
mov
dec
or
mov
fwait
bound
bound
aad
push
mov
fildll
or
daa
xor
inc
fdivrp
jnp
push
movsl
sub
clc
mov
ret
je
pop
loope
out
mov
nop
sti
sbb
lret
sbb
dec
sub
inc
adc
sbb
add
rdpmc
cltd
mov
cli
push
sub
cmpb
lret
xor
sbb
ds
sbb
jl
dec
fwait
jp
adc
jbe
or
push
or
cmp
pop
sub
out
repz
sbb
pop
lret
mov
fdivrl
cmp
sbb
dec
fbstp
add
pop
imul
pop
fdivrs
mov
sti
sbb
jae
in
outsl
stos
sub
test
mov
sahf
xchg
lahf
lahf
jno
mov
dec
cmp
push
pop
push
mov
and
mov
inc
cmp
mov
cmc
push
add
adc
xlat
stc
jmp
dec
fs
push
adc
sarb
test
loopne
lods
aas
outsl
aad
sub
push
arpl
mov
notl
movsb
or
cmp
push
lock
push
mov
jae
inc
lods
dec
mov
lcall
add
fiadds
cli
jmp
or
mov
cmpsb
cmp
dec
push
iret
jmp
mov
add
lahf
mov
mov
xor
into
cmp
es
scas
scas
inc
jecxz
xor
cs
cmp
test
xchg
fwait
outsb
sti
add
push
xor
xor
push
sbb
scas
repnz
pop
movsb
sub
addr16
or
dec
pop
divl
sbb
loopne
out
int3
dec
sti
xor
sahf
out
jp
stc
sbb
fildl
push
push
and
ds
jbe
lret
insl
mov
popa
pop
xchg
add
cld
fucom
arpl
push
scas
xchg
add
push
fists
cmp
repnz
sbb
fwait
int
jg
cmc
aas
repnz
lret
push
mov
sub
dec
jno
cmp
or
and
mov
jno
dec
xor
adc
dec
aaa
sub
test
pop
adc
sub
and
xchg
aad
jecxz
outsb
jecxz
lods
mov
pop
movsb
or
push
cmpsb
or
dec
jmp
cwtl
popa
xchg
aam
mov
insb
sti
insb
mov
jg
add
movsl
int3
lods
mov
and
jmp
inc
lods
gs
push
and
nop
push
insb
mov
cld
adc
pop
mov
xlat
add
or
xchg
jbe
mov
scas
cmp
mov
rcrl
xlat
sub
out
pusha
pop
jmp
mov
out
das
mov
scas
test
mov
mov
lods
cmp
xor
xchg
ss
push
rcrb
mov
cmp
xor
mov
rclb
pop
leave
decb
mov
cmp
sysret
xchg
dec
pop
ds
cmp
inc
outsb
imul
insb
xor
mov
loopne
push
leave
xchg
dec
sbb
jge
jecxz
jne
scas
sbb
mov
add
pop
ss
popa
call
shrl
jbe
fdivrp
xchg
lods
xchg
aaa
sbb
push
xor
scas
sti
lds
shlb
mov
sbb
cmp
xor
cmp
mov
enter
pop
test
test
shlb
sbb
xor
ds
xchg
xchg
aas
ret
cmp
inc
xchg
xchg
icebp
cmp
in
jp
inc
jg
or
or
scas
cmpsl
loope
jg
jb
or
stos
mov
stos
xor
cmp
mov
sub
mov
xchg
mov
inc
mov
loop
inc
jbe
popl
push
nop
adc
cmp
mov
lcall
into
mull
adc
aaa
sbb
ds
loope
push
sub
mov
das
sahf
les
cmpl
pushf
mov
je
mov
insb
adc
xor
xchg
mov
enter
cmpsl
out
mov
inc
pop
scas
ret
mov
sub
hlt
rcl
dec
or
mov
arpl
dec
adc
addr16
pop
cmp
movsl
add
or
mov
lcall
cmp
sub
in
dec
popf
fucomi
fbstp
fistpl
jmp
addl
xor
shll
add
or
popf
adc
lea
loopne
add
xchg
adc
rol
popf
mov
daa
sahf
sbb
jl
je
pop
mov
xor
cmp
insl
add
or
out
cmp
mov
aad
adc
sub
jle
insb
xchg
daa
stos
ljmp
adc
sbb
enter
cmp
jecxz
leave
out
daa
es
lds
daa
pop
cmp
adc
xchg
test
addr16
push
shl
sbb
ret
jge
xor
lcall
xchg
outsl
stos
and
xchg
lahf
ds
adc
mov
pop
test
int
roll
mov
in
hlt
arpl
sahf
sbb
add
sbb
aas
repnz
aam
push
enter
jmp
mov
insb
mov
ds
sbb
andl
xchg
xor
lea
cmp
or
decl
lods
pop
out
mov
dec
sub
stc
mov
loopne
add
pusha
push
arpl
fs
leave
mov
movsb
testl
mov
shlb
inc
sti
es
into
push
mov
mov
push
and
ja
dec
hlt
ficoms
add
cmpsb
popf
je
testb
stos
mov
ret
shlb
xor
cld
test
add
sub
je
adc
mov
adc
jbe
neg
pop
je
data16
test
out
pop
divb
int
mov
sahf
test
xorb
jb
mov
clc
mov
movsl
cs
std
mov
pop
mov
cmpsb
inc
hlt
rcrb
jns
mov
push
mov
push
into
lods
out
pop
push
stc
xlat
out
mov
fwait
jnp
mov
cmp
pop
xor
push
addr16
and
xor
cld
movsb
test
pushf
lcall
sbb
frstor
pusha
mov
sti
jb
inc
rcll
or
movsl
xchg
movsb
sub
cmp
xor
test
rol
stos
mov
loop
cmp
mov
iret
inc
sub
lods
xor
jo
mov
es
sbb
mov
dec
scas
stos
out
stos
jge
inc
mov
bound
xor
ss
pop
fldcw
push
outsb
loop
push
leave
iret
mov
push
or
mov
xchg
mov
mov
add
xor
les
sub
jbe
inc
push
lods
ret
das
and
icebp
jmp
or
adcb
fisubl
test
ficompl
mov
fcomp
fsubrl
insb
bound
addb
lea
es
je
mov
push
stos
dec
cmp
lods
sbb
adc
popa
pusha
inc
loopne
test
mov
popl
fnstsw
dec
pop
jle
jno
xchg
es
and
pop
repz
jbe
imul
nop
cmp
cli
push
ds
in
cli
fldenv
stos
cmp
std
jp
in
cmp
push
stos
xor
rorl
sarl
rcll
jne
fsubrs
or
xchg
test
ret
subps
sub
popa
imul
jp
xchg
adc
rorl
jmp
adc
fisubrs
call
mov
hlt
lods
pop
insb
aam
pusha
stos
xor
add
stos
cmc
leave
notb
pop
push
jbe
es
lea
add
dec
stos
stos
loop
js
pop
push
jmp
adc
mov
pop
sbb
mov
dec
daa
add
iret
cwtl
popa
mov
lock
pop
xor
icebp
mov
inc
xchg
decb
inc
in
mov
mov
adc
cmpsb
sahf
or
pop
inc
add
mov
inc
xchg
jae
mov
inc
jle
sbb
pop
jmp
mov
push
outsl
jne
inc
sbb
jb
xor
and
push
adc
or
push
data16
cmc
xchg
mov
shrl
int
adc
jp
lods
iret
aaa
xor
inc
jl
daa
xor
aam
add
enter
into
mov
dec
mov
pop
lret
adc
dec
lds
insl
loop
mov
jo
clc
dec
push
fstpt
pop
adc
pop
int3
sub
jns
pop
rcll
stc
xor
jp
fwait
mov
mov
shrb
cmc
lods
les
sub
pop
icebp
jb
data16
repz
jmp
les
cmpsb
enter
shl
sub
add
popf
lock
pop
inc
dec
out
mov
mov
push
ss
rcll
aas
ret
cwtl
mov
ss
mov
xor
lahf
xchg
pop
lods
jecxz
negb
xor
loop
into
nop
push
je
or
hlt
enter
pushf
jbe
in
dec
sub
xchg
add
repz
push
push
hlt
cmp
lret
sub
mov
sahf
insb
lods
mov
sbb
pop
push
mov
xchg
jg
jns
cwtl
imul
add
subl
mov
mov
stos
lahf
repnz
ficoml
mov
shl
push
imul
es
repz
sub
xchg
arpl
mov
rcll
lret
xor
dec
pop
loopne
ss
popa
and
xchg
sbb
push
pop
push
add
adc
scas
decl
jb
pop
mov
sbb
scas
xchg
or
add
sbb
adc
xchg
in
xchg
sub
pop
lods
fwait
xchg
inc
or
dec
dec
pop
pop
mov
les
lods
loopne
sbbl
jl
ret
xor
or
leave
and
cwtl
push
scas
and
adc
cwtl
aaa
ljmp
lods
mov
sub
pop
add
jle
mov
mov
inc
rolb
push
jp
cld
pop
mov
or
jb
fnstenv
add
inc
cmpsb
notl
popa
xchg
ss
sbb
mov
add
jl
lahf
jg
mov
jnp
jno
dec
cld
jl
add
pop
pop
shll
data16
jg
sbb
fcomp
dec
aad
aas
xor
out
rcll
mov
jge
lcall
sub
sbb
aaa
test
pushl
insl
daa
rolb
stc
in
dec
dec
adc
aaa
clc
lock
push
subl
lret
je
test
hlt
in
jae
and
fisubs
ljmp
add
js
nop
and
insl
lahf
inc
lret
minps
sti
mov
mov
je
es
loop
sbb
cmp
shll
aad
or
aam
sti
xor
adc
inc
loopne
mov
jno
ret
cmp
add
inc
call
imul
fs
fistps
ja
and
jl
cmp
sarb
xchg
loope
xchg
lods
mov
shlb
add
mov
cmp
vfmsubaddps
sbb
or
mov
sub
push
mov
pop
int
mov
mov
out
loopne
add
inc
cld
jne
dec
push
mov
pop
cli
pop
sub
push
push
mov
sbb
adc
xor
push
jle
pusha
xor
inc
xchg
sarb
mov
inc
jb
mov
insb
jae
mov
push
mov
ret
das
xchg
xchg
mov
push
loope
repz
mov
andl
std
add
call
or
ja
ss
xor
mov
dec
mov
cmp
movsbl
xor
orb
popa
arpl
sbb
jae
test
movsb
ret
cwtl
sahf
xchg
dec
stos
xlat
popf
sbb
call
icebp
xchg
stos
pop
cs
sbb
dec
cld
lret
cli
xchg
inc
sarb
fistpl
inc
dec
sarl
loope
ja
iret
mov
mov
icebp
dec
and
push
cmpl
jg
ss
mov
mov
jae
mov
int
push
push
sbbb
lds
es
in
fbld
jno
lods
pop
adc
pop
dec
cmpsl
loope
xor
jp
scas
jmp
inc
dec
fisttpll
sahf
ljmp
jl
ret
popa
xchg
out
push
stos
ret
sbb
add
arpl
fcmovne
dec
cmpsb
out
lret
dec
scas
nop
aas
sbb
movsb
xor
aaa
push
mov
das
jno
add
out
in
inc
jnp
dec
repnz
jne
js
xchg
ja
add
push
enter
popa
jecxz
stc
out
pop
hlt
mov
pop
inc
shlb
mov
popf
push
adc
lret
cld
cmp
push
lods
fists
push
pop
push
fimull
xor
mov
popa
sarl
test
fimull
shl
fwait
shll
dec
loopne
sub
mov
or
jnp
aam
sarl
int3
mov
push
mov
out
or
pop
push
les
inc
rorb
sahf
cmpsb
or
pop
and
filds
shll
add
adc
mov
loope
cmp
inc
jg
adc
or
popa
jge
pushw
inc
rep
pusha
loope
sub
lea
ret
outsb
daa
fwait
sbb
pop
xchg
adc
sub
popa
pop
movsl
aas
pop
stos
sbb
mov
cmp
xchg
cltd
pop
ss
cs
int3
mov
dec
inc
jle
push
repz
cmp
pop
out
lcall
fldcw
lahf
ja
push
sub
lret
repz
insl
mov
push
outsl
mov
sbb
jno
mov
xor
inc
mov
pop
mov
mov
mov
clc
andl
mov
mov
push
fwait
popa
lds
jno
pop
cmp
iret
clc
add
cld
shlb
dec
popa
ficoms
add
and
mov
jl
xor
adc
mov
into
mov
addr16
fst
mov
js
testl
imul
push
rolb
mov
inc
jns
push
dec
mov
in
scas
mov
jg
inc
stos
push
add
fs
jg
sbb
adc
enter
sub
pop
clc
mov
mov
ror
ljmp
cmp
test
mov
mov
jno
inc
loopne
mov
pushf
xor
pop
icebp
insb
sarl
sbb
sub
cmp
int3
popa
fdivl
inc
cld
push
mov
pushf
xor
pop
icebp
insb
sarl
sbb
sub
cmp
int3
popa
fcomip
cld
sar
lea
cwtl
mov
add
icebp
sarl
mov
or
aam
lock
inc
aam
mov
mov
lods
add
dec
loope
pop
mov
cmpsb
jnp
xchg
dec
sarl
outsb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ffreep
xor
add
nop
xchg
lods
notl
xchg
add
push
sbb
gs
adc
shlb
cltd
add
adc
inc
movsl
and
mov
gs
push
popl
shrb
aaa
xor
cmp
dec
stos
scas
movsl
dec
xor
rcrl
mov
cltd
popa
mov
sarb
jne
inc
xchg
push
test
outsl
pop
mov
sub
rclb
add
mov
stos
cmp
jne
pusha
lods
mov
add
adc
call
pop
xor
and
ds
xor
dec
mov
sub
gs
std
add
rorb
lods
and
adc
test
pusha
test
dec
mov
inc
loopne
mov
insb
ljmp
subl
enter
js
imul
jne
mov
push
mov
icebp
int
sub
sub
pop
hlt
adc
sub
insb
repz
add
fdivr
jg
mov
shlb
mov
xchg
shl
in
jno
std
jo
lcall
add
invd
pop
shlb
addl
pop
shrl
xor
adc
add
addr16
imul
mov
xor
inc
cs
lds
out
in
imull
mov
mov
push
mov
movb
push
mov
gs
adc
shlb
cmc
add
adc
inc
movsl
push
push
mov
gs
adc
shlb
aaa
mov
insl
push
fistpl
pop
sbb
mov
push
out
cmp
push
subl
mov
adc
dec
cltd
dec
push
xor
pop
adc
dec
fldcw
jno
jns
xor
test
mov
aam
invd
cmpsl
jae
jae
fmull
jno
push
pop
add
push
pop
addb
inc
lds
stos
scas
in
pop
mov
and
rorb
pop
in
mov
cmp
loope
inc
stos
js
lret
jmp
cli
push
adc
jge
repnz
sub
pop
and
push
outsl
ret
insl
outsl
rcll
inc
mov
mov
inc
fistl
js
sub
popf
arpl
push
adc
aas
insl
pop
inc
dec
xchg
icebp
in
sub
pop
das
stos
or
cli
subl
push
mov
imul
lret
add
or
sbb
jle
pop
and
push
cmc
cmp
in
or
mov
sbb
mov
lods
repz
push
das
fs
xchg
aas
mov
fisubrs
and
das
lcall
add
cmp
xlat
inc
lahf
fisubrl
or
adc
or
add
add
pop
jge
add
scas
lea
lahf
and
jg
and
and
dec
dec
jmp
adc
aad
in
dec
int
bound
in
cmp
ret
sbb
lret
add
std
les
or
stos
mov
rcrl
or
dec
loop
xchg
lea
cltd
push
lea
inc
ficoms
clc
rcr
jo
sub
mov
mov
insb
dec
sbb
sub
mov
ficomps
loope
cmp
sub
pop
jns
inc
push
jae
cmpsl
xchg
lds
fldt
les
or
xlat
push
mov
inc
add
enter
sub
pop
pushf
test
int3
test
jb
push
adc
in
push
add
iret
mov
loop
inc
outsl
add
test
add
pushf
add
mov
mov
stos
and
xor
add
clc
call
in
fiadds
in
rorl
add
or
out
rcll
ss
sar
les
std
in
int
mov
les
aam
push
inc
sub
rcl
lcall
and
jae
add
gs
jp
mov
add
push
int3
and
or
xchg
lahf
stos
stos
cmp
dec
imul
or
insb
lds
push
or
add
pushf
and
insb
push
and
cli
xor
mov
fwait
lcall
pop
cli
mov
xchg
mov
jne
xorl
lahf
int
jle
orl
and
push
ja
xchg
and
jae
mov
mov
addr16
mov
imull
das
arpl
mov
push
xchg
lods
add
mov
es
xchg
mov
popf
call
sub
add
jo
mov
or
cwtl
addb
in
adc
mov
lret
xchg
jle
outsl
and
cwtl
popa
mov
or
mov
xchg
mov
sub
sbb
sarl
pop
loop
mov
rclb
je
xchg
leave
out
cmp
mov
push
repz
imul
leave
mov
out
movsl
outsb
addl
inc
in
cmpsl
icebp
jae
fwait
mov
mov
pop
flds
cmc
fs
jo
cmp
imul
jno
xor
rorl
pop
sub
and
sbb
dec
push
addb
push
cmc
imul
je
push
cwtl
xor
and
test
mov
adc
or
push
fcmovb
xchg
adc
and
imul
sahf
clc
sbb
fistpl
sub
push
push
add
addr16
jns
daa
std
out
cltd
out
aam
rcll
shl
add
xchg
insb
jle
push
push
mov
es
fxch
sahf
push
push
leave
or
xchg
or
stc
mov
or
jb
jl
stos
adc
push
insb
adc
jg
sub
mov
dec
xchg
dec
pop
mull
cs
sbb
add
ljmp
hlt
or
sbb
stc
cmpsl
aaa
dec
push
push
add
and
push
push
cmp
dec
je
sbb
mov
push
or
mov
pop
in
inc
push
push
imul
push
inc
mov
imul
scas
aas
sbbb
int
sub
in
loop
test
jne
mov
dec
ret
leave
loope,pt
xchg
dec
jle
jmp
frstor
pop
push
inc
lds
jle
mov
mov
xchg
adc
cwtl
sbb
bound
sarb
jo
cwtl
xor
xor
nop
xchg
and
and
push
movsb
adc
icebp
xchg
mov
mov
andl
dec
repz
pop
js
push
mov
cmp
ror
xlat
cwtl
push
arpl
cmpsl
and
mov
aas
sbb
xor
sub
arpl
push
mov
mov
sahf
out
inc
pop
xchg
sub
lods
aam
stc
mov
xchg
and
int
bound
and
es
aaa
add
add
inc
scas
addr16
dec
addb
testb
xchg
cmp
fwait
call
dec
sub
cmp
movb
lock
dec
xlat
shlb
pop
rolb
fs
mov
adc
push
add
xchg
das
push
rolb
gs
hlt
in
lock
je
ds
mov
in
movsl
jle
fidivrl
push
xchg
or
mov
sahf
fucomip
add
mov
hlt
sbb
push
jb
nop
jns
lahf
addr16
nop
inc
lahf
xchg
xchg
pop
mov
addb
loopne
push
inc
xor
cmpsb
jg
mov
jecxz
pop
cmp
cld
push
xchg
jo
or
push
lds
inc
jg
xor
test
push
icebp
iret
xor
nop
daa
jp
aaa
xchg
shll
cmpsb
in
inc
or
movsl
jmp
aas
cwtl
imulb
or
gs
xchg
in
pop
inc
mov
inc
xchg
mov
gs
lahf
or
outsb
ss
rorb
in
jp
mov
xchg
sbb
les
aas
fldt
pop
orb
ret
dec
push
negb
sub
dec
mov
cmp
shrb
ret
adc
sub
notl
out
cmp
js
and
enter
mov
xlat
ljmp
aam
mov
add
ficoms
push
subb
sahf
push
mov
fistps
lret
mov
inc
rorl
mov
add
adc
out
jmp
adc
scas
andl
clc
lret
mov
mov
dec
lahf
or
mov
cltd
jnp
sarl
ja
cmp
lea
jl
insl
push
icebp
sarl
mov
push
aas
out
jne
inc
cli
popf
mov
fwait
out
mov
push
sbb
push
or
ja
out
mov
test
push
inc
add
test
cli
jmp
adc
sbb
sub
nop
mov
clc
push
and
push
jne
dec
int
shl
pop
popa
sub
sub
sbb
lds
lea
pop
cmpsb
pop
inc
loopne
cmovge
rorb
inc
insl
mov
loop
addl
xchg
jg
pop
aam
cli
ss
xchg
adc
sub
xchg
push
out
push
rorb
ret
cmp
push
out
mov
cmp
xor
icebp
mov
mov
ss
shlb
and
mov
cmp
stc
adc
jle
pushf
sub
inc
xchg
push
inc
loope
sbb
call
hlt
out
dec
enter
pop
repz
repz
bnd
cltd
sti
mov
ds
and
sub
movsb
test
iret
push
xchg
out
cmp
flds
adc
adc
and
push
jo
out
mov
sbb
mov
dec
inc
mov
in
sti
aaa
inc
lcall
mov
das
mov
cmp
inc
and
in
or
leave
xchg
dec
roll
xor
cmp
xchg
lea
dec
adc
cmc
movsb
repnz
mov
test
jne
outsl
pushf
and
fiadds
test
lea
loope
int3
cmp
mov
das
dec
loope
sub
add
out
adc
cmp
inc
int3
loope
fwait
or
dec
mov
fldcw
fwait
add
pop
jb
aam
das
ja
test
outsb
cmp
and
imul
xor
shrl
adc
mov
mov
push
pop
adc
jg
cld
fstl
and
inc
das
cmpsl
push
dec
xor
fstpt
mov
sub
or
mov
mov
mov
cltd
cmp
push
pop
std
push
pop
pop
push
cltd
pop
xchg
je
orl
shl
and
xchg
stos
xchg
jb
addr16
pop
jg
jmp
push
push
bound
push
hlt
push
dec
test
in
ret
xchg
add
xchg
xchg
sub
mov
lret
jl
popf
jne
xchg
outsl
add
adc
mov
xchg
mov
movsl
add
dec
push
and
lds
mov
mov
in
cmp
mov
mov
mov
shl
jnp
push
ljmp
aad
arpl
push
test
pusha
test
and
push
inc
cwtl
stc
xchg
daa
mov
sbb
aam
shl
in
imul
ds
dec
push
xchg
jae
loop
xlat
dec
sbbb
lret
mov
setbe
rcl
push
sahf
mov
sbb
mov
add
sahf
pop
fwait
repnz
stc
test
fldenv
js
lock
cltd
and
adc
xor
xor
jb
xlat
imul
jo
jmp
cmp
stos
lahf
jb
push
inc
add
dec
or
sar
add
lea
lahf
sbb
call
add
rcrb
xor
lret
jmp
xchg
jp
mov
jecxz
call
test
jbe
imul
xchg
out
mov
sahf
aam
fsub
inc
xchg
and
test
pusha
js
mov
test
in
sub
jno
negb
xchg
nop
add
mov
cmp
shll
mov
or
xor
dec
push
xor
dec
xor
xchg
imul
sub
lret
push
scas
arpl
adc
and
push
call
xchg
stos
dec
jnp
cmp
inc
xor
leave
repnz
ror
dec
mov
lahf
sbb
lcall
pop
cltd
push
jae
das
ss
or
add
mov
mov
xabort
add
sbb
sahf
xlat
testl
arpl
add
xor
stc
add
ss
fs
pop
xor
insl
pop
loop
sahf
arpl
add
or
push
lock
push
pop
inc
cmp
add
jno
aam
push
mov
js
jns
cltd
pop
xor
cwtl
shl
lahf
mov
dec
ljmp
addr16
xor
arpl
into
xchg
jecxz
mov
adc
mov
mov
nop
gs
aaa
ret
pop
xchg
or
and
rolb
enter
jae
jge
or
out
or
ficoms
push
jno
imul
mov
add
inc
inc
inc
mov
push
int3
in
adc
insb
test
ja
sbb
imul
or
and
xorl
loope
jbe
inc
sbb
adc
inc
add
stos
jo
dec
add
jo
stc
stos
dec
sti
xchg
inc
mov
xchg
call
icebp
sub
add
lcall
scas
adc
fucomip
mov
mov
xor
shl
in
jns
in
xlat
mov
mov
dec
fidivl
push
outsl
fdivp
insb
cmpsb
inc
cmpsb
fs
testl
lods
pop
sub
mov
lock
popf
cmovbe
push
nop
aaa
inc
mov
mov
mov
mov
lea
mov
dec
jno
in
lock
add
jne
lock
in
shrl
arpl
outsl
cmp
and
mov
aad
lods
add
outsb
push
rolb
out
scas
int3
adc
lods
push
or
adc
adc
ror
sbb
push
sub
sub
sub
mov
mulb
lds
imul
inc
pop
adc
ljmp
mov
loop
into
push
mov
xor
pop
push
sahf
xor
cmp
push
out
adc
lret
mov
and
mov
movsl
jns
into
mov
fadds
out
add
inc
pop
movsb
daa
pop
imul
push
int
inc
lret
mov
mov
mov
push
movntq
and
lea
mov
enter
or
or
test
fildll
aaa
xchg
pop
out
aad
xchg
push
lds
adc
ret
mov
std
repz
xchg
ret
mov
es
add
dec
xor
xchg
sub
sub
xlat
mov
adc
mov
call
sbb
xchg
or
xchg
nop
or
lea
imul
mov
icebp
loope
test
and
push
into
dec
xchg
shlb
jle
cmp
jle
adc
add
aad
lods
push
adc
push
addr16
daa
jae
xor
inc
dec
and
xchg
ss
pushf
xor
lea
push
mov
into
jle
pop
xchg
in
test
mov
int
cmc
daa
mov
inc
cmp
adc
sbb
add
popa
data16
or
lea
and
incb
inc
jecxz
cmp
lcall
les
dec
jae
cmp
add
push
popa
add
into
js
push
inc
mov
xorl
jp
cmp
fcomps
rorl
cmp
sub
es
fidivs
sbb
andl
out
test
adc
mov
dec
mov
addr16
scas
pop
xor
movsb
lods
push
jnp
inc
daa
pop
cmpsl
sub
push
testb
popf
icebp
addr16
pop
icebp
jmp
push
push
popa
lcall
jo
das
xlat
xor
lea
int3
add
sub
nop
inc
das
sqrtps
daa
clc
sbb
mov
fcomps
jne
lods
hlt
and
xor
inc
mov
data16
adc
or
mov
arpl
jmp
insb
stc
jno
mov
sub
jbe
lds
shl
pop
lret
jbe
jb
xchg
test
mov
mov
pop
pop
push
jns
repnz
xchg
std
inc
fisubs
mov
jno
daa
pop
inc
jecxz
imul
jo
and
mov
push
insb
idiv
repz
push
add
xchg
mov
data16
fdiv
dec
jbe
lea
fwait
lcall
xchg
mov
dec
sub
nop
mov
les
push
je
cld
inc
and
sahf
ja
test
sbb
filds
dec
cmp
clc
lcall
das
xchg
data16
sbb
push
cmp
sub
test
out
ds
outsb
mov
dec
inc
ljmp
cmp
shrb
sub
iret
xlat
sbb
ret
push
dec
loope
pop
xor
pop
inc
pop
pop
orl
int
adc
dec
cmc
addl
test
insl
xor
inc
inc
mov
cmp
inc
subps
sub
outsb
ja
adc
sub
pop
xor
mov
aad
add
pop
xlat
outsl
out
fmuls
or
mov
out
push
adc
test
jmp
rorb
cmp
sbb
inc
roll
jb
stc
dec
mov
inc
int3
int3
notl
sbb
cmp
and
pushf
add
out
mov
push
cli
jns
jge
push
mov
fmul
add
jbe
and
dec
mov
xchg
imul
mov
or
jbe
push
mov
or
addl
mov
cmp
int
out
xorl
pusha
mov
stos
xchg
jno
pop
mov
sbb
lea
mov
pop
cmp
andb
gs
xchg
sub
mov
adc
adc
cmp
mov
test
mov
mov
add
jb
mov
push
xchg
addr16
or
xorl
sbb
lretw
js
cmp
and
loopne
push
inc
jmp
lods
mov
lahf
jno
test
test
xchg
pop
jno
mov
std
or
ja
xchg
fs
or
pop
test
push
sbb
mov
cwtl
fcompl
pop
mov
pushf
test
mov
loopne
cmp
and
aas
sub
adc
insb
dec
lods
or
dec
sbb
stos
shrl
fs
push
cltd
stos
stos
push
lcall
jmp
or
mov
aas
xchg
outsl
scas
or
mov
cmp
out
daa
mov
cmp
out
fcoml
xor
jge
or
std
push
adc
xchg
out
cmp
iret
stos
pushl
push
xor
and
in
inc
cli
pop
ret
js
mov
enter
arpl
sbb
in
xchg
sub
js
js
loop
mov
mov
outsb
or
and
mov
pop
fidivrl
xorl
dec
xchg
ret
cmpsb
stos
pusha
adc
outsl
ljmp
mov
xchg
outsl
jnp
enter
fsts
mov
add
icebp
aam
xchg
jge
lods
jg
or
out
in
stos
xorl
out
or
jo
jmp
inc
out
xor
cwtl
mov
xchg
and
stos
xchg
sbb
shlb
icebp
loope
jg
sti
cmpb
and
mov
in
xor
sub
ret
mov
icebp
aas
dec
jae
add
scas
fmull
bound
add
iret
xor
or
cwtl
lahf
cwtl
addl
inc
cli
mov
and
popf
jne
mov
jb
out
test
insl
adc
or
dec
clc
test
push
stc
xchg
pop
test
jae
pop
loope
aam
inc
adc
push
and
cli
out
xchg
pop
nop
add
jl
mov
ss
std
mov
test
xor
fs
enter
cli
pop
adc
outsb
call
popf
lcall
jle
les
lcall
mov
lret
lret
mov
popa
stos
mov
add
jmp
sub
in
lcall
xor
fnstenv
das
cmp
fwait
lret
mov
aas
add
outsl
stc
nop
scas
dec
outsb
sub
fcoms
sbb
in
mov
xchg
cld
mov
xchg
andb
mov
imul
adc
pushf
in
pop
pop
cs
adc
dec
jo
scas
push
dec
add
mov
out
push
imul
lret
clc
arpl
jne
fidivl
pop
fcmove
sub
and
or
idivb
or
aam
add
inc
nop
jg
aad
fldl
out
out
lock
and
sub
sub
jno
scas
mov
loope
in
neg
lods
lcall
add
adc
sbb
imul
xchg
pop
sahf
or
mov
inc
jo
add
scas
push
mov
mov
movsl
jo
mov
fsubrl
adc
mov
add
gs
fmull
pop
dec
arpl
mov
pop
fnstenv
lock
stc
fisubrs
or
idivb
fsts
mov
xchg
push
mov
inc
xchg
scas
in
pop
jmp
adc
sub
es
lods
sarb
mov
std
push
dec
pop
not
scas
imul
push
pop
dec
mov
mov
lods
add
cs
jae
pushf
loop
adc
out
mov
sahf
out
add
ret
mov
add
inc
add
sub
push
mov
aaa
inc
pusha
xor
jp
dec
add
xor
into
movsb
pusha
add
hlt
mov
and
loopne
or
dec
adcl
cwtl
in
mov
test
lea
das
sbb
es
ss
dec
mov
inc
ret
dec
stc
popf
fsubl
pop
mov
hlt
rcrl
icebp
andl
mov
adc
sti
push
xor
pop
mov
push
inc
push
aad
push
sbb
inc
pop
dec
cld
outsb
jae
mov
std
xor
and
out
sbbl
fwait
add
mov
shr
push
xor
cmc
lea
add
jmp
scas
mov
xlat
or
dec
pusha
mov
enter
pop
and
xchg
sbb
mov
jecxz
xor
aaa
push
adc
xor
jae
xchg
add
imul
xor
pusha
test
inc
movsl
push
push
mov
gs
adc
shlb
cmc
add
adc
inc
movsl
push
push
mov
gs
adc
shlb
xchg
js
adc
inc
gs
push
js
mov
andb
loopne
lock
and
adc
shlb
filds
lea
lret
das
pushf
repnz
aad
stos
xor
lea
xchg
cmp
sub
pop
int
fnstsw
std
pushf
or
lods
cmp
cld
insl
in
jge
or
cmp
sub
pop
scas
dec
or
pushf
adc
sbb
fcoml
cld
jne
addr16
das
cmpsl
dec
fmuls
pop
mov
mov
mov
in
je
pop
lds
pop
repz
ss
loope
adc
cmpsb
jo
jae
inc
movsl
push
rcr
int3
mov
mov
mov
dec
mov
in
cmp
lcall
push
pop
sbb
pop
sub
test
adc
pop
stos
sbb
mov
xor
in
fldl
inc
or
dec
and
or
cmp
push
frstor
insl
in
mov
sbb
call
int3
push
sub
add
sub
inc
mov
pop
mov
int3
mov
pop
test
adc
pop
or
lods
daa
fmull
pop
cld
je
fs
or
cmp
sub
pop
aad
lret
insb
cltd
stc
push
ljmp
add
insb
in
in
clc
imul
sbb
sbb
ljmp
cmp
or
cld
inc
fldcw
stos
mov
push
cwtl
sti
dec
mov
dec
leave
dec
cltd
and
pop
cld
insl
in
jge
lea
pop
int
fnstsw
std
pushf
or
lods
cmp
cld
insl
in
jge
lea
pop
int
fnstsw
std
pushf
or
shrl
or
cmp
fcomip
add
inc
mov
mov
hlt
inc
rcr
imull
jae
cvtpd2pi
mov
inc
push
pop
stos
and
push
divb
inc
cltd
and
nop
xor
cmpsl
or
int3
sub
mov
imulb
push
es
ficomps
insb
sbb
arpl
ret
lea
dec
mov
jmp
and
mov
enter
mov
je
mov
xorb
icebp
inc
push
ret
cmp
pop
lahf
rcrl
pop
shr
dec
repnz
or
shll
dec
sbb
into
stc
aas
insl
sahf
mov
mov
push
xlat
mov
cmp
lock
dec
add
js
jmp
inc
les
and
push
mov
pop
dec
rclb
shrl
inc
adc
jns
mov
jo
andb
cmc
cltd
ljmp
das
pusha
push
fldcw
enter
std
imul
xor
rclb
imul
push
sbb
push
mov
inc
mov
and
lret
adc
sub
outsb
jnp
inc
jg
popf
mov
je
push
push
test
mov
xlat
inc
or
pop
adc
fidivs
xor
cld
leave
mov
test
roll
js
and
repz
cltd
and
push
movsb
mov
pop
fxch
stos
jae
sub
dec
and
dec
lods
jae
sahf
das
shl
pop
outsb
adc
call
jge
stc
in
dec
andl
mov
mov
mov
cwtl
fwait
sub
in
xchg
mov
xchg
xchg
stc
jbe
xchg
jae
add
mov
cmp
out
fldenv
or
loope
mov
lret
aam
mov
jmp
add
repz
and
shll
addr16
mov
and
hlt
rcrb
sbb
push
jge
push
push
mov
push
pop
imul
lods
mov
inc
mov
cmp
lock
sahf
xchg
clc
pop
adc
dec
out
mov
jae
inc
cli
cwtl
push
dec
aad
testb
inc
jge
inc
cmp
jne
jge
insb
mov
xor
pop
and
rorb
mov
movsb
push
jo
stc
cmp
sarl
inc
xchg
xor
lahf
cmp
add
pusha
push
scas
das
popa
push
lcall
test
push
adc
imul
imul
add
cli
add
dec
ja
cmp
pop
popl
pop
xchg
push
movsb
sub
xchg
test
pushf
xor
cmc
cmpsb
push
mov
notl
adc
push
sub
and
xor
adc
mov
or
out
rcrl
in
jne
pop
pop
mov
fs
xchg
icebp
cli
mov
or
pop
cld
movsb
cmp
push
inc
aaa
xchg
push
jo
stc
adc
addr16
cltd
das
or
mov
icebp
mov
cwtl
and
in
sub
xchg
std
xor
cmp
mov
stos
mov
add
addr16
out
outsl
data16
inc
add
arpl
cs
mov
inc
inc
xor
pusha
lds
stos
fistpll
push
pop
jb
and
jb
lods
testb
push
adc
lcall
jecxz
lret
mov
scas
pop
lret
lea
jg
js
add
xchg
cld
or
lcall
cwtl
jne
push
push
jp
sahf
cmc
fdivrs
xlat
push
arpl
imul
jmp
daa
ljmp
mov
andb
lret
shrb
test
lds
addl
outsl
insb
push
movsl
lcall
dec
fadd
jp
inc
ds
jnp
push
subl
fadd
icebp
adc
sub
jp
fildll
fisttpll
and
shr
mov
sbbl
jbe
xchg
cmc
cmp
cmp
jl
inc
cmp
jmp
push
in
pop
xchg
outsb
movsl
mov
loop
jnp
aaa
mov
dec
xchg
js
pop
in
hlt
lcall
js
or
and
loope
loopne
lods
sbb
gs
cmp
mov
ror
mov
jb
sub
pop
cltd
out
pop
loopne
mov
mov
cwtl
xor
rcll
cmpsl
xchg
adc
mov
pop
pop
sbb
inc
push
push
movsl
lahf
pusha
add
movsb
adc
lret
imull
mov
leave
xchg
mov
cmpps
ljmp
fdivrl
rcll
scas
cmp
dec
or
and
push
sub
or
cmp
mov
cltd
repz
leave
xor
push
decl
or
in
jmp
je
test
mov
or
mov
xchg
xor
aad
push
jo
mov
inc
das
xor
negb
testl
or
xchg
ds
mov
dec
scas
addr16
nop
movsb
adc
nop
mov
mov
test
insl
push
or
inc
push
pushf
scas
adc
dec
or
dec
xchg
add
dec
sar
jae
sub
into
jmp
add
out
scas
mov
cwtl
popf
stos
call
xchg
leave
inc
add
test
into
enter
hlt
cld
jge
fs
sbb
mov
sub
mov
xchg
add
cld
rcrb
adcl
cmp
sarb
dec
loope
mov
xor
cmp
ja,pn
repnz
clc
mov
testl
cmp
aam
sbb
sub
mov
jb
js
cld
xchg
adc
insb
test
mov
je
push
cltd
dec
or
mov
sub
jp
sbb
sbb
in
aaa
dec
push
mov
add
mov
sub
xchg
ljmp
sbb
and
sub
xchg
fnsave
loopne
orl
fs
xor
mov
lcall
push
add
and
gs
dec
cmc
adc
adc
push
adc
inc
cwtl
in
mov
js
out
adc
shll
stos
jne
hlt
cmpsb
xor
mov
jae
lea
push
pop
das
sbb
out
mov
fistl
scas
push
jge
pop
sbb
imul
and
mov
cmp
add
dec
cli
pop
repnz
xor
dec
jae
daa
jecxz
pop
in
xchg
daa
in
enter
dec
hlt
lea
clc
sbb
xchg
loop
shrl
ljmp
pop
cwtl
add
cli
add
ret
pop
pop
mov
fnsave
add
push
cmpsb
test
out
lods
ret
cmp
pop
adc
int3
pop
rclb
addr16
das
ljmp
jmp
popf
xor
sub
test
popf
pop
push
mov
add
push
dec
push
dec
sub
mov
adc
ret
mov
jns
in
sub
lods
cmpsb
pushl
jns
les
out
fwait
in
or
scas
adc
mov
xor
outsb
lahf
or
shlb
fnstenv
dec
ljmp
jmp
pop
inc
ja
ljmp
pop
inc
lods
negl
rcrb
mov
cli
mov
jp
mov
lock
sub
mov
iret
cli
xor
xor
mov
loope
jg
push
mov
mov
add
dec
in
pop
lods
cmp
mov
lods
rclb
insb
jno
push
pop
adc
mov
mov
aas
lea
pop
lcall
and
pusha
mov
cmpsb
sub
imul
mov
dec
jmp
ret
dec
rcrb
jge
jg
cld
jne
adc
mov
int
add
pusha
fsubp
cmpsl
les
test
das
lcall
addr16
lea
aaa
mov
push
insb
and
sub
outsl
xlat
sti
xchg
mov
cltd
adcl
icebp
loope
stos
or
dec
adc
mov
aaa
push
fmuls
push
mov
lcall
orb
mov
jl
icebp
out
push
add
fidivs
je
sub
mov
es
mov
clc
dec
mov
repz
cmpsb
jo
cld
dec
inc
dec
push
inc
lds
adc
cmp
mov
mov
sub
popf
in
dec
shrb
mov
or
adc
lods
in
jle
push
sub
push
jb
dec
hlt
and
jp
mov
inc
dec
mov
pop
jl
stos
adc
jle
mov
and
pop
mov
add
adc
orl
adc
adc
xor
cmp
fsubl
jl
scas
std
mov
sub
push
push
push
sbb
lret
inc
stc
pop
ret
sbbb
scas
jge
pop
inc
dec
push
or
in
fisubrs
sbb
sbb
mov
out
imull
inc
insb
jl
mov
jl
dec
and
adc
popa
sbb
test
fucomp
out
stos
jl
lcall
and
sbb
imul
pop
ret
inc
call
jg,pn
pop
int
sub
inc
popa
xchg
leave
fisubrs
std
mov
aad
pop
pop
testl
lods
aam
dec
lods
ja
cmp
jg
bound
xchg
inc
hlt
pop
jbe
add
pop
push
loopnew
xor
jg
test
mov
sub
mov
inc
mov
in
pop
rdmsr
xchg
leave
xor
mov
pop
ret
fldt
xor
jge
or
lods
nop
jno
sbb
ljmp
and
mov
test
scas
pop
inc
in
imul
insb
mov
mov
push
sahf
call
cli
dec
and
lea
and
movmskps
inc
and
add
in
jl
mov
mov
adc
pop
cld
sbb
cld
ret
xor
cmp
xchg
das
out
jae
je
and
les
pop
inc
repnz
lret
fsubrs
popa
mov
mov
int3
shrb
gs
mov
cli
rclb
xchg
cmp
push
leave
xchg
pop
testb
sbb
shr
insl
sub
or
pop
arpl
enter
adc
nop
imul
repz
leave
add
movsb
and
sub
iret
jns
test
aaa
in
push
mov
mov
mov
and
sbb
inc
fwait
sbb
add
mov
cmp
adc
aaa
dec
lods
test
repnz
and
jo
jg
mov
jbe
mov
xchg
out
xchg
cmp
lcall
jbe
les
or
mov
jle
and
xchg
dec
pop
cmp
pop
rcrb
fldl2e
cmp
xchg
cmp
inc
psubw
sbbb
out
fsub
addl
push
sub
or
mov
cpuid
test
dec
jnp
dec
xchg
cmp
daa
cmp
add
mov
cli
dec
mov
sub
pop
shrb
mov
insl
jp
sti
test
faddl
inc
mov
data16
mov
outsb
and
jmp
popf
dec
cmp
jbe
in
fiadds
repnz
cmp
mov
jg
inc
jne
lahf
dec
out
imul
mov
pop
dec
in
data16
cld
into
stc
jb
fisttpll
sub
je
aad
ffree
es
ljmp
sbb
xchg
adc
jae
mov
ljmp
leave
add
lds
mov
add
popa
inc
and
pop
jmp
movsl
adc
cmp
mov
enter
icebp
nop
popf
cmpb
mov
mov
pop
js
cltd
push
cmp
sub
mov
or
and
inc
repz
and
cld
add
inc
pop
mov
divb
adc
dec
rol
or
jne
mov
movsl
inc
mov
clc
mov
fildl
xor
outsb
add
fsubs
icebp
adc
jnp
popf
into
cmp
pop
js
pusha
outsb
popf
sbb
mov
cmp
shll
or
xor
push
xchg
lds
cmpsl
dec
lret
movsl
jnp
xchg
lahf
fldenv
sarb
jne
ret
sub
flds
iret
push
cmp
add
in
shlb
incb
shlb
sbb
testb
pop
cmp
add
aam
jecxz
test
aam
inc
mov
divl
les
adc
push
hlt
jno
mov
cltd
inc
xchg
lods
mov
roll
jnp
xchg
lcall
xchg
mov
push
pop
lods
and
jne
data16
adc
xchg
and
lcall
push
mov
xchg
lret
divb
fs
sub
dec
into
push
inc
jns
loope
and
rorb
xor
movzbl
out
push
cwtl
mov
testl
xchg
cmc
xchg
xlat
stc
xchg
xchg
or
iret
xchg
mov
in
xchg
sub
adc
mov
fucomi
or
add
mov
fs
sbb
or
push
imul
aaa
scas
jp
mov
andl
jmp
push
ret
jle
cmp
cmp
mov
xchg
imull
xor
test
shl
lds
js
sbb
loopne
push
xor
sti
and
mov
push
mov
adcb
out
leave
outsb
push
int3
inc
mov
inc
into
xor
pop
mov
int3
int3
lahf
mov
aad
gs
inc
gs
rorl
dec
add
fsubrp
mov
out
xor
push
aas
lods
mov
fwait
or
or
or
mov
cmp
xchg
daa
add
sbb
dec
mov
repnz
mov
jne
mov
mov
mov
xchg
in
push
dec
ret
or
out
neg
out
jae
icebp
lcall
jne
gs
pop
loop
cltd
lea
iret
jle
es
push
xor
jl
mov
or
lcall
and
jne
cmp
xchg
scas
and
fcmovnu
xor
or
xor
shlb
dec
cmp
jae
imul
stos
jecxz
rsqrtps
insb
cltd
imul
mov
pop
pop
push
subb
jg
enter
mov
sbb
movsb
or
in
or
sub
add
mov
jg
inc
data16
push
mov
inc
mov
sti
xchg
pop
push
rolb
lods
outsb
add
daa
and
xor
lret
inc
cld
ja
jg
sub
mov
jmp
into
mov
scas
xchg
jnp
pop
in
fwait
pop
jmp
inc
popa
adcl
xchg
jnp
adc
jns
dec
xor
sti
push
addr16
aam
push
movsb
lret
push
sbb
test
pop
sbb
cld
push
cmp
jle
gs
shr
scas
jae
cld
sub
cmc
pushf
cmpsl
cmc
xchg
inc
int
mov
xor
lcall
mov
out
xor
rcrl
sbb
inc
jae
adc
je
negl
cs
jp
es
push
sbb
lahf
cmp
xchg
add
cmc
jo
or
mov
adc
frstpm(287
js
rcr
or
inc
mov
xor
call
jecxz
or
mov
js
xorb
scas
fdivrs
or
sbb
add
dec
notb
xchg
sahf
push
fistps
lahf
cmpsb
xchg
popa
loopne
test
mov
adc
out
mov
cmpsb
push
mov
jmp
fldcw
les
and
push
mov
das
scas
loop
fsub
sti
sub
or
pushf
mov
mov
fcomi
pop
arpl
mov
dec
push
gs
jmp
ret
fistl
fisubrl
pop
dec
repnz
sahf
out
jnp
or
fcmovnbe
es
gs
fs
add
jl
dec
ret
into
lods
dec
xchg
pop
sahf
xlat
push
pushf
adc
dec
xor
js
imul
sub
outsb
shl
jg
pop
and
jp
mov
or
cli
mov
gs
add
sub
or
and
or
je
fs
aad
jmp
fmuls
pop
or
cmpsb
jg
inc
cwtl
ficomps
mov
sub
in
xor
cltd
and
xor
int3
lea
rcrl
addr16
adc
pop
fisubrs
cmp
xor
dec
xchg
outsl
incl
test
ret
adcl
cmp
sti
aas
add
ss
test
pop
mov
icebp
and
and
mov
sub
je
cli
sbb
inc
pop
pop
adc
imul
push
dec
nop
jmp
jne
dec
daa
inc
add
sbb
mov
cmp
shlb
push
dec
fldenv
enter
xor
fisttps
jns
lods
cli
aaa
or
stos
inc
mov
sahf
lea
in
pop
or
sbb
mov
or
nop
repz
pop
cwtl
call
testl
and
jns
cmp
xchg
in
sub
into
cmp
cmc
loope
test
pop
xchg
push
sarb
add
xchg
and
sti
ja
loopne
jbe
sbb
subb
dec
sub
in
lcall
mov
lea
shrl
jae
cmp
add
loopne,pn
mov
call
pop
pop
ret
pushf
movsb
and
sbb
idiv
dec
or
call
inc
mov
scas
stos
fisubrl
sahf
sarb
sbb
shr
filds
adc
jg
fadds
mov
mov
push
push
jb
pop
daa
jne
xchg
inc
jns
ss
and
mov
and
pop
hlt
sub
inc
loopne
outsl
or
fnstcw
cmp
push
mov
popa
fwait
das
cmp
lret
mov
xchg
lods
push
sbb
and
adc
icebp
test
xor
cmp
mov
xor
jle
daa
mov
stos
and
loope
xchg
cmp
aaa
xchg
mov
xor
stos
ja
push
mov
and
fsubrs
in
lea
into
mov
dec
mov
lret
adc
add
sbb
mov
or
stos
mov
jecxz
add
push
shll
mov
adc
test
ret
test
movsl
xchg
sbbl
sbb
adc
repz
jl
xor
add
stos
inc
daa
jle
test
outsl
bound
cmp
lds
add
dec
pop
mov
and
outsl
push
mov
mov
xchg
idivl
or
fdivl
jb
mov
push
xchg
loopne
mov
dec
lods
cmp
mov
mov
jns
insl
arpl
hlt
iret
cli
sbb
xor
dec
jmp
mov
stos
push
mov
xchg
cmp
mov
rcr
push
loopne
mov
insb
xchg
mov
aam
inc
or
or
scas
jo
cmp
and
jae
scas
rorb
inc
jo
add
mov
mov
push
arpl
out
adc
gs
addl
mov
pop
push
or
lret
insb
mov
es
ljmp
pushf
iret
int3
je
mov
rcr
xchg
in
pushf
mov
aaa
inc
aad
jb
xchg
repz
ja
idivb
inc
sbb
sbb
das
jecxz
fcompl
mov
jmp
push
xlat
mov
jg,pn
rorl
adc
jle
or
js
push
into
mov
fcmovne
pop
test
adcl
addl
scas
pop
call
outsb
pop
xor
cmpsl
daa
into
loope
mov
cmc
xchg
shlb
push
mov
loopne
sbb
pop
inc
jbe
xchg
icebp
mov
push
dec
int
mov
out
shlb
in
pop
mov
lds
xchg
push
lds
xchg
add
mov
dec
sbb
arpl
xlat
shrl
lds
dec
int
addr16
jbe
cmp
clc
test
cld
test
aad
adc
adc
es
mov
adc
stc
cmp
or
push
scas
mov
jmp
xchg
mov
push
xchg
mov
dec
xchg
loop
lea
sub
mov
setbe
lock
pop
cmpl
or
jp
int
js
stos
push
cmp
lock
sbb
pop
aad
xchg
jb
loop
pop
ret
xor
xor
and
mov
iret
dec
mov
das
loop
inc
cmp
icebp
mov
mov
jnp
aaa
and
xchg
das
xchg
and
shrb
mov
out
ss
inc
inc
roll
in
inc
pop
gs
xchg
pop
or
loope
lret
ja
add
lahf
add
dec
mov
xchg
test
mov
aad
push
cmp
mov
aam
loope
mov
loop
mov
out
adc
lods
ficoml
fistpl
dec
jae
clc
shll
fmuls
add
out
mov
push
jbe
jmp
popf
lods
je
push
inc
or
js
dec
xchg
xchg
dec
cltd
subb
sub
pop
adc
cmpl
fildll
mov
or
ds
add
cmp
cld
insl
in
jge
lea
pop
int
fnstsw
std
pushf
or
lods
cmp
cld
insl
in
jge
lea
pop
int
fnstsw
std
pushf
or
lods
cmp
cld
insl
in
jge
lea
pop
int
fnstsw
insb
std
pushf
or
lods
cmp
jl
insb
jge
repz
xchg
lods
sub
sub
and
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
int3
aam
shlw
fwait
jl
xchg
sub
jp
push
add
add
add
add
pop
or
dec
add
add
add
add
add
add
add
add
xor
in
add
add
push
add
inc
add
add
add
sbb
add
add
push
add
jge
cld
add
add
add
add
add
inc
add
add
sahf
add
add
add
add
sbb
hlt
add
add
add
add
cwtl
add
add
mov
cmp
mov
add
add
add
add
push
add
add
add
imul
testl
in
add
sbb
add
inc
add
add
add
add
add
data16
sub
repnz
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
pop
add
add
sub
push
add
add
mov
lahf
add
add
add
pop
aad
add
and
or
inc
add
add
jmp
rolb
add
xchg
add
xchg
add
xor
flds
loop
mov
je
push
add
cld
add
add
add
add
add
add
add
add
add
add
add
pop
imul
mov
lret
add
add
add
add
add
add
add
add
pop
add
add
repnz
add
add
add
add
sub
lcall
add
pop
add
add
or
flds
flds
pop
add
add
add
add
add
add
inc
add
push
add
add
add
pusha
add
pop
add
add
add
add
add
add
xor
flds
addl
add
add
pop
add
add
add
add
add
add
add
add
lahf
add
repnz
iret
add
add
add
add
add
add
add
add
pop
pop
add
add
testl
push
add
jo
repnz
add
add
loopne
or
push
add
add
add
add
add
add
add
add
add
add
push
pop
adc
cmp
lret
add
and
or
cwtl
add
add
add
flds
repnz
add
add
into
add
loope
addl
lahf
add
add
loop
je
inc
add
add
add
add
add
add
leave
add
add
push
pop
xchg
add
test
add
push
add
add
cmp
cmp
test
add
lods
add
inc
add
add
add
add
add
add
add
dec
add
data16
add
push
add
add
add
loope
test
add
add
add
add
add
add
add
inc
add
add
sub
mov
insb
add
add
add
add
add
add
add
imul
orl
ljmp
add
add
add
add
add
add
add
add
add
add
mov
add
add
loopne
xor
add
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
fnstcw
fstpt
int3
xchg
mov
in
pop
popf
xor
adc
pop
test
inc
lods
jmp
cmp
inc
cltd
push
cld
cmc
jo
mov
mov
add
fs
dec
jae
fmul
arpl
pop
aam
test
or
sub
repnz
and
and
out
xchg
mov
mov
mov
in
mov
mov
pop
into
push
and
and
lock
lret
dec
popf
outsl
mov
jp
xor
popf
jne
sbb
cwtl
dec
shr
xchg
in
ret
adc
adcl
aas
mov
ljmp
shrl
jecxz
inc
cmp
mov
adc
test
das
cld
cmp
jecxz
mov
inc
pop
pop
xchg
xchg
dec
daa
aam
push
inc
in
jnp
cmp
inc
popf
sub
mov
pushf
pop
sub
and
rorb
out
pop
stos
fidivl
in
addr16
into
push
call
sub
push
inc
fwait
push
lods
ficompl
orl
fisubrs
lods
rcrl
push
xor
pushf
test
pop
test
cltd
cmp
inc
aad
jno
in
or
pop
cld
ja
cmp
mov
lds
lods
push
xlat
jecxz
ret
jbe
cld
push
sti
sbb
lahf
xor
repnz
mov
in
cs
cmc
data16
loop
pop
adc
cmp
xchg
outsl
ret
adcl
adcb
les
out
inc
lret
sbb
nop
pop
pop
inc
xchg
mov
pushf
xchg
cs
sbb
aaa
fistps
add
rol
sbb
loope
cmpsl
cmp
inc
lods
dec
mov
dec
mov
in
scas
sahf
out
test
cmc
leave
lret
jecxz
pop
push
insl
mov
xor
lret
and
inc
xor
jne
pop
xor
xchg
mov
aas
sub
aaa
push
xchg
xor
jmp
jmp
jno
xchg
jae
mov
shrb
push
or
pop
push
sbb
popa
add
jl
and
insb
rcrl
pop
cld
jl
xor
stos
mov
cs
dec
adc
adc
movsl
mov
fnstsw
or
sbb
loop
stos
mov
xchg
negl
mov
enter
lea
mov
pop
xchg
jecxz
sahf
daa
js
jns
cmpb
push
das
add
fcomip
into
cmpsl
adc
push
icebp
cmc
fidivs
shll
xor
loopne
fst
push
lds
sub
int
pop
push
test
je
cmp
loopne
pop
mov
dec
inc
xchg
out
rclb
mov
mul
int3
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
