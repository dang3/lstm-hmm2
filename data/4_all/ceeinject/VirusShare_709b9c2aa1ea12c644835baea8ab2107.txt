call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rcr
ss
mov
mov
orl
dec
outsl
pop
sbb
jle
outsb
das
xchg
fisttps
out
ficomps
out
orl
outsl
pop
xor
movd
outsb
das
inc
jns
or
gs
shlb
bound
dec
sbb
or
dec
fistps
cli
cmp
outsb
sub
cmp
or
cmp
pop
fs
or
mov
adc
inc
push
lcall
aas
fisttpl
fists
mov
into
mov
xchg
mov
jae
jbe
dec
hlt
pop
pop
icebp
pop
sarl
mov
jmp
call
ret
sti
sti
out
fisttps
in
and
ficompl
cs
rorl
dec
subb
push
sbb
jae
inc
add
and
push
fidivrs
rcrl
sbb
insb
sbb
inc
mov
aas
push
shlb
jl
iret
pop
scas
out
negb
aas
test
dec
dec
cmp
jle
lods
push
mov
mov
lahf
mov
in
pop
pushf
out
jge
push
and
jle
or
cli
xchg
rolb
lret
jg
dec
aas
outsb
fimull
aaa
pop
and
dec
sub
cltd
push
mov
mov
mov
scas
fstl
ds
cmp
inc
pop
sub
pop
das
pop
in
lods
mov
sbbl
out
scas
push
pop
push
dec
jg,pt
outsl
pop
pop
dec
movd
outsb
das
sahf
fisttps
out
ficomps
out
scas
push
pop
push
dec
jg,pt
outsl
pop
pop
dec
movd
outsb
das
sahf
fisttps
push
xor
xchg
clc
mov
nop
pop
adc
sti
lret
mov
fstpl
mov
in
jg
and
mov
mov
mov
ret
cld
ret
and
jns
sti
push
sub
xor
lds
sbb
aaa
xor
add
stc
pop
or
popf
imul
mov
or
jle
add
int
rol
fsubs
xor
push
scas
jle
pop
cmp
cmc
jb
push
movsb
pop
clc
sub
mov
jbe
jne
push
stos
xchg
fucom
or
inc
inc
inc
in
sbb
add
mov
and
test
daa
outsb
fistpl
fcmovb
popa
pusha
jg
xchg
movsb
sbb
out
lea
mov
pushf
fadds
lcall
inc
sbbl
aam
cmp
and
cmp
lea
mov
or
pop
lea
jb
das
inc
jnp
aam
add
int3
pop
mov
xchg
and
shl
cmp
fstpt
inc
mov
scas
imul
cbtw
in
js
xchg
sbb
in
pusha
jmp
and
dec
dec
pop
out
lret
sbb
mov
cmp
insb
mov
insb
hlt
cmpsb
mov
jg
pusha
fidivs
add
inc
imulb
jb
xor
inc
xor
mov
fistps
xor
jmp
mov
pop
xor
mov
mov
enter
push
pop
and
scas
mov
mov
jo
ret
or
xchg
and
das
lds
je
fldt
and
jnp
cwtl
lea
lret
push
inc
push
pop
mov
lea
fnsave
or
inc
inc
and
mov
dec
cltd
xor
adc
lods
aam
sar
xchg
rol
jo
inc
test
insb
mov
in
ret
and
cwtl
adc
aam
xchg
nop
push
sub
lock
ficomps
leave
insl
adcl
jmp
aas
int3
sub
dec
add
test
pusha
movsb
push
jge
mov
sbb
les
inc
xor
mov
outsb
mov
test
pusha
les
int
mov
pop
cs
test
subl
add
mov
xchg
xchg
dec
cs
cmc
pop
adc
incb
and
xor
in
xor
mov
cmpsb
inc
shll
scas
adc
cmpsb
imul
stc
mov
push
ds
mov
subb
out
jp
pop
cwtl
push
cmpsb
push
int3
mov
adc
in
sub
mov
or
xor
outsl
stos
aam
sub
icebp
loopne
jmp
adc
mov
out
pop
stos
into
push
cmp
xlat
mov
std
xor
orb
mov
in
xor
sbb
mov
aaa
and
cwtl
outsb
lret
pop
data16
fstpl
xorb
sub
and
cli
and
add
rorb
dec
mov
push
outsl
seto
adc
pop
mov
sbb
lret
mov
je
hlt
ja
jle
mov
adc
push
lock
fcomps
lahf
nop
stos
push
push
xor
aaa
insl
clc
and
push
cwtl
cmpsb
cmp
sub
addr16
jne
jo
add
aas
pop
pop
int3
fcmovnbe
push
pop
adc
mov
pop
addb
xchg
sub
shl
mov
xor
mov
rcrl
test
insl
out
cmpb
mov
sub
sub
hlt
fwait
pop
je
test
inc
fxch
gs
test
mov
mov
std
out
mov
sbb
shl
dec
inc
imul
in
pusha
ret
in
jp
push
mov
ret
test
repz
inc
ret
dec
test
and
or
add
push
sub
adc
push
cmp
sbb
jle
in
mov
cmpsb
cmp
call
leave
add
mov
sbb
fidivs
daa
dec
mov
rorb
pop
cmp
test
adcl
lret
mov
mov
xlat
int
mov
ficoms
ds
test
pop
insb
xor
call
xor
mov
fnstsw
sbb
jge
imul
clc
cmp
fldenv
jl
push
pusha
scas
fsts
cli
add
mov
sub
paddq
inc
test
pop
mov
das
data16
push
push
xchg
insl
cld
divb
lret
sbb
std
and
aad
and
aas
jle
call
or
ret
lahf
lahf
cld
mov
sbb
jo
jne
dec
fimuls
xchg
xlat
faddp
sbbl
psllw
xchg
mov
mov
subl
sbb
shr
or
sub
jne
xor
popf
lods
fwait
and
shr
mov
pop
cwtl
arpl
mov
sub
sbb
aaa
cmpsb
outsb
add
dec
push
fnstsw
sbb
and
cmp
mov
jns
notl
mov
test
jns
mov
sahf
fcmovu
mov
idiv
mov
xchg
loope
rcl
push
adc
cmp
lcall
repnz
jno
out
or
js
or
pushf
cmpb
add
cmp
jno
bnd
xchg
sbb
dec
pop
xor
testl
and
xchg
movsl
jns
in
hlt
push
jne
bound
ljmp
daa
mov
pop
xchg
xchg
pushf
outsl
inc
pop
out
push
pop
clc
jmp
add
clc
bound
dec
ret
test
loope
shlb
daa
xchg
mov
psllw
mov
lcall
dec
cltd
inc
mov
js
sub
push
push
push
movsb
das
sub
sbb
cld
xor
test
cmp
fisubrs
xchg
cltd
enter
int
stc
outsb
lods
movsl
lock
push
hlt
push
in
ret
stos
inc
shll
or
mov
mov
stos
js
fcoml
jae
mov
loopne
cmp
xchg
addb
dec
cmpsl
sub
xor
aam
mov
xor
ret
and
fiadds
scas
rcrb
stos
xchg
test
sub
mov
cmp
sub
mov
xlat
into
and
fcoml
mov
mov
movsb
mov
pop
jg
popf
es
cmp
or
inc
into
ss
lcall
and
ret
mov
mov
pop
inc
xor
adc
sbb
push
adc
iret
cs
repz
xor
bound
sti
push
xchg
jo
inc
or
sbb
xchg
adc
cmpsb
jbe
mov
mov
leave
stc
test
shlb
adcb
clc
mov
outsl
shll
fcomps
xor
call
daa
es
pop
movsl
mov
cmp
and
xor
stos
daa
sub
jg
xor
or
jle
push
and
data16
aaa
mov
mov
xchg
popf
leave
in
sbb
pop
aad
stc
lcall
mov
push
loopne
addr16
xor
test
sub
out
pop
dec
xchg
imul
push
mov
sahf
push
test
rcrb
test
xor
dec
insb
add
ret
int
xor
dec
daa
mov
xchg
sti
aas
out
clc
jnp
mov
or
xor
dec
push
inc
cmp
inc
repnz
jno
in
movsl
clc
xor
jle
mov
shll
push
aad
inc
rcr
ret
js
jae
insb
pop
adc
daa
dec
pop
mov
data16
push
scas
mov
test
sbb
adc
mov
mov
lea
vpaddw
xlat
pop
add
xchg
test
bound
inc
jbe
std
dec
daa
adcl
lcall
pop
test
mov
xor
pusha
dec
mov
popf
and
add
pop
cmpsl
cmp
adc
mov
clc
stc
inc
test
lods
push
adc
adc
cmp
jmp
jnp
mov
cmp
enter
idivl
pop
sbb
dec
jle
mov
nop
pop
mov
fmul
flds
loop
fstl
sub
enter
pop
xchg
adc
sub
mov
icebp
sbb
pop
fcmove
stc
imul
adc
cltd
mov
jp
in
fcmovnu
leave
sub
cmp
add
data16
lret
dec
sbb
fcomps
and
add
cwtl
sub
push
out
and
fnstsw
mov
cli
add
mov
loope
sbb
fdivrp
xchg
pop
jae
enter
xor
pop
shrb
movsl
cmp
sub
stos
jecxz
imul
jp
add
mov
pop
mov
sbb
idivb
push
js
jnp
cwtl
testb
cli
fmull
bound
push
sti
sbb
je
insl
sbb
lret
int3
sti
int3
es
lods
das
sbb
mov
xlat
roll
mov
fldenv
pop
movsl
xchg
rol
imul
add
and
lcall
sub
mov
xchg
out
mov
lea
push
fsubrp
add
mov
push
mov
sub
cld
xchg
call
loope
xchg
mov
inc
dec
ret
movsl
movsl
lcall
mov
out
xor
xchg
xchg
out
add
jno
loop
mov
out
lret
jns
mov
rcrb
pop
mov
jo
dec
nop
dec
addb
jb
push
push
sbb
pop
inc
inc
in
jne
xorl
jno
mov
lock
sbb
add
arpl
mov
mov
cwtl
mov
jp
arpl
and
inc
in
pop
mov
popf
sbb
clc
dec
nop
sub
pop
fcomps
pop
pop
aas
dec
in
xchg
fsubl
cmc
mov
and
cmp
mov
pop
mov
dec
xchg
jae
mov
jg
movsb
cwtl
rcll
or
xor
scas
and
xor
loope
inc
loop
pusha
and
jne
mov
std
adc
scas
mov
shlb
pop
and
push
jmp
in
arpl
jns
out
arpl
es
es
add
jns
cmp
and
jo
mov
push
jae
pop
das
mov
ljmp
loope
pop
jae
xchg
rcrl
lahf
sub
shrl
xor
enter
xor
fs
jno
daa
mov
mov
add
jbe
stc
fidivrs
pushf
dec
icebp
dec
leave
adc
ja
mov
inc
push
push
xor
test
or
and
and
in
mov
cmp
pop
inc
fdivrl
add
sub
xchg
mov
icebp
cwtl
repz
loop
pop
xchg
mov
jecxz
mov
dec
xchg
js
xor
add
addb
std
loope
iret
and
cmp
jo
sbb
dec
lcall
and
mov
sbb
inc
andl
mov
mov
push
lahf
dec
imul
test
fs
jnp
aad
jmp
inc
and
dec
xchg
push
or
xchg
jbe
mov
add
jmp
pop
jbe
adc
stos
add
into
lock
int
jns
std
addb
pushf
and
mov
jae
adc
bnd
popf
loopne
push
lea
enter
jne
test
jl
pushf
imul
xchg
pop
inc
pusha
mov
in
and
add
mov
scas
ja
sbb
mov
das
leave
pop
repz
bound
jb
lret
add
cmp
insl
ljmp
xor
jb
decb
xor
test
and
insb
dec
enter
fmulp
mov
adc
lock
out
ret
inc
xchg
icebp
das
xchg
mov
stos
pop
cmp
add
or
xchg
loopne
sub
pop
mov
cmpsb
fs
and
aaa
xor
xchg
shl
push
outsl
lcall
dec
out
int3
inc
mov
ret
ror
dec
fimuls
inc
ds
xor
in
insb
pop
xchg
mov
xor
ja
and
add
nop
test
dec
jge
pusha
loope
repnz
cwtl
xchg
lahf
lret
pop
xchg
aad
insb
cwtl
flds
xchg
adc
shrl
fadd
mov
jge
mov
inc
pop
xchg
mov
jle
pop
je
sti
inc
add
jmp
fmuls
popf
jp
jecxz
popf
jle
ret
out
dec
jl
fldenv
sub
aam
imul
cld
mov
imul
sub
clc
push
add
mov
mov
test
dec
inc
mov
jns
push
out
rcrl
in
pop
hlt
cmp
inc
mov
dec
xlat
sub
cmp
inc
xchg
sub
pusha
sti
not
or
jg
daa
cmpsb
pushf
pop
lods
loopne
pop
xorl
aad
clc
out
xchg
scas
jmp
es
insb
aas
sub
mov
stos
mov
xor
jmp
fiadds
or
or
jbe
xchg
movsb
loopne
adc
mov
fmull
ljmp
push
push
movsl
les
dec
jno
roll
dec
cli
stos
mov
push
je
mov
mov
xchg
int
insb
cmp
pop
sti
pop
call
sbb
fisubrl
jb
push
sbb
xchg
clc
xor
lcall
xor
aaa
es
xor
notl
lods
dec
mov
out
std
jne
xor
sbb
xchg
or
in
imul
faddl
popa
jo
popa
sub
nop
push
xor
dec
pusha
xor
cmp
or
lea
mov
or
sbb
and
popf
fsubl
jp
xchg
mov
push
aaa
push
cmp
push
roll
mov
rorb
add
sahf
xchg
add
and
and
shll
arpl
cld
shrb
sahf
adc
repnz
mov
testl
imul
aas
repnz
sbb
sub
and
divl
cmpsb
add
or
xchg
pop
adc
aad
pop
nop
dec
orl
stc
xor
inc
xchg
add
int3
aam
mov
adc
xchg
dec
inc
xchg
adc
jbe
cs
repz
iret
push
add
cmpb
popf
filds
xchg
ss
stos
gs
lahf
out
sbb
repnz
mov
cld
lahf
push
xor
minps
dec
cmc
fcmovu
xchg
push
jns
jns
mov
xlat
movsb
sub
fldenv
mov
adc
repnz
inc
movsl
fcoml
mov
insl
nop
stc
clc
test
cmpsb
out
xlat
dec
push
out
jae
stos
push
addr16
or
in
shll
ffreep
push
mov
sbb
popa
xchg
imul
imul
dec
inc
pop
lea
jmp
loop
mov
cwtl
sbb
pop
sub
ljmp
stos
mov
aas
dec
dec
sub
pop
scas
test
push
loop
push
bound
outsb
sub
enter
mov
aaa
clc
cmp
or
sarl
mov
out
bound
push
scas
pop
xor
cmc
xchg
lret
mov
jns
adc
push
mov
mov
pop
mov
lea
push
push
fdivrp
lahf
stos
int
mull
aaa
jl
insl
scas
lret
push
add
test
sar
fwait
cs
ja
in
stos
fldl
mov
mov
mov
movsb
xor
outsb
push
mov
push
or
xor
les
andl
cmc
iret
mov
loopne
push
inc
push
push
data16
cmp
std
sti
mov
sbb
loop
cmp
sti
aas
dec
jns
mov
ftst
insb
mov
lcall
ds
rcl
pop
xor
sub
fs
ds
cmp
popf
xor
pop
test
add
inc
ss
xorb
add
mov
aaa
ds
sub
xor
add
into
lods
es
xchg
sub
dec
mov
arpl
test
test
jne
sbb
mov
mov
mov
push
push
loopne
sarl
pop
imull
clc
jmp
inc
cwtl
pop
jp
and
in
or
iret
fcoml
lea
sahf
push
rcrb
push
and
or
ds
sbb
dec
popa
fcom
pushf
mov
add
cmp
cmpsb
sti
xchg
movsb
push
cmpb
fildll
xchg
xor
cwtl
xor
sbb
or
and
jle
dec
or
adc
bound
dec
int3
in
jbe
hlt
pop
out
in
mov
or
push
es
fwait
sbb
cmp
adc
dec
jae
mov
ror
repnz
mov
pop
push
lcall
dec
aam
daa
dec
jp
xchg
adc
sub
test
pop
push
in
add
inc
xchg
pop
daa
cmp
daa
push
adc
testl
fstpl
mov
daa
xor
dec
xchg
push
fldcw
in
adc
cmp
xorl
int3
lds
xchg
out
jne
mov
sub
stc
frstor
icebp
adc
adc
pop
lahf
jnp
sti
stc
sub
xchg
sub
dec
repnz
pop
add
mov
int
sete
sbb
fwait
inc
add
add
cltd
iret
lea
movsb
jae
lds
push
pop
and
and
cmp
sub
sub
aad
rol
adc
pop
xchg
xchg
test
mov
push
jmp
push
push
popl
jge
popa
mov
je
subb
jmp
sahf
pop
jecxz
and
fcoml
in
xchg
jmp
mov
out
stc
test
clc
rorl
or
mov
xchg
mov
inc
out
sbb
cmp
cmpsb
cld
pop
xor
lods
sub
rcrl
int3
iret
hlt
call
push
pusha
fisttpl
jns
mov
sub
jae
pop
lods
test
mov
mov
cwtl
jg
fwait
das
cli
mov
imul
sbb
outsl
int3
jl
ljmp
data16
and
pop
mov
aad
mov
mov
int3
fsts
jae
dec
mov
aas
enter
lods
and
push
mov
leave
cwtl
cmp
mov
xor
cmp
in
jae
or
push
shll
push
outsl
notb
das
xor
mov
jae
sti
sbb
lods
mov
xorb
mov
loop
or
xchg
mov
mov
hlt
rorl
mov
aaa
mull
adc
cli
fsubr
mov
enter
shlb
add
shlb
and
jle
lock
lds
loopne
push
jg
outsl
pop
int3
pushf
jmp
movsb
fiaddl
movb
enter
stos
jg
insb
xor
cmp
and
mov
xchg
adc
xchg
shrl
adc
mov
dec
jno
lods
or
sub
enter
xor
in
xchg
cli
inc
add
loop
jnp
lds
loope
lcall
and
and
in
cmp
jno
jg
fldl
push
jmp
adc
repnz
repnz
mov
rclb
mov
test
call
loopne
addb
addr16
inc
stos
sub
pop
es
pop
aam
mov
into
pushf
jo
inc
clc
in
sub
shl
shll
mov
inc
and
dec
mov
pop
xchg
jle
mov
int
cmp
lret
mov
or
mov
jge
gs
sbb
lds
popf
and
xor
sar
dec
cltd
cmpl
xchg
jmp
int3
mov
ljmp
std
sbb
lea
iret
fimuls
mov
js
mov
jmp
sarb
push
push
pop
jecxz
bound
pop
idivb
test
xchg
testl
add
mov
xor
inc
mov
jnp
pop
arpl
mov
cld
push
xor
jge
push
sub
loopne
aas
xchg
sub
adcb
out
ror
out
sti
mov
imul
sbb
fcomip
and
jl
sbb
insb
or
and
push
push
loope
mov
jbe
call
mov
jecxz
jo
push
dec
push
lds
loope
ret
icebp
data16
test
movsl
cmpsl
pop
call
dec
aam
mov
out
pop
mov
mov
sub
jmp
push
or
adc
pop
movsl
mov
cmpl
cli
sbb
jl
movsb
pop
pop
xor
pop
inc
mov
scas
cmp
push
mov
popa
push
iret
sub
lock
insl
dec
js
mov
push
or
sarb
push
sub
fdivp
sbb
imul
cmp
xchg
xchg
mov
popf
xor
add
iret
aaa
scas
or
movsl
iret
call
lahf
into
mov
push
dec
jg,pt
outsl
pop
pop
dec
movd
outsb
das
sahf
fisttps
out
ficomps
out
scas
push
pop
push
dec
jg,pt
outsl
pop
pop
dec
movd
outsb
das
sahf
fisttpl
jmp
lahf
lret
mov
push
dec
aaa
jg
pop
sbb
jp
pop
lret
xchg
mov
scas
ficomps
outsb
outsl
push
mov
sbb
addr16
ja
inc
xchg
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sahf
test
mov
hlt
movsb
jle
or
sbb
mov
cmp
push
pop
push
test
mov
dec
call
jle
mov
sahf
cmp
or
js
dec
pop
push
test
mov
dec
call
jle
mov
sahf
sbb
jp
jns
cmp
das
into
es
sub
push
icebp
loopne
cwtl
std
xchg
inc
dec
push
bswap
popf
dec
mov
sub
jne
pop
sti
xchg
xor
jg
dec
call
or
sti
pop
popa
negl
and
mov
pop
sahf
dec
loopne
js
cmp
lea
push
inc
dec
jo
push
js
int
loopne
in
push
pushf
push
mov
jb
mov
pop
scas
mov
cs
hlt
pop
repz
call
cmpsb
pusha
push
jno
mov
jmp
idivl
js
dec
add
movsb
cwtl
mov
xor
cmp
fcomi
xor
out
dec
decl
test
mov
dec
call
jle
mov
sahf
cmp
push
xor
pop
stc
inc
mov
or
mov
mov
push
sub
shrl
mov
xor
fstpl
jbe
sub
mov
pop
fstpt
push
lods
jns
push
loope
js
xor
dec
cli
push
std
shufps
enter
sub
sbb
push
pop
push
test
mov
dec
call
jle
mov
sahf
cmp
push
pop
push
test
shlb
pushf
push
pop
sbb
mov
sub
mov
cli
lock
mov
dec
sbb
dec
fcom
and
jl
addr16
xchg
xor
ja
push
push
cli
dec
pop
stos
call
and
leave
shlb
cmpsl
mov
sbb
fs
out
iret
sub
mov
push
mov
and
add
xorl
mov
cmp
xchg
push
popa
lahf
dec
cmp
mov
cs
push
loop
mov
lods
testl
sub
lcall
lods
lods
cmpsb
inc
xchg
jbe
sti
in
mov
das
push
fidivrl
mov
inc
loope
xorb
pop
push
jp
jmp
fsubs
sub
mov
imul
sbb
cmovnp
mov
push
repnz
mov
clc
mov
lds
movsb
mov
pop
mov
clc
mov
mov
mov
sub
mov
and
jo
mov
sahf
jle
jge
inc
mov
push
xchg
cmp
dec
roll
mov
and
pop
xor
fisttpl
out
sub
loop
adc
jae
sti
jb
sti
xchg
fisttps
pop
mov
inc
xchg
test
std
ss
inc
into
sub
dec
test
add
inc
aam
mov
xchg
in
enter
lds
xchg
mov
xchg
test
jge
clc
mov
insl
add
mov
mov
sahf
int3
in
or
jg
outsb
lret
adc
ficomps
or
shlb
pop
pop
mov
jbe
xchg
add
push
pushf
pop
xchg
xlat
cli
sub
jbe
cmpsb
aaa
mov
inc
repnz
jecxz
pop
and
push
lret
push
sbb
mov
dec
push
popf
mov
mov
add
mov
push
mov
adc
dec
enter
jne
mov
aam
fnstcw
mov
stc
push
add
frstor
loop
sbbb
je
mov
push
jo
lods
push
mov
insb
fs
icebp
lret
dec
jne
inc
mov
cmp
push
dec
scas
xor
aam
mov
push
xlat
out
jbe
test
xchg
jnp
xor
add
adc
sti
sub
testl
push
inc
mov
adc
add
pop
sub
or
add
jp
add
out
cmpsl
add
or
aaa
push
or
sub
jo
test
sub
pop
xorb
push
dec
xchg
push
pop
pop
mov
mov
ficompl
fisttpll
xor
xchg
jg
inc
cli
aaa
aas
js
pop
adc
push
mov
outsb
pop
jne
inc
test
ror
xchg
xchg
mov
add
add
popf
stos
cmpsb
pop
cwtl
mov
adc
fnstsw
nop
cmpsb
pushf
dec
shll
rolb
mov
xor
lcall
pushf
out
and
xlat
mov
xor
pop
fsub
push
sbb
jns
cwtl
cli
es
xchg
cmpsl
repz
push
mov
or
mov
sbb
cwtl
popa
mov
jbe
inc
mov
enter
movsb
arpl
arpl
mov
movsl
push
out
push
test
popf
inc
mov
in
mov
cmp
mov
aas
scas
pop
mov
pop
imul
push
cltd
cmc
out
dec
in
xchg
outsb
clc
out
pop
outsl
andb
outsl
lahf
cmp
rorb
push
mov
leave
clc
movq
loopne
pop
movsl
das
mov
jge
mov
inc
stc
aad
xchg
mov
popf
ret
daa
add
push
add
test
fucom
xor
mov
mov
dec
sbb
xchg
out
and
sbb
and
dec
out
je
mov
fcmovu
xor
fs
add
fldl2e
jle
andl
movsl
mov
js
les
into
jae
sub
ret
mov
adc
sub
xchg
pop
adc
push
mov
cltd
adc
sub
add
adc
add
jmp
sbb
sahf
add
xchg
pop
push
xor
aad
das
jecxz
inc
push
lock
mov
ret
push
lea
pop
push
sbb
jbe
jle
inc
test
jne
ja
cs
cltd
lea
mov
adc
dec
jo
fiadds
insb
stos
and
cld
testb
pushf
neg
les
push
jle
xor
xchg
out
inc
aad
stos
xchg
inc
xor
pop
push
or
jmp
or
mov
popa
or
dec
cli
ja
pop
xchg
das
aam
rorl
jle
insl
cmp
in
pushf
inc
dec
lea
cmp
ss
adc
and
and
std
out
lea
sbb
mov
adc
les
cmpsb
pop
cmp
out
or
scas
xor
pop
mov
fsub
rcr
mov
leave
icebp
dec
sti
ret
mov
inc
scas
jbe
and
dec
sub
xor
imulb
xchg
aaa
jle
xchg
push
xchg
push
idivb
cwtl
lods
push
push
xor
outsl
push
stos
pop
loope
ficoml
mov
outsl
divb
dec
out
fidivs
aas
test
push
push
jge,pn
lahf
scas
rcrl
push
sub
and
ljmp
ret
dec
cmp
dec
mov
sbb
fistps
push
out
test
mov
cmpsl
in
push
aam
lcall
sub
push
adc
push
push
scas
jp
or
repz
jno
pop
loop
mov
cmc
pushf
ljmp
mov
bound
cld
lret
imul
push
mov
andb
call
jnp
lds
xchg
aad
insl
gs
dec
int3
xor
or
push
sbb
xor
divb
enter
out
aas
cli
mov
into
repnz
mov
pop
mov
push
outsb
out
pop
mov
call
movl
js
cli
aam
inc
dec
dec
clc
es
xchg
add
lods
lea
sbb
push
push
push
jmp
shll
push
into
frstor
add
add
jg
cvtdq2ps
mov
add
fildll
ljmp
test
pusha
sti
lcall
movsb
pop
mov
pop
into
sti
movsb
sub
lahf
dec
nop
stc
jmp
or
mov
pusha
scas
lods
jecxz
call
enter
test
xchg
fimuls
rclb
sahf
inc
lahf
sub
test
lods
fsubrl
cmc
stc
mov
push
pusha
xor
sub
xchg
mov
std
pop
xchg
lds
sub
cli
and
or
cmpsb
mov
adc
inc
or
ljmp
clc
jns
sbbb
adc
ret
sbb
out
orl
push
mov
push
clc
imul
js
iret
fistps
rorb
jno
testb
call
out
mov
mov
jle
sbb
enter
push
or
popa
mov
shrb
int
arpl
in
pusha
ret
or
dec
jb
inc
mov
cwtl
mov
jmp
pop
pop
xchg
mov
add
popf
mov
add
push
or
in
mov
out
fdivrp
push
or
sar
mov
pushf
mov
data16
xchg
pop
mov
sarb
and
cmp
ret
movsb
xorps
mov
cmc
dec
pushf
fincstp
cs
cs
stos
jg
xor
out
pushf
mov
ret
jb
mulb
jo
or
xor
cmp
lods
adc
inc
or
insb
inc
xor
sbb
cmpsb
mov
lock
shll
cwtl
mov
push
adc
shlb
inc
xchg
jnp
push
rcll
lods
xchg
jb
mov
jo
mov
add
movhlps
out
mov
arpl
cmp
fisubl
xchg
pop
dec
sub
lds
fistpll
sbbl
icebp
stos
mov
mull
jb
leave
xor
mov
push
je
mov
dec
mov
and
sbb
shlb
adc
mov
mov
jae
sbb
mov
ror
fst
daa
pop
and
mov
repz
icebp
daa
sub
into
pop
outsl
xor
xor
fisubrl
data16
std
mov
sbb
loop
sub
xchg
xor
jecxz
adc
ds
xchg
cmp
gs
out
dec
pop
cmp
in
pop
mov
cmp
push
arpl
cmp
orb
xchg
jl
mov
insb
lahf
pop
lret
jle
adc
mov
add
xchg
dec
movsl
or
mov
popf
xchg
dec
std
inc
les
rorl
inc
pushl
outsl
mov
xor
cmp
jo
cmp
jae
and
ficoml
fdivr
ja
pop
dec
mov
pop
fwait
mov
fimull
ljmp
xor
mov
pop
orb
imul
adc
adc
mov
and
mov
xor
hlt
pop
cli
and
std
push
into
push
and
loope
dec
and
mov
ja
divb
adc
inc
mov
pop
mov
in
cmpsl
jae
or
out
in
stos
push
das
jno
sub
cmp
test
dec
cs
mov
arpl
cmp
or
sahf
cmp
mov
xorl
or
dec
dec
mov
sbb
push
mov
imul
call
pop
inc
sub
insl
hlt
fists
xchg
out
lods
cmp
bound
mov
push
test
movsl
sbb
call
rcll
adc
xorl
jne
ja
rcl
imul
sub
insl
sbb
push
out
insl
pop
inc
xor
das
in
mov
gs
xor
pop
and
fptan
push
movsl
adc
cmp
add
daa
mul
jo
rcll
jmp
xchg
in
sub
cwtl
mov
add
jg
xor
mov
push
or
daa
aad
arpl
lret
out
jae
stc
xchg
sub
int3
cmp
and
ret
mov
fcmovnb
cltd
cmp
lcall
daa
lret
sub
and
and
cld
pop
add
pop
js
cmp
mov
movzbl
out
movsb
push
jbe
xchg
add
dec
mov
test
xchg
outsl
push
imul
mov
mov
shl
jbe
adcl
lods
jge
mov
test
scas
inc
test
dec
inc
mov
inc
lods
ss
cmpsb
gs
cs
insl
mov
scas
fwait
out
std
mov
xor
sub
sbb
sbbl
and
test
sub
pop
movsl
int3
xor
push
stc
aam
adc
lods
pop
or
pop
sti
cld
inc
mov
xlat
test
mov
lock
xor
xor
je
aas
add
mov
insl
out
insb
rcll
sub
inc
pop
dec
xchg
cmp
mov
cltd
je
xchg
sub
inc
faddl
jns
mov
popa
xchg
cmp
arpl
loope
rclb
clc
mov
or
xchg
jmp
and
sbb
or
push
jbe
mov
cmp
loop
rcll
sbb
leave
sub
aam
in
or
imul
ljmpw
decl
data16
adc
push
out
ja
addr16
in
push
jae
dec
push
adc
clc
push
in
pop
divl
dec
jne
mov
lods
arpl
push
mov
es
mov
dec
sbb
fs
jmp
mov
xchg
add
sbb
scas
push
jo
clc
inc
sbb
adc
lea
add
mov
lret
adc
xor
cs
mov
jl
fistl
loope
pop
nop
mov
sbb
push
xor
call
push
xor
inc
xlat
xchg
adc
test
test
jo
adc
xchg
loopne
xorb
dec
add
jl
test
call
mov
lds
or
mov
loope
dec
sub
jnp
cmp
stc
icebp
movl
shl
sbb
test
mov
movsb
aam
or
xchg
xchg
cmp
inc
sub
mov
or
xor
addb
loopne
cmpsb
andl
add
xchg
lret
popa
add
xor
sub
add
xchg
xor
pop
mov
fists
sti
xor
add
imul
xor
popa
dec
into
pushl
mov
push
mov
pop
lea
mov
jnp
mov
cwtl
mov
jmp
mov
loopne
sbb
xor
rcrb
out
dec
out
cs
hlt
imul
mov
xor
and
sub
pushf
arpl
push
or
sub
shll
add
mov
negl
push
test
jmp
test
lock
jnp
ret
adc
adc
cwtl
and
jno
stos
jb
fs
jae
lcall
dec
xor
mov
cmc
cltd
pop
sub
pop
pop
dec
cmp
loop
dec
out
mov
test
inc
push
jo
adc
int
pop
pop
xchg
in
rorl
inc
lahf
adc
cmpsb
bound
fbld
fwait
xchg
jge
pop
jae
add
addb
das
pop
jns
aas
sbb
cmpsl
fucom
or
aam
fnstenv
andl
xor
dec
and
adc
xchg
pop
sahf
lcall
repz
xchg
add
shll
add
mov
mov
imul
lods
xor
enter
ja
notb
loopne
push
push
pushf
push
xchg
mov
add
adc
outsb
or
mov
pop
fcoml
in
sarl
mov
roll
pop
jge
adc
pusha
pop
xchg
cmp
cmp
push
sub
loopne
in
push
aad
or
xlat
ret
add
add
aas
and
cmp
sbb
or
sarl
jne
push
mov
push
iret
xor
xorb
mov
mov
in
add
lcall
adc
pop
ret
mov
fcompl
and
jb
or
adc
jmp
xlat
test
test
bound
lods
adc
int3
inc
cmp
pop
lret
ss
sbb
lahf
cld
add
jne
dec
cli
fidivs
scas
pop
repnz
jl
scas
push
pop
sbb
and
inc
pushf
fwait
out
popf
je
roll
and
sub
sub
xchg
fiadds
push
jge
bound
cli
and
jecxz
cmp
insb
jl
xchg
push
mov
lods
dec
decb
ret
sub
lret
outsb
xor
and
xchg
sub
jg
jns
lret
xchg
push
push
pop
lods
jle
icebp
inc
pop
mov
outsl
cmpxchg
daa
jns
adc
xor
sbb
jno
mov
pop
test
sbb
cmp
sbb
add
xchg
pop
mov
fstl
shrb
loope
pusha
test
stos
popf
mov
loop
pop
ficompl
scas
ret
in
add
dec
dec
jae
mov
in
inc
aad
sub
dec
popf
repz
or
je
aas
and
sbb
in
mov
mov
fildl
add
jne
arpl
mov
ljmp
push
lcall
insb
int3
pushf
dec
sbb
stos
xchg
out
jp
int
movsl
and
repz
push
and
fcmovb
sbb
data16
push
dec
lret
lods
jo
in
adc
jns
adc
bound
dec
shl
or
xor
mov
mov
dec
push
mov
sbb
ss
nop
jb
cli
jno
mov
sub
rorb
lods
loope
outsl
inc
adc
mov
add
test
ret
or
xor
xlat
fsubl
lret
loopne
push
stos
out
aaa
rorb
stos
cmpb
sub
movsb
arpl
sbb
xorl
aad
and
sub
xchg
or
repz
out
lods
add
loopne
stc
test
jno
hlt
inc
cmpsl
les
dec
sub
std
push
add
mov
movl
fs
test
enter
out
mov
adc
xor
out
mov
arpl
addl
cmp
xor
popa
addl
rcrl
pop
sbb
addr16
push
test
mov
ja
fwait
xchg
jnp
cmpl
jbe
push
dec
mov
out
iret
sarl
jle
xor
push
cmc
sub
add
into
js
mov
mov
sub
dec
icebp
js
daa
cmp
mov
mov
jbe
pop
cmp
loopne
stos
push
mov
pusha
roll
test
out
xlat
scas
aas
jns
xchg
ds
push
mov
mov
or
and
roll
imul
lret
dec
lock
clc
xchg
andl
sahf
mov
xchg
cmp
xchg
es
in
lret
pop
adc
sub
sub
repnz
ficomps
lock
popf
pop
jl
ljmp
int3
push
mov
inc
jp
mov
mov
shlb
lcall
jl
repnz
inc
mov
je
mov
dec
mov
dec
sahf
outsb
lods
clc
push
lea
out
out
popf
push
subb
cli
cmp
cmp
sbbl
lea
or
clc
sub
xor
xchg
push
pop
sbb
xor
push
jl
jnp
push
push
aas
jl
mov
mov
cmp
bound
insb
xor
sub
sub
lcall
test
es
pop
push
mov
inc
xor
adcl
or
js
arpl
fstps
lret
cmpsl
gs
fmull
cmp
gs
jno
adc
cs
loope
add
movsb
cmp
add
mov
add
and
push
mov
jbe
push
iret
dec
test
mov
inc
cwtl
mov
movsl
in
sahf
test
sub
and
adc
add
dec
fmul
add
sub
mov
sarl
xor
cltd
dec
cmpsl
sbb
lock
dec
movsl
push
sti
scas
xchg
je
shll
xchg
pop
xchg
cmpl
adc
mov
xor
push
lods
mov
jne
cmpb
xlat
enter
shrl
jns
pop
cmp
mov
aad
jmp
add
stc
add
orl
inc
shl
pop
mov
mov
jb
je
loop
hlt
jecxz
addr16
mov
fwait
push
fistpl
adc
and
jne
cwtl
and
mov
sbb
lret
cmp
ds
enter
repnz
xor
in
jne
pop
sbbb
adc
pop
mov
xchg
outsb
add
mov
xchg
and
push
mov
lods
add
pusha
xchg
or
or
jae
cmp
mov
lds
scas
leave
xchg
int3
sub
decl
mov
inc
dec
inc
or
sub
and
mov
or
xchg
fsubrs
test
shlb
jg
xor
cli
mov
push
xor
push
jg
loope
push
movsl
push
jmp
int
cmp
sahf
lock
or
jae
out
xor
jae
add
xor
add
ret
fs
pop
aaa
or
aas
cld
enter
aas
mov
add
mov
pop
or
cld
pop
cmp
jno
sti
int
mov
aam
inc
cmpsl
into
and
xor
xor
mov
cmp
in
aaa
push
lcall
inc
loope
sbb
mov
out
mov
xor
pop
mov
pop
jp
repz
jle
stos
cltd
icebp
cmc
into
inc
xor
jb
mov
testl
jno
push
fwait
shl
loopne
movsl
xchg
mov
or
push
mov
mov
outsb
fcoms
push
push
sbb
testb
sbb
shll
jg
jno
cmpsb
cli
mov
sub
out
sub
notl
jb
push
xchg
pushf
push
in
mov
aam
add
repnz
test
std
mov
cmp
in
lea
out
pop
repz
int
jmp
push
push
dec
jmp
out
incl
mov
sti
dec
cltd
repnz
jl
push
pop
jae
cmp
ljmp
int3
fistps
out
clc
cmp
pop
xchg
sbb
dec
mov
in
sub
cmp
sub
movsb
mov
inc
jl
sub
ret
inc
stc
xor
pusha
das
cmp
xor
jecxz
dec
out
leave
push
addr16
aam
adc
adc
cmp
sahf
es
jp
fstps
int3
xchg
lret
imul
and
iret
mov
mov
cwtl
dec
call
jle
mov
sahf
cmp
push
pop
push
test
mov
dec
call
jle
mov
sahf
cmp
push
pop
push
test
mov
dec
call
jle
mov
sahf
cmp
push
lcall
test
mov
dec
call
jle
mov
sahf
xchg
add
mov
xchg
mov
cmpsl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
int3
pop
fsubrl
jge
add
mov
in
js
insb
lea
cmp
int3
pop
fsubrl
jge
or
lods
cmp
pop
cltd
insb
std
jl
jle
push
lods
sub
cmp
aad
lds
jge
or
mov
cmpsb
int
fnstsw
adc
push
add
pop
lods
push
mov
fwait
dec
inc
sbb
push
setbe
adc
hlt
lea
int3
loope
cwtl
in
lods
daa
cld
cltd
outsl
es
lret
inc
cmp
js
jb
mov
faddl
mov
mov
fcomip
mov
push
lahf
shl
int
mov
adc
xchg
subl
jge
or
cld
scas
or
fcoms
int
int
pusha
xchg
fcomi
jae
cmc
cltd
lods
sarl
and
adc
mov
push
jmp
fnsave
je
add
lahf
or
jg
mov
sub
cmp
lods
mov
popf
and
ss
and
cld
lods
cs
adc
pop
int3
insl
cmc
jge
or
lods
cmp
inc
in
jne
lea
cmp
or
push
std
dec
sarb
fstps
xchg
sbb
imul
push
dec
movsl
das
mov
lahf
sbb
sub
cmp
cmp
leave
sbb
dec
mov
faddl
jl
or
lods
cmp
pop
in
insb
std
jl
or
sbb
sub
cmp
int3
pop
fsubrl
jge
or
lods
cmp
pop
in
insb
std
jl
or
sbb
sub
cmp
int3
clc
iret
imul
pop
mov
xchg
bound
mov
jg
scas
sub
and
inc
call
sub
xchg
sbb
fs
push
adc
and
jns
mov
mov
mov
lods
jecxz
add
xor
xor
jle
divb
add
out
mov
rcll
jl
fstpl
cmp
loopne
and
dec
fbstp
dec
pop
pop
push
loop
cmp
or
pop
jle
enter
je
loope
out
nop
inc
int3
fadd
dec
stos
pop
jo
jp
loope
imul
xor
dec
test
cs
jle
push
cmpsb
and
or
iret
bound
cmp
cmp
clts
sbb
sti
std
dec
push
xchg
xor
es
adcl
sub
and
out
data16
notl
out
shlb
mov
popa
cs
sbb
cmp
jp
popa
dec
les
pop
inc
ret
popf
inc
leave
xor
jne
stos
mov
jmp
andl
pop
test
or
push
push
flds
inc
test
lahf
mov
fidivl
pop
fildl
pusha
cmpsb
test
movsl
xor
cmp
in
and
sarb
shr
aaa
add
pop
and
shl
bnd
int
mov
cmp
pop
mov
adc
mov
fldenv
test
pop
mov
cmp
add
out
int3
pop
js
mov
aaa
mov
jg
lods
and
lahf
xorb
jns
mov
imul
popa
dec
lods
and
push
xchg
push
adc
sti
mov
popf
stc
mov
push
pushf
shlb
and
cwtl
dec
pop
push
jae
inc
mov
push
dec
jmp
test
insl
mov
icebp
pop
cmp
mov
dec
enter
hlt
ja
fistpl
sub
sahf
pop
mov
mov
pop
add
movl
cli
out
dec
fisubrl
mov
int
or
aas
jecxz
mov
add
jno
loopne
mov
js
mov
push
insl
hlt
adc
dec
jg
imul
lahf
loope
sub
cmpsl
adc
pop
in
mov
mov
mov
mov
cltd
sbb
mov
mov
lret
adc
xchg
push
pop
hlt
das
mov
inc
lret
in
push
and
push
inc
lahf
out
insb
insl
lret
outsb
pop
int
outsb
les
jecxz
jp
js
loopne
push
or
sarl
or
leave
sub
imul
sbb
inc
rol
sarl
or
adc
push
mov
jmp
mov
xor
leave
or
or
int
xor
je
repnz
dec
test
mov
jb
xor
mov
test
lret
hlt
in
and
lret
jl
fxam
popa
cmp
cmp
inc
js
inc
maskmovq
add
mov
push
int
fidivl
sbb
xchg
adc
rolb
mov
sub
cmp
int
aad
pop
pop
jl
dec
fcomip
iretw
lea
push
jg
dec
stc
xor
mov
hlt
mov
pushf
push
or
mov
jmp
or
icebp
ss
xchg
and
push
inc
shrl
dec
fistpl
sbb
or
pop
mov
das
mov
aas
cwtl
xor
push
mov
imul
insb
cmp
ja
dec
insl
hlt
popa
and
call
pminsw
and
sub
xchg
push
xchg
jne
xchg
mov
xchg
cwtl
cld
iret
mov
aam
add
pop
std
outsb
push
sbb
cmp
sub
xchg
lret
mov
fcoms
xchg
call
or
add
lock
push
cmp
mov
xchg
push
jecxz
lret
jb
adc
cwtl
bound
gs
sub
adc
mov
jmp
fst
in
je
mov
push
and
jecxz
sub
and
push
xchg
inc
mov
push
add
iret
fisubl
rorl
ret
stos
pop
sub
inc
cmp
movb
jns
sub
jecxz
xor
loop
lock
inc
jae
movsl
adc
insl
js
pop
jno
push
adc
iret
and
insl
stc
xchg
ljmp
xchg
dec
or
pop
inc
cs
es
in
sbb
data16
add
scas
test
sbb
lods
pop
mov
aad
adc
jo
mov
xchg
pop
lret
push
sub
pop
sbb
and
xor
mov
in
jmp
mul
or
stos
push
xchg
xor
sbb
hlt
mov
jae
stos
mov
bound
sub
sbb
cmp
xchg
cli
and
in
loope
adc
jns
stos
negb
push
lret
mov
pushl
clc
dec
mov
inc
jge
mov
inc
fstpt
xchg
cmp
jle
jle
sub
pop
and
cmpl
push
mov
cli
mov
stos
test
out
dec
jp
jmp
mov
and
rcl
or
push
cmp
pop
aaa
into
icebp
fs
les
and
aad
mov
into
aas
pop
ds
jbe
mov
je
add
cmpb
push
xor
sti
mov
jbe
adc
test
popa
loop
fsubl
movsl
ljmp
mov
loope
cmpb
push
sub
push
lret
aas
or
lcall
cld
sbb
ljmp
mov
pop
loop
inc
lods
mov
push
lcall
pushf
std
adc
dec
ret
xorl
shrl
les
fucom
pop
in
push
or
pop
lds
pop
icebp
insb
cmpb
adc
repz
scas
pop
inc
lock
repnz
mov
lret
push
mov
jb
sub
add
repnz
push
pop
stos
sbb
in
sub
in
mov
sub
pushf
xchg
or
xor
jl
dec
inc
shlb
cltd
mov
sub
popf
and
mov
mov
lahf
rcr
xchg
test
cmc
test
xor
jnp
add
sbb
lret
daa
xor
xchg
fstpt
subb
pop
mov
cmp
xchg
mov
js
xchg
xchg
push
jno
loope
jge
es
push
cmp
pop
pusha
and
inc
jne
scas
lods
pushf
mov
int
mov
das
out
jns
je
sbb
leave
ret
pop
ret
adc
push
mov
scas
jl
test
ror
subb
lcall
bound
sbb
outsb
cmp
xchg
cld
and
adc
loopne
xchg
jb
add
xor
outsb
out
lret
push
insl
sbb
mov
je
enter
sarl
jnp
mov
lods
leave
xchg
adc
inc
adc
xlat
add
adc
adc
lcall
subl
dec
sub
mov
daa
ret
test
or
jmp
xchg
or
in
inc
jl
pop
popf
outsl
inc
pusha
insb
lahf
loopne
sarb
loope
cmpsb
dec
sub
lods
test
or
adc
push
lret
loope
xchg
out
sub
sub
jb
jle
jle
orb
imul
mov
addb
jbe
xor
mov
imul
outsl
pop
inc
inc
push
adc
outsl
jmp
sbb
adc
aaa
lahf
xchg
xor
fisubs
aam
icebp
outsb
push
jge
dec
aaa
sbb
adc
mov
mov
popa
xorl
add
sbb
mov
test
imul
in
sahf
pushf
in
or
and
loop
test
xchg
fidivl
or
gs
jae
or
sahf
mov
subb
or
hlt
ja
les
mov
lret
mov
cmp
sbb
ret
subb
add
or
push
mov
lods
lock
inc
bound
aaa
outsl
cs
mov
inc
inc
cli
nop
in
decl
mov
lods
subl
popa
xor
mov
in
inc
hlt
into
bound
and
enter
inc
out
in
nop
push
cmp
out
xchg
js
jecxz
and
repnz
mov
iret
or
leave
cltd
test
mov
fstl
ljmp
adc
mov
repz
outsb
ret
aam
movsb
test
jmp
push
inc
jbe
divl
rclb
cmp
loope
mov
fsubr
out
inc
push
nop
xchg
enter
insl
into
mov
mov
or
sbb
jg
fmull
in
mov
jbe
popa
or
xchg
xchg
jl
inc
imul
jmp
mov
mov
shl
icebp
xchg
jmp
aas
xchg
adc
add
inc
cmp
sbb
cwtl
jno
dec
pop
mov
sbb
inc
mov
out
mov
loope
xor
cmp
add
stc
add
cmc
pop
pop
pop
fldcw
xor
punpckhbw
popf
in
inc
mov
push
mov
stos
int
mov
mov
or
xchg
pushf
leave
dec
ret
jnp
sahf
dec
jecxz
sahf
push
test
imul
mov
jnp
test
cmpsl
jecxz
sub
mov
les
jbe
mov
xchg
jns
mov
xchg
xlat
data16
out
test
daa
fs
inc
lahf
push
xchg
mov
or
ret
cmpsl
push
mov
aaa
mov
sub
lahf
adc
movsb
xor
sbb
shlb
sub
lods
or
xchg
adc
jmp
cmc
add
clc
fisubs
and
mov
cwtl
stos
adc
clc
xor
fidivrl
mov
fists
lret
leave
or
sbb
or
sbb
sbb
xlat
nop
add
mov
and
or
loope
outsb
mov
insl
adc
repz
dec
xlat
clc
pusha
movsl
mov
pop
fnstenv
mov
push
fisubrl
in
push
ja
arpl
or
cmp
mov
push
mov
mov
push
addr16
sbb
or
push
out
push
mov
enter
push
ret
add
xlat
adc
bound
loope
pop
stos
enter
in
fsubl
test
mov
jge
loope
insb
dec
aam
mov
sub
xor
aad
lock
rcl
repnz
xchg
testl
xor
icebp
sub
test
lret
mov
shrl
adc
push
pop
lret
sub
ds
cmp
cs
aas
stos
xor
test
xor
cmpsb
pop
and
adc
shrb
lea
shr
movsl
lods
cmpsb
lret
or
sbbl
neg
mov
push
outsl
js
mov
imul
icebp
insl
hlt
imul
lahf
push
mov
pushw
loop
test
aam
cmpsb
call
nop
xchg
push
mov
outsl
stos
movsb
cmpl
in
aad
pop
adc
into
add
fadd
imul
insl
nop
out
add
out
mov
es
cs
es
inc
xchg
cmp
cmp
aas
jg
add
mov
in
push
mov
inc
dec
xchg
cld
test
xchg
loop
or
lcall
scas
test
movb
xchg
mov
dec
testb
xchg
push
lock
and
sbb
inc
sbb
mov
in
push
insb
and
adc
mov
popf
pop
cmc
pop
jb
lock
sub
lret
lahf
jl
or
mov
clc
cmp
adc
filds
pusha
movsl
xor
mov
repnz
cmpsl
out
lods
xor
fistl
into
push
cmp
xchg
or
jge
jge
jae
scas
push
mov
xchg
sub
jmp
mulb
out
jbe
mov
lods
jg
mov
lods
sub
popf
inc
push
mov
imul
int3
mov
inc
leave
stc
out
sub
popf
movsb
jge
sbb
shr
push
jo
cmp
fsubrp
nop
out
into
xor
dec
cmp
aam
jo
enter
out
xchg
mov
addr16
fdivrl
sub
dec
and
add
sub
inc
test
adc
push
mov
ja
mov
fidivl
shlb
fisubrs
fyl2x
push
mov
out
imul
popf
sub
xchg
jmp
mov
dec
aaa
cmp
sbbb
pop
push
xchg
jae
cmc
popf
clc
pop
repz
push
jae
cmpsl
daa
mov
rorb
jne
and
cmp
mov
cmp
mov
dec
jae
mov
dec
out
fwait
das
popa
adc
lcall
pop
fcmovbe
jge
push
ds
in
outsb
aaa
out
jbe
mov
loop
daa
push
mov
fwait
and
outsb
cmpsb
xor
jl
push
dec
js
adc
add
rolb
ret
push
fcmovnu
jmp
dec
push
inc
movsl
clc
cld
in
jae
sbb
inc
lcall
and
ljmp
xor
into
mov
mov
jno
repnz
adc
out
jmp
je
adc
ss
call
clc
add
shrb
outsb
mov
lock
inc
popf
mov
dec
vmread
xadd
mov
cmpsb
push
es
dec
jbe
loope
test
je
es
les
push
lcall
sbb
inc
loop
je
test
je
mov
arpl
mov
mov
and
into
loopne
mov
scas
adc
push
pop
pop
pop
sbb
call
cmp
add
addl
js
nop
cmp
sbb
xor
pusha
clc
sbb
xor
xor
mov
and
mov
ficoms
push
jne
add
dec
pop
add
and
jg
in
or
xchg
fcmovnbe
mov
sub
lahf
mov
repnz
inc
xchg
mov
fnstsw
scas
int
cli
mov
and
daa
daa
xor
push
sbb
adc
js
sub
mov
sarb
or
out
push
aaa
int
stc
cmp
ret
cld
xchg
push
pop
jno
out
dec
in
mov
push
out
mov
insl
rorb
mov
push
jbe
inc
fadds
dec
test
imul
cld
aad
sbb
and
mov
inc
mov
addr16
shlb
nop
loop
int3
cmp
jb
flds
mov
into
in
mov
sub
push
ja
arpl
inc
fsubrl
add
insl
mov
pop
in
daa
pop
lahf
push
out
push
push
scas
dec
mov
push
sbb
mov
in
cmp
jge
inc
mov
cmpsl
lods
jae
sti
cli
jmp
out
call
jg
mov
stc
outsb
js
add
shll
pusha
in
mull
inc
sub
shl
mov
jb
inc
pop
pusha
cmpsb
stos
aad
fcmovnbe
inc
xor
jae
fisubl
stos
nop
mov
pop
in
push
andl
jnp
mov
movsl
test
fsubr
lahf
cmp
in
lods
sti
sub
pusha
fcoms
sarl
mov
pop
jl
add
cmc
sahf
in
scas
aad
push
addr16
out
mov
pop
test
dec
and
sbb
cmc
cld
dec
rcrb
adc
pop
inc
es
std
cld
std
adcl
repz
fdivl
jp
fildl
movsb
jge
jbe
jns
leave
cli
outsl
andl
xchg
sub
hlt
inc
test
cmpsl
and
adc
cmpsl
mov
das
je
inc
nop
jp
mov
iret
int3
pusha
test
aaa
int3
sbb
rcl
out
push
jnp
hlt
addl
fs
int3
mov
xchg
pop
leave
test
add
ss
out
and
inc
mov
dec
fcompl
push
xchg
int
sbb
mov
inc
or
xchg
shll
mov
rorb
ret
sbb
ficomps
std
mov
out
jo
repnz
fwait
test
lret
cltd
cmpsl
loop
adc
add
bound
and
into
and
inc
and
test
scas
sar
inc
cltd
mov
xchg
fnclex
pop
mov
in
enter
mov
cmp
dec
or
test
xchg
insl
sbb
push
mov
mov
dec
push
stc
dec
outsl
test
pop
xor
add
imulb
pop
mov
cltd
dec
loopne
or
test
mov
jge
lret
es
fimull
cmpsl
xor
xlat
mov
cmpsl
orb
dec
clc
and
popf
sahf
sbbl
call
mov
lock
and
jp
fwait
rcrl
insb
fisubl
mov
test
out
sub
pop
test
es
push
dec
sbb
pop
jmp
subl
imul
popf
cltd
xor
lret
stos
jmp
or
mov
mov
pusha
sbb
push
mov
int
ljmp
push
loope
mov
jecxz
leave
or
repz
je
loope
push
es
xor
rep
push
nop
inc
jno
push
xor
std
lgs
mov
xchg
jmp
push
cmp
xor
add
add
xchg
adc
sub
daa
jp
pop
xor
in
ja
test
and
pop
sub
movsb
xchg
shlb
js
fnsave
xor
mov
sub
adc
add
scas
cmpsb
negb
into
mov
xchg
push
cmpsl
in
addb
sti
sbb
or
mov
fdivs
sbb
movsb
xchg
or
insl
in
xchg
lret
cmp
popf
jns
jno
out
cmpsl
sbb
es
in
push
outsl
xchg
jne
sti
and
xor
repz
jmp
out
or
jnp
mov
test
jne
fcompl
inc
inc
lock
shr
xor
jle
adc
aad
pop
dec
cmp
mov
data16
ret
xlat
scas
dec
out
sti
je
pop
out
loopne
add
pop
mov
push
insb
movsb
push
xchg
jb
popa
out
repnz
adc
leave
scas
cwtl
leave
rclb
addr16
cld
cwtl
adc
cwtl
hlt
dec
aad
ret
jp
mov
test
imull
testl
pop
cmp
sbb
or
sub
dec
push
stos
mov
enter
mov
imul
push
and
sbb
sub
sub
or
mov
jae
shrl
push
ljmp
push
jno
adc
mov
adcl
imul
mov
loope
inc
bound
fcomi
cli
sbb
push
jns
repz
adc
cmp
jp
inc
test
sti
dec
cmc
add
and
aam
inc
test
jns
leave
mov
mov
sbb
mov
gs
negb
or
mov
pop
iret
mov
or
pop
cltd
es
notl
inc
je
mov
dec
mov
popa
dec
lds
push
aad
inc
lods
enter
shlb
ficomps
fldt
sti
cwtl
xor
adc
pop
or
sub
jb
mov
xor
arpl
lock
jae
scas
loop
cmp
jle
jmp
sbb
out
mov
push
jmp
arpl
pop
jecxz
or
push
pushf
or
jge
dec
sub
push
push
adc
lahf
sub
mov
or
shr
sub
cs
gs
out
fisttpll
and
xchg
jge
xor
push
xor
pop
mov
sub
and
data16
roll
call
xchg
push
jecxz
out
decb
cmp
nop
loope
push
ficomps
jbe
or
jb
sahf
loop
lods
addl
je
xchg
push
daa
mov
xor
sahf
adc
jl
movsl
push
adc
cmp
icebp
pop
icebp
adc
nop
add
cmpsb
lods
sub
push
xchg
xor
pop
jno
or
jmp
inc
test
imul
dec
inc
sbb
lcall
mov
aam
and
push
in
and
or
adc
idivl
enter
ljmp
jb
mov
adc
inc
cwtl
stc
cmp
mov
adc
sbb
data16
in
sarl
or
cli
pop
sub
adc
pop
or
mov
sbb
inc
mov
push
icebp
addr16
adc
clc
imul
fstps
dec
arpl
insb
or
mov
xchg
jmp
insl
or
mov
dec
shll
out
or
nop
mov
and
clc
scas
mov
dec
gs
dec
jo
push
pop
xchg
and
dec
xchg
jecxz
xchg
cs
ret
pop
lods
arpl
pop
sub
adc
fimuls
jo
pop
mov
arpl
jmp
xlat
sub
push
out
ror
negl
ret
jle
test
pop
inc
data16
pusha
out
loope
xor
mov
lcall
adc
cld
pop
bound
in
jne
dec
test
in
jge
or
lods
cmp
pop
in
insb
std
jl
or
sbb
sub
cmp
int3
pop
fsubrl
jge
or
lods
cmp
pop
in
insb
std
jl
or
sbb
sub
cmp
int3
pop
fsubrl
jge
or
lods
cmp
pop
in
insb
std
js
or
sbb
sub
fsubrs
jge
or
lods
cmp
testb
or
test
inc
xchg
or
jecxz
shll
adc
push
arpl
and
push
xor
adc
repz
mov
movsb
ret
aam
les
hlt
xchg
in
adc
add
xor
and
push
pop
inc
and
add
movsb
rcl
les
adc
daa
add
xor
dec
aaa
addr16
lea
xchg
sub
outsl
pop
fdivl
fnstcw
xchg
and
fxch
iret
scas
pushf
push
and
js
repnz
mov
aam
les
rorl
test
mov
lret
push
add
inc
loopne
adc
out
leave
in
in
and
mov
out
fisubs
and
shll
xor
jnp
mov
lret
lods
push
mov
aad
fstpt
mov
out
push
out
or
sbbb
xchg
in
or
or
mov
pusha
les
mov
fs
test
jl
mov
pop
stc
push
dec
and
hlt
jg
jae
or
lods
dec
pop
mov
pop
fdivl
repz
mov
movsb
leave
aam
les
adc
add
xor
and
push
pop
inc
insl
icebp
mov
loop
mov
stos
int3
fwait
cli
pusha
out
xor
popa
sub
pop
add
xlat
mov
out
fmull
out
pushw
arpl
mov
jb
push
repnz
xchg
xlat
les
adc
add
xor
and
push
xor
adc
repz
mov
movsb
ret
aam
les
adc
add
xor
and
push
xor
adc
repz
sub
out
add
andb
or
xor
jne
dec
xchg
std
insb
push
iret
movsl
jae
aad
mov
mov
shr
jo
add
ja
xor
push
pusha
mov
xor
nop
ffreep
in
push
and
dec
frstor
mov
cmp
sub
shrl
cltd
lahf
outsl
sub
cltd
call
mov
sub
notl
mov
in
imul
shl
js
xor
es
push
inc
xchg
psubb
lds
scas
xchg
fs
mov
xchg
push
ss
mov
fstps
push
scas
lcall
cld
gs
mov
sbb
or
fwait
lock
dec
pop
movb
xchg
add
pop
mov
insb
add
sbb
sbb
xor
jns
in
adc
and
or
lock
leave
pop
pushf
add
mov
mov
jae
or
dec
nop
xor
jmp
mov
jnp
mov
push
push
fistps
rcl
sub
push
lods
jg
mov
mov
cmp
xlat
and
xor
xor
inc
dec
sahf
push
dec
sub
add
push
push
fdivrs
arpl
push
lret
and
mov
fs
inc
sti
push
outsb
out
mov
mov
mov
leave
cwtl
cmpsb
inc
repnz
sarb
inc
add
enter
or
push
add
lds
and
jo
leave
mov
ss
mov
cmp
outsb
sbb
test
enter
pop
out
aam
push
jle
es
push
or
pop
cmp
enter
mov
xor
out
xlat
xchg
lret
xor
jp
jnp
add
add
adcb
mov
xchg
pop
lods
cmp
cmpsl
add
stos
rclb
out
and
test
shl
scas
scas
movsb
pop
sub
jb
cmp
inc
jl
cmpsl
dec
mov
fldl
sbb
ret
mov
rcrb
sbb
loop
shll
rcll
xor
push
xchg
xlat
dec
testb
std
cmp
jns
scas
ljmp
nop
mov
rol
jb
cmp
pop
dec
or
mov
pop
xor
jl
movsb
dec
fbld
push
jmp
js
ret
ss
push
cltd
fistpl
dec
and
pop
shll
xchg
fisubl
mov
outsl
mov
jnp
fs
enter
das
inc
arpl
aad
xor
int3
xchg
add
mov
rcll
pop
mov
dec
pop
pop
mov
out
nop
divl
or
movsb
inc
push
cmova
jge
push
xchg
in
cmc
ja
sbb
cmp
mov
sub
pop
inc
fldcw
pop
dec
test
dec
dec
movsb
pusha
add
sub
mov
push
out
xchg
sub
or
rolb
mov
xlat
mov
mov
clc
xchg
in
enter
or
push
sub
cmp
inc
ror
xchg
nop
in
outsl
addr16
out
jne
mov
lahf
aas
ljmp
xchg
adc
dec
push
mov
cmp
mov
rcll
cmp
je
or
fildll
aam
dec
inc
repz
popa
test
push
mov
sub
popa
sbb
arpl
bnd
sub
fsubrl
roll
mov
push
shll
push
dec
rorb
std
pop
daa
cmp
and
and
mov
mov
xor
fnstcw
aam
stos
cmc
rolb
cmp
test
les
dec
add
test
lods
xchg
mov
popf
cmp
pusha
add
mov
insb
nop
lods
jle
mov
mov
jnp
jge
jb
lods
xchg
push
sarb
or
pop
scas
lret
setl
cltd
mov
cmp
mov
pop
cli
adc
push
pop
pop
in
bound
sub
pop
push
lahf
xchg
dec
push
stc
dec
test
fisttps
dec
sbb
sub
hlt
jbe
mov
xchg
into
enter
xchg
jmp
push
jmp
push
dec
insb
shll
in
stos
xchg
xchg
mov
adc
rcll
daa
sub
adc
inc
cmpsb
xor
and
subl
sti
sbb
jne
mov
add
lds
add
or
lret
lret
nop
mov
xor
cwtl
mov
daa
sahf
dec
pop
inc
test
das
dec
aam
jb
add
leave
daa
inc
xchg
jmp
xchg
ret
iret
iret
and
lds
out
cmc
aaa
pusha
js
loop
loopne
or
mov
mul
outsl
dec
stc
or
ficoms
stos
imul
ljmp
pop
lret
or
das
sbb
and
or
cmp
aad
mov
ds
pop
xor
push
addr16
or
daa
iret
mov
pop
cmp
mov
cltd
and
xor
cmp
inc
sbb
adc
jmp
pcmpeqb
push
adc
mov
mov
out
or
ljmp
jmp
bound
xor
cmpsl
mov
jbe
mov
ds
and
test
movsb
add
inc
lods
xor
outsl
stos
sbb
mov
sub
jle
pop
out
lret
inc
data16
dec
add
mov
ss
push
mov
adc
pusha
shrb
jl
fcomip
mov
scas
sub
mov
pop
pop
push
in
lcall
or
jg
test
add
lret
mov
int
mov
test
loopne
imul
pushf
inc
clc
fwait
decl
mov
in
push
push
pusha
je
and
idiv
cmpsl
rcll
adcl
loopne
cwtl
sbb
out
into
push
push
adc
mov
call
inc
ja
pop
pop
lret
push
jns
pop
rcrl
push
cmpsl
testb
mov
ss
xchg
jbe
xchg
xorl
outsb
in
push
cmc
add
jo
jmp
jnp
sbb
jbe
mov
pop
lcall
roll
dec
xchg
push
ret
mov
das
push
or
stos
jge
push
test
in
pushf
xchg
sahf
pushf
aad
adc
mov
mov
inc
ret
jp
mov
pushf
add
jo
mov
add
loopne
adc
or
test
sbb
sub
mov
mov
inc
xor
xor
xchg
push
xchg
mov
inc
insl
das
fbld
lret
xchg
xchg
in
aaa
sbb
push
or
aaa
loop
cmpsl
sti
aas
sub
jmp
add
pop
pop
rol
shll
dec
cs
xchg
mov
aad
sbb
aas
fs
hlt
xlat
pop
js
fldenv
mov
ljmp
neg
xchg
mov
jecxz
aam
lock
mov
xchg
loopne
addl
adc
enter
outsl
push
fadds
call
mov
sub
and
test
xor
je
inc
lea
sbb
push
cmp
fistps
mov
mov
inc
insb
cs
mov
nop
sbbl
les
pop
add
mov
adc
js
pop
cmp
test
test
xchg
ds
jg
je
adc
loope
mov
and
out
push
sahf
mov
jne
mov
pop
lahf
xor
lea
lods
inc
shrl
jnp
out
mov
pop
mov
xor
push
or
cmp
and
cmp
or
cmp
xor
sbb
shl
dec
inc
mov
lock
xor
dec
or
in
xchg
or
iretw
jns
jne
jae
or
repz
je
xchg
and
aad
inc
jno
push
out
int3
cmpsl
imul
cmc
mov
pop
and
je
jae
push
pop
or
aas
cmp
imul
dec
leave
pop
lcall
jp
mov
xchg
or
jnp
loope
in
or
jg
adc
add
add
std
es
and
aas
dec
clc
push
orb
in
movsl
push
cld
cld
jb
xor
repnz
mov
sub
jo
pop
popa
pop
cmpsl
lods
push
shl
sbb
fisttps
es
call
stos
mov
fidivrl
filds
cmp
and
xlat
js
inc
ja
iret
data16
mov
cmpsl
fcmovne
call
mov
outsl
loop
push
mov
in
mov
adc
aaa
in
daa
or
push
xor
ss
sub
add
cli
out
aam
addr16
and
jp
ss
stos
mov
sub
push
pop
repnz
int3
mov
push
popf
daa
pop
jnp
jnp
fwait
jae
fucomi
push
xchg
push
and
sub
lods
repz
sbb
stc
inc
std
fcomp
imul
out
shr
mov
insb
and
push
add
xchg
jecxz
sub
sub
dec
ret
jg
pop
dec
xor
adc
loopne
push
pop
sub
nop
vsqrtsd
sub
andl
and
mov
loop
xchg
xchg
fs
dec
mov
jb
xchg
cli
repz
xchg
int3
aas
cli
popa
pop
mov
int3
mov
outsb
jo
cmp
pushf
leave
adc
hlt
imul
rolb
dec
in
ds
and
out
sub
test
iret
fstps
aas
movsl
pushf
fs
mov
fsubr
xchg
jnp,pt
push
lea
rcl
mov
inc
pop
iret
adcb
fwait
xchg
jbe
negl
cwtl
dec
and
adc
jle
adc
mov
outsl
gs
or
mov
inc
sub
daa
push
sub
fldcw
pop
push
imull
mov
fildl
pop
subl
add
jmp
fcompl
xor
jbe
jmp
push
aam
shlb
dec
lds
mov
inc
jle
push
or
mov
out
sub
push
ja
clc
xchg
mov
xor
loopne
out
das
mov
sub
fidivrs
or
jp
ret
loop
push
in
fisubrs
adc
jl
dec
insb
pop
push
xor
daa
ret
mov
cld
jp
repz
loope
hlt
xlat
sbb
mov
mov
sahf
mov
rorb
adc
add
cmp
sub
push
int3
inc
je
jno
lods
mov
push
jp
push
mov
push
lds
mov
pop
mov
adc
fadds
pop
test
pop
push
xor
xchg
fstpl
mov
enter
dec
dec
repnz
imulb
repnz
jb
cmpsl
cwtl
sub
sarb
sbb
or
cli
and
mulb
cmp
adc
aaa
add
pop
push
pop
pop
sbb
xchg
pop
or
aad
add
out
push
ret
push
out
mov
and
mov
scas
xor
push
stos
insb
hlt
out
std
ljmp
push
lcall
stc
cmpsb
sub
dec
popf
enter
roll
adc
scas
mov
loope
cwtl
stc
mov
jge
pop
nop
cmp
cmp
lds
jae
insl
pop
lock
pop
dec
pop
mov
pop
out
outsl
xor
pushf
sub
jae
add
and
lods
std
jmp
in
sbb
adc
sbb
popl
mov
xchg
mov
or
stc
lods
jmp
pusha
sbb
sbb
adc
cmp
pop
xchg
cmp
in
into
pop
or
ds
das
insb
stos
push
dec
add
nop
pop
or
or
cltd
mov
xor
idiv
in
out
aas
loopne
sub
pusha
adc
nop
sahf
xor
lret
stos
orl
lret
rcr
sub
shr
int3
lret
lret
and
pushf
inc
int3
jecxz
jp
aad
mov
pop
cmp
mov
scas
iret
cmpl
xor
sahf
push
push
pop
adc
add
push
mov
cltd
pop
popf
test
mov
or
popa
into
mov
stos
mov
or
out
fs
clc
sbb
mov
dec
in
and
out
in
clc
mov
das
mov
xchg
cltd
and
push
jmp
xchg
adc
mov
lret
and
sbb
mov
xchg
cmp
repz
aas
adc
xor
test
divl
fs
xchg
out
out
loop
add
inc
cli
insl
cmp
cmc
out
jmp
orb
leave
mov
dec
lcall
rorb
pop
aaa
mov
lods
in
mov
ja
outsb
addr16
sar
push
insl
pop
adc
or
mov
outsb
jno
pop
and
int3
bt
fstl
cli
in
sahf
sbb
lcall
xchg
jmp
inc
loope
pop
outsb
sbb
dec
gs
sbbb
das
js
jmp
jecxz
rorl
ret
sahf
adc
adc
clc
sbb
inc
add
push
aaa
icebp
dec
rcrl
inc
inc
xchg
in
cmp
adc
sub
mov
lcall
and
jb
stc
dec
fnstsw
jmp
xchg
hlt
and
pop
cmp
cltd
pop
mov
adc
cmpsl
cmpsl
pop
jo
jle
iret
sbb
mov
push
pop
and
mov
jmp
push
testb
dec
lock
cmpb
pop
fsub
dec
cmp
mov
sub
xor
lock
mov
mov
xchg
sub
mov
filds
xor
xor
push
or
loopne
and
sbb
adc
mov
sub
sbb
mov
pusha
adc
fs
add
push
fiadds
mov
je
or
cmpsb
sub
jle
adc
in
int
out
add
sub
mov
mov
jecxz
jecxz
add
inc
mov
and
scas
jb
js
xchg
push
cli
mov
bound
push
dec
jns
pop
mov
in
mulb
inc
jle
rorl
gs
sub
stos
dec
popf
scas
out
push
out
sbb
fstpl
pop
xchg
or
fldenv
fbstp
xor
pop
push
test
roll
or
jno
pop
and
and
aad
fldt
dec
mov
and
adc
mov
mov
aaa
inc
lea
sub
call
xchg
inc
fcmove
jecxz
testb
or
mov
fildll
mov
stos
xchg
mov
fdivr
mov
xor
push
dec
jp,pn
ljmp
ss
pop
hlt
pop
arpl
push
arpl
ja
jle
cwtl
mov
inc
xor
fsin
xchg
outsb
cmp
push
aad
in
inc
testl
fdivl
arpl
xlat
adc
mov
in
rorl
and
idivb
mov
adc
into
pushf
cwtl
int3
lods
adc
scas
stos
jb
fs
cmp
pop
pop
jbe
das
ficoms
add
mov
cmp
ljmp
jmp
mov
inc
mov
mov
inc
lcall
lods
xor
in
sbb
or
jb
jp
je
add
xchg
dec
test
push
movsb
popa
xchg
andb
mov
arpl
mov
xchg
fldt
ror
ja
jb
les
cmpsl
out
xchg
lret
xchg
adc
push
jge
in
in
insl
and
mov
dec
and
sub
mov
xor
xchg
mov
mov
push
and
out
enter
jo
std
and
jo
sbb
jp
inc
mov
xchg
repnz
adc
fxch
cmp
xchg
das
mov
inc
sbb
push
mov
popa
enter
repz
mov
pusha
stos
dec
cmp
popa
bound
xchg
iret
pop
lahf
sahf
cmp
ret
xor
sub
sbb
into
aam
pop
cmp
mov
movsb
test
ret
in
push
inc
inc
in
push
iret
test
jno
loopne
stos
rorl
adc
add
idivb
cmpsl
ficoms
jmp
in
fldcw
es
cli
pop
ret
add
bswap
in
pop
jb
cwtl
dec
scas
aad
imul
ss
xor
xor
mov
xchg
imul
icebp
jae
aad
jb
sub
js
str
xchg
pop
ja
xor
mov
sbb
inc
inc
fsubl
pop
jge
mov
xchg
jg
loopne
cwtl
cltd
lods
inc
push
inc
fcomps
clc
xor
jmp
or
jp
fbld
scas
les
ficompl
cmp
adc
into
and
lds
leave
cmpsl
data16
out
cmpsb
xlat
xor
adc
insl
sub
mov
orb
pop
arpl
lahf
inc
dec
gs
arpl
lahf
out
pop
push
and
dec
jg
cmp
lcall
pop
mov
test
or
inc
pusha
inc
sub
mov
push
scas
and
lret
icebp
mov
push
repnz
out
stos
sahf
loope
decb
xchg
dec
out
xor
inc
mov
inc
loope
inc
dec
cmpsl
scas
movsb
cmpsl
mov
pushf
cmp
addl
decb
push
testb
les
iret
test
jg
jns
xchg
xor
pop
and
pop
mov
jp
and
jo
out
cli
lods
sub
int3
in
mov
pop
pop
pushf
xchg
push
mov
pop
aam
arpl
iret
dec
push
aad
je
in
sbb
pop
add
jl
fwait
pop
pop
xchg
rorl
jno
or
out
lret
sbbb
out
sbb
inc
push
sbb
dec
mov
test
jbe
xor
cmpl
shlb
cmpsl
inc
mov
test
es
pop
icebp
fwait
in
and
jns
dec
push
push
cld
xchg
dec
stos
push
data16
add
xor
pop
scas
out
push
and
xor
out
mov
mov
fmuls
aas
mov
sub
into
enter
sub
insb
ds
lea
xchg
pop
test
lock
push
lock
stos
and
xchg
jae
repz
or
mov
repnz
outsb
fidivl
out
cltd
push
pusha
push
rcll
cltd
inc
roll
in
xor
rol
sbb
das
iret
dec
loop
cmp
call
call
sub
cmc
fwait
ret
fdivl
push
stos
or
insl
gs
je
jmp
pop
lret
outsb
in
push
xor
and
push
push
inc
lahf
int
mov
pop
mov
gs
shrb
mov
fs
inc
xchg
inc
in
pop
ja
imull
clc
mov
scas
aas
int
daa
ret
addr16
jle
xor
test
decl
add
fidivrs
sti
cwtl
jne
in
enter
movsl
adc
in
xor
push
mov
xchg
lcall
jecxz
push
fmull
insl
rcr
mov
mov
adc
adc
xor
imul
cmp
mov
sbb
ss
mov
add
inc
jne
mov
xchg
into
or
xor
pop
xchg
int
pop
mov
jg
popf
jns
pop
sarl
push
pop
nop
push
mov
call
test
lret
test
or
je
mov
les
cltd
in
sti
in
cmp
bound
lods
adc
jle
in
xchg
test
cmp
std
pop
mov
dec
ss
dec
xchg
inc
push
mov
add
dec
lret
pop
in
sahf
gs
pushf
fstpl
int3
dec
and
in
sub
es
hlt
mov
pop
mov
sbb
sbb
mov
mov
push
add
cli
push
push
cmp
iret
test
pop
pop
aaa
in
push
mov
test
fucomip
ret
sbb
add
std
pusha
ret
pop
sbbl
pop
imul
test
adcl
subl
lcall
inc
cmc
insb
cmp
and
mov
aad
fnstsw
ret
sub
push
push
pushf
inc
pop
pop
add
lea
xor
icebp
test
subl
pushf
sahf
adc
xchg
xchg
ja
js
loope
and
lea
pushf
xor
imul
icebp
in
jge
sbb
jl
and
mov
xchg
sbb
dec
mov
xchg
imul
lcall
pushf
daa
push
mov
xor
and
rorb
pop
push
mov
xorl
das
mov
add
inc
data16
jnp
push
xlat
mov
lods
loopne
ret
jno
shrb
gs
mov
adcb
dec
sub
xchg
push
mov
scas
orl
dec
mov
jecxz
lea
movsb
mov
and
nop
pop
xor
and
ljmp
pop
in
in
fdivl
aas
sub
xlat
inc
or
jl
data16
cmp
es
into
sbb
clc
cmp
dec
jecxz
xlat
mov
jecxz
mov
les
adc
add
xor
and
push
xor
adc
repz
mov
movsb
ret
aam
les
adc
add
xor
and
push
xor
adc
repz
aam
lds
hlt
xchg
in
adc
push
and
and
add
movsb
ret
les
jmp
sti
leave
sahf
push
and
and
pushf
cld
pop
cmp
jg
outsl
or
jp
dec
fidivrs
out
mov
fisubrl
sub
outsl
or
jp
push
pop
das
dec
iret
mov
loope
lahf
cli
mov
lret
push
sub
ja
push
jp
push
pop
das
dec
adc
stos
mov
mov
clc
lret
and
jne
pop
dec
mov
call
mov
xchg
cmp
sahf
or
insb
mov
pop
jl
cmc
xor
pop
mov
push
add
lahf
push
mov
bound
data16
mov
mov
push
pop
bound
sti
jae
mov
das
pop
test
loopne
push
push
aad
mov
popa
into
lret
fisubl
adc
pminub
aad
lahf
cmc
loopne
pop
jg
dec
filds
std
gs
dec
addr16
mov
scas
aad
jl
repz
or
stos
and
inc
stos
orb
sub
xchg
cmp
jg
outsl
or
jp
push
pop
ss
mov
testb
fisubrl
sub
jae
arpl
push
adc
sbb
fbld
int3
lahf
fwait
ljmp
cmp
sub
sbb
js
xor
push
aas
sub
stos
sti
scas
in
cltd
in
leave
mov
and
jb
outsl
push
jp
push
pop
das
dec
fistpll
out
mov
fisubrl
sub
outsl
or
jp
push
pop
das
dec
fistpll
out
mov
fisubrl
arpl
test
dec
jae
insl
cmp
pop
hlt
adc
repnz
fs
out
imull
xor
sbbb
test
data16
ret
and
ja
outsb
inc
int
dec
insl
add
and
filds
xchg
jl
lea
push
push
mov
sahf
cwtl
jne
xor
mov
aaa
sub
into
aam
ja
and
and
lret
pop
rorl
stos
cmpsb
insl
add
push
lds
push
cmp
add
cmp
sbb
push
pop
int
add
jnp
add
insl
ja
cmc
mov
iret
mov
or
add
outsl
bound
into
pop
cld
pushf
xor
iret
loopne
sbb
xchg
aad
mov
mov
or
andb
pushf
sbb
push
lock
test
mov
mov
sbb
inc
test
mov
jne
mov
sbbb
mov
out
adc
enter
mov
push
pop
test
pusha
jbe
inc
pop
enter
inc
xor
fmuls
in
in
int
push
cmpsl
subb
xchg
ficoml
mov
mov
lods
xor
aas
jecxz
xorb
test
sub
sub
out
out
mov
sbb
testb
mov
xchg
fs
inc
inc
sbb
daa
jbe
shll
jmp
sub
dec
sbb
mov
call
ret
lret
xchg
inc
aaa
fcompl
loop
std
lret
mov
stc
mov
push
lret
adc
aad
jge
iret
das
insb
push
mov
push
xchg
cmp
cmp
lret
cltd
cmp
pop
jg
or
and
addr16
xchg
pop
mov
mov
xchg
sub
xor
mov
cltd
sub
push
fisttpl
callw
fisubl
mov
ja
xchg
out
fisubrl
test
push
push
adc
mov
push
push
insb
and
test
cmpsb
in
ret
leave
aad
or
jno
pop
sti
inc
insl
add
and
daa
icebp
repnz
adc
dec
xor
dec
pop
idivl
xor
adc
push
das
sarl
mov
add
out
mov
repz
and
je
mov
shrb
xchg
insl
pop
sarl
inc
push
and
cli
inc
call
push
aad
roll
shlb
inc
xor
pop
call
mov
in
fldenv
mov
dec
call
mov
pusha
jge
fnstsw
sbb
dec
add
sahf
andl
jl
push
fnstcw
ret
mov
insb
mov
lret
imul
mov
jecxz
or
gs
push
test
loop
fldl
add
loop
or
cli
xchg
jmp
jmp
and
pop
in
mov
movsl
arpl
sbb
sti
fisubs
sbb
out
fdivs
mov
xchg
sbb
movsb
jmp
in
in
inc
inc
hlt
push
pusha
xchg
mov
cmp
mov
jmp
xor
out
sbb
fisttpll
sub
sahf
popl
push
adc
jge
movsl
mov
cli
outsl
mov
fimull
jmp
lcall
out
xor
jl,pt
mov
xchg
or
imul
jmp
pop
shrb
arpl
aam
jae
mov
mov
pusha
mov
insb
mov
xchg
inc
gs
jg
mov
dec
mov
hlt
cwtl
adcb
aaa
sbb
test
push
cmc
dec
inc
cld
jp
imul
cmp
ss
gs
mov
in
clc
adc
inc
gs
mov
lock
mov
mov
mov
xor
ret
shrl
jge
jp
lahf
fs
and
pop
bound
inc
xchg
dec
cmpsb
xor
or
adc
pop
jge
mov
aaa
aas
iret
push
cmc
dec
aaa
cli
add
bound
mov
popa
retw
in
repz
aaa
mov
stos
movsl
xchg
mov
sub
jle
scas
out
push
test
mov
rorb
jecxz
das
push
xchg
mov
int
fldt
pop
inc
mov
test
pop
mov
sti
sub
call
sbb
mov
cwtl
scas
mov
imul
add
cwtl
aaa
jae
psraw
jmp
jne
aam
mov
out
dec
mov
popa
push
in
hlt
stos
push
loopne
or
loopne
orb
lods
xchg
jp
sub
mov
add
cmc
jb
or
fdiv
inc
add
jmp
lea
fcoms
test
imul
cmp
adc
iret
scas
lret
clc
jp
jecxz
cmp
ss
dec
hlt
icebp
jp
and
push
std
xchg
fcmovb
jnp
in
push
push
in
lods
loop
push
dec
lds
ss
xor
mov
into
xor
fildll
outsb
jp
lods
iret
sub
inc
xor
mov
sbb
sahf
sar
out
out
repnz
dec
loopne
sub
pop
sbb
repz
stos
dec
cmp
dec
dec
gs
push
icebp
pushl
or
in
and
out
lret
add
loop
aas
mov
in
jae
inc
insl
dec
pop
sbb
orl
sbb
fidivrs
pop
fs
fiadds
stos
ret
fsubrl
mov
leave
push
les
inc
addr16
in
xor
ret
xor
cwtl
dec
sti
push
hlt
loopne
push
fnsave
loopne
cmp
out
push
pop
clc
hlt
dec
mov
cwtl
pop
mov
cmpl
or
mov
xor
repnz
dec
mov
les
aad
std
xchg
bound
push
pop
mov
dec
pop
lea
int
stc
cmp
push
add
fcompl
insl
xchg
daa
push
pop
xor
pop
sti
loopne
mov
sub
leave
push
mov
xor
pop
pop
mov
inc
cmp
xor
int
mov
hlt
dec
xor
hlt
xor
and
sbb
dec
nop
mov
sti
inc
mov
scas
sbb
jmp
clc
cmp
test
sahf
jle
or
xchg
scas
inc
xor
mov
mov
cli
add
pop
movsb
rorb
jb
sub
xor
imul
sub
imul
std
and
add
jg
mov
sub
push
sbb
adc
mov
lods
push
push
fisttpl
cmp
and
adc
cwtl
out
push
ljmp
gs
adc
lock
cwtl
xchg
es
test
mov
test
pop
jmp
push
test
popf
jle
xlat
inc
pop
mov
mov
clc
jle
enter
pusha
mov
jno
dec
out
sbb
inc
dec
ret
fwait
dec
dec
dec
jns
loop
pop
in
imul
bsr
dec
or
cltd
lods
or
sarb
jge
add
jns
je
mov
movsb
shll
into
xchg
gs
add
cmp
loope
inc
fsub
sbb
popf
xor
inc
inc
mov
cmpb
xchg
das
mov
dec
dec
sub
lret
fildl
push
lea
mov
andb
and
push
cmp
lcall
mov
dec
xchg
jg
negl
into
jmp
xchg
inc
ds
push
sub
and
jecxz
test
mov
lahf
mov
clc
cwtl
inc
int3
test
and
xlat
int
gs
stc
push
frstor
pop
fisubrl
bound
cmpsl
stos
imul
lret
cmp
out
and
adc
loope
imul
xchg
inc
or
rcl
mov
xchg
js
sub
leave
ficoml
pop
push
mov
pop
in
loopne
pop
jmp
cmp
dec
nop
mull
jne
and
lods
mov
test
cmpsb
mov
call
and
pusha
fwait
dec
mov
es
imul
mov
jmp
fisttps
in
loop
aas
and
int3
leave
outsl
mov
add
push
fistl
sub
fdivrs
and
movsl
inc
and
in
ret
popa
cmp
mov
adc
lcall
loop
mov
fsubs
aaa
mov
in
sbb
leave
jge
mov
or
dec
cmpsb
jns
dec
or
xchg
inc
clc
push
sbb
jb
push
mov
cmpsl
sti
jnp
pushf
adc
enter
arpl
bound
xor
insl
adc
mov
xchg
ret
call
and
xchg
movsl
jno
shrb
nop
xor
es
mov
das
insb
aas
jne
cmp
sub
nop
jge
pop
or
jb
mov
repnz
cld
mov
loop
es
and
add
clc
adc
inc
pusha
adc
mov
enter
cltd
jmp
shl
sbb
xor
cmpb
out
or
xchg
or
cs
test
mov
scas
inc
stc
scas
adc
loope
adc
inc
incl
out
andl
cmpsl
addr16
and
xchg
sub
movsb
adc
and
jg
xor
dec
mov
in
cwtl
cmp
test
je
test
arpl
add
sub
lods
mov
es
adc
enter
push
pop
mov
pop
sar
inc
adc
dec
pusha
fcompl
push
mov
lods
push
jl
xchg
jl
cmp
adc
push
sbb
inc
insl
movsb
inc
mov
popf
or
ljmp
jnp
jle
xor
in
fistl
sub
mov
jg
sbb
push
or
inc
jecxz
jmp
mov
push
lcall
sub
push
adc
adc
popa
xor
and
outsl
scas
jmp
punpckhdq
cld
lcall
add
enter
cmp
inc
pop
sbb
push
inc
test
dec
lcall
mov
push
aaa
stc
sar
lcall
mov
es
inc
and
mov
lcall
mov
jae
aam
mov
cmpb
mov
rolb
enter
aas
pop
push
inc
test
pop
sahf
sahf
jg
das
lock
or
sbb
mov
inc
popa
and
idivl
mov
mov
testb
into
loop
jmp
lds
sbb
out
dec
jo
outsb
orb
or
mov
inc
int
adc
outsl
inc
iret
inc
repnz
mov
inc
fnsave
mov
ficompl
mov
loop
daa
out
ljmp
dec
jns
dec
xchg
and
std
mov
or
jg
out
push
xlat
xchg
std
xchg
pushf
adc
jb
insb
shr
fcomi
scas
push
into
jmp
jge
lret
pop
xor
push
mov
mov
push
mov
or
lea
je
rolb
inc
std
loopne
or
sbb
loope
jb
xor
jno
jb
jmp
lods
adc
mov
aaa
outsb
test
pop
orl
push
loope
or
mov
or
push
jl
out
mov
jle
fistps
mov
insl
pop
movsl
add
or
adc
lods
in
push
jge
std
adc
and
fwait
roll
adc
cmp
dec
loopne
cmp
sbb
mov
cld
jo,pt
popf
loopne
inc
loope
dec
testl
mov
cmp
inc
pop
cmp
outsl
xchg
jne
cld
call
call
push
loopne
test
xchg
mov
outsl
jno
je
jge
rcll
xchg
pop
sbb
mov
pop
push
pop
popa
add
jno
jl
sti
cmp
mov
adc
mov
mov
imul
jmp
mov
adc
mov
dec
test
or
dec
scas
cmp
adc
push
pop
xchg
test
cmp
xchg
mov
je
pushf
xchg
xchg
pop
jbe
data16
mov
je
pushf
inc
fnstenv
shll
pop
mov
nop
iret
push
add
cmp
mov
add
fadds
push
enter
ret
stc
fistl
ljmp
xchg
orl
nop
cmc
inc
das
cmpsl
pushl
sbb
and
mov
imul
dec
dec
cmc
ss
out
push
sbb
pop
push
push
xlat
ljmp
fldt
adc
lea
xchg
mov
ret
sar
fstpl
cmp
lahf
push
js
lret
sub
cwtl
iret
mov
inc
test
daa
popa
mov
sub
xorl
mov
test
pop
gs
push
leave
mov
fsts
aad
lea
in
ret
push
dec
cmp
imull
jecxz
mulb
out
mov
inc
orb
push
psrlq
jecxz
dec
add
push
push
ficompl
loop
xor
imul
cmpl
xchg
mov
xchg
sub
in
sahf
mov
mov
cld
dec
in
cld
shll
mov
scas
shl
cmc
or
fidivrl
adc
push
push
lods
cmc
test
mov
xchg
jbe
mov
mov
cmp
cwtl
pop
fcmovnbe
push
mov
out
xchg
hlt
sbb
and
jnp
mov
push
mov
lret
inc
push
pop
dec
jbe
rclb
add
pop
data16
cmpsl
dec
mov
xor
push
inc
sbb
adc
lods
dec
push
push
ljmp
push
mull
mov
sbbb
in
xor
or
mov
in
out
or
cmp
shll
in
dec
sbb
aam
cmp
pop
insl
pop
stos
movsl
rorl
jbe
or
inc
add
adc
or
sbb
hlt
pop
inc
mov
inc
sbb
imul
cmpsl
add
pop
and
pusha
aam
shll
ja
sub
frstor
pop
lea
fiaddl
sti
add
inc
pusha
push
dec
mov
ss
and
cmc
fsubrl
mov
cli
lea
fwait
xor
out
pusha
xchg
scas
test
mov
loope
insb
out
cmp
pop
mov
movsb
outsl
jmp
mov
daa
pop
push
inc
scas
push
je
inc
test
movb
jo
xchg
aas
push
jle
or
xchg
leave
push
dec
sbb
add
push
ja
sub
addr16
pushf
push
pop
fcmovnb
das
movsl
mov
subl
lcall
mov
sub
icebp
lods
enter
icebp
and
mov
scas
jg
mov
pop
cmp
cmp
out
mov
je
iret
pop
fidivrl
and
xchg
mov
pushf
xor
leave
and
xor
pop
xchg
cltd
add
sub
js
lea
push
inc
flds
repnz
jecxz
cmp
imul
xchg
cmpsl
adc
pop
mov
push
adc
jmp
ficomps
sub
jno
mov
jp
bound
je
es
shll
or
pop
sub
sub
popa
inc
dec
gs
mov
inc
and
testb
and
fwait
xor
out
bound
fiadds
sub
add
fmull
mov
mov
inc
sub
lret
lret
clc
cld
pop
mov
push
dec
cmp
ret
std
xchg
xor
aad
add
pusha
outsb
adc
xor
mov
pop
shll
jp
adc
in
mov
xchg
scas
sub
xor
stc
lods
mov
ss
sub
add
pushf
cltd
add
or
mov
inc
xor
sub
in
cmp
mov
or
pusha
mov
lret
jns
aad
in
or
push
lea
cmp
movsb
ds
cmpb
test
lcall
and
sbb
idivb
jb
adc
cwtl
dec
sbb
dec
pop
out
and
adc
xor
fldt
sbb
ret
xor
push
dec
xlat
jl
jbe
imulb
jmp
and
sbb
sbb
xlat
mov
dec
frstor
test
and
xchg
inc
xchg
sub
dec
lret
sub
pop
out
add
dec
xchg
inc
daa
movsb
pop
clc
sti
andl
int
sub
sbb
cmp
data16
aam
popa
outsl
test
cli
adc
sbb
arpl
mov
xchg
xor
adc
push
xchg
xchg
sbb
jmp
int
jno
add
dec
xorl
aaa
movsl
mov
rorl
xchg
divl
mov
push
outsb
dec
add
xchg
and
cmp
ret
push
outsb
into
loopne
cmp
push
lods
push
xchg
xchg
push
mov
and
xor
mov
adc
xor
add
pop
mov
and
jg
lahf
outsl
cmp
push
cmp
ss
mov
movsb
xor
cli
dec
xlat
iret
and
mov
mov
jns
sbb
loop
dec
cld
mov
ss
inc
das
push
or
inc
sub
dec
pop
aam
movsb
aas
mov
add
stos
stc
enter
jbe
fists
dec
popa
loop
mov
loopne
sti
jo
clc
loope
cmp
mov
xor
shrl
dec
adc
jl
push
aaa
into
cmp
lahf
nop
int3
mov
xor
insb
mov
jnp
sbb
push
pop
imul
mov
lahf
pusha
jo
inc
outsb
xchg
push
dec
fcompl
pop
mov
or
lret
pop
or
push
mov
mov
aas
cmpsl
adc
and
test
cli
pop
xchg
cmp
iret
repnz
add
aaa
popa
xor
in
lahf
push
mov
push
scas
fcmovne
push
and
ja
mov
jp
dec
in
and
mov
shll
or
push
fnstsw
mov
mov
push
mov
add
mov
std
mov
daa
cmc
pop
or
mov
inc
mov
add
mov
push
rcl
mov
sub
and
pusha
xor
cmpsl
popf
loopne
js
xchg
insl
xchg
ljmp
sbb
fisttpll
std
sarb
xlat
jb
nop
xlat
lcall
enter
iret
in
outsl
inc
jle
xchg
xor
leave
inc
pop
out
and
aam
fimull
xchg
jae
imul
shr
xchg
sbb
push
aad
mov
sub
cmpsb
sahf
sub
out
shl
add
mov
fsubs
sub
sti
gs
push
cmp
int3
in
in
incb
rep
cmp
inc
jbe
cmpsb
add
insb
mov
pop
and
mov
dec
fstl
movsb
jp
sub
and
imul
and
insb
adc
xchg
pop
imul
inc
xor
inc
sbb
mov
push
insl
cmpsb
cmpsl
add
pop
ds
popf
sub
push
add
xor
fcmovu
mov
arpl
fdivr
rcl
mov
mov
and
adc
add
xchg
mov
jle
les
rol
lcall
xchg
dec
pop
sbb
jp
out
test
dec
aas
mov
cmp
fcom
mov
mov
movlps
mov
add
dec
dec
cmp
adc
minps
sub
fmuls
sub
js
inc
adc
push
push
pusha
adc
aad
insl
fs
or
cmp
sbb
jmp
mov
rcll
bound
scas
mov
cmpsl
jne
mov
mov
mov
shrb
inc
fidivrs
sahf
cmp
fs
daa
xor
adc
jne
inc
mov
xor
inc
cli
fs
mov
je
in
sub
mov
leave
fsubs
jne
into
ja
cmp
insb
push
or
iret
or
lds
mov
or
lock
xor
jns
inc
inc
pushf
jnp
outsb
imul
or
inc
nop
or
mov
mov
or
mov
or
mov
add
pushf
insb
pop
push
test
jbe
sub
aam
mov
or
mov
dec
xor
or
cmp
adc
in
outsl
lcall
leave
movsl
dec
pop
xchg
fwait
loop
add
xchg
pop
add
vpaddsb
sub
inc
and
clc
mov
imul
push
xor
out
mov
sub
jae
gs
jo
sbb
ja
mov
icebp
push
inc
push
cli
data16
adc
mulps
and
insl
aad
cli
add
dec
stos
mov
dec
ds
cmp
jecxz
jmp
mov
int3
mov
fnstenv
mov
shlb
pop
pop
pop
sar
movl
dec
push
sbb
test
cwtl
jle
cmp
popf
nop
xorl
inc
pop
or
andl
pop
hlt
es
sbb
sbb
pop
jp
push
pop
das
dec
fistpll
out
mov
fisubrl
sub
outsl
or
jp
push
pop
das
dec
fistpll
out
mov
fisubrl
stos
jg
outsl
or
jp
ljmp
iret
stos
lcall
mov
mov
cmp
jle
outsl
or
pop
scas
dec
and
out
std
call
and
jmp
outsl
mov
push
cmpsl
das
xor
decl
cmp
sbb
mov
leave
outsl
mov
aas
mov
fildll
cmp
dec
out
jns
sub
inc
pop
sbb
jg
outsl
cmpsl
pop
leave
ja
fisttps
xor
pop
rorl
push
fcoms
sub
or
cmp
sub
pop
pop
xor
movsb
les
inc
or
pop
pop
adc
sub
iret
sbb
cli
jne
sbb
idiv
pop
dec
lods
lods
lods
fildll
xchg
in
in
das
fildll
dec
stc
dec
adc
pusha
insb
mov
xor
pop
cmp
and
pcmpgtd
mov
js
imul
lret
push
lahf
in
stc
adcb
and
adc
das
pop
and
ficompl
or
jl
sub
push
push
je
fadd
aaa
addr16
push
inc
test
mov
lret
rorb
jp
sbb
mov
outsl
pop
pop
rorl
cltd
aas
das
das
mov
jns
jno
and
nop
pop
fwait
lods
ds
pop
jnp
pop
mov
scas
cmp
cmp
sub
dec
jmp
enter
lret
mov
stos
aaa
test
rcrb
insb
push
cmp
inc
cli
inc
sbb
dec
sti
xchg
push
test
sbb
setns
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
imul
cmp
or
sbb
or
imull
lret
adc
lcall
cld
int
rolb
inc
xchg
mov
xor
lret
imul
dec
out
into
mov
insb
fdivp
movsb
xor
or
fstl
ds
pop
and
mov
fstpl
int3
bound
call
mov
cmp
sbb
aad
lss
push
insb
leave
and
xchg
xchg
adc
inc
or
sbb
sbb
test
lret
push
out
in
dec
fs
ret
flds
push
pusha
mov
sub
sub
test
loope
dec
jae
outsb
adc
push
sub
je
inc
addr16
ret
into
movsb
or
std
cli
mov
lahf
xchg
cwtl
mov
or
pop
add
sarl
xchg
or
push
les
xlat
push
cmpsl
sahf
test
mov
push
out
xor
lahf
leave
add
cs
je
sahf
jecxz
jl
icebp
jne
cmpsl
lret
shll
inc
sub
sub
adc
mov
test
mov
aad
test
mov
inc
pusha
clc
movb
sub
loop
repz
stos
stc
ret
xor
pop
xchg
leave
in
dec
pop
in
sbb
cmp
dec
js
xchg
pushfw
sub
sbb
jbe
or
pop
sub
jae
add
movsb
xor
jae
cmpsl
scas
dec
call
jle
jo
sahf
adc
or
jge
and
xchg
lods
pop
sub
bound
jbe
popf
movsl
mov
mov
jae
aaa
movsl
add
fsubs
xchg
in
lock
dec
xor
xchg
sbb
mulb
movsb
mov
xor
scas
addr16
adc
jmp
sbb
lret
sub
movsl
jae
das
lcall
test
xor
fdivp
add
xchg
sarb
addr16
cltd
stos
push
pop
xor
insl
inc
flds
and
nop
imul
fsts
fiaddl
mov
movsb
lahf
mov
inc
js
mov
inc
das
mov
ret
mov
stos
sub
call
out
cmpsl
test
mov
add
mov
shrb
mov
nop
xlat
add
push
test
insb
je
jb
xor
mov
jne
mov
test
lret
std
push
sbb
into
sti
cmp
sub
adc
jnp
or
or
imul
sbb
sub
scas
sti
shll
loopne
push
xchg
adc
sbb
dec
shl
cld
jnp
push
push
xor
f2xm1
inc
mov
add
push
pop
outsl
pushf
cmpsl
push
shr
pop
iret
aas
xor
mov
insl
sub
or
call
xor
fcomps
mov
jmp
xchg
and
mull
fbstp
orl
out
xchg
int3
jae
pop
mov
cmpsb
xchg
inc
jge
pop
sarl
addr16
mov
cmp
sub
out
stc
fxch
jge
xor
stos
sbb
push
lahf
iret
or
popa
fidivs
or
ret
xchg
sbb
test
inc
in
arpl
mov
loope
or
out
std
xchg
popl
mov
ss
xor
sar
dec
scas
mov
xchg
loope
lret
mov
arpl
in
or
testl
mov
add
xchg
xor
adc
inc
ret
mov
pop
pop
cmp
iret
icebp
pop
sub
mov
popf
loop
push
mov
push
pop
add
or
inc
outsl
xchg
mov
cmp
add
dec
pop
hlt
xlat
pop
in
out
ds
push
lcall
mov
jl
xor
sti
xor
or
cs
aaa
test
mov
mov
mov
or
cmp
add
lret
call
movsl
jle
cmp
leave
rolb
sbb
adc
and
jmp
or
dec
cs
movsl
popa
sub
and
push
mov
mov
mov
hlt
push
sub
jbe,pt
push
or
repz
ficoml
ss
nop
cmpsl
fwait
add
icebp
adc
mov
ss
test
adc
cmpsl
xchg
test
das
fdivrs
leave
pushf
sub
insl
test
into
mov
fcomip
push
loopne
or
in
out
mov
jno
cmp
jb
xchg
es
mov
mov
push
jmp
jmp
call
addb
jbe
sbbb
xor
mov
or
push
test
sub
fidivrl
and
sti
xchg
and
push
push
bound
mov
mov
insb
adc
mov
int
insb
mov
mov
roll
les
mov
jge
sbb
mov
mov
pop
mov
ss
cld
shlb
icebp
dec
cwtl
in
notb
inc
jge
stos
into
icebp
mov
push
mov
inc
push
dec
dec
pop
ss
leave
fwait
add
les
push
push
loope
mov
int3
push
outsl
sub
fmul
add
movsb
adc
and
repnz
cmpsb
add
sti
setle
loope
push
pop
inc
cmp
imul
jmp
enter
cmp
ds
out
dec
insl
inc
add
push
xor
les
sub
out
sbb
hlt
cs
addr16
mov
xchg
es
mov
int3
jne
daa
insl
add
aam
movsb
and
jle
inc
pusha
mov
inc
in
cmpsb
adc
test
out
mov
xchg
sbb
push
add
mov
inc
repz
jne
stos
add
jnp
test
push
clc
sub
mov
jno
stos
ficoml
jp
jae
inc
sub
addr16
cs
adc
aam
jnp
je
pop
bound
pushf
sbb
idiv
in
cmp
cmp
shlb
cmpsl
pop
push
stc
jmp
mov
mov
loopne
dec
and
or
aam
cmpsb
or
sbb
mov
scas
push
xor
movsb
ja
cwtl
rclb
jge
imul
push
push
cmp
adc
push
aad
sub
pop
in
loope
xchg
mov
pop
pop
call
das
insb
adc
mov
inc
jae
push
das
lea
pop
pop
stos
mov
ljmp
js
and
sti
dec
out
xor
cmpsb
pop
cmp
mov
fucom
adc
out
add
in
mov
out
mov
and
ss
insb
daa
out
orb
outsl
test
in
mov
popa
ds
iret
dec
ret
test
mov
into
pop
call
movsl
leave
int
xor
pusha
adc
mov
jmp
pusha
dec
lcall
push
and
fcomip
test
pop
hlt
rol
out
push
and
adc
fbld
inc
mov
cmp
gs
in
daa
jae
cld
mov
push
hlt
sbb
mov
pop
or
aaa
jl
mov
popf
xchg
sub
or
jg
add
sbb
in
inc
enter
jns
rolb
in
orb
sub
xchg
std
dec
mov
xchg
leave
inc
and
or
pop
xchg
pop
cmp
or
xchg
mov
push
or
or
fs
cmp
dec
int
or
test
fcmovb
mov
subb
sub
ja
fcomp
jle
push
fsubrp
sbb
andb
mov
cwtl
cmpsb
xchg
lods
mov
mov
loop
mov
xor
out
mov
fs
loop
jle
aad
in
aas
inc
or
jnp
mov
int3
les
jae
add
push
mov
mov
stc
rol
pop
add
pop
sbb
and
sbb
push
faddp
fs
loop
jae
jge
mov
jle
pop
andl
jb
cmc
movhlps
scas
inc
inc
inc
das
test
pop
popa
pop
xor
xchg
inc
out
jne
jmp
jae
mov
add
repnz
mov
dec
shll
aad
imul
in
dec
test
pop
out
lock
xchg
jne
xor
pop
ss
es
add
imul
add
sub
aad
into
lcall
lcall
iret
inc
loope
sbb
fcompl
pop
fdivrs
push
fildll
sub
in
mov
outsb
or
inc
inc
add
add
cmp
inc
bnd
dec
aad
push
jne
iret
sbb
dec
insb
cltd
push
fimull
adc
mov
xchg
mov
jg
lock
push
xchg
and
sahf
loop
jmp
gs
shll
mov
aas
outsl
sbb
imulb
push
lahf
dec
sbb
fwait
push
xchg
mov
loop
adc
mov
mov
test
adc
sub
mov
cltd
jbe
ret
lcall
popf
push
das
mov
daa
sbb
cs
mov
imul
mov
sbb
out
sbb
jle
not
insb
lds
pushf
daa
ljmp
sahf
mov
xlat
mov
imul
cmp
hlt
adc
fpatan
sbb
aad
adc
lahf
inc
or
mov
or
insb
cmp
and
jns
leave
in
aam
shrl
sbb
mov
inc
xor
jl
ror
aam
rol
ds
add
stc
mov
fbstp
lahf
and
and
adc
xor
cltd
adc
iret
pop
cmpsl
push
xor
cmp
add
test
mov
bound
subb
ljmp
mov
push
mov
dec
cwtl
incb
scas
pop
push
in
mov
lret
add
clc
mov
dec
stos
push
fst
aaa
sbb
fstpt
lret
fwait
imull
cmp
fs
sbb
sbb
enter
jae
aad
sub
mov
dec
lahf
call
addr16
adc
mov
sub
shll
mov
push
jo
addr16
fisubl
addr16
cmp
aaa
ds
stc
fucomip
icebp
xchg
sbb
mov
dec
cmp
mov
ss
add
imul
sub
mov
xchg
pop
and
icebp
fisttpl
xchg
arpl
pop
jecxz
xor
ret
ja
mov
push
iret
movsl
mov
jmp
imul
xor
lods
out
scas
mov
out
pop
mov
dec
out
enter
test
fbld
lds
loop
dec
call
stos
stc
leave
pushf
adc
and
mov
loop
mov
xchg
cs
add
pop
push
pushf
sub
push
int
mov
add
test
mov
inc
mov
inc
loopne
mov
xchg
cmp
jmp
sub
outsb
int
mov
int3
or
stos
addr16
mov
pop
jg
outsb
jb
test
addr16
daa
dec
mov
gs
iret
xchg
insl
scas
outsl
out
mov
push
aas
sub
ret
in
fcomip
lret
cld
test
inc
iret
addr16
sbb
and
pop
cmp
push
push
jmp
xor
xchg
insb
aas
jge
fnclex
push
mov
data16
xchg
or
lahf
and
add
fdivp
push
enter
dec
popf
pop
add
test
lahf
pop
lea
cmp
insb
cmp
fdivl
fimull
push
inc
dec
xor
test
aas
int
cmp
clc
mov
insb
dec
repz
bound
cmp
cmp
stc
inc
daa
add
and
add
add
pop
adc
je
and
repz
dec
mov
fstpl
mov
pop
insb
lcall
addr16
aas
fbld
xor
jae
int
test
pop
jl
sbb
lods
xor
mov
scas
insb
cmpsb
enterw
lods
daa
mov
fsubl
sub
mov
xorb
push
mov
fidivrs
mov
cmc
push
fsubrs
mulb
gs
push
ret
or
push
sub
lock
daa
nop
xor
rorl
repnz
sub
lea
pop
inc
mov
lcall
xlat
xchg
adc
mov
mov
rcrl
popa
arpl
push
add
adc
out
jmp
sbbl
pop
pop
xchg
sbb
fiaddl
or
loope
movsb
adc
sub
add
sahf
sti
rorl
mov
jmp
test
add
movsl
or
scas
fisubrl
and
inc
daa
insb
or
outsl
mov
dec
sub
dec
out
aam
mov
std
ljmp
fbld
and
jno
pop
mov
pop
out
subb
std
pusha
mov
xchg
fs
fisubrs
mov
popf
loopne
sub
pop
clc
hlt
pop
stc
dec
and
mov
mov
fldenv
adc
sub
lcall
push
jne
cli
xchg
pop
aad
mov
lahf
je
push
lods
mov
inc
into
mov
xor
mov
xchg
test
inc
aam
outsb
test
repnz
fimull
out
lods
sti
mov
icebp
dec
fbstp
sarb
jbe
cmp
push
and
dec
dec
inc
aaa
aam
les
mov
ja
out
and
fisttpll
adc
call
sbb
sbb
cmp
cmp
jnp,pn
push
mov
fistl
pop
lret
dec
jns
xchg
xor
mov
adc
or
aaa
fdivrs
in
xchg
in
pop
aam
adc
icebp
cwtl
stos
cs
jge
pop
and
loopne
gs
vpmacssdql
out
jge
sahf
jge
sti
cltd
xor
loop
mov
xor
add
inc
mov
mov
fsubs
inc
jecxz
push
lret
pcmpeqb
sub
push
repnz
icebp
inc
cmp
inc
pushf
stos
scas
adc
test
pop
mov
aad
outsl
jle
in
sbb
arpl
rorb
aam
in
jb
loope
mov
and
xor
std
mov
adc
popa
mov
fisubrs
xchg
dec
cmp
and
inc
and
icebp
or
in
and
or
pop
push
push
lea
push
xor
fucom
insl
les
xor
mov
adc
std
adc
dec
xchg
push
out
pop
or
ret
push
mov
or
outsl
clc
cmpsb
pop
cmp
in
xchg
fists
pop
lret
repz
mov
push
push
aam
popa
jmp
andl
lods
inc
pop
xor
in
popl
in
mov
mov
mov
divl
lret
fnstcw
jg
jge
lods
jae
scas
mov
cmpsl
push
jns
ficompl
mov
adc
shl
jmp
inc
pop
in
jo
mov
jecxz
xchg
in
mov
cmc
movsb
negb
mov
add
lods
and
sahf
jg
test
addr16
mov
lods
inc
sub
and
push
sbb
mov
in
xchg
add
loope
arpl
inc
sbb
pop
sbb
adc
cmp
cmpsb
lret
repnz
std
in
das
cld
sub
adc
mov
daa
push
push
or
in
pop
insb
adc
mov
shl
pop
adc
lods
cmp
stos
push
mov
cmpb
cmp
jb
and
ficompl
and
gs
sahf
xchg
fsubrl
pusha
mov
rcr
inc
ret
sbb
popa
popf
subb
add
dec
pop
push
sbb
in
ljmp
mov
xor
push
je
adc
enter
dec
sti
aam
mov
and
sbb
pusha
and
jae
movsl
xchg
test
daa
rolb
cmpsl
mov
popa
jge
lods
lahf
push
dec
mov
mov
jns
cmp
pop
or
sub
lahf
iret
pusha
not
xchg
enter
xorl
add
sub
jno
ljmp
lahf
in
cmp
scas
or
sub
or
mov
sbb
jge
repz
adc
push
call
jge
stos
dec
xor
dec
insl
leave
dec
pop
xchg
stos
xchg
leave
mov
aam
lret
lods
std
mov
sub
les
cld
push
insb
test
pop
das
pop
outsl
ficoml
jg
or
dec
pushf
imul
test
je
jbe
mov
xor
mov
lods
mov
insb
pop
pop
lea
jno
fiaddl
js
sub
lret
ficompl
jmp
jle
loope
inc
mov
xchg
dec
outsl
nop
adc
test
into
mov
xadd
sbb
mov
cltd
xor
push
push
xor
adc
mov
lods
xor
inc
sub
out
mov
and
mov
cmp
xchg
inc
xchg
scas
xchg
and
test
gs
mov
aas
or
mov
jp
push
pop
stc
idivl
cmpsb
clc
stos
insb
inc
fcom
leave
test
push
jb
cs
scas
push
add
mov
icebp
or
imul
jp
push
adc
cs
add
push
stos
push
xchg
fsub
xor
jae
sti
cli
mov
data16
rorb
lahf
mov
sub
shrb
mov
xor
adcb
movsb
mov
sub
imul
mov
scas
and
int
cwtl
cmp
push
ret
dec
mov
dec
mov
rolb
push
xorl
sahf
leave
arpl
inc
jnp
test
sub
andl
jp
dec
hlt
xchg
inc
sub
push
push
ja
test
call
xchg
arpl
mov
int
mov
bound
pop
mov
ret
or
dec
push
xchg
icebp
mov
dec
and
into
add
lock
cmp
aad
repnz
aaa
mov
leave
hlt
add
fucomi
xchg
cmp
cwtl
daa
and
dec
movsb
mov
or
xchg
sahf
dec
cmp
adc
lret
in
adc
sub
mov
or
scas
push
cmp
rcrb
leave
ljmp
in
fsubrl
pop
adc
lods
lret
add
xchg
addr16
push
fs
and
inc
hlt
add
movsb
mov
aas
or
jo
mov
mov
clc
mov
enter
mov
dec
push
stc
sahf
jbe
sti
imul
int3
fistps
lcall
dec
xchg
dec
or
subb
rclb
adc
data16
subl
repnz
idivl
scas
or
sub
pop
or
push
jmp
inc
pop
js
int3
fsubr
arpl
inc
sub
scas
je
jmp
fildll
mov
mov
or
inc
fwait
rcrl
lahf
xchg
clc
imul
adc
xor
stos
jg
cmpsb
nop
xlat
sahf
std
mov
inc
filds
dec
popf
ljmp
les
add
cmp
pop
stos
adc
xor
push
pushf
leave
xor
jle
jle
jle
mov
insl
shll
ret
xor
cmpsl
scas
inc
xchg
in
lds
mov
sub
xchg
outsb
les
inc
inc
inc
shlb
addr16
sahf
xchg
imul
push
lret
arpl
xchg
adc
sbb
pop
mov
sti
outsl
test
ret
aad
cmp
mov
stc
repz
stc
cmp
adc
sub
in
adc
ficomps
cli
lahf
mov
test
arpl
roll
sub
rclb
mov
xor
mov
pop
divl
jl
and
lods
adc
xor
stos
pop
pop
push
insl
stos
shr
fnstsw
movsb
cmp
mov
andb
add
fistl
adc
pop
icebp
jmp
lcall
lock
xchg
aam
pop
scas
test
or
sbb
mov
test
push
mov
push
add
ret
jle
fdivs
movsb
pop
lret
cmpl
push
mov
loop
mov
imul
leave
sbb
pop
adcl
or
xchg
out
inc
data16
mov
fndisi(8087
cmpsl
mov
hlt
ds
stos
pusha
popa
mov
jns
cmpsl
mov
clc
mov
push
push
and
cmp
popf
dec
sub
int3
stc
push
push
pop
xchg
mov
push
sub
mov
and
ret
negl
rcr
jmp
leave
xor
push
jae
into
dec
xchg
lods
or
sub
movsb
loop
in
fldl
pop
xchg
adc
loopne
mov
lahf
push
roll
mov
sub
xchg
bound
scas
push
mov
add
push
incl
or
mov
xorl
pusha
mov
add
pop
int3
jg
repnz
push
out
sti
inc
lret
sub
iret
inc
push
sub
roll
shlb
xchg
mov
adcl
mov
and
call
shll
addr16
sub
movsb
mov
pop
xchg
xor
fidivrs
or
add
push
movsl
data16
push
fwait
sbb
mov
cmp
jg
les
fs
movsl
mov
aaa
addb
mov
or
or
dec
es
sahf
jg
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
imul
cmp
or
mov
pop
test
das
jns
imul
cmp
loope
in
pop
mov
cmpl
mov
aas
or
jns
xchg
repz
dec
pop
mov
push
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
int
fldl
jno
popa
inc
inc
out
outsl
ret
bound
shrl
loope
xchg
sbb
mov
in
jno
popa
lea
popf
add
rcrl
insl
icebp
jge
int
sbb
mov
in
jno
popa
lea
popf
add
out
jle
add
jb
pop
aam
mov
in
adc
push
shlb
xchg
xchg
in
mov
pop
jl
cmp
pop
push
add
jmp
inc
sub
icebp
and
push
sbb
jp
mov
popf
inc
aad
ljmp
mov
ss
dec
adc
aas
insl
hlt
mov
mov
dec
cmp
inc
xchg
jne
adc
jno
loop
aam
movhps
bnd
scas
dec
or
or
adc
ja
xchg
or
call
pop
loop
jge
cmp
xor
and
dec
fisubrl
and
mov
rclb
outsb
nop
jne
movsb
mov
inc
in
jno
popa
lea
popf
add
rcrl
insl
icebp
jge
or
mov
out
cmp
xchg
test
xchg
daa
lea
inc
leave
push
mov
test
lahf
add
clc
dec
xor
test
mov
lea
aad
out
and
xchg
or
outsl
cmpsl
jge
or
jae
inc
les
test
fnsave
sarl
lods
xor
shrl
loope
xchg
sbb
mov
in
jno
popa
lea
popf
add
rcrl
insl
icebp
jge
or
mov
mov
jo
shlb
inc
dec
pop
cmp
insb
add
mov
xor
sub
int
sub
out
mov
popf
leave
fstpt
stos
add
fwait
lret
add
mov
xchg
jbe
into
jle
pop
mov
pop
sbb
fisttpl
inc
ret
loope
jp
mov
stos
cmp
cmp
std
mov
fcoms
jbe
loope
jo
adc
sub
mov
in
jge
push
cli
int
jne
adc
add
push
dec
dec
pop
and
pop
push
inc
lock
or
sub
xchg
xchg
ja
push
hlt
out
jl
stos
gs
jmp
loop
pop
inc
loope
int3
cmpsl
add
mov
jge
dec
and
enter
out
xor
leave
cld
dec
repnz
mov
nop
aam
cmp
sub
cmpsb
sub
jne
testl
and
scas
jmp
test
or
adc
orb
daa
mov
es
mov
mov
pop
sub
outsb
hlt
test
pop
or
leave
cmp
pop
sbb
cmp
aad
orb
cmp
scas
jbe
push
or
jmp
insb
mov
lcall
mov
rcll
dec
xchg
cmp
pusha
popf
movsb
pop
cld
add
sbb
fwait
mov
xchg
fcmovne
jge
mov
lods
dec
leave
dec
dec
or
sahf
sbbb
mov
push
das
mov
inc
rclb
jecxz
inc
pop
fs
fldt
push
flds
mov
or
mov
cmp
shrb
pop
sub
sbb
sub
cs
fistpll
lea
outsb
and
es
in
es
mov
cmp
or
pop
lock
rolb
jno
mov
imul
cmp
cs
and
testb
das
jecxz
jle
sbb
inc
sbbb
xchg
hlt
lcall
sub
popf
push
inc
add
and
xor
adc
addb
sub
jbe
mov
ficoms
mov
fwait
add
mov
sub
mov
mov
push
fstpl
bound
push
push
and
inc
pop
int
cld
lret
fdivrl
leave
sbb
test
inc
pop
mov
clc
inc
push
pushf
dec
mov
cmpsl
push
mov
sub
int
xor
insl
icebp
ljmp
aas
xchg
inc
pop
es
cltd
movsb
inc
jge
inc
mov
and
repz
mov
jns
les
adc
pushf
inc
pop
inc
ror
int3
mov
loop
jb
dec
cmpsb
and
and
cmp
mov
xlat
mov
popf
jns
sti
out
out
and
mov
gs
aam
ret
adc
fiadds
hlt
push
xchg
cmp
pop
or
arpl
pop
push
mov
icebp
push
mov
jecxz
dec
mov
xor
push
sub
inc
mov
xor
inc
cmp
aad
xor
pop
xchg
aad
loope
mov
je
jl
into
iret
test
and
pop
and
movsb
call
jecxz
sub
add
addr16
loopne
push
mov
xchg
icebp
jns
pop
loopne
mov
push
xchg
mov
add
aad
xchg
or
out
push
mov
testl
lret
idivl
es
cmp
ja
sbb
imul
jg
and
movsb
and
xor
test
movl
jmp
aam
fimull
leave
sub
mov
testb
and
out
inc
movsl
loop
cmp
out
cli
test
icebp
repnz
xchg
sbb
sbb
ss
data16
cmp
or
test
sahf
jle
inc
insl
dec
sbb
jbe
les
sbb
or
cmp
and
and
lods
push
sub
dec
inc
addl
jmp
mov
sub
sbbb
arpl
jmp
mov
aam
jge
sub
push
int3
cmc
xrelease
inc
or
in
pop
dec
inc
in
icebp
pop
sub
or
jl
rclb
shlb
mov
pop
mov
stos
pop
push
push
dec
fucomi
mov
pop
cmp
cmpsl
pusha
xor
xor
data16
fnstcw
sub
pop
add
add
add
sar
jg
pop
jecxz
adc
cmc
jb
cs
aam
and
lahf
sub
jl
out
sub
out
sub
adc
mov
stc
addl
mov
push
dec
dec
jae
data16
or
mov
cmpsl
sbb
movsb
shrb
lea
mov
and
xor
cmp
out
xchg
mov
dec
int
xchg
add
push
push
ret
and
xchg
pop
mov
or
jp
insb
enter
std
loope
enter
daa
mov
mov
jle
test
xor
sub
jnp
jae
sbb
inc
mov
fcmovnb
cmp
andl
cmpsl
mov
or
into
jb
mov
jns
mov
dec
jg
outsl
jle
stc
jle
push
xor
insl
inc
mov
or
jae
ret
or
test
pop
jb
movsl
add
ds
jbe
rcrb
fiadds
mov
and
or
jo
jmp
subb
sub
jmp
jns
enter
jmp
stc
jle
inc
testl
icebp
in
lahf
pop
cmp
jecxz
in
mov
shll
les
jnp
inc
mov
sbb
dec
leave
jecxz
xorl
shr
push
sti
push
cmp
ret
dec
dec
lret
xorb
leave
std
and
shll
lret
pushf
push
out
test
out
mov
test
sbbb
pop
movsb
cmp
xchg
mov
loopne
cli
call
shlb
and
in
pop
cwtl
fstps
scas
push
jl
xor
rolb
push
add
or
std
xor
xchg
mov
push
jmp
mov
mov
lods
sarl
out
mov
lods
cwtl
xor
mov
test
loop
ljmp
mov
imul
loope
rep
push
mov
jp
push
jecxz
loop
xchg
insb
pop
jb
mov
cmc
jne
mov
insb
dec
add
popf
outsl
mov
sbb
pop
sub
sub
cmpsb
sub
mov
or
or
jecxz
mov
mov
lret
mov
adc
popa
imul
cld
push
mov
insb
xchg
insl
dec
inc
popf
jmp
mov
fwait
movsb
lods
mov
jmp
lds
fidivrs
nop
sar
push
add
mov
sbb
mov
leave
aaa
lds
in
inc
pop
dec
mov
ret
xchg
repz
es
outsb
inc
je
lds
mov
pushf
inc
pop
popa
and
inc
dec
inc
call
mov
xor
out
xor
jmp
jbe
pop
push
add
push
sub
fs
or
fwait
lret
sarb
fbld
and
iret
imul
mov
aad
rorb
and
add
or
outsl
inc
out
pop
jno
xor
aas
scas
nop
pusha
jns
mov
xor
pop
inc
pop
int
ss
cwtl
jno
sbb
lret
mov
sbb
loope
inc
lret
dec
cmp
adc
subl
scas
add
xorl
jp
mov
int
xchg
ffreep
jp
in
arpl
and
sbb
or
and
outsl
mov
xor
lods
das
mov
ret
xchg
pop
sbbl
scas
cmp
add
or
das
testl
movsl
pop
pushf
push
and
pop
stc
sub
push
cmc
sbb
int3
shrb
stos
es
inc
sub
sub
sub
imul
fdivr
push
in
addr16
scas
and
dec
lea
cltd
cmp
sub
or
mov
sbb
mov
fildll
or
jl
jmp
cld
push
call
sub
lods
push
jl
pop
xchg
sub
or
repz
imul
xchg
xor
adc
mov
jl
add
test
add
pop
out
push
xor
inc
das
sti
in
and
add
outsb
cmc
ret
ret
ljmp
or
cmpsl
jnp
aas
adc
loop
shlb
push
sti
xlat
rcrb
mov
mov
ss
jo
jl
dec
mov
pop
in
sub
push
adcl
aaa
or
push
push
aas
pop
jbe
gs
xchg
jae
or
jbe
add
enter
inc
push
cmp
ss
inc
popa
mov
mov
pop
mov
int3
rcrb
loop
and
in
nop
call
mov
mov
mov
sbb
push
xlat
nop
mov
pop
pop
in
ljmp
and
jne
addl
and
inc
inc
insl
daa
add
adc
jno
shr
dec
repnz
pop
push
ljmp
rcrb
call
mov
out
pop
lcall
lea
nop
pop
or
call
cwtl
stos
xor
shll
lea
movsl
xor
pop
rorb
add
mull
jns
or
mov
icebp
repnz
dec
jns
pushf
and
aad
rclb
iret
adc
dec
add
pop
addl
cwtl
jg
mov
xor
xchg
lret
mov
push
jle
xor
push
sub
sub
rolb
int
daa
cmp
insb
and
in
stos
lods
insb
push
in
leave
lcall
fdivl
movsb
dec
div
pop
jnp
push
xchg
roll
test
dec
jnp
frstor
or
into
mov
loop
out
daa
sbb
add
sbb
or
lret
and
xor
adcl
inc
mov
shll
fldz
jo
daa
adc
push
sub
xchg
mov
lret
jbe
push
pop
loopne
or
ret
lods
ret
fwait
outsl
in
lds
ret
and
xlat
clc
movsl
push
jo
cld
sub
or
lods
inc
and
aaa
mov
push
xchg
test
and
lcall
test
adc
mov
push
xor
xchg
inc
adc
outsl
lahf
hlt
add
ret
push
add
push
mov
pop
jbe
addr16
xchg
out
push
and
pop
sbb
jbe
sub
mov
inc
ds
aad
stc
das
sbb
aas
shl
test
cltd
xor
mov
in
out
sti
jp
lea
add
mov
add
stos
out
std
cld
lret
outsl
add
icebp
mov
sbb
bound
fstpt
mov
push
mov
imul
stos
inc
pop
pop
sbb
out
jns,pn
out
out
insl
jb
cwtl
jmp
mov
or
mov
mov
and
outsb
sbb
sbb
jge
cmpsb
lods
scas
cmp
pusha
inc
mov
sub
test
mov
mov
sub
cmp
push
cmpsb
jg
scas
out
pop
push
mov
out
sub
repz
hlt
popa
outsb
mov
out
lods
inc
pop
data16
ret
je
icebp
xor
mov
jo
andb
inc
cs
dec
mov
sub
mov
les
mov
xchg
or
in
and
stos
fsubs
and
rcrl
aam
add
jns
loopne
pop
out
xor
aas
out
jo
outsl
pop
rcrb
mov
xlat
add
ja
test
and
gs
aas
jge
int3
fs
push
mov
dec
push
inc
ds
mov
in
inc
jge
sbb
in
out
clc
lahf
roll
cmp
imul
cmpsl
add
or
push
cmp
popf
push
mov
mov
icebp
xor
repz
insl
aam
stc
lcall
in
push
lret
xorl
xor
mov
fcomps
push
adc
mov
outsb
and
outsb
and
adcl
jbe
icebp
sbb
pop
jg
xchg
sub
scas
add
dec
jns
andl
aam
xchg
popf
xor
jl
mov
sbb
push
gs
stos
jmp
dec
in
adc
jp
mov
into
ret
mov
mov
jl
lea
xor
xor
inc
mov
jmp
int3
push
mov
xchg
test
imul
push
pop
mov
jne
adc
mov
mov
icebp
cmp
push
cmpsl
jge
fmull
es
and
inc
test
outsl
mov
stos
inc
js
push
loopne
cltd
xlat
inc
adc
ret
cmc
in
jns
cmpsl
shrb
repnz
pushf
rcll
xchg
aad
test
lods
or
or
in
or
hlt
jmp
xchg
push
cmpsb
imul
xor
pop
pop
ret
or
das
jns
pop
xchg
ljmp
add
sahf
mov
jns
stc
sahf
jbe
enter
cmp
jne
lcall
push
test
cmp
xchg
test
xchg
dec
xchg
mov
dec
jecxz
fcmovnu
add
cmp
inc
sbb
push
sbb
jns
stc
movsb
subb
adc
es
inc
fsubs
loopne
push
jle
mov
jns
xor
and
sti
in
cmp
pop
in
adc
jg
rol
fdivs
lea
cmp
jmp
js
pop
pop
lock
testl
pop
or
add
insb
sub
scas
jo
xor
xor
jg
jge
cmc
std
or
mov
sbb
mov
test
jl
jns
mov
xchg
pop
push
xchg
xchg
rol
mov
dec
pusha
pop
sti
mov
sub
push
add
ret
out
cld
mov
ficoml
ret
sub
mov
test
push
js
jl
js
dec
subb
cmp
add
test
vpcomw
inc
mov
push
inc
pop
inc
aad
dec
les
sbb
mov
or
addb
fwait
cmp
int3
test
pop
je
cmp
pushf
ja
loope
bound
push
adc
gs
aas
or
push
ret
stos
pop
sarb
pop
inc
jg
cmp
push
es
fmull
push
mov
mov
xor
xlat
clc
loopne
imul
rcr
mov
pop
ret
jns
pop
xor
xlat
pop
xchg
rclb
push
pop
das
sahf
pop
jmp
and
subb
lea
das
adc
loop
inc
pop
jmp
mov
mov
push
xchg
mov
leave
fisttpll
xchg
adc
or
and
lahf
insb
inc
out
dec
iret
rep
lods
pop
push
data16
mov
inc
mov
sbb
popf
sbb
pop
lods
stos
push
or
jecxz
jns
scas
sub
sbb
xchg
sub
pop
fcomps
mov
mov
dec
dec
lcall
test
cwtl
das
adc
flds
xor
daa
loopne
xor
xor
out
jne
call
jl
ljmp
incb
out
xor
mov
sub
jge
inc
fnstenv
pop
incb
push
jae
sbb
outsb
push
icebp
xchg
test
xor
ss
dec
call
xlat
lds
scas
mov
mov
mov
idivl
lret
pop
and
aaa
lds
and
negb
popa
lret
or
fisttpll
sub
xor
sbb
stc
cmp
in
mov
and
adc
cmp
subb
gs
xchg
iret
movsl
jp
popl
sbb
xchg
or
xchg
mov
repnz
nopl
inc
add
mov
les
pop
cwtl
mov
in
fidivrs
pop
inc
fidivrs
push
lahf
sahf
mov
add
sub
xor
fsub
bound
sahf
xlat
lahf
inc
lret
fwait
es
cltd
mov
outsl
sar
lea
test
pop
out
dec
sub
inc
inc
je
xchg
inc
mov
das
pop
dec
jb
adc
popf
je
jge
add
pop
mov
mov
clc
pushf
adc
and
mov
or
mov
dec
mov
stos
add
and
loope
sub
sbb
scas
sub
scas
xor
lods
add
cmp
sbb
flds
or
sbb
pop
dec
insl
repz
icebp
jbe
daa
push
adc
push
ret
data16
mov
adc
das
mov
je
pop
xor
jns
sbb
stos
cmp
fucomp
push
loope
cmpsl
cli
and
in
dec
pop
or
or
xchg
fidivl
pushfw
fcomi
mov
rol
sub
fisubrl
icebp
or
push
loopne
push
ljmp
jmp
push
pop
lea
push
pop
fcompl
int3
lods
out
xchg
jae
dec
and
mov
aam
int3
pop
jb
out
lahf
aas
sub
pop
and
les
movsb
pop
imul
jmp
lock
ret
ss
pushaw
adc
imul
dec
cmp
xchg
sub
sbb
xlat
pop
shr
dec
xchg
xor
pop
jnp
in
cmpsb
imul
pop
xor
ss
mov
xchg
or
stos
jo
loopne
mov
cmc
outsl
push
or
int3
fiaddl
jp
outsb
adc
mov
add
repnz
stos
jae
adcl
ret
sbb
xor
push
jns
push
stc
xchg
imul
aad
cli
cmp
lcall
les
or
xchg
inc
test
int3
mov
mov
cld
lods
xchg
adc
in
xor
mov
push
push
mov
sbb
lret
mov
ja
push
andb
daa
adc
adc
cmp
cmp
inc
mov
dec
fneni(8087
mov
mov
stos
xor
stc
iret
mov
mov
push
fisubs
cmc
mov
pop
sub
mov
cwtl
outsb
push
jmp
push
in
mov
cs
addr16
dec
es
inc
sub
sub
pop
inc
sub
mov
inc
pop
cmp
cli
les
cwtl
icebp
xchg
mov
add
aam
je
lods
fsubrl
dec
outsl
dec
mov
test
adc
cmp
mov
stos
mov
push
ds
jnp
jecxz
cs
bnd
int
mov
outsb
shlb
test
mov
lock
xchg
fadds
movsl
cld
daa
nop
loope
gs
mov
in
push
add
add
inc
sub
inc
mov
insb
fidivl
ficoml
cmpsb
or
mov
sti
mov
fs
negl
mov
arpl
movsb
scas
cmp
mov
adc
shl
inc
and
fldenv
je
xchg
sbb
mov
lcall
pusha
xlat
mov
xor
jne
xlat
jne
mov
adc
in
stc
movsb
sar
fwait
mov
out
and
inc
scas
subb
in
adc
daa
sub
rcl
jmp
xorl
stc
inc
and
mulb
mov
das
aas
popa
mov
fisubrs
push
ljmp
pop
test
mov
aas
rcrl
cmp
arpl
iret
xor
and
mov
mov
roll
stc
int3
xchg
cmp
push
jae
pop
dec
dec
and
jb
ss
stos
mov
push
push
sub
loop
jge
and
sub
xchg
xchg
mov
and
repnz
jl,pn
jle
outsb
loop
mov
adc
add
sbb
es
packssdw
pop
cmpsb
xchg
int3
and
test
sbb
push
cld
sbb
enter
lock
dec
sbb
xor
mov
xor
jge
pop
cmp
or
leave
shl
movsl
pop
sbb
cmp
loop
add
mov
inc
jne
fldt
pop
mov
es
lods
movsb
lret
cld
or
into
or
fnstsw
push
add
pop
sbb
xchg
mov
inc
popa
mov
jo
and
out
sub
fwait
out
out
lds
lret
push
pop
fstpt
jno
adc
test
std
or
or
inc
push
sbb
sarb
lret
leave
jbe
movsb
cld
sbb
or
xchg
inc
mov
popf
jno
bound
movsl
aad
mov
adc
dec
xchg
rcll
or
or
movsb
mov
fnsave
lea
inc
les
out
jns
in
pop
mov
mov
cmpsb
push
push
push
cmp
lock
insb
fisubrs
jns
jo
gs
inc
in
bsr
pop
dec
push
push
les
sbb
inc
mov
jp
and
adc
jge
loop
js
jnp
sub
jnp
cwtl
xor
mov
jo
popa
lea
popf
add
rcrl
insl
icebp
jge
or
mov
mov
in
jno
popa
lea
popf
add
rcrl
insl
icebp
jge
or
mov
mov
insl
jno
pusha
or
xor
shrb
loope
nop
sbb
mov
in
jno
lea
popf
subl
icebp
jge
jge
insl
jle
dec
dec
pop
cmp
mov
inc
mov
mov
sub
cmpsl
pop
testl
ja
ja
push
lods
daa
fdivl
int3
pop
cld
pop
in
in
push
testl
aas
mov
xchg
jle
outsb
mov
dec
mov
lds
aam
in
mul
cld
ss
dec
mov
and
sub
insb
pop
pushf
ja
or
cmp
das
xor
adc
sbb
ja
shll
cwtl
aaa
addr16
inc
xor
push
loopne
enter
fisubs
or
cmp
sub
fchs
sbb
sbb
ljmp
enter
int3
adc
cltd
or
xchg
subb
pop
dec
repnz
sub
int3
mov
pushf
add
and
movsb
pop
adc
dec
lahf
repz
fmull
mov
idivb
xchg
dec
ja
divl
pop
lods
pop
in
out
xchg
or
jns
sub
xor
rorl
outsl
xchg
xchg
fisubl
out
sub
sbb
cmp
cmp
xchg
jl
pushf
ja
inc
lods
inc
mov
fsubrl
cmc
incb
adc
and
scas
pop
xchg
adc
adc
mov
add
jne
je
imul
add
ja
and
push
test
imul
insl
orb
ret
and
adc
jmp
pop
mov
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
ja
inc
mov
aaa
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
mov
push
popf
aas
mov
mov
mov
sbb
pop
mov
jne
test
mov
add
ljmp
movsb
xchg
pop
xor
xchg
loope
cmp
push
scas
sbb
xchg
int3
outsb
push
xor
aad
xor
mov
test
jno
mov
xchg
xchg
pop
mov
inc
mov
push
mov
pop
and
mov
mov
out
in
stc
aaa
mov
rcl
fsubl
outsl
pop
push
in
out
lsl
cmpsb
sti
push
outsb
lods
mov
lret
push
nop
xor
mov
xlat
je
jmp
adc
adc
push
mov
arpl
pop
push
stos
push
gs
xorl
push
punpcklbw
cli
stos
pop
movsb
mov
or
stos
or
lcall
push
ja
jge
into
cmp
cli
stos
sbb
hlt
add
jo
jmp
sahf
adc
and
movsb
mov
out
dec
movsl
orl
xchg
and
xchg
dec
movsb
sub
lahf
movsl
rol
repz
cmpsb
push
lahf
xchg
cmc
mov
lods
lahf
jp
dec
or
js
pop
ret
inc
and
mov
mov
sbb
sub
and
or
divl
lods
lret
pushf
jno
sub
mov
sbb
scas
es
sub
sahf
mov
mov
jae
push
inc
ja
jmp
shr
push
add
fildl
mov
lods
or
push
imul
stc
call
jl
mov
lret
adc
inc
fcom
int3
or
outsb
sub
cs
mov
push
loop
test
testl
jno
movsb
add
stos
decb
inc
insb
insb
cmp
and
push
xchg
loop
pop
jp
sub
mov
jbe
add
jno
dec
ds
leave
xchg
jg
hlt
incb
sbb
repnz
clc
xor
mov
mov
in
sbb
leave
dec
push
xor
das
hlt
sbb
xchg
test
nop
das
dec
add
adc
sbb
cltd
xchg
pop
or
shlb
rolb
jb
and
jmp
out
lret
fs
jno
push
fnstcw
mov
dec
pusha
dec
aam
fcmovne
pop
inc
pop
jge
cmp
test
sarb
xchg
push
repnz
fdivrp
aaa
xorl
xor
into
cmp
cmpsl
shll
inc
dec
dec
sub
dec
out
ja
out
sub
inc
xor
cld
je
movsl
mov
dec
loop
add
nop
xchg
cmc
mov
pusha
lods
inc
inc
ljmp
ret
subl
out
push
jnp
mov
mov
scas
into
or
and
jno
cmp
lahf
cwtl
dec
push
addr16
ffreep
aad
orb
lock
shll
cmpsb
mov
mov
pop
push
cmpsb
inc
sub
js
sbb
fistpl
cmp
pop
ret
xchg
jo
enter
loopne
or
mov
mov
adc
in
dec
pop
fnsave
imul
mov
mov
das
jns
std
jbe
inc
cltd
or
mov
add
mov
ljmp
leave
lret
daa
mull
repz
movsb
cmp
pushl
hlt
push
jae
pop
jecxz
add
in
and
adc
cmp
xor
push
stos
cmpb
push
push
and
xchg
sub
mov
sbb
clc
xor
mov
inc
xchg
or
int3
fstpl
fimuls
fistps
stos
pop
pop
fs
jl
lds
test
push
dec
pop
das
imul
test
push
cltd
data16
and
xchg
bound
test
aaa
sub
add
sahf
mov
xor
mov
add
push
cmc
dec
pop
jge
cmpsb
inc
imul
inc
jne
nop
out
mov
out
cmp
xchg
repz
fwait
loopne
mov
pop
inc
fcmovb
addr16
or
sub
xchg
and
and
xchg
mov
cmc
jg
xor
xchg
dec
add
enter
stos
rcrb
adc
imul
notb
cmpsl
lea
js
rcrb
mov
aas
xorb
lcall
cmp
add
lods
add
add
jns
mov
scas
ret
adc
inc
sahf
in
add
adc
cmpl
pop
ds
and
outsl
mov
rcr
stc
ret
testl
xchg
xchg
sbb
stos
insb
gs
int3
mov
bound
das
inc
mov
sub
cmp
popa
mov
fisttpl
je
loop
or
or
call
add
push
aam
xchg
xchg
jne
push
sub
xchg
movsl
push
pop
push
sbb
jmp
xchg
cltd
inc
in
ja
iret
int3
and
sarb
mov
mov
scas
ret
icebp
pushf
mov
lret
lahf
ja
or
daa
jne
ljmp
dec
pop
or
cmpl
mov
lret
mov
jae
cwtl
dec
ja
inc
cmp
aas
cmp
movsb
inc
dec
lret
mov
cltd
jo
in
mov
lcall
push
push
mov
or
outsl
int3
fistps
add
fs
pop
lcall
gs
mov
iret
xor
iret
and
cmc
sahf
mov
cltd
sbb
rcr
stc
xor
jb
inc
shl
mov
mov
jge
js
movsl
mov
jb
aaa
xor
arpl
out
loopne
lret
push
popa
aad
sub
push
loopne
stos
sbb
push
adc
sub
arpl
pop
adc
xadd
or
or
mov
mov
cmpl
pop
xchg
jbe
adc
ret
std
and
cmp
rcr
and
lea
inc
add
subl
mov
or
pop
mov
adc
fcom
dec
mov
sbb
popa
rcl
pop
mov
lods
inc
ds
mov
adc
add
xchg
cli
insl
nop
and
movsb
sbb
adc
ficoms
mov
push
pusha
das
test
jl
xor
std
pop
js
sbb
mov
cmpsb
mov
into
inc
sub
sbb
hlt
dec
mov
int3
lcall
clc
adc
ss
and
dec
fildl
out
xchg
xchg
inc
pop
mov
pop
addr16
sarl
xchg
xchg
ret
mov
imul
in
imul
clc
push
add
push
pop
aaa
push
sbb
inc
lahf
dec
push
loopne
lock
loopne
xchg
jp
push
cwtl
mov
fidivrs
mov
mov
hlt
mov
ret
clc
icebp
imull
and
dec
mov
jge
es
mov
xchg
mov
icebp
lret
cltd
add
out
adc
cmp
sti
cmpsb
arpl
in
push
or
or
lcall
loopne
push
push
les
push
mov
dec
mov
dec
inc
in
ret
fld
jge
cmp
push
iret
jg
jp
jnp
pop
lret
jle
mov
mov
fstpl
lahf
xchg
push
loop
push
lods
lahf
jmp
xchg
es
pop
imul
ds
mov
nop
frstor
pop
dec
out
adc
test
inc
cmpsl
mov
pop
jmp
adc
arpl
push
ds
sti
test
pop
mov
fidivrl
mov
stc
dec
cmp
adc
jecxz
sub
cmp
popa
insl
or
jae
adc
popa
mov
sbb
scas
adc
sti
dec
mov
aaa
subb
jmp
mov
xchg
clc
push
fwait
repz
mov
jle
inc
sbb
into
clc
int3
push
push
cmp
aaa
std
dec
dec
xchg
mov
cld
push
ja
pop
in
inc
pop
outsb
enter
lods
mov
fiaddl
dec
xchg
sbb
and
add
popa
push
or
js
or
cmp
mov
fisttpl
dec
adc
mov
test
and
mov
xor
inc
movsb
and
jg
sbb
fsts
sbb
loope
pop
mov
sahf
jmp
xchg
mull
sub
insl
cli
push
iret
enter
cmp
jns
and
iret
and
movb
leave
cmp
dec
cmp
imul
lock
mov
orl
fnstsw
out
push
cmp
xchg
or
insb
js
and
mov
in
das
add
xchg
cmp
in
fildll
dec
pop
push
imul
std
int3
xchg
or
outsb
pop
mov
mov
loopne
lods
out
mov
push
imul
cmpsb
data16
fdivrl
mov
loope
sub
cmpsl
sbb
addr16
dec
pop
push
jns
fadd
jecxz
jnp
push
test
cli
cmpsl
sbb
addr16
xchg
cmp
stos
and
push
imul
jg
jg
cld
or
pop
jae
nop
pop
arpl
xchg
cmpsb
pop
lds
jbe
mov
cwtl
xchg
popa
adc
dec
xorl
mov
mov
mov
xor
test
adc
jp
roll
cs
jle
cmp
xchg
rorb
jbe
pop
push
pop
lret
and
sbb
cs
pop
popa
movsb
and
test
mov
or
pop
fidivrl
mov
out
clc
mov
jno
fmull
mov
add
or
popf
sbbl
jmp
xchg
out
and
xor
mov
inc
adc
dec
add
int
cmc
xor
scas
xchg
sub
fidivrl
inc
pop
and
test
sub
jae
push
imul
jo
or
loop
les
or
xchg
jnp
push
rcrb
stc
mov
jl
mov
mov
and
fstl
jnp
xchg
xchg
lahf
loop
mov
leave
adc
adc
sbb
into
dec
add
pop
in
jmp
or
inc
or
fnsave
test
jecxz
out
sub
repz
mov
add
gs
leave
dec
sub
lock
je
push
rcll
movsl
xor
je
das
stos
xchg
xor
clc
pop
push
xchg
insl
xlat
dec
mov
fnstenv
mov
pop
adc
or
adc
lcall
fstl
push
mov
cwtl
and
subb
out
cltd
push
scas
sbbl
out
mov
sub
ret
aaa
sub
lock
xor
jo
testl
mov
xchg
mov
xchg
inc
cli
aam
jg
dec
pop
in
aaa
js
sbb
cmpsl
sub
jo
imul
add
mov
popf
jle
pop
ret
test
lret
and
xor
nop
scas
std
movsb
fisubs
shll
sahf
jno
xor
mov
pop
dec
sarb
jns
pop
into
xchg
xchg
ret
mov
ss
and
xor
repnz
pop
cmp
into
fistpll
jg
jmp
lods
pop
ja
pushf
sbb
jnp
std
add
repnz
inc
out
push
cmp
mov
adc
in
clc
cmp
push
pop
nop
pushf
repz
mov
arpl
ja
and
and
adc
xchg
testb
stc
or
sbb
mov
pop
adc
mov
mov
in
jle
pop
jnp
js
push
jo
xor
pop
mov
push
jno
pushf
daa
sbb
ss
and
mov
sar
or
rcrl
aad
sti
loope
mov
xor
movsb
or
cs
xor
in
dec
add
mov
xor
out
cli
pop
psubw
jge
bound
dec
js
and
xor
fidivl
lds
shrb
das
inc
pop
push
mov
mov
add
xchg
addw
test
push
or
dec
jge
adc
mov
jmp
cmc
mov
xor
pop
push
fdivr
pop
adcl
fstpl
mov
add
jp
mov
call
lea
adc
notb
adc
shlb
rcr
jbe
adc
ret
stos
sub
dec
xchg
xorb
aad
cmp
movsl
inc
movsl
nop
push
jb
pop
and
and
loop
test
adcb
dec
icebp
test
in
dec
pop
jg
jns
pop
ret
ret
sub
mov
jmp
cmp
or
mov
add
fcmove
lea
shlb
sub
popl
sbb
in
mov
jl
fildll
mov
mov
subl
sub
repnz
adcb
pop
outsl
imul
cmp
sub
iret
push
add
jae
mov
jge
or
sahf
imul
rolb
dec
rcrb
pop
adc
cmp
test
sub
jg
xor
mov
test
loopne
mov
mov
mov
mov
pop
mov
notl
sub
loopne
pop
fildl
mov
cmp
jae
inc
inc
incl
push
lahf
pop
dec
push
addr16
testl
xor
dec
aas
mov
stc
cmp
out
aad
mov
loopne
in
ds
xchg
movsb
rorl
insl
ret
lods
mov
jnp
out
aam
jne
push
addr16
call
xor
sbb
mov
jo
sub
adc
and
loopne
flds
insl
fldt
dec
repz
xchg
xor
mov
pop
mov
push
xchg
jecxz
out
jmp
xor
pusha
xor
pop
jno
fs
xchg
daa
and
clc
outsl
mov
and
imulb
fimull
xor
repnz
dec
shl
dec
mov
push
mov
in
test
insl
imul
inc
idivb
xor
cli
xor
lret
nop
pop
or
pop
negb
sbb
nop
dec
cli
mov
add
lahf
add
and
adc
outsl
clc
mov
negl
cli
repnz
add
ret
lea
push
xor
mov
mov
push
ljmp
es
jmp
test
add
imull
fiaddl
loop
inc
xor
pop
mov
adc
mov
mov
shrl
xchg
jp
mov
outsl
sbb
bound
aaa
adc
inc
leave
and
ror
sbb
adc
add
in
push
mov
lretw
jne
or
mov
gs
mov
add
fsubrl
mov
adc
fcmovb
xchg
sahf
adc
xor
and
dec
insb
cs
jecxz
insw
scas
mov
push
jle
and
les
add
mov
sub
in
push
scas
xor
xchg
mov
shll
paddq
push
mov
ror
adc
stos
xor
adc
jp
xchg
mov
pop
aad
jae
jno
idivl
out
leave
std
cs
xchg
xchg
stos
cmpb
orb
nop
jl
xor
movsl
popa
outsb
loop
mul
loop
sbb
out
dec
pop
lods
enter
outsl
repz
pop
lahf
out
cmpsl
inc
push
loopne
cwtl
aad
lods
dec
div
das
or
int
cmc
movsl
lods
mov
inc
push
cmc
xchg
sub
pop
aad
xor
cmp
jecxz
fwait
data16
xchg
cmp
roll
mov
jg
or
adc
ret
xchg
sub
or
xchg
push
push
mov
rep
arpl
fildll
ljmp
es
inc
popf
enter
pop
inc
in
adc
lock
mov
sub
add
inc
sub
jb
sbb
pop
out
es
stos
mov
inc
jns
mov
mov
xchg
jnp
pop
add
lds
repz
and
sbb
lods
fnstsw
push
jno
jnp
inc
in
in
cmp
lahf
push
jge
mov
sarl
aam
jns
mov
in
lods
dec
dec
jae
sbb
cmc
xor
pop
outsl
sahf
out
imul
loopne
mov
roll
mov
stos
ljmp
push
cltd
xor
mov
mov
or
cmp
push
or
fstl
pop
nop
lods
and
sbb
lods
xor
adc
das
and
xor
nop
cmpsb
mov
add
cmp
insb
cmp
stos
lahf
and
jnp
imul
sbbb
pop
mov
adc
push
insb
push
cs
stos
mov
clc
pop
movsb
sub
loopne
xlat
fcoml
inc
jecxz
mov
jae
cmpl
inc
mov
sbb
cmp
pop
or
pop
dec
out
jp
pop
cmp
rclb
mov
sub
mov
sub
jno
orl
stos
or
test
push
cltd
mov
xor
ret
sub
mov
push
std
push
sub
add
shrl
cwtl
hlt
pusha
xor
int3
insl
filds
lods
cld
add
fistps
into
clc
mov
mov
lods
dec
pop
cmpb
add
push
sbb
cld
lret
and
stc
popf
cmp
xchg
scas
data16
into
sub
dec
xor
rcrb
and
cmpsl
mov
cltd
fsts
cmp
lds
xor
ds
or
cmp
inc
pop
lock
cmp
movl
mov
insl
adc
shlb
scas
mov
sub
sub
test
xchg
mov
insb
pop
addl
pop
ja
imul
sbb
pxor
xlat
jae
in
sahf
hlt
xor
mov
jmp
in
sub
mov
fdivrl
inc
cmp
movsl
jp
pushf
fmuls
dec
add
inc
dec
pop
mov
loop
movsl
jne
push
or
repnz
lcall
inc
fwait
cld
sbb
pop
xor
add
jmp
aaa
in
test
loop
or
out
outsl
dec
sub
jo
js
xor
sar
mov
sbb
in
lcall
test
bound
lcall
jns
pop
sub
or
or
sbb
mov
pop
mov
mov
insb
stc
or
scas
dec
xchg
mov
popa
xchg
icebp
cmp
jmp
push
leave
jbe
xlat
adc
add
mov
jbe
and
push
inc
mov
cs
or
mov
xchg
inc
imul
aaa
jg
es
mov
mov
stos
out
insb
jo
sub
and
cmpl
mov
push
cmp
xlat
adcb
and
mov
call
in
lahf
cmp
inc
sbb
lret
jl
jb
icebp
in
mov
sub
repz
push
ret
inc
mov
jp
pusha
call
jg
cld
pop
or
insl
inc
adc
or
out
sub
xor
lahf
clc
outsl
cs
push
jbe
mov
xor
adc
sbb
jae
aam
in
xor
lret
xor
lcall
daa
clc
dec
inc
loope
jmp
inc
inc
lcall
sub
cmp
addl
or
int3
roll
sbb
shrb
or
cmc
fs
push
movsl
add
imul
xchg
inc
rcrb
mov
mov
decl
jg
or
in
sbb
xchg
push
and
cmp
movsb
movsl
testb
jecxz
testl
sbbl
jne
xchg
es
mov
aaa
out
mov
jmp
fs
jp
and
mov
sti
mov
rorb
cmpsb
mov
imul
insb
xchg
int3
pop
imul
xchg
pop
movsb
sub
sbb
mov
mov
popa
test
call
loop
jp
shlb
insl
push
or
adc
xlat
inc
test
aaa
pop
add
test
push
fdivrs
cmp
inc
ret
xchg
sub
repz
test
rol
cli
mov
mov
push
cmc
mov
pop
sbb
lds
mov
dec
out
push
aas
aad
lcall
testb
pop
sbb
jmp
pop
mov
sub
loopne
imul
bound
and
jne
stc
in
jecxz
dec
repnz
jg
cmp
mov
setle
cmp
jmp
cli
insb
cld
mov
or
nop
mov
mov
mov
ret
repz
mov
iret
xchg
pop
jl
mov
adc
cmpsb
sarl
sahf
fistl
cmc
mov
es
mov
sub
ss
lret
out
mov
pop
cmp
sahf
jb
enter
cwtl
sub
xor
ret
inc
fsubr
insl
iret
jle
cmp
sahf
loop
loopne
icebp
stos
jmp
pop
idivl
add
push
bound
lods
sub
cmp
sbb
jno
mov
fistps
push
pop
shrb
loope
push
xor
adc
xorl
sub
push
lods
daa
fdivl
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
ja
inc
mov
aaa
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
ja
inc
mov
aaa
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
insb
push
pushf
inc
mov
push
lods
daa
fdivl
int3
xchg
xchg
in
sbb
cmpsb
insl
cmp
pop
rcl
aas
mov
subl
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sahf
data16
std
pop
xchg
lret
push
mov
add
add
push
add
push
add
pop
add
pop
add
add
add
pop
add
add
push
add
add
dec
add
add
add
pop
add
add
xor
add
add
add
xor
inc
add
add
add
stc
add
lods
add
add
and
mov
add
add
hlt
add
add
add
add
add
add
aam
dec
add
push
add
add
add
add
daa
add
sbb
add
add
aaa
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
sub
fldl
ltr
add
hlt
add
add
imul
pop
add
add
add
add
mov
aaa
add
add
ret
add
add
add
add
and
pop
add
rolb
pusha
add
add
add
hlt
add
outsl
add
add
adc
pusha
add
pop
add
add
add
mov
inc
add
add
add
add
add
adc
sbb
push
add
add
lock
adc
jmp
or
mov
mov
fldl
add
push
add
test
mov
jnp
pop
add
das
add
add
add
sub
hlt
add
jecxz
push
add
add
outsl
add
add
add
dec
add
add
add
pop
add
add
verw
or
xchg
add
add
add
add
xchg
push
add
add
add
daa
add
add
add
jecxz
jle
data16
pop
add
add
add
or
add
adc
add
add
add
add
and
outsb
add
pop
add
sub
push
add
add
add
add
add
add
add
int3
add
call
add
add
add
add
add
mov
sub
jno
dec
add
add
add
pop
add
add
add
pop
add
add
add
adc
add
add
and
adc
pop
add
mov
pop
add
sub
rolb
cmp
push
add
add
add
data16
add
sub
dec
add
add
add
add
pusha
add
add
stos
add
cmp
xchg
popf
add
add
add
or
nop
add
movl
adc
jo
mov
pop
add
dec
add
add
add
push
add
movb
add
sbb
addb
add
pusha
add
add
add
add
add
add
sub
addb
add
add
add
push
add
add
sti
add
xchg
popf
add
inc
add
sahf
add
add
add
add
add
add
add
test
test
or
add
add
add
add
flds
add
add
add
add
add
xchg
add
add
add
add
add
add
sub
inc
add
add
add
add
in
loop
adc
lahf
or
pushf
adc
sahf
and
mov
into
dec
test
add
cmp
inc
lods
lret
jg
mov
add
inc
imul
xchg
call
gs
or
pop
or
fdivl
dec
dec
and
bound
inc
add
mov
cmp
cmp
in
in
cld
mov
imul
mov
adc
cmp
lds
inc
je
xlat
inc
add
out
insb
mov
insl
xchg
push
xor
call
dec
cmp
pop
lahf
or
out
dec
sti
adc
cmp
out
test
mov
pop
xchg
pop
test
sar
subb
test
jb
sbb
lea
test
jmp
mov
sbb
xchg
ret
push
or
xchg
bnd
push
lea
sbb
in
xor
jns
popa
pop
nop
roll
adc
push
xchg
inc
xorb
jo
add
movsl
bound
inc
cmpsb
or
xor
loopne,pn
adc
mov
fnstcw
lods
movsb
pop
mov
movsb
mov
adc
fisubs
movl
cli
sub
into
aaa
emms
test
roll
jno
dec
push
icebp
or
daa
cwtl
aas
hlt
es
jmp
sar
or
fbstp
or
mov
xlat
adc
cwtl
and
and
neg
jmp
or
insl
mov
out
adc
scas
addr16
sub
cmpsl
lret
xchg
sub
out
pop
out
enter
or
cmpsb
jmp
cli
xor
adc
lret
mov
mov
cmc
mov
outsl
xchg
inc
in
mov
xor
insl
andb
push
sbb
mov
xchg
pop
adc
fbld
add
add
mov
dec
sbb
cmpsb
cmpb
xor
mov
out
test
in
mov
jge,pn
or
mov
fwait
scas
mov
test
pop
pop
mov
dec
push
cmp
add
lret
mov
jae,pt
test
mov
xor
pusha
sub
inc
push
aaa
bound
push
test
dec
dec
sbb
lds
iret
sbb
lock
fnstsw
xchg
dec
ret
dec
movsb
int
jle
lar
jnp
and
pop
test
stos
push
in
adc
adc
push
subb
mov
into
mov
dec
jae
lock
or
mov
ret
outsl
std
and
push
loopne
inc
add
mov
pushf
aam
mov
int
jo
aad
sbb
into
or
sbb
pop
insb
fnsave
pusha
or
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
