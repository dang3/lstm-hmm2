int
test
add
mov
pushf
adc
insb
ss
or
mov
adc
sti
jne
fisttps
and
dec
push
paddusb
mov
scas
es
xor
push
adc
xor
std
mov
inc
sub
push
int3
and
pop
cmpb
sub
jl
add
incl
in
or
add
push
jnp
ljmp
call
mov
push
mov
push
call
pop
ret
das
sbb
mov
push
inc
add
movl
xchg
data16
inc
xor
out
xchg
in
or
in
aas
mov
shl
imul
mov
out
sbb
jl
out
and
sbbb
mov
jl
mov
adcl
adc
sti
add
mov
xor
aas
dec
xchg
cli
movsb
push
and
push
xor
ret
or
xchg
jp
mov
dec
jle
sbb
enter
inc
repnz
inc
sub
xchg
pop
and
inc
mov
cld
fsubrl
mov
inc
dec
aas
dec
xchg
pop
nop
dec
inc
shlb
xor
call
xchg
and
dec
aam
dec
jle
or
sub
mov
test
dec
sbb
sahf
or
cld
sub
pop
dec
rorb
in
scas
inc
scas
push
dec
push
xor
cld
mov
xchg
and
xlat
into
mov
sarl
mov
lea
stc
push
ss
xor
xchg
and
scas
ljmp
insb
pop
mov
fs
xchg
cmp
add
xchg
pop
and
push
leave
nop
cld
sub
jp
and
xchg
inc
pop
leave
pop
pop
pop
push
xor
add
xchg
or
xchg
and
lcall
jle
or
js
xor
mov
jns
push
xchg
pop
and
test
nop
cld
sub
xor
movsl
and
in
leave
xor
xor
dec
and
inc
mov
push
xor
idivl
mov
mov
cmp
xchg
or
pushf
mov
xor
cwtl
mov
repnz
pop
or
clc
loopne
sub
xchg
pop
bound
leave
nop
arpl
pushf
jl
mov
gs
xor
in
xor
nop
cld
sub
gs
xchg
sub
xchg
inc
leave
mov
dec
cmp
ds
repnz
nop
std
sub
xor
in
cld
push
lcall
sub
stc
test
out
mov
xchg
or
lock
shlb
loopne
fs
outsb
fcoms
mulb
xor
addr16
addr16
pop
gs
jo
add
or
jno
sbb
out
in
leave
jb
into
insb
mov
dec
cmp
dec
xlat
je
fsts
lea
xor
in
push
sbb
jg
shlb
mov
push
movl
fnstsw
je
mov
push
call
add
cmp
je
mov
cmp
jmp
ret
jge
inc
jl
jmp
jmp
jmp
cmpl
jl
mov
push
sub
add
out
jmp
jmp
xor
in
ljmp
mov
pop
sub
lea
mov
movl
insb
add
push
add
mov
outsl
mov
dec
hlt
mov
push
dec
push
dec
or
dec
clc
mov
mov
in
dec
jl
cmpl
jmp
mov
add
movb
imul
out
sub
insl
push
lcall
mov
jmp
or
dec
cmp
dec
cld
push
clc
outsb
fs
call
clc
mov
call
add
cmp
dec
decl
rclb
mov
pop
fdivr
adc
mov
push
inc
push
call
movl
out
or
add
or
shl
jne
cmp
jae
mov
movswl
cmp
push
hlt
add
add
push
add
cld
push
call
ds
cs
sub
push
or
sub
insl
push
cmpsb
push
clc
jg
rclb
test
pushl
inc
mov
lea
push
aam
fsubr
into
hlt
movl
out
jmp
pop
inc
add
cld
mov
lea
mov
jae
ds
lea
jne
mov
imul
adc
and
shll
jle
mov
pop
mov
fdivs
jg
insb
and
ret
das
test
in
sub
lcall
push
mov
inc
es
es
inc
jb
orl
add
js
push
mov
and
jge
lea
xchg
pop
jb
fs
movl
push
jne
push
out
or
jne
push
and
fadd
inc
and
fsubr
sbb
movl
rclb
imul
cmp
jge
mov
cs
or
test
mov
sbb
push
mov
push
call
popa
int3
mov
mov
jnp
mov
push
mov
adc
push
test
call
add
rcrb
fnstsw
xchg
add
mov
clc
sti
in
out
jg
test
or
or
cld
insl
xchg
mov
lea
or
je
sub
ret
fmul
pop
test
sbb
push
int3
sbb
popa
addr16
out
pop
jnp
or
add
xchg
cmp
out
mov
jmp
sbb
mov
gs
std
mov
dec
add
push
das
insb
fdivs
inc
hlt
add
mov
jb
lahf
adc
mov
bound
ret
fwait
sbb
mov
fistl
into
sub
ret
data16
mull
mov
adc
ds
clts
push
add
aaa
sbb
fwait
int
sbb
dec
int3
jp
data16
adc
mov
in
cld
add
and
add
adc
pop
test
push
mov
adc
pop
inc
rorl
fucomi
repnz
jmp
cmpsb
add
inc
push
ret
ja
dec
test
and
pop
fs
arpl
lea
std
ja
sbb
push
call
push
lea
gs
filds
push
push
outsl
push
mov
pop
xchg
mov
jb
or
out
fnstsw
dec
clc
mov
cld
mov
sbb
xor
je
decl
or
aaa
push
test
add
sbb
mov
dec
xor
inc
mov
mov
in
inc
lods
pop
xor
imul
dec
jne
push
or
or
test
adc
test
out
stos
cbtw
loopne
or
sti
mov
adc
dec
popa
pusha
loop
out
pop
lea
jns
es
les
mov
push
daa
dec
bound
shlb
push
push
aas
xlat
lahf
sbb
pop
push
mov
pop
and
xchg
jb
pop
xchg
jae
or
or
push
data16
stc
notl
sub
and
test
jmp
mov
call
mov
push
cmp
xchg
je
inc
fadds
je
lea
shrb
rorb
mov
pop
mov
test
lds
sbb
push
fisttpll
fsubs
add
sub
movl
add
inc
lds
mov
lds
sbb
add
pop
jg
int
sbb
push
lea
mov
clc
adc
int3
inc
mov
insb
jbe
cld
dec
popl
pop
push
arpl
adc
dec
je
loope
add
dec
iret
shlb
adc
adc
loopne
jo
inc
add
incl
jae
cmp
lret
add
js
inc
rcrl
jp
loop
call
xor
dec
aaa
std
test
in
cmp
inc
in
push
daa
movsb
aam
call
lea
cmp
cmpsb
cmpsb
cmp
or
push
fmull
jmp
mov
mov
mov
mov
mov
adc
mov
in
pushf
mov
inc
mov
mov
push
or
and
mov
in
and
stc
sahf
cli
lods
add
sub
push
jns
pop
scas
pop
insl
loop
ss
lret
or
in
jl
and
pop
mov
sbb
lock
mov
shll
jae
add
aas
push
add
pop
ret
adc
mov
add
mov
or
decl
es
clc
mov
adc
loop
push
hlt
cmpl
je
mov
mov
add
xor
cld
idiv
push
outsl
push
shr
mov
shl
mov
mov
and
and
push
out
jg
or
push
adc
push
or
dec
pop
jle
fmuls
outsl
enter
cli
incl
es
clc
cmpl
jae
mov
xor
jl
cld
subb
pop
cwtl
clc
sub
add
iret
jns
js
sub
pop
add
sbb
fistpll
sbb
addl
xchg
loop
jmp
push
push
pop
push
incl
addr16
cld
pop
jne
loope
inc
push
sbb
dec
negb
dec
hlt
mov
cld
lcall
mov
mov
shl
xchg
and
shl
or
xchg
and
xchg
std
add
loop
or
adc
mov
pop
stc
fadd
xor
shl
sbb
and
shll
fsub
adc
and
sbb
test
xorl
adc
inc
adc
and
lret
je
clc
fists
add
enter
jmp
push
and
incl
add
adc
rorl
fisttps
ljmp
or
rolb
mov
in
test
pop
mov
inc
mov
rcr
adc
mov
ljmp
and
clc
movzbl
or
aaa
cmp
xchg
or
cmp
and
insb
add
or
add
sar
in
shr
mov
shl
or
inc
nop
mov
aas
jl
push
push
or
lcall
cs
adc
add
inc
clc
xor
ret
inc
into
decb
shr
and
and
cwtl
cmp
add
xchg
movzbl
and
call
push
cmp
hlt
or
pop
fwait
jne
inc
clc
or
ss
inc
add
and
movzbl
jecxz
mov
ljmp
mov
add
mov
xor
enter
pop
xor
ljmp
in
xchg
shl
and
xchg
add
or
mov
clc
jbe
call
mov
mov
cmc
mov
and
pusha
adcb
aad
push
xchg
dec
add
dec
add
decl
push
dec
cmp
cmp
add
jb
es
sbb
add
mov
mov
test
mov
cmp
scas
fcompl
push
adcb
inc
aam
mov
mov
sbb
dec
les
inc
enter
clc
mov
in
adc
pop
mov
dec
mov
ljmp
fldl
dec
les
push
rorb
sti
incl
mov
mov
cmp
sbb
neg
add
add
sbb
sti
nop
xchg
inc
in
in
add
pop
inc
in
dec
in
andb
add
jne
cli
push
call
mov
cld
mov
xor
imul
mov
in
decl
mov
mov
mov
fistpl
mov
mov
pop
loop
out
mov
rorb
push
int3
push
lea
push
add
les
dec
hlt
add
push
cmpl
dec
mov
jmp
push
fiadds
pop
adc
int3
jg
or
ret
icebp
rclb
ret
rorb
jo
or
or
lock
in
mov
popf
adc
ja
cmp
sbb
neg
mov
xchg
jl
add
sarl
ret
add
ja
or
clc
lock
lock
push
dec
in
and
shr
mov
lret
cmp
add
add
xchg
pusha
sbb
clc
cmp
sbb
neg
mov
fs
out
popf
mov
add
push
inc
js
dec
lock
fmul
leave
clc
sub
leave
data16
cld
nop
scas
mov
sbb
testl
push
clc
popf
loope
mov
jl
repz
pop
out
sub
lock
iret
out
enter
js
scas
int3
jne
xor
scas
xor
scas
xlat
loopne
push
js
adc
sti
and
inc
lock
clc
sub
xor
add
js
insl
xor
outsl
xor
imul
mov
adc
mov
dec
clc
js
fcoml
inc
or
out
rolb
sbb
add
scas
or
or
lock
cli
int3
inc
push
enter
xor
sbb
enter
out
js
scas
call
lret
adc
arpl
inc
icebp
ja,pt
mov
adc
fs
icebp
rcrb
scas
imul
mov
enter
pop
cmpl
icebp
shl
xchg
loope
inc
les
xor
sbb
pop
cwtl
scas
or
or
test
test
icebp
lods
inc
add
cmc
scas
int3
clc
scas
movsb
xor
sbb
xlat
xor
adc
out
lret
nop
and
adc
enter
scas
xor
pop
mov
xor
js
icebp
push
cmpsl
mov
js
push
jl
cmp
xor
inc
jo
dec
je
and
lock
add
push
sbb
xchg
jno
pusha
xor
mov
add
lcall
add
pop
movb
cmp
dec
dec
mov
cld
inc
scas
in
push
inc
lcall
sbb
xor
xor
adc
cmp
mov
mov
enter
sub
imul
sub
push
sbb
sbb
mov
jb
pop
dec
adc
sbb
arpl
and
rcrl
ljmp
stos
xchg
dec
add
es
mov
ljmp
les
inc
cld
mov
scas
push
lock
fwait
dec
inc
ja
hlt
mov
pusha
fistpll
add
pop
movss
and
out
mov
adc
push
add
iret
push
push
mov
adc
mov
add
cmp
jbe
cmp
pop
clc
jb
xor
hlt
dec
inc
add
je
aad
call
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
push
cmp
lcall
jne
shr
and
cmp
jb
rep
jmp
nop
mov
out
mov
add
or
loopne
add
jmp
jmp
divl
mov
or
rorl
push
mov
mov
mov
mov
push
mov
add
add
and
dec
add
and
ss
add
and
add
movl
jae
cmpsb
imul
fnstsw
mov
mov
pop
call
shr
in
lock
js
xor
hlt
clc
clc
cld
cld
lea
sbb
add
add
push
mov
hlt
lods
push
out
mov
int3
scas
pop
pop
leave
ret
nop
icebp
fsubrs
std
adc
pop
adc
push
sbb
lock
nop
lea
lea
test
or
or
ja
inc
inc
add
loopne
jb
out
inc
inc
add
stc
sub
sbb
sub
inc
or
nop
and
cld
outsl
mov
and
mov
sub
out
mov
popa
cs
pop
dec
and
jle
sub
sub
mov
arpl
add
int
add
fdivrs
sub
sub
jb
xor
imul
int
subl
add
imul
dec
shll
sbb
adc
xor
rcll
or
or
sti
pop
or
add
testb
lcall
xor
int3
loopne
add
cwtl
jae
lds
pusha
push
aaa
fnstcw
add
fadds
es
fs
inc
add
or
loopne
mov
cmp
add
mov
and
or
push
sub
ljmp
cmp
dec
pop
jne
mov
inc
add
std
push
inc
add
jne
cmpw
cmpl
xor
ja
out
cmp
rorl
push
push
dec
push
sub
gs
add
adc
movl
mov
push
mov
sbb
test
jne
mov
adc
aaa
mov
cmp
mov
push
call
lcall
shlb
loopne
sbb
inc
loopne
dec
idiv
incl
mov
mov
mov
mov
and
sub
and
cmp
je
or
shl
mov
add
lock
ret
cmp
mov
and
cmp
xor
inc
push
or
cmp
push
push
pop
jg
push
or
std
cltd
sbb
or
dec
dec
mov
or
jge
out
or
or
fistps
adc
in
inc
insb
addr16
ja
enter
mov
sbb
and
or
jae
sbb
dec
adc
inc
in
pop
mov
dec
shr
push
pop
push
push
push
push
stos
sbb
outsl
mov
cmpl
jne
xor
xchg
adc
mov
mov
mov
mov
mov
push
lock
imul
mov
loope
gs
mov
incb
mov
jmp
xor
inc
ret
sub
mov
and
ret
sub
cmpb
push
push
cld
aaa
in
in
or
clc
in
jmp
dec
adc
jmp
fwait
push
add
outsl
push
add
add
xlat
std
push
and
movdqa
add
jg
ss
outsl
inc
sbb
push
add
pusha
jle
cli
data16
and
jg
jg
jg
jo
mov
mov
mov
mov
cld
push
incl
repz
sbb
jge
orl
mov
sar
dec
and
and
push
cltd
mov
xor
sub
dec
gs
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
jb,pn
xchg
cmp
mov
cmp
call
mov
roll
sar
in
add
mov
in
mov
mov
rep
data16
cmp
jne
neg
add
sbb
or
sbb
add
movswl
js
lret
inc
in
push
xchg
ja
fdivs
sub
mov
mov
movsl
mov
fmul
jne
add
jge
cld
loop
orl
and
mov
icebp
lahf
hlt
neg
sbb
and
decl
cmp
insl
loopne
sub
and
inc
adc
and
cmp
and
push
cmp
inc
cltd
or
xor
jo
dec
cld
ret
push
hlt
mov
inc
cli
andb
pushl
ja
icebp
out
pop
sub
push
xchg
sti
pop
clc
xor
sbb
int
std
aad
xchg
push
pusha
call
ret
push
dec
sti
out
out
cmp
pop
or
adc
cli
pop
lds
or
aad
ret
push
mov
jmp
mov
cmp
pop
movb
and
loope
ja
jb
pop
pop
or
shr
jo
mov
xchg
sti
decl
sbbl
jb
pop
ret
mov
push
xor
cmp
jne
gs
clc
mov
movl
add
push
pop
push
fdivr
jmp
cmp
je
mov
xor
ss
ss
cmp
je
mov
mov
cmp
lods
adc
fwait
cmp
es
cld
or
inc
add
aas
sahf
nop
and
cmpl
icebp
aaa
mov
pop
test
pop
je
add
cmp
out
pop
adc
mov
and
inc
add
mov
cmp
and
jmp
mov
push
push
pop
sahf
mov
mov
mov
jg
sar
pop
jae
and
jb
cmpl
adc
out
sbb
push
push
push
push
mov
jae
adc
sbb
push
sub
scas
sbb
mov
ja
sbb
mov
adc
mov
pop
pushl
ja
pushl
decl
pop
pop
mov
mov
cmp
je
sub
or
jne
jb
cmp
std
add
xor
clc
je
push
or
call
jmp
push
mov
sub
push
mov
push
aas
jl
jge
add
mov
lods
and
jne
cmp
mov
andl
xchg
dec
mov
add
inc
ds
sahf
cmp
add
push
pop
adc
push
cs
std
fidivrs
pop
pop
add
aas
lahf
iret
out
jae
or
inc
cmp
push
cmpsb
dec
lods
dec
add
pop
idiv
decl
loopne
jge
add
jne
pushl
pushl
pushl
pushl
xlat
fstpl
adc
ret
push
push
mov
push
push
xor
xor
cmp
sbb
push
inc
cmp
sar
pop
jae
add
cwtl
sti
out
popf
push
cmp
pop
je
mov
out
mov
adc
je
jg
inc
mov
push
mov
xlat
jo
mov
inc
adc
sbb
or
cmpsb
ja
fdivrl
add
adc
lds
outsb
es
add
add
push
jae
addl
rclb
inc
sbb
jg
ljmp
inc
cmp
pop
jbe
imul
or
out
rcr
les
push
pop
push
sti
adc
xor
xchg
add
imulb
daa
push
stos
fs
pop
enter
xor
sbb
and
pushf
orl
les
iretw
fstp
jmp
push
call
cmp
je
cmp
je
push
lea
out
fsts
push
pushl
enter
push
pushl
push
call
pop
xor
pop
pop
pop
pop
leave
pop
cmp
outsb
or
pop
jb
inc
mov
sarl
lcall
out
lock
push
push
cs
inc
aas
jle
or
ljmp
call
adc
icebp
imul
add
add
cmp
jb
imul
add
jmp
and
pop
cmp
jae
pop
add
push
push
jnp
pop
jge
dec
push
and
mov
mov
loopne
popa
lret
cmp
fsubrs
or
rorl
cmp
xchg
imul
add
cmp
jae
cmp
jne
mov
sarb
pop
cld
or
daa
jne
xor
movb
sti
mov
incb
or
repnz
mov
dec
pusha
xor
or
dec
pusha
mov
fwait
cli
cmp
jne
dec
mov
rcrl
sti
add
cmp
jge
mov
jle
andl
mov
mov
nop
cmp
jl
mov
add
mov
jae
fs
movl
cmp
inc
jle
stc
dec
cmp
xchg
in
nop
lahf
test
cmp
mov
push
cmp
ud0
out
jmp
call
pop
mov
jmp
in
call
mov
pop
mov
or
pop
pop
pop
pop
fwait
clc
loop
ret
mov
or
orb
js
push
scas
aaa
sahf
cmp
lret
fbstp
mov
cmp
ja
or
cmp
jne
xor
test
sete
mov
movzbl
repnz
mov
adc
add
jmp
sub
inc
mov
test
jne
pop
mov
jle
pop
ret
push
xor
cmp
push
cld
or
jne
popf
mov
cmp
je
inc
cmp
lea
mov
cmp
jne
push
inc
pop
fistps
mov
cmp
pop
pop
mov
mov
fldpi
inc
xor
cmp
add
jne
cmp
notl
je
push
push
fwait
rorl
and
add
cmc
cmp
jne
decl
mov
mov
add
out
cmpsl
push
sub
ret
pushl
fidivrl
fwait
mov
add
push
mov
push
xor
cmp
push
mov
mov
push
out
ljmp
add
or
or
adc
and
and
cld
mov
sete
inc
adc
cmp
pop
test
je
mov
mov
inc
mov
mov
movzbl
or
ret
push
inc
insb
push
adc
pop
mov
or
incl
mov
inc
test
pop
jo
xor
push
cltd
jne
cmp
je
cmp
jne
dec
add
inc
incl
aas
cmp
xchg
cmpb
je
add
rclb
or
inc
jmp
dec
jmp
sbb
shll
mov
incl
mov
xor
jmp
inc
inc
cmpb
je
lods
es
jne
data16
outsb
ret
aaa
std
lea
cmpb
data16
xor
fadds
neg
xchg
shr
mov
dec
jl
pop
inc
sar
fisttps
lret
pop
je
cmp
or
je
cmp
je
daa
sti
incl
rorb
mov
in
mov
fmulp
push
out
fdivr
pop
or
jmp
and
jno
add
pop
sbb
inc
xor
imul
add
mov
dec
adc
leave
test
pop
pop
je
andl
incl
leave
xchg
sub
adcb
cld
sbb
cmp
cmp
inc
add
ja
clc
mov
xor
sbb
jne
mov
mov
push
push
push
lea
xchg
inc
es
ljmp
pop
jns
aas
jae
mov
cmp
jae
mov
shl
sar
decb
jb
jp
cmpsl
mov
cmp
pop
je
ja,pt
pop
testb
push
push
inc
dec
mov
lock
std
add
leave
ret
push
push
mov
inc
xchg
push
push
push
push
mov
cld
aas
fidivrs
pop
jne
call
push
je
movl
call
js
or
add
or
cmp
jne
cmp
incl
dec
movsl
cmp
mov
je
add
cmp
jne
push
repnz
decl
mov
push
sar
inc
push
push
push
push
mov
cmp
cltd
xchg
mov
xor
adc
je
push
push
scas
test
adc
or
filds
pop
and
cld
adc
adc
ja
mov
jmp
cmp
je
cmp
jne
call
out
mov
inc
cmp
je
inc
cmp
jne
add
sub
inc
mov
shll
divl
inc
or
loop
xchg
shll
call
mov
pop
pop
pop
pop
jae
push
push
inc
cld
hlt
lea
test
jmp
or
xor
cmp
jg
outsl
loop
test
mov
mov
add
add
jmp
pushl
movb
orl
movb
mov
movb
movb
movb
cmp
mov
add
aaa
add
cmp
loopne
lock
je
rcrb
mov
arpl
lea
push
mov
mov
movl
es
pop
int
mov
std
std
mov
lea
add
ss
xchg
addl
iret
fsubl
sahf
xchg
adc
cmp
jb
incl
cmp
aas
negb
andl
test
jle
mov
mov
lods
je
lock
call
stc
je
mov
test
je
test
jne
push
call
fdivrp
cmp
jne
mov
sar
and
shl
add
push
mov
push
incl
mov
push
lea
in
xchg
pop
pop
test
je
inc
or
addl
cmp
jl
xor
mov
inc
xor
inc
push
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
mov
jmp
mov
dec
call
fs
arpl
clc
cmp
je
jae
push
fwait
sti
jg
clc
xor
ds
jne
inc
jmp
cmp
jne
push
out
jbe
lods
or
or
movl
xchg
inc
cmp
jl
ret
jnp
adc
push
push
push
rcll
or
aaa
jbe
push
mov
lea
std
scas
jnp
hlt
or
aas
mov
add
add
sbb
clc
jb
imul
add
movb
mov
jl
pop
pop
ret
push
push
mov
mov
lock
push
push
out
in
fucomip
loopne
and
testb
in
and
fistl
scas
cmp
fwait
loopne
pop
jle
mov
jmp
push
push
call
add
cmp
cmpxchg
icebp
pushl
xor
jbe
push
push
in
cmc
pushl
mov
je
sbb
inc
add
cmp
jb
jmp
andl
out
pop
pop
lret
fisttps
pushl
ja
call
sbb
lret
sbb
ja
sti
call
call
sbb
mov
push
mov
dec
xchg
mov
in
and
push
outsl
mov
or
rorb
dec
or
push
or
push
mov
add
jbe
out
mov
sub
adc
xor
add
adc
push
jae
out
xchg
call
testb
xor
ja
mov
mov
mov
cmp
fadd
jle
cmp
pushl
ret
push
xchg
cmp
push
push
sbb
mov
pop
push
pop
cmp
orl
call
push
push
scas
subb
jne
movl
xor
mov
jo
pushf
jns
lock
pushl
mov
xchg
out
sbb
jo
xchg
jg
sbb
inc
movb
hlt
inc
add
jg
add
ficompl
pop
pop
mov
mov
inc
insb
repz
pushl
outsl
js
cltd
fmul
sbbb
inc
adc
es
mov
push
dec
stos
sbb
fucomp
pushl
dec
or
rclb
push
mov
adc
lock
pop
pop
je
in
push
ret
sub
push
ja
add
call
add
mov
jmp
call
jle
imulb
pop
pop
stos
ja
adc
jne
push
sbb
pop
pop
push
push
idivb
nop
mov
mov
bound
mov
psubusb
inc
or
dec
pop
cmp
js
push
dec
jle
pusha
pop
outsb
xor
mov
push
jno
loope
mov
dec
jmp
mov
adc
cmp
std
incl
pop
cmp
call
or
aas
add
sbb
mov
xchg
dec
notl
push
les
in
vprotq
mov
cmp
pushl
mov
test
jne
nop
lea
cs
cmp
sbb
mov
add
mov
dec
fistps
or
pop
xor
jmp
call
icebp
filds
clc
je
dec
push
xor
pop
ret
push
mov
shrb
push
call
push
inc
xchg
out
adc
or
xchg
or
lahf
mov
cmpl
mov
lock
cmpl
cmp
jbe
mov
mulb
add
shrl
mov
mov
xor
push
mov
je
sar
xor
rorb
dec
push
push
test
bound
setbe
arpl
add
insb
or
aaa
inc
gs
xor
push
push
insl
andb
ret
sahf
je
cmp
add
sbb
sbb
add
pop
insl
addr16
pop
enter
cmp
push
popa
xor
pusha
and
fcomps
das
je
jmp
push
or
sbb
jg
and
cmpl
jb
pop
mov
ret
push
pop
leave
ret
incl
push
cmp
outsl
js
adc
add
test
mov
xor
inc
fcoms
jmp
stc
fsubs
movd
push
mov
adc
fstp
out
call
or
jmp
pop
ret
push
xor
cmpl
add
push
mov
cmp
adc
jbe
cmp
add
xchg
jbe
inc
adc
std
addr16
roll
cmp
pushl
subl
pop
or
sub
pop
ret
mov
arpl
pushl
lock
addl
adc
add
loopne
push
push
mov
aaa
and
inc
cld
xor
push
mov
pushl
mov
fcomip
jg
mov
lea
mov
dec
lock
out
mov
mov
pop
push
pop
cli
adc
cmp
pop
cmp
decb
add
xor
je
lret
or
inc
or
loop
bound
push
cwtl
lret
sub
ja
std
fwait
jle
push
push
mov
xor
inc
mov
adc
movl
je
mov
add
xor
incl
mulb
dec
or
inc
or
inc
and
testb
jne
pop
outsl
mov
cmp
mov
lea
mov
decl
push
cld
je
lea
mov
test
lea
mov
sbb
je
cld
imul
push
mov
push
cltd
into
test
jbe
jl
jg
and
bound
jne
cmpb
xchg
xchg
ficomps
les
mov
fiaddl
cmp
jne
leave
aaa
mov
je
push
pop
add
je
mov
and
push
push
call
sub
testl
mov
push
push
aad
enter
je
lcall
add
mov
fwait
push
and
cs
outsl
js
xchg
mov
sbbb
je
cmp
lret
mov
jno
mov
mov
pop
decl
push
dec
out
mov
mov
mov
or
not
mov
xor
roll
and
jmp
jne
xor
call
int
xor
testb
cmova
pushl
daa
pop
or
lock
cmp
jne
mov
dec
std
jmp
test
jne
shl
adc
lock
not
mov
cmpsb
mov
pop
xchg
or
mov
jg
movapd
movl
pop
cmpsl
sar
jg
mov
cmp
je
cmp
mov
gs
mov
and
aas
retw
jecxz
xor
push
mov
mov
aaa
std
mov
clc
push
pushf
pop
mov
sbb
pushf
pop
sub
je
push
add
sti
popf
xor
cpuid
sbb
in
mov
push
lahf
or
mov
pop
imull
add
add
push
ja
fisubrs
adc
mov
sarb
roll
call
jmp
cmpsl
mov
and
jl
je
outsb
add
rcrb
out
cmp
xor
and
call
cmpsl
data16
mull
ljmp
cmp
lods
arpl
jne
lea
cmpsb
out
mov
sbb
xchg
rcrl
or
cmp
jl
stos
ljmp
sub
xchg
icebp
pop
std
jle
lds
mov
adc
jle
add
call
dec
push
incl
add
pop
inc
or
add
out
jne
push
call
pop
out
pop
fldt
inc
or
xor
push
call
cmp
jo
std
popf
std
mov
pop
ret
jo
jecxz
push
sub
sti
cli
pop
pop
jge
xor
cmp
ljmp
pop
pop
adc
sub
xor
loopne
jg
lea
cmp
je
mov
jmp
push
jne
pop
dec
call
cltd
shrl
lods
movl
loope
in
push
inc
rorb
jne
mov
fistpl
pop
or
pushl
pop
in
or
orb
test
mov
les
sbb
add
mov
mov
adc
pushl
call
pop
mov
pop
mov
add
push
lea
sub
pop
xorb
add
add
test
sbb
test
xchg
mov
mov
mov
mov
data16
lcall
orb
data16
data16
data16
pushf
jg
mov
mov
inc
lea
clc
mov
inc
fadds
add
add
inc
cld
push
mov
out
lea
sub
xchg
lea
cmpl
shlb
rorb
call
mov
pop
scas
jmp
fisttpll
adc
pop
ja
test
call
push
sbb
mov
and
mov
and
push
js
xchg
leave
repnz
dec
ja
adc
out
int3
or
lock
pop
pop
sbb
add
cwtl
in
pushl
adc
pop
inc
pop
pop
sbb
je
pop
jmp
push
and
pop
mov
mov
xor
cmp
cmp
jb
lea
in
cmp
ja
push
pop
ret
mov
inc
arpl
push
pop
cmp
sbb
and
add
xor
push
in
push
mov
xor
ret
test
pop
mov
push
mov
mov
pop
lods
mov
pop
inc
add
or
inc
push
mov
sub
jp
jo
jg
and
xor
cmp
jne
sbb
out
or
and
sub
mov
fs
add
or
inc
inc
push
cmpl
push
cld
cwtl
aaa
jge
mov
mov
mov
dec
ja
pop
pop
sti
inc
jb
fimuls
add
js
fwait
mov
cmp
vmaxsd
pop
jae
mov
mov
add
cmp
jb
xor
das
cwtl
pop
jne
lea
push
inc
js
jg
je
sar
push
lea
sub
mov
sbb
pop
add
sbb
cmp
pop
mov
popf
pop
ret
push
push
push
cmp
push
cmp
jg
std
jg
inc
mov
sbb
ret
andl
pop
or
xchg
xor
hlt
pop
addb
in
pop
mov
sub
or
pop
ficoms
cmp
fcomps
js
lea
ret
jnp
add
ljmp
pop
mov
jb
ret
sub
sbb
push
fldenv
decb
cmpw
je
mov
add
cmpl
add
xor
cmpw
in
cmp
fisttps
cmp
enter
adc
push
movzwl
xor
test
push
decl
push
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
fwait
sbb
cmp
jb
mov
mov
push
sbb
mov
in
or
clc
cmp
cmp
pop
shll
and
pop
fdivrl
push
fisubrs
pop
or
mov
mov
inc
xchg
jo
shr
not
and
cmp
gs
mov
ret
loope
mov
xor
pop
mov
jecxz
xchg
ret
or
shll
rclb
shlb
mov
jge
push
push
and
xlat
jge
cmp
jne
mov
fdivp
adc
and
inc
loopne
add
sbb
dec
pushl
pop
cmp
je
fdivrs
add
outsb
mov
es
push
pop
stos
cmp
jne
inc
sbb
ljmp
adc
cmpl
pushl
call
pop
push
daa
iret
stos
cs
loop
mov
sub
xchg
jmp
mov
cmp
xchg
pushl
ret
push
dec
movl
in
andb
jg
call
add
test
cmp
incb
je
ja
push
pop
cmp
je
adc
push
adc
lods
push
je
pushf
sti
pushl
push
cmp
je
cmp
je
cmp
jne
call
test
cmp
cmp
jne
pushl
mov
int3
xor
and
mov
pushl
mov
and
mov
lods
inc
and
add
test
push
jmp
mov
add
mov
add
pop
pop
cmp
jae
add
loope
popa
emms
jg
pushf
mov
je
into
jne
sbbl
sti
add
push
push
call
loopne
dec
inc
cmp
jne
mov
jbe
call
sbb
add
aas
xor
sub
je
sub
je
sub
je
sub
je
dec
jne
pushf
cmc
scas
cmpl
dec
mov
xchg
jmp
sub
pop
idiv
inc
nop
dec
inc
jmp
pushl
addr16
mov
jmp
roll
sbb
das
and
mov
or
aas
jae
mov
mov
jmp
mov
add
jg
add
sti
add
sti
or
movd
adc
add
ret
lahf
ljmp
and
cmp
jnp
or
fcomps
jge
std
jg
dec
je
mov
push
pop
sub
je
add
fs
jne
push
imull
sub
xchg
inc
clc
aaa
shlb
push
mov
ja
les
decl
mov
jmp
mov
sub
je
push
sub
push
push
ret
cltd
jmp
mov
and
add
push
nop
mov
hlt
or
mov
mov
pusha
sbb
je
mov
pop
and
in
scas
jbe
jmp
aam
ja
pushl
xor
mov
mov
pop
jne
mov
mov
mov
movl
fcoms
jge
or
outsl
cli
filds
fdivrl
mov
lods
mov
mov
adc
incl
jmp
sbb
iret
pop
aaa
cld
incl
pushl
push
call
pop
jmp
pop
mov
sbb
mov
mov
je
sbb
je
jmp
loop
xor
rorb
mov
mov
mov
out
std
ret
push
push
push
pushl
and
xor
cmp
add
push
inc
pop
lods
push
pop
sbb
adc
mov
mov
mov
fs
jne
jne
lret
popa
and
fidivrs
test
out
push
adc
pusha
cs
call
cmc
stc
jne
jb
dec
mov
dec
shr
call
xchg
pop
jno
push
les
push
pop
jmp
push
std
ffreep
ret
dec
outsb
push
push
sbb
adc
aaa
nop
cmp
je
pop
mov
add
cmp
js
int
sub
popf
insl
add
pop
out
aam
outsl
sbb
sub
jmp
inc
insb
push
push
mov
xor
cmpl
push
mov
mov
jne
call
push
push
mov
push
jmp
pop
fdivr
jne
pop
cmc
cmp
movsl
es
jne
vpaddusw
push
push
push
and
jp
adcl
ja
and
out
push
xor
inc
push
cmp
ja
add
je
sub
mov
push
xor
je
push
xlat
and
pushl
mov
jne
cmp
pop
cmp
cmpsb
inc
mov
pop
pop
xor
xor
incl
lea
push
push
data16
adc
add
dec
aas
inc
lcall
pop
jo
mov
push
mov
pop
xor
cmp
pop
aaa
mov
add
int3
sahf
xor
leave
mov
or
jmp
inc
inc
cmp
jl
jmp
addr16
out
lods
pop
push
xchg
sbb
cli
cmp
cmp
adc
or
push
push
ret
xor
loop
sbb
divl
lea
cmpb
or
out
add
cld
and
bound
and
or
out
adc
push
punpcklbw
cmp
ja
add
fs
decl
or
jne
call
mov
jmp
aaa
add
or
ja
inc
fdivl
leave
cmp
mov
cmpl
or
adc
jno
mov
inc
loopne
push
test
xor
pop
push
jle
pop
mov
add
mov
push
push
aad
les
js
and
sti
data16
ret
xor
loope
ljmp
je
ss
mov
shlb
and
outsb
jg
add
loopne
mov
mov
mov
mov
jne
sbb
pushf
fs
es
call
cmp
out
sti
pmaxsw
test
fs
add
add
add
mov
fcos
adc
push
push
mov
call
or
inc
hlt
and
je
sti
pop
sbb
jge
add
push
mov
jg
ret
pop
mov
push
in
outsl
in
jmp
mov
cmp
je
cmp
dec
js
inc
xor
repz
mov
je
cmp
je
mov
in
push
push
lea
push
push
push
repnz
iret
sar
je
testb
jne
jae
xchg
push
aam
push
lods
cmp
fdivr
add
or
and
jmp
or
jmp
mov
in
inc
clc
je
cmp
je
call
cmp
je
mov
push
xchg
cld
call
sbb
xor
and
xor
aam
cli
xlat
jb
pop
pop
leave
push
push
xor
cmp
je
outsb
cmp
ja
ljmp
pshufw
movsl
clc
adc
jmp
mov
call
je
push
add
sbb
add
dec
jne
je
out
aad
decl
inc
cmp
je
dec
jne
cmp
jne
mov
inc
gs
jmp
pop
mov
mov
jmp
scas
mov
into
or
pop
adc
jne
mov
jne
push
jmp
sti
pop
pop
ret
cmp
je
mov
xchg
cmp
jne
pushl
lret
adc
rorl
roll
jne
mov
mov
inc
inc
std
dec
mov
mov
jmp
push
or
add
out
clc
call
std
cmp
mov
mov
mov
push
mov
pop
addl
mov
cmp
sbb
pop
fcomip
roll
pushl
je
mov
add
test
je
adc
add
pop
in
lea
jle
rolb
add
test
add
add
cld
cmp
test
je
test
je
push
add
jg
pushl
int
inc
jmp
rol
inc
adc
pusha
xchg
lea
std
adc
or
and
and
mov
imul
scas
ret
sbb
sbb
shlb
jl
aad
dec
sarl
add
mov
pusha
inc
mov
mov
add
sbb
xor
jae
mov
push
pushl
mov
movb
jne
cmp
mov
mov
mov
mov
mov
mov
cmp
or
je
mov
jo
pop
daa
jp
mov
mov
andb
add
mov
fst
mov
mov
adc
int
jo
clc
pushl
bound
jmp
mov
pop
inc
add
pop
ret
cmpb
aaa
int
out
push
jo
ret
mov
lds
fists
xchg
imul
mov
or
dec
hlt
mov
test
jne
cmpl
sbb
mov
inc
and
fisttps
add
cmpb
dec
xor
andl
leave
ret
and
leave
or
ret
imul
add
add
and
pop
mov
daa
adc
orb
adc
sbb
shlb
push
in
xchg
test
sub
and
sub
pop
xchg
inc
pop
sub
push
pop
sub
add
mov
daa
or
inc
cmp
adc
mov
inc
add
add
daa
nop
sub
outsl
clc
add
mov
mov
shrl
cmpl
movsb
out
and
lahf
pusha
test
pop
xorl
loopne
jmp
clc
dec
xor
aas
push
xchg
cli
rorb
ret
sub
loopne
and
or
sbb
arpl
mov
ret
mov
or
cld
ja
sbb
lock
xor
lea
push
sar
pop
es
dec
mov
mov
mov
xor
lea
stos
stos
stos
or
add
sub
mov
mov
inc
dec
jne
lea
mov
mov
add
negl
pop
and
mov
jb
movsb
pop
mov
cwtl
jo
push
lea
push
pushl
call
cli
mov
je
mov
sti
jg
cmp
jb
mov
test
movb
pop
mov
mov
movzbl
cmp
dec
add
roll
xchg
or
fsave
cld
mov
add
shlb
jbe
lea
fs
sti
cmpsb
rcr
push
lea
push
iret
stos
sbb
fistl
jg
in
popf
adc
push
push
pushl
imull
cs
inc
and
and
das
aas
pusha
and
xor
movzwl
test
je
orb
mov
cwtl
and
adc
roll
adc
mov
sti
outsl
in
jmp
movb
lea
inc
inc
sbbb
sub
mov
lea
pop
and
std
sbb
orb
add
jmp
cmp
ja
push
sbb
push
ud0
ljmp
add
inc
cmp
jb
mov
cmp
add
push
fisttps
clc
mov
sbb
mov
std
add
ja
pop
lock
xchg
lahf
adc
sub
mov
cmp
add
sbb
adc
xchg
mov
and
inc
push
mov
sti
mov
cwtl
jmp
mov
pusha
inc
pop
xchg
dec
adcl
cli
xchg
decb
push
movl
adc
cld
je
or
pusha
jmp
cmp
jne
and
jne
and
lock
sbb
les
cmp
mov
lahf
inc
mov
push
mov
cld
or
mov
add
adc
cmp
mov
jne
mov
outsb
push
mov
sbb
aam
sarb
nop
adc
test
jg
inc
in
shlb
push
jb
cmp
paddw
fcomp
test
cmp
mov
push
call
ret
push
lea
aas
jne
rclb
pop
je
lea
lcall
dec
xor
inc
fdivrs
push
call
jae
pop
ja
rorl
pushf
cmpb
iret
ja
mov
out
mov
test
je
inc
decl
mov
push
jb
neg
cmp
inc
mov
imul
mov
lea
lds
ret
mov
sub
mov
movzbl
jmp
out
fidivrs
sbb
inc
cmp
clc
jbe
mov
inc
inc
cmpb
jne
mov
inc
loopne
or
jb
mov
adc
fcoms
jg
out
push
mov
lea
lea
mov
inc
mov
inc
inc
inc
dec
jne
jg
loope
mov
sti
outsb
jae
jno
orb
inc
cmp
jbe
pop
fnstsw
add
jle
add
jns
inc
push
mov
jbe
decl
or
jne
mov
insl
out
push
mov
jmp
clc
shl
add
jmp
cmp
decb
faddp
push
mov
pop
pusha
sbb
add
add
outsb
cmpl
cmp
push
std
and
add
sub
orl
mov
mov
or
mov
pop
cld
jmp
mov
cmp
je
ja
and
and
pop
mov
test
cli
std
fwait
sbb
mov
rep
andl
push
test
out
dec
mov
sbb
mov
add
xchg
jne
pushl
dec
adc
dec
cmpsl
es
test
pop
push
push
lock
call
testb
jne
mov
sub
add
test
idiv
inc
lods
inc
add
add
inc
add
pop
or
or
lcall
ret
cmp
jge
mov
mov
aaa
bound
call
or
mov
std
testb
jmp
sbb
movsb
fistpll
negl
out
fbstp
adc
mov
das
jmp
je
jmp
lods
clc
mov
and
and
ret
xor
mov
shlb
cs
addl
jne
push
and
xor
add
xchg
add
rolb
mov
xor
inc
push
pop
cmpsl
mov
in
or
out
mov
pop
push
sub
arpl
rol
fldt
push
push
testl
push
test
inc
cwtl
push
lods
lods
shrb
mov
das
ds
push
outsb
ljmp
add
mov
test
or
movsb
mov
and
mov
ret
push
push
xor
inc
std
mov
sbb
pop
jne
cmp
addr16
addl
adc
cmc
lds
sbb
mov
jne
ds
dec
dec
frstor
add
pop
xchg
and
adc
mov
orl
xchg
mov
mov
push
xchg
mov
dec
push
in
in
mov
xchg
pop
ret
fwait
rol
add
jbe
testb
int3
mov
test
test
pushl
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
adc
icebp
mov
jne
add
add
or
jne
mov
inc
nop
sbb
shl
jnp
jg
add
ret
test
add
add
xor
mov
ret
je
mov
pop
into
adc
pop
lds
mov
cmpb
mov
adc
mov
xor
cmp
push
je
cmp
mov
repz
je
cmp
jne
mov
mov
pop
fs
pushl
xor
pop
mov
fdivr
inc
mov
pop
pop
pushl
adc
mov
mov
pop
inc
mov
jno
mov
call
or
adc
cmp
mov
push
mov
lea
mov
pushl
jne
cmp
pop
pop
push
lea
pop
dec
ja
icebp
cmpl
pop
jle
incl
xchg
cmp
je
mov
push
xor
aas
add
dec
jne
mov
xor
aas
push
add
xlat
xor
mov
or
notb
or
jg
dec
mov
jnp
mov
pop
cmpl
je
mov
movnti
dec
jne
mov
xor
dec
bound
pop
out
jg
push
mov
mov
dec
icebp
pop
pop
cmp
icebp
mov
mov
cmp
jmp
pushl
push
pop
mov
popa
and
cmpl
pop
pop
ret
fcomip
jg
test
je
and
push
mov
cmp
je
push
mov
xchg
js
test
pop
loop
ret
je
pop
jns
cmpl
pop
jne
cmp
mov
pop
mov
pop
ret
add
or
inc
dec
addr16
sbb
push
ss
cmp
pop
jle
sbb
jo
loopne
adc
cmp
mov
inc
insb
mov
xor
shl
or
sahf
jmp
push
jae
pop
push
pop
pop
ret
std
cmpsb
mov
and
neg
sbb
inc
inc
mov
aam
cmp
je
add
decl
cmp
je
cmp
je
ffreep
or
jmp
and
jmp
or
mov
adc
pop
xorl
jg
mov
mov
loop
push
or
or
fcom
mov
movsl
mov
sbb
nop
or
orb
in
xorb
push
ret
push
push
in
pusha
jp
pushl
aaa
jo
xor
sbb
sub
lcall
aaa
add
cltd
loop
mov
pop
mov
int
cmp
cmp
push
pushf
inc
jnp
mov
sbb
push
mov
mov
cwtl
jae
jge
push
ret
imul
and
adcl
inc
mov
ret
xor
sarl
out
pop
je
es
jmp
sub
add
out
cs
inc
insb
mov
mov
push
rclb
imul
jge
aam
mov
mov
in
mov
out
sub
pop
push
test
fstpt
sti
jle
push
lea
sub
cmp
add
pushl
sbb
pusha
lds
ljmp
pop
pop
ret
mov
push
aas
jne
rorb
pop
xor
push
test
test
mov
jmp
shlb
jge
cmp
popa
pop
std
pushl
lea
cmp
je
push
push
lea
add
rorl
jge
jecxz
jmp
push
push
mov
ror
cmp
ja
filds
cmp
mov
jne
cmp
jae
fnstsw
out
je
push
sub
aaa
fbld
jae
cmp
je
push
mov
sbb
add
iret
outsb
mov
jae
test
call
adc
lcall
cmp
je
test
pop
incl
lea
xchg
ja
test
rcrb
test
cli
pop
pop
pop
mov
notl
push
in
and
xchg
xor
adc
lea
and
push
push
das
inc
mov
add
lea
pop
je
cmp
es
pop
pop
ret
sub
push
xor
inc
push
mov
xor
cmpsl
xchg
mov
je
dec
inc
push
push
lea
movb
mov
lea
and
push
ja
pushl
push
push
inc
xor
sti
sbb
inc
and
pop
push
in
dec
sbb
pushl
pushl
jne
fnstsw
or
add
jge
add
dec
or
loopne
lea
push
or
xor
jg
inc
cmpl
xor
cmp
jne
mov
cmp
push
aaa
std
rorl
push
call
les
pushl
ja
sbbl
push
push
addb
aas
push
inc
and
mov
mov
mov
jmp
aam
jnp
dec
arpl
pop
dec
or
rorb
dec
es
decl
inc
push
outsb
dec
pop
mov
mov
pop
pop
jle
addb
ret
push
lea
sub
dec
stos
pop
mov
sbb
mov
mov
mov
ja
ja
mov
dec
movl
mov
lea
lea
add
mov
mov
je
outsl
movsb
cmpl
je
or
lock
adc
cmpb
jne
push
jo
jne
cmp
out
imulb
adc
mov
mov
add
xlat
scas
ffreep
inc
shlb
les
fiaddl
lock
adc
mov
xlat
mov
push
adc
lods
add
test
hlt
sbb
push
or
int3
fiaddl
rorb
mov
add
dec
mov
add
push
pushl
jge
filds
cmc
and
cmp
jb
mov
pop
iret
std
add
inc
push
push
and
add
pusha
repnz
je
push
jno
jne
xchg
mov
jne
je
push
pushl
mov
jne
adc
and
call
inc
enter
inc
clc
popa
rcrb
lds
rorl
in
les
sub
outsl
sub
out
jo
pushl
mov
lea
les
idivl
call
inc
lea
push
push
add
sar
inc
loopne
test
test
sarl
jae
sub
push
je
mov
adc
add
push
mov
shll
mov
lcall
je
mov
mov
mov
mov
roll
leave
std
push
roll
mov
mov
mov
push
shll
jmp
fmuls
test
jne
cmp
lcall
rcrb
and
push
add
add
push
ret
sbb
loopne
mov
inc
dec
movzwl
mov
leave
inc
jo
xor
push
pushl
jge
rolb
add
test
std
cmp
jbe
mov
inc
and
dec
and
mov
fstp
cmp
je
mov
push
mov
mov
push
mov
add
dec
add
lea
add
cmpl
jl
std
pop
in
jmp
mov
scas
sbb
mov
xor
idivl
xchg
inc
dec
add
jne
push
pushl
lea
mov
jg
mov
mov
add
inc
ss
andw
inc
cmp
jb
push
xor
cmp
int3
cmp
dec
insl
clc
fbld
inc
mov
jmp
andl
pop
mov
mov
mov
add
stc
faddl
jl
rorb
nop
js
mov
or
test
ret
fwait
dec
adc
sbb
clc
leave
adc
mov
mov
mov
repz
inc
cmpb
xor
aaa
repnz
pop
pushl
andl
movsb
dec
jl
add
roll
add
mov
dec
jo
add
cmc
sub
cmc
aad
mov
and
mov
push
mov
je
cmp
je
mov
movsl
pop
lcall
dec
or
cld
mov
cmp
into
mov
jecxz
dec
cmpb
jne
inc
adc
scas
adc
stc
push
es
add
insb
cmpsl
aaa
test
xor
sub
cltd
inc
cmpb
je
in
adc
inc
fistpll
push
or
icebp
inc
in
push
testb
mov
mov
mov
je
sbb
insb
sbb
inc
mov
ja
ds
inc
pop
pop
jne
pop
add
loopne
jmp
leave
hlt
jg
push
push
jg
loopne
incb
loopne
jne
jmp
fwait
inc
movb
andl
jno
aad
aas
mov
sub
xor
cmp
push
testl
pusha
shll
push
orl
cmp
je
lea
test
je
pushl
sbb
sti
je
push
addr16
bound
and
jmp
and
inc
add
cmp
jle
pop
in
add
cmp
jo
int
xor
ja
jl
add
push
push
ja
or
add
incl
imul
add
pop
sub
push
je
mov
pop
mov
jmp
push
push
loopne
cmp
jne
jno
call
inc
push
insl
mov
les
push
mov
mov
sbb
das
jns
push
ja
ss
fwait
ss
push
pushl
jno
pop
insb
out
sub
and
inc
je
sub
dec
adc
imul
or
jle
lods
clc
fistps
push
fisttpl
and
jbe
dec
jmp
mov
add
add
mov
xor
jp
orl
mov
push
adc
push
clc
mov
cmp
je
xor
inc
cmp
mov
cmp
ss
mov
je
dec
or
test
test
fists
sbb
je
jbe
cmpb
movl
sbb
lea
icebp
jns
sub
out
stos
add
jne
jb
sarb
lock
jns
push
adc
aas
push
add
push
push
pushl
jbe
jnp
sub
mov
fmull
mov
adc
jp
push
push
or
xor
jge
pop
rolb
mov
sub
shlb
add
or
call
cmp
push
xchg
mov
movl
xor
cmp
lahf
add
jg
pop
lods
jmp
mov
add
pop
sub
js
push
call
addr16
mov
call
push
insb
mov
test
mov
mov
in
and
and
cmpsl
add
mov
fistpll
addb
or
leave
adc
incl
enter
push
and
sub
cmp
jb
add
cmp
jb
xor
adc
adc
jne
loop
call
sub
add
shr
mov
imul
add
stos
decb
mov
dec
imul
cld
or
fldl
sbb
mov
mov
cld
pushl
push
pop
push
hlt
test
mov
jne
sar
dec
cmp
jbe
out
ljmp
pop
mov
cmp
jne
cmp
mov
mov
shr
lea
mull
sti
mov
mov
and
lea
sbb
outsl
sbb
pop
add
pop
or
push
or
inc
cmpsb
cld
add
mov
or
inc
out
add
into
shll
add
ds
clc
and
hlt
jne
mov
aas
idiv
inc
sti
add
aas
mov
dec
pop
cmp
jbe
mov
add
mov
cld
idiv
shll
cmp
je
push
jno
cmp
jne
cmp
mov
aas
pop
mov
shr
not
and
add
sbb
mov
pop
mov
sbb
cmpb
dec
add
dec
or
dec
or
filds
fs
pop
or
or
fimull
test
fnstsw
lock
mov
or
clc
xchg
pop
dec
add
cmp
jne
mov
mov
inc
mov
mov
jae
cmpb
jne
mov
push
shr
sti
inc
mov
pop
inc
mov
sub
sub
sbb
push
sbb
jg
pop
mov
test
cld
mov
mov
je
adc
or
test
pop
mov
pushf
and
or
inc
cld
mov
inc
add
shl
add
mov
js
push
call
pop
xor
jnp,pt
or
push
mov
sbb
movsb
mov
add
in
ret
adc
dec
adc
or
fdivp
adc
gs
or
call
adc
jo
inc
and
dec
in
mov
add
in
sub
lea
lock
cli
in
push
lea
daa
add
lods
mov
mov
and
cmp
insl
or
std
out
xlat
inc
aas
and
pop
pop
pop
leave
ret
mov
dec
push
mov
cmp
jne
add
imul
push
incl
mov
push
inc
add
jne
imul
cmpl
idivb
pop
imul
add
les
add
xor
cmp
mov
je
push
push
cmpsb
out
add
adc
inc
or
adc
jbe
data16
ljmp
dec
cmp
fwait
orl
mov
mov
incl
decl
decl
in
push
push
decl
inc
or
mov
push
xor
jmp
add
inc
test
jge
mov
imul
into
test
std
inc
clc
pop
mov
mov
stos
aam
stos
decb
hlt
push
mov
mov
out
add
faddl
adc
pushl
jge
lods
lea
cmp
mov
ja
mov
sub
mov
inc
jmp
inc
orl
orl
lea
pop
cli
fdivrl
out
inc
inc
cld
lock
push
add
sub
or
rolb
jne
mov
add
mov
inc
or
jno
decl
sahf
inc
add
mov
inc
mov
adc
fcomip
inc
test
test
dec
inc
jne
or
pusha
push
pop
icebp
fists
push
or
push
mov
or
adc
push
mov
jg
jle
sub
pop
shr
mov
hlt
mov
and
ficoms
lock
cmp
pop
mov
mov
std
fucomp
loopne
mov
test
jne
cmp
jg
fisttps
mov
sar
dec
cmp
mov
jbe
push
pop
pop
mov
cmp
jmp
xor
inc
cmp
sbb
lea
int
out
sbb
add
pop
lods
divl
dec
or
pushl
dec
mov
dec
add
jg
mov
mov
sub
add
cmpl
ja
hlt
add
mov
pushf
sar
dec
cmp
lea
loopnew
add
mov
lea
mov
sbb
pop
or
or
push
mov
mov
dec
adc
and
jge
inc
iret
pop
sti
pop
mov
sbb
iret
jmp
sbb
lea
pop
lods
sub
cmp
adc
jae
lea
mov
fists
cmc
mov
fistl
mov
mov
sub
xor
jmp
mov
das
inc
pop
or
ljmp
jne
lea
mov
lea
mov
sar
dec
cmp
cmp
xor
jae
rcrb
inc
cld
sbbb
jle
fdivs
push
sbb
dec
ret
test
jo
mov
xor
sbb
dec
dec
outsl
lea
adcl
fiadds
bound
ja
push
mov
dec
testb
cld
mov
or
mov
mov
mov
push
ffree
jnp
pop
dec
add
subb
cwtl
push
push
add
adc
adc
into
popf
adc
std
or
push
into
sbb
jb
push
mov
sbb
add
push
dec
loopne
sbb
pop
inc
adc
cld
xor
inc
fiadds
sarb
mov
dec
add
or
int
aam
das
dec
or
push
or
or
clc
add
test
mov
adc
push
mov
jg
mov
xchg
cmp
push
mov
mov
pop
ffree
mov
mov
cwtl
or
in
inc
mov
daa
push
icebp
push
dec
or
loopne
pop
lock
rorb
enter
sarb
loopne
lea
mov
mov
hlt
jle
cmc
rep
jl
je
add
mov
decl
test
sbb
idiv
jne
clc
mov
je
dec
cmp
minps
fisttpll
cld
jmp
mov
sar
dec
cmp
jle
pop
out
ja
out
lea
stc
adc
mov
and
rorl
test
rolb
or
inc
sbb
cli
pop
mov
bnd
out
add
and
sti
or
mov
ljmp
pop
jne
sbb
cld
sti
scas
jg
inc
jge
mov
je
cmp
cmc
je
arpl
rorl
add
lahf
or
and
add
lea
and
cmp
je
mov
and
add
cmp
mov
jne
sbb
mov
or
fcompl
into
jne
pop
jl
dec
aam
dec
and
inc
aam
adc
in
inc
add
jne
and
aaa
shrb
or
call
inc
lock
lea
or
in
mov
cmp
jne
fidivrs
mov
cmp
jne
push
cmp
mov
jl
enter
xor
mov
cmp
inc
cld
dec
rorl
inc
mov
cmp
jne
sbb
inc
fsubr
shll
incl
cmp
movb
mov
std
decl
jne
mov
cmp
add
push
add
incl
mov
cmp
jg
out
jl
ret
push
jmp
push
jmp
push
cli
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
cmc
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
add
sbb
add
clc
add
pop
or
lds
je
or
int
sar
pop
ret
ljmp
je
cmp
jne
cmp
mov
lock
cmc
sti
and
jmp
push
dec
roll
dec
jg
out
sub
mov
mov
dec
add
and
icebp
mov
repz
jge
or
shr
orl
pop
cmp
add
or
xor
shr
testl
adc
and
and
or
jne
add
cmp
call
sti
fdivs
mov
pop
fnstenv
pushl
jmp
cmpl
cmp
cmp
jb
cmp
fsubs
sbb
xor
cmp
jne
call
loop
mov
xchg
das
ret
aaa
les
pop
mov
mov
mov
cmpl
je
mov
movsb
inc
adc
je
mov
mov
and
iret
jne
pop
mov
aad
ret
jle
dec
inc
mov
lret
push
in
xchg
mov
icebp
dec
jo
roll
rorb
sti
mov
jmp
into
jne
pop
push
push
pop
clc
jmp
or
leave
dec
hlt
mov
mov
sub
mov
dec
inc
xor
inc
pop
pop
cmp
je
dec
mov
cmp
jne
cmp
lret
sarl
push
cld
lea
fadd
out
mov
mov
decb
jne
mov
mov
and
jmp
lahf
inc
ljmp
and
cltd
mov
jne
and
and
popf
mov
lcall
clc
add
add
jns
jo
jp
dec
push
arpl
xchg
mov
dec
or
and
xchg
orl
inc
es
lahf
out
jge
cmpb
jne
xchg
orb
or
mov
cld
or
test
ljmpw
shr
or
icebp
lea
stos
dec
loopne
shr
or
mov
test
je
mov
mov
dec
clc
mov
add
sub
inc
pop
fstl
xor
hlt
and
jns
mov
jne
cmp
or
sub
pop
decl
mov
lea
cmp
or
jne
repz
jmp
jmp
int3
or
and
mov
dec
and
push
push
push
adc
push
push
pusha
cli
push
les
mov
fcompp
xor
xor
mov
cmp
je
mov
cmp
je
les
cmp
jbe
lea
lea
mov
mov
add
jne
popl
decb
mov
call
pavgb
pusha
or
jmp
popl
mov
inc
add
adc
les
jge
mov
xor
push
xor
pushl
cwtl
fcoml
fbstp
and
mov
mov
or
pushl
pushl
pushl
sbb
ret
push
push
push
push
mov
xchg
rclb
call
jmp
mov
mov
js
out
pushf
mov
jmp
dec
idivl
sub
dec
push
push
ret
in
fists
ds
stos
and
push
push
pushl
scas
adc
mov
testb
jg
push
je
xchg
inc
aas
fwait
ret
jmp
incl
pop
adc
add
inc
xchg
adc
mov
pop
add
add
inc
adcb
inc
adc
js
into
mov
mov
out
pop
add
push
and
not
and
or
mov
add
add
jnp
inc
and
test
ja
out
clc
je
xor
mov
shlb
cli
in
push
cmpl
inc
and
push
mov
cmp
adc
incl
xor
flds
sub
mov
jp
add
fistpll
mov
shl
add
push
adc
and
shr
je
rep
mov
daa
ljmp
xor
fsubs
jg
rolb
cmp
setne
cmp
pop
roll
pusha
jns
push
and
mov
enter
add
jle
sbb
push
pop
lds
jge
push
jmp
aas
adc
loopne
je
mov
sub
mov
push
cld
das
or
cmp
jne
push
and
pop
push
mov
mov
frstor
incl
rorb
cmp
inc
or
lock
add
xchg
push
lds
or
mov
pop
mov
and
mov
cmc
js
pop
jno
cmp
sub
mov
out
sub
push
sti
mov
pop
jle
push
jnp
call
dec
and
jns
testl
cltd
add
icebp
add
popf
imul
and
loope
add
idivb
xchg
push
or
and
xchg
lds
jle
pop
and
daa
out
jnp
ss
out
ja
adc
add
adc
adc
push
outsb
add
fldcw
inc
fdivrs
push
push
jl
nop
add
mov
inc
and
xor
push
stc
inc
pusha
das
fs
jle
inc
pop
imulb
jle
inc
mov
enter
push
jle
add
sub
arpl
test
insb
test
dec
outsl
pop
and
inc
cmpl
stos
and
and
out
ret
dec
or
pop
mov
or
ret
sbb
ds
ljmp
ffree
cmp
movzbl
add
sbb
jne
adcb
pop
cld
call
add
push
cld
ffreep
lea
adc
fstp
add
jne
call
in
push
push
jnp
mov
jb
incl
mov
push
push
mov
pop
pop
inc
jne
push
push
xor
inc
pop
inc
or
pop
or
pop
cmp
add
adc
aaa
inc
insb
add
jne
cli
aas
sbb
add
mov
jne
jmp
sbb
jge
and
mov
mov
mov
push
push
pushl
mov
mov
call
pop
pop
add
pushf
jle
push
xor
pop
div
pop
jb
lea
cmp
or
movb
sbb
hlt
test
je
movl
add
jmp
ficomps
je
movl
ja
ja
jmp
xor
sub
int3
and
sar
mov
cmp
jne
push
push
jmp
mov
call
sbb
adc
ja
mov
xchg
pop
lea
jo
cmp
mov
xor
mov
lret
inc
inc
loop
cmp
mov
sbb
dec
data16
inc
jno
jge
rorb
rcll
ljmp
mov
testb
jne
push
push
ret
rcll
je
mov
insl
js
inc
adc
mov
inc
lods
orb
icebp
setnp
fisubrs
cmp
push
std
rorl
enter
dec
clc
arpl
inc
in
adc
or
je
movl
cmp
pop
clc
fwait
xchg
mov
jne
iret
shlw
cmp
mov
push
push
jne
push
push
fdivs
incb
lock
jmp
dec
js
adc
adc
and
add
pop
dec
cmpb
loope
incl
je
inc
test
jne
dec
sub
rorl
or
xlat
cmp
inc
decl
push
xor
inc
push
push
push
enter
out
fstpl
pushl
sbb
pop
cmp
jle
mov
mov
ja
decl
sbb
cmp
jne
or
mov
jne
inc
adc
add
inc
adc
popa
mov
lock
jp
test
mov
jne
and
mov
mov
icebp
dec
and
and
jo
adc
add
scas
add
out
sub
push
pushl
call
mov
mov
ret
pop
jb
lea
xchg
aas
les
ret
je
movl
jmp
scas
lods
sbb
cmp
out
lcall
inc
hlt
jmp
mov
cmp
je
in
cpuid
jge
imul
in
mov
jmp
mov
mov
and
inc
or
add
sub
pop
sbb
test
cwtl
fsubr
cmp
jg
pop
gs
cmpsl
mov
push
rorb
hlt
cmp
je
std
rclb
outsb
sar
sub
frstor
or
inc
pushf
ret
push
setg
clc
push
jne
push
push
mov
inc
adc
mov
sbb
mov
or
mov
xor
test
pushf
adc
inc
or
fsubrs
dec
cmp
pop
mov
outsl
sbb
pop
test
je
lea
push
mov
mov
mov
or
aam
xor
jg
hlt
es
sbb
jle
cmp
cli
or
xlat
ja
loop
cld
cmp
je
out
add
dec
scas
ret
sti
je
in
jo
es
loopne
imul
mov
pushl
xor
jmp
movsl
lea
pop
push
mov
fucomi
mov
lock
sbb
and
push
int
fwait
loope
jmp
sub
jno
jbe
rorb
bound
je
pop
add
pop
and
je
mov
scas
adc
pop
adc
lea
outsb
sub
dec
lock
test
jb
dec
loop
pop
movsl
jnp
lret
daa
rcll
cmp
push
mov
jne
pop
jmp
out
call
or
loope
sub
xor
jp
sbb
push
adc
mov
insl
pop
je
out
add
xchg
mov
loope
xchg
xchg
mov
inc
cs
adc
mov
cmp
ja
mov
sar
inc
je
lea
push
push
inc
aam
jecxz
ja
aam
or
xor
fcoml
lahf
push
adc
sahf
popa
ljmp
out
pushf
ret
sbb
mov
jecxz
test
fistps
jecxz
adc
shr
cmp
je
rclb
fwait
push
mov
and
mov
inc
sub
fidivl
or
mov
int3
arpl
repz
je
popa
add
cli
icebp
and
iret
xor
adc
and
or
les
push
push
or
ljmp
ja
adc
cli
inc
movsb
cmp
xchg
out
bound
dec
pop
stos
sahf
mov
push
push
insl
ret
sub
sbb
inc
add
pop
lahf
jns
jne
pop
test
jne
inc
test
add
mov
cmp
cmpsl
call
out
jne
jne
pop
lds
test
jne
inc
add
and
jb
lret
mov
outsl
sub
insb
and
cmp
ja
sbb
push
sub
mov
daa
dec
popa
inc
and
add
out
je
mov
jmp
push
jmp
xorl
adc
lret
cmp
jne
add
out
jae
out
and
rcll
jne
cmp
push
pop
je
push
jl
or
add
testl
xor
jae
push
in
clc
stos
pop
incl
adc
sbb
jge
dec
or
cmp
fdivr
dec
jbe
push
pop
xor
div
cmp
sbb
inc
jne
cmp
ljmp
lods
testl
clc
dec
or
icebp
mov
les
push
and
cmp
ja
cmp
aas
ret
sbb
cmp
aaa
mov
in
jge
sti
add
add
pop
in
fbstp
or
push
es
or
fbstp
push
inc
loope
fisttpll
mov
adc
cmp
aaa
aam
fsub
add
cmp
inc
sub
outsl
inc
in
outsl
and
jne
cmpl
or
push
and
pop
pop
pushf
or
sbb
mov
cmp
or
call
push
mov
ret
adc
pop
lods
mov
pop
mov
pop
leave
cltd
and
jne
pop
pop
or
push
mov
fsubs
lods
sbb
mov
test
cltd
dec
add
cwtd
mov
add
inc
xor
test
loope
dec
ja
jecxz
mov
adc
and
xchg
cmp
fmull
mov
popl
xor
ljmp
daa
mov
dec
cmp
jb
mov
fs
lock
in
xor
dec
mov
adc
jo
pop
dec
cmp
jne
xor
inc
xor
mov
nop
out
adc
push
and
jne
std
pop
add
dec
adc
sbb
scas
addb
in
push
pop
push
jecxz
mov
cwtl
push
dec
mov
jmp
call
mov
hlt
movsb
mov
test
jne
cmp
int
push
cmp
ljmp
lods
lahf
xor
pop
mov
jmp
into
add
and
scas
sub
test
jmp
mov
js
jne
pusha
je
inc
push
subb
int
dec
inc
sbb
andb
enter
or
mov
jmp
call
mov
cmp
jbe
loop
ss
outsl
adc
add
inc
icebp
data16
icebp
pop
inc
mov
xor
jmp
imul
aad
mov
or
pop
mov
inc
incb
je
cmp
jae
sub
inc
or
mov
addr16
jmp
cmp
fisubl
fimuls
mov
mov
lock
cmp
adc
adc
xor
icebp
jmp
adc
movzwl
movzwl
mov
jg
loope
add
ret
andl
push
push
mov
lea
push
push
push
idiv
arpl
xor
inc
lea
inc
sbb
push
push
pushl
adc
dec
ficomps
push
push
adc
xor
sti
testl
out
nop
jg
sbb
ss
push
bndldx
negl
jge
inc
and
sub
jge
ret
push
and
push
pop
sub
dec
leave
cmpsl
in
push
push
adc
push
push
xor
mov
xchg
nop
cs
xor
push
pop
repnz
xchg
push
sbb
push
adc
push
push
andb
inc
push
sti
xchg
mov
cmpsb
inc
pop
push
inc
push
push
adc
push
repnz
push
dec
push
push
and
push
push
push
pop
xchg
jl
push
push
push
push
adc
push
push
sti
pusha
or
pop
push
push
push
pusha
push
push
pop
lahf
mov
or
push
push
adc
push
push
pop
inc
ds
push
in
pop
ret
push
push
pop
push
je
push
adc
dec
leave
cmpsl
js
push
jl
push
in
pop
push
push
sahf
push
push
sbb
pop
aad
pop
xchg
push
push
pop
sub
dec
nop
push
scas
js
shlb
sbb
xor
mov
push
ljmp
fwait
push
push
dec
lret
dec
aaa
push
push
pop
dec
int
push
pop
pusha
or
sub
bound
aad
mov
xchg
das
xchg
mov
rorb
pop
add
sti
pop
repnz
push
xor
push
push
clc
jecxz
pop
in
mov
mov
bound
or
test
cltd
cld
jbe
je
js
ljmp
ja
cltd
ljmp
rcrb
sub
scas
iret
xor
lods
mov
fwait
pop
pop
cmpb
pop
xor
push
cmc
arpl
pop
add
pushl
inc
cmp
jne
and
cmp
in
dec
sbb
jbe
pop
lods
pop
or
pushl
pop
pop
xor
and
enter
insb
jo
loop
or
js
xorb
or
cmpb
or
or
or
or
or
or
or
sbb
sub
ret
push
push
push
jl
adc
lock
add
xor
push
push
inc
sbb
xor
jne
call
cli
mov
adc
mov
sbb
mov
sbb
add
mov
cmp
je
roll
int3
mov
incl
pop
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
call
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
mov
adc
jmp
pop
xor
or
pushf
add
cmc
mov
xorb
fs
inc
add
pop
lods
stos
jbe
push
mov
in
sub
push
pop
pop
jae
lcall
sbb
lret
jne
jne
cmp
jne
mov
fidivrs
mov
movl
push
inc
lock
add
add
clc
cmp
pop
pop
ja
out
fimuls
sbb
push
pop
xchg
add
lock
rep
dec
jne
scas
jg
nop
fsubrs
jne
adc
rorl
sbb
mov
xchg
xor
dec
cwtl
mov
jne
sbb
jne
das
pop
mov
scas
fiadds
xor
movzwl
push
push
and
jecxz
cmp
sbb
jno
insb
unpcklps
sub
lds
inc
sub
les
inc
hlt
je
call
xchg
mov
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
stc
cmp
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
add
jmp
mov
mov
mov
mov
mov
xor
inc
aas
mov
cld
add
addl
sarb
aad
xor
call
mov
std
scas
pop
or
shlb
mov
cmp
vaddss
or
mov
mov
push
xchg
push
mov
subl
add
cmp
or
add
bound
push
je
inc
adc
add
enter
add
js
jle
mov
and
add
jle
and
xor
cmpsl
pop
or
cmp
rorl
jne
fdivs
sti
cmp
jne
clc
mov
sbb
push
lret
test
ret
cmp
or
int
loopne
cmp
test
sbbl
adc
imul
mov
cmp
ret
rclb
cmp
pop
inc
push
adc
adc
xor
xchg
adc
pop
sbb
adcl
sbb
outsl
pusha
push
ds
push
adc
daa
lock
dec
sbb
pusha
jo
push
lea
push
push
and
mov
incl
imulb
push
push
sub
sub
push
adc
imul
adc
sub
ds
push
adc
imul
push
pop
je
or
mov
and
push
or
mov
jo
addb
mov
mov
out
sub
cmpsb
or
mov
out
fcomip
clc
mov
mov
dec
jge
mov
je
mov
lret
add
push
inc
sub
mov
sub
add
loope
sub
or
or
adcb
add
mov
rcrl
sub
pop
xor
push
mov
cmp
push
aam
pop
fmull
adc
jmp
mov
mov
je
cmp
jne
pusha
icebp
cs
push
movzwl
push
inc
mov
lock
jb
add
add
stos
cmpb
rclb
out
syscall
loopne
and
pop
lds
jne
add
cmp
fsubr
aam
inc
loopne
test
cmp
je
std
scas
pusha
pop
cmp
je
test
inc
inc
mov
sbb
inc
cmp
or
xchg
sti
mov
sub
xchg
or
mov
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzbl
mov
mov
movb
movzbl
inc
cmp
jle
inc
pop
pop
incl
pop
pushl
mov
push
loopne
push
aad
incl
pushl
mov
push
inc
out
aaa
hlt
sbb
mov
mov
sub
mov
stc
cmpb
push
push
inc
aaa
jbe
xor
sti
insl
push
xorb
fsubrs
add
fcoml
cmp
std
ja
sbbb
mov
mov
lea
sbb
mov
lea
mov
mov
out
jg
adc
lea
sbb
out
inc
lea
mov
mov
sti
ja
adc
shll
mov
repnz
lret
lea
push
fsubl
idiv
inc
add
addb
mov
mov
movzbl
cmp
jle
roll
cmp
add
test
insb
lea
xor
push
lea
sti
mov
xor
mov
adc
loopne
xchg
push
and
push
fwait
push
cmp
sub
sqrtps
mov
mov
mov
mov
adc
mov
cmpsl
mov
scas
or
rorl
ret
mov
js
xor
jle
ret
jmp
pushl
dec
jne
pop
scas
jg
cmpsb
pop
lahf
je
xor
adc
inc
jmp
lea
mov
arpl
rcrl
mov
inc
add
jno
mov
or
lret
jmp
add
mov
enter
addb
fsubr
loopne
cmp
pop
shrb
mov
mov
adc
and
adc
add
ret
aaa
popf
popa
inc
pop
sbb
push
or
ljmp
call
pop
cld
mov
shl
pushl
jg
jg
imul
ret
incl
lcall
aam
scas
dec
clc
lea
jb
lea
loopne
push
adc
mov
je
incl
movb
pushl
rolb
lea
push
xchg
add
add
pop
xchg
add
stos
sbb
je
clc
cmp
mov
out
cmp
add
jge
add
pop
je
cmpb
mov
ret
cltd
rcrl
jp
daa
xor
push
in
or
push
in
ja
data16
or
clc
jbe
jbe
or
pop
ret
push
inc
or
imul
add
decl
das
jne
or
cld
je
add
inc
xlat
ja
insb
add
push
and
pop
add
pop
jne
in
nop
adc
lock
cld
loop
sbbl
and
xor
sbb
cwtl
xchg
push
fmull
mov
shl
loope
xor
xor
pushl
and
mov
lea
cmp
hlt
leave
xor
aaa
mov
pushl
xor
addl
cmp
ds
hlt
xor
push
xchg
cmp
push
mov
or
add
lea
push
js
mov
dec
lea
add
push
data16
cmp
test
push
scas
add
les
xchg
fadds
cmpb
pop
push
push
lea
jmp
sbb
lea
mov
add
sub
inc
hlt
or
lcall
mov
inc
hlt
pushl
mov
sub
add
sbb
xor
fimuls
xorl
cmp
pushl
cmp
ret
insb
subb
cmpl
xchg
jb
lea
lods
lea
popf
xor
fistps
pop
fwait
or
push
push
ret
sarb
lcall
jne
xchg
inc
cld
inc
in
cwtl
jne
aam
and
ret
mov
cmp
push
addb
jecxz
adc
ret
test
add
add
jle
pushl
call
mov
sub
add
sbbl
add
loop
or
lods
sarb
jge
cmpb
in
pop
pop
mov
pop
pop
decl
ret
sub
add
bnd
push
mov
test
je
mov
mov
incl
inc
mov
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
shlb
or
push
push
xor
cmp
repz
pop
sysexit
cmpl
mov
inc
push
inc
decl
jg
adc
dec
mov
mov
mov
dec
mov
inc
cmp
jb
jmp
cmp
jae
fdivl
push
add
mov
adcb
push
dec
cmp
jne
cmp
pop
sub
jmp
mov
dec
cld
lcall
mov
push
push
mov
mov
jg
icebp
fwait
mov
dec
jg
in
ja
aas
and
test
je
jg
je
sub
je
dec
je
sub
jne
jo
jnp
ret
mov
cmp
jg
lcall
jbe
xor
cmp
jl
or
push
or
in
mov
push
mov
and
xor
inc
ror
std
cmp
jg
out
dec
mov
and
add
or
cmp
stos
bound
sub
cltd
cmpb
mov
cmp
jne
mov
cmp
dec
je
sub
fnstsw
loop
je
xor
adc
test
sub
jne
pop
leave
in
mov
in
jge
lret
cmp
jg
sbb
dec
jmp
sbb
mov
enter
je
jae
pop
add
insl
adc
add
cmp
jge
leave
lahf
push
cltd
pop
idiv
cmp
pusha
or
lds
mov
or
out
cmp
sbb
imulb
sub
mov
incl
jmp
xchg
clc
jl
cmp
jle
call
fists
xor
idiv
pushl
push
add
imul
add
mov
jbe
clc
insl
jg
out
sub
sbb
pop
je
test
into
dec
fisttpll
je
dec
je
mov
adc
or
sub
mov
lea
push
jmp
mov
cmp
pandn
jle
mov
cmp
jg
and
pop
mov
ss
or
sti
pushf
loope
lret
cmp
cmpb
adc
jne
push
push
je
pop
sbb
push
cwtl
lret
inc
rol
jae
cmp
loopne
ja
je
mov
sub
add
push
rcll
push
ja
cwtl
test
xor
sbb
push
jmp
jl,pt
cmp
adc
sbb
ret
cmp
adc
jl
xor
inc
add
jle
es
lds
std
add
cmp
adc
aaa
xchg
xor
out
and
ljmp
jo
test
je
dec
je
dec
je
dec
jne
call
push
out
add
xchg
mov
xor
cmp
mov
setne
mov
mov
fldl
xchg
inc
and
out
or
sbb
mov
adc
pop
push
adc
movl
or
xor
inc
and
pop
mov
cmp
push
or
int
or
aas
mov
xchg
dec
repnz
mov
add
stos
xor
mov
sbb
fldt
ret
sbb
je
dec
je
mov
mov
rolb
lcall
fsub
adc
test
out
out
add
add
mov
push
adc
add
push
cmpsb
imul
inc
or
or
out
icebp
aaa
fisttpll
push
or
add
mov
push
push
pushw
inc
loopne
ja
cmc
push
push
pushl
push
ljmp
adc
js
ret
lock
das
add
icebp
mov
or
pop
pushl
mov
mov
jae
call
dec
test
jle
mov
mov
cmpl
jbe
mov
mov
add
inc
decl
and
mov
mov
gs
decl
mov
mov
test
je
mov
mov
cmp
cmp
je
xor
outsb
iret
inc
inc
cmp
je
sbb
mov
jg
mov
inc
cmp
xchg
cmp
push
cli
jmp
push
stc
dec
je
cmp
je
cmp
je
push
mov
sbb
test
pop
pop
je
cmpl
jg
incl
jbe
lea
cmpb
je
push
mov
incl
decl
mov
xchg
out
decl
or
push
inc
decl
mov
test
sbb
int3
outsl
mov
dec
je
dec
je
dec
je
dec
jne
mov
iret
jae
bound
pop
mov
stos
mov
mov
or
incb
xchg
xchg
rsm
pop
cld
jae
nop
int3
inc
add
sbb
mov
add
jmp
push
movl
jo
push
addl
out
fisttpll
lcall
test
cmp
je
frstor
push
pop
pop
push
xor
and
xor
loopne
push
mov
mov
mov
int
inc
add
jne
xlat
shlb
imul
push
into
fs
push
out
test
sub
je
clc
ljmp
adc
addb
pop
testl
or
inc
push
imul
js
or
mov
lret
hlt
xor
jl
xchg
movsbl
in
jmp
add
jo
or
inc
xchg
inc
or
xor
xor
out
ds
jmp
shlb
je
punpcklwd
ror
adc
jmp
pop
cltd
es
daa
dec
jmp
dec
or
or
ja
pushl
mov
add
in
rolb
jge
mov
adc
in
jmp
jb
mov
daa
push
lea
push
push
clc
clc
pop
xor
rcll
sub
push
fldl
pop
dec
cmp
add
cmp
imul
cmpps
cmp
xor
mov
add
es
cmp
sbb
call
or
lock
mov
mov
jbe
and
je
cmp
je
sar
loopne
imul
cmp
xor
inc
cmp
jbe
pop
cmp
mov
mov
sub
decl
mov
incl
decl
mov
sbb
mov
jmp
mov
cmp
je
inc
xor
cmpb
jne
inc
inc
push
pushl
jg
xor
fisttps
popa
negl
ret
inc
cmp
ja
add
sbb
scas
call
sub
std
mov
je
mov
and
pusha
mov
cmp
mov
mov
jne
sub
inc
je
add
ret
jae
or
jmp
push
jbe
fldl
leave
dec
mov
scas
test
pop
maxps
shll
gs
pushl
push
pop
out
loope
pushf
jno
iret
popf
inc
faddl
pop
ret
pushl
xchg
ret
cmp
shll
in
sbb
es
mov
sub
push
xchg
and
sub
jp
mov
test
outsl
push
mov
push
mov
mov
add
shlb
stos
add
in
mov
mov
or
pop
add
mov
sbb
add
mov
je
jae
les
pop
arpl
rclb
inc
cmp
ffreep
lcall
jl
push
push
test
je
aad
ret
cltd
sub
mov
pusha
pop
clc
cli
jg
decb
mov
pushl
jge
pop
jne
decl
add
cmp
or
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
cld
mov
rcrl
dec
or
call
sbb
inc
sbb
sub
adc
mov
stos
call
add
js
inc
movsl
cli
test
mov
push
push
andl
jmp
or
pushl
int
or
stos
sbb
stos
sbb
add
add
out
loopne
jnp
cmp
inc
inc
cmp
jb
movsb
ret
xor
ret
mov
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
or
inc
sar
mov
lea
mov
test
jne
jp
jg
rorb
jl
cmp
jle
sub
cmp
ja
inc
jmp
loope
xor
lcall
pop
lock
add
mov
push
lea
push
decb
and
add
orl
or
xor
ja
inc
idiv
jbe
fcomps
adcl
jle
or
mov
mov
les
sub
call
and
sbb
cwtl
and
xchg
jnp
or
jmp
push
or
jp
clc
mov
add
shr
lea
stos
cmp
je
mov
cld
std
sbb
adc
push
mov
pop
cmp
pop
je
and
xchg
dec
je
pop
or
or
orb
test
jne
andl
push
inc
repnz
das
adc
pop
mov
dec
mov
es
add
inc
je
xor
aaa
mov
mov
testb
incb
add
mov
sub
sub
pushf
subl
mov
add
popf
cli
imul
push
or
mov
adc
or
or
mov
mov
out
popa
and
cmp
paddusw
je
lahf
pop
ja
mov
das
test
cmp
ja
or
mov
cmp
je
testl
sbb
pop
mov
outsl
jne
sbb
repnz
push
push
mov
ficomps
cmp
addps
cmp
pushf
sti
cmp
jne
int
inc
pop
adc
shll
inc
test
into
xlat
xchg
int3
xlat
out
incl
jbe
ljmp
jne
ret
sti
lcall
cmpl
jne
cmpl
je
and
xchg
add
outsl
inc
or
mov
ds
incl
loop
imul
jecxz
add
xchg
call
jne
fs
add
out
push
xor
inc
idiv
pop
xor
cmp
sbb
inc
mov
pop
adc
add
pop
jo
dec
push
push
popa
repnz
or
test
je
add
or
fs
dec
adc
push
nop
push
inc
out
mov
lds
and
mov
xor
clc
lods
fistl
jmp
rcl
dec
cld
mov
inc
inc
cmp
lea
mov
mov
je
lea
in
clc
push
cld
push
push
push
adc
mov
sti
mov
or
inc
add
or
rorl
jb
nop
cmp
mov
jl
push
push
pop
mov
cmp
je
frstor
int
dec
xchg
xlat
nop
jmp
pushf
lcall
xor
ljmp
test
mov
jmp
movl
sbb
arpl
mov
add
leave
and
mov
pop
mov
fisubl
xchg
pop
inc
and
sti
xor
mov
sti
addr16
maxps
mov
mov
push
cmpsb
add
out
jbe
clc
jbe
call
xchg
adc
cmp
ja
mov
mov
push
sbb
mov
cld
jmp
jmp
pop
add
jl
sbb
pushl
cmpl
mov
cs
mov
fdivr
sbb
add
and
sti
sti
jmp
pop
push
sub
push
lea
push
push
call
sbb
push
add
xlat
adc
pop
rcrl
fisttpll
call
xor
push
aas
adc
lea
mov
ret
movzbl
movzbl
sub
je
idiv
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
fbld
mov
lea
mov
insl
sbb
cmp
testl
adc
pop
popa
ja
add
push
push
add
cmp
pop
cmp
movzbl
dec
and
aaa
ja
add
ja
cmp
dec
fdivrp
mov
cmp
je
movzbl
ja
dec
std
movzbl
sub
je
test
setg
lea
movl
jno
movzbl
push
repz
fwait
sbb
cmp
dec
jbe
inc
add
jecxz
mov
negl
mov
cmp
je
mov
out
enter
sub
mov
add
pop
add
dec
jae
orb
popa
mov
mov
cmp
mov
test
or
or
add
push
fisttpll
or
cmpb
ret
mov
cmp
mov
sub
or
dec
or
daa
add
xor
psadbw
mov
cmp
mov
int3
sbb
add
cmpsb
or
push
adc
xorb
push
test
mov
mov
cmp
out
enter
adc
mov
xor
dec
adc
dec
jae
push
sbb
xor
mov
add
add
xor
inc
sbb
sub
xorb
sbb
mov
add
sbb
xchg
sbb
mov
mov
int3
sbb
sbb
sbb
mov
pusha
pop
out
mov
leave
add
pushf
push
push
pop
call
pop
mov
ljmp
add
add
sub
cmp
jae
add
add
cmp
ja
ja
jmp
in
inc
in
jp
in
cmp
xlat
xchg
in
mov
sub
xorb
push
je
sbb
cmp
dec
xlat
cmp
cs
xor
mov
inc
call
xorb
jmp
cmp
add
ljmp
lret
mov
mov
cmp
mov
sub
mov
mov
dec
in
push
inc
lcall
cmpsb
cmp
aas
out
out
mov
mov
sbb
lock
mov
sub
mov
out
mov
dec
imul
repnz
out
add
test
hlt
cmp
mov
adcb
sub
dec
cmc
push
xorb
xor
or
clc
push
div
repnz
and
mov
clc
cmp
push
mov
sbb
lods
jmp
stc
push
xorb
cli
shll
mov
sti
sti
adc
das
xor
cld
cmp
je
xor
sub
pop
jns
lret
pop
inc
std
std
sbb
loop
dec
lcall
decl
mov
jmp
xchg
mov
aaa
adc
aas
inc
and
mov
cmp
je
jge
inc
fldcw
push
inc
cwtl
nop
or
rcrb
inc
fcoms
xorb
std
mov
cmp
aaa
fidivl
outsb
notl
ret
jno
loop
lea
lret
sbb
lret
xchg
incl
jne
mov
cmp
or
push
ret
jb
dec
in
mov
mov
int
nop
pushf
push
lret
xchg
push
out
mov
mov
cmp
out
mov
mov
push
inc
into
and
mov
movsb
fldenv
push
lret
pop
push
ret
and
mov
std
adc
repz
mov
mov
leave
sarb
adc
in
fwait
push
lret
jl
fstl
movsb
lret
mov
mov
cmp
inc
testl
mov
lret
mov
mov
push
lret
icebp
cld
imul
mov
es
popf
xchg
mov
cmp
mov
mov
and
enter
test
push
or
shl
data16
mov
push
in
aas
es
test
femms
sti
jg
out
or
loop
mov
cmp
lods
loop
les
lods
xchg
and
cltd
jecxz
push
fmuls
insb
pop
add
mov
push
lods
xchg
mov
cmp
sub
inc
out
sbb
inc
mov
mov
inc
jbe
xor
sub
imul
push
es
jle
inc
ljmp
dec
les
cli
adc
negl
push
push
mov
push
push
mov
les
out
cmp
mov
sbb
push
ja
and
pop
mov
ss
push
pop
inc
fdivs
lock
sbb
cmpsl
stc
out
repnz
mov
or
and
fsts
and
mov
push
mov
mov
cmp
mov
or
and
fsts
and
add
push
mov
sti
ret
adc
mov
xchg
jmp
mov
lods
fnstenv
push
mov
mov
cmp
je
andb
and
mov
cmp
push
loope
loope
pop
cmpsb
into
or
loope
adc
pop
div
jmp
push
add
mov
mov
cmp
sub
shl
faddl
mov
dec
mov
push
decl
decl
out
mov
cmp
mov
ret
cmp
mov
nop
inc
loopne
lcall
decl
fbld
mov
cmp
mov
sbb
push
ja
and
dec
mov
push
push
decl
decl
out
mov
cmp
mov
ss
cmp
cmc
adc
inc
lret
sbb
decl
fbld
mov
cmp
mov
sbb
push
ja
and
dec
mov
aas
push
decl
decl
in
dec
loopne
cmp
mov
sbb
into
sbb
mov
mov
mov
decl
decl
int
pop
fs
push
lret
xor
je
push
shrb
out
nop
shl
inc
add
inc
add
jmp
add
or
stc
inc
add
std
inc
add
icebp
inc
add
inc
add
mov
inc
repz
inc
add
clc
inc
add
cld
inc
add
out
add
cmp
inc
add
imull
out
inc
add
out
inc
add
and
out
lcall
push
mov
push
push
mov
mov
sub
in
incl
je
dec
je
mov
adc
add
and
repz
decl
jl
mov
movzbl
sub
je
xor
addr16
lea
pusha
negl
decl
mov
pop
add
and
leave
add
add
pop
rcrl
bound
adc
test
and
jo
push
mov
jno
je
movzbl
sub
movsb
sti
add
add
test
and
mov
xchg
inc
pop
and
sbb
fldl
or
jno
ja
cmpsb
or
inc
inc
add
and
fwait
inc
lcall
inc
pop
pusha
cmpsb
cmp
and
loop
lea
push
jo
cmp
or
or
popf
mov
outsb
or
and
and
push
ja
pxor
xor
and
push
and
jo
cmp
mov
pop
adc
sub
sub
mov
jae
sbb
dec
adc
or
imul
mov
jo
and
sti
std
mov
cmp
jo
sub
jbe
cmpsb
adc
cltd
dec
adc
dec
adc
and
sbb
int3
je
pop
xor
jo
dec
aaa
negb
cmp
sbb
mov
dec
sbb
sub
xorb
sub
dec
sbb
inc
add
dec
addr16
and
sbb
pop
mov
cmp
je
sub
dec
imull
imul
sbb
pusha
push
push
push
shlb
inc
pop
pop
mov
jne
add
add
sub
cmp
jae
cmc
ja
lds
iret
xlat
jmp
fwait
clc
call
test
push
in
jno
mov
push
in
dec
jle
sub
sbb
pslld
sarb
sbb
pop
out
fucomi
push
out
fwait
in
sbbl
cmpsl
jne
sti
or
push
call
push
sub
adc
xchg
sbb
orb
dec
daa
dec
xor
jmp
shlb
ljmp
icebp
push
jmp
add
sbb
out
in
cmp
in
inc
out
int3
sub
adc
in
and
fcoms
and
mov
out
and
lock
out
lret
mov
sub
je
icebp
icebp
and
add
mov
pop
repnz
inc
stc
push
repz
leave
std
sbb
push
ss
jo
sub
add
jne
sbb
cmc
and
jbe
fdivrl
and
push
mulb
out
xor
and
cmp
push
clc
cmp
push
jmp
xchg
mov
daa
insl
stc
mov
rorl
lods
stc
and
cld
push
jo
cltd
shlb
push
cli
and
fldl
sti
and
addl
push
cld
cmp
sub
sub
or
test
jne
mov
push
jbe
mov
std
sbb
call
out
cli
or
sbb
xor
jmp
inc
decl
mov
pop
enter
pop
jmp
mov
cmp
scas
add
or
jecxz
adc
mov
lret
mov
hlt
and
sub
clc
and
dec
scas
mov
inc
push
xchg
and
push
out
push
out
xchg
jae
testb
outsb
daa
mov
adc
and
sbb
in
or
add
mov
mov
cmp
mov
gs
or
add
add
lods
add
or
and
push
out
cmp
mov
negb
or
in
sbb
and
in
or
push
and
mov
stc
fcomip
cmp
imul
repz
mov
or
dec
into
daa
mov
push
and
sub
xor
and
std
out
add
mov
mov
cmp
push
jbe
bound
jo
xor
clc
push
add
and
out
insl
pop
fdivs
lret
loope
and
push
sti
cmp
push
or
mov
add
addl
and
mov
and
inc
nop
inc
scas
mov
jle
pop
xchg
mov
loop
push
loop
loop
pop
outsb
lods
adc
idiv
jecxz
sub
mov
pop
shlb
sub
sub
popa
int
sub
pop
ret
jle
sbb
push
out
xor
xor
cmp
inc
sub
or
sub
sbb
pop
jo
xor
cmp
mov
loopne
mov
shll
into
imul
cmp
in
or
std
out
add
push
out
cmp
mov
mov
daa
mov
gs
cmp
in
or
and
ret
cmc
add
cmc
or
cmp
mov
lret
insl
mov
mov
and
jae
sub
mov
and
push
idivb
push
testb
add
and
sbb
sub
and
xorl
mov
pop
sub
sub
ret
mov
cmp
push
cmp
ret
xchg
daa
push
cmp
lcall
rolb
mov
clc
mov
mov
cmp
je
mov
dec
je
incl
add
jmp
mov
cmp
push
in
push
aaa
loope
loope
shl
flds
inc
scas
and
sub
mov
and
push
in
push
in
or
inc
sub
push
into
daa
stos
jns
mov
pop
xchg
and
repnz
mov
and
push
cs
imul
cmp
mov
xchg
or
jns
mov
lods
fsts
mov
mov
mov
mov
imul
cmp
mov
xchg
or
jns
ret
flds
and
icebp
sbb
inc
mov
mov
cmp
cmp
jo
popa
loope
add
test
and
or
inc
aad
jle
sub
mov
cmp
push
jb
ja
jp
daa
mov
bound
std
inc
xor
scas
ret
cs
inc
push
mov
cmp
imul
stc
mov
sub
push
into
daa
mov
push
pop
xchg
push
inc
xor
popw
fdivs
ja
jp
inc
je
adc
sub
dec
push
jl
pop
mov
mov
movzbl
sub
je
rclb
rclb
ret
sbb
xor
and
inc
icebp
xchg
int3
add
mov
mull
mov
add
mov
add
fwait
imulb
fs
mov
notb
fisttpl
test
dec
orb
sahf
mov
popf
sbb
inc
and
int3
dec
add
or
add
mov
sub
icebp
or
out
decl
ret
mov
les
inc
add
cmovno
jecxz
inc
add
mov
push
mov
or
mov
adc
add
or
jns
fwait
jmp
incl
test
inc
add
ljmp
add
jnp
jmp
add
mov
inc
add
add
int3
arpl
fists
lock
clc
push
mov
push
jnp
mov
test
jg
mov
push
cmp
push
jb
lea
test
out
fdivl
mov
rolb
add
shlb
push
cld
jne
mov
repz
ja
cmp
push
std
jne
mov
cmp
jne
mov
sbb
jg
cmp
jne
addl
cmp
jb
jmp
movzbl
jnp
out
jmp
or
or
aas
jnp
jnp
std
jmp
or
cld
jmp
insl
jmp
mov
fdiv
pushl
adc
adc
inc
inc
incl
cmp
jb
xor
bts
lret
mov
lahf
mov
lods
call
xor
inc
incl
adc
pop
repz
and
inc
cmp
inc
xor
call
je
out
and
mov
je
cwtl
and
and
rorb
lea
ret
test
xchg
sbb
add
fwait
cmpsb
jmp
add
loopne
mov
inc
inc
insb
ret
je
testl
pop
test
xchg
pop
inc
cmp
enter
or
mov
rorb
std
or
les
or
add
inc
pop
and
mov
sub
enter
cmp
sub
mov
mov
mov
add
xor
cmpl
subl
xchg
pushf
movsb
mov
mov
and
mov
dec
shll
insb
mov
rorb
add
cld
jae
jle
fwait
inc
add
out
testb
fistl
dec
rcrl
mov
mov
mov
mov
dec
xor
mov
mov
or
cmp
repz
and
popl
mov
popl
add
pusha
lea
mov
cld
inc
add
testl
mov
movl
add
movl
testl
mov
out
or
mov
dec
aaa
inc
std
inc
pop
push
call
rcll
cmpl
inc
mov
cmp
ljmp
orl
leave
int3
push
push
push
push
push
push
xchg
mov
sbb
call
or
push
dec
and
lret
xor
stc
and
mov
adc
push
and
call
add
cmp
adc
push
fwait
inc
test
push
push
push
lds
push
lea
sbb
lret
and
mov
jl
sub
je
cmp
jbe
lea
mov
mov
js
mov
add
jae
ds
testl
jmp
push
addr16
loope
addb
xor
mov
add
jne
jmp
ljmp
or
push
or
cmpsb
ret
push
push
mov
or
inc
add
or
inc
or
insb
mov
mov
push
push
push
pop
pop
pop
pop
pop
dec
rol
ja
hlt
aaa
ss
mov
mov
shr
mov
incb
pxor
jmp
mov
inc
cmp
inc
xor
cmpsb
jmp
inc
inc
add
pop
shlb
push
add
in
in
sub
xchg
ret
adc
std
incl
mov
mov
and
mov
cmp
je
sub
jg
clc
push
jns
dec
jb
mov
test
je
sti
incl
inc
adc
ret
clc
xor
mov
mov
rep
sbb
cs
add
pop
pop
pop
scas
lock
add
push
lock
sar
adc
enter
push
inc
or
xchg
pop
push
adc
adc
call
jne
lea
call
mov
lea
popf
pop
xchg
stos
loopne
nopl
movzwl
jmp
mov
sarl
lea
push
jb
sbb
adc
incl
mov
mov
movb
pop
jmp
xor
mov
movb
inc
dec
push
ljmp
test
cli
jo
pushl
std
push
adc
and
dec
lea
cmp
ljmp
pushl
xor
jmp
movzwl
and
rclb
lret
pusha
dec
lock
and
dec
add
cmpb
and
mov
or
std
pushl
sbb
dec
and
sub
and
add
sbb
or
pop
or
mov
sbb
mov
and
shrl
inc
stos
dec
xchg
mov
fdivs
add
or
sub
push
imul
loopne
add
pushl
sbb
inc
adc
fmuls
inc
rorb
mov
inc
push
xor
cmp
mov
mov
mov
je
fcomps
mov
mov
push
rorl
add
cmpl
jne
aaa
push
xchg
std
pop
jmp
push
dec
adc
jne
cmp
movl
cmp
sub
dec
std
pop
mov
pop
inc
cmp
jle
cmp
lea
jb
or
ja
mov
mov
rol
cmp
inc
jl
jne
test
or
rorl
dec
add
adc
out
lods
sbb
adc
and
add
aaa
cmp
jge
cmp
je
lea
fsub
add
add
lds
jg
sbb
jg
pop
int3
cmp
je
push
sbb
in
movl
mov
jmp
cmp
mov
cmp
popf
inc
and
je
push
out
jne
mov
and
incl
je
push
push
push
push
and
mov
into
je
pop
push
jmp
cmpl
out
cmpsb
mov
test
sahf
mov
add
lea
mov
loop
pop
imul
inc
mov
addl
xchg
or
xchg
mov
lcall
ret
push
je
cmp
jbe
cmp
je
mov
push
sahf
cmp
jge
cmp
je
push
adc
clc
add
pop
lods
push
pop
add
jle
pushf
mov
push
mov
mov
jmp
cmp
cmpl
pop
lea
xor
je
shrb
pop
mov
sbb
mov
jbe
push
pop
jmp
pushl
das
mov
and
pop
ret
mov
out
ret
mov
ret
mov
jg
or
addr16
lods
add
test
add
push
push
and
enter
lea
fisubrl
sub
push
mov
pop
cld
dec
jmp
jno
xchg
testl
or
pop
mov
dec
inc
push
nop
inc
fdivs
fnstsw
int3
mov
or
mov
popf
mov
cmp
jbe
and
inc
mov
cmp
je
cmp
je
mov
sbb
push
xor
hlt
je
addr16
xor
add
pop
pop
mov
cmp
pop
loopne
mov
xor
ret
je
pusha
fnstsw
js
pop
or
push
mov
xchg
mov
xor
inc
mov
fwait
sbb
cmp
cmp
mov
cmp
sarb
dec
in
adc
je
mov
into
push
aam
mov
sub
push
sbb
scas
push
push
cmp
xor
jl
aas
int3
cmpsl
and
adc
pop
shlb
pop
mov
mov
jmp
or
aaa
xor
in
pshufw
push
lods
sarl
xor
or
roll
loop
sbb
adc
ret
cmc
out
mov
in
mov
or
xchg
cmp
jne
mov
inc
mov
mov
jns
add
ret
cs
cmpb
jne
movl
test
inc
add
imul
jmp
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
xor
mov
mov
negb
jmp
cmp
in
push
sub
ja
cmp
jge
pop
sbb
sbb
jg
pop
enter
pop
in
mov
enter
mov
ja
ljmp
dec
jmp
mov
mov
mov
xor
ret
notb
lock
push
sub
cmpl
lcall
cli
jg
jge
mov
mov
jne
add
cmpb
or
add
cld
inc
mov
jne
mov
push
addl
insb
pop
add
cltd
mov
addr16
test
mov
or
mov
inc
or
xchg
es
lea
mov
mov
push
xchg
mov
cltd
idiv
mov
mov
sub
mov
lea
out
sub
lcall
ret
add
add
add
fcomip
decb
jl
imul
sub
add
cmp
jg
fcoml
decl
add
lock
jne
movsb
rcrb
sbb
cmp
adcb
pusha
or
sbb
jg
lock
sub
jmp
clc
cmc
jae
lahf
mov
dec
or
or
cmpb
add
imul
add
add
mov
cmpl
jne
mov
push
add
sub
imul
xor
adc
incb
rcrb
dec
arpl
mov
rorb
daa
jns
addl
sti
pop
es
sbb
or
pop
xor
jmp
incl
xlat
lock
hlt
push
jbe
into
pop
addl
daa
test
jne
jae
test
cmc
scas
decl
fildl
adc
adc
pop
fwait
add
xor
fdivp
push
bound
xor
add
sti
or
xor
sbb
adc
or
push
or
push
jmp
adc
jge
or
push
push
pop
push
lcall
test
or
and
mov
ds
pop
sub
out
outsb
int3
or
or
ja
push
jmp
push
or
push
push
subps
mov
out
dec
jmp
cmp
push
pop
push
pop
movl
clc
jge
push
out
dec
testl
movl
cmp
push
push
sub
pushl
pop
jmp
jo
gs
pop
add
mov
incl
jnp
enter
jge
cmp
jl
cmp
jg
cmp
call
jle
cmp
jge
mov
pop
pop
leave
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
mov
sbb
pop
sti
mov
adc
cmp
jne
xor
cmp
shr
or
icebp
inc
push
setl
mov
jmp
push
push
outsl
clc
idivb
xor
push
sbb
sarb
jne
adc
mov
pop
cs
add
sbb
mov
cwtl
adc
bound
pop
inc
daa
cmp
outsb
dec
pop
aaa
or
mov
jbe
push
stc
dec
cmp
mov
test
mov
and
dec
push
movzbl
lea
inc
decl
addb
mov
lea
inc
cmp
ja
adc
addl
je
pop
sub
mov
adc
or
add
jne
popf
and
sub
aad
and
mov
loop
jg
sbb
sbb
xor
lock
push
jo
pop
adc
or
pop
pop
jmp
push
rolb
movzbl
in
lcall
and
mov
movzbl
lea
adc
loop
pop
adc
shrb
lock
pop
or
inc
test
push
pop
cmp
jne
cmp
inc
les
jg
popa
add
or
fcompl
leave
sbb
enter
loopne
add
addb
adc
popa
jo
test
cmp
mov
push
add
and
dec
int3
add
je
fcomps
out
pop
pop
ret
or
cmp
add
cld
xchg
es
add
ret
adc
daa
jbe
insb
pusha
scas
adc
push
and
mov
inc
push
and
and
mov
in
test
mov
or
and
mov
leave
scas
stos
pusha
mov
repnz
push
jecxz
pop
pop
mov
aam
adc
rcll
stos
inc
adc
cmp
push
and
push
mov
jg
mov
mov
xorw
sbb
and
and
in
pop
and
jae
add
rcll
xchg
inc
and
jmp
mov
inc
sub
sbb
push
adc
sub
scas
cmpsl
sbb
sbb
push
mov
in
xor
adc
aaa
lock
push
push
je
adc
roll
ljmp
and
je
lret
mov
jbe
dec
or
inc
cmp
std
lods
sub
sbb
shl
sub
mov
or
decl
je
loope
lahf
roll
in
and
jnp
daa
cmpl
sub
popa
jne
mov
sbb
inc
icebp
xor
cmp
jne
sbb
lods
add
popf
pop
int
push
ja
or
xor
xchg
mov
setne
inc
cmp
mov
pop
lods
push
jmp
mov
add
cmp
sbb
mov
shufps
lea
dec
xchg
fmuls
jne
inc
icebp
decl
cli
or
add
jmp
sbb
cld
icebp
cs
out
sahf
ret
jbe
mov
cmp
jb
cli
cmp
jb
pushl
insb
lahf
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
enter
xor
or
pushl
add
test
jge
push
push
jmp
nop
in
jo
sub
popl
out
or
xor
sub
cmp
jge
inc
sbb
int3
pusha
jo
mov
and
dec
and
adc
mov
and
dec
xor
push
aas
mov
adc
sub
pop
ret
jbe
xor
cmp
mov
setne
inc
cmp
and
and
sbb
cmp
ja
and
mov
incl
neg
adc
movb
lea
push
ficompl
clc
mov
mov
add
pop
shl
mov
stc
or
mov
aas
sar
mov
push
mov
inc
rorl
test
jbe
cmp
jb
cwtl
sub
jae
pop
push
movb
ja
test
mov
and
cmp
add
inc
sbb
mov
dec
add
inc
pop
pop
leave
adc
sbb
jne
cmp
jg
jl
cmp
rolb
loope
pop
or
pushf
sbb
cmp
push
xchg
sbb
jne
sbb
sbb
sub
mov
shlb
enter
ret
cmp
jb
mov
mov
xchg
mov
mov
ret
sub
jmp
pop
inc
jne
push
mov
ljmp
js
push
ret
test
push
push
jne
cmp
je
mov
mov
les
je
ja
xchg
ss
add
jmp
clc
pop
mov
jmp
or
cmp
pop
jbe
mov
cmpb
jne
push
jg
pop
inc
icebp
add
lods
into
test
je
add
mov
jp
pop
pop
pop
ret
mov
lea
inc
sar
cmp
jmp
push
mov
push
push
arpl
les
inc
adc
pop
inc
cmp
cmp
mov
je
cmp
mov
jno
ja
jmp
push
jne
cmp
and
mov
xor
imul
mov
push
add
xchg
mov
inc
cli
xchg
push
push
pop
filds
or
loope
dec
ja
mov
je
mov
cmp
je
or
test
shlb
mov
mov
je
adc
xor
push
lods
std
or
mov
jne
mov
inc
jecxz
test
ret
cmp
mov
jmp
inc
adc
mov
cltd
mov
mov
imul
pushl
xor
push
or
xlat
xor
rorb
cmp
jne
pop
or
lahf
pop
push
rcr
inc
mov
test
push
jmp
mov
or
push
xor
cmpb
xlat
and
je
push
hlt
xor
popa
add
mov
inc
sub
popa
pop
and
or
xchg
and
or
clc
addb
aam
cmp
add
sti
pop
nop
push
lds
push
jne
mov
mov
sub
lret
je
push
mov
dec
xlat
ja
cmp
jne
or
loopne
imul
mov
dec
ret
push
add
fidivrs
fdiv
inc
mov
adc
or
inc
in
adc
andb
div
inc
jo
dec
inc
loop
pop
add
xchg
push
and
and
xlat
adc
loopne
sbb
mov
xlat
mulb
mov
or
faddp
cmp
cmp
pop
mov
mov
jmp
ret
jl
mov
xor
je
test
loopne
pop
mov
clc
pusha
and
inc
push
mov
mov
add
loopne
pop
rol
cmp
hlt
or
jne
stos
fdivl
inc
jae
mov
sbb
pop
push
and
adcl
dec
jge
or
push
xor
fidivs
mov
cmpl
add
testb
sti
mov
les
or
jg
dec
movzbl
and
dec
jnp
or
cmp
pop
jl
inc
push
mov
call
or
jmp
cld
mov
movb
pop
jmp
push
nop
ja
jecxz
cld
movb
mov
incl
push
push
lea
push
push
pushl
inc
outsl
loop
mov
outsl
int3
cmp
jne
fdivr
incl
movzbl
jmp
movzbl
xor
mov
or
cmpsb
pusha
push
add
add
dec
mov
inc
adc
jge
and
cmpsb
cltd
sub
jge
pushl
aad
pushl
iret
jmp
or
movzwl
inc
mov
and
movzwl
inc
add
decl
in
imul
inc
in
test
push
lea
push
lea
aas
aam
in
xchg
add
xchg
add
ja
and
into
push
or
add
cltd
pop
ja
sub
cld
movzwl
and
fsts
jg
xor
ds
fmulp
ret
or
and
mov
mov
inc
cmp
ret
sub
movsb
clc
mov
fwait
stc
inc
cld
pushl
push
push
outsb
idiv
jnp
lret
ds
cmpsb
leave
mov
andb
xchg
mov
jecxz
adc
cmp
lock
jne
test
xchg
pop
lods
sar
jmp
adc
jge
je
jecxz
out
out
add
and
ret
mov
push
mov
mov
lea
jle
hlt
sbb
pop
pop
push
movzbl
push
xor
in
dec
jmp
mov
outsl
fiadds
mov
inc
jmp
cmp
xchg
dec
sbb
jmp
out
ret
cmp
jne
adc
test
jl
pop
pop
je
pop
fbld
jg
cmp
je
adc
sti
filds
pop
cmp
je
cmp
adc
mov
fucomip
jno
and
inc
adc
or
cmp
jne
jne,pn
and
add
pop
jne
inc
bound
xchg
call
mov
movzwl
test
je
movsbl
sub
jmp
test
je
mov
cmp
sbb
add
leave
cmp
jae
add
incl
inc
cld
jb
jne
cmp
jbe
push
add
jge
sbb
test
jne
or
arpl
pop
cld
imul
add
jmp
jg
mov
test
jne
and
je
mov
jge
xorb
sub
jne
jbe
incl
decb
pop
lods
testb
movl
dec
cld
jmp
fadd
paddd
neg
adc
mov
inc
test
loopne
dec
fisubrs
add
push
inc
jmp
sbb
or
pop
pop
popf
mov
sarb
rorb
cmp
jne
gs
enter
inc
icebp
jmp
xlat
cwtl
add
lock
xchg
push
popa
cmpsb
dec
cwtl
cmp
mov
pop
add
inc
jnp
sbb
fldl
inc
fcoml
or
cmp
or
adc
mov
or
adc
cmp
jne
adc
and
rol
js
adc
sub
pop
adc
xchg
enter
jne
mov
sbb
pop
inc
cmpl
sbb
fdiv
pushf
mov
mov
decl
js
mov
les
xchg
inc
pusha
xchg
mov
cmp
fdivl
push
adc
adc
and
sbb
idiv
lahf
and
adc
sbb
jne
and
or
dec
dec
or
push
mov
push
push
es
ljmp
mov
outsl
cs
mov
or
inc
insb
jg
pop
mov
mov
inc
inc
test
icebp
sub
jmp
mov
test
sub
cmp
movsbl
shr
lea
cmp
dec
cmp
jne
jae
mov
mov
in
jb
ja
mov
cmp
pushl
lock
call
inc
lock
cmp
jne
xor
cmp
jb
ja
jno
xchg
cmp
jbe
sub
clc
lds
in
xor
push
mov
fbstp
cmpsl
mov
jne
hlt
push
pushl
pushl
idiv
pushl
sub
xor
xor
add
adc
mov
mov
mov
mov
incl
fldt
sub
add
mov
or
pop
hlt
ja
jb
cmpl
ja
cmpsb
adc
cmp
jb
ja
pushl
add
call
orl
orl
jmp
adc
dec
andl
mov
jmp
sbb
push
xor
mov
and
lock
fadds
fwait
dec
hlt
cmpb
sbb
mov
inc
pop
push
hlt
xchg
inc
push
and
out
sub
sbb
loop
or
sbb
ret
int3
mov
push
push
push
mov
or
je
mov
pop
mov
jg
lock
mov
repz
mov
je
or
je
add
cmpl
inc
add
out
push
cmp
ja
add
cmp
or
cmp
jne
sub
ffreep
incl
jne
xor
cmp
je
mov
neg
mov
pop
pop
pop
lds
push
loopne
rcr
adc
shlb
dec
push
mov
mov
adc
lock
mull
out
pop
enter
add
jmp
mov
jb
push
and
pop
idiv
jmp
shr
rcr
shr
rcr
or
jne
div
mov
and
mov
out
shll
cmp
ja
jb
cmp
jbe
dec
sub
sbb
and
xor
or
or
fisubl
mov
sub
loopne
mov
cmp
pop
ret
in
hlt
pop
xchg
test
adc
lret
and
jne
cmp
mov
stos
incb
xor
int
es
jo
popf
cmp
int
cld
pop
mov
jmp
mov
cmp
fs
xchg
mov
pop
mov
repz
adc
sub
add
mov
mov
jo
and
add
mov
les
inc
adc
add
js
and
dec
fisttps
add
add
shll
push
push
push
push
xor
push
mov
cmc
mov
cmpsl
gs
sbb
call
push
call
cmp
clc
je
out
out
call
out
pop
sar
je
sbb
push
push
dec
adc
or
jne
sub
xlat
add
mov
jne
je
cld
std
mov
jne
add
fs
push
out
or
pop
enter
js
cmp
lock
adc
sti
lock
sub
cmp
je
inc
inc
fdivs
scas
andl
stos
and
jecxz
and
aaa
mov
push
push
push
ret
add
test
adc
inc
add
xor
inc
cmp
adc
ja
scas
clc
push
push
and
fiadds
push
xorb
and
xor
jnp
adc
inc
push
add
enter
adcl
push
adc
jge
mov
clc
xchg
jge
lcall
pushf
pushl
push
dec
cmp
pop
je
cmp
je
mov
subl
push
pushl
testl
filds
cmp
ja
lea
mov
push
subl
mov
clc
jmp
or
std
aaa
in
jge
je
scas
clc
jae
mov
push
push
bound
mov
fsts
je
test
mov
and
cmp
jle
cmp
or
cli
sbb
and
sbb
fdivrl
fbld
add
movl
popa
dec
orb
fsubr
add
xchg
sbb
mov
adc
test
push
les
mov
lea
into
or
jge
orw
and
dec
cmpsl
call
push
cmpw
push
cmpw
xlat
inc
inc
paddw
test
lods
fstpl
push
into
mov
push
int3
leave
or
pop
pop
pop
mov
xor
adc
or
leave
mov
js
xor
inc
sbb
dec
fs
cmp
pop
mov
jle
jge
add
dec
and
jne
mul
mov
pop
ja
push
mul
mov
and
add
or
cmp
loope
rcrl
das
scas
xor
add
adc
rcrb
mov
cmp
icebp
call
cld
in
cmp
mov
test
push
push
push
call
or
add
mov
cmc
or
cmp
jle
mov
aas
and
or
iret
jne
or
xchg
pop
mov
ljmp
roll
adc
jle
mov
mov
and
sarb
cmp
mov
jmp
imul
mov
scas
sub
popa
orl
jle
mov
test
pop
xor
inc
cmp
jne
hlt
mov
ja
mov
cmp
test
jg
push
xlat
jne
jne
push
pop
popf
mov
insl
pop
pop
cld
ja
cmp
jle
push
jmp
pop
xchg
ja
sbb
cmp
cmp
add
jge
add
xchg
mov
test
jg
cli
pushl
or
or
cmp
jbe
inc
lret
call
and
cmp
push
pop
xor
jle
mov
cmp
cmp
jbe
jmp
mov
pop
jne
push
push
icebp
fwait
or
test
sub
incl
jbe
fldl
jle
jmp
repz
lea
cmp
ja
ret
or
sub
in
aaa
out
mov
inc
loopne
mov
add
test
dec
add
inc
test
fs
sbb
lea
inc
sbb
ss
adc
or
pushl
loop
inc
jo
orb
stos
xor
cli
in
je
addr16
adc
pushl
lcall
rolb
add
adc
push
adcb
add
mov
mov
cmpsl
or
scas
adc
out
or
mull
and
loope
lahf
xchg
jge
decl
lock
pop
je
je
mov
lea
fdivrl
and
mov
sbb
xchg
std
jmp
sbb
in
clc
add
test
imul
into
dec
cwtl
lock
and
int
jmp
fisttpl
ret
pop
gs
pop
mov
lea
sbb
push
adc
scas
addl
clc
mov
jbe
xor
xchg
ret
enter
not
sub
add
xor
call
xor
popa
xlat
ljmp
push
dec
adc
lret
jne
fistl
or
jmp
aaa
mov
jmp
pushl
pop
pop
pusha
push
out
push
add
aaa
push
lods
sbb
xor
xchg
cwtl
cmc
sub
cmp
add
push
pop
push
pushf
dec
sub
loope
nop
xorb
hlt
sbb
push
jmp
push
lahf
inc
mov
lods
or
mov
incl
mov
cmp
je
test
je
aaa
inc
cmc
pop
sbb
mov
sub
jmp
push
testb
fadd
push
jmp
xor
test
mov
jne
lock
incl
leave
ret
cmp
je
add
inc
cmpl
jne
push
push
inc
push
or
jl
jne
mov
outsl
sub
pop
mov
mov
aam
decl
mov
add
add
mov
pop
clc
fbld
push
mov
push
shr
adc
inc
or
mov
outsl
mov
lock
jmp
jp
fdivl
repz
push
add
cmp
mov
je
cmp
je
xor
cmp
mov
decl
xchg
sarl
cld
pop
dec
dec
clc
jne
mov
cmp
sbb
cmp
je
cmp
xchg
add
adc
ss
int
decl
adc
pop
clc
jne
add
insl
add
je
mov
aas
jne
sbb
lea
ret
mov
mov
test
jge
enter
sub
add
adc
call
push
cmp
je
lea
xchg
ss
jecxz
mov
adc
sbb
mov
mov
mov
push
in
inc
lea
cmp
jne
sbbl
aas
jae
push
push
in
and
fwait
js
jp
cmp
je
jmp
stos
mov
outsl
mov
sti
jge
neg
lea
clc
adc
imul
add
cmpl
mov
add
je
out
and
mov
or
sbb
es
jne
inc
sbb
clc
imul
jp
mov
out
test
push
sbb
stc
xor
mov
sub
add
mov
inc
in
scas
es
mov
sbb
shlb
jnp
jbe
out
dec
cmp
je
mov
fcmovbe
xor
pop
push
inc
lock
pop
inc
sbb
cmp
xchg
dec
dec
or
in
cmp
dec
jmp
push
push
or
and
mov
mov
mov
int
call
pop
pop
je
and
add
mov
inc
aas
shrb
xchg
mov
jne
fnstsw
cli
pushl
shr
push
mov
cmp
jne
pop
cmp
cmp
pop
pop
cmp
jmp
movzbl
testb
je
inc
mov
cmp
je
movzwl
movzbl
ljmp
or
cmp
jne
dec
jmp
movzwl
cmp
je
inc
por
fnsave
movl
sbb
adc
jmp
lods
mov
xor
push
adc
arpl
jo
cli
inc
test
dec
lea
pop
ret
leave
decl
mov
lea
xor
push
mov
shl
decl
call
je
mov
add
cmp
je
adc
cli
iret
test
je
insb
jmp
fcoms
ret
shl
mov
fmuls
rorl
std
cmp
cli
add
xor
xchg
iret
xor
add
and
xchg
jne
and
jne
cltd
out
loop
and
push
call
inc
cld
cmp
je
xchg
cmp
je
test
je
cmpsb
jmp
je
adc
push
into
fidivrs
pop
pop
mov
aaa
ret
lea
push
cld
pusha
push
adc
jmp
fdivr
and
jg
and
jmp
add
push
mov
ss
mov
and
sbb
call
mov
jp
and
orb
dec
push
insl
push
jmp
push
mov
in
and
mov
stos
sbb
jmp
jmp
stos
sbb
jmp
stos
jmp
cs
adc
mov
push
aam
and
inc
inc
mov
jmp
and
dec
add
pop
mov
inc
insl
sub
and
test
pop
jmp
adc
push
push
mov
adc
and
adc
sub
add
adc
jmp
jmp
dec
jmp
adc
call
and
jnp
and
or
sar
and
in
jmp
and
mov
and
xor
sub
sbb
sarb
sbb
sbb
jg
fadds
and
or
add
call
adc
or
jg
mov
inc
add
aas
adc
dec
inc
add
insb
inc
add
sbb
and
test
aad
add
adc
incl
adc
add
gs
gs
xor
jae,pn
add
fs
mov
or
mov
arpl
gs
jne
arpl
ljmp
add
je
je
jb
jne
dec
outsb
outsw
inc
add
gs
je
push
jb
arpl
out
jae
inc
add
push
imul
insb
outsl
arpl
add
push
jb
push
xchg
sti
out
aas
dec
gs
outsl
jb
add
dec
jne
gs
push
add
push
inc
outsl
insl
insl
popa
outsb
fs
imul
add
pop
add
add
fcomp
xor
inc
outsl
jb
js
je
add
insl
jae
aas
imulb
gs
je
insl
and
jb
jb
add
or
add
outsl
testb
adc
add
dec
inc
ffree
incb
inc
dec
dec
inc
dec
dec
adc
or
jmp
jo
imul
and
jae
insl
popa
fs
je
gs
jo
popa
pushl
outsl
and
and
and
jg
imul
out
and
fwait
jb
arpl
or
gs
jae
and
outsb
je
arpl
out
jg
pushf
xor
jae
jae
jo
outsl
jb
jmp
cmp
popa
insl
and
inc
gs
or
jle
adc
rolb
lahf
xor
out
fdivrl
dec
push
dec
dec
pusha
mov
mov
imul
insl
bound
fs
imul
neg
jg
xchg
imul
outsb
or
out
fnsave
outsb
fs
bound
jg
jns
out
or
and
and
insl
outsl
jae
and
out
aas
mov
gs
insb
je
outsl
data16
insb
insb
insb
decl
xchg
sub
imul
insb
jb
and
outsb
jg
pop
test
cmpsl
popa
xchg
outsb
jae
jb
fdivrs
out
arpl
sbb
insb
insb
dec
popa
imul
divl
outsb
outsl
je
outsb
outsl
jne
push
arpl
and
mov
test
xor
sub
mov
sti
and
pusha
cwtl
gs
mov
je
add
mov
arpl
packuswb
sahf
sti
mov
dec
lahf
pusha
xchg
jae
fs
xor
jne
popa
bound
xor
and
popa
jo
jnp
aaa
xchg
mov
daa
inc
jecxz
imul
mov
lcall
dec
sahf
jae
fs
and
mov
dec
shll
dec
pop
fbstp
adc
jnp
push
shrl
xchg
das
push
push
and
cld
mov
sbb
aaa
xor
pop
imull
outsb
sub
or
outsl
pop
fs
arpl
add
and
gs
aaa
xor
sbb
or
jne
cwtl
and
imul
arpl
pop
lcall
je
orb
xchg
hlt
jb
jno
gs
mov
mov
in
shlb
imul
and
jne
mov
popa
insb
and
repnz
jnp
outsb
mov
or
std
outsl
outsb
insl
outsb
je
sub
xchg
lea
jae
imul
lea
dec
les
outsl
imul
gs
jg
add
arpl
jae
data16
push
imul
jno
hlt
sahf
add
ja
fdiv
mov
cmp
jb
addr16
outsb
popa
xchg
jne
pop
push
sar
outsb
outsl
ja
ja,pt
inc
cmpsl
ffreep
loopnew
or
int3
cmp
js
mov
je
inc
cmp
gs
dec
inc
push
dec
inc
dec
mov
dec
paddsb
arpl
inc
insb
mov
inc
pop
add
push
gs
popa
insb
jne
or
push
leave
sbb
or
ret
push
jns
insl
inc
test
xor
mov
inc
cmp
push
inc
push
dec
pop
dec
insb
rol
sbb
aad
insb
push
out
cmp
pop
inc
outsb
fs
jo
outsb
inc
outsl
les
nop
inc
imul
das
adc
js
push
dec
outsl
ja
jmp
notl
gs
bound
dec
jb
out
les
add
dec
popa
jae
inc
ss
sbb
jbe
jo
jo
das
cmovbe
lcall
popa
addr16
outsl
js
add
inc
push
test
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
dec
dec
push
mov
stc
inc
push
inc
push
pop
inc
push
pop
pop
daa
mov
arpl
inc
dec
dec
dec
inc
push
inc
or
add
out
add
add
mov
pop
or
psadbw
add
int3
inc
add
cld
and
push
lret
xor
movl
inc
inc
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
lcall
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
lcall
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
mov
jg
pop
cs
aaa
pop
xchg
divl
cwtl
scas
cmp
cmp
or
and
add
inc
ss
add
setne
add
xor
pusha
mov
inc
sub
add
add
add
pop
add
add
insb
add
roll
inc
pop
testb
push
sbb
aaa
add
adc
sbb
add
push
pop
inc
and
fmul
addb
mov
and
lcall
xor
add
addb
incl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
ljmp
pop
popa
nop
sub
push
or
sub
push
ret
jg
adc
pop
pop
push
push
mov
mov
insl
cmp
add
and
jg
fwait
dec
and
and
dec
dec
das
fs
jns
mov
push
dec
add
inc
add
insl
bound
add
jbe
dec
arpl
push
gs
aad
incl
jne
je
add
insb
inc
dec
testl
je
popa
jb
push
jle
bound
popa
and
out
out
jae
pop
add
push
add
ja
idivl
popa
jns
inc
pop
jb
cmp
dec
popa
aas
divb
outsb
add
je
jb
sbb
imul
jae
cmp
add
push
gs
gs
jg
mov
outsb
push
add
pop
popa
je
inc
jb
lcall
add
das
add
add
pop
add
jo
es
add
das
jo
jne
push
ret
mov
je
je
cmp
imul
outsl
and
outsb
andl
outsl
andb
je
sub
popa
add
aam
or
jb
scas
mov
add
pusha
sbb
insb
outsl
jbe
imul
jo
div
mov
outsl
sub
jb
arpl
outsb
popa
cmp
and
mov
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
sbb
outsl
insb
adc
add
and
popa
imul
arpl
mov
push
and
jae
inc
mov
mov
imul
jae
sub
divl
popa
outsb
pcmpeqd
gs
gs
mov
adc
or
psrlw
jbe
iret
and
add
gs
das
xor
punpcklwd
addr16
ret
fsubl
jae
and
popa
insl
pop
shlb
inc
and
mov
leave
mov
gs
outsb
cmovnp
inc
pop
fs
popa
mov
push
xchg
and
dec
fcoms
outsl
jb
arpl
lret
fbld
in
arpl
and
jo
bound
ja
cmpb
scas
arpl
outsl
insl
bound
loop
jae
daa
push
xor
xchg
bound
imul
outsb
je
pusha
mov
lock
jae
sub
cld
jb
jp
insb
imul
ja
addr16
outsb
jns
int3
xor
add
adc
imul
cmpsl
popa
jb
xor
popa
ds
iret
imul
pop
addr16
popa
outsb
push
add
insb
jne
pushl
jne
push
adc
push
xor
jecxz
je
push
adc
jb
pop
mov
jg
data16
outsb
arpl
cmova
ss
adc
xor
idivb
gs
aam
add
mov
pop
sbb
sbb
and
pop
pop
int3
loope
in
cmp
push
xor
dec
sahf
imul
imul
mov
mov
jp
xor
int3
sbb
into
lock
and
add
adc
fiadds
ja
je
ljmp
scas
adc
jmp
jae
popa
clc
push
daa
jae
insl
jo
imul
inc
mov
adc
addr16
into
in
fidivs
adc
add
mov
arpl
add
insb
mov
add
gs
outsb
sub
in
mov
and
pop
xchg
roll
and
push
add
fistpll
add
dec
inc
add
inc
add
dec
dec
iret
jl
enter
add
dec
push
add
pop
cld
jg
mov
pop
pop
dec
dec
add
rolb
inc
dec
push
add
cmp
mov
outsl
mov
repnz
add
add
dec
add
add
dec
and
xor
inc
add
push
cmp
aas
enter
iret
inc
add
inc
add
inc
add
repnz
dec
add
push
add
movsb
int
cmp
add
add
and
jl
dec
dec
add
push
push
add
push
add
jl
enter
adc
push
inc
add
inc
push
push
add
cmp
xchg
dec
push
inc
add
pop
dec
add
dec
add
inc
add
js
enter
add
push
dec
add
and
dec
add
add
push
sti
sti
inc
add
int
pop
add
pop
push
add
push
add
pop
add
push
inc
add
inc
inc
push
add
push
add
push
push
inc
add
push
add
out
stc
inc
dec
dec
add
pop
pop
push
pop
fwait
outsl
mov
inc
add
dec
inc
add
pop
pusha
lahf
sbb
dec
add
and
sbb
cld
jg
int
push
push
dec
add
push
dec
add
int3
inc
add
inc
add
out
xlat
rorb
fadds
bswap
pop
movntq
push
push
dec
scas
ja
sysret
mov
mov
or
adc
add
or
call
add
adc
or
add
dec
dec
xor
dec
jmp
add
push
ret
pop
sbb
jb
xor
xchg
cs
mov
loope
test
out
stc
mov
mov
add
daa
push
adc
nop
cmp
inc
mov
and
rcr
inc
sub
data16
adcb
push
xor
jl
dec
decl
add
ret
add
pop
imul
push
pop
push
gs
jo
xor
bound
xor
xor
push
or
cmp
xor
xor
jne
jo,pn
pop
adc
adc
arpl
andb
add
add
cmp
int
mov
mov
add
ljmp
out
or
jecxz
inc
add
add
test
xlat
jae
or
shlb
sub
hlt
jge
pop
pop
mov
sahf
sti
add
pop
inc
add
add
pop
cs
pop
nop
aam
dec
pop
aas
fsubs
jge
pop
in
pop
inc
add
clc
or
cvttps2pi
inc
add
add
jae
orl
decb
pop
addr16
add
add
mov
ffreep
pop
pop
shrb
pop
mov
inc
pushf
insb
jg
adc
add
add
inc
cmp
test
pop
jno
inc
ret
daa
int
pop
cwtl
sti
add
add
add
fsubs
sbb
mov
std
aaa
xchg
test
aas
inc
test
or
pop
mov
negb
pop
icebp
mov
pop
ffreep
push
idivb
pop
fistpll
int
cmpb
or
and
lods
aaa
pop
das
mov
ss
mov
and
mov
mov
pop
mov
stos
imul
jg
sbb
cs
pop
push
mov
xchg
pop
lahf
jmp
test
ret
xor
fcomps
xor
pop
add
mov
or
aad
lahf
or
push
rolb
cmp
or
adc
or
inc
add
je
xlat
dec
dec
pop
adc
sbb
adc
mov
dec
shll
sbb
rcrl
xor
cld
mov
xor
xor
mov
push
mov
pop
and
and
in
mov
insb
pop
dec
xlat
jne
in
pop
jp
dec
pop
cld
dec
sarb
pop
add
mov
add
ds
xchg
pop
or
mov
pop
enter
mov
nop
or
orb
xchg
out
test
xor
push
cmpsl
jae
push
xchg
idiv
orb
add
mov
addr16
or
pop
fmuls
sbb
ss
pop
pop
or
or
mov
jbe
add
cmp
ret
jne
aam
add
push
movsb
lret
xchg
mov
icebp
push
out
mov
sbb
mov
push
cmp
pop
cmp
xchg
adc
sti
sarl
pop
xor
add
xor
aad
xor
jp
mov
iret
jge
mov
pop
pop
jnp
out
jae
dec
pop
insl
movlps
inc
je
pop
xor
out
das
in
and
pop
dec
pop
and
addb
fmull
ret
add
and
or
popf
call
sub
outsl
negl
add
into
pusha
clc
fsub
pop
pop
xlat
pop
pop
sbb
in
pxor
add
insl
lods
inc
add
mov
ret
add
add
add
stos
sbb
add
or
sbb
and
popf
push
sbb
mov
push
or
add
pusha
hlt
cmp
push
incb
add
add
movsb
mov
inc
inc
inc
cld
jge
cmpsb
filds
mov
mov
or
inc
jle
pop
test
mov
shll
adc
inc
pop
jb
out
mov
das
inc
int3
std
fisttps
iret
mov
in
call
xorl
xor
pop
inc
cmc
mov
and
pop
fisubrl
stc
lock
jg
das
rcr
fsubp
stc
add
xor
pop
cmp
add
pop
sub
adc
outsl
push
xor
cmpsl
add
push
add
int3
or
pop
les
lds
mov
adc
add
das
pop
jmp
js
add
inc
pop
xor
or
sbb
pop
cmp
cmpsb
sti
inc
pop
mov
inc
add
lcall
pop
cmpsb
imul
imul
cmpsb
imul
inc
add
imul
dec
xlat
pop
enter
lods
mov
xchg
nop
mov
pop
xor
insb
jecxz
repz
inc
pop
pop
sti
inc
add
add
jnp
pusha
add
cmp
ret
sahf
or
test
mov
push
push
ss
inc
push
xor
adc
fbld
mov
stos
jge
or
push
push
mov
cltd
xchg
pop
xchg
sub
push
add
cli
ds
mov
xchg
or
sbb
aam
jge
inc
out
xor
daa
cmpsb
sbb
jne
mov
addb
mov
pop
add
adc
cmp
push
push
out
add
cmc
push
inc
dec
pop
push
add
and
sub
and
inc
add
jl
add
es
mov
pop
xchg
cmp
pushl
add
mov
cmp
jp
in
fisubrl
mov
lods
ljmp
fs
daa
cli
pop
pop
jo
sbb
lret
lds
ret
insb
xchg
out
clc
xchg
pushl
subl
mov
pop
inc
pop
inc
daa
pop
sbb
scas
out
sahf
adc
mov
sti
mov
jae
nop
cmp
add
or
dec
inc
loopne
mov
and
pop
pop
xchg
fidivl
xlat
or
xlat
xchg
mov
testb
xor
shrl
fadds
aas
and
fcos
stos
fidivrs
aas
jl
jg
jp
ud0
decl
xchg
push
or
das
mov
testl
xchg
mov
incl
jmp
or
inc
rcrb
push
cmpsb
call
push
js
insl
push
sbbl
fists
gs
aaa
lods
repnz
sahf
int3
pop
xchg
outsl
lea
push
mov
xlat
sub
mov
call
mov
aaa
mov
fcmovb
pop
fidivl
cwtl
dec
pop
xchg
incb
xchg
std
ljmp
stc
xor
jne
insl
sub
aas
aas
mov
decl
in
rorb
adc
out
pop
bound
loop
dec
pop
enter
ret
push
icebp
pop
in
in
hlt
and
call
std
int
andb
ret
add
les
pop
lcall
inc
mov
sbb
pop
xchg
cmp
fldcw
gs
hlt
xchg
aaa
sti
gs
cmpsb
arpl
pushl
stos
mov
out
and
cmp
push
negb
jmp
test
jge
pusha
cmpsl
cld
sub
ljmp
cld
aam
loopne
icebp
pop
sbb
dec
mov
std
icebp
or
dec
push
pop
xlat
ja
mov
push
and
xor
pop
sbb
out
add
add
ret
xchg
add
lret
mov
lods
idivb
mov
shl
iret
push
lods
or
mov
push
jae
outsl
push
mov
fldcw
inc
dec
pop
xor
cli
sahf
pusha
rclb
fst
push
cmp
jbe
inc
sub
add
and
mov
sub
stos
xor
sbb
mov
cmp
gs
decb
arpl
int3
cmp
cltd
jle
cmc
movsl
push
into
mov
sub
sub
decl
lods
pop
scas
xchg
scas
fisttpl
xor
mov
pop
mov
sbbl
jge
mov
add
decl
mov
outsb
jecxz
sbb
and
scas
mov
out
dec
pop
ret
sbb
and
jmp
test
pop
jae
push
cs
sbb
dec
or
ljmp
cmp
sub
xchg
shrb
dec
mov
mov
jg
cmp
cs
cmp
imul
cmp
xchg
dec
cmc
mov
jnp
push
pushl
adc
push
cmpsl
pop
js
sbb
xor
cmp
cmovnp
push
call
pop
inc
hlt
jb
repnz
imul
cmpsl
and
stos
mov
imul
ss
ljmp
push
scas
mov
xchg
push
and
daa
fs
cmovne
or
dec
decl
cmp
sar
enter
mov
xchg
pop
das
and
roll
push
inc
pop
mov
pop
mov
push
scas
outsb
les
inc
and
mov
dec
inc
add
cmp
xchg
cmpsl
int3
jmp
xor
xchg
pop
test
inc
push
icebp
sub
dec
adc
mov
mov
cwtl
fimull
stos
mov
xorb
pop
add
cwtl
sbb
je
test
in
in
pop
push
lods
outsb
lea
fiadds
jp
aaa
stos
inc
jge
xor
sub
popf
dec
cmp
js
inc
jmp
dec
dec
iret
shll
jae
add
int
cmp
jb
aam
mov
jb
ljmp
negl
mov
cs
nop
test
pushf
mov
and
jnp
xor
jle
ljmp
sub
bound
xlat
adc
jo
dec
pop
sti
adc
push
popf
addr16
call
push
lahf
notb
mov
push
mov
mov
push
push
orl
fisttps
addr16
sbb
incl
cmp
ret
sub
in
cmpb
hlt
and
inc
dec
pop
addl
inc
les
dec
push
pusha
movsl
mov
push
xchg
cmc
cld
hlt
out
out
movsl
lds
js
int
aaa
jne
loop
jmp
jne
fmul
jnp
xor
int3
sbb
mov
insb
mull
and
xor
incl
in
scas
sub
insl
in
xchg
push
mov
or
xchg
test
cmp
inc
jns
out
out
cmp
repnz
cli
out
push
push
lahf
pushf
pop
ss
call
xor
fucom
rcll
jns
dec
std
out
fcoml
in
cmpsl
cwtl
mov
int
lock
call
sarl
push
inc
push
mov
out
inc
pop
push
sbb
xor
bswap
push
std
push
inc
xchg
add
in
inc
jle
scas
add
aas
mov
out
inc
and
add
jae
imul
add
adc
jl
add
adc
lods
cld
jmp
jns
call
and
cmp
push
push
aas
xchg
sbb
dec
adc
adc
into
dec
dec
sbb
lcall
inc
hlt
inc
fcomps
insb
add
aaa
inc
dec
and
insb
mov
jle
dec
sbb
fiaddl
xor
lcall
adcl
pop
xor
xchg
fwait
xor
negl
into
push
mov
pop
xor
lcall
setp
pushf
lret
sub
mov
cmp
lock
or
ja
in
adc
inc
fcmove
fimuls
scas
sub
cmp
fisttpl
or
xchg
jl
popa
jle
call
cld
fstl
jae
in
pop
shlb
jne
mov
lret
push
and
loope
icebp
dec
call
lcall
mov
adc
add
sti
dec
fcmovne
mov
mov
adc
and
pushl
out
push
mov
inc
scas
or
xchg
pop
mov
or
in
cmp
decl
mov
or
dec
xchg
int3
int3
inc
push
adc
push
mov
std
lods
mov
and
xchg
test
pop
dec
fsubs
fwait
xchg
push
sbb
inc
add
inc
xchg
test
decl
add
lret
add
dec
scas
nop
and
repnz
hlt
jb
lcall
sbbl
jmp
xor
fiadds
dec
adc
mov
add
dec
mov
call
push
mov
inc
shl
mov
cld
mov
rcr
inc
jmp
js
js
dec
xor
popa
lock
imul
into
mov
daa
push
imull
movb
repnz
cmpsb
dec
jo
jmp
arpl
inc
pop
push
jp
aad
dec
aas
xchg
jno
sbb
mov
push
jmp
jnp
push
or
int
sbb
jmp
mov
addr16
inc
je
pop
xor
lcall
push
lret
lret
mov
push
movsl
inc
or
add
insb
stos
cwtl
adcb
js
cmp
dec
leave
loop
popf
mov
jle
mov
hlt
fimuls
insb
mov
call
roll
add
test
arpl
xchg
insb
cmp
movsl
into
push
loope
ud0
push
inc
lret
test
mov
push
mov
lods
mov
fnstsw
xchg
inc
ret
push
xlat
js
jno
mov
lret
movb
sbb
inc
adc
in
push
test
adc
and
lods
push
jl
xor
fnstenv
ficoml
jl
mov
push
xlat
loopne
xchg
push
dec
sub
push
sbb
decl
or
imul
mov
cwtl
mov
movsb
shr
stc
push
or
cmp
mov
sbb
sub
scas
orb
push
lock
std
call
hlt
adc
aad
and
cmpsl
neg
push
in
sti
aam
jge
ja
scas
push
cmp
mov
inc
jb
mov
fcomps
fs
and
pop
jmp
in
mov
into
and
cli
push
jmp
repnz
pusha
imul
or
pop
add
push
jmp
popa
mov
incl
repz
lcall
out
jp
xchg
push
and
das
ljmp
xchg
ljmp
cmc
mov
jo
lret
and
in
inc
bswap
stos
movsb
sub
jne
shr
jecxz
push
cld
sbb
mov
inc
in
call
rorl
cmp
rorl
call
orb
fsubp
cmp
push
fadd
or
dec
cmpsb
insl
movsb
push
shl
mov
push
cmp
xor
push
or
dec
or
fistps
lret
push
xchg
pop
stos
push
dec
jmp
bound
lea
fisttpll
jecxz
jbe
xchg
in
movsb
sbb
sbb
ljmp
mov
fwait
out
cld
icebp
cmpb
call
out
std
xorb
push
in
jge
jo
imul
enter
mov
fbstp
mov
mov
clc
mov
scas
ds
pop
ror
testl
and
pop
or
mov
call
lret
inc
mov
pushf
lret
loop
data16
lcall
mov
decl
add
shrb
shrb
inc
pop
dec
add
enter
mov
jmp
adc
mov
ret
loope
sub
mov
or
xor
mov
decl
push
xchg
adc
push
mov
insb
scas
mov
jbe
cld
jne
loop
ljmp
aas
sbb
lea
arpl
cmp
mov
idivl
xchg
mov
les
cmc
out
pushl
iret
mov
jb,pn
and
inc
cli
push
mov
xchg
push
jp
mov
and
push
jp
cmpsb
aam
loope
fxam
jae
test
add
xchg
fiaddl
inc
pop
daa
adc
mov
pusha
imul
int3
or
adc
popf
movsb
add
addl
cltd
adc
std
cs
sub
and
dec
cld
mov
popw
jmp
mov
call
incl
fcos
jecxz
adc
lods
fadd
adc
mov
lret
fildll
or
incl
out
mov
stos
and
adc
cmp
mov
outsl
sbb
inc
dec
jmp
adc
jle
fisubs
mov
adc
mov
sbb
imul
divb
sub
mov
mov
repnz
jg
fwait
or
jmp
mov
sbb
jmp
push
inc
cltd
cmp
push
shlb
pop
pop
xchg
ss
inc
mov
mov
jecxz
addb
pop
inc
mov
cmp
push
pop
hlt
pusha
sub
mov
mov
incl
mov
xchg
scas
ret
cmc
inc
mov
push
shl
lcall
ljmp
insl
rcrl
cli
dec
push
mov
add
and
data16
lret
scas
push
xchg
fimuls
pushl
stos
test
daa
sub
sahf
es
loopne
cltd
xlat
push
leave
mov
mov
dec
lret
jecxz
imul
mov
push
daa
xchg
fnsave
xchg
sub
das
xchg
pop
inc
adc
mov
decl
pop
push
xchg
out
in
jecxz
test
fs
pop
fucomp
mov
pop
mov
lcall
insl
lret
pop
ror
outsb
jle
mov
aaa
in
lds
paddb
jmp
sbb
mov
jmp
jp
push
pop
sbb
cmpsl
mov
rorb
adc
inc
ja
inc
ret
dec
daa
test
arpl
push
sbb
xorb
inc
pop
pop
sbb
inc
nop
lods
pop
ret
xor
sarl
iret
ljmp
mov
je
jae
fnstenv
out
adc
dec
xchg
jle
in
iret
xor
dec
inc
popa
les
xor
mov
jae
lcall
pop
dec
pushf
iret
out
and
rcll
push
mov
mov
ja
pop
sub
or
lock
jmp
adc
xchg
pushf
xchg
push
dec
adc
loope
mov
mov
or
or
into
popa
lea
leave
xchg
call
cmpb
adc
daa
out
aad
call
fwait
pop
outsb
xor
stos
incl
subl
mov
mov
repnz
or
pop
xchg
mov
ss
incl
loop
arpl
stc
sahf
subb
sbb
jae
sub
cmp
push
stos
jg
imul
adc
xlat
mov
iret
cmpsl
gs
lret
addb
call
and
scas
jae
mov
lods
pop
jmp
adc
push
cmc
lahf
push
add
jmp
mov
cmpsb
dec
dec
dec
dec
scas
test
shlb
movsl
mov
shlb
cmpsl
dec
aad
decl
aam
adc
push
loopne
jmp
addl
mov
jecxz
inc
sbb
xchg
dec
jge
cmp
incb
sbb
or
rolb
inc
rorb
jmp
repz
out
sbb
call
les
mov
in
adc
jmp
js
adc
jge
mov
std
loopne
icebp
in
dec
lea
mov
aad
inc
xor
mov
ljmp
out
sbb
or
ss
mov
dec
and
incl
lock
pop
push
or
aam
jb
jle
jp
jmp
dec
das
or
add
jmp
out
outsb
jbe
dec
fadd
fs
sub
sub
mov
lcall
lcall
std
out
lahf
mov
cwtl
test
cmc
mov
add
adc
dec
sbbl
arpl
push
es
ljmp
mov
and
mov
nop
lcall
or
and
fs
xor
incl
mov
and
mov
and
loope
pop
sub
mov
jno
inc
dec
imul
jmp
test
xchg
sub
pop
rclb
add
out
sbbb
pop
lahf
jae
incl
pop
rcrb
inc
shrl
sahf
jp
lods
lahf
ds
pop
push
out
movsl
loope
int
and
cltd
int3
cwtl
and
repnz
test
mov
push
shlb
adcb
loop
leave
mov
call
lret
xorl
ret
lods
sub
fildl
dec
dec
mov
jle
jo
cmp
sbb
call
popa
popa
and
mov
ret
ljmp
jmp
sub
scas
lcall
outsb
test
jne
cltd
scas
lret
in
bound
xor
pop
repz
and
in
leave
push
add
loope
inc
or
jbe
test
adc
and
lret
jp
lcall
stc
adc
ret
mov
aam
ss
mov
mov
push
popf
pop
data16
decl
xor
jle
repz
sub
pusha
pop
rcrb
popa
or
int3
mov
incl
lea
jge
pusha
dec
out
xchg
cs
adc
push
nop
inc
and
pushl
cmpsb
inc
jmp
xor
pushf
mov
imul
or
xchg
in
call
dec
mov
pcmpeqd
dec
cmc
mov
pop
and
sbb
adc
inc
arpl
dec
or
pushl
rcr
lds
mov
lcall
xchg
jl
dec
add
mov
ljmp
and
rep
jo
mov
push
cmp
xchg
adc
jnp
data16
ret
mov
mov
sti
push
xor
and
inc
dec
push
lret
cmc
xchg
fwait
xor
aaa
aam
push
incl
pop
cmp
mov
out
jo
xchg
out
cmp
xor
jmp
inc
into
ret
pop
rorl
ja
sbb
mov
call
lods
lahf
jle
out
fists
shlb
mov
pop
lahf
aam
cmp
dec
loope
adc
stc
sub
pop
add
into
sbb
icebp
jmp
dec
fbstp
push
jns
fs
pop
cmpsl
push
pop
sti
pop
loop
call
mov
scas
cmp
add
ja
imul
push
in
out
pushl
xor
rolb
and
mov
loop
sub
and
mov
dec
cmp
je
jecxz
pushf
inc
xchg
cld
pop
mov
sub
pop
or
push
add
jg
idivl
push
push
sbb
int
dec
and
fcomps
imul
jp
cmpsb
push
dec
xor
jnp
lret
xchg
xor
test
xor
jno
lcall
icebp
out
mov
decl
jmp
repz
push
pop
ror
pop
das
mov
jmp
ret
and
cs
and
decl
xchg
dec
cmp
pop
repz
popf
pop
jecxz,pn
cmpb
outsl
ljmp
fs
js
orb
mov
mov
mov
pop
mov
push
data16
test
test
pushl
fucom
aad
aas
mov
push
test
xor
out
or
mov
inc
push
daa
es
push
mov
pop
inc
cmp
push
dec
pop
movl
in
pop
addb
in
mov
cmp
dec
incb
add
andb
inc
dec
enter
out
cmp
jmp
jns
or
bnd
jb
leave
push
ret
fs
repnz
repnz
xorb
rorb
ds
pop
outsb
jnp
add
dec
lret
loop
jne
pushf
cmc
sub
cmp
push
repnz
mov
jg
mov
pop
out
mov
mov
push
jne
int
mov
push
push
sbb
incl
dec
pop
mov
cwtl
or
xor
xlat
loopne
ss
add
add
lcall
pushl
jne
push
inc
mov
mov
movsb
ficomps
push
stos
add
or
cmp
jmp
jmp
sahf
push
frstor
roll
lret
sarb
inc
loop
xchg
loopne
xchg
fucompp
mov
push
push
sahf
jmp
int3
sbbb
sbb
push
stos
fsubrl
push
lcall
lock
stos
dec
outsb
or
inc
mov
insl
adc
adc
dec
pop
es
or
lods
dec
incl
xlat
ds
lret
adc
cltd
sub
ljmp
vsubss
ljmp
das
mov
xchg
outsb
adc
out
lods
and
dec
dec
ds
push
int3
dec
lret
lcall
ret
pop
je
mov
jns
lret
mov
inc
lods
movsl
popf
addl
mov
adc
in
rol
cmp
ret
mov
jns
mulb
lcall
jb
dec
test
add
jecxz
pop
mov
sub
mov
mov
out
mov
pushl
mov
pushf
cwtl
sub
lods
lret
lahf
imulb
cltd
adc
inc
mov
ret
jmp
pusha
jl
dec
popf
add
shrb
cwtl
or
repz
es
test
repnz
pop
lcall
stos
adc
shl
fdivrs
pop
shlb
into
lcall
icebp
fildll
or
pushl
jae
mov
test
ds
repnz
xor
adc
fstpl
icebp
mov
sub
je
add
dec
shlb
and
repnz
mov
push
jmp
cmp
sub
movsb
sti
jmp
orb
fs
movsb
fiaddl
dec
sbb
ljmp
sti
dec
push
dec
pusha
sbb
and
outsl
rcrb
cltd
jl
mov
cld
ljmp
loopne
in
push
sbb
sub
add
mov
in
pop
jae
sar
clc
ja
mov
cmc
popf
test
ret
xor
ret
mulb
shr
push
pusha
fsubl
decl
add
mov
jnp
xor
in
jecxz
push
out
lahf
jbe
fdivs
pushl
sub
aas
decl
divl
icebp
cmc
push
mov
xchg
pop
cmpl
mov
mov
sti
mov
outsb
nop
mov
es
ja
pop
jo
jo
adc
incl
iret
push
mov
adc
lret
hlt
cmc
bound
push
lea
adc
lahf
push
jp
cmp
jmp
xor
mov
mov
lret
shlb
lods
pop
add
pushf
in
mov
dec
xchg
call
sub
jne
add
stos
push
int
mov
fildll
repnz
test
lahf
in
out
insl
lcall
hlt
ss
xchg
jbe
adc
mov
loope
rorb
push
repz
icebp
mov
lea
incl
sbb
int
jmp
mov
adc
inc
add
cmpl
decl
mov
jge
push
fmull
mov
stc
adc
int
xchg
repz
lcall
test
movsb
xchg
fistpll
cwtl
mov
lock
fistpl
ret
jmp
sub
push
mov
inc
jl
or
mov
repnz
xchg
bound
ljmp
scas
aam
fwait
cmp
in
clc
mov
jp
push
fnstsw
lcall
je
incl
daa
mov
std
inc
in
iret
xchg
js
mov
in
fistpl
aam
mov
scas
scas
ljmp
mov
out
jnp
mov
lea
jle,pt
mov
test
pushf
pop
test
cmp
mov
lret
mov
sbb
fwait
xchg
jmp
mov
xchg
arpl
call
loope
push
lds
mov
xor
pop
mov
sar
call
xor
or
or
test
dec
test
inc
cmp
decl
ljmp
in
add
outsl
mov
mov
mov
sub
rolb
decl
aad
pushf
mov
mov
cmp
mov
push
mov
mov
stos
scas
lcall
push
ss
dec
sbb
sub
inc
push
test
call
adc
fidivrs
push
ret
sbb
pop
sbb
sar
cmpsl
popf
test
xor
mov
lods
mov
scas
cmp
sub
jl
ret
aad
cwtl
outsb
test
sub
ss
incl
cmp
out
jne
xlat
in
aad
mov
mov
push
mov
jno
andb
lcall
hlt
or
outsl
pop
ja
add
les
jae
out
outsb
inc
aas
fimuls
addr16
call
inc
popf
stos
adc
loopne
add
sbb
pusha
inc
add
fs
je
jmp
or
pop
sub
mov
xchg
cmc
jnp
sub
mov
adc
insb
aas
outsb
and
push
sti
les
ja
lret
je
fcmovbe
xor
les
in
add
ljmp
add
inc
push
pop
enter
sub
lcall
sub
and
sbb
jl
jmp
flds
int3
push
sub
sub
lcall
incl
jnp
mov
sub
cmp
jbe
stos
push
shll
mov
jne
add
lcall
mov
cmpsl
adc
cmc
in
pop
rclb
add
mov
inc
push
int3
sbb
sahf
add
pop
jb
push
sbb
leave
jle
sub
adc
fnsave
push
cmp
jmp
add
stos
popf
jp
nop
sub
mov
dec
scas
mov
pop
push
roll
sbb
pop
lcall
sub
pushl
test
dec
xchg
xchg
test
jg
or
and
decb
or
xor
push
push
aad
mov
scas
and
push
gs
xchg
out
or
xor
test
cmp
fdiv
ret
dec
mov
movl
xchg
sub
cs
mov
test
lcall
mov
loope
inc
or
xchg
mov
sbb
lcall
int
push
add
mov
adc
stc
cmp
orl
mov
lods
xchg
aas
add
scas
repz
ljmp
int
xchg
repz
popf
mov
clc
xchg
je
pop
mov
pusha
loope
mov
incl
mov
jl
xor
fwait
push
aas
inc
push
xchg
cmp
push
or
dec
xchg
decl
mov
rol
cmpsb
loope
dec
mov
les
sub
movsl
sti
fs
pop
pushl
rorb
fisubs
pop
clc
jne
fdivp
cs
imul
inc
push
roll
incl
out
sub
fs
or
xchg
mov
fldenv
jns
lock
rclb
jle
lcall
adc
mov
ds
push
dec
mov
loope
adc
pop
inc
call
push
cltd
and
jl
flds
js
xchg
in
int3
xchg
xchg
xchg
lea
xor
repnz
sub
jmp
insb
fstl
int
inc
cli
popa
mov
les
fcoml
inc
lock
fnstsw
hlt
test
aam
clc
fists
movb
and
pushf
aaa
int3
ficomps
std
sub
cmp
call
outsb
scas
sub
add
mov
mov
mov
pop
mov
fwait
xchg
or
cmp
pop
mov
or
dec
in
fldl
pop
push
int
outsl
mov
push
int3
and
decl
test
imul
dec
or
int3
jae
fisubs
add
mov
out
cmpsl
mov
mov
or
xchg
fisubrl
enter
call
clc
mov
adc
mov
dec
pop
adc
out
jp
popf
orb
adc
dec
add
decl
sbb
loopne
sub
scas
rcll
inc
stos
fldt
sarl
dec
dec
push
push
lcall
push
push
pop
sti
mov
mov
in
sahf
inc
std
scas
ds
pop
sub
jmp
cmp
das
lret
ja
adc
fistpll
ss
jge
dec
xor
sbb
incl
arpl
mov
push
jbe
add
inc
ret
movsb
xchg
sub
out
mov
test
incl
decb
push
mov
jmp
cs
or
test
xor
dec
sub
das
pop
rol
push
xor
push
ljmp
fs
jns
or
insl
arpl
sbb
adc
mov
inc
mov
or
aam
adc
or
mov
insb
ret
jb
jl
icebp
add
decl
push
adc
leave
popf
les
pop
push
sti
mov
int3
mov
mov
cmpsb
mov
cli
sub
xchg
dec
daa
jo,pt
mov
dec
aas
cmp
xchg
mov
add
fdivr
mov
cmc
shr
stc
in
lcall
cmp
xchg
imul
cltd
add
push
xchg
aam
mov
and
cltd
push
fdivr
add
add
inc
xor
out
call
jg
inc
and
outsb
popa
gs
fbld
incl
inc
jae
or
pop
iret
cmp
inc
pop
jno
dec
aaa
and
call
and
mov
int
cmp
stos
xorl
repz
pushf
xchg
loop
out
push
filds
movsl
sbb
mov
shl
jmp
pop
lods
jae
cs
pop
or
call
push
pushf
and
shll
adc
jle
jmp
cmpsb
loope
inc
jnp
adc
decl
inc
pusha
loop
xchg
movsb
pop
jns
popl
cmp
aam
adc
or
pushl
lret
mov
push
hlt
sbb
js
cmp
pop
cmp
cmp
xor
mov
ljmp
pop
push
into
ds
xorb
inc
add
mov
jp
les
mov
call
pop
stc
and
call
cs
in
add
dec
popa
push
and
call
stc
sarb
push
pop
or
sbb
xchg
in
sbb
scas
mov
cmp
ljmp
and
sbb
loopne
rcrb
mov
xchg
in
or
gs
jg
pop
and
incl
and
retw
mov
sub
adc
sub
inc
mov
inc
bswap
jecxz
call
xchg
mov
push
shll
dec
adc
xor
cmp
mov
ds
in
mov
ret
jns
and
dec
insb
lods
dec
rclb
push
enter
addr16
adc
mov
mulb
fwait
call
sbb
pop
inc
mov
leave
add
mov
fstl
add
mov
ret
mov
ljmp
bound
in
mov
sbb
xlat
in
sbb
ret
cmp
cs
incl
xchg
iret
mov
mov
mov
insb
dec
sub
dec
dec
push
jmp
aad
lcall
pusha
das
adc
cmp
popa
je
cmp
cmp
mov
subl
pushl
loopne
push
dec
push
dec
clc
cmp
or
test
mov
push
sbb
ljmp
dec
js
enter
pop
cmp
pop
mov
mov
add
test
xor
mov
jmp
jo
xor
cmpsl
out
and
rolb
clc
mov
add
mov
fisubl
pop
sbb
pop
xchg
mov
mov
sarb
lahf
xchg
insl
fwait
jl
in
out
roll
fldcw
popf
dec
xchg
loope
ljmp
mov
popl
icebp
sub
ljmp
lret
aad
fnstsw
mov
cwtl
pop
push
xchg
pop
mov
stc
push
cs
imul
les
decl
mov
mov
nop
xchg
stc
or
and
jbe
cmp
fldt
push
test
xchg
loopne
cld
cmp
loop
ja
inc
jbe
mov
or
xchg
xlat
xor
decl
out
add
lahf
imulb
ficoms
push
add
add
pushl
pop
out
pushf
in
icebp
rcrb
fwait
xor
divps
insb
sbb
add
xchg
pop
ljmp
fs
mov
adc
pop
movb
mov
int3
inc
cmc
push
out
sbb
andb
sub
lret
in
outsl
mov
dec
push
sbb
mov
clc
hlt
and
scas
push
xchg
testb
push
lahf
push
inc
push
adc
pop
adc
lcall
sub
pushf
inc
adcb
jno
jecxz
sub
cwtl
push
in
inc
inc
pop
negb
cmp
jp
adc
jge
push
mov
sub
gs
test
decl
mov
mov
out
push
mov
pop
dec
inc
add
int3
mov
cmpsl
adc
or
decl
pop
cmp
cli
pop
rcrb
mov
je
lds
mov
mov
leave
loop
jmp
mov
dec
xorb
repz
cltd
or
sbb
mov
in
ret
jg
lcall
repnz
addb
push
xlat
or
dec
aam
ret
insl
push
ret
jo
int
mov
ffree
repz
jne
or
paddb
int3
or
nop
daa
xchg
inc
jmp
sahf
ja
xchg
sti
dec
iret
pop
or
mov
cmp
xchg
xlat
sbb
pushl
dec
ds
or
jmp
scas
mov
mov
lret
and
xchg
xchg
xchg
mov
xchg
mov
ljmp
aas
add
neg
inc
dec
popf
add
inc
fidivrs
jle
cmp
ljmp
out
fcoms
loop
sbb
mov
xor
and
rcl
imul
sub
imull
sahf
xchg
dec
lods
jecxz
push
xor
decb
mov
pop
arpl
movsb
shrb
inc
pop
add
enter
call
xchg
notb
loop
dec
mov
or
in
push
inc
mov
sub
mov
mov
jno
out
lods
test
rorl
decl
hlt
adc
inc
mov
inc
int3
mov
mov
insb
jp
mov
pushl
or
mov
dec
mov
push
inc
sbb
mov
mov
lahf
out
push
cmp
imul
push
cmc
decl
dec
pop
jge
or
pop
fwait
lahf
cmp
aas
jp
je
test
adc
mov
sar
decl
jg
jp
jne
outsl
add
sub
jb
imul
popa
mov
pop
and
ljmp
cmp
and
mov
stos
cmp
mov
mov
pushl
test
jmp
dec
dec
mov
fimuls
jae
rclb
outsb
rclb
iret
iret
xchg
sbb
ud0
decl
xchg
xchg
pusha
mov
add
xor
adc
iret
add
push
mov
cs
int3
and
jbe
mov
hlt
sbb
loope
in
mov
pop
pop
and
push
or
call
imul
add
xchg
mov
mov
popa
lret
mov
xchg
in
xor
jmp
scas
imul
getsec
xlat
in
pushf
sbb
mull
adc
call
jae
cmp
out
lcall
les
in
cmpb
adc
sub
sbbb
lods
xor
insl
decl
ret
call
pushf
mov
pushf
mov
pop
xlat
jae
andl
out
les
jg
pop
sub
testb
not
scas
loop
xchg
enter
and
clc
push
mov
mov
dec
incl
mov
inc
cmp
enter
mov
shlb
outsl
mov
mov
pushl
sbb
ds
pushl
mov
jmp
loope
loop
xor
mov
cmp
mov
ret
lods
jnp
shlb
pop
mov
arpl
xor
out
insb
pop
incl
cwtl
xchg
cmp
sbb
fbstp
ficoml
jne
lret
aas
sahf
ret
xchg
and
pushl
out
and
xchg
imul
adc
out
fwait
fwait
rcl
imul
dec
arpl
jmp
filds
pop
pop
out
loope
push
div
pop
lahf
mov
push
mov
push
outsl
mov
decl
cwtl
xor
das
mov
test
test
jne
cld
jo
lock
fdivrs
insl
dec
pop
xchg
pop
stos
mov
sub
sub
dec
and
push
sbb
sbbb
adc
jp
pop
dec
cmp
stc
pusha
push
and
inc
pop
lcall
leave
jmp
xor
xchg
mov
xchg
cld
addr16
decl
inc
push
cmp
or
idiv
and
jmp
add
lds
cmpsl
movsl
dec
cmpsl
adc
add
cli
mov
jns
jg
fnstenv
fwait
and
jl
stos
xchg
mov
jg
mov
sbb
or
pushl
int3
mov
rcl
push
pop
add
scas
mov
sti
jmp
pushf
or
scas
inc
add
lcall
pop
mov
mulb
pop
test
add
popa
in
push
cwtl
sbb
call
push
add
roll
xor
aad
pop
cltd
or
mov
jnp
sub
js
cmp
out
jge
mov
xchg
lahf
pop
cmpsb
push
in
dec
pop
idiv
andb
incl
out
scas
add
dec
sub
aam
mov
cmpsl
rcrb
mov
jle
nop
lock
loope
call
addr16
jbe
cs
out
lret
add
movsl
rclb
jecxz
lcall
mov
cmpl
and
sti
or
mov
xchg
les
out
sbb
sbb
shll
jmp
mov
je
mov
add
es
sbb
cmpsb
js
sub
cmp
sub
cld
xor
inc
xchg
jno
movsl
popf
js
xchg
lods
sbb
cmp
xchg
incl
jnp
push
stos
cld
shl
call
xor
jb
stos
mov
fwait
ds
decl
dec
add
inc
int3
mov
inc
arpl
add
cmc
mov
pop
rorb
inc
add
xchg
mov
adc
push
lcall
mov
or
inc
cmp
lcall
enter
in
or
fsubrl
fdivrl
rorl
xor
je
jb
jmp
ljmp
cmp
cvtdq2ps
test
pusha
push
dec
dec
add
pop
cmp
mov
shll
fstpl
mov
out
scas
sahf
or
xor
movsl
lods
stos
mov
add
fldenv
pushl
sahf
add
lock
sbb
subl
rcll
inc
and
mov
lods
ljmp
repz
mov
insb
rcll
arpl
adc
mov
inc
pushl
movb
hlt
lret
das
dec
sbb
lcall
loopne
gs
movsb
xchg
sub
dec
dec
roll
fimuls
mov
inc
add
add
xchg
aas
jo
repnz
xor
sub
lcall
dec
cmc
test
xor
jmp
rcrb
in
sub
jb
insl
addr16
int3
jns
jle
and
ljmp
bound
mov
mov
or
cld
outsl
jb
cmovae
cmpb
call
xchg
cmpl
pop
fdiv
xchg
mov
outsl
xor
jmp
or
popa
sub
push
ret
lcall
push
ljmp
loopne
cmp
mov
sbb
or
loope
jmp
lret
pushf
dec
add
rorl
mov
push
pop
cmp
mov
push
call
mov
mov
dec
or
rcrl
jmp
ljmp
scas
popa
test
aam
push
bound
ja
sub
out
jbe
loop
sti
mov
push
dec
jl
mov
push
mov
lahf
mov
pop
loop
pop
push
ljmp
add
xchg
in
loop
push
inc
lds
call
test
call
add
hlt
jns
es
push
daa
lock
cmp
push
rolb
call
mov
js
adc
pop
nop
addb
dec
pop
out
mov
jl
dec
popa
jns
lcall
inc
mov
gs
aam
add
nop
iret
push
in
add
idiv
ljmp
xor
in
clc
mov
or
cmp
imul
mov
lret
mov
ljmp
pop
pop
ss
sbb
xchg
inc
shll
sti
add
cmp
dec
aam
inc
xor
xchg
loope
and
jle
push
test
test
cs
test
lret
inc
int
movb
lock
cmpsb
xor
movsb
stos
sbb
mov
push
sbbb
ljmp
fidivrl
inc
add
je
xor
shll
pushl
jmp
into
dec
mov
cs
outsb
std
pop
xor
push
lods
pop
rcll
pushf
fidivl
clc
pop
jbe
xchg
fisttpl
ss
xor
loope
ds
xchg
incl
xchg
int
insl
add
out
cmp
mov
and
subl
ljmp
daa
rorl
ficomps
dec
mov
add
pop
cmpsb
stos
leave
lret
mov
cs
dec
pusha
out
out
insb
dec
ja
sbbl
inc
int3
mov
mov
stc
das
les
lcall
insb
jecxz
data16
hlt
std
inc
and
jne
cmp
xchg
mov
subb
ror
push
jmp
lea
jecxz
fisttps
lods
stos
or
and
xor
xchg
xchg
ljmp
cmp
mov
xlat
ret
inc
mov
or
loopne
incl
push
pop
pushf
fidivl
push
xor
decb
cmp
int3
xchg
mov
dec
lcall
mov
bound
ret
shlb
insb
xor
cmp
sub
shll
ljmp
sbb
rcl
jl
jae
cli
mov
dec
add
push
adc
or
adc
sti
fsts
cmc
gs
xchg
iret
lea
mov
lret
imul
shrb
incl
movsb
enter
adc
mov
lea
pop
repnz
sti
imul
cs
jne
sahf
fwait
jle
jp
je
jno
fs
jle
movsb
inc
inc
movsl
or
sbb
cmc
imul
decl
stos
xor
sbb
test
dec
fidivrl
mov
scas
jle
idiv
lcall
int
add
cld
mov
sbb
mov
xchg
cmp
jg
push
add
xor
dec
decl
add
jg
cltd
into
jno
cs
stc
ss
test
jnp
mov
sub
inc
sbb
ds
push
mov
jle
add
les
in
xorl
mov
gs
sbb
push
mov
and
inc
int3
rolb
and
jbe
and
ret
push
or
push
cmpsb
pop
test
dec
or
test
mov
aad
and
add
push
lahf
cli
cmc
add
and
ljmp
daa
lds
cwtl
mov
out
dec
add
rcrb
jo
es
mov
lods
dec
lods
dec
mov
addb
cli
fiaddl
addb
inc
enter
je
cli
mov
sub
or
ds
decl
enter
aaa
fadds
jecxz
enter
out
fsubl
mov
mov
add
pushl
mov
shll
add
movsl
cmpsl
sub
add
sbb
push
lcall
incl
jp
pop
lahf
push
icebp
movsl
clc
cmpsb
movsb
jecxz
sbbl
mov
in
jno
and
stos
push
push
out
jmp
mov
out
div
xorb
cli
mov
mul
jnp
mov
mov
cmp
call
fstpl
mov
mov
fistps
or
cwtl
loope
das
insl
jbe
int
xlat
and
cmp
adc
mov
mov
bnd
cmp
ljmp
mov
mov
in
hlt
cmp
daa
imul
cmp
sub
rcl
movsl
push
sti
sub
call
loopne
dec
sbb
or
sub
xchg
mov
pop
push
nop
jmp
mov
xlat
incl
addl
jp
lret
or
or
adc
in
loop
xor
mov
std
test
lret
sahf
icebp
loopne
add
in
mov
xchg
cmp
iret
or
mov
xchg
jae
lcall
rcr
mov
cmp
cmp
pop
das
stc
push
lods
and
mov
out
adc
xor
sub
ljmp
jle
xchg
cs
add
adc
jmp
mov
fidivs
or
lods
jge
jp
xchg
push
sahf
cmp
cmp
xchg
negb
cmp
fs
dec
xchg
lods
dec
add
jl
test
adc
adc
cli
je
shrb
sub
data16
mov
cltd
mov
lcall
lods
jbe
insl
aad
in
push
sbb
hlt
das
inc
das
add
sub
iret
leave
std
call
shrl
or
lods
sub
outsl
scas
pop
jl
push
jmp
pop
cmp
sbb
call
jmp
in
mov
fs
add
cmc
mov
pushf
decb
jne
lds
fwait
cltd
stos
pushl
xchg
lret
movsl
fs
out
movsl
or
clc
dec
sti
das
test
jbe
mov
js
dec
adc
pushl
in
testl
mov
sbb
mov
repnz
or
xchg
testb
mov
pop
hlt
jmp
inc
je
fists
shl
push
imul
xlat
das
repnz
call
aaa
pop
adc
jle
scas
lods
data16
or
pop
subl
nop
sub
lcall
ja
jbe
dec
out
jle
out
sbb
mov
imul
ja
fdivr
jmp
ljmp
dec
dec
bound
xchg
dec
cld
movsl
imul
subl
aaa
ljmp
pop
fwait
sbb
jecxz
sbbl
inc
xchg
mov
dec
sti
mov
xor
add
jmp
mov
sbb
cltd
add
xchg
cld
test
pop
rorw
xchg
insb
sub
arpl
lds
incl
loop
or
xchg
xor
jg
sub
cmc
sti
push
push
mov
daa
sbb
sub
push
push
outsl
push
dec
jnp
loop
imul
xor
out
xor
shlb
and
call
xchg
xchg
movsl
sbb
hlt
lods
leave
xor
and
xor
inc
mov
lcall
orb
sub
mov
xchg
sub
cwtl
mov
sub
in
cmp
push
mov
stc
mov
inc
xchg
imul
sub
mov
aam
shrl
jle
xchg
cmpsb
mov
mov
jle
mov
xchg
lret
xchg
mov
pop
mov
mov
in
xchg
dec
int3
or
decl
jecxz
scas
es
cmp
es
ljmp
mov
incl
rorl
jmp
xor
dec
test
cld
out
popf
jno
and
push
jns
inc
add
inc
les
pusha
pushl
sarb
mov
jecxz
push
inc
imul
mov
call
loope
das
mov
subl
cmc
mov
cmp
sbb
cmp
jmp
std
popf
int
int
addr16
pop
cmp
ret
movsb
aam
arpl
sbb
imul
shr
sub
call
pop
mov
add
push
out
xchg
stos
xor
lret
or
inc
and
ret
jo
pop
and
scas
ficomps
cmp
or
movsl
bnd
roll
andl
cmp
addr16
mov
sub
push
add
insb
std
jno
out
nop
loop
pusha
pop
jp
mov
push
jmp
lahf
xchg
push
pop
xlat
xor
jbe
popa
cmp
pop
pop
push
dec
adc
clc
inc
jno
mov
sub
shl
inc
stc
sbb
and
lret
scas
popf
and
addl
lcall
fists
or
lcall
jb
mov
hlt
mov
in
std
xor
dec
xchg
decl
push
scas
inc
lret
jge
cmc
xor
add
inc
fildll
pop
and
fidivs
jnp
insl
pusha
jecxz
out
gs
xor
cmp
cmpl
fidivrl
incl
push
cmp
jnp
sbb
dec
lahf
push
leave
orl
insl
mov
cmp
decl
xor
lcall
xchg
inc
jae
jg
mov
xchg
pop
stc
lods
je
jmp
mov
popf
data16
ljmp
lahf
cwtl
push
stos
insl
rclb
lcall
dec
sub
dec
repz
imul
jo
negb
sub
pop
push
push
clc
push
mov
ja
jmp
add
rorl
in
fidivrs
adc
pop
mov
jmp
cltd
mov
jg
mov
rorl
xchg
dec
or
xlat
mov
jmp
cli
pop
test
cli
in
aad
clc
mov
add
inc
cmp
pop
mov
jmp
stos
sbb
dec
cmp
add
leave
repz
jb
mov
loopne
mov
mov
jmp
dec
mov
in
add
push
dec
mov
repnz
mov
lret
lcall
push
pop
mov
inc
nop
inc
andl
xor
cmpl
mov
fsubl
mov
xor
jns
test
sbb
push
scas
pop
lcall
test
mov
decl
sbb
imul
xchg
lods
nop
mov
addr16
mov
das
xor
dec
xchg
das
or
ljmp
in
rcr
hlt
xchg
pop
aas
xor
pop
fwait
lahf
cmpsb
mov
mov
jnp
iret
jno
lcall
decl
sub
ljmp
sbb
add
stc
xor
hlt
pop
push
rorl
decl
dec
les
test
adcl
inc
out
xchg
inc
lea
repz
cmc
add
inc
in
aaa
dec
or
pop
aad
repz
sti
out
pop
aas
aaa
inc
mov
cmp
sar
jmp
rclb
sbbl
adc
enter
push
into
sbb
repz
mov
sub
inc
add
movsl
cmpsb
imul
cmp
loop
sbb
cmp
outsb
lock
mov
pushl
adc
js,pt
cwtl
mov
mov
outsb
mov
dec
mov
adc
cmc
lcall
mov
sub
mov
cmp
daa
cmpsb
cld
cltd
jne
addr16
imul
ljmp
das
or
cltd
popf
add
mov
sub
stc
testb
test
adc
xor
call
filds
push
mov
mov
mov
inc
adc
pop
daa
jno
cwtl
int
push
jnp
incl
leave
xchg
jo
sbb
jle
les
lods
sub
sahf
pop
jge
cmp
and
pop
push
into
mov
aam
jmp
test
inc
adc
pop
movsb
ljmp
sbb
and
jp
jle
adc
mov
mov
dec
sbb
mov
pop
jnp
repz
lea
pushl
push
lret
lds
pop
push
lds
sbb
lds
ror
into
push
sbb
inc
cmp
jg
lcall
add
cmp
cmp
xor
and
test
mov
ljmp
ficoms
mov
sub
adc
hlt
andb
movsl
pushl
cmpsl
or
iret
or
push
fstl
xor
and
jno
xor
incl
scas
cmp
or
jg
cmc
pop
pop
push
xchg
jb
sahf
sbb
adc
outsl
test
incl
xlat
sub
sbb
or
xchg
int3
ret
inc
mov
outsl
dec
xlat
das
xor
dec
xlat
fmull
jns
xchg
imul
lock
dec
daa
jmp
lret
ficoms
cmp
imul
lcall
inc
aaa
jno
mov
pop
js
push
fcomp
push
sbb
xchg
pop
jp
out
daa
pop
stos
sub
and
into
add
fidivrs
ror
xchg
jne
hlt
popa
fs
in
ljmp
sti
fisubrs
test
sub
add
or
leave
call
pushl
xchg
pop
jmp
inc
ds
loope
jecxz
xchg
push
addr16
dec
call
jp
xchg
jae
into
xor
mov
pop
sbb
sbb
jb
sti
aas
push
dec
cmpl
jmp
sub
loop
xorb
xchg
mov
mov
mov
pop
ret
xor
jge
and
add
das
adc
add
xlat
movsb
jmp
fiaddl
push
roll
mov
ljmp
push
ds
jecxz
or
jne
lcall
jl
icebp
test
xorl
lret
pop
ljmp
ret
add
and
stc
sahf
dec
mov
or
int
pop
jmp
decl
faddl
pop
mov
das
mov
cs
sbbl
dec
jg
test
iret
movsl
adc
dec
mov
out
cmp
dec
dec
or
xor
mov
sbb
into
repnz
xor
lcall
les
push
loop
out
fmull
push
push
jb
jb
bnd
incl
imul
test
mov
xchg
ffree
test
mov
mov
xor
push
pop
mulps
hlt
in
jne
fildll
idiv
rorl
xchg
movsl
cld
sahf
cwtl
xchg
and
addb
cmp
ret
lcall
cmp
movsb
or
inc
mov
xor
jecxz
in
dec
cmp
arpl
add
xor
outsb
cltd
and
subb
adc
pop
outsb
inc
lea
cmp
cltd
xchg
decl
jne
pop
or
xchg
pop
pop
adc
adc
jg
cld
add
push
jg
test
ljmp
mov
sub
inc
jbe
sbb
aam
cmp
mov
movsb
lahf
nop
jmp
out
or
sti
arpl
stos
std
cmpsb
jnp
mov
cltd
or
and
ljmp
lcall
cmc
xchg
pop
lret
lahf
jecxz
mov
js
add
adc
mov
loope
aad
mov
pushl
in
push
jge
pushf
cltd
xchg
adc
pop
inc
test
cmp
imul
test
sbb
imul
lcall
or
fimuls
pop
addr16
pop
dec
adc
jae
loop
ja
clc
jmp
sub
bound
rorb
fcompl
push
stos
and
lods
in
cltd
xor
aad
ljmp
inc
insb
mov
and
not
and
sbb
push
or
addr16
outsb
inc
addl
imul
jp
fcmovbe
jp
jge
fs
push
mov
inc
loope
outsl
incl
push
sub
ljmp
sbb
outsl
inc
int
and
xor
mov
pop
mov
call
fcoms
dec
lods
xor
push
mov
ret
cmp
mov
and
jl
or
inc
push
dec
cmpsl
or
or
pop
xchg
jp
mov
fst
xchg
sbb
push
ljmp
jbe
lods
xor
jno
xchg
mov
in
dec
js
insb
sbb
cld
jno
sub
call
aaa
push
or
mov
and
enter
mov
jnp
xorb
cld
dec
incl
popa
fcoml
pushf
fs
jmp
xor
mov
sub
orb
addl
std
iret
xor
jle
mov
rclb
xchg
ss
sti
lods
scas
mov
imul
and
adc
mov
or
mov
jb
ljmp
lret
iret
daa
add
scas
test
mov
popf
jnp
sahf
jb
push
push
mov
enter
lock
dec
pminsw
jne
fdivrs
push
aas
pop
xchg
sub
arpl
out
jl
push
pop
or
test
cltd
inc
mov
xchg
lock
into
mov
mov
ljmp
pop
dec
push
repnz
sub
mov
cli
fisttpl
cmpsl
pop
mov
call
pop
pop
cmpsl
lea
cmp
xchg
xor
add
lods
jbe
lods
adc
cmp
jmp
mulb
fisubs
jo
lods
lods
stos
pusha
arpl
pop
lock
lret
inc
fs
sub
sub
pushl
mov
nop
inc
movl
pop
mov
add
mov
dec
adc
out
pushl
inc
js
mov
icebp
mov
int
or
mov
add
leave
and
mov
sbb
inc
sbb
sbb
or
or
fwait
imul
scas
xchg
inc
movsb
xchg
fs
lods
pop
push
dec
push
sub
push
push
stc
dec
bound
inc
sbb
dec
out
jb
inc
pop
xchg
sub
and
movsl
sarb
add
jae
xlat
cmp
arpl
dec
aas
cmp
or
lds
push
lahf
lods
aas
push
rcrl
pop
dec
cmp
and
cmp
ljmp
mov
xchg
subb
mov
pop
stos
std
mov
in
push
sub
dec
adc
lock
pushl
loopne
fimuls
adc
pop
push
add
pop
sbb
cmp
ljmp
loopne
add
ja
loop
pusha
lods
rcr
cmp
push
dec
nop
inc
pop
cmc
and
jae
clc
xchg
pop
cmpl
cld
fcoml
lock
jmp
fldln2
pusha
sbb
lea
popa
adc
xor
mov
inc
cmc
insl
aaa
addr16
pop
stc
rcrl
jae
push
js
cli
pusha
inc
aam
and
or
stos
push
jns
inc
pop
xor
popf
std
inc
push
iret
adc
sbb
loope
insl
inc
rcll
xor
lcall
mov
movsl
aam
movsl
imul
mov
mov
into
icebp
inc
lahf
fistl
jmp
pop
std
pusha
in
icebp
into
and
adc
jno
push
enter
into
or
sbb
jmp
imul
inc
mov
call
inc
pop
pusha
cwtl
lahf
out
stos
ret
mov
decl
xor
dec
scas
add
fistpll
jb
cmp
lock
mov
push
dec
nop
mov
mov
pop
xor
mov
jb
lods
xchg
pop
es
pop
stc
inc
roll
sbb
push
push
iret
jo
jo
jmp
fadd
sub
cmp
out
rol
inc
adc
pop
hlt
fstpl
xor
pop
cmp
xchg
popf
inc
cli
jo
push
adc
nop
push
xchg
jmp
xchg
fisubs
cmp
sbb
sbb
mov
mov
test
fstl
mov
incl
add
mov
jle
inc
push
xchg
sub
sub
sbb
mov
repnz
or
decl
jbe
hlt
addb
loop
and
popf
ret
arpl
inc
mov
jp
cmp
in
orb
imul
xchg
xor
sbb
cmp
mov
call
xlat
adc
mov
sbb
dec
test
add
jae
mov
dec
cmp
hlt
push
test
adc
mov
aaa
jp
fistps
outsl
sub
incl
stos
inc
hlt
lds
insl
les
into
push
shrl
call
ja
mov
cli
ljmp
leave
pop
js
jbe
mov
ret
rorl
lea
mov
jb
out
jae
pushl
fwait
ret
dec
mov
addr16
in
mov
inc
movsb
out
repnz
mov
pop
sub
pushl
push
xor
lods
and
stc
dec
mov
std
add
push
pushl
or
mov
loope
mov
sahf
adc
xchg
sbbb
and
sub
ljmp
sbb
lret
dec
xchg
push
mov
outsl
filds
jmp
sub
push
lcall
les
mov
orb
cmpsb
mov
test
inc
ret
push
or
out
cmp
fwait
add
lcall
int3
setno
movsb
sbb
adc
aad
dec
les
jns
out
das
stos
push
les
lcall
xchg
int
xchg
scas
fdivrl
sbb
mov
insb
repnz
add
decl
popa
fimuls
inc
bound
mov
xor
mov
es
dec
adcb
movsb
in
lods
iret
mov
push
lcall
mov
stos
dec
jb
mov
cmp
loope
cmp
push
decl
xchg
push
rcr
add
ds
adc
hlt
sbb
std
dec
lods
fisubs
loop
jo
decl
or
mov
sub
mov
rcrb
xchg
pop
adc
pop
fwait
inc
inc
push
insl
ljmp
jmp
mov
mov
addr16
repz
das
lds
lcall
cltd
lds
mov
test
cmp
add
ss
scas
fidivl
je
fstl
mov
decl
out
mov
adc
pop
inc
xor
lods
cmp
push
add
es
jmp
pop
das
sbb
mov
in
pop
mov
movsl
xchg
mov
xchg
fs
fsubp
cmpb
jmp
pusha
mov
inc
lcall
mov
scas
mov
shll
lcall
or
add
mov
xor
shl
dec
cmp
pop
and
and
clc
outsb
enter
call
jp
es
push
and
stos
push
cwtl
push
outsl
jns
mov
cmp
imul
pushl
in
add
in
xchg
cmp
jecxz
cmp
test
mov
ret
xchg
cmp
pop
jge
dec
mov
pushw
leave
cmp
sbb
fsubp
fcompl
scas
sbb
jl
cmp
lret
adc
inc
adc
mov
addr16
loopne
xchg
lcall
mov
aaa
loope
pop
js
hlt
lds
popa
out
jg
inc
fcomp
xlat
cmpsb
lcall
incl
int
lcall
sub
adc
pop
cmpsb
cs
push
sub
pop
jl
sar
pushl
add
and
mov
ja
and
inc
push
mov
mov
fnstsw
aad
jg
pushl
lret
xor
adc
stc
cmp
inc
movsl
or
roll
xchg
dec
fcmovnbe
sbb
clc
arpl
test
mov
xor
push
cli
dec
nop
jnp
imul
jo
mov
in
insl
cmp
cmp
push
or
jae
outsl
pop
pop
xchg
sbb
fcomp
or
pop
mov
dec
sbb
arpl
dec
mov
xchg
sti
addr16
sub
dec
mov
jo
repz
or
sar
call
iret
xor
pop
inc
dec
inc
fstl
sbb
mov
push
fstps
pop
fcos
jg
cmpsb
cld
cmpsl
imul
std
stos
push
repz
repz
ljmp
mov
andl
fdivrl
movsb
adc
sbb
arpl
cmp
inc
xor
cmp
sbb
popaw
and
xchg
pop
fstl
or
das
imul
lcall
stos
iret
or
push
pop
sub
out
push
pop
popa
and
mov
cmp
xchg
bnd
pushl
sti
subb
das
sti
adc
sbb
and
call
dec
ud0
jns
push
add
cmc
rol
outsl
ds
les
xchg
pushf
dec
pushf
lahf
enter
aaa
data16
mov
lcall
xor
lahf
and
jl
push
aam
push
adc
lcall
fwait
sbb
mov
jmp
inc
add
xorb
add
andb
in
lods
and
sti
mov
inc
jnp
ret
lcall
lret
adc
sbb
xor
inc
mov
pop
dec
xor
push
adc
decl
or
sub
out
stc
scas
lods
dec
and
sub
adc
or
call
and
xchg
mov
call
enter
add
data16
sub
in
push
push
inc
jmp
dec
adc
and
xor
dec
sub
aad
loopne
jb
ljmp
fwait
je
cmp
hlt
cld
insb
or
aam
push
mov
jp
sti
sbb
insl
xchg
es
aam
pushl
pop
mov
stos
popf
mov
out
push
push
xchg
xchg
sti
inc
call
xchg
sar
pushl
loope
lret
lea
sbb
hlt
iret
test
ja
push
dec
jl
xchg
je
icebp
outsb
pushl
lds
data16
push
adc
adc
pop
dec
cmp
imul
test
fcomps
mov
popf
fwait
and
int3
pop
cli
jb
fwait
mov
decl
push
cmp
adc
add
pop
mov
mov
popl
in
out
aaa
mov
mov
sub
jl
mov
cmp
incb
adc
mov
paddb
lret
gs
lcall
mov
call
jnp
mov
push
in
bound
sub
lock
cmp
mov
gs
adc
pop
pop
jnp
scas
cmp
dec
adc
daa
xor
imull
or
or
inc
sub
stc
and
stos
mov
jnp
jmp
rol
and
pushl
lret
out
mov
xchg
lcall
stos
jno
test
bndstx
call
xor
pop
aaa
rcrb
dec
shrb
mov
nop
test
cmc
or
out
sti
nop
movsl
pop
sub
mov
push
sub
sbb
cmp
pop
lcall
jmp
dec
push
xchg
push
js
mov
cltd
scas
adc
mov
loop
incl
xor
dec
inc
icebp
mov
dec
outsl
aam
and
into
and
sub
out
les
in
fwait
xor
lods
xchg
cmp
jg
xor
scas
pop
int3
ljmp
bnd
rcll
clc
cmp
inc
and
fisttpll
mov
incl
cmp
cmpsl
jbe
mov
jge
mov
sub
push
mov
push
push
cli
xorl
add
add
ljmp
add
sbb
or
and
fdivrs
jl
clc
pop
es
inc
mov
ljmp
fnstcw
in
inc
mov
out
cvtpi2ps
jge
sbb
imul
push
adc
ljmp
xlat
pop
test
gs
out
jp
cli
jg
aam
cmpsl
out
mov
or
incl
adc
jne
cmp
push
sub
dec
push
adc
push
movsl
pop
sbb
call
daa
in
hlt
shrl
cmp
int
sti
jmp
dec
outsb
movsl
ret
mov
inc
cltd
sub
call
push
mov
push
fistpll
push
mov
inc
repnz
pop
stos
in
push
xlat
popa
ljmp
and
jbe
pushl
js
pop
stc
push
mov
sub
xchg
pop
insl
rolb
mov
mov
push
xor
xor
pop
cld
bound
and
fs
jae
ds
ljmp
aas
les
mov
je
push
sbb
fistpll
test
fs
cltd
add
jmp
aam
mov
xor
insb
jmp
in
or
lods
xchg
ret
lods
out
fmull
in
clc
push
mov
or
push
cmpsb
cmp
dec
ret
xchg
lods
inc
sbbb
jns
pop
cmp
iret
xor
ljmp
add
test
mov
xchg
xor
pushl
rcr
es
jns
fidivs
mov
xchg
ds
jle
mov
cs
mov
dec
incl
bound
bound
addr16
dec
shlb
cltd
popf
imul
ljmp
das
les
lahf
fmul
cmp
dec
test
jge
ss
psubq
sub
sbb
pop
jne
push
inc
popf
movsb
test
je
sub
cmp
push
inc
shlb
out
loop
testb
adc
pushl
shrb
test
mov
aaa
jle
sti
std
dec
sbb
pop
lods
ret
cmp
incl
xchg
leave
les
mov
ja
fidivl
xchg
sub
pushf
incl
adc
mov
or
lods
fisubs
in
mov
mov
cltd
or
sbb
ljmp
cltd
mov
adc
sub
stc
std
fimull
in
adc
rclb
fsubs
inc
add
in
es
dec
mov
xchg
jnp
jae
dec
je
dec
test
push
pop
add
push
push
dec
sahf
addl
enter
push
xlat
add
das
clc
dec
mov
mov
out
xchg
out
lods
mov
aaa
les
out
cmc
add
mov
leave
xchg
js
inc
sub
dec
lock
sahf
mov
sub
cmp
jmp
inc
ret
xor
aad
push
shl
adc
mov
dec
out
xchg
fs
or
jo
lea
cmpl
dec
stos
mov
movsl
sbb
cmp
ljmp
mov
aas
mov
pop
loop
sub
adc
dec
or
dec
xor
cwtl
jge
scas
cmp
sahf
inc
mov
in
pop
call
aad
xchg
icebp
and
jg
in
test
fucomip
dec
adc
jns
jl
outsl
xchg
test
mov
dec
push
cmp
xchg
dec
das
ds
out
call
lods
cmpsl
mov
xchg
sbb
xor
sub
push
jo
in
mulb
jbe
pop
push
push
sbb
incl
xor
rclb
jp
test
mov
lods
ja
mov
popa
pop
sub
mov
ljmp
lods
xlat
pushf
jnp
loop
fbld
out
xorl
sub
iret
xchg
jle
lods
iret
and
jmp
pop
jmp
sub
dec
adc
and
and
dec
test
xchg
das
cmc
dec
inc
mov
jg
pushl
adc
and
fidivl
xchg
push
adcb
sub
xchg
out
sbb
xchg
outsb
call
mov
adc
jmp
pop
push
xlat
pop
lret
jns
scas
sub
shll
push
mov
adc
xlat
mov
incl
addr16
and
iret
ffree
fsub
lods
mov
sarl
insb
jbe
ficompl
pop
fdivr
lcall
clc
scas
call
dec
lods
mov
dec
lcall
and
jp
mov
mov
scas
rol
clc
stc
ret
imul
add
cmp
inc
push
jb
mov
push
pop
adc
or
call
bound
push
mov
fs
imul
sahf
rcrb
xchg
ljmp
jge
adc
jmp
andb
pop
inc
dec
sbbb
adc
xchg
jns
call
mov
popa
mov
xchg
lahf
pop
pop
sbbb
xor
jo
and
out
push
and
ret
mov
incl
pop
inc
pop
pusha
jmp
inc
pop
stos
add
lahf
xchg
pop
cltd
xchg
jmp
sub
fsubrl
lret
mov
movsl
xchg
push
fwait
lcall
pop
mov
aad
cmp
ret
call
insl
int3
sbb
xchg
add
ret
repz
daa
inc
jne
sbb
mov
ljmp
xchg
cld
ret
xlat
dec
in
shlb
xchg
push
mov
cwtl
pop
sbb
jg
stos
jb
incl
sub
xchg
jp
hlt
push
mov
adc
nop
inc
jo
pop
pop
test
dec
sbb
repz
mov
pop
sbb
icebp
fnstsw
cmpsb
sbb
cmp
scas
and
test
sarl
dec
dec
das
inc
fnstenv
lahf
adc
fldcw
xchg
sub
pop
jae
call
and
mov
sub
dec
fidivrl
jmp
pop
call
es
mov
mov
clc
iret
in
push
pop
ljmp
repz
arpl
ljmp
repnz
pop
cld
ljmp
std
punpcklwd
ffreep
sbb
mov
pusha
in
lods
nop
adc
incl
mov
addb
dec
adc
cmp
and
sub
iret
rcrl
dec
insl
xchg
gs
int
jnp
add
inc
jp
xor
pop
sti
dec
dec
iret
push
push
pop
inc
int
sub
call
int3
inc
mov
xchg
inc
adc
cs
push
mov
loopne
in
mov
xchg
inc
xor
push
xchg
cld
sbb
psubsb
out
ficoml
mov
xchg
mov
jne
stos
cmp
mov
repnz
mov
ds
jl
mull
xchg
decl
popf
test
outsl
push
fadds
ljmp
sub
adc
lods
xor
mov
push
jmp
inc
pop
int3
adc
cmp
push
pop
inc
sub
or
lods
aas
sbb
jmp
push
shlb
fistps
cmp
jmp
sbb
sbb
dec
outsb
xchg
pop
add
insl
sbb
mov
adc
in
rcrl
add
cmc
gs
js
or
out
dec
notl
lcall
push
push
scas
stos
xchg
mov
stc
out
ja
sti
xchg
insl
test
out
das
data16
gs
lcall
out
jmp
mov
inc
movsl
dec
mov
add
jecxz
pusha
xlat
aad
shrb
jmp
lcall
jb
pop
inc
adc
pop
mov
rolb
jle
and
mov
shll
std
xor
sub
jmp
dec
stos
daa
push
leave
add
inc
push
dec
rcrl
xchg
fidivs
sti
je
sbb
push
adc
ljmp
ja
mov
inc
cli
mov
or
stos
loopne
jb
repnz
jae
call
nop
arpl
jmp
paddsb
lds
sub
jmp
jnp
jmp
mov
clc
in
cli
mov
cmp
cltd
std
push
sti
pop
pop
adc
lret
test
xor
dec
pushf
lcall
or
xlat
push
push
mov
sahf
rcrl
mov
leave
movsb
scas
inc
gs
mov
pusha
xchg
call
fdivl
clc
sbb
xor
jae
leave
add
cmp
pop
pop
call
cmc
jl
jo
push
les
adc
ret
xchg
inc
sbb
sahf
repnz
les
shlb
inc
les
push
insl
dec
sub
rol
cmp
sbb
cmpsb
jmp
lcall
enter
aam
jl
xor
jp
adc
fsubr
stc
jmp
icebp
jns
cmp
repnz
ret
inc
sub
ret
mul
cld
sub
les
cmp
xchg
pusha
push
add
leave
pop
inc
mov
cld
inc
cmpsl
fst
push
cli
scas
mov
cmp
lcall
inc
out
push
dec
push
or
jo
mov
arpl
cld
sbb
fimuls
aad
cltd
jnp
int
ljmp
cmp
rorl
adc
cmp
xchg
shl
pop
mov
pop
fcmovu
fcoml
dec
jb
incl
jecxz
lods
jecxz
jns
mov
mov
test
add
out
incl
cmpsl
sahf
shll
and
nop
push
cwtl
xchg
add
cmp
loop
add
cmp
jmp
dec
loope
aam
scas
test
push
cvtps2pd
imul
mov
hlt
cmp
add
inc
sbb
call
fcmovnu
sbb
sbb
and
mov
lea
ret
jno
dec
int
push
movsb
pop
push
aaa
mov
int
das
mov
jg
lds
inc
and
push
ljmp
into
cltd
xor
aaa
cs
fs
lock
fdivp
jno
inc
pop
flds
push
idiv
enter
push
inc
dec
xchg
data16
lods
rorl
daa
inc
nop
cmp
repnz
xchg
push
fsubl
cmpsb
lock
or
inc
adc
std
clc
jo
out
popa
adc
inc
lods
or
pop
xor
ljmp
ud2
iret
jmp
pop
xchg
xchg
pushf
or
add
cmpsl
sbb
dec
idivl
cmp
in
sbb
stc
das
inc
push
adc
repnz
xchg
xor
movsb
inc
in
cmc
or
jp
gs
mulb
shl
dec
stos
mov
decl
or
imul
test
mov
jecxz
mov
mov
sbb
jmp
dec
loopne
fisubs
movsl
ljmp
dec
bound
push
pushf
lidtl
jmp
int3
daa
dec
repz
inc
pop
movsl
gs
rolb
xchg
in
cmp
int
mov
ljmp
mov
fwait
outsl
xor
inc
inc
popf
loopne
xchg
pop
std
pop
mov
cli
rorb
mov
loopne
lock
pop
adc
inc
add
out
adc
or
mov
jbe
loopne
push
incl
popf
dec
xchg
mov
insb
out
mov
in
jmp
push
test
mov
incl
cmp
pusha
sub
mov
mov
pop
cmp
call
inc
std
adc
push
or
in
sbb
jmp
xlat
negb
adc
aaa
cmpsb
incl
cltd
dec
fs
adc
imul
jg
mov
jp
test
xchg
mov
popa
jmp
xchg
mov
xor
cmc
jae
mov
movsl
or
or
jmp
pushf
mov
push
mov
sbb
jno
hlt
cli
sub
xor
or
or
std
pop
out
and
push
and
or
fcmovne
cmp
loop
jmp
xor
call
pop
push
sub
fcomi
sub
adc
push
xor
call
and
push
xor
push
incl
hlt
lods
jl
mov
pushf
outsl
testl
scas
xchg
ficompl
lcall
call
xchg
xchg
mov
movsb
addr16
adc
outsl
ljmp
repnz
dec
mov
aam
cmc
push
testl
pop
push
aad
imul
inc
pop
ljmp
aad
pop
dec
out
mov
cmp
fildll
outsb
xor
loopne
lret
loope
loope
lcall
jb
std
mov
or
adc
push
dec
andl
lahf
xor
mov
call
xchg
push
add
lahf
add
fsubp
cwtl
call
lcall
aam
push
jae
mov
nop
sub
cmp
loopne
push
mov
add
jb
inc
aad
call
outsl
aad
mov
cmc
lret
enter
mov
nop
cmpsl
stos
in
int
sbb
dec
xchg
aad
idiv
decl
sub
xor
sbb
sub
cmp
dec
sub
xchg
push
sub
add
mov
fwait
jmp
or
cmp
or
push
fsubrs
lcall
and
add
fstps
imul
add
inc
lds
push
incl
dec
notl
and
lret
jne
or
xchg
insl
mov
lret
xorl
rcrb
clc
pushf
ljmp
xchg
filds
mov
dec
aam
add
and
add
jae
test
dec
jmp
add
fisubl
mov
stos
shl
notb
test
dec
and
cmp
push
mov
push
sbb
mov
cmpb
pushl
pop
dec
sub
sub
push
ljmp
mov
mov
les
xchg
inc
cs
and
sbb
add
jmp
fwait
mov
inc
call
inc
outsb
imul
jge
and
pop
fnstenv
mov
decl
outsb
icebp
loopne
or
fdivs
push
xchg
mov
iret
jp
in
fwait
fwait
aam
fiadds
push
divb
inc
push
lret
inc
or
incl
sbbb
cli
sub
adc
pop
cli
add
mov
sub
lcall
mov
cwtl
dec
sub
sbb
add
stc
mov
jg
xchg
push
cmpsl
cmp
xorl
leave
je
jae
cmp
mov
sub
mov
fwait
out
sar
je
call
pop
ret
push
cmpsb
orb
hlt
repnz
or
shll
mov
ljmp
add
adc
and
cmc
dec
lock
mov
mov
lods
out
call
cmpsl
das
loope
dec
shl
push
imul
adc
cmp
lcall
xor
and
jmp
jmp
enter
and
ret
adc
out
pop
jmp
add
pop
xor
mov
inc
adc
xchg
mov
rclb
push
in
test
cli
xorb
or
lds
mov
push
adc
aaa
popa
xor
and
ja
pushl
inc
shll
ret
xchg
mov
test
mov
daa
jne
push
sub
leave
icebp
pop
incl
xchg
jle
dec
out
aaa
or
or
lahf
sbb
enter
mov
cmpsb
out
std
add
inc
inc
pop
movsl
sbb
xor
andl
iret
inc
test
sub
add
sub
addr16
mov
push
lahf
movsl
ss
scas
or
movsb
rorb
lcall
scas
iret
call
push
leave
pop
pop
fs
sahf
das
dec
ret
jl
int3
es
jo
dec
jecxz
daa
frstor
xchg
dec
and
ds
jg
xor
inc
jb
repnz
jecxz
imul
push
pusha
push
pop
mov
sub
call
jp
dec
inc
sub
out
sbb
in
cmpsb
les
sbb
aaa
or
addr16
pop
mov
mov
subb
jge
cmp
jle
dec
mov
mov
jge
inc
pop
popf
xchg
call
add
add
mul
mov
jg
xor
iret
dec
xor
push
adc
mov
dec
out
add
cmp
pop
dec
aad
cmpsb
mov
lret
jne
fisubs
adc
push
mov
or
sbb
ljmp
jnp
or
sbb
push
mov
adc
call
lods
outsb
in
out
pop
inc
jb
nop
or
cmp
mov
mov
call
inc
lret
inc
mov
mov
imul
cs
sub
adc
or
shlb
out
mov
xor
leave
cmpsl
pop
out
push
imul
incl
fwait
sar
stc
outsl
popf
scas
out
fcmovu
push
je
sub
push
sub
out
data16
ja
data16
ljmp
mov
xor
adc
inc
push
cmpsb
lock
sbb
clc
sbb
in
dec
mov
outsl
mov
rcrl
stc
lock
fimull
xchg
lcall
dec
and
push
pop
fcoms
lret
in
jg
mov
icebp
xchg
mov
lods
ljmp
pop
js
dec
enter
xchg
cmp
pop
repnz
mov
mov
in
mov
ljmp
stos
push
out
imul
cmp
test
js
push
xchg
cmp
inc
ljmp
mov
fwait
dec
jno
scas
pop
push
jg
inc
push
push
sbb
divb
push
push
push
call
and
xor
inc
xor
bound
xchg
mov
add
cmp
jmp
les
int3
jmp
push
loopne
es
aad
mov
or
call
inc
pop
movsl
xlat
mov
sub
ret
arpl
addb
or
fisubl
inc
hlt
pushl
sub
aas
stos
lds
sbb
imul
lock
loope
cmpl
mov
push
outsb
jmp
cmp
fildll
push
call
gs
pop
mov
jecxz
mov
ljmp
notl
push
push
jnp
push
sahf
jge
mov
jg
aad
insl
stos
lret
mov
or
imul
lgs
cltd
push
stc
cmc
pop
xor
incl
data16
ss
inc
mov
add
hlt
shl
roll
jmp
pushl
enter
divb
addr16
lock
jg
jo
outsb
sbb
cli
ret
stos
jb
push
push
sub
movsl
xlat
push
mov
inc
mov
xchg
pop
fsts
add
push
jnp
sahf
and
lcall
dec
jl
ret
pop
js
xchg
push
lret
mov
fwait
adc
cmp
push
test
mov
pop
negl
sub
cmp
movsb
sbb
pop
and
dec
add
rcrb
dec
adc
inc
aas
xor
sti
xor
mov
push
sbb
pushl
or
cmp
sbb
cmp
daa
pusha
pop
aas
popa
ret
inc
jp
test
popf
pop
call
push
jns
pop
sbb
xchg
hlt
dec
cs
or
movsb
jle
pop
sub
call
cmp
cltd
in
pop
xor
imul
mov
imull
imul
xor
inc
bnd
nop
ror
mov
mov
mov
xor
ds
clc
imul
into
xchg
out
dec
aam
push
lods
ja
push
inc
fdivrl
sub
subl
int
pushl
xlat
fs
testl
aam
mov
inc
movsb
pop
cli
jmp
jmp
sub
push
cmpsl
ret
mov
push
adcb
cltd
dec
jp
gs
insb
add
pushl
js
and
adc
push
pop
js
aaa
je
mov
test
sub
jmp
dec
cld
popa
dec
jg
xor
adc
pop
mov
cld
adc
mov
dec
pop
xchg
insl
xchg
and
jecxz
ljmp
mov
xchg
out
mov
cmp
fstl
aaa
stos
arpl
dec
pop
jmp
mov
mov
subl
inc
bndldx
fstpl
xchg
call
jg
push
pop
mov
pop
pop
and
push
xor
lods
add
stc
pusha
sahf
dec
xor
into
cld
inc
inc
pop
mov
std
enter
push
xchg
icebp
incl
jne
inc
out
mov
cltd
mov
cmp
sbb
js
or
test
dec
ret
int
cmpsb
repz
fmul
jp
lods
cmp
mov
cmp
mov
fdivl
ljmp
shll
jg
scas
cmp
adc
cmp
in
cmp
jne
sub
fdivl
pop
leave
ds
aam
cmc
cmp
or
cwtl
idiv
push
pop
addr16
lock
xchg
out
aam
pop
insb
fmulp
mov
pop
xor
add
js
sti
jmp
movsl
stc
cli
adc
sbb
xchg
testb
std
in
jl
push
into
add
or
addr16
aaa
call
mov
out
sbb
mov
cmp
dec
jl,pn
jge
movsb
xchg
mov
xchg
cmp
jmp
out
mov
jle
xchg
xor
inc
lods
call
sbb
mov
cmp
jmp
lret
xor
xchg
data16
inc
jb
loope
orb
dec
pop
sbb
dec
adc
push
shll
pop
push
ljmp
call
xchg
and
lcall
xor
popf
rclb
outsl
nop
fisubrs
cmp
lret
ficoml
or
cmp
push
movsl
dec
sub
pop
mov
clc
xor
push
movb
dec
jl
or
sarl
xor
dec
sahf
cmc
aam
jg
pushl
xchg
sbb
js
xorl
adc
ljmp
push
sub
inc
add
stos
popl
clc
dec
dec
int
jb
mov
mov
jnp
movsl
test
sti
lods
jmp
icebp
jle
popa
fistps
push
cmp
in
sbb
bound
add
lcall
cltd
mov
in
stos
scas
shrl
outsb
dec
int3
cmp
pop
and
jo
in
inc
sbb
inc
push
lds
cmpsb
dec
mov
ret
in
push
cmpsb
call
adc
adc
mov
lret
adc
cmpsl
sub
add
das
incl
adc
add
fadd
jge
xchg
sbb
adc
leave
sbb
out
lahf
jns
bound
push
fidivl
jns
pusha
int
rcpps
out
or
cmp
jmp
stos
mov
and
scas
jl
ss
scas
dec
shrb
push
cwtl
pusha
scas
mov
jo
sub
je
aaa
mov
dec
out
rcrl
shl
dec
dec
inc
push
and
repz
jmp
cmc
cld
mov
dec
push
enter
sbb
call
add
adc
sahf
icebp
jmp
in
adc
mov
jno
xor
repz
dec
les
stos
ja
cltd
popf
lcall
cld
cmp
aaa
inc
je
aas
and
aaa
xor
test
cvtps2pi
rcll
rorb
mov
aam
imul
aam
cld
shll
data16
adc
loop
ret
xchg
xor
pushl
iret
scas
inc
mov
lret
iret
fwait
push
loope
popa
jns
or
jle
add
sti
data16
rcrb
jge
test
sahf
inc
jno
and
sub
aad
jmp
leave
rcrb
movsl
cmpsl
mov
adc
pop
jl
rorb
mov
adc
mov
aaa
and
test
adc
sbb
pop
xchg
mov
mov
or
sbb
jmp
push
cmp
and
or
loopne
jge
data16
cmp
pop
lcall
rcrb
pop
ja
jge
insb
and
std
test
cmp
shll
cmp
incl
xchg
popa
mov
mov
test
cmp
mov
sub
push
dec
pushl
test
dec
and
js
aad
pusha
movsl
xchg
sti
test
push
scas
dec
test
mov
lcall
in
sub
inc
test
xchg
jbe
lods
jmp
ja,pt
xchg
dec
mov
aad
incl
daa
adc
mov
push
pusha
mov
in
das
gs
mov
push
test
lcall
jmp
lea
ljmp
jl
repz
ds
std
and
jp
xlat
shrb
orb
xor
loope
fmul
repz
fldcw
or
ljmp
imul
nop
inc
je
pop
aaa
sbb
push
or
out
popf
push
mov
cmp
clc
inc
stos
loop
inc
lods
pop
inc
pop
jge
mov
inc
or
mov
inc
and
mov
cmp
lcall
or
out
enter
mov
push
push
cltd
cmp
rcrl
rcl
incl
mov
pop
mov
lahf
mov
cli
add
xor
sub
fwait
adc
call
mov
sbb
into
imul
out
ss
daa
divb
adc
and
mov
decl
adc
sub
cld
insl
lcall
mov
xor
repnz
adc
lcall
mov
xchg
jbe
addr16
lahf
loop
lahf
xchg
lcall
mov
lcall
pop
mov
por
inc
in
adc
rorb
inc
les
decl
outsl
or
ror
and
jge
mov
or
in
inc
fcompl
pushl
sbb
jbe
stos
push
ljmp
aas
popa
or
fnsave
mov
pusha
shrb
dec
std
pushf
push
jae
lcall
mov
mov
xchg
cmp
js
xchg
fwait
popa
xchg
adc
adc
outsl
movsb
jae
push
cs
sahf
ret
incl
jmp
and
in
adc
loopne
cwtl
mov
pop
or
xchg
lods
push
rolb
or
ss
inc
mov
mov
std
push
stos
orl
cmp
imul
jmp
mov
cs
and
add
jmp
push
mov
dec
dec
and
xor
popf
rorl
pop
je
add
jmp
ljmp
std
mov
int
sub
andb
aaa
sbb
ljmp
push
xchg
push
add
lcall
adc
or
adc
jo
sahf
lods
dec
sub
icebp
lock
stos
or
call
fildl
mov
shlb
frstor
popf
stos
sbb
mov
cs
mov
push
jnp
in
dec
fldenv
es
pop
mov
lea
movdqa
bnd
test
ret
ljmp
in
out
dec
push
jmp
dec
lods
push
ja
out
sbb
test
test
ljmp
pop
mov
dec
ja
xchg
hlt
pop
mov
jb
push
or
aaa
and
mov
dec
mov
lret
mov
pushf
xchg
loopne
xchg
rcll
inc
push
cmpsb
mov
int
les
lcall
inc
dec
add
test
push
xor
shlb
inc
xchg
repnz
shl
jno
adcb
mov
and
xor
xor
aas
leave
stos
jp
add
scas
push
pushf
sbb
rcl
cli
int3
ljmp
mov
aaa
in
decb
in
push
mov
xchg
roll
loop
xchg
xchg
jle
mov
jmp
add
test
pop
sub
scas
int3
clc
je
push
pop
push
and
pop
ret
decl
nop
adc
pop
sub
push
cli
cs
test
lds
or
lcall
or
pushf
mov
cmp
add
jb
inc
sbb
cmp
inc
icebp
adc
popa
adc
pusha
into
add
push
repnz
lahf
das
addr16
cmp
nop
fs
inc
daa
pop
ljmp
in
mov
or
dec
rclb
push
and
call
cmpsl
mov
enter
xor
stos
negb
faddp
call
pushl
mov
mov
jae
stos
pop
mov
add
dec
mov
cmp
call
lret
std
cli
or
mov
cmp
cmp
push
lcall
lcall
mov
lock
mov
jns
mov
adcb
jmp
or
in
add
jb
cmp
jnp
adc
imul
jae
sbb
hlt
mov
shlb
push
sub
loopne
mov
jb,pt
inc
xor
dec
fcos
call
pop
mov
add
stos
pop
rorb
scas
mov
test
decb
and
call
stos
faddl
inc
aam
jmp
out
sub
jg
rclb
sbb
incl
or
insl
in
sbb
mov
outsl
sbb
jno
out
inc
mov
incl
dec
clc
mov
stos
aas
shll
int3
sbb
push
cld
or
lock
cmpsb
lods
ja
jmp
mov
int
nop
xchg
fiaddl
add
mov
fisttpl
js
fwait
jno
and
call
push
sub
pop
dec
dec
sbb
pop
sub
xchg
push
inc
sub
insb
sbb
add
xchg
jmp
ds
pushf
sub
cmp
add
jl
leave
inc
sarb
and
shrb
mull
hlt
out
call
mov
inc
iret
and
lret
ljmp
rcrb
and
inc
icebp
ljmp
das
ficompl
adc
jbe
dec
add
fdivs
neg
test
ljmp
push
cmc
pop
insl
xchg
dec
std
cltd
mov
jecxz
inc
ret
and
ljmp
cwtl
cwtl
idivl
lcall
mov
add
cmp
pop
fbld
or
mov
decl
jae
jnp
ss
add
out
pop
mov
xor
jno
pop
rcll
lret
jle
scas
mov
in
sbb
lcall
mov
dec
adc
push
ficoml
fcom
sub
loopne
cmp
incl
cmpl
testb
hlt
inc
pop
call
mov
into
pop
dec
decl
hlt
cwtl
sbb
mov
jae
addr16
jge
lret
sbb
outsl
lock
or
jg
push
pop
jge
mov
mov
ss
pop
mov
jge
stc
jp
arpl
xor
decl
clc
add
jmp
cwtl
mov
loopne
addl
pop
sub
cld
arpl
push
dec
sahf
xchg
lods
jns
call
loop
xchg
out
pusha
arpl
cmp
xor
mov
jecxz
in
sarb
aam
incl
jmp
pop
rclb
in
push
push
pop
in
mov
mov
inc
imul
pop
notl
jp
sbb
out
xchg
cmp
mov
dec
test
adc
aad
fdivr
lcall
or
sbb
pop
test
or
lret
mov
mov
es
fcos
decl
pop
mov
ret
lahf
out
mov
push
scas
js
pop
addr16
call
dec
ljmp
out
push
jp
movsb
add
nop
mov
into
sbb
or
call
sub
imul
insl
pusha
loop
lret
lock
inc
pop
movsl
and
loope
mov
aaa
push
mov
xor
pop
cmp
sbb
mov
fnsetpm(287
and
pop
push
add
decl
mov
mov
leave
pushf
jb
fs
dec
pushf
xorb
jl
push
test
incl
jae
repz
jbe
add
adc
or
sbb
cmp
repz
xchg
or
mov
xchg
pop
outsb
pop
clc
mov
xor
rcrb
sti
lcall
and
test
or
mov
lret
cwtl
movsl
mov
xor
call
jb
pop
cltd
cs
adc
iret
jp
adc
pop
cwtl
mov
call
test
or
incl
jae
mov
lods
dec
mov
stc
pop
pop
outsl
xor
cmp
mov
push
sbb
dec
imul
mov
lods
inc
cltd
mov
and
aas
push
dec
popa
cwtl
arpl
sahf
fistps
loope,pt
jno
ljmp
dec
xor
movsl
aam
push
enter
iret
aaa
mov
call
mov
ja
scas
shrb
push
or
xchg
pop
mov
sbb
pushl
jle
add
add
xchg
or
andb
bound
mov
mov
pop
push
cwtl
insb
cmp
pushl
xor
lcall
fcoms
jp
pop
data16
push
push
ja
lcall
fcmovnbe
nop
adc
jl
js
sti
je
cmpsl
je
pop
or
outsl
mov
test
incl
xor
mov
in
mov
xchg
jmp
addl
or
test
mov
push
or
lcall
sub
incb
aam
sub
or
loopne
insl
mov
pop
fwait
pop
push
cmp
lods
aad
sbb
cmp
jge
fwait
dec
gs
jmp
jl
jne
jecxz
pop
and
je
ljmp
jmp
addr16
xchg
mov
ljmp
filds
adc
bound
lret
ret
movsb
push
das
xchg
insb
call
sbb
and
lret
lods
adc
inc
addb
dec
iret
in
xchg
push
std
xor
outsl
jae
imul
imul
add
mov
mov
iret
call
arpl
inc
lds
ljmp
ds
xchg
dec
push
add
insb
cltd
pop
incl
sub
ret
xchg
and
in
out
lret
push
addr16
mov
inc
outsb
mov
decl
pushf
mov
adc
add
cmp
outsl
lret
xor
pop
lods
aaa
jmp
aam
fs
lcall
scas
adc
lret
sbb
icebp
ss
or
push
mov
out
dec
mov
test
pushl
push
lods
mov
jnp
adc
aaa
enter
stc
lea
lahf
xchg
loopne
inc
xchg
test
aad
ss
incl
push
sub
pop
fadds
in
roll
aad
sub
pop
std
mov
inc
mov
add
jge
decl
mov
sbb
cmpsb
cmp
jmp
xor
mov
jg
incl
xor
and
or
enter
adc
and
mov
popf
or
ljmp
rclb
fadd
mov
fsubl
ss
jns
add
dec
add
pushl
clc
cld
cltd
leave
popf
std
push
outsl
mov
aaa
les
and
int
mov
cmovno
pop
cs
or
adc
mov
mov
mov
pushl
dec
push
lret
js
jmp
mov
mov
cmp
cmc
sub
xchg
pop
adc
in
adcb
pop
xor
jbe
subl
and
out
pop
testl
call
push
pop
test
lcall
inc
pop
loope
mov
adc
pop
xchg
cld
jmp
xor
adc
iret
test
rcrl
lret
jmp
mov
xchg
push
mov
mov
je
pop
pop
adc
mov
or
dec
xchg
gs
cli
rorb
pop
mov
add
push
fcmovb
jns
mov
clc
sahf
hlt
mov
fadds
cltd
add
jo
nop
and
and
fmull
movsb
jns
clc
stc
sub
mov
sbb
mov
mov
loop
push
cs
inc
adc
sub
jmp
inc
out
dec
xor
and
mov
iret
decl
mov
dec
mov
es
loope
mov
popf
pop
xor
cmp
dec
test
and
decl
out
add
dec
repnz
test
xchg
mov
into
pop
imull
jo
repz
dec
movsl
mov
jmp
mov
lods
jecxz
ja
add
add
stos
loope
sub
test
call
inc
xor
imul
outsb
outsb
lcall
dec
jle
mov
mov
xchg
jbe
ljmp
inc
mov
dec
aam
jae
js
call
stos
icebp
out
loopne
mov
outsb
in
cs
lods
outsl
stos
cltd
std
push
in
in
sub
pushf
push
sbb
outsl
xchg
jmp
xchg
jp
mov
dec
pop
repz
mov
std
mov
lods
inc
imul
cltd
xchg
pop
push
jmp
adc
mov
in
lcall
leave
or
js
mov
jg
in
lcall
sub
push
cmpsl
add
add
xchg
adc
lret
inc
js
incl
subb
jp
xchg
lret
and
jmp
push
dec
into
mov
gs
dec
or
out
xor
stc
fstpt
cmp
scas
lock
cwtl
outsb
adc
cmp
mov
test
int3
mov
incl
subb
leave
cmp
xor
test
mov
mov
jmp
dec
repnz
adc
mov
mov
leave
ds
xorb
mov
inc
xor
addr16
call
pop
mov
mov
mov
inc
out
pinsrw
mov
call
add
popf
test
xor
leave
ja
sub
into
jp
add
push
or
mov
in
jae
stos
int
or
pop
test
roll
push
add
inc
mulb
mov
ja
dec
jmp
xchg
xchg
push
mov
add
mov
lock
and
aas
pop
jns
sub
jne
push
push
mov
lcall
cmp
pop
jl
xor
adc
movsb
test
enterw
inc
dec
call
dec
cwtl
or
in
jb
push
addb
cmp
mov
add
addl
rorl
add
repnz
ss
xchg
scas
mov
test
jno
into
cmp
lods
call
add
inc
inc
pop
xchg
mov
pop
sbb
pop
pusha
xor
mov
rcll
test
dec
jmp
push
mov
in
in
push
lret
fldl
jg
std
adc
and
pusha
add
aam
fsts
xchg
mov
sarl
pop
add
jnp
xor
inc
icebp
das
push
popf
push
push
sub
push
outsb
jnp
jp
jecxz
pop
rcrl
cmp
incl
xor
out
add
mov
dec
in
out
imul
jecxz
jecxz
jmp
inc
dec
mov
jle
xchg
jno
mov
pushf
into
mov
mov
or
pushf
movb
sti
push
sub
lds
sarb
loop
mov
sub
mov
test
fucom
and
cmp
scas
xor
push
xchg
or
iret
lret
in
iret
std
cmp
repz
ljmp
cmp
arpl
mov
push
adc
dec
mov
push
movl
push
out
adc
jmp
decl
ljmp
js
popf
mov
mov
cwtl
adc
call
sub
es
sbb
pop
mov
adc
add
xchg
xor
call
lods
cmpb
shr
fs
in
mov
jge
test
cmpsl
idiv
lcall
decl
sbb
jmp
pop
ret
mov
cld
jge
pop
cwtl
xchg
push
scas
push
dec
adc
pushl
jns
lahf
dec
xchg
cltd
outsl
imull
cmp
lahf
ret
and
ja
and
jbe
xchg
mov
cmp
pop
ret
iret
and
mov
cmp
pusha
ljmp
lret
pushl
shr
sub
and
xchg
js
xor
out
sahf
mov
adc
and
push
hlt
cmp
shlb
jbe
push
jo
and
addl
outsb
cli
mov
clc
sub
mov
call
mov
adc
mov
add
pop
sbb
fwait
imul
fisubs
les
inc
jge
sbb
divb
cmp
in
xor
cs
pop
jb
jno
outsb
fisttps
pop
stos
jnp
mov
jge
loopne
mov
pop
enter
pop
sbb
sub
mov
lcall
xchg
mov
or
in
lods
in
adc
gs
and
cs
xchg
pop
loop
decl
pusha
push
inc
or
sti
fldt
sbb
mov
imul
add
lock
incl
icebp
jle
lret
jnp
clc
pop
cmp
cmp
mov
xchg
xchg
arpl
or
dec
fiaddl
decl
mov
pop
jo
gs
aam
je
jecxz
shll
pop
lods
icebp
mov
mov
mov
cmp
and
adc
pusha
jno
jne
push
clc
loopne
push
fidivl
cmp
js
mov
jnp
sbb
pop
mov
cli
mov
jno
mov
xor
jmp
cmp
outsb
cmc
das
mov
movsb
out
aas
lds
push
iret
shrl
xchg
push
and
cmpsb
pop
decl
ret
rcr
dec
iret
rorl
jp
pop
mov
mov
and
push
jmp
in
add
cmpl
mov
icebp
cs
xor
sub
fsubrl
incl
outsb
lods
leave
pop
add
dec
inc
fiaddl
cmp
and
in
test
call
data16
dec
aaa
sub
mov
xorl
or
push
lcall
jmp
cmp
rorl
ret
sahf
lret
adc
lret
cmp
xchg
outsl
clc
or
hlt
xchg
xor
mov
jl
and
outsl
push
mov
std
mov
shrb
bound
ja
or
dec
les
xchg
rclb
lods
mov
out
and
pop
stos
ss
cltd
rorb
cs
ljmp
pop
xchg
out
mov
out
mov
cmp
test
fldl
inc
jge
arpl
cmpsl
push
lahf
outsb
ljmp
out
jl
or
iret
cmc
pop
or
fwait
clc
repnz
inc
movsb
dec
push
or
lock
cli
and
sub
cs
shrb
pop
add
and
cmp
sub
rcl
and
push
xchg
decl
test
push
cmp
pop
xor
dec
loopne
jmp
jmp
mov
adcb
cmp
ljmp
sbb
sbb
mov
add
jge
pop
mov
in
lret
inc
push
ficoml
cmc
inc
or
subb
fcom
mov
lret
push
aaa
lea
and
pop
lods
or
pop
stos
ds
cmp
movsl
ds
incl
jecxz
mov
and
in
jle
xchg
fimuls
ja
aas
mov
outsl
in
jo
jle
decl
aad
pop
rcrb
add
dec
jg
ret
aaa
and
cmp
in
jmp
lcall
mov
sahf
ror
sbb
push
mov
pop
sbb
pop
pusha
add
xchg
fldenv
xor
lcall
pop
in
sub
test
add
push
push
adc
test
cmp
lds
cmpb
call
and
cmp
mov
adc
mov
pop
inc
mov
xor
inc
mov
ljmp
jnp
xor
cld
inc
sbb
outsl
cmp
std
mov
push
jmp
push
icebp
dec
cs
test
pop
leave
psllw
cwtl
add
lods
cmpps
mov
incl
rcl
pop
mov
inc
enter
inc
sbb
shll
and
cwtl
call
xor
test
or
push
pop
js
jo
adc
cmp
leave
jbe
jbe
imul
ljmp
sub
cwtl
pusha
jle
lods
ret
cmp
xor
icebp
cmpl
incl
enter
enter
out
int3
mov
jnp
pop
aad
and
fdivrp
js
jmp
xchg
push
cmp
dec
inc
out
lock
imul
xorb
addr16
call
cmp
lods
lahf
in
inc
leave
aam
adc
sbb
push
mov
pop
xor
adc
jmp
fs
adc
push
mov
idivb
mov
jmp
loope
fucom
mov
fldenv
pushl
hlt
js
sbb
or
mov
scas
fmuls
sbb
movlps
mov
pushl
inc
stc
aas
push
mov
out
shll
ja
dec
sar
or
mov
test
xchg
jmp
call
loopne
inc
aad
jl
test
test
jne
adc
mov
add
pop
sub
aas
jns
nop
jecxz
ret
test
cwtl
aam
gs
adc
or
jge
add
arpl
pop
cmc
arpl
decl
lds
cmpsl
inc
in
jb
into
sbb
inc
push
xchg
jo
arpl
ret
mov
fsts
mov
in
or
ds
adc
push
dec
jo
cmp
mov
movsb
in
fimuls
rcl
mov
imul
cli
stc
mov
xchg
xor
push
cltd
ret
cmp
dec
sub
inc
outsb
sub
fisttps
adc
adcl
rclb
cmp
decl
leave
icebp
and
repnz
or
enter
pop
jle
call
jb
call
lods
mov
pop
adc
jecxz
pushf
test
pop
pop
scas
into
pop
rcrb
xor
int
incl
add
int3
dec
data16
jmp
test
stos
xchg
rclb
mov
outsb
fucomp
repnz
push
mov
stos
add
xor
ja
dec
es
scas
ljmp
imul
sbb
lcall
push
cmpsb
ret
icebp
out
or
js
sarl
push
push
xor
loopne
lods
push
xchg
stc
lds
call
test
loope
mov
rorl
aam
loope
xor
in
dec
pop
jns
ljmp
iret
repz
test
push
insb
scas
stc
fisubs
arpl
lret
inc
pop
xlat
lcall
out
and
jmp
xchg
xor
xchg
lock
pop
dec
add
cmp
mov
jmp
jmp
cltd
icebp
cmp
lods
stos
or
mov
push
inc
push
push
sti
mov
cmpsb
pop
jmp
popf
pop
mov
imul
dec
mov
mov
mov
xchg
insb
or
pop
cmp
dec
pop
movsl
jp
adc
das
sbb
adc
clc
ficoms
xchg
addb
test
insl
xor
loope
adc
xor
cmp
pushf
xchg
outsl
cmpsl
mov
ljmp
xacquire
fistl
lods
in
shr
stc
xor
sti
outsb
cltd
dec
pop
adc
jmp
pop
pop
xor
mov
mov
cld
loopne
shlb
es
iret
stos
mov
hlt
cs
dec
add
std
jl
and
push
mov
and
lcall
push
ja
lods
lods
notb
jne
loope
push
mov
inc
jnp
data16
jmp
inc
mov
ja
or
rcr
stc
negb
std
nop
gs
imul
jge
push
arpl
mov
add
mov
mov
ret
lods
add
mov
fstp
jl
and
or
incl
lret
pop
jo
sti
rcll
ja
push
and
xor
mov
popf
push
push
cmp
xchg
lcall
cmc
mov
stos
jge
ds
repnz
outsb
and
mov
ja
repnz
xchg
lea
pushl
cld
inc
pushf
xchg
inc
xchg
hlt
iret
cmp
cli
popf
jmp
test
sub
jns
ljmp
mov
fdivrl
dec
fsts
adc
out
dec
ss
jbe
pushl
ror
mov
xor
mov
pop
movsb
lods
add
std
pusha
incl
inc
jb
sbb
or
cmpl
sub
push
jmp
cmpsl
pop
lcall
inc
or
incl
test
add
push
lcall
je
sbb
add
ljmp
push
jl
sub
inc
clc
clc
sub
fnstsw
cmp
shlb
mov
gs
ljmp
cmp
xchg
and
dec
sub
or
cli
roll
nop
dec
xchg
add
cmc
cmp
popw
dec
mov
andb
xor
in
call
cmp
xchg
nop
inc
les
inc
nop
lret
jmp
sub
mov
pop
test
fmul
sub
sub
ja
mov
adc
out
mov
repnz
adc
std
stos
movsl
fcoml
in
mov
sbb
in
ror
loop
fst
scas
jbe
push
pop
sbb
cld
stc
xor
mov
mov
clc
shl
adc
leave
add
enter
cltd
iret
nop
test
cmp
incl
pop
frstor
hlt
aaa
ret
outsl
cmp
xor
pop
repz
adc
mov
inc
fcom
dec
add
imul
pushl
xor
xor
test
sbb
ret
ds
insb
sbb
xlat
pusha
xchg
pop
pop
sub
incl
pop
jmp
mov
aam
sti
and
cli
mov
mov
lea
stos
jmp
call
push
cltd
inc
sub
movsl
fildll
into
in
push
data16
test
mov
or
mov
aad
scas
fwait
mov
adc
push
mov
add
out
rclb
call
push
mov
cmpsb
clc
testb
xchg
mov
es
jo
xor
rcrl
enter
ljmp
ja
sbb
imul
scas
test
jp
mov
mov
ljmp
mov
xor
mov
lods
fistpll
mov
iret
lock
mov
je
adc
push
ljmp
and
cs
lock
stc
out
leave
inc
push
mov
xchg
jecxz
scas
mov
call
pop
mov
mov
fwait
aaa
mov
pop
int3
sub
cmp
daa
inc
call
into
hlt
jnp
jge
xor
clc
cli
stos
mov
fidivrl
sbb
notl
and
fadds
ljmp
lret
jg
sub
adc
push
cli
fsubrl
mov
add
test
push
imul
out
xor
jecxz
jecxz
xor
ret
pop
hlt
call
jmp
mov
bound
filds
cmp
mov
int
adc
shll
stc
inc
out
pop
in
mov
cmpsb
sbb
test
stos
jp
push
inc
ja
inc
test
incl
mov
lret
dec
sahf
arpl
enter
fsubrp
stos
mov
mov
lcall
subb
icebp
adc
cmpsl
mov
jle
lods
cmp
mov
mov
in
sar
call
mov
stos
pop
pop
push
jmp
mov
or
das
jne
repz
gs
and
data16
jmp
ljmp
add
lret
dec
inc
test
inc
aad
and
cld
daa
mov
sbb
ljmp
jns
adc
sbb
ret
inc
add
stos
mul
dec
sub
decl
pop
dec
lret
push
iret
push
gs
sahf
push
xor
jo
jle
insl
inc
imul
jg
decl
in
aam
shlb
or
pop
or
mov
lds
in
push
dec
lcall
ljmp
xor
pop
pop
filds
dec
loope
scas
push
fwait
cwtl
jmp
repnz
call
mov
imul
xchg
dec
adc
movsl
cwtl
insb
ret
xchg
mov
icebp
call
mov
enter
int
stc
cmpsl
call
inc
aaa
in
fidivrs
in
pop
add
repnz
call
in
jne
push
jo
es
cmp
adc
insb
int
nop
inc
mov
ljmp
mov
ljmp
test
mov
dec
xlat
mov
outsb
insb
inc
jne
mov
jo
sbb
and
jl
dec
sub
aas
mov
fsts
sahf
mov
pop
xor
xor
adc
inc
fwait
pop
jmp
jg
out
std
adc
pop
add
xchg
lock
cli
mov
cmp
push
mov
fwait
rolb
pop
xchg
into
push
push
pop
jg
mov
lock
push
and
incl
push
xor
arpl
sbb
arpl
mov
lcall
jg
pop
bnd
mov
dec
test
jns
mov
add
decl
fisubrs
fisubrl
in
jmp
lahf
jp
jmp
aas
or
loopne
inc
decl
sub
dec
loopne
pushf
jns
mov
or
sbb
mov
pushl
fmuls
jmp
cmp
lret
sub
mov
push
xor
imul
aaa
gs
test
add
adc
and
lret
mov
sbb
mov
pop
cli
les
inc
add
jle
arpl
scas
rorb
inc
shrl
in
cmp
in
xor
inc
ja
mov
lods
inc
xchg
in
cli
pushf
jmp
jbe
jle
pop
sbb
shll
push
pushf
aad
pusha
sub
adc
movsl
aaa
into
push
mov
jne
stc
mov
xor
in
addr16
pop
test
xor
leave
pop
mov
decl
pop
les
lret
ret
adc
push
cmp
fwait
jmp
out
cmp
std
mov
std
cld
inc
dec
mov
fldt
mov
inc
ja
xor
add
fisttpll
cmpsb
ret
ljmp
jmp
lods
leave
or
out
into
cmpsb
mov
mov
xchg
outsl
out
sub
sar
xchg
cmc
addb
incl
add
aaa
jp
decl
xlat
mov
mov
std
fstpt
jae
push
adc
test
popf
sar
ljmp
ds
lcall
in
push
clc
leave
push
cmp
popa
daa
adc
mov
lcall
jecxz
shl
je
push
jge
mov
arpl
insb
push
mov
pop
xchg
add
lcall
inc
or
fmul
mov
mov
adc
sub
in
and
push
push
bnd
mov
cmp
cli
gs
loope
arpl
lods
xor
jl
stos
lahf
pop
jl
mov
in
jle
aas
out
sub
or
incl
scas
pushf
cmp
cmovne
fisubl
mov
leave
inc
imulb
mov
jmp
dec
sub
lock
cmp
cwtl
lock
or
es
jb
sbb
xchg
cmp
clc
cltd
frstor
loope
sahf
rol
push
mov
push
jb
fmuls
imul
inc
lds
adc
ret
xor
call
sarl
dec
add
mov
dec
mov
inc
sub
movsl
and
ret
shlb
sbb
decl
mov
jbe
mov
insl
sub
fisttpl
pop
rolb
inc
mov
insl
stc
jp
and
push
xor
sbb
cmp
xchg
fwait
cmp
in
daa
cld
sbbl
dec
fisttps
gs
inc
jnp
push
dec
bound
mov
idivb
mov
and
call
xchg
xchg
jle
jle
jno
inc
dec
cs
jp
push
das
out
jmp
lcall
push
lods
sub
xor
out
pusha
and
fs
mov
sub
jmp
ror
adc
mov
bound
xchg
pop
movsb
in
sub
sbb
push
incl
and
dec
inc
jo
and
xchg
sub
sub
call
inc
insl
leave
fdiv
test
insl
or
lret
add
rorb
insl
pop
mov
xor
cwtl
lcall
xchg
in
pop
mov
stos
es
push
xchg
xchg
mov
sbb
sub
pushl
xchg
clc
bound
inc
add
jl
repz
sbb
loope
pop
sub
or
ljmp
and
popf
pusha
dec
sahf
inc
cmp
test
mov
xchg
test
mov
cmp
adc
call
fmuls
xor
jb
push
inc
or
mov
pop
icebp
jp
push
dec
add
sub
movsb
call
lods
andb
jo
fisubrl
mov
adc
mov
ss
lcall
push
inc
loope
dec
outsb
sahf
mov
or
outsb
or
dec
aas
cmp
mov
jns
call
dec
pop
fnstenv
adc
subl
loop
ljmp
iret
popf
outsl
fnsave
push
lcall
out
sbb
mov
and
mov
ficompl
mov
enter
mov
jmp
cmc
fdivrs
call
or
shlb
push
sbb
sbb
cs
jmp
cmpsl
adc
add
mov
jne
mov
stos
popf
mov
xchg
flds
push
sub
jmp
sub
xor
outsl
jecxz
aas
cld
jecxz
std
push
push
movsl
sahf
negb
sub
or
push
pop
movsb
mov
sbb
pusha
jecxz
fdivl
out
mov
decl
out
sti
mov
jmp
dec
add
cmp
cmp
mov
add
iret
scas
inc
mov
pop
out
dec
xor
out
add
cmp
out
les
cltd
push
push
fs
nop
jns
decl
dec
dec
jnp
adc
dec
pop
mov
mov
push
or
mov
lcall
inc
and
push
mov
sub
sbb
addr16
in
xchg
sbb
pop
dec
lret
and
xchg
repnz
or
xor
jns
inc
jmp
jae
dec
mov
mov
ljmp
push
dec
shl
and
and
aad
inc
jge
jb
or
and
pop
fs
mov
inc
sahf
bound
mov
mov
in
mov
lds
inc
xor
inc
outsb
cld
add
xor
in
push
jecxz
inc
pop
xchg
lcall
scas
jb
divl
pop
mov
fisttps
lcall
lods
loopne
dec
test
call
lea
dec
out
add
fstp
push
cmp
and
fdivs
sbb
push
mov
push
adc
sub
iret
call
daa
xor
ja
mov
jo
cmc
inc
jmp
adc
jp
lcall
scas
dec
jg
fldt
add
loop
xor
imulb
xchg
stos
push
sbb
decl
push
xor
mov
mov
movsb
inc
cmp
test
rcl
or
out
pushf
lcall
ret
stos
adc
mov
inc
cmp
cmp
xor
mov
in
mov
push
sbb
sti
dec
out
cld
loop
ja
dec
lock
pop
imul
mov
movb
pushl
sub
cltd
push
fwait
int
dec
and
bound
aaa
cli
jb
test
mov
push
incl
dec
rcll
mov
pusha
sbb
sbb
mov
ljmp
incl
fsubl
cmp
adc
stc
pop
roll
lea
call
push
mov
pop
test
ret
dec
mov
push
inc
sbb
xor
out
repz
incl
sub
cmp
sti
xchg
push
sub
stc
stc
andb
stos
bt
std
mov
ss
imul
mov
sar
lahf
mov
sub
mov
jne
out
cmp
mov
scas
pop
loopne
push
pushl
js
imul
cmp
cmp
cmp
imul
jmp
sub
inc
sbb
outsl
xor
or
add
cmp
mov
push
call
xchg
xchg
rcr
dec
ret
and
outsl
imul
jb
or
lcall
lcall
loope
nop
and
inc
add
dec
popa
pusha
in
xchg
jb
negb
je
mov
push
pop
mov
xchg
sbb
lock
in
rorb
into
mov
fnsave
jp
or
insl
stos
jno
mov
mov
outsl
jb
ds
lret
mov
lcall
into
or
loopne
mov
fdivr
cmp
nop
aad
sbb
outsl
mov
pusha
mul
cltd
xchg
xchg
testb
iret
int
aaa
mov
dec
add
pushl
sbb
in
sub
pmulhw
das
lcall
xchg
xchg
out
and
pop
or
ss
jecxz
mov
adc
jmp
mov
jae
push
cmp
lock
call
pop
cwtl
cmc
cmc
adc
ljmp
cwtl
imul
dec
cmp
or
inc
div
sub
cli
aam
pushl
testb
and
push
mov
lret
int
pop
insb
mov
push
in
std
setnp
push
pop
ljmp
movsb
popf
call
aas
jb
jo
cs
pop
ja
dec
pop
and
jo
incl
dec
pop
pop
lahf
loope
pusha
cmp
sbb
shrb
mov
xchg
stc
cmpsl
loopne
lcall
push
cwtl
int
into
movsl
mov
ret
imul
ss
dec
fimuls
enter
inc
ds
sub
in
stos
jne
push
test
sub
pop
pusha
xorb
scas
xorb
lcall
xchg
and
dec
fisubl
inc
fldl
std
int
in
add
ljmp
flds
inc
cmp
jmp
ja
mov
cmpsb
out
fdivl
ret
lods
mov
loop
and
test
out
mov
xorb
inc
push
fwait
ss
pushl
xor
xlat
mov
push
jo
mov
aad
test
insb
lods
push
adc
orb
dec
je
call
dec
push
dec
sbb
jo
mov
fildl
ds
push
idiv
call
inc
mov
shll
push
or
cmp
jne
mov
enter
jns
dec
ljmp
xor
stos
adc
xchg
leave
in
icebp
xchg
loop
cmp
call
add
scas
push
xchg
mov
lahf
test
rolb
sub
test
mov
loopne
xor
sub
mov
int
xchg
std
ljmp
jbe
pop
cmp
ds
sbb
xchg
sbb
lret
mov
add
xlat
jmp
insb
xchg
jno
xor
js
push
push
and
incl
sub
push
xchg
dec
mov
gs
adc
test
xchg
mov
jle
xchg
fmull
call
pop
push
in
sbb
pop
cltd
inc
jmp
lahf
inc
xchg
add
cmc
in
and
in
cmp
call
or
daa
fdivp
adc
arpl
ljmp
cmp
xchg
out
lock
dec
xchg
cltd
mov
inc
in
aaa
mov
stc
pop
js
adc
jnp
cmp
decl
pop
mul
adcl
xor
outsb
xor
xchg
push
repnz
pushl
cmp
cmpsb
cmpsb
loope
aam
mov
orl
fwait
pop
xchg
enter
flds
repz
decl
jp
jp
stc
arpl
inc
mov
ja
jge
js
jle
cltd
int
decl
cmp
mov
aas
or
adc
push
data16
or
decl
push
mov
in
mov
inc
call
testb
jecxz
mov
arpl
inc
cmp
xchg
test
pusha
out
imul
push
xchg
out
mov
stos
mov
incl
jne
movb
inc
test
inc
sub
cwtl
fldenv
dec
mov
les
incl
lahf
add
fsub
jae
cli
in
mov
fldcw
push
rcr
popf
icebp
stos
or
dec
or
cmpb
cmp
fcoms
jbe
dec
fldenv
pop
or
out
sbb
xor
sub
data16
mov
pop
mov
loope
jo
outsl
lahf
xchg
cmp
cwtl
jb
sub
and
testb
and
jns
cmp
jns
pop
lods
ljmp
pop
mov
addr16
sub
aas
cld
sbb
cmpsl
xor
add
decl
call
or
mov
pusha
ljmp
ljmp
dec
pop
in
jno
or
inc
mov
decl
mov
push
imul
add
lock
add
les
push
stos
leave
jg
ror
hlt
in
das
mov
mov
cmp
push
adc
sbb
aad
dec
decl
andb
push
ds
jne
sbb
or
cmp
rol
rcrb
sub
mov
ljmp
xchg
fnstsw
jmp
mov
rcrl
iret
add
sti
push
sbb
mov
int3
xor
call
bound
jmp
mov
repnz
pop
les
and
call
int3
xorl
in
rorl
sbb
push
leave
sbb
outsl
sbb
xchg
sub
mov
fadd
fsubs
mov
daa
in
jb
bound
xor
ds
addr16
inc
xor
fcomip
mov
loop
add
js
pop
pop
int3
rorb
pop
cmc
cmp
mov
adc
sahf
lcall
and
cs
lods
add
dec
imul
fs
rolb
in
lcall
sbb
leave
and
mov
jecxz
xchg
mov
mov
test
repz
jle
pusha
jmp
movsb
les
pusha
cmpsl
mov
or
in
xchg
xor
repnz
loopne
scas
dec
jmp
and
xchg
js
xchg
mov
pushf
add
cmp
popa
in
sub
lcall
inc
dec
mov
dec
in
shlb
sbb
in
mov
fmull
cmp
and
dec
test
lret
mov
in
test
repnz
sub
outsb
scas
inc
sbb
lahf
jmp
orb
xor
or
or
mov
push
mov
add
ljmp
mov
sbb
ret
pop
sarl
std
cmc
es
xor
pop
arpl
push
dec
sub
ret
fistpl
push
inc
add
pusha
push
jmp
push
inc
shl
xchg
xor
fucomi
jge
idivl
cmpsl
dec
arpl
jmp
push
push
and
cmp
push
sub
xchg
sbb
jmp
and
lahf
xchg
js
jno
xor
insl
xor
in
mov
or
lcall
push
lods
mov
hlt
mov
sub
or
inc
sub
vcvtps2pd
add
pop
pusha
push
push
rcll
xor
xchg
pop
arpl
ljmp
daa
dec
cltd
jnp
fidivrl
in
bound
mov
pop
hlt
pop
stos
repz
repnz
add
stos
push
push
int
cmp
and
call
lret
cli
mov
jmp
fwait
negl
imul
jo
or
aas
dec
add
jne
jle
sti
mov
add
add
mov
popl
jb
jb
aam
popa
jae
scas
xchg
jmp
cli
test
xchg
push
andb
repnz
pop
icebp
mov
negb
dec
gs
cmc
push
mov
aas
ja
sub
add
add
lds
aad
fdivr
cmp
in
dec
jo
lcall
lea
lods
les
xchg
or
pop
call
lahf
sub
adc
cmp
xor
jecxz
jp
dec
fdivrp
xor
cltd
or
fisubrs
dec
add
inc
pop
adc
incl
mov
dec
repz
fdivr
fs
or
pop
sbb
inc
aad
push
pusha
jnp
pushl
xchg
vminss
pop
ret
dec
aad
dec
pop
mov
mov
and
mov
fistpll
outsl
inc
cli
push
lods
in
inc
mov
lret
inc
push
jp
pop
or
call
and
xchg
fldcw
dec
popf
lds
pop
outsb
xchg
test
dec
add
incl
fmuls
ss
pop
leave
in
inc
nop
push
xchg
daa
mov
dec
push
inc
pop
or
shl
or
inc
sub
inc
loope
sbb
inc
add
addl
ja
jne
push
push
out
incl
nop
or
mov
push
leave
xchg
push
repnz
dec
inc
leave
sub
popa
adc
decl
faddp
into
jne
jecxz
popa
mov
sub
into
shll
addr16
add
inc
adc
xchg
mov
and
push
sti
jns
fistps
jns
sarb
cli
fs
fisubl
jb
shrb
mov
xchg
mov
mov
hlt
es
jnp
lds
dec
sti
fdivrl
sub
xchg
dec
mov
repnz
enter
call
and
inc
jge
push
inc
add
test
dec
mov
push
xchg
sti
ds
jmp
ljmp
mov
fistl
push
nop
test
and
push
lds
cmpsl
push
decl
pop
mov
sbbl
jae
nop
xor
xor
aad
shlb
mov
fcoms
jg
scas
mov
aam
fadds
imul
sbb
push
iret
stos
fcmovnbe
out
mov
dec
inc
xlat
aas
pop
lret
xchg
cmp
pop
sub
loop
sbb
cmp
ds
jge
inc
aam
std
cld
cmc
aam
cmpl
stc
xor
jle
jmp
ret
cmp
adc
ficoml
lret
or
mov
addr16
dec
adc
lret
test
jle
jmp
addr16
mov
outsb
fwait
jle
imul
pusha
aad
std
inc
xchg
out
pop
cmp
inc
out
mov
call
pop
jge
fbstp
out
idivb
lret
aad
mov
jmp
lods
test
mov
mov
lcall
stc
movb
dec
xor
fxch
imul
call
jmp
inc
cmp
adc
int3
inc
call
sbbb
decl
jge
sbb
idivb
loop
xor
inc
pushf
jl
pop
out
and
stos
push
add
jb
jo
jmpw
lea
fsubl
mov
lds
lcall
call
cmp
add
inc
cmp
or
das
push
mov
decl
mov
in
icebp
imul
add
stos
popa
shl
inc
call
cmc
das
sbb
fldcw
mov
xchg
stos
push
iret
pushf
jl
mov
mov
movsl
jb
arpl
imul
mov
and
sub
ljmp
imul
out
enter
shll
dec
in
and
rcl
out
jo
ss
decl
lods
insb
pop
cmc
cmpsb
adc
sub
js
cld
adcb
popf
pushl
out
mov
call
lret
out
adc
inc
xchg
iret
xchg
push
sbb
xchg
pop
and
icebp
or
xchg
lcall
jno
cld
cmpl
fcomps
cmc
pop
lods
jle
pop
or
lods
mull
sub
cmp
or
add
xchg
mov
mov
jo
xor
bound
mov
jno
push
sahf
repz
repz
and
aam
sbb
sbb
fdivr
jbe
push
movsb
xchg
inc
incl
popf
mov
mov
jno
jle
popf
add
dec
mov
and
inc
fst
xchg
inc
cmc
in
mov
pusha
or
data16
shrl
subb
adc
ret
jb
pusha
insb
xor
jmp
sbb
test
pop
aas
cmc
std
repz
xchg
ljmp
lods
ret
cli
clc
iret
xor
xor
sbb
adc
lds
adcl
call
mov
push
repnz
clc
pop
or
lret
sbb
cmpsb
xchg
outsl
jl
cltd
stc
inc
jmp
dec
orb
lcall
mov
push
mov
cmp
mov
jg
das
in
jecxz
pop
aaa
in
sub
add
cmp
shrb
inc
mov
pop
lods
dec
cwtl
ret
pushf
mov
lcall
pop
sub
scas
xchg
xchg
sbb
cld
push
jp
in
cmp
add
sub
iret
push
notb
mov
mov
sub
sti
imul
test
mov
ljmp
fiaddl
inc
dec
inc
add
lds
mov
mov
xor
mov
decl
sahf
movsb
outsl
cwtl
xchg
imul
hlt
mov
mov
sbb
push
cli
inc
nop
call
jmp
jmp
jmp
or
test
stos
jns
lds
dec
and
js
ror
xchg
call
es
aas
call
push
andb
xchg
in
adcb
sarl
movsb
pop
cmp
loop
arpl
jmp
into
push
sahf
inc
pushf
adc
add
dec
mov
pop
and
push
pop
mov
insb
mov
push
inc
popf
imulb
mov
imul
fbstp
lock
sub
negl
clc
xchg
and
jle
ljmp
iret
sbb
xchg
mov
sbb
xchg
cmp
jns
add
js
bound
add
pushl
adc
sbb
xchg
adc
lods
mov
or
add
popa
mov
repz
ljmp
and
mov
inc
pop
leave
cs
shrl
add
popf
cwtl
inc
mov
out
xor
jbe
call
add
in
xchg
jbe
push
lods
and
jnp
sbbb
daa
js
mov
mov
adc
sbb
mov
push
cld
dec
mov
scas
arpl
mov
cld
pop
mov
add
push
pusha
cmp
arpl
lret
stos
jle
sbb
lcall
lea
dec
test
cmp
or
and
in
clc
adc
hlt
push
cld
mov
push
fcomps
out
sub
push
shll
sub
stos
fstpl
dec
pop
sbb
xchg
ret
push
faddp
cmp
xor
loop
jb
push
movaps
cli
sbb
es
faddl
pop
push
sahf
inc
ret
decl
popf
mov
mov
cmpl
int
or
in
or
jmp
sbb
je
jbe
mov
xchg
jle,pn
dec
mov
pop
sbb
adc
lcall
push
loope
xor
adc
imul
je
xchg
lret
adc
or
mov
pushl
test
jne
dec
cmc
negb
je
loopne
sbb
lds
sar
cmp
jbe
xchg
pushf
push
scas
or
xor
xchg
mov
out
outsl
or
iret
jl
jmp
push
or
cmp
jg
aaa
dec
pop
dec
push
lahf
stos
mov
xchg
movsl
lods
cmp
fdivr
inc
adc
out
sbb
imul
dec
add
xchg
and
inc
dec
jns
sbb
incl
stc
cmp
ret
stos
or
dec
push
sub
dec
insb
mov
stos
aam
in
push
cltd
xchg
pop
cs
ljmp
jge
jp
dec
push
aas
scas
pcmpgtw
or
addr16
push
lret
inc
loopne
call
call
push
push
cmpsl
aam
test
sub
in
mov
push
outsl
nop
cmp
scas
das
and
jg
scas
add
push
pop
mov
dec
pop
and
test
movsb
mov
mov
jmp
pop
fiadds
mov
pop
fildl
mul
jno
pushw
popa
mov
mov
cmp
dec
subl
mov
sbb
aam
cmpsl
sub
ficomps
mov
incl
jno
inc
pop
in
imul
mov
cmp
mov
cmpsb
xor
mov
and
inc
testl
push
sbb
add
push
cwtl
neg
cmp
iret
aad
mov
jns
add
movsb
jne
sldt
adc
sbb
add
xor
mov
outsb
add
jne
incl
les
shlb
sub
push
jo
hlt
cs
add
pop
dec
scas
or
ljmp
mov
add
and
sub
fbstp
and
cli
xlat
jb
cwtl
pop
dec
cmp
cmp
jae
mov
xchg
xor
adc
mov
xor
adc
inc
jl
decl
ds
and
mov
shlb
adc
cmp
mov
test
inc
fbld
jg
or
orl
push
mov
or
add
sub
sahf
movsl
push
push
push
ficompl
xor
dec
mov
and
push
pop
call
loope
lock
call
repz
mov
mov
jb
add
enter
scas
stc
je
sub
push
dec
push
dec
push
push
movsl
rcrl
pop
loop
mov
xor
xor
pop
add
pop
nop
pop
push
incl
mov
scas
les
push
jmp
bound
outsb
pop
cmp
and
cmc
add
inc
sbb
or
decb
movsb
fwait
inc
lret
and
cwtl
and
fwait
popl
sub
call
sub
lret
imul
sbb
les
idivl
mov
fcmovnu
stos
adc
leave
lret
or
stc
dec
pop
lea
sbb
scas
fmuls
mov
mov
fldcw
jecxz
cmc
cmp
pop
add
call
js
xchg
daa
cli
lcall
imul
sub
pop
int3
or
mov
mov
das
adc
cmp
jno
repz
add
push
in
lea
das
outsl
js
insl
into
gs
or
lcall
adc
addr16
mov
cmp
sbb
push
lock
xor
fdivl
jl
push
out
dec
xchg
sbb
and
movsl
and
push
imul
xor
jge
ljmp
int
jmp
pusha
jno
cmc
sub
inc
mov
rcrb
repz
dec
pop
inc
xchg
ficompl
addr16
adc
les
xor
dec
leave
dec
incl
aaa
iret
jge
aam
xlat
testl
loopne
fisubrl
cli
adc
mov
scas
es
jmp
jae
lcall
mov
icebp
cltd
sti
mov
ss
inc
mov
fsubr
test
mov
cmpsb
adc
jp
sbb
aam
imul
shll
push
sub
decl
xlat
lods
jmp
data16
inc
ret
adc
mov
xchg
rorl
jmp
xchg
jnp
jne
and
dec
dec
mov
cwtl
in
out
loopne
popa
stos
and
outsb
aas
push
mov
push
lea
repnz
decl
xor
jbe
ret
sub
test
sbb
out
lahf
bound
jmp
ret
and
dec
xchg
je
and
cmp
or
icebp
rcrb
lret
push
enter
cmp
sti
push
adc
lock
mov
subl
or
inc
push
sub
orl
push
call
andl
nop
lret
sbb
push
pop
sub
xchg
fiadds
leave
insl
in
xchg
inc
pop
mov
aad
repz
sbb
mov
or
out
mov
sub
decb
xchg
mov
mov
cmp
xor
loop
pushf
dec
mov
ja
xor
mov
mov
call
stos
add
push
adc
gs
int
popf
out
test
mov
dec
lahf
mov
jmp
sti
mov
push
call
inc
cltd
sub
ss
std
lock
ror
ljmp
sbbb
jmp
fstp
mov
push
test
mov
outsl
inc
mov
cli
fimuls
or
and
incl
adc
pop
mov
insb
out
and
mov
xlat
icebp
iret
into
xchg
ss
inc
push
ljmp
and
mull
cmp
inc
pushf
pop
leave
jbe
cmp
jns
sub
inc
add
inc
cs
rclb
aaa
pop
inc
or
xchg
push
fistl
aas
mov
xor
leave
sbb
add
sti
dec
add
mov
mov
mov
add
cltd
adc
ljmp
outsl
mov
pop
dec
sub
ljmp
sub
mov
lret
sahf
ret
xorb
out
adc
push
test
or
sub
ffreep
leave
and
mov
cmc
cli
in
mov
add
sar
inc
add
lcall
dec
jnp
aaa
mov
fbstp
je
rcrl
stos
xor
xchg
lcall
ja
cli
hlt
mov
mov
aam
insb
lcall
jae
jl
fdivr
push
sbb
jg
and
jmp
std
nop
test
push
fldpi
jl
jecxz
cwtl
fwait
add
mov
ljmp
sub
lock
popa
xchg
in
mov
sub
mov
jmp
dec
out
mov
push
lea
or
sub
push
fwait
xchg
les
stos
gs
outsb
stc
fcoml
sub
fsubrs
jb
repz
in
inc
nop
dec
inc
push
pop
mov
xor
xchg
cmp
pushl
add
xor
data16
repnz
lahf
stos
mov
sub
mov
xorb
call
cmc
ficoms
push
or
push
fs
mov
jl
shlb
arpl
mov
insb
dec
and
aas
dec
mov
adc
lock
aas
sbb
cmpsb
fdiv
push
icebp
lcall
inc
sbb
decl
into
mov
adc
mov
movsl
inc
rorb
sbb
xchg
icebp
test
jmp
rolb
add
in
dec
ficompl
xor
hlt
add
in
and
push
divb
inc
into
outsb
add
jmp
fbstp
lock
data16
je
mov
loop
inc
arpl
adc
push
shlb
cmp
xchg
fiadds
inc
fs
pop
dec
nop
lods
adc
pushf
and
jge
shll
incl
lcall
sti
inc
sub
nop
mov
xchg
xor
jnp
mov
sbb
mov
movsb
xchg
sbb
push
arpl
jle
adc
mov
mov
jmp
test
push
xchg
sub
rcrb
jge
insb
mov
or
add
divb
push
or
sbb
cmc
xor
mov
pushl
sbb
inc
rclb
movsl
add
mov
cmp
adc
adc
mov
xchg
xchg
dec
pushl
mov
inc
jmp
ret
sub
loopne
pop
sub
fldl
fmul
decl
mov
jns
adc
xchg
nop
mov
add
pop
push
dec
xchg
push
cmp
mov
test
decl
rorb
mov
scas
clc
push
adc
loop
adc
ud0
pushl
sarl
shlb
pusha
mov
cmp
popa
sbb
mov
push
movsl
loope
sbb
call
stos
addr16
push
inc
cmp
xchg
test
negl
push
lahf
jbe
cwtl
mov
push
jmp
in
out
mov
add
shrb
cmp
cmp
inc
icebp
andl
jl
outsl
lock
leave
lods
sar
dec
jae
jne
leave
sbb
repnz
imul
xchg
sbb
inc
mov
push
ljmp
xor
cmpsl
xchg
mov
sar
xlat
iret
push
fwait
icebp
lods
xchg
xchg
cmp
and
and
mov
jge
xchg
push
aam
or
ret
sbb
pusha
jne
xor
dec
dec
lahf
lret
dec
out
pushl
je
ljmp
jns
mov
and
test
xorb
push
aaa
sahf
inc
call
shlb
cmp
push
jmp
push
jnp
arpl
cwtl
push
aaa
sub
testb
daa
mov
pop
lcall
call
jns
mov
fmull
repz
xor
js
mov
bound
mov
stos
pushf
add
mov
or
decl
aam
push
test
mov
lahf
cmpsl
arpl
stos
ja
pop
and
pop
dec
add
sbb
xchg
outsl
push
cmpsb
dec
stos
and
ss
sbb
mov
adc
into
mov
outsl
or
xchg
outsl
out
roll
call
push
push
in
mov
cltd
std
push
pop
outsl
cmpb
sbb
jnp
sub
incl
fwait
outsl
fwait
xchg
fldt
repz
jl
cwtl
and
ret
jp
icebp
scas
out
adc
jmp
pushl
testl
xor
pop
push
and
xchg
pusha
mov
inc
sbb
pushl
leave
cmp
lods
outsl
push
aam
push
sbb
sar
les
ds
clc
test
fcomps
pop
mov
ss
test
sub
aam
nop
jl
mov
cs
sub
std
lcall
push
roll
jno
xor
xlat
ss
sbb
jl
mov
mov
cmp
and
inc
mov
xor
push
add
push
jns
cld
xchg
mov
inc
sub
lods
mov
mulb
xchg
incb
aad
cmp
cld
push
cmp
ljmp
xchg
push
call
popa
mov
idivl
shl
xchg
in
mov
lcall
psraw
subb
dec
jp
fmuls
pop
pop
cld
sub
sarl
sub
shrl
and
jb
pop
or
enter
ja
add
cwtl
mov
xor
mul
sub
ljmp
arpl
dec
das
pop
push
arpl
pop
sub
adc
and
loop
leave
cld
xlat
bound
aas
xchg
mov
jge
mov
imul
or
loopne
push
inc
mov
imull
pushl
jecxz
mov
adc
push
aaa
fwait
mov
and
xchg
jg
and
frstor
xor
inc
mov
cmp
sbb
push
xchg
lret
inc
cmp
cmp
call
cmp
rcll
add
pop
imul
daa
add
mulb
mov
mov
pop
adc
loop
in
xchg
orl
xor
or
decl
or
rclb
paddw
decb
insl
sub
adc
mov
movsl
sbb
add
decl
push
in
ss
insl
popf
negl
jmp
pop
cmc
test
inc
push
js
jb
jmp
pop
add
mov
adc
mov
or
add
ds
je
clc
call
inc
push
jbe
dec
mov
cwtl
mov
adc
rcrb
pop
dec
repnz
mulb
pop
mov
call
inc
subb
xlat
decl
adc
adc
mov
pop
cs
daa
push
loop
pop
ss
cld
aam
jmp
inc
test
mov
mov
ljmp
dec
xchg
ja
push
push
loope
cmp
stos
enter
mov
xchg
test
push
inc
icebp
ljmp
es
rorl
sbb
lea
pop
pop
jge
and
add
stc
push
incl
aaa
mov
xchg
mov
adc
cmp
outsb
lock
push
into
xchg
in
test
ljmp
mov
out
scas
addl
jmp
enter
outsl
sub
jns
decl
sbb
jecxz
ret
test
push
sbb
pop
sar
pushl
pushf
int
inc
fisttps
adcl
xor
ja
lock
add
mov
pushl
arpl
lea
jp
jmp
push
jo
cmp
dec
sub
pop
cs
cltd
jnp
fimull
das
xor
bound
int3
inc
push
das
icebp
sbb
movsb
pusha
mov
mov
incl
or
mov
call
mov
and
call
push
pushf
xchg
xchg
rcl
and
mov
add
cmpsl
push
popa
mov
loopne
cwtl
xor
sbb
mov
imul
out
lock
std
or
xchg
ss
pop
add
movsb
iret
cmp
movsb
xchg
int3
adc
mov
roll
jge
mov
or
sbb
dec
ret
cmpl
fwait
pop
test
shrb
cmp
jmp
pushf
push
in
inc
xor
shrl
testb
pushf
mov
add
mov
jmp
outsb
les
xchg
jp
mov
or
dec
test
shll
mov
ljmp
mov
testl
adc
les
lahf
jmp
push
les
pop
mov
call
mov
fdivp
mov
add
ret
pop
clc
lahf
add
jnp
xchg
mul
sar
fs
jmp
cmp
cmpsl
inc
sti
sub
js
fistpll
int3
inc
jl
out
lahf
sub
stos
inc
rorl
xor
lcall
cmp
mov
negl
xchg
insb
sbb
pusha
popa
mov
add
jo
dec
pop
push
out
cmp
scas
mov
arpl
adc
dec
mov
movsl
push
ds
cwtl
jne
fbstp
call
ds
cwtl
clc
mov
pop
fwait
xchg
fidivrs
fisubs
adcb
inc
std
arpl
mov
mov
ljmp
pushl
inc
jb
dec
pop
int
in
je
sub
mov
test
dec
or
fbstp
aaa
jb
and
fistpl
cmpsl
or
sbb
and
fisubs
lcall
and
incl
pusha
leave
adc
sbb
dec
xlat
mov
sbb
int
in
cs
jbe
lods
les
pusha
xlat
iret
mov
inc
or
push
jge
mov
sub
lret
rol
jp
fdivl
lret
andl
int3
cmp
dec
in
ss
in
fisttpl
pop
shll
daa
sub
mov
popa
bound
in
ljmp
pop
sub
aad
popa
pop
lret
lcall
mov
sub
call
adc
orl
dec
out
in
lret
iret
and
dec
xor
mov
mov
in
cmp
pop
and
cmp
imul
enter
adc
sub
dec
mov
int
orb
insb
jl
loop
fsubl
lret
cwtl
enter
cmp
negl
pop
add
xchg
sbb
add
mov
xchg
dec
mov
xchg
adc
cmp
fsubs
xchg
int3
popf
std
je
dec
sub
jmp
mov
fsub
imul
subb
mov
or
call
push
into
xor
mov
pop
iret
mov
aam
cmp
test
pop
adc
incl
sub
int3
lret
data16
in
lcall
mov
adc
jae
xor
push
int
jl
lcall
es
ds
ficomps
fists
std
insl
pusha
mov
sar
jmp
test
cmc
inc
in
clc
hlt
sub
mov
in
cwtl
inc
inc
aas
ret
jns
icebp
movq
test
aam
call
add
pop
rorl
xchg
push
sub
push
mov
jecxz
or
push
sub
out
mov
imul
lcall
add
sarl
adc
pusha
stc
fwait
inc
testb
or
inc
fbstp
or
in
or
inc
bound
ret
gs
dec
xor
pushl
jle
adc
jno
icebp
movsl
js
cmc
mov
push
in
insb
out
xchg
xor
decl
inc
dec
xor
jno
fdivrs
and
jmp
gs
jbe
fbld
push
mov
cmp
cltd
pop
in
mov
or
sbbl
pop
data16
movd
cltd
pop
pop
enter
incl
in
pop
and
pop
fstl
jl
std
push
or
in
mov
incl
aaa
addr16
pop
xchg
jg
mov
ret
int3
sti
pushf
mov
inc
data16
cmp
sub
jbe
pushl
jnp
push
adc
aam
loop
jmp
pop
push
or
sub
or
lcall
pop
lret
out
hlt
dec
cmc
or
add
shrl
repz
mov
and
out
inc
lcall
aas
or
fcoml
or
outsl
out
cmp
out
scas
stos
xchg
outsl
ljmp
scas
imul
jecxz
cmc
sbb
ret
inc
dec
jp
lods
cltd
test
lcall
decl
mov
sbb
sub
scas
lock
stos
fs
aaa
push
ljmp
lcall
jbe
or
jne
mov
xchg
lock
adc
outsb
push
or
or
push
icebp
into
cmpsl
cwtl
mov
dec
jne
out
out
xor
push
pusha
push
mov
incl
aas
aaa
aaa
daa
mov
inc
add
ja
sbb
fcmovu
push
xchg
decl
mov
push
dec
clc
insl
cli
mov
xchg
mov
pop
pop
enter
clc
icebp
inc
xchg
leave
imul
inc
add
xor
push
out
enter
dec
test
jmp
das
fisttpl
cld
subb
fmull
jo
call
mov
ljmp
f2xm1
jmp
int
or
xor
pop
sub
aaa
loop
mov
decl
mov
les
mov
cmp
sbb
outsl
xchg
cmp
push
mov
mov
push
nopl
dec
fsubrl
arpl
in
mov
rorl
jp
jle
sbb
inc
stos
dec
fcomp
into
xor
jecxz
and
repnz
stc
aaa
sub
xchg
xchg
ficoml
mov
fs
or
clc
xchg
dec
pop
fildl
pushf
mov
inc
scas
out
sbb
incl
inc
push
outsb
fwait
xor
cltd
aad
daa
xchg
ficompl
mov
adc
cmp
call
aad
lods
mov
ja
hlt
and
in
test
inc
bound
ret
inc
pop
push
or
aas
orl
into
daa
cmp
nop
ljmp
mov
ljmp
sbb
ds
pop
push
cmc
movsl
push
scas
cmp
dec
jg
cmpsl
outsb
adc
ret
decl
out
and
out
lds
adcl
push
jle
cli
cltd
cld
adc
lcall
adc
dec
push
adc
iret
mov
stos
popw
mov
loope
xchg
aaa
incl
pop
aad
mov
xor
jmp
xor
data16
xchg
pop
inc
jo
fisttpl
lar
das
in
mov
call
jmp
dec
enter
jmp
jne
or
pop
stc
shlb
nop
xchg
jmp
fwait
ret
out
xchg
shlb
push
jno
test
lret
in
aad
add
or
dec
jecxz
mov
mov
sbb
adc
mov
ljmp
dec
pop
addl
pushf
push
cld
arpl
arpl
adc
rclb
dec
decl
enter
pop
xchg
jo
loop
xchg
test
test
mov
push
jno
add
cmp
cs
in
stc
or
dec
add
xor
add
shrl
or
repnz
loopne
mov
ja
jmp
aaa
cmpsl
pop
test
test
xchg
cmp
filds
jl
lds
xor
daa
mov
xchg
es
fistl
fists
jnp
dec
leave
and
xlat
int
jle
lcall
ds
xchg
data16
ja
icebp
fsts
cmp
mov
ds
xchg
cmp
dec
sbb
and
mov
mov
mov
out
ljmp
fisttpll
popf
aas
mov
jl
incl
nop
shlb
jecxz
sub
dec
std
pop
add
popf
jge
ret
jl
jge,pn
fidivl
call
cmpsl
mov
addl
xor
jae
test
in
shll
jp
fidivl
sarb
cmp
mov
jle
lds
adc
stc
mov
cwtl
xchg
scas
sarb
xor
shll
dec
mov
movsl
sub
outsb
pop
mov
loopne
xchg
push
push
xlat
pushf
inc
jo
jl
or
or
jge
add
loopne
cmp
add
dec
cmp
xorb
fnstcw
mov
sbb
add
sahf
push
dec
cmc
movsb
bnd
jmp
mov
inc
ljmp
push
lods
sbb
stos
mov
out
repz
push
adc
jb
jmp
push
mov
das
sbb
mov
leave
pop
addr16
add
iret
dec
pop
adc
xor
cli
and
sub
jge
bound
out
scas
jne
add
daa
idivl
mov
in
out
dec
ljmp
incl
adc
movsb
stos
sub
mov
adc
adc
xlat
cmpsl
and
adc
decl
lods
iret
mov
stos
cwtl
jecxz
loope
mov
cmp
push
or
jne
cmc
nop
call
je
stc
jb
int
stos
pop
fcompl
adc
adcb
sub
mov
push
cmp
jne
lret
int
add
popa
pop
out
xchg
dec
fisubs
mov
ljmp
dec
and
pusha
jge
cmp
sub
cmp
cmp
mov
hlt
cmp
pop
xor
faddl
fnstsw
xor
sti
scas
stc
or
out
dec
jge
dec
cmp
ss
cmp
and
call
mov
lods
push
pushf
cmp
inc
sbb
in
ret
pop
stc
sub
inc
aad
dec
test
stos
ficoml
sbb
js
int
mov
sbb
into
xchg
xchg
lahf
jle
jg
dec
insl
lret
jnp
jmp
pusha
cld
xchg
pop
push
ss
mov
std
in
flds
adc
das
cmp
or
pop
or
mov
fildll
xchg
xchg
andl
mov
inc
push
sbb
sti
fsts
cld
addr16
fcmovnu
sbb
add
out
ss
ret
in
cld
hlt
dec
inc
leave
popa
stos
loope
xchg
cmp
xor
incl
stos
cmpsl
jl
mov
mov
sub
in
inc
out
mov
test
cltd
call
ficomps
in
mov
sbb
adc
nop
pop
ss
sub
inc
out
pop
insl
nop
sbb
call
jg
or
sbb
ja
in
das
xor
pop
divl
insl
mov
clc
das
inc
inc
icebp
jmp
jg
push
jmp
cltd
ret
xchg
pushl
push
xor
pop
pop
ret
cltd
or
xchg
and
sbb
mov
into
lods
hlt
call
pop
cwtl
in
cmp
into
mov
pop
inc
fisttps
mov
mov
cmpsl
adc
adc
call
jbe
stos
push
and
cmp
mulb
adc
mov
fsubrs
popf
gs
lods
xor
jmp
cs
fisubl
shr
or
mov
enter
jbe
xor
lahf
out
jp
call
xor
or
andb
popf
fwait
into
and
rorl
lahf
push
ljmp
cmc
xchg
std
mov
mov
xor
xchg
mov
ja
ljmp
arpl
popf
lock
insb
cmp
inc
aas
cmp
push
push
bound
mov
mov
ljmp
push
adc
pop
mov
push
ja
mov
push
movsb
fidivrl
sub
push
ljmp
push
sub
stos
xor
pusha
xor
in
lahf
sti
mov
push
push
xor
loope
jmp
fildl
movsb
imul
insb
jge
xor
bound
lahf
xor
outsb
xchg
int3
and
call
test
dec
cmpl
into
mov
sub
mov
push
aaa
iret
xchg
sub
xlat
push
or
call
pusha
jmp
xlat
push
sbb
xor
push
add
gs
into
iret
mov
xor
pop
call
or
push
add
mov
fistps
dec
pop
fstpl
fadd
fiaddl
mov
incl
sahf
jae
pop
adc
mov
mov
mov
or
mov
cmp
call
xor
or
das
dec
rol
in
push
xchg
cltd
sbb
ljmp
or
roll
adc
mov
repz
cmp
jg
ss
push
insl
je
outsl
and
xchg
fwait
mov
js
cmp
add
add
gs
xor
mov
mov
ja
push
pushf
jo
loop
sub
jle
stos
scas
ljmp
arpl
cmp
mov
shrl
mov
ds
out
scas
mov
mov
call
mov
mov
push
imul
add
sub
mov
imul
lret
mov
mov
lret
popa
int3
mov
mov
out
inc
in
ret
hlt
xchg
fs
ss
xchg
jae
jmp
sbb
notb
add
aaa
cwtl
xchg
or
hlt
mov
clc
lret
jecxz
jb
push
pop
sub
icebp
ficomps
fwait
or
test
jge
xlat
das
sarb
push
cmp
movsb
decl
mov
sahf
dec
fsubrl
cmpsl
or
aad
xlat
sbb
add
push
push
cmpsb
pop
cmp
test
int3
aam
dec
jns
movsl
adc
movb
xchg
push
push
fxam
out
cld
outsl
mov
imul
pop
popf
mov
inc
mov
and
mov
ljmp
cmp
sbb
popa
pop
push
inc
pop
adc
out
outsb
jg
fdivl
push
pop
cmpsl
sub
in
mov
stc
decb
call
es
cld
push
test
dec
xor
incl
jmp
mov
clc
dec
inc
cmpsl
fdivr
xchg
dec
lahf
or
push
xchg
mov
jp
lcall
or
insb
pop
inc
je
popf
pusha
call
xor
inc
dec
orl
jle
es
fstps
push
repz
imul
mov
rcrb
push
xor
ljmp
jg
pop
fadds
dec
lds
dec
fisubs
into
fildl
cld
incl
shr
or
xlat
ljmp
mov
lds
pushf
pop
roll
das
fbstp
frstor
test
arpl
dec
dec
jl
in
sub
mov
jae
int3
xlat
lcall
jecxz
push
mov
pop
sbb
mov
bound
in
fdivrl
jno
repnz
push
test
jp
push
cmovo
xchg
fisttpl
mov
sub
add
out
lahf
fdivs
test
nop
inc
call
loopne
jmp
xchg
ljmp
incl
ja
lcall
cmp
iret
shlb
lret
add
testb
xchg
mov
lcall
jle
or
mov
xor
mov
std
add
cltd
jg
sbb
dec
mov
mov
sub
jae
adc
mov
xchg
push
rcrb
aam
test
out
lea
sub
repz
in
jg
cltd
cwtl
jle
test
jmp
ss
jo
pop
mov
cmp
push
sti
mov
mov
ljmp
clc
xlat
cli
shl
call
sub
aad
mov
mov
popa
xchg
mov
jp
dec
pop
out
push
dec
sub
jp
sbb
cld
fistpl
and
jo
or
ljmp
lahf
sub
push
nop
or
in
mov
xchg
pushf
fisttps
je
shl
xor
adc
hlt
ss
cmp
push
insl
jae
fisubrs
mulb
jmp
fildl
jbe
clc
mov
aam
push
mov
pushl
int
jbe
std
xlat
push
dec
gs
mov
and
mov
xor
and
inc
std
pop
or
mov
add
out
or
adc
or
xor
lcall
push
stc
es
xchg
pop
rolb
sbb
mov
psrad
inc
push
push
lcall
add
adcl
int3
popa
adcb
cmp
sub
push
subl
shlb
bound
ja
repz
das
cltd
data16
loop
xor
in
adc
add
jmp
popf
inc
bound
cmp
shll
xorl
mov
mov
shl
push
mov
jnp
in
aam
hlt
mov
in
jae
xlat
test
cmp
inc
jns
xor
push
decl
mov
cmp
mov
sbb
push
popa
scas
call
xchg
xchg
lock
add
movl
mov
fmull
in
stos
xor
pop
and
mov
xchg
lret
outsb
inc
push
fcomi
jle
dec
jns
sbb
jge
outsl
or
inc
sahf
cmpsl
bnd
pop
lret
test
call
repz
call
test
aaa
pop
clc
jo
icebp
test
cmp
or
add
jae
xor
jmp
dec
fildll
in
das
mov
movsb
je
cs
outsb
inc
sub
std
mov
jg
lcall
movsb
sbb
aas
add
aaa
ss
out
fwait
jns
out
cltd
aas
add
call
wbinvd
inc
je
dec
call
inc
in
or
rcrl
fcoml
std
fldcw
les
jno
push
xchg
aas
xlat
adc
cmp
cld
sahf
call
out
adc
pop
inc
popa
call
pop
and
test
dec
mov
dec
cmc
cmp
xchg
jp
ljmp
inc
js
push
xor
fstp
stc
dec
pop
adc
add
scas
adc
popa
andb
ljmp
cmpsl
lcall
aam
sub
cmp
jg
adc
stos
ficoms
decl
addb
vpmadcsswd
mov
outsl
testb
jp
mov
fs
sbb
lcall
pushf
inc
mov
mov
filds
into
dec
lahf
sub
sahf
aad
push
in
fdiv
xor
pushl
popf
stc
imul
popf
cwtl
xchg
mov
int
add
pop
pop
lcall
cmp
jbe
add
dec
push
mov
imul
sti
mul
xor
jge
mov
mov
lahf
popa
cmp
add
add
dec
test
jmp
cli
xchg
or
pusha
jnp
out
xor
rcll
faddl
push
push
ss
adc
inc
ljmp
mov
repnz
test
dec
jo
cmpsb
or
mov
lcall
inc
leave
push
daa
xor
int3
mov
cmp
mov
ffree
arpl
cwtl
lcall
repnz
mov
mov
mov
int3
inc
push
push
inc
adc
stos
rcrb
bound
inc
mov
ret
and
std
xchg
fmulp
iret
roll
sbb
inc
aad
test
pushl
fwait
xor
pop
in
cmp
jno
cmp
dec
push
loope
stc
int3
mov
mov
mov
dec
push
push
or
sbb
pusha
push
sahf
push
mov
loopne
adc
movsl
out
mov
push
sbb
jns
xchg
sarl
into
popl
mov
lcall
jg
push
dec
pop
sub
rcrb
pop
lock
pop
mov
je
dec
repnz
jle
incl
fucomp
je
mov
pop
jge
xor
xchg
rcrl
fsubs
in
outsl
ljmp
mov
dec
negb
stos
mov
dec
faddp
sub
mov
and
lcall
and
jae
outsb
jl
jg
popa
jbe
cmp
xlat
stc
dec
sub
lds
incl
mov
sti
lahf
mov
mov
mov
sbb
lds
pop
pop
inc
mov
push
jecxz
lahf
jb
jg
repnz
popa
out
dec
enter
inc
mov
mov
adc
sbb
dec
mov
incl
jp
pop
jns
jb
ss
push
inc
fucomp
sbb
test
out
xlat
ljmp
dec
mov
call
cmp
cli
mov
cld
divl
or
inc
cmp
mov
inc
cli
repz
testl
pop
les
push
and
mov
lcall
push
test
cmp
ret
ss
push
stos
mov
int
jo
mov
sbb
dec
mov
loop
aad
mov
iret
pop
push
pop
ss
bound
inc
lret
insl
std
sub
add
dec
pop
or
dec
mov
mov
fstps
decl
in
sub
outsb
adc
test
test
cwtl
bound
idivl
popf
orb
xchg
inc
incl
enter
lea
shrb
xor
inc
cmpsb
mov
int3
mov
pop
decl
icebp
jle
xor
out
stos
and
xchg
out
xor
aad
fwait
adc
js
divl
push
pushl
and
add
loopne
ss
je
iret
sub
hlt
pop
sub
aaa
popa
dec
in
in
call
xor
mov
es
mov
pop
sbb
outsl
pop
mov
shl
xchg
call
test
inc
repnz
lss
add
push
sahf
aaa
xor
xchg
xchg
stos
scas
movl
repnz
push
movsl
in
test
adc
mov
xchg
std
or
ret
into
jmp
fldenv
cmp
pop
push
pop
mov
and
hlt
test
andl
sbbb
cltd
pushl
mov
sbb
les
scas
in
mov
pop
add
int
lahf
mov
in
rorb
and
and
test
push
stc
popa
cmp
pushf
mov
jbe
jmp
cmp
push
jbe
cmpsl
inc
insl
fs
movsb
xchg
push
and
enter
call
fnstcw
xor
dec
mov
cmc
add
dec
mov
mov
pop
call
mov
dec
lods
inc
jle
pushl
mov
je
cwtl
mov
xor
clc
inc
fcoms
pop
dec
mov
fstpt
xlat
repnz
pushl
push
mov
sbb
sbb
mov
fs
push
out
out
jne
call
sub
xor
insb
cli
mov
repz
mov
aas
inc
cld
cmp
jg
inc
movsb
sub
cmpsl
cmpsb
push
lock
jno
inc
or
js
xor
call
testl
sti
cmp
loop
outsb
jmp
mov
in
mov
call
and
into
pop
pop
mul
or
sub
fcomps
andl
call
fists
xchg
outsb
scas
mov
mov
dec
pop
mov
push
daa
sbb
cmp
aaa
notl
decl
lcall
mov
daa
mov
mov
insb
mov
lret
jo
scas
ljmp
fadd
mov
stos
cmp
mov
fidivrl
fmuls
loope
lcall
jae
ror
xchg
sarl
lock
adc
cmp
add
xchg
mov
adc
shlb
sub
lock
sbb
pop
sub
cmpsl
jmp
xor
dec
test
mov
fldcw
cmp
mov
sti
call
ljmp
or
sub
setnp
xor
adc
stos
and
jge
aas
mov
ljmp
loopnew
push
test
adc
popa
insl
jb
loope
mov
fstp
add
jecxz
jmp
pop
iret
and
fisttpll
incl
outsl
into
mov
cmpsb
dec
rol
rcrb
ret
dec
lret
jmp
mov
cmp
mov
pusha
jecxz
je
imul
dec
xor
pusha
das
xor
push
dec
and
cmp
or
sbb
fsts
cwtl
inc
pop
movb
sbb
ljmp
imul
xchg
frndint
mov
cltd
or
ss
jmp
lods
lock
push
ret
decl
aaa
lods
and
mov
pop
fildll
xchg
pop
paddusw
lret
mov
sub
call
fcoms
in
je
xchg
cmpsl
pop
mov
adc
fwait
loope
cmp
jle
inc
cmpsb
push
xor
xor
stc
mov
aam
jnp
add
jge
sahf
mul
pop
int
jmp
sbb
dec
mov
clc
lcall
and
cld
pushf
out
lret
and
fnstcw
inc
or
lds
decl
adc
or
aas
push
outsl
jns
pushf
and
jbe
mov
xchg
rclb
jmp
dec
hlt
jne
stos
fucomip
xor
call
movzwl
pop
mov
fwait
dec
leave
xchg
push
jmp
nop
push
push
jo
push
ficoms
and
mov
addl
dec
add
pushl
out
gs
test
ljmp
and
cmp
int
ljmp
into
and
loope
fnsave
mov
std
filds
dec
pop
scas
dec
mov
adc
lcall
add
loopne
enter
repnz
icebp
call
ss
outsb
pop
mov
jmp
pushl
jmp
jmp
or
lret
repnz
sub
std
shlb
mov
outsb
lods
inc
mov
mov
mov
inc
lcall
add
pop
push
loope
adc
call
jg
or
jno
xor
and
data16
mov
and
lcall
loop
add
mov
call
and
mov
pushl
fsubl
fwait
mov
addr16
xchg
fisttpll
stc
mov
mov
mov
sub
andl
dec
repz
into
cltd
stos
aad
jmp
decl
out
adc
add
faddp
aaa
jbe
iret
pop
dec
mov
sti
loop
jmp
pop
adcb
xchg
addr16
or
and
out
sub
pushl
or
sub
sahf
or
lods
out
loopne
cmp
in
jbe
xchg
imull
dec
jo
mov
pushl
add
icebp
xchg
and
outsl
sahf
dec
test
jns
xor
jmp
adc
xchg
aam
stos
jge
push
cmp
jnp
pop
cli
push
arpl
dec
xor
out
hlt
in
xchg
call
ds
loop
fdivl
loop
xor
sbb
or
popa
ljmp
dec
fcoml
or
adc
lcall
mov
loopne
sub
mov
lcall
push
aad
sbb
dec
aaa
sub
mov
daa
sub
ljmp
call
aam
out
test
push
push
fwait
jae
add
sbb
imul
push
ljmp
mov
cmp
dec
cli
inc
dec
adc
lret
and
xchg
mov
std
daa
lcall
out
js
mov
sub
xchg
sub
add
xchg
and
adc
or
lcall
outsb
xlat
pop
sbb
pop
fistpl
test
push
jae
outsb
and
mov
in
shll
pop
lea
cmpsl
sbb
rorb
in
outsb
sarb
jp
stos
scas
inc
scas
cmpb
push
xchg
aad
lcall
out
cmc
ja
add
and
in
arpl
jns
dec
mov
in
pop
mov
imul
push
inc
out
outsl
mov
aaa
addr16
enter
push
push
dec
in
out
pop
cmpsl
jbe
mov
std
cmp
mov
std
test
jne
or
xor
icebp
and
bound
mov
clc
incl
ja
repnz
test
fsubrl
in
mov
cmp
push
insb
ss
outsl
popa
hlt
sbb
fimull
pop
mov
lret
mov
bt
test
dec
mov
pushl
mov
test
push
out
rorb
cmpsl
lsl
out
fisubs
inc
les
cmpsl
sbb
mov
ret
pop
fs
lds
push
xor
shll
clc
sbb
add
lret
inc
jae
mov
out
jle
dec
ret
pushl
popf
jmp
mov
fwait
repnz
push
mov
add
in
xor
push
or
sub
mov
or
je
pushf
popa
gs
add
decl
jle
cmp
loop
push
cld
sarl
lods
xchg
movsb
dec
add
sub
popa
sahf
pop
mov
jnp
jmp
shl
jno
dec
adcb
roll
adc
js
push
sahf
xor
push
pushf
jp
ljmp
cmpsl
aam
ja
dec
jno
xchg
scas
xor
lahf
js
sti
cmp
call
stos
das
mov
add
sub
adc
lcall
inc
cmp
jmp
aam
xchg
mov
pusha
lcall
sti
dec
push
cs
pushl
adcb
or
lret
lret
or
lea
call
mov
mov
repnz
inc
sbb
jg
mov
and
adcl
sti
jae
imul
sub
push
decl
xchg
cmpsb
jo
pop
mov
lea
xlat
inc
and
pop
jg
icebp
sbb
ljmp
and
cltd
and
mov
psadbw
pusha
roll
cmp
dec
and
pop
pop
adc
xchg
xor
sbb
notl
icebp
es
ret
lods
popf
mov
popf
fidivl
pushl
sub
mov
fbstp
orl
xchg
pop
mov
mov
nop
mov
shl
es
pop
xor
fcmove
dec
arpl
aas
pop
and
push
je
fwait
dec
mov
popa
xlat
push
popa
inc
mov
dec
out
or
push
add
mov
xchg
ss
aad
shl
jnp
into
mov
stos
adc
les
add
leave
cld
call
lahf
push
jbe
cltd
or
fdivrs
decl
jb
jo
and
sti
push
add
mov
push
mov
push
insl
adc
jmp
cmp
sbb
sub
arpl
sbb
dec
pop
popa
mov
jecxz
je
ljmp
ljmp
adc
jne
mov
pushf
movsb
push
shll
cld
loop
out
cwtl
sti
sarb
test
mov
adc
mul
lret
insb
cmc
push
pop
call
jnp
cmp
inc
decb
adcl
popf
inc
mov
call
and
and
pop
daa
enter
push
pop
popa
jne
jo
orl
dec
out
in
ljmp
popf
sbb
daa
pop
call
xor
cmp
push
pop
bound
js
xor
int
ljmp
mov
mov
popf
xlat
movb
ret
inc
mov
stos
test
data16
stc
pushf
lcall
rorb
sbb
inc
in
jb
ret
push
inc
mov
pop
xor
data16
lcall
xchg
inc
sub
pop
cmp
fsubrp
jne
push
sahf
rolb
lret
jmp
mov
call
jecxz
or
sub
test
mov
cmp
fimuls
es
sub
inc
xchg
cs
inc
out
mov
idivb
cmp
ret
shrb
cmp
jg
push
incl
push
push
sub
or
lea
mov
pop
sbbb
mov
inc
mov
clc
sbb
repnz
xchg
aas
xor
movsl
ret
jb
adc
push
push
sbb
push
add
dec
sar
decl
scas
lret
es
lods
and
jmp
adc
and
and
inc
fs
call
sub
and
pop
xor
xchg
inc
inc
cli
sub
aaa
jns
wbinvd
xchg
pop
ds
xor
adc
in
push
mov
daa
cli
or
jg
or
aaa
jmp
sti
test
mov
lods
cmp
push
imul
xchg
outsb
lret
push
jne
fnstcw
push
pop
pushl
sub
mov
bnd
dec
cmp
mov
jae
mov
decl
xchg
mov
popa
inc
loope
push
push
ret
inc
ret
jle
subl
fidivl
incl
push
or
inc
mov
mov
hlt
out
mov
ret
adc
mov
push
sbb
ret
xor
jmp
sbb
cmpsb
ljmp
inc
or
jmp
sub
mov
sbb
lds
mov
scas
xor
fisubl
ljmp
adc
xor
dec
shrb
dec
mov
call
movsb
pop
hlt
call
daa
jbe
test
inc
std
in
roll
push
or
mov
iret
adc
lods
lods
call
int3
imul
cmp
rcr
xchg
add
scas
or
or
aas
jmp
ret
xchg
addr16
jo
mov
sbb
pop
pop
push
out
outsl
xchg
cltd
cmpsl
mov
jmp
call
mov
es
test
bound
add
outsl
mov
mov
mov
push
fmul
or
incl
push
or
stc
and
inc
inc
fs
mov
jge
cli
lods
ds
or
call
dec
xor
mov
test
cmp
mov
sti
sti
mov
xchg
pusha
sub
lcall
xchg
aas
into
and
and
mov
jno
mov
cmpsl
out
jle
daa
lahf
fwait
incl
mov
lods
pop
ret
and
inc
cmp
cmp
sbb
pop
mov
rol
outsl
inc
les
popa
sbb
push
sbb
sarl
aaa
push
std
mov
faddp
inc
push
lahf
pop
mov
stos
pop
les
incl
ss
xchg
inc
jns
jge
test
popf
rcr
bound
divl
out
lods
sub
lcall
xchg
or
xor
inc
mov
or
pop
mov
jno
jecxz
hlt
idivb
sub
lcall
cmpsb
jne
mov
stos
out
cmpsl
cltd
mov
icebp
mov
push
sub
call
in
jp
or
mov
cmp
outsb
shlb
mov
popf
add
call
call
jne
lea
data16
dec
outsl
hlt
dec
mov
pop
push
lahf
ret
add
cmp
in
lods
jno
mov
call
sub
jbe
mov
xor
dec
gs
into
imul
jp,pn
inc
idiv
decl
sub
lahf
sbb
scas
mov
or
and
xchg
jmp
adc
pop
mov
jnp
mov
mov
jmp
outsb
sbb
mov
adc
mov
ljmp
stc
jbe
push
cmp
pop
or
jbe
insb
mov
lods
sti
daa
fistl
imul
lea
push
or
mov
or
and
imul
and
aas
jg
lods
xor
pushl
mov
bound
imul
les
pusha
sahf
imul
xchg
lcall
inc
out
outsb
testl
adc
or
push
xchg
je
adc
jmp
filds
hlt
or
sbb
loopne
cmc
inc
lock
decl
xchg
pop
xor
in
sub
lds
lret
sbb
dec
xlat
xchg
cmpb
sti
jmp
in
int3
push
push
nop
daa
lea
pop
mov
push
inc
pop
mov
sarb
call
mov
insb
or
or
xorb
outsb
sahf
mov
addr16
decl
and
adc
ds
sti
jl
lods
mov
mov
and
mov
notb
pushl
mov
insl
mov
cmp
mov
lahf
mov
xchg
out
mov
mov
mov
cmpsb
cmp
incl
pop
rcrl
mov
clc
clc
imulb
dec
push
push
sbb
jae
sub
inc
inc
js
dec
ljmp
and
jbe
popa
fistl
and
pop
pusha
push
mov
out
mov
jno
xor
int
push
lock
mov
cwtl
xchg
mov
and
cmp
jnp
or
dec
inc
adc
add
lcall
int
out
cmp
outsl
mov
fnstenv
jecxz,pn
in
ljmp
idiv
lcall
movsb
push
fmull
data16
or
nop
pushf
mov
sbb
adc
dec
cmp
sbb
ret
cmc
and
mov
pop
arpl
mov
pop
xchg
icebp
jnp
rorl
insb
adc
inc
inc
pushl
lret
push
mov
push
add
fmuls
cmpsl
fadd
test
call
push
lea
hlt
push
push
lds
mov
jno
xor
out
xchg
sub
sub
dec
das
in
sub
jno
sbb
mov
cmc
jecxz
jb
mov
dec
lds
in
pusha
cld
xchg
pop
fs
jl
test
adc
aad
aaa
push
or
and
lret
xchg
jle
call
adc
loopne
xchg
and
xor
out
sub
jp
lods
test
test
dec
fs
xor
daa
xlat
aaa
xchg
adc
pushl
inc
js
add
or
out
mov
adc
and
testl
jmp
pop
sbb
xchg
mov
jle
inc
xchg
cmp
ret
clc
or
popa
iret
std
or
mov
dec
jp
push
aad
dec
cmp
popa
ret
pop
je
in
mov
imul
inc
cltd
push
stos
into
cmp
mov
ljmp
mov
push
ret
mov
jge
dec
loope
pop
add
dec
int
cmp
lcall
adc
int3
mov
mov
pop
fwait
xchg
lcall
dec
push
jns
dec
stos
test
movsl
nop
call
add
sbb
repz
inc
inc
inc
sub
jle
call
xchg
dec
inc
xor
incl
hlt
shlb
cld
pop
movsl
mov
cmovge
mov
out
mov
std
mov
or
jecxz
call
leave
mov
push
dec
ljmp
aas
mov
pop
mov
jp
addl
xchg
dec
fwait
notb
hlt
mov
fstpl
xchg
stos
mov
cmp
and
lcall
icebp
jg
add
push
xchg
test
out
aaa
daa
cmpsl
das
and
push
lret
push
call
repz
cltd
sub
in
cmp
inc
pop
mov
icebp
jl
cmp
daa
aad
push
out
sbb
push
jp
pop
inc
sub
in
mov
dec
je
cmp
test
jmp
jp
add
sahf
rcll
add
jno
dec
jmp
sub
es
shrb
lcall
rcr
push
mov
mov
das
daa
sti
jb
int3
lea
mov
loopne,pn
ljmp
cmp
jnp
mov
sub
pop
lret
xor
lea
movsl
insl
ss
dec
cmp
fwait
or
in
inc
inc
mov
push
imul
or
in
ret
lahf
call
push
enter
mov
mov
mov
call
pop
andb
pushl
mov
rclb
dec
push
push
mov
jae
lcall
movsl
xchg
adc
pop
incl
pop
testl
pop
dec
pop
or
movsb
testb
aad
sar
call
stos
clc
test
loopne
add
pop
in
cmc
xor
out
out
or
push
and
sub
lcall
dec
stc
js
loope
lahf
xchg
les
sbb
lds
lgs
inc
fcoms
fstpl
inc
js
and
aas
inc
pushl
pop
cmp
inc
inc
lods
or
jb
lock
jmp
xor
pop
ljmp
rclb
xchg
xchg
stos
sub
pop
sbb
lcall
push
in
dec
aad
dec
arpl
ljmp
xor
inc
mov
jmp
outsb
loope
mov
fstps
inc
xor
cmp
and
enter
cltd
xlat
ljmp
loope
sbb
int3
cld
push
in
jnp
mov
jb
push
push
insl
mul
mov
inc
mov
aas
cmp
pushl
sbb
cmp
inc
jge
ret
and
out
out
and
dec
data16
call
lods
cmp
mov
pop
inc
xor
push
clc
adc
aam
add
inc
mov
mov
cltd
push
dec
lock
push
loop
fwait
jno
sahf
fbstp
ljmp
mov
dec
jo
testl
out
rcll
sbb
push
jle
mov
lods
jo
sbb
movsb
int3
sbb
mov
negl
adc
inc
add
call
dec
jge
mov
andl
repnz
or
lcall
mov
popf
xor
in
sbb
popa
mov
sbb
call
rclb
dec
mov
jmp
xchg
mov
test
jns,pn
jp
and
add
subl
and
lcall
cs
add
sub
xor
inc
out
dec
dec
scas
xrelease
outsl
sub
pushl
je
xor
jp
test
ja
hlt
inc
jo
cmp
out
psrld
clc
cmp
pop
hlt
loope
and
adc
add
and
cmp
add
sar
pushl
daa
jecxz
adc
sbb
push
xor
dec
jg
mov
add
cvtdq2ps
int
add
repz
jmp
mov
dec
and
outsl
jmp
mov
mov
xchg
inc
cld
lcall
push
push
inc
xlat
js
pop
mov
ret
inc
mov
sub
ss
stos
pop
leave
cltd
mov
out
decl
cwtl
pop
mov
jl
orl
add
pop
push
cmp
jecxz
popf
jl
ljmp
jo
sub
mov
xor
fs
mov
jbe
xor
jbe
clc
mov
xchg
repnz
ds
mov
imulb
notb
popa
in
cli
stos
into
xchg
cmpsb
adc
sbb
std
dec
pcmpgtw
sti
fs
jmp
leave
sub
or
push
mov
cmp
xor
mov
jnp
loopne
in
xchg
push
pushl
repnz
test
push
xchg
push
das
in
xchg
fldcw
lahf
clc
push
dec
xchg
add
pushl
test
pop
aad
gs
mov
std
sub
sbb
divl
lcall
ret
out
sub
test
stos
push
adc
scas
in
xchg
jno
push
cmpsl
push
jnp
js
call
and
leave
mov
std
sbb
decb
add
nop
cld
shl
lret
call
sbb
mov
mov
push
addr16
adc
jle
push
xor
test
decl
mov
cli
jp
pop
outsl
shl
clc
xchg
movzbl
movsb
pop
sahf
es
lcall
or
xlat
push
inc
pop
jbe
inc
sbb
clc
js
xor
lahf
ds
mov
inc
or
loopne
jne
dec
jo
shl
adc
sub
sub
lock
mov
xor
fbstp
pop
add
adc
push
mov
pop
dec
sbb
lds
xchg
pop
adc
lcall
movsb
pop
xor
fcomp
jb
mov
and
add
add
mov
call
pushf
ret
mov
mov
add
aas
push
pop
sbb
les
icebp
inc
dec
add
dec
add
sbb
push
fsubrp
jnp
jecxz
mov
aad
das
jg
pop
cmc
or
aaa
dec
call
test
std
mov
mov
pop
or
or
mov
jo
push
call
test
add
pusha
and
outsb
jno
cmp
cmp
imul
fcmovnbe
pop
movb
sbb
jno
fcmovbe
xchg
divb
std
fsubl
fs
pop
sahf
pop
mov
stc
lret
mov
inc
inc
mov
js
adc
lods
adc
mov
fldt
lcall
mov
movsbl
repz
push
lahf
pop
pop
arpl
lcall
jno
sub
push
mov
jo
lds
mov
xor
call
mov
jg
and
mov
test
addr16
in
fnstsw
xor
mov
decl
xchg
iret
mov
mov
mov
ret
scas
inc
rcr
xor
cld
mov
call
cmp
int3
cmc
cmp
mov
mov
xchg
je,pn
and
loopne
mov
call
dec
mov
jmp
lock
or
sbb
int
arpl
jge
jmp
add
ljmp
cmp
clc
xor
or
inc
mov
jle
ss
push
add
lahf
mov
mov
and
xor
mov
popl
imul
insl
push
inc
sub
mov
lods
mov
and
jmp
ds
dec
add
mov
fildl
loope
mov
fucom
outsl
xchg
imul
movsb
xchg
mov
xchg
cmpsl
xchg
stc
mov
jmp
dec
and
movsb
inc
rcrb
lock
jl
aam
fdivrs
into
cmpsl
in
scas
ljmp
cmpsl
call
cwtl
sbb
in
es
fisubrl
aad
pop
ret
mov
call
dec
jbe
iret
sahf
or
and
push
jg
lret
dec
test
pop
pop
fistl
jnp
jmp
xor
or
cmp
pusha
push
mov
mov
lret
push
mov
mov
pop
mov
xchg
mov
cwtl
xorb
movl
mov
out
mov
jg
or
mov
cvtps2pd
add
test
iret
dec
sub
or
call
not
stos
sub
inc
fs
sub
jge
sahf
jecxz
jo
xor
incl
or
int
imul
icebp
mov
and
adc
ret
xor
sbb
incl
enter
ret
sub
scas
dec
pop
jns
pop
fcmovnb
push
cwtl
fisubs
ljmp
nop
out
std
test
rolb
fsubrp
lcall
add
stc
mov
in
orl
adc
out
in
loop
fadds
ror
mov
add
out
or
mov
lret
jb
scas
movsl
sub
jmp
stos
out
adc
cmp
repnz
push
mov
fs
outsl
imul
jge
cmp
mov
dec
pop
aaa
push
call
add
xorl
and
call
mov
pop
gs
add
rcrb
jne
ficompl
and
jmp
andb
movsb
xchg
popf
and
js
and
cmc
mov
xor
push
mov
cmpsb
pushl
or
push
adc
outsl
je
and
jns
jge
out
jmp
popa
mov
and
add
mov
int3
scas
xchg
mov
push
cmp
sub
enter
ljmp
and
call
inc
movntps
cmp
adc
lcall
sub
rolb
dec
leave
es
xchg
testl
dec
pop
inc
pop
fisubs
cmc
das
sub
fdivr
daa
adc
sub
dec
cmc
jle
inc
fidivrs
cwtl
les
adc
nop
incl
lock
jge
dec
pushf
ss
subl
lret
push
fidivrs
fwait
inc
subl
xor
dec
loopne
cltd
adc
add
lods
cld
xor
sub
shll
call
xchg
xor
fisttpl
addr16
dec
xor
xchg
jg
sbb
aas
inc
incl
sbb
std
test
into
rcrl
je
adc
int3
xchg
inc
inc
fdivrs
jno
not
popf
gs
jge
inc
stos
jae
push
pop
call
clts
inc
into
jmp
repnz
mov
aaa
stos
aas
xchg
js
adc
pop
test
sti
out
nop
lahf
pop
outsl
nop
loope
sar
lcall
or
outsl
mov
in
push
in
data16
mov
add
gs
jmp
jmp
mov
add
mov
cmpl
lcall
and
inc
idiv
mul
lods
daa
mov
insb
arpl
jmp
cld
sarl
mov
rsqrtps
ljmp
aas
mov
in
dec
out
int
cltd
adc
mov
loop
mov
push
dec
mov
cld
rorl
and
sbb
add
mov
adc
dec
add
incl
add
in
aad
fiadds
loop
push
enter
adc
mov
or
icebp
out
jle
cld
insb
inc
push
dec
lcall
push
ffreep
mov
jg
fists
loopne
sbbl
int3
pop
push
adc
les
lods
clc
and
ja
adcb
movsl
pop
into
pop
mov
mov
push
andl
insb
jle
out
les
dec
popa
popl
mov
xchg
xor
xchg
cmp
xchg
xor
inc
pushl
inc
movsb
test
cmc
pop
cmp
adc
pop
mov
push
int
fs
add
leave
jg
call
fldcw
adc
pop
movsl
mov
addl
mov
rcl
enter
iret
pop
inc
imul
pushl
mov
mov
sub
lock
mov
decb
rorl
call
push
add
popa
call
jmp
sarb
or
xchg
lea
cwtl
cmp
sbb
mov
jmp
pushl
addb
lea
dec
js
pop
push
ja
jae
fdivs
push
call
mov
pop
shl
sbb
sbb
jne
pop
lea
mov
mov
mov
jge
dec
pop
lahf
adc
push
and
mov
daa
push
push
ret
pop
mov
push
cmp
decl
rcrl
pushf
pop
outsl
push
clc
jle
mov
lret
push
aaa
mov
mov
in
mov
cmp
ljmp
fisubl
outsl
xchg
sahf
loopne
push
pop
jecxz
jle
jbe
xor
xchg
xchg
int
call
addr16
xchg
dec
psubd
cltd
adc
cmp
sbb
and
arpl
lcall
sbb
xchg
sub
pop
cmp
adc
cld
or
scas
pop
lret
adc
pop
popa
out
xlat
mov
ficoml
aas
jp
gs
pushf
dec
xor
xor
dec
xorb
jno
jle
xchg
gs
call
popf
adc
sub
bound
dec
sub
sbb
mov
pushl
jne
xchg
lods
adc
pop
out
mov
lds
push
into
lcall
jne
mov
pushf
lcall
dec
mov
mov
xor
je
inc
cmpsb
test
test
test
aam
mov
sub
icebp
jnp
imul
jp
icebp
mov
add
inc
cli
and
rcll
xorb
fsubl
inc
mov
repnz
in
pop
or
cmc
mov
sub
shrb
push
lcall
and
mov
add
adc
rorl
mov
sbb
or
and
and
mov
sub
cmp
or
pop
out
mov
pushl
fcmovu
fbld
dec
inc
das
sbb
loope
cmp
sbb
jbe
call
loopne
and
dec
sbb
sahf
mov
clc
not
adc
xor
in
cmpsb
jg
ficoms
dec
xchg
jb
mov
xchg
insl
cs
push
test
aaa
ds
hlt
cltd
mov
insb
call
xorl
sbb
inc
push
ss
sub
pop
add
push
push
je
cmpsb
fnstsw
stos
ror
insl
mov
loop
push
pop
gs
push
leave
lods
push
push
js
ljmp
call
stc
loop
repz
xor
dec
lods
stos
lcall
inc
icebp
mov
call
pop
in
sarb
cltd
ds
or
iret
xor
xor
xchg
dec
inc
pop
outsl
jmp
mov
mov
es
xor
mov
mov
das
dec
jl
loop
pop
imul
iret
lock
xor
pop
mov
xchg
push
fldt
push
jns
sti
in
sbb
in
and
push
icebp
xchg
mov
arpl
lea
decl
cmpsl
pusha
decl
pop
cltd
dec
dec
mov
mov
jb
xor
xchg
lcall
ljmp
mov
outsb
mov
and
aaa
outsl
andb
mov
add
fistl
xchg
adc
rorb
mov
mov
push
xchg
xchg
jae
call
insb
fisttpll
inc
inc
push
add
pop
pushf
divl
in
mov
mov
and
jmp
pop
out
pop
push
int
inc
xchg
ds
out
adc
js
out
jo
sub
cld
call
push
daa
test
mov
push
jl
inc
aad
test
frndint
inc
ret
lods
cmpsl
mov
or
decl
mov
fnsave
add
inc
lods
adc
mov
mov
or
sti
movsl
addr16
test
jne
mov
push
pop
mov
fsubr
pusha
inc
loopne
cmp
cmpl
jmp
das
pop
in
pop
mov
insb
mov
push
sub
mov
inc
fs
data16
jmp
out
fidivs
fcompl
add
push
fbld
imul
lret
mov
dec
into
add
incl
cmc
cmp
push
inc
inc
stos
es
ficoms
mov
fcoms
mov
in
in
push
pusha
cli
call
ds
addb
and
inc
jno
sbb
mov
movsl
fmulp
lds
inc
jnp
aaa
inc
cmp
in
add
lret
jne
popa
jg
imul
push
pop
fstps
in
add
decl
mov
enter
rolb
mov
rol
mov
gs
in
scas
or
push
push
pop
dec
pop
add
in
or
xor
stc
cwtl
mov
add
lods
jmp
add
inc
out
pop
push
daa
adcl
mov
out
jno
inc
cld
movsb
pushl
ss
pop
scas
outsl
in
push
sub
mov
inc
inc
stos
inc
addr16
add
or
pushl
mov
inc
inc
pop
data16
mov
pop
ljmp
sub
dec
and
shlb
data16
lcall
imul
push
repz
pop
ret
std
ret
pop
sub
out
out
sub
jmp
je
imul
mov
pushf
rolb
aas
xor
sub
mov
add
addr16
xor
jl
mov
hlt
mov
decl
in
jb
inc
hlt
pop
pop
xor
into
mov
xchg
xor
div
loope
jmp
pop
cmp
and
mov
xchg
rcrb
call
dec
mov
jge
add
decl
push
inc
dec
cld
jnp
testb
je
inc
adc
cmp
mov
push
jo
fucomip
sub
mov
stc
sub
or
jb
rcrb
xchg
adc
pop
loopne
or
jle
js
and
imul
arpl
sbb
rcrb
xor
dec
and
xchg
cltd
pushf
rclb
adc
cld
mov
push
add
cmp
push
testl
pusha
jp
xchg
push
mov
cmp
mov
jle
scas
lret
push
call
imul
jmp
lret
or
stos
jp
adc
and
ljmp
sbb
sub
mov
lcall
fdivrs
mov
jno
stos
hlt
out
xor
inc
sbb
sbb
decl
pop
test
iret
dec
cmp
scas
mov
push
dec
xchg
and
xor
push
call
push
subl
adc
imul
jp
lcall
jnp
mov
shll
inc
cmp
shll
daa
cmp
push
mov
in
xchg
call
fcomps
adc
popf
popf
xchg
cld
into
jecxz
or
imul
sub
and
and
ljmp
call
mov
test
mov
cmp
xor
mov
stc
xor
fisubrs
lcall
aad
inc
inc
in
adc
mov
das
cli
xor
in
cmp
inc
lea
lock
cmp
test
je
out
in
jae
movsl
push
stos
sbb
push
cmpsl
repz
addr16
in
jmp
pavgb
loop
sub
sub
adc
mov
adc
loop
loopne
dec
sbb
lcall
out
mov
nop
push
xor
bnd
inc
xchg
jne
repnz
pop
lea
mov
rcl
jb
incl
push
mov
push
xchg
orl
leave
xchg
xchg
push
adc
xchg
fs
decl
cmpsl
mov
jmp
sbb
inc
or
fsubl
mov
adc
inc
jo
decl
dec
mov
sbb
enter
sub
cmpsb
push
mov
xchg
sub
pushl
or
mov
ljmp
add
dec
aam
cld
mov
stos
dec
ret
lcall
aad
pop
cli
and
stos
aam
lea
das
pop
xchg
sub
out
std
loop
test
dec
pushl
add
jg
dec
or
aas
mov
cmp
xchg
push
scas
adc
outsl
aad
roll
xchg
add
add
mov
pop
sbb
adc
inc
fstp
mov
dec
mov
sub
shrl
sub
gs
mov
jnp
or
mov
sar
addr16
decl
adc
addr16
cmc
xchg
adc
imul
pmulhw
ljmp
jmp
mov
daa
sbb
mov
inc
adc
aad
or
cmpsl
sub
ds
inc
jge
cmp
jle
nop
ud0
incl
dec
mov
rorb
push
jno
repnz
dec
mov
in
xchg
mov
pop
faddl
ljmp
xlat
cmp
jns
xor
dec
mov
adc
filds
daa
jl
xor
or
lea
add
dec
push
in
in
push
sub
xchg
push
iret
test
mov
and
push
mov
ja
fbstp
jo
incl
jg
les
enter
cmpsb
hlt
push
pop
sub
lods
cwtl
sub
outsb
out
push
or
js
mov
mov
jno
xchg
scas
cmpsl
xor
add
xor
pop
xor
sub
sub
decl
jae
adc
jle
aaa
dec
xchg
mov
shll
loope
ljmp
pop
jge
fidivl
popa
jo
ja
inc
cmp
bound
pusha
mov
inc
adc
inc
ljmp
jecxz
repz
sub
mov
ret
lea
sti
mov
ljmp
pop
ss
scas
push
adc
gs
sub
ret
setge
jnp
outsb
decl
dec
fsubr
ret
ljmp
cmpsl
ret
std
adc
mov
ds
xchg
stos
std
test
dec
movsl
lea
call
movsl
xor
popf
daa
shrl
and
dec
push
shlb
inc
cmp
sub
push
push
sbb
cmp
fs
adc
lods
lahf
ljmp
cmp
pop
xor
call
or
test
fwait
outsl
pop
in
jl
into
push
inc
imul
popf
incl
sbb
loopne
add
add
add
adc
jmp
inc
jb
repz
sti
push
fdiv
mov
mov
stos
lods
inc
popl
iret
jge
adcl
adcl
decl
fdiv
xor
movsl
mov
push
pop
add
mov
push
dec
fsubr
mov
pushl
sbb
cmp
arpl
xchg
xorb
mov
jge
fdivrs
pop
repnz
inc
sbb
std
sbb
jl
xchg
jno
frstor
lods
xchg
mov
sub
mov
and
mov
xor
fsubp
aad
push
xor
cmp
jo
sub
mov
dec
mov
inc
push
cld
pusha
icebp
jp
fldl
dec
stos
data16
ss
outsb
mov
xchg
std
inc
adc
pop
fadd
ss
fisttpll
daa
stos
outsl
aas
mov
test
xor
pop
fdivrl
mov
js
ljmp
dec
daa
jae
jne
xchg
inc
leave
sbb
loope
jmp
jge
inc
pusha
pop
cli
adc
shl
adc
push
pop
mov
in
push
inc
inc
xor
in
in
pop
and
clc
xor
in
sahf
push
xchg
pop
out
xor
jmp
sahf
scas
iret
out
outsl
cmpsb
movsl
test
in
cs
mov
int3
push
mov
sub
lock
lcall
cmpsl
mov
lret
mov
jb
clc
data16
ljmp
jecxz
ja
lods
insb
push
fdivr
mov
push
lea
in
pop
jmp
cmp
jb
into
arpl
mov
push
xlat
mov
stos
in
dec
and
jg
lds
pushf
add
mov
and
inc
stc
dec
cmp
aaa
dec
ljmp
repnz
xor
pop
dec
push
add
xorb
mov
pushl
icebp
into
jmp
mov
lods
scas
pop
hlt
xchg
adc
sbb
int
shll
fisubs
jmp
and
stos
mov
or
icebp
rcrl
mov
mov
lcall
dec
test
adc
pop
sahf
push
loope
lcall
out
mov
mov
xchg
ljmp
popa
mov
scas
pop
add
jle
and
std
dec
inc
push
das
inc
cmp
enter
sub
lcall
or
sub
xorb
lahf
xchg
sbb
shl
ss
popa
sub
ljmp
rcrb
adc
adc
push
xchg
jo
xchg
out
sbb
daa
inc
loopne
jge
add
sub
call
xchg
cmpsb
pop
shl
insl
add
jne
leave
test
adcb
pop
jge
or
out
push
mov
incb
push
xchg
imul
imul
pushl
inc
lret
xor
loop
das
je
sub
cmp
pop
cmp
jp
mov
in
aas
out
pop
xchg
add
jge
xchg
sbb
enter
lods
mov
ljmp
outsl
pop
mov
cmpsl
das
adc
mov
sbb
sbb
adc
pushl
pop
xlat
push
faddl
pushf
cmpsb
pop
push
mov
inc
lcall
decl
fiadds
cmp
out
out
add
out
jge
lock
jmp
mov
cli
lahf
imul
or
push
or
pop
adc
mov
daa
or
pushl
das
push
mov
and
cs
lods
sub
lcall
sbb
imul
lcall
pop
sub
lret
loope
jp
jo
jns
test
call
mov
pushl
sub
pushf
popf
push
inc
test
and
xor
and
dec
inc
push
icebp
lods
addb
mov
inc
pop
pop
cli
inc
jge
mov
cmp
sbb
dec
shl
dec
fistl
or
or
inc
sub
cmpsb
inc
es
fadds
mov
das
sti
dec
inc
movsl
call
adc
decl
ret
or
mov
xchg
push
mov
push
int
jne
sub
and
cmp
sahf
mov
mov
inc
arpl
jmp
mov
push
and
rcrb
call
adc
inc
jne
scas
mov
mov
xchg
mov
sti
cmp
adc
incl
cmpsl
ret
add
loop
fcmovu
decb
push
cmpb
or
das
inc
push
jmp
mov
lcall
arpl
push
dec
jle
cmp
jmp
sbb
cwtl
cmp
pop
xchg
cmp
push
bound
jae
dec
jmp
and
fwait
xor
aam
out
mov
incl
xor
pop
add
stos
mov
popa
imul
out
mov
jnp
call
and
lahf
sub
outsl
fidivrl
pop
aas
int
push
push
jae
jl
mov
stc
sub
out
jmp
stc
insb
adc
xchg
jbe
xchg
cli
in
sub
lods
xchg
push
mov
hlt
dec
shl
div
inc
inc
lcall
or
es
pop
sbb
xchg
and
sub
jno
les
jns
dec
pop
gs
decl
mov
scas
sbb
xchg
aas
ret
and
jae
loopw
out
push
les
ljmp
cltd
add
mov
scas
outsl
rorb
ret
hlt
in
shrl
pushl
js
out
stos
xlat
sbb
sbb
mov
fistps
pop
roll
cld
sarb
stos
idiv
mov
mov
enter
shl
jne
insl
or
jmp
jnp
scas
pop
or
pop
mul
pushf
adc
mov
mov
popaw
push
cmc
call
out
mov
sub
call
inc
sbb
sbb
sub
mov
je
hlt
mov
in
das
mov
mov
and
test
fldt
mov
sbb
sbb
inc
lock
xchg
pushl
call
xor
xor
icebp
sbb
sahf
and
sbb
loope
repz
push
decl
push
repnz
aas
inc
jg
mov
loop
sub
xchg
stos
push
lahf
pop
lcall
inc
pop
daa
mov
adc
jecxz
sarb
adc
dec
inc
adc
sub
sti
inc
aaa
pop
ret
loope
adc
xor
pop
push
sti
sbb
incl
pop
cmpsl
mov
divl
and
loope
inc
xchg
mov
cmp
mov
mov
call
cmp
les
arpl
insl
mov
arpl
inc
lds
jle
adc
adc
push
adc
pandn
lock
jnp
add
pop
pop
loopne
shrb
dec
xchg
jbe
pop
outsl
in
push
jge
insl
repnz
gs
cmp
fsubl
dec
sti
mov
je
push
jl
ljmp
jb
mov
add
pop
add
jl
mov
lcall
fidivrs
das
mov
xor
cmp
cmp
pop
jg
movsb
mov
lret
pop
ljmp
daa
xlat
or
loop
std
or
push
xchg
fs
or
dec
rcl
ss
and
ljmp
scas
test
push
loopne
shl
or
out
das
ret
jno
test
mov
jmp
push
and
aad
push
jne
outsb
mov
jbe
lret
movsb
daa
push
mov
js
ud0
jmp
testb
cmp
into
mov
rol
sbb
or
dec
decl
inc
fs
inc
stos
mov
aas
out
lahf
add
mov
jle
xlat
pop
popa
pop
fisubrl
inc
cmp
jns
mov
add
jle
xor
leave
nop
das
leave
inc
adc
es
mov
inc
inc
loop
mov
dec
incl
sbb
mov
cltd
fnstsw
jecxz
sbb
loop
ja
dec
jns
cmp
lods
lahf
or
decl
aas
rol
cwtl
clc
jae
sbb
push
add
jmp
fimull
lods
enter
lcall
cmp
js
xlat
dec
emms
lret
shld
clc
shrl
xor
pop
pop
adc
jb
adc
dec
sub
mov
rclb
xor
ljmp
lcall
mov
add
jmp
mov
aam
sbb
int3
jmp
xor
subl
sahf
inc
setns
mov
cmpsb
xor
lods
push
add
jg
fmull
ss
inc
rcrb
add
aam
cmp
pop
sbb
sbbb
scas
mov
adc
mov
cwtl
test
in
ds
loop
inc
test
dec
push
scas
push
sbb
dec
push
pop
push
je
lret
fcoml
inc
pop
jge
push
jg
int
incl
stc
adcl
pusha
push
fisubl
xchg
shrl
sbb
push
ret
ljmp
pop
dec
jl
xchg
mov
js
cmpsb
dec
mov
xlat
or
int3
outsl
xchg
cmc
mov
xor
decb
icebp
xchg
cld
mov
addr16
or
push
xlat
inc
dec
pmullw
pushf
imul
pushl
add
push
dec
cs
ljmp
add
mov
repnz
xor
psubusw
ljmp
je
mov
mov
inc
add
outsl
sahf
push
fwait
sbb
sbb
push
call
push
les
lcall
int3
or
inc
push
in
stc
xchg
inc
push
incl
fistl
test
cmp
push
hlt
loope
je
sahf
addb
dec
jne
and
pop
jo
pushl
pusha
cmp
outsb
push
fldt
call
inc
sbbl
cwtl
xor
pop
fs
loope
xor
mov
pop
mov
pop
fmulp
sbb
std
insl
xchg
dec
aam
in
sbb
jo
push
test
cmp
sti
cltd
jle
xchg
dec
xchg
adc
mov
lock
sbbl
mov
cmp
aas
push
sub
rcr
and
and
outsb
pop
push
loopne
add
mov
add
push
jmp
fsubrl
mov
imul
fdiv
stos
push
in
ret
bound
es
dec
push
jmp
jno
daa
out
adc
std
iret
jo
sub
dec
mov
in
jno
sub
mov
in
dec
cli
ja
mov
mov
mov
jb
push
xchg
pushf
add
fcmovnb
adc
ret
pushl
aam
mov
xor
xchg
xchg
mov
int
sbb
cmp
cmp
fsub
and
mull
add
mov
pop
inc
cmp
mov
lcall
push
push
jno
fwait
add
dec
and
mov
aam
push
scas
xor
lcall
adc
lcall
icebp
data16
fimuls
mov
or
inc
pop
add
pop
mov
insb
or
xor
js
push
and
insl
mov
aaa
ja,pt
cs
xchg
push
idivl
and
movsb
jae
push
testb
shrl
rcrb
daa
jno
test
lds
scas
fistpll
jl
pop
adc
incl
mov
imul
push
sahf
jb
or
cmp
mov
sahf
or
std
inc
mov
imul
aam
cmp
sub
lret
mov
insb
out
lcall
arpl
inc
fwait
sbb
shl
cmp
fstl
in
mov
lret
aad
fstl
push
fiaddl
mov
xchg
or
insb
icebp
inc
inc
dec
push
sahf
sbb
jmp
push
lcall
cmc
xor
shrb
stos
adc
lret
sahf
sbb
jge
jp
icebp
cmc
sbb
ljmp
or
cld
jmp
ds
add
lcall
outsl
dec
hlt
dec
neg
xor
mov
push
cwtl
test
jno
ret
dec
jb
or
dec
inc
shll
out
mov
sti
and
fsubl
jg
sbb
mov
test
movsl
xor
call
hlt
lret
pop
cltd
cwtl
insl
dec
push
fcompl
jmp
pusha
xor
jmp
imul
push
aam
mov
insl
sbb
sbbl
jmp
mov
jae
fdivl
ljmp
shll
jb
adc
xor
cmpsl
push
fs
mov
jle
pop
sub
insb
mov
gs
call
push
call
jmp
mov
aad
cmp
xor
inc
clc
popa
call
shrl
icebp
pushf
dec
or
mov
jne
mov
lret
ret
add
loope
push
outsb
decl
jmp
pop
inc
outsb
loopne
inc
mov
insl
pop
push
push
outsb
aaa
shr
inc
sahf
call
and
lds
mov
ret
loopne
lods
insl
lods
es
dec
fs
ljmp
rcll
test
cmp
push
add
and
xor
fsubs
nop
adc
or
lcall
adc
add
bound
cmp
or
jns
jmp
shrb
arpl
xchg
push
pusha
pop
cmp
push
ja
subb
in
pop
inc
sub
call
stc
jg
xchg
jg
movsb
hlt
and
testl
sbb
fwait
leave
or
jmp
call
or
test
mov
cmp
xchg
mov
jg
jmp
lea
das
out
aaa
fs
pop
stc
mov
lcall
stos
jl
sti
mov
pop
sbb
fcmovb
mov
pop
ljmp
std
sar
ljmp
push
loop
jbe
push
xor
fstps
stos
jo
ljmp
insl
inc
jmp
jmp
add
adc
add
mov
mov
jg
mov
mov
mov
nop
ret
sub
or
mov
sbb
ds
rcll
xchg
test
incl
into
jg
out
xchg
insb
jle
ficompl
fisttpll
stos
xor
sbbb
aad
lcall
jmp
mov
jle
test
push
loop
sbb
inc
aad
cmp
pop
pop
jno
and
adc
decl
ljmp
push
jge
imul
cmp
dec
into
fwait
push
scas
enter
sti
jo
lret
sti
mov
pop
pusha
inc
repnz
daa
mov
lret
in
aaa
jmp
aaa
pop
xchg
fisubs
push
cmp
adc
push
jmp
push
mov
xor
enter
mov
sbb
cmp
sahf
lock
push
daa
mov
jmp
mov
xchg
jmp
cmp
mov
jb
cmp
jae
sub
stos
cmp
adc
incl
mov
adc
and
fsubs
je
jge
test
mov
aas
call
jmp
cmp
cltd
mov
or
mov
push
xor
sbb
or
call
inc
mov
adc
or
lret
loope
lea
incl
jno
mov
lods
daa
lds
push
dec
inc
and
popf
jns
aaa
decl
out
js
jno
mov
das
push
xchg
cltd
mov
mov
aas
add
fimuls
push
in
jmp
inc
das
loope
jecxz
je
push
cli
insl
lock
js
mov
xor
xchg
fwait
dec
call
out
push
ja
mov
xlat
rcr
dec
add
daa
lods
std
jae
rcrl
iret
sub
pushl
sub
hlt
xor
aam
sbb
aas
nop
jne
fisttpl
std
test
cmpsb
scas
cmp
dec
js
mov
push
jle
cmp
insl
shll
add
scas
lds
in
shrl
jne
loope
adc
ljmp
xchg
test
scas
xchg
dec
mov
fsts
push
push
pop
mov
add
pop
gs
jmp
aam
adc
cmp
je
jmp
sbb
shrl
cmp
test
cmp
ljmp
fs
jge
repz
xor
bound
imulb
cmp
das
xchg
add
jbe
adc
decl
pusha
arpl
and
rcrl
dec
stc
pop
cmp
dec
repz
xor
mov
loopne
movsb
test
arpl
insb
sub
sti
mov
xor
decl
dec
inc
insb
int3
in
cmp
pop
add
movsb
add
jmp
mov
icebp
inc
insb
add
cltd
dec
movsb
les
cmp
test
push
loopne
aas
sbb
call
push
xchg
mov
aas
jb
jecxz
jb
rcr
sti
mov
lods
push
sbb
sub
das
jl
lcall
xlat
mov
inc
loope
data16
mov
js
test
inc
pop
subb
call
pushf
fwait
pop
icebp
cmp
cmp
mov
test
stos
andl
mov
push
inc
push
lods
icebp
pusha
incl
pop
ret
lcall
dec
and
push
nop
mov
sub
xchg
pop
mov
sbb
adc
cwtl
push
jl
push
pop
xchg
push
mov
fdivrp
sahf
out
jp
icebp
sub
dec
int3
test
fs
stos
inc
add
stos
cli
sbb
mov
mov
sub
pusha
ret
or
out
mov
aas
pop
and
adc
int
fistps
call
push
adc
or
imulb
cmp
cmp
sbb
push
push
and
fidivrl
mov
jg
add
push
adc
les
cli
xor
addb
sti
iret
add
cmpsb
lahf
js
call
lds
sub
test
or
and
jb
mov
inc
xchg
sub
jmp
and
cmp
push
xchg
movsb
lret
imul
outsl
adc
sbbl
rcrb
jmp
leave
iret
jno
cwtl
mov
popa
jecxz
push
add
bound
mov
fistl
cmp
scas
jae
decl
clc
les
test
loope
movsb
jge
mov
hlt
adc
cmp
cmp
repz
decl
negb
mov
ficoms
mov
rcl
std
sbb
lds
pop
inc
push
pusha
call
xchg
jns
cmpsl
mov
scas
shrl
cmp
bound
hlt
std
dec
jl
aam
sbb
inc
sahf
out
mov
push
mov
xchg
cmp
cli
jl
sbb
shll
jbe
jmp
out
mov
jl
cmp
or
scas
and
movsb
cld
cwtl
jg
testl
lods
scas
mov
xor
mov
pop
in
decl
addr16
add
cwtl
mov
orb
fwait
cmc
sub
mov
imul
dec
xchg
jle
mov
jp
push
aaa
notb
dec
pushf
sbb
xchg
push
je
out
inc
je
cmp
psubw
sub
std
pusha
xchg
xor
sub
adc
sbb
xor
cli
fs
dec
rcr
in
xchg
in
cwtl
push
in
test
sub
lret
dec
push
or
mov
ljmp
xchg
repnz
lahf
repz
lea
add
es
lret
or
jmp
sahf
inc
dec
lds
mov
sbb
add
jl
inc
jb
push
sbb
decl
hlt
mov
xchg
imulb
lods
in
popa
idivl
scas
int
jp
xchg
lret
sbb
pop
lcall
mov
jo
inc
arpl
push
ret
dec
adc
inc
scas
inc
push
shll
jmp
stc
xor
lods
es
fimull
xor
lret
add
stc
mov
sahf
jns
call
cwtl
std
dec
fldcw
add
enter
cmp
and
pop
inc
jo
scas
add
arpl
pop
mov
lock
iret
fldt
int
jb
lret
ud0
aas
in
mov
outsl
into
and
and
and
lahf
sbb
jmp
inc
paddsb
jle
pop
out
stc
dec
cmp
ret
add
sub
cmp
xor
sbb
js
inc
pop
das
lret
push
inc
fs
cli
sub
ss
ljmp
lret
cwtl
mov
popf
sahf
mov
mov
out
push
movsl
or
xor
ret
pushl
pop
or
fdivl
mov
mov
push
xchg
lds
incl
ret
cmpsb
adc
add
cltd
pop
orb
jmp
mov
xchg
push
xlat
and
call
mov
sbb
mov
adc
dec
setae
and
bound
iret
and
imul
push
decl
test
aad
dec
shlb
jge
and
flds
inc
hlt
pop
jecxz
add
mov
lcall
ja
iret
sbb
xchg
jge
sub
push
sbb
mov
in
loop
orl
jmp
adc
mov
clc
scas
scas
inc
pusha
popf
jecxz
jb
mov
sar
lods
cmp
dec
cmp
ud0
decl
inc
call
mov
cld
sbb
push
mov
insb
dec
fs
ljmp
scas
aas
sub
inc
in
popf
jae
or
xchg
cmp
icebp
imul
in
jmp
xlat
shrb
pusha
outsl
scas
add
mov
xor
mov
mov
ds
cmpsb
test
push
sbb
xchg
sub
cmc
inc
push
inc
rol
mov
int3
and
ficomps
pushl
adc
loop
lods
or
leave
pop
inc
and
fnstsw
xor
mov
pushl
fldl
ret
ret
fcmovnu
mov
pop
jbe
outsb
aas
lret
sarb
fistpl
incl
js
mov
test
loopne
add
inc
into
mov
jl
hlt
or
dec
fimull
clc
mov
pusha
sub
dec
int
ret
gs
fistl
call
jg
fistl
and
test
mov
outsl
push
nop
mov
je
lcall
aas
jnp
aam
mov
xor
mov
cmp
or
mov
ret
lcall
or
mov
xchg
fildll
adc
mov
or
sbb
call
lret
mov
sub
movsb
inc
stos
mov
pop
sbb
or
dec
cli
insl
mov
pop
decl
pop
ljmp
test
sub
loopne
decb
aas
pop
sahf
add
push
dec
mov
lcall
inc
and
dec
pop
cmp
xchg
adc
jae
pop
pop
jle
xchg
xor
out
das
scas
mov
mov
sbb
cmp
jb
subl
jne
mov
mov
ljmp
adc
loop
xor
push
loop
xlat
sbb
popf
mov
test
sub
and
loopne
ljmp
push
lahf
or
jecxz
pusha
pop
sbb
notb
and
xor
mov
push
push
aam
ds
into
int3
decl
dec
mul
xor
mov
insb
pop
xchg
xor
shll
out
loope
leave
lcall
loop
shlb
imul
jb
ja
in
xchg
pop
push
jno
imul
lcall
fadd
std
insb
adcb
dec
xchg
jno
into
ja
in
shlb
xchg
sub
lcall
dec
push
jbe
push
inc
enter
outsl
incb
decl
push
inc
leave
test
ljmp
decl
xchg
rclb
sub
ficompl
les
adc
out
sub
mov
jae
popl
ja
insb
imul
test
cmp
push
cmp
xor
pusha
pusha
loopne
enter
movsb
or
adc
push
decb
rcll
xor
jmp
inc
pop
insl
inc
and
and
cmp
mov
out
out
push
inc
mov
mov
dec
imul
xchg
xchg
stos
xchg
mov
leave
loop
inc
pop
call
or
shll
call
std
inc
dec
inc
cmp
xchg
xor
stos
mov
push
xor
inc
sub
jl
cli
icebp
xchg
test
dec
test
push
je
push
mov
int
out
adc
int
xchg
ljmp
mov
das
push
int3
orl
test
pop
loope
inc
xchg
fwait
das
xchg
ljmp
mov
es
sahf
test
call
insl
ja
or
loop
push
adc
push
fdivr
incl
fldcw
and
in
popa
out
inc
pop
xchg
insb
adc
dec
negb
sbb
xor
fildl
ljmp
pop
cmpsb
aas
cltd
roll
push
xchg
fst
adc
out
pop
sbb
incl
lret
pop
sahf
jbe
cmp
pop
inc
inc
push
popa
add
mov
jae
jmp
inc
cvttps2pi
adc
adc
loope
adc
arpl
cmc
mov
pop
fwait
ret
inc
repz
in
xchg
pop
push
cmc
push
ds
stc
in
pushf
les
or
loope
mov
mov
fdivrp
lcall
mov
sub
stos
cmp
inc
ss
push
or
add
and
lds
push
outsb
in
pop
cmc
inc
fmulp
decl
aaa
mov
rcrl
add
sbbl
jnp
jmp
cmp
stos
dec
clc
push
scas
imul
movsb
cmp
sub
xor
inc
add
push
rcl
pop
adc
leave
xor
or
push
dec
jmp
fwait
mov
push
cmp
xor
sbb
add
sbb
aad
faddp
sahf
add
xor
dec
ficoms
lock
jb
dec
pushl
ret
xchg
xor
adc
fisttpl
push
lret
aaa
dec
test
cld
ds
push
inc
sub
xor
fiadds
sub
mov
add
mov
scas
das
jp
sbb
decl
sbb
inc
testl
scas
push
and
xchg
and
std
movsl
ljmp
ljmp
dec
movsl
sarl
push
popa
imul
fildl
xchg
dec
or
xorl
cmp
pop
sbb
imul
lcall
stos
jmp
insb
sbb
add
call
decl
loope
pop
imull
pop
add
or
sti
mov
cmp
pop
negl
pushl
sbb
dec
jbe
loop
or
add
sahf
mov
jns
mov
mov
jne
push
rcl
xchg
cmpl
xorl
pop
clc
jl
jmp
or
mov
xlat
cmp
dec
dec
pop
popf
in
in
adc
stc
enter
pop
xor
pusha
inc
and
call
dec
adc
push
mov
jbe
mov
daa
movsl
push
dec
fldl
lret
cltd
lods
in
xchg
insl
push
ja
icebp
ret
stos
cmp
pop
aad
shrl
outsb
adc
sub
call
imul
cmp
sbb
pop
test
lods
int3
aaa
ss
mov
jmp
enter
cwtl
cmp
push
icebp
push
pusha
pop
xchg
sub
sbb
iret
mov
xchg
aam
jmp
lods
sub
inc
sub
sbb
ljmp
sbbb
incl
jg
xor
cmp
outsb
jo
ret
sbb
outsl
xchg
cmpl
jmp
xchg
add
test
sub
nop
add
pop
je
sub
jns
out
inc
ror
mov
push
dec
rcl
mov
xchg
mov
fwait
push
nop
movsl
add
xchg
mov
mov
ljmp
jns
xchg
add
das
mov
dec
int
dec
in
pop
shll
push
clc
lahf
addl
call
mov
inc
mov
cmp
push
mov
adc
incl
dec
xchg
push
imul
fs
inc
lahf
xor
xchg
lret
test
gs
rol
or
fdivrs
add
xchg
int3
sub
pop
lcall
sub
push
enter
mov
ljmp
das
mov
jnp
and
inc
aad
mov
add
das
jge
sub
ljmp
aam
cltd
imul
mov
sub
outsl
je
cmpsb
adc
push
pop
in
mov
decl
data16
jbe
mov
out
aaa
xor
aas
add
mov
incl
call
repnz
cmp
aas
push
mov
cmpsb
lcall
xchg
pop
inc
hlt
jnp
pushl
cmpsl
dec
adc
mov
pop
ja
popa
div
dec
and
jecxz
out
xchg
jmp
cmpsl
call
sbb
scas
shrb
mov
scas
popf
and
test
in
adc
stc
xor
adcb
frstor
popf
cmp
xchg
aad
test
push
dec
andb
xchg
das
leave
ret
and
decl
dec
shl
mov
xchg
mov
fsubs
loopne
mov
sbb
stos
ds
rorl
clc
pop
outsl
cmp
scas
hlt
bound
push
aas
and
lahf
jl
bound
lahf
xor
or
jae
dec
popa
test
push
loopne
adc
shll
test
cmp
call
pop
js
cmpsb
push
pop
lahf
mov
add
push
jecxz
call
aam
out
jmp
sbb
or
xchg
adc
dec
inc
movsl
stos
mov
scas
jg
dec
iret
xlat
fs
pushl
popf
leave
jae
jb
pop
fcomps
or
test
shrb
fsub
in
jmp
cld
cmp
lahf
sub
movsl
lods
sub
popl
ret
pop
xor
pushl
arpl
je
sub
dec
adc
sbb
jp
sub
jae
mov
xorb
pop
leave
test
inc
fisubrl
sbb
out
pop
and
cli
cmp
dec
jle
jecxz
fdivs
aas
stos
jecxz,pt
pop
out
mov
and
lret
test
gs
mov
push
cmp
jg
pop
aas
jbe
repnz
test
add
jae
mov
mov
jnp
mov
scas
out
aaa
lea
imul
cmc
sbb
lods
sub
in
fstps
int3
inc
dec
push
incl
xor
push
mov
or
shlb
or
and
jnp
mov
pop
pop
lcall
ja
pop
pop
testb
mov
sbb
or
xchg
xabort
mov
mov
pop
call
or
pop
add
push
test
pop
mov
adc
lret
cwtl
mov
inc
es
inc
inc
mov
cld
jmp
mov
mov
out
mov
insl
add
or
dec
jbe
pop
adc
scas
sub
daa
adc
mov
test
fs
clc
pop
inc
std
or
lcall
jg
fcmovnbe
ffreep
xchg
scas
pop
stc
ja
movsl
push
clc
sbb
push
fdivrs
mov
ljmp
add
pop
sub
rclb
bound
mov
xchg
mov
shlb
cmc
jb
jae
decl
jbe
pop
and
xchg
and
fsts
xchg
nop
mov
xchg
enter
inc
popf
jmp
cmpsb
pop
pushl
inc
xchg
faddp
dec
adc
mov
inc
pop
das
jne
inc
push
mov
hlt
je
test
push
aaa
cmp
sub
dec
movsl
and
adc
adc
or
ja
push
push
stc
lock
jne
pushl
push
xor
mov
popf
xor
xor
stos
repnz
push
lret
mov
stc
mov
adc
lcall
imul
and
cmp
mov
aam
aam
jmp
push
out
and
iret
cwtl
mov
lods
pushf
sysenter
ret
xchg
subb
sahf
mov
call
lcall
dec
insb
cwtl
stos
add
and
xchg
sub
leave
push
aaa
cld
jmp
adcl
xchg
push
mov
dec
sbb
loop
pushl
xchg
and
jmp
js
pop
xchg
push
mov
adc
decl
lds
pop
call
cmp
lret
ror
push
loopne
xor
daa
test
dec
sub
jmp
mov
incl
dec
push
jno
in
mov
mov
push
nop
je
mov
inc
mov
ficoml
outsb
adc
sbb
aaa
lret
pop
xchg
lret
and
push
out
es
nop
insb
add
mov
xchg
xchg
jns
mov
test
mov
and
or
dec
sbb
nop
cmp
sub
sarb
lods
mov
push
add
add
jp
addr16
inc
cmp
add
decl
push
nop
push
mov
push
cmp
inc
xchg
es
or
std
cmp
inc
shl
ljmp
and
loope
sub
dec
push
push
cmp
push
jno
popf
stos
dec
adcl
dec
jbe
jmp
in
pop
mov
pop
push
aad
or
push
das
lret
cmpsl
out
dec
cmp
cmpsl
inc
testb
inc
ror
sbb
pop
mov
adc
insb
mov
mov
or
call
pushf
sub
sbb
cmp
dec
push
out
dec
xchg
push
aas
xor
mov
ljmp
mov
scas
out
std
inc
adc
fistpl
push
addb
xchg
sub
in
jp
ljmp
rcl
mov
in
inc
mov
popf
das
jge
out
cmpsb
clc
sbbl
idiv
inc
mov
push
clc
cmp
push
mov
repnz
push
movsl
repz
and
push
lcall
mov
pushf
sbb
jae
stc
or
int
dec
scas
mov
cwtl
das
mov
mov
dec
mov
jns
cmpsb
in
jmp
sub
pop
int3
into
insl
fs
add
mov
mov
js
decl
push
adc
gs
mov
jo
shl
cmc
fwait
arpl
repz
mov
sbb
adc
decl
out
adc
pop
jns
adcl
je
cli
pop
aas
xchg
xlat
adc
jnp
decl
repnz
mov
lret
dec
out
cltd
sbb
sub
out
shrb
mov
jp
lcall
das
push
mov
imull
mull
mov
cmpsl
mov
jno
movsb
ds
repz
adc
jo
sbb
mov
or
pushl
es
mov
and
cmpsl
xchg
mov
jb
and
push
and
out
ljmp
xchg
fiadds
xor
pop
sbb
lret
call
fs
sar
pushl
cmc
pop
inc
rclb
test
mov
loope
jge
jle
stos
lcall
leave
jp
loope
mov
and
xor
leave
mov
mov
push
pop
cmp
clc
and
jbe
sbb
mov
mov
addr16
push
sub
mov
pop
sbb
mov
mov
aad
mov
fsubr
sub
movb
cmc
ss
lcall
add
std
cmpl
fsincos
cs
stc
fidivs
in
and
call
rol
push
xor
imull
mov
clc
aaa
mulb
repz
out
pop
ja
arpl
add
ret
cmpsl
sub
outsb
inc
ja
cmp
xchg
mov
mov
mov
icebp
inc
stos
sbb
cmp
cmpsb
nop
out
sub
jbe
call
jo
jo
call
jae
pop
push
cld
fimuls
push
lret
push
xor
cmp
adc
idiv
inc
sub
rol
aaa
rorb
dec
pop
push
inc
pop
les
or
xchg
lods
cmp
sub
xor
icebp
ret
arpl
fsubs
scas
gs
dec
movsb
ss
call
leave
leave
fs
incl
jmp
push
jno
inc
out
mov
mov
leave
xchg
mov
xor
cld
cmp
loope
lahf
shlb
cmp
insb
in
mov
mov
xlat
jp
fbld
inc
dec
sbb
cwtl
mov
fidivrs
add
fcompl
lcall
xchg
jmp
dec
mov
mov
or
popa
or
pushf
ss
add
push
xchg
incl
fucomi
daa
mov
push
pop
mov
inc
adc
xchg
add
dec
cmp
lcall
xchg
pop
or
inc
sti
push
sub
add
adc
pop
packssdw
or
inc
sub
sbb
xor
mov
and
testb
adc
inc
fsubrs
ljmp
cmp
int3
mov
or
lret
or
ror
js
andb
mov
jmp
xchg
sbb
adc
sub
push
push
xlat
fidivs
popa
inc
rol
mov
ljmp
in
pmulhuw
loop
mov
mov
sub
mov
push
adc
ljmp
stos
loop
adc
enter
add
test
jae
sbb
push
dec
dec
pop
mov
xchg
mov
dec
sbb
mov
cmp
adc
vpsrlq
pushl
mov
stc
out
mov
push
inc
imul
and
sub
push
xchg
sbb
lock
mov
or
int
and
es
std
xchg
sbb
xchg
out
out
int
mov
jl
packssdw
repnz
rcll
mov
xchg
xchg
js
fwait
clc
popf
cmpsb
dec
cli
fdivr
jmp
pop
dec
xchg
test
fwait
movsl
cmp
das
rol
pushf
jne
mov
xchg
call
sar
jmp
mov
cli
mov
mov
push
leave
xchg
movsl
popf
popa
ret
loope
and
xor
and
lcall
fsubrs
pop
sahf
sbb
push
sub
gs
cltd
cli
stc
pop
and
ljmp
sarl
in
jmp
shl
pop
xor
sbb
and
ljmp
jb
mov
jecxz
inc
aas
jmp
mov
mov
push
scas
stos
out
push
inc
adc
jmp
aad
push
mov
cltd
jb
dec
mov
fldl
arpl
aad
xchg
jmp
shlb
adc
insl
jp
mov
aam
push
and
fcomp
bound
lret
fnstsw
mov
pop
outsl
sub
adc
push
fildll
cmp
sahf
cvttps2pi
icebp
pushf
adc
decl
xchg
dec
sub
cwtl
jg
fidivrs
lds
aas
add
call
pop
test
cmpsl
add
sub
rolb
xchg
or
pushf
mov
pushl
fyl2x
sub
insl
cld
in
and
dec
add
add
and
mov
jae
incl
adc
lahf
lcall
mov
jge
adcb
test
and
add
decl
jns
mov
ret
into
jnp
xchg
add
sbb
dec
push
mov
bound
pop
sbb
lcall
ss
dec
hlt
jno
push
mov
rclb
mov
icebp
pop
popf
lds
lret
ljmp
jo
js
or
xchg
jne,pt
mov
call
mov
push
adc
add
mov
jmp
mov
or
mov
xchg
sub
mov
loopne
out
sbb
pop
jle
mov
jmp
cltd
mov
ja
in
inc
int
into
pop
mov
mov
daa
cwtl
jle
imul
int3
lcall
test
or
incl
fcmovnb
cmp
mov
out
fistps
xorl
je
outsl
sti
fimuls
xchg
add
jno
mov
cld
fdivrl
xor
rcr
or
add
decl
pop
xchg
js
flds
sti
clc
movsl
xor
test
sbb
inc
cmc
push
jle
push
sbb
push
dec
stc
push
pop
adc
xor
mov
or
dec
in
add
mov
mov
sarb
out
xchg
dec
fstpt
outsl
leave
sysret
mov
push
jae
pop
jge
call
xlat
jmp
cs
mov
fstpl
add
movsb
fnstenv
or
ret
jnp
sti
incl
out
adcl
sub
out
out
andb
mov
mov
jmp
insb
xor
pop
int
movsl
cmpsl
int
sbb
aad
bnd
jecxz
cmp
jns
out
or
out
fisubrs
mov
leave
push
sbb
push
jno
ljmp
xor
jb
leave
jmp
jp
mov
pop
xor
bound
jo
shrb
cmp
or
adcb
lcall
push
add
sbb
fiaddl
repnz
jae
fcoml
xor
test
lcall
in
es
mov
insl
sub
sbb
test
repz
inc
xchg
jg
mov
jp
xchg
or
push
mov
cmp
lahf
stc
nop
test
cmp
insl
pusha
dec
mov
addl
mov
sti
movsb
sbbb
shll
jg
inc
aam
sub
enter
dec
cld
sub
or
loope
jno
pop
sub
dec
test
lcall
pusha
in
jno
ss
das
lcall
xchg
inc
stos
cwtl
pop
or
xchg
shl
call
jno
ja
pop
adc
popl
jnp
out
jnp
mov
jb
sub
push
bound
das
icebp
inc
adc
cld
sbb
aam
stos
pop
out
jnp
imul
ljmp
je
enter
pop
pop
adc
ficompl
xchg
leave
jo
pusha
in
rolb
call
sahf
lods
mov
negl
sbbb
inc
mov
or
loop
cmp
adc
mov
shrb
dec
popa
pop
clc
dec
call
xchg
fistps
xlat
and
adc
loop
mov
repnz
adc
mov
push
call
scas
mov
mov
das
xchg
pop
repnz
and
xor
outsb
inc
dec
lods
decl
cmp
fistps
gs
cld
pusha
pop
mov
or
push
outsl
cwtl
js
mov
pop
sar
lcall
jo
pop
pop
cwtl
mov
int
lret
jecxz
into
outsl
jmp
aad
or
dec
push
mov
fwait
mov
mov
inc
rcll
xor
pusha
insl
aaa
stos
cli
jb
sarl
cmp
ss
aaa
or
jbe
sti
lock
mov
idiv
cs
dec
dec
bound
jle
cmp
fdiv
or
jl
mov
add
imul
or
pushl
cmp
cmp
in
ret
jle
insl
cwtl
loope
out
jl
mov
mov
data16
cmp
and
insl
push
je
mov
movsb
jbe
add
aam
dec
pop
or
ljmp
cmp
inc
imul
mov
loop
in
dec
jb
loop
xchg
lret
mov
das
imul
mov
loope
push
dec
scas
ror
dec
pusha
adc
mov
int3
clc
xor
adc
call
shlb
mov
cmp
sbb
jns
jns
dec
insl
inc
in
in
imulb
call
mov
hlt
dec
in
add
cmp
daa
jmp
lods
mov
cmp
jo
jmp
lret
xchg
push
or
inc
jmp
jno
lds
sbb
adc
xorb
decl
imul
sbb
xchg
or
mov
sahf
adc
loope,pt
jb
xlat
and
cmp
push
xor
mov
call
stc
jmp
lock
incl
adc
and
movsl
pop
xor
push
das
cmpsb
cli
mov
or
cmpsl
call
mov
mov
mov
scas
sub
add
outsl
inc
mov
add
lahf
fdivr
decl
notb
cmp
mov
cmp
sub
mov
mov
inc
add
imul
pushl
ljmp
push
inc
shll
cmp
and
sahf
push
xchg
or
lea
xor
cld
inc
dec
push
push
add
mov
rcrl
inc
dec
roll
or
movsb
lock
dec
jp
ljmp
sbb
inc
jno
add
add
hlt
pop
and
mov
jns
mov
dec
jle
cs
dec
imul
adc
xchg
int3
mov
nop
inc
sub
xorb
adc
mov
test
lret
std
and
mov
xchg
push
dec
int
jmp
sbb
xchg
inc
mov
fxtract
pop
testl
insb
fists
add
or
fs
dec
insl
push
mov
popf
xor
cmp
xchg
das
xor
imul
mov
ds
retw
std
mov
lcall
fnstcw
ret
aas
fldl
or
scas
aad
pop
mov
jmp
subb
and
or
sarb
pop
pop
inc
jno
lcall
into
push
lcall
and
push
call
insb
push
cmp
push
sub
adc
xchg
test
cmp
out
ss
push
jno
bound
fstpt
daa
jecxz
dec
sub
inc
lret
mov
fwait
stos
cmp
jle
jmp
pop
jp
add
pop
mov
cmp
addr16
jg
incl
mov
enter
loope
mov
and
jge
cmp
adc
jge
xchg
loop
or
rclb
ret
jns
cmpsl
adc
iret
fdivl
insl
imul
out
cld
jp
push
scas
ret
push
dec
pop
and
out
mov
add
or
sahf
test
pop
push
sti
loop
mov
call
stos
jge
pop
adc
cmp
xor
outsb
pusha
cmp
cld
mov
int
imul
ds
jb
jmp
inc
inc
sub
cmpsl
test
mov
clc
clc
outsb
aam
cmpl
in
fsubl
je
pushf
bound
pop
xchg
xlat
fsub
xor
je
fnop
loop
mov
pop
cmpl
adc
scas
frstor
adc
mov
gs
jbe
ret
xchg
pop
fstpt
out
hlt
mov
ljmp
mov
movsb
sub
xor
pop
test
daa
pop
push
insb
enter
call
jo
adc
xchg
enter
decb
fwait
cmpsb
ret
insl
mov
cmpsl
in
pusha
pop
outsb
xor
dec
call
jns
jl
in
push
hlt
xchg
cmp
xchg
enter
insl
ljmp
pushl
pop
movsl
fldenv
mov
xor
nop
mov
mov
aas
popf
sbb
and
inc
imulb
pop
mov
fiadds
ja
mov
mov
popf
aad
sub
inc
ss
xor
decl
push
dec
cmpsb
hlt
adc
cmpl
pushf
pop
xchg
divb
cwtl
aad
sub
mov
aas
lock
pushl
rolb
adc
add
clc
ljmp
gs
lcall
out
push
dec
push
test
cmp
mov
or
xchg
in
mov
xchg
data16
sbb
jmp
fcmove
push
adc
ret
add
sbb
mov
cmpsb
adc
or
xchg
aas
hlt
imul
fisubs
inc
ds
jno
mov
dec
adc
icebp
xor
incl
jg
stos
jg
movsl
imul
push
mov
mov
pop
into
inc
nop
call
negb
fiadds
out
xor
and
mov
nop
add
cmp
xor
adc
jl
mov
jl
and
jae
ficoms
mov
and
popf
pop
push
mov
scas
lahf
cmp
and
adc
decl
mov
ljmp
stos
jmp
fcomps
and
lcall
test
bound
icebp
repz
lret
xor
incl
andnps
xchg
in
mov
pop
mov
cmp
push
decl
mov
adc
push
and
test
ficoml
cmpsl
pushf
popa
sbb
push
dec
scas
or
mov
clc
jmp
adc
lock
cmp
mov
stc
mov
push
pop
mov
add
lret
aaa
in
adc
jmp
in
inc
inc
lds
sub
and
jmp
inc
jb
xor
and
cltd
sar
subl
jp
int3
lds
ret
decl
test
or
bound
cmp
mov
dec
push
cmc
mov
mov
sub
jp
sbb
pushl
nop
push
xor
in
in
pusha
imul
sub
rorb
pusha
and
push
ljmp
mov
sub
roll
mov
push
mov
out
inc
insl
fistps
jmp
les
es
xchg
or
int3
shll
dec
mov
ror
dec
mov
out
push
movb
in
in
mov
mov
divb
jmp
and
decl
dec
in
sub
xchg
mov
sub
loop
adc
xor
lock
fstl
sbb
jo
add
stos
jnp
mov
pop
in
or
out
repz
inc
push
incl
gs
xor
mov
cld
imul
aas
sub
cmc
in
adc
fadd
push
pop
pushl
nop
in
mov
mov
cli
cmp
jnp
je
inc
inc
adc
ljmp
ljmp
sbb
cmp
add
jne
outsb
mov
ljmp
jmp
dec
in
adc
jnp
loope
dec
xchg
sub
mov
fstl
clc
sub
pop
aam
loope
mov
xor
icebp
cmp
fwait
ds
sub
mov
inc
adc
mov
incl
ret
xchg
ds
ss
inc
xchg
dec
dec
inc
mov
stos
or
add
jne
sbb
pushl
adc
in
ds
fcmovnb
push
popf
dec
jae
mov
xor
stos
lcall
xchg
adc
push
or
push
push
or
fsubrl
int3
std
aaa
cs
mov
scas
dec
sub
js
xor
pop
jbe
xor
dec
mov
adc
movsb
mov
in
cli
js
cwtl
insb
cmp
aaa
jmp
mov
cmp
push
lock
adc
jmp
add
pop
or
and
stos
outsl
in
cs
int
in
andl
loop
call
sbb
daa
lods
mov
aam
mov
jg
jmp
sahf
jbe
std
pop
movsl
in
jb
pushl
out
leave
sarl
push
sub
dec
xchg
jmp
sub
hlt
cmp
fiadds
fdivs
xchg
and
pop
xlat
stc
lret
mov
mov
pop
adc
sbb
jp
jl
sbb
stc
adc
push
push
aas
jne
jno
repnz
cmp
dec
pusha
leave
decl
ret
rorl
pop
sbb
jns
cmp
sub
stos
pop
jae
lahf
test
sub
bound
pop
cmp
jns
dec
push
push
lahf
push
adcb
push
lea
pop
clc
adc
xchg
sbb
cmp
into
push
fidivrl
andl
push
mov
dec
jecxz
lock
jmp
ret
scas
fs
xchg
xor
fmuls
shlb
aam
lods
imul
test
push
push
in
incl
ffree
pop
push
or
adc
das
out
in
adc
jnp
mov
and
inc
aad
fcmovu
pushf
push
xchg
movsl
push
jl
inc
push
cmp
repz
stos
pop
repz
fcomps
rcrl
ficoms
mov
dec
jge
in
mov
pop
cwtl
clc
cmc
test
mov
lahf
mov
repnz
ljmp
iret
jle
jle
add
jle
jno
pushf
push
mov
dec
add
push
stc
push
jnp
fsub
dec
cmp
clc
jmp
push
cltd
ss
mov
mov
in
cmp
lock
jns
movsb
iret
mov
pushl
popf
pushf
js
std
inc
mov
push
push
or
movsb
sub
movsl
mov
mov
lret
incl
or
int3
lds
nop
xchg
inc
sub
lret
inc
add
or
incl
add
ret
js
sub
dec
jne
sub
popf
cmp
push
mov
pop
inc
xor
outsb
jmp
pop
push
jmp
and
movsl
jnp
and
inc
mov
push
jmp
mov
add
hlt
subb
out
mov
dec
int3
in
push
mov
mov
inc
xlat
pusha
cmp
addb
test
xchg
movl
jmp
xor
shrb
dec
mov
pop
arpl
or
cmpsb
loopne
mov
xchg
out
cld
mov
fisubs
cmpsl
call
push
orb
aam
enter
adc
stos
xor
ljmp
outsl
roll
pop
xchg
test
adc
aad
mov
addl
jmp
mov
xchg
inc
lods
or
jne
jecxz
and
lods
out
mov
sbb
xlat
mov
ljmp
nop
cmp
jbe
mov
insb
mov
dec
ljmp
call
inc
lods
stc
roll
dec
js
ret
push
pushf
lret
adc
mov
jp
add
jb
arpl
sti
sti
or
jp
outsl
in
xchg
xor
mov
mov
out
lods
insb
int
sahf
push
mov
incl
rcll
cmp
jne
aaa
cmpb
sub
xchg
pop
addb
push
aas
adc
xchg
cwtl
cmp
ljmp
nop
jle
xor
xor
and
and
inc
scas
rclb
and
lcall
mov
push
mov
mov
and
xchg
mov
fidivrl
inc
add
popf
sub
mov
pushf
fistpll
mov
and
xchg
adc
push
std
decl
aam
jo
mov
xor
and
orl
iret
or
scas
andnps
iret
call
sub
xchg
mov
test
scas
mov
pushf
cmp
fidivrl
repz
cmp
inc
incl
push
add
jl
push
pop
sbb
or
mov
push
mov
sub
ljmp
mov
neg
jnp
ja
cmpsl
pop
mov
add
popf
icebp
pop
daa
sub
lcall
xchg
lock
cli
pop
push
icebp
xorl
push
pop
fs
jae
clc
pusha
test
mov
idivb
inc
std
xchg
mov
xlat
pop
imul
mov
fsts
pop
xor
lods
mov
outsl
mov
pop
pushl
lds
popf
xchg
sub
xchg
xchg
ljmp
mov
cmpl
push
jmp
enter
and
movsb
and
ret
cltd
inc
jo
lahf
and
cmc
sub
lcall
bound
cmp
xor
sub
xchg
int
test
push
cmp
lds
and
sbb
decl
loope
mov
inc
cmpsl
out
sbb
and
aad
iret
xor
xchg
jge
sub
jmp
sub
inc
cs
pop
bnd
dec
lret
inc
out
cltd
mov
and
pop
idiv
decl
bnd
jo
and
daa
push
shlb
xchg
push
in
adc
jnp
inc
jb
jmp
xchg
int
lcall
lds
lds
fbstp
in
or
cs
incl
mov
addr16
adc
out
cli
insb
loope
fildll
inc
mov
dec
hlt
mov
inc
js
repz
mull
dec
pop
test
adc
ljmp
add
mov
outsb
icebp
fcmovne
inc
push
ja
rolb
inc
cmp
jmp
and
ret
push
fwait
insl
adc
test
in
cmp
out
pop
ds
add
or
jp
mov
in
int
add
and
sti
and
fiaddl
test
in
cltd
and
dec
push
inc
adc
repnz
mov
jmp
sub
sub
jl
jmp
jne
bound
in
loope
mov
ret
orb
or
cli
cmp
dec
sub
mov
test
movsb
outsl
outsb
pop
inc
nop
inc
les
aad
movsb
bound
imul
pushl
adc
nop
xor
dec
out
addr16
aam
xchg
daa
cmp
outsl
or
clc
lcall
psllw
mov
xor
push
lods
mov
loop
subb
xor
enter
xor
jmp
test
fcoms
stos
xchg
nop
stos
sbb
dec
movsl
mov
stos
repz
dec
std
dec
incl
push
clc
nop
mov
mov
xchg
mov
and
enter
push
jmp
push
popf
insb
cwtl
mov
out
xor
daa
mov
xchg
pushf
dec
xchg
mov
lcall
push
testb
ret
ret
or
lret
jbe
leave
cmpsl
call
jp
imul
inc
mov
xor
cmp
pop
rorl
fiadds
gs
lret
push
dec
lea
push
cwtl
imul
test
je
sbb
popf
test
mov
jmp
sub
loop
add
xchg
jl
frstor
xor
xor
fwait
inc
andl
sti
fst
cmp
jne
mov
outsl
test
aad
stos
xchg
mov
sbb
call
lods
ret
pop
and
cmp
lock
mov
sarl
decl
and
jmp
inc
push
xchg
mov
adc
cmc
imul
pushl
das
sbb
dec
lock
sub
mov
sbb
or
sub
sbb
lcall
ja
cmc
in
adc
add
push
pop
pushl
je
movsb
ret
and
sub
xchg
stos
xchg
incl
cmp
jge
orb
jb
sub
popf
fnstsw
push
push
cmc
or
mov
or
pushl
adc
cmp
clc
and
or
sub
mov
in
fstps
push
aad
rdpmc
jnp
xchg
xor
mov
pop
mov
gs
adc
test
in
push
cmp
pop
adc
fadd
loope
push
call
mov
in
and
add
imul
mov
pop
push
and
test
pop
incl
xchg
clc
and
jmp
imul
mov
inc
fidivs
push
in
mov
ljmp
pop
jle
xchg
pop
insl
lahf
add
mov
aam
mov
clc
sbb
pop
xor
adc
ljmp
sub
decl
adc
dec
call
push
push
and
jp
jge
xchg
add
je
iret
cmpsb
cmp
sarb
mov
push
jns
movsl
mov
decl
notl
pop
cmc
mov
out
jne
outsb
sub
test
in
stos
mov
int3
shlb
test
inc
iret
outsl
mov
adc
mov
add
repz
ljmp
je
push
dec
icebp
adc
mov
dec
decl
jl
inc
imulb
data16
jmp
add
cmpsl
adc
xor
xlat
pusha
mov
insb
inc
jp
push
sub
call
add
adc
sahf
lret
hlt
cmp
into
dec
push
sub
mov
repnz
scas
inc
decb
call
leave
jecxz
out
loope
jecxz
popa
xor
dec
ds
scas
stos
pop
push
cmc
popa
scas
adc
pop
xor
call
test
mov
add
sub
mov
ja
addr16
sub
test
ljmp
fsin
add
mov
jb
mov
ret
test
pop
dec
inc
jmp
jae
mov
incl
hlt
call
addl
or
mov
je
push
int
add
mov
push
lret
pop
into
imul
mov
mov
in
sbb
push
mov
adc
flds
mov
movsb
bound
cmp
out
std
sbb
mov
or
cmp
push
xchg
icebp
inc
push
arpl
popa
cld
insl
or
jmp
int
and
lcall
add
push
jle
sbb
lea
xor
inc
test
inc
repz
lcall
mull
pop
into
xor
push
sub
xchg
inc
jo
hlt
mov
mov
cmp
cmp
insl
popf
sub
cmp
aad
mov
pop
inc
sbb
xor
call
adc
mov
out
mov
cmp
ret
movl
xchg
cmpsl
ss
push
pop
testl
fld
add
lahf
rolb
xchg
add
jle
mov
sub
repz
lcall
add
sub
sbb
shrl
add
stos
movsl
movsl
mov
adc
pushl
out
adc
stos
or
push
xor
mov
adc
out
inc
and
pushl
fcmovnu
orb
jae
cmp
lea
out
icebp
and
call
mov
fiaddl
cmp
inc
add
lcall
pop
notb
sub
pushl
lret
cmp
mov
push
dec
lret
insl
and
adc
repz
out
dec
bound
jns
xchg
fdivrl
add
insl
mov
pusha
mov
push
or
shl
jl
aam
pushl
add
testl
xchg
lock
out
loope
xor
movsb
nop
pop
push
sbb
jle
jmp
xchg
mov
leave
dec
rcrb
mov
sub
push
jl
mov
incl
int3
and
outsb
mov
dec
or
inc
stos
in
xor
sub
fdivrs
addl
decl
and
rcl
insb
jmp
test
in
mov
xchg
xchg
xchg
lea
cmp
incl
and
cmpb
jmp
in
cmpl
out
ljmp
lcall
push
mov
scas
call
xor
ss
fs
ds
push
push
dec
push
jmp
arpl
cmpsb
scas
cltd
test
mov
xchg
push
or
jnp
mov
ja
xor
xchg
jmp
fsubp
xor
cmpsl
inc
push
xor
js
inc
cwtl
ss
hlt
mov
xor
mov
mov
call
stos
stc
out
inc
inc
xchg
in
ret
cmp
lock
mov
addr16
ljmp
mov
ljmp
shl
xor
inc
sub
and
mov
in
notb
sbb
incl
lahf
inc
pop
jecxz
mov
sbb
int
or
add
jns
pop
call
jae
in
jg
ss
out
pushf
ret
pushf
xchg
je
mov
mov
add
fdivr
decl
jl
sbb
imul
cmp
sti
fwait
cmp
jnp
xchg
daa
push
pop
sub
incl
add
pop
lret
push
insl
inc
jge
in
add
lcall
cmp
cs
out
faddp
mov
sbb
mov
xor
pushl
addl
lds
iret
flds
out
bound
js
call
push
inc
stos
lods
in
sbb
scas
push
lahf
scas
sbb
dec
fisttpll
leave
clc
mov
insb
xchg
fbld
clc
adc
push
call
adc
aaa
in
push
in
inc
andl
loopne,pt
ret
loopne
mov
rol
mov
cmp
inc
adc
dec
cmp
sub
movsb
and
or
push
adc
sbb
fcomip
jmp
push
fnstenv
outsb
sub
jecxz
cmp
jbe
je
fistpl
push
ljmp
outsl
in
fs
mov
fdiv
popf
pop
arpl
rcll
jb
push
gs
adc
ljmp
ret
adc
add
icebp
xor
mov
mov
loopne
mov
ret
cli
out
inc
fists
cwtl
cs
call
xchg
sbb
add
lods
or
xchg
test
call
sbb
sub
cmp
mov
les
mov
xor
lcall
sbb
push
cmp
test
ror
cld
cmpsl
stc
adc
pop
jge
rolb
adc
push
or
cmp
nop
incl
jno
add
cmp
xchg
cmpsl
cmp
adc
js
mov
movb
not
add
imul
inc
hlt
popf
xor
mov
mov
add
outsb
das
ja
addl
xor
jp
xchg
pop
divl
cmp
inc
xchg
push
sub
pop
movsl
ret
fs
pop
and
ficomps
cwtl
nop
testl
mov
clc
insl
mov
stos
or
fmull
pushl
lods
repz
loop
test
inc
ja
sub
clc
jle
in
mov
fdivrp
jmp
sub
fdivl
cmp
js
call
out
into
ret
add
imul
jmp
popf
shl
jmp
icebp
mov
and
mov
rcrb
jbe
lahf
ss
ds
aam
fdivrs
and
cmovg
jno
jae
in
add
lcall
outsl
in
mov
pop
xchg
hlt
out
adc
int
mov
call
fwait
push
adc
mov
lcall
fnstenv
fnstcw
add
inc
mov
add
jecxz
repnz
into
cmp
inc
pop
and
sti
adc
mov
decl
inc
enter
decb
scas
mov
jge
int
push
shlb
pushl
dec
pop
xchg
or
outsb
dec
negb
jns
xchg
sub
and
outsl
cmp
decl
ds
pop
outsb
cmp
mov
loope
inc
imul
push
push
inc
jbe
jb
inc
decl
or
pop
pushf
sbb
pop
ljmp
aas
iret
xlat
and
sub
incl
push
fsubrl
clc
sbb
dec
cmp
jle
add
push
inc
testb
std
pop
sbb
cmpsb
lods
pop
pusha
mov
loop
inc
xor
mov
jge
mov
cmpl
std
add
subb
mov
clc
rorl
orl
addb
shrl
cmp
insl
enter
and
dec
sub
insl
fs
out
aam
or
scas
dec
insb
das
sub
jmp
lcall
jno
aas
sub
loop
sbb
jp
gs
and
push
xchg
fdivl
ljmp
clc
jp
sbb
or
mov
in
pop
cmp
jmp
in
iret
jae
ja
jae
sbb
jns
popa
arpl
clc
push
sahf
test
js
xchg
sbb
call
lds
aad
popf
out
cmp
jbe
pop
jnp
ja
adc
cmp
push
cmp
xor
decl
adcl
lods
add
xchg
push
sbb
inc
adc
call
jg
fcompl
push
mov
insb
sarb
mov
mov
mov
incl
push
rol
xor
out
push
cmp
ret
lahf
add
jge
lods
mov
test
iret
inc
and
fbld
add
mov
mov
sbb
scas
mov
jp
jno
push
mov
lahf
ret
xor
sub
sub
fmuls
imul
out
push
jge
and
decl
cmp
adc
or
push
sbb
imul
adc
push
outsb
inc
pop
sbb
xlat
lcall
sub
dec
in
jle
lds
jle
lds
add
sub
or
or
popa
pushf
into
pop
loop
lcall
dec
pop
cltd
push
call
fucomi
lahf
push
ds
push
in
jmp
fs
repz
and
xor
xchg
dec
and
outsl
push
lret
xchg
dec
div
add
pop
fcos
mov
into
inc
fistpl
test
inc
loop
std
lea
dec
lret
pop
outsl
setbe
sub
mov
xchg
dec
mov
pushf
incl
push
mov
pop
loop
pop
mov
push
rorl
imul
pop
test
nop
in
ja
push
test
mov
into
xchg
sbb
sub
das
cli
push
out
pop
out
pop
cli
test
inc
push
repnz
jmp
shll
sub
dec
lret
test
lods
cli
out
jo
and
pop
xlat
decb
push
sub
push
or
xor
xor
adcb
push
or
test
cmpl
mov
fnstcw
add
add
push
jo
daa
mov
xor
sub
push
inc
push
push
jle
mov
out
in
fistpll
pop
lea
test
call
andb
les
icebp
adc
divb
mov
mov
ljmp
cmp
and
testl
pop
rcll
stos
add
push
mov
and
ret
mov
pop
std
lds
inc
xchg
mov
pop
mov
adc
ljmp
mov
inc
jl
call
push
fs
mov
and
pop
popa
incl
push
mov
inc
inc
pop
or
cs
ja
daa
pop
cltd
imul
pop
pop
incl
lods
lods
push
mov
mov
and
sub
jo
pop
and
test
ret
bound
incl
pop
lret
push
xchg
xor
jmp
iret
rcll
icebp
dec
test
cmp
pushl
or
push
test
popf
call
fldl
scas
and
mov
enter
clc
fwait
push
ret
sub
jne
adc
inc
mov
sbb
cmp
mov
adc
int
add
or
sub
andb
xchg
int
shlb
subb
jnp
fcompl
push
xor
or
xchg
sti
sbb
mov
mov
repnz
nop
decl
ds
shl
fwait
pop
dec
add
pop
push
mov
mov
xchg
call
test
bnd
mov
push
in
push
repz
pop
dec
inc
push
push
movsb
popf
scas
mov
xchg
or
cli
pushl
pop
popf
in
rcrb
enter
pop
adc
aam
ficoms
jecxz
gs
and
mov
cs
imul
sub
mov
sarl
bound
lret
jl
decl
mov
push
inc
nop
add
xor
sbb
cmpsb
aaa
mov
loopne
jmp
push
insl
push
popf
loopne
mov
dec
cmp
cs
pop
test
lcall
jbe
call
rcrl
mov
repz
call
push
or
sub
imul
call
jge
cld
and
and
loopne
jecxz
pop
aam
out
flds
sbb
mov
pop
clc
unpcklps
call
inc
and
and
ljmp
push
sub
outsl
and
mov
inc
int3
repz
adc
call
jno
dec
mov
daa
in
xchg
jne
push
push
adc
jae
cmpsl
in
loope
ljmp
sbb
rorl
ret
mov
dec
mov
aas
sbb
shrb
jmp
bnd
lds
jge
mov
fsubs
mov
sahf
cmp
sbb
in
push
mov
nop
mov
xchg
pushf
movsb
xchg
fildl
cmpsb
lds
repnz
or
rorb
or
or
sub
mov
fcmove
repz
jl
in
cmp
adc
lahf
fs
push
push
cmp
sbb
ja
dec
xchg
pop
in
jo
repz
ja
dec
jg
add
xchg
mov
jp
incl
scas
dec
mov
out
or
and
in
cwtl
in
adc
sahf
mov
mov
call
dec
call
pand
mov
mov
es
cmp
ljmp
movsb
push
inc
movsl
push
xchg
jl
icebp
and
sub
pop
stos
or
clc
shlb
and
jmp
ja
sub
push
adc
hlt
sub
inc
lcall
incl
lea
cmp
add
jecxz
ret
jo
cmp
pop
fnstsw
outsb
push
xchg
js
adc
insb
mulb
icebp
adc
sub
into
and
pop
sti
dec
cmpsb
inc
and
fcmovu
mov
push
in
add
das
adc
std
mov
cwtl
add
shl
and
decl
aad
sub
sbb
leave
mov
and
pop
test
inc
in
call
mov
ret
jns
or
inc
push
adc
add
cli
dec
andl
lcall
mov
cli
nop
or
mov
mov
mov
mov
mov
lcall
mov
test
scas
jno
sbb
aaa
outsb
xor
pop
cmpsb
mov
mov
decl
pop
ret
popf
jnp
push
sub
add
ror
dec
outsb
mov
pop
xchg
into
add
dec
in
cmp
decl
add
mov
adc
or
dec
and
push
sub
push
aas
push
sbb
call
pop
lock
sbb
or
jb
cmc
mov
sti
mov
lods
inc
sub
or
call
push
mov
pop
push
or
data16
idivl
std
mov
lds
jmp
jae
mov
addr16
inc
fwait
jne
sbb
negl
mov
push
and
jbe
incl
push
mov
push
lds
scas
cmp
addr16
jge
add
jae
push
mov
movsb
add
jmp
and
inc
xchg
or
push
lret
mov
jge
add
jle
pop
or
int3
lcall
ss
inc
cmpsl
mov
in
lds
cmpsl
shr
mov
adc
mov
push
sub
orb
icebp
sbb
bound
loop
jge
adc
jmp
mov
and
adc
sbb
shl
sbb
lods
mov
jno
push
dec
in
enter
cli
in
inc
push
sbb
mov
dec
mov
adc
sahf
data16
or
sbb
decl
add
xor
dec
xlat
pop
mov
and
je
lret
jecxz
test
imul
mov
adc
inc
pop
push
adc
push
inc
push
dec
mov
jmp
shlb
inc
push
std
idiv
call
mov
xor
aad
stos
inc
mov
mov
pop
lret
stos
popl
push
mov
mov
push
fistpll
push
sahf
lods
sahf
xchg
mov
lods
push
and
add
jp
mov
call
ficoml
ret
push
jne
les
int3
jecxz
mov
ret
xor
sub
jle
fisubrs
incl
add
mov
jecxz
stc
shlb
aaa
and
sbb
fbld
ffree
mov
mov
call
scas
fadd
insb
test
cmp
add
decb
loopne
aam
or
scas
lcall
xchg
in
mov
pusha
fprem1
fwait
mov
es
cmp
mov
jmp
xor
xor
jge
aas
xor
and
arpl
xor
test
lods
adc
pushl
sub
pop
outsb
xchg
push
jecxz
mov
xor
imull
inc
ja
inc
stos
sbb
call
mov
testb
mov
hlt
sarl
push
andl
cmpsb
cwtl
stos
incl
dec
xchg
sub
in
xchg
inc
imulb
movsl
aas
pop
lcall
and
aad
pop
mov
insb
loope
or
es
cmovns
insl
and
mov
ljmp
cmp
mov
jg
dec
aas
mov
jb
fstl
add
shlb
stos
xchg
mov
ljmp
imul
addl
xchg
lahf
les
and
scas
popf
xor
mov
push
cltd
cltd
inc
xchg
jne
ffreep
lret
cmp
or
mov
dec
in
sbbb
xlat
or
xlat
cltd
inc
lcall
test
pushl
lea
or
in
push
mov
sarl
mov
decl
data16
test
cmpsb
aad
ds
mov
mov
add
jmp
fiaddl
and
push
in
sbb
dec
xchg
sarl
or
call
dec
dec
call
dec
call
aaa
or
arpl
lcall
ljmp
push
addr16
pop
cmp
jae
xchg
xchg
nop
decb
push
xor
jmp
cmp
mov
sub
repz
ds
xor
lcall
lock
mov
or
sbbb
andb
pop
imul
jmp
popf
cwtl
xor
stos
cmpsb
lahf
jb
test
je
mov
lcall
push
cld
cwtl
aaa
mov
sbbb
pop
lahf
ljmp
incl
stos
mov
push
rorl
fldl
out
xchg
cmc
leave
popa
cld
pop
pushf
xor
lcall
lods
sbb
jbe
xchg
aaa
xchg
loop
bound
lods
sarl
dec
add
pop
imul
lcall
adc
and
pop
add
test
add
inc
cmp
cmp
repz
fldenv
repnz
sbbb
mov
pop
sbb
out
mov
pop
pop
in
fldcw
add
or
call
sahf
mov
dec
cmp
and
cmp
lock
jp
and
pop
loope
pop
sar
push
xchg
pop
dec
inc
sub
jns
dec
lahf
mov
idiv
sub
outsb
imul
xchg
xorl
pop
jp
mov
lds
push
dec
popa
mov
jl
lods
dec
inc
out
jne
mov
lcall
stos
mov
mov
rolb
shrl
and
roll
decl
add
or
out
mov
and
filds
xchg
inc
mov
push
mov
push
pop
or
test
sbb
xchg
cmc
les
shlb
inc
inc
loop
jmp
mov
and
adc
orb
xor
shl
std
call
out
nop
sub
addb
jecxz
enter
and
push
cmp
lock
cmp
pushl
leave
nop
shll
and
nop
cmp
out
mov
xchg
ss
test
lcall
adc
or
sbb
push
je
call
jb
or
inc
push
dec
loopne
add
incl
jbe
cmp
bound
add
popf
mov
fisttpl
mov
ljmp
jb
xchg
jne
mov
fsubrs
addr16
mov
mov
movsb
sarl
add
call
or
daa
mov
lahf
jo
mov
mov
bound
fsubl
incl
lret
adc
xchg
dec
mov
test
push
out
dec
jmp
repz
iret
xor
loopne
jg
dec
jg
ret
fwait
pop
mov
cmpsb
mov
jle
movsl
movsl
pop
sub
mov
pushl
jmp
push
std
jp
and
flds
sub
faddp
fildll
outsb
mov
add
push
sub
add
mov
push
jnp
jmp
jae
testb
cmp
call
out
js
popf
pop
sbb
loopne
psrlw
test
xor
repnz
dec
popf
clc
cmp
or
jmp
daa
mov
lret
fwait
out
cmp
inc
out
and
jl
mov
incl
lods
aad
mov
ljmp
test
cwtl
shll
jae
xchg
sub
pushl
test
sub
sub
sbb
je
sub
cmp
mov
push
das
sub
jmp
fs
inc
repnz
and
jge
aas
pushf
arpl
mov
fistl
mov
xor
add
int3
pop
lahf
iret
aas
or
mov
testl
ds
dec
add
mov
push
add
mov
pushl
das
mov
aas
inc
aad
sbb
pushf
add
popf
add
hlt
stos
inc
inc
jmp
xlat
addr16
add
xchg
dec
inc
sti
inc
stc
xor
aas
sar
outsb
mov
aad
ds
sub
stos
push
ret
mov
out
jg
bound
mov
add
xchg
call
arpl
push
xor
mov
sub
lock
shlb
xor
pushl
ss
iret
pop
aaa
inc
scas
xchg
add
adcl
fmuls
movsl
xchg
loopne
lcall
mov
pusha
jge
sub
icebp
dec
or
loopne
pusha
aad
bound
and
clc
jl
test
sti
imul
push
mov
insb
xchg
dec
icebp
mov
push
mov
mov
popl
cmp
xchg
inc
js
cmp
inc
push
rcrl
push
cmp
loopne
inc
enter
push
cmpsl
fisubrs
jmp
adc
out
dec
fimull
push
ljmp
cmc
xor
inc
lret
stos
imul
sarl
sarl
push
mov
icebp
scas
addr16
push
jle
cmpsb
mov
repz
stos
fcos
in
push
cmp
push
scas
push
pop
and
pop
popf
jmp
stos
pop
jmp
xor
bound
js
and
cmp
jns
lahf
jb
cmp
call
xor
gs
adc
in
ds
sub
xorb
mov
mov
jno
stos
and
clc
gs
jne
pop
add
aaa
inc
mov
or
mov
push
jnp
sarb
stos
mov
lods
ss
jmp
nop
loopne
lds
ffree
lock
add
aam
jb
jge
aas
inc
pop
aaa
pop
ljmp
adc
sbb
push
jmp
ret
sbb
fcmove
popa
cs
loop
scas
cmpsb
xor
xchg
call
sub
loope
enter
ret
mov
insb
adc
dec
cmp
cmp
or
mov
jbe
lock
incl
or
push
sbb
inc
fcompl
push
test
out
jmp
pop
fbld
incl
sub
sbb
inc
ja
pop
in
ficomps
mov
test
lock
cmp
stos
cvtps2pi
mov
in
cmpsl
mov
xchg
sub
mov
inc
pop
int
lds
decl
push
lods
jmp
mov
mov
xchg
xor
inc
lret
adc
popa
ljmp
push
add
push
insb
sbbb
sbb
and
jl
mov
and
por
scas
push
pop
out
les
adc
data16
cmpsl
scas
les
into
push
jo
xchg
data16
xchg
pushl
pop
or
daa
in
ds
outsl
mov
jmp
pushf
adc
xchg
fbstp
and
ljmp
jecxz
lock
or
mov
aaa
aam
and
test
repnz
adc
inc
jmp
hlt
cmp
add
into
ret
mov
push
mov
ss
inc
jge
movsl
push
mov
jmp
aam
xlat
ss
jo
mov
in
xchg
add
out
decl
and
das
jl
xchg
in
dec
scas
icebp
push
sahf
daa
xchg
shlb
fxch
add
jmp
jo
dec
jecxz
ret
jb
repz
out
jo
inc
sbb
inc
sbb
incl
leave
push
fiadds
fnstcw
mov
xchg
mov
add
addr16
mov
mov
js
xbegin
jb
ret
daa
or
or
mov
fprem
clc
iret
jnp
jmp
mov
and
push
xchg
fnstcw
js
jl
lahf
adc
cvtpi2ps
xor
call
addb
rorl
scas
xchg
movsb
outsb
jbe
mov
mov
add
scas
call
mov
rcrl
repnz
push
xchg
hlt
arpl
int
pusha
jo
jl
pushl
cld
sbb
shrl
or
dec
jns
xchg
addr16
fisubl
fs
xor
jmp
pusha
sub
loop
rorl
inc
mov
addr16
subl
fildll
fsub
and
decl
and
inc
insl
or
fcmovnu
jnp
js
pop
inc
lods
leave
mov
icebp
adc
mulb
pushl
mov
ror
bound
inc
adc
add
sbb
clc
addr16
fstl
pop
xor
testl
or
xor
dec
rcrb
xchg
push
cmpsb
add
out
idiv
sub
shll
dec
jae
int3
gs
sub
push
out
testb
js
jne
aad
sbb
push
decl
xor
loop
insl
fwait
xchg
xor
cmp
test
cmpb
xchg
cld
inc
lcall
inc
pop
inc
shlb
mov
lret
push
lods
inc
je
cmp
jmp
or
xor
arpl
das
scas
jne
inc
test
mov
adc
call
ljmp
inc
xchg
pop
data16
cmpsl
sub
mov
mov
and
cwtl
rcr
ljmp
insb
scas
jne
aam
push
pop
inc
cwtl
jae
test
dec
jns
mov
add
call
jp
push
jns
mov
xchg
pop
dec
sti
ret
lcall
jge
je
jmp
push
into
mov
pop
jmp
and
xor
mov
scas
jecxz
sub
cmp
fmull
cld
mov
and
loope
push
jecxz
mov
push
push
incl
call
inc
test
pop
sbb
mov
push
leave
sbb
rcrl
push
mov
push
pushl
insl
shrb
mov
ret
sub
xchg
out
insl
or
mov
jg
jmp
call
aad
mov
aam
mov
xchg
push
and
incl
lcall
or
lea
iret
or
mov
add
or
add
and
call
sub
enter
fsubrs
lret
int3
mov
jmp
std
stc
mov
dec
cmp
add
mov
add
jl
out
or
mov
jp
stos
xchg
fwait
pop
fcmovbe
push
lcall
pop
jae
xchg
inc
mov
inc
mov
dec
adc
rclb
in
xchg
das
test
cmp
out
hlt
pop
sbb
mov
sti
cmp
outsl
stc
cld
inc
std
out
mov
sbb
rcrb
pop
lcall
imul
dec
iret
xor
dec
sbb
int3
jmp
sub
pop
cmp
sahf
cli
or
pop
shrl
imul
push
into
xchg
inc
fldl2t
pop
dec
cmp
lock
xchg
sub
ret
push
cmpsb
mov
out
xchg
incl
cmp
.byte
.byte
xchg
int
test
add
mov
pushf
adc
insb
ss
or
mov
adc
sti
jne
fisttps
and
dec
push
paddusb
mov
scas
es
xor
push
adc
xor
std
mov
inc
sub
push
int3
and
pop
cmpb
sub
jl
add
incl
in
or
add
push
jnp
ljmp
call
mov
push
mov
push
call
pop
ret
das
sbb
mov
push
inc
add
movl
xchg
data16
inc
xor
out
xchg
in
or
in
aas
mov
shl
imul
mov
out
sbb
jl
out
and
sbbb
mov
jl
mov
adcl
adc
sti
add
mov
xor
aas
dec
xchg
cli
movsb
push
and
push
xor
ret
or
xchg
jp
mov
dec
jle
sbb
enter
inc
repnz
inc
sub
xchg
pop
and
inc
mov
cld
fsubrl
mov
inc
dec
aas
dec
xchg
pop
nop
dec
inc
shlb
xor
call
xchg
and
dec
aam
dec
jle
or
sub
mov
test
dec
sbb
sahf
or
cld
sub
pop
dec
rorb
in
scas
inc
scas
push
dec
push
xor
cld
mov
xchg
and
xlat
into
mov
sarl
mov
lea
stc
push
ss
xor
xchg
and
scas
ljmp
insb
pop
mov
fs
xchg
cmp
add
xchg
pop
and
push
leave
nop
cld
sub
jp
and
xchg
inc
pop
leave
pop
pop
pop
push
xor
add
xchg
or
xchg
and
lcall
jle
or
js
xor
mov
jns
push
xchg
pop
and
test
nop
cld
sub
xor
movsl
and
in
leave
xor
xor
dec
and
inc
mov
push
xor
idivl
mov
mov
cmp
xchg
or
pushf
mov
xor
cwtl
mov
repnz
pop
or
clc
loopne
sub
xchg
pop
bound
leave
nop
arpl
pushf
jl
mov
gs
xor
in
xor
nop
cld
sub
gs
xchg
sub
xchg
inc
leave
mov
dec
cmp
ds
repnz
nop
std
sub
xor
in
cld
push
lcall
sub
stc
test
out
mov
xchg
or
lock
shlb
loopne
fs
outsb
fcoms
mulb
xor
addr16
addr16
pop
gs
jo
add
or
jno
sbb
out
in
leave
jb
into
insb
mov
dec
cmp
dec
xlat
je
fsts
lea
xor
in
push
sbb
jg
shlb
mov
push
movl
fnstsw
je
mov
push
call
add
cmp
je
mov
cmp
jmp
ret
jge
inc
jl
jmp
jmp
jmp
cmpl
jl
mov
push
sub
add
out
jmp
jmp
xor
in
ljmp
mov
pop
sub
lea
mov
movl
insb
add
push
add
mov
outsl
mov
dec
hlt
mov
push
dec
push
dec
or
dec
clc
mov
mov
in
dec
jl
cmpl
jmp
mov
add
movb
imul
out
sub
insl
push
lcall
mov
jmp
or
dec
cmp
dec
cld
push
clc
outsb
fs
call
clc
mov
call
add
cmp
dec
decl
rclb
mov
pop
fdivr
adc
mov
push
inc
push
call
movl
out
or
add
or
shl
jne
cmp
jae
mov
movswl
cmp
push
hlt
add
add
push
add
cld
push
call
ds
cs
sub
push
or
sub
insl
push
cmpsb
push
clc
jg
rclb
test
pushl
inc
mov
lea
push
aam
fsubr
into
hlt
movl
out
jmp
pop
inc
add
cld
mov
lea
mov
jae
ds
lea
jne
mov
imul
adc
and
shll
jle
mov
pop
mov
fdivs
jg
insb
and
ret
das
test
in
sub
lcall
push
mov
inc
es
es
inc
jb
orl
add
js
push
mov
and
jge
lea
xchg
pop
jb
fs
movl
push
jne
push
out
or
jne
push
and
fadd
inc
and
fsubr
sbb
movl
rclb
imul
cmp
jge
mov
cs
or
test
mov
sbb
push
mov
push
call
popa
int3
mov
mov
jnp
mov
push
mov
adc
push
test
call
add
rcrb
fnstsw
xchg
add
mov
clc
sti
in
out
jg
test
or
or
cld
insl
xchg
mov
lea
or
je
sub
ret
fmul
pop
test
sbb
push
int3
sbb
popa
addr16
out
pop
jnp
or
add
xchg
cmp
out
mov
jmp
sbb
mov
gs
std
mov
dec
add
push
das
insb
fdivs
inc
hlt
add
mov
jb
lahf
adc
mov
bound
ret
fwait
sbb
mov
fistl
into
sub
ret
data16
mull
mov
adc
ds
clts
push
add
aaa
sbb
fwait
int
sbb
dec
int3
jp
data16
adc
mov
in
cld
add
and
add
adc
pop
test
push
mov
adc
pop
inc
rorl
fucomi
repnz
jmp
cmpsb
add
inc
push
ret
ja
dec
test
and
pop
fs
arpl
lea
std
ja
sbb
push
call
push
lea
gs
filds
push
push
outsl
push
mov
pop
xchg
mov
jb
or
out
fnstsw
dec
clc
mov
cld
mov
sbb
xor
je
decl
or
aaa
push
test
add
sbb
mov
dec
xor
inc
mov
mov
in
inc
lods
pop
xor
imul
dec
jne
push
or
or
test
adc
test
out
stos
cbtw
loopne
or
sti
mov
adc
dec
popa
pusha
loop
out
pop
lea
jns
es
les
mov
push
daa
dec
bound
shlb
push
push
aas
xlat
lahf
sbb
pop
push
mov
pop
and
xchg
jb
pop
xchg
jae
or
or
push
data16
stc
notl
sub
and
test
jmp
mov
call
mov
push
cmp
xchg
je
inc
fadds
je
lea
shrb
rorb
mov
pop
mov
test
lds
sbb
push
fisttpll
fsubs
add
sub
movl
add
inc
lds
mov
lds
sbb
add
pop
jg
int
sbb
push
lea
mov
clc
adc
int3
inc
mov
insb
jbe
cld
dec
popl
pop
push
arpl
adc
dec
je
loope
add
dec
iret
shlb
adc
adc
loopne
jo
inc
add
incl
jae
cmp
lret
add
js
inc
rcrl
jp
loop
call
xor
dec
aaa
std
test
in
cmp
inc
in
push
daa
movsb
aam
call
lea
cmp
cmpsb
cmpsb
cmp
or
push
fmull
jmp
mov
mov
mov
mov
mov
adc
mov
in
pushf
mov
inc
mov
mov
push
or
and
mov
in
and
stc
sahf
cli
lods
add
sub
push
jns
pop
scas
pop
insl
loop
ss
lret
or
in
jl
and
pop
mov
sbb
lock
mov
shll
jae
add
aas
push
add
pop
ret
adc
mov
add
mov
or
decl
es
clc
mov
adc
loop
push
hlt
cmpl
je
mov
mov
add
xor
cld
idiv
push
outsl
push
shr
mov
shl
mov
mov
and
and
push
out
jg
or
push
adc
push
or
dec
pop
jle
fmuls
outsl
enter
cli
incl
es
clc
cmpl
jae
mov
xor
jl
cld
subb
pop
cwtl
clc
sub
add
iret
jns
js
sub
pop
add
sbb
fistpll
sbb
addl
xchg
loop
jmp
push
push
pop
push
incl
addr16
cld
pop
jne
loope
inc
push
sbb
dec
negb
dec
hlt
mov
cld
lcall
mov
mov
shl
xchg
and
shl
or
xchg
and
xchg
std
add
loop
or
adc
mov
pop
stc
fadd
xor
shl
sbb
and
shll
fsub
adc
and
sbb
test
xorl
adc
inc
adc
and
lret
je
clc
fists
add
enter
jmp
push
and
incl
add
adc
rorl
fisttps
ljmp
or
rolb
mov
in
test
pop
mov
inc
mov
rcr
adc
mov
ljmp
and
clc
movzbl
or
aaa
cmp
xchg
or
cmp
and
insb
add
or
add
sar
in
shr
mov
shl
or
inc
nop
mov
aas
jl
push
push
or
lcall
cs
adc
add
inc
clc
xor
ret
inc
into
decb
shr
and
and
cwtl
cmp
add
xchg
movzbl
and
call
push
cmp
hlt
or
pop
fwait
jne
inc
clc
or
ss
inc
add
and
movzbl
jecxz
mov
ljmp
mov
add
mov
xor
enter
pop
xor
ljmp
in
xchg
shl
and
xchg
add
or
mov
clc
jbe
call
mov
mov
cmc
mov
and
pusha
adcb
aad
push
xchg
dec
add
dec
add
decl
push
dec
cmp
cmp
add
jb
es
sbb
add
mov
mov
test
mov
cmp
scas
fcompl
push
adcb
inc
aam
mov
mov
sbb
dec
les
inc
enter
clc
mov
in
adc
pop
mov
dec
mov
ljmp
fldl
dec
les
push
rorb
sti
incl
mov
mov
cmp
sbb
neg
add
add
sbb
sti
nop
xchg
inc
in
in
add
pop
inc
in
dec
in
andb
add
jne
cli
push
call
mov
cld
mov
xor
imul
mov
in
decl
mov
mov
mov
fistpl
mov
mov
pop
loop
out
mov
rorb
push
int3
push
lea
push
add
les
dec
hlt
add
push
cmpl
dec
mov
jmp
push
fiadds
pop
adc
int3
jg
or
ret
icebp
rclb
ret
rorb
jo
or
or
lock
in
mov
popf
adc
ja
cmp
sbb
neg
mov
xchg
jl
add
sarl
ret
add
ja
or
clc
lock
lock
push
dec
in
and
shr
mov
lret
cmp
add
add
xchg
pusha
sbb
clc
cmp
sbb
neg
mov
fs
out
popf
mov
add
push
inc
js
dec
lock
fmul
leave
clc
sub
leave
data16
cld
nop
scas
mov
sbb
testl
push
clc
popf
loope
mov
jl
repz
pop
out
sub
lock
iret
out
enter
js
scas
int3
jne
xor
scas
xor
scas
xlat
loopne
push
js
adc
sti
and
inc
lock
clc
sub
xor
add
js
insl
xor
outsl
xor
imul
mov
adc
mov
dec
clc
js
fcoml
inc
or
out
rolb
sbb
add
scas
or
or
lock
cli
int3
inc
push
enter
xor
sbb
enter
out
js
scas
call
lret
adc
arpl
inc
icebp
ja,pt
mov
adc
fs
icebp
rcrb
scas
imul
mov
enter
pop
cmpl
icebp
shl
xchg
loope
inc
les
xor
sbb
pop
cwtl
scas
or
or
test
test
icebp
lods
inc
add
cmc
scas
int3
clc
scas
movsb
xor
sbb
xlat
xor
adc
out
lret
nop
and
adc
enter
scas
xor
pop
mov
xor
js
icebp
push
cmpsl
mov
js
push
jl
cmp
xor
inc
jo
dec
je
and
lock
add
push
sbb
xchg
jno
pusha
xor
mov
add
lcall
add
pop
movb
cmp
dec
dec
mov
cld
inc
scas
in
push
inc
lcall
sbb
xor
xor
adc
cmp
mov
mov
enter
sub
imul
sub
push
sbb
sbb
mov
jb
pop
dec
adc
sbb
arpl
and
rcrl
ljmp
stos
xchg
dec
add
es
mov
ljmp
les
inc
cld
mov
scas
push
lock
fwait
dec
inc
ja
hlt
mov
pusha
fistpll
add
pop
movss
and
out
mov
adc
push
add
iret
push
push
mov
adc
mov
add
cmp
jbe
cmp
pop
clc
jb
xor
hlt
dec
inc
add
je
aad
call
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
push
cmp
lcall
jne
shr
and
cmp
jb
rep
jmp
nop
mov
out
mov
add
or
loopne
add
jmp
jmp
divl
mov
or
rorl
push
mov
mov
mov
mov
push
mov
add
add
and
dec
add
and
ss
add
and
add
movl
jae
cmpsb
imul
fnstsw
mov
mov
pop
call
shr
in
lock
js
xor
hlt
clc
clc
cld
cld
lea
sbb
add
add
push
mov
hlt
lods
push
out
mov
int3
scas
pop
pop
leave
ret
nop
icebp
fsubrs
std
adc
pop
adc
push
sbb
lock
nop
lea
lea
test
or
or
ja
inc
inc
add
loopne
jb
out
inc
inc
add
stc
sub
sbb
sub
inc
or
nop
and
cld
outsl
mov
and
mov
sub
out
mov
popa
cs
pop
dec
and
jle
sub
sub
mov
arpl
add
int
add
fdivrs
sub
sub
jb
xor
imul
int
subl
add
imul
dec
shll
sbb
adc
xor
rcll
or
or
sti
pop
or
add
testb
lcall
xor
int3
loopne
add
cwtl
jae
lds
pusha
push
aaa
fnstcw
add
fadds
es
fs
inc
add
or
loopne
mov
cmp
add
mov
and
or
push
sub
ljmp
cmp
dec
pop
jne
mov
inc
add
std
push
inc
add
jne
cmpw
cmpl
xor
ja
out
cmp
rorl
push
push
dec
push
sub
gs
add
adc
movl
mov
push
mov
sbb
test
jne
mov
adc
aaa
mov
cmp
mov
push
call
lcall
shlb
loopne
sbb
inc
loopne
dec
idiv
incl
mov
mov
mov
mov
and
sub
and
cmp
je
or
shl
mov
add
lock
ret
cmp
mov
and
cmp
xor
inc
push
or
cmp
push
push
pop
jg
push
or
std
cltd
sbb
or
dec
dec
mov
or
jge
out
or
or
fistps
adc
in
inc
insb
addr16
ja
enter
mov
sbb
and
or
jae
sbb
dec
adc
inc
in
pop
mov
dec
shr
push
pop
push
push
push
push
stos
sbb
outsl
mov
cmpl
jne
xor
xchg
adc
mov
mov
mov
mov
mov
push
lock
imul
mov
loope
gs
mov
incb
mov
jmp
xor
inc
ret
sub
mov
and
ret
sub
cmpb
push
push
cld
aaa
in
in
or
clc
in
jmp
dec
adc
jmp
fwait
push
add
outsl
push
add
add
xlat
std
push
and
movdqa
add
jg
ss
outsl
inc
sbb
push
add
pusha
jle
cli
data16
and
jg
jg
jg
jo
mov
mov
mov
mov
cld
push
incl
repz
sbb
jge
orl
mov
sar
dec
and
and
push
cltd
mov
xor
sub
dec
gs
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
jb,pn
xchg
cmp
mov
cmp
call
mov
roll
sar
in
add
mov
in
mov
mov
rep
data16
cmp
jne
neg
add
sbb
or
sbb
add
movswl
js
lret
inc
in
push
xchg
ja
fdivs
sub
mov
mov
movsl
mov
fmul
jne
add
jge
cld
loop
orl
and
mov
icebp
lahf
hlt
neg
sbb
and
decl
cmp
insl
loopne
sub
and
inc
adc
and
cmp
and
push
cmp
inc
cltd
or
xor
jo
dec
cld
ret
push
hlt
mov
inc
cli
andb
pushl
ja
icebp
out
pop
sub
push
xchg
sti
pop
clc
xor
sbb
int
std
aad
xchg
push
pusha
call
ret
push
dec
sti
out
out
cmp
pop
or
adc
cli
pop
lds
or
aad
ret
push
mov
jmp
mov
cmp
pop
movb
and
loope
ja
jb
pop
pop
or
shr
jo
mov
xchg
sti
decl
sbbl
jb
pop
ret
mov
push
xor
cmp
jne
gs
clc
mov
movl
add
push
pop
push
fdivr
jmp
cmp
je
mov
xor
ss
ss
cmp
je
mov
mov
cmp
lods
adc
fwait
cmp
es
cld
or
inc
add
aas
sahf
nop
and
cmpl
icebp
aaa
mov
pop
test
pop
je
add
cmp
out
pop
adc
mov
and
inc
add
mov
cmp
and
jmp
mov
push
push
pop
sahf
mov
mov
mov
jg
sar
pop
jae
and
jb
cmpl
adc
out
sbb
push
push
push
push
mov
jae
adc
sbb
push
sub
scas
sbb
mov
ja
sbb
mov
adc
mov
pop
pushl
ja
pushl
decl
pop
pop
mov
mov
cmp
je
sub
or
jne
jb
cmp
std
add
xor
clc
je
push
or
call
jmp
push
mov
sub
push
mov
push
aas
jl
jge
add
mov
lods
and
jne
cmp
mov
andl
xchg
dec
mov
add
inc
ds
sahf
cmp
add
push
pop
adc
push
cs
std
fidivrs
pop
pop
add
aas
lahf
iret
out
jae
or
inc
cmp
push
cmpsb
dec
lods
dec
add
pop
idiv
decl
loopne
jge
add
jne
pushl
pushl
pushl
pushl
xlat
fstpl
adc
ret
push
push
mov
push
push
xor
xor
cmp
sbb
push
inc
cmp
sar
pop
jae
add
cwtl
sti
out
popf
push
cmp
pop
je
mov
out
mov
adc
je
jg
inc
mov
push
mov
xlat
jo
mov
inc
adc
sbb
or
cmpsb
ja
fdivrl
add
adc
lds
outsb
es
add
add
push
jae
addl
rclb
inc
sbb
jg
ljmp
inc
cmp
pop
jbe
imul
or
out
rcr
les
push
pop
push
sti
adc
xor
xchg
add
imulb
daa
push
stos
fs
pop
enter
xor
sbb
and
pushf
orl
les
iretw
fstp
jmp
push
call
cmp
je
cmp
je
push
lea
out
fsts
push
pushl
enter
push
pushl
push
call
pop
xor
pop
pop
pop
pop
leave
pop
cmp
outsb
or
pop
jb
inc
mov
sarl
lcall
out
lock
push
push
cs
inc
aas
jle
or
ljmp
call
adc
icebp
imul
add
add
cmp
jb
imul
add
jmp
and
pop
cmp
jae
pop
add
push
push
jnp
pop
jge
dec
push
and
mov
mov
loopne
popa
lret
cmp
fsubrs
or
rorl
cmp
xchg
imul
add
cmp
jae
cmp
jne
mov
sarb
pop
cld
or
daa
jne
xor
movb
sti
mov
incb
or
repnz
mov
dec
pusha
xor
or
dec
pusha
mov
fwait
cli
cmp
jne
dec
mov
rcrl
sti
add
cmp
jge
mov
jle
andl
mov
mov
nop
cmp
jl
mov
add
mov
jae
fs
movl
cmp
inc
jle
stc
dec
cmp
xchg
in
nop
lahf
test
cmp
mov
push
cmp
ud0
out
jmp
call
pop
mov
jmp
in
call
mov
pop
mov
or
pop
pop
pop
pop
fwait
clc
loop
ret
mov
or
orb
js
push
scas
aaa
sahf
cmp
lret
fbstp
mov
cmp
ja
or
cmp
jne
xor
test
sete
mov
movzbl
repnz
mov
adc
add
jmp
sub
inc
mov
test
jne
pop
mov
jle
pop
ret
push
xor
cmp
push
cld
or
jne
popf
mov
cmp
je
inc
cmp
lea
mov
cmp
jne
push
inc
pop
fistps
mov
cmp
pop
pop
mov
mov
fldpi
inc
xor
cmp
add
jne
cmp
notl
je
push
push
fwait
rorl
and
add
cmc
cmp
jne
decl
mov
mov
add
out
cmpsl
push
sub
ret
pushl
fidivrl
fwait
mov
add
push
mov
push
xor
cmp
push
mov
mov
push
out
ljmp
add
or
or
adc
and
and
cld
mov
sete
inc
adc
cmp
pop
test
je
mov
mov
inc
mov
mov
movzbl
or
ret
push
inc
insb
push
adc
pop
mov
or
incl
mov
inc
test
pop
jo
xor
push
cltd
jne
cmp
je
cmp
jne
dec
add
inc
incl
aas
cmp
xchg
cmpb
je
add
rclb
or
inc
jmp
dec
jmp
sbb
shll
mov
incl
mov
xor
jmp
inc
inc
cmpb
je
lods
es
jne
data16
outsb
ret
aaa
std
lea
cmpb
data16
xor
fadds
neg
xchg
shr
mov
dec
jl
pop
inc
sar
fisttps
lret
pop
je
cmp
or
je
cmp
je
daa
sti
incl
rorb
mov
in
mov
fmulp
push
out
fdivr
pop
or
jmp
and
jno
add
pop
sbb
inc
xor
imul
add
mov
dec
adc
leave
test
pop
pop
je
andl
incl
leave
xchg
sub
adcb
cld
sbb
cmp
cmp
inc
add
ja
clc
mov
xor
sbb
jne
mov
mov
push
push
push
lea
xchg
inc
es
ljmp
pop
jns
aas
jae
mov
cmp
jae
mov
shl
sar
decb
jb
jp
cmpsl
mov
cmp
pop
je
ja,pt
pop
testb
push
push
inc
dec
mov
lock
std
add
leave
ret
push
push
mov
inc
xchg
push
push
push
push
mov
cld
aas
fidivrs
pop
jne
call
push
je
movl
call
js
or
add
or
cmp
jne
cmp
incl
dec
movsl
cmp
mov
je
add
cmp
jne
push
repnz
decl
mov
push
sar
inc
push
push
push
push
mov
cmp
cltd
xchg
mov
xor
adc
je
push
push
scas
test
adc
or
filds
pop
and
cld
adc
adc
ja
mov
jmp
cmp
je
cmp
jne
call
out
mov
inc
cmp
je
inc
cmp
jne
add
sub
inc
mov
shll
divl
inc
or
loop
xchg
shll
call
mov
pop
pop
pop
pop
jae
push
push
inc
cld
hlt
lea
test
jmp
or
xor
cmp
jg
outsl
loop
test
mov
mov
add
add
jmp
pushl
movb
orl
movb
mov
movb
movb
movb
cmp
mov
add
aaa
add
cmp
loopne
lock
je
rcrb
mov
arpl
lea
push
mov
mov
movl
es
pop
int
mov
std
std
mov
lea
add
ss
xchg
addl
iret
fsubl
sahf
xchg
adc
cmp
jb
incl
cmp
aas
negb
andl
test
jle
mov
mov
lods
je
lock
call
stc
je
mov
test
je
test
jne
push
call
fdivrp
cmp
jne
mov
sar
and
shl
add
push
mov
push
incl
mov
push
lea
in
xchg
pop
pop
test
je
inc
or
addl
cmp
jl
xor
mov
inc
xor
inc
push
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
mov
jmp
mov
dec
call
fs
arpl
clc
cmp
je
jae
push
fwait
sti
jg
clc
xor
ds
jne
inc
jmp
cmp
jne
push
out
jbe
lods
or
or
movl
xchg
inc
cmp
jl
ret
jnp
adc
push
push
push
rcll
or
aaa
jbe
push
mov
lea
std
scas
jnp
hlt
or
aas
mov
add
add
sbb
clc
jb
imul
add
movb
mov
jl
pop
pop
ret
push
push
mov
mov
lock
push
push
out
in
fucomip
loopne
and
testb
in
and
fistl
scas
cmp
fwait
loopne
pop
jle
mov
jmp
push
push
call
add
cmp
cmpxchg
icebp
pushl
xor
jbe
push
push
in
cmc
pushl
mov
je
sbb
inc
add
cmp
jb
jmp
andl
out
pop
pop
lret
fisttps
pushl
ja
call
sbb
lret
sbb
ja
sti
call
call
sbb
mov
push
mov
dec
xchg
mov
in
and
push
outsl
mov
or
rorb
dec
or
push
or
push
mov
add
jbe
out
mov
sub
adc
xor
add
adc
push
jae
out
xchg
call
testb
xor
ja
mov
mov
mov
cmp
fadd
jle
cmp
pushl
ret
push
xchg
cmp
push
push
sbb
mov
pop
push
pop
cmp
orl
call
push
push
scas
subb
jne
movl
xor
mov
jo
pushf
jns
lock
pushl
mov
xchg
out
sbb
jo
xchg
jg
sbb
inc
movb
hlt
inc
add
jg
add
ficompl
pop
pop
mov
mov
inc
insb
repz
pushl
outsl
js
cltd
fmul
sbbb
inc
adc
es
mov
push
dec
stos
sbb
fucomp
pushl
dec
or
rclb
push
mov
adc
lock
pop
pop
je
in
push
ret
sub
push
ja
add
call
add
mov
jmp
call
jle
imulb
pop
pop
stos
ja
adc
jne
push
sbb
pop
pop
push
push
idivb
nop
mov
mov
bound
mov
psubusb
inc
or
dec
pop
cmp
js
push
dec
jle
pusha
pop
outsb
xor
mov
push
jno
loope
mov
dec
jmp
mov
adc
cmp
std
incl
pop
cmp
call
or
aas
add
sbb
mov
xchg
dec
notl
push
les
in
vprotq
mov
cmp
pushl
mov
test
jne
nop
lea
cs
cmp
sbb
mov
add
mov
dec
fistps
or
pop
xor
jmp
call
icebp
filds
clc
je
dec
push
xor
pop
ret
push
mov
shrb
push
call
push
inc
xchg
out
adc
or
xchg
or
lahf
mov
cmpl
mov
lock
cmpl
cmp
jbe
mov
mulb
add
shrl
mov
mov
xor
push
mov
je
sar
xor
rorb
dec
push
push
test
bound
setbe
arpl
add
insb
or
aaa
inc
gs
xor
push
push
insl
andb
ret
sahf
je
cmp
add
sbb
sbb
add
pop
insl
addr16
pop
enter
cmp
push
popa
xor
pusha
and
fcomps
das
je
jmp
push
or
sbb
jg
and
cmpl
jb
pop
mov
ret
push
pop
leave
ret
incl
push
cmp
outsl
js
adc
add
test
mov
xor
inc
fcoms
jmp
stc
fsubs
movd
push
mov
adc
fstp
out
call
or
jmp
pop
ret
push
xor
cmpl
add
push
mov
cmp
adc
jbe
cmp
add
xchg
jbe
inc
adc
std
addr16
roll
cmp
pushl
subl
pop
or
sub
pop
ret
mov
arpl
pushl
lock
addl
adc
add
loopne
push
push
mov
aaa
and
inc
cld
xor
push
mov
pushl
mov
fcomip
jg
mov
lea
mov
dec
lock
out
mov
mov
pop
push
pop
cli
adc
cmp
pop
cmp
decb
add
xor
je
lret
or
inc
or
loop
bound
push
cwtl
lret
sub
ja
std
fwait
jle
push
push
mov
xor
inc
mov
adc
movl
je
mov
add
xor
incl
mulb
dec
or
inc
or
inc
and
testb
jne
pop
outsl
mov
cmp
mov
lea
mov
decl
push
cld
je
lea
mov
test
lea
mov
sbb
je
cld
imul
push
mov
push
cltd
into
test
jbe
jl
jg
and
bound
jne
cmpb
xchg
xchg
ficomps
les
mov
fiaddl
cmp
jne
leave
aaa
mov
je
push
pop
add
je
mov
and
push
push
call
sub
testl
mov
push
push
aad
enter
je
lcall
add
mov
fwait
push
and
cs
outsl
js
xchg
mov
sbbb
je
cmp
lret
mov
jno
mov
mov
pop
decl
push
dec
out
mov
mov
mov
or
not
mov
xor
roll
and
jmp
jne
xor
call
int
xor
testb
cmova
pushl
daa
pop
or
lock
cmp
jne
mov
dec
std
jmp
test
jne
shl
adc
lock
not
mov
cmpsb
mov
pop
xchg
or
mov
jg
movapd
movl
pop
cmpsl
sar
jg
mov
cmp
je
cmp
mov
gs
mov
and
aas
retw
jecxz
xor
push
mov
mov
aaa
std
mov
clc
push
pushf
pop
mov
sbb
pushf
pop
sub
je
push
add
sti
popf
xor
cpuid
sbb
in
mov
push
lahf
or
mov
pop
imull
add
add
push
ja
fisubrs
adc
mov
sarb
roll
call
jmp
cmpsl
mov
and
jl
je
outsb
add
rcrb
out
cmp
xor
and
call
cmpsl
data16
mull
ljmp
cmp
lods
arpl
jne
lea
cmpsb
out
mov
sbb
xchg
rcrl
or
cmp
jl
stos
ljmp
sub
xchg
icebp
pop
std
jle
lds
mov
adc
jle
add
call
dec
push
incl
add
pop
inc
or
add
out
jne
push
call
pop
out
pop
fldt
inc
or
xor
push
call
cmp
jo
std
popf
std
mov
pop
ret
jo
jecxz
push
sub
sti
cli
pop
pop
jge
xor
cmp
ljmp
pop
pop
adc
sub
xor
loopne
jg
lea
cmp
je
mov
jmp
push
jne
pop
dec
call
cltd
shrl
lods
movl
loope
in
push
inc
rorb
jne
mov
fistpl
pop
or
pushl
pop
in
or
orb
test
mov
les
sbb
add
mov
mov
adc
pushl
call
pop
mov
pop
mov
add
push
lea
sub
pop
xorb
add
add
test
sbb
test
xchg
mov
mov
mov
mov
data16
lcall
orb
data16
data16
data16
pushf
jg
mov
mov
inc
lea
clc
mov
inc
fadds
add
add
inc
cld
push
mov
out
lea
sub
xchg
lea
cmpl
shlb
rorb
call
mov
pop
scas
jmp
fisttpll
adc
pop
ja
test
call
push
sbb
mov
and
mov
and
push
js
xchg
leave
repnz
dec
ja
adc
out
int3
or
lock
pop
pop
sbb
add
cwtl
in
pushl
adc
pop
inc
pop
pop
sbb
je
pop
jmp
push
and
pop
mov
mov
xor
cmp
cmp
jb
lea
in
cmp
ja
push
pop
ret
mov
inc
arpl
push
pop
cmp
sbb
and
add
xor
push
in
push
mov
xor
ret
test
pop
mov
push
mov
mov
pop
lods
mov
pop
inc
add
or
inc
push
mov
sub
jp
jo
jg
and
xor
cmp
jne
sbb
out
or
and
sub
mov
fs
add
or
inc
inc
push
cmpl
push
cld
cwtl
aaa
jge
mov
mov
mov
dec
ja
pop
pop
sti
inc
jb
fimuls
add
js
fwait
mov
cmp
vmaxsd
pop
jae
mov
mov
add
cmp
jb
xor
das
cwtl
pop
jne
lea
push
inc
js
jg
je
sar
push
lea
sub
mov
sbb
pop
add
sbb
cmp
pop
mov
popf
pop
ret
push
push
push
cmp
push
cmp
jg
std
jg
inc
mov
sbb
ret
andl
pop
or
xchg
xor
hlt
pop
addb
in
pop
mov
sub
or
pop
ficoms
cmp
fcomps
js
lea
ret
jnp
add
ljmp
pop
mov
jb
ret
sub
sbb
push
fldenv
decb
cmpw
je
mov
add
cmpl
add
xor
cmpw
in
cmp
fisttps
cmp
enter
adc
push
movzwl
xor
test
push
decl
push
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
fwait
sbb
cmp
jb
mov
mov
push
sbb
mov
in
or
clc
cmp
cmp
pop
shll
and
pop
fdivrl
push
fisubrs
pop
or
mov
mov
inc
xchg
jo
shr
not
and
cmp
gs
mov
ret
loope
mov
xor
pop
mov
jecxz
xchg
ret
or
shll
rclb
shlb
mov
jge
push
push
and
xlat
jge
cmp
jne
mov
fdivp
adc
and
inc
loopne
add
sbb
dec
pushl
pop
cmp
je
fdivrs
add
outsb
mov
es
push
pop
stos
cmp
jne
inc
sbb
ljmp
adc
cmpl
pushl
call
pop
push
daa
iret
stos
cs
loop
mov
sub
xchg
jmp
mov
cmp
xchg
pushl
ret
push
dec
movl
in
andb
jg
call
add
test
cmp
incb
je
ja
push
pop
cmp
je
adc
push
adc
lods
push
je
pushf
sti
pushl
push
cmp
je
cmp
je
cmp
jne
call
test
cmp
cmp
jne
pushl
mov
int3
xor
and
mov
pushl
mov
and
mov
lods
inc
and
add
test
push
jmp
mov
add
mov
add
pop
pop
cmp
jae
add
loope
popa
emms
jg
pushf
mov
je
into
jne
sbbl
sti
add
push
push
call
loopne
dec
inc
cmp
jne
mov
jbe
call
sbb
add
aas
xor
sub
je
sub
je
sub
je
sub
je
dec
jne
pushf
cmc
scas
cmpl
dec
mov
xchg
jmp
sub
pop
idiv
inc
nop
dec
inc
jmp
pushl
addr16
mov
jmp
roll
sbb
das
and
mov
or
aas
jae
mov
mov
jmp
mov
add
jg
add
sti
add
sti
or
movd
adc
add
ret
lahf
ljmp
and
cmp
jnp
or
fcomps
jge
std
jg
dec
je
mov
push
pop
sub
je
add
fs
jne
push
imull
sub
xchg
inc
clc
aaa
shlb
push
mov
ja
les
decl
mov
jmp
mov
sub
je
push
sub
push
push
ret
cltd
jmp
mov
and
add
push
nop
mov
hlt
or
mov
mov
pusha
sbb
je
mov
pop
and
in
scas
jbe
jmp
aam
ja
pushl
xor
mov
mov
pop
jne
mov
mov
mov
movl
fcoms
jge
or
outsl
cli
filds
fdivrl
mov
lods
mov
mov
adc
incl
jmp
sbb
iret
pop
aaa
cld
incl
pushl
push
call
pop
jmp
pop
mov
sbb
mov
mov
je
sbb
je
jmp
loop
xor
rorb
mov
mov
mov
out
std
ret
push
push
push
pushl
and
xor
cmp
add
push
inc
pop
lods
push
pop
sbb
adc
mov
mov
mov
fs
jne
jne
lret
popa
and
fidivrs
test
out
push
adc
pusha
cs
call
cmc
stc
jne
jb
dec
mov
dec
shr
call
xchg
pop
jno
push
les
push
pop
jmp
push
std
ffreep
ret
dec
outsb
push
push
sbb
adc
aaa
nop
cmp
je
pop
mov
add
cmp
js
int
sub
popf
insl
add
pop
out
aam
outsl
sbb
sub
jmp
inc
insb
push
push
mov
xor
cmpl
push
mov
mov
jne
call
push
push
mov
push
jmp
pop
fdivr
jne
pop
cmc
cmp
movsl
es
jne
vpaddusw
push
push
push
and
jp
adcl
ja
and
out
push
xor
inc
push
cmp
ja
add
je
sub
mov
push
xor
je
push
xlat
and
pushl
mov
jne
cmp
pop
cmp
cmpsb
inc
mov
pop
pop
xor
xor
incl
lea
push
push
data16
adc
add
dec
aas
inc
lcall
pop
jo
mov
push
mov
pop
xor
cmp
pop
aaa
mov
add
int3
sahf
xor
leave
mov
or
jmp
inc
inc
cmp
jl
jmp
addr16
out
lods
pop
push
xchg
sbb
cli
cmp
cmp
adc
or
push
push
ret
xor
loop
sbb
divl
lea
cmpb
or
out
add
cld
and
bound
and
or
out
adc
push
punpcklbw
cmp
ja
add
fs
decl
or
jne
call
mov
jmp
aaa
add
or
ja
inc
fdivl
leave
cmp
mov
cmpl
or
adc
jno
mov
inc
loopne
push
test
xor
pop
push
jle
pop
mov
add
mov
push
push
aad
les
js
and
sti
data16
ret
xor
loope
ljmp
je
ss
mov
shlb
and
outsb
jg
add
loopne
mov
mov
mov
mov
jne
sbb
pushf
fs
es
call
cmp
out
sti
pmaxsw
test
fs
add
add
add
mov
fcos
adc
push
push
mov
call
or
inc
hlt
and
je
sti
pop
sbb
jge
add
push
mov
jg
ret
pop
mov
push
in
outsl
in
jmp
mov
cmp
je
cmp
dec
js
inc
xor
repz
mov
je
cmp
je
mov
in
push
push
lea
push
push
push
repnz
iret
sar
je
testb
jne
jae
xchg
push
aam
push
lods
cmp
fdivr
add
or
and
jmp
or
jmp
mov
in
inc
clc
je
cmp
je
call
cmp
je
mov
push
xchg
cld
call
sbb
xor
and
xor
aam
cli
xlat
jb
pop
pop
leave
push
push
xor
cmp
je
outsb
cmp
ja
ljmp
pshufw
movsl
clc
adc
jmp
mov
call
je
push
add
sbb
add
dec
jne
je
out
aad
decl
inc
cmp
je
dec
jne
cmp
jne
mov
inc
gs
jmp
pop
mov
mov
jmp
scas
mov
into
or
pop
adc
jne
mov
jne
push
jmp
sti
pop
pop
ret
cmp
je
mov
xchg
cmp
jne
pushl
lret
adc
rorl
roll
jne
mov
mov
inc
inc
std
dec
mov
mov
jmp
push
or
add
out
clc
call
std
cmp
mov
mov
mov
push
mov
pop
addl
mov
cmp
sbb
pop
fcomip
roll
pushl
je
mov
add
test
je
adc
add
pop
in
lea
jle
rolb
add
test
add
add
cld
cmp
test
je
test
je
push
add
jg
pushl
int
inc
jmp
rol
inc
adc
pusha
xchg
lea
std
adc
or
and
and
mov
imul
scas
ret
sbb
sbb
shlb
jl
aad
dec
sarl
add
mov
pusha
inc
mov
mov
add
sbb
xor
jae
mov
push
pushl
mov
movb
jne
cmp
mov
mov
mov
mov
mov
mov
cmp
or
je
mov
jo
pop
daa
jp
mov
mov
andb
add
mov
fst
mov
mov
adc
int
jo
clc
pushl
bound
jmp
mov
pop
inc
add
pop
ret
cmpb
aaa
int
out
push
jo
ret
mov
lds
fists
xchg
imul
mov
or
dec
hlt
mov
test
jne
cmpl
sbb
mov
inc
and
fisttps
add
cmpb
dec
xor
andl
leave
ret
and
leave
or
ret
imul
add
add
and
pop
mov
daa
adc
orb
adc
sbb
shlb
push
in
xchg
test
sub
and
sub
pop
xchg
inc
pop
sub
push
pop
sub
add
mov
daa
or
inc
cmp
adc
mov
inc
add
add
daa
nop
sub
outsl
clc
add
mov
mov
shrl
cmpl
movsb
out
and
lahf
pusha
test
pop
xorl
loopne
jmp
clc
dec
xor
aas
push
xchg
cli
rorb
ret
sub
loopne
and
or
sbb
arpl
mov
ret
mov
or
cld
ja
sbb
lock
xor
lea
push
sar
pop
es
dec
mov
mov
mov
xor
lea
stos
stos
stos
or
add
sub
mov
mov
inc
dec
jne
lea
mov
mov
add
negl
pop
and
mov
jb
movsb
pop
mov
cwtl
jo
push
lea
push
pushl
call
cli
mov
je
mov
sti
jg
cmp
jb
mov
test
movb
pop
mov
mov
movzbl
cmp
dec
add
roll
xchg
or
fsave
cld
mov
add
shlb
jbe
lea
fs
sti
cmpsb
rcr
push
lea
push
iret
stos
sbb
fistl
jg
in
popf
adc
push
push
pushl
imull
cs
inc
and
and
das
aas
pusha
and
xor
movzwl
test
je
orb
mov
cwtl
and
adc
roll
adc
mov
sti
outsl
in
jmp
movb
lea
inc
inc
sbbb
sub
mov
lea
pop
and
std
sbb
orb
add
jmp
cmp
ja
push
sbb
push
ud0
ljmp
add
inc
cmp
jb
mov
cmp
add
push
fisttps
clc
mov
sbb
mov
std
add
ja
pop
lock
xchg
lahf
adc
sub
mov
cmp
add
sbb
adc
xchg
mov
and
inc
push
mov
sti
mov
cwtl
jmp
mov
pusha
inc
pop
xchg
dec
adcl
cli
xchg
decb
push
movl
adc
cld
je
or
pusha
jmp
cmp
jne
and
jne
and
lock
sbb
les
cmp
mov
lahf
inc
mov
push
mov
cld
or
mov
add
adc
cmp
mov
jne
mov
outsb
push
mov
sbb
aam
sarb
nop
adc
test
jg
inc
in
shlb
push
jb
cmp
paddw
fcomp
test
cmp
mov
push
call
ret
push
lea
aas
jne
rclb
pop
je
lea
lcall
dec
xor
inc
fdivrs
push
call
jae
pop
ja
rorl
pushf
cmpb
iret
ja
mov
out
mov
test
je
inc
decl
mov
push
jb
neg
cmp
inc
mov
imul
mov
lea
lds
ret
mov
sub
mov
movzbl
jmp
out
fidivrs
sbb
inc
cmp
clc
jbe
mov
inc
inc
cmpb
jne
mov
inc
loopne
or
jb
mov
adc
fcoms
jg
out
push
mov
lea
lea
mov
inc
mov
inc
inc
inc
dec
jne
jg
loope
mov
sti
outsb
jae
jno
orb
inc
cmp
jbe
pop
fnstsw
add
jle
add
jns
inc
push
mov
jbe
decl
or
jne
mov
insl
out
push
mov
jmp
clc
shl
add
jmp
cmp
decb
faddp
push
mov
pop
pusha
sbb
add
add
outsb
cmpl
cmp
push
std
and
add
sub
orl
mov
mov
or
mov
pop
cld
jmp
mov
cmp
je
ja
and
and
pop
mov
test
cli
std
fwait
sbb
mov
rep
andl
push
test
out
dec
mov
sbb
mov
add
xchg
jne
pushl
dec
adc
dec
cmpsl
es
test
pop
push
push
lock
call
testb
jne
mov
sub
add
test
idiv
inc
lods
inc
add
add
inc
add
pop
or
or
lcall
ret
cmp
jge
mov
mov
aaa
bound
call
or
mov
std
testb
jmp
sbb
movsb
fistpll
negl
out
fbstp
adc
mov
das
jmp
je
jmp
lods
clc
mov
and
and
ret
xor
mov
shlb
cs
addl
jne
push
and
xor
add
xchg
add
rolb
mov
xor
inc
push
pop
cmpsl
mov
in
or
out
mov
pop
push
sub
arpl
rol
fldt
push
push
testl
push
test
inc
cwtl
push
lods
lods
shrb
mov
das
ds
push
outsb
ljmp
add
mov
test
or
movsb
mov
and
mov
ret
push
push
xor
inc
std
mov
sbb
pop
jne
cmp
addr16
addl
adc
cmc
lds
sbb
mov
jne
ds
dec
dec
frstor
add
pop
xchg
and
adc
mov
orl
xchg
mov
mov
push
xchg
mov
dec
push
in
in
mov
xchg
pop
ret
fwait
rol
add
jbe
testb
int3
mov
test
test
pushl
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
adc
icebp
mov
jne
add
add
or
jne
mov
inc
nop
sbb
shl
jnp
jg
add
ret
test
add
add
xor
mov
ret
je
mov
pop
into
adc
pop
lds
mov
cmpb
mov
adc
mov
xor
cmp
push
je
cmp
mov
repz
je
cmp
jne
mov
mov
pop
fs
pushl
xor
pop
mov
fdivr
inc
mov
pop
pop
pushl
adc
mov
mov
pop
inc
mov
jno
mov
call
or
adc
cmp
mov
push
mov
lea
mov
pushl
jne
cmp
pop
pop
push
lea
pop
dec
ja
icebp
cmpl
pop
jle
incl
xchg
cmp
je
mov
push
xor
aas
add
dec
jne
mov
xor
aas
push
add
xlat
xor
mov
or
notb
or
jg
dec
mov
jnp
mov
pop
cmpl
je
mov
movnti
dec
jne
mov
xor
dec
bound
pop
out
jg
push
mov
mov
dec
icebp
pop
pop
cmp
icebp
mov
mov
cmp
jmp
pushl
push
pop
mov
popa
and
cmpl
pop
pop
ret
fcomip
jg
test
je
and
push
mov
cmp
je
push
mov
xchg
js
test
pop
loop
ret
je
pop
jns
cmpl
pop
jne
cmp
mov
pop
mov
pop
ret
add
or
inc
dec
addr16
sbb
push
ss
cmp
pop
jle
sbb
jo
loopne
adc
cmp
mov
inc
insb
mov
xor
shl
or
sahf
jmp
push
jae
pop
push
pop
pop
ret
std
cmpsb
mov
and
neg
sbb
inc
inc
mov
aam
cmp
je
add
decl
cmp
je
cmp
je
ffreep
or
jmp
and
jmp
or
mov
adc
pop
xorl
jg
mov
mov
loop
push
or
or
fcom
mov
movsl
mov
sbb
nop
or
orb
in
xorb
push
ret
push
push
in
pusha
jp
pushl
aaa
jo
xor
sbb
sub
lcall
aaa
add
cltd
loop
mov
pop
mov
int
cmp
cmp
push
pushf
inc
jnp
mov
sbb
push
mov
mov
cwtl
jae
jge
push
ret
imul
and
adcl
inc
mov
ret
xor
sarl
out
pop
je
es
jmp
sub
add
out
cs
inc
insb
mov
mov
push
rclb
imul
jge
aam
mov
mov
in
mov
out
sub
pop
push
test
fstpt
sti
jle
push
lea
sub
cmp
add
pushl
sbb
pusha
lds
ljmp
pop
pop
ret
mov
push
aas
jne
rorb
pop
xor
push
test
test
mov
jmp
shlb
jge
cmp
popa
pop
std
pushl
lea
cmp
je
push
push
lea
add
rorl
jge
jecxz
jmp
push
push
mov
ror
cmp
ja
filds
cmp
mov
jne
cmp
jae
fnstsw
out
je
push
sub
aaa
fbld
jae
cmp
je
push
mov
sbb
add
iret
outsb
mov
jae
test
call
adc
lcall
cmp
je
test
pop
incl
lea
xchg
ja
test
rcrb
test
cli
pop
pop
pop
mov
notl
push
in
and
xchg
xor
adc
lea
and
push
push
das
inc
mov
add
lea
pop
je
cmp
es
pop
pop
ret
sub
push
xor
inc
push
mov
xor
cmpsl
xchg
mov
je
dec
inc
push
push
lea
movb
mov
lea
and
push
ja
pushl
push
push
inc
xor
sti
sbb
inc
and
pop
push
in
dec
sbb
pushl
pushl
jne
fnstsw
or
add
jge
add
dec
or
loopne
lea
push
or
xor
jg
inc
cmpl
xor
cmp
jne
mov
cmp
push
aaa
std
rorl
push
call
les
pushl
ja
sbbl
push
push
addb
aas
push
inc
and
mov
mov
mov
jmp
aam
jnp
dec
arpl
pop
dec
or
rorb
dec
es
decl
inc
push
outsb
dec
pop
mov
mov
pop
pop
jle
addb
ret
push
lea
sub
dec
stos
pop
mov
sbb
mov
mov
mov
ja
ja
mov
dec
movl
mov
lea
lea
add
mov
mov
je
outsl
movsb
cmpl
je
or
lock
adc
cmpb
jne
push
jo
jne
cmp
out
imulb
adc
mov
mov
add
xlat
scas
ffreep
inc
shlb
les
fiaddl
lock
adc
mov
xlat
mov
push
adc
lods
add
test
hlt
sbb
push
or
int3
fiaddl
rorb
mov
add
dec
mov
add
push
pushl
jge
filds
cmc
and
cmp
jb
mov
pop
iret
std
add
inc
push
push
and
add
pusha
repnz
je
push
jno
jne
xchg
mov
jne
je
push
pushl
mov
jne
adc
and
call
inc
enter
inc
clc
popa
rcrb
lds
rorl
in
les
sub
outsl
sub
out
jo
pushl
mov
lea
les
idivl
call
inc
lea
push
push
add
sar
inc
loopne
test
test
sarl
jae
sub
push
je
mov
adc
add
push
mov
shll
mov
lcall
je
mov
mov
mov
mov
roll
leave
std
push
roll
mov
mov
mov
push
shll
jmp
fmuls
test
jne
cmp
lcall
rcrb
and
push
add
add
push
ret
sbb
loopne
mov
inc
dec
movzwl
mov
leave
inc
jo
xor
push
pushl
jge
rolb
add
test
std
cmp
jbe
mov
inc
and
dec
and
mov
fstp
cmp
je
mov
push
mov
mov
push
mov
add
dec
add
lea
add
cmpl
jl
std
pop
in
jmp
mov
scas
sbb
mov
xor
idivl
xchg
inc
dec
add
jne
push
pushl
lea
mov
jg
mov
mov
add
inc
ss
andw
inc
cmp
jb
push
xor
cmp
int3
cmp
dec
insl
clc
fbld
inc
mov
jmp
andl
pop
mov
mov
mov
add
stc
faddl
jl
rorb
nop
js
mov
or
test
ret
fwait
dec
adc
sbb
clc
leave
adc
mov
mov
mov
repz
inc
cmpb
xor
aaa
repnz
pop
pushl
andl
movsb
dec
jl
add
roll
add
mov
dec
jo
add
cmc
sub
cmc
aad
mov
and
mov
push
mov
je
cmp
je
mov
movsl
pop
lcall
dec
or
cld
mov
cmp
into
mov
jecxz
dec
cmpb
jne
inc
adc
scas
adc
stc
push
es
add
insb
cmpsl
aaa
test
xor
sub
cltd
inc
cmpb
je
in
adc
inc
fistpll
push
or
icebp
inc
in
push
testb
mov
mov
mov
je
sbb
insb
sbb
inc
mov
ja
ds
inc
pop
pop
jne
pop
add
loopne
jmp
leave
hlt
jg
push
push
jg
loopne
incb
loopne
jne
jmp
fwait
inc
movb
andl
jno
aad
aas
mov
sub
xor
cmp
push
testl
pusha
shll
push
orl
cmp
je
lea
test
je
pushl
sbb
sti
je
push
addr16
bound
and
jmp
and
inc
add
cmp
jle
pop
in
add
cmp
jo
int
xor
ja
jl
add
push
push
ja
or
add
incl
imul
add
pop
sub
push
je
mov
pop
mov
jmp
push
push
loopne
cmp
jne
jno
call
inc
push
insl
mov
les
push
mov
mov
sbb
das
jns
push
ja
ss
fwait
ss
push
pushl
jno
pop
insb
out
sub
and
inc
je
sub
dec
adc
imul
or
jle
lods
clc
fistps
push
fisttpl
and
jbe
dec
jmp
mov
add
add
mov
xor
jp
orl
mov
push
adc
push
clc
mov
cmp
je
xor
inc
cmp
mov
cmp
ss
mov
je
dec
or
test
test
fists
sbb
je
jbe
cmpb
movl
sbb
lea
icebp
jns
sub
out
stos
add
jne
jb
sarb
lock
jns
push
adc
aas
push
add
push
push
pushl
jbe
jnp
sub
mov
fmull
mov
adc
jp
push
push
or
xor
jge
pop
rolb
mov
sub
shlb
add
or
call
cmp
push
xchg
mov
movl
xor
cmp
lahf
add
jg
pop
lods
jmp
mov
add
pop
sub
js
push
call
addr16
mov
call
push
insb
mov
test
mov
mov
in
and
and
cmpsl
add
mov
fistpll
addb
or
leave
adc
incl
enter
push
and
sub
cmp
jb
add
cmp
jb
xor
adc
adc
jne
loop
call
sub
add
shr
mov
imul
add
stos
decb
mov
dec
imul
cld
or
fldl
sbb
mov
mov
cld
pushl
push
pop
push
hlt
test
mov
jne
sar
dec
cmp
jbe
out
ljmp
pop
mov
cmp
jne
cmp
mov
mov
shr
lea
mull
sti
mov
mov
and
lea
sbb
outsl
sbb
pop
add
pop
or
push
or
inc
cmpsb
cld
add
mov
or
inc
out
add
into
shll
add
ds
clc
and
hlt
jne
mov
aas
idiv
inc
sti
add
aas
mov
dec
pop
cmp
jbe
mov
add
mov
cld
idiv
shll
cmp
je
push
jno
cmp
jne
cmp
mov
aas
pop
mov
shr
not
and
add
sbb
mov
pop
mov
sbb
cmpb
dec
add
dec
or
dec
or
filds
fs
pop
or
or
fimull
test
fnstsw
lock
mov
or
clc
xchg
pop
dec
add
cmp
jne
mov
mov
inc
mov
mov
jae
cmpb
jne
mov
push
shr
sti
inc
mov
pop
inc
mov
sub
sub
sbb
push
sbb
jg
pop
mov
test
cld
mov
mov
je
adc
or
test
pop
mov
pushf
and
or
inc
cld
mov
inc
add
shl
add
mov
js
push
call
pop
xor
jnp,pt
or
push
mov
sbb
movsb
mov
add
in
ret
adc
dec
adc
or
fdivp
adc
gs
or
call
adc
jo
inc
and
dec
in
mov
add
in
sub
lea
lock
cli
in
push
lea
daa
add
lods
mov
mov
and
cmp
insl
or
std
out
xlat
inc
aas
and
pop
pop
pop
leave
ret
mov
dec
push
mov
cmp
jne
add
imul
push
incl
mov
push
inc
add
jne
imul
cmpl
idivb
pop
imul
add
les
add
xor
cmp
mov
je
push
push
cmpsb
out
add
adc
inc
or
adc
jbe
data16
ljmp
dec
cmp
fwait
orl
mov
mov
incl
decl
decl
in
push
push
decl
inc
or
mov
push
xor
jmp
add
inc
test
jge
mov
imul
into
test
std
inc
clc
pop
mov
mov
stos
aam
stos
decb
hlt
push
mov
mov
out
add
faddl
adc
pushl
jge
lods
lea
cmp
mov
ja
mov
sub
mov
inc
jmp
inc
orl
orl
lea
pop
cli
fdivrl
out
inc
inc
cld
lock
push
add
sub
or
rolb
jne
mov
add
mov
inc
or
jno
decl
sahf
inc
add
mov
inc
mov
adc
fcomip
inc
test
test
dec
inc
jne
or
pusha
push
pop
icebp
fists
push
or
push
mov
or
adc
push
mov
jg
jle
sub
pop
shr
mov
hlt
mov
and
ficoms
lock
cmp
pop
mov
mov
std
fucomp
loopne
mov
test
jne
cmp
jg
fisttps
mov
sar
dec
cmp
mov
jbe
push
pop
pop
mov
cmp
jmp
xor
inc
cmp
sbb
lea
int
out
sbb
add
pop
lods
divl
dec
or
pushl
dec
mov
dec
add
jg
mov
mov
sub
add
cmpl
ja
hlt
add
mov
pushf
sar
dec
cmp
lea
loopnew
add
mov
lea
mov
sbb
pop
or
or
push
mov
mov
dec
adc
and
jge
inc
iret
pop
sti
pop
mov
sbb
iret
jmp
sbb
lea
pop
lods
sub
cmp
adc
jae
lea
mov
fists
cmc
mov
fistl
mov
mov
sub
xor
jmp
mov
das
inc
pop
or
ljmp
jne
lea
mov
lea
mov
sar
dec
cmp
cmp
xor
jae
rcrb
inc
cld
sbbb
jle
fdivs
push
sbb
dec
ret
test
jo
mov
xor
sbb
dec
dec
outsl
lea
adcl
fiadds
bound
ja
push
mov
dec
testb
cld
mov
or
mov
mov
mov
push
ffree
jnp
pop
dec
add
subb
cwtl
push
push
add
adc
adc
into
popf
adc
std
or
push
into
sbb
jb
push
mov
sbb
add
push
dec
loopne
sbb
pop
inc
adc
cld
xor
inc
fiadds
sarb
mov
dec
add
or
int
aam
das
dec
or
push
or
or
clc
add
test
mov
adc
push
mov
jg
mov
xchg
cmp
push
mov
mov
pop
ffree
mov
mov
cwtl
or
in
inc
mov
daa
push
icebp
push
dec
or
loopne
pop
lock
rorb
enter
sarb
loopne
lea
mov
mov
hlt
jle
cmc
rep
jl
je
add
mov
decl
test
sbb
idiv
jne
clc
mov
je
dec
cmp
minps
fisttpll
cld
jmp
mov
sar
dec
cmp
jle
pop
out
ja
out
lea
stc
adc
mov
and
rorl
test
rolb
or
inc
sbb
cli
pop
mov
bnd
out
add
and
sti
or
mov
ljmp
pop
jne
sbb
cld
sti
scas
jg
inc
jge
mov
je
cmp
cmc
je
arpl
rorl
add
lahf
or
and
add
lea
and
cmp
je
mov
and
add
cmp
mov
jne
sbb
mov
or
fcompl
into
jne
pop
jl
dec
aam
dec
and
inc
aam
adc
in
inc
add
jne
and
aaa
shrb
or
call
inc
lock
lea
or
in
mov
cmp
jne
fidivrs
mov
cmp
jne
push
cmp
mov
jl
enter
xor
mov
cmp
inc
cld
dec
rorl
inc
mov
cmp
jne
sbb
inc
fsubr
shll
incl
cmp
movb
mov
std
decl
jne
mov
cmp
add
push
add
incl
mov
cmp
jg
out
jl
ret
push
jmp
push
jmp
push
cli
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
cmc
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
add
sbb
add
clc
add
pop
or
lds
je
or
int
sar
pop
ret
ljmp
je
cmp
jne
cmp
mov
lock
cmc
sti
and
jmp
push
dec
roll
dec
jg
out
sub
mov
mov
dec
add
and
icebp
mov
repz
jge
or
shr
orl
pop
cmp
add
or
xor
shr
testl
adc
and
and
or
jne
add
cmp
call
sti
fdivs
mov
pop
fnstenv
pushl
jmp
cmpl
cmp
cmp
jb
cmp
fsubs
sbb
xor
cmp
jne
call
loop
mov
xchg
das
ret
aaa
les
pop
mov
mov
mov
cmpl
je
mov
movsb
inc
adc
je
mov
mov
and
iret
jne
pop
mov
aad
ret
jle
dec
inc
mov
lret
push
in
xchg
mov
icebp
dec
jo
roll
rorb
sti
mov
jmp
into
jne
pop
push
push
pop
clc
jmp
or
leave
dec
hlt
mov
mov
sub
mov
dec
inc
xor
inc
pop
pop
cmp
je
dec
mov
cmp
jne
cmp
lret
sarl
push
cld
lea
fadd
out
mov
mov
decb
jne
mov
mov
and
jmp
lahf
inc
ljmp
and
cltd
mov
jne
and
and
popf
mov
lcall
clc
add
add
jns
jo
jp
dec
push
arpl
xchg
mov
dec
or
and
xchg
orl
inc
es
lahf
out
jge
cmpb
jne
xchg
orb
or
mov
cld
or
test
ljmpw
shr
or
icebp
lea
stos
dec
loopne
shr
or
mov
test
je
mov
mov
dec
clc
mov
add
sub
inc
pop
fstl
xor
hlt
and
jns
mov
jne
cmp
or
sub
pop
decl
mov
lea
cmp
or
jne
repz
jmp
jmp
int3
or
and
mov
dec
and
push
push
push
adc
push
push
pusha
cli
push
les
mov
fcompp
xor
xor
mov
cmp
je
mov
cmp
je
les
cmp
jbe
lea
lea
mov
mov
add
jne
popl
decb
mov
call
pavgb
pusha
or
jmp
popl
mov
inc
add
adc
les
jge
mov
xor
push
xor
pushl
cwtl
fcoml
fbstp
and
mov
mov
or
pushl
pushl
pushl
sbb
ret
push
push
push
push
mov
xchg
rclb
call
jmp
mov
mov
js
out
pushf
mov
jmp
dec
idivl
sub
dec
push
push
ret
in
fists
ds
stos
and
push
push
pushl
scas
adc
mov
testb
jg
push
je
xchg
inc
aas
fwait
ret
jmp
incl
pop
adc
add
inc
xchg
adc
mov
pop
add
add
inc
adcb
inc
adc
js
into
mov
mov
out
pop
add
push
and
not
and
or
mov
add
add
jnp
inc
and
test
ja
out
clc
je
xor
mov
shlb
cli
in
push
cmpl
inc
and
push
mov
cmp
adc
incl
xor
flds
sub
mov
jp
add
fistpll
mov
shl
add
push
adc
and
shr
je
rep
mov
daa
ljmp
xor
fsubs
jg
rolb
cmp
setne
cmp
pop
roll
pusha
jns
push
and
mov
enter
add
jle
sbb
push
pop
lds
jge
push
jmp
aas
adc
loopne
je
mov
sub
mov
push
cld
das
or
cmp
jne
push
and
pop
push
mov
mov
frstor
incl
rorb
cmp
inc
or
lock
add
xchg
push
lds
or
mov
pop
mov
and
mov
cmc
js
pop
jno
cmp
sub
mov
out
sub
push
sti
mov
pop
jle
push
jnp
call
dec
and
jns
testl
cltd
add
icebp
add
popf
imul
and
loope
add
idivb
xchg
push
or
and
xchg
lds
jle
pop
and
daa
out
jnp
ss
out
ja
adc
add
adc
adc
push
outsb
add
fldcw
inc
fdivrs
push
push
jl
nop
add
mov
inc
and
xor
push
stc
inc
pusha
das
fs
jle
inc
pop
imulb
jle
inc
mov
enter
push
jle
add
sub
arpl
test
insb
test
dec
outsl
pop
and
inc
cmpl
stos
and
and
out
ret
dec
or
pop
mov
or
ret
sbb
ds
ljmp
ffree
cmp
movzbl
add
sbb
jne
adcb
pop
cld
call
add
push
cld
ffreep
lea
adc
fstp
add
jne
call
in
push
push
jnp
mov
jb
incl
mov
push
push
mov
pop
pop
inc
jne
push
push
xor
inc
pop
inc
or
pop
or
pop
cmp
add
adc
aaa
inc
insb
add
jne
cli
aas
sbb
add
mov
jne
jmp
sbb
jge
and
mov
mov
mov
push
push
pushl
mov
mov
call
pop
pop
add
pushf
jle
push
xor
pop
div
pop
jb
lea
cmp
or
movb
sbb
hlt
test
je
movl
add
jmp
ficomps
je
movl
ja
ja
jmp
xor
sub
int3
and
sar
mov
cmp
jne
push
push
jmp
mov
call
sbb
adc
ja
mov
xchg
pop
lea
jo
cmp
mov
xor
mov
lret
inc
inc
loop
cmp
mov
sbb
dec
data16
inc
jno
jge
rorb
rcll
ljmp
mov
testb
jne
push
push
ret
rcll
je
mov
insl
js
inc
adc
mov
inc
lods
orb
icebp
setnp
fisubrs
cmp
push
std
rorl
enter
dec
clc
arpl
inc
in
adc
or
je
movl
cmp
pop
clc
fwait
xchg
mov
jne
iret
shlw
cmp
mov
push
push
jne
push
push
fdivs
incb
lock
jmp
dec
js
adc
adc
and
add
pop
dec
cmpb
loope
incl
je
inc
test
jne
dec
sub
rorl
or
xlat
cmp
inc
decl
push
xor
inc
push
push
push
enter
out
fstpl
pushl
sbb
pop
cmp
jle
mov
mov
ja
decl
sbb
cmp
jne
or
mov
jne
inc
adc
add
inc
adc
popa
mov
lock
jp
test
mov
jne
and
mov
mov
icebp
dec
and
and
jo
adc
add
scas
add
out
sub
push
pushl
call
mov
mov
ret
pop
jb
lea
xchg
aas
les
ret
je
movl
jmp
scas
lods
sbb
cmp
out
lcall
inc
hlt
jmp
mov
cmp
je
in
cpuid
jge
imul
in
mov
jmp
mov
mov
and
inc
or
add
sub
pop
sbb
test
cwtl
fsubr
cmp
jg
pop
gs
cmpsl
mov
push
rorb
hlt
cmp
je
std
rclb
outsb
sar
sub
frstor
or
inc
pushf
ret
push
setg
clc
push
jne
push
push
mov
inc
adc
mov
sbb
mov
or
mov
xor
test
pushf
adc
inc
or
fsubrs
dec
cmp
pop
mov
outsl
sbb
pop
test
je
lea
push
mov
mov
mov
or
aam
xor
jg
hlt
es
sbb
jle
cmp
cli
or
xlat
ja
loop
cld
cmp
je
out
add
dec
scas
ret
sti
je
in
jo
es
loopne
imul
mov
pushl
xor
jmp
movsl
lea
pop
push
mov
fucomi
mov
lock
sbb
and
push
int
fwait
loope
jmp
sub
jno
jbe
rorb
bound
je
pop
add
pop
and
je
mov
scas
adc
pop
adc
lea
outsb
sub
dec
lock
test
jb
dec
loop
pop
movsl
jnp
lret
daa
rcll
cmp
push
mov
jne
pop
jmp
out
call
or
loope
sub
xor
jp
sbb
push
adc
mov
insl
pop
je
out
add
xchg
mov
loope
xchg
xchg
mov
inc
cs
adc
mov
cmp
ja
mov
sar
inc
je
lea
push
push
inc
aam
jecxz
ja
aam
or
xor
fcoml
lahf
push
adc
sahf
popa
ljmp
out
pushf
ret
sbb
mov
jecxz
test
fistps
jecxz
adc
shr
cmp
je
rclb
fwait
push
mov
and
mov
inc
sub
fidivl
or
mov
int3
arpl
repz
je
popa
add
cli
icebp
and
iret
xor
adc
and
or
les
push
push
or
ljmp
ja
adc
cli
inc
movsb
cmp
xchg
out
bound
dec
pop
stos
sahf
mov
push
push
insl
ret
sub
sbb
inc
add
pop
lahf
jns
jne
pop
test
jne
inc
test
add
mov
cmp
cmpsl
call
out
jne
jne
pop
lds
test
jne
inc
add
and
jb
lret
mov
outsl
sub
insb
and
cmp
ja
sbb
push
sub
mov
daa
dec
popa
inc
and
add
out
je
mov
jmp
push
jmp
xorl
adc
lret
cmp
jne
add
out
jae
out
and
rcll
jne
cmp
push
pop
je
push
jl
or
add
testl
xor
jae
push
in
clc
stos
pop
incl
adc
sbb
jge
dec
or
cmp
fdivr
dec
jbe
push
pop
xor
div
cmp
sbb
inc
jne
cmp
ljmp
lods
testl
clc
dec
or
icebp
mov
les
push
and
cmp
ja
cmp
aas
ret
sbb
cmp
aaa
mov
in
jge
sti
add
add
pop
in
fbstp
or
push
es
or
fbstp
push
inc
loope
fisttpll
mov
adc
cmp
aaa
aam
fsub
add
cmp
inc
sub
outsl
inc
in
outsl
and
jne
cmpl
or
push
and
pop
pop
pushf
or
sbb
mov
cmp
or
call
push
mov
ret
adc
pop
lods
mov
pop
mov
pop
leave
cltd
and
jne
pop
pop
or
push
mov
fsubs
lods
sbb
mov
test
cltd
dec
add
cwtd
mov
add
inc
xor
test
loope
dec
ja
jecxz
mov
adc
and
xchg
cmp
fmull
mov
popl
xor
ljmp
daa
mov
dec
cmp
jb
mov
fs
lock
in
xor
dec
mov
adc
jo
pop
dec
cmp
jne
xor
inc
xor
mov
nop
out
adc
push
and
jne
std
pop
add
dec
adc
sbb
scas
addb
in
push
pop
push
jecxz
mov
cwtl
push
dec
mov
jmp
call
mov
hlt
movsb
mov
test
jne
cmp
int
push
cmp
ljmp
lods
lahf
xor
pop
mov
jmp
into
add
and
scas
sub
test
jmp
mov
js
jne
pusha
je
inc
push
subb
int
dec
inc
sbb
andb
enter
or
mov
jmp
call
mov
cmp
jbe
loop
ss
outsl
adc
add
inc
icebp
data16
icebp
pop
inc
mov
xor
jmp
imul
aad
mov
or
pop
mov
inc
incb
je
cmp
jae
sub
inc
or
mov
addr16
jmp
cmp
fisubl
fimuls
mov
mov
lock
cmp
adc
adc
xor
icebp
jmp
adc
movzwl
movzwl
mov
jg
loope
add
ret
andl
push
push
mov
lea
push
push
push
idiv
arpl
xor
inc
lea
inc
sbb
push
push
pushl
adc
dec
ficomps
push
push
adc
xor
sti
testl
out
nop
jg
sbb
ss
push
bndldx
negl
jge
inc
and
sub
jge
ret
push
and
push
pop
sub
dec
leave
cmpsl
in
push
push
adc
push
push
xor
mov
xchg
nop
cs
xor
push
pop
repnz
xchg
push
sbb
push
adc
push
push
andb
inc
push
sti
xchg
mov
cmpsb
inc
pop
push
inc
push
push
adc
push
repnz
push
dec
push
push
and
push
push
push
pop
xchg
jl
push
push
push
push
adc
push
push
sti
pusha
or
pop
push
push
push
pusha
push
push
pop
lahf
mov
or
push
push
adc
push
push
pop
inc
ds
push
in
pop
ret
push
push
pop
push
je
push
adc
dec
leave
cmpsl
js
push
jl
push
in
pop
push
push
sahf
push
push
sbb
pop
aad
pop
xchg
push
push
pop
sub
dec
nop
push
scas
js
shlb
sbb
xor
mov
push
ljmp
fwait
push
push
dec
lret
dec
aaa
push
push
pop
dec
int
push
pop
pusha
or
sub
bound
aad
mov
xchg
das
xchg
mov
rorb
pop
add
sti
pop
repnz
push
xor
push
push
clc
jecxz
pop
in
mov
mov
bound
or
test
cltd
cld
jbe
je
js
ljmp
ja
cltd
ljmp
rcrb
sub
scas
iret
xor
lods
mov
fwait
pop
pop
cmpb
pop
xor
push
cmc
arpl
pop
add
pushl
inc
cmp
jne
and
cmp
in
dec
sbb
jbe
pop
lods
pop
or
pushl
pop
pop
xor
and
enter
insb
jo
loop
or
js
xorb
or
cmpb
or
or
or
or
or
or
or
sbb
sub
ret
push
push
push
jl
adc
lock
add
xor
push
push
inc
sbb
xor
jne
call
cli
mov
adc
mov
sbb
mov
sbb
add
mov
cmp
je
roll
int3
mov
incl
pop
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
call
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
mov
adc
jmp
pop
xor
or
pushf
add
cmc
mov
xorb
fs
inc
add
pop
lods
stos
jbe
push
mov
in
sub
push
pop
pop
jae
lcall
sbb
lret
jne
jne
cmp
jne
mov
fidivrs
mov
movl
push
inc
lock
add
add
clc
cmp
pop
pop
ja
out
fimuls
sbb
push
pop
xchg
add
lock
rep
dec
jne
scas
jg
nop
fsubrs
jne
adc
rorl
sbb
mov
xchg
xor
dec
cwtl
mov
jne
sbb
jne
das
pop
mov
scas
fiadds
xor
movzwl
push
push
and
jecxz
cmp
sbb
jno
insb
unpcklps
sub
lds
inc
sub
les
inc
hlt
je
call
xchg
mov
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
stc
cmp
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
add
jmp
mov
mov
mov
mov
mov
xor
inc
aas
mov
cld
add
addl
sarb
aad
xor
call
mov
std
scas
pop
or
shlb
mov
cmp
vaddss
or
mov
mov
push
xchg
push
mov
subl
add
cmp
or
add
bound
push
je
inc
adc
add
enter
add
js
jle
mov
and
add
jle
and
xor
cmpsl
pop
or
cmp
rorl
jne
fdivs
sti
cmp
jne
clc
mov
sbb
push
lret
test
ret
cmp
or
int
loopne
cmp
test
sbbl
adc
imul
mov
cmp
ret
rclb
cmp
pop
inc
push
adc
adc
xor
xchg
adc
pop
sbb
adcl
sbb
outsl
pusha
push
ds
push
adc
daa
lock
dec
sbb
pusha
jo
push
lea
push
push
and
mov
incl
imulb
push
push
sub
sub
push
adc
imul
adc
sub
ds
push
adc
imul
push
pop
je
or
mov
and
push
or
mov
jo
addb
mov
mov
out
sub
cmpsb
or
mov
out
fcomip
clc
mov
mov
dec
jge
mov
je
mov
lret
add
push
inc
sub
mov
sub
add
loope
sub
or
or
adcb
add
mov
rcrl
sub
pop
xor
push
mov
cmp
push
aam
pop
fmull
adc
jmp
mov
mov
je
cmp
jne
pusha
icebp
cs
push
movzwl
push
inc
mov
lock
jb
add
add
stos
cmpb
rclb
out
syscall
loopne
and
pop
lds
jne
add
cmp
fsubr
aam
inc
loopne
test
cmp
je
std
scas
pusha
pop
cmp
je
test
inc
inc
mov
sbb
inc
cmp
or
xchg
sti
mov
sub
xchg
or
mov
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzbl
mov
mov
movb
movzbl
inc
cmp
jle
inc
pop
pop
incl
pop
pushl
mov
push
loopne
push
aad
incl
pushl
mov
push
inc
out
aaa
hlt
sbb
mov
mov
sub
mov
stc
cmpb
push
push
inc
aaa
jbe
xor
sti
insl
push
xorb
fsubrs
add
fcoml
cmp
std
ja
sbbb
mov
mov
lea
sbb
mov
lea
mov
mov
out
jg
adc
lea
sbb
out
inc
lea
mov
mov
sti
ja
adc
shll
mov
repnz
lret
lea
push
fsubl
idiv
inc
add
addb
mov
mov
movzbl
cmp
jle
roll
cmp
add
test
insb
lea
xor
push
lea
sti
mov
xor
mov
adc
loopne
xchg
push
and
push
fwait
push
cmp
sub
sqrtps
mov
mov
mov
mov
adc
mov
cmpsl
mov
scas
or
rorl
ret
mov
js
xor
jle
ret
jmp
pushl
dec
jne
pop
scas
jg
cmpsb
pop
lahf
je
xor
adc
inc
jmp
lea
mov
arpl
rcrl
mov
inc
add
jno
mov
or
lret
jmp
add
mov
enter
addb
fsubr
loopne
cmp
pop
shrb
mov
mov
adc
and
adc
add
ret
aaa
popf
popa
inc
pop
sbb
push
or
ljmp
call
pop
cld
mov
shl
pushl
jg
jg
imul
ret
incl
lcall
aam
scas
dec
clc
lea
jb
lea
loopne
push
adc
mov
je
incl
movb
pushl
rolb
lea
push
xchg
add
add
pop
xchg
add
stos
sbb
je
clc
cmp
mov
out
cmp
add
jge
add
pop
je
cmpb
mov
ret
cltd
rcrl
jp
daa
xor
push
in
or
push
in
ja
data16
or
clc
jbe
jbe
or
pop
ret
push
inc
or
imul
add
decl
das
jne
or
cld
je
add
inc
xlat
ja
insb
add
push
and
pop
add
pop
jne
in
nop
adc
lock
cld
loop
sbbl
and
xor
sbb
cwtl
xchg
push
fmull
mov
shl
loope
xor
xor
pushl
and
mov
lea
cmp
hlt
leave
xor
aaa
mov
pushl
xor
addl
cmp
ds
hlt
xor
push
xchg
cmp
push
mov
or
add
lea
push
js
mov
dec
lea
add
push
data16
cmp
test
push
scas
add
les
xchg
fadds
cmpb
pop
push
push
lea
jmp
sbb
lea
mov
add
sub
inc
hlt
or
lcall
mov
inc
hlt
pushl
mov
sub
add
sbb
xor
fimuls
xorl
cmp
pushl
cmp
ret
insb
subb
cmpl
xchg
jb
lea
lods
lea
popf
xor
fistps
pop
fwait
or
push
push
ret
sarb
lcall
jne
xchg
inc
cld
inc
in
cwtl
jne
aam
and
ret
mov
cmp
push
addb
jecxz
adc
ret
test
add
add
jle
pushl
call
mov
sub
add
sbbl
add
loop
or
lods
sarb
jge
cmpb
in
pop
pop
mov
pop
pop
decl
ret
sub
add
bnd
push
mov
test
je
mov
mov
incl
inc
mov
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
shlb
or
push
push
xor
cmp
repz
pop
sysexit
cmpl
mov
inc
push
inc
decl
jg
adc
dec
mov
mov
mov
dec
mov
inc
cmp
jb
jmp
cmp
jae
fdivl
push
add
mov
adcb
push
dec
cmp
jne
cmp
pop
sub
jmp
mov
dec
cld
lcall
mov
push
push
mov
mov
jg
icebp
fwait
mov
dec
jg
in
ja
aas
and
test
je
jg
je
sub
je
dec
je
sub
jne
jo
jnp
ret
mov
cmp
jg
lcall
jbe
xor
cmp
jl
or
push
or
in
mov
push
mov
and
xor
inc
ror
std
cmp
jg
out
dec
mov
and
add
or
cmp
stos
bound
sub
cltd
cmpb
mov
cmp
jne
mov
cmp
dec
je
sub
fnstsw
loop
je
xor
adc
test
sub
jne
pop
leave
in
mov
in
jge
lret
cmp
jg
sbb
dec
jmp
sbb
mov
enter
je
jae
pop
add
insl
adc
add
cmp
jge
leave
lahf
push
cltd
pop
idiv
cmp
pusha
or
lds
mov
or
out
cmp
sbb
imulb
sub
mov
incl
jmp
xchg
clc
jl
cmp
jle
call
fists
xor
idiv
pushl
push
add
imul
add
mov
jbe
clc
insl
jg
out
sub
sbb
pop
je
test
into
dec
fisttpll
je
dec
je
mov
adc
or
sub
mov
lea
push
jmp
mov
cmp
pandn
jle
mov
cmp
jg
and
pop
mov
ss
or
sti
pushf
loope
lret
cmp
cmpb
adc
jne
push
push
je
pop
sbb
push
cwtl
lret
inc
rol
jae
cmp
loopne
ja
je
mov
sub
add
push
rcll
push
ja
cwtl
test
xor
sbb
push
jmp
jl,pt
cmp
adc
sbb
ret
cmp
adc
jl
xor
inc
add
jle
es
lds
std
add
cmp
adc
aaa
xchg
xor
out
and
ljmp
jo
test
je
dec
je
dec
je
dec
jne
call
push
out
add
xchg
mov
xor
cmp
mov
setne
mov
mov
fldl
xchg
inc
and
out
or
sbb
mov
adc
pop
push
adc
movl
or
xor
inc
and
pop
mov
cmp
push
or
int
or
aas
mov
xchg
dec
repnz
mov
add
stos
xor
mov
sbb
fldt
ret
sbb
je
dec
je
mov
mov
rolb
lcall
fsub
adc
test
out
out
add
add
mov
push
adc
add
push
cmpsb
imul
inc
or
or
out
icebp
aaa
fisttpll
push
or
add
mov
push
push
pushw
inc
loopne
ja
cmc
push
push
pushl
push
ljmp
adc
js
ret
lock
das
add
icebp
mov
or
pop
pushl
mov
mov
jae
call
dec
test
jle
mov
mov
cmpl
jbe
mov
mov
add
inc
decl
and
mov
mov
gs
decl
mov
mov
test
je
mov
mov
cmp
cmp
je
xor
outsb
iret
inc
inc
cmp
je
sbb
mov
jg
mov
inc
cmp
xchg
cmp
push
cli
jmp
push
stc
dec
je
cmp
je
cmp
je
push
mov
sbb
test
pop
pop
je
cmpl
jg
incl
jbe
lea
cmpb
je
push
mov
incl
decl
mov
xchg
out
decl
or
push
inc
decl
mov
test
sbb
int3
outsl
mov
dec
je
dec
je
dec
je
dec
jne
mov
iret
jae
bound
pop
mov
stos
mov
mov
or
incb
xchg
xchg
rsm
pop
cld
jae
nop
int3
inc
add
sbb
mov
add
jmp
push
movl
jo
push
addl
out
fisttpll
lcall
test
cmp
je
frstor
push
pop
pop
push
xor
and
xor
loopne
push
mov
mov
mov
int
inc
add
jne
xlat
shlb
imul
push
into
fs
push
out
test
sub
je
clc
ljmp
adc
addb
pop
testl
or
inc
push
imul
js
or
mov
lret
hlt
xor
jl
xchg
movsbl
in
jmp
add
jo
or
inc
xchg
inc
or
xor
xor
out
ds
jmp
shlb
je
punpcklwd
ror
adc
jmp
pop
cltd
es
daa
dec
jmp
dec
or
or
ja
pushl
mov
add
in
rolb
jge
mov
adc
in
jmp
jb
mov
daa
push
lea
push
push
clc
clc
pop
xor
rcll
sub
push
fldl
pop
dec
cmp
add
cmp
imul
cmpps
cmp
xor
mov
add
es
cmp
sbb
call
or
lock
mov
mov
jbe
and
je
cmp
je
sar
loopne
imul
cmp
xor
inc
cmp
jbe
pop
cmp
mov
mov
sub
decl
mov
incl
decl
mov
sbb
mov
jmp
mov
cmp
je
inc
xor
cmpb
jne
inc
inc
push
pushl
jg
xor
fisttps
popa
negl
ret
inc
cmp
ja
add
sbb
scas
call
sub
std
mov
je
mov
and
pusha
mov
cmp
mov
mov
jne
sub
inc
je
add
ret
jae
or
jmp
push
jbe
fldl
leave
dec
mov
scas
test
pop
maxps
shll
gs
pushl
push
pop
out
loope
pushf
jno
iret
popf
inc
faddl
pop
ret
pushl
xchg
ret
cmp
shll
in
sbb
es
mov
sub
push
xchg
and
sub
jp
mov
test
outsl
push
mov
push
mov
mov
add
shlb
stos
add
in
mov
mov
or
pop
add
mov
sbb
add
mov
je
jae
les
pop
arpl
rclb
inc
cmp
ffreep
lcall
jl
push
push
test
je
aad
ret
cltd
sub
mov
pusha
pop
clc
cli
jg
decb
mov
pushl
jge
pop
jne
decl
add
cmp
or
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
cld
mov
rcrl
dec
or
call
sbb
inc
sbb
sub
adc
mov
stos
call
add
js
inc
movsl
cli
test
mov
push
push
andl
jmp
or
pushl
int
or
stos
sbb
stos
sbb
add
add
out
loopne
jnp
cmp
inc
inc
cmp
jb
movsb
ret
xor
ret
mov
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
or
inc
sar
mov
lea
mov
test
jne
jp
jg
rorb
jl
cmp
jle
sub
cmp
ja
inc
jmp
loope
xor
lcall
pop
lock
add
mov
push
lea
push
decb
and
add
orl
or
xor
ja
inc
idiv
jbe
fcomps
adcl
jle
or
mov
mov
les
sub
call
and
sbb
cwtl
and
xchg
jnp
or
jmp
push
or
jp
clc
mov
add
shr
lea
stos
cmp
je
mov
cld
std
sbb
adc
push
mov
pop
cmp
pop
je
and
xchg
dec
je
pop
or
or
orb
test
jne
andl
push
inc
repnz
das
adc
pop
mov
dec
mov
es
add
inc
je
xor
aaa
mov
mov
testb
incb
add
mov
sub
sub
pushf
subl
mov
add
popf
cli
imul
push
or
mov
adc
or
or
mov
mov
out
popa
and
cmp
paddusw
je
lahf
pop
ja
mov
das
test
cmp
ja
or
mov
cmp
je
testl
sbb
pop
mov
outsl
jne
sbb
repnz
push
push
mov
ficomps
cmp
addps
cmp
pushf
sti
cmp
jne
int
inc
pop
adc
shll
inc
test
into
xlat
xchg
int3
xlat
out
incl
jbe
ljmp
jne
ret
sti
lcall
cmpl
jne
cmpl
je
and
xchg
add
outsl
inc
or
mov
ds
incl
loop
imul
jecxz
add
xchg
call
jne
fs
add
out
push
xor
inc
idiv
pop
xor
cmp
sbb
inc
mov
pop
adc
add
pop
jo
dec
push
push
popa
repnz
or
test
je
add
or
fs
dec
adc
push
nop
push
inc
out
mov
lds
and
mov
xor
clc
lods
fistl
jmp
rcl
dec
cld
mov
inc
inc
cmp
lea
mov
mov
je
lea
in
clc
push
cld
push
push
push
adc
mov
sti
mov
or
inc
add
or
rorl
jb
nop
cmp
mov
jl
push
push
pop
mov
cmp
je
frstor
int
dec
xchg
xlat
nop
jmp
pushf
lcall
xor
ljmp
test
mov
jmp
movl
sbb
arpl
mov
add
leave
and
mov
pop
mov
fisubl
xchg
pop
inc
and
sti
xor
mov
sti
addr16
maxps
mov
mov
push
cmpsb
add
out
jbe
clc
jbe
call
xchg
adc
cmp
ja
mov
mov
push
sbb
mov
cld
jmp
jmp
pop
add
jl
sbb
pushl
cmpl
mov
cs
mov
fdivr
sbb
add
and
sti
sti
jmp
pop
push
sub
push
lea
push
push
call
sbb
push
add
xlat
adc
pop
rcrl
fisttpll
call
xor
push
aas
adc
lea
mov
ret
movzbl
movzbl
sub
je
idiv
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
fbld
mov
lea
mov
insl
sbb
cmp
testl
adc
pop
popa
ja
add
push
push
add
cmp
pop
cmp
movzbl
dec
and
aaa
ja
add
ja
cmp
dec
fdivrp
mov
cmp
je
movzbl
ja
dec
std
movzbl
sub
je
test
setg
lea
movl
jno
movzbl
push
repz
fwait
sbb
cmp
dec
jbe
inc
add
jecxz
mov
negl
mov
cmp
je
mov
out
enter
sub
mov
add
pop
add
dec
jae
orb
popa
mov
mov
cmp
mov
test
or
or
add
push
fisttpll
or
cmpb
ret
mov
cmp
mov
sub
or
dec
or
daa
add
xor
psadbw
mov
cmp
mov
int3
sbb
add
cmpsb
or
push
adc
xorb
push
test
mov
mov
cmp
out
enter
adc
mov
xor
dec
adc
dec
jae
push
sbb
xor
mov
add
add
xor
inc
sbb
sub
xorb
sbb
mov
add
sbb
xchg
sbb
mov
mov
int3
sbb
sbb
sbb
mov
pusha
pop
out
mov
leave
add
pushf
push
push
pop
call
pop
mov
ljmp
add
add
sub
cmp
jae
add
add
cmp
ja
ja
jmp
in
inc
in
jp
in
cmp
xlat
xchg
in
mov
sub
xorb
push
je
sbb
cmp
dec
xlat
cmp
cs
xor
mov
inc
call
xorb
jmp
cmp
add
ljmp
lret
mov
mov
cmp
mov
sub
mov
mov
dec
in
push
inc
lcall
cmpsb
cmp
aas
out
out
mov
mov
sbb
lock
mov
sub
mov
out
mov
dec
imul
repnz
out
add
test
hlt
cmp
mov
adcb
sub
dec
cmc
push
xorb
xor
or
clc
push
div
repnz
and
mov
clc
cmp
push
mov
sbb
lods
jmp
stc
push
xorb
cli
shll
mov
sti
sti
adc
das
xor
cld
cmp
je
xor
sub
pop
jns
lret
pop
inc
std
std
sbb
loop
dec
lcall
decl
mov
jmp
xchg
mov
aaa
adc
aas
inc
and
mov
cmp
je
jge
inc
fldcw
push
inc
cwtl
nop
or
rcrb
inc
fcoms
xorb
std
mov
cmp
aaa
fidivl
outsb
notl
ret
jno
loop
lea
lret
sbb
lret
xchg
incl
jne
mov
cmp
or
push
ret
jb
dec
in
mov
mov
int
nop
pushf
push
lret
xchg
push
out
mov
mov
cmp
out
mov
mov
push
inc
into
and
mov
movsb
fldenv
push
lret
pop
push
ret
and
mov
std
adc
repz
mov
mov
leave
sarb
adc
in
fwait
push
lret
jl
fstl
movsb
lret
mov
mov
cmp
inc
testl
mov
lret
mov
mov
push
lret
icebp
cld
imul
mov
es
popf
xchg
mov
cmp
mov
mov
and
enter
test
push
or
shl
data16
mov
push
in
aas
es
test
femms
sti
jg
out
or
loop
mov
cmp
lods
loop
les
lods
xchg
and
cltd
jecxz
push
fmuls
insb
pop
add
mov
push
lods
xchg
mov
cmp
sub
inc
out
sbb
inc
mov
mov
inc
jbe
xor
sub
imul
push
es
jle
inc
ljmp
dec
les
cli
adc
negl
push
push
mov
push
push
mov
les
out
cmp
mov
sbb
push
ja
and
pop
mov
ss
push
pop
inc
fdivs
lock
sbb
cmpsl
stc
out
repnz
mov
or
and
fsts
and
mov
push
mov
mov
cmp
mov
or
and
fsts
and
add
push
mov
sti
ret
adc
mov
xchg
jmp
mov
lods
fnstenv
push
mov
mov
cmp
je
andb
and
mov
cmp
push
loope
loope
pop
cmpsb
into
or
loope
adc
pop
div
jmp
push
add
mov
mov
cmp
sub
shl
faddl
mov
dec
mov
push
decl
decl
out
mov
cmp
mov
ret
cmp
mov
nop
inc
loopne
lcall
decl
fbld
mov
cmp
mov
sbb
push
ja
and
dec
mov
push
push
decl
decl
out
mov
cmp
mov
ss
cmp
cmc
adc
inc
lret
sbb
decl
fbld
mov
cmp
mov
sbb
push
ja
and
dec
mov
aas
push
decl
decl
in
dec
loopne
cmp
mov
sbb
into
sbb
mov
mov
mov
decl
decl
int
pop
fs
push
lret
xor
je
push
shrb
out
nop
shl
inc
add
inc
add
jmp
add
or
stc
inc
add
std
inc
add
icebp
inc
add
inc
add
mov
inc
repz
inc
add
clc
inc
add
cld
inc
add
out
add
cmp
inc
add
imull
out
inc
add
out
inc
add
and
out
lcall
push
mov
push
push
mov
mov
sub
in
incl
je
dec
je
mov
adc
add
and
repz
decl
jl
mov
movzbl
sub
je
xor
addr16
lea
pusha
negl
decl
mov
pop
add
and
leave
add
add
pop
rcrl
bound
adc
test
and
jo
push
mov
jno
je
movzbl
sub
movsb
sti
add
add
test
and
mov
xchg
inc
pop
and
sbb
fldl
or
jno
ja
cmpsb
or
inc
inc
add
and
fwait
inc
lcall
inc
pop
pusha
cmpsb
cmp
and
loop
lea
push
jo
cmp
or
or
popf
mov
outsb
or
and
and
push
ja
pxor
xor
and
push
and
jo
cmp
mov
pop
adc
sub
sub
mov
jae
sbb
dec
adc
or
imul
mov
jo
and
sti
std
mov
cmp
jo
sub
jbe
cmpsb
adc
cltd
dec
adc
dec
adc
and
sbb
int3
je
pop
xor
jo
dec
aaa
negb
cmp
sbb
mov
dec
sbb
sub
xorb
sub
dec
sbb
inc
add
dec
addr16
and
sbb
pop
mov
cmp
je
sub
dec
imull
imul
sbb
pusha
push
push
push
shlb
inc
pop
pop
mov
jne
add
add
sub
cmp
jae
cmc
ja
lds
iret
xlat
jmp
fwait
clc
call
test
push
in
jno
mov
push
in
dec
jle
sub
sbb
pslld
sarb
sbb
pop
out
fucomi
push
out
fwait
in
sbbl
cmpsl
jne
sti
or
push
call
push
sub
adc
xchg
sbb
orb
dec
daa
dec
xor
jmp
shlb
ljmp
icebp
push
jmp
add
sbb
out
in
cmp
in
inc
out
int3
sub
adc
in
and
fcoms
and
mov
out
and
lock
out
lret
mov
sub
je
icebp
icebp
and
add
mov
pop
repnz
inc
stc
push
repz
leave
std
sbb
push
ss
jo
sub
add
jne
sbb
cmc
and
jbe
fdivrl
and
push
mulb
out
xor
and
cmp
push
clc
cmp
push
jmp
xchg
mov
daa
insl
stc
mov
rorl
lods
stc
and
cld
push
jo
cltd
shlb
push
cli
and
fldl
sti
and
addl
push
cld
cmp
sub
sub
or
test
jne
mov
push
jbe
mov
std
sbb
call
out
cli
or
sbb
xor
jmp
inc
decl
mov
pop
enter
pop
jmp
mov
cmp
scas
add
or
jecxz
adc
mov
lret
mov
hlt
and
sub
clc
and
dec
scas
mov
inc
push
xchg
and
push
out
push
out
xchg
jae
testb
outsb
daa
mov
adc
and
sbb
in
or
add
mov
mov
cmp
mov
gs
or
add
add
lods
add
or
and
push
out
cmp
mov
negb
or
in
sbb
and
in
or
push
and
mov
stc
fcomip
cmp
imul
repz
mov
or
dec
into
daa
mov
push
and
sub
xor
and
std
out
add
mov
mov
cmp
push
jbe
bound
jo
xor
clc
push
add
and
out
insl
pop
fdivs
lret
loope
and
push
sti
cmp
push
or
mov
add
addl
and
mov
and
inc
nop
inc
scas
mov
jle
pop
xchg
mov
loop
push
loop
loop
pop
outsb
lods
adc
idiv
jecxz
sub
mov
pop
shlb
sub
sub
popa
int
sub
pop
ret
jle
sbb
push
out
xor
xor
cmp
inc
sub
or
sub
sbb
pop
jo
xor
cmp
mov
loopne
mov
shll
into
imul
cmp
in
or
std
out
add
push
out
cmp
mov
mov
daa
mov
gs
cmp
in
or
and
ret
cmc
add
cmc
or
cmp
mov
lret
insl
mov
mov
and
jae
sub
mov
and
push
idivb
push
testb
add
and
sbb
sub
and
xorl
mov
pop
sub
sub
ret
mov
cmp
push
cmp
ret
xchg
daa
push
cmp
lcall
rolb
mov
clc
mov
mov
cmp
je
mov
dec
je
incl
add
jmp
mov
cmp
push
in
push
aaa
loope
loope
shl
flds
inc
scas
and
sub
mov
and
push
in
push
in
or
inc
sub
push
into
daa
stos
jns
mov
pop
xchg
and
repnz
mov
and
push
cs
imul
cmp
mov
xchg
or
jns
mov
lods
fsts
mov
mov
mov
mov
imul
cmp
mov
xchg
or
jns
ret
flds
and
icebp
sbb
inc
mov
mov
cmp
cmp
jo
popa
loope
add
test
and
or
inc
aad
jle
sub
mov
cmp
push
jb
ja
jp
daa
mov
bound
std
inc
xor
scas
ret
cs
inc
push
mov
cmp
imul
stc
mov
sub
push
into
daa
mov
push
pop
xchg
push
inc
xor
popw
fdivs
ja
jp
inc
je
adc
sub
dec
push
jl
pop
mov
mov
movzbl
sub
je
rclb
rclb
ret
sbb
xor
and
inc
icebp
xchg
int3
add
mov
mull
mov
add
mov
add
fwait
imulb
fs
mov
notb
fisttpl
test
dec
orb
sahf
mov
popf
sbb
inc
and
int3
dec
add
or
add
mov
sub
icebp
or
out
decl
ret
mov
les
inc
add
cmovno
jecxz
inc
add
mov
push
mov
or
mov
adc
add
or
jns
fwait
jmp
incl
test
inc
add
ljmp
add
jnp
jmp
add
mov
inc
add
add
int3
arpl
fists
lock
clc
push
mov
push
jnp
mov
test
jg
mov
push
cmp
push
jb
lea
test
out
fdivl
mov
rolb
add
shlb
push
cld
jne
mov
repz
ja
cmp
push
std
jne
mov
cmp
jne
mov
sbb
jg
cmp
jne
addl
cmp
jb
jmp
movzbl
jnp
out
jmp
or
or
aas
jnp
jnp
std
jmp
or
cld
jmp
insl
jmp
mov
fdiv
pushl
adc
adc
inc
inc
incl
cmp
jb
xor
bts
lret
mov
lahf
mov
lods
call
xor
inc
incl
adc
pop
repz
and
inc
cmp
inc
xor
call
je
out
and
mov
je
cwtl
and
and
rorb
lea
ret
test
xchg
sbb
add
fwait
cmpsb
jmp
add
loopne
mov
inc
inc
insb
ret
je
testl
pop
test
xchg
pop
inc
cmp
enter
or
mov
rorb
std
or
les
or
add
inc
pop
and
mov
sub
enter
cmp
sub
mov
mov
mov
add
xor
cmpl
subl
xchg
pushf
movsb
mov
mov
and
mov
dec
shll
insb
mov
rorb
add
cld
jae
jle
fwait
inc
add
out
testb
fistl
dec
rcrl
mov
mov
mov
mov
dec
xor
mov
mov
or
cmp
repz
and
popl
mov
popl
add
pusha
lea
mov
cld
inc
add
testl
mov
movl
add
movl
testl
mov
out
or
mov
dec
aaa
inc
std
inc
pop
push
call
rcll
cmpl
inc
mov
cmp
ljmp
orl
leave
int3
push
push
push
push
push
push
xchg
mov
sbb
call
or
push
dec
and
lret
xor
stc
and
mov
adc
push
and
call
add
cmp
adc
push
fwait
inc
test
push
push
push
lds
push
lea
sbb
lret
and
mov
jl
sub
je
cmp
jbe
lea
mov
mov
js
mov
add
jae
ds
testl
jmp
push
addr16
loope
addb
xor
mov
add
jne
jmp
ljmp
or
push
or
cmpsb
ret
push
push
mov
or
inc
add
or
inc
or
insb
mov
mov
push
push
push
pop
pop
pop
pop
pop
dec
rol
ja
hlt
aaa
ss
mov
mov
shr
mov
incb
pxor
jmp
mov
inc
cmp
inc
xor
cmpsb
jmp
inc
inc
add
pop
shlb
push
add
in
in
sub
xchg
ret
adc
std
incl
mov
mov
and
mov
cmp
je
sub
jg
clc
push
jns
dec
jb
mov
test
je
sti
incl
inc
adc
ret
clc
xor
mov
mov
rep
sbb
cs
add
pop
pop
pop
scas
lock
add
push
lock
sar
adc
enter
push
inc
or
xchg
pop
push
adc
adc
call
jne
lea
call
mov
lea
popf
pop
xchg
stos
loopne
nopl
movzwl
jmp
mov
sarl
lea
push
jb
sbb
adc
incl
mov
mov
movb
pop
jmp
xor
mov
movb
inc
dec
push
ljmp
test
cli
jo
pushl
std
push
adc
and
dec
lea
cmp
ljmp
pushl
xor
jmp
movzwl
and
rclb
lret
pusha
dec
lock
and
dec
add
cmpb
and
mov
or
std
pushl
sbb
dec
and
sub
and
add
sbb
or
pop
or
mov
sbb
mov
and
shrl
inc
stos
dec
xchg
mov
fdivs
add
or
sub
push
imul
loopne
add
pushl
sbb
inc
adc
fmuls
inc
rorb
mov
inc
push
xor
cmp
mov
mov
mov
je
fcomps
mov
mov
push
rorl
add
cmpl
jne
aaa
push
xchg
std
pop
jmp
push
dec
adc
jne
cmp
movl
cmp
sub
dec
std
pop
mov
pop
inc
cmp
jle
cmp
lea
jb
or
ja
mov
mov
rol
cmp
inc
jl
jne
test
or
rorl
dec
add
adc
out
lods
sbb
adc
and
add
aaa
cmp
jge
cmp
je
lea
fsub
add
add
lds
jg
sbb
jg
pop
int3
cmp
je
push
sbb
in
movl
mov
jmp
cmp
mov
cmp
popf
inc
and
je
push
out
jne
mov
and
incl
je
push
push
push
push
and
mov
into
je
pop
push
jmp
cmpl
out
cmpsb
mov
test
sahf
mov
add
lea
mov
loop
pop
imul
inc
mov
addl
xchg
or
xchg
mov
lcall
ret
push
je
cmp
jbe
cmp
je
mov
push
sahf
cmp
jge
cmp
je
push
adc
clc
add
pop
lods
push
pop
add
jle
pushf
mov
push
mov
mov
jmp
cmp
cmpl
pop
lea
xor
je
shrb
pop
mov
sbb
mov
jbe
push
pop
jmp
pushl
das
mov
and
pop
ret
mov
out
ret
mov
ret
mov
jg
or
addr16
lods
add
test
add
push
push
and
enter
lea
fisubrl
sub
push
mov
pop
cld
dec
jmp
jno
xchg
testl
or
pop
mov
dec
inc
push
nop
inc
fdivs
fnstsw
int3
mov
or
mov
popf
mov
cmp
jbe
and
inc
mov
cmp
je
cmp
je
mov
sbb
push
xor
hlt
je
addr16
xor
add
pop
pop
mov
cmp
pop
loopne
mov
xor
ret
je
pusha
fnstsw
js
pop
or
push
mov
xchg
mov
xor
inc
mov
fwait
sbb
cmp
cmp
mov
cmp
sarb
dec
in
adc
je
mov
into
push
aam
mov
sub
push
sbb
scas
push
push
cmp
xor
jl
aas
int3
cmpsl
and
adc
pop
shlb
pop
mov
mov
jmp
or
aaa
xor
in
pshufw
push
lods
sarl
xor
or
roll
loop
sbb
adc
ret
cmc
out
mov
in
mov
or
xchg
cmp
jne
mov
inc
mov
mov
jns
add
ret
cs
cmpb
jne
movl
test
inc
add
imul
jmp
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
xor
mov
mov
negb
jmp
cmp
in
push
sub
ja
cmp
jge
pop
sbb
sbb
jg
pop
enter
pop
in
mov
enter
mov
ja
ljmp
dec
jmp
mov
mov
mov
xor
ret
notb
lock
push
sub
cmpl
lcall
cli
jg
jge
mov
mov
jne
add
cmpb
or
add
cld
inc
mov
jne
mov
push
addl
insb
pop
add
cltd
mov
addr16
test
mov
or
mov
inc
or
xchg
es
lea
mov
mov
push
xchg
mov
cltd
idiv
mov
mov
sub
mov
lea
out
sub
lcall
ret
add
add
add
fcomip
decb
jl
imul
sub
add
cmp
jg
fcoml
decl
add
lock
jne
movsb
rcrb
sbb
cmp
adcb
pusha
or
sbb
jg
lock
sub
jmp
clc
cmc
jae
lahf
mov
dec
or
or
cmpb
add
imul
add
add
mov
cmpl
jne
mov
push
add
sub
imul
xor
adc
incb
rcrb
dec
arpl
mov
rorb
daa
jns
addl
sti
pop
es
sbb
or
pop
xor
jmp
incl
xlat
lock
hlt
push
jbe
into
pop
addl
daa
test
jne
jae
test
cmc
scas
decl
fildl
adc
adc
pop
fwait
add
xor
fdivp
push
bound
xor
add
sti
or
xor
sbb
adc
or
push
or
push
jmp
adc
jge
or
push
push
pop
push
lcall
test
or
and
mov
ds
pop
sub
out
outsb
int3
or
or
ja
push
jmp
push
or
push
push
subps
mov
out
dec
jmp
cmp
push
pop
push
pop
movl
clc
jge
push
out
dec
testl
movl
cmp
push
push
sub
pushl
pop
jmp
jo
gs
pop
add
mov
incl
jnp
enter
jge
cmp
jl
cmp
jg
cmp
call
jle
cmp
jge
mov
pop
pop
leave
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
mov
sbb
pop
sti
mov
adc
cmp
jne
xor
cmp
shr
or
icebp
inc
push
setl
mov
jmp
push
push
outsl
clc
idivb
xor
push
sbb
sarb
jne
adc
mov
pop
cs
add
sbb
mov
cwtl
adc
bound
pop
inc
daa
cmp
outsb
dec
pop
aaa
or
mov
jbe
push
stc
dec
cmp
mov
test
mov
and
dec
push
movzbl
lea
inc
decl
addb
mov
lea
inc
cmp
ja
adc
addl
je
pop
sub
mov
adc
or
add
jne
popf
and
sub
aad
and
mov
loop
jg
sbb
sbb
xor
lock
push
jo
pop
adc
or
pop
pop
jmp
push
rolb
movzbl
in
lcall
and
mov
movzbl
lea
adc
loop
pop
adc
shrb
lock
pop
or
inc
test
push
pop
cmp
jne
cmp
inc
les
jg
popa
add
or
fcompl
leave
sbb
enter
loopne
add
addb
adc
popa
jo
test
cmp
mov
push
add
and
dec
int3
add
je
fcomps
out
pop
pop
ret
or
cmp
add
cld
xchg
es
add
ret
adc
daa
jbe
insb
pusha
scas
adc
push
and
mov
inc
push
and
and
mov
in
test
mov
or
and
mov
leave
scas
stos
pusha
mov
repnz
push
jecxz
pop
pop
mov
aam
adc
rcll
stos
inc
adc
cmp
push
and
push
mov
jg
mov
mov
xorw
sbb
and
and
in
pop
and
jae
add
rcll
xchg
inc
and
jmp
mov
inc
sub
sbb
push
adc
sub
scas
cmpsl
sbb
sbb
push
mov
in
xor
adc
aaa
lock
push
push
je
adc
roll
ljmp
and
je
lret
mov
jbe
dec
or
inc
cmp
std
lods
sub
sbb
shl
sub
mov
or
decl
je
loope
lahf
roll
in
and
jnp
daa
cmpl
sub
popa
jne
mov
sbb
inc
icebp
xor
cmp
jne
sbb
lods
add
popf
pop
int
push
ja
or
xor
xchg
mov
setne
inc
cmp
mov
pop
lods
push
jmp
mov
add
cmp
sbb
mov
shufps
lea
dec
xchg
fmuls
jne
inc
icebp
decl
cli
or
add
jmp
sbb
cld
icebp
cs
out
sahf
ret
jbe
mov
cmp
jb
cli
cmp
jb
pushl
insb
lahf
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
enter
xor
or
pushl
add
test
jge
push
push
jmp
nop
in
jo
sub
popl
out
or
xor
sub
cmp
jge
inc
sbb
int3
pusha
jo
mov
and
dec
and
adc
mov
and
dec
xor
push
aas
mov
adc
sub
pop
ret
jbe
xor
cmp
mov
setne
inc
cmp
and
and
sbb
cmp
ja
and
mov
incl
neg
adc
movb
lea
push
ficompl
clc
mov
mov
add
pop
shl
mov
stc
or
mov
aas
sar
mov
push
mov
inc
rorl
test
jbe
cmp
jb
cwtl
sub
jae
pop
push
movb
ja
test
mov
and
cmp
add
inc
sbb
mov
dec
add
inc
pop
pop
leave
adc
sbb
jne
cmp
jg
jl
cmp
rolb
loope
pop
or
pushf
sbb
cmp
push
xchg
sbb
jne
sbb
sbb
sub
mov
shlb
enter
ret
cmp
jb
mov
mov
xchg
mov
mov
ret
sub
jmp
pop
inc
jne
push
mov
ljmp
js
push
ret
test
push
push
jne
cmp
je
mov
mov
les
je
ja
xchg
ss
add
jmp
clc
pop
mov
jmp
or
cmp
pop
jbe
mov
cmpb
jne
push
jg
pop
inc
icebp
add
lods
into
test
je
add
mov
jp
pop
pop
pop
ret
mov
lea
inc
sar
cmp
jmp
push
mov
push
push
arpl
les
inc
adc
pop
inc
cmp
cmp
mov
je
cmp
mov
jno
ja
jmp
push
jne
cmp
and
mov
xor
imul
mov
push
add
xchg
mov
inc
cli
xchg
push
push
pop
filds
or
loope
dec
ja
mov
je
mov
cmp
je
or
test
shlb
mov
mov
je
adc
xor
push
lods
std
or
mov
jne
mov
inc
jecxz
test
ret
cmp
mov
jmp
inc
adc
mov
cltd
mov
mov
imul
pushl
xor
push
or
xlat
xor
rorb
cmp
jne
pop
or
lahf
pop
push
rcr
inc
mov
test
push
jmp
mov
or
push
xor
cmpb
xlat
and
je
push
hlt
xor
popa
add
mov
inc
sub
popa
pop
and
or
xchg
and
or
clc
addb
aam
cmp
add
sti
pop
nop
push
lds
push
jne
mov
mov
sub
lret
je
push
mov
dec
xlat
ja
cmp
jne
or
loopne
imul
mov
dec
ret
push
add
fidivrs
fdiv
inc
mov
adc
or
inc
in
adc
andb
div
inc
jo
dec
inc
loop
pop
add
xchg
push
and
and
xlat
adc
loopne
sbb
mov
xlat
mulb
mov
or
faddp
cmp
cmp
pop
mov
mov
jmp
ret
jl
mov
xor
je
test
loopne
pop
mov
clc
pusha
and
inc
push
mov
mov
add
loopne
pop
rol
cmp
hlt
or
jne
stos
fdivl
inc
jae
mov
sbb
pop
push
and
adcl
dec
jge
or
push
xor
fidivs
mov
cmpl
add
testb
sti
mov
les
or
jg
dec
movzbl
and
dec
jnp
or
cmp
pop
jl
inc
push
mov
call
or
jmp
cld
mov
movb
pop
jmp
push
nop
ja
jecxz
cld
movb
mov
incl
push
push
lea
push
push
pushl
inc
outsl
loop
mov
outsl
int3
cmp
jne
fdivr
incl
movzbl
jmp
movzbl
xor
mov
or
cmpsb
pusha
push
add
add
dec
mov
inc
adc
jge
and
cmpsb
cltd
sub
jge
pushl
aad
pushl
iret
jmp
or
movzwl
inc
mov
and
movzwl
inc
add
decl
in
imul
inc
in
test
push
lea
push
lea
aas
aam
in
xchg
add
xchg
add
ja
and
into
push
or
add
cltd
pop
ja
sub
cld
movzwl
and
fsts
jg
xor
ds
fmulp
ret
or
and
mov
mov
inc
cmp
ret
sub
movsb
clc
mov
fwait
stc
inc
cld
pushl
push
push
outsb
idiv
jnp
lret
ds
cmpsb
leave
mov
andb
xchg
mov
jecxz
adc
cmp
lock
jne
test
xchg
pop
lods
sar
jmp
adc
jge
je
jecxz
out
out
add
and
ret
mov
push
mov
mov
lea
jle
hlt
sbb
pop
pop
push
movzbl
push
xor
in
dec
jmp
mov
outsl
fiadds
mov
inc
jmp
cmp
xchg
dec
sbb
jmp
out
ret
cmp
jne
adc
test
jl
pop
pop
je
pop
fbld
jg
cmp
je
adc
sti
filds
pop
cmp
je
cmp
adc
mov
fucomip
jno
and
inc
adc
or
cmp
jne
jne,pn
and
add
pop
jne
inc
bound
xchg
call
mov
movzwl
test
je
movsbl
sub
jmp
test
je
mov
cmp
sbb
add
leave
cmp
jae
add
incl
inc
cld
jb
jne
cmp
jbe
push
add
jge
sbb
test
jne
or
arpl
pop
cld
imul
add
jmp
jg
mov
test
jne
and
je
mov
jge
xorb
sub
jne
jbe
incl
decb
pop
lods
testb
movl
dec
cld
jmp
fadd
paddd
neg
adc
mov
inc
test
loopne
dec
fisubrs
add
push
inc
jmp
sbb
or
pop
pop
popf
mov
sarb
rorb
cmp
jne
gs
enter
inc
icebp
jmp
xlat
cwtl
add
lock
xchg
push
popa
cmpsb
dec
cwtl
cmp
mov
pop
add
inc
jnp
sbb
fldl
inc
fcoml
or
cmp
or
adc
mov
or
adc
cmp
jne
adc
and
rol
js
adc
sub
pop
adc
xchg
enter
jne
mov
sbb
pop
inc
cmpl
sbb
fdiv
pushf
mov
mov
decl
js
mov
les
xchg
inc
pusha
xchg
mov
cmp
fdivl
push
adc
adc
and
sbb
idiv
lahf
and
adc
sbb
jne
and
or
dec
dec
or
push
mov
push
push
es
ljmp
mov
outsl
cs
mov
or
inc
insb
jg
pop
mov
mov
inc
inc
test
icebp
sub
jmp
mov
test
sub
cmp
movsbl
shr
lea
cmp
dec
cmp
jne
jae
mov
mov
in
jb
ja
mov
cmp
pushl
lock
call
inc
lock
cmp
jne
xor
cmp
jb
ja
jno
xchg
cmp
jbe
sub
clc
lds
in
xor
push
mov
fbstp
cmpsl
mov
jne
hlt
push
pushl
pushl
idiv
pushl
sub
xor
xor
add
adc
mov
mov
mov
mov
incl
fldt
sub
add
mov
or
pop
hlt
ja
jb
cmpl
ja
cmpsb
adc
cmp
jb
ja
pushl
add
call
orl
orl
jmp
adc
dec
andl
mov
jmp
sbb
push
xor
mov
and
lock
fadds
fwait
dec
hlt
cmpb
sbb
mov
inc
pop
push
hlt
xchg
inc
push
and
out
sub
sbb
loop
or
sbb
ret
int3
mov
push
push
push
mov
or
je
mov
pop
mov
jg
lock
mov
repz
mov
je
or
je
add
cmpl
inc
add
out
push
cmp
ja
add
cmp
or
cmp
jne
sub
ffreep
incl
jne
xor
cmp
je
mov
neg
mov
pop
pop
pop
lds
push
loopne
rcr
adc
shlb
dec
push
mov
mov
adc
lock
mull
out
pop
enter
add
jmp
mov
jb
push
and
pop
idiv
jmp
shr
rcr
shr
rcr
or
jne
div
mov
and
mov
out
shll
cmp
ja
jb
cmp
jbe
dec
sub
sbb
and
xor
or
or
fisubl
mov
sub
loopne
mov
cmp
pop
ret
in
hlt
pop
xchg
test
adc
lret
and
jne
cmp
mov
stos
incb
xor
int
es
jo
popf
cmp
int
cld
pop
mov
jmp
mov
cmp
fs
xchg
mov
pop
mov
repz
adc
sub
add
mov
mov
jo
and
add
mov
les
inc
adc
add
js
and
dec
fisttps
add
add
shll
push
push
push
push
xor
push
mov
cmc
mov
cmpsl
gs
sbb
call
push
call
cmp
clc
je
out
out
call
out
pop
sar
je
sbb
push
push
dec
adc
or
jne
sub
xlat
add
mov
jne
je
cld
std
mov
jne
add
fs
push
out
or
pop
enter
js
cmp
lock
adc
sti
lock
sub
cmp
je
inc
inc
fdivs
scas
andl
stos
and
jecxz
and
aaa
mov
push
push
push
ret
add
test
adc
inc
add
xor
inc
cmp
adc
ja
scas
clc
push
push
and
fiadds
push
xorb
and
xor
jnp
adc
inc
push
add
enter
adcl
push
adc
jge
mov
clc
xchg
jge
lcall
pushf
pushl
push
dec
cmp
pop
je
cmp
je
mov
subl
push
pushl
testl
filds
cmp
ja
lea
mov
push
subl
mov
clc
jmp
or
std
aaa
in
jge
je
scas
clc
jae
mov
push
push
bound
mov
fsts
je
test
mov
and
cmp
jle
cmp
or
cli
sbb
and
sbb
fdivrl
fbld
add
movl
popa
dec
orb
fsubr
add
xchg
sbb
mov
adc
test
push
les
mov
lea
into
or
jge
orw
and
dec
cmpsl
call
push
cmpw
push
cmpw
xlat
inc
inc
paddw
test
lods
fstpl
push
into
mov
push
int3
leave
or
pop
pop
pop
mov
xor
adc
or
leave
mov
js
xor
inc
sbb
dec
fs
cmp
pop
mov
jle
jge
add
dec
and
jne
mul
mov
pop
ja
push
mul
mov
and
add
or
cmp
loope
rcrl
das
scas
xor
add
adc
rcrb
mov
cmp
icebp
call
cld
in
cmp
mov
test
push
push
push
call
or
add
mov
cmc
or
cmp
jle
mov
aas
and
or
iret
jne
or
xchg
pop
mov
ljmp
roll
adc
jle
mov
mov
and
sarb
cmp
mov
jmp
imul
mov
scas
sub
popa
orl
jle
mov
test
pop
xor
inc
cmp
jne
hlt
mov
ja
mov
cmp
test
jg
push
xlat
jne
jne
push
pop
popf
mov
insl
pop
pop
cld
ja
cmp
jle
push
jmp
pop
xchg
ja
sbb
cmp
cmp
add
jge
add
xchg
mov
test
jg
cli
pushl
or
or
cmp
jbe
inc
lret
call
and
cmp
push
pop
xor
jle
mov
cmp
cmp
jbe
jmp
mov
pop
jne
push
push
icebp
fwait
or
test
sub
incl
jbe
fldl
jle
jmp
repz
lea
cmp
ja
ret
or
sub
in
aaa
out
mov
inc
loopne
mov
add
test
dec
add
inc
test
fs
sbb
lea
inc
sbb
ss
adc
or
pushl
loop
inc
jo
orb
stos
xor
cli
in
je
addr16
adc
pushl
lcall
rolb
add
adc
push
adcb
add
mov
mov
cmpsl
or
scas
adc
out
or
mull
and
loope
lahf
xchg
jge
decl
lock
pop
je
je
mov
lea
fdivrl
and
mov
sbb
xchg
std
jmp
sbb
in
clc
add
test
imul
into
dec
cwtl
lock
and
int
jmp
fisttpl
ret
pop
gs
pop
mov
lea
sbb
push
adc
scas
addl
clc
mov
jbe
xor
xchg
ret
enter
not
sub
add
xor
call
xor
popa
xlat
ljmp
push
dec
adc
lret
jne
fistl
or
jmp
aaa
mov
jmp
pushl
pop
pop
pusha
push
out
push
add
aaa
push
lods
sbb
xor
xchg
cwtl
cmc
sub
cmp
add
push
pop
push
pushf
dec
sub
loope
nop
xorb
hlt
sbb
push
jmp
push
lahf
inc
mov
lods
or
mov
incl
mov
cmp
je
test
je
aaa
inc
cmc
pop
sbb
mov
sub
jmp
push
testb
fadd
push
jmp
xor
test
mov
jne
lock
incl
leave
ret
cmp
je
add
inc
cmpl
jne
push
push
inc
push
or
jl
jne
mov
outsl
sub
pop
mov
mov
aam
decl
mov
add
add
mov
pop
clc
fbld
push
mov
push
shr
adc
inc
or
mov
outsl
mov
lock
jmp
jp
fdivl
repz
push
add
cmp
mov
je
cmp
je
xor
cmp
mov
decl
xchg
sarl
cld
pop
dec
dec
clc
jne
mov
cmp
sbb
cmp
je
cmp
xchg
add
adc
ss
int
decl
adc
pop
clc
jne
add
insl
add
je
mov
aas
jne
sbb
lea
ret
mov
mov
test
jge
enter
sub
add
adc
call
push
cmp
je
lea
xchg
ss
jecxz
mov
adc
sbb
mov
mov
mov
push
in
inc
lea
cmp
jne
sbbl
aas
jae
push
push
in
and
fwait
js
jp
cmp
je
jmp
stos
mov
outsl
mov
sti
jge
neg
lea
clc
adc
imul
add
cmpl
mov
add
je
out
and
mov
or
sbb
es
jne
inc
sbb
clc
imul
jp
mov
out
test
push
sbb
stc
xor
mov
sub
add
mov
inc
in
scas
es
mov
sbb
shlb
jnp
jbe
out
dec
cmp
je
mov
fcmovbe
xor
pop
push
inc
lock
pop
inc
sbb
cmp
xchg
dec
dec
or
in
cmp
dec
jmp
push
push
or
and
mov
mov
mov
int
call
pop
pop
je
and
add
mov
inc
aas
shrb
xchg
mov
jne
fnstsw
cli
pushl
shr
push
mov
cmp
jne
pop
cmp
cmp
pop
pop
cmp
jmp
movzbl
testb
je
inc
mov
cmp
je
movzwl
movzbl
ljmp
or
cmp
jne
dec
jmp
movzwl
cmp
je
inc
por
fnsave
movl
sbb
adc
jmp
lods
mov
xor
push
adc
arpl
jo
cli
inc
test
dec
lea
pop
ret
leave
decl
mov
lea
xor
push
mov
shl
decl
call
je
mov
add
cmp
je
adc
cli
iret
test
je
insb
jmp
fcoms
ret
shl
mov
fmuls
rorl
std
cmp
cli
add
xor
xchg
iret
xor
add
and
xchg
jne
and
jne
cltd
out
loop
and
push
call
inc
cld
cmp
je
xchg
cmp
je
test
je
cmpsb
jmp
je
adc
push
into
fidivrs
pop
pop
mov
aaa
ret
lea
push
cld
pusha
push
adc
jmp
fdivr
and
jg
and
jmp
add
push
mov
ss
mov
and
sbb
call
mov
jp
and
orb
dec
push
insl
push
jmp
push
mov
in
and
mov
stos
sbb
jmp
jmp
stos
sbb
jmp
stos
jmp
cs
adc
mov
push
aam
and
inc
inc
mov
jmp
and
dec
add
pop
mov
inc
insl
sub
and
test
pop
jmp
adc
push
push
mov
adc
and
adc
sub
add
adc
jmp
jmp
dec
jmp
adc
call
and
jnp
and
or
sar
and
in
jmp
and
mov
and
xor
sub
sbb
sarb
sbb
sbb
jg
fadds
and
or
add
call
adc
or
jg
mov
inc
add
aas
adc
dec
inc
add
insb
inc
add
sbb
and
test
aad
add
adc
incl
adc
add
gs
gs
xor
jae,pn
add
fs
mov
or
mov
arpl
gs
jne
arpl
ljmp
add
je
je
jb
jne
dec
outsb
outsw
inc
add
gs
je
push
jb
arpl
out
jae
inc
add
push
imul
insb
outsl
arpl
add
push
jb
push
xchg
sti
out
aas
dec
gs
outsl
jb
add
dec
jne
gs
push
add
push
inc
outsl
insl
insl
popa
outsb
fs
imul
add
pop
add
add
fcomp
xor
inc
outsl
jb
js
je
add
insl
jae
aas
imulb
gs
je
insl
and
jb
jb
add
or
add
outsl
testb
adc
add
dec
inc
ffree
incb
inc
dec
dec
inc
dec
dec
adc
or
jmp
jo
imul
and
jae
insl
popa
fs
je
gs
jo
popa
pushl
outsl
and
and
and
jg
imul
out
and
fwait
jb
arpl
or
gs
jae
and
outsb
je
arpl
out
jg
pushf
xor
jae
jae
jo
outsl
jb
jmp
cmp
popa
insl
and
inc
gs
or
jle
adc
rolb
lahf
xor
out
fdivrl
dec
push
dec
dec
pusha
mov
mov
imul
insl
bound
fs
imul
neg
jg
xchg
imul
outsb
or
out
fnsave
outsb
fs
bound
jg
jns
out
or
and
and
insl
outsl
jae
and
out
aas
mov
gs
insb
je
outsl
data16
insb
insb
insb
decl
xchg
sub
imul
insb
jb
and
outsb
jg
pop
test
cmpsl
popa
xchg
outsb
jae
jb
fdivrs
out
arpl
sbb
insb
insb
dec
popa
imul
divl
outsb
outsl
je
outsb
outsl
jne
push
arpl
and
mov
test
xor
sub
mov
sti
and
pusha
cwtl
gs
mov
je
add
mov
arpl
packuswb
sahf
sti
mov
dec
lahf
pusha
xchg
jae
fs
xor
jne
popa
bound
xor
and
popa
jo
jnp
aaa
xchg
mov
daa
inc
jecxz
imul
mov
lcall
dec
sahf
jae
fs
and
mov
dec
shll
dec
pop
fbstp
adc
jnp
push
shrl
xchg
das
push
push
and
cld
mov
sbb
aaa
xor
pop
imull
outsb
sub
or
outsl
pop
fs
arpl
add
and
gs
aaa
xor
sbb
or
jne
cwtl
and
imul
arpl
pop
lcall
je
orb
xchg
hlt
jb
jno
gs
mov
mov
in
shlb
imul
and
jne
mov
popa
insb
and
repnz
jnp
outsb
mov
or
std
outsl
outsb
insl
outsb
je
sub
xchg
lea
jae
imul
lea
dec
les
outsl
imul
gs
jg
add
arpl
jae
data16
push
imul
jno
hlt
sahf
add
ja
fdiv
mov
cmp
jb
addr16
outsb
popa
xchg
jne
pop
push
sar
outsb
outsl
ja
ja,pt
inc
cmpsl
ffreep
loopnew
or
int3
cmp
js
mov
je
inc
cmp
gs
dec
inc
push
dec
inc
dec
mov
dec
paddsb
arpl
inc
insb
mov
inc
pop
add
push
gs
popa
insb
jne
or
push
leave
sbb
or
ret
push
jns
insl
inc
test
xor
mov
inc
cmp
push
inc
push
dec
pop
dec
insb
rol
sbb
aad
insb
push
out
cmp
pop
inc
outsb
fs
jo
outsb
inc
outsl
les
nop
inc
imul
das
adc
js
push
dec
outsl
ja
jmp
notl
gs
bound
dec
jb
out
les
add
dec
popa
jae
inc
ss
sbb
jbe
jo
jo
das
cmovbe
lcall
popa
addr16
outsl
js
add
inc
push
test
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
dec
dec
push
mov
stc
inc
push
inc
push
pop
inc
push
pop
pop
daa
mov
arpl
inc
dec
dec
dec
inc
push
inc
or
add
out
add
add
mov
pop
or
psadbw
add
int3
inc
add
cld
and
push
lret
xor
movl
inc
inc
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
lcall
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
lcall
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
mov
jg
pop
cs
aaa
pop
xchg
divl
cwtl
scas
cmp
cmp
or
and
add
inc
ss
add
setne
add
xor
pusha
mov
inc
sub
add
add
add
pop
add
add
insb
add
roll
inc
pop
testb
push
sbb
aaa
add
adc
sbb
add
push
pop
inc
and
fmul
addb
mov
and
lcall
xor
add
addb
incl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
ljmp
pop
popa
nop
sub
push
or
sub
push
ret
jg
adc
pop
pop
push
push
mov
mov
insl
cmp
add
and
jg
fwait
dec
and
and
dec
dec
das
fs
jns
mov
push
dec
add
inc
add
insl
bound
add
jbe
dec
arpl
push
gs
aad
incl
jne
je
add
insb
inc
dec
testl
je
popa
jb
push
jle
bound
popa
and
out
out
jae
pop
add
push
add
ja
idivl
popa
jns
inc
pop
jb
cmp
dec
popa
aas
divb
outsb
add
je
jb
sbb
imul
jae
cmp
add
push
gs
gs
jg
mov
outsb
push
add
pop
popa
je
inc
jb
lcall
add
das
add
add
pop
add
jo
es
add
das
jo
jne
push
ret
mov
je
je
cmp
imul
outsl
and
outsb
andl
outsl
andb
je
sub
popa
add
aam
or
jb
scas
mov
add
pusha
sbb
insb
outsl
jbe
imul
jo
div
mov
outsl
sub
jb
arpl
outsb
popa
cmp
and
mov
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
sbb
outsl
insb
adc
add
and
popa
imul
arpl
mov
push
and
jae
inc
mov
mov
imul
jae
sub
divl
popa
outsb
pcmpeqd
gs
gs
mov
adc
or
psrlw
jbe
iret
and
add
gs
das
xor
punpcklwd
addr16
ret
fsubl
jae
and
popa
insl
pop
shlb
inc
and
mov
leave
mov
gs
outsb
cmovnp
inc
pop
fs
popa
mov
push
xchg
and
dec
fcoms
outsl
jb
arpl
lret
fbld
in
arpl
and
jo
bound
ja
cmpb
scas
arpl
outsl
insl
bound
loop
jae
daa
push
xor
xchg
bound
imul
outsb
je
pusha
mov
lock
jae
sub
cld
jb
jp
insb
imul
ja
addr16
outsb
jns
int3
xor
add
adc
imul
cmpsl
popa
jb
xor
popa
ds
iret
imul
pop
addr16
popa
outsb
push
add
insb
jne
pushl
jne
push
adc
push
xor
jecxz
je
push
adc
jb
pop
mov
jg
data16
outsb
arpl
cmova
ss
adc
xor
idivb
gs
aam
add
mov
pop
sbb
sbb
and
pop
pop
int3
loope
in
cmp
push
xor
dec
sahf
imul
imul
mov
mov
jp
xor
int3
sbb
into
lock
and
add
adc
fiadds
ja
je
ljmp
scas
adc
jmp
jae
popa
clc
push
daa
jae
insl
jo
imul
inc
mov
adc
addr16
into
in
fidivs
adc
add
mov
arpl
add
insb
mov
add
gs
outsb
sub
in
mov
and
pop
xchg
roll
and
push
add
fistpll
add
dec
inc
add
inc
add
dec
dec
iret
jl
enter
add
dec
push
add
pop
cld
jg
mov
pop
pop
dec
dec
add
rolb
inc
dec
push
add
cmp
mov
outsl
mov
repnz
add
add
dec
add
add
dec
and
xor
inc
add
push
cmp
aas
enter
iret
inc
add
inc
add
inc
add
repnz
dec
add
push
add
movsb
int
cmp
add
add
and
jl
dec
dec
add
push
push
add
push
add
jl
enter
adc
push
inc
add
inc
push
push
add
cmp
xchg
dec
push
inc
add
pop
dec
add
dec
add
inc
add
js
enter
add
push
dec
add
and
dec
add
add
push
sti
sti
inc
add
int
pop
add
pop
push
add
push
add
pop
add
push
inc
add
inc
inc
push
add
push
add
push
push
inc
add
push
add
out
stc
inc
dec
dec
add
pop
pop
push
pop
fwait
outsl
mov
inc
add
dec
inc
add
pop
pusha
lahf
sbb
dec
add
and
sbb
cld
jg
int
push
push
dec
add
push
dec
add
int3
inc
add
inc
add
out
xlat
rorb
fadds
bswap
pop
movntq
push
push
dec
scas
ja
sysret
mov
mov
or
adc
add
or
call
add
adc
or
add
dec
dec
xor
dec
jmp
add
push
ret
pop
sbb
jb
xor
xchg
cs
mov
loope
test
out
stc
mov
mov
add
daa
push
adc
nop
cmp
inc
mov
and
rcr
inc
sub
data16
adcb
push
xor
jl
dec
decl
add
ret
add
pop
imul
push
pop
push
gs
jo
xor
bound
xor
xor
push
or
cmp
xor
xor
jne
jo,pn
pop
adc
adc
arpl
andb
add
add
cmp
int
mov
mov
add
ljmp
out
or
jecxz
inc
add
add
test
xlat
jae
or
shlb
sub
hlt
jge
pop
pop
mov
sahf
sti
add
pop
inc
add
add
pop
cs
pop
nop
aam
dec
pop
aas
fsubs
jge
pop
in
pop
inc
add
clc
or
cvttps2pi
inc
add
add
jae
orl
decb
pop
addr16
add
add
mov
ffreep
pop
pop
shrb
pop
mov
inc
pushf
insb
jg
adc
add
add
inc
cmp
test
pop
jno
inc
ret
daa
int
pop
cwtl
sti
add
add
add
fsubs
sbb
mov
std
aaa
xchg
test
aas
inc
test
or
pop
mov
negb
pop
icebp
mov
pop
ffreep
push
idivb
pop
fistpll
int
cmpb
or
and
lods
aaa
pop
das
mov
ss
mov
and
mov
mov
pop
mov
stos
imul
jg
sbb
cs
pop
push
mov
xchg
pop
lahf
jmp
test
ret
xor
fcomps
xor
pop
add
mov
or
aad
lahf
or
push
rolb
cmp
or
adc
or
inc
add
je
xlat
dec
dec
pop
adc
sbb
adc
mov
dec
shll
sbb
rcrl
xor
cld
mov
xor
xor
mov
push
mov
pop
and
and
in
mov
insb
pop
dec
xlat
jne
in
pop
jp
dec
pop
cld
dec
sarb
pop
add
mov
add
ds
xchg
pop
or
mov
pop
enter
mov
nop
or
orb
xchg
out
test
xor
push
cmpsl
jae
push
xchg
idiv
orb
add
mov
addr16
or
pop
fmuls
sbb
ss
pop
pop
or
or
mov
jbe
add
cmp
ret
jne
aam
add
push
movsb
lret
xchg
mov
icebp
push
out
mov
sbb
mov
push
cmp
pop
cmp
xchg
adc
sti
sarl
pop
xor
add
xor
aad
xor
jp
mov
iret
jge
mov
pop
pop
jnp
out
jae
dec
pop
insl
movlps
inc
je
pop
xor
out
das
in
and
pop
dec
pop
and
addb
fmull
ret
add
and
or
popf
call
sub
outsl
negl
add
into
pusha
clc
fsub
pop
pop
xlat
pop
pop
sbb
in
pxor
add
insl
lods
inc
add
mov
ret
add
add
add
stos
sbb
add
or
sbb
and
popf
push
sbb
mov
push
or
add
pusha
hlt
cmp
push
incb
add
add
movsb
mov
inc
inc
inc
cld
jge
cmpsb
filds
mov
mov
or
inc
jle
pop
test
mov
shll
adc
inc
pop
jb
out
mov
das
inc
int3
std
fisttps
iret
mov
in
call
xorl
xor
pop
inc
cmc
mov
and
pop
fisubrl
stc
lock
jg
das
rcr
fsubp
stc
add
xor
pop
cmp
add
pop
sub
adc
outsl
push
xor
cmpsl
add
push
add
int3
or
pop
les
lds
mov
adc
add
das
pop
jmp
js
add
inc
pop
xor
or
sbb
pop
cmp
cmpsb
sti
inc
pop
mov
inc
add
lcall
pop
cmpsb
imul
imul
cmpsb
imul
inc
add
imul
dec
xlat
pop
enter
lods
mov
xchg
nop
mov
pop
xor
insb
jecxz
repz
inc
pop
pop
sti
inc
add
add
jnp
pusha
add
cmp
ret
sahf
or
test
mov
push
push
ss
inc
push
xor
adc
fbld
mov
stos
jge
or
push
push
mov
cltd
xchg
pop
xchg
sub
push
add
cli
ds
mov
xchg
or
sbb
aam
jge
inc
out
xor
daa
cmpsb
sbb
jne
mov
addb
mov
pop
add
adc
cmp
push
push
out
add
cmc
push
inc
dec
pop
push
add
and
sub
and
inc
add
jl
add
es
mov
pop
xchg
cmp
pushl
add
mov
cmp
jp
in
fisubrl
mov
lods
ljmp
fs
daa
cli
pop
pop
jo
sbb
lret
lds
ret
insb
xchg
out
clc
xchg
pushl
subl
mov
pop
inc
pop
inc
daa
pop
sbb
scas
out
sahf
adc
mov
sti
mov
jae
nop
cmp
add
or
dec
inc
loopne
mov
and
pop
pop
xchg
fidivl
xlat
or
xlat
xchg
mov
testb
xor
shrl
fadds
aas
and
fcos
stos
fidivrs
aas
jl
jg
jp
ud0
decl
xchg
push
or
das
mov
testl
xchg
mov
incl
jmp
or
inc
rcrb
push
cmpsb
call
push
js
insl
push
sbbl
fists
gs
aaa
lods
repnz
sahf
int3
pop
xchg
outsl
lea
push
mov
xlat
sub
mov
call
mov
aaa
mov
fcmovb
pop
fidivl
cwtl
dec
pop
xchg
incb
xchg
std
ljmp
stc
xor
jne
insl
sub
aas
aas
mov
decl
in
rorb
adc
out
pop
bound
loop
dec
pop
enter
ret
push
icebp
pop
in
in
hlt
and
call
std
int
andb
ret
add
les
pop
lcall
inc
mov
sbb
pop
xchg
cmp
fldcw
gs
hlt
xchg
aaa
sti
gs
cmpsb
arpl
pushl
stos
mov
out
and
cmp
push
negb
jmp
test
jge
pusha
cmpsl
cld
sub
ljmp
cld
aam
loopne
icebp
pop
sbb
dec
mov
std
icebp
or
dec
push
pop
xlat
ja
mov
push
and
xor
pop
sbb
out
add
add
ret
xchg
add
lret
mov
lods
idivb
mov
shl
iret
push
lods
or
mov
push
jae
outsl
push
mov
fldcw
inc
dec
pop
xor
cli
sahf
pusha
rclb
fst
push
cmp
jbe
inc
sub
add
and
mov
sub
stos
xor
sbb
mov
cmp
gs
decb
arpl
int3
cmp
cltd
jle
cmc
movsl
push
into
mov
sub
sub
decl
lods
pop
scas
xchg
scas
fisttpl
xor
mov
pop
mov
sbbl
jge
mov
add
decl
mov
outsb
jecxz
sbb
and
scas
mov
out
dec
pop
ret
sbb
and
jmp
test
pop
jae
push
cs
sbb
dec
or
ljmp
cmp
sub
xchg
shrb
dec
mov
mov
jg
cmp
cs
cmp
imul
cmp
xchg
dec
cmc
mov
jnp
push
pushl
adc
push
cmpsl
pop
js
sbb
xor
cmp
cmovnp
push
call
pop
inc
hlt
jb
repnz
imul
cmpsl
and
stos
mov
imul
ss
ljmp
push
scas
mov
xchg
push
and
daa
fs
cmovne
or
dec
decl
cmp
sar
enter
mov
xchg
pop
das
and
roll
push
inc
pop
mov
pop
mov
push
scas
outsb
les
inc
and
mov
dec
inc
add
cmp
xchg
cmpsl
int3
jmp
xor
xchg
pop
test
inc
push
icebp
sub
dec
adc
mov
mov
cwtl
fimull
stos
mov
xorb
pop
add
cwtl
sbb
je
test
in
in
pop
push
lods
outsb
lea
fiadds
jp
aaa
stos
inc
jge
xor
sub
popf
dec
cmp
js
inc
jmp
dec
dec
iret
shll
jae
add
int
cmp
jb
aam
mov
jb
ljmp
negl
mov
cs
nop
test
pushf
mov
and
jnp
xor
jle
ljmp
sub
bound
xlat
adc
jo
dec
pop
sti
adc
push
popf
addr16
call
push
lahf
notb
mov
push
mov
mov
push
push
orl
fisttps
addr16
sbb
incl
cmp
ret
sub
in
cmpb
hlt
and
inc
dec
pop
addl
inc
les
dec
push
pusha
movsl
mov
push
xchg
cmc
cld
hlt
out
out
movsl
lds
js
int
aaa
jne
loop
jmp
jne
fmul
jnp
xor
int3
sbb
mov
insb
mull
and
xor
incl
in
scas
sub
insl
in
xchg
push
mov
or
xchg
test
cmp
inc
jns
out
out
cmp
repnz
cli
out
push
push
lahf
pushf
pop
ss
call
xor
fucom
rcll
jns
dec
std
out
fcoml
in
cmpsl
cwtl
mov
int
lock
call
sarl
push
inc
push
mov
out
inc
pop
push
sbb
xor
bswap
push
std
push
inc
xchg
add
in
inc
jle
scas
add
aas
mov
out
inc
and
add
jae
imul
add
adc
jl
add
adc
lods
cld
jmp
jns
call
and
cmp
push
push
aas
xchg
sbb
dec
adc
adc
into
dec
dec
sbb
lcall
inc
hlt
inc
fcomps
insb
add
aaa
inc
dec
and
insb
mov
jle
dec
sbb
fiaddl
xor
lcall
adcl
pop
xor
xchg
fwait
xor
negl
into
push
mov
pop
xor
lcall
setp
pushf
lret
sub
mov
cmp
lock
or
ja
in
adc
inc
fcmove
fimuls
scas
sub
cmp
fisttpl
or
xchg
jl
popa
jle
call
cld
fstl
jae
in
pop
shlb
jne
mov
lret
push
and
loope
icebp
dec
call
lcall
mov
adc
add
sti
dec
fcmovne
mov
mov
adc
and
pushl
out
push
mov
inc
scas
or
xchg
pop
mov
or
in
cmp
decl
mov
or
dec
xchg
int3
int3
inc
push
adc
push
mov
std
lods
mov
and
xchg
test
pop
dec
fsubs
fwait
xchg
push
sbb
inc
add
inc
xchg
test
decl
add
lret
add
dec
scas
nop
and
repnz
hlt
jb
lcall
sbbl
jmp
xor
fiadds
dec
adc
mov
add
dec
mov
call
push
mov
inc
shl
mov
cld
mov
rcr
inc
jmp
js
js
dec
xor
popa
lock
imul
into
mov
daa
push
imull
movb
repnz
cmpsb
dec
jo
jmp
arpl
inc
pop
push
jp
aad
dec
aas
xchg
jno
sbb
mov
push
jmp
jnp
push
or
int
sbb
jmp
mov
addr16
inc
je
pop
xor
lcall
push
lret
lret
mov
push
movsl
inc
or
add
insb
stos
cwtl
adcb
js
cmp
dec
leave
loop
popf
mov
jle
mov
hlt
fimuls
insb
mov
call
roll
add
test
arpl
xchg
insb
cmp
movsl
into
push
loope
ud0
push
inc
lret
test
mov
push
mov
lods
mov
fnstsw
xchg
inc
ret
push
xlat
js
jno
mov
lret
movb
sbb
inc
adc
in
push
test
adc
and
lods
push
jl
xor
fnstenv
ficoml
jl
mov
push
xlat
loopne
xchg
push
dec
sub
push
sbb
decl
or
imul
mov
cwtl
mov
movsb
shr
stc
push
or
cmp
mov
sbb
sub
scas
orb
push
lock
std
call
hlt
adc
aad
and
cmpsl
neg
push
in
sti
aam
jge
ja
scas
push
cmp
mov
inc
jb
mov
fcomps
fs
and
pop
jmp
in
mov
into
and
cli
push
jmp
repnz
pusha
imul
or
pop
add
push
jmp
popa
mov
incl
repz
lcall
out
jp
xchg
push
and
das
ljmp
xchg
ljmp
cmc
mov
jo
lret
and
in
inc
bswap
stos
movsb
sub
jne
shr
jecxz
push
cld
sbb
mov
inc
in
call
rorl
cmp
rorl
call
orb
fsubp
cmp
push
fadd
or
dec
cmpsb
insl
movsb
push
shl
mov
push
cmp
xor
push
or
dec
or
fistps
lret
push
xchg
pop
stos
push
dec
jmp
bound
lea
fisttpll
jecxz
jbe
xchg
in
movsb
sbb
sbb
ljmp
mov
fwait
out
cld
icebp
cmpb
call
out
std
xorb
push
in
jge
jo
imul
enter
mov
fbstp
mov
mov
clc
mov
scas
ds
pop
ror
testl
and
pop
or
mov
call
lret
inc
mov
pushf
lret
loop
data16
lcall
mov
decl
add
shrb
shrb
inc
pop
dec
add
enter
mov
jmp
adc
mov
ret
loope
sub
mov
or
xor
mov
decl
push
xchg
adc
push
mov
insb
scas
mov
jbe
cld
jne
loop
ljmp
aas
sbb
lea
arpl
cmp
mov
idivl
xchg
mov
les
cmc
out
pushl
iret
mov
jb,pn
and
inc
cli
push
mov
xchg
push
jp
mov
and
push
jp
cmpsb
aam
loope
fxam
jae
test
add
xchg
fiaddl
inc
pop
daa
adc
mov
pusha
imul
int3
or
adc
popf
movsb
add
addl
cltd
adc
std
cs
sub
and
dec
cld
mov
popw
jmp
mov
call
incl
fcos
jecxz
adc
lods
fadd
adc
mov
lret
fildll
or
incl
out
mov
stos
and
adc
cmp
mov
outsl
sbb
inc
dec
jmp
adc
jle
fisubs
mov
adc
mov
sbb
imul
divb
sub
mov
mov
repnz
jg
fwait
or
jmp
mov
sbb
jmp
push
inc
cltd
cmp
push
shlb
pop
pop
xchg
ss
inc
mov
mov
jecxz
addb
pop
inc
mov
cmp
push
pop
hlt
pusha
sub
mov
mov
incl
mov
xchg
scas
ret
cmc
inc
mov
push
shl
lcall
ljmp
insl
rcrl
cli
dec
push
mov
add
and
data16
lret
scas
push
xchg
fimuls
pushl
stos
test
daa
sub
sahf
es
loopne
cltd
xlat
push
leave
mov
mov
dec
lret
jecxz
imul
mov
push
daa
xchg
fnsave
xchg
sub
das
xchg
pop
inc
adc
mov
decl
pop
push
xchg
out
in
jecxz
test
fs
pop
fucomp
mov
pop
mov
lcall
insl
lret
pop
ror
outsb
jle
mov
aaa
in
lds
paddb
jmp
sbb
mov
jmp
jp
push
pop
sbb
cmpsl
mov
rorb
adc
inc
ja
inc
ret
dec
daa
test
arpl
push
sbb
xorb
inc
pop
pop
sbb
inc
nop
lods
pop
ret
xor
sarl
iret
ljmp
mov
je
jae
fnstenv
out
adc
dec
xchg
jle
in
iret
xor
dec
inc
popa
les
xor
mov
jae
lcall
pop
dec
pushf
iret
out
and
rcll
push
mov
mov
ja
pop
sub
or
lock
jmp
adc
xchg
pushf
xchg
push
dec
adc
loope
mov
mov
or
or
into
popa
lea
leave
xchg
call
cmpb
adc
daa
out
aad
call
fwait
pop
outsb
xor
stos
incl
subl
mov
mov
repnz
or
pop
xchg
mov
ss
incl
loop
arpl
stc
sahf
subb
sbb
jae
sub
cmp
push
stos
jg
imul
adc
xlat
mov
iret
cmpsl
gs
lret
addb
call
and
scas
jae
mov
lods
pop
jmp
adc
push
cmc
lahf
push
add
jmp
mov
cmpsb
dec
dec
dec
dec
scas
test
shlb
movsl
mov
shlb
cmpsl
dec
aad
decl
aam
adc
push
loopne
jmp
addl
mov
jecxz
inc
sbb
xchg
dec
jge
cmp
incb
sbb
or
rolb
inc
rorb
jmp
repz
out
sbb
call
les
mov
in
adc
jmp
js
adc
jge
mov
std
loopne
icebp
in
dec
lea
mov
aad
inc
xor
mov
ljmp
out
sbb
or
ss
mov
dec
and
incl
lock
pop
push
or
aam
jb
jle
jp
jmp
dec
das
or
add
jmp
out
outsb
jbe
dec
fadd
fs
sub
sub
mov
lcall
lcall
std
out
lahf
mov
cwtl
test
cmc
mov
add
adc
dec
sbbl
arpl
push
es
ljmp
mov
and
mov
nop
lcall
or
and
fs
xor
incl
mov
and
mov
and
loope
pop
sub
mov
jno
inc
dec
imul
jmp
test
xchg
sub
pop
rclb
add
out
sbbb
pop
lahf
jae
incl
pop
rcrb
inc
shrl
sahf
jp
lods
lahf
ds
pop
push
out
movsl
loope
int
and
cltd
int3
cwtl
and
repnz
test
mov
push
shlb
adcb
loop
leave
mov
call
lret
xorl
ret
lods
sub
fildl
dec
dec
mov
jle
jo
cmp
sbb
call
popa
popa
and
mov
ret
ljmp
jmp
sub
scas
lcall
outsb
test
jne
cltd
scas
lret
in
bound
xor
pop
repz
and
in
leave
push
add
loope
inc
or
jbe
test
adc
and
lret
jp
lcall
stc
adc
ret
mov
aam
ss
mov
mov
push
popf
pop
data16
decl
xor
jle
repz
sub
pusha
pop
rcrb
popa
or
int3
mov
incl
lea
jge
pusha
dec
out
xchg
cs
adc
push
nop
inc
and
pushl
cmpsb
inc
jmp
xor
pushf
mov
imul
or
xchg
in
call
dec
mov
pcmpeqd
dec
cmc
mov
pop
and
sbb
adc
inc
arpl
dec
or
pushl
rcr
lds
mov
lcall
xchg
jl
dec
add
mov
ljmp
and
rep
jo
mov
push
cmp
xchg
adc
jnp
data16
ret
mov
mov
sti
push
xor
and
inc
dec
push
lret
cmc
xchg
fwait
xor
aaa
aam
push
incl
pop
cmp
mov
out
jo
xchg
out
cmp
xor
jmp
inc
into
ret
pop
rorl
ja
sbb
mov
call
lods
lahf
jle
out
fists
shlb
mov
pop
lahf
aam
cmp
dec
loope
adc
stc
sub
pop
add
into
sbb
icebp
jmp
dec
fbstp
push
jns
fs
pop
cmpsl
push
pop
sti
pop
loop
call
mov
scas
cmp
add
ja
imul
push
in
out
pushl
xor
rolb
and
mov
loop
sub
and
mov
dec
cmp
je
jecxz
pushf
inc
xchg
cld
pop
mov
sub
pop
or
push
add
jg
idivl
push
push
sbb
int
dec
and
fcomps
imul
jp
cmpsb
push
dec
xor
jnp
lret
xchg
xor
test
xor
jno
lcall
icebp
out
mov
decl
jmp
repz
push
pop
ror
pop
das
mov
jmp
ret
and
cs
and
decl
xchg
dec
cmp
pop
repz
popf
pop
jecxz,pn
cmpb
outsl
ljmp
fs
js
orb
mov
mov
mov
pop
mov
push
data16
test
test
pushl
fucom
aad
aas
mov
push
test
xor
out
or
mov
inc
push
daa
es
push
mov
pop
inc
cmp
push
dec
pop
movl
in
pop
addb
in
mov
cmp
dec
incb
add
andb
inc
dec
enter
out
cmp
jmp
jns
or
bnd
jb
leave
push
ret
fs
repnz
repnz
xorb
rorb
ds
pop
outsb
jnp
add
dec
lret
loop
jne
pushf
cmc
sub
cmp
push
repnz
mov
jg
mov
pop
out
mov
mov
push
jne
int
mov
push
push
sbb
incl
dec
pop
mov
cwtl
or
xor
xlat
loopne
ss
add
add
lcall
pushl
jne
push
inc
mov
mov
movsb
ficomps
push
stos
add
or
cmp
jmp
jmp
sahf
push
frstor
roll
lret
sarb
inc
loop
xchg
loopne
xchg
fucompp
mov
push
push
sahf
jmp
int3
sbbb
sbb
push
stos
fsubrl
push
lcall
lock
stos
dec
outsb
or
inc
mov
insl
adc
adc
dec
pop
es
or
lods
dec
incl
xlat
ds
lret
adc
cltd
sub
ljmp
vsubss
ljmp
das
mov
xchg
outsb
adc
out
lods
and
dec
dec
ds
push
int3
dec
lret
lcall
ret
pop
je
mov
jns
lret
mov
inc
lods
movsl
popf
addl
mov
adc
in
rol
cmp
ret
mov
jns
mulb
lcall
jb
dec
test
add
jecxz
pop
mov
sub
mov
mov
out
mov
pushl
mov
pushf
cwtl
sub
lods
lret
lahf
imulb
cltd
adc
inc
mov
ret
jmp
pusha
jl
dec
popf
add
shrb
cwtl
or
repz
es
test
repnz
pop
lcall
stos
adc
shl
fdivrs
pop
shlb
into
lcall
icebp
fildll
or
pushl
jae
mov
test
ds
repnz
xor
adc
fstpl
icebp
mov
sub
je
add
dec
shlb
and
repnz
mov
push
jmp
cmp
sub
movsb
sti
jmp
orb
fs
movsb
fiaddl
dec
sbb
ljmp
sti
dec
push
dec
pusha
sbb
and
outsl
rcrb
cltd
jl
mov
cld
ljmp
loopne
in
push
sbb
sub
add
mov
in
pop
jae
sar
clc
ja
mov
cmc
popf
test
ret
xor
ret
mulb
shr
push
pusha
fsubl
decl
add
mov
jnp
xor
in
jecxz
push
out
lahf
jbe
fdivs
pushl
sub
aas
decl
divl
icebp
cmc
push
mov
xchg
pop
cmpl
mov
mov
sti
mov
outsb
nop
mov
es
ja
pop
jo
jo
adc
incl
iret
push
mov
adc
lret
hlt
cmc
bound
push
lea
adc
lahf
push
jp
cmp
jmp
xor
mov
mov
lret
shlb
lods
pop
add
pushf
in
mov
dec
xchg
call
sub
jne
add
stos
push
int
mov
fildll
repnz
test
lahf
in
out
insl
lcall
hlt
ss
xchg
jbe
adc
mov
loope
rorb
push
repz
icebp
mov
lea
incl
sbb
int
jmp
mov
adc
inc
add
cmpl
decl
mov
jge
push
fmull
mov
stc
adc
int
xchg
repz
lcall
test
movsb
xchg
fistpll
cwtl
mov
lock
fistpl
ret
jmp
sub
push
mov
inc
jl
or
mov
repnz
xchg
bound
ljmp
scas
aam
fwait
cmp
in
clc
mov
jp
push
fnstsw
lcall
je
incl
daa
mov
std
inc
in
iret
xchg
js
mov
in
fistpl
aam
mov
scas
scas
ljmp
mov
out
jnp
mov
lea
jle,pt
mov
test
pushf
pop
test
cmp
mov
lret
mov
sbb
fwait
xchg
jmp
mov
xchg
arpl
call
loope
push
lds
mov
xor
pop
mov
sar
call
xor
or
or
test
dec
test
inc
cmp
decl
ljmp
in
add
outsl
mov
mov
mov
sub
rolb
decl
aad
pushf
mov
mov
cmp
mov
push
mov
mov
stos
scas
lcall
push
ss
dec
sbb
sub
inc
push
test
call
adc
fidivrs
push
ret
sbb
pop
sbb
sar
cmpsl
popf
test
xor
mov
lods
mov
scas
cmp
sub
jl
ret
aad
cwtl
outsb
test
sub
ss
incl
cmp
out
jne
xlat
in
aad
mov
mov
push
mov
jno
andb
lcall
hlt
or
outsl
pop
ja
add
les
jae
out
outsb
inc
aas
fimuls
addr16
call
inc
popf
stos
adc
loopne
add
sbb
pusha
inc
add
fs
je
jmp
or
pop
sub
mov
xchg
cmc
jnp
sub
mov
adc
insb
aas
outsb
and
push
sti
les
ja
lret
je
fcmovbe
xor
les
in
add
ljmp
add
inc
push
pop
enter
sub
lcall
sub
and
sbb
jl
jmp
flds
int3
push
sub
sub
lcall
incl
jnp
mov
sub
cmp
jbe
stos
push
shll
mov
jne
add
lcall
mov
cmpsl
adc
cmc
in
pop
rclb
add
mov
inc
push
int3
sbb
sahf
add
pop
jb
push
sbb
leave
jle
sub
adc
fnsave
push
cmp
jmp
add
stos
popf
jp
nop
sub
mov
dec
scas
mov
pop
push
roll
sbb
pop
lcall
sub
pushl
test
dec
xchg
xchg
test
jg
or
and
decb
or
xor
push
push
aad
mov
scas
and
push
gs
xchg
out
or
xor
test
cmp
fdiv
ret
dec
mov
movl
xchg
sub
cs
mov
test
lcall
mov
loope
inc
or
xchg
mov
sbb
lcall
int
push
add
mov
adc
stc
cmp
orl
mov
lods
xchg
aas
add
scas
repz
ljmp
int
xchg
repz
popf
mov
clc
xchg
je
pop
mov
pusha
loope
mov
incl
mov
jl
xor
fwait
push
aas
inc
push
xchg
cmp
push
or
dec
xchg
decl
mov
rol
cmpsb
loope
dec
mov
les
sub
movsl
sti
fs
pop
pushl
rorb
fisubs
pop
clc
jne
fdivp
cs
imul
inc
push
roll
incl
out
sub
fs
or
xchg
mov
fldenv
jns
lock
rclb
jle
lcall
adc
mov
ds
push
dec
mov
loope
adc
pop
inc
call
push
cltd
and
jl
flds
js
xchg
in
int3
xchg
xchg
xchg
lea
xor
repnz
sub
jmp
insb
fstl
int
inc
cli
popa
mov
les
fcoml
inc
lock
fnstsw
hlt
test
aam
clc
fists
movb
and
pushf
aaa
int3
ficomps
std
sub
cmp
call
outsb
scas
sub
add
mov
mov
mov
pop
mov
fwait
xchg
or
cmp
pop
mov
or
dec
in
fldl
pop
push
int
outsl
mov
push
int3
and
decl
test
imul
dec
or
int3
jae
fisubs
add
mov
out
cmpsl
mov
mov
or
xchg
fisubrl
enter
call
clc
mov
adc
mov
dec
pop
adc
out
jp
popf
orb
adc
dec
add
decl
sbb
loopne
sub
scas
rcll
inc
stos
fldt
sarl
dec
dec
push
push
lcall
push
push
pop
sti
mov
mov
in
sahf
inc
std
scas
ds
pop
sub
jmp
cmp
das
lret
ja
adc
fistpll
ss
jge
dec
xor
sbb
incl
arpl
mov
push
jbe
add
inc
ret
movsb
xchg
sub
out
mov
test
incl
decb
push
mov
jmp
cs
or
test
xor
dec
sub
das
pop
rol
push
xor
push
ljmp
fs
jns
or
insl
arpl
sbb
adc
mov
inc
mov
or
aam
adc
or
mov
insb
ret
jb
jl
icebp
add
decl
push
adc
leave
popf
les
pop
push
sti
mov
int3
mov
mov
cmpsb
mov
cli
sub
xchg
dec
daa
jo,pt
mov
dec
aas
cmp
xchg
mov
add
fdivr
mov
cmc
shr
stc
in
lcall
cmp
xchg
imul
cltd
add
push
xchg
aam
mov
and
cltd
push
fdivr
add
add
inc
xor
out
call
jg
inc
and
outsb
popa
gs
fbld
incl
inc
jae
or
pop
iret
cmp
inc
pop
jno
dec
aaa
and
call
and
mov
int
cmp
stos
xorl
repz
pushf
xchg
loop
out
push
filds
movsl
sbb
mov
shl
jmp
pop
lods
jae
cs
pop
or
call
push
pushf
and
shll
adc
jle
jmp
cmpsb
loope
inc
jnp
adc
decl
inc
pusha
loop
xchg
movsb
pop
jns
popl
cmp
aam
adc
or
pushl
lret
mov
push
hlt
sbb
js
cmp
pop
cmp
cmp
xor
mov
ljmp
pop
push
into
ds
xorb
inc
add
mov
jp
les
mov
call
pop
stc
and
call
cs
in
add
dec
popa
push
and
call
stc
sarb
push
pop
or
sbb
xchg
in
sbb
scas
mov
cmp
ljmp
and
sbb
loopne
rcrb
mov
xchg
in
or
gs
jg
pop
and
incl
and
retw
mov
sub
adc
sub
inc
mov
inc
bswap
jecxz
call
xchg
mov
push
shll
dec
adc
xor
cmp
mov
ds
in
mov
ret
jns
and
dec
insb
lods
dec
rclb
push
enter
addr16
adc
mov
mulb
fwait
call
sbb
pop
inc
mov
leave
add
mov
fstl
add
mov
ret
mov
ljmp
bound
in
mov
sbb
xlat
in
sbb
ret
cmp
cs
incl
xchg
iret
mov
mov
mov
insb
dec
sub
dec
dec
push
jmp
aad
lcall
pusha
das
adc
cmp
popa
je
cmp
cmp
mov
subl
pushl
loopne
push
dec
push
dec
clc
cmp
or
test
mov
push
sbb
ljmp
dec
js
enter
pop
cmp
pop
mov
mov
add
test
xor
mov
jmp
jo
xor
cmpsl
out
and
rolb
clc
mov
add
mov
fisubl
pop
sbb
pop
xchg
mov
mov
sarb
lahf
xchg
insl
fwait
jl
in
out
roll
fldcw
popf
dec
xchg
loope
ljmp
mov
popl
icebp
sub
ljmp
lret
aad
fnstsw
mov
cwtl
pop
push
xchg
pop
mov
stc
push
cs
imul
les
decl
mov
mov
nop
xchg
stc
or
and
jbe
cmp
fldt
push
test
xchg
loopne
cld
cmp
loop
ja
inc
jbe
mov
or
xchg
xlat
xor
decl
out
add
lahf
imulb
ficoms
push
add
add
pushl
pop
out
pushf
in
icebp
rcrb
fwait
xor
divps
insb
sbb
add
xchg
pop
ljmp
fs
mov
adc
pop
movb
mov
int3
inc
cmc
push
out
sbb
andb
sub
lret
in
outsl
mov
dec
push
sbb
mov
clc
hlt
and
scas
push
xchg
testb
push
lahf
push
inc
push
adc
pop
adc
lcall
sub
pushf
inc
adcb
jno
jecxz
sub
cwtl
push
in
inc
inc
pop
negb
cmp
jp
adc
jge
push
mov
sub
gs
test
decl
mov
mov
out
push
mov
pop
dec
inc
add
int3
mov
cmpsl
adc
or
decl
pop
cmp
cli
pop
rcrb
mov
je
lds
mov
mov
leave
loop
jmp
mov
dec
xorb
repz
cltd
or
sbb
mov
in
ret
jg
lcall
repnz
addb
push
xlat
or
dec
aam
ret
insl
push
ret
jo
int
mov
ffree
repz
jne
or
paddb
int3
or
nop
daa
xchg
inc
jmp
sahf
ja
xchg
sti
dec
iret
pop
or
mov
cmp
xchg
xlat
sbb
pushl
dec
ds
or
jmp
scas
mov
mov
lret
and
xchg
xchg
xchg
mov
xchg
mov
ljmp
aas
add
neg
inc
dec
popf
add
inc
fidivrs
jle
cmp
ljmp
out
fcoms
loop
sbb
mov
xor
and
rcl
imul
sub
imull
sahf
xchg
dec
lods
jecxz
push
xor
decb
mov
pop
arpl
movsb
shrb
inc
pop
add
enter
call
xchg
notb
loop
dec
mov
or
in
push
inc
mov
sub
mov
mov
jno
out
lods
test
rorl
decl
hlt
adc
inc
mov
inc
int3
mov
mov
insb
jp
mov
pushl
or
mov
dec
mov
push
inc
sbb
mov
mov
lahf
out
push
cmp
imul
push
cmc
decl
dec
pop
jge
or
pop
fwait
lahf
cmp
aas
jp
je
test
adc
mov
sar
decl
jg
jp
jne
outsl
add
sub
jb
imul
popa
mov
pop
and
ljmp
cmp
and
mov
stos
cmp
mov
mov
pushl
test
jmp
dec
dec
mov
fimuls
jae
rclb
outsb
rclb
iret
iret
xchg
sbb
ud0
decl
xchg
xchg
pusha
mov
add
xor
adc
iret
add
push
mov
cs
int3
and
jbe
mov
hlt
sbb
loope
in
mov
pop
pop
and
push
or
call
imul
add
xchg
mov
mov
popa
lret
mov
xchg
in
xor
jmp
scas
imul
getsec
xlat
in
pushf
sbb
mull
adc
call
jae
cmp
out
lcall
les
in
cmpb
adc
sub
sbbb
lods
xor
insl
decl
ret
call
pushf
mov
pushf
mov
pop
xlat
jae
andl
out
les
jg
pop
sub
testb
not
scas
loop
xchg
enter
and
clc
push
mov
mov
dec
incl
mov
inc
cmp
enter
mov
shlb
outsl
mov
mov
pushl
sbb
ds
pushl
mov
jmp
loope
loop
xor
mov
cmp
mov
ret
lods
jnp
shlb
pop
mov
arpl
xor
out
insb
pop
incl
cwtl
xchg
cmp
sbb
fbstp
ficoml
jne
lret
aas
sahf
ret
xchg
and
pushl
out
and
xchg
imul
adc
out
fwait
fwait
rcl
imul
dec
arpl
jmp
filds
pop
pop
out
loope
push
div
pop
lahf
mov
push
mov
push
outsl
mov
decl
cwtl
xor
das
mov
test
test
jne
cld
jo
lock
fdivrs
insl
dec
pop
xchg
pop
stos
mov
sub
sub
dec
and
push
sbb
sbbb
adc
jp
pop
dec
cmp
stc
pusha
push
and
inc
pop
lcall
leave
jmp
xor
xchg
mov
xchg
cld
addr16
decl
inc
push
cmp
or
idiv
and
jmp
add
lds
cmpsl
movsl
dec
cmpsl
adc
add
cli
mov
jns
jg
fnstenv
fwait
and
jl
stos
xchg
mov
jg
mov
sbb
or
pushl
int3
mov
rcl
push
pop
add
scas
mov
sti
jmp
pushf
or
scas
inc
add
lcall
pop
mov
mulb
pop
test
add
popa
in
push
cwtl
sbb
call
push
add
roll
xor
aad
pop
cltd
or
mov
jnp
sub
js
cmp
out
jge
mov
xchg
lahf
pop
cmpsb
push
in
dec
pop
idiv
andb
incl
out
scas
add
dec
sub
aam
mov
cmpsl
rcrb
mov
jle
nop
lock
loope
call
addr16
jbe
cs
out
lret
add
movsl
rclb
jecxz
lcall
mov
cmpl
and
sti
or
mov
xchg
les
out
sbb
sbb
shll
jmp
mov
je
mov
add
es
sbb
cmpsb
js
sub
cmp
sub
cld
xor
inc
xchg
jno
movsl
popf
js
xchg
lods
sbb
cmp
xchg
incl
jnp
push
stos
cld
shl
call
xor
jb
stos
mov
fwait
ds
decl
dec
add
inc
int3
mov
inc
arpl
add
cmc
mov
pop
rorb
inc
add
xchg
mov
adc
push
lcall
mov
or
inc
cmp
lcall
enter
in
or
fsubrl
fdivrl
rorl
xor
je
jb
jmp
ljmp
cmp
cvtdq2ps
test
pusha
push
dec
dec
add
pop
cmp
mov
shll
fstpl
mov
out
scas
sahf
or
xor
movsl
lods
stos
mov
add
fldenv
pushl
sahf
add
lock
sbb
subl
rcll
inc
and
mov
lods
ljmp
repz
mov
insb
rcll
arpl
adc
mov
inc
pushl
movb
hlt
lret
das
dec
sbb
lcall
loopne
gs
movsb
xchg
sub
dec
dec
roll
fimuls
mov
inc
add
add
xchg
aas
jo
repnz
xor
sub
lcall
dec
cmc
test
xor
jmp
rcrb
in
sub
jb
insl
addr16
int3
jns
jle
and
ljmp
bound
mov
mov
or
cld
outsl
jb
cmovae
cmpb
call
xchg
cmpl
pop
fdiv
xchg
mov
outsl
xor
jmp
or
popa
sub
push
ret
lcall
push
ljmp
loopne
cmp
mov
sbb
or
loope
jmp
lret
pushf
dec
add
rorl
mov
push
pop
cmp
mov
push
call
mov
mov
dec
or
rcrl
jmp
ljmp
scas
popa
test
aam
push
bound
ja
sub
out
jbe
loop
sti
mov
push
dec
jl
mov
push
mov
lahf
mov
pop
loop
pop
push
ljmp
add
xchg
in
loop
push
inc
lds
call
test
call
add
hlt
jns
es
push
daa
lock
cmp
push
rolb
call
mov
js
adc
pop
nop
addb
dec
pop
out
mov
jl
dec
popa
jns
lcall
inc
mov
gs
aam
add
nop
iret
push
in
add
idiv
ljmp
xor
in
clc
mov
or
cmp
imul
mov
lret
mov
ljmp
pop
pop
ss
sbb
xchg
inc
shll
sti
add
cmp
dec
aam
inc
xor
xchg
loope
and
jle
push
test
test
cs
test
lret
inc
int
movb
lock
cmpsb
xor
movsb
stos
sbb
mov
push
sbbb
ljmp
fidivrl
inc
add
je
xor
shll
pushl
jmp
into
dec
mov
cs
outsb
std
pop
xor
push
lods
pop
rcll
pushf
fidivl
clc
pop
jbe
xchg
fisttpl
ss
xor
loope
ds
xchg
incl
xchg
int
insl
add
out
cmp
mov
and
subl
ljmp
daa
rorl
ficomps
dec
mov
add
pop
cmpsb
stos
leave
lret
mov
cs
dec
pusha
out
out
insb
dec
ja
sbbl
inc
int3
mov
mov
stc
das
les
lcall
insb
jecxz
data16
hlt
std
inc
and
jne
cmp
xchg
mov
subb
ror
push
jmp
lea
jecxz
fisttps
lods
stos
or
and
xor
xchg
xchg
ljmp
cmp
mov
xlat
ret
inc
mov
or
loopne
incl
push
pop
pushf
fidivl
push
xor
decb
cmp
int3
xchg
mov
dec
lcall
mov
bound
ret
shlb
insb
xor
cmp
sub
shll
ljmp
sbb
rcl
jl
jae
cli
mov
dec
add
push
adc
or
adc
sti
fsts
cmc
gs
xchg
iret
lea
mov
lret
imul
shrb
incl
movsb
enter
adc
mov
lea
pop
repnz
sti
imul
cs
jne
sahf
fwait
jle
jp
je
jno
fs
jle
movsb
inc
inc
movsl
or
sbb
cmc
imul
decl
stos
xor
sbb
test
dec
fidivrl
mov
scas
jle
idiv
lcall
int
add
cld
mov
sbb
mov
xchg
cmp
jg
push
add
xor
dec
decl
add
jg
cltd
into
jno
cs
stc
ss
test
jnp
mov
sub
inc
sbb
ds
push
mov
jle
add
les
in
xorl
mov
gs
sbb
push
mov
and
inc
int3
rolb
and
jbe
and
ret
push
or
push
cmpsb
pop
test
dec
or
test
mov
aad
and
add
push
lahf
cli
cmc
add
and
ljmp
daa
lds
cwtl
mov
out
dec
add
rcrb
jo
es
mov
lods
dec
lods
dec
mov
addb
cli
fiaddl
addb
inc
enter
je
cli
mov
sub
or
ds
decl
enter
aaa
fadds
jecxz
enter
out
fsubl
mov
mov
add
pushl
mov
shll
add
movsl
cmpsl
sub
add
sbb
push
lcall
incl
jp
pop
lahf
push
icebp
movsl
clc
cmpsb
movsb
jecxz
sbbl
mov
in
jno
and
stos
push
push
out
jmp
mov
out
div
xorb
cli
mov
mul
jnp
mov
mov
cmp
call
fstpl
mov
mov
fistps
or
cwtl
loope
das
insl
jbe
int
xlat
and
cmp
adc
mov
mov
bnd
cmp
ljmp
mov
mov
in
hlt
cmp
daa
imul
cmp
sub
rcl
movsl
push
sti
sub
call
loopne
dec
sbb
or
sub
xchg
mov
pop
push
nop
jmp
mov
xlat
incl
addl
jp
lret
or
or
adc
in
loop
xor
mov
std
test
lret
sahf
icebp
loopne
add
in
mov
xchg
cmp
iret
or
mov
xchg
jae
lcall
rcr
mov
cmp
cmp
pop
das
stc
push
lods
and
mov
out
adc
xor
sub
ljmp
jle
xchg
cs
add
adc
jmp
mov
fidivs
or
lods
jge
jp
xchg
push
sahf
cmp
cmp
xchg
negb
cmp
fs
dec
xchg
lods
dec
add
jl
test
adc
adc
cli
je
shrb
sub
data16
mov
cltd
mov
lcall
lods
jbe
insl
aad
in
push
sbb
hlt
das
inc
das
add
sub
iret
leave
std
call
shrl
or
lods
sub
outsl
scas
pop
jl
push
jmp
pop
cmp
sbb
call
jmp
in
mov
fs
add
cmc
mov
pushf
decb
jne
lds
fwait
cltd
stos
pushl
xchg
lret
movsl
fs
out
movsl
or
clc
dec
sti
das
test
jbe
mov
js
dec
adc
pushl
in
testl
mov
sbb
mov
repnz
or
xchg
testb
mov
pop
hlt
jmp
inc
je
fists
shl
push
imul
xlat
das
repnz
call
aaa
pop
adc
jle
scas
lods
data16
or
pop
subl
nop
sub
lcall
ja
jbe
dec
out
jle
out
sbb
mov
imul
ja
fdivr
jmp
ljmp
dec
dec
bound
xchg
dec
cld
movsl
imul
subl
aaa
ljmp
pop
fwait
sbb
jecxz
sbbl
inc
xchg
mov
dec
sti
mov
xor
add
jmp
mov
sbb
cltd
add
xchg
cld
test
pop
rorw
xchg
insb
sub
arpl
lds
incl
loop
or
xchg
xor
jg
sub
cmc
sti
push
push
mov
daa
sbb
sub
push
push
outsl
push
dec
jnp
loop
imul
xor
out
xor
shlb
and
call
xchg
xchg
movsl
sbb
hlt
lods
leave
xor
and
xor
inc
mov
lcall
orb
sub
mov
xchg
sub
cwtl
mov
sub
in
cmp
push
mov
stc
mov
inc
xchg
imul
sub
mov
aam
shrl
jle
xchg
cmpsb
mov
mov
jle
mov
xchg
lret
xchg
mov
pop
mov
mov
in
xchg
dec
int3
or
decl
jecxz
scas
es
cmp
es
ljmp
mov
incl
rorl
jmp
xor
dec
test
cld
out
popf
jno
and
push
jns
inc
add
inc
les
pusha
pushl
sarb
mov
jecxz
push
inc
imul
mov
call
loope
das
mov
subl
cmc
mov
cmp
sbb
cmp
jmp
std
popf
int
int
addr16
pop
cmp
ret
movsb
aam
arpl
sbb
imul
shr
sub
call
pop
mov
add
push
out
xchg
stos
xor
lret
or
inc
and
ret
jo
pop
and
scas
ficomps
cmp
or
movsl
bnd
roll
andl
cmp
addr16
mov
sub
push
add
insb
std
jno
out
nop
loop
pusha
pop
jp
mov
push
jmp
lahf
xchg
push
pop
xlat
xor
jbe
popa
cmp
pop
pop
push
dec
adc
clc
inc
jno
mov
sub
shl
inc
stc
sbb
and
lret
scas
popf
and
addl
lcall
fists
or
lcall
jb
mov
hlt
mov
in
std
xor
dec
xchg
decl
push
scas
inc
lret
jge
cmc
xor
add
inc
fildll
pop
and
fidivs
jnp
insl
pusha
jecxz
out
gs
xor
cmp
cmpl
fidivrl
incl
push
cmp
jnp
sbb
dec
lahf
push
leave
orl
insl
mov
cmp
decl
xor
lcall
xchg
inc
jae
jg
mov
xchg
pop
stc
lods
je
jmp
mov
popf
data16
ljmp
lahf
cwtl
push
stos
insl
rclb
lcall
dec
sub
dec
repz
imul
jo
negb
sub
pop
push
push
clc
push
mov
ja
jmp
add
rorl
in
fidivrs
adc
pop
mov
jmp
cltd
mov
jg
mov
rorl
xchg
dec
or
xlat
mov
jmp
cli
pop
test
cli
in
aad
clc
mov
add
inc
cmp
pop
mov
jmp
stos
sbb
dec
cmp
add
leave
repz
jb
mov
loopne
mov
mov
jmp
dec
mov
in
add
push
dec
mov
repnz
mov
lret
lcall
push
pop
mov
inc
nop
inc
andl
xor
cmpl
mov
fsubl
mov
xor
jns
test
sbb
push
scas
pop
lcall
test
mov
decl
sbb
imul
xchg
lods
nop
mov
addr16
mov
das
xor
dec
xchg
das
or
ljmp
in
rcr
hlt
xchg
pop
aas
xor
pop
fwait
lahf
cmpsb
mov
mov
jnp
iret
jno
lcall
decl
sub
ljmp
sbb
add
stc
xor
hlt
pop
push
rorl
decl
dec
les
test
adcl
inc
out
xchg
inc
lea
repz
cmc
add
inc
in
aaa
dec
or
pop
aad
repz
sti
out
pop
aas
aaa
inc
mov
cmp
sar
jmp
rclb
sbbl
adc
enter
push
into
sbb
repz
mov
sub
inc
add
movsl
cmpsb
imul
cmp
loop
sbb
cmp
outsb
lock
mov
pushl
adc
js,pt
cwtl
mov
mov
outsb
mov
dec
mov
adc
cmc
lcall
mov
sub
mov
cmp
daa
cmpsb
cld
cltd
jne
addr16
imul
ljmp
das
or
cltd
popf
add
mov
sub
stc
testb
test
adc
xor
call
filds
push
mov
mov
mov
inc
adc
pop
daa
jno
cwtl
int
push
jnp
incl
leave
xchg
jo
sbb
jle
les
lods
sub
sahf
pop
jge
cmp
and
pop
push
into
mov
aam
jmp
test
inc
adc
pop
movsb
ljmp
sbb
and
jp
jle
adc
mov
mov
dec
sbb
mov
pop
jnp
repz
lea
pushl
push
lret
lds
pop
push
lds
sbb
lds
ror
into
push
sbb
inc
cmp
jg
lcall
add
cmp
cmp
xor
and
test
mov
ljmp
ficoms
mov
sub
adc
hlt
andb
movsl
pushl
cmpsl
or
iret
or
push
fstl
xor
and
jno
xor
incl
scas
cmp
or
jg
cmc
pop
pop
push
xchg
jb
sahf
sbb
adc
outsl
test
incl
xlat
sub
sbb
or
xchg
int3
ret
inc
mov
outsl
dec
xlat
das
xor
dec
xlat
fmull
jns
xchg
imul
lock
dec
daa
jmp
lret
ficoms
cmp
imul
lcall
inc
aaa
jno
mov
pop
js
push
fcomp
push
sbb
xchg
pop
jp
out
daa
pop
stos
sub
and
into
add
fidivrs
ror
xchg
jne
hlt
popa
fs
in
ljmp
sti
fisubrs
test
sub
add
or
leave
call
pushl
xchg
pop
jmp
inc
ds
loope
jecxz
xchg
push
addr16
dec
call
jp
xchg
jae
into
xor
mov
pop
sbb
sbb
jb
sti
aas
push
dec
cmpl
jmp
sub
loop
xorb
xchg
mov
mov
mov
pop
ret
xor
jge
and
add
das
adc
add
xlat
movsb
jmp
fiaddl
push
roll
mov
ljmp
push
ds
jecxz
or
jne
lcall
jl
icebp
test
xorl
lret
pop
ljmp
ret
add
and
stc
sahf
dec
mov
or
int
pop
jmp
decl
faddl
pop
mov
das
mov
cs
sbbl
dec
jg
test
iret
movsl
adc
dec
mov
out
cmp
dec
dec
or
xor
mov
sbb
into
repnz
xor
lcall
les
push
loop
out
fmull
push
push
jb
jb
bnd
incl
imul
test
mov
xchg
ffree
test
mov
mov
xor
push
pop
mulps
hlt
in
jne
fildll
idiv
rorl
xchg
movsl
cld
sahf
cwtl
xchg
and
addb
cmp
ret
lcall
cmp
movsb
or
inc
mov
xor
jecxz
in
dec
cmp
arpl
add
xor
outsb
cltd
and
subb
adc
pop
outsb
inc
lea
cmp
cltd
xchg
decl
jne
pop
or
xchg
pop
pop
adc
adc
jg
cld
add
push
jg
test
ljmp
mov
sub
inc
jbe
sbb
aam
cmp
mov
movsb
lahf
nop
jmp
out
or
sti
arpl
stos
std
cmpsb
jnp
mov
cltd
or
and
ljmp
lcall
cmc
xchg
pop
lret
lahf
jecxz
mov
js
add
adc
mov
loope
aad
mov
pushl
in
push
jge
pushf
cltd
xchg
adc
pop
inc
test
cmp
imul
test
sbb
imul
lcall
or
fimuls
pop
addr16
pop
dec
adc
jae
loop
ja
clc
jmp
sub
bound
rorb
fcompl
push
stos
and
lods
in
cltd
xor
aad
ljmp
inc
insb
mov
and
not
and
sbb
push
or
addr16
outsb
inc
addl
imul
jp
fcmovbe
jp
jge
fs
push
mov
inc
loope
outsl
incl
push
sub
ljmp
sbb
outsl
inc
int
and
xor
mov
pop
mov
call
fcoms
dec
lods
xor
push
mov
ret
cmp
mov
and
jl
or
inc
push
dec
cmpsl
or
or
pop
xchg
jp
mov
fst
xchg
sbb
push
ljmp
jbe
lods
xor
jno
xchg
mov
in
dec
js
insb
sbb
cld
jno
sub
call
aaa
push
or
mov
and
enter
mov
jnp
xorb
cld
dec
incl
popa
fcoml
pushf
fs
jmp
xor
mov
sub
orb
addl
std
iret
xor
jle
mov
rclb
xchg
ss
sti
lods
scas
mov
imul
and
adc
mov
or
mov
jb
ljmp
lret
iret
daa
add
scas
test
mov
popf
jnp
sahf
jb
push
push
mov
enter
lock
dec
pminsw
jne
fdivrs
push
aas
pop
xchg
sub
arpl
out
jl
push
pop
or
test
cltd
inc
mov
xchg
lock
into
mov
mov
ljmp
pop
dec
push
repnz
sub
mov
cli
fisttpl
cmpsl
pop
mov
call
pop
pop
cmpsl
lea
cmp
xchg
xor
add
lods
jbe
lods
adc
cmp
jmp
mulb
fisubs
jo
lods
lods
stos
pusha
arpl
pop
lock
lret
inc
fs
sub
sub
pushl
mov
nop
inc
movl
pop
mov
add
mov
dec
adc
out
pushl
inc
js
mov
icebp
mov
int
or
mov
add
leave
and
mov
sbb
inc
sbb
sbb
or
or
fwait
imul
scas
xchg
inc
movsb
xchg
fs
lods
pop
push
dec
push
sub
push
push
stc
dec
bound
inc
sbb
dec
out
jb
inc
pop
xchg
sub
and
movsl
sarb
add
jae
xlat
cmp
arpl
dec
aas
cmp
or
lds
push
lahf
lods
aas
push
rcrl
pop
dec
cmp
and
cmp
ljmp
mov
xchg
subb
mov
pop
stos
std
mov
in
push
sub
dec
adc
lock
pushl
loopne
fimuls
adc
pop
push
add
pop
sbb
cmp
ljmp
loopne
add
ja
loop
pusha
lods
rcr
cmp
push
dec
nop
inc
pop
cmc
and
jae
clc
xchg
pop
cmpl
cld
fcoml
lock
jmp
fldln2
pusha
sbb
lea
popa
adc
xor
mov
inc
cmc
insl
aaa
addr16
pop
stc
rcrl
jae
push
js
cli
pusha
inc
aam
and
or
stos
push
jns
inc
pop
xor
popf
std
inc
push
iret
adc
sbb
loope
insl
inc
rcll
xor
lcall
mov
movsl
aam
movsl
imul
mov
mov
into
icebp
inc
lahf
fistl
jmp
pop
std
pusha
in
icebp
into
and
adc
jno
push
enter
into
or
sbb
jmp
imul
inc
mov
call
inc
pop
pusha
cwtl
lahf
out
stos
ret
mov
decl
xor
dec
scas
add
fistpll
jb
cmp
lock
mov
push
dec
nop
mov
mov
pop
xor
mov
jb
lods
xchg
pop
es
pop
stc
inc
roll
sbb
push
push
iret
jo
jo
jmp
fadd
sub
cmp
out
rol
inc
adc
pop
hlt
fstpl
xor
pop
cmp
xchg
popf
inc
cli
jo
push
adc
nop
push
xchg
jmp
xchg
fisubs
cmp
sbb
sbb
mov
mov
test
fstl
mov
incl
add
mov
jle
inc
push
xchg
sub
sub
sbb
mov
repnz
or
decl
jbe
hlt
addb
loop
and
popf
ret
arpl
inc
mov
jp
cmp
in
orb
imul
xchg
xor
sbb
cmp
mov
call
xlat
adc
mov
sbb
dec
test
add
jae
mov
dec
cmp
hlt
push
test
adc
mov
aaa
jp
fistps
outsl
sub
incl
stos
inc
hlt
lds
insl
les
into
push
shrl
call
ja
mov
cli
ljmp
leave
pop
js
jbe
mov
ret
rorl
lea
mov
jb
out
jae
pushl
fwait
ret
dec
mov
addr16
in
mov
inc
movsb
out
repnz
mov
pop
sub
pushl
push
xor
lods
and
stc
dec
mov
std
add
push
pushl
or
mov
loope
mov
sahf
adc
xchg
sbbb
and
sub
ljmp
sbb
lret
dec
xchg
push
mov
outsl
filds
jmp
sub
push
lcall
les
mov
orb
cmpsb
mov
test
inc
ret
push
or
out
cmp
fwait
add
lcall
int3
setno
movsb
sbb
adc
aad
dec
les
jns
out
das
stos
push
les
lcall
xchg
int
xchg
scas
fdivrl
sbb
mov
insb
repnz
add
decl
popa
fimuls
inc
bound
mov
xor
mov
es
dec
adcb
movsb
in
lods
iret
mov
push
lcall
mov
stos
dec
jb
mov
cmp
loope
cmp
push
decl
xchg
push
rcr
add
ds
adc
hlt
sbb
std
dec
lods
fisubs
loop
jo
decl
or
mov
sub
mov
rcrb
xchg
pop
adc
pop
fwait
inc
inc
push
insl
ljmp
jmp
mov
mov
addr16
repz
das
lds
lcall
cltd
lds
mov
test
cmp
add
ss
scas
fidivl
je
fstl
mov
decl
out
mov
adc
pop
inc
xor
lods
cmp
push
add
es
jmp
pop
das
sbb
mov
in
pop
mov
movsl
xchg
mov
xchg
fs
fsubp
cmpb
jmp
pusha
mov
inc
lcall
mov
scas
mov
shll
lcall
or
add
mov
xor
shl
dec
cmp
pop
and
and
clc
outsb
enter
call
jp
es
push
and
stos
push
cwtl
push
outsl
jns
mov
cmp
imul
pushl
in
add
in
xchg
cmp
jecxz
cmp
test
mov
ret
xchg
cmp
pop
jge
dec
mov
pushw
leave
cmp
sbb
fsubp
fcompl
scas
sbb
jl
cmp
lret
adc
inc
adc
mov
addr16
loopne
xchg
lcall
mov
aaa
loope
pop
js
hlt
lds
popa
out
jg
inc
fcomp
xlat
cmpsb
lcall
incl
int
lcall
sub
adc
pop
cmpsb
cs
push
sub
pop
jl
sar
pushl
add
and
mov
ja
and
inc
push
mov
mov
fnstsw
aad
jg
pushl
lret
xor
adc
stc
cmp
inc
movsl
or
roll
xchg
dec
fcmovnbe
sbb
clc
arpl
test
mov
xor
push
cli
dec
nop
jnp
imul
jo
mov
in
insl
cmp
cmp
push
or
jae
outsl
pop
pop
xchg
sbb
fcomp
or
pop
mov
dec
sbb
arpl
dec
mov
xchg
sti
addr16
sub
dec
mov
jo
repz
or
sar
call
iret
xor
pop
inc
dec
inc
fstl
sbb
mov
push
fstps
pop
fcos
jg
cmpsb
cld
cmpsl
imul
std
stos
push
repz
repz
ljmp
mov
andl
fdivrl
movsb
adc
sbb
arpl
cmp
inc
xor
cmp
sbb
popaw
and
xchg
pop
fstl
or
das
imul
lcall
stos
iret
or
push
pop
sub
out
push
pop
popa
and
mov
cmp
xchg
bnd
pushl
sti
subb
das
sti
adc
sbb
and
call
dec
ud0
jns
push
add
cmc
rol
outsl
ds
les
xchg
pushf
dec
pushf
lahf
enter
aaa
data16
mov
lcall
xor
lahf
and
jl
push
aam
push
adc
lcall
fwait
sbb
mov
jmp
inc
add
xorb
add
andb
in
lods
and
sti
mov
inc
jnp
ret
lcall
lret
adc
sbb
xor
inc
mov
pop
dec
xor
push
adc
decl
or
sub
out
stc
scas
lods
dec
and
sub
adc
or
call
and
xchg
mov
call
enter
add
data16
sub
in
push
push
inc
jmp
dec
adc
and
xor
dec
sub
aad
loopne
jb
ljmp
fwait
je
cmp
hlt
cld
insb
or
aam
push
mov
jp
sti
sbb
insl
xchg
es
aam
pushl
pop
mov
stos
popf
mov
out
push
push
xchg
xchg
sti
inc
call
xchg
sar
pushl
loope
lret
lea
sbb
hlt
iret
test
ja
push
dec
jl
xchg
je
icebp
outsb
pushl
lds
data16
push
adc
adc
pop
dec
cmp
imul
test
fcomps
mov
popf
fwait
and
int3
pop
cli
jb
fwait
mov
decl
push
cmp
adc
add
pop
mov
mov
popl
in
out
aaa
mov
mov
sub
jl
mov
cmp
incb
adc
mov
paddb
lret
gs
lcall
mov
call
jnp
mov
push
in
bound
sub
lock
cmp
mov
gs
adc
pop
pop
jnp
scas
cmp
dec
adc
daa
xor
imull
or
or
inc
sub
stc
and
stos
mov
jnp
jmp
rol
and
pushl
lret
out
mov
xchg
lcall
stos
jno
test
bndstx
call
xor
pop
aaa
rcrb
dec
shrb
mov
nop
test
cmc
or
out
sti
nop
movsl
pop
sub
mov
push
sub
sbb
cmp
pop
lcall
jmp
dec
push
xchg
push
js
mov
cltd
scas
adc
mov
loop
incl
xor
dec
inc
icebp
mov
dec
outsl
aam
and
into
and
sub
out
les
in
fwait
xor
lods
xchg
cmp
jg
xor
scas
pop
int3
ljmp
bnd
rcll
clc
cmp
inc
and
fisttpll
mov
incl
cmp
cmpsl
jbe
mov
jge
mov
sub
push
mov
push
push
cli
xorl
add
add
ljmp
add
sbb
or
and
fdivrs
jl
clc
pop
es
inc
mov
ljmp
fnstcw
in
inc
mov
out
cvtpi2ps
jge
sbb
imul
push
adc
ljmp
xlat
pop
test
gs
out
jp
cli
jg
aam
cmpsl
out
mov
or
incl
adc
jne
cmp
push
sub
dec
push
adc
push
movsl
pop
sbb
call
daa
in
hlt
shrl
cmp
int
sti
jmp
dec
outsb
movsl
ret
mov
inc
cltd
sub
call
push
mov
push
fistpll
push
mov
inc
repnz
pop
stos
in
push
xlat
popa
ljmp
and
jbe
pushl
js
pop
stc
push
mov
sub
xchg
pop
insl
rolb
mov
mov
push
xor
xor
pop
cld
bound
and
fs
jae
ds
ljmp
aas
les
mov
je
push
sbb
fistpll
test
fs
cltd
add
jmp
aam
mov
xor
insb
jmp
in
or
lods
xchg
ret
lods
out
fmull
in
clc
push
mov
or
push
cmpsb
cmp
dec
ret
xchg
lods
inc
sbbb
jns
pop
cmp
iret
xor
ljmp
add
test
mov
xchg
xor
pushl
rcr
es
jns
fidivs
mov
xchg
ds
jle
mov
cs
mov
dec
incl
bound
bound
addr16
dec
shlb
cltd
popf
imul
ljmp
das
les
lahf
fmul
cmp
dec
test
jge
ss
psubq
sub
sbb
pop
jne
push
inc
popf
movsb
test
je
sub
cmp
push
inc
shlb
out
loop
testb
adc
pushl
shrb
test
mov
aaa
jle
sti
std
dec
sbb
pop
lods
ret
cmp
incl
xchg
leave
les
mov
ja
fidivl
xchg
sub
pushf
incl
adc
mov
or
lods
fisubs
in
mov
mov
cltd
or
sbb
ljmp
cltd
mov
adc
sub
stc
std
fimull
in
adc
rclb
fsubs
inc
add
in
es
dec
mov
xchg
jnp
jae
dec
je
dec
test
push
pop
add
push
push
dec
sahf
addl
enter
push
xlat
add
das
clc
dec
mov
mov
out
xchg
out
lods
mov
aaa
les
out
cmc
add
mov
leave
xchg
js
inc
sub
dec
lock
sahf
mov
sub
cmp
jmp
inc
ret
xor
aad
push
shl
adc
mov
dec
out
xchg
fs
or
jo
lea
cmpl
dec
stos
mov
movsl
sbb
cmp
ljmp
mov
aas
mov
pop
loop
sub
adc
dec
or
dec
xor
cwtl
jge
scas
cmp
sahf
inc
mov
in
pop
call
aad
xchg
icebp
and
jg
in
test
fucomip
dec
adc
jns
jl
outsl
xchg
test
mov
dec
push
cmp
xchg
dec
das
ds
out
call
lods
cmpsl
mov
xchg
sbb
xor
sub
push
jo
in
mulb
jbe
pop
push
push
sbb
incl
xor
rclb
jp
test
mov
lods
ja
mov
popa
pop
sub
mov
ljmp
lods
xlat
pushf
jnp
loop
fbld
out
xorl
sub
iret
xchg
jle
lods
iret
and
jmp
pop
jmp
sub
dec
adc
and
and
dec
test
xchg
das
cmc
dec
inc
mov
jg
pushl
adc
and
fidivl
xchg
push
adcb
sub
xchg
out
sbb
xchg
outsb
call
mov
adc
jmp
pop
push
xlat
pop
lret
jns
scas
sub
shll
push
mov
adc
xlat
mov
incl
addr16
and
iret
ffree
fsub
lods
mov
sarl
insb
jbe
ficompl
pop
fdivr
lcall
clc
scas
call
dec
lods
mov
dec
lcall
and
jp
mov
mov
scas
rol
clc
stc
ret
imul
add
cmp
inc
push
jb
mov
push
pop
adc
or
call
bound
push
mov
fs
imul
sahf
rcrb
xchg
ljmp
jge
adc
jmp
andb
pop
inc
dec
sbbb
adc
xchg
jns
call
mov
popa
mov
xchg
lahf
pop
pop
sbbb
xor
jo
and
out
push
and
ret
mov
incl
pop
inc
pop
pusha
jmp
inc
pop
stos
add
lahf
xchg
pop
cltd
xchg
jmp
sub
fsubrl
lret
mov
movsl
xchg
push
fwait
lcall
pop
mov
aad
cmp
ret
call
insl
int3
sbb
xchg
add
ret
repz
daa
inc
jne
sbb
mov
ljmp
xchg
cld
ret
xlat
dec
in
shlb
xchg
push
mov
cwtl
pop
sbb
jg
stos
jb
incl
sub
xchg
jp
hlt
push
mov
adc
nop
inc
jo
pop
pop
test
dec
sbb
repz
mov
pop
sbb
icebp
fnstsw
cmpsb
sbb
cmp
scas
and
test
sarl
dec
dec
das
inc
fnstenv
lahf
adc
fldcw
xchg
sub
pop
jae
call
and
mov
sub
dec
fidivrl
jmp
pop
call
es
mov
mov
clc
iret
in
push
pop
ljmp
repz
arpl
ljmp
repnz
pop
cld
ljmp
std
punpcklwd
ffreep
sbb
mov
pusha
in
lods
nop
adc
incl
mov
addb
dec
adc
cmp
and
sub
iret
rcrl
dec
insl
xchg
gs
int
jnp
add
inc
jp
xor
pop
sti
dec
dec
iret
push
push
pop
inc
int
sub
call
int3
inc
mov
xchg
inc
adc
cs
push
mov
loopne
in
mov
xchg
inc
xor
push
xchg
cld
sbb
psubsb
out
ficoml
mov
xchg
mov
jne
stos
cmp
mov
repnz
mov
ds
jl
mull
xchg
decl
popf
test
outsl
push
fadds
ljmp
sub
adc
lods
xor
mov
push
jmp
inc
pop
int3
adc
cmp
push
pop
inc
sub
or
lods
aas
sbb
jmp
push
shlb
fistps
cmp
jmp
sbb
sbb
dec
outsb
xchg
pop
add
insl
sbb
mov
adc
in
rcrl
add
cmc
gs
js
or
out
dec
notl
lcall
push
push
scas
stos
xchg
mov
stc
out
ja
sti
xchg
insl
test
out
das
data16
gs
lcall
out
jmp
mov
inc
movsl
dec
mov
add
jecxz
pusha
xlat
aad
shrb
jmp
lcall
jb
pop
inc
adc
pop
mov
rolb
jle
and
mov
shll
std
xor
sub
jmp
dec
stos
daa
push
leave
add
inc
push
dec
rcrl
xchg
fidivs
sti
je
sbb
push
adc
ljmp
ja
mov
inc
cli
mov
or
stos
loopne
jb
repnz
jae
call
nop
arpl
jmp
paddsb
lds
sub
jmp
jnp
jmp
mov
clc
in
cli
mov
cmp
cltd
std
push
sti
pop
pop
adc
lret
test
xor
dec
pushf
lcall
or
xlat
push
push
mov
sahf
rcrl
mov
leave
movsb
scas
inc
gs
mov
pusha
xchg
call
fdivl
clc
sbb
xor
jae
leave
add
cmp
pop
pop
call
cmc
jl
jo
push
les
adc
ret
xchg
inc
sbb
sahf
repnz
les
shlb
inc
les
push
insl
dec
sub
rol
cmp
sbb
cmpsb
jmp
lcall
enter
aam
jl
xor
jp
adc
fsubr
stc
jmp
icebp
jns
cmp
repnz
ret
inc
sub
ret
mul
cld
sub
les
cmp
xchg
pusha
push
add
leave
pop
inc
mov
cld
inc
cmpsl
fst
push
cli
scas
mov
cmp
lcall
inc
out
push
dec
push
or
jo
mov
arpl
cld
sbb
fimuls
aad
cltd
jnp
int
ljmp
cmp
rorl
adc
cmp
xchg
shl
pop
mov
pop
fcmovu
fcoml
dec
jb
incl
jecxz
lods
jecxz
jns
mov
mov
test
add
out
incl
cmpsl
sahf
shll
and
nop
push
cwtl
xchg
add
cmp
loop
add
cmp
jmp
dec
loope
aam
scas
test
push
cvtps2pd
imul
mov
hlt
cmp
add
inc
sbb
call
fcmovnu
sbb
sbb
and
mov
lea
ret
jno
dec
int
push
movsb
pop
push
aaa
mov
int
das
mov
jg
lds
inc
and
push
ljmp
into
cltd
xor
aaa
cs
fs
lock
fdivp
jno
inc
pop
flds
push
idiv
enter
push
inc
dec
xchg
data16
lods
rorl
daa
inc
nop
cmp
repnz
xchg
push
fsubl
cmpsb
lock
or
inc
adc
std
clc
jo
out
popa
adc
inc
lods
or
pop
xor
ljmp
ud2
iret
jmp
pop
xchg
xchg
pushf
or
add
cmpsl
sbb
dec
idivl
cmp
in
sbb
stc
das
inc
push
adc
repnz
xchg
xor
movsb
inc
in
cmc
or
jp
gs
mulb
shl
dec
stos
mov
decl
or
imul
test
mov
jecxz
mov
mov
sbb
jmp
dec
loopne
fisubs
movsl
ljmp
dec
bound
push
pushf
lidtl
jmp
int3
daa
dec
repz
inc
pop
movsl
gs
rolb
xchg
in
cmp
int
mov
ljmp
mov
fwait
outsl
xor
inc
inc
popf
loopne
xchg
pop
std
pop
mov
cli
rorb
mov
loopne
lock
pop
adc
inc
add
out
adc
or
mov
jbe
loopne
push
incl
popf
dec
xchg
mov
insb
out
mov
in
jmp
push
test
mov
incl
cmp
pusha
sub
mov
mov
pop
cmp
call
inc
std
adc
push
or
in
sbb
jmp
xlat
negb
adc
aaa
cmpsb
incl
cltd
dec
fs
adc
imul
jg
mov
jp
test
xchg
mov
popa
jmp
xchg
mov
xor
cmc
jae
mov
movsl
or
or
jmp
pushf
mov
push
mov
sbb
jno
hlt
cli
sub
xor
or
or
std
pop
out
and
push
and
or
fcmovne
cmp
loop
jmp
xor
call
pop
push
sub
fcomi
sub
adc
push
xor
call
and
push
xor
push
incl
hlt
lods
jl
mov
pushf
outsl
testl
scas
xchg
ficompl
lcall
call
xchg
xchg
mov
movsb
addr16
adc
outsl
ljmp
repnz
dec
mov
aam
cmc
push
testl
pop
push
aad
imul
inc
pop
ljmp
aad
pop
dec
out
mov
cmp
fildll
outsb
xor
loopne
lret
loope
loope
lcall
jb
std
mov
or
adc
push
dec
andl
lahf
xor
mov
call
xchg
push
add
lahf
add
fsubp
cwtl
call
lcall
aam
push
jae
mov
nop
sub
cmp
loopne
push
mov
add
jb
inc
aad
call
outsl
aad
mov
cmc
lret
enter
mov
nop
cmpsl
stos
in
int
sbb
dec
xchg
aad
idiv
decl
sub
xor
sbb
sub
cmp
dec
sub
xchg
push
sub
add
mov
fwait
jmp
or
cmp
or
push
fsubrs
lcall
and
add
fstps
imul
add
inc
lds
push
incl
dec
notl
and
lret
jne
or
xchg
insl
mov
lret
xorl
rcrb
clc
pushf
ljmp
xchg
filds
mov
dec
aam
add
and
add
jae
test
dec
jmp
add
fisubl
mov
stos
shl
notb
test
dec
and
cmp
push
mov
push
sbb
mov
cmpb
pushl
pop
dec
sub
sub
push
ljmp
mov
mov
les
xchg
inc
cs
and
sbb
add
jmp
fwait
mov
inc
call
inc
outsb
imul
jge
and
pop
fnstenv
mov
decl
outsb
icebp
loopne
or
fdivs
push
xchg
mov
iret
jp
in
fwait
fwait
aam
fiadds
push
divb
inc
push
lret
inc
or
incl
sbbb
cli
sub
adc
pop
cli
add
mov
sub
lcall
mov
cwtl
dec
sub
sbb
add
stc
mov
jg
xchg
push
cmpsl
cmp
xorl
leave
je
jae
cmp
mov
sub
mov
fwait
out
sar
je
call
pop
ret
push
cmpsb
orb
hlt
repnz
or
shll
mov
ljmp
add
adc
and
cmc
dec
lock
mov
mov
lods
out
call
cmpsl
das
loope
dec
shl
push
imul
adc
cmp
lcall
xor
and
jmp
jmp
enter
and
ret
adc
out
pop
jmp
add
pop
xor
mov
inc
adc
xchg
mov
rclb
push
in
test
cli
xorb
or
lds
mov
push
adc
aaa
popa
xor
and
ja
pushl
inc
shll
ret
xchg
mov
test
mov
daa
jne
push
sub
leave
icebp
pop
incl
xchg
jle
dec
out
aaa
or
or
lahf
sbb
enter
mov
cmpsb
out
std
add
inc
inc
pop
movsl
sbb
xor
andl
iret
inc
test
sub
add
sub
addr16
mov
push
lahf
movsl
ss
scas
or
movsb
rorb
lcall
scas
iret
call
push
leave
pop
pop
fs
sahf
das
dec
ret
jl
int3
es
jo
dec
jecxz
daa
frstor
xchg
dec
and
ds
jg
xor
inc
jb
repnz
jecxz
imul
push
pusha
push
pop
mov
sub
call
jp
dec
inc
sub
out
sbb
in
cmpsb
les
sbb
aaa
or
addr16
pop
mov
mov
subb
jge
cmp
jle
dec
mov
mov
jge
inc
pop
popf
xchg
call
add
add
mul
mov
jg
xor
iret
dec
xor
push
adc
mov
dec
out
add
cmp
pop
dec
aad
cmpsb
mov
lret
jne
fisubs
adc
push
mov
or
sbb
ljmp
jnp
or
sbb
push
mov
adc
call
lods
outsb
in
out
pop
inc
jb
nop
or
cmp
mov
mov
call
inc
lret
inc
mov
mov
imul
cs
sub
adc
or
shlb
out
mov
xor
leave
cmpsl
pop
out
push
imul
incl
fwait
sar
stc
outsl
popf
scas
out
fcmovu
push
je
sub
push
sub
out
data16
ja
data16
ljmp
mov
xor
adc
inc
push
cmpsb
lock
sbb
clc
sbb
in
dec
mov
outsl
mov
rcrl
stc
lock
fimull
xchg
lcall
dec
and
push
pop
fcoms
lret
in
jg
mov
icebp
xchg
mov
lods
ljmp
pop
js
dec
enter
xchg
cmp
pop
repnz
mov
mov
in
mov
ljmp
stos
push
out
imul
cmp
test
js
push
xchg
cmp
inc
ljmp
mov
fwait
dec
jno
scas
pop
push
jg
inc
push
push
sbb
divb
push
push
push
call
and
xor
inc
xor
bound
xchg
mov
add
cmp
jmp
les
int3
jmp
push
loopne
es
aad
mov
or
call
inc
pop
movsl
xlat
mov
sub
ret
arpl
addb
or
fisubl
inc
hlt
pushl
sub
aas
stos
lds
sbb
imul
lock
loope
cmpl
mov
push
outsb
jmp
cmp
fildll
push
call
gs
pop
mov
jecxz
mov
ljmp
notl
push
push
jnp
push
sahf
jge
mov
jg
aad
insl
stos
lret
mov
or
imul
lgs
cltd
push
stc
cmc
pop
xor
incl
data16
ss
inc
mov
add
hlt
shl
roll
jmp
pushl
enter
divb
addr16
lock
jg
jo
outsb
sbb
cli
ret
stos
jb
push
push
sub
movsl
xlat
push
mov
inc
mov
xchg
pop
fsts
add
push
jnp
sahf
and
lcall
dec
jl
ret
pop
js
xchg
push
lret
mov
fwait
adc
cmp
push
test
mov
pop
negl
sub
cmp
movsb
sbb
pop
and
dec
add
rcrb
dec
adc
inc
aas
xor
sti
xor
mov
push
sbb
pushl
or
cmp
sbb
cmp
daa
pusha
pop
aas
popa
ret
inc
jp
test
popf
pop
call
push
jns
pop
sbb
xchg
hlt
dec
cs
or
movsb
jle
pop
sub
call
cmp
cltd
in
pop
xor
imul
mov
imull
imul
xor
inc
bnd
nop
ror
mov
mov
mov
xor
ds
clc
imul
into
xchg
out
dec
aam
push
lods
ja
push
inc
fdivrl
sub
subl
int
pushl
xlat
fs
testl
aam
mov
inc
movsb
pop
cli
jmp
jmp
sub
push
cmpsl
ret
mov
push
adcb
cltd
dec
jp
gs
insb
add
pushl
js
and
adc
push
pop
js
aaa
je
mov
test
sub
jmp
dec
cld
popa
dec
jg
xor
adc
pop
mov
cld
adc
mov
dec
pop
xchg
insl
xchg
and
jecxz
ljmp
mov
xchg
out
mov
cmp
fstl
aaa
stos
arpl
dec
pop
jmp
mov
mov
subl
inc
bndldx
fstpl
xchg
call
jg
push
pop
mov
pop
pop
and
push
xor
lods
add
stc
pusha
sahf
dec
xor
into
cld
inc
inc
pop
mov
std
enter
push
xchg
icebp
incl
jne
inc
out
mov
cltd
mov
cmp
sbb
js
or
test
dec
ret
int
cmpsb
repz
fmul
jp
lods
cmp
mov
cmp
mov
fdivl
ljmp
shll
jg
scas
cmp
adc
cmp
in
cmp
jne
sub
fdivl
pop
leave
ds
aam
cmc
cmp
or
cwtl
idiv
push
pop
addr16
lock
xchg
out
aam
pop
insb
fmulp
mov
pop
xor
add
js
sti
jmp
movsl
stc
cli
adc
sbb
xchg
testb
std
in
jl
push
into
add
or
addr16
aaa
call
mov
out
sbb
mov
cmp
dec
jl,pn
jge
movsb
xchg
mov
xchg
cmp
jmp
out
mov
jle
xchg
xor
inc
lods
call
sbb
mov
cmp
jmp
lret
xor
xchg
data16
inc
jb
loope
orb
dec
pop
sbb
dec
adc
push
shll
pop
push
ljmp
call
xchg
and
lcall
xor
popf
rclb
outsl
nop
fisubrs
cmp
lret
ficoml
or
cmp
push
movsl
dec
sub
pop
mov
clc
xor
push
movb
dec
jl
or
sarl
xor
dec
sahf
cmc
aam
jg
pushl
xchg
sbb
js
xorl
adc
ljmp
push
sub
inc
add
stos
popl
clc
dec
dec
int
jb
mov
mov
jnp
movsl
test
sti
lods
jmp
icebp
jle
popa
fistps
push
cmp
in
sbb
bound
add
lcall
cltd
mov
in
stos
scas
shrl
outsb
dec
int3
cmp
pop
and
jo
in
inc
sbb
inc
push
lds
cmpsb
dec
mov
ret
in
push
cmpsb
call
adc
adc
mov
lret
adc
cmpsl
sub
add
das
incl
adc
add
fadd
jge
xchg
sbb
adc
leave
sbb
out
lahf
jns
bound
push
fidivl
jns
pusha
int
rcpps
out
or
cmp
jmp
stos
mov
and
scas
jl
ss
scas
dec
shrb
push
cwtl
pusha
scas
mov
jo
sub
je
aaa
mov
dec
out
rcrl
shl
dec
dec
inc
push
and
repz
jmp
cmc
cld
mov
dec
push
enter
sbb
call
add
adc
sahf
icebp
jmp
in
adc
mov
jno
xor
repz
dec
les
stos
ja
cltd
popf
lcall
cld
cmp
aaa
inc
je
aas
and
aaa
xor
test
cvtps2pi
rcll
rorb
mov
aam
imul
aam
cld
shll
data16
adc
loop
ret
xchg
xor
pushl
iret
scas
inc
mov
lret
iret
fwait
push
loope
popa
jns
or
jle
add
sti
data16
rcrb
jge
test
sahf
inc
jno
and
sub
aad
jmp
leave
rcrb
movsl
cmpsl
mov
adc
pop
jl
rorb
mov
adc
mov
aaa
and
test
adc
sbb
pop
xchg
mov
mov
or
sbb
jmp
push
cmp
and
or
loopne
jge
data16
cmp
pop
lcall
rcrb
pop
ja
jge
insb
and
std
test
cmp
shll
cmp
incl
xchg
popa
mov
mov
test
cmp
mov
sub
push
dec
pushl
test
dec
and
js
aad
pusha
movsl
xchg
sti
test
push
scas
dec
test
mov
lcall
in
sub
inc
test
xchg
jbe
lods
jmp
ja,pt
xchg
dec
mov
aad
incl
daa
adc
mov
push
pusha
mov
in
das
gs
mov
push
test
lcall
jmp
lea
ljmp
jl
repz
ds
std
and
jp
xlat
shrb
orb
xor
loope
fmul
repz
fldcw
or
ljmp
imul
nop
inc
je
pop
aaa
sbb
push
or
out
popf
push
mov
cmp
clc
inc
stos
loop
inc
lods
pop
inc
pop
jge
mov
inc
or
mov
inc
and
mov
cmp
lcall
or
out
enter
mov
push
push
cltd
cmp
rcrl
rcl
incl
mov
pop
mov
lahf
mov
cli
add
xor
sub
fwait
adc
call
mov
sbb
into
imul
out
ss
daa
divb
adc
and
mov
decl
adc
sub
cld
insl
lcall
mov
xor
repnz
adc
lcall
mov
xchg
jbe
addr16
lahf
loop
lahf
xchg
lcall
mov
lcall
pop
mov
por
inc
in
adc
rorb
inc
les
decl
outsl
or
ror
and
jge
mov
or
in
inc
fcompl
pushl
sbb
jbe
stos
push
ljmp
aas
popa
or
fnsave
mov
pusha
shrb
dec
std
pushf
push
jae
lcall
mov
mov
xchg
cmp
js
xchg
fwait
popa
xchg
adc
adc
outsl
movsb
jae
push
cs
sahf
ret
incl
jmp
and
in
adc
loopne
cwtl
mov
pop
or
xchg
lods
push
rolb
or
ss
inc
mov
mov
std
push
stos
orl
cmp
imul
jmp
mov
cs
and
add
jmp
push
mov
dec
dec
and
xor
popf
rorl
pop
je
add
jmp
ljmp
std
mov
int
sub
andb
aaa
sbb
ljmp
push
xchg
push
add
lcall
adc
or
adc
jo
sahf
lods
dec
sub
icebp
lock
stos
or
call
fildl
mov
shlb
frstor
popf
stos
sbb
mov
cs
mov
push
jnp
in
dec
fldenv
es
pop
mov
lea
movdqa
bnd
test
ret
ljmp
in
out
dec
push
jmp
dec
lods
push
ja
out
sbb
test
test
ljmp
pop
mov
dec
ja
xchg
hlt
pop
mov
jb
push
or
aaa
and
mov
dec
mov
lret
mov
pushf
xchg
loopne
xchg
rcll
inc
push
cmpsb
mov
int
les
lcall
inc
dec
add
test
push
xor
shlb
inc
xchg
repnz
shl
jno
adcb
mov
and
xor
xor
aas
leave
stos
jp
add
scas
push
pushf
sbb
rcl
cli
int3
ljmp
mov
aaa
in
decb
in
push
mov
xchg
roll
loop
xchg
xchg
jle
mov
jmp
add
test
pop
sub
scas
int3
clc
je
push
pop
push
and
pop
ret
decl
nop
adc
pop
sub
push
cli
cs
test
lds
or
lcall
or
pushf
mov
cmp
add
jb
inc
sbb
cmp
inc
icebp
adc
popa
adc
pusha
into
add
push
repnz
lahf
das
addr16
cmp
nop
fs
inc
daa
pop
ljmp
in
mov
or
dec
rclb
push
and
call
cmpsl
mov
enter
xor
stos
negb
faddp
call
pushl
mov
mov
jae
stos
pop
mov
add
dec
mov
cmp
call
lret
std
cli
or
mov
cmp
cmp
push
lcall
lcall
mov
lock
mov
jns
mov
adcb
jmp
or
in
add
jb
cmp
jnp
adc
imul
jae
sbb
hlt
mov
shlb
push
sub
loopne
mov
jb,pt
inc
xor
dec
fcos
call
pop
mov
add
stos
pop
rorb
scas
mov
test
decb
and
call
stos
faddl
inc
aam
jmp
out
sub
jg
rclb
sbb
incl
or
insl
in
sbb
mov
outsl
sbb
jno
out
inc
mov
incl
dec
clc
mov
stos
aas
shll
int3
sbb
push
cld
or
lock
cmpsb
lods
ja
jmp
mov
int
nop
xchg
fiaddl
add
mov
fisttpl
js
fwait
jno
and
call
push
sub
pop
dec
dec
sbb
pop
sub
xchg
push
inc
sub
insb
sbb
add
xchg
jmp
ds
pushf
sub
cmp
add
jl
leave
inc
sarb
and
shrb
mull
hlt
out
call
mov
inc
iret
and
lret
ljmp
rcrb
and
inc
icebp
ljmp
das
ficompl
adc
jbe
dec
add
fdivs
neg
test
ljmp
push
cmc
pop
insl
xchg
dec
std
cltd
mov
jecxz
inc
ret
and
ljmp
cwtl
cwtl
idivl
lcall
mov
add
cmp
pop
fbld
or
mov
decl
jae
jnp
ss
add
out
pop
mov
xor
jno
pop
rcll
lret
jle
scas
mov
in
sbb
lcall
mov
dec
adc
push
ficoml
fcom
sub
loopne
cmp
incl
cmpl
testb
hlt
inc
pop
call
mov
into
pop
dec
decl
hlt
cwtl
sbb
mov
jae
addr16
jge
lret
sbb
outsl
lock
or
jg
push
pop
jge
mov
mov
ss
pop
mov
jge
stc
jp
arpl
xor
decl
clc
add
jmp
cwtl
mov
loopne
addl
pop
sub
cld
arpl
push
dec
sahf
xchg
lods
jns
call
loop
xchg
out
pusha
arpl
cmp
xor
mov
jecxz
in
sarb
aam
incl
jmp
pop
rclb
in
push
push
pop
in
mov
mov
inc
imul
pop
notl
jp
sbb
out
xchg
cmp
mov
dec
test
adc
aad
fdivr
lcall
or
sbb
pop
test
or
lret
mov
mov
es
fcos
decl
pop
mov
ret
lahf
out
mov
push
scas
js
pop
addr16
call
dec
ljmp
out
push
jp
movsb
add
nop
mov
into
sbb
or
call
sub
imul
insl
pusha
loop
lret
lock
inc
pop
movsl
and
loope
mov
aaa
push
mov
xor
pop
cmp
sbb
mov
fnsetpm(287
and
pop
push
add
decl
mov
mov
leave
pushf
jb
fs
dec
pushf
xorb
jl
push
test
incl
jae
repz
jbe
add
adc
or
sbb
cmp
repz
xchg
or
mov
xchg
pop
outsb
pop
clc
mov
xor
rcrb
sti
lcall
and
test
or
mov
lret
cwtl
movsl
mov
xor
call
jb
pop
cltd
cs
adc
iret
jp
adc
pop
cwtl
mov
call
test
or
incl
jae
mov
lods
dec
mov
stc
pop
pop
outsl
xor
cmp
mov
push
sbb
dec
imul
mov
lods
inc
cltd
mov
and
aas
push
dec
popa
cwtl
arpl
sahf
fistps
loope,pt
jno
ljmp
dec
xor
movsl
aam
push
enter
iret
aaa
mov
call
mov
ja
scas
shrb
push
or
xchg
pop
mov
sbb
pushl
jle
add
add
xchg
or
andb
bound
mov
mov
pop
push
cwtl
insb
cmp
pushl
xor
lcall
fcoms
jp
pop
data16
push
push
ja
lcall
fcmovnbe
nop
adc
jl
js
sti
je
cmpsl
je
pop
or
outsl
mov
test
incl
xor
mov
in
mov
xchg
jmp
addl
or
test
mov
push
or
lcall
sub
incb
aam
sub
or
loopne
insl
mov
pop
fwait
pop
push
cmp
lods
aad
sbb
cmp
jge
fwait
dec
gs
jmp
jl
jne
jecxz
pop
and
je
ljmp
jmp
addr16
xchg
mov
ljmp
filds
adc
bound
lret
ret
movsb
push
das
xchg
insb
call
sbb
and
lret
lods
adc
inc
addb
dec
iret
in
xchg
push
std
xor
outsl
jae
imul
imul
add
mov
mov
iret
call
arpl
inc
lds
ljmp
ds
xchg
dec
push
add
insb
cltd
pop
incl
sub
ret
xchg
and
in
out
lret
push
addr16
mov
inc
outsb
mov
decl
pushf
mov
adc
add
cmp
outsl
lret
xor
pop
lods
aaa
jmp
aam
fs
lcall
scas
adc
lret
sbb
icebp
ss
or
push
mov
out
dec
mov
test
pushl
push
lods
mov
jnp
adc
aaa
enter
stc
lea
lahf
xchg
loopne
inc
xchg
test
aad
ss
incl
push
sub
pop
fadds
in
roll
aad
sub
pop
std
mov
inc
mov
add
jge
decl
mov
sbb
cmpsb
cmp
jmp
xor
mov
jg
incl
xor
and
or
enter
adc
and
mov
popf
or
ljmp
rclb
fadd
mov
fsubl
ss
jns
add
dec
add
pushl
clc
cld
cltd
leave
popf
std
push
outsl
mov
aaa
les
and
int
mov
cmovno
pop
cs
or
adc
mov
mov
mov
pushl
dec
push
lret
js
jmp
mov
mov
cmp
cmc
sub
xchg
pop
adc
in
adcb
pop
xor
jbe
subl
and
out
pop
testl
call
push
pop
test
lcall
inc
pop
loope
mov
adc
pop
xchg
cld
jmp
xor
adc
iret
test
rcrl
lret
jmp
mov
xchg
push
mov
mov
je
pop
pop
adc
mov
or
dec
xchg
gs
cli
rorb
pop
mov
add
push
fcmovb
jns
mov
clc
sahf
hlt
mov
fadds
cltd
add
jo
nop
and
and
fmull
movsb
jns
clc
stc
sub
mov
sbb
mov
mov
loop
push
cs
inc
adc
sub
jmp
inc
out
dec
xor
and
mov
iret
decl
mov
dec
mov
es
loope
mov
popf
pop
xor
cmp
dec
test
and
decl
out
add
dec
repnz
test
xchg
mov
into
pop
imull
jo
repz
dec
movsl
mov
jmp
mov
lods
jecxz
ja
add
add
stos
loope
sub
test
call
inc
xor
imul
outsb
outsb
lcall
dec
jle
mov
mov
xchg
jbe
ljmp
inc
mov
dec
aam
jae
js
call
stos
icebp
out
loopne
mov
outsb
in
cs
lods
outsl
stos
cltd
std
push
in
in
sub
pushf
push
sbb
outsl
xchg
jmp
xchg
jp
mov
dec
pop
repz
mov
std
mov
lods
inc
imul
cltd
xchg
pop
push
jmp
adc
mov
in
lcall
leave
or
js
mov
jg
in
lcall
sub
push
cmpsl
add
add
xchg
adc
lret
inc
js
incl
subb
jp
xchg
lret
and
jmp
push
dec
into
mov
gs
dec
or
out
xor
stc
fstpt
cmp
scas
lock
cwtl
outsb
adc
cmp
mov
test
int3
mov
incl
subb
leave
cmp
xor
test
mov
mov
jmp
dec
repnz
adc
mov
mov
leave
ds
xorb
mov
inc
xor
addr16
call
pop
mov
mov
mov
inc
out
pinsrw
mov
call
add
popf
test
xor
leave
ja
sub
into
jp
add
push
or
mov
in
jae
stos
int
or
pop
test
roll
push
add
inc
mulb
mov
ja
dec
jmp
xchg
xchg
push
mov
add
mov
lock
and
aas
pop
jns
sub
jne
push
push
mov
lcall
cmp
pop
jl
xor
adc
movsb
test
enterw
inc
dec
call
dec
cwtl
or
in
jb
push
addb
cmp
mov
add
addl
rorl
add
repnz
ss
xchg
scas
mov
test
jno
into
cmp
lods
call
add
inc
inc
pop
xchg
mov
pop
sbb
pop
pusha
xor
mov
rcll
test
dec
jmp
push
mov
in
in
push
lret
fldl
jg
std
adc
and
pusha
add
aam
fsts
xchg
mov
sarl
pop
add
jnp
xor
inc
icebp
das
push
popf
push
push
sub
push
outsb
jnp
jp
jecxz
pop
rcrl
cmp
incl
xor
out
add
mov
dec
in
out
imul
jecxz
jecxz
jmp
inc
dec
mov
jle
xchg
jno
mov
pushf
into
mov
mov
or
pushf
movb
sti
push
sub
lds
sarb
loop
mov
sub
mov
test
fucom
and
cmp
scas
xor
push
xchg
or
iret
lret
in
iret
std
cmp
repz
ljmp
cmp
arpl
mov
push
adc
dec
mov
push
movl
push
out
adc
jmp
decl
ljmp
js
popf
mov
mov
cwtl
adc
call
sub
es
sbb
pop
mov
adc
add
xchg
xor
call
lods
cmpb
shr
fs
in
mov
jge
test
cmpsl
idiv
lcall
decl
sbb
jmp
pop
ret
mov
cld
jge
pop
cwtl
xchg
push
scas
push
dec
adc
pushl
jns
lahf
dec
xchg
cltd
outsl
imull
cmp
lahf
ret
and
ja
and
jbe
xchg
mov
cmp
pop
ret
iret
and
mov
cmp
pusha
ljmp
lret
pushl
shr
sub
and
xchg
js
xor
out
sahf
mov
adc
and
push
hlt
cmp
shlb
jbe
push
jo
and
addl
outsb
cli
mov
clc
sub
mov
call
mov
adc
mov
add
pop
sbb
fwait
imul
fisubs
les
inc
jge
sbb
divb
cmp
in
xor
cs
pop
jb
jno
outsb
fisttps
pop
stos
jnp
mov
jge
loopne
mov
pop
enter
pop
sbb
sub
mov
lcall
xchg
mov
or
in
lods
in
adc
gs
and
cs
xchg
pop
loop
decl
pusha
push
inc
or
sti
fldt
sbb
mov
imul
add
lock
incl
icebp
jle
lret
jnp
clc
pop
cmp
cmp
mov
xchg
xchg
arpl
or
dec
fiaddl
decl
mov
pop
jo
gs
aam
je
jecxz
shll
pop
lods
icebp
mov
mov
mov
cmp
and
adc
pusha
jno
jne
push
clc
loopne
push
fidivl
cmp
js
mov
jnp
sbb
pop
mov
cli
mov
jno
mov
xor
jmp
cmp
outsb
cmc
das
mov
movsb
out
aas
lds
push
iret
shrl
xchg
push
and
cmpsb
pop
decl
ret
rcr
dec
iret
rorl
jp
pop
mov
mov
and
push
jmp
in
add
cmpl
mov
icebp
cs
xor
sub
fsubrl
incl
outsb
lods
leave
pop
add
dec
inc
fiaddl
cmp
and
in
test
call
data16
dec
aaa
sub
mov
xorl
or
push
lcall
jmp
cmp
rorl
ret
sahf
lret
adc
lret
cmp
xchg
outsl
clc
or
hlt
xchg
xor
mov
jl
and
outsl
push
mov
std
mov
shrb
bound
ja
or
dec
les
xchg
rclb
lods
mov
out
and
pop
stos
ss
cltd
rorb
cs
ljmp
pop
xchg
out
mov
out
mov
cmp
test
fldl
inc
jge
arpl
cmpsl
push
lahf
outsb
ljmp
out
jl
or
iret
cmc
pop
or
fwait
clc
repnz
inc
movsb
dec
push
or
lock
cli
and
sub
cs
shrb
pop
add
and
cmp
sub
rcl
and
push
xchg
decl
test
push
cmp
pop
xor
dec
loopne
jmp
jmp
mov
adcb
cmp
ljmp
sbb
sbb
mov
add
jge
pop
mov
in
lret
inc
push
ficoml
cmc
inc
or
subb
fcom
mov
lret
push
aaa
lea
and
pop
lods
or
pop
stos
ds
cmp
movsl
ds
incl
jecxz
mov
and
in
jle
xchg
fimuls
ja
aas
mov
outsl
in
jo
jle
decl
aad
pop
rcrb
add
dec
jg
ret
aaa
and
cmp
in
jmp
lcall
mov
sahf
ror
sbb
push
mov
pop
sbb
pop
pusha
add
xchg
fldenv
xor
lcall
pop
in
sub
test
add
push
push
adc
test
cmp
lds
cmpb
call
and
cmp
mov
adc
mov
pop
inc
mov
xor
inc
mov
ljmp
jnp
xor
cld
inc
sbb
outsl
cmp
std
mov
push
jmp
push
icebp
dec
cs
test
pop
leave
psllw
cwtl
add
lods
cmpps
mov
incl
rcl
pop
mov
inc
enter
inc
sbb
shll
and
cwtl
call
xor
test
or
push
pop
js
jo
adc
cmp
leave
jbe
jbe
imul
ljmp
sub
cwtl
pusha
jle
lods
ret
cmp
xor
icebp
cmpl
incl
enter
enter
out
int3
mov
jnp
pop
aad
and
fdivrp
js
jmp
xchg
push
cmp
dec
inc
out
lock
imul
xorb
addr16
call
cmp
lods
lahf
in
inc
leave
aam
adc
sbb
push
mov
pop
xor
adc
jmp
fs
adc
push
mov
idivb
mov
jmp
loope
fucom
mov
fldenv
pushl
hlt
js
sbb
or
mov
scas
fmuls
sbb
movlps
mov
pushl
inc
stc
aas
push
mov
out
shll
ja
dec
sar
or
mov
test
xchg
jmp
call
loopne
inc
aad
jl
test
test
jne
adc
mov
add
pop
sub
aas
jns
nop
jecxz
ret
test
cwtl
aam
gs
adc
or
jge
add
arpl
pop
cmc
arpl
decl
lds
cmpsl
inc
in
jb
into
sbb
inc
push
xchg
jo
arpl
ret
mov
fsts
mov
in
or
ds
adc
push
dec
jo
cmp
mov
movsb
in
fimuls
rcl
mov
imul
cli
stc
mov
xchg
xor
push
cltd
ret
cmp
dec
sub
inc
outsb
sub
fisttps
adc
adcl
rclb
cmp
decl
leave
icebp
and
repnz
or
enter
pop
jle
call
jb
call
lods
mov
pop
adc
jecxz
pushf
test
pop
pop
scas
into
pop
rcrb
xor
int
incl
add
int3
dec
data16
jmp
test
stos
xchg
rclb
mov
outsb
fucomp
repnz
push
mov
stos
add
xor
ja
dec
es
scas
ljmp
imul
sbb
lcall
push
cmpsb
ret
icebp
out
or
js
sarl
push
push
xor
loopne
lods
push
xchg
stc
lds
call
test
loope
mov
rorl
aam
loope
xor
in
dec
pop
jns
ljmp
iret
repz
test
push
insb
scas
stc
fisubs
arpl
lret
inc
pop
xlat
lcall
out
and
jmp
xchg
xor
xchg
lock
pop
dec
add
cmp
mov
jmp
jmp
cltd
icebp
cmp
lods
stos
or
mov
push
inc
push
push
sti
mov
cmpsb
pop
jmp
popf
pop
mov
imul
dec
mov
mov
mov
xchg
insb
or
pop
cmp
dec
pop
movsl
jp
adc
das
sbb
adc
clc
ficoms
xchg
addb
test
insl
xor
loope
adc
xor
cmp
pushf
xchg
outsl
cmpsl
mov
ljmp
xacquire
fistl
lods
in
shr
stc
xor
sti
outsb
cltd
dec
pop
adc
jmp
pop
pop
xor
mov
mov
cld
loopne
shlb
es
iret
stos
mov
hlt
cs
dec
add
std
jl
and
push
mov
and
lcall
push
ja
lods
lods
notb
jne
loope
push
mov
inc
jnp
data16
jmp
inc
mov
ja
or
rcr
stc
negb
std
nop
gs
imul
jge
push
arpl
mov
add
mov
mov
ret
lods
add
mov
fstp
jl
and
or
incl
lret
pop
jo
sti
rcll
ja
push
and
xor
mov
popf
push
push
cmp
xchg
lcall
cmc
mov
stos
jge
ds
repnz
outsb
and
mov
ja
repnz
xchg
lea
pushl
cld
inc
pushf
xchg
inc
xchg
hlt
iret
cmp
cli
popf
jmp
test
sub
jns
ljmp
mov
fdivrl
dec
fsts
adc
out
dec
ss
jbe
pushl
ror
mov
xor
mov
pop
movsb
lods
add
std
pusha
incl
inc
jb
sbb
or
cmpl
sub
push
jmp
cmpsl
pop
lcall
inc
or
incl
test
add
push
lcall
je
sbb
add
ljmp
push
jl
sub
inc
clc
clc
sub
fnstsw
cmp
shlb
mov
gs
ljmp
cmp
xchg
and
dec
sub
or
cli
roll
nop
dec
xchg
add
cmc
cmp
popw
dec
mov
andb
xor
in
call
cmp
xchg
nop
inc
les
inc
nop
lret
jmp
sub
mov
pop
test
fmul
sub
sub
ja
mov
adc
out
mov
repnz
adc
std
stos
movsl
fcoml
in
mov
sbb
in
ror
loop
fst
scas
jbe
push
pop
sbb
cld
stc
xor
mov
mov
clc
shl
adc
leave
add
enter
cltd
iret
nop
test
cmp
incl
pop
frstor
hlt
aaa
ret
outsl
cmp
xor
pop
repz
adc
mov
inc
fcom
dec
add
imul
pushl
xor
xor
test
sbb
ret
ds
insb
sbb
xlat
pusha
xchg
pop
pop
sub
incl
pop
jmp
mov
aam
sti
and
cli
mov
mov
lea
stos
jmp
call
push
cltd
inc
sub
movsl
fildll
into
in
push
data16
test
mov
or
mov
aad
scas
fwait
mov
adc
push
mov
add
out
rclb
call
push
mov
cmpsb
clc
testb
xchg
mov
es
jo
xor
rcrl
enter
ljmp
ja
sbb
imul
scas
test
jp
mov
mov
ljmp
mov
xor
mov
lods
fistpll
mov
iret
lock
mov
je
adc
push
ljmp
and
cs
lock
stc
out
leave
inc
push
mov
xchg
jecxz
scas
mov
call
pop
mov
mov
fwait
aaa
mov
pop
int3
sub
cmp
daa
inc
call
into
hlt
jnp
jge
xor
clc
cli
stos
mov
fidivrl
sbb
notl
and
fadds
ljmp
lret
jg
sub
adc
push
cli
fsubrl
mov
add
test
push
imul
out
xor
jecxz
jecxz
xor
ret
pop
hlt
call
jmp
mov
bound
filds
cmp
mov
int
adc
shll
stc
inc
out
pop
in
mov
cmpsb
sbb
test
stos
jp
push
inc
ja
inc
test
incl
mov
lret
dec
sahf
arpl
enter
fsubrp
stos
mov
mov
lcall
subb
icebp
adc
cmpsl
mov
jle
lods
cmp
mov
mov
in
sar
call
mov
stos
pop
pop
push
jmp
mov
or
das
jne
repz
gs
and
data16
jmp
ljmp
add
lret
dec
inc
test
inc
aad
and
cld
daa
mov
sbb
ljmp
jns
adc
sbb
ret
inc
add
stos
mul
dec
sub
decl
pop
dec
lret
push
iret
push
gs
sahf
push
xor
jo
jle
insl
inc
imul
jg
decl
in
aam
shlb
or
pop
or
mov
lds
in
push
dec
lcall
ljmp
xor
pop
pop
filds
dec
loope
scas
push
fwait
cwtl
jmp
repnz
call
mov
imul
xchg
dec
adc
movsl
cwtl
insb
ret
xchg
mov
icebp
call
mov
enter
int
stc
cmpsl
call
inc
aaa
in
fidivrs
in
pop
add
repnz
call
in
jne
push
jo
es
cmp
adc
insb
int
nop
inc
mov
ljmp
mov
ljmp
test
mov
dec
xlat
mov
outsb
insb
inc
jne
mov
jo
sbb
and
jl
dec
sub
aas
mov
fsts
sahf
mov
pop
xor
xor
adc
inc
fwait
pop
jmp
jg
out
std
adc
pop
add
xchg
lock
cli
mov
cmp
push
mov
fwait
rolb
pop
xchg
into
push
push
pop
jg
mov
lock
push
and
incl
push
xor
arpl
sbb
arpl
mov
lcall
jg
pop
bnd
mov
dec
test
jns
mov
add
decl
fisubrs
fisubrl
in
jmp
lahf
jp
jmp
aas
or
loopne
inc
decl
sub
dec
loopne
pushf
jns
mov
or
sbb
mov
pushl
fmuls
jmp
cmp
lret
sub
mov
push
xor
imul
aaa
gs
test
add
adc
and
lret
mov
sbb
mov
pop
cli
les
inc
add
jle
arpl
scas
rorb
inc
shrl
in
cmp
in
xor
inc
ja
mov
lods
inc
xchg
in
cli
pushf
jmp
jbe
jle
pop
sbb
shll
push
pushf
aad
pusha
sub
adc
movsl
aaa
into
push
mov
jne
stc
mov
xor
in
addr16
pop
test
xor
leave
pop
mov
decl
pop
les
lret
ret
adc
push
cmp
fwait
jmp
out
cmp
std
mov
std
cld
inc
dec
mov
fldt
mov
inc
ja
xor
add
fisttpll
cmpsb
ret
ljmp
jmp
lods
leave
or
out
into
cmpsb
mov
mov
xchg
outsl
out
sub
sar
xchg
cmc
addb
incl
add
aaa
jp
decl
xlat
mov
mov
std
fstpt
jae
push
adc
test
popf
sar
ljmp
ds
lcall
in
push
clc
leave
push
cmp
popa
daa
adc
mov
lcall
jecxz
shl
je
push
jge
mov
arpl
insb
push
mov
pop
xchg
add
lcall
inc
or
fmul
mov
mov
adc
sub
in
and
push
push
bnd
mov
cmp
cli
gs
loope
arpl
lods
xor
jl
stos
lahf
pop
jl
mov
in
jle
aas
out
sub
or
incl
scas
pushf
cmp
cmovne
fisubl
mov
leave
inc
imulb
mov
jmp
dec
sub
lock
cmp
cwtl
lock
or
es
jb
sbb
xchg
cmp
clc
cltd
frstor
loope
sahf
rol
push
mov
push
jb
fmuls
imul
inc
lds
adc
ret
xor
call
sarl
dec
add
mov
dec
mov
inc
sub
movsl
and
ret
shlb
sbb
decl
mov
jbe
mov
insl
sub
fisttpl
pop
rolb
inc
mov
insl
stc
jp
and
push
xor
sbb
cmp
xchg
fwait
cmp
in
daa
cld
sbbl
dec
fisttps
gs
inc
jnp
push
dec
bound
mov
idivb
mov
and
call
xchg
xchg
jle
jle
jno
inc
dec
cs
jp
push
das
out
jmp
lcall
push
lods
sub
xor
out
pusha
and
fs
mov
sub
jmp
ror
adc
mov
bound
xchg
pop
movsb
in
sub
sbb
push
incl
and
dec
inc
jo
and
xchg
sub
sub
call
inc
insl
leave
fdiv
test
insl
or
lret
add
rorb
insl
pop
mov
xor
cwtl
lcall
xchg
in
pop
mov
stos
es
push
xchg
xchg
mov
sbb
sub
pushl
xchg
clc
bound
inc
add
jl
repz
sbb
loope
pop
sub
or
ljmp
and
popf
pusha
dec
sahf
inc
cmp
test
mov
xchg
test
mov
cmp
adc
call
fmuls
xor
jb
push
inc
or
mov
pop
icebp
jp
push
dec
add
sub
movsb
call
lods
andb
jo
fisubrl
mov
adc
mov
ss
lcall
push
inc
loope
dec
outsb
sahf
mov
or
outsb
or
dec
aas
cmp
mov
jns
call
dec
pop
fnstenv
adc
subl
loop
ljmp
iret
popf
outsl
fnsave
push
lcall
out
sbb
mov
and
mov
ficompl
mov
enter
mov
jmp
cmc
fdivrs
call
or
shlb
push
sbb
sbb
cs
jmp
cmpsl
adc
add
mov
jne
mov
stos
popf
mov
xchg
flds
push
sub
jmp
sub
xor
outsl
jecxz
aas
cld
jecxz
std
push
push
movsl
sahf
negb
sub
or
push
pop
movsb
mov
sbb
pusha
jecxz
fdivl
out
mov
decl
out
sti
mov
jmp
dec
add
cmp
cmp
mov
add
iret
scas
inc
mov
pop
out
dec
xor
out
add
cmp
out
les
cltd
push
push
fs
nop
jns
decl
dec
dec
jnp
adc
dec
pop
mov
mov
push
or
mov
lcall
inc
and
push
mov
sub
sbb
addr16
in
xchg
sbb
pop
dec
lret
and
xchg
repnz
or
xor
jns
inc
jmp
jae
dec
mov
mov
ljmp
push
dec
shl
and
and
aad
inc
jge
jb
or
and
pop
fs
mov
inc
sahf
bound
mov
mov
in
mov
lds
inc
xor
inc
outsb
cld
add
xor
in
push
jecxz
inc
pop
xchg
lcall
scas
jb
divl
pop
mov
fisttps
lcall
lods
loopne
dec
test
call
lea
dec
out
add
fstp
push
cmp
and
fdivs
sbb
push
mov
push
adc
sub
iret
call
daa
xor
ja
mov
jo
cmc
inc
jmp
adc
jp
lcall
scas
dec
jg
fldt
add
loop
xor
imulb
xchg
stos
push
sbb
decl
push
xor
mov
mov
movsb
inc
cmp
test
rcl
or
out
pushf
lcall
ret
stos
adc
mov
inc
cmp
cmp
xor
mov
in
mov
push
sbb
sti
dec
out
cld
loop
ja
dec
lock
pop
imul
mov
movb
pushl
sub
cltd
push
fwait
int
dec
and
bound
aaa
cli
jb
test
mov
push
incl
dec
rcll
mov
pusha
sbb
sbb
mov
ljmp
incl
fsubl
cmp
adc
stc
pop
roll
lea
call
push
mov
pop
test
ret
dec
mov
push
inc
sbb
xor
out
repz
incl
sub
cmp
sti
xchg
push
sub
stc
stc
andb
stos
bt
std
mov
ss
imul
mov
sar
lahf
mov
sub
mov
jne
out
cmp
mov
scas
pop
loopne
push
pushl
js
imul
cmp
cmp
cmp
imul
jmp
sub
inc
sbb
outsl
xor
or
add
cmp
mov
push
call
xchg
xchg
rcr
dec
ret
and
outsl
imul
jb
or
lcall
lcall
loope
nop
and
inc
add
dec
popa
pusha
in
xchg
jb
negb
je
mov
push
pop
mov
xchg
sbb
lock
in
rorb
into
mov
fnsave
jp
or
insl
stos
jno
mov
mov
outsl
jb
ds
lret
mov
lcall
into
or
loopne
mov
fdivr
cmp
nop
aad
sbb
outsl
mov
pusha
mul
cltd
xchg
xchg
testb
iret
int
aaa
mov
dec
add
pushl
sbb
in
sub
pmulhw
das
lcall
xchg
xchg
out
and
pop
or
ss
jecxz
mov
adc
jmp
mov
jae
push
cmp
lock
call
pop
cwtl
cmc
cmc
adc
ljmp
cwtl
imul
dec
cmp
or
inc
div
sub
cli
aam
pushl
testb
and
push
mov
lret
int
pop
insb
mov
push
in
std
setnp
push
pop
ljmp
movsb
popf
call
aas
jb
jo
cs
pop
ja
dec
pop
and
jo
incl
dec
pop
pop
lahf
loope
pusha
cmp
sbb
shrb
mov
xchg
stc
cmpsl
loopne
lcall
push
cwtl
int
into
movsl
mov
ret
imul
ss
dec
fimuls
enter
inc
ds
sub
in
stos
jne
push
test
sub
pop
pusha
xorb
scas
xorb
lcall
xchg
and
dec
fisubl
inc
fldl
std
int
in
add
ljmp
flds
inc
cmp
jmp
ja
mov
cmpsb
out
fdivl
ret
lods
mov
loop
and
test
out
mov
xorb
inc
push
fwait
ss
pushl
xor
xlat
mov
push
jo
mov
aad
test
insb
lods
push
adc
orb
dec
je
call
dec
push
dec
sbb
jo
mov
fildl
ds
push
idiv
call
inc
mov
shll
push
or
cmp
jne
mov
enter
jns
dec
ljmp
xor
stos
adc
xchg
leave
in
icebp
xchg
loop
cmp
call
add
scas
push
xchg
mov
lahf
test
rolb
sub
test
mov
loopne
xor
sub
mov
int
xchg
std
ljmp
jbe
pop
cmp
ds
sbb
xchg
sbb
lret
mov
add
xlat
jmp
insb
xchg
jno
xor
js
push
push
and
incl
sub
push
xchg
dec
mov
gs
adc
test
xchg
mov
jle
xchg
fmull
call
pop
push
in
sbb
pop
cltd
inc
jmp
lahf
inc
xchg
add
cmc
in
and
in
cmp
call
or
daa
fdivp
adc
arpl
ljmp
cmp
xchg
out
lock
dec
xchg
cltd
mov
inc
in
aaa
mov
stc
pop
js
adc
jnp
cmp
decl
pop
mul
adcl
xor
outsb
xor
xchg
push
repnz
pushl
cmp
cmpsb
cmpsb
loope
aam
mov
orl
fwait
pop
xchg
enter
flds
repz
decl
jp
jp
stc
arpl
inc
mov
ja
jge
js
jle
cltd
int
decl
cmp
mov
aas
or
adc
push
data16
or
decl
push
mov
in
mov
inc
call
testb
jecxz
mov
arpl
inc
cmp
xchg
test
pusha
out
imul
push
xchg
out
mov
stos
mov
incl
jne
movb
inc
test
inc
sub
cwtl
fldenv
dec
mov
les
incl
lahf
add
fsub
jae
cli
in
mov
fldcw
push
rcr
popf
icebp
stos
or
dec
or
cmpb
cmp
fcoms
jbe
dec
fldenv
pop
or
out
sbb
xor
sub
data16
mov
pop
mov
loope
jo
outsl
lahf
xchg
cmp
cwtl
jb
sub
and
testb
and
jns
cmp
jns
pop
lods
ljmp
pop
mov
addr16
sub
aas
cld
sbb
cmpsl
xor
add
decl
call
or
mov
pusha
ljmp
ljmp
dec
pop
in
jno
or
inc
mov
decl
mov
push
imul
add
lock
add
les
push
stos
leave
jg
ror
hlt
in
das
mov
mov
cmp
push
adc
sbb
aad
dec
decl
andb
push
ds
jne
sbb
or
cmp
rol
rcrb
sub
mov
ljmp
xchg
fnstsw
jmp
mov
rcrl
iret
add
sti
push
sbb
mov
int3
xor
call
bound
jmp
mov
repnz
pop
les
and
call
int3
xorl
in
rorl
sbb
push
leave
sbb
outsl
sbb
xchg
sub
mov
fadd
fsubs
mov
daa
in
jb
bound
xor
ds
addr16
inc
xor
fcomip
mov
loop
add
js
pop
pop
int3
rorb
pop
cmc
cmp
mov
adc
sahf
lcall
and
cs
lods
add
dec
imul
fs
rolb
in
lcall
sbb
leave
and
mov
jecxz
xchg
mov
mov
test
repz
jle
pusha
jmp
movsb
les
pusha
cmpsl
mov
or
in
xchg
xor
repnz
loopne
scas
dec
jmp
and
xchg
js
xchg
mov
pushf
add
cmp
popa
in
sub
lcall
inc
dec
mov
dec
in
shlb
sbb
in
mov
fmull
cmp
and
dec
test
lret
mov
in
test
repnz
sub
outsb
scas
inc
sbb
lahf
jmp
orb
xor
or
or
mov
push
mov
add
ljmp
mov
sbb
ret
pop
sarl
std
cmc
es
xor
pop
arpl
push
dec
sub
ret
fistpl
push
inc
add
pusha
push
jmp
push
inc
shl
xchg
xor
fucomi
jge
idivl
cmpsl
dec
arpl
jmp
push
push
and
cmp
push
sub
xchg
sbb
jmp
and
lahf
xchg
js
jno
xor
insl
xor
in
mov
or
lcall
push
lods
mov
hlt
mov
sub
or
inc
sub
vcvtps2pd
add
pop
pusha
push
push
rcll
xor
xchg
pop
arpl
ljmp
daa
dec
cltd
jnp
fidivrl
in
bound
mov
pop
hlt
pop
stos
repz
repnz
add
stos
push
push
int
cmp
and
call
lret
cli
mov
jmp
fwait
negl
imul
jo
or
aas
dec
add
jne
jle
sti
mov
add
add
mov
popl
jb
jb
aam
popa
jae
scas
xchg
jmp
cli
test
xchg
push
andb
repnz
pop
icebp
mov
negb
dec
gs
cmc
push
mov
aas
ja
sub
add
add
lds
aad
fdivr
cmp
in
dec
jo
lcall
lea
lods
les
xchg
or
pop
call
lahf
sub
adc
cmp
xor
jecxz
jp
dec
fdivrp
xor
cltd
or
fisubrs
dec
add
inc
pop
adc
incl
mov
dec
repz
fdivr
fs
or
pop
sbb
inc
aad
push
pusha
jnp
pushl
xchg
vminss
pop
ret
dec
aad
dec
pop
mov
mov
and
mov
fistpll
outsl
inc
cli
push
lods
in
inc
mov
lret
inc
push
jp
pop
or
call
and
xchg
fldcw
dec
popf
lds
pop
outsb
xchg
test
dec
add
incl
fmuls
ss
pop
leave
in
inc
nop
push
xchg
daa
mov
dec
push
inc
pop
or
shl
or
inc
sub
inc
loope
sbb
inc
add
addl
ja
jne
push
push
out
incl
nop
or
mov
push
leave
xchg
push
repnz
dec
inc
leave
sub
popa
adc
decl
faddp
into
jne
jecxz
popa
mov
sub
into
shll
addr16
add
inc
adc
xchg
mov
and
push
sti
jns
fistps
jns
sarb
cli
fs
fisubl
jb
shrb
mov
xchg
mov
mov
hlt
es
jnp
lds
dec
sti
fdivrl
sub
xchg
dec
mov
repnz
enter
call
and
inc
jge
push
inc
add
test
dec
mov
push
xchg
sti
ds
jmp
ljmp
mov
fistl
push
nop
test
and
push
lds
cmpsl
push
decl
pop
mov
sbbl
jae
nop
xor
xor
aad
shlb
mov
fcoms
jg
scas
mov
aam
fadds
imul
sbb
push
iret
stos
fcmovnbe
out
mov
dec
inc
xlat
aas
pop
lret
xchg
cmp
pop
sub
loop
sbb
cmp
ds
jge
inc
aam
std
cld
cmc
aam
cmpl
stc
xor
jle
jmp
ret
cmp
adc
ficoml
lret
or
mov
addr16
dec
adc
lret
test
jle
jmp
addr16
mov
outsb
fwait
jle
imul
pusha
aad
std
inc
xchg
out
pop
cmp
inc
out
mov
call
pop
jge
fbstp
out
idivb
lret
aad
mov
jmp
lods
test
mov
mov
lcall
stc
movb
dec
xor
fxch
imul
call
jmp
inc
cmp
adc
int3
inc
call
sbbb
decl
jge
sbb
idivb
loop
xor
inc
pushf
jl
pop
out
and
stos
push
add
jb
jo
jmpw
lea
fsubl
mov
lds
lcall
call
cmp
add
inc
cmp
or
das
push
mov
decl
mov
in
icebp
imul
add
stos
popa
shl
inc
call
cmc
das
sbb
fldcw
mov
xchg
stos
push
iret
pushf
jl
mov
mov
movsl
jb
arpl
imul
mov
and
sub
ljmp
imul
out
enter
shll
dec
in
and
rcl
out
jo
ss
decl
lods
insb
pop
cmc
cmpsb
adc
sub
js
cld
adcb
popf
pushl
out
mov
call
lret
out
adc
inc
xchg
iret
xchg
push
sbb
xchg
pop
and
icebp
or
xchg
lcall
jno
cld
cmpl
fcomps
cmc
pop
lods
jle
pop
or
lods
mull
sub
cmp
or
add
xchg
mov
mov
jo
xor
bound
mov
jno
push
sahf
repz
repz
and
aam
sbb
sbb
fdivr
jbe
push
movsb
xchg
inc
incl
popf
mov
mov
jno
jle
popf
add
dec
mov
and
inc
fst
xchg
inc
cmc
in
mov
pusha
or
data16
shrl
subb
adc
ret
jb
pusha
insb
xor
jmp
sbb
test
pop
aas
cmc
std
repz
xchg
ljmp
lods
ret
cli
clc
iret
xor
xor
sbb
adc
lds
adcl
call
mov
push
repnz
clc
pop
or
lret
sbb
cmpsb
xchg
outsl
jl
cltd
stc
inc
jmp
dec
orb
lcall
mov
push
mov
cmp
mov
jg
das
in
jecxz
pop
aaa
in
sub
add
cmp
shrb
inc
mov
pop
lods
dec
cwtl
ret
pushf
mov
lcall
pop
sub
scas
xchg
xchg
sbb
cld
push
jp
in
cmp
add
sub
iret
push
notb
mov
mov
sub
sti
imul
test
mov
ljmp
fiaddl
inc
dec
inc
add
lds
mov
mov
xor
mov
decl
sahf
movsb
outsl
cwtl
xchg
imul
hlt
mov
mov
sbb
push
cli
inc
nop
call
jmp
jmp
jmp
or
test
stos
jns
lds
dec
and
js
ror
xchg
call
es
aas
call
push
andb
xchg
in
adcb
sarl
movsb
pop
cmp
loop
arpl
jmp
into
push
sahf
inc
pushf
adc
add
dec
mov
pop
and
push
pop
mov
insb
mov
push
inc
popf
imulb
mov
imul
fbstp
lock
sub
negl
clc
xchg
and
jle
ljmp
iret
sbb
xchg
mov
sbb
xchg
cmp
jns
add
js
bound
add
pushl
adc
sbb
xchg
adc
lods
mov
or
add
popa
mov
repz
ljmp
and
mov
inc
pop
leave
cs
shrl
add
popf
cwtl
inc
mov
out
xor
jbe
call
add
in
xchg
jbe
push
lods
and
jnp
sbbb
daa
js
mov
mov
adc
sbb
mov
push
cld
dec
mov
scas
arpl
mov
cld
pop
mov
add
push
pusha
cmp
arpl
lret
stos
jle
sbb
lcall
lea
dec
test
cmp
or
and
in
clc
adc
hlt
push
cld
mov
push
fcomps
out
sub
push
shll
sub
stos
fstpl
dec
pop
sbb
xchg
ret
push
faddp
cmp
xor
loop
jb
push
movaps
cli
sbb
es
faddl
pop
push
sahf
inc
ret
decl
popf
mov
mov
cmpl
int
or
in
or
jmp
sbb
je
jbe
mov
xchg
jle,pn
dec
mov
pop
sbb
adc
lcall
push
loope
xor
adc
imul
je
xchg
lret
adc
or
mov
pushl
test
jne
dec
cmc
negb
je
loopne
sbb
lds
sar
cmp
jbe
xchg
pushf
push
scas
or
xor
xchg
mov
out
outsl
or
iret
jl
jmp
push
or
cmp
jg
aaa
dec
pop
dec
push
lahf
stos
mov
xchg
movsl
lods
cmp
fdivr
inc
adc
out
sbb
imul
dec
add
xchg
and
inc
dec
jns
sbb
incl
stc
cmp
ret
stos
or
dec
push
sub
dec
insb
mov
stos
aam
in
push
cltd
xchg
pop
cs
ljmp
jge
jp
dec
push
aas
scas
pcmpgtw
or
addr16
push
lret
inc
loopne
call
call
push
push
cmpsl
aam
test
sub
in
mov
push
outsl
nop
cmp
scas
das
and
jg
scas
add
push
pop
mov
dec
pop
and
test
movsb
mov
mov
jmp
pop
fiadds
mov
pop
fildl
mul
jno
pushw
popa
mov
mov
cmp
dec
subl
mov
sbb
aam
cmpsl
sub
ficomps
mov
incl
jno
inc
pop
in
imul
mov
cmp
mov
cmpsb
xor
mov
and
inc
testl
push
sbb
add
push
cwtl
neg
cmp
iret
aad
mov
jns
add
movsb
jne
sldt
adc
sbb
add
xor
mov
outsb
add
jne
incl
les
shlb
sub
push
jo
hlt
cs
add
pop
dec
scas
or
ljmp
mov
add
and
sub
fbstp
and
cli
xlat
jb
cwtl
pop
dec
cmp
cmp
jae
mov
xchg
xor
adc
mov
xor
adc
inc
jl
decl
ds
and
mov
shlb
adc
cmp
mov
test
inc
fbld
jg
or
orl
push
mov
or
add
sub
sahf
movsl
push
push
push
ficompl
xor
dec
mov
and
push
pop
call
loope
lock
call
repz
mov
mov
jb
add
enter
scas
stc
je
sub
push
dec
push
dec
push
push
movsl
rcrl
pop
loop
mov
xor
xor
pop
add
pop
nop
pop
push
incl
mov
scas
les
push
jmp
bound
outsb
pop
cmp
and
cmc
add
inc
sbb
or
decb
movsb
fwait
inc
lret
and
cwtl
and
fwait
popl
sub
call
sub
lret
imul
sbb
les
idivl
mov
fcmovnu
stos
adc
leave
lret
or
stc
dec
pop
lea
sbb
scas
fmuls
mov
mov
fldcw
jecxz
cmc
cmp
pop
add
call
js
xchg
daa
cli
lcall
imul
sub
pop
int3
or
mov
mov
das
adc
cmp
jno
repz
add
push
in
lea
das
outsl
js
insl
into
gs
or
lcall
adc
addr16
mov
cmp
sbb
push
lock
xor
fdivl
jl
push
out
dec
xchg
sbb
and
movsl
and
push
imul
xor
jge
ljmp
int
jmp
pusha
jno
cmc
sub
inc
mov
rcrb
repz
dec
pop
inc
xchg
ficompl
addr16
adc
les
xor
dec
leave
dec
incl
aaa
iret
jge
aam
xlat
testl
loopne
fisubrl
cli
adc
mov
scas
es
jmp
jae
lcall
mov
icebp
cltd
sti
mov
ss
inc
mov
fsubr
test
mov
cmpsb
adc
jp
sbb
aam
imul
shll
push
sub
decl
xlat
lods
jmp
data16
inc
ret
adc
mov
xchg
rorl
jmp
xchg
jnp
jne
and
dec
dec
mov
cwtl
in
out
loopne
popa
stos
and
outsb
aas
push
mov
push
lea
repnz
decl
xor
jbe
ret
sub
test
sbb
out
lahf
bound
jmp
ret
and
dec
xchg
je
and
cmp
or
icebp
rcrb
lret
push
enter
cmp
sti
push
adc
lock
mov
subl
or
inc
push
sub
orl
push
call
andl
nop
lret
sbb
push
pop
sub
xchg
fiadds
leave
insl
in
xchg
inc
pop
mov
aad
repz
sbb
mov
or
out
mov
sub
decb
xchg
mov
mov
cmp
xor
loop
pushf
dec
mov
ja
xor
mov
mov
call
stos
add
push
adc
gs
int
popf
out
test
mov
dec
lahf
mov
jmp
sti
mov
push
call
inc
cltd
sub
ss
std
lock
ror
ljmp
sbbb
jmp
fstp
mov
push
test
mov
outsl
inc
mov
cli
fimuls
or
and
incl
adc
pop
mov
insb
out
and
mov
xlat
icebp
iret
into
xchg
ss
inc
push
ljmp
and
mull
cmp
inc
pushf
pop
leave
jbe
cmp
jns
sub
inc
add
inc
cs
rclb
aaa
pop
inc
or
xchg
push
fistl
aas
mov
xor
leave
sbb
add
sti
dec
add
mov
mov
mov
add
cltd
adc
ljmp
outsl
mov
pop
dec
sub
ljmp
sub
mov
lret
sahf
ret
xorb
out
adc
push
test
or
sub
ffreep
leave
and
mov
cmc
cli
in
mov
add
sar
inc
add
lcall
dec
jnp
aaa
mov
fbstp
je
rcrl
stos
xor
xchg
lcall
ja
cli
hlt
mov
mov
aam
insb
lcall
jae
jl
fdivr
push
sbb
jg
and
jmp
std
nop
test
push
fldpi
jl
jecxz
cwtl
fwait
add
mov
ljmp
sub
lock
popa
xchg
in
mov
sub
mov
jmp
dec
out
mov
push
lea
or
sub
push
fwait
xchg
les
stos
gs
outsb
stc
fcoml
sub
fsubrs
jb
repz
in
inc
nop
dec
inc
push
pop
mov
xor
xchg
cmp
pushl
add
xor
data16
repnz
lahf
stos
mov
sub
mov
xorb
call
cmc
ficoms
push
or
push
fs
mov
jl
shlb
arpl
mov
insb
dec
and
aas
dec
mov
adc
lock
aas
sbb
cmpsb
fdiv
push
icebp
lcall
inc
sbb
decl
into
mov
adc
mov
movsl
inc
rorb
sbb
xchg
icebp
test
jmp
rolb
add
in
dec
ficompl
xor
hlt
add
in
and
push
divb
inc
into
outsb
add
jmp
fbstp
lock
data16
je
mov
loop
inc
arpl
adc
push
shlb
cmp
xchg
fiadds
inc
fs
pop
dec
nop
lods
adc
pushf
and
jge
shll
incl
lcall
sti
inc
sub
nop
mov
xchg
xor
jnp
mov
sbb
mov
movsb
xchg
sbb
push
arpl
jle
adc
mov
mov
jmp
test
push
xchg
sub
rcrb
jge
insb
mov
or
add
divb
push
or
sbb
cmc
xor
mov
pushl
sbb
inc
rclb
movsl
add
mov
cmp
adc
adc
mov
xchg
xchg
dec
pushl
mov
inc
jmp
ret
sub
loopne
pop
sub
fldl
fmul
decl
mov
jns
adc
xchg
nop
mov
add
pop
push
dec
xchg
push
cmp
mov
test
decl
rorb
mov
scas
clc
push
adc
loop
adc
ud0
pushl
sarl
shlb
pusha
mov
cmp
popa
sbb
mov
push
movsl
loope
sbb
call
stos
addr16
push
inc
cmp
xchg
test
negl
push
lahf
jbe
cwtl
mov
push
jmp
in
out
mov
add
shrb
cmp
cmp
inc
icebp
andl
jl
outsl
lock
leave
lods
sar
dec
jae
jne
leave
sbb
repnz
imul
xchg
sbb
inc
mov
push
ljmp
xor
cmpsl
xchg
mov
sar
xlat
iret
push
fwait
icebp
lods
xchg
xchg
cmp
and
and
mov
jge
xchg
push
aam
or
ret
sbb
pusha
jne
xor
dec
dec
lahf
lret
dec
out
pushl
je
ljmp
jns
mov
and
test
xorb
push
aaa
sahf
inc
call
shlb
cmp
push
jmp
push
jnp
arpl
cwtl
push
aaa
sub
testb
daa
mov
pop
lcall
call
jns
mov
fmull
repz
xor
js
mov
bound
mov
stos
pushf
add
mov
or
decl
aam
push
test
mov
lahf
cmpsl
arpl
stos
ja
pop
and
pop
dec
add
sbb
xchg
outsl
push
cmpsb
dec
stos
and
ss
sbb
mov
adc
into
mov
outsl
or
xchg
outsl
out
roll
call
push
push
in
mov
cltd
std
push
pop
outsl
cmpb
sbb
jnp
sub
incl
fwait
outsl
fwait
xchg
fldt
repz
jl
cwtl
and
ret
jp
icebp
scas
out
adc
jmp
pushl
testl
xor
pop
push
and
xchg
pusha
mov
inc
sbb
pushl
leave
cmp
lods
outsl
push
aam
push
sbb
sar
les
ds
clc
test
fcomps
pop
mov
ss
test
sub
aam
nop
jl
mov
cs
sub
std
lcall
push
roll
jno
xor
xlat
ss
sbb
jl
mov
mov
cmp
and
inc
mov
xor
push
add
push
jns
cld
xchg
mov
inc
sub
lods
mov
mulb
xchg
incb
aad
cmp
cld
push
cmp
ljmp
xchg
push
call
popa
mov
idivl
shl
xchg
in
mov
lcall
psraw
subb
dec
jp
fmuls
pop
pop
cld
sub
sarl
sub
shrl
and
jb
pop
or
enter
ja
add
cwtl
mov
xor
mul
sub
ljmp
arpl
dec
das
pop
push
arpl
pop
sub
adc
and
loop
leave
cld
xlat
bound
aas
xchg
mov
jge
mov
imul
or
loopne
push
inc
mov
imull
pushl
jecxz
mov
adc
push
aaa
fwait
mov
and
xchg
jg
and
frstor
xor
inc
mov
cmp
sbb
push
xchg
lret
inc
cmp
cmp
call
cmp
rcll
add
pop
imul
daa
add
mulb
mov
mov
pop
adc
loop
in
xchg
orl
xor
or
decl
or
rclb
paddw
decb
insl
sub
adc
mov
movsl
sbb
add
decl
push
in
ss
insl
popf
negl
jmp
pop
cmc
test
inc
push
js
jb
jmp
pop
add
mov
adc
mov
or
add
ds
je
clc
call
inc
push
jbe
dec
mov
cwtl
mov
adc
rcrb
pop
dec
repnz
mulb
pop
mov
call
inc
subb
xlat
decl
adc
adc
mov
pop
cs
daa
push
loop
pop
ss
cld
aam
jmp
inc
test
mov
mov
ljmp
dec
xchg
ja
push
push
loope
cmp
stos
enter
mov
xchg
test
push
inc
icebp
ljmp
es
rorl
sbb
lea
pop
pop
jge
and
add
stc
push
incl
aaa
mov
xchg
mov
adc
cmp
outsb
lock
push
into
xchg
in
test
ljmp
mov
out
scas
addl
jmp
enter
outsl
sub
jns
decl
sbb
jecxz
ret
test
push
sbb
pop
sar
pushl
pushf
int
inc
fisttps
adcl
xor
ja
lock
add
mov
pushl
arpl
lea
jp
jmp
push
jo
cmp
dec
sub
pop
cs
cltd
jnp
fimull
das
xor
bound
int3
inc
push
das
icebp
sbb
movsb
pusha
mov
mov
incl
or
mov
call
mov
and
call
push
pushf
xchg
xchg
rcl
and
mov
add
cmpsl
push
popa
mov
loopne
cwtl
xor
sbb
mov
imul
out
lock
std
or
xchg
ss
pop
add
movsb
iret
cmp
movsb
xchg
int3
adc
mov
roll
jge
mov
or
sbb
dec
ret
cmpl
fwait
pop
test
shrb
cmp
jmp
pushf
push
in
inc
xor
shrl
testb
pushf
mov
add
mov
jmp
outsb
les
xchg
jp
mov
or
dec
test
shll
mov
ljmp
mov
testl
adc
les
lahf
jmp
push
les
pop
mov
call
mov
fdivp
mov
add
ret
pop
clc
lahf
add
jnp
xchg
mul
sar
fs
jmp
cmp
cmpsl
inc
sti
sub
js
fistpll
int3
inc
jl
out
lahf
sub
stos
inc
rorl
xor
lcall
cmp
mov
negl
xchg
insb
sbb
pusha
popa
mov
add
jo
dec
pop
push
out
cmp
scas
mov
arpl
adc
dec
mov
movsl
push
ds
cwtl
jne
fbstp
call
ds
cwtl
clc
mov
pop
fwait
xchg
fidivrs
fisubs
adcb
inc
std
arpl
mov
mov
ljmp
pushl
inc
jb
dec
pop
int
in
je
sub
mov
test
dec
or
fbstp
aaa
jb
and
fistpl
cmpsl
or
sbb
and
fisubs
lcall
and
incl
pusha
leave
adc
sbb
dec
xlat
mov
sbb
int
in
cs
jbe
lods
les
pusha
xlat
iret
mov
inc
or
push
jge
mov
sub
lret
rol
jp
fdivl
lret
andl
int3
cmp
dec
in
ss
in
fisttpl
pop
shll
daa
sub
mov
popa
bound
in
ljmp
pop
sub
aad
popa
pop
lret
lcall
mov
sub
call
adc
orl
dec
out
in
lret
iret
and
dec
xor
mov
mov
in
cmp
pop
and
cmp
imul
enter
adc
sub
dec
mov
int
orb
insb
jl
loop
fsubl
lret
cwtl
enter
cmp
negl
pop
add
xchg
sbb
add
mov
xchg
dec
mov
xchg
adc
cmp
fsubs
xchg
int3
popf
std
je
dec
sub
jmp
mov
fsub
imul
subb
mov
or
call
push
into
xor
mov
pop
iret
mov
aam
cmp
test
pop
adc
incl
sub
int3
lret
data16
in
lcall
mov
adc
jae
xor
push
int
jl
lcall
es
ds
ficomps
fists
std
insl
pusha
mov
sar
jmp
test
cmc
inc
in
clc
hlt
sub
mov
in
cwtl
inc
inc
aas
ret
jns
icebp
movq
test
aam
call
add
pop
rorl
xchg
push
sub
push
mov
jecxz
or
push
sub
out
mov
imul
lcall
add
sarl
adc
pusha
stc
fwait
inc
testb
or
inc
fbstp
or
in
or
inc
bound
ret
gs
dec
xor
pushl
jle
adc
jno
icebp
movsl
js
cmc
mov
push
in
insb
out
xchg
xor
decl
inc
dec
xor
jno
fdivrs
and
jmp
gs
jbe
fbld
push
mov
cmp
cltd
pop
in
mov
or
sbbl
pop
data16
movd
cltd
pop
pop
enter
incl
in
pop
and
pop
fstl
jl
std
push
or
in
mov
incl
aaa
addr16
pop
xchg
jg
mov
ret
int3
sti
pushf
mov
inc
data16
cmp
sub
jbe
pushl
jnp
push
adc
aam
loop
jmp
pop
push
or
sub
or
lcall
pop
lret
out
hlt
dec
cmc
or
add
shrl
repz
mov
and
out
inc
lcall
aas
or
fcoml
or
outsl
out
cmp
out
scas
stos
xchg
outsl
ljmp
scas
imul
jecxz
cmc
sbb
ret
inc
dec
jp
lods
cltd
test
lcall
decl
mov
sbb
sub
scas
lock
stos
fs
aaa
push
ljmp
lcall
jbe
or
jne
mov
xchg
lock
adc
outsb
push
or
or
push
icebp
into
cmpsl
cwtl
mov
dec
jne
out
out
xor
push
pusha
push
mov
incl
aas
aaa
aaa
daa
mov
inc
add
ja
sbb
fcmovu
push
xchg
decl
mov
push
dec
clc
insl
cli
mov
xchg
mov
pop
pop
enter
clc
icebp
inc
xchg
leave
imul
inc
add
xor
push
out
enter
dec
test
jmp
das
fisttpl
cld
subb
fmull
jo
call
mov
ljmp
f2xm1
jmp
int
or
xor
pop
sub
aaa
loop
mov
decl
mov
les
mov
cmp
sbb
outsl
xchg
cmp
push
mov
mov
push
nopl
dec
fsubrl
arpl
in
mov
rorl
jp
jle
sbb
inc
stos
dec
fcomp
into
xor
jecxz
and
repnz
stc
aaa
sub
xchg
xchg
ficoml
mov
fs
or
clc
xchg
dec
pop
fildl
pushf
mov
inc
scas
out
sbb
incl
inc
push
outsb
fwait
xor
cltd
aad
daa
xchg
ficompl
mov
adc
cmp
call
aad
lods
mov
ja
hlt
and
in
test
inc
bound
ret
inc
pop
push
or
aas
orl
into
daa
cmp
nop
ljmp
mov
ljmp
sbb
ds
pop
push
cmc
movsl
push
scas
cmp
dec
jg
cmpsl
outsb
adc
ret
decl
out
and
out
lds
adcl
push
jle
cli
cltd
cld
adc
lcall
adc
dec
push
adc
iret
mov
stos
popw
mov
loope
xchg
aaa
incl
pop
aad
mov
xor
jmp
xor
data16
xchg
pop
inc
jo
fisttpl
lar
das
in
mov
call
jmp
dec
enter
jmp
jne
or
pop
stc
shlb
nop
xchg
jmp
fwait
ret
out
xchg
shlb
push
jno
test
lret
in
aad
add
or
dec
jecxz
mov
mov
sbb
adc
mov
ljmp
dec
pop
addl
pushf
push
cld
arpl
arpl
adc
rclb
dec
decl
enter
pop
xchg
jo
loop
xchg
test
test
mov
push
jno
add
cmp
cs
in
stc
or
dec
add
xor
add
shrl
or
repnz
loopne
mov
ja
jmp
aaa
cmpsl
pop
test
test
xchg
cmp
filds
jl
lds
xor
daa
mov
xchg
es
fistl
fists
jnp
dec
leave
and
xlat
int
jle
lcall
ds
xchg
data16
ja
icebp
fsts
cmp
mov
ds
xchg
cmp
dec
sbb
and
mov
mov
mov
out
ljmp
fisttpll
popf
aas
mov
jl
incl
nop
shlb
jecxz
sub
dec
std
pop
add
popf
jge
ret
jl
jge,pn
fidivl
call
cmpsl
mov
addl
xor
jae
test
in
shll
jp
fidivl
sarb
cmp
mov
jle
lds
adc
stc
mov
cwtl
xchg
scas
sarb
xor
shll
dec
mov
movsl
sub
outsb
pop
mov
loopne
xchg
push
push
xlat
pushf
inc
jo
jl
or
or
jge
add
loopne
cmp
add
dec
cmp
xorb
fnstcw
mov
sbb
add
sahf
push
dec
cmc
movsb
bnd
jmp
mov
inc
ljmp
push
lods
sbb
stos
mov
out
repz
push
adc
jb
jmp
push
mov
das
sbb
mov
leave
pop
addr16
add
iret
dec
pop
adc
xor
cli
and
sub
jge
bound
out
scas
jne
add
daa
idivl
mov
in
out
dec
ljmp
incl
adc
movsb
stos
sub
mov
adc
adc
xlat
cmpsl
and
adc
decl
lods
iret
mov
stos
cwtl
jecxz
loope
mov
cmp
push
or
jne
cmc
nop
call
je
stc
jb
int
stos
pop
fcompl
adc
adcb
sub
mov
push
cmp
jne
lret
int
add
popa
pop
out
xchg
dec
fisubs
mov
ljmp
dec
and
pusha
jge
cmp
sub
cmp
cmp
mov
hlt
cmp
pop
xor
faddl
fnstsw
xor
sti
scas
stc
or
out
dec
jge
dec
cmp
ss
cmp
and
call
mov
lods
push
pushf
cmp
inc
sbb
in
ret
pop
stc
sub
inc
aad
dec
test
stos
ficoml
sbb
js
int
mov
sbb
into
xchg
xchg
lahf
jle
jg
dec
insl
lret
jnp
jmp
pusha
cld
xchg
pop
push
ss
mov
std
in
flds
adc
das
cmp
or
pop
or
mov
fildll
xchg
xchg
andl
mov
inc
push
sbb
sti
fsts
cld
addr16
fcmovnu
sbb
add
out
ss
ret
in
cld
hlt
dec
inc
leave
popa
stos
loope
xchg
cmp
xor
incl
stos
cmpsl
jl
mov
mov
sub
in
inc
out
mov
test
cltd
call
ficomps
in
mov
sbb
adc
nop
pop
ss
sub
inc
out
pop
insl
nop
sbb
call
jg
or
sbb
ja
in
das
xor
pop
divl
insl
mov
clc
das
inc
inc
icebp
jmp
jg
push
jmp
cltd
ret
xchg
pushl
push
xor
pop
pop
ret
cltd
or
xchg
and
sbb
mov
into
lods
hlt
call
pop
cwtl
in
cmp
into
mov
pop
inc
fisttps
mov
mov
cmpsl
adc
adc
call
jbe
stos
push
and
cmp
mulb
adc
mov
fsubrs
popf
gs
lods
xor
jmp
cs
fisubl
shr
or
mov
enter
jbe
xor
lahf
out
jp
call
xor
or
andb
popf
fwait
into
and
rorl
lahf
push
ljmp
cmc
xchg
std
mov
mov
xor
xchg
mov
ja
ljmp
arpl
popf
lock
insb
cmp
inc
aas
cmp
push
push
bound
mov
mov
ljmp
push
adc
pop
mov
push
ja
mov
push
movsb
fidivrl
sub
push
ljmp
push
sub
stos
xor
pusha
xor
in
lahf
sti
mov
push
push
xor
loope
jmp
fildl
movsb
imul
insb
jge
xor
bound
lahf
xor
outsb
xchg
int3
and
call
test
dec
cmpl
into
mov
sub
mov
push
aaa
iret
xchg
sub
xlat
push
or
call
pusha
jmp
xlat
push
sbb
xor
push
add
gs
into
iret
mov
xor
pop
call
or
push
add
mov
fistps
dec
pop
fstpl
fadd
fiaddl
mov
incl
sahf
jae
pop
adc
mov
mov
mov
or
mov
cmp
call
xor
or
das
dec
rol
in
push
xchg
cltd
sbb
ljmp
or
roll
adc
mov
repz
cmp
jg
ss
push
insl
je
outsl
and
xchg
fwait
mov
js
cmp
add
add
gs
xor
mov
mov
ja
push
pushf
jo
loop
sub
jle
stos
scas
ljmp
arpl
cmp
mov
shrl
mov
ds
out
scas
mov
mov
call
mov
mov
push
imul
add
sub
mov
imul
lret
mov
mov
lret
popa
int3
mov
mov
out
inc
in
ret
hlt
xchg
fs
ss
xchg
jae
jmp
sbb
notb
add
aaa
cwtl
xchg
or
hlt
mov
clc
lret
jecxz
jb
push
pop
sub
icebp
ficomps
fwait
or
test
jge
xlat
das
sarb
push
cmp
movsb
decl
mov
sahf
dec
fsubrl
cmpsl
or
aad
xlat
sbb
add
push
push
cmpsb
pop
cmp
test
int3
aam
dec
jns
movsl
adc
movb
xchg
push
push
fxam
out
cld
outsl
mov
imul
pop
popf
mov
inc
mov
and
mov
ljmp
cmp
sbb
popa
pop
push
inc
pop
adc
out
outsb
jg
fdivl
push
pop
cmpsl
sub
in
mov
stc
decb
call
es
cld
push
test
dec
xor
incl
jmp
mov
clc
dec
inc
cmpsl
fdivr
xchg
dec
lahf
or
push
xchg
mov
jp
lcall
or
insb
pop
inc
je
popf
pusha
call
xor
inc
dec
orl
jle
es
fstps
push
repz
imul
mov
rcrb
push
xor
ljmp
jg
pop
fadds
dec
lds
dec
fisubs
into
fildl
cld
incl
shr
or
xlat
ljmp
mov
lds
pushf
pop
roll
das
fbstp
frstor
test
arpl
dec
dec
jl
in
sub
mov
jae
int3
xlat
lcall
jecxz
push
mov
pop
sbb
mov
bound
in
fdivrl
jno
repnz
push
test
jp
push
cmovo
xchg
fisttpl
mov
sub
add
out
lahf
fdivs
test
nop
inc
call
loopne
jmp
xchg
ljmp
incl
ja
lcall
cmp
iret
shlb
lret
add
testb
xchg
mov
lcall
jle
or
mov
xor
mov
std
add
cltd
jg
sbb
dec
mov
mov
sub
jae
adc
mov
xchg
push
rcrb
aam
test
out
lea
sub
repz
in
jg
cltd
cwtl
jle
test
jmp
ss
jo
pop
mov
cmp
push
sti
mov
mov
ljmp
clc
xlat
cli
shl
call
sub
aad
mov
mov
popa
xchg
mov
jp
dec
pop
out
push
dec
sub
jp
sbb
cld
fistpl
and
jo
or
ljmp
lahf
sub
push
nop
or
in
mov
xchg
pushf
fisttps
je
shl
xor
adc
hlt
ss
cmp
push
insl
jae
fisubrs
mulb
jmp
fildl
jbe
clc
mov
aam
push
mov
pushl
int
jbe
std
xlat
push
dec
gs
mov
and
mov
xor
and
inc
std
pop
or
mov
add
out
or
adc
or
xor
lcall
push
stc
es
xchg
pop
rolb
sbb
mov
psrad
inc
push
push
lcall
add
adcl
int3
popa
adcb
cmp
sub
push
subl
shlb
bound
ja
repz
das
cltd
data16
loop
xor
in
adc
add
jmp
popf
inc
bound
cmp
shll
xorl
mov
mov
shl
push
mov
jnp
in
aam
hlt
mov
in
jae
xlat
test
cmp
inc
jns
xor
push
decl
mov
cmp
mov
sbb
push
popa
scas
call
xchg
xchg
lock
add
movl
mov
fmull
in
stos
xor
pop
and
mov
xchg
lret
outsb
inc
push
fcomi
jle
dec
jns
sbb
jge
outsl
or
inc
sahf
cmpsl
bnd
pop
lret
test
call
repz
call
test
aaa
pop
clc
jo
icebp
test
cmp
or
add
jae
xor
jmp
dec
fildll
in
das
mov
movsb
je
cs
outsb
inc
sub
std
mov
jg
lcall
movsb
sbb
aas
add
aaa
ss
out
fwait
jns
out
cltd
aas
add
call
wbinvd
inc
je
dec
call
inc
in
or
rcrl
fcoml
std
fldcw
les
jno
push
xchg
aas
xlat
adc
cmp
cld
sahf
call
out
adc
pop
inc
popa
call
pop
and
test
dec
mov
dec
cmc
cmp
xchg
jp
ljmp
inc
js
push
xor
fstp
stc
dec
pop
adc
add
scas
adc
popa
andb
ljmp
cmpsl
lcall
aam
sub
cmp
jg
adc
stos
ficoms
decl
addb
vpmadcsswd
mov
outsl
testb
jp
mov
fs
sbb
lcall
pushf
inc
mov
mov
filds
into
dec
lahf
sub
sahf
aad
push
in
fdiv
xor
pushl
popf
stc
imul
popf
cwtl
xchg
mov
int
add
pop
pop
lcall
cmp
jbe
add
dec
push
mov
imul
sti
mul
xor
jge
mov
mov
lahf
popa
cmp
add
add
dec
test
jmp
cli
xchg
or
pusha
jnp
out
xor
rcll
faddl
push
push
ss
adc
inc
ljmp
mov
repnz
test
dec
jo
cmpsb
or
mov
lcall
inc
leave
push
daa
xor
int3
mov
cmp
mov
ffree
arpl
cwtl
lcall
repnz
mov
mov
mov
int3
inc
push
push
inc
adc
stos
rcrb
bound
inc
mov
ret
and
std
xchg
fmulp
iret
roll
sbb
inc
aad
test
pushl
fwait
xor
pop
in
cmp
jno
cmp
dec
push
loope
stc
int3
mov
mov
mov
dec
push
push
or
sbb
pusha
push
sahf
push
mov
loopne
adc
movsl
out
mov
push
sbb
jns
xchg
sarl
into
popl
mov
lcall
jg
push
dec
pop
sub
rcrb
pop
lock
pop
mov
je
dec
repnz
jle
incl
fucomp
je
mov
pop
jge
xor
xchg
rcrl
fsubs
in
outsl
ljmp
mov
dec
negb
stos
mov
dec
faddp
sub
mov
and
lcall
and
jae
outsb
jl
jg
popa
jbe
cmp
xlat
stc
dec
sub
lds
incl
mov
sti
lahf
mov
mov
mov
sbb
lds
pop
pop
inc
mov
push
jecxz
lahf
jb
jg
repnz
popa
out
dec
enter
inc
mov
mov
adc
sbb
dec
mov
incl
jp
pop
jns
jb
ss
push
inc
fucomp
sbb
test
out
xlat
ljmp
dec
mov
call
cmp
cli
mov
cld
divl
or
inc
cmp
mov
inc
cli
repz
testl
pop
les
push
and
mov
lcall
push
test
cmp
ret
ss
push
stos
mov
int
jo
mov
sbb
dec
mov
loop
aad
mov
iret
pop
push
pop
ss
bound
inc
lret
insl
std
sub
add
dec
pop
or
dec
mov
mov
fstps
decl
in
sub
outsb
adc
test
test
cwtl
bound
idivl
popf
orb
xchg
inc
incl
enter
lea
shrb
xor
inc
cmpsb
mov
int3
mov
pop
decl
icebp
jle
xor
out
stos
and
xchg
out
xor
aad
fwait
adc
js
divl
push
pushl
and
add
loopne
ss
je
iret
sub
hlt
pop
sub
aaa
popa
dec
in
in
call
xor
mov
es
mov
pop
sbb
outsl
pop
mov
shl
xchg
call
test
inc
repnz
lss
add
push
sahf
aaa
xor
xchg
xchg
stos
scas
movl
repnz
push
movsl
in
test
adc
mov
xchg
std
or
ret
into
jmp
fldenv
cmp
pop
push
pop
mov
and
hlt
test
andl
sbbb
cltd
pushl
mov
sbb
les
scas
in
mov
pop
add
int
lahf
mov
in
rorb
and
and
test
push
stc
popa
cmp
pushf
mov
jbe
jmp
cmp
push
jbe
cmpsl
inc
insl
fs
movsb
xchg
push
and
enter
call
fnstcw
xor
dec
mov
cmc
add
dec
mov
mov
pop
call
mov
dec
lods
inc
jle
pushl
mov
je
cwtl
mov
xor
clc
inc
fcoms
pop
dec
mov
fstpt
xlat
repnz
pushl
push
mov
sbb
sbb
mov
fs
push
out
out
jne
call
sub
xor
insb
cli
mov
repz
mov
aas
inc
cld
cmp
jg
inc
movsb
sub
cmpsl
cmpsb
push
lock
jno
inc
or
js
xor
call
testl
sti
cmp
loop
outsb
jmp
mov
in
mov
call
and
into
pop
pop
mul
or
sub
fcomps
andl
call
fists
xchg
outsb
scas
mov
mov
dec
pop
mov
push
daa
sbb
cmp
aaa
notl
decl
lcall
mov
daa
mov
mov
insb
mov
lret
jo
scas
ljmp
fadd
mov
stos
cmp
mov
fidivrl
fmuls
loope
lcall
jae
ror
xchg
sarl
lock
adc
cmp
add
xchg
mov
adc
shlb
sub
lock
sbb
pop
sub
cmpsl
jmp
xor
dec
test
mov
fldcw
cmp
mov
sti
call
ljmp
or
sub
setnp
xor
adc
stos
and
jge
aas
mov
ljmp
loopnew
push
test
adc
popa
insl
jb
loope
mov
fstp
add
jecxz
jmp
pop
iret
and
fisttpll
incl
outsl
into
mov
cmpsb
dec
rol
rcrb
ret
dec
lret
jmp
mov
cmp
mov
pusha
jecxz
je
imul
dec
xor
pusha
das
xor
push
dec
and
cmp
or
sbb
fsts
cwtl
inc
pop
movb
sbb
ljmp
imul
xchg
frndint
mov
cltd
or
ss
jmp
lods
lock
push
ret
decl
aaa
lods
and
mov
pop
fildll
xchg
pop
paddusw
lret
mov
sub
call
fcoms
in
je
xchg
cmpsl
pop
mov
adc
fwait
loope
cmp
jle
inc
cmpsb
push
xor
xor
stc
mov
aam
jnp
add
jge
sahf
mul
pop
int
jmp
sbb
dec
mov
clc
lcall
and
cld
pushf
out
lret
and
fnstcw
inc
or
lds
decl
adc
or
aas
push
outsl
jns
pushf
and
jbe
mov
xchg
rclb
jmp
dec
hlt
jne
stos
fucomip
xor
call
movzwl
pop
mov
fwait
dec
leave
xchg
push
jmp
nop
push
push
jo
push
ficoms
and
mov
addl
dec
add
pushl
out
gs
test
ljmp
and
cmp
int
ljmp
into
and
loope
fnsave
mov
std
filds
dec
pop
scas
dec
mov
adc
lcall
add
loopne
enter
repnz
icebp
call
ss
outsb
pop
mov
jmp
pushl
jmp
jmp
or
lret
repnz
sub
std
shlb
mov
outsb
lods
inc
mov
mov
mov
inc
lcall
add
pop
push
loope
adc
call
jg
or
jno
xor
and
data16
mov
and
lcall
loop
add
mov
call
and
mov
pushl
fsubl
fwait
mov
addr16
xchg
fisttpll
stc
mov
mov
mov
sub
andl
dec
repz
into
cltd
stos
aad
jmp
decl
out
adc
add
faddp
aaa
jbe
iret
pop
dec
mov
sti
loop
jmp
pop
adcb
xchg
addr16
or
and
out
sub
pushl
or
sub
sahf
or
lods
out
loopne
cmp
in
jbe
xchg
imull
dec
jo
mov
pushl
add
icebp
xchg
and
outsl
sahf
dec
test
jns
xor
jmp
adc
xchg
aam
stos
jge
push
cmp
jnp
pop
cli
push
arpl
dec
xor
out
hlt
in
xchg
call
ds
loop
fdivl
loop
xor
sbb
or
popa
ljmp
dec
fcoml
or
adc
lcall
mov
loopne
sub
mov
lcall
push
aad
sbb
dec
aaa
sub
mov
daa
sub
ljmp
call
aam
out
test
push
push
fwait
jae
add
sbb
imul
push
ljmp
mov
cmp
dec
cli
inc
dec
adc
lret
and
xchg
mov
std
daa
lcall
out
js
mov
sub
xchg
sub
add
xchg
and
adc
or
lcall
outsb
xlat
pop
sbb
pop
fistpl
test
push
jae
outsb
and
mov
in
shll
pop
lea
cmpsl
sbb
rorb
in
outsb
sarb
jp
stos
scas
inc
scas
cmpb
push
xchg
aad
lcall
out
cmc
ja
add
and
in
arpl
jns
dec
mov
in
pop
mov
imul
push
inc
out
outsl
mov
aaa
addr16
enter
push
push
dec
in
out
pop
cmpsl
jbe
mov
std
cmp
mov
std
test
jne
or
xor
icebp
and
bound
mov
clc
incl
ja
repnz
test
fsubrl
in
mov
cmp
push
insb
ss
outsl
popa
hlt
sbb
fimull
pop
mov
lret
mov
bt
test
dec
mov
pushl
mov
test
push
out
rorb
cmpsl
lsl
out
fisubs
inc
les
cmpsl
sbb
mov
ret
pop
fs
lds
push
xor
shll
clc
sbb
add
lret
inc
jae
mov
out
jle
dec
ret
pushl
popf
jmp
mov
fwait
repnz
push
mov
add
in
xor
push
or
sub
mov
or
je
pushf
popa
gs
add
decl
jle
cmp
loop
push
cld
sarl
lods
xchg
movsb
dec
add
sub
popa
sahf
pop
mov
jnp
jmp
shl
jno
dec
adcb
roll
adc
js
push
sahf
xor
push
pushf
jp
ljmp
cmpsl
aam
ja
dec
jno
xchg
scas
xor
lahf
js
sti
cmp
call
stos
das
mov
add
sub
adc
lcall
inc
cmp
jmp
aam
xchg
mov
pusha
lcall
sti
dec
push
cs
pushl
adcb
or
lret
lret
or
lea
call
mov
mov
repnz
inc
sbb
jg
mov
and
adcl
sti
jae
imul
sub
push
decl
xchg
cmpsb
jo
pop
mov
lea
xlat
inc
and
pop
jg
icebp
sbb
ljmp
and
cltd
and
mov
psadbw
pusha
roll
cmp
dec
and
pop
pop
adc
xchg
xor
sbb
notl
icebp
es
ret
lods
popf
mov
popf
fidivl
pushl
sub
mov
fbstp
orl
xchg
pop
mov
mov
nop
mov
shl
es
pop
xor
fcmove
dec
arpl
aas
pop
and
push
je
fwait
dec
mov
popa
xlat
push
popa
inc
mov
dec
out
or
push
add
mov
xchg
ss
aad
shl
jnp
into
mov
stos
adc
les
add
leave
cld
call
lahf
push
jbe
cltd
or
fdivrs
decl
jb
jo
and
sti
push
add
mov
push
mov
push
insl
adc
jmp
cmp
sbb
sub
arpl
sbb
dec
pop
popa
mov
jecxz
je
ljmp
ljmp
adc
jne
mov
pushf
movsb
push
shll
cld
loop
out
cwtl
sti
sarb
test
mov
adc
mul
lret
insb
cmc
push
pop
call
jnp
cmp
inc
decb
adcl
popf
inc
mov
call
and
and
pop
daa
enter
push
pop
popa
jne
jo
orl
dec
out
in
ljmp
popf
sbb
daa
pop
call
xor
cmp
push
pop
bound
js
xor
int
ljmp
mov
mov
popf
xlat
movb
ret
inc
mov
stos
test
data16
stc
pushf
lcall
rorb
sbb
inc
in
jb
ret
push
inc
mov
pop
xor
data16
lcall
xchg
inc
sub
pop
cmp
fsubrp
jne
push
sahf
rolb
lret
jmp
mov
call
jecxz
or
sub
test
mov
cmp
fimuls
es
sub
inc
xchg
cs
inc
out
mov
idivb
cmp
ret
shrb
cmp
jg
push
incl
push
push
sub
or
lea
mov
pop
sbbb
mov
inc
mov
clc
sbb
repnz
xchg
aas
xor
movsl
ret
jb
adc
push
push
sbb
push
add
dec
sar
decl
scas
lret
es
lods
and
jmp
adc
and
and
inc
fs
call
sub
and
pop
xor
xchg
inc
inc
cli
sub
aaa
jns
wbinvd
xchg
pop
ds
xor
adc
in
push
mov
daa
cli
or
jg
or
aaa
jmp
sti
test
mov
lods
cmp
push
imul
xchg
outsb
lret
push
jne
fnstcw
push
pop
pushl
sub
mov
bnd
dec
cmp
mov
jae
mov
decl
xchg
mov
popa
inc
loope
push
push
ret
inc
ret
jle
subl
fidivl
incl
push
or
inc
mov
mov
hlt
out
mov
ret
adc
mov
push
sbb
ret
xor
jmp
sbb
cmpsb
ljmp
inc
or
jmp
sub
mov
sbb
lds
mov
scas
xor
fisubl
ljmp
adc
xor
dec
shrb
dec
mov
call
movsb
pop
hlt
call
daa
jbe
test
inc
std
in
roll
push
or
mov
iret
adc
lods
lods
call
int3
imul
cmp
rcr
xchg
add
scas
or
or
aas
jmp
ret
xchg
addr16
jo
mov
sbb
pop
pop
push
out
outsl
xchg
cltd
cmpsl
mov
jmp
call
mov
es
test
bound
add
outsl
mov
mov
mov
push
fmul
or
incl
push
or
stc
and
inc
inc
fs
mov
jge
cli
lods
ds
or
call
dec
xor
mov
test
cmp
mov
sti
sti
mov
xchg
pusha
sub
lcall
xchg
aas
into
and
and
mov
jno
mov
cmpsl
out
jle
daa
lahf
fwait
incl
mov
lods
pop
ret
and
inc
cmp
cmp
sbb
pop
mov
rol
outsl
inc
les
popa
sbb
push
sbb
sarl
aaa
push
std
mov
faddp
inc
push
lahf
pop
mov
stos
pop
les
incl
ss
xchg
inc
jns
jge
test
popf
rcr
bound
divl
out
lods
sub
lcall
xchg
or
xor
inc
mov
or
pop
mov
jno
jecxz
hlt
idivb
sub
lcall
cmpsb
jne
mov
stos
out
cmpsl
cltd
mov
icebp
mov
push
sub
call
in
jp
or
mov
cmp
outsb
shlb
mov
popf
add
call
call
jne
lea
data16
dec
outsl
hlt
dec
mov
pop
push
lahf
ret
add
cmp
in
lods
jno
mov
call
sub
jbe
mov
xor
dec
gs
into
imul
jp,pn
inc
idiv
decl
sub
lahf
sbb
scas
mov
or
and
xchg
jmp
adc
pop
mov
jnp
mov
mov
jmp
outsb
sbb
mov
adc
mov
ljmp
stc
jbe
push
cmp
pop
or
jbe
insb
mov
lods
sti
daa
fistl
imul
lea
push
or
mov
or
and
imul
and
aas
jg
lods
xor
pushl
mov
bound
imul
les
pusha
sahf
imul
xchg
lcall
inc
out
outsb
testl
adc
or
push
xchg
je
adc
jmp
filds
hlt
or
sbb
loopne
cmc
inc
lock
decl
xchg
pop
xor
in
sub
lds
lret
sbb
dec
xlat
xchg
cmpb
sti
jmp
in
int3
push
push
nop
daa
lea
pop
mov
push
inc
pop
mov
sarb
call
mov
insb
or
or
xorb
outsb
sahf
mov
addr16
decl
and
adc
ds
sti
jl
lods
mov
mov
and
mov
notb
pushl
mov
insl
mov
cmp
mov
lahf
mov
xchg
out
mov
mov
mov
cmpsb
cmp
incl
pop
rcrl
mov
clc
clc
imulb
dec
push
push
sbb
jae
sub
inc
inc
js
dec
ljmp
and
jbe
popa
fistl
and
pop
pusha
push
mov
out
mov
jno
xor
int
push
lock
mov
cwtl
xchg
mov
and
cmp
jnp
or
dec
inc
adc
add
lcall
int
out
cmp
outsl
mov
fnstenv
jecxz,pn
in
ljmp
idiv
lcall
movsb
push
fmull
data16
or
nop
pushf
mov
sbb
adc
dec
cmp
sbb
ret
cmc
and
mov
pop
arpl
mov
pop
xchg
icebp
jnp
rorl
insb
adc
inc
inc
pushl
lret
push
mov
push
add
fmuls
cmpsl
fadd
test
call
push
lea
hlt
push
push
lds
mov
jno
xor
out
xchg
sub
sub
dec
das
in
sub
jno
sbb
mov
cmc
jecxz
jb
mov
dec
lds
in
pusha
cld
xchg
pop
fs
jl
test
adc
aad
aaa
push
or
and
lret
xchg
jle
call
adc
loopne
xchg
and
xor
out
sub
jp
lods
test
test
dec
fs
xor
daa
xlat
aaa
xchg
adc
pushl
inc
js
add
or
out
mov
adc
and
testl
jmp
pop
sbb
xchg
mov
jle
inc
xchg
cmp
ret
clc
or
popa
iret
std
or
mov
dec
jp
push
aad
dec
cmp
popa
ret
pop
je
in
mov
imul
inc
cltd
push
stos
into
cmp
mov
ljmp
mov
push
ret
mov
jge
dec
loope
pop
add
dec
int
cmp
lcall
adc
int3
mov
mov
pop
fwait
xchg
lcall
dec
push
jns
dec
stos
test
movsl
nop
call
add
sbb
repz
inc
inc
inc
sub
jle
call
xchg
dec
inc
xor
incl
hlt
shlb
cld
pop
movsl
mov
cmovge
mov
out
mov
std
mov
or
jecxz
call
leave
mov
push
dec
ljmp
aas
mov
pop
mov
jp
addl
xchg
dec
fwait
notb
hlt
mov
fstpl
xchg
stos
mov
cmp
and
lcall
icebp
jg
add
push
xchg
test
out
aaa
daa
cmpsl
das
and
push
lret
push
call
repz
cltd
sub
in
cmp
inc
pop
mov
icebp
jl
cmp
daa
aad
push
out
sbb
push
jp
pop
inc
sub
in
mov
dec
je
cmp
test
jmp
jp
add
sahf
rcll
add
jno
dec
jmp
sub
es
shrb
lcall
rcr
push
mov
mov
das
daa
sti
jb
int3
lea
mov
loopne,pn
ljmp
cmp
jnp
mov
sub
pop
lret
xor
lea
movsl
insl
ss
dec
cmp
fwait
or
in
inc
inc
mov
push
imul
or
in
ret
lahf
call
push
enter
mov
mov
mov
call
pop
andb
pushl
mov
rclb
dec
push
push
mov
jae
lcall
movsl
xchg
adc
pop
incl
pop
testl
pop
dec
pop
or
movsb
testb
aad
sar
call
stos
clc
test
loopne
add
pop
in
cmc
xor
out
out
or
push
and
sub
lcall
dec
stc
js
loope
lahf
xchg
les
sbb
lds
lgs
inc
fcoms
fstpl
inc
js
and
aas
inc
pushl
pop
cmp
inc
inc
lods
or
jb
lock
jmp
xor
pop
ljmp
rclb
xchg
xchg
stos
sub
pop
sbb
lcall
push
in
dec
aad
dec
arpl
ljmp
xor
inc
mov
jmp
outsb
loope
mov
fstps
inc
xor
cmp
and
enter
cltd
xlat
ljmp
loope
sbb
int3
cld
push
in
jnp
mov
jb
push
push
insl
mul
mov
inc
mov
aas
cmp
pushl
sbb
cmp
inc
jge
ret
and
out
out
and
dec
data16
call
lods
cmp
mov
pop
inc
xor
push
clc
adc
aam
add
inc
mov
mov
cltd
push
dec
lock
push
loop
fwait
jno
sahf
fbstp
ljmp
mov
dec
jo
testl
out
rcll
sbb
push
jle
mov
lods
jo
sbb
movsb
int3
sbb
mov
negl
adc
inc
add
call
dec
jge
mov
andl
repnz
or
lcall
mov
popf
xor
in
sbb
popa
mov
sbb
call
rclb
dec
mov
jmp
xchg
mov
test
jns,pn
jp
and
add
subl
and
lcall
cs
add
sub
xor
inc
out
dec
dec
scas
xrelease
outsl
sub
pushl
je
xor
jp
test
ja
hlt
inc
jo
cmp
out
psrld
clc
cmp
pop
hlt
loope
and
adc
add
and
cmp
add
sar
pushl
daa
jecxz
adc
sbb
push
xor
dec
jg
mov
add
cvtdq2ps
int
add
repz
jmp
mov
dec
and
outsl
jmp
mov
mov
xchg
inc
cld
lcall
push
push
inc
xlat
js
pop
mov
ret
inc
mov
sub
ss
stos
pop
leave
cltd
mov
out
decl
cwtl
pop
mov
jl
orl
add
pop
push
cmp
jecxz
popf
jl
ljmp
jo
sub
mov
xor
fs
mov
jbe
xor
jbe
clc
mov
xchg
repnz
ds
mov
imulb
notb
popa
in
cli
stos
into
xchg
cmpsb
adc
sbb
std
dec
pcmpgtw
sti
fs
jmp
leave
sub
or
push
mov
cmp
xor
mov
jnp
loopne
in
xchg
push
pushl
repnz
test
push
xchg
push
das
in
xchg
fldcw
lahf
clc
push
dec
xchg
add
pushl
test
pop
aad
gs
mov
std
sub
sbb
divl
lcall
ret
out
sub
test
stos
push
adc
scas
in
xchg
jno
push
cmpsl
push
jnp
js
call
and
leave
mov
std
sbb
decb
add
nop
cld
shl
lret
call
sbb
mov
mov
push
addr16
adc
jle
push
xor
test
decl
mov
cli
jp
pop
outsl
shl
clc
xchg
movzbl
movsb
pop
sahf
es
lcall
or
xlat
push
inc
pop
jbe
inc
sbb
clc
js
xor
lahf
ds
mov
inc
or
loopne
jne
dec
jo
shl
adc
sub
sub
lock
mov
xor
fbstp
pop
add
adc
push
mov
pop
dec
sbb
lds
xchg
pop
adc
lcall
movsb
pop
xor
fcomp
jb
mov
and
add
add
mov
call
pushf
ret
mov
mov
add
aas
push
pop
sbb
les
icebp
inc
dec
add
dec
add
sbb
push
fsubrp
jnp
jecxz
mov
aad
das
jg
pop
cmc
or
aaa
dec
call
test
std
mov
mov
pop
or
or
mov
jo
push
call
test
add
pusha
and
outsb
jno
cmp
cmp
imul
fcmovnbe
pop
movb
sbb
jno
fcmovbe
xchg
divb
std
fsubl
fs
pop
sahf
pop
mov
stc
lret
mov
inc
inc
mov
js
adc
lods
adc
mov
fldt
lcall
mov
movsbl
repz
push
lahf
pop
pop
arpl
lcall
jno
sub
push
mov
jo
lds
mov
xor
call
mov
jg
and
mov
test
addr16
in
fnstsw
xor
mov
decl
xchg
iret
mov
mov
mov
ret
scas
inc
rcr
xor
cld
mov
call
cmp
int3
cmc
cmp
mov
mov
xchg
je,pn
and
loopne
mov
call
dec
mov
jmp
lock
or
sbb
int
arpl
jge
jmp
add
ljmp
cmp
clc
xor
or
inc
mov
jle
ss
push
add
lahf
mov
mov
and
xor
mov
popl
imul
insl
push
inc
sub
mov
lods
mov
and
jmp
ds
dec
add
mov
fildl
loope
mov
fucom
outsl
xchg
imul
movsb
xchg
mov
xchg
cmpsl
xchg
stc
mov
jmp
dec
and
movsb
inc
rcrb
lock
jl
aam
fdivrs
into
cmpsl
in
scas
ljmp
cmpsl
call
cwtl
sbb
in
es
fisubrl
aad
pop
ret
mov
call
dec
jbe
iret
sahf
or
and
push
jg
lret
dec
test
pop
pop
fistl
jnp
jmp
xor
or
cmp
pusha
push
mov
mov
lret
push
mov
mov
pop
mov
xchg
mov
cwtl
xorb
movl
mov
out
mov
jg
or
mov
cvtps2pd
add
test
iret
dec
sub
or
call
not
stos
sub
inc
fs
sub
jge
sahf
jecxz
jo
xor
incl
or
int
imul
icebp
mov
and
adc
ret
xor
sbb
incl
enter
ret
sub
scas
dec
pop
jns
pop
fcmovnb
push
cwtl
fisubs
ljmp
nop
out
std
test
rolb
fsubrp
lcall
add
stc
mov
in
orl
adc
out
in
loop
fadds
ror
mov
add
out
or
mov
lret
jb
scas
movsl
sub
jmp
stos
out
adc
cmp
repnz
push
mov
fs
outsl
imul
jge
cmp
mov
dec
pop
aaa
push
call
add
xorl
and
call
mov
pop
gs
add
rcrb
jne
ficompl
and
jmp
andb
movsb
xchg
popf
and
js
and
cmc
mov
xor
push
mov
cmpsb
pushl
or
push
adc
outsl
je
and
jns
jge
out
jmp
popa
mov
and
add
mov
int3
scas
xchg
mov
push
cmp
sub
enter
ljmp
and
call
inc
movntps
cmp
adc
lcall
sub
rolb
dec
leave
es
xchg
testl
dec
pop
inc
pop
fisubs
cmc
das
sub
fdivr
daa
adc
sub
dec
cmc
jle
inc
fidivrs
cwtl
les
adc
nop
incl
lock
jge
dec
pushf
ss
subl
lret
push
fidivrs
fwait
inc
subl
xor
dec
loopne
cltd
adc
add
lods
cld
xor
sub
shll
call
xchg
xor
fisttpl
addr16
dec
xor
xchg
jg
sbb
aas
inc
incl
sbb
std
test
into
rcrl
je
adc
int3
xchg
inc
inc
fdivrs
jno
not
popf
gs
jge
inc
stos
jae
push
pop
call
clts
inc
into
jmp
repnz
mov
aaa
stos
aas
xchg
js
adc
pop
test
sti
out
nop
lahf
pop
outsl
nop
loope
sar
lcall
or
outsl
mov
in
push
in
data16
mov
add
gs
jmp
jmp
mov
add
mov
cmpl
lcall
and
inc
idiv
mul
lods
daa
mov
insb
arpl
jmp
cld
sarl
mov
rsqrtps
ljmp
aas
mov
in
dec
out
int
cltd
adc
mov
loop
mov
push
dec
mov
cld
rorl
and
sbb
add
mov
adc
dec
add
incl
add
in
aad
fiadds
loop
push
enter
adc
mov
or
icebp
out
jle
cld
insb
inc
push
dec
lcall
push
ffreep
mov
jg
fists
loopne
sbbl
int3
pop
push
adc
les
lods
clc
and
ja
adcb
movsl
pop
into
pop
mov
mov
push
andl
insb
jle
out
les
dec
popa
popl
mov
xchg
xor
xchg
cmp
xchg
xor
inc
pushl
inc
movsb
test
cmc
pop
cmp
adc
pop
mov
push
int
fs
add
leave
jg
call
fldcw
adc
pop
movsl
mov
addl
mov
rcl
enter
iret
pop
inc
imul
pushl
mov
mov
sub
lock
mov
decb
rorl
call
push
add
popa
call
jmp
sarb
or
xchg
lea
cwtl
cmp
sbb
mov
jmp
pushl
addb
lea
dec
js
pop
push
ja
jae
fdivs
push
call
mov
pop
shl
sbb
sbb
jne
pop
lea
mov
mov
mov
jge
dec
pop
lahf
adc
push
and
mov
daa
push
push
ret
pop
mov
push
cmp
decl
rcrl
pushf
pop
outsl
push
clc
jle
mov
lret
push
aaa
mov
mov
in
mov
cmp
ljmp
fisubl
outsl
xchg
sahf
loopne
push
pop
jecxz
jle
jbe
xor
xchg
xchg
int
call
addr16
xchg
dec
psubd
cltd
adc
cmp
sbb
and
arpl
lcall
sbb
xchg
sub
pop
cmp
adc
cld
or
scas
pop
lret
adc
pop
popa
out
xlat
mov
ficoml
aas
jp
gs
pushf
dec
xor
xor
dec
xorb
jno
jle
xchg
gs
call
popf
adc
sub
bound
dec
sub
sbb
mov
pushl
jne
xchg
lods
adc
pop
out
mov
lds
push
into
lcall
jne
mov
pushf
lcall
dec
mov
mov
xor
je
inc
cmpsb
test
test
test
aam
mov
sub
icebp
jnp
imul
jp
icebp
mov
add
inc
cli
and
rcll
xorb
fsubl
inc
mov
repnz
in
pop
or
cmc
mov
sub
shrb
push
lcall
and
mov
add
adc
rorl
mov
sbb
or
and
and
mov
sub
cmp
or
pop
out
mov
pushl
fcmovu
fbld
dec
inc
das
sbb
loope
cmp
sbb
jbe
call
loopne
and
dec
sbb
sahf
mov
clc
not
adc
xor
in
cmpsb
jg
ficoms
dec
xchg
jb
mov
xchg
insl
cs
push
test
aaa
ds
hlt
cltd
mov
insb
call
xorl
sbb
inc
push
ss
sub
pop
add
push
push
je
cmpsb
fnstsw
stos
ror
insl
mov
loop
push
pop
gs
push
leave
lods
push
push
js
ljmp
call
stc
loop
repz
xor
dec
lods
stos
lcall
inc
icebp
mov
call
pop
in
sarb
cltd
ds
or
iret
xor
xor
xchg
dec
inc
pop
outsl
jmp
mov
mov
es
xor
mov
mov
das
dec
jl
loop
pop
imul
iret
lock
xor
pop
mov
xchg
push
fldt
push
jns
sti
in
sbb
in
and
push
icebp
xchg
mov
arpl
lea
decl
cmpsl
pusha
decl
pop
cltd
dec
dec
mov
mov
jb
xor
xchg
lcall
ljmp
mov
outsb
mov
and
aaa
outsl
andb
mov
add
fistl
xchg
adc
rorb
mov
mov
push
xchg
xchg
jae
call
insb
fisttpll
inc
inc
push
add
pop
pushf
divl
in
mov
mov
and
jmp
pop
out
pop
push
int
inc
xchg
ds
out
adc
js
out
jo
sub
cld
call
push
daa
test
mov
push
jl
inc
aad
test
frndint
inc
ret
lods
cmpsl
mov
or
decl
mov
fnsave
add
inc
lods
adc
mov
mov
or
sti
movsl
addr16
test
jne
mov
push
pop
mov
fsubr
pusha
inc
loopne
cmp
cmpl
jmp
das
pop
in
pop
mov
insb
mov
push
sub
mov
inc
fs
data16
jmp
out
fidivs
fcompl
add
push
fbld
imul
lret
mov
dec
into
add
incl
cmc
cmp
push
inc
inc
stos
es
ficoms
mov
fcoms
mov
in
in
push
pusha
cli
call
ds
addb
and
inc
jno
sbb
mov
movsl
fmulp
lds
inc
jnp
aaa
inc
cmp
in
add
lret
jne
popa
jg
imul
push
pop
fstps
in
add
decl
mov
enter
rolb
mov
rol
mov
gs
in
scas
or
push
push
pop
dec
pop
add
in
or
xor
stc
cwtl
mov
add
lods
jmp
add
inc
out
pop
push
daa
adcl
mov
out
jno
inc
cld
movsb
pushl
ss
pop
scas
outsl
in
push
sub
mov
inc
inc
stos
inc
addr16
add
or
pushl
mov
inc
inc
pop
data16
mov
pop
ljmp
sub
dec
and
shlb
data16
lcall
imul
push
repz
pop
ret
std
ret
pop
sub
out
out
sub
jmp
je
imul
mov
pushf
rolb
aas
xor
sub
mov
add
addr16
xor
jl
mov
hlt
mov
decl
in
jb
inc
hlt
pop
pop
xor
into
mov
xchg
xor
div
loope
jmp
pop
cmp
and
mov
xchg
rcrb
call
dec
mov
jge
add
decl
push
inc
dec
cld
jnp
testb
je
inc
adc
cmp
mov
push
jo
fucomip
sub
mov
stc
sub
or
jb
rcrb
xchg
adc
pop
loopne
or
jle
js
and
imul
arpl
sbb
rcrb
xor
dec
and
xchg
cltd
pushf
rclb
adc
cld
mov
push
add
cmp
push
testl
pusha
jp
xchg
push
mov
cmp
mov
jle
scas
lret
push
call
imul
jmp
lret
or
stos
jp
adc
and
ljmp
sbb
sub
mov
lcall
fdivrs
mov
jno
stos
hlt
out
xor
inc
sbb
sbb
decl
pop
test
iret
dec
cmp
scas
mov
push
dec
xchg
and
xor
push
call
push
subl
adc
imul
jp
lcall
jnp
mov
shll
inc
cmp
shll
daa
cmp
push
mov
in
xchg
call
fcomps
adc
popf
popf
xchg
cld
into
jecxz
or
imul
sub
and
and
ljmp
call
mov
test
mov
cmp
xor
mov
stc
xor
fisubrs
lcall
aad
inc
inc
in
adc
mov
das
cli
xor
in
cmp
inc
lea
lock
cmp
test
je
out
in
jae
movsl
push
stos
sbb
push
cmpsl
repz
addr16
in
jmp
pavgb
loop
sub
sub
adc
mov
adc
loop
loopne
dec
sbb
lcall
out
mov
nop
push
xor
bnd
inc
xchg
jne
repnz
pop
lea
mov
rcl
jb
incl
push
mov
push
xchg
orl
leave
xchg
xchg
push
adc
xchg
fs
decl
cmpsl
mov
jmp
sbb
inc
or
fsubl
mov
adc
inc
jo
decl
dec
mov
sbb
enter
sub
cmpsb
push
mov
xchg
sub
pushl
or
mov
ljmp
add
dec
aam
cld
mov
stos
dec
ret
lcall
aad
pop
cli
and
stos
aam
lea
das
pop
xchg
sub
out
std
loop
test
dec
pushl
add
jg
dec
or
aas
mov
cmp
xchg
push
scas
adc
outsl
aad
roll
xchg
add
add
mov
pop
sbb
adc
inc
fstp
mov
dec
mov
sub
shrl
sub
gs
mov
jnp
or
mov
sar
addr16
decl
adc
addr16
cmc
xchg
adc
imul
pmulhw
ljmp
jmp
mov
daa
sbb
mov
inc
adc
aad
or
cmpsl
sub
ds
inc
jge
cmp
jle
nop
ud0
incl
dec
mov
rorb
push
jno
repnz
dec
mov
in
xchg
mov
pop
faddl
ljmp
xlat
cmp
jns
xor
dec
mov
adc
filds
daa
jl
xor
or
lea
add
dec
push
in
in
push
sub
xchg
push
iret
test
mov
and
push
mov
ja
fbstp
jo
incl
jg
les
enter
cmpsb
hlt
push
pop
sub
lods
cwtl
sub
outsb
out
push
or
js
mov
mov
jno
xchg
scas
cmpsl
xor
add
xor
pop
xor
sub
sub
decl
jae
adc
jle
aaa
dec
xchg
mov
shll
loope
ljmp
pop
jge
fidivl
popa
jo
ja
inc
cmp
bound
pusha
mov
inc
adc
inc
ljmp
jecxz
repz
sub
mov
ret
lea
sti
mov
ljmp
pop
ss
scas
push
adc
gs
sub
ret
setge
jnp
outsb
decl
dec
fsubr
ret
ljmp
cmpsl
ret
std
adc
mov
ds
xchg
stos
std
test
dec
movsl
lea
call
movsl
xor
popf
daa
shrl
and
dec
push
shlb
inc
cmp
sub
push
push
sbb
cmp
fs
adc
lods
lahf
ljmp
cmp
pop
xor
call
or
test
fwait
outsl
pop
in
jl
into
push
inc
imul
popf
incl
sbb
loopne
add
add
add
adc
jmp
inc
jb
repz
sti
push
fdiv
mov
mov
stos
lods
inc
popl
iret
jge
adcl
adcl
decl
fdiv
xor
movsl
mov
push
pop
add
mov
push
dec
fsubr
mov
pushl
sbb
cmp
arpl
xchg
xorb
mov
jge
fdivrs
pop
repnz
inc
sbb
std
sbb
jl
xchg
jno
frstor
lods
xchg
mov
sub
mov
and
mov
xor
fsubp
aad
push
xor
cmp
jo
sub
mov
dec
mov
inc
push
cld
pusha
icebp
jp
fldl
dec
stos
data16
ss
outsb
mov
xchg
std
inc
adc
pop
fadd
ss
fisttpll
daa
stos
outsl
aas
mov
test
xor
pop
fdivrl
mov
js
ljmp
dec
daa
jae
jne
xchg
inc
leave
sbb
loope
jmp
jge
inc
pusha
pop
cli
adc
shl
adc
push
pop
mov
in
push
inc
inc
xor
in
in
pop
and
clc
xor
in
sahf
push
xchg
pop
out
xor
jmp
sahf
scas
iret
out
outsl
cmpsb
movsl
test
in
cs
mov
int3
push
mov
sub
lock
lcall
cmpsl
mov
lret
mov
jb
clc
data16
ljmp
jecxz
ja
lods
insb
push
fdivr
mov
push
lea
in
pop
jmp
cmp
jb
into
arpl
mov
push
xlat
mov
stos
in
dec
and
jg
lds
pushf
add
mov
and
inc
stc
dec
cmp
aaa
dec
ljmp
repnz
xor
pop
dec
push
add
xorb
mov
pushl
icebp
into
jmp
mov
lods
scas
pop
hlt
xchg
adc
sbb
int
shll
fisubs
jmp
and
stos
mov
or
icebp
rcrl
mov
mov
lcall
dec
test
adc
pop
sahf
push
loope
lcall
out
mov
mov
xchg
ljmp
popa
mov
scas
pop
add
jle
and
std
dec
inc
push
das
inc
cmp
enter
sub
lcall
or
sub
xorb
lahf
xchg
sbb
shl
ss
popa
sub
ljmp
rcrb
adc
adc
push
xchg
jo
xchg
out
sbb
daa
inc
loopne
jge
add
sub
call
xchg
cmpsb
pop
shl
insl
add
jne
leave
test
adcb
pop
jge
or
out
push
mov
incb
push
xchg
imul
imul
pushl
inc
lret
xor
loop
das
je
sub
cmp
pop
cmp
jp
mov
in
aas
out
pop
xchg
add
jge
xchg
sbb
enter
lods
mov
ljmp
outsl
pop
mov
cmpsl
das
adc
mov
sbb
sbb
adc
pushl
pop
xlat
push
faddl
pushf
cmpsb
pop
push
mov
inc
lcall
decl
fiadds
cmp
out
out
add
out
jge
lock
jmp
mov
cli
lahf
imul
or
push
or
pop
adc
mov
daa
or
pushl
das
push
mov
and
cs
lods
sub
lcall
sbb
imul
lcall
pop
sub
lret
loope
jp
jo
jns
test
call
mov
pushl
sub
pushf
popf
push
inc
test
and
xor
and
dec
inc
push
icebp
lods
addb
mov
inc
pop
pop
cli
inc
jge
mov
cmp
sbb
dec
shl
dec
fistl
or
or
inc
sub
cmpsb
inc
es
fadds
mov
das
sti
dec
inc
movsl
call
adc
decl
ret
or
mov
xchg
push
mov
push
int
jne
sub
and
cmp
sahf
mov
mov
inc
arpl
jmp
mov
push
and
rcrb
call
adc
inc
jne
scas
mov
mov
xchg
mov
sti
cmp
adc
incl
cmpsl
ret
add
loop
fcmovu
decb
push
cmpb
or
das
inc
push
jmp
mov
lcall
arpl
push
dec
jle
cmp
jmp
sbb
cwtl
cmp
pop
xchg
cmp
push
bound
jae
dec
jmp
and
fwait
xor
aam
out
mov
incl
xor
pop
add
stos
mov
popa
imul
out
mov
jnp
call
and
lahf
sub
outsl
fidivrl
pop
aas
int
push
push
jae
jl
mov
stc
sub
out
jmp
stc
insb
adc
xchg
jbe
xchg
cli
in
sub
lods
xchg
push
mov
hlt
dec
shl
div
inc
inc
lcall
or
es
pop
sbb
xchg
and
sub
jno
les
jns
dec
pop
gs
decl
mov
scas
sbb
xchg
aas
ret
and
jae
loopw
out
push
les
ljmp
cltd
add
mov
scas
outsl
rorb
ret
hlt
in
shrl
pushl
js
out
stos
xlat
sbb
sbb
mov
fistps
pop
roll
cld
sarb
stos
idiv
mov
mov
enter
shl
jne
insl
or
jmp
jnp
scas
pop
or
pop
mul
pushf
adc
mov
mov
popaw
push
cmc
call
out
mov
sub
call
inc
sbb
sbb
sub
mov
je
hlt
mov
in
das
mov
mov
and
test
fldt
mov
sbb
sbb
inc
lock
xchg
pushl
call
xor
xor
icebp
sbb
sahf
and
sbb
loope
repz
push
decl
push
repnz
aas
inc
jg
mov
loop
sub
xchg
stos
push
lahf
pop
lcall
inc
pop
daa
mov
adc
jecxz
sarb
adc
dec
inc
adc
sub
sti
inc
aaa
pop
ret
loope
adc
xor
pop
push
sti
sbb
incl
pop
cmpsl
mov
divl
and
loope
inc
xchg
mov
cmp
mov
mov
call
cmp
les
arpl
insl
mov
arpl
inc
lds
jle
adc
adc
push
adc
pandn
lock
jnp
add
pop
pop
loopne
shrb
dec
xchg
jbe
pop
outsl
in
push
jge
insl
repnz
gs
cmp
fsubl
dec
sti
mov
je
push
jl
ljmp
jb
mov
add
pop
add
jl
mov
lcall
fidivrs
das
mov
xor
cmp
cmp
pop
jg
movsb
mov
lret
pop
ljmp
daa
xlat
or
loop
std
or
push
xchg
fs
or
dec
rcl
ss
and
ljmp
scas
test
push
loopne
shl
or
out
das
ret
jno
test
mov
jmp
push
and
aad
push
jne
outsb
mov
jbe
lret
movsb
daa
push
mov
js
ud0
jmp
testb
cmp
into
mov
rol
sbb
or
dec
decl
inc
fs
inc
stos
mov
aas
out
lahf
add
mov
jle
xlat
pop
popa
pop
fisubrl
inc
cmp
jns
mov
add
jle
xor
leave
nop
das
leave
inc
adc
es
mov
inc
inc
loop
mov
dec
incl
sbb
mov
cltd
fnstsw
jecxz
sbb
loop
ja
dec
jns
cmp
lods
lahf
or
decl
aas
rol
cwtl
clc
jae
sbb
push
add
jmp
fimull
lods
enter
lcall
cmp
js
xlat
dec
emms
lret
shld
clc
shrl
xor
pop
pop
adc
jb
adc
dec
sub
mov
rclb
xor
ljmp
lcall
mov
add
jmp
mov
aam
sbb
int3
jmp
xor
subl
sahf
inc
setns
mov
cmpsb
xor
lods
push
add
jg
fmull
ss
inc
rcrb
add
aam
cmp
pop
sbb
sbbb
scas
mov
adc
mov
cwtl
test
in
ds
loop
inc
test
dec
push
scas
push
sbb
dec
push
pop
push
je
lret
fcoml
inc
pop
jge
push
jg
int
incl
stc
adcl
pusha
push
fisubl
xchg
shrl
sbb
push
ret
ljmp
pop
dec
jl
xchg
mov
js
cmpsb
dec
mov
xlat
or
int3
outsl
xchg
cmc
mov
xor
decb
icebp
xchg
cld
mov
addr16
or
push
xlat
inc
dec
pmullw
pushf
imul
pushl
add
push
dec
cs
ljmp
add
mov
repnz
xor
psubusw
ljmp
je
mov
mov
inc
add
outsl
sahf
push
fwait
sbb
sbb
push
call
push
les
lcall
int3
or
inc
push
in
stc
xchg
inc
push
incl
fistl
test
cmp
push
hlt
loope
je
sahf
addb
dec
jne
and
pop
jo
pushl
pusha
cmp
outsb
push
fldt
call
inc
sbbl
cwtl
xor
pop
fs
loope
xor
mov
pop
mov
pop
fmulp
sbb
std
insl
xchg
dec
aam
in
sbb
jo
push
test
cmp
sti
cltd
jle
xchg
dec
xchg
adc
mov
lock
sbbl
mov
cmp
aas
push
sub
rcr
and
and
outsb
pop
push
loopne
add
mov
add
push
jmp
fsubrl
mov
imul
fdiv
stos
push
in
ret
bound
es
dec
push
jmp
jno
daa
out
adc
std
iret
jo
sub
dec
mov
in
jno
sub
mov
in
dec
cli
ja
mov
mov
mov
jb
push
xchg
pushf
add
fcmovnb
adc
ret
pushl
aam
mov
xor
xchg
xchg
mov
int
sbb
cmp
cmp
fsub
and
mull
add
mov
pop
inc
cmp
mov
lcall
push
push
jno
fwait
add
dec
and
mov
aam
push
scas
xor
lcall
adc
lcall
icebp
data16
fimuls
mov
or
inc
pop
add
pop
mov
insb
or
xor
js
push
and
insl
mov
aaa
ja,pt
cs
xchg
push
idivl
and
movsb
jae
push
testb
shrl
rcrb
daa
jno
test
lds
scas
fistpll
jl
pop
adc
incl
mov
imul
push
sahf
jb
or
cmp
mov
sahf
or
std
inc
mov
imul
aam
cmp
sub
lret
mov
insb
out
lcall
arpl
inc
fwait
sbb
shl
cmp
fstl
in
mov
lret
aad
fstl
push
fiaddl
mov
xchg
or
insb
icebp
inc
inc
dec
push
sahf
sbb
jmp
push
lcall
cmc
xor
shrb
stos
adc
lret
sahf
sbb
jge
jp
icebp
cmc
sbb
ljmp
or
cld
jmp
ds
add
lcall
outsl
dec
hlt
dec
neg
xor
mov
push
cwtl
test
jno
ret
dec
jb
or
dec
inc
shll
out
mov
sti
and
fsubl
jg
sbb
mov
test
movsl
xor
call
hlt
lret
pop
cltd
cwtl
insl
dec
push
fcompl
jmp
pusha
xor
jmp
imul
push
aam
mov
insl
sbb
sbbl
jmp
mov
jae
fdivl
ljmp
shll
jb
adc
xor
cmpsl
push
fs
mov
jle
pop
sub
insb
mov
gs
call
push
call
jmp
mov
aad
cmp
xor
inc
clc
popa
call
shrl
icebp
pushf
dec
or
mov
jne
mov
lret
ret
add
loope
push
outsb
decl
jmp
pop
inc
outsb
loopne
inc
mov
insl
pop
push
push
outsb
aaa
shr
inc
sahf
call
and
lds
mov
ret
loopne
lods
insl
lods
es
dec
fs
ljmp
rcll
test
cmp
push
add
and
xor
fsubs
nop
adc
or
lcall
adc
add
bound
cmp
or
jns
jmp
shrb
arpl
xchg
push
pusha
pop
cmp
push
ja
subb
in
pop
inc
sub
call
stc
jg
xchg
jg
movsb
hlt
and
testl
sbb
fwait
leave
or
jmp
call
or
test
mov
cmp
xchg
mov
jg
jmp
lea
das
out
aaa
fs
pop
stc
mov
lcall
stos
jl
sti
mov
pop
sbb
fcmovb
mov
pop
ljmp
std
sar
ljmp
push
loop
jbe
push
xor
fstps
stos
jo
ljmp
insl
inc
jmp
jmp
add
adc
add
mov
mov
jg
mov
mov
mov
nop
ret
sub
or
mov
sbb
ds
rcll
xchg
test
incl
into
jg
out
xchg
insb
jle
ficompl
fisttpll
stos
xor
sbbb
aad
lcall
jmp
mov
jle
test
push
loop
sbb
inc
aad
cmp
pop
pop
jno
and
adc
decl
ljmp
push
jge
imul
cmp
dec
into
fwait
push
scas
enter
sti
jo
lret
sti
mov
pop
pusha
inc
repnz
daa
mov
lret
in
aaa
jmp
aaa
pop
xchg
fisubs
push
cmp
adc
push
jmp
push
mov
xor
enter
mov
sbb
cmp
sahf
lock
push
daa
mov
jmp
mov
xchg
jmp
cmp
mov
jb
cmp
jae
sub
stos
cmp
adc
incl
mov
adc
and
fsubs
je
jge
test
mov
aas
call
jmp
cmp
cltd
mov
or
mov
push
xor
sbb
or
call
inc
mov
adc
or
lret
loope
lea
incl
jno
mov
lods
daa
lds
push
dec
inc
and
popf
jns
aaa
decl
out
js
jno
mov
das
push
xchg
cltd
mov
mov
aas
add
fimuls
push
in
jmp
inc
das
loope
jecxz
je
push
cli
insl
lock
js
mov
xor
xchg
fwait
dec
call
out
push
ja
mov
xlat
rcr
dec
add
daa
lods
std
jae
rcrl
iret
sub
pushl
sub
hlt
xor
aam
sbb
aas
nop
jne
fisttpl
std
test
cmpsb
scas
cmp
dec
js
mov
push
jle
cmp
insl
shll
add
scas
lds
in
shrl
jne
loope
adc
ljmp
xchg
test
scas
xchg
dec
mov
fsts
push
push
pop
mov
add
pop
gs
jmp
aam
adc
cmp
je
jmp
sbb
shrl
cmp
test
cmp
ljmp
fs
jge
repz
xor
bound
imulb
cmp
das
xchg
add
jbe
adc
decl
pusha
arpl
and
rcrl
dec
stc
pop
cmp
dec
repz
xor
mov
loopne
movsb
test
arpl
insb
sub
sti
mov
xor
decl
dec
inc
insb
int3
in
cmp
pop
add
movsb
add
jmp
mov
icebp
inc
insb
add
cltd
dec
movsb
les
cmp
test
push
loopne
aas
sbb
call
push
xchg
mov
aas
jb
jecxz
jb
rcr
sti
mov
lods
push
sbb
sub
das
jl
lcall
xlat
mov
inc
loope
data16
mov
js
test
inc
pop
subb
call
pushf
fwait
pop
icebp
cmp
cmp
mov
test
stos
andl
mov
push
inc
push
lods
icebp
pusha
incl
pop
ret
lcall
dec
and
push
nop
mov
sub
xchg
pop
mov
sbb
adc
cwtl
push
jl
push
pop
xchg
push
mov
fdivrp
sahf
out
jp
icebp
sub
dec
int3
test
fs
stos
inc
add
stos
cli
sbb
mov
mov
sub
pusha
ret
or
out
mov
aas
pop
and
adc
int
fistps
call
push
adc
or
imulb
cmp
cmp
sbb
push
push
and
fidivrl
mov
jg
add
push
adc
les
cli
xor
addb
sti
iret
add
cmpsb
lahf
js
call
lds
sub
test
or
and
jb
mov
inc
xchg
sub
jmp
and
cmp
push
xchg
movsb
lret
imul
outsl
adc
sbbl
rcrb
jmp
leave
iret
jno
cwtl
mov
popa
jecxz
push
add
bound
mov
fistl
cmp
scas
jae
decl
clc
les
test
loope
movsb
jge
mov
hlt
adc
cmp
cmp
repz
decl
negb
mov
ficoms
mov
rcl
std
sbb
lds
pop
inc
push
pusha
call
xchg
jns
cmpsl
mov
scas
shrl
cmp
bound
hlt
std
dec
jl
aam
sbb
inc
sahf
out
mov
push
mov
xchg
cmp
cli
jl
sbb
shll
jbe
jmp
out
mov
jl
cmp
or
scas
and
movsb
cld
cwtl
jg
testl
lods
scas
mov
xor
mov
pop
in
decl
addr16
add
cwtl
mov
orb
fwait
cmc
sub
mov
imul
dec
xchg
jle
mov
jp
push
aaa
notb
dec
pushf
sbb
xchg
push
je
out
inc
je
cmp
psubw
sub
std
pusha
xchg
xor
sub
adc
sbb
xor
cli
fs
dec
rcr
in
xchg
in
cwtl
push
in
test
sub
lret
dec
push
or
mov
ljmp
xchg
repnz
lahf
repz
lea
add
es
lret
or
jmp
sahf
inc
dec
lds
mov
sbb
add
jl
inc
jb
push
sbb
decl
hlt
mov
xchg
imulb
lods
in
popa
idivl
scas
int
jp
xchg
lret
sbb
pop
lcall
mov
jo
inc
arpl
push
ret
dec
adc
inc
scas
inc
push
shll
jmp
stc
xor
lods
es
fimull
xor
lret
add
stc
mov
sahf
jns
call
cwtl
std
dec
fldcw
add
enter
cmp
and
pop
inc
jo
scas
add
arpl
pop
mov
lock
iret
fldt
int
jb
lret
ud0
aas
in
mov
outsl
into
and
and
and
lahf
sbb
jmp
inc
paddsb
jle
pop
out
stc
dec
cmp
ret
add
sub
cmp
xor
sbb
js
inc
pop
das
lret
push
inc
fs
cli
sub
ss
ljmp
lret
cwtl
mov
popf
sahf
mov
mov
out
push
movsl
or
xor
ret
pushl
pop
or
fdivl
mov
mov
push
xchg
lds
incl
ret
cmpsb
adc
add
cltd
pop
orb
jmp
mov
xchg
push
xlat
and
call
mov
sbb
mov
adc
dec
setae
and
bound
iret
and
imul
push
decl
test
aad
dec
shlb
jge
and
flds
inc
hlt
pop
jecxz
add
mov
lcall
ja
iret
sbb
xchg
jge
sub
push
sbb
mov
in
loop
orl
jmp
adc
mov
clc
scas
scas
inc
pusha
popf
jecxz
jb
mov
sar
lods
cmp
dec
cmp
ud0
decl
inc
call
mov
cld
sbb
push
mov
insb
dec
fs
ljmp
scas
aas
sub
inc
in
popf
jae
or
xchg
cmp
icebp
imul
in
jmp
xlat
shrb
pusha
outsl
scas
add
mov
xor
mov
mov
ds
cmpsb
test
push
sbb
xchg
sub
cmc
inc
push
inc
rol
mov
int3
and
ficomps
pushl
adc
loop
lods
or
leave
pop
inc
and
fnstsw
xor
mov
pushl
fldl
ret
ret
fcmovnu
mov
pop
jbe
outsb
aas
lret
sarb
fistpl
incl
js
mov
test
loopne
add
inc
into
mov
jl
hlt
or
dec
fimull
clc
mov
pusha
sub
dec
int
ret
gs
fistl
call
jg
fistl
and
test
mov
outsl
push
nop
mov
je
lcall
aas
jnp
aam
mov
xor
mov
cmp
or
mov
ret
lcall
or
mov
xchg
fildll
adc
mov
or
sbb
call
lret
mov
sub
movsb
inc
stos
mov
pop
sbb
or
dec
cli
insl
mov
pop
decl
pop
ljmp
test
sub
loopne
decb
aas
pop
sahf
add
push
dec
mov
lcall
inc
and
dec
pop
cmp
xchg
adc
jae
pop
pop
jle
xchg
xor
out
das
scas
mov
mov
sbb
cmp
jb
subl
jne
mov
mov
ljmp
adc
loop
xor
push
loop
xlat
sbb
popf
mov
test
sub
and
loopne
ljmp
push
lahf
or
jecxz
pusha
pop
sbb
notb
and
xor
mov
push
push
aam
ds
into
int3
decl
dec
mul
xor
mov
insb
pop
xchg
xor
shll
out
loope
leave
lcall
loop
shlb
imul
jb
ja
in
xchg
pop
push
jno
imul
lcall
fadd
std
insb
adcb
dec
xchg
jno
into
ja
in
shlb
xchg
sub
lcall
dec
push
jbe
push
inc
enter
outsl
incb
decl
push
inc
leave
test
ljmp
decl
xchg
rclb
sub
ficompl
les
adc
out
sub
mov
jae
popl
ja
insb
imul
test
cmp
push
cmp
xor
pusha
pusha
loopne
enter
movsb
or
adc
push
decb
rcll
xor
jmp
inc
pop
insl
inc
and
and
cmp
mov
out
out
push
inc
mov
mov
dec
imul
xchg
xchg
stos
xchg
mov
leave
loop
inc
pop
call
or
shll
call
std
inc
dec
inc
cmp
xchg
xor
stos
mov
push
xor
inc
sub
jl
cli
icebp
xchg
test
dec
test
push
je
push
mov
int
out
adc
int
xchg
ljmp
mov
das
push
int3
orl
test
pop
loope
inc
xchg
fwait
das
xchg
ljmp
mov
es
sahf
test
call
insl
ja
or
loop
push
adc
push
fdivr
incl
fldcw
and
in
popa
out
inc
pop
xchg
insb
adc
dec
negb
sbb
xor
fildl
ljmp
pop
cmpsb
aas
cltd
roll
push
xchg
fst
adc
out
pop
sbb
incl
lret
pop
sahf
jbe
cmp
pop
inc
inc
push
popa
add
mov
jae
jmp
inc
cvttps2pi
adc
adc
loope
adc
arpl
cmc
mov
pop
fwait
ret
inc
repz
in
xchg
pop
push
cmc
push
ds
stc
in
pushf
les
or
loope
mov
mov
fdivrp
lcall
mov
sub
stos
cmp
inc
ss
push
or
add
and
lds
push
outsb
in
pop
cmc
inc
fmulp
decl
aaa
mov
rcrl
add
sbbl
jnp
jmp
cmp
stos
dec
clc
push
scas
imul
movsb
cmp
sub
xor
inc
add
push
rcl
pop
adc
leave
xor
or
push
dec
jmp
fwait
mov
push
cmp
xor
sbb
add
sbb
aad
faddp
sahf
add
xor
dec
ficoms
lock
jb
dec
pushl
ret
xchg
xor
adc
fisttpl
push
lret
aaa
dec
test
cld
ds
push
inc
sub
xor
fiadds
sub
mov
add
mov
scas
das
jp
sbb
decl
sbb
inc
testl
scas
push
and
xchg
and
std
movsl
ljmp
ljmp
dec
movsl
sarl
push
popa
imul
fildl
xchg
dec
or
xorl
cmp
pop
sbb
imul
lcall
stos
jmp
insb
sbb
add
call
decl
loope
pop
imull
pop
add
or
sti
mov
cmp
pop
negl
pushl
sbb
dec
jbe
loop
or
add
sahf
mov
jns
mov
mov
jne
push
rcl
xchg
cmpl
xorl
pop
clc
jl
jmp
or
mov
xlat
cmp
dec
dec
pop
popf
in
in
adc
stc
enter
pop
xor
pusha
inc
and
call
dec
adc
push
mov
jbe
mov
daa
movsl
push
dec
fldl
lret
cltd
lods
in
xchg
insl
push
ja
icebp
ret
stos
cmp
pop
aad
shrl
outsb
adc
sub
call
imul
cmp
sbb
pop
test
lods
int3
aaa
ss
mov
jmp
enter
cwtl
cmp
push
icebp
push
pusha
pop
xchg
sub
sbb
iret
mov
xchg
aam
jmp
lods
sub
inc
sub
sbb
ljmp
sbbb
incl
jg
xor
cmp
outsb
jo
ret
sbb
outsl
xchg
cmpl
jmp
xchg
add
test
sub
nop
add
pop
je
sub
jns
out
inc
ror
mov
push
dec
rcl
mov
xchg
mov
fwait
push
nop
movsl
add
xchg
mov
mov
ljmp
jns
xchg
add
das
mov
dec
int
dec
in
pop
shll
push
clc
lahf
addl
call
mov
inc
mov
cmp
push
mov
adc
incl
dec
xchg
push
imul
fs
inc
lahf
xor
xchg
lret
test
gs
rol
or
fdivrs
add
xchg
int3
sub
pop
lcall
sub
push
enter
mov
ljmp
das
mov
jnp
and
inc
aad
mov
add
das
jge
sub
ljmp
aam
cltd
imul
mov
sub
outsl
je
cmpsb
adc
push
pop
in
mov
decl
data16
jbe
mov
out
aaa
xor
aas
add
mov
incl
call
repnz
cmp
aas
push
mov
cmpsb
lcall
xchg
pop
inc
hlt
jnp
pushl
cmpsl
dec
adc
mov
pop
ja
popa
div
dec
and
jecxz
out
xchg
jmp
cmpsl
call
sbb
scas
shrb
mov
scas
popf
and
test
in
adc
stc
xor
adcb
frstor
popf
cmp
xchg
aad
test
push
dec
andb
xchg
das
leave
ret
and
decl
dec
shl
mov
xchg
mov
fsubs
loopne
mov
sbb
stos
ds
rorl
clc
pop
outsl
cmp
scas
hlt
bound
push
aas
and
lahf
jl
bound
lahf
xor
or
jae
dec
popa
test
push
loopne
adc
shll
test
cmp
call
pop
js
cmpsb
push
pop
lahf
mov
add
push
jecxz
call
aam
out
jmp
sbb
or
xchg
adc
dec
inc
movsl
stos
mov
scas
jg
dec
iret
xlat
fs
pushl
popf
leave
jae
jb
pop
fcomps
or
test
shrb
fsub
in
jmp
cld
cmp
lahf
sub
movsl
lods
sub
popl
ret
pop
xor
pushl
arpl
je
sub
dec
adc
sbb
jp
sub
jae
mov
xorb
pop
leave
test
inc
fisubrl
sbb
out
pop
and
cli
cmp
dec
jle
jecxz
fdivs
aas
stos
jecxz,pt
pop
out
mov
and
lret
test
gs
mov
push
cmp
jg
pop
aas
jbe
repnz
test
add
jae
mov
mov
jnp
mov
scas
out
aaa
lea
imul
cmc
sbb
lods
sub
in
fstps
int3
inc
dec
push
incl
xor
push
mov
or
shlb
or
and
jnp
mov
pop
pop
lcall
ja
pop
pop
testb
mov
sbb
or
xchg
xabort
mov
mov
pop
call
or
pop
add
push
test
pop
mov
adc
lret
cwtl
mov
inc
es
inc
inc
mov
cld
jmp
mov
mov
out
mov
insl
add
or
dec
jbe
pop
adc
scas
sub
daa
adc
mov
test
fs
clc
pop
inc
std
or
lcall
jg
fcmovnbe
ffreep
xchg
scas
pop
stc
ja
movsl
push
clc
sbb
push
fdivrs
mov
ljmp
add
pop
sub
rclb
bound
mov
xchg
mov
shlb
cmc
jb
jae
decl
jbe
pop
and
xchg
and
fsts
xchg
nop
mov
xchg
enter
inc
popf
jmp
cmpsb
pop
pushl
inc
xchg
faddp
dec
adc
mov
inc
pop
das
jne
inc
push
mov
hlt
je
test
push
aaa
cmp
sub
dec
movsl
and
adc
adc
or
ja
push
push
stc
lock
jne
pushl
push
xor
mov
popf
xor
xor
stos
repnz
push
lret
mov
stc
mov
adc
lcall
imul
and
cmp
mov
aam
aam
jmp
push
out
and
iret
cwtl
mov
lods
pushf
sysenter
ret
xchg
subb
sahf
mov
call
lcall
dec
insb
cwtl
stos
add
and
xchg
sub
leave
push
aaa
cld
jmp
adcl
xchg
push
mov
dec
sbb
loop
pushl
xchg
and
jmp
js
pop
xchg
push
mov
adc
decl
lds
pop
call
cmp
lret
ror
push
loopne
xor
daa
test
dec
sub
jmp
mov
incl
dec
push
jno
in
mov
mov
push
nop
je
mov
inc
mov
ficoml
outsb
adc
sbb
aaa
lret
pop
xchg
lret
and
push
out
es
nop
insb
add
mov
xchg
xchg
jns
mov
test
mov
and
or
dec
sbb
nop
cmp
sub
sarb
lods
mov
push
add
add
jp
addr16
inc
cmp
add
decl
push
nop
push
mov
push
cmp
inc
xchg
es
or
std
cmp
inc
shl
ljmp
and
loope
sub
dec
push
push
cmp
push
jno
popf
stos
dec
adcl
dec
jbe
jmp
in
pop
mov
pop
push
aad
or
push
das
lret
cmpsl
out
dec
cmp
cmpsl
inc
testb
inc
ror
sbb
pop
mov
adc
insb
mov
mov
or
call
pushf
sub
sbb
cmp
dec
push
out
dec
xchg
push
aas
xor
mov
ljmp
mov
scas
out
std
inc
adc
fistpl
push
addb
xchg
sub
in
jp
ljmp
rcl
mov
in
inc
mov
popf
das
jge
out
cmpsb
clc
sbbl
idiv
inc
mov
push
clc
cmp
push
mov
repnz
push
movsl
repz
and
push
lcall
mov
pushf
sbb
jae
stc
or
int
dec
scas
mov
cwtl
das
mov
mov
dec
mov
jns
cmpsb
in
jmp
sub
pop
int3
into
insl
fs
add
mov
mov
js
decl
push
adc
gs
mov
jo
shl
cmc
fwait
arpl
repz
mov
sbb
adc
decl
out
adc
pop
jns
adcl
je
cli
pop
aas
xchg
xlat
adc
jnp
decl
repnz
mov
lret
dec
out
cltd
sbb
sub
out
shrb
mov
jp
lcall
das
push
mov
imull
mull
mov
cmpsl
mov
jno
movsb
ds
repz
adc
jo
sbb
mov
or
pushl
es
mov
and
cmpsl
xchg
mov
jb
and
push
and
out
ljmp
xchg
fiadds
xor
pop
sbb
lret
call
fs
sar
pushl
cmc
pop
inc
rclb
test
mov
loope
jge
jle
stos
lcall
leave
jp
loope
mov
and
xor
leave
mov
mov
push
pop
cmp
clc
and
jbe
sbb
mov
mov
addr16
push
sub
mov
pop
sbb
mov
mov
aad
mov
fsubr
sub
movb
cmc
ss
lcall
add
std
cmpl
fsincos
cs
stc
fidivs
in
and
call
rol
push
xor
imull
mov
clc
aaa
mulb
repz
out
pop
ja
arpl
add
ret
cmpsl
sub
outsb
inc
ja
cmp
xchg
mov
mov
mov
icebp
inc
stos
sbb
cmp
cmpsb
nop
out
sub
jbe
call
jo
jo
call
jae
pop
push
cld
fimuls
push
lret
push
xor
cmp
adc
idiv
inc
sub
rol
aaa
rorb
dec
pop
push
inc
pop
les
or
xchg
lods
cmp
sub
xor
icebp
ret
arpl
fsubs
scas
gs
dec
movsb
ss
call
leave
leave
fs
incl
jmp
push
jno
inc
out
mov
mov
leave
xchg
mov
xor
cld
cmp
loope
lahf
shlb
cmp
insb
in
mov
mov
xlat
jp
fbld
inc
dec
sbb
cwtl
mov
fidivrs
add
fcompl
lcall
xchg
jmp
dec
mov
mov
or
popa
or
pushf
ss
add
push
xchg
incl
fucomi
daa
mov
push
pop
mov
inc
adc
xchg
add
dec
cmp
lcall
xchg
pop
or
inc
sti
push
sub
add
adc
pop
packssdw
or
inc
sub
sbb
xor
mov
and
testb
adc
inc
fsubrs
ljmp
cmp
int3
mov
or
lret
or
ror
js
andb
mov
jmp
xchg
sbb
adc
sub
push
push
xlat
fidivs
popa
inc
rol
mov
ljmp
in
pmulhuw
loop
mov
mov
sub
mov
push
adc
ljmp
stos
loop
adc
enter
add
test
jae
sbb
push
dec
dec
pop
mov
xchg
mov
dec
sbb
mov
cmp
adc
vpsrlq
pushl
mov
stc
out
mov
push
inc
imul
and
sub
push
xchg
sbb
lock
mov
or
int
and
es
std
xchg
sbb
xchg
out
out
int
mov
jl
packssdw
repnz
rcll
mov
xchg
xchg
js
fwait
clc
popf
cmpsb
dec
cli
fdivr
jmp
pop
dec
xchg
test
fwait
movsl
cmp
das
rol
pushf
jne
mov
xchg
call
sar
jmp
mov
cli
mov
mov
push
leave
xchg
movsl
popf
popa
ret
loope
and
xor
and
lcall
fsubrs
pop
sahf
sbb
push
sub
gs
cltd
cli
stc
pop
and
ljmp
sarl
in
jmp
shl
pop
xor
sbb
and
ljmp
jb
mov
jecxz
inc
aas
jmp
mov
mov
push
scas
stos
out
push
inc
adc
jmp
aad
push
mov
cltd
jb
dec
mov
fldl
arpl
aad
xchg
jmp
shlb
adc
insl
jp
mov
aam
push
and
fcomp
bound
lret
fnstsw
mov
pop
outsl
sub
adc
push
fildll
cmp
sahf
cvttps2pi
icebp
pushf
adc
decl
xchg
dec
sub
cwtl
jg
fidivrs
lds
aas
add
call
pop
test
cmpsl
add
sub
rolb
xchg
or
pushf
mov
pushl
fyl2x
sub
insl
cld
in
and
dec
add
add
and
mov
jae
incl
adc
lahf
lcall
mov
jge
adcb
test
and
add
decl
jns
mov
ret
into
jnp
xchg
add
sbb
dec
push
mov
bound
pop
sbb
lcall
ss
dec
hlt
jno
push
mov
rclb
mov
icebp
pop
popf
lds
lret
ljmp
jo
js
or
xchg
jne,pt
mov
call
mov
push
adc
add
mov
jmp
mov
or
mov
xchg
sub
mov
loopne
out
sbb
pop
jle
mov
jmp
cltd
mov
ja
in
inc
int
into
pop
mov
mov
daa
cwtl
jle
imul
int3
lcall
test
or
incl
fcmovnb
cmp
mov
out
fistps
xorl
je
outsl
sti
fimuls
xchg
add
jno
mov
cld
fdivrl
xor
rcr
or
add
decl
pop
xchg
js
flds
sti
clc
movsl
xor
test
sbb
inc
cmc
push
jle
push
sbb
push
dec
stc
push
pop
adc
xor
mov
or
dec
in
add
mov
mov
sarb
out
xchg
dec
fstpt
outsl
leave
sysret
mov
push
jae
pop
jge
call
xlat
jmp
cs
mov
fstpl
add
movsb
fnstenv
or
ret
jnp
sti
incl
out
adcl
sub
out
out
andb
mov
mov
jmp
insb
xor
pop
int
movsl
cmpsl
int
sbb
aad
bnd
jecxz
cmp
jns
out
or
out
fisubrs
mov
leave
push
sbb
push
jno
ljmp
xor
jb
leave
jmp
jp
mov
pop
xor
bound
jo
shrb
cmp
or
adcb
lcall
push
add
sbb
fiaddl
repnz
jae
fcoml
xor
test
lcall
in
es
mov
insl
sub
sbb
test
repz
inc
xchg
jg
mov
jp
xchg
or
push
mov
cmp
lahf
stc
nop
test
cmp
insl
pusha
dec
mov
addl
mov
sti
movsb
sbbb
shll
jg
inc
aam
sub
enter
dec
cld
sub
or
loope
jno
pop
sub
dec
test
lcall
pusha
in
jno
ss
das
lcall
xchg
inc
stos
cwtl
pop
or
xchg
shl
call
jno
ja
pop
adc
popl
jnp
out
jnp
mov
jb
sub
push
bound
das
icebp
inc
adc
cld
sbb
aam
stos
pop
out
jnp
imul
ljmp
je
enter
pop
pop
adc
ficompl
xchg
leave
jo
pusha
in
rolb
call
sahf
lods
mov
negl
sbbb
inc
mov
or
loop
cmp
adc
mov
shrb
dec
popa
pop
clc
dec
call
xchg
fistps
xlat
and
adc
loop
mov
repnz
adc
mov
push
call
scas
mov
mov
das
xchg
pop
repnz
and
xor
outsb
inc
dec
lods
decl
cmp
fistps
gs
cld
pusha
pop
mov
or
push
outsl
cwtl
js
mov
pop
sar
lcall
jo
pop
pop
cwtl
mov
int
lret
jecxz
into
outsl
jmp
aad
or
dec
push
mov
fwait
mov
mov
inc
rcll
xor
pusha
insl
aaa
stos
cli
jb
sarl
cmp
ss
aaa
or
jbe
sti
lock
mov
idiv
cs
dec
dec
bound
jle
cmp
fdiv
or
jl
mov
add
imul
or
pushl
cmp
cmp
in
ret
jle
insl
cwtl
loope
out
jl
mov
mov
data16
cmp
and
insl
push
je
mov
movsb
jbe
add
aam
dec
pop
or
ljmp
cmp
inc
imul
mov
loop
in
dec
jb
loop
xchg
lret
mov
das
imul
mov
loope
push
dec
scas
ror
dec
pusha
adc
mov
int3
clc
xor
adc
call
shlb
mov
cmp
sbb
jns
jns
dec
insl
inc
in
in
imulb
call
mov
hlt
dec
in
add
cmp
daa
jmp
lods
mov
cmp
jo
jmp
lret
xchg
push
or
inc
jmp
jno
lds
sbb
adc
xorb
decl
imul
sbb
xchg
or
mov
sahf
adc
loope,pt
jb
xlat
and
cmp
push
xor
mov
call
stc
jmp
lock
incl
adc
and
movsl
pop
xor
push
das
cmpsb
cli
mov
or
cmpsl
call
mov
mov
mov
scas
sub
add
outsl
inc
mov
add
lahf
fdivr
decl
notb
cmp
mov
cmp
sub
mov
mov
inc
add
imul
pushl
ljmp
push
inc
shll
cmp
and
sahf
push
xchg
or
lea
xor
cld
inc
dec
push
push
add
mov
rcrl
inc
dec
roll
or
movsb
lock
dec
jp
ljmp
sbb
inc
jno
add
add
hlt
pop
and
mov
jns
mov
dec
jle
cs
dec
imul
adc
xchg
int3
mov
nop
inc
sub
xorb
adc
mov
test
lret
std
and
mov
xchg
push
dec
int
jmp
sbb
xchg
inc
mov
fxtract
pop
testl
insb
fists
add
or
fs
dec
insl
push
mov
popf
xor
cmp
xchg
das
xor
imul
mov
ds
retw
std
mov
lcall
fnstcw
ret
aas
fldl
or
scas
aad
pop
mov
jmp
subb
and
or
sarb
pop
pop
inc
jno
lcall
into
push
lcall
and
push
call
insb
push
cmp
push
sub
adc
xchg
test
cmp
out
ss
push
jno
bound
fstpt
daa
jecxz
dec
sub
inc
lret
mov
fwait
stos
cmp
jle
jmp
pop
jp
add
pop
mov
cmp
addr16
jg
incl
mov
enter
loope
mov
and
jge
cmp
adc
jge
xchg
loop
or
rclb
ret
jns
cmpsl
adc
iret
fdivl
insl
imul
out
cld
jp
push
scas
ret
push
dec
pop
and
out
mov
add
or
sahf
test
pop
push
sti
loop
mov
call
stos
jge
pop
adc
cmp
xor
outsb
pusha
cmp
cld
mov
int
imul
ds
jb
jmp
inc
inc
sub
cmpsl
test
mov
clc
clc
outsb
aam
cmpl
in
fsubl
je
pushf
bound
pop
xchg
xlat
fsub
xor
je
fnop
loop
mov
pop
cmpl
adc
scas
frstor
adc
mov
gs
jbe
ret
xchg
pop
fstpt
out
hlt
mov
ljmp
mov
movsb
sub
xor
pop
test
daa
pop
push
insb
enter
call
jo
adc
xchg
enter
decb
fwait
cmpsb
ret
insl
mov
cmpsl
in
pusha
pop
outsb
xor
dec
call
jns
jl
in
push
hlt
xchg
cmp
xchg
enter
insl
ljmp
pushl
pop
movsl
fldenv
mov
xor
nop
mov
mov
aas
popf
sbb
and
inc
imulb
pop
mov
fiadds
ja
mov
mov
popf
aad
sub
inc
ss
xor
decl
push
dec
cmpsb
hlt
adc
cmpl
pushf
pop
xchg
divb
cwtl
aad
sub
mov
aas
lock
pushl
rolb
adc
add
clc
ljmp
gs
lcall
out
push
dec
push
test
cmp
mov
or
xchg
in
mov
xchg
data16
sbb
jmp
fcmove
push
adc
ret
add
sbb
mov
cmpsb
adc
or
xchg
aas
hlt
imul
fisubs
inc
ds
jno
mov
dec
adc
icebp
xor
incl
jg
stos
jg
movsl
imul
push
mov
mov
pop
into
inc
nop
call
negb
fiadds
out
xor
and
mov
nop
add
cmp
xor
adc
jl
mov
jl
and
jae
ficoms
mov
and
popf
pop
push
mov
scas
lahf
cmp
and
adc
decl
mov
ljmp
stos
jmp
fcomps
and
lcall
test
bound
icebp
repz
lret
xor
incl
andnps
xchg
in
mov
pop
mov
cmp
push
decl
mov
adc
push
and
test
ficoml
cmpsl
pushf
popa
sbb
push
dec
scas
or
mov
clc
jmp
adc
lock
cmp
mov
stc
mov
push
pop
mov
add
lret
aaa
in
adc
jmp
in
inc
inc
lds
sub
and
jmp
inc
jb
xor
and
cltd
sar
subl
jp
int3
lds
ret
decl
test
or
bound
cmp
mov
dec
push
cmc
mov
mov
sub
jp
sbb
pushl
nop
push
xor
in
in
pusha
imul
sub
rorb
pusha
and
push
ljmp
mov
sub
roll
mov
push
mov
out
inc
insl
fistps
jmp
les
es
xchg
or
int3
shll
dec
mov
ror
dec
mov
out
push
movb
in
in
mov
mov
divb
jmp
and
decl
dec
in
sub
xchg
mov
sub
loop
adc
xor
lock
fstl
sbb
jo
add
stos
jnp
mov
pop
in
or
out
repz
inc
push
incl
gs
xor
mov
cld
imul
aas
sub
cmc
in
adc
fadd
push
pop
pushl
nop
in
mov
mov
cli
cmp
jnp
je
inc
inc
adc
ljmp
ljmp
sbb
cmp
add
jne
outsb
mov
ljmp
jmp
dec
in
adc
jnp
loope
dec
xchg
sub
mov
fstl
clc
sub
pop
aam
loope
mov
xor
icebp
cmp
fwait
ds
sub
mov
inc
adc
mov
incl
ret
xchg
ds
ss
inc
xchg
dec
dec
inc
mov
stos
or
add
jne
sbb
pushl
adc
in
ds
fcmovnb
push
popf
dec
jae
mov
xor
stos
lcall
xchg
adc
push
or
push
push
or
fsubrl
int3
std
aaa
cs
mov
scas
dec
sub
js
xor
pop
jbe
xor
dec
mov
adc
movsb
mov
in
cli
js
cwtl
insb
cmp
aaa
jmp
mov
cmp
push
lock
adc
jmp
add
pop
or
and
stos
outsl
in
cs
int
in
andl
loop
call
sbb
daa
lods
mov
aam
mov
jg
jmp
sahf
jbe
std
pop
movsl
in
jb
pushl
out
leave
sarl
push
sub
dec
xchg
jmp
sub
hlt
cmp
fiadds
fdivs
xchg
and
pop
xlat
stc
lret
mov
mov
pop
adc
sbb
jp
jl
sbb
stc
adc
push
push
aas
jne
jno
repnz
cmp
dec
pusha
leave
decl
ret
rorl
pop
sbb
jns
cmp
sub
stos
pop
jae
lahf
test
sub
bound
pop
cmp
jns
dec
push
push
lahf
push
adcb
push
lea
pop
clc
adc
xchg
sbb
cmp
into
push
fidivrl
andl
push
mov
dec
jecxz
lock
jmp
ret
scas
fs
xchg
xor
fmuls
shlb
aam
lods
imul
test
push
push
in
incl
ffree
pop
push
or
adc
das
out
in
adc
jnp
mov
and
inc
aad
fcmovu
pushf
push
xchg
movsl
push
jl
inc
push
cmp
repz
stos
pop
repz
fcomps
rcrl
ficoms
mov
dec
jge
in
mov
pop
cwtl
clc
cmc
test
mov
lahf
mov
repnz
ljmp
iret
jle
jle
add
jle
jno
pushf
push
mov
dec
add
push
stc
push
jnp
fsub
dec
cmp
clc
jmp
push
cltd
ss
mov
mov
in
cmp
lock
jns
movsb
iret
mov
pushl
popf
pushf
js
std
inc
mov
push
push
or
movsb
sub
movsl
mov
mov
lret
incl
or
int3
lds
nop
xchg
inc
sub
lret
inc
add
or
incl
add
ret
js
sub
dec
jne
sub
popf
cmp
push
mov
pop
inc
xor
outsb
jmp
pop
push
jmp
and
movsl
jnp
and
inc
mov
push
jmp
mov
add
hlt
subb
out
mov
dec
int3
in
push
mov
mov
inc
xlat
pusha
cmp
addb
test
xchg
movl
jmp
xor
shrb
dec
mov
pop
arpl
or
cmpsb
loopne
mov
xchg
out
cld
mov
fisubs
cmpsl
call
push
orb
aam
enter
adc
stos
xor
ljmp
outsl
roll
pop
xchg
test
adc
aad
mov
addl
jmp
mov
xchg
inc
lods
or
jne
jecxz
and
lods
out
mov
sbb
xlat
mov
ljmp
nop
cmp
jbe
mov
insb
mov
dec
ljmp
call
inc
lods
stc
roll
dec
js
ret
push
pushf
lret
adc
mov
jp
add
jb
arpl
sti
sti
or
jp
outsl
in
xchg
xor
mov
mov
out
lods
insb
int
sahf
push
mov
incl
rcll
cmp
jne
aaa
cmpb
sub
xchg
pop
addb
push
aas
adc
xchg
cwtl
cmp
ljmp
nop
jle
xor
xor
and
and
inc
scas
rclb
and
lcall
mov
push
mov
mov
and
xchg
mov
fidivrl
inc
add
popf
sub
mov
pushf
fistpll
mov
and
xchg
adc
push
std
decl
aam
jo
mov
xor
and
orl
iret
or
scas
andnps
iret
call
sub
xchg
mov
test
scas
mov
pushf
cmp
fidivrl
repz
cmp
inc
incl
push
add
jl
push
pop
sbb
or
mov
push
mov
sub
ljmp
mov
neg
jnp
ja
cmpsl
pop
mov
add
popf
icebp
pop
daa
sub
lcall
xchg
lock
cli
pop
push
icebp
xorl
push
pop
fs
jae
clc
pusha
test
mov
idivb
inc
std
xchg
mov
xlat
pop
imul
mov
fsts
pop
xor
lods
mov
outsl
mov
pop
pushl
lds
popf
xchg
sub
xchg
xchg
ljmp
mov
cmpl
push
jmp
enter
and
movsb
and
ret
cltd
inc
jo
lahf
and
cmc
sub
lcall
bound
cmp
xor
sub
xchg
int
test
push
cmp
lds
and
sbb
decl
loope
mov
inc
cmpsl
out
sbb
and
aad
iret
xor
xchg
jge
sub
jmp
sub
inc
cs
pop
bnd
dec
lret
inc
out
cltd
mov
and
pop
idiv
decl
bnd
jo
and
daa
push
shlb
xchg
push
in
adc
jnp
inc
jb
jmp
xchg
int
lcall
lds
lds
fbstp
in
or
cs
incl
mov
addr16
adc
out
cli
insb
loope
fildll
inc
mov
dec
hlt
mov
inc
js
repz
mull
dec
pop
test
adc
ljmp
add
mov
outsb
icebp
fcmovne
inc
push
ja
rolb
inc
cmp
jmp
and
ret
push
fwait
insl
adc
test
in
cmp
out
pop
ds
add
or
jp
mov
in
int
add
and
sti
and
fiaddl
test
in
cltd
and
dec
push
inc
adc
repnz
mov
jmp
sub
sub
jl
jmp
jne
bound
in
loope
mov
ret
orb
or
cli
cmp
dec
sub
mov
test
movsb
outsl
outsb
pop
inc
nop
inc
les
aad
movsb
bound
imul
pushl
adc
nop
xor
dec
out
addr16
aam
xchg
daa
cmp
outsl
or
clc
lcall
psllw
mov
xor
push
lods
mov
loop
subb
xor
enter
xor
jmp
test
fcoms
stos
xchg
nop
stos
sbb
dec
movsl
mov
stos
repz
dec
std
dec
incl
push
clc
nop
mov
mov
xchg
mov
and
enter
push
jmp
push
popf
insb
cwtl
mov
out
xor
daa
mov
xchg
pushf
dec
xchg
mov
lcall
push
testb
ret
ret
or
lret
jbe
leave
cmpsl
call
jp
imul
inc
mov
xor
cmp
pop
rorl
fiadds
gs
lret
push
dec
lea
push
cwtl
imul
test
je
sbb
popf
test
mov
jmp
sub
loop
add
xchg
jl
frstor
xor
xor
fwait
inc
andl
sti
fst
cmp
jne
mov
outsl
test
aad
stos
xchg
mov
sbb
call
lods
ret
pop
and
cmp
lock
mov
sarl
decl
and
jmp
inc
push
xchg
mov
adc
cmc
imul
pushl
das
sbb
dec
lock
sub
mov
sbb
or
sub
sbb
lcall
ja
cmc
in
adc
add
push
pop
pushl
je
movsb
ret
and
sub
xchg
stos
xchg
incl
cmp
jge
orb
jb
sub
popf
fnstsw
push
push
cmc
or
mov
or
pushl
adc
cmp
clc
and
or
sub
mov
in
fstps
push
aad
rdpmc
jnp
xchg
xor
mov
pop
mov
gs
adc
test
in
push
cmp
pop
adc
fadd
loope
push
call
mov
in
and
add
imul
mov
pop
push
and
test
pop
incl
xchg
clc
and
jmp
imul
mov
inc
fidivs
push
in
mov
ljmp
pop
jle
xchg
pop
insl
lahf
add
mov
aam
mov
clc
sbb
pop
xor
adc
ljmp
sub
decl
adc
dec
call
push
push
and
jp
jge
xchg
add
je
iret
cmpsb
cmp
sarb
mov
push
jns
movsl
mov
decl
notl
pop
cmc
mov
out
jne
outsb
sub
test
in
stos
mov
int3
shlb
test
inc
iret
outsl
mov
adc
mov
add
repz
ljmp
je
push
dec
icebp
adc
mov
dec
decl
jl
inc
imulb
data16
jmp
add
cmpsl
adc
xor
xlat
pusha
mov
insb
inc
jp
push
sub
call
add
adc
sahf
lret
hlt
cmp
into
dec
push
sub
mov
repnz
scas
inc
decb
call
leave
jecxz
out
loope
jecxz
popa
xor
dec
ds
scas
stos
pop
push
cmc
popa
scas
adc
pop
xor
call
test
mov
add
sub
mov
ja
addr16
sub
test
ljmp
fsin
add
mov
jb
mov
ret
test
pop
dec
inc
jmp
jae
mov
incl
hlt
call
addl
or
mov
je
push
int
add
mov
push
lret
pop
into
imul
mov
mov
in
sbb
push
mov
adc
flds
mov
movsb
bound
cmp
out
std
sbb
mov
or
cmp
push
xchg
icebp
inc
push
arpl
popa
cld
insl
or
jmp
int
and
lcall
add
push
jle
sbb
lea
xor
inc
test
inc
repz
lcall
mull
pop
into
xor
push
sub
xchg
inc
jo
hlt
mov
mov
cmp
cmp
insl
popf
sub
cmp
aad
mov
pop
inc
sbb
xor
call
adc
mov
out
mov
cmp
ret
movl
xchg
cmpsl
ss
push
pop
testl
fld
add
lahf
rolb
xchg
add
jle
mov
sub
repz
lcall
add
sub
sbb
shrl
add
stos
movsl
movsl
mov
adc
pushl
out
adc
stos
or
push
xor
mov
adc
out
inc
and
pushl
fcmovnu
orb
jae
cmp
lea
out
icebp
and
call
mov
fiaddl
cmp
inc
add
lcall
pop
notb
sub
pushl
lret
cmp
mov
push
dec
lret
insl
and
adc
repz
out
dec
bound
jns
xchg
fdivrl
add
insl
mov
pusha
mov
push
or
shl
jl
aam
pushl
add
testl
xchg
lock
out
loope
xor
movsb
nop
pop
push
sbb
jle
jmp
xchg
mov
leave
dec
rcrb
mov
sub
push
jl
mov
incl
int3
and
outsb
mov
dec
or
inc
stos
in
xor
sub
fdivrs
addl
decl
and
rcl
insb
jmp
test
in
mov
xchg
xchg
xchg
lea
cmp
incl
and
cmpb
jmp
in
cmpl
out
ljmp
lcall
push
mov
scas
call
xor
ss
fs
ds
push
push
dec
push
jmp
arpl
cmpsb
scas
cltd
test
mov
xchg
push
or
jnp
mov
ja
xor
xchg
jmp
fsubp
xor
cmpsl
inc
push
xor
js
inc
cwtl
ss
hlt
mov
xor
mov
mov
call
stos
stc
out
inc
inc
xchg
in
ret
cmp
lock
mov
addr16
ljmp
mov
ljmp
shl
xor
inc
sub
and
mov
in
notb
sbb
incl
lahf
inc
pop
jecxz
mov
sbb
int
or
add
jns
pop
call
jae
in
jg
ss
out
pushf
ret
pushf
xchg
je
mov
mov
add
fdivr
decl
jl
sbb
imul
cmp
sti
fwait
cmp
jnp
xchg
daa
push
pop
sub
incl
add
pop
lret
push
insl
inc
jge
in
add
lcall
cmp
cs
out
faddp
mov
sbb
mov
xor
pushl
addl
lds
iret
flds
out
bound
js
call
push
inc
stos
lods
in
sbb
scas
push
lahf
scas
sbb
dec
fisttpll
leave
clc
mov
insb
xchg
fbld
clc
adc
push
call
adc
aaa
in
push
in
inc
andl
loopne,pt
ret
loopne
mov
rol
mov
cmp
inc
adc
dec
cmp
sub
movsb
and
or
push
adc
sbb
fcomip
jmp
push
fnstenv
outsb
sub
jecxz
cmp
jbe
je
fistpl
push
ljmp
outsl
in
fs
mov
fdiv
popf
pop
arpl
rcll
jb
push
gs
adc
ljmp
ret
adc
add
icebp
xor
mov
mov
loopne
mov
ret
cli
out
inc
fists
cwtl
cs
call
xchg
sbb
add
lods
or
xchg
test
call
sbb
sub
cmp
mov
les
mov
xor
lcall
sbb
push
cmp
test
ror
cld
cmpsl
stc
adc
pop
jge
rolb
adc
push
or
cmp
nop
incl
jno
add
cmp
xchg
cmpsl
cmp
adc
js
mov
movb
not
add
imul
inc
hlt
popf
xor
mov
mov
add
outsb
das
ja
addl
xor
jp
xchg
pop
divl
cmp
inc
xchg
push
sub
pop
movsl
ret
fs
pop
and
ficomps
cwtl
nop
testl
mov
clc
insl
mov
stos
or
fmull
pushl
lods
repz
loop
test
inc
ja
sub
clc
jle
in
mov
fdivrp
jmp
sub
fdivl
cmp
js
call
out
into
ret
add
imul
jmp
popf
shl
jmp
icebp
mov
and
mov
rcrb
jbe
lahf
ss
ds
aam
fdivrs
and
cmovg
jno
jae
in
add
lcall
outsl
in
mov
pop
xchg
hlt
out
adc
int
mov
call
fwait
push
adc
mov
lcall
fnstenv
fnstcw
add
inc
mov
add
jecxz
repnz
into
cmp
inc
pop
and
sti
adc
mov
decl
inc
enter
decb
scas
mov
jge
int
push
shlb
pushl
dec
pop
xchg
or
outsb
dec
negb
jns
xchg
sub
and
outsl
cmp
decl
ds
pop
outsb
cmp
mov
loope
inc
imul
push
push
inc
jbe
jb
inc
decl
or
pop
pushf
sbb
pop
ljmp
aas
iret
xlat
and
sub
incl
push
fsubrl
clc
sbb
dec
cmp
jle
add
push
inc
testb
std
pop
sbb
cmpsb
lods
pop
pusha
mov
loop
inc
xor
mov
jge
mov
cmpl
std
add
subb
mov
clc
rorl
orl
addb
shrl
cmp
insl
enter
and
dec
sub
insl
fs
out
aam
or
scas
dec
insb
das
sub
jmp
lcall
jno
aas
sub
loop
sbb
jp
gs
and
push
xchg
fdivl
ljmp
clc
jp
sbb
or
mov
in
pop
cmp
jmp
in
iret
jae
ja
jae
sbb
jns
popa
arpl
clc
push
sahf
test
js
xchg
sbb
call
lds
aad
popf
out
cmp
jbe
pop
jnp
ja
adc
cmp
push
cmp
xor
decl
adcl
lods
add
xchg
push
sbb
inc
adc
call
jg
fcompl
push
mov
insb
sarb
mov
mov
mov
incl
push
rol
xor
out
push
cmp
ret
lahf
add
jge
lods
mov
test
iret
inc
and
fbld
add
mov
mov
sbb
scas
mov
jp
jno
push
mov
lahf
ret
xor
sub
sub
fmuls
imul
out
push
jge
and
decl
cmp
adc
or
push
sbb
imul
adc
push
outsb
inc
pop
sbb
xlat
lcall
sub
dec
in
jle
lds
jle
lds
add
sub
or
or
popa
pushf
into
pop
loop
lcall
dec
pop
cltd
push
call
fucomi
lahf
push
ds
push
in
jmp
fs
repz
and
xor
xchg
dec
and
outsl
push
lret
xchg
dec
div
add
pop
fcos
mov
into
inc
fistpl
test
inc
loop
std
lea
dec
lret
pop
outsl
setbe
sub
mov
xchg
dec
mov
pushf
incl
push
mov
pop
loop
pop
mov
push
rorl
imul
pop
test
nop
in
ja
push
test
mov
into
xchg
sbb
sub
das
cli
push
out
pop
out
pop
cli
test
inc
push
repnz
jmp
shll
sub
dec
lret
test
lods
cli
out
jo
and
pop
xlat
decb
push
sub
push
or
xor
xor
adcb
push
or
test
cmpl
mov
fnstcw
add
add
push
jo
daa
mov
xor
sub
push
inc
push
push
jle
mov
out
in
fistpll
pop
lea
test
call
andb
les
icebp
adc
divb
mov
mov
ljmp
cmp
and
testl
pop
rcll
stos
add
push
mov
and
ret
mov
pop
std
lds
inc
xchg
mov
pop
mov
adc
ljmp
mov
inc
jl
call
push
fs
mov
and
pop
popa
incl
push
mov
inc
inc
pop
or
cs
ja
daa
pop
cltd
imul
pop
pop
incl
lods
lods
push
mov
mov
and
sub
jo
pop
and
test
ret
bound
incl
pop
lret
push
xchg
xor
jmp
iret
rcll
icebp
dec
test
cmp
pushl
or
push
test
popf
call
fldl
scas
and
mov
enter
clc
fwait
push
ret
sub
jne
adc
inc
mov
sbb
cmp
mov
adc
int
add
or
sub
andb
xchg
int
shlb
subb
jnp
fcompl
push
xor
or
xchg
sti
sbb
mov
mov
repnz
nop
decl
ds
shl
fwait
pop
dec
add
pop
push
mov
mov
xchg
call
test
bnd
mov
push
in
push
repz
pop
dec
inc
push
push
movsb
popf
scas
mov
xchg
or
cli
pushl
pop
popf
in
rcrb
enter
pop
adc
aam
ficoms
jecxz
gs
and
mov
cs
imul
sub
mov
sarl
bound
lret
jl
decl
mov
push
inc
nop
add
xor
sbb
cmpsb
aaa
mov
loopne
jmp
push
insl
push
popf
loopne
mov
dec
cmp
cs
pop
test
lcall
jbe
call
rcrl
mov
repz
call
push
or
sub
imul
call
jge
cld
and
and
loopne
jecxz
pop
aam
out
flds
sbb
mov
pop
clc
unpcklps
call
inc
and
and
ljmp
push
sub
outsl
and
mov
inc
int3
repz
adc
call
jno
dec
mov
daa
in
xchg
jne
push
push
adc
jae
cmpsl
in
loope
ljmp
sbb
rorl
ret
mov
dec
mov
aas
sbb
shrb
jmp
bnd
lds
jge
mov
fsubs
mov
sahf
cmp
sbb
in
push
mov
nop
mov
xchg
pushf
movsb
xchg
fildl
cmpsb
lds
repnz
or
rorb
or
or
sub
mov
fcmove
repz
jl
in
cmp
adc
lahf
fs
push
push
cmp
sbb
ja
dec
xchg
pop
in
jo
repz
ja
dec
jg
add
xchg
mov
jp
incl
scas
dec
mov
out
or
and
in
cwtl
in
adc
sahf
mov
mov
call
dec
call
pand
mov
mov
es
cmp
ljmp
movsb
push
inc
movsl
push
xchg
jl
icebp
and
sub
pop
stos
or
clc
shlb
and
jmp
ja
sub
push
adc
hlt
sub
inc
lcall
incl
lea
cmp
add
jecxz
ret
jo
cmp
pop
fnstsw
outsb
push
xchg
js
adc
insb
mulb
icebp
adc
sub
into
and
pop
sti
dec
cmpsb
inc
and
fcmovu
mov
push
in
add
das
adc
std
mov
cwtl
add
shl
and
decl
aad
sub
sbb
leave
mov
and
pop
test
inc
in
call
mov
ret
jns
or
inc
push
adc
add
cli
dec
andl
lcall
mov
cli
nop
or
mov
mov
mov
mov
mov
lcall
mov
test
scas
jno
sbb
aaa
outsb
xor
pop
cmpsb
mov
mov
decl
pop
ret
popf
jnp
push
sub
add
ror
dec
outsb
mov
pop
xchg
into
add
dec
in
cmp
decl
add
mov
adc
or
dec
and
push
sub
push
aas
push
sbb
call
pop
lock
sbb
or
jb
cmc
mov
sti
mov
lods
inc
sub
or
call
push
mov
pop
push
or
data16
idivl
std
mov
lds
jmp
jae
mov
addr16
inc
fwait
jne
sbb
negl
mov
push
and
jbe
incl
push
mov
push
lds
scas
cmp
addr16
jge
add
jae
push
mov
movsb
add
jmp
and
inc
xchg
or
push
lret
mov
jge
add
jle
pop
or
int3
lcall
ss
inc
cmpsl
mov
in
lds
cmpsl
shr
mov
adc
mov
push
sub
orb
icebp
sbb
bound
loop
jge
adc
jmp
mov
and
adc
sbb
shl
sbb
lods
mov
jno
push
dec
in
enter
cli
in
inc
push
sbb
mov
dec
mov
adc
sahf
data16
or
sbb
decl
add
xor
dec
xlat
pop
mov
and
je
lret
jecxz
test
imul
mov
adc
inc
pop
push
adc
push
inc
push
dec
mov
jmp
shlb
inc
push
std
idiv
call
mov
xor
aad
stos
inc
mov
mov
pop
lret
stos
popl
push
mov
mov
push
fistpll
push
sahf
lods
sahf
xchg
mov
lods
push
and
add
jp
mov
call
ficoml
ret
push
jne
les
int3
jecxz
mov
ret
xor
sub
jle
fisubrs
incl
add
mov
jecxz
stc
shlb
aaa
and
sbb
fbld
ffree
mov
mov
call
scas
fadd
insb
test
cmp
add
decb
loopne
aam
or
scas
lcall
xchg
in
mov
pusha
fprem1
fwait
mov
es
cmp
mov
jmp
xor
xor
jge
aas
xor
and
arpl
xor
test
lods
adc
pushl
sub
pop
outsb
xchg
push
jecxz
mov
xor
imull
inc
ja
inc
stos
sbb
call
mov
testb
mov
hlt
sarl
push
andl
cmpsb
cwtl
stos
incl
dec
xchg
sub
in
xchg
inc
imulb
movsl
aas
pop
lcall
and
aad
pop
mov
insb
loope
or
es
cmovns
insl
and
mov
ljmp
cmp
mov
jg
dec
aas
mov
jb
fstl
add
shlb
stos
xchg
mov
ljmp
imul
addl
xchg
lahf
les
and
scas
popf
xor
mov
push
cltd
cltd
inc
xchg
jne
ffreep
lret
cmp
or
mov
dec
in
sbbb
xlat
or
xlat
cltd
inc
lcall
test
pushl
lea
or
in
push
mov
sarl
mov
decl
data16
test
cmpsb
aad
ds
mov
mov
add
jmp
fiaddl
and
push
in
sbb
dec
xchg
sarl
or
call
dec
dec
call
dec
call
aaa
or
arpl
lcall
ljmp
push
addr16
pop
cmp
jae
xchg
xchg
nop
decb
push
xor
jmp
cmp
mov
sub
repz
ds
xor
lcall
lock
mov
or
sbbb
andb
pop
imul
jmp
popf
cwtl
xor
stos
cmpsb
lahf
jb
test
je
mov
lcall
push
cld
cwtl
aaa
mov
sbbb
pop
lahf
ljmp
incl
stos
mov
push
rorl
fldl
out
xchg
cmc
leave
popa
cld
pop
pushf
xor
lcall
lods
sbb
jbe
xchg
aaa
xchg
loop
bound
lods
sarl
dec
add
pop
imul
lcall
adc
and
pop
add
test
add
inc
cmp
cmp
repz
fldenv
repnz
sbbb
mov
pop
sbb
out
mov
pop
pop
in
fldcw
add
or
call
sahf
mov
dec
cmp
and
cmp
lock
jp
and
pop
loope
pop
sar
push
xchg
pop
dec
inc
sub
jns
dec
lahf
mov
idiv
sub
outsb
imul
xchg
xorl
pop
jp
mov
lds
push
dec
popa
mov
jl
lods
dec
inc
out
jne
mov
lcall
stos
mov
mov
rolb
shrl
and
roll
decl
add
or
out
mov
and
filds
xchg
inc
mov
push
mov
push
pop
or
test
sbb
xchg
cmc
les
shlb
inc
inc
loop
jmp
mov
and
adc
orb
xor
shl
std
call
out
nop
sub
addb
jecxz
enter
and
push
cmp
lock
cmp
pushl
leave
nop
shll
and
nop
cmp
out
mov
xchg
ss
test
lcall
adc
or
sbb
push
je
call
jb
or
inc
push
dec
loopne
add
incl
jbe
cmp
bound
add
popf
mov
fisttpl
mov
ljmp
jb
xchg
jne
mov
fsubrs
addr16
mov
mov
movsb
sarl
add
call
or
daa
mov
lahf
jo
mov
mov
bound
fsubl
incl
lret
adc
xchg
dec
mov
test
push
out
dec
jmp
repz
iret
xor
loopne
jg
dec
jg
ret
fwait
pop
mov
cmpsb
mov
jle
movsl
movsl
pop
sub
mov
pushl
jmp
push
std
jp
and
flds
sub
faddp
fildll
outsb
mov
add
push
sub
add
mov
push
jnp
jmp
jae
testb
cmp
call
out
js
popf
pop
sbb
loopne
psrlw
test
xor
repnz
dec
popf
clc
cmp
or
jmp
daa
mov
lret
fwait
out
cmp
inc
out
and
jl
mov
incl
lods
aad
mov
ljmp
test
cwtl
shll
jae
xchg
sub
pushl
test
sub
sub
sbb
je
sub
cmp
mov
push
das
sub
jmp
fs
inc
repnz
and
jge
aas
pushf
arpl
mov
fistl
mov
xor
add
int3
pop
lahf
iret
aas
or
mov
testl
ds
dec
add
mov
push
add
mov
pushl
das
mov
aas
inc
aad
sbb
pushf
add
popf
add
hlt
stos
inc
inc
jmp
xlat
addr16
add
xchg
dec
inc
sti
inc
stc
xor
aas
sar
outsb
mov
aad
ds
sub
stos
push
ret
mov
out
jg
bound
mov
add
xchg
call
arpl
push
xor
mov
sub
lock
shlb
xor
pushl
ss
iret
pop
aaa
inc
scas
xchg
add
adcl
fmuls
movsl
xchg
loopne
lcall
mov
pusha
jge
sub
icebp
dec
or
loopne
pusha
aad
bound
and
clc
jl
test
sti
imul
push
mov
insb
xchg
dec
icebp
mov
push
mov
mov
popl
cmp
xchg
inc
js
cmp
inc
push
rcrl
push
cmp
loopne
inc
enter
push
cmpsl
fisubrs
jmp
adc
out
dec
fimull
push
ljmp
cmc
xor
inc
lret
stos
imul
sarl
sarl
push
mov
icebp
scas
addr16
push
jle
cmpsb
mov
repz
stos
fcos
in
push
cmp
push
scas
push
pop
and
pop
popf
jmp
stos
pop
jmp
xor
bound
js
and
cmp
jns
lahf
jb
cmp
call
xor
gs
adc
in
ds
sub
xorb
mov
mov
jno
stos
and
clc
gs
jne
pop
add
aaa
inc
mov
or
mov
push
jnp
sarb
stos
mov
lods
ss
jmp
nop
loopne
lds
ffree
lock
add
aam
jb
jge
aas
inc
pop
aaa
pop
ljmp
adc
sbb
push
jmp
ret
sbb
fcmove
popa
cs
loop
scas
cmpsb
xor
xchg
call
sub
loope
enter
ret
mov
insb
adc
dec
cmp
cmp
or
mov
jbe
lock
incl
or
push
sbb
inc
fcompl
push
test
out
jmp
pop
fbld
incl
sub
sbb
inc
ja
pop
in
ficomps
mov
test
lock
cmp
stos
cvtps2pi
mov
in
cmpsl
mov
xchg
sub
mov
inc
pop
int
lds
decl
push
lods
jmp
mov
mov
xchg
xor
inc
lret
adc
popa
ljmp
push
add
push
insb
sbbb
sbb
and
jl
mov
and
por
scas
push
pop
out
les
adc
data16
cmpsl
scas
les
into
push
jo
xchg
data16
xchg
pushl
pop
or
daa
in
ds
outsl
mov
jmp
pushf
adc
xchg
fbstp
and
ljmp
jecxz
lock
or
mov
aaa
aam
and
test
repnz
adc
inc
jmp
hlt
cmp
add
into
ret
mov
push
mov
ss
inc
jge
movsl
push
mov
jmp
aam
xlat
ss
jo
mov
in
xchg
add
out
decl
and
das
jl
xchg
in
dec
scas
icebp
push
sahf
daa
xchg
shlb
fxch
add
jmp
jo
dec
jecxz
ret
jb
repz
out
jo
inc
sbb
inc
sbb
incl
leave
push
fiadds
fnstcw
mov
xchg
mov
add
addr16
mov
mov
js
xbegin
jb
ret
daa
or
or
mov
fprem
clc
iret
jnp
jmp
mov
and
push
xchg
fnstcw
js
jl
lahf
adc
cvtpi2ps
xor
call
addb
rorl
scas
xchg
movsb
outsb
jbe
mov
mov
add
scas
call
mov
rcrl
repnz
push
xchg
hlt
arpl
int
pusha
jo
jl
pushl
cld
sbb
shrl
or
dec
jns
xchg
addr16
fisubl
fs
xor
jmp
pusha
sub
loop
rorl
inc
mov
addr16
subl
fildll
fsub
and
decl
and
inc
insl
or
fcmovnu
jnp
js
pop
inc
lods
leave
mov
icebp
adc
mulb
pushl
mov
ror
bound
inc
adc
add
sbb
clc
addr16
fstl
pop
xor
testl
or
xor
dec
rcrb
xchg
push
cmpsb
add
out
idiv
sub
shll
dec
jae
int3
gs
sub
push
out
testb
js
jne
aad
sbb
push
decl
xor
loop
insl
fwait
xchg
xor
cmp
test
cmpb
xchg
cld
inc
lcall
inc
pop
inc
shlb
mov
lret
push
lods
inc
je
cmp
jmp
or
xor
arpl
das
scas
jne
inc
test
mov
adc
call
ljmp
inc
xchg
pop
data16
cmpsl
sub
mov
mov
and
cwtl
rcr
ljmp
insb
scas
jne
aam
push
pop
inc
cwtl
jae
test
dec
jns
mov
add
call
jp
push
jns
mov
xchg
pop
dec
sti
ret
lcall
jge
je
jmp
push
into
mov
pop
jmp
and
xor
mov
scas
jecxz
sub
cmp
fmull
cld
mov
and
loope
push
jecxz
mov
push
push
incl
call
inc
test
pop
sbb
mov
push
leave
sbb
rcrl
push
mov
push
pushl
insl
shrb
mov
ret
sub
xchg
out
insl
or
mov
jg
jmp
call
aad
mov
aam
mov
xchg
push
and
incl
lcall
or
lea
iret
or
mov
add
or
add
and
call
sub
enter
fsubrs
lret
int3
mov
jmp
std
stc
mov
dec
cmp
add
mov
add
jl
out
or
mov
jp
stos
xchg
fwait
pop
fcmovbe
push
lcall
pop
jae
xchg
inc
mov
inc
mov
dec
adc
rclb
in
xchg
das
test
cmp
out
hlt
pop
sbb
mov
sti
cmp
outsl
stc
cld
inc
std
out
mov
sbb
rcrb
pop
lcall
imul
dec
iret
xor
dec
sbb
int3
jmp
sub
pop
cmp
sahf
cli
or
pop
shrl
imul
push
into
xchg
inc
fldl2t
pop
dec
cmp
lock
xchg
sub
ret
push
cmpsb
mov
out
xchg
incl
cmp
xchg
mov
sbb
cmp
decl
fnstcw
sub
clc
std
mov
imul
fildl
xchg
fwait
pop
iret
push
lcall
jle
iret
hlt
test
repnz
inc
cmp
loop
negb
mov
cmp
add
pusha
jmp
xor
lcall
fists
pop
dec
lret
ja
scas
aaa
sbb
jo
loop
push
sbb
idiv
lcall
ret
xor
push
mov
add
ljmp
into
push
loopne
fcomp
dec
xchg
js
mov
out
test
arpl
out
xor
inc
lds
stc
or
push
ret
xchg
out
cli
xchg
in
pusha
stc
jl
sub
or
mov
nop
push
and
mov
xchg
frstor
mov
mov
imul
fmull
inc
sbb
sahf
outsb
pminsw
jmp
imul
push
fidivrl
mov
or
push
adc
xchg
shrb
xchg
mov
enter
add
ljmp
sarl
pop
loopne
xchg
jns
sub
cld
mov
sbb
fisttpl
into
mov
pop
mov
nop
adc
mov
xchg
hlt
adc
decl
cmp
out
inc
xchg
adc
xlat
ds
in
add
repz
sbb
je
pushl
sahf
pop
sub
or
loope
mov
cmpsb
fwait
roll
stos
cmpsl
scas
cmp
adc
call
xor
jmp
or
ja
cmpsb
mov
in
or
jae
jmp
stos
push
ret
rcl
adc
pop
xchg
scas
xchg
movsl
enter
push
pop
mov
pushl
adc
sbb
adc
test
stos
xor
and
test
jnp
jecxz
jmp
xchg
nop
bndldx
fxch
and
sbb
fstpl
jmp
cmc
mov
lcall
add
inc
mov
mov
push
imul
pop
imul
dec
movsl
cli
popa
call
pop
pop
jbe
or
hlt
and
pop
xchg
lret
out
mov
pop
add
outsb
rcrb
mov
aaa
imul
shll
pop
adc
enter
sbb
in
sub
mov
and
mov
pushl
xor
test
xchg
out
insl
nopl
push
test
rcll
dec
xchg
jle
scas
and
shr
add
scas
mov
popl
inc
in
iret
jo
ret
xchg
jmp
sbb
mov
add
negb
insb
mov
inc
and
mov
or
ljmp
pop
lcall
test
xchg
mov
mov
fistpll
mov
adc
test
jmp
push
jmp
cmp
sbbl
stos
daa
repz
mov
out
aaa
and
and
iret
mov
add
stos
in
xchg
pop
mov
cmpsb
jecxz
dec
ja
jmp
cmp
sbb
add
loop
imul
nop
add
jecxz
cmp
decl
cli
inc
fildl
add
dec
dec
sti
push
jecxz
adc
stos
adc
add
movsl
mov
pushl
inc
ljmp
mov
xchg
or
clc
xor
sahf
sar
call
int3
pop
lcall
fldlg2
lock
push
testb
lods
nop
and
dec
jmp
inc
sub
adc
push
gs
repz
mov
push
into
mov
mov
lcall
pop
mov
inc
repnz
loopne
dec
add
inc
cmpsb
or
or
aaa
mov
bnd
incl
es
jmp
roll
push
inc
mov
out
jno
mov
cmp
and
add
pop
in
jne
inc
fbld
mov
push
lret
mov
mov
xor
ss
jnp
ret
jbe
enter
push
mov
xor
cmpb
sub
lcall
cli
in
inc
jbe
sarb
jl
sub
js
mov
xchg
call
aas
negl
add
jne
gs
aas
cld
jo
inc
fmul
int
sub
lret
xchg
call
xchg
repz
pop
add
lcall
push
xchg
pop
mov
xchg
mov
aad
rcl
mov
les
adc
fs
inc
out
jmp
jmp
mov
inc
push
inc
dec
add
xchg
test
xchg
psubsw
lods
aad
sbb
js
loopne
mov
jae
inc
mov
sbb
mov
idivl
xlat
inc
jb
jmp
or
cmp
cs
sbb
imul
and
fistpl
push
cmpsb
mov
fdivrs
lcall
push
js
dec
cmpsl
subb
addr16
pop
jge
lcall
lret
jmp
or
pop
bound
jns
cli
out
test
lock
jle
test
or
js
add
ljmp
and
or
fsub
insl
push
jmp
push
or
cmp
std
lret
xchg
xor
ljmp
xchg
sar
sti
cld
xchg
add
es
leave
or
scas
mov
mov
incl
std
test
jecxz
icebp
pop
lcall
push
push
pop
mov
lcall
mov
push
mov
dec
sbb
sub
icebp
pop
and
sbb
pushf
dec
push
jmp
std
push
gs
inc
mov
pop
mov
xorl
sbb
call
push
jecxz
jnp
arpl
lret
lods
mov
push
ss
sbb
sub
jmp
jge
push
xchg
ds
in
ss
jg
mov
and
dec
inc
out
xchg
paddsb
mov
and
fbstp
repz
loope
subb
test
popa
loope
push
pushl
nop
test
js
and
push
enter
out
insl
cs
repnz
nop
ds
hlt
push
cmp
frstor
pushf
insl
jns
inc
xchg
push
cwtl
ret
cmp
jne
cmp
outsb
loop
insl
jmp
jmp
movsl
xchg
add
and
inc
loope
pop
movsl
mov
pop
push
arpl
ljmp
xor
cmc
inc
pop
mov
push
dec
push
add
smsw
call
inc
pop
and
aas
mov
dec
lea
dec
xor
sbb
mov
decl
and
cmp
jl
pop
testl
cmpsb
pop
jbe
mov
pushf
outsl
std
mov
ljmp
pop
inc
les
mov
cmp
jno
mov
mov
test
xchg
cmp
add
lret
push
test
push
xor
xor
loope
pop
insb
subb
stos
lcall
sub
push
xchg
jl
push
mov
out
add
sahf
sbb
bound
mov
btc
call
lret
out
pusha
jbe
and
xchg
adc
adc
in
fninit
repz
cmp
lahf
adc
adcb
add
xchg
lods
repnz
ret
adc
mov
xchg
fmull
xchg
pushl
mov
cmp
bound
mov
notb
mov
js
jmp
pop
shll
cmp
out
mov
rcll
add
sbb
sbb
dec
decb
repz
pop
jbe
je
mov
test
mov
jp
pop
jae
lahf
mov
mov
mov
xchg
add
cwtl
sbb
dec
ds
incl
jnp
jecxz
icebp
dec
fwait
mov
sub
stos
sbb
fisttpl
jge
lods
jnp
call
es
movsl
mov
mov
jo
dec
xchg
jns
inc
inc
jne
push
sahf
movsb
and
sub
push
stos
stc
cmp
or
xchg
data16
xlat
and
mov
xchg
in
xchg
adc
mov
inc
lcall
in
inc
iret
loopne
cmc
jbe
hlt
mov
cs
xchg
hlt
push
or
inc
outsl
push
jge
xor
roll
push
xchg
xchg
movsb
mov
mov
rcr
cmp
mov
call
inc
mov
and
aad
mov
xchg
call
arpl
fs
lcall
test
fidivrl
into
arpl
sbb
mov
hlt
lret
mov
ljmp
adc
pusha
sbb
lods
jnp,pn
sar
pop
scas
lods
wbinvd
add
es
pushl
mov
pushf
mov
mov
sub
cmp
mov
testl
jmp
sahf
mov
pop
add
mov
mov
in
popf
enter
imulb
pop
xor
xor
cwtl
test
push
adc
iret
inc
loope
add
cwtl
pop
xchg
in
and
lret
adc
lods
das
mov
mov
out
repz
adc
fucomip
sbb
and
and
xchg
jo
sub
jp
ss
aad
cmp
push
ret
jmp
lahf
stos
xor
imul
in
jle
loopne
jne
add
cmpsl
loopne
js
jmp
cmp
pop
in
js
lock
gs
cwtl
pop
inc
imul
insl
and
mov
decl
pop
popa
test
fisubs
or
cmp
cmpsl
mov
jnp
cs
mov
dec
dec
mov
negl
clc
popf
sahf
ss
and
dec
dec
lahf
nop
stc
inc
addl
stc
ja
or
sub
mov
push
mov
lock
fwait
out
subl
loope
call
or
loopne
pop
sahf
aaa
mov
push
sbb
pop
ficompl
fadds
push
or
xor
cltd
mov
incl
and
add
cltd
aaa
jne
push
scas
daa
mov
jmp
add
aad
jae
pop
jmp
inc
mov
mov
int
sbb
push
aas
setae
jecxz
or
call
sarl
sbb
adc
int
int3
out
dec
cmp
mov
scas
push
scas
lock
dec
ljmp
fs
lods
pop
ss
cwtl
gs
ret
adc
pop
xchg
xor
nop
ret
sbb
jmp
ja
cmp
add
jecxz
lahf
push
cmp
test
mov
repz
add
pushl
and
jbe
enter
and
daa
adc
pop
xlat
ds
pushf
mov
incl
mov
mov
aas
rclb
gs
add
outsb
cli
inc
or
or
nop
movsb
xor
js
pop
xchg
jle
clc
mov
rorb
mov
sbb
adc
int3
aam
test
fcmove
pop
jmp
mov
xchg
jno
mov
dec
fwait
cmove
sbb
or
decl
gs
push
imul
xchg
in
addr16
enter
scas
pop
stos
out
insl
incl
jns
xchg
mov
sbb
into
sbb
lret
in
and
lret
xchg
pop
jns
pushl
jbe
pop
lret
push
xchg
div
dec
and
inc
mov
push
pop
mov
stos
loope
js
inc
jmp
push
push
enter
and
pop
pop
push
icebp
mov
pusha
je
stos
shrb
lcall
mov
test
cmp
pop
mov
inc
pop
sbb
mov
pushl
or
xor
xchg
test
mov
test
xor
ljmp
insb
jp
pop
sub
out
shrb
push
pop
push
movsb
test
xchg
dec
add
lcall
and
cld
xor
mov
pop
fbstp
mov
jl
inc
movsl
pop
or
adc
decl
shll
cld
xor
lea
xor
scas
mov
fs
jg
pop
push
movsb
jbe
jmp
mov
sahf
leave
xlat
adc
je
aad
enter
je
cmpsb
out
push
nop
jge
cmpsl
call
push
sbb
cmp
jb
into
inc
cmc
std
dec
push
xchg
push
into
das
sbb
inc
and
sbb
pop
sbb
dec
and
pusha
pop
mov
dec
lret
out
or
lcall
pushl
mov
sti
add
cmpsb
cmc
fisttpl
les
fcomps
in
sbb
stc
lcall
cld
dec
popa
pop
loop
jg
pop
mov
cmpsb
leave
xchg
shl
out
sahf
out
or
cld
test
push
xor
in
out
pop
das
daa
inc
xor
xchg
cmc
lahf
pop
dec
adc
mov
push
fcos
pushl
adc
icebp
inc
ds
adc
xor
xor
cli
sbb
incl
rcl
scas
fsts
sbbl
loop
adc
subb
push
mov
imul
jp
mov
sub
das
cmpb
outsb
call
and
push
push
cmc
pop
xchg
cmp
mov
dec
or
fistl
xchg
lods
push
xchg
call
fstp
mov
int3
ret
test
pop
inc
xchg
lods
cwtl
rolb
scas
jle
cli
ds
mov
lret
call
mov
test
push
sub
xchg
popl
push
ss
dec
mov
pop
aam
insl
add
jle
push
frstor
fsubrp
lock
or
test
insb
cmpsb
jle
mov
fcom
aad
dec
lock
cwtl
insb
or
cmp
cmp
mov
pop
or
int
and
pop
dec
popf
mov
jmp
fstl
lcall
leave
push
and
movsl
push
cmpsl
push
dec
xchg
push
fisubrl
incl
stos
xchg
out
sti
aad
lock
jge
mov
scas
sub
xchg
push
sbb
test
mov
pushl
fwait
enter
cmp
ldmxcsr
iret
sub
xchg
arpl
cmc
mov
call
out
rcl
sbb
push
xchg
insl
xchg
and
data16
fnstcw
push
call
ret
mov
xchg
loop
mov
mov
mov
fidivl
pop
adc
or
dec
mov
dec
dec
loope
jmp
es
pop
jmp
or
fistl
or
ljmp
out
sbb
mov
inc
jp
add
in
mov
sarb
sbb
test
xchg
sar
pop
das
fs
adc
pop
loopne
cld
iret
cmpsl
push
jb
leave
cmp
dec
aam
rcrb
mov
pop
push
or
out
negb
enter
out
cmp
jmp
mov
insb
jmp
loop
fs
mov
call
xchg
fbld
lea
std
in
lock
xchg
ljmp
mov
stos
stos
push
add
xor
sbb
xor
mov
mov
xor
les
in
cmp
inc
movl
imul
sbb
pop
mov
dec
xchg
xchg
aam
push
stos
rclb
out
ljmp
push
out
cmpb
mov
xor
dec
jns
mov
call
ja
or
pop
jbe
fstps
scas
mov
or
sarl
jmp
jmp
jne
and
ja
xor
gs
inc
mov
sbb
inc
repz
pushl
cmp
pop
sub
or
das
into
dec
lahf
imul
sti
xchg
in
mov
xor
fdivr
out
cld
mov
add
sti
mov
shll
mov
cmp
test
cmp
ret
fwait
sbb
xlat
sub
js
cmp
mov
test
mov
dec
fildll
in
in
mov
mov
xlat
scas
test
jmp
movsb
daa
push
or
push
and
lock
pop
imul
mov
dec
ds
mov
inc
fiadds
xlat
jle
loope
decl
cmp
out
dec
loopne
mov
inc
jg
lret
inc
push
xor
push
les
ss
decl
cmpsb
or
outsw
or
jmp
out
adc
and
inc
int3
push
jmp
ficomps
cli
mov
fisttps
inc
xchg
scas
sbb
adc
iret
cwtl
orl
inc
cmp
dec
mov
movsl
pushw
inc
add
jle
jge
jge
aad
cmc
cmp
or
jmp
fildll
pop
shrb
inc
in
push
and
lods
std
or
movsb
push
sti
lods
in
decl
sub
fsts
add
aam
daa
cmp
xchg
int
jp
cmpsb
mov
lock
lcall
adc
scas
inc
xchg
je
call
mov
cltd
sbb
pusha
mov
jno
arpl
aas
push
in
jo
ffree
xor
xor
popl
xor
adc
pop
jns
dec
jecxz
jmp
loop
xor
adc
jp
fs
push
inc
lock
int3
dec
insb
xor
mov
loopne
incl
xchg
rcr
push
lods
pop
insb
pusha
loope
ljmp
test
mov
mov
pushl
and
nop
sbb
cmp
inc
adc
xchg
cmp
incl
fyl2xp1
ds
mov
fildl
dec
ror
sbb
sub
pop
jnp
xlat
jge
loop
mov
pushl
adc
fidivrs
mov
pop
xor
xchg
xsaveopt
pop
pushf
cmp
rol
incl
cli
bnd
xor
es
mov
push
negl
incl
mov
xor
jb
int3
outsl
jecxz
cmp
dec
pop
scas
xchg
pop
dec
inc
decl
lret
out
scas
testb
movsb
out
cmp
mov
jns
loop
and
in
inc
dec
lahf
pushl
mov
aam
cld
es
bound
adc
addr16
hlt
sub
fldenv
xlat
loopne
stos
jg
jo
pushl
cmc
roll
jae
push
loopne
xor
pusha
fidivl
test
xor
test
ljmp
cltd
pusha
jle
push
push
rolb
cli
cmc
push
cmpsl
jg
fdivrl
jne
out
fs
pop
mov
push
jge
adc
iret
popa
out
pop
outsb
hlt
xchg
pop
jnp
mov
out
and
outsl
shll
sbb
jmp
insb
cmpsl
mov
inc
cmp
xchg
jle
cmp
jg
scas
xor
inc
sub
ja
add
inc
mov
dec
repz
adc
enter
cs
add
push
add
push
add
xchg
cmpsl
cld
push
mov
pop
add
push
mov
sbb
nop
loop
out
or
push
mov
inc
mov
fs
aaa
xor
in
push
dec
dec
loope
xor
int3
mov
sbb
inc
ljmp
push
inc
scas
fdivrp
mov
ret
sbb
insb
pop
xchg
dec
mov
call
mov
icebp
mov
stc
pop
iret
adc
inc
fwait
loop
pop
jecxz
cmp
fildll
xor
cli
cmp
mov
mov
and
mov
hlt
xor
push
sbb
inc
loope
inc
test
aaa
mov
aam
loopne
mov
jbe
popf
cmp
repnz
push
adc
decl
icebp
cmp
sub
xor
push
push
lods
pop
push
rcrl
pop
cltd
mov
call
bound
scas
push
cli
in
jnp
cmp
js
sbb
xchg
sarb
push
lret
out
sti
dec
outsb
aas
jp
jnp
mov
inc
sub
movb
cmp
mov
jo
pop
lods
sbb
incl
xlat
inc
mov
lods
mov
fs
adc
and
cltd
out
xor
orb
jmp
cmp
lret
jmp
xchg
pop
jmp
mov
sbb
dec
outsl
or
incl
xor
push
jb
jecxz
dec
aad
seto
in
sub
adc
ljmp
rcrl
pop
inc
pop
xchg
lret
xchg
xchg
shlb
adc
frstor
rcl
pushl
pusha
jno
int3
pop
loopne
ffreep
cmpb
push
add
push
add
cmp
xchg
repnz
leave
pushl
imul
gs
inc
loopne
push
sbb
repnz
lock
enter
fcmovu
fisttpll
inc
inc
jo
lahf
orb
jo
xor
cld
xchg
xchg
cwtl
loope
mov
jg
sbb
push
or
js
es
fdivl
testl
xchg
pushf
popf
pushl
inc
subl
mov
or
pop
lcall
or
pushl
xchg
std
and
and
test
lds
fs
dec
into
int
cmp
imul
pop
insb
add
fnstenv
push
idivb
in
xchg
dec
and
stc
lret
in
sbb
pushl
push
sbb
lds
pusha
cmp
mov
xor
out
das
dec
insl
sbb
inc
cwtl
sbb
inc
inc
sbb
pop
jmp
and
cli
leave
xor
and
aas
or
pushl
push
enter
pop
pcmpgtw
lcall
xchg
xchg
call
enter
push
movsb
out
ja
push
add
mov
inc
and
repnz
dec
ret
decl
cmpb
cmp
mov
or
adc
test
adc
jmp
lret
divl
sub
pop
enter
push
jno
push
push
icebp
aam
cwtl
in
addr16
jmp
je
into
or
stos
loopne
test
mov
cs
repnz
into
incl
pop
xor
inc
lea
pop
cmp
fimuls
out
lret
dec
mov
test
mov
sub
mov
dec
cmp
std
mov
aas
sub
decl
dec
inc
test
pop
or
xor
jnp
sbb
xor
jecxz
sub
lcall
outsb
loop
jb
xchg
pop
aas
pushf
inc
fs
cmp
adc
incl
or
and
call
shlb
ret
cmp
enter
call
mov
call
movsb
mov
jle
dec
cmpsb
pop
jmp
pop
xor
mov
dec
lock
test
outsl
mov
and
dec
int3
mov
cmp
pshufw
dec
adc
xor
std
mov
xchg
insl
inc
pushf
popf
cmp
mov
pop
les
pushl
in
fs
xorb
bound
outsl
xchg
adc
outsl
jl
daa
push
decl
mov
fidivrl
mov
pop
cmpsl
cmp
or
jecxz
ljmp
or
mov
pop
sbb
adc
mov
in
inc
mov
xchg
pop
mov
ljmp
fidivrs
sbb
fstpt
les
imul
jne
or
mov
lcall
xor
jge
outsb
scas
ret
xchg
ss
in
xor
movsb
aas
mov
fstpt
push
xor
ljmp
push
jb
push
mov
mov
xor
cmp
aad
sub
jmp
rcrl
sub
cmc
fsubrs
jb
jl
pop
adc
out
push
and
decl
mov
dec
enter
int
pop
ret
xor
adcb
lods
sub
ljmp
orb
xor
loopne
test
mov
pusha
ljmp
lea
or
ret
sarb
push
push
jp
je
sbb
adc
loopne
cmp
out
inc
mov
outsl
mov
in
ret
mov
inc
adc
xor
push
sar
push
inc
cmp
sbb
or
loopne
out
dec
mov
add
push
scas
xlat
loopne
ljmp
lcall
notl
ret
fcmovbe
mov
pop
sarb
sbb
jb
cld
push
push
ljmp
push
push
stc
or
shlb
pop
insb
mov
fwait
adc
pop
xchg
pop
ja
push
inc
data16
lcall
add
xchg
dec
bound
mov
mov
adc
movsb
xchg
shlb
ret
dec
pop
push
sahf
cmp
sub
xchg
jae
xchg
push
cmp
fiaddl
aad
mov
call
mov
mov
fimuls
pop
addl
xchg
shl
movsb
mov
test
xchg
mov
ljmp
xor
push
add
fadds
mov
mov
gs
iret
lret
inc
cmp
push
lcall
xlat
sub
cmp
ret
lahf
dec
mov
ljmp
push
das
and
inc
xlat
add
decl
cwtl
aaa
mov
ret
jns
jbe
and
cmc
repz
add
aaa
pop
inc
and
imul
aaa
lcall
xor
adc
rcr
out
stos
andb
cmp
aad
mov
pusha
inc
jmp
lahf
jecxz
sbbb
cmp
loopne
mov
mov
mov
sub
out
nop
decl
mov
daa
je
inc
ds
dec
pushf
jno
es
mov
insb
dec
repz
incl
xchg
popf
lcall
adc
jnp
stos
test
repnz
xchg
test
and
push
lret
xor
mov
mov
inc
mov
pop
stos
cmc
xchg
jp
jmp
or
mov
enter
push
out
sbb
jns
fists
xchg
xlat
xchg
jge
incl
dec
jmp
insb
pop
ljmp
imul
ss
mov
mov
dec
bound
pushl
test
jecxz
adc
add
mov
jmp
popf
xchg
ljmp
psrld
sbb
mov
cmpsl
mov
xchg
ficompl
jl
mov
add
cs
aas
mov
dec
jl
mov
cmp
pop
cltd
push
rclb
loope
jge
inc
idiv
call
ds
mov
xlat
sbb
into
cmp
fdivr
bound
cmp
daa
cmp
nop
pop
cli
lret
xor
das
aad
xor
sub
ljmp
push
xchg
mov
sarb
mov
lods
mov
adc
decl
sbb
jmp
or
icebp
sbb
insl
mov
jmp
sahf
cli
mov
in
mov
jg
cmp
push
dec
cmpb
bound
xchg
jmp
decl
jo
mov
fnsetpm(287
cmp
sbb
out
inc
xor
mov
je
sbb
adc
jg
ljmp
js
lahf
dec
inc
push
push
outsb
enter
ret
and
dec
cltd
fsub
into
dec
add
jecxz
lea
call
xchg
movsl
rcrl
sti
xchg
cmp
xor
mov
aam
in
adc
repz
movsb
decl
mov
inc
pushf
mov
add
xchg
jb
sub
add
fistpl
testl
aaa
jbe
lods
sub
push
pushl
loopne
ja
mov
adc
sub
mov
test
sub
cmp
insb
mov
cltd
jmp
pop
jg
out
outsb
and
icebp
adc
lret
imul
inc
fsubrp
lea
icebp
incl
sbbb
cmp
scas
inc
inc
ret
hlt
ret
repnz
inc
pushl
sub
fiaddl
jl
push
jg
addl
inc
lds
mov
stos
jns
call
push
lea
imul
sar
jmp
arpl
rcll
jle
and
dec
fnsave
xchg
sbb
push
in
dec
xchg
fcmovne
jnp
sub
jno
mov
or
and
loopne
sahf
mov
pop
mov
mov
movsl
shll
ljmp
jne
xchg
faddp
sti
pop
mov
add
jmp
lock
xchg
dec
push
imul
and
adc
jecxz
test
cmp
jl
call
clc
adc
jno
xchg
mov
jmp
scas
mov
pop
cld
insl
fisttpl
ljmp
dec
nop
inc
lret
pop
cmp
enter
testl
cli
push
out
pushl
lret
or
mov
fcoms
shlb
cli
sbb
sbb
outsl
lcall
jbe
aam
fwait
xchg
and
sub
xchg
sti
add
inc
int3
ljmp
cwtl
dec
xchg
mov
add
jb
int3
outsb
sub
in
ja
inc
out
lahf
fisubrl
inc
jae
ror
call
decl
js
or
aas
adc
mov
jo
push
xchg
cs
cs
inc
and
push
repnz
push
iret
sbbl
mov
push
arpl
dec
dec
and
mov
adc
add
pushl
sub
and
call
xlat
sub
daa
cmpsl
js
in
in
outsl
outsl
pop
mov
mov
push
adc
mov
dec
insl
jb
or
ljmp
lds
adc
jo
jecxz
mov
sahf
sbb
xor
mov
lods
call
pop
xchg
jecxz
addr16
inc
dec
and
enter
sub
data16
nop
mov
cmpsl
sbb
jg
xchg
test
pop
ja
pop
imul
add
or
inc
xchg
rcll
inc
ljmp
imul
lock
movb
pop
sbb
sbb
cmpsb
cld
out
ja
pushl
cmpsb
int3
lret
movsl
inc
fisttpl
push
jg
fdivl
add
out
fildl
rclb
jmp
cmc
mov
and
mov
cmpl
iret
and
mov
jg
mov
fidivl
xor
js
lcall
or
or
or
loope
decl
sub
testb
divb
std
loopne
repnz
inc
cmp
sbb
int
xchg
jmp
xor
rcl
fstl
mov
test
insb
dec
jns
sbb
enter
push
sub
ljmp
jno
stos
test
cmp
pop
pop
fisubl
test
fwait
aaa
addr16
dec
jno
in
inc
mov
push
hlt
sub
mov
push
mov
xor
mov
mov
mov
dec
xchg
jg
ret
push
push
and
scas
mov
cmp
in
dec
insb
test
jmp
inc
popa
xchg
or
push
adc
int
cwtl
lds
jmp
filds
or
stos
lock
jae
fldt
aas
aam
pop
je
add
and
push
xchg
in
adc
testl
or
cmp
xchg
clc
in
push
mov
cmp
fcoml
jns
shrb
bsr
aaa
adc
mov
cmp
jbe
sbb
scas
sbbl
pop
cmp
push
ljmp
mov
xchg
pop
inc
mov
insb
mov
movl
xor
push
shrb
add
add
mov
aas
movsb
dec
daa
jle
jbe
sarl
call
cli
sub
out
imul
pop
pop
es
jnp
insl
ds
cltd
mov
jecxz
xor
dec
mov
incl
fwait
leave
cmp
sbb
sbb
std
pop
sub
add
inc
mov
lret
ret
mov
jmp
push
scas
jbe
xor
notl
pop
sbb
cwtl
and
and
lock
call
in
subb
push
and
sbb
push
xor
outsl
rcl
fwait
aad
jo
shll
ljmp
sub
cmp
out
sbb
es
add
mov
incl
and
lds
pop
fsubrl
cs
sbb
or
or
push
das
lods
dec
out
add
mov
rcll
movsb
sbb
lds
inc
in
xchg
pusha
cmp
xchg
cs
xor
xchg
xor
aad
push
sbb
fwait
add
mov
dec
xchg
mov
mov
mov
iret
in
mov
cmp
das
sbb
call
sbb
daa
mov
mov
mov
mov
popl
jl
and
incl
das
fwait
mov
sbbb
jmp
jecxz
movsl
push
cmp
incl
mov
mov
js
loop
push
ficompl
mov
dec
xchg
mov
data16
in
call
movb
jecxz
rcr
sub
rcrl
jbe
scas
adc
popf
cmovg
incl
mov
mov
ret
inc
mov
out
lds
adc
test
or
add
jmp
xchg
cmp
fwait
push
and
rcl
xor
mov
xor
cmpl
push
cwtl
jne
cmp
adc
sbb
arpl
adc
push
sbb
aas
insb
inc
push
test
cmp
mov
pop
cmpsl
xchg
pop
xor
lods
xchg
or
testb
lods
insl
or
ljmp
loopne
xchg
sub
jo
jg
xchg
lcall
add
adc
call
in
push
mulb
and
les
sbb
scas
pop
movsl
dec
mov
push
cmp
xchg
stos
fdivs
idiv
scas
adc
lods
cmc
adc
scas
adc
pop
inc
add
ds
repnz
lods
mov
dec
mov
mov
jo
push
cmp
hlt
mov
mov
mov
scas
call
sub
into
loopne
mov
nop
arpl
es
push
pop
mov
loopne
dec
pop
push
push
lcall
xor
push
pop
push
loopne
sub
mov
orb
icebp
push
xlat
fstps
call
cs
js
ss
popf
pop
out
roll
mov
andps
imul
rclb
push
dec
decl
pop
and
cwtl
in
sub
xchg
in
cltd
cmp
mov
pop
jge
outsl
sahf
mov
lods
sbb
cmp
inc
sbb
dec
push
sbb
sbb
jg
outsb
daa
xor
jns
push
inc
mov
xchg
incl
popa
orl
dec
es
fistpll
outsb
jno
mov
incl
notb
cmp
inc
jnp
clc
pop
inc
push
adc
es
lret
inc
mov
mov
orl
movsb
std
mov
sub
movsl
and
ret
adc
xlat
int
xchg
insl
mov
decl
pop
cmpl
fcmovnbe
fs
bound
mov
pushf
std
dec
inc
outsl
gs
incl
insb
inc
movsb
loop
icebp
push
fwait
pop
fwait
sub
sub
or
into
mov
and
dec
lret
ljmp
cltd
inc
sub
jns
adc
sarb
inc
jle
cmc
jmp
or
sbb
fmul
xor
adc
imul
or
inc
shlb
icebp
fstp
ljmp
mov
jmp
lock
inc
jb
in
out
roll
imul
sbb
jno
mov
jmp
ret
lock
xchg
xchg
xchg
aam
mov
dec
cmpsb
xchg
xchg
mov
sti
dec
lcall
dec
call
or
pop
xchg
std
xchg
pop
aas
mov
in
call
adc
shrl
mov
and
sbb
enter
mov
lahf
repnz
aas
ud0
call
inc
add
hlt
insl
mov
push
mov
mov
dec
xchg
out
call
inc
dec
push
push
cmp
mov
jno
es
test
push
int
xchg
decl
jp
push
cmpsl
inc
mov
cmp
cmp
sub
sub
adc
xor
inc
data16
aad
xor
fdivs
xchg
call
dec
jnp
jecxz
movsb
dec
ret
je
dec
and
jmp
jo
rclb
xchg
dec
ret
cmpb
push
sub
adc
out
jg
popf
mov
inc
mov
mov
and
lret
xorb
pop
inc
xchg
pushf
pushl
xor
cltd
mov
add
scas
mov
fldenv
cmp
add
cmp
pushl
ljmp
inc
fcompl
out
aad
add
jmp
dec
aam
or
pushl
mov
sbb
ss
das
clc
inc
cmp
sub
sbb
enter
jp
xchg
call
daa
fldcw
enter
fidivrs
icebp
jb
xor
inc
lock
pushl
jp
repz
fyl2x
andl
mov
mov
incl
fisubrl
push
bound
fisttpll
pop
pop
hlt
inc
push
pop
pop
fwait
mov
cmp
aas
mov
xchg
dec
sbb
push
lock
aaa
cld
aam
add
push
sar
ljmp
lds
adc
iret
scas
or
incb
and
jns
sub
repz
mov
xor
or
pop
push
cmpsl
pop
cmpsl
out
iret
jmp
sbb
jno
add
add
xchg
add
cmp
pop
cmp
faddl
ret
dec
jmp
jae
int
sub
fmull
pop
and
mov
lcall
lahf
out
push
pop
push
add
mov
pusha
clc
jno
lahf
stos
mov
ror
aaa
jne
cmp
in
ja
push
inc
pop
push
ljmp
push
insb
aaa
dec
fldln2
scas
addr16
ret
insl
pushl
jne
and
jnp
mov
cli
jp
movntq
out
add
mov
or
pusha
jmp
js
mov
insl
mov
insl
out
dec
addr16
ds
push
scas
outsb
fldl
test
jmp
fmull
sub
jmp
mov
mov
das
shlb
adc
sbb
ret
call
out
sbb
cwtl
pop
push
xor
xor
es
pop
push
out
cmp
inc
scas
or
aas
cmp
fisubl
add
daa
cmpsb
mov
cmpsl
adc
add
xor
aaa
jmp
mov
imul
mov
in
hlt
rolb
cli
cmp
out
movsl
xchg
xor
sub
notl
pushl
gs
sbb
stc
dec
or
adc
mov
mov
leave
icebp
test
or
add
call
or
ss
lods
jbe
xchg
test
cld
sti
aas
or
cmp
cmpsl
push
pop
and
sub
sbb
adc
inc
add
xchg
push
sub
sarl
dec
sub
call
ret
fisubrs
xchg
aad
mov
ljmp
int3
inc
aad
popf
sub
mov
fstps
loop
fwait
xlat
orb
mov
mov
pushl
imul
out
mov
ret
sbb
add
pusha
dec
cwtl
imul
call
jecxz
sbb
fmull
lahf
mov
xchg
ljmp
jg
arpl
stc
pop
adc
jp
icebp
cs
imul
cld
je,pn
shll
icebp
jmp
inc
pop
in
lahf
mov
push
orl
lods
fnstsw
cmp
cwtl
cmpsb
and
popf
inc
push
jmp
lock
dec
push
imul
pusha
push
pop
push
mov
testl
mov
ljmp
scas
and
push
testb
dec
push
js
sbbb
mov
and
pushl
mov
cmp
pop
and
scas
insl
dec
mov
cmp
and
jecxz
gs
pop
call
inc
and
scas
cmpsl
push
inc
cli
adc
and
jle
icebp
sbb
dec
add
adc
jnp
incl
ljmp
movsl
sub
test
negl
scas
mov
out
or
dec
push
xor
lret
cltd
push
daa
popf
sub
or
mov
stc
adc
pushl
lods
or
sbb
sti
jnp
push
iret
aas
pop
jl
mov
cld
pop
dec
mov
mull
lcall
pusha
xor
jb
fwait
mov
pop
push
cmp
xchg
fbstp
adc
lcall
adc
adc
addb
jle
jl
call
call
jl
xchg
adc
lods
fucomip
bound
std
sbb
push
add
jnp
mov
fdivl
mov
sbb
xor
cltd
add
adc
adc
int3
int
pop
hlt
and
movsb
incl
lds
rclb
inc
fisttps
pushf
lea
and
ret
shrl
jle
mov
nop
dec
addb
or
xchg
mov
mov
fcos
decl
jg
dec
dec
mov
dec
testl
pushf
adcl
into
es
decl
ret
mov
pop
ficoml
test
jae
dec
movsb
shrl
into
mov
dec
lods
or
dec
std
sbb
jp
inc
gs
pop
pop
fbstp
insb
jo
cmp
es
push
dec
xchg
mov
incl
aaa
dec
sbb
or
sbb
enter
fldl
mov
mov
push
xchg
push
jmp
inc
sub
ret
lock
aam
ja
shll
bound
sub
mov
xor
and
negb
mov
lea
fs
or
stc
popa
pop
insl
mov
ljmp
mov
lods
mov
mov
mov
mov
aaa
mov
ljmp
push
pop
mov
hlt
pop
movsl
fwait
mov
jmp
imul
aad
call
insl
mov
mov
pusha
scas
das
shrb
push
addr16
test
cmc
lds
mov
dec
call
pushl
add
jg
mov
adc
and
or
inc
subl
iret
ss
ljmp
inc
mov
jnp
add
in
addr16
pop
cmp
aad
cmpsl
stos
repz
lahf
mov
inc
adc
jmp
cmp
sbb
adc
addr16
fcmovb
mov
sub
call
mov
ficomps
and
fstp
sub
int
rcrb
mov
decl
and
in
movsl
xlat
lcall
daa
and
mov
out
clc
rol
pushl
push
scas
sub
push
mov
xchg
divb
inc
pop
cmp
lds
mov
sub
call
mov
icebp
inc
scas
xchg
sti
pushf
mov
imul
lods
pop
ja
sbb
inc
fimuls
inc
mov
mov
mov
sbbl
fs
or
xor
loopne
icebp
dec
pop
jae
popf
ret
and
call
mov
rcrb
xor
jmp
push
and
mov
mov
pop
das
pushf
ljmp
jmp
push
or
out
std
aam
nop
into
and
and
mov
mov
jmp
cmpsb
mov
pusha
adc
test
xor
add
xchg
fists
dec
cmp
jmp
jmp
ret
lcall
xor
test
lods
xor
pop
sub
ljmp
adc
jge
fnstenv
jg
lock
mov
xchg
xchg
dec
jnp
ss
lcall
in
push
in
push
fiadds
lods
mov
fimull
psubw
lea
cld
in
pop
stos
dec
out
call
fimuls
mov
popf
cwtl
mov
push
ss
push
or
jecxz
add
int3
ds
decl
pop
dec
les
jb
aam
inc
adc
pushf
lods
stc
icebp
pushf
xchg
out
add
movsb
cmp
incl
jle
mov
inc
movsl
outsb
test
push
test
test
xor
sub
cmp
jmp
shl
hlt
f2xm1
mov
jae
xchg
jnp
push
popa
les
fs
and
mov
sti
into
inc
pop
aas
and
incl
mov
movsl
jecxz
sahf
sub
xchg
push
pop
inc
das
inc
and
dec
cmc
cmp
jmp
fdivs
std
mov
mov
mov
or
push
fistpl
rolb
incl
stos
lcall
sub
xchg
or
adc
cmp
cld
xor
jmp
mov
scas
loopne
jl
dec
incb
and
sub
add
shl
gs
ds
dec
ljmp
add
mov
jae
lret
and
mov
incl
movsb
cmp
mov
outsb
cmpsb
subb
inc
mov
addr16
dec
inc
lock
mov
test
pushl
std
adc
ret
popf
add
sbb
add
nop
ljmp
pushf
xchg
pusha
pop
sub
decl
sbb
jmp
out
out
popf
mov
inc
dec
mov
loope
inc
mov
js
cltd
fistl
out
pop
pop
scas
jns
xchg
dec
ret
fisttps
daa
jg
outsb
sub
push
call
das
inc
pop
and
mov
mov
mov
idiv
or
xchg
call
repz
std
xchg
adc
pop
jae
jecxz
cltd
inc
lret
mov
mov
pushf
jmp
cltd
dec
loope
inc
mov
or
cwtl
and
ret
mov
adcl
xor
push
stc
test
jb
sub
or
aad
dec
andl
xchg
js
call
push
sarb
jns
in
rorl
jne
cld
mov
inc
dec
repz
xor
dec
stc
sbb
outsb
add
sbb
inc
push
xlat
cmp
dec
and
adc
hlt
jne
lea
clc
and
inc
push
out
outsl
xor
loop
lea
dec
sub
mov
mov
incl
arpl
sarb
inc
lods
fcmovnbe
decl
dec
data16
adc
mov
ljmp
mov
sbb
stos
jle
or
mov
stos
cmpsl
lahf
icebp
push
mov
and
enter
sub
repz
sub
cmp
mov
jb
in
pop
sbb
push
call
divl
jle
aaa
mov
data16
repnz
mov
add
loop
out
lcall
jle
or
or
subb
ret
ror
movsb
dec
loopne
jg
iret
xchg
loop
lcall
inc
mov
dec
cmp
inc
jo
call
mov
cmp
call
test
mov
sti
or
pop
out
xchg
cmp
repz
ss
out
cld
sbb
lcall
jle
or
cmp
jle
xchg
or
and
loopne
aad
loopne
incl
push
int3
lahf
insb
out
inc
rcrb
add
incb
mov
call
adc
pop
sub
and
push
xchg
cmp
divb
xor
test
ljmp
nop
sub
imul
jmp
jmp
cmp
hlt
push
lret
jmp
out
push
sahf
ds
and
fcomps
mov
icebp
out
inc
jge
js
adcb
push
or
mov
outsl
int
lahf
xor
xor
icebp
neg
add
xor
inc
dec
push
xor
outsl
sub
jne
insb
lods
xor
mov
push
xchg
loope
int
push
push
or
lcall
fadds
jno
out
push
sbb
xor
dec
sahf
jecxz
lea
mov
mov
push
aas
dec
dec
scas
mov
mov
dec
pop
mov
mov
sbb
add
mov
aam
jmp
adc
lds
adc
out
mov
dec
cmp
jbe
outsl
je
faddl
pushl
jns
leave
shr
mov
or
sahf
adc
pushf
xor
in
lahf
je
pushl
idivb
cmp
jno
leave
fidivs
cltd
into
pop
stc
insb
mov
das
stos
enter
jmp
sub
enter
pop
iret
in
lret
cmp
push
mov
mov
incl
adc
es
sub
mov
mov
aam
mov
repnz
outsl
cmp
decl
or
mov
cmp
mov
loop
aad
jl
out
xchg
ljmp
jg
pop
mov
xchg
dec
stc
cmp
jb
jb
into
xchg
subl
dec
mov
pop
gs
call
pushl
push
cli
or
xor
ret
ljmp
dec
iret
ror
aas
mov
pop
sub
inc
pop
lods
xchg
sbb
fwait
addr16
mov
xchg
push
push
mov
inc
adc
dec
sub
push
push
fcmovnu
push
cmp
xchg
aaa
push
cmpsb
lcall
fimull
out
fstpt
cwtl
inc
andb
sbb
sub
sub
jp
mov
test
jge
pushf
std
jge
cmp
movsl
push
jmp
in
add
imul
xchg
cmp
das
xchg
jg
out
xchg
pmaddwd
cs
pop
daa
jmp
leave
cs
stos
testb
aad
jae
push
rcr
jmp
xor
cld
inc
xchg
pushl
jg
adc
xchg
dec
add
mov
stos
loopne
in
mov
cmp
leave
pop
lcall
aas
outsl
push
jg
mov
pushf
je
mov
cld
jge
jno
stc
imul
cwtl
sahf
adc
call
lcall
xor
punpcklwd
dec
aam
lds
cmp
adc
mov
fcoml
push
fmull
jmp
mov
xchg
mov
sarl
das
and
loope
cli
aaa
lcall
cs
imulb
xlat
mull
push
cmp
cmp
test
rcll
add
js
imul
push
pop
sbbb
push
movsb
dec
int
mov
push
pop
dec
push
decl
imul
mov
jmp
inc
inc
mov
shl
cltd
dec
cwtl
clc
nop
jbe
inc
lret
movsl
sub
pop
es
dec
cmp
or
testl
mov
sub
hlt
mov
ljmp
jne
push
xor
int3
push
sub
mov
mov
xchg
decl
jo
and
std
repnz
in
ret
jg
imull
and
mov
lods
mov
lcall
std
fs
mov
pop
adc
aam
int
add
addr16
mov
or
pop
lock
push
pushl
add
mov
popf
mov
fldpi
outsb
mov
movsb
push
out
pop
imul
incl
adc
adc
and
xchg
mov
add
pop
arpl
mov
ret
loop
test
jmp
sub
mov
mov
lea
out
idiv
xchg
mov
fdivl
jb
mov
sub
stc
push
ss
jmp
test
enter
or
and
inc
xchg
lahf
push
jge
mov
cmp
fdivrs
adc
mov
ljmp
fdivrl
insb
pop
incl
decl
lods
sti
jns
cwtl
das
mov
dec
sub
test
pop
and
sbb
mov
xor
imul
cmp
mov
data16
dec
inc
aas
inc
call
out
mov
add
popa
inc
rorb
jae
pop
jl
iret
mov
mov
mov
call
or
pop
arpl
out
sarl
push
outsl
gs
daa
pop
pop
out
add
xchg
jmp
loope
aaa
inc
jns
push
lea
clc
mov
adc
xor
insb
pop
pop
inc
add
mov
decl
inc
sub
movsb
adc
icebp
lea
mov
xchg
push
add
andb
dec
xchg
stos
jns
pushl
pusha
xor
add
mov
inc
xchg
aad
shl
dec
cmpsl
sbb
in
push
lea
sar
decl
and
xchg
enter
lcall
or
jmp
ljmp
int3
sahf
lods
dec
nop
loop
mov
dec
pusha
jae
jle
pop
mov
push
jbe
out
fisubs
pushl
mov
inc
sbb
mov
xor
xchg
xor
inc
mov
orb
pop
cmpsb
sub
call
ret
xchg
push
cli
sub
out
nop
xor
repz
mov
iret
push
inc
ljmp
jmp
fstpt
and
xor
push
frstpm(287
into
nop
xchg
fwait
inc
cmp
aas
dec
xchg
mov
std
imul
ja
sub
xlat
and
mov
repz
bound
ds
outsb
cmp
cmp
push
lret
cmp
testb
out
xor
sti
mov
jmp
sahf
add
sub
stc
sub
xlat
fisubs
inc
stos
adc
mov
stc
icebp
repz
lcall
std
fdivrp
mov
pop
rclb
xor
jl
push
out
into
ljmp
aad
repnz
les
aad
mov
testl
add
fdivr
call
inc
lock
sub
test
lods
inc
xchg
pop
movsb
sbb
fmuls
push
pushl
mov
sub
add
int
cs
xchg
das
ds
call
inc
pop
add
dec
mov
out
cmp
add
jnp
push
or
push
add
dec
ljmp
popa
out
clc
cld
mov
cmpsb
ds
xor
or
fisttpl
xor
test
jle
imul
or
js
push
and
jmp
pop
loop
out
in
mov
das
fisubl
mov
mov
sub
inc
jno
jge
repz
and
pop
arpl
mov
test
adc
xchg
or
lcall
mov
testl
dec
insb
add
and
pop
fwait
push
mov
cli
mov
fstpl
repz
inc
push
jno
inc
mov
add
test
push
inc
test
idiv
decl
push
mov
cmp
fcoms
pop
cmp
int
rcrb
xor
fcmove
xchg
mov
cmp
inc
ret
dec
sbb
lret
outsb
ds
or
push
xchg
sub
mov
adc
ljmp
imul
sbbl
push
mov
cltd
clc
cmc
cs
rcr
dec
shrl
jmp
xchg
lock
in
in
push
sub
or
or
mov
jns
incl
sub
pop
incb
test
push
seto
pop
mov
insl
nop
mov
movsb
adcb
decl
daa
lret
mov
pop
sub
shlb
dec
inc
xor
push
push
mov
ljmp
js
ljmp
sub
and
stos
cmp
pushf
jg
std
test
mov
aaa
ja
test
aad
and
lods
lods
jae
xlat
cmp
decl
sbb
mov
inc
cmp
adc
out
lcall
dec
frstor
dec
mov
mov
ds
mov
jle
mov
std
repz
icebp
popa
ficoml
decl
and
dec
sbb
xchg
mov
stos
add
jmp
mov
xchg
cltd
aaa
and
fisubl
push
movsl
divl
pop
pop
in
or
mov
xor
jmp
test
adc
enter
shrl
divl
and
fcmove
int3
hlt
mov
lcall
clc
xlat
ret
pop
xchg
xor
add
mov
push
syscall
sar
jmp
pop
cld
mov
fs
and
mov
pop
pop
rorl
and
pop
xor
decl
push
int3
jb
imul
je
mov
cmp
mov
call
inc
repnz
mov
jbe
sub
cmp
mov
pop
sbb
inc
cmp
js
or
out
ljmp
pusha
fcmovb
xchg
enter
in
aam
add
test
imul
push
int3
sbb
aas
decl
mov
inc
out
adc
jo
mov
jl
mov
incl
push
aaa
inc
cmp
mov
out
movsl
sbb
adc
or
ljmp
mov
add
mov
int
adc
and
out
push
loope
jmp
ja
pop
fs
test
andl
hlt
data16
sbb
sub
cmc
or
das
push
insb
addr16
jmp
sbb
push
stos
xchg
loop
shll
lods
or
mov
sub
aad
mov
jb
or
xor
pushl
jne
rcll
xchg
enter
out
mov
sbb
dec
sub
hlt
popf
push
stos
and
pushl
cmp
pushl
mov
stc
inc
in
std
pop
mov
rcll
mov
pushl
push
mov
push
adc
shlb
pop
outsb
movsb
mov
test
daa
loop
repnz
xchg
call
pop
xchg
cwtl
nop
mov
mov
cltd
sub
inc
rcrb
push
fldenv
jmp
pop
pusha
dec
popf
loope
outsl
and
inc
mov
mov
inc
adc
mov
push
mov
popa
mov
mov
add
lea
cltd
lret
pushl
push
sbb
xchg
ja
pop
add
mov
loopne
les
movsb
dec
dec
pushl
out
movsl
sub
test
inc
sahf
jb
je
stos
pop
js
adc
lcall
or
decl
iret
cmpsl
test
push
mov
mov
dec
mov
jmp
arpl
jmp
xor
xor
out
insb
or
push
aam
or
shrb
loop
add
jmp
sahf
push
dec
filds
dec
cmp
fildl
sub
mov
out
call
and
jns
decl
add
testb
cld
or
enter
and
add
add
fstps
ljmp
dec
pop
adc
push
jecxz
mov
inc
leave
fmuls
mov
cld
inc
daa
icebp
or
cmpsl
sahf
test
xchg
sbbb
cmc
xchg
adc
and
xorb
lcall
test
popf
cli
fimull
xchg
fsubrs
xor
repnz
inc
cmp
or
pusha
or
jmp
lret
adc
push
rcrl
adc
das
icebp
pop
jne
adc
pushl
mov
mov
mov
jecxz
loop
mov
pusha
and
jae
mov
jle
mov
test
clc
insb
ret
jnp
pusha
outsb
int
mov
stos
mov
mov
lea
nop
jp
add
sub
xchg
sbb
or
dec
sbb
andb
and
ljmp
lds
sub
adc
movsb
xchg
mov
add
iret
ds
jo
push
mov
movsb
pmullw
stos
jl
mov
mov
mov
mov
xorl
or
decl
and
push
in
std
cmpsb
test
pop
add
jg
pop
sub
mov
push
in
call
icebp
mov
lcall
lds
inc
mov
inc
xchg
scas
lahf
xchg
push
call
stos
mov
ja
fsubrs
jo
push
or
sub
jae
scas
ret
call
sub
xchg
pop
icebp
xor
lock
xchg
inc
addr16
mov
pop
jo
adc
out
push
pop
add
pop
insb
fnstsw
xchg
scas
inc
jo
inc
sarb
addl
fnstsw
in
or
xor
lock
add
cmp
xor
push
push
ja
mov
insb
pushf
jmp
adc
bound
je
sub
xchg
scas
pop
ret
vmulss
aas
add
sub
jmp
inc
dec
sub
inc
std
jp
rorl
call
dec
push
add
sbb
pop
scas
shlb
mov
mov
pushf
pop
mov
jge
pop
adc
ljmp
gs
sbb
out
jg
inc
jno
fmul
pop
adc
shlb
add
jmp
iret
jl
xlat
call
pop
test
cld
lret
jae
inc
cmc
fisubrl
xchg
fwait
sbb
hlt
jmp
adc
test
mov
sbb
addr16
mov
fdivl
lret
lcall
jnp
sbb
inc
mov
addr16
cmc
repz
add
in
mov
nop
jl
cmpsl
xchg
mov
mov
call
mov
outsb
adc
scas
aas
jge
jg
fdivp
and
inc
pop
and
pop
jp
xor
popf
jmp
inc
in
stos
pop
inc
mov
mov
aas
sub
mov
jmp
pushl
aaa
xlat
icebp
gs
pop
pop
inc
loope
je
cmp
leave
movsb
movsl
fidivrl
ds
insb
or
jmp
sub
cmp
mov
jge
jne
aaa
jno
lret
int3
push
in
dec
fldl
add
push
xor
call
or
add
int3
test
cld
sbb
or
leave
mov
dec
and
inc
fs
ljmp
pop
lea
insl
cmp
mov
add
sti
xor
inc
jnp
leave
mov
clc
test
add
gs
out
fnstcw
cli
outsl
inc
lods
dec
lea
je
sti
stc
leave
mov
mov
xor
mov
pop
cmp
mov
fs
daa
jnp
cmc
lcall
ret
or
mov
sub
js
das
jle
xor
enter
call
sbbl
xor
mov
dec
dec
inc
ss
pop
and
cs
in
push
or
mov
or
shrb
jno
xchg
and
mov
push
mov
mov
push
inc
ss
jle
and
pop
sub
roll
adc
scas
cmp
jmp
out
icebp
push
sti
cmp
xchg
gs
and
inc
fisubl
add
out
and
decl
xchg
lret
test
cmpsl
mov
sub
popa
imul
inc
mov
jg
ljmp
sahf
adc
mov
inc
fcmove
neg
xor
inc
adcb
loope
cli
sti
push
iret
adc
lea
push
insl
pusha
in
xlat
imul
sub
adc
repz
hlt
in
call
jmp
inc
cmp
inc
adc
sub
inc
jge
mov
mov
out
decl
or
mov
lock
mov
lock
sub
mov
sub
mov
cmp
inc
add
and
pushf
mov
jo
or
call
ret
flds
jmp
popa
sbbb
cmpsb
orb
xchg
mov
andb
cmp
mov
ljmp
inc
and
fxch
aaa
adc
popf
xor
cmp
je
push
dec
mov
repz
out
aas
enter
decl
pop
add
push
xlat
pop
jge
mov
inc
mov
xchg
sbb
mov
push
jne
xor
ret
scas
jl
xlat
push
ficomps
or
test
jge
adc
add
mov
inc
and
sub
out
int3
loop
bound
gs
enter
xor
out
cmc
inc
pushl
rol
int
adc
mov
lods
lods
sbb
xchg
mov
sub
es
jmp
ja
cltd
popa
dec
pop
nop
inc
sbb
imul
mov
aad
adc
jo
adc
lea
call
rcl
jl
pop
out
pushf
popf
in
push
mov
das
inc
addr16
into
imul
jecxz
filds
inc
aaa
or
xchg
xchg
ret
iret
lahf
and
pop
cmp
ret
es
stos
out
ljmp
xchg
gs
scas
scas
dec
or
cmp
fisttps
shlb
and
ljmp
sarb
inc
or
pop
cmp
icebp
mov
xchg
jne
cs
sbb
in
mov
mov
jecxz
dec
std
xor
in
push
popa
xchg
inc
sarb
adc
pusha
fcmovbe
out
xchg
dec
inc
cmp
dec
sub
adc
add
in
mov
movsl
push
test
out
pushl
jae
jne
mov
dec
mov
pop
shrb
andl
jle
daa
xchg
arpl
dec
jmp
adc
mov
rol
pushf
fdiv
dec
mov
sahf
in
sub
sti
arpl
pushl
push
and
lret
jge,pt
leave
out
sub
repz
cmp
push
sub
fadd
adc
rclb
lcall
test
repz
add
scas
cmpsb
hlt
mov
leave
sub
lahf
gs
jl
mov
in
hlt
fiaddl
lcall
dec
insl
xor
lods
sbb
xchg
inc
imul
sub
xchg
int3
xchg
push
clc
mov
lret
xlat
pop
es
into
es
mov
loop
lcall
sub
outsb
add
lret
js
aam
in
pop
add
push
xlat
push
out
xor
lcall
mov
ljmp
dec
pop
mov
jnp
sbb
andl
lret
sti
inc
aad
sub
inc
ret
push
xor
or
xor
pop
lds
xchg
jp,pn
incl
aad
repnz
mov
cmpsl
js
jb
push
mov
adc
cs
frstor
mov
inc
dec
jne
xor
clc
fbld
sub
stos
jo
mov
dec
cmp
decl
js
xchg
xchg
enter
stos
mov
sbb
jmp
jae
mov
inc
jb
out
dec
lds
push
sar
xchg
sti
std
inc
xchg
mov
pop
loopne
cmp
push
jmp
cltd
inc
jne
scas
jmp
addr16
test
test
scas
sub
inc
or
xor
ret
movsl
cmpsl
mov
fnstenv
lock
mov
ret
adc
add
sbb
test
dec
pop
mov
inc
add
out
xchg
mov
xor
in
outsl
fimuls
or
fmulp
inc
fistpll
data16
ljmp
test
or
call
popf
dec
insb
cmp
sub
or
dec
cmpb
lcall
xchg
in
mov
aad
inc
cmpsl
cmc
hlt
mov
sarl
call
lcall
jmp
inc
xchg
push
inc
jbe
fcmovbe
out
jmp
call
xchg
xor
jns
imul
push
lret
and
fwait
jecxz
lea
call
and
mov
insb
gs
nop
add
or
jae
fidivs
add
xor
dec
in
sbb
lret
scas
ljmp
cmp
add
pop
mov
xchg
js
pushl
jge
cmpsb
cmp
lret
aad
aas
inc
push
subb
shlb
ficomps
xchg
jp
sbb
xchg
cmpsb
mov
cmp
mov
mov
iret
add
arpl
call
xor
insb
lods
popf
push
mov
adc
jno
repnz
inc
cmp
or
lcall
jp
sahf
ja
xchg
cltd
dec
sbb
xchg
xor
jmp
xchg
rol
jmp
add
icebp
rorb
call
xchg
push
and
mov
mov
pop
mov
insl
shrb
ja
or
mov
pushf
pop
sti
jg
mov
ret
mov
jmp
sub
mov
mov
icebp
push
outsb
in
pop
xchg
and
orb
decl
sbb
cmp
ss
stos
loope
sub
xchg
hlt
xor
inc
test
ljmp
jle
push
cltd
loope
fs
rol
jb
test
pop
cmp
pop
stos
mov
xchg
xor
pop
sahf
call
out
sbb
mov
imul
xchg
out
pop
jae
inc
orl
fildll
mov
pop
mov
addr16
inc
or
jns
test
mov
push
mov
shll
decl
jne
aas
cmp
or
mov
pop
push
mov
movsl
xchg
ret
mov
push
ljmp
idiv
xchg
jns
mov
cmp
dec
cld
lcall
xor
mov
jp
cmp
loopne
lcall
push
lcall
emms
insb
add
dec
inc
cmpsb
jp
or
scas
push
adc
decl
icebp
das
sub
daa
inc
inc
fcomps
pop
insl
adc
push
cmpsl
int
xor
cmp
test
jl
cld
jp
imul
inc
adc
testb
or
clc
call
movl
jge
push
ds
jns
sbb
in
mov
pop
xchg
divl
in
or
pop
call
addr16
add
sti
or
inc
add
ret
jg
adc
sub
lds
pushf
mov
mov
pushl
jge
je
push
shlb
testl
add
adc
lds
stc
jl
incl
and
mov
push
mov
aam
sbb
and
idivl
sub
pushl
pop
movsb
sbb
or
stos
xchg
jb
js
mov
bound
mulb
out
push
adc
jmp
push
js
dec
cltd
aas
shll
clc
cs
add
out
iret
aad
call
insl
sbb
ljmp
fmull
gs
aam
lahf
push
rcrl
icebp
loope
stc
jnp
movsl
xor
sti
imul
mov
hlt
inc
icebp
icebp
and
add
shrl
aaa
fsubl
dec
les
imul
es
lods
in
aad
insl
sarl
aam
jl
xchg
aaa
sbb
sti
xchg
lds
out
cmp
jmp
inc
inc
lret
mov
test
push
jno
or
mov
data16
stos
and
cmp
incl
mov
jae
aas
das
lds
test
dec
xor
testl
push
test
sti
pop
push
cmp
adc
jecxz
arpl
jnp
cwtl
xor
rcrl
cli
xor
mov
fsubrl
dec
imul
jg
addr16
outsb
inc
fxch
leave
adc
or
cld
inc
aam
xchg
fcmovb
cmp
push
add
lret
add
add
xchg
in
test
js
jmp
pop
fstl
mov
jb
rcl
inc
or
inc
out
stc
push
pushl
clc
bound
out
inc
scas
xchg
mov
out
mov
in
in
dec
sub
cmc
jmp
cmp
loope
bnd
iret
lret
cmpsl
loop
sub
lret
xor
inc
lret
cwtl
jnp
loopne
lods
jmp
ljmp
icebp
adc
stos
dec
lock
push
testl
pop
push
inc
mov
jmp
sub
push
aaa
mov
stos
loopne
jle
or
lret
or
cld
push
sti
jle
inc
into
incl
jp
andl
add
inc
loop
cmpsl
xorl
jle
and
movsl
cli
inc
cmp
sub
cmp
push
ljmp
gs
imul
sub
jl
mov
xchg
pop
sbb
inc
inc
lea
mov
sub
rcrb
out
or
push
xchg
ret
das
mov
imulb
lds
ficoms
sub
je
mov
fwait
cwtl
pop
add
rol
sbb
loope
decl
lcall
mov
mov
pop
pop
xor
dec
xor
loop
dec
gs
jmp
pusha
lods
adc
inc
push
jns
mov
int
inc
lea
imul
shrl
ficoml
adc
scas
mov
in
adc
mov
sub
bound
movsl
xor
dec
mov
cmpsb
imul
mov
leave
or
ds
adc
fcomip
xchg
fidivrl
into
lcall
xlat
loope
xchg
pop
mov
in
jns
cmp
nop
jbe
pop
js
mov
fsubs
pop
push
pushl
push
xlat
js
and
ds
test
movsl
sbb
mov
popf
push
in
cli
rol
mov
pop
ljmp
repnz
jbe
sub
and
or
sub
das
gs
jbe
call
xchg
cwtl
dec
les
sub
mov
cwtl
push
aad
lcall
xchg
arpl
ret
or
push
mov
loopne
cmp
repz
push
inc
arpl
add
jecxz
daa
xchg
dec
dec
in
pop
pop
std
les
insl
fs
xor
push
adc
jmp
lret
jmp
outsl
push
add
lds
pusha
stc
jmp
ja
gs
mov
mov
js
cld
dec
popf
les
fdivp
jmp
js
mov
arpl
jns
ret
xchg
sub
pop
jge
mov
iret
in
addr16
gs
scas
mov
adc
add
dec
lods
jecxz
incl
mov
lods
testl
nop
inc
cmp
repz
nop
jno
push
jp
inc
call
sub
call
and
shll
xor
jo
xor
or
lcall
adc
dec
xlat
jae
xor
add
cmp
jae
outsl
sub
rcr
movsb
outsl
jp
lret
aad
push
pop
or
or
lods
in
ret
mov
push
mov
jecxz
ljmp
mov
push
std
cmpsl
jl
and
pop
mov
fidivrl
sbb
adc
fcomps
pop
sbb
xor
jae
cltd
out
js
ja
aaa
xor
push
adc
ffreep
popa
push
ljmp
xor
xchg
lds
add
xchg
cltd
cmp
jl
cltd
scas
movsl
es
std
cmpsl
stc
sbb
pushl
fstpt
scas
rcrb
pop
jl
mov
jae
inc
pop
sub
incl
lahf
in
pop
push
mov
stos
sub
jl
jmp
lret
xchg
sbb
ja
xor
pushl
push
shrb
xchg
xchg
out
pushf
add
dec
daa
push
sub
into
leave
movsl
dec
ret
lcall
sti
pusha
ljmp
sub
shl
push
xchg
dec
lret
imul
mov
mov
cmp
jmp
adc
decl
stos
xor
jmp
adc
in
shr
pop
xor
pop
xor
call
fdivrp
ljmp
xchg
jns
adc
pusha
lcall
mov
pop
adc
es
incl
mov
in
add
jge
sub
ljmp
jmp
pushl
inc
sbb
or
mull
push
hlt
clc
xchg
pop
inc
outsb
add
das
js
lret
dec
out
lret
dec
lods
cmpsb
adc
and
call
dec
pop
dec
jns
in
or
fninit
test
rorb
pusha
sbb
dec
iret
fisttps
jno
lea
add
decl
push
dec
pop
out
inc
mov
mov
clc
adc
push
xor
jbe
xchg
xor
cltd
jmp
clc
sbb
pop
dec
fidivrs
xchg
fstpt
jle
clc
sub
out
dec
or
sbb
push
or
insl
das
ficoms
jbe
mov
out
jg
je
xorb
pushl
inc
dec
in
jl
cmpsb
add
add
ljmp
adcl
lods
push
jmp
adc
repnz
mov
or
rcll
pusha
pop
jns
daa
cmpsl
das
inc
test
call
and
out
mov
push
add
insl
pushf
cmp
xchg
mov
sub
stos
mov
ljmp
push
pop
cltd
cmpsl
xchg
cmp
sub
inc
ds
inc
and
jno,pn
add
out
dec
cld
call
jne
adc
push
jnp
mov
ss
pop
and
dec
pop
cli
xchg
rcr
pop
inc
out
jns
call
inc
leave
push
and
add
push
and
rcrl
add
test
adc
call
and
xorl
into
sti
mov
xchg
int3
aad
adc
sbbl
orb
arpl
sub
mov
push
ja
jecxz
lods
hlt
mov
std
int3
xchg
dec
push
mov
ss
push
push
ja
lea
dec
stos
cmc
leave
ret
in
fidivl
cmp
aam
or
in
sbb
jmp
repnz
or
xor
mov
pop
mov
andb
out
int3
push
cmp
call
xlat
jno
push
ret
mov
cmp
mov
cwtl
imul
jmp
xlat
cltd
nop
add
mov
pop
sub
mov
sub
adc
loope
xorl
push
leave
test
dec
sub
adcl
mov
sbb
dec
add
ds
mov
leave
xchg
std
push
pop
adc
mov
lods
xor
sub
xor
daa
cmpsl
fidivs
cli
ret
fs
jmp
mov
insl
xchg
xor
call
arpl
adc
sti
sub
push
sub
cmp
fldenv
xor
mul
xchg
shrl
lcall
ret
inc
ja
jbe
lret
mov
insb
mov
and
add
call
jmp
jmp
xor
subl
mov
push
insb
cmp
pushl
and
push
adcl
pop
mull
mov
aam
jg
roll
cmpsl
mov
pushl
mov
ljmp
jl
pop
rcrb
lcall
enter
pushl
mov
xchg
xchg
fmull
push
cwtl
mov
adc
and
mov
mov
in
jg
or
aas
jmp
jne
xchg
cld
push
leave
and
mov
jns
xor
shr
stc
orb
xorl
sub
pushl
ja
fidivs
cmp
lret
inc
lods
in
dec
pop
xor
cmp
add
jmp
dec
fstpt
push
addr16
test
repnz
nop
mov
clc
inc
xorb
test
outsl
dec
andb
jge
dec
pop
mov
mov
loop
repnz
xchg
xchg
push
mov
xor
fdivrs
xchg
sub
jmp
in
or
sub
scas
stos
int
clts
xor
call
sti
pop
push
std
lcall
jmp
adc
scas
mov
data16
outsb
mov
les
lret
scas
mov
idiv
incl
jbe
and
push
jl
mov
icebp
sbb
dec
sbbb
inc
xchg
dec
add
inc
push
xchg
pop
loopne
add
ret
push
lret
pop
xor
cli
mov
mov
loop
aaa
fwait
je
incl
or
jmp
inc
jp
xchg
ret
bound
and
mov
add
dec
xchg
inc
adc
push
mov
ss
jnp
ficoml
lcall
jmp
call
bound
mov
ss
sbb
push
lret
fadds
inc
rorb
jg
js
int3
or
lea
inc
adc
push
inc
xor
push
scas
add
and
xchg
xlat
push
in
ret
mov
pop
out
pop
sub
push
repz
jbe
scas
mov
and
lret
mov
daa
mov
or
pushl
pop
push
mov
scas
addr16
out
fs
addr16
loopne
inc
xor
xchg
adc
xor
pop
or
mov
jmp
orl
btc
imull
cs
test
dec
lods
insl
int3
ss
xchg
sbb
addr16
mov
and
rolb
ss
aam
xor
jbe
jbe
sbb
cs
lcall
lea
cltd
mov
cmpsb
jecxz
iret
xchg
test
push
call
jg
call
cmc
shll
in
or
pop
int3
cmp
lahf
in
in
call
jl
into
dec
mov
or
jmp
jb
cmp
dec
push
xor
call
stos
imul
pushf
rclb
fiaddl
out
loopne
hlt
or
mov
cmp
dec
pop
sbb
pop
pop
push
inc
iret
and
aad
decl
std
push
push
cmp
xchg
stos
xchg
mov
xchg
mov
pop
es
inc
cs
bnd
push
stos
dec
faddl
push
or
loop
fadd
jo
adc
or
mov
xchg
idiv
lcall
popf
outsl
sti
push
ret
sbb
mov
pop
popf
adc
and
mov
rorb
rcrb
cmpsl
jne
pop
xchg
pop
flds
add
push
lret
adc
cmc
cmp
cs
call
or
dec
aad
fcoml
sub
push
aaa
movsl
xor
ffreep
nop
cs
mov
call
xor
lock
shll
loop
mov
cmp
jg
inc
mov
xor
decl
clc
je
cwtl
mov
xor
cmp
sub
out
and
adc
push
dec
xchg
fs
call
sub
mov
mov
push
iret
fnstenv
cmp
stos
sub
cmp
decl
popf
push
cli
adc
sub
xor
sbb
js
sub
xchg
mov
aad
push
call
or
out
push
fistl
sahf
mov
cli
push
dec
pushf
divb
add
scas
pop
or
ljmp
cld
jl
ret
sti
add
inc
xchg
cmpb
cmp
cmp
cmpsl
in
mov
or
pop
dec
xchg
lea
jo
sub
jl
dec
cltd
pusha
jl
jg
imul
jp
jg,pn
dec
or
or
xor
cmpsl
lcall
scas
xchg
xchg
mov
in
sbb
add
and
sub
xchg
dec
add
decl
cmpsl
xchg
sub
mov
sbb
and
sub
fstps
adc
jmp
or
jnp
repz
add
es
or
call
push
xor
sti
xor
enter
mov
jg
test
inc
or
pop
inc
bound
jnp
mov
cmp
inc
movb
movsl
jge
lds
bnd
pop
loopne
div
jmp
push
mov
pushl
mov
lret
es
pop
in
mov
adc
cmp
pop
adc
int
sub
pop
sub
lcall
lock
aaa
into
push
dec
out
icebp
dec
adc
dec
mov
push
pushl
aad
add
pop
test
stos
sbb
xor
sbbl
call
mov
adc
mov
pop
lahf
jmp
lods
sbb
decl
lock
loopne
xor
cmp
push
dec
std
out
and
cmp
cmpsl
xchg
ljmp
loop
or
push
cmp
sub
mov
add
dec
xchg
jnp
lcall
decl
xchg
and
into
inc
cmpb
adc
into
mov
mov
aad
gs
jmp
inc
mov
mov
sub
sbb
jo
jl
adcb
call
sub
cmp
xchg
sahf
aad
and
out
loopne
sbb
pop
xchg
sub
aaa
cli
neg
sub
xor
call
cmpsl
add
int
or
mov
cmc
push
cmp
pusha
inc
add
jbe
fisttpl
jb
cmpsb
data16
xor
jo
sub
and
pop
adc
or
and
repz
jg
add
push
mov
rcrl
cmp
js
imul
mov
jmp
lcall
cmpb
add
and
popa
in
xorb
out
adc
cmpsl
jns
shrb
call
xor
and
out
ja
enter
xor
scas
jmp
enter
gs
decb
call
xchg
mov
pop
int3
out
xor
push
or
aam
out
and
xchg
sahf
jb
jmp
inc
data16
sti
iret
sbb
pop
sar
sbb
lret
scas
std
sbb
aam
add
mov
lcall
or
pop
shll
out
pop
jl
mov
fstpl
lcall
sbb
decl
mov
xor
jecxz
push
rorb
pop
imul
mov
imul
inc
lods
ret
xor
decl
fidivl
mov
jb
pop
addr16
sbb
cwtl
repz
mov
lcall
lods
test
jmp
sbb
add
into
mov
xchg
jge
and
ret
dec
and
in
cwtl
pop
mulps
fcos
lcall
mov
ret
xor
add
pop
sti
push
hlt
sahf
add
bswap
or
cltd
xchg
adc
lcall
cmp
inc
mov
mov
push
in
sarl
mov
mov
mov
mov
pop
dec
push
stos
sbb
jb
data16
push
imul
jge
aad
lcall
rorb
cmp
xchg
cwtl
pop
jmp
movsb
dec
push
out
ja
test
std
mov
fucomip
pop
mov
add
or
notb
mov
xchg
pop
cwtl
fistl
pushl
lcall
adc
sahf
cmp
test
mov
push
dec
lods
mov
ljmp
cli
cli
mov
sub
jmp
push
addr16
into
jmp
adc
out
loop
popf
add
call
jmp
cwtl
das
jbe
mov
push
rcll
sub
fstpt
cltd
enter
in
and
sbb
pushf
xlat
mov
adc
loop
cwtl
js
insb
mov
call
xor
fidivrl
jecxz
stos
jnp
fstp
popf
sub
sub
pusha
mov
repnz
ljmp
in
and
add
pop
and
std
jnp
daa
and
fildll
fcmovb
in
jne
pop
dec
cmp
les
mov
dec
jmp
lret
call
in
dec
test
outsb
dec
ss
mov
sub
mov
cli
mov
cld
out
xor
mov
xchg
mov
jne
shlb
pop
les
stos
mov
inc
sub
ljmp
ss
xor
jg
lds
add
pushf
or
stos
and
pop
inc
pop
lcall
mov
je,pn
cmc
jne
push
imul
loop
pop
mov
insl
aad
aaa
push
cmp
jmp
mov
test
push
iret
repz
lods
int
xchg
mov
add
mov
call
fstpt
push
outsb
add
adcl
dec
xchg
insl
sbb
mov
push
add
mov
mov
xor
jle
mov
popf
ss
shlb
jmp
and
inc
mov
js
cmc
cmp
mov
scas
pop
in
data16
mov
ljmp
scas
and
sub
push
sub
loope
addr16
pop
xchg
je
das
dec
push
sub
jns
jmp
jne
jg
push
aad
fcoms
mov
dec
out
sbb
and
test
test
add
or
mov
stc
rcrb
add
cmp
outsl
push
lods
mov
pop
inc
sbb
rorb
imul
mov
les
xor
push
scas
sub
ljmp
and
dec
pop
movsb
movsb
insl
ret
test
cmp
mov
sbb
mov
add
push
in
add
jmp
mov
hlt
jmp
jecxz
fidivl
int
addr16
add
mov
test
push
clc
mov
mov
mov
les
lret
mov
add
js
mov
push
je
or
jnp
add
das
imul
xchg
adc
jle
incl
sbb
lcall
sub
mov
les
clc
xchg
dec
cmp
fwait
add
dec
xchg
push
rorb
into
add
push
mov
dec
fmul
or
mov
cmpsl
test
lcall
out
inc
aad
push
pop
mov
cmpsl
and
aam
lea
andps
xor
adcl
pop
decl
out
cmp
dec
nop
xchg
adc
incl
jo
fildl
int
sti
inc
imul
pop
lret
xchg
clc
aam
int3
sub
mov
out
sub
adc
clc
cmp
ficomps
aas
adc
mov
pop
into
sbb
call
mov
nop
in
std
cli
aas
shll
inc
push
in
bound
mov
mov
xor
or
or
rolb
shlb
cmp
fst
lcall
add
mov
push
jge
jbe
popa
dec
lret
xor
es
call
push
aas
jg
dec
in
les
stc
cltd
xchg
mov
adc
inc
add
pushl
unpcklps
sub
fcompl
mov
pushf
rol
jle
pop
pop
sub
call
xor
mov
dec
sub
or
mov
mov
jmp
xor
call
lcall
mov
lret
ret
test
mov
mov
cmpsb
aaa
push
stos
inc
mov
xorl
fldlg2
or
pop
pop
aaa
push
dec
fcmovu
inc
or
icebp
cmpsb
xor
cltd
fwait
test
pop
xchg
jl
out
idiv
lcall
sbb
push
adc
jmp
xchg
xchg
mov
cld
sbb
sti
fdivrl
decl
cmp
cmp
adc
mov
out
pusha
mov
sbb
enter
ljmp
sub
sub
sub
pop
mov
xchg
push
sti
jl
jmp
call
ljmp
sub
out
fsubrl
mov
mov
leave
sti
cmp
fimull
dec
dec
push
inc
mov
incl
ja
fstpt
rcrl
inc
jmp
ffreep
sbb
rol
xchg
arpl
mov
imul
ljmp
lods
loopne
and
mov
dec
push
and
add
lret
mov
jmp
pop
icebp
mov
mov
insl
fisubrl
mov
jmp
inc
mov
int3
call
pop
xchg
add
aam
ljmp
fwait
fs
movsb
fmuls
jbe
cmpsl
outsb
fidivrs
lcall
loope
pop
xchg
and
xor
xchg
add
inc
repnz
dec
into
stos
pushl
imul
mov
enter
aas
lcall
pop
sub
ljmp
movsb
push
jg
out
out
rcr
dec
jmp
cmp
stos
iret
or
mov
lahf
jbe
dec
imul
sub
cwtl
xchg
stos
jg
xchg
sbbb
out
pop
sti
int
enter
jmp
push
loopne
sub
push
adc
fwait
add
je
push
dec
mov
push
mov
call
pushf
sbb
js
movsb
aas
or
mov
mov
xchg
jmp
dec
dec
pop
adc
xchg
repnz
mov
jno
sbb
call
mov
dec
lahf
jl
and
mov
ljmp
test
aam
loopne
shll
mov
mov
xor
jnp
les
mov
and
push
mov
push
aas
jbe
popa
hlt
dec
adc
mov
lahf
dec
mov
mov
pushl
mov
stc
inc
dec
lahf
or
les
dec
and
in
ljmp
push
cld
insl
iret
rcrl
jecxz
pop
ret
aaa
rclb
sub
rcrl
mov
or
xchg
fnsave
mov
sub
add
outsb
cmp
push
inc
jbe
dec
lds
fbstp
shll
mov
jp
xor
cmpl
incl
cmp
int
lret
cld
in
pop
jmp
and
aad
jp
loop
or
cmp
push
movsb
pusha
xchg
mov
mov
lcall
ja
push
sub
mov
push
inc
incl
nopl
cmp
jg
jae
fsubrs
inc
mov
lods
stos
mov
jno
int
mov
dec
int
iret
aaa
lret
dec
fimull
jmp
pop
insl
sbb
lea
sbbl
inc
sub
out
out
jmp
mov
jmp
sbb
lret
idivb
cmp
jge,pt
dec
jmp
pop
fwait
dec
inc
mov
je
insl
dec
jno
cmp
in
xchg
outsl
xchg
ja
lret
pusha
call
jnp
into
ja
mov
cmp
or
in
jns
sti
add
and
idiv
dec
inc
test
cmp
cli
jo
loope
mov
xor
add
in
and
or
sub
repz
shll
dec
ds
addr16
jmp
and
add
jl
sub
jbe
xor
test
pop
mov
jg
jo
insl
fadds
xor
xchg
movsb
icebp
mov
pop
cmp
jmp
gs
pop
cmp
aad
fwait
test
mov
enter
pop
sbb
xchg
orb
call
xchg
gs
popf
sub
xchg
jne
xor
fisubl
pop
je
and
mov
incl
pop
lret
dec
inc
jo
jae
pop
arpl
int3
dec
into
mov
mov
xor
mov
repz
loopne
mov
stos
sub
push
out
mov
push
negb
jmp
mov
dec
dec
repz
sbb
outsb
mov
xor
pop
push
mov
dec
xchg
jg
decl
movsb
xchg
push
jge
mov
sub
push
stc
insl
jmp
out
jmp
cmp
decl
xchg
sbb
fscale
xchg
fnstcw
decw
jno
rcrb
jbe
js
pushl
rcll
jp
jno
cs
cmp
outsb
adc
adc
iret
dec
pop
jmp
dec
dec
mov
into
add
mov
mov
and
pop
sub
sbb
ljmp
adc
xor
sub
xor
and
aaa
or
pop
push
cmpsb
mov
out
addb
incl
xor
out
dec
and
into
sbb
mov
mov
xor
popa
idivb
ds
dec
les
lret
dec
cltd
out
lock
ja
stc
cmp
push
sete
mov
insl
jmp
lock
jmp
arpl
push
stc
jns
and
xor
fxam
pushl
mov
iret
fnstenv
push
mov
dec
and
rclb
xor
jl
sbb
incl
sbbl
cmp
push
popa
pop
xlat
dec
in
push
push
mov
inc
ret
xchg
cmc
inc
inc
jmp
stos
fsubl
lods
shlb
ss
dec
mov
lock
xorb
in
arpl
inc
or
or
pop
ret
sub
idivb
sub
mov
mov
ja
popl
pushf
mov
mov
scas
jb
loop
arpl
push
jno
in
imul
mov
jecxz
dec
cmp
test
std
xchg
pop
shl
std
jbe
cwtl
popa
int3
or
int3
or
jle
pop
mov
call
cmpsl
or
jmp
test
leave
inc
stos
adc
arpl
sbb
mov
ljmp
jmp
mov
mov
sub
inc
loopne
std
mov
sub
inc
cmpl
xchg
push
or
fsubrs
xchg
pop
jg
lock
ljmp
mov
xor
push
dec
jle
popa
call
jns
loope
jns,pt
scas
cmp
movsl
cwtl
inc
push
iret
and
test
push
cmp
je
lcall
xchg
dec
xchg
out
out
mov
adc
jbe
push
dec
jne
pushf
fdivrs
flds
mov
pop
mov
or
or
aad
xor
and
and
pushf
pushl
xchg
fldlg2
xor
jl
loope
xor
jmp
add
ss
pushl
insb
ljmp
add
inc
lret
pop
ss
dec
push
fcompl
xor
fs
lods
xchg
loope
sub
xlat
cmp
call
adc
xor
jne
mov
adc
cltd
stc
push
push
jl
cmp
dec
dec
lcall
cvtps2pi
adc
stc
jge
movsb
pop
inc
adc
mov
jp
fnstsw
loope
jecxz
jbe
mov
jns
std
popf
fsubl
ljmp
jmp
sub
cmpsb
xchg
jmp
iret
xor
cs
jo
loopne
jne
ret
sti
test
cld
lds
pop
out
loop
dec
scas
or
dec
cmc
movsb
in
rolb
mov
xorl
jl
enter
ljmp
add
sub
mov
adc
cmp
aam
sbb
ljmp
imul
stos
and
cs
fistpll
sbb
fwait
cmp
out
sbb
push
cmp
mov
dec
inc
imul
xchg
scas
stos
nop
test
or
fcomp
out
inc
mov
btr
jecxz
add
pop
decb
push
ljmp
insl
out
aaa
mov
push
inc
out
mov
inc
js
iret
subb
cmp
mov
jno
lods
jmp
jmp
or
dec
ret
inc
add
xchg
scas
mov
push
push
ret
jnp
xor
insl
cli
xor
sbb
cmp
inc
pop
jnp
gs
int3
sti
lods
dec
mov
cmp
push
nop
xchg
in
lcall
xor
xor
jo
pusha
mov
lcall
xor
idivl
jmp
jo
loop
mov
inc
ret
and
jb
mov
and
dec
mov
orl
loope
pop
lcall
dec
popf
ljmp
jecxz
xchg
sub
push
or
fwait
mov
test
sbb
jae
jmp
push
adc
cmpsb
adc
jecxz
lcall
mov
or
sub
jp
mov
ljmp
jno
jmp
insb
and
movsl
in
push
mov
enter
out
popf
dec
ljmp
mov
outsb
push
dec
xchg
xor
loop
cs
push
orl
jo
decl
lcall
jle
push
mov
notl
dec
fwait
xor
mov
fmuls
dec
clc
pushl
xor
cmp
fildll
leave
imul
cmp
jmp
shlb
dec
pop
repnz
mov
movsb
mov
ret
orl
or
ret
push
lcall
push
mov
add
push
dec
push
xchg
xor
xor
fildll
jmp
push
xor
xchg
and
mov
aad
repz
enter
cmp
call
jg
dec
dec
sub
shlb
mov
inc
sti
jecxz
push
arpl
mov
add
lahf
jecxz
pushl
adc
xchg
pop
lcall
lahf
dec
pop
xchg
and
adc
cmp
sbb
xchg
cmp
decl
pop
lods
nop
popa
out
sub
fcompl
ds
out
cs
sub
mov
push
jmp
inc
sbb
out
int
inc
ficomps
jb
test
insl
mov
mov
addr16
fwait
jno
dec
mov
addl
repz
ret
popa
scas
adc
ljmp
pushl
mov
adc
inc
xchg
ret
mov
add
push
mov
mov
rep
ret
call
ljmp
jp
jb
cmp
cli
aaa
movsb
inc
into
dec
sub
pusha
push
push
in
mov
mov
sarb
sub
dec
sahf
pop
push
add
ja
insb
sub
sub
and
lahf
xor
lcall
cmpsl
rcr
arpl
xchg
mov
push
dec
out
sti
iret
jae
mov
mov
out
or
test
mov
mov
out
push
popa
scas
xchg
testl
push
mov
xor
jp
imul
repz
pop
pop
cmp
add
scas
out
call
add
push
mov
call
cli
cmpsl
rorb
mov
mov
mov
sub
orb
and
push
cmp
mov
pop
leave
dec
ret
loope
mov
sub
sbb
shlb
std
in
aam
push
andb
jne
mov
repz
add
push
out
xchg
mov
fdivrl
mov
dec
adc
decl
xorb
xorl
jae
popf
out
lcall
add
pop
push
call
jecxz
sub
adc
rcrl
das
jge
push
xor
imul
jnp
ljmp
xor
or
mov
rcrl
xor
xor
cs
push
and
add
icebp
repnz
ljmp
mov
and
push
lret
pop
or
inc
scas
sti
arpl
in
jl
scas
lods
js
int3
cld
popa
pop
adc
fimull
sbb
sbb
stos
repz
je
divb
fdivs
incl
cwtl
cwtl
negb
out
push
jnp
icebp
fimull
ret
hlt
aad
lods
sti
ja
xchg
pushl
scas
or
insb
leave
or
dec
imul
in
pop
sbb
ret
xor
movsb
xchg
pop
loopne
push
aaa
cltd
movsl
sub
enter
adc
shlb
shll
arpl
xchg
mov
mov
call
add
orb
mov
cmp
je
jge
add
das
lea
lcall
cmpsl
addr16
adc
adc
pop
dec
and
in
loopne
int3
outsl
insl
lahf
lock
inc
inc
lcall
inc
sub
fidivs
dec
ljmp
push
loop
dec
lcall
mov
sbbb
cmp
inc
pop
and
mov
jno
add
lcall
mov
pop
out
and
xor
jne
iret
push
jnp
xchg
addr16
pusha
jnp,pt
and
in
rcrl
repnz
rorl
and
xor
pushl
sub
mov
xchg
addr16
pop
ja
or
call
mov
push
lea
fsubrl
ljmp
xchg
call
testl
jecxz
xchg
sbb
mov
ljmp
jo
cwtl
ret
call
push
xchg
mov
push
sti
mov
repz
jp
rclb
test
lcall
int
mov
into
and
sub
add
divl
sarl
mov
jns
incl
mov
lods
mov
aas
lret
in
push
ja
cmp
mov
dec
outsb
cmp
ret
or
mov
push
push
lahf
mov
mov
push
fistl
call
fwait
add
mov
push
sbb
fnstcw
xchg
inc
lcall
decl
rcll
dec
and
orl
add
mov
movsl
or
push
xor
out
push
hlt
stos
jns
sbb
inc
enter
sbb
mov
lret
mov
or
jns
call
jle
push
fwait
ret
and
stc
push
mov
popl
imul
push
out
movsl
sbb
call
mov
adc
out
add
in
mov
xchg
adcl
rolb
pop
jge
rcll
and
out
add
jo
cmp
inc
jp
arpl
fcompl
data16
dec
int
int
hlt
pop
pop
inc
jge
and
sbb
aad
insl
ret
mov
pop
out
and
sub
incl
in
lods
jns
jmp
push
mov
add
xchg
out
cwtl
xor
dec
iret
or
add
mov
xor
dec
sub
lods
pop
xchg
test
mov
sbb
aad
mov
call
jmp
push
out
out
iret
inc
sarb
pop
sbb
xchg
cli
in
fidivl
push
incl
mov
mov
call
push
movsb
push
pushf
adc
in
mov
lret
pop
aas
enter
incl
int
subl
mov
xorl
aad
cmpb
ljmp
in
roll
pop
and
add
push
pushf
or
lcall
scas
fldl
fcoms
daa
call
mov
pop
out
jns
pop
push
mov
push
in
setle
arpl
jmp
jbe
pusha
jecxz
decl
rol
ljmp
dec
in
add
orl
jne
sub
pushl
rolb
enter
push
outsb
ja
dec
lock
mov
fwait
nop
ret
xor
push
incl
pop
sahf
gs
out
call
addr16
pushf
inc
mov
xor
je
pop
inc
shlb
cli
in
es
push
imul
frstor
lock
cmp
jmp
lods
inc
bound
jmp
fisttpl
inc
pop
ljmp
xchg
jbe
push
mov
insb
in
pop
out
scas
ret
sub
sub
jmp
stc
inc
mov
in
icebp
imul
nop
out
mov
enter
cmpsl
shll
sub
mov
pop
std
xor
push
xor
jmp
out
mov
mov
dec
pushl
hlt
out
inc
insb
bswap
shll
fwait
push
xchg
ja
js,pn
cli
push
jo
or
add
es
decl
ret
lock
mov
xchg
push
dec
mov
add
push
fcomps
rcrl
sti
mov
dec
int3
mov
ljmp
mov
pop
test
or
lcall
sti
out
subl
dec
pop
ja
out
xchg
dec
inc
dec
xor
icebp
loope
mov
les
push
sti
iret
call
cld
mov
sub
mov
adc
adc
push
addb
pop
jl
call
clc
pop
cmpsb
jmp
jae
stos
shrl
nop
lods
mov
mov
dec
mov
push
lcall
xchg
push
pop
jg
push
cmp
loop
xor
mov
test
insl
dec
std
jmp
into
sub
arpl
dec
xchg
xchg
jp
out
test
jl
jbe
scas
jg
jbe
ljmp
cmp
lods
add
mov
fwait
sub
inc
jl
jmp
sbb
hlt
push
push
xchg
cmc
mov
je
adc
dec
mov
in
cltd
data16
sub
jmp
or
jae
add
mov
cltd
ja
adc
dec
or
sbb
jmp
dec
add
lock
inc
imul
jb
fisttpll
mov
jb
js
loopne
jmp
dec
scas
mov
mov
into
adc
xor
lods
inc
pop
push
lea
and
jns
incl
loopne
sbb
dec
push
out
mov
pushl
mov
jl
inc
push
add
jge
fdivrp
decl
add
in
dec
push
repz
stc
hlt
iret
movsb
notl
inc
push
insb
decl
test
inc
insl
mov
sbb
adc
nop
lea
out
mov
into
jp
ljmp
pop
data16
fs
xlat
or
popa
pop
xchg
mov
xchg
cmp
jmp
add
mov
jge
push
movsl
icebp
xchg
xor
or
int
and
lcall
push
xchg
jp
loopne
xor
pop
insb
out
lods
add
stos
fisubl
mov
xor
stos
lcall
jae
cltd
xor
cmp
lretw
daa
sbb
xchg
sti
lods
cs
mov
mov
call
jne
sar
dec
pop
inc
xchg
daa
lea
xchg
add
inc
fchs
inc
push
mov
lods
paddsw
add
mov
push
enter
or
lret
fbld
in
in
sbb
daa
mov
xor
sbb
adc
mov
dec
cmp
pushl
dec
push
xchg
xchg
inc
insl
xor
mov
push
in
sbb
pop
xor
pushl
inc
cld
dec
jb
outsl
test
or
dec
mov
mov
cwtl
mov
lret
das
jmp
sub
mov
pop
js
inc
icebp
mov
mov
dec
outsb
and
iret
mov
mov
and
fadds
jmp
push
loopne
sti
dec
stc
and
push
lret
inc
lret
jb
dec
shrb
dec
mov
decl
push
mov
dec
sub
sbb
cmp
jnp
mov
add
xchg
xor
movsb
jl
push
jg
add
dec
adc
movsl
stc
or
lds
cmpsb
push
lcall
ret
testl
stos
push
xchg
shrl
pusha
faddl
stos
imul
and
imul
in
dec
decl
pop
cli
inc
xor
cmpsb
clc
dec
lret
pop
jo
pop
add
sbb
sub
sbb
fildl
aas
movsw
ret
and
adc
xor
les
mov
lcall
or
sub
fsub
shrl
sub
push
in
mov
add
xchg
inc
mov
push
lcall
sti
xchg
lods
addl
aam
mov
aas
and
outsb
adc
lcall
xchg
repz
pop
sub
cld
jne
xchg
loopne
cwtl
xchg
andb
sub
sbb
pushl
push
aaa
iret
sbb
lds
das
xchg
mov
add
fcompl
repnz
ljmp
hlt
stc
xor
outsl
shlb
scas
cmp
in
add
pop
fcmove
loope
incl
cmpsl
dec
loope
jecxz
test
das
sbb
sahf
out
sarl
nop
jg
dec
sub
pushl
adc
and
sub
aad
das
ljmp
or
jge
iret
xor
ljmp
xchg
int
push
xchg
out
push
mov
sbb
sbb
rcr
dec
jmp
mov
int3
sub
aad
adc
movsb
ja
adc
insl
mov
cld
decl
or
mov
adc
mov
sbb
pop
sub
mov
xchg
cmp
call
xor
int3
mov
arpl
gs
adc
in
xor
xchg
dec
pop
ss
mov
fcoms
lcall
mov
mov
push
xor
aaa
mov
jmp
daa
cs
xor
incl
outsl
ret
shl
mov
nop
jp
in
mov
js
xlat
ds
or
mov
xor
incl
in
popf
fnstsw
sbb
sahf
jnp
add
inc
test
and
push
jmp
cmc
sub
xchg
fcmovu
mov
add
inc
push
repnz
aad
mov
mov
orb
jle
lcall
and
test
les
xor
push
xchg
adc
dec
add
adc
insb
pusha
push
roll
inc
mov
insl
mov
aas
int
aaa
jle
mov
std
lods
jmp
lcall
sub
popa
dec
sub
push
arpl
lret
jp
add
loope
popa
jmp
leave
jnp
jle
add
scas
pop
and
push
pop
sbb
push
adc
mov
cld
enter
scas
mov
lea
bound
mov
fimull
jmp
int3
add
icebp
rcll
icebp
mov
dec
loop
arpl
cli
mov
jo
out
xchg
dec
sbb
mov
inc
adc
mov
add
jae
mov
fisubs
sbb
gs
pushl
adcb
cmp
pop
stc
fs
cwtl
aaa
aas
ds
ljmp
orb
je
pop
cmp
mov
fs
xor
pushl
sti
aam
inc
pushf
pop
rcr
arpl
int3
adc
cmp
into
jb
inc
fnstenv
pushl
adc
sub
dec
cs
enter
loope
sbb
xor
lock
ljmp
dec
lcall
stos
in
adc
inc
lret
fidivrl
insl
push
pushf
test
inc
pop
lods
incl
adc
inc
inc
decb
mov
out
mov
xchg
add
adc
xchg
xorb
add
add
decl
sub
movsl
outsb
das
movsl
test
add
cltd
xor
push
mov
sub
xor
inc
call
repz
in
lea
sub
pop
xchg
das
fldenv
iret
add
in
jne
xchg
xchg
mov
pushl
push
and
jno
xor
sub
jp
adc
cmp
lcall
lods
sbb
dec
jns
add
paddw
cld
or
nop
clc
lret
test
adc
inc
inc
and
jl
das
pop
lahf
jp
into
sti
fildll
test
mov
push
xchg
imul
iret
ljmp
mov
fs
iret
cmp
pop
int3
cmp
negl
mov
ficoml
mov
lret
sub
cld
cld
sub
rcrb
subl
and
cmp
or
xor
fcoms
cwtl
scas
pushf
push
lds
sahf
sub
clc
add
xchg
out
pop
jle
mov
mov
push
push
test
inc
jecxz
sbb
movsl
adc
aaa
dec
inc
and
cmc
fidivs
in
int
push
dec
arpl
insb
adc
push
inc
sbb
test
movsl
jns
inc
push
cmp
mov
lfs
int3
mov
and
and
sub
cwtl
and
dec
mov
dec
jns
incl
adc
dec
loope
sbb
mov
mov
sub
xchg
mov
mov
jmp
sub
inc
sub
clc
or
jg
cs
cmpsb
bound
incl
mov
dec
shr
out
rcll
xor
pop
push
fsubs
or
into
jmp
inc
mov
lret
jmp
test
insl
mov
sbb
sbb
stc
push
mov
in
cmpsl
cltd
out
cmp
int
push
jae
incl
xor
push
mov
dec
out
mov
icebp
stos
flds
ljmp
test
cmp
lock
lcall
jo
mov
dec
lock
subb
mov
ljmp
fbld
sub
enter
outsl
sbb
mov
ljmp
push
out
fistl
pop
cmpsb
mov
pop
adc
jmp
in
inc
mov
mov
push
lret
or
sub
add
test
push
pop
and
in
jnp
pop
jno
fisttpll
cmp
rcl
pop
fsub
mov
jp
jb
ljmp
jne
popf
cmp
xor
lcall
inc
cwtl
jns
cltd
xlat
loopne
andl
cmp
icebp
and
sub
mov
mov
movsl
bound
call
mov
std
mov
add
in
or
pop
jp
insb
cmp
mov
sbb
scas
loope
decl
push
pop
fildl
dec
shll
arpl
sbb
jb
testb
push
pushl
lock
inc
dec
jb
movsb
mov
int3
add
add
aad
push
add
mov
ljmp
aad
test
in
mov
jne
test
and
mov
pop
std
push
mov
cmp
insb
pop
stc
sbb
xor
test
dec
pushf
gs
mov
push
js
sub
inc
push
xchg
pop
decl
fs
jo
dec
mov
mov
xor
shll
push
cmpsb
mov
decl
mov
cmp
scas
mov
add
jp
mov
jge
nop
sbbb
jge
cmpsl
sbb
pusha
jnp
int
orl
lret
call
pop
jle
sarl
lods
icebp
cmp
rcr
lock
addl
and
adc
decl
push
lea
in
pop
sbb
dec
mov
add
pushf
inc
ljmp
mov
in
xchg
dec
sbb
push
inc
lea
push
fildl
xlat
loopne
daa
fcomps
jmp
push
jmp
adc
push
and
adc
lods
xlat
in
addr16
test
fcomps
pushl
push
sbb
hlt
arpl
lret
clc
fldl2e
shlb
push
int
je
mov
jmp
push
outsl
or
and
sbb
sbb
mov
push
imul
jmp
incl
xchg
jmp
fs
sub
fsubl
xchg
cwtl
or
je
inc
xchg
mov
lock
ljmp
js
push
sub
sbb
arpl
cmp
jne
cs
or
out
ljmp
dec
lret
js
aas
in
add
sti
adc
sbb
sub
je
outsl
mov
call
cmp
fstpl
or
sbb
int
xchg
jb
dec
pop
movsb
pop
js
inc
dec
stc
mov
in
stos
fstp
dec
xchg
adc
cmp
mov
xlat
inc
xchg
mov
mov
arpl
xchg
cmpsb
cmp
test
andb
xchg
lods
ret
cmp
cs
ljmp
lea
mov
mov
adc
arpl
dec
push
push
dec
pusha
jne
dec
xchg
daa
xchg
idivl
pushl
lea
pushf
in
sbb
push
ror
add
aad
scas
out
xchg
stos
loope
add
add
call
pop
enter
fcoms
xlat
stos
cmp
in
cs
inc
dec
jge
dec
xor
out
fisubs
into
sbb
call
shrl
icebp
sbb
lds
cmpl
call
mov
xor
icebp
lret
cmp
ret
ljmp
mov
iret
mov
incl
dec
add
mov
jg
mov
jns
test
gs
mov
or
ljmp
push
icebp
add
mov
xchg
sub
fildll
sub
jae
dec
popa
mov
cwtl
sbb
stos
push
mov
push
pop
xchg
xor
pop
xchg
sub
mov
inc
and
incl
cmp
aaa
cmp
scas
xchg
stc
rcl
pop
mov
imul
cmp
pop
repnz
adc
jl
das
jecxz
sbb
call
fimuls
add
jg
cmp
pushl
mov
aaa
xor
jge
stos
jecxz
popa
inc
lock
mov
xor
rcrb
sub
jnp
mov
sbb
mov
mov
out
test
or
inc
inc
stos
adc
cld
push
cs
mov
testb
or
call
and
test
aam
and
ret
jae
ds
and
jbe
rep
jecxz
inc
out
lods
inc
data16
iret
cwtl
pop
add
jg
adc
sub
fcmovne
mov
insb
call
xchg
std
xlat
mov
mov
inc
mov
mov
sbb
jbe
call
sbb
push
pop
lcall
cmpl
adc
mov
decl
outsb
sbb
in
lret
mov
stos
jb
push
ds
xchg
jnp
xchg
cmp
pushl
mov
push
mov
inc
mov
dec
jo
cmp
inc
mov
test
addr16
adc
gs
pushf
jo
es
mov
jmp
adc
or
stos
stos
stos
xchg
lret
addr16
jo
jmp
fistpll
adc
sahf
xor
stos
repz
mov
xchg
jle
push
loopne
aaa
test
push
push
jmp
push
cmp
push
mov
lahf
hlt
lods
flds
addr16
loopne
cmp
ja
mov
hlt
pushl
mov
mov
pop
lods
jns
insb
in
idivb
movsb
stos
sti
daa
dec
cwtl
mov
push
or
incl
inc
add
xor
or
out
nop
iret
sub
sti
loopne
mov
insb
sbb
outsl
cltd
xor
add
or
lcall
popa
gs
test
add
push
jbe
or
push
sbb
outsl
aas
adc
decl
shll
adc
jecxz
loopne
jmp
lock
xchg
dec
mov
decl
scas
iret
mov
add
push
aaa
rcr
cmpl
sub
adc
pop
adc
push
pop
adc
pop
fiaddl
sti
das
or
push
push
pop
xor
loope
ljmp
fwait
xor
fsubrs
add
lcall
int
mov
or
orb
addl
jmp
mov
adc
xchg
mov
notb
sub
aas
or
fstl
pop
clc
dec
inc
popf
inc
mov
out
test
outsb
push
add
push
pop
or
mov
lcall
orl
and
adc
addr16
xor
add
jbe
cmpsb
mov
in
dec
daa
call
and
stos
jmp
stos
ss
push
jb
enter
sub
jmp
xor
imul
xor
mov
jecxz
pop
mov
es
test
jnp
inc
mov
flds
jbe
test
cmp
jb
call
cmpsb
jo
sbb
sub
call
js
dec
cmp
daa
and
cmp
mov
cmpsb
jmp
aas
fbld
xlat
jecxz
loopne
sbb
mov
mov
rcr
dec
imul
mov
shll
bound
out
cmpsl
push
sub
xchg
cwtl
dec
xchg
sub
push
lds
jmp
adc
mov
push
add
fnsave
mov
cmpsb
divl
test
test
ljmp
mov
scas
outsb
mov
jns
push
lret
lods
fmul
mov
and
lret
push
rol
sarl
incl
in
fadd
xchg
sub
jns
insb
scas
xchg
out
cmp
push
shrb
clc
mov
xor
jp
nop
cmp
into
and
adc
add
mov
dec
je
add
call
and
ljmp
cmpsl
xchg
call
cmp
scas
cmc
jae
jbe
jo
pop
pop
pusha
les
rolb
jmp
out
repz
inc
push
xchg
dec
lds
mov
adc
cmp
or
cmp
pop
adc
add
adc
adc
call
xchg
push
inc
popa
fdivl
adcl
mov
dec
fnstcw
xorl
mov
pushl
mov
sbb
outsb
jecxz
shll
xor
call
ljmp
mov
xor
jge
out
inc
add
aad
mov
push
ljmp
iret
lods
rclb
in
xchg
ljmp
scas
xor
jl
xor
xor
adc
pop
lret
mov
in
pop
idivl
jge
int3
push
outsb
out
clc
cmpl
mov
ljmp
mov
shll
inc
mov
adc
xor
pop
push
daa
or
mov
pusha
xor
out
call
mov
and
insb
nop
insl
push
jbe
pushl
jmp
shll
es
mov
pop
out
rolb
add
and
mov
push
jp
arpl
dec
out
inc
mov
cli
test
int3
lock
nop
rolb
adc
mov
repz
int3
ja
mov
lcall
mov
jp
rcll
ret
jno
mov
mov
push
mov
cltd
in
jmp
inc
jno
mov
fwait
or
leave
int3
call
roll
jno
insb
push
xor
jmp
push
jbe
adc
imul
gs
cmp
rolb
mov
jo
push
cli
insb
or
ljmp
jo
aaa
and
jae
hlt
xchg
movb
lods
out
jae
lea
insb
mov
push
test
fsub
pop
std
add
sbb
adc
rolb
pop
shlb
cmp
push
inc
cmc
adc
clc
mov
xor
js
push
sub
jp
in
cmp
sub
sbb
aad
scas
inc
lret
sub
ljmp
adc
jno
in
out
loopne
add
sub
addr16
pop
inc
fwait
inc
jmp
pop
jl
or
insb
ljmp
jo
xchg
js
sub
shrb
out
xchg
mov
xchg
mov
add
cltd
lret
jp
add
add
int3
push
or
sahf
in
push
cmp
push
adc
mov
adc
inc
adc
mov
pop
mov
adc
incl
adc
inc
sbb
cmc
mov
jle
lods
add
insb
mov
cld
sar
mov
movsb
pop
jne
fiadds
lret
insb
or
in
xor
jg
sbb
jb
call
fstpl
in
sbb
imul
sub
and
mov
jmp
daa
jnp
dec
push
pusha
hlt
or
cs
lahf
xor
dec
aam
es
xor
jae
and
mov
lods
dec
push
cmp
cmp
fimuls
hlt
pop
cwtl
sub
hlt
fdivrl
jne
mov
xor
jbe
xchg
cli
mov
setns
and
test
adc
jmp
ror
or
dec
pop
popf
mov
xor
xor
cmpsb
pop
gs
cmp
xchg
in
stc
or
dec
xchg
lcall
jb
fwait
inc
xor
ja
xchg
xchg
adc
rcrb
inc
push
loopne
sti
gs
pop
sub
jmp
lock
es
dec
out
aam
roll
aam
fstpt
push
jmp
push
adc
shlb
push
sbbl
xchg
ret
aaa
cli
jmp
ret
das
mov
xchg
cmp
and
in
xor
mov
add
call
jecxz
lds
movb
pop
mov
iret
aas
ret
sub
loope
lcall
xor
mov
mov
adc
test
imul
inc
fcoms
int3
sub
jmp
fisubl
add
cmp
out
in
lods
pop
aaa
ret
sbb
cwtl
push
jnp
sahf
call
cmp
pop
inc
xor
add
lods
out
xorl
sbb
sub
pop
sbb
ljmp
sbb
sub
jnp
adc
inc
sbb
ja
int
sbb
movsl
jmp
jmp
nop
adc
mov
in
sbb
push
stc
or
fucom
cld
sbb
call
pop
ret
add
imul
out
or
mov
xchg
loop
push
stc
jns
or
mov
xchg
jns
nop
xor
and
les
or
mov
push
pushl
xorl
mov
or
ja
iret
inc
or
movsl
sbb
jle
xor
call
jae
ds
push
leave
pop
sti
mov
dec
and
dec
adc
mov
lea
ljmp
test
sbb
lods
je
xlat
dec
cmp
lret
shl
jg
pushl
jbe
dec
mov
mov
mov
jge
add
xchg
jbe
dec
mov
cmp
in
shlb
aam
loop
insb
inc
clc
and
aad
pop
loope
lret
out
repz
decl
pop
js
adc
addr16
cmpsb
ret
gs
xchg
sahf
add
lcall
fcmovb
and
mov
test
push
dec
mulb
dec
mov
mov
dec
and
subl
or
repz
shrb
adc
std
arpl
cmp
nop
rcrl
xor
push
in
add
subl
jg
xchg
jp
inc
ret
xchg
fdivrp
in
push
test
lea
xchg
mov
call
push
dec
push
mov
lret
xor
pop
cwtl
enter
fstps
adc
cmp
lcall
adc
movsl
loope
push
adc
pop
scas
jg
std
int3
cmp
arpl
insl
decl
cltd
cmpsl
arpl
jp
int3
mov
into
sarb
push
and
cmc
movsl
inc
sub
mov
inc
pushl
or
lcall
popl
or
sub
aas
mov
popa
pushf
ja
mov
lcall
fucom
pop
ja
sub
mov
sub
test
adc
mov
test
decl
push
or
xlat
xor
mov
repz
stos
sub
in
hlt
loope
test
in
dec
jns
scas
push
repz
and
std
or
addr16
xor
jbe
inc
aad
cld
pushl
rcl
das
lock
jb
std
fxch
add
xchg
mov
dec
test
inc
jl
addr16
sub
xchg
pusha
jg
fwait
push
jg
mov
or
decl
dec
jns
ror
popa
push
addr16
mov
fadds
mov
ljmp
or
insb
or
add
mov
or
xor
sbb
or
das
fsubr
cmp
cmp
pop
incl
in
xlat
mov
add
jge
xor
sbb
call
mov
jmp
subb
jb
inc
scas
pop
and
xlat
and
adc
pop
fldcw
icebp
jns
inc
fwait
cs
arpl
dec
int3
dec
sbb
in
sub
pusha
mov
data16
out
push
and
push
das
inc
loope
int
xchg
xchg
push
xor
insb
negb
add
movsb
mov
bound
cmpsl
pop
add
dec
sbb
and
leave
nop
insb
outsb
rcrl
push
and
sub
jmp
inc
loope
repnz
dec
fcmovne
xor
fwait
mov
cmp
push
push
pop
dec
inc
cmp
imul
mov
jo
cmp
inc
lods
sahf
popf
dec
sub
inc
in
stos
cmpsb
jnp
lret
scas
rorl
insl
jecxz
into
jmp
movsb
mov
scas
lcall
cltd
imul
les
pop
pop
loope
jg
mov
jmp
jns
mov
cmp
xor
sub
xchg
js
or
pop
push
std
dec
sbb
ds
mov
jno
into
rcrb
mov
mov
dec
mov
sub
insb
and
fsubrl
jns
sub
and
push
test
mov
push
dec
cmpl
cmpsb
jae
add
roll
cmp
add
add
rolb
and
call
mov
xchg
mov
jns
jnp
cli
ds
imul
out
sti
pushl
jns
pop
movsl
jbe
cmpsb
push
popa
pop
std
sahf
movsb
or
clc
or
add
pop
decl
push
inc
fwait
imul
outsl
fsub
fnstenv
loope
stc
pop
sub
iret
xor
push
push
rolb
mov
fimuls
stos
add
push
jno,pn
sbb
cmpsl
adc
outsb
and
in
and
and
dec
daa
or
rorb
rorl
xchg
testb
jb
inc
push
or
or
incl
xor
movsl
pusha
dec
je
nop
jne
loope
fsubs
jmp
out
jbe
xchg
std
jbe
sub
push
cli
mov
jmp
sub
or
adc
jnp
cmpsl
mov
sti
mov
jmp
stos
cmp
xchg
jne
xor
inc
leave
add
cwtl
sahf
insb
jmp
sbb
xor
cmp
shlb
cmp
clc
flds
cmpsl
sub
insb
mov
push
sbb
mov
lock
fs
aas
add
roll
cmc
fistps
adc
inc
popf
out
stc
cmp
cmp
ljmp
js
in
bound
or
sub
cmc
xchg
insb
mov
jmp
inc
mov
mov
push
fcomip
xchg
sub
sub
xor
adcl
decl
fisttpl
mov
ds
or
xor
js
repz
mov
mov
leave
inc
mov
dec
movsb
sub
divl
test
std
in
les
cli
mov
jp
mov
xchg
adc
decl
decl
out
ljmp
ds
adcb
fidivrs
popf
ds
ljmp
lods
cwtl
insl
subb
test
xchg
shlb
ja
scas
jle
sti
movl
cmp
sub
or
sbb
adc
fs
sub
arpl
mov
addr16
mov
inc
pop
sbb
push
push
sub
mov
pop
sti
pop
jo
outsb
mov
jg
jmp
pop
fisubrl
lods
jl
pushf
scas
jno
adc
pop
pop
pxor
xchg
lods
cmp
cmp
mov
xor
fwait
sar
xor
push
ljmp
push
lcall
or
orb
ss
or
inc
insl
jbe
imul
nop
sbb
stos
adc
call
ret
movsb
sub
cmp
xor
cmp
mov
rcr
inc
adc
incl
push
cmp
fiaddl
mov
pop
aam
push
push
inc
test
pushf
adc
adc
pushl
pop
cmp
pop
adc
sti
sbb
push
js
mov
sbb
xor
mov
pushl
stos
adc
icebp
loop
sub
pop
aas
sub
cmp
rorl
push
pop
adc
or
pop
lods
js
in
enter
cld
pop
push
add
out
push
inc
cmp
mov
inc
cwtl
test
out
jo
arpl
test
stos
lods
add
pushl
and
in
sub
std
shlb
movsl
mov
test
lret
incl
add
dec
mov
test
ret
mov
pop
out
push
int3
lret
lret
add
mov
mov
jle
or
out
fidivs
icebp
mov
addr16
clc
inc
sbb
sti
lock
incl
out
push
bound
in
gs
or
push
loop
mov
push
testb
ds
daa
jno
pop
lods
aas
adc
push
sub
sub
lock
repnz
cmp
cli
out
or
and
out
add
js
xchg
xor
dec
jo
aad
jp
xchg
ljmp
sbb
shl
push
and
imul
scas
out
movsb
jmp
or
icebp
jmp
jl
incl
cwtl
cmpsl
popf
ljmp
sub
lret
cwtl
in
mov
mov
add
call
xor
sbb
or
aam
test
ja
xor
scas
lahf
inc
into
lcall
inc
or
sbb
xchg
lahf
cmp
outsb
loopne
popf
jbe
cmp
cmpsl
mov
inc
repnz
jmp
dec
mov
gs
mov
lods
cld
adc
jae
sbbb
pop
and
xor
mov
leave
push
mov
mov
jl
pop
push
dec
inc
daa
mov
mov
add
push
add
movl
cmc
adc
stc
sbb
shll
lcall
mov
addl
scas
stc
mov
mov
inc
jno
pop
cmp
jmp
and
mov
je
pop
xchg
dec
loope
xor
lds
out
dec
dec
and
fisttpl
sub
xchg
rcll
jae
mov
rorb
or
adc
out
xlat
dec
ja
or
das
add
add
into
pushf
cld
hlt
in
arpl
or
pop
adc
adc
mov
decl
add
cwtl
ja
bound
cld
testb
lcall
fstpl
jmp
push
incb
sub
push
push
outsb
xor
pusha
ret
mov
loop
lret
cmp
jmp
rclb
mov
sbb
lods
shlb
sub
xor
fmull
leave
add
lcall
cltd
mov
xor
mov
dec
ljmp
sub
cmc
pop
in
xor
mov
out
mov
push
or
mov
and
aaa
in
sub
dec
mov
pop
out
push
jbe
call
test
loope
mov
dec
shrl
lret
mov
das
cmc
int3
insb
aam
push
movsl
jp
iret
xchg
pop
push
push
mov
popf
inc
aam
mov
out
outsl
xchg
std
add
mov
mov
jns
pusha
call
or
out
out
arpl
mov
pop
es
bound
fstl
repz
decl
dec
dec
push
sbb
in
mov
sbb
pop
lret
dec
scas
test
ja
cmpsb
lcall
les
adcl
out
and
dec
in
sbb
pushf
lret
jl
pushl
xchg
lods
gs
pop
inc
adc
dec
repnz
and
lds
cmp
fdivs
pop
or
xchg
cli
dec
mov
pushf
ret
sahf
mov
mov
aam
add
loop
sahf
jae
jo
std
mov
push
jmp
test
mov
sub
xchg
rcll
cmp
sub
xchg
test
sub
mov
push
adc
mov
cmp
adcl
clc
inc
insl
cwtl
or
mov
inc
mov
jl
add
test
fildl
pop
leave
es
loop
cmp
mov
dec
in
jbe
insb
and
cmp
aaa
add
pop
out
xchg
mov
mov
js
fnstenv
xchg
decl
dec
imul
lock
lret
adc
int
daa
xchg
popf
in
add
or
jmp
sbbb
flds
inc
mov
xor
mov
daa
pop
movsl
xchg
in
cmp
incl
aad
adc
jp
pop
jecxz
test
outsl
adc
add
neg
lods
bound
lcall
xor
mov
test
sub
cmpsl
ds
jbe
cld
jo
jnp
inc
shlb
mov
adc
call
enter
and
dec
in
in
mov
lods
dec
inc
xchg
add
or
pop
mov
xor
pushl
cmc
xchg
xor
repz
or
popa
push
xchg
out
out
xor
divb
call
ret
into
mov
mov
rcr
mov
inc
nop
dec
mov
inc
add
incl
and
ljmp
andb
in
repz
mov
jno
aaa
aad
xor
jns
push
push
arpl
jmp
movsb
sub
mov
or
dec
adc
dec
sbb
xchg
fstl
jp
nop
jmp
imulb
sbb
pop
mov
imulb
mov
test
fdivrl
xchg
jo
gs
dec
or
inc
push
dec
and
in
lret
push
outsl
sbb
cmpsb
inc
xchg
movsb
add
inc
cmp
jmp
ret
xlat
xchg
dec
es
jle
add
daa
pop
pop
push
push
pop
lods
shrl
push
call
pcmpeqd
sbb
test
lcall
pushf
stos
aas
fstpl
cmp
sbb
ljmp
adc
dec
cli
sbb
cmpsl
ljmp
push
inc
hlt
ja
test
ljmp
cltd
insl
xor
push
mov
add
lock
movsb
or
cmp
and
jge,pt
adc
cmp
jl
stos
push
test
pop
loopne
pop
mov
inc
sbb
dec
cltd
and
int
lret
mov
pushl
mov
push
cwtl
ret
jl
insl
movq
rorb
enter
in
test
add
jmp
or
sub
lock
pushf
mov
aaa
out
sbb
sub
push
lods
pop
mov
pushl
stos
imul
pushf
cmc
mov
jge
adc
jno
insb
movq
clc
test
shlb
jmp
loope
fsubr
fwait
push
hlt
test
lcall
aad
std
movsb
mov
push
xor
mov
jmp
mov
jmp
popf
dec
jo
out
cwtl
pusha
mov
enter
pop
cmp
pop
cltd
adc
fdiv
mov
in
test
jecxz
push
mov
rclb
mov
xchg
and
in
ffreep
and
add
call
jbe
pop
loopne
jno
inc
repz
mov
pop
fchs
add
shlb
incl
popf
stos
rolb
data16
pop
or
adc
int3
fisubs
cld
push
imul
ret
adc
lcall
jb
push
and
leave
orb
inc
dec
push
jp
or
cs
aas
aaa
mov
sti
dec
mov
adc
xchg
jl
xchg
dec
pop
je
jmp
imul
call
dec
mov
mov
popa
mov
adc
jge
cmp
adc
pop
call
push
pusha
loopne
jns
ret
movsl
movsl
ljmp
fstpl
xchg
andl
mov
call
push
out
xchg
hlt
mov
jo
lods
int
lcall
or
and
ljmp
cli
mov
mov
mov
push
pop
test
jge
mov
mov
lcall
sbb
in
nop
pushf
lret
insl
mov
pop
in
mov
ss
popf
popf
jmp
mov
or
sub
or
call
mov
pop
data16
jno
ljmp
sub
outsl
adc
or
popf
push
mov
jmp
call
and
mov
ja
mov
dec
addr16
cmp
push
fiadds
xchg
push
adc
mov
loop
pop
out
dec
adc
mov
mov
jo
add
mov
jb
adc
xlat
add
call
hlt
pop
mov
inc
or
sub
mov
mov
dec
arpl
push
mov
adc
mov
jge
xchg
cwtl
push
jge
clc
call
jb
cltd
sub
lcall
call
loopne
outsl
sub
mov
mov
adc
lds
insb
in
sub
dec
push
nop
lea
add
xchg
push
pop
sbb
mov
or
leave
ja
add
decl
aam
jns
lret
mov
aad
push
mov
push
jecxz
push
jle
cwtl
push
jns
sbb
rorl
pop
mov
dec
jne
mov
ja
push
add
mov
jmp
dec
pusha
or
das
pop
add
adc
sbb
mov
icebp
outsl
mov
ljmp
addr16
pop
dec
cmp
in
add
sbb
add
incl
cli
lea
mov
or
push
xchg
aaa
fbstp
push
cmp
lods
adc
lea
adc
jns
in
dec
imul
pop
mov
fisubrs
sub
decl
je
jno
cmp
addr16
std
dec
adc
xor
cmp
push
jecxz
pop
int
incl
pop
push
fs
fnstsw
enter
cmp
pop
cmp
imul
mov
incl
xchg
or
push
mov
fistps
sbb
cmpsl
jae
data16
mov
loopnew
call
rclb
xchg
sarb
in
jl
enter
ss
stos
cmp
hlt
fstpl
shlb
mov
inc
xor
sub
push
stos
scas
dec
sub
ljmp
pop
sbb
inc
lds
sub
cltd
movsb
cli
mov
sub
int3
decl
xor
sbb
mov
add
pop
mov
mov
in
pushf
and
clc
add
call
mov
cmpsb
sbb
inc
subl
pushl
pop
lcall
and
mov
jmp
clc
jno
jmp
out
fs
das
add
test
mov
push
cmovle
jae
stos
ljmp
cwtl
or
cmpsl
outsl
fcomp
pop
and
imul
fmul
cmpsl
sbb
inc
test
ljmp
jle
js
mov
div
xchg
mov
mov
jns
pop
cmp
push
and
fs
ret
imul
call
sarl
jg
dec
or
lds
xor
aad
shll
call
cltd
xchg
lahf
test
add
shll
popf
or
rclb
stc
adc
adc
or
jmp
js
inc
dec
fsubrs
test
testl
push
fdivrp
js
icebp
xor
mov
and
sahf
std
jle
daa
test
ljmp
jmp
add
mov
xchg
lods
and
out
mov
repz
pop
adc
add
addr16
jmp
xorl
popf
jg
sbb
fisubrs
or
or
pop
cs
cli
test
insl
fildll
insl
fcmovnu
pop
rol
jbe
test
xchg
add
fdivp
jmp
push
ljmp
dec
dec
jl
cmp
in
repz
add
test
sbb
lret
pop
mov
sbbl
push
incl
xchg
mov
adc
lock
pop
fstl
cltd
popa
lods
test
inc
push
into
ret
mov
pushl
out
jo
out
shl
outsl
adc
xchg
push
icebp
jae
pushf
pop
mov
shlb
jmp
or
out
daa
adcb
test
adc
add
insl
les
push
mov
xchg
push
push
orl
dec
jmp
and
roll
das
gs
incl
imul
xchg
ret
rcr
push
lret
mov
outsl
cmpsl
fildl
cld
adc
movsb
ljmp
clc
inc
test
loop
fistpl
fsubs
sbbb
push
sahf
push
mov
jecxz
push
dec
fdivl
pop
lods
int3
mov
test
sbb
cs
xlat
rorl
dec
xor
lcall
pop
or
add
rcrb
shrb
movl
adc
idivb
push
pushf
lsl
pushl
adc
lock
mov
imul
fwait
sbb
das
mov
cmp
incl
stos
test
roll
jecxz
fcoms
xor
test
jg
fmuls
jmp
mov
dec
add
or
adc
lcall
jg
call
pop
cmp
pop
nop
sub
xchg
notb
lret
pushf
adc
xor
subl
pushl
ret
mov
test
pop
orl
mov
inc
pop
pusha
mov
push
jl
std
sti
mov
cmp
iret
aas
bound
sub
scas
mov
jbe
cmp
or
cmpsb
lahf
pop
cltd
push
adc
xchg
mov
or
fs
in
js
decl
insl
sti
clc
ffreep
lcall
mov
add
aad
lods
xchg
ret
addr16
fildll
or
dec
mul
out
push
std
xchg
cld
inc
or
xor
call
mov
ret
lret
pushf
push
and
mull
cli
rcrb
mov
mov
mov
jmp
mov
sti
into
or
fisubs
push
cli
test
push
inc
ljmp
pop
aad
test
and
xchg
inc
mov
cwtl
mov
pop
dec
sub
in
dec
aaa
xor
mov
icebp
xchg
push
fmuls
ret
out
dec
mov
sub
fldlg2
sti
outsb
xor
xchg
mov
enter
sbb
test
dec
icebp
and
sbb
mov
xor
or
sbb
pushf
mov
sbb
sti
xor
test
incl
xchg
ret
push
js
jecxz
daa
stc
leave
sub
insb
sub
movsl
outsb
ret
aad
adc
jmp
pusha
ret
stos
pop
mov
cmc
in
pop
and
xor
cmp
cs
lods
mov
ja
pushl
int3
stos
inc
ret
push
cmp
pop
daa
jmp
sbb
add
mov
dec
cmpsb
mov
jo
and
mov
es
mov
testl
clc
mov
dec
icebp
push
ret
adc
add
shll
jne
ret
push
jno
cmpsb
mov
hlt
in
incl
cs
lret
fidivrl
cwtl
xor
fimuls
xor
xchg
add
jg
fs
dec
xchg
inc
dec
dec
xchg
stc
scas
push
push
mov
arpl
cld
test
cltd
xor
incl
xchg
pop
sbb
sub
insl
pop
xor
or
lret
jmp
fildl
lds
mov
jmp
cmpl
sbb
jle
adc
add
clc
dec
gs
xchg
inc
sahf
xchg
aad
jg
lea
jmp
xchg
sbb
push
notl
push
test
push
bound
and
lds
sahf
dec
pop
inc
call
adc
and
mov
xlat
jmp
lret
jge
notl
pop
or
adc
adc
dec
out
rol
sbb
cld
and
outsl
cmp
ds
adc
aad
pmaxub
inc
mov
leave
aam
cmp
push
insl
add
dec
repnz
push
loopne
cmpsl
mov
outsb
lcall
adc
add
mov
stos
cmp
rorl
jne
divb
ret
dec
btc
mov
mov
dec
mov
jo
dec
push
mov
fmull
adc
pushl
lock
xor
xor
fisttps
pop
add
dec
ss
adc
ds
outsl
xor
aam
xor
idivl
cld
outsb
repz
jae
divl
push
aas
sbb
aas
jmp
out
jno
ljmp
outsb
push
jb
pop
pop
cld
sbb
int
add
adc
inc
pop
shll
sbb
repnz
jb
inc
enterw
pop
push
push
inc
sbb
lcall
lcall
pop
mov
ss
add
lret
in
push
adc
lods
cs
jmp
jecxz
stos
call
call
test
outsb
jmp
xchg
xor
repnz
stos
ja
bound
mov
lcall
adc
xor
shrl
fld
rorl
sub
mov
mov
aad
fsubrl
icebp
rorl
adc
scas
inc
xchg
dec
sub
adc
sub
pop
pop
push
mov
mov
mov
or
or
fcmovb
mov
shr
clc
ljmp
sbb
popa
mov
xchg
push
imul
inc
ret
mov
inc
test
push
in
xor
cs
fcompl
rcll
repz
inc
mov
dec
scas
sub
xor
xchg
inc
mov
add
fcoms
and
mov
gs
jmp
fmuls
aam
lret
aas
jmp
xlat
shlb
xchg
cmpsl
mov
mov
scas
xchg
mov
jmp
or
push
jl
ss
enter
hlt
adc
and
std
lds
xchg
xchg
in
jns
in
out
jno
nop
out
dec
xor
daa
data16
inc
and
int
dec
adcl
ja
fwait
ds
ljmp
movsb
jnp
stc
lods
inc
add
jl
clc
push
jne
addl
mov
ljmp
nop
push
and
fimull
cmp
in
push
push
cmp
and
adc
outsb
shl
lcall
cmpsb
pop
pop
movsl
cmpsl
daa
test
icebp
ljmp
pushf
arpl
jmp
mov
test
jno
mov
shlb
add
xchg
add
mov
ljmp
pop
jns
test
repnz
mov
insl
mov
add
loop
imul
add
or
mov
mov
les
inc
push
and
out
movsb
in
fnstcw
cwtl
dec
divb
push
mov
aas
stos
sub
cmp
nop
inc
mov
pop
enter
sbb
push
ja
mov
cmp
ds
rcll
inc
stc
pusha
fwait
movl
xchg
pop
call
lcall
mov
imul
cmp
sarl
andb
daa
jno
mov
sbbb
repz
ljmp
scas
xchg
mov
fidivs
in
cld
mov
sbb
dec
and
xchg
cli
xchg
mov
in
jmp
mov
aaa
enter
roll
or
xor
pop
lds
jns
add
jbe
mull
test
fcmovnu
push
ds
sbb
pop
adc
sbb
push
scas
outsl
shlb
push
mov
popf
jne
lock
test
ljmp
addr16
scas
xor
ljmp
rcrl
pop
xor
iretw
cmp
repz
stc
ret
lret
push
pushl
jp
jbe
fisttpl
insb
dec
xchg
scas
ret
shr
mov
in
loopne
ljmp
jo
mov
pop
sub
movsb
dec
aam
or
daa
scas
sti
sbb
nop
out
lahf
xor
aaa
inc
daa
insb
and
lods
hlt
sbb
xchg
push
lcall
jmp
bound
jnp
mov
xchg
jmp
jg
pop
lods
jp
mov
dec
inc
int3
dec
cld
xchg
das
data16
and
mov
das
js
push
dec
movsl
lcall
decl
fbld
sub
inc
out
mov
test
into
ds
das
and
jmp
fcos
lcall
push
aad
nop
ret
push
mov
or
dec
pop
scas
shlb
les
jmp
sub
mov
cmpb
jl
ret
xorb
mov
ret
imul
lret
incl
pop
lods
and
fs
pushf
das
hlt
jmp
push
lods
das
fldl2t
jl
jnp
push
or
fcoml
push
mov
pop
das
ja,pt
ljmp
or
xor
and
sbbl
jo
add
pop
push
and
add
and
outsl
adc
into
lahf
mov
ds
lcall
ret
cmp
icebp
jp
xchg
iret
pop
arpl
mov
lock
mov
loopne
call
push
cmc
ds
mov
pop
jle
xchg
pop
or
mov
out
xchg
out
sub
decl
mov
jge
ljmp
pop
sub
sbb
dec
nop
mov
mov
lcall
cmp
jmp
jno
cmp
jmp
lea
leave
sub
cs
push
idiv
ds
sbbl
jns
out
movsb
cmp
enter
ror
ret
call
push
pop
sub
mov
in
push
nop
add
inc
lea
mulb
fisubl
lds
rolb
mov
shrl
fnsave
repnz
decl
lret
lods
mov
adc
enter
or
xor
pop
fsubl
ja
xchg
push
adc
add
mov
addr16
mov
mov
mov
in
popf
cmp
call
jle
cmp
inc
xor
fildl
popa
cmp
add
push
int3
in
call
jne
jb
sub
xchg
cmp
mov
dec
das
sub
pushl
push
pop
enter
nop
xchg
mov
add
pop
pop
pop
lock
sub
sub
incl
jl
sbbb
dec
enter
clc
lock
out
sub
sahf
push
fldenv
negl
rclb
mov
xchg
roll
xchg
out
cwtl
insl
leave
adc
cmpsl
pop
jle
push
outsl
sbb
pushl
xchg
push
add
pushf
imul
in
sub
imul
call
inc
mov
jmp
imul
jb
add
fmull
sahf
movsb
fcmovb
int
ret
sarb
jno
jecxz
pop
outsl
ret
decl
adc
dec
push
pop
mov
sarl
xchg
imul
cmp
pushl
pop
jnp
cmpsl
sub
xorl
inc
pop
push
lds
adc
fstpl
mov
add
pop
mov
push
fcomi
jne
mov
ljmp
sub
call
arpl
and
fsub
or
inc
dec
lret
sbb
fildll
aas
iret
movq
in
mov
mov
and
mov
inc
mov
jbe
add
lcall
pop
std
sbb
outsl
pop
mov
jo
mov
ss
pop
outsb
inc
sub
cmc
push
sbb
lcall
cmc
mov
pushf
jl
ret
add
or
dec
inc
cmpsl
adc
lcall
mov
sbb
mov
push
push
pop
push
roll
dec
mov
into
mov
xor
lcall
sub
mov
divb
ljmp
hlt
lret
and
xor
sub
pop
sbb
scas
dec
mov
lahf
mov
push
adc
ret
ror
iret
call
sub
insl
mov
push
lea
xlat
xor
cld
pusha
stos
cmpsl
push
adc
jp
decl
stos
mov
mov
inc
pop
cmp
mov
add
mov
xor
incl
out
test
idivl
repz
xor
mov
mov
sbb
sti
cwtl
adc
xor
push
adc
pop
iret
mov
xor
pop
cwtl
jg
out
cmp
fwait
mov
pusha
imul
inc
jle
jo
xchg
and
andl
ja
mov
int3
pop
jbe
lea
ss
call
mov
ds
lret
inc
test
jge
mov
shrl
dec
jle
xchg
ljmp
adc
pop
sbb
jp
js
das
pusha
inc
dec
inc
lea
pop
je
sub
dec
shrb
dec
push
in
mov
shlb
aad
jbe
mov
rcll
shl
push
cmp
or
sti
inc
adc
dec
mov
or
pop
pop
adc
jmp
lcall
repz
push
add
ficomps
enter
pop
fsub
mov
inc
sub
jnp
dec
jmp
test
sbb
outsl
mov
filds
out
mov
sub
decl
sahf
cli
fildll
test
movsl
push
insb
mov
sahf
pop
add
ret
scas
in
neg
add
ficomps
stos
push
mov
xchg
add
mov
cmp
jae
mov
pop
ret
lcall
lds
test
popf
imul
dec
mov
out
mov
arpl
lcall
lods
loope
jge
mov
xchg
es
adc
cmp
or
mov
xchg
add
xor
decl
lods
das
dec
in
cs
fdivr
leave
out
jmp
iret
xchg
jmp
fcmovnb
hlt
push
pushl
in
fidivrl
loope
or
xchg
ja
jle
xor
xor
decl
movsb
sarb
shrl
sahf
mov
scas
pop
inc
cmp
pop
pop
roll
xor
xchg
lcall
insb
mov
and
fimull
push
sbb
aam
dec
cld
and
adc
cli
add
mov
cli
sub
xor
ficomps
popa
insb
insb
lcall
push
xchg
outsb
popf
and
call
call
into
add
into
mov
stos
add
rcrl
pop
jl
rolb
pushl
nop
fisubrl
lret
pop
or
inc
inc
cs
pushf
gs
ja
sbb
loop
fmuls
sbb
add
adc
cwtl
hlt
xchg
add
lcall
out
fcmovbe
scas
sahf
jg
std
jnp
inc
mov
lcall
in
enter
mov
dec
je
sub
jmp
cmpsl
mov
fisubrl
add
inc
sub
mov
jle
ss
in
cmc
jb
push
scas
or
mov
pop
imul
cli
mov
insb
jmp
in
jb
pop
cltd
pop
stos
ucomiss
lret
mov
cs
sub
sti
lahf
pop
sbb
ja
decl
xchg
mov
fldl
divl
iret
pop
push
dec
bound
sbbb
mov
cmp
and
inc
sbb
push
jl
push
mov
jp
mov
dec
jne
fs
or
repnz
xor
scas
mov
mov
push
xor
jmp
test
lret
jl
mov
ret
mov
dec
cli
rcrb
mov
jmp
mov
or
test
adc
dec
ret
mov
xor
icebp
lods
jo
mov
fistpl
mov
cli
gs
inc
xlat
clc
dec
loop
xchg
dec
xchg
xchg
sub
adc
fistl
jg
call
jmp
push
stos
jp
lods
pop
or
fdivr
pop
mov
je
shl
or
ljmp
dec
fidivrs
daa
popa
popa
cmp
mov
rorl
or
adc
lcall
es
sub
in
nop
flds
push
lret
adc
mull
and
mov
jmp
pop
and
sub
sbb
or
sub
test
cmp
jl
mov
call
push
das
jge
pop
dec
fxch
mov
fstps
xchg
inc
xor
cltd
js
call
sub
sbb
movsl
push
mov
add
xor
inc
lcall
jo
and
fsubrp
mov
rolb
sar
mov
inc
xchg
sbb
test
incb
rcr
shlb
aas
cmp
fiadds
mov
sbb
aas
mov
mov
and
lcall
xchg
outsl
mov
and
push
push
mov
and
call
std
pop
lcall
fsub
adc
xor
sahf
dec
incl
enter
fwait
cmpsl
mov
cli
inc
int3
icebp
mov
cwtl
jnp
daa
mov
add
mov
sbb
jae
into
jle
dec
mov
pop
mov
imul
test
ljmp
inc
fcoml
sbb
es
fisttps
stc
sub
cmpsl
loop
imul
dec
or
xor
jae
mov
cmp
gs
shl
testl
test
inc
dec
sbb
in
mov
mov
fstps
js
sub
imul
decl
mov
outsb
cmc
mov
icebp
add
gs
mov
pop
pop
lea
jmp
repz
mov
adcb
pop
aaa
call
loope
jo
sbb
out
int3
lcall
hlt
add
mov
subb
je
insb
iret
mov
lock
dec
xchg
lcall
repnz
mov
fisubrl
jnp
mov
jns
adc
call
cmpsl
dec
jo
pop
or
mov
jmp
mov
xor
pop
mov
xchg
div
adc
pushl
sahf
mov
mov
sub
inc
mov
rolb
fstp
push
sub
call
mov
jp
inc
xor
fdivrp
add
mulb
pushf
decl
rorl
adc
push
xchg
and
fs
loopne
int3
cmp
mov
pushl
andl
jno
cmc
sahf
clc
sbb
aad
add
aam
outsb
lods
vmread
imul
ljmp
in
movsb
gs
pop
xorl
imul
lcall
sbb
daa
mov
xorb
sbb
and
loopne
sbb
mov
sbbb
es
fists
and
pushl
lcall
iret
rorb
imul
and
push
xchg
les
in
mov
lret
and
mov
jnp
sub
out
hlt
cmp
fwait
ss
outsb
mov
xchg
nop
adc
popa
scas
fs
push
jno
pop
insl
adc
in
mov
jge
sub
adc
fisubrl
bound
test
and
cmc
insl
pushf
aam
adc
sbb
incl
xchg
mov
cmpsb
jle
shll
data16
dec
inc
xor
lds
and
test
incl
push
xchg
fidivl
and
mov
je
pop
lds
adc
je
jae
out
cld
jmp
inc
cmpsb
cmp
call
or
or
test
mov
sti
imulb
cmp
pop
popa
jo
test
jbe
push
add
mov
pop
in
push
sub
dec
jg
ljmp
fsubp
cmp
cmp
push
xchg
call
xor
gs
mov
ljmp
jl
pop
jecxz
xorb
xor
ror
loope
sbb
cmc
xchg
pop
hlt
lods
inc
dec
cmp
fiadds
xchg
inc
or
in
jae
xlat
mov
dec
or
dec
push
push
pop
push
mov
ljmp
jg
sub
popf
ss
ret
inc
xchg
lret
lret
mov
xor
aaa
cmc
adc
pop
xchg
aas
fsubrs
pushl
stc
lret
xchg
adc
sbb
out
fdivl
int3
rorl
push
xor
arpl
pop
lds
decl
xlat
lret
pop
and
and
mov
add
push
out
push
cmp
rcll
addr16
incl
adc
enter
and
mov
or
mov
mov
lcall
cmp
fistpl
sub
mov
loopne
mov
and
xchg
dec
inc
dec
adcb
sub
mov
ficoml
inc
decl
int3
int3
lods
fldcw
pushl
clc
clc
cmp
or
inc
or
dec
clc
fstl
jns
mov
cmpsl
mov
ljmp
std
and
dec
sub
out
mov
xchg
rol
xchg
sbb
mov
pop
loope
sbb
out
aad
aad
daa
data16
in
xlat
push
sbb
movsb
ficoml
pop
outsl
fldenv
xchg
and
call
cmpsb
jl
fsincos
test
pop
ret
inc
sub
hlt
cli
and
sub
call
loopne
mov
xchg
lahf
adc
mov
cltd
mov
lea
xor
outsl
lcall
jle
or
inc
xlat
jbe
out
add
add
fwait
cmp
pop
mov
daa
js
out
dec
decl
pop
dec
rcrl
rcr
push
push
mov
or
jl
pop
fiaddl
sub
incl
pop
mov
lret
mov
bound
adc
pop
adc
jb
sub
cmpsb
sub
mov
jmp
inc
cmpsl
loope
and
movsl
cmp
loopne
icebp
mov
addr16
cli
xchg
sub
push
dec
popa
add
push
divl
xchg
rcrl
and
daa
sbb
call
push
out
xor
aam
inc
imul
sbb
push
loop
popa
pop
jle
shl
and
mov
out
jne
jmp
in
pushf
jge
push
fwait
mov
push
out
and
call
leave
scas
adcl
divb
imul
mov
call
xor
or
xlat
loopne
adc
lret
loopne
or
js
fcoml
push
add
xchg
sahf
aaa
incl
cld
jne
adcl
dec
jg
scas
sub
dec
jecxz
call
xor
push
pusha
test
test
add
lahf
adc
push
mov
cli
fdivrs
dec
jle
sbb
ljmp
cmpsb
xchg
imul
in
insl
lcall
mov
mov
mov
ljmp
fdiv
sbb
les
push
inc
sahf
mov
and
lcall
repz
ljmp
mov
jl
dec
add
aam
pushf
mov
inc
adc
inc
leave
inc
bswap
add
loop
nop
cmc
data16
out
sub
fsts
rorb
dec
out
xor
pushl
cmp
push
cwtl
pushf
nop
mov
push
mov
daa
jnp
call
sbb
ljmp
fcmove
mov
fnsave
arpl
dec
push
lret
lcall
movsl
cmp
push
incl
jmp
repnz
hlt
imul
mov
pop
jae
push
pop
lock
fcomp
mov
pop
and
decl
jg
test
xchg
out
inc
loope
sub
dec
imul
icebp
icebp
cmpsb
inc
xor
sbb
inc
mov
inc
and
lahf
cwtl
fimuls
push
mov
jmp
jo
sarl
into
sti
ljmp
mov
fcomip
xchg
mov
int3
dec
xchg
hlt
mov
stos
imul
int3
sarl
sarb
cld
jmp
sub
dec
push
inc
pop
aad
pop
inc
lret
or
sbb
adc
cmp
fs
call
faddl
pop
inc
repnz
adc
jl
into
inc
dec
scas
xor
or
data16
sahf
push
ljmp
cmp
push
cmc
xor
in
lcall
das
lea
cmp
cltd
sahf
ljmp
sub
cmpsl
push
fistpll
push
push
loope
pop
lock
stc
xor
push
out
pop
push
mov
decl
outsb
pop
pop
pop
enter
lcall
mov
call
jecxz
decl
push
rcrb
dec
adc
mov
mov
sarb
test
loopne
xor
scas
lock
lcall
divl
fsts
leave
leave
push
mov
test
imul
inc
mov
mov
mov
daa
popf
lds
je
in
outsb
movsl
jb
mov
in
jp
test
lret
decl
les
jno
sbb
add
sub
dec
insl
int3
jo
imul
in
shrl
fstpt
xchg
out
mov
or
xor
pop
pop
pushl
aam
push
popf
and
xchg
and
add
jge
into
call
lret
fnstcw
jecxz
call
jl
adc
inc
xchg
call
cld
ret
stc
insl
or
pop
and
in
stc
test
sarl
int3
popf
adc
cmp
call
mov
or
pop
cmp
adc
repnz
jmp
ss
sub
incl
aaa
data16
ja
cmpsb
xlat
push
add
adc
mov
xchg
ss
test
lcall
jg
ficoml
pop
shrb
and
gs
scas
add
mov
je
stos
lcall
push
leave
sbb
sub
out
idivb
scas
mov
mov
add
jno
shlb
add
repz
in
jb
les
aad
jmp
jo
push
ds
xchg
mov
cmp
pop
push
into
lcall
mov
and
gs
mov
int3
pop
movnti
ds
in
jl
ret
xchg
push
cmp
xchg
or
int3
mov
jbe
jo
fcmovnbe
xchg
incl
xchg
ret
mov
ss
aas
bound
sub
xchg
pop
std
scas
cs
add
dec
in
jg
decl
pop
xlat
movsb
push
mov
movsl
jbe
dec
xor
mov
mov
sbb
stos
jmp
cld
int
xchg
push
inc
xor
bound
fcoml
push
ss
sub
mov
pop
jne
lcall
enter
push
dec
jg
mov
cmp
lea
inc
repnz
call
cmp
cmp
cmp
ss
cmpsl
cmpsl
mov
scas
xor
cmc
loop
and
xchg
testb
or
sub
jp
mov
pop
enter
dec
lcall
mov
incl
test
fs
stc
dec
insb
mov
sbb
pop
popf
pusha
sar
decl
fs
pushf
jmp
push
xor
lret
pop
lret
es
repz
mov
mov
xor
mov
pop
loope
dec
jns
xor
mov
cmpsb
jg
scas
cmp
dec
imul
loop
inc
call
insl
xor
ds
add
popa
insb
add
fs
iret
mov
lahf
nop
xor
mov
das
or
dec
xchg
or
xchg
mov
insb
cli
sub
addr16
inc
sarl
jnp
popf
inc
push
fcmovb
mov
add
fnstenv
or
jno
adc
mov
mov
mov
cs
push
jmp
mov
loope
ret
add
push
movl
decl
xor
add
sbb
sub
mov
cs
sub
sub
sbb
decl
cmp
cmp
aas
push
or
pop
push
cmc
xchg
jns
xor
or
xor
jmp
jns
mov
mov
stos
pop
jno
stc
sub
cmp
mov
jle
insl
xchg
enter
adc
call
pop
fdivs
sbb
imul
lods
cmp
test
push
mov
and
cmp
jmp
stos
das
int3
xchg
out
and
jo
sub
push
pop
iret
cs
ljmp
repnz
mov
xor
sub
jecxz
mov
jns
not
mov
icebp
push
out
les
jp
add
fildll
call
adc
or
fsubr
adc
push
loopne
push
leave
call
jge,pn
lds
pop
inc
jne
shlb
jmp
jg
push
pusha
jmp
test
pop
pushf
push
pushl
testl
outsl
and
pop
push
out
xchg
lret
insl
inc
rcrb
lcall
cs
repnz
mov
hlt
cmp
pop
ja
xor
push
lcall
sub
cltd
or
insl
cli
sbb
test
mov
cli
and
lcall
popa
mov
and
popa
call
xor
xchg
adc
daa
sbb
dec
aam
jg
clc
lcall
aam
cs
sub
dec
sbb
dec
cmp
mov
push
mov
dec
loope
mov
ja
push
shl
lock
dec
je
pop
outsl
ds
jmp
rclb
mov
popf
dec
xchg
cmpb
xor
mov
pop
push
push
jmp
jns
ljmp
pop
adc
repz
push
mov
mov
dec
nop
outsl
cmpsb
push
xor
lcall
push
jnp
xchg
push
orb
xor
test
jl
imul
push
mov
jbe
insb
and
enter
or
dec
sbb
decl
popa
aam
repnz
stc
pop
dec
jo
jns
je
cmpb
dec
into
sarb
ss
mov
loopne
push
jmp
aas
inc
sub
xchg
jno
je,pn
inc
in
andb
pushl
jae
mov
aas
mov
sub
fstcw
add
add
and
popa
cwtl
insb
add
jmp
mov
pop
push
movsl
and
push
cmp
xchg
mov
push
dec
scas
rorl
jmp
lret
mov
ret
scas
sub
nop
jns
adc
sub
dec
shlb
ljmp
jns
and
insb
sahf
push
arpl
sbb
fists
jg
rolb
dec
test
incl
dec
roll
add
stos
mov
pop
shlb
call
jmp
subl
ds
xor
movsb
pop
je
test
mov
add
pop
in
cwtl
lods
mov
lcall
jb
cld
in
xchg
movsl
dec
xlat
pop
sbb
or
aam
mov
jp
test
decl
inc
add
pop
sub
jecxz
dec
push
push
cmpsl
pop
imul
aam
xchg
lcall
sbb
out
stos
jmp
enter
idivl
add
sahf
rcr
mov
pushl
sbbl
push
cmp
add
inc
sbb
xchg
jecxz
arpl
icebp
xchg
aam
and
sahf
pop
jecxz
testb
dec
loop
dec
mov
xlat
cmpsl
fcoml
cmp
lret
stos
mov
icebp
inc
int
sbb
dec
and
lret
int
mov
mov
xlat
enter
push
hlt
pop
xchg
mov
dec
data16
adc
jmp
jb
adc
mov
jo
jl
lea
jno
lea
fstpl
sub
or
popf
mov
data16
add
and
ret
mov
out
clc
ret
cmc
xor
pop
hlt
enter
xchg
push
push
stos
push
adc
mov
or
cmpsb
pop
imull
xlat
xor
mov
sbb
push
aad
xor
pop
les
stc
sub
pop
sub
incl
rclb
and
fstl
hlt
xchg
sub
mov
jmp
scas
pop
test
out
imul
add
mov
push
jb
cwtl
push
cli
lock
dec
or
lahf
ljmp
andl
movsl
push
js
imull
in
fldcw
xchg
mov
ljmp
jae
int3
ds
iret
sarb
mov
les
sub
jae
pop
pusha
stos
sti
sub
loope
cwtl
mov
sbb
lods
mov
jnp
pusha
aaa
loop
out
call
pop
lods
stc
jmp
js
fistpl
jnp
jle
fstpl
mov
xchg
addr16
pop
dec
insb
jp
iret
or
jmp
js
cmc
je
std
sub
pushf
test
mov
int3
divl
pop
subb
jns
push
incl
shlb
mov
je
xor
mov
es
hlt
gs
jecxz
sbb
mov
das
add
sbb
push
push
fcmovnb
ret
push
jge
or
or
ljmp
mov
cmp
mov
and
or
fisttps
inc
das
jecxz
xchg
outsl
sar
push
xor
sarb
lds
shll
outsl
and
outsl
xor
cmp
insb
iret
incl
dec
cmpsb
mov
mov
rclb
jle
pop
xlat
cli
lock
adc
dec
mov
call
xor
push
fwait
mov
mov
and
daa
xor
mov
inc
xor
lock
popa
cmp
push
call
inc
cmp
push
xchg
test
fcmovne
testb
mov
xor
daa
xlat
xor
fwait
in
adc
and
sub
js
pop
mov
mov
push
movsb
pusha
arpl
lcall
sub
and
sbb
push
lcall
xorb
pop
js
imul
call
inc
jb
pop
xor
push
jb
mov
adc
mov
scas
mov
jmp
pop
sbb
mov
add
xor
out
pop
std
push
data16
je
jmp
es
faddl
imul
fisttpll
mov
or
pushf
mov
or
dec
push
mov
lock
add
cmp
push
and
sub
xchg
xor
outsb
adc
nop
adc
jmp
in
pusha
repz
aaa
imul
in
pop
xchg
and
clc
jmp
ds
lret
in
xchg
mov
dec
mov
ss
lods
sbb
cmp
xchg
ja
jbe
incl
loopne
mov
and
cmp
fadd
pop
inc
ljmp
rclb
mov
add
xchg
adc
xchg
mov
ljmp
cmp
ss
mov
fdivrp
call
add
adc
jp
cmpsb
mov
inc
xorb
out
mov
sti
mov
ljmp
jno
in
mov
popa
das
ret
jl
push
cwtl
lods
jns
arpl
retw
aas
push
xchg
repnz
or
in
add
popf
addr16
mov
in
fwait
pop
fadd
ret
jg
cs
sub
adc
pop
test
imul
lcall
sarl
or
and
mov
pop
outsl
test
jecxz
out
lcall
xor
jmp
pop
nop
mov
or
lea
ljmp
ret
cmp
out
cmp
call
pop
dec
pop
pop
insl
and
ret
mov
add
pop
pop
inc
int3
push
subl
clc
jae
mov
mov
cltd
jl
mov
inc
jge
xchg
adc
out
inc
lcall
in
mov
xchg
js
fimull
ret
std
mov
addr16
stos
sub
into
ja
push
jb
ljmp
ss
mov
pop
jl
cmp
mov
push
sahf
call
sub
sub
mov
cmp
xchg
sbb
or
popf
mov
dec
std
jp
push
push
cmpsb
ljmp
ret
push
mov
fmul
je
lcall
pop
aas
in
jmp
cmpl
ret
push
daa
jg
push
xlat
pop
pop
dec
and
fwait
call
movsl
imul
sub
int
xor
add
call
sub
xchg
pushl
or
mov
test
xor
scas
add
mov
jnp
js
stos
cmp
stc
inc
push
icebp
sub
andb
mov
mov
mov
mov
fidivrl
std
cli
inc
sub
incl
outsb
movb
hlt
call
call
fdiv
sti
cmp
ds
pushl
sub
shlb
jl
out
cwtl
jmp
test
adc
in
leave
fcos
jnp
add
sbb
jns
clc
cmp
pop
mov
ror
cs
jmp
les
or
mov
jae
adc
lea
sbb
mov
xchg
jns
inc
outsb
pop
cmp
or
add
into
insb
sbb
negl
mov
ljmp
inc
pop
outsb
lock
inc
call
gs
xchg
xor
adc
mov
fcmove
push
jnp
xchg
imul
mov
mov
inc
push
pop
incl
inc
cmp
dec
lods
lds
cltd
push
pop
stos
and
pxor
mov
fdivrl
dec
ss
push
mov
cmp
mov
or
pop
mov
sti
div
xchg
stc
inc
lret
push
and
shl
jo
cmpsb
jle
push
je
test
jmp
mov
xor
adc
or
repnz
into
xor
decl
jmp
mov
pop
pushf
sub
mov
test
mov
icebp
adc
adc
mov
sub
inc
scas
mov
mov
push
sub
xlat
sti
pop
xchg
imul
pop
cmc
pop
popl
pushl
out
sti
mov
xor
inc
adc
or
aaa
inc
mov
adcl
js
xchg
stos
pop
mov
cmp
cmp
mov
jge
pop
mov
leave
xor
or
and
clc
lcall
fsubr
xlat
cmpsl
aaa
sbbl
push
xchg
push
ja
sbb
les
mov
incl
loopne
dec
test
test
insl
lds
jecxz
dec
sbb
loopne
and
outsb
call
inc
xchg
mov
test
xchg
push
btr
mov
adc
dec
arpl
ljmp
push
sub
dec
push
std
rorb
ljmp
adc
ljmp
xor
mov
xor
clc
stc
sti
imul
inc
daa
mov
orb
ljmp
jmp
mov
xchg
mov
dec
cmp
mov
dec
lcall
inc
jbe
ud0
ljmp
sbb
nop
enter
cwtl
mov
mov
mov
xchg
fstps
cli
rorl
push
invd
push
cmp
push
out
sub
pop
je
push
testb
call
xor
adc
push
test
cwtl
fwait
adc
adcl
and
lcall
xchg
cmp
lea
cmp
or
je
leave
jmp
fstps
call
call
inc
or
adcl
mov
fidivrs
push
outsb
jp
mov
inc
lcall
mov
es
enter
push
mov
jp
lcall
fdivrp
jecxz
pop
hlt
jae
call
repnz
pop
jmp
adc
repz
lds
cmp
iret
lods
cmc
ljmp
fwait
ja
xchg
push
incl
das
mov
push
dec
xor
jmp
xchg
mov
jae
dec
das
jmp
ret
inc
cmp
stos
dec
cmp
dec
int
leave
cmpsl
pop
push
imul
pop
lcall
divl
add
jne
out
lea
sub
dec
mov
and
or
mov
push
js
adc
pop
cwtl
imul
decl
lea
addl
inc
inc
out
test
adc
test
decl
fdiv
lods
dec
fldenv
mov
andl
dec
lock
inc
fcomip
inc
mov
shr
adc
add
mov
movsl
repz
mov
mov
xor
mov
insb
jmp
add
or
bound
pop
cli
sbb
pushl
ficoml
testl
mov
sbb
pushf
test
in
sbb
jmp
stos
aam
and
in
call
js
lcall
xor
xchg
outsl
jmp
add
popa
ret
sbb
xchg
shlb
nop
mov
sub
jmp
lock
jmp
popa
das
repnz
rorb
xor
das
fists
add
leave
dec
mov
ljmp
jo
jmp
imul
pop
mov
stc
sbb
jbe
add
inc
jmp
leave
nop
push
scas
push
adc
pop
ja
jmp
or
test
cli
pop
and
jmp
iret
mov
mov
loopne
cld
mov
pop
int
xor
and
jne
jmp
mov
inc
dec
aas
movsb
or
adc
cmp
outsl
mov
dec
jl
pop
lcall
in
sbb
jns
push
xor
jb
fidivl
xor
shlb
pop
pop
or
ss
push
lcall
mov
mov
fwait
dec
es
bound
fwait
es
sub
mov
decl
inc
into
loope
enter
jb
adc
test
popf
fcmovbe
cmp
lcall
and
dec
mov
sbb
dec
daa
add
xchg
and
popa
bt
fidivl
pushl
leave
bound
mov
mov
mov
add
stc
or
mov
arpl
lret
call
je
subb
fisubl
outsb
into
rcrl
mov
xor
in
lods
rorl
pushl
pop
insl
or
mov
roll
cmp
mov
add
pushl
adcb
lahf
mov
mov
jnp
and
loopne
call
ljmp
adc
dec
pop
rorb
fisubrs
ja
loope
sub
xchg
push
sub
decl
daa
aad
notl
insl
add
jb
add
movsb
mov
js
mov
decl
js
cmp
mov
test
pop
je
inc
push
pop
mov
repnz
aaa
inc
jmp
into
push
clc
mov
cmp
push
loope
fldcw
idivb
xchg
pop
dec
lcall
jl
mov
fwait
out
jo
inc
jecxz
test
pop
movsl
mov
xchg
and
cli
pop
or
xchg
jae
mov
clc
push
sbbl
imul
push
divb
cmpsl
push
imul
insb
movsb
loop
xchg
cli
cmp
outsl
jb
pushl
mov
mov
hlt
roll
pushf
cmc
mov
or
rcr
inc
jmp
out
sbb
jnp
mov
pop
in
mov
icebp
int
lret
mov
pushf
jmp
pop
ja
loop
jbe
sahf
ret
nop
jb
push
shlb
idivb
imul
pushl
cmpsl
out
xchg
add
or
testl
xor
push
ds
ud0
decl
push
pop
pop
push
mov
jns
mov
orl
int3
pop
data16
mov
incl
call
in
dec
in
repnz
stc
ljmp
cltd
pop
adc
sub
jge
jmp
and
xchg
clc
jecxz
mov
mov
outsl
test
push
fstpl
bswap
mov
push
iret
jl
lcall
ljmp
enter
ja
loopne
pop
jg
movsl
fs
sbb
cs
jp
lock
or
cmp
test
inc
mov
xchg
movsb
rcll
bnd
jecxz
repnz
incl
fdivs
daa
lea
mov
mov
xor
xchg
movsbl
arpl
call
pusha
cld
in
repz
adc
lods
andb
push
adc
enter
dec
inc
sbb
incl
sbb
mov
fmul
sbb
stos
add
js
dec
ret
clc
xchg
adc
lcall
test
add
pop
mul
fistps
jne
sbb
aad
xchg
ljmp
pop
xchg
scas
add
test
rcrl
or
out
call
cmpl
repz
and
mov
mov
sub
addb
ror
into
push
mov
mov
lcall
daa
lcall
out
pushw
nop
pop
dec
xor
leave
stos
sub
movsb
shll
pop
insb
cmpsb
rorl
dec
cmp
dec
add
or
pop
pop
add
and
adc
nop
cld
arpl
pushl
mov
mov
aam
outsl
outsl
inc
push
cmp
fmuls
push
xor
fiadds
jnp
adc
sub
xchg
imul
inc
push
scas
jae
push
mov
js
ffree
call
adc
mov
imul
inc
pop
test
cmp
ror
mov
jmp
scas
add
pop
inc
icebp
cmc
or
push
repnz
out
loope
dec
lret
ret
cmp
ljmp
cmp
mov
lock
adc
std
push
cld
mov
in
and
repnz
mov
sbb
or
sti
int
sub
lret
inc
and
dec
cmp
mov
jmp
aad
xor
cmpsb
push
jg
xchg
repz
mov
roll
or
movsl
lods
dec
fnstcw
jne
mov
pop
push
pop
xchg
sub
lret
dec
xchg
dec
dec
jnp
cwtl
jg
int
jge
cld
fdivp
subl
inc
or
and
popa
ret
sbb
fildll
lcall
xor
add
sub
mov
iret
push
dec
hlt
scas
sbb
add
fsub
mov
push
sarb
adc
xlat
push
sub
loopne
adc
sbb
fstps
clc
mov
fisttpll
adcl
inc
add
mov
outsl
les
cwtl
les
xchg
mov
push
std
jecxz
mov
jnp
xchg
or
jecxz
cmpsl
push
push
cmp
jnp
cmpsb
int3
adc
sarl
sub
fadd
and
test
imul
pop
jl
out
push
pop
adc
xor
and
popa
shrl
mov
push
push
jae
imul
call
shrl
stos
sbb
cmpsl
add
mov
inc
mov
push
lea
mov
call
add
push
sbb
mov
rcrl
mov
or
loop
fwait
cltd
int3
jle
aaa
push
decb
fmuls
jmp
dec
imul
daa
xor
xchg
mov
xor
jb
dec
xchg
xor
sbb
into
mov
jmp
or
cmp
loop
aad
sbb
ret
ret
dec
sbb
cwtl
pop
testb
scas
shll
mov
cmpsb
ret
adc
movsb
mov
and
in
push
xlat
add
sub
mov
xchg
pop
and
into
pop
push
push
cmc
and
jmp
and
jge
xchg
std
mov
incl
in
inc
jb
testb
xchg
out
ljmp
iret
cld
jae
sbb
out
and
in
push
mov
push
scas
addr16
ja
call
mov
push
and
test
mov
cmp
decl
or
ljmp
ret
fmull
jp
ficompl
repz
outsb
fstps
jmp
test
inc
subl
xchg
xor
mov
sub
pop
push
jp
jg
fstp
das
adc
add
inc
es
leave
and
xchg
data16
repz
int3
call
sbb
out
rcrb
push
push
cltd
xor
movsb
sbb
stc
sbb
test
mov
ja
lods
gs
mov
test
fsubl
jae
icebp
xorb
and
std
xchg
stos
rcl
sub
movl
test
jno
xchg
sub
mov
in
out
mov
sarb
mov
xchg
incl
cs
and
scas
dec
inc
iret
mov
xchg
daa
in
dec
sbb
clc
mov
outsl
imul
incl
inc
mov
ret
ljmp
jp
mov
test
out
push
frstor
jg
jmp
repnz
or
or
insl
mov
pushl
inc
jb
pop
mov
loope
sbb
or
add
adc
bound
sarl
fcom
pushl
mov
stc
lcall
insl
fidivs
dec
ds
iret
and
es
repnz
push
mov
call
dec
mov
enter
andl
cmp
and
fnsave
and
ret
cwtl
imul
ss
push
add
or
jb
je
push
js
pop
jmp
insl
mov
cmpsl
ss
jle
addr16
mov
push
lods
xor
mov
mov
and
lcall
sub
cli
or
cmp
inc
cmp
jo
insb
mov
jge
jno
ljmp
xchg
pusha
lods
imulb
insb
arpl
into
xor
cmpsb
movsl
xchg
notl
inc
mov
and
mov
pusha
sub
cld
into
lahf
sbb
test
cmpsb
aam
xchg
mov
push
xor
test
decl
cmp
and
lahf
scas
mov
icebp
shlb
test
rol
out
jns
push
xchg
pop
pusha
lods
sbb
clc
decl
stos
pop
jnp
jle
and
loop
mov
outsl
jb
fwait
lret
icebp
push
imul
lcall
cs
aas
movsl
dec
mov
cmp
aad
mov
xchg
ret
js
outsl
in
outsl
add
jp
sub
mov
mov
gs
rcr
arpl
imul
xor
out
sub
jmp
xchg
call
call
aad
jp
xor
push
mov
cmpsb
ss
mov
jmp
daa
jno
shlb
outsb
push
and
int3
pop
rorl
and
fnstcw
and
pop
cmp
jmp
pop
lcall
push
pop
pop
mov
pushl
mov
fdivrp
mov
sub
inc
pop
mov
mov
nop
icebp
stos
inc
mov
mov
aam
addr16
stos
rcrb
push
inc
pop
cld
xorb
fsubrp
or
push
clc
mov
push
fildl
mov
enter
cmp
insl
stos
cmp
cmp
or
jl
jmp
in
xor
mov
cmp
pop
push
enter
btc
cmp
fdivr
incl
mov
adcb
xchg
lds
lea
jbe
aad
xchg
mov
fcoml
inc
jmp
cmp
enter
imul
mov
and
pop
or
lcall
cmp
jge
insl
push
and
pop
sti
sbb
in
mov
xor
mov
call
ret
cmp
mov
mov
stos
pop
sahf
shr
js
inc
jge
adc
adc
adc
dec
gs
mov
jb
sub
aad
dec
dec
dec
and
mov
call
rorb
imul
daa
imul
ss
dec
xor
je
dec
mov
fldenv
subl
flds
and
das
imul
es
cmp
push
and
imul
dec
mov
adc
jae
add
hlt
dec
loop
add
decl
test
daa
repz
mov
jb
data16
loop
add
ds
dec
pop
nop
pop
dec
and
sbb
decl
stos
jl
mov
rclb
mov
data16
xor
mov
int3
aam
fsubrl
pop
popf
popf
pop
divb
lcall
fucom
xor
adc
int
push
cmp
popl
and
ja
cmpb
sbbb
divl
decl
bound
xor
sbb
aas
mov
cmp
in
rolb
adcb
call
sub
jnp
into
dec
dec
movsl
adc
lret
push
jmp
xchg
xchg
lahf
cli
adc
cwtl
cmp
jmp
pop
in
loopne
fcompl
fs
push
and
sbb
shll
mov
sbb
lcall
pop
mov
lods
push
dec
scas
scas
cmp
xor
cmp
pop
push
cmp
inc
bswap
shl
cmp
rcrb
pushl
jns
aaa
pop
cld
sahf
sbb
xor
pushf
cwtl
leave
jl
inc
xchg
or
jecxz
pop
inc
jmp
fs
insl
adc
shlb
inc
xchg
insb
enter
bound
stc
decl
cmp
add
ljmp
filds
add
mov
mov
pop
call
popa
cmp
mov
pop
xor
icebp
iret
icebp
and
xchg
dec
ud1
mov
mov
inc
xchg
jg
and
sbb
icebp
lods
std
mov
out
pop
jmp
pop
in
inc
shll
mov
xchg
incl
cmc
mov
push
xor
xor
sub
cmc
inc
add
pop
or
scas
cmp
fcomps
outsl
cmpsb
cmp
mov
mov
push
adc
hlt
lods
aam
xchg
jb
jmp
and
loopne
xchg
aam
and
push
sub
push
push
push
mov
test
jns
ljmp
js
pop
pop
clc
adc
in
add
fisubl
mov
push
jno
and
call
jae
mov
iret
pop
pop
and
sub
lds
dec
lods
sub
mov
call
add
xor
sbb
out
jo
fisubrs
ds
fucomi
std
jns
and
jno
adc
or
test
repnz
xor
jnp
and
fiadds
cmpsl
stc
jmp
gs
out
jg
ficoml
rcrb
nop
lret
cs
data16
jmp
cmp
xchg
lea
insb
rorb
es
pop
insb
jo
aaa
inc
add
mov
xchg
jl
call
pop
pop
jmp
mov
scas
outsl
sub
pop
sbb
jo
xchg
mov
adc
pushl
cmp
add
mov
sub
pop
sub
fdivrl
inc
mov
daa
ud0
decl
xor
sub
add
dec
sub
or
mov
mov
lret
out
push
inc
pop
inc
jnp
xlat
jnp
repnz
stc
clc
dec
mov
leave
or
shrl
loopne
fs
ljmp
lea
pop
lods
sub
lcall
adc
xor
pop
jmp
jmp
dec
imul
insl
inc
lea
dec
inc
movsb
dec
mov
cli
leave
add
int
pop
mov
call
arpl
mov
sbb
xor
sub
push
arpl
ds
mov
mov
or
decl
aam
ficompl
and
cmp
xchg
fsubr
out
adc
mov
mov
pushl
adc
add
sbb
and
out
test
cld
in
add
cmp
push
je
xor
inc
add
pop
dec
sti
leave
aas
in
mov
xor
mov
call
xor
aam
push
pop
rorl
pop
mov
fnsave
fcoml
mov
inc
repnz
call
inc
pushf
push
mov
fisubrl
cmpsl
mov
xchg
cmp
sub
add
lcall
cltd
negb
shrb
cmp
push
fistps
fs
jge
cmp
cltd
push
aas
scas
dec
dec
cmp
iret
jmp
jo
mov
and
loope
mov
aam
andl
mov
dec
out
dec
lock
add
push
pop
jno
cs
adc
xchg
sub
in
arpl
decl
mov
aas
dec
mov
sbb
movsl
cli
lds
add
lea
jnp
dec
cmp
subl
or
rolb
add
or
pop
cmpsb
clc
mov
add
int3
lcall
ficomps
pop
adc
int
push
cs
push
mov
dec
pushf
and
inc
into
xor
mov
cmp
dec
dec
mov
pop
outsb
inc
push
shl
int3
arpl
in
pop
add
cwtl
jp
out
lcall
fbld
mov
mov
pop
cs
in
cmp
jbe
insl
inc
insb
sub
xlat
dec
pusha
mov
pushl
mov
pop
pop
jmp
push
mov
fwait
mov
pop
pop
jp
leave
lahf
nop
insb
aad
jle
jmp
mov
in
ret
pop
imul
cmp
add
lea
xchg
pop
pop
jae
xor
jmp
test
mov
ljmp
shl
mov
xor
lods
cs
call
out
jp
pop
testl
shll
hlt
mull
cmp
ljmp
jo
push
xchg
call
push
sbb
xchg
push
xor
movb
fistps
push
das
mov
dec
inc
mov
js
mov
dec
std
xchg
or
call
cs
rcrl
cmp
out
mov
mov
sbb
and
mov
cmpsb
mov
testl
lcall
adc
push
orl
inc
pop
add
sbb
mov
loope
lods
inc
gs
cmp
pop
dec
je
cmp
push
rcrl
pop
and
and
add
push
inc
pop
jecxz
mov
decl
jne
cmp
add
push
imul
mov
xchg
mov
inc
insb
dec
push
push
jmp
jmp
pop
adc
dec
dec
pop
dec
mov
jg
leave
mov
xchg
cmp
adc
cmp
decl
popf
fwait
addl
decl
fstl
fs
jo
jecxz
mov
negb
fisubs
lret
mov
sbb
mov
mov
dec
gs
or
mov
call
ss
or
mov
mov
push
adcb
inc
or
mov
adc
stos
das
mov
or
xchg
jns
cmc
add
inc
sbb
pop
xor
jne
and
pop
fnstsw
inc
jmp
mov
imul
test
shll
movsb
icebp
cmpsl
push
ljmp
or
mov
xor
inc
pop
int
clc
aas
loopne
data16
pushf
gs
inc
push
dec
add
and
pop
push
out
xchg
scas
test
cmpsl
jle
jbe
vpmacssdql
jmp
in
rcr
dec
cltd
out
cmpsl
cmp
push
out
repz
xchg
std
sbb
inc
in
adcb
pushl
insl
mov
inc
or
sub
mov
aam
dec
add
adc
mov
fiadds
insb
add
sbb
std
test
mov
lahf
sub
nop
push
lcall
shll
jo
add
and
cmp
popf
inc
mov
incl
out
aaa
cmpsb
leave
iret
mov
adcb
lds
ds
sbb
sahf
inc
cmp
call
addl
sub
sbb
mov
in
dec
cli
jne
hlt
out
into
pop
add
mov
stos
insl
and
data16
inc
scas
sbb
inc
aaa
andl
ljmp
push
xchg
lcall
xor
scas
dec
ds
fwait
roll
add
decl
mov
adc
std
mov
mov
sub
ds
aam
mov
mov
lcall
mov
and
jo
out
sbb
inc
mov
leave
push
push
cmc
lcall
jmp
frstor
sbb
loop
shll
add
mov
xor
cmpl
mov
sbb
decl
addr16
mov
clc
adc
cmc
add
mov
pop
sub
imul
and
int3
or
jae
int3
mov
pop
inc
and
sbb
popl
mov
scas
or
add
call
cli
mov
push
push
int
lea
xlat
dec
rcl
xchg
pop
insb
hlt
rol
mov
call
in
and
pusha
pop
push
jle
js
enter
cmpsb
jl
mov
gs
mov
jmp
scas
rcl
xor
sub
int3
adc
int3
jge
pusha
sub
out
jnp
pushl
js
stos
scas
sub
rcrl
sub
mov
pop
and
iret
jg
std
decl
aad
decb
sahf
mov
inc
pop
sti
jle
pop
out
xchg
mov
mov
test
and
fisubrl
out
jp
pop
hlt
xor
pushf
fcmovbe
hlt
dec
lock
imul
mov
mov
push
cwtl
or
stos
and
in
mov
mov
xor
mov
addl
jne
xor
lods
push
cs
mov
mov
dec
out
xrelease
incl
scas
jl
sahf
mov
and
add
dec
ja
fbld
xchg
inc
dec
push
adc
decl
dec
push
loopne
sub
dec
mov
jecxz
push
add
xchg
mov
push
mov
call
adc
out
inc
inc
push
add
mov
in
jb
lock
lret
and
cmp
fidivrl
cwtl
mov
bound
or
adc
mov
cmp
clc
lret
xchg
fsubr
inc
mov
xchg
mov
fmulp
cmpsb
jmp
lea
pop
xchg
loope
cmc
fisubrs
sbb
orl
aam
pop
adc
adc
fmul
mov
int3
mov
lcall
jmp
movsb
xchg
call
adc
std
call
sbb
in
and
cld
or
dec
xchg
push
inc
mov
mov
cmp
xlat
out
and
gs
je
xchg
das
sbb
cmpsl
dec
pop
std
sbb
fists
iret
mov
iret
sbb
push
push
fwait
arpl
fisubrl
push
adc
in
mov
cmp
gs
pop
in
xchg
xor
popa
pushf
inc
sub
rol
add
mov
pushl
and
sbb
dec
aaa
mov
cmpsb
jbe
cmp
pop
in
push
gs
add
sub
inc
jno
les
mov
mov
jecxz
test
adc
mov
test
ljmp
je
dec
push
push
xchg
xor
push
jno
aaa
jg
mov
scas
je
lret
es
incl
hlt
movsb
gs
push
decb
mov
imul
jge
scas
lods
test
fmuls
jg
ljmp
fsts
mov
and
xchg
cmp
test
pop
rclb
addr16
or
incl
icebp
test
xor
cli
or
test
jnp
movsb
inc
rcl
inc
rolb
sbb
ja
or
in
aaa
jmp
pop
movl
popf
pop
notb
out
pop
or
xchg
jne
add
lea
decl
xchg
addr16
outsb
sahf
sbb
jg
je
xor
stos
pop
dec
aaa
mov
imul
fcmovnb
inc
sub
jne
test
fsubp
cmp
push
sbb
ja
lock
lcall
xchg
lahf
fninit
jbe
sub
jmp
xchg
add
xor
lcall
fwait
dec
and
jno
mov
cmp
sbb
ds
cmp
call
iret
popl
xor
sbb
jl
icebp
mov
mov
ljmp
hlt
mov
and
jb
leave
sarl
sbb
imul
cmpsl
cmp
lods
insb
test
in
leave
or
add
in
dec
sub
jecxz
jmp
mov
pop
push
call
xchg
pop
fbstp
cmp
dec
outsb
scas
repnz
das
dec
pop
mov
or
ljmp
lcall
subl
jae
rcrb
dec
add
xchg
mov
pop
out
pop
out
mov
or
sbb
cmp
test
rorb
cld
cld
and
test
or
xlat
xchg
dec
repnz
and
pop
mov
jg
add
lret
cld
mov
or
push
inc
in
adc
xor
inc
jnp
mov
jmp
movsl
adc
fwait
sub
pop
fs
cmp
or
mov
mov
movsb
rcrl
xchg
pushl
in
add
inc
push
mov
leave
mov
ds
xor
inc
arpl
pop
mov
dec
push
sub
push
jmp
gs
cmp
std
add
es
cli
dec
ss
or
jne
xchg
call
enter
lds
inc
xchg
sarl
rolb
jmp
cwtl
outsb
pop
mov
test
shll
xchg
aam
adc
jnp
call
push
cmpsl
dec
inc
push
mov
in
hlt
movsl
lret
and
cmp
cld
outsb
sub
xchg
subb
fsubr
inc
xchg
popa
sub
movsb
js
rclb
jge
sub
ljmp
jae
jae
mov
dec
push
ficoml
ret
cli
popa
dec
add
ja
and
pop
inc
std
insl
mov
fs
shr
sarl
xchg
xchg
out
orl
mov
cmp
lods
maskmovq
testl
adc
inc
rcrb
push
pop
inc
shrb
and
pop
inc
in
lcall
jle
dec
push
adc
outsb
cld
lcall
push
push
pop
xchg
or
repz
sar
inc
mov
or
cld
add
pop
mov
xchg
push
ljmp
repz
les
pop
pushl
pusha
das
imull
stos
adc
es
push
mov
and
xor
adc
fisttpll
ljmp
or
inc
push
ds
insl
ror
lret
dec
mov
mov
leave
ret
jg
lahf
adc
cmp
mov
popa
adc
out
lahf
ja
or
jmp
xor
mov
mov
push
jge
loopne
inc
pop
cmc
mov
adc
jmp
dec
jg
adc
or
iret
pop
push
mov
adc
mov
inc
push
push
mov
shrl
pop
fld
sub
lahf
dec
inc
fsubs
ljmp
pushl
mov
add
jno
lahf
inc
xchg
sbb
pop
sbbb
mov
incl
jl
mov
cli
orl
imul
xor
loop
cld
cmp
pushl
fwait
dec
iret
mov
lea
imul
cli
cmc
xor
idiv
mov
xor
les
cmp
addl
jbe
ror
mulb
loope
sub
jne
std
sub
insb
push
mov
dec
fs
in
pop
call
mov
add
push
push
lahf
rcr
lcall
lret
stos
clc
aad
inc
inc
das
shrb
int
push
in
push
nop
pop
mov
test
out
xchg
testl
mov
arpl
sti
inc
push
pop
outsb
mov
pop
pop
movb
call
xchg
aad
lcall
or
push
mov
scas
dec
test
dec
gs
push
imul
cmp
incl
mov
xor
xchg
fcmove
cmc
mov
dec
xchg
popl
push
es
ljmp
mov
jl
imul
mov
cmp
lcall
jmp
popf
mov
mov
xchg
enter
add
push
or
and
incl
jbe
adc
movsl
cmp
inc
push
scas
push
andl
bound
test
pop
dec
push
test
and
xor
ss
cld
ret
jecxz
stc
aaa
add
cmp
call
test
sub
test
pop
jp
inc
xlat
movsb
jno
xchg
fiaddl
cmp
xor
incl
xlat
lret
dec
addb
out
xor
xor
push
ljmp
into
add
mov
outsl
pop
rcrl
stos
fsub
fldenv
aad
jl
faddp
cld
cli
in
orb
decl
arpl
mov
addr16
ret
xorb
pop
xchg
enter
pushf
inc
cmp
decl
sbbl
test
int
clc
cli
mov
inc
cmpsb
lea
decl
add
scas
and
and
js
in
jg
mov
aad
clc
add
cld
adc
decl
dec
and
insb
iret
es
lahf
std
test
fcmove
cmp
push
add
and
dec
xor
pushl
sbb
mov
in
xchg
addr16
sub
rcrl
aad
xchg
jmp
and
sub
push
cwtl
jo
incl
shll
mov
sub
mov
jecxz,pt
mov
subb
cmp
loopne
neg
divb
roll
ljmp
mov
and
inc
es
sbb
ljmp
and
pop
add
push
out
sbb
fwait
cmc
or
iret
push
int
lcall
mov
pop
cmp
cli
mov
mov
lret
rol
xchg
shrb
cmp
cmpsb
jg
inc
outsb
push
xchg
fucomip
xlat
inc
cmp
fdiv
add
add
pop
lea
mov
movsl
stos
pop
popl
lcall
jge
int
push
xchg
adc
daa
fstpt
mov
pop
movzwl
sbb
lcall
sub
cmp
pop
inc
push
xchg
out
push
push
add
jle
test
aas
pop
repnz
ljmp
dec
xor
jb
mov
push
push
repz
into
incl
cli
jne
pop
incl
sbb
jge
mov
or
mov
push
mov
ficomps
push
call
andl
sub
addr16
ds
push
jae
mov
sar
orl
call
notl
xor
in
jno
andl
repz
adc
add
int3
mov
jmp
jbe
sub
mov
fwait
out
jae
sti
or
jle
jg
jecxz,pt
jmp
insl
fadd
ret
and
and
mov
loop
mov
cs
ljmp
inc
mov
sub
int3
inc
jne
lcall
xchg
adc
add
adc
decl
icebp
in
mov
xor
cld
scas
shrb
jo
push
cmp
addl
decl
pusha
daa
mov
fbstp
mov
mov
push
mov
daa
leave
mov
cs
and
lcall
aaa
mov
ret
outsl
pop
mov
hlt
cmp
cwtl
cmp
xlat
and
leave
mov
cwtl
cmp
js
push
imul
jle
or
insb
cwtl
pop
rol
fadd
jmp
cmpsb
pop
cmp
incl
lods
xor
jp
lea
imul
ljmp
test
xlat
addb
dec
in
idiv
ljmp
push
in
xor
mov
inc
add
pop
orl
xor
loopne
dec
add
popa
sbb
mov
loopne
aad
adc
mov
fs
mov
dec
push
or
lcall
lahf
fidivl
insl
and
mov
aaa
loop
pop
in
inc
mov
out
mov
mov
push
sti
jb
jmp
shll
ja
add
cltd
adc
lds
addr16
xlat
stos
jmp
int
and
or
int
shrb
loopne
mov
push
jmp
add
sub
or
inc
ljmp
aas
popa
cwtl
or
inc
jmp
dec
fwait
jmp
stc
movsl
scas
push
sbb
dec
push
jnp
adc
in
jb
mov
xorb
cmp
ljmp
mov
mov
lcall
push
int3
ja
jb
and
lds
mov
mov
push
movsl
clc
lds
lea
xor
fstl
xchg
stc
adc
test
data16
mov
jg
jg
lock
ret
adc
add
mov
jl
push
push
push
lcall
mov
insl
sti
xchg
lahf
inc
add
pop
getsec
adc
arpl
xchg
push
mov
cmpsl
shll
xchg
xchg
pop
call
lret
or
push
pop
add
fcmovnu
cli
fdivr
lcall
add
mov
iret
ficoml
aam
inc
push
sub
mov
adc
mov
test
call
sub
and
and
notb
jae
jae
inc
sbb
es
ljmp
out
mov
rcr
fiaddl
in
xor
pushf
add
jno
clc
pop
lahf
mov
sub
lods
shlb
dec
mov
xchg
xchg
pushf
adc
les
lcall
mov
mov
jne
push
out
pop
arpl
sbb
jle
xor
dec
loop
jb
pushl
sub
inc
dec
iret
popf
and
cmc
mov
stos
jne
push
nop
dec
dec
or
aas
jno
jl
jle
add
icebp
xchg
sti
faddl
loopne
outsb
xor
push
push
stos
xor
popa
mov
mov
loop
les
adc
mov
jp
cmpb
loop
cltd
ljmp
cmpsb
xchg
mov
and
rcrl
mov
andl
jmp
rolb
jl
lcall
imul
mov
cmp
stos
addr16
or
push
pop
sub
fidivrl
arpl
fucom
das
aam
movsl
push
and
mov
in
jb
xchg
lock
mov
movsb
outsb
ljmp
push
push
mov
enter
push
xchg
jp
jno
jl
mov
dec
xchg
jge
nop
decl
in
push
cli
pop
orb
daa
shll
fucomp
stos
shrl
add
test
mov
in
ljmp
addr16
insb
inc
cmp
inc
mov
pop
int3
mov
xchg
clc
cmp
mov
cmp
xor
incl
pop
inc
adc
add
iret
mov
test
push
inc
mov
sbbb
clc
and
out
and
push
sarb
repnz
or
icebp
loope
lahf
mov
pop
inc
iret
call
bound
inc
sub
and
sbb
imul
mov
ss
insl
jmp
jge
cld
popa
inc
sub
push
mov
scas
xlat
ret
adc
sahf
pop
push
cld
jae
cmp
decl
hlt
sbb
push
xchg
loop
xchg
addr16
mov
call
sub
aad
loope
ljmp
bound
loope
jbe
xchg
push
pop
ss
jne
sahf
sub
mov
jmp
inc
push
lods
cs
leave
cmp
or
pusha
xchg
mov
xchg
push
dec
in
mov
xchg
cmpsb
cli
mov
call
enter
or
aad
aaa
jp
fwait
mov
imul
jno
cmp
cmpsl
decl
lret
daa
enter
jnp
mov
sti
nop
and
sbb
lods
jmp
sub
cmpsb
cmp
sbb
xor
sub
and
into
jg
sbb
add
jp
cwtl
stos
jae
aas
out
mov
adc
popa
sbb
jne
sbb
pushf
sahf
test
cmp
or
lods
xchg
out
jbe
mov
fxch
lret
xor
imul
push
sahf
jo
fdivrl
xchg
sbb
pop
dec
shlb
xchg
xchg
loopne
sub
incl
dec
mov
xor
dec
ss
cmpsb
movsl
xor
std
sub
xchg
cmp
mov
cmp
scas
fxch
xchg
cmp
fidivs
or
shlb
cltd
xchg
xchg
dec
jns
test
adc
incb
and
lcall
rcrl
mov
hlt
push
push
sahf
call
push
cmp
sahf
jae
es
decl
and
ss
fildll
das
in
sahf
cmpsb
stos
add
pushf
jns
cmp
jle
fdivs
ljmp
jne
loopne
dec
lahf
mov
outsl
push
lods
test
push
push
xchg
les
lea
ljmp
sbb
cmp
not
aaa
mov
cs
add
loope
mov
leave
hlt
push
pusha
decl
or
sti
mov
sbb
mov
bound
movsl
ror
test
or
and
fiadds
add
test
mov
iret
pop
gs
inc
sbbl
jge
out
sarb
mov
inc
sub
shlb
cmc
sbb
push
lods
cmp
jnp
lea
pop
decl
xchg
jno
cmpsl
les
push
cmp
sub
xchg
aad
insl
int3
jmp
scas
push
xor
pcmpgtd
gs
adc
mov
xor
add
lds
mov
sahf
in
push
pop
rcrl
pop
cld
ret
push
test
int
inc
insl
inc
mov
inc
sub
fcoms
pusha
in
pushl
aaa
mov
imul
je
gs
dec
scas
loop
xlat
push
testb
jp
addl
mov
js
cmp
leave
fildll
gs
hlt
push
data16
aad
cmp
lcall
xor
xor
xchg
and
xchg
pop
fisttpl
test
or
jmp
jmp
ljmp
insb
xchg
inc
out
or
test
cmp
popf
mov
ds
sbb
pushl
dec
sub
xchg
sub
pusha
mov
in
pop
pushf
xchg
or
or
and
inc
int
aam
xor
or
rcrl
insb
call
test
cs
cltd
jb
sar
ljmp
dec
mov
insb
dec
jl
sbb
push
pop
jecxz
out
mov
inc
jmp
std
dec
fcompl
jo
lds
mov
inc
fcomps
ja
pop
les
inc
into
inc
fsubrs
jmp
pop
add
clc
push
out
mov
mov
loop
and
adc
inc
inc
dec
sbb
lcall
dec
inc
push
push
mov
mov
xchg
loope
and
sarl
lcall
xor
and
mov
dec
push
add
lret
adc
add
push
add
adc
push
cmp
jmp
aam
icebp
sub
jnp
dec
jno
adcb
mov
in
mov
or
jmp
sub
mov
cmp
ja
push
nop
movsl
pop
sub
or
movl
nop
mov
js
fs
in
sti
daa
cmpsl
xor
push
ret
test
dec
adc
or
stos
fdivrp
ljmp
mov
inc
sub
imul
js
jns
xlat
jns
cs
sbb
jmp
stos
fisttpl
dec
dec
pusha
test
xchg
push
mov
dec
mov
mov
lret
sbb
fdivr
pop
jno
das
lock
ja
sbb
lahf
cs
in
adc
mov
sbb
jmp
jns
je
cmp
or
push
int
and
lods
inc
fsubl
cltd
lret
inc
incl
aam
and
mov
mov
inc
lods
rcll
in
std
cmp
xlat
jecxz
dec
cli
adc
out
sbb
dec
pop
insl
dec
pop
add
lock
in
mov
arpl
jmp
lods
int3
or
pop
jle
pop
clc
xchg
dec
out
cmp
into
divl
pop
int
jge
pop
jmp
inc
test
lock
bound
inc
cmp
cmpsb
push
jbe
mov
ljmp
clc
jmp
sub
jge
aaa
ficoms
dec
imulb
cmp
sbbl
decl
das
les
jmp
xchg
lcall
das
adc
out
scas
inc
add
jmp
call
xor
daa
adc
jae
stos
push
cmp
sbb
push
dec
mov
or
sub
mov
cmp
pushl
jo
lods
dec
adc
cwtl
scas
xchg
insl
lods
add
cmp
gs
xchg
add
inc
mov
cmc
aad
mov
jmp
nop
lcall
daa
xor
int
pop
shll
cmp
mov
test
fdivrl
pop
xor
jb
andl
es
fnclex
lahf
sar
ljmp
xor
jl
or
test
ret
add
nop
js
lahf
inc
int3
mov
pop
xor
test
xchg
fsubs
jno
cmpsb
in
mov
and
lahf
push
inc
push
xor
mov
das
pushl
mov
mov
lods
xor
stos
jge
nop
mov
out
icebp
pop
out
out
clc
lds
cltd
or
aam
push
sbb
sbb
or
cmc
lods
mov
je
cwtl
stc
jl
lcall
or
and
mov
cmpsb
xchg
xor
mov
xor
rolb
lock
imul
add
dec
mov
or
push
pop
pop
mulb
call
imul
loope
in
pusha
rcrl
test
inc
int3
arpl
mov
incl
mov
stc
jns
mov
mov
cli
mov
in
xor
jp
bound
xchg
cs
push
ficoml
aaa
repnz
lahf
pushf
fsubrs
and
std
add
mov
ljmp
inc
loop
add
push
jno
and
pop
leave
lahf
daa
xor
insb
add
mov
call
pop
pop
jb
cmpsl
fst
push
jne
shlb
clc
ja
lods
pop
loopne,pn
test
frstor
fisttpll
out
or
orl
lret
sub
mov
sbb
cmp
pop
push
in
ljmp
mov
and
lcall
mov
dec
xlat
and
pop
insb
out
int3
pusha
testb
pushl
outsb
pop
push
push
out
jp
pop
push
lods
arpl
jns
add
sbb
jbe
or
ljmp
rclb
add
jae
xchg
jb
xchg
rorl
inc
enter
jge
leave
popf
decl
push
sbbb
stc
mov
cltd
js
cmc
mov
push
enter
dec
call
movsb
js
aaa
repnz
jecxz
sarl
inc
adc
xchg
sbb
imul
mov
mov
ss
mov
lcall
xchg
cmp
sbb
ja
inc
xchg
test
call
fmull
inc
dec
test
fcmovbe
loopne
pop
inc
dec
add
dec
arpl
ficompl
aas
push
pop
mov
jbe
jl,pn
dec
aam
notl
mov
push
inc
mov
pushl
cwtl
push
fidivs
mov
dec
xchg
xchg
inc
push
pop
xor
pop
xchg
inc
adc
xchg
ja
movsl
mov
or
pop
mov
mov
jnp
and
and
inc
std
jno
cmpsb
xor
imul
and
sbb
push
mov
sbb
inc
jp
out
out
mov
jmp
mov
cld
iret
xor
pop
psubq
cmpl
call
and
cwtl
xchg
mov
sub
pop
push
fstl
jecxz
cmp
loope
xchg
inc
cmp
mov
pop
leave
fmuls
mov
adc
push
xchg
jbe
decl
mov
push
in
negl
jns
dec
repnz
push
sbb
and
push
or
cmp
jge
jbe
jmp
xchg
jmp
add
sti
aas
adc
mov
out
loope
rorl
jo
push
mov
les
pop
test
aaa
xor
fldcw
or
lahf
xchg
push
and
mov
sbb
pusha
jmp
out
sub
mov
es
ljmp
sbb
in
rclb
leave
imul
dec
xchg
inc
inc
add
fcmove
aaa
mov
out
rol
mov
fldz
repz
add
push
sbb
add
mov
or
pop
mov
xchg
call
incl
mov
js
mov
in
adc
aaa
ret
push
mov
push
cmp
and
decl
cmpsb
mov
push
icebp
hlt
add
and
stos
add
jb
in
decl
into
mov
pop
sbb
or
movsb
arpl
sub
push
popf
data16
mov
dec
cmc
lcall
fcmove
call
insl
sbb
aad
dec
xor
daa
lods
dec
and
push
sub
jmp
mov
sbb
stc
imul
fidivs
jle
pop
dec
ret
add
pop
xlat
inc
jmp
loopne
rorl
and
sahf
push
lods
cmp
dec
and
out
inc
aas
xchg
cmp
and
ljmp
mov
xchg
lds
out
jne
iret
fcoms
and
ljmp
add
call
fisttps
xor
and
pop
inc
scas
mov
and
ret
mov
out
sbb
push
cs
inc
sub
mov
xorb
jle
fdivr
cmpsl
or
mov
lcall
fchs
and
aas
outsl
notb
cwtl
xor
sbb
xchg
push
xchg
mov
decl
cmp
cmpsl
adc
mov
imul
add
lahf
cwtl
sub
jmp
rcl
js
aas
adc
dec
mov
imul
dec
icebp
idiv
incl
mov
push
mov
xchg
incb
repz
pop
test
ljmp
nop
call
mov
bnd
insl
xor
je
mov
aam
repz
call
push
into
jbe
mov
inc
or
cs
lods
inc
jnp
adc
mov
dec
sbb
jp
jmp
stos
pop
out
out
test
inc
xor
pop
add
inc
sbb
enter
or
ljmp
xor
push
add
push
mov
mov
or
shl
jl
movsl
mov
idivl
xchg
out
in
and
pop
repnz
lret
orl
mov
xchg
por
in
ja
int3
lcall
push
jp
mov
push
mov
dec
iret
pop
mov
mov
movsl
mov
imul
inc
push
or
dec
jg
cwtl
adc
xchg
inc
pshufw
mov
pusha
or
or
ret
dec
cwtl
cltd
push
es
lcall
xor
xchg
jge
ret
aas
inc
dec
or
or
std
outsb
test
test
xchg
decl
lret
sub
add
mov
inc
pop
scas
hlt
rcrl
ljmp
cmp
daa
bound
stos
dec
lods
xor
outsb
push
fistl
xor
mov
decl
out
test
pop
cli
sub
mov
sub
pop
inc
ss
mov
rcll
mov
sub
lock
mov
mov
inc
push
push
movsb
mov
das
cmp
jge
test
mov
mov
lods
pop
es
add
sub
jae
aas
out
sti
cmp
incl
inc
lea
int3
push
and
repz
inc
fisubl
subl
mov
call
xor
test
xchg
sbb
ret
mov
and
insl
sub
cld
fistps
mov
call
adc
cmpsb
arpl
sahf
aam
add
sahf
add
xlat
add
pop
aam
jae
clc
fmull
lea
dec
lcall
mov
mov
fisttpll
cmp
int3
shrl
adc
pop
mov
cmp
negl
mov
inc
inc
push
mov
cmp
jle
out
mov
add
in
aaa
mov
jp
xor
cld
popa
mov
shlb
movsl
nop
out
lcall
dec
cmp
dec
scas
pop
sub
in
sbb
sbb
hlt
add
and
jle
adc
mov
mov
mov
mov
test
int3
xor
push
imul
call
mov
fistl
std
aas
das
cmp
push
xor
scas
cmp
outsb
outsl
inc
sub
cmc
lods
clc
mov
inc
inc
enter
arpl
mov
mov
dec
sub
lcall
dec
lret
inc
orl
ja
call
pop
hlt
popa
or
mov
cmp
jecxz
ljmp
jmp
sub
imul
or
dec
mov
stos
les
xchg
xchg
jno
jmp
jmp
enter
push
or
hlt
mov
addr16
lcall
call
repz
ja
mov
and
cltd
cmp
or
xchg
jmp
les
dec
jns
idivl
inc
call
xor
call
call
testb
int3
ss
sub
push
inc
xor
push
addb
adc
pop
ret
call
xchg
lret
scas
mov
sahf
and
pop
xor
mov
roll
icebp
cmc
ljmp
pop
scas
xor
or
testl
mul
or
pushl
fimuls
xorl
lea
into
aas
sub
repnz
mov
sub
lcall
dec
repz
pop
pop
inc
or
inc
subb
pop
js
add
jmp
mov
mov
mov
pop
xrelease
push
jne
leave
out
dec
add
sub
jmp
sub
push
mov
test
dec
cmc
push
js
pop
add
fnstsw
fsubrs
call
clc
lea
mov
fwait
jle
stos
jo
xchg
pushf
add
push
dec
cli
subl
decl
pop
popa
popa
xlat
cmp
andb
rcrb
lret
inc
mov
std
out
call
jns
jb
pop
test
inc
bound
adc
jle
insl
std
dec
insb
jb
ja
mov
mov
rorl
lock
xor
out
push
cmp
dec
sub
jb
fisubrl
nop
xchg
or
pushl
lods
mov
sbb
dec
sbb
push
test
lods
add
stos
call
std
jns
mov
andb
outsb
sbb
addr16
jnp
dec
or
test
in
jp
mov
lcall
lcall
inc
clc
rorb
imul
out
mov
icebp
mov
jb
decl
out
in
data16
sbb
xchg
iret
movsl
loopne
jp
iret
push
xchg
mov
shrb
es
pushl
mov
and
imul
cmc
aas
mov
ficoml
pop
jg
jmp
stos
popa
aad
xor
adc
or
lock
pop
enter
or
xor
std
std
popa
out
mov
xchg
push
add
push
adc
cmp
insl
fwait
add
pushl
mov
hlt
adc
xor
or
neg
xchg
into
xchg
sub
mov
jae
int3
pushl
mov
jae
xor
stc
mov
xchg
xchg
jnp
enter
jnp
bound
incl
xchg
add
push
jecxz
pop
push
cwtl
iret
dec
rorb
stc
sbb
pop
push
jmp
cmp
js
ds
je,pt
sbb
daa
test
cmpsl
cld
jbe
sahf
pop
test
imul
sbb
mov
scas
add
mov
ret
cmp
cmp
in
lds
insb
push
xchg
fisubrl
call
push
jge
stos
lret
mov
pop
sbb
inc
and
test
inc
dec
ret
lcall
mov
push
ret
push
xchg
jo
sub
pusha
clc
stc
insl
fdivl
shrl
sbb
jecxz
adcb
das
stos
inc
mov
jae
xchg
push
movsb
adc
inc
in
adc
jmp
outsb
movsb
adc
adc
xor
movsb
sahf
mov
dec
imul
cli
into
rolb
ljmp
jo
and
inc
leave
stc
or
lcall
push
sbb
lock
insl
out
stos
jmp
jmp
push
xchg
mov
push
ret
inc
mov
aas
decl
jecxz
addr16
mov
ficoml
outsl
shrl
rcl
cmpsb
nop
mov
ljmp
adc
sub
mov
or
and
or
js
ds
mov
ljmp
into
push
shl
push
jmp
popf
pop
xor
push
hlt
testl
incl
hlt
arpl
imul
lahf
icebp
loope
jne
mov
inc
adc
xor
call
xchg
es
dec
lret
leave
jb
pop
dec
ds
jmp
jae
imul
add
lcall
fdivrl
push
push
aas
mov
and
jecxz
sub
scas
aad
shll
outsl
jbe
lret
mov
les
inc
call
leave
jmp
stos
mov
xchg
movsb
or
add
or
adc
test
call
or
xchg
shlb
push
sbb
stc
mov
enter
xchg
stc
sub
mov
push
jp
pop
add
sbbb
js
mov
add
in
pop
pop
ljmp
scas
adc
dec
pop
aam
subb
daa
into
and
pop
mov
inc
xchg
pushf
add
or
data16
je
mov
test
ficoml
cmp
pop
xchg
fidivl
ret
test
fisubrs
mov
decl
push
adc
push
xchg
and
into
les
push
ja
pusha
cmpps
jmp
sub
addl
pop
push
xor
call
pop
jp
lods
push
in
fsubrs
jge
call
push
cmpsl
inc
bnd
mov
cld
pop
repnz
int3
rcll
jmp
arpl
flds
pushl
mov
test
daa
jne
inc
aas
sbb
push
testb
es
addr16
call
dec
and
cmp
mov
mov
jg
test
test
ljmp
int
jbe
jnp
mov
fsubr
rcrb
ret
adc
dec
shrb
decl
das
xlat
cs
jl
or
ja
xchg
dec
ret
sub
pop
adcl
subl
incl
loope
adc
aaa
mov
in
in
jnp
jae
push
sub
loop
lock
dec
js
push
xchg
decl
mov
int
and
std
sahf
xor
fisubrl
sbb
dec
mov
pushl
dec
adc
or
fs
sub
out
inc
movsl
repz
and
inc
call
mov
xor
mov
pop
and
xchg
inc
loope
add
mov
ljmp
mov
popl
sub
scas
fcom
sbb
pushf
rol
int
roll
xchg
or
fld
testl
cltd
add
mov
sti
ss
push
call
or
mov
or
cmp
cmp
jb
fwait
fs
arpl
ja
outsb
lock
mov
push
pop
push
add
daa
ljmp
sub
out
or
and
call
mov
mov
and
xchg
mov
ret
pop
out
hlt
adc
fldcw
xchg
mov
pop
aad
xor
or
dec
xor
jae
xor
ficoms
jns
clc
jns
call
pop
inc
mov
pop
fildll
into
cmpsl
sub
mov
xor
pop
mov
decl
clc
jle
cltd
cld
or
pushf
lcall
cmpsb
lock
mov
inc
mov
push
xor
fs
scas
inc
inc
int
test
sub
in
test
clc
mov
inc
mov
daa
movsb
dec
ja
pop
xor
roll
test
pop
sub
pop
sbb
scas
repnz
pushl
mov
outsl
push
mov
int
out
cmp
push
sub
ds
push
loopne
jmp
lods
adc
mov
or
mov
cltd
inc
leave
sbb
mov
ljmp
les
cmp
xor
in
push
ja
scas
mov
aam
fmul
adc
cmp
decl
call
cwtl
pop
ret
inc
emms
push
pop
mov
or
inc
adc
incl
mov
sahf
mov
icebp
or
and
pop
cld
jmp
jmp
jg
push
lcall
pusha
mov
dec
push
imul
mov
inc
fwait
xor
dec
imul
pop
pop
aas
decl
dec
mov
inc
pop
xchg
sar
mov
imul
or
roll
incl
dec
out
push
dec
xchg
rcll
stos
cmpsb
hlt
push
insl
push
mov
mov
and
sub
popf
jmp
rcr
xchg
dec
ret
sti
pop
adc
mov
hlt
imul
outsl
cmc
rclb
dec
xchg
flds
nop
mov
inc
jnp
lods
fnstsw
aaa
aad
cmp
pop
cli
xchg
sbb
in
jo
pushl
dec
rorb
sarb
jns
repz
rcrl
adc
jne
ret
ret
jmp
aam
int3
xchg
add
dec
xor
imul
xlat
jecxz
lcall
ljmp
pop
sbb
gs
sub
jge
mov
cmp
cmpsl
push
fcomip
or
jmp
sbb
mov
sahf
je
aad
cli
negl
mov
shlb
fcomps
mov
iret
pop
fcoml
lods
and
add
rcll
int
add
ljmp
call
cmp
mov
and
lds
ficompl
call
mov
das
cmpsl
pop
push
push
fcomi
ror
lcall
clc
mov
mov
xor
mov
adc
dec
subb
cmp
push
fnstcw
sub
lods
add
clc
xor
cmp
pop
push
cs
pusha
xchg
jne
daa
dec
call
cwtl
pop
imul
call
repz
lcall
out
scas
jle
pop
ror
loope
cltd
push
or
std
sub
pop
inc
jmp
int3
mov
rorl
cmp
or
test
sbb
adc
mov
pusha
dec
xor
mov
jmp
std
cmp
mov
mov
dec
or
cmp
and
scas
pushl
sbb
cld
jbe
hlt
popa
stos
loope
ficomps
lahf
mov
jle
lcall
adc
xchg
xor
push
lods
mov
out
scas
xchg
cs
mov
call
ja
out
popa
mov
stos
cmp
enter
fucom
xchg
jns
mov
outsl
leave
fildll
sbb
decl
inc
jl
mov
xchg
iret
inc
out
push
jle
sub
push
inc
insb
popa
xchg
test
push
mov
sub
mov
adc
sub
js
mov
jmp
adc
call
push
or
fnstenv
sub
fistpl
mov
movsl
jmp
in
dec
icebp
xchg
push
jecxz
icebp
push
mov
pushf
dec
nop
in
jge
int
push
jmp
pop
push
mov
loop
push
fiaddl
or
dec
xchg
and
data16
jb
pushl
push
leave
push
sub
aad
or
mov
xor
push
cmpsb
jae
mov
pushl
ja
out
sbb
mov
pop
and
mov
mov
stc
sbb
mov
inc
and
xchg
aas
push
out
std
sbb
in
and
xor
pop
loope
decl
xor
or
test
aad
rorb
ret
mov
pushl
or
inc
movsb
sbb
cmp
cli
sbb
xor
das
mov
pop
movsl
enter
and
jmp
inc
add
mov
pop
mov
jp
mov
inc
enter
pushl
mov
stos
subl
mov
stc
push
jl
push
xchg
jae
das
sub
out
cs
ljmp
adc
lahf
movsb
jecxz
imul
push
pop
comiss
jne
jg
sub
inc
pop
ret
decl
clc
and
cmpl
and
adc
mov
add
sub
scas
xor
lcall
testb
dec
gs
xchg
cs
scas
pop
movsl
movsl
mov
outsl
mov
push
xchg
xchg
cmc
add
xlat
mov
dec
cld
fcoml
imul
call
push
les
pushf
out
repz
jbe
add
pushf
push
out
imul
incl
push
sbb
mov
sub
jno
jb
or
mov
icebp
push
inc
xor
inc
push
pop
cmp
sbb
inc
insb
ror
pop
dec
adc
push
push
cmp
mov
fisubrs
push
jp
outsl
or
ds
pop
xchg
inc
das
mov
sbb
mov
leave
mov
lea
jp
mov
fadd
xchg
adc
jg
fmull
cmpl
add
push
xor
sbb
js
incl
mov
movsl
pop
mov
push
insb
ja
cmp
gs
add
mov
pop
mov
push
mov
mov
lods
sub
call
xchg
mov
cmp
xchg
dec
arpl
data16
imul
or
mov
movl
pop
mov
loop
mov
mov
dec
and
sbb
xor
inc
inc
add
fisttpll
fdivr
pop
adc
sbb
pop
jmp
lods
lcall
fisubl
rolb
aas
aad
fbld
inc
mov
ret
mov
nop
repz
repz
leave
in
insl
call
dec
mov
cmc
insb
add
jmp
ror
xor
int
push
loop
inc
push
jns
loopne
and
mov
mov
imull
jmp
cmpsb
call
or
sub
std
and
in
jp
add
fdivrs
sbb
hlt
sbb
mov
add
out
outsb
sub
mov
inc
fnsave
push
loope
icebp
push
inc
pusha
mov
mov
push
test
dec
jae
sbb
sti
insb
push
sbb
lcall
cmp
jmp
das
pop
jmp
xor
sti
out
fbld
xchg
jmp
test
test
pop
pavgw
fdivr
cltd
mov
sub
jns
call
dec
lods
mov
leave
mov
sub
mov
arpl
jp
adc
push
push
call
adc
ret
scas
and
or
cmpsl
repz
adc
shld
fdivrp
push
jle
xor
arpl
pop
dec
sub
js
lret
loop
pusha
add
cmp
std
xlat
pushl
pop
cwtl
test
dec
xchg
mov
xchg
rclb
call
pop
es
icebp
scas
push
cmp
fdivr
ficoms
xchg
out
push
in
mov
roll
jmp
pop
pop
fadds
inc
mov
pop
mov
ljmp
repnz
or
test
xlat
adc
pusha
addr16
imul
dec
add
inc
xchg
mov
rorb
and
decl
push
mov
cs
sbb
pop
cli
mov
xor
bound
es
jmp
decl
adc
sub
shrl
pusha
jg
or
jns
jno
jmp
fsubs
imul
jg
mov
int3
mov
and
dec
jl
pop
loope,pn
cmp
xchg
mov
sbbb
mov
decl
dec
mov
js
xchg
xchg
aad
insl
mov
int3
mov
loopne
pop
mov
mov
mov
call
sarb
aaa
xor
adc
push
shlb
pop
enter
push
cmpsb
gs
sbb
add
shlb
mov
iret
pop
test
aas
pop
inc
jnp
add
insb
sbb
inc
cmc
ljmp
cs
jns
enter
js
mulb
xchg
dec
add
ss
aad
pop
mov
cli
lret
pushl
or
dec
jmp
aad
rorl
xor
ret
pop
test
push
lret
fsub
xor
lock
in
insb
xor
jmp
cmp
sub
addr16
fmull
xchg
xchg
addr16
add
lea
lret
mov
test
jg
lret
jmp
xchg
pop
adc
add
inc
cmp
test
jge
popa
rcrl
mov
incl
test
xchg
popf
into
jne
inc
pop
cld
mov
test
fildll
pop
lods
adc
rclb
loope
ljmp
mull
ljmp
adc
ret
or
inc
sub
and
mov
mov
sar
push
or
inc
inc
mov
je
mov
adc
stos
sub
aaa
mov
jge
std
inc
lds
jo
int3
or
sub
test
incl
in
hlt
jl
sub
mov
pop
loope
popf
inc
pop
cmc
lret
icebp
lods
mov
aam
gs
mov
dec
fs
outsl
into
and
push
jnp
dec
sti
test
adc
aaa
dec
rorb
data16
cmp
rcll
push
fimuls
fcompl
push
add
and
cs
js
shr
dec
pop
sub
jmp
dec
data16
add
dec
jge
inc
mov
cwtl
inc
inc
loop
ficoml
das
pop
movsb
sar
jmp
sti
pop
in
sbb
xor
popf
jnp
sbb
pop
dec
push
push
xor
clc
call
outsb
mov
cwtl
mov
imul
nop
fstpt
in
fs
jno
adcb
inc
inc
mov
scas
lea
xchg
xor
cmp
and
aaa
inc
jge
fs
xor
ljmp
mov
cmp
mov
cmp
stc
testl
xchg
sub
lcall
jp
adc
aaa
lret
int3
add
jle
cwtl
xor
mov
add
or
clc
jl
aam
mov
push
pop
mov
in
cmpsb
lds
rclb
sbb
iret
pushl
pop
inc
rolb
mov
aam
cmpsl
sub
sub
out
xchg
incl
and
outsb
cmpsb
xor
fisubrl
test
push
outsb
aaa
jno
inc
sub
scas
pop
enter
xlat
xor
push
xsha256
cmpsb
les
in
in
pop
pop
pop
insl
mov
mov
cmpl
clc
add
sbb
out
orb
push
mov
jl
dec
loope
mov
call
aaa
add
xor
or
fildl
cmp
jno
rol
insl
push
out
push
push
inc
in
and
pop
outsb
jnp
xchg
xchg
mov
pop
xchg
pop
fistpl
std
and
cmp
sbb
decl
xchg
pop
lahf
lods
xchg
pop
mov
lock
rorb
or
sub
lods
outsl
mov
xchg
push
sub
ret
xor
test
mov
or
test
aas
mov
jmp
stos
bound
jmp
mov
mov
dec
sbb
or
jmp
call
add
fisubs
push
ret
stos
data16
pop
insb
clc
inc
sti
or
stos
fisubrl
jmp
mov
sub
outsb
les
xor
rcrb
fs
mov
jmp
imul
cmp
xchg
mov
cmp
or
cltd
dec
xchg
mov
push
jg
call
push
xchg
into
sti
cmpsl
xchg
test
jns
dec
stos
js
fdivrs
lret
jmp
out
inc
push
pushl
mov
xchg
mov
pop
dec
movsl
push
leave
dec
inc
lahf
jl
adc
decb
sub
mov
mov
xchg
icebp
cmp
test
mov
decl
jo
sub
lret
enter
jecxz
xor
jo
std
test
in
dec
jp
and
aaa
das
and
ljmp
sbb
mov
sub
test
movsl
imul
sub
lcall
jno
mov
cmp
stos
lret
in
ret
js
mul
out
cmc
out
shll
bound
jecxz
outsl
push
jecxz
pushl
pop
or
imul
inc
lea
mov
div
in
dec
xor
mov
incl
cltd
movsl
fdivrl
int
ljmp
push
pop
mov
aaa
pop
jp
xchg
jmp
push
sbb
jbe
adc
mov
jo
xchg
jecxz
mov
inc
je
lcall
dec
adc
cwtl
int
sub
cli
cmp
cld
mov
jl
cli
cmc
cwtl
pushl
jl
or
aad
in
dec
pop
dec
mov
fmuls
movsb
nop
iret
adc
jnp
movsb
incl
ja
in
lock
clc
daa
cmp
mov
loope
stc
xor
bound
cmp
pushl
out
test
push
std
sub
dec
inc
mov
mov
cmp
clc
sub
icebp
lahf
dec
push
sarb
cmpsb
stos
rdtsc
mov
aas
icebp
shlb
xor
ljmp
jo
push
inc
mov
rolb
xchg
nop
sub
lret
sub
pop
jp
in
mov
js
movsb
ret
rol
iret
push
xchg
fimull
mov
repnz
rcrb
pop
mov
sar
out
or
rolb
fidivrs
xor
inc
mov
hlt
jnp
and
iret
outsb
int
cs
pushl
imull
sahf
nop
mov
and
pop
jne
push
add
mov
xor
aas
or
and
shrl
push
std
inc
fcos
mov
sub
adc
sub
test
lcall
pushf
xor
into
popa
mov
sbb
cmp
movsb
lea
pop
aaa
sub
loope
xchg
xor
ja
incl
or
fwait
sbb
mov
inc
push
fistps
inc
and
incl
xlat
sub
mov
xchg
jns
pop
xchg
or
xchg
jae
fidivrl
sar
call
pusha
imul
in
leave
sub
and
adc
push
pop
and
jbe
xor
decl
jge
cli
int
repz
push
dec
je
fnstsw
jo
jmp
pop
in
or
aas
outsl
pop
xor
stos
jge
add
int3
xchg
add
dec
lahf
fwait
push
mov
fldl
xor
and
fucomip
out
ljmp
push
xchg
xchg
pop
mov
xchg
stos
fnstsw
jne
jbe
int
push
sbb
jae
or
js
pop
stos
cld
call
dec
sub
jl
xchg
cli
pop
sub
and
je
and
in
cvtpi2ps
add
lcall
push
cwtl
sti
mov
push
jl
leave
adc
out
jmp
popa
adc
or
pushl
stc
inc
xchg
sbb
push
mov
or
mov
or
pop
mov
sub
bound
call
pop
adc
push
loope
and
sub
sahf
mov
cmp
stc
xchg
and
and
jmp
lret
test
jae
les
fs
mov
popl
daa
data16
out
fcoml
aaa
rcrl
push
mov
rolb
adc
js
add
push
cmp
shll
aas
mov
lret
loop
xor
add
movsb
test
inc
mov
inc
orb
fsubr
jmp
sti
sbb
mov
out
test
sbb
pop
sub
push
jo
fisubrl
stos
leave
mov
pushl
ds
lahf
lea
mov
sub
in
stos
pop
shrl
adcl
in
ds
cli
repnz
imul
call
jne
xchg
xor
cmp
adc
push
xor
mov
jnp
mov
mov
call
subb
jl
push
insl
push
insl
in
push
inc
jns
mov
sub
jnp
into
dec
sub
sub
incl
xchg
fs
aad
dec
pop
dec
lret
jae
mov
jecxz
sub
add
mov
idiv
jp
jbe
fldcw
mov
pop
popf
cld
movsl
inc
xor
out
test
jns
push
lock
cltd
push
sub
cmp
fwait
add
mov
jp
jle
aas
mov
in
add
jnp
inc
sti
jl
and
dec
fnstsw
or
jnp
and
aam
fadds
push
sub
movntps
xor
daa
shrb
jp
aas
jmp
mov
mov
outsl
ror
or
push
xchg
inc
stos
fdivs
inc
stos
mov
sub
mov
cmp
sbb
cs
adc
nop
paddd
nop
nop
cmp
loope
sbb
pushf
decl
ss
mov
push
sahf
std
ret
inc
mov
xor
int
push
stos
xor
add
mov
incl
jns
ljmp
xchg
xchg
mov
adc
scas
or
daa
jns
pushf
lcall
int3
imul
add
xchg
icebp
or
push
and
fstpt
fdivrl
push
xchg
imulb
orb
pushl
arpl
lea
vshufps
inc
cwtl
ljmp
xchg
push
daa
popf
mov
out
xchg
cmp
outsl
test
dec
mov
mov
mov
loop
jge
call
push
sub
dec
stos
inc
push
js
aaa
push
scas
or
and
ss
jnp
inc
js
in
or
imul
out
fs
loop
add
js
jle
mov
push
xor
xchg
rorb
lock
or
lcall
fstps
pop
pop
mov
loopne
xchg
cmp
je
sub
jp
mov
dec
call
aam
fwait
mov
xchg
dec
sub
movl
loop
mov
ljmp
fnstsw
imul
mov
add
or
adc
out
mov
decl
mov
arpl
jecxz
rcr
in
adc
inc
mov
in
sub
inc
insl
add
xchg
fbld
insb
jecxz
shrb
xchg
fucomp
es
mov
es
pushl
js
imulb
pusha
lahf
push
inc
and
or
adc
xor
ret
decl
mov
movsl
stc
push
aaa
call
fdivs
mov
jp
loope
fldenv
pop
call
xchg
movsb
pop
shl
sub
add
pop
fisttpll
sbb
jp
enter
push
xor
xor
pop
movsl
cmc
aam
fistpll
fcomps
sub
sub
sbb
mov
incl
icebp
push
fbstp
pop
inc
lds
outsb
push
in
mov
push
out
push
jne
mov
std
test
mov
cmp
xchg
push
adc
int
mov
mov
cmp
lret
mov
popf
ljmp
pop
mov
and
sub
jle
insb
cmp
or
decl
or
push
ss
je
xor
sbb
mov
imul
incl
dec
mov
bound
outsl
cmp
lcall
inc
mov
fidivl
push
sahf
cmp
adc
jp
in
das
and
or
aad
mov
aas
push
push
aas
push
sub
mov
incl
fisubrs
out
sub
pop
ss
inc
dec
mov
ja
ret
or
mov
lcall
jbe
test
fnstsw
and
push
or
push
popf
mov
mov
shlb
jb
rorl
mov
decl
fbld
roll
mov
jmp
lahf
cld
rol
enter
ret
lret
ljmp
test
stc
aam
xchg
xchg
add
out
daa
xchg
mov
nop
clc
rclb
jmp
sbbb
jg
out
out
dec
call
dec
xchg
pop
shld
xor
mov
addr16
dec
dec
imul
xor
shll
int
pop
push
and
xchg
movsl
inc
rorb
dec
pop
adc
pop
inc
aaa
adc
out
fists
mov
dec
lcall
shrl
scas
cwtl
add
or
pop
mov
xchg
adc
adc
ljmp
and
jp
fmuls
pop
lret
mov
lods
cmc
dec
push
in
pop
mov
sub
enter
decl
pop
das
sti
pop
pop
push
mov
fimuls
mov
roll
test
add
jmp
insl
sbb
iret
fwait
adc
cmp
mov
mov
enter
out
or
and
test
ljmp
int
push
iret
sub
andb
in
ljmp
xor
add
jl
jmp
cwtl
cmp
das
add
pop
fabs
fldenv
inc
jbe
repz
rcl
push
mov
push
sahf
mov
push
js
jne
insl
cmp
dec
movsb
repz
out
aas
cmp
hlt
adc
imul
out
imul
push
mov
nop
outsb
adc
cmp
decl
jecxz
fcmovbe
mov
jne
fcomps
adc
lahf
pushf
lahf
ja
pop
sub
movsl
decl
cmp
adc
sti
loopne
mov
add
cmp
pushf
cltd
add
mov
decl
dec
dec
dec
mov
dec
decb
out
hlt
push
fidivrs
pop
dec
pop
lret
aam
sar
jns
add
or
mov
mulw
jge
mov
add
shll
dec
mov
incl
lea
out
imul
hlt
push
push
fs
and
addr16
mov
das
pushl
mov
xchg
and
lock
fadds
xchg
mov
rolb
inc
inc
fldcw
ljmp
andb
dec
ret
aaa
adc
xchg
inc
cmp
sub
stos
push
inc
fists
test
push
jmp
and
mov
xchg
sbb
mov
test
jg
in
cmc
frstor
jmp
lea
push
jmp
test
or
ljmp
cwtl
xchg
mov
and
sbb
cmp
sub
mov
shlb
clc
jne
out
data16
xchg
mov
push
scas
push
add
fst
enter
inc
mov
and
scas
call
pop
xchg
cmc
andl
call
pusha
leave
in
dec
rol
out
gs
lock
fsubrs
xchg
in
xlat
imul
jmp
jp
aad
add
fiaddl
mov
loop
jo
jle
xchg
loopne
mov
mov
mov
cmp
call
mov
add
inc
pop
fs
sbb
and
xor
mov
sti
add
lcall
call
scas
rol
test
xchg
jge
movsl
loopne
jbe
add
fisubrs
ljmp
popf
dec
push
fisttpl
inc
addb
inc
cld
pop
fistpll
insb
fisttps
adc
ljmp
push
jne
popf
xor
cmpl
add
xchg
popf
add
incl
push
or
pop
gs
or
mov
jae
dec
fldln2
xorb
call
ds
ljmp
cmc
ss
mulb
lcall
call
jmp
cld
mov
dec
inc
sub
daa
neg
cmp
test
cli
mov
push
dec
sub
and
arpl
inc
xchg
in
adc
jne
aas
fldl2t
scas
daa
xor
pushl
fisttpl
xchg
inc
cmpsl
xor
cmc
mov
js
outsb
in
push
sub
popa
testb
pushl
add
add
repz
pop
mov
lock
ffree
int3
loopne,pn
jmp
call
fs
sbb
or
mov
cmp
lock
mov
decl
scas
mov
aas
or
cli
mov
sub
xor
push
aad
adc
outsl
push
dec
or
xchg
lret
push
push
fcmovnbe
jg
and
shrb
mov
ret
sbb
cmp
push
jmp
add
or
and
mov
stos
push
pushf
add
icebp
daa
test
aas
jmp
popf
mov
in
cld
test
sti
mov
push
negl
dec
mov
jmp
rcl
adc
fcmovne
pop
adc
jge
popf
shrb
es
mov
mov
and
bound
sbb
int3
inc
fnstenv
add
pop
cld
jno
xor
jns
in
mov
add
ret
ljmp
data16
sti
add
dec
xlat
inc
lock
movsl
jae
mov
popf
cmp
add
pop
pusha
imul
in
call
ret
jns
or
pop
dec
mov
xchg
xchg
dec
les
cld
sub
dec
daa
lahf
test
mov
pop
push
sub
xchg
adc
sbb
daa
inc
xchg
push
arpl
test
decl
pop
mov
xor
add
add
jo
pop
xchg
pusha
or
jp
sub
jmp
inc
call
mov
and
fbstp
or
xchg
mov
aam
or
jae
jmp
scas
mov
mov
sbb
jp
lcall
out
push
ds
fistps
insb
decl
push
ss
push
inc
mov
fsub
ret
pop
icebp
sub
incl
mov
int
jg
sub
cmpsb
jg
or
loope
sahf
into
loopne
mov
movsb
cmp
sbb
mov
cmp
add
pushw
ss
cli
jl
sbb
shlb
dec
loop
jecxz
movsb
cmp
mov
xchg
xchg
in
jno
dec
icebp
push
scas
movsl
stos
imul
mov
test
cli
dec
fidivl
and
fadds
out
and
loopne
imul
jns
jnp
pushf
es
cmp
lcall
push
cmp
inc
sbb
mov
daa
data16
lahf
sub
fwait
lods
in
mov
popf
decb
and
shlb
loop
jne
xchg
xchg
test
sbb
insb
mov
orb
outsl
and
ljmp
hlt
addr16
aas
or
mov
add
jno
iret
dec
adc
mov
cld
fstpt
jmp
stos
inc
packuswb
sti
lds
call
aas
lcall
mov
call
fwait
insl
cmpl
and
or
lahf
cli
xor
xchg
jo
cld
mov
inc
out
call
daa
mov
sbbb
aam
or
sahf
mov
mov
ficomps
jmp
sbb
pop
pop
push
push
jp
xchg
ret
testb
pusha
je
fstl
popf
scas
adcl
lock
push
scas
in
js
imull
lock
cmpl
loope
pusha
pusha
inc
dec
mov
addr16
pop
jp
mov
mov
cld
xor
and
imul
dec
mov
cmp
movsl
sarb
or
add
rclb
bound
and
mov
incl
pusha
cmp
push
out
out
jbe
shlb
push
repz
xor
mov
pushl
xor
dec
clc
xchg
fbstp
movsl
add
sbb
fidivrs
and
lret
aad
addb
incl
insb
loop
mov
in
jecxz
or
addl
test
repnz
loopne
jo
sar
fsubr
iret
leave
mov
icebp
push
mov
mov
and
or
imul
call
jno
xorb
xlat
mov
popa
loopne
popa
cmp
in
mov
out
inc
pop
insb
dec
or
mov
in
jp
lock
and
dec
mov
mov
mov
jmp
cmp
dec
sbb
mov
lods
rolb
arpl
mov
lds
subb
inc
jecxz
mov
shlb
or
hlt
xchg
cmpsb
fwait
sub
idivl
add
push
pop
jne
dec
mov
inc
push
sbb
into
aaa
outsl
loop
clc
add
into
testb
call
mov
lods
loope
lret
jnp
push
cld
cmp
dec
dec
imul
inc
cmpsb
dec
sbb
xchg
ds
rcrb
lcall
cmp
lret
push
sbb
loop
or
notl
jbe
and
hlt
xchg
add
call
jl
popl
push
out
movb
cmp
mov
fcomps
mov
add
add
adc
jae
jg
push
imulb
xor
cmpsb
insb
inc
cmpsl
call
clc
jne
add
in
into
add
decl
lcall
and
sti
fstp
nop
mov
lcall
xor
lret
int3
shrb
add
popa
dec
pusha
mov
lods
and
fisttpl
mov
dec
inc
xor
mov
and
xchg
sti
sub
aas
ja
in
xor
pop
out
loopne
icebp
aas
push
or
lods
push
mov
fdivs
and
inc
mov
push
jmp
adc
jmp
push
data16
push
jmp
aad
jbe
fisttpll
outsl
inc
xlat
xchg
mov
jg
repz
inc
jmp
push
pushl
sub
mov
lods
and
jmp
xor
and
pop
push
mov
js
jmp
ret
out
xlat
jne
ss
aaa
aam
mov
lock
clc
xlat
call
ljmp
mov
xlat
jae
jg
cmp
adc
mov
and
clc
jmp
mov
decl
sahf
pop
adc
mov
inc
mov
mov
out
rorb
pushf
cmp
dec
notl
movsb
mov
cli
stos
mov
cmp
aad
ja
icebp
push
insl
dec
xorb
test
vaddsd
dec
das
mov
cld
xor
lahf
inc
ret
fs
mov
jg
and
mov
or
lods
decl
add
cmpsb
push
sbb
adc
inc
mov
stos
sti
test
sbb
iret
fidivrl
stos
xor
lds
scas
lods
inc
jno
or
inc
call
pop
xchg
cld
push
cmp
lcall
mov
jno
pop
aam
aas
cmp
mov
lahf
inc
test
ss
lds
jne
push
aad
jbe
pop
out
mov
pop
pushw
inc
aad
add
and
mov
scas
cltd
insl
cmc
in
jg
jmp
icebp
cmp
movsb
mov
jae
pop
pop
mov
xor
lea
loop
ret
test
incl
dec
mov
arpl
lds
in
dec
clc
jne
and
repz
adc
fnstenv
lods
inc
inc
mov
call
and
inc
sbb
ror
bswap
mov
std
sbb
xchg
adc
sub
xchg
mov
fdivr
incl
dec
inc
aad
xchg
mov
outsb
or
lods
leave
jg
xlat
mov
fsubrl
jmp
mov
sbb
in
jg
das
jns
push
mov
dec
mov
loopne
ljmp
xchg
aam
xchg
shr
sbb
aad
incl
mov
dec
cmpsb
sub
imul
mov
cli
mov
cmp
into
mov
es
stos
fisttpll
or
mov
add
mov
dec
fsubl
mov
jno
or
call
addr16
mov
mov
push
aad
ja
xchg
fldt
nop
add
loopne
cs
lods
idivb
decl
and
repnz
sbb
in
lea
fcoms
stos
pop
roll
mov
shlb
lcall
je
xor
jmp
scas
inc
int3
pop
jno
push
repnz
or
add
dec
jmp
maskmovq
testl
pop
jb
xchg
fwait
push
xchg
inc
inc
mov
sbb
das
movsl
or
or
hlt
data16
jmp
cmp
cli
jae
in
jns
sbb
mov
jne
xorb
dec
xchg
jp
pop
cmpsb
or
outsb
je
mov
jo
xchg
push
jnp
or
xchg
test
cmp
xor
inc
pushf
loope
out
cmp
add
mov
ret
add
xchg
test
icebp
icebp
xchg
mov
mov
fisubl
rcrl
pop
adc
ljmp
out
lds
push
mov
jns
daa
sbb
jbe
frstor
pop
mov
mulb
dec
mov
mov
out
pop
out
jne
mov
sub
addl
sbb
mov
push
inc
pop
or
mov
lds
dec
pushf
jns
push
add
add
inc
je
sub
sub
push
push
jnp
imul
mov
sti
leave
aaa
push
sbb
daa
decl
out
and
das
xchg
cmpsb
mov
ljmp
jmp
jae
cli
fsubrs
mov
mov
xchg
call
sbb
repz
icebp
pop
or
out
loope
inc
cmp
push
test
sbb
jmp
pop
addr16
push
jmp
sbb
mov
popf
stos
pop
out
fld1
clc
fstp
mov
sbb
mov
decl
dec
xor
int
fdivs
cmp
nop
jp
out
mov
test
cli
cmpb
jmp
cmp
fsubl
cmp
sub
shl
xor
cmpsl
pushf
lock
insl
inc
pushl
jae
push
mov
push
clc
nop
outsl
inc
pop
and
xchg
addr16
call
std
je
incl
int3
test
push
pop
mov
or
pusha
jg
inc
popw
jg
or
jmp
inc
call
popa
pushf
dec
repz
jle
lahf
jp
lea
pusha
das
movsb
push
cmp
xchg
jp
mov
dec
mov
cmpsb
and
mov
idivl
fnclex
sub
cmpsb
and
js
stos
insl
fsts
dec
add
nop
pop
fwait
dec
pop
paddd
pop
push
popf
pop
cmp
jl
mov
addr16
dec
stos
idiv
xlat
out
xor
lcall
pop
das
cmpsb
jbe
movsl
mov
repnz
scas
sub
test
push
sbb
xchg
or
xlat
call
xor
cmp
imul
int
and
nop
mov
mov
mov
lcall
add
aaa
pop
nop
int3
xchg
sbb
cmp
add
movsl
inc
adc
xchg
sub
sbb
repnz
jbe
inc
stos
in
xchg
je
movl
push
adc
add
mov
mov
js
insb
imul
dec
mov
sti
ret
xor
lock
jnp
adc
enter
idiv
insl
shrb
cmp
cmp
cmp
icebp
xchg
pushl
outsl
and
jle
ror
imul
sbb
inc
jo
pop
pushf
add
rorb
jmp
pop
mov
jo
jo
push
ja
test
stc
aad
js
inc
push
sarl
test
imul
ljmp
mov
fcmovbe
or
mov
leave
dec
inc
in
fs
adc
inc
imul
clc
ljmp
aam
adc
pop
pop
fcomps
jle
popa
das
scas
push
xor
pop
add
mov
out
ljmp
in
xor
jns
mov
sbb
pop
mov
add
fst
ss
jmp
push
repnz
jb
xchg
or
pop
push
fsubr
mov
cmp
or
jmp
test
rcr
ss
fildl
adc
cmpsl
fmull
daa
fisttpl
pop
mov
pushl
out
inc
jae
or
outsl
pushf
in
and
cmp
push
insb
rorl
add
decl
fsubrs
out
xchg
insl
pop
mov
mov
dec
bound
adc
sub
mov
ljmp
out
xchg
repz
je
sub
sbb
push
clc
pop
mov
push
lcall
jo
hlt
push
inc
mov
jle
out
mov
push
mov
pop
sub
jge
mov
dec
data16
out
jne
jnp
fdivrs
in
or
and
inc
cwtl
movsl
xchg
insl
fistpll
inc
fldcw
cwtl
xchg
jno
in
loop
add
sahf
xor
call
dec
inc
repz
dec
incl
add
insl
push
sub
inc
cltd
pop
and
mov
rcrb
pop
in
mov
dec
push
orl
js
push
daa
sbb
mov
js
leave
dec
fdivrl
imul
mov
imul
decl
jno
jmp
shll
rcrl
outsb
shll
in
sub
icebp
push
mov
or
jb
sub
call
adc
aad
cmp
add
jne
push
pop
push
icebp
mov
jmp
xor
jbe
dec
adc
aad
aas
cmpsl
int
sub
xor
stos
filds
rorl
shr
pop
push
sbb
and
cmp
push
es
cli
out
int
int
shlb
std
mov
mov
repz
dec
nop
les
fucom
or
pop
and
sub
jl
cld
pop
clc
push
test
pop
ljmp
sub
add
shrb
pop
outsl
sbb
dec
mov
cwtl
add
lds
fistpl
es
push
pushf
pop
xor
outsb
arpl
int
out
into
int
push
aam
jge
incl
jne
cmp
shrb
push
loopne
inc
icebp
test
std
int
les
decl
mov
ret
arpl
mov
pop
jns
mov
mov
addr16
fstl
jnp
mov
xchg
out
pop
sbb
dec
pushf
jno
rcrb
cmp
or
lcall
and
sti
scas
lret
arpl
lcall
pop
int
pop
cmpsb
adc
push
stos
mov
sti
jg
lods
in
mov
mov
out
inc
and
or
imul
cli
dec
cwtl
mov
sub
mov
mov
movsb
sahf
push
dec
pop
xor
mov
mov
std
fistpll
pop
fsubrs
loop
shrb
ret
andl
test
jns
stos
or
xor
and
into
int
outsl
push
out
pop
outsb
ja
repnz
pop
xchg
out
push
jg
lds
fcoml
and
mov
sbb
aad
cmc
ret
jl
inc
xor
sbb
adc
incl
shrb
js
lret
lock
or
fistpl
mov
mov
repnz
mov
push
pop
adc
pop
nop
mov
push
mov
mov
jmp
incl
inc
pop
jbe
ret
bound
hlt
cmp
add
pusha
lret
test
mov
dec
inc
jg
test
push
sub
mov
sbbb
mov
jp
jmp
mov
lcall
bound
jb
fisttpl
sub
push
mov
sbb
sbb
jmp
out
pusha
int3
or
xor
jno
movsb
add
sub
mov
aad
movsl
lods
mov
pop
sahf
inc
inc
call
aas
push
aaa
mov
pop
fsubrs
out
mov
cmp
hlt
inc
stc
out
add
mov
inc
movsl
mov
pop
xor
adc
mov
int
mov
fstps
je
jp
mov
popl
pop
add
call
fwait
ret
inc
rorl
mov
push
cmpsb
jnp
add
test
mov
inc
sub
decl
aam
push
add
cmc
int3
xorl
pop
cltd
dec
gs
cld
mov
inc
mov
and
sub
xor
loopne
test
xchg
sbb
ret
push
inc
pop
cmp
sbb
jmp
call
ljmp
stc
ds
xor
stos
mov
xor
stc
mov
jge
jmp
fwait
std
add
stos
dec
call
xor
xor
scas
xchg
movsb
mov
decl
mov
mov
mov
inc
mov
fidivrs
pop
in
jmp
stc
jae
inc
push
lcall
mov
mov
aam
cli
imul
adc
cmpsl
jecxz
in
xchg
dec
sarl
jmp
call
outsb
dec
xchg
movsl
stc
xor
out
scas
xor
and
pop
jnp
adc
jmp
inc
cltd
mov
loope
xchg
pop
or
xor
mov
jle
or
jmp
dec
inc
imul
inc
aam
daa
jo
and
xor
in
shrl
ljmp
lahf
daa
out
orb
test
int
stc
mov
pop
mov
mov
xchg
out
adc
popf
push
mov
xor
call
fsub
ja
daa
jle
cltd
fdivl
fdivrp
incl
push
inc
xor
ss
xor
adc
cld
aas
into
cmp
imul
ljmp
jnp
inc
dec
clc
lret
das
or
lock
repnz
or
outsb
or
jle
add
xor
out
xchg
test
lock
jo
in
mov
cmp
cs
jmp
mov
enter
xchg
push
or
lods
cmpb
cld
ret
mov
fnstcw
call
push
mov
rclb
dec
jnp
inc
add
dec
xlat
imul
gs
and
clc
push
mov
add
popf
add
dec
frndint
inc
add
dec
sahf
sti
xor
je
jg
call
fwait
loop
sbb
sbb
mov
inc
mov
les
and
pusha
xchg
dec
insb
sbb
pushl
add
xor
and
out
pop
xchg
cmp
fistps
pushl
mov
push
andb
xchg
jg
or
pop
cmpsl
pop
adc
mov
jle
incl
pop
fwait
dec
out
xchg
xchg
jnp
push
jmp
fucompp
mov
cmpsl
push
decl
popa
pusha
mov
mov
imul
es
jne
fdivs
xchg
gs
enter
stc
sahf
incl
nop
xor
xchg
lret
out
pop
jns
lods
and
shrl
jno
lret
call
pop
cwtl
sbb
movsb
cmp
sub
cmp
sub
and
call
outsl
repnz
fldl
fstpl
pop
out
push
sbb
stos
add
out
sbb
imul
lods
jno
ds
test
adc
sti
addr16
les
mov
push
pop
mov
in
lret
decl
push
pop
pop
inc
jg
mov
jb
daa
mov
arpl
dec
ret
cwtl
lret
mov
xor
incl
dec
push
push
andl
and
pushf
lsl
ret
xchg
xchg
sub
dec
or
cmp
rclb
xor
pop
ds
sahf
mov
test
cmp
or
pushl
mov
inc
aaa
push
je
lock
xchg
ljmp
aaa
and
pushl
add
mov
or
adcl
mov
lcall
stos
popa
hlt
xchg
es
dec
dec
cli
shrl
imul
xchg
cmp
aad
dec
lea
incl
add
mov
dec
and
jge
mov
js
pop
mov
mov
xchg
and
or
lret
roll
xchg
sub
or
sbb
cmpsb
data16
xorb
test
int3
aad
lret
aam
arpl
insb
or
pavgb
out
fcomps
inc
sub
mov
decl
out
dec
test
in
and
xchg
xchg
push
cmc
dec
jbe
inc
lcall
dec
xor
sub
repz
cmp
adc
out
and
sti
rorl
sub
pop
cltd
add
push
mov
ret
das
gs
fdivs
sbb
dec
cmp
push
ret
inc
cmc
and
push
xchg
dec
and
outsb
mov
notb
mov
lcall
push
test
and
mov
in
rclb
pop
subl
adc
aam
sub
js
mov
or
int
daa
aaa
sub
ja
test
flds
test
loope
xchg
incl
in
xchg
ljmp
in
lods
stos
mov
mov
mov
and
push
jmp
push
jmp
cltd
sbb
movb
pop
subb
imull
and
xor
xor
xchg
ljmp
sti
mov
push
mov
jp
xor
add
dec
mov
pop
call
and
xchg
cltd
repnz
xor
sbb
adc
lock
decl
bound
cmp
lea
call
popf
cmp
push
jmp
dec
in
cmpsb
jae
xor
decl
insl
jge
push
xchg
mov
push
shll
add
jmp
dec
inc
in
lcall
in
je
jge
pop
sub
mov
lret
add
decl
lods
jb
ficoml
insl
cmc
mov
subb
popa
and
ljmp
adc
pop
push
mov
sub
sbb
sbb
addr16
dec
popa
xchg
inc
mov
cmp
loop
pop
pop
rcrl
cmp
test
decl
sub
icebp
or
and
int
push
jmp
jo
int3
pop
ljmp
sar
jmp
dec
jmp
fcoml
jae
loopne
add
sbb
jae
add
clc
test
push
mov
jmp
popa
mov
aad
pushf
rcrb
xchg
aaa
dec
lretw
adc
jbe
cmp
adc
adc
jmp
aas
arpl
cwtl
in
adc
fbld
dec
sub
and
popa
in
mov
lock
lods
pushf
fisubrl
xchg
inc
sub
sbb
enter
pop
shlb
test
jmp
out
pop
push
jns
dec
cli
outsb
fsubs
sti
sub
dec
dec
adc
je
dec
or
clc
cli
out
movsb
xor
pop
stos
shrl
inc
mov
scas
hlt
cli
or
test
xor
repz
xchg
lcall
mov
push
pop
sbb
dec
or
sahf
dec
pop
fiaddl
or
xor
ljmp
push
imul
test
jnp
mov
out
adc
call
int3
cmc
pop
cli
aad
lods
cli
ljmp
cmc
mov
sahf
movsl
xor
call
add
and
je
insl
in
shlb
push
negl
repz
call
add
sbb
sti
dec
pop
cmpsb
imul
xor
and
incl
pop
jmp
mov
jg
cwtl
or
inc
cmpsb
and
idivl
pop
jnp
das
out
dec
push
cmp
adc
pop
jno
mov
jle
and
stos
xor
sub
sar
jmp
inc
xchg
adc
cmp
push
mov
ljmp
cmc
pusha
or
pop
jg
pusha
arpl
jmp
jge
push
add
pop
out
mov
inc
jbe
ljmp
aaa
in
push
test
popa
mov
cmp
cmp
and
pop
push
je
pop
cmpsl
ljmp
cmp
or
movsb
fs
adc
loopne
scas
adcl
out
enter
xchg
loope
inc
repnz
xchg
xlat
adc
in
mov
mov
push
pushf
movsl
std
pop
xchg
ljmp
ja
sbb
sbb
sarl
dec
jl
sub
roll
icebp
xor
or
jmp
mov
dec
fdivrl
pop
adc
and
fcos
push
cmpsl
push
dec
test
sahf
mov
ljmp
jp
loop
sarl
push
cmc
movsl
iret
lods
push
inc
cld
cmp
mov
fsubl
mov
repz
jno
or
xor
outsl
mov
jp
pop
out
shlb
mov
movsl
xchg
and
test
inc
cmp
adc
imul
loopne
mov
shlb
lea
mov
ret
popf
xchg
inc
roll
pop
and
xor
jne
ljmp
push
jne
popa
mov
cltd
sbb
cmp
jo
mov
mov
cmp
decl
ljmp
mov
dec
cmp
ljmp
ds
adcb
lcall
sub
sub
stc
mov
in
mov
adc
pushl
and
mov
or
in
test
push
jg
mov
call
shll
fwait
pop
xchg
push
xchg
gs
sub
jmp
cmp
scas
shlb
mov
popa
jmp
enter
sbb
mov
cmpl
rolb
hlt
fstp
and
jg
jbe
mov
jbe
jecxz
inc
lea
subl
popf
fstpt
cmp
cmp
sbb
dec
ds
leave
inc
adc
push
jnp
int
fwait
out
js
and
hlt
jmp
lods
mov
mov
pop
pop
movsl
or
cmp
outsl
and
push
jne
pushl
xor
stos
test
push
das
in
push
xchg
xchg
xor
mov
sbb
aaa
pop
dec
xor
call
push
clc
sbb
inc
adc
loop
inc
call
jne
rcrb
in
jmp
pop
mov
ss
xchg
int
xchg
jmp
out
loop
lods
adc
add
decl
rolb
sbb
cs
inc
lock
dec
nop
xor
mov
pop
pop
call
inc
or
ret
inc
xchg
ret
jmp
sbb
insb
js
sub
or
lcall
and
test
ret
sbb
jmp
dec
xor
push
push
out
push
fwait
sub
or
push
push
das
pop
pop
xchg
in
pop
push
repz
roll
ret
xor
xchg
fldt
push
aad
into
add
enter
mov
push
mov
lret
mov
sub
push
mov
pop
mov
push
mov
ljmp
mov
dec
add
in
adc
dec
sub
and
aas
adcb
mov
incl
aaa
mov
inc
cvtps2pd
or
cmpsb
or
xchg
enter
frstor
in
pop
fisubrs
jmp
daa
inc
mov
add
jle
push
inc
mov
sub
scas
mov
outsl
ja
call
add
jns
inc
xor
xor
pop
test
scas
mov
gs
jmp
mov
adc
add
js
loopne
cmpsl
in
fiaddl
mov
lcall
fstpl
dec
xor
adc
jle
cli
aam
pop
mov
add
in
sti
mov
jo
shl
cmp
stos
mov
sub
insb
shll
daa
ss
pushl
adc
cmp
push
outsl
jmp
push
in
xchg
popa
bound
lcall
call
sbb
in
orl
int
movsb
rcll
push
inc
mov
stos
lret
xchg
add
lcall
mov
lods
mov
les
sub
fcompl
adc
ljmp
ret
rorl
xchg
sub
mov
ja
xor
leave
push
adc
jo
inc
mov
decl
inc
pop
shrb
jmp
jle
xor
xor
and
adc
loope
test
inc
in
and
movd
pop
inc
cwtl
outsl
test
shll
dec
adc
pop
inc
shlb
dec
outsl
lahf
call
nop
movsb
cmp
push
sahf
xor
cmp
sub
ss
data16
adc
roll
ljmp
cmpl
sbb
xchg
cmpsl
sbb
mov
outsb
xchg
add
adcl
ja
xchg
test
out
icebp
ds
outsb
pushf
cmpsl
aas
push
mov
mov
push
sbb
pop
incl
sub
xchg
xchg
ja
shlb
xchg
and
mov
and
lcall
add
push
faddl
and
lahf
push
jno
xchg
jl
add
or
decl
sbb
jne
inc
mov
mov
das
dec
rol
insb
inc
pop
cmpsb
jg
insb
loopne
mov
bound
cmc
mov
test
popf
inc
sbb
repnz
sbb
or
dec
pushl
data16
mov
pop
and
sar
cmpsb
jmp
into
inc
pop
xchg
outsl
fldcw
aam
pushl
add
bound
js
sbb
mov
fs
pushf
jp
adc
outsl
and
daa
inc
mov
mov
push
push
sti
sub
adc
mov
xchg
iret
leave
inc
out
int
mov
mov
int3
inc
repz
and
xchg
sti
or
pop
cli
lods
add
out
in
repnz
sub
fdiv
inc
lret
fiadds
cld
xor
sub
lods
cmpsb
sub
lcall
daa
dec
sub
in
cmp
jae
movsl
lods
lret
jmp
xor
les
pop
jbe
xor
jmp
popf
sbb
inc
inc
lods
hlt
fs
push
and
iret
aas
in
add
jmp
cltd
adc
hlt
pop
popf
pop
pushf
mov
cmp
loopne
sub
xchg
jne
ljmp
inc
cmpsl
xchg
lods
pushf
repnz
and
pop
cwtl
daa
mov
aam
cmpsl
in
xchg
push
cli
or
in
inc
dec
out
jo
or
adc
rorl
dec
cmp
push
cmp
inc
pop
je
aaa
jnp
sarb
lcall
lock
shlb
dec
es
xchg
jae
dec
cmp
cmp
popf
into
push
mov
ds
sti
ret
repnz
je
push
adc
add
xchg
cwtl
shll
decl
jmp
fidivl
pop
and
sbb
jg
loop
dec
push
jmp
decl
pop
xorl
fsts
lahf
loopne
mov
xor
inc
stos
in
cld
cmp
dec
sub
addr16
fmuls
and
adcb
inc
pop
lcall
adcl
pushf
sbb
test
lcall
stc
dec
ljmp
ds
adc
btr
stc
mov
sbbl
or
out
fsts
xor
lcall
stos
dec
mov
xlat
pop
jl
frstor
push
in
xchg
das
shl
xchg
jb
adc
push
xor
mov
repnz
lcall
out
movsl
outsl
in
inc
ds
rol
mov
test
shrb
sub
sub
sar
incl
subb
xor
gs
pusha
xchg
push
popf
aam
inc
fwait
jae
jb
lcall
int
cmp
pop
push
lret
mov
pop
movsl
adc
mov
outsl
push
push
out
mov
jmp
faddl
mov
aad
xchg
lods
ficoms
push
sbb
inc
call
fwait
jmp
decl
fldcw
fdivr
sbb
lahf
inc
test
mov
dec
xchg
fldl
shrb
cmp
inc
jge
mov
push
pop
pop
call
adc
fsubrs
incl
pusha
and
xchg
scas
neg
xlat
mov
mov
in
test
xchg
insl
jle
push
mov
jmp
lcall
mov
into
pop
in
adc
xchg
arpl
insl
sahf
dec
xor
imul
call
jl
xor
add
ss
push
mov
mov
orl
cmp
loop
inc
jmp
mov
insl
lcall
xchg
or
push
jmp
inc
mov
push
and
ret
fidivl
xor
ja
sti
popf
mov
pushl
int
shll
out
jl
sarb
shl
insb
jnp
ljmp
add
inc
into
call
add
pop
ja
cltd
xor
pop
xchg
mov
int
lods
push
mov
call
ret
xor
aaa
add
rorl
adc
out
push
je
ljmp
add
movsb
cmp
push
aas
and
dec
repz
mov
int
mov
xlat
jl
xchg
mov
xor
test
inc
and
adc
jo
cli
mov
daa
mov
decb
push
jl
aas
fdivr
lcall
sbb
pop
cmp
jne
subb
mov
pop
std
mov
xlat
cmp
mov
jl
mov
or
je
dec
test
xlat
cli
mov
in
arpl
icebp
adcb
fdivrl
incl
adc
mov
jo
pushf
dec
sbb
pop
jbe
mov
mov
inc
nop
mov
add
out
sbb
add
mov
xor
outsb
mov
push
iret
push
xchg
mov
decl
mov
dec
aad
mov
sub
mov
sub
das
push
loopne
jnp
adc
decl
and
test
in
push
jmp
aad
shll
daa
jo
and
sar
mov
fbld
adc
loopne
cmp
mov
dec
pushf
adc
jmp
jecxz
xor
lret
lret
pop
jns
into
repz
clc
mov
popa
xor
call
mov
fldenv
fstpl
test
jge
fistl
dec
sbb
popf
loopne
cmpsb
call
aas
push
mov
mov
xchg
pop
bound
adc
cld
xor
bnd
mov
jge
sbb
call
sub
xchg
fstl
outsb
in
cmc
mov
pop
cmp
jb
cmp
or
ljmp
mov
test
cmp
push
xor
inc
sti
push
mov
mov
call
dec
arpl
add
shrl
sub
das
xchg
outsl
ja
mov
fisubs
pushl
sbb
addr16
mov
xchg
loop
and
insb
fldenv
inc
pop
sbb
repz
call
cmp
push
sbb
lcall
mov
jo
xchg
mov
lcall
push
add
fadds
mov
inc
lods
push
xchg
lret
popf
xchg
ljmp
pushl
bound
mov
insl
imul
scas
xchg
push
fisubs
nop
addr16
jmp
cli
loope,pt
cwtl
and
dec
pop
pop
mov
imul
out
fnsave
mov
pushl
jne
mov
dec
sbb
mov
adc
das
popa
xor
xchg
aaa
sahf
cld
lahf
test
out
push
ss
fcoml
fs
mov
pop
insl
dec
lret
xchg
add
or
loope
mov
call
or
inc
test
or
mov
test
mov
sti
inc
imul
incl
lds
mov
arpl
inc
jbe
xchg
push
sub
xchg
xchg
cwtl
imul
and
je
cmp
call
dec
push
jl
mov
or
movsb
cmp
adc
xchg
scas
cld
movsl
jmp
in
push
jb
dec
add
mov
jle
push
das
iret
or
mov
fcomi
xchg
sub
xchg
ljmp
ja
add
mov
icebp
lds
inc
or
fsubp
inc
sub
and
jmp
test
fucomip
rorl
push
or
pop
outsb
into
aas
push
add
mov
add
pushl
movsb
lea
loop
movsb
or
xchg
inc
add
pop
and
imul
lret
mov
pushl
jp
xchg
push
cmp
or
rclb
inc
fs
arpl
lret
outsl
mulb
jmp
xchg
lahf
inc
sbb
lds
mov
fldt
fcoms
fstpl
jg
neg
push
pusha
mov
xchg
fnsave
cmp
arpl
aas
je
rcrl
add
sub
in
stos
pop
pop
movl
lcall
or
push
xor
mov
loopne
incl
add
ja
cmpb
cs
sahf
in
addr16
ret
lret
ret
xchg
sbb
ljmp
ljmp
cmpsb
dec
cmp
add
scas
mov
sbb
int3
arpl
sub
jmp
sbb
dec
sbb
in
repnz
cli
jae
lahf
inc
sub
adc
decl
arpl
add
lret
es
pop
mov
insb
in
cmp
xchg
int
shl
push
and
sahf
dec
pushl
or
ret
sub
xchg
outsl
cmp
add
stos
jb
push
dec
add
sbb
inc
jno
loop
cs
imul
or
repnz
iret
ljmp
popf
cwtl
sbb
aaa
mov
aas
inc
pop
pop
shlb
push
xor
aam
inc
call
outsb
fdivs
jno
test
lcall
mov
push
repnz
fnstsw
jmp
sbb
jmp
xchg
inc
push
lret
stos
lock
push
cmp
mov
es
mov
incl
mov
lods
inc
movsl
add
and
mov
adc
imul
sub
mov
push
push
cmp
xor
adc
rcrb
xor
xor
inc
fcomp
clc
pop
xor
pushl
xchg
mov
in
adc
xchg
adcb
not
sbb
mov
sbb
loopne
jge
xchg
adc
imul
int3
cmp
sbb
aad
sahf
into
cmp
jmp
shlb
dec
icebp
xor
sub
dec
int3
out
ret
jp
push
inc
jo
dec
add
fidivs
movl
add
jno
in
cwtl
je
mov
clc
in
pop
addr16
xor
out
inc
pop
movsb
cmp
sub
or
dec
lods
cmp
dec
js
or
pop
xchg
popf
stc
dec
jl
pop
pop
call
jae
or
mov
ret
jle
roll
mov
cli
push
decl
jecxz
mov
in
lods
sbb
test
mov
adc
pop
pop
cmp
pushl
movsl
scas
dec
cld
cmp
jge
in
inc
rcr
testl
xor
fcomi
fiaddl
lods
pop
inc
lcall
popa
out
jge,pt
outsl
clc
add
sbb
test
into
cmp
icebp
sbbb
sbb
xor
jle
test
and
aas
repz
lds
push
call
pop
daa
test
pop
mov
or
fdivrl
jb
mov
test
cmp
daa
jmp
mov
adc
mov
dec
cmp
imul
pop
mov
inc
orb
push
decl
mov
cmp
hlt
lods
mov
cmp
and
into
ss
cwtl
push
pop
pop
fwait
incl
sbb
pop
mov
xlat
xchg
loop
inc
cmpsl
movsb
jb
divl
xlat
decl
push
add
pop
push
ljmp
jae
loopne
enter
xchg
cmp
xor
ljmp
sahf
push
push
cmp
imul
daa
scas
dec
aam
cmp
jp
loope
mov
adc
jbe
mov
mov
sti
xorb
xlat
rclb
push
test
sub
cmpsl
lods
pop
leave
or
pop
xor
push
fcomps
std
xor
popa
sbb
push
inc
stos
xchg
imul
jg
pushl
cs
mov
mov
cltd
shlb
xlat
sbb
es
ret
lods
or
mov
out
or
mov
xchg
mov
or
jo
mov
cmp
fmuls
cmc
incl
in
mov
lods
and
push
mov
inc
sub
inc
push
ljmp
and
fcoml
mov
out
addl
lea
orb
or
call
lahf
mov
xchg
cmp
in
adc
lods
cltd
mov
or
repz
xor
push
push
mov
dec
push
pop
adc
test
popa
adc
or
stos
stos
xchg
jbe
sar
pushl
sbb
mov
pop
mov
lret
push
lret
je
test
popf
int
out
scas
and
decl
xchg
xlat
loopne
aam
leave
add
ljmp
cli
arpl
es
dec
fdivrl
leave
lret
cmp
xor
push
ds
mov
jno
pop
xchg
cmp
pushl
adc
xchg
fwait
pop
ja
lahf
dec
mov
out
mov
mov
ljmp
xchg
js
mov
outsl
orb
pop
sbb
xchg
adc
sbb
adc
ljmp
push
jecxz
test
out
adc
addl
sbb
lods
jbe
cli
mov
pop
jmp
or
aas
cwtl
inc
lods
jmp
mov
shll
insl
sbb
dec
xchg
push
mov
pop
movsb
arpl
fsub
jno
int
clc
push
lcall
sub
jecxz
and
push
push
jae
lcall
dec
sub
pop
arpl
inc
pushl
pop
in
cmp
sub
test
and
xor
iret
or
pushl
xchg
into
pop
orb
and
push
ja
sbb
cmpl
cmc
jecxz
mov
pushl
pop
pop
cmc
jmp
add
enter
xorl
jbe,pt
inc
popf
add
cli
mov
test
aam
pushl
fistpl
clc
fisttpl
add
test
out
or
nop
pop
mov
adc
xchg
decl
xchg
dec
adc
icebp
ljmp
adc
mov
xor
ret
or
pop
das
into
jmp
decl
divb
jb
xor
inc
pop
sbb
add
add
pop
mov
lcall
es
clc
mov
dec
test
std
dec
mov
out
mov
mov
fcmovb
mov
xorl
xchg
call
cmpsb
adc
packssdw
decl
int
cmp
jb
push
sbb
jns
out
scas
mov
xlat
adc
add
incl
cld
popf
sub
dec
cmpsb
cmp
in
adc
js
mov
add
jmp
sub
jbe
outsb
mov
sbb
roll
aam
sub
bound
testb
js
add
es
sbb
repz
pop
and
xchg
xor
pslld
std
mov
cwtl
and
dec
mov
lsl
dec
test
fs
pop
sbb
fnstcw
popf
cmp
jmp
mov
push
xchg
test
fwait
cmpsb
lret
sbb
jl
xor
test
dec
popf
cli
cli
mov
jg
inc
xchg
idivl
mov
loopne
mov
jno
cs
cwtl
add
ljmp
sbb
xchg
push
lea
pop
jp
xor
adc
cmp
cmp
incl
ljmp
ror
inc
mov
loop
fcomps
icebp
test
adc
cltd
pushf
cmp
pop
repz
mov
in
pop
mov
cli
push
jp
xor
xchg
int3
xchg
bswap
int3
call
shl
or
subl
icebp
pop
int3
mov
and
ljmp
ljmp
jg
les
pop
push
movsl
push
int3
iret
enter
int
sbb
dec
inc
in
mov
insb
call
xchg
addr16
call
dec
dec
shrl
push
xor
call
sub
or
call
dec
jbe
xor
lods
cmp
popf
icebp
mov
pushf
jns
icebp
mov
fldt
ljmp
cmp
sbb
out
inc
das
pop
cmpsb
push
add
mov
ret
pop
insl
cmpsb
and
lcall
stos
pusha
cmp
dec
test
test
jl
icebp
adc
xor
inc
jne
popa
out
ljmp
ljmp
cmp
hlt
mov
lock
insb
mov
pop
daa
out
insl
push
mov
shrb
iret
fwait
cmpsb
xchg
inc
ljmp
jns
jecxz
mov
sti
mov
fdivrp
jmp
cmp
pinsrw
inc
jge
pop
jnp
mov
pop
jns
aas
inc
outsb
dec
test
mov
inc
cmp
sub
add
std
pushf
mov
xchg
add
call
fs
add
into
aad
sbb
mov
or
mov
jne
in
xlat
lcall
fsubp
cld
ljmp
sub
inc
cmpsb
lock
stos
sahf
movd
or
pop
xchg
or
cmp
and
stos
jmp
popa
add
or
pop
inc
jge
ret
shr
jmp
dec
stos
iret
jae
inc
push
mov
mov
push
out
xchg
jo
cld
sbb
pushl
stc
inc
fsub
in
xchg
out
imull
stc
sub
mov
pop
and
addr16
call
shrl
mov
mov
aam
mov
add
scas
xor
adc
push
pushl
pop
or
incb
stc
or
aam
adc
inc
rclb
cmp
adc
incl
sub
cld
lret
fistpl
sub
nop
imul
add
loope
stos
call
inc
jb
daa
sbb
je
fwait
mov
xchg
xchg
jecxz
lahf
ss
xor
call
mov
sbb
dec
sahf
cmp
mov
leave
clc
mov
sub
xor
dec
pushl
jg
sar
xor
and
adc
shlb
lret
sbbl
jmp
sar
jmp
sub
xchg
add
push
xchg
mov
mov
xchg
loope
jmp
cs
decl
fstl
mov
jno
mov
je
inc
loop
xchg
add
ficoml
stc
and
incl
ljmp
xchg
pop
mov
cmp
jmp
mov
cltd
incl
loope
mov
jb
cmp
sbb
aam
cmp
cwtl
iret
lcall
out
in
xchg
mov
pop
mov
shlb
inc
pop
mov
jo
xchg
cmp
pop
mov
push
cli
mov
jmp
nop
clc
jns
sti
adc
adc
xchg
mov
mov
or
jle
jbe
cmp
movsl
fdivs
or
imul
and
nop
and
mov
xor
mov
clc
sub
clc
mov
loop
mov
shlb
pop
imul
popa
xor
movsl
dec
jb
xchg
xchg
jb
pop
push
cmpsl
js
imul
xor
jmp
out
mov
stos
cmp
mov
cmc
cmp
movsl
sbb
push
jecxz
jo
fwait
cmp
jo
jmp
int
stos
pop
cmp
dec
jp
shll
jecxz
incl
sbb
inc
test
lcall
int
cmp
mov
jmp
mov
jae
aam
jg
nop
jmp
xchg
iret
clc
lret
cmp
xor
lahf
incl
int3
xchg
pop
sbb
fnstsw
and
push
adc
es
rcrb
ljmp
jne
icebp
pop
bound
add
push
jbe
fwait
xchg
pop
enter
adc
clc
sar
decl
cli
xchg
mov
test
sub
sub
pop
movsl
mov
notl
jmp
aam
loop
mov
mov
mov
or
sbb
mov
sub
cld
incl
andl
jnp
fmuls
pop
dec
enter
push
dec
adc
inc
xor
in
sbb
push
test
push
daa
sub
xor
sbb
jge
stc
adc
inc
mov
xchg
out
jo
push
sub
js
fildll
xchg
bound
nop
mov
incl
sarb
stos
cmp
pop
push
scas
jno
ficoml
pop
jp
loope
inc
jnp
testb
and
shll
scas
ret
fmul
pop
ret
sbb
xor
insb
lcall
jg
dec
enter
pushl
sti
push
clc
pop
sbbb
jno
aam
cli
repnz
push
js
fwait
xchg
push
mov
push
mov
insb
push
loop
incl
movsl
mov
mov
sub
fisubrl
std
fwait
pop
xor
push
inc
xchg
cmp
call
xchg
dec
fwait
arpl
pop
jno
popa
ficompl
xor
std
dec
leavew
fsubs
mov
or
incl
imul
loopne
add
cmp
dec
ds
xchg
cmp
ljmp
sbb
push
sub
repnz
dec
and
scas
inc
xor
pop
pushl
xchg
xchg
and
scas
loope
xchg
pop
repnz
aaa
inc
inc
sbbb
call
lcall
lock
jno,pt
xchg
xor
mov
pop
pop
popa
xchg
xor
add
repz
call
sub
stos
or
sbb
sub
popf
mov
add
decl
push
xorb
xlat
mov
std
stc
and
mov
jne
call
inc
jmp
outsb
ja
push
in
ljmp
add
mov
je
pop
xor
incl
mov
shr
fnstcw
push
fwait
xchg
mov
pop
stc
xchg
ficoml
std
icebp
addb
call
jle
ud1
js
sbb
pusha
jmp
push
lret
repz
dec
push
jmp
mov
and
div
jnp
dec
scas
aam
xchg
out
das
dec
pop
push
mov
mov
lcall
das
dec
xchg
lds
into
es
std
add
xor
mov
lret
js
mov
je
or
push
adc
pop
fldt
gs
fwait
push
cmp
fildl
iret
arpl
push
call
inc
pushf
mov
sub
pop
ss
inc
push
cmpsl
lcall
xchg
dec
addb
xor
mov
jae
cmp
sub
sub
les
jmp
sub
aam
aam
in
sbb
jl
xlat
loopne
xchg
mov
inc
sbb
add
xchg
mov
sbbb
adc
lock
cmpb
imul
decl
ja
hlt
dec
mov
decb
adc
inc
mov
sbb
pop
andl
mov
int3
cltd
loope
adc
insl
in
sub
mov
mov
scas
mov
decl
lret
out
outsb
inc
pop
xchg
or
icebp
hlt
sbb
call
add
call
pop
xchg
js
popf
iret
or
hlt
pop
mov
test
cmp
pop
and
incl
repz
push
repnz
mov
jb
push
testb
popf
push
mov
cmp
or
inc
or
lcall
mov
jne
popa
xchg
xor
push
adc
lahf
xor
cltd
jmp
pushl
jmp
and
int
lods
adc
inc
out
xor
int
pop
sub
incl
and
into
push
sahf
inc
mov
fwait
mov
gs
cs
inc
mov
hlt
decl
sub
loop
sarl
out
add
stc
or
pop
aam
shll
rclb
push
ljmp
sti
repz
add
dec
into
xchg
pop
fsubl
push
sub
sub
call
push
outsl
inc
ficomps
lods
je
rolb
outsl
icebp
push
xlat
bound
decl
addr16
mov
dec
mov
pop
enter
out
ljmp
cmp
call
mov
sub
dec
call
add
lods
scas
testl
jle
push
inc
mov
mov
sahf
dec
push
iret
flds
into
adc
ja
adc
lcall
ds
cmp
test
mov
mov
fildl
adc
or
jmp
xchg
pop
in
jmp
in
push
test
stos
jge
mov
and
aad
ret
or
jmp
popa
jle
xchg
lods
aas
lahf
pop
test
push
ljmp
mov
stos
outsl
insl
in
mov
or
inc
out
std
outsl
pop
ds
dec
decb
rcll
test
ljmp
pop
clc
pop
movsl
and
lea
pop
jae
in
daa
ljmp
inc
dec
iret
and
pop
jo
ljmp
incb
enter
jp
shl
jge
cli
fsubs
or
sbb
lret
ljmp
mov
hlt
ja
dec
stos
imul
mov
test
jmp
bound
pop
push
out
mov
cmp
lods
daa
shll
loope
les
outsl
jge
dec
cmpsb
mov
mov
iret
cmc
aaa
jecxz
daa
imul
dec
inc
aam
cmp
or
lcall
sbb
pop
lock
stc
lods
popf
into
pusha
out
stc
add
adc
ljmp
nop
xchg
insl
divl
sub
sub
insb
sbb
lahf
dec
shrl
pushl
cmp
jb
stos
xlat
jecxz
scas
ljmp
cmpsb
lret
scas
push
xchg
call
xor
pop
cltd
adc
fwait
in
in
dec
enter
outsb
mov
mov
ljmp
lods
add
repz
xchg
jl
stc
ret
pop
fmulp
add
test
xor
or
shr
pop
aas
push
push
insl
bound
int3
cli
out
addl
adc
jp
dec
pop
outsb
jmp
sbb
inc
loope
cmovge
jbe
mov
add
xchg
insl
cs
push
xor
std
ret
call
adc
xchg
push
cli
dec
add
mov
jb
out
je
cltd
dec
dec
xchg
bswap
jmp
mov
mov
pushf
push
mov
jle
sbb
add
std
push
bound
sar
mov
push
movsl
pop
xchg
insb
incl
mov
stc
lds
jo
jp
test
fs
js
insb
adc
mov
fwait
jmp
jbe
scas
and
sbb
mov
aad
mov
inc
dec
or
adc
aaa
dec
mov
loopne
adcl
add
jl
xor
inc
add
insl
out
insl
sbb
mov
aad
sub
insb
out
fstpl
es
sub
sbb
pushl
and
lahf
jno
imul
aaa
subb
pop
mov
push
cmp
lcall
add
jecxz
shlb
and
je
push
clc
punpckhwd
sub
push
aas
mov
lahf
adc
int
add
test
dec
mov
sti
js
xchg
push
jae
cmp
pusha
push
mov
cmp
add
mov
jg
sbb
push
std
and
lods
add
mov
cli
inc
and
in
call
push
pop
test
xlat
mov
popa
and
push
pop
js,pt
pop
lock
into
leave
mov
adc
ljmp
lods
negb
push
sti
sbb
repz
cmp
pusha
popa
stos
jne
push
pushl
out
cmp
xlat
sbb
add
sahf
int
mov
test
adc
test
incl
adc
add
stos
daa
xchg
mov
adc
mov
popf
xor
out
mov
push
pop
xchg
cld
adc
jns
das
fwait
lcall
and
add
inc
ljmp
or
lahf
push
ss
popa
stos
data16
loope
push
test
inc
fdivrs
shl
adc
dec
mov
out
jno
test
mov
xor
ljmp
out
sbb
hlt
inc
inc
sub
mov
inc
pop
ret
mov
and
cmp
ret
jle
into
mov
jp
or
sbb
add
bnd
loop
inc
and
incl
cmp
adcb
mov
jge
pop
sub
inc
add
incl
sarl
nop
adc
dec
std
xchg
fwait
outsb
int3
xor
pop
std
jno
outsl
int
clc
mov
or
mov
call
dec
cmp
into
pushf
int3
mov
clc
aas
popa
jb
mov
adc
mov
das
scas
xor
movsb
out
mov
sbb
decl
scas
cld
mov
sbb
mov
jbe
cmpsb
scas
mov
sub
mov
or
jmp
cmpsl
loopne
dec
and
push
jp
mov
mov
pop
mov
jg
xor
xchg
enter
je
dec
nop
add
jae
jae
nop
ret
imul
call
fsub
and
fdivrs
dec
inc
xchg
adcl
push
jne
out
mov
int3
and
push
ljmp
dec
movl
lods
subps
sub
out
lahf
in
push
jmp
pop
xor
movb
cmp
popa
loopne
dec
leave
jmp
data16
mov
incl
xlat
adc
rorl
xor
adc
lahf
andl
jl
xor
push
mov
jmp
imull
and
sub
push
mov
fcompl
movsl
push
shrl
decl
orb
out
lret
jmp
inc
pop
jmp
and
dec
jno
push
into
dec
das
pushf
call
pop
and
ljmp
in
pop
mov
mov
dec
or
sahf
xor
mov
decl
pop
sahf
out
mov
jle
and
sub
or
dec
ret
stc
mov
call
mov
add
stos
loop
shl
ljmp
mov
fwait
push
inc
stos
jbe
push
mov
mov
and
push
lret
mov
xchg
lock
cmpsl
scas
aaa
xchg
mov
std
push
or
movl
fsubrs
or
dec
or
daa
dec
inc
mull
xchg
push
push
jl
push
decl
mov
xchg
aad
and
adc
fnstsw
test
std
call
add
lcall
ljmp
jae
inc
xor
add
sti
mov
cwtl
icebp
je
push
js
rcll
ljmp
add
jnp
or
mov
xor
cmp
fcomip
mov
mov
jns
jmp
movsl
sbb
sub
dec
fnstcw
push
mov
sahf
and
sar
decl
fisttps
mov
mov
jmp
jbe
movsb
divl
pop
loope
adc
xchg
scas
enter
decl
loop
xchg
mov
adc
test
add
push
push
adcb
inc
daa
pop
or
ljmp
mov
adc
fcomps
mov
jl
and
int
mov
aad
jmp
bound
das
cmpsb
mov
or
mov
outsl
ret
mov
mov
cmp
aas
jne
in
mov
and
inc
sbbl
mov
dec
dec
test
lcall
enter
out
pop
loopne
jecxz
mov
scas
xchg
movsb
adc
sub
add
ljmp
ret
jne
mov
fstps
icebp
mov
sub
push
xchg
js
inc
loopne
cmp
mov
ljmp
ljmp
mov
cltd
push
push
xchg
cmp
fdivl
repnz
pop
jg
push
in
xor
sbb
sub
dec
out
pusha
pop
dec
popf
outsl
sbb
fneni(8087
js
test
pop
cmpsl
lods
sbb
in
fisttpll
jle
popa
or
sbb
mov
mov
decl
cmp
dec
xchg
mov
push
add
or
cmp
sbb
adc
jns
and
inc
bound
fldl
pop
cmc
ret
dec
test
add
jle
cwtl
and
cmpsl
adc
in
cmp
cli
daa
xchg
out
push
aam
popf
aam
rclb
testl
jmp
xor
test
jmp
add
jle
inc
fistps
subps
in
or
bound
call
bound
xor
dec
aam
jecxz
push
inc
nop
jnp
mov
or
mov
incl
ret
or
cmp
mov
js
aad
outsb
mov
add
jmp
rcrb
push
mov
jne
sbb
es
mov
adc
fstpl
mov
decl
inc
stos
test
pop
dec
pop
nop
loopne
jnp
jmp
cs
test
jmp
scas
add
call
sub
test
loopne
notb
rclb
cs
idiv
ja
push
push
xlat
jmp
aad
pop
outsb
jnp
or
lods
mov
mov
add
mov
loopne
xor
pushl
push
movsl
lret
sarl
lret
xor
sub
xchg
iret
shrl
pop
mov
adc
xor
pushl
sub
scas
ja
adc
outsl
jmp
lds
lock
add
jnp
int
incl
jns,pt
loopne
das
cmpsl
fs
inc
ds
pop
pop
mov
or
xor
test
push
leave
dec
loope
test
fldt
loopne
jmp
stos
mov
fidivs
mov
pop
and
sbb
test
das
in
xchg
dec
push
into
test
cmp
gs
and
jno
mov
sarb
mov
cmp
clc
clc
and
push
lret
push
inc
xchg
orb
insb
sub
hlt
and
sbb
cmp
pop
cmpsb
push
mov
mov
lods
ds
das
jecxz
inc
fdivrl
sub
xor
rorl
jmp
add
xchg
repz
inc
cmp
jnp
mov
dec
xlat
pop
lahf
and
mov
decl
rcr
and
dec
int
lahf
decl
sub
xor
hlt
aad
cmpsb
inc
pusha
push
sub
call
push
mov
lret
pop
sub
lret
pop
add
out
push
dec
xchg
call
push
int
pop
test
shrb
cmp
sub
fcoml
imul
mov
testl
mov
mov
cli
hlt
aam
fidivrs
inc
movsb
sti
sub
pop
call
das
push
lea
frstor
scas
and
mov
sbbl
sub
mov
jb
inc
int
lcall
int3
aaa
pop
and
repnz
das
test
pushl
jg
adc
push
repnz
imul
fimull
out
jmp
loopne
mov
add
or
testl
out
push
cmp
cli
ds
mov
fisubl
in
imul
mov
mov
mov
sar
inc
je
and
test
pop
rep
lret
inc
jno
test
repnz
arpl
mov
ljmp
mov
frstor
dec
mov
lcall
jbe
push
sub
arpl
incl
fsts
cmp
out
mov
test
mov
inc
or
jmp
pop
push
mov
outsb
inc
xor
pop
in
inc
or
int3
cli
push
mov
rcrb
pop
ja
adc
daa
ljmp
or
adc
and
sub
xor
psubsb
push
adcb
dec
adc
push
lret
das
incl
fimuls
and
cltd
inc
movsb
jo
fcmovb
mov
cmpsb
cmp
push
add
mov
incl
cli
pop
mov
out
cltd
inc
jmp
dec
jg
cld
cltd
outsb
rcrl
in
sbb
lcall
imul
pushf
addr16
xchg
imul
push
mov
or
pop
cs
jg
ljmp
repnz
out
adc
cld
jl
or
inc
or
out
cmp
pop
xchg
int3
mov
fbstp
inc
ljmp
sbb
mov
and
mov
push
push
pop
dec
sub
mov
addr16
or
decl
fists
xchg
jns
cmp
adc
add
lahf
rclb
push
ss
pop
push
insb
cld
xchg
call
inc
aas
aaa
mov
aam
jnp
cmp
outsl
xchg
ss
jmp
adc
jmp
jg
push
daa
mov
and
push
jo
or
jecxz
add
das
dec
jns
dec
pop
adc
decl
cld
mov
add
adc
movsb
cmp
les
jne
cmp
xchg
sub
mov
jmp
cmpsl
xchg
lcall
mov
inc
aas
cmpsb
jb
fldcw
mov
sbb
lcall
fs
mov
movsb
jle
aaa
adc
xchg
aam
xor
sbb
add
mov
lret
popf
icebp
jmp
sub
mov
push
jp
fimuls
cmc
mov
and
dec
push
rorl
data16
sub
mov
sub
enter
push
inc
xor
std
popl
xchg
xor
jns
pop
pusha
mov
inc
in
sub
decl
out
inc
mov
cmp
push
inc
mov
mov
fs
repz
xlat
and
incl
pop
lcall
or
mov
dec
mov
xor
inc
scas
fdivrs
mov
not
pop
iret
sub
loopne
ret
or
test
pop
movsl
xchg
aaa
icebp
clc
fbld
lret
inc
or
ljmp
cmp
mov
inc
dec
ret
inc
ss
ds
mov
xor
pushl
movlps
negl
mov
adc
sbb
out
jbe
cmpsl
nop
sub
xor
and
std
xor
mov
xchg
int3
test
xchg
sbb
aaa
ret
mov
sbb
bound
inc
mov
cld
movsl
add
popa
pop
fldt
and
mov
xchg
cmp
idiv
push
popa
inc
icebp
out
sub
push
sub
cmpsb
scas
outsb
cmp
dec
adc
or
or
add
call
dec
lcall
sbb
mov
lds
sub
adc
incl
data16
movsl
out
iret
push
jb
pop
dec
out
or
mov
cmc
ror
push
das
sti
xchg
call
fstl
ds
sub
xchg
sub
pop
test
push
mov
add
out
test
dec
dec
cmp
adc
rcrl
xchg
jo
or
add
and
jg
into
push
lcall
into
mov
sbb
dec
out
push
rcll
int
sti
mov
pop
rclb
jmp
pop
out
sbb
add
add
sbb
and
adc
jecxz
andb
mov
push
jne
andb
loopne
mov
push
xor
xchg
xrelease
icebp
sub
inc
push
cmp
sbb
frstor
jecxz
mov
xlat
lock
mov
xchg
push
lret
incl
push
mov
pop
std
hlt
dec
cmpsl
dec
outsb
or
aam
mov
push
data16
call
lods
fcmove
movl
push
or
pop
mov
pop
mov
hlt
xor
out
mov
jmp
push
inc
pop
pop
bt
divb
leave
test
adc
cmp
popf
adc
jmp
les
xchg
mov
jmp
adc
test
stos
sbb
dec
push
out
lret
add
lods
cmp
pop
fdivp
es
cmp
or
ljmp
jmp
fists
ss
mov
mov
ds
mov
pop
push
jmp
lcall
mov
inc
aad
dec
ljmp
loop
sub
pop
inc
and
add
mov
lret
jp
push
mov
rdtsc
fcmovbe
xchg
scas
into
xor
fisubrs
shrl
imul
fildll
insb
in
pushl
jbe
pop
out
lretw
in
jo
outsl
scas
in
mov
test
sub
popf
push
call
jo
ficoms
test
sbb
fwait
push
rclb
std
popf
add
sbb
pushl
addl
jle
mov
sbb
xor
push
inc
mov
jo
pusha
out
ss
mov
ljmp
xchg
pop
into
test
pop
in
dec
clc
and
nop
into
test
fists
enter
pop
lahf
add
xchg
xlat
and
sbb
adcb
xchg
ljmp
sbb
mov
adc
rorb
das
iret
push
stc
lret
add
fsubrs
incl
movsl
push
out
pop
pushf
push
stc
mov
sbb
rclb
cmp
xchg
xchg
jmp
mov
ds
pop
mov
pop
jle
adc
in
inc
mov
aad
shlb
pushl
rcll
xor
pushf
repnz
hlt
daa
in
jbe
dec
dec
repz
jo
insl
mov
sahf
fiaddl
mov
mov
ss
push
std
cmp
xor
pushf
movsb
inc
push
adc
test
inc
cmp
sub
decl
fistpl
dec
int
add
inc
neg
js
test
pop
cmp
mov
inc
cmp
inc
inc
fnstcw
mov
cwtl
jae
sub
push
and
jecxz
jecxz
decl
or
repnz
loopne,pt
jecxz
xchg
or
int3
nop
mov
ljmp
nop
adc
adc
xchg
aad
xlat
ror
repz
inc
jns
rorb
pushl
dec
into
inc
push
sub
mov
lods
pop
dec
cmp
jle
fdivrl
faddl
daa
lret
aaa
int3
int3
cmpsl
out
aad
stos
sbbb
orb
dec
loop
dec
test
lcall
push
cmpsb
mov
and
cmp
cmp
xchg
mov
jns
sbb
pop
dec
add
lcall
ss
inc
in
out
repz
pusha
stos
imul
fidivs
jne
xor
jmp
sbb
cs
cmp
inc
aaa
adc
cmpsl
or
ret
dec
fucom
incb
sti
inc
jecxz
fnsave
dec
mov
in
adc
aam
mov
jmp
les
rcll
dec
sub
and
ljmp
jo
push
sub
pusha
insl
or
test
mov
test
fisttpl
incl
insl
sbb
sbb
mov
mov
stos
lods
imul
in
into
bnd
mov
incl
jecxz
adc
js
xchg
and
ror
ss
sbb
jl
test
call
inc
outsb
insl
xchg
setnp
popf
inc
test
out
adc
dec
ljmp
ljmp
fildll
add
mov
loop
in
inc
dec
test
enter
and
dec
and
ja
push
jecxz
jecxz
and
add
dec
inc
sbb
mov
and
inc
aam
dec
arpl
mov
mov
lret
aas
mov
inc
sbbl
mov
pop
notl
cmp
pop
mov
test
jns
mov
sbb
jns
xchg
mov
or
jmp
data16
sbb
call
or
mov
gs
in
xor
mov
xchg
sub
in
mov
mov
dec
call
decl
xor
outsl
dec
sbb
adcl
sub
sbb
mov
stc
add
incl
sti
dec
in
into
mov
incl
push
mov
fstpt
add
cmp
jb
mov
lahf
adc
dec
imul
mov
jp
notb
and
mov
xor
incl
js,pt
jb
ja
mov
sub
outsl
fisubrl
inc
mov
mov
mov
push
cmp
and
mov
ds
js
inc
insb
xor
arpl
and
movsl
mov
xchg
mov
loopne
xchg
fstpt
enter
inc
loop
mov
jmp
jmp
mov
push
sbb
shr
inc
insl
mov
imul
mov
in
sahf
dec
cli
test
ljmp
loope
in
push
adc
ret
pushf
mov
pushf
xor
mov
dec
inc
leave
fs
ss
incl
cmpsb
jmp
jb
ret
jmp
pop
addr16
xlat
push
or
mov
lock
rcr
decl
test
jg
test
pop
dec
and
ret
daa
xlat
push
ljmp
jmp
and
dec
jne
popa
sub
shll
cmpsb
daa
pop
pop
pop
push
fildll
in
mov
push
ljmp
fistps
fsubrl
pop
jge
imul
push
ftst
cld
sahf
repnz
call
call
sub
insl
dec
xchg
sub
pop
ror
cmpsl
cld
cmp
push
sub
pushl
movsb
jp
jecxz
push
out
mov
sbb
pop
mov
sub
inc
xchg
mov
push
jmp
scas
add
sub
sbbl
sub
mov
scas
jns
es
incl
les
push
gs
les
mov
js
sub
jg,pt
out
lcall
aas
jl
movsl
jne
lock
outsl
xor
shrl
dec
push
cwtl
jecxz
test
in
test
sbb
jle
popa
jle
arpl
mov
xchg
xchg
add
test
push
push
fs
dec
scas
loopne
pusha
jmp
ljmp
popa
iret
dec
cwtl
jmp
aaa
int
xchg
push
sbb
push
cmp
pop
sbb
mov
mov
inc
fiadds
adc
pushl
out
mov
mov
xor
ljmp
mov
cld
movsl
inc
out
pop
fsubrs
mov
mov
orb
or
scas
pop
into
out
je
fistps
jbe
fsubs
fidivrl
and
push
cmp
cs
jmp
jle
mov
mov
xchg
mov
lods
or
cld
int
and
loopne
call
sub
loop
xchg
jp
sub
mov
adc
rclb
test
ljmp
ret
sub
or
mov
repz
lds
scas
shrl
ja
xchg
icebp
inc
insl
adcl
inc
dec
cli
sbb
xchg
mov
inc
cmc
loope
lods
sbb
shlb
sbb
sbb
lcall
xchg
test
push
dec
dec
pusha
ds
xor
push
fsubr
mov
pop
pop
push
or
and
xor
lcall
push
loope
mov
pop
mov
xor
scas
pop
adc
cltd
mov
inc
dec
ds
lods
mov
jnp
rolb
cmp
push
xor
cltd
add
popf
decl
mov
dec
add
jb
fcmovu
xchg
outsb
stos
mov
inc
push
out
add
mov
iret
outsl
pop
push
jae
cmp
mov
xchg
and
lcall
roll
inc
xor
ljmp
movsb
loop
loop
inc
or
and
and
jno
iret
mov
dec
mov
ljmp
add
dec
jo
mov
jnp
cmp
les
stc
xchg
jae
ss
lcall
dec
jo
stos
ss
aaa
push
push
xchg
lret
mov
sub
inc
jg
dec
out
das
mov
in
addr16
lcall
stc
mov
mov
cmc
cmp
subb
push
mov
and
sbb
pushl
aaa
ljmp
push
sub
or
fisubl
pushf
pushf
hlt
ret
mov
or
call
pop
inc
xlat
pop
push
fs
dec
sub
call
into
cmp
xor
daa
leave
decl
leave
sub
ss
adc
dec
mov
jl
ljmp
jno
cli
jecxz
xchg
test
insl
push
dec
pop
loope
sub
stc
ds
xchg
cmp
frstor
push
ljmp
pop
inc
int3
push
mov
call
shll
xor
hlt
out
cmp
fmulp
jle
xchg
stos
mov
dec
fdivrs
inc
xor
sub
sbb
stos
out
jp
aad
loope
incl
inc
mov
sub
icebp
cmp
shlb
call
inc
jo
jl
push
int3
sub
sar
incl
xor
dec
sbb
mov
ror
dec
xchg
xor
fs
out
pop
mov
lcall
jp
lods
call
push
adc
andb
mov
cld
add
cli
nop
incl
lods
clc
mov
sbb
fidivrs
fdivl
subl
popf
mov
mov
sbb
dec
pop
mov
ja
fcom
inc
mov
mov
push
xor
push
call
mov
sub
fisttpll
fstpt
fistpll
mov
dec
pop
orb
je
jno
mov
jl
in
push
xor
add
mov
xchg
cmp
decl
mov
push
or
add
fwait
xor
outsl
pop
out
popa
ljmp
lock
call
mov
push
jge
ret
nop
into
mov
push
xchg
dec
xor
jbe
lret
aas
js
sub
incl
push
lds
int
mov
dec
sub
roll
dec
and
add
xchg
dec
setae
push
cs
pop
mov
push
lock
push
imul
popf
xchg
pushl
or
shll
dec
cmp
ret
in
repz
or
pushl
loopne
inc
adc
sub
pop
shrl
inc
int3
pop
outsb
jmp
mov
mov
call
out
ret
push
add
inc
call
lods
jg
add
iret
add
mov
dec
xchg
mov
pop
test
push
mov
or
mov
sarl
inc
push
ret
xchg
or
in
jl
jg
jp
push
inc
xchg
dec
jns
lds
mov
sub
ds
pushl
mov
mov
test
scas
inc
inc
mov
sbb
sbb
sub
repz
rcl
incl
xchg
jns
jbe
popf
cmpsb
pop
mov
adc
inc
addr16
popa
dec
lods
hlt
call
inc
std
ja
arpl
in
push
dec
test
jg
dec
mov
imul
out
das
aas
enter
lods
int
mov
dec
dec
hlt
test
jb
int3
fcomps
and
cmpsl
sbb
add
dec
xor
sbb
incl
subl
pop
dec
mov
inc
int3
pop
fcmovnu
mov
push
cli
add
inc
inc
inc
out
sub
incl
movsb
sub
add
lods
in
adc
jmp
data16
es
pushl
in
nop
movups
dec
test
mov
jl
add
push
jne
sbb
pushl
mov
pop
dec
jb
and
push
hlt
jnp
cmc
sarl
pusha
push
shlb
and
xor
mov
aas
dec
aaa
call
xchg
adc
add
in
cmp
js
mov
call
ds
in
int
fidivs
fsubrs
push
ss
add
xchg
mov
lcall
mov
fnstenv
jnp
pop
cmp
divl
mov
cmp
das
sarb
call
arpl
adc
xchg
xchg
cmpsl
rcl
jle
testl
rcr
ffreep
adc
pushl
ljmpw
fdivrl
lods
pop
sub
sahf
mov
mov
decl
idiv
push
or
fsub
and
dec
push
mov
outsl
or
insl
mov
pop
pop
xchg
mov
mov
out
cli
mov
insb
mov
pop
xchg
jge
cs
incl
push
loop
jne
mov
inc
xlat
xchg
pop
loope
subl
push
call
popf
dec
iret
push
loope
and
dec
push
push
xor
scas
push
jp
loopne
xor
mov
push
inc
inc
cmp
jmp
mov
cmpsl
or
lcall
lret
push
data16
aaa
popf
sbb
push
mov
incl
mov
mov
mov
hlt
mov
pushf
cmp
cs
pop
in
js
cmp
les
cmc
lds
in
jmp
jns
outsb
adc
dec
das
fcompl
mov
pop
ljmp
or
punpckhbw
test
pop
ljmp
add
rcll
ljmp
loope
imul
inc
xlat
mov
lods
adc
mov
mov
ljmp
mov
addr16
mov
ficoms
mov
inc
clc
repz
cmp
loop
xlat
loop
decl
repnz
jl
lcall
jp
cmpsb
mov
fwait
add
add
in
jp
or
pushl
or
in
stos
insl
addr16
rolb
rcll
cmp
out
cmpsl
sub
lcall
pop
mov
aad
scas
jne
sbb
std
iret
jno
sbb
movsb
cld
cmpsb
lcall
mov
jmp
cmpsl
inc
add
cmp
out
scas
stc
fiadds
pop
mov
into
test
mov
std
add
dec
stc
cmp
add
mov
cmpl
repz
sub
lcall
enter
into
xchg
sub
popf
xchg
test
inc
ret
pminsw
push
mov
sbb
and
lcall
js
not
je
cmp
ds
jmp
filds
sbb
inc
fwait
jge
mov
jmp
inc
inc
push
in
loopne
mov
adcb
std
jae
pop
dec
pop
je
scas
fisubrl
decl
inc
lret
mov
outsb
inc
data16
jl
ret
mov
push
dec
xchg
out
mov
lcall
leave
pop
test
data16
jl
mov
mov
push
fsubrp
push
in
movsb
add
and
and
mov
mov
data16
ja
xchg
or
cmp
inc
call
es
xchg
sub
lret
addb
mov
pop
ret
or
decl
pop
pop
sub
stos
xlat
stc
out
dec
mov
fyl2x
or
xor
cmp
aas
or
push
sahf
insl
faddl
stos
loope
les
mov
mov
xchg
shr
fidivs
decl
add
cs
rcl
lock
lds
ret
loope
adc
jbe
aam
adcl
ret
push
inc
lcall
ret
ret
dec
sub
mov
jo
arpl
mov
ja
and
test
jmp
je
mov
pop
jecxz
push
xchg
stc
mov
cs
das
rorb
cmp
inc
imull
call
dec
les
push
and
nop
pop
aad
xor
jb
sbb
mov
ljmp
pop
scas
js
shlb
rorl
push
iret
inc
and
and
jnp
xchg
into
imul
loope
mov
cmp
and
dec
cli
movb
ljmp
mov
cmpsl
test
push
dec
mov
je
fmul
push
push
push
add
sbb
cmp
loope
aas
mov
sar
mov
push
addr16
imull
idivl
inc
enter
mov
pop
outsl
call
stc
rorl
test
incl
add
cmp
aas
mov
adc
adc
test
cmc
or
cmp
pop
or
enter
incl
shlb
popa
mov
ds
xlat
shrl
inc
cwtl
xchg
fstl
cmp
pushl
out
pushf
push
jbe
inc
cmpsl
fld
insb
cmp
jecxz
test
sub
inc
jnp
push
stos
int3
shll
mov
ljmp
push
xor
ds
popa
or
sbb
repnz
bound
frstor
push
test
decl
push
xchg
push
or
mov
xchg
dec
xchg
dec
movl
add
in
outsl
push
mov
incl
mov
inc
jmp
dec
sti
or
arpl
xchg
data16
scas
in
jb
fwait
pushl
mov
clc
out
and
jecxz
fucom
push
xor
cmp
pushl
stc
cmp
push
fcomps
inc
in
test
jmp
cmpsl
and
fcompl
and
pop
push
pop
inc
leave
pusha
mov
sub
fisubrs
addr16
mov
cltd
pop
ljmp
arpl
gs
cmp
cmc
lret
push
pop
add
mov
fildll
popa
add
mov
inc
jnp
cmp
xchg
out
jl
cmp
mov
pushl
jnp
adc
movsl
adc
jne
andb
jo
or
ja
stc
mov
cmp
xchg
loop
pop
lret
jbe
sub
aas
jmp
push
loop
cli
pop
ss
test
adc
jmp
dec
stos
jns
mov
xorb
cmpsl
push
pop
or
mov
or
call
jmp
arpl
in
movnti
or
cmpsl
jno
or
jnp
test
mov
incl
stos
cmp
jns
test
cmp
dec
cld
xor
xor
jmp
mov
das
mov
pop
push
mov
test
xchg
and
cmc
int3
xchg
mov
popf
push
movsb
cmp
dec
loopne
jno
sbb
jmp
rolb
loope
cmp
inc
mov
ljmp
xor
sbb
mov
pop
lock
fadd
test
fidivs
outsl
movsb
outsb
fwait
pushl
mov
pop
lds
pusha
shlb
enter
sub
push
call
int3
cmp
or
pushl
int
int
cmp
dec
mov
out
clc
loope
pusha
mov
incb
sahf
jmp
pushl
xor
les
push
rcl
or
sub
test
mov
pop
push
leave
les
mov
add
push
and
leave
jl
fidivrl
push
xchg
jnp
pop
ret
mov
and
fcoml
notl
sbb
test
out
xchg
sbb
clc
loop
out
mov
jge
out
jg
lahf
cmp
mov
jp
outsl
or
pop
push
addr16
gs
mov
jmp
aad
adc
loope
lahf
cli
jle
mov
mov
sub
and
cmp
pop
pushl
xchg
hlt
push
into
xchg
repnz
stos
js
jno
jne
adc
into
xchg
shr
cmp
cmp
jg,pt
fs
inc
dec
lea
pusha
test
aam
lahf
pop
push
arpl
roll
mov
mov
mov
lods
jb
test
pop
or
bound
cmpsl
mov
pop
sub
rol
in
pop
int
mov
push
and
push
push
mov
incl
mov
pop
stos
lahf
imul
pop
cmpsb
sahf
push
notl
jg
mov
xchg
faddl
in
mov
mov
mov
in
aaa
mov
jns
adc
jmp
mul
sbb
push
pop
xchg
insl
pop
sti
popf
out
dec
mov
lods
or
into
call
dec
in
and
clc
das
mov
mov
scas
mov
sbb
mov
jmp
mov
rcr
orl
and
xchg
push
adc
xchg
lcall
lcall
outsb
pushf
xor
pop
sbb
icebp
and
xor
aas
and
add
incl
insl
cmp
loope
add
pop
jp
jbe
xchg
movb
jg
sbb
mov
idiv
pushl
imull
sbb
xchg
sahf
test
mov
ja
repnz
ret
mov
imul
pushl
sub
lock
stos
xchg
sub
out
in
push
inc
rclb
push
xchg
sub
decl
outsl
lods
mov
lahf
jae
push
sub
outsl
imul
out
cwtl
xchg
scas
dec
pop
and
or
jmp
push
jno
xchg
cwtl
popa
xchg
lret
dec
or
and
cmc
push
or
xor
pop
lods
hlt
lcall
cld
test
adc
rcl
xor
and
sbb
lods
ja
cmpsl
xor
mov
sbb
ret
ss
jle
cs
imul
call
jb
jo
push
fisubrs
fldt
inc
push
push
mov
jbe
and
or
push
xor
jmp
shr
and
xchg
mov
ret
push
pop
xchg
push
fdivl
pop
jecxz
mov
ljmp
sbb
lahf
shrb
pop
mov
jle
ficomps
jae
mov
in
shll
cld
sub
pop
cmpsb
pop
enter
fnstenv
or
inc
push
lds
rorb
mov
iret
cmpl
and
les
aam
sbb
jae
out
xor
and
jae
jmp
xchg
adc
fisttpll
inc
mov
jmp
jno
mov
pushl
pop
into
mov
cmp
add
sbb
mov
mul
sbb
in
incl
jge
cli
xchg
and
adc
xor
xor
mov
leave
sub
rcrb
pushf
push
in
call
inc
xchg
jge
in
test
sahf
jns
lods
xor
sti
stos
and
add
ljmp
sub
insl
les
loopne
fcomi
gs
arpl
iret
adc
out
lcall
mov
push
adc
aas
mov
cmp
fwait
test
filds
movsb
mov
stc
andl
ljmp
iret
inc
and
in
jp
lcall
call
fdivs
push
enter
mov
call
pop
movsl
mov
jnp
fstpt
std
cmp
int3
inc
and
jmp
add
mov
call
sbb
scas
sub
inc
in
mov
or
mov
loop
fnstcw
jmp
pushf
icebp
cmp
lds
cli
cwtl
xchg
push
jb
sbb
fstl
jl
push
mov
sub
pushl
sbb
test
mov
fs
and
sub
pusha
jno
cmp
add
ds
sub
jbe
gs
scas
movsb
jl
sub
lret
sub
push
jnp
lcall
pop
imull
enter
cmp
mov
lahf
pusha
pop
pop
mov
push
incl
xchg
in
push
outsl
push
lret
inc
mov
pop
jbe
aam
loope
adcb
out
ss
inc
mov
dec
fistps
imul
cmp
icebp
mov
jmp
xchg
cltd
xor
pushl
lds
lahf
int
stc
pop
out
push
mov
test
rcr
lret
xor
xor
incl
or
loope
popa
enter
jb
push
jb
sub
mov
and
cmp
call
cld
mov
dec
loope
or
loope
nop
dec
add
cwtl
popf
ja
pop
icebp
jge
xor
pop
bound
lcall
and
rorb
std
dec
rcrb
jno
sub
xor
sbb
mov
aas
mov
call
push
dec
and
xchg
rorl
cmp
jmp
mov
sub
fdivs
pop
sarb
das
rolb
pop
dec
xchg
shr
dec
xor
cmp
je
push
or
call
out
adc
cmpb
push
stc
xchg
pushf
or
outsl
adc
inc
fnstenv
scas
mov
lcall
pushf
mov
mov
mov
mov
push
leave
iret
add
pop
test
lcall
daa
pushf
adc
dec
xor
mov
xor
addr16
dec
cmp
pop
mov
gs
jnp
pop
and
push
mov
jbe
or
mov
cs
orb
dec
jne
mov
and
sub
push
std
sbb
sbb
adc
sbbl
decl
push
jnp
mov
push
dec
pop
outsl
pop
mov
out
fwait
loopne
in
icebp
jle
mov
ljmp
movsb
enter
dec
cld
push
les
sahf
andb
push
push
mov
mov
fcmovnb
test
arpl
dec
ss
adc
ja
or
leave
sub
xor
mov
inc
add
push
lds
cmp
inc
in
jecxz
push
mov
xor
movsl
sbb
xor
mov
ljmp
inc
negb
adc
scas
xor
ljmp
mov
pushf
aad
fsts
jmp
jbe
imul
iret
xor
fidivrs
out
nop
lds
sub
hlt
jns
push
lret
or
imul
cmp
mov
pop
add
ljmp
fists
or
pop
insb
call
fcoms
lea
pop
xchg
rorb
stos
mov
mov
push
pop
lcall
ret
sub
cwtl
cmp
dec
in
push
and
ljmp
popa
xorl
orl
mov
es
lcall
lea
ficomps
or
inc
test
adc
mov
push
in
ljmp
addr16
aaa
je
ds
repnz
adc
lock
arpl
jle
ret
stos
pushl
iret
rcr
lret
push
ss
cmpsb
das
rolb
jmp
inc
jno
fimull
aas
xor
jo
lcall
inc
xchg
xchg
cmpsb
cmp
loopne
cs
lds
mov
sub
inc
push
pop
mov
out
sbb
nop
mov
jmp
cltd
iret
fs
and
scas
adc
shrl
dec
lods
dec
nop
pop
cmp
fdivp
aaa
ds
flds
add
sbb
adc
sti
push
out
mov
sbb
iret
cs
cmp
sbb
rclb
cmp
pushl
push
mov
fidivrs
dec
mov
xchg
lea
cs
mov
call
clc
mov
adc
pop
mov
xchg
daa
ljmp
cld
cld
pop
jge
fucom
sbb
out
push
dec
mov
mov
xchg
outsl
jecxz
jmp
push
and
pushl
xchg
or
out
out
push
negb
jae
dec
jnp
out
addr16
popa
addr16
push
push
or
jmp
call
movsb
and
bound
xor
mov
xor
mov
sti
and
int
dec
in
aaa
fistpll
sbb
or
fisttpl
pushf
lds
popa
mov
xor
inc
sub
incl
and
fistl
sahf
fldcw
imul
sbb
in
mov
add
lcall
lret
lret
inc
dec
add
inc
mov
test
xlat
sub
push
push
sub
sahf
add
mov
dec
test
or
scas
std
push
cld
jbe
sub
insl
mov
decl
xor
fcom
mov
jno
cmp
push
orl
adc
xchg
es
call
out
sub
fisubs
xor
jg
enter
in
call
ljmp
jp
dec
fidivrl
push
fiadds
xchg
mov
pop
mov
outsb
mov
xchg
in
cmpsl
jne
xlat
or
cwtl
sbb
aad
ss
out
decl
clc
insb
xchg
fimuls
jp
inc
jbe
adc
adc
xor
lea
cmpsb
pushl
icebp
ss
cmpsl
jmp
cmp
or
lcall
inc
pop
xor
cmp
test
incl
pop
pop
dec
js
addr16
loopne
xchg
adc
or
cltd
insb
pop
push
decl
mov
test
sahf
stos
popa
cmp
addl
jnp
sbb
incl
push
ds
mov
pop
fistps
scas
pop
lea
inc
aas
lcall
pop
call
repz
xchg
cmp
dec
fcoml
push
ja
xchg
mov
mov
xchg
sbb
fbld
test
xorb
add
adc
push
decb
in
sub
mov
or
call
push
push
or
mov
in
aas
outsb
call
pushf
pop
mov
mov
stc
cmp
lcall
iret
xchg
xchg
jo
popf
dec
mov
aad
inc
xor
fnstenv
ljmp
lcall
out
and
out
sbb
or
cld
dec
test
das
ficomps
call
data16
sub
icebp
int3
movsb
mov
insb
inc
push
leave
jl
scas
jbe
xchg
sbb
pushl
lcall
scas
mov
jge
jle
fiaddl
lea
dec
incl
notb
jle
mov
mov
test
jno
or
scas
xchg
repz
cmpsl
imull
jmp
frstor
subl
jecxz
mov
sar
fs
div
inc
xor
jmp
cmp
mov
inc
sub
mov
call
loopne
add
ljmp
push
sbb
sbb
nop
lock
shl
fisttps
xchg
test
cmp
lods
or
jns
mov
jp
cmc
lcall
xchg
and
fsubs
xor
push
in
jae
int3
je
mov
loop
and
ljmp
decl
mov
lds
loopne
and
aam
fmull
addr16
mov
inc
nop
jmp
daa
dec
nop
cmp
lock
add
sti
mov
pop
xor
test
lret
sbb
mov
push
adc
sub
push
ret
call
push
xor
dec
je
jg
dec
aam
in
lahf
andl
add
jne
fnsetpm(287
inc
out
xor
lods
cli
mov
loopne
pop
pop
jg
dec
add
push
jbe
js
ja
push
enter
int
pop
adc
ljmp
testl
mov
cmpsl
pop
out
lret
or
sbb
jbe
push
cld
sub
pushf
add
rcrl
arpl
push
stos
lods
xchg
xchg
mov
sbb
gs
xor
sub
das
dec
mov
ljmp
into
movl
inc
mov
ds
xchg
inc
jmp
xor
mov
ficompl
xor
xchg
test
pop
push
pop
mov
je
cmpsl
push
std
xor
ds
lret
decl
xchg
cmp
cmc
xchg
call
nop
icebp
push
mov
dec
xor
stos
xchg
dec
lds
push
decl
and
stos
aaa
xchg
xor
pop
andb
aas
jns
push
outsb
mov
push
jnp
and
enter
rcrb
xor
inc
mov
popf
scas
push
mov
incl
pop
fsubl
pop
push
sbb
iret
jno
movsb
lahf
cmp
push
fsts
adc
mov
subl
ret
jl
scas
jmp
icebp
jae
mov
sub
push
fs
pop
push
adc
call
cmp
mov
sub
mov
and
dec
loop
js
aam
test
jbe
adc
push
jns
js
ljmp
daa
and
dec
inc
jns
filds
or
pop
or
call
xor
mov
push
jmp
or
push
dec
inc
push
xor
sub
call
lock
mov
sbb
out
or
adc
je
cli
loop
fimuls
adc
xchg
jp
sti
call
sub
cmp
inc
lods
push
xchg
jle
and
cmovge
dec
sbb
into
jne
xchg
sub
shrl
int3
js
mov
cmpsl
fmull
call
nop
lahf
mov
sbb
jecxz
lea
cmp
mov
sub
test
dec
sbb
rcr
sub
stos
mov
jecxz
sahf
mov
daa
and
add
ficoml
fildll
lcall
fsubs
and
movsb
push
sbb
sbb
mov
sub
decl
inc
mov
imul
xchg
inc
iret
cmp
sub
inc
jmp
int3
pop
mov
ljmp
cmp
sbb
cmp
loop
fmulp
push
lret
xchg
stc
pop
mov
call
push
add
inc
sbb
xchg
rolb
test
aad
dec
xchg
mov
fxch
into
cmpsl
out
xchg
push
and
aas
leave
mov
es
sbb
dec
test
cs
mov
test
mov
xor
inc
mov
push
cmp
cmpsb
lods
outsb
mov
push
imulb
cs
xchg
clc
pop
call
pop
fsubrl
fwait
push
lcall
les
cmpsl
sti
enter
mov
mov
cmp
jg
cmp
loop
mov
cmpl
xchg
push
xor
xchg
and
or
inc
jg
ret
xor
inc
aas
inc
in
ljmp
rol
rclb
or
test
mov
insl
xor
mov
jns
sub
decl
mov
jne
cmpsl
cli
es
lret
adc
in
arpl
dec
loopne
inc
mov
add
fsubs
sub
push
and
and
gs
adc
add
jmp
sbb
adc
in
sub
test
aad
std
sbb
daa
loope
jnp
mov
or
and
outsl
pop
inc
pop
jns
cwtl
into
cs
imul
mov
rorl
fcmovnbe
hlt
enter
ljmp
sbb
cli
addr16
mov
push
bnd
out
xlat
lahf
mov
lods
es
jmp
mov
or
mov
jecxz
or
repnz
mov
xor
ljmp
cmpsl
xor
xor
pop
add
sub
xorb
cmp
popa
rol
cmpsb
cwtl
sar
cmp
and
clc
call
mov
xchg
test
inc
xlat
into
or
decl
ret
sub
and
add
pop
shlb
int
sub
icebp
scas
jmp
cmp
mov
lahf
xor
cwtl
insl
pop
adc
insb
addb
push
inc
insb
inc
cld
movsl
jno
incl
pushf
shrl
call
inc
shrl
cmp
fs
inc
subb
outsl
pushl
jno
mov
sbb
in
in
pop
jae
fisubs
jl
xchg
jp
movsl
repz
incl
dec
and
add
scas
jp
cwtl
enter
fnstcw
mov
ljmp
xchg
cmp
loope
xor
inc
push
les
std
arpl
mov
cmp
iret
stos
and
out
out
jno
cmp
pushl
scas
insb
addb
js
inc
setl
xchg
ja
cmc
adc
test
inc
jmp
xorl
inc
push
cltd
or
shl
add
xchg
jmp
hlt
pop
push
jmp
jle
mov
sbb
addb
xor
mov
push
cmp
lods
jnp
fisubrl
fwait
std
fcompl
iret
add
lods
mov
pop
adc
and
lahf
fwait
sub
fwait
fwait
xchg
ret
jo
mov
xor
cmp
in
adc
xlat
imulb
sahf
into
shlb
inc
rcrb
xor
cmc
mov
xchg
ret
adc
jbe
loope
xor
pop
pop
and
sbb
jmp
mov
fidivrl
stos
adc
lds
cmp
or
pop
daa
js
jecxz
inc
mov
incl
sub
pop
test
test
cmp
inc
xchg
iret
push
out
jg
sbb
decl
test
leave
or
mov
cltd
mov
add
scas
outsl
rolb
cli
jnp
mov
aad
lods
inc
movsl
stc
ficomps
push
outsl
jnp
xor
pusha
aas
sbb
cmp
cmp
daa
mov
or
in
mov
sub
data16
adc
pusha
lods
dec
fnsave
decl
in
sub
and
sti
xchg
loope
test
mov
push
pop
int3
stos
enter
ljmp
outsb
mov
jp
xor
bound
gs
out
test
cmp
sbb
mov
adcl
insl
sbb
test
pop
scas
mov
pop
stc
test
mov
ss
decl
fwait
and
xor
outsl
imull
aas
fstl
mov
popf
mov
cmpsl
mov
mov
xlat
sbb
xchg
scas
es
lea
mov
xchg
out
xorl
scas
adc
es
call
ja
xchg
out
xchg
fidivs
rcrb
test
fwait
and
dec
out
or
jmp
mov
xor
and
jb
fbld
mov
sar
incl
xlat
push
test
popf
add
cmp
fxch
xchg
adc
adc
xchg
and
incl
add
inc
sbb
push
sbb
inc
sarl
test
inc
sub
imul
lcall
cmp
or
jp
lods
movsl
add
sahf
mov
xlat
inc
jmp
push
insb
mov
icebp
xchg
nop
outsb
dec
mov
in
out
stos
inc
outsl
ds
cmp
pop
cli
push
push
test
andl
out
imul
ds
xor
sbb
notl
adc
fidivl
jno
push
int
clc
addr16
cmp
jmp
aas
push
arpl
setl
add
push
push
push
lea
leave
mov
subb
push
sahf
mov
jae
bound
pushl
cmp
cmc
sub
jg
loopne
inc
addl
out
jmp
je
icebp
inc
xchg
xchg
xlat
gs
mov
enter
adc
movsb
mov
call
xchg
icebp
iret
pop
stos
fs
out
cmp
call
sbb
push
and
cli
imul
push
inc
dec
fdecstp
mov
test
push
and
mov
jmp
jne
jecxz
fimuls
cmp
xchg
test
jle
leave
or
cmpsl
out
xlat
data16
aam
cmp
jmp
mov
dec
js
mov
push
xchg
mov
mov
cmp
loope
mov
or
loope
dec
jae
fs
jp
decb
inc
sub
or
dec
add
or
sarl
cmpsb
in
mov
jbe
icebp
lock
cmp
pusha
add
jbe
clc
and
pop
int
mov
jae
add
out
dec
jge
sub
and
cmp
dec
sar
jmp
lcall
xchg
int
add
stc
push
sarb
nopl
inc
or
jmp
lcall
fstpl
divl
xchg
test
lea
data16
mov
rol
filds
repz
sub
fstpl
mov
lcall
arpl
push
movsl
push
shlb
decl
mov
sti
push
cmp
sub
sub
xor
mov
mov
mov
ljmp
sti
mov
pushl
cmp
push
mov
xchg
frstor
jmp
hlt
hlt
iret
rolb
xlat
sarb
int
mov
mov
pop
xchg
dec
add
mov
jmp
popa
sub
sub
xor
push
sub
in
loop
push
loope
shrl
mov
cltd
addr16
std
shrl
iret
adc
fistpl
pop
dec
mov
out
sub
sub
cs
idivb
decl
sub
pop
push
aaa
data16
shrb
fcomps
pushf
pop
sub
es
incl
ret
sub
outsb
or
mov
sub
test
mov
mov
adc
fs
test
notl
pushf
inc
jmp
dec
pusha
cmp
mov
push
loope
fsubs
aas
mov
pushl
jecxz
xchg
mov
push
mov
aas
sub
xchg
cmp
cmp
push
xchg
jmp
popf
lret
jb
fildll
outsl
jo
xchg
or
scas
inc
in
out
mov
push
lret
push
cli
incl
cmp
adc
aas
lret
adc
adc
outsb
xor
movsb
jecxz
pop
outsb
sbb
out
adc
mov
and
mov
in
insb
xor
push
cmpsb
xchg
or
dec
xor
add
pop
sahf
pop
jl
jmp
jnp
fdivs
movsb
bound
add
adc
ss
popa
pop
adc
aas
jmp
xchg
xlat
aam
or
pop
jge
jl
das
jo
and
jnp
push
loopne
aas
cmp
lcall
mov
or
add
bound
shr
movl
pop
rcrb
movb
dec
inc
sbb
cwtl
int
aaa
jecxz,pt
popf
xor
cmp
sarb
outsl
inc
dec
mulb
sub
sub
decl
adc
sahf
scas
cmpsl
sbb
scas
mov
and
test
xor
popf
mov
incl
pop
fistpl
incb
jge
mov
aad
loopne
jle
push
sub
jp
imul
in
pop
daa
mov
test
add
push
jp
pop
iret
in
orb
ljmp
lcall
out
std
popa
mov
das
jle
push
mov
xchg
adc
cmp
cmc
popf
adc
pushl
cli
sbb
jecxz
insb
push
xlat
push
fcmove
dec
aaa
mov
outsb
ja
das
sub
enter
dec
jbe
nop
mov
jle
mov
lea
xchg
shll
es
cmp
decl
add
scas
adc
jno
insb
test
adc
cmp
add
negl
fisubrs
incl
cld
movsl
gs
loopne
fcomip
mov
pop
cmpsb
push
nop
lcall
insb
xchg
cmp
dec
push
mov
mov
stc
mov
jl
std
dec
out
lcall
or
pop
pop
mov
dec
push
mov
clc
sti
jo
xchg
js
sbb
pop
jg
int
mov
outsl
rcrl
mov
jmp
adc
data16
rcr
test
lds
pop
inc
stos
mov
push
sar
lcall
inc
inc
test
xchg
pop
ljmp
std
mov
sbb
cmp
mov
ljmp
add
fucomi
fldcw
pop
ss
xchg
aas
pop
stc
jbe
shrb
jnp
call
inc
mov
adc
in
fwait
sub
shll
or
leave
jg
mov
incl
mov
inc
out
leave
inc
aaa
cmpsl
sbb
into
mov
lret
fldl
data16
inc
outsb
xchg
repnz
jmp
stos
xchg
ljmp
into
nop
lret
add
fldt
pop
rcr
inc
mov
mov
jno
inc
out
hlt
push
push
adc
stos
pushl
mov
sub
sub
xchg
inc
enter
inc
mov
pop
and
in
roll
adc
out
fldl
js
jge
cs
jp
sub
sahf
int3
nop
mov
popa
push
arpl
push
xchg
jmp
js
jg
xchg
xchg
jge
add
clc
xor
test
inc
jae
adc
xchg
arpl
and
mov
mov
adc
adc
shll
dec
movsl
inc
mov
sbbb
sbb
loop
das
pop
dec
ja
decl
mov
pop
xchg
cmp
rolb
in
lods
inc
and
cld
ror
pop
and
orl
test
out
add
ss
js
inc
popa
lods
inc
sub
decl
dec
cs
les
dec
sbb
inc
inc
leave
sub
pop
pushf
mov
jl
insb
cmpb
push
jnp
xor
inc
dec
inc
jb
jne
cld
repnz
mov
jge
xchg
xor
ljmp
push
inc
inc
and
xadd
jns
xchg
mov
jle
pop
jno
loope
stos
ljmp
inc
call
shr
xor
or
mov
mov
into
jecxz
insl
adc
in
decl
sti
movsb
ss
mov
adc
out
ja
dec
cmp
in
psraw
pop
and
in
mov
ljmp
pop
sub
dec
addl
fwait
arpl
loope
xor
jg
and
jmp
jl
jecxz
jl
call
cmpsl
mov
sub
inc
xchg
mov
xor
aad
dec
push
sub
fs
add
dec
jmp
incl
stos
lea
inc
add
subb
outsb
rcr
push
mov
out
jnp
addr16
mov
push
ffree
xor
add
daa
lcall
xchg
inc
jns
decl
jnp
and
jne
clc
data16
rorl
in
daa
jmp
cmp
ljmp
sub
lds
mov
pop
xor
or
pop
cmpsl
decl
mov
cmpsl
jecxz
inc
cmpb
jno
mov
fs
rol
jb
lock
rcr
mov
or
xor
push
daa
int3
xlat
out
sbb
jg
dec
ja
addr16
incl
imul
jo
lcall
adc
inc
xchg
sub
dec
cmc
outsb
incl
sbbb
sbb
lods
inc
insb
mov
cmc
push
jle
sub
push
adc
mov
fwait
jge
fs
dec
test
jb
pop
rcl
pop
push
sbb
aas
sbb
lea
dec
call
stos
and
jp
cltd
hlt
test
cmp
lea
outsl
in
pop
jmp
sahf
lds
inc
shl
push
stos
imul
xchg
ret
mov
inc
sub
mov
clc
adc
incl
sbb
ja
imul
popa
cmp
ds
jge
lcall
bound
pop
adc
fisubs
xor
cwtl
dec
xor
mov
js
sti
sbb
jmp
adc
cmp
nop
push
int
mov
std
testl
mov
in
adc
inc
jbe
pushl
js
push
push
std
shl
cs
jge
adc
js
xor
add
jmp
push
pop
scas
mov
adc
adc
sbb
imul
loop
jo
mov
fstp
xor
ja
push
jne
nop
mov
negl
cld
push
sbb
shl
ljmp
std
xchg
rolb
cs
xlat
xchg
ds
in
movsb
inc
hlt
imul
jmp
xchg
and
addr16
int
ds
jl
inc
cmp
cld
xchg
sub
jns
pushl
sbb
xchg
or
cmpsb
xor
pusha
outsb
and
stc
xor
inc
jmp
mov
jecxz
ljmp
xor
mov
jb
inc
imul
sahf
leave
out
mov
inc
adc
and
aad
int
fwait
jns
movsl
and
cmp
mov
jle
or
call
and
iret
mov
movsl
imulb
popf
test
push
filds
jmp
aas
and
repz
pushf
jno
sbb
daa
xchg
sbb
loope
pusha
jae
mov
pushl
aad
mov
dec
leave
mov
stos
mov
cmp
jge
movsl
xlat
jne
test
add
decl
in
add
sahf
push
xchg
test
pop
fstpt
pop
mov
mov
lret
dec
dec
pop
mov
fisttps
sbb
int3
push
cli
xchg
std
lds
mov
and
push
xchg
inc
mov
call
push
pop
in
xchg
in
mov
out
inc
jge
das
shll
into
lods
mov
fstl
in
or
ret
repz
cmpsl
mov
movsl
in
xchg
lahf
stc
pop
push
ds
mov
jmp
jb
roll
and
sarl
push
xchg
fisubl
out
leave
dec
sbb
mov
lods
mov
test
jne
xchg
js
ficomps
decl
lds
mov
xor
pop
shlb
xlat
jbe
jb
ss
lcall
sbb
jg
or
mov
or
das
shll
dec
xlat
xor
pushl
pushf
leave
sbb
push
and
aaa
dec
ja
cmp
cmpl
jmp
fldt
aad
adc
icebp
aas
jnp
or
jno
icebp
xor
inc
dec
mov
jl
dec
pop
int3
mov
mov
ficompl
cmp
pop
icebp
lret
push
call
adc
cmp
outsl
push
lods
das
dec
pop
jns
andl
bnd
pop
mov
lods
inc
movsb
mov
decl
jmp
repnz
addr16
imul
das
lods
ljmp
push
jle
mov
pushl
mov
xlat
push
mov
fwait
pop
aas
adc
mov
lds
inc
xor
jns
cmp
decl
pop
cmpsb
jnp
stos
pop
cli
cli
add
movsl
scas
in
inc
je
ja
ja
or
imul
adc
pop
jmp
mov
xchg
fistpll
loope
loope
xor
xchg
and
push
call
test
dec
push
adc
mov
and
or
push
push
repz
orb
jmp
push
xchg
mov
fsubrs
rclb
popf
adc
add
dec
push
or
pushl
jle
push
jle
ffree
push
arpl
mov
mov
loope
ds
popa
push
lcall
dec
les
in
mov
movsb
pop
xor
xchg
cmp
push
cmpb
hlt
mov
lods
fcomps
incl
sbb
ret
jno
jp
xchg
sub
sahf
adcb
arpl
adc
mov
lods
push
add
icebp
ljmp
call
shrl
test
push
xchg
mov
mov
inc
mov
stos
lock
lcall
lea
xor
or
je
lds
inc
mov
add
ds
inc
stc
xchg
js
loope
aad
mov
mov
adc
pop
test
jp
push
pop
fnsetpm(287
jns
cmpsb
decl
xchg
push
in
xor
cmp
pop
nop
inc
mov
stc
cmp
cmp
jmp
xor
mov
inc
and
lret
push
filds
fcompl
xchg
ret
lahf
push
mov
jmp
pop
shlb
xlat
dec
scas
cmpsl
cmpsb
or
les
push
cmp
into
fs
mov
in
out
dec
int3
mov
jmp
mov
xchg
fnsave
fwait
mov
add
mov
or
jge
mov
incl
in
xchg
adc
gs
js
jne
cld
and
mov
push
sbb
inc
popfw
loop
xor
cs
and
dec
sbb
push
mov
add
jmp
jno
jnp
popa
xor
sbb
jne
es
dec
push
aad
fs
mov
xchg
jge
stos
mov
std
mov
jo
jo
push
mov
mov
out
sub
mov
mov
mov
mov
mov
mov
mov
xchg
jmp
ljmp
divb
decl
sbb
iret
fiadds
jne
ret
repnz
lea
out
addb
call
mov
cld
xor
inc
jbe
jne
test
gs
lahf
push
mov
fcos
ljmp
pop
lock
adc
and
cmp
lret
add
pushl
lahf
fs
dec
cmc
jo
sbb
mov
xchg
mov
jo
pop
fs
pop
imul
jmp
pushl
jmp
cmpsl
pop
dec
pavgb
mov
sub
inc
inc
in
lahf
pop
jmp
jmp
call
cwtl
lods
shlb
pop
xchg
push
lret
sarb
jl
xlat
les
mov
ljmp
in
hlt
fcompl
into
mov
std
stos
ret
test
or
xchg
in
cmp
ljmp
adcb
lods
xchg
push
mov
dec
cmpsl
pop
mov
in
jp
sub
pop
out
in
call
ljmp
aad
cmp
xchg
outsl
dec
int3
pop
pop
cmpsb
xchg
xorps
cs
cmp
push
cs
scas
cmpb
popl
lcall
aas
fisttps
mov
jmp
test
cmc
xor
je
jp
inc
pop
shll
mov
cmp
sbb
mov
call
dec
sbb
stc
xchg
sahf
jg
mov
xor
push
out
or
jmp
and
mov
adc
out
pop
xchg
or
and
mov
sub
jg
cmp
scas
add
or
cs
loope
mov
dec
bound
lods
push
lret
fstl
jmp
mov
data16
sarl
jp
hlt
pxor
mov
fs
push
xchg
cmp
jp
mov
adc
test
mov
sub
popa
inc
dec
xchg
and
lret
sub
push
inc
in
lock
loopne
mov
adc
imul
xor
incl
inc
mov
fildll
pop
inc
xor
movsl
adc
arpl
movb
jmp
inc
cmpsb
call
clc
sbb
sbb
mov
mov
es
roll
hlt
mov
int
das
cmc
xor
jmp
cmc
inc
sahf
fcoml
xor
push
pop
popf
add
adc
inc
inc
hlt
push
push
add
lfs
sbb
insl
pop
mov
mov
out
push
mov
mov
jno
pushl
xchg
in
lock
movsl
mov
addr16
pop
nop
mov
mov
shr
inc
mov
les
fbld
jge
and
pop
xchg
dec
je
out
pop
inc
mov
jmp
mov
push
or
cwtl
push
test
xor
pusha
imul
xor
xor
xor
mov
jns
fbstp
jae
in
sbb
push
pushf
pop
sub
ljmp
testl
bound
in
adcl
fstpt
aam
mov
mov
jp
cmc
scas
and
ja
js
out
mov
je
jp
mov
int
call
sub
adc
cmpsb
adc
add
pushw
or
sub
mov
decl
aas
shlb
and
push
faddl
mov
jg
jno
jle
nop
mov
add
xchg
in
mov
cmc
jl
out
cmpb
gs
call
jg
mov
lahf
sub
fdivl
sbb
fistps
pop
jns
test
lret
in
sub
inc
outsl
js
jmp
xor
jno
xchg
cmpb
xchg
cwtl
mov
mov
bound
jmp
sub
data16
fcoms
add
in
xor
add
mov
mov
cli
pop
or
lods
arpl
jae
pop
pop
mov
xlat
push
leave
call
pushf
call
ljmp
lcall
sub
loope
mov
cmp
sahf
sbb
ljmp
mov
add
xchg
shrl
jl
stos
sub
and
incl
cmp
adcl
mov
pusha
cmp
pushf
out
lea
icebp
subl
push
adc
dec
outsb
pushf
pop
fwait
mov
fldenv
push
decl
xchg
outsb
das
lds
lcall
jnp
stc
rol
std
dec
cmpsb
js
pusha
test
imul
or
lock
cmp
enter
inc
mov
stos
js
aad
add
xchg
dec
inc
test
movsb
jl
out
out
jg
jnp
in
aaa
cmp
mov
in
cwtl
loope
imul
repz
incl
clc
sbb
scas
cmp
dec
ljmp
lods
pushf
scas
xchg
sub
lock
decl
mov
lret
sbb
push
mov
cli
push
sub
and
aaa
arpl
shlb
sti
mov
lcall
mov
add
shll
xchg
je
xchg
sarb
stc
or
jecxz
push
fsub
mov
call
adc
imul
sahf
adc
divl
sub
aaa
mov
and
mov
sbb
and
lock
in
push
insb
loop
pop
orb
std
adc
in
in
pusha
jb
sbb
sahf
dec
shrl
push
ficompl
in
add
subl
dec
mov
jnp
ljmp
adc
cmc
lahf
inc
jmp
or
rcll
fcmovne
sbb
mov
call
cltd
and
mov
cmp
aaa
js
jp
sbb
mov
ret
fs
subl
je
push
adc
adc
stc
cmpsb
mov
xchg
sti
xchg
adc
push
int3
pop
decl
les
mov
popa
pop
and
fcoml
fwait
loop
sbb
sar
clc
adc
mov
test
cmp
ds
add
mov
notl
iret
mov
pushl
outsb
mov
insl
outsl
repnz
js
pop
cltd
jmp
pop
imul
cli
sar
pushl
pop
dec
jno
inc
testl
inc
add
push
push
xchg
js
xchg
pop
test
adc
ljmp
out
jmp
out
push
xchg
xlat
aad
mov
xchg
jo
or
push
decl
dec
lock
leave
pop
adcl
add
out
dec
xor
cmp
sbb
or
sbb
dec
jp
or
jne
push
push
in
cs
call
mov
out
sub
adc
push
push
xchg
mov
jmp
mov
out
popf
dec
iret
mov
cmc
cld
jbe
popa
jns
dec
inc
movsb
mov
decl
inc
lock
mov
in
jl
ss
xor
push
and
jecxz
or
or
pushl
shlb
lds
loop
js
cmp
call
or
into
decl
push
mov
aaa
xchg
shrb
sbb
pop
clc
cmp
aam
mov
lds
push
add
sub
rcll
fists
stos
fcoml
loop
cmpsl
inc
dec
sahf
fisttps
push
mov
fnstsw
cli
jmp
inc
test
loope
loope
pop
testb
mov
mov
add
decl
and
lahf
es
aas
shll
mov
fists
je
inc
dec
inc
hlt
nop
dec
hlt
imul
jnp
or
and
adc
mov
mov
out
test
out
adc
imul
mov
rol
cmc
pop
inc
xor
push
js
push
fs
mov
xchg
adc
incl
ret
adc
or
aas
xchg
sahf
popf
cli
scas
pushf
inc
clc
int3
mov
or
inc
inc
decl
mov
jne
mov
hlt
out
mov
frstor
inc
dec
fwait
inc
int3
or
call
jne
enter
call
cmp
imul
mov
push
sub
push
hlt
jg
or
fwait
pop
repnz
and
ljmp
hlt
pusha
lock
lcall
xor
inc
idivl
cmpsb
scas
adc
or
btr
mov
jg
xchg
jne
xchg
and
not
out
in
outsb
stos
leave
mov
loop
xchg
add
mov
imul
pushf
xchg
cmc
lods
push
lods
push
imul
sbb
fnstsw
xor
jbe
dec
xchg
adc
or
xchg
shlb
sbb
mov
mov
xchg
cmp
lcall
mov
xchg
sub
and
lds
xchg
es
sub
mov
out
ljmp
mov
jecxz
mov
jnp
arpl
lods
sti
dec
push
popl
repz
pusha
mov
pushl
adc
fwait
and
sub
ss
sub
cmp
fwait
mov
pop
pushf
in
inc
add
addl
data16
ds
jne
sub
nop
push
test
inc
sarl
mov
fwait
insb
dec
cmp
std
outsb
mov
pop
popa
mov
clc
sub
sti
cmp
jmp
dec
inc
xor
jno
dec
fiadds
pop
inc
or
mov
outsl
add
call
jge
pop
adc
push
test
ss
xor
mov
inc
pminub
or
mov
ljmp
and
lods
je
cmpsl
add
sbb
xchg
fildl
mov
incl
xorps
xor
xor
mov
fldt
xchg
aas
stos
push
mov
add
xchg
int
sub
loope
rdtsc
test
addb
incl
sti
jmp
lock
jno
es
pop
xchg
sbb
enter
pop
or
out
imul
lcall
in
jbe
jg
mov
jne
fs
mov
jno
add
add
pushl
rcrl
pop
sbb
mov
aas
push
jno
idivl
jp
jno
fwait
ret
orb
call
or
adc
sti
cltd
pop
lcall
push
ret
sbb
add
jmp
sbb
ret
popf
mov
aaa
pop
fs
push
pop
jbe
bound
shl
loope
std
bound
jmp
popa
inc
xor
pop
ficomps
sbb
hlt
shlb
lcall
call
cld
jp
xor
lret
mov
sub
mov
gs
mov
ds
mov
out
mov
addl
pop
adc
sub
dec
xor
xchg
xorl
imul
ljmp
add
mov
add
aaa
mov
insb
call
adc
mov
call
out
jle
dec
mov
aaa
pusha
pop
shlb
inc
add
mov
and
js
call
sbb
out
add
mov
test
adc
xor
mov
incl
pop
pusha
add
ret
pop
dec
dec
aam
imul
rolb
mov
push
je
jmp
aad
add
test
mov
sbbl
jg
dec
dec
and
dec
or
decl
push
std
movsb
sti
sub
dec
imul
cmp
ljmp
mov
ljmp
ljmp
sahf
mov
xor
xchg
mov
into
adc
add
cwtl
ret
fidivrl
imul
decl
shll
adc
pop
cmp
repz
enter
setg
jb
stos
mov
cmp
lcall
lods
enter
int3
mov
fmull
push
shll
jae
sub
mov
mov
ja,pt
cmp
inc
push
stos
adc
aaa
ljmp
jmp
aad
scas
jecxz
sub
xor
dec
mov
in
lea
mov
push
ljmp
push
test
arpl
xor
xchg
xor
add
inc
push
rorl
mov
call
fistpll
xchg
les
add
adc
repz
lds
movsl
cmpsl
out
mov
fwait
aas
jmp
inc
and
ljmp
clc
add
aas
outsb
repz
leave
test
ljmp
inc
pop
jg
fsub
out
push
dec
adc
xchg
dec
cld
repnz
mov
test
mov
pushl
mov
mov
xchg
jnp
sub
test
sub
push
dec
and
lret
mov
sti
int
std
inc
nopl
jb
movsl
xor
xor
mov
inc
stc
shl
movsb
dec
mov
pop
mov
add
stos
out
lcall
cld
pop
std
add
inc
mov
incl
scas
mov
push
jecxz
pop
push
inc
icebp
push
mov
call
movsb
pop
cmp
mov
iret
dec
shrl
sub
xchg
or
xor
sub
jo
pop
mov
inc
lcall
sbb
scas
mov
pop
pop
cmp
mov
notl
aad
pop
pop
push
sar
pushl
jge
push
sub
int
sbb
pop
jbe
insb
jle
leave
push
test
insb
jno
push
pop
loope
or
incl
repnz
inc
pop
hlt
mov
iret
sbb
inc
cmp
iret
xor
data16
xchg
aam
fs
decl
mov
lea
inc
or
inc
or
xor
xor
insl
inc
ljmp
and
push
or
dec
mov
lods
dec
mov
jmp
adc
push
sti
cli
inc
leave
or
ljmp
scas
adc
ficoml
lret
shl
rcl
mov
cwtl
mov
inc
pop
inc
daa
jne
dec
cmp
lods
lcall
inc
mov
push
push
sub
mov
loopne
inc
xchg
mov
pop
loope
stc
leave
mov
fcoml
or
fs
inc
xchg
adc
jmp
mov
pushl
sarl
and
dec
xchg
cmc
pop
in
xor
ss
push
xor
mov
pusha
push
push
cmc
pop
jns
inc
cli
jb
test
jne
enter
mov
into
jnp
insl
jge
mov
lcall
sarl
and
mov
mov
aaa
mov
fs
jae
pop
enter
jl
pushl
mov
insl
dec
jbe
or
add
mov
sbb
mov
shlb
mov
lcall
push
cmc
bound
in
fmuls
aam
loope
roll
xchg
int3
stc
lcall
mov
int
sub
jmp
subl
fldl
cmp
fscale
cmp
push
das
ja
fwait
cmp
mov
aam
icebp
ret
cli
or
mov
ljmp
xor
mov
push
add
cmp
push
add
fiaddl
xorl
jnp
jnp
xchg
push
mov
xor
fcmovnbe
pusha
cld
sbb
fmuls
mov
mov
cmp
xlat
push
pop
mov
mov
lret
pushl
mov
push
xor
push
loopne
aaa
jns
inc
gs
mov
jg
pop
adc
cmc
xchg
sub
mov
add
jecxz
gs
adc
adc
ljmp
add
pop
xorl
fs
jne
fs
mov
decl
outsb
mov
sahf
inc
xchg
inc
lret
fs
stos
mov
push
jne
movsl
gs
insl
jmp
int
jmp
sbb
push
fcoms
rolb
adc
hlt
lods
and
sub
pushl
stc
pop
sub
inc
and
stos
imul
fildl
stos
mov
fsubrs
call
cwtl
andl
add
stos
clc
jo
jns
adc
mov
stos
decl
xchg
pop
cli
in
ret
mov
mov
repnz
add
dec
adc
add
jp
dec
xchg
mov
lock
in
test
adc
nop
sub
mov
xchg
in
aas
ja
movsl
mov
std
dec
push
mov
push
mov
jo
mov
cltd
mov
inc
xchg
jg
into
daa
or
dec
div
jecxz
inc
or
mov
ja
les
jecxz
fwait
jl
sti
xor
pushl
shl
outsl
inc
mov
in
pop
movlps
pushfw
sub
shl
sbb
lcall
ljmp
clc
jbe
bound
mov
sbbl
aad
inc
dec
mov
pushl
mov
push
adc
outsb
pop
mov
jb
in
sub
hlt
popa
std
orl
and
mov
xchg
pop
stc
push
in
lea
xchg
daa
lock
jmp
add
idivl
pop
subb
je
data16
push
push
add
mov
inc
out
movsl
arpl
push
daa
dec
aaa
inc
jno
adc
addb
rorb
aas
ror
ret
push
lahf
jp
popf
xor
dec
add
aam
jmp
aad
nop
mov
add
fbld
mov
mov
jb
mov
push
pop
adc
out
xor
mov
lcall
jge
fmull
lahf
fistpll
insb
and
xchg
in
jae,pn
and
mov
pop
call
mov
popf
in
loope
movsl
or
cmp
add
adc
cmpsb
jbe
mov
dec
stos
decl
dec
shl
into
iret
pop
push
out
shlb
sti
rclb
cmp
fisubrs
push
push
pop
sub
insb
inc
loop
pop
xor
out
gs
pop
int3
inc
in
ss
mov
mov
jo
aam
bound
push
jp
aad
mov
stos
jg
sbb
std
dec
sub
iret
scas
fcmovb
nop
scas
in
push
mov
into
sub
fidivs
loope
add
call
add
push
clc
pop
xchg
lods
sub
movsb
xor
dec
xchg
stos
orb
or
jle
cmp
and
push
cwtl
or
fs
add
outsl
mov
push
adc
dec
and
call
jae
jb
pushw
shlb
adc
nop
out
std
int
mov
jo
inc
sbb
dec
add
sbb
adc
cmc
pusha
mov
jae
cmpsb
pop
xor
call
or
fldenv
pushf
sub
ret
add
lock
orb
pushf
sbb
mov
dec
xor
fnstsw
stc
mov
js
idivl
jno
mov
std
dec
or
ljmp
int3
negb
fdivrp
js
mov
rcrb
add
loope
sbb
in
inc
dec
adc
ds
fidivs
movsl
jno
sbb
mov
cmp
mov
cld
cmp
inc
inc
pop
jnp
mov
jmp
mov
aam
icebp
cltd
jl
cltd
imul
pop
stos
cwtl
adc
enter
dec
int3
jbe
jmp
dec
testl
dec
push
dec
std
jne
movsb
subb
frstor
call
adc
movsl
stos
mov
xor
in
jno
dec
push
add
lods
es
pushf
mov
decl
fwait
adc
mov
adc
and
out
xor
jge
pop
ficomps
call
cltd
cmp
int3
mov
movsb
pushf
mov
mov
je
push
addb
lret
jmp
jecxz
inc
and
arpl
pop
cld
inc
lret
xchg
sahf
stc
test
jmp
inc
loop
cld
mov
imul
in
pop
push
mov
cli
sbb
push
xchg
adc
aas
je
cmpsb
and
maskmovq
testl
out
out
leave
push
in
stos
inc
xchg
mov
pop
and
cmp
repz
or
jne
dec
mov
jmp
scas
pop
in
adc
and
or
test
sarb
sbb
ret
stos
mov
decl
inc
rorb
iret
outsb
mov
jnp
sbb
or
aad
and
leave
xchg
jae
decl
dec
cwtl
imul
rcrl
mov
stos
bound
xlat
sbb
push
stc
loope
xchg
jno
adc
mov
lods
js
popa
mov
bsr
outsb
pop
js
sbb
mov
das
mov
jmp
sahf
push
or
leave
test
leave
stc
sub
or
test
cmp
jmp
add
and
testl
jge
stos
mov
lret
jmp
or
iret
or
xor
pop
pop
or
adc
imul
int
xor
icebp
dec
inc
lods
repnz
mov
incl
jg
add
xor
cli
movsb
mov
xor
adc
mov
jecxz
jmp
pop
add
pusha
mov
cmp
sti
adc
mov
roll
mov
gs
ljmp
cld
or
in
mov
dec
inc
and
inc
ljmp
pop
lds
dec
daa
cli
mov
test
imul
pushl
mov
jp
or
pop
pop
and
jle
je
cwtl
push
mov
das
push
xor
xchg
jne
incl
bound
pop
leave
fs
or
lahf
fs
sub
cltd
fdivl
sub
ljmp
in
loop
pop
mov
jns
or
pop
add
repz
mov
lret
pop
das
add
call
ds
enter
ss
mov
lea
call
xor
fs
lods
ljmp
data16
jnp
xchg
push
cmp
jmp
rcl
push
iret
dec
sbb
out
sar
jmp
sarb
push
insb
sub
jbe
scas
cmpsl
xorl
imul
sub
sub
mov
adc
movsb
in
xor
shl
shll
arpl
decl
and
test
aam
jno
insb
push
jp
fs
mov
mov
cmp
and
scas
and
lcall
jp
adc
adc
mov
sbb
std
out
xlat
mov
push
fistpll
mov
jmp
cmp
cs
mov
fstl
out
jnp
fucomip
xor
jmp
push
sahf
xchg
mov
aaa
xlat
or
arpl
dec
xchg
jnp
cmp
lcall
addl
int3
xor
es
inc
sub
jmp
and
rcll
xor
jp
xlat
dec
imul
pushl
ss
dec
add
cld
jae
cmp
test
aaa
das
sbb
push
jne
cwtl
xor
stos
jne
incl
xchg
push
mov
or
rcrb
mov
and
jns
push
decl
ss
mov
or
or
mov
xchg
xlat
out
sub
js
push
js
jmp
or
and
adc
ret
leave
xchg
clc
push
incl
loop
xchg
lea
push
push
ret
xchg
xchg
jmp
fbstp
repz
ds
cli
idiv
pushl
inc
pop
cmp
inc
lret
je
sbb
in
lods
mov
lods
cmp
jmp
lcall
adc
mov
dec
out
test
adc
adc
xchg
pop
jb
aaa
xchg
call
inc
mov
test
enter
ror
in
dec
fwait
or
fwait
cmp
adc
call
push
call
je
xchg
clc
mov
cs
mov
shl
mov
les
in
and
xor
std
jae
jne
pushf
insl
push
jne
cld
pop
cmp
jnp
ss
jbe
mov
decl
lea
add
lock
xor
dec
out
ja
add
xchg
dec
adc
lea
call
decl
stos
icebp
jb
jo
dec
inc
mov
jmp
loopne
cmpb
sub
mov
xchg
decl
mov
and
in
lcall
xchg
xchg
fwait
incl
sti
dec
add
push
and
and
or
pop
sarb
int3
into
push
push
mov
lock
jmp
lret
sbb
or
inc
jmp
sub
push
jp
fdivl
outsl
lods
mov
fisubrl
call
out
repnz
xor
movsb
inc
xchg
stos
out
and
sub
call
push
imul
in
inc
clc
push
push
adc
lea
ljmp
jp
gs
pop
fisubrs
and
push
std
mov
ja
loop
test
iret
sbb
jnp
xchg
sub
push
add
push
pop
dec
fisttpll
push
in
inc
cmp
leave
dec
sbb
sbbb
and
jmp
xchg
pmulhw
xor
pushl
mov
loopne
das
cmpsl
adc
test
mov
gs
xchg
fimull
mov
push
sar
std
enter
inc
adc
jb
arpl
or
mov
nop
jae
and
incl
mov
ret
mov
sti
aad
addr16
insl
mov
push
sub
lcall
mov
ds
xor
negl
mov
jg
push
xchg
fistpll
js
or
jnp
call
add
arpl
push
sub
mov
jb
imul
repnz
jmp
cmp
insb
push
incb
xor
out
out
push
lea
add
pop
ljmp
xchg
xchg
xchg
je
insb
jb
push
inc
cmc
and
loopne
xor
pushl
in
lods
js
jecxz
cmp
or
jecxz
push
hlt
pop
dec
push
inc
jo
aas
lcall
jns
sub
stc
add
ret
in
enter
popa
push
loopne
loop
aad
mov
incl
rorb
sahf
mov
popf
imul
add
leave
mov
fdivp
leave
jmp
dec
gs
and
lcall
sub
xchg
sub
sub
inc
or
call
ljmp
cmp
ljmp
out
xor
pop
cmp
jae
xor
cmpsb
addb
adc
cmp
mov
inc
push
out
lods
test
ljmp
dec
cmp
out
and
pop
lret
jle
cmp
out
cmpsb
stos
imul
or
decl
stos
insb
or
xchg
push
mov
loopne
aam
gs
incl
clc
mov
lods
add
cmpsb
mov
dec
xchg
popa
cltd
ret
or
mov
aad
dec
popf
push
push
lods
or
lock
jle
arpl
sbb
fs
sar
decl
jno
aad
gs
dec
mov
cmc
xor
into
dec
push
mov
jl
aad
push
mov
mov
loopne
or
ljmp
or
and
push
inc
sub
pushl
inc
lea
les
fists
shr
ret
outsb
out
pop
popa
push
jns
jecxz
mov
ljmp
inc
je
popa
addr16
int3
fistpll
mov
add
jecxz
iret
jg
or
cmp
icebp
mulb
arpl
outsl
mov
dec
subl
xchg
imul
xchg
shrb
in
pop
mov
sahf
adc
pop
call
inc
push
shl
and
mov
call
cmc
ljmp
jnp
jge
push
iret
out
sub
sbb
es
pop
loopne
lcall
lret
adc
jmp
ds
cwtl
inc
in
into
add
add
enter
xchg
arpl
call
out
mov
dec
sub
in
push
out
lds
push
mov
pop
xchg
add
jmp
stc
inc
and
mov
stos
fimull
rolb
mov
test
insl
xchg
mov
pop
push
jae
push
cmp
into
mov
xchg
das
fucom
cltd
dec
add
lahf
out
mov
ss
in
push
out
xor
das
pop
cmpsb
lcall
push
mov
add
or
std
pop
sub
or
dec
lret
stos
int3
push
test
pop
mov
cltd
leave
loope
lret
out
mov
fidivrl
insl
or
call
pop
jg
mov
adc
mov
mov
jp
pop
xor
imul
js
mov
out
gs
sbb
add
mov
ret
imul
dec
out
cmp
push
int3
int3
decl
cwtl
xor
int
nop
pop
xor
cld
sbbl
cmp
inc
bound
pop
xchg
ja
insb
inc
in
fistpl
test
scas
sub
push
mov
xchg
call
adc
mov
clc
stc
fcompl
int
push
stc
push
xchg
adc
repz
inc
cmp
js
insl
inc
mov
add
shll
pusha
mov
adc
push
mov
dec
or
dec
loopne
sti
lock
and
push
in
pop
test
je
cmp
decl
test
add
add
in
out
outsb
daa
les
mov
push
mov
jmp
cld
fs
lret
clc
ja
adc
icebp
dec
xchg
mov
incl
out
out
push
pop
and
test
test
out
lods
adc
sarl
cwtl
mov
les
ljmp
push
xor
aad
out
movsb
dec
in
test
pusha
adc
xchg
int
mov
decl
add
xchg
dec
out
cmp
cli
jmp
mov
cmpsl
and
insb
mov
out
mov
or
pop
iret
aad
filds
mov
les
outsb
int
fwait
cmp
mov
jg
lods
cmp
gs
xchg
pop
aas
add
fimull
cmpsb
popa
and
xchg
wrmsr
ss
xlat
pop
jg
stos
shr
pop
mov
cwtl
movsl
in
pop
add
in
or
jb
jo
gs
sar
lcall
aas
pop
adc
jp
js
daa
inc
mov
das
inc
lcall
call
sbb
popa
push
lret
push
cmc
and
cmp
in
xchg
mov
inc
push
xchg
fmull
xchg
and
sbbl
into
frstor
add
mov
fdivs
push
inc
je
push
pop
cmp
add
scas
xchg
data16
lahf
je
scas
stc
stos
lds
pop
adc
jbe
sbb
cld
jmp
push
stos
pop
addb
in
inc
daa
push
call
scas
sar
pushl
dec
scas
push
or
js
lahf
dec
jnp
dec
inc
mov
pusha
imul
ss
call
adc
cmp
lods
sub
pop
jge
int3
loope
shrb
xor
bound
lock
ds
ja
lcall
add
dec
aas
jns
jbe
out
sub
fdivrl
int3
bsr
std
imulb
jmp
adc
push
aaa
sarl
jae
jnp
out
mov
push
push
jecxz
test
jno
leave
pushf
pop
pushl
in
jp
cmp
pop
mov
dec
xor
insl
mov
loopne
ljmp
jmp
or
jbe
lret
sbb
fxch
int
jge
mov
or
out
push
pusha
dec
jge
jmp
pop
dec
push
and
or
dec
cwtl
pusha
xor
mov
ds
xor
jmp
jo
xchg
xor
mov
dec
xor
std
pop
xchg
rolb
repz
pushl
ret
daa
push
sarb
dec
sti
sub
jbe
sbb
mov
fsubl
pop
decl
lret
xor
lods
cmp
int
jo
add
xor
decl
mov
sbb
jbe
jmp
and
icebp
lahf
push
movsl
xor
call
sti
mov
pop
push
xor
inc
xor
in
cmp
mov
popf
or
cmp
call
hlt
dec
cmp
jns
adc
lds
mov
insl
addr16
mov
insl
pop
inc
mov
xchg
jb
aad
popf
andl
jne
xchg
jecxz
sbb
cmp
push
cwtl
cmc
divb
outsb
cmpl
adc
loope
pop
aam
jmp
pop
cmp
test
mov
push
push
push
push
xchg
sarl
or
sub
sub
test
or
pushl
out
jp
mov
lock
pop
shl
in
test
fidivrl
push
call
ljmp
dec
and
xchg
cld
xorb
mov
cmp
aaa
jp
sbb
mov
pop
test
decl
mov
or
dec
lcall
pop
jne
xor
stos
fcoml
sub
add
push
inc
aad
add
cmp
insl
sbb
stos
dec
fwait
cwtl
aam
jg
insl
ret
ss
push
in
inc
add
mov
pop
mov
in
cmp
dec
incl
enter
lret
or
or
leave
notl
repnz
sbb
mov
clc
mov
inc
shlb
add
les
dec
fisttpl
andl
je
in
shrl
cmp
mov
pop
xchg
and
push
adc
mov
mov
mov
jp
mov
decl
insl
iret
mov
shlb
and
inc
inc
add
mov
mov
lcall
fistpl
and
cmpsb
lods
mov
cmp
ror
lret
mov
shlb
add
push
decl
lahf
or
rolb
pop
add
enter
bound
jmp
xor
mov
fcmovnb
sbb
sarl
pop
dec
jecxz
pop
repnz
cli
push
jecxz
cmc
push
test
or
popa
jno
jmp
or
in
clc
xor
out
popa
mov
data16
push
addb
aas
rcr
loop
fcomps
decl
imul
lods
jg
stos
pop
fcmovbe
adc
dec
add
aas
cmp
test
out
and
or
cmc
rclb
dec
push
adc
or
enter
or
lret
pop
xor
incl
in
sti
jne
jns
fsubl
adc
mov
push
dec
mov
xchg
aaa
mov
lcall
ss
idiv
imul
xchg
push
lea
repnz
jne
jae
sbb
lcall
imul
inc
rclb
inc
and
fwait
lds
adc
mov
jg
incl
sub
mov
mov
mov
loop
int3
dec
push
and
sbb
imul
jmp
popf
stc
pop
inc
or
fmul
mov
pop
xor
into
pop
ret
and
ljmp
lret
xor
pop
gs
dec
movups
loopne
push
adc
fnsave
cmc
and
call
pop
adc
sbb
cmpsb
mov
mov
xor
mov
dec
pop
mov
jmp
dec
movsl
mov
icebp
xor
and
dec
or
sbb
and
xchg
andb
jns
leave
lods
mov
jb
dec
dec
scas
fldt
pop
jle
mov
xor
decl
cld
outsl
mov
inc
fisubl
mov
mov
mov
loope
ljmp
test
push
adc
xor
shrl
push
inc
mov
xor
lcall
jecxz
test
jno
mov
ljmp
dec
xchg
sbb
ret
mov
outsb
dec
incl
pusha
xchg
mov
xor
rclb
sub
mov
fistps
int3
pop
mov
ljmp
adc
addr16
call
xor
hlt
xchg
sbb
or
jmp
inc
ficoms
and
mov
scas
lret
inc
inc
xchg
andps
es
mov
incl
mov
int3
lret
jae,pn
jle
and
out
jnp
call
call
mov
mov
mov
mov
fisttpll
cmp
mov
cmp
jecxz
jmp
xlat
mov
push
dec
orl
lret
xchg
mov
dec
pop
aam
je
xchg
cmp
incl
insl
add
jl
dec
xor
icebp
mov
cld
lret
clc
sub
mov
call
sub
and
fucomi
aas
pop
push
lret
xchg
loop
ljmp
ljmp
adc
dec
jge
movl
outsl
xchg
add
mov
popf
in
into
pusha
push
add
std
clc
push
sub
xchg
mov
arpl
cmpsb
je
ficomps
mulb
jge
out
inc
iret
inc
fwait
sti
lret
ds
repnz
mov
lea
rcll
stos
flds
jecxz
pop
in
xchg
std
lahf
sub
mov
push
mov
jns
inc
dec
sub
pop
addr16
lock
pop
mov
mov
or
fwait
mov
pushl
cmp
sbb
icebp
aaa
sahf
shl
inc
repnz
test
lcall
sbb
or
clc
stc
push
test
movsb
mov
mov
add
mov
inc
cmp
int3
pop
add
and
pop
jmp
ret
mov
fstpt
mov
push
jo
rclb
mov
mov
adc
call
mov
sub
out
pop
cmp
push
and
arpl
sahf
cmp
imul
lods
jbe
lcall
jl
pusha
cwtl
dec
or
shr
mov
mov
ret
repz
fdivrs
push
push
xor
xchg
jmp
sbb
dec
shl
scas
inc
aad
or
fimuls
and
mov
lcall
push
or
data16
mov
sub
aaa
adc
xchg
dec
ja,pn
jmp
insl
xchg
call
addr16
out
lret
mov
insl
aas
xchg
loop
out
jecxz
cmp
inc
push
dec
imul
cmp
and
xchg
shll
lods
popf
roll
rcr
pushl
mov
dec
inc
cmp
jae
dec
push
lcall
push
loope
adc
add
add
mov
jns
daa
lret
pusha
sub
mov
ds
stc
jb
cltd
cltd
scas
sbb
call
inc
adc
dec
sbbl
xor
jmp
jp
lods
test
sub
pop
fwait
ljmp
mov
cld
dec
push
sub
cmp
inc
imul
out
xchg
in
jg
decl
es
test
mov
jmp
cmp
or
push
mov
test
cli
insb
jno
daa
cli
jb
pushf
jb
insb
test
add
fistpll
sbb
pop
jp
mov
xchg
mov
ljmp
mov
push
sbb
outsl
loopne
fwait
xchg
mov
pushl
int3
mov
jle
and
notl
enter
mov
jl
push
dec
dec
inc
xchg
and
fs
or
ljmp
jnp
test
rorb
inc
sub
dec
cli
mov
into
xor
cmpsb
bnd
xchg
mov
pushl
jnp
mov
lahf
rolb
aas
adc
sbb
sbb
sarl
push
in
cmc
jmp
add
push
or
fsqrt
jae
mov
adc
push
push
dec
jnp
test
inc
cmp
loop
adc
jmp
pop
push
jnp
or
popa
xchg
mov
or
xchg
jmp
aad
push
test
jmp
dec
xchg
pop
mov
iret
sbb
dec
jmp
pop
aad
cmp
imul
xor
mov
aam
inc
inc
dec
pop
and
mov
jmp
sti
mov
xchg
cmc
and
mov
out
cmp
jmp
jl
das
xchg
jmp
insb
pushf
xor
ss
pop
imul
pop
das
mov
jne
mov
mov
cwtl
icebp
jo
decl
push
into
nop
mov
popa
scas
sub
decl
lcall
lock
xchg
imul
je
dec
adc
out
loopne
sbb
cmp
push
jecxz
cmp
inc
test
daa
repnz
test
add
jecxz
jge
fbld
cmp
stc
pusha
push
push
decl
xorl
inc
shl
or
shll
add
scas
rorb
xchg
test
push
pushl
xor
rorl
adc
cmp
dec
icebp
insb
adc
mov
mov
call
ret
mov
pop
lahf
xor
cld
lret
lock
fwait
add
inc
and
incl
inc
xchg
xor
sub
pop
lods
loopne
out
xor
jnp
mov
call
lock
xor
pop
add
mov
dec
pop
es
sbbb
sub
lea
jmp
xor
mov
sti
xchg
or
and
shl
push
pop
cmp
call
mov
push
testl
sti
sub
pop
inc
cmp
mov
popa
in
stc
mov
jmp
fucomi
and
lea
bound
pop
and
lret
pushf
aam
xchg
in
add
push
mov
jnp
mov
les
stos
mov
out
test
and
test
lods
lcall
jae
and
mov
cmp
xchg
aad
jnp
ljmp
jmp
mov
jb
imul
push
movsl
pop
popa
xor
xchg
xchg
iret
push
imul
cmp
adc
rcrl
xor
aas
les
sub
popf
sbb
pop
or
incl
jbe
xchg
adc
mov
xchg
cli
and
nop
scas
pop
and
jmp
popf
and
add
xchg
pop
pop
mov
test
mov
lcall
push
int
fisubrs
jo
sbb
xchg
int3
jp
lcall
push
and
mov
mov
xchg
push
dec
mov
or
xchg
push
test
ror
and
iret
bound
mov
jnp
push
mov
clc
notb
pop
in
call
cli
leave
add
cli
fadds
mov
xor
inc
mov
es
loop
lret
mov
in
call
ljmp
mov
adc
hlt
mov
pushf
lahf
insl
jnp
xor
shr
fdivs
call
mov
into
xor
dec
dec
ja
imul
xorb
xor
clc
push
decl
lret
push
in
sarl
lock
lds
cli
lds
in
cmpsl
pushl
add
push
sbb
sbb
xor
and
pop
loope
cmp
xor
xchg
jne
push
or
jmp
mov
stos
int3
and
adc
jle
and
cmp
lea
mov
cli
das
and
mov
test
test
cmp
push
jmp
xchg
insl
rorb
sbb
jmp
daa
rcr
inc
and
or
out
sbb
mov
into
addl
or
neg
scas
xorl
dec
stos
rcll
dec
jmp
pop
fcmovnbe
jno
dec
mov
popf
sti
aad
jno
xor
mov
and
std
ret
popf
add
xor
xlat
push
aad
xchg
cwtl
adc
dec
stc
adc
jmp
in
cmpsl
aam
loopne
movsl
xchg
or
movsl
adc
jp
shrb
inc
mov
scas
xchg
cld
rcl
stos
decl
sysexit
fdivs
mov
outsl
fstpt
add
imull
scas
into
xchg
mov
mov
cmc
pushf
in
mov
je
mov
mov
sti
cmp
stos
in
jp
fisubrs
sar
jmp
push
cli
mov
cwtl
cmp
lods
add
cli
and
iret
clc
or
push
lcall
jp
ret
jae
xor
in
fdivp
aaa
mov
dec
mov
jmp
inc
leave
dec
push
sub
xchg
dec
nop
inc
popa
and
xor
rcr
xorb
incl
sub
mov
adcl
dec
or
loopne
stc
mov
iret
test
ljmp
lds
mov
into
push
imul
fsts
xchg
orl
dec
orl
call
jo
lret
add
ret
and
sbb
push
sbb
fwait
sub
dec
xchg
and
push
cmp
sbb
gs
cli
jecxz,pt
mov
adc
push
inc
and
lea
pop
mov
adc
iret
adc
dec
loopne
rcr
loopne
decl
jb
out
fisttpll
cmp
movsb
add
sub
xchg
shrb
inc
xor
add
sarb
fdivrs
fwait
sub
icebp
mov
pushl
rorb
dec
es
imul
mov
insb
in
dec
call
xor
in
jo
or
xor
lcall
iret
and
mov
inc
in
lds
cvtdq2ps
adc
mov
movsb
jl
push
add
jecxz
or
ret
jne
inc
pop
repz
mov
pushl
mov
dec
test
hlt
and
cmp
mov
cwtl
and
es
iret
filds
or
xor
jmp
stos
and
test
inc
icebp
cmp
cmpsl
outsl
andl
xor
xor
ljmp
adc
in
aaa
sub
into
mov
fs
adc
lea
add
lcall
fistpll
sbb
out
mov
mov
add
fdiv
mov
in
aas
sub
dec
pushf
sbb
xchg
push
je
out
inc
je
cmpl
enter
sbbl
adc
sbb
out
sti
push
pop
in
adc
pushl
mov
jo
vphaddbq
dec
scas
xchg
jg
iret
cmp
jle
les
cmp
dec
nopl
cmc
jmp
inc
cmc
nop
jecxz
mov
or
mov
lret
sar
rcrl
icebp
lahf
cmp
aaa
dec
sbb
jmp
jmp
and
push
imul
adc
push
and
cmp
dec
daa
fnstsw
dec
sbb
loope
dec
dec
xchg
mov
mov
sti
sub
push
mov
outsl
push
sbb
js
movsl
scas
sub
push
ret
lds
sbb
inc
jbe
or
inc
mov
inc
pop
cmp
mov
enter
push
mov
aaa
outsb
insl
sub
std
inc
popa
and
pop
push
sbb
movsl
pop
bswap
incl
pop
cmpsb
leave
sbb
cmpsl
add
rclb
push
outsl
daa
xchg
mov
push
incb
lcall
xor
fnstsw
cmp
testl
lret
subl
fbld
and
cld
or
xchg
movsb
movsl
xchg
cmc
xchg
jne
das
popa
lret
hlt
dec
and
add
lods
negb
mov
cmp
fucomip
xchg
adc
imull
pushl
jecxz
jo
leave
ret
jmp
jmp
adc
subb
andl
inc
imul
adc
call
icebp
xorps
nop
loopne
jle
negb
or
cmp
cmp
or
lcall
insl
add
sbb
cltd
dec
pusha
push
adc
push
notl
aad
outsb
in
insl
xlat
jmp
leave
jae
pop
xchg
and
out
mov
pop
outsb
and
shll
fst
mov
ror
call
pop
lods
sub
shl
and
faddp
inc
roll
ljmp
mov
das
dec
aas
fsts
cmp
xchg
out
addr16
pop
hlt
fwait
sub
jae
stos
scas
stos
inc
cmpsl
call
rolb
leave
dec
mov
cld
pop
mov
test
mov
movsl
push
lcall
frstor
inc
pop
xor
test
adc
mov
dec
bound
jb
pop
sub
xchg
mov
mov
dec
nop
dec
pop
and
sub
sbb
push
jecxz
or
or
jmp
add
jg
call
xlat
inc
cmp
ljmp
les
pop
adc
xchg
loope
add
lret
scas
mov
call
xlat
and
stc
clc
push
bound
jle
jmp
mov
sbb
pushl
pop
push
test
push
jae
fstpl
dec
popa
sub
inc
das
or
push
dec
jmp
loope
fisubrs
pop
adc
pushf
iret
icebp
fs
xor
cmc
stos
dec
in
call
stc
mov
aam
mov
xchg
shll
jmp
xchg
or
incb
aas
add
clc
jo
cmpsl
call
dec
cs
cmp
xchg
in
jmp
mov
repz
cwtl
cmc
and
pop
sub
mov
lcall
inc
xor
and
sub
dec
std
sub
jne
cmp
mov
and
adc
mov
inc
xchg
and
adc
sub
cld
jnp
es
jns
lahf
imul
dec
lods
xchg
decl
lret
pusha
cmp
jbe
into
decl
popf
pop
or
xchg
cmp
cli
add
jno
mov
mov
push
lcall
shrl
mov
imul
aad
adc
scas
out
mov
jge
repz
lcall
mov
cmp
or
fbstp
sbb
jbe
xchg
mov
shlb
call
es
or
loopne
pop
aam
and
lret
push
jmp
xor
decb
loope
pop
lret
adc
ljmp
jg
lds
movsb
ljmp
stos
jb
mov
ja
mov
sti
in
ljmp
add
loop
mov
sbb
jno
cmp
test
or
aaa
and
je
fadds
call
inc
repnz
lcall
and
lahf
sarb
fmuls
adc
sub
xchg
imul
into
pushl
addr16
push
sbb
sbb
notl
mov
mov
cmpsl
inc
mov
lods
mov
sbb
clc
and
pusha
jecxz,pt
andl
mov
jmp
in
fs
hlt
pop
and
inc
in
mov
test
arpl
mov
push
dec
outsb
jecxz
mov
and
insl
sub
mov
pushl
sub
mov
adc
out
call
cmp
xchg
pop
dec
xor
jns
cmp
decl
gs
inc
enter
push
or
sbb
repz
jmp
add
inc
pusha
imul
cmp
sbb
sbb
jl
flds
push
push
rorb
mov
inc
inc
stos
sbb
shrb
jle
jo
fwait
adcb
inc
pushl
jns
je
xor
insb
mov
pop
xchg
xchg
scas
arpl
cmp
in
sub
loop
pop
incl
cmp
jmp
sarb
cli
mov
das
cmpl
dec
sbb
push
and
pushl
sbb
andl
inc
push
adc
cltd
fisubs
shl
call
push
out
cmp
jg
incb
pop
lcall
int
into
iret
lahf
scas
loope
jle
call
mov
sarl
fwait
pop
adc
and
mov
mov
stos
ljmp
stos
mov
jbe
leave
fstps
enter
push
add
fisttpll
popa
mov
mov
mov
push
in
lods
lods
xchg
mov
loope
dec
push
and
mov
call
rorb
cmp
jle
lock
dec
hlt
aas
orl
faddp
push
mov
add
and
jns
sbbb
scas
cmpb
ret
rcrl
imul
jecxz
xbegin
call
shll
mov
add
fcomi
adc
cmp
lret
xchg
imul
gs
in
loope
push
xchg
in
jg
out
push
rorb
imul
stos
popf
imul
movsl
sub
loope
scas
inc
xor
mov
fadd
imul
cmpsb
adc
or
dec
je
push
lret
push
sbb
add
xchg
call
adc
scas
stos
ds
jmp
test
push
fsubr
call
mov
mov
or
imul
adc
mov
lcall
sub
rclb
fsubp
or
ss
into
and
hlt
mov
lret
testl
lcall
aas
push
dec
mov
mov
fistpll
fsubp
icebp
mov
rorl
jmp
adc
inc
inc
andl
rol
sbb
out
add
sarl
cmp
cmp
jge
fwait
enter
incl
mov
or
cmp
cmp
in
push
shll
jmp
scas
mov
jmp
movsb
lods
jno
or
sbb
std
add
adc
data16
repnz
arpl
call
loope
xlat
push
mov
fdivrs
adc
push
sub
clc
mov
sub
dec
or
cmpsb
xor
push
push
call
push
aaa
xor
jge
arpl
lock
mov
add
cmc
out
stc
mov
push
jno
fs
sahf
inc
in
inc
jmp
or
inc
xlat
ds
fiadds
mov
inc
pop
pop
sbb
loop
call
and
dec
out
ljmp
jl
cmc
mov
clc
jbe
outsb
jmp
xchg
sub
lods
lds
sarb
lcall
sub
pop
add
add
inc
repnz
into
ljmp
test
incl
test
lods
xchg
xchg
mov
lret
cwtl
mov
js
aas
jge
sti
cmpb
pushl
int
rolb
scas
imull
nop
out
sub
sarl
hlt
out
lret
repnz
decl
add
push
ficompl
adc
imul
adc
mov
call
test
ljmp
dec
orl
enter
or
inc
pop
dec
sbb
ja
shl
pushl
icebp
pop
sbb
jmp
sub
in
jb
cmp
mov
je
decl
or
or
bound
sbb
dec
shlb
dec
sub
fildl
lcall
mov
push
jno
mov
mov
addr16
mov
cmpsb
xchg
cli
int
push
idiv
mov
pop
int
imul
adc
pop
sti
je
gs
adc
mov
lods
andl
les
decl
pushl
cvtps2pd
adc
push
inc
mov
dec
in
inc
mov
das
jecxz
in
and
xchg
push
decl
les
jno
and
aas
movsl
clc
sbbl
jmp
lds
outsl
rdpmc
sub
xor
andb
call
jecxz
cmp
adc
call
inc
or
fcomi
aas
pop
dec
out
cmp
jno
dec
dec
mov
insl
push
and
in
lcall
shlb
push
lods
adc
and
inc
cmp
lea
pushf
pushl
jb
aaa
ja
push
lahf
xchg
in
jb
push
pop
cld
ljmp
inc
ljmp
inc
cmpsb
in
shlb
dec
adc
xchg
scas
pop
addr16
out
rorb
sbb
sub
imul
gs
test
stc
adc
inc
sub
pop
fnstsw
fcmovnb
inc
dec
sbbb
andb
xchg
or
push
sbb
adc
pop
call
xlat
icebp
gs
fwait
test
lahf
cmp
adc
ret
cmp
cmp
sbb
call
inc
fcoml
push
out
test
scas
xchg
xchg
imul
add
inc
xor
lcall
sbb
mov
test
ds
test
arpl
and
jle
mov
sub
xchg
adc
ljmp
sub
sub
test
bound
mov
cmp
ss
aam
push
adc
mov
repz
popa
popf
add
in
cmpsb
pop
filds
lock
push
add
sub
jmp
out
sub
mov
xor
and
xor
inc
lcall
jno
pushl
and
ss
inc
insb
sub
sub
mov
decl
adc
cwtl
test
jo
pop
push
cwtl
pop
pop
cmp
int
mov
iret
pushf
loope
jmp
shlb
mov
mov
cld
popf
fs
and
mov
cmp
and
cmp
adc
dec
outsb
xor
daa
add
arpl
jno
testl
pusha
sti
sti
xor
dec
adc
aas
inc
xchg
addr16
and
lock
and
mov
pushl
mov
loopne
or
pop
jmp
pop
add
or
ljmp
sbb
ds
out
loopne
cmc
aas
jns
cwtl
xor
push
sarl
lods
xor
flds
in
pushl
adc
dec
jbe
pusha
mov
push
inc
movsl
inc
sbb
add
js
lcall
jne
dec
outsb
pop
stc
xor
int
aaa
test
popf
repz
dec
add
iret
jae
lcall
lock
sti
jb
mov
inc
sahf
cmpsl
mov
outsb
mov
jecxz
insb
ds
out
fwait
ljmp
in
add
inc
in
and
lods
jle
inc
aas
lahf
adc
inc
leave
loop
add
fs
ljmp
mov
sub
and
sbb
adc
or
rcrb
pushl
addb
lahf
xchg
in
jnp
mov
gs
loopne
jle
pop
cmp
dec
xchg
xchg
inc
or
xorb
lods
mov
pop
ss
aas
adc
inc
insb
mov
inc
sti
xor
movsl
pop
mov
jnp
jnp
cmp
sub
pop
mov
ret
jge
sbb
xchg
inc
je
lret
test
sbb
cs
sbb
mov
je
fs
mov
ljmp
pop
xor
cwtl
sbb
adc
mov
ja
push
loopne,pn
jo
sub
idivl
xchg
test
jmp
sub
movsb
dec
cwtl
cwtl
sbb
mov
push
test
pusha
push
mov
decl
aad
inc
outsl
push
aam
mov
sub
jo
fistl
subb
bound
sub
fdivs
xchg
sahf
imul
adcl
shlb
ss
clc
inc
xchg
jmp
sub
sub
dec
test
push
jbe
shrl
lds
stos
pusha
js
inc
call
mov
mov
outsl
mov
pop
push
mov
dec
dec
cmp
sbb
jmp
mul
out
xor
sbb
aas
mov
stos
xor
push
inc
cltd
mov
mov
out
mov
ljmp
xchg
out
scas
into
inc
test
pop
dec
sub
cmp
addr16
xlat
sbb
add
stc
sub
inc
jmp
stos
cwtl
imul
movsb
push
je
push
pop
adc
outsb
jnp
xchg
cs
jl
jecxz
add
rcrl
xor
popa
sub
and
adc
insb
ret
rcl
mov
xlat
gs
and
sbb
and
sbb
das
popa
push
fsts
enter
lock
test
pop
fwait
decl
sbb
or
mov
xlat
in
mov
mov
popf
cmc
mov
inc
in
mov
sub
sub
cmpl
push
and
jp
mov
dec
sbb
or
push
add
add
cmp
les
push
test
orb
fs
pushl
push
dec
add
pop
pop
or
ret
or
xchg
icebp
outsb
mov
inc
push
sub
ljmp
pop
aaa
insl
cmpsl
xchg
mov
inc
mov
dec
enter
stos
ud1
aad
xor
adc
call
and
subl
sub
push
adc
jmp
int3
cli
fstpt
incl
test
aam
dec
enter
and
daa
lods
je
aas
push
sub
lcall
ljmp
cmc
add
divl
jmp
out
loop
and
shl
sahf
jo
xor
ljmp
push
jnp
add
cli
push
xchg
stos
xor
jle
lock
test
bound
push
push
and
cli
cmp
dec
xchg
push
ja
andb
adcl
jecxz
cmp
ds
decl
push
xor
lods
scas
jmp
xchg
mov
xchg
pop
mov
cmp
dec
and
lret
push
adc
push
addb
cmp
sbb
movsl
cli
inc
enter
adc
lret
jmp
lret
js
sub
fstpl
arpl
aas
and
std
loopne
loopne
or
cwtl
out
sbb
aaa
sub
ljmp
scas
iret
sub
inc
and
scas
push
das
dec
ds
negb
test
mov
jg
enter
incl
or
int
ret
test
ss
std
pushf
mov
jb
mov
xor
jl
pop
ljmp
sbbb
mov
sbbl
inc
xchg
stos
call
ja
push
scas
mov
cmp
fcmovnbe
lods
repz
sbb
pop
or
add
or
or
push
ret
mov
out
mov
mov
or
popl
xchg
cltd
cltd
mov
mov
xchg
out
mov
daa
out
daa
sub
loop
xchg
data16
pushl
push
movsl
cmp
imul
mov
sti
add
push
imul
repz
int3
cmp
pop
jp
int3
repz
test
xchg
mov
popl
call
or
lret
cwtl
jae
dec
adc
lods
add
les
xchg
int3
dec
leave
aaa
bound
das
comiss
ret
ds
test
push
mov
fs
loope
dec
sub
incl
xchg
push
xchg
pop
xchg
and
stos
dec
andl
nop
frstor
dec
pop
stos
jmp
data16
popf
cmpsb
sub
clc
jnp
mov
mov
and
in
lret
mov
call
in
mov
or
fisttps
add
jge
dec
std
mov
add
xchg
ljmp
ljmp
xor
jne
ds
addb
xchg
pushf
or
pushl
cmp
mov
cmp
xchg
jo
pop
xor
cmp
mov
push
jmp
in
in
inc
neg
xchg
insl
push
sbb
mov
cmp
or
es
jmp
enter
out
mov
xchg
push
mov
mov
lods
sbb
cmpsb
sti
rcrb
dec
cmp
push
int
ljmp
test
fistpll
xchg
mov
push
jge
loopne
add
in
inc
jl
push
sbb
jmp
sbb
xchg
and
add
ds
mov
fidivrs
push
mov
dec
dec
mov
insl
test
hlt
sbb
pop
nop
ret
xchg
push
jbe
add
inc
pop
cmpsb
movsl
mov
pop
icebp
mov
movsl
iret
sub
cld
mov
dec
mov
scas
push
incl
lds
sub
xlat
loopne
ds
or
push
mov
shll
and
ljmp
aas
jbe
mov
jl
dec
adc
movsl
or
loop
andl
in
int3
sar
pushl
push
loopne
add
xor
adc
fidivrl
pop
mov
aas
int3
jns
decl
cmp
xor
out
sub
jmp
mov
and
cld
into
popf
imulb
mov
call
push
lahf
hlt
stos
in
push
jbe
add
testb
jnp
repz
sbb
fimuls
sub
lcall
inc
icebp
pop
add
imul
dec
sub
jae
adc
inc
sub
lahf
iret
dec
incl
mov
inc
pop
mov
xchg
lret
or
and
cmp
in
and
add
mov
sbb
jp
incl
jne
mov
cmp
insl
rcl
mov
addl
mov
aad
loop
sar
decl
fcmovnbe
sti
add
sbb
cld
dec
fstp
orb
sub
sub
ret
pushl
nop
add
iret
ds
cmp
in
jl
sbb
daa
inc
hlt
inc
cli
mov
sahf
repnz
or
mov
xchg
movsl
mov
or
add
sbb
dec
fiadds
mov
leave
pop
cmp
and
push
push
dec
xchg
in
push
decb
scas
out
jmp
xor
pop
mov
mov
ja
xor
loopne
xchg
xor
cmp
ret
mov
movsb
sbb
ficompl
stos
sub
aam
pop
pop
and
adc
mov
in
ret
jmp
adc
incb
jl
mov
pushl
outsb
pop
repnz
xchg
pop
pushf
inc
mov
fwait
add
lea
adcb
ss
incl
pop
jmp
notl
insl
movsb
ret
and
adc
inc
jg
adc
repz
out
in
lcall
mov
repz
in
push
xor
add
sub
loope
jb
and
out
mov
pop
sbb
dec
xchg
inc
sarb
add
sbb
xchg
mov
sarb
decl
je
dec
in
jp
int3
mov
movsb
dec
mov
setae
in
inc
je
adc
decl
dec
xchg
inc
mov
push
addl
or
add
aaa
clc
pop
sub
pushl
out
pushl
jge
add
or
fadds
mov
adc
pushf
dec
jmp
or
or
mov
rorl
movsb
adc
sbb
cwtl
mov
in
mov
enter
push
mov
aam
sub
dec
es
sbb
bound
xchg
cmc
fs
push
rcrl
cld
push
lcall
jne
orb
fnstenv
xor
sti
mov
pop
push
lahf
push
inc
inc
dec
sub
or
or
fisubs
push
rcrl
pop
incl
bt
add
and
dec
xchg
test
push
inc
sti
das
jp
ret
xchg
adc
decl
pushf
mov
es
movsl
push
mov
mov
push
cmp
sub
jp
decl
addr16
pop
cltd
and
mov
aaa
xchg
push
aad
lahf
cmc
fistps
adc
mov
icebp
lahf
fimuls
pushl
dec
fmull
mov
jo
cltd
sub
rcrb
adc
mov
push
push
sub
decl
repnz
xor
lret
sub
dec
mov
xchg
cli
push
xchg
inc
ljmp
sub
mov
adc
jge
jne
push
add
xchg
and
ljmp
xor
popa
fnstenv
stos
xchg
rorl
daa
lahf
add
scas
fwait
mov
call
mov
xchg
pusha
aam
inc
xor
clc
fs
repz
xor
ds
jmp
xchg
add
sub
mov
add
add
dec
rorl
lcall
sbb
mov
out
int
mov
stos
mov
and
xchg
call
test
xor
or
into
lret
sar
testb
in
xchg
pop
imul
subb
jmp
out
pop
repz
xor
movsb
rcrl
orl
xchg
mov
mov
dec
mov
call
mov
cmpsl
aaa
xchg
pop
inc
inc
inc
and
out
nop
iret
pushf
cmpsl
xor
ljmp
dec
xchg
pop
fisttpl
pushl
cmp
adc
stos
inc
popa
and
adc
pushl
ja
inc
or
mov
adc
dec
std
sub
mov
dec
mov
adc
add
dec
mov
out
fldl
dec
or
mov
mov
cli
jbe
icebp
inc
dec
fmull
sbb
std
cmp
sub
aas
adc
or
popf
sarl
dec
inc
jns
pop
test
ljmp
jp
dec
inc
xchg
cld
shl
mov
loopne
nop
cmpsb
stc
shrl
sub
cmp
sbb
ljmp
out
popf
lea
adc
adc
or
xchg
xor
aad
idiv
incl
arpl
sbb
jge
pop
std
cmpsl
mov
cltd
stc
xor
sub
ljmp
cmpsl
stos
sub
ja
add
adc
mov
int
outsl
lods
decl
lock
in
notb
aaa
jnp
int
jecxz
or
dec
in
push
stos
in
dec
sbb
ljmp
pop
sbb
inc
popa
clc
xchg
jo
scas
scas
inc
ja
or
iret
or
add
sub
jmp
in
dec
inc
mov
add
push
popf
push
jbe
sbb
hlt
sbb
leave
adc
mov
decl
mov
je
pop
add
fstl
daa
addb
ds
xor
call
dec
cmp
push
xor
or
sarl
add
pushf
cs
fcmovnu
ror
jae
pop
nop
inc
add
jmp
movsl
test
mov
lock
cmp
in
dec
imul
or
lret
xor
decl
cmpsb
je
lods
sub
std
mov
add
stos
xorl
outsl
xlat
daa
ljmp
xchg
or
fsub
shlb
cmp
repnz
sub
xor
mov
pushl
ljmp
pop
addr16
daa
jle
jno
lahf
clc
mov
xor
gs
ljmp
fcmove
andl
mov
clc
mov
mov
lods
mov
decl
xchg
leave
das
mov
dec
pop
jp
mov
ja
dec
data16
jl
and
or
mov
push
inc
ds
icebp
sbb
xor
adc
scas
enter
movsb
push
out
int
cmpsb
cmpsl
sub
jge
addr16
mov
sub
jno
jnp
ficomps
in
rolb
mov
xchg
jns
push
shl
mov
adc
pop
inc
push
icebp
icebp
pusha
lcall
std
orl
inc
push
into
sub
mov
cli
push
incl
and
ret
adc
mov
or
incl
outsb
popa
inc
dec
mov
jne
and
hlt
mov
jns
and
dec
pop
or
and
setle
fwait
push
cmpsb
xchg
inc
pushf
xchg
decb
xor
test
cmpsl
sub
loope
inc
inc
or
xchg
daa
mov
xchg
adc
cs
fidivrl
shlb
sbb
std
loope
rcrb
lcall
jb
xchg
andl
xor
push
jo
sbb
jmp
adc
out
adc
repnz
jecxz
outsl
icebp
adc
adc
mov
jl
aaa
scas
enter
test
les
ja
nop
mov
daa
faddl
lcall
lcall
pop
mov
dec
mov
xchg
or
dec
lahf
sbb
pop
cltd
cmpsb
xor
inc
pushl
inc
add
inc
adc
cltd
fcoms
mov
fmull
pop
jo
cmp
jb
sbb
sub
mov
cmp
jl
adc
xor
mov
mov
mov
cmp
loop
rcll
mov
push
cmp
lds
inc
adc
cmp
and
adc
mov
jmp
pop
sub
hlt
subb
arpl
mov
test
int3
sahf
sub
xlat
ja
add
aam
mov
decl
or
imul
fnstsw
test
movl
inc
jbe
icebp
sbb
cld
jno
or
icebp
cmp
in
rclb
int
test
xchg
addb
and
aaa
call
idivb
mov
leave
test
nop
dec
shrl
aas
jge
jge
inc
inc
incl
inc
subl
xchg
or
and
fiadds
scas
out
jp
dec
jecxz
sbb
and
loop
jne
shlb
or
lods
je
sub
ljmp
clc
push
sub
add
movsl
insl
xchg
iret
out
inc
iret
and
dec
jo
sbbl
outsb
inc
xacquire
inc
mov
cmp
and
dec
ret
decl
das
imul
add
or
cmpsl
aad
les
jg
roll
test
incl
sti
jl
inc
mov
jecxz
sbb
inc
push
lds
hlt
sub
push
add
ljmp
cli
jg
add
das
sarb
mov
gs
ret
cmpsb
aaa
jg
adc
movsb
xor
sbb
call
mov
xchg
jmp
add
clc
arpl
fldt
push
mov
push
mov
sbbb
pushl
cmp
sub
daa
push
out
or
adc
mov
xchg
dec
movsb
aas
fldenv
mov
add
dec
decl
sbb
popa
adc
sub
out
cmp
inc
outsl
mov
mov
jmp
test
daa
lods
and
dec
out
mov
add
sub
cmpsb
pop
lret
fwait
cmp
push
pop
decl
inc
es
in
in
stos
fildll
and
cs
cld
mov
pop
call
call
addr16
sub
repz
data16
shll
test
iret
clc
dec
lcall
inc
xchg
rcr
js
addb
cmp
mov
arpl
and
lcall
lea
xlat
mov
xchg
mov
pop
into
add
cmp
push
pop
xchg
sub
test
aad
jns
inc
cwtl
lods
pop
enter
xchg
mov
sub
insl
pushl
sub
int3
inc
fwait
mov
jb
cmp
dec
xchg
rol
stos
jg
incl
nop
xchg
or
pop
popa
mov
fmulp
pop
insl
rdtsc
push
mov
push
xchg
mov
ljmp
sar
jl
lds
mov
inc
fldt
mov
test
gs
pushl
mov
add
dec
sar
arpl
repnz
andb
add
or
incl
cmp
inc
or
icebp
lahf
cmc
fnstenv
mov
xchg
dec
pop
add
cwtl
sbb
decl
cmc
pop
sub
cmp
fildl
push
and
cmp
test
sbb
cmp
mov
sar
mov
into
movsb
popa
push
frstor
popl
and
xchg
fisubl
ljmp
fsubrp
dec
inc
in
sub
lods
jnp
mov
mov
mov
jl
mov
mov
mov
iret
lds
push
pushf
arpl
jecxz
pop
aam
addr16
or
call
repz
sub
push
and
inc
jmp
mov
mov
lcall
bound
pop
pop
push
je
pop
int
xor
jmp
loop
pusha
cli
dec
push
sub
insl
push
insl
inc
pushl
jle
out
jno
loop
icebp
or
sbb
add
std
mov
mov
gs
shrl
pop
movsl
fsubrl
xchg
xlat
jb
lea
adc
mov
pusha
pop
imul
mov
push
jecxz
mov
fs
push
in
fcompl
outsb
sbb
ja
clc
nop
decl
popf
xchg
je
push
les
jle
enter
lds
sbb
push
pusha
sbb
lcall
out
js
jo
je
xor
jmp
call
out
inc
or
adc
loope
data16
pushl
in
push
mov
icebp
cli
push
lock
jle
push
in
lock
inc
sub
decl
imul
into
in
and
lods
leave
sub
outsl
pushf
jns
dec
sub
or
push
jne
cs
lock
xchg
or
mov
cwtl
push
ljmp
sbb
outsl
les
call
xlat
xchg
sar
call
ja
inc
xchg
sbb
xor
notl
out
sahf
into
and
mov
add
lret
pop
mov
inc
jmp
mov
decl
dec
das
sti
mov
mov
add
out
push
inc
adc
in
out
mov
hlt
cmp
call
adc
xchg
pop
shlb
add
jae
dec
repz
in
stc
ljmp
jmp
jmp
push
int3
out
mov
cmp
adc
pop
push
xor
lods
int
call
inc
negb
enter
push
mull
cmc
hlt
cmpsb
cmp
inc
daa
lahf
stos
lret
ret
xchg
sbb
outsl
stc
lret
push
add
sbb
xchg
dec
and
insl
pop
stos
lret
inc
pop
add
call
imul
mov
je
pop
repnz
out
add
in
lock
push
insl
decl
cltd
mov
mov
stos
xchg
and
scas
lods
aaa
stos
or
adc
aas
adc
aas
push
pop
lcall
pop
mov
jge
rcrb
xchg
inc
call
xchg
inc
mov
pop
mov
loop
decl
dec
inc
popf
fiadds
popl
mull
sbb
arpl
mov
sbb
and
mov
lcall
sbb
fnstcw
int3
and
sti
push
test
fwait
ja
aad
dec
cmp
and
aaa
pop
call
sub
cwtl
jg
cmc
js
mov
insl
xor
shrl
aam
ss
mov
fcomps
dec
push
cmp
call
or
imul
mov
aad
jmp
mov
or
xchg
xchg
dec
idivb
fimull
jns
dec
imul
in
lcall
leave
add
push
lds
adc
xchg
pop
js
cmp
cmp
faddp
gs
sbb
jg
fdivs
pop
adc
stos
mov
aad
mov
mov
lcall
jecxz
lcall
outsl
cmpsb
loopne
ja
mov
jae
gs
cmp
leave
cmpsb
adc
pop
adc
insb
jmp
js
dec
sarl
and
cmp
xchg
std
mov
adc
movsl
pop
push
sub
pushl
inc
and
daa
fisttpl
mov
mov
cmp
mov
jo
int3
loop
jp
mov
cmpsb
imul
mov
lret
xor
mov
jl
cmpsl
std
cmp
decl
test
mov
jp
ror
mov
iret
inc
pop
sub
incl
dec
neg
or
sbb
pop
sbb
push
test
mov
std
pushl
adc
and
mov
stos
sub
enter
or
call
push
xlat
lds
add
or
jp
test
inc
lcall
sub
dec
sti
and
inc
pushf
pop
fwait
xor
sbb
roll
lods
sub
stos
pusha
mov
stc
jge
xchg
mov
xchg
repz
rorl
cmpsb
pop
push
daa
lcall
or
pushf
in
incl
dec
jecxz
mov
lret
jle
pop
xchg
iret
enter
lea
fcmove
lods
enter
pop
and
inc
ljmp
iret
xchg
mov
sbb
jl
loop
test
ds
rcrb
fwait
decl
sub
push
movb
push
mov
jecxz
push
fwait
je
xchg
aaa
jo
jle
dec
push
cs
sbb
lahf
sti
push
push
rclb
test
stos
jne
outsl
add
push
inc
test
inc
adc
es
jae
stos
test
jne
test
in
in
scas
add
lcall
out
ds
outsb
loope
fcomip
cmp
adc
pop
sub
into
faddp
inc
fisubrl
into
mov
inc
cli
xor
xor
stos
mov
js
cltd
pop
insl
bound
ljmp
and
cmp
cmp
cmp
mov
in
cmpsb
jmp
sar
jmp
dec
pop
mov
cmp
xchg
inc
call
lret
arpl
mov
das
decl
jle
dec
pop
mov
cli
xchg
mov
setnp
push
call
adc
decl
add
testb
inc
dec
pop
rcrl
ja
jo
test
je
lods
pushl
js
fadd
inc
nop
dec
sub
sar
adc
sbb
aas
adc
xchg
push
cmp
sbb
call
aas
adc
std
lods
clc
pushf
adc
cmc
fs
rcl
mov
push
push
sub
jg
fucom
push
xchg
cli
movsb
aaa
je
jae
je
xor
sbb
cmp
les
lret
fisttps
lcall
pop
mov
jle
add
loop
jo
movsb
or
mov
lret
sbbb
imul
call
adc
lcall
cltd
test
xchg
fs
xchg
icebp
adc
incl
pop
mov
mov
mov
jmp
cs
aaa
push
pop
mov
lock
decl
dec
mov
lret
push
mov
lea
js
push
fstpl
in
sahf
pop
dec
out
out
sbb
pushl
or
sub
push
mov
iret
adcl
jg
adc
pushl
std
hlt
sub
jle
and
cld
bound
negb
mulb
lods
mov
or
lret
call
mov
mov
jo
and
scas
jo
mov
fstpt
push
imul
xor
pushl
push
add
lcall
push
xor
sub
push
add
dec
push
sti
mov
aas
add
dec
insl
mov
jg
xchg
xchg
pop
iret
lcall
pop
jecxz
or
push
jbe
jmp
add
dec
lods
inc
xchg
pop
seto
cld
add
pop
iret
loopne
scas
push
mov
push
inc
sub
push
push
rcrl
xor
lret
ja
dec
mov
or
stc
aas
jmp
nop
out
mov
dec
adc
dec
dec
xor
cld
lock
in
dec
push
lcall
rcr
jb
dec
mov
xchg
cwtl
movsb
cs
shl
enter
jno
sbb
xor
stc
lock
xchg
decl
dec
loopne
pop
pop
lock
mov
mov
insb
les
xchg
loope
jmp
mov
cmpsl
push
cmp
icebp
inc
or
test
ljmp
test
lods
adc
jno
add
mov
jb
das
addl
jbe
pushf
xor
iret
dec
or
ljmp
push
cltd
repnz
fbld
mov
jno
call
ret
lea
pop
cmp
inc
pop
fdivrs
imull
add
dec
and
sti
dec
sar
incl
mov
adc
dec
std
int3
dec
xor
mov
dec
arpl
pop
rolb
idiv
lcall
inc
push
or
push
lea
lret
mov
cmp
mov
sar
fistl
mov
add
sub
adc
jnp
sbb
mov
or
pop
jg
push
dec
sub
push
mov
or
fsubrl
inc
xchg
jns
mov
push
mov
jmp
popa
sub
insb
adc
sbb
push
cmc
push
pop
jb
push
push
jnp
mov
jne
fmull
inc
call
mov
cmpsl
sbb
jbe
jl
cwtl
mulb
adc
pop
and
push
and
jnp
cmp
mov
xor
aam
rolb
std
je
dec
jmp
jge
dec
mov
cmp
jns
inc
adc
insb
loopne
ja
inc
cmc
je
arpl
notl
rorb
repnz
xchg
and
decl
jo
xchg
jp
cltd
jge
loop
mov
lret
hlt
loope
sbb
jg
lcall
dec
and
and
popa
xchg
sbb
pop
push
xlat
jecxz
addb
pop
jge
dec
add
jmp
jge
sub
lods
mov
scas
mov
and
xor
daa
pop
add
push
push
push
push
mov
ffreep
or
cli
cltd
ss
outsb
jmp
insl
mov
daa
insb
out
sti
xlat
imull
pushl
add
mov
loop
fldlg2
mov
icebp
push
out
mov
and
jge
mov
ljmp
xchg
leave
fidivrl
mov
into
pop
ret
xchg
neg
or
scas
jl
jbe
cmp
insb
cmp
mov
iret
shrl
icebp
std
out
inc
inc
out
notl
xor
pop
mov
push
out
jmp
pop
xchg
adc
or
dec
push
pop
es
fldenv
dec
inc
add
or
fists
ljmp
adc
fwait
js
insb
or
repnz
ret
cli
int
or
mov
dec
aam
push
incl
idivl
out
inc
or
mov
mov
mov
dec
xchg
cmp
jmp
sub
adc
cmovae
sti
pop
mov
mov
jle
clc
and
lods
sub
xchg
inc
mov
stos
jmp
inc
or
aaa
es
pushf
mov
in
xchg
inc
jge
lods
out
mov
dec
popa
mov
mov
add
cmc
and
push
inc
mov
out
push
mov
in
mov
xchg
sub
popa
add
xor
inc
frstpm(287
pusha
lea
clc
in
xchg
call
out
inc
mov
cmp
xor
lcall
mov
inc
add
lcall
subl
and
aas
cmp
sub
mov
and
popa
repnz
mov
jle
fwait
mov
xor
xchg
sub
cs
aaa
xor
cwtl
push
int3
outsl
enter
mov
scas
xor
inc
in
adc
cmp
clc
mov
inc
notb
push
insl
dec
sbb
cs
cli
xchg
mov
inc
xchg
addr16
ljmp
jo
pop
loopne
inc
adcl
add
filds
repnz
pushl
jge
test
in
loop
rol
push
test
push
mov
cmp
cmc
cs
jp
mov
jle
cld
cltd
outsb
xor
jbe
mov
sub
pop
mov
fnstenv
lds
mov
call
mov
lods
loope
mov
lret
mov
xor
pop
incl
adcl
mov
pusha
sub
xor
sbb
adc
inc
shll
testb
jae
outsl
dec
shrb
icebp
dec
cld
es
sahf
sub
fs
cmp
inc
xchg
pop
inc
ret
inc
dec
lods
pusha
stc
test
out
and
mov
fisttpll
pushl
and
outsb
dec
mov
psubsw
pop
cmp
inc
punpckhdq
pop
sbb
push
mov
pushl
mov
in
sbb
in
in
fcom
ljmp
inc
negl
add
sub
call
pop
or
xchg
outsb
push
aam
mov
inc
push
stc
jbe
mov
sub
jo
xchg
pop
add
ss
pop
sahf
shlb
adc
int3
loopne
popf
sub
pusha
push
and
pop
pushl
clc
push
incb
jge
or
popf
stos
sub
cmpsl
dec
sar
pop
lds
sub
nop
std
stos
lods
jmp
loopne
fdivrl
flds
imul
daa
repnz
cmp
loop
ljmp
call
push
dec
cs
scas
clc
cmp
cmp
adc
push
adc
lret
jmp
push
mov
sar
mov
fwait
shrl
inc
push
insl
xchg
inc
iret
loop
dec
sub
xchg
fwait
sbb
add
sub
fsubp
push
je
xchg
push
ret
cmp
dec
mov
pushf
mov
push
or
shll
fnstenv
cs
insl
faddl
push
xchg
mov
jmp
insl
add
sahf
xor
and
or
addr16
lock
push
dec
pushl
cmp
push
addr16
enter
mov
xor
xchg
xor
call
or
int3
lahf
pop
data16
pop
mov
mov
ss
xchg
lcall
xchg
imul
xorl
pop
enter
pop
adc
cld
call
mov
sub
jmp
es
push
jbe
push
sub
pop
cmc
mov
mov
jmp
insl
xchg
xchg
push
iret
or
jb
jae
in
loop
mov
call
cmp
mov
call
mov
cmp
sbb
sti
test
jp
push
movhps
incl
stos
int3
negb
popa
loope
sub
cmp
test
cld
outsl
adc
pop
mov
decl
push
lret
in
movsl
adc
insb
mov
jmp
dec
lcall
fldl
jmp
sbb
jb
mov
mov
add
arpl
jmp
sbb
jg
aas
lret
fdivl
ljmp
scas
icebp
in
orb
das
xor
or
xor
inc
sub
decl
lea
cmp
push
cmp
jle
pop
push
inc
fcoms
mov
lcall
repnz
sub
dec
jg
or
xor
dec
lahf
push
mov
std
fwait
add
sti
pop
loopne
pop
xchg
sub
lcall
daa
xlat
bound
shlb
addr16
iret
sbb
ja
out
inc
push
fdivrp
mov
jmp
push
les
daa
bound
mov
sub
outsb
fwait
lock
dec
inc
fbld
push
call
cmp
bound
aam
sbb
scas
jecxz
test
out
xchg
fwait
jne
or
pop
adc
stos
add
aas
stos
aas
or
lods
sub
mov
dec
push
negb
cmp
jp
popa
std
lahf
pop
adc
ljmp
jmp
imul
pop
sahf
enter
leave
cltd
push
jg
sub
lea
xchg
mov
cmc
inc
xchg
mov
dec
jno
xchg
jne
lret
cmpsl
xchg
flds
sbb
enter
ds
or
incl
mov
sub
lahf
and
lret
jb
jecxz
mov
pop
cltd
mov
mov
shll
incl
scas
bound
pop
dec
stc
data16
jg
lret
mov
aam
inc
adc
dec
cltd
jbe
ljmp
xchg
cmp
aam
pop
mov
cltd
push
mov
inc
xor
mov
sti
mov
push
xchg
out
push
sub
xor
lret
push
sub
lods
fistpll
roll
sbb
mov
xlat
test
pop
sub
mov
pop
add
pushf
out
pop
insl
cmp
mov
lcall
jmpw
pushl
dec
je
jge
xor
jl
scas
nop
call
iret
stos
sarl
mov
and
test
sbb
xor
decl
je
movsb
xor
movsl
rclb
sub
mov
mov
insb
incl
pop
sbb
ja
and
into
sbb
sarb
dec
inc
cmp
call
ljmp
outsb
mov
jl
rol
leave
jnp
nop
cmpl
pop
jbe
xlat
add
jmp
cmp
dec
movd
add
push
xor
es
cmc
ds
xchg
pop
test
out
inc
pop
gs
cmp
inc
mov
test
leave
testl
stos
in
jmp
fcomi
decl
push
dec
es
cmp
add
adcl
stc
pop
xlat
pop
in
fs
jns
sub
jnp
lock
lcall
shl
sub
jne
fbld
inc
mov
pop
insb
and
daa
incl
sub
mov
nop
inc
or
shll
arpl
xor
jnp
and
sub
lcall
sbb
shlb
jl
cmp
push
sbb
movsl
or
out
movsb
idiv
jmp
outsb
ljmp
std
fs
mov
and
daa
enter
jl
je
xor
jbe
lcall
push
dec
btsl
leave
pop
scas
add
gs
cld
mov
fistpl
fcos
call
mov
mov
int3
andl
mov
in
cltd
mov
fistps
les
out
repz
sti
xor
mov
push
push
dec
insb
xchg
adc
ret
xor
lcall
rcrb
popa
push
data16
push
stos
test
mov
cmp
leave
ret
inc
mov
mov
jmp
sbb
xchg
loope
jb
inc
and
jne
add
inc
sbb
stc
stos
mov
jmp
dec
sbb
insb
inc
jl
ljmp
int
ljmp
jno
scas
jbe
call
push
xchg
jno
sar
jp
sahf
mov
test
adc
in
jge
xor
dec
or
and
xchg
stos
jl
mov
sub
aaa
test
jmp
xchg
inc
mov
call
push
cs
sarb
dec
dec
lret
jge
xchg
pop
outsb
dec
xchg
or
xchg
loope
cmpl
ljmp
les
arpl
sub
mov
lods
repnz
sar
dec
into
clc
inc
cmp
adc
pop
inc
fcoml
lock
call
rcr
mov
dec
mov
and
push
cmpsb
aaa
imul
call
and
mov
shlb
movsl
in
fwait
mov
pop
jnp
jns
repz
jae
lcall
cmc
sub
cmp
push
shrl
sbb
repnz
cmpsl
mov
scas
into
stos
cli
test
movsb
jbe
decl
lret
scas
mov
pop
xchg
mov
jmp
cld
jge
sub
xor
iret
xchg
jmp
pushl
inc
adc
rcll
push
push
dec
rol
pop
shrb
jp,pt
inc
pop
adc
and
jae
cwtl
lods
arpl
pop
mov
cli
sub
sub
scas
pushl
das
or
cmp
adc
int3
repz
clc
cmp
fmuls
int
idiv
incl
xchg
xchg
ret
jle
subl
mov
jle
jl
rorl
pop
test
dec
outsl
xlat
xor
leave
add
movsl
repnz
mov
dec
add
lahf
call
push
jle
repz
lret
xor
dec
inc
cli
stos
inc
and
test
dec
xor
fbld
inc
jo
dec
push
aaa
xor
xchg
mov
repz
inc
jecxz
fs
jbe
test
push
ficomps
add
cmpsl
test
inc
add
xchg
xchg
jmp
cs
adc
ja
xchg
pop
mov
push
pushf
das
nop
movsl
rcr
addl
int3
add
lea
std
js
pop
ja
test
mov
or
int
inc
cmp
or
xor
cmp
ficompl
pop
add
inc
out
addr16
pop
xor
dec
xor
pop
mov
pop
aam
lods
cli
push
push
jmp
adc
test
fadds
fisttps
and
data16
mov
and
xchg
dec
cmp
enter
pop
xchg
dec
ljmp
adc
add
dec
popa
cmp
pop
inc
pop
pop
sub
cmp
sub
incl
roll
jg
cwtl
push
fucomip
data16
jmp
add
ss
mov
ljmp
gs
jne
mov
mov
adcl
mov
jo
inc
add
adc
jg
pop
inc
adc
mov
jmp
pop
and
jns,pt
nop
jge
popf
xchg
fs
push
lods
add
mov
test
loopne
push
lock
lret
clc
enter
jmp
xorb
lret
xor
mov
jns
call
divl
jecxz
xchg
pop
jb
pop
pop
insl
call
mov
dec
aad
jne
rcr
andb
xchg
movsl
mov
lcall
cmpsl
jmp
lock
mov
dec
push
xchg
push
stc
loopne
setb
test
inc
aad
xchg
lcall
inc
mulb
jne
leave
movsb
pop
push
lods
lock
popf
ljmp
xlat
les
and
pop
cwtl
xlat
xchg
jae
sbb
dec
orb
mov
jne
imul
cmp
nop
xchg
or
and
fmull
loop
stos
push
fiadds
pusha
pop
mov
aas
outsl
mov
dec
cmpb
cmp
push
jb
sbb
sub
pushl
out
ljmp
addr16
in
xchg
out
adc
mov
insb
mov
dec
xchg
pop
cs
adcb
in
fdivrl
lods
cmp
popa
test
cli
cwtl
arpl
and
or
pop
xchg
adc
xor
pop
xor
mov
pop
or
out
jnp
and
mov
jo
dec
shl
mov
call
mov
pop
xor
movsb
mov
dec
js
sbb
out
cmp
shll
std
lods
cmc
out
cmpsl
fiadds
pop
xor
call
or
cwtl
aaa
dec
pusha
out
cs
lods
mov
pop
fiaddl
pop
jo
fdivrp
lcall
sbb
testb
xor
mov
sbbb
in
sub
inc
loopne
mov
fstp
leave
int3
mov
repz
nop
mov
jne
aaa
sub
sub
ljmp
push
arpl
cmp
insl
inc
lret
and
or
pop
push
test
lds
fucom
outsb
lahf
nop
insb
add
out
adc
push
addr16
cli
push
pushl
pop
into
push
in
int
or
sub
stos
xchg
lods
add
and
or
push
ret
test
decl
int3
xor
jmp
les
test
cmp
xor
icebp
jne
cmp
adc
data16
call
mov
jnp
out
mov
or
inc
mov
cmp
test
fildl
dec
or
pushl
xchg
aad
icebp
mov
ret
xchg
mov
bound
adc
ret
out
stc
pop
pop
push
push
call
js
imul
std
mov
xchg
sub
incb
mov
add
call
push
xor
or
mov
inc
sbb
dec
push
dec
stos
mov
dec
sub
pop
test
mov
fists
xchg
cwtl
jg
add
jl
js
pop
jnp
push
outsl
lcall
int3
inc
inc
dec
sbb
inc
shll
subb
aam
fcmovnb
pop
mov
dec
test
pop
ljmp
dec
addl
xchg
xor
xor
lahf
jge
mov
roll
jmp
push
call
jo
aas
sub
adc
test
data16
out
and
add
jmp
shlb
dec
repnz
jmp
fsubl
dec
inc
mov
dec
leave
jmp
push
outsb
pop
scas
lods
inc
fmulp
xchg
add
loop
fsub
jb
adc
std
sbb
mov
ss
xor
in
lds
test
test
add
inc
or
adc
and
in
aam
faddl
insb
jns
mov
cmp
mov
ss
loope
push
popf
inc
pushl
out
mov
adc
dec
jno
inc
or
rclb
scas
lret
out
aas
stc
add
int3
in
incl
sub
xchg
icebp
stos
out
jno
ficoms
test
stos
iret
popa
push
jp
pop
push
mov
jmp
mov
lds
jmp
sahf
ss
jbe
or
jmp
andb
repz
jl
pop
mulb
outsl
nop
xchg
ss
mov
aad
adcb
sbb
pushl
stc
insb
dec
scas
mov
mov
xchg
rcl
test
or
jle
int
adc
call
mov
ljmp
sti
out
sar
mov
dec
cmp
push
cli
ja
xor
rclb
lret
sbb
call
xchg
cmp
je
sahf
sub
scas
jb
mov
repnz
jo
ljmp
and
flds
jno
jecxz
jmp
outsl
adc
xchg
outsl
xor
sbb
scas
and
lcall
popf
movsb
lret
sbb
and
xchg
ss
clc
cmpsl
sbbl
pop
in
daa
pop
jp
cmp
incl
cli
adc
jge
sub
fbstp
xor
aam
iret
mov
or
mov
inc
dec
mov
mov
mov
fwait
and
sub
mov
hlt
xchg
and
lahf
fcos
ljmp
xchg
lcall
cld
add
arpl
adc
mov
cmp
push
insb
aam
and
xor
int
sub
cmp
gs
cmp
add
inc
mov
or
les
cld
sub
push
fldenv
lcall
cmp
mov
ljmp
pop
stos
xchg
je
in
push
scas
xor
sub
and
xchg
call
loope
imull
xchg
mov
shl
xchg
sahf
sarl
int
clc
movsl
incl
outsb
cmpsb
or
push
imul
pop
imul
pop
mov
popa
mov
add
push
adc
jnp
mov
adc
ss
mov
out
jecxz
jge
leave
outsb
adc
cli
incl
and
push
jp
jns
adc
notl
std
mov
push
jb
mov
call
pop
sub
shll
pop
les
ds
xor
pop
bound
fistl
dec
jne
xchg
movsl
movsb
and
psubusw
xchg
cs
adc
call
ljmp
data16
xchg
fdivp
incl
inc
jp
push
ficoms
std
jo
in
mov
jbe
das
stos
mov
addb
incl
cmp
subb
andb
ret
js
scas
push
or
cmp
cli
cwtl
sarl
mov
push
xchg
mov
add
ret
movsb
sub
adc
pop
mov
lds
fs
decl
jnp
arpl
push
insb
jle
lcall
and
negb
inc
test
clc
aam
ja
or
lcall
sub
jne
jb
push
fisubl
stos
ljmp
jge
sub
inc
testb
pop
sbb
push
mov
nop
xor
mov
call
je
or
mov
jnp
and
lret
pushf
int
mov
lcall
push
push
bound
dec
xchg
sub
add
cld
rorl
push
and
dec
je
je
out
cmp
hlt
inc
xor
outsb
push
inc
xchg
add
mov
aaa
mov
mov
xchg
cmp
jbe
or
addr16
call
xlat
addr16
add
xchg
mov
push
lock
dec
lods
cmpsl
rcrl
mov
insl
insb
adc
scas
mov
or
popf
jmp
pusha
idivb
shl
movsb
iret
sbb
dec
and
mov
insl
dec
pusha
and
inc
mov
cmp
adc
clc
or
sbb
dec
push
push
pop
jp
and
mov
dec
mov
ss
popa
movsb
add
push
jle
daa
dec
loopne
xchg
fisubrl
inc
jns
sbb
mov
lods
aaa
ljmp
xchg
mov
sar
lcall
mulw
pop
push
xchg
lods
into
jns
or
addr16
mov
dec
mov
and
jecxz
stos
cmp
mov
dec
pop
inc
imul
jmp
xor
insb
jns
and
dec
out
push
xor
paddusb
andl
clc
xor
flds
push
ljmp
pusha
mov
ja
movsl
xchg
shlb
sub
call
mov
jmp
cs
mov
out
fwait
jo
adc
xchg
push
jmp
add
ret
lods
cmp
pop
mov
push
sub
or
in
mov
adc
cmp
xchg
ja
ljmp
jae
jecxz
sub
and
popa
movsl
mov
pusha
inc
adc
dec
pop
cmc
js
cmp
sbb
popa
cmc
sub
xchg
fildll
push
pop
xchg
mov
cmp
sar
call
nop
fisttps
addr16
into
mov
jbe
jg
add
xchg
shlb
pushl
and
jl
mov
jl
and
ds
les
or
mov
push
pushl
adc
call
push
movsb
push
add
stc
xor
or
decl
fisttps
mov
adc
call
loopne
jo
out
mov
sub
dec
addr16
gs
jge
out
jg
xchg
jp
bound
dec
xor
and
inc
xchg
sub
and
dec
fsubrs
push
jne
and
mov
sbb
add
in
push
xlat
lret
mov
rcrb
incl
inc
mov
aas
std
aaa
mov
jne
mov
or
call
popf
add
arpl
lock
ret
testb
jge
mov
sbb
mov
movsb
sub
call
test
shlb
loope
movsb
and
jle
ss
inc
pop
in
ja
push
xchg
jmp
orb
stos
dec
gs
inc
outsb
dec
ss
leave
dec
in
adc
lods
popa
fsubrs
and
pop
sbb
decl
int
and
out
add
imul
dec
dec
inc
xor
cs
xchg
jns
dec
push
mov
incl
or
or
fdivl
add
ss
xchg
mov
jmp
push
pop
xchg
push
xchg
or
cmpsb
dec
mov
iret
xor
mov
shlb
sub
loopne
addl
hlt
add
jg
ds
and
pop
flds
hlt
clc
mov
push
lret
lcall
mov
daa
bound
mov
lcall
xchg
mov
sub
das
sbbb
jbe
or
insl
push
mov
out
dec
dec
fstpt
fcomps
imul
mov
fwait
jge
mov
outsl
xchg
xchg
fimull
aad
sar
clc
enter
adc
or
sub
push
lcall
dec
pop
imul
nop
jmp
pminub
mov
and
pop
add
mov
cmp
mov
mov
add
lcall
lods
lcall
jb
lret
push
push
adc
int3
lods
and
scas
test
sbb
jle
adc
jbe
cmp
in
jle
add
aas
call
mov
paddusw
iret
mov
loopne
jns
dec
and
push
lret
cmp
or
ljmp
jb
imull
jg
xchg
movsb
test
push
cmp
pop
stc
jl
sbb
insb
push
push
cmp
call
cmp
cmpsl
xchg
sbb
push
mov
cwtl
lock
xchg
dec
insl
push
dec
xchg
xchg
cmp
lcall
jg
cmp
ljmp
or
dec
cmp
jb
or
pop
jle
xchg
pop
and
fidivrs
ja,pt
dec
lds
pop
adc
icebp
mov
cwtl
pop
shufps
jp
cmp
out
lcall
negl
jle
pop
mov
pop
lds
push
fwait
add
add
jmp
sti
jmp
daa
pop
and
fbld
push
stos
mov
push
push
push
xchg
out
mov
incl
bound
mov
add
or
arpl
lds
or
loopne
addl
fdiv
jl
daa
xor
les
mov
lods
xchg
xor
lret
adc
mov
incl
adc
adc
xor
jl
int3
mov
pop
les
jg
test
dec
in
sub
dec
cmp
jmp
addb
arpl
scas
or
sahf
push
mov
faddl
aad
inc
ud0
pushl
leave
sbbl
or
dec
lods
pop
lods
jl
testb
lahf
shlb
or
sar
decl
lea
rcr
lret
sahf
push
sbb
scas
jae
lret
jae
int3
adc
inc
pushl
outsb
pop
push
xor
and
fiaddl
movsb
push
rolb
or
add
pushl
adc
mov
mov
push
pusha
leave
nop
mov
xor
mov
pushl
push
mov
adc
jo
imul
pusha
push
mov
stos
lahf
mov
mov
std
mov
jmp
and
and
xor
adc
push
jo
lds
shll
cmp
insb
sub
inc
lock
sbb
lea
fwait
mov
shl
ljmp
dec
into
sbbl
jp
and
pop
inc
in
shlb
das
cltd
push
sub
lcall
stos
xchg
cmc
push
adc
ss
data16
loopne
popl
testl
or
jmp
out
fidivl
addr16
cwtl
push
imul
ret
rolb
sbb
decl
lea
push
cmpsb
add
push
pusha
mov
cmpsb
mov
xor
cmp
ljmp
call
hlt
dec
pop
pop
imull
gs
icebp
inc
pop
cmc
fldt
xchg
adc
cmp
outsl
sbb
movb
jns
jp
into
movsb
shrl
inc
movsb
push
push
loope
adc
in
jmp
add
js
add
jp
ds
mov
mov
jbe
push
fldl
incl
inc
rcll
outsb
inc
push
fimull
push
jae
lea
push
cmpsl
nop
dec
push
mov
decl
xor
ss
add
out
sahf
mull
and
dec
inc
mov
pop
sub
incl
cwtl
jge
in
dec
xor
out
dec
add
inc
or
cmc
xor
jbe
scas
mov
cmp
shll
push
aaa
xchg
mov
xchg
jno
icebp
adc
and
and
inc
and
adc
inc
leave
das
cmpsl
mov
sbb
xchg
mov
mov
lret
sbb
pushl
inc
aas
fimuls
push
hlt
inc
mov
lret
aaa
aas
cld
jge
enter
sub
decl
mov
xor
in
stc
invlpg
push
sub
outsl
lahf
inc
jb
lds
mov
lcall
jp
or
sahf
pushf
jmp
xor
out
fildl
shlb
dec
and
ljmp
int3
pop
hlt
jge
xor
mov
lret
js
pop
stc
sbb
jle
and
adcb
fs
test
adc
add
xchg
pop
push
lret
mov
js
push
ficompl
mov
stos
push
mov
pop
add
push
mov
push
pop
add
ljmp
arpl
stos
fistl
push
add
mov
std
prefetch
sub
xchg
and
insl
jbe
les
call
xchg
ss
pop
shlb
mov
pop
xor
fcoml
outsl
jmp
adc
call
sub
jmp
fnstenv
push
jg
out
mov
push
ss
dec
jmp
mov
dec
add
jb
subl
idiv
outsl
insb
push
mov
push
xor
inc
fcoms
stc
jne
mov
push
in
jge
ds
and
mov
pusha
push
call
nop
mov
xor
mov
cmp
pop
push
fldpi
cs
movsl
ljmp
mov
jge
push
cmp
jae
je
test
add
push
sbb
pushl
mov
enter
adc
std
and
decl
fldt
sbb
leave
xor
fimull
adc
xor
add
aam
outsl
xchg
lcall
jmp
add
pop
out
adc
add
out
mov
jno
cmpsl
push
fistps
decl
nop
iret
inc
inc
and
ja
aam
cmp
je
and
xchg
cmp
das
and
push
xchg
jmp
pop
xchg
adc
lret
ds
jae
mov
ret
decl
push
mov
daa
gs
test
repnz
cmp
dec
inc
test
add
and
hlt
sbb
shl
jmp
adc
adc
jmp
mov
minps
adc
xchg
adc
jmp
ss
jne
int3
add
xor
inc
inc
dec
enter
xchg
cmp
mov
sub
nop
mov
xchg
jae
xchg
dec
pop
test
imul
mov
xor
loope
decl
cmpsl
pushf
mov
xchg
test
lcall
mov
add
jg
lcall
cmp
sbb
cld
test
xlat
pop
stc
stos
jmp
loope
push
ds
imul
cmpsb
aaa
cld
pop
and
out
pop
xor
fists
loope
call
mov
dec
xor
xchg
sub
inc
mov
xchg
inc
mov
js
sbb
sub
mov
mov
pushl
or
pusha
movb
insb
mov
push
jnp
xor
nop
pop
inc
pop
pushl
mov
testl
cmpsb
mov
mov
dec
pop
fnstsw
jmp
mov
std
je
mov
dec
mov
jle
push
cmp
and
bnd
pushl
cmp
pushf
add
add
lods
lret
ds
std
and
incb
decl
fstpl
outsl
mov
add
push
enter
das
lcall
popf
sub
adc
inc
inc
stc
int3
and
call
ffree
rorl
dec
xor
lret
pusha
pop
sbb
call
pop
adc
loop
jns
adc
pop
add
jge
fcomps
push
call
adc
lcall
test
pop
ss
jno
xor
sub
and
leave
pushl
call
aas
and
cmp
jecxz
adc
add
xchg
jge
cmp
out
les
inc
jg
mov
fdivp
cmpsb
cmc
push
add
pusha
inc
dec
dec
outsl
ret
incl
nop
loope
insb
and
or
repz
lds
mov
mov
xlat
data16
dec
enter
or
push
loop
mov
daa
out
imul
xchg
dec
jbe
cmpsb
sbb
jmp
jecxz
add
dec
es
or
leave
sub
push
cwtl
daa
add
ljmp
cmp
pushf
notl
std
ror
insb
adc
aam
imul
inc
jo
clc
rol
jmp
inc
mov
int3
dec
or
out
ficoms
insl
out
aad
mov
inc
decl
pop
push
aaa
in
and
lcall
test
xor
pop
sbb
pushl
mov
mov
adc
fyl2xp1
mov
aaa
arpl
js
mov
push
sub
xlat
mov
icebp
jae
jmp
xchg
insb
ffreep
in
add
xchg
push
sti
inc
pop
aad
imul
jecxz
std
xchg
sarb
adc
inc
sub
push
adc
cld
xorl
fwait
adc
inc
mov
xor
popa
imul
jp
popa
mov
fmull
push
jns
cmp
decl
mov
sub
jno
jg
std
insl
lret
pop
jnp
setbe
inc
fldt
ja
adc
jnp
fistl
gs
and
jl
pusha
pop
cmpsl
push
jecxz
jnp
mov
out
std
hlt
scas
jns
fistps
add
xchg
inc
aad
add
ss
dec
fldl
and
in
gs
scas
out
lahf
xor
inc
cmpb
scas
repz
xor
decl
enter
loop
xlat
es
cmp
mov
lahf
pop
sub
sbb
in
loop
jecxz
shlb
in
decb
popa
rcll
mov
hlt
xchg
and
decl
nop
jmp
dec
insb
adc
xor
jno
addr16
sub
imul
fstp
aam
fcmovb
mov
cmp
jl
and
cmp
lods
xchg
imul
rolb
lcall
xor
sub
pop
push
add
push
push
fimull
push
shr
jmp
jmp
lret
push
arpl
xor
rcr
cmp
adc
jle
xchg
call
incl
outsl
movsb
scas
enter
add
test
mov
mov
xor
orl
lret
pusha
xor
out
fnstsw
movl
ds
decl
jo
adc
rcl
scas
inc
cmp
xor
and
fmull
jge
mov
lret
fadds
or
pop
ficompl
sub
mov
push
mov
add
imul
pop
xchg
imul
push
mov
jnp
push
fwait
movsl
dec
in
push
lahf
push
aam
aad
in
outsb
lock
pushl
inc
mov
call
xor
fdiv
cmp
jle
xor
call
repz
loopne
xor
movsl
loope
fcomps
mov
mov
loopne
in
les
decl
mov
movb
or
shl
dec
addr16
loop
shll
adc
jmp
sub
leave
xor
push
and
movsb
inc
or
insb
inc
cmp
push
cmp
dec
testb
test
adc
pop
and
filds
dec
out
pop
mov
or
shlb
jnp
jb
jp
mov
jb
lcall
lahf
fldl
mov
in
rolb
jmp
adc
cwtl
fistps
xchg
xchg
or
xchg
idivl
les
jecxz
and
das
call
xlat
pop
fwait
sub
or
jp
push
jmp
icebp
cli
sarl
outsb
jne
mov
lahf
int
pusha
inc
or
stos
adc
insb
test
insl
cltd
loope
mov
incl
fstl
call
fisubs
add
jnp
jb
inc
movsl
divl
and
decl
jbe
fimuls
cmc
rorb
jbe
repz
addr16
cmpl
dec
cld
filds
rol
add
push
mov
xchg
sub
dec
scas
inc
mov
inc
fucomip
dec
call
pushf
lahf
std
pop
pop
jns
or
push
ret
mov
fbstp
mov
mov
lret
cmp
lret
loope
loope
lock
lahf
lock
sti
mov
sub
or
iret
mov
ret
jmp
lret
imul
and
pop
in
or
xlat
ds
sbb
notl
incl
mov
lea
movsb
outsb
int
das
add
push
insb
adcb
inc
idivb
cmp
lcall
push
xchg
jb
cmp
add
add
cmpsb
int3
cs
mov
mov
incl
adc
subb
ficoms
ljmp
lret
sub
jne
adc
call
mov
jecxz
imul
lods
ja
add
movl
in
jp
dec
mov
scas
ds
rclb
fists
sbb
mov
mov
out
jg
push
sub
xabort
jle
xlat
std
bound
filds
jne
out
les
cwtl
jl
pushf
jb
mov
push
addr16
rcll
xor
decl
movsb
xor
jns
mov
movsb
stc
sbb
jg
fs
fcom
out
ss
or
decl
and
fsubs
roll
lret
std
out
mov
mov
addr16
sub
lcall
inc
cwtl
popa
xor
pop
loop
xchg
mov
pop
add
clc
leave
lcall
mov
cmp
fmuls
mov
jmp
push
adc
dec
cmp
fiadds
pushl
sub
dec
jbe
fs
loop
xor
push
cmp
xor
ret
inc
sub
ljmp
dec
push
ja
jb
popf
pop
lock
sub
inc
movsl
ja
nop
sub
imul
pushl
pop
adc
sbb
mov
fisttpl
mov
pushf
out
mov
movsb
cmc
dec
enter
fs
ljmp
negl
imul
insl
mov
adc
pop
popa
mov
clc
add
dec
mov
sub
adcl
in
push
and
inc
outsl
jle
mov
call
xor
aas
inc
mov
jmp
push
jo
jg
cmp
jbe
in
pop
xor
jns
jmp
les
lahf
inc
jae
push
sub
mov
cld
pushf
push
clc
mov
xchg
mov
jmp
leave
xchg
out
cmp
jmp
scas
aaa
mov
jl
enter
dec
jae
adc
lcall
cmp
xchg
call
imul
push
call
cld
je
imul
decl
das
xchg
outsl
adc
xor
dec
sar
cmp
movsl
aaa
add
lret
js
mov
dec
arpl
xor
cmc
movsl
dec
or
fsubl
mov
sbb
int3
mov
xor
aaa
sub
ss
lods
clc
pop
sub
mov
and
sub
sbb
xchg
push
mov
pushl
xlat
mov
addr16
jecxz
das
sti
inc
je
lock
mov
arpl
pushl
sub
call
jae
sbb
mov
cltd
divb
int3
push
mov
decl
mov
sbb
dec
aaa
add
xchg
nop
gs
jnp
cmpsb
subb
fcomp
mov
bound
fldt
daa
out
subl
lcall
addr16
sub
ljmp
push
dec
fdivp
jno
fs
jp
cs
outsl
outsb
lods
setbe
and
xor
jmp
in
sbb
jg
dec
xchg
push
mov
push
add
sbb
mov
decl
daa
mov
ds
inc
mov
mov
mov
dec
jp
push
cmpsl
call
or
mov
pop
dec
fst
xor
mov
cmp
mov
ljmp
jbe
xchg
std
add
xor
push
lahf
fstpt
jmp
out
idivl
xor
sbb
sbb
int
clc
xor
rol
push
ljmp
fucomip
cs
ljmp
das
jb
enter
dec
sbb
out
xchg
cmp
inc
add
cmp
ljmp
es
mov
xor
sub
fwait
movsl
pop
cltd
jne
aas
push
decl
jns
in
push
test
mov
sbb
call
sbb
cmp
xor
inc
xchg
icebp
nop
cmp
loop
aaa
enter
dec
int
roll
jl
in
cltd
scas
xchg
or
pop
mov
loopne
jg
push
push
push
jne
in
lods
mulb
js
jmp
xor
repnz
cmc
loop
push
pop
push
mov
xchg
inc
test
sbb
incl
lea
mov
cmp
jmp
test
pop
push
pop
pop
push
mov
call
lret
inc
nop
xchg
add
ss
cmpsb
daa
and
in
push
inc
pop
lahf
inc
and
iret
xor
jp
mov
xor
int3
mov
lret
lret
test
ljmp
pop
loopne
test
movsb
xchg
or
adc
mov
scas
sbb
sbb
fcomps
jle
les
ret
mov
rcr
decl
pop
lods
push
test
pop
dec
lret
cmp
hlt
cmp
and
inc
int
mov
mov
int
imul
inc
andl
xor
and
call
sub
out
or
movsl
ds
int
dec
aad
loopne
add
enter
jns
jnp
adc
orl
xchg
cltd
ds
jne
das
xor
push
mov
pushl
cwtl
sbb
push
pop
jne
push
lret
cmpsb
mov
icebp
pop
cli
jg
cmpsl
pushaw
or
jmp
and
lea
into
pop
icebp
flds
iret
add
mov
jp
pop
inc
int
test
mov
stc
lret
inc
xchg
push
ss
aaa
sbb
fisubrl
and
xchg
jmp
sbb
or
pop
dec
fistpl
lods
sbb
jns
fnsave
push
jecxz
insl
cmp
cmpsb
cmp
inc
int
test
or
repnz
pop
mov
loope
push
jae
pop
and
push
xor
shl
xchg
je
jmp
stos
sahf
adc
or
dec
ret
es
pop
pop
jo
out
bound
or
clc
xor
cmpsb
scas
daa
push
ja
mov
arpl
inc
lea
popf
inc
aas
mov
jmp
pushf
outsl
cli
xor
in
push
or
fimull
pop
lea
or
xor
lcall
mov
add
orb
mov
aam
sarl
decl
xor
in
lock
stos
and
std
fs
dec
scas
lods
jg
xchg
iret
inc
repnz
jmp
leave
lret
sub
dec
aam
xchg
daa
mov
mov
cmpsb
pop
leave
mov
enter
or
cwtl
mov
adc
clc
mov
fnstcw
out
sub
mov
call
roll
pushl
cwtl
sub
cmp
adc
cmp
mov
mov
lods
gs
add
dec
push
ljmp
push
testl
and
test
stos
or
sbb
mov
push
xchg
push
gs
dec
adc
repz
out
int
or
sti
dec
ljmp
fs
outsb
adc
insl
leave
sbb
lock
decl
int3
dec
sbb
jge
push
dec
push
push
mov
pop
xor
les
sbb
mov
xchg
shrb
jmp
xor
sbb
cld
mov
aad
repnz
mov
ljmp
cld
shrl
inc
lcall
pop
and
push
jbe
arpl
ljmp
pushl
jae,pt
adc
inc
in
fldenv
mov
jmp
jbe
mov
pop
adc
and
and
call
sub
push
mov
jno
popa
mov
call
je
pushf
xchg
stos
call
push
mov
pop
loopne
loop
mov
addr16
xchg
mov
mov
sbb
lahf
sub
xor
cmp
adc
std
sub
mov
out
test
xchg
cltd
hlt
pusha
xchg
xor
test
sbb
push
or
xor
movsb
and
stos
jb
ficompl
pop
xchg
lret
mov
stos
decl
dec
mov
xchg
test
cld
pop
sarl
push
mov
in
je
in
lea
xchg
sti
incl
setp
rolb
xchg
mov
addl
leave
cmp
adc
insb
mov
fnstsw
push
jp
sub
imul
mov
inc
out
das
jo
dec
pop
xor
or
xor
int3
sbb
add
lds
stos
xor
push
inc
cmp
incl
sub
jle
mov
test
push
sbb
and
adc
inc
mov
lcall
jmp
pop
cmpsb
out
test
push
sbb
xor
push
loope
mov
sbb
dec
xchg
push
data16
mov
decl
into
pop
cmp
idivl
dec
jmp
inc
cmp
loop
lea
jbe
xchg
ljmp
jnp
sbb
repnz
test
mov
mov
sub
fnsave
fmull
cmp
jmp
jle
sbb
fistpll
mov
jmp
ss
lods
orb
nop
decl
int
fistpll
sti
ret
cmc
pop
cmc
aam
gs
push
rclb
clc
rclb
cmp
lock
or
fildl
fcomps
mov
push
outsb
cmp
call
xchg
repnz
mov
and
cmp
jne
imul
call
clc
pop
lret
cs
adc
pop
adc
cmp
push
outsl
adc
nop
push
or
lea
jmp
push
ret
sub
lods
cmp
push
pop
ficomps
adc
inc
iret
fwait
sar
call
lret
sub
addr16
jno
jne
mov
sbb
pushl
ds
mov
notb
cmp
sar
dec
dec
inc
add
mov
insl
in
push
mov
pushl
das
pop
cmp
jmp
inc
jp
add
mov
sub
sti
cli
std
stc
xor
out
add
push
dec
out
and
adc
jp
mov
push
dec
mov
push
xchg
jp
movsb
movsb
inc
icebp
mov
push
mov
dec
xchg
lret
movsb
loope
lret
decl
adc
or
imull
mov
lods
push
cmp
xchg
mov
or
jp
jns
pop
lods
std
dec
pop
dec
insb
inc
js
clc
adc
mov
icebp
cwtl
cli
pop
out
ficoml
inc
lret
mov
fstpl
jecxz
or
setb
mov
sbb
pop
jp
xor
ljmp
xchg
dec
rorl
ja
push
outsl
hlt
clc
sti
mov
jle
enter
cs
lods
repz
flds
call
mov
mov
cmpsb
fcmovbe
pop
xchg
push
cmpsb
cld
xor
ficoms
or
adc
call
or
test
adc
les
aaa
jmp
lcall
ds
lea
and
pop
hlt
stc
andl
mov
xor
mov
mov
test
adc
je
jmp
xorl
xchg
imul
jne
sbb
out
lods
mov
and
mov
or
fwait
insl
stc
xchg
and
je
xchg
int
ficomps
jmp
push
lods
das
fstps
movsb
inc
ret
add
fbstp
xchg
pop
icebp
adc
scas
enter
call
repz
shrb
cwtl
insl
dec
mov
or
cmpsl
sti
sbb
push
mov
pop
std
insl
es
decl
dec
scas
and
jae
dec
and
add
jg
movsl
sbb
sbb
cmp
loopne
cli
decl
xor
mov
negl
jg
mov
jecxz
repnz
adc
sahf
imul
mov
jle
mov
inc
add
and
test
mov
in
scas
push
push
pop
sti
mov
in
cmpsb
add
push
or
arpl
or
popa
popf
or
jg
loopne
mov
out
fistpll
mov
call
sub
push
outsb
out
dec
ds
and
push
lock
out
ret
fs
inc
in
xchg
push
and
std
sbb
pop
out
test
add
cmp
das
xchg
pop
xchg
xchg
data16
adc
decl
out
mov
sub
test
bswap
pop
mov
dec
scas
cwtl
test
or
lcall
push
lods
inc
test
imul
jg
mov
pop
movsb
xchg
or
pushl
testl
loope
xchg
aam
stos
xor
addl
or
decl
mov
jl
inc
xor
sarb
cmp
jle
mov
dec
sbb
stc
jl
shrb
jge
das
dec
push
adc
pop
lcall
es
jmp
fsubs
aaa
popf
test
imul
pop
xor
enter
mov
or
add
mov
pusha
lea
stos
adc
incl
cmc
inc
or
pop
fs
fs
jge,pt
popf
ss
lock
shl
shll
lcall
add
or
jae
pop
outsl
sbb
out
push
mov
push
add
xor
dec
aas
mov
pop
lcall
push
in
jmp
aad
daa
xlat
in
mov
mov
incl
xor
adc
neg
pop
push
or
dec
lods
iret
data16
push
jmp
cwtl
mov
mov
inc
cmp
lcall
xchg
in
fistl
pop
mov
and
lcall
xor
out
ja
pop
pop
les
mov
xchg
rcr
xchg
in
xchg
int3
jns
pushl
mov
cmp
in
ljmp
mov
jae
fidivs
adcb
xor
push
aad
adc
filds
inc
jns
pop
sub
call
idivl
movsl
cli
mov
fldcw
cmp
sahf
imul
fnstcw
pop
leave
lea
mov
dec
mov
lret
outsb
add
movntq
dec
xchg
jg
int
push
and
lcall
mov
jle
arpl
les
cmpsb
fdivs
insb
or
mov
mov
push
lret
adc
ficomps
adc
mov
sub
xchg
lods
mov
ja
cmp
sub
mov
and
call
incl
mov
in
ja
mov
imul
decl
test
jge
pop
in
jecxz
mov
mov
mov
sub
gs
aaa
xchg
jmp
pop
movsb
xchg
add
das
sub
imul
jne
xor
lcall
pop
inc
movsl
fisttps
icebp
fimuls
lods
mov
add
push
and
xor
pop
jmp
shll
mov
lds
out
push
mov
xchg
cs
and
clc
mov
jo
pushl
ret
ss
adc
xchg
add
into
sbb
popa
hlt
stc
int3
dec
nop
mov
ljmp
pushf
fs
and
dec
push
sbb
or
mov
push
in
mov
pop
test
lret
push
rol
lahf
xor
loop
cmp
xchg
ret
out
lods
adc
inc
pusha
jp
sub
mov
lods
mov
jg
lock
lahf
pop
popa
lret
imul
mov
lcall
jg
add
in
xchg
push
lcall
cmp
out
push
das
test
xchg
int
pushl
or
ja
das
jo
mov
test
gs
xor
mov
ljmp
fbstp
adc
shl
pushf
mov
pop
and
pop
in
pop
dec
adcb
pop
adc
in
push
nop
push
jne
xor
or
and
ja
pop
inc
xchg
lret
jg
test
in
or
ljmp
ss
aas
bound
pushf
clc
xchg
aas
xchg
std
je
lret
loope
xor
mov
das
or
bound
lcall
push
inc
test
jmp
mov
call
or
test
add
jns
mov
mov
inc
rorl
jae
in
push
loope
movsb
dec
mov
sub
cmovs
call
sub
aam
mov
xlat
push
and
mov
xchg
mov
sbb
enter
pushl
je
sub
insb
es
ret
addr16
or
inc
shll
xor
addr16
inc
cmp
mov
push
int
push
jmp
dec
jg
scas
scas
clc
jbe
loop
movsb
jbe
jg
imul
das
adc
push
das
in
pop
jno
stos
pop
andb
add
mov
ds
pushl
ljmp
xchg
cmp
xor
mov
sti
mov
adcl
jmp
pop
loop
xor
mov
outsl
xchg
ret
sbb
or
add
call
xchg
cmp
push
mov
in
cmp
sbb
sub
or
jle
push
pop
xor
sar
jmp
scas
pop
xchg
jecxz
pop
cmp
insl
mov
push
loop
xchg
or
fistps
pop
pop
out
scas
sbb
lea
in
bound
inc
sbb
mov
ljmp
xchg
in
mov
arpl
test
ret
insl
sti
cmp
ret
pop
adc
push
jbe
inc
jno
stos
incl
and
xor
test
sbb
mov
or
lcall
les
push
decl
or
pop
cld
scas
stos
stc
lret
nop
js
push
or
mov
mov
pushl
or
jp
js,pn
ja
fwait
and
addr16
sti
mov
pushl
cmc
inc
pop
gs
inc
add
cmp
imul
stos
clc
add
push
xchg
mov
hlt
out
leave
mov
ljmp
aas
dec
and
in
inc
add
cmpsl
add
sbbl
mov
imul
jns
call
loope
xor
mov
cli
jo
in
loope
cmp
mov
jb
int3
xor
insb
sarb
mov
lods
push
shl
hlt
push
xchg
and
jp
mov
jmp
inc
xlat
jp
lock
scas
lret
call
mov
aad
clc
iret
sbb
test
mov
adc
aam
jg
lcall
and
jmp
sti
jne
fnstsw
jmp
sbb
xlat
cli
lods
xchg
stos
pop
and
add
lcall
mov
xchg
es
imul
jg
mov
imul
scas
cld
leave
call
lret
or
testb
fnstcw
mov
mov
fcom
insl
mov
sar
ljmp
cld
or
pop
push
sub
adcb
mov
aas
push
pushf
or
out
inc
push
xchg
pop
push
and
cmpsl
repnz
mov
movsb
push
lea
mov
movsb
mov
and
jmp
les
dec
inc
xchg
push
mov
ss
inc
std
dec
cmp
js
call
sbb
aam
and
jmp
je
cmpsl
out
flds
sahf
mov
call
jle
out
divl
sbb
adc
in
inc
jecxz
jo
mov
inc
lds
enter
adc
mov
lods
sub
pop
mov
jmp
int3
gs
inc
or
out
cmc
jmp
mov
jbe
mov
jge
mov
push
outsb
push
and
fisubrs
push
sar
stc
push
pop
inc
outsb
mov
call
sub
incl
or
xlat
fidivrs
adc
rcll
data16
push
outsl
jp
andl
jecxz
xchg
jmp
gs
sarb
sti
inc
lret
aam
ss
je
test
cmp
mov
hlt
jmp
pushl
mov
in
aam
pcmpeqb
loopne
pop
clc
nop
clc
je
xor
cmp
iret
and
jmp
insb
jnp
int
in
xchg
push
sbb
dec
and
ja
mov
pop
dec
in
not
aaa
jp
xchg
jns
pusha
cmpsb
xchg
popa
lods
push
inc
sbb
add
mov
clc
adc
pop
pop
jecxz
jmp
dec
and
jae
and
sub
aas
stos
xchg
mov
call
js
in
call
out
fs
jo
lret
cmpsl
int3
push
mov
xchg
loop
in
das
ljmp
scas
rol
pop
test
popa
push
jae
push
pop
jge
mov
inc
jb
jecxz
sbb
call
sub
pop
aas
jle
inc
xchg
pusha
fldt
repz
and
adc
jmp
stos
cmp
adc
mov
mov
add
ret
stos
sahf
shll
cmpsl
inc
xor
cmp
inc
cmc
fisubl
shlb
lret
inc
pusha
mov
loopne
xor
inc
or
mov
call
leave
or
cld
jp
xchg
mov
pop
bound
cwtl
nop
cli
popf
rcl
xchg
stos
jmp
inc
ss
adc
dec
sbb
mov
enter
fldenv
xchg
dec
inc
mov
pop
mov
lock
outsb
cmp
jge
nop
lret
nop
sbb
jg
ud0
jmp
lret
and
dec
rclb
subb
aad
cs
fmuls
mov
rcrl
pop
aad
insl
gs
int
lock
jbe
inc
cmp
ja
mov
ud0
incl
cmpsl
inc
mov
inc
jb
adc
sbb
scas
aad
mov
divl
mov
pop
inc
jle
inc
data16
fidivl
subb
add
hlt
inc
loop
sub
gs
cmp
fucomip
push
jmp
jmp
pop
outsl
sub
mov
sbb
jp
pop
stos
sbb
sbb
sub
push
fdivrs
lret
leave
fs
stos
mov
ljmp
jno
push
test
dec
stc
movsb
dec
lret
xchg
jl
mov
arpl
push
sbb
cmp
mov
push
cmp
movsb
lods
push
iret
mov
lock
lret
push
in
fdivrl
lret
out
or
push
push
hlt
sbb
add
fsubs
push
into
out
in
out
sbb
leave
lret
scas
cld
rcrl
sti
cmp
popf
dec
jge
test
pushl
mov
out
dec
call
push
movsb
daa
mov
cmp
mov
aam
xchg
mov
call
push
jno
adc
ljmp
sbb
mov
rolb
rcl
pop
sar
xchg
xchg
dec
cmpsl
loope
adc
fadd
pusha
lcall
scas
test
jne
mov
ret
stos
test
cmp
mov
lcall
sub
mov
and
outsl
jb
push
or
mov
and
jmp
fwait
or
aad
cmp
sbb
ja
test
es
lahf
push
sar
jnp
and
fiaddl
push
divl
out
dec
loop
std
repnz
lods
movsb
fs
das
dec
jmp
leave
xchg
pop
mov
mov
outsl
aam
jnp
or
xchg
cmp
pop
cmp
idiv
loope
call
daa
inc
push
xor
mov
push
push
out
add
sub
xor
loope
lcall
sbb
cwtl
inc
nop
sub
loopne
xchg
cld
mov
int3
xchg
inc
jmp
sbb
and
add
fwait
cmc
xor
out
sbb
fdivrl
xchg
mov
cld
inc
mov
xor
pop
xor
rcl
fstps
cld
shll
xchg
add
es
pushf
push
idiv
ljmp
mov
aad
mov
adc
ret
inc
testl
cmp
sti
fs
sti
aam
mov
inc
lcall
dec
sbb
inc
mov
fsubrl
add
mov
cmc
hlt
pop
lods
scas
shrb
ljmp
fiaddl
insb
loope
out
add
outsl
gs
jecxz
sbb
mov
test
jmp
gs
daa
call
add
mov
fidivl
mov
cmp
pop
fadd
or
loopne
incl
pop
fisttpl
ret
mov
push
cltd
loop
out
pop
inc
je
subb
push
stc
adc
jnp
adc
cmp
roll
shrb
mov
stc
push
mov
scas
mov
adc
clc
leave
mov
jmp
jecxz
push
pop
out
shrb
loope
push
movsl
aad
pop
stos
dec
or
and
pushl
cmp
outsb
mov
popa
add
pop
mov
std
test
pushl
lcall
les
dec
nop
cmp
ds
mov
loope
push
jmp
add
mov
sbb
mov
cmp
dec
xchg
xor
sub
adc
decl
push
popa
stos
js
sub
and
and
push
add
xor
inc
fstpt
inc
jnp
repz
ja
mov
in
das
xorb
jp
sub
add
incl
xor
mov
aaa
cmp
mov
mov
in
stc
mov
xchg
loopne
call
xchg
lds
cmpsb
fcomip
dec
daa
mov
lret
aad
nop
jp
push
adc
adc
fidivs
cmpsb
mov
cmc
rorl
add
xor
call
add
jle
push
cltd
and
stc
push
inc
in
sub
add
sub
ljmp
scas
rorb
incl
daa
mov
or
add
ja
mov
call
imul
loope
incl
adc
push
mov
popf
adc
mulb
mov
jns
and
fildll
out
lcall
cmp
outsl
mov
arpl
xor
inc
aaa
mov
sbb
mov
incl
pop
cmc
push
xor
inc
inc
clc
pusha
test
mov
sahf
lahf
ljmp
mov
incl
push
int
and
pop
adc
aas
inc
aas
mov
dec
jmp
or
push
xchg
jmp
mov
aas
enter
or
dec
adc
arpl
mov
push
mov
je
dec
inc
mov
sti
repz
cmp
cmp
add
adc
pop
inc
and
mov
loope
jmp
std
push
xchg
mov
daa
ja
hlt
jl
sub
inc
arpl
xchg
inc
lahf
ljmp
aas
inc
test
cld
lds
std
outsl
clc
jge
mov
cli
fsubs
jmp
incl
mov
imul
scas
xchg
andl
sub
add
nop
jge
push
ljmp
mov
push
icebp
xorb
loope
fmul
pslld
adc
mov
incl
or
inc
popf
lea
add
mov
xchg
push
mov
pop
incl
outsl
daa
sbb
cmpsb
sub
mov
xlat
inc
fstpl
sahf
and
jp
mov
es
pop
mov
iret
inc
or
enter
int3
or
push
mov
sti
push
std
dec
mov
incl
sub
imul
xchg
negb
js
dec
xchg
dec
jl
enter
or
pushl
fwait
add
sub
fnstenv
pusha
push
jne
lcall
mov
and
jns
sub
incl
fistps
cmp
add
xchg
fdivr
add
sub
dec
lret
lcall
xchg
ljmp
fidivl
jae
jge
xorl
cmp
lret
jnp
les
inc
out
push
pop
mov
incl
mov
sbb
scas
das
imul
in
pop
test
jno
fwait
mov
mov
pushl
jl
lea
push
pop
and
adc
jge
xorl
ss
fsubr
jmp
mov
jns
lcall
mov
movsb
popa
xor
popa
shrb
leave
sub
mov
mov
pushl
imul
adc
push
loopne
jo
int3
shlb
out
jle
jno
test
mov
cld
cmp
dec
ret
xchg
pop
mov
push
adc
cmp
jl
std
or
call
push
push
inc
mov
mov
je
popa
outsl
jno
icebp
sub
clc
push
push
decl
push
call
mov
jmp
dec
inc
int3
dec
vmread
cli
xchg
push
pop
push
imul
incl
jno
enter
push
mov
dec
shlb
or
lret
loopne
cmp
incl
sbb
sub
or
div
sub
out
jo
les
add
sbb
dec
jmp
push
xor
and
xchg
cli
xchg
lods
and
fidivrs
lret
movsb
imul
cmp
mov
xchg
jae
lock
mov
push
sub
mov
popf
push
pushl
sbb
jmp
ret
out
aaa
rep
add
nop
rorb
and
mov
dec
out
aad
cmp
xlat
repz
sti
mov
pop
int3
popf
or
and
cmpsb
add
mov
mov
mov
fcoms
cmp
push
rcrb
sarb
pop
adc
cmp
lds
mov
mov
jnp
jnp
xlat
je
roll
sub
sbb
incl
ret
loop
adc
popf
int
cli
pop
cld
dec
dec
cmc
cmp
mov
inc
int3
xchg
xor
incl
movsb
xchg
adc
loope
cmc
repnz
stos
rorl
jo
scas
stc
pop
ds
mov
data16
jle
pushf
stos
je
xor
repz
aam
xchg
pusha
fisubrl
jno
add
or
in
add
lcall
js
adc
jnp
int
cmp
aas
push
xrelease
je
pop
mov
ret
lea
aas
mov
sub
pop
ss
mov
int
mov
stos
mov
lock
adc
ljmp
icebp
sbb
push
rorl
sahf
and
mov
jg
shll
fcomip
bound
insb
cmpsb
mov
outsb
push
fs
xor
addl
adc
adc
inc
inc
jmp
mov
fstpt
sbb
dec
push
inc
or
mov
ss
daa
mov
jge
sahf
fcos
incl
popf
cmp
ss
subl
cmpsl
aam
inc
movsl
push
in
sub
mov
pushl
iret
leave
add
clc
repz
sbb
rorb
xor
mov
fidivs
push
ljmp
and
pop
mov
cmc
daa
mov
sub
icebp
call
mov
xchg
pop
and
andb
rol
pop
stos
inc
cmpsl
cwtl
mov
xor
push
cmp
data16
test
sub
outsl
mulb
sbb
divl
cld
stos
adc
div
or
fsubrs
add
or
mov
fs
aaa
jmp
pushf
adc
and
lods
xor
fildll
mov
ljmp
fldenv
sarl
pushf
pop
jno
sbb
leave
xchg
cmp
mov
idiv
incl
shlb
rclb
mov
mov
or
movsl
mov
ds
shll
mov
jmp
mov
addl
mul
fldenv
fs
mov
incl
lea
imul
sub
add
rorb
add
dec
add
jmp
jecxz
lcall
mov
nop
pop
negl
jl
mov
sbb
inc
call
cltd
or
adc
ja
dec
es
es
sbbl
jnp
lea
or
mov
sbbl
or
jmp
stos
enter
out
mov
xchg
clts
jmp
mov
movsb
mov
fdivr
insb
jno
mov
ja
adc
jl
xor
or
mov
and
inc
insb
andl
in
lret
repnz
pushl
mov
pop
lock
adc
jle
jg
gs
mov
mov
arpl
or
lcall
outsb
add
test
pusha
sbb
inc
mov
and
cmc
xchg
cmp
lcall
shrb
ret
sub
cmp
andl
les
mov
jle
loop
popf
sub
xor
and
cld
dec
je
cmp
pop
add
incl
push
push
enter
adc
shrb
jno
popf
cwtl
mov
mov
mov
cmp
cmp
push
imulb
adc
jb
or
das
popf
das
add
ljmp
inc
pop
aas
xchg
fcom
ja
test
cmp
test
push
lods
pop
sbb
rcl
sbb
je
call
rep
inc
mov
insl
aad
push
xchg
addr16
sarb
mov
shrb
decl
aas
cltd
adc
sti
ds
xchg
movsb
cmp
test
mov
stos
push
and
fistpl
ljmp
int
lret
xchg
mov
pop
cmpl
aaa
in
dec
call
add
incl
lret
ljmp
lcall
or
xor
push
cmc
push
fdivrp
cmp
decl
subl
jnp
jp
rclb
xor
out
mov
int3
fxch
mov
cmovge
push
jo
cli
in
jae
lret
xchg
shlb
sbb
adc
jne
inc
out
scas
movsb
daa
cli
cmpsl
add
jmp
mov
lret
ljmp
sti
faddl
test
fistl
pop
test
and
cmp
ljmp
xchg
outsl
sti
sbbb
jnp
pop
mov
out
in
fs
outsb
sbb
loop
jno
js
inc
jl
cmp
incl
out
fcmovbe
adc
mov
mov
sbb
out
int
fucomi
in
pop
cld
inc
test
ja
lcall
lods
arpl
dec
into
pop
push
and
fildl
jmp
loopne
in
negb
or
cmp
imul
push
cmpsb
loope
nop
jmp
sub
cwtl
add
dec
pop
cmc
ret
out
aam
mov
in
adc
xor
jb
std
bound
call
pop
jle
jge
pop
xchg
sbb
addl
nop
or
decl
movsb
adc
or
sbbb
mov
fs
cli
inc
loope
sarl
incl
pop
and
push
xchg
lcall
ss
push
dec
jl
inc
divb
call
mov
out
cld
out
das
xor
cmp
or
imul
test
je
ljmp
xor
scas
test
cmpsl
arpl
add
in
xchg
xchg
rorl
enter
sbb
jg
incl
or
jle
xor
frstor
add
xchg
outsb
call
cmpb
int
incl
mov
out
in
lods
xor
mov
roll
std
aaa
push
movsb
sar
call
test
popa
mov
push
les
iret
push
int3
sub
data16
insb
pop
push
or
jmp
mov
xor
xor
pop
loop
loop
push
jns
sub
call
pop
sbbb
push
push
test
and
pop
out
fsts
sbbb
inc
cmp
sar
cmpsl
or
call
push
or
sti
dec
test
dec
lds
insl
rcrb
pop
sti
inc
push
ljmp
daa
mov
pop
test
mov
sub
push
adc
aad
jno
mov
lock
outsl
mov
mov
mov
pop
xorb
mov
pop
addr16
mov
jmp
in
sbb
inc
adc
std
fldcw
int
sub
lock
insb
arpl
movl
pusha
lock
call
sti
cltd
jb
dec
negl
push
jae
lret
jno
pop
int3
inc
jge
call
sub
jo
xchg
push
nop
cli
jne
in
cmp
movsl
test
mov
add
and
scas
push
iret
scas
ficoml
idivb
lahf
pop
pusha
dec
enter
mulb
adc
mov
push
mov
jne
jno
push
mov
mov
pushf
jnp
and
jne
xchg
cmc
jae
mov
ds
movsb
test
sub
sahf
pop
fistps
out
sbb
push
ret
xor
pushl
repnz
fs
arpl
sub
ret
and
cli
repz
inc
into
cmc
sbb
decl
movsb
or
inc
loop
add
push
test
negl
dec
cltd
lcall
mov
movsl
outsb
and
les
iret
push
jae
sti
in
clc
mov
sahf
push
jmp
test
sbb
sub
and
or
out
ret
daa
inc
sbb
test
mov
pop
xor
add
popf
pop
stc
and
xor
fisubrs
sub
jbe
inc
or
xchg
inc
mov
stc
lds
jbe
repnz
test
test
push
jmp
shr
add
jmp
lods
ficoml
push
fmulp
test
insl
inc
cmp
xchg
jae
aad
mov
lret
jecxz
pop
mov
decl
data16
sahf
aad
outsl
adc
punpckldq
jae
cld
and
incl
fcomp
inc
pop
sbb
and
mov
or
xor
js
pop
xchg
out
dec
cmpsb
enter
dec
xchg
scas
jns
aaa
aaa
mov
out
xchg
or
add
outsb
sbb
pop
ja
mov
decl
adc
mov
jge
sbb
lea
jno
inc
and
dec
mov
pop
sub
call
push
je
scas
xchg
fidivrl
push
test
and
dec
jo
jl
call
lcall
pop
mov
add
inc
popa
pop
lds
sub
push
jmp
fnsave
push
scas
or
int3
fisttpl
jne
push
jb
xorl
mov
incl
lea
lea
mov
or
inc
lock
insl
test
lret
clc
jge
sub
ljmp
gs
push
pop
in
xor
aas
jge
jo
repz
mov
sub
cli
xor
ret
ja
jl
pop
popf
inc
aad
int3
mov
in
add
inc
push
ljmp
int
nop
pushf
clc
pop
shll
ret
pop
es
loopne
xor
bound
in
popa
out
lcall
pop
cmpsb
fcoms
adc
dec
test
add
dec
in
push
jl
std
sub
dec
push
ss
cltd
lcall
add
in
inc
adc
add
adc
loopne
bound
dec
mov
xchg
dec
sbb
inc
clc
or
pushf
pushf
xchg
dec
lods
sti
sti
loopne
cmp
loopne
xor
lcall
adc
imul
add
xor
pusha
xor
push
arpl
sub
push
pop
jb
jmp
inc
cmp
test
ficompl
mov
rcl
mov
or
out
xchg
xlat
adc
hlt
adc
loopne
xchg
mull
shll
and
std
mov
popa
sub
jmp
sahf
sar
repz
xchg
cwtl
iret
adc
xor
xchg
push
mov
incl
gs
leave
clc
test
mov
mov
xchg
xchg
int
cmp
add
decl
cmp
daa
test
fstp
test
std
mov
adc
jge
addr16
jmp
sub
fwait
in
cli
adc
mov
or
sub
out
mov
or
jmp
and
test
mov
pusha
negl
xchg
push
mov
mov
push
mov
push
mov
jnp
lds
adc
jmp
insl
ja
test
cs
jmp
das
shrl
inc
push
fsubs
jo
ss
mov
cmp
sbb
fidivrs
int
xchg
dec
lahf
rorb
and
jo
jg
jmp
dec
stc
movb
mov
add
jg
ud0
pushl
mov
pusha
fmulp
sub
outsl
mov
dec
and
lea
push
mov
out
xlat
inc
add
or
decl
xchg
gs
cmpsl
in
stc
jge
imul
rolb
decl
dec
popa
clc
and
arpl
les
ret
xchg
push
icebp
push
inc
xchg
movsb
xor
lcall
push
wbinvd
push
jns
movsb
or
jno
pop
sbb
cwtl
pop
mov
aam
fistpll
mov
jmp
iret
lahf
mov
cmp
push
aas
movsl
in
les
cmp
pop
idiv
incl
xor
and
fwait
loope
adc
sub
xor
or
lock
repz
pushl
test
jmp
out
gs
je
out
pop
pop
data16
addr16
xlat
pop
ljmp
out
jle
and
add
and
inc
push
int3
outsl
sub
dec
or
aas
lds
sub
mov
inc
or
test
loope
leave
in
jle
insl
popa
jns
outsl
fnstenv
jmp
bound
incl
dec
mov
mov
int3
dec
add
dec
pop
icebp
mov
mov
ret
das
movsb
xchg
call
imul
push
in
push
rclb
jl
mov
and
out
call
xchg
xchg
stc
add
mov
or
out
setns
jnp
popf
sar
inc
aaa
add
dec
cmc
rorb
or
cmp
je
je
xor
inc
push
sarl
mov
inc
pop
pop
cli
jnp
ret
es
int
out
jecxz
jnp
mov
push
cmp
mov
xor
mov
decl
dec
and
mov
push
jnp
jne
lret
ljmp
subl
add
ffree
pop
mov
pop
mov
sbb
add
push
decl
dec
adc
jbe
cmpsl
shll
int3
cmc
jno
sbb
xor
mov
inc
incl
ret
jl
test
call
mov
jo
mov
adc
xchg
insb
inc
out
mov
jmp
pop
pop
jl
xlat
mov
lret
jmp
js
iret
pop
and
mov
lahf
sub
mov
lcall
jg
mov
aad
mov
shr
movsb
xchg
sbb
jbe
outsl
out
mov
call
inc
aad
sahf
cmp
lahf
sbb
push
lcall
cmp
icebp
lcall
stos
shr
sbb
jne
mov
adc
mov
frndint
lahf
cmp
call
std
dec
push
and
dec
lret
sub
sbb
test
cmp
aaa
mov
cmp
daa
pop
push
fldenv
fs
xchg
bound
std
mov
mov
or
pushf
jle
lret
lock
outsl
xorb
xorb
in
cld
imul
or
sti
int3
rorb
dec
fdivl
pushl
adc
mov
hlt
aas
out
xor
loop
movsb
aas
xchg
call
mov
pop
out
or
enter
ret
dec
test
jge
or
mov
call
cltd
ret
enter
arpl
mov
jne
dec
fimuls
sbb
or
clc
icebp
and
int
pop
cmp
mov
out
add
dec
imul
xor
jge
incl
dec
aam
or
or
mov
data16
push
dec
xorl
in
fcmovu
ss
int3
stos
lods
pusha
mov
cld
push
xor
inc
jmp
cltd
bound
push
jmp
mov
daa
dec
into
sarl
fidivrs
pop
add
sub
sub
push
ljmp
mov
jnp
icebp
in
stc
xchg
mov
stc
xchg
scas
lcall
aam
push
pop
jmp
jns
aad
cmp
xchg
cltd
push
divl
fldcw
adc
mov
xchg
dec
fdivr
lcall
sbb
xor
iret
mov
ja
test
sub
pusha
jle
mov
add
decl
mov
pop
mov
dec
pop
lods
stc
mov
and
cmp
cmp
fcomi
pop
cmp
jne
das
cli
insl
test
cmp
or
jl
push
mov
push
aaa
pop
or
jmp
sub
sbb
dec
cmpw
testl
lcall
inc
jb
lods
push
scas
adc
leave
sbb
fsubrl
lods
and
mov
stc
or
mov
pusha
and
jo
sarb
mov
loope
mov
xor
decl
aam
and
imul
push
mov
cmp
cmpsb
adcb
cmp
loopne
jp
sahf
xchg
cmp
fsubrp
ficomps
mov
push
and
incl
xchg
sub
shl
ja
mov
and
xchg
clc
pop
sub
aas
call
push
mov
dec
xor
lahf
sub
and
or
xchg
sahf
scas
jmp
cmpsb
and
add
xor
shl
xchg
mov
adc
jbe
outsb
adc
inc
out
dec
andl
lahf
lea
stc
push
call
loope
jae
or
into
in
push
aas
loopne
movsb
psubusb
ret
mov
std
add
jl
aam
add
paddw
in
sub
bound
mov
stos
lods
les
jp
inc
fists
mov
lds
sub
push
mov
xchg
inc
lcall
mov
adc
xchg
int3
rcll
push
pop
mov
mov
test
mov
push
dec
pusha
gs
jmp
or
mov
cmp
mov
lret
adc
popf
pextrw
cld
call
mov
fsubrl
ds
xlat
cmp
push
aaa
out
jmp
das
fucomp
loop
into
mov
lcall
dec
add
add
push
and
xchg
dec
push
or
add
add
outsw
inc
es
popa
outsl
inc
mov
mov
js
dec
mov
cmpsl
sub
call
adc
mov
dec
jp
sbb
mull
sbb
and
cld
xor
jmp
leave
inc
xor
push
sbb
pushf
out
into
lret
scas
pop
mov
nop
pusha
aas
fdivrl
mov
ljmp
int3
mov
int3
mov
aam
mov
or
fnsave
xchg
inc
int
cmp
jl
hlt
jp
ljmp
pop
mov
pushf
stos
and
xchg
nop
stos
cmp
insl
idiv
jmp
neg
cmp
mov
test
pop
out
cmc
xchg
add
repz
push
nop
fadds
mov
je
pushl
imul
insl
cmp
sarl
or
pop
push
xchg
incl
xchg
xchg
faddl
xor
push
ds
xchg
jne
mov
cmpsb
pop
jmp
scas
sbb
lahf
xchg
adc
test
dec
jmp
scas
mov
es
dec
out
lret
int
lcall
mov
jns
sbb
fwait
cs
sbb
jl
adc
subb
decl
callw
cmpsb
mov
sbb
cmp
aas
mov
out
inc
imul
pop
mov
incl
in
stc
adc
mov
mov
sahf
int
insb
sub
mov
mov
out
push
xlat
sub
mov
adcl
insb
jmp
mov
daa
or
cmp
dec
cltd
jnp
incl
xlat
add
out
lcall
cmp
pop
mov
clc
jl
cmp
lret
add
data16
pushl
imul
repnz
shl
push
test
jno
incl
push
push
cmpsb
cmpsb
pop
gs
clc
and
adc
lret
icebp
or
mov
jmp
mov
jo
test
scas
cmp
jg
push
sub
cli
mov
inc
and
divl
pushl
stos
mov
in
mov
lcall
sbb
and
pop
cmc
lea
movsb
jbe
pushl
fisttpl
cmpsl
out
lahf
sbb
dec
add
inc
jl
daa
push
jb
pop
out
dec
dec
sar
ljmp
xchg
jmp
lcall
mov
scas
sti
push
daa
cld
xorl
lret
and
jae
lcall
push
clc
inc
push
adc
inc
cmpsl
lcall
fwait
dec
mov
jo
les
pop
call
arpl
lahf
loopne
xor
jecxz
jb
cmp
xor
cwtl
ret
cmp
push
insb
je
mov
nop
jae
scas
mov
lcall
enter
cmp
movsb
pusha
inc
mov
lods
mov
sti
fnsave
cld
xlat
mov
sub
jmp
and
dec
std
cmp
incl
aad
xor
leave
lret
pop
fmuls
mov
lahf
push
shll
jno
cli
call
orl
sbb
or
push
and
cwtl
xor
mov
insb
dec
jecxz
xor
ds
popa
sbb
mov
mov
adc
out
popl
or
test
push
pop
sbb
dec
lcall
pop
rcrb
jle
cmpsb
scas
cmp
repz
inc
test
negl
ss
cmp
aam
sbb
or
pop
bound
out
adc
xor
mov
popf
or
xchg
sbb
dec
fxch
xchg
or
xchg
aaa
mov
jl
ret
in
int
std
test
clc
xor
dec
call
mov
sbb
adc
loope
outsl
ret
adc
and
popf
ja
aad
incl
lcall
push
clc
push
lds
inc
ds
adc
sbbb
in
fcmovnu
mov
and
mov
negb
pusha
dec
cli
aad
roll
push
adc
push
leave
outsb
add
insb
stc
push
nop
in
lea
insl
push
jl
scas
xchg
and
shll
int
ret
decl
clc
fldt
fldcw
add
lret
pushf
cwtl
or
lahf
add
decl
pop
outsb
cmpsb
repz
add
cmpsl
shll
rcll
inc
adc
mov
mov
lods
test
decl
xchg
push
xor
and
push
cmp
push
push
fs
pop
xor
aad
xchg
call
xchg
pop
dec
icebp
sub
addl
cmp
fwait
daa
inc
mov
incl
rcr
add
loope
pop
out
push
call
sub
xchg
mov
ret
add
inc
cld
out
mov
lods
mov
add
mov
daa
imul
dec
int3
out
fdivr
sbb
decl
gs
mov
dec
fcmovnb
pop
sbb
es
mov
jb
rorl
push
push
mov
inc
mov
addl
inc
inc
ret
add
test
out
imul
loopne
popa
and
incl
dec
lea
push
jae
and
push
jb
inc
and
pop
or
xchg
cmp
inc
sbb
sahf
sub
cmpsl
nop
stc
mov
pop
xchg
dec
sbb
add
push
decl
es
inc
cltd
mov
out
sahf
sbb
subl
roll
sub
pushl
in
shll
aam
add
sbb
mov
fcmovnb
push
pop
test
cmp
out
and
mov
sbbb
popf
mov
lds
xchg
or
pop
jg
pop
jl
adc
int
fsubl
push
cmp
mov
xchg
test
ja
pushl
jno
adcb
stos
js
xlat
movsb
insb
xchg
dec
lods
and
addr16
movsl
pop
xlat
loop
mov
mov
cmpsl
cwtl
setl
cmpsl
xchg
stc
jl
sub
imul
test
adc
decl
push
sub
cld
aas
mov
mov
and
into
gs
popa
pushf
xorl
daa
mov
imul
lods
decl
shrl
dec
jmp
push
xor
mov
je
arpl
leave
subl
pop
lock
mov
mov
xor
shll
xchg
imul
adc
es
xor
push
enter
dec
imulb
push
outsl
stos
pop
test
xor
fidivrs
lods
inc
dec
in
mov
cmp
ljmp
and
sub
mov
push
iret
lds
iret
pop
loop
lret
and
fsubr
icebp
int
mov
sub
xor
notl
adc
mov
test
jp
mov
rolb
jecxz
sbb
or
push
fcmovb
pushf
aad
in
mov
decl
adc
add
xchg
jg
cwtl
or
ja
pop
sbb
aam
pushl
push
push
xchg
test
push
les
push
add
jg
and
jnp
push
fcomi
divl
bound
pop
int3
int
cmp
lea
sub
or
mov
rcr
fsubs
std
sbb
adc
push
cmp
adc
shlb
fnstenv
and
xchg
stos
movsl
jg
repnz
inc
adc
mov
push
out
and
push
leave
sub
fdivrp
push
cltd
pop
lods
pop
xchg
lahf
sbb
out
lahf
and
mov
movb
add
xchg
out
pop
push
lock
gs
inc
mov
sub
push
jnp
mov
lcall
pop
mov
xlat
xlat
aad
adc
push
nop
and
movsl
lea
jns
cmpsb
add
jmp
cmp
lods
cmp
das
dec
add
mov
out
dec
xchg
push
call
aad
incl
mov
push
cmpsb
movsb
dec
cmc
test
imul
jo
cmp
in
addr16
ljmp
dec
add
mov
xchg
mov
mov
test
mov
call
adcb
push
xchg
push
je
mov
fnstcw
cmp
fdivs
out
enter
idiv
mov
icebp
jo
sub
fdivl
xchg
cmp
arpl
cmp
mov
loop
mov
cltd
lahf
scas
cmpl
pop
mov
dec
sub
add
repz
dec
sub
outsl
fs
push
ret
test
loope
mov
xchg
aam
insl
cmp
arpl
or
mov
or
lcall
aas
push
sbb
cmp
push
and
outsb
enter
mov
popf
add
ret
ret
incl
dec
push
inc
cli
enter
fiadds
mov
fimull
es
lcall
push
loopne
decl
fiaddl
out
sub
or
test
fcmovnu
out
mov
ljmp
xchg
ds
in
sub
aad
ss
js
push
lods
add
jne
aad
mov
lock
jmp
pop
fstl
mov
add
popf
dec
std
xchg
lret
mov
lcall
pop
push
or
aaa
repz
fcomi
sub
js
sbb
arpl
lea
call
fildl
in
sub
mov
stos
mov
adc
das
in
mov
popf
jmp
xchg
les
sahf
inc
int
inc
push
lods
push
sti
mov
call
scas
jle
add
jmp
mov
xchg
push
mov
add
sbb
or
cmc
sub
mov
sbb
xor
nop
sbb
push
ljmp
cmp
mov
repz
cmc
or
mov
cmp
lcall
lods
loop
pop
orl
pop
fisubl
insl
mov
addb
push
cmp
ljmp
jmp
cwtl
or
adc
cs
lea
jp
xor
imul
mov
call
xchg
jmp
outsl
pushf
pop
sub
test
ja
jb
inc
rorl
aam
incl
loopne
mov
addl
movsb
lahf
movsb
out
iret
in
fdivl
sub
or
in
inc
inc
mov
cmp
sbb
xor
ds
pop
call
popf
push
sub
or
ficoms
xor
lcall
mov
xor
sbb
rcrb
or
adc
call
cmp
call
adc
fsubp
fadd
fs
jno
mov
push
dec
push
sbb
loopne
cmpb
jne
adc
jmp
imul
or
cwtl
out
test
or
cmc
mov
mov
call
in
int3
dec
mov
loop
cmc
pushf
push
lea
push
lods
xchg
jnp
or
xchg
outsb
or
jmp
cmp
mov
pusha
das
push
scas
xchg
fildl
mov
inc
xor
xor
xor
mov
inc
outsl
dec
mov
pop
inc
ljmp
addr16
das
jne
das
sbb
adc
outsl
cmp
xchg
mov
and
in
xor
rcrb
pop
push
das
mov
mov
pop
in
imul
add
cmpsb
rcr
jge
sbb
retw
xchg
and
std
lcall
jmp
fdivs
pop
xchg
in
cmp
popf
in
inc
lods
cmp
xchg
dec
push
pop
cmc
fucom
cmp
notb
imul
jbe
test
dec
nop
dec
mov
aam
scas
adc
sbb
jmp
xchg
jne
scas
movsl
mov
jl
jns
mov
jmp
enter
movb
call
js
adc
iret
out
test
cs
jbe
cmp
inc
inc
sbb
inc
add
xchg
ljmp
sbb
fwait
adc
subl
pop
stc
or
lcall
sub
int3
adc
lahf
adc
icebp
add
pop
sbb
mov
add
pop
pop
jecxz
adc
mov
mov
sbb
mov
idivl
xor
jbe
icebp
push
stc
scas
push
lods
arpl
lcall
js
sbb
scas
das
push
scas
stc
jmp
data16
fwait
pop
sub
add
jns
xchg
sub
lcall
inc
fldcw
stos
decl
add
sub
dec
jae
sub
jae
pushl
ss
lahf
jle
insb
xlat
data16
cld
and
push
out
xchg
xor
inc
mov
scas
jb
divb
jnp
ret
decl
dec
mov
in
adc
mov
jnp
insl
jecxz
stc
test
pusha
xor
push
add
xchg
cltd
xor
push
imulb
imul
xor
pop
push
in
and
mov
push
enter
repz
cli
jecxz
imul
adc
test
xor
mov
shl
or
mov
into
cmp
ss
cltd
ficoms
daa
outsb
mov
addr16
inc
enter
lods
lods
mov
or
add
mov
mov
push
jp
inc
jge
popf
jmp
js
fidivrl
out
mov
add
lods
das
and
imul
mov
sbb
int3
lods
ljmp
pop
ret
adc
scas
mov
mov
inc
loope
sub
cli
jle
mov
lods
sbb
incl
push
test
movsl
fbld
leave
push
pop
je
pop
dec
ja
dec
add
jnp
in
ljmp
out
ficompl
cmpsl
push
push
xchg
jp
jae
mov
arpl
ss
xor
jmp
cmp
adc
fs
ret
add
pop
push
nop
mov
out
jp
inc
idiv
ljmp
pop
sub
dec
flds
xchg
jmp
in
hlt
add
xor
push
xchg
les
jmp
jno
es
cwtl
xor
push
fistl
out
inc
hlt
lock
and
sub
int3
cmpsb
push
decl
sub
nop
fnstenv
cwtl
scas
inc
dec
and
loopne
and
out
leave
lcall
subl
mov
ja
aas
fimuls
jo
xchg
ljmp
push
push
inc
add
push
sbbl
xlat
or
dec
xor
movsb
mov
dec
rcll
add
loopne
xor
xchg
jb
ret
lret
orb
js
adc
jmp
mov
jnp
test
mulb
popa
daa
shrl
pop
aas
cwtl
cmp
decl
push
std
xchg
add
popa
cs
xor
jbe
andl
pop
cmp
jmp
call
imul
mov
mov
lret
xchg
test
push
sub
push
stos
mov
lcall
dec
outsb
in
out
mov
rcrb
rclb
cmovnp
negl
sti
idivl
pop
imul
call
cmp
movsl
test
pop
inc
xchg
inc
dec
fsub
out
les
xor
fisttps
mov
xor
aas
xchg
sub
lods
dec
push
das
add
loope
sub
xchg
ljmp
jecxz
insl
in
lock
repnz
js
leave
nop
rcl
push
test
jmp
mov
pop
rcll
daa
xchg
pushf
pushf
sahf
dec
xchg
repnz
insl
cs
js
jmp
jb
pusha
dec
in
ret
add
cltd
inc
mov
lret
adc
adcb
xor
decl
inc
inc
push
jb
aad
sub
aas
out
push
aas
add
mov
cli
jbe
mov
decl
mov
and
les
movb
inc
inc
loope
cli
ror
fidivrl
mov
jmp
sub
int3
pushf
or
cmp
dec
ret
xor
std
xor
movsl
sub
jnp
push
adc
not
push
push
cmp
bound
cltd
add
mov
sub
es
lds
mov
popf
inc
je
dec
sti
rcll
cwtl
cmpsb
dec
mov
dec
ds
lcall
stc
fistpll
cmpsb
outsb
vpmulhuw
mov
in
loope
lret
adc
mov
outsl
pop
or
inc
dec
mov
or
repz
imulb
sbb
push
mov
in
arpl
adc
cld
pop
inc
stos
inc
sub
stos
adc
mov
lret
das
imul
inc
jnp
push
add
test
jmp
inc
inc
dec
inc
or
hlt
fwait
sahf
jg
and
pop
enter
ljmp
dec
lock
mov
ret
out
xor
sbb
mov
dec
jns
cmpsl
push
lock
pushl
mov
push
popa
dec
scas
sbb
pop
adc
mov
rclb
mov
jmp
jo
sahf
outsb
mull
clc
inc
int3
popa
or
lock
xchg
icebp
push
pusha
call
mov
xor
or
cld
push
lds
ret
popf
xlat
out
mov
push
sbb
incl
add
mov
push
push
cmp
jbe
and
cmp
pop
xor
lret
decl
sub
outsl
mov
adc
mov
xlat
repz
xor
add
and
jmp
cs
cmp
mov
pusha
mov
jecxz
mov
fs
imul
mov
cmp
and
lcall
pop
jge
inc
shl
ja
xchg
cmpsl
mov
fs
out
fcomps
xchg
lret
inc
and
or
xor
jne
loop
data16
pop
sbb
inc
pop
mov
incl
jmp
inc
js
mov
loope
mov
out
jecxz
sarl
push
lds
shll
inc
jmp
test
fdivl
loopne,pt
inc
jmp
inc
daa
mov
ret
jbe
xor
pushl
push
icebp
push
adc
xchg
cltd
scas
movsl
andb
popf
adc
ffree
xor
lret
jmp
enter
and
mov
popa
pop
xchg
sarb
inc
add
pop
xchg
dec
mov
fmull
mov
and
pop
cmp
ja
sbb
arpl
or
push
lcall
pushl
mov
mov
xchg
xchg
arpl
das
popf
jb
jno
jmp
adc
push
sub
decl
addl
nop
clc
jle
mov
xchg
fisubrl
xor
ja
ljmp
dec
sub
subb
outsl
imul
loop
mov
cmp
sbb
pop
push
push
cmpsb
mov
xchg
inc
xor
and
gs
in
loop
push
jo
inc
sarl
adcl
decl
rorl
dec
or
lcall
fwait
scas
mov
pop
es
pushl
es
addr16
addr16
mov
rcrb
cmpsb
or
mull
mov
pushl
push
mov
daa
sub
nop
and
jno
jb
jmp
jl
or
xor
decl
mov
pop
leave
push
clc
dec
pushf
add
pop
adc
or
hlt
popa
neg
filds
jle
xor
push
mov
int
xchg
inc
sub
adc
pushf
push
das
in
test
pushl
jne
ljmp
push
push
cwtl
and
cs
cmpsl
in
icebp
cmp
pop
mov
inc
ret
inc
xchg
aad
subl
push
aas
and
mov
jb
xor
insl
or
mov
ja
xor
dec
sub
inc
loop
subb
les
test
inc
add
ja
inc
out
sbb
push
leave
adc
jo
dec
adc
mov
push
mov
insl
mov
pushl
fldt
or
cli
fadd
xchg
imul
push
scas
scas
sbbl
push
into
push
aas
hlt
adc
lcall
mov
adc
jne
pusha
test
or
pop
fisubrl
repnz
jmp
fnstcw
aad
pushl
add
xchg
jecxz
rcll
xchg
pusha
fs
adc
add
adc
decl
in
adc
and
jl
xor
pop
push
jo
test
sub
out
imul
outsb
push
cmp
data16
mov
in
dec
sub
adc
mov
xor
add
call
cld
xchg
cwtl
lss
pop
mov
ljmp
sub
lea
imul
ljmp
mov
icebp
cmp
mov
inc
push
in
imulb
jp
hlt
pop
dec
mov
int
xor
insb
call
imulb
and
add
arpl
aas
out
and
pop
aaa
mov
sar
ljmp
jnp
addr16
loopne
xor
fistps
cmc
inc
xchg
arpl
inc
and
xor
mov
ret
or
sbb
hlt
push
filds
lret
sbb
jno
sbb
and
call
fwait
xchg
mov
xor
cmp
in
push
xor
adc
dec
mov
jmp
js
push
add
in
out
imul
ret
pop
fstpl
adc
dec
mov
dec
jae
shrl
into
imul
lret
insb
jl
xlat
push
xchg
shl
pop
je
push
loope
decl
mov
gs
aad
jle
sbb
jle
xchg
push
std
xor
lcall
out
xor
call
adc
or
lret
cld
mov
popf
mov
movsb
jl
loope
icebp
dec
inc
and
pushf
cmp
pushl
test
inc
shll
pop
incl
lea
pop
xchg
xchg
pushl
fildl
mov
dec
lahf
pop
dec
sti
pushf
push
jnp
cmp
add
mov
call
mov
push
xchg
popf
cmp
sub
test
test
insl
dec
xchg
jmp
adc
push
stos
inc
push
cmc
jge
jne
dec
mov
cld
dec
wbinvd
mov
mov
adc
mov
mov
jl
in
int3
jmp
sub
push
xchg
jns
cltd
push
pushl
jmp
add
scas
sub
call
divl
test
fists
test
movsb
lcall
push
push
insl
pop
mov
mov
pushl
push
shld
mov
add
mov
push
dec
fildl
push
js
fbld
cmpsl
jno
orb
pushl
inc
and
stos
mov
xor
inc
or
cwtl
out
inc
insb
cmp
sub
incl
inc
sub
std
and
fmulp
dec
les
pushf
popf
cmpsl
and
mov
call
jge
imul
push
cmc
pop
mov
into
mov
jno,pn
std
xchg
add
push
and
notb
leave
dec
pop
pop
enter
das
pop
mov
fmuls
xchg
push
jmp
data16
mov
or
outsl
ffreep
add
and
cmp
and
or
pushl
repz
pop
jns
int3
xchg
lret
mov
pop
inc
roll
mov
das
ljmp
jmp
inc
loopne
lret
cmpsl
push
imul
sbb
lods
es
fbstp
fsubl
incl
ja
adc
icebp
and
push
cs
scas
shll
mov
cmpsb
incb
cmpb
movsl
xor
pushl
sbb
cmp
cmc
arpl
cld
lods
jg
add
outsl
jg
jb
incl
sub
adc
hlt
push
jge
xchg
popf
lret
adc
jnp
ja
subb
loop
mov
push
mov
inc
in
lahf
jle
push
lahf
mov
loope
pop
ljmp
mov
jp
cmp
das
pop
mov
pop
or
and
rcrb
cmp
lods
int3
push
repnz
decl
mov
dec
mov
imul
mov
fwait
jecxz
mov
lea
jmp
out
push
mov
das
subb
sbb
lret
dec
add
cmpsl
pop
ss
imul
ljmp
js
add
and
leave
cmp
imul
adc
xor
mov
mov
jmp
jns
jo
mov
adc
je
mov
and
and
decl
pop
and
shl
push
js
testb
cmp
mov
in
out
out
and
call
aaa
mov
scas
push
lret
ficomps
rcrb
mov
int3
test
xor
jmp
arpl
pushl
add
sub
test
mov
jg
xor
jb
mov
cmpsl
jp
dec
insb
sbb
aam
and
ret
dec
pop
loope
scas
inc
movsl
xor
fwait
lahf
iret
sub
lcall
lock
or
jae
mov
xor
jle
pusha
bound
lret
ror
rcrl
cmp
mov
mov
insb
decb
sbb
pop
cmp
dec
ss
mov
xchg
adc
pushl
imul
fldl
js
test
inc
lcall
jl
test
pop
xor
ljmp
in
dec
rcll
sub
pop
sbb
push
mov
es
pop
sub
call
neg
flds
pop
jbe
sub
jno
jo
stos
aaa
rorl
imul
decl
rcll
cmp
dec
insb
addb
fbld
cli
cmp
cmp
sbb
fcmovbe
clc
out
and
addr16
add
arpl
inc
call
lea
movsb
andb
ljmp
push
ror
mov
push
dec
jmp
outsw
aad
or
clc
call
std
push
out
mov
jae
loope
pop
int
daa
imul
mov
lds
incl
subl
dec
and
or
mov
push
mov
test
xchg
cmp
adc
xor
dec
gs
jg
ss
aaa
push
push
adcb
ja
adc
rolb
pushl
insl
loopw
and
push
push
lret
rorb
aam
fistps
jmp
stos
in
lock
shll
or
cmp
cmp
es
ljmp
jp
jns
ss
cmc
push
sbb
sub
pop
inc
lea
outsl
movsb
dec
ljmp
mov
xchg
push
adc
adc
pop
cltd
mov
push
incl
mov
pop
stos
mov
mov
insl
jl
cmc
lahf
mov
stc
mov
movsb
nop
inc
repz
movsl
inc
outsl
push
call
sub
jmp
fs
mov
aam
cld
push
mov
jae
mov
xchg
ffreep
sub
cld
ljmp
push
adc
into
lods
addr16
loopne
dec
cmc
test
ljmp
sbb
call
xor
dec
insl
mov
xor
xchg
pop
rol
xor
cli
popf
jl
xor
incl
lea
xor
test
xchg
imul
mov
push
or
lcall
mov
xchg
sbb
inc
adc
iret
fcompl
lds
leave
in
les
jmp
popa
mov
dec
fadd
fs
dec
and
repz
aad
add
mov
pushl
call
cmpsl
sbb
repnz
mov
mov
jg
push
mov
mov
lcall
xor
sbb
push
ja
wrmsr
cltd
push
cmp
xor
mov
aam
push
lcall
mov
arpl
imul
lret
sbb
roll
jns
push
dec
nop
pop
xor
call
clc
or
pop
sahf
jnp
dec
inc
add
dec
xor
lods
pop
xchg
sbb
xor
sbb
jmp
push
add
aas
pop
and
int
push
cmp
pop
aad
push
jle
jmp
adc
dec
mov
je
jo
or
adc
sarl
into
mov
aam
pushl
scas
and
sti
ljmp
pop
negl
adc
inc
sub
jp
xchg
xor
setle
xor
mov
lahf
leave
push
mov
lahf
das
movb
incl
mov
push
push
mov
sbb
lods
add
sbb
xor
push
dec
je
gs
mov
scas
cs
jne
repnz
repz
int3
push
insb
icebp
push
loopne
pop
lcall
jg
xchg
mov
les
int
xchg
dec
mov
aam
push
pushl
ret
leave
rcr
pop
adc
int
cmp
rolb
sub
pop
loope
adc
inc
aas
loopne
inc
mov
jmp
orl
movsb
xor
cld
fucomp
int3
dec
push
decl
mov
es
std
das
nop
adc
jne
push
xchg
pushf
jbe
mov
and
incl
xchg
adc
adc
dec
and
ljmp
add
and
std
call
and
loopne
or
pop
jno
push
bound
addb
jp
and
inc
adc
cltd
inc
push
cmp
insl
sbb
ret
push
das
cmp
into
xor
stc
add
shrb
sahf
incb
sbb
fnstenv
push
sbb
lcall
mov
movsb
shlb
mov
test
call
cli
xchg
lret
pop
or
xor
jmp
leave
xchg
int
pop
add
add
stos
repz
movsl
adc
cmp
sbb
mov
xchg
jmp
sar
sbbl
scas
outsb
lahf
mov
repz
inc
jae
cmpsl
nop
jmp
pop
jbe
jo
cs
in
scas
adc
pop
dec
cli
fsubrs
ja
inc
loopne
scas
cmc
cs
jmp
xchg
shll
loopne
cli
pop
out
je
inc
clc
int3
orl
mov
mov
pop
call
out
inc
cmpsl
clc
push
idivl
gs
sbb
cltd
and
mov
push
mov
xchg
inc
push
dec
pushl
inc
mov
push
ds
loope
or
xchg
movd
outsl
icebp
cmp
pushl
scas
clc
xor
sbb
mov
push
jne
jo
jo
sub
push
gs
cmpsb
cmpsl
rcrl
pop
js
inc
lret
ljmp
xchg
orl
jnp
and
jns
decl
hlt
adc
jb
fisttpll
mov
fwait
sahf
out
dec
fwait
jg
aad
pop
shl
jbe
out
sbb
and
in
sub
leave
add
inc
and
sbb
push
cltd
mov
jns
aad
loop
js
int
icebp
rorb
rorb
sub
or
int
adc
sahf
jge
xchg
pushl
pop
or
xor
add
aas
or
loope
sub
outsl
cmp
enter
adc
addr16
ljmp
aad
repnz
mov
nop
scas
mov
test
gs
jnp
cmpsb
pop
or
fdivrs
leave
mov
adc
fisubl
mov
imul
pop
ljmp
out
cmp
cmpsl
iret
cmp
int
ds
fsubs
pushf
xchg
fcmovnbe
test
das
scas
hlt
mov
loop
and
lahf
and
loope
or
in
fiaddl
jp
call
dec
inc
cmp
notb
ret
push
pop
mov
fildll
mov
push
pop
jnp
mov
test
loope
and
std
inc
in
js
xor
push
stc
es
insb
les
xchg
pusha
icebp
cmp
lcall
subb
jle
faddl
adc
aas
stc
mov
pop
aas
xchg
jl
pushf
mov
cmp
call
mov
xor
and
mov
mov
or
mov
pop
xor
lock
sti
and
das
test
jbe
sub
stos
clc
ret
lea
sbb
adc
fistps
rolb
lcall
ficompl
fisubs
lods
cli
in
inc
mov
clc
ja
pop
or
sarl
pop
mov
jmp
add
mov
mov
iret
mov
fidivl
test
jae
es
pushl
sbb
ljmp
shr
test
mov
vmovaps
push
addr16
xor
jmp
push
jl
xor
jo
shll
mov
push
repz
adc
or
aam
fwait
pop
sbb
lcall
and
add
add
jmp
push
push
cmpsl
cmpl
incl
hlt
movsb
xchg
push
cmp
outsb
mov
cmpsb
push
pop
test
mov
cld
ljmp
jmp
mov
jb
or
enter
sub
test
and
xchg
sub
movsb
movsl
jb
dec
inc
aad
call
sbb
outsl
xchg
mov
jne
push
mov
inc
mov
jns
jg
loop
decl
ror
fiaddl
sar
mov
mov
mov
js,pt
cwtl
jmp
mov
lea
incl
mov
cmc
pop
xlat
ss
or
dec
push
mov
mov
mov
call
inc
sbb
cmp
repz
sbb
xor
add
aad
mov
ljmp
dec
adc
or
xchg
inc
shrl
insb
xor
mov
dec
xor
mov
adc
and
push
std
out
and
xor
jecxz
icebp
and
ds
stos
ss
fistpl
or
daa
mov
ds
add
out
jns
lods
sahf
xlat
rcrl
lcall
jl
in
xlat
push
movsl
stos
cli
and
sub
pop
out
and
cmp
call
dec
or
data16
adc
addb
daa
cmp
fistl
mov
mov
jl
jne
pop
lods
imulb
pusha
xor
add
aas
ret
cmpsb
shlb
adc
jge
jp
xchg
shll
push
push
push
cmp
ret
stos
fnstcw
ds
popa
or
push
stos
out
cs
shrb
mov
pop
pushf
dec
aas
pop
arpl
ret
mov
repnz
shll
ljmp
unpcklps
xorl
shlb
inc
inc
insl
lcall
xor
decl
rcll
insl
mov
outsl
outsb
pushf
js
clc
jns
repnz
sub
mov
lcall
bound
loopne
jg
lret
movsb
iret
push
xor
jo
test
adc
into
or
aam
les
ljmp
add
lds
xor
imul
sub
cli
lahf
jbe
test
mov
aaa
push
inc
push
and
or
and
and
stos
test
sbb
mov
dec
mov
add
push
int3
in
decl
je
or
push
sbb
rcrb
aas
cmp
fmull
int
hlt
add
pop
ljmp
loop
jnp
mov
out
adc
mov
jg
orl
arpl
mov
xchg
sbb
inc
lcall
pop
push
push
xor
pop
dec
ret
and
mov
incl
inc
mov
push
iret
or
insl
push
pop
cs
out
jbe
xor
add
mov
lcall
mov
sub
jl
inc
mov
xrelease
stos
pop
push
xorb
ljmp
jmp
gs
pop
sbb
das
jno
ja
pop
imul
jnp
mov
fndisi(8087
andb
xchg
pop
mov
adc
fstpl
js
pop
push
shrb
add
jo
aaa
jne
movsb
lcall
adc
push
jbe
mov
fisubl
fiaddl
loopne
jg
pop
and
ficomps
add
xlat
fdivr
call
sti
out
mov
xor
xor
std
les
cmp
adc
scas
scas
push
xchg
jge
cmp
ret
shl
mov
cmp
mov
adc
arpl
mov
jmp
mov
lret
cmpb
mov
jae
int
int
std
movsb
push
ss
ret
fcom
xchg
mov
fstl
lret
sbbb
xchg
aaa
adc
cs
pop
xlat
mov
icebp
sub
stos
out
lods
fdivl
pop
ror
andl
mov
cmp
ljmp
lock
cmc
ljmp
jb
pop
pop
repnz
pop
mov
cmp
jmp
ja
jecxz
dec
cwtl
mov
in
push
fisttpll
pop
outsb
lea
dec
inc
hlt
jmp
dec
ror
xchg
mov
call
das
mov
jmp
shlb
push
mov
test
xchg
adc
xor
rorl
pushl
push
lods
cmp
repz
movsb
sti
jbe
mov
inc
cmp
loopne
cmpb
dec
dec
mov
cli
jge
test
push
insb
lea
movsl
scas
jbe
insb
xchg
sub
lret
mov
call
jns
xor
jle
mov
loopne
mov
sbb
pop
rolb
hlt
lods
push
mov
mov
jle
xchg
mov
lret
out
psubusw
outsb
ja
mov
xlat
jge
cs
inc
movsb
lcall
and
pop
mov
popf
leave
jle
popf
clc
rcrb
sbb
out
xchg
lods
push
arpl
call
lock
mov
adc
jle
das
hlt
mov
rol
mov
repnz
or
jae
jmp
push
add
and
mov
and
cmp
test
cmpsl
push
sub
stos
out
enter
call
es
test
mov
cs
cli
ret
imulb
shlb
jns
sbb
push
dec
pushl
repnz
int3
jl
leave
cmp
sub
test
sbb
shrb
or
cmp
and
repnz
in
fwait
adc
dec
icebp
pop
cmpsb
sub
jae
std
into
mov
sub
or
mov
pop
dec
jno
jmp
mov
in
movsb
xor
movsl
pop
inc
aaa
xor
dec
clc
shlb
mov
fisubrs
pop
leave
in
incl
sub
mov
imul
xor
cmp
push
mov
movsb
ss
lret
mov
push
out
or
xlat
mov
dec
cwtl
fstps
sub
mov
push
stos
sub
aad
fucomp
test
cmp
push
mov
inc
or
cmpsb
cwtl
in
pop
or
xor
subb
mov
push
repz
pop
push
cmpsl
fs
decl
aaa
pop
ljmp
js
mov
push
xor
repnz
test
stc
add
push
sarl
adcb
test
sbb
lea
xchg
std
and
ds
ror
inc
push
ja
push
adc
pop
mov
jle
fwait
int3
push
aas
cmpsb
fisubs
lcall
xchg
dec
lea
mov
xchg
push
pop
cmp
mov
cmp
sarb
hlt
inc
jbe
je
and
mov
mov
movsl
ljmp
cltd
adc
adcl
loope
sets
call
lcall
mov
mov
push
mov
outsb
cmp
xor
add
loopne
or
pop
dec
call
aas
scas
cmpsb
leave
cmpb
jo
lods
dec
scas
sbb
jae
adc
mov
sbb
call
add
mov
call
mov
fucomp
lahf
lcall
push
add
ds
movsb
gs
push
sbb
cwtl
xchg
xor
fidivl
add
inc
mov
mov
jno
sub
push
jae
in
leave
mov
out
xor
ret
lret
sub
rol
addl
ret
fwait
das
addb
cmc
gs
jmp
mov
mov
jo
incl
inc
xchg
adc
sbb
sbb
mov
les
jge
sub
lcall
cli
cmc
xchg
imul
sub
pusha
mov
mov
inc
shll
push
mov
ljmp
lret
add
lds
mov
stos
cmpsl
sub
addr16
enter
ljmp
cmc
mov
cmp
adcl
and
xchg
push
jle
jmp
cmp
jmp
pushl
test
mov
mov
push
js
adc
int3
and
out
jns
mov
inc
incl
mov
push
cmpsb
lock
sbb
cmpsb
add
fwait
les
mov
jo
jl
jmp
sar
pushl
addb
inc
sti
jnp,pt
pusha
pushf
or
xchg
jnp
leave
xor
test
jno
ljmp
loope
mov
sbb
inc
xchg
into
inc
dec
sahf
sahf
dec
jg
dec
xor
popl
ss
mov
push
repnz
mov
add
sti
decb
inc
and
ljmp
rolb
adc
or
pop
out
lcall
xchg
fcoms
add
call
dec
scas
add
les
mov
mov
cltd
arpl
lahf
jecxz
mov
das
test
sbb
jge
push
xchg
test
mov
mov
ds
out
das
repz
dec
mov
loop
mov
pop
cmc
jb
push
sbb
sbb
incl
push
in
add
aas
mov
and
add
stos
lea
push
push
les
pushl
ds
imul
sbb
lcall
movsl
jae
xchg
call
test
cmpsb
lds
push
dec
add
sub
int3
das
dec
hlt
or
call
xor
loopne
repnz
and
psrlw
dec
fwait
clc
ret
rdtsc
out
lcall
pop
mov
incl
out
in
pop
cmp
cmpl
mov
jmp
pop
inc
nop
push
js
push
das
lret
jns
popf
cs
or
xchg
addr16
inc
xchg
enter
jae
mov
inc
pushl
xchg
and
xchg
fs
pop
hlt
ret
ffreep
fs
inc
jne
lret
push
icebp
inc
addr16
inc
sbb
decl
push
ds
mov
jae
ds
and
push
ficoml
add
cmp
push
inc
dec
ss
lods
mov
mov
pop
push
push
out
mov
lret
daa
pop
jns
incb
lods
jae
jnp
lret
outsl
lret
lahf
xor
mov
xchg
xor
push
loopne
fdivr
ljmp
xor
adc
cmpsl
stos
xchg
sysexit
mov
inc
mov
push
jae
aam
clc
jg
xor
jmp
cltd
fldcw
inc
test
xlat
cmc
xchg
xchg
xor
pop
mov
mov
cmp
daa
or
pushl
jno
fidivl
pop
xor
pop
push
mov
jne
xchg
int3
in
shll
loope
repnz
mov
decl
cli
adc
xchg
xor
jnp
inc
inc
jb
sbbl
mov
call
push
jo
and
push
mov
xchg
sbb
hlt
insb
aaa
fsubrs
ret
dec
xchg
decl
js
mov
and
mov
jnp
xorl
test
scas
mov
cli
ja
cmpsb
pushl
pop
cmc
cmp
dec
jnp
pop
jmp
push
or
push
fnsave
js
lock
sbb
add
ret
sbb
daa
push
les
sub
mov
xchg
dec
lcall
sub
mov
adc
ret
lcall
add
or
xor
cmpsb
or
add
jnp
iret
cli
jns
add
dec
lret
lds
call
iret
ds
aas
ret
inc
out
insl
scas
xchg
mov
mov
jle
sbb
lock
pop
shrl
insb
adc
push
sbb
test
test
cld
mov
insl
adc
je
jno
enter
pop
es
ss
clc
inc
cmc
inc
mov
push
xchg
inc
sbb
lcall
mov
insl
fsub
jmp
mov
mov
jne
push
jecxz
dec
inc
je
mov
aad
sbb
inc
mov
cs
lahf
dec
cmp
dec
jb
xchg
xchg
stos
dec
fs
inc
sub
pushl
sub
or
mov
lret
cmpsb
ret
push
adc
xchg
lcall
repnz
cmp
ljmp
xchg
lret
dec
stos
jl
jno
movsb
push
loope
out
bound
out
cmp
call
in
pop
xor
mov
mov
or
jnp
jne
fsubs
loope
lcall
es
insl
shl
xchg
fxch
int
out
xor
imul
leave
pmaxub
shlb
in
lahf
decl
jge
movsb
or
xor
xor
fcomp
push
scas
jo
cltd
push
out
cmpsb
push
mov
or
adc
xchg
pop
xlat
push
out
and
and
mov
arpl
pushl
repz
test
movsl
push
hlt
popf
out
xor
mov
call
repnz
leave
mov
pop
inc
mov
mov
inc
jecxz
push
or
xor
jmp
jo
gs
pop
push
aaa
dec
mov
movsb
das
and
pop
sahf
jb
data16
xor
xchg
cmp
inc
xchg
xor
insb
mov
lods
cmp
and
inc
gs
aam
mov
pushf
inc
sbb
incl
push
mov
aad
shr
cmp
cmpsb
stc
adc
or
mulb
ljmp
lret
lcall
add
xchg
ficoml
push
cltd
mov
sbb
push
je
in
outsl
cmp
cmp
jns
jns
pop
lds
bound
jae
xchg
enter
cmpsb
jge
or
loopne
and
pop
inc
fcos
lcall
in
lcall
adc
cmp
inc
dec
stos
xchg
mov
lret
ficoml
jge
xor
push
adcb
out
nop
cmp
xor
mov
mov
subb
stc
icebp
jmp
mov
mov
mov
mov
fildl
aad
lret
in
call
push
test
xchg
pusha
or
jae
addr16
shrl
clc
iret
mov
jns
dec
sti
mov
fwait
pcmpgtd
cmp
ljmp
mov
lock
mov
xchg
mov
das
ret
push
ss
lcall
cmpsb
std
jge
adc
ret
cltd
jmp
daa
jge
inc
adc
xor
out
cmp
pushl
xchg
dec
cltd
clc
mov
movntq
and
mov
mov
xchg
decl
ja
mov
inc
jns
call
push
or
fildll
mov
ja
push
sbb
call
jmp
xchg
add
add
pop
outsb
or
pop
add
incl
push
jo
dec
testl
xor
push
lods
repnz
in
mov
adc
add
sub
in
add
add
js
out
add
cmpsl
push
mov
push
les
mov
cwtl
or
cmpsl
loop
xchg
inc
decl
sti
adcb
shlb
pop
pop
popa
xchg
out
dec
stos
fisttpl
ljmp
jae
fdivl
and
sub
jne
inc
jge
xor
jge
xchg
leave
sub
sbb
in
fcomps
pushl
lcall
mov
movsl
mov
repnz
sbb
mov
pop
orl
call
push
cmp
mov
cmp
mov
aad
cmp
push
dec
orl
decl
or
jge
jp
cmp
jmp
ret
imul
ss
sar
decl
pop
std
push
out
imul
mov
xor
xchg
add
ja
inc
adc
jmp
fldl
mov
movsb
dec
pop
aam
loope
or
lcall
out
in
mov
loope
icebp
shrb
cmc
ret
xchg
jo
lock
pop
stos
in
jg
inc
xorb
jl
dec
in
lock
push
leave
push
sti
pop
jno
lret
pusha
jecxz
mov
xor
pushl
sarb
sub
dec
movsb
pusha
movsl
mov
xchg
hlt
or
scas
sbb
pop
jmp
pop
and
add
aas
insl
xchg
fldcw
mov
in
inc
mov
pushl
loop
pop
addr16
mov
xor
rol
mov
dec
jle
cmc
mov
mov
aas
ljmp
minps
rol
lods
pop
int3
loope
dec
add
adc
lock
dec
pushl
out
movsl
pop
pop
ljmp
aad
lock
fisubrs
or
es
dec
jg
sub
incl
jl
aam
repz
scas
loope
jl
stos
mov
out
cld
aam
lahf
in
ljmp
push
js
lea
gs
mov
jge
and
sbb
push
add
into
push
mov
xor
inc
jle
add
out
dec
aaa
xor
dec
sub
xchg
mov
loopne
lret
dec
hlt
mov
add
enter
sti
aad
jl
xor
pop
repz
inc
ret
bound
lcall
pop
insb
xor
leave
mov
stc
cmc
mov
push
loope
mov
je
add
push
mov
jo
pushl
jecxz
sub
ret
mov
dec
adc
cltd
icebp
and
clc
jle
xlat
cmp
incl
call
ret
std
inc
pop
roll
addr16
xor
pop
mov
jo
incl
cld
cmp
test
insl
test
in
jne
subb
sub
test
cltd
sub
dec
jl
sbb
fisubrl
jae
loope
sahf
adc
mov
cmp
push
mov
hlt
xor
xchg
inc
jmp
decb
fsubl
nop
rcll
ds
sahf
addr16
jle
inc
xor
sbb
mov
decl
jge
lods
pop
and
sarl
sbb
inc
xchg
adc
jb
test
inc
mov
adcb
sti
vmwrite
mov
push
adc
out
lcall
lret
add
ret
enter
pop
lods
push
das
mov
xchg
bound
adcl
pop
shlb
out
in
les
push
adc
jnp
inc
pop
testb
dec
inc
xchg
add
jmp
mov
into
push
scas
bound
std
adc
sbb
sbb
pop
cmp
sub
pop
inc
decl
jge
mov
push
js
pop
movsl
rol
scas
xchg
add
sub
lods
mov
xor
mov
mov
lea
out
test
stos
das
es
pushl
in
in
cmp
ret
jmp
test
push
jecxz
jp
lret
lcall
sbb
ljmp
mov
xchg
mov
mov
mov
fstps
ljmp
inc
dec
std
push
push
stc
jp
enter
xor
in
sub
dec
sub
lcall
jb
sti
test
push
mov
and
dec
adc
out
push
mov
xchg
push
sub
adc
repz
jns
fildl
mov
mov
sbb
std
push
push
mov
cmp
mov
jg
dec
dec
push
pop
orb
push
int
xor
jl
lea
add
add
call
sbb
mov
xchg
test
dec
jne
or
inc
jmp
fcmovb
add
clc
inc
insl
mov
stc
in
pop
ss
cmp
mov
insl
and
call
inc
ret
ljmp
push
mov
pop
int
bound
mull
stc
and
jmp
fcomp
arpl
cld
inc
push
add
adc
mov
or
loopne
cmp
mov
ljmp
cmp
or
divb
ret
add
mov
push
add
lcall
push
xchg
test
lock
xor
mov
cmp
loopne
fisubrs
hlt
cltd
and
sub
cli
jne
adc
dec
int
test
inc
push
push
lock
movsl
inc
or
dec
and
ljmp
xor
xchg
popf
jp
mov
mov
sub
and
dec
popa
das
addb
les
repnz
xlat
push
or
adc
xchg
pushf
dec
sub
sbb
ljmp
sub
arpl
loopne
pop
enter
sub
lock
xor
sbb
scas
push
cwtl
jecxz
dec
and
jmp
adc
cmp
lock
push
out
frstpm(287
jecxz
lods
push
mov
xchg
test
loopne
decl
inc
push
int3
popa
cmpsl
sub
lods
jmp
iret
dec
out
fs
xchg
sar
jmp
adc
ss
roll
or
pop
test
lods
arpl
pushl
arpl
pop
ret
faddl
pop
pop
mov
in
add
and
cli
leave
cmp
lock
in
sar
jmp
xor
dec
iret
hlt
les
xchg
fcoml
pop
pop
mov
push
sahf
push
xchg
xor
ljmp
mov
mov
mov
in
test
adc
jmp
sbbb
inc
jbe
jg
and
push
adc
xchg
sub
ret
mov
ficomps
push
cmp
add
push
push
jns
push
add
popa
inc
push
add
aaa
test
mov
cld
lods
sahf
cmp
decl
cli
adc
ret
stc
addr16
js
adc
mov
xor
sarl
scas
cmp
mov
ss
mov
push
and
dec
sbb
mov
sbb
call
pop
jp
xor
test
stc
rorl
adc
bswap
or
jne
loopne
in
fistl
in
lods
push
pop
xchg
push
cmpsl
movsb
xor
or
mov
inc
jae
sti
outsl
jg
mov
lcall
shll
negb
movsl
jno
aaa
enter
aam
xor
test
add
fstps
faddl
sbb
and
cli
enter
sahf
and
and
mov
incl
pop
insb
mov
in
ljmp
loopne
cmp
mov
decl
daa
xchg
inc
pusha
lret
hlt
pop
fdivrs
mov
xor
ds
adc
pop
cmp
js
in
pusha
add
inc
and
repz
mov
jbe
mov
jnp
mov
xchg
mov
mov
mov
push
call
mov
dec
jle
and
push
add
adc
pop
pop
cld
jle
jne
ljmp
mov
mov
adc
pop
mov
lods
fisttpll
mov
mov
jp
cltd
pushl
cmp
scas
jo
and
sub
iret
pop
jae
lcall
adc
sub
push
sarl
loop
xor
shl
dec
addr16
fldcw
stos
aas
mov
sub
int3
mov
gs
push
int
outsb
ret
lcall
bound
outsl
bswap
arpl
lcall
clc
ss
xchg
xor
roll
imul
fiadds
jle
pop
call
decl
mov
and
int
sar
dec
jmp
mov
mov
decl
inc
and
xchg
sbb
xchg
sti
icebp
mov
mov
sahf
and
arpl
pushl
into
popf
cmp
jg
movl
or
movsb
test
adcl
repz
bound
inc
es
sub
adc
pop
inc
push
imul
fwait
les
in
sbb
fdivrp
jns
rorb
les
cmpl
mov
inc
lret
in
gs
add
decl
fcomps
lods
and
sbb
in
les
out
adc
lcall
dec
outsb
and
enter
xlat
xor
es
cmp
fnop
enter
xchg
xchg
fisubrs
decl
dec
pop
sbb
cmp
ficoml
add
sahf
pop
mov
pop
data16
out
inc
decl
out
cmp
enter
mov
and
aaa
popf
mov
or
out
call
loop
aaa
out
dec
and
lahf
push
mov
dec
dec
pop
mov
out
mov
cmc
fisubs
pushl
adc
aam
fnstsw
mov
mov
js
in
cld
pushf
sub
push
pop
jmp
movl
push
mov
pop
mov
dec
and
push
sub
push
lahf
nop
mov
pop
xchg
sti
push
aaa
sbb
mov
mov
pop
data16
jmp
sahf
xlat
xlat
dec
sub
xor
jmp
pusha
cld
andb
mov
mov
incl
clc
es
cmp
adc
jg
aad
adc
rcrb
and
dec
decl
insb
leave
fdivs
cmpsb
and
dec
sbb
push
pop
push
adc
and
enter
lcall
xlat
loope
cs
add
cs
mov
test
lock
rol
lods
cld
cmpl
mov
shl
mov
notl
push
dec
dec
das
cmp
add
jl
add
out
in
decl
add
sbb
sbb
push
outsb
xchg
sub
push
sub
push
dec
cmpsb
and
stc
orl
jl
cmp
mov
inc
xorb
jns
shrb
and
inc
stos
test
jbe
pushl
jo
int
jb
sub
repz
ret
ret
and
loope
and
leave
std
xchg
pushl
std
cltd
push
nop
hlt
in
xor
and
call
sbb
or
enter
mov
add
jecxz
icebp
cltd
in
repnz
xorb
cmp
jmp
sub
fdivl
pop
adc
movsb
bnd
jle
mov
fimuls
xchg
popa
out
lcall
mov
push
adc
inc
cmp
ret
sub
sti
rcll
pusha
andb
fwait
push
dec
mov
int
or
mov
mov
inc
jbe
jle
aad
or
cmp
call
mov
fistl
cwtl
cmc
add
pushf
sub
jno
mov
outsb
or
jge
mov
call
fmull
adc
ret
or
stc
insb
aaa
shrb
cmp
enter
pop
outsl
lret
call
dec
insb
iret
fwait
mov
inc
mov
and
adc
cmp
sub
mov
stc
in
jbe
shlb
int
xor
sti
or
jle
inc
inc
leave
mov
ss
insb
adc
decl
pop
nop
ret
ss
or
imul
push
xchg
add
hlt
mov
bound
ss
cmp
pop
rcll
add
push
push
test
adc
mov
iret
dec
cmc
adc
ret
and
frstor
loope
cmp
adc
inc
pop
shl
test
inc
rorb
and
mov
jle
inc
cmpb
or
lahf
sub
xchg
call
jae
adc
sub
mov
test
sub
cmpsb
int
dec
imul
fdivr
lcall
xchg
jmp
fs
cmpl
mov
push
scas
je
aaa
xlat
and
pushl
xchg
mov
arpl
dec
psubb
xchg
int3
ret
cli
xchg
ds
lock
outsb
arpl
jmp
dec
jmp
jl
mov
sbb
test
pop
hlt
sbb
jg
repnz
movsb
es
icebp
ljmp
jl
xlat
lods
and
xchg
cmc
mov
int3
loope
pop
pop
mov
cmp
mov
rclb
cmp
and
and
fnstcw
lahf
in
popf
fdivr
xor
mov
jg
shr
mov
sub
lahf
out
in
cmc
fdivs
test
addl
pushl
ss
adc
rcrb
outsb
stc
mov
jecxz
push
sbb
call
shll
mov
adc
icebp
add
stos
push
dec
mov
call
sbb
mov
jecxz
inc
mov
bnd
xor
cmp
and
pop
dec
call
mov
xchg
call
mov
ss
or
test
int3
mov
pushl
and
gs
push
push
inc
or
shlb
mov
call
ja
push
mov
loope
dec
jns
cltd
fldl2t
test
popa
sbb
in
pushl
aas
adc
arpl
jp
jne
std
rcll
cmp
jmp
outsl
bound
incl
jle
fiaddl
dec
nop
jmp
mov
cwtl
or
mov
and
or
xchg
jmp
ficoml
and
xchg
xchg
orb
lds
or
xor
and
sub
cld
or
decl
fyl2x
iret
out
xor
hlt
lds
test
mov
insb
sbb
std
das
sbb
pop
pushf
pop
decl
cmpsl
xor
push
xor
jae
xchg
mov
add
js
push
or
lcall
mov
dec
enter
push
test
adc
mov
add
sub
sahf
jne
rorl
or
or
in
inc
fcomps
imul
pop
lock
ljmp
stos
pop
lods
lock
xchg
or
jg
lods
shr
shll
iret
push
mov
sub
mov
lods
xchg
push
xchg
push
push
or
fsubl
fnstenv
dec
imull
inc
mov
and
jmp
hlt
push
add
add
orl
fisubrl
inc
daa
inc
mov
mov
mov
xchg
ljmp
jbe
push
mov
lea
cmp
dec
inc
or
xchg
dec
cmp
mov
fstpl
jmp
cmpl
insb
inc
pop
stos
mov
jne
sti
push
lahf
inc
je
rorb
popf
imul
jmp
push
inc
inc
pop
xor
movsl
mov
loop
in
dec
fildl
leave
ret
push
jg
clc
adc
rclb
mov
test
mov
in
mov
or
sub
pop
adc
decl
dec
gs
jle
in
push
fstps
xchg
or
int3
mov
jnp
push
outsb
jmp
out
int
leave
jp
push
mov
mov
test
cmp
fs
mov
add
adc
filds
aam
inc
fcoms
mov
mov
filds
rclb
gs
mov
cmp
fists
insb
int3
popf
inc
aam
filds
out
adc
imul
sbb
fcmovnbe
add
ljmp
popf
test
gs
icebp
pop
shr
add
mov
scas
sub
das
or
cmpsl
ja
and
addr16
dec
mov
rolb
test
movsl
cmp
ja
xchg
cmp
adc
ljmp
mov
dec
sub
dec
movsl
cli
xchg
sub
int
add
std
jle
push
test
push
popf
fwait
adc
cli
jns
aad
stos
adc
and
es
adc
call
lcall
repz
das
push
xor
out
adc
movsl
xchg
int3
sarb
adc
cli
lods
sbb
movsl
data16
popf
jge
mov
push
or
in
fldcw
xor
orb
decl
aaa
inc
fadd
push
js
loop
mov
mov
and
sub
cs
jl
call
ljmp
stc
lret
jno
in
pop
adc
nop
and
fcmovbe
push
jg
push
xor
ljmp
dec
mov
or
ljmp
xchg
out
push
dec
jo
test
je
cmp
sbb
lahf
aas
inc
ja
jno
stos
push
sbb
jp
xor
cli
xchg
pop
sbb
push
sahf
jmp
sbb
fwait
loop
cs
or
movsb
fimuls
cmp
pushl
shll
jl
or
add
cmp
outsl
jae
push
mov
dec
imul
jmp
sbb
sub
add
sbb
sbb
aas
pop
mov
or
add
and
incl
cmpsb
cmp
lock
adc
dec
inc
shrb
pop
xchg
inc
mov
inc
lods
outsl
iret
js
sbb
lcall
dec
fidivs
mov
gs
lea
out
mov
mov
sub
adc
and
pushl
mov
mov
pop
mov
aas
stos
je
pop
daa
xchg
mov
test
jmp
push
in
and
jno
xlat
inc
ret
xchg
rcll
push
test
hlt
and
lods
jp
cltd
aas
adc
ret
push
into
mov
out
fnstsw
ss
xchg
sbb
loopne
push
cmp
mov
call
leave
xor
stos
sbb
je
mov
insb
xor
lods
mov
jmp
add
xor
jmp
cli
fsubl
jl
mov
pop
add
dec
mov
loop
and
es
dec
shll
jmp
push
inc
pop
ss
fwait
xchg
std
or
ja
xlat
fdivs
fbstp
and
es
call
inc
ret
mov
xor
fwait
push
jnp
add
loopne
lods
lea
inc
arpl
call
dec
mov
push
adc
loope
mov
adc
push
imul
cmp
pop
andl
xor
jno
cmp
hlt
mov
sbb
sub
ljmp
scas
and
mov
outsl
or
scas
iret
or
dec
push
call
popa
jge
lock
incl
pop
inc
mov
adc
jmp
cmp
jb
push
xor
ret
inc
es
ss
jnp
decl
scas
pop
fstp
inc
or
and
jbe
int3
into
cmp
push
sub
lcall
dec
adcb
or
rep
in
ja
rcrl
ds
ja
and
mov
inc
popa
out
out
pop
ja
cltd
push
or
jb
jne
mov
roll
and
xchg
xor
dec
mov
sbb
mov
rclb
jge
jmp
inc
imul
xchg
out
je,pt
data16
iret
cmpsl
enter
fstps
adc
loope
mov
mov
fiaddl
adc
inc
gs
xchg
push
adc
xor
inc
jb
shr
add
call
lea
insb
fiaddl
jns
cmpb
outsb
cld
call
bound
xor
iret
inc
pop
cmp
das
nop
fistl
mov
mov
cmp
mov
or
mov
daa
fistps
out
lock
or
incl
adcb
xchg
and
lahf
movsb
shll
aaa
ret
rcll
jmp
out
or
mov
into
mov
pop
mov
mov
mov
gs
jmp
ljmp
lods
gs
inc
fcompl
outsb
lahf
mov
sub
out
out
arpl
mov
daa
jg
xlat
into
pop
push
in
add
std
push
mov
pop
iret
push
dec
adc
repz
pushl
ss
push
popf
test
sub
adc
jmp
cld
inc
sub
inc
xchg
xchg
push
xor
lret
push
xor
inc
cmp
jno
add
xor
popf
sub
and
jmp
sbb
jns
sti
cs
push
rclb
and
lcall
jo
add
shll
dec
cmp
lds
or
inc
mov
test
data16
ret
js
ljmp
popa
dec
dec
inc
mov
out
lret
push
repnz
inc
adc
cmp
inc
shrl
adc
pushl
jp
imul
push
or
call
xor
jg
inc
and
mov
sti
pop
decl
incb
mov
insl
mov
push
imul
xchg
push
nop
aaa
cmove
cmc
pushl
mov
xchg
in
sbb
mov
in
xor
in
inc
xor
stos
add
jmp
insl
test
mov
mov
std
mov
xchg
lahf
lahf
int3
push
or
mov
adc
inc
pushl
ss
loopne
outsl
sub
jl
lods
xchg
in
pop
and
fbld
jg
out
incl
scas
cmp
loope
lea
rcr
iret
and
xchg
iret
shl
cmp
jne
incl
imull
je
or
and
pop
roll
mov
insb
jb
incl
push
add
pop
push
cmc
imul
stos
fcomps
fldl
call
mov
mov
aas
dec
outsb
test
push
xchg
xchg
and
dec
inc
lcall
call
test
adc
aam
add
dec
jle
mov
fcomps
daa
jecxz
ficompl
push
push
jmp
out
add
and
dec
movsl
int
stc
cmp
lock
sbb
cld
inc
or
adc
imul
jl
pop
out
xchg
cld
lret
adc
mov
xor
insb
lds
add
cmpsb
leave
sbb
int
and
into
pop
stc
repz
out
sub
cmp
inc
sbb
mov
rclb
sbb
rorl
mov
leave
lock
adc
fwait
ljmp
pop
cvtps2pi
sbb
dec
mov
repz
dec
loope
xlat
in
aas
add
sub
lcall
xchg
fsubl
ljmp
add
mov
mov
and
pushl
pop
inc
push
leave
mov
fimull
lods
adc
or
jl
adc
mov
mov
inc
push
inc
cld
fcom
or
leave
cwtl
xchg
pop
push
fsub
xchg
data16
fcomp
test
sbb
mov
clc
and
or
xor
aas
imul
add
fs
outsl
or
pop
gs
pushl
addr16
jmp
cwtl
pop
pop
shll
outsl
or
lahf
dec
into
lret
loopne
leave
int3
movsb
insl
pop
jl
test
fcoml
shlb
lods
rorl
cmp
push
iret
ret
xchg
lcall
jmp
jo
cmp
enter
pop
pop
dec
lret
jnp
mov
fmul
pop
mov
push
ljmp
and
pop
lret
out
mov
jmp
outsb
push
addb
mov
mov
or
dec
pop
sahf
or
adc
cli
in
pop
sti
xchg
xchg
sub
push
adc
or
sbb
push
pushl
and
and
inc
xchg
dec
xlat
inc
roll
aaa
mov
or
inc
jbe
popa
mov
cld
pop
data16
pushl
sub
loope
lret
xlat
xor
in
sahf
daa
scas
aam
mov
push
fwait
add
mov
mov
pop
movsb
stos
addb
mov
idivb
or
fldl
xor
lock
lods
dec
insb
lods
dec
into
ret
xlat
inc
cld
bound
int
add
pop
push
adc
sub
cmp
lcall
shlb
in
xchg
call
lods
xchg
insl
sarl
cli
jl
pushf
sub
sbbl
aaa
or
xchg
jns
and
dec
adc
inc
andl
call
loopne
jl
lds
xchg
aas
sub
shll
subl
lahf
adc
cli
sbb
xchg
fs
js
pop
jo
add
repz
into
std
call
out
ds
ljmp
inc
xor
mov
adc
sbb
inc
fisubrl
xchg
fidivrs
das
insl
xorb
fisttpl
adc
imul
in
das
sets
fldt
mov
rcl
inc
xor
jl
lods
repz
cmp
mov
xchg
xchg
imul
ljmp
xor
decl
ss
push
daa
in
cmp
dec
insl
mov
test
nop
xor
test
jmp
popa
jbe
xrelease
add
cmp
push
sarl
clc
inc
mov
or
into
sub
aas
pushl
xor
int3
daa
lds
fimull
sti
test
add
or
ds
aam
fistps
jmp
fisttpl
stc
jo
out
divb
pop
lods
lcall
int
add
gs
call
and
aam
adc
push
pop
mov
mov
sub
test
sub
dec
ret
pop
lcall
lea
sub
insl
xchg
fimull
les
pop
push
dec
push
push
dec
aam
jno
fadds
cmp
mov
push
dec
push
sti
sub
pop
cmp
or
mulb
loop
out
loopne
or
inc
jno
fwait
inc
sbb
cmp
sahf
push
ljmp
movsb
sub
in
incb
pop
loopne
jmp
ret
pop
push
pop
mov
mov
lcall
mov
xchg
dec
mov
decl
dec
jg
mov
lods
js
sarl
add
gs
adc
call
aad
jb
in
xchg
cmpsb
pop
jns
fnstenv
mov
dec
out
dec
cli
lods
xchg
mov
inc
das
mov
mov
pop
pushf
cmp
cld
lods
inc
lcall
jmp
sbb
decl
enter
orl
pop
std
adc
add
push
dec
push
push
icebp
mov
lcall
pop
movsl
xchg
dec
add
adc
movsb
minps
outsl
cmp
fs
fldcw
ljmp
dec
ss
mov
loope
dec
cmp
vpsllw
sbb
sub
sar
ljmp
inc
out
fs
outsl
fwait
jns
mov
in
lock
sti
ds
mov
testb
cmc
jmp
in
adc
loop
rorb
dec
call
aam
mov
sub
movsb
call
xchg
repnz
add
nopl
stc
or
push
push
imul
inc
decl
mov
and
sub
dec
cmp
movsl
fnsave
cmp
lcall
dec
xchg
bound
lods
push
std
ret
mov
cltd
gs
push
sbb
fcos
fisttpl
ret
aad
les
sub
xchg
inc
fistl
test
cmc
and
cmp
call
dec
jle
mov
jb
ds
push
pop
fstp
xor
push
mov
pop
sbb
xchg
prefetch
or
xchg
jnp
outsb
out
mov
xchg
mov
outsb
imul
xchg
test
call
stos
enter
cmpsl
adc
pop
arpl
mov
les
xor
jle
repz
add
ljmp
int
jmp
jno
mov
add
mov
inc
adc
cld
sbb
push
mov
nop
ds
outsb
jp
push
adc
lea
rorb
mov
mov
insb
inc
mov
or
sarl
cmp
mov
sbb
and
cmpsl
les
fistl
xor
rorl
push
ret
in
cmp
xlat
mov
sti
push
test
push
popa
adc
push
pop
xchg
loopne
inc
push
jge
pop
pushf
cmp
dec
lret
jb
fld
pushf
clc
push
dec
stos
mov
or
lock
adc
decl
pop
sub
jb
leave
cmp
leave
jmp
xchg
fwait
sub
add
and
add
das
sub
xor
fldt
fisttpll
adc
iret
les
lea
pop
push
lret
lds
add
pushl
mov
push
in
cmp
jno
call
mov
push
push
into
dec
outsl
lcall
adc
and
inc
jmp
ss
aas
and
ds
sub
notl
jns
imul
inc
scas
das
xor
decl
sub
pop
fbstp
adc
xchg
mov
and
sbb
ljmp
sub
call
je
cmp
js
sub
sub
jecxz
cwtl
ljmp
mov
scas
jae
push
imul
mov
iret
je
rorb
fldenv
mov
cld
xchg
sbb
dec
inc
mov
es
push
xchg
xor
jg
cs
or
orl
add
and
lds
or
arpl
jno
popa
call
in
adc
cmp
shlb
add
addr16
out
js
lods
into
push
cmp
mov
ljmp
orl
mov
and
xchg
dec
and
test
and
jle
insb
dec
dec
jbe
cli
xchg
pop
xor
popf
push
pop
xchg
pop
loopne
into
mov
insb
jbe
and
call
xchg
mov
cmpsl
lret
inc
push
jg,pt
cmpb
shlb
dec
xchg
cmc
stos
and
lcall
ficoml
xor
or
das
sbb
bnd
pop
out
jae
clc
movsb
lods
call
call
adc
jg
and
scas
pop
dec
outsb
cmp
pushf
lcall
std
xor
sbb
mov
pop
xchg
shll
push
jbe
sub
adc
adc
ret
shl
mov
pushl
mov
ds
push
repz
sbb
imul
les
andb
dec
call
js
lea
stos
mov
sbb
out
jne
pop
mov
jae
push
push
ljmp
imul
iret
xchg
in
xchg
and
inc
dec
jmp
adc
adc
out
xor
push
stc
call
jmp
mov
inc
mov
and
andl
fistpll
cmp
dec
mov
jmp
sbb
pop
enter
jbe
jne
mov
add
pop
dec
enter
sbb
sahf
cmpsl
orb
cmp
push
addr16
push
bound
jecxz
sbb
arpl
lcall
stc
mov
pushl
test
es
inc
xchg
jl
out
cld
scas
lods
in
mov
rclb
sub
aad
pushf
pop
pushl
dec
cmpsb
imul
adc
fmull
mov
mov
nop
les
decl
or
les
mov
push
xchg
and
add
cld
and
out
adc
jnp
ljmp
adc
mov
fists
pop
add
leave
or
xchg
xchg
mov
mov
dec
xchg
pop
bound
call
mov
jge
add
jecxz
rolb
cs
xchg
dec
les
dec
mov
call
pushl
out
xor
sbb
gs
push
ja
jbe
sub
sbb
inc
arpl
xor
aas
sub
out
decl
fadds
sub
mov
mov
mov
jp
mov
jae
adc
pushl
pop
idivb
dec
cld
out
in
dec
pop
lret
das
scas
add
dec
and
dec
and
jmp
ljmp
mov
lds
push
push
scas
addr16
popf
jge
push
int3
testl
decl
and
dec
push
les
lret
nop
gs
jge
mov
les
decl
jge
int3
mov
fcoms
pop
dec
sub
mov
mov
sbb
sbb
pushl
xchg
xor
xchg
out
cmc
aas
jmp
pop
ds
or
jl
cmp
testb
incl
xchg
xchg
or
mov
cmpsl
sbb
sub
pop
mov
push
movsl
cmp
ljmp
enter
fiaddl
xchg
test
cltd
and
je
jns
fdivr
mov
lods
pop
ljmp
sbb
dec
loopne
and
xchg
xchg
inc
mov
pop
ljmp
inc
mov
stc
testb
dec
mov
sarl
sub
adc
mov
or
mov
outsl
lcall
or
jo
jbe
mov
es
incl
out
rol
cltd
pop
rcll
aaa
push
cli
je
movsb
mov
mov
pop
jle
fnstenv
shlb
repz
add
sub
pushf
lods
or
xchg
adc
mov
lea
cs
loope
out
inc
cmpsl
sub
dec
mov
push
or
jl
mov
aad
xorb
and
push
negl
call
pop
mov
lcall
outsl
inc
popf
bound
ret
pop
mov
mov
lret
jns
sarl
push
movd
pusha
loopne
xchg
cmp
insb
popf
push
cmc
lahf
aas
ret
test
cmp
movsb
pop
nop
xchg
movsl
adc
ljmp
push
pushf
sub
and
insl
ja
fimuls
call
cli
movsl
cmp
popf
mov
incl
dec
insb
cli
lods
push
inc
shlb
or
notb
repnz
orb
sbb
outsl
sbb
jecxz
inc
push
cmp
cmp
mov
imul
cmp
mulb
cmp
int
lahf
push
adc
push
push
push
inc
aas
mov
cmpsb
outsb
dec
ret
inc
jo
dec
mov
jle
mov
clc
push
daa
std
lock
adc
jl
sarb
jo
jecxz
pusha
mov
mov
decl
out
sub
sbb
jne
lods
mov
fs
dec
repz
test
dec
dec
inc
cli
loope
fimuls
pop
test
sbb
adc
fldenv
and
in
cmpsl
jmp
mov
cwtl
sbb
in
dec
mov
rorb
lods
faddl
jns
insb
addl
sub
arpl
or
or
aas
inc
inc
dec
idiv
jmp
pusha
pop
inc
sub
and
sbb
xlat
pop
movsb
fwait
shl
jge
sti
pop
call
jmp
mov
cmpsl
mov
movsb
loopne
adc
sbb
pop
int
or
mov
inc
pop
in
xor
push
and
cmc
les
adc
mov
rorl
stc
aaa
stos
push
out
stos
push
xor
jge
cwtl
xchg
mov
out
pop
loopne
aaa
leave
push
imul
ret
xchg
scas
or
movsl
cmp
xorl
scas
cmc
dec
push
insb
ja
fsubl
into
stos
cld
pusha
ds
enter
jp
rclb
mov
insb
push
lret
jge
cltd
xor
jmp
mov
clc
leave
jmp
cwtl
push
push
js
ja
inc
sbb
mov
sbb
pop
adcl
adc
jge
lcall
add
ret
rcll
mov
outsb
leave
mov
and
ljmp
pop
jl
cmp
mov
lods
daa
stos
loopne
popa
cmpsb
js
mov
cmp
and
incl
mov
pop
shlb
mov
std
jge
mov
dec
loope
incl
adc
fbld
sub
sbb
stos
fsubrl
call
sbb
imul
push
in
stos
push
adc
bound
and
jmp
adc
repz
add
lods
or
stos
movsl
xor
mov
xchg
xlat
jmp
cmpb
cmc
add
mov
xchg
mov
cmp
mov
jecxz
push
xor
pushl
xor
add
push
inc
fmull
sti
pop
xlat
cmp
xchg
push
mov
pop
add
cs
int
jmp
ljmp
aas
shr
sbb
shll
cld
popf
cmp
imul
sbb
stc
dec
jmp
negb
mov
pusha
cmp
cmp
repnz
je
mov
jae,pt
sub
das
loopne
lret
and
pop
mov
fwait
movsb
scas
adc
insb
les
fisubs
dec
test
es
loop
lods
iret
sarb
fimuls
mov
movsl
jnp
xchg
xor
sub
jg
pushl
or
aaa
jno
or
pop
sub
pop
unpcklps
sahf
std
mov
sub
or
cmp
das
pop
cmp
jp
lcall
lahf
mov
mov
cmp
pushf
mov
jmp
lods
xlat
cmc
std
std
nop
lods
inc
dec
inc
scas
pop
mov
pop
mov
cwtl
xor
sbb
decl
jp
bound
jmp
fldcw
mov
int
movsl
iret
es
jl
pop
jl
bound
in
cli
adc
repnz
mov
mov
sub
iret
fwait
out
add
fisubrl
loope
sub
sub
jmp
cmp
outsb
sub
inc
sub
inc
cmp
inc
inc
mov
cmp
adc
dec
xor
mov
shll
das
sbb
inc
pusha
pop
dec
rol
dec
inc
idivl
pop
imul
jecxz
data16
std
add
hlt
sbb
lcall
stos
lods
or
js
dec
xchg
inc
cmp
xor
adc
push
push
pushl
out
xchg
mov
inc
inc
enter
ss
push
dec
mov
xchg
loope
inc
mov
adc
jg
lahf
int3
mov
mov
test
push
and
push
jp
shrb
out
dec
rcll
lcall
jns
dec
inc
mov
and
aas
jne
icebp
js
sub
jno
xor
call
jmp
rcrb
xchg
push
mov
loopne
dec
mov
in
mov
aaa
test
gs
pushl
shr
test
add
repnz
mov
or
jp
xchg
pushl
out
ss
xlat
imul
js
jle
mov
jbe
js
cltd
fidivl
ljmp
mov
mov
or
xor
imul
pop
adc
clc
test
lock
or
arpl
pop
and
jns
gs
mov
mov
sahf
jmp
int3
ret
push
or
fdivrl
rorb
add
xor
cs
fs
or
sahf
jne
jmp
pop
jbe
jl
pop
imul
or
bound
pop
rcpps
in
out
inc
loopne
pop
pop
push
jle
pusha
mov
lret
mov
xchg
int
pusha
stos
and
call
adc
fwait
mov
sbb
call
imul
dec
ja
gs
hlt
bound
enter
out
xchg
pop
pop
in
jp
and
fistpll
push
cmpsb
mov
inc
cld
xchg
push
and
push
scas
mov
pop
inc
aas
sub
xchg
cmp
incl
in
push
mov
mov
flds
and
aaa
adc
lods
and
sar
add
dec
sti
jmp
dec
outsb
fcomi
sbb
sub
dec
scas
add
pusha
out
push
cwtl
xorl
lcall
enter
cmc
adc
pop
fnstenv
sahf
iret
cmpsb
push
mov
ficomps
and
jg
imul
lcall
out
ja
std
out
daa
fs
cmpsl
cmpb
in
jnp
divl
push
mov
fmulp
out
lahf
stos
mov
sub
cmpsl
xchg
inc
sub
mov
adc
ljmp
out
mov
loope
mov
jmp
loope
movl
lods
jne
call
stos
into
lock
aad
push
inc
and
fwait
repz
add
jg
mov
decl
xor
repnz
lcall
js
stos
aad
jb
push
mov
ljmp
xchg
inc
cs
mov
in
sar
cwtl
test
into
sbb
inc
jmp
inc
mov
decl
dec
cs
pusha
lret
xchg
cmp
jl
pop
pop
leave
leave
int
js
incl
fs
push
iret
ljmp
imul
nop
xlat
jle
dec
out
imul
pusha
and
movsb
je
lret
xor
push
push
in
push
xchg
jns
nop
adc
push
std
inc
addb
das
sbb
pushl
fadds
push
xchg
jg
cwtl
mull
je
dec
cmc
lock
das
les
mov
jnp
outsl
fwait
paddw
inc
jp
dec
mov
es
fwait
cmp
hlt
addl
ljmp
and
lea
out
repnz
gs
in
ss
mov
cltd
jp
ss
mov
les
push
push
das
addr16
xchg
mull
fsubr
sub
pop
cmpb
incl
sub
rcl
inc
icebp
mov
popf
in
xor
rorl
ret
xchg
mulb
stc
sbb
xchg
shll
adc
shr
mov
pushf
xor
mov
stos
fstps
ret
push
xor
in
cmp
pop
mov
xor
out
or
inc
and
aaa
fimuls
sti
fadds
bound
sar
hlt
decl
fimuls
push
push
mov
dec
ror
sar
push
xor
aad
and
push
fiadds
mov
inc
outsl
stc
add
or
xchg
xchg
mov
xorl
ja
and
mov
fs
ljmp
int
pushf
xlat
xchg
jnp
xor
inc
addr16
les
adc
pop
inc
loope
jmp
rclb
andl
rorl
pushl
mov
jge
dec
movsb
aam
nop
lods
add
rorl
leave
push
loopne
mov
mov
lock
fiadds
sahf
ss
jbe
cmpsl
clc
rcrb
or
mov
rorl
int3
jns
push
or
bound
push
xchg
sub
sar
ljmp
adc
push
outsb
sbb
and
xchg
and
test
mov
adc
sub
decl
or
lret
pop
jmp
jbe
cld
fcompl
scas
int
xchg
stos
scas
push
shrl
push
push
and
cmp
jge
cmp
push
mov
lahf
mov
xor
aam
sbb
ljmp
lcall
into
push
popf
cmc
loopne
in
jle
xchg
push
sarl
xor
and
jp
jl
jg
sbb
dec
mov
mov
sbb
movsb
cmp
xor
andb
js
bsr
gs
fisttpll
sub
adc
lret
push
pop
mov
dec
cmp
jp
dec
inc
fs
aam
dec
jmp
add
sub
bnd
xor
inc
movb
icebp
out
sbb
out
mov
jo
jo
lds
mov
mov
outsb
add
adc
cld
clc
mov
bnd
mov
sbb
fidivrl
pop
xchg
ljmp
rcrl
sub
or
popa
jge
sti
fs
jg
test
pop
add
push
or
fisubl
pusha
insl
mov
jmp
cmp
out
repnz
popf
jbe
mov
or
ljmp
insb
push
sub
in
ljmp
loope
mov
fldcw
add
imul
mov
add
sub
push
cmp
enter
cli
rorl
decl
push
jno
mov
fs
in
movsl
push
lret
mull
sbbl
test
jmp
js
dec
js
push
pop
inc
adc
mov
xor
out
jb
fwait
jecxz
rcl
shlb
pop
push
bound
mov
out
add
inc
outsb
adc
xchg
negl
xchg
cmp
jl
cltd
xor
mov
xchg
scas
int
mov
push
jp
add
cltd
inc
pop
mov
and
jmp
or
or
stos
call
test
es
idivb
clc
push
lret
dec
or
sbb
xchg
dec
xor
jmp
and
mov
shll
dec
imull
imul
not
or
and
cmp
pop
das
sbb
imul
push
clc
leave
xchg
lret
push
leave
sbb
sbb
jmp
andb
leave
outsl
mov
in
pop
mov
jge
sub
and
inc
cld
jmp
jge
jmp
dec
cmp
icebp
jns
cwtl
push
das
cmp
inc
imul
int3
and
call
mov
inc
mov
add
stc
add
adc
pushf
or
imull
into
ss
mov
jmp
add
dec
jg
rol
std
shl
ret
push
stc
test
loope
xchg
idivb
pop
jne
mov
jmp
push
pop
das
sub
faddp
and
shlb
in
arpl
aaa
dec
cmpsb
inc
daa
jge
sub
xchg
jo
sub
xchg
stc
mov
popf
jne
or
cwtl
outsb
pop
into
pop
jge
js
aad
incl
pop
int3
or
cmp
jb
inc
call
add
pop
cmpsb
testl
sbb
mov
mov
test
test
out
gs
pushl
push
jmp
ret
loope
stc
pushf
iret
js
dec
sub
xchg
push
shr
subb
ljmp
pop
sbb
mull
add
out
lods
xchg
mov
iret
mov
add
mov
notl
lock
ret
mov
dec
jne
sbb
mov
scas
decl
or
test
jmp
dec
sub
call
sbb
mov
arpl
decl
mov
adc
shrl
scas
inc
inc
insb
gs
xchg
orb
mov
incl
dec
xchg
hlt
adc
or
sub
rol
daa
ficompl
idiv
pushl
fsubl
jle
xchg
jne
push
out
mov
inc
lea
call
inc
inc
jge
or
jmp
jp
ljmp
mov
add
incl
pop
pop
adc
pusha
ljmp
scas
xchg
aas
aam
in
outsb
fst
roll
enter
mov
call
adc
call
test
dec
adc
dec
sub
mov
mov
les
fxch
cmp
popa
in
test
fstpt
scas
cmp
je
mov
mov
xchg
fisttpl
sahf
arpl
es
lcall
ficoms
pop
cmc
or
sbb
test
cmp
lahf
movsb
mov
gs
decl
add
push
mov
adc
mov
push
inc
push
shlb
cmp
add
fsubrs
mov
test
push
outsl
lods
fildll
jp
mov
addl
call
movsl
xor
sbbb
bound
and
dec
aad
dec
xor
jnp
jmp
shll
mov
into
enter
mov
loop
push
pop
pop
jg
aas
outsl
cmpb
push
push
lds
cld
mov
sbb
fsubrs
xchg
shlb
popf
xor
mulb
and
mov
xor
lcall
xor
pop
sbbb
popa
mov
cwtl
pop
push
int3
sbb
mov
inc
sbb
stc
arpl
incb
and
mov
sbb
lds
mov
pushl
aam
movb
dec
and
jl
pop
mov
cmp
jnp
mov
xchg
pop
incl
and
gs
pusha
dec
or
enter
or
jle
jmp
fs
out
mov
dec
push
mov
sub
int3
data16
mov
lds
lcall
mov
lahf
xchg
lahf
orb
xchg
dec
shrb
mov
test
ljmp
fstpt
adc
xchg
push
jae
pop
les
mov
lea
icebp
sahf
sub
lcall
jecxz
int
add
hlt
mov
and
pop
push
mov
dec
pop
jl
pop
in
ljmp
ja
repnz
xor
test
pop
lcall
repz
incl
inc
jnp
dec
xor
and
stos
std
cmc
and
adc
scas
jl
imul
decl
outsl
push
movsb
pop
and
imul
lds
test
mov
ljmp
inc
nop
push
js
cmp
lods
pop
inc
lock
loop
jnp
jb
aam
adc
cltd
hlt
jb
ds
jmp
fdivl
out
test
xor
in
cmp
jne
leave
jl
iret
iret
jp
mov
dec
jecxz
in
mov
imul
mov
test
mov
ljmp
femms
sub
push
cli
nop
xor
mov
sub
sbb
xor
jmp
cmpsl
inc
nop
jmp
insl
dec
inc
push
fisttps
lods
mov
test
insl
divl
ss
out
decl
fildl
pop
in
lret
in
shrl
mov
xchg
popl
and
or
cmp
es
pop
mov
mov
faddl
mov
jge
inc
mov
ret
lcall
ror
inc
icebp
add
push
cmpsl
jns
mov
repz
push
push
add
inc
in
testl
sub
pushl
dec
rcrl
bound
xchg
test
add
dec
dec
xor
sahf
push
pushf
pusha
dec
cmc
and
ljmp
adc
adc
decb
cwtl
ds
gs
xor
jbe
xchg
sbb
xor
gs
lcall
add
lods
insl
out
mov
lds
pop
pop
or
aad
stos
mov
mov
or
mov
mov
sub
cs
cmp
and
daa
test
das
decl
xchg
repnz
xchg
mov
stc
mov
rorl
mov
leave
inc
out
mov
add
ljmp
sahf
out
repz
or
push
pop
pusha
inc
xchg
in
xchg
test
add
mov
in
shl
adc
pushl
in
jmp
imul
ficomps
push
sti
cs
and
das
loope
js
test
lcall
adc
xchg
insl
ds
sub
lods
add
inc
rol
std
jno
cli
cmp
jg
std
out
loop
jae
test
pop
and
pusha
out
xchg
in
neg
cli
xor
push
shlb
jle
js
ret
mov
cmpsl
into
dec
jno
jae
pop
pop
in
out
ds
add
mov
mov
insl
mov
ljmp
in
call
mov
mov
ret
out
scas
insb
nop
enter
or
jg
sbb
nop
int3
mov
pop
loopne
mov
es
push
add
popf
pop
pop
push
adc
jmp
lock
mov
push
pop
les
push
sarl
or
and
push
sbb
pushl
mov
mov
out
popa
iret
clc
movsl
ret
ficoms
mov
lret
nop
sub
sbb
dec
fs
and
stc
jb
fbstp
cltd
or
and
popf
inc
cmpsb
pop
inc
fnstenv
ficoms
pop
xchg
aas
popf
jne
jbe
icebp
push
xchg
dec
pop
and
cmpsl
mov
jns
mov
mov
dec
int
push
stos
ret
inc
sub
or
rol
adc
jmp
sti
xchg
daa
dec
rcr
pop
pop
outsl
and
mov
mov
loop
negl
in
fldenv
fcos
call
cmc
mov
popa
nop
in
out
jmp
mov
jb
js
lods
add
insb
mov
decl
adc
or
jne
jle
insl
mov
mov
lahf
imul
and
jecxz
pushl
int3
je
inc
mov
and
movsl
mov
cmp
repnz
mov
jnp
sbb
decl
jb
dec
adcb
mov
stc
push
cmc
xchg
xchg
or
shlb
mov
js
test
call
inc
or
mov
and
cmpsb
and
je
xor
jmp
int
pop
push
popf
dec
inc
mov
subb
pop
ror
mov
sbbb
incl
xlat
popl
add
jns
jbe
js
outsb
cmc
movsb
hlt
fdiv
call
loope
out
xlat
pop
jg
inc
push
cld
cmp
inc
adc
add
movsl
fs
idivb
pusha
sti
jge
call
sub
clc
mov
sub
xchg
cmp
mov
sub
inc
jnp
mov
dec
test
cmp
sahf
add
lock
sbb
movups
incl
sarb
sbb
push
or
jmp
cli
cmp
fildl
mov
cmp
out
je
inc
push
inc
inc
cwtl
push
adc
sub
shlb
repnz
and
popf
lds
decl
mov
push
aaa
adc
fwait
popf
imul
dec
jne
cmp
push
jle
jns
popf
mov
outsb
push
enter
pushf
cmp
rcr
fisubrl
int
lods
adc
inc
jb
pop
xchg
std
lods
xor
idivl
stc
mov
ret
jns
lea
or
int
clc
ljmp
enter
inc
inc
sub
cs
sahf
inc
fnstenv
hlt
adc
mov
call
cmp
inc
cmpsl
ljmp
mov
inc
mov
cld
and
adc
push
ljmp
mov
inc
jns
shrl
push
mov
ss
fsts
xor
jmp
jbe
ljmp
movsl
xor
jmp
pop
movb
xchg
push
or
add
imul
cmp
mov
frstor
inc
adc
cwtl
int
outsb
inc
addr16
dec
mov
mov
sbb
or
inc
inc
call
das
sub
fisubrs
cmp
xchg
add
mov
shl
dec
jmp
inc
push
mov
orb
into
pop
or
out
adc
push
sub
push
lds
decl
push
ret
mov
jecxz
test
aas
push
out
add
ljmp
icebp
or
pushl
pop
mov
and
inc
test
roll
cmpsb
insl
pop
jo
inc
sbb
fwait
decl
inc
sub
adc
push
fstl
jbe
test
mov
mov
jmp
loope
rcrb
mov
ja
adc
hlt
imul
fildl
call
pop
outsl
push
fucomi
push
and
and
xchg
or
ret
and
lds
lods
jg
mov
jae
mov
and
inc
andl
inc
jge
lock
dec
xor
incl
push
rcll
out
int3
mov
gs
cwtl
loopne
push
mov
pop
push
call
int3
ds
fwait
inc
xor
mov
movl
mov
ljmp
pop
es
xchg
cwtl
roll
adc
xchg
int
pop
sbb
test
xchg
in
xchg
xchg
or
push
cli
mov
push
push
in
repnz
push
fs
cmpsb
mov
loope
punpcklwd
mov
jmp
shl
add
data16
sbb
out
rolb
nop
insb
rolb
lods
xor
jnp
cmp
das
pop
xchg
pushf
jp
or
movsb
mov
insl
in
mulb
aas
lea
jns
aas
insb
in
movsb
mov
inc
lods
fsubp
and
mov
stos
sahf
pushf
aaa
call
lcall
outsb
out
sub
aaa
cli
jecxz
js
div
insl
xor
dec
negb
decl
add
cli
int3
insl
sti
loopne
inc
call
pop
mov
xchg
xor
jo
decl
and
call
stc
jne
mov
xchg
mov
out
repz
incl
aaa
jp
pop
mov
pop
xor
xchg
mov
sbb
fs
jecxz
decl
outsl
add
or
adc
lea
cmp
sub
lcall
or
push
pushf
shr
cltd
dec
arpl
out
dec
aam
insb
mov
decl
pop
enter
xchg
loop
sbb
out
adc
xchg
dec
aaa
dec
add
test
lcall
ds
pop
ficoms
or
mov
jl
subb
add
mov
xor
out
xor
sti
loopne
pushf
lcall
mov
call
jp
popf
push
xchg
repnz
jg
sar
js
mov
xchg
and
in
insb
xor
lds
call
fsubrs
aaa
mov
mov
ljmp
inc
xchg
jo
outsl
loopne
and
jno
mov
mov
lods
out
hlt
pop
test
sahf
or
call
cmc
lret
sub
cs
filds
xor
jns
mov
sbbl
adc
call
inc
imul
lock
cs
pop
testl
shll
lods
out
jmp
sub
inc
clc
mov
push
push
cli
into
sub
pop
out
sub
sub
mov
jmp
cld
push
pusha
mov
imul
in
rorb
pop
mov
ss
mov
add
add
pop
push
in
or
dec
sub
and
lahf
inc
lret
movsb
lret
dec
sbb
mov
decl
in
lds
push
and
outsl
push
push
mov
int
fs
nop
aam
xchg
call
mov
addr16
xorb
mov
ss
jle
jmp
push
mov
pop
dec
dec
add
pop
add
xor
jbe
pop
gs
mov
decl
clc
inc
cmp
push
pop
mov
lea
inc
out
xor
cmp
and
mov
inc
xchg
mov
jb
lock
mov
pop
int3
cmp
push
mov
mov
or
mov
dec
sahf
mov
jmp
xor
sub
push
jnp
stc
in
leave
shr
gs
jl
in
sbb
loopne
lcall
roll
dec
loop
xorb
ja
fnstenv
lcall
mov
or
pushl
lahf
cmp
xor
cs
mov
sub
sbb
out
pop
pusha
adcl
inc
call
mov
sbb
cld
sti
push
cltd
aad
jmp
cli
push
or
pop
clc
jl
inc
xchg
push
push
dec
std
fcomps
sbb
out
std
sub
flds
popa
ja
sbb
and
sarb
mov
cmp
nop
pop
popf
and
lea
or
xor
imull
enter
push
pop
stc
lcall
dec
mov
ja
push
lds
push
push
or
shl
mov
cmp
add
dec
hlt
sbb
ss
lret
sti
sub
in
and
fstpl
mov
sti
dec
or
cmp
js
adc
fsubs
cmp
mov
pop
cltd
xor
jae
fidivs
dec
cmp
mov
adc
call
pop
inc
xchg
lods
mov
and
mov
in
jno
jecxz
xor
int3
popf
inc
cmp
cmp
mov
jnp
je
mov
ret
sbb
mov
popa
pop
in
incl
jae
fdivs
sbb
cli
out
dec
mov
pushf
cmp
ljmp
rcrl
lcall
jne
lret
popf
mov
push
adc
cmp
lret
data16
lret
mov
decl
mov
push
outsb
mov
mov
adc
sbb
aad
adc
xchg
ds
call
dec
fwait
mov
rolb
jl
sub
cmpsb
pop
inc
cmp
insl
aas
nop
stc
inc
fcoml
cmpsb
addl
mov
and
stos
lods
in
jmp
hlt
cmp
pop
sub
ljmp
mov
adc
test
cmp
cmp
insl
aam
dec
fwait
lret
cmp
lret
jmp
out
push
cmp
xchg
mov
inc
adcb
movzwl
scas
sub
lret
movsl
dec
lcall
shl
cltd
mov
add
fucomp
outsb
add
in
sbb
inc
popf
in
call
gs
push
sbb
mov
arpl
or
pushaw
dec
push
xlat
mov
andl
ljmp
nop
fldcw
enter
pop
mov
pop
pop
or
xor
stos
rol
pushl
xor
inc
test
jecxz
lock
jmp
jnp
mov
adc
mov
mov
out
ret
xor
ja
ljmp
lods
ja
dec
sub
ljmp
pushl
movsl
jle
adc
das
decl
cmp
enter
sub
call
cli
cmpsb
cmp
cmp
shr
inc
negb
stos
sbb
ds
ljmp
xor
sbb
push
jl
dec
movsl
stos
dec
cli
jg
cmp
dec
imul
adc
lods
gs
sti
dec
sbb
or
pop
pop
xchg
daa
fsubs
addr16
cltd
stos
subl
call
ds
call
xor
lds
inc
test
popa
xlat
dec
mov
lods
xchg
out
pop
push
sbb
fdivrp
ljmp
aad
mov
sbb
jae
orl
repz
inc
xchg
jl
sub
incl
push
mov
mov
fcmovbe
xorb
in
or
lock
cld
mov
sub
hlt
mov
mov
xchg
lds
das
jns
add
loope
mov
lods
rorb
das
jmp
loope
int
xchg
jecxz
jp
or
xchg
loopne
aaa
xchg
mov
fwait
jns
pop
subb
push
or
call
test
push
mov
mov
mov
cwtl
or
orb
mov
sbb
cmp
sbb
and
adc
dec
rcrl
push
push
jnp
fnstenv
fdiv
sub
and
jnp
stos
test
imul
popw
lcall
inc
aaa
mov
lret
push
negb
sub
pop
pop
shr
dec
popa
imul
mov
stc
adc
fyl2x
jmp
inc
int3
push
pop
out
stos
xor
push
pop
das
cld
cmp
leave
sbb
lahf
pop
sarl
jae
mov
lea
xor
call
stos
lret
and
xlat
xchg
mov
sub
push
xchg
pop
fisttpl
psubusb
call
subb
inc
fcompl
ret
dec
xchg
mov
cmpl
sub
insb
test
push
inc
jmp
sub
sbb
rorl
in
pop
lock
add
rol
xor
dec
pushl
fs
daa
movsl
out
mov
and
or
or
shl
pop
or
aaa
call
icebp
insb
adc
xchg
xor
outsb
mov
xchg
inc
add
dec
repnz
add
sbb
call
cmp
add
loopne
xchg
jb
lret
popf
daa
and
dec
sbb
xchg
lcall
fdivp
ret
arpl
movsl
lcall
inc
cltd
imul
aas
leave
testl
incl
mov
inc
dec
orl
addr16
jnp
popf
aam
mov
push
cmp
into
pop
adc
daa
cli
not
fs
cltd
std
inc
pop
fstl
lret
insl
aad
rorb
jmp
sbbb
jb
and
test
pop
mov
cmc
add
fcomip
xor
popf
outsl
pop
call
arpl
aas
pusha
dec
add
jmp
arpl
aam
cmp
cmpsb
incl
xor
mov
and
in
dec
add
dec
pusha
loopne
mov
cli
shlb
leave
pushl
rorb
pop
fcoml
arpl
sub
nop
test
icebp
outsb
std
push
mov
xlat
jmp
sub
inc
icebp
rol
repnz
cwtl
std
lock
testb
std
shl
mov
mov
or
lcall
popf
adc
scas
mov
pop
inc
jecxz
cmp
push
pushf
imull
dec
cmp
dec
mov
mov
pop
sub
adc
mov
iret
dec
call
push
add
push
arpl
out
cmp
jo
aas
dec
js
jge
cli
sub
mov
pushl
push
push
mov
push
jp
sarb
fsubs
xchg
test
fsubrl
dec
lea
inc
or
call
stos
and
icebp
jne
ljmp
insb
sahf
js
addb
pop
cmpsb
mov
push
add
cmc
cmp
xchg
scas
inc
fsub
or
arpl
mov
sbb
or
push
mov
clc
jl
daa
push
lds
mov
pop
bound
adc
hlt
mov
cli
sar
clc
mov
cmp
jmp
jne
xor
or
mov
outsb
inc
sbb
xchg
enter
ds
movsb
fs
sti
lock
incb
es
lahf
dec
cmpsb
enterw
mov
jae
imul
dec
cmp
jmp
pushf
mov
test
jnp
leave
enter
jmp
data16
cmp
dec
pushf
pop
push
lcall
pushf
bound
insl
sbb
ror
divb
sub
lods
inc
je
rol
pop
ror
cmp
call
xchg
ficomps
push
sub
or
mov
adc
lret
ds
push
sarl
fwait
dec
xor
mov
lcall
and
jg
pop
cmp
in
shll
mov
jmp
sbb
lock
push
mov
mov
fisubrs
pop
jmp
xchg
add
jmp
inc
mov
fwait
inc
mov
sbb
push
mov
hlt
mov
loop
mov
incl
lods
dec
test
ds
cmp
sti
or
sbb
dec
pushl
cmp
out
add
nop
mov
lcall
inc
call
call
xchg
and
mov
add
outsb
test
mov
pop
sub
iret
jne
daa
push
decl
inc
dec
mov
outsb
outsb
ror
out
sub
add
mov
add
decl
rcr
jmp
lock
lock
add
xchg
push
cmpsb
rcll
jmp
nop
dec
and
xchg
pop
mov
xor
ret
xchg
leave
fistpl
outsb
aad
andl
popa
jmp
lcall
loopne
aad
fistpl
mov
inc
sarl
cmp
adc
sub
pushl
push
sahf
mov
insb
inc
jp
test
int
xor
jnp
push
push
mov
orb
jae
xchg
popl
jb
push
and
mov
mov
les
inc
cmp
lods
dec
dec
cmp
mov
pop
pop
test
xor
jb
dec
cli
mov
in
mov
decl
es
dec
mov
ret
mov
adc
lds
or
daa
in
fdivr
lcall
jns
rcrl
xor
mov
lcall
in
shll
std
pusha
int3
dec
mov
xor
arpl
ss
mov
out
bound
or
incl
cltd
lods
xchg
rcrb
mov
or
add
call
std
jns
iret
aas
loop
pushl
mov
mov
adc
push
mov
and
push
jo
std
ret
jg
adc
mov
mov
mov
xchg
test
cld
popa
push
sub
stc
pop
push
fldcw
and
leave
call
add
cmp
xchg
mov
add
mov
ficomps
mov
sbb
decl
adc
xchg
pushf
push
cmc
jecxz
out
nop
stos
ja
and
mov
sbbl
incl
xchg
xor
mov
sahf
ret
mov
push
imul
push
xchg
sti
xor
adc
ljmp
out
inc
into
add
mov
dec
jp
lret
ret
imul
into
popf
in
inc
decl
mov
jl
insb
scas
sbb
add
sbb
fsub
inc
sbb
daa
fwait
push
lcall
std
push
out
jecxz
and
jp
scas
aaa
or
loopne
stc
mov
testl
pop
jge
jnp
hlt
mov
adc
pop
in
into
cmp
cmp
es
decl
mov
mov
and
dec
and
mov
mov
pushl
inc
or
insl
mov
loope
xor
lods
mov
or
leave
dec
xchg
sub
mov
xchg
dec
sub
gs
mov
addb
es
pop
incl
rolb
jp
iret
leave
fs
dec
stc
out
in
jns
imul
stos
sbb
call
xchg
fprem
popf
out
dec
cmp
call
mov
pushf
inc
aam
aam
jg
incl
orl
cmc
push
ret
jbe
mov
hlt
add
out
xchg
les
mov
decl
xchg
cmp
mov
dec
push
sbb
xor
push
adcl
mov
push
push
xchg
inc
in
xchg
sbb
xor
or
mov
lcall
int3
decb
aas
orl
bound
mov
push
sub
call
pop
inc
add
pop
loopne
and
popa
mov
xor
xchg
fwait
push
jae
mov
int3
cmp
incl
mov
jecxz
cli
adc
cmp
lock
addr16
je
fisttps
dec
xor
lcall
subb
mov
movsl
pusha
push
fnsave
jmp
aam
sbb
sti
ret
faddl
xor
je
dec
rcrl
mov
xchg
aas
mov
jmp
mov
lock
sub
mov
fdivl
and
or
sbb
jle
les
and
lods
cmpl
divl
mov
mov
dec
sbb
inc
mov
decl
pop
imul
pop
cltd
das
sahf
push
les
stos
mov
mov
jmp
ss
aad
nop
jle
push
cmp
inc
pop
outsb
inc
mov
call
mov
mov
push
lods
add
shrb
nop
std
mov
test
mov
and
jmp
cltd
jle
mov
jl
inc
or
and
popf
sub
sub
add
decl
mov
cmpsb
add
leave
jl
sub
push
shl
add
outsb
dec
sti
dec
jae
sti
and
dec
ret
test
test
ds
dec
xchg
out
jmp
push
adc
iret
lods
cltd
push
lcall
inc
in
rcll
dec
test
adc
fidivrl
mov
sar
decl
cltd
adc
pusha
mov
or
add
mov
mov
ret
dec
repz
ljmp
jo,pt
mov
gs
cltd
inc
rcll
push
adc
mov
mov
dec
sahf
test
in
rcrl
add
xor
lret
push
loopne
movsb
jl
fildll
adc
mov
cmp
lock
jmp
dec
inc
or
add
sbb
pop
sub
ss
dec
out
cltd
adc
rcrl
ljmp
pop
into
mov
je
add
shll
pop
int
adc
iret
mull
aas
jp
in
popf
int3
stc
loopne
lcall
pop
and
loop
push
das
in
lcall
lret
rorb
mov
and
dec
pushl
push
mov
sbb
xchg
inc
and
pop
negb
movb
movsl
mov
pop
mov
push
or
xor
jns
scas
jno
adc
fisubrs
cs
push
loop
imul
inc
les
fistl
icebp
fsubrp
push
mov
lods
pop
jge
jmp
test
sub
idivl
lods
lock
jae
pop
pop
mov
adcb
aaa
xchg
cmp
xor
inc
notb
cli
sarl
repnz
lret
cmp
movsl
lahf
xchg
repz
call
dec
cltd
mov
mov
lods
inc
adc
pop
fwait
jp
inc
push
jmp
pop
xchg
xchg
sub
incl
or
nop
jae
jnp
fidivrl
sub
inc
push
ja
xchg
dec
mov
shl
jmp
dec
fnstsw
mov
les
fwait
ds
andl
dec
pushf
jns
pushl
pop
push
push
mov
sub
clc
test
out
and
cli
orps
adc
mov
push
sarl
imul
leave
nop
add
dec
loope
aas
mov
push
xor
push
jmp
sbb
out
je
out
xchg
mov
xor
je
rclb
in
mov
inc
loopne
pushl
adc
das
pop
xchg
cltd
pop
mov
push
std
cmpl
pop
fstps
and
insb
sbb
mov
decl
mov
xor
cmp
outsb
mov
aam
pop
test
jns
int
xchg
iret
sbb
leave
xor
push
fildl
test
jecxz
or
and
cmp
jl
jmp
and
mov
jl
das
cmp
push
fldl2e
inc
jbe
test
ljmp
push
jo
dec
les
push
loope
sub
adc
aaa
push
jns
incl
lret
mov
loop
lcall
or
cmp
imul
pop
sub
out
jo
xor
mov
pushl
mov
mov
cli
mov
inc
das
loop
cmp
outsb
in
mov
ljmp
ljmp
and
fldt
ret
fbld
pop
xchg
inc
adcl
fldl
decl
jns
aam
incb
dec
xor
inc
xchg
insl
or
inc
mov
mov
pop
mov
push
gs
ja
push
and
sbb
out
cld
sbb
mov
std
sti
loopne
lahf
and
jns
shrb
mulb
jle
mov
movsb
ds
std
or
arpl
call
je
sti
pop
lock
inc
test
xchg
les
out
bound
subl
xchg
out
call
push
cmp
aad
rcrb
js
xor
loop
fwait
and
ljmp
jbe
bnd
aad
pop
sub
cwtl
pop
xlat
hlt
or
shlb
call
sub
insb
setp
cmc
push
sbb
inc
fbstp
mov
ljmp
sarl
fidivs
aas
adc
fsubrl
dec
xchg
cmpsb
popa
xchg
ljmp
mov
bnd
add
cmpsb
mov
mov
add
and
scas
decl
xchg
xchg
clc
jp
inc
out
and
inc
sbb
and
mov
inc
int
outsb
pop
int3
pop
cmpb
aad
cltd
lea
jle
pop
stc
inc
stos
js
dec
dec
scas
jmp
sbb
scas
push
cmp
xchg
cld
clc
pop
stos
xor
adc
jnp
push
mov
mov
mov
addr16
mov
pushf
add
loopne
xor
mov
sub
push
loope
lret
xchg
std
push
out
dec
mov
mov
cmc
mov
adc
lret
adc
dec
aas
outsl
add
scas
sbb
sbb
cmc
xchg
and
push
cmpsl
inc
sub
lock
cltd
xchg
or
dec
inc
stos
pop
js
and
mov
out
sbb
mov
clc
add
mov
mov
fistl
sti
ret
sub
mov
jp
cmc
aas
pop
sbb
lock
ljmp
and
aaa
jecxz
mov
test
jbe
rorb
mov
add
sbb
push
inc
repz
sub
int
fwait
mov
icebp
sub
sbbb
xchg
aas
add
incl
xchg
pop
cmp
nop
cltd
push
mov
sub
aad
imul
arpl
mov
call
sub
jmp
add
mov
inc
jo
test
xchg
adcl
cmp
mov
mov
das
aad
lahf
fidivrs
mov
lcall
aas
push
mov
jno
scas
int
ss
incl
dec
lahf
xor
sahf
dec
lret
sub
data16
in
lods
and
incl
ret
jecxz
pop
jb
adc
fwait
gs
out
fdivrp
push
pop
clc
or
sub
inc
ljmp
xchg
rcrb
push
inc
lods
add
lea
call
jmp
push
outsb
and
dec
xlat
mov
mov
jmp
das
gs
push
cmp
pop
push
fnsave
test
sahf
lret
js
out
out
xchg
jmp
jnp
inc
inc
mov
mov
lret
add
popa
mov
ja
js
aad
sub
ljmp
sarl
aas
or
push
and
jecxz
repnz
adc
pop
or
loop
mov
decl
addr16
hlt
sub
xor
mov
popf
sub
incl
xchg
sub
loop
sub
test
mov
int3
pop
rorb
shll
jns
cli
outsb
fistps
lcall
sub
fdivl
dec
lret
jmp
mov
pop
and
mov
sub
cmp
xlat
mov
sub
call
shlb
daa
push
fisubl
xor
dec
fs
pop
mov
mov
lcall
lcall
mov
push
push
sub
imul
push
cmp
decl
mov
std
jnp
jle
adc
rcrb
jg
setp
mov
js
incl
jl
adc
xchg
fistpll
xchg
jl
inc
into
icebp
shlb
jmp
adc
jecxz
imul
adc
pop
les
mov
hlt
pushl
divb
xchg
jno
inc
adc
shll
enter
sbb
push
xor
push
xlat
scas
out
jl
jmp
inc
xorl
pop
cmovnp
pop
mov
xchg
out
inc
call
or
xchg
cmpsb
pop
outsb
dec
stc
fiadds
ficomps
jmp
or
dec
jge
daa
inc
int3
incl
mov
ss
lock
jmp
sbb
dec
xlat
xor
lcall
bound
sahf
pop
jne
addr16
out
mov
lods
xor
or
sbb
pop
adc
aam
jmp
decl
shr
lods
mov
jns
enter
mov
cmp
dec
push
fisttpl
pop
sbb
incl
mov
cmc
adc
adc
dec
and
fisubs
dec
loopne
clc
push
lret
lcall
pop
jbe
jo
aad
and
shl
inc
inc
rcl
cmp
ja
lea
cwtd
sbb
das
in
push
push
lcall
cmc
xlat
jmp
pop
cld
mov
xor
arpl
sbb
inc
mov
ss
lcall
xchg
xor
gs
xlat
out
loopne
rcl
jmp
push
inc
aaa
sbb
mov
cmp
mov
dec
lahf
jo
cmpb
sti
inc
stos
pop
out
jae
scas
add
jecxz
dec
mov
mov
mov
int
jmp
les
xor
clc
cmpsb
repnz
ja
imul
mov
popa
in
sbb
xchg
xorl
or
ljmp
daa
add
pop
sbb
jne
movsb
dec
fidivl
cltd
jno
xchg
xor
pushl
xor
sub
dec
mov
pusha
add
fildll
arpl
incl
add
iret
icebp
pop
jb
cwtl
lock
xlat
xor
and
test
loop
ljmp
call
shl
and
sub
dec
mov
dec
shl
incl
test
lahf
sub
andl
call
or
xor
clc
and
xchg
in
xchg
pop
cmc
pop
push
imul
movl
lcall
lahf
xchg
and
cs
xorl
sbb
mov
pushl
repz
push
sahf
fistpl
jle
sub
sbb
not
push
insl
jg
push
mov
xchg
jmp
xchg
jno
loop
aas
imull
test
std
stc
outsb
inc
cmp
push
repnz
ss
xor
adc
add
clc
cli
jae
ljmp
and
pop
jp
fs
jnp
jecxz
movsb
movsb
cmc
pop
out
lea
std
int3
ljmp
cs
sub
mov
jno
sbb
adc
lock
or
xchg
pop
jle
dec
adc
test
pop
mov
mov
jecxz
push
fwait
adc
cmp
icebp
inc
ret
aam
fcoml
enter
push
and
rcll
cmp
pop
jg
outsl
jne
mov
jmp
xchg
lcall
sti
jp
xchg
push
mov
pop
adc
loop
repz
inc
cmpsl
pop
ja
mov
flds
xchg
das
sub
and
sbb
sub
jecxz
inc
das
jnp
pop
outsl
in
sbb
lods
inc
stos
dec
outsl
push
cli
xchg
fidivs
push
xor
xorl
lcall
ds
std
fimull
mov
or
cmc
mov
roll
xor
decl
xor
or
call
int3
add
cmp
mov
mov
adc
jmp
and
cs
cwtl
lret
mov
and
cmc
fcompl
add
icebp
fwait
loopne
addl
js
push
xor
fdivs
mov
lcall
mov
jg
insl
sub
decl
add
add
xchg
loop
scas
das
sub
mov
xor
shll
incl
int
xchg
pop
jl
lcall
pop
jnp
pop
mov
adc
rclb
pushl
pop
andb
dec
dec
push
dec
and
xor
adc
inc
jne
rolb
add
and
mov
jne
fwait
out
not
add
movd
xchg
xchg
pusha
mov
int3
push
loop
pop
insl
cli
loop
mov
clc
fstps
aam
dec
dec
xchg
and
data16
jmp
in
and
pop
dec
daa
jle
push
fnstsw
sbb
or
inc
pop
or
cmp
ljmp
inc
xor
push
mov
insb
pop
or
push
pop
pop
popf
out
fisttps
ds
shl
xchg
sbb
sub
insb
mov
mov
sub
xchg
xchg
push
int3
sbb
jmp
adc
pushf
jl
inc
popf
pop
xchg
sub
xor
testl
mov
js
addr16
test
sub
test
sti
shll
push
std
scas
pop
jnp
push
sahf
cmpsl
mov
fs
stc
movsb
add
mov
mov
xlat
lods
mov
stos
adc
adcb
mov
int3
out
fimull
dec
arpl
or
cmp
ret
xor
push
dec
movl
or
ret
jb
int
xor
add
xchg
add
cld
mov
push
pop
dec
rorl
jmp
xor
xchg
jo
xchg
mov
mov
jmp
fs
subl
dec
mov
jg
push
dec
sahf
push
cli
push
pop
outsl
repz
jmp
jne
jecxz
shll
xchg
mov
cmp
test
jne
dec
fs
out
inc
paddsw
jl
rol
rorl
and
dec
aas
jp
sub
incl
pop
in
push
outsb
shr
jbe
das
sub
and
mov
adc
dec
in
push
decl
cli
mov
ljmp
mov
pop
pop
mov
mov
mov
push
or
stos
nop
jp
mov
dec
gs
data16
pop
pop
jne
orb
mov
decl
icebp
cmp
xchg
lret
sar
test
movsb
sbb
test
or
imul
lahf
pushl
xor
dec
mov
inc
mov
into
out
subb
clc
sub
ja
mov
push
sub
aas
adc
faddl
nop
and
popa
xor
into
inc
mov
rorb
call
sbb
std
push
and
inc
mov
lods
das
sti
or
fdivrs
sbb
sar
call
enter
loope
mov
mov
pop
js
inc
bound
lods
flds
addr16
repnz
jmp
adc
aaa
push
sti
mov
in
iret
inc
js
or
mov
and
jp
lcall
inc
sub
pop
sbb
lret
cltd
xchg
fs
jg
mov
movsb
int3
and
lcall
mov
neg
sbb
cmp
fldl
ficoms
jge
and
pushl
push
sub
and
out
cmp
jno
push
push
xchg
jp
xor
mov
sub
cmp
and
jmp
inc
int
mov
mov
jecxz
fdivrs
movsl
rol
ljmp
stc
aam
push
sbb
mov
inc
xor
jo
fwait
dec
jbe
out
out
adc
pop
cmpsb
jg
mov
xchg
pop
stos
fsubl
pop
lods
roll
addl
dec
pop
aaa
lods
mov
pushl
inc
lock
xor
fsubrs
or
sbb
push
js
lea
lods
enter
mov
cs
xchg
adc
stos
jecxz
cmp
pop
jecxz
sub
cmp
inc
cmp
call
popf
das
inc
mov
pop
ljmp
rclb
addr16
out
aas
or
fs
inc
or
decl
jnp
loop
jne
mov
mov
or
jp
add
ficoml
inc
cmpsb
mov
pushl
test
jne
xor
outsb
dec
cmp
inc
aas
mov
sub
movsl
lds
and
js
loop
bound
in
cmc
stos
and
icebp
sub
test
sahf
pop
lock
mov
sti
xchg
adc
adc
xchg
sub
ljmp
ljmp
jle
repnz
push
adc
data16
mov
jb
es
js
pop
mov
lret
cmpb
repz
push
shll
into
fcomps
lcall
xchg
sub
jo
ds
addr16
out
insl
jmp
fstps
ja
push
and
jnp
ljmp
pop
or
iret
jp
xlat
popa
jns
push
push
out
add
loope
lock
mov
cmp
xlat
xchg
xchg
insb
gs
lods
lods
es
or
or
pop
clc
lcall
aam
fcom
popf
rcrb
jno
movsl
enter
lods
mov
add
incl
jg
pusha
cli
outsb
jg
aaa
out
jmp
orb
push
adc
xchg
out
js
call
cld
movsl
pop
mov
dec
dec
arpl
lahf
cltd
mov
push
jb
mov
xchg
call
cmc
push
jne
xor
add
mov
div
stos
in
sub
inc
sbb
pop
xchg
icebp
loopne
dec
push
mov
icebp
int3
mov
fsub
or
jbe
cmp
pushl
mov
xchg
mov
cmpl
lods
mov
push
fdivp
in
pop
push
sbb
ljmp
dec
lock
xor
in
xchg
push
pop
std
lahf
xchg
arpl
mov
cmpsb
enter
mov
sub
xchg
je
jg
mov
jno
cmpsb
andl
xlat
fildl
call
aam
adc
sbb
mov
cltd
ljmp
cmpsl
jns
fnstcw
jecxz
fcoml
sub
pop
xor
lods
xchg
inc
in
out
in
jmp
psubsb
fdivl
lcall
mov
and
lcall
popa
mov
lret
ret
lods
sub
lods
jmp
int3
jge
lret
sub
jl
insb
xchg
inc
xlat
ljmp
dec
fimuls
ljmp
cmp
ja
loopne
arpl
jns
call
mov
imul
icebp
decl
fcomi
test
sbb
das
iret
jecxz
xchg
jnp
sbb
mov
xchg
pop
xor
jb
outsl
dec
jmp
mov
outsl
pop
xchg
repz
stos
xchg
lahf
and
mov
mov
pop
mov
lcall
lret
ficoms
pop
rol
fcoml
aaa
shrb
cmovb
ja
add
mov
flds
insb
lock
pop
push
rcl
test
jns
mov
dec
mov
push
or
je
jmp
aad
repz
jmp
enter
flds
insb
fnsave
imul
mov
mov
out
pushw
mov
test
push
adc
out
iret
arpl
add
call
dec
insb
iret
imulb
fistpl
jns
add
xor
push
mov
jnp
xchg
out
fisubrl
mov
je
int3
loop
enter
adc
dec
adc
out
push
mov
js,pt
fwait
xchg
xchg
xor
mov
fnstcw
iret
sbb
or
loopne
jns
mov
lcall
mov
mov
ja
cmp
mov
loope
mov
sbb
out
xchg
jmp
in
fdivrs
push
aam
out
in
dec
ret
icebp
pop
sbb
sub
dec
lahf
inc
jge
mov
imul
mov
add
cld
mov
and
push
pop
sarb
mov
xor
incl
dec
lcall
or
roll
jge
pop
inc
fstpt
hlt
je
fdivr
add
cwtl
pusha
popa
leave
lret
test
fiadds
cmpsl
mov
decl
inc
cmp
sub
sahf
ror
push
aad
ret
cmp
outsl
add
int3
lcall
dec
jmp
stc
clc
outsl
and
insl
push
shrl
and
mov
cmp
dec
mov
wbinvd
lea
shl
push
cmp
and
scas
jmp
repz
pushl
lea
aaa
lret
and
mov
xchg
lea
adc
ret
jmp
cmp
adc
stc
fsubr
popa
mov
dec
pusha
es
in
jo
mov
ljmp
call
div
mov
fsubs
jbe
jg
loop
jb
ds
xor
icebp
dec
mov
incl
sti
cwtl
daa
push
xchg
subl
lcall
mov
je
jnp
je
mov
push
shrb
das
pop
mov
add
add
fcmovnu
adcb
lret
mov
test
arpl
push
xchg
mov
cmp
xor
add
mov
cmp
sar
test
sbb
ljmp
lret
lahf
fidivrs
loopne
xchg
in
cwtl
mov
xchg
and
je
mov
fcompl
jmp
add
in
sub
lcall
ret
mov
inc
daa
xchg
dec
pop
adc
xor
mov
mov
pop
test
mov
lea
pop
jp
lods
lods
dec
lcall
insl
xchg
test
daa
jmp
mov
loope
xor
lds
iret
rcrl
incl
call
add
rcrl
pop
sub
xor
movsb
test
adc
push
xor
fwait
add
and
movsl
into
roll
push
sub
bound
aas
xor
addr16
ja
pushl
js
cwtl
sbb
sar
in
xor
shl
imul
push
pop
sbb
jle
dec
mov
stc
cmp
push
cmp
inc
adc
mov
nop
xor
aad
dec
push
scas
sbb
inc
mov
xlat
fcoms
sub
fdivrl
je
add
cmpsl
sub
lcall
mov
sbb
outsl
in
sbb
xchg
lret
ljmp
mov
jmp
mov
push
pop
iret
repz
lret
mov
pop
rol
out
and
stos
sbb
pop
inc
sub
sar
dec
sbbl
cmpsb
arpl
lret
pop
cmp
sbb
imul
and
lcall
push
pushf
sti
push
xchg
lret
add
fmuls
cmp
cwtl
ret
mov
xor
lcall
cli
out
mov
cmp
fnsave
mov
insb
sbb
xor
sbb
fwait
test
mov
sub
and
hlt
mov
incl
dec
fnsave
pusha
incl
adc
jb
mov
icebp
push
negl
adc
inc
cmp
or
enter
popa
out
mov
lret
sub
seto
cmp
jo
lcall
outsb
ljmp
pop
pop
cmc
mov
notb
daa
jl
xchg
mov
in
mov
pop
mov
adcb
lods
fxch
push
lcall
test
mov
mov
cmp
pop
cmpsb
dec
shlb
cli
sbb
dec
add
rcll
cltd
test
jns
xchg
sub
and
mov
xor
sub
movsb
jo
loop
dec
mov
mov
mov
push
inc
dec
ficoms
in
mov
adc
jbe
jns
jno
pop
and
imul
lret
adc
lds
mov
xchg
pop
mov
je
xor
jmp
and
cwtl
inc
int
cmp
ret
sbb
int3
mov
js
sahf
rclb
fstpl
pop
ljmp
in
fisubrs
test
subb
add
push
inc
repz
xor
scas
mov
pop
pop
add
incl
cmp
fistl
jp
stos
cmovle
negl
roll
or
enter
cmp
call
ret
mov
lret
ss
negl
imul
cmpsl
bound
push
enter
popf
std
insl
lock
jns
xlat
and
jecxz
add
pop
mov
xor
hlt
cmpl
ljmp
shlb
mov
ret
dec
mov
xchg
adc
pusha
into
dec
and
push
inc
pop
xchg
lcall
jle
adc
lods
cmc
pop
push
pop
out
jno
out
push
cs
mov
je
mov
pushl
idivb
lret
xchg
sub
mov
pop
not
mov
std
cmp
fistps
nop
mov
incl
xor
stos
xor
imul
cld
push
push
lods
fstps
xchg
pop
les
mov
pop
mov
jle
xor
test
dec
aas
or
adc
lock
das
dec
rclb
pop
imul
lock
incl
cmpsb
or
into
sbb
lcall
push
test
mov
cmp
mov
adc
loopne
sub
mov
testb
cltd
out
mov
mov
pusha
decl
jmp
es
cmp
sbb
xor
push
in
or
addb
sub
jmp
push
sub
adc
xchg
sbb
and
lock
loope
sub
and
jae
dec
stos
mov
call
imul
sbb
outsb
mov
mov
pop
popf
adc
cmp
sbb
fmuls
or
mov
jge
les
cwtl
filds
popa
ret
cmc
test
jl
sti
pusha
jge
sbb
push
xchg
bound
xchg
das
fldt
push
cmp
decl
xor
lret
fnstsw
stc
mov
int
sub
push
sbb
scas
mov
xchg
repnz
decl
mov
mov
fdivs
and
push
ss
inc
aad
dec
or
cmp
in
pop
cmp
js
push
mov
jnp
dec
stc
lods
sbb
adc
inc
xor
add
outsl
sbb
mov
call
pop
or
jmp
idivb
rcr
push
push
pushw
inc
and
adc
jo
outsb
pop
jo
pushl
xor
ret
and
filds
cmp
jecxz
jg
push
push
dec
mov
jo
mov
and
imul
adc
ficompl
incl
mov
mov
pushl
mov
iret
cmp
loop
jg
push
jnp
lea
nop
imul
iret
cmpsl
popa
incl
stos
in
ja
repnz
icebp
int3
sub
mov
xor
pop
cmpsl
out
lea
adc
ds
out
std
mov
cmp
dec
das
mov
xlat
ss
sbb
push
pusha
decl
outsl
test
xor
pusha
adc
dec
lods
adc
lret
repz
mov
ljmp
les
scas
imul
lods
arpl
sub
mov
or
jne
mov
sti
pushl
jno
pushf
cmp
fwait
inc
inc
imul
jne
fldenv
pop
mov
xchg
adc
fldcw
cmp
pop
pop
jmp
pop
sub
inc
enter
sbbb
xchg
xlat
lea
loope
sub
jge
xchg
push
dec
push
add
cld
pop
push
and
inc
add
and
jmp
cmp
aas
push
data16
or
pmuludq
and
lahf
call
mov
and
inc
push
pushl
icebp
ljmp
daa
sub
mov
inc
inc
mov
mov
std
cmp
or
decl
sub
mov
jmp
push
das
loop
inc
pop
mov
or
fidivrs
pushl
ljmp
ret
pop
sahf
stos
cmp
mov
popa
ret
and
decl
dec
mov
mov
iret
mov
add
pushf
push
jbe
and
or
jmp
aas
push
cmp
aad
add
int3
les
faddl
lock
ljmp
jae
out
pop
or
cmp
mov
pop
xchg
lret
jge
call
cmc
mov
cld
jecxz
fs
popa
enter
sub
ljmp
mov
xchg
or
push
or
dec
lock
push
sub
and
lea
ror
cltd
pop
sbb
or
nop
mov
ljmp
dec
jecxz
or
mov
xchg
lds
and
ss
jle
bound
pop
lcall
clc
mul
cmc
add
cmp
add
or
clc
movsl
loop
inc
bound
les
clc
iret
mov
sub
jmp
cmp
cmpsb
arpl
cld
mov
mov
jae
adc
mov
mov
jmp
loope
cmpsl
cmp
inc
popf
xlat
fldl
push
dec
es
mov
sar
jmp
lahf
rcll
cmp
sub
push
and
cwtl
pop
mov
dec
cmp
cmp
pushl
je
mov
in
push
inc
fs
mov
mov
je
hlt
lcall
xchg
psadbw
jp
lcall
mov
push
cmp
push
mov
push
jle
add
mov
mov
cmp
cmp
lock
daa
shll
loop
cs
pop
push
sbb
push
ds
xlat
mov
int
mov
jmp
mov
clc
jp
sbb
aad
aaa
call
cld
push
cwtl
xchg
add
lret
lret
mov
iret
push
mov
dec
jmp
jbe
adc
jmp
les
xor
jge
insl
jne
fdivp
fiadds
push
xlat
insb
stc
lret
add
decl
pop
pop
mov
xchg
adc
jno
pop
dec
aas
jmp
jne
ret
decl
cmc
iret
mov
scas
dec
xchg
lcall
pop
lods
ljmp
stc
addr16
mov
ss
ds
divb
and
and
insl
add
inc
fisubl
add
xchg
ret
mov
call
add
das
or
test
mov
push
in
les
fsubs
jae
cmpsb
fisttpll
dec
ljmp
mov
pusha
lret
adc
test
imul
and
inc
mov
push
jmp
push
ljmp
pop
cld
sbb
fsubrp
push
cmc
scas
enter
add
test
mov
push
jo
shl
divb
mov
imul
add
outsl
pandn
decl
out
push
mov
xchg
fsubrl
mov
and
mov
and
std
lods
ljmp
mov
movsl
add
push
lret
mov
mov
or
rol
cmp
xchg
lock
sub
call
cmp
lods
loop
or
xchg
and
in
sbb
lret
or
pop
cli
cld
fisubrl
loop
es
decl
movl
lahf
adc
aas
sub
sbb
cmp
cmp
add
repz
cmp
call
call
js
add
pop
imul
fldt
mov
ljmp
pop
push
div
jp
movsb
sbb
insl
or
repnz
ret
flds
inc
push
bound
xchg
mov
movsl
xchg
push
mov
in
daa
pop
jne
jp
out
adc
sbb
sarb
pushl
in
adc
stos
hlt
add
pop
cmpsl
mov
shl
scas
enter
pop
out
leave
ja
loopne
call
rcl
push
push
leave
addr16
stos
or
sub
xor
jmp
mov
decl
popf
pop
stos
in
push
test
popa
inc
jne
sub
dec
lret
lock
xchg
inc
cli
cld
xchg
pusha
ret
cwtl
in
pop
and
fstpl
pop
xchg
loope
mov
insl
jmp
push
jmp
lret
mov
and
inc
inc
pushf
mov
insl
cmp
inc
ss
lcall
test
fs
and
das
dec
shl
xchg
mulb
add
int3
ret
in
mov
call
and
scas
mov
push
inc
sbb
incl
add
pop
mov
hlt
xor
fdivl
ret
or
lcall
into
fcoml
fcmovu
out
leave
adc
cmp
call
xor
ficompl
fsubs
aam
push
notl
imul
sub
inc
nop
aaa
repz
aam
call
out
fiadds
mov
popa
aad
dec
add
arpl
ficoml
cli
std
invd
fmull
incb
push
mov
and
hlt
adc
cmp
push
xchg
jo
cwtl
lods
mov
pop
jmp
addr16
mov
xchg
clc
sbb
xchg
and
aaa
or
mov
adc
xchg
pop
jge
or
pushl
sub
stos
jae
cltd
mov
imul
pop
call
mov
jmp
inc
mov
out
xchg
outsl
xor
jg
ss
subb
push
jbe
out
inc
jne
xchg
enter
negl
push
mov
int3
fisubrs
outsb
mov
jns
in
pop
ficoms
popa
shrb
jmp
xor
sbb
sub
adc
and
outsl
ja
pop
fucom
or
sub
call
fiaddl
xchg
push
lods
push
mov
fistl
mov
pop
pop
ficoml
cmp
decl
add
jl
jb
jae
in
shrl
daa
stc
fists
addr16
fwait
mov
incl
repnz
cmp
cmp
pop
std
pop
daa
or
inc
sbb
pop
sti
pop
sar
ljmp
push
jo
in
xchg
pushf
test
ja
pushl
jmp
incl
and
xchg
mov
jne
sbb
push
popf
pop
xlat
dec
sbb
xchg
clc
call
jle
lcall
shrl
hlt
sbb
mov
add
bound
cmpsl
push
sbb
dec
mov
add
lcall
dec
push
cmpsl
into
fucomip
mov
jmp
std
push
mov
les
mov
xchg
jmp
lock
je
cmp
fs
or
push
in
imul
adc
dec
and
call
xor
int
adc
xchg
fdivrl
sbb
mov
cld
bound
nop
jne
call
es
in
inc
mov
dec
xor
xor
cmp
add
add
notl
shrl
outsb
dec
stos
cmp
scas
insl
das
testl
mov
je
adc
sar
pushl
jmp
add
fsubrl
mov
inc
int3
xlat
adc
xlat
test
mov
test
dec
pop
inc
cltd
call
xchg
dec
pop
xor
icebp
mov
test
mov
testb
push
jg
and
icebp
inc
ljmp
add
jmp
cmpsl
mov
jecxz
xor
movsb
lods
out
lret
imul
call
add
xor
dec
lea
mov
out
mov
loop
or
incl
xor
fistpl
push
arpl
push
jne
jns
jns
decl
xchg
xor
fldcw
add
sub
mov
jne
cmp
je
ds
pop
inc
xchg
jmp
into
aam
mov
cmp
pushf
and
int3
mov
lret
jmp
push
neg
xor
in
negl
test
mov
gs
inc
cli
mov
out
sbb
call
mov
sbb
jnp
lret
js
sbb
test
inc
mov
mov
ljmp
or
clc
jg
sbb
divb
mov
push
enter
cmp
test
ljmp
xchg
arpl
jmp
mov
test
sub
mov
ret
lods
xchg
sbb
scas
pop
xchg
xor
jns
sub
push
popf
nop
mov
out
insb
xor
orb
sbb
push
adc
setg
jecxz
sub
push
sqrtps
fwait
lret
pushl
xchg
es
push
adc
lods
rcll
iret
das
rcll
test
shll
inc
decl
addr16
push
in
js
push
mov
inc
xor
push
stc
or
inc
les
jbe
ljmp
lahf
mov
sahf
movsb
loopne
das
jle
dec
nop
filds
fmul
mov
rorb
insb
cmp
decl
cmp
add
and
inc
ja
popf
rorb
pop
pop
es
int
aad
popf
push
or
call
xlat
scas
fcmovnu
sti
pavgb
add
aaa
jne
icebp
notb
imul
push
div
ljmp
sarb
scas
mov
lea
dec
adc
jo
pusha
ficoml
dec
loopne
lret
and
and
jbe
mov
lea
lds
lods
xchg
adc
daa
fimuls
dec
jp
dec
or
outsl
mov
mov
inc
es
cmp
test
and
mov
test
xor
inc
enter
sub
adc
fnstsw
loopne
pushl
sbb
outsb
dec
pop
lock
mov
pusha
mov
jae
sti
in
aas
mov
pushl
and
inc
cld
cld
push
push
inc
dec
nop
or
ret
fists
jmp
adc
push
xorl
push
or
push
bound
and
pushf
dec
and
add
cmp
adc
jecxz
shrl
sbb
aas
mov
or
sbb
or
ljmp
adc
pop
cwtl
sbb
stos
sbb
jae
rcrb
add
sub
ljmp
gs
lods
push
inc
into
and
add
jg
sbb
pop
or
repnz
incl
xchg
xor
lds
ficoml
lods
xchg
cmp
repz
jg
add
jmp
sbb
mov
stos
sub
mov
fs
jbe
in
mov
imul
or
push
stos
mov
imul
mov
push
addr16
cld
mov
mov
pushl
decl
push
rcl
inc
xchg
inc
incl
sbb
outsb
repz
push
orb
jp
pop
adc
pop
test
pop
mov
movsl
loop
add
cli
pushl
mov
add
inc
cmpb
jo
mov
mov
stc
jle
test
mov
subb
inc
mov
scas
push
out
cli
push
call
movsl
xchg
cwtl
jmp
cmpsb
es
push
test
jbe
push
jbe
pop
cs
sahf
xchg
dec
pushf
cmp
xor
mov
inc
aaa
ret
and
lret
adcb
in
in
mov
jnp
inc
push
mov
jns
stc
mov
sub
outsb
lahf
cld
adc
mov
or
xchg
lock
lcall
xchg
outsb
cld
add
push
cmp
dec
or
push
cmpsb
stos
ret
pop
mov
ljmp
mov
xchg
mov
mov
or
jmp
sbb
mov
pop
jae
jg
call
popa
push
and
sbb
insl
rcrb
and
jge
fists
lcall
popa
lcall
data16
pusha
out
mov
cmp
rorl
dec
push
movsb
dec
aaa
popa
xorl
test
sarb
dec
xchg
scas
vunpcklps
add
cmc
movsb
pusha
pop
out
enter
sbb
pop
jg
cmpsl
pop
push
pop
in
out
test
xchg
xchg
out
movsl
mov
call
inc
imul
mov
mov
dec
aam
mov
sahf
pop
sti
jne
mov
cmp
call
cs
mov
les
pop
xchg
jge
pop
ret
bnd
push
hlt
xchg
js
mov
data16
mov
jb
scas
pop
into
in
push
mov
fnsave
dec
sbb
call
fsubs
outsl
jl
arpl
bound
mov
jns
shl
mov
xchg
xchg
xor
jle
call
lds
dec
out
pop
inc
je
mov
xchg
or
inc
mov
es
pushl
or
push
cmp
test
add
ss
std
in
sti
movsl
loop
inc
push
call
add
pop
mov
mov
cli
dec
pushl
mov
jge
mov
adc
divl
lcall
mov
dec
and
shrb
push
sbb
mov
or
jg
jno
sub
decl
mov
pmaxub
aas
push
mov
clc
popf
outsb
daa
enter
inc
imul
decl
shlb
push
push
mov
divb
or
loop
mov
push
imul
js
mov
xchg
or
mov
iret
or
push
aad
inc
shrb
outsl
sbb
fidivrs
test
out
xor
jmp
popl
loopne
ds
dec
flds
cmpl
mov
dec
xchg
inc
inc
cs
call
std
test
add
notl
pop
jno
stc
jmp
test
jae
leave
insl
out
xchg
push
divb
adc
pop
fcompl
loope
xchg
xor
jmp
sbb
subl
mov
xor
filds
ljmp
push
sbb
fmull
jns
mov
xchg
xchg
sbb
adc
loopne
cs
dec
pusha
bound
ret
dec
into
push
out
push
sbb
iret
add
lods
sub
fs
dec
jmp
decl
xchg
stc
cmp
orb
fisttps
pop
mov
fdivr
incl
mov
push
je
ds
insl
hlt
aaa
bound
xchg
jno
cld
aas
out
pushl
cmp
aam
push
jecxz
cmp
daa
in
add
mov
in
outsl
sub
mov
adc
call
xor
ss
sbb
adc
cmp
imul
dec
pushf
pop
push
add
mov
insl
mov
imul
mov
jno
and
outsl
xor
inc
jmp
cmp
enter
jb
inc
mov
mov
add
aam
jmp
mov
push
ror
dec
mov
scas
jo
push
push
pop
shr
mov
ja
pop
lcall
leave
and
jg
or
outsb
sub
pop
adc
xchg
out
and
ret
jmp
fmul
mov
dec
lret
xchg
jp
xchg
and
js
lret
xchg
cmc
mov
sbb
ljmp
adc
mov
dec
pop
inc
mov
push
cmp
ret
jae
pop
ljmp
cmp
cs
popa
test
call
filds
cmp
incl
and
xor
inc
add
pushf
insl
xor
inc
test
add
jb
mov
sub
add
ljmp
sbb
cld
cmc
xor
cmpl
iret
jae
add
ss
ljmp
xor
add
mov
jnp
sbb
or
adc
stos
movsb
xchg
in
ds
decl
jae
push
inc
rorb
leave
aaa
pop
jecxz
or
sarl
push
pushf
clc
in
jl
sbb
sbb
out
pop
lods
aad
je
std
out
jne
repz
fdivs
dec
fstpt
sar
call
or
scas
pop
outsl
xlat
adc
mov
iret
popf
ss
xchg
lret
out
lods
adc
ljmp
mov
loope
not
jo
fildll
pusha
cmp
sub
repnz
leave
call
out
sbb
dec
je
push
add
data16
aad
add
insl
inc
lock
outsl
imul
movsl
pop
push
adc
or
cwtl
mov
pusha
sub
stos
adc
lret
out
incl
push
fneni(8087
lcall
int3
shll
dec
in
cmp
jo
sbb
dec
mov
dec
inc
push
insl
inc
push
mov
and
inc
sbb
inc
push
sti
rcll
or
mov
icebp
arpl
add
scas
xchg
mov
das
push
sahf
idiv
call
shl
movsb
incl
loop
cmpsl
add
xchg
rcll
popa
dec
add
push
push
shll
push
pop
or
jmp
ret
clc
xlat
cmp
cs
push
cs
out
leave
shrl
jae
decl
imul
push
lods
scas
inc
adc
mov
aad
out
lock
adcl
ljmp
sahf
push
addr16
push
cwtl
xor
dec
or
xor
jmp
and
pop
loope
inc
fiaddl
add
mov
mov
push
xor
sbb
and
pop
pushl
dec
dec
jge
push
sbb
inc
and
aas
dec
loope
or
dec
fwait
insb
mov
cmp
pushl
pop
subb
push
sbb
push
movsl
fldt
stc
and
jle
mov
jmp
rolb
sbb
dec
inc
or
pop
int3
les
leave
cmp
mov
pushl
andl
or
xchg
add
das
hlt
jmp
xchg
xchg
out
testl
pushl
int3
lea
xchg
int3
pop
mov
mov
inc
mov
mov
cld
adc
loope
mov
decl
cmpsl
cmp
sbb
in
out
icebp
and
push
inc
js
dec
aaa
sub
ret
jmp
push
cmp
inc
jb
mov
sub
pop
push
outsl
sbbl
lcall
sbb
add
leave
and
add
out
repz
cmp
loopne
aad
mov
cmc
ljmp
push
movsl
pop
dec
add
or
xchg
repz
into
pop
test
cmp
and
out
dec
lahf
add
into
adc
loopne
stc
das
test
incl
pop
jle
dec
imul
shll
out
pop
xchg
mov
sub
jmp
push
xor
lods
ljmp
out
inc
orl
jae
mov
cmpsl
cmpsl
jg
arpl
int
mov
cmp
jbe
jmp
inc
add
dec
cltd
dec
mov
cwtl
dec
into
dec
arpl
jbe
repz
jns
adc
out
lods
decl
mov
fbld
shl
in
xor
out
dec
lods
mov
call
push
das
push
xor
aas
xor
or
call
out
jmp
dec
add
pushf
cmp
xor
call
fisttps
pavgw
fucomi
add
mov
and
movsb
ja
hlt
insl
xchg
incl
rclb
and
jnp
adc
cmp
sbb
jp
nop
les
push
sti
lret
incl
out
dec
or
in
add
xor
fstpl
and
imul
decl
xchg
add
cltd
jg
mov
stos
sub
sbb
jno
pushf
cmp
lcall
xchg
arpl
adc
filds
in
ficomps
and
out
sti
or
inc
call
call
inc
mov
push
jg
inc
sti
cs
movsl
cli
add
sub
lea
inc
ja
incl
inc
mov
aaa
scas
add
test
repnz
mov
dec
fcos
call
addr16
or
loop
adcl
scas
pop
jl
in
or
pop
aam
pushl
mov
mov
push
sbb
clc
loopne
mov
pop
negb
push
fs
sub
arpl
call
mov
sbb
mov
cmc
imul
xchg
outsb
mov
xchg
call
incl
push
repnz
xor
icebp
xor
pop
mov
mov
mov
pop
shr
jne
dec
jnp
or
nop
fsts
inc
or
clc
pop
aad
or
pop
cmp
xchg
lea
xor
popa
xchg
cmp
mov
xorb
mov
fdivr
pop
movsb
fwait
pop
fnsave
call
jae
xor
mov
pop
cwtl
cmpsl
aad
jae
popa
out
push
fstps
xor
push
jae
push
push
mov
les
bound
adc
xor
sub
push
jmp
fdivs
mov
out
xchg
aas
rolb
add
ret
fdivrp
call
cmp
jmp
xchg
sbb
jge
negl
add
sub
ja
mov
mov
stc
xchg
jae
mov
lret
insl
out
mov
ret
scas
test
inc
cmp
dec
xchg
and
call
sbb
cmp
adc
jns
dec
in
and
sbb
cmp
sbb
shlb
lcall
ja
push
xchg
mov
add
or
pop
mov
jo
inc
mov
outsb
xchg
inc
push
lock
xor
pushf
or
fs
cmp
cwtl
adc
push
data16
addb
mov
xchg
mov
mov
lret
mov
lahf
fs
jl
or
call
sub
pusha
clc
stos
pusha
popf
stc
mov
inc
mov
pop
incl
movsb
sar
enter
jmp
xchg
sbb
and
aam
cmc
fstpl
pop
imul
out
dec
dec
out
cltd
jae
decl
or
mov
and
adc
out
sbb
mov
or
jp
jmp
dec
add
sub
shll
and
push
lds
mov
mov
push
loopne
xchg
mov
pop
pusha
andl
cmpsl
in
sbb
cwtl
cld
adc
ss
popa
hlt
popf
aas
ljmp
in
js
aaa
adc
cli
jns
ljmp
inc
jo
sbb
or
jmp
aam
inc
fdivrp
dec
mov
int
jns
cmp
inc
in
mov
push
call
dec
xchg
pusha
iret
sbbb
stos
scas
ss
cmp
jns
bound
mov
sbb
aam
add
jmp
out
and
lods
cmp
test
xchg
fsts
leave
shl
inc
pop
mov
xor
call
lds
aam
stos
xchg
movsb
popa
mov
pop
sahf
sbb
fwait
add
jb
rclb
pushl
shl
or
lds
pop
scas
xchg
inc
jp
mov
aas
mov
sahf
mov
rcrb
lcall
fcompl
jp
inc
sub
add
divl
pushl
mov
sbbb
jae
dec
sbb
lret
into
sub
shlb
xor
in
lea
pop
test
xchg
sub
sahf
lret
sbb
shlb
std
cmp
daa
or
xchg
decl
or
and
mov
leave
xor
les
leave
mov
fdivp
das
pushl
aam
mov
sbb
repz
adc
loop
jo
sbb
insb
or
pushl
push
fimull
adc
cli
mov
pop
mov
jno
cmp
lods
ljmp
sbb
stos
cli
pop
push
sahf
mov
mov
popf
int
push
icebp
add
jmp
mov
test
xor
gs
mov
test
add
xchg
mov
mov
dec
pop
ret
mov
es
mov
jb
mov
inc
adc
lahf
movsb
pusha
lods
lods
push
jmp
sub
loope
aad
jnp
sub
fcomps
mov
dec
and
dec
mov
xchg
lret
xchg
dec
pop
pushf
lret
pop
popa
sub
inc
xchg
inc
call
and
outsb
stos
jnp
sub
lret
dec
mov
xor
loopne
out
aam
push
xchg
decl
pop
mov
repnz
cmpsb
andb
push
imul
pop
push
stos
in
lods
mov
incl
jnp
sub
mov
xchg
pop
cmp
pop
movsl
js
pop
and
sub
ljmp
add
mov
std
hlt
xchg
sahf
cmp
addr16
mov
je
adc
mov
inc
mov
mov
or
loope
cltd
add
mov
cmp
lcall
adc
cmp
xchg
xor
or
mov
mov
pand
jmp
fnstsw
notl
xchg
pushf
repnz
movl
adc
jns
xor
call
fdivrp
lods
inc
push
push
out
mov
js
filds
push
ljmp
icebp
jo
inc
aas
dec
xchg
in
jmp
in
pop
jne
inc
mov
cmpsb
and
test
es
out
or
jae
in
call
pop
mov
aas
mov
clc
lds
bound
xor
add
fisubrs
ljmp
repz
sub
out
jbe
lret
loop
push
pop
xchg
cmp
adc
decl
fidivl
add
jnp
fidivrs
jnp
cwtl
hlt
dec
dec
xor
mov
or
in
stos
mov
pushl
filds
xor
and
lahf
mov
insb
insl
gs
dec
lock
xchg
jp
popf
lcall
lahf
jno
sbb
dec
bound
orb
mov
pop
push
push
push
push
call
test
sbb
daa
mov
xchg
xor
movb
scas
test
ja
shlb
ljmp
sub
push
bound
jns
push
or
popa
push
add
dec
sarl
sub
sub
add
jne
adc
adc
inc
add
jnp
mov
clc
jns
sti
rolb
ljmp
inc
subl
and
xchg
sbb
fiaddl
ljmp
cli
dec
pop
push
aam
dec
jae
mov
adc
add
adc
sbbb
inc
xchg
fdivr
lcall
cwtl
orl
push
dec
inc
cmpsl
cmp
lret
movsl
or
sub
call
fwait
dec
fcomps
fwait
add
test
pop
push
in
pushf
jl
jge
cli
adcl
pushl
scas
stc
imul
data16
push
sub
out
jno
ret
pop
push
dec
or
dec
scas
aas
nop
push
mov
push
xchg
or
out
aad
mov
imul
into
in
repnz
call
ds
pop
cmp
jle
imul
repz
mov
mov
xlat
xor
mov
enter
mov
jecxz
notl
lcall
loop
cmp
mov
incl
mov
fwait
push
mov
aad
mov
push
and
xor
sbb
decl
jmp
cmpsb
dec
dec
mov
adc
push
xchg
mov
test
pusha
push
sti
lret
jae
lcall
loop
push
xchg
jbe
mov
mov
jb
and
jnp
lds
add
jmp
mov
dec
lea
ja
lahf
jl
shrb
fadds
aam
and
push
xor
cmp
push
and
lea
pop
add
addr16
mov
push
mov
jl
hlt
mov
lahf
shlb
and
loope
out
mov
jmp
lea
test
sbb
xchg
xchg
mov
or
int3
aas
imul
clc
jge
rclb
idivl
lea
das
xchg
loop
int
movsl
mov
clc
repz
jmp
pushl
or
ret
fisubs
jecxz
in
fwait
mov
inc
sbb
fnsave
mov
popa
inc
dec
loope
push
rol
lods
decl
xor
mov
xor
test
in
jo
sti
push
mov
aas
leave
adc
jmp
cmp
sub
and
xchg
ss
nop
adc
jmp
lahf
movsb
inc
stc
repnz
jmp
call
cmp
xchg
arpl
xchg
or
mov
jb
dec
call
negl
and
lahf
ret
fnstsw
cmp
mov
sbb
add
out
or
jmp
dec
test
js
xchg
out
push
cwtl
mov
jecxz
insl
sub
into
pop
cld
je
inc
pop
jns
test
in
push
push
xchg
mov
cmpb
lret
insb
cld
xor
scas
push
sbb
dec
mov
call
cmp
mov
sti
or
out
stos
or
ficomps
fstl
cltd
or
mov
cmp
insl
fdiv
pop
lahf
add
mov
in
iret
xor
movsl
jmp
adcl
ljmp
in
rorb
pop
cmp
mov
hlt
fs
mov
fidivl
pushl
and
xchg
mov
xor
das
insb
dec
outsl
mov
lods
push
lcall
movsb
or
push
shrb
xchg
xchg
sub
sub
leave
subb
hlt
jne
push
in
cmp
jg
fwait
push
add
add
adc
lock
in
leave
cmp
shr
fdivr
call
cmpsb
into
lock
or
or
outsl
mov
idivl
push
popf
call
push
push
lcall
mov
push
xor
mov
or
jmp
mov
repnz
pop
adcb
shll
aas
pop
jns
insb
mov
jmp
xchg
repnz
xchg
mov
sti
push
movsb
ss
jl
lret
movsb
mul
jnp
cmp
jmp
cmp
sbb
scas
aas
scas
jb
dec
and
inc
mov
lcall
dec
fstps
jb
xchg
dec
add
jp
in
insb
jge
stc
cmp
loop
lret
and
xchg
sub
testl
addr16
lcall
sahf
les
insb
sbb
ss
sub
xchg
gs
xlat
lds
je
jns
fdivs
mov
decl
or
xorl
sub
inc
add
jb
sub
mov
jmp
in
add
pushl
and
stc
aaa
or
xchg
mov
push
sti
mov
xchg
and
mov
jns
dec
inc
xlat
in
pop
mov
mov
bound
loope
mov
pusha
jbe
pop
fs
roll
fcoml
adc
aaa
mov
mov
cmp
inc
dec
lcall
pushl
mov
push
mov
test
loopne
int
mov
push
aas
test
or
cld
sbb
cmp
jge
fcoms
enter
testb
test
cld
jmp
jmp
jle
xor
je
jle
nop
mov
arpl
ret
pop
or
imul
xor
fwait
pop
das
ljmp
loop
sbb
inc
sbb
das
add
test
or
xorl
mov
call
aaa
inc
lret
out
inc
mov
incb
pop
mov
ret
mov
call
add
cltd
into
js
xchg
mov
add
dec
dec
xchg
xor
xchg
push
jmp
sarl
and
ficoml
xchg
pusha
sbb
add
fs
lcall
or
pop
pusha
mov
int
dec
and
xor
dec
mov
sub
ljmp
cmp
fwait
pop
fwait
cmp
inc
xchg
add
fsincos
fst
pop
sbb
xor
jge
ss
jmp
sub
cli
mov
jp
movsl
adc
aad
mov
sbbb
xor
imul
inc
jp
jno
fsubrs
mov
stc
jno
pop
push
or
decl
dec
xchg
add
gs
mov
mov
mov
xchg
jg
push
jmp
lcall
subl
inc
es
arpl
lcall
fidivl
dec
xor
pushl
fs
arpl
lods
loopne
popf
cmp
dec
arpl
lds
int3
add
pushl
hlt
sub
mov
jg
mov
das
outsl
push
roll
aam
outsb
add
pop
mov
dec
cwtl
test
in
mov
dec
mov
into
pop
or
sbb
pop
dec
cmp
stc
cld
xchg
add
dec
lea
repz
cmpsl
xchg
inc
scas
cmp
sbb
mov
decl
fwait
inc
inc
orl
iret
mov
dec
es
out
stos
cmpb
call
ss
fucom
adc
push
xor
aad
dec
dec
ret
pusha
mov
xlat
test
incl
inc
subl
lods
test
cmpsb
jns
xorl
jo
xlat
imul
shl
popf
pushl
fucom
scas
mov
jb
jmp
mov
fiadds
jo
nop
sti
inc
or
adc
lds
ljmp
in
adc
inc
or
mov
jge
mov
mov
decl
repnz
loopne
out
sbb
inc
stc
xchg
iret
mov
jnp
adc
cmp
aaa
ljmp
out
fistpll
xchg
arpl
lock
mov
push
lods
mov
fwait
lahf
mov
dec
xchg
test
dec
pushl
out
or
jmp
sar
sti
mov
xor
clc
insl
inc
mov
ljmp
xor
loop
fcompl
mov
sbb
jo
jecxz
pop
test
mov
jo
mov
pop
and
or
gs
stc
int
inc
rcl
jne
push
enter
ljmp
xchg
nop
mov
repnz
movsb
mov
or
cld
aam
cs
fcomps
das
lock
stc
shl
adc
das
jp
sbb
fsubl
jb
sbb
and
cmpsl
popa
mov
adc
mov
mov
cmp
sub
add
inc
je
mov
push
fdivrs
pop
cmp
decl
arpl
outsb
adc
mov
adc
adc
or
sbb
xlat
aas
xchg
cmpsb
sbb
call
xchg
call
jnp
ret
aam
subl
mov
add
cmc
lret
and
cs
jmp
push
popa
lods
loope
push
mov
add
mov
inc
lcall
inc
mov
popa
cltd
cmpsl
out
sub
pop
mov
or
and
pmaddwd
sbb
cmp
call
sbb
or
cwtl
and
pop
orl
mov
sub
mov
push
push
jmp
ret
outsl
adc
insb
pop
push
sbb
ds
ljmp
ljmp
lods
adc
orb
xor
jp
xor
adc
push
scas
push
pop
mov
fiadds
adc
loop
orb
aas
xor
mov
ds
push
incb
loopne
lahf
xchg
mov
jmp
lret
fildll
dec
sub
leave
lods
xchg
out
xchg
pop
jecxz
push
pop
addr16
inc
xchg
push
lret
or
call
xor
add
and
rorb
jae
xchg
dec
imul
adc
incl
dec
jmp
add
or
shl
lahf
and
sub
sbb
and
decl
movsl
sti
sbb
pop
xchg
arpl
adc
mov
lcall
es
or
jmp
fisubs
ss
lods
iret
je
push
cmp
sbb
int
mov
call
std
stc
lea
or
pop
xlat
sub
dec
push
into
dec
sub
dec
fs
incl
mov
scas
push
pop
pushf
sbb
inc
test
test
ljmp
js
mov
mov
xchg
mov
jg
push
and
mov
idivb
sbb
ret
sub
test
scas
mov
call
subl
scas
mov
push
int3
imul
insl
sbb
sbb
stos
or
add
ficompl
pop
es
pop
inc
jb
jne
nop
into
jno
test
dec
jno
add
mov
lret
adc
mov
mov
lds
call
jbe
test
cli
mov
mull
push
add
stc
rorb
lcall
lods
test
les
das
imull
pop
xchg
adc
popf
sub
mov
jmp
out
jl
inc
add
outsl
ds
out
xchg
push
mov
pop
ret
nop
cli
lahf
or
pushl
or
das
je
push
imul
jns
jecxz
mov
cwtl
es
xchg
push
out
imul
jmp
fldl
imul
rcrl
pop
or
inc
jae
scas
dec
mov
cmpsb
out
pop
orb
mov
fcos
incl
sti
cmpsb
or
ret
pop
insb
ret
pop
mov
mov
inc
mov
mov
sbb
lcall
add
inc
push
jb
pop
push
mov
scas
jle
lcall
lcall
add
fdivs
push
and
cmc
sbb
shl
js
lcall
or
jmp
pop
xchg
fadds
ror
pop
frstor
inc
sub
pop
sub
imul
incl
in
pop
jns
les
out
push
or
adc
cmp
and
xor
mov
dec
popa
inc
inc
push
pop
or
sbb
mov
sub
and
out
lock
fwait
in
jmp
out
jg
jecxz
inc
mov
sbb
pushf
inc
aam
pop
cli
dec
sti
int3
inc
add
movsl
add
jg
pop
mov
lret
adc
shrb
mov
dec
cmp
call
call
and
pop
adc
fwait
gs
addr16
fst
movsb
repnz
sahf
loopne
jle
jmp
pop
insl
into
pop
stos
sarl
adc
dec
stc
add
inc
addl
nop
popf
jg
sbb
mov
ljmp
popf
stos
gs
pop
xlat
or
sbb
fcoml
cmp
or
incl
sahf
mov
insb
jo
pop
ss
adc
sub
mov
loope
incl
outsb
push
mov
repz
ss
shrl
mov
cli
addl
jmp
insl
fldl
adc
jle
movsl
jecxz
pop
lret
das
inc
pop
dec
cli
xor
scas
ljmp
fldenv
ljmp
sub
jl
xchg
test
jle
push
sbb
cmp
mov
scas
aas
mov
aaa
jp
xchg
push
adc
push
ror
xchg
leave
xor
inc
push
pop
flds
sub
mov
mov
and
nop
adc
cwtl
adcl
adc
fcomps
arpl
jo
aam
pushl
xchg
and
cmp
cmp
subl
cmp
repz
or
ljmp
jne
jecxz
daa
ds
xor
movsl
sbb
fwait
shll
sti
cli
cli
ret
test
jno
sub
outsb
testl
mov
fisttpl
test
dec
test
push
ljmp
out
lcall
cmp
movb
mov
in
dec
insl
inc
adc
fs
ja
xlat
scas
jecxz
lcall
sub
sub
or
ja
adc
push
lods
icebp
add
push
xlat
add
ljmp
push
pop
mov
mov
in
in
icebp
push
addr16
icebp
in
pushl
mov
lahf
and
xchg
out
and
frstor
dec
mov
int3
xchg
loopne
loop
push
push
lret
jle
int
bound
jno
roll
xchg
cwtl
nop
fistpl
shl
cmpsb
das
mov
cmc
iret
push
and
pop
mov
jge
test
jg
mov
incl
pop
cmp
and
sub
adc
xlat
aas
imul
cmp
and
xchg
sub
cwtl
or
or
cmp
lahf
jl
mov
cwtl
aam
dec
fadds
clc
shll
std
push
sti
pop
lods
paddw
les
push
aam
jns
sbb
sub
call
loope
clc
and
sbb
xchg
rorl
repz
inc
flds
in
jo
adcl
jne
dec
mov
push
dec
pop
push
mov
repz
xchg
lods
dec
in
mov
pop
xchg
scas
jne
fwait
incl
popf
inc
lahf
adc
fnsave
mov
jns
mov
adc
jp
je
lcall
fnsave
mov
mov
cmpsb
popa
push
in
jp
int
sbb
or
adc
ljmp
leave
xor
test
add
es
pusha
cld
shl
jle
leave
sbb
push
out
inc
test
push
cmp
mov
mov
sbb
loopne
push
jl
xor
decl
aad
and
push
cmp
insb
jecxz
cmpsb
push
iret
in
repnz
or
or
gs
jmp
xlat
inc
inc
mov
addb
mov
mov
fnstsw
cmp
mov
or
out
xor
lcall
or
pop
and
jmp
test
xor
mov
out
mov
or
jle
filds
aaa
fdivrs
cmp
cmp
int3
add
jecxz
rcrb
enter
lcall
subl
xchg
enter
inc
cmp
shrb
ljmp
call
add
bound
xchg
adc
les
jae
jns
xlat
incl
cmp
stos
in
out
sarl
lds
pushf
das
dec
out
pop
insl
xor
mov
or
incl
cmc
inc
inc
das
and
dec
dec
je
pushf
pusha
cmpl
push
call
ret
cs
mov
rclb
js
out
mov
div
sub
shll
cmp
jmp
xchg
mov
or
xor
add
je
in
add
incb
mov
ljmp
rcrb
repz
and
sbb
sbb
sbb
decl
subb
popf
sti
fcoms
insb
sbb
fdivrs
int3
pop
fimuls
lcall
adc
rcrb
imul
cmp
lcall
daa
ljmp
mov
cmpsb
int
xchg
jmp
fstps
sbb
ret
xor
push
xchg
call
mov
add
ljmp
and
jmp
sbb
sbb
lret
rorl
pushl
dec
add
xor
sub
int
std
inc
popa
fnstenv
loopne
mull
fwait
mov
sub
aam
fldt
lock
ret
shll
cmpsb
pop
xchg
jnp
incl
and
icebp
out
in
hlt
add
dec
sub
icebp
sbb
add
in
cmp
pop
incl
repnz
pop
dec
add
mov
and
and
test
lods
jo
mov
jo
adc
dec
lea
pop
in
lcall
mov
or
rclb
pop
cwtl
call
cwtl
insl
repz
loopne
pop
arpl
jo
mov
fwait
test
addr16
movl
xchg
inc
push
invd
cmp
jle
xchg
sbb
inc
in
mov
and
ljmp
test
add
lret
ret
adc
jb
fsub
xchg
lcall
mov
outsb
or
sub
pop
mov
mov
sub
movsb
out
repz
xchg
xchg
jp
outsl
inc
pop
ss
decl
adc
inc
pusha
pop
xchg
mov
ret
cmpsl
frstor
cmpsl
add
rcrl
inc
in
push
inc
jmp
mov
xor
out
add
ljmp
clc
fistps
leave
mov
pop
test
call
pusha
mov
or
push
test
add
mov
pop
insl
pop
insb
jmp
jmp
jp
out
ds
adc
iret
arpl
add
fstl
mov
popa
scas
xchg
imul
cli
lcall
loopne
cmc
mov
adc
push
int3
sarl
ret
xor
or
incl
add
adc
pop
dec
pop
push
sarl
call
scas
mov
sahf
cmp
mov
test
aaa
mov
xchg
push
stc
adc
mov
mov
cld
push
inc
sub
call
out
daa
mov
adc
loopne
enter
das
mov
cmpsl
and
pushl
loopne
adc
sahf
fucomp
fs
dec
lock
add
fidivrs
cmp
jg
or
jmp
lcall
sub
mov
jle
sti
sub
push
mov
push
cmp
xor
push
push
lret
jge
cmp
pusha
inc
jns
push
jne
xor
mov
sub
push
leave
xchg
push
xchg
nop
icebp
fs
pushl
mov
adc
lret
cli
xchg
xchg
or
subb
add
sti
lcall
jmp
pop
add
call
and
jnp
in
push
clc
mov
sbb
adc
pushl
add
sbb
mov
cltd
cmp
push
imul
mov
orb
jmp
adc
lcall
and
inc
pop
cmc
adc
or
mov
and
call
in
cmp
cmp
popf
xor
mov
fwait
leave
fdiv
xchg
inc
pop
ljmp
pop
pop
out
xor
mov
add
mov
cmpsb
das
add
dec
inc
std
repz
incl
adc
jecxz
test
popa
mov
cmp
test
jg
jno
incl
call
and
stos
rolb
pusha
dec
cmp
test
push
repnz
push
sbb
mov
les
lods
std
pushf
or
pushf
mov
fwait
add
loopne
outsl
lods
mov
lcall
mov
addb
fwait
mov
pop
push
and
mov
xor
call
pop
jl
stos
pop
and
loope
scas
loope
or
push
push
sbb
lds
decl
sub
imul
std
enter
cmp
ret
out
inc
orps
xor
xchg
jae
jbe
xchg
int3
push
out
mov
sub
sub
and
dec
push
mov
decl
movsl
mov
es
ss
js
xchg
and
jnp
bnd
out
es
lcall
dec
xchg
push
cmpsb
jo
pop
mov
insl
rolb
enter
mov
mov
cmpsb
jmp
dec
daa
aam
and
out
add
out
insb
adc
inc
jb
cmp
decl
cltd
adc
jmp
mov
xor
fsubl
cmp
add
in
mov
add
mov
in
hlt
sub
dec
aas
push
ja
movb
xchg
incl
add
aaa
icebp
pop
mov
cmp
cmpsb
pop
and
incl
imul
inc
les
push
ret
sbb
fs
ss
and
add
push
and
jge
jb
xchg
pop
add
inc
sub
scas
clc
jns
xchg
ret
pop
out
cvtpi2ps
sub
or
mov
fildl
or
xchg
in
loope
or
xlat
mov
pop
sbb
sbb
call
popa
stos
sbb
cs
fnsave
and
jmp
xor
jp
pushl
cmp
lcall
data16
mov
dec
lret
sarl
dec
jl
jae
test
lcall
mov
sub
jns
xchg
cmp
dec
outsl
testb
gs
clc
mov
mov
xor
jecxz
decl
inc
aam
pop
push
add
fisttps
mov
adcb
xchg
inc
addr16
decl
pop
lcall
lock
je
sti
insb
xor
into
iret
ljmp
add
jmp
call
out
xor
shlb
lods
cmp
xchg
adc
mov
jo
test
adc
fildl
jmp
ja
in
int3
lods
xor
and
test
addr16
push
mov
lods
pop
pop
mov
cwtl
or
mov
inc
dec
jmp
loop
inc
mov
mov
ds
push
xchg
push
push
mov
xchg
flds
out
cmp
arpl
sbb
jmp
mov
push
arpl
jmp
decl
js
jno
lea
movsb
outsl
test
ja
mov
xchg
bound
mov
decl
in
pop
stos
movsb
xor
loope
repz
add
mov
mov
add
mov
pop
push
xor
dec
pop
add
fsubl
add
xchg
dec
and
mov
sahf
repnz
pushf
mov
and
dec
xchg
xchg
inc
cmp
test
jmp
xlat
insl
leave
pmaxsw
int3
dec
push
push
pushl
or
dec
int
pop
sti
mov
decl
xor
xor
mov
sub
mov
jmp
into
cmp
ljmp
lret
andl
cmc
sbb
pushf
mov
testb
mov
cmc
sar
pushl
sbb
push
inc
inc
shlb
xor
popf
lea
or
or
sar
jmp
jle
je
pop
nop
adc
xor
or
push
jmp
jl
sbb
fbstp
pop
fs
jmp
fsubrp
pop
inc
loopne
add
cld
insb
testb
add
mov
inc
dec
decl
sub
xor
xor
ret
mov
mov
cmp
in
incl
mov
es
cltd
xchg
lahf
pop
push
inc
iret
mov
testl
dec
cmp
call
cli
in
outsl
out
in
mov
mov
je
cmp
loopne
in
push
bound
mov
call
cmp
push
callw
adc
cs
push
incl
cltd
inc
leave
incl
cwtl
push
imul
mov
scas
dec
in
loop
lock
cmp
mov
mov
mov
jns
fnsave
and
fildll
sbb
jae
jmp
adc
cmp
fsub
dec
loope
pop
aad
cld
add
inc
repz
adc
gs
jp
lcall
rorb
nop
xor
mov
dec
cli
mov
and
xor
cmp
add
jl
sub
adc
adc
pop
jmp
jge
inc
push
les
or
ljmp
outsl
call
sub
filds
cmp
fsubs
mov
xlat
scas
fwait
sbb
mov
js
sbb
sub
negl
inc
std
movsb
pop
das
cmp
jae
aam
cwtl
outsb
pop
mov
decl
sub
sahf
adc
sub
testl
jae
and
jmp
pslld
pop
ret
out
mov
in
mov
les
cltd
addr16
mov
in
or
pop
and
stc
jmp
movsb
or
std
scas
repnz
jbe
dec
ljmp
xchg
lods
leave
pop
push
xor
jle
and
mov
ficomps
shlb
dec
xor
push
mov
cmp
ror
stos
mov
inc
inc
pop
sub
cltd
rcl
jecxz
bound
pop
call
mov
shll
jl
pop
pop
outsl
inc
and
dec
int3
sti
rorl
imul
call
lds
fisubl
cltd
sbb
jo
out
aad
das
mov
cltd
xor
aas
pop
ljmp
cmpsb
fnstenv
inc
xchg
push
xchg
cmp
or
push
std
insb
xchg
pushl
sbb
imul
and
mov
gs
in
push
cmpsb
fistl
mov
inc
push
pop
sarb
jae
loope
lods
push
shr
or
and
cwtl
sti
aaa
inc
ret
mov
pushl
int
sbb
std
jmp
cmpsl
xor
mov
lret
sub
xor
call
movsb
stc
adc
mov
sbb
test
stc
pop
pop
cltd
push
sbb
ret
lcall
push
enter
pop
adc
loop
out
daa
aas
aaa
sarb
push
test
ret
or
and
pop
xchg
test
imul
mov
and
fdivrs
movsl
pushf
mov
call
decl
adc
decl
loope
loope
mov
xor
ljmp
push
out
clc
mov
out
nop
push
pusha
pop
add
cmp
rcrl
jns
aam
bnd
je
shlb
xchg
pop
imul
or
pop
inc
push
sub
inc
aam
in
jne
movsbl
mov
dec
sbb
adc
mov
decl
push
jle
push
adc
add
xor
rsqrtps
test
loope
dec
out
pop
jmp
mov
clc
popf
shll
jno
ja
mov
xchg
shlb
roll
test
jmp
or
test
pop
sbb
test
imul
push
call
cli
jle
out
in
xlat
sub
mov
push
lods
mov
add
dec
cld
mov
push
pushl
fs
xor
out
std
ds
mov
loop
jle
std
lcall
cmpsb
and
repz
sbb
movsl
adc
pushf
inc
imul
jl
and
mov
decl
mov
push
mov
inc
mov
inc
lcall
ror
pop
sub
xchg
ljmp
imul
mov
pop
adc
mov
std
aad
ds
mov
lcall
cmpsb
sub
out
sbb
push
inc
jns
sub
lret
jne
jl
js
sub
cmpb
call
mov
cmc
adc
inc
sbb
test
ficomps
jbe
xchg
jno
push
mov
adc
decl
adc
fsubs
sahf
fiaddl
dec
in
dec
push
pop
ret
test
insb
lret
mov
call
daa
pop
out
dec
lahf
xchg
dec
rorb
mov
sub
jmp
add
insl
sbb
call
jbe
mov
add
push
dec
push
les
jmp
dec
unpcklps
push
fs
jmp
jno
scas
jle
nop
xchg
int3
int
sub
sti
out
in
push
mov
ret
add
popa
inc
sahf
or
jo
fidivl
mov
jl
inc
mov
add
xchg
xchg
pop
inc
cmc
adc
push
pop
cmp
pushl
out
push
das
movsl
mov
cmpsl
push
das
imul
or
mov
push
or
outsb
mov
jo
lcall
ss
mov
sub
fwait
sub
dec
imul
stos
fdiv
movsl
mov
rorb
xor
insl
push
fucomip
mov
mov
stos
pop
mov
testl
jge
xor
adc
rcrb
or
loop
add
pop
stos
xor
cmp
lcall
adc
shr
pop
lods
subb
pop
ss
mov
adc
movsl
xchg
adc
xchg
pushl
arpl
inc
insb
mov
or
scas
ljmp
jnp
inc
icebp
mov
mov
or
cmp
decl
rcll
or
icebp
sbb
int3
push
adc
pop
sbb
pop
icebp
les
incl
stc
pop
or
popa
test
push
divb
dec
imul
jb
in
or
jmp
inc
xor
test
roll
lret
sub
sub
adc
cli
aam
mov
sbb
rol
mov
cmp
enter
jno
mov
arpl
ljmp
push
pushf
testb
rclb
adc
xor
jnp
jmp
iret
test
jmp
and
ret
cmp
xchg
push
out
xchg
in
sub
xchg
sarl
jg
fs
xor
cmp
divb
rolb
je
ja
mov
lcall
jp
cwtl
lods
cmp
pop
push
ds
shll
in
jmp
decl
testl
inc
or
out
sbb
loopne
ja
movsb
pop
cmp
lahf
and
mov
inc
push
sbb
repz
inc
push
stc
xor
fisttpl
in
cmp
sar
dec
add
fsubrs
shrl
outsb
mov
adc
rcrb
jecxz
inc
das
pusha
fmul
movsb
mov
insb
aaa
mov
cmp
fwait
and
iret
and
arpl
jo
sbbb
inc
lret
jmp
std
ret
cs
ljmp
jle
leave
mov
jnp
testb
cmp
stos
jo
push
mov
sub
scas
add
lcall
xor
push
mov
std
mov
or
pop
mov
daa
pop
jg
adcb
in
and
jmp
push
jle
sub
cmp
nop/reserved
js
lods
jbe
faddl
cmp
pushl
inc
arpl
pop
or
mov
jnp
scas
xchg
mov
jge
stos
popf
arpl
lcall
jg
inc
int3
gs
xor
fnstcw
out
pop
rorl
mov
jbe
lcall
sti
ret
mov
icebp
mov
daa
mov
add
stc
mov
imul
cmp
lcall
nop
pop
lahf
fcmovne
testl
test
push
stc
cmp
loop
or
lcall
js
popa
shll
pop
and
ret
aam
dec
mov
sbb
add
nop
push
cmp
call
out
fmuls
test
add
pop
pushf
lahf
out
loop
jge
inc
mov
jle
clc
xor
add
loope
hlt
ret
pop
xor
push
and
mov
ljmp
fnsave
daa
dec
inc
lahf
xchg
icebp
mov
fidivrl
sahf
sbb
test
jmp
jmp
notb
push
in
bound
bound
push
cltd
ljmp
lods
mov
adc
or
insl
inc
fistpll
dec
push
dec
xchg
mov
jne
inc
mov
incl
inc
aas
sub
xchg
js
lock
mov
bound
xchg
or
movsl
adc
adc
xor
jmp
cmp
pop
data16
sub
imul
xchg
ficomps
mov
test
in
mov
jbe
or
imul
out
mov
dec
xor
mov
lahf
pop
lock
mov
jmp
dec
sti
jnp
xchg
inc
dec
push
call
adc
push
mov
or
add
xchg
cmp
jbe
jg
push
bswap
fistps
jg
jmp
fcmovbe
or
test
sbb
push
or
repz
mov
scas
inc
mov
mov
jp
push
sbb
into
sub
ljmp
test
or
lods
inc
xchg
push
pop
in
inc
insb
xchg
cld
testl
sub
jmp
xor
gs
pop
subps
cmp
cltd
xchg
xchg
xchg
das
jl
enter
gs
cmp
lock
mov
add
imul
adc
cmp
lahf
addr16
jmp
outsb
pop
mov
xor
mov
lret
inc
pop
hlt
mov
xchg
xchg
or
adc
call
or
inc
add
scas
cmp
scas
jge
push
repnz
lmsw
int3
pop
int3
add
out
and
lcall
push
xchg
push
mov
into
pusha
push
push
call
in
push
mov
call
and
into
inc
mov
mov
imul
jne
adc
add
or
add
pop
xor
adc
pushl
movd
call
fcomps
scas
js
jne
imul
call
sub
js
xlat
jge
xlat
rorb
push
jnp
xchg
test
xchg
sbb
add
jle
push
cmpsl
cltd
mov
outsb
dec
and
inc
inc
in
or
dec
mov
jne
mov
jnp
mov
fwait
cmp
pop
adc
sub
push
inc
dec
mov
fists
ljmp
lret
cmpsl
aad
mov
inc
fcompl
mov
outsb
xchg
mulb
ret
sti
fadds
scas
cmovge
leave
scas
sbb
fldl
scas
mov
cmp
push
fcmovne
xchg
jle
push
imul
mov
jns
cwtl
lods
xorl
testb
mov
lods
jno
repnz
cmp
ljmp
cmp
add
mov
scas
pop
sub
push
popa
mov
lcall
fxch
lret
mov
arpl
cwtl
xchg
aad
mov
aaa
or
pusha
movsl
shl
aaa
decl
mov
and
lret
cld
mov
movsl
and
leave
mov
jbe
outsb
clc
test
dec
cmp
jl
xor
cmp
fldcw
push
outsb
mov
mov
ljmp
and
fistpll
jne
mov
xor
out
mov
fwait
dec
call
xorl
rolb
popa
roll
pop
loopne
or
lods
jmp
ljmp
pop
xor
shl
mov
jb
shll
lret
sbb
jmp
mov
xor
mov
inc
sahf
nop
lcall
paddsw
mov
call
mov
adc
push
add
sar
mov
xchg
icebp
sub
sub
sbb
cmp
cli
adc
mov
push
dec
je
pusha
aas
cmc
outsb
mov
inc
mov
jmp
cli
shl
pop
mov
sub
jmp
out
xor
push
int
push
gs
fiadds
scas
xchg
lods
sbb
in
xchg
cmp
mov
pop
dec
lods
add
icebp
pop
addb
jmp
jno
pop
cmpsl
pop
xchg
adcb
and
into
std
dec
jmp
mov
shrb
xor
xlat
mov
lock
dec
cli
adc
aam
dec
fmull
mov
jecxz
xor
push
xor
adc
dec
mov
test
sti
or
out
mov
loopne
or
add
add
pushl
test
out
mov
bnd
mov
xorl
add
mov
aas
adc
push
jp
incl
int
pop
test
cmp
mulb
or
dec
int
jne
mov
cmpsb
mov
fidivs
ud0
jmp
jbe
and
arpl
cli
gs
aaa
add
mov
fwait
pop
ja
lock
aad
gs
call
in
mov
dec
ret
push
xor
or
scas
sbb
loop
add
incl
jecxz
push
mov
es
aam
scas
cmpsb
popa
pop
fisttpl
add
into
inc
xchg
pushf
cmp
incl
ljmp
pop
mov
pop
scas
add
shrb
pop
and
xor
call
cmp
sbb
call
lods
mov
sbb
lods
fisubl
inc
sub
gs
inc
inc
sbbl
mov
imul
or
inc
int3
arpl
mov
mov
pop
lcall
enter
lcall
jmp
sub
inc
and
popf
xchg
iret
push
not
addl
jmp
jae
push
push
pop
call
ja
adc
aam
or
test
ret
add
jns
jmp
fmuls
adc
pop
repnz
lds
lods
jb
mov
ficompl
or
js
jl
sub
hlt
leave
ficoms
mov
jl
pop
xchg
mov
pushl
xchg
clc
mov
addr16
iret
push
cmpsb
daa
aaa
int3
jmp
mov
lahf
fists
and
call
xor
test
xor
or
dec
imul
mov
incl
insb
add
xchg
xchg
sbb
mov
scas
xchg
inc
incb
out
add
jbe
push
in
sub
cmp
nop
scas
add
aas
push
mov
sbb
push
xchg
jmp
or
add
in
test
sub
jo
inc
cmp
mov
dec
inc
cs
icebp
outsb
dec
push
push
cmp
jne
mov
jg
xlat
push
in
pop
call
cmp
mov
sbb
mov
outsl
sbb
lods
int
orb
add
push
or
push
jmp
xor
test
fwait
mov
negl
pop
lods
cmpsb
jbe
repnz
pushf
push
es
scas
shl
cli
and
mov
in
cmp
fs
invd
aam
into
xchg
pop
cmp
call
or
jmp
cld
mov
lods
lret
mov
pop
int3
jne
out
adc
sbb
sub
js
and
call
scas
enter
jge
testl
scas
pop
pushf
fldcw
mov
mov
xor
call
lds
lea
scas
out
adc
sub
and
scas
cmp
sti
xchg
adc
movsl
call
xor
pop
inc
xchg
add
aaa
xor
inc
pop
or
pop
cld
pop
and
inc
push
xchg
pop
cld
mov
mov
mov
sbb
push
xchg
clc
and
mov
mov
pushl
popa
add
cmpsl
push
call
cmpsb
xor
xchg
and
or
mov
outsl
imul
pushf
leave
test
lret
cs
mov
insb
pop
xorl
mov
add
sbb
clc
mov
cmpsb
jp
aad
adc
mov
pop
fldt
loopne
das
daa
fmul
jge
jmp
xchg
and
fs
lcall
mov
push
loopne
movsb
cmp
cld
pusha
das
mov
fbld
movsl
sti
lcall
and
pop
push
jge
aaa
dec
sarb
and
fnstenv
pop
fwait
and
push
or
jno
mov
aas
test
jno
push
mov
xchg
nop
shrb
cmc
in
adc
decl
xor
pushf
insl
xchg
cltd
mov
in
inc
out
insb
fs
cmp
lahf
add
jbe
inc
aaa
push
sbb
xor
movsb
mov
mov
sti
enter
jb
pop
pop
fsubs
or
fdivr
call
xor
mov
mov
dec
jecxz
lods
mov
add
dec
adc
jb
mov
or
int
aad
jl
rcll
jnp
push
andb
mov
bound
sub
decl
out
mov
repz
mov
das
push
or
dec
adc
loope
das
sbb
call
popa
lret
mov
in
enter
pop
xchg
insb
shll
mov
scas
and
iret
lcall
mov
jl
push
cmp
leave
movsb
cmpsb
add
push
cltd
adc
adc
mov
int
push
inc
in
outsl
inc
adc
mov
mulb
add
sbb
sub
add
cmp
in
data16
call
and
lret
cmp
push
jp
out
adc
out
pop
adc
pop
or
jo
loope
jmp
mov
xor
mov
imul
and
stc
jmp
jnp,pt
in
nop
sbb
cmp
pop
cmp
aas
jp
ret
jge
mov
inc
mov
jnp
push
lds
mov
ret
jl
lock
iret
pop
xor
xor
mov
xor
lcall
dec
jge
dec
fidivrs
shrb
scas
push
int
popf
fwait
cwtl
xchg
mov
mov
adc
call
cmp
mov
or
inc
push
cld
lods
adc
push
sbb
xchg
inc
jo
add
call
and
shl
hlt
sarl
movsb
stos
push
push
xor
clc
outsl
push
mov
lret
inc
sar
pushl
repnz
cs
inc
xor
cmp
mov
adc
sbb
adc
call
cmp
mov
pop
jo
mov
dec
jo
push
int3
sub
call
xchg
jg
clc
decl
sbb
mov
push
pop
jmp
pop
stos
mov
inc
cmpsb
sub
jecxz
imul
incl
pop
xchg
enter
fiaddl
xor
mov
pop
mov
mov
popa
aas
xchg
popa
add
incl
mov
out
daa
adc
fisttpll
repz
dec
lret
test
sub
pop
movsb
adc
nop
inc
decl
data16
xchg
xchg
jno
pop
inc
iret
repnz
std
sbb
dec
dec
lock
icebp
adc
lcall
inc
iret
push
inc
jg
aad
fs
and
sbb
icebp
pop
movsb
hlt
add
incl
mov
pop
inc
outsb
push
jp
add
adc
add
dec
inc
cmp
add
decl
jnp
jecxz
lahf
sub
shrl
push
and
nop
stos
add
mov
ljmp
or
add
je
in
xor
mov
sbb
outsl
inc
aad
mov
ret
pop
push
fdiv
fwait
call
call
cmpsl
enter
jl
push
neg
faddp
cmc
addl
sti
jp
or
mov
cmp
lock
xchg
int3
in
test
cmp
cltd
les
icebp
pop
lcall
ss
scas
stos
pop
pop
fldenv
insl
xorps
stos
fldl
adc
std
adc
incl
test
mov
inc
pop
mov
test
dec
pop
adc
adc
pop
pop
neg
stc
sbb
nop
mov
pushl
pop
mov
cwtl
add
xlat
aam
xchg
into
lahf
lcall
cmp
call
pushl
icebp
mov
aaa
pop
push
fmulp
mov
mov
gs
mov
das
scas
mov
out
test
lcall
ret
jg
mov
cmp
fsts
jmp
lret
out
cmp
sub
push
xor
push
leave
lods
mov
shrb
les
push
loope
add
jge
jns
mul
inc
mov
cmp
lahf
stc
mov
mov
cmpsl
test
sbb
incl
mov
leave
push
jge
testb
js
repz
jmp
aaa
aam
xor
cmp
jb
mov
mov
and
xor
andl
push
mov
jo
xchg
jmp
push
clc
jge
fisubrl
xlat
cmpsl
mov
dec
jne
sbb
mov
mov
add
mov
decl
cmpsl
test
repz
pop
sub
jb
das
repz
sub
mov
sub
adc
call
and
test
jmp
lret
or
adc
mov
or
out
mov
mov
pushf
jns
insl
and
cmpsl
push
push
outsb
add
mov
lcall
or
xchg
push
imul
push
dec
mov
pop
jmp
lock
stos
jp
popa
or
sub
out
pushl
pusha
aaa
in
fucomi
sub
imul
push
push
or
push
xchg
and
push
or
decl
out
sbb
jg
movsl
lcall
outsl
das
jne
xchg
jb
pop
mov
mov
inc
jle
add
in
loope
shlb
pop
cwtl
xchg
jmp
jmp
addb
xorl
sub
lcall
mov
pop
lret
inc
xchg
fimull
stc
popf
mov
int3
mov
or
push
lea
jge
add
dec
jmp
xchg
lds
ja
outsb
rcr
mov
lock
inc
jmp
push
sub
pushl
movsb
popa
js
xchg
push
in
lcall
pop
adc
aad
call
outsl
inc
out
pop
out
sbb
cmpsl
rolb
sbb
mov
dec
ljmp
adc
push
fsubp
cld
sbb
data16
cmp
aad
xor
ret
mov
in
pop
sub
or
movb
xchg
cmp
pop
jae
cmp
add
cmc
loop
dec
jg
cli
pop
call
cmp
int
mov
sbb
bound
decb
jns
cli
fsubr
mov
or
test
push
mov
test
aam
dec
jnp
pushl
cld
push
adcb
cli
cld
mov
cmp
jmp
pop
jmp
and
ret
mov
ljmp
rcrl
xor
int
xchg
inc
mov
fucomp
pop
call
outsb
xchg
lea
mov
xor
dec
pop
and
cld
jmp
mov
jmp
and
scas
dec
pushf
push
shrb
int3
out
arpl
lcall
les
lcall
stos
jno
or
mov
pop
inc
mov
add
xchg
popa
icebp
loop
sahf
call
lock
pushl
addl
mov
inc
testb
pop
sub
xchg
incl
into
mov
adc
add
fsubl
nop
insl
jb
jnp
jle
adc
pushl
test
insb
repnz
and
les
jle
adc
jae
loop
ds
mov
aaa
movsl
loopne
mov
enter
aas
xchg
je
mov
cs
cmp
xchg
call
mov
aad
cmp
cmp
call
push
mov
and
cmp
in
outsb
inc
xor
adc
sbb
add
jmp
aas
jmp
sub
xchg
sub
fnstcw
js
push
inc
imul
pop
jmp
out
add
fbld
gs
in
aam
enter
imul
push
push
sub
mov
daa
inc
inc
dec
out
jmp
sbb
fwait
negl
in
mov
mov
jnp
je
rep
or
ljmp
inc
xlat
inc
cmp
and
mov
outsl
mov
imul
ljmp
or
ja
jge
xor
pop
movsb
jp
roll
and
insl
add
xchg
mov
inc
nop
leave
mov
adc
fscale
push
pop
push
or
aad
sar
or
jg
sbb
cmp
jl
push
add
cmc
mov
jns
jle
outsb
lahf
inc
aas
xchg
pushl
lcall
mov
push
or
loop
dec
shll
mov
rcrb
mov
adc
int3
pusha
scas
popa
daa
jne
dec
cmpsb
sbb
lcall
fimuls
xchg
in
cwtl
mov
mov
or
pop
cmpsb
cmpsl
mov
cmp
hlt
stos
jbe
pop
adc
movsb
stos
dec
inc
xchg
fdivrp
sti
adc
adc
std
cwtl
cs
pop
adc
cmp
cmpsb
int3
cmp
jp
mov
cwtl
shrl
sub
or
mov
lret
cmp
add
add
out
call
jmp
jg
mov
and
test
push
or
pop
dec
pusha
cmp
mov
fiaddl
sub
hlt
popf
call
jg
loope
arpl
sarl
dec
and
push
filds
mov
arpl
push
xor
call
adc
mov
das
add
mov
sub
movsb
je
loope
jmp
mov
shll
aaa
in
pop
daa
int
inc
jb
rolb
stc
inc
xchg
xlat
lods
push
pop
vandnpd
push
mov
or
or
sbb
ret
xor
push
lds
sbb
ljmp
lea
xchg
imul
roll
sbb
nop
pushl
cmp
cmc
loop
or
mov
imul
into
adc
cli
pop
arpl
cmpsl
mov
mov
push
repz
pop
shrl
lcall
xlat
test
ret
sub
xchg
in
or
inc
insl
ret
cs
incl
insl
pop
bound
fstpl
ret
fisubs
fisubrs
scas
sbb
push
les
lcall
cmp
loop
xor
outsl
mov
jg
mov
stos
fnstcw
sahf
xor
scas
xor
inc
aam
leave
xchg
loop
add
lret
ret
icebp
out
pop
and
jmp
jno
imul
ljmp
mov
pop
and
dec
push
mov
decb
mov
pop
and
mov
loope
test
test
shrb
and
dec
jbe
push
and
mov
out
or
sti
and
pop
adc
dec
add
push
pop
sar
add
push
clc
rclb
pushl
push
mov
sub
lret
pop
shrl
int
jae
int
inc
daa
andl
loope
pushl
out
and
and
pop
sub
cmpsl
jnp
inc
test
pushl
add
outsb
dec
xor
jge
mov
pusha
cmp
enter
fistps
out
dec
scas
sub
add
lods
aaa
or
ret
scas
cmpsl
les
adc
add
cmpsb
call
decl
in
inc
into
test
or
push
cmpsl
mov
scas
cmp
and
sti
xlat
and
lcall
jb
and
fcoml
sub
jmp
insl
mov
insl
out
inc
xchg
jge
fisttps
add
xchg
rcll
hlt
loop
push
out
cs
into
js
je
mov
je
push
push
sbb
jno
mov
filds
add
mov
add
dec
test
push
sub
sbb
dec
fs
mov
mov
adc
ljmp
cmp
dec
add
sub
xchg
arpl
mov
pop
lods
insl
cli
mov
mov
cmp
es
pop
pushl
add
ret
fisubrl
add
push
push
lods
push
fistpl
lahf
mov
jne
pushl
sbb
int
lea
fs
xchg
clc
outsb
in
pop
and
orb
cmp
mov
jb
jg
lret
pop
mov
mov
xchg
ja
nop
xor
adc
cmp
outsb
jp
dec
lret
sti
and
and
sbb
push
or
mov
xchg
xor
cmp
inc
fwait
jg
test
or
or
add
lods
mov
inc
ss
cltd
inc
outsl
dec
mov
imul
addr16
aad
mov
push
into
dec
lret
push
lods
pop
in
mov
lcall
rorl
mov
jecxz
iret
out
shr
test
push
subl
jmp
insl
icebp
sbb
mov
shlb
jns
push
insb
xchg
adc
mov
pop
cmp
call
jo
jno
bound
pusha
sbb
add
outsl
mov
cmp
mov
incl
frstor
hlt
dec
or
push
clc
sbb
pop
loopne
imul
dec
lods
pushl
decl
jg
sub
cltd
mov
popa
enter
fldl2e
xlat
stos
dec
push
in
fcmovnu
stc
out
out
pop
incl
push
dec
inc
lods
sbbl
add
insl
fnstsw
decl
sub
repz
jae
push
das
stos
cmpsl
sbb
adc
jge
pushl
or
jg
test
inc
push
shrb
shl
in
fxch
fs
inc
xorb
outsb
imul
call
jge
jae
jbe
pop
push
lcall
gs
jo
sbb
ljmp
or
jo
stos
inc
adc
arpl
mov
cld
ljmp
sub
mov
cmc
jmp
mov
dec
dec
pavgw
nop
ds
out
mov
addr16
dec
inc
push
adc
jp
fistpll
push
les
adc
inc
popl
mov
sahf
xchg
jecxz
fisubl
pop
daa
in
decl
test
shll
pusha
in
or
ds
nop
aas
loop
cmp
sbb
fdivrp
dec
das
in
and
mov
popf
int
adc
push
mov
ds
inc
cmp
rolb
fdivl
jne
cli
daa
mull
fstpl
es
push
sub
call
dec
pop
inc
dec
call
jmp
inc
lods
and
stos
scas
pop
xor
cwtl
adc
lret
mov
call
sbb
decl
jo
adc
sbb
ljmp
inc
data16
nop
lds
scas
faddl
call
dec
xor
mov
pop
cs
jp
cmp
scas
mov
and
pushf
scas
sbb
je
push
sbb
xchg
cmp
or
test
ret
sub
movsb
xchg
hlt
popa
in
outsl
jne
outsl
xchg
push
adc
and
add
dec
mov
cmp
in
push
icebp
push
lea
and
mov
lahf
cmp
xor
dec
stos
push
out
mov
push
push
xchg
call
push
sub
call
ds
cwtl
test
mov
add
insb
lcall
fcomi
or
mov
fs
dec
nop
mov
cmp
add
cli
incl
lock
mov
les
xlat
dec
mov
mov
or
push
and
decl
fcomi
inc
jb,pn
adc
pop
es
mov
repz
sbb
decl
out
cmp
lock
push
lods
xchg
adc
rcll
out
aas
xlat
push
fcoms
sbb
inc
leave
lods
sbb
in
mov
fcoms
movsl
sub
jg
or
xchg
divb
pushl
mov
inc
scas
push
pop
inc
aas
cmp
ficoml
ljmp
call
and
adc
xchg
cwtl
inc
popa
mov
lcall
bnd
ljmp
stos
sbb
call
cmpsb
push
pop
cltd
cltd
lds
and
push
and
enter
icebp
sub
testb
repnz
mov
mov
dec
pop
jne
adc
push
js
sub
out
fldt
dec
divl
pushl
cld
lds
pop
cltd
push
xchg
testl
imul
rclb
lock
mov
fcmovne
mov
aas
adc
mov
inc
cli
xchg
jle
frstor
pop
xchg
xor
fsts
xor
jb
mov
mov
imul
add
out
mov
cmp
xor
jno
call
add
orl
sub
mov
sti
aaa
push
ljmp
rcr
stos
add
rcll
mov
andl
sbb
sahf
xchg
jnp
rcl
pusha
cltd
pop
dec
or
xchg
xchg
fisttpll
shrl
push
and
subl
fdivrl
dec
stos
stos
xchg
lret
mov
sbb
pop
cmp
aas
int3
pop
dec
inc
mov
mov
call
add
cmp
lahf
iret
imul
orb
ds
pop
pop
adc
xchg
decl
leave
notb
mov
ret
inc
pop
pushl
adc
xchg
add
out
pop
inc
dec
push
in
mov
scas
adc
shrl
outsb
fdiv
icebp
mov
mov
mov
decl
jle
mov
int
push
adc
jmp
jbe
pop
ja
fstps
pop
mov
xor
pop
mov
pop
inc
out
xor
pusha
in
clc
icebp
daa
mov
jl
out
insl
inc
ljmp
jmp
std
xchg
out
repz
das
lcall
jnp
cltd
cmp
scas
imul
ljmp
mov
push
cmc
dec
repnz
sub
sub
lods
sti
cmp
sub
xor
call
mov
sti
imul
pushf
das
es
cmp
jnp
mov
and
cli
xchg
adcb
push
inc
jle
jmp
lods
push
stc
sub
cmp
jg
xor
hlt
outsb
xchg
nop
adcb
jo
dec
incl
sbb
pop
test
popa
test
xchg
sbbb
xor
lahf
mov
flds
int
cmp
jmp
loop
enter
sldt
pop
icebp
insl
xchg
into
imul
and
add
jmp
pushl
xchg
dec
adc
popl
jb
inc
push
xchg
addr16
je
push
jp
or
lcall
mov
xchg
loop
fistps
pop
inc
push
ljmp
mov
cmp
mov
ljmp
aaa
inc
inc
push
ljmp
lcall
mov
sbb
xor
hlt
lret
faddl
cmp
mov
push
sbb
cmp
inc
and
jns
pop
xor
dec
incl
push
pop
hlt
pop
push
pop
int
lods
js
fistl
sti
pop
sub
dec
or
xlat
shrb
incl
cs
mov
pop
mov
jb
mov
add
xacquire
subb
mov
mov
js
pop
cmp
mov
int3
jnp
fs
push
and
lcall
add
andb
dec
xchg
fcoml
out
std
ja
xor
mov
incl
insl
leave
inc
add
mov
xchg
imul
std
and
roll
out
xor
and
dec
sub
inc
loop
scas
fdivl
lahf
push
mov
call
jae
js
lret
cmp
adc
cltd
aad
lods
push
xor
ss
aam
or
arpl
or
jle
shlb
insl
cli
xchg
sub
pushl
xchg
push
inc
xlat
and
inc
sub
inc
aam
sbb
iret
ss
shrl
mov
decl
ret
addb
fsubrs
enter
pop
push
push
clc
popaw
stos
and
fisubl
jmp
fcompl
cmp
iret
inc
adc
outsb
int
or
dec
ret
pop
push
imul
sbb
cmp
adc
ss
lock
or
cmp
pushl
dec
add
movsl
imul
xor
int
enter
push
sbb
mov
ljmp
ret
addr16
sbb
xchg
test
pop
cld
leave
ljmp
into
jne
or
push
cmp
cltd
cmpsb
xchg
dec
dec
mov
add
arpl
addr16
bound
cli
je
xchg
ljmp
in
mov
dec
test
movsl
inc
pusha
push
pop
iret
add
ret
daa
add
push
inc
imul
jmp
cmpsb
and
arpl
and
fs
push
repnz
int
lods
addb
pushl
adc
fwait
pop
es
adc
fidivrs
xchg
mov
mov
cmp
xor
loope
inc
stos
xchg
int3
cmp
sub
push
xor
jae
or
ljmp
mov
pop
sub
and
dec
push
xor
cld
sar
jmp
repnz
push
jmp
movsl
roll
cmp
add
icebp
cld
push
orl
call
push
push
mov
shr
push
mov
aaa
and
push
xor
hlt
ljmp
lahf
push
mov
xorb
adc
pop
mov
insl
fidivrs
loop
int
aas
cmp
std
test
inc
push
jae
aas
shlb
lahf
fldt
inc
adc
mov
fwait
xchg
push
incl
or
subb
lahf
loopne
jb
outsl
pushf
jnp
in
arpl
test
in
incl
dec
xchg
sub
loopne
mov
int3
xchg
stc
cwtl
adc
inc
decb
mov
mov
ficoms
fs
cmp
inc
xor
fildll
mov
fimuls
jmp
mov
ja
inc
jne
das
jl
push
imul
xchg
mov
out
cmp
push
xor
fdivl
add
movl
in
int3
cmp
mov
jae
scas
negl
call
xor
imul
jg
js
xchg
pop
int
test
inc
test
jecxz
lock
rcrb
sub
mov
jp
add
xor
sarl
sub
jmp
jl
outsb
inc
xor
sub
fisubs
mov
or
mov
repnz
call
push
mov
jne
mov
mov
push
aam
xor
push
shlb
into
cli
aam
lahf
clc
xchg
imul
imul
lret
loope
sbb
jb
adc
stos
js
push
incl
push
xchg
ss
sub
mov
test
xor
push
fwait
pop
add
sub
jmp
sbb
and
inc
das
lret
cmp
and
and
lods
pop
add
scas
pop
ds
mov
cli
out
add
rclb
mov
add
in
ja
xor
inc
lret
pop
or
leave
into
sub
decl
aaa
mov
xchg
sahf
sbb
add
xchg
sbb
jns
dec
lods
and
push
inc
hlt
ja
mov
jmp
inc
xchg
sbb
xchg
fs
adc
mov
das
repnz
sub
ljmp
shl
daa
imull
jae
pop
cltd
cwtl
push
in
adc
xlat
jmp
call
xor
xchg
lods
pusha
xchg
sub
add
adc
test
lcall
mov
mov
insb
mov
ret
push
ret
jnp
repz
stos
xchg
xchg
xchg
sbb
test
pop
dec
incl
repnz
cmp
xlat
and
push
add
ja
xchg
push
pop
ja
mov
lcall
cmp
inc
das
cmp
rcrb
xchg
xchg
dec
popf
iret
out
or
mov
ljmp
imul
pop
mov
mov
xor
mov
cmc
sbb
mov
lods
incl
mov
ljmp
fnsave
sarb
popf
leavew
scas
add
jmp
js
stos
mov
outsl
cli
push
jnp
adc
and
pop
push
mov
sti
pop
jmp
push
cmpsl
push
mov
pop
or
pusha
dec
cs
mov
pop
push
repz
es
inc
call
fcompl
pusha
cmp
pop
jne
loopne
push
rcr
addr16
xor
sub
ljmp
add
fdivs
push
xor
out
jne
das
sahf
sub
je
cmpsb
pop
repnz
push
xchg
or
cmc
cli
and
push
in
aaa
sahf
xchg
sbb
ret
popa
lcall
bound
movsl
lock
xor
decl
pop
loop
movsb
dec
mov
enter
or
pop
cli
mov
int
test
jmp
xchg
lcall
cmpsl
push
rorl
mov
std
aaa
pop
pop
fsts
sbb
call
mov
xor
lds
movsl
call
jmp
in
inc
push
cli
int
cmp
push
scas
fidivrl
decb
out
daa
mov
mov
out
jecxz
jmp
jae
inc
dec
movsb
call
movsl
push
in
popa
test
or
jns
hlt
cmp
call
dec
clc
repnz
jmp
rcrl
and
shll
out
sbb
add
lcall
imul
mulb
sbb
data16
push
and
jae
popf
push
cmp
jge
sbb
rolb
aas
pop
rcrl
push
imul
add
rcll
mov
mov
scas
mov
jbe
xchg
mov
nop
cmp
add
push
fisttps
call
lods
cmp
lret
scas
sub
adc
shl
out
jp
ret
add
mov
inc
xlat
lds
add
ja
stc
adc
mov
jno,pn
xor
stos
loop
clc
fwait
sbb
decb
adc
aad
nop
ret
in
push
mov
test
in
xor
clc
cmpsb
popf
sbb
jecxz
test
pop
loop
push
push
mov
sti
mov
notl
dec
aaa
mov
nop
sbbb
sub
testl
adc
push
daa
loop
jmp
mov
movsb
mov
xchg
arpl
in
in
inc
fwait
repnz
fs
clc
inc
cmp
fistpl
jecxz
sbb
jle
xchg
mov
mov
hlt
mov
jle
out
or
sbb
idiv
fdivs
push
ja
sbb
loopne
jecxz
mov
ljmp
das
aas
popf
add
xor
cld
movb
and
cmp
scas
insb
mov
sti
hlt
int
mov
mov
shll
pop
mov
xchg
cmp
iret
inc
mov
loop
or
cmpl
mov
sbb
inc
cmp
inc
push
sub
aaa
lret
push
mov
insb
xchg
sti
or
pop
fmulp
mov
decl
loope
adc
xor
dec
and
cmp
lret
and
mov
dec
sbbb
inc
lcall
pop
jo
scas
enter
xor
sbb
xchg
iret
dec
imul
roll
nop
test
repnz
ljmp
outsl
in
popa
jne
lea
inc
inc
je
pop
mov
add
sarl
frstor
mulb
and
dec
ficomps
popf
in
ja
inc
and
xor
dec
call
hlt
fbld
decl
daa
les
popf
aas
in
mov
cmp
cmpsb
xchg
adc
inc
neg
sub
sub
sub
push
call
or
in
mov
add
ret
xor
mov
int
xor
repnz
out
xchg
incl
pop
popl
cmc
inc
lret
dec
fiaddl
mov
cltd
fildll
call
lock
scas
repnz
inc
aas
push
xchg
xor
mov
adc
aad
xlat
sub
lcall
xchg
push
add
lcall
fmull
adc
iret
out
pop
ret
incl
sub
imul
outsl
cmpsb
jmp
xchg
fiaddl
xchg
mov
ljmp
decl
mov
sub
inc
adc
dec
and
cmp
jecxz
push
dec
xlat
sub
or
jmp
fstpt
sti
dec
outsl
mov
lods
or
sarl
pop
xor
test
loop
hlt
test
lock
js
sbb
cmpsb
inc
add
sarb
jle
add
jne
pushl
fisttpl
rolb
cli
mov
fcomps
bound
or
jle
and
repz
loope
jmp
into
add
xor
rolb
das
xchg
xor
out
adc
inc
fldt
movsb
mov
jmp
aas
aad
push
lods
push
xchg
or
and
unpcklps
imul
pop
lea
mov
adc
aam
pop
insl
fstpl
or
or
mov
pop
jmp
ffree
stos
pusha
cmp
push
pop
xchg
in
fiadds
jo
push
fidivl
ljmp
jmp
dec
cld
cmpsb
in
add
cvtdq2ps
ss
in
sub
jp
repz
mov
adc
jl
mov
jge
and
or
cmp
xchg
fmul
and
js
pusha
sbb
sbb
xchg
rcl
lret
pop
mov
stc
jne
xor
ss
pop
fsubr
ja
jle
fs
ljmp
dec
mov
bnd
jmp
push
cmp
mov
xchg
pusha
lds
add
sbbl
lods
or
inc
gs
cld
call
xchg
xchg
popf
mov
in
adc
pop
adc
je
xchg
push
pop
je
loope
mov
decl
ret
xchg
mov
outsb
insl
sbb
dec
and
mov
daa
push
cmp
inc
push
pusha
jno
jp
arpl
lcall
sub
pop
xchg
mov
dec
out
adc
jno
and
xor
sbb
mov
dec
and
push
push
and
ss
into
add
dec
sbb
fs
popf
cmpsl
aaa
ljmp
iret
hlt
jmp
xchg
addps
stos
inc
fidivs
ss
push
sbb
sub
or
rorl
dec
icebp
lcall
in
shl
repz
ds
pop
jbe
cmp
pushl
leave
add
mov
cmp
push
push
adc
pop
adc
es
fcompl
cmc
insl
pop
scas
xchg
sti
iret
es
xor
jg
es
aaa
push
sbb
int3
clc
sbb
fisttpl
arpl
sub
dec
lea
push
clc
inc
js
inc
loop
mov
popa
dec
mov
xchg
lret
inc
xchg
jle
pushf
fcmovb
pop
sub
and
cmpb
push
and
push
sbb
cwtl
add
call
xchg
pop
nop
or
mov
inc
movsb
nop
loopne
sti
jbe
test
sarb
popf
jmp
sbb
and
sti
fsubrs
ss
in
cmpb
mov
add
shlb
incl
sub
outsl
rclw
outsb
and
adc
dec
jnp
or
xchg
data16
imul
ss
mov
fiadds
das
dec
cmp
inc
adc
stos
fisubl
mov
push
outsl
pop
in
and
dec
cltd
fmull
stc
xorb
xlat
aam
push
jne
mov
adc
adc
in
pushl
mov
jmp
add
adc
fdivrl
xor
mov
mov
call
add
imul
dec
sbb
xlat
lods
iret
mov
sbb
mov
pushl
out
cmp
mov
xchg
adc
inc
mov
jbe
mov
ljmp
lcall
mov
cmp
sub
push
jo
mov
push
sarb
xor
mov
jmp
movsb
fldcw
inc
cs
cmp
inc
mov
xchg
popf
sbb
cwtl
dec
test
xchg
sbb
jmp
ljmp
inc
pop
sub
cltd
add
mov
jmp
lcall
leave
andl
pushl
pop
popf
inc
and
cmpsb
lret
int
inc
pop
adc
das
or
fidivrs
or
jmp
inc
orl
cmpsb
aam
push
rcrb
jl
or
sahf
out
xchg
xor
pushl
lret
jecxz
xor
out
mov
jae
jge
bound
xlat
int
adc
ffree
popf
adcl
dec
xchg
push
mov
cmp
in
iret
nop
dec
pop
push
pop
or
into
add
mov
sbb
mov
ljmp
ss
add
mov
inc
pop
and
popa
inc
or
sbb
mull
dec
mov
and
xchg
lret
fs
mov
popa
js
insl
pop
outsb
lods
jg
xor
pushl
lret
mov
xor
mov
in
ja
mov
outsb
jg
int
add
icebp
pushl
xchg
mov
adc
sub
or
or
aad
mov
jmp
imull
pop
insb
movsl
mov
inc
fwait
sbb
jnp
add
jbe
adc
iret
jmp
ret
jge
cmpsl
out
push
pop
insl
jo
push
scas
enter
int
rorl
ror
dec
inc
jne
xor
jmp
ret
mov
enter
add
out
fdivp
and
xchg
shl
xor
xchg
incl
push
nop
jmp
sbb
hlt
cmp
push
dec
sbb
mov
popf
xor
ljmp
push
pop
outsl
out
and
jecxz
pop
inc
sub
jb
or
xor
cmp
pop
cld
lcall
movsb
jb
ja
jle
pop
adc
mov
sub
les
mov
mov
adc
push
decl
adc
out
leave
ds
imull
inc
xor
or
xor
rcll
sahf
cs
jmp
pop
sub
jo
push
sbb
lods
dec
xchg
aas
cli
aaa
imul
cmp
sub
jge
popa
sbb
lahf
bound
jmp
sub
inc
loop
jae
jae
lret
std
call
nop
jnp
les
inc
xchg
cs
decl
das
jg
or
jp
pop
out
aas
pop
mov
sti
dec
xchg
dec
outsb
mov
inc
icebp
decl
out
push
leave
sub
xor
push
std
pop
cli
mov
mov
rcr
mov
inc
pushf
sub
out
lods
adc
fildll
xor
and
cmp
sbb
fwait
fs
add
dec
out
inc
ljmp
jno
push
popf
xor
cmp
or
aaa
add
push
incl
mov
out
fs
adc
sub
adc
push
enter
in
std
fcmovne
out
xor
in
adc
cli
gs
or
imul
icebp
add
dec
ljmp
repz
clc
mov
in
xchg
mov
gs
jmp
adc
cwtl
movsb
sarb
fwait
push
adc
dec
mov
stos
cli
mov
mov
mov
icebp
jmp
and
cmp
inc
sub
testb
icebp
mov
push
cmp
ret
decl
sti
mov
test
sbb
shll
sahf
ljmp
cwtl
pop
incl
xchg
stos
stc
iret
outsb
mov
sub
xchg
ficompl
iret
gs
or
cs
xor
in
decl
mov
js
stos
push
pop
pop
or
xchg
adc
jp
cmpsb
inc
jle
cwtl
add
lds
push
jmp
ljmp
add
mov
lds
jae
pop
xchg
imul
lcall
mov
jne
pushl
mov
adc
outsb
mov
call
repnz
bound
data16
fmuls
daa
ss
sub
or
cmp
gs
pop
dec
xchg
addr16
xchg
cs
int
call
pop
cs
pop
ja
das
std
lea
dec
push
lods
int
das
daa
push
in
cmp
fisttps
rol
sti
mov
pushl
sbb
sbb
xor
jnp
call
imul
lcall
jg
inc
pushf
mov
and
sahf
outsl
les
sbb
mov
mov
and
in
loope
fiaddl
xchg
adc
loopne
ds
lret
scas
inc
mov
adc
es
call
outsb
cmp
movsl
and
or
icebp
push
add
cmpsb
cmp
xor
cmp
ljmp
pop
xorb
pushl
jno
insl
lret
pusha
mov
adc
and
mov
movsb
out
mov
ljmp
scas
sarl
jbe
xor
xor
fnstcw
or
cltd
mov
inc
cmp
pushl
out
cmp
mov
movzwl
icebp
mov
or
adc
pop
cld
aam
mov
lcall
pop
das
aam
mov
in
scas
sar
adc
add
ljmp
mov
les
fs
gs
aaa
loop
mov
pop
mov
xchg
dec
jmp
test
xchg
mov
stc
insb
jbe
fnstsw
out
gs
jle
add
js
jo
fs
lods
jmp
popa
lret
xlat
and
sub
dec
cmp
dec
dec
sbb
dec
les
iret
push
jno
push
lock
imul
leave
sub
test
scas
cmpsl
dec
mov
inc
fcmove
scas
cwtl
sbb
xchg
addr16
or
lcall
icebp
jbe
mov
or
xchg
int3
out
jne
lcallw
xchg
mov
ss
dec
mov
jmp
sbb
mov
mov
mov
pushf
outsb
stos
popa
cmpsb
lret
bound
jmp
call
pop
push
fldcw
lds
and
push
mov
or
mov
call
aam
hlt
cmc
inc
arpl
xchg
shll
push
mov
incl
testb
mov
jnp
js
add
xchg
cmc
jae
dec
mov
incl
in
add
pop
std
popf
leave
aaa
mov
rcrb
mov
test
test
push
clc
lahf
sar
cmp
cmp
data16
negl
ljmp
in
adc
jmp
rorb
mov
dec
or
scas
or
xor
popa
mov
movsl
sbb
pop
push
xchg
fdivr
jmp
mov
cmp
pop
test
js
or
imul
jno
jne
repz
mov
rcl
popa
push
je
ljmp
or
test
filds
mov
xor
jecxz
or
in
ljmp
inc
lods
mov
arpl
xor
stos
mov
mov
sbb
sti
daa
rolb
add
or
outsl
add
call
push
rorl
fsubs
pop
cmpsl
sub
mov
loop
sub
mov
push
adc
mov
js
sub
adc
and
cmp
sub
pop
xlat
mov
fadds
push
lcall
mov
inc
call
jl
outsl
pop
sub
ljmp
test
inc
and
testb
repz
cmp
sar
pushl
dec
pop
dec
repz
repz
lods
adc
mov
adc
pushf
adc
jmp
fs
dec
sbb
jo
mov
xchg
cmp
aas
jmp
mov
pop
xchg
add
incl
sbb
int
aaa
push
lods
sbb
scas
decb
xchg
xchg
mov
mov
xor
imul
mov
rcrl
push
cmpsb
mov
cmp
lcall
notb
fldcw
inc
shll
or
sbb
push
jp
dec
je
call
jmp
jbe
sbb
int
and
jb
popa
aaa
mov
int3
cmp
push
jmp
sub
add
mov
pop
mov
xchg
dec
dec
jno
add
mov
cmp
dec
sti
xchg
sbb
pop
inc
inc
sbb
pop
out
cmp
divb
xor
and
add
inc
decl
int
stos
inc
sub
xchg
xor
or
fisubs
xlat
push
sub
or
aam
pop
shrb
ljmp
xchg
daa
push
lea
jb
int
and
sbb
add
js
xor
pop
push
cmpsb
test
jno
push
push
lods
dec
jns
dec
xchg
lret
lahf
adc
jns
hlt
sbb
and
dec
pop
arpl
fiaddl
sbb
mov
jecxz
jb
sub
xchg
mov
outsb
dec
push
mov
ljmp
std
cmp
dec
fldt
push
inc
fstpt
cmpsl
sbb
fmulp
mov
xchg
fisttpl
pop
test
incl
fldt
xor
icebp
and
inc
in
push
mov
adc
pop
std
mov
fwait
sub
pushl
aaa
rclb
inc
cld
cmc
dec
inc
subb
les
xor
lcall
cmpsl
sbb
into
and
dec
jmp
adc
inc
inc
cwtl
inc
and
cs
mov
aaa
cltd
pushl
xor
xor
out
xchg
mov
add
sub
movsb
xchg
ljmp
inc
fisttpll
in
dec
dec
xor
jae
cli
adc
in
inc
aas
dec
mov
add
aas
fisubrs
xor
in
fs
call
xor
in
jge
jno
add
js
jmp
lret
inc
fwait
mov
cmpsb
cwtl
shl
dec
outsb
loope
pop
mov
notb
pushl
scas
pop
xchg
push
gs
stc
lahf
push
add
cmp
iret
jl
fwait
jno
ljmp
cmp
xchg
pop
inc
mov
jmp
in
mov
add
clc
pop
lcall
lahf
lods
lret
fisubs
iret
fsts
popa
das
je
lods
pop
jecxz
call
dec
cmp
dec
pop
out
jns
fdivrs
inc
repz
orb
xlat
sarb
add
cld
fwait
sub
mov
outsb
xchg
cli
adc
test
inc
sbbl
and
jmp
nop
lods
cmpsb
push
cmpb
nop
add
int
stc
cmovg
scas
stc
add
jmp
cld
in
cmp
adc
pop
cmpsl
or
or
jge
js
pushf
imul
out
loop
xor
lea
lcall
xor
in
inc
dec
pop
lods
jl
pushl
and
shlb
xor
ds
je
jmp
adc
gs
enter
cmp
xor
add
scas
push
out
push
add
incl
fdivrs
jmp
add
sub
daa
sub
adc
xor
jo
daa
loopne
sub
jmp
fidivrl
lods
fwait
mov
lea
mov
adc
fisubrl
test
dec
fistpll
out
mov
incl
adc
pop
xor
mov
bound
sub
outsl
popf
hlt
incl
dec
dec
xchg
or
stos
adc
push
iret
sub
test
xor
decl
add
outsb
rcl
movups
aam
push
call
dec
push
repz
ljmp
add
mov
dec
lret
jge
aaa
add
mov
dec
sahf
out
les
into
lcall
mov
cmp
and
jbe
int3
push
aas
in
sbb
call
or
inc
pushf
leave
cmp
mov
and
ljmp
push
dec
icebp
fstpl
jge
dec
adc
add
xchg
mov
push
dec
testb
mov
jmp
xchg
jp
jno
jmp
movsb
xchg
cmp
push
rcl
fwait
xchg
iret
add
enter
incl
cmpsl
mov
sub
jl
and
popl
mov
stc
enter
ljmp
test
jmp
in
dec
repz
adc
and
lock
mov
xchg
sub
cmp
cwtl
dec
popa
in
xchg
insb
pop
scas
cld
inc
mov
fistl
jmp
aas
test
call
ss
mov
cmp
in
cmp
xor
fwait
decl
imul
fdivl
mov
cmp
or
mov
pop
pushf
push
decl
outsb
mov
sub
and
leave
enter
iret
in
ds
mov
icebp
sub
jmp
add
dec
rorb
in
push
xchg
lret
movsl
idiv
aam
stos
lret
fstp
push
je
lods
es
mov
or
inc
xor
dec
mov
cvtpi2ps
cld
or
dec
adc
cmp
jmp
pop
jmp
push
pop
sub
mov
aad
imul
shl
stos
sbb
mov
cmpsl
xchg
sbbl
dec
cmp
mov
aaa
shll
pop
dec
inc
add
call
pop
mov
dec
jle
je
pop
dec
push
daa
jo
inc
inc
mov
adc
sub
and
or
xor
jo
pop
add
imul
stos
ret
sub
push
xor
decl
mov
sub
cmp
push
add
push
aad
cmp
stos
movsl
js
fnsave
jmp
outsl
mov
push
leave
adc
sub
cmp
fs
cmp
incl
les
push
iret
jmp
adc
jecxz
scas
cmpsl
xchg
out
outsb
jp
ljmp
dec
add
outsb
jmp
push
push
xlat
pop
inc
push
decl
std
nop
pop
push
ljmp
inc
in
outsb
cltd
push
jle
les
dec
test
stos
fcoml
add
jle
mov
out
add
push
add
mov
or
adc
xchg
pop
push
mov
dec
pusha
add
js
lcall
and
cwtl
repnz
sbb
or
cmc
jmp
sub
jmp
hlt
stos
sub
call
mov
scas
clc
mov
adc
sbb
mov
add
incl
dec
pop
add
fidivrl
push
cltd
mov
mov
jecxz
mov
int
scas
mov
dec
jbe
lea
sbb
or
icebp
pop
int
dec
mov
fcompl
mov
ljmpw
pushf
imul
scas
xorl
or
mov
stos
ljmp
inc
iret
insb
jne
xor
mov
int
pop
movsl
das
in
xchg
pop
lods
movsb
popa
test
subl
cmc
das
fwait
dec
aas
imul
pop
in
inc
in
dec
in
mov
push
add
cmp
xchg
sahf
int3
sbb
call
mov
sub
bound
mov
bound
cmp
nop
clc
sahf
pop
loope
mov
jne
adc
inc
pushf
es
cmp
jl
cmp
movsl
pop
sub
mov
ljmp
insl
mov
insl
lret
jbe
fistps
fsubr
add
push
jbe
fs
sar
jl
xchg
jbe
aaa
movsl
or
jp
loopne
lret
or
loopne
out
push
rol
fcomip
adc
stos
adc
out
adc
dec
cmp
ljmp
sti
pushf
scas
cwtl
paddsb
sub
idivl
adc
pop
add
sub
incl
mov
mov
addr16
ficoms
jo
into
lock
pop
mov
ret
lcall
push
dec
loope
cmc
sbb
test
imul
pop
or
call
iret
mov
xor
mov
loop
dec
xchg
xor
or
nop
mov
outsl
jmp
cmp
ret
pop
xor
xor
or
shrb
jo
jbe
inc
into
cmp
call
inc
push
out
jae
mov
jne
xor
jne
sti
mov
jnp
sub
sbb
push
pop
call
adc
popf
jne
jae
popf
adc
and
repnz
pop
inc
aaa
jle
xor
icebp
ds
xchg
lock
incl
or
pop
scas
in
inc
sbb
sbb
sub
mov
loopw
mov
jmp
pop
mov
cmp
or
add
test
test
dec
mov
movups
sub
mov
push
sbb
add
sbb
imul
jg
call
adc
fisttpll
mov
inc
inc
lret
pop
fnstcw
adc
xchg
andl
mov
xchg
jmp
or
je
push
jno
mov
sbb
cli
sub
cmpsb
loopne
jmp
dec
pop
xor
call
lahf
adc
xor
cmpsb
inc
ss
push
nop
lods
call
jmp
out
fcoml
adc
outsb
in
adc
cmc
lds
dec
into
addl
clc
adc
jmp
test
cmp
pushf
in
hlt
and
jns
inc
ljmp
lcall
cmc
insl
mov
ljmp
or
mov
les
sahf
in
rcrb
fldt
incl
xchg
dec
sbb
rcr
andb
insl
jns
and
sbb
decl
mov
push
loope
loope
daa
sub
fstps
xlat
sarl
decl
xor
jnp
xchg
pop
in
daa
fistps
push
js
gs
cmc
xor
mov
ljmp
mov
sti
andl
rol
pushf
fsts
test
mov
mov
stc
jmp
cmp
adc
imul
mov
lock
jge
imul
jge
test
clc
mov
vphaddubw
adc
stos
pop
aas
les
push
add
xchg
decl
inc
repnz
aad
and
out
bound
int
fwait
mov
jmp
into
iret
dec
out
push
cmpsl
xchg
ljmp
xchg
out
rolb
xor
les
aaa
mov
sbb
jb
js
and
fcmovne
inc
stos
inc
daa
xchg
inc
hlt
dec
cli
mov
cmpsl
repz
popa
xor
lcall
sbb
dec
add
mov
cltd
stos
fnsave
or
pushl
add
in
pop
xchg
ja
mov
sbb
cmp
dec
mov
jmp
sbb
std
fdivrs
ret
lods
and
xlat
loopne
lock
lock
push
pop
and
incl
mov
xchg
addr16
pop
imull
lret
jmp
and
push
int3
xor
aam
out
or
cmpsb
push
mov
cmp
loope
push
out
sub
pop
fisttpll
imul
adc
cmpsb
sbb
incl
cli
push
adc
and
mov
js
push
sub
lods
mov
data16
cwtl
sarl
ljmp
xlat
popa
je
std
cld
sbb
mov
lods
fcomps
mov
add
mov
and
lea
or
xchg
test
add
fisttpl
pop
ds
lods
dec
cmp
incl
and
cs
or
mov
int3
cmp
pop
fidivrs
cmpsb
int3
mov
mov
ljmp
or
xchg
and
lods
jbe
daa
pop
push
sbb
jno
cli
xchg
mov
pushl
or
sub
fsubp
mov
pop
push
pop
daa
out
popa
out
fdivrl
pushf
pop
adc
dec
pop
call
in
lds
mov
pop
ljmp
lea
aad
imul
mov
pop
clc
popa
scas
dec
pop
inc
ret
in
xor
sub
push
mov
inc
and
jnp
pop
xchg
adc
ljmp
dec
inc
add
cmp
test
les
jl
cmp
sbb
cltd
xchg
loope
mov
call
jae
test
pop
sti
sbb
ficomps
adc
or
or
rcll
sti
xlat
std
or
pop
push
cmpsl
pushl
xchg
cwtl
mov
call
lea
xor
and
mov
cld
insb
push
imul
xchg
imul
addl
call
incl
mov
xchg
lahf
iret
aaa
sub
add
cs
movsb
pop
mov
sbbl
mov
adcl
cmp
dec
and
ficompl
mov
gs
jno
pushf
fstl
xor
ljmp
push
scas
inc
testb
sub
mov
jge
out
xchg
add
xor
cmp
mov
clc
rcrl
es
iret
jp
movsb
dec
gs
int
fs
insl
inc
or
ud0
fmull
daa
xchg
pop
arpl
sbb
xor
adc
hlt
movsb
or
jmp
mov
jmp
in
jae
sub
into
mov
mov
ret
xchg
cmp
dec
decl
xlat
mov
das
and
jp
and
scas
ficoms
orl
pushl
sbb
imul
clc
das
mov
fstl
add
push
xchg
pop
mov
leave
ljmp
frstor
sub
rorl
mov
sbb
mov
cmc
jge
jns
imul
lcall
jl
leave
mov
xchg
loop
cmpsb
or
outsl
aaa
imul
jecxz
push
push
sbb
pushl
xchg
outsb
daa
into
cltd
roll
call
push
lret
sahf
stos
sub
mov
dec
xchg
cmpl
xor
jbe
xchg
testl
add
ja
sti
incl
lea
xchg
pop
ja
mov
push
imul
jecxz
xor
adcb
jge
jno
loop
int3
ds
sbb
jmp
movsb
jnp
shll
pop
add
sub
add
call
stos
inc
mov
jmp
lret
pop
insl
fiaddl
xor
ds
jmp
movsl
leave
adc
mov
icebp
pop
inc
inc
pop
cmp
loopne
pop
mov
stos
pop
shlb
ljmp
loopne
sbb
push
add
pop
xor
out
adc
and
lcall
jns
shlb
xchg
addr16
dec
hlt
iret
pop
xchg
sahf
mov
or
in
outsb
xchg
sbb
ljmp
rorl
lret
or
mov
inc
shlb
cmp
xor
clc
rcr
in
ds
dec
pop
test
and
cmp
jno
inc
mov
sub
push
jne
incl
dec
and
mov
nop
ret
mov
es
lret
adc
lcall
pop
push
movsb
lcall
sub
iret
dec
or
xor
sbb
jb
call
and
out
js
mov
fmull
iret
mov
xor
or
lcall
dec
mov
pushf
and
mov
dec
mov
sbb
mov
lret
mov
ret
decl
or
and
add
push
jo
mov
add
decl
mov
or
pop
popf
in
xor
popa
ret
dec
add
xor
enter
mov
lcall
aas
mov
repnz
xor
pop
lods
jne
adc
out
mov
call
fmul
fimull
ljmp
lock
cmovno
pop
mov
jmp
mov
or
sbb
addr16
sub
mov
cmp
call
negl
jle
ss
pop
xor
lock
jae
shlb
in
sbb
pusha
aaa
add
pop
push
dec
inc
fisubl
pushl
sbb
xchg
sub
cmpl
lods
sub
adc
push
mov
jmp
mov
mov
pushf
in
outsl
fucomi
adc
insl
popa
ret
leave
bound
push
mov
clc
sbb
lea
xor
inc
clc
sbb
mov
call
hlt
call
push
cmp
push
popa
push
or
imul
jno
ljmp
out
repnz
loop
iret
lods
adc
adc
int3
cmpsb
add
xchg
ret
xchg
ljmp
mov
push
in
xlat
mov
jmp
xor
imul
ljmp
dec
je
mov
test
dec
cmp
inc
into
cli
out
dec
mov
mov
cmp
ljmp
and
out
mov
les
dec
clc
imul
xchg
sarl
call
cmp
adc
faddl
mov
in
stos
aad
fistpll
push
lahf
pushl
cmp
mov
dec
mov
dec
cld
sub
addr16
jge
mov
clc
fdivrl
jg
pushf
push
jmp
jae
in
dec
sub
cmp
int
or
lahf
add
and
pushl
add
flds
xchg
icebp
scas
pop
inc
inc
sahf
data16
enter
addr16
decl
out
aad
adc
xor
lock
sbb
mov
push
cmp
call
test
rcll
lods
cmp
loop
pop
xchg
movsb
and
jecxz
xlat
add
and
jg
inc
jmp
insb
xchg
mov
mov
into
movsl
mov
cmp
fninit
mov
pushl
stc
lock
rclb
repnz
ljmp
jmp
push
fcmovne
dec
push
mov
sub
push
sub
mov
loop
ret
and
leave
dec
mov
dec
and
ljmp
je
dec
mov
mov
fisubrs
rcll
xchg
or
mov
scas
dec
into
ds
sub
lcall
popa
or
lock
out
cltd
arpl
fisttpll
int3
sbb
cwtl
lds
and
mov
test
jo
call
subb
scas
lcall
mov
jno
cmpb
or
ljmp
push
fwait
sbb
lret
loopne
pop
scas
cs
leave
dec
dec
inc
loop
sub
into
xchg
call
mov
sar
fcmovu
pop
iret
dec
xor
ja
in
cmp
sub
adc
fdivr
call
pushf
inc
or
test
lret
icebp
jle
testb
mov
xor
push
add
dec
test
sbb
push
jmp
enter
mov
pushf
les
fsts
ljmp
mov
mov
in
scas
push
mov
inc
ret
subb
inc
aaa
sbb
mov
shll
cmp
fucomi
sbb
push
inc
cmc
hlt
xlat
stos
orb
in
in
push
lret
popl
and
shrb
jecxz
push
add
popf
mov
test
in
out
inc
xor
in
inc
stc
lcall
mov
pop
adc
gs
scas
scas
and
mov
test
mov
or
mov
cmp
test
mov
xor
std
jne
call
mov
shl
and
cmp
shlb
pushf
xchg
cltd
or
icebp
mov
xor
jmp
pop
nop
xor
call
ja
adc
pop
lods
rorb
mov
insl
lcall
xchg
jl
out
rorl
dec
pop
loopne
ret
push
fisttps
repz
es
test
cmp
mov
add
push
xchg
test
pop
cmp
int
add
lahf
imul
mov
es
mov
add
jecxz
jmp
cld
sub
cmp
decl
mov
xor
orb
nop
push
mov
fadd
loope
sub
dec
lcall
push
push
scas
fldenv
xchg
int
jno
jns
mov
mov
push
mov
lock
not
mov
inc
scas
stos
les
add
call
xor
jp
mov
jne
push
pop
imul
push
test
movb
call
xlat
int
mov
imul
push
jmp
mov
push
mov
cwtl
add
arpl
inc
loopne
adc
ret
sbbb
mov
aad
push
mov
ja
push
stos
pop
addr16
enter
inc
xor
or
arpl
pushf
inc
out
sbb
mov
aas
mov
popa
stc
cmpsl
sbb
stc
xor
cwtl
cli
dec
jg
mov
lret
mov
loope
sbb
and
xlat
inc
jns
stos
ljmp
mov
fs
pop
push
pushf
ljmp
sbb
mov
int3
fnstsw
in
shrl
sbb
call
enter
mov
repz
push
test
mov
jmp
cmpsb
inc
add
enter
jbe
or
scas
out
jno
inc
test
cmp
push
clc
cmp
adc
hlt
cmp
lahf
add
mov
xchg
jne
xchg
rcr
outsb
mov
movsb
sti
nop
lahf
in
fimuls
mov
repz
repz
mov
sbb
hlt
mov
and
or
dec
out
mov
sarl
or
pushf
push
dec
sbb
sbb
add
call
rcrb
add
jl
nop
icebp
arpl
push
mov
call
dec
add
xchg
and
push
pop
loope
jmp
mov
into
call
xchg
ja
add
popf
lret
jnp
and
push
sub
cmc
or
call
ljmp
pop
es
fdiv
sbb
dec
nop
addl
jo
mov
repnz
ja
ljmp
sub
rcll
lret
add
add
jge
inc
or
jle
jl
mov
dec
sbb
add
roll
mov
push
adc
popa
lret
jae
jmp
xchg
push
cmp
dec
push
mov
cld
shll
and
add
mov
jbe
sbb
xchg
lcall
push
cmp
js
xchg
sub
xor
inc
cwtl
daa
nop
mov
jl
in
or
loope
sbb
cmp
fcomps
pop
sbb
xor
fwait
fwait
mov
push
cmp
inc
cs
jns
and
call
xchg
sbb
pushl
push
mov
loope
in
jb
adc
dec
das
inc
mov
dec
fnstcw
inc
loopne
and
xor
jae
in
xlat
fwait
sbb
xchg
inc
mov
and
dec
ljmp
sti
mov
mov
adc
aas
andb
out
int
fsts
jle
in
aas
aad
xor
xor
xor
push
cli
inc
push
mov
test
call
sti
mov
lea
out
loopne
outsl
xchg
xor
pop
push
and
testb
test
out
pop
lds
loope
arpl
cmp
in
das
inc
xchg
out
dec
sub
cltd
decl
jl
and
pop
shr
jp
or
bndldx
pop
push
xchg
insb
data16
inc
aad
adc
fadds
aaa
mov
std
lods
cmc
mov
std
push
mull
test
je
lods
add
stc
inc
push
imul
out
fs
fwait
xchg
fld
xorb
inc
addr16
xor
push
icebp
movsl
xor
decl
iret
add
add
jge
sbb
data16
adc
lods
fsubl
call
adc
inc
jne
xor
std
cli
int
adc
ja
dec
shl
arpl
push
inc
adc
fdivp
incl
sbb
shlb
mov
jnp
and
rcr
je
rol
test
pushf
mov
and
xchg
repnz
mov
jle
pop
idiv
pop
es
ficompl
push
xchg
jmp
incl
sub
lods
lret
inc
pop
hlt
and
pop
add
shlb
cmc
ljmp
call
std
or
add
outsl
lea
gs
out
popa
les
mov
mov
dec
jg
lret
dec
cmp
pop
push
mov
pop
shll
push
xchg
arpl
and
enter
mov
lcall
loopne
ja
repz
arpl
and
lcall
and
insl
dec
movb
daa
jb
scas
push
je
ficompl
adc
js
call
leave
inc
inc
xchg
jmp
or
pop
xlat
std
ljmp
aam
cmp
mov
je
push
test
js
shll
inc
ffreep
mov
cmc
mov
incl
daa
mov
sub
scas
xchg
push
sbb
lea
aaa
enter
cmp
mov
push
sbb
imul
cmc
inc
popa
insb
je
xor
mov
or
jno
lds
xchg
sub
push
mov
cli
xor
scas
sub
and
repnz
sbb
int3
push
in
cld
push
int3
or
pushl
push
test
rclb
and
pop
mov
cmp
aaa
dec
popa
jmp
push
cld
fs
es
mov
xchg
js
in
popa
cmp
push
repnz
or
cs
mov
mov
call
sti
inc
gs
repnz
xchg
push
mov
adc
xor
shlb
fisubrs
sbb
mov
lcall
or
mov
dec
jp
outsl
sub
mov
ffreep
lcall
cmpsl
mov
repz
fistpll
pop
test
dec
dec
lea
mov
ror
sub
mov
rcr
enter
cmc
out
mov
xchg
jl
into
xchg
test
mov
mov
add
adc
and
and
aad
xchg
mov
int3
xchg
icebp
mov
adc
inc
clc
inc
push
jnp
movl
or
adc
dec
xchg
push
add
nop
adc
or
ljmp
mov
add
push
addb
inc
jecxz
ret
pop
or
add
ja
push
pop
sbb
jmp
and
out
and
out
cltd
xor
aad
repz
lods
push
rcll
call
push
sub
pop
adc
lds
or
lds
cld
int3
and
sbb
test
sub
pop
add
dec
ja
in
cmpsw
lret
hlt
and
adc
mov
call
pusha
imul
les
inc
js
pop
imul
push
repz
inc
mov
mov
or
call
cltd
mov
ret
lret
popf
fimull
jnp
mov
xchg
lds
xchg
inc
lcall
hlt
xor
nop
orw
dec
xchg
popl
xchg
lcall
aam
jns
cmpsl
pop
les
adc
push
movsb
sub
pop
aam
mov
mov
dec
xchg
mov
fwait
and
push
pop
int
jge
pop
pop
sub
sub
aas
dec
dec
sub
jmp
mov
push
dec
xchg
sub
mov
jmp
aaa
xchg
cmp
push
or
inc
add
call
inc
push
aam
dec
pop
cmp
pushf
mov
dec
adc
arpl
aaa
ljmp
cld
pop
movsb
repnz
xchg
incl
jp
push
out
sar
std
mov
sub
bound
adc
pushl
imul
lods
dec
and
cmp
mov
in
and
popf
sub
dec
cmc
sub
popa
ja
mov
sbb
xchg
in
jecxz
pop
xchg
jg
movsb
cmpsl
sub
xor
jmp
mov
push
out
sbb
jns
test
inc
adc
movl
movsl
push
xor
cmp
cmp
and
popf
das
sbb
jmp
cwtl
in
xchg
mov
movsb
or
mov
loopne
decl
fnstsw
lods
pop
xor
push
js
add
mov
fadds
jns
shrb
ror
adc
sar
call
jno
nop
andb
scas
xor
out
addb
aad
fidivs
testb
call
test
enter
add
dec
test
popa
mov
lret
aas
inc
mov
pusha
aad
in
inc
ljmp
and
mov
outsl
test
out
pop
sahf
fisubrs
cmp
scas
ds
push
dec
clc
sub
pushl
cltd
push
repz
ret
jno
stos
dec
pop
push
adc
mov
xor
sbb
ljmp
jmp
lea
push
sub
nop
stos
popf
jne
out
mov
rolb
cld
lcall
fbld
or
push
mov
jmp
bnd
inc
cld
sbb
decl
jo
les
mov
pop
fstp
hlt
lods
and
push
ja
clc
cli
in
mov
decl
enter
repz
outsb
inc
xor
je
mov
add
xchg
js
aaa
pop
dec
fs
jmp
mov
push
add
push
push
pop
fdivrs
push
jns
stos
and
mov
decl
sbb
iret
insb
nop
cmpsb
les
ja
pop
dec
dec
das
or
sbb
jmp
ljmp
pop
mov
loope
rolb
sub
pop
jge
xchg
popa
into
sahf
mov
ljmp
lret
imull
into
add
mov
clc
inc
out
cmp
int3
cli
adc
leave
lahf
ds
aas
dec
cmp
daa
mov
imul
xor
jle
jb
pop
adc
push
jns
decl
or
ret
fiadds
nop
and
or
lret
or
pushl
xor
inc
int3
or
je
std
pop
divb
arpl
adc
lcall
pop
test
std
hlt
lds
push
int3
xor
in
icebp
out
cmc
mov
scas
fdivp
daa
dec
pop
push
jp
incl
sbb
cltd
imul
jo
andb
lcall
add
or
add
push
jmp
lahf
mov
cld
cmpsl
sub
out
mov
inc
or
dec
lods
lcall
mov
in
sbb
xchg
imul
push
div
cmp
push
decl
test
cltd
ss
fs
push
gs
rorl
cmpsb
xchg
mov
pop
fmuls
rcll
and
pushl
mov
mov
mov
mov
sbb
push
push
fwait
and
out
icebp
mov
in
aam
and
sbbl
lret
add
pushf
pop
pushl
mov
dec
xchg
cwtl
fwait
pop
xchg
or
and
into
xchg
mov
cltd
fucomi
add
dec
loopne
pop
cmp
loope
imul
out
out
into
jns
jnp
in
mov
jo
lods
aaa
cli
jnp
pop
lret
out
add
mov
and
push
aam
ret
xchg
call
cmp
cmp
je
mov
rcll
push
ljmp
loop
and
in
dec
incl
dec
inc
push
mov
mov
push
pop
and
cmc
movsb
aaa
lock
jns
sbb
jle
inc
leave
inc
jbe
call
in
idiv
les
mov
nop
cmp
aad
push
cmpxchg
in
and
incl
test
adc
out
or
icebp
sub
test
out
jecxz
push
subb
lret
pop
in
xor
cld
mov
mov
add
lock
popf
push
xchg
loopne
jmp
icebp
sbb
jo
dec
in
add
int
mov
push
sbb
jecxz
movsl
sub
iret
sub
jp
push
mov
cmp
add
xor
jo
push
outsl
pop
scas
fwait
shlb
and
push
jle
test
lcall
inc
das
jmp
fistpll
fs
lods
subl
int3
movsb
push
incl
cld
mov
sbb
mov
in
sarb
sbb
cmc
xchg
stos
cmp
imul
mov
je
jb
mov
notl
fists
in
dec
pop
dec
fdivrl
push
add
push
cwtl
fbld
inc
jae
testb
inc
mov
mov
push
dec
pop
incl
mov
jecxz
push
clc
shlb
and
sub
mov
loop
fwait
incl
das
mov
mov
scas
mov
imul
sub
movsb
in
mov
jae
ljmp
nop
cmpb
pop
cld
push
loope
ficoml
pop
inc
add
out
push
dec
cli
lret
xchg
cld
scas
mov
mov
les
int
dec
mov
cltd
push
adc
dec
in
or
inc
pop
mov
or
jns
ja
mov
lea
jmp
ficomps
inc
lcall
jmp
repnz
and
jbe
leave
push
into
or
mov
sbb
jmp
in
or
iret
orb
leave
daa
lret
arpl
cli
sub
xchg
stos
mov
pop
ds
fdivr
lcall
hlt
fcomps
and
gs
loop
dec
lret
stos
test
call
or
ret
ja
inc
xchg
test
dec
idiv
push
fwait
mov
sahf
push
pop
jb
es
call
xchg
int3
add
fwait
loope
cmp
jnp
dec
add
pop
pop
movsb
in
jl
ret
mov
ljmp
dec
out
bound
insb
arpl
std
mov
push
ss
gs
in
lret
mov
leave
jge
pushl
mov
jge
lods
mov
cmp
movsb
jl
mov
cltd
ss
in
rolb
xor
jmp
push
inc
lods
push
and
sbb
shl
pusha
sub
xchg
or
fcom
decl
pop
add
mov
mov
sub
in
add
fldl
pop
arpl
dec
mov
call
idivl
sbb
push
sbb
and
insb
cwtl
fldl
mov
push
or
pop
add
push
sbb
mov
xor
sub
xchg
daa
test
jb
cmp
inc
jle
sti
mov
in
and
or
add
mov
xchg
das
mov
je
dec
mov
jne
xchg
ljmp
push
int3
sub
in
fst
cmp
mov
push
push
sbb
push
add
adc
mov
mov
call
ja
ja
movq
popf
ljmp
xor
adc
jne
pop
jecxz
push
add
jmp
std
test
bound
je
dec
push
xlat
pop
out
or
mov
xchg
xchg
sar
call
and
push
inc
adc
mov
mov
and
jmp
sbb
inc
stos
addb
jo
fildll
lahf
lea
mov
add
dec
mov
mov
or
mov
arpl
test
out
xchg
ret
mov
jge
idiv
pop
sbb
sarb
adc
cmpsb
repnz
dec
mov
ret
dec
sahf
push
push
mov
dec
push
mov
aaa
sub
stos
dec
rcll
addr16
arpl
push
push
ds
jle
in
dec
sbb
dec
dec
sub
or
and
xchg
pop
rol
mov
les
jmp
in
int
cmp
mov
mov
lcall
and
sub
mov
xchg
imul
add
ds
mov
gs
push
inc
call
cmp
push
jb
out
or
mov
movsl
adc
cwtl
out
xchg
leave
mov
jge
stc
add
sbb
ret
push
lcall
inc
mov
cmp
adc
xor
xchg
ret
lret
sub
dec
ja
incl
test
inc
push
call
jae
xor
sbb
mov
and
fcmovnb
pop
sbb
sbb
adc
and
lods
enter
jecxz
push
pop
fdecstp
add
dec
mov
push
les
xchg
inc
mov
call
add
inc
andb
lea
sub
sarb
sbb
mov
xlat
sub
mov
call
pop
mov
xor
ljmp
lcall
sub
mov
insl
lcall
sti
xchg
fmuls
push
pop
dec
jbe
sub
lods
xchg
test
jge
outsl
pop
adc
loope
aam
cmp
adc
pop
outsl
shlb
push
cmc
bnd
cmp
es
ss
add
xor
and
mov
xchg
xchg
pop
cmp
sbb
pop
xchg
add
adc
call
mov
aas
hlt
adc
mov
cmpsl
xor
pop
push
inc
xchg
pop
mov
cwtl
incl
or
out
cmp
dec
pop
xor
cmp
stc
dec
sub
ljmp
ds
xchg
hlt
xlat
jae
pop
push
push
push
fs
or
push
lds
pushl
jae
shl
ficomps
fidivrs
imul
jge
xchg
pop
mov
and
incl
mov
xchg
inc
in
int
adc
add
push
negl
dec
or
xchg
xchg
aaa
or
call
fildll
mov
adcb
data16
mov
and
clc
and
xchg
cmpl
fsubr
cmp
incl
pop
xchg
imul
push
adc
mov
sbb
xor
call
cltd
in
les
and
cmp
or
fstps
inc
scas
leave
fdivrp
push
jge
mov
lcall
das
jmp
lcall
push
aam
pop
std
inc
mov
xchg
sub
decl
fdivrs
shlb
push
or
int3
ret
out
or
out
in
sbb
les
data16
inc
ret
adc
pop
inc
add
js
pop
push
arpl
repz
sar
jmp
push
ret
adc
adc
or
or
cs
test
sub
ljmp
pop
mov
adc
daa
xor
pop
add
mov
stos
sub
xchg
repnz
incl
in
pop
cltd
fs
jnp
nop
mov
stos
jg
imul
jp
and
jnp
scas
ljmp
mov
test
test
dec
cmp
aam
push
jnp
adc
mov
push
dec
xor
mov
xchg
sti
fisubrl
xchg
adc
arpl
fsubs
stc
rclb
clc
adc
sbb
test
bound
clc
out
clc
xchg
int
jecxz
jno
fstps
repz
push
sub
jge
inc
lods
xchg
xchg
ds
incl
pop
mov
lock
xor
push
addr16
cmp
out
fwait
sbb
sbb
idiv
lcall
in
dec
cmc
sbb
loope
xchg
in
sbb
outsb
xchg
addr16
add
push
out
popa
sub
cmp
add
js
stos
mov
lcall
or
mov
and
mov
mov
hlt
cmp
and
imul
mov
in
cmc
xor
inc
inc
sub
dec
inc
pop
inc
cmp
sub
insl
and
into
cmc
xor
dec
call
fistl
stc
jge
dec
fisttps
test
ficomps
or
jnp
lcall
clc
out
push
or
mov
mov
push
xchg
ja
push
mov
inc
and
lcall
mov
cmp
jle
test
fdivs
mov
sbb
shlb
ret
jns
jae
dec
pushl
jl
sahf
andb
mov
clc
sub
mov
pop
and
repz
jge
xchg
lret
addr16
inc
fistpll
and
cmp
out
rcrl
lock
repz
jmp
lds
scas
adc
orl
push
out
push
fcmovbe
mov
ljmp
cmp
lret
xchg
jbe
mov
outsl
pmuludq
xchg
addr16
dec
mov
je
mov
ljmp
inc
pop
and
mov
xchg
enter
fstpt
adc
fcmovnbe
cmpsb
lds
pop
mov
or
sbb
call
xchg
jge
dec
or
lcall
mov
repnz
mov
je
shlb
adc
lods
sub
jg
icebp
xchg
int3
sbb
ljmp
mov
jo
push
cs
mov
inc
lods
mov
push
jnp
sub
mov
ss
call
das
clc
addl
mov
jno
sub
inc
dec
fildll
jmp
add
and
or
sbb
and
outsl
pop
cmp
xor
xorb
loope
pushl
repz
leave
or
cs
in
cmp
iret
es
cltd
push
sti
jb
pop
push
push
push
hlt
stos
aam
jbe
sbb
mov
cmp
std
mov
inc
inc
insl
cmpsb
aaa
decl
inc
pop
ljmp
shlb
sbb
mov
adc
sub
and
std
inc
and
xor
std
lret
incb
loop
out
add
repz
lret
and
out
and
or
leave
adc
mov
in
notl
inc
cwtl
popa
sub
xor
adc
push
mov
lcall
lods
adc
or
sub
icebp
xchg
sub
and
ficompl
dec
xor
or
popf
sahf
jmp
test
jp
or
scas
icebp
xchg
lcall
mov
call
shl
inc
push
xchg
aas
and
add
inc
aad
xchg
mov
adc
xchg
fldl2t
jmp
loope
dec
mov
xchg
mov
enter
push
sub
aad
xchg
and
ds
mov
mov
inc
inc
push
ljmp
and
mov
mov
sbb
fisubl
jo
push
inc
dec
add
jbe
inc
jp
in
jo
fcom
in
fnsave
aas
aad
jp
xchg
jp
jnp
push
xor
rol
ret
adc
scas
pop
and
mov
rcl
pushf
lahf
ror
push
and
adc
aad
decl
xchg
jl
ljmp
insl
jo
push
pop
mov
in
mov
cs
cli
sub
cmp
stos
orb
test
push
je
dec
inc
movb
cmp
aad
or
incl
arpl
cmpsl
icebp
mov
adcl
std
sbb
mov
jne
mov
inc
cs
incl
jp
lcall
mov
sbbb
mov
inc
xor
cmpsb
jg
incl
pop
movsb
cmp
sub
fisttps
lock
sbb
testb
jmp
mov
jbe
cmp
pop
xlat
xor
mov
mov
add
cmpsl
gs
sti
mov
fisubrl
push
call
movsb
and
out
cltd
sbb
std
scas
mov
sub
mov
movsb
lcall
rcll
mov
ret
hlt
lds
cwtl
rcrl
xor
dec
out
iret
int
pop
call
pop
pop
lcall
sbb
xor
mov
push
cmp
sbb
sbb
adcb
decl
adcb
jg
dec
lods
adc
jg
sub
leave
mov
mov
cmp
je
fidivrs
jmp
push
or
mov
pop
outsb
xor
repnz
xorb
jno
stos
scas
and
decl
sub
cmp
cs
aas
xlat
cmp
jp
add
cmp
ret
call
push
inc
mov
sub
mov
arpl
lock
sbbb
ret
or
lcall
dec
cmpsl
push
das
dec
sub
inc
ja
adc
mov
mov
inc
rorb
aas
mov
ja
pop
add
and
jae
in
stos
rolb
int
shr
jl
pop
leave
fabs
sar
in
fcmovnbe
or
in
scas
insb
shll
ljmp
divb
cmpl
mov
pushl
outsb
cltd
sub
in
mov
push
in
daa
xor
iret
iret
sbb
jmp
std
dec
js
jmp
fisttps
repz
jnp
js
dec
fsub
dec
sub
pop
sbb
call
incl
ds
push
dec
fiadds
mov
mov
sbb
dec
insb
int3
mov
sbb
sbb
inc
mov
les
pop
lods
or
repz
dec
dec
jb
adc
push
and
inc
xchg
shlb
push
into
xchg
in
arpl
inc
fadds
std
cmp
pop
imulb
xor
ja
cltd
pop
push
pop
dec
insl
popf
cltd
js
es
mov
mov
stos
dec
andb
and
lret
lret
dec
fcomi
out
fnstsw
pusha
repz
dec
cmp
mov
cwtl
mulb
inc
lods
fcoms
adc
pop
cmp
xchg
push
jmp
test
xor
xor
int
dec
pop
pop
imul
ds
aam
cmpsb
cs
ljmp
push
mov
imull
push
test
ror
and
jg
call
add
lahf
xchg
add
pop
sub
add
sti
adcb
cmpsl
scas
adcb
lcall
lcall
sub
adc
jle
imulb
fdivrs
mov
pushl
inc
je
repnz
subb
int
push
lret
pop
sbbl
scas
add
out
sti
push
xchg
mov
inc
xor
pop
lret
push
push
enter
pop
pushf
movsb
out
lock
inc
sar
sub
test
mov
jl
movsl
inc
cmp
inc
push
ja
movsb
pop
fisttps
or
decl
stc
gs
je
lcall
std
ja
push
cmp
aaa
xor
add
jmp
stc
jmp
dec
mov
cwtl
test
rolb
add
or
sub
sub
sarb
xchg
and
pushl
arpl
mov
aad
cmpsl
cmpsl
push
mov
das
lret
push
lcall
decl
stos
xor
sti
ret
idiv
mov
pop
pop
xchg
popa
add
in
push
jp
push
and
divb
dec
add
pop
imul
arpl
cli
data16
dec
inc
mov
jmp
incl
into
addl
push
notl
pop
cli
inc
sub
iret
dec
and
dec
add
cmpb
mov
mov
jl
pop
xchg
jnp
mov
repnz
cld
ja
or
xchg
cmp
push
mov
pushf
xchg
sbb
push
cmpsb
xchg
arpl
pop
test
mov
popa
out
mov
cmpsl
pop
roll
sbb
es
mov
neg
push
shll
jmp
and
mov
call
pushf
inc
mov
or
cmp
mov
test
sbb
cmp
cmp
pushl
adcl
mov
outsl
xor
adc
shrl
ja
clc
icebp
sub
dec
add
inc
insb
cli
mov
lret
sbb
enter
xchg
pusha
shlb
adc
push
or
and
dec
inc
addr16
aam
loop
add
sub
jg
or
dec
adc
clc
icebp
in
lahf
insb
mov
outsl
xchg
pushf
and
clc
mov
ja
inc
ret
cld
shlb
addr16
call
insl
push
fildl
cli
ja
sub
cmp
loop
xlat
rcr
or
add
ljmp
scas
or
mov
add
hlt
cmpsb
imul
in
shl
xchg
sti
adc
rcll
call
lret
out
iret
pop
scas
push
or
sub
ficoms
and
jns
in
dec
decl
inc
jne
mov
push
daa
sbbb
xchg
out
punpcklwd
fld
sbbb
data16
call
mov
sbb
arpl
pop
gs
mov
das
jb
data16
dec
mov
iret
jp
aam
push
je
xor
mov
add
adcb
inc
fcmove
jmp
cwtl
jle
mov
mov
aam
jb
xchg
cli
xchg
push
aam
add
lcall
jl
dec
xchg
mov
sub
mov
test
aas
lods
add
ljmp
in
dec
add
ja
pop
sbb
pinsrw
jae
test
xlat
mov
call
jno
inc
cmp
rorl
insl
jg
mov
mov
xchg
push
add
popf
fstl
mov
push
mov
int3
push
mov
in
out
repnz
sahf
movsb
mov
test
jge
ja
incl
or
jo
lods
aam
push
in
mov
xchg
push
dec
arpl
ffreep
dec
push
dec
test
mov
mov
lcall
incl
adc
and
neg
cmp
cld
xor
in
int3
rclb
xlat
jmp
aas
fldenv
or
jnp
iret
daa
les
stos
repnz
cltd
loop
cmp
mov
out
mov
fwait
mov
xor
jne
cmp
xor
lock
aas
jno
jmp
or
out
xchg
rclb
mov
pop
inc
inc
xchg
pop
lret
mov
sub
cld
loope
call
shl
mov
arpl
xorl
mov
cwtl
xchg
xor
mov
and
adc
call
push
ficompl
and
jmp
movsl
mov
inc
mov
sbb
das
popa
pop
movsl
decl
jmp
sub
lds
or
pop
xor
inc
rcll
js
call
mov
lahf
cmpsb
lret
adc
dec
pop
aaa
lea
aas
mov
jmp
push
cli
inc
jae
iret
in
rcl
popf
loop
fsubl
stc
lret
es
bound
jmp
pop
pop
js
xchg
mov
mov
sete
jno
xchg
sbb
cmp
ljmp
push
enter
iret
push
add
mov
jg
add
jmp
xchg
sub
outsl
outsb
ret
push
adc
fisttps
xchg
mov
in
adc
dec
inc
popf
inc
mov
and
mov
sub
jnp
xor
popa
ret
inc
dec
pop
imul
push
mov
leave
call
sub
inc
jo
cs
repnz
je,pt
hlt
jmp
mov
mov
pop
cld
ljmp
mov
inc
pop
jmp
out
push
jl
int
roll
out
xchg
imul
stc
xor
test
jmp
push
cmp
adc
xor
adc
jns
add
xor
decl
popf
fistpll
imul
jno
jbe
dec
pop
imul
push
pop
adc
incl
je
bnd
leave
insb
lahf
push
aas
js
movl
daa
dec
mov
orl
push
jns
rolb
out
and
inc
or
pop
mov
and
xor
fldcw
incl
push
jnp
push
inc
sbb
cmpsb
ja
mov
push
ds
aam
push
or
ja
mov
lea
jnp
imul
jo
shrb
outsb
repnz
push
maskmovq
les
incl
push
push
xor
in
pop
sub
push
adc
insb
or
push
pop
outsl
pop
mov
call
shrb
push
dec
mov
out
jmp
inc
test
push
arpl
xlat
pushl
pop
add
mov
out
lea
daa
ficoms
push
cmp
inc
cmp
cmp
and
shll
dec
loope
or
f2xm1
xchg
pop
adc
or
and
cmp
shll
cs
mov
test
stos
pop
sbb
jns
in
adc
inc
repz
jbe
xor
decl
daa
jecxz
push
push
mov
sbb
hlt
lret
xchg
dec
or
stc
mov
incl
ds
das
jno
or
rclb
mov
clc
mov
mov
aam
push
sub
mov
jecxz
xchg
mov
xor
pop
adc
aaa
ljmp
das
xchg
inc
pop
sti
xlat
ljmp
and
cwtl
cmp
cld
inc
mov
jnp
dec
xchg
fmuls
dec
jne
xchg
stos
out
jmp
mov
inc
ljmp
xlat
mov
inc
outsl
in
loope
es
into
sub
mov
mov
aaa
add
inc
mov
shrb
ljmp
and
xchg
arpl
pushl
das
aaa
pop
lahf
jp
outsb
push
out
push
mov
pop
cmp
inc
cmp
adc
stos
cs
lcall
adc
mov
push
and
push
xor
pop
xchg
pop
sti
sub
xor
jge
popa
loop
xor
dec
fisubrl
inc
lret
outsl
dec
mov
add
adc
jnp
add
orb
mov
jb
jp
clc
sub
xor
xchg
pushl
ret
pop
pop
jecxz
mov
push
lret
popl
jae
fnsave
movsl
clc
jae
jmp
cmpsl
movsl
cmp
jmp
push
loopne
add
mov
cmp
arpl
xor
push
and
adc
mov
inc
sarb
in
jo
ss
aad
pop
cmpsl
int
push
mov
pushf
jae
call
rcrb
fdivs
lret
lods
mov
insl
hlt
fldt
inc
sbbb
sub
dec
push
dec
data16
jns
pop
aaa
into
insb
inc
shll
arpl
xchg
sub
jb
pop
lcall
dec
mov
sahf
mov
and
int
out
repz
add
and
cmp
aaa
pop
cwtl
popa
arpl
dec
pop
pop
or
and
ja
push
mov
inc
notl
xor
decl
jnp
xor
push
data16
jae
inc
sti
push
fwait
adc
test
or
les
push
dec
adc
fcomps
lret
outsl
push
rcrl
push
mov
mov
add
call
inc
call
call
into
xchg
lahf
jge
ds
in
pushf
push
jmp
fwait
sub
ljmp
jbe
and
rcrb
ret
pusha
outsb
sub
icebp
push
and
xor
sarb
cmp
cmp
stc
fcomps
lcall
jo
int3
dec
fdivs
mov
lods
and
call
stos
sti
or
and
sbb
cmp
loopne
push
imul
pushl
clc
std
push
imul
pop
clc
imul
stos
cmp
in
sub
dec
bound
clc
lcall
jl
sub
cmp
and
notl
pop
out
sbb
ret
or
call
cmp
add
or
push
sarl
shll
pushf
cmpsl
sub
and
jle
out
pop
lret
out
dec
inc
xor
or
dec
adc
sbb
test
jmp
call
imul
fs
xor
push
clc
sar
inc
lahf
mov
rclb
push
cmp
jle
leave
fcom
popa
mov
push
ret
mov
jmp
lret
sbb
ljmp
or
or
outsb
ret
jecxz
pop
ss
lret
adc
lret
lds
mov
imul
sub
sahf
mov
push
or
int
aas
subl
je
shll
aas
mov
cmc
jbe
dec
xchg
frstor
outsb
mov
jne
addr16
add
out
xchg
outsl
decl
in
outsl
subl
pushf
int
aaa
scas
adc
cmp
out
ss
test
aam
add
decl
add
and
mov
stos
aaa
push
test
dec
in
mov
aas
daa
hlt
lds
ljmp
mul
xchg
add
add
and
or
shl
inc
insb
mov
nop
sbbb
mov
decl
pop
cwtl
push
cld
dec
mov
and
and
movb
lcall
insl
sbb
sub
adc
enter
add
xor
pushl
stos
in
mov
pop
push
cwtl
jno
mov
in
push
out
cmp
lea
pop
push
or
sahf
repz
push
outsb
and
leave
addr16
push
jb
push
decl
mov
daa
add
insl
test
in
inc
xor
xchg
fimuls
outsl
push
or
dec
or
sar
pop
lods
dec
lret
pop
movsb
pop
jl
in
fwait
mov
aas
stos
dec
jmp
subl
jmp
cmp
cmp
xchg
sarl
inc
xchg
add
fwait
scas
iret
dec
xchg
pop
jno
ret
dec
xchg
fbstp
fcomps
jl
xchg
aas
mov
add
pop
jle
cmp
sahf
cmpsb
cli
decl
xorb
lret
adc
bound
or
push
pop
and
jb
mov
jmp
and
xchg
rol
push
je
xchg
imul
xor
f2xm1
lods
dec
mov
fs
jmp
adc
jg
sahf
mov
add
jo
inc
push
arpl
cs
xchg
rclb
mov
xchg
pushl
inc
aam
fwait
aam
cmpsl
sub
jg
pusha
mov
mov
mov
jmp
outsb
jl
out
mov
jmp
loope
cmpsb
imull
in
jns
popa
cmp
lcall
cmp
shrb
or
adc
popa
add
mov
test
jp
lcall
stos
adc
int3
dec
ja
out
inc
in
pop
dec
mov
adc
dec
pushl
jl
lods
cmp
js
scas
and
push
xlat
inc
test
push
fwait
xor
sbb
js
jmp
sub
icebp
cmpsl
lds
mov
addr16
mov
pop
sbb
jmp
xor
pop
jno
test
jmp
arpl
and
ss
mov
mov
jmp
jbe
dec
and
cld
xchg
lock
jns
or
push
subl
xlat
std
fcoml
inc
inc
mov
lods
fs
in
inc
sbb
in
dec
mov
mov
cs
clc
dec
shld
incl
in
pop
inc
adc
ret
aas
jl
scas
mov
mov
add
mov
sbb
cmp
int
inc
fstl
movsl
movq
cmp
dec
inc
ret
sub
push
xor
dec
movsl
xchg
std
xchg
ss
stc
sbb
sbb
adc
inc
cmp
rep
aaa
jno
jns
lock
jb
int3
leave
lea
call
xorl
pop
adc
cmp
dec
dec
adc
mov
sbb
in
stc
sub
mov
dec
fwait
popa
cwtl
insl
add
clc
inc
bound
repnz
dec
adc
push
xlat
pop
lea
jmp
in
test
rcl
roll
jp
aaa
mov
mov
sub
xchg
pushl
xchg
pushf
cmpsl
xchg
and
jg
xor
xchg
push
ret
lret
lcall
add
add
and
pop
fcmove
push
loop
jne
cmp
call
aas
ss
xchg
movsl
or
ss
jecxz
cld
add
jbe
in
mov
jmp
inc
inc
mov
lea
push
inc
xchg
ss
out
nop
int3
xchg
pop
loop
stos
and
jg
push
dec
outsb
test
stos
and
add
add
addr16
push
jbe
nop
js
decl
movsl
mov
sub
mov
jecxz
out
lods
mov
xchg
lea
adc
fs
incl
fimull
incl
cmp
es
insl
mov
stc
mov
hlt
add
ljmp
mov
scas
test
cmp
add
call
cmp
shll
cltd
sub
push
xor
dec
push
xchg
inc
es
gs
mov
sub
ss
sbb
out
testb
jmp
xor
inc
xchg
sbb
fs
movsb
ds
incl
ret
and
xor
aam
divl
adc
and
jge
inc
sbb
jne
pusha
jno
ret
push
xchg
cmpsl
mov
roll
jle
jg
jp
jae
int
jmp
outsb
ss
xor
push
lahf
cmpb
cmp
out
jb
adc
fcompl
and
aas
mov
in
je
or
notl
cmp
mov
mov
popa
mov
call
jno
dec
adc
insb
jp
lods
gs
stc
stos
adc
aaa
es
inc
mov
dec
and
aaa
fisubrs
mov
mov
lret
mov
jmp
rcll
pop
and
dec
mov
inc
add
lcall
icebp
ret
xor
pushl
mov
pop
sub
je
andl
mov
lock
insb
mov
add
in
call
test
add
syscall
pop
or
push
pop
sbb
xchg
inc
jnp
inc
pushf
fisubrl
or
ljmp
jg
arpl
test
ss
ror
pop
data16
add
pushl
cld
clc
mov
lcall
sbb
sahf
and
sub
mov
ja
repnz
fxch
sub
jmp
or
xor
and
dec
add
pop
inc
push
mov
sbb
loopne
nop
mov
inc
out
dec
mov
int
pop
shrb
addb
enter
shl
pop
mov
jle
mov
pop
push
jle
ds
mov
jg
mov
rcll
add
lcall
xchg
mov
shll
inc
fs
out
ljmp
fdiv
adc
ljmp
xor
sbb
inc
jecxz
add
or
adc
add
out
mov
stos
mov
decl
fmull
jecxz
adc
adc
ret
mov
stos
test
mov
lcall
mov
mov
out
xor
pusha
imul
cs
sbbb
mov
mov
mov
add
xlat
pop
and
pushf
add
and
movsb
bound
xchg
sub
xchg
dec
mov
sbb
fwait
repnz
shll
sahf
dec
push
std
mov
and
incl
andl
and
ss
xor
jb
mov
pop
fsubs
xchg
sbb
sub
test
pop
dec
shlb
jge
pop
or
pusha
fbld
popa
cmc
rcl
mov
rorb
std
inc
sbb
rorb
movsl
lcall
incl
imull
jge
cmp
idivl
xchg
in
sbb
sub
push
adc
pop
fs
cmp
jmp
inc
push
push
inc
jns
in
test
pop
mov
fwait
shlb
xor
mov
call
in
cmp
rclb
jmp
pop
fmull
inc
adc
xor
sub
call
xor
ret
add
addb
adc
mov
gs
sbb
push
mov
loope
loop
xor
lods
ljmp
and
push
adc
lcall
lea
mov
push
jge
adc
pushf
xlat
jae
popf
xorl
lcall
lcall
popaw
dec
cmp
adc
js
xlat
mov
sbb
push
and
xlat
cmp
adc
std
jg
pop
mov
decl
out
sbb
xchg
adc
mov
outsb
fildll
rorb
loope
mov
call
cmp
xchg
hlt
jbe
lcall
inc
add
mov
pusha
popf
sbb
fdivrp
incl
mov
jmp
adc
add
or
nop
inc
scas
pop
sti
cmp
stc
in
lock
jmp
and
sub
test
scas
scas
ret
add
icebp
or
sbb
cmc
call
cs
and
jo
xor
test
mov
adc
hlt
orb
xchg
out
out
inc
ss
mov
or
ret
imull
gs
pop
pop
das
inc
pop
mov
sbb
call
pop
movsl
push
aad
sti
inc
mov
cmp
das
bound
scas
sahf
lods
dec
xchg
jmp
or
fsubrp
mov
out
aas
rcrb
loopne
cmp
push
cmp
xchg
fnstenv
test
xchg
jno
inc
or
orl
jle
icebp
dec
ret
rol
jmp
pop
push
in
push
roll
cs
xor
int
popa
std
enter
repz
sar
decl
push
mov
repnz
push
push
jg
sub
lcall
cs
mov
es
ljmp
inc
out
pop
ror
add
ds
push
gs
nop
cli
aas
adc
mov
adc
lcall
sub
mov
inc
aam
into
ds
and
mov
out
mov
leave
ret
lods
mov
or
jne
fimull
adc
push
jle
sub
out
fldenv
adc
add
incl
xchg
je
scas
loopne
addr16
xor
jp
les
mov
lcall
or
push
mov
pop
out
push
push
out
test
cmp
sbb
mov
decl
mov
mov
mov
lret
mov
test
push
xchg
and
jge
aaa
mov
in
pushf
mov
jle
cltd
jl
in
faddl
push
cmp
aas
xchg
loopne
mov
mov
pushl
nop
jge
pop
sahf
cli
xor
insl
mul
cmp
push
data16
bnd
mov
and
pushl
mov
push
jge
clc
push
sub
and
jle
cmpsb
sbb
flds
rorb
idivb
lcall
xchg
mov
inc
std
mov
push
cmp
push
addr16
pop
cmp
fnsave
clc
sar
lcall
andl
lea
aam
int3
mov
test
or
lea
jmp
in
adc
loope
adc
incl
ret
sub
push
ret
loopne
aas
lods
mulb
addb
xor
ljmp
in
rclb
cli
jmp
xor
dec
xchg
rol
ds
scas
mov
xor
mov
ljmp
pop
pop
mov
push
shl
cs
std
mov
inc
mov
jb
ljmp
inc
jnp
dec
movsb
rcrb
shl
cld
arpl
pushf
pop
call
sbb
adc
divl
dec
ret
gs
cmovno
mov
in
inc
adc
mov
cs
and
outsb
loop
mov
mov
add
add
add
add
and
or
jmp
inc
add
add
inc
add
add
imul
insb
gs
bound
jg
jmp
add
inc
jb
popa
je
push
push
push
imul
jb
gs
dec
or
insb
insb
outsl
arpl
add
je
jb
arpl
fs
jae
add
dec
jbe
in
ljmp
fs
imul
sbb
popa
outsb
adc
sti
out
out
adc
popa
jo
cmp
jb
imul
mov
sub
jnp
je
xorl
push
gs
outsb
push
ja
gs
js
gs
inc
inc
imul
fs
gs
ja
dec
and
inc
js
mov
pushf
jnp
imul
fs
mov
dec
popa
insl
lods
test
jb
mov
insl
outsb
je
je
and
push
cmp
fistps
scas
add
das
push
jne
fs
push
popa
jb
outsl
dec
jne
je
inc
jns
jg
popa
jae
inc
jb
outsl
mov
pushf
pop
fsts
in
mov
cmp
jne
cltd
jp
push
jns
inc
inc
gs
gs
shl
gs
shrl
popa
insb
push
mov
insb
jae
xorb
push
popa
insb
jne
or
or
push
scas
add
dec
outsb
aaa
int3
std
decb
dec
outsb
arpl
jmp
jecxz
ret
das
inc
jne
jb
adc
jae
push
cwtl
aaa
inc
gs
inc
or
add
inc
gs
jb
jns
in
clc
pushl
pop
add
push
jne
jb
push
gs
outsl
jb
arpl
testb
ret
arpl
cwtl
iret
lock
push
push
clc
ja
push
jns
je
insl
push
imul
gs
jbe
inc
popa
je
insb
inc
and
jo
mov
rcrl
jb
imul
xor
add
js
jae
bound
addr16
adc
push
or
inc
inc
outsl
outsb
jae
insb
gs
rol
xor
je
insb
ljmp
jle
aad
mov
xchg
dec
outsb
imul
stc
cmp
push
or
dec
inc
dec
cld
imull
or
inc
outsl
fs
popa
dec
push
insb
gs
pop
mov
jbe
gs
push
je
push
outsb
ja
outsb
dec
out
rol
push
add
xchg
push
outsl
push
xlat
jno
sbb
outsl
ja
jae
aaa
jnp
fwait
dec
inc
dec
cs
outsb
shlb
adc
out
xor
sbb
ret
sub
mov
pop
cli
pop
cwtl
loope
jnp
push
jae
jb
gs
int
cld
outsl
xor
inc
add
inc
outsb
jne
testb
repnz
negb
outsb
mov
sbb
xor
jo
jb
xchg
outsb
xchg
and
fmull
jb
popa
mov
add
add
dec
add
add
out
bound
add
add
add
add
add
mov
push
adc
add
dec
push
adc
mov
add
add
mov
add
add
add
aaa
cwtl
jae
iret
pop
adc
add
sub
add
jle
bound
push
add
sub
into
decl
pusha
add
mov
hlt
aaa
pop
pop
enter
add
sbb
push
loopne
add
jnp
adc
push
add
pushf
jge
jae
pop
mov
je,pn
js
adc
xchg
and
aas
int3
mov
add
add
pusha
jne
mov
pusha
add
push
cmp
mov
add
inc
cs
jae
add
adc
pop
push
add
sahf
fisttpll
sub
cmp
add
sub
add
jb
jb
adc
sbb
ja
lret
and
inc
jb,pn
loopne
add
fsincos
sbb
ja
pop
or
add
ljmp
dec
inc
add
or
pusha
push
add
add
sub
or
add
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
faddl
add
