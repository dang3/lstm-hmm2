call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
and
lds
dec
mov
xchg
addl
pop
roll
mull
out
xlat
add
jno
popa
cmpsl
push
xchg
inc
test
xchg
pop
popl
sbb
daa
rcll
roll
push
cmp
or
mov
xchg
dec
popf
inc
mov
ja
inc
into
ss
xor
lea
arpl
dec
cmpsb
adc
pop
nop
adc
inc
aaa
cld
pop
cwtl
sbb
loopne
or
lock
mov
fisubs
mov
popa
sub
push
mov
mov
pushf
ds
into
lahf
fnstsw
mov
in
fisubl
fsub
jbe
ja
push
or
icebp
les
shlb
xor
fcom
and
xchg
scas
push
inc
or
repnz
inc
push
and
stos
pop
call
lods
sbb
jns
sbb
mov
mov
xor
mov
pop
loope
cs
rorl
push
mov
arpl
dec
xchg
sub
in
adc
sti
shrl
cmp
adc
jno
push
xchg
pop
adc
mov
jnp
or
leave
lret
xadd
je
jne
add
pop
lret
inc
shlb
in
icebp
jo
dec
mov
mov
mov
sbb
adc
add
mov
cmpsl
jb
je
test
jge
imul
mov
mov
inc
icebp
aaa
loope
rcll
roll
mull
out
xlat
add
jno
popa
cmpsl
push
xchg
inc
xchg
push
addl
pop
roll
testl
sub
test
jge
pushf
rorl
shll
dec
gs
pop
in
xlat
out
cmp
ret
dec
mov
jp
pop
and
in
xchg
lds
mov
or
or
out
pop
sub
clc
mov
lret
adc
and
xor
test
loope
xor
pop
xchg
insb
rcr
dec
stos
or
fisttps
mov
es
sbb
xchg
cmpsb
push
xor
jae
divl
dec
dec
jl
les
dec
ret
ljmp
or
mov
mov
jne
out
aam
lods
add
mov
dec
imul
mov
mov
sti
mull
fs
dec
push
xlat
bound
push
andl
aas
mov
jg
add
and
jne
lds
addr16
in
xchg
aas
fs
or
dec
jo
xorb
nop
mov
test
sbb
jmp
and
push
movsl
sbb
loop
repz
xchg
out
adc
jle
popl
dec
dec
and
lret
js
lods
je
stc
jmp
inc
cmpsl
lods
sbb
in
int
int3
add
mov
in
pushf
adc
push
inc
je
mov
lock
stos
jle
in
mov
lock
stos
xlat
imul
aas
in
pop
js
and
jbe
fldenv
aaa
out
xor
sub
popf
arpl
pop
mov
or
cmc
mov
fsts
ret
push
jg
mov
idivl
and
pop
pop
push
int3
ja
outsl
fmull
aaa
mov
jle
call
clc
stc
in
mov
into
ffree
push
fstps
xchg
xor
lret
cld
push
rolb
rcrb
inc
lahf
aam
loopne
push
sbb
aas
mov
xchg
jp
cmpb
add
mov
sbb
mov
mov
mov
sub
mov
jmp
jno
push
cmc
xchg
inc
adc
add
mov
ret
inc
out
inc
aad
xabort
push
adc
xchg
out
sbb
testb
and
dec
push
stc
fdivrs
jae
fsubs
outsb
sbb
xchg
push
sti
cmp
xchg
pop
mov
and
das
arpl
cs
fdivp
repz
adc
outsl
and
add
sbb
mov
cmp
lods
popf
xchg
loop
andl
insl
sbb
scas
push
jecxz
push
pop
out
rcll
adc
sahf
not
xchg
and
jmp
add
sbb
or
loope
sarl
shll
pop
idivb
dec
out
outsl
loop
xchg
test
xor
push
out
jns
les
mov
inc
loope
xor
sti
pop
or
inc
sub
inc
lods
mov
mov
out
xchg
lret
aad
and
jno
pusha
mov
cltd
out
daa
and
cltd
loope
jge
push
cmpl
pop
imul
pushf
sub
std
push
stc
or
jp
mov
in
and
add
mov
negl
jl
and
xor
cmp
pop
stos
dec
pop
jmp
cmpb
scas
dec
icebp
dec
js
mov
mov
cmp
fisttps
xchg
cwtl
mov
imul
in
inc
aam
decb
inc
add
xor
mov
push
jmp
xor
repz
stos
inc
subl
ds
imul
test
imul
jno
push
xor
add
mov
cmpsb
or
mov
in
lret
sbb
adc
xchg
pop
shr
add
in
aas
add
cmp
inc
mov
mov
test
mov
es
lds
push
aam
mov
mov
jg
xor
fs
pop
invd
or
push
and
iret
dec
emms
or
in
xor
pop
out
call
mov
mov
xor
xchg
dec
dec
movsl
pop
fsts
cmp
dec
pushf
sbb
enter
sub
int3
dec
jb
cmp
jp
mov
cwtl
pushl
mov
cmpsl
mov
mov
pusha
cmp
enter
pop
xchg
lahf
cld
test
roll
fstl
pop
sbb
rol
jecxz
out
xor
and
testb
mov
jae
in
push
loopne
clc
push
pop
pop
repnz
sbb
rolb
enter
lcall
or
or
ficoml
push
test
jmp
shll
add
mov
js
and
jecxz
in
sub
jle
xor
mov
mov
rclb
nop
sub
loop
mov
call
je
mov
aad
shrb
or
jge
out
sbb
icebp
popa
and
mov
test
jmp
outsb
scas
scas
or
push
jle
shll
loope
leave
and
mov
nop
xor
fnstsw
ljmp
stos
xchg
in
aam
pop
push
fsubp
test
movsl
dec
and
sbb
out
mov
arpl
test
push
lock
push
je
sub
iret
mov
out
sbb
cmp
out
pop
leave
push
pop
mov
gs
dec
sbb
adc
inc
ror
stos
dec
add
lds
enter
aaa
xor
cmp
jle
and
scas
ds
cltd
clc
mov
pop
aaa
mov
inc
cmpsb
sub
lret
sub
jecxz
mov
jo
shll
stc
imul
sub
add
cmp
data16
rclb
push
sbbb
int3
jecxz
shrb
in
aad
xor
and
xor
push
mov
jae
sti
fs
pushf
stos
pop
add
addl
inc
stos
aas
adc
scas
std
sbb
add
jns
roll
in
sub
js
jae
aas
xor
cmpsl
xor
mov
adc
repz
cmp
lock
sbb
loopne
push
push
ja
roll
mov
iret
lock
sbb
dec
adc
pop
xchg
js
out
add
enter
mov
adc
das
outsl
sbb
popa
js
mov
inc
xor
pop
int3
int3
daa
sub
ud2
cmc
in
sub
and
bound
cwtl
mov
outsb
xor
roll
mov
je
xchg
daa
rclb
inc
lods
movsb
lds
outsb
dec
ljmp
test
inc
cld
pop
movsb
xchg
lods
xor
xchg
push
cwtl
in
add
pop
xchg
mov
insb
enter
adc
mov
lods
cmp
cmp
movsb
dec
mov
shlb
sbb
lds
and
jno
fstl
push
stc
lea
mov
dec
adc
pop
imul
mov
pop
pop
stos
xchg
xor
adc
popa
or
int3
rorb
mov
clc
or
shll
mov
fldl
push
out
hlt
xor
mov
out
scas
int
subb
dec
mov
adc
dec
shlw
sti
adc
out
xor
jecxz
inc
jns
pop
fistpl
push
or
into
pop
dec
jno
jns
out
dec
cmp
xchg
ret
sbb
pop
out
sub
pop
jae
inc
mov
dec
repnz
cltd
mov
xchg
cli
add
and
ja
pop
in
f2xm1
shr
xchg
sub
lds
jne
xor
aam
outsb
sub
jns,pn
loope
jge
cld
movsb
loop
push
add
gs
cli
or
insb
pop
outsl
adc
sub
cmpsl
inc
cmpsb
cwtl
mov
cmp
dec
decl
into
fcmovnu
or
cltd
jb
mov
inc
stos
fdivr
lods
mov
or
sub
adc
and
mov
shl
nop
dec
jl
repz
ret
adc
sbb
xchg
mov
xchg
sbb
push
pop
xchg
arpl
sarb
dec
test
nop
pop
stc
push
lds
stos
orb
xor
je
out
gs
repz
cmp
cmp
movsl
out
mov
fimuls
aam
push
jle
xchg
and
sub
pop
sti
xchg
push
in
jae
add
or
gs
les
idiv
mov
rclb
sbb
mov
xchg
repz
imull
and
lds
lea
jl
aas
pcmpeqw
insb
jne
in
mov
jno
adc
xor
orl
sbb
sti
shlb
push
fcmovbe
addr16
pop
dec
jae
pop
arpl
jo
mov
loopne
outsl
push
or
pusha
fst
push
push
data16
stos
int
adc
scas
push
cmpsb
push
pop
clc
dec
cmp
mov
shl
dec
cmp
insl
xchg
mov
mov
push
jae
mov
mov
pop
xchg
aad
fwait
xchg
out
jmp
mov
mov
push
movsb
ds
mov
push
fs
jge
dec
pusha
lcall
pop
ss
pop
mov
sbb
mov
shrl
cmc
mov
sub
lds
jo
add
cmp
pop
popf
in
xchg
jp
cld
cli
fs
je
rclb
movsl
pop
stc
mov
mov
fisttps
test
mov
or
fcoms
pop
in
lret
mov
movsb
pop
cmp
xchg
jne
mov
inc
xlat
mov
cmp
or
cltd
xchg
aam
mov
xchg
lds
aas
jno
inc
dec
push
push
push
jmp
shlb
std
in
ljmp
xchg
xlat
xchg
or
mov
inc
rclb
bound
push
add
push
stc
leave
xchg
mov
push
push
inc
mov
fistps
mov
imul
mov
clc
mov
mov
add
stc
mov
lds
mov
sahf
and
mov
jl
popw
mov
fwait
adc
pop
pop
daa
push
inc
repnz
outsb
pop
nop
xor
scas
push
or
cmp
popa
and
push
or
xor
add
jns
movsb
or
fbld
push
pop
jno,pt
rcll
sub
int3
add
inc
add
rol
insb
ja
push
jo
jp
xchg
stos
ret
aaa
adc
or
cwtl
hlt
jb
scas
pop
mov
adc
push
xlat
ficompl
xchg
sub
cltd
shrb
jo
daa
xchg
sbb
fwait
and
mov
xor
inc
popa
jbe
mov
mull
jecxz
jae
inc
test
ret
ja
lret
adc
ljmp
outsl
xchg
mov
fdivs
xor
addr16
jl
add
insb
xchg
push
dec
cmovb
xchg
fnsave
std
in
sbb
adc
push
adc
adc
call
inc
sub
cmpsb
or
fs
pop
cwtl
pop
dec
jl
sbb
loopne
jge
dec
addl
sbb
int3
out
and
push
in
cmp
enter
hlt
in
data16
sub
mov
std
outsb
inc
adc
outsb
cmpsl
jno
or
ds
jno
pop
out
stos
sarl
and
out
sbb
in
dec
loopne
inc
push
xchg
aas
mov
sarl
jg
jecxz
movsb
mov
mov
je
and
dec
sub
jb
adc
and
push
push
test
roll
xor
fimull
fldenv
mov
add
sub
js
push
inc
or
ljmp
int
sti
stc
push
cmp
dec
mov
je
lcall
lea
xlat
xchg
push
push
jnp
add
loope
icebp
movsl
mov
jmp
or
lret
xor
les
mulb
lea
gs
push
pop
inc
icebp
adc
test
outsl
sub
insb
jae
jae
fsubl
mov
fnstcw
outsl
mov
sbb
sub
pusha
xchg
dec
or
std
stc
outsl
mov
inc
push
inc
outsl
mov
pop
mov
ud1
sub
clc
xchg
testl
les
sbb
add
movsl
and
add
test
not
add
inc
lahf
je
data16
xchg
fcmovnbe
pop
jp
icebp
mov
movsl
mov
imul
sub
loope
cmp
ja
outsb
int
inc
mov
test
ret
mov
add
ret
mov
roll
ficoml
das
aad
icebp
inc
jno
aas
pusha
mov
subb
or
mov
push
add
sbbl
push
loope
mov
popf
sub
dec
xor
xchg
repz
fwait
test
or
jo
xor
push
xor
cld
cs
inc
xor
dec
shll
ret
sti
imul
adcb
push
test
pop
push
mov
dec
pusha
popf
xor
rclb
pop
push
xor
addb
into
loopne
adc
movsb
adc
dec
into
fsubl
and
out
xchg
push
xchg
add
imul
xor
cli
imul
inc
or
and
je
lods
in
out
pop
punpckldq
ja
mov
adc
arpl
out
pop
cmp
jge
jb
in
negb
dec
sbb
fimuls
xor
notl
dec
in
aas
mov
push
sub
addb
in
cmp
mov
mov
cmp
xchg
gs
or
cli
les
out
mov
push
imul
data16
leave
in
in
xor
dec
ficomps
adc
inc
out
outsl
movsb
and
mov
push
add
rcr
test
xor
and
call
xchg
or
ror
add
movsb
clc
fcmovnb
sbb
into
pop
int
and
xchg
testb
pop
mov
test
test
pop
lret
shll
jp
pop
mov
sbb
adc
lods
mov
popfw
lret
in
and
cmp
mov
sbb
cwtl
loop
sbb
mov
or
rorb
dec
push
and
or
test
lret
loope
test
mov
aad
jnp
mov
pop
loopne
sti
cli
mov
subb
fldt
cs
test
insl
mov
gs
or
or
fiadds
outsl
aad
pop
pop
inc
out
sub
fucom
mov
fs
int
das
mov
push
pop
pop
push
cmc
shll
dec
in
inc
xchg
leave
xchg
xor
mov
insl
adc
cmp
inc
in
sti
out
popa
mov
aad
inc
jge
jno
js
pop
cmp
in
add
clc
dec
fs
dec
mov
mov
and
enter
sub
movsb
pop
and
mov
xor
sbb
fldcw
pop
push
test
push
jnp
add
pop
in
dec
pop
addb
scas
jnp
mov
push
mov
cmp
sahf
mov
adc
fdivl
jle
jnp
div
or
pop
test
sub
xchg
in
push
jl
pop
mov
ret
sarl
jmp
leave
cmp
test
and
fs
push
mov
rcl
lcall
ss
lods
mov
jp
dec
xchg
outsl
jl
mov
and
mov
add
lahf
ja
aam
js
and
imul
sub
lods
shlb
mov
push
fidivrl
mov
mov
jge
and
iret
lahf
xchg
scas
mov
movsb
test
jmp
popl
bnd
into
jne
enter
hlt
push
xor
cmp
mov
pop
cmp
inc
cmpb
jns
or
add
pop
lahf
mov
notb
xchg
adc
imul
fsubr
out
mov
ret
inc
sti
cmp
imul
stc
testb
inc
mov
dec
arpl
clc
push
js
cs
fcompl
push
cmp
ret
mov
add
sbbb
xor
jle
jp
mov
dec
jge
inc
outsb
xchg
xchg
mov
test
cmp
sbb
or
add
popa
xor
aaa
fldcw
cmp
jg
jno
rorl
in
xor
jle
mov
push
add
add
dec
xlat
jg
sub
xor
push
rcr
dec
cmp
aam
icebp
sbb
adc
mov
test
dec
fimull
mov
sbb
jmp
push
repz
jae
jl,pn
ret
xchg
and
popf
nop
aas
jp
ret
sahf
lock
push
adc
and
imul
dec
les
fsubrl
loopne
repz
adc
stos
imul
movsl
sahf
fcomps
shll
sub
xor
imul
xor
mov
sahf
sub
cld
mov
cmp
xchg
shll
lret
sbb
mov
cmpsl
mov
pop
xor
add
sbb
cltd
lret
les
push
jno
loop
pusha
or
add
out
sbb
cli
xor
sahf
xchg
iret
inc
inc
stos
cmp
movl
aam
ja
aas
xor
popa
ds
in
mov
mov
xchg
addr16
jmp
cmp
je
cmp
inc
or
cmpsl
repz
xor
cmp
mulb
scas
ror
and
inc
xor
std
lods
std
inc
mov
popa
daa
cmc
cli
pop
icebp
sub
rolb
testb
dec
mov
sbb
ss
sbb
xor
das
mov
or
dec
jge
mov
ret
sub
test
pop
les
es
movsb
lds
mov
xlat
mov
je
jge
and
fdivrp
repz
inc
std
int
sbb
pop
sub
out
xor
fcoml
add
fistpl
mov
into
jne
into
enter
lea
mov
inc
cmpsb
sub
mov
in
cmc
inc
out
sbb
ror
fiaddl
mov
adc
jge
mov
rcrb
xor
dec
cmpsl
out
rclb
inc
dec
out
test
lock
repnz
jae
jg
xchg
test
imulb
xchg
cmp
dec
xor
pop
dec
popa
mov
lahf
mov
mov
pop
fcoml
push
out
jno
sahf
jge
or
cld
loop
int
xor
mulb
jno
add
mov
lret
lods
icebp
mov
pop
lret
add
pop
lcall
sbb
add
jmp
imul
je
mov
push
js
ficoms
shl
mov
icebp
sti
jle
rcrb
lods
mov
lods
andb
ds
mov
and
in
fdivrs
xchg
fstps
leave
pop
sub
icebp
and
inc
cmp
mov
and
clc
mov
pop
push
addr16
sbb
pop
adc
outsb
push
lods
inc
mov
add
inc
rorb
pop
push
inc
dec
push
enter
fs
cmp
sub
enter
call
push
mov
cmp
cmp
xchg
lea
add
out
push
cmp
nop
std
xchg
popa
scas
ja
mov
push
and
adc
mov
mov
adcl
loope
lret
pop
or
mov
les
and
jnp
std
push
test
xor
jnp
xchg
mov
pop
sarl
das
repnz
jp
loop
fwait
dec
fbld
inc
call
in
xor
mov
ret
hlt
mov
lea
cmpb
dec
cs
in
clc
std
or
mov
ja
bound
mov
test
or
stos
lds
fwait
shl
lods
xchg
jne
pusha
test
je
nop
pop
adc
or
cmp
or
arpl
out
adc
add
adc
mov
imul
movsl
inc
mov
divb
sub
or
sbb
mov
mov
test
insl
stos
and
rcrb
je
fcomp
orl
mov
inc
int3
andl
je
cmp
pop
xchg
jae
call
or
push
cmp
pop
jmp
xor
rcrl
sub
lods
jle
or
insb
out
lock
xor
cmpb
stos
inc
sbb
in
int
add
shlb
inc
ja
push
xor
pop
fisttpl
jb
mov
sbb
dec
adc
mov
fmull
inc
dec
adc
ljmp
loopne
xchg
dec
pop
pop
cmp
inc
push
mov
lds
pushaw
dec
shlb
nop
xchg
adc
push
pop
mov
std
stos
ds
stc
add
jno
repnz
cmp
in
mov
sub
jne
xor
mov
test
stos
fmuls
mov
stos
mov
lea
in
sbb
fildl
rolb
jno
popa
cmpsl
push
xchg
inc
xchg
push
addl
pop
roll
mull
out
xlat
add
jno
popa
cmpsl
push
xchg
inc
xchg
push
addl
pop
roll
repz
adc
add
jno
popa
int3
push
xchg
inc
xchg
push
orl
push
ret
jecxz
adc
add
xor
xchg
popa
cmpsl
rcll
roll
pop
int
push
xorl
outsl
jg,pt
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
movsl
nop
out
sbb
iret
mov
mov
adc
pop
xor
aas
push
outsl
add
jo
pusha
call
mov
mov
lahf
lock
loopne
adc
cmp
lea
aas
push
cs
pop
jo
pusha
out
testb
shlb
loopne
cs
xor
and
add
insb
adc
out
hlt
xchg
aam
dec
mov
push
add
xchg
push
xchg
xor
cwtl
pop
sti
add
fbld
push
aas
outsl
cld
inc
call
mov
nop
js
repz
pushf
jb
out
push
xchg
inc
or
dec
notl
decb
xor
push
mov
enter
incl
lcall
mov
and
adc
mov
mov
inc
pop
or
mov
aas
setg
dec
int3
dec
adc
jno
xor
adc
inc
aad
sbb
jg
movsb
gs
adc
scas
aas
mov
punpcklbw
nop
out
sbb
fsubs
lahf
lock
loopne
adc
inc
xor
daa
push
aaa
inc
pop
jo
es
mov
imulb
sbbl
pop
and
cmp
push
call
out
lret
int
lret
mov
out
repz
lret
push
outsl
insb
sbb
dec
pop
aas
pop
das
outsl
add
mov
mov
loopne
adc
pop
xor
aas
push
das
inc
pop
jo
pusha
call
iret
mov
lahf
lock
loopne
adc
pop
xor
aas
push
das
inc
pop
jo
pusha
call
cmpsl
jno
adc
xlat
sahf
push
or
mov
jle
adc
andl
sbb
frndint
out
in
ret
out
test
add
pop
jmp
dec
icebp
jae
ret
push
mov
out
js
inc
and
daa
xchg
sub
addl
mov
pushl
test
add
subb
xlat
mov
mov
xchg
loope
mov
ret
mov
mov
jo
jns
xor
std
loop
jge
xchg
pushf
xchg
outsl
push
lods
mov
fisubl
xor
aad
cs
jnp
push
or
inc
mov
sub
sbb
hlt
adc
dec
aaa
sbbb
xor
sbb
push
xchg
sbb
sub
and
adc
xor
shlb
and
pusha
aam
nop
fs
lock
xor
mov
ret
mov
repnz
incl
cwtl
ret
cmp
es
fwait
sub
mov
out
in
lock
les
std
adc
mov
mov
add
mov
test
leavew
test
sbb
and
mov
and
jp
mov
leave
inc
inc
inc
dec
ljmp
mov
sub
hlt
loopne
cmp
jae
adc
ficoml
mov
gs
popf
jnp
fcoms
push
xchg
fs
xor
sub
push
pop
jp
testl
cltd
adc
outsl
push
loop
mov
push
test
test
mov
adc
pop
jp
out
rcl
inc
loop
fistps
jno
mov
repz
add
sbb
jg
stc
cmp
es
or
call
sti
in
in
add
jl
pop
das
ljmp
fldt
inc
or
scas
and
sbb
loope
aad
imul
sti
cltd
jae
enter
fisttps
sub
cmc
rorb
sub
out
cli
mov
das
test
ss
nop
cmp
pop
push
xchg
imul
dec
sub
rorl
outsl
inc
fwait
jnp
es
test
scas
xchg
inc
xlat
sub
dec
push
sbb
jl
lret
xchg
lods
clc
jmp
cld
inc
sahf
mov
roll
insl
popl
aad
shlb
add
dec
jmp
hlt
pop
mov
scas
jbe
push
popa
ret
inc
out
mov
xor
mov
adc
mov
push
lahf
in
dec
xor
incb
dec
clc
insb
leave
sbb
xor
dec
fs
pop
jg
jne
mov
mov
out
mov
xchg
dec
cmp
mov
sbb
punpcklbw
mov
pop
enter
xor
mov
jb
sti
pusha
adc
repnz
add
cmp
mov
mov
mov
movl
sub
das
dec
jns
ss
scas
test
pusha
sub
es
dec
and
sub
dec
or
add
or
jp
rcll
push
jg
sub
pop
das
test
fiadds
dec
push
cmp
push
push
out
loop
mov
arpl
mov
hlt
inc
outsl
dec
jp
js
movsb
gs
mov
sbb
sub
pop
jp
mov
xchg
enter
lahf
pop
fisttpll
pop
fimull
dec
xor
nop
test
jo
lea
test
enter
out
or
mulb
pop
pop
push
adc
clc
cli
test
cli
dec
cwtl
pop
loopne
lds
jns
sbb
cmp
cmp
lods
mov
rcrl
lock
push
add
popf
pop
pop
push
or
adc
daa
rcll
shlb
mov
rclb
sbb
shr
and
loope
and
jb
scas
and
xor
mov
mov
cmp
sbb
push
ficompl
dec
push
insl
or
cmp
nop
cmp
shll
movsbl
adc
adc
outsl
and
out
mov
jmp
mov
push
pop
popf
rorb
mov
cmp
xor
inc
jbe
fwait
pop
out
ret
cmp
add
push
je
lea
lret
jp
dec
inc
fdivrl
call
ret
mov
mov
mov
mov
add
or
pop
movsl
je
or
pop
sub
fiaddl
gs
and
scas
sbb
or
and
gs
cwtl
dec
push
orb
test
aas
fistl
iret
movsb
mov
inc
hlt
roll
out
je
inc
scas
out
cwtl
repnz
negl
adc
lods
loopne
inc
out
daa
fsubs
lahf
mov
cmp
inc
lds
lea
jmp
adc
imul
inc
xchg
int
sub
or
mov
nop
dec
adc
and
inc
pop
push
add
cmpsb
sbb
js
stos
mov
bound
je
mov
ss
int
sarl
notl
mov
imul
mov
shlb
sbb
pop
outsl
pop
ret
inc
in
cmc
cwtl
adc
mov
arpl
arpl
jmp
fs
movsb
arpl
jecxz
dec
out
lret
add
or
arpl
xchg
sub
loopne
aaa
adc
je
je
frstor
daa
outsl
xlat
and
push
adc
call
ret
bound
jae
fs
test
loop
insl
xor
dec
notl
ret
out
imul
popa
mov
nop
push
or
push
out
mov
sub
dec
fistps
sub
loope
and
test
add
aas
sbb
inc
out
mov
scas
stos
imul
pop
sbb
lds
inc
test
add
shll
pop
cwtl
dec
imul
rol
add
mov
add
nop
in
mov
cli
sbb
mov
adc
rorl
sub
out
in
add
test
sub
je
aam
out
test
mov
xor
arpl
punpckldq
insb
push
leave
pop
and
inc
adc
xchg
xlat
adc
mov
xchg
adc
fcmovne
or
sarb
movsb
scas
fiadds
ljmp
pop
inc
cmp
adc
pop
jp
sbbb
cli
mov
loop
push
test
scas
jl
add
scas
and
mov
push
and
dec
ljmp
inc
les
jbe
jmp
mov
ret
test
stc
outsl
and
inc
xor
lods
mov
dec
in
es
lea
or
sbb
loopne
js
sub
pop
xor
dec
ud1
jns
into
lds
loopne
mov
lods
cmc
mov
inc
pop
adc
test
mov
iret
aaa
jo
pop
rcrb
jns
in
ror
pop
stc
testl
cld
lcall
clc
fisubl
test
test
lea
test
push
push
rcrl
daa
imul
or
and
push
inc
fwait
xor
ja
lea
pusha
dec
idivb
mov
imul
dec
xorl
loop
jnp
mov
mov
dec
sub
mov
das
ret
pop
roll
scas
roll
pop
cmp
xchg
sub
or
pop
push
xlat
aaa
arpl
cmp
les
out
aad
not
add
lea
add
adc
adc
lock
es
pushf
jno
bound
sub
sbbb
call
ret
mov
mov
mov
jno
dec
ficoms
xchg
pop
pop
jle
dec
lea
or
mov
icebp
mov
lods
stc
add
adc
incb
push
push
in
fldl2e
fmulp
iret
mov
inc
ljmp
pop
out
hlt
cwtl
jecxz
lret
test
inc
data16
mov
movsl
adc
adc
mov
fincstp
jns
aad
add
jmp
push
addr16
mov
je
in
movsb
idivl
sub
mov
mov
lds
popa
jae
jp
push
jg
cmp
mov
je
data16
dec
mov
cmp
call
shlb
push
test
repz
sbb
stc
in
sub
sub
add
push
sahf
repnz
dec
and
add
pusha
loop
test
and
cmc
sub
iret
inc
and
leave
add
add
jecxz
sub
xor
sbb
les
adc
ficoml
lcall
jno
add
xor
push
jae
mov
cmp
insl
inc
arpl
add
lret
mov
mov
popa
jns
rorb
dec
mov
mov
mov
dec
shl
xchg
or
sbb
mov
mov
fidivs
outsb
dec
push
mov
xchg
lret
pop
ficoms
popa
dec
ja
jl
cs
xor
pop
movsl
lock
pop
xchg
inc
sub
sti
cltd
das
push
mov
sarl
mov
loop
sbb
mov
in
pop
push
fdivrp
sub
sti
jge
aaa
popf
loop
pop
xor
push
sbb
cli
nop
and
inc
daa
aas
fcompl
hlt
incb
pusha
insl
push
mov
inc
mov
jl
adc
lcall
jnp
loopne
cmp
xchg
xchg
xor
int
or
mov
adc
push
or
xor
mov
push
xchg
lds
cmp
jecxz
outsl
rol
gs
int
ja,pn
aam
pop
cmp
shl
stos
mov
xor
lcall
orb
push
cmc
mov
inc
sbb
mov
pop
xor
xchg
outsl
popf
push
pop
cmc
xor
jbe
lea
stos
jne
sub
mov
jb
sahf
and
rorb
push
sbb
ret
cltd
call
pop
call
std
and
push
xchg
xlat
enter
mov
icebp
ss
jns
adc
sarl
cmp
mov
and
pop
or
mov
or
sub
sbb
jl
aam
sub
sbb
dec
jle
mov
das
cmp
mov
xor
in
in
sub
or
lods
movsb
aas
jl
adc
mov
cli
test
xor
xchg
rcrb
mull
sbb
xor
ss
pusha
pop
stos
inc
jno
lea
push
push
mov
jecxz
xchg
call
push
push
int3
leave
adc
mov
lret
fwait
push
fisubl
loope
or
imul
fs
xor
sbb
fstpl
ss
add
mov
pushf
push
pop
addr16
inc
popf
dec
xchg
pop
cwtl
imul
sarl
jle
arpl
fcoms
aad
mov
mov
outsl
add
lods
faddl
adc
push
faddl
dec
test
fwait
pop
lds
lock
out
cmp
inc
push
pop
cmc
and
shl
jecxz
adc
xchg
inc
ret
jmp
or
mov
xchg
aaa
gs
stos
xchg
and
in
add
adc
pushf
xor
testb
gs
xchg
and
or
fcomi
xor
in
mov
push
inc
mov
gs
sbb
adc
mov
movsb
into
fcoml
mov
cmp
add
enter
jl
pop
adc
popf
jecxz
mov
pop
mov
andl
jmp
push
cld
roll
inc
pop
fisttpl
insb
pop
xchg
stc
xchg
flds
jle
lock
dec
ljmp
lahf
hlt
out
or
push
mov
rcll
add
jne
pop
lret
ja
dec
les
movsl
pop
and
lret
mov
and
add
mov
xlat
adc
outsb
loope
int
mov
or
push
xor
mov
stc
jmp
push
xor
inc
cmp
jle
jge
jnp
jnp
test
mov
mov
adc
shlb
sahf
push
sti
jp
fincstp
call
dec
pop
loope
sub
imul
push
jp
push
nop
add
outsl
repnz
loop
test
leave
jne
in
xor
call
mov
in
mov
dec
dec
mov
or
cmpxchg
cmp
lods
pop
mov
and
inc
xchg
out
xchg
and
call
xor
push
push
ret
dec
in
ja
or
mov
fstpt
sub
cmp
mov
lahf
stc
adc
xor
in
jecxz
lea
xchg
or
mov
clc
lods
addr16
add
stos
out
mov
push
je
lock
std
fildl
mov
mov
daa
adc
jo
aaa
mov
and
adc
aaa
xor
jecxz
push
pop
add
je
jmp
sub
jo
push
inc
mov
iret
dec
pop
mov
les
mov
cmc
pusha
push
jg
jge
aam
call
mov
popf
mov
adc
int3
shll
and
mov
xor
jmp
dec
sti
outsl
inc
mov
mov
adc
lods
std
cmp
sahf
subl
sti
add
cmp
rolb
mov
call
in
outsl
mov
scas
sub
xor
or
push
push
fstpl
das
sub
jle
jo
lret
pop
sarb
scas
mov
xor
inc
inc
jge
cmc
adc
lahf
cmp
rolb
in
in
xor
inc
mov
pop
insb
sbb
lret
jno
movsb
or
xlat
out
shrb
idiv
push
lcall
jbe
hlt
pop
sbb
xchg
lahf
mov
stos
es
mov
push
cmp
les
push
cmpsb
xor
addb
imul
dec
mov
adc
test
mov
lret
mov
gs
leave
xor
sub
arpl
iret
cmpl
and
jae
inc
cmp
mov
arpl
dec
dec
xchg
jb
jl
jb
fisubl
mov
iret
mov
dec
push
dec
popa
out
outsb
pop
dec
stc
in
and
xor
pop
out
mov
dec
push
test
dec
or
jge
mov
rclb
mov
sub
mov
xchg
or
mov
jmp
aad
or
mov
or
mov
cld
dec
sbb
xchg
lods
cltd
jns
lahf
out
dec
adc
mov
push
mov
jle
lret
jmp
ja
clc
daa
fs
jne
push
stos
pop
mov
mov
jl
mov
lods
stc
sbbl
sub
sub
rorl
pop
push
popf
and
sbb
inc
icebp
into
fcos
add
sub
xchg
lret
xchg
mov
cs
fildll
cld
rorb
addl
test
mov
xchg
addr16
fidivrl
insl
xor
xchg
rolb
mov
mov
jle
ja
mov
jmp
sbb
nop
or
outsl
mov
mov
jp
xchg
xchg
cmp
adc
jno
jnp
mov
scas
inc
popa
mov
jns
inc
xor
ret
mov
push
pop
mov
movsb
stos
mov
int3
add
clc
xor
jl
push
adc
int
lods
or
jg
fs
push
mov
and
jg
fcompl
andb
inc
aaa
jmp
out
loopne
xchg
jns
cli
roll
mov
mov
sbb
mov
xchg
out
mov
xchg
adc
popf
out
jne
subb
mov
std
loope
mov
loope
cmp
popf
loop
popf
mov
cltd
push
jl
lods
xchg
add
mov
scas
mov
or
pusha
push
stos
and
cs
fnstcw
aaa
adc
jae
jmp
andb
aad
out
adc
inc
stc
add
inc
lahf
mov
maskmovq
divl
ldmxcsr
pop
jbe
and
and
mov
div
pop
iret
jl
pop
daa
les
mov
push
loope
int3
negb
repnz
or
aaa
pushf
mov
push
pop
push
sub
icebp
lods
jne
sbb
sub
jge
push
les
pop
int
mov
cmc
ljmp
pop
aad
xchg
push
dec
jmp
mov
or
dec
pop
call
push
add
xchg
mov
sahf
in
iret
mov
dec
mov
adc
cmp
xchg
fmuls
cmp
stos
xchg
in
outsb
xor
mov
lods
fs
aaa
pop
cmp
popf
in
xchg
ja
lock
lret
repz
or
stos
aam
mov
scas
pop
cmp
lds
inc
inc
clc
arpl
xchg
hlt
lret
xchg
ucomiss
cmp
fwait
inc
call
aaa
and
pop
incb
test
ja
mov
sub
ret
cmp
rorl
in
in
adc
popa
xchg
and
in
mov
pop
loopne
cmp
popa
stc
jp
cmp
lods
clc
and
pop
out
xchg
add
into
mov
negl
xchg
jae
lret
inc
clc
adc
inc
mov
ds
xor
sbb
aam
data16
and
mov
pop
and
pop
arpl
sub
mov
ret
pop
inc
not
mov
and
mov
pop
cmpsb
outsl
out
shll
mov
pop
pop
loope
sahf
pop
decb
fwait
cmp
and
xchg
dec
es
mov
pusha
lret
ljmp
sbb
or
mov
mov
shll
pop
push
pusha
cli
pop
xchg
lea
cltd
enter
faddl
adc
add
pop
int
mov
fsubrl
xchg
pushf
jo
std
add
xchg
adc
mov
mov
xlat
repz
insl
jno
out
jne
xor
inc
mov
add
add
dec
jg
js
sahf
and
shlb
lock
lods
jae
inc
fdivrl
push
int
outsb
scas
filds
push
lock
inc
sahf
jo
ljmp
dec
loope
les
push
sbb
mov
insb
mov
and
xchg
cmp
sarb
xchg
cmp
push
sub
mov
popl
sbb
enter
cmp
mov
mov
je
lock
mov
jmp
movsb
je
xchg
sbb
out
and
sbb
insb
jbe
out
mov
xchg
movsb
mov
xor
mov
pop
dec
ret
in
insb
repnz
out
and
in
push
mov
mov
out
fisubs
xor
gs
mov
mov
lea
jp
loopne
mov
fwait
add
xchg
push
xchg
idiv
sub
xchg
fcomp
insl
or
cvtps2pi
andl
mov
repnz
aam
add
cwtl
push
leave
push
cltd
pop
shrl
inc
test
inc
add
inc
filds
add
fcomi
and
sbb
pop
invd
ret
pop
cld
dec
or
int3
lds
push
notb
ljmp
je
sbb
adc
bound
cltd
mov
jl
or
test
ficoml
xor
cmp
testl
mov
lock
rclb
enter
das
xchg
sub
mov
add
mov
mov
test
mov
push
ljmp
adc
cmp
xchg
cmpsl
or
mov
test
mov
xchg
mov
pop
jle
jno
jno
js
in
mov
pop
dec
insl
push
inc
and
sbb
mov
std
or
mov
cs
fisttpl
shrb
xchg
xchg
mov
mov
adc
sub
daa
dec
mov
dec
inc
data16
jne
loope
push
stos
dec
mov
outsl
ret
xchg
cmpsl
pusha
jg
aaa
icebp
push
and
xchg
out
or
sahf
mov
mov
mov
sub
jmp
pop
ljmp
cmp
dec
mov
jecxz
xchg
xchg
jp
sub
test
inc
repnz
cli
and
mov
dec
fcomp
cmp
sub
jl
rolb
dec
les
subb
push
cmp
daa
cmp
jno
xor
mov
pushf
xchg
iret
notl
ffreep
xchg
rcr
das
mov
notl
ljmp
inc
pop
outsb
imul
pop
dec
fdivr
dec
adc
in
movb
cmp
add
adc
or
stos
mov
mov
mov
xchg
inc
daa
pop
jp
stc
add
mov
aam
inc
daa
xchg
lret
mov
push
mov
fsubp
popa
inc
movsl
jmp
sahf
fsubr
popa
in
mov
wrpkru
mov
test
adc
ja
mov
inc
out
xor
cmp
dec
inc
adc
ret
xchg
cmpsb
int3
fwait
in
jne
ds
jnp
fildll
rep
aaa
sbb
and
stos
cltd
jl
test
dec
cmp
cmp
dec
xchg
sbb
in
pushl
sub
fbstp
adcl
jno
inc
cmpsb
out
ds
dec
jge
mov
sbb
push
cli
push
arpl
and
or
dec
out
scas
jmp
popf
xchg
ljmp
add
pop
mov
cmp
repnz
rolb
repnz
or
and
scas
xchg
fsub
andb
and
test
push
orb
mov
lahf
lock
loopne
adc
pop
xor
aas
push
das
inc
pop
jo
pusha
call
iret
mov
lahf
lock
loopne
adc
pop
xor
aas
push
das
inc
pop
jo
pusha
call
mov
lahf
icebp
loopne
adc
pop
xor
aas
push
sub
jo
pusha
lret
nop
fildl
mov
jo
pop
sub
stos
cmc
xor
dec
fsubs
lahf
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
insl
inc
xorb
and
pop
ja
push
mov
loop
adc
add
xor
and
jb
bound
inc
xorb
mov
aaa
repnz
xchg
xlat
adc
and
cmp
cmpsl
bound
inc
xorb
mov
aaa
sbb
cli
xlat
int
popa
test
push
incl
leave
bound
xchg
inc
in
add
adc
dec
mov
adc
bound
xchg
iret
cmp
out
fcompl
sti
xchg
sub
push
cmp
mov
mov
jp
bound
push
jae
out
scas
xchg
int3
xchg
adcl
imul
mov
push
inc
shlb
inc
xchg
add
pop
stos
leave
or
xlat
in
xlat
push
jp
rcr
push
out
mov
test
xor
loope
daa
lods
testb
cli
es
inc
cmp
out
outsb
and
add
popf
test
jg
xor
movb
lods
push
xchg
lods
push
int
cmp
jb
out
xchg
inc
jb
ss
rolb
ret
daa
xlat
xchg
mov
xchg
jle
mov
adc
adcb
add
fwait
xchg
inc
mov
cmp
repz
ret
daa
roll
xchg
imul
pushf
daa
mov
push
mov
push
lds
cmpsl
or
les
lds
loop
rcll
pop
ret
daa
loop
adc
add
xor
and
jb
bound
inc
xorb
mov
aaa
repnz
loop
adc
add
xor
and
jb
bound
loop
int3
adc
int
stos
loope
lods
cmp
gs
mov
push
xor
push
jbe
xchg
fs
arpl
nop
cmp
hlt
mov
scas
mov
and
dec
lock
sbb
dec
lret
or
cwtl
popa
cwtl
add
adc
dec
mov
cmp
sti
out
fs
bound
mov
add
mov
popf
push
mov
js
and
lds
xor
andb
xchg
stos
mov
lcall
mov
cmp
stos
out
mov
mov
int3
lahf
jno
jecxz
data16
push
sbb
iret
outsb
nop
insl
ds
nop
mov
insb
js
ja
cmp
mov
mov
xchg
xor
subl
jg
dec
fsubrs
out
out
xchg
cmp
mov
ret
popf
mov
into
call
add
cli
push
fstpl
ds
es
aas
and
mov
mov
push
enter
mov
popf
ret
aas
dec
dec
push
sbb
mov
aas
adc
in
out
shlb
fimull
test
lods
fimull
sub
push
fsts
hlt
cmpsl
rorl
lds
add
add
or
push
in
arpl
xchg
sub
xlat
mov
popf
scas
movsb
or
mov
cltd
cs
shrl
jl
and
adc
add
pop
out
dec
mov
sti
ja
add
repz
xchg
iret
popa
mov
adc
adc
lods
inc
push
inc
push
or
pop
xchg
stos
xchg
pop
stos
mov
imul
std
lcall
jecxz
das
jmp
and
sub
das
push
xchg
mov
mov
aas
mov
or
repnz
and
fldl
add
push
add
and
pop
xchg
sbb
pop
cmpl
jns
xchg
sarl
lahf
mov
mov
mov
fmulp
dec
push
lods
shl
sbb
sub
push
push
mov
rcl
loopne
jge
sti
test
push
insl
addb
loopne
std
cwtl
xor
push
inc
and
push
mov
hlt
jb
sbb
pop
xor
dec
and
pop
jne
and
sbb
push
or
or
fisubrs
push
out
pop
fsubrl
push
fcompl
out
mov
hlt
push
movsb
lahf
mov
sbbl
mov
pushl
data16
mov
stos
in
mov
lret
bound
mov
fwait
sub
xchg
pop
in
aas
loop
in
rorb
push
ret
bound
imul
jbe
sbb
pop
sub
pop
jg
out
mov
pop
cmpsb
fstl
xchg
repnz
stos
lret
adc
push
mov
dec
lods
push
or
aaa
sub
std
icebp
xor
das
cmc
insb
mov
icebp
test
nop
clc
movsl
test
or
pop
xchg
or
sbb
call
cmc
mov
mov
lret
out
sub
lret
add
add
cmpsl
scas
or
mov
sahf
sbb
pop
sar
xor
mov
fbld
loope
mov
daa
fucomp
xchg
sarb
mov
in
add
push
sub
arpl
xchg
sub
fs
sbb
fstl
inc
pop
dec
fsts
add
inc
mov
cmc
scas
stos
and
dec
xchg
inc
dec
ret
inc
addr16
ds
repnz
lret
insb
mov
cmc
test
popa
inc
out
jg
and
jmp
push
mov
mov
nop
cwtl
xor
dec
jecxz
xor
in
iret
loope
lods
jb
iret
xor
mov
mov
mov
movsl
ds
mov
jmp
mov
or
cwtl
pop
outsl
ret
or
adc
lock
rorb
cmp
stc
adc
mov
dec
shr
mov
add
mov
rcr
scas
popa
out
push
aas
sbb
outsb
lods
ret
arpl
scas
in
fisubrs
ja
ffree
outsb
gs
shlb
inc
jb
stos
adc
jg
jl
and
stc
repnz
movsb
pop
mov
cmp
cmp
dec
mov
xor
mov
fcmovbe
mull
js
mov
cld
rolb
xchg
sbb
or
mov
das
mov
inc
xchg
mov
cld
sub
or
dec
adc
push
sbb
repnz
jo
cmp
and
ret
mov
sbb
sbbb
mov
aaa
ljmp
out
imul
xor
add
pop
shlb
aad
daa
aaa
pop
nop
outsb
mov
push
mov
sbb
ljmp
mov
rcrl
mov
stc
cmp
sub
aam
mov
in
xor
fistpll
je
cmc
xchg
pop
mov
insl
iret
mov
mov
test
push
out
cmp
cmp
shlb
or
jecxz
adc
sbb
lock
cmpsl
hlt
mov
arpl
loop
adc
ud0
insb
out
das
mov
or
xchg
lret
stc
push
stos
mov
cld
in
jge
pop
adc
jl
inc
and
pop
cmp
stos
cwtl
adc
sub
sub
in
inc
xor
hlt
scas
pop
nop
mov
and
xchg
add
xchg
pop
mov
cli
mov
and
xlat
inc
insb
lret
adc
in
or
divb
icebp
dec
loopne
leave
and
jp
mov
jne
sarb
pop
mov
je
jmp
add
insl
scas
sub
popf
push
xor
dec
pop
out
fbstp
arpl
lahf
mov
pushw
dec
into
sbb
loopne
repnz
imul
pop
sub
aad
add
add
std
pop
loope
or
in
inc
mov
sahf
ds
sti
push
mov
jmp
add
adc
or
jecxz
xor
and
sub
fsubrp
push
bound
outsb
xlat
lahf
pop
out
mov
or
xchg
jbe
fwait
lcall
std
mov
cltd
daa
repnz
cmpsb
call
cmp
out
push
bound
cs
into
jo
nop
enter
es
ret
fnsetpm(287
xlat
jle
or
loop
sahf
iret
repz
mov
jnp
add
cmp
mov
jae
fsubrl
mov
addl
push
loope
xor
cmp
imul
inc
and
sbb
xor
or
into
arpl
mov
pop
or
jl
ds
call
repz
sbb
xchg
jne
mov
pop
fldenv
sub
adc
sbb
daa
mov
out
add
pusha
push
add
pop
adc
xchg
push
mov
inc
jns
adc
inc
cmc
test
mov
movsb
into
aas
xchg
xor
dec
xchg
add
aaa
jno
and
gs
outsb
or
fbstp
cmp
jecxz
and
popa
xchg
aam
mov
jnp
sub
loop
lcall
inc
aaa
insl
cmp
pop
fs
adc
jg
andl
ljmp
xor
pop
rcrl
adc
sbb
xor
das
jae
shrb
leave
lods
xchg
push
adc
xchg
shrb
jno
pop
imul
sti
loope
jl
jne
lret
mov
leave
rol
push
jp
cmp
cwtl
jno
rcll
insl
enter
imul
sub
and
lods
aaa
lahf
fisubl
ljmp
int
jmp
adcl
cmp
pop
js
mov
adc
lret
out
sub
sbb
inc
pop
and
imul
lods
mov
cmp
fbld
in
and
insl
ret
add
cmp
cmpsb
shr
and
adc
jge
test
cltd
imul
out
xchg
repz
lds
in
xchg
loopne
mov
shrl
in
xchg
andb
js
aad
insl
outsb
and
jnp
and
lds
in
xor
ret
subl
mov
xchg
cli
jno
add
xor
or
idiv
cmp
test
fiadds
jmp
dec
aam
sbb
mov
loopne
sbb
pop
dec
jg
stos
stos
pusha
xor
shrl
repz
pushf
and
fdivr
sbb
in
xchg
stos
data16
sbb
or
fstpt
jnp
jno
jecxz
rclb
sub
movsl
lahf
push
and
jae
inc
pusha
add
jb
test
mov
xchg
pop
movsl
inc
xchg
jge
jg
loop
push
mov
ret
bound
lea
negb
jg
repnz
fiadds
pop
jge
mov
xchg
loopne
daa
vpmacsdqh
inc
sub
adc
cmp
mov
adc
dec
arpl
repz
testl
sbb
or
mov
out
xchg
fbstp
push
push
cmp
sub
repnz
ds
dec
insl
in
jmp
cmp
loope
fldcw
out
sbb
pop
push
imul
outsb
or
xchg
call
cmpsb
pushf
push
call
jno
push
in
and
inc
adc
fwait
pop
aad
out
icebp
pushf
pop
and
out
mov
pop
stos
mull
lods
xchg
addr16
dec
leave
jg
and
mov
mov
or
xchg
sub
ss
xor
xchg
test
data16
arpl
jle
popa
push
lret
push
out
into
outsl
adc
jae
loop
add
enter
dec
add
pxor
sub
jno
sub
cmpsl
test
shrb
mov
ja
adc
mov
int3
in
mov
loop
push
xor
inc
insl
aaa
mov
loop
fs
testb
shrl
rol
push
stos
clc
in
xchg
inc
ret
xor
les
sbb
inc
pop
inc
out
sti
cmpsb
scas
out
lds
mov
jmp
xor
cmp
ds
ljmp
lcall
ficompl
int3
cmp
jg
mov
out
pop
mov
push
aad
mov
add
cmpsl
cmp
in
jecxz
sub
rorb
inc
pop
mov
adc
push
stos
loopne
arpl
jecxz
mov
sub
mov
xchg
je
mov
out
mov
mov
loope
push
sbb
and
lods
inc
inc
ja
jmp
mov
pop
loopne
fistpl
jge
mov
js
add
cwtl
movsb
out
into
repnz
sbb
fdivrp
xor
cmp
mov
int3
mov
push
push
enter
adc
jb
dec
lahf
pop
imul
mov
xchg
arpl
aas
shrl
loopne
paddw
stos
rolb
insb
sbb
mov
fstl
outsl
call
sbb
fsubl
in
mov
outsl
fldenv
xchg
aad
add
pusha
xchg
push
sbb
icebp
mov
test
adc
push
push
fstl
inc
je
cwtl
cmp
or
mov
les
inc
addps
jl
inc
adc
push
pop
aas
or
dec
arpl
lods
subl
sub
bound
pop
addr16
insl
sbb
dec
xor
test
sets
pop
inc
sarl
cmp
pop
sub
dec
imul
test
aas
mov
in
jp
inc
das
or
inc
subb
pushl
adc
inc
cmp
dec
cmpsl
aad
fstps
out
sbb
fisubl
dec
ja
xchg
aam
mov
fisttpl
test
ja
aas
mov
loope
or
mov
lcall
push
lea
sarl
mov
fidivl
push
push
lds
jg
lret
cmp
xchg
pushf
scas
push
push
popf
mov
mov
jo
sub
pop
shlb
cli
js
cmpsl
mov
addl
pop
adc
jne
jl
iret
mov
pop
mov
push
int
pop
imul
inc
mov
push
push
divb
adc
add
movb
cmp
sbb
mov
xor
ret
test
and
cmp
sbb
hlt
mov
enter
mov
inc
push
jp
sbb
mov
inc
push
dec
jb
imul
inc
lock
ficompl
adc
dec
loopne
push
inc
mov
jb
pop
pop
xchg
out
outsb
xchg
cmpl
inc
push
adc
je
inc
xchg
lahf
adc
sub
fwait
dec
push
sarb
lods
mov
in
sub
add
adc
dec
jge
out
and
inc
mov
arpl
mov
sbb
and
into
inc
loopne
sub
sarb
xchg
repnz
inc
pop
adc
cli
inc
pop
cld
into
pop
push
pop
repz
repnz
xor
push
movl
outsb
popa
pop
daa
insb
nop
jns
lods
cmc
sahf
mov
arpl
mov
xor
jae
inc
mov
push
xchg
push
push
adc
movsl
stos
mov
cli
imulb
rcl
or
add
push
cli
test
cld
les
mov
and
sbb
ret
mov
and
cmp
dec
pop
xchg
push
out
mov
push
dec
aas
mov
lahf
leave
lret
push
mov
push
mov
lds
mov
jg
andl
in
xchg
xchg
push
test
rorb
lds
dec
aam
cmp
mov
push
in
insl
sti
mov
test
lods
inc
jp
xor
cli
movsl
je
jo
dec
test
dec
loope
mov
pushf
mov
in
cmpsb
ja
push
adc
or
adcl
pop
ret
mov
mov
xor
push
jmp
mov
rcll
fs
lock
es
sbbb
outsb
xor
xchg
and
fsub
push
or
inc
pop
stos
jecxz
inc
pop
in
imul
clc
outsb
movsb
sbb
fcompl
shlb
das
lods
mov
loop
sbb
mov
sti
in
rcrb
inc
out
loop
arpl
adc
pop
sti
sbb
lods
cmc
mov
xchg
xor
into
inc
fdiv
cmp
out
out
enter
jmp
enter
pusha
cmc
or
mov
dec
leave
and
and
sbbl
enter
inc
jb
popa
mov
out
jb
andb
fisubrs
mov
fcoml
push
lcall
mov
inc
pop
adc
mov
pop
pusha
dec
movsl
inc
aaa
jg
rol
cmpb
xchg
mov
fiaddl
repz
mov
les
fsts
arpl
inc
push
xchg
push
bound
or
out
ret
lock
packsswb
and
icebp
fidivs
enter
cltd
jb
shlb
jmp
inc
lret
gs
jnp
test
or
outsl
inc
sub
xor
mov
rolb
lea
xchg
mov
xchg
push
fistpl
jmp
fistps
shrb
jne
xor
sbb
in
aad
adc
cmc
add
popf
sub
cmp
aas
aaa
jp
xor
jmp
or
add
test
popf
cmc
pop
cmp
inc
fisubrs
mov
cmpsb
mov
ffree
shlb
fcomps
jb
ret
popa
mov
and
xchg
imul
inc
mov
push
fidivs
sbb
push
dec
cmp
inc
pop
push
loop
mov
xlat
imul
fdivl
mov
lret
leave
out
pop
jae
shl
add
ret
stos
cld
sahf
subl
orl
or
fisubl
jb
mov
jp
jae
lds
sarb
pop
mov
adc
push
cmpsb
int3
cs
mov
lods
dec
xchg
mov
adc
cltd
bound
les
rcrl
add
popf
out
inc
push
pop
pop
pop
shl
out
adc
call
arpl
jns
jl
lds
pop
push
jg
xchg
jo
adc
call
loop
mov
xchg
daa
imul
movsl
incl
das
aad
fisttps
sarb
sbb
in
and
xchg
cmc
dec
enter
sbb
lahf
lds
setge
imul
adc
dec
push
outsl
shrb
cmp
sahf
lret
inc
adc
push
mov
inc
jmp
pop
xchg
aam
jne
jecxz
cmp
idivb
cwtl
les
pop
push
mov
jbe
push
iret
jecxz
js
jg
jae
xlat
sbb
aaa
iret
mov
mov
leave
ja
xchg
aas
incb
hlt
enter
push
cs
cmpsl
rcrb
lods
popf
or
mov
pop
enter
push
xchg
pusha
rol
cmp
jle
xchg
sub
sbb
push
call
out
and
xor
ret
mov
xor
dec
adc
xchg
jne
jb
dec
fnstcw
rcrl
dec
jecxz
xchg
cmpsb
gs
sar
xchg
dec
mov
jp
or
and
loop
mov
mov
ror
neg
or
and
test
fwait
pop
cmp
and
cmpsl
jle
xchg
add
mov
ret
jmp
push
pusha
fisttpl
data16
and
lret
stos
inc
enter
mov
xchg
mov
scas
mov
call
push
jecxz
ljmp
sub
mov
fstps
cmp
addr16
push
scas
mov
div
pop
je
dec
fimull
push
loop
mov
cmp
xchg
test
popa
mov
das
mov
and
mov
stos
out
dec
mov
pop
adc
repz
movsl
inc
jge
pop
push
pop
bound
and
add
fidivrl
test
jae
call
es
outsb
pop
daa
mov
cld
sahf
lahf
xchg
push
mov
dec
dec
orl
mov
std
push
pop
inc
fstps
popl
inc
sub
mov
mov
gs
dec
xor
xchg
addl
xchg
aad
fidivs
sub
cmpsl
cmp
adc
out
repnz
dec
enter
xor
jle
mov
push
pop
inc
loope
push
dec
fimull
stos
dec
ds
movsl
icebp
cmc
lods
xchg
out
mov
or
ret
scas
out
int3
mov
xchg
and
leave
add
mov
adc
aam
leave
add
dec
cs
push
and
sbb
aas
insl
in
leave
mov
xchg
mov
arpl
xor
out
mov
cld
lds
cmpsl
adc
cmp
inc
imul
adc
or
mov
popa
jae
inc
int
sbb
push
test
adc
shrl
mov
and
pop
mov
loope
enter
inc
xchg
mov
pop
pop
add
out
mov
or
test
test
sub
scas
xor
cmc
dec
and
outsb
mov
in
mov
movsb
loop
in
xchg
mov
jno
pushf
adc
movsb
mov
xor
pop
shr
test
scas
rcrb
data16
push
lcall
or
stc
into
lock
cmp
add
lret
test
jns
in
outsb
jbe
adc
xchg
jbe
xor
jo
mov
lock
call
xor
mov
leave
adc
xor
cwtl
pop
adc
sbb
mov
cmp
rcrl
lods
dec
enter
je
xchg
jb
jae
xor
out
push
fmuls
mov
cmpsb
xor
inc
dec
pop
inc
mov
lret
out
jns
pop
loop
aas
sbb
sbb
fsts
addr16
pop
push
rcll
mov
add
xchg
mov
cs
jns
loop
repz
mov
les
dec
ljmp
stos
ja
sahf
dec
dec
pusha
stc
stc
cmp
jno
pop
mov
test
lret
dec
mov
and
add
jl
pop
xchg
popa
and
sub
dec
orb
sub
fnstenv
cltd
adc
int3
and
mov
daa
gs
inc
xchg
aad
stos
lods
or
test
mov
xorb
loopne
pop
push
loop
adc
out
arpl
push
jge
push
test
shl
inc
movsl
mov
cmpsl
repnz
sti
push
xchg
sub
sti
in
xor
repz
shll
cs
loopne
aam
inc
ljmp
mov
adc
pop
movb
sub
add
xor
sahf
rcll
les
mov
pop
sbb
xor
pop
mov
mov
popf
cmp
mov
mov
insb
mov
dec
iret
insb
jo
inc
in
sbb
mov
and
scas
or
lds
xor
popf
pop
mov
xchg
std
pop
jne
leave
xchg
test
imul
jle
jp
pop
dec
xor
jecxz
cmovb
data16
jecxz
arpl
gs
or
push
stos
mov
pop
loopne
sbb
test
in
pop
outsl
inc
das
pop
pop
sub
push
xor
cwtl
fisttpl
sbb
push
jle
pop
clc
hlt
push
jnp
jb
incl
cmpsb
jae
jo
mulb
push
cmpsb
xchg
mov
int
push
loop
mov
int3
lods
mov
jp
into
push
orb
addr16
pop
ret
daa
loop
adc
add
xor
and
jb
bound
inc
xorb
mov
aaa
repnz
loop
adc
add
xor
and
jb
bound
inc
lret
addr16
pop
push
repnz
loop
lret
divl
out
xchg
push
xchg
push
cmpsl
bound
inc
xorb
mov
aaa
jb
loop
in
test
xor
push
loopne
bsr
pop
popf
xchg
jno
aas
fsubs
cmpsb
xor
add
push
iret
inc
pop
jno
popa
call
das
mov
pop
icebp
outsl
loope
adc
and
jno
popa
call
das
mov
pop
icebp
outsl
loope
adc
and
push
mov
mov
popf
or
in
loopne
mov
enter
xchg
mov
fsts
sub
fmull
lret
out
cmp
dec
dec
pop
rcl
shll
mov
scas
fidivs
push
mov
xor
fcmovnu
call
mov
das
mov
pusha
and
inc
push
into
lret
adc
xchg
sbb
aas
mov
loopne
and
mov
rclb
out
add
ljmp
stos
pop
shrb
loope
or
jae
enter
jg
ffreep
and
cltd
jns
mov
cli
cmp
push
sbb
lahf
push
cli
inc
lahf
sarl
sbb
jno
aas
rorl
pop
icebp
outsl
loope
adc
and
jno
popa
xchg
hlt
pusha
loop
testl
pop
sahf
and
popa
ljmp
xlat
scas
add
pmaddwd
mov
mov
mov
movsb
jg
mull
dec
into
and
cmpsb
lods
and
sbb
orl
rcrl
loope
adc
and
jno
popa
call
das
mov
pop
icebp
outsl
loope
adc
and
jno
popa
call
popf
fidivrs
xorl
mov
insl
rol
push
ss
jp
cmp
fimull
rcl
pop
cmp
mov
lahf
fdivp
inc
mov
test
out
sti
icebp
das
mov
aaa
jo
add
inc
ljmp
mov
adc
jg
xchg
add
pusha
pop
xchg
hlt
sti
in
inc
xchg
xor
lods
pop
or
xchg
push
scas
add
mov
inc
lea
xchg
jb
fwait
dec
movsb
idiv
pop
adc
outsl
out
pop
mov
fnstsw
jbe
push
jmp
fsubl
push
subb
pmaddwd
sbb
shl
push
xlat
jl
faddl
xor
dec
outsl
jmp
repnz
js
pop
and
jns
gs
enter
jo,pt
xchg
ds
xchg
enter
mov
cmp
jb
adc
insl
xor
je
clc
shll
aam
test
lods
pop
out
pop
dec
jl
es
lahf
mov
inc
sub
dec
shl
cmp
ds
xchg
int
aaa
push
test
mov
add
outsl
repnz
iret
movsl
pop
mov
movsb
push
mov
sbb
push
lock
or
ljmp
fdivrs
mov
adc
xchg
out
insl
and
adc
inc
xor
pop
mov
sub
sub
xchg
push
jmp
add
ret
push
add
imull
fnstcw
cwtl
test
dec
loop,pt
mov
loope
dec
mov
xchg
fstpl
icebp
sbb
jb
in
in
jle
mov
push
ds
mov
xlat
mov
sti
lds
lret
stos
push
out
sbb
out
inc
sbb
lds
lods
jmp
les
insb
cmpsb
sahf
jo
rcrb
nop
pop
pop
insl
xlat
or
or
push
mov
push
push
loop
dec
xlat
imul
pop
lret
add
mov
test
sub
fimull
pushf
arpl
add
cld
data16
out
cmp
jmp
je
roll
dec
iret
movsb
mov
sti
cmc
or
jl
in
fnstsw
js
and
out
rol
sub
loop
mov
rorb
into
imul
aad
or
jo
add
push
cltd
faddl
outsb
xor
leave
fiadds
in
dec
inc
jo
inc
mov
inc
movsb
pop
insb
stc
inc
addr16
sbb
push
fnsave
in
pop
push
jnp
sub
add
xchg
out
pop
leave
or
scas
orl
xor
pop
leave
mov
and
ds
xor
loopne
daa
jnp
push
xor
movsb
pop
pushf
xor
rcrb
and
clc
adc
cmp
outsb
outsl
call
or
mov
lahf
jge
cmp
or
push
push
das
ljmp
xchg
mov
das
or
mov
ret
iret
xchg
aas
inc
add
sub
rcr
lahf
cwtl
imul
push
pusha
and
dec
adc
lcall
aad
fisubrl
mov
mov
jno
adc
mov
pop
in
mov
cmc
bound
push
push
int
mov
fdivs
xchg
mov
shrd
das
adc
lret
test
mov
pop
push
test
mov
sub
mov
dec
lds
cld
inc
imul
push
outsl
xchg
mov
mov
push
addb
xor
out
fistpl
jge
rcr
out
ret
mov
cwtl
cmp
scas
xor
adcb
out
dec
or
xor
mov
add
sbb
testl
adc
out
xchg
xor
aam
in
jb
sub
sub
push
add
or
pop
idiv
sti
sub
out
insl
lret
das
mov
icebp
xchg
xchg
adc
sahf
cmpsb
xchg
cmp
mov
lret
jns
xlat
mov
out
clc
mov
stos
mov
lret
out
xchg
aaa
mov
icebp
outsl
ja
aad
je
pusha
into
adc
xchg
aas
push
cmp
in
or
outsl
les
cmp
dec
cmpsl
lcall
jmp
jge
add
inc
test
xchg
and
xchg
pop
cli
or
fs
xlat
cld
jae
adc
daa
loop
pop
or
iret
mov
xchg
movsl
jno
mov
outsb
jl
or
int
lods
sub
push
lcall
xor
sub
mov
mov
sub
pop
cwtl
outsl
push
sub
push
dec
pop
aaa
les
sahf
in
jns,pn
in
mov
push
and
jnp
lahf
es
adc
aam
cmp
lea
or
sbb
mov
fnstenv
push
dec
mov
jb
push
xlat
inc
add
push
movb
scas
jns
dec
insl
test
int
inc
jl
mov
in
les
stos
dec
sub
jbe,pt
xor
inc
jmp
pushf
neg
pop
out
aas
mov
cmp
mov
imul
fisttpll
and
lcall
fbld
push
or
lcall
sbb
and
push
pop
ja
pop
cmp
fnstsw
daa
cmpl
jecxz
ret
mov
xor
into
cwtl
filds
mov
lock
out
daa
jo
sub
shll
lock
subl
pusha
stos
fdivrs
add
sub
sbb
addb
popa
fsts
dec
test
clc
push
sbb
cmp
mov
fs
stos
mov
movsb
push
pop
xchg
jne
ja
dec
adc
outsl
scas
orb
dec
sub
sbb
and
leave
add
pop
ljmp
call
icebp
test
scas
jo
mov
mov
cmp
fdivrl
in
lea
int3
jne
das
pop
shlb
movsl
cmp
sub
cld
xchg
shrb
inc
sbb
cwtl
nop
stos
push
mov
mov
imul
cmp
push
sbb
loopne
pop
pop
mov
sbb
jns
call
inc
aas
aam
add
pop
and
loope
push
inc
sub
int
add
and
dec
push
fs
mov
pop
fidivs
into
xor
aam
out
push
or
shlb
mov
pop
push
or
push
jg
adc
adc
and
sti
jne
dec
lahf
dec
inc
add
popa
dec
stc
ret
adc
push
aas
xchg
dec
jle
mov
dec
mov
xor
out
push
pusha
test
scas
cli
xchg
mov
push
inc
cwtl
jecxz
mov
sub
test
xor
iret
add
mov
xchg
imul
mov
lock
inc
lret
xchg
fdivl
push
ds
mov
loope
fnstcw
sbb
cwtl
nop
jnp
jecxz
mov
es
adc
fldl
inc
jecxz
sbb
xor
pop
jg
xchg
ss
cmp
inc
orl
mov
das
es
pop
jmp
sub
inc
xchg
and
pop
cmp
xor
insl
popa
xchg
stos
and
xor
movsl
icebp
clc
add
cmpsb
std
imul
ljmp
xchg
ret
arpl
push
push
outsb
orb
mov
and
and
in
ret
mov
shll
dec
and
faddp
sub
cmp
jbe
cmc
jae
shl
orl
sub
push
dec
inc
dec
pop
mov
ja
sbb
adc
mov
cmpsl
fidivl
dec
push
int3
inc
and
int3
mov
rol
loop
mov
mov
pop
jg
mov
sahf
inc
imul
rcrl
add
js
je
pushf
mov
push
adc
mov
rorl
pop
je
cld
pop
pop
push
enter
movsb
pop
into
push
xchg
rorb
into
add
aaa
out
sbb
pop
lods
sbb
psllw
push
sbb
xchg
data16
xorb
ljmp
adc
jp
movsl
jge
pop
dec
xchg
out
push
ds
mov
iret
loopne
push
xchg
push
test
cmpsb
pop
cmp
outsl
mov
jno
jge
stc
imul
pop
xchg
sbb
cmp
sub
jbe
push
out
loopne
adc
hlt
xor
shl
jbe
sahf
sub
push
cmp
pop
addr16
arpl
out
iret
jle
add
xor
divl
dec
mov
int
cmc
xchg
daa
mov
sub
rcrl
arpl
mov
and
xor
ret
notl
add
dec
push
jb
and
mov
cmp
pop
test
mull
inc
push
bound
xlat
xchg
cli
stos
cmpsl
fildll
cs
scas
das
cmp
movntq
out
xor
fsubrl
and
test
dec
mov
test
xchg
fs
mov
pushf
movsb
outsb
or
lods
lret
dec
pop
lock
sbb
sti
dec
rcrb
xchg
dec
mov
rclb
or
inc
dec
lahf
enter
inc
mov
inc
sahf
jno
jle
dec
push
sub
stc
mov
addl
mov
pop
daa
sbb
add
dec
lock
jmp
mov
sahf
aam
bound
popa
hlt
fs
jbe
sbb
inc
nop
data16
mov
sar
mov
in
lods
push
filds
mov
cld
fildl
cli
out
lods
mov
pop
hlt
adc
jnp
mov
scas
data16
inc
rorb
loop
dec
cwtl
jg
stc
adc
data16
jecxz
push
ret
push
push
or
sub
lahf
jmp
and
cmp
mov
mov
pusha
test
popl
andl
mov
shrb
fs
jl
hlt
pop
dec
or
scas
sub
adc
jb
lcall
bound
mov
cmp
cs
jle
mov
aas
add
lret
std
into
into
or
cmpsb
inc
cmp
cmp
ret
mov
lock
jnp
or
and
in
add
dec
and
pop
out
mov
sbb
mov
fcoms
lret
push
arpl
push
enter
push
popf
mov
js
cmc
rclb
add
adc
fwait
mov
inc
jl
or
lret
pop
cmpsb
jle
mov
es
outsl
push
push
ret
or
pushf
adcb
mov
jl
subb
xchg
xor
mov
or
iret
jl
xchg
fldl
mov
cmp
push
outsl
popf
dec
in
int
leave
cli
jbe
adc
in
inc
fdivp
sub
repz
jg
addl
addb
dec
mov
mov
aad
push
in
idivl
mov
pcmpgtd
xchg
fsubs
xor
mov
addl
cwtl
xchg
vminss
stos
fisubl
ret
push
test
call
mov
iret
leave
leave
cwtl
jns
outsl
bound
iret
dec
inc
sbbb
xor
xor
add
rclb
in
push
adc
leave
sub
imul
inc
mov
daa
jbe
mov
js
jge
cmc
out
cmp
mov
lcall
ds
rcr
pop
jns
push
rclb
jmp
xchg
push
ja
das
jnp
mov
inc
jmp
clc
shlb
arpl
loop
ss
imul
pusha
sbb
mov
je
mov
cmp
push
lcall
pop
pop
mov
cmp
sbb
jecxz
outsb
icebp
mov
cmc
mov
ds
sbb
lahf
push
push
sbb
out
scas
js
jne
sbb
js
push
xchg
mov
inc
sbb
sub
mov
int
data16
mov
aaa
mov
les
mov
std
mov
loopne
push
jns
sbb
mov
cmp
aaa
inc
popa
push
fcomi
and
repnz
xor
fidivrs
inc
xchg
jbe
ret
out
mov
jle
mov
dec
dec
notl
insl
loopne
pushf
mov
popa
push
add
nop
mov
sub
test
stc
loop
dec
scas
add
mov
enter
testl
sbb
mov
in
push
ret
loopne
jl
loop
add
cmc
iret
out
jnp
stos
cld
pusha
test
scas
cmc
js
or
pop
clc
das
pop
pop
out
adc
nop
pushf
movsb
dec
jno
les
dec
pop
jae
push
bound
xchg
mov
sbb
cmp
xlat
aad
add
fcmovnb
push
jmp
sahf
mov
iret
push
repnz
test
mov
aad
bound
in
pop
inc
ljmp
cmp
and
leave
fwait
xor
loopne
pop
lods
loop
shl
sub
sub
dec
sbb
gs
mov
mov
popl
inc
and
shlb
or
ljmp
jne
pop
or
mov
jb
into
fyl2x
leave
shl
cmp
adc
jnp
jb
stc
bound
or
jns
bound
xor
fdivrl
cmp
movsb
loopne
jl
loopne
inc
mov
and
dec
xorb
sahf
rcl
ljmp
test
mov
xchg
imul
test
sbbl
jbe
loopne
daa
fisubrs
sub
adc
dec
xor
jle
jne
and
in
sub
push
rorb
adc
cmp
inc
pop
jb
pusha
outsl
inc
std
test
lahf
test
or
add
and
add
ljmp
inc
scas
int
shrb
cmp
xlat
xor
add
add
adc
jge
test
or
aas
pop
out
aad
popf
sbb
add
inc
cmpsl
call
in
mov
lock
cmp
push
scas
or
and
dec
ret
jmp
movsb
in
sbbl
xchg
iret
sub
ljmp
subl
pop
jle
sbb
cmp
movsl
mov
mov
neg
clc
les
out
cmpsb
pop
jg
xchg
and
je
or
dec
ja
mov
xchg
push
adc
out
and
dec
data16
nop
ja
push
cwtl
bound
and
push
xor
dec
jne
loope
push
lret
mov
mov
stos
cwtl
pop
cs
enter
dec
inc
dec
inc
dec
shrl
das
fcoms
jmp
fcomps
add
aas
add
mov
loopne
adc
ljmp
dec
gs
xchg
loop
stos
jno
movsl
fwait
xor
push
adc
inc
gs
cmp
mov
mov
and
rcrb
push
pop
sahf
push
mov
das
inc
aaa
out
adc
out
xchg
xor
xor
mov
pushf
lods
inc
cld
cmp
das
or
or
mov
dec
aaa
mov
dec
sti
adc
mov
or
popf
fwait
arpl
daa
push
scas
aaa
insb
pop
sbb
xor
mov
pop
mov
out
rorl
sub
cli
scas
mov
and
mov
gs
stc
jmp
pop
stos
push
cmp
jecxz
shll
mov
clc
ljmp
test
lods
fisubl
loop
adc
xor
jne
sti
adcb
jl
notb
jmp
stc
outsl
lcall
push
insl
leave
dec
adc
into
xchg
in
std
inc
sbb
xchg
shrb
outsl
adc
lds
adc
xchg
inc
popf
xor
or
pop
notb
mov
je
adc
popf
jne
imul
out
addl
xchg
xor
cmp
cmp
push
mov
jb
inc
pop
lret
push
je
js
into
fcmovnbe
mov
cmp
gs
fstl
or
mov
lret
test
inc
jp
mov
fnstenv
push
sbb
mov
sub
pop
pop
rorb
mov
push
ja
jno
mov
fisubs
mov
rcr
push
and
mov
rolb
sub
dec
push
jg
lret
ss
push
mov
adc
xlat
adcb
cmp
lea
inc
mov
fisttpl
mov
sub
aad
lret
adc
inc
hlt
dec
lcall
dec
lret
add
xor
in
roll
pop
imul
lret
and
out
pop
mov
and
clc
std
mov
out
adc
dec
mov
ret
aad
clc
jbe
cmpb
sbb
clc
in
pushf
cmp
fldenv
jmp
jb
rcrb
je
lret
push
inc
cmp
in
cs
loope
pop
rorl
mov
jp
cmc
inc
rcrl
and
mov
add
jno
mov
push
push
std
in
lods
ja
inc
xchg
cmp
jl
lds
jae
sbb
jns
les
aad
lods
cli
aaa
push
and
add
sarl
push
push
push
push
ja
int3
push
das
arpl
fmull
fdiv
dec
xor
inc
incl
jp
dec
lcall
bound
jecxz
popa
int
sbb
inc
outsl
mov
scas
stos
lahf
cmp
test
pusha
std
jg
ljmp
dec
inc
mov
insb
cwtl
and
aad
das
add
mov
fcomi
les
cli
sub
outsb
sub
push
and
or
xor
mov
shrb
scas
dec
adc
aaa
lret
dec
xchg
decb
in
dec
mov
cmp
inc
adc
add
int
jge
dec
orb
inc
mov
pop
les
test
xchg
mov
xlat
dec
sub
imul
aaa
int
les
xor
mov
inc
jle
add
arpl
jbe
rol
jns
dec
xor
sbb
inc
lds
mov
cmp
arpl
das
loope
cmp
imul
add
inc
add
jae
idiv
lods
je
imul
ljmp
aad
shrl
xchg
sbb
inc
lea
push
xor
push
jle
aas
mov
or
mov
mov
pop
lds
pop
shll
popa
je
aas
pop
pop
xchg
mov
ret
int
add
jecxz
fldt
sub
or
inc
lcall
sbb
and
hlt
and
test
mov
in
inc
faddl
add
pop
add
nop
adc
xchg
clc
or
pop
mov
aam
pushf
dec
mov
dec
int3
sbbb
mov
shll
mov
xchg
mov
loopne
pop
sahf
push
lahf
inc
pop
daa
leave
sbbb
mov
dec
and
mov
mov
mov
sub
push
jae
repnz
js
shll
insb
jmp
xchg
cmp
call
jae
mov
ja
shrb
call
push
mov
push
inc
mov
rorl
lods
lret
orb
bound
dec
or
jmp
cmp
cmc
push
push
mov
mov
sub
arpl
jmp
pop
pop
adc
lea
addr16
ret
adc
sbb
inc
xor
dec
dec
into
movsb
test
rol
leave
je
xchg
pusha
das
shlb
and
into
mov
test
icebp
add
cmc
xchg
xchg
ljmp
dec
jl
lods
clc
jmp
sub
scas
fnstenv
add
leave
daa
xchg
cmp
dec
or
push
mov
sub
fcoml
inc
add
test
jne
dec
es
cmp
icebp
cli
aam
and
xor
in
push
les
xchg
ret
push
mov
adc
xor
je
adc
or
sub
sub
push
jle
jbe
mov
sbb
pop
cmp
sbb
pop
fadds
inc
sub
sub
hlt
lret
incb
xchg
ss
jecxz
sbb
mov
jnp
xchg
shlb
adc
popf
popa
inc
pop
inc
and
insb
mov
xchg
lods
inc
xor
lock
sbb
ljmp
add
push
push
data16
add
mov
movsl
xor
pop
mov
xchg
adc
and
dec
faddl
icebp
sbbb
movsb
les
jmp
pop
hlt
dec
in
and
xchg
pop
repz
fldpi
aad
dec
mov
xor
fyl2x
mov
push
cmp
sahf
or
lods
mov
fwait
dec
enter
mov
sahf
jl
xchg
inc
std
sar
and
fbstp
repz
in
add
push
adc
fcmovu
cmp
out
push
jge
or
jle
dec
iret
sub
push
ja
or
sbb
mov
or
inc
mov
es
stc
jmp
jmp
loopne
mov
out
jge
rcrb
movsb
pop
jne
xor
sti
jno
mov
or
xor
jae
pop
icebp
xor
jo
std
fisubs
repz
jg
fdivl
mov
loope
xor
mov
test
mov
mov
std
pusha
mov
push
mov
and
jmp
jbe
sub
xchg
dec
sub
arpl
cmp
mov
enter
adc
imul
dec
pushf
popa
xchg
mov
data16
mov
cmp
sbb
mov
data16
pop
mov
mov
pop
icebp
outsl
loope
adc
and
jno
popa
call
das
mov
pop
icebp
outsl
loope
adc
and
jno
popa
call
scas
mov
fcomip
outsl
loope
adc
add
push
iret
inc
fbstp
popa
call
das
mov
pop
jno
popa
jg
xor
es
leave
and
add
adc
and
xor
inc
jge
xchg
xchg
nop
cmpsl
mov
xlat
shl
loopne
lock
add
adc
and
xor
push
push
addr16
ja
xchg
mov
pop
lods
xlat
shl
loopne
lock
add
adc
and
xor
push
push
addr16
ja
xchg
mov
xchg
mov
sbbl
pop
daa
dec
pop
xor
jmp
sti
out
pop
in
imul
mov
repz
dec
push
pushf
cwtl
jnp
enter
push
aad
push
adc
mov
aam
rcl
mov
jp
push
add
sbb
int3
dec
and
in
xchg
sub
cmpsl
stc
ja
xchg
aad
rolb
inc
pop
xor
or
addr16
jecxz
push
loop
ja
or
outsl
pop
and
push
cmp
xchg
cs
jo
mov
in
xor
jg
fsubl
pop
lret
xchg
sub
mov
testb
test
popf
in
mov
cwtl
ljmp
ret
pop
pop
lahf
movsl
xchg
rcrb
loopne
in
add
adc
and
xor
push
push
addr16
ja
xchg
mov
mov
negl
dec
and
inc
and
jne
xchg
repnz
cmpsl
movb
mov
inc
inc
pop
xor
adc
or
jmp
scas
mov
lahf
bound
dec
push
pop
push
or
push
addr16
ja
xchg
mov
mov
div
pop
add
adc
and
xor
push
push
addr16
ja
xchg
mov
mov
div
pop
add
js
int
repnz
out
xorb
imul
push
aaa
pop
cld
dec
jo
lods
fnsave
mov
movsb
jb
mov
mov
leave
lret
mov
int3
mov
lock
sbb
add
mov
repnz
jge
popa
xchg
xchg
xchg
fwait
jecxz
adc
add
pop
xchg
cmp
add
mov
sbbl
out
fidivs
stos
iret
rep
sbb
mov
xchg
push
int3
mov
imul
sar
sbb
add
and
daa
xlat
sbb
cwtl
int
lds
test
scas
sbb
out
gs
in
mov
pop
dec
mov
sahf
clc
adc
aas
sbb
pushf
in
mov
pop
stos
mov
fwait
mov
mov
lret
sub
inc
inc
sbb
gs
out
pushf
int
roll
push
add
in
stos
mov
mov
pop
mov
rcrb
pusha
sub
test
pop
je
jp
mov
inc
pop
mov
jne
and
jns
iret
scas
scas
popa
pop
sub
xchg
mov
loope
xor
adc
clc
pavgb
mov
into
sbb
jns
stos
cmp
repz
lahf
in
or
in
mov
cli
stos
repnz
stos
jne
scas
push
jge
loop
sbb
shll
pop
or
hlt
xchg
dec
ljmp
push
les
add
or
cwtl
jle
inc
lahf
ror
aad
leave
sub
sub
mov
test
sbb
sub
dec
sub
xor
cmpsl
daa
roll
cs
repnz
push
in
jbe
adc
sbb
pop
push
in
push
hlt
movsb
push
dec
dec
lret
dec
pop
xchg
mov
xchg
jo
mov
lods
mov
sahf
ljmp
test
andb
mov
loopne
shlb
in
cmpl
loop
outsb
jle
or
imul
popa
xchg
sahf
pop
decl
mov
pop
enter
into
xor
pop
and
adc
sbb
mov
sub
and
add
arpl
outsl
sub
repnz
int
rcrl
fs
shl
out
mov
add
push
imul
inc
imul
pushf
repnz
lds
push
cmp
iret
sub
test
cmpsl
xchg
dec
and
std
xchg
aaa
dec
mov
sbb
das
andl
lret
divb
xchg
mov
into
push
adc
sub
pop
mov
icebp
mov
insb
test
je,pt
leave
adc
cmp
ja
or
sbb
and
mulb
mov
xchg
pop
cmp
cmp
fildll
push
fbstp
cmpb
mov
orb
shl
dec
push
or
cltd
lds
fdivl
sub
xchg
scas
jle
xlat
inc
xor
stc
shl
pusha
flds
or
push
adc
pop
cli
cmpsl
decl
stc
pop
cmpsl
imul
jae
jge
ljmp
cwtl
out
jge
xchg
in
adc
outsb
pop
popa
and
int3
inc
lea
leave
mov
ljmp
jmp
jg
clc
hlt
add
xchg
push
out
jae
out
adcb
add
mov
jg
cli
mov
mov
mov
push
orb
ret
rclb
daa
call
test
dec
lret
leave
xor
mov
ret
mov
subb
push
jle
cmp
jo
lds
xor
xor
ljmp
lcall
daa
pop
std
and
dec
cmpsl
cmp
adc
push
js
adc
fldln2
mov
sub
cmc
push
sti
mov
nop
cltd
imul
js
sbb
jp
sub
xor
mov
push
rclb
mov
pop
mov
adc
lods
popa
in
cli
add
mov
inc
add
sahf
das
hlt
loop
mov
push
jle
or
mov
sub
icebp
leave
insb
out
insb
add
cltd
sbb
gs
stc
ss
or
cmpsb
hlt
out
sbb
or
jne
mov
lds
mov
pop
push
jecxz
mov
lods
inc
jns
ss
sahf
pop
mov
sahf
mov
adc
xchg
jle
rcrb
movntq
cmpsb
or
jns
popf
movsb
outsl
hlt
lea
loop
je
lods
into
dec
repz
xor
es
sub
jno
out
xchg
jae
inc
movsb
adc
push
popf
mov
cmpsb
hlt
out
pusha
dec
lds
mov
clc
call
cld
outsl
xchg
push
or
dec
mov
stos
bound
lods
push
mov
lret
rolb
inc
xlat
xor
or
pop
test
xchg
xchg
test
xchg
and
outsl
ss
jl
jmp
cmp
lea
cmp
mov
pop
mov
aaa
mov
aaa
in
ret
and
test
movsbl
adc
inc
mov
pop
lods
icebp
fwait
int3
ljmp
jle
fldcw
mov
cld
or
add
out
ds
int3
fcmovne
fisubs
cmp
xchg
dec
cmp
sub
inc
mov
lret
adc
popf
sub
addr16
lods
pop
pop
dec
adc
inc
in
jnp
pusha
add
orl
loop
popa
push
or
je
mov
sub
xchg
into
jmp
test
pop
enter
push
movsb
movsb
mov
ja
fiadds
cltd
dec
ror
cmc
pusha
imul
cwtl
add
mov
sub
ljmp
fdivs
cmp
insl
inc
inc
lret
imul
into
mov
mov
cmpsl
xchg
lods
or
mov
inc
rolb
ss
xor
xchg
out
hlt
rol
mov
loope
mov
movsl
xchg
data16
jnp
pusha
lcall
xchg
sbb
shlb
xchg
mov
jecxz
out
in
test
pop
xchg
adc
pop
bound
rcrb
xlat
pusha
fldl
stos
pop
movsl
inc
and
stos
inc
in
dec
mov
ja
inc
clc
out
jb
ljmp
lahf
mov
aam
xchg
ficoml
jno
mov
fstp
push
lahf
repz
and
cmp
fucomip
pop
dec
dec
xchg
cwtl
lahf
fisttps
or
sarb
push
fmul
mov
jmp
dec
and
mov
fwait
adc
fsubr
sbb
jo
jp
or
jo
push
adcl
int
cld
sbb
cmp
sub
dec
fisttps
std
add
dec
aam
adc
and
scas
xor
cwtl
pop
sbb
ljmp
imul
push
push
aad
cli
cld
movsl
ds
dec
in
xor
jmp
jb
dec
cs
movsl
jo
mov
cmp
rclb
cmp
in
push
out
sahf
jbe
pop
ficoml
scas
mov
push
mov
mov
repz
sub
and
jns
idivl
jb
mov
sub
pop
mov
int3
gs
in
ficoml
or
jns
pop
mov
nop
imul
rorl
rorl
or
cld
test
inc
repnz
test
rcrb
out
dec
xchg
call
and
das
push
adc
repz
jg
push
inc
enter
arpl
pop
add
incl
or
mov
call
pop
xchg
test
dec
xlat
and
mov
mov
xchg
out
mov
clc
rcrl
fsubl
js
pop
push
mov
out
insl
movsb
orb
inc
mov
das
mov
cmp
xchg
xorl
and
xchg
stc
dec
xor
loope
scas
shll
mov
mov
in
loopne
jmp
cmp
mov
aas
dec
mov
mov
inc
ret
sub
pop
jl
js
gs
push
or
and
pop
xchg
hlt
imul
inc
fdiv
stos
cmp
push
fbld
and
xor
pop
jns
inc
aam
lcall
xchg
cmpb
ret
je
addr16
jbe
xor
sbb
fwait
cmpsb
popa
int3
xchg
and
jb
fs
xchg
cmp
aad
lock
loope
jmp
pop
insl
mov
jl
xor
orl
dec
xchg
ret
mov
add
repnz
arpl
ja
inc
je
and
movsb
lods
mov
push
pushf
xor
sbb
jns
in
sarb
popf
cwtl
out
aam
rcrl
in
mov
mov
andl
xchg
loop
mov
xchg
scas
pop
mov
sbb
pusha
xor
mov
push
mov
cmpl
sub
pop
cmpsb
cmp
and
mov
sbb
mov
sbb
dec
sub
pop
push
repnz
lods
cmpsb
or
jp
add
push
add
or
fldl
adc
jmp
rcrb
or
daa
subb
out
roll
sbb
into
iret
aam
lahf
sbb
mov
jl
roll
pop
loopne
and
lds
fcmovbe
mov
sub
movsl
test
inc
mov
jbe
mov
xor
les
mov
sub
push
pop
inc
ret
push
aaa
pop
mov
stos
lods
push
leave
pop
shrl
lock
cmp
jnp
mov
adc
push
add
push
int3
sbb
scas
pushl
popa
sbb
daa
xor
mov
jo
bound
ret
mov
add
adc
enter
clc
mov
mov
and
jns
mov
pop
int3
in
nop
push
mov
or
sahf
mov
rcrb
or
outsl
push
xchg
xchg
lds
mov
jg
mulb
push
cmp
lods
sub
rcr
and
in
add
std
in
ds
sbb
or
enter
or
out
push
in
push
pushf
dec
fstp
lret
imul
sti
push
xchg
mov
mov
push
cmp
in
cltd
cwtl
out
cmp
fnstsw
pop
cltd
and
popf
xor
sbb
xorl
inc
lret
cmc
and
pop
bnd
push
sub
mov
xchg
add
cli
insb
out
inc
in
lahf
hlt
pop
lds
out
inc
xchg
lcall
push
jnp
dec
mov
xor
shrl
jmp
jb
cmp
mov
dec
js
push
xchg
xchg
mov
xchg
test
mov
jno
pop
rcrb
inc
add
mov
cmp
imul
pusha
cmp
jae
xchg
add
inc
and
or
push
push
add
ss
cli
fnsave
mov
lcall
pushf
dec
push
xor
in
pop
mov
dec
std
mov
inc
add
xchg
ficoms
push
jecxz
out
mov
daa
fs
dec
xlat
movsb
daa
sti
int
cmp
sysret
mov
xor
mov
pusha
mov
pop
into
jmp
in
daa
dec
sbb
stc
pop
push
pop
xchg
in
int3
lds
test
in
aas
xchg
jb
movsb
lcall
cmp
js
and
mov
sub
movsl
cmp
sub
xchg
in
loop
sbb
sbb
decb
in
out
push
inc
inc
fildl
sbb
das
push
scas
repnz
mov
arpl
mov
ljmp
mov
in
and
cmpsl
inc
enter
inc
ss
test
xorl
pop
fdivs
in
sub
test
jmp
mov
xlat
jecxz
cmpsl
push
and
aad
xor
setae
adc
dec
jbe
loopne
cld
and
and
or
cmp
imul
scas
cmpl
lret
sbb
int3
sub
scas
xor
sub
pop
idiv
mov
lea
int
add
adc
add
rclb
daa
fs
mov
test
test
loope
fnsetpm(287
pop
pusha
push
lret
int3
iret
es
mov
sbb
or
or
mov
shll
jbe
popf
jmp
mov
xor
push
cld
inc
adc
daa
jae
xchg
dec
ja
icebp
lret
jne
repnz
push
divps
aaa
sub
jl
aaa
pop
aaa
inc
test
inc
decl
add
inc
and
dec
test
aaa
xor
repnz
pop
inc
or
and
push
mov
and
aad
ret
mov
or
mov
daa
lret
sbb
lcall
push
mov
test
xchg
and
sahf
icebp
movsb
lds
dec
lahf
push
stc
cmpsb
mov
repnz
xor
mov
cmp
jne
and
inc
mov
dec
sub
cmp
imul
mov
dec
rcl
mov
sub
xor
cli
push
adc
into
xor
mov
out
outsl
adc
in
mov
dec
push
add
xchg
pushf
push
stos
adcl
ss
mov
les
arpl
stos
les
push
notl
add
mov
mov
test
shlb
out
jp
mov
ret
cltd
roll
loope
sti
insb
pushl
mov
mov
rep
movsl
mov
cmp
ja
pop
inc
push
dec
adc
push
cmp
mov
xchg
sub
fidivs
repz
je
addr16
xor
xchg
push
fadd
jl
pop
jl
pop
cli
andl
adcb
xchg
repnz
cs
pop
and
in
bound
or
push
dec
mov
add
insl
loope
xchg
pushfw
cmc
xchg
mov
test
sbb
ret
fdivrp
sub
pushf
push
push
imul
mov
ss
xor
pop
repnz
addr16
les
test
stos
into
data16
mov
jmp
leave
scas
xor
aad
push
xor
mov
dec
lahf
push
pop
loopne
rolb
and
lret
jl
out
adc
jns
stos
sbb
cmc
in
adc
cmpsb
adc
mov
xchg
mov
pop
xlat
ds
stos
fnsave
ret
dec
sub
jnp
mov
ret
adc
leave
or
nop
add
daa
pop
flds
xchg
lret
les
xor
mov
pop
cmp
repz
lahf
mov
nop
mov
out
cmp
lods
and
sarl
inc
inc
cwtl
insb
sub
aam
or
mov
jae
and
xchg
jle
xor
icebp
xchg
in
insl
mov
sbb
ja
dec
dec
add
mov
xorb
push
movsl
sub
into
adc
pop
mov
mov
and
cmp
cwtl
jp
push
sti
or
mov
mov
cmp
ljmp
aam
sub
sbb
les
or
mov
xchg
nop
cmpl
cmp
push
jmp
ret
or
test
mov
pop
jnp
xor
cmc
leave
out
xchg
jns
loop
xchg
nop
inc
rorb
adc
mov
stos
jmp
mov
mov
inc
ret
pop
lcall
subl
stos
inc
add
jle
sbb
dec
cmp
fsubl
aas
lret
in
flds
pop
adc
lds
nop
xor
dec
jbe
cmp
mov
xor
lds
xchg
sti
xchg
gs
dec
js
imul
pop
sbb
pusha
adc
nop
mov
sub
pop
dec
enter
mov
push
lds
ljmp
xchg
sub
inc
push
mov
clc
test
pop
jnp
in
or
or
mov
sub
call
mov
into
test
cli
sub
sbbl
lcall
int3
jne
mov
cmpsb
aaa
bound
aaa
or
mov
in
ds
sbb
lods
push
cmp
jecxz
jae
mov
and
xchg
ret
ret
movsb
cli
push
adc
cmp
cwtl
decl
mov
ss
lea
test
mov
xor
sub
popa
rclb
and
lret
test
and
push
popf
out
pop
lods
lods
addb
push
cli
pushf
xor
sbb
sbb
insl
out
dec
mov
cmp
int
fisubrl
mov
xchg
int3
mov
add
xor
mov
pop
push
mov
adc
movb
push
xor
leave
rorl
xor
cmc
push
push
pop
testl
dec
mov
push
outsl
jnp
and
cltd
inc
and
add
loopne
loope
outsb
mov
fidivl
pop
adc
add
cmp
daa
jp
jae
sub
sbb
cmp
loopne
mov
icebp
cmp
shll
cli
jnp
cwtl
sub
sbbb
cmpsb
repnz
dec
sbb
jmp
das
in
pop
repnz
out
cwtl
or
loopne
int3
xchg
shl
test
sub
int3
out
xchg
dec
out
push
pop
enter
es
sub
fldl
out
and
sub
imul
xchg
dec
daa
lret
xor
jecxz
and
jecxz
jbe
pop
pushaw
sbbb
repz
in
rolb
pop
mov
popa
mov
pop
or
cmpsb
mov
pop
push
nop
sbb
cmc
fstpl
jg
push
lea
arpl
fcmove
aam
mov
mov
add
xchg
inc
test
cmp
fnstenv
aam
call
mov
push
or
mov
scas
int3
mov
std
push
iret
lods
inc
push
mov
jmp
pop
pop
cltd
das
pop
inc
dec
repnz
mov
loop
jp
sbb
stos
mov
mov
insl
daa
xor
cld
mov
lret
repz
out
shl
enter
cmpsl
xchg
rorl
xchg
pushl
pop
push
and
test
aas
mov
mov
gs
mov
test
sbb
in
mov
fistpll
loop
fldcw
add
pop
xchg
aas
lret
jmp
adc
aas
xlat
sbb
xor
js
cmp
mov
adc
into
into
mov
mov
inc
pop
jmp
mov
js
add
or
lock
push
jg
out
inc
imul
push
jno
inc
cs
push
loopne
jne
and
inc
ja
push
and
and
xor
and
ret
dec
xor
xchg
or
mov
and
jbe
int
cwtl
rcl
push
popa
and
mov
adc
pop
inc
aad
lret
xlat
xchg
and
decb
mov
lea
or
aam
cmp
cld
mov
js
sub
adc
cpuid
stos
jns
jmp
mov
inc
enter
int
icebp
lods
aaa
push
lahf
sub
loop
adc
lret
inc
jb
cmpsb
arpl
rorl
mov
movntq
sbb
icebp
pop
sub
cmp
cmp
dec
clc
fs
dec
adc
add
dec
gs
or
fsubrs
nop
add
mov
or
mov
push
sub
pop
ds
mov
lcall
push
and
lret
sahf
cmp
and
repnz
repnz
adc
and
aas
cld
mov
push
sub
test
sbb
in
sub
mov
mov
xor
inc
xchg
inc
filds
push
mov
pop
cmp
pushf
jg
outsl
jae
fimull
bnd
lret
dec
leave
jae
mov
jle
adc
and
mov
jo
push
test
jb
scas
inc
fistpl
or
mov
cs
mov
mov
or
mov
xor
add
imul
test
div
xor
imul
adc
cmc
jnp
lcall
nop
inc
add
pop
cltd
or
cmp
sub
mov
dec
pushf
mov
pop
mov
jno
test
xchg
mov
pop
lds
aad
lcall
mov
adc
cli
bound
call
test
mov
inc
inc
adc
ret
daa
scas
cmpsl
aad
lcall
push
aas
cmp
xchg
lret
jecxz
outsb
aas
fcoml
nop
mov
popf
orb
and
pusha
in
nop
dec
sub
cli
test
sbb
pop
cld
rclb
pop
mov
mov
mov
jp
insl
mov
loop
xor
cmp
mov
loopne
sub
fs
imull
adc
fcmovnu
call
fsubrs
or
jns
loop
aad
aam
mov
xor
mov
call
mov
leave
in
loope
repnz
mov
jecxz,pn
outsb
jb
xchg
mov
pop
neg
push
fwait
or
movsl
inc
jecxz
fdivrs
rorb
jle
in
push
ljmp
jne
mov
sub
and
xor
push
push
addr16
ja
xchg
mov
mov
div
pop
add
adc
and
xor
push
push
addr16
ja
xchg
mov
mov
div
pop
add
xor
inc
push
push
addr16
divl
adcb
mov
div
pop
add
adc
and
xor
push
push
addr16
ja
xchg
mov
mov
cmpsl
das
xchg
pop
xchg
xchg
cmp
not
cmpsb
mov
aad
lret
mov
inc
in
xor
pop
inc
pop
jne
jne
icebp
movl
xchg
cmc
cmpsl
in
adc
inc
and
jne
gs
sub
jge
lret
sahf
movsl
jmp
in
jno
es
pop
adc
ds
aaa
jns
jno
aaa
sti
leave
mov
shrl
dec
das
cmp
jbe
int3
fsubrl
test
adc
inc
sub
popa
insb
jns
jns
xor
or
imul
jno
mov
fnstenv
sbbb
jne
lcall
mov
test
inc
ret
and
and
pop
mov
xchg
in
xlat
push
out
sub
in
adc
add
mov
lods
gs
push
mov
xchg
sbb
pop
sub
outsb
mov
lret
xor
outsl
inc
lcall
sbb
mov
pop
cmp
mov
sarb
es
add
jb
fcoms
bound
data16
into
rol
mov
movsl
in
xor
inc
scas
rcrl
dec
inc
jle
outsb
sbb
daa
gs
cld
mov
mov
lret
in
adc
xor
daa
push
inc
sbb
add
mov
repnz
ret
mov
jb
push
ss
jne
js
dec
and
stc
xchg
mov
xchg
addb
in
adc
addr16
pop
jne
gs
xchg
movl
xchg
cmc
cmpsl
in
adc
addr16
pop
jne
gs
xchg
and
gs
mov
inc
pop
jl
idivb
in
push
jnp
jge
lods
or
jp
jb
jg
cmpsb
jecxz
inc
sbb
xchg
push
adc
xor
inc
pop
cmp
outsl
les
push
jp
ljmp
arpl
push
daa
sub
sbb
xor
das
pop
or
adc
aas
xchg
cmc
mov
shlb
test
rclb
pop
adc
idiv
sbb
pop
sub
dec
push
cs
add
out
dec
sub
pop
and
bound
cltd
add
stos
pop
mov
xor
or
sub
ljmp
daa
movsl
push
and
and
xchg
fucomi
and
loop
int
push
js
call
fwait
inc
sub
icebp
and
rcll
or
sti
fildl
addl
imul
lock
pop
loopne
jb
xor
fldl
int3
cmp
pop
ss
shr
inc
push
mov
fisttpll
xchg
pop
imul
loop
mov
pop
scas
jmp
stc
hlt
notl
shl
pop
les
rep
mov
out
jp
out
sarl
cs
test
aaa
jle
xor
into
fisttps
add
push
sti
dec
pop
mov
in
ret
pop
add
inc
xchg
mov
and
mov
mov
and
sbb
mov
aad
xchg
or
jle
mov
dec
xor
ds
faddp
mov
lds
cmp
pusha
leave
test
in
gs
xchg
fadds
xor
movsb
clc
mov
mov
xor
jge
and
call
cli
les
cmp
jb
out
shl
mov
sub
push
shr
push
popf
lret
mov
dec
lcall
sbb
push
cmp
clc
fmul
dec
pop
pop
push
push
inc
lret
xorb
in
mov
mov
mov
jno
xor
mov
leave
add
xor
divl
cld
ss
es
xor
jge
jbe
cltd
and
imul
ret
inc
and
nop
leave
jae
push
shrl
movsb
xchg
test
addr16
int3
mov
popa
iret
add
mov
inc
sub
add
pop
sbbb
popa
adc
xchg
ljmp
stos
cmp
repz
xchg
cmp
inc
cmp
mov
push
add
orl
lods
movsb
nop
dec
loope
int
ja
sub
adcb
rcll
sub
dec
mov
sbb
mov
xchg
cld
push
sar
in
and
ficomps
mov
inc
lods
xor
int3
stos
xchg
stc
test
pop
add
jae
lods
push
in
js
mov
dec
fs
adc
add
sbb
push
dec
lds
inc
je
xor
add
fldenv
divb
scas
popf
dec
pop
and
xlat
add
pop
in
aam
fcmovnbe
enter
xor
pop
fdivrp
jbe
test
add
outsb
pop
lahf
jl
jb
sbb
adc
jns,pn
insb
pop
or
inc
cmp
push
mov
jle
jl
inc
sti
leave
jecxz
in
sub
inc
fsubrl
fdivr
jle
aam
out
and
test
push
fstpl
add
cld
jecxz
test
mov
xchg
les
xor
mov
push
sub
fcomp
lock
rolb
and
dec
je
int
jo
xchg
out
fisubs
or
cwtl
out
cmp
pushf
fldt
push
xchg
in
inc
loopne
dec
pop
and
rcl
imul
fists
enter
in
sbb
and
rorl
pop
mov
js
fwait
imul
add
lcall
adc
jo,pt
mov
rcl
push
mov
pop
pushf
or
in
imul
add
mov
add
jg
stc
repnz
stos
and
jg
jl
jns
movsb
push
jne
sarl
jmp
dec
outsb
adc
es
in
movsb
call
adc
rdtsc
sarl
push
fucomip
dec
insl
pop
int3
mov
jns
mov
enter
and
adc
push
out
je
repnz
mov
mov
sbbl
sbb
lods
sbb
xor
mov
aad
out
mov
jmp
das
stos
sub
add
cmp
decl
xor
push
dec
lret
jg
xchg
jp
mov
mov
hlt
jge
jo
jae
dec
ret
fisubrs
and
mov
icebp
mov
lods
rcrb
test
add
cs
mov
sti
cmovno
into
jo
push
shll
stos
ret
pushf
sub
push
adc
outsb
xlat
adc
daa
rorb
push
stos
setae
mov
scas
jge
out
jne
jno
mov
enter
loopne
or
xchg
arpl
cmp
mov
test
pop
cld
jnp
sub
fstps
sbb
cmp
add
jg
nop
insb
fisttpll
adc
gs
mov
aad
mov
jl
mov
xor
lret
insb
and
add
dec
sbb
fbstp
inc
adc
mov
adc
imul
or
lods
cltd
es
jl
inc
arpl
and
mov
ljmp
ds
sbb
inc
xchg
lahf
jle
pop
xchg
cmp
call
sbb
adc
mov
fwait
ret
outsb
adc
mov
inc
insl
insb
mov
and
push
dec
sbb
and
aad
fdivrl
in
push
sub
fs
icebp
in
imul
ljmp
sbbl
pusha
nop
pop
dec
fldcw
mov
scas
xor
xor
cmpsl
mov
lock
flds
popa
xor
shl
loop
rcll
lock
loopne
decl
cmp
mov
mov
or
fs
pop
push
jb
daa
inc
mov
std
and
and
popf
mov
loop
imul
mov
mov
sbb
inc
int
mov
pop
mov
ljmp
imul
jecxz
mov
call
sahf
out
pop
mov
xchg
mov
mov
jl
jge
cltd
sarl
push
insb
and
mov
xchg
dec
fwait
and
adc
rolb
sti
pop
push
cmc
je
es
adc
mov
in
insl
out
fcomp
jp
sbb
xlat
iret
sub
aas
loope
mov
mov
cmp
push
lock
adc
outsb
hlt
mov
mov
fdivrs
jg
sbb
xchg
push
xchg
pop
mov
adc
sbb
stc
cmp
in
adc
mov
out
push
outsl
sbbl
insb
mov
sbb
mov
jbe
adc
in
fisubrl
push
cli
and
dec
test
jns
inc
mov
adc
ljmp
leave
imul
and
subl
sbb
pop
shll
arpl
sbb
mov
xchg
or
mov
sub
pop
ljmp
lea
push
push
lock
shlb
fcomps
out
add
mov
addr16
xchg
sbb
inc
pop
insl
dec
fwait
and
xor
jnp
sub
push
in
test
adc
fwait
int
inc
dec
cwtl
lret
stos
les
jmp
dec
push
lcall
enter
cld
jbe
ret
enter
inc
sub
stos
popf
sbb
ds
icebp
jmp
mov
jp
push
mov
xchg
in
cld
ret
fidivs
xchg
into
add
fdivs
pop
xchg
add
mov
dec
cmpsb
push
jle
inc
test
add
xchg
testl
cmp
sbb
xchg
lods
inc
or
jl
jecxz
cli
clc
jb
leave
cmpsb
xlat
test
cmc
or
sbb
leave
add
je
in
xchg
jno
popf
pop
rcl
push
lods
loope
mov
mov
push
mov
gs
in
int
rclb
jp
dec
aaa
pop
leave
inc
mov
leave
addl
xor
dec
das
adc
pop
jb
sbb
adc
sbb
mov
in
in
out
aas
mov
cmp
aas
leave
fistpll
jbe
mov
shlb
jae
mov
sub
out
fwait
and
cld
pop
pop
lods
ljmp
add
and
inc
mov
fnstenv
pop
jmp
and
cmpsb
mov
mov
mov
cmp
xor
sbb
sbbb
movsb
pop
scas
xlat
push
or
lret
aaa
out
pop
or
shl
aaa
in
int
cli
fcmovnbe
jmp
lds
and
loopne
adc
das
dec
iret
and
mov
int
rorl
in
xlat
cld
dec
inc
outsb
in
sahf
jge
popl
cmp
pop
jmp
add
testl
pushf
cli
fldt
hlt
out
push
cld
arpl
inc
loope
lods
mov
enter
fnstcw
orb
jnp
adcl
sbb
xchg
pusha
dec
mov
pop
ret
fnsave
jne
inc
push
out
xor
and
jno
xchg
dec
jecxz
in
cs
outsb
xchg
movsb
mov
iret
dec
mov
test
mov
testl
mov
sub
xchg
adc
loopne
sbb
pop
mov
lea
negb
iret
sub
xchg
out
fadd
imul
sti
idivl
lods
test
inc
insl
cs
or
sbb
outsb
xlat
push
ds
pop
xor
pop
out
movsb
loop
test
into
pop
push
xchg
xor
and
and
or
js
push
mov
fiadds
jo
pushf
mov
sti
mov
clc
mov
ljmp
out
mov
repnz
inc
inc
mov
call
xchg
das
mov
pop
adc
mov
and
clc
filds
cmc
lahf
inc
int3
int
ds
lahf
test
lahf
sub
adc
in
or
int3
push
fidivs
xchg
int3
xor
xor
mov
push
add
mov
push
js
loope
into
ret
adc
xor
aad
popa
lret
adc
jbe
lods
jg
test
movsl
jne
adc
out
ja
sahf
fwait
repnz
lret
cmp
and
dec
aas
dec
in
push
ss
lea
imul
sarb
nop
movsb
xchg
sub
xor
xor
and
xor
sub
mov
pop
push
outsb
pop
insb
rcll
call
aas
inc
cmp
scas
mov
ss
xchg
mov
mul
jmp
mov
mov
xchg
idiv
adc
scas
add
int3
jo
idivb
mov
jno
push
cmc
lcall
je
js
packsswb
ret
cmp
bound
test
or
loopne
xchg
lods
ss
insb
or
inc
mov
arpl
pop
jae
mov
mov
incb
cltd
mov
mov
lret
cwtl
add
lea
jo
nop
xchg
adc
ret
or
inc
pop
xchg
mov
sahf
push
inc
fstp
into
xchg
in
mov
and
push
cwtl
cmp
mov
xor
jns
push
push
cmpsl
jae
daa
add
enter
pusha
sbb
stos
fmull
mov
jae
das
sbb
adc
in
imul
push
jg
scas
stos
test
mov
dec
xor
inc
jmp
out
mov
pop
jle
pusha
add
push
rep
pusha
dec
scas
jb
stc
inc
push
popf
mov
mov
add
dec
cmpsb
movsl
xchg
jno
sbb
in
mov
inc
cmpsl
aas
jge
inc
bnd
leave
xchg
or
xorb
test
xchg
sbb
int3
mov
insb
test
cli
insb
push
enter
inc
std
cmpsl
jle
popf
cmp
mov
test
bnd
shlb
js
cmp
ret
xchg
xchg
and
jg
mov
xchg
fcmovnb
adcb
stc
in
repz
pop
cmpsb
push
movsl
mov
jne
gs
nop
mov
gs
mov
movsb
fcmovu
aad
repz
sub
insb
leave
data16
fdiv
xor
out
jmp
out
sbb
mov
jmp
mov
dec
rol
lock
lods
lods
popa
fdivs
or
iret
popa
je
dec
push
icebp
out
in
sub
cltd
dec
ret
xchg
jns
inc
inc
es
dec
scas
mov
pop
push
xor
push
fisttpll
jns
jno
pop
cwtl
adc
lds
shl
push
sbb
jo
pop
test
xchg
out
popf
imul
stos
pop
arpl
dec
into
testb
sti
imul
push
xor
leave
xor
cmp
int3
push
dec
push
adc
mov
pop
or
popf
mov
scas
lret
mov
mov
cmp
das
mov
cld
push
push
sub
xchg
xchg
xor
movsb
scas
outsb
adc
std
jmp
jne
in
and
adc
ret
jecxz
dec
sbb
mov
mov
push
stos
gs
subl
shll
xchg
sbb
sub
push
and
add
aad
into
mov
pop
lea
aas
sahf
mov
jmp
cwtl
xchg
into
pop
daa
cmp
sub
shll
cmp
mov
adc
icebp
fcomip
sarb
add
jp
scas
scas
xchg
mov
jg
sbb
sar
enter
push
xor
aas
push
ljmp
int
mov
insb
add
sub
pushf
std
scas
pop
push
lods
int
ja
out
bound
aad
test
adc
pop
push
mov
adc
pop
push
mov
jg
rol
mov
cmpsl
or
hlt
add
dec
clc
lret
jmp
add
mov
arpl
mov
fildll
in
jno
mov
shll
ss
push
pop
std
repz
jbe
adc
xor
ss
gs
insl
xchg
mov
dec
push
inc
lcall
fistpl
andl
sbb
sub
cmpl
xchg
sahf
push
das
add
es
inc
icebp
and
fdivr
push
jne
push
cld
sub
jns
inc
es
into
add
je
mov
push
jle
subb
and
jge
inc
mov
pop
cmp
stos
dec
mov
xchg
les
int
mov
cmp
out
xchg
dec
adc
jmp
jmp
jnp
mov
ljmp
in
ret
outsb
sub
scas
mov
sbb
mov
or
xchg
shl
call
lahf
jae
sbb
notl
test
popf
imul
mov
pop
cltd
testb
lcall
pop
negl
xor
test
aam
adc
mov
xor
pop
xor
jnp
movsl
fsubl
sub
pop
icebp
sbb
aas
adc
dec
cmpsb
push
and
dec
cwtl
into
inc
sbb
push
push
mov
push
popf
cmpsl
test
subb
lahf
xor
fnsave
and
ret
cmp
cmp
mov
xlat
pop
inc
ret
imul
mov
xorl
push
out
jp
ffree
pusha
adc
xchg
push
jno
adc
sbb
adc
cs
out
stos
imul
in
ss
sub
inc
stc
incb
mov
bound
setbe
inc
test
sbb
hlt
repz
lds
test
les
push
pop
clc
inc
pop
xor
and
dec
sbb
jne
loope
mov
xor
mov
lcall
mov
xor
lahf
dec
sbb
inc
xchg
xlat
xor
shll
jl
jmp
sub
jp
inc
mov
data16
test
packuswb
gs
or
ret
sub
push
sbb
insl
pop
imul
xchg
cmp
adc
push
dec
add
loopne
pop
add
mov
sbb
ret
xchg
lcall
lods
adc
add
nop
ljmp
cmpsl
add
ret
std
ret
lcall
outsl
lahf
sbb
mov
loopne
dec
or
lea
daa
test
orl
ljmp
xorb
inc
insb
bound
jge
dec
add
fcoml
jno
test
inc
jmp
mov
jl
mov
pop
fldenv
or
xchg
es
mov
outsl
cs
fildl
cmc
sbb
sbb
cmpsb
mov
cmpsb
sahf
mov
push
call
or
xor
aad
and
lods
mov
jbe
loope
sub
fstpl
fisubl
push
aaa
dec
ja
cmp
ja
sar
dec
movsl
jo
or
or
pop
pop
call
out
xorl
cltd
psraw
test
and
pop
ror
inc
jge
mov
lods
jne
ret
jg
adc
repnz
mov
adc
sbb
xchg
shlb
fwait
jl
int
jne
adc
movl
cwtl
xchg
xchg
cmpsb
int
inc
cmp
jne
ret
jne
ficoms
mov
sub
data16
add
imul
aad
ds
cli
adc
clc
lock
test
xchg
fwait
sub
ret
mov
lods
push
outsb
mov
xchg
stos
dec
shrl
jge
mov
mov
cmpsb
mov
adcl
cmc
hlt
adc
popf
lods
in
outsb
repnz
shrl
pop
mov
pop
sahf
frstor
inc
cmpsl
jns
sbb
xlat
lods
lret
movsb
ret
dec
scas
icebp
mov
or
jp
dec
imull
inc
push
xchg
int3
hlt
movsb
mov
sbb
pushf
stc
mov
or
dec
push
jl
jle
loop
in
push
cmp
aam
fsub
mov
mov
mov
insl
jge
sub
dec
je
inc
pusha
cmp
test
fst
and
pop
adc
test
cltd
push
and
xchg
sub
and
scas
pop
andb
icebp
repz
mov
sub
xchg
cmp
std
cwtl
jl
fldl
sbb
jns
mov
ja
mov
repz
push
push
je
mov
sahf
xor
lret
pop
pop
and
pop
and
mov
inc
dec
mov
mov
imul
dec
fisubrl
loop
data16
add
pop
sbb
mov
mov
imul
inc
aam
jb
iret
and
xor
adc
in
outsb
in
sub
and
mov
call
or
jp
mov
adc
pop
enter
or
sbb
xchg
dec
inc
sbb
je
ret
cmc
insb
jns
test
sar
mov
pop
adc
pop
mov
orb
out
cld
test
addr16
sub
in
scas
sub
out
xchg
xlat
inc
mov
shll
jmp
or
gs
ficomps
nop
jae
scas
loope
push
shll
sahf
aam
push
filds
outsb
jo
icebp
and
bound
mov
loope
dec
les
aas
jns
aam
xor
sub
hlt
or
fs
sbb
xchg
sub
clc
cmp
cmpb
dec
push
pop
cmp
sbb
insl
sbb
xor
lock
xlat
ffreep
xchg
or
decl
popf
adc
and
push
mov
mov
les
mov
rcrb
adc
shlb
es
pop
xchg
iret
mov
sbb
jp
shll
dec
push
inc
xchg
rolb
lcall
inc
ret
cli
mov
ss
xor
enter
mov
pop
or
sbb
pop
cmpl
iret
daa
leave
mov
loopne
iret
adc
leave
loope
lret
fstps
xchg
sub
fidivl
and
or
jbe
sahf
les
mov
push
mov
iret
scas
jecxz
fwait
testl
mov
scas
stos
and
mov
addr16
aam
xor
shll
ja
add
and
mov
pusha
inc
insl
out
minps
push
test
fiaddl
movsb
cmp
in
outsb
jmp
hlt
push
jge
shrl
fmulp
scas
mov
mov
xchg
mov
xchg
movl
jecxz
aam
gs
or
movsb
pop
jb
pop
jno
ret
cmpl
shrb
mov
or
test
xor
aam
dec
mov
push
mov
ss
mov
std
push
fwait
xor
xchg
or
pop
cmp
push
enter
inc
push
xchg
mov
imul
bound
dec
hlt
inc
xchg
arpl
xor
xor
dec
or
mov
mov
sub
mov
jnp
mov
pop
cltd
mov
lret
sub
jecxz
dec
cs
std
jb
sbb
dec
jg
loop
pop
push
pop
xchg
mov
daa
xchg
daa
lret
xchg
insl
cli
xchg
adc
das
mov
not
xchg
xchg
cmc
cmpsl
in
adc
addr16
pop
jne
gs
xchg
movl
xchg
cmc
cmpsl
in
adc
addr16
pop
jne
gs
xchg
mov
aad
movsl
testl
and
push
lds
jbe
pop
push
pop
jne
lea
add
test
aad
aad
cmc
cmpsl
gs
inc
cli
std
lahf
addr16
call
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
leave
jo
pusha
jns
imul
jns
add
vpsraw
jmp
das
test
jo
pusha
js
imul
adc
je
cld
leave
loopne
shr
rcrb
test
jns
dec
imul
or
sbb
lock
ret
cwtl
test
loopne
cltd
loop
out
sub
adc
clc
sub
ret
out
pop
sub
lods
not
mov
sub
outsl
and
or
ljmp
push
shll
push
mov
shlb
mov
push
js
in
dec
or
or
sbb
and
lock
loopne
mov
dec
sbb
nop
in
lds
scas
test
sbb
and
test
adc
push
clc
das
add
mov
and
movsb
cmc
mov
sub
add
sbb
push
test
mov
mov
ret
push
add
repz
lret
roll
cwtl
pop
mov
mov
xchg
test
push
addr16
jo
dec
imul
adc
sbb
lock
clc
stc
leave
jmp
mov
sub
xor
insb
inc
jle
dec
gs
jnp
xchg
aam
movsl
in
aad
mov
push
sbb
or
xor
cmp
mov
ret
cli
mov
das
jo
pusha
sbb
add
cmp
sub
f2xm1
leave
loopne
shr
rcrb
test
pusha
jns
imul
adc
add
lock
loopne
shr
rcrb
test
jae
xlat
cmp
mov
fstpl
into
imul
arpl
ss
daa
in
outsl
insb
lock
xor
jno
dec
mov
fdivr
dec
xor
fwait
repz
ds
or
sahf
mov
inc
dec
out
paddd
stc
inc
sub
push
inc
pop
test
cmp
movsb
cmpl
popa
jp
cmpsl
adc
adc
mov
repz
fiadds
out
imul
xchg
rorb
jp
or
inc
mov
js
xchg
outsl
clc
mov
dec
sbb
pushf
sbb
xor
bound
mov
jg
aas
and
jns
add
inc
call
out
sbb
rcll
arpl
mov
imul
mov
in
movsl
add
add
fcomps
ret
mov
aad
mov
xchg
dec
hlt
mov
jbe
jo
cmp
js
and
and
enter
loope
je
loop
cmp
add
xchg
or
leave
or
cwtl
loopne
mov
aas
mov
jno
mov
in
add
cmp
andl
aas
add
mov
cmpsb
mov
mov
pop
repz
xor
add
clc
out
inc
pop
or
add
cmp
movsb
lea
std
xchg
popf
fs
int3
les
mov
mov
sub
sti
dec
mov
arpl
rcpps
ret
push
int
jbe
xchg
mov
orps
and
pusha
push
mov
cmpb
es
inc
push
sbb
shr
push
mov
fistpll
xorb
jecxz
xor
out
test
pop
dec
xchg
insb
adc
jle
ret
xchg
fistpll
xorb
addr16
out
fbstp
xchg
lahf
aam
leave
xchg
loopne
mov
add
out
fdivr
sub
xchg
test
inc
cmpsl
push
inc
pop
sub
push
pop
xor
movsl
mov
sub
add
xor
insl
into
mov
add
xchg
adc
ret
and
mov
and
jb
jno
xor
cltd
xchg
xchg
jb
xchg
imul
jmp
push
adc
mov
gs
push
ds
xchg
jg
push
mov
cmp
mov
cmpsb
scas
dec
xlat
mov
mov
in
xchg
mov
orb
push
fidivrs
sbb
cmpsl
lods
inc
test
test
fucomi
shr
gs
faddp
hlt
mov
xor
sarl
pop
data16
aaa
cltd
ficompl
jmp
imul
xchg
jne
xor
xchg
pop
scas
icebp
in
stc
jne
inc
cltd
jecxz
out
inc
mov
mov
xchg
sub
test
push
mov
cmp
adc
jecxz
dec
mov
sahf
rcr
add
add
scas
xor
push
mov
add
mov
push
shll
mov
notl
in
bound
fimull
dec
popf
xor
sahf
arpl
adc
xchg
adc
lods
and
add
enter
stos
movsb
std
mov
out
test
mov
push
ds
mov
xchg
adc
loopne
lcall
out
not
inc
mov
lock
push
xlat
enter
inc
sbbb
pop
addb
test
fcmovnu
filds
adc
mov
pop
shrl
sub
or
sub
pop
shll
aas
xchg
sub
mov
movsl
xchg
xor
movsl
xchg
and
stc
test
clc
or
pop
mov
xchg
es
adc
push
mov
lods
pushw
mov
in
aad
outsb
dec
or
ret
in
pushf
in
data16
xchg
lods
push
jmp
popf
orb
repnz
dec
mov
shlb
lahf
mov
mov
push
loopne
leave
xor
or
scas
test
lods
aas
cmc
push
loopne
scas
cmp
and
outsl
jo
xchg
adc
mov
sub
or
xor
in
add
dec
and
add
cli
cmc
insl
dec
dec
in
aaa
push
mul
inc
imul
ret
jb
insb
sub
cmp
mov
xchg
add
sbb
mov
je
xlat
inc
lcall
das
insl
das
cmpl
mov
nop
jmp
icebp
sub
mov
push
cmp
add
push
or
push
adc
push
add
adc
inc
stos
shlb
testb
fmulp
mov
cs
xor
pop
sub
mov
ror
and
pop
ret
jnp
dec
mov
sbb
stc
sbb
adc
mov
stos
jle
add
cmp
jnp
xor
dec
orb
and
adc
lcall
or
pop
mov
adc
adc
shlb
and
jle
xor
loop
mov
dec
in
mov
fidivl
push
insl
mov
adc
pusha
in
inc
fldt
fnstsw
and
dec
jl
jle
add
aam
bound
inc
cmc
inc
adc
xor
push
jnp
xchg
fimuls
mov
dec
and
stos
fninit
push
sahf
push
loope
fidivrl
push
push
in
sbb
push
sub
cwtl
mov
add
cmc
mov
and
rep
xchg
sbb
and
push
loop
ss
aas
adc
pop
sbb
adc
fwait
xor
into
cmp
cltd
std
xchg
sbb
xchg
lret
pop
add
pusha
pop
cs
aad
push
push
mov
bnd
data16
cmp
adc
jnp
scas
imul
pop
mov
fwait
orb
inc
dec
push
or
or
insl
rclb
loop
and
lds
fldl2t
sub
je
or
inc
fists
inc
shl
add
pop
addr16
jl
lods
test
inc
test
cmpsl
mov
outsb
sub
inc
jl
sbb
pop
popf
inc
insl
and
popf
jns
mov
int3
pusha
pop
iret
sti
inc
inc
dec
mov
aad
push
xchg
mov
hlt
shll
cmpsb
das
dec
inc
and
pop
repz
jae
cmp
jno
pop
sub
rorl
leave
dec
movsb
jge
sbb
cmp
popa
in
loop
xchg
mov
sbb
cmp
pop
xchg
adc
inc
stos
es
mov
sbb
cmpsl
mov
shll
or
outsb
pop
mov
rolb
int3
lds
aaa
testl
xor
stc
sbb
cmp
ss
sbb
inc
jecxz
mov
rorb
outsl
mov
loopne
repz
sub
inc
es
das
shlb
xchg
out
jecxz
cli
stos
ds
data16
cmc
add
mov
in
mov
push
xchg
in
inc
cmpsb
in
sbb
dec
int
or
jae
movsb
pop
sbb
scas
popa
cld
xchg
iret
data16
loopne
or
pushf
js
cld
out
dec
daa
movsb
sbb
mov
or
aam
aaa
or
shlb
mov
int3
fldl
sbb
push
sub
adc
sahf
sub
dec
mov
push
or
xchg
enter
cli
mov
fnstcw
shlb
mov
stc
icebp
cmp
mov
sub
or
stc
clc
int
pop
xchg
lea
cmp
ror
aad
out
xchg
je
xor
xchg
aad
shrb
dec
addr16
clc
jbe
icebp
imul
scas
ret
imull
scas
cwtl
inc
and
mov
or
fwait
pop
jmp
add
push
adc
fisubs
or
add
out
adc
and
mov
xor
pop
jp
pop
enter
xchg
sub
sbb
push
add
sbb
in
inc
cs
mov
insl
imul
adc
repnz
std
lahf
in
subl
mov
ds
call
imul
test
lods
jo
enter
jno
mov
in
shl
sti
jbe
xor
add
push
sub
aad
and
jns
dec
pop
jmp
mov
cld
aam
in
jl
cmpl
push
jnp
jp
stos
sti
popf
cltd
adc
push
aas
shr
roll
sahf
data16
mov
stc
jmp
sti
cmpsl
mov
nop
xchg
in
ja
je
loope
pop
fwait
xchg
sub
out
cwtl
jmp
ds
xchg
int3
mov
sub
push
aad
sub
xchg
adc
sub
stos
xchg
ret
test
dec
mov
sbb
push
jl
das
jmp
fiaddl
dec
push
or
jge
xor
fstpt
push
shll
pop
insb
loope
mov
loop
mov
dec
xor
aas
add
repz
adc
out
sub
adc
repnz
sbb
cli
int3
movsb
jb
pop
cld
cmpsl
lock
push
pop
xchg
jne
movsb
mov
test
rorb
jmp
sbb
cli
enter
sub
push
test
inc
cmp
add
cwtl
xchg
adc
xchg
test
jmp
call
mov
inc
xchg
push
mov
mov
pop
mov
jg
roll
push
adc
mov
dec
std
jmp
stos
les
or
mov
imul
push
loop
repz
push
push
nop
add
xor
subl
mov
mov
push
and
call
dec
jmp
shr
inc
insb
jns
ds
jno
les
mov
mov
jmp
or
adc
cmpsb
or
in
imul
mov
jl
dec
mov
addr16
xor
mov
push
loope
pop
leave
rorb
add
repnz
push
outsl
cmp
fstpt
fsubs
or
and
jmp
sbb
popf
and
dec
loope
mulb
jnp
mov
repz
cmpsb
cmpl
pop
sahf
rclb
pop
pop
or
and
mov
fisttpll
sbb
ss
lock
push
dec
mov
jns
or
in
mov
push
dec
jmp
lcall
mov
sub
push
push
int3
test
les
fidivrs
mov
lahf
cmp
dec
sub
fucomi
inc
jmp
cmp
pop
popa
clc
mov
loope
cmc
or
dec
lret
pop
xor
outsb
jns
cmpsb
pop
ret
adc
insl
sub
jg
rorb
cmp
stos
addr16
inc
loopne
test
inc
into
mov
aaa
ret
es
insb
jo
dec
je
fistps
inc
add
aam
xchg
ficompl
out
jmp
mov
mov
popa
sbb
in
inc
sbb
dec
mov
cltd
dec
pop
into
jmp
mov
inc
out
adc
cmpsb
jbe
data16
outsb
daa
rcr
push
data16
pop
cltd
into
sbb
push
leave
or
je
xor
adc
fwait
les
mov
fmuls
lods
inc
adc
mov
out
fisttpll
in
lcall
pop
cwtl
xor
adc
shr
jl
add
loopne
dec
sub
insb
dec
adc
xchg
adc
int3
jbe
mov
aaa
xor
xchg
andl
rorl
mov
jge
je
fisttps
push
xor
xlat
pop
sub
adc
popa
aaa
sbb
push
cmc
fdivr
jns
andb
inc
lret
xchg
lods
jl
jbe
sbb
xor
xor
lea
and
jns
fwait
add
testl
mov
mov
inc
call
mov
sub
or
loop
ja
xor
mov
and
mov
xchg
xchg
adc
jle
out
outsb
repnz
out
pop
dec
push
imul
mov
inc
adc
push
mov
cltd
dec
jno
orl
xchg
xchg
inc
mov
push
xchg
in
jae
xor
xchg
addr16
push
mov
arpl
and
mov
loope
or
in
xchg
pushf
mov
pop
imul
data16
insb
mov
mov
rolb
inc
sbb
mov
push
loope
sbb
dec
adc
lret
ret
aam
lods
push
out
pushf
insb
add
ds
nop
cmpsb
cld
and
dec
pop
mov
adc
jns
pop
iret
shll
jmp
mov
jp
lret
fisttpl
xchg
cmc
xchg
push
shlb
push
sub
mov
nop
pop
popa
cmp
inc
or
shl
push
mov
ficoml
je
in
sbb
mov
imul
jbe
sub
outsl
jle
cmp
xor
jp
cmpb
fstl
div
lcall
cmp
add
adc
fnsave
lea
repz
pop
add
jnp
pop
pop
ljmp
arpl
mov
cli
pop
test
or
bound
jecxz
xlat
icebp
lret
pop
mov
add
shlb
or
push
pop
mov
ds
adc
in
mov
dec
dec
pop
popa
pop
push
stc
cmpsb
mov
dec
mov
pop
stc
xor
push
dec
nop
adc
inc
ret
out
xor
sbb
xchg
loop
cmp
mov
add
jo
or
fildll
stc
cli
sbb
dec
outsl
adc
add
test
loop
pushf
ljmp
xchg
mov
xlat
adc
lahf
mov
inc
insl
bound
movsl
repz
fs
dec
add
pop
dec
push
icebp
es
scas
std
jno
clc
or
jmp
xchg
nop
cmp
sub
cmp
mov
xchg
inc
cmp
roll
add
mov
enter
nop
aas
jecxz
pop
pop
sti
add
sub
and
pusha
repz
push
cld
jl
dec
ret
add
xchg
adc
cmp
push
in
cltd
cli
mov
lock
loopne,pt
pop
pop
les
ds
xchg
hlt
adc
sbb
cltd
repz
in
sub
mov
xor
ret
cmp
jno
sbb
mov
sbb
jg
mov
fstp
adc
sti
cmp
lock
mov
dec
cmc
incl
insl
in
or
test
rolb
jns
test
mov
sub
xor
lock
push
xchg
test
movsl
mov
mov
scas
js
outsl
repnz
inc
mov
and
call
adc
dec
mov
dec
addl
jle
mov
insb
lret
xchg
test
cmpl
fimuls
fildll
dec
jns
sbb
or
jns
test
js
adc
pop
or
lds
mov
sub
push
div
jecxz
imul
xor
adc
and
clc
jne
pop
mov
cltd
stos
add
inc
lds
fs
cmp
jmp
dec
adc
imul
scas
lea
mov
insb
jmp
dec
repz
lcall
add
clc
subb
loope
and
pusha
out
mov
insb
push
or
rol
aam
mov
mov
ret
les
loope
cmp
decb
and
jg
int
dec
push
clc
movsl
pusha
in
aas
sbb
sbb
imul
pop
pop
dec
loope
sub
sub
add
jle
inc
lods
push
ja
pop
lock
or
jo
divb
sub
cmp
sub
mov
mov
lcall
jle
pop
xor
sub
icebp
push
aad
or
inc
jecxz
mov
repnz
test
cs
dec
pop
mov
jb
jmp
fbld
aaa
lret
jo
iret
adc
mov
cmp
adc
add
in
insb
dec
push
in
mov
or
repz
arpl
lcall
jmp
insb
mov
mov
mov
outsl
fisubrl
sub
loope
stos
mov
dec
movsb
mov
imul
inc
jns
xor
in
push
iret
inc
mov
inc
xorb
push
push
lock
lret
cmpsb
sub
mov
sbb
fisttps
mov
jp
test
seto
ror
clc
mov
fwait
rolb
popf
inc
roll
cs
adc
mov
popa
push
roll
sbb
sub
mov
xor
rorb
dec
das
and
ret
les
xor
addr16
inc
push
test
xlat
cmp
addb
add
clc
dec
and
lods
mov
dec
daa
jp
push
rolb
pop
sub
stos
mov
gs
cmp
lret
push
imul
aad
hlt
and
add
stos
rcll
jmp
push
inc
mov
xchg
jmp
cli
or
fwait
inc
add
mov
int
xor
pushf
test
mov
insl
dec
dec
rorb
jg
lods
sub
xchg
and
das
imul
or
cmpsl
imul
lods
mov
inc
or
adc
clc
adc
lods
rorb
test
mov
jle
add
mov
lea
jp
aas
dec
int
ja
dec
push
inc
std
js
jo
push
sbb
test
inc
push
xor
arpl
out
scas
fbld
ret
andb
jge
pop
xor
jle
test
movsl
stc
xchg
lds
shl
call
jb
xor
cli
mov
pop
fmull
int3
jecxz
test
and
pop
adc
add
sbb
jne
xlat
jb
mov
fwait
mov
mov
inc
out
or
stos
mov
jno
leave
sub
mov
xor
pop
cmp
negl
fcmovnb
mov
bound
loopne
mov
repnz
inc
push
lcall
mov
sub
rorb
sti
push
je
xchg
push
and
add
mov
adc
inc
sti
fdivl
stos
clc
mov
jb
fidivs
add
in
xchg
push
inc
add
push
mov
dec
pop
lods
cltd
or
jmp
aam
and
sbb
test
lods
fbld
adc
loope
mov
in
or
fstpl
cmp
mov
btrl
push
std
fwait
ja
test
push
rcrb
sub
clc
pop
js
xchg
test
push
imul
lods
pop
sub
or
pop
cmp
jmp
hlt
daa
mov
popf
into
dec
cmp
jb
test
inc
push
cmp
ret
ja
pop
fiaddl
test
cmp
inc
in
out
mov
dec
scas
icebp
orl
enter
fldenv
mov
mov
mov
lahf
fsts
sahf
daa
fadd
lahf
jne
dec
inc
enter
addr16
rcrl
xchg
sub
pop
adc
xchg
ljmp
mov
fcmovnb
stos
out
ss
mov
stos
cmp
inc
push
mov
dec
fcoml
inc
sub
push
and
pop
das
imulb
out
xchg
lock
inc
loop
imul
mov
pop
lock
xchg
cmp
lcall
mov
dec
std
lods
xor
pop
les
call
ja
sbb
pop
std
cmp
push
adc
in
jg
insl
jnp
xor
sub
in
lret
mov
mov
ss
in
lahf
push
dec
jno
loope
pop
out
mov
mov
jge
test
hlt
xor
stos
sarl
mov
mov
stos
xor
jno
adc
test
pop
js
lods
sub
mov
ljmp
add
mov
mov
cltd
mov
mov
adcl
ja
popf
ret
and
jno
push
cmpsb
or
cmp
negb
cmp
popa
es
ljmp
dec
icebp
push
out
add
xor
loop
push
sbb
pop
rolb
adc
faddp
mov
fucom
add
cmp
jl
mov
push
jl
mov
pop
dec
arpl
es
xor
pop
fldenv
sti
test
xchg
fstl
mov
in
cmp
ds
jnp
and
imul
add
aas
adc
mov
cmp
pushw
popf
xor
mov
mov
sbb
sti
or
jb
popa
in
cmpsb
hlt
imul
ss
fcompl
push
mov
lods
mov
lahf
mov
rolb
xor
jb
std
pop
sub
mov
aad
ret
ret
cmp
xor
xor
ss
bound
push
adc
mov
cwtl
jne
aam
xlat
jp
out
in
fidivs
fldenv
add
test
sarl
mov
fdivr
jmp
aas
sbb
test
lods
int3
xor
pop
mov
and
insl
sub
xchg
pop
or
pusha
and
push
add
sub
in
and
addl
jle
ja
popa
lret
sarl
xor
imulb
mov
into
cmp
add
shll
fadds
icebp
jne
cmc
and
addl
test
inc
pop
rcl
pop
add
push
pop
mov
loopne
adc
inc
sbb
or
cmp
sub
f2xm1
leave
loopne
shr
rcrb
test
pusha
jns
imul
adc
add
lock
loopne
shr
rcrb
test
pusha
jns
imul
adc
add
lock
loopne
shr
les
xchg
test
pop
je
fs
imul
adc
rcr
leave
dec
push
shr
mov
cmp
filds
push
decl
dec
hlt
pop
mov
fstps
push
push
mulb
faddl
lods
adc
and
xor
int3
insb
aam
in
hlt
pop
test
cmp
or
jns
in
push
cld
dec
int
faddl
jo
and
xor
push
insb
push
jl
dec
xor
fdivrl
or
sbb
in
cmp
add
dec
loopne
jmp
hlt
or
pop
cmpl
xchg
rcl
mov
outsl
push
add
call
popa
jae
pop
enter
fsubl
jge
aam
imul
cld
test
leave
cmpl
mov
or
in
rcl
mov
add
stos
std
fwait
lret
sti
push
cltd
adc
imul
lods
imul
add
cld
push
adc
add
pop
mov
pushf
inc
lods
sub
jnp
pop
shl
pop
cld
sbb
adc
fwait
xor
idiv
adc
je
inc
jl
xor
push
push
or
mov
xchg
mov
mov
adc
popa
mov
imull
in
cwtl
pop
test
cmp
or
sbb
in
cld
mov
lods
or
insb
mov
sbb
mov
aad
and
lahf
adc
sti
push
jae
les
pop
adc
outsl
cmc
jns
pop
xor
mov
stos
sbb
push
jmp
out
xchg
sub
cmp
or
sbb
in
push
cld
fs
je
add
adc
and
xor
les
in
hlt
pop
test
cmp
or
sbb
in
push
cld
fs
je
add
adc
and
xor
les
dec
and
mov
pop
cld
in
inc
mov
xchg
dec
aaa
xchg
pop
movsl
or
pop
mov
icebp
pop
mov
shl
or
pop
imul
mov
push
and
imul
rorb
xchg
xchg
mov
inc
nop
xor
or
je
sbb
stos
dec
sub
xor
out
xor
jle
push
ljmp
xor
stos
gs
dec
je
adcl
cmpsl
sub
ficomps
les
scas
fisubrs
xchg
push
and
inc
sub
xor
lcall
sti
cmp
mov
sub
lret
pop
xchg
or
lea
xchg
leave
les
loop
jl
dec
ret
divb
xor
notb
cli
lods
xor
popf
add
das
adc
pushf
cli
inc
aaa
cs
lds
cltd
cmpsb
mov
in
xlat
mov
jmp
cli
push
cwtl
fs
aam
sti
scas
inc
adcl
jne
mov
push
data16
nop
adc
sarl
inc
dec
lock
sub
stc
out
mov
lock
pop
dec
cmp
mov
add
xor
nop
or
xchg
adc
roll
enter
adc
push
pop
jg
leave
push
scas
lcall
fldcw
xchg
sub
push
dec
into
and
dec
outsb
dec
push
push
stc
rcl
push
and
dec
lea
shrl
pop
int
and
imul
dec
test
test
into
stos
lret
lds
adc
mov
decb
adc
mov
jb
scas
sub
in
es
xor
fidivl
bound
sahf
mov
mov
xchg
push
push
leave
inc
sbb
das
loop
out
cmp
sub
dec
add
aam
inc
call
data16
jmp
adc
mov
and
xchg
xchg
mov
inc
dec
xor
sbb
dec
mov
aad
jecxz
lahf
ret
mov
push
movsb
xor
mov
les
inc
clc
lods
add
loope
fwait
mov
pusha
out
imul
mov
fsubrp
mov
cmp
push
ret
mov
test
cmp
cmp
xchg
loop
mov
mov
adc
adc
or
cmc
sbb
and
or
add
lcall
daa
in
and
movb
lea
fstps
jo
out
sub
pop
add
jmp
jle
sub
shll
movsl
lea
popf
dec
mov
mov
push
push
in
jno
xchg
mov
mov
mov
fsubl
cwtl
icebp
xchg
scas
xchg
aaa
xchg
and
push
xor
aam
movsl
cld
jmp
inc
fs
cmp
outsb
subl
jp
sub
jp
or
cmp
js
ljmp
outsb
or
xor
les
and
push
add
push
lods
push
jb
mov
pop
rolb
mov
lret
mov
ss
dec
lret
sbb
loope
sti
in
fs
push
stos
notb
jae
add
pop
jle
cwtl
rol
xchg
aaa
sub
int3
pusha
dec
dec
dec
cli
cmc
mov
mov
mov
inc
pop
fnstenv
sti
xor
jg
and
inc
jbe
loopne
mov
or
pop
jge
xchg
shll
inc
scas
push
fwait
call
popa
jbe
fsqrt
loopne
sbb
out
and
pop
std
mov
or
cmp
sbbb
cmp
inc
mov
inc
in
testl
xor
rol
xchg
pop
mov
fstps
in
xchg
pop
push
popa
jb
jecxz
andl
jge,pn
adcb
gs
dec
xlat
xchg
daa
addr16
rcl
out
jne
xlat
inc
push
nop
test
arpl
std
test
xor
inc
mov
out
mov
enter
icebp
adc
in
mov
lcall
aas
aam
dec
mov
js
jns
add
cltd
mov
jecxz
push
aas
jp
xor
mov
pushf
cltd
mov
pushf
sbb
std
xor
jb
stc
push
fdecstp
push
cmp
pushf
push
xchg
addl
jbe
mov
ss
leave
loop
xchg
or
or
sbb
or
dec
xchg
add
scas
cwtl
cmp
gs
pop
mov
ds
mov
bound
sti
out
push
sbb
sbb
xchg
mov
pop
push
push
mov
in
ja
jl
daa
add
shrl
or
rcrl
clc
jge
aad
pop
shlb
add
test
jmp
inc
cs
mov
iret
adc
mov
sbb
mov
out
repnz
mov
dec
mov
mov
dec
jae
jle
lods
popl
sti
push
rcll
pop
movsb
out
sub
loop
pushf
repnz
xchg
adc
getsec
mov
mov
or
ds
pop
sbb
dec
lods
adc
imulb
jnp
or
dec
dec
lret
inc
lds
mov
cmc
jne
clc
jp
dec
mov
out
clc
inc
leave
sarl
add
addr16
in
pop
and
scas
int3
jp
dec
lods
es
cmp
jae
inc
pusha
pusha
jmp
sbb
adc
das
cwtl
stos
adc
jp
mov
jae
sub
push
add
mov
pop
fistpll
and
and
adcb
mov
mov
jno
inc
sbb
pushf
repz
mov
adcb
jae
sub
std
adc
jo
dec
jnp
mov
pusha
fs
pop
ret
and
int
lahf
xchg
sub
mov
cli
jbe
sbb
ret
sbb
inc
jne
sub
loop
xor
popf
pusha
mov
mov
mov
dec
or
and
imul
fcoms
or
pop
mov
aad
xchg
xorl
push
xchg
fidivl
notl
in
or
push
sahf
nop
sbb
push
call
pop
aaa
lea
adc
push
loope
push
rclb
dec
cmp
push
ja
mov
test
test
add
or
repnz
cli
dec
sub
mov
cltd
test
test
lret
out
divb
mov
xchg
jmp
scas
xchg
or
mov
insb
ss
roll
pusha
xor
lods
enter
push
push
jo
adc
mov
call
adc
xchg
mov
rorb
xor
dec
insb
pushf
and
push
mov
scas
cmp
sbb
pop
cmp
xchg
adc
pop
or
push
cmp
ret
cmp
dec
xor
and
addb
adc
mov
dec
ret
mov
addr16
pop
xchg
enter
cmp
mov
fidivs
push
rorb
add
les
imul
test
jns
inc
cld
insb
or
mov
or
popf
inc
push
mov
xor
sarb
or
xor
aaa
pop
sub
mov
pop
je
mov
shrb
inc
shl
and
dec
inc
rcl
mov
rcrb
cli
cmc
orb
cltd
add
imul
sbb
imul
pop
mov
rol
pop
mov
mov
sub
push
out
out
sub
and
shlb
sbb
mov
jle
popa
pusha
out
mov
add
sbb
cli
pop
xlat
hlt
ds
shrl
pop
inc
xor
inc
loope
loopne
rorl
jecxz
imul
mov
inc
cmp
mov
aas
push
jle
notl
ror
int3
aas
das
mov
mov
jecxz
mov
das
inc
cmp
adc
xchg
cwtl
and
add
cmpb
adcl
fs
inc
jge
call
insb
loop
jge
mov
sbb
mov
sub
dec
pop
jmp
mov
jne
rcrl
push
mov
pop
sbbb
shr
in
fnstsw
movsb
jmp
out
add
adc
fbstp
fldl
aas
xchg
dec
cli
cmpsl
xchg
cmpsb
jae
or
add
push
mov
cmpsl
add
push
jbe
inc
xorb
mov
dec
je
mov
add
aas
std
mov
lret
add
xchg
pop
push
jmp
in
push
xorb
icebp
jno
in
out
xchg
insl
lods
adcl
mov
sahf
out
in
inc
leave
cmc
cltd
mov
nop
mov
rcll
jl
fcmovnu
xor
cmp
xlat
sub
fsts
loopne
lods
scas
xor
jne
data16
test
push
pop
inc
enter
dec
pop
jb
test
xchg
inc
mov
mov
xchg
dec
jmp
mov
pushf
fstpl
daa
mov
and
mov
in
leave
xchg
mov
shr
add
add
sbb
cmpsb
push
pop
inc
xor
jb
loope
adc
cld
int
lcall
adc
push
lock
inc
aam
repz
sub
cld
aam
mov
sub
lock
je
jae
rclb
scas
mov
test
push
data16
pushf
fucompp
lcall
loope
scas
arpl
in
cmpsb
and
out
jp
inc
cli
jp
int3
adc
test
xchg
loop
and
popa
in
pop
mov
shrl
mov
jae
js
adc
cmp
test
dec
jns
fisubrs
ret
jge
repz
loopne
adc
inc
out
and
push
ret
inc
sub
xor
cwtl
or
sbb
add
loop
push
inc
popa
sahf
neg
dec
daa
cmp
cltd
int
pop
mov
xor
movsb
icebp
push
or
insb
out
aaa
aad
daa
nop
in
mov
ret
filds
cmp
jne
sbb
xchg
stos
xchg
fisubrs
jb
in
sbb
inc
push
and
addr16
loope
test
fbld
dec
pop
jge
cltd
push
mov
cmp
outsb
cmp
adc
fsubl
ja
in
pop
fsts
mov
cmpsb
lea
aad
adc
add
test
inc
sub
sbbl
in
mov
loope
cld
mov
inc
negb
clc
cmp
out
add
stos
dec
dec
jcxz
mov
pop
add
mov
pop
in
rol
sub
cmp
push
mov
add
clc
jno
xchg
pop
into
pop
jno
icebp
dec
push
mov
jno
cmp
into
subl
insl
pushf
or
cmp
ret
mov
mov
cmpsl
daa
mov
lea
shrl
jbe
pop
in
cmp
neg
and
push
mov
idivb
dec
sbb
mov
push
loop
push
cs
adc
imul
rcr
lea
daa
ja
fdivs
mov
sub
icebp
fisubl
rol
mov
or
lret
idivb
nop
lahf
sbb
adcb
cmp
push
ret
loope
mov
lods
xlat
sub
mov
xorb
repnz
and
es
dec
xor
mov
push
jg
ficomps
adcb
and
sub
dec
push
scas
xlat
insb
and
sbb
xor
cli
ret
push
cmp
addb
dec
jl
push
push
or
dec
sub
jno
dec
mov
push
xchg
adc
inc
lret
test
xor
cmpsb
orl
xchg
push
sbb
mov
ja
jmp
push
xchg
mov
pop
dec
adc
dec
xlat
mov
leave
xor
out
jbe
stc
int
mov
pop
xchg
mov
xchg
outsl
sub
dec
cmp
inc
rcrb
shll
aam
out
xchg
enter
xor
or
add
cld
fildl
mov
cltd
push
ja
mov
roll
inc
inc
mov
fs
mov
fimuls
cltd
fldt
mov
cmc
popa
imulb
dec
cmp
hlt
ja
mov
sbb
roll
ljmp
mov
and
add
add
mov
out
mov
jmp
inc
ret
cltd
jmp
das
enter
sarb
lods
mov
scas
pop
fldcw
leave
in
int3
cmp
fstl
faddl
in
dec
cs
repnz
ret
lret
push
fwait
or
mov
scas
lods
push
pop
shl
scas
xchg
outsb
imul
push
inc
xchg
inc
rcl
add
mov
mov
outsb
cwtl
daa
rorb
pushf
mov
popf
stos
pop
lret
inc
or
mov
adc
loopne
xor
pop
dec
inc
fucomip
add
jle
fcomps
mov
ss
rorl
in
or
cmp
shll
cli
lret
ficomps
xor
icebp
jae
mov
cs
scas
add
fistps
jb
adc
mov
lods
adc
std
daa
mov
int
insl
sbb
nop
into
mull
mov
mov
mov
xchg
mov
or
or
inc
add
push
sub
rol
into
dec
cwtl
repnz
push
mov
in
xor
pop
lcall
cmp
sub
jne
mov
pop
jne
mov
and
mov
dec
scas
pop
adc
sahf
mov
lret
jo
pause
inc
mov
mov
sbb
push
mov
sti
fiadds
and
xor
dec
outsl
mov
sub
adc
mov
icebp
mov
ljmp
data16
flds
add
in
ljmp
inc
in
push
xchg
int
mov
sbb
in
or
mov
outsb
jns
sbb
sbb
movsl
call
mov
lods
movsb
pop
mov
sbb
and
outsl
mov
mov
outsb
dec
movsl
mov
xchg
sar
xchg
jns
in
jge
sbb
lods
orb
cli
ljmp
scas
add
pop
movsl
pusha
divb
xchg
and
push
ja
mov
mov
and
pusha
mov
mov
hlt
jns
roll
adc
ljmp
or
push
push
pop
pop
mov
test
out
jp
imul
je
inc
sbb
jae
add
rolb
mov
jle
mov
aas
out
push
outsb
dec
mov
pop
dec
mov
cmp
cld
lcall
pop
pop
cmc
cmp
movsb
out
pop
fisttpl
mov
add
out
insb
mov
jg
inc
daa
jmp
jle
es
push
mov
push
mov
popa
and
daa
adc
xlat
aad
andb
dec
std
cmp
push
jp
jae
icebp
push
xchg
sbb
pop
sar
ja
sti
mov
loopne
xchg
adcl
aas
sti
push
enter
idivb
xor
int
push
mov
or
popa
mov
leave
clc
test
dec
dec
addr16
jo
in
cmpsb
xchg
mov
outsl
inc
fildll
dec
jae
jg
cmp
mov
int3
repz
dec
mov
shll
in
sbb
fwait
orb
xchg
jb
ja
adc
insl
cmp
jns
dec
mov
inc
jnp
adc
test
add
mov
sbb
popf
mov
nop
cli
dec
out
pusha
lea
jne
push
xchg
inc
je
sub
sub
stc
sub
xchg
pop
mov
cmp
mov
rol
lea
jae
xchg
sub
divb
push
sub
loopne
add
dec
jge
or
push
loopne
std
mov
jecxz
push
dec
cmp
or
add
lods
xchg
mov
fcoms
mov
fiaddl
bound
stc
fs
cmp
jne
xchg
sbb
cld
mov
adc
fmul
xchg
imul
mov
in
mov
scas
adc
mov
xchg
mov
inc
pop
imul
jecxz
mov
testl
mov
cs
stos
xchg
dec
rcrb
dec
xlat
repnz
mov
fiadds
scas
jb
sub
data16
sub
mov
pop
dec
xchg
push
jl
mov
in
and
ret
into
out
out
cld
gs
out
or
add
push
push
add
insb
sahf
test
push
imul
ret
jb
adc
jnp
cmp
push
sub
jle
push
inc
jb
idivb
sbb
fbld
xchg
shll
nop
lahf
inc
fdivrs
ss
jmp
and
enter
js
lret
push
mov
mov
and
and
inc
pop
cmc
inc
sub
into
xchg
aaa
jge
into
in
xorl
pop
cmp
xchg
pop
mov
add
xchg
rolb
pop
add
out
sub
inc
inc
std
int3
lcall
sbb
jne
mov
sub
lods
adc
dec
into
sub
adc
xlat
jnp
sub
ficompl
jp
or
test
hlt
mov
cmp
sbb
jno
aas
out
add
ljmp
into
push
cmc
mov
in
mov
mov
or
jl
dec
xor
imul
mov
cmp
or
loopne
out
pop
sahf
lahf
adc
or
testb
pop
mov
jnp
adc
or
out
fstpl
cmp
mov
std
fildll
mov
in
ret
dec
das
pop
test
mov
mov
adc
xorb
inc
ficomps
cmpsb
inc
adc
hlt
das
or
hlt
loope
enter
aad
mov
jle
insb
dec
call
dec
push
dec
adc
test
addr16
movsl
add
icebp
js
push
mov
push
fiadds
in
xorb
cli
jno
out
pop
jne
adc
dec
cs
xchg
and
push
dec
xchg
pop
cld
jecxz
sbb
jbe
add
jns
inc
adc
jnp
cli
call
clc
rorb
nop
outsb
jl
inc
or
ret
or
or
mov
lahf
mov
cmp
testl
scas
xchg
mov
std
mov
and
clc
jg
push
mov
jecxz
call
dec
add
fistpll
ret
push
adc
addb
hlt
xor
sbb
mov
jb
jl
sub
mov
out
xchg
xlat
lcall
testl
movsb
js
into
mov
mov
cmp
test
mov
arpl
roll
adcb
jo
stc
clc
xor
out
shll
inc
aas
arpl
lahf
ds
stc
int
xor
dec
lock
jns
xchg
ds
push
or
mov
inc
cwtl
dec
add
push
lret
hlt
lock
fcompl
pop
cmp
fcomp
sti
mov
lea
dec
lahf
push
push
mov
test
and
cmp
cmp
lods
insl
pushw
subb
jl,pt
pop
fcompl
mov
inc
stos
and
sub
fwait
out
lcall
push
xchg
push
dec
or
arpl
ret
cmp
ja
out
add
test
clc
mov
and
xchg
in
cltd
mov
lods
mov
fbld
cmpsb
push
jo
mov
test
testb
icebp
movl
lods
je
mov
push
lret
xchg
cltd
and
dec
dec
out
inc
lock
xchg
and
fiadds
cmp
fnstcw
mov
xchg
loope
or
jo
js
ret
aaa
push
pop
dec
hlt
sub
xlat
mov
inc
xchg
bound
xchg
xchg
into
add
jnp
enter
xchg
cmpsl
sbb
addl
es
das
sbb
pop
repz
jo
push
shrl
mov
fimull
testb
movsb
sub
xchg
mov
in
cmpsl
lret
jle
movsw
mov
xchg
cmc
outsb
dec
lods
cltd
sub
cwtl
repnz
mov
add
jb
cld
jmp
test
stos
pop
dec
inc
add
mov
lea
fnsave
loope
lods
insb
add
inc
or
ja
mov
cs
inc
repz
jge
ss
mov
leave
and
ror
sub
pop
mov
hlt
xor
loop
cwtl
sti
inc
mov
push
in
and
push
std
minps
loope
scas
stc
into
sbb
pop
rcrl
aam
mov
out
das
and
test
mov
stos
rorb
stos
imul
sti
sbb
add
push
cmp
add
dec
lret
mov
dec
xchg
out
into
sbb
add
std
dec
inc
out
inc
lahf
pop
cld
clc
rclb
ret
js
and
push
std
test
inc
xchg
popf
aas
cld
cmp
mov
repnz
cs
sahf
dec
mov
outsl
pop
outsl
insl
mov
js
inc
sbb
hlt
mov
push
cmp
ret
fmull
pop
jl
dec
call
cmp
or
sbb
in
push
cld
fs
je
add
adc
and
xor
les
in
hlt
pop
test
cmp
or
sbb
in
push
cld
fs
je
add
adc
and
xor
les
hlt
dec
hlt
pop
test
cmp
or
sbb
in
push
cld
insl
int3
jo
add
or
pushf
fsubrl
insb
dec
fcompl
test
or
faddl
push
into
int3
je
jae
pushf
inc
arpl
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
push
xchg
xor
add
jns
or
add
add
add
add
add
add
lret
add
add
xchg
add
dec
add
mov
sbb
test
adc
xchg
add
add
and
mov
sbb
das
add
inc
add
add
and
pushf
add
pop
add
add
add
add
add
pusha
add
add
inc
add
add
add
roll
add
and
incl
pop
add
clc
add
and
test
or
add
add
add
add
add
add
add
add
add
add
lods
add
push
add
add
add
or
les
xor
add
add
add
add
adc
popl
adc
pop
add
pop
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
nop
add
add
arpl
sbb
pop
add
add
add
and
inc
add
add
add
add
sbb
add
inc
add
add
add
add
add
dec
add
add
jo
dec
add
add
add
add
add
add
jg
dec
add
add
add
add
add
add
add
movb
add
add
or
add
add
sub
pop
add
str
les
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
adc
nop
add
push
add
add
add
add
adc
push
add
add
add
cmp
lret
add
add
add
add
add
add
add
add
add
cmp
loopne
clc
add
add
add
dec
add
ret
add
add
add
add
ss
add
add
xchg
add
add
pop
add
add
add
pushf
add
add
add
add
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
cmp
add
add
inc
add
and
adc
pop
add
add
xchg
add
add
add
add
int
push
add
pop
add
incl
mov
inc
add
add
push
test
dec
add
add
in
add
mov
data16
add
xlat
add
add
add
push
add
add
xlat
add
add
lldt
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
pop
add
add
add
add
add
addb
add
cmp
dec
add
push
add
add
add
add
add
add
add
add
adc
xlat
add
add
add
gs
add
sub
add
add
add
jae
nop
add
add
add
add
add
add
add
les
xor
add
add
add
incl
pusha
add
ret
add
add
add
push
sbb
and
mov
mov
mov
push
jb
add
pop
fmuls
sbb
adc
pop
adc
jge
hlt
fistpll
out
loopne
pop
loope
cltd
dec
xor
inc
iret
jg
arpl
push
loopne
imul
dec
and
test
lods
jno
dec
rcrb
sub
cmpsb
add
and
fimuls
loope
in
add
and
ja,pn
pop
push
pcmpgtw
out
iret
push
sub
std
xchg
in
cmc
push
mov
jo
lods
or
daa
cmp
sub
enter
lods
xchg
sbb
cmp
cmp
dec
fcmovne
xlat
or
movsb
stos
lret
bound
lea
jmp
icebp
fbstp
bswap
xchg
xor
lods
mov
inc
insb
mov
incl
lcall
lds
aas
lret
adc
dec
mov
aam
cmp
outsl
enter
cpuid
clc
ret
shrb
out
fisttpl
or
jne
mov
push
cmp
aas
sbb
cmpb
pop
mov
lods
das
dec
test
test
faddp
jle
sbb
out
sarb
scas
pop
insl
lds
xor
ret
movsb
or
nop
mov
in
rclb
push
movsb
and
mov
add
js
in
xchg
mov
ljmp
push
mov
adc
push
jle
andl
mov
std
addr16
inc
arpl
bound
cmp
out
in
incw
ret
xchg
and
aam
test
outsl
fdivrs
xor
int3
push
popa
shll
enter
cltd
test
rolb
add
jle
sti
inc
daa
xchg
pop
cli
cmc
stc
push
fs
stos
ja
enter
rclb
or
lea
je
pop
std
xor
pop
negl
insb
jmp
pop
cmovno
mov
cmpsl
push
out
fstpt
cld
or
mov
out
sub
jns
shll
jo
lds
jnp
stc
sahf
nop
jns
inc
xor
pop
inc
pop
rol
push
and
pop
cmp
fsubp
sub
adc
fs
sahf
cmc
push
icebp
out
pop
sub
mov
inc
push
mov
push
mov
call
fucomip
in
push
je
das
test
cmpsl
inc
lcall
ja
sub
and
mov
outsb
loope
lods
das
cltd
jl
cmp
mov
adcb
mov
les
push
mov
and
ret
mov
pusha
pop
call
mov
in
shll
push
jle
into
xor
andb
adc
mov
fcmovbe
test
sahf
jae
out
lahf
add
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
