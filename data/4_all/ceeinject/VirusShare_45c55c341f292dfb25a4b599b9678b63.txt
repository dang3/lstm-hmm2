call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
int
dec
enter
call
pop
jmp
test
pop
int
cld
js
push
lods
cmp
enter
call
cmp
pop
int
pushf
js
push
mov
fmuls
jge
insl
call
cmp
data16
pushf
or
insb
popf
pop
ret
fmuls
xor
dec
mov
into
sbb
xchg
pop
sbb
ljmp
mov
jmp
add
mov
mov
movsb
js
imul
push
aam
int
push
jb
or
sbb
xchg
mov
pop
sub
cwtl
popf
mov
jge
test
sbb
ds
call
leave
pop
stc
cmp
fstl
clc
int
or
xchg
pop
lods
cmpsl
or
js,pn
cmc
cwtl
add
mov
mov
pop
into
shl
dec
cmp
push
js
pop
dec
xor
stc
call
mov
jae
sub
mov
jmp
sub
dec
enter
call
cmp
pop
int
std
js
push
mov
mov
sbb
mov
push
fdivs
push
mov
jmp
mov
push
orb
and
cmpsb
cmp
sbb
mov
ja
addr16
dec
mov
sub
dec
pushf
pop
hlt
or
test
pop
int
std
js
push
mov
fmuls
jge
insl
call
cmp
pop
int
std
js
push
mov
fmuls
lock
cmp
push
sahf
dec
out
lret
mov
mov
pushf
ficompl
leave
or
iret
xchg
sub
dec
rcll
or
shrl
mov
fs
fisttpl
in
add
addr16
or
roll
ret
xchg
dec
inc
pop
outsb
aam
pusha
mov
lock
insl
fldt
js
rcl
mov
or
pusha
sub
mov
add
ds
mov
adc
aas
lods
sbb
inc
add
sahf
ret
push
jl
push
sub
pop
cmp
inc
cltd
jns
dec
cmc
fisubrl
or
hlt
push
leave
and
jle
arpl
jb
test
push
arpl
sub
fdivr
mov
loop
xor
stc
push
dec
mov
popa
call
and
mov
cmc
aas
out
mov
or
mov
andb
sbb
stc
lahf
scas
push
push
inc
test
dec
sub
fbld
rolb
jb
mov
xchg
fidivs
je
out
cmp
gs
inc
sarb
mov
mov
and
inc
or
mov
out
sub
cmp
add
jbe
scas
ss
fists
hlt
adcb
xor
pop
mov
mov
cmpsl
push
mov
addb
mov
mov
jae
int3
adcl
add
lods
jl
jne
push
sbb
arpl
cmp
sbb
fwait
cmpsb
xchg
andl
int3
mov
fbld
push
mov
lods
shll
or
sub
shll
cmp
sbb
ss
sub
ds
in
lret
or
arpl
movsb
call
out
xor
pop
rclb
lea
dec
push
repz
sub
decl
jecxz
inc
cmp
add
out
xchg
mov
dec
arpl
sbb
popl
in
mov
loopne
add
hlt
dec
outsl
aad
loop
mov
inc
xchg
sub
sub
fstps
outsb
pop
mov
rcrb
into
mov
mov
mov
dec
insl
int3
cmpsl
cmc
or
adc
stc
xor
popf
add
and
jge
push
pop
fiadds
fdivl
aaa
std
ljmp
jae
xchg
add
mov
std
or
test
dec
mov
sub
fdivrl
imul
pushf
sub
bound
and
aaa
mov
out
daa
sub
stos
and
and
xlat
push
scas
dec
fcoms
fcmovbe
inc
outsb
dec
pop
sbbb
cwtl
scas
xchg
cwtl
loope
test
insb
push
xchg
mov
rcrb
out
icebp
add
cmpsl
fldcw
insb
dec
iret
jno
neg
sbb
stos
push
ljmp
imul
add
shlb
or
sahf
or
xlat
jnp
push
or
and
jno
push
xor
mov
jnp
fs
dec
test
scas
aas
in
orl
push
push
int3
int
xor
mov
out
cs
cmp
and
cli
in
insl
pop
test
in
xor
cmp
shrl
fiaddl
lret
pop
jge
mov
jmp
and
mov
mov
mov
rorb
dec
movsl
insl
scas
pop
or
or
jbe
ret
ret
popa
push
push
push
gs
ja
aaa
xor
xor
sub
shll
ja
mov
or
rcll
xor
aaa
mov
leave
mov
ss
xchg
je
mov
jecxz
faddl
jp
or
testb
push
cmp
push
aaa
out
arpl
nop
jg
loopne
out
rclb
cmp
outsl
jnp
repnz
rorl
popw
iret
int
and
sbb
lds
and
xor
std
push
cltd
add
daa
out
pop
inc
mov
pop
push
es
das
js
xchg
jno
das
inc
or
xchg
adc
mov
push
push
mov
shlb
jns
mov
js
iret
xchg
jl
dec
adc
shl
shl
fildll
or
jns
and
ret
dec
movsl
fidivl
cli
ret
mov
mov
jbe
xchg
sbb
pop
sti
inc
sub
dec
jmp
dec
pop
fsub
or
jg
jo
dec
lret
cmpsl
jo
scas
mov
push
push
fisttps
xor
imul
cmp
and
mov
mov
int
xchg
cmp
pop
push
aam
push
popa
dec
pop
push
lods
sbb
push
cmp
mov
mov
lret
or
cli
insb
xor
mov
mov
outsb
sub
jge
dec
mov
jb
or
xor
sub
cmp
mov
push
adc
outsb
lea
cmp
inc
cld
insl
add
mov
mov
jb
or
ret
push
mov
jp
cli
lds
std
shr
icebp
dec
outsl
adc
add
repz
add
mov
icebp
jle
sbb
enter
push
add
push
aas
push
inc
inc
negb
xchg
and
xor
scas
push
jg
push
sub
dec
ljmp
xchg
inc
jecxz
pop
mov
dec
sub
fwait
mov
and
cwtl
xor
shl
fs
movsl
cmp
pop
loope
scas
mov
faddp
dec
dec
sub
pop
adc
imull
mov
ret
inc
mov
lods
adc
sbb
cld
jecxz
int3
jmp
push
cmp
sbb
insb
imul
push
iret
js
addr16
lcall
sub
sbb
push
mov
push
xor
cmp
cmp
fcoml
call
jl
bt
iret
lcall
xbegin
add
leave
int
mov
and
jae
sub
idivb
mov
pop
je
testl
stc
or
jl
xor
cltd
pop
rcrb
and
mov
les
jae
inc
jp
push
bound
push
cli
sbb
mov
iret
mov
int
sub
cli
or
sbb
inc
fcoml
xchg
dec
out
sbb
sar
int
ret
popf
test
add
int3
shll
push
push
adc
in
push
fimull
push
test
cmpsb
jno
pop
jnp
xchg
int
cwtl
jb
jge
iret
arpl
cmp
dec
gs
mov
and
cwtd
lret
je
ds
out
jne
pop
lock
pop
stos
push
adc
sti
xor
ficompl
into
push
fwait
ljmp
daa
adc
repnz
insl
jne
mov
test
push
fmuls
inc
push
lods
popa
les
lcall
or
and
add
adc
xor
mov
inc
orb
inc
xchg
fdivrp
cmpsl
xor
mov
jns
inc
lret
jo
mov
int3
and
lods
cs
mov
aaa
fldenv
ret
in
xchg
adc
ret
xor
cwtl
mul
dec
xlat
stos
fwait
inc
shrb
cmc
cmpsb
xor
mov
push
xchg
push
jp
mov
pop
arpl
cmpsb
aaa
mov
jle
jge
out
sub
inc
push
out
movsb
adc
jge
lods
std
iret
mov
mov
inc
mov
scas
les
mov
ret
stos
mov
insb
mov
add
cmp
sub
mov
popa
arpl
cmp
int
xor
out
add
pop
aaa
sub
push
scas
and
test
push
adc
adc
add
mov
rorl
jno
fisubrl
push
mov
cltd
filds
adc
adc
xor
setne
jge
jl
pushf
leave
sub
sub
xor
jno
and
cmp
push
sbb
add
lret
lea
stc
loopne
jmp
mov
flds
inc
leave
dec
dec
pusha
fsubrs
jnp
cs
ficoml
frstor
mov
rcll
fnstenv
push
rolb
add
clc
pop
imul
add
or
pop
js
xchg
test
mov
mov
mov
pop
jp
loope
mov
cmp
sbb
fdivrl
test
lcall
mov
pushf
sub
mov
add
leave
cmp
mov
into
fildl
stos
sbb
fmuls
adc
push
push
test
imul
mov
dec
aad
xchg
dec
fistpl
xor
sahf
mov
outsb
mov
jg
sbb
daa
cli
popa
ret
pusha
pop
or
push
shlb
and
mov
xlat
in
xor
ja
push
or
stos
add
inc
shll
inc
je
jge
xor
call
sbb
shlb
push
dec
push
lds
xchg
dec
leave
popa
out
xlat
cmp
inc
push
inc
jmp
mov
jg
mov
sti
cs
mov
pop
inc
cmpsb
idivl
mov
into
mov
xchg
insl
outsl
sbb
mov
add
fcoms
dec
inc
test
pop
pop
xor
fidivl
xchg
clc
and
mov
pop
push
push
adc
mov
in
inc
mov
push
popa
ljmp
dec
xor
mov
adc
sbb
es
and
sbb
inc
sbb
xchg
test
negb
ret
and
or
adc
xchg
xor
test
or
xchg
cmp
mov
in
push
push
inc
cli
xlat
add
xor
jo
sahf
sub
out
pop
mov
add
pop
sbb
push
jne
cwtl
stos
push
imul
push
ret
pusha
or
stos
popf
inc
pop
dec
fsubs
loope
sub
and
in
aam
in
add
adc
dec
mov
jbe
jnp
bound
cmp
or
clc
nop
mov
dec
or
ss
scas
pop
mov
xchg
rorl
pushf
pop
and
push
mov
sahf
jo
cmp
mov
dec
push
insb
mov
pop
mov
adc
icebp
test
mov
pop
sarb
dec
pop
mov
les
jae
jge
outsl
jnp
int3
add
mov
mov
mov
mov
ds
cmp
fildll
push
dec
jg
cmpl
daa
aam
js
mov
es
aam
inc
sbb
nop
push
cmp
lock
ljmp
jb
cltd
aas
mull
ret
imul
in
repnz
pop
jge
daa
rcrl
jae
sahf
sub
cmp
inc
or
fists
lret
out
pop
sbb
mov
push
push
push
gs
js
out
push
mov
nop
xchg
loopne
push
lds
dec
cmpsb
test
scas
or
mov
adcl
pop
push
dec
dec
cmp
mov
scas
cli
mov
fildll
add
xor
pusha
push
pop
cmpsb
or
sahf
ret
pop
dec
mov
lahf
iret
and
outsl
xchg
jno
xchg
push
stos
sbb
aaa
aaa
sub
mov
xchg
cmp
sti
dec
pop
mov
sub
jle
sahf
jle
jb
dec
test
add
out
arpl
aad
cmp
or
dec
outsb
xchg
lret
dec
mov
ret
xor
cs
test
xchg
sbb
push
xor
sbb
push
inc
js
xor
adc
jo
lds
fadd
mov
je
mov
push
inc
lds
sbb
dec
ret
cmpsl
lret
jb
dec
loopne
cmp
cmp
pop
and
cmpsl
incb
inc
mov
mov
cmpsl
mov
fwait
pushf
mov
push
dec
xor
ds
lds
xchg
pop
std
scas
shrl
push
or
jno
test
mov
outsb
cltd
mov
dec
in
outsb
addb
arpl
jbe
xchg
or
push
das
and
dec
sbb
push
jle
cmp
js
xor
push
arpl
cli
adc
icebp
out
sub
and
test
cs
push
xor
inc
ljmp
pop
lret
in
das
xor
je
js
rcrl
lods
mov
roll
xor
add
jae
movsl
outsb
dec
dec
sub
lret
sub
adc
sub
ret
ficoml
fsubs
or
inc
cmp
jbe
pop
xlat
inc
test
in
sub
out
dec
loope
jecxz
jl
or
clc
mov
add
movsl
fiaddl
jae
arpl
fiaddl
sub
xchg
lock
add
lea
mov
ds
jp
sub
in
push
cmpl
xchg
int
cmp
mov
xor
pop
xchg
stos
adc
or
in
dec
jmp
inc
xor
mov
push
add
jno
lahf
fwait
cmpsb
lock
lods
mov
insb
add
test
cli
movsb
jmp
ficomps
mov
sbbl
repnz
gs
dec
insl
pop
pop
or
jb
xchg
pop
mov
mov
xchg
mov
imul
add
imulb
add
inc
arpl
lea
orb
dec
fstp
push
sbb
dec
dec
adc
std
sub
mov
xchg
clc
inc
xlat
aam
push
jge
fisubrs
stos
jmp
cmpsl
std
fsts
fistps
adc
fbld
std
adc
in
loop
pop
orl
jp
xchg
repz
movsb
lods
xchg
xchg
addr16
push
sbb
in
mov
pop
mov
les
dec
mov
xchg
ja
lahf
mov
dec
cmp
jae
xchg
mov
inc
dec
pop
sub
pop
daa
sub
sbb
pop
or
xchg
ficomps
shl
mov
dec
mov
movsl
aam
adc
adc
add
inc
mov
dec
arpl
dec
sahf
dec
push
das
jns
imul
mov
imul
cmpps
xorb
rorb
stos
xchg
dec
movsb
in
pop
pop
inc
sbb
push
js
lahf
push
mov
data16
imul
ljmp
sub
cmp
test
add
dec
fsubrs
xchg
pop
jg
mov
or
pop
insb
scas
xchg
lret
es
mov
xchg
cmp
add
nop
push
sti
ud0
push
mov
inc
push
aas
inc
mov
test
loope
cmpsb
out
les
mov
pop
mov
xor
je
and
inc
pushf
in
pop
mov
fs
cmp
mov
ljmp
jbe
fnsave
loopne
call
aad
aaa
in
push
sbb
mov
xor
and
and
cltd
js
and
stc
xor
nop
shl
xlat
dec
dec
lods
lds
push
out
xlat
and
je
and
fwait
mov
rorl
ret
outsb
repz
push
imul
push
loope
mov
icebp
push
cmpsb
dec
push
xchg
ljmp
popa
mov
add
xchg
jmp
cmc
pop
mov
mov
mov
sub
mov
lahf
rcrl
mov
aam
cli
xor
and
dec
mov
inc
xchg
or
push
rorb
movsb
loop
adc
lahf
jne
dec
cmpsl
push
or
ret
cmc
mov
jns
std
pop
js
push
adc
mulb
pop
ret
and
push
add
pop
xchg
jno
xor
out
adc
and
jl
jae
sbb
sarb
adc
xchg
pop
inc
jle
xchg
fstps
inc
mov
pop
outsl
sbb
and
cmp
jge
test
pop
mov
loope
pop
lahf
aaa
and
jb
xchg
pushl
movsb
addr16
ss
inc
jle
mov
int
sbb
in
addl
notl
pop
inc
and
sbb
xlat
and
movsb
fdivl
daa
aad
ja
cli
lods
jge
mov
movsl
add
enter
cwtl
pop
mov
inc
loopne
pushf
shll
jg
add
pushf
push
dec
sbb
in
mov
fsubrl
in
cmp
adc
dec
pop
push
jno
inc
sub
cmp
adc
dec
aad
and
rclb
idiv
sub
stc
mov
mov
push
out
cltd
cmpsb
cld
fiaddl
push
mov
clc
xchg
xor
dec
sbb
xchg
mov
adc
test
cmp
xor
repz
imul
pop
push
das
adc
test
scas
pop
movsb
ret
cmp
push
xchg
movb
dec
bnd
mov
jo
mov
mov
xchg
cmpsl
fwait
daa
pop
fdivr
rolb
xchg
sbb
adc
out
mov
stos
mov
sti
xchg
insl
cld
sub
pop
sub
dec
or
push
or
mov
jae
inc
loope
jg
rol
pushf
hlt
clc
sbb
test
int
rcrb
repnz
inc
jae
adc
cmpsb
lods
mov
or
dec
insl
mov
test
ljmp
jmp
faddl
pop
test
cmp
mov
mov
push
jecxz
jmp
je
in
cmp
cmp
cmp
ror
lea
imul
xor
stc
xor
and
and
imulb
push
cmp
xor
lds
sahf
cmp
cmp
fidivl
imul
cmp
jb
mov
jmp
in
orl
lds
xor
insl
iret
inc
adc
ss
out
aaa
xor
mov
test
loopne
push
shl
mov
pop
cmp
rcrl
std
dec
cmc
lods
std
lahf
pusha
or
sbb
or
cmpsb
cwtl
xor
cmp
cmp
cmp
rcll
imul
dec
movsb
mov
in
dec
rep
popa
or
fwait
popf
sahf
lods
into
stos
les
jle
jmp
mov
xor
mov
popa
insl
hlt
mov
mov
imul
inc
lods
outsl
addr16
inc
inc
rcrb
shl
cmp
xchg
popf
mov
mov
mov
mul
sub
push
subl
outsl
jbe
lods
data16
adc
movb
test
sbb
xchg
mov
das
mov
pop
enter
fmuls
mov
test
jecxz
dec
mov
jae
sub
inc
inc
inc
pop
mov
sbb
and
scas
and
pop
dec
scas
dec
pop
and
data16
out
lret
es
jecxz
dec
in
sbb
jge
decl
jae
dec
out
mov
cmp
sbb
dec
mov
aam
stos
mov
cmp
iret
rolb
jne
jecxz
out
pop
in
mov
push
jb
and
mov
movsb
dec
lcall
push
push
cmp
loopne
xchg
or
xchg
add
pop
ss
test
sahf
dec
ljmp
xor
lcall
mov
fsubs
test
xchg
or
adc
mov
leave
mov
mov
sub
nop
je
popl
cld
adc
shlb
mov
add
movsb
add
xor
add
mov
cmp
inc
dec
inc
mov
sub
sbb
dec
int
push
aam
popa
cmpsl
inc
or
cmc
imul
sahf
push
jne
jecxz
movsb
pusha
ds
dec
loop
lds
push
xchg
mov
push
fnsave
inc
dec
shll
repz
xchg
fwait
cmp
xchg
push
aad
pop
xchg
fiadds
fnstsw
pop
jmp
imul
rclb
or
xor
xchg
mov
in
movsl
aad
xchg
or
xchg
cmpsl
push
in
mov
sahf
repnz
mov
popf
mov
adc
mov
jbe
dec
test
xchg
popf
mov
add
fdivr
loope
stos
inc
sbb
mov
xchg
fimuls
mov
push
xchg
xor
frstor
push
inc
sub
inc
roll
jecxz
cmpsb
stos
cvtpi2ps
xchg
hlt
adc
and
daa
and
rcl
sarb
pop
inc
xor
fbld
mov
mov
push
cltd
out
outsb
cmpsl
mov
push
mov
xor
and
push
movsl
insl
popf
pop
mov
jno
xor
sbb
repz
shll
divl
addl
stos
adc
jp
cmp
lret
mov
sarl
popa
negb
int3
xor
and
ret
mov
push
arpl
shlb
mov
inc
xor
mov
mov
ret
mov
cwtl
mov
rcll
loope
adc
mov
inc
gs
and
inc
and
xor
jb
pop
movsb
or
repz
adc
lret
cmp
cwtl
xchg
jmp
enter
cmp
pop
xchg
addr16
push
mov
outsb
xchg
sbb
stos
or
jp
xor
shl
inc
jnp
and
sbb
jns
imul
add
fdivrs
xor
adc
xor
inc
out
hlt
loopne
out
cwtl
xlat
int3
push
out
xchg
sub
push
rcr
insb
and
ficoms
xchg
cmc
pop
ss
leave
loopne
imul
pop
pop
mov
call
cmp
pop
int
std
js
push
mov
fmuls
jge
insl
call
cmp
pop
int
std
js
push
mov
fmull
jge
insl
jmp
cmp
pop
int
std
js
push
mov
fmuls
clc
insl
in
sbb
cmp
loop
js
pop
ljmp
xlat
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
out
dec
add
imul
xchg
nop
sub
cltd
rorb
loopne
adc
adc
push
or
cmp
adc
nop
leave
mov
fnstcw
test
add
cwtl
mov
pop
insb
imul
ljmp
xchg
test
aaa
adc
jne
addr16
jecxz
add
cmpsb
jb
loopne
sub
dec
mov
fwait
mov
stc
push
pushf
aaa
push
mov
mov
sarb
mov
rcl
add
adc
rolb
dec
js
sbb
sbb
jmp
shlb
lock
and
pushf
and
sub
mov
lahf
fsubrs
sarb
pop
pop
rorw
mov
add
hlt
movsl
in
addl
stc
ja
mov
inc
loope
pop
cmpsb
rcl
mov
out
loopne
xor
ljmp
mov
mov
adc
lock
imul
cmp
push
inc
mov
cmpl
lock
add
and
das
dec
sbb
add
pushf
les
shlb
sub
or
add
int3
push
jl
mov
aad
loopne
out
rclb
and
inc
dec
xor
inc
cmp
pusha
fsts
jmp
sarb
dec
add
imul
cmp
pusha
fsts
jmp
sarb
out
xlat
mov
leave
loope
push
mov
mov
cmp
lcall
shlb
rsm
mov
cli
mov
inc
pushl
testl
xor
cmp
jecxz
pop
sub
mov
out
sbb
adcl
xor
jge
aam
hlt
jne
inc
lock
stos
add
fstpl
int3
call
out
xlat
or
rcrl
lock
mov
xor
or
cs
mov
mov
ret
or
and
push
leave
mov
les
sub
push
mov
xchg
int3
shrl
mov
sbb
loop
out
jmp
pop
add
jae
xor
aam
jno
sti
sub
test
push
xchg
add
adc
mov
cmpsb
imul
sub
mov
fstps
fnsave
jbe
or
clc
int
jnp
icebp
or
shr
sti
mov
loop
push
and
sub
pushf
js
popa
ja
mov
jae
test
or
rclb
inc
xor
cmp
jge
leave
mov
lods
lods
mov
inc
leave
out
inc
shlb
sub
popa
rcl
jge
jne
insb
adc
xchg
jo
sub
pushf
stc
add
lret
outsl
mov
jg
cmpsb
jb
pop
xor
mov
adc
push
pop
ds
mov
cmp
imul
dec
pop
bound
mov
loopne
fstp
sbb
sub
mov
or
arpl
xchg
add
mov
pop
pop
jb
push
push
adc
dec
jg
fstpt
outsb
movsl
fsubrl
test
mov
inc
inc
jb
xchg
in
lea
fiadds
je
xor
mov
mull
enter
jbe
and
pop
and
rcr
hlt
cmp
test
inc
das
ffree
fs
or
outsl
in
std
xchg
into
push
int
jns
push
sbb
ret
imul
and
push
mov
push
sbb
sbb
mov
push
and
sub
pushf
or
sbb
mov
push
sub
push
pushf
add
scas
std
pop
in
add
aam
mov
popf
int3
dec
outsl
adcb
adc
aad
mov
pop
xchg
aas
aas
xchg
jg
stos
cmp
enter
pop
cwtl
mov
sbb
adcl
sub
shrb
jbe
and
fs
lea
or
adc
das
push
and
cmpsb
aas
xor
sahf
cli
mov
in
mov
es
iret
ret
pop
add
ljmp
push
icebp
aad
xchg
jo
sbb
es
jbe
cmc
mov
or
add
mov
or
pop
mov
jo
inc
out
and
dec
xchg
mov
insb
sub
xchg
rclb
jno
test
fsubrs
jge
or
mov
xor
leave
dec
repz
scas
cmpsl
xchg
dec
xchg
das
jae
fldl
add
add
dec
stc
repnz
pop
loopne
push
cltd
lret
outsb
sahf
cmp
cmp
lds
in
jb
adc
pop
lret
xchg
xor
sti
pop
addl
and
pop
cld
sbb
fdiv
push
jmp
cmp
fcompl
pusha
push
jbe
jo
orb
inc
xor
fwait
inc
xor
shrb
lahf
in
fcompl
inc
rclb
movsl
test
dec
mov
mov
jne
adc
std
sbb
adc
mov
movb
movsb
and
pusha
push
pop
mov
adc
pushf
out
adc
lret
inc
mov
nop
movsl
lret
push
cmp
cmpsl
mov
mov
jnp
les
xor
dec
leave
mov
mov
lods
loope
lret
push
and
jge
jb
arpl
mov
or
sub
jmp
out
jle
ror
ss
mov
xchg
or
push
call
dec
jmp
jecxz
cltd
hlt
mov
jge
arpl
jge
and
je
movsl
xchg
mov
int
lahf
pushf
mov
enter
pop
imul
push
fldenv
andb
cmp
out
sub
scas
out
addr16
shr
in
cmpsl
sub
pop
cmp
addr16
push
test
rcrb
lret
nop
mov
aam
popf
inc
push
mov
or
pop
dec
inc
pop
fisttpl
mov
xchg
jmp
add
dec
pop
rorb
sub
outsl
mov
fisttps
add
mov
orl
data16
push
and
jns
mov
test
mov
sub
sub
movsb
add
adc
cmp
and
mov
aad
jbe
movsb
popa
rcll
outsb
inc
bound
mov
cmp
inc
pop
push
cmp
jo
cld
xchg
idiv
insb
add
insb
daa
cld
or
mov
shll
movsb
mov
mov
mov
push
and
into
stos
lcall
jmp
add
cmp
inc
mov
cs
and
ficoml
jae
mov
repz
sbb
ret
into
lods
mov
icebp
les
pop
xor
sub
iret
ret
das
jae
fdivl
je
mov
mov
rclb
mulb
pop
stc
stc
lahf
sarb
adc
push
dec
fnstenv
mov
and
sbb
push
mov
pop
sub
mov
mov
add
add
xchg
fs
sahf
adc
xor
jecxz
pop
adc
mov
sbb
push
xor
iret
int
mov
push
dec
shll
fnstenv
xor
xor
xor
fwait
cmp
setae
push
das
mov
adc
das
ficoms
out
cmp
jg
push
cltd
or
sub
inc
adc
or
loop
push
call
loope
xchg
pop
jnp
aad
imul
fyl2xp1
mov
add
jge
jno
imul
pop
frstor
push
mov
hlt
shlb
jge
je
cld
push
stos
ret
idivl
mov
mov
fldcw
enter
sahf
adc
cmp
sahf
insb
xor
jbe
mov
push
xchg
and
sti
and
andb
sbb
out
cli
mov
lea
enter
call
mov
push
mov
cmp
bound
out
insb
pushf
mov
mov
and
bnd
xor
clc
adc
mov
xor
pop
jnp
fwait
ret
loope
xchg
mov
loop
hlt
fdivrl
xchg
popf
push
or
mov
aam
or
decl
dec
cld
div
add
sub
nop
aam
test
cs
loopne
or
shrb
sbb
je
jmp
scas
out
pop
in
cmpsb
sti
dec
into
in
pop
xor
xlat
adc
negl
ljmp
or
adc
add
mov
imulb
std
push
lret
inc
mov
xlat
or
ljmp
and
js
stc
loop
push
hlt
mov
out
jne
shlb
cmp
fstpl
pop
lcall
addl
lds
movsl
shlb
xchg
jmp
sar
sahf
cld
jo
punpcklwd
xchg
dec
sahf
clc
jne
xor
test
xlat
les
aas
ja
mov
lock
mov
add
iret
outsl
lods
inc
testl
sub
push
jmp
xchg
fsub
xchg
gs
enter
imul
or
popf
int
inc
bound
stos
and
fstpt
jb
adc
or
pop
adc
incb
mov
ffree
inc
cmp
and
in
out
sahf
clc
test
arpl
mov
jo
jae
pop
cli
lret
stc
data16
jbe
fldenv
mov
pop
gs
gs
sbb
shll
mov
push
enter
lock
and
cmpsl
pop
testl
addb
mov
add
cltd
fisubl
adc
nop
pushl
nop
mov
xor
xchg
jo
xchg
lea
pop
test
fptan
sbb
imul
loope
add
sub
jge
pop
and
icebp
out
imul
mov
es
add
mov
test
std
adc
cmp
test
push
cmc
lea
xor
leave
mov
add
jnp
mov
dec
pop
inc
add
insl
ds
ljmp
stos
gs
movsl
pop
loop
cmp
les
imul
nop
cwtl
inc
fisubs
out
inc
lcall
jb
fistpl
cli
sub
lret
pop
inc
cmp
or
into
push
pop
rcll
sbb
ss
mov
sub
mov
cld
in
ja
lret
ret
in
int3
or
cs
int3
addr16
lea
mov
fmull
push
lea
cmp
inc
call
ja
mov
mov
das
jo
xor
rorb
mov
popa
imul
aad
inc
cld
inc
lret
adc
repz
dec
and
pop
pushf
add
mov
cmp
pop
sbb
xchg
push
xchg
and
cmc
orb
ret
xor
pusha
aad
sub
xchg
cmp
jp
xor
cld
or
roll
xor
lods
push
jmp
mov
push
push
ret
shll
adc
dec
cmpsl
cmp
pop
leave
sub
mov
mov
xor
stc
pop
movsb
adc
cmp
inc
jbe
inc
dec
mov
in
dec
pop
or
shlb
std
sti
jns
and
shlb
push
enter
and
adc
leave
cs
add
adc
sbb
xchg
inc
js
icebp
cmp
add
leave
es
loop
or
mov
pop
cmp
daa
scas
push
clc
addl
push
movswl
cmc
frstor
das
sub
mov
add
dec
lahf
enter
pop
scas
shll
jl
movsl
cli
and
xchg
aad
insl
andl
lods
shlb
add
or
sub
adc
xor
cmp
push
xchg
fldl
nop
cmpsb
fildll
pop
cmp
stos
clc
cwtl
jns
mov
mov
shl
push
push
fildll
aam
and
and
add
sbb
loop
test
and
call
jbe
shr
out
mov
ja
mov
and
or
mov
sub
in
mov
jecxz
clc
out
std
push
data16
pop
mov
mov
lcall
adcl
jae
lds
mov
aas
mov
xchg
mov
sbb
xchg
sub
lods
adc
pop
mov
mov
shrl
jmp
dec
lahf
push
not
lock
daa
push
mov
or
sub
and
ret
sub
adcb
or
daa
dec
pusha
cwtl
arpl
fidivrs
xor
loop
fildll
cmp
cld
imul
loopne
ret
xchg
roll
or
out
push
js
jg
mov
pop
xor
leave
loopne
icebp
in
bound
cltd
gs
std
mov
and
test
rclb
sub
mov
or
sbb
dec
stos
test
pusha
out
bound
mov
adc
iret
ss
pop
add
sub
lahf
sbb
cmp
pop
sbb
scas
inc
aaa
sub
push
mov
out
jge
sub
xlat
inc
mov
hlt
fnstcw
sub
mov
mov
and
xchg
in
loopne
sbb
cmp
mov
jae
lods
mov
ja
in
clc
inc
add
or
mov
mov
enter
jecxz
or
cmp
std
add
int
cli
mov
jecxz
idivl
sub
cmp
push
cmp
pop
ja
fiadds
pushf
and
fstps
das
popf
add
leave
pop
inc
jl
ja
mov
repz
sbb
cmp
push
adc
sahf
daa
loope
cmp
jge
cmp
xchg
addr16
mov
loope
and
xor
pop
clc
add
or
nop
scas
push
gs
mov
sbb
imul
dec
xchg
or
pop
pop
push
sbb
push
sbb
data16
imul
popa
pop
enter
add
clc
daa
sbb
dec
iret
xchg
cmc
add
sbb
push
dec
and
test
mov
fldcw
das
std
sbb
push
and
xchg
jae
mov
adc
sti
mov
mov
pop
inc
pusha
inc
repnz
sub
xorb
scas
rorb
jbe
push
sarb
daa
ds
lahf
xchg
push
mov
push
mov
pop
gs
xchg
lock
mov
loopne
test
inc
aaa
aam
dec
jb
mov
jle
call
leave
mov
xchg
dec
lret
inc
dec
adc
shr
jle
and
xor
jle
fstps
rcrl
mulb
push
mov
cmp
sub
pop
jecxz
pop
add
adc
fscale
inc
xor
jmp
fisttps
push
lea
sbb
movhps
sub
in
push
cmp
push
mov
sub
mov
test
ljmp
lea
into
xchg
mov
adc
bound
out
int
jl
mov
in
push
stos
lods
xchg
push
stos
pop
into
cmpsb
lock
or
inc
jl
xchg
aad
cmp
stc
or
cmp
ss
insb
xchg
push
jne
loope
lahf
outsb
mov
jg
ds
xlat
lock
mov
andl
mov
pusha
leave
inc
pop
ss
es
ret
cmp
movsl
mov
dec
mov
xorl
es
sbb
jbe
bound
scas
clc
mov
inc
xorl
add
mov
mov
es
adc
add
cmpsl
sti
popf
pop
mov
jno
jge
dec
in
sub
sbb
mov
xchg
dec
sub
pop
insb
fdivrs
sbb
subb
cmpsb
xchg
xor
mov
mov
and
xchg
lahf
std
imul
addb
rclb
dec
ret
sahf
je
push
push
aaa
out
xor
mov
hlt
add
fucomp
jae
lahf
mov
xchg
xor
loopne
mov
test
ficoms
mov
sub
xlat
mov
or
repnz
inc
aad
adc
ret
or
add
sbb
inc
mov
sbb
adc
mov
out
jp
in
jns
fwait
rorl
dec
daa
add
test
add
mov
shlb
stc
lahf
mov
into
outsl
dec
xchg
push
adc
lahf
sub
push
xor
and
cmp
mov
stc
jno
lahf
in
inc
shll
loop
xor
pop
xchg
adc
mov
inc
xchg
add
test
fwait
cmp
pop
rclb
rclb
jbe
mov
xor
mov
mov
dec
pop
mov
stc
lds
retw
mov
and
sub
repnz
divb
aas
popa
xor
popf
das
jnp
pop
int3
aam
ficoms
mov
mov
pop
jecxz
inc
daa
sbb
pop
mov
adc
xchg
cs
rol
xor
add
test
sbb
mov
mov
das
loop
fs
jecxz
movb
add
or
out
xor
insl
cmp
cmpsl
into
sub
dec
lret
pusha
enter
add
lock
je
dec
mov
lods
mov
stos
dec
les
xor
repz
xor
dec
cltd
mov
addb
pop
xlat
dec
mov
in
xchg
mov
pusha
into
outsl
addr16
mov
lahf
add
fstpt
sub
int3
jne
add
sub
repz
pop
sub
iret
loope
and
mov
repz
pop
js
aaa
sbb
push
shrl
lcall
shll
ret
out
add
mov
iret
stc
pop
fs
insl
imul
leave
inc
je
xor
cmpsl
push
mov
mov
jno
sub
enter
mov
les
sub
lret
sbb
or
int3
fnstsw
fcomp
aam
loopne
mov
mov
inc
scas
mov
add
jb
in
mov
lret
cli
jo
stc
movsl
add
jae
std
inc
test
jge
pop
add
cmc
icebp
lret
mov
je
mov
jb
inc
and
sbb
jmp
mov
jl
push
cwtl
fcmove
cmp
fwait
les
out
out
pop
fsubrl
jnp
or
pop
repnz
int
sar
out
inc
fimull
loop
and
push
adcl
hlt
ja
out
call
movsl
xchg
and
push
inc
sub
imul
and
cmp
mov
lahf
jle
jo
jns
and
mov
mov
pop
sub
je
enter
inc
jmp
pop
lahf
mov
cmp
gs
xlat
pop
mov
nop
shufps
and
enter
aad
and
test
push
lahf
lods
js
sahf
andb
inc
sti
in
and
add
sub
adc
imulb
gs
pop
arpl
pop
mov
push
pop
jmp
cmp
mov
aas
test
dec
mov
xchg
lods
cmpsl
psrlw
aam
loopne
xchg
idivb
and
xchg
out
in
imul
lea
fnstcw
inc
xor
mov
repnz
test
xchg
ja
jns
stos
sub
dec
aaa
adc
fbstp
jbe
test
imul
mov
dec
jle
push
push
imul
and
push
dec
xchg
addl
fcomip
xchg
mov
rorb
mov
mov
pop
dec
xor
mov
fcoms
int3
ss
pop
cmp
pop
cmpsb
js
imul
or
add
jb
arpl
xor
test
mov
pop
xchg
iret
jmp
popf
icebp
and
cmpsb
lods
aam
lea
mov
xor
repz
jecxz
cmp
je
ret
int3
ret
repz
adc
cld
or
jp,pn
in
outsb
jb
inc
add
and
lods
xor
pop
push
or
call
rcrl
and
cmpsb
repz
xchg
mov
cltd
mov
lea
jno
sbb
fstl
cmpsb
xchg
sarb
xor
mov
lea
test
jae
sarl
mov
sarl
loopne
push
and
push
icebp
fidivrs
gs
insb
push
mov
xchg
out
mov
sbb
mov
mov
pop
test
mov
sub
dec
cmpsl
enter
sub
inc
sti
repz
test
fs
insl
mov
dec
out
xchg
jecxz
mov
rorb
sub
push
mov
repz
mov
int
data16
js
imul
jo
lret
mov
fcoms
xchg
push
pop
jl
jl
mov
cli
add
xor
pop
adc
mov
cmp
sbb
fcomps
cmp
mov
sbb
add
xlat
add
dec
cli
jns
out
sub
shll
mov
cld
push
push
or
insb
inc
mov
imul
call
add
nop
popf
sbbl
adc
dec
ret
xchg
stos
mov
popf
lds
popl
mov
iret
aaa
aam
rcl
mov
sbb
hlt
push
jns
adc
mov
mov
int3
mov
xchg
stos
pop
inc
in
mov
cltd
mov
stos
pop
inc
push
out
sbb
das
call
mov
and
sbb
dec
jnp
jo
and
cld
fildll
pop
mov
cmp
dec
jns
mov
cli
push
mov
sub
xor
ret
insl
mov
xchg
or
daa
xor
loope
ds
dec
or
cltd
dec
lock
jo
hlt
fildll
test
insl
aas
ss
mov
loope
in
fs
or
add
into
mov
jle
mov
push
roll
dec
in
mov
push
adc
imul
lret
mov
test
adc
pop
iret
fcmovnbe
mov
notl
in
fisubs
stos
inc
xchg
cmp
inc
dec
dec
cmp
pop
jns
cmc
sbb
out
add
adc
aaa
mov
popa
add
jb
xlat
repnz
scas
jnp
jge
sub
push
cld
iret
xlat
aam
pop
jmp
lods
sahf
jmp
test
mov
add
pop
sub
sub
fs
lcall
jae
mov
mov
subb
fiadds
xchg
roll
or
dec
pop
cld
fcoml
fneni(8087
movsl
hlt
cli
lock
sti
negb
lds
and
mov
xchg
iret
js
add
pop
imul
cmp
pusha
fsts
jmp
sarb
dec
add
imul
cmp
pusha
fsts
jmp
sarb
jns
sbb
and
jo
pusha
orb
jmp
sarb
adc
and
push
sbb
lock
sub
jmp
aas
inc
orps
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
pop
xchg
dec
jbe,pn
dec
lods
cmp
or
mov
ljmp
jae
inc
lcall
sbbl
jecxz
repz
sbb
jb
cli
xor
add
adc
mov
lcall
sbbl
jecxz
repz
sbb
or
cli
adc
outsl
test
stos
arpl
sbb
ss
cmp
and
sbb
enter
inc
sbb
lahf
mov
shlb
adc
push
aad
sub
loop
push
insb
iret
sbb
repz
cmp
mov
scas
pushf
mov
repz
test
out
push
jmp
addr16
xor
push
xor
jb
sbb
inc
jo
hlt
scas
add
jns
pushf
mov
mov
cmp
insb
mov
jo
sub
add
outsb
into
xor
mov
pop
decl
dec
sbb
and
add
dec
adc
dec
je
ret
mov
xor
rcrl
sbbl
jecxz
repz
sbb
or
cli
xor
add
adc
arpl
push
jecxz
jle
sub
pop
cli
dec
jecxz
addl
adcl
mov
jae
and
adc
aas
decl
push
mov
mov
mov
xchg
add
sbb
in
ds
in
sub
das
scas
adc
sub
sbb
or
cli
xor
add
adc
arpl
push
mov
pop
xchg
dec
jecxz
repz
sbb
or
cli
xor
add
adc
arpl
push
mov
mov
mov
xchg
and
push
adc
jno
lcall
xchg
and
jp
cmp
ja
std
adc
push
repnz
adc
mov
jmp
xlat
push
fs
out
jle
xchg
push
jb
sub
mov
out
movl
mov
lock
shrb
push
cltd
daa
aam
add
adc
and
lcall
pusha
rorb
jnp
mov
js
out
push
into
jae
inc
mov
xchg
scas
add
pop
push
sbb
and
push
pop
jne
inc
inc
dec
das
pop
cld
sbb
dec
xorl
hlt
or
sbb
push
ret
cmp
mov
adc
nop
lcall
popf
arpl
out
or
dec
xchg
mov
loope
mov
pop
dec
pop
pop
and
es
and
xchg
jb,pt
vandps
add
push
loope
pop
out
cmp
sbb
xor
imul
inc
std
push
in
enter
movsb
pop
cli
adc
jl
in
dec
jno
out
loopne
sbb
enter
sbb
stc
int
ficompl
xor
inc
or
mov
int3
test
xchg
mov
cmp
push
or
sahf
pop
push
xor
pushl
sahf
push
dec
inc
push
mov
or
xor
mov
mov
loope
movsl
cs
add
and
popf
or
leave
lahf
xor
mov
push
push
inc
cld
push
call
xor
inc
sbb
push
outsl
insl
cltd
clc
or
shlb
lret
rolb
xchg
jmp
aaa
mov
in
dec
adc
mov
mov
call
sbb
arpl
arpl
sub
lahf
call
mov
sbb
dec
xchg
push
inc
cmp
in
push
pop
and
icebp
or
jmp
sbb
das
or
idivl
mov
pop
ret
cmp
sbb
xchg
jle
shrl
test
data16
pop
ss
or
cmp
flds
lret
leave
sbbb
or
fcmovnb
cld
movsb
leave
inc
add
or
sbb
inc
mov
xor
je
stos
fidivrs
inc
lods
cmp
cmpsb
xchg
add
sbb
push
imul
shlb
jne
in
les
pop
cmpsl
bnd
icebp
sub
push
imul
cld
mov
or
mov
cli
dec
xlat
sub
sub
pop
lods
jl
and
mov
cs
add
pop
out
aas
mov
xor
or
in
xchg
hlt
outsl
jns
rcll
rcrl
sub
fstps
lahf
lods
rcl
adc
dec
inc
imulb
fistps
stos
sbb
rcrl
nop
mov
es
inc
das
dec
clc
push
or
cmp
sbb
inc
dec
push
cmpsw
or
push
enter
inc
cwtl
das
xor
or
sbbl
xchg
push
rorb
sbb
lcall
fs
lret
test
outsl
mov
jp
pinsrw
adc
repnz
das
mov
sub
xor
pop
je
push
mov
aam
xchg
aas
mov
fwait
out
pop
xchg
jo
in
dec
stos
xchg
xor
dec
in
push
cmp
mov
lahf
cmp
btcl
xchg
xchg
pop
test
sub
xor
dec
sbb
xchg
inc
rcrl
jecxz
dec
int
cs
pop
mov
decb
mov
pop
movsl
and
into
xchg
fs
in
shll
jnp
mov
add
pop
and
sbb
xchg
out
jmp
push
adc
sbb
out
scas
jp
out
cmp
lods
in
adc
cmp
and
dec
lret
ret
in
xor
or
movsb
jns
and
jge
loop
adc
repz
jbe
adc
fistpll
imul
xchg
add
ljmp
jge
adc
decl
lret
or
cmpsb
cld
popf
xchg
push
mov
pop
or
push
fnstenv
outsb
test
aaa
dec
dec
push
adc
jne
loope
fdiv
push
stos
sti
cs
and
fiadds
movsl
jo
stos
mov
in
adc
in
push
xor
adc
lret
sub
aad
scas
int
mov
sbb
mov
out
cmpsl
xchg
imul
cmp
pop
fstpt
sub
shl
sbb
movb
or
stos
pop
xor
test
or
or
test
ret
dec
out
adc
jmp
rolb
xchg
mov
add
rcll
popa
daa
popf
jb
lret
jle
and
mov
and
or
mov
lds
iret
cwtl
add
outsb
pop
popa
jnp
test
mov
sbb
xchg
test
inc
movb
fimull
stos
in
or
pop
sbb
push
jne
stos
jne
adc
mov
and
and
xor
push
cltd
mov
mov
adc
jno
mov
fwait
movsb
mov
into
pop
xor
arpl
or
das
lret
jbe
ds
or
sbb
jl
mov
punpckhdq
inc
fucomi
or
mov
cmpb
je
pop
stc
notb
andnps
ret
push
add
int
nop
cmp
sahf
test
popa
cs
mov
and
xchg
idivb
and
sub
shr
or
shl
cmc
aad
mov
ror
fsubl
lret
leave
popf
add
fiaddl
sti
xchg
xchg
sbb
mov
leave
int3
loop
rorl
adc
pop
cmp
hlt
jne
int
adc
aas
sub
dec
and
scas
notb
movsl
fisttpll
cmp
jbe
and
inc
fidivrs
scas
out
popf
xchg
and
add
xchg
add
in
imul
xchg
add
aam
pop
push
out
mov
pop
inc
int
insl
sbb
dec
mov
jl
imul
int
push
inc
add
dec
std
aam
mov
pop
sti
and
fs
xchg
call
test
xchg
pop
cmp
and
fsubr
xor
sub
popa
cmpsb
add
push
mov
popa
jge
cmp
jns
xor
pop
cltd
inc
lret
out
fmull
inc
divl
xor
push
ret
frstor
adc
mov
stos
and
jp
and
popa
jb
outsb
fisttps
pop
in
je
jp
inc
sub
add
cmpb
negb
pop
sahf
or
data16
dec
pop
lea
push
xor
xor
pop
push
pop
out
jg
and
cmc
cmpsl
mov
push
fcoml
sub
popf
ljmp
pop
stc
sub
ret
test
add
adc
int
adc
xchg
cmp
xchg
jb
divl
movsl
sub
xor
outsb
jne
loop
mov
clc
or
push
cmp
inc
and
ja
inc
xor
std
mov
dec
out
jmp
or
xchg
in
js
out
pop
movnti
loope
add
push
jl
adc
inc
jecxz
inc
lcall
xchg
sub
push
and
pop
inc
pop
cmp
or
int
and
insl
xchg
jmp
push
adc
mov
into
fnstsw
movsl
lods
mov
push
add
sub
es
dec
repnz
scas
jno
fdivl
xor
popf
sti
cwtl
popa
jl
aad
mov
leave
pop
jl
mov
in
mov
dec
mov
mov
sbb
lods
add
lds
cmc
inc
das
add
xor
push
xorb
cld
xchg
jo
xchg
xorl
sbb
cmc
dec
inc
xlat
inc
cmpsb
test
dec
scas
ljmp
adcb
dec
add
out
xchg
mov
mov
and
inc
or
mov
adc
push
into
mov
cmpsl
fisubrs
out
mov
iret
fisttpll
lds
jo
fists
fsubs
test
or
faddl
aad
mov
cmp
aas
fwait
cltd
nop
insb
inc
fcmovne
sbb
fwait
mov
into
out
mov
lods
xor
ja
ret
sub
xchg
ds
out
dec
ja
push
cmp
adc
or
repnz
xor
cmp
xchg
jns
test
adc
push
imulb
in
imulb
xor
xchg
adc
inc
and
jmp
or
cs
daa
inc
jle
out
sbb
push
je
push
xor
cli
fsubrs
and
sahf
das
or
stos
push
push
inc
lods
lret
fstpl
iret
dec
fimull
nop
idivb
das
mov
mov
ds
sub
and
cmp
mov
lods
cmp
imul
adc
sbb
cmpsl
rcl
mov
insl
sbb
insl
cmpsl
mov
daa
jne
jno
cmp
ss
imul
fbld
pop
xchg
repz
sbb
jmp
enter
jnp
jle
pop
fimuls
aam
das
scas
in
insl
enter
shlb
xor
push
lahf
inc
aad
and
add
insb
hlt
fdivrl
ja
outsb
daa
jp
push
rcr
xlat
jb
mov
dec
or
mov
cmp
pop
dec
movsb
addl
push
jns
icebp
inc
cwtl
adc
inc
mov
dec
jmp
push
insl
add
inc
andb
mov
out
xchg
test
mov
xor
xchg
sahf
pop
ljmp
sub
scas
and
out
ss
stc
ljmp
out
xor
sahf
hlt
roll
iret
sbb
fstl
push
testl
jne
out
jne
cli
and
cmpsl
fwait
sub
daa
daa
xchg
adc
adc
push
call
sub
xchg
idivl
mov
or
cmp
test
js
sbb
inc
cmp
mov
xor
loopne
scas
xchg
push
iret
push
cmp
dec
or
xchg
mov
test
mov
adc
inc
mov
lds
cmpsl
xchg
or
lds
int3
repz
aam
push
movsl
cmp
mov
cs
sub
jns
sbb
mov
or
add
es
mov
stc
mov
in
xchg
mov
enter
mov
pushf
idivl
stos
ja
mov
jecxz
and
into
popf
jnp
jl
ljmp
add
stos
add
inc
dec
and
rcrb
adc
pop
idivl
out
lock
or
cmpl
mov
sbb
cmc
cmp
movsl
testb
sbb
mov
mov
xchg
pop
xor
movsb
std
pop
mov
scas
mov
fimuls
mov
mov
cmpl
hlt
shlb
andps
imul
loop
mov
push
mov
insl
sub
popa
jb
rorb
filds
dec
push
ds
stos
fs
out
pop
xchg
push
loopne
fincstp
into
cmpsb
pop
cltd
add
jle
xchg
test
jle
js
les
call
mov
mov
test
aas
inc
repnz
dec
or
sbb
mov
scas
sarb
popf
leave
jno
or
dec
jae
into
notb
nop
cmp
cmp
out
xor
test
cs
std
popa
sbb
sub
cmpsl
fisubs
push
pop
lret
cmc
cmc
sbb
or
jo
xchg
or
xchg
negl
push
stc
adc
cmpsb
mov
pushf
jbe
repz
mov
or
jno
inc
sbbb
and
lret
sahf
nop
stc
shll
icebp
cmc
cmc
sub
push
test
xchg
orb
mov
jo
jmp
jg
and
jmp
xchg
repz
ljmp
movsl
test
aam
lea
xchg
pushf
inc
dec
inc
aaa
test
and
pop
pop
fcmovb
mov
cmpsb
test
je
imul
cmpsb
or
mov
mov
and
clc
aam
mov
daa
fsts
push
clc
dec
mov
mov
and
push
lahf
dec
mov
and
push
stos
aaa
call
push
fwait
xchg
jg
xchg
mov
pop
outsl
negb
sbb
or
jnp
pop
mov
mul
lcall
cwtl
stc
fs
adc
inc
cmpsl
lret
push
jo
or
pop
fmuls
sbb
insl
jnp
in
cmc
add
add
in
sbb
cwtl
fwait
clc
cmp
je
xor
bound
outsl
pop
xchg
adc
sub
int
adc
xlat
sbb
les
sti
and
xlat
popf
push
mov
xchg
jae
push
fisubrl
out
ret
imul
cmp
test
dec
inc
stos
dec
in
div
mov
int
fdiv
push
hlt
es
cmpsl
xor
pop
out
dec
js
movsl
leave
push
inc
add
pop
orl
jno
pushf
pop
inc
lds
jnp
push
xchg
adcb
nop
out
pop
push
push
imul
dec
push
lods
push
push
fwait
cmp
cmp
mov
pop
mov
mov
sub
and
loope
dec
fnstcw
dec
and
adc
pop
adc
mov
je
nop
and
mov
fsubs
fwait
push
or
adc
insb
jle
jecxz
adcl
mov
mov
push
mov
in
mov
mov
ja
xor
iret
mov
ret
lods
sbb
cmp
std
inc
test
inc
xor
jl
mov
repnz
mov
out
lods
sbb
call
add
and
sti
ret
cli
mov
outsl
orl
jg
cmp
and
jge
dec
jb
lret
dec
aam
pusha
sub
dec
cmpsb
out
pop
xlat
fiaddl
test
ror
mov
mov
cmp
add
or
nop
ljmp
in
add
xchg
lret
add
adc
pop
push
xor
js
fsts
and
push
mov
iret
jge
mov
lods
mov
stc
ret
les
imul
mov
push
xor
sub
and
mov
cmp
jnp
imul
mov
clc
jnp
out
sbb
test
pusha
xor
push
or
or
out
push
stos
fistpll
repnz
arpl
aaa
nop
aam
xor
lods
mov
insl
cmp
data16
testl
lods
mov
push
jae
int
addr16
clc
je
enter
leave
pop
mov
pop
fisttpl
lock
aad
mov
insl
pushf
push
sub
dec
mov
lret
rcl
dec
mov
or
mov
loop
jecxz
push
insl
into
or
rorl
mov
stos
loopne
push
sbb
dec
popa
fwait
sub
mov
adc
out
xchg
dec
rcrb
stos
out
fistpl
mov
sbb
xor
inc
shll
cmp
cmpl
push
das
cmpl
mov
aaa
sub
xchg
stos
pop
fcoml
xchg
scas
ret
sahf
push
ret
loopnew
movl
xor
xchg
jns
push
jl
cld
lock
iret
movsb
adc
out
call
and
arpl
fsubrl
sub
imul
and
xor
shll
iret
loope
mov
mov
lcall
cmpsb
in
pop
adc
lods
xor
add
ret
xor
xchg
sti
ja
aam
int
push
cwtl
pop
and
xor
sti
test
pop
sbb
insl
adc
movsb
inc
mov
aas
stc
aas
xchg
sub
jl
outsb
addb
sbb
xchg
out
dec
pop
add
ret
mov
lahf
fcmove
mov
dec
into
stos
adc
lcall
adc
adc
in
or
mov
adc
adc
das
and
xchg
jne
inc
mov
add
stos
dec
aam
dec
pop
or
les
aam
add
rorl
push
ds
cmp
imul
dec
fldenv
jg
push
mov
sub
out
push
cmp
pop
std
in
ss
and
add
xchg
mov
push
mov
xor
mov
push
in
sbb
das
and
jg
dec
ret
js
test
cmpsl
cmpsb
xor
adc
ljmp
fists
ficoml
mov
pop
sub
cld
xlat
push
mov
ret
scas
pop
out
or
call
mov
fdivr
adc
arpl
mov
lahf
jb
push
mov
xchg
inc
inc
mov
lods
push
add
enter
lahf
je
sti
add
aas
mov
sbb
jp
mov
xchg
sarl
cmpsl
fldenv
flds
sbb
jecxz
or
or
out
cmp
sub
fs
mov
sbb
mov
cltd
pop
hlt
andb
xor
dec
fnstsw
pushw
jbe
cld
std
loopne
nop
mov
dec
aad
out
and
into
jne
sub
and
adc
adc
push
cmpsl
sbb
dec
xchg
push
out
repnz
pusha
jl
ljmp
sbb
jl
adc
dec
mov
aaa
jge
scas
stos
mov
test
pop
lahf
sub
scas
insl
fwait
push
arpl
add
adc
jno
inc
stc
stos
cmp
fbstp
cmp
or
rolb
sahf
jl
fcoml
mov
dec
pusha
stos
push
pop
adc
fisttps
add
inc
add
pop
push
movsb
pop
mov
sub
push
cli
cld
hlt
aad
mov
dec
or
or
dec
xchg
add
movsb
jecxz
std
cltd
test
stos
push
iret
push
xchg
insb
sbb
nop
inc
cs
rol
lahf
pop
loop
dec
jl
pop
and
jne
shl
mov
mulb
adc
insl
sbb
cmpsl
imul
insl
push
sysenter
ljmp
andb
lret
sub
lods
ret
shrl
cmpb
cltd
out
add
cmp
imul
lods
push
cwtl
mov
or
cltd
lds
dec
and
insl
pusha
popf
movsl
jge
pushf
dec
jns
jne
mov
adc
shl
and
inc
jle
fidivrs
loopne
xchg
rorb
sbb
rcpps
out
mov
pop
orb
insb
test
xchg
dec
dec
cltd
push
mov
and
notb
enter
outsb
mov
or
mov
sahf
mov
and
cmpsl
insl
mov
incl
repz
sbb
cli
iret
adc
push
lret
push
mov
mov
push
push
mov
cmp
cmpsl
orb
push
sbb
and
add
lds
out
pop
sti
cli
nop
lea
call
sbb
lahf
fistps
dec
jg
cld
pop
cmp
std
adc
dec
les
jne
scas
aam
push
dec
cmp
lock
addl
ljmp
icebp
stc
sbb
insb
mov
cmp
inc
fldcw
xchg
js
in
mov
fs
outsb
sti
loope
mov
dec
roll
inc
inc
adc
je
xchg
push
mov
adc
sbbl
adc
push
xchg
adc
pop
mov
xor
dec
jno
inc
push
push
clc
ror
pop
jne
ja
into
cmp
dec
cmpsb
notl
push
cwtl
shl
repnz
fs
sbb
sbb
lds
sbb
inc
sti
push
call
ja,pn
add
es
leave
pushf
add
aam
out
pop
and
je
push
lret
mov
push
enter
sbb
sbb
mov
add
xor
xchg
sbb
jge
lds
sub
jo
add
outsl
int
push
jecxz
test
fwait
shrl
aaa
decl
fs
ljmp
mov
call
pop
fidivl
or
xchg
xor
and
sbb
inc
inc
lods
xor
mov
pop
jp
out
mov
shll
adc
dec
sub
cmp
jecxz
pop
dec
pop
cmp
pop
mov
inc
in
fwait
pop
in
loop
outsb
mov
push
pusha
xchg
test
in
test
fwait
out
sbb
idiv
arpl
sub
dec
fisubl
int3
jl
sub
push
outsb
decl
cmp
mov
sahf
loopne
mulb
call
push
jl
addb
inc
adc
imul
mov
call
lcall
cli
jle
leave
fucomip
push
and
add
pop
out
cmp
cmp
xor
rorl
mov
cli
xchg
shrb
sub
or
jge
aad
mov
test
cmpsl
mov
pop
xchg
dec
jecxz
repz
sbb
or
cli
xor
add
adc
arpl
push
mov
pop
xchg
dec
jecxz
repz
sbb
or
cli
xor
add
adc
arpl
push
mov
pop
xchg
dec
arpl
repz
sbb
and
xor
add
adc
arpl
push
mov
pop
xchg
dec
jecxz
repz
sbb
or
cli
xor
ficoml
mov
xor
jne
int3
nop
fsubl
lea
mov
and
inc
or
jo
or
fsubl
mov
pushf
loopne
lock
dec
adc
xor
push
sbb
sub
cmp
int3
nop
fsubl
mov
pushf
loopne
lock
push
or
adc
dec
xor
dec
push
dec
leave
adcb
xorb
jae
scas
or
call
test
in
shll
clc
or
sub
push
xchg
adc
and
negb
lods
xchg
mov
mov
xchg
mov
fcompl
sbb
cmp
sahf
rol
popf
ja
jg
dec
jp
fildll
and
fldenv
add
inc
xchg
leave
stc
xor
push
movsb
cwtl
pop
add
push
stc
mov
pop
jb
jg
in
lret
icebp
jnp
std
icebp
mov
xor
push
or
inc
fdivrl
test
out
push
hlt
cmp
adc
pop
es
push
dec
jp
fcomps
jne
jl
push
dec
pusha
sub
ret
fmulp
nop
fsubl
mov
pushf
loopne
lock
and
inc
or
sbb
sub
jp
int3
stc
movsl
lds
cltd
call
inc
cmp
inc
inc
aas
pop
or
js
pop
and
and
andl
lahf
xchg
mov
xchg
sub
cs
or
and
dec
jo
jmp
mov
pushf
loopne
lock
and
inc
or
sbb
sub
cmp
int3
nop
fsubl
mov
pushf
loopne
lock
and
inc
or
sbb
sub
cmp
int3
xor
cmp
jns
pop
pop
sti
out
pop
imul
leave
outsl
loope
mov
fiadds
decb
divb
int
mov
inc
das
sar
push
sub
insl
lret
mov
sub
push
mov
cmp
xor
int
mov
sbbb
jmp
imul
inc
lods
aad
xor
jmp
cmpsb
inc
push
out
mov
xorb
dec
mov
and
aam
jge,pn
lret
shrb
test
call
xor
sub
jecxz
jo
pusha
mov
push
fisubs
jecxz
clc
jecxz
daa
popa
push
add
iret
shr
stos
rep
addl
jae
jg
fsubrs
inc
das
cmp
mov
fs
push
lret
idivl
hlt
push
cmp
xchg
rclb
scas
jmp
int
pop
or
int
push
inc
pop
pop
xor
mov
inc
mov
mov
ret
call
adc
pop
cmp
pop
jb
or
gs
add
mov
out
push
dec
scas
jo
lret
cmpb
andl
lret
xor
pop
into
adc
jns
and
cmp
xor
loope
lods
and
out
lahf
in
mov
mov
arpl
pop
daa
leave
xor
dec
stos
adc
or
roll
mov
icebp
insl
xlat
bound
or
arpl
fsts
mov
xchg
sbb
ret
sbb
mov
adcb
imul
add
fxch
jg
lahf
popf
adc
inc
pop
mov
incl
outsb
cmc
pop
mov
pop
aaa
mov
xchg
test
pop
jg
xor
jae
cs
sti
xchg
and
mov
sbb
je
ljmp
xor
mov
xlat
aas
mov
xchg
subl
inc
jp
push
mov
or
mov
test
bound
sbb
mov
add
fstps
jo
inc
pop
add
cld
ljmp
push
sbb
popf
cmp
mov
cmp
adc
out
xchg
paddd
lret
jae
mov
dec
sbb
jae
lea
cmp
sub
clc
mov
ret
fbld
mov
mov
mov
or
mov
cmp
mov
daa
pop
push
hlt
or
add
roll
jnp
andb
fmull
loop
outsw
and
mov
fs
adc
sbb
push
or
mov
pusha
loopne
shlb
loope
or
aad
xor
movsl
mov
sti
rcll
inc
ds
fldl
stos
push
pop
inc
scas
jl
fs
in
fwait
orb
push
dec
call
cltd
out
aas
xchg
insl
jbe
in
cmp
ret
push
xor
adc
outsb
test
jbe
jle
cmp
sub
scas
fldt
fdivrs
sbb
faddl
out
or
add
pushf
mov
jo
and
inc
out
cmp
inc
push
jge
adc
jne
fisubrs
xchg
pusha
mov
cli
push
aas
cmp
or
aaa
addr16
push
cmpsb
jb
push
or
cmp
sbb
and
test
push
sub
pop
ljmp
mov
test
sahf
ret
addps
push
negl
cltd
mov
std
ret
dec
jecxz
iret
fistps
imulb
in
test
test
or
cltd
add
mov
sbb
lcall
or
jne
cmp
inc
je
sarb
jo
mov
mov
dec
jo
cmp
cmp
add
jmp
enter
test
mov
ficoms
and
xchg
imul
bound
addr16
ss
clc
cmovge
sub
and
lea
js
rclb
cli
sub
push
push
in
pop
divl
adc
shll
pusha
cmp
in
andb
in
loop
mov
push
push
mov
sbb
or
add
mov
jp
int3
cwtl
pop
inc
pop
cmpsl
mov
mov
ljmp
jecxz
sub
mov
test
sbb
popf
cmp
jmp
jo
xchg
xchg
rcll
xchg
and
mov
jns
mov
test
int3
ja
iret
sbb
movq
pop
mov
inc
pop
xlat
lcall
out
leave
push
dec
mov
mov
shll
mov
sbb
lea
jbe
leave
imul
cmp
xchg
inc
lods
nop
sbbb
sbb
lock
xchg
cmove
add
addr16
xor
sub
pushf
pop
in
pushf
dec
ret
cmp
inc
test
push
pop
inc
jbe
roll
repz
ss
inc
cwtl
mov
dec
push
push
xor
push
push
out
cld
lds
aas
sub
mov
push
mov
inc
stos
gs
cmpl
mov
jg
shrl
jl
push
xchg
adc
int
fistpll
mov
adc
or
sub
daa
xchg
scas
outsb
lcall
jnp
push
inc
dec
mov
loope
mov
rclb
mov
push
into
movsb
push
repz
js
sti
jl
dec
lahf
and
imul
jg
mov
cmp
add
imul
outsl
mov
fisttpll
mov
push
stos
lret
dec
cwtl
mov
popa
aas
mov
cmp
mov
jne
inc
mov
push
sub
and
mov
fs
xor
jb
cmp
test
xchg
dec
cmpsb
imul
xor
fildl
mov
aas
add
enter
or
out
pushf
jmp
lea
cmp
jne
xor
sbb
inc
addr16
and
mov
rcrl
or
cli
xchg
ja
outsl
ror
push
mov
sbb
movsb
add
pop
out
dec
bound
xchg
outsb
mov
xchg
in
lret
push
dec
adc
lods
in
imul
sbb
in
lds
mov
push
xchg
adc
ljmp
xor
in
cmpsb
mov
dec
in
mov
push
add
mov
jecxz
mov
repz
mov
pop
dec
pop
adc
xor
fsub
cmp
push
mov
fimull
fisubs
push
and
xor
ds
sti
sahf
adc
orl
cld
cmp
iret
aas
mov
push
aad
dec
push
repz
lock
aas
inc
ja
test
push
sar
insl
daa
dec
jl
jmp
fs
ja
xchg
mov
cmpl
or
sbb
dec
pop
lds
dec
cli
cld
sbb
lret
popl
cld
mov
inc
sbb
push
xor
out
les
push
aas
lods
dec
mov
repz
movsl
lret
jl
sub
pop
jge
arpl
jae
pushf
mov
mov
or
call
inc
cmp
jle
mov
inc
mov
pop
sbb
in
ret
cmp
aas
jo
pop
or
gs
dec
cmp
rcll
push
lcall
mov
ja
test
dec
test
push
and
fs
iret
push
xor
sbb
cwtl
xor
push
fildl
in
stc
push
out
fwait
cmp
arpl
lahf
and
mov
andb
sbb
sub
add
xchg
pushf
mov
fwait
dec
mov
dec
push
cmp
xchg
mov
aam
hlt
sub
aad
xor
fwait
jnp
push
adc
idivb
push
fsubrs
sbb
dec
xor
cltd
push
ljmp
ds
jmp
ret
test
xorb
out
or
ja
call
push
insl
fimull
stc
mov
add
and
sbb
jno
dec
lods
lret
cmp
stos
inc
lret
nop
sbb
xchg
insb
lods
push
jecxz
sbb
icebp
xor
rorl
add
pop
cmp
rclb
gs
xorb
push
xchg
sbb
inc
sub
movsb
movsl
inc
mov
dec
cmpsb
sub
push
inc
leave
inc
push
mov
xorb
mov
dec
shll
mov
cmp
lcall
fadds
lret
repnz
repz
nop
sbb
cltd
jmp
xlat
mov
push
test
lea
mov
push
hlt
cld
dec
add
jo
and
pop
es
test
dec
pusha
push
iret
addr16
loope
sti
ficompl
jae
mov
lock
sbb
pop
out
fwait
add
ret
xor
and
ret
mov
or
ja
mov
mov
movsb
cmpsl
jmp
and
out
ss
jne
test
dec
bound
fbld
icebp
cmp
sbb
sub
jno
inc
xor
cmp
jle
out
jne
clc
ljmp
dec
add
sub
adc
lods
mov
sub
xchg
int3
jmp
inc
sub
mov
xchg
outsb
or
ja
jae
fsubs
jl
shll
mov
loope
jo
fldl
cld
dec
sub
rclb
xchg
mov
idivb
out
bound
mov
inc
mov
lahf
lcall
inc
jl
adc
jb
mov
lock
in
push
or
shl
sub
arpl
ret
pop
or
sti
cmp
mov
lea
out
into
gs
and
dec
aaa
xchg
in
in
sahf
mov
mov
push
lret
filds
push
shl
pop
or
add
in
gs
jl
shlb
and
mov
negl
mov
xchg
jg
push
call
sbb
das
divl
sbb
dec
jb
in
adc
icebp
cmp
sbb
push
jo
inc
inc
aad
add
sub
mov
in
xchg
adc
add
add
outsl
push
pop
mov
mov
dec
pusha
adc
cmpsb
outsb
fcomp
ret
imul
fldcw
mov
pop
lcall
xor
pop
inc
gs
cmp
mov
pop
icebp
xchg
das
lret
out
xchg
mov
push
mov
aam
jb
dec
push
mov
movsb
xchg
je
dec
popf
mov
mov
insl
or
je
ds
cs
sbb
stc
mov
hlt
push
jle
pop
les
test
mov
dec
in
add
fidivrl
std
jmp
cs
sub
bound
ljmp
add
jno
into
test
pop
jbe
inc
mov
andl
mov
ret
sub
shrl
adc
xchg
xchg
pop
inc
dec
sbb
mov
jne
mov
sub
lahf
loopne
adc
pop
mov
dec
std
loope
loopne
lahf
inc
mov
fwait
in
aad
fldt
jge
stos
filds
cmp
mov
adc
mov
nop
shll
in
pusha
mov
sarl
enter
dec
mov
pop
sahf
pop
rclb
or
mov
or
or
inc
mov
mov
sub
push
xor
pusha
lahf
imul
jb
out
movsb
call
xchg
std
sbb
sub
jae
sbb
arpl
xor
insb
std
ret
and
popa
in
xor
lods
jmp
adc
cwtl
xorb
push
cmp
cmp
sub
jns
push
popa
movsb
dec
arpl
enter
push
mov
mov
dec
movsl
stc
xchg
insb
xchg
mov
adc
jl
jg
adc
out
jg
mov
mov
addr16
dec
and
dec
lock
adc
je
mov
loope
and
adc
lock
sub
adc
leave
rcl
mov
push
jl
push
inc
sbb
mov
sbb
xor
dec
bound
addb
xchg
out
mov
xor
loop
cmpsl
xor
lock
push
add
lds
je
fstpl
sub
inc
cmpsb
fsubrl
xor
push
adc
xor
sbb
sahf
es
pop
popa
cmp
mov
shlb
mov
add
adc
popf
dec
jecxz
jge
rcll
dec
and
mov
mov
std
movsl
je
sub
rcl
xchg
mov
sub
mov
call
movsb
adc
cltd
pushf
sahf
popa
cmpsb
sbb
fnstenv
int3
jae
xor
jae
ljmp
inc
dec
leave
xchg
cmp
dec
mov
mov
inc
inc
rcrb
inc
push
xchg
and
dec
ror
enter
xor
lret
lret
sub
jmp
inc
gs
xchg
inc
roll
mov
pop
ljmp
bound
mov
lock
clc
data16
cmpl
pushf
mov
cmp
add
push
inc
cmp
enter
push
dec
mov
fsts
dec
and
and
lods
or
mov
or
aas
pop
sahf
hlt
pop
in
pop
jp
in
aaa
outsl
lret
inc
xor
out
js
cltd
pop
out
shr
inc
in
adc
shll
cltd
inc
ja
icebp
jo
cmp
xor
ljmp
sub
fwait
lahf
sahf
cmp
or
out
pop
popa
or
push
pop
shll
pop
mov
cwtl
je
dec
rclb
sub
ljmp
loop
sbb
xchg
in
sbb
clc
testl
push
sbb
or
testb
js
cltd
shll
es
scas
sub
scas
mov
mov
lret
push
cli
icebp
jno
adc
inc
or
push
call
push
pop
mov
sub
xchg
lahf
adc
mov
rolb
inc
lret
xchg
mov
jae
mov
sarl
sbb
pop
sahf
sub
cld
ljmp
inc
out
pusha
mov
dec
sub
or
mov
and
rol
daa
or
pop
xor
mov
add
mov
ljmp
in
std
mov
rolb
pop
nop
jns
sbb
sub
lods
fs
xchg
cmpsb
aas
shlb
mov
xor
es
int
mov
push
test
cld
add
pop
mov
scas
fbstp
pop
mov
and
dec
add
or
imul
adc
iret
inc
rclb
lock
xchg
pop
repz
mov
dec
shll
clc
or
mov
ljmp
pushf
mov
lret
and
lcall
les
in
sub
js
insl
test
xchg
and
xor
cmpsb
fstps
lcall
sub
xchg
aam
pop
ret
adc
jbe
pop
cmp
pushf
fidivs
lods
push
push
inc
loop
mov
test
mov
mov
jecxz
shl
add
outsl
jmp
cmp
mov
sbb
int
int
rclb
cmp
mov
aad
inc
mov
outsb
shll
adc
mov
ficomps
dec
jecxz
pop
test
fstpl
std
xchg
xchg
or
jb
sbb
xchg
movsb
int3
fmuls
movsl
outsb
cmp
cld
out
data16
movlps
push
rolb
push
xorl
mov
ljmp
scas
xor
jge
pop
jbe
dec
testl
int3
orl
testl
xchg
out
hlt
inc
mov
cmpl
test
lods
xor
mov
jle
cli
jns
sbb
mov
push
adc
roll
cmp
cmp
lahf
das
cld
adc
and
and
cmpsb
test
sti
mov
push
shr
repnz
cmovbe
in
faddl
imul
lock
inc
mov
das
jno
int3
std
pop
ret
dec
jb
clc
bound
xchg
std
pop
and
dec
push
call
xchg
jne
dec
add
inc
jno
shrl
inc
push
lea
xchg
adc
and
cmp
stc
xchg
cmp
xor
xor
fistpl
jl
mov
clc
jmp
adc
popa
popa
sti
sub
jae
pop
out
les
fucomi
jge
rcrl
lcall
inc
mov
add
imul
into
push
pop
mov
out
mov
fisubrs
mov
dec
jbe
jmp
rolb
xchg
popa
add
add
faddl
or
repnz
std
xorl
lods
notl
lea
mov
pop
insl
out
mov
aad
ret
sub
jno
je
mov
xchg
repz
ja
mov
paddq
mov
xchg
pop
and
aad
sub
popf
push
push
push
sti
lcall
loope
cltd
mov
cmp
push
lret
cmp
push
fs
aaa
sub
loopne
push
dec
das
ss
add
adc
and
jl,pn
mov
loope
aaa
sub
lret
mov
sub
lea
pop
es
xor
pop
ret
ds
bound
pusha
test
repz
cs
or
pop
scas
sbb
scas
xor
pop
dec
rolb
jae
cmp
xor
in
popl
or
jno
xor
mov
pop
testb
leave
andb
mov
inc
mov
adc
cmp
sarb
addb
shrl
or
push
xchg
pop
mov
jl
pop
lock
pop
mov
lahf
add
sbbl
adc
jg
lds
xchg
mov
sub
xor
lahf
testb
dec
add
xor
orl
ret
sub
lods
jle
push
out
cmpsb
jnp
or
jns
pop
push
jbe
inc
leave
out
sub
inc
cmp
addr16
sarb
ror
inc
test
lahf
fcmovne
cmpsb
push
das
call
inc
cwtl
cvtps2pi
sbb
push
stc
sbb
ret
dec
xor
imul
push
jno
fwait
sub
cmp
pop
and
jmp
jle
das
ret
fimuls
jecxz
jp
fwait
mov
call
xor
ja
fsubr
test
pop
push
pop
xor
mov
mov
int
push
sbb
dec
jle
into
push
dec
dec
popa
mov
imul
repz
xlat
add
scas
int
mov
cmp
mov
fsts
insl
mov
add
and
mov
lahf
inc
loop
xchg
ja
in
andb
mov
adc
inc
aam
add
jle
mov
pop
and
dec
xchg
mov
cmpsl
sarb
js
jp
mov
or
xchg
insl
xorb
ret
leave
push
das
insl
hlt
jae
dec
xchg
or
jne
movsb
mov
test
imul
testl
sbb
mov
jae
aam
mov
jno
xor
jns
movsb
mov
xor
sahf
es
jl
movsb
push
movsb
push
xchg
or
add
notl
adc
pop
xor
mov
push
nop
dec
mov
push
aas
test
sbb
sbb
dec
mov
mov
xorl
loopne
sub
jmp
repz
mov
xlat
test
aam
sti
movsb
push
push
cmp
jb
insb
movsb
mov
in
mov
js
inc
mov
adc
xchg
xorl
loopne
lock
pop
into
rcl
into
and
inc
cmp
mov
adc
cs
rolb
jmp
pop
fistpl
mov
pop
jnp
inc
xchg
in
inc
cmc
int
enter
data16
and
add
ret
inc
outsb
fstps
leave
pop
ret
sbbb
jp
adc
xchg
ja
repz
mov
jne
xchg
sub
mov
js
lds
mov
jmp
or
dec
push
mov
mov
push
jmp
stos
add
aaa
add
arpl
pop
stos
mov
pop
cmp
nop
es
dec
or
loope
ds
or
mov
add
jae
inc
xchg
addl
ds
jp
xlat
xchg
jno
int3
mov
or
xor
popa
lret
inc
dec
adc
push
lods
or
or
leave
push
push
mov
xor
jmp
das
jle
sub
lock
insb
aad
add
out
and
and
outsb
push
jg
mov
mov
shll
push
push
xchg
inc
push
dec
push
aad
in
pop
pop
pop
imul
push
adc
ret
repz
popa
push
or
test
jmp
jecxz
call
xchg
aas
pop
icebp
ficompl
ss
sub
dec
xor
scas
fisttpl
add
daa
xor
push
nop
dec
sub
pop
sub
loop
cmc
pop
mov
adc
pop
cmc
mov
rcl
jl
jg
cltd
cmp
subl
xorl
out
add
sbb
mov
rorb
add
and
inc
or
sbb
sub
cmp
int3
nop
fsubl
mov
pushf
loopne
lock
and
inc
or
sbb
sub
cmp
int3
nop
fsubl
mov
pushf
loopne
lock
and
inc
or
sbb
sub
cmp
int3
nop
fsubl
mov
pushf
loopne
lock
dec
adc
mov
aaa
test
jecxz
rorl
fidivl
jmp
mov
push
into
add
xor
add
push
dec
add
test
mov
ljmp
push
and
cmp
inc
pop
jae
arpl
sub
pop
stos
xor
xchg
jmp
hlt
enter
cmp
push
dec
jl
push
cmp
sbb
push
jecxz
sbb
stc
int
fcmovnb
aas
and
imul
in
push
mov
xor
fidivs
push
add
cld
out
aad
push
pop
adc
lahf
loope
aaa
push
loop
ret
cli
repz
dec
popf
es
sbb
mov
arpl
fadd
lods
mov
movsb
mov
push
scas
sub
sbb
jecxz
daa
imul
aad
cmp
pop
adc
xor
jl
ljmp
fninit
sub
push
sbb
cld
dec
es
stc
and
cmp
gs
fildll
push
test
adc
cld
dec
int3
cld
and
and
xchg
xchg
push
push
cmpl
lret
repz
sub
cmp
dec
jbe
mov
jb
dec
loopne
out
mov
mov
scas
mov
lahf
mov
inc
dec
pop
aas
or
push
adc
fldenv
mov
imul
jbe
push
or
add
arpl
cli
stc
mov
mov
ljmp
xor
and
push
dec
inc
pop
jae
arpl
mov
mov
repz
xor
and
push
dec
inc
pop
jae
arpl
mov
ljmp
rorl
lds
mov
repz
xor
rolb
xchg
mov
imul
dec
push
lret
addr16
pop
in
mov
fnstsw
fsts
sub
iret
mov
sbb
iret
sti
ss
cltd
test
mov
mov
add
mov
sbb
sbb
inc
mov
dec
add
ret
mov
xor
out
ds
jae
data16
jg
pop
jns
subl
je
add
pusha
mov
sub
fwait
into
movsb
cmc
popa
test
scas
xor
cmp
lds
or
mov
inc
outsl
jl
aaa
fdivr
add
jno
repnz
out
pop
sbb
lds
lods
mov
and
imul
xchg
and
cli
inc
clc
mov
mov
jle
and
xor
push
dec
adc
lds
pop
out
and
dec
stos
xchg
jmp
mov
dec
sahf
xchg
mov
mov
fisttpl
cmp
imul
movsb
jno
mov
ret
shlb
loopne
stos
cmp
in
inc
stc
adc
xchg
clc
xchg
sbb
add
jge
lret
mov
add
fidivs
enter
test
in
cmp
cld
add
inc
mov
cmp
sbb
jno
mov
enter
sbb
xchg
lret
in
pushf
adc
outsb
jbe
popa
pop
xor
pushf
jbe
int3
imull
cmp
and
ss
push
lea
mul
aas
std
lret
aaa
outsl
sti
sub
cs
pop
lods
sbb
push
pushf
xchg
dec
in
cmpsl
in
push
sub
xchg
and
dec
mov
imul
iret
testl
pop
adc
clc
inc
mov
xor
push
and
xchg
pop
xor
fistl
mov
int3
movsb
jge
enter
pop
dec
movsl
mov
sub
mov
int
add
push
add
cmpsb
out
sbb
lahf
repz
mov
popa
lds
xor
icebp
jbe
mov
loope
popf
lds
cli
lock
pushf
sub
pop
xor
or
dec
jle
lock
inc
pop
mov
push
shll
sub
mov
cld
pop
xor
xor
jo
ret
sub
xchg
pop
pop
adc
shlb
mov
imul
aas
mov
pop
daa
lret
clc
sti
stos
stos
hlt
loop
pop
push
sti
and
xor
and
cmpsl
andl
ret
cmp
cmp
push
inc
pop
sub
inc
push
clc
mov
cmp
shll
add
aad
pop
pusha
jae
push
jns
test
lea
mov
hlt
mov
push
cwtl
out
mov
lea
mov
cmp
js
lods
mov
je
or
iret
and
pop
scas
dec
test
xor
push
xor
int3
jae
jmp
mov
subl
adc
mov
sahf
jmp
xor
adc
ds
cmpsl
mov
adc
mov
stc
lret
add
cmp
leave
add
pop
mov
sbb
mov
mov
ljmp
iret
lahf
dec
or
mov
mov
ret
cmp
mov
xor
add
jo
movsl
cmpsb
pop
mov
xchg
das
inc
push
loop
jmp
inc
inc
or
daa
cmp
pop
sub
xchg
mov
mov
rcrb
data16
stos
push
xchg
movsl
stos
int
cli
adc
mov
icebp
sub
mov
clc
loope
in
cmpsb
jo
dec
xor
push
cmp
repz
pop
aas
pop
adc
mov
shlb
mov
pop
fs
mov
lock
mov
sbb
cmc
jmp
sub
repz
inc
daa
loope
test
xchg
fsubrp
lods
mov
lock
fimull
test
test
call
xchg
test
shrb
and
addl
pop
js
loope
movsb
add
xadd
adc
iret
xchg
xor
shr
pop
cmp
xor
cmp
les
or
les
jno
jp
leave
leave
in
push
cmc
add
sti
sub
mov
cmpsl
repz
inc
aad
out
push
pop
ss
xchg
adcl
divl
lahf
in
enter
sbb
ja
int3
jle
inc
dec
and
or
daa
shlb
daa
cwtl
push
cmp
cld
cmp
adc
data16
jns
push
loop
cmp
pop
aaa
pop
mov
lods
lahf
sbb
push
pop
cltd
rorl
out
add
divb
incb
sub
jle
sub
cld
adc
ret
mov
fisttpll
daa
push
inc
cmpsb
xchg
hlt
imul
jb
ret
xor
ss
cs
jge
xchg
mov
xchg
xor
cmp
shlb
cmp
sbb
xorb
stc
iret
add
dec
movsl
mov
add
ret
insl
jle
leave
push
outsl
lahf
mov
xor
or
push
mov
int3
dec
xor
xchg
in
out
cltd
popa
add
sub
outsb
std
lahf
int3
inc
dec
test
repz
inc
ret
inc
int
fwait
sahf
push
jb
shrb
loope
testl
fdivl
push
mov
xor
sub
push
jns
psrlw
cmp
fmull
jae
movsl
incl
add
arpl
jbe
mov
stos
inc
sub
xor
cwtl
cltd
xchg
es
call
xchg
mov
ja
mulb
loop
dec
mov
fwait
add
dec
push
subl
push
dec
mov
xor
sarb
inc
gs
jo
jo
stos
dec
mov
scas
lcall
and
and
into
lret
xor
rorb
mov
cld
ja
xlat
dec
popf
ljmp
push
outsb
enter
cs
fdivl
pop
adc
rcl
adcl
hlt
inc
fstpl
inc
in
lds
dec
cli
dec
andl
aas
call
cmp
fs
mov
cmp
stos
push
ret
push
push
xlat
outsl
pop
addr16
ror
inc
dec
cltd
and
pop
int
and
sbb
int
xchg
js
outsb
test
cmpsb
push
and
push
mov
test
arpl
in
stos
ret
out
adc
pop
cltd
repnz
sub
or
mov
xchg
pop
push
mov
adc
ljmp
mov
push
stc
pop
lret
test
in
mov
jae
pop
mov
dec
repnz
inc
out
leave
fnstsw
mov
xor
fwait
push
roll
aas
cmpsb
mov
test
and
int3
xor
lea
mov
jge
call
or
mov
fwait
out
and
xor
cmp
mov
in
jg
cmp
mov
push
lock
jle
xor
es
push
or
mov
push
dec
mov
mov
inc
fcoms
mov
ss
nop
mov
fisubl
cmp
ror
ljmp
loopne
push
data16
mov
xor
je
insb
aas
repnz
inc
ret
add
xor
mov
lods
stos
pusha
je
je
adc
and
incl
inc
imul
jg
xor
sbb
sbb
adc
sbb
and
xor
fbld
xchg
sbb
out
jns
push
int
mov
stc
fst
mov
cmp
stc
test
adc
cmp
adc
mov
pop
test
cmp
adc
adcb
mov
adc
sbb
mov
imul
hlt
sahf
stos
jmp
sbb
bnd
or
dec
jg
jnp
sti
popa
or
dec
int3
pop
popf
cmpsb
xchg
push
pushf
test
pop
outsb
dec
ret
pop
xlat
adc
test
std
stos
xor
leave
mov
scas
or
mov
xchg
imul
outsl
shrl
ror
adc
xchg
roll
repnz
stc
outsl
ss
pop
test
dec
add
and
pop
mov
pop
push
rolb
mov
mov
jnp
in
cwtl
fisubrs
mov
rorb
test
fbstp
js
sti
cmp
popa
sub
add
outsl
stos
aad
shrb
test
xchg
mov
xchg
adc
stos
cbtw
test
roll
cmpsb
repnz
leave
inc
add
loopne
xchg
sbb
jmp
push
xor
lods
mov
dec
or
and
mov
or
fdivrp
xor
in
xor
lds
xor
inc
sbb
cltd
mov
cmc
enter
add
out
clc
mov
sahf
mov
testl
inc
and
mov
mov
jp
lods
mov
and
xor
add
fs
xor
lret
es
leave
xchg
ret
das
inc
xor
ss
jmp
movsb
hlt
xor
xchg
pop
jae
rol
stos
sbb
jmp
xchg
sub
and
aad
mov
out
jg
push
andl
cmc
push
or
add
mov
lret
fs
loopne
mov
lods
out
aad
adc
xchg
in
sub
or
and
push
push
mov
outsb
sub
loope
test
in
xchg
jbe
aaa
mov
outsb
test
shr
idiv
or
mov
xor
inc
lock
jmp
dec
scas
ja
out
adc
cs
dec
out
imul
xor
cmpsb
in
xor
mov
mov
lcall
sti
push
jnp
push
xor
jl
cltd
lret
shl
xor
push
cs
dec
sub
xchg
ss
push
sbb
jp
xorb
int
push
data16
pop
mov
out
mov
inc
sbb
sbb
test
push
in
jmp
cmp
std
push
call
adc
shrl
xchg
or
fnstenv
push
add
cld
out
mov
sahf
push
push
in
or
cli
pmulhw
sti
dec
jae
je
add
jmp
dec
out
ja
ror
mov
mov
fisttpll
stos
push
repnz
push
movb
pop
testb
in
inc
mov
pop
sub
fldenv
lret
loope
inc
xor
je
jmp
pushf
cmpsl
pop
jecxz
jae
in
cmp
sub
pop
mov
or
fcompl
pop
xchg
test
jnp
sbb
push
adc
pop
repnz
inc
add
mov
mov
mov
push
mov
out
cmc
sbb
test
ret
test
addb
inc
lea
push
data16
in
cmpsb
or
shrb
jae
iret
and
jp
js
xor
push
push
sbb
sub
into
clc
in
dec
sub
mov
mov
mov
xchg
int
and
jl
frstor
mov
xor
dec
fldt
pop
push
cmp
xchg
xchg
mov
int3
sub
pusha
sbb
push
fstpl
fnstenv
add
push
lea
push
mov
fcomps
jbe
inc
out
xor
test
ret
rcl
xlat
push
lret
imul
inc
cmp
lcall
daa
sub
xchg
xor
xchg
pop
mov
shl
jecxz
sub
push
pop
add
rcll
mov
lds
lahf
pop
mov
in
icebp
lcall
imul
sbb
jne
xor
sub
xor
fldenv
or
test
push
sub
sub
movsb
pusha
or
add
jne
mov
and
es
lock
daa
int3
or
call
inc
inc
mov
sub
jecxz
in
add
mov
mov
pop
pop
mov
push
addr16
mov
addb
shll
mov
ljmp
adc
inc
cs
push
daa
push
xor
fs
or
pop
cmc
xchg
scas
lret
loope
sub
xchg
daa
cmp
aad
sbb
fwait
add
sbb
leave
imul
orl
mov
xor
lret
cli
pop
sub
pop
cli
ret
pop
scas
nop
xchg
pop
and
test
xchg
sbb
cmpsl
lret
jnp
pop
push
in
les
push
movsl
jnp
daa
outsl
inc
popf
scas
iret
cmp
lock
jnp
fstpt
mov
mov
sbb
sti
push
push
cmp
mov
aam
ficomps
jae
or
xor
loopne
cmp
or
and
shrl
mov
cmp
dec
pop
push
and
stos
push
jno
sub
ret
or
push
adc
sub
movsb
lahf
lock
movsl
dec
pusha
andl
lds
stc
loopne
dec
pop
adc
xlat
bound
sbb
and
cwtl
mov
mov
adc
icebp
jno
mov
mov
dec
out
sbb
xchg
mov
push
lock
xchg
adcb
mov
popa
aas
stos
pop
mov
loop
and
pop
xchg
into
xchg
adc
mov
jae
fidivs
shll
test
sbb
cmp
inc
lea
inc
testb
sbb
or
imul
stos
xlat
jle
mov
inc
push
pop
pusha
xor
mov
scas
ja
jp
stos
ds
add
xchg
inc
jecxz
mov
pusha
jmp
pop
dec
rorl
or
jnp
adc
adc
xor
and
lret
mov
call
inc
imul
inc
mov
add
addr16
out
movl
mov
shll
pop
dec
add
decb
bound
pop
push
mov
push
pop
bound
pop
sbb
ret
push
adc
aas
mov
ficoms
je
orb
out
dec
mov
cmp
and
add
and
pop
scas
cmc
xchg
or
call
inc
jo
ds
scas
or
cmpsl
and
push
mov
in
push
mov
and
fcomp
imul
lea
pop
mov
enter
mov
fists
jnp
add
jo
out
ret
jb
push
sub
sbb
mov
je
mov
int
sub
dec
ret
pop
out
push
or
mov
add
int3
sarl
xor
iret
mov
cwtl
in
mov
mov
js
stc
jp
leave
testl
mov
ret
inc
mov
jnp
pop
dec
xor
mov
div
push
popl
or
ret
sub
xchg
xor
push
bound
inc
or
inc
mov
fistps
repnz
jb
mov
xor
outsb
insl
scas
jle
and
adc
aad
test
lcall
push
repz
stc
jne
and
fwait
out
dec
mov
xlat
jno
faddl
cmp
mov
xor
pusha
inc
imul
hlt
mov
add
fdiv
lret
daa
push
shlb
xchg
sti
mov
jle
and
jns
adc
out
mov
into
aad
mov
dec
dec
jle
jl
fistl
xchg
rorb
inc
cmp
cmp
stos
jg
cmp
mov
pop
adc
leave
incl
movsl
sub
sti
subl
mov
pusha
add
xlat
and
pusha
leave
lcall
in
sahf
mov
jnp
mov
push
push
jmp
jmp
sahf
cmp
mov
inc
push
mov
lods
rdpmc
ret
movups
push
loop
lods
aam
shll
pop
rorl
add
hlt
sbb
outsb
push
in
cs
fs
int
push
mov
stc
jl
subl
addb
mov
aad
mov
push
xlat
cmc
pop
jne
cs
or
inc
ffree
pop
sub
outsl
js
dec
icebp
lods
or
outsl
ds
add
or
lahf
mov
je
lods
negb
xchg
xchg
xor
jne
sbb
jmp
push
xlat
lea
in
insb
cmp
call
movsb
int3
sub
subl
cltd
popa
loopne
mov
das
gs
cmp
jg
and
jo
mov
fdivs
xchg
int3
fsubl
pop
movsl
rcrl
pop
jl
jg
je
sbb
scas
push
fldenv
add
out
out
and
insl
jmp
imul
imul
sbb
mov
dec
jle
pusha
cltd
fldl
int
xor
aam
sbb
xchg
js
pop
sub
popf
or
mov
add
ss
inc
inc
inc
inc
into
fbstp
mov
repnz
or
call
dec
fcmovne
cmc
push
outsl
in
pop
pop
push
mov
xor
sbb
mov
xlat
loop
and
test
jg
jae
jb
mov
cmp
sub
mov
negl
xor
dec
and
mov
cmp
test
push
sarb
idivb
dec
inc
mov
clc
xor
cmp
inc
popf
pop
bound
xor
cwtl
cli
lcall
int3
stc
push
frstor
mov
cmpsb
xchg
cwtl
imul
and
sbb
pop
dec
cmp
imul
lret
add
pop
jg
aaa
cbtw
mov
push
mov
adc
int3
jmp
cmp
push
add
sysexit
sub
xchg
enter
dec
pop
push
mov
leave
jmp
pop
pusha
aas
test
rcrl
xor
or
pop
stos
sub
in
je
and
push
leave
dec
and
test
fcoml
sub
test
jo
adc
out
dec
dec
cld
jle
mov
das
jp
fdivrl
add
sub
jp
popf
movsl
add
jg
call
xor
mov
pop
cmp
push
lods
jg
sar
sub
cs
orl
pop
add
sub
and
lret
lods
add
cmp
add
icebp
sbb
xchg
mov
xchg
mov
hlt
mov
inc
aam
arpl
xor
lods
adc
cmp
push
pop
push
mov
push
xchg
shrl
push
outsb
push
mulb
cmp
inc
mov
add
fadds
mov
shlb
sub
cld
aas
and
mov
adc
int
jmp
cwtl
jmp
mov
or
jbe
adc
jns
stos
lock
sbb
stc
int3
push
dec
ret
aam
and
sub
fdivp
pop
adc
push
test
repz
jno
cld
js
mov
es
mov
sub
add
jge
add
xchg
call
cmp
push
ret
out
fwait
dec
mov
inc
sub
out
pop
push
sub
add
pop
mov
fisubrl
or
addr16
mov
in
sub
leave
pop
lock
mov
dec
jge
aaa
mov
movsb
out
xor
sbb
push
mov
mov
xchg
pushf
cld
cld
adc
and
frstor
xchg
mov
gs
stos
xor
xchg
mov
and
mov
gs
sar
adc
mov
sub
xchg
movsl
fstpt
clc
outsl
fmull
mov
mov
mov
test
mov
arpl
push
das
jge
adc
mov
and
mov
or
and
pop
pusha
mov
adc
icebp
sbb
xchg
ds
repz
and
mov
ja,pn
dec
push
scas
and
xchg
orl
dec
pushf
pop
pop
lds
pop
mov
adc
mov
jle
lea
inc
out
adc
push
add
sarl
cli
cmp
mov
aad
idivl
test
aam
scas
loope
cmpb
pop
or
out
mov
call
or
lret
inc
aam
scas
mov
jl
orb
xor
fdivrs
pop
fadds
and
test
xchg
cwtl
mov
in
mov
sub
test
sbb
xor
xlat
inc
push
sub
cmp
arpl
les
iret
inc
mov
push
scas
push
in
jg
aaa
or
dec
ficomps
cmp
je
hlt
popa
xchg
je
rorl
clc
push
jnp
sbb
or
int3
push
xor
imul
xchg
cmp
scas
ljmp
lahf
bound
pop
push
add
push
orl
rcrb
loop
pushf
out
push
mov
mov
jb
xchg
xchg
cmp
push
cli
out
jl
or
jne
push
adc
jecxz
cmpsl
into
daa
jle
lahf
fwait
mov
jg
sub
xchg
adc
int
in
sbb
cs
cmp
sub
je
aas
pop
adcl
andl
jmp
mov
test
push
sbb
inc
xchg
insl
int3
mov
mov
les
ss
xor
jae
jno
jne
cmp
jno
push
pushf
dec
sub
sahf
rorb
bound
lcall
ret
ljmp
xor
and
push
dec
inc
pop
jae
arpl
mov
mov
repz
xor
and
push
dec
inc
pop
jae
arpl
mov
mov
repz
jecxz
adc
add
aaa
sub
xor
inc
pop
jae
push
sahf
cmpsl
outsb
mov
test
cli
ror
ret
fidivl
arpl
in
cmc
cld
mov
sub
dec
and
lret
and
lods
scas
popf
sahf
lea
test
ror
ds
cs
jle
jmp
pop
dec
dec
mov
sahf
lea
fstp
int
cmp
push
or
outsb
pop
sbb
dec
mov
sahf
lea
fstp
int
cmp
jp
push
jge
push
add
sub
dec
leave
mov
in
repnz
lret
push
es
dec
or
mov
or
clc
jo
std
jge
adc
fsubs
shl
pop
repnz
insl
orb
sbb
inc
out
mov
test
aas
aas
pop
sahf
xchg
and
fimuls
scas
fisubs
mov
xchg
call
out
test
xor
in
inc
cld
loope
pop
sub
mov
sub
sbb
add
int
and
inc
dec
cmp
and
into
sub
mov
push
push
cmpsl
clc
jb
mov
jns
jp
push
setns
test
jle
lods
scas
popf
sahf
lea
fstp
int
cmp
push
or
outsb
pop
pop
dec
daa
fcom
into
scas
fcomi
lret
out
xchg
sub
nop
dec
sahf
dec
pop
dec
pop
outsb
jbe
dec
sti
pop
sub
cmp
lret
mov
int3
cld
cwtl
mov
mov
inc
dec
pop
pusha
jg
popa
mov
daa
push
lods
std
fcomi
call
out
fstp
int
cmp
push
or
outsb
pop
pop
dec
dec
mov
sahf
lea
fstp
int
cmp
push
or
outsb
pop
pop
dec
dec
mov
sub
leave
sub
mov
jo
xchg
push
lea
sub
pop
push
scas
jp
repnz
add
jae
xor
aas
cmpsl
or
imul
nop
xchg
xor
jae
mov
push
jo
or
and
js
xchg
dec
cmpsb
cwtl
notl
lock
test
adc
push
mov
rcrb
add
sub
xlat
aaa
cmp
mulb
int3
lahf
sub
das
xchg
push
adc
and
shlb
jp
popf
cmp
ds
jecxz
mov
dec
mov
mov
aad
adc
fiaddl
sti
inc
ljmp
insl
popf
push
rcrb
sahf
adc
data16
cmp
or
int3
jecxz
jmp
lahf
shrb
add
and
sub
dec
add
repnz
lahf
push
mov
insb
mov
pop
sub
xchg
mov
mov
stc
shl
jo
jnp
cmp
inc
mov
test
scas
xor
jge
call
cld
test
in
out
into
rcl
inc
jge
jns
roll
mov
xor
xor
popf
lret
inc
xor
mov
push
push
sbb
dec
push
and
bound
pop
jge
mov
pop
mov
inc
es
dec
mov
add
lods
imul
lods
test
clts
push
or
stos
loop
leave
xor
jmp
mov
cmc
mov
aas
stc
cs
das
outsl
xor
fnstsw
dec
mov
dec
lret
jne
popa
insb
sub
pop
aam
scas
cmp
sbb
hlt
or
lock
insl
cmc
xchg
pusha
jns
insb
in
and
fdivs
cmp
cmp
inc
push
test
dec
sar
rclb
les
inc
cmp
arpl
daa
int
arpl
test
dec
aad
or
inc
xchg
sti
mov
iret
call
mov
nop
and
les
pop
pop
push
push
xor
and
push
xor
sbb
in
mov
sbb
mov
lea
in
jle,pt
test
dec
sbb
iret
mov
scas
out
and
mov
arpl
mov
push
das
pop
psadbw
xchg
pop
xchg
xor
cli
cmpsb
xor
stos
ja
or
xor
inc
sub
xchg
orl
inc
mov
xchg
ret
and
pop
jge
sahf
inc
dec
ljmp
push
lods
lods
cli
pop
insb
imul
insl
aas
test
dec
fmulp
fisubl
jl
xchg
pop
outsl
rolb
pop
xor
adc
mov
mov
pusha
in
into
stc
jge
outsb
mov
int
adc
jo
mov
push
sub
push
cmp
repz
nop
iret
scas
mov
aam
pop
mov
mov
jns
jno
sbb
scas
fs
data16
out
xchg
dec
test
int
cld
inc
inc
pop
jo
scas
cltd
or
dec
popf
adc
pop
leave
sub
into
xchg
xor
cmp
pop
leave
sarl
mov
mov
pop
data16
adc
dec
clc
mov
in
dec
test
insl
fnsetpm(287
or
inc
xchg
xor
add
gs
fsts
lock
push
add
xchg
jecxz
push
icebp
mov
jbe
xor
mov
loopne
mov
jp
ds
popf
and
les
cmp
in
icebp
je
out
dec
insb
scas
jae
int
add
call
call
xorl
fcomp
jnp
cmovne
std
and
jbe
ja
lret
inc
add
aad
leave
mov
cmp
pop
and
addl
loopne
int
leave
jg
lret
push
icebp
aaa
lock
bound
je
ljmp
ffreep
cmp
mov
jge
cli
adcb
mov
insl
fidivs
aaa
icebp
je
dec
pop
mov
add
lods
jnp
icebp
shll
insb
popf
out
inc
mov
sbb
jns
mov
shrl
cld
clc
std
out
ds
pop
rcrl
pop
push
mov
cld
lock
fsubrl
and
dec
div
out
dec
das
pop
xor
or
fcmovb
push
popa
pop
push
fsts
les
jo
pop
dec
lods
sbb
mov
std
movsb
inc
lods
xor
jae
int
sub
mov
and
mov
add
adc
push
inc
gs
xlat
fstpt
flds
clc
bound
std
jp
aad
add
mov
inc
fimull
cld
xchg
sti
jb
nop
lods
adc
jno
pop
inc
mov
icebp
pop
inc
in
outsb
push
sbb
inc
into
pop
subb
jge
cmp
shll
jno
dec
dec
sub
or
int3
lahf
adc
xchg
inc
leave
mov
mov
adc
pop
mov
jae
popf
mov
mov
inc
fcmovnb
sti
and
xor
jp
jmp
mov
jg
das
xlat
sbbb
ds
subb
sub
push
sub
add
mov
jb
sub
cmp
loope
idiv
lahf
mov
fs
mov
lret
test
notb
sub
in
cli
cmp
test
xchg
addr16
mov
sub
in
into
ds
in
ret
mov
icebp
mov
sahf
cwtl
in
fcomip
and
pop
pop
push
xchg
daa
aaa
lods
or
fs
push
dec
jge
scas
xchg
xor
sub
xchg
sub
pop
scas
fs
and
test
pop
scas
mul
test
push
or
dec
dec
ss
inc
ret
sbb
dec
or
ret
push
into
or
mov
add
jnp
cld
jecxz
mov
pop
mov
test
es
pushf
add
mov
pop
mov
and
pusha
in
daa
insl
popa
dec
shrb
repz
sub
sub
fwait
cltd
jge
sub
lods
dec
test
xchg
adc
pop
mov
test
in
adc
pushf
data16
jno
dec
sub
mov
push
xchg
jbe
lock
sbb
mov
xchg
out
push
popf
xchg
lea
mov
sub
pop
andl
mov
aam
cwtl
mov
fstl
jmp
repz
icebp
pop
push
fnsave
push
imul
les
shr
iret
negl
pop
jg
movsl
dec
test
shrl
stc
mov
push
sbb
aaa
icebp
int
sub
jb
push
mov
in
xor
mov
xchg
insl
pushf
in
movsl
inc
mov
xor
cmp
jg
aad
add
jmp
scas
repnz
insb
aas
xchg
aam
je
outsb
lret
loope
jno
xchg
dec
clc
cmp
xlat
xchg
adc
cli
sbb
sub
call
loope
in
les
inc
sub
ljmp
inc
cld
adc
adc
sahf
sbb
or
repz
jne
adc
push
pushf
cmp
mov
xchg
lret
aad
xorb
or
sbb
loope
push
xlat
pop
mov
sub
pop
cli
aam
sub
adc
sbb
push
frstor
jne
xchg
adc
mov
repz
inc
pushf
scas
lods
cmpsl
xor
movsl
and
mov
xor
cmp
stos
decl
and
add
fisubrl
loope
sub
push
cmp
pop
mov
jg
mov
pop
cmp
enter
pop
dec
jg
or
push
in
aad
rclb
outsb
add
mov
fs
int3
sub
mov
jg
cmpsl
xor
addr16
movsb
into
outsl
leave
and
cmovl
test
jmp
inc
dec
je
je
mov
mov
pop
insl
ljmp
jb
dec
mov
lods
sbb
pop
ljmp
mov
jb
add
aam
pop
fstl
decl
jp
push
push
pop
rorl
in
sbb
cwtl
mov
dec
outsl
popl
xchg
sbb
mov
ljmp
mov
cwtl
cmp
aad
clc
cld
adc
rcll
icebp
ljmp
mov
push
mov
sub
mov
dec
inc
add
in
loop
mov
test
xchg
push
lock
fs
mov
cli
adc
add
rolb
flds
add
fs
mov
fwait
inc
sbb
sbb
jbe
jmp
enter
mov
cs
mov
dec
jmp
aad
xchg
inc
mov
pop
jne
ja
push
jmp
ljmp
enter
icebp
sub
pop
rcll
es
sbb
lea
stos
jae
mov
out
lahf
jmp
rcll
push
mov
inc
dec
out
loope
push
or
jge
ret
fwait
je
cli
data16
movsl
inc
fidivrs
mov
adc
dec
stos
push
and
ret
mov
aaa
jns
lret
test
dec
jle
test
push
insl
mov
jo
jbe
jge,pt
test
and
jo
mov
subl
cmc
pop
ret
jge
ljmp
sbb
in
xchg
jae
stos
insl
popf
and
insb
jle
mov
jecxz
mov
mov
les
pop
popf
daa
mov
lcall
ja
daa
bnd
lds
outsb
xchg
leave
xor
call
iret
mov
sub
mov
sub
add
lock
add
data16
rcrb
ja
cli
adc
std
mov
fistpll
sub
out
mov
lret
add
and
mov
cwtl
mov
dec
ret
ret
jg
cld
testl
or
insl
add
test
rcll
sbb
jmp
test
push
xchg
sub
xor
das
inc
jnp
mov
lods
hlt
add
ds
sub
add
jecxz
sub
xchg
mov
andl
inc
ss
shlb
cmp
aaa
sti
scas
pop
mov
mov
dec
stos
push
and
ljmp
pop
push
aam
jnp
or
or
pop
add
add
pop
mov
cmp
outsl
js
fmulp
outsl
mov
mov
pushf
scas
xlat
mov
test
call
arpl
enter
insb
pop
cmp
lock
push
test
in
pop
dec
and
pop
pop
jno
adc
cli
in
pop
lret
loopne
push
inc
and
icebp
les
mov
and
mov
push
sbb
les
inc
push
push
hlt
fs
pop
call
pop
push
mov
jns
stos
mov
leave
dec
stc
add
sub
shlb
push
popf
lock
sub
pop
mov
inc
add
lea
xchg
pop
cmp
cmp
xchg
inc
leave
sbb
sbb
cmpsb
in
mov
nop
repz
mov
xchg
bound
sbb
and
psubb
in
aas
lods
and
je
cwtl
je
movsb
and
ss
ds
sub
jg
cmp
rolb
ret
xchg
dec
xchg
or
mov
gs
adc
call
mov
adcb
mov
lock
inc
stos
int
and
mov
push
scas
fcmovnb
and
or
loope
mov
pcmpgtd
es
xor
imul
jbe
or
pushf
mov
fcmove
mov
sbb
sbb
mov
frstor
test
pusha
je
dec
shlb
movsb
mov
icebp
dec
xchg
or
xor
cltd
ja
scas
pop
pop
xor
cmpsl
movsb
out
add
xchg
jle
pop
sti
ja
add
cmp
mov
push
cwtl
shl
mov
push
inc
add
push
inc
sbb
xchg
and
cmp
xor
mov
ds
jbe
push
js
lret
xchg
push
mov
mov
cli
andb
and
in
bound
cwtl
sbb
sub
orl
test
xor
leave
xor
les
push
aas
loop
dec
mov
ret
cli
and
fcomip
mov
or
push
add
jae
mov
mov
ja
ljmp
pop
sbbw
leave
clc
jo
push
je
ss
movsl
inc
xchg
leave
jbe
lds
cwtl
mov
daa
sahf
insb
rcrl
sub
hlt
ljmp
mov
jns
mov
aas
lock
or
xchg
xchg
fwait
pop
push
cmp
dec
jne
fwait
pop
ds
jle
mov
push
sbb
ficoms
jl
data16
mov
paddb
dec
int3
out
mov
out
scas
lods
mov
inc
lcall
lret
mov
adc
xlat
leave
jge
mov
mov
jl
cli
xchg
imul
scas
lea
jecxz
dec
into
fiadds
jg
inc
negl
pop
stos
test
or
jmp
loopne
ret
andb
cmpsb
mov
repnz
sahf
rsqrtps
nop
mov
lret
repz
lcall
cmp
lock
xchg
xor
rcll
push
cmp
or
rorl
in
and
and
jbe
into
mov
out
or
scas
lcall
sbb
add
xor
in
inc
jge
pop
lds
fwait
sub
mov
mov
cmp
out
pop
gs
adc
popf
fnstenv
lret
mov
ror
mov
fdivl
adc
ret
nop
push
or
je
sti
outsb
cld
arpl
mov
in
push
loop
push
adc
test
xchg
mov
outsb
xor
inc
dec
test
icebp
lea
mov
lcall
scas
add
imul
fimuls
scas
les
mov
dec
in
or
leave
out
inc
mov
jne
lock
rcl
xor
push
jl
cltd
mov
adc
bound
mov
sbb
inc
mov
mov
dec
jge
or
stos
adc
mov
xchg
int
push
mov
fwait
leave
out
into
dec
xchg
xchg
cmpsl
mov
ret
push
or
pop
xchg
adc
loop
mov
dec
popf
fisttps
mov
jb
add
lods
sbb
xchg
repnz
sbb
push
inc
jae
mov
popa
xchg
rcll
sbb
sti
insb
or
cmp
push
xchg
mov
les
into
in
icebp
in
sbb
das
jo
add
jmp
xor
stos
add
or
in
leave
outsl
xchg
je
xchg
xlat
push
mov
imul
adc
and
mov
jmp
jl
adc
rcrb
inc
xchg
jecxz
imul
push
call
fs
cli
hlt
sub
cmpsb
mov
push
sbb
out
dec
sub
add
pop
cmpsl
mov
shrb
jne
stos
and
ret
hlt
test
xchg
ja
fwait
jecxz
fdivl
repnz
push
movsl
pop
stos
cltd
cmp
push
std
add
mov
adc
jmp
cmp
and
jbe
inc
dec
outsl
pop
or
xor
jno
faddl
sti
inc
sbb
xor
jg
sbb
les
add
push
addr16
sbb
jl
nop
shl
ficoms
and
mov
push
hlt
pushf
into
inc
gs
jbe
push
daa
div
dec
fs
mov
mov
cmpsl
push
and
inc
in
stos
insb
cmp
push
je
iret
repnz
ljmp
xor
cmp
aam
ss
arpl
flds
and
int
cmpsl
movsl
dec
out
mov
dec
in
dec
scas
les
in
cmpsl
and
or
mov
and
lds
add
or
mov
je
fisttps
jp
lods
movb
sub
push
push
lcall
dec
mov
insb
testl
sub
addl
mov
push
imul
mov
sub
sbb
pop
mov
stos
rcrl
aaa
stos
xlat
sti
popf
xchg
inc
loop
mov
sahf
lea
mov
push
clc
cmp
or
push
shr
or
mov
fidivrs
mov
stc
sub
xchg
jae
lock
mov
mov
cmp
rorl
push
or
jge
ret
je
inc
cli
out
bound
or
inc
mov
enter
outsl
and
pop
aas
lods
cmp
sbb
adc
and
mov
cmp
mov
add
mov
jmp
lds
pusha
jae
lea
adc
mov
pop
mov
daa
push
and
lcall
sub
cmp
fldt
repz
jb
push
adc
leave
push
faddl
ror
js
cwtl
mov
test
stos
sbb
lret
loopne
sub
aad
adc
dec
imul
inc
push
and
mov
sahf
subl
push
aad
pop
push
pop
and
jge
jg
ljmp
mov
xlat
pop
imul
mov
mov
pop
inc
test
aam
push
fwait
mov
mov
sbb
xor
xor
mov
ret
pop
push
inc
mov
dec
mov
outsb
xlat
jne
insl
fwait
mov
push
stos
mov
pop
test
stos
sbb
inc
xchg
mov
adc
add
push
stos
addr16
popf
xchg
jecxz
add
insl
add
mov
call
sub
cld
mov
out
lahf
xlat
pushf
addr16
test
andb
jno
mov
xor
push
mov
adc
push
je
lds
in
sub
sub
sarl
ds
bound
cmp
test
xor
xchg
xor
pop
int3
push
push
cmp
sbb
inc
leave
cmpsb
out
les
mul
std
xor
adc
mov
cmp
mov
ret
lcall
jb
ret
add
mov
fcompl
enter
ja
jl
scas
and
add
mov
cmp
shrl
mov
xchg
jo
mov
ret
movsl
push
loop
popf
mov
mov
movsl
int3
js
and
out
call
sub
lds
jmp
je
aas
pop
xor
lods
cmp
xchg
dec
mov
xor
ficoml
sahf
popf
xchg
call
adc
ss
jb
jecxz
or
ror
imul
mov
push
lods
into
xchg
add
test
mov
inc
shll
mov
stc
adc
mov
jb
mov
mov
in
adc
mov
ret
inc
std
or
xor
imul
inc
mov
insl
arpl
into
xchg
fdivl
mov
jb
adc
adc
test
and
mov
mov
xchg
pop
sbb
mov
cmp
icebp
mov
fwait
push
xor
daa
push
enter
mov
add
hlt
jo
leave
xor
or
out
sub
mov
test
push
shlb
add
adc
mov
add
mov
data16
shlb
inc
enter
test
inc
xchg
lcall
push
jb
push
adcb
pop
sbb
aas
fcom
int3
loopne
les
or
pop
decb
mov
incb
popa
mov
xchg
mov
pop
xchg
mov
lds
jge
movsb
enter
loopne
mov
aas
int3
xchg
test
imul
test
scas
push
sub
loop
fstl
add
lods
inc
xchg
xor
mov
push
xchg
divl
inc
popa
jo
in
jp
stos
outsb
aam
sub
adc
out
and
jl
scas
inc
xor
mov
js
lock
push
inc
mov
jg
pop
cltd
lock
sub
jbe
lret
pusha
xchg
ret
mov
xor
fwait
mov
jns
jecxz
jmp
negb
jp
inc
test
iret
push
mov
add
mov
int3
enter
mov
enter
cmp
shll
out
cmp
in
mov
test
insl
orps
popa
aas
and
xchg
repnz
and
cmp
fiadds
int3
or
dec
jnp
jle
xchg
xor
pop
mov
aas
fdivl
inc
jnp
test
pusha
and
mov
mov
or
jb
add
adc
hlt
rcl
stc
inc
pop
mov
sub
or
xor
ffreep
out
ds
clc
xchg
sti
ss
ret
inc
icebp
xlat
jg
adcl
cmpsl
out
pop
xchg
jno
and
cltd
lock
lcall
inc
and
adc
push
pushf
cs
cmp
ffreep
mov
sti
out
mov
jmp
unpckhps
adc
cli
fwait
imul
push
outsb
shrb
adc
imul
xchg
and
js
test
stos
dec
mov
adcb
loope
nop
je
iret
mov
lods
cmp
mov
nop
dec
or
xchg
out
sub
imul
or
inc
cmp
xor
test
fldl
fisubrs
add
mov
push
cmc
scas
mov
in
out
fstp
int
cmp
push
or
outsb
pop
pop
dec
dec
mov
sahf
lea
fstp
int
cmp
push
or
outsb
pop
pop
dec
dec
mov
push
lea
fstp
int
cmp
sub
push
jge
insl
outsb
pop
pop
dec
dec
mov
sahf
lea
pop
fimuls
ret
test
mul
xchg
movsl
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
in
xchg
mov
cmpsl
and
test
test
arpl
xchg
pop
aaa
mov
inc
ret
jcxz
jecxz
adc
and
push
movl
xchg
pop
xorl
sub
ja
jcxz
or
cmp
dec
fistps
imul
push
jo
mov
push
xchg
sub
adc
push
inc
shrl
ss
and
mov
cmp
scas
orps
iret
mov
mov
xchg
adc
imul
fldenv
ja
cwtl
scas
push
insb
loope
adc
inc
inc
jl
daa
popl
clc
inc
rsm
es
ret
mov
jecxz
inc
xchg
add
adcl
jae
orl
out
pushf
ret
push
jl
push
fcomps
inc
cmp
jns
mov
sub
loop
int3
inc
ret
sub
mov
pop
push
roll
mov
ja
jg
jcxz
xor
sub
mov
call
cmpsb
ja
adc
addr16
adc
cmp
push
xlat
inc
imull
jp
mov
fwait
das
stos
ds
insl
repz
jbe
add
xor
and
out
pop
cli
imul
out
int3
push
mov
or
fadds
es
pop
mov
push
ljmp
push
mov
add
fistl
push
lahf
aas
movl
xchg
pop
xorl
daa
mov
ja
jcxz
adc
and
push
movl
xchg
pop
xorl
daa
mov
ja
jcxz
adc
xor
iret
and
fstpt
cmp
aas
fimuls
cli
push
mov
pop
stos
mov
les
cld
mov
push
cmp
sti
lods
inc
pusha
xor
pop
hlt
mov
rclb
sub
mov
test
jnp
push
cmp
fdivp
sbbl
pop
adc
outsb
test
lea
or
imul
hlt
aam
xchg
sub
test
pusha
cmp
clc
jmpw
cmp
push
pop
pop
pushf
ljmp
incl
adc
inc
push
sbb
cmp
sbb
sub
mov
fildl
daa
mov
xbegin
pushf
in
inc
push
mov
xchg
mov
jmp
movsb
mov
fnstsw
fmuls
lods
clc
cmpsb
cmp
rcll
sub
sbb
jo
mov
jp
xchg
mov
sub
xchg
mov
subl
jmp
clc
pop
das
orb
inc
push
mov
jno
and
or
jb
xlat
mov
dec
cmpsl
mov
and
push
jb
pop
pop
dec
lcall
nop
int
jle
mov
rcll
imul
xor
loopne
mov
jge
addr16
inc
divl
les
sub
pop
cmp
adc
call
xor
cs
imul
js
call
or
mov
rcr
and
and
mov
jne
test
imul
test
jb
inc
int3
xchg
inc
pop
int
mov
jae
inc
repz
jnp
sub
ret
nop
pop
stos
into
cmp
jnp
dec
lock
mov
cmp
mov
fwait
or
out
cmpsb
test
cli
and
sub
push
out
lods
push
stos
sarb
or
lds
push
scas
xchg
add
dec
xor
jnp
mov
xlat
jbe
imul
or
jge
inc
sub
push
mov
addb
mov
es
sarl
lods
jecxz
std
jp
insl
addr16
and
lea
mov
and
and
jg
in
cmp
mov
sub
mov
xchg
imul
cli
pop
outsl
fwait
cli
pushf
sub
mov
punpckhwd
fldenv
add
notb
cli
xchg
pop
pushf
dec
shll
fwait
js
leave
shrl
jle
inc
jns
testl
rolb
fwait
cmpl
into
jl
js
jecxz
mov
cmp
shrl
or
push
jns
shlb
mov
mov
inc
adc
or
fnstsw
out
call
cmp
subb
test
dec
adc
dec
adc
sub
jno
xchg
lret
lea
fwait
adc
mov
repz
lret
sub
add
mov
pop
or
cmp
jp
sub
loop
popa
xor
pop
stc
popf
repnz
aad
mov
ja
arpl
aaa
cli
xlat
icebp
stc
xor
and
outsb
stc
mov
xor
push
adc
push
hlt
cmp
mov
mov
fisttps
std
mov
sbb
fucomi
pop
xchg
scas
sbb
lahf
sub
push
cltd
adcl
push
mov
jecxz
aas
stos
lods
lods
stc
stos
sub
lock
jb
rorl
push
fnstenv
inc
lcall
addr16
fcmovb
pop
xchg
loop
out
pop
pop
mov
lods
add
dec
xchg
xchg
dec
cld
out
jl
shlb
push
mov
stos
insb
aas
xor
imul
ss
test
enter
xor
xchg
loopne
add
popf
xor
xchg
or
cld
and
add
inc
jmp
cwtl
test
cmp
outsl
mov
jp
in
dec
mov
jp
xor
inc
cmp
lcall
mov
mov
adc
mov
inc
pminsw
push
mov
dec
ja
mov
dec
cli
lret
jg
aad
adc
lock
hlt
orb
add
fcoms
subb
shll
pop
xchg
aam
lods
ret
in
push
push
jge
mov
out
cmp
adc
dec
cmc
push
add
xor
arpl
push
les
and
popf
aad
test
mov
call
sbb
imul
jbe
push
lods
int3
and
mulb
pcmpgtd
and
test
dec
aas
hlt
and
addr16
sti
adc
ljmp
jecxz
shlb
in
inc
popa
xchg
arpl
jle
mov
stos
mov
inc
repz
or
inc
sbb
jae
ficomps
out
std
pushf
mov
sub
fildl
push
arpl
int3
mov
sub
jns
sbb
andb
mov
mov
cmp
sti
jb
outsb
lcall
push
cs
mov
cld
imul
lods
nop
jge
aaa
mov
adc
push
cmp
lods
jmp
adc
jnp
cltd
sbb
test
xlat
inc
cwtl
test
pusha
loope
dec
pusha
loopne
jmp
mov
jecxz
stos
test
addb
mov
lret
push
out
dec
dec
mov
orb
jge
es
pop
insl
loope
adc
jmp
mov
daa
add
push
cli
addr16
call
jno
js
xchg
cwtl
icebp
lods
push
mov
ret
outsl
pop
popa
pusha
out
ja
and
xlat
gs
cmp
call
imul
mov
in
mov
gs
pop
rorl
push
add
add
xor
adc
jecxz
inc
dec
loopne
iret
add
out
pop
test
inc
adc
rorb
bound
pop
test
out
test
mov
in
repnz
or
clc
sbb
shlb
pushf
adc
dec
and
cmp
test
add
orb
jge
sti
lcall
sbb
lahf
xchg
fisttpll
or
leave
lock
dec
adc
jl
cmpsb
mov
push
sbb
pop
pop
lds
pop
fwait
lret
ss
xor
rcrl
adc
cli
xor
push
ficoms
push
scas
push
ss
popf
mov
iret
lret
enter
test
cwtl
jp
sub
lret
jl
pop
pop
push
test
sbb
test
and
test
mov
push
fs
mov
fwait
stos
cld
xchg
ja
dec
sti
adc
test
mov
clc
lock
andl
mov
dec
scas
popf
jnp
dec
xor
aam
cmp
scas
or
inc
pop
inc
xor
iret
stc
scas
cmp
xor
mov
inc
rdmsr
xor
mov
mov
jp
sti
mov
jns
and
mov
loopne
shll
push
lods
dec
outsb
mov
cmp
pop
xor
test
inc
data16
pop
loopne
adc
in
push
hlt
inc
cmp
cmp
int3
out
or
les
mov
call
lahf
in
test
push
call
or
hlt
rcrl
shlb
test
add
aas
sub
das
cmc
in
cmp
sub
jp
pop
xlat
push
jl
outsb
adc
mov
push
int
or
mov
mov
insl
cltd
addr16
mov
sub
les
pop
out
std
push
ud2
cmp
popa
lcall
dec
sbb
or
les
pop
inc
and
lods
dec
sub
xor
stos
inc
movsl
popa
or
xchg
sahf
or
leave
outsl
mov
divb
add
fwait
mov
mov
out
clc
mov
adc
dec
sub
xor
cmpsb
decb
repz
and
in
gs
out
add
fwait
jl
mov
inc
lds
fldt
rol
lahf
fwait
push
xchg
mov
xor
adc
stos
pop
lea
push
adc
adc
and
lock
lcall
add
call
adc
fdivs
test
les
add
loop
cwtl
xchg
aaa
inc
std
daa
or
xchg
and
and
jl
jns
lds
out
push
dec
jg
les
incl
out
ret
add
xor
stc
mov
xchg
inc
jo
adc
loop
lahf
or
pop
sbb
pop
push
xbegin
cld
mov
sub
lret
fidivrl
mov
pop
mov
mov
inc
icebp
out
add
jo
mov
push
pop
int3
cmp
daa
cli
imul
inc
rcl
adc
xchg
mov
and
xlat
add
or
fsubrs
cmp
stos
data16
shlb
xchg
ja
mov
lock
nop
sti
or
mov
or
or
subb
xor
hlt
push
xor
pop
inc
xor
inc
fwait
mov
outsb
test
jb
push
mov
fwait
mov
xchg
mov
ds
fildll
lods
pop
adc
adc
in
xor
sbb
push
mov
jno
stos
sti
leave
add
and
loopne
push
or
lds
adc
sarl
push
dec
adc
sub
cmpsb
sbb
push
cmp
insl
stos
cmp
popf
mov
mov
clc
aas
notb
jecxz
cmp
repz
and
repz
js
shll
lahf
and
jecxz
xchg
stos
add
int3
gs
lods
out
push
jp
dec
fdivrl
jbe
jbe
dec
dec
lahf
mov
jae
sbb
pusha
popa
inc
ret
push
das
xor
jbe
cltd
sbb
cmp
push
sti
push
insb
loopne
or
pop
jno
repz
or
mov
push
mov
mov
add
push
test
and
rorl
or
jns
or
pop
push
jge
daa
aaa
rcrb
stos
inc
enter
mov
add
mov
ljmp
adc
cmpsb
popf
dec
jg
lds
out
fnstsw
xor
pop
mov
sbbl
out
insb
xor
inc
jp
xchg
ffreep
push
js
push
imul
aam
xchg
and
insb
gs
sub
jge
sarl
repz
mov
mov
movl
mov
xor
push
mov
jne
ror
fnsave
sbb
push
inc
imul
lods
test
testb
and
fildl
sbb
xchg
mov
out
int
repz
bnd
sub
mov
adc
jno
pop
or
bound
push
mov
ds
imul
jle
xchg
jno
inc
lea
popf
mov
sbb
dec
fchs
insl
outsl
mov
dec
pushf
xchg
stos
notl
push
pop
mov
adc
and
rolb
test
fwait
mov
push
ja
negl
and
int3
xchg
lret
mov
movsl
mov
ret
mov
xor
iret
add
xor
push
iret
dec
lock
pushf
les
xchg
xor
pushf
mov
int3
lods
add
cmp
fisubs
push
and
dec
lret
ret
sbb
mov
aas
fisttps
sbb
mov
push
popf
mov
inc
mov
cmpsl
or
ss
sub
clc
jno
loope
int3
sbb
pop
gs
cmp
or
xchg
pushf
sarl
cmpxchg
daa
push
add
fildll
ss
enter
mov
test
or
dec
and
or
cmp
out
dec
and
sahf
and
stos
or
cmp
insl
fwait
sub
clc
and
xor
cli
inc
push
jg
jp
testl
pop
pop
inc
inc
addr16
fnstcw
and
mov
mov
repz
lods
cld
mov
mov
lods
cmpsb
call
sbb
dec
sub
mov
sub
jne
cmc
loope
jmp
int
ss
daa
inc
and
jae
adc
subl
pushf
fs
dec
repz
pop
fmul
popf
in
subl
out
lret
push
sub
in
xchg
inc
insb
add
rol
test
adc
adcb
jl
or
sbb
hlt
mov
xchg
jae
cmpsb
pop
mov
das
sub
xchg
sahf
adc
pop
xchg
fidivs
lods
dec
mov
adc
loop
iret
js
cmpsb
inc
pop
add
xor
xor
pop
pop
push
mov
in
pop
xchg
stos
jb
dec
push
out
sub
and
inc
or
pop
push
icebp
mov
mov
mov
or
add
cmp
int3
sahf
sub
lods
mov
fnstsw
cmpsl
fldl
mov
stos
cmp
movsl
fstl
push
out
push
test
adcl
iret
sub
cmpsb
es
xchg
addr16
jno
loope
push
pop
shll
aam
std
xor
or
dec
fs
ret
mov
lock
ss
pandn
cmc
sub
fldenv
jae
fucomp
icebp
cli
pop
or
cmp
scas
pop
pop
repnz
ds
mov
and
xchg
hlt
pop
fwait
or
sub
sbb
cmp
xchg
popa
repz
addr16
and
rorb
fmulp
data16
cmp
adcl
addr16
or
or
scas
sub
xor
lods
jo
mov
in
into
xor
lahf
jbe
les
add
pop
mov
pushf
jecxz
push
push
arpl
xor
fsubrp
pop
lock
pop
sub
sbb
inc
jle
dec
mov
and
in
sub
xchg
sbb
imul
mov
xlat
popf
scas
pop
jl
cmp
insl
mov
xor
ret
jns
ret
in
lods
sbb
adc
nop
mov
imul
dec
push
cmp
sti
in
cli
push
repnz
mov
dec
fiadds
mov
ret
xor
fs
push
mov
inc
adc
mov
dec
push
push
rorb
sbb
push
movsb
mov
xor
push
gs
or
call
lahf
xor
sbb
scas
ss
pop
shrb
push
dec
and
cli
inc
sti
xor
or
test
popf
bnd
mov
cmpsl
jl
ret
cmp
sti
cwtl
xchg
xchg
test
inc
aam
sub
je
jne
add
sbb
dec
mov
test
ficoms
dec
sub
mov
mov
mov
movsb
adc
jb
mov
or
gs
loop
xlat
sbb
out
fsubl
fidivs
or
pop
pop
xlat
jl
in
call
out
lret
enter
sti
xchg
lahf
stos
fiadds
add
std
jp
adc
push
push
lret
jmp
mov
ja
cmp
test
add
mov
fcomps
mov
mov
les
dec
scas
pop
loop
cwtl
adc
mov
idivl
outsl
push
sub
lcall
ljmp
mov
mov
pop
dec
js
dec
fnstcw
dec
mov
addb
push
cmp
sbb
pop
jecxz
sti
push
inc
cs
inc
mov
xor
push
out
jl
stc
xchg
out
pusha
test
outsl
xor
fsubs
xchg
aas
bnd
and
adc
out
ret
pop
das
mov
xchg
stos
dec
dec
jge
mov
push
inc
dec
pop
sub
sub
inc
addr16
sbbb
xchg
pop
pop
cli
mov
jbe
inc
mov
xchg
scas
jns
cmc
pop
and
pop
xor
dec
rclb
rcrl
mov
jl
test
sbb
lret
ja
out
or
mov
adc
xor
mov
sub
cld
mov
ds
aaa
mov
sbb
dec
mov
xchg
push
pop
and
cmp
pop
sub
repz
loop
clc
sbb
test
xor
popf
aam
nop
gs
pop
pop
dec
xor
mov
mov
int3
sbb
xchg
pop
mov
fcmove
jge
xchg
xlat
push
mov
mov
dec
cmp
sub
int3
leave
mov
cmp
jge
or
data16
loop
jge
xchg
mov
iret
push
pushf
adc
dec
lahf
rorb
fnstcw
adc
and
sbb
mov
dec
jmp
mov
mov
test
jno
jg
sub
ret
aas
in
or
sahf
pushf
pop
rcrb
test
cld
inc
add
pop
mov
dec
out
push
sbb
bound
stos
call
sub
jmp
push
push
adc
fstp
insl
or
xor
mov
jnp
mov
mov
cmp
je
inc
in
or
xor
aad
ret
bound
or
sbb
fidivl
mov
stos
icebp
fucomi
movsl
arpl
dec
stos
sub
mov
adc
adc
movsl
rcr
fstps
sahf
inc
stos
cs
std
mov
jge
or
stos
sub
push
cmp
cmpsl
inc
adc
dec
inc
insb
fimuls
mov
jns
jo
sub
fsub
mov
test
jl
test
cwtl
pop
outsb
iret
and
aaa
mov
shl
adc
data16
add
hlt
mov
dec
cmpsb
or
scas
xchg
add
mov
mov
shll
movsb
sub
cmp
fldenv
shll
imull
jl
lret
nop
cmpsl
mov
data16
inc
ret
push
shlb
sarl
mov
rol
cltd
lods
pop
xchg
cld
mov
cmp
mov
movsb
ljmp
mov
sub
mov
pop
sti
out
sbb
mov
jmp
out
lahf
or
xlat
mov
hlt
sarl
ja
mov
xchg
mov
xor
jae
xor
mov
fwait
cmc
lock
lods
aam
jb
sbb
cs
mov
inc
test
xor
nop
cltd
les
loope
jnp
pop
sub
pop
dec
out
icebp
jecxz
pushf
lock
sar
negl
xchg
pop
add
cwtl
mov
out
notb
arpl
dec
test
jecxz
sahf
add
sub
testl
xchg
pusha
push
pop
add
fwait
mov
cmp
xchg
push
jmp
pop
into
push
hlt
mov
add
loop
bound
add
cmpsb
push
lock
aas
sbb
xor
inc
jae
jg
stc
stos
sub
push
add
stos
and
sbb
and
lret
jb
inc
dec
add
pmaxub
push
and
xchg
or
xchg
mov
jbe
ljmp
movsb
inc
sub
loop
sub
pop
fisubrl
sbb
popa
nop
and
arpl
ja
cmpsl
jmp
xchg
mov
cld
xor
push
in
idiv
push
push
pop
insb
sub
test
push
jecxz
sub
clc
jbe
imul
aas
jg
xchg
imul
test
add
repnz
sarb
jmp
dec
popa
jnp
jecxz
xchg
les
fsts
or
xor
dec
xlat
push
ljmp
icebp
pop
xchg
in
dec
pop
xor
aaa
pushf
pusha
cld
sub
inc
lds
in
addr16
gs
daa
mov
xor
xchg
sbb
dec
xchg
adc
orl
push
lret
mov
fsubs
xchg
jno
mov
cmc
mov
xor
fisubrl
outsl
cmpsl
pop
out
ret
xor
int3
idivb
mov
dec
xor
js
icebp
popf
mov
fldcw
ret
outsl
mov
lret
repnz
hlt
push
add
sbb
ret
adc
int3
mov
mov
add
in
icebp
dec
leave
xor
and
pop
or
push
lea
cwtl
jae
repnz
mov
push
add
ljmp
mov
test
movsb
mov
and
bound
gs
adc
dec
jge
and
push
mov
mov
and
sub
nop
std
aad
das
mov
fs
pushf
and
roll
fs
sti
jb
leave
dec
sub
call
jno
pop
xchg
js
les
stos
or
dec
xchg
ret
lret
lcall
nop
pop
mov
mov
push
dec
shlb
mov
call
in
popf
mov
jae
adc
test
aas
jo
std
inc
in
jmp
mov
ror
arpl
ret
dec
cmp
push
adc
adc
inc
decb
in
fdivrs
out
fcoms
dec
out
popf
mov
cmpsl
or
neg
add
dec
sub
add
mov
daa
int
add
dec
lret
and
sti
add
add
arpl
sti
pop
add
push
movl
xchg
pop
xorl
daa
mov
ja
jcxz
adc
and
push
movl
xchg
pop
xorl
daa
mov
ja
jcxz
adc
and
push
movl
xchg
pop
xorl
daa
mov
ja
gs
adc
and
push
movl
xchg
clc
sub
pop
iret
cmp
or
sbb
sub
mov
jl
push
mov
xchg
ss
in
cmc
and
arpl
xchg
mov
adc
xchg
and
xor
arpl
mov
mov
pop
lret
or
int
lds
mov
inc
movsl
or
daa
rclb
sbb
iret
jne
and
add
mov
push
adc
add
sbb
pop
ljmp
fsub
pushf
test
dec
addl
pop
stos
cld
jecxz
mov
and
sbb
or
cld
sub
sbb
int3
add
add
and
cmp
gs
cmc
in
lea
clc
push
rorb
adc
dec
or
jp
sbb
push
arpl
ss
sub
loopne
ret
ljmp
jecxz
in
cmc
fmull
mov
mov
dec
arpl
push
test
lcall
cmpsb
popa
jmp
fwait
add
fcomi
mov
xchg
inc
cmc
xor
test
push
out
pop
sarb
mov
jbe
loop
mov
in
cmc
int3
add
mov
popa
movsl
jne
xchg
push
andl
mov
ret
push
shll
add
cmp
pop
mov
jns
jb
andl
and
sbb
imul
mov
push
xchg
movsb
insb
xchg
adc
es
push
rorl
pop
inc
ljmp
insb
ret
je
dec
xchg
inc
sar
xchg
jbe
inc
cltd
xor
xor
push
rolb
pop
aaa
andl
xor
inc
lock
repz
aad
in
cmc
xor
arpl
xchg
mov
adc
repz
aad
in
cmc
xor
arpl
or
sub
inc
sub
fs
ret
adc
push
aad
jmp
mov
lret
add
sbb
mov
gs
cmc
outsb
cmp
xchg
shr
stos
idivl
fidivrl
aad
orl
mov
out
in
add
pop
aas
test
repz
dec
pop
xchg
pop
adc
stos
bnd
mov
or
xchg
je
daa
mov
mov
jge
push
int3
push
in
or
xor
popf
jns
push
add
xor
outsl
mov
xor
mov
dec
mov
addr16
call
adc
adc
mov
imul
ja
xchg
mov
icebp
outsl
negl
or
jno
test
out
repz
idivb
adc
mov
push
lea
mov
loop
mov
mov
mov
push
or
mov
and
test
jge
insb
inc
es
mov
rcrl
sbb
cs
scas
mov
push
in
dec
push
data16
adc
inc
fists
mov
ljmp
ss
dec
shll
shll
pop
jmp
jno
outsb
and
sti
xlat
sbb
mov
push
lea
or
adc
push
mov
add
push
xchg
std
insl
jmp
mov
cli
mov
mov
rcrb
hlt
adc
cld
xchg
leave
pop
push
arpl
inc
and
in
pushf
ficompl
mul
push
jb
and
push
popa
push
push
fdivrl
jl
inc
in
shlb
scas
pusha
ljmp
ret
repnz
call
cmp
out
mov
loopne
out
out
jge
std
mov
xchg
mov
push
jnp
sbb
push
mov
pop
imul
fstpl
and
pushf
and
leave
jno
and
adc
es
pop
movsb
sahf
lds
xchg
add
aas
shrl
or
mov
jg
pop
icebp
scas
jno
sbb
rorl
xchg
mov
jl
sub
int3
xchg
or
xor
xchg
and
or
das
pop
or
out
inc
data16
rol
xchg
scas
xchg
pop
push
cltd
scas
xor
addr16
xchg
adc
test
enter
jmp
mov
or
cwtl
pop
test
daa
ficomps
ja
leave
or
push
popa
jp
gs
and
pop
push
inc
out
std
dec
lods
mov
imul
inc
dec
mov
xor
ja
enter
test
stos
sbb
mov
xchg
stos
or
jbe
cmpsb
mov
daa
insb
cmpsb
jne
test
or
dec
fisttpll
or
xchg
inc
loope
add
push
push
xor
add
sub
cmpsl
or
stc
cmp
jl
pop
pop
xor
jl
lcall
fxch
js
mov
and
sahf
lds
push
repnz
sbb
push
mov
pushf
ret
and
xchg
pop
xorl
xchg
das
nop
cli
and
adc
pushf
mov
or
and
jns
ss
and
les
rcll
add
sbb
fmuls
sub
pop
push
lahf
sbb
dec
aas
mov
outsl
or
out
ret
popa
xorb
inc
das
int3
repz
jnp
int
dec
jns
xor
sahf
dec
mov
mov
cs
in
nop
mov
bound
repnz
mov
imul
push
rol
shrb
icebp
jae
or
add
stos
inc
shr
cmp
clc
and
xor
mov
add
mov
pop
jle
fsubrp
loopne
div
mov
sbb
dec
les
lea
push
jl
inc
pushf
std
enter
push
cli
popa
push
jno
jnp
hlt
imul
sti
dec
dec
popl
stos
pop
xor
pop
movsb
xchg
shlb
dec
dec
mov
xor
ja
mov
push
pop
sub
adc
xchg
int3
adc
mov
shlb
xor
fildl
es
jmp
mov
xchg
outsl
ljmp
adc
jge
xor
pushf
mov
push
cwtl
push
cmc
cmp
cmpsb
ds
xor
mov
mov
sbbb
push
loope
and
adc
and
movq
mov
xlat
mov
mov
pop
cmp
sahf
das
loopne
rorl
dec
outsl
fisttpl
imul
adc
xor
lret
jp
push
aas
mov
push
ficoms
push
loope
enter
pop
daa
mov
fildl
in
insl
aam
outsl
pop
sbb
xor
das
ret
push
sub
les
bound
and
mov
out
mov
jo
xor
and
scas
push
lods
dec
and
mov
or
pop
cmc
inc
mov
cltd
cmp
cmpsb
or
mov
and
fidivl
mov
mov
dec
into
inc
aas
mov
aam
and
fld
add
mov
push
imul
pop
dec
bound
add
cmc
js
push
iret
fcmovnbe
jbe
and
lahf
in
sahf
add
adcb
cltd
push
cltd
adc
jb
nop
adc
dec
test
test
jne
mov
mov
jge,pt
push
cmp
pop
aaa
lahf
xor
jl
fidivl
aas
data16
sbb
lret
sub
or
sti
fldenv
mov
hlt
fbstp
std
inc
int
sub
push
sbb
add
outsl
xchg
shll
je
pop
in
inc
pop
jl
nop
aam
out
repz
dec
jo
je
cmp
hlt
addl
ds
into
sub
push
mov
out
int3
lcall
aaa
push
or
cmp
imulb
inc
sbb
movsb
mov
in
in
data16
adc
leavew
xor
jecxz
ret
dec
jecxz
pushf
xor
mov
in
and
jle
mov
orl
push
push
adc
push
sbb
push
and
fisttpl
lock
xchg
nop
jne
jg
sbb
mov
ljmp
aad
and
insb
dec
mov
or
adc
mov
mov
sub
ds
jl
cmp
outsb
dec
add
adc
ret
mov
cmpsb
pusha
and
addl
jmp
dec
sub
clc
add
xchg
pusha
pop
or
idiv
mov
adc
lock
push
sub
out
test
addr16
inc
xor
cmpsb
cmpsb
rol
minps
sbb
hlt
fsubrl
hlt
fstpt
sbb
loope
mov
mov
sub
lock
iret
and
mov
sbbb
loop
jnp
test
cli
xor
mov
test
add
mov
jmp
add
popa
je
add
xor
sub
pushf
shll
push
mov
adc
out
push
test
mov
fsubr
push
ja
mov
pop
mov
out
pop
pmuludq
jbe
xor
arpl
dec
xor
pop
addr16
pop
cwtl
sqrtps
push
stos
mov
adcb
out
xor
movsl
and
pop
jmp
movsb
mov
push
je
dec
inc
xor
or
xchg
bound
mov
sarl
jge
xor
mov
mov
test
scas
sub
enter
jmp
dec
lods
rcrb
inc
push
rcrb
push
rorl
adc
sbb
pop
outsl
popf
mov
popa
pop
aaa
pop
xchg
adc
sbb
in
xchg
jg
and
push
sub
mov
rorl
xor
xchg
notl
lods
and
std
cmp
mov
inc
out
jecxz
xor
xor
mov
bound
popa
enter
popa
cmpw
les
inc
adc
xor
push
out
inc
out
dec
test
and
fidivrl
cmp
cs
inc
xchg
dec
push
dec
std
cwtl
push
add
xchg
inc
add
inc
xchg
mov
inc
adc
push
shll
aam
add
cmp
push
jge
jl
pop
cmp
test
hlt
ja
mov
xor
xor
in
xchg
or
xchg
addr16
or
sub
jg
adc
out
lret
out
dec
gs
test
in
push
ret
stos
fisttps
jl
jmp
scas
inc
or
inc
sub
mov
and
mov
adc
jae,pt
test
or
dec
cltd
orb
pop
fdiv
pushl
sbb
clc
sti
push
sbb
xchg
dec
add
inc
data16
outsb
std
outsl
clts
cwtl
fists
outsl
in
hlt
adc
js
or
sbb
cmpsl
cs
fistpl
cli
xchg
mov
jmp
pop
lcall
cld
cmp
xchg
sub
pause
mov
inc
mov
cmpsl
xor
jns
inc
mov
push
in
push
inc
adc
sbb
and
das
jae
outsl
jl
push
cwtl
fdivs
cli
and
jle
movsb
mov
in
repz
fcmovu
and
xchg
and
sahf
dec
lock
cs
xchg
out
sbb
xchg
jmp
push
xchg
cmp
ss
sbb
daa
inc
xor
mov
out
movlhps
jbe
xchg
push
sahf
push
mov
bound
and
xchg
les
mov
stos
xor
jae
adc
or
mov
sbb
mov
or
sub
xchg
int
and
orb
and
jg
jb
and
sub
sub
sbb
mov
pushf
adc
mov
test
movsb
or
push
push
push
call
std
push
loopne
iret
sub
nopl
data16
outsb
daa
out
into
addr16
imul
ja
dec
testb
imul
enter
pop
jae
out
cltd
or
leave
imul
push
das
sahf
int
push
jle
cmp
int3
fdivrs
add
xchg
push
and
out
test
xchg
es
dec
pop
dec
scas
push
popa
xchg
imul
inc
cmp
sbb
neg
int3
pop
mov
in
sbb
addl
sub
pop
cwtl
stos
push
nop
xorl
mov
jns
int3
sub
inc
loope
sarb
das
ret
shl
sbb
ret
jbe
pop
mov
jno
push
inc
inc
mov
test
scas
jle
adc
test
and
push
push
pop
push
adc
mov
lret
xchg
jmp
jecxz
cli
insl
mov
sbbl
pushf
jecxz
adc
sub
test
mov
push
jge
push
aad
mov
mov
imul
jnp
dec
xor
sti
mov
rol
mov
xchg
insb
gs
ret
shufps
xchg
pop
out
imul
push
jge
cmc
popa
adc
lret
xchg
ljmp
inc
movsb
sti
mov
sub
lods
ja
mov
test
pusha
add
dec
mov
mov
xor
loope
leave
repz
pop
mov
cmp
xlat
and
cwtl
lahf
pop
xchg
push
ret
fistps
xchg
jge
shlb
pop
stos
mov
test
lods
add
pusha
cmc
scas
fstl
mov
outsl
cld
pop
roll
pop
movsb
mov
dec
and
xor
movsl
pop
push
cmp
mov
cmp
outsb
or
pop
push
pushf
into
inc
test
femms
shr
xchg
xlat
mov
addr16
fstpl
lds
shrb
xchg
aam
adc
test
adc
cwtl
cmp
mov
jno
fwait
data16
rclb
cltd
scas
decb
cmp
cli
cmp
add
outsb
lods
out
mulb
adc
inc
ficompl
popf
push
sbb
jae
fidivl
fs
sti
adc
insl
push
mov
shll
cmp
dec
lcall
mov
sbb
loop
or
or
jbe
dec
pop
cmp
rol
int3
dec
stos
lret
pop
orl
outsb
inc
stos
pop
lods
das
je
popa
sarl
jnp
insb
mov
xlat
ja
mov
icebp
xchg
mov
out
inc
or
shlb
addb
shlb
xchg
cmp
or
pop
leave
pop
movsb
mov
and
adc
push
lods
mov
call
jmp
xor
dec
ja
mov
sub
push
push
cmp
test
mov
dec
cmp
scas
ss
imul
orl
in
xchg
mov
negb
mov
jl
fwait
cmp
cld
das
pop
lret
test
ret
gs
daa
and
adc
cli
lods
mov
jne
sub
sbb
push
in
jns
mov
sahf
in
push
lea
mov
sarl
aaa
aaa
mov
or
mov
cld
xchg
adc
add
and
inc
jg
mov
mov
inc
add
sbb
mov
cmpsl
movsl
mov
fidivrl
sub
or
push
adc
daa
ficoms
arpl
dec
dec
mov
xor
pushf
aas
dec
pushf
lret
call
push
rolb
jle
or
inc
andl
and
sub
je
sub
cmp
sbb
sbb
ret
ror
add
arpl
shll
shr
popa
pop
ffreep
cli
adc
fwait
ljmp
jbe
xchg
fistps
or
jle
movsb
gs
mov
push
cld
inc
mov
add
cmp
aam
and
or
in
ja
stos
mov
cmp
mov
push
imul
stos
sarb
dec
sarl
jo
je
in
mov
xor
mov
clc
int3
and
push
push
mov
xchg
xor
clc
push
insb
xchg
xchg
adc
lcall
data16
jbe
cmp
mov
jb
xchg
dec
in
out
fstps
out
loope
out
jnp
int3
jo
and
and
scas
aaa
mov
xlat
bound
push
inc
fstp
jl
cwtl
cmp
imul
nop
loopw
cmc
sub
mov
lretw
mov
je
fidivrs
adc
mov
jg
adc
cmp
test
sub
std
adc
jmp
lret
arpl
daa
jp
push
jo
dec
mov
mov
add
adc
and
into
push
mov
sbb
or
sbb
std
push
cmpsl
push
loop
dec
ljmp
ficoml
xchg
outsb
and
dec
add
cs
stos
dec
testl
nop
popa
daa
pop
dec
pop
fsubrl
xor
lods
pop
fnstenv
push
push
jb
mov
and
sbb
aam
mov
cmp
js
add
dec
lret
icebp
icebp
into
or
push
das
or
addr16
nop
dec
mov
push
xchg
sbb
mov
push
mov
and
sub
popf
jge
stos
mov
push
ljmp
pop
stos
jnp
inc
lahf
adc
shlb
add
nop
inc
add
push
out
xchg
pop
call
mov
push
mov
lods
xor
hlt
adc
adc
inc
adc
rorl
in
mov
pushf
adcb
pop
mov
sub
xchg
out
xchg
cld
mov
push
stos
repnz
je
pop
mov
adc
and
rorl
add
lock
sub
imull
xchg
inc
ljmp
dec
lcall
jo
jae
data16
jno
clc
push
push
ret
loope
and
jg
fisttps
pop
out
icebp
xor
setnp
or
cmc
xchg
in
xchg
mov
movsl
fucomp
rolb
psubb
adc
lcall
cs
xorb
cwtl
mov
lock
mov
ss
mov
cmp
nop
daa
test
js
pop
je
stos
xchg
mov
add
mov
fnstenv
imul
mov
aad
aad
mov
repz
xchg
push
jge
ss
movsb
sub
bound
mov
xchg
not
jb
out
push
insb
dec
dec
adc
mov
xchg
push
mov
repnz
imul
je
add
cmc
mov
jl
jnp
jp
faddl
sub
pop
inc
adc
sub
jmp
cmp
sti
mov
repz
xor
xchg
cmp
js
or
sahf
adc
jl
pop
add
inc
mov
xchg
outsb
and
mov
rcrb
push
fs
repz
js
mov
lods
add
push
stc
cmpsb
int
mov
add
mov
cmpsl
dec
jecxz
movsl
push
sub
aam
mov
mov
cli
std
push
push
adc
in
lock
inc
sub
pop
mov
adc
or
es
popf
push
push
into
xor
enter
lret
sbb
bound
mov
test
mov
lret
ljmp
mov
es
stos
inc
cmp
idivb
int
fiaddl
sbb
mov
push
setp
push
pop
jl
push
call
test
xor
rcrb
shlb
das
pop
add
inc
outsl
stc
jbe
push
or
cmp
aaa
push
mov
xchg
pop
in
nop
mov
pop
nop
shll
inc
sbb
insl
fstpl
in
or
lods
inc
jge
adc
into
push
syscall
enter
daa
sbb
aad
xchg
in
sbb
hlt
xchg
outsb
mov
outsb
daa
mov
push
jmp
es
cmp
fwait
scas
leave
push
shlb
adc
psllq
and
pop
cmc
xchg
cmp
push
orl
xchg
pop
stos
pop
pop
lcall
int3
xchg
push
jo
or
sub
stc
push
jge
repz
inc
andb
test
fsubrs
rorl
and
mov
shll
rorb
addr16
push
loopne
fwait
es
insb
mov
jge
mov
xor
cmp
mov
sub
nop
mov
push
push
cmp
mulb
cwtl
dec
mov
mov
fiadds
push
add
dec
fs
aaa
adc
popa
mov
aaa
inc
outsb
xchg
bound
or
mov
pusha
test
sub
or
xor
add
lret
mov
mov
mov
outsb
out
or
iret
loopne
fisubrl
and
and
jp
or
mov
in
push
xchg
les
jp
xchg
pop
mov
repnz
jbe
cmpsb
repz
inc
repz
fcmovu
pop
iret
cmp
mov
out
lahf
sar
xchg
and
into
in
fdivs
movsl
imulb
jb
pop
mov
in
push
push
arpl
jge
or
add
sub
xchg
imul
stos
dec
sbb
lret
mov
sahf
ja
jbe
add
scas
pop
bound
jp
mov
and
mov
sahf
dec
sbb
cmpsb
popf
cmp
sbb
outsl
jg
dec
test
sub
add
pop
dec
xor
testl
mov
inc
mov
or
frstor
lods
xlat
and
mov
in
cwtl
mov
psubsb
mov
aam
xor
lea
jp
les
jg
or
jmp
sahf
cmp
jp
jne
fs
push
idivb
mov
push
outsl
ret
clc
push
out
mov
stos
xchg
cmovle
mov
jecxz
dec
out
dec
test
sahf
adc
bound
pop
jg
cmp
pushw
shrb
mov
push
imul
pop
or
outsb
add
enter
mov
test
cs
lods
adc
std
xchg
pop
sub
cmp
je
into
out
xor
mov
and
aad
gs
mov
pop
bound
adc
stos
insl
inc
xchg
bound
sub
jne
loop
mov
push
sar
std
lock
xor
fwait
lcall
insl
pop
test
ljmp
pop
cltd
mov
adc
pop
inc
xchg
repnz
mov
xor
or
in
leave
push
mov
loop
mov
cld
add
imul
sbb
hlt
js
popa
mov
push
mov
or
xchg
icebp
xor
xor
aad
mov
xchg
cmp
xor
push
daa
loopne
movsl
cli
cmpsl
ljmp
or
pop
xchg
mov
jg
sub
cld
loopne
or
cmc
adc
frstor
shl
in
adc
jg
xor
sbb
cli
pop
in
jnp
push
adc
pop
bound
xchg
xchg
xchg
es
fisubs
mov
ljmp
insb
jmp
mov
push
loope
dec
sahf
loope
xchg
je
aaa
jno
inc
and
leave
mov
call
sub
out
andl
add
inc
pop
orl
scas
add
cwtl
ftst
cld
sbb
test
outsl
enter
fidivl
jae
stos
lods
lea
cmp
orl
arpl
pop
mov
sbb
pop
mov
cmp
mov
and
imul
lds
aad
in
cmc
xor
arpl
xchg
mov
adc
repz
aad
in
cmc
xor
arpl
xchg
jne
jne
add
adc
and
add
adc
and
aaa
test
push
mov
xchg
in
cmpsl
pop
mov
ret
add
xor
add
mov
repnz
sbb
or
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
xchg
pop
sbbl
movsb
orb
mov
add
push
add
pop
add
adc
je
jbe
outsl
add
push
add
enter
lock
add
add
add
add
add
add
add
add
add
incl
and
lret
add
add
add
add
add
roll
add
push
add
add
add
jge
and
and
jmp
roll
add
add
add
add
mov
xchg
add
add
mov
lods
add
bound
xchg
add
add
add
xlat
add
add
add
add
add
add
inc
add
add
adc
popf
add
adc
inc
add
add
lock
cwtl
add
add
iret
add
mov
imul
add
add
add
add
add
add
add
add
imul
filds
filds
adc
add
add
add
add
add
mov
add
push
mov
test
push
dec
add
push
add
add
add
add
mov
jl
loopne
push
add
add
mov
add
add
add
and
pop
add
add
int3
add
add
add
add
loopne
filds
add
mov
lahf
add
add
add
pusha
add
add
add
add
adc
and
jbe
jo
filds
pop
add
add
add
cmp
add
push
add
add
add
add
add
filds
filds
sub
add
add
add
adc
and
jl
jl
inc
add
stos
add
add
add
add
and
aam
pop
add
add
add
add
add
add
add
adc
inc
add
push
add
add
hlt
add
add
lcall
add
add
xchg
add
add
add
add
add
add
push
jo
filds
mov
sub
add
push
add
add
add
add
scas
add
in
push
add
out
add
add
add
mov
filds
add
add
add
add
add
pop
add
add
incb
dec
add
dec
add
or
out
add
add
add
push
add
add
add
add
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
inc
add
add
add
add
add
add
add
add
add
iret
add
stos
add
add
or
push
add
add
mov
add
add
sbb
dec
add
add
add
mov
add
add
add
add
dec
add
add
push
inc
add
add
add
add
add
insb
add
add
lret
add
add
add
lods
add
cmp
add
add
add
add
add
roll
mov
add
add
add
add
add
add
add
add
add
add
add
les
push
add
add
add
sbb
out
rcrb
mov
jl
cwtl
fldt
sbb
mov
imul
movsl
out
xor
cmp
jb
shrb
dec
xor
in
sub
test
vpsllq
test
or
ret
sbb
or
pop
rcl
leave
push
push
mov
push
mov
mov
mov
xor
inc
lock
int
nop
repz
pop
nop
call
test
cmp
lds
test
mov
and
fisttps
icebp
mov
adc
arpl
xor
dec
test
xor
inc
xchg
cwtl
xchg
jl
pusha
dec
jae
insb
cmpsl
ljmp
in
push
mov
out
push
fistl
mov
andl
stc
test
jno
lahf
push
push
mov
dec
shlb
lcall
mov
pop
pop
or
popa
add
mov
mov
push
mov
ret
dec
adc
inc
mov
inc
out
icebp
inc
sub
sahf
jbe
or
pop
mov
mov
lods
popf
loopne
add
pop
repnz
cwtl
into
adc
cmp
mov
sub
mov
dec
mov
jo
push
and
movsl
in
cmpsb
neg
mov
aaa
leave
jmp
push
shll
sbbl
mov
cmpsl
mov
adc
sub
mov
mov
mov
cld
jg
out
in
cs
ljmp
mov
in
test
add
imul
adc
mov
add
add
in
sbb
data16
test
out
stos
pop
jnp
xor
loop
scas
mov
jnp
mov
cli
fsubrs
cmp
sbb
mov
xchg
cmp
test
in
lea
xor
xchg
lret
mov
push
hlt
xchg
inc
psllw
imul
popf
subl
lea
sbb
ss
js
sub
cli
xchg
dec
pop
fbstp
dec
add
cmp
adc
std
dec
push
rorb
adc
outsl
dec
enter
xchg
dec
cmp
fldl
in
mov
jae
xor
shl
sub
js
repnz
daa
mov
or
inc
fldcw
adc
push
cmp
lret
inc
dec
xor
lods
test
mov
cmc
enter
fdivrl
push
out
in
and
ss
inc
popf
push
insb
jg
inc
adc
sarl
out
xor
adc
es
arpl
rolb
in
cmp
xor
jae
movsb
popa
or
adc
sbb
ja
es
xor
xchg
mov
cmp
push
fiadds
test
and
addl
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
