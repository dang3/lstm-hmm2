call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
popa
sti
jb
inc
fists
and
cmp
scas
mov
rorb
cmp
clts
pushl
fists
and
adc
mov
adc
pminub
sub
inc
mov
sbb
adc
stos
ds
leave
insb
rorb
into
imul
scas
inc
mov
stos
es
push
fcomps
dec
movsl
hlt
rcll
out
and
cld
mov
stos
xlat
xor
mov
pusha
lahf
jo
addb
pop
sub
jo
xchg
insl
inc
pushf
xchg
aaa
mov
xchg
push
jae
or
aam
jle
jg
pop
shlb
dec
lret
scas
enter
out
cmpsl
fstpt
lahf
std
pop
adc
jecxz
repnz
sub
pop
sub
jae
sub
bound
iret
xor
mov
jae
pop
jno
ret
mov
jp
sahf
sbbb
lods
pop
fistpl
daa
mov
sub
aas
dec
mov
and
xor
cmp
iret
inc
stos
push
iret
mov
mov
and
push
jae
add
cmp
ss
mov
jbe
adc
loop
mov
sub
js
inc
jmp
mull
mov
xor
div
inc
mov
ret
jg
jo
das
jmp
sarl
push
mov
add
add
repnz
ret
dec
mov
pop
xchg
punpckldq
jb
inc
fists
and
adc
ret
dec
mov
pop
xchg
punpckldq
aam
andb
cmpsb
insb
ss
mov
add
aas
fsts
pop
inc
xor
clc
scas
push
add
rclb
push
fnsave
dec
stos
cmp
pop
aam
lods
or
ss
mov
mov
loopne
addr16
addr16
sbb
inc
lcall
push
or
aad
lret
inc
enter
inc
je
xchg
imul
or
and
outsl
xorl
ret
or
or
sbb
inc
mov
lret
adc
dec
fistl
jns
ror
pop
bnd
rcrl
xchg
test
inc
pop
test
outsb
and
andl
cltd
test
sti
stc
xor
imul
push
stos
gs
lea
mov
push
out
or
dec
sbb
int3
pushf
dec
rep
xor
clc
sti
sub
iret
ljmp
addr16
addb
out
sbb
adc
movsl
mov
mov
mov
xchg
ds
jp
add
outsb
shll
sub
inc
jge
pop
push
add
std
test
jne
cmpsb
sub
jbe
jp
in
dec
sub
mov
js
sub
adc
xor
or
scas
repz
test
imul
fisubl
je
mov
pop
shrb
xor
shrb
cmc
cmpsl
xor
adc
out
inc
mov
jmp
aam
aam
cmp
adc
cwtl
push
addr16
outsb
push
scas
loope
fnsave
movsl
pop
sahf
sahf
dec
sub
xchg
lret
out
lahf
sub
mov
mov
pop
mov
je
jge
jmp
lds
jp
movsl
mov
and
movsb
mov
sbb
imul
mov
ljmp
inc
sub
sub
jno
jb
out
out
and
nop
xor
dec
dec
xchg
pop
fidivs
pop
daa
mov
das
mov
jge
cwtl
outsl
in
imul
xlat
loop
andb
hlt
bound
add
and
je
xorb
je
repnz
push
inc
and
mov
leave
aad
lret
mov
push
addr16
test
mov
push
aaa
inc
push
pop
push
bound
push
inc
xchg
push
add
jecxz
roll
mov
insb
subb
and
in
dec
mov
cmp
jle
lock
lret
and
cmp
xor
inc
jns
jl
dec
sti
out
dec
adc
push
dec
sub
mov
js
mov
xchg
fabs
jg
fmull
dec
inc
arpl
shrb
pop
adc
pop
jg
lret
mov
or
xchg
sbb
in
cmp
ret
xchg
xchg
sti
dec
or
inc
faddl
jns
lock
add
xor
mov
adc
inc
je
mov
movsb
jmp
pop
push
lods
lea
or
fcomps
pop
and
xor
imul
lcall
and
sub
leave
jbe
ficoms
popa
adc
xor
jmp
jnp
sbb
pop
adc
lds
sar
sbb
call
sub
cmp
add
les
out
imul
inc
pop
mov
mov
jp
xchg
lds
hlt
addr16
loopne
cs
xor
fcoml
jns
adc
popf
adc
into
test
and
lods
scas
ror
adc
in
repnz
dec
inc
jecxz
jge
inc
dec
outsb
and
fisubrs
mov
dec
stos
leave
test
jecxz
les
hlt
cmpsb
dec
shrl
nop
pop
or
rolb
pop
add
xor
mov
cltd
mov
popl
sbb
into
xchg
and
out
sbb
mov
lods
jbe
popa
sbb
dec
dec
add
mov
xchg
xor
xlat
jns
add
jnp
fmul
rolb
mov
stos
std
in
xor
test
add
dec
sub
lods
push
sbb
sub
adc
jne
jns
mov
jg
int3
cmp
xchg
inc
cmp
loop
xchg
mov
add
aaa
test
aad
sub
lret
mov
mov
das
inc
ljmp
pushf
jecxz
fwait
and
in
lret
test
mov
xor
ja
add
jle
pushf
int
aas
shlb
xchg
jmp
lahf
pop
js
pushf
test
inc
mov
sbb
fistl
xor
aad
aam
outsb
popf
pop
push
push
mov
scas
dec
adc
pop
cwtl
repnz
jmp
mul
std
lret
test
mov
in
xchg
aas
in
cltd
xor
adc
push
mov
xchg
mov
pushf
mov
int
lret
sarl
fimull
mov
mov
push
xlat
pop
mov
xchg
push
daa
or
mov
fcomp
inc
adc
add
aad
cli
xchg
cmc
movsb
into
mov
mov
inc
add
xchg
je
faddp
imul
imul
test
xchg
xor
lods
jns
movsl
subl
pop
out
or
push
cmp
movsl
push
xchg
push
lret
or
popa
sbb
call
and
mov
cld
dec
xchg
pop
push
scas
and
dec
pop
addb
mov
movl
in
leave
or
sarb
fists
push
cwtl
adc
mov
test
outsb
inc
mov
push
sarb
lods
jmp
jbe
loope
and
loopne
jecxz
or
test
ret
push
ljmp
daa
pop
scas
mov
jmp
xchg
mov
xchg
aad
add
jae
inc
cmp
inc
mov
lods
lock
inc
dec
or
push
loop
subb
pop
mov
fbstp
jbe
int3
push
fwait
cmc
or
test
cmc
jmp
aad
inc
cli
add
jmp
out
sahf
xor
sub
push
cmc
mov
push
stos
jecxz
mov
subb
out
sub
cmp
popf
outsb
mov
cltd
or
adc
mov
pop
fimull
addl
sub
pop
fwait
out
fdivl
call
xchg
data16
pop
lahf
pop
mov
inc
jns
frstor
arpl
jne
ret
xor
sbb
scas
sub
arpl
push
dec
cwtl
subb
add
adc
mov
xor
outsb
jnp
enter
cwtl
inc
cmp
or
pop
and
out
fimuls
ret
pushf
mov
xor
popf
mov
inc
push
inc
cmpsl
out
lock
push
mov
mov
or
je
lret
jno
mov
inc
xchg
add
sahf
cltd
push
pop
cs
pop
mov
adc
ret
fdiv
daa
mov
orl
mov
dec
push
nop
mov
test
pusha
push
xchg
pop
cs
pop
mov
test
loope
push
call
test
jno
dec
jge
sbb
sbb
fnsave
dec
cmpsb
xor
and
mov
movsb
mov
sahf
xor
mov
jge
inc
stc
pop
push
shrl
push
cmp
inc
fwait
dec
lock
in
repnz
mov
pop
inc
sbb
mov
sbb
xchg
mov
dec
xchg
shr
in
jmp
inc
xor
imul
xchg
fstpt
xor
and
and
cmp
idiv
flds
int3
pop
clc
sbb
es
rcl
nop
push
std
les
fs
ja
xchg
mov
mov
push
neg
dec
sbb
cmp
rcrl
cmc
loopne
fsts
adc
aas
xchg
add
xorl
mov
add
icebp
push
xor
jle
psllq
sub
lea
push
mov
or
das
sub
and
imul
sub
mov
lods
incl
sbb
and
mov
enter
and
pop
test
mov
dec
inc
sbb
pop
xchg
rclb
jl
mov
push
mov
adc
int3
in
insl
lea
xchg
jl
out
filds
test
pop
pop
lds
lret
loop
push
into
mov
daa
addr16
or
or
add
pop
xchg
ja
and
jo
insl
adc
bound
mov
lcall
xchg
add
outsl
dec
outsl
inc
mov
mov
loope
fcomp
dec
rolb
sub
adc
jo
add
mov
push
sahf
xor
adcb
jge
or
test
cmp
insb
xor
sti
mov
sub
push
xor
icebp
jns
icebp
cltd
pop
push
frstor
lcall
xor
fs
aaa
imul
sbb
icebp
xchg
jl
ss
sub
push
jecxz
pop
imul
fadds
mov
ja
sbb
or
movsb
scas
sbb
stos
aas
loope
pushf
cli
push
cwtl
rcrb
add
cmc
jle
addr16
mov
test
cmp
cld
stc
push
sbbl
or
add
push
enter
shlb
fwait
andb
lock
sub
fdivl
scas
lea
push
or
call
outsl
sarl
shrl
les
cmp
and
adcl
push
fistpl
pop
jnp
or
insb
js
test
sbb
lods
sbb
mov
jnp
das
dec
repnz
mov
or
xchg
scas
in
lds
or
xor
sbb
sahf
arpl
dec
push
sbb
jnp
xor
lahf
jg
and
and
bound
lcall
lret
xchg
out
cmpsl
cmc
shr
ja
xchg
hlt
jne
lret
test
xchg
inc
xor
mov
xchg
sub
lret
xchg
cmpsl
cmc
in
lods
cmp
test
andb
neg
dec
xor
cmp
xchg
jns
dec
xor
lret
shlb
and
and
sub
lahf
xor
imul
lds
stc
adc
adc
mov
popa
xchg
imul
icebp
stos
rorb
xchg
adc
in
xor
ret
xchg
aaa
dec
scas
sbb
jle
ds
aam
adcb
dec
movsb
push
jge
mov
xchg
sbb
pop
stos
js
insb
movsl
jo
das
pop
out
jae
fcmovbe
fwait
or
inc
dec
in
dec
loopne
std
movsb
in
adc
mov
dec
inc
jl
data16
add
push
cmpsb
and
popa
inc
xchg
mov
sbb
and
loope,pt
xchg
xor
hlt
stc
lds
adc
xchg
insb
fwait
sub
lods
mov
movsl
cld
sbb
cli
out
arpl
sbb
mov
xchg
jg
fistl
push
dec
cmpsb
add
insl
xchg
sbb
test
andnps
pop
jge
jmp
scas
hlt
lahf
mov
in
sbb
sbb
arpl
push
push
sbb
hlt
movsl
xchg
rep
pushf
dec
mov
lock
lea
ret
mov
or
mov
popf
frstor
addl
loopne
push
dec
repz
lock
outsb
pop
push
sbb
fsub
mul
inc
mov
ja
dec
mov
testb
test
jge
repz
pop
ret
mov
enter
test
ds
lods
in
jmp
cmc
sbb
js
jl
inc
or
scas
mov
pop
xchg
add
dec
push
inc
hlt
jg
jbe
stc
xor
std
hlt
sub
xchg
xchg
lods
ret
stos
bound
mov
test
mov
mov
in
pop
int3
sub
int3
cmpsb
jae
mov
int3
mov
inc
or
cmp
jne
pop
lods
jl
fs
xchg
inc
frstor
and
xchg
push
sbb
lret
inc
mov
ret
ret
inc
jmp
fiaddl
sub
mov
mov
pop
adc
push
adc
xchg
xor
lods
push
mov
jae
or
and
fwait
hlt
xor
mov
fidivl
add
dec
aad
popf
sub
jbe
cmp
sahf
or
add
sti
nop
call
sar
mov
aam
dec
lret
add
xchg
jmp
inc
lock
sbb
jge
cmp
sub
inc
sbb
popa
scas
inc
fcmovnbe
jne
pop
pop
outsl
fsubrs
lret
pop
test
dec
inc
xchg
xchg
adc
xor
pop
mov
adc
fcoms
jecxz
mov
mov
sub
es
sbb
add
cmpsb
sbb
fsubrs
aas
inc
imul
xor
jo
jp
add
push
lds
mov
sbb
mov
push
dec
push
sub
or
imul
rolb
push
insb
pop
mov
popf
mov
push
mov
sub
cli
inc
jecxz
sub
jnp
scas
jecxz
add
gs
mov
dec
out
pop
lock
fwait
inc
clc
in
bound
dec
mov
mov
inc
aas
out
ret
inc
andb
mov
push
testb
cmp
inc
push
xor
push
mov
jae
push
or
inc
pop
aaa
dec
bsf
mov
push
and
jbe
xor
lcall
movsb
jno
adc
int3
out
jns
mov
or
add
lcall
popf
jo
lret
sub
mov
lods
adc
and
mov
xor
lahf
inc
xor
xor
ds
insb
push
out
lahf
push
pop
test
ja
out
aam
out
imul
loop
dec
out
lods
int
daa
scas
mov
out
ret
in
add
lcall
or
shll
cs
or
lea
mov
mov
and
mov
sub
or
icebp
cld
adc
add
sbb
xchg
sbb
out
enter
out
arpl
pop
pusha
std
push
mov
dec
shl
ja
cmp
push
push
mov
call
stos
push
push
pop
adc
pusha
lfs
xor
ss
cmp
cli
sbb
pop
sbb
sahf
push
push
rorl
mov
loopne
pusha
test
mov
push
jg
push
repz
movsb
cld
mov
ja
adc
xlat
dec
mov
pop
jl
or
rdpmc
inc
xchg
dec
dec
mov
outsl
stos
sub
scas
aam
ljmp
mov
mov
cmp
pop
mov
nop
inc
pop
and
mov
adc
scas
popf
mov
cltd
add
ljmp
std
roll
movsb
mov
jno
in
pop
stos
xlat
sub
xchg
test
add
add
xchg
push
in
notl
out
xor
loopne
pop
push
mov
add
xor
nop
scas
aam
adc
add
and
fldt
imul
mov
aaa
adc
outsb
and
sbb
push
jle
pop
pop
mov
mov
lods
stos
inc
gs
xor
mov
push
inc
rcl
data16
jle
subl
sbb
and
mov
add
sub
cmc
xchg
aad
push
andl
cs
dec
bound
jl
sbbl
mov
int3
iret
pop
inc
subb
loope
xchg
cld
movsl
in
fidivl
cmp
stos
lahf
or
xor
pop
icebp
out
scas
jbe
ret
enter
sub
ret
cmpsl
sub
mov
dec
into
adc
jecxz
enter
inc
mov
ja
ljmp
mov
mov
imul
scas
repz
shll
mov
imul
dec
mov
push
adc
mov
cmpsb
in
jno
in
sti
and
xor
and
arpl
insl
pop
and
mov
mov
ljmp
inc
in
int
leave
xchg
mov
movsl
sub
jne
dec
inc
gs
sarb
fcoml
sub
and
jecxz
stos
jbe
sbbl
jb
and
lcall
xchg
cmp
xchg
test
orb
xchg
sbb
and
jo
cmc
push
out
out
loopne
rcll
aaa
xor
xorb
mov
aam
mov
mov
lcall
ficomps
pop
xor
push
sahf
or
push
aad
in
lcall
xchg
fisttpll
data16
pop
test
imul
mov
add
lods
dec
aad
mov
mov
stos
xchg
inc
insl
mov
icebp
inc
leave
lods
fwait
mov
push
sahf
push
xchg
xor
xor
adc
nop
and
fsubrl
xorb
lret
mov
popf
movsl
rolb
push
not
or
cmp
mov
or
sub
push
dec
push
sbb
pop
test
shr
mov
mov
xchg
mov
fs
lock
popa
mov
nop
mov
repz
mov
shlb
xlat
jle
mov
pop
stos
mov
jbe
dec
or
xor
arpl
push
sti
mov
add
cltd
fisttpl
xchg
xchg
jmp
push
bound
scas
jmp
sbb
fldenv
loop
jb
mov
push
fnsave
fdivs
xor
sub
or
hlt
xorb
out
and
inc
mov
mov
decb
adc
test
mov
mov
lahf
pop
cld
pushf
add
mov
imul
push
adc
fidivl
xchg
dec
mov
and
cmpb
je
dec
es
fisubl
dec
pushf
add
dec
sti
popf
inc
cmpl
jmp
sub
aas
movsb
mov
hlt
jae
xchg
or
js
push
loopne
mull
leave
xchg
mov
xchg
inc
push
cmp
lahf
inc
xor
leave
adc
dec
aas
xor
xlat
mov
in
fs
js
test
arpl
fsub
inc
clc
js
ficomps
sbb
adcl
insb
call
std
cld
sub
movsb
es
inc
mov
xlat
imul
pop
inc
and
add
push
xchg
mov
push
nop
je
iret
and
sub
out
dec
ljmp
xor
in
jno
mov
dec
test
and
aad
out
mov
les
xor
mov
inc
popa
adc
push
sub
add
mov
arpl
sub
sub
push
cmp
cmp
test
call
fwait
shlb
and
test
dec
jl
cwtl
sbb
nop
dec
jmp
cmp
jo
jbe
fwait
rol
mov
aas
fwait
and
push
cmp
dec
xchg
fnsave
or
pushf
fdivs
into
mov
push
ljmp
mov
and
pushf
mov
push
mov
and
aas
loop
data16
pop
inc
lret
repnz
jae
push
xchg
sub
xor
dec
push
or
cmp
aaa
loopne
xor
scas
into
repnz
insb
paddusw
jg
mov
pop
insb
fcomp
insl
pop
xchg
adc
jne
sub
xchg
not
sbb
es
xchg
jp
ja
test
pop
sbb
cmp
bound
test
xor
or
adc
sti
in
push
sub
icebp
lret
enter
in
leave
dec
pop
insb
outsb
sub
ljmp
imulb
xor
iret
movsl
out
and
shll
les
sub
adcl
adc
popa
ret
lret
mov
aaa
jae
adc
xorb
stos
int3
add
mov
mov
sbb
sub
mov
or
jg
outsl
and
mov
fwait
xor
push
push
sbb
ljmp
pop
fsubrp
sbb
popl
xchg
xchg
in
xchg
xor
es
ret
lret
pop
out
fs
cs
mov
and
cld
sub
mov
int
nop
xlat
out
push
mov
test
gs
mov
rorb
cli
clc
jnp
lret
mov
clc
outsl
mov
loope
fsts
filds
xchg
sbb
ret
push
mov
mov
fs
fisttpl
or
cmp
mov
xlat
lret
fs
insb
and
sub
ss
xchg
mov
inc
lahf
mov
pop
fidivrs
popf
xchg
mov
test
mov
int3
into
and
jle
cltd
xor
jae
dec
xor
mov
jo
stc
repz
sub
xor
arpl
push
and
js
and
pop
jmp
dec
cwtl
out
js
in
jno
mov
cmp
in
inc
mov
add
mov
adc
ret
dec
mov
pop
xchg
punpckldq
jb
inc
fists
and
adc
ret
dec
mov
pop
xchg
punpckldq
inc
loope
push
lret
mov
xor
add
repnz
rolb
cmp
jmp
sbb
or
cmp
and
xchg
dec
loop
or
cmp
inc
cmp
insl
ja
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
sbb
sub
cmp
inc
fnstsw
mov
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
push
jp
mov
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
push
jp
mov
add
lret
jge
dec
xchg
cmp
jnp
sub
or
pop
inc
push
mov
mov
push
push
roll
mov
cltd
aad
movl
xchg
movsl
xchg
mov
hlt
pop
cmp
js
leave
ficoml
cmc
fdivl
inc
push
jae
pop
fimuls
cmp
cmpsl
mov
or
imul
cmp
in
and
jp
jp
pop
dec
dec
xchg
inc
xchg
xlat
jno
pop
push
lahf
and
mov
jp
xchg
push
icebp
out
mov
pop
daa
xchg
xor
rcrl
sub
imul
call
rcrl
int
fisttps
insl
sarb
testb
leave
leave
sbb
sub
cmp
dec
mov
push
jp
mov
pop
stos
imul
jg
movsb
jns
insb
scas
jl
das
out
fadds
and
call
dec
fs
pusha
stos
mov
outsb
xchg
dec
jmp
adc
clc
or
xor
cmp
pop
nop
push
insl
cltd
sbb
pmulhw
push
jp
mov
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
push
jp
mov
pop
stos
imul
cmp
leave
jnp
mov
inc
sub
in
cmp
popf
xchg
xor
aas
jecxz
jmp
fmuls
inc
fldcw
mov
push
outsb
in
push
call
inc
lods
hlt
cmpsb
sbb
orl
push
loop
lds
push
mov
test
repnz
fisttpl
adcb
out
and
in
pop
sbb
and
add
xor
inc
push
push
mov
lahf
push
mov
push
mov
stos
ficompl
sub
popf
lret
mov
mov
scas
leave
inc
fcoml
sbb
roll
jmp
lahf
imulb
pop
jne
push
pop
call
aad
and
movsl
cmovbe
xchg
inc
pusha
xchg
test
pop
stc
fbstp
add
dec
and
stos
mov
push
je
mov
in
inc
sbb
add
outsl
sahf
out
in
fldenv
repnz
pushf
cmp
dec
push
jle
inc
lods
es
jmp
test
push
loop
ljmp
jo
cli
inc
sub
or
mov
enter
pushf
adc
mov
inc
shlb
dec
adc
shld
imulb
iret
repnz
dec
pop
paddw
add
mov
stos
cltd
jg
dec
push
out
or
divb
repnz
inc
fadds
and
lret
mov
nop
outsb
ret
sub
adc
cmpsb
call
xlat
filds
jle
mulb
sahf
dec
inc
daa
or
mov
cmc
imull
mov
xchg
test
outsl
fincstp
es
mov
and
mov
pop
mov
out
xchg
or
outsb
lret
lret
shrl
sub
loopne
pop
lahf
std
inc
jnp
loope
or
sub
adc
push
jb
daa
add
cmp
cmpsl
cld
out
das
scas
popf
push
push
loop
lds
pop
movsl
hlt
ret
scas
push
mov
push
adc
push
pop
cmpsl
je
mov
lcall
xchg
push
xchg
in
push
nop
cltd
lods
inc
cli
push
jbe
and
push
push
xchg
shl
aas
and
loope
or
fisubl
adc
add
fisttpll
cmp
nop
push
pop
sub
push
je
scas
out
pushf
lock
fldenv
stos
xor
lods
dec
out
shll
lcall
adc
cmp
push
mov
repz
mov
fbstp
lock
rcrb
out
popf
leave
mov
pop
mov
fbstp
mov
jge
sbb
sub
mov
imul
daa
sbb
cmpsl
push
xchg
dec
cmp
into
outsl
iret
js
jle
in
shlb
inc
or
sbb
adc
cmc
les
mov
inc
insb
outsb
jo
add
mov
cmp
inc
das
andb
mov
xchg
adc
repz
icebp
cli
mov
push
mov
stc
test
xchg
scas
cwtl
push
and
lods
lcall
pusha
rorl
pop
sub
adc
out
cmp
mov
enter
lock
stos
push
cmp
cmpsl
ficoms
out
adc
jns
scas
xchg
inc
add
inc
icebp
icebp
cld
or
add
push
pop
sbb
adc
or
cwtl
push
rcrl
fidivl
ss
mov
iretw
jle
or
add
mov
ds
mov
mov
push
and
rorb
movl
mov
loopne
xchg
xchg
bound
mov
addr16
lock
stc
jp
stc
clc
sub
mov
sbb
xchg
add
lahf
popf
xchg
repnz
xor
stos
jp,pn
addr16
aam
cmpsb
cmp
mov
push
in
data16
inc
in
push
jmp
call
jg
dec
cwtl
jns
psubb
outsl
pop
pushf
cwtl
int
lahf
dec
in
push
test
xchg
inc
dec
push
inc
cmc
clc
test
xchg
pop
sbb
dec
inc
mov
les
push
xchg
sub
push
loopne
notl
popa
lods
fs
cmp
shl
xor
nop
repz
fdiv
gs
jnp
cmp
adc
mov
mov
or
orl
cli
repnz
insb
movl
xlat
ret
pop
sbb
push
xchg
cld
arpl
dec
adc
cmp
pop
inc
fs
jmp
or
adc
mov
adc
movsb
lds
jecxz
mov
add
mov
je
mov
fwait
int3
and
jo
pop
pop
cmp
mov
sbb
and
mov
popf
nop
dec
cltd
inc
and
or
mov
repz
inc
adc
push
sub
out
pusha
cli
stc
xchg
mov
stos
test
adc
dec
adc
insb
and
pop
out
add
jno
jno
or
xor
ljmp
and
cld
pop
leave
dec
rclb
popa
scas
dec
sbb
lcall
mov
xchg
lret
mov
add
aam
mov
shll
gs
pop
cld
in
loopne
lcall
jp
add
or
add
xchg
scas
xchg
jno
out
xorb
sti
mov
daa
imul
adc
inc
and
pop
add
mov
pop
mov
pop
test
stos
ret
cld
rorl
push
fcmovu
jae
push
insb
add
and
cmc
dec
bound
hlt
ja
jg
mov
xor
shrl
inc
inc
push
mov
mov
fidivrl
roll
dec
sti
cltd
add
xor
mov
mov
xchg
shr
xor
adc
xor
movsb
pop
add
call
add
stos
rcrb
push
rcr
jo
adc
mov
dec
out
jbe
mov
add
bound
sbb
dec
mov
cmp
jno
dec
xor
repz
lret
js
jg
ja
test
clc
mov
mov
mov
mov
dec
pop
xchg
shlb
jl
mov
lret
cltd
add
lods
insl
inc
dec
enter
out
adc
mov
das
sahf
cli
pop
rcr
out
test
push
in
mov
cmp
mov
inc
push
es
pushl
das
stos
sarl
pushf
sbb
push
ljmp
mov
sahf
rcr
mov
lock
xor
adc
pop
push
jb
fisttpll
aad
cmpsl
ds
jge
jbe
and
pop
jg
repz
add
repz
pop
loop
int3
out
push
loope
sbb
jae
inc
xor
popf
cmp
add
or
loop
insb
xor
lret
les
cmc
call
pop
cmpsl
jecxz
jo
xor
xchg
pop
sahf
lahf
cmp
fsubl
loopne
hlt
jle
testb
loop
cs
sbb
mov
rorl
ss
push
push
fwait
push
jns
push
bound
mov
jp
jecxz
and
test
or
mov
or
arpl
out
lret
outsl
movsl
xchg
or
aad
xchg
push
into
push
int
rcrl
sbb
je
xor
in
adc
jne
or
dec
sub
push
icebp
mov
mov
testl
les
frstor
inc
jbe
shlb
mov
popa
xlat
fdivrs
sub
xchg
add
pusha
sgdtl
jbe
repnz
mov
idivb
aaa
push
xchg
bound
add
add
sti
xor
push
push
cmc
jbe
fistps
fisubl
xor
xor
adc
insb
or
adcb
add
adc
jl
jecxz
push
mov
add
and
push
icebp
mov
push
mov
push
lods
test
jl
cmp
jbe
cmp
loope
pushl
loop
ficomps
orl
add
int
leave
pusha
jae
xor
sbb
mov
out
add
addr16
push
fdivl
dec
add
out
add
mov
or
mov
and
scas
ret
jmp
jmp
xor
add
je
je
fisttpl
fisttpll
cmp
fwait
xchg
lods
cmpl
push
and
pushf
cld
lods
inc
insb
stos
insb
pop
dec
rcll
jno
insb
xor
sbb
mov
adc
cmp
int
int3
add
das
push
sub
fmulp
mov
movsb
shll
jbe
adc
test
push
outsb
popf
xlat
lods
jle
imul
xchg
xchg
sbb
push
mov
outsl
cltd
ret
fbld
iret
push
out
pop
imul
outsl
gs
mov
daa
jp
push
and
push
jb
dec
mov
movhps
fyl2x
mov
gs
test
aam
push
in
fsub
sbb
rcll
push
ja
lcall
xor
mov
and
adc
pop
test
xchg
mov
imul
fnstenv
test
xlat
mov
mov
pop
mov
movsl
xchg
inc
add
movsl
push
push
and
and
in
arpl
push
xchg
fdivl
inc
lods
and
divb
push
mov
fisubrl
popf
sbb
gs
lock
popa
xor
ret
ret
jecxz
scas
adc
int
or
dec
or
stc
les
and
mov
inc
js
shrl
mov
mov
int
addr16
pop
imull
pop
ljmp
cmp
cltd
mov
mov
fstpt
cmp
dec
imul
test
sbb
arpl
adc
cmp
jnp
pop
outsl
into
inc
mov
mov
mov
cld
fld
or
lock
roll
inc
jnp
or
lret
dec
cmp
pop
mov
mov
pop
xor
dec
pop
mov
test
inc
pop
inc
je
add
xchg
getsec
shl
cmpsl
add
stc
xor
out
in
push
cli
push
subl
imul
shlb
pop
mov
mov
cwtl
xchg
daa
dec
xor
jge
sbb
jbe
xchg
inc
stos
mov
dec
scas
and
and
dec
push
outsl
lea
es
std
lahf
xor
sub
imul
shl
and
mov
mov
inc
fildll
mov
xchg
out
ror
and
inc
add
outsb
es
mov
dec
mov
mov
push
inc
xor
xor
es
ds
in
mov
fnstcw
inc
shrb
xrelease
enter
push
daa
insb
iret
mov
dec
dec
mov
push
test
mov
dec
out
scas
aaa
mov
jle
ret
adc
sbb
cmp
ja
aad
popa
test
stos
mov
pop
jnp
add
jmp
seta
push
movsb
test
sub
jns
stos
sub
scas
bound
sbb
test
jo
sbb
cld
lea
xor
sbb
jle
outsl
pop
sbb
push
aad
out
aad
cmp
loopne
and
jg
sub
push
and
mulb
movl
mov
rorl
mov
push
fistpl
cmp
and
xchg
inc
das
data16
add
repnz
push
loope
jns
imul
xor
cmp
popf
jo
cmp
jns
gs
aas
rclb
mov
jns
int
fwait
pusha
ror
call
xchg
dec
imull
cli
sub
daa
inc
icebp
sbb
outsb
pop
push
mov
mov
xor
mov
scas
aaa
out
pop
mov
ljmp
add
dec
lret
pop
pop
addr16
push
sbb
or
or
out
addl
mov
cmp
and
je
inc
sub
mov
adc
sub
adc
and
cmpsl
xchg
fstps
fdivr
sub
addr16
cmpsb
fisttps
cmp
lock
data16
sub
push
in
inc
push
or
xchg
and
arpl
mov
fistl
popa
outsb
clc
adc
sti
imul
fldcw
in
adc
sub
pop
adc
call
nop
iret
je
mov
je
mov
aad
sahf
and
lds
sbb
and
mov
dec
stc
pop
dec
stos
nop
mov
and
shrl
xor
cmp
jge
in
add
pop
mov
movsl
fisubrl
push
add
inc
je
adc
mov
and
jp
add
and
out
dec
push
arpl
sub
hlt
pop
sub
lock
mov
dec
inc
cmpsb
cs
popf
ds
mov
stos
mov
je
jmp
aas
roll
dec
inc
sub
push
push
push
roll
pop
xchg
cmp
fcoms
rclb
fiaddl
aad
lahf
mov
pushf
mov
mov
stos
add
scas
push
xchg
stos
jb
inc
xchg
stos
add
xchg
pop
js
push
cmc
mov
mov
pop
jl
and
cmp
jmp
test
dec
lea
add
cmp
cmp
sbb
jnp
inc
mov
dec
leave
shll
inc
sub
jae
add
push
add
fimull
xlat
mov
fdivl
dec
jle
out
rcl
inc
cmp
adc
cmp
ljmp
filds
inc
adc
dec
cwtl
jno
and
cmp
dec
in
es
push
pop
push
inc
sbb
int
shrl
mov
jb,pn
xor
scas
xchg
nop
sbb
aam
out
sub
xchg
jmp
out
addb
push
sbb
jne
subb
repnz
mov
loope
test
xchg
fucomp
push
adc
test
stc
icebp
lock
inc
cmp
movsb
enter
mov
cmp
cmp
and
sub
xor
mov
sub
add
cld
sbb
cmp
repnz
insl
icebp
mov
mov
xchg
aam
mov
lret
cs
lret
pusha
mov
aas
insb
mov
cmpsl
push
sahf
jp
jge
push
arpl
nop
sub
stos
out
es
add
js
add
andl
out
ffreep
outsb
rcrl
jmp
in
cmc
shll
repz
cmp
push
xchg
cmp
push
mov
test
cmp
js
scas
arpl
pushf
mov
pop
addr16
ljmp
sahf
cld
sub
nop
xor
mov
jge
mov
aas
lahf
xchg
add
mov
sub
sub
dec
lds
rorb
push
sbb
mov
outsl
jo
call
ss
imul
cmc
cmpsb
push
iret
inc
mov
nop
popa
dec
outsb
jl
pushf
aad
jmp
inc
add
adc
pop
and
pop
sub
repnz
repnz
out
xchg
dec
sbb
mov
pop
aad
mov
ds
mulb
popf
sbb
mov
mov
scas
mov
jecxz
add
ss
cmp
add
test
lahf
jo
mov
jmp
mov
sbb
mov
inc
sbb
fwait
jns
pusha
mov
in
push
pop
sub
mov
mov
xlat
js
out
nop
outsl
scas
jmp
enter
adc
adc
scas
into
or
add
sbb
sbbl
cmp
bound
in
loopne
pushf
cld
add
sbbl
icebp
cmp
adc
pop
in
mov
loope
leave
ds
cmp
add
mov
xor
xchg
test
js
outsb
out
pop
sarl
addb
inc
rcll
imul
fadds
inc
mov
insb
sbb
mov
lods
pusha
jae
repnz
push
xor
fcmovb
fmuls
jge
stc
jg
aas
xchg
sbb
lds
das
mov
xor
jle
add
xchg
dec
inc
add
pop
mov
daa
lret
test
jae
push
pop
mov
or
jecxz
subb
call
and
xchg
push
dec
xchg
roll
xor
jnp
ficomps
jne
nop
lret
out
cmp
mov
xchg
pop
add
stos
mov
or
mov
inc
gs
fs
sbb
mov
fwait
jmp
cmp
jecxz
and
data16
sub
fisubs
faddp
into
das
pop
sub
push
xchg
inc
cmp
mov
sbb
mov
adc
mov
out
push
adc
mov
or
sbb
mov
fsubs
in
sahf
dec
sbb
les
xor
pop
dec
jnp
push
sti
push
sbb
mov
test
add
sbb
cli
ror
sub
cmp
adc
iret
mov
dec
mov
or
or
std
jnp
fistpll
pop
cmpsl
fisubrs
fs
lahf
jp
iret
jno
push
cltd
call
sbb
dec
jp
pop
pop
sub
lea
hlt
adc
lock
das
cmp
pop
testl
in
es
movsl
push
jge
inc
flds
enter
test
jecxz
int3
mov
aaa
fisubrl
data16
mov
sbb
test
ret
daa
cmp
or
testb
sub
ret
inc
mov
ret
add
jae
push
xor
pop
lcall
adc
xchg
mov
jae
ljmp
rcll
sub
fstl
insb
sbb
mov
and
lahf
outsb
push
and
jecxz
mov
xchg
sub
inc
fidivl
inc
push
inc
stos
jns
mov
pop
ljmp
or
or
addr16
adc
inc
xor
cmp
js
cmp
rorl
out
xor
push
stc
adcb
lahf
push
imul
inc
push
aaa
cmp
mov
mov
mov
and
cmpsl
xchg
xor
mov
dec
pop
pop
mov
lret
iret
fsubl
jge
mov
bound
sbb
lods
dec
jmp
or
dec
and
daa
popa
inc
notl
scas
sbb
out
ljmp
sub
inc
ds
cmp
sahf
add
test
andl
jg
test
addb
cmp
nop
push
loopne
dec
cmp
mov
fnsave
cmp
test
shrl
inc
mov
loopne
mov
repz
js
stos
shrb
ds
stc
or
in
fcomps
sarb
arpl
int3
push
dec
stos
jns
cwtl
insb
cmp
sar
fwait
loopne
lret
test
cmpsl
push
xor
and
jmp
xchg
out
jbe
jg
test
sahf
add
lcall
stos
pop
xchg
sbb
loopne
ror
sbb
nop
xor
push
in
push
mov
xor
mov
push
mov
daa
xchg
pop
pop
xor
pop
out
and
rcll
insb
lods
sub
jge
scas
xorl
mov
nop
add
adc
cli
xlat
adc
ds
dec
sbb
push
mov
xor
inc
jge
xchg
lods
outsb
sub
xor
aad
sti
or
sbb
jle
imul
mov
in
in
ret
push
jp
xor
push
out
cmp
and
loopne
mov
sti
outsl
rorb
sbb
sbb
cmpsl
cwtl
in
mov
inc
repz
cmpb
mov
lret
cwtl
jecxz
popf
mov
cwtl
std
pop
dec
mov
sbb
loop
ds
mov
int
js
pop
sbb
pop
and
fdivs
push
ret
scas
sub
inc
push
pop
pop
lods
lahf
xchg
lret
xchg
sbb
in
rclb
mov
add
inc
jne
lea
cld
fistps
cmp
insb
sub
pusha
iret
enter
pop
xor
ljmp
out
sub
mov
mov
sti
add
loop
aas
dec
jnp
xchg
push
repnz
sbb
add
popa
insb
aad
xchg
fildll
dec
dec
cld
push
stos
stos
push
pushf
mov
jle
sub
out
repz
and
gs
arpl
xchg
push
xchg
in
lcall
shr
xchg
push
or
add
add
popf
lea
stos
jb
sub
jbe,pn
ret
adc
lds
push
cmp
dec
test
pop
xlat
add
or
sub
out
jo
stos
sbb
inc
inc
lret
sub
orb
mov
aad
lock
je
xorl
adc
jl
stos
hlt
es
pop
sbb
popf
imul
push
out
insl
adc
push
call
fcmovnbe
sub
cs
stos
cwtl
and
xchg
stc
jp
mov
mov
mov
xchg
dec
int3
in
jmp
cmp
movsl
add
jl
mov
jecxz
inc
fists
imul
movb
dec
sbb
mov
shr
std
loop
cmp
popf
pushf
stos
mov
xchg
sub
xchg
sbb
push
loopne
xchg
mov
push
divb
add
mov
mov
cmp
notl
jmp
jl
fnstcw
cltd
xchg
leave
int3
push
push
jbe
xchg
lret
outsb
popa
stos
leave
xchg
jp
dec
xchg
fsts
mov
push
jp
mov
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
push
jp
mov
pop
stos
imul
cmp
int
fldcw
jmp
pop
cltd
push
jp
mov
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
ljmp
repz
push
mov
add
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
pop
fmull
aad
clc
cmp
or
cld
jl
dec
fcompl
mov
sbb
in
cld
insb
int3
pop
fmull
mov
or
cld
jl
fcompl
mov
sbb
ss
insb
dec
pop
sbb
hlt
sub
sbb
or
push
adc
sub
pusha
ret
jnp
outsl
mov
xor
iret
mov
lahf
or
jg
inc
mov
dec
idivl
daa
dec
xchg
sub
in
hlt
cmp
cld
mov
sbb
adcl
test
int3
xchg
fnstsw
pop
and
int
clc
pop
movsb
loopne
add
xor
mov
inc
add
mov
mov
inc
sub
xchg
sahf
repz
das
sbbb
mov
arpl
add
add
push
cmp
aam
lods
add
mov
pop
or
lods
cmp
pop
arpl
imul
jns
and
mov
xchg
mov
test
mov
int3
pop
mov
lods
cmp
sub
sbb
or
cld
out
in
xchg
faddl
dec
mov
js
sahf
adc
and
lahf
push
std
pop
or
mov
mov
push
fistpll
pop
int
jl
outsb
mov
lds
loopne
out
or
test
mov
jns
pop
fcompl
xor
sub
cmp
sub
sbb
or
cld
jl
dec
fcompl
mov
sbb
in
jl
insb
int3
pop
fmull
mov
or
cld
jl
dec
fcompl
mov
sbb
in
jl
and
loopne
rcll
das
push
int
imul
mov
ljmp
mov
cmp
jo
pop
xlat
dec
test
sub
push
fwait
dec
call
mov
xchg
sbb
imul
icebp
cmpsb
sbbl
add
lret
jno
mulb
mov
push
andl
test
mov
push
push
mov
jb
and
dec
out
lods
outsl
xor
sar
insl
push
jo
scas
fisubs
mov
or
inc
loop
cwtl
inc
jnp
pop
orb
repz
pop
xchg
jl
arpl
mov
bound
cmp
mov
mov
pop
fwait
add
loope
xchg
inc
push
dec
lock
pop
je
mov
pop
out
lret
rolb
shrl
sti
mov
xchg
add
jne
push
mov
scas
cltd
adc
fsubr
sti
mov
stos
fnsave
jbe
push
xorl
scas
jl
scas
jae
ficompl
add
scas
mov
push
in
repz
arpl
inc
and
andb
loope
je
mov
nop
sti
xchg
inc
mov
int
out
inc
int3
pop
aam
iret
pushf
cwtl
daa
out
mov
aam
cmp
test
mov
fwait
mov
dec
or
xchg
pushl
out
imul
imul
jmp
xor
jp
loop
filds
jl
mov
loope
pop
jecxz
scas
cmp
cmp
and
rcrl
xor
mov
sti
sub
mov
mov
iret
jecxz
lea
sbb
loope
pop
ja
in
xor
adc
lds
mov
pop
mov
jge
jecxz
mov
pusha
popf
pop
sarb
pop
call
int3
fadd
adc
loop
int
xlat
or
sahf
xchg
mov
push
aas
adc
cld
dec
in
xchg
or
in
mov
ret
lahf
dec
lret
outsb
and
outsl
pop
out
jg
lret
push
cmc
or
push
out
inc
mov
pop
pop
and
and
mov
nop
push
mov
hlt
sub
xor
fcoml
cltd
mull
cmpsl
adc
adc
sub
jle
dec
push
pushf
in
xchg
orb
or
push
xor
xchg
std
cmp
and
push
adc
and
and
mov
lods
bsr
aad
mov
jae
push
pop
mov
das
ja
push
aad
mov
andb
and
adc
dec
jmp
inc
sub
sti
mov
or
jmp
sub
mov
testl
sub
adc
dec
jae
mov
sbb
sub
movsl
jne
int
loope
out
rcll
dec
push
aas
addr16
xchg
xlat
in
xor
adcb
lock
movsl
jecxz
xor
cld
lock
sub
xor
es
fstps
inc
lcall
cmpsl
and
sub
jo
adc
or
dec
into
bound
mov
or
cmpsb
sub
mov
stos
cmp
push
aam
outsb
popf
sbb
sbb
adc
mov
and
adc
sub
sbb
or
cld
je
lds
shl
insl
adc
jmp
mov
movl
sti
pop
sets
and
shll
roll
ss
inc
dec
pop
inc
sbb
nop
shl
mov
mov
or
test
hlt
jne
dec
mov
rcrl
sbb
sub
out
imul
jae
inc
mov
test
mov
and
int
insb
hlt
ret
stos
adc
mov
cli
stc
cmp
fwait
clc
aam
inc
mov
xor
mov
aas
testb
shlb
jg
jae
pop
push
or
push
data16
mov
sbb
xchg
cli
lret
and
outsl
rcrb
rcl
pop
cmp
inc
inc
push
imul
ljmp
xchg
insb
xorb
and
lds
scas
xchg
cmp
scas
int3
inc
addr16
push
call
std
ljmp
leave
call
cmp
js
lahf
rorl
mov
jl
cmp
ljmp
pop
notb
push
or
mov
and
dec
pop
add
sub
inc
sub
mov
inc
sub
jae
mov
addr16
bound
test
or
sqrtps
jl
add
or
sbb
mov
lret
test
adc
dec
dec
les
negl
jmp
out
add
lea
mov
outsl
gs
and
mov
push
and
or
es
mov
das
into
fwait
mov
mov
fsubrp
adc
jo
cmc
ret
lcall
mov
push
mov
cmp
fadd
mov
mov
add
das
dec
jb
mov
pop
out
loop
and
push
dec
stc
xchg
pop
sbb
rep
les
jecxz
in
xchg
mov
lds
add
dec
cmp
cmp
imul
lcall
arpl
hlt
xchg
mov
or
bound
pop
mov
push
pop
sti
and
cli
push
cmpsl
imul
mov
rorl
push
sarb
xchg
xor
stos
insb
lret
popa
cwtd
mov
push
mov
pop
out
and
lods
in
pop
les
sahf
movsb
lds
mov
call
jmp
push
ja
stc
pop
adc
or
lret
jae
and
cmp
jbe
xor
mov
test
imul
mov
xchg
xchg
ret
shl
int
ljmp
cld
in
sahf
dec
rolb
inc
je
inc
aad
mov
sbb
stc
icebp
fwait
sbb
pop
iret
inc
pop
lret
sbb
fimull
ss
sti
pushf
cmp
scas
cltd
popa
and
fcomp
dec
mov
mov
pop
fldcw
pop
repz
cmc
lods
mov
mov
jp
clc
xchg
jb
mov
out
sbb
xchg
sahf
aad
sbbb
mov
mov
out
insl
cmp
adc
int3
add
rcr
or
aas
xchg
xchg
pop
mull
or
inc
mov
push
cmp
pop
cltd
adc
rolb
scas
enter
and
cli
fidivs
cmp
inc
mov
fmuls
in
js
rorl
dec
cli
jl
cld
push
mov
imul
inc
in
scas
pop
f2xm1
sbb
pop
test
fmuls
aaa
outsb
inc
or
ss
jno
sbb
out
sub
sub
jae
pusha
mov
mov
iret
rcl
or
psubw
push
mov
cltd
xor
hlt
jmp
xchg
dec
mov
lcall
scas
sar
mov
sarb
jns
sbb
xor
test
jp
inc
enter
subl
jl
in
xchg
hlt
jmp
pop
orb
jecxz
pop
notb
pop
xchg
inc
jl
inc
push
aam
rcll
xchg
cmc
out
stc
sbb
testl
out
add
jp
push
xchg
xchg
aad
gs
mov
jmp
jbe
pop
adc
xor
adc
mov
lcall
push
out
in
adc
dec
sub
lea
cmp
sahf
mov
jo
inc
ss
sub
das
sub
inc
cmpl
push
fsub
cmp
jecxz
dec
stos
jle
aas
loope
dec
jns
pop
mov
repnz
or
lret
faddl
dec
or
pop
xor
clc
aad
jmp
lahf
pop
fsubp
aaa
mov
lahf
mov
in
stc
dec
nop
fcmovnb
sub
adc
insb
add
pop
fstl
jg
push
pop
cli
jl
inc
inc
push
nop
ljmp
pop
xor
mov
jb
mov
lea
fiaddl
xchg
daa
mov
pop
das
out
and
xor
sub
in
in
or
gs
dec
jp
mov
jle
iret
dec
into
loope
loopne
inc
cmpsl
fcmove
pushf
add
push
fldcw
insb
lods
in
stos
mov
mov
or
leave
push
adc
shll
lds
std
aaa
addr16
mov
jecxz
jno
fdivrs
arpl
lods
lods
cmp
inc
ret
in
sbb
xchg
adc
cwtl
and
xchg
sbb
pop
jge
add
pop
movsb
iret
fsubrp
test
cmp
push
or
cmp
xor
imul
inc
dec
sbb
inc
lea
sub
mov
cltd
jg
call
test
insb
mov
and
and
xchg
jp
xor
addr16
push
jge
mov
or
pop
push
pop
pop
mov
and
rorl
and
pop
lret
and
xchg
jne
int
scas
lds
adc
jno
into
add
out
xchg
cmc
sbb
divb
inc
mov
rol
adc
cli
dec
inc
mov
push
enter
and
push
xchg
dec
or
cli
in
add
adcl
fbstp
inc
in
loopne
shll
sahf
dec
adc
or
sarb
fst
mov
bnd
pop
loope
cld
mov
mov
ss
or
das
and
mov
or
jg
into
cmpsl
das
mov
imul
lcall
mov
popf
js
cs
sub
mov
sub
scas
sub
adc
cltd
aad
cmpsb
cmp
cs
pop
into
mov
pop
in
sbb
test
scas
xchg
mov
xchg
xchg
cmpsb
mov
lret
sub
imul
jnp
dec
mov
cmp
and
mov
aas
pop
sbb
notl
pop
stos
or
cmc
fwait
inc
movsl
movsl
rcll
adc
lods
inc
hlt
adc
iret
pop
jmp
xor
ret
imul
hlt
add
fistps
neg
push
imul
mov
cmpsl
and
and
inc
xor
cmp
cli
mov
lods
fstps
xchg
xchg
inc
shlb
js
insb
dec
mov
rclb
xor
imul
das
inc
addr16
mov
lds
pusha
outsl
mov
xchg
mov
push
je
sti
stos
pop
xor
loop
sub
sysret
inc
stos
dec
movsb
fmulp
jge
mov
jp
push
sti
neg
push
pop
cmp
xchg
or
mov
cmp
testb
inc
and
fcmovu
rcr
jp
scas
cmp
movsl
mov
mov
mov
test
lcall
cld
std
add
mov
inc
enter
mov
jnp
xchg
ss
and
xchg
ljmp
into
bound
xchg
enter
ret
loop
jns
outsl
xor
mov
lret
lods
mov
cmp
dec
iret
mov
fadd
imul
add
add
adc
bound
pop
pusha
mov
jns
lods
mov
or
ja
fwait
sbb
dec
je
mov
pop
out
fcomps
and
mov
fisttpl
xchg
and
mov
pop
je
xor
test
fdivrl
pop
js
push
mov
ds
cli
into
pusha
out
imul
lret
vshufpd
jge
jb
out
dec
movb
pop
sahf
popf
movsb
inc
mov
jp
sub
push
xchg
mov
pop
bound
xchg
addr16
mov
js
inc
pop
int3
or
inc
fs
add
sub
dec
cmpsb
pop
outsb
xchg
dec
xor
call
les
mov
xor
cld
xor
jle
fldcw
jns
movsl
jbe
xor
adc
popf
adc
push
orl
jge
pop
out
mov
mov
cmc
pop
mov
mov
cmc
pop
lock
in
ja
sbb
in
mov
cmp
jl
or
roll
movsl
inc
inc
cmp
sub
popa
addb
mov
iret
jo
lret
jae
adc
push
cltd
add
jmp
in
mov
ljmp
in
gs
clc
bound
pop
push
pop
jmp
imul
jbe
fnstenv
aas
xchg
lcall
lcall
pop
jp
pop
push
sub
cmp
cwtl
orb
pop
add
ficoms
rorl
fstp
mov
xchg
mov
pop
pusha
jo
sub
addr16
flds
das
into
cmp
hlt
cmp
and
adc
or
mov
mov
pop
inc
mov
iret
bound
push
fs
mov
push
push
ljmp
sbb
icebp
ljmp
nop
in
int3
cmp
pusha
xor
rorl
or
or
into
rcrb
test
test
fnsave
inc
add
jae
adc
subl
and
out
test
cmc
jle
mov
mov
repz
mov
js
adc
sbb
or
insb
cmp
jnp
sti
mov
xchg
xor
test
dec
lds
or
xchg
rcrl
and
lret
in
add
jg
mov
pop
popa
int3
mov
and
push
pop
dec
imull
sub
push
imul
mov
dec
mul
mov
mov
and
add
xor
or
scas
movaps
std
arpl
pushf
mov
aad
xor
leave
and
xor
repz
leave
in
test
dec
jmp
adc
sbbb
dec
and
jae
jns
divl
inc
dec
jne
jae
sbb
and
stc
xor
mov
inc
push
in
mov
movsb
pop
ds
xor
pusha
mov
cltd
lods
xor
pop
ret
jae
arpl
gs
sub
cmp
test
inc
jns
sahf
sbb
xchg
subl
cmp
hlt
and
rolb
aam
mov
cmp
mov
mov
or
add
mov
ror
ss
negl
jg
ret
push
ret
adc
push
xor
out
jb
js
or
push
dec
out
pop
sbbb
dec
inc
fs
xor
xchg
push
mov
popl
jbe
je
popa
jge
in
fistpl
aad
addr16
pusha
frstor
ja
pop
jg
test
and
testb
mov
xchg
add
mov
sub
adc
fstl
in
data16
jmp
inc
les
mov
push
imul
xchg
rcr
clc
ret
inc
pop
jne
cs
cmp
repz
jmp
add
jmp
and
jne
cmc
movsl
outsl
imul
lret
lret
jbe
aad
mov
mov
stos
add
icebp
dec
fstpl
repnz
test
ds
dec
icebp
mov
stos
sub
sbb
xor
in
mov
and
orb
je
lods
scas
inc
je
shlb
hlt
mov
mov
mov
inc
dec
inc
jl
gs
mov
adc
adcl
rcrb
inc
dec
enter
imul
cmc
mov
in
lods
mov
jg
cmp
sbb
rorl
xor
jnp
int3
jp
adc
arpl
mov
xchg
outsb
mov
lcall
mov
adc
or
test
es
sub
dec
je
enter
fisttpl
aas
scas
xchg
lahf
stos
adc
lds
or
jge
adc
or
addr16
jne
jg
and
or
in
and
sub
xor
xchg
mov
movsb
dec
jle
int3
or
iret
in
sub
jle
pusha
js
inc
or
leave
rcr
cmpsl
and
aam
js
sbb
inc
ja
aam
fdivp
jle
ljmp
mov
lahf
scas
aam
cli
cmpsb
and
insl
push
test
cs
mov
fiaddl
adc
icebp
shrl
xor
mov
loopne
mov
es
push
push
jo
fistps
mov
daa
mov
repnz
test
mov
xchg
jns
icebp
xchg
stos
loopne
aam
jmp
xchg
add
xor
jl
jbe
outsb
fsubrl
call
and
stc
sub
outsl
and
es
and
mov
mov
jnp
cld
fistps
mov
cmp
dec
cld
int
pushf
xor
popf
out
push
adc
mov
and
rclb
cmc
jle
faddp
out
lods
mov
rolb
fisttpll
jae
mov
sub
in
lds
repz
xchg
inc
add
cmp
mov
je
pop
push
dec
xchg
jb
xchg
push
sbb
xchg
and
mov
stos
mov
sbb
pop
dec
fnstsw
cmpsb
xchg
dec
js
mov
nop
mov
xchg
test
stos
ror
lods
scas
mov
cmpsl
aas
fnstcw
addr16
out
popf
push
mov
lods
jns
inc
pop
faddl
or
push
out
push
add
cmp
cmp
push
mov
sbb
xchg
mov
and
jne
pop
jl
and
aam
cmpsl
cmp
jecxz
jmp
gs
sahf
stos
pushf
pop
inc
sarb
lods
jno
sbb
add
sub
mov
out
add
std
jns
mov
sub
fsubrl
mov
rorl
pop
mov
fmuls
inc
loope
mov
lea
out
test
pop
fwait
orl
pop
out
das
out
lods
ret
pop
fsubs
pushf
inc
mov
sbb
xchg
jbe
hlt
jns
jae
mov
sbb
add
das
mov
roll
adc
jb
adc
iret
in
out
adc
mov
sub
shl
add
jbe
inc
ffreep
inc
sub
enter
xchg
and
filds
push
dec
inc
mov
add
rcrb
stos
mov
fldt
fcoml
loope
add
sub
cmpsl
and
mov
sub
sub
data16
hlt
xchg
jl
sti
and
xor
push
insl
add
std
pop
inc
fwait
test
xchg
dec
ljmp
movsb
int3
je
cmpsl
and
call
jecxz
dec
pop
das
insb
pop
push
push
sub
add
or
or
gs
mov
outsl
push
xlat
mov
mov
andl
orb
push
jmp
inc
mov
and
push
push
cmp
lds
rclb
mov
jb
lret
in
outsb
mov
and
nop
adc
in
cmpsb
stc
inc
push
fnsave
dec
sub
bound
and
in
imul
cmc
pop
test
inc
dec
int
add
arpl
popa
lea
pop
sarb
dec
xchg
mov
xchg
mov
jnp
cmpb
out
push
inc
mov
adc
imul
cld
push
repnz
sbb
cltd
mov
pop
testb
pop
dec
fs
in
scas
cmc
add
mov
fistpll
cltd
and
setno
std
jmp
aas
jno
pop
gs
pop
out
mov
lcall
push
and
notl
xchg
stos
movsb
pop
shll
scas
int3
call
daa
adc
pop
sub
sti
xchg
inc
mov
daa
add
hlt
fidivrs
jl
inc
mov
aaa
hlt
out
mov
lea
push
pop
outsl
mov
cmp
mov
jno
and
insb
int3
adc
mov
pop
dec
push
out
arpl
enter
aaa
push
popa
mov
lock
or
ret
flds
loope
xchg
xchg
jl
xchg
lods
add
add
loope
scas
mov
movsl
mov
push
movsb
lcall
std
loopne
jg
jmp
mov
daa
out
jg
xchg
adc
push
cmc
stos
shlb
movswl
cmp
loopne
cmp
mov
or
push
cmpsl
insl
out
push
or
fistps
push
daa
dec
divb
mov
cmp
sub
mov
cmc
aas
je
sbbl
mov
dec
lret
sahf
xchg
pusha
sub
sti
js
push
inc
test
cmp
or
sbb
fisubrs
mov
das
jg
adc
imul
loop
xlat
and
lret
fisttpll
sarb
mov
outsb
xchg
repz
inc
insl
xor
or
mov
je
mov
fidivs
test
xor
xchg
add
push
sub
dec
scas
gs
sbb
add
xor
stc
das
inc
ds
lret
enter
data16
sub
sbb
xchg
and
push
aam
add
test
loopne
cmp
jecxz
mov
lahf
ds
pop
rorb
sub
sbb
or
cld
jl
dec
fcompl
mov
sbb
in
jl
insb
int3
pop
fmull
mov
or
cld
jl
dec
fcompl
mov
sbb
in
jl
in
fmull
mov
or
jl
in
inc
fcompl
sub
and
mov
jl
insb
inc
pop
hlt
dec
lods
cmp
sub
sbb
or
cld
addl
pop
mov
repz
jae
lock
loopne
sarb
shl
jle
or
sbb
scas
push
mov
and
adc
add
lock
loopne
sarb
rorb
mov
mov
pusha
iret
push
mov
and
adc
add
lock
loopne
sarb
rorb
mov
mov
inc
iret
and
and
jle
jae
sbbl
bound
jle
xchg
sbb
setae
cmp
jne
xor
mov
jg
dec
mov
and
sti
add
lahf
testl
jmp
mov
pop
in
and
aam
in
or
mov
into
in
clc
or
jo
push
and
mov
les
clc
rclb
mov
jle
sahf
pop
lahf
scas
aam
mov
sbb
add
test
mov
subb
cmpsb
cmp
outsb
cli
jle
out
jmp
scas
mov
and
add
divb
insl
movsb
sarb
xchg
cwtl
mov
xor
test
push
mov
adc
adc
sarb
rorb
mov
mov
pusha
scas
push
mov
and
adc
imul
jo
or
sbb
out
sub
shll
inc
subl
push
xchg
pop
test
jbe
sub
cmp
outsb
stc
push
in
cmp
sbb
add
and
mov
mov
test
mov
pop
mov
mov
pusha
scas
push
mov
and
adc
add
lock
loopne
sarb
rorb
mov
mov
pusha
scas
push
mov
and
adc
add
lock
cmp
pop
mov
cltd
cltd
sti
sub
out
mov
wbinvd
add
dec
cmpsb
pushf
jmp
and
icebp
cmpsl
clc
sbb
arpl
es
aad
call
inc
ds
insb
cli
out
int
adc
add
and
xor
out
mov
sbb
daa
xchg
mov
test
adc
mov
push
ljmp
es
popf
pop
push
nop
dec
fsub
pop
lahf
jne
fisubl
mov
movsl
imul
popf
add
xor
mov
jmp
xchg
shrb
mov
cld
sarb
out
xor
jecxz
test
insl
orl
or
lods
push
cmp
mov
mov
add
pop
sarl
push
shlb
and
lahf
xor
shlb
mov
mov
pop
or
xchg
rclb
in
mov
lds
arpl
loope
and
jae
or
mov
push
mov
xor
js
xchg
pop
sub
pop
mov
dec
push
loopne
in
jne
lret
hlt
rcl
stos
jge
lock
dec
jg
sbb
out
sub
jp
mov
adc
mov
xchg
mov
ss
jno
ljmp
dec
and
sub
or
in
rcr
xor
fidivl
sub
popa
cmova
insb
cmp
xor
pusha
aam
jmp
icebp
decl
das
xchg
lea
loop
xchg
ret
aad
ficoml
leave
int3
jg
and
cmc
xchg
ljmp
push
cmc
outsb
scas
lods
jae
lods
stc
js
dec
push
mov
fsubs
fisttpll
jbe
mov
sbb
stc
jno
icebp
ja
lret
dec
cli
in
lock
in
jmp
xchg
stos
or
out
jmp
loopne
addr16
cli
mov
es
inc
or
mov
and
outsb
test
out
add
pop
mov
xchg
push
int
and
ret
add
int
and
dec
sbb
cmp
sbb
jp
test
hlt
and
jmp
dec
daa
in
enter
lret
test
insl
pop
inc
test
cmpl
inc
mov
xchg
xor
and
and
movsl
adc
movsl
pop
subb
ss
out
negl
imul
lret
mov
shlb
add
ljmp
or
pop
in
dec
roll
or
pop
mov
push
enter
loop
fstpt
jmp
imul
cmp
sub
inc
lods
idivl
movsb
push
add
imul
or
shlb
pushf
mov
mov
xor
cmp
pushf
dec
sbb
jno
mov
mov
inc
mov
pop
xchg
and
pop
and
in
push
shrb
repnz
push
lods
loopne
pop
adc
cmp
nop
sub
aas
addps
stc
subb
or
sbb
mov
lods
loope
push
les
loope
out
push
insl
xor
std
into
ret
pop
xchg
sub
jbe
cmpsb
jns
lret
popf
add
and
test
dec
xchg
dec
jns
sti
pusha
xchg
leave
cmp
lods
cmp
jb
arpl
push
das
and
add
cmp
insb
pop
xchg
shll
sbb
xor
lods
push
mov
dec
mov
jg
int
loopne
loopne
cmp
lds
jl
mov
cwtl
enter
dec
je
sahf
jnp
mov
incb
addl
loopne
rclb
aam
rcr
jne
subb
aas
lea
jbe
orl
inc
testl
leave
xchg
bound
cmpb
shrb
inc
shrl
repnz
aad
xchg
adcb
mov
mov
jb
cmp
addr16
cmp
add
fisttpll
dec
imul
and
fisttpll
or
push
push
or
sub
pop
jno
xor
dec
fistps
jp
push
mov
imul
or
adc
inc
jl
ja
sbb
jmp
sub
dec
fisubrl
popa
add
dec
push
in
dec
jl
adc
leave
pushf
inc
por
fildll
dec
xlat
out
orl
fldt
push
xchg
mov
sub
xchg
cmp
cmpsb
and
push
jle
or
jle
shll
cmp
aas
dec
call
jnp
fwait
out
or
xor
shlb
mov
decl
shll
jecxz
fadds
test
test
test
sub
cmp
aam
push
xchg
stc
mov
pop
fmul
mov
push
mov
xchg
jbe
inc
mov
mov
dec
idivl
inc
aas
push
jnp
movsl
cltd
cmc
subl
imul
aas
push
jne
mov
std
mov
pop
add
ljmp
jl
cli
sbb
ss
cmc
and
inc
mov
pop
mov
mov
rolb
jle
jge
gs
test
push
cli
push
movsb
sbb
mov
jl,pn
dec
sbbl
or
cmp
pop
pop
test
jg
test
push
mov
lea
add
lret
dec
rcl
xchg
call
push
xchg
inc
jge
js
sub
pop
fdivr
pop
and
cmp
ljmp
inc
push
into
adc
cmp
jecxz
test
std
mov
xchg
inc
loope
insl
sub
addb
stos
popf
sahf
dec
cmovo
jo
fnstcw
int
pop
inc
push
ficoml
frstor
xchg
faddp
test
aad
xor
push
push
push
shlb
push
sub
and
je
push
nop
popf
sbb
stos
lcall
or
jns
ss
into
add
xchg
xor
aam
ljmp
aam
sub
cmpsl
inc
js
sub
and
addr16
les
jae
and
mov
popf
lods
and
arpl
int3
lcall
pop
and
shrl
lods
fistps
mov
dec
aam
dec
fwait
lcall
jecxz
loopne
pop
movsb
sti
nop
lods
fcmovb
int
fdivrs
out
xchg
sub
aaa
ds
pop
cmpb
push
fwait
or
mov
aad
loopne
lcall
or
loopne
scas
dec
add
les
test
fsubs
roll
movsb
adc
sbbl
and
and
xchg
sti
jbe
adc
lods
jne
sub
js
shl
in
cmp
fimuls
sarl
adc
xchg
sbb
push
xor
or
mov
pop
aas
enter
fsubrl
pop
fmul
hlt
jg
cmpsb
mov
orb
pop
sbb
in
cltd
adc
test
lock
pushf
mov
mov
addr16
pusha
mov
pop
xchg
mov
inc
xlat
and
lret
rsqrtps
inc
shrl
dec
mov
push
std
loope
imul
pop
push
lock
push
out
sbb
push
js
xchg
jecxz
out
add
and
cld
lret
fimuls
out
add
sub
inc
movsb
stos
rorb
out
pushf
pop
hlt
jno
loope
and
popa
mov
outsb
scas
mov
add
and
and
jge
adc
mov
out
adc
push
in
pop
jle
loopne
jge
pusha
mov
pop
repz
add
xor
scas
fadds
movsl
call
rcrl
or
mov
test
orb
cmp
mov
lret
vpsubusw
filds
xchg
cli
and
xchg
mov
mov
push
push
adc
mov
xor
bnd
jae
imul
push
fcoml
xchg
fstl
pop
push
inc
enter
out
pop
sbb
mov
mov
call
test
xor
jle
shll
xchg
out
aad
outsl
add
icebp
fmuls
cmp
cmc
fdivs
sub
call
loopne
nop
adc
jno
or
rcrl
dec
pop
jmp
mov
and
in
sub
out
enter
pop
movsb
pop
test
mov
xor
mov
xor
adc
jb
dec
jb
mull
test
push
dec
add
js
stos
scas
gs
jp
ror
sub
shlb
sti
sub
andl
arpl
mov
xor
out
outsl
xor
std
cmpsl
and
push
pop
push
fs
inc
fnstenv
popf
jae
xchg
std
mov
into
daa
jp
jge
cmp
ss
test
movl
mov
xor
jns
adc
push
jle
xorb
mov
xchg
in
push
dec
lods
dec
cmp
xchg
fbstp
out
pop
shl
sub
or
mov
les
pop
out
cltd
xor
pop
out
sbbb
xlat
ja
ja
jmp
xor
or
xor
add
sub
xchg
outsl
jp
mov
rcl
mov
sub
addr16
sbbl
xorl
cmp
add
jo
scas
push
and
or
aad
pushf
xchg
and
aam
push
jp
jecxz
push
pop
in
ret
pop
subb
outsl
cmp
fucomi
leave
sub
cmp
sub
popf
xor
lds
jno
jnp
dec
sbb
iret
or
ss
insb
sbb
mov
mov
movsb
push
out
jmp
ror
mov
mov
insl
repz
hlt
cmc
cmp
or
fistpl
xchg
mov
add
cld
fstpt
test
shlb
div
mov
xchg
repnz
out
mov
daa
mov
and
aas
iret
shlb
mov
jle
daa
enter
sbb
stos
fisttps
sub
push
movsb
int
nop
ja
fimuls
inc
loope
xor
test
jmp
adc
leave
xchg
or
shrb
pop
xor
popa
sub
mov
fwait
and
stos
cwtl
repnz
add
dec
add
jmp
in
mov
addr16
push
aad
jbe
dec
call
jl
push
adcb
dec
mov
pushf
inc
pop
movsl
aas
jnp
pushf
test
xchg
test
rcr
ja
mov
mov
xchg
pop
ja
pop
es
pop
sub
add
add
cmpsl
inc
xchg
xor
xchg
cmp
mov
push
pop
pop
fs
or
lods
add
jo
lea
add
xchg
pop
cmp
pop
divb
test
mov
mov
cmpsb
addr16
ret
pop
mov
fucomip
cs
dec
ss
jl
rol
ret
pop
lahf
lods
orb
mov
js
data16
scas
cmp
and
cld
enter
mov
lret
xchg
mov
fwait
and
decl
push
int
xchg
nop
mov
mov
shrb
and
xor
out
out
mov
cmp
fisttps
mov
loop
xorb
mov
outsb
mov
add
fldpi
aam
mov
cs
xchg
in
or
ja
cmp
lods
in
fsubp
std
mov
adc
jns
xchg
jnp
sbbb
sbb
xor
mov
add
div
fldt
adc
ss
je
fdivs
dec
jne
popf
lds
les
mov
test
lods
jo
out
std
ret
mov
rcr
add
jno
xchg
inc
movsb
sub
sahf
pop
sub
imul
icebp
rcrb
in
repnz
push
add
xor
rorl
cmp
xor
nop
xchg
std
pop
or
push
frstor
in
jae
inc
cmp
sub
push
adc
out
jae
push
adc
and
jb
add
fs
imul
int3
aas
pop
inc
lahf
cmpsb
pop
test
mov
mov
repz
mov
or
ss
dec
mov
cmp
push
shlb
rcrl
lcall
scas
push
dec
cmp
cmp
imul
popf
sbb
aam
jns
cld
lea
push
mov
insb
lock
iret
lcall
fcompl
leave
mov
shll
mov
icebp
cmp
fld
scas
mov
cmp
adcb
mov
sti
into
test
adc
cld
sbb
mov
data16
js
xor
bound
push
sub
mov
pop
sub
fsubs
mov
test
add
mov
and
ljmp
insl
repz
inc
popf
jmp
mov
jg
push
jle
or
movsb
mov
xor
dec
add
push
or
roll
adc
insb
mov
mov
mov
push
testl
mov
and
scas
mov
mov
jo
dec
dec
in
mov
push
lds
aad
sbbl
mov
out
out
sub
jmp
mov
cmp
fwait
insb
scas
jne
shlb
in
imul
shll
push
or
pushl
mov
add
insb
mov
fistl
mov
out
outsb
gs
pop
jl
jle
or
enter
scas
pop
repz
xchg
xor
mul
mov
jl
add
mov
fwait
and
inc
push
xchg
and
mov
fdivr
test
push
xorb
testb
stos
ret
lret
shr
cwtl
icebp
adc
xchg
test
push
lock
sbb
addl
sbb
setne
mov
push
cs
xadd
mov
push
jg
xor
jmp
adc
ds
cmpsl
sbb
mov
pop
push
pop
sbb
inc
and
push
stos
inc
dec
insb
rol
cmp
dec
push
cmpb
cmp
adc
fadd
xchg
dec
sub
les
into
les
and
jle
adc
sub
into
nop
leave
fdivr
sub
dec
pop
mov
movsb
dec
popa
pusha
test
aas
ret
mov
push
rclb
xchg
inc
jbe
sub
push
popa
pop
movsb
and
movsl
int
mov
rcll
jecxz
cs
jbe
cmc
pop
mov
xor
js
push
es
fwait
pusha
xchg
fists
stc
mov
pop
addr16
insb
pop
pop
lcall
sub
imul
ret
insl
enter
jmp
push
inc
sub
jno
lahf
adc
cltd
in
adc
mov
pop
faddl
jae
push
cmp
lds
adc
mov
inc
dec
fnstenv
push
adc
mov
rcrb
dec
movsb
xchg
aaa
dec
test
push
push
pop
outsl
add
ret
dec
xor
pop
stos
dec
mov
shlb
mov
mov
and
pusha
rcll
xor
sarb
outsl
xchg
cmpsl
rorb
loop
cld
rcrb
bound
dec
shlb
xor
sbb
fndisi(8087
nop
mov
lret
inc
or
mov
into
push
aad
jo
add
gs
dec
or
or
mov
test
mov
je
mov
pop
std
repz
out
lds
and
leave
cmc
dec
xor
aas
dec
fs
mov
sub
cmp
xlat
clc
test
or
xor
jecxz
sbb
fistpl
push
push
dec
xchg
ret
fists
cmp
andb
rcrb
aas
out
in
fidivl
cmp
sub
insb
jmp
jl
push
sbb
dec
push
scas
rclb
roll
int
mov
xor
enter
and
or
les
cmp
mov
push
mov
xchg
mov
xor
sbb
sub
nop
in
pop
fwait
mov
cmpsb
inc
xor
fdivr
aas
ds
sbb
mov
popa
sbb
mov
lret
adc
jae
js
je
shrl
lret
inc
sbb
sub
out
ljmp
shll
or
adc
arpl
lahf
fs
push
push
pop
hlt
mov
prefetchwt1
lea
das
xchg
int3
or
mov
push
pop
jae
pop
popa
and
test
cmp
mov
push
out
add
addl
mov
mov
scas
icebp
cmp
stos
push
fstps
mov
inc
pop
xchg
add
mov
imul
and
lea
cmp
mov
rcll
lcall
bound
es
enter
cmpsl
mov
sbb
xor
add
inc
mov
call
ljmp
inc
add
pop
insl
pop
lcall
roll
fdivl
test
sbb
adc
and
jb
xor
adc
mov
repnz
or
jae
xchg
push
and
mov
int3
cmp
aas
xchg
xor
icebp
lods
sahf
add
cmc
mov
mov
jne
scas
sub
sub
cld
xor
sahf
cs
sahf
ret
jecxz
jecxz
adc
inc
clc
pushf
mov
add
xchg
cmp
mov
scas
jle
mov
xor
mov
loop
cmpsl
xchg
out
xor
pop
and
xchg
roll
cmp
sbb
cmp
ret
xchg
popf
dec
mov
hlt
mov
add
rol
das
mov
fcmovb
aaa
loopne
pop
mov
insl
inc
cwtl
enter
and
xor
sub
jne
and
and
mov
xchg
sub
inc
mov
es
pop
pushf
out
and
xchg
pop
and
hlt
cmp
pushfw
push
into
aas
inc
dec
insb
and
insl
jecxz
das
adcb
addr16
scas
inc
ret
ss
mov
lea
push
sbb
mov
mov
sub
sbb
fidivrs
les
mov
and
adc
cld
in
pop
jp
mov
mov
loop
dec
nop
mov
in
iret
mov
adc
sub
call
sahf
or
push
add
roll
push
call
jb
add
sub
bound
fistps
call
sbb
clc
jg
in
pushl
popf
arpl
xchg
cmp
xor
cmpsb
mov
xor
jno
push
push
test
ret
outsl
in
lret
fstl
aas
popf
cwtl
push
cmpsb
xlat
push
mov
mov
mov
jo
push
cmpsb
pop
lods
adc
andb
shr
fs
loope
mov
lret
or
iret
mov
cmp
adc
lea
icebp
dec
ficompl
ficomps
mov
outsb
mov
ret
loope
int
xlat
sahf
repz
mov
push
dec
sarl
lret
out
cltd
andb
insb
imul
sbb
xor
inc
aad
add
push
imul
mov
push
roll
call
sub
xchg
aas
ret
jg
lret
add
mov
xor
imul
pop
das
outsb
jo
adc
sub
cmpsb
adc
punpckhwd
mov
cmp
sbb
and
sub
arpl
push
cmp
xor
cs
sub
lods
mov
inc
daa
xchg
pusha
outsl
and
ret
fcomps
test
push
or
mov
xchg
pop
xchg
add
imul
add
inc
mov
push
push
push
loope
lahf
inc
std
fisubrl
in
fsubr
and
and
jo
push
pop
jl
mov
into
pop
xchg
mov
push
xorb
cltd
dec
adc
jecxz
das
rcll
adc
dec
add
ds
and
lea
stos
jbe
push
or
xchg
xor
add
push
xchg
popf
push
xor
aas
call
test
adc
fisubs
popf
lret
push
or
imul
adc
negb
gs
mov
stos
cs
adc
nop
pop
pop
stos
aad
out
inc
xchg
cli
shrb
mov
rclb
lea
in
shrl
cwtl
orl
mov
test
adc
dec
sbb
test
push
xchg
and
leave
divb
mov
jns
push
test
push
bound
fstp
test
lret
and
mov
pop
notb
or
pusha
call
mov
stos
inc
cld
push
sub
sub
outsb
lods
pop
ret
incl
mov
movl
jo
jbe
aam
xor
push
inc
negb
mov
or
mov
outsb
or
sbb
aam
dec
ret
inc
or
rcr
in
mov
insb
mov
mov
movsb
mov
add
jp
add
hlt
mov
into
stos
int
add
or
dec
loope
inc
mov
mov
sbb
push
mov
stos
push
daa
adcl
dec
mov
mov
mov
pusha
scas
push
mov
and
adc
add
lock
loopne
sarb
rorb
mov
mov
pusha
scas
push
mov
and
adc
add
lock
loopne
sarb
rorb
mov
mov
pusha
scas
push
mov
and
adc
add
lock
loopne
sarb
rorb
mov
mov
lret
mov
fists
out
add
mov
aam
les
xchg
pushf
lret
les
inc
cmovbe
outsb
and
add
add
hlt
scas
in
aam
mov
movsb
ficoms
fs
je
inc
mov
adc
add
in
scas
in
int3
mov
lods
out
mov
ds
or
inc
jle
add
inc
and
hlt
lret
mov
gs
or
inc
pop
jmp
out
xchg
push
iret
adc
fildll
sbb
call
and
cmp
aas
out
pop
and
xor
hlt
stos
mov
inc
icebp
inc
xorl
cmpsb
arpl
loop
movsb
push
loopne
push
push
call
adc
ljmp
hlt
aam
hlt
fsts
jnp
and
fwait
loopne
fs
fstpl
dec
add
cmpsl
xchg
out
pop
pop
les
fs
adc
sub
adc
sti
inc
sti
push
add
aam
mov
imul
push
jcxz,pn
sbb
into
adc
hlt
scas
repz
les
movsb
fimuls
jl,pn
dec
push
pop
jle
outsb
xor
dec
pusha
call
out
loop
lret
int3
jmp
push
add
jg
outsb
ja
adc
imul
movsb
loop
inc
stos
xchg
cmpsb
lock
call
sbb
push
pop
jg
add
js
popa
loop
mov
out
movsb
ficoms
fs
push
push
inc
jle
outsb
and
adc
add
hlt
scas
in
aam
mov
movsb
ficoms
fs
push
push
inc
jle
outsb
and
adc
add
hlt
mov
cmc
mov
shll
pop
nop
aaa
dec
cli
dec
pop
or
push
sub
inc
movsb
xchg
arpl
out
pop
fcmove
imul
lds
cmp
and
dec
xchg
or
inc
push
sahf
shlb
repnz
shrl
pop
in
ret
push
jno
scas
jne
in
inc
mov
xchg
inc
mov
scas
mov
rorl
rorl
adc
jl
inc
outsb
cli
movsb
inc
adc
fwait
je
in
aaa
mov
out
lret
fistps
cmp
leave
clc
mov
and
icebp
lahf
adc
jno
faddl
sbb
mov
ljmp
add
dec
ret
mov
test
lods
call
mov
dec
and
fidivl
testb
imul
and
mov
mov
outsl
xchg
mov
sbb
fisubrl
fdivs
cmp
sbb
push
jle
sbb
sub
lret
ja
mov
push
out
push
ret
or
inc
mov
adc
or
jmp
inc
xchg
or
inc
cli
add
adc
addr16
lret
jbe
aaa
out
insb
cwtl
adc
lea
pop
jae
in
mov
scas
addb
sub
mov
pop
insb
jne
lret
das
in
inc
ja
add
cmpsb
adc
xor
fstpt
stc
dec
inc
push
int3
imul
popf
push
mov
dec
nop
add
xchg
pop
dec
inc
cmp
mov
push
clc
arpl
xchg
lea
sub
cmpl
mov
iret
imul
mov
ja
cmpsl
mov
mov
sub
xchg
in
ret
pop
and
aad
sub
xor
rclb
or
leave
dec
push
inc
fmull
add
inc
rorb
loopne
and
in
fstpt
cmp
jns
mov
stos
jmp
push
mov
hlt
cwtl
xchg
and
xchg
push
xchg
out
inc
popf
sti
pop
lds
jp
lods
add
fdivrl
jmp
mov
outsb
scas
lcall
jns
cmpsl
les
pusha
aad
inc
xor
cmpsl
adc
jbe
sub
popf
in
test
mov
push
int
in
in
xchg
inc
push
aaa
pop
pop
adc
mov
enter
lret
xor
adc
pop
repz
les
int
push
adc
inc
lret
les
xchg
sub
lcall
adcb
nop
add
sub
cltd
add
sbb
daa
push
xchg
jb
push
or
xchg
das
xchg
imul
popa
jns
xchg
shlb
enter
sbbl
call
in
ja
mov
push
scas
std
mov
push
mov
in
sub
xchg
add
adc
pop
add
cs
div
sub
shll
mov
jp
xchg
imul
mov
mov
mov
test
lds
mov
xor
rclb
mov
js
outsl
mov
jecxz
sub
inc
jne
xchg
movsl
insl
mov
lret
and
out
push
bound
cmpsb
ljmp
stos
push
mov
mov
mov
popl
aad
xchg
je
arpl
lods
outsb
aaa
out
outsl
jmp
cmp
mov
push
pop
or
das
or
enter
pop
aad
rolb
jbe
mov
mov
or
ljmp
lret
daa
je
xor
mov
sbb
xchg
add
xor
push
pop
and
sub
lret
roll
mov
pop
imul
dec
je
pop
cmp
push
mov
jge
xchg
inc
lds
dec
xor
lcall
loope
icebp
mov
jns
pop
mov
push
cs
cwtl
push
dec
jl
cmp
jbe
push
xor
std
fwait
movsb
pop
or
cmpsl
push
xlat
xchg
inc
test
adc
repnz
cmpsb
xor
hlt
mov
ja
mov
and
push
scas
ret
fadds
xlat
sbb
pop
inc
bound
jmp
xor
xchg
test
xor
jae
popa
dec
lock
cmp
into
pop
stos
jo
enter
arpl
add
jae
push
movsl
iret
mov
mov
dec
adc
dec
rcr
mov
ret
or
stos
adc
or
nop
lret
cmp
popf
xor
mov
cmpsb
mov
lds
loope
mov
mov
fists
xor
mov
std
leave
mov
mov
fimull
push
outsl
mov
ja
in
mov
pusha
andl
push
ja
xchg
fmull
mov
inc
pusha
sbb
in
stos
mov
fcomps
sub
mov
mov
xor
dec
sub
into
dec
cmc
jecxz
movsl
mov
xchg
aad
push
or
inc
push
ret
xchg
rcl
std
jbe
das
je
xchg
push
lds
push
mov
jnp
inc
in
jp
adc
push
loop
jge
sbb
pop
and
icebp
imul
push
dec
mov
dec
outsl
cmp
push
mov
pusha
movsl
pop
mov
push
lock
sbb
dec
xor
inc
jmp
lock
movsl
ret
repnz
and
adc
adc
frstor
push
xchg
sub
sbb
and
ljmp
int
dec
mov
data16
pop
lea
mov
push
xor
adc
bound
xor
mov
and
clc
mov
xor
outsl
mov
inc
adc
jecxz
mov
pop
mov
pop
cmp
push
inc
pop
rorb
jne
push
lahf
fnsave
aaa
push
inc
mov
and
scas
js
loop
jne
lds
mov
and
pushf
mov
xor
aas
xchg
push
orl
sub
inc
inc
dec
inc
inc
dec
in
sbb
mov
jmp
out
fstpt
adc
shll
dec
cltd
cmpsl
xor
xor
adc
rcrl
pop
call
pop
add
adc
inc
mov
add
push
out
sbb
mov
bound
jmp
jo
clc
fsts
aaa
adc
les
push
sub
inc
out
jns
loop
cmpsl
jne
adc
mov
sub
cwtl
mov
test
dec
dec
xor
xor
fucom
push
xchg
inc
js
adc
das
icebp
jne
cmp
scas
xchg
add
hlt
push
inc
das
lcall
shl
adc
shlb
mov
aas
or
hlt
or
loope
cmp
xor
inc
mov
xchg
sub
mov
sbb
sbb
cmpsb
add
int3
cwtl
xor
insb
mov
hlt
pop
adc
mov
adcb
sbb
cli
das
cmp
xchg
xor
fidivrs
xchg
push
js
outsl
cmp
fistps
dec
shl
dec
sbb
pop
adcl
int
dec
mov
jecxz
push
outsl
add
out
add
shlb
dec
ljmp
pop
out
push
pop
push
out
rorb
fdivs
xchg
aas
xor
mov
sbb
sub
daa
push
mov
or
fsubrl
mov
xor
adc
jne
pop
pop
lret
aam
push
mov
jmp
shll
aam
jmp
jns
movsl
aam
filds
mov
es
aad
push
mov
pop
xchg
add
and
mov
mov
sbb
sub
mov
insl
imul
icebp
mov
enter
sbb
mov
xchg
icebp
jns
pop
add
mov
adc
iret
inc
and
cmc
stos
xchg
loop
aaa
cmc
stos
mov
cld
cmc
xchg
mov
lret
xchg
pop
adc
jle
mov
mov
enter
fdivrs
push
lods
xor
xlat
pop
jb
or
mov
push
sbb
idiv
mov
cmp
shll
push
mov
fdiv
xlat
sbb
cwtl
hlt
adc
in
mov
out
mov
fmull
mov
push
push
push
sbb
and
adc
pop
dec
inc
jle
outsl
pop
mov
cmp
loop
mov
enter
add
jnp
xchg
mov
mov
cli
mov
mov
mov
adc
mov
or
inc
fildll
mov
mov
out
lcall
xchg
inc
xor
adc
lcall
jbe
in
cmc
mov
ljmp
test
mov
mov
andl
aas
inc
or
sub
sbb
jbe
or
out
jl
jp
mov
mov
ljmp
icebp
movl
cwtl
mov
sbb
adc
jnp
xchg
mov
dec
mov
out
add
dec
outsb
in
fisttps
mov
jl
and
inc
pop
out
nop
pop
aaa
aaa
sbb
enter
sbb
and
ror
pop
into
jp
jecxz
pusha
and
ret
inc
arpl
mov
cltd
xchg
sub
hlt
pusha
cmc
lret
rcrb
nop
mov
in
sti
mov
in
push
add
or
lret
adc
pop
mov
mov
addr16
cmp
adc
push
mov
jle
and
hlt
mov
test
push
jp
sahf
jae
adc
divl
repz
mov
push
jb
dec
jle
cli
cmpsl
push
dec
xchg
mov
jnp
lods
out
mov
insb
addl
stc
pop
jno
or
stos
insl
arpl
xchg
mov
hlt
les
mov
cld
rorb
pop
xor
xchg
mov
repz
lcall
add
push
outsb
int
and
adc
test
cmc
sbb
adc
sti
or
jb
popa
nop
inc
sub
nop
mov
cli
fisubrs
gs
pushf
test
inc
xor
lcall
scas
cmp
push
push
mov
insl
cmp
or
pusha
das
push
mov
xor
dec
es
xchg
mov
ds
cmpsl
stc
mov
ljmp
push
test
cmpsl
add
inc
pop
lods
mov
pop
lcall
fdivs
mov
mov
imul
xor
in
push
push
insb
fisubl
jp
dec
mov
inc
je
and
sbb
mov
mov
bound
ss
sbb
cmp
sbb
pushf
jb
js
decl
or
testl
pop
xchg
push
add
pop
ljmp
fbstp
outsl
cmp
cld
cmc
popf
ja
mov
or
loopne
stos
pop
shlb
push
lea
lcall
push
mov
loope
cwtl
repz
jl
mov
and
mov
leave
in
and
add
fcmovbe
and
call
jge
stc
adc
cmp
cmp
mov
roll
es
call
push
test
in
push
cld
rorl
movsl
cmp
jmp
jmp
out
data16
dec
xchg
loop
xchg
pop
fadds
bound
jo
jbe
jp
leave
and
out
mov
xor
xorb
cwtl
out
test
sub
ret
loope
add
adc
movsl
aaa
adc
lea
adc
movsb
pop
popf
jge
stos
dec
push
fwait
cmc
mov
sub
ljmp
or
out
fldl
dec
sbb
pop
push
aam
lahf
clc
in
out
cmpsl
pop
fs
call
insb
dec
sub
ljmp
rcrl
push
inc
testb
shr
shr
xor
push
mov
ljmp
push
std
popa
mov
pop
fadd
and
ficoms
push
sbb
push
mov
mov
out
mov
add
fldt
mov
pop
ret
and
loop
mov
out
aam
les
ljmp
inc
xor
dec
clc
hlt
jge
pop
les
pop
leave
test
test
roll
leave
data16
ljmp
addr16
adcl
add
addl
sbb
aam
push
aad
push
enter
jns
call
pop
not
stos
shlb
cmpsl
jne
dec
lcall
iret
stos
testb
push
inc
adc
gs
fsubrs
fcmovnu
dec
adc
mov
in
inc
mov
sub
outsl
pop
sbb
jecxz
addr16
popf
jge
jns
add
in
or
mov
das
push
das
inc
mull
push
xchg
adc
iret
iret
sbb
fnstsw
lret
loopne
ds
xor
aam
cmpsb
aaa
add
dec
std
or
stos
and
repnz
stc
pop
xor
cmp
mov
push
mov
push
or
out
es
rorb
mov
xor
scas
cli
loope
cld
fdivp
jnp
push
mov
push
jne
inc
push
sbb
sahf
mov
gs
add
inc
xchg
inc
jb
inc
dec
icebp
les
cmpl
aam
das
fsubr
add
xchg
dec
mov
popf
jmp
and
push
mov
arpl
fidivl
push
cmp
int3
popl
push
xchg
inc
push
xchg
ret
iret
add
cmc
cltd
inc
test
cmp
jl
lret
popw
imul
rcrb
addb
xchg
hlt
loope
fcoms
cld
out
xor
add
lods
dec
icebp
addr16
shrb
lahf
out
fistpll
push
mov
sub
mov
notb
cli
jecxz
push
shl
xor
imul
dec
mov
in
pop
sahf
addr16
fbstp
ja
xchg
daa
out
je
inc
es
mov
jecxz
sbb
aas
jmp
xchg
sub
push
fsubrs
cmp
fidivl
sbb
movsl
inc
cmp
lcall
or
xlat
xchg
subl
je
jle
fbld
and
outsb
aas
out
push
jnp
mov
clc
xlat
push
add
outsb
push
cmc
push
jmp
sub
xor
pop
popf
cmc
lea
xor
dec
sub
or
cmp
fdivs
dec
loopne
cltd
fists
test
and
lret
mov
pushf
iret
and
sub
push
push
fcoml
cld
andb
iret
cmc
xor
popa
push
lahf
xor
movsl
cmp
icebp
ds
idiv
cmpsb
rcr
mov
cmp
and
loope
roll
daa
inc
xor
push
flds
jnp
push
xor
dec
cmp
mov
ss
and
or
rcrl
sbb
xchg
not
js
xchg
stos
mov
and
mov
jne
push
mov
add
cltd
push
iret
sbb
fiaddl
mov
push
xor
pop
incb
fucom
mov
leave
dec
popf
add
clc
test
push
aaa
cwtl
in
std
or
mov
es
pop
pop
mov
mov
push
dec
adc
int
leave
jmp
idivb
call
adc
negb
fwait
pop
rcrb
jbe
dec
and
dec
dec
push
idiv
push
lea
xchg
or
les
test
mov
jno
loopne
hlt
lahf
jmp
or
xchg
jecxz
cli
out
push
jl
xor
enter
fstl
push
mov
call
inc
push
jb
movsl
pusha
dec
xchg
scas
icebp
adc
out
inc
sbb
shrl
xor
insb
ljmp
push
ret
jae
std
loope
repnz
sahf
push
sbb
mov
jbe
push
icebp
mov
pop
xchg
rcrl
mov
sbb
or
dec
ret
insl
aaa
fnsave
push
cmpsb
mov
rcrl
shrl
xchg
mov
enter
and
push
stos
mov
push
lock
outsl
test
insl
cmpsl
xchg
pop
mov
dec
jecxz
imul
and
cmp
jno
cmpxchg
inc
inc
jl
arpl
adc
add
xchg
xchg
lret
and
ret
loope
ror
push
clc
sub
xchg
pop
pusha
jge
shrl
out
fdivs
fnsetpm(287
fwait
cmp
mov
test
fs
outsb
sbb
pop
dec
sub
jbe
jl
lret
push
aam
call
cld
mov
loop
or
lods
mov
hlt
rcr
add
lds
sbb
test
xchg
jno
fisubl
sbb
gs
dec
sbb
enter
into
push
enter
fwait
xor
lock
xor
mov
pop
jmp
das
mov
sub
sub
fidivl
sub
in
orb
lods
aad
aad
inc
mov
xchg
dec
sbb
mov
pushf
outsl
nop
push
xchg
xor
xchg
scas
jno
repnz
sub
and
sbb
ret
cmp
fs
arpl
sbb
push
data16
cmp
cmc
jbe
lods
fisubrs
adc
in
cmp
mov
push
xchg
cmp
arpl
mov
xchg
jl
mov
mov
enter
mov
lahf
int3
addr16
xor
jns
pop
xor
adc
sti
lret
ss
shll
pop
pop
mov
repz
mov
sarl
cmp
cltd
and
insb
pop
repz
popa
aas
mov
sub
mov
xor
popa
scas
test
xchg
mov
orl
sbb
xor
xor
stc
jae
sbb
fnstsw
and
lcall
sbb
movsb
test
mov
xor
lea
dec
in
aaa
and
jns
mull
pop
add
pop
cmpsb
stc
add
popf
rorl
rclb
jle
lret
mov
push
ret
lcall
inc
add
aam
jge
negb
cmp
xchg
jnp
push
jmp
inc
cmp
add
cmp
daa
mov
frstor
arpl
cmc
sub
pop
and
xchg
cmp
mov
dec
add
lds
std
add
in
sub
roll
rcrb
mov
fwait
mov
mov
test
sub
jns
mov
jno
fldl
insb
push
es
lret
jmp
movsb
stc
movsb
mov
mov
inc
and
jg
icebp
push
cmp
push
dec
adc
adc
icebp
dec
in
add
push
cmp
xchg
inc
pop
test
cwtl
xor
mov
dec
cmp
outsl
cmp
xchg
or
inc
int
cmp
and
mov
arpl
pop
sub
pop
lahf
sbb
out
clc
jbe
out
push
adc
pushf
and
aaa
or
call
xor
xchg
pop
jae
cltd
or
push
or
jecxz
sbb
xlat
jmp
add
dec
fwait
mov
add
scas
dec
jo
sub
xchg
add
add
out
lcall
add
enter
mov
push
ds
adcl
or
adc
jno
sub
push
and
mov
pop
lds
fcoml
pushl
aad
shrl
push
lock
or
dec
aad
imul
bound
jle
push
lea
rorl
mov
or
adc
lods
out
xlat
jo
ljmp
iret
sub
or
sub
cmpsb
into
ja
dec
cltd
dec
cmc
int3
and
fnstsw
mov
out
imul
and
jbe
or
enter
xor
mov
mov
inc
push
add
xor
add
movsb
hlt
sbbl
lods
mov
cmpl
push
inc
std
sbb
adc
jne
pop
and
cmp
int
push
fldl
inc
pop
and
iret
dec
inc
or
mov
push
cmp
test
sbb
cld
test
pop
cmp
nop
mov
bsr
mov
push
fmuls
into
aas
test
sub
mov
jnp
fidivrs
pop
je
push
sbb
lea
rcll
test
push
mov
push
shl
data16
bound
outsl
ss
je,pt
arpl
fmull
adc
jmp
add
sub
sub
inc
sahf
movsl
adc
jl
dec
push
xchg
in
sub
out
scas
xchg
sarb
ljmp
sub
ret
and
rorl
adc
jae
mov
or
fnstenv
add
mov
and
fwait
jecxz
xchg
jnp
dec
loop
aam
inc
lods
mov
loop
incl
or
pop
bound
pop
mov
subb
sarl
pop
xchg
fistpll
jg
fwait
xchg
push
das
std
pop
adc
push
pop
scas
mov
and
movsb
or
inc
lcall
mov
out
and
int
jne
mov
int3
fiadds
cmpsb
repz
jge
out
jle
adc
mov
xor
or
lret
xchg
movsb
mov
das
faddl
out
xor
cmc
pop
lods
ljmp
je
in
xchg
xlat
dec
xchg
xchg
ds
negb
jno
jge
in
cmp
movsb
ficoms
fs
push
push
inc
jle
outsb
and
adc
add
hlt
scas
in
aam
mov
movsb
ficoms
fs
push
push
inc
jle
outsb
and
adc
add
hlt
cs
aam
les
out
movsb
ficoms
fs
push
push
inc
jle
outsb
and
adc
scas
in
aam
mov
movsb
ficoms
into
mov
push
xor
mov
ds
movsb
stos
mov
test
in
fcomps
and
add
adc
fs
jbe
push
mov
movsl
movsb
push
mov
test
gs
hlt
mov
xor
xor
add
sbb
fs
inc
test
movsl
mov
fisttpll
aam
cmp
stos
insb
xchg
fs
sbb
add
test
loop
mov
hlt
mov
iret
jg
aaa
dec
movsl
insb
imul
and
das
sub
into
adc
stc
inc
jne
addr16
xchg
clc
popf
ljmp
mov
sub
dec
inc
ja
rorb
inc
jo
dec
xchg
adc
jae
lret
inc
cmp
cltd
push
inc
jne
mov
xchg
movsb
push
dec
gs
sbb
aad
scas
sub
sbb
pop
push
div
inc
cmp
sbb
in
inc
mov
repnz
xor
in
je
mov
xchg
push
clc
ret
imul
testb
aad
lods
jns
inc
std
and
and
lods
mov
icebp
xchg
outsl
repz
int
cmp
in
lods
jl
insb
jge
mov
lret
enter
loope
loopne
xchg
popa
xchg
push
pop
aam
and
pop
xorb
mov
icebp
ss
cmp
lret
adc
add
adc
inc
mov
les
dec
addr16
xchg
add
push
andb
xor
xor
roll
add
and
hlt
add
and
xor
add
adc
fs
je
inc
mov
movsl
movsb
push
mov
test
gs
hlt
add
and
xor
add
adc
fs
je
inc
mov
movsl
movsb
push
fwait
xchg
cmp
out
mov
outsb
add
xchg
or
mull
xchg
or
cmp
mov
jle
sti
and
sub
xchg
clc
jnp
and
jg
add
lds
mov
scas
ffreep
pop
bound
xor
test
shrb
testb
xchg
sub
loopne
sub
mov
mov
pop
mov
test
fwait
push
inc
adc
stos
mov
mov
in
rorl
pusha
sub
cld
fidivl
sub
or
cmpb
mov
test
push
shrb
popf
xor
jb
ss
loop
rorl
mov
inc
call
xor
fmuls
mov
lock
xchg
in
lret
sub
jmp
dec
mov
idivl
push
fstpl
cmpsb
aaa
sub
add
in
fimuls
mov
aam
inc
mov
add
sub
out
mov
mov
mov
aam
leave
fldt
or
test
mul
push
mov
xor
repnz
loop
shlb
jmp
and
xchg
sbb
dec
xor
sbb
scas
aaa
jg
les
sbb
lcall
cmp
cmc
fistpll
mov
pop
insb
mov
dec
sarl
cli
push
mov
fistl
dec
jne
mov
jns
and
xchg
lea
xchg
lods
popa
les
inc
roll
fsubs
mov
icebp
call
mov
in
in
fwait
call
rclb
test
fisubl
mov
pusha
mov
mov
add
inc
imul
or
test
in
mov
push
leave
adc
roll
xor
push
lret
test
cli
xchg
pop
repnz
imul
jp
inc
out
in
add
sbb
cmpl
repz
sbb
push
push
mov
jne
loopne
mov
xchg
js
das
addr16
jmp
dec
jp
test
dec
push
and
and
es
int3
out
outsl
movsb
fwait
add
mov
iret
arpl
mov
es
inc
leave
pop
mov
adc
mov
into
mov
in
ja
stc
fstpt
inc
in
cmp
pop
fwait
add
mov
sbb
xchg
addl
pushf
add
cmpsl
sub
adc
jge
or
ret
mov
lods
inc
std
or
xchg
push
dec
sbb
cmp
and
aad
and
sub
dec
jg
jmp
enter
mov
inc
mov
popf
jle
loopne
sub
insl
pusha
and
inc
or
jg
fldenv
pop
mov
std
and
push
movsl
in
pop
push
sbb
popa
xor
popf
aad
enter
lcall
mov
mov
mov
ss
mov
sub
push
xor
fistpll
sbb
stos
stc
mul
mov
xchg
pop
stos
iret
mov
fistpl
cmp
ja
mov
and
out
mov
inc
lds
mov
aam
cmp
mov
in
scas
test
shlb
add
cmc
std
add
into
jb
insb
mov
push
mov
nop
call
mov
std
hlt
jno
adc
test
dec
pop
jle
dec
xor
loop
ficoms
popf
fiaddl
sbb
mov
and
aad
adc
pop
aam
hlt
jecxz
xchg
arpl
out
inc
pop
scas
jo
lds
xchg
or
jp
cmp
orb
cmpsb
push
and
mov
leave
inc
mov
add
nop
mov
int3
cmp
xor
xchg
mov
adc
push
es
ljmp
mov
mov
insb
sbbb
dec
jb
and
or
popa
pop
push
out
xchg
fwait
xchg
sbb
lea
mov
jp
mov
cmp
shrb
sub
js
jg
loop
jnp
pop
loopne
xchg
clc
mov
fwait
xchg
mov
push
out
add
cli
xor
faddl
out
in
cmp
mov
push
add
mov
xchg
sbb
scas
enter
sbb
xchg
in
leave
and
adc
inc
out
mov
mov
add
fbld
sub
insl
add
out
aaa
rorb
xchg
les
lcall
test
jle
add
pushf
outsb
call
cli
push
clc
fnstsw
xchg
mov
rcll
mov
inc
mov
add
push
adcl
fmuls
inc
or
cmp
push
push
ss
ds
ret
mov
fadds
lret
daa
nop
and
or
je
mov
insl
cmc
sahf
test
sbbb
int3
inc
pop
push
xchg
cmp
and
leave
jb
xchg
imul
es
pop
xchg
rcll
repz
push
push
adc
inc
fs
jge
jnp
cmp
aad
sub
testl
lock
movsb
rorl
add
xor
push
inc
xor
negb
xor
xchg
loopne
dec
xor
and
ss
pop
aaa
dec
push
pusha
mov
jl
ja
xor
xchg
ljmp
call
add
sbb
mov
xchg
xorb
js
pop
rorl
jp
inc
mov
pop
sub
test
dec
cmp
pop
sti
rcrl
fs
add
sbb
popf
iret
ss
cmp
xchg
std
movsl
popf
xchg
pushf
or
add
arpl
cmpl
pusha
mov
inc
sbb
push
into
sub
hlt
cmp
or
push
arpl
xchg
push
cmpsb
dec
xor
xor
jg
std
in
inc
push
adc
push
outsb
lods
scas
sub
shrb
lock
cmc
mov
cmp
cmp
stc
jl
xchg
push
adc
mov
popf
ljmp
jb
fcmove
mov
mov
mov
outsb
sbb
stc
das
push
in
stos
sbb
adc
repz
sub
lds
mov
nop
push
pusha
filds
enter
inc
aaa
icebp
dec
pop
in
loope
mov
aam
jne
sub
bound
pop
insl
or
adc
sub
ret
shrl
lret
js
mov
or
adcb
cmpsb
int3
mov
mov
stc
nop
push
rorl
push
sbb
cmp
in
aam
push
xor
hlt
push
insb
scas
test
lret
dec
gs
dec
dec
int
inc
sub
push
jne
repz
pop
jle
stos
aam
inc
push
enter
pop
xchg
popa
inc
fmull
sub
jl
xlat
fildll
cltd
cmp
xchg
jl
orb
pop
pop
xchg
and
push
jne
pop
mov
push
xchg
sub
push
lods
jecxz
mov
fsubl
xlat
stc
jae
subl
sti
stc
pop
in
ja
es
mov
daa
add
outsl
add
lds
or
call
pop
push
adc
xchg
out
pop
pusha
stos
cmp
dec
loopne
jb
and
xor
addr16
jns
mov
jecxz
jne
jecxz
mov
push
in
push
incl
sbb
pop
in
lea
cmp
pop
stos
scas
lods
mov
sbb
sahf
movsb
in
mov
das
lods
popf
add
adc
add
js
sahf
push
mov
pushf
aad
sti
add
sbb
cli
sub
lret
sbb
xchg
adc
jmp
mov
mov
cwtl
fsubl
cs
xchg
scas
sub
nop
stos
mov
pop
cmpb
pop
outsb
negl
and
repz
adc
popf
lea
xorl
out
mov
loopne
mov
insb
mov
mov
jnp
les
cld
rolb
xlat
add
out
insl
adc
ret
cmp
or
mov
and
sbbl
jl
dec
mov
das
in
mov
popa
mov
mov
sub
repz
adc
mov
cmp
test
fs
in
cli
test
mov
xor
xchg
sbb
sub
js
test
adc
fsubl
ja
scas
mov
outsl
push
imul
push
or
dec
add
sbb
sbb
sub
push
out
inc
cmc
pop
mov
scas
sub
ret
shl
cmp
lret
adc
test
push
push
mov
adc
push
cld
out
in
push
lds
jge
gs
arpl
or
pop
aas
cltd
imul
imul
ds
xor
das
pop
das
sub
xor
lods
fistps
out
insl
sahf
and
push
sbb
pop
dec
xchg
out
dec
jmp
mov
imul
sbb
pop
into
inc
pop
into
dec
inc
cs
adc
jbe
sub
pop
aas
sar
dec
into
dec
pop
lods
inc
adcl
scas
inc
imul
fdivl
test
ss
in
test
pop
and
mov
and
jo
orl
ret
adc
xor
mov
sbb
mov
xchg
popf
negb
add
jns
dec
sbbb
mov
add
sti
out
pop
mov
pushf
mov
jne
fistpll
je
or
rcll
sub
push
sti
aaa
or
notb
xchg
jo
rorl
mov
mov
testl
dec
push
push
mov
jle
out
popa
sbb
movsb
or
imul
push
xchg
xchg
mov
mov
fnsave
dec
insb
pop
mov
xchg
mov
fsubrl
mov
movsb
jno
push
dec
mov
push
or
mov
pop
aaa
jae
pusha
dec
call
rcrl
xor
jmp
pop
je
divps
cltd
in
xchg
ret
es
mov
xchg
mov
xchg
lea
nop
xchg
pop
add
pusha
jno
popf
push
xchg
mov
loopne
iret
xor
ja
cmpsb
cmp
jb
jp
push
xor
mov
aas
outsl
mov
iret
repz
cs
and
and
es
or
mov
repnz
es
in
nop
add
orb
adc
in
arpl
mov
insb
add
ljmp
ljmp
into
leave
cwtl
inc
mov
inc
mov
repz
dec
mov
fdivs
or
arpl
mov
scas
fstpl
push
aam
jae
mov
adc
aad
and
pop
jae
loope
rep
lcall
xchg
subl
imul
cmc
mov
popf
sub
in
sbb
mov
repz
push
pop
xchg
cmpsb
sbb
aas
or
push
pop
mov
adc
rcl
std
in
xchg
jle
adc
mov
clc
fs
loopne
dec
mov
psubd
pop
fistps
adc
mov
cmpb
nop
inc
sbb
dec
and
dec
dec
push
add
push
fadds
sub
jmp
mov
das
sbb
loope
ret
mov
cwtl
pop
fimuls
hlt
pop
xchg
pop
js
adc
jle
dec
aas
insb
jg
mov
sub
add
jns
jmp
mov
out
or
lahf
fldcw
sub
in
je
sbb
jg
leave
jnp
and
mov
mov
les
pushl
add
push
xchg
push
dec
lcall
xorb
or
push
jmp
cmp
or
add
adc
mov
cli
aas
mov
sub
xchg
lret
pop
adc
pushf
mov
pop
hlt
mov
mov
fmuls
push
xor
pop
lds
jo
inc
mov
add
mov
jecxz
sub
mov
xchg
jg
pop
insb
pop
mov
test
rcrb
jle
inc
pop
pop
lock
aad
fwait
sbb
xchg
mov
stc
loopne
mov
in
adc
mov
scas
mov
mov
cld
jmp
rclb
cmp
dec
adc
pop
xchg
dec
fxtract
cmp
ds
lods
adc
push
cmc
sub
imul
out
dec
inc
les
stos
jl
cmpsl
dec
cwtl
sub
data16
jle
mov
inc
insl
xchg
fbstp
mov
frstor
loope
jns
dec
push
mov
fstl
hlt
adc
mov
cmp
in
push
push
mov
testb
in
mov
test
loope
push
aad
testl
cmc
jmp
mov
fs
lret
jno
sub
inc
enter
sbb
inc
inc
xor
dec
imul
js
pop
push
jno
adc
inc
xor
sbb
mov
les
sahf
push
aad
inc
sub
mov
mov
push
in
out
pop
sbb
loope
xchg
mov
std
jb
lea
mov
inc
inc
ficoml
and
sbb
cmp
stos
rcrb
inc
movsb
das
repz
sbb
cmp
sbb
xchg
cmp
sbb
fldl
jae
sub
leave
xchg
mov
adc
pop
nop
pop
rolb
dec
xchg
cmpsl
jbe
push
jmp
cld
push
rorl
mov
in
push
adc
ror
jp
jbe
les
adc
fsubr
fildll
insb
and
push
push
scas
fwait
clc
lea
ds
sub
fsts
dec
test
test
xlat
push
sub
inc
jo
shr
cmp
cltd
xorl
cmp
fstpt
or
std
jbe
flds
ret
je
into
std
pop
aad
sbb
xor
nop
push
add
and
test
xchg
xchg
adc
jg
fs
sbb
mov
sub
push
inc
push
sub
or
hlt
loop
pusha
sbb
ljmp
inc
test
push
inc
sbb
lret
mov
sbb
scas
add
fimuls
inc
stos
mov
dec
cmp
arpl
cltd
jnp
push
mov
insl
jle
mov
filds
inc
xchg
addl
aaa
push
mov
adc
cmp
inc
mov
ror
sarb
add
fdivl
and
cmpsb
insl
cmc
sahf
mov
or
jmp
das
jecxz
popf
jmp
dec
jnp
hlt
jnp
ret
jbe
fwait
into
outsb
shll
push
paddsw
xor
add
add
push
jmp
int
stos
cmp
lret
adc
inc
xchg
mov
mov
sbb
dec
cwtl
sub
outsb
jg
je
xchg
testb
jp
outsb
cltd
push
add
testl
ret
cs
rorl
popf
clc
addl
fsubrs
and
std
push
sub
sahf
int
pop
mov
out
clc
pop
sub
lfs
push
mov
jb
ja
xlat
stc
es
sahf
or
loope
add
jmp
insl
andl
sub
mov
in
fcmovnb
xchg
jecxz
movsl
add
push
mov
mov
inc
dec
xchg
sub
xchg
daa
push
pop
cmp
arpl
pop
shl
inc
mov
xorb
clc
aad
add
fidivrs
jmp
sbb
sub
add
xor
dec
sti
int
repz
ljmp
sbb
sbb
push
fsubrs
xlat
inc
sbb
in
jl
push
jo
sti
js
repz
add
pop
inc
scas
sub
or
pusha
stos
shl
ja
fstp
or
fwait
arpl
and
out
loope
popf
dec
imull
mov
jns
jmp
dec
lea
sub
pop
pop
fidivrs
mov
mov
outsb
adc
dec
cmpsb
pop
pushf
dec
push
mov
lret
dec
mov
jg
sub
mov
sbb
enter
xor
or
sbb
fnstsw
imul
or
mov
mov
jae
jecxz
dec
in
mov
sbb
pop
sbb
or
in
rorl
into
adc
jne
loop
loopne
sbb
int
mov
mov
jne
sbb
int
sub
fnstcw
dec
jnp
bnd
fstp
out
push
sbb
adc
pop
mov
sbb
jno
aad
stc
aad
xor
push
or
in
push
cmp
pop
push
xchg
mov
add
xchg
adc
cmp
xor
dec
adc
mov
sbb
icebp
pop
inc
int3
and
xchg
movsb
gs
push
jmp
xlat
and
ret
dec
xor
sub
lahf
daa
mov
pop
addr16
cwtl
shr
pop
push
dec
subb
xor
scas
int
xchg
pop
pop
mov
sbb
adc
push
inc
into
jp
push
lret
pop
sbb
or
xchg
inc
lods
add
dec
dec
adc
rclb
out
iret
lret
sub
xor
sub
test
bound
cmp
call
outsl
lods
dec
das
pop
mov
xchg
out
inc
roll
xor
jnp
int
jg
sbb
pushf
xchg
xor
add
add
sbb
mov
cld
sbb
popa
in
push
sarb
insl
arpl
push
xchg
jbe
sub
sub
xchg
fildl
sbb
and
dec
into
lods
inc
popf
sahf
cmp
mov
sti
pop
mov
out
mov
pop
cli
cmpsb
push
inc
mov
loopne
test
sub
pop
adc
mov
inc
std
in
imul
push
scas
sub
push
pop
and
sub
mov
inc
push
sbb
pop
filds
pushf
jne
mov
setne
or
and
sbb
add
rcr
in
sbb
popl
xor
lcall
mov
sub
stc
jp
outsb
repz
jae
das
sbbb
fsts
push
ret
inc
or
mov
dec
xchg
push
bnd
and
dec
mov
inc
or
jnp
mov
ror
popf
je
add
push
xlat
jne
cmpsl
addr16
mov
int
clc
push
mov
adc
loope
mov
in
adc
aad
inc
les
push
fdivr
push
insb
sbb
add
aam
mov
pop
aas
adc
inc
mov
mov
idivl
dec
jl
jl
lock
or
inc
std
fadds
push
test
stos
sub
mov
pop
out
adc
test
sbb
stos
in
push
or
nop
mov
push
cmp
lods
xlat
xorl
in
js
sub
insb
lock
pushl
out
xchg
imul
or
sti
pushf
jge
lods
aad
scas
data16
stc
js
or
adc
cli
cmpsb
fidivl
push
inc
and
popf
pop
jle
mov
gs
xchg
in
imul
popa
push
repz
movsb
xchg
mov
inc
dec
fsubr
push
dec
adc
je
insl
and
mov
inc
jae
adc
and
imul
push
mov
std
push
sub
sbb
xor
xchg
or
add
push
xor
or
dec
dec
js
or
xor
mov
enter
mov
adc
lea
test
xchg
hlt
push
sub
lret
sub
test
xlat
mov
aaa
out
mov
stos
mov
jae
add
push
hlt
sbb
or
cli
mov
imul
push
cwtl
push
mov
stc
shr
adc
arpl
in
inc
fidivrl
or
jecxz
lahf
popa
fs
push
ret
insb
lods
cmp
adc
fildll
test
daa
mov
xor
inc
enter
xchg
push
push
dec
mov
adc
hlt
lret
jbe
faddl
into
out
negb
je
add
jns
jl
push
jne
fisubrs
ret
ds
or
out
enter
inc
pop
mov
outsl
adc
add
inc
jecxz
push
pop
aaa
mov
lea
cwtl
mov
pmulhuw
icebp
mov
mov
enter
cmp
loope
fcoml
imul
inc
pushf
int3
dec
jae
jecxz
inc
push
fadd
fadd
pushl
push
pop
sti
outsb
test
mov
cwtl
mov
xchg
out
insl
out
add
jge
test
cmp
add
fadds
ljmp
mov
mov
inc
ret
sub
cmove
in
jno
mov
repnz
or
lret
add
lods
xchg
int3
push
into
push
add
cmp
aas
add
int
adc
gs
add
xlat
add
mov
in
xchg
or
lea
sbb
mov
cmc
andb
and
mov
inc
iret
or
movsl
popf
aad
sbb
icebp
popa
push
add
push
sbb
cltd
and
push
adc
pop
sbb
pop
jg
jmp
lods
pushf
sub
inc
sub
mov
in
in
scas
push
pop
cli
scas
and
test
mov
dec
arpl
loop
adcb
pop
hlt
sub
cmp
clc
aas
das
or
mov
into
sub
push
jecxz
cwtl
into
xchg
out
pop
cld
jmp
adc
or
test
mov
jge
scas
test
into
sarl
mov
aad
push
pop
outsb
je
mov
repnz
aas
mov
cmp
ret
and
rcll
pop
sbb
lret
nop
insb
imul
gs
hlt
add
and
xor
add
adc
fs
je
inc
mov
movsl
movsb
push
mov
test
gs
hlt
add
and
xor
add
adc
fs
je
inc
mov
movsl
movsb
push
mov
test
hlt
lods
les
xor
add
adc
fs
jne
inc
xchg
push
movsl
movsb
push
mov
test
fs
hlt
add
fldt
lret
outsl
scas
cmc
adc
adc
stos
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ret
rcl
ret
repz
xchg
jecxz
mov
arpl
bound
adc
add
and
and
rcl
ret
repz
xchg
xchg
andb
push
inc
pop
jae
bound
ja
add
xor
and
rcl
ret
repz
xchg
xchg
andb
push
popa
adc
pop
or
push
jo
insl
push
pop
push
mov
addl
adc
and
mov
jae
dec
shrb
push
cwtl
jle
test
cmp
mov
jge
out
divb
add
pop
and
pop
add
and
fstp
orb
popa
inc
push
cmp
je
popf
mov
mov
rcl
xchg
out
mov
xchg
addl
scas
inc
mov
std
add
and
and
cmpsl
cmp
cmp
cwtl
insl
mov
lods
scas
push
jae
cli
bound
pop
es
jmp
movsb
dec
adc
jnp
push
or
sub
push
cmp
pop
ss
aas
add
push
and
pop
fstpl
repnz
xchg
xchg
andb
push
inc
arpl
bound
adc
add
xor
fs
mov
mov
xlat
repnz
add
push
pop
add
pop
adc
jp
addr16
addr16
sarb
add
in
mov
aaa
push
xor
adc
inc
xchg
push
push
xor
xchg
mov
mov
xchg
andb
push
inc
arpl
bound
adc
add
xor
and
rcl
ret
repz
xchg
xchg
andb
push
inc
arpl
bound
adc
add
xor
and
shlb
pop
popf
xlat
and
sbb
lods
inc
sub
pop
icebp
add
mov
jno
imul
addr16
test
out
shrb
pusha
insl
ja
mov
push
and
cld
inc
fnstsw
cli
out
push
xchg
push
mov
shl
cmp
mov
nop
aaa
rorb
jmp
je
xchg
pop
jp
je
sub
in
add
fwait
cmp
mov
push
ret
or
pop
nop
push
mov
cli
daa
sub
xor
cmp
cmp
rcrb
or
push
data16
sbb
push
lret
dec
cmp
cwtl
cmp
xor
push
dec
ja
sub
int3
ror
add
sarl
enter
in
mov
aam
fiaddl
in
pop
sahf
ret
stos
test
sub
lcall
seto
mov
xor
mov
leave
push
jne
shrb
pop
out
cmpsb
lock
push
mov
mov
mov
dec
je
jmp
aaa
ss
dec
adc
sbb
mov
adc
dec
or
xchg
sub
test
jno
ficompl
sarb
ss
fidivrl
in
popf
stos
fisubrs
or
mov
sahf
jo
cmpsb
hlt
dec
push
cmp
xchg
in
out
mov
mov
add
xchg
lods
imul
pop
mov
stos
ficompl
cltd
or
divb
xchg
in
add
xchg
cld
push
addr16
test
aas
into
or
lds
inc
rolb
cli
test
or
cmp
cmp
or
cmc
test
mov
adc
sbb
mov
inc
and
jg
dec
clc
mov
adc
cmp
add
inc
push
mov
jmp
lret
mov
mov
mov
mov
mov
add
mov
stc
or
out
push
jl
sub
bound
jecxz
lcall
sbb
mov
imul
repz
mov
push
movsl
cs
les
xchg
add
inc
push
popa
inc
inc
ja
int3
mov
jae
cmp
mov
daa
repz
mov
mov
mov
xor
stos
lret
mov
ret
sbb
inc
outsw
mov
dec
jae
lahf
mov
push
sbbl
rolb
push
jecxz
sbb
or
inc
sbb
sbb
jecxz
ljmp
xchg
repnz
aam
int
mov
inc
jecxz
cli
or
xchg
sti
and
in
inc
mov
xor
xchg
divl
push
fs
cwtl
imul
mov
outsb
adc
sbb
cmc
nop
aad
idiv
jge
fsubrs
out
std
enter
dec
or
sbb
movl
sbb
or
in
xor
inc
cmp
cs
xchg
pop
popf
js
hlt
pop
adc
call
inc
hlt
inc
jge
push
dec
push
xchg
lret
pop
arpl
push
pop
pop
test
jne
out
mov
daa
into
push
pop
out
xlat
xor
push
sbb
mov
in
jle
mov
iret
mov
push
shlb
xchg
pop
dec
inc
dec
pop
subl
pop
popf
daa
in
cmp
mov
and
pop
add
jae
sbb
aas
xchg
xchg
loope
jns
outsl
mov
std
loop
in
sbb
fwait
orl
cltd
mov
jne
es
push
jmp
jp
pop
sti
std
hlt
xor
push
fs
ss
dec
std
xor
mov
jbe
or
in
call
inc
push
loop
jge
sub
aam
inc
cmp
xor
sub
jg
cld
jg
rcrl
jmp
and
testb
push
pop
js
lods
cmpsl
filds
pop
xor
leave
cs
mov
cmpsl
mov
inc
jecxz
in
je
xchg
in
adc
imul
addr16
shlb
cli
xor
mov
test
outsl
fcmove
inc
add
sub
adc
call
roll
pop
ret
push
xchg
dec
cmp
inc
das
sbbl
mov
inc
pop
cmc
mov
push
aam
add
mull
iret
xchg
mov
std
int
popa
fists
mov
or
xor
ret
mov
outsl
iret
pop
and
sub
fs
mov
loopne
ja
push
mov
lea
fwait
cmp
pop
push
insb
in
aad
and
mov
int
jno
sar
jo
xor
ret
xchg
stos
sbb
jmp
loopne
mov
xchg
cmp
popa
mov
xchg
inc
add
cmp
rol
cmp
and
mov
adc
inc
mov
cli
leave
ficoml
es
nopl
incl
pop
jno
or
outsl
xorb
cmpsb
xor
pop
int3
pushf
mov
repnz
test
xchg
lcall
xchg
je
and
jp
jae
lahf
pop
inc
movsl
leave
icebp
and
ljmp
adc
shrl
dec
jg
inc
test
movsb
xchg
adc
push
cmp
cmp
push
addr16
jbe
adc
subb
or
aam
push
mov
mov
roll
leave
cmp
mov
cwtl
stos
and
xchg
mov
iret
push
inc
pop
cld
pop
mov
in
and
je
popf
jmp
and
repnz
cmc
mov
jmp
in
stos
lret
mov
mov
inc
test
hlt
sbb
mov
sbb
pop
das
insb
mov
cltd
pop
mov
divb
mov
add
hlt
fldcw
lret
push
pop
push
test
dec
dec
mov
cltd
sahf
xor
mov
in
adc
xchg
cld
insl
testl
push
push
sbb
stos
adc
bnd
lods
hlt
xchg
popa
mov
mov
movsb
xorl
mov
jns
mov
xor
push
stc
out
sub
adc
and
jbe
dec
add
sbb
imul
cmp
cwtl
pop
insl
xor
push
pop
sub
pop
icebp
orb
or
inc
ljmp
movsb
mov
sub
mov
bound
mov
pop
mov
hlt
pop
mov
cmp
mov
adc
movsl
je
insb
out
and
dec
jnp
xchg
mov
clc
mov
inc
xor
ud2
ret
fsubl
test
adc
in
mov
sbb
loop
adc
test
xor
and
lahf
rorb
je
xlat
in
sti
lcall
jge
test
fs
out
fsubrs
sti
mov
mov
push
inc
gs
or
or
mov
lret
pusha
cmp
adc
cmp
loop
iret
mov
or
and
or
cli
push
inc
sub
or
out
jmp
lcall
fwait
shlb
fstpl
push
fbstp
cwtl
and
movsb
ret
bound
dec
daa
pop
xchg
incl
xchg
xor
sub
pop
out
cmp
jno
lods
and
aaa
scas
add
loope
lea
inc
add
movsb
push
xchg
dec
xor
inc
mov
mull
btc
hlt
add
sub
and
or
shll
in
push
mov
xor
movsl
shr
add
out
pusha
fdiv
adc
leave
les
cli
push
sbb
std
scas
insb
pop
sbbb
pop
pop
xor
jns
stos
mov
xor
mov
bound
daa
inc
in
mov
pop
fs
nop
fiaddl
and
aaa
insb
and
ret
mov
pop
out
scas
inc
sbb
push
call
pop
std
test
xor
sub
int
cld
nop
cld
in
sub
sub
testl
ret
cmp
clc
add
mov
in
mov
pop
pop
insl
stos
repnz
fistpll
fcmovne
sbb
pop
jg
mov
sbb
cmp
sbb
in
pushf
mov
xchg
pop
and
cltd
sub
cmpb
rcl
push
or
test
ret
mov
out
test
es
scas
jge
xchg
scas
pop
jp
mov
in
mov
or
lcall
xchg
dec
inc
incb
test
repz
movsl
dec
decb
inc
repz
dec
jp
fcomip
or
inc
lahf
mov
push
std
test
cmp
xlat
test
adc
jb
mov
fists
sub
jne
xlat
out
in
jnp
mov
mov
subb
mov
dec
push
dec
pmuludq
aas
cmp
cmp
push
and
inc
dec
inc
int3
jmp
ja
jp
xchg
mov
negb
repz
cwtl
push
addr16
jno
adc
dec
add
xchg
outsl
sub
xchg
sarb
test
pop
mov
add
out
sub
pusha
push
inc
imul
pop
jb
pop
pop
pop
bound
imul
shll
ja
popa
add
mov
fwait
lcall
dec
loop
fsubl
test
mov
or
jae
mov
xchg
push
push
dec
inc
xor
mov
push
popa
pop
pop
nop
sub
jnp
xor
pop
sbb
cmc
inc
cmp
stos
incb
jne
movsl
xchg
lret
lahf
mov
cmp
out
mov
dec
into
dec
xchg
pop
ret
cltd
into
ret
or
mov
xlat
cmp
scas
int3
xor
leave
mov
aad
stos
jae
inc
or
roll
jecxz
loop
push
push
mov
mov
fldcw
adc
inc
xor
pop
adc
push
mov
test
pushf
outsb
jg
fmulp
imul
mov
dec
loop
int
mov
fsubrs
test
inc
sbb
lock
and
loopne
pop
or
mov
outsl
jae
push
cmp
insl
cli
jno
pop
fs
fwait
push
add
pop
mov
mov
sbb
jg
iret
xchg
test
push
pop
idiv
xchg
cmp
std
mov
scas
sub
fidivs
sahf
inc
aas
sub
sub
jno
jmp
pop
jmp
cmp
mov
movsl
pop
mov
es
movsl
fidivl
mov
call
mov
lods
sbb
lcall
scas
data16
call
sbb
jle
mov
mov
clc
hlt
int3
je
gs
arpl
hlt
pop
sbb
adc
into
cmp
aad
xlat
sbb
pop
ret
subl
into
and
xchg
cmpl
xchg
and
mov
adc
xor
jb
lret
shrl
xor
adc
and
lds
jecxz
jl
outsl
or
cmp
add
popf
sub
jne
push
pop
xor
enter
mov
inc
call
xchg
cmp
in
out
aam
xchg
fists
pop
fisttps
jle
jbe
mov
cmp
xchg
mov
inc
or
sub
push
inc
inc
lret
xchg
loopne
push
cli
dec
jge
cmp
daa
xchg
mov
popf
shll
aam
push
mov
sub
inc
xor
fimuls
jns
int
mov
fs
sub
mov
sub
jne
adc
xor
test
sub
aam
std
or
pop
or
mov
stos
fstpl
push
mov
es
mov
arpl
push
xchg
mov
lock
sbb
ja
insb
push
or
cmpsb
cmp
les
or
jmpw
push
push
les
xor
in
in
shr
inc
cmp
out
je
cmp
pop
sub
lock
imul
mov
pushf
jl
jg
popf
inc
dec
adc
repz
add
add
cmp
repnz
ret
and
jp
ret
push
stc
bound
shll
scas
aam
pop
xchg
dec
in
mov
jge
pop
lahf
adcb
push
push
dec
test
sti
xchg
repz
ljmp
ret
ret
jns
mov
inc
xor
pop
pop
mov
sbb
push
lea
aad
iret
data16
gs
jl
add
xchg
icebp
pop
out
adc
mov
xor
clc
add
jno
adc
mov
sbb
stc
jmp
xchg
xchg
mov
andb
adc
in
pop
inc
add
clc
xchg
je
outsb
cmp
scas
push
pop
nop
jb
loop
pop
adc
sbb
cmp
dec
mov
addr16
lahf
fwait
sbb
out
xor
push
out
mov
or
jbe
out
enter
add
pop
xor
movsb
insl
inc
sbb
das
mov
adc
pop
xor
inc
pop
adc
cld
aas
dec
fisubrl
out
push
addr16
cmpsl
cld
cwtl
push
loop
xor
mov
lret
jnp
xchg
inc
test
das
push
pop
scas
push
test
loop
adc
xchg
push
shll
inc
orl
or
mov
push
lcall
iret
in
mov
lcall
mov
jb
and
fcomip
inc
mov
sbb
mov
mov
ret
hlt
dec
xchg
loope
xor
icebp
sbb
addl
mov
std
xchg
stc
mov
test
mov
movsb
das
insl
xchg
and
pop
jmp
js
xchg
lcall
insl
outsb
aas
push
mov
int
jns
pop
mov
aad
stos
popf
mov
jg
fildl
test
push
push
pop
es
loopne
push
pushf
pop
push
jl
stos
rorb
xor
push
inc
daa
jnp
xchg
adc
pop
xor
adc
test
pop
cmp
mov
inc
sub
pop
sbb
add
insl
xchg
incb
call
call
rolb
aaa
and
icebp
xor
cmp
pop
push
sbb
mov
push
jmp
sub
shlb
or
gs
int
fsubrl
fsts
adc
loope
out
stc
jno
sub
fnstcw
xor
inc
sub
xchg
cmpsb
popf
bound
cmp
adc
and
imull
loope,pt
decl
dec
outsl
dec
mov
in
push
ret
loop,pt
popf
dec
xchg
movsl
pop
mov
ret
test
aaa
add
jae
xchg
xor
push
mov
nop
xor
out
mov
fimuls
je
mov
lods
lret
adc
xchg
dec
ret
adc
rcll
fcompl
mov
psubsb
nopl
adc
dec
sub
mov
mov
cmp
mov
jp
adc
loop
xchg
clc
inc
mov
jg
push
in
test
pop
pop
testb
cmp
adcl
cmp
push
out
cli
jmp
ret
aas
sub
pop
daa
push
mov
or
mov
mov
pusha
inc
jmp
sbb
jo
repz
sbb
movsl
sub
mov
cltd
inc
and
push
stos
xor
mov
pushf
enter
cwtl
sbb
and
xor
ret
dec
xchg
cmpl
push
aaa
aad
lods
xlat
xor
stos
cmpsl
adc
aas
sahf
jae
rclb
outsb
shll
xchg
outsb
cmp
ljmp
loop
or
clc
sub
in
aas
fidivrl
dec
add
imul
cmpb
addr16
fimuls
dec
sub
aad
mov
incb
jno
and
xchg
and
dec
ds
mov
popf
faddp
das
scas
pop
and
sub
ret
ret
in
in
outsb
mov
pushf
insb
mov
dec
shl
ficoms
jno
repz
jecxz
mov
stos
dec
in
sahf
fcoml
add
loop
iret
cmpsl
iret
adc
test
insl
test
pop
adc
stos
sahf
outsl
and
add
push
ja
stos
xchg
xlat
xchg
scas
xchg
inc
xchg
aad
call
jb
push
mov
call
add
xor
jne
sbb
popf
xor
add
in
xor
ja
aad
inc
dec
jae
fmuls
mov
xor
dec
and
gs
ret
sbb
loop
sarb
xchg
xor
or
fwait
lcall
enter
jg
jp
out
inc
push
inc
push
addr16
mov
loope
sbb
cltd
bound
or
cvtdq2ps
cmp
pop
dec
cld
fsubrp
mov
repz
aad
jns
inc
bound
adc
push
stos
rol
fildl
pop
lret
out
sahf
push
mov
int3
je
pop
push
add
imul
and
loop
aam
shrb
pop
xchg
mov
nop
mov
sbb
push
inc
cltd
enter
xchg
xchg
addr16
sbb
testl
mov
fwait
cmp
andb
rclb
ds
fadd
insl
jae
mov
js
lret
stos
jle
fistpll
insl
and
dec
or
daa
mov
test
jne
or
cmp
xchg
dec
into
adc
movsl
mov
pop
mov
icebp
ret
adc
shll
in
dec
aas
aad
lock
aaa
aaa
into
inc
mov
imul
loope
mov
add
ret
in
push
sub
xchg
in
bound
das
push
int
test
pop
pusha
shlb
pcmpeqd
loope
inc
bound
jl
int3
mov
pop
sbb
and
pushf
bound
test
imul
mov
int3
mov
into
mov
dec
outsl
add
mov
jl
das
ffreep
fnstsw
andb
imul
repnz
sub
test
pop
in
flds
mov
mov
inc
aad
jne
in
mov
in
xor
mov
inc
push
sbbl
pop
aas
out
roll
xchg
fdivr
cmp
push
adc
aad
pop
lret
mov
call
jb
out
aad
mov
push
fcoml
inc
pop
cmp
hlt
imul
sub
cmpsl
mov
cmc
ret
jb
ljmp
arpl
cmp
mov
je
lods
in
push
jo
xchg
pop
adc
mov
pop
shl
jecxz
je
loop
insb
add
push
stos
mov
scas
or
or
push
shll
scas
inc
jno
std
xor
sbb
dec
push
and
inc
lea
sub
jge
test
sbb
roll
sar
xor
fcoms
ret
ds
mov
insl
xlat
ffree
in
test
arpl
in
or
in
pop
jle
jle
lods
pop
sbb
cmpsb
scas
mov
add
cld
les
adc
or
pop
pop
adc
das
shlb
cs
xchg
add
mov
adc
and
mov
mov
mov
stos
stos
fmull
or
std
xor
jno
add
mov
dec
push
and
stc
cmp
mov
call
xchg
stc
loope
jbe
sub
xchg
data16
in
cmpsb
dec
jnp
cltd
sbb
pusha
ret
hlt
or
pop
test
lods
fadd
mov
xchg
daa
xor
pop
popa
fldl
jbe
mov
sub
jo
dec
js
fucomi
rcll
mov
fsin
jae
push
es
mov
jecxz
push
ljmp
or
sbb
mov
jp
xor
subl
test
and
cmp
fadds
jmp
sbb
js
mov
cmpl
cmp
adc
jmp
inc
repz
dec
dec
int3
add
sub
aad
inc
xor
test
mov
dec
in
sub
inc
mov
jl
daa
movsb
and
aad
cmp
pop
pop
out
sti
push
push
lods
mov
cmpsb
out
rcrl
shrb
pop
imulb
daa
mov
inc
fsubrl
add
push
mov
dec
movsb
stos
push
dec
out
in
rol
xor
push
cmpsl
data16
xlat
nop
aaa
push
outsl
xor
adc
mov
aam
mov
test
loop
dec
mov
xor
je
andl
jne
pop
xchg
mov
dec
mov
sub
or
fiaddl
sbb
fbld
ds
cwtl
pop
shlb
and
insl
xchg
jg
imul
cwtl
or
jo
inc
les
cmp
push
movsb
sbb
shrl
inc
lods
int
popf
jne
sbb
jg
stos
lods
dec
or
pop
jno
mov
jne
dec
mov
imul
add
push
subl
lcall
or
mov
out
orl
sub
cmpsl
and
std
xor
jnp
shll
cld
enter
fsub
jnp
sahf
jno
inc
gs
sub
nop
xor
rcrb
cltd
push
sbb
and
push
mov
and
daa
pop
sbb
cmp
push
pop
lods
sub
popa
rcrl
mov
jo
jo
mov
jge
xor
mulb
jno
inc
adc
pushf
add
pop
je
lods
ja
stos
add
cld
push
test
call
lret
sbb
inc
fsts
fldcw
repnz
xchg
xchg
andb
push
inc
arpl
bound
adc
add
xor
and
rcl
ret
repz
xchg
xchg
andb
push
inc
arpl
bound
adc
add
xor
and
rcl
ret
repz
xchg
xchg
andb
push
inc
arpl
bound
adc
add
xor
and
rcl
ret
repz
xchg
xchg
andb
push
call
je
fwait
std
fmul
int3
fstpl
adc
push
xor
mov
dec
inc
jnp
add
xchg
jecxz
xchg
rol
mov
sub
push
jb
bound
push
xor
xor
popa
adc
mov
xchg
loop
shlb
rol
mov
sbb
jnp
dec
sub
sub
jns
data16
stos
lds
xchg
loopne
in
jno
adc
insl
aaa
pop
and
push
icebp
mov
jp
imul
jmp
jb
call
xchg
rcll
or
mov
cld
or
out
adc
push
mov
imul
mov
xchg
sbb
ss
shrl
popf
shrl
xor
adc
sbb
sub
andb
insl
sbb
js
inc
ss
xchg
push
jno
popa
push
push
outsb
sbb
imul
pop
loope
adc
outsb
stos
mov
xchg
lcall
add
icebp
test
adc
dec
es
push
xor
popa
adc
cwtl
repnz
mov
stos
leave
mov
jb
je
inc
aaa
push
daa
and
jle
addr16
popf
xchg
loop
fbld
test
xchg
out
add
adc
inc
and
sub
or
xchg
shlb
imulb
and
xor
cmp
push
and
jno
xor
mov
shll
addb
adc
push
xor
xor
popa
adc
xor
mov
shll
addb
shlb
aad
inc
outsb
mov
sub
pop
lret
jge
popa
popa
in
fistps
fcoms
iret
cmp
call
push
push
mov
imul
aad
cmp
imul
adc
lret
sbb
rol
pop
cmp
in
mov
insl
test
in
gs
mov
push
sub
xchg
dec
xchg
sti
leave
jge
aad
jb
and
cmp
mov
and
test
sub
jae
std
stos
es
lret
pop
mov
iret
ret
and
mov
mov
outsl
cs
test
mov
jb
les
stos
sbbb
dec
adc
inc
push
push
mov
movl
ss
mov
cmp
mov
aam
and
pop
faddl
hlt
ljmp
pop
add
sbb
scas
fldt
add
cli
xchg
mov
sti
pop
dec
mov
frstor
pusha
iret
xor
xor
jno
repnz
ud0
in
sahf
stos
cmc
dec
jnp
dec
orb
cmc
ja
inc
pop
jmp
lds
movsb
mov
das
pop
lret
and
push
leave
mov
adc
cmp
fiaddl
jo
mov
shlb
xor
mov
and
jb
cmc
mov
sub
or
xchg
dec
and
or
inc
xchg
inc
push
ja
test
out
jecxz
mov
sbb
cmp
mov
inc
test
pushf
lea
xchg
sbbl
mov
push
sub
mov
or
je
pop
dec
ss
push
xlat
or
inc
mov
outsb
mov
and
inc
sahf
lock
bound
mov
leave
add
dec
pop
xor
cmp
popf
mov
push
xchg
jp
mov
cld
push
inc
xchg
adc
jbe
xchg
lret
std
rol
fldl
rcrl
add
push
jg
repnz
pop
je
cmc
rclb
add
mov
push
sub
imul
cmp
pop
aaa
fidivrs
add
sbb
dec
inc
incl
add
movsl
xor
ss
out
pop
das
mov
cmc
bndstx
dec
insl
sbb
mov
test
xchg
mov
outsl
fsubl
add
hlt
sbbb
pushf
shlb
push
cltd
mov
nop
mov
pop
pop
add
das
inc
and
sub
aad
sub
jo
shll
sub
cmpsl
cmp
xadd
push
fisttpll
mov
jno
enter
rolb
mov
sbb
cwtl
mov
bound
xchg
sbb
sbb
sbb
rcrb
popf
stc
in
ja
nop
sahf
scas
push
mov
insl
and
fnstsw
xor
sbb
jnp
add
jnp
sbb
pop
mov
shlb
ja
add
dec
jne
ret
xchg
sub
in
adc
sti
fnstenv
gs
push
cmpsl
rol
inc
daa
fcomi
pop
inc
xor
mov
outsb
dec
and
pop
and
out
push
cwtl
into
mov
imul
push
fists
mov
mov
mov
int3
cwtl
rclb
inc
sub
iret
ds
jmp
inc
jmp
repnz
mov
and
mov
ror
jmp
add
shll
mov
xor
pop
jp
jne
insl
fwait
dec
into
dec
orb
lret
pop
xor
push
rcrb
pop
in
sbb
push
jo
jno
lahf
xor
jae
in
pop
aaa
fidivs
sbb
xchg
push
inc
inc
xlat
je
fwait
pop
adc
cld
pop
mov
rclb
imul
xor
in
and
jg
loopne
aaa
sarb
arpl
xor
mov
or
arpl
sub
xchg
pusha
push
fstl
xchg
fnstenv
cmc
add
mov
scas
es
mov
popf
pop
add
cmp
and
pusha
test
xor
test
mov
outsb
fwait
stos
js
orb
jnp
flds
es
pshuflw
scas
push
cmp
mov
outsl
xor
std
enter
cmp
cmpsl
sbb
dec
addr16
adc
loop
ret
and
test
je
bound
icebp
sub
xor
imul
adc
fmull
fdivs
xchg
rorb
jp
fistps
fisubrs
sahf
ds
aaa
mov
xor
movsl
push
push
js
stc
shl
cmp
fcompl
les
adc
out
adc
clc
fsts
icebp
pop
xchg
add
mov
repz
sti
out
add
push
cltd
or
mov
mov
pop
aad
fstpt
jmp
mov
imul
lret
xchg
cli
movsb
add
add
insb
inc
orb
and
lret
cmc
sahf
enter
mov
hlt
sub
inc
shlb
sub
push
movsb
xchg
mov
rcrl
sti
mov
inc
dec
bound
adc
out
stos
aad
shrl
int3
cmp
movsl
lods
fsubl
pop
and
in
in
xor
idivb
cmp
add
scas
mov
mov
mov
push
xlat
inc
jmp
fstpl
in
add
data16
and
or
mov
mov
pop
std
cltd
jmp
scas
dec
jmp
lods
xor
inc
rorl
sbb
xchg
xchg
xor
out
ret
cli
in
xchg
dec
jbe
dec
dec
cltd
loopne
je
sub
addr16
nop
insb
cltd
dec
scas
cmp
add
lds
mov
and
pop
or
dec
popf
dec
xchg
cs
pusha
add
stos
arpl
mov
sub
test
sub
ss
inc
popa
out
adc
xchg
daa
add
push
in
inc
aad
mov
inc
sbb
mov
pop
xchg
cmpsl
rclb
sbb
push
test
dec
push
jno
fnop
push
pop
outsl
xor
sub
out
out
mov
je
push
dec
cwtl
push
xchg
mov
dec
jnp
fs
xchg
test
or
pop
int3
roll
std
lods
xor
nop
daa
sub
push
xchg
push
arpl
into
sub
cmpsl
pop
fcmovnu
push
pushf
in
or
stos
lock
jl
sub
es
outsb
or
xor
in
test
xor
jne
jge
lea
nop
xor
inc
push
add
push
dec
xchg
or
into
enter
into
push
andl
fldl
subl
aam
in
inc
mov
adc
shrb
xor
dec
dec
sbb
xchg
xchg
jle
fmull
pop
xchg
cmpsb
xchg
out
jl
xlat
jb
add
clc
mov
stc
push
movsb
jl
cltd
fcmovnu
mov
sbbb
gs
cmp
in
fwait
xor
stos
inc
adc
mov
into
mov
jb
adc
out
cli
cmc
lcall
cs
mov
ss
gs
and
mov
and
out
popf
push
std
dec
adc
stc
in
lcall
cmpl
dec
pop
mov
cmp
ror
dec
sbbb
inc
movsl
adcl
pop
mov
jnp
cmp
xchg
jae
stos
sbb
in
cwtl
cs
jp
into
cmc
dec
loop
push
ljmp
dec
sbb
xchg
imul
adc
das
jge
dec
xchg
lret
and
jmp
and
lahf
mov
adc
and
aad
inc
lods
dec
pop
add
insb
and
xor
push
rcrl
push
or
jl
les
xchg
fisttpl
push
jno
fistl
fwait
jbe
les
xchg
in
cmp
xchg
rolb
ds
orb
es
mov
or
int
int3
negb
xor
movsb
out
push
ss
mov
xchg
pusha
lahf
aaa
sti
mov
xchg
cmc
es
adc
fisubrl
pop
lahf
xchg
mov
add
lock
lcall
ja
lcall
sub
sbb
andl
arpl
adc
dec
test
mov
xchg
aam
mov
pop
in
push
aas
popa
cmp
push
pop
dec
dec
adc
jo
pop
imull
cwtl
shll
jb
and
popf
push
fnstenv
sub
adc
inc
fidivrs
sub
dec
cmp
cld
push
sarl
mov
les
sub
insb
movsl
shrl
leave
push
mov
mov
sarl
cmp
or
jbe
sbb
rcrl
xchg
mov
test
imul
das
sti
pusha
test
addb
jnp
fistpl
rorl
in
xor
adc
add
in
push
lcall
test
movsb
jo
loop
test
fcmove
es
xchg
and
lock
push
mov
xchg
enter
insl
shl
ds
jb
test
inc
popf
paddsb
lret
int3
pusha
inc
sti
cmp
lret
insl
stos
je
cmpsb
inc
leave
pop
jp
xchg
je
xchg
mov
rcrl
pop
mov
push
imul
int3
dec
or
mov
test
rcrb
push
xchg
lcall
xchg
dec
pop
push
sahf
push
stos
xchg
insb
push
inc
sub
mov
fstpt
and
jne
shrb
pop
xorb
pusha
fldt
push
popf
outsl
adc
push
scas
mov
pop
add
popa
pushf
inc
adc
lods
jge
out
mov
add
incl
arpl
xchg
cmp
shr
xor
push
xchg
fisubrs
pop
push
jnp
sbb
pop
inc
push
pop
out
jmp
iret
out
dec
js
sbb
jns
jecxz
adc
cmp
xor
nop
cmpsb
out
sbb
mov
add
dec
mov
push
test
adc
mov
divb
aam
popa
subl
fbstp
sbb
jmp
in
clc
std
repz
mov
mov
imul
decl
cmp
insb
shlb
fistl
xor
push
xor
sbb
dec
jg
jle
and
scas
jp
xchg
pop
pmulhuw
jl
outsl
fadds
cmp
in
mov
lcall
pushf
mov
push
ss
cmp
and
js
scas
shlb
add
mov
and
mov
nop
mov
insl
fwait
in
hlt
mul
adc
icebp
lock
inc
out
jmp
xor
or
fildll
outsl
jmp
mov
inc
adc
out
xchg
mov
xor
sbb
adcl
fucomp
pop
sub
aad
push
or
mov
cmp
mov
in
mov
or
xchg
rol
jns
push
inc
fdivl
push
clc
insl
jp
lahf
cmp
cmp
mov
sbb
cmp
jmp
xchg
adc
pop
dec
fistl
push
pop
cld
sahf
mov
mov
stc
inc
outsb
shrl
sarb
loopne
ds
fnsave
adc
daa
mov
into
or
ljmp
jg
test
mov
sub
ss
pop
and
inc
addr16
xor
xchg
lahf
scas
jecxz
dec
xchg
jge
xchg
mov
push
les
js
popa
popa
loopne
rclb
fidivrs
xor
and
pop
rolb
sahf
mov
iret
addr16
adc
xchg
mov
outsb
gs
in
or
xchg
add
test
aaa
incl
xchg
jl
ds
add
and
jecxz,pt
mov
inc
and
fwait
sub
xorb
xchg
pop
xchg
jg
xor
lock
push
test
test
out
xchg
ds
inc
icebp
cmp
popa
or
dec
pop
mov
push
pop
int
pop
sub
les
jo
sbb
aas
outsb
jge
push
mov
jg
popa
movsb
mov
mov
sahf
in
pop
add
outsl
fsub
repnz
movl
jmp
sbb
mov
stc
xlat
sbb
inc
hlt
add
loop
loope
sbb
pop
mov
pop
sub
mov
pop
ja
jb
jbe
popf
out
adc
pop
mov
xor
fidivl
pop
lret
xchg
xor
cwtl
fs
pop
leave
mov
mov
daa
or
jmp
xor
filds
inc
pusha
stc
jne
or
es
scas
pop
jl
cs
out
test
adc
xchg
jmp
decl
jg
and
test
inc
call
hlt
insb
popf
add
pop
ljmp
jae
pop
in
dec
lret
adc
xchg
pop
jl
out
add
popf
mov
cld
mov
popf
pop
pop
sbbl
test
jmp
inc
aad
cs
mov
rolb
stc
pop
add
adc
pushf
xchg
xchg
nop
fdivl
fldl
mov
xchg
jecxz
cwtl
push
pushf
rcl
cs
add
mov
dec
scas
je
add
dec
rorl
adc
ret
aad
inc
jecxz
adc
jl
pcmpeqd
out
sbb
dec
outsb
dec
push
xor
sub
imul
out
repz
inc
int3
rcrl
sbb
cmpsl
popa
dec
aad
lds
std
sahf
mov
sub
inc
test
pop
and
mov
xchg
mov
mov
sub
mov
std
adc
jg
jge
rclb
call
test
sti
inc
xchg
push
jbe
jns
imul
jne
adc
push
scas
in
adc
dec
dec
shr
jnp
cmc
cs
cs
enter
jo
roll
ljmp
adc
int3
stc
xchg
leave
inc
out
loopne
call
pop
out
sub
mov
stos
std
fidivrl
leave
cmp
dec
movsl
int3
push
pop
push
mov
mov
push
sbbl
stos
nop
pushf
mov
pop
sti
and
inc
mov
xor
test
int3
insl
subl
push
into
idiv
loope
dec
sbb
mov
mov
push
enter
stos
ffree
xchg
rclb
and
xor
test
add
push
call
mov
xchg
xchg
cmc
sub
imul
pop
jmp
mov
or
dec
out
lds
test
and
gs
hlt
mov
repz
fs
lea
les
or
cli
push
jecxz
push
pop
out
cmp
xchg
enter
push
sub
jge
scas
mov
in
jb
aaa
test
jle
loopne
aad
cld
cmpsb
lea
pop
and
jne
sti
jbe
push
jae
xchg
movsb
sbb
lods
add
ror
lea
loopne
lods
ljmp
arpl
sub
cmpl
or
mov
nop
jmp
jecxz
add
test
adc
xlat
sub
inc
lret
mov
xchg
sub
push
dec
fldl
mov
stos
add
mov
sbb
push
cmpsb
xchg
negl
xor
or
shll
xchg
push
add
pop
push
xor
add
fwait
add
insl
fistpll
cwtl
icebp
daa
test
cmp
cli
xor
dec
scas
popa
loopne
sar
test
adc
push
adc
shl
inc
pusha
jp
or
or
fdivrs
xlat
sbb
inc
std
les
clc
movsl
xchg
dec
in
cmpsl
xchg
push
ret
cmpsl
mov
adc
jle
mov
fnstsw
xor
sbb
jae
dec
icebp
mov
sub
inc
pop
dec
adc
lcall
push
fimuls
cmc
jg
call
jo
dec
or
xchg
pop
cmpsl
call
movsb
out
mov
push
mov
fsubl
cmp
rep
push
repz
dec
adc
inc
lcall
mov
mov
ret
mov
inc
sbb
fbld
call
xor
aas
xor
arpl
push
lods
and
sub
jnp
pop
push
sbb
movsb
aaa
add
add
mov
shll
ljmp
pop
ja
hlt
jns
pop
push
rcll
je
xchg
stos
fs
jecxz
pop
ja
cmc
out
push
jbe
shll
std
in
cmp
mov
call
pop
out
rcll
push
cmpsl
push
push
mov
dec
push
jb
cli
shr
outsb
sqrtps
pop
fadds
cmc
sub
icebp
int
sbb
dec
and
test
cmp
or
popf
lcall
mov
mov
fwait
mov
test
sti
bound
mov
ss
mov
xor
out
out
gs
dec
cmp
mov
sti
insl
cmpsb
pusha
test
insb
test
pop
leave
mov
fisttpll
out
fs
pop
pop
cmp
in
scas
add
sarb
movsl
jge
gs
das
aaa
jne
and
inc
cmp
vshufps
mov
sarb
add
add
movsl
jmp
jecxz
imul
lahf
cmpsl
enter
addr16
pop
es
lea
stos
and
add
test
icebp
mov
loope
pop
aaa
outsb
mov
fcoms
jecxz
push
add
insb
mov
push
lret
xor
movsl
sub
lldt
aam
rdtsc
test
xor
popa
stc
lahf
add
imul
scas
sub
mov
icebp
call
icebp
lcall
pop
ljmp
jmp
pop
mov
mov
cmc
jb
add
xor
movsb
push
mov
jb
jmp
ss
add
stc
sub
push
mov
xchg
mov
or
repz
sbb
pop
cmp
test
lahf
filds
cmp
jmp
jge
push
nop
mov
int3
mov
push
jo
push
roll
out
mov
lret
sub
mov
pop
cmp
or
adc
adcl
shrl
shlb
imul
sti
adc
adc
arpl
and
lods
xor
lods
outsb
push
daa
mov
and
cmp
xchg
xchg
enter
xchg
sbb
sub
rcrb
sbb
daa
xchg
aad
in
movsl
mov
dec
call
adc
mov
pop
stos
aam
sbb
pop
adc
push
mov
inc
inc
shll
mov
mov
sub
mov
cltd
sub
test
fists
and
mov
jmp
add
adc
pop
xlat
arpl
inc
cmp
imul
jmp
movsb
lahf
xor
mov
popf
sub
in
fistps
bswap
mov
shll
mov
ret
jmp
adc
fdivrl
push
pop
and
rcrl
mov
cmc
xor
mov
or
orl
int
inc
stos
lret
xchg
mov
mov
in
bound
mov
mov
pop
imull
inc
imul
ja
lods
mov
inc
push
push
xchg
and
call
fcmovbe
cmp
sub
stc
mov
add
push
dec
loopne
popf
sub
iret
fsubrs
lods
das
setnp
push
movsl
pusha
insl
leave
scas
xchg
cs
enter
jmp
sub
movsb
or
cli
loop
lret
fcmovu
dec
nop
mov
dec
sub
aas
mov
sti
mov
ss
in
push
add
js
fldenv
popl
in
jmp
filds
fcmovnbe
out
in
hlt
mov
inc
or
inc
pop
scas
stos
clc
cmp
leave
mov
jmp
sbb
subw
shlb
outsb
xor
mov
dec
jg
paddw
mov
mov
mov
jb
insl
clc
jge
xlat
pop
ret
jmp
call
xor
sarl
jg
mov
lods
mov
std
xor
dec
std
xchg
push
push
jmp
sbb
adc
std
push
je
das
xor
cmpsb
mov
sub
xchg
dec
icebp
xchg
xchg
int
mov
out
cld
data16
ljmp
add
lahf
inc
insb
fiaddl
mov
shr
add
test
orb
shrl
lret
xchg
mov
pop
in
nop
outsb
es
fisttpl
inc
push
jne
xor
add
psubq
mov
es
push
cwtl
scas
bnd
int3
cltd
clc
add
addr16
cmpsl
sub
lods
dec
jmp
sub
mov
mov
mov
sbb
cltd
sbb
out
push
xchg
xor
xchg
leave
in
loop
inc
jno
sbb
mov
inc
xorb
fsubl
mov
in
aas
xchg
lea
push
push
and
add
div
mov
push
xchg
add
dec
add
jns
fnsave
cmp
mul
lds
jb
andps
mov
dec
mov
push
fwait
push
sbb
mov
les
jns
and
pop
enter
shll
frstor
cmp
inc
cmpsb
into
arpl
xchg
mov
rol
fsubs
or
xchg
push
xor
xor
popa
adc
xor
mov
shll
addb
adc
push
xor
xor
popa
adc
xor
mov
shll
addb
adc
push
xor
xor
popa
adc
xor
mov
shll
xchg
push
xor
xor
loope
icebp
ret
outsb
dec
or
mov
mov
pop
fstpl
in
push
std
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
in
add
mov
fdivr
pop
stc
jae
or
add
add
push
add
add
add
add
add
and
add
add
cmp
ds
add
fwait
add
add
add
in
add
dec
add
add
jae
xchg
add
add
add
add
or
add
dec
add
add
dec
add
add
add
add
add
add
add
sbb
sub
adc
rolb
add
adc
jmp
mov
add
push
add
add
or
add
add
add
add
add
cmp
add
add
add
add
in
or
add
inc
add
add
add
add
add
add
add
add
add
or
in
add
add
add
add
xlat
add
add
add
add
add
add
dec
add
add
add
sub
add
add
add
add
add
jns
loope
mov
into
add
add
xchg
add
add
xlat
add
add
add
add
add
mov
adc
add
add
add
add
add
add
add
add
add
add
add
or
sub
add
add
add
add
add
add
xor
mov
and
or
add
add
add
arpl
add
add
add
imul
add
cli
add
add
add
dec
add
add
aas
add
add
add
add
add
add
dec
add
add
add
add
xlat
add
add
stc
pop
jae
inc
add
add
add
pop
add
loop
and
mov
dec
add
add
bound
or
add
mov
and
mov
add
push
add
add
or
sahf
add
insb
add
add
add
sub
dec
add
add
jns
xchg
add
xchg
add
dec
add
sub
add
inc
add
add
and
add
add
xlat
add
xchg
cmp
outsb
add
add
jecxz
add
sahf
add
aad
dec
add
sub
sbb
inc
add
xor
xlat
add
add
add
add
add
ds
add
or
addl
xchg
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
fiadds
jae
outsb
add
add
add
xchg
add
add
add
dec
add
xchg
add
add
add
jbe
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
mov
mov
sti
add
add
add
add
or
add
add
add
or
cmp
xchg
add
add
add
mov
add
faddl
jecxz
fldl
dec
add
add
add
add
push
add
add
and
dec
add
add
add
add
add
xor
xlat
add
insb
add
add
add
add
add
add
add
sub
popa
add
add
rolb
pusha
hlt
mov
mov
pop
jo
lock
jl
testl
push
pop
push
das
mov
and
pop
lds
fwait
lock
or
jmp
testb
mov
loope
scas
push
dec
les
scas
iret
pop
mov
inc
jge
loop
lock
xchg
add
int
cld
lock
mov
aam
popf
in
pop
aad
bswap
add
mov
into
lahf
cwtl
jns
dec
or
xchg
jne
insl
call
ds
roll
sub
lahf
int
cmpsb
adc
pop
push
fisttpll
and
xor
or
and
mov
pop
pop
adc
push
fs
jns
mov
jl
bound
sub
lock
loope
imul
or
in
dec
outsb
add
repnz
mov
int
mov
fidivrs
clc
clc
dec
inc
addr16
xor
test
xor
lea
sub
inc
xor
jbe
pop
add
push
jp
je
movsl
jns
jle
xor
sub
ffreep
pop
jo
xchg
cmp
xchg
iret
scas
pop
call
inc
into
sub
jnp
inc
cmpsb
ficoml
fmull
stc
xor
nopl
mov
add
push
adc
add
push
enter
rcll
cmpsl
sbb
sub
flds
fcmovne
mov
cmpsl
sub
mov
lock
and
push
jb
lcall
jmp
out
pushf
mov
stc
loope
ds
push
mov
js
mov
iret
out
inc
outsb
add
sub
add
xor
xchg
push
mov
cmp
test
aas
xor
xchg
stos
add
test
imul
outsb
fstps
ds
and
dec
or
jo
push
ret
mov
mov
or
pcmpgtw
pushf
xchg
repz
pop
aad
icebp
adc
add
loopne
rclb
cld
add
sahf
fists
push
dec
aam
pop
pop
dec
cs
ret
and
adc
or
sar
repnz
sahf
repz
aas
jg
add
ljmp
test
add
push
jmp
xchg
outsl
lret
notl
rolb
js
shlb
sbb
jno
je
xor
xchg
pop
adc
cmp
lcall
sti
jp
movsb
sub
xor
cmpsb
popa
mov
xor
daa
or
ja
add
jge
xchg
bound
dec
movsb
mov
or
out
insl
inc
loope
jo
jle
pushf
pop
ret
inc
lods
cmp
inc
jg
push
dec
clc
outsb
xchg
lea
adc
outsl
popa
dec
in
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
