call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
shrb
loop
pop
insb
lock
fsubl
test
push
adc
jb
arpl
xor
and
shrb
loop
xchg
insl
cmpb
mov
mov
rorb
and
shrb
loop
xchg
insl
cmpb
mov
sahf
push
call
insl
mov
lea
dec
repnz
mov
xlat
or
xor
lea
mov
mov
sbb
addr16
lock
lds
scas
mov
popf
mov
std
add
cmpb
ficompl
and
mov
xchg
cld
sahf
push
lods
push
mov
inc
adc
push
inc
and
shlb
loop
mov
xchg
jge
inc
mov
inc
mov
sbb
std
inc
sbb
sub
repnz
xchg
xor
pop
mov
jb
popf
inc
mov
and
xor
jo
aas
mov
mov
inc
cld
lods
ja
mov
cmp
xchg
insl
cmpb
mov
mov
adc
add
xor
and
fwait
dec
mov
lock
sub
movsb
jb
sbb
adc
fs
xchg
inc
mov
cs
cmp
sbb
jae
enter
ljmp
pop
test
mov
push
cmpb
mov
mov
adc
add
xor
and
shrb
loop
xchg
insl
cmpb
mov
mov
adc
add
xor
and
shrb
int
insb
cwtl
cmp
sbb
and
lcall
xchg
mov
loop
sub
cmp
push
mov
pop
rcr
outsl
jbe
xor
add
cli
sbb
sub
jge
mov
or
xchg
xchg
jmp
insl
dec
fisttpll
push
enter
inc
xor
pop
inc
mov
cmp
inc
xor
insl
add
xor
adc
aam
mov
jge
test
std
test
in
xlat
outsl
cs
scas
cmp
dec
fdivrl
add
jecxz
cli
test
lock
push
sbb
outsb
pushf
cmp
mov
and
xchg
xchg
mov
icebp
xchg
dec
inc
jmp
sbb
addr16
sub
ljmp
dec
or
rorl
bound
pop
lock
stos
popf
clc
pop
push
in
adcb
das
and
ja
call
fs
add
movsl
cs
add
pop
mov
push
lret
xchg
and
lock
in
cwtl
iret
xchg
movsb
sbb
jno
pop
je
xor
cmpsl
movsl
jp
or
mov
mov
es
bound
push
cltd
sbb
lds
scas
sub
ficoms
dec
es
xor
mov
pushf
mov
mov
mov
push
mov
das
dec
mov
divl
das
add
and
ljmp
add
in
inc
sbbl
into
or
mov
jb
in
das
addr16
outsl
jno
pop
mov
pop
push
adcl
addl
xchg
pusha
cmp
popl
inc
shrb
cmp
pusha
hlt
mov
lret
lret
ss
pop
jnp
rsqrtps
cld
popa
push
inc
ja
xlat
outsb
fwait
sub
xor
cmp
adc
pop
mov
sub
f2xm1
sub
mov
push
lret
xor
outsl
pop
shlb
sbb
in
xchg
sub
loop
pushf
insb
xor
jns
andb
dec
ss
addr16
add
inc
je
xchg
in
mull
sbb
xchg
mov
inc
call
mov
adc
dec
fists
fidivs
mov
mov
cltd
cmc
pop
xchg
js
inc
push
imul
cmpsb
pop
pop
push
or
iret
nop
inc
inc
pushf
mov
push
add
adc
call
push
jbe
pushf
in
jno
clc
cmp
in
sub
mov
xlat
scas
mov
icebp
jp
dec
adc
enter
jo
fldt
push
in
mov
outsb
mov
or
test
jnp
mov
outsl
add
inc
xor
inc
dec
in
jecxz
push
ljmp
lahf
jle
push
xor
mov
lods
out
xchg
aaa
popl
outsl
adc
mov
ljmp
push
mov
mov
icebp
int
xor
jmp
cmp
mov
cmp
ds
aad
pop
cld
fsubrs
lret
fstl
lea
jno
hlt
insl
lret
aaa
sbbb
push
mov
aaa
or
mov
or
jle
and
mov
xchg
ficomps
pushw
cltd
movsl
scas
push
cwtl
xor
cmp
cmp
orl
fldenv
xor
in
adc
enter
adc
mov
dec
nop
xchg
test
mov
pop
xlat
cli
and
dec
push
sahf
adc
mov
xlat
fisttps
mov
cli
sbbb
ss
dec
push
cmp
pop
test
sbb
mov
xlat
std
mov
clc
adc
push
popl
push
push
sbb
xchg
mov
inc
ljmp
xchg
mov
and
iret
mov
add
jecxz
push
sub
mov
pop
scas
sub
mov
lock
cwtl
cmp
arpl
xchg
inc
shlb
jns
ret
notl
fistl
mov
pop
lcall
pop
pop
mov
or
cmpl
mov
add
sub
jae
stos
insl
mov
lea
push
aaa
arpl
test
push
jp
jbe
in
sar
testl
lods
and
xor
mov
dec
mov
testb
lock
loopne
addr16
testl
incb
mov
push
insl
dec
adc
and
fs
lret
lret
cmpsl
xor
jle
xor
scas
movsl
int
aaa
hlt
pop
popa
gs
lods
pop
aas
loope
add
add
loope
data16
xor
mov
add
test
ja
out
int3
push
push
incl
pop
out
lods
inc
in
cmp
test
jns
js
pop
mov
out
popa
cwtl
sub
test
lret
add
nop
andl
outsl
add
sti
loop
mov
mov
in
push
mov
scas
repnz
test
rcll
mov
test
and
push
fidivs
stos
lret
cmp
adc
aas
outsl
jns
or
es
dec
jp
push
ret
sub
sub
sub
enter
inc
cmpsl
not
clc
adc
scas
sahf
fsubrs
cmovle
pop
jnp
xchg
cmpsl
and
lods
lea
ja
push
adc
imul
jge
mov
xchg
shl
adc
scas
pop
lock
adc
dec
sbb
sahf
jb
leave
insb
idivl
and
fnsave
inc
mov
lock
cmp
mov
mov
ficoml
shrb
jmp
fists
ss
lret
sub
adc
lods
shll
ja
fisubrl
jecxz
xor
daa
xchg
pop
call
sbb
nop
andl
das
cmp
or
lcall
enter
insl
mov
or
mov
cmp
xor
in
es
lret
inc
add
xchg
cmpl
popa
push
push
mov
mov
mov
das
jae
or
aad
push
roll
fwait
int3
pop
imul
movsl
mov
xor
dec
ljmp
arpl
mov
aas
add
inc
cwtl
mov
js
shll
in
mov
push
sub
mov
adcl
cmp
pop
jae
sbb
and
subl
mov
mov
lahf
sbb
dec
add
mov
mov
jp
pop
mov
ja
xchg
outsb
lods
sbb
bswap
mov
lret
add
and
xchg
cmpsl
xchg
sahf
jmp
ss
and
aam
inc
outsl
and
shll
mov
dec
cltd
js
aas
sub
jo
fs
jmp
dec
stos
mov
cmpsb
in
shlb
dec
int
leave
xchg
and
push
lahf
test
mov
fs
int3
pop
mov
add
sbb
hlt
hlt
jae
inc
ljmp
or
and
push
fstl
icebp
cmp
and
ret
fldt
pop
xor
pop
fsubrs
mov
xchg
fiaddl
cmp
adc
pusha
mov
sub
cmpsb
xlat
xchg
push
or
pop
int3
jecxz
icebp
mov
and
ds
xchg
xor
push
xlat
xor
in
loope
push
adc
pusha
dec
xor
sbb
mov
dec
xchg
inc
cmp
lock
out
adcb
daa
lcall
inc
dec
hlt
in
roll
mov
and
sub
pop
std
cmp
inc
cmpsl
sub
lret
notb
xchg
out
sub
lea
mov
cld
inc
fwait
pop
pushf
jmp
lods
enter
cmp
lea
lock
dec
sahf
sub
jo
test
lret
das
dec
pop
iret
push
add
mov
rcl
or
in
dec
jl
sbbl
and
es
mov
pop
dec
mov
les
and
xor
pusha
mov
xlat
add
scas
stc
xchg
add
scas
lret
pop
push
outsb
addl
mov
pop
inc
lock
subl
pop
insl
aad
xor
mov
arpl
popa
psubd
sbb
xor
mov
mov
call
inc
add
mov
out
jb
cmp
cmp
pop
cmp
data16
and
cmc
dec
xlat
out
push
sbb
addr16
outsl
pop
fadds
mov
cmp
cld
jb
pusha
inc
dec
add
dec
hlt
xor
and
pop
out
inc
out
xor
fildll
adc
jne
xor
sbb
dec
rol
push
stc
divl
or
ret
mov
mov
nop
repz
cmc
ss
sarb
ljmp
add
fbstp
sbb
test
mov
xchg
test
sub
mov
daa
and
shll
pop
aam
inc
push
push
mov
push
pushl
imul
aad
xchg
xchg
movsl
nop
jp
leave
mov
jecxz
and
test
dec
add
xor
adc
jp
bound
mov
mov
mov
adc
and
xor
cmp
cmpsb
cld
pop
stos
lret
mov
dec
rcll
test
adc
push
xor
sbb
xor
push
and
icebp
and
cmp
lods
enter
dec
orl
adc
jne
push
arpl
icebp
adc
bound
sarb
inc
or
or
pop
gs
push
jne
pop
add
outsb
mov
cmc
sub
icebp
push
sub
rorb
jbe
sub
cwtl
sbb
sbb
xor
movsb
add
inc
scas
dec
test
add
movsb
cmpsl
and
push
dec
pushf
dec
mov
lret
lea
jae
mull
dec
pop
adc
dec
sub
aad
and
mov
push
cli
jle
mov
into
mov
cwtl
lret
xchg
mov
outsb
daa
pop
jl
aas
lods
mov
mov
add
xor
gs
mov
and
lds
loopne
sub
and
loope
idiv
hlt
dec
or
mov
cmp
push
push
cmp
and
adc
mov
push
cmp
adc
js
xchg
jge
inc
mov
xor
insb
add
and
fs
and
stos
inc
push
das
pop
push
cmpsb
divb
mov
inc
sub
mov
in
mov
sbb
ret
xor
rdtsc
jno
cmc
mov
ds
sbb
sti
and
adc
dec
or
jg
shll
push
adc
adc
pop
test
insb
dec
pop
pop
mov
jb
and
pushf
sbb
out
into
sarb
insb
out
pop
jae
scas
stos
ret
sahf
sahf
addr16
out
sub
shlb
lock
int3
aaa
ljmp
jns
cmp
mov
pop
sbb
ds
mov
lea
outsl
or
fisubrl
ret
pusha
pop
je
inc
jle
out
nop
cmpsb
in
push
cwtl
xor
pop
popf
pusha
jle
or
adc
ror
scas
or
scas
jecxz
repnz
inc
add
fwait
sti
cmpsl
sbbb
es
rclb
or
sub
mov
adc
mov
ret
jo
fs
mov
loope
pop
add
or
scas
jge
mov
popf
jl
lds
cmpl
call
or
std
xchg
jecxz
stos
push
inc
cmpsl
hlt
ljmp
cmp
aad
pusha
adc
imul
or
int3
sti
clc
mov
jg
mov
dec
test
js
icebp
pusha
inc
inc
aad
cld
jae
mov
adc
xchg
stos
ret
movsl
mov
cmp
subb
fcmove
pop
dec
dec
int
jo
push
pop
mov
in
aaa
jl
fstpt
and
mov
cwtl
and
pop
cwtl
out
pop
jne
fcmovb
neg
fcompl
mov
fldenv
and
inc
lret
in
imul
xchg
mov
mov
pop
ds
stos
and
imul
int3
lods
or
pop
or
and
push
out
imul
jnp
sub
push
fisubl
cmp
rcrb
jmp
or
mov
data16
mov
stc
iret
add
mov
repnz
adc
push
cmp
rcrb
mov
popa
dec
in
mov
movzbl
push
mov
movsl
mov
pop
inc
das
adc
or
dec
mov
mov
or
lret
dec
ficompl
int3
push
inc
jmp
je
sub
pop
mov
jecxz
lods
xchg
xchg
pushf
dec
xlat
negl
mov
icebp
xchg
std
inc
add
test
jae
pop
enter
xor
jge
or
xchg
push
subl
jb
mov
fisttps
inc
sub
dec
and
push
fsts
cmp
popf
mov
fwait
sbb
adc
sub
add
je
fstps
aas
roll
inc
mov
mov
mov
mov
mov
add
fisttpl
mov
sub
adc
out
div
push
icebp
dec
mov
cs
cmpsl
divps
decl
stc
ds
sbb
sti
nopl
xor
inc
mul
cmpsl
lods
idivl
xchg
fidivs
repz
cs
lahf
cmpsb
out
arpl
ljmp
lret
mov
daa
pop
mov
in
dec
test
hlt
fmull
imul
ja,pt
lea
dec
jge
inc
xor
dec
sti
jae
aas
or
pop
mov
jnp
and
xchg
push
icebp
mov
loope
push
jae
sbb
rcrl
mov
jbe
fsubp
in
loop
cmp
cs
in
repnz
mov
mov
and
cmp
sub
lea
sbb
in
scas
xor
mov
xchg
in
lods
fcomps
mov
mov
sub
mov
aad
inc
mov
mov
jmp
inc
dec
sub
dec
outsl
mov
out
sub
mov
mov
aaa
xor
jne
leave
mov
dec
pop
std
mov
insb
pop
adc
jle
dec
xchg
sbb
or
jae
or
ds
or
jmp
and
call
loopne
mov
pop
roll
pop
insl
in
adc
sub
jmp
pushf
int
into
push
xchg
sbb
je
das
inc
leave
mov
call
sbb
push
es
fdivs
mov
xchg
push
les
sbb
cltd
das
pop
cmp
sub
sbb
lahf
ja
arpl
sub
aaa
and
jo
out
test
xor
jb
in
add
movsb
pop
ja
push
leave
cmpl
push
push
fwait
xchg
out
fisubrl
icebp
mov
hlt
fidivrs
dec
add
mov
popa
sbb
fdivl
sbb
add
xchg
and
push
sub
sub
cmp
jl
pop
orb
or
movsl
fadd
pop
shrl
push
mov
notb
pop
movsl
lahf
mov
std
repnz
addr16
pop
rcll
jge
jg
mov
sarb
jb
jne
jg
push
pop
mov
xchg
or
or
inc
add
jmp
cli
ss
add
out
popa
insb
cmp
mov
fcmove
fldl
ret
adc
fstps
imul
mov
hlt
xor
mov
jge
pop
lret
bound
dec
adc
mov
cmp
rcr
lcall
mov
stc
pop
mov
je
mov
shll
adc
mov
clc
aaa
sub
clc
xor
pop
xchg
rorb
outsb
and
xchg
popf
pop
into
push
or
dec
mov
movsl
std
and
lods
sbb
stc
jnp
cmp
sub
ss
sbb
pushf
sub
jp
rcrb
add
push
push
mov
xchg
into
shll
enter
cltd
popf
andb
pop
cmp
adc
xchg
or
inc
cs
add
push
pushf
push
and
push
insl
xor
mov
xor
fistl
push
aas
cmp
rol
clc
mov
pop
xchg
dec
inc
jle
push
push
fwait
lods
mov
mov
xor
mov
out
mov
add
sahf
int
xchg
pop
rcll
call
jae
hlt
sti
aaa
ret
and
mov
dec
push
mov
cmp
arpl
cmp
jbe
push
stos
mov
mov
scas
cvttps2pi
lock
mov
orl
dec
les
lret
lret
fwait
jbe
push
sbb
xchg
inc
testb
sub
mov
mov
or
jl
sub
jae
cmpsb
testb
into
mov
mov
dec
cmpsl
fiaddl
shrl
sub
fcmovu
sbb
and
stos
adc
mov
pop
fdivp
jnp
into
xchg
add
inc
negl
aas
sub
jbe
jb
add
jbe
sahf
mov
sbb
mov
sub
cmpsl
jb
xor
dec
shlb
pop
sbb
in
fbstp
fs
cmpsb
jae
and
cmp
mov
xor
shlb
movsl
insb
push
cltd
sti
xor
and
and
dec
and
push
test
cmp
dec
imul
outsb
pop
xchg
scas
jb
sbb
xor
loopne
mov
sub
xlat
imul
lcall
test
adc
inc
sbb
mov
inc
nop
mov
ljmp
movsl
out
imul
inc
test
ficompl
aaa
or
mov
mov
and
pop
icebp
mov
mov
pop
xor
adc
lea
sub
std
incl
dec
clc
push
ret
mov
ljmp
scas
sti
cmp
in
or
divl
or
sub
imul
mov
cs
add
xchg
out
popa
adc
xor
popa
shlb
adc
inc
int
les
das
mov
out
out
test
aam
jns
jne
sub
loopne
lret
mov
xor
pop
inc
gs
shll
xor
out
popa
or
fldcw
mov
cmpl
mov
icebp
inc
cmc
cwtl
adc
push
stc
cli
dec
aad
xor
fdivs
aas
and
push
mov
fsubl
sbb
and
ja
xor
push
xchg
sub
shll
inc
mov
movsb
mov
imul
and
in
xor
push
pop
and
pop
insl
jo
mov
and
pop
mov
mov
pop
dec
or
jae
jl
jg
xchg
and
sub
xor
gs
push
ret
subb
mov
addr16
loopne
mov
dec
jbe
or
out
pushf
sbb
fs
call
and
mov
in
outsl
mov
ficoml
or
inc
loop
pop
jmp
arpl
or
pop
cmp
jge
loop
adc
and
divl
add
cmc
jle
push
mov
pop
add
pop
aaa
cmp
push
jne
insb
inc
in
ret
xchg
lods
enter
js
shl
loope
in
int3
fimuls
push
add
cmpsb
out
inc
imul
cmp
or
mov
ja
sbb
aam
xchg
cmp
mov
loope
mov
inc
inc
mov
jnp
popa
loope
cltd
test
xlat
bound
mov
mov
shll
ss
testb
push
adc
ret
inc
aam
dec
clc
mov
inc
pushf
jle
jne
cs
xchg
adc
pop
cmp
pop
leave
sub
pusha
lods
mov
test
mov
mov
stc
mov
sub
jnp
cmc
int
push
sub
jno
lods
pop
stos
inc
push
pop
in
xor
add
in
add
and
data16
test
sbb
mov
decl
xor
mov
sbb
lahf
fists
push
icebp
in
fldenv
pusha
pause
test
dec
imul
adcl
les
sahf
sbb
test
test
inc
movl
jbe
fcoml
frstor
adc
xchg
dec
push
out
pop
push
loop
sub
stos
sub
xchg
xchg
in
pushf
clc
add
std
test
adc
pop
jl
xor
push
ja
stos
cmp
dec
inc
fstp
mov
mov
and
out
mov
testb
cmp
inc
xchg
mov
adc
xor
cmp
jmp
enter
cltd
out
pop
xor
or
jp
pop
or
jle
out
scas
bound
sbb
mov
sahf
sub
ss
js
mov
sahf
ffreep
cmpb
ljmp
inc
lods
jnp
pop
lods
pop
dec
icebp
and
push
sahf
movsl
int3
mov
ja
mov
cmp
inc
inc
icebp
mov
imul
clc
jge
shll
inc
das
mov
push
adc
and
rorl
in
in
sub
xchg
fisubl
dec
mov
test
jmp
test
and
sahf
test
movsb
adc
xor
or
lret
mov
pop
mov
fstpt
lock
add
or
inc
xor
hlt
ss
xor
push
aad
fildl
adc
cltd
das
sbb
leave
adc
dec
es
cmpsb
fsubl
jg
lret
inc
cmp
xchg
insl
cmpb
mov
mov
adc
add
xor
and
shrb
loop
xchg
insl
cmpb
mov
mov
adc
add
xor
and
shrb
loop
adc
jge
dec
and
lods
inc
mov
adc
add
xor
and
shrb
loop
xchg
insl
cmpb
mov
pop
fmuls
jb
inc
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
test
test
xchg
repnz
addr16
ja
inc
je
fs
adc
addl
aam
hlt
xlat
in
xchg
mov
xchg
and
je
fs
adc
add
jbe
and
aam
hlt
xlat
in
xchg
mov
xchg
inc
xor
jns
dec
push
push
imul
and
aam
fwait
mov
movsl
mov
push
mov
or
insb
mov
and
lods
shll
out
orb
xchg
pop
sbb
mov
in
mov
shr
fsubs
call
pop
mov
add
stc
sbb
dec
addr16
cmp
les
xlat
lods
mov
cmp
cmpsl
xchg
cmpsl
test
lcall
addr16
mov
fnstcw
sti
pop
lret
adc
cmp
xchg
mov
daa
ja
mov
push
mov
movsb
stos
add
clc
out
add
adcb
or
sbb
aaa
and
sbb
ss
pop
and
mov
hlt
xlat
in
xchg
mov
xchg
inc
inc
je
fs
adc
add
xor
dec
mov
popf
mov
lret
clc
incb
xor
and
cmp
inc
jne
ja
ss
gs
test
xchg
hlt
mov
loope
fneni(8087
xchg
xchg
movsb
add
or
arpl
push
pop
je
popf
xchg
xchg
scas
pushf
andl
push
ja
inc
je
fs
adc
add
xor
and
aam
hlt
xlat
in
xchg
mov
xchg
inc
inc
je
fs
adc
add
xor
and
aam
lea
mov
ds
push
mov
sbb
in
add
add
inc
mov
lds
lret
ljmp
imul
add
adc
xchg
or
outsl
lods
movsb
lcall
mov
movsb
fs
mov
aam
cltd
sbb
stos
cld
cli
add
out
test
js
jne
lods
xor
adc
cwtl
movsl
jns
insl
cmp
adc
int
jmp
loopne
and
nop
data16
pop
pop
or
inc
mov
dec
imul
xchg
pop
and
and
sub
jl
stos
xchg
aas
cmp
addr16
hlt
push
cmpsb
cltd
out
int3
sub
out
xor
das
xlat
mov
push
test
xor
int
cmp
push
js
inc
fistpll
sub
pop
jae
data16
inc
je
in
out
ret
movsl
dec
cli
fdiv
les
sub
je
cmpsl
outsb
dec
scas
ret
inc
in
push
push
das
mov
bound
jge
repnz
leave
pop
pop
push
fs
in
cmc
rorb
dec
xlat
cmc
outsb
test
push
push
negl
sbb
adc
cmp
sbb
push
movsb
jnp
sbb
dec
pop
cmp
out
aaa
sbb
mov
decl
addb
lods
jle
xchg
ret
add
push
ficomps
jle
jo
push
dec
mov
insl
jg
mov
int
outsb
rcll
cmpsl
mov
test
add
mov
mov
add
and
mov
push
clc
push
negb
cwtl
dec
shll
cmc
in
cmp
cs
pop
enter
scas
xchg
xor
cmp
aad
jb
or
pop
mov
popf
aam
and
inc
or
mov
loope
scas
fmull
pusha
cmc
adc
aas
mov
or
call
js
lea
or
xchg
nop
clc
pushf
in
out
sti
adc
pop
or
shlb
popa
loopne
subb
je
mov
pop
mov
in
and
out
mov
sbb
rcll
xchg
pop
jecxz
add
iret
jl
rclb
andl
mov
shlb
incb
push
push
adc
ss
mov
xor
shrb
dec
jnp
xchg
in
jno
test
dec
sti
jge
cmp
outsb
xchg
repnz
sub
push
mov
and
or
mov
push
fbld
stc
dec
gs
xor
mov
mov
pop
stos
cmp
mov
mov
cltd
xor
or
inc
inc
mov
mov
sub
mov
inc
enter
repz
fcmovnbe
adc
rorb
sbb
jns
inc
movsl
mov
sti
jno
push
push
xchg
mov
sbb
mov
mov
fnsetpm(287
push
xor
push
and
push
out
imul
pushf
xchg
xorb
adc
jp
and
sbb
out
cmp
mov
int3
imul
rolw
sarb
sbb
dec
cmp
mov
fcmovbe
sahf
push
cmp
inc
mov
jle
push
push
inc
inc
repnz
int
sarb
cli
out
push
push
jmp
fsts
jg
ficompl
mov
ror
fstps
adc
push
xchg
out
push
pop
inc
test
loopne
xor
test
push
add
xchg
fs
or
ljmp
repz
outsl
xchg
out
mov
arpl
pop
dec
test
std
mov
pop
repnz
stos
js
mov
add
and
xchg
stc
push
incb
daa
icebp
popf
call
inc
imul
test
clc
in
add
push
mov
call
scas
pusha
add
push
inc
dec
push
mov
fisubl
mov
ret
pop
insb
repz
sbb
push
mov
xor
or
sahf
xchg
cltd
shr
fildll
fs
int
pop
pushf
lret
xchg
add
jbe
sub
loope
mov
pop
dec
sub
and
inc
les
xor
iret
gs
sub
adc
hlt
aas
jg
cmc
test
push
in
loop,pn
out
loope
push
outsl
arpl
mov
addb
scas
adc
cli
mov
sbb
es
arpl
push
icebp
push
xor
jns
cli
arpl
lds
sti
mov
push
adc
pushf
push
xlat
and
pushf
enter
xchg
push
lret
jge
es
add
hlt
sahf
mov
xchg
mov
push
jg
mov
adc
xor
add
mov
cmpsb
ret
ljmp
pop
jge
cwtl
dec
out
pop
out
pop
push
mov
dec
std
ret
sub
roll
cltd
cmp
popa
mov
cld
ret
and
and
inc
imul
addps
pop
sbb
jp
xor
leave
sub
dec
out
enter
cmp
jns
and
dec
rcll
clc
ljmp
mov
stos
push
add
push
push
sbb
push
lods
loope
aad
pop
mov
scas
xchg
adc
or
cmp
pusha
or
add
in
mov
cltd
inc
add
lods
mov
shlb
imul
sarl
pushf
dec
mov
sti
stc
outsl
adc
jns
fdivs
movswl
mov
add
orl
push
imul
and
cwtl
test
push
pop
imul
stos
push
call
mov
es
lea
xchg
decl
push
and
or
cli
cmc
hlt
jp
and
jb
subl
cs
add
pop
ret
js
xorl
loope
or
push
push
adc
xchg
shll
inc
push
push
sbb
stc
cld
clc
or
lahf
in
mov
add
and
xor
mov
scas
xor
popa
rorl
pop
sub
push
push
scas
xor
pop
mov
cmpl
push
sub
test
pop
mov
cmp
stos
mov
out
mov
js
int
xor
adcl
lods
outsb
cmp
subb
and
sti
adc
or
mov
lods
dec
test
mov
mov
insl
imul
cltd
repnz
int
fisubl
movsl
insb
shr
cmc
inc
pop
lods
or
insl
outsl
out
push
cmp
inc
mov
xchg
mov
movsb
aam
sbbb
cmpsb
sub
sub
jp
test
inc
loope
sub
scas
inc
pushf
pop
jnp
movsl
push
mov
xor
sahf
iret
lret
dec
out
push
jp
sahf
fsubrs
sub
pop
xchg
cmp
mov
push
mov
pop
in
lds
add
bound
mov
dec
add
jno
jp
scas
fnstcw
pop
push
lret
leave
mov
sti
outsb
mov
jno
scas
lahf
mov
nop
or
pusha
xor
shr
push
xchg
mov
fld
sub
xor
push
inc
jne
rcll
in
fimull
ret
dec
push
xchg
mov
jg
test
pop
movsb
sbb
cmc
jmp
cmp
movsl
in
xchg
out
loope
fwait
out
inc
sbb
mov
dec
bswap
cli
dec
cli
push
sahf
into
lahf
push
dec
mov
dec
loope
adc
out
aam
adc
clc
lock
mov
mov
addl
push
ds
jg
bound
cmp
rcrl
jmp
xchg
adcb
hlt
pop
inc
int3
fcoms
jnp
sbb
insb
adc
into
repnz
add
stc
sahf
jb
sub
sub
add
adc
lret
and
or
jp
in
jl
lea
test
shrl
sti
dec
adc
aam
xor
mov
lret
cld
je
stos
and
add
mov
ljmp
or
push
push
clc
movsl
jae
sbb
or
dec
test
dec
cs
pusha
push
pop
sbb
adc
sbb
dec
rcr
jg
dec
jmp
add
adc
mov
dec
fcoml
fucomp
sbb
push
movsl
scas
jecxz
lods
adc
cmpl
fnstcw
daa
mov
jl
or
aas
aam
aaa
push
add
push
lea
inc
es
adc
scas
push
out
jge
and
test
hlt
filds
jb
nop
jle
lea
xchg
lcall
arpl
add
std
sbb
adc
mov
pop
sub
pop
mov
push
cmc
mov
jmp
xor
sub
pop
mov
divl
or
gs
adcl
xlat
cmp
and
gs
or
in
dec
mov
xor
mov
xchg
dec
cltd
xor
or
add
sbb
clc
enter
xor
mov
clc
iret
cmpb
cmp
mov
sahf
pop
mov
push
loopne
or
sarb
adc
je
das
mov
or
adcb
cmpsl
loope
xchg
repz
fucompp
jbe
and
xor
xor
cli
insb
cmp
jmp
popa
dec
notl
inc
lahf
addr16
imul
or
sbb
push
xchg
ljmp
adc
sbb
or
fisubrs
jns
pop
sti
add
sub
fwait
test
nop
pop
lret
and
insl
shrl
or
or
lods
mulb
jmp
outsl
push
and
pop
push
push
jbe
les
push
cli
movsl
ret
xor
mov
int
mov
cmp
or
push
xlat
xchg
fadds
add
dec
mov
outsb
shll
leave
jge
add
sarl
xorb
and
cwtl
andb
test
pusha
or
pop
popf
jnp
dec
int
jmp
stc
inc
sysenter
inc
jge
je
adc
push
push
imul
lret
jg
mov
jecxz
lds
aas
movsl
pop
orl
out
push
pop
jns
sbb
mov
jg
in
sarb
cltd
pop
jmp
mov
and
and
xchg
ret
mov
adc
sub
ljmp
aam
xchg
in
addr16
mov
jp
mov
xor
ret
push
jecxz
test
cmc
ret
cmp
or
add
js
and
imul
movsb
jecxz
dec
adc
jo
pop
in
movsl
add
sbb
fstps
into
cmp
dec
movsb
inc
cmc
cmc
mov
lret
sbb
rcrl
lahf
cmpsb
add
test
clc
cmp
push
mov
add
jb
and
imul
xor
jg
push
insl
sti
ss
mov
dec
xchg
clc
insb
add
in
xor
xchg
fiadds
cmpsb
rcll
fists
arpl
pushfw
inc
hlt
push
sarl
pop
xor
aaa
in
fisubs
out
adc
or
test
testb
sarb
push
jnp
in
sbb
sub
and
mov
adc
mov
dec
leave
sub
in
mov
in
in
cmp
in
push
popf
sarl
loope
iret
mov
jecxz
mov
lea
or
push
and
scas
sub
nop
lods
sub
sar
push
push
bsr
push
xor
adc
pop
xlat
mov
xchg
imul
imul
dec
inc
or
add
pop
inc
ror
add
push
inc
sti
and
sbb
addl
lock
dec
movsb
mov
fdivrp
jnp
shl
sti
movsb
enter
addr16
je
out
push
lea
jle,pn
cs
aad
xchg
daa
add
pop
adc
loopne
cwtl
adc
pop
std
sub
fdiv
add
lahf
ficoms
sub
jbe
sub
cmovs
rorb
or
xor
lods
cmp
xor
iret
xchg
mov
sub
pop
xchg
std
cli
push
push
pop
xchg
xor
fs
data16
in
xchg
and
cli
cmpsb
nop
cmp
loope
or
push
mov
pop
jp
jecxz
fmull
mov
pop
rorb
or
dec
repnz
xchg
sti
and
pop
push
leave
addr16
mov
mov
dec
dec
mov
inc
insl
jne
pop
pop
sti
sbb
dec
ljmp
out
mov
sub
imull
jl
outsb
mov
fs
cmp
sbb
repz
mov
jg
jae
hlt
add
popf
jp
jns
call
pushl
mov
adc
mov
jmp
aas
pop
stc
inc
mov
out
pop
adc
fcompl
mov
test
fidivs
pop
pop
lahf
pop
sub
add
jmp
out
ds
outsb
adc
lds
rcr
pushl
filds
addr16
jg
mov
pop
jbe
sarl
and
push
nop
jmp
or
pop
and
pop
xor
fimuls
jne
fwait
sub
das
fs
mov
inc
or
or
mov
inc
sub
push
clc
adc
dec
jns
cli
daa
cmp
mov
jae
cwtl
idivl
mov
test
fnstcw
and
stos
jno
sbb
pushf
xchg
in
iret
xchg
jae
enter
lcall
cmp
inc
test
in
push
adc
and
repnz
mov
pop
mov
push
cmp
fst
and
jns
bound
mov
aaa
out
xchg
sub
repz
pusha
in
mov
add
xchg
loopne
xor
sub
jmp
inc
ds
mov
push
mov
jnp
and
xor
xchg
je
mov
push
jp
stos
inc
idivb
jo
das
leave
push
dec
aaa
xchg
push
jge
cmp
lock
xor
adc
lods
and
outsb
in
rolb
pushl
jnp
testl
fimuls
sub
jmp
cmp
cmpsb
mov
mov
cmpb
jns
mov
sti
lock
jecxz
jmp
fnstcw
xchg
in
iret
push
pop
fisubl
cltd
mov
add
insl
sti
ljmp
adc
mov
pop
enter
hlt
in
xchg
sub
add
mov
popf
sub
add
mov
insb
mov
push
dec
mov
jae
mov
ds
inc
mov
or
movb
xorb
andb
outsb
add
in
inc
es
push
xor
xchg
xor
pusha
cmc
in
and
negl
xchg
jg
adc
push
aas
or
pop
out
jg
or
xor
shlb
movsl
adc
lret
aaa
xorb
xchg
lods
sar
xchg
or
in
int3
es
pop
dec
sahf
insl
mov
test
cmp
popa
jo
rolb
or
mov
lock
xchg
in
jae
rcl
pop
sbb
outsl
inc
test
or
aaa
push
data16
inc
mov
or
aam
sti
aas
mov
add
adc
out
add
arpl
mov
sub
mov
adc
loop
icebp
dec
push
cld
add
jp
inc
dec
fisubrs
cld
gs
inc
fdiv
sbb
int
xor
fistpl
adc
loope
jmp
xor
into
jl
add
jnp
dec
lds
mov
cmp
je
pop
mov
push
inc
jnp
xchg
inc
into
nop
nop
xor
iret
mov
shl
dec
push
mov
ret
das
jecxz
dec
loopne
out
orl
sbb
outsl
push
fisubs
mov
and
adc
inc
decl
mov
mov
adc
mov
fistpl
dec
sti
pop
mov
mov
call
or
mov
cmp
punpckhbw
or
sbb
sbb
jmp
push
pop
cwtl
call
push
push
int
stc
gs
nop
enter
xchg
test
hlt
adc
aas
mov
dec
stos
rcrl
aaa
sbb
adc
pusha
cli
mov
mov
call
or
sub
jp
hlt
push
mov
out
ficompl
lea
mov
stc
mov
or
les
dec
addb
cwtl
add
test
fs
rclb
mov
or
addr16
mov
xchg
lods
int
jbe
sbb
dec
inc
jns
lock
mov
ds
xor
inc
scas
clc
jns
dec
mov
mov
pop
fdivrs
ja
jae
pop
scas
cmp
add
mov
cmp
pushf
pop
inc
mov
and
or
cmc
inc
jns
xor
daa
add
repz
rorb
loopne
dec
cwtl
add
call
stc
mov
push
pop
or
push
ss
mov
repnz
es
dec
and
push
dec
xchg
cs
stc
xchg
movsb
int
pop
loope
flds
enter
cmp
mov
add
xorl
mov
repz
sbb
push
add
cli
inc
cmp
stos
xchg
movsb
xchg
mov
pushl
adc
stc
lret
insl
adc
add
gs
mov
in
add
inc
out
rolb
outsl
and
adc
add
push
mov
ja
das
loop
push
enter
inc
sbb
sub
dec
inc
in
add
lea
mov
ret
repz
daa
addr16
movsb
lahf
xchg
and
mov
cmpsl
or
dec
shll
in
addr16
add
fs
sub
mov
loopne
popf
dec
pop
scas
sbbl
rcrb
idivl
ds
mov
ret
push
mov
repz
cmp
out
mov
and
pusha
pop
mov
arpl
subl
pop
std
ficoml
and
dec
in
inc
mov
add
das
inc
cmp
pop
xchg
outsl
aas
jne
pop
cwtl
mov
add
dec
mov
dec
inc
fadds
je
mov
pop
mov
push
fs
cwtl
adc
fdivrs
pop
cmpsl
or
imull
xchg
pop
cmp
sub
push
xchg
arpl
push
adc
ja
add
ret
push
jne
mov
add
ds
lcall
mov
das
repz
pop
pop
pusha
ljmp
sbb
xorb
or
jo
mov
sbb
ss
into
push
int
lock
add
les
or
push
push
push
cli
test
sbb
xor
adc
test
cmp
or
inc
sbb
inc
jb
mov
cmp
pop
jb
mov
cmp
jbe
add
mov
and
cmp
imul
clc
push
dec
fbld
cmp
mov
icebp
push
imul
cwtl
aam
je
pop
fildl
xor
mov
fmuls
cmc
mov
aaa
and
repz
pop
out
movsb
fcompl
pusha
add
or
cmp
sub
outsl
adc
lcall
fnsave
out
dec
mov
pop
pushf
cmpsl
sbb
test
mov
inc
cwtl
xchg
stos
push
pop
das
je
pop
dec
addr16
push
cmp
mov
outsl
dec
sub
xor
outsl
std
testb
lods
scas
xor
scas
and
bswap
fnsave
mov
pop
das
lods
dec
bound
jmp
ret
and
xlat
js
in
data16
lock
jo
add
fwait
sub
imul
out
cmp
repnz
lcall
rorb
or
or
jp
mov
sahf
sub
jmp
movsl
and
push
jb
push
mov
cwtl
sahf
aad
out
les
lret
in
xor
fdivrl
lahf
test
out
decl
sub
je
push
cmp
jnp
out
das
xchg
xor
ljmp
cmp
push
mov
daa
mov
xchg
insl
shrb
add
sub
cli
rol
xor
sbb
dec
or
insb
mov
or
push
mov
push
movl
js
icebp
es
out
loopne
mov
jns
sbb
adc
jne
inc
inc
data16
and
xchg
jge
add
pop
add
inc
jb
outsl
outsb
or
test
inc
inc
mov
fnstenv
or
aas
mov
inc
add
xor
dec
stos
nop
mov
lock
adc
sbbl
and
xor
movsl
jnp
lret
lods
jge
out
pop
sbb
out
adc
push
hlt
pushf
cmp
or
mov
xor
cmpsl
or
mov
mov
ss
popf
dec
jne
lods
in
cltd
repnz
in
into
in
addl
aad
sub
popa
jno
insl
adc
xchg
dec
loopne
ds
ljmp
xchg
mov
shlb
adc
stos
sti
out
out
in
xchg
adcl
and
out
mov
cmp
adc
mov
adc
jne
push
les
cmp
pop
xchg
mov
hlt
xlat
in
xchg
mov
xchg
inc
inc
je
fs
adc
add
xor
and
aam
hlt
xlat
in
xchg
mov
xchg
inc
inc
je
fs
adc
add
xor
and
aam
inc
je
in
xchg
mov
xchg
inc
inc
je
fs
adc
add
xor
and
aam
hlt
xlat
in
xchg
mov
xchg
out
in
je
adc
mov
fistl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
out
outsb
adc
add
push
inc
sahf
mov
mov
mov
sahf
mov
inc
xor
outsb
adc
push
jno
popa
cs
ds
sahf
mov
mov
mov
cli
loope
sarl
and
adc
popa
add
inc
into
mov
mov
lahf
subl
xor
sub
in
test
cmp
hlt
loope
jne
push
neg
cmp
pop
or
add
pop
mov
sahf
add
or
rcll
adc
push
shll
cmp
outsb
out
insl
xchg
outsl
ljmp
and
xchg
add
icebp
adc
pop
loope,pn
or
and
adc
adc
das
mov
lea
mov
inc
loopne
lods
mov
cld
icebp
jno
sahf
push
jbe
push
hlt
mov
jge
sahf
movsb
ror
xchg
lret
mov
fsts
mov
mov
out
xchg
incb
jmp
scas
sarl
and
adc
push
jno
popa
cs
xchg
mov
mov
out
icebp
and
rcr
xchg
sub
sub
inc
pusha
push
imul
xor
xor
lcall
cwtl
ficoml
movsb
dec
jo
imul
mov
addr16
dec
inc
ds
inc
div
lahf
int
xchg
in
std
sahf
sti
mov
movsb
ljmp
push
gs
jne
sbb
ds
into
mov
mov
mov
sahf
loope
sarl
and
jle
push
jno
popa
cs
ds
into
mov
mov
mov
sahf
loope
sarl
xor
jecxz
rolb
jno
dec
push
pop
aas
lea
and
sbb
or
sub
imul
inc
rcrl
and
mov
xor
lret
jle
jl
jnp
or
popa
mov
aam
bound
subl
into
add
jecxz
aas
mov
cmc
mov
out
js
cld
cwtl
inc
sbb
out
xchg
mov
push
adc
cmp
dec
cmp
cld
adc
sub
dec
lea
or
movsl
mov
sub
stos
mov
jecxz
iret
inc
jmp
dec
inc
add
jl
imull
stos
add
fidivs
imul
push
mov
roll
push
pop
cltd
xchg
das
aaa
or
in
mov
outsb
adc
pusha
outsl
mov
pop
lahf
add
repz
sbbb
pusha
rclb
push
jns
cmpsl
ja
stos
movsl
jge
insl
mov
dec
das
adcb
stc
subl
cld
jnp
leave
cltd
sbb
lretw
loope
or
adc
pop
pop
pop
inc
mov
dec
sub
dec
decl
scas
std
ljmp
pop
mov
test
jb
mov
xor
jge
daa
add
dec
cmc
or
test
inc
cmpb
jb
inc
fisubs
mov
inc
cld
fidivs
cmpsl
push
cwtl
shrl
lods
lcall
sub
mov
scas
mov
mov
lock
push
add
out
fsubrp
push
dec
jbe
dec
loope
jl
jbe
cmpsl
and
jge
xor
and
das
adc
add
notb
std
jbe
dec
arpl
cmp
sbb
insl
xchg
out
sbb
arpl
mov
push
inc
into
pop
xchg
aad
outsl
out
mov
test
outsb
sub
mov
pop
pop
inc
addr16
xorl
mov
incl
cmp
lock
in
test
rcrl
jecxz
jle
imul
dec
push
lea
arpl
jg
testl
xor
lods
lea
cmp
sbb
out
flds
shll
sub
inc
aas
loopw
mov
inc
mov
and
ds
out
dec
shl
sub
into
sbb
shrb
fistpll
xor
add
jmp
or
icebp
mov
lods
rorb
cmp
testb
outsb
aam
std
sub
icebp
insb
jle
adc
fmuls
sbb
mov
pop
xor
pop
and
jg
test
lods
push
out
push
out
jp
stos
jecxz
or
hlt
subb
daa
mov
fwait
inc
lods
mov
xor
mulb
mov
jne
push
inc
aaa
adc
push
addb
inc
jle
aas
inc
and
ja
xor
addr16
mov
aad
inc
jmp
fcom
jo
inc
pop
ss
jne
push
lret
push
cmp
rcll
popa
mov
cltd
mov
and
sub
cmp
imul
lock
xchg
repz
xchg
cmp
cltd
gs
test
loopne
or
xchg
daa
cmp
mov
cmp
sub
into
enter
es
dec
enter
mov
sub
rorl
pop
jb
push
sbb
mov
xchg
in
aaa
scas
xor
sub
push
cmpsl
sbb
dec
xor
push
mov
add
add
out
xchg
sub
xlat
jmp
adc
push
pop
out
xchg
bound
inc
dec
sbb
cli
sbb
into
mov
ss
mov
push
daa
adc
in
mov
xorl
mov
jmp
jo
jbe
jmp
fiaddl
and
mov
push
lods
movsb
lret
loope
inc
pop
mov
cwtl
test
push
adc
jo
lret
cltd
orl
push
jmp
inc
and
aad
dec
roll
ret
aad
test
js
xchg
scas
test
sub
sub
dec
mov
add
dec
adc
add
dec
add
ret
loop
sti
fwait
cmp
rolb
js
jge
lret
fimuls
insl
roll
ja
mov
loopne
jmp
adc
movsb
js
movl
inc
cmp
fisubs
inc
std
and
cmp
adc
shlb
sbb
repnz
ficomps
mov
and
and
sahf
mov
nop
and
sub
push
sub
mov
add
test
int3
jg
pop
test
sahf
mov
mov
cs
fs
sarl
dec
not
add
and
pushf
lock
lret
aad
les
fmulp
jmp
and
sahf
adc
lods
aas
adc
adc
sbb
fistps
cmpsl
pop
adc
or
movsb
rorl
pmaddwd
stos
out
test
sarl
cwtl
xchg
orb
jecxz
idivl
xchg
adc
loopne
mov
inc
pusha
icebp
mov
scas
nop
xor
cmpsl
mov
js
or
add
jg
mov
lods
mov
jne
adc
mov
test
jle
imul
bound
pushf
loop
leave
inc
dec
xchg
jns
push
push
adcl
jg
cmpsb
es
nop
fs
inc
sbb
mov
shr
nop
shrb
cmc
jns
testl
or
jl
mov
cmp
or
dec
scas
shrl
inc
jno
ret
fcmove
push
mov
mov
xchg
sbb
in
add
mov
subl
shrb
cmpsl
adc
push
pusha
adc
xchg
xchg
int
lock
insl
xor
jns
loop
fnstcw
ljmp
dec
ja
and
aas
enter
fdivs
push
sbb
sbb
dec
mov
popa
movsl
jae
out
dec
xor
sub
loope
pop
lret
pop
cld
inc
sbb
or
sbb
pop
cmp
mov
test
cmp
aad
repz
xchg
adcl
sub
dec
jne
xor
lods
testb
jbe
dec
adc
push
jnp
pusha
dec
iret
add
adc
mov
jecxz
dec
je
lds
mov
or
and
scas
imul
shlb
xor
data16
lock
sbbl
mov
cmp
and
inc
sbb
sbb
jbe
int
leave
push
add
xchg
fisttpll
sbb
xor
std
addl
jne
movsl
mov
push
fldt
pop
and
and
jmp
pop
and
dec
lods
mov
pop
sbbb
sub
mov
adc
mov
and
xchg
sub
sub
cmp
cltd
add
jb
mov
pop
subb
pop
pop
aas
xor
pmaxub
testb
mov
aas
xchg
out
jecxz
cmpsb
jb
in
or
xor
shll
insb
push
outsl
and
pop
mov
add
add
pop
sbbl
jmp
aad
loope
adc
les
fwait
pop
insl
jno
xchg
or
les
lcall
xor
lahf
push
push
sub
movsb
orb
ret
mov
jecxz
fcoms
stos
add
mov
test
jp
mov
pusha
cmpsl
jecxz
icebp
sub
sarl
cmp
push
push
sub
pop
lods
dec
icebp
and
cltd
nop
xor
movl
or
andb
pop
sbbb
lret
out
dec
aas
int
cli
cmpsb
inc
add
mov
xor
adc
mov
mov
sub
or
daa
sbb
push
mov
xchg
cmp
push
xchg
ss
test
adc
xor
repz
imul
jns
fmul
call
lds
or
in
pop
xchg
or
ljmp
inc
dec
sti
mov
push
test
push
mov
idivl
bound
sbbb
xor
ret
pop
fcompl
jl
fcmovu
adc
jnp
mov
jb
inc
jb
clc
sbb
out
inc
or
negl
es
repnz
lcall
and
outsb
shl
push
and
or
inc
ss
push
pop
movsb
enter
cmpsl
add
cli
and
jno
loopne
mov
fld
dec
icebp
jp
arpl
mov
pop
inc
pop
shl
and
jno
add
mov
xchg
adc
fcmovbe
or
outsl
ficoms
das
cmp
imul
repnz
xchg
ret
or
shll
int
in
sbb
xchg
pop
mov
cmp
jmp
fisubrl
jge
mov
xor
addr16
ret
insb
lahf
lcall
or
mov
in
push
jb
inc
and
loope
dec
mov
mov
imul
cld
dec
sub
xchg
xchg
adc
jle
ret
cli
inc
adc
push
add
lock
dec
rorl
adc
cmp
mov
xor
xor
cld
aad
leave
call
xchg
xchg
fwait
push
cmp
push
sub
out
leave
push
sbb
ret
xchg
call
inc
cmp
mov
aam
scas
lds
aam
pop
fmuls
or
iret
cs
leave
push
ret
rep
outsb
mov
rclb
sbb
fwait
adc
leave
push
adc
cmpsb
mov
sbb
scas
rorl
or
jp
out
lods
aaa
shrb
xchg
nop
outsb
movsl
mov
int3
xchg
js
mov
cmp
movsb
sbb
dec
jmp
and
int3
leave
stos
jo
and
shrl
and
scas
in
mov
test
mov
data16
dec
xor
les
jmp
mov
shlb
in
push
sub
push
xorl
movsb
cmp
xchg
xchg
movsb
into
or
pop
dec
mov
lds
push
push
jae
mov
dec
jo
out
pop
in
fstps
and
fidivrl
sbb
sahf
test
xor
int3
pop
pushf
decl
arpl
stos
push
cmp
add
lcall
jno
shrb
das
repnz
stos
push
sub
ljmp
inc
ficoml
adc
add
xor
add
out
ja
iret
adc
pop
scas
dec
fwait
sbb
push
aam
outsl
mov
adc
je
mov
xor
or
out
fistl
ret
and
add
add
mov
push
aaa
sti
mov
nop
sub
inc
mov
cmp
stos
dec
xlat
xchg
into
cmpsb
repz
pop
xchg
outsb
pushf
mov
xchg
dec
push
lcall
mov
adc
pop
inc
jmp
cld
pop
insl
lods
rcrl
pop
and
push
sbb
and
inc
fs
das
aas
pop
or
and
cmpsb
push
or
addr16
mov
std
fnstenv
daa
and
out
xlat
int
aas
outsl
adc
mov
outsb
jle
lock
xchg
fdiv
sbb
mov
scas
pop
jne
cmpsl
les
sub
scas
cli
jae
cli
inc
pusha
roll
and
insb
outsl
testb
xor
and
jp
iret
dec
jbe
inc
or
loop
cmpsl
xchg
xor
sub
cli
jle
cmpsb
out
mov
dec
jp
bound
push
jae
lds
ret
pop
mov
sbb
or
push
sub
hlt
aad
into
xor
jg
push
rcr
pop
adc
fildl
stos
inc
pop
lock
gs
sahf
sbb
sub
loope,pt
xchg
adc
lds
xor
mov
leave
add
in
adc
out
mov
mov
add
push
es
pop
ret
cmpsl
loop
adc
adc
xor
cmc
push
dec
in
push
iret
cmp
or
xor
jl
cmp
mov
mov
pop
pop
sti
push
add
aaa
daa
cmp
outsb
adc
jmp
push
jp
hlt
fdivs
roll
sub
add
jnp
pusha
mov
add
cltd
test
sbbl
xorb
dec
xor
mov
xor
movsl
jmp
sbb
fcomps
cmpl
fwait
adc
sbb
dec
test
bound
jp
add
inc
xchg
lods
jg
jge
add
xchg
jecxz
ret
scas
sbb
in
test
out
das
mov
popf
push
xchg
movsb
xlat
xor
out
mov
cmp
inc
test
xchg
mov
push
sbb
pop
in
push
std
sbb
les
daa
cmp
movsl
jae
mov
adc
adc
sbb
xchg
mov
inc
jge
mov
push
pop
popa
dec
cwtl
mov
push
out
rcrb
jae
lds
add
or
push
xchg
outsl
push
adc
call
fnstenv
jge
push
pop
das
add
xchg
lods
test
adc
inc
mov
lods
cwtl
mov
pop
dec
imul
add
xlat
test
add
sti
cmp
xchg
sahf
pop
sub
sub
roll
aad
in
pop
imull
adc
mov
out
fsubrl
adc
jno
cmpsb
hlt
adc
xchg
out
repnz
inc
mov
test
in
jno
cmp
stos
mov
clc
lret
xchg
pop
daa
pop
xor
pop
addb
and
sub
adc
out
push
and
xchg
xlat
dec
adc
mov
fistpll
fnstenv
cmp
mov
test
jnp
pop
xor
sti
push
or
sahf
aad
cltd
testb
pop
lret
dec
shl
mov
sbb
aam
xor
out
xchg
mov
mov
push
divl
out
pop
sbb
and
in
mov
js
jo
and
and
lds
ljmp
fs
fnstsw
push
jno
stos
sbb
cld
add
push
jbe
ficoms
sub
adc
and
mov
bound
mov
sbb
push
arpl
out
fimuls
test
movsb
insb
sbb
mov
rclb
xchg
push
inc
mov
jne
rclb
inc
xchg
cmp
lcall
jmp
dec
add
sbb
int
mov
ljmp
mov
jg
lods
cmc
not
mov
push
js
dec
dec
imul
ljmp
icebp
sub
stos
bound
pop
jb
movl
dec
mov
sbb
mov
popa
mov
arpl
pop
mov
push
in
add
xchg
jbe
cwtl
daa
fsubrl
arpl
pop
pop
fcmovnu
loop
out
loopne
fstpl
sbb
lcall
pusha
stc
dec
rolb
ss
jmp
sub
fs
adc
mov
in
inc
push
inc
and
sub
or
arpl
mov
out
call
pop
sbb
and
and
popa
sbb
push
shrb
mov
lea
mov
mov
insl
mov
inc
leave
xchg
add
mov
loope
stc
jae
test
dec
sub
jae
cmpsb
mov
push
cmp
sub
insb
sbb
fsubl
push
jno
dec
outsl
push
lcall
dec
sti
aaa
dec
jo
add
dec
add
xchg
mov
mov
int
cmp
stos
outsl
filds
std
mov
orb
pop
sbb
sbb
cmp
push
xor
daa
cmp
jns
mov
clc
push
mov
sub
movsb
les
jp
xor
lods
push
pop
mov
dec
je
hlt
outsl
lret
and
nop
or
mov
pop
ret
mov
jae
lods
pop
pop
dec
adc
addl
jg
adc
shll
call
inc
icebp
imul
pop
pop
or
push
mov
dec
adc
pop
rdpmc
xor
cld
mov
leave
rol
jecxz
add
lret
cmp
pop
or
icebp
fdivrp
inc
cs
lea
call
sbb
xlat
bound
xor
mov
dec
dec
cmp
adc
jp
cmp
mov
pusha
sub
iret
cmp
or
stos
cmp
and
pop
sysenter
jmp
adc
xor
push
or
loope
gs
ds
sbb
mov
cmpsb
jne
movsl
add
or
push
clc
lea
addb
sub
mov
push
cld
test
rcrb
sbb
loope
add
ja
dec
push
jnp
out
or
cmp
xor
outsb
clc
inc
shll
pop
sbb
push
xchg
aad
push
scas
jp
call
fnstenv
push
cmp
cmpsb
aas
cmp
rorb
sbb
cmp
mov
mov
test
arpl
push
leave
pop
fimull
push
inc
inc
dec
mov
ror
xchg
add
mov
test
jne
or
push
das
add
scas
mov
mull
or
pop
std
and
addr16
ljmp
dec
pop
mov
subb
sbb
pop
sub
mov
inc
add
and
hlt
or
bound
rorl
or
js
add
mov
add
push
and
mov
insl
mov
sbb
lock
ds
add
arpl
inc
jecxz
or
and
xor
test
jp
mov
cmp
imul
push
and
lds
aad
add
icebp
push
mov
int3
mov
cs
push
loop
bound
addl
adc
movsb
adc
aaa
je
test
movsb
pop
ss
rcrb
sub
xor
fldl
pop
sub
lds
push
dec
cmpsb
aaa
mov
test
aam
xor
sub
xor
fs
iret
lods
push
outsl
sbb
push
cltd
mov
fstps
stos
repz
mov
outsb
cmpsb
add
cwtl
mov
and
mov
mov
xchg
imul
xor
jne
lods
xchg
mov
in
mov
aaa
fwait
mov
push
pusha
clc
adc
xchg
mov
pop
pop
mov
imul
and
addr16
or
dec
lock
loop
or
fildl
push
mov
mov
shll
jb
into
cmc
ret
insl
lds
jbe
js
cmp
ds
pop
dec
jl
inc
cltd
iret
push
mov
loopne
cltd
lods
and
imul
js
pop
inc
adc
add
adc
push
or
push
add
push
and
add
jo
xor
movsl
mov
xor
xor
mov
xchg
jg
data16
negb
repnz
adcl
adc
dec
je
sbb
rorl
xchg
mov
movsl
xor
out
test
leave
rolb
jne
push
push
xchg
mov
test
incl
pop
cltd
dec
lea
ljmp
inc
mov
add
jns
jg
cmpsb
cmc
cmp
xchg
notb
jmp
leave
nop
push
and
xchg
inc
rcl
push
mov
xchg
fisttpl
leave
sbb
cmp
mov
adc
stos
push
scas
jnp
sbb
test
mov
mov
mov
pop
sbb
cmp
pop
mov
lods
cmp
aaa
xor
or
popa
movsl
data16
pop
jle
inc
dec
shlb
or
mov
mov
cmp
cmp
xor
fs
jbe
jno
dec
aam
xor
in
pop
mov
jb
out
mov
pop
divl
shlb
sahf
jo
fs
or
les
test
outsl
addr16
lods
fucomp
cmpsb
and
inc
stc
stc
lret
fwait
add
or
cli
and
mov
jno
call
pop
push
dec
pusha
lcall
dec
and
cli
inc
sub
bound
lret
lcall
rcr
mov
das
sub
push
inc
repnz
inc
mov
mov
data16
push
xchg
jbe
aam
inc
loopne
test
pushf
xchg
lds
les
scas
push
xor
xchg
sub
pop
loop
dec
mov
or
nop
mov
nop
inc
dec
popf
adc
jp
jmp
ror
mov
insl
mov
lret
test
dec
test
fcmovnu
pop
pop
lock
cli
test
test
mov
leave
mov
cld
cmp
xchg
xor
jle
mov
ljmp
test
notl
jne
cmp
dec
pusha
mov
daa
loopne
das
insb
inc
mov
sbb
je
shlb
sub
dec
and
fwait
xchg
outsb
jl
imul
lds
pop
mov
push
and
mov
fistpl
loope
push
push
adc
clc
mov
pop
cld
cmp
ja
hlt
dec
ss
sbb
int
scas
push
in
and
xchg
mov
flds
mov
pop
es
jge
cltd
ret
cwtl
mov
cmp
mov
jl
and
ret
xor
sbb
ret
mov
insb
dec
push
xchg
mov
sbb
rol
jno
cmp
fnstsw
ret
dec
and
pop
stc
sar
cs
in
aam
lret
sarl
in
sub
mov
dec
test
push
add
das
cmp
add
push
jg
mov
xchg
rcll
movsb
mov
adc
push
jno
popa
cs
ds
into
mov
mov
mov
sahf
loope
sarl
and
jle
push
jno
popa
cs
ds
into
mov
mov
mov
sahf
loope
sarl
and
jle
sbb
push
aas
inc
lret
mov
mov
xchg
stos
rorl
and
adc
push
jno
loope
sarl
or
idiv
jns
push
push
cs
ds
loopne
lock
rcrb
roll
sub
testl
xor
loopne
lock
rclb
mov
daa
call
testl
xor
loopne
lock
rclb
mov
daa
nop
xlat
pusha
in
xchg
xorb
je
addr16
outsb
into
arpl
xchg
es
sbb
lods
sbb
sub
std
mov
sub
gs
pop
mov
dec
mov
pushf
lcall
mov
lcall
sbb
and
inc
test
sub
inc
test
xor
jae
lds
sar
out
bound
xchg
xor
cmpsl
test
movsl
pusha
aam
call
clc
mov
ljmp
push
les
mov
and
adc
ret
nop
lcall
ljmp
jp
insb
push
jae
xor
cmpsl
out
imul
dec
rcrb
js
mov
aad
jno
and
mov
aam
jo
movsl
add
ja
rclb
mov
daa
nop
xlat
pusha
jo
inc
out
xchg
and
jns
in
mov
shlb
jb
push
les
and
push
sarb
pop
and
shlb
dec
cld
jb
hlt
movsl
sub
xor
ficoms
jg
movsb
inc
mov
push
mov
mov
andb
xlat
pusha
jo
inc
out
xchg
and
adc
inc
lock
rclb
mov
daa
nop
xlat
pusha
jo
inc
out
xchg
and
adc
es
ljmp
pop
addr16
shlb
jmp
add
mov
mov
imul
xlat
cmpsb
addr16
in
daa
xor
je
dec
mov
cmp
sbb
mov
and
cli
and
mov
or
inc
jno
imul
xor
push
int
cmc
xor
push
les
addr16
outsl
in
movsb
dec
lcall
dec
mov
inc
mov
lods
xchg
clc
out
js
and
and
aas
lret
push
xchg
dec
pop
xchg
mov
xorl
and
dec
loope
inc
in
faddl
adc
xor
out
popf
popl
and
sub
decb
test
mov
jnp
cmp
es
js
mov
test
inc
or
inc
push
sbb
mov
inc
xchg
push
jge
adc
mov
inc
pop
stos
rorb
ficomps
inc
gs
jecxz
fs
jne
inc
arpl
imul
outsb
inc
repz
aad
xor
cltd
lahf
ljmp
push
inc
sbb
mov
mov
loope
sub
test
cmp
ret
insl
test
pop
dec
jmp
pusha
jbe
lock
mov
push
jle
ficoms
fwait
cmp
out
addl
jle
mov
ljmp
out
sbb
inc
sub
dec
ds
cmp
pop
xchg
es
inc
vpsubw
cmp
loope
inc
mov
pusha
das
cmc
hlt
sbb
repz
popa
stos
repnz
sub
stos
orb
push
pop
dec
inc
mov
fildll
loopne
pop
jmp
sub
cld
xor
bound
ja
cld
ljmp
jnp
das
stos
push
pop
sbb
fiaddl
or
es
jno
fcomps
fsubl
in
xchg
ja
xchg
daa
std
sub
jbe
lret
daa
xchg
add
mov
jbe
mov
addb
pop
xchg
sbb
add
push
jns
je
push
stos
xchg
mov
fwait
outsl
repz
xchg
jbe
dec
xchg
dec
idivl
paddb
fs
push
rolb
cmp
shlb
arpl
repnz
arpl
xor
add
cmc
cli
into
push
xchg
out
lods
pop
imul
ss
iret
test
push
aam
ljmp
xor
mov
adc
das
aad
dec
inc
fcmovu
pushf
mov
pop
mov
mov
cmp
popf
loope
dec
fucom
scas
mov
xchg
push
nop
and
push
test
into
data16
xorl
sarl
jbe
subl
adc
cmpsb
adc
sub
cmc
loop
push
mov
sub
jl
mov
adc
pop
push
lds
ret
ja
movsl
mov
or
movsl
lock
fcoml
mov
repnz
and
sub
outsb
jp
add
inc
xchg
pop
mov
iret
lods
mov
adc
xor
orl
shll
andb
pop
test
bound
add
cmp
fcomps
xor
xchg
and
stc
arpl
fistpl
dec
lods
push
cmpsb
test
fs
and
add
lcall
mov
sbb
add
and
add
roll
je
cli
ret
data16
xchg
sbb
scas
ret
jbe
xor
xchg
add
mov
jae
mov
scas
fwait
jp
jecxz
daa
push
push
xor
scas
pushf
add
push
xor
jne
mov
fwait
scas
inc
jp
push
inc
pop
dec
dec
hlt
stc
and
mov
icebp
sar
xchg
adc
in
xor
dec
aad
inc
sbb
or
enter
out
sub
mov
loopne
mov
js
imul
gs
adc
mov
and
scas
pusha
loop
imul
mov
xor
pop
dec
xlat
xchg
xchg
stc
mov
fwait
xor
test
leave
aaa
mov
leave
mov
pop
nop
out
pop
fstpt
mov
ret
sub
mov
out
push
fdiv
shrl
scas
roll
out
sbb
push
ja
fadds
add
xchg
xchg
lea
xor
mov
or
jnp
push
subb
push
xchg
xchg
aas
jns
push
inc
inc
data16
out
repnz
popa
or
adc
dec
cs
jnp
orl
add
jb
bound
mov
call
push
fidivs
test
cmp
push
aam
pop
add
ret
inc
or
int3
pop
jbe
xor
iret
lods
mov
jecxz
out
popf
push
dec
inc
push
test
add
insb
mov
je
dec
insb
aam
nop
jnp
dec
fs
cmp
push
xor
mov
repnz
daa
lods
enter
std
or
push
aaa
dec
cmpsb
push
inc
adc
dec
aad
bound
leave
add
out
xlat
cltd
mov
ret
stos
xchg
sbb
stos
xchg
xor
mov
or
jbe
dec
jle
xchg
mov
stos
mov
leave
xor
fstl
xchg
in
scas
cmpsl
pop
pop
dec
lret
dec
stos
mov
lret
mov
movsl
les
xchg
cwtl
daa
icebp
mov
or
iret
aaa
mov
cli
inc
shr
mov
pop
sub
mov
pop
inc
and
push
xor
aam
sub
cs
and
loop
in
outsl
lahf
cmp
pop
and
movsb
cmp
dec
imul
sbb
mov
cs
dec
test
add
jnp
pop
dec
jne
and
push
mov
push
cmp
push
test
xor
cmp
push
inc
mov
loope
out
or
jno
mov
lcall
sub
cmp
sub
inc
pop
test
rol
ficompl
push
shll
imul
xchg
inc
cmc
dec
outsb
das
in
sbb
inc
scas
inc
addr16
pop
psubq
push
gs
std
xchg
mov
add
jle
fisubs
sub
mov
inc
jle
pusha
push
addr16
inc
mov
sahf
mull
xchg
xor
mov
daa
mov
icebp
cmp
or
xchg
xchg
rclb
lcall
pop
push
fcmovne
ficompl
sti
sub
xor
jb
dec
or
add
out
push
mov
icebp
outsl
sahf
leave
in
leave
roll
inc
iret
loope
into
sar
ja
test
push
sahf
stos
loop
ss
and
push
push
call
lods
mov
mov
jmp
adc
movsb
dec
mov
movsb
inc
andb
nop
cld
push
jo
push
mov
inc
inc
fst
mov
pushf
push
mov
psrld
cmp
add
dec
lock
in
ret
pop
in
sub
or
or
dec
mov
out
mov
das
push
mov
sti
sub
int3
cmp
outsb
lea
push
pop
mov
lods
mov
loopne
imul
mov
dec
dec
mov
xchg
addr16
loope
jle
adc
test
out
call
and
pop
outsl
outsb
outsb
xor
pop
sbb
or
shl
pushf
and
dec
add
dec
lret
out
lock
adc
pushf
shlb
mov
rcr
pop
push
rolb
mov
inc
jno
gs
jl
and
sbb
adc
mov
cmp
mulb
cmp
enter
xchg
aam
fdivs
inc
faddl
into
cmpsb
push
sub
cmp
jo
pop
rep
nop
ja
jl
add
cmc
add
pop
repnz
outsl
je
negb
movsb
jmp
aas
out
les
arpl
xchg
pop
repnz
pop
sub
mov
test
sub
les
inc
loopne
cli
xlat
les
sarl
cmpsl
je
int3
adc
scas
aaa
insb
arpl
es
jmp
mov
inc
outsb
dec
out
sbb
jnp
xchg
pushf
arpl
xchg
addr16
mov
dec
xchg
inc
outsb
sub
mov
ret
add
cltd
orl
push
xor
loopne
mov
push
repz
loopne
dec
fldt
push
inc
out
inc
rorb
clc
sub
ret
inc
orl
xor
shlb
adc
push
xchg
mov
xlat
inc
inc
mov
dec
cwtl
out
cmc
sbb
outsl
fwait
sub
bound
nop
lahf
inc
test
mov
mov
add
aam
add
push
nop
dec
pop
sbb
sbb
adc
push
or
hlt
push
lret
dec
jo
repnz
out
leave
sbb
test
inc
mov
sub
into
mov
sarl
decb
scas
sub
adc
xchg
cmp
push
clc
sbb
adc
insl
in
repz
adc
pop
xor
sbb
mov
mov
pusha
lods
jno
out
mov
movsl
shl
adc
sbb
cmp
bound
xor
jae
mov
movsl
ljmp
push
adc
es
mov
sbb
rorl
pop
imul
mov
lahf
or
sbb
jae
dec
aas
jl
fucomp
cmpsl
add
cwtl
mov
dec
in
and
mov
xchg
cmp
or
sub
adc
adc
cs
inc
ljmp
andb
pop
loopne
mov
xlat
movsb
arpl
mov
mov
mov
mov
mov
stos
xchg
rcr
mov
sbbb
negb
loop
jbe
mov
mov
sti
sahf
adc
xor
and
subl
xor
out
sbb
jmp
lds
enter
pop
jb
mov
jge
daa
repz
jp
sbb
mov
insl
ja
mov
outsl
stc
mov
nop
lret
pusha
pop
pop
rcr
ja
sbb
std
nop
add
add
cltd
dec
sub
dec
pop
sbb
cwtl
leave
mov
subl
mov
sbb
mov
inc
mov
xor
push
adc
jge
or
mov
sub
outsb
and
imul
jns
mov
pop
xor
ja
fbstp
fcompl
mov
mov
mov
jp
addr16
mov
push
andb
adcb
or
mov
incl
insb
pop
inc
jle
mov
pop
loop
lahf
in
in
dec
push
sbb
jmp
xlat
push
mov
leave
push
ficompl
testl
add
mov
or
mov
movl
cmp
xor
mov
dec
xchg
shrb
cs
mov
push
add
bnd
out
dec
mov
loop
add
dec
cmp
sbb
repnz
testl
adc
int3
sbb
dec
cmpb
or
daa
or
pusha
cmc
dec
sub
popa
push
mov
lods
mov
outsb
test
into
and
jle
repz
cld
imul
mov
lcall
and
xchg
rcr
adc
inc
mov
ja
jle
jnp
dec
pslld
nop
mov
add
imul
jno
arpl
punpcklbw
and
jbe
test
add
push
xor
and
inc
mov
shrl
das
int
xor
movsb
arpl
repz
push
and
xor
ret
or
jns
icebp
xor
or
sbb
lods
jno
mov
mov
arpl
cmp
ret
cld
addr16
pop
sbb
pop
into
cmpl
int3
test
fstps
scas
into
out
inc
dec
cmc
sbb
push
push
hlt
outsb
mov
repnz
xor
sbb
pushf
fs
dec
out
aas
fstpt
inc
out
pop
sti
jg
or
dec
fisttps
pop
cmp
jb
mov
repnz
mov
push
push
sbb
or
sbb
jns
add
mov
dec
sbb
cmp
shlb
data16
fcmovnu
and
lcall
ficoms
inc
aas
xchg
addl
jp
dec
mov
pop
rolb
xchg
sub
test
iret
fisubrs
int
outsb
imul
mov
dec
loop
ljmp
out
mov
gs
call
push
mov
mov
jb
sahf
push
cmp
aad
xor
ljmp
js
sbb
sub
test
mov
fistpll
cmc
pop
xchg
jmp
lret
das
fstps
out
enter
aad
int3
pop
add
lock
ror
or
jecxz
bound
nop
insl
ljmp
dec
mov
xchg
cli
xor
retw
push
sbb
xor
cmp
sbb
iret
shlb
roll
aad
cmpb
arpl
gs
sbb
xchg
faddl
cltd
pop
fs
add
lret
push
mov
dec
mov
aad
push
ja
push
adc
icebp
stos
mov
daa
imul
cwtl
xchg
sub
dec
std
cmp
daa
or
xchg
enter
pop
imul
fldenv
cmpsb
sub
mov
push
mov
scas
add
inc
lret
shrb
jmp
stos
sub
xchg
mov
lock
fiadds
jg
movsl
cwtl
les
mov
aam
idivl
bound
add
aaa
push
mov
add
int
into
lahf
stc
in
fs
xchg
insb
push
dec
je
push
aas
test
test
jmp
aaa
cmp
shrl
insb
fwait
push
xor
cmp
inc
and
popf
lock
or
xchg
push
jl
int3
mov
pop
inc
test
adc
cs
pop
daa
sbb
push
mov
out
pushf
loopne
pop
shlb
stos
inc
jbe
aad
iret
es
jle
enter
mov
ret
inc
adc
xchg
push
cli
popf
shll
hlt
lds
inc
add
mov
pop
fcmovnu
fdivs
adc
sub
jmp
sbb
int
xor
mov
push
xor
mov
cli
icebp
xor
dec
bound
xor
out
mov
popa
sbb
hlt
je
add
and
mov
xchg
loope
jg
xchg
std
add
hlt
pusha
pop
lcall
inc
sbb
je
test
mov
jae
jb
sahf
loopne
sub
cmp
stc
out
mov
popa
fsubs
jo
adc
or
in
fmull
ret
repnz
shll
cmp
or
adc
jecxz
and
cmp
es
push
in
shl
inc
je
pop
je
mov
shl
outsb
inc
sbb
push
mov
add
int
jb
inc
pusha
pushf
and
push
stos
adc
jmp
sub
push
inc
mov
enter
mov
dec
add
daa
push
jecxz
xchg
mov
test
add
js
dec
mov
xchg
not
arpl
dec
mov
loopne
add
arpl
inc
sarb
mov
adc
or
clc
popf
jge
pop
call
jg
add
test
sbb
mov
mov
mov
lret
pop
insb
and
lcall
inc
pop
jnp
sbb
adc
pop
or
mov
sub
or
lods
adc
mov
mov
cmp
bound
outsl
in
cmp
jg
scas
mov
popa
pusha
dec
repnz
ds
mov
aad
andb
in
outsb
xchg
lret
mov
inc
and
rcrl
sub
xchg
sbb
pop
or
inc
mov
inc
sub
gs
ss
pop
ja
jmp
push
gs
jbe
out
fwait
xchg
xorl
sbb
data16
push
in
add
mov
movsb
sarl
mov
inc
stos
lret
xchg
or
lret
popf
sub
mov
xchg
pop
push
stos
push
adc
loopne
loopne
dec
dec
pop
stc
sbbb
add
cmp
sub
sahf
mov
jp
dec
inc
aad
je
pusha
push
jnp
idivl
mov
cmp
ficompl
ljmp
int3
sub
mov
xlat
sti
push
loopne
es
adc
dec
cmpsl
subb
jns
lahf
jge
xchg
inc
xchg
fsubrl
and
mov
in
mov
push
lds
push
in
mov
loop
inc
fcompl
gs
stos
mov
jp
sbb
mov
xchg
dec
pop
into
in
jbe
out
xlat
mov
imul
cmp
mov
xchg
xor
rcrl
lret
test
ret
xor
jl
lock
inc
faddl
cmp
rclb
das
jb
ljmpw
jne
sbb
hlt
mov
inc
xor
mull
nop
sub
in
mov
dec
movsb
das
clc
aas
popf
ja
data16
les
pushf
mov
mov
ds
fcmovbe
cmp
pop
pop
dec
xchg
add
push
ja
movsb
fcmovb
ja
out
test
subl
rorb
jecxz
lahf
jnp
imul
test
shll
xchg
xchg
mov
dec
jo
dec
jno
pop
sub
pop
or
cmpsb
std
cmp
cltd
jl
jecxz
lock
outsb
lret
jnp
out
fnstenv
sub
xor
sbb
cmp
or
push
shlb
fs
ret
cmp
sbbb
imul
adc
int
mov
inc
cltd
pop
shll
add
in
scas
xchg
add
pop
add
aaa
imul
xor
mov
mulb
push
mov
add
xor
push
jo
mov
in
sbb
jmp
leave
ja
mov
jp
stc
and
xchg
or
xchg
jne
and
aad
das
hlt
test
imul
mov
daa
repnz
cmp
mov
out
push
xor
loopne
shrb
pushf
pusha
nop
mov
push
xor
dec
out
mov
sbb
scas
lret
mov
xchg
sub
pop
imul
fnsave
call
cmpsb
aad
fs
cmpsb
adc
fwait
mov
pop
xchg
push
cmpsl
imul
ja
sub
lret
cmp
jbe
jle
adc
adc
sarl
pop
and
sbb
rcrb
sub
mov
jge
sub
or
mov
jmp
movsb
and
mov
mov
xor
scas
mov
xor
pop
cwtl
scas
shll
cmc
dec
sub
scas
xchg
pop
or
mov
xor
imul
mov
mov
call
cmp
fs
mulps
sub
xchg
sbb
pop
push
dec
ss
fldcw
push
dec
rolb
aas
repz
mov
cwtl
cli
cltd
pushf
dec
dec
xor
mov
jno
and
ja
mov
test
xchg
mov
out
pop
jb
inc
xchg
ljmp
xchg
cmc
fcomp
fstpl
call
push
insb
std
leave
lahf
neg
lret
insb
dec
aam
or
fisttps
cmp
orl
outsl
push
mov
int3
mov
dec
pushf
jecxz
xchg
sub
cltd
cwtl
test
sar
cmpsl
dec
leave
ja
movsb
inc
fistpl
stos
sub
mov
div
xor
test
mov
mov
lret
jb
adc
sar
mov
mov
mov
leave
dec
shll
gs
mov
xor
and
mov
call
sub
mov
test
mov
les
adc
pop
int
add
ljmp
stos
mov
xor
mov
ja
push
ja
dec
mov
sbb
ljmp
xor
adc
data16
or
aad
sbb
shll
jecxz
lods
mov
inc
lea
rep
lds
fwait
mov
inc
or
outsb
cmpsb
xor
jns
or
fdivrl
inc
call
adc
inc
xchg
insb
mov
xchg
sbb
and
jl
nop
rcl
hlt
les
sub
push
inc
jg
scas
lcall
mov
loopne
lret
add
sbb
mov
mov
dec
sub
sbb
dec
cmp
sahf
xor
out
fs
pushf
dec
mov
mov
es
jp
push
jnp
mov
inc
shlb
push
mov
xlat
dec
out
push
les
call
push
add
mov
dec
jmp
scas
lahf
add
sbb
cltd
into
adc
les
aad
jmp
pop
out
pop
xor
inc
out
adc
xchg
xchg
mov
mov
mov
or
cmp
loopne
popf
mov
dec
dec
mov
mov
jbe
sbb
sbb
shrl
sbb
sbb
call
add
test
mov
add
test
sbb
aas
imul
aaa
jnp
sub
nop
fldl
subl
mov
daa
nop
xlat
pusha
jo
inc
out
xchg
and
adc
inc
lock
rclb
mov
daa
nop
xlat
pusha
jo
inc
out
xchg
and
adc
inc
lock
rclb
mov
daa
nop
pusha
jo
inc
out
xchg
and
adc
inc
lock
rclb
mov
cmpsl
nop
sub
ficompl
out
loopne
bswap
dec
lcall
rcrl
loop
xchg
add
mov
in
clc
jb
adc
xchg
mov
ret
inc
loop
xchg
and
xor
add
adc
out
hlt
adc
aam
movl
xchg
push
xor
cmp
cmp
mov
into
sbb
jo
data16
mov
xor
in
push
outsl
jno
sub
dec
add
cmp
xor
mov
mov
pushf
movsb
fs
aam
aam
and
xor
xrelease
hlt
xor
ret
xor
jo
clc
add
inc
xor
js
push
add
xchg
push
xor
je
inc
push
fs
add
hlt
dec
pop
mov
or
and
sub
testl
sub
mov
or
cmp
jb
shl
andl
cmp
test
imul
sbb
insl
push
imul
ds
cltd
popa
in
loopne
rcll
shll
and
push
loop
jbe
cli
xor
sbb
fsubr
add
push
int
mov
and
mov
inc
lcall
push
adc
leave
insb
out
test
lahf
sbb
je
xor
push
sti
push
out
inc
pusha
idivl
popf
adc
imul
fistpl
arpl
mov
and
xorb
mov
hlt
jb
aam
movsb
add
fs
inc
loop
xchg
and
xor
add
adc
in
hlt
jb
aam
movsb
add
fs
inc
pop
sbb
fdivrl
mov
adc
fmuls
test
jge
int
push
push
lock
xchg
stos
xchg
cmpsl
rcrl
xor
dec
jecxz
jo
mov
adc
jns
fsub
iret
iret
or
fldenv
sbb
push
xchg
ja
or
jb
sub
mov
mov
xor
mov
out
daa
pop
movsl
cli
xor
roll
repz
and
sbb
push
and
bound
testb
mov
jns
sbbl
imul
shlb
clc
sahf
pop
daa
sbb
gs
mov
ss
les
pop
adc
lahf
sub
adc
cmp
lods
lcall
js,pt
into
mov
xorb
pushf
movsl
xor
call
ret
dec
sbb
pop
mov
mov
loop
xchg
clc
js
xchg
mov
sbb
mov
bound
ds
shrl
lea
xchg
mov
mov
int
movsl
mov
sti
push
aad
je
icebp
cld
cltd
add
cmp
jl
jns
mov
fcompl
jno
inc
cmp
cmp
icebp
push
leave
mov
fnsave
out
imul
cmp
add
cmp
jae
lahf
and
jl
xchg
movsl
mov
push
inc
mov
xchg
mov
dec
rcl
clc
jge
sbbb
mov
sub
or
push
rorl
aad
call
mov
mov
ljmp
dec
sbb
subb
imul
mov
mov
bound
imul
xor
stos
sarl
idiv
repz
js
icebp
out
or
dec
aas
fwait
mov
in
das
aam
xchg
lret
mov
jnp
mov
jb
adc
test
pslld
or
push
pop
xchg
ja
dec
add
pop
lcall
adc
fsubrl
sbb
pop
sahf
cmpsb
cmpsl
hlt
scas
pop
and
shl
mov
push
push
aas
sub
pop
cmc
insl
pop
mov
adc
pop
lock
jnp
fimull
ljmp
aas
push
xlat
cmp
out
add
dec
push
fneni(8087
fcomp
dec
adc
sahf
jle
dec
fiadds
or
iret
lock
sbb
push
cmc
mov
sbb
popa
out
sbb
xor
leave
inc
lods
lds
or
xchg
fmull
push
addr16
fwait
lcall
cmpsb
repz
mov
sub
and
push
out
dec
mov
rorb
jp
popa
pop
lods
sbb
bound
das
aas
cld
sarl
cmp
mulb
pop
lods
cld
out
mov
xchg
lds
or
cwtl
fs
pop
push
jnp
cmpsl
popf
pop
into
pop
jl
icebp
xchg
push
mov
leave
mov
out
or
mov
pop
pop
push
mov
fadd
loopne
and
push
pop
mov
aaa
mov
fs
adcl
jg
scas
mov
xor
sbb
aad
gs
imul
test
jl
out
adc
pop
or
lock
inc
sub
mov
xorb
movb
mov
mov
icebp
xchg
cmp
test
sahf
dec
cmpsb
mov
xchg
leave
pop
je
lahf
lahf
mov
std
ja
mov
mov
bound
or
cwtl
or
movsl
sbbl
into
daa
push
xor
xchg
mov
cmp
cmpsl
pop
ja
outsb
cmp
ficoms
loop
dec
xor
int
inc
jno
jns
std
mov
dec
mov
jae
jp
scas
cmpsl
push
inc
aad
mov
pop
lahf
lret
xor
movsl
jo
js
mov
and
mov
jb
sbb
cltd
adc
lea
scas
xor
insl
inc
mov
fisubrs
adc
pop
scas
jo
and
cltd
repz
jnp
inc
or
and
cmpsb
jb
nop
push
ret
inc
fcoml
cld
xor
jns
pop
push
sbb
mov
pop
push
push
add
inc
xor
add
iret
xchg
sub
shl
cmp
lods
stos
out
repz
xor
pop
dec
cmp
cld
push
adc
out
jae
pop
das
fnstenv
cs
mov
lret
outsb
cmp
in
icebp
out
test
mov
stc
push
adc
pop
into
xchg
sbbl
into
mov
stos
aad
or
and
in
pop
out
mov
xchg
outsb
jb
mov
imull
mov
mov
or
popa
in
les
jl
push
cmc
mov
psubsw
sbb
pop
gs
add
cmp
add
mov
pushf
bound
bound
repz
pop
daa
hlt
dec
push
outsb
jbe
pop
xchg
mov
movsb
idivb
test
adc
mov
es
mov
jbe
or
lods
aam
inc
jle
scas
shll
xlat
ljmp
jge
repz
shlb
fisttpl
ljmp
cmp
aas
in
out
push
mov
jb
movsl
pop
xor
mov
insl
push
and
data16
mov
inc
mov
xchg
mov
orb
push
dec
push
mov
push
adc
leave
outsb
mov
xchg
cs
out
hlt
sbbb
loope
mov
out
stos
add
ret
ljmp
push
jo
imul
mov
jge
scas
adc
mov
pop
daa
or
int3
inc
cmp
dec
fstpt
xlat
cltd
pop
adc
mov
push
push
xor
mov
test
xchg
pop
mov
pop
sbb
push
clc
mov
or
ret
jmp
insl
lret
sub
push
mov
sarb
mov
mov
lock
push
or
out
sbb
sbb
shr
out
sbb
push
mov
hlt
fwait
xlat
fsubrp
inc
xor
pop
daa
jmp
loope
arpl
sarb
jae,pt
mov
das
imul
jl
sbb
enter
imul
mov
xor
in
push
rolb
bound
or
mov
push
ja
cmp
sub
in
aad
xor
int
sti
jne
cmp
cli
lea
xchg
testb
push
and
movsl
aam
int
mov
out
dec
push
shrb
sahf
and
adc
fwait
push
pop
push
xor
pop
xor
mov
and
jmp
cld
andl
loop
test
pop
inc
in
sti
out
jp
mov
fstpt
xor
xchg
xor
fnsave
repz
push
inc
xchg
addb
test
rclb
ds
movsl
fcmovnu
jp
scas
ja
pop
pop
mov
pop
sbb
mov
repz
testb
mov
loopne
mov
mov
sub
fstpl
push
mov
sahf
jno
add
push
add
inc
push
and
push
jg
adc
adc
push
sbb
int3
cmp
xchg
sbb
cltd
call
test
mov
ficoml
loop
inc
jp
mov
popf
xchg
push
jb
subb
aam
xor
and
mov
sub
cmc
or
pop
nop
mov
repnz
cmp
jnp
enter
nop
ds
mov
dec
leave
popf
jnp
loop
test
mov
jbe
adc
pop
pop
mov
lret
aad
and
push
fs
cmc
sub
xchg
or
stos
movsb
outsb
ds
stos
in
and
mov
je
xchg
and
cs
jp
jg
in
push
rcr
dec
cli
sahf
adc
add
lds
out
sbb
rolb
or
movsb
mov
imul
sub
push
pop
not
std
outsb
mov
ss
mov
call
sbb
mov
jnp
and
sbb
push
mov
pop
int3
fidivrl
aaa
add
add
pop
shlb
or
call
or
addb
xlat
sti
stos
mov
sbb
mov
hlt
testl
inc
jmp
aas
push
bound
push
insl
xor
rcrl
rcrb
jmp
xchg
sub
data16
sbb
inc
adc
nop
xor
add
push
sbb
hlt
je
aad
pusha
data16
sub
in
test
inc
dec
cli
xor
push
subb
fisttpll
mov
and
mov
call
test
jg
push
jo
sub
test
int
sub
and
or
fidivl
les
xchg
push
xchg
mov
filds
sbb
sbb
cmpsb
leave
sub
rcrl
mov
sbbl
outsl
push
lcall
adc
shl
in
sbb
cmp
xor
mov
fnstenv
int
xchg
out
cmp
sbb
dec
push
push
mov
xlat
mov
into
pop
cmc
dec
jnp
shlb
insb
add
and
jp
jb
in
popl
mov
or
adc
cmpsl
pop
xchg
jo
bswap
or
out
rcr
dec
add
add
xchg
in
mov
push
repz
and
push
add
and
arpl
pop
jg
sub
sbb
dec
pavgw
and
inc
ljmp
mov
xor
addl
in
int3
pusha
iret
imul
sub
add
pop
int
outsb
aam
and
mov
js
cmp
xor
sahf
mov
lea
xor
jns
xor
pop
psrlw
add
cmp
insl
insl
mov
fnstenv
mov
outsb
push
inc
cwtl
cltd
fcoml
bound
pop
xchg
clc
or
bound
sbb
int
push
arpl
fninit
loopne
xchg
inc
int3
inc
xchg
rorl
cwtl
pop
clc
ss
popf
int3
xor
incl
stos
sub
mov
pop
into
decl
incl
pusha
sbb
test
test
mov
enterw
cmc
mov
test
xchg
ret
adc
lahf
test
enter
pop
add
xor
dec
xchg
jle
lahf
cmp
mov
fcomps
fdivs
sbb
fs
adc
sbb
aas
call
pop
push
push
adc
jnp
and
add
mov
mov
data16
add
xchg
stos
add
into
les
mov
push
and
push
negb
sbb
ret
push
jo
ljmp
cmp
xchg
lret
dec
jbe
lahf
push
dec
cmpb
lds
call
std
inc
adc
dec
push
sub
inc
sub
push
movsb
rcl
addr16
aaa
nop
and
mov
cwtl
add
mov
pop
in
bnd
popl
enter
pop
sbb
jae
in
inc
aas
dec
jb
xor
subb
or
or
test
repz
mov
push
dec
jmp
add
cwtl
jns
mov
mov
pusha
or
jecxz
mov
xchg
xchg
dec
in
test
shlb
ja
fistl
mov
cwtl
lret
or
out
lret
xchg
test
mov
fdivrl
or
mov
loopne
clc
rorl
imul
push
bound
jae
cmp
cmp
daa
inc
lock
hlt
pop
cmc
fdivrp
lock
sub
sbb
mov
call
mov
cmp
jne
out
mov
jg
mov
cmp
fs
or
rcrl
shll
sbb
hlt
and
and
cmp
dec
cmp
cmp
hlt
sbbb
and
cmp
xor
mov
lcall
je
xor
mov
cmp
stos
mov
lea
lcall
fnstenv
ret
fadd
mov
xlat
mov
jno
sbb
mov
fisubl
lahf
clc
push
clc
pop
push
inc
loope
pop
and
sub
jb
mov
push
cld
mov
sub
icebp
fstpt
sub
aaa
es
jne
jo
pushf
and
out
sbb
adc
lret
cs
mov
clc
fbld
fcomps
pop
jo
push
dec
out
add
scas
cmp
mov
cmp
mov
mov
cmp
push
or
outsl
cmc
insl
popa
std
jne
sbb
lcall
jg
outsl
lret
jecxz
test
fldcw
pop
iret
pop
sbb
xchg
call
lods
stos
testb
push
add
movsb
mov
push
out
pop
cwtl
ror
shrb
or
mov
add
lock
movsl
add
and
xchg
inc
shlb
xor
inc
stc
and
pop
xlat
dec
pop
cld
add
inc
push
mov
pop
mov
insl
add
jns
sbb
push
fsqrt
icebp
jle
in
jmp
in
jp
fwait
aas
outsl
mov
inc
and
xlat
push
mov
dec
sbb
sub
pop
pop
popa
out
xlat
sub
xor
xchg
dec
sbb
dec
or
xor
cld
mov
dec
xor
mov
pusha
jl
andb
imul
jb
mov
bound
cmpsb
jecxz
or
mov
and
subb
ljmp
mov
test
fimull
insb
cltd
xor
or
xor
add
adc
mov
dec
loop
icebp
rclb
cmp
mov
mov
stc
mov
inc
xchg
or
inc
mov
mov
cmpsb
xchg
shl
push
or
mov
in
aas
popa
push
rolb
adcb
sub
in
nop
ret
jge
mov
push
push
xor
fmuls
fdivrs
inc
inc
call
add
fmull
insb
in
pop
xor
push
out
adc
or
sbb
jo
cmp
adc
movd
mov
dec
rcl
push
dec
inc
fmuls
aad
sbb
ja
gs
pushf
repnz
mov
popf
mov
filds
lahf
mov
dec
jno
push
push
push
push
in
adc
cld
and
addl
sub
jp
and
popf
stos
push
fldt
cltd
add
mov
orb
hlt
insl
in
test
jle
or
and
or
rcrl
lretw
mov
jns
add
fsubrs
inc
or
pop
rclb
push
jge
jmp
mov
repnz
pop
ret
loope
scas
jo
sub
jns
icebp
sarb
xchg
test
jne
aam
sahf
sub
mov
adc
or
fcmovnbe
mov
dec
sbb
mov
adc
cs
lods
push
fistpl
mov
mov
movsl
imul
test
push
dec
inc
imul
scas
lret
pop
or
adc
in
cmp
dec
sub
dec
push
out
shrb
push
imul
cmc
lds
mov
cld
fmuls
xchg
popf
aas
lahf
movsl
jl
mov
fistpll
das
mov
movd
ret
loop
jl
pop
mov
xor
addr16
aaa
xor
imul
sub
les
scas
jne
test
cmp
or
iret
movsl
or
push
ret
or
or
dec
ret
pop
push
lock
jne
pop
nop
push
jl
mov
movsl
fildll
inc
push
or
jne
in
out
jae
dec
int3
decl
add
and
std
pop
add
jp
ss
cli
mov
mov
int
popa
insl
loope
cs
mov
aaa
int3
sbb
lods
bound
lods
mov
dec
ljmp
cli
dec
stos
push
test
jns
or
imul
xchg
ds
inc
sub
dec
call
insb
mov
xlat
adc
out
or
lret
loopne
cmpsb
fisttps
pop
popa
loope
pop
fists
mov
xlat
stos
sub
adc
xchg
pop
sub
mov
mov
sbb
push
lods
push
dec
push
sbb
rorb
or
scas
insb
imul
and
push
repz
cmpsb
insl
mov
pop
xchg
pop
cmpb
pop
push
shlb
sarb
push
test
sub
addb
push
dec
cs
dec
jb
cmp
inc
mov
mov
sbb
cmp
pop
sub
pop
xor
mov
fwait
push
mov
mov
mov
call
bnd
mov
xchg
orl
jae
add
mov
int
add
cmpsb
inc
stos
and
mov
and
dec
aam
xor
test
or
adc
cmp
inc
shrb
xor
je
dec
addr16
call
jo
out
js
cmp
xor
push
mov
cwtl
hlt
mov
fstps
movsb
rol
push
inc
or
mov
in
xor
and
dec
pusha
inc
stc
es
xor
fcmovnbe
incb
dec
out
dec
mov
popf
ljmp
jecxz
dec
dec
outsl
xor
rcrl
repnz
lds
adc
pop
xor
pop
pop
push
cmp
cwtl
mov
and
ret
add
xor
fisubl
pop
pop
mov
adc
in
dec
adc
mov
pop
scas
pop
insl
in
nop
fmuls
cmp
xor
je
aad
out
mov
je
aad
cmpb
sbb
inc
and
outsb
int
dec
cmpsl
outsb
cwtl
or
mov
and
ljmp
mov
daa
lea
loop
insb
push
mov
popa
dec
imul
push
xlat
inc
xor
lods
pop
movsl
sub
out
jecxz
cltd
sbb
decl
mov
inc
rclb
jecxz
add
add
pop
push
leave
push
test
imul
adc
push
fcmovnu
jbe
jae
cmc
push
pop
cltd
mov
idivl
stos
pop
int
aam
fnstenv
arpl
cmp
xor
push
lods
sbb
sti
mov
cmp
je
divb
fstps
jbe
jno
jnp
iret
aas
or
iret
outsl
adc
mov
aas
pop
icebp
cmp
sub
mov
stc
sbb
xor
xchg
outsl
mov
jecxz
adc
test
push
out
adc
mov
pop
js
rolb
inc
subl
jl
add
sbb
push
inc
clc
mov
movsb
ss
lahf
dec
outsl
fisttpl
mov
or
xor
jl
mov
mov
lods
aad
cmp
hlt
faddl
jbe
out
add
add
push
xchg
insl
fcompl
or
mov
cmp
cmc
add
mov
dec
lods
popf
outsl
sbb
cmp
add
dec
push
push
movb
and
dec
and
popf
je
jae
fs
jecxz
ljmp
cltd
xor
pop
push
shll
sub
out
inc
arpl
cmpsl
mov
push
add
icebp
dec
aad
jns
inc
xchg
inc
sti
cmp
adc
outsb
insl
xchg
cmp
dec
mov
in
pop
xlat
add
fwait
xchg
adc
mov
dec
icebp
fimuls
pop
mov
out
sbb
sub
cmc
or
jae
rolb
and
out
mov
jg
jmp
daa
mov
out
jecxz
push
add
dec
cmp
adc
jne
sub
xlat
in
sbb
test
xchg
or
dec
sub
dec
and
testl
xor
push
xchg
cmp
inc
sub
jg
nop
or
rcrb
scas
in
clc
inc
stos
push
adc
push
jns
mov
ret
divb
jle
stos
enter
sbb
jl
push
sbb
fdivs
cmc
mov
sub
jle
aad
hlt
xor
pop
cwtl
push
xchg
outsl
lods
jp
pop
test
jne
push
into
mov
xor
movb
repnz
cmpsb
sbb
cmpsb
mov
popa
mov
push
dec
mov
sbb
jo
cs
hlt
and
pushf
js
call
lcall
ret
or
in
insb
outsl
ret
add
das
imul
fwait
sbb
jecxz
adc
inc
fildl
psrlq
sahf
lock
lds
addr16
out
sbb
lds
daa
pop
lret
push
imul
dec
pop
sbbl
in
mov
mov
mov
shrb
dec
les
sub
jnp
xor
outsl
dec
fisttpl
out
imul
shl
cld
push
fimuls
cld
push
sarb
xchg
out
adc
push
push
mov
jo
mov
add
ja
in
hlt
xchg
pop
or
or
insb
cmc
xor
inc
stc
aaa
dec
xor
xchg
movsb
push
push
mov
xor
icebp
jo
push
stos
xchg
stc
divb
lret
push
mov
frstor
pop
ja
jle
pop
inc
jg
xor
push
pop
sub
addl
loop
xchg
and
xor
add
adc
in
hlt
jb
aam
movsb
add
fs
inc
loop
xchg
and
xor
add
adc
in
hlt
jb
aam
movsb
add
fs
inc
loop
add
xor
add
adc
in
hlt
add
aad
movsb
adc
fs
je
inc
ret
and
xor
add
adc
in
pop
fadd
bound
int
ljmp
fcomps
push
lods
xchg
mov
movsl
in
aad
fdiv
fsub
sub
cmp
or
sbb
insb
push
jl
dec
jne
adc
xchg
movsl
in
mov
fsub
xor
popf
add
jne
fs
fwait
pop
jge
dec
lahf
out
ljmp
nop
orl
jo
bound
imul
in
sub
dec
adc
in
mov
je
mov
mov
sub
bound
int3
hlt
and
adc
add
das
pop
or
rcrl
mov
adc
in
cmc
add
int3
xor
sub
lds
jge
mov
pop
lcall
arpl
aam
cmp
fdivl
andl
add
jge
lods
jp
lea
movsl
adc
cld
les
in
sbb
aad
mov
xchg
adc
mov
xchg
xor
icebp
dec
int3
mov
int3
cmc
fsubl
adc
sbb
jnp
insb
inc
dec
scas
inc
in
adc
hlt
stc
in
cmc
fmull
imul
sub
sbb
add
clc
int3
in
mov
mov
inc
push
pop
inc
arpl
add
jl
dec
sbb
or
lock
mov
ffree
in
test
mov
push
inc
pusha
gs
and
jl
dec
jne
lods
xchg
mov
movsl
in
aad
fsub
sub
cmp
or
sbb
insb
push
jl
dec
jne
lods
xchg
mov
movsl
in
aad
fsub
sub
adc
mov
outsl
or
int3
push
dec
sub
in
pusha
roll
aad
popa
mov
punpckhbw
cltd
dec
pusha
ss
jb
sbb
add
inc
inc
cli
jb
xchg
mov
xchg
sbb
jns
xchg
int
je
jl
and
pop
loop
fidivl
sbb
scas
in
lret
add
jae
xchg
push
jnp
iret
out
xchg
lret
fs
cltd
aam
inc
jp
adc
xchg
dec
rclb
lock
pop
inc
mov
test
arpl
add
movb
in
pop
loope
imul
push
mov
sub
pop
nop
lods
mov
sbb
xor
daa
and
imul
jnp
pop
mov
das
push
xor
pop
mov
lds
xchg
or
xchg
out
lock
test
popf
cmp
fcoms
inc
cwtl
sbb
cs
adc
mov
dec
inc
fmuls
outsl
scas
pop
popf
std
divb
inc
inc
or
fsubl
lds
fsts
clc
push
mov
lahf
sbb
stos
sbb
sbb
dec
call
mov
cmp
jl
ret
xor
cmpsl
fs
ljmp
mov
data16
cmpsl
scas
dec
push
cmp
or
lcall
test
jmp
ret
stc
mov
mov
add
sub
test
add
sub
bts
jecxz
cmpsl
pushf
push
cld
inc
aas
lcall
and
test
popf
repnz
inc
xchg
push
rorl
les
mov
adc
push
xchg
loopne
inc
pop
fucomp
das
mov
add
push
andl
inc
xchg
mov
jnp
jbe
std
pop
inc
shrl
rcrl
ss
dec
popf
xor
imul
inc
and
xor
xor
cmpsb
mov
xchg
cmp
addr16
in
and
mov
pop
jae
mov
scas
and
fisubs
jge
fiadds
xchg
pop
xchg
xchg
push
aaa
push
fnsave
lock
std
fsub
mov
enter
inc
inc
sti
int
push
pop
aas
pusha
pop
jo
cli
loopne
dec
push
sbbb
imul
lods
aas
push
pop
sarl
in
xlat
sahf
xchg
mov
aam
daa
xor
cli
adc
inc
sub
cs
insl
add
xlat
mov
mov
mov
add
adcl
or
fwait
imul
test
call
sub
xchg
cmp
sub
xor
xchg
push
add
in
mov
xor
arpl
ljmp
outsb
mov
aas
and
xor
and
xchg
or
out
clc
shrl
rorb
bnd
lahf
jl
in
sbb
dec
les
xchg
jl
xchg
and
inc
jg
cli
lcall
je
mov
ljmp
loope
cmp
imul
cmp
mov
fdiv
das
push
int
xor
nop
popa
sbb
mov
jne
neg
sub
dec
lods
push
xchg
inc
loope
aaa
push
test
cmpsl
pop
and
lods
lods
scas
aaa
in
mov
icebp
sub
jmp
pushf
sahf
mov
sub
popa
into
scas
aad
mov
cmp
pusha
xchg
mov
pop
call
sbb
xor
mov
rsqrtps
push
jecxz
jle
cwtl
inc
lahf
sub
test
lods
inc
xchg
xchg
push
or
hlt
mov
xchg
hlt
fildll
jecxz
fiadds
es
loopne
sub
ret
push
jge
xchg
add
popf
push
or
mov
xchg
and
jno
cmpsl
shrl
xchg
jge
cmp
push
ficompl
cmp
mov
cmpsl
std
pop
ficoml
add
lret
shr
call
enter
cld
xor
fadds
and
popf
loopne
dec
jb
sbb
jge
lahf
ret
dec
add
mov
xor
popf
ffree
mov
mov
addr16
pop
add
cmp
and
sub
sbb
shrb
or
cs
ss
stc
push
or
mov
test
ret
adc
and
push
pusha
es
scas
mov
addr16
cmpsb
in
inc
daa
mov
mov
aad
sahf
fs
push
idivb
aaa
loope
icebp
cli
fs
push
add
jbe
test
jnp
out
inc
xor
or
push
and
sahf
jae
loop
xlat
lock
cmc
mov
aad
add
mov
jmp
mov
test
jecxz
in
pop
lds
mov
mov
sbb
arpl
es
call
loop
adc
stos
mov
arpl
nop
bound
shr
cmp
fsubr
xor
lret
not
lcall
test
shrl
test
mov
sbb
inc
add
movsl
nop
pop
adc
rcll
sub
mov
pop
int3
mov
pop
ret
add
jno
incl
dec
jl
pop
ds
push
inc
xchg
test
int
pusha
cli
push
ja
jne
push
lods
xchg
xchg
aas
pop
lds
lret
stos
sub
cmpsb
aaa
mov
mov
repz
jl
sahf
push
push
loopne
in
and
mov
in
pop
mov
mov
add
jo
add
push
sahf
imull
rcrl
shll
ret
xchg
shlb
popf
jmp
hlt
sub
push
pushf
cmpsb
mov
mov
call
out
xor
and
push
cmp
rep
jae
outsl
push
rolb
sub
or
jno
pop
icebp
and
mov
ret
dec
jb
out
call
mov
cmp
imul
daa
and
and
jae
imul
pop
jg
sbb
or
lret
and
mov
loop
push
pop
and
mov
cmp
out
lock
adc
leave
pop
test
adc
inc
ficoml
cli
mov
lcall
out
imull
push
or
sub
and
dec
mov
into
jns
imulb
jle
jbe
mov
lahf
mov
jne
push
pop
lcall
imul
sbb
sub
dec
adc
add
sarl
pop
xor
xor
sahf
fcomi
jp
jno
push
pop
mov
test
xor
test
mov
xchg
and
cmc
les
pop
lcall
mov
clc
cli
push
jo
mov
sub
scas
sbb
out
divl
xor
mov
sti
out
cmp
das
rcll
xor
mov
insb
jb
ret
stos
sub
add
inc
jecxz
outsl
adcb
mov
out
unpcklps
xchg
fmuls
mov
cmpsb
push
fiaddl
mov
xchg
pop
aaa
je
andb
jge
xlat
xor
push
mov
sub
lret
vandps
mov
popf
pop
or
inc
or
shll
sbb
ljmp
cwtl
xchg
xor
inc
or
fstps
lea
cmp
int
xchg
data16
in
sbb
ljmp
dec
mov
out
lods
pop
push
lcall
mov
mov
loopne
add
inc
cmp
ja
mov
pavgw
mov
adc
dec
inc
scas
mov
mov
xor
jg
sub
insl
push
pop
scas
pop
mov
xor
lret
lock
jmp
in
popf
and
aam
push
or
pop
adcl
inc
dec
pop
insb
pop
dec
movsb
movsb
sub
scas
sbb
push
es
xor
xchg
ret
xchg
jo
dec
inc
inc
mov
nop
dec
mov
mov
xor
cld
popf
add
add
add
and
insl
int3
enter
xor
jecxz
jle
outsb
mov
subl
andl
rol
stos
lds
mov
inc
pop
mov
test
xor
aas
pop
int3
add
ja
into
jle
pusha
cmpsb
nop
outsl
cmp
mov
xchg
test
jmp
cmp
stos
xchg
lcall
out
add
fcoml
rcll
movsb
lret
or
xlat
ds
pop
std
enter
lock
jne
repnz
cmp
push
xchg
mov
push
mov
adc
inc
shlb
hlt
insb
inc
stc
loope
or
fcomps
xor
es
dec
or
sbb
inc
jmp
fpatan
sub
pop
sub
outsb
leave
or
push
idivl
mov
popf
dec
push
repz
in
sbb
arpl
cwtl
push
sub
outsb
mov
xchg
testb
ds
adc
scas
adc
in
cs
sti
push
mov
fdivs
fildl
xchg
mov
fidivl
pushf
popa
mov
xchg
imul
mov
lcall
or
xchg
xor
ss
sub
daa
xor
fucomp
sub
int3
repz
imul
loop
test
and
xchg
in
jne
out
push
femms
addl
mov
fisttps
ds
in
outsl
stos
test
int3
cmp
loop
cs
xor
xlat
jb
mov
push
dec
fistps
les
js
add
stc
into
mov
out
out
mov
lock
rorb
push
push
and
int
jmp
ss
in
ret
jb
mov
loop
and
push
push
insl
or
pop
sarb
mov
mov
adc
in
mov
mov
stos
and
clc
cmp
mov
lret
in
test
sbb
xchg
sbb
subb
lahf
and
jecxz
dec
mov
mov
in
cmp
dec
ret
sahf
xlat
filds
rcr
jns
and
sbb
mov
adc
faddl
and
add
xchg
jae
jle
lret
jns
nop
aaa
cmp
addr16
xchg
shlb
scas
icebp
std
mov
cmp
or
pop
ja
mov
push
push
into
adc
xchg
popf
js
adc
daa
cld
sarl
mov
imul
jne
movsl
mov
mov
lods
or
pop
popa
scas
sti
punpcklwd
loopne
scas
js
or
in
add
push
inc
ret
not
arpl
sbbb
mov
scas
faddl
in
jg
xor
mov
mov
sub
adc
xor
lods
ja
loope
xor
jle
scas
xorl
adc
dec
loopne
movsb
pop
add
sub
int
sub
iret
fcoml
mov
sub
push
mov
and
jl
lea
cmp
jb
fdivrl
rorl
inc
dec
stc
push
sbb
mov
lret
xlat
fldenv
int
push
mov
push
push
repz
mov
clc
mov
inc
repnz
imul
jo
ret
adc
fidivl
pmuludq
in
xchg
mov
fsubs
shrl
inc
shll
movsb
hlt
ds
movsb
xchg
imul
dec
xor
pop
cmp
adc
aas
jl
push
ljmp
pop
cmpsb
mov
inc
fscale
pop
xchg
push
jb
pushf
pop
iret
mov
in
test
pop
push
pushf
fbstp
and
in
mov
bound
stos
lcall
out
mov
mov
leave
outsl
push
rcl
dec
pop
jle
sub
scas
inc
xor
rcll
or
lea
xchg
aaa
int
push
cli
xchg
ss
aam
or
xor
test
int3
fcompl
pop
sbb
xchg
jbe
and
jnp
jle
pop
loopne
or
pop
dec
cwtl
test
cmp
out
adc
jb
cmpl
cli
out
xchg
or
in
imulb
out
mov
add
pop
fs
lods
pushf
ret
xchg
mov
das
xchg
popa
sub
orb
and
sub
enter
cs
sahf
mov
xchg
lods
clc
and
xchg
imul
ja
push
xchg
push
xor
outsb
cmc
push
nop
daa
jge
test
sub
out
nop
mov
sbb
pop
aad
mov
sub
adc
and
dec
push
cmp
lea
insb
mov
loopne
icebp
dec
outsb
mov
sarb
mov
mov
push
or
xchg
adc
pcmpeqw
pop
mov
and
cmp
stos
or
add
sub
jne
fisttpl
pop
stos
into
and
pop
jp
stos
sub
sbb
aam
jg
xor
mov
jg
or
clc
adc
aas
int
xor
insl
pop
sti
icebp
sbb
sti
popf
sbb
test
repz
jmp
ret
and
in
pop
dec
or
mov
mov
ss
push
fnstcw
pop
sub
std
push
fadds
cmc
aas
and
and
mov
push
mov
sub
call
or
mov
roll
rcrb
stos
or
xchg
cmc
inc
xchg
xor
xchg
adc
jecxz
pop
inc
lret
and
mov
add
andb
push
xchg
lds
adc
cmp
push
ret
inc
lock
aaa
mov
shlb
scas
ret
push
jbe
add
push
inc
inc
andl
and
and
out
stos
and
jge
xchg
push
aam
cwtl
cmp
cmp
or
push
push
or
jmp
mov
mov
enter
push
scas
jl
xchg
adc
and
sahf
fnstcw
pusha
lock
ds
icebp
repnz
adc
add
inc
xor
loope
stos
cmp
aam
sbb
aam
xor
jns
xor
jo
lods
scas
bound
xor
jge
pop
sub
std
mov
mov
roll
xor
cli
lods
mov
push
xlat
in
cltd
inc
add
jns
cs
daa
lret
dec
xchg
cli
push
mov
cs
xchg
lods
pop
push
movsl
cld
lods
leave
and
fmull
xchg
push
arpl
mov
mov
out
xor
jb
add
mov
aam
gs
mov
lahf
js
xchg
loopne
sbb
or
push
arpl
cwtl
xchg
fs
mov
jle
pusha
adc
push
xor
mov
test
add
fidivl
xor
call
jnp
xchg
movsb
mov
loope
cs
adc
sub
and
ljmp
pop
std
jg
aaa
or
xchg
adc
dec
repnz
and
cli
arpl
cli
mov
jl
insl
in
repz
pop
jg
rorl
inc
xor
fists
fnstsw
daa
mov
cmp
jns
nop
idivl
xchg
in
movups
pusha
repz
lods
push
lret
add
mov
add
push
popf
inc
popa
je
hlt
cmpsl
adc
sbb
mov
cmpl
out
outsl
lea
mov
ret
ret
insb
jae
popf
cs
or
push
pop
sub
loopne
fisttpll
xchg
iret
jo
out
push
push
adc
call
popa
jnp
inc
ret
sbb
cmc
pavgw
and
push
sbb
xlat
adc
push
in
adc
sbb
or
inc
sti
mov
push
repz
es
xchg
mov
cwtl
sahf
scas
je
xchg
aas
daa
jg
and
stos
sbbb
mov
sti
sbb
movsl
mov
and
push
mov
mov
jl
inc
lods
data16
repz
fldt
mov
or
lahf
jnp
ss
in
and
nop
test
sbb
jge
xchg
jp
xlat
pop
push
clc
or
mov
adc
test
repnz
or
nop
mov
mov
lea
test
add
mov
mov
xchg
or
into
add
repnz
pop
jmp
pop
add
addr16
sub
psllq
das
stos
xlat
adc
push
scas
jle
sub
sti
dec
adc
push
mov
cmc
add
clc
and
sbbb
fidivrs
mov
lods
mov
adc
lahf
jp
or
mov
mov
mov
hlt
mov
adc
jle
push
mov
iret
int
movsl
or
pop
xor
outsb
mov
movb
sbb
xchg
cmp
mov
aam
je
stos
pop
mov
mov
mov
cld
sbb
jl
or
aam
outsb
add
cmp
add
dec
aam
shll
mov
cli
into
mov
cs
loop
loope
add
ficoms
xor
stos
out
push
inc
daa
inc
mov
cltd
repnz
sub
xchg
jnp
dec
jmp
sbbb
ret
test
imul
cld
lret
or
or
je
and
sarl
ret
sub
shll
mov
js
pusha
fldcw
cmpsb
inc
push
mov
subb
xchg
mov
mov
or
cmp
pusha
adc
leave
ss
int
mov
mov
sbb
insb
mov
inc
stos
cmp
push
xor
pop
lods
pop
sahf
je
and
icebp
adc
repz
xor
adc
inc
sub
mov
jmp
repnz
xor
pop
loopne
movsb
xlat
and
pop
xor
nop
sbb
fsubl
icebp
fiadds
adc
mov
pop
call
inc
in
popf
add
hlt
jno
arpl
push
sbb
inc
or
roll
fs
lret
in
pusha
push
ljmp
in
or
xor
mov
push
mov
pop
xchg
mov
mov
add
adc
cmp
outsl
bound
pop
inc
pop
mov
leave
popf
lock
fcomip
dec
sahf
mov
jbe
addb
cmpsb
loop
xor
adc
add
mov
xchg
xchg
and
inc
push
inc
mul
and
incl
lds
scas
adc
xor
mov
push
outsb
lret
jle
movsb
push
mov
mov
xor
xlat
pop
sub
inc
mov
jecxz
jecxz
jg
int3
das
mov
mov
jmp
push
not
dec
call
mov
cmpsb
cmp
bnd
and
push
aad
inc
push
adc
nop
xor
push
jmp
or
jg
cmp
xchg
andb
mov
sub
std
mov
sub
cmc
rcl
cmpsb
int3
das
rol
sarb
scas
hlt
pushf
adcb
xor
mov
shl
push
xor
mov
sbb
mov
jo
aaa
pop
in
lods
rcrb
mov
movsb
sbb
push
xchg
mov
dec
adc
add
dec
lret
adc
jg
sub
aaa
ss
mov
add
insl
out
and
call
sub
outsl
mov
inc
and
test
lret
pop
mov
jl
pushf
or
xchg
sbb
push
adc
lock
pop
push
testl
mov
lods
sahf
push
pop
mov
and
cmp
xlat
add
xorb
fstpl
stos
int
mov
je
or
mov
pop
and
test
xor
mov
jg
lret
mov
sbb
xchg
sub
jg
xor
icebp
or
pop
ss
push
adc
pop
inc
and
cs
jmp
jno
lret
lods
bound
xchg
xchg
icebp
add
stc
or
and
and
add
mov
pop
sbb
addr16
adc
xchg
andb
jb
cmc
mov
mov
and
xorl
add
mov
mov
mov
ret
or
imul
cmpsl
xorl
xor
sbb
add
pushf
popf
in
fsubs
dec
xchg
inc
out
jmp
aam
sti
cmp
pop
movsb
push
ret
lds
jl
xchg
shl
jae
push
fnstcw
inc
addr16
xor
scas
test
xor
pop
inc
xchg
ljmp
cs
inc
das
cmp
mov
dec
sbb
sub
or
xchg
sbb
test
in
inc
sub
test
jns
sub
cmp
dec
adc
out
cmp
push
xchg
pop
or
and
je
pop
bnd
cmp
loope
lret
add
lahf
jb
test
in
jno
mov
cmc
or
mov
repz
cmp
stc
std
dec
adc
in
ret
scas
loopne
nop
or
xor
rolb
sbb
in
sahf
mov
push
mov
jmp
xchg
repnz
mov
movsb
gs
mov
sub
push
push
cwtl
jne
sub
adc
adc
in
push
adc
call
mov
into
nop
dec
fidivrl
jp
pop
mov
push
sub
movsb
inc
sbb
adc
dec
adc
bound
faddl
insb
push
jl
dec
jne
lods
xchg
mov
movsl
in
aad
fsub
sub
cmp
or
sbb
insb
push
jl
dec
jne
lods
xchg
mov
movsl
in
aad
fsub
sub
cmp
or
sbb
insb
push
jl
dec
jne
lods
dec
mov
movsl
in
aad
fsubp
sub
ds
outsb
push
jl
int3
cmc
fsubl
push
das
es
rcrb
or
sbb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
das
xchg
in
outsl
pushf
sbb
adc
xor
popa
into
out
inc
out
push
pop
mov
das
xchg
pop
loope
loope
shrl
sub
scas
adc
adc
jae
inc
out
push
pop
mov
das
mov
dec
jmp
lahf
and
fs
xor
shll
not
sub
test
pop
ds
sti
mov
adc
cltd
pop
cli
test
sub
cmpb
mov
pop
xchg
inc
add
sbb
ljmp
out
and
xor
divl
push
fidivl
mov
into
pop
push
repnz
imul
les
enter
adc
decl
dec
pop
jle
ret
arpl
lahf
mov
push
pop
dec
iret
mov
pop
pushf
hlt
out
mov
lock
insb
jle
in
and
jg
outsl
mov
out
stc
scas
test
arpl
aam
pop
pextrw
mov
stos
sbb
shrb
lret
out
stos
dec
iret
xchg
incb
push
inc
mov
mov
pop
loope
icebp
jg
outsl
enter
sub
jns
imul
mov
popa
hlt
sbb
sub
testl
je
add
jae
cs
cmp
dec
repnz
cmp
sub
int
loop
fs
adc
imul
dec
icebp
jg
outsl
rcrl
add
jno
inc
out
push
pop
mov
das
xchg
pop
loope
icebp
jg
outsl
rcrl
add
jno
inc
out
push
pop
mov
jge
sub
inc
outsl
or
mov
repnz
ficoms
dec
mov
orb
jbe
inc
mov
in
dec
int3
cld
not
inc
or
xchg
dec
jl
dec
inc
add
adc
mov
gs
push
pop
aaa
xor
ret
xchg
pusha
out
jne
daa
dec
fsubl
mov
mov
mov
dec
mov
mov
in
roll
fstps
and
ja
loopne
mov
inc
adc
or
arpl
repz
xor
aam
sub
xor
adc
jle
pop
andb
sbb
jns
aaa
stos
dec
popa
aas
in
nopl
insl
mov
in
sub
int
xlat
cltd
and
lret
xchg
stos
mov
jnp
xchg
mov
call
negl
loopne
fisubrs
jmp
es
insb
shlb
sub
xchg
xchg
add
inc
xlat
push
jo
imul
adc
gs
mov
cmp
mov
fs
repz
popl
mov
and
les
or
stos
dec
inc
dec
cmp
xor
mov
daa
cs
jb
aaa
push
pop
and
movsb
xchg
je
inc
frstor
or
mov
inc
imul
imul
fistpl
sub
out
xor
mov
aad
adc
out
xor
xor
js
push
inc
pop
fistps
in
jbe
inc
fistps
sub
xchg
movsl
push
scas
sbb
xchg
cmp
sub
or
jl
into
pop
pop
inc
xchg
xchg
sbb
andb
mov
push
mov
xor
rolb
pop
mov
pusha
cltd
mov
mov
cld
push
sbb
dec
push
cmp
mov
and
pop
ret
loopne
add
xor
lret
inc
mov
push
pusha
cs
stos
dec
or
jo
lea
ds
xlat
pop
xchg
xor
insb
add
xchg
push
adc
and
inc
mov
faddp
loop
xorl
dec
call
push
adc
cmpsb
clc
push
imul
pushf
xchg
ret
inc
data16
popa
xor
fisttps
pushf
xchg
inc
pop
dec
jmp
scas
cli
jmp
ja
cli
adc
clc
pop
sub
mov
mov
jl
pop
pushl
outsl
mov
jo
mov
pop
mov
push
xor
je
pop
push
loope
push
sub
push
jle
jns
cmp
sub
outsb
lds
lret
or
cli
iret
and
adc
iret
cmc
add
enter
and
mov
fiadds
push
cmp
imul
es
sub
sbb
mov
clc
pop
sub
in
add
movsl
scas
ljmp
adc
adcb
inc
cmp
dec
test
sahf
xor
pusha
shr
push
mov
or
dec
test
rclb
jno
pop
dec
andl
ljmp
xchg
mov
inc
inc
das
xor
dec
mov
push
pop
repnz
inc
inc
daa
movsl
out
aad
rcr
mov
jmp
scas
pop
shrb
loope
stos
jge
jns
fldl
loop
xchg
fwait
test
shll
dec
cmpsl
sub
mov
ja
pop
cmp
sub
push
out
cli
test
xchg
or
loope
scas
je
pop
sarb
and
mov
sbb
add
adc
leave
cmpl
mov
sbb
mov
sub
popa
gs
dec
test
adc
popa
insl
pushf
push
push
jmp
xchg
sbb
mov
loop
jmp
push
or
out
xchg
fnstsw
rol
lahf
jge
daa
out
adc
and
cmpsb
test
push
out
enter
fsubs
add
sub
add
pop
jne
mov
loop
and
dec
mov
adc
pop
loope
and
mov
scas
iret
xor
pop
pushf
mov
dec
sub
push
add
sub
and
pop
xchg
mov
pop
sub
mov
fs
out
repz
enter
sarb
outsl
inc
inc
dec
and
outsb
js
hlt
ret
mov
xchg
push
pop
jecxz
push
mov
pop
cmp
sub
push
cld
loopne
mov
jecxz
sbb
loope
push
dec
or
fs
scas
jbe
adc
lock
andl
push
adc
push
int
push
repnz
js
xchg
popf
mov
les
cmp
jne
adc
jmp
sarb
xor
es
xorb
push
ja
xchg
out
mov
pop
push
clc
fisubrl
push
mov
divb
dec
loope
jg
adc
out
dec
mov
iret
push
int
inc
std
mov
or
fwait
in
mov
push
jle
jno
frstor
lret
out
cli
push
push
xchg
xchg
pop
mov
fildll
test
dec
jmp
dec
xorl
hlt
add
outsl
out
sbb
enter
aam
push
jae
and
in
mov
out
mov
push
mov
mov
inc
pop
cmp
and
repz
dec
stos
pushl
pop
fsubl
test
repz
cltd
lock
in
inc
pushf
or
and
push
fmull
adc
adc
jmp
push
in
test
dec
pop
xor
out
push
movsl
cmpsb
mov
sub
cmp
out
das
adcb
dec
or
lods
sbb
cmpsb
sahf
dec
sbbb
cmp
pop
sub
xchg
cmc
lahf
inc
add
out
mov
repz
sbb
fadds
out
cmp
push
add
pop
pop
adc
sbb
mov
or
stc
das
mov
push
push
test
cld
ljmp
cmpsb
repz
in
jns
mov
mov
stc
dec
stc
cmp
loopne
fsubs
push
adc
push
sbb
popa
pushf
popa
lea
mov
popf
mov
lea
mov
hlt
mov
aaa
into
push
test
imul
xchg
pop
fcomip
mov
ja
loopne
sahf
mov
mov
js
push
xor
lret
sbb
push
dec
sarl
lods
add
cmp
mov
repz
jmp
or
pop
test
pop
nop
daa
pop
xchg
xchg
orl
aaa
test
inc
jl
test
adc
cmpsl
ds
sbb
test
push
xor
cmp
ret
cmp
mov
ss
inc
push
mov
dec
or
sub
pop
xchg
dec
adc
fnsave
inc
jecxz
pop
lcall
lahf
das
cs
in
filds
fsub
sbb
cmp
lea
jp
ja
pushf
fs
adc
adcl
pop
fbld
fs
xchg
lods
mov
mov
adc
fnstcw
and
ret
dec
pop
xchg
loop
pop
sub
push
in
adc
cs
iret
cmp
rcrb
out
adc
mov
pop
mov
fdivl
adc
pop
jmp
aaa
adc
jb
mov
jge
pop
mov
push
lock
lret
insl
cmp
mov
in
icebp
lea
lret
es
add
data16
mov
repz
mov
pop
mov
into
lret
xchg
jl
mov
scas
jmp
push
pop
cmpsl
cmpl
cltd
pop
inc
outsl
nop
outsl
divb
cmpl
js
aaa
stos
xor
xor
roll
cmc
pop
daa
cld
mov
imul
inc
fimuls
fcoms
in
mov
pop
mov
aas
mov
sub
mov
ret
inc
sbb
cwtl
sub
ds
fsubs
xor
mov
and
mov
cmp
cmp
sar
pop
cmp
xor
lret
addl
mov
xor
dec
push
push
mov
adc
fisubs
dec
mov
adc
cltd
loope
mov
xchg
dec
push
or
loope
or
push
push
iret
adc
pop
les
dec
add
jecxz
fs
loope
xchg
les
sbb
jmp
push
inc
scas
sbb
pushf
pop
mov
fists
jp
xchg
fcoms
popa
add
sub
js
arpl
lahf
mov
adc
aas
test
in
in
xlat
imul
pop
push
xchg
testl
jmp
js
mov
test
and
arpl
arpl
push
cmc
and
pop
jle
aad
and
inc
ss
aas
xchg
push
push
jl
push
cmp
xchg
loopne
mov
adc
mov
fildl
push
add
and
sub
inc
ss
push
pop
inc
mov
test
adcl
setne
aaa
mov
in
iret
add
or
push
mov
mov
movsb
leave
mov
mov
ficoms
xor
insb
push
lock
and
repz
je
push
test
jbe
xchg
hlt
cld
pop
js
loope
and
arpl
nop
inc
dec
cmp
loope
insl
or
mov
pop
xchg
mov
arpl
movsb
stos
repnz
sbb
mov
rorl
sub
lods
sub
jecxz
inc
cmpsl
and
mov
cmp
rcrb
mov
mov
or
outsb
lahf
add
cmp
and
xchg
dec
pop
push
or
or
fldl
or
mov
xor
mov
sarb
pop
into
xor
iret
sbb
or
jb
rcll
mov
pop
xor
xchg
dec
jmp
cltd
test
repz
sbb
out
jne
nop
pop
incb
cmp
dec
xchg
push
pusha
xchg
and
pop
add
sbb
jae
dec
jae
iret
fs
outsb
jg
fsubr
push
push
out
xchg
jb
call
xor
ficomps
lret
loopne
and
dec
and
stos
push
sbb
xor
xor
and
sbb
dec
mov
mov
ficoms
popa
mov
or
mov
fnsave
pop
push
push
inc
in
inc
push
pop
loopne
js
and
jp
mov
pop
outsb
push
cmc
out
or
jns
and
je
test
out
push
cmpl
lea
ljmp
out
int
roll
sbb
push
jle
subl
adc
or
dec
mov
jns
fldcw
stos
ret
push
stos
jle
nop
mov
sub
je
or
lods
push
xchg
mov
pop
add
stos
jge
sbb
push
inc
sbb
es
mov
sbb
sahf
push
sbbb
push
aaa
xlat
adc
aaa
push
jne
in
mov
push
std
inc
jp
jmp
sub
jo
sub
fstpl
xor
ret
out
sti
inc
pop
cltd
js
mov
xor
dec
jg
push
mov
sub
cmpsb
cmp
int3
push
sbb
fsubrl
mov
pop
ret
mov
push
and
pop
call
jle
mov
xchg
and
mov
dec
mov
inc
mov
inc
sub
jb
insl
shrl
ja
mov
mov
icebp
fmull
xchg
mov
orb
cli
lahf
shlb
cld
xchg
cmpsb
addr16
mov
test
popf
dec
sbb
aaa
mov
mov
jl
and
cmp
inc
nop
fisubrl
mov
cwtl
sub
insb
pop
popa
jb
imul
fcomip
testl
pop
lcall
mov
iret
pop
xor
shrb
mov
shlb
mov
testl
or
jnp
add
xorb
cmp
lock
mulb
cmp
es
jbe
test
push
mov
sbb
call
or
push
push
and
fwait
jo
dec
dec
jecxz
mov
xor
dec
inc
stc
inc
push
mov
push
dec
mov
and
insb
cwtl
or
mov
or
mov
popa
in
popf
out
xchg
shl
mov
lret
outsl
cmp
xchg
pop
dec
rcrl
movl
jmp
push
leave
test
rol
fsubrl
lret
xor
and
in
xchg
das
mov
jmp
adc
lret
loopne
xor
mov
xor
mov
js
push
and
adc
inc
popf
cmpsb
rcr
mov
dec
push
test
in
or
and
jno
ja
rcpps
jb
sahf
mov
mov
loopne
inc
add
xchg
testb
shll
xchg
and
aam
xchg
and
or
pop
in
push
call
popw
popf
inc
lods
xor
scas
or
lret
push
push
pop
lcall
fs
jge
test
adcl
jg
addr16
push
sbb
jmp
lret
fisubrl
mov
cmp
jle
int3
cltd
xor
xlat
les
and
dec
jno
mov
cmpsb
shll
testb
xchg
in
sbb
cmp
cmp
jl
mov
fs
es
hlt
cmpsl
sub
xor
lods
mov
xorb
repnz
arpl
das
mov
xchg
scas
mov
xchg
lar
iret
sbb
jae
mov
es
test
mov
cmp
out
shl
dec
mov
shll
sbb
pop
pop
jnp
jmp
jbe
or
out
pop
cmp
data16
fwait
outsl
mov
int
fimuls
bound
ret
add
lahf
ds
or
xlat
or
xchg
jmp
pusha
dec
mov
cmp
mov
jo
stos
push
jle
push
jo
inc
sbb
stos
loop
or
std
daa
out
mov
lcall
jmp
mov
adcl
jns
insl
jle
or
loope
pusha
popf
pop
loopne
xchg
loope
xor
test
or
je
inc
mov
cmpsl
lahf
cmpsl
out
sub
cmp
xchg
dec
cmp
cmpsb
pushf
mov
xchg
mulb
fcom
xchg
cmp
xchg
dec
xchg
dec
mov
lret
gs
jne
and
in
mov
clc
xor
push
inc
call
int3
frstor
and
aad
xchg
test
ret
mov
jp
mov
inc
shl
jbe
mov
mov
mov
pop
mov
sarl
xchg
dec
sub
mov
push
jl
pminsw
push
mov
fwait
add
xchg
sbb
test
jle
sbb
mov
and
sbb
mov
sbbb
mov
pop
sub
push
add
popf
xor
adc
mov
sub
push
outsl
inc
cmp
mov
push
imul
hlt
cltd
mov
inc
pop
xchg
lret
and
dec
pop
fxch
push
std
adc
mov
push
mov
orl
push
jl
sarb
fwait
cs
mov
sbb
add
popa
or
jmp
lcall
or
pop
es
ror
mov
cmpsb
xor
movsb
xor
je
cmp
inc
dec
xor
adc
mov
idiv
fwait
lcall
or
lock
cmp
fdecstp
jl
sti
push
adc
ret
movsl
or
inc
add
add
mov
aam
adc
xor
add
ja
leave
mov
iret
mov
popf
jp
and
dec
mov
in
pop
imulb
push
adc
leave
inc
jl
xor
inc
pop
mov
pop
cmp
pandn
std
movsl
addr16
icebp
push
fistps
clc
pusha
jbe
cmp
andl
sub
aad
out
lods
cmp
mov
inc
add
jecxz
arpl
push
hlt
fisttps
daa
mov
push
int
push
test
add
add
and
subb
jb
int3
and
xor
rcr
sub
test
sub
shlb
mov
sub
adc
movsl
sub
test
adc
rol
mov
movsb
mov
cmp
add
je
jge
xlat
stos
xchg
arpl
mov
enter
mov
cmp
shrb
stos
add
out
mov
sbb
mov
arpl
loop
popa
or
sarb
mov
iret
and
loope
shlb
mov
add
cmpl
jle
sbb
mov
dec
xchg
sub
les
out
pushf
cmp
xchg
imul
inc
les
add
jl
in
icebp
sbb
and
sub
add
clc
adc
ret
sub
xor
stc
neg
fsubrs
push
push
adc
test
push
mov
pushf
lcall
adc
add
xchg
pop
push
outsb
adc
push
sar
sub
leave
adc
int3
aam
jno
loopne
mov
mov
xchg
push
pop
pop
mov
add
add
mov
sets
ds
mov
push
outsb
mov
and
xchg
stc
sbb
les
out
sub
stos
push
cmc
pop
ds
and
add
xchg
sbb
test
bound
xchg
xchg
jmp
cmpsb
cld
les
popa
fstps
leave
push
mov
cmp
xchg
sub
fwait
pop
sti
sub
jl
call
lret
jae
push
lret
xchg
fmuls
imul
cmp
pop
mov
ja
insb
mov
jl
bound
mov
test
popl
les
cmc
mov
hlt
imul
cmp
ret
jo
pop
mov
test
mov
test
adc
rclb
xor
pop
iret
pop
jge
scas
clc
add
add
sbb
popa
iret
mov
fistpl
and
mov
icebp
mov
jae
out
ja
dec
and
add
inc
xchg
jle
jecxz
in
jae
lahf
fwait
push
fcmovnbe
andl
jg
or
sbb
inc
xor
jmp
mov
push
jae
jb
dec
pusha
aam
std
loopne
insl
jo
cmp
out
add
cmp
pop
add
mov
xor
cld
xchg
mov
or
test
and
push
mov
jge
cmp
inc
std
loope
adc
mov
xchg
adc
inc
fcmovb
fcompl
xor
jmp
pushf
xchg
aam
out
or
jo
loop
xor
sbb
jns
pop
es
ss
faddp
and
gs
xchg
xchg
lret
test
lds
int3
pusha
jl
fwait
mov
aam
aaa
ds
popf
sub
sarl
ss
jge
out
sarb
lea
movsb
pop
xchg
loope
popf
mov
fdivr
fs
lock
xor
mov
hlt
hlt
jle
cld
imul
decl
mov
and
adc
fldl
int
jecxz
popa
mov
inc
and
imul
xchg
and
sbb
mov
fwait
lcall
int
fiadds
mov
sub
push
lret
test
mov
lods
sbb
mov
aas
or
xor
fisubrl
loop
adc
lret
cli
cld
movsl
negl
js
outsb
js
mov
out
lds
push
aam
das
lds
outsl
mov
inc
mulb
out
sub
pop
pop
pop
fisubrs
jg
js
xor
mov
data16
xchg
outsb
aad
into
test
stos
push
movaps
push
ljmp
and
and
and
repnz
mov
push
insb
insb
xor
sub
cmpsl
or
mov
in
pop
mov
cmpsb
push
and
dec
xchg
jle
clc
xchg
jnp
ljmp
sub
dec
jbe
or
cli
ret
loopne
mov
add
sbb
ret
stc
mov
test
mov
cmp
iret
mov
pop
enter
aaa
fwait
aaa
ljmp
dec
jle
dec
std
in
dec
enter
add
mov
or
xor
repz
cli
adc
pop
int3
mov
xor
jne
xchg
xchg
dec
mov
cs
addr16
jmp
or
popa
fnstenv
and
in
add
cld
and
fiadds
lds
jg
xor
pushf
cmpps
xlat
test
add
add
or
push
xor
andb
mov
mov
cltd
mov
mov
mov
into
jmp
cmpsb
dec
push
inc
fdivrs
mov
mov
or
loope
stc
mov
cltd
sbb
sub
adc
test
arpl
jge
je
imul
in
ja
imul
or
jge
lahf
aaa
fsub
mov
adc
jno
dec
bound
into
andl
add
imul
mov
mov
je
jo
jg
add
loope
rcrb
sub
frndint
jb
mov
das
xchg
in
inc
jmp
cmp
add
mov
sahf
scas
je
inc
mov
cmp
adc
mov
xor
dec
mov
inc
mov
adc
addr16
daa
in
mov
dec
cltd
push
sub
mov
insb
mov
adc
inc
test
xchg
mov
add
imul
and
mov
mov
mov
cli
lods
pop
adc
pop
or
in
jb
lock
ror
adc
stc
xchg
jp
inc
mov
lahf
std
into
cltd
add
xor
cwtl
xchg
das
or
lods
jmp
adc
pop
xor
das
xchg
pop
loope
icebp
jg
outsl
rcrl
add
jno
inc
out
push
pop
mov
das
xchg
pop
loope
icebp
jg
outsl
rcrl
add
jno
inc
out
push
pop
mov
das
xchg
pop
loope
icebp
jg
outsl
rcrl
add
jno
inc
out
push
push
movsl
push
mov
test
xchg
pop
loope
icebp
jg
outsl
adc
add
push
add
adc
test
xor
and
jne
and
ss
arpl
xor
arpl
adc
add
in
jecxz
jecxz
ret
and
push
mov
dec
jns
arpl
cli
and
adc
add
ljmp
push
stos
fs
push
jae
push
sbb
outsb
mov
adcl
lahf
lods
inc
mov
idivl
mov
fwait
jnp
imulb
enter
scas
repz
outsb
roll
iret
arpl
pushf
js
dec
dec
hlt
pop
je
jg
test
lcall
mov
jno
pushf
xchg
add
data16
adc
add
xor
xchg
inc
mov
jnp
sub
adc
fs
dec
pop
movsl
mov
jo
push
or
cwtl
adc
sbb
mov
mov
jecxz
arpl
mov
cwtl
jnp
pushf
roll
inc
push
cltd
mov
sti
imul
inc
dec
hlt
push
sbb
mov
add
gs
pushf
aam
bound
repz
add
roll
and
push
mov
imulb
jnp
dec
mov
cwtl
sub
cmp
adc
sbb
adcb
mov
cmpsl
dec
xlat
icebp
into
sub
xlat
arpl
and
sub
stos
jbe
data16
repz
jecxz
mov
rorl
int
lcall
arpl
push
out
xchg
push
fwait
push
les
add
mov
ret
dec
lret
sbb
fs
arpl
aam
les
hlt
add
repz
add
xor
and
push
mov
fs
arpl
aam
les
hlt
add
repz
push
mov
lret
dec
sub
fistpl
fistl
lods
and
xchg
jg
lods
scas
arpl
subl
xchg
cltd
lahf
gs
loopne
jp
sub
mov
imulb
jecxz
repnz
jmp
push
adc
cmp
bound
in
cmc
mov
cmp
sbb
dec
mov
sbb
or
fnstcw
xchg
xor
lahf
push
mov
jno
jo
mov
or
jae
out
push
cmp
pop
inc
mov
jne
add
ljmp
cli
add
adc
cmp
ds
daa
inc
cmp
loop
cmp
jns
js
jmp
mov
sbb
dec
inc
stc
mov
lods
fadds
das
repnz
insl
dec
jnp
int3
sbb
sbb
aad
sbb
cmp
in
xlat
out
and
mov
sub
pushf
jo,pt
icebp
mov
lret
push
mov
xchg
mov
adc
jnp
movsl
repnz
hlt
jb
addr16
cmpsb
cmp
xchg
in
mov
xchg
push
jb
fdivs
scas
mov
mov
xor
jae
mov
adc
sbb
pop
enterw
outsl
out
xchg
adc
aad
mov
and
and
hlt
sub
cmp
or
or
fucomp
or
or
mov
sub
rolb
xlat
sub
pop
mov
pop
lret
scas
push
mov
in
push
outsb
test
jno
dec
xor
aaa
xor
test
inc
pushf
gs
or
sbb
jbe
int
mov
clc
and
sbb
out
mov
mov
jbe
and
cld
ret
cmc
dec
or
or
orb
adc
int
lret
ss
cmpb
and
stos
pop
inc
xlat
cwtl
shll
xor
cmpsl
inc
mov
cld
xchg
mov
outsb
repz
push
and
popf
fs
loope,pn
dec
ljmp
orb
mov
pusha
adc
mov
mov
inc
imul
cmpsl
cmpsb
pop
test
shld
in
hlt
mov
fnop
dec
repnz
inc
test
push
test
and
jmp
push
jmp
cltd
pusha
or
dec
mov
rcll
add
lock
les
xor
push
out
aad
add
loopne
ds
dec
repnz
mov
pop
mov
fucomip
jno
insl
popa
push
ret
stc
sub
mov
flds
inc
cmp
sub
jns
ficoms
in
ds
sahf
pop
mov
sarl
in
in
jb
jns
pop
sbb
xchg
sub
xchg
stos
out
jnp
cmpsl
push
into
xchg
push
imul
out
test
push
xchg
cwtl
xorb
loopne
mov
lret
pop
cmp
xor
jecxz
mov
aas
xor
mov
or
mov
ffreep
sbb
mov
cmp
dec
adc
pop
stos
mov
daa
mov
fnsave
jecxz
mov
insb
pop
push
ds
sub
jbe
inc
dec
adc
iret
cmpsl
test
mov
push
cwtl
in
daa
adc
xchg
dec
or
aad
bound
push
ljmp
cli
fldt
cwtl
mov
xchg
aam
dec
out
subb
mov
fabs
jo
shlb
sbbl
outsl
ret
data16
fstl
dec
and
mov
movsl
lods
mov
andb
push
jl
and
scas
in
sar
sti
xor
xor
lea
xorb
addps
lea
push
mov
in
add
loopne
iret
and
repnz
mov
cmp
xchg
mov
jb
and
std
add
adc
addr16
pushf
mov
adcb
test
mov
pop
cmc
pop
test
and
cmp
add
vshufps
sub
or
ljmp
dec
sub
dec
lret
lods
pusha
mov
mov
test
enter
loopne
shrl
insb
xchg
fdiv
clc
mov
mov
inc
adc
add
mov
popf
ds
xchg
lods
popa
mov
adc
jecxz
inc
cwtl
pop
dec
int
inc
push
and
add
jno
and
insl
imul
repz
push
mov
mov
ficompl
inc
les
mov
or
push
outsb
sub
push
call
scas
fsts
loope
cmp
mov
fimull
out
cmp
sub
xchg
mov
mov
cmp
cmpl
push
out
not
fwait
clc
rcl
ja
insl
xor
inc
mov
jae
push
inc
stos
and
xor
push
sbbl
cld
xchg
das
jecxz
ss
pushf
fmuls
out
repz
scas
insb
nop
mov
mov
cld
aam
arpl
popa
leave
add
cmpsb
sub
and
cli
mov
movsb
leave
lret
mov
es
mov
iret
mov
into
shrl
mov
xor
rclb
add
cmp
adc
pop
mov
and
push
and
int
adc
cmp
enter
push
xchg
out
repnz
lcall
lods
pop
les
jl
ss
and
ljmp
xor
test
popa
stc
jb
push
xlat
fimull
mov
pop
mov
mov
insb
xor
lcall
sahf
xchg
lcall
xor
or
lcall
cld
adc
push
fmulp
ss
sbb
mulb
inc
jp
cld
dec
xchg
loope
pop
adcl
test
xor
xorl
push
pusha
lea
sbb
add
popf
ficompl
imul
js
roll
cmp
repz
loope
test
fistpl
leave
mov
scas
mov
into
cmp
push
dec
je
mov
fdivl
pusha
mov
es
push
jae
cmp
xchg
jmp
stos
test
aas
sti
sbbb
inc
shlb
push
shrl
sub
movsl
cmp
aam
add
pop
jnp
or
repnz
adc
in
aam
xchg
rcl
cmpsl
cwtl
ja
movsl
andl
test
add
mov
movsl
jge
dec
add
push
hlt
cmp
pop
push
sub
pop
mov
or
inc
inc
and
andb
es
mov
mov
or
mov
cmpsl
shrb
lods
loop
insb
fcompl
int
push
push
out
push
adc
loop
outsb
and
cmp
add
lahf
rcrl
add
test
in
push
cs
outsb
mov
push
lods
push
push
mov
mov
ljmp
dec
mov
in
outsb
jbe
imul
out
and
test
test
popf
negl
sarb
cmpsb
push
jnp
add
mov
icebp
mov
mov
test
sbb
test
inc
lret
adc
stos
test
outsb
cmp
jp
gs
push
rclb
push
mov
scas
icebp
jns
jge
test
or
xor
sub
stc
cmp
dec
inc
mov
arpl
inc
or
pop
lcall
pop
or
cmpsl
xchg
imul
xor
roll
into
iret
sbb
xor
or
data16
pop
mov
aam
loope
clc
imul
inc
cmp
ret
pushf
insl
in
add
xor
test
iret
mov
pop
adc
fldl
inc
int3
lds
jle
add
icebp
mov
xchg
xchg
pop
imul
mov
popf
inc
jl
jmp
dec
xchg
test
rolb
lea
rol
mov
dec
xor
mov
jg
mov
or
or
notb
dec
and
les
sub
ret
mov
loope
push
filds
xchg
aad
dec
xchg
mov
lods
add
xchg
or
ret
loopne
mov
adc
in
push
sbb
or
ljmp
test
push
mov
dec
mov
das
aam
cmc
or
jno
in
jo
cmpsb
test
loop
push
shrl
pop
lahf
cwtl
stc
lods
adc
and
and
insb
aad
mov
lock
in
ret
movsb
fwait
fs
inc
int
movsl
inc
xchg
lret
pushl
loop
pop
adc
roll
adc
stos
sub
je
icebp
jg
out
xor
ja
add
add
push
loopne
repz
mov
test
cltd
inc
mov
cmp
test
mov
jmp
push
or
sbb
sbb
lahf
inc
fsubrl
add
testb
and
sbb
mov
push
mov
adc
mov
jl
lods
int
inc
cld
adc
cmp
adc
popf
dec
add
pop
popa
cs
setno
xchg
adc
popf
bound
push
mov
add
scas
jb
and
fcoms
cmp
mov
scas
sub
fwait
je
mov
xor
cli
pop
jecxz
icebp
push
int3
lea
add
imul
pop
mov
fstps
sahf
dec
lods
inc
jmp
lods
fisubrl
scas
and
aam
add
subb
lcall
lods
orl
outsl
push
arpl
hlt
ljmp
push
mov
sub
subb
jns
xlat
sbb
clc
dec
jae
cmpsl
dec
xchg
and
pop
loopne
dec
scas
hlt
cwtl
sbb
pop
imul
sahf
out
push
jns
pop
jl
xor
pop
out
fdivrl
xor
dec
sbb
sbb
push
sub
inc
stc
mov
test
or
adc
cmp
idivb
lret
jge
inc
shl
aas
out
cmp
dec
jb
mov
sbb
insb
mov
aad
xchg
pop
mov
adc
adc
imul
addr16
shll
test
rcr
sub
in
pop
and
aam
lods
test
mov
add
rcr
das
sti
jbe
push
mov
mov
mov
adc
add
scas
sbb
loopne
leave
into
jge
jle
and
stos
shl
pop
test
ljmp
pusha
shl
ret
sbb
sbb
jecxz
push
xchg
pop
dec
jecxz
rclb
movsb
sub
test
adc
icebp
mov
mov
lret
cmp
int3
cmp
cld
ja
out
ds
rcr
sub
shrl
outsb
lods
out
xor
pop
lods
mov
sti
adc
fwait
mov
jmp
loop
rorl
mov
outsb
ror
xchg
je
sub
pop
push
mov
sub
cwtl
out
das
ffreep
sbb
sub
int
xchg
push
insb
cli
lods
xchg
pop
push
cmpsb
aad
mov
add
add
lods
xor
or
jb
insb
cmpsl
jno
fcompl
adc
jbe
call
es
push
mov
mov
add
pop
push
mov
and
sub
lcall
add
into
rcl
pop
in
fsubl
pop
adc
mov
or
repz
idivb
scas
lock
push
and
push
imul
mov
xchg
push
jbe
sti
ss
and
int3
popa
mov
cmc
dec
xor
cld
lret
xchg
jge
neg
jbe
outsb
inc
jmp
and
lock
cmp
iret
add
pop
cwtl
jle
test
jl
clc
adc
in
lods
and
js
test
jmp
das
sbb
inc
push
ss
or
aas
test
repnz
lock
mov
lods
je
inc
xor
shlb
enter
insl
mov
js
xchg
shll
or
rcr
mov
std
lret
aaa
push
into
add
jo
xchg
call
sub
xchg
pusha
ja
lea
mov
mov
mov
sub
out
push
sub
stos
pop
mov
mov
inc
fcoms
xchg
stc
clc
mov
gs
xchg
xor
fcompl
mov
gs
test
adc
sbb
jnp
ja
es
ss
movsl
popf
les
int
mov
adc
rcll
push
scas
cli
or
add
aas
dec
inc
mov
out
sbb
arpl
outsb
mov
and
push
cmpsb
hlt
lahf
jne
in
sbb
orl
int
sbb
pop
in
sbb
mov
out
and
addl
inc
aad
or
adc
jno
push
mov
imul
dec
andb
mov
mov
dec
inc
sarl
lahf
pop
insb
cltd
scas
mov
sbb
fmuls
or
add
and
lea
test
xchg
dec
xchg
enter
gs
mov
xchg
js
out
and
or
fisubrs
xor
out
cmpsb
adc
pushl
jnp
loop
inc
cmp
mov
ds
adc
repz
dec
and
xor
mov
and
aas
xorl
mov
imul
adc
pop
mov
jno
push
in
mov
cmpsb
testl
fisubl
push
mov
sub
test
jl
popf
out
stos
pop
test
inc
sbb
fcomps
fucomi
jmp
mov
jg
ffreep
or
xchg
imul
out
bound
pop
sub
sub
aam
dec
inc
lcall
and
jmp
jnp
mov
inc
push
ficomps
pop
mov
cmp
int
iret
gs
xchg
and
dec
sbbb
sub
fistpll
adc
mov
mov
dec
xor
fildl
jns
mov
jae
les
das
outsl
add
imul
adc
mov
fdivrs
cltd
mov
jge
jb
ret
in
mov
jns
cmpsb
out
push
sub
cld
and
dec
mov
mov
lcall
cmp
decb
inc
fcomip
mov
cwtl
push
ret
hlt
cmovns
call
inc
xchg
out
fldenv
dec
rolb
mov
mov
push
mov
dec
mov
test
adcl
cmpsb
je
pop
out
mov
lcall
inc
mov
inc
test
push
push
stos
fsubl
sahf
lds
xlat
push
lock
ja
icebp
paddd
jno
imul
pop
mov
ljmp
and
inc
sub
sub
daa
mov
pop
fiaddl
popa
sahf
icebp
loop
push
test
scas
in
lahf
jp
lea
repz
shll
out
test
or
push
sbb
pop
mov
in
testl
lods
pop
rolb
pop
xorb
insb
mov
in
cmp
lretw
jae
adc
or
add
gs
ret
mov
imul
nop
mov
cmp
cmpsb
clc
js
adc
jb
push
pop
out
pop
lods
test
jp
mov
add
sub
mov
test
mov
cmp
into
mov
imul
add
dec
int3
pop
cmp
pop
dec
aad
and
js
mov
lret
mov
sub
xchg
cltd
mov
ja
cmpsb
out
add
push
mov
jmp
in
test
sbb
adc
dec
rorb
mov
jns
ss
rcr
mov
pop
sbb
and
jns
repnz
pop
jno
add
pop
int
aad
xchg
test
orb
rcl
push
fimuls
and
push
inc
outsl
ds
mov
cli
fstp
jmp
and
mov
in
push
pop
aad
hlt
adc
popa
pop
test
repnz
lahf
divl
pop
cmp
jl
xor
lahf
mov
fsub
push
dec
sbb
pop
and
repz
mov
ja
gs
fcmovnb
jne
notb
lea
bound
call
and
addr16
mov
out
sub
pushf
dec
in
int
sub
in
stc
clc
imul
popf
cs
addr16
add
dec
insl
adc
addr16
pop
jno
repz
xor
sub
pop
add
repz
iret
movd
enter
mov
mov
add
sbb
jo
fldenv
nop
movsb
xor
inc
sub
xchg
or
cmp
lds
xchg
das
push
adc
scas
mov
mov
pop
das
ret
fsubs
fcoml
push
xchg
pop
mov
mov
frstor
push
ficoml
int
cmpb
mov
fcmovnb
or
loope
movsl
lcall
call
add
jns
and
adc
jge
jne
in
lods
mov
imull
push
je
arpl
sbb
clc
stos
push
negl
repz
out
lods
inc
cld
arpl
mov
sbb
movb
movsl
cmpsb
xor
popf
jecxz
aaa
rorb
mov
dec
sub
subb
fildll
sarb
popf
repnz
push
outsl
sti
dec
scas
les
adcl
sbb
mov
lahf
popa
xchg
sbb
lahf
or
aam
scas
lret
sbb
or
cmpsb
fimuls
push
notb
repz
jl
sbb
rcl
cmp
jb
push
mov
dec
dec
lahf
and
pop
dec
mov
mov
les
aas
test
mov
jo
popf
and
mov
mov
bound
xchg
lahf
mov
push
out
pop
int
aad
xchg
ljmp
sub
and
xor
aam
shr
out
pop
mov
push
lahf
sub
neg
dec
jae
jmp
daa
add
mov
lea
push
dec
and
and
mov
push
or
inc
ja
mov
je
add
das
pop
fptan
push
mov
mov
repz
jle
xchg
shll
mov
lcall
pop
pop
and
cmp
fdivs
push
rorl
xchg
cli
lea
sub
adc
sub
or
sub
mov
es
scas
adc
jbe
and
add
into
clc
fdivl
aas
xchg
push
insl
inc
mov
sub
hlt
pop
jmp
and
xchg
mov
and
pop
jle
mov
and
xchg
mov
mov
test
and
mov
es
xor
fwait
iret
pusha
clc
les
sub
pop
mov
int3
test
gs
cmp
cmpsl
mov
aaa
je
lret
mov
push
dec
imul
decb
and
sbb
push
jle
adc
adc
sbb
or
div
inc
push
enter
cwtl
stc
jl
mov
es
add
sub
dec
icebp
jl
xchg
inc
mov
and
mov
xchg
xchg
pop
gs
mov
xchg
pushf
mov
adc
push
jae
mov
inc
push
pop
stos
cli
mov
add
mov
push
jmp
xor
cmp
jmp
cmp
inc
out
ret
sbbb
add
pop
adc
dec
pop
fistpll
rol
test
insl
mov
push
sub
xor
push
jnp
icebp
mov
gs
xor
stc
push
fsts
in
sub
inc
mov
mov
dec
jae
lret
dec
mov
inc
fisubs
xor
int3
je
pmuludq
jbe
jl
test
pop
jo
sub
lahf
fcomi
mov
push
adc
pushf
sub
cmp
aad
rolb
imull
movsl
shr
add
adc
jmp
jo
fmull
pop
or
xor
cmpsl
js
pop
loope
push
inc
out
call
or
inc
call
testb
mov
movsl
std
nop
loop
and
mov
dec
adc
sub
int
or
push
dec
and
aaa
mov
rcrl
and
jno
pop
or
cmp
mov
out
sti
jb
arpl
fs
mov
cld
lock
mov
sbb
pop
pop
rcrb
push
add
dec
out
scas
jecxz
cs
push
les
call
adc
cwtl
adc
clc
mov
mov
jg
jp,pt
jno
clc
fadds
push
mov
sub
or
in
jmp
inc
mov
or
inc
int3
pop
sahf
lret
or
jle
mov
clc
sub
sbb
inc
push
adc
or
push
sub
jmp
cmp
mov
or
sahf
ss
pop
mov
in
or
inc
or
js
hlt
mov
test
xlat
lret
push
dec
shr
dec
stc
rcrl
in
xor
aad
xchg
inc
or
jbe
jb
movsb
add
add
xor
and
push
mov
fs
arpl
aam
les
hlt
add
repz
add
xor
and
push
mov
fs
arpl
aam
les
hlt
add
repz
or
sub
and
jo
fs
arpl
xor
daa
les
std
xor
lock
loopne
rol
fs
mov
movsb
mov
cs
mov
roll
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
repnz
aad
test
jmp
imul
add
pop
add
add
jg
sub
mov
mov
inc
add
push
add
add
test
add
add
add
add
add
add
add
add
add
add
jl
mov
add
cmp
dec
add
add
add
add
inc
add
add
or
lret
add
add
add
add
add
add
add
faddl
add
cs
add
or
add
lret
add
pop
add
in
or
jnp
je
flds
push
dec
add
add
add
pop
add
sub
mov
cmp
fildl
add
add
add
add
fiaddl
push
verw
cmp
push
add
add
add
xor
je
add
loop
jnp
xor
insl
add
add
add
add
add
add
add
add
mov
loop
jp
enter
fiaddl
cmp
add
inc
add
add
add
add
pop
add
adc
cwtl
add
add
add
dec
add
xor
jp
pop
add
add
cmp
jecxz
ret
add
add
add
add
add
jecxz
cmp
push
add
add
add
add
add
or
stos
pop
movb
add
add
add
add
add
pop
add
add
add
add
add
add
loop
cmp
nop
add
add
sub
sub
ds
add
adc
lret
add
add
add
dec
add
pop
add
repz
add
push
xor
jnp
faddl
add
add
add
add
add
and
add
cmp
push
add
add
add
push
add
add
add
add
add
add
add
add
add
test
push
add
add
add
add
add
jecxz
mov
add
add
xchg
add
add
mov
mov
lret
add
and
add
into
add
add
add
add
add
sub
jo
jle
mov
sbb
inc
add
add
roll
add
add
add
add
add
add
lret
add
inc
add
add
add
popf
add
add
add
add
cmp
inc
add
add
add
dec
add
mov
add
add
add
add
add
sub
push
add
add
add
add
jl
fildl
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
add
cli
add
add
add
jnp
cli
add
add
add
add
add
push
rolb
popf
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
incb
xor
adc
push
add
push
inc
add
inc
add
js
inc
add
add
cmp
pop
add
jb
leave
add
add
add
sub
sub
incb
pushf
add
add
jo
pushf
add
cmp
test
add
add
jecxz
data16
add
cmp
imul
add
add
add
add
add
dec
add
add
add
add
add
sub
ret
add
add
js
fs
fcoml
and
dec
mov
ret
jb
mov
cmp
aam
add
movsl
mov
sub
out
sarl
cmpsl
in
cwtl
xor
dec
xor
dec
mov
je
pop
addb
sub
repnz
mov
jecxz
xchg
jl
dec
int3
jno
aad
adc
loope
pop
repnz
xchg
lds
xchg
xchg
xchg
pop
daa
icebp
push
shll
lods
movsb
jnp
ljmp
and
popa
fildll
mov
sarl
icebp
xor
sub
cli
fsubr
mov
std
mov
int
dec
inc
leave
mov
popf
loope
fcmovu
xchg
out
jp
pop
add
fwait
sbbl
into
mov
int3
stc
mov
mov
push
mov
cmpl
and
add
call
sbb
sub
mov
push
pop
dec
pop
sub
hlt
test
dec
iret
insb
cmp
js
shl
xchg
or
or
mov
sbb
push
pushf
sbb
jge
push
dec
test
or
push
mov
ljmp
pop
lret
jno
push
mov
push
jb
mov
test
and
cmp
addl
out
stos
sbb
push
out
dec
mov
in
movsb
rcl
push
or
cltd
pop
lods
shl
ja
mov
inc
and
mov
fsubl
loope
and
mov
and
xchg
push
cs
aad
fsubs
or
xlat
pop
pusha
cmp
mov
and
jp
cld
xor
cmp
jp
inc
out
bnd
mov
mov
test
adc
ljmp
pop
out
mov
lret
sub
cmp
push
dec
icebp
inc
jns
movb
sbb
dec
mov
xor
testb
fs
mov
in
movsl
sub
mov
out
xlat
fs
xchg
shll
sbb
adc
add
div
dec
mov
push
cs
aaa
xor
into
push
pop
xor
sub
pop
fcomps
pop
adc
push
dec
cmpsb
sahf
mov
outsl
lods
stc
xor
xchg
mov
mov
sub
mov
int
pop
xor
jle
daa
sbb
fcomps
adc
xchg
hlt
arpl
and
mov
fcomps
push
addr16
sti
push
mov
repnz
ljmpw
mov
les
xchg
push
mov
jb
jle
int3
lock
adcb
outsl
xchg
lds
and
scas
jg
icebp
mov
dec
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
