call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jp
imul
cmp
pop
fldcw
leave
sub
imul
xor
fldt
lret
sbb
or
stc
sbb
or
cmp
imul
fwait
mov
mov
dec
roll
jecxz
icebp
popf
clc
lret
dec
lods
sub
sbb
and
pop
fwait
and
and
and
mov
aas
inc
jge
mov
ja
xchg
lret
int3
push
pop
push
test
arpl
fwait
popf
jecxz
sub
push
cltd
jnp
xchg
sub
pop
iret
lock
adc
jmp
scas
test
test
mov
sub
out
or
dec
jmp
aam
or
add
inc
aam
aaa
xchg
stos
sub
xchg
push
fnstcw
sub
xor
xchg
xchg
pusha
loope
sub
sarl
sbb
pop
push
cs
ds
test
pushf
pop
stos
dec
mov
fistl
sbb
scas
repnz
add
scas
and
xor
inc
mov
movups
sbb
push
lea
insl
xchg
or
mov
ss
sbb
jnp
push
xor
or
sub
sub
in
lahf
pop
xchg
dec
mov
shrb
and
pop
enter
add
fisubrs
sub
sbb
or
stc
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
stc
sbb
or
cmp
sub
jnp
imul
or
lcall
ja
stos
add
mov
daa
and
dec
bound
das
cmp
out
or
movsl
out
lods
push
inc
das
xor
dec
addr16
mov
jae
xchg
and
loopne
ja
mov
test
xor
cmp
jae
addr16
cmc
lahf
daa
cmp
icebp
pop
les
adc
cmp
movsl
cmpsb
sbb
sub
pop
loop
mov
loop
or
sub
push
inc
cmp
mov
divb
mov
lcall
push
cmp
in
add
lods
fwait
sahf
sub
fs
fwait
push
adc
pop
cmp
movsb
imul
mov
ljmp
out
leave
ja
ds
hlt
cmp
bound
fbld
adc
ret
xchg
mov
xchg
fistl
imul
sbb
shl
call
xchg
cmp
mov
jge
mov
xor
fwait
mov
shr
mov
mov
bound
scas
adc
jae
push
fwait
adc
push
aad
movhps
mov
jnp
dec
mov
jmp
adc
test
sbb
pop
inc
movsb
adc
push
cwtl
pop
sbb
adc
mov
idiv
jno
mov
pusha
inc
mov
and
and
shlb
arpl
sub
sti
adc
in
mov
lret
cwtl
call
cmc
mov
jae
cmpsb
xchg
jbe
into
jle
xchg
push
lcall
insl
add
adc
sbb
pushf
push
xor
scas
std
repnz
jnp
jp
add
inc
mov
sbb
stos
test
jb
dec
test
out
sub
sbb
fmuls
pop
cmp
fwait
test
fwait
pop
cmpsl
leave
cli
push
sub
jne
add
sub
push
mov
push
ret
fistl
out
inc
jmp
nop
pusha
ret
sbb
jp
mov
test
loop
mov
addr16
out
mov
and
fmuls
testb
mov
stos
push
push
sarl
insb
dec
ljmp
or
jl
lods
add
andl
xor
aad
adc
mov
push
das
and
pusha
xlat
lcall
cmpsb
popf
cmp
ret
and
mov
jge,pn
inc
lcall
rorl
xor
les
pop
mov
sbb
je
xchg
in
inc
aam
sbb
test
sub
jge
xchg
adc
and
adc
clc
stos
cmpsb
aaa
js
push
sub
and
inc
push
add
add
aam
push
in
in
cltd
hlt
daa
xlat
jg
xchg
mov
xor
or
je
iret
into
xor
mov
cmp
orl
mov
sbb
dec
test
pop
pop
xor
leave
jp
popf
jbe
into
loope
inc
jne
sbb
outsl
or
ret
jo
cld
inc
jg
jno
or
out
lock
mov
sub
mov
and
test
jns
push
cwtl
mov
sbb
outsl
cltd
push
rorb
shl
mov
add
in
shll
les
in
mov
mov
cli
xor
in
scas
inc
outsl
addb
pop
movsb
hlt
pop
imul
push
adc
cli
push
mov
or
testl
inc
repnz
cmc
cwtl
dec
jae
mov
fdivrp
push
dec
cmp
jne
loopne
sub
loopne
dec
cmc
ljmp
nop
aad
pushf
nop
ds
add
outsl
and
adc
push
or
lds
jge
cltd
int
lods
mov
ja
adc
aaa
jbe
in
xor
stos
iret
inc
mov
addl
out
jo
fstpt
mov
sar
jmp
lock
ficomps
jl
gs
cmc
aaa
movsl
xor
std
sbb
lods
mov
data16
pop
sub
pop
mov
mov
sahf
pop
mov
push
pop
pop
cld
in
add
mov
mov
out
jb
inc
mov
call
stos
mov
sbb
push
andb
ds
out
pop
gs
ret
aam
adc
daa
into
out
test
mov
or
xor
addr16
mov
add
std
arpl
ljmp
mov
ja
loope
sub
scas
fisubs
pushf
inc
cmpsl
rorl
gs
xchg
leave
aam
mov
ficoms
xchg
cltd
mov
fcomp
cwtl
jb
mov
cmpsl
sbb
fucomi
pop
fstpl
out
sub
adc
mov
mov
test
pop
pusha
test
lret
sbb
cmp
mov
addr16
test
sbb
sub
ret
lcall
mov
or
lods
ror
aas
or
bound
adc
sbb
sbb
push
scas
mov
xchg
and
mov
sbb
imul
rolb
je
orb
jg
cmp
lods
or
sbb
xchg
imul
into
inc
stc
dec
test
mov
cli
stc
in
in
mov
je
in
pushf
in
xchg
pusha
jmp
fcomip
or
mov
mov
leave
cmp
fistpll
mov
push
cmp
push
xchg
jb
mov
mov
jle
testl
xchg
jg
mov
dec
adc
and
dec
xchg
enter
in
aam
push
push
movsb
addb
mov
js
lahf
jbe
mov
je
xchg
out
mov
pop
fdiv
dec
pop
mov
mov
test
mov
pop
fdiv
and
and
xchg
scas
cmpsl
cs
push
iret
sbb
fs
loopne
ret
mov
mov
lret
out
aas
xchg
andl
mov
inc
ds
shrl
inc
fnstsw
cmpsb
pop
daa
or
dec
dec
or
pop
jns
loope
or
xchg
xchg
push
dec
pushl
dec
inc
mov
fucomip
sub
data16
jo
xlat
dec
sub
jnp
sub
push
sbb
outsl
je
lret
mov
loopne
loopne
cmp
mov
xlat
cwtl
and
jecxz
mov
filds
mov
stos
mull
push
xchg
frstor
xchg
cmp
negl
sbb
dec
lods
out
insb
stos
jno
jo
or
sahf
mov
out
dec
dec
sbb
clc
add
aam
fnsave
adc
pop
ljmp
jge
jp
scas
fldenv
jg
sbb
jl
or
insb
xor
dec
flds
cwtl
imul
pop
outsb
sahf
xchg
push
cmp
jo
stos
mov
lret
loope
jl
add
aas
ror
xchg
and
ljmp
dec
cmc
ss
in
pop
loop
leave
ds
and
cltd
or
sub
cmp
loope
push
cli
sbb
ret
shlb
adc
aam
cmpb
add
xor
add
jne
mov
mov
push
dec
sbb
mov
sbb
dec
jl
les
scas
ljmp
lret
adc
mov
scas
out
or
pop
mov
jne
or
dec
stos
call
inc
dec
pop
push
mov
out
ret
mov
adc
pop
jmp
mull
xchg
ficompl
int
lcall
out
ja
clc
fidivs
sbb
push
adc
rol
mov
inc
xor
sbb
or
je
ret
sub
lret
jmp
jno
aad
mov
mov
push
or
sub
arpl
mov
int
mov
lea
imul
gs
sbb
sub
mov
cld
pop
js
mov
lods
divb
mov
nop
and
dec
mov
cltd
mov
jle
pop
dec
rcrb
mov
cltd
xchg
loopne
xchg
sahf
jmp
fldl
jnp
dec
adc
stos
push
lcall
mov
pop
mov
add
fisttps
push
fiaddl
mov
mov
xchg
jmp
lock
xchg
int
rclb
xor
xchg
js
call
sarl
push
aaa
push
cld
rclb
and
pop
leave
insb
sar
push
movsb
sbb
dec
xor
push
test
stos
dec
mov
or
gs
mov
addr16
add
and
cmp
out
xchg
out
mov
in
popa
and
cmp
aam
aas
cmpsb
and
cmp
cli
push
push
popa
mov
shlb
inc
push
cmpsl
nop
push
js
iret
and
lock
dec
je
xchg
push
adc
mov
mov
adc
pop
dec
pop
xchg
push
lahf
or
mov
arpl
inc
popf
sarl
les
cmp
sub
mov
mov
add
loop
pop
sbb
adc
sub
addr16
fwait
in
test
ret
lcall
and
frstor
icebp
sbb
roll
sbb
add
clc
sub
pop
insb
adc
jb
insb
ror
adcl
repz
cli
or
jecxz
imul
lock
iret
aad
fmuls
mov
icebp
push
inc
ljmp
jp
inc
xor
test
push
fmulp
push
adc
outsl
fidivs
jmp
clc
pop
cmp
xor
or
lret
enter
jae
lock
adc
cli
xlat
rorl
in
shrl
aaa
mov
sub
out
enter
cltd
data16
rorl
sbb
fwait
sbb
push
inc
adc
lcall
mov
sub
es
imul
lods
stos
pop
shlb
fsubrp
dec
in
cs
mov
or
daa
icebp
jb
mov
push
mov
call
push
fsubrs
in
aaa
bound
mov
incl
or
shlb
js
popf
arpl
jns
jno
mov
test
test
mov
and
cld
jle
popa
jne
call
mov
jecxz
shrl
mov
dec
rcrl
rolb
or
mov
fwait
out
scas
aam
and
sbb
mov
lret
mov
push
pop
or
push
rcl
sbb
pop
call
lock
pusha
and
in
lea
add
xorl
bound
sbb
out
mov
mov
and
aas
mov
outsl
adc
test
jno
adc
leave
js
add
movsb
push
es
cmp
dec
mov
scas
cmpsl
fnstsw
push
mov
pop
inc
scas
ret
stc
test
cs
scas
jmp
sbb
dec
mov
lahf
lds
sub
insl
leave
popa
ret
fisttpll
rorb
testb
jmp
imul
or
jg
in
jle
pop
aam
fs
lret
sbb
xor
fwait
lret
pop
mov
and
fwait
les
sub
pop
adc
in
stc
std
mov
jmp
inc
shll
pop
mov
sbb
fmull
call
lock
call
add
and
xlat
addr16
xchg
test
test
adc
xchg
add
shll
ficoms
ss
mov
add
mov
dec
push
mov
jmp
fnstcw
mov
xchg
test
mov
inc
xchg
push
xor
mulb
push
lret
jnp
xchg
dec
rorb
sbb
add
aas
inc
dec
or
out
loop
xchg
sbb
hlt
ljmp
cmpl
test
std
and
xor
popf
pop
test
xchg
and
jge
xchg
test
mull
pop
cltd
inc
adc
mov
inc
imul
jp
not
dec
mov
out
sbb
add
repnz
mov
or
fidivrs
jle
mov
pop
lock
fs
ja
inc
test
push
jl
gs
mov
sub
lea
aam
mov
das
movsb
ss
mov
fsubrl
xchg
sbb
dec
mov
and
sbb
mov
popa
pop
cmp
push
mov
repnz
cmpsb
ret
lock
jmp
mov
pop
sarl
inc
mov
outsl
inc
jns
add
push
or
add
jae
es
cmp
pop
sub
sub
xor
repz
dec
data16
pushf
adc
cmpsl
test
xor
jno
sbbb
mov
jno
call
into
xchg
inc
lods
cmp
lods
and
aaa
out
daa
dec
addb
adc
mov
xchg
int3
cwtl
adc
add
daa
mov
fwait
lret
and
aad
lret
mov
xchg
jl
adc
mov
rcrl
or
pop
push
in
lds
into
lcall
pop
fucomip
inc
cltd
cmpl
or
adc
aam
pop
cmp
mov
xchg
jecxz
sub
rol
fnclex
aad
mov
sub
cwtl
pop
inc
cld
leave
jecxz
rol
fs
jne
fists
add
mov
dec
cmpsl
mov
push
jnp
adc
jbe
aaa
stc
or
add
pop
fisubrs
lret
bound
in
out
xchg
les
or
or
cmp
push
lret
fucomip
inc
gs
data16
hlt
xor
sub
lea
push
cmp
jnp
mov
jg
lahf
out
jp
int3
jmp
push
xchg
test
loop
repnz
xchg
cmp
inc
jne
pop
clc
adc
or
sbb
push
cmp
xchg
push
xchg
mov
jmp
in
cmp
jecxz
arpl
cs
insb
xchg
jecxz
cmc
inc
fs
mov
sub
stos
inc
into
push
mov
mov
xor
dec
lds
and
push
lods
mov
jae
stos
xor
adcl
in
mov
scas
sub
iret
lret
mov
jb
repz
subb
loop
insl
addr16
test
push
xor
dec
int3
arpl
jns
into
stos
test
inc
cmp
add
int
in
test
shll
sbb
arpl
enter
cmp
and
fsubrl
mov
dec
push
stos
add
js
sub
or
adc
js
test
xor
dec
xor
stc
repz
stos
jno
or
mov
pop
cmp
sbb
add
notb
push
mov
pop
mov
lock
dec
cmp
shll
movsb
bound
jl,pt
repz
push
and
mov
mov
div
push
xchg
daa
sarl
js
xchg
push
scas
es
xchg
in
lds
cli
push
test
push
pop
xchg
inc
arpl
pop
je,pt
push
xchg
or
xorb
xchg
arpl
mov
xchg
and
jmp
imul
pusha
mov
pop
jecxz
add
gs
aam
fdivl
stos
out
mov
push
lahf
aam
add
cli
std
xor
cmp
dec
out
dec
xchg
shlb
lret
int3
or
mov
mov
sbb
je
negl
cmp
js
pop
inc
xchg
xchg
repnz
sub
incb
pop
dec
push
int3
mov
rcrb
sbb
icebp
jge
sbb
test
pop
add
or
mov
out
call
clc
in
stc
aas
pop
sub
movsl
pop
or
push
or
bound
xchg
add
daa
jnp
mov
sbbb
in
stos
ficomps
sbb
mov
sbb
pop
roll
cmp
cmc
cmp
inc
loopne
inc
xorb
cmp
flds
cwtl
sbb
push
sbb
in
mov
xchg
repnz
mov
lcall
das
cmc
xchg
fcompl
mov
rcl
jnp
mov
mov
inc
sbb
pop
outsl
int3
data16
orl
mov
mov
daa
ds
cmp
adcb
loopne
aad
and
enter
or
adc
clc
push
push
push
mov
xor
push
flds
lret
cmp
mov
mov
mov
cmp
xchg
jmp
mov
int
cmpsb
and
mov
out
sti
push
pusha
je
inc
fsubrl
sub
sub
mov
mov
sub
nop
add
dec
in
push
adc
nop
lods
mov
leave
pextrw
and
push
jecxz
mov
mov
jg
mov
lods
pop
xchg
jg
adc
jp
jne
subb
and
pxor
sub
fsubs
in
dec
hlt
pop
ret
jp
idiv
or
imul
cmp
outsl
dec
loopne
mov
test
gs
jp
das
mov
xchg
shll
xchg
sahf
mov
xor
orb
mov
xor
sbbb
add
stc
test
repnz
push
jmp
sub
jo
lea
loopne
sbb
jne
jmp
fs
adc
mov
or
sbb
xchg
pop
inc
data16
mov
ret
out
popa
jns
pop
push
in
movsb
adc
mov
and
test
push
and
imul
jmp
jecxz
mov
es
call
mov
in
out
mov
dec
not
and
mov
push
icebp
mov
aas
imul
sub
mov
lret
scas
mov
mov
addr16
mulb
mov
pop
mov
add
stos
sub
sbb
fnstenv
sbb
lcall
hlt
cmp
dec
inc
mov
xchg
cmc
mov
or
insb
fbstp
out
jg
push
add
mov
icebp
ficoms
jle
inc
cmp
adc
mov
shrb
fnsave
scas
lea
cld
sbb
jbe
pop
push
outsl
mov
push
out
ljmp
mov
add
cmp
orl
sahf
out
test
mov
mov
outsb
mov
lret
daa
inc
cmp
popa
pop
call
jg
lea
mov
rol
into
popf
lcall
sbb
xor
xor
popf
dec
lret
inc
flds
dec
cmpsl
ret
dec
imul
cmp
mov
jns
mov
xor
sbb
jmp
lds
into
mov
inc
loop
loope
jl
mov
xor
ja
mov
loopne
pop
or
push
popf
outsl
xchg
test
xor
out
sub
mov
aaa
mov
and
gs
cmp
iret
sti
or
xchg
js
outsl
cmpsl
dec
add
xchg
mov
adc
push
push
sbb
std
js
jns
in
lock
sub
ljmp
push
mov
mov
dec
sbb
insl
mov
jae
mov
cmpsl
mov
ret
movsl
sub
dec
jg
stc
push
inc
in
sbb
out
mov
mov
and
sar
jle
adc
clc
sbb
stos
testl
in
push
cmp
dec
inc
ret
jl
mov
and
jbe
push
and
sar
add
repz
mov
adc
nop
scas
int
pop
ret
pop
data16
mov
fsubp
fldcw
sbb
xor
mov
aas
or
inc
popa
pop
in
inc
pop
mov
arpl
pop
test
mov
out
fsubrp
out
repz
sub
pop
lods
pop
add
movsb
xor
fildll
xchg
popf
and
addr16
stos
dec
mov
cli
out
sub
add
aam
push
push
mov
cli
xchg
or
mov
push
mov
in
lcall
loope
pop
ror
fwait
imul
fs
leave
xchg
xor
test
jle
nop
push
jbe
jge
xor
dec
push
je
push
xchg
mov
out
fistpl
out
loop
icebp
jecxz
cs
orb
addl
fucom
scas
sbb
sub
int
add
cmp
lret
fdivl
or
mov
push
lods
lock
js
out
push
mov
dec
jno
mov
jb
add
lret
mov
int
and
inc
dec
stos
sub
ja
push
fmuls
jge
fnstsw
cmpsb
mov
jg
sub
stc
xor
mov
pop
js
std
sahf
and
lret
cmp
std
xchg
push
das
adc
xor
iret
mov
cmp
les
pop
mov
fucomi
adc
addr16
mov
push
loopne
cmp
cmp
pop
test
in
rcll
or
push
addr16
hlt
add
aaa
dec
xchg
loop
iret
bsf
clc
push
adc
dec
cmp
sbb
lret
and
pushf
push
mov
push
and
mov
push
dec
stos
cmp
sub
sbb
or
stc
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
stc
sbb
or
cmp
sub
jnp
imul
mov
mov
sub
sbb
leave
jmp
sbb
or
cmp
sub
jp
imul
mov
mov
cmp
sbb
mov
stc
sbb
mov
into
shll
mov
test
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
daa
popf
ret
mov
push
mov
mov
cmp
mov
insl
bound
pop
lods
sub
cmp
or
sbb
mov
cmp
fimuls
jge
insl
mov
cli
int3
mov
jb
es
loop
ljmp
sub
std
sbb
insl
sub
sub
or
sbb
flds
stc
pop
lds
call
xchg
sub
push
jp
lds
and
sahf
in
mov
xor
popf
sub
or
xchg
cmp
fcmovb
mov
cli
and
add
in
push
pop
aaa
jle
add
das
bound
mov
mov
adc
mov
fcmovb
and
sbb
out
add
push
aad
mov
mov
xor
xchg
mov
cmp
mov
fsubs
ss
adc
add
cmp
sub
iret
push
jp
dec
mov
jle
or
mov
or
lret
dec
mov
sub
lock
push
sti
xor
inc
mov
mov
cwtl
jnp
mov
fs
xor
fisttpll
push
repnz
or
mov
imul
scas
imul
decl
fildl
sbb
dec
stc
cmp
sbb
outsl
mov
int
std
sbb
ljmp
sub
mov
insl
push
jp
dec
mov
cmp
or
sbb
ljmp
sub
mov
insl
push
mov
jl
sbb
push
jle
test
add
jae
pop
in
sub
adc
test
cmp
mov
les
loope
xchg
xchg
stc
js
xor
gs
pop
jo
enter
adc
jno
dec
ss
mov
in
andl
or
jge
cmp
lea
mov
out
push
mov
popf
lods
inc
cs
adc
jmp
dec
sbb
adc
out
sbb
es
lds
push
daa
cs
jmp
lret
mov
jae
adcl
mov
sbb
mov
add
mov
xor
inc
inc
fwait
into
dec
dec
xchg
mulb
loopne
sbb
out
cmc
sbb
push
imul
bound
outsl
movsl
jo
leave
fildll
popa
in
pop
bound
and
xor
jns
arpl
jno
jb
rorb
test
mov
scas
mov
inc
je
int3
inc
jns
imul
sbb
jg
shlb
outsl
cmp
sbb
rcrl
pop
mov
cs
or
cs
mov
jle
pop
adc
jp
insl
lahf
scas
pop
aaa
push
bound
mov
mov
mov
xchg
or
push
shlb
shrl
add
push
lcall
sar
repnz
cmp
ret
mulb
outsl
repz
sub
js
mov
enter
xchg
cli
adc
inc
pusha
sbb
popf
mov
inc
out
push
push
sub
push
cmp
fmuls
push
sub
inc
lret
xor
mov
imul
imul
mov
shll
test
pop
and
mov
xor
inc
adc
nop
push
lret
sub
in
xorl
dec
ret
fmull
loope
movsl
lea
jecxz
add
push
loop
bound
insb
hlt
fimull
mov
jbe
or
incl
daa
das
mov
ficomps
push
aam
dec
popf
out
ret
arpl
enter
scas
cmpsl
ja
mov
cmpl
adc
mov
add
pop
pop
lahf
sbb
dec
inc
add
popf
push
dec
add
mov
cmp
sbb
ret
aas
push
push
movsl
jecxz
xchg
ds
sub
mov
dec
popa
leave
pop
insl
xor
jne
scas
sbb
pop
cld
sub
jmp
inc
nop
mov
pop
jp
push
ficomps
cwtl
inc
aas
adc
add
xor
fldl
cwtl
xchg
push
shrb
xor
mov
mov
mov
in
lcall
lock
xchg
cmp
or
jb
fs
jne
xchg
lods
add
push
test
sti
fsubrs
inc
sti
mov
mov
insb
pop
add
fcomi
loope
cld
leave
jmp
mov
fs
mov
and
xchg
mov
push
cld
lds
push
mov
push
sbb
xchg
push
lcall
lret
cs
xchg
sahf
push
cmp
in
and
imul
pop
pop
xchg
fbld
test
jp
or
insb
mov
imul
lahf
and
fisubl
mov
rcrl
fisubs
push
mov
aam
lods
xchg
repnz
imul
aaa
inc
ljmp
lahf
dec
int
cmc
jp
dec
shrl
fnstcw
lret
aaa
jb
adc
dec
scas
lcall
sub
lret
or
ficompl
pop
lds
lods
mov
add
push
pop
leave
jae
cli
push
out
arpl
inc
mov
mov
dec
leave
int
or
dec
jnp
pop
dec
cmp
fildll
mov
mov
loopne
mov
mov
push
jns
xchg
shl
pop
lret
loop
int3
and
mov
test
movsb
xor
dec
push
sbb
mov
pop
xchg
mov
and
jae
and
enter
stos
sub
mov
and
les
pusha
mov
fisttps
adc
mov
adc
adc
push
cmp
or
sub
xchg
popf
inc
xor
aad
les
push
mov
inc
nop
inc
in
mov
insl
test
jno
mov
movsl
outsb
test
and
ljmp
shl
fdivrs
fistl
cmp
std
xchg
mov
xor
in
push
cli
mov
dec
lcall
xchg
mov
test
in
xchg
flds
jecxz
shr
add
mov
xorb
pop
lea
aad
aas
mov
clc
xor
adc
and
in
out
in
pop
add
xorl
xor
pop
mov
sbb
mov
mov
fsubs
jg
or
pusha
cmp
xchg
mov
inc
aaa
pop
sbbb
xchg
sub
xchg
hlt
pop
or
and
scas
stos
mov
xorb
imul
rol
ret
and
aad
test
jl
sub
das
jecxz
jo
adc
mov
rolb
or
push
mov
mov
jge
sub
test
add
das
nop
sub
inc
push
or
cs
mov
aad
jecxz
insb
popa
xchg
and
std
xchg
dec
sbb
cli
pop
outsb
jp
test
data16
mov
sub
sub
cmpsb
xlat
in
inc
pop
mov
ljmp
fisttps
das
inc
iret
fucomp
adc
lret
sbb
dec
push
aas
xchg
sub
stos
dec
sti
add
repnz
adc
mov
xor
pop
fdivl
xchg
arpl
test
int3
es
cmp
ja
fdivl
imul
scas
stc
cmp
jle
sbb
cmp
lods
add
test
xchg
mov
repz
mov
movsl
adc
push
into
jmp
lock
add
cld
pop
sahf
out
scas
or
out
mov
mov
push
repnz
mov
cmp
cmp
lcall
dec
sarl
iret
gs
mov
lods
push
stos
enter
jp
adc
sub
insb
pop
xchg
inc
aaa
xor
and
fbld
inc
in
imul
das
adcl
leave
push
enter
data16
repz
mov
pop
xor
and
jle
iret
in
insb
fnstsw
mov
adc
lahf
cltd
ljmp
rcr
je
add
clc
fdivs
jo
lret
lret
push
gs
fcmovbe
jb
je
adc
sbb
test
in
push
je
push
cmpl
mov
push
gs
jmp
pusha
or
mov
jmp
sub
or
xor
in
xchg
mov
or
mov
scas
outsl
add
movsb
fisttpll
sbb
hlt
out
and
mov
test
inc
sub
mov
es
imul
cs
pop
pop
inc
xchg
jo
dec
sbb
jnp
cmpsl
cmp
cmpsl
sbb
pop
insl
xlat
mov
dec
jecxz
adc
aaa
mov
sub
cmpsl
cmp
dec
fiadds
mov
jno
or
mov
fwait
pop
bound
xchg
mov
ss
mov
js
in
and
mov
sahf
iret
mov
or
and
mov
into
bound
ss
dec
in
arpl
es
fstpl
test
shlb
xor
iret
enter
push
in
mov
inc
xor
sub
ret
bound
sub
inc
push
xchg
push
and
push
push
addr16
mov
and
adcl
sub
dec
inc
mov
gs
outsl
and
mov
lods
std
lock
ret
mov
sahf
sbb
add
jbe
cli
add
ret
jns
insl
clc
ud0
notl
mov
stos
adc
mov
mov
inc
lds
push
sub
outsl
ljmp
and
or
js
adc
mov
mul
data16
inc
mov
rorb
xor
cmp
xchg
mov
rcrl
adc
xor
imul
dec
xchg
mov
mov
pop
in
xor
mov
call
jnp
cs
add
xchg
enter
test
inc
addr16
mov
dec
stos
scas
stos
xlat
xor
push
sub
rcrl
xchg
rdmsr
ja
xchg
les
insb
stc
cld
test
adc
negb
and
les
stos
dec
jnp
lock
loope
xchg
sub
pop
insl
mov
dec
pusha
shlb
js
xor
cs
cmp
fsubs
and
jb
xchg
int3
popa
push
shl
rcrb
es
hlt
pop
mov
mov
adc
xchg
lock
sbb
add
fidivrl
pop
sbb
fistpll
push
in
xchg
xor
dec
insl
push
int3
inc
or
out
push
sub
std
call
sub
test
jne
lahf
out
mov
dec
dec
loop
bound
test
out
pusha
xor
dec
sub
jge
es
bound
mov
push
jne
push
jmp
dec
jno
pop
pop
arpl
add
mov
push
add
jecxz
xchg
es
enter
loopne
test
test
dec
inc
je
adc
pop
pop
mov
sbb
add
xlat
cld
std
test
xchg
test
cmc
mov
in
cld
mov
push
sbb
into
bound
nop
loopne
cmp
inc
jae
enter
ret
dec
mov
daa
inc
pop
push
add
adc
sbb
sub
nop
sahf
mov
xchg
stos
and
in
mov
testb
cmpsb
test
sub
mov
jge
xlat
xlat
stc
lods
xchg
xchg
xor
mov
xchg
and
hlt
leave
fsubrl
adc
dec
setl
dec
and
ficoms
xchg
test
fwait
jnp
pusha
jmp
fists
mov
mov
sub
xchg
iret
xchg
adc
lock
addr16
pusha
int3
sub
test
insb
nop
xlat
shll
and
jno
pop
push
sbb
and
loop
xor
and
sub
sahf
push
aaa
jl
dec
cltd
or
or
loope
dec
aad
cwtl
sub
sub
movsb
cmc
mov
and
mov
fmull
and
repz
pop
loop
movzwl
cltd
dec
mov
and
add
dec
in
in
aad
lret
mov
pop
cmp
push
jl
dec
inc
jecxz
xchg
fildll
add
ret
xor
and
push
xchg
icebp
inc
and
jg,pn
pop
sti
or
gs
inc
sub
mov
adc
dec
daa
aam
js
pop
out
add
stos
roll
mov
xor
push
subl
push
in
jno
sti
and
xchg
repz
jne
pushf
mull
pop
mov
daa
adc
movb
gs
test
dec
scas
jmp
aam
cltd
fistl
jno
imul
xchg
cmp
push
jmp
push
sbb
xchg
fsubl
ficoml
daa
or
test
daa
dec
jmp
xor
int3
sub
aad
jg
pop
push
nop
jl
out
fcmove
dec
and
imul
adc
ret
jnp
test
or
sub
out
mov
xchg
data16
jecxz
pop
sub
das
hlt
mov
subps
mov
jge
push
fbld
lret
xor
adc
in
xchg
mov
nop
mov
adc
jae
loop
cmp
jge
shll
popl
sbb
jmp
jnp
test
cmp
sbb
jb
sbb
mov
mov
nop
dec
cmp
outsb
bound
scas
cmp
and
nop
das
lret
ffree
push
bound
dec
sub
pop
dec
fwait
inc
les
mov
jg
fs
add
imul
dec
adc
mov
test
icebp
gs
dec
xor
push
loope
adc
pushf
mov
int3
xchg
jmp
inc
inc
jle
cmpsb
js
in
out
ret
mov
jnp
push
mov
sub
sbb
shrb
sub
jecxz
push
lcall
inc
jnp
loopne
sahf
jae
nop
or
inc
dec
lret
imul
stos
addr16
push
mov
pop
cmpsl
xchg
das
popa
test
pop
mov
push
cmp
mov
or
pminsw
mov
or
enter
iret
inc
and
aaa
shrb
cmpl
fists
jge
xor
dec
nop
enter
sbb
and
inc
out
jmp
sbb
or
jecxz
xor
mov
pushf
xchg
xchg
insb
lods
leave
int
enter
xchg
jle
arpl
in
ret
and
dec
mov
arpl
pop
and
fstp
cltd
es
sti
jle
and
dec
cmp
popa
add
jmp
mov
in
mov
rol
adc
bound
xchg
cli
movsb
push
mov
pop
cmp
sti
cmp
jae
loope
mov
or
into
stos
loop
or
inc
popa
push
movsl
inc
cmp
scas
cli
shl
pop
int3
mov
sub
or
sarl
mov
ds
dec
cmp
scas
enter
push
icebp
push
cmpb
mov
and
repz
cmpb
pop
cmp
mov
scas
pop
or
sub
addr16
lock
cmp
fisttps
adc
lahf
scas
inc
lcall
into
inc
test
mov
or
push
inc
mov
ffree
cmpsl
nop
push
int
popf
outsl
aaa
sub
mov
sbb
jae
cmp
inc
lret
jo
ds
fdivrs
sub
and
adc
out
dec
jmp
xchg
das
aaa
xor
jmp
jmp
jnp
imul
jbe
arpl
adc
out
push
stos
sbb
push
cmpsl
cmc
mov
xor
test
adc
push
mov
mov
loop
jne
or
repnz
cmp
mov
icebp
movb
push
shrb
push
pop
aad
fxch
push
mov
repnz
sti
push
out
and
mov
mov
jbe
mov
inc
pop
je
jnp
out
addr16
xchg
cmc
fstps
mov
sbb
paddsw
xor
aad
pop
ret
mov
pop
lcall
dec
dec
push
sub
xchg
in
ret
ret
daa
in
lods
shlb
les
push
bound
lods
arpl
mov
repnz
lea
sub
les
rclb
lods
add
fwait
addr16
inc
mov
arpl
pop
ret
cmc
mov
xchg
sti
test
jb
xchg
mov
pop
clc
sub
mov
inc
xchg
xchg
ljmp
dec
psubusw
jns
nop
lock
inc
add
sub
jnp
jae
ret
adc
imul
cltd
mov
sbb
push
add
inc
imul
in
dec
mov
cmpsl
ret
subb
in
fs
jp
inc
jg
movsb
xchg
xchg
sub
push
mov
cmpsb
mov
enter
les
shll
or
sar
hlt
and
testl
jle
iret
inc
lods
xor
shl
mov
rcl
out
hlt
icebp
loopne
push
xchg
in
push
jl
leave
xchg
mov
daa
andb
es
sub
sbb
mov
aam
dec
inc
into
aaa
jnp
push
ficompl
sbb
cmc
push
out
test
addr16
sbb
mov
xorb
adc
cmpsb
cli
and
mov
adc
pop
push
cmp
and
pop
mov
adc
jmp
cltd
scas
xor
scas
mov
adcb
adc
and
and
outsb
sub
mov
outsl
mov
pop
je
stos
lret
shrl
nop
lods
inc
inc
inc
xchg
into
pop
sbb
in
add
mov
aas
sahf
test
or
out
repnz
dec
mov
insl
add
and
test
pop
ret
xor
in
outsb
mov
imul
ja
scas
aam
xchg
insl
fs
aad
jp
add
decb
scas
std
sbb
jns
mov
movsb
repz
cmpsl
xchg
add
push
cwtl
lock
inc
add
pop
push
imul
insl
inc
mov
pusha
mov
insl
push
ret
and
int3
mov
jp
cmpsl
inc
mov
fadd
iret
rorl
add
and
mov
rcr
mov
std
pop
in
inc
ljmp
shll
inc
jmp
fidivrs
loopne
stos
jmp
les
test
cmpl
sti
cli
aas
out
cmpsb
call
sub
inc
ss
xlat
cmp
xor
call
push
popa
loopne
notl
sbb
pop
decb
mov
adcb
push
mov
repnz
lea
ja
mov
inc
mov
xchg
test
xlat
xchg
adc
dec
pop
fdivl
add
pop
popf
mov
lods
jmp
inc
aam
jb
xchg
stos
push
ds
dec
dec
adc
jp
bnd
xchg
out
test
popf
js
cli
sub
es
std
xor
jns
dec
push
out
sbb
imul
adc
dec
adc
ds
add
mov
xchg
ljmp
mov
ljmp
fiadds
loopne
push
scas
mov
movsb
mov
sbb
aam
icebp
shll
mov
into
inc
mov
mov
mov
pop
xor
rcl
adc
mov
lods
xchg
scas
and
jmp
movsl
pop
adc
jnp
and
lods
outsl
out
outsl
add
pusha
sbb
icebp
lock
mov
ds
out
lcall
leave
rorl
and
out
lret
adc
and
jmp
int
movsl
into
add
popa
into
xchg
mov
adc
sbb
sub
jnp
push
dec
std
lahf
cmpsl
ret
jb
mov
xor
stc
sti
out
retw
lods
lea
mov
or
jae
sbbb
insl
xor
mov
lods
sbb
mov
push
sub
aaa
insl
cmc
int3
into
popa
jnp
in
xor
sbb
in
inc
insb
jge
xor
xor
sarb
xchg
iret
cmpsl
mov
movsb
into
shl
mov
add
jnp
cltd
stc
jmp
gs
subb
data16
push
pushf
sub
cmp
inc
pause
sahf
hlt
add
inc
mov
out
dec
mov
dec
push
dec
mov
add
jp
into
call
test
stc
in
jno
cli
popf
push
dec
icebp
mov
movsl
mov
in
mov
ja
ret
dec
out
daa
jmp
push
sub
ja
into
out
push
std
pop
cmpsb
xchg
add
pop
mov
pop
insl
xor
flds
mov
pop
arpl
mov
aad
cmpsl
adc
ljmp
into
out
out
mov
arpl
loopne
push
add
aad
test
xlat
sub
xchg
pop
and
adc
pop
xorl
push
xor
cmc
cmp
xor
fisttpl
cwtl
inc
lock
out
out
jge
adc
imul
sbb
jecxz
fwait
sbb
xor
lods
mov
mov
data16
pushf
sub
mov
sbb
test
mov
fidivs
cmp
repz
fiadds
lret
push
cmpl
popf
pushf
iret
cltd
lcall
pop
mov
sbb
lods
jbe
hlt
and
mov
xchg
punpckhdq
cmp
scas
or
xchg
and
xor
outsb
mov
inc
mov
xlat
ja
aad
mov
icebp
aam
nop
mov
push
dec
jnp
push
stos
das
inc
push
jge
or
xor
stos
and
adc
std
fcompp
xchg
cmp
xlat
pop
pop
jmp
out
and
xchg
das
xor
lea
mov
xlat
pop
add
inc
lods
cs
js
and
dec
cltd
jecxz
das
ret
aaa
mov
test
push
lds
pop
mov
repnz
sarl
out
aaa
mov
mov
mov
fyl2xp1
andl
add
or
push
fs
pop
shrl
sti
push
pushf
test
dec
cmpsb
lahf
test
jne
cmp
jmp
xor
pop
cmp
xchg
xor
jg
or
lods
push
cmpb
frstor
daa
hlt
loope
adc
ret
mov
sti
pop
int3
enter
sbb
dec
imul
add
pop
mov
cmpsb
fldcw
imul
mov
fnstsw
js
fdivs
imul
cmpsb
or
test
jecxz
xor
mov
cwtl
inc
fists
lret
jae
sbb
movsl
ror
into
push
cmc
sbb
inc
inc
iret
ja
imul
nop
adc
push
pushf
pop
mov
dec
imul
ret
xor
mov
pop
adcb
sbb
or
in
aas
fisttpll
ja
loop
pop
mov
mov
pop
cmpsl
pop
enter
popf
movsb
pop
nop
in
mov
mov
aam
test
frstor
jge
mov
push
lcall
mov
inc
fstpt
int
std
sbb
ljmp
sub
mov
insl
push
jp
dec
mov
cmp
or
sbb
ljmp
sub
mov
insl
push
jns
pop
mov
ds
cld
sbb
out
sbb
fisubrs
mov
insl
jb
push
ret
test
or
adc
loop
cmpsl
pusha
cmp
xor
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
scas
adc
sahf
pop
xchg
xchg
inc
out
sbb
shrb
cmpsl
push
xchg
push
lds
sti
in
cmc
pop
adc
xor
gs
jne
cs
pop
rorl
push
lds
jle
or
pop
sbb
or
cmp
out
dec
jge
fiadds
push
push
ljmp
pop
jne
adc
iret
dec
sub
fidivrl
insl
ss
pop
pop
fwait
mov
sub
in
inc
cli
pushf
add
call
stos
add
push
pop
xchg
jns
adcb
notb
repnz
das
ja
insl
xor
into
dec
jecxz
outsl
nop
mov
aad
add
sahf
pusha
out
inc
decb
cmc
std
push
movsl
icebp
jmp
andl
or
adc
shrb
mov
mov
outsl
jle
subb
shl
cmp
addr16
fidivs
mov
push
pop
push
mov
add
pop
cmc
pop
lds
and
gs
insb
ficomps
lods
push
jle
dec
in
aaa
jbe
jo
inc
out
mull
cmpb
sbbb
icebp
dec
xchg
dec
xlat
data16
cmpxchg
add
mov
in
xor
xor
xchg
dec
loopne
shlb
cmpsb
adc
insb
out
in
inc
out
sti
cmp
into
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
pop
add
mov
gs
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
pop
add
cmp
fldcw
jns
fidivl
out
pop
xchg
sbb
popf
gs
cmp
add
jle
nop
mov
mov
pop
xchg
sub
xchg
add
es
cmpsb
aam
insb
rcll
add
mov
fadds
mov
cld
cltd
dec
add
ret
movsb
orl
push
jl
jmp
jl
dec
lcall
jb
pop
lock
mov
push
xchg
leave
pop
ja
outsl
je
push
loope,pn
inc
orb
lods
cmc
call
or
andl
aaa
out
bound
jb
push
lret
sub
xchg
jle
cmp
imul
fwait
xchg
pop
add
push
iret
xor
adc
jmp
int3
mov
sbb
ficomps
cmp
jb
int3
jne
adc
movsb
popa
lcall
test
lods
cmc
fisttpll
push
outsb
leave
subl
pop
push
sub
lods
sbb
dec
sub
ljmp
aam
lahf
xchg
xor
xchg
loope
xchg
xchg
mov
mov
xchg
outsb
push
dec
push
adc
inc
add
js
mov
jbe
jp
cltd
mov
cmpl
lods
hlt
sub
push
aaa
stos
and
mov
mov
dec
sub
or
xchg
cs
enter
sub
xor
pushf
fistl
cld
push
rorl
loop
cmp
test
xor
xor
jecxz
xlat
shr
dec
sbb
or
xchg
bound
pop
add
nop
popf
mov
lret
outsb
jmp
lret
jo
test
das
xchg
add
imul
pop
dec
add
pusha
xor
jge
cli
js
or
cmp
out
cs
and
je
out
outsl
inc
mov
sub
hlt
push
call
xor
or
and
xchg
pushf
mov
ffreep
or
movsl
jno
out
call
sti
mov
out
inc
mov
or
fisubs
rorl
pop
add
push
sbb
cltd
and
nop
popa
xor
jp
xchg
mov
mov
lret
lods
leave
rcrl
xchg
inc
or
and
in
rcrl
jg
jge
int3
cmpsl
xor
push
fs
fstpt
adc
inc
jbe
enter
test
loop
lahf
sahf
fcoml
xchg
push
icebp
in
pushf
sub
arpl
popa
adc
sti
out
pop
mov
data16
mov
fwait
mov
adc
xor
insl
stos
imul
xchg
mov
fs
insb
ljmp
push
fimull
out
jecxz
pop
aad
dec
ja
jmp
fwait
mov
adc
je
mov
pop
xor
cmp
mov
pop
mov
aad
push
arpl
mov
pushf
hlt
es
inc
outsl
aaa
pop
pop
inc
fistpll
shrb
fucomip
dec
mov
ljmp
stos
and
and
sti
mov
sti
inc
insl
dec
xchg
cld
orl
dec
pop
stc
add
cmp
imul
loop
or
xor
addl
pop
into
enter
xor
pop
or
sub
aas
rcll
dec
bound
mov
xorb
add
jne
std
xlat
outsb
pusha
and
int
orl
mov
inc
inc
jnp
jge
aas
adc
rorl
in
jp
shrl
jge
rcl
iret
adc
dec
repz
pop
xchg
insl
or
push
std
jb
shlb
push
sar
stos
mov
inc
push
int3
dec
stos
shr
inc
cli
je
pusha
xorb
jo
jp
inc
mov
lret
mov
rcrb
fmull
and
icebp
ljmp
mov
xor
scas
inc
test
mov
int
movsl
repz
cli
cmp
sub
dec
test
insl
psubusb
ljmp
sar
and
cmp
popa
push
jno
jg
push
add
stos
cld
sub
mov
mov
test
addl
mov
xchg
mov
pop
aaa
push
inc
mov
aad
adc
sar
int3
mov
pop
cmpsb
pop
sbb
cmp
mov
adc
push
cmp
inc
sbb
insb
inc
imul
adc
std
pop
cwtl
mov
mov
jo
xor
repz
xchg
shr
mov
push
jp
jo
mov
mov
fistpll
or
dec
popf
mov
push
cmp
and
lods
leave
or
in
out
add
outsb
andb
xor
push
mov
pop
leave
inc
and
dec
cmp
out
push
or
lcall
mov
pushf
mov
pop
mov
and
xchg
adc
sbb
cmpsl
add
movsl
inc
mov
je
je
mov
mov
fs
lret
jg
push
pop
pop
inc
dec
jg
in
std
jb
rcrb
dec
cwtl
scas
adc
jp
xchg
fldl
jle
xor
ja,pn
xchg
pop
jnp
fbld
cli
out
pop
pop
divl
fisubs
scas
daa
fucomip
dec
inc
cmc
ljmp
or
add
fisubrl
cld
sti
int3
push
adc
mov
push
and
mov
sub
sbb
mov
and
add
xchg
dec
mov
pushf
xor
lods
mov
hlt
pushf
lcall
jecxz
icebp
cmp
test
test
lsl
movsl
inc
rorb
sub
leave
xor
inc
cmp
pop
iret
fildl
or
inc
xor
pop
or
pushw
test
jl
mov
outsb
movsb
jle
test
notl
mov
repz
dec
push
mov
push
fisttpl
cmp
dec
insl
bound
pop
push
rcl
cmp
pop
lret
int3
mov
test
sub
xor
in
not
adc
add
inc
out
push
ret
pushf
fldt
dec
rclb
mov
and
jge
mov
sub
sub
cmp
xor
xorl
imull
loope
mov
negl
enter
push
xchg
loope
jecxz
adc
push
fs
call
add
fwait
pop
cld
jge
mov
xchg
push
push
pop
cmp
nop
iret
sub
sub
cmp
adc
mov
xor
in
hlt
inc
push
stos
sbb
lds
pop
xor
add
popf
mov
cmpsl
pop
sub
int3
repnz
ficompl
jge
notl
sbb
push
arpl
push
jnp
fdivs
sub
mov
push
mov
jo
cltd
push
js
shl
or
das
push
adc
pop
fiadds
cmp
jne
mov
cwtl
mov
imul
xlat
xchg
in
jmp
mov
insl
pop
clc
pop
dec
insb
xor
cmp
dec
push
jne
cs
inc
out
lret
xchg
jnp
sti
notb
xchg
jno
dec
pushf
push
cltd
imul
idivb
sbb
outsb
cwtl
and
mov
sbb
decl
mov
xor
cmpsb
inc
bound
mov
stos
addr16
cwtl
jge
cmp
sub
jns
push
push
adc
hlt
in
mov
xor
pop
or
lds
int3
test
inc
sbb
repz
test
test
pushf
inc
inc
inc
aaa
ja
enter
fimull
sub
mov
aas
scas
jge
cmp
repz
dec
jnp
inc
pusha
adc
mov
sarb
push
cld
mov
pop
and
jb
dec
inc
leave
jl
mov
fstpt
enter
je
icebp
ret
pop
mov
xor
and
out
pop
xor
pop
xchg
xchg
cs
sub
mov
jbe
call
aaa
jle
rorl
push
fimull
mov
pop
out
jne
mov
lret
jno
icebp
sbb
jnp
inc
shrl
scas
pop
shlb
cmpsb
rcrl
sbb
aam
pop
push
push
xchg
xor
sub
dec
cmpsb
pop
mov
xlat
mov
sub
push
shrl
mov
ret
mov
lret
inc
push
mov
adc
xor
mov
xor
mov
test
out
in
jge
mov
push
loopne
movsl
aad
int
out
sub
xchg
push
lcall
int3
mov
and
and
popa
movsb
ss
in
dec
sarb
dec
sarb
arpl
mov
jle
mov
shlb
jbe
scas
js
nop
or
gs
jbe
xchg
xchg
pop
mov
push
jecxz
lods
mov
imul
jg
shl
sbb
inc
scas
clc
ret
popa
xor
or
test
cltd
adc
hlt
aam
mov
adc
fdivl
mov
scas
jo
out
test
in
dec
in
out
out
repnz
jne
insl
mov
xchg
jmp
xlat
or
lods
mov
jmp
cmpsl
sbb
nop
add
fstpt
jge
repz
adc
imul
mov
fistl
js
aas
enter
add
pop
mov
icebp
cmp
inc
push
rol
cmp
cli
mov
fimuls
nop
cmp
sub
mov
sub
out
in
popa
ror
sbb
cmc
inc
pop
loope
icebp
fs
sbb
inc
and
cwtl
icebp
xor
inc
daa
and
cli
xchg
adc
shl
hlt
out
lret
leave
inc
rcl
test
mov
repz
mov
mov
test
and
mov
cwtl
nop
jle
mov
in
in
adc
outsl
adc
mov
mov
mov
cmp
dec
pop
cwtl
rclb
and
push
repz
subb
decl
mov
mov
mov
hlt
cmp
scas
sbb
mov
daa
dec
add
nop
negb
adc
push
lods
lret
shrb
inc
xor
lea
mov
fadd
mov
push
sub
test
stos
inc
mov
shlb
dec
cld
js
clc
sub
movsl
dec
xchg
mov
repnz
mov
sbb
adc
mov
loopne
jb
test
stos
test
jp
aas
push
clc
dec
mov
jb
rcr
cmp
sub
dec
and
in
pop
repnz
sub
xchg
mov
jg
or
push
cmpsb
imul
dec
xchg
dec
mov
xor
mov
lahf
addr16
mov
mov
mov
mov
cmpsl
cmp
jmp
outsl
push
out
mov
outsl
and
push
cli
pusha
add
imul
std
inc
lret
ljmp
lock
repnz
rcrb
cwtl
pop
dec
fsubrs
jae
nop
pop
dec
ffree
pshufw
lods
dec
in
jl
pop
fbstp
call
in
xchg
jae
and
in
clc
ljmp
xchg
dec
fwait
or
sti
cmpsl
insl
dec
bound
lea
movsl
sub
iret
add
mov
bound
pop
cs
stos
ret
xchg
add
iret
out
mov
rcr
lea
push
xchg
cwtl
mov
adc
dec
das
pushl
push
xchg
mov
popf
fldcw
jne
scas
mov
xor
cltd
add
pop
mov
and
sub
mov
pop
movsl
scas
mov
nop
fstpt
std
sub
pop
pop
sub
jg
fisubs
lret
sbb
cli
std
cltd
cmp
loope
add
jb
loop
test
iret
mov
jno
fisttps
out
cmpl
in
push
mov
lds
sub
adc
dec
sub
mov
inc
pushf
arpl
iret
push
mov
jns
pop
ljmp
js
pop
and
outsb
test
push
cmp
insl
fsubrs
xchg
pop
add
mov
dec
clc
push
cmp
dec
sar
xorb
ljmp
add
std
scas
popa
mov
cmp
cmp
adc
cs
push
dec
aaa
imul
mov
mov
inc
daa
jne
inc
and
or
loopne
movsl
dec
jmp
cmp
push
jl
rol
inc
paddsw
jnp
mov
sub
inc
insb
testl
mov
xor
in
in
jmp
int
xchg
popl
sub
cmp
xor
adc
subb
dec
fmuls
and
mov
push
popf
inc
in
cs
icebp
mov
push
adc
insb
ja
inc
aam
push
mov
dec
mov
push
pop
enter
mov
adc
push
and
flds
push
fs
jle,pt
jg
mov
fs
mov
dec
adcl
andl
and
aad
mov
cld
mov
fwait
or
or
jb
pop
lods
addr16
lods
pop
scas
ret
and
adc
in
imul
sbb
inc
ljmp
dec
sbb
dec
pop
scas
mov
lods
sti
rcrl
jge
cmpsb
insb
loope
lds
xor
adc
loop
sarb
push
pop
shrl
sbb
xor
jg
ret
mov
adc
inc
repnz
lds
mov
xchg
cltd
mov
in
xor
or
sbbl
inc
jmp
xchg
dec
xor
sbb
in
fsubrl
push
data16
outsl
and
sub
movsb
sbb
int
or
sysret
and
cmp
cmpsl
push
jge
add
fsincos
sti
imul
dec
pop
sbb
mov
pop
sub
fstpl
dec
setns
and
pop
je
cmp
jbe
dec
jge
jle
inc
xchg
leave
add
out
mov
addr16
fisubrl
lods
stc
mov
cmp
gs
cmp
stos
jge
in
or
xor
dec
cmp
xor
inc
pushfw
repnz
xor
cld
pop
cmc
mov
xchg
pop
stos
mov
sbb
call
mov
lret
cwtl
test
and
sbb
lods
fnstsw
xor
jmp
das
lahf
testb
outsb
xor
push
jns
in
je
and
fisttpll
les
cmp
mov
testb
and
flds
pop
or
call
or
sub
xor
or
push
inc
shrl
xor
add
mov
mov
mov
mov
les
mov
dec
mov
xlat
cmp
sbb
fsubs
sbb
dec
rorl
xchg
inc
addl
sti
into
adc
pushl
sbb
or
out
adc
mov
lods
out
or
lods
jp
inc
xchg
push
les
cmp
push
enter
pop
or
dec
push
sahf
cmp
dec
mov
pop
mulb
add
pop
fldt
cmp
addl
cli
jl
in
add
inc
rclb
xlat
shlb
scas
mov
gs
xor
add
icebp
sub
add
loopne
stos
push
lea
cmc
push
cmp
jo
dec
xchg
cmp
mov
pop
dec
cmp
sub
mov
jle
fisttpl
add
sbb
dec
cs
pop
pop
fistps
sbb
xchg
mov
daa
fcmovnu
cmpsl
or
test
and
pop
testb
push
dec
adc
into
push
push
enter
push
mov
adc
jb
rorl
lea
inc
sbb
imul
or
and
mov
out
dec
pusha
lds
push
loope
test
dec
pop
int3
cli
xchg
cmp
scas
cltd
addr16
imul
mov
push
insb
rorb
les
das
sub
insb
rcrl
and
fdivs
push
orl
jo
mov
adc
dec
xor
cmpsb
xor
mov
mov
sub
cmp
gs
fwait
and
and
lahf
jne
dec
jmp
mov
add
aad
lock
enter
push
jbe
sub
lahf
xchg
inc
movsl
repz
lods
cmpb
lock
sbb
jo
lea
mov
test
mov
shlb
adc
adc
cmp
scas
push
pop
lret
jnp
shll
mov
or
lret
data16
call
xlat
add
or
or
and
or
mov
dec
and
inc
pop
mov
pushf
xor
scas
sahf
sub
xchg
mov
jecxz
push
push
insl
in
push
and
sub
insl
cmp
xor
sub
mov
xchg
popf
stc
cmp
jmp
xchg
and
jo
loope
sub
mov
cmpsb
cmpsb
push
mov
insl
sub
dec
mov
xor
cmpsb
rcl
sbb
push
out
cmp
dec
into
push
xlat
imul
dec
sub
lret
cmc
mov
icebp
imul
js
jo
mov
sti
cmp
pop
inc
push
int3
xor
cmp
xchg
pop
and
push
loopne
sbb
lahf
ficoms
xor
jecxz
jmp
xor
ja
dec
call
adc
scas
mov
scas
sarl
out
lcall
sub
arpl
stos
in
movsl
clc
leave
mov
sbb
test
inc
mov
stos
comiss
dec
inc
aaa
negb
fdivrp
loopne
mov
sahf
ret
lock
ficompl
mov
sarb
fcoms
imul
stos
adc
dec
sbb
xchg
cmp
aas
or
in
addr16
rclb
or
imul
push
out
sub
ss
popf
movsb
push
out
mov
xchg
std
dec
or
jne
jg
inc
nop
inc
cmp
out
iret
movsb
sbb
sarb
aad
pusha
cmp
add
cmp
sbb
fistps
dec
fs
cmpsb
xchg
gs
xorl
pop
push
fs
dec
je
cmp
iret
lahf
and
leave
insl
or
test
sub
adc
shrl
out
in
dec
into
repnz
cmpsb
mov
push
lret
fimuls
fwait
ss
movsl
mov
mov
mov
jae
pop
imul
movsl
movl
aad
scas
out
andl
inc
mov
mov
pop
lahf
mov
lods
clc
lret
xchg
jle
mov
scas
mov
and
ja
daa
xchg
jo
sbb
adc
dec
outsb
std
cld
ljmp
xor
xor
test
mov
sar
adc
cltd
dec
fldt
push
mov
lods
insb
test
repnz
idivb
fwait
sbb
jae
push
dec
outsl
dec
sahf
and
mov
inc
iret
fdivl
adc
mov
push
cli
lds
push
fnstcw
jp
aaa
mov
mov
pop
sti
ljmp
jmp
orb
nop
sbb
xchg
mov
mov
stos
stos
inc
orb
xor
dec
inc
icebp
imul
aas
or
ds
xchg
and
xor
cwtl
mov
inc
insb
hlt
iret
stos
inc
sahf
dec
inc
push
mov
maskmovq
notl
cld
mov
int3
dec
xchg
es
shll
mov
mov
call
jnp
sub
sub
fmull
push
js
aam
sub
mov
push
pop
std
dec
ljmp
js
lods
push
daa
jns
xchg
push
ss
popf
fs
or
xchg
in
cmp
scas
sbb
mov
or
sbb
sbb
daa
test
cli
sub
adc
daa
aam
je
ljmp
into
ss
fcmovu
push
dec
mov
xchg
hlt
pusha
or
dec
mov
mov
adc
pop
dec
push
ds
sub
push
sbb
jo
jno
sub
inc
imul
popa
mov
clc
bnd
xlat
mov
mov
push
dec
fldln2
jns
sub
enter
jno
sahf
push
xlat
stos
add
cmp
mov
lock
aaa
and
dec
inc
sbb
jle
out
mov
xchg
mov
popf
xchg
cmpl
data16
outsb
lock
ret
fwait
scas
in
fs
xchg
mov
dec
pop
mov
dec
inc
dec
ljmp
insl
test
jp
fidivl
add
xor
loope
push
mov
movb
xchg
and
loopne
lock
mov
dec
pusha
mov
add
dec
cmpsl
mov
hlt
scas
arpl
xchg
adc
fs
stos
pushl
popf
ljmp
aas
in
dec
sarl
subl
int3
lahf
or
push
mov
mov
mov
lods
cltd
int
daa
nop
mov
cmp
fisttps
inc
rcrb
and
jl
sbb
pop
sbb
bound
stos
push
adc
jb
inc
xor
jnp
add
push
push
adc
jge
outsb
add
insl
cltd
test
stos
xchg
dec
xchg
outsl
mov
in
xor
xchg
add
xor
pop
mov
cmp
test
xchg
sbb
and
dec
inc
mov
scas
loope
push
push
lahf
jmp
dec
rcrb
bound
mov
mov
cmc
insb
imul
mov
adc
dec
push
sub
das
ljmp
mov
pop
jo
rorb
push
cmpsl
fistl
jle
dec
lds
sbb
push
rorb
push
gs
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
pop
add
mov
gs
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
pop
add
push
xor
jle
into
jne
test
mov
lds
jle
dec
les
scas
and
inc
out
push
in
cmc
fidivrs
push
femms
mov
mov
pop
sbbl
es
test
xchg
imul
std
fisubrs
add
adc
or
sub
xchg
jmp
les
xor
add
adc
movsb
jbe
or
sub
xchg
jmp
movsl
hlt
mov
push
aam
and
pop
sub
adc
fs
sbb
dec
cmp
sti
fnop
cmpsl
test
add
movsl
sub
inc
pop
sti
repz
xor
push
aas
fcomp
mov
hlt
jne
stc
sub
fnstcw
sti
adc
jns
sbb
adc
fldenv
jecxz
outsl
lret
dec
pop
mov
and
pusha
int3
add
aam
xor
or
and
push
cmp
xchg
push
ret
cltd
loope
inc
inc
aam
test
dec
jle
fwait
sbb
shll
pop
int3
push
and
insb
mov
mov
test
cmpl
push
pop
sbb
inc
call
push
or
aam
jae
les
sti
xchg
xor
stc
testb
aam
push
jge
jecxz
cltd
hlt
mov
arpl
sub
xor
add
adc
fs
push
inc
in
ror
mov
xchg
mov
pop
push
or
or
je
daa
js
dec
rcrl
in
mov
mov
cmp
pop
push
sbb
push
gs
sbb
pop
and
mov
jmp
clc
mov
mov
xor
add
adc
sbb
cmp
fnstenv
in
hlt
mov
mov
xor
add
adc
sbb
cmp
fsts
lds
add
stos
das
out
loop
cltd
add
ret
loopne
add
jecxz
rcrl
js
push
xorl
mov
test
mov
mov
ret
pop
mov
imul
lcall
movsb
popf
xchg
xlat
cmp
mov
lret
mov
mov
add
add
ret
sub
sbb
mov
insl
mov
mov
sbb
mov
adc
and
fnstcw
mov
das
dec
pop
lret
in
pop
adc
inc
push
cmovae
fdivl
dec
sbb
add
jns
xchg
mov
mov
imul
es
xor
pop
test
and
mov
dec
cmp
mov
out
lcall
les
inc
cltd
ljmp
movsb
cmp
aam
out
ljmp
scas
lods
stc
fisttpl
pop
popf
and
or
xchg
jecxz
popf
dec
out
pop
fs
mov
push
inc
sub
loop
arpl
das
xchg
cmpsb
cmpsl
adc
das
pop
in
iret
test
mov
in
xor
add
rorl
cmp
lods
push
call
inc
xorl
xor
xchg
aaa
mov
out
out
mov
jg
sub
fwait
lods
cmp
mov
pop
mov
roll
shll
mov
jecxz
add
lahf
sbb
adc
pop
sub
xchg
push
or
xchg
bound
mov
ds
in
inc
je
movsl
lcall
sub
lahf
jo
jp
inc
mov
jp
add
mov
ret
scas
movsl
divb
sub
sti
dec
xor
jo
pop
ds
fdivrp
pop
mov
inc
push
test
into
ljmp
dec
mov
cmpsl
outsb
rcrl
pop
inc
pop
inc
lcall
in
ffree
xchg
int3
gs
add
adc
mov
cmp
scas
xchg
cmp
idivb
jmp
jbe
je
xor
stc
ret
cmpsl
pushf
ret
or
stos
mov
jnp
push
insl
test
add
push
mov
cmp
es
adc
jle
cmp
mov
imul
push
jb
mov
mov
repz
xlat
push
inc
cmp
stos
pop
addr16
and
insb
dec
sub
adc
xor
imul
leave
lock
and
into
mov
add
mov
cwtl
push
into
int
out
sub
fdivr
ljmp
cmp
pusha
roll
lcall
and
pop
inc
pextrw
push
dec
adc
jg
inc
cmp
fcomp
push
jle
jnp
dec
pop
pop
cmp
inc
dec
and
mov
push
inc
icebp
cli
jmp
popf
arpl
js
jne
loope
ret
jo
loopne
mov
bound
stos
dec
arpl
sbb
cs
pop
andb
call
dec
loope
sub
mov
cmp
mov
ss
jo
lret
jmp
lods
fwait
xor
std
mov
mov
adc
in
int
psubusw
mov
inc
in
inc
ja
mov
jg
or
ds
shlb
fldcw
movsl
arpl
je
or
sar
and
popa
lret
sub
push
sbb
dec
xchg
jecxz
cmp
xor
mov
addl
lret
call
pop
je
movsl
ret
push
movsb
adc
mov
ret
out
pop
jmp
fnstsw
pop
test
add
xchg
sub
popa
adc
jno
loopne
icebp
add
push
cmp
inc
push
xchg
push
daa
xor
pop
and
xorl
jmp
cwtl
lds
lea
cli
adc
insl
mov
sbb
mov
lods
sub
sbb
jmp
dec
and
out
insl
filds
dec
cli
mov
clc
dec
enter
dec
xchg
mov
jmp
test
mov
inc
lcall
inc
out
lahf
pop
cmp
sub
int
or
mov
adc
jle
lret
imul
loopne
inc
fistpll
hlt
lcall
clc
mov
xchg
mov
subl
or
jp
in
jne
xchg
test
adc
pop
stos
sub
mov
xlat
and
push
fcmovne
rcr
and
mov
sbb
ja
cmpsl
sbb
xor
out
pusha
pusha
int
rorb
mov
mov
call
cmpsb
clc
push
into
je
cmpsb
addl
js
push
nop
adc
stos
fwait
or
bound
jl
cmp
inc
aam
jl
call
xchg
and
movsb
mov
loope
push
sahf
int
lods
push
mov
cwtl
add
repz
nop
xchg
jne
push
ret
call
les
aad
cmc
in
add
call
insb
mov
cmp
pop
out
xchg
pop
xor
cli
and
pop
sti
push
push
mov
mov
inc
filds
pop
lds
inc
dec
ror
arpl
mov
xor
orl
jb
jecxz
fcoms
stos
add
and
pop
push
cs
jle
aaa
jo
adc
lock
cmpl
lock
pop
int
mov
mov
fidivrl
insl
imul
aam
aad
mov
jle
pop
sarl
mov
clc
jge
jno
shlb
sub
ret
inc
sbb
cmpsb
mov
push
adc
jmp
popf
adc
lds
xchg
pushf
mov
mov
add
cmp
inc
aaa
and
mov
and
js
xlat
js
test
mov
lret
rcr
cld
ds
xor
mov
rorl
jl
addr16
mov
jle
imul
jl
mov
dec
push
sbb
cmp
movsb
add
jo
mov
jo
or
insl
shrb
ret
int
xor
inc
and
jmp
fistpll
ja
fcomps
and
insb
std
repz
mov
bound
jg
xchg
mov
ja
add
in
pop
push
add
mov
je
out
xchg
adc
mov
rorb
jp
mov
or
jbe
xlat
mov
adc
jns
mov
mov
arpl
das
mov
test
jge
dec
in
fwait
idivb
inc
imul
mov
jg
lcall
adc
jl
add
or
push
push
dec
into
bswap
jmp
xchg
inc
jg
pop
pop
cwtl
push
jg
aad
adc
inc
nop
js
in
in
je
rolb
imul
fnstcw
filds
mov
ret
xor
inc
push
nop
adc
rcrb
sbb
cmp
movsb
cmp
xchg
mov
push
push
mov
lahf
test
cmc
pop
dec
add
xchg
jle
outsb
icebp
jmp
es
sahf
test
loope
testl
mov
xor
imul
sbb
cli
and
xor
jne
out
out
dec
push
jo
sub
sti
fsubl
xor
push
faddl
cmp
popf
mov
inc
dec
jnp,pt
sbb
sub
mov
andb
decb
mov
mov
imul
shll
mov
iret
aaa
and
mov
divl
mov
push
flds
cmp
lret
and
in
mov
cmp
mov
sub
cmpsl
sub
xor
inc
dec
cmp
in
xor
mov
leave
jns
cmp
ret
dec
mov
cwtl
xchg
imull
cltd
push
lods
add
push
mov
pushf
xor
fwait
inc
negl
xor
mov
insl
out
inc
and
ljmp
cld
ficomps
mov
lds
xor
mov
and
pop
insb
idivb
imul
movsb
icebp
ja
enter
std
push
int
and
out
insb
xchg
mov
jecxz
inc
and
push
stos
inc
stos
movsl
sbb
pushf
loope
and
cmp
sti
loope
sub
lcall
xchg
xchg
insl
xchg
add
iret
and
ret
push
xor
ror
addl
mov
pop
out
in
rcll
divb
sbb
jp
push
gs
sbb
jmp
jo
idivb
xchg
aas
cli
mov
repz
lret
outsb
pop
stos
xor
inc
fidivs
dec
cmp
and
lods
pop
pop
cmp
jl
das
into
jp
stos
adcl
mov
jns
ds
mov
scas
mov
jb
leave
sarl
inc
or
call
stos
jbe
lds
icebp
lods
adc
insl
ja
pop
sti
and
or
sub
xchg
sub
ret
rcll
iret
pop
push
sub
aam
cmpsb
add
mov
call
add
fisubrl
mov
inc
dec
loopne
adc
push
cmp
pop
push
in
push
mov
js
add
cmp
cmpsb
cs
jns
push
notl
sub
out
in
or
cmpsb
and
ret
xchg
push
ret
xor
aaa
cmp
es
dec
cwtl
in
xchg
or
xchg
cld
ds
out
and
les
adc
adc
sub
jnp
fwait
push
rcrb
push
pop
bound
lahf
sub
test
xchg
xor
xchg
sti
clc
ds
adc
xor
scas
inc
ljmp
jmp
std
xchg
jg
pop
orb
ja
xchg
mov
pusha
sub
cmp
ljmp
or
xchg
sbb
imul
out
sub
jnp,pt
push
jecxz
lods
cmp
imul
sub
roll
adc
cmp
sub
sti
ret
insb
jg
cmpsl
xor
pop
lret
mov
add
dec
mov
insb
adc
dec
lods
push
jb
sar
es
into
mov
adc
call
pop
lret
mov
lret
jl
push
add
enter
dec
mov
jle
mov
repz
dec
push
daa
std
push
scas
aaa
add
cmc
push
lods
dec
enter
orl
adc
js
push
cwtl
dec
jmp
js
or
push
ret
outsl
test
xor
int3
pcmpgtb
ret
sub
pusha
mov
push
mov
cs
mov
fstl
xchg
call
adc
xchg
repnz
pop
imul
or
test
in
iret
in
ret
inc
enter
in
inc
lock
ljmp
pop
nop
inc
mov
outsb
test
or
push
rclb
cmp
xor
sbbb
icebp
xchg
neg
sbb
cmp
inc
inc
sub
imul
fimuls
inc
lods
shll
into
into
push
cmc
fmull
sub
adc
cmpl
ss
xor
sub
dec
lea
jle
push
daa
push
leave
dec
push
scas
dec
cmc
inc
andb
scas
out
xchg
add
lcall
sbb
movsb
dec
or
mov
es
push
shlb
mov
outsl
dec
mov
aam
lret
dec
repz
lret
sbb
fists
cmp
nop
in
loop
std
ret
push
lret
sahf
dec
push
jb
push
mov
stos
sti
adc
mov
jle
cmc
in
push
push
pusha
imul
or
add
fdivs
idiv
xor
into
cmp
shlb
jmp
sub
lods
or
jae
shrb
popf
push
mov
inc
xorl
ja
mov
movhps
fstps
inc
int
repnz
fwait
push
addr16
or
push
sub
psubb
scas
mov
std
shr
inc
scas
cli
in
and
imul
dec
push
xchg
flds
and
arpl
or
lret
push
fidivl
push
scas
pop
mov
mov
mov
xchg
adc
inc
cli
sbb
fildll
test
xchg
push
mov
and
sub
xor
xchg
sub
pop
imul
cmp
push
addl
lds
ret
iret
pop
outsl
xchg
mov
lock
lahf
mov
push
fisttpll
shll
outsb
push
pop
cmp
dec
popa
repz
sahf
pop
inc
mov
out
ret
pushf
sbb
sub
lods
fwait
cmp
into
cmp
jg
fists
pop
pop
repnz
push
notl
dec
sub
or
in
test
adc
add
dec
mov
sub
cmpsl
mov
jle
sub
cmp
dec
dec
cmc
inc
or
jmp
pusha
adc
sub
xor
mov
inc
mov
and
mov
dec
xor
push
mov
aaa
push
inc
mov
mov
cli
sub
nop
lret
dec
adc
pop
push
dec
lcall
xlat
decl
jg
scas
inc
sub
movsb
push
fnstcw
inc
cmp
scas
xor
adc
xlat
fidivl
add
add
popf
pop
cmp
push
fiaddl
dec
inc
data16
mov
mov
out
loope
pushf
mov
aas
popa
loopne
pop
pop
cmpsb
popa
jmp
mov
inc
sti
aad
sub
push
ss
loop
jle
pop
stos
adc
mov
dec
pop
cld
je
fistpl
jnp
push
push
cs
testl
jle
xor
jo
es
data16
mov
jmp
out
mov
sub
push
shl
pop
enter
jo
jo
aam
dec
sbb
sbb
push
orb
icebp
jns
push
dec
clc
pop
xor
into
pop
pop
repz
in
out
xor
pusha
xchg
or
lods
dec
ror
fmull
push
fsub
mov
fld
nop
shrl
iret
aas
orl
dec
out
dec
or
cmpsl
push
sbb
sub
aaa
add
test
rcr
ljmp
cmp
outsb
icebp
jl
dec
insl
inc
xorb
cmp
or
in
pop
mov
inc
sbb
jecxz
jp
aad
push
inc
cmpsl
dec
das
or
dec
xchg
lret
daa
movsb
fwait
decl
fildl
mov
notl
lret
xchg
pop
mov
insb
sub
and
dec
or
add
lods
shrb
lahf
jp
out
jg
mov
mov
lods
pop
outsl
jo
sub
shll
in
dec
sbb
push
test
movsl
add
out
pop
mov
ja
pop
xor
in
pop
sbb
fistl
shlb
dec
dec
push
add
test
jp
push
in
mov
mov
mov
pop
test
sub
hlt
add
mull
push
out
lds
test
cs
sbb
out
addr16
dec
adc
adc
cmp
flds
fwait
loop
pop
pop
in
sbbl
jno
sbb
adc
and
leave
pop
cmpsl
in
cli
inc
jne
inc
dec
sbb
movsl
loop
punpckhwd
xchg
inc
mov
xor
jge
in
popf
fwait
out
jge
mov
orb
into
dec
loope
xchg
xor
jge
mov
mov
or
mov
xor
lret
xchg
xchg
jns
sbb
cmp
out
sbb
xor
cltd
push
lea
sti
pop
push
cmp
cmc
jne
gs
fldl
mov
inc
xor
or
js
dec
xchg
repz
decb
ret
push
jns
push
dec
aaa
xor
mov
mov
inc
inc
fdivrs
cmc
xchg
aad
xor
sbb
xchg
mov
mov
imul
or
mov
or
lret
fidivrs
lds
or
sub
cmp
ficoms
sbb
jl
mov
fdivrl
add
aam
dec
bound
push
in
loope
fcmovnu
frstor
mov
dec
adc
jo
push
test
movsb
out
mov
push
imul
ret
dec
outsb
dec
aam
xchg
aam
mov
cmp
inc
in
fistl
mov
inc
das
lock
movsl
mov
pop
pop
ret
xchg
lods
lret
rorl
fimuls
jmp
adc
cwtl
jmp
cmc
jge
sbb
and
and
test
aaa
jno
mov
xchg
icebp
outsb
xchg
sub
pop
jle,pn
cmp
lods
int
shr
and
dec
jg
mov
cmp
outsl
and
pop
ja
pop
aas
sbb
mov
cmp
sahf
or
xchg
cmpsl
pop
push
out
pop
and
das
fwait
stos
sbb
pop
fistpl
and
inc
cmp
stos
sbb
adc
sbb
push
int3
in
fisttpl
popf
ret
int
dec
fwait
lea
stos
pusha
enter
fucomp
ds
dec
je
int3
jo
pushw
imul
dec
dec
inc
push
jno
jle
and
in
push
sbb
rcrl
test
xlat
fistps
adc
mov
xchg
sahf
adc
scas
dec
scas
gs
filds
xchg
repnz
es
into
aad
mov
jnp
ljmp
popa
in
push
stos
scas
cmp
push
call
ja
fs
mov
sub
out
dec
xchg
xlat
lds
subb
fmuls
fdivrp
lods
mov
mov
iret
or
sahf
mov
shr
test
jmp
shrb
fimuls
pop
adc
or
out
sbb
add
lret
dec
pop
icebp
or
xor
mov
cmp
cli
mov
jle
xchg
fbstp
sbb
sub
mov
shr
mov
js
movsb
sbb
cld
lds
ja
sbb
mov
dec
xchg
scas
sbb
push
loopne
nop
cmp
push
jno
sub
xchg
stos
xorl
inc
fisubs
mov
dec
fidivrl
iret
or
dec
sub
pusha
sti
das
inc
ss
mov
hlt
cmc
mov
out
mov
pop
ret
fidivs
loope
inc
cli
dec
cwtl
addr16
jbe
cmp
sbb
pusha
sbb
fisubrs
or
pop
loopne
jb
pop
xchg
cltd
hlt
cmp
icebp
lock
push
xor
cs
orb
lahf
mov
jbe
outsb
cmp
ss
mov
mov
add
fisttpll
bound
cmpsl
fcmovne
fbstp
sub
lret
push
mov
or
cli
fmuls
jno
dec
bound
mov
mov
push
xor
faddp
jle
ja
rorb
cmpl
fiaddl
ljmp
popa
adc
push
jnp
je
sbb
ss
jo
pop
stc
divl
mov
dec
negl
jns
in
imul
popf
test
shl
call
xor
cmp
sub
cmpsb
out
push
jb
popf
xor
fidivs
mov
dec
sbb
push
lidtl
pop
fdivl
jns
out
rorb
test
inc
mov
sbb
loopne
or
sarb
mov
push
or
dec
push
int
xchg
add
cli
lret
fs
ret
aas
inc
and
inc
and
push
or
nop
sbb
push
fisubs
dec
lret
into
pop
outsl
push
das
scas
rcll
mov
push
loope
pusha
jp
push
jl
dec
out
imul
icebp
mov
loop
xor
ret
push
sub
aad
imul
jae
mov
xor
xor
push
mov
mov
dec
rcll
sub
sub
mov
adc
lods
fldl
xchg
divb
hlt
sbb
imul
mov
jns
xor
and
loope,pt
pop
mov
cmp
jno
pusha
fst
in
addl
xor
push
xchg
popf
mov
pop
test
popf
push
mov
dec
pushf
cmp
or
ror
and
or
dec
call
shlb
int3
cmpsb
jnp
push
xchg
loop
arpl
xchg
inc
add
int
mov
nop
repz
loope,pn
out
push
xchg
fisttps
pop
dec
mov
xchg
sarl
dec
push
cld
inc
test
xor
aam
enter
mov
cmp
xchg
cmpsl
cs
ja
mov
and
xchg
test
cmpsb
stos
push
jecxz,pt
mov
std
push
lret
xor
add
das
call
xor
mov
out
adc
addl
fistps
pcmpeqb
add
pop
iret
jno
pusha
inc
sub
pop
outsb
mov
sub
push
xchg
rorb
mov
jp
xchg
sbb
shrl
mov
jne
push
add
add
adc
jns
ffree
xor
cwtl
icebp
mov
mov
mov
out
adc
xchg
test
dec
mov
in
mov
mov
mov
xor
inc
pop
mov
insb
adc
fsubrs
adc
data16
sub
es
movsl
and
js
incb
jne
xchg
inc
push
adc
cmp
test
js
lahf
leave
test
hlt
mov
mov
xor
add
adc
sbb
cmp
fnstenv
in
hlt
mov
mov
xor
add
adc
sbb
cmp
fnstenv
add
xchg
jmp
les
xor
add
adc
sbb
sbb
fnstenv
in
hlt
mov
cmp
test
scas
jns
push
adc
add
xor
and
aad
lds
adc
das
rcrb
push
rolb
jne
lods
adc
cld
and
or
cmp
sub
pop
test
movsl
adc
pushf
inc
mov
mov
add
in
aad
lds
pop
test
movsl
insb
push
pushf
inc
scas
push
into
dec
int
mov
jnp
dec
lahf
pushf
outsl
lds
push
xchg
sub
jl
dec
negl
xchg
jg
stc
mov
cltd
adc
mov
dec
jns
add
test
mov
call
loopne
ljmp
mov
cmp
push
xchg
int3
enter
push
lret
mov
paddb
jns
push
nop
pop
les
adcl
xchg
call
xchg
push
arpl
clc
cmp
jmp
insl
xor
push
frstor
mov
movsb
dec
inc
arpl
test
popl
int3
aad
xor
sub
add
test
sub
inc
and
xor
sbb
or
cmp
sub
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
dec
nop
cmp
sub
cmp
and
adc
inc
lea
fdivs
insb
test
jns
imul
adc
inc
cmc
xor
and
jo
push
int
stos
and
inc
pushf
dec
in
xchg
jb
dec
mov
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
fs
rol
out
dec
sub
mov
cmp
xor
out
aaa
leave
pushf
add
push
push
ds
nop
jae
iret
dec
xchg
or
dec
push
pop
or
aam
and
test
xchg
jnp
mov
fs
pop
jnp
sbb
sbb
lahf
lock
pop
test
dec
push
fdivrl
out
push
loop
jae
cmp
xchg
xchg
insl
jns
shll
mov
mov
adc
or
clc
cwtl
fwait
inc
dec
and
ret
sti
inc
test
xor
mov
sub
cli
and
dec
jno
pop
sar
test
repnz
inc
lret
sub
outsl
movsb
lahf
jb
repz
sub
add
dec
add
test
icebp
cmpsl
push
negl
cltd
inc
sbb
hlt
addr16
mov
push
int3
jbe
stc
push
mov
adc
sbb
shr
in
js
mov
pusha
enter
inc
jge
adc
ljmp
ret
xchg
mov
mov
xchg
mov
pop
cld
jg
aas
pop
xorb
cmp
and
pop
andb
subb
icebp
out
lods
ja
mov
mov
mov
jl
insb
cmp
adc
dec
dec
xor
lods
adc
call
and
jbe
jle
cmp
cmpsb
and
mov
inc
jns
enter
cs
jp
cmp
push
imul
clc
movsl
mov
cs
outsb
xchg
inc
std
push
push
dec
adc
jnp
jge
test
test
popf
ds
test
dec
pop
fidivrl
pop
test
insl
popa
cmpsl
sub
lods
mov
xchg
negl
nop
fcomps
arpl
inc
sar
inc
cmp
out
jns
jg
leave
mov
lret
or
jp
sbb
test
jns
jbe
adc
cld
mov
push
ja
add
enter
sbb
push
ljmp
mov
dec
dec
imul
sub
xchg
rcrb
push
or
and
hlt
dec
ja
setl
push
pop
add
or
mov
cmpsb
lods
inc
cld
push
ret
push
ss
mov
mov
cs
add
mov
push
das
mov
xchg
sbb
xchg
mov
or
add
mov
test
movsb
ljmp
push
pop
inc
dec
out
clc
mov
dec
mov
popf
mov
mov
adc
into
or
cwtl
pop
fcomi
fwait
enter
js
lods
loopne
in
lea
jge
mov
in
dec
lock
jmp
jge
je
aam
jnp
test
sub
cmp
sbb
mov
lock
cmp
pop
pop
into
inc
or
test
cld
lock
xchg
cld
lret
xchg
mov
push
dec
cmp
xor
fsin
pop
push
int
mov
mov
es
sbb
jmp
and
push
cmpb
dec
inc
mov
out
enter
xchg
xchg
and
loopne
xchg
dec
dec
fwait
call
mov
cmp
ljmp
mov
in
push
adc
inc
gs
js
mov
and
repnz
rorb
cwtl
leave
cmp
daa
add
pop
jecxz
dec
dec
fcompl
in
sub
gs
enter
cs
imul
inc
cs
cmp
pop
cmp
cs
dec
fucom
dec
stc
loope
es
cmpsb
cwtl
addl
mov
cmc
ja
or
movsb
inc
mov
inc
cmp
in
add
rcrl
rcll
adcl
and
lods
mov
xchg
add
addr16
lods
fldt
sbb
call
push
leave
ror
xlat
pmulhuw
add
sar
pop
xor
cmc
cmp
adc
imul
sti
dec
popa
dec
enter
and
inc
pusha
icebp
or
out
decl
test
testb
int
inc
jne
mov
push
cmp
int
cld
push
or
or
mov
cs
mov
pop
mov
mov
dec
sub
lret
pop
out
pop
lock
dec
dec
cs
mov
in
movsl
pop
mov
dec
pop
hlt
inc
das
and
push
stos
push
push
insb
clc
dec
pushf
pop
scas
ss
daa
inc
mov
int
popf
popa
dec
inc
scas
xchg
rorl
jno
cmp
and
rcr
mov
cmp
cmpsb
xchg
loope
xchg
dec
inc
adc
cmpsl
pop
mov
mov
test
lods
mov
repnz
popa
jecxz
movsl
jmp
lock
arpl
hlt
cmpsl
je
daa
adc
sub
jge
pop
and
cmp
sbb
imul
mov
jge
push
inc
dec
push
pop
cmpl
lret
fistl
in
cmc
insl
dec
mov
cmpsb
add
in
mov
fimuls
call
xor
inc
xchg
int
or
pop
lods
jg
rorb
pop
imul
jnp
mov
inc
mov
inc
xor
sbb
xchg
pop
mov
pop
inc
sub
clc
pop
dec
roll
cltd
lds
push
dec
push
xor
mov
lcall
adc
fdivs
xchg
mov
sbb
pop
dec
mov
orb
jecxz
fldcw
cltd
loope
mov
cmp
push
repz
flds
loope
dec
push
in
pop
jmp
ja
sub
iret
movb
lcall
shll
xor
adc
pop
cmpsb
mov
pop
repz
jbe
inc
mov
popf
jbe
jge
pop
and
orl
scas
sub
movl
pop
cmp
addr16
and
call
cwtl
sub
fwait
ret
xor
leave
lds
dec
adc
xchg
or
icebp
jge
cmp
sbb
popf
mov
lea
mov
gs
incb
xor
in
outsb
stc
les
mov
aam
xchg
lods
addr16
shl
lcall
add
bound
inc
sub
mov
add
mov
and
fldcw
fldcw
push
filds
movsb
jl
mov
sti
cltd
loop
popf
inc
iret
pop
push
jecxz
sti
mov
call
mov
and
shrb
jns
jp
mov
dec
ss
sbb
xchg
stc
cs
movsb
or
jmp
or
and
add
pop
jl
jns
or
sarb
mov
xlat
sbbl
sbb
pusha
mov
divb
stos
in
lret
sbb
pushf
and
pop
jnp
xchg
fwait
movsl
mov
ds
clc
add
jns
or
aas
push
out
dec
xchg
xor
jle
repz
cmpsl
xchg
xchg
hlt
iret
inc
push
lock
and
mov
adc
mov
adc
sbb
pop
xor
add
das
filds
inc
push
mov
shrl
les
mov
cwtl
adc
push
es
jno
pop
movsb
scas
insb
inc
push
mov
and
stos
jle
das
filds
push
fwait
push
mov
push
pop
sub
jge
outsl
in
sub
add
mov
in
loop
pop
lcall
adc
lods
stc
int3
cmp
mov
fwait
and
mov
in
shrb
and
daa
int
mov
pop
or
mov
addr16
push
mov
insl
mov
mov
jle
cmp
ja
pop
inc
popf
es
fmull
lods
test
sbb
popf
lds
hlt
mov
inc
int3
dec
js
xchg
mov
jbe
pop
sti
fldt
sbb
sbb
lahf
push
insl
pop
push
sub
fldt
lcall
dec
sub
inc
lret
inc
or
mov
xchg
jg
pop
mov
cmpsl
mov
push
xchg
mov
pop
das
jbe
in
add
std
sbb
std
dec
sbb
je
jno
and
popa
mov
lods
sub
fcmove
insb
mov
mov
push
test
mov
mov
inc
cmc
jle
xchg
push
out
rclb
out
cltd
xchg
push
cli
iret
sub
push
cmpsl
les
movsl
mov
sbbb
xor
fbstp
shl
xor
push
jge
mov
aas
push
xor
ret
dec
pand
fmuls
and
sbb
push
cmpsl
mov
call
and
mull
orl
mov
inc
pop
jp
sti
sbbl
xor
sbb
icebp
pop
ds
mov
mov
sub
fstps
mov
mov
inc
mov
fstpt
push
es
lods
mov
xor
hlt
stos
jae
xchg
push
test
push
adc
int
jno
bound
sub
test
shrb
aas
or
mov
stos
dec
and
pop
in
lcall
dec
push
mov
adc
add
into
popa
lock
loop
jl
dec
lock
and
outsl
fdivrl
or
pop
outsl
std
mov
sbb
movsb
lahf
sub
clc
push
mov
push
dec
push
inc
or
jae
pop
xchg
inc
push
test
in
pusha
push
dec
pop
mov
adc
xchg
xchg
pusha
dec
adc
out
and
aad
data16
pop
in
add
xchg
cli
test
ss
sbb
sbb
pop
push
push
lcall
andl
xchg
pop
mov
xor
jb
mov
sbb
jne
inc
or
dec
mov
mov
xchg
movsl
add
mov
sar
dec
outsb
ret
into
in
mov
scas
in
scas
out
jle
add
pushl
pop
outsb
jns,pn
mov
or
out
fstpt
xchg
xorb
adc
jo
cmpl
xchg
out
dec
or
xchg
jo
adc
pop
and
pop
out
and
cmp
test
inc
aad
pop
out
cmp
or
aaa
popf
lret
mov
out
or
cmp
mov
push
add
inc
cmp
fwait
std
in
sahf
repz
pusha
out
iret
out
jns
jbe
jmp
stos
or
inc
and
lock
xor
scas
jo
or
mov
jle
gs
call
stos
fstpt
xchg
sbb
cmpl
cmp
xchg
subb
stos
lds
cltd
pop
mov
dec
push
push
cmp
cmpsl
jb
jns
leave
dec
jo
xor
stc
or
inc
pushw
push
subl
popa
insl
es
dec
fwait
clc
cmpsb
sti
sbb
inc
mov
xchg
ret
push
pop
jo,pt
add
or
lahf
aaa
loop
loope
push
stos
sti
in
test
jge
rcll
cmp
cmc
jb
into
ljmp
sti
jg
sub
adc
dec
movsl
int3
addr16
adcb
call
fmull
icebp
or
push
cmp
push
dec
jae
outsl
or
aad
stc
adc
int
sub
jmp
aad
push
sbb
pop
pop
sbb
mov
les
roll
mov
mov
cwtl
cs
cld
inc
push
aas
fsubrs
pop
test
enter
dec
inc
test
xor
ljmp
sbb
xor
sbb
lods
add
mov
out
cwtl
mov
int3
or
mov
orl
andl
aas
mov
in
mov
sbb
int3
js
or
mov
pop
add
add
pop
mov
cld
sbbl
repnz
outsb
inc
push
jne
push
jbe
and
mov
and
clc
movsb
dec
mov
xor
out
fcoml
test
jbe
leave
and
lret
cmpsl
in
adc
ds
pop
xchg
jle
sbb
ds
or
xor
dec
jne
add
xor
adc
cmp
shll
pop
xor
dec
imul
mov
outsb
inc
cmpsb
and
sar
cli
lcall
or
lea
pusha
movsb
mov
adc
pop
lds
mov
add
sbb
out
add
ficoml
or
or
fcmove
mov
cmp
xchg
out
sub
ss
fs
cmp
fidivrs
imul
stos
dec
xchg
cmc
ljmp
and
inc
arpl
dec
in
cmpsl
cmpsl
shll
pop
xchg
jbe
vcvtss2sd
int3
xor
sub
mov
and
ss
clc
movsl
jno
lcall
cmpsl
and
scas
cmp
push
cli
lds
into
std
scas
ret
or
inc
sub
mov
aas
xchg
push
mov
push
cli
sbb
ret
int3
lock
outsl
xlat
ja
shlb
mov
mov
jnp
xor
push
xchg
dec
movlps
out
and
xor
dec
dec
rorb
lcall
mov
lods
pop
and
sar
inc
into
repnz
sarb
add
cmp
in
push
push
out
sahf
in
in
fxch
nop
in
shll
sub
mov
minss
sti
mov
xchg
int3
xchg
add
or
sbb
into
scas
mov
fnop
fnsave
test
jp
jne
repnz
dec
data16
sub
lret
dec
loopne
mov
icebp
nop
sub
popf
sbb
stos
ror
mov
ret
rcrb
mov
insl
jb
or
dec
int
xchg
fnstenv
sti
jb
pop
and
push
dec
je
enter
dec
cmp
out
movsl
dec
int3
add
or
pop
loope
cmp
push
pop
int
sbb
inc
lret
add
cmp
xchg
sub
repz
lock
mov
stos
mov
fwait
sbb
push
mov
enter
pop
lret
xorb
inc
jmp
jmp
and
push
ret
xchg
push
movsl
fisubl
lcall
pop
or
dec
jecxz
into
dec
in
faddl
addr16
aaa
or
sti
or
cmpsl
lcall
ljmp
or
push
movsb
movsb
xor
mov
lods
popa
pop
xor
dec
sbbb
loop
mov
fimull
sub
aaa
xchg
fildll
inc
dec
adc
enter
pop
cwtl
dec
add
aam
pusha
adc
push
or
loope
ljmp
sub
xor
mov
xchg
mov
aam
ljmp
outsl
je
jb
aad
into
adc
leave
negb
jl
or
push
psadbw
movsb
fisttpl
pop
aam
mov
out
sub
mov
jecxz
andb
and
jl
mov
shr
or
mov
addr16
out
xchg
pop
hlt
sti
shll
mov
lods
push
js
sbb
pop
mov
pop
fidivl
in
lea
mov
rorl
inc
fcompl
les
rclb
push
lods
inc
cwtl
xchg
out
mov
jb
and
pop
or
stos
out
mov
inc
test
jo
into
adc
das
pop
sbb
sbb
mov
movsb
mov
pop
sbb
add
movsl
inc
sar
fbld
push
dec
cltd
int3
shlb
sub
cmp
fnstsw
stos
sub
loope
addr16
cmp
xchg
adc
mov
and
dec
scas
orl
sub
pop
ss
fdivrs
dec
and
mov
enter
mov
cmp
sbb
scas
ljmp
int
inc
pop
adc
dec
cmp
daa
shrb
outsl
add
mov
lret
bound
cmpsb
fwait
pop
or
mov
loope
fsub
bound
dec
or
xor
shll
mov
pop
mov
push
mov
inc
add
sub
aam
fidivs
lea
popa
cmp
mov
xor
jecxz
lea
int3
jge
neg
pop
sbb
gs
mov
jo
mov
pop
pop
call
jg
rcll
addr16
sbb
movsl
pop
cmp
mov
and
lcall
push
faddl
dec
and
pop
xor
lds
ljmp
add
int
push
insb
cmp
subl
cmpsl
data16
outsb
arpl
push
aas
mov
and
push
lahf
fwait
inc
test
sub
jle
mov
stos
cmp
cmp
mov
dec
out
mov
cmc
inc
imul
or
add
sub
movsl
sahf
sbb
outsl
enter
notl
xor
mov
lahf
pop
cmpsl
push
mov
mov
xchg
rolb
les
mov
fs
xor
or
xchg
add
and
mov
fcmovbe
loopne
popa
cmp
pop
jnp
cmp
pop
icebp
lret
cmc
shlb
pop
pusha
out
nop
push
pop
mov
push
icebp
outsb
adc
or
bnd
popf
mov
out
or
sub
cltd
or
movsl
push
jns
xchg
sbb
push
push
lock
lahf
shlb
cmp
sub
loope
xchg
insl
cmp
call
movsb
rcll
aam
stos
fwait
ret
or
stos
sbb
mov
lret
lods
dec
test
fcomps
lods
add
adc
stos
or
and
cmp
mov
mov
mov
inc
adc
inc
and
das
sahf
pop
sub
jnp
inc
inc
pop
dec
addr16
xor
insl
dec
mov
pop
mov
add
xor
std
sbb
iret
cmc
shrb
mov
repz
sahf
ret
sub
xchg
dec
out
inc
mov
sub
imul
test
subl
clc
jp
push
in
cmp
popf
in
add
add
fwait
push
cmp
jmp
push
push
bound
aas
sarb
sbb
pop
push
fdivrl
add
mov
cli
decl
xor
aas
int
imul
inc
rcll
xor
mov
jge
cmp
test
push
push
aad
lret
dec
loope
iret
xchg
aam
js
and
testb
sbb
sbb
jge
xchg
pinsrw
sub
push
add
ds
pushf
notb
push
mov
adc
fwait
push
pop
add
sbb
add
nop
mov
push
cmc
xor
ss
and
sbb
aas
daa
ret
jo
sub
mov
adc
cmp
mov
nop
fistps
inc
sahf
push
fdiv
shlb
mov
lea
xchg
cld
jmp
int
or
out
test
push
cwtl
mov
call
add
loop
test
fsubs
outsl
cmp
jl
notb
rorb
dec
stos
ss
jns
push
cli
push
loope
inc
push
jne
insb
ds
mov
cwtl
outsb
sbb
pushf
adc
fcoml
dec
pop
fwait
iret
and
aas
arpl
movsl
orl
xor
ja
push
lea
icebp
jecxz
xor
push
or
jne
repz
fcom
cmpsb
push
adc
mov
outsb
pusha
fisttpl
mulb
xchg
arpl
mov
xor
mov
and
lret
push
jae
scas
or
pop
je
sbb
inc
xlat
push
je
repnz
sub
or
movsb
and
in
test
inc
add
adc
jo
sub
movsl
push
lahf
push
andb
in
mov
into
mov
test
int
dec
cmpsb
xlat
jbe
adc
cmc
rorb
adc
or
clc
in
hlt
fwait
mov
aad
and
inc
mov
jecxz
xlat
jg
fldt
adc
test
insb
ret
push
mov
or
xor
push
mov
mov
add
adc
mov
sarb
fs
mov
sbb
sub
mov
cmp
mov
xchg
inc
dec
adc
and
dec
std
push
mov
pushf
rcll
xor
pop
shrb
fst
bound
sub
jge
mov
ret
pop
out
mov
aaa
sbb
popf
int3
out
sub
fucomi
test
jge
shl
push
jno
jno
mov
int
cli
xor
jno
mov
mov
mov
sbb
fists
dec
push
mov
les
or
jg
insb
rcrb
rdmsr
mov
push
rclb
pop
sub
xor
sub
shl
xchg
test
inc
inc
out
ljmp
inc
adc
ret
mov
insl
test
mov
inc
outsl
jecxz
pop
inc
rorb
push
xor
insl
shl
lods
push
js
inc
nop
pop
stos
mov
fsts
sbb
gs
push
fucom
mov
pop
mov
test
xor
out
orb
mov
fcoms
sub
dec
mov
lock
out
aad
push
adcb
adc
cmp
loop
shlb
mov
fisttpl
insb
mov
push
adc
add
lea
adc
jns
popa
sbb
cmp
movsl
ljmp
add
gs
dec
pop
call
mov
cld
cmp
sub
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
pop
test
movsl
insb
push
pushf
inc
fistpll
xor
add
adc
daa
out
pop
fiadds
into
jle
add
mov
movsl
fs
pop
xchg
aas
out
xlat
push
push
aaa
daa
out
pop
fiadds
into
ja
scas
push
sahf
inc
jmp
jle
outsb
xchg
pop
xchg
pop
out
xlat
push
push
aaa
daa
out
pop
fiadds
into
ja
scas
push
sahf
inc
mov
cmp
and
js
jb
jnp
jns
mov
sahf
pop
lea
js
xor
popf
int3
mov
mov
jp
insb
pop
aas
loope
lret
fdivr
call
scas
and
add
outsb
sub
mov
cmpsb
xchg
pop
enter
jge
dec
or
repz
popf
inc
sbb
jle
outsl
xchg
mov
shrl
mov
aam
add
push
xchg
inc
outsb
inc
subb
jbe
js
cmpsl
cs
das
imul
mov
ret
mov
int3
mov
mov
sub
out
or
clc
pop
icebp
in
and
lock
push
sub
mov
das
mov
adc
vpmuludq
daa
out
pop
fiadds
into
ja
scas
push
sahf
inc
mov
pop
xchg
ds
xlat
push
dec
push
incb
lahf
inc
adc
or
cmp
ret
cli
push
ret
or
cmpsb
imul
xchg
inc
lods
adc
sub
adc
add
ljmp
mov
push
mov
bound
push
sahf
inc
mov
pop
xchg
ds
xlat
push
push
aaa
daa
out
pop
fiadds
into
ja
scas
push
sahf
inc
mov
pop
xchg
ds
xlat
push
push
aaa
incb
mov
xchg
sub
add
je
test
ljmp
movsl
jbe
xchg
push
mov
lods
mov
imul
mov
inc
in
pop
testl
mov
repz
pop
in
pop
push
ja
push
test
or
addb
cmc
in
lcall
lahf
dec
fsubrs
dec
fs
ss
xor
xor
or
shlb
jns
pop
mov
inc
out
call
cld
mov
fwait
sbb
inc
sbb
jne
clc
cld
call
inc
xchg
mov
fimuls
inc
sub
outsl
sbb
xchg
xchg
add
add
das
aas
inc
pop
repz
in
ret
filds
ret
push
arpl
mov
add
jno
add
add
neg
sub
add
mov
add
xorb
std
jmp
push
mov
push
pusha
lahf
sub
leave
xchg
sbb
call
push
bound
xlat
dec
test
sub
enter
push
ds
xor
xlat
mov
push
lcall
cld
js
dec
in
jl
cmp
xchg
imulb
inc
fdivs
cmp
dec
and
fwait
popa
jge
dec
lret
insb
push
aas
sbb
or
aas
inc
in
xlat
mov
jp
iret
lods
test
xor
std
lods
inc
jne
sub
or
in
xchg
xchg
mov
test
fwait
nop
sarb
nop
pop
sti
stos
mov
pop
jg
push
pop
mov
es
into
pop
scas
sarl
xchg
xchg
leave
dec
dec
rolb
nop
sub
cwtl
xchg
rcrl
rclb
cmpsb
dec
adc
mov
jmp
ret
in
xchg
mov
inc
xchg
pop
cmp
insl
fs
mov
mov
insb
ds
lods
jl
in
inc
sub
ja
bound
cmp
outsl
loop
std
xor
add
add
filds
mov
cmp
inc
mov
dec
jae
call
cmp
test
cwtl
cmpsb
sub
mov
pop
xor
adc
aaa
mov
test
fldenv
xor
je
mov
adc
add
arpl
popf
int
jne
out
imul
ret
bound
add
repz
aad
mov
and
jge
shl
nop
mov
xor
daa
mov
dec
mov
jb
rcrb
mov
es
call
mov
nop
imul
aam
jle
dec
mov
loopne
ret
aas
add
jnp
inc
lea
iret
cmp
sbb
out
popa
dec
mov
ja
cs
sub
lret
adc
enter
pop
je
sub
loop
mov
aad
clc
jp
cmp
sbb
ficoml
test
outsl
push
fsub
out
jmp
push
inc
jle
add
fdivrs
add
sub
jecxz
jnp
lods
out
xor
add
loopne
sub
filds
mov
and
xchg
mov
fimull
xchg
cmp
xchg
stos
cmc
xchg
pop
insb
cmpsb
mov
aad
adc
jbe
jg
test
scas
es
push
pop
jmp
push
test
lcall
insb
dec
mov
push
ret
bound
cmpb
push
or
dec
xchg
call
neg
jae
in
negb
xor
mov
jns
mov
daa
insl
arpl
dec
inc
push
mov
add
shll
ret
pop
or
or
clc
fs
lcall
xchg
movsl
pop
daa
ret
into
clc
mov
xor
xor
inc
jp
movsl
enter
jmp
jecxz
adc
and
les
daa
jbe
iret
scas
cli
ret
into
insb
add
mov
push
push
sarb
mov
out
jge
push
dec
xor
jl
clc
iret
fcmovbe
jno
pop
in
pop
sub
sbb
out
or
repz
cmp
push
push
hlt
int3
mov
cmp
hlt
cmp
je
xchg
enter
ss
and
add
mov
mov
xchg
ret
push
out
xchg
jmp
sar
or
fs
pushf
fildll
mov
pop
and
sub
enter
sbb
mov
mov
arpl
mov
cmp
mov
add
mov
jns
test
push
xor
or
fs
or
lret
add
in
pop
xchg
aam
js,pn
jl
das
mov
imul
inc
arpl
jge
pushl
inc
mov
lods
cltd
mov
movsl
popf
cmp
xor
mov
fldcw
lock
cmp
fldcw
sahf
int3
fdivp
mov
sub
addr16
pusha
je
jno
shll
outsb
scas
add
mov
jne
sub
mov
inc
das
sub
js
lcall
mov
mov
xor
iret
xchg
push
dec
or
fsubrp
jmp
cmp
push
inc
pop
and
ljmp
or
js
push
lds
aas
test
add
mov
into
push
mov
idivb
cmp
push
mov
ret
mov
loop
inc
mov
inc
sub
fcmove
ss
mov
cmpsl
sahf
inc
in
or
xchg
sbb
mov
adc
pop
pushf
adc
into
std
ret
and
adc
scas
cltd
nop
xchg
xchg
mov
pushf
aas
inc
mov
outsl
sahf
xor
and
insb
lea
dec
rcll
fnsave
loope
lcall
daa
mov
les
sbb
ret
movq
sbb
fs
ljmp
pop
out
sub
mov
test
ror
call
inc
inc
pop
sahf
loop
arpl
in
shrl
inc
mov
out
dec
mov
add
enter
stos
mov
push
inc
cmp
mov
adc
sbb
mov
stos
jmp
or
inc
push
xor
lahf
js
add
mov
out
fsubr
add
fisubrl
sub
inc
xchg
jne,pt
cwtl
ds
cmpsb
add
sbb
and
roll
lea
clc
movb
pop
add
jl
divl
xchg
dec
xor
fstpt
lods
adc
cmpsl
and
lods
mov
xor
mov
lea
push
inc
out
sbb
jo
xlat
dec
int3
test
imul
inc
fbld
mov
jle
ret
out
lods
adc
stos
pop
or
inc
xchg
sbb
push
cli
mov
daa
out
mov
dec
repnz
arpl
clc
xor
mov
shrl
mov
add
movsb
sbb
lahf
ss
cmp
fstpt
fs
xchg
std
pop
xchg
sbb
and
cmp
cmp
insb
inc
je
lds
insb
arpl
call
cltd
mov
test
push
scas
and
mov
xchg
inc
imul
popa
push
or
aad
out
add
cs
aas
or
ja
lea
dec
xor
fadds
cltd
lahf
cs
xchg
mov
stos
jmp
inc
inc
jne
out
popf
js
fdiv
push
inc
repz
push
xchg
mov
or
pop
and
sub
inc
stos
lahf
je
repnz
stos
pusha
push
xchg
push
mov
sub
jecxz
inc
in
out
cmc
dec
pop
in
fidivrl
lods
aam
jmp
cmp
cmp
mov
andl
mov
pop
sarb
notl
xor
pop
daa
je
cmp
outsl
iret
subb
dec
scas
sub
inc
shrl
shrl
cmp
sub
cmp
pusha
arpl
mov
test
dec
mov
push
mov
es
int
mov
sahf
daa
and
lds
sub
aam
xchg
data16
and
cmpsl
inc
cmpsl
mov
or
push
xchg
dec
mov
mov
push
or
jecxz
repz
stc
ds
loope
cmp
and
enter
jno
cli
jl
mov
test
dec
inc
outsl
lret
mov
movsl
xor
stos
cmp
frstor
jge
stc
xchg
shll
lahf
xchg
dec
xor
jno
xchg
cmp
ljmp
fdivrl
jb
push
je
ret
xlat
add
mov
mov
mov
mov
sbb
test
push
or
pop
and
imul
lahf
and
repz
in
test
data16
rcll
addr16
inc
mov
or
xor
popf
sbb
mov
lea
lea
mov
adc
adc
dec
mov
lret
rcll
push
or
in
mov
and
sbb
dec
pushf
aaa
les
push
jbe
jg
xchg
out
flds
fcomps
mov
in
or
xor
aad
push
filds
fsts
loopne
dec
jo
loopne
les
or
in
mov
xorl
and
or
pop
or
sub
out
push
sahf
mov
js
pop
in
pop
push
loope
jle
mov
inc
fistps
or
outsb
mov
out
mov
sbb
add
out
mov
xor
inc
sbb
cmc
pop
imul
data16
fsubrs
das
xchg
je
jg
jno
aad
cli
and
xchg
push
jns
push
outsl
or
mov
jns
push
and
dec
lahf
cld
outsl
and
out
test
pop
cwtl
mov
outsl
xchg
push
ja
pusha
push
pop
sbb
and
dec
mov
or
dec
pop
std
dec
loop
sub
or
mov
fnstsw
lods
sub
inc
movsl
pop
mov
cmpsb
dec
rcrb
pusha
nop
mov
movsb
enter
fldcw
in
scas
dec
ljmp
in
loop
out
pop
rorl
repz
cs
repnz
xor
dec
add
lret
fnsetpm(287
cmp
and
test
inc
pop
jecxz
inc
sbb
stc
and
sahf
adc
shlb
inc
xchg
out
push
cmp
xchg
in
pop
push
lcall
jo
mov
push
fildl
cli
outsl
and
sbb
ljmp
int3
scas
sub
das
xor
dec
push
mov
cmp
lock
sub
jb
stc
xchg
xor
aaa
inc
add
push
ret
ljmp
gs
inc
out
movsb
cmp
lods
lds
push
scas
mov
movsb
repz
ljmp
dec
jmp
shl
pop
imul
sbb
inc
xchg
cmp
mov
cmp
aam
or
jb
sbb
or
dec
insb
fisttpl
insb
stc
pop
xchg
or
pusha
mov
lods
push
cmp
or
add
cmpsl
xor
std
movsb
jae
ss
stos
int3
jbe
xchg
adc
adc
subb
hlt
nop
inc
rol
dec
ffree
scas
dec
adc
sub
daa
adc
fiaddl
lds
jo
int3
xor
rcll
add
push
inc
test
movsl
insb
sub
popf
fists
dec
xchg
or
mov
inc
jne
insb
es
xchg
add
push
nop
cmpsb
inc
inc
push
push
dec
les
orb
pusha
lahf
sti
pop
mov
leave
cmp
xchg
loop
push
inc
leave
push
gs
scas
cmp
aaa
jns
jo
rolb
xor
push
mov
insb
or
scas
xor
mov
stos
shrl
dec
adc
lret
mov
dec
pop
push
dec
call
in
dec
xchg
inc
add
push
in
pop
or
jne
mov
mov
sub
ret
cmpsl
je
aam
movsb
pop
sub
in
sbb
xor
and
cmp
mov
cs
xor
aad
push
les
lea
shr
test
mov
mov
fisubrl
xchg
adc
cmp
sub
jp
mov
repnz
xchg
add
xor
xor
ret
inc
cmpsb
sub
inc
or
adc
imul
adcl
push
loop
jb
mov
std
data16
inc
pop
mov
enter
aad
into
push
sub
mov
arpl
pop
movsl
ja
mov
cmp
and
outsb
push
and
push
ja
mov
jns
mov
inc
xor
mov
lahf
out
test
mov
mov
jp
cltd
inc
fst
in
dec
ret
lret
les
jmp
xchg
fnstenv
and
and
icebp
push
in
das
jl
fiadds
cli
pop
mov
iret
test
sbb
outsb
jle
cltd
je
adc
outsl
mov
int3
cmp
ja
test
cmp
mov
out
dec
mov
xchg
mov
push
aas
inc
dec
outsl
daa
ljmp
push
mov
sub
clc
push
sbb
dec
ret
cmp
daa
jne
and
test
sbb
insb
movl
adc
xchg
xchg
ficoms
push
enter
push
push
inc
inc
negl
fists
lds
jnp
dec
aam
or
js
or
or
push
mov
xor
lcall
addr16
mov
shrb
orb
lods
jnp
lret
cmpsl
push
out
lahf
aam
test
lcall
mov
xor
fstpt
cmp
and
adc
mov
xchg
lods
icebp
sbb
xor
or
nop
cmp
push
fdivs
mov
or
sar
dec
inc
dec
leave
fmuls
xlat
cmpsb
pushf
mov
test
adc
andb
inc
cmp
inc
mov
or
cmc
stc
jae
mov
mov
mov
notl
sahf
sbb
mov
xlat
int3
jb
ret
mov
out
add
xor
jl
mov
into
mov
xchg
rorl
add
dec
mov
in
push
dec
call
mov
adc
lret
mov
sub
dec
dec
mov
popa
out
subb
outsb
add
pop
xchg
dec
jp
and
adc
imul
movsl
sub
add
jno
subl
and
insl
cwtl
add
test
xchg
mov
inc
ret
cli
cltd
dec
pop
xchg
fsubrs
add
repnz
fldenv
xchg
insb
mov
push
cltd
or
std
xor
jge
inc
push
xchg
fisttpll
adc
mulb
inc
dec
push
lcall
adc
or
dec
lock
lods
in
push
adc
add
iret
test
fisttpll
rcrb
dec
popa
add
add
arpl
add
std
inc
cmp
test
pop
je
aaa
repnz
adc
sbb
mov
xchg
adc
pop
add
and
xor
or
push
fstpl
cmp
dec
cmp
xor
mov
rcr
sub
divl
lahf
ds
mov
jecxz
test
or
fstp
pop
mov
es
loop
imul
mov
xor
push
or
int3
pushf
subb
pop
ret
in
mov
inc
mov
out
enter
aad
cmpsl
or
stos
mov
popa
xchg
pop
imul
pop
sub
xchg
xchg
xchg
test
jle
mov
insl
pop
adc
add
jmp
fwait
and
cmp
lret
pop
cmp
sub
sub
jne
bound
add
cmp
adc
xchg
das
popf
shl
ss
std
lods
and
in
ret
and
loopw
adc
shll
aam
stc
adc
outsl
mov
insl
and
push
and
jae
sbb
fs
xor
in
jb
fcoms
sub
aad
jns
cld
pop
inc
push
roll
jb
add
js
sbb
and
cli
popa
xchg
enter
test
pop
adc
mov
stc
jp
add
inc
call
xchg
dec
into
orl
shl
sbb
dec
xlat
movsb
hlt
insb
aaa
hlt
rcrb
jecxz
sbb
shrb
jae
xchg
add
idivl
mov
mov
ljmp
pushl
pop
mov
in
test
in
push
mov
push
out
pop
mov
daa
icebp
enter
mov
ret
test
adc
lods
mov
jnp
push
push
jbe
or
rol
cld
cld
mov
lods
xchg
repz
add
inc
adc
cmp
mov
cmp
mov
into
xchg
test
mov
add
vpshad
in
into
lock
adc
xchg
sbb
sahf
fs
repnz
lea
movsl
mov
movsb
repnz
xor
mov
mov
orl
enter
fsubl
popa
and
xchg
fadds
or
inc
inc
mov
popf
cmp
cmp
xchg
cmpsl
mov
vpshld
iret
out
icebp
mov
sub
incb
mov
test
push
dec
inc
and
rcl
mov
fcoml
movsl
out
push
inc
add
push
cmpsb
imul
arpl
pop
and
xchg
cmpl
mov
add
jle
and
divl
add
aad
nop
adc
sub
add
jl
push
mov
jecxz
ja
jmp
repz
xor
xchg
out
jb
add
icebp
aam
popf
arpl
push
imul
and
xlat
pop
insb
mov
dec
ja
nop
pop
jecxz
sbb
scas
mov
lods
adcl
or
sub
xchg
sbb
xchg
add
fcomps
test
mov
mov
loopne
or
push
es
scas
repnz
add
sti
push
pop
fsubrs
dec
mov
xchg
stc
aas
push
cmpl
mov
cmp
pop
fmull
ljmp
fs
dec
cs
fisubrs
push
push
test
and
sub
data16
negb
popf
xchg
dec
dec
add
insl
push
data16
mov
xor
mov
mov
fstps
xor
fdivl
insl
push
push
test
jl
cwtl
out
cltd
dec
mul
adc
mov
cmp
ret
out
scas
in
in
push
mov
inc
imul
jmp
lahf
loope
fnsetpm(287
ret
sbb
sbb
testl
jecxz
push
push
ja
leave
fmuls
ja
clc
call
xor
fisubrl
cmp
adc
jp
sahf
jecxz
int3
xor
loopne
outsb
scas
fwait
inc
mov
push
xor
aam
xchg
mov
loopne
leave
pop
test
loop
or
jg
les
sahf
adc
push
mov
ljmp
jl
rorl
popa
pusha
shll
loop
add
adcl
popa
xor
pop
mov
jne
jecxz
pop
jmp
fs
aam
mov
addr16
xor
push
lret
frstor
cs
cmc
into
sub
mov
push
subb
adc
stos
scas
mov
lcall
jno
dec
out
fs
sub
mov
mov
arpl
sub
sahf
subl
fcoml
cmpsb
in
xchg
inc
adc
pop
inc
mov
push
sbb
in
aaa
mov
mov
sub
lds
int3
dec
scas
fsubl
inc
sti
jne
jae
mov
add
inc
fnsave
cli
stos
test
mov
pop
cmp
sahf
in
adc
popa
pop
or
in
xor
mov
mov
mov
add
dec
outsl
sub
mov
cmp
int
in
lcall
mov
sti
pop
mov
xor
jecxz
mov
outsl
mov
adc
add
push
mov
pop
adc
adc
pop
dec
ljmp
inc
cmpsb
pop
push
mov
xchg
movsb
jle
rolb
sub
xor
popa
cmp
pop
mov
xchg
enter
shl
xor
cli
lret
push
test
jp
in
sbb
pushf
adc
and
inc
insl
push
loop
adc
inc
xor
subl
or
cmc
mov
and
sub
or
iret
movsl
push
cmc
loope
clc
xor
adc
mov
aad
movsl
int3
inc
bound
adc
or
sbb
xor
inc
jle
lcall
dec
sub
stc
add
xor
mov
push
push
or
in
jp
insl
pop
xor
rolb
adc
dec
notb
mov
mov
jge
fsubl
sbb
pop
push
xchg
dec
mov
add
pop
and
jno
hlt
dec
mov
shl
js
cmc
insl
fwait
ror
xchg
out
in
rorl
jp
jl
push
in
ror
dec
out
xchg
out
pop
mov
jge
dec
xlat
xchg
lods
ret
rcr
dec
cmp
lods
int3
push
jge
cmpsb
add
add
lock
inc
int3
clc
or
sub
mov
dec
add
add
adc
sbb
test
call
fwait
adc
sbb
cmc
xor
sbb
pop
mov
in
fnsave
enter
orb
fadd
mov
mov
imul
cmp
cmpb
ja
scas
push
sahf
inc
mov
pop
xchg
ds
xlat
push
push
aaa
daa
out
pop
fiadds
into
ja
scas
push
sahf
inc
mov
pop
xchg
ds
xlat
push
push
aaa
daa
out
pop
fiadds
into
ja
data16
push
sahf
inc
mov
pop
xchg
ds
push
push
aaa
daa
out
pop
fiadds
into
ja
scas
xlat
sahf
dec
dec
jle
les
mov
shrl
loope
icebp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
or
xchg
stos
and
pop
cmp
or
dec
int
fnstsw
or
jmp
sub
mov
pop
popf
jns
pop
lcall
dec
frstor
adc
icebp
rcll
and
jno
jns
push
mov
popa
dec
cltd
push
jmp
mov
ja
lock
mov
jno
push
movsb
cmp
xor
mov
mov
in
mull
lea
pop
cmp
push
push
push
iret
inc
cmp
insl
push
push
jle
add
mov
jns
xchg
inc
pop
int
cwtl
mov
repnz
dec
push
insl
call
fdivs
jb
adc
xor
jmp
repnz
inc
cmp
sbb
and
out
imul
push
rorb
fdivp
jbe
push
out
fsubrs
dec
rorl
jb
bound
dec
mov
cltd
adc
sbb
inc
and
adc
xlat
dec
sub
std
js
outsl
sbb
and
cmp
ret
push
insl
clc
jns
or
sub
enter
stc
jb
insl
jmp
outsl
jp
dec
fcomps
call
add
das
stos
sub
cmp
mov
jmp
pop
cmp
or
pop
int
fnstsw
or
jmp
pop
cmp
or
pop
int
fnstsw
mov
pop
xchg
out
jecxz
orl
xor
inc
cmc
xchg
adc
sbbb
imul
pop
sbb
ret
repnz
subb
je
push
jno
push
iret
scas
leave
hlt
jo
fyl2x
mov
lahf
sub
ret
cmp
xor
enter
fdivrp
pop
decb
jg
enter
les
xlat
jnp
subl
outsb
mov
and
je
jae
lds
adc
jae
push
push
sub
or
shll
enter
jg
ret
test
stos
xlat
jg
fisttpll
mov
add
inc
jp
fs
mov
enter
jae
rolb
ficoml
mov
add
cmp
dec
aam
mov
pusha
mov
mov
ljmp
xor
sahf
dec
test
int
lahf
adc
je
outsl
sub
jmp
pop
push
jne
movl
lock
adc
pop
xchg
mov
hlt
sub
xchg
or
xchg
pop
fistpll
pop
cltd
pop
mov
pop
or
sub
inc
popf
xor
and
or
jbe
bound
imul
fimull
sbb
jae
xchg
pinsrw
aam
out
loope
mov
sbb
xor
popf
mov
pop
mov
mov
mov
dec
lods
xchg
mov
in
cmp
and
jbe
shll
inc
aad
repnz
movlps
add
push
xchg
inc
mov
inc
mov
inc
mov
mov
or
dec
pop
lret
jne
mov
inc
repz
push
in
mov
mov
in
jae
mov
jg
or
xor
aad
test
gs
daa
xor
ret
pop
xor
jno
into
pop
adc
add
inc
inc
nop
test
or
sub
pop
in
sbb
outsl
or
addr16
and
pop
and
movsl
fldenv
test
xchg
jae
jmp
jns
addr16
cmp
shrl
fmuls
lock
mov
pop
daa
nop
lret
test
mov
pop
push
sbb
xlat
adc
add
jbe
mov
dec
fiadds
cmp
ds
dec
and
in
or
cmp
or
data16
imul
out
jmp
sub
addr16
ds
insb
cmp
add
xor
adc
inc
xchg
pop
lret
jb
or
insb
or
cmp
jle
rol
in
sbb
clc
cs
ret
sub
lock
inc
jg
adc
or
mov
jmp
cli
jl
jecxz
xor
adc
mov
cmc
out
jmp
iret
fisubrs
enter
push
and
xlat
sbb
pop
jnp,pn
inc
js
daa
imul
pop
test
mov
mov
dec
movsb
sbb
adc
aaa
sub
jbe
loope
adc
adc
stc
pop
or
sub
fwait
pop
push
dec
add
add
lahf
out
shlb
inc
je
icebp
pop
pop
loop
addb
ss
fcmove
lret
scas
in
inc
sbb
jbe
fldcw
mov
and
and
dec
mov
lds
cmp
adc
enter
pop
and
mov
outsb
ss
inc
fs
pop
rorb
mov
out
out
arpl
add
scas
add
xor
ljmp
sbbl
dec
xchg
test
aaa
add
in
sbb
imul
or
jmp
fs
pop
iret
aad
pop
mov
xchg
xchg
je
in
fs
add
xor
stos
or
arpl
and
outsl
pushf
roll
jle
cltd
ds
ror
leave
or
sbb
aas
push
mov
dec
ss
cmpl
insl
rclb
ret
aaa
in
add
es
sbb
cmpsl
pop
or
push
pop
mov
aaa
loop
add
popl
and
xchg
rclb
stos
sub
sub
fldcw
push
dec
movsl
or
adc
xor
sahf
rcll
ror
inc
cmp
dec
push
mov
xor
cmpsb
dec
inc
out
cmp
cmp
jne
push
jnp
inc
aad
pop
jmp
outsl
ds
cmp
jnp
inc
pop
pop
ss
sbb
add
loope
push
aas
repz
dec
inc
add
push
negb
cmp
mov
inc
xor
add
fwait
inc
sti
call
insl
dec
or
cmp
add
inc
push
sbbl
shrb
daa
pop
rcl
jb
shrb
adc
ficomps
shll
or
cmp
xchg
insb
lods
xchg
mov
gs
sbb
push
imulb
or
test
sbb
mov
loopne
loope
inc
decl
or
iret
or
test
cmpsl
movsb
aas
cs
sbb
jl
inc
fadd
es
into
inc
rcll
or
popf
fldl
lods
inc
xor
icebp
std
hlt
mov
lock
jno
sbb
sbb
cmp
das
imul
frstor
mov
cltd
outsb
adc
ret
int
pop
mov
lock
pusha
repnz
fcoml
call
jae
dec
mov
and
xor
gs
adc
jae
ret
movsb
inc
or
in
jmp
jne
jo
je
mov
pop
cmp
xchg
mov
sarb
cld
or
push
into
adc
jo
add
mov
pop
xchg
push
dec
push
pop
or
in
push
mov
sub
mov
xor
cli
call
and
xchg
test
lea
sbb
push
add
mov
adc
xchg
jo
mov
cmpsb
pop
dec
inc
je
mov
in
fistl
repnz
jne
repz
cltd
jae
push
loop
arpl
push
loop
and
ds
popa
adc
in
loope
lea
sti
mov
hlt
xor
pop
insl
sub
std
mov
and
std
mov
xor
jbe
cld
sahf
mov
pop
and
fiadds
popa
movd
ret
push
stos
cwtl
lret
xchg
aaa
add
dec
pop
aaa
inc
sub
jmp
and
ret
mov
dec
mov
xchg
pop
faddp
push
pop
scas
arpl
into
sti
jmp
shll
les
incl
add
lret
sbb
inc
aad
jno
clc
out
fnstsw
clc
mov
incl
mov
lret
enter
or
enter
push
sub
mov
sarb
inc
adc
call
xor
dec
mov
push
fs
adc
cmp
push
dec
and
xchg
dec
inc
and
push
mov
jb
dec
imul
enter
xchg
sbb
in
cltd
loope
std
adc
ljmp
jo
jbe
cmp
jl
cmp
mov
mov
movsb
nop
mul
sbb
jle
pop
addr16
lret
push
dec
mov
test
inc
dec
lods
aas
or
mov
ljmp
jp
loopne
cmp
add
push
xor
repnz
xchg
mov
sbb
lds
out
mov
or
cmp
lods
jne
mov
mov
dec
iret
je
out
pusha
test
add
push
rclb
dec
fmull
and
xor
mov
dec
mov
push
icebp
imul
movsl
cmpsl
inc
mov
ss
sarl
cmp
sub
fidivl
mov
jmp
sub
dec
loopne
sahf
stos
mov
jp
dec
xor
aaa
pop
outsl
out
add
test
push
mov
mov
fstps
mov
pusha
dec
test
jb
pop
ds
lret
iret
out
arpl
ja
rcrb
rorl
xchg
rcll
ljmp
mov
xor
ret
xor
fwait
aad
push
mov
inc
aas
adc
dec
lret
ss
mov
lret
popl
in
addr16
out
and
mov
aam
mov
clc
fstp
ficomps
xchg
add
or
sbb
movsb
in
aas
lret
jae
jo
dec
mov
mov
mov
xor
lret
add
jnp
sbb
pop
out
sarb
call
xchg
jge
adc
inc
andb
sub
pop
pop
pop
insb
jp
nop
jo,pt
sub
pop
inc
xchg
ret
and
push
jno
xor
ret
add
xchg
jne
xlat
mov
sub
xor
push
repz
push
add
pop
pop
psubq
test
push
in
lcall
enter
in
or
pop
jmp
int
lret
add
dec
jae
or
lods
dec
cltd
fsubl
mov
cmc
push
lods
adc
adc
inc
mov
cmc
outsb
sbbb
fidivs
push
es
das
cmp
and
adc
cmp
sbb
mov
cmpsl
ret
pop
mov
cmpsl
lcall
sahf
cwtl
and
sbb
mov
int
jae
ljmp
test
xor
mov
jp
imul
or
fwait
lret
xchg
pop
fdiv
cwtl
add
xor
xchg
push
shrb
icebp
out
js
xchg
or
mov
insb
testb
and
jecxz
lret
popa
mov
inc
sbb
sbb
imul
repnz
cmp
or
sub
sub
movsb
add
push
out
jne
cmp
mov
jnp
out
inc
mov
jge
test
addr16
stc
adc
mov
lahf
sahf
icebp
lret
pop
mov
jbe
out
and
into
movsl
cmp
mov
popa
lret
jecxz
jmp
jmp
pop
pop
into
pop
fstps
xlat
ljmp
sbb
nop
or
jns
sub
add
xchg
cwtl
insb
xor
testl
push
and
lods
cmpsl
cmc
cmpsb
dec
insl
mov
xorl
mov
xchg
les
adc
test
dec
fs
and
mov
les
popf
push
adc
loope
test
rorb
mov
sbb
cmpsb
push
std
inc
jl
inc
pusha
lret
or
into
mov
and
loope
popf
iret
mov
sti
insb
addr16
adc
movsl
ret
test
mov
in
and
jmp
or
mov
fldenv
inc
fld
adc
repnz
cwtl
insl
movsb
mov
and
mov
lret
gs
xchg
jge
inc
inc
mov
cmp
idivb
xor
mov
inc
mov
test
push
movaps
ljmp
arpl
lahf
fs
cmp
or
inc
or
push
fst
cmp
roll
adc
inc
stos
lods
xor
scas
mov
mov
pusha
cmp
stos
add
adc
ret
mov
add
int3
shll
fbld
repnz
xchg
int3
mov
sbb
fistps
data16
sub
push
out
push
aad
es
jbe
pop
fidivrl
cmp
cwtl
mov
fst
aas
gs
cmpsl
dec
mov
psraw
xchg
xchg
data16
push
add
fbstp
xlat
mov
and
xorl
pop
fistpl
or
push
jp
xchg
stos
sbb
sbb
test
xchg
xlat
je
bound
add
das
mov
loopne
test
leave
mov
mov
and
fildl
push
pop
lds
cs
mov
test
mov
adc
xor
out
ds
icebp
ja
movsb
pop
jl
fwait
xchg
adc
fs
ja
loopne
sbb
sub
mov
xchg
sub
ljmp
push
sub
in
pop
cmp
mov
ficoms
jecxz
pop
mov
add
sub
lcall
adc
dec
adc
movsb
push
test
cmpsl
jae
fidivrs
in
xchg
imul
add
pop
outsl
cwtl
mov
cltd
jl
bound
adc
and
mov
rcrl
repz
xchg
lds
hlt
in
inc
lods
sbb
mov
jle
repnz
pop
xor
mov
arpl
mov
or
pop
pop
nop
and
push
xchg
sbb
cmpsl
mov
jbe
xchg
adc
int3
lahf
les
daa
fwait
dec
pop
xchg
les
std
cwtl
int3
jo
xchg
jge
xchg
imul
jns
cmp
sub
or
fs
mov
out
or
ficoms
shr
dec
or
shlb
sbb
fildll
js
adc
and
movsl
sti
inc
push
dec
and
mov
aam
fs
cld
cli
mov
addl
fstpt
mov
jno
add
or
push
cltd
jle
mov
cli
data16
in
jb
mov
jno
test
lods
sub
jns
stc
fisttpll
and
loop
xor
mov
dec
and
loope
mov
sbb
adc
icebp
aad
cwtl
jp
mov
enter
mov
xchg
in
sbb
and
lds
jbe
lcall
mov
icebp
rclb
lahf
sbb
mov
addl
movsb
pop
cs
cmp
cli
jmp
push
dec
fdivrp
jge
aam
and
push
dec
iret
pop
movsb
or
add
icebp
or
cmpsl
or
pushf
push
mov
icebp
sbb
movsl
in
shll
insb
bound
jns
aaa
cmp
cmpsb
and
dec
add
and
repnz
push
popf
cmp
mov
mov
cmp
jmp
lahf
je
pop
sti
mov
mov
sbb
push
jo
pushf
popf
inc
cs
jmp
pushf
pop
and
repz
es
sahf
das
test
mov
std
int3
cmc
add
mov
nop
xor
cltd
in
mov
test
mov
test
nop
mov
scas
inc
imul
mov
mov
mov
subb
push
mov
arpl
or
in
gs
stc
sub
mov
inc
ret
mov
push
lods
jns
add
xchg
and
imul
push
addr16
rol
cli
shll
cmp
sub
xchg
das
xchg
fistl
or
negb
jbe
or
add
lea
inc
cwtl
inc
mov
jo
or
mov
or
mov
jo
mov
leave
incb
and
mov
dec
lock
sti
mov
imul
stc
aad
cmp
movsl
ljmp
mov
sahf
sub
xchg
loopne
aam
mov
or
fiadds
cmpsb
push
push
mov
and
or
cmp
scas
jo
outsb
lret
cld
call
adc
and
or
js
xor
xchg
cli
nop
pushf
xorl
mov
mov
sarl
xchg
out
aaa
jge
sbb
in
stos
xor
shlb
rsqrtps
data16
push
add
bound
or
push
ljmp
int3
cmpb
negb
cmp
stos
test
lock
leave
sbb
jbe
xor
js
sbb
add
jp
cwtl
ss
pop
add
popf
loopne
mov
lahf
cmpsl
cmp
mov
aas
leave
jg
fwait
movsl
mov
dec
push
dec
fprem1
repz
rclb
pop
test
pop
push
fwait
js
test
popf
cmpsl
into
push
pop
popa
jle
or
mov
push
push
mov
push
in
sbb
movsb
test
dec
aad
push
shl
imul
rcrb
scas
mov
mov
fcoml
mov
idivb
data16
in
sub
cmpsb
xchg
jo
pop
lea
ret
outsb
inc
fdivrs
cmpsl
aad
sub
xchg
ss
push
mov
pop
mov
xor
mov
fnstsw
js
mov
add
out
ss
les
fld1
fwait
jmp
fisttps
sbb
fsubrs
idivb
ret
xchg
cmpsb
idivb
add
jmp
je
pop
push
idivb
mov
jl
sub
and
pop
or
jle
dec
ret
jae
mov
add
pop
in
addl
outsb
aas
lcall
adc
lret
add
jg
aas
test
add
jle
out
mov
dec
bound
adc
sub
or
lods
xchg
mov
jns
push
lods
testb
dec
movsb
mov
out
movsl
std
outsb
xchg
fldcw
clc
addb
bound
out
pop
or
mov
adc
sbb
xor
jg
adc
xorb
cmpsb
mov
stc
pop
sbb
sbb
mov
ja
xor
add
jno
int
push
in
push
adc
or
fucomp
jne
jg
xchg
repz
cmp
add
enter
lea
out
mov
movsb
jge
pop
mov
pop
fscale
jae
adc
jmp
pop
and
sub
xor
fisubs
or
mov
cmp
negl
add
sub
aaa
mov
icebp
jne
xchg
mov
daa
nop
xchg
xor
jae
dec
jns
xchg
mov
imul
stc
or
dec
rorb
aam
push
sbb
je
cltd
sub
mov
pop
hlt
add
pushl
test
push
iret
fdivrl
js
icebp
sahf
mov
jecxz
out
mov
sub
das
test
clc
sti
and
mov
dec
repnz
fistpll
cmp
mov
push
ret
adc
aad
fwait
lds
pop
cmp
fstpt
insl
pop
lods
push
and
xchg
xchg
sti
int
push
aaa
adc
inc
out
jb
and
pop
inc
pop
sbb
xchg
shlb
push
mov
gs
fucomi
and
dec
mov
push
pushf
add
ret
xor
mov
push
inc
pusha
cld
cwtl
cltd
iret
mov
divb
push
mov
jnp
adc
out
data16
stos
aas
imulb
add
xlat
loope
xorb
ficoms
dec
inc
pop
push
sub
out
xorl
lds
jmp
xchg
or
add
push
int
mov
inc
cmp
cmp
outsb
into
negl
sbb
inc
push
addb
push
idivb
fsubrs
scas
imul
mov
mov
dec
into
insl
xlat
cmp
dec
outsb
dec
fwait
sub
pop
mov
add
dec
adc
cmp
mov
dec
stos
add
and
int
test
shrb
insl
outsl
jne
mov
out
rclb
xor
dec
adc
cmpsb
sbb
pop
jl
push
inc
jmp
jge
and
cld
lret
ljmp
pop
loope
mov
shr
xchg
test
push
pop
mov
dec
aam
sbb
int3
js
shlb
cltd
mov
mov
jnp
mov
negb
inc
outsb
data16
inc
stos
push
fstpl
mov
or
mov
and
pop
aas
cld
push
shll
lahf
and
scas
adc
add
push
sbb
sub
and
fsts
mov
mov
jecxz
lret
pop
adc
inc
xchg
mov
mov
xor
cltd
xchg
xor
es
push
ds
enter
pop
or
push
test
negl
pop
jo
dec
jge
fcmovne
lds
or
mov
push
fbld
mov
dec
cmp
mov
loop
push
pop
sbb
jns
sub
movl
sbb
fdivl
sub
lock
adc
movsb
cmp
sahf
xor
lret
add
cmp
adc
adc
jg
into
xor
movsl
mov
nop
jp
outsl
aad
xchg
mov
xor
xor
mov
mov
scas
lret
push
clc
enter
shl
add
cltd
fisubrl
lods
repz
pop
cmc
pop
repz
jno
push
inc
fistpll
mov
sbb
inc
pushf
mov
shr
jo
or
popa
enter
int3
mov
mov
adc
add
loopne
imul
cld
popa
cmp
gs
xchg
dec
cmp
cmp
or
insb
mov
pop
insb
cmp
aaa
jp
push
push
orl
movsl
bound
div
mov
cmpsl
xchg
testl
pop
mov
xchg
dec
out
cmp
outsb
push
ret
andl
mov
lock
shr
lcall
int
cli
outsb
jmp
adc
mov
push
andl
jne
int3
cmp
fs
mov
daa
dec
lahf
stos
mov
xor
push
pop
cmpb
fwait
adc
or
data16
ljmp
sbb
pop
cmp
or
pop
int
fnstsw
or
jmp
pop
cmp
or
pop
int
fnstsw
or
jmp
pop
cmp
or
pop
leave
dec
fnstcw
or
jge
dec
dec
popf
lods
pop
mov
or
push
gs
cmpsb
mov
mov
pop
xchg
dec
addl
out
imul
sub
and
add
push
mov
mov
mov
ds
rorl
in
xor
and
pop
scas
arpl
adc
dec
cmc
ds
cs
push
icebp
xor
add
and
add
push
imull
adc
push
out
cld
push
sbb
push
cmp
push
lahf
call
leave
lods
add
pusha
sub
aas
out
push
mov
adc
xchg
inc
push
inc
push
cmp
fdivs
sti
fldt
push
lret
cmp
movsb
sbb
xor
std
add
lret
test
xchg
mov
sar
adc
dec
out
mov
ret
fucomip
add
std
out
mov
pop
or
shlb
push
adc
aas
xchg
adc
repz
sbb
jbe
add
xchg
aam
lret
push
fidivrs
ret
cmp
lds
lret
es
mov
outsb
sbbl
cmpl
jecxz,pn
rorl
push
xor
mov
adc
aas
mov
dec
mov
mov
int3
xor
add
jge
dec
mov
imul
stos
pusha
lret
or
daa
cli
sub
cmc
sub
out
pop
mov
jbe
lods
push
adcl
stos
xor
cmp
arpl
ss
xor
rolb
ljmp
jg
jecxz,pn
rorl
ret
xor
and
adc
add
push
mov
mov
mov
ds
rorl
ret
xor
and
adc
add
push
mov
mov
cmc
shr
sbb
dec
xchg
and
cld
jmp
adcb
orb
hlt
mov
popa
cmc
rcll
pop
mov
arpl
and
add
sub
stos
and
sbb
sub
iret
mov
mov
xchg
loope
inc
dec
push
out
test
mov
push
enter
mov
js
aad
fcomp
adc
pop
inc
rorb
pop
or
notl
add
dec
cs
jne
pop
test
pop
push
adc
jnp
shlb
cltd
sub
fnsave
sbb
loope
in
push
iret
mov
test
jmp
lods
or
jno
sub
mov
pop
sarl
mov
inc
adcb
aam
lock
push
leave
sub
lods
push
mov
fisttpll
faddp
xlat
pop
fs
fists
or
loopne
sbb
dec
filds
ret
push
test
hlt
loop
xchg
in
mov
and
lahf
inc
mulb
xor
or
out
mov
insl
dec
testl
in
fnsave
les
insl
mov
iret
imul
sbb
pop
or
out
jle
mov
out
dec
ds
or
imul
xchg
jns
in
xor
xor
sbb
js
scas
jbe
fs
push
xor
fsubrp
subb
je
jb
dec
into
popa
test
aam
je
mov
pop
xchg
cmp
lds
popf
mov
popf
lods
fdivr
or
mov
cmp
outsb
ret
fcompl
pop
add
aad
nop
push
out
push
xor
out
das
add
test
inc
sahf
mov
pop
push
bound
popa
push
dec
or
xor
in
divb
iret
andl
mov
adc
call
icebp
sub
cmp
out
in
inc
mov
xchg
sbb
fldenv
cpuid
dec
pop
adc
in
xor
adc
and
iret
pop
adc
mov
lret
test
jp
inc
je
sbb
inc
scas
mov
sbb
cmpb
mov
addr16
add
iret
xor
dec
push
mov
sbb
adc
mov
ret
into
mov
lcall
in
add
mov
mov
and
xchg
scas
pop
clc
dec
xchg
jle
cmc
es
subb
mov
mov
mov
inc
sbb
jge
xor
shrl
addb
inc
inc
pop
push
fists
add
fwait
sbb
std
push
lret
scas
arpl
pop
and
repnz
call
ljmp
jp
mov
aam
int
shl
mov
enter
dec
pop
or
data16
ret
inc
in
sub
sbb
jl
sti
inc
rol
adc
aam
lcall
test
lods
movsb
fisttpll
push
pop
sbb
aas
cli
or
clc
mov
shll
insl
jge
lcall
sbb
jle
ficomps
push
or
sbb
sub
adc
outsl
sti
cli
fistpll
add
mov
mov
pushf
lret
clc
mov
mov
es
fwait
shrb
shrb
stos
pop
jg
adcl
jo
cmp
es
fwait
jbe
icebp
das
jb
scas
mov
lret
xchg
pop
pushf
mov
cmp
std
adc
leave
pop
push
jnp,pn
jae,pt
or
into
mov
clc
ljmp
add
lea
pop
sub
rcl
fwait
icebp
push
adc
int3
std
lock
and
aaa
cmp
mov
fldt
and
test
scas
inc
add
adcl
dec
sub
push
aas
sahf
push
xlat
cmpsl
xchg
lods
sub
xchg
orl
sahf
xchg
rclb
repnz
leave
ds
repz
loopne
fbld
jno
mov
fstpl
out
mov
xchg
push
xchg
aas
loop
fcmovbe
test
iret
rclb
dec
mov
lret
idiv
xchg
dec
imul
dec
out
pop
pop
int
dec
mov
pop
lret
xchg
mov
pushf
fwait
sbb
xor
xor
pop
arpl
push
sub
xor
mov
add
jnp
jmp
and
jns
push
mov
aaa
mov
scas
cmpsl
hlt
pop
arpl
sub
push
loope
push
jp
pop
and
push
xchg
mov
sbb
mov
lret
test
xchg
out
mov
xor
int
iret
add
push
jmp
sub
push
pushl
cld
stos
jl
les
test
jge
fcmove
scas
cli
roll
or
xor
dec
fldl
je
push
fists
scas
movsb
sbb
fldl
sarl
ficoms
xchg
icebp
mov
inc
dec
cwtl
fs
jg
dec
sub
mov
add
insb
jne
movsb
andl
jae
into
test
in
or
cmp
pop
iret
push
out
aad
pop
xor
pop
fisttpl
loop
dec
lret
fcompl
in
loop
cmp
push
sarb
inc
movsl
xlat
fldenv
sbb
outsl
ds
add
outsl
or
and
jne
stc
inc
or
loope
pop
push
xor
jno
rorl
cmp
mov
push
data16
pop
pop
push
clc
inc
leave
push
sahf
fisubrl
xor
mov
ret
int3
push
out
in
cmpsl
xchg
shll
in
pushf
pop
fwait
pop
loop
pop
rcrb
sbb
adc
adc
inc
lahf
inc
or
sbb
fnstcw
leave
lahf
iret
push
xchg
xchg
jp
ss
jmp
sahf
pop
stos
dec
mov
jp
xchg
and
jne
add
adc
movsl
shll
aam
pusha
les
test
push
mov
out
insl
mov
dec
dec
cmpsb
xchg
inc
jnp
and
and
xchg
cmp
outsl
adc
into
mov
inc
cmc
into
daa
and
sbb
cmp
add
je
loope
stos
shlb
pop
mov
loop
xchg
dec
aas
jb
loop
mov
out
push
sahf
xchg
or
pop
fwait
cmpsl
lods
testl
xchg
add
mov
or
inc
aam
aad
xchg
push
jecxz
arpl
shlb
xchg
mov
adc
cmp
scas
test
jmp
leavew
xchg
mov
loop
scas
mov
arpl
lods
insb
sbbb
fcmovbe
pusha
pop
inc
add
xor
std
scas
arpl
test
jo
add
xchg
fcom
neg
mov
sbb
gs
mov
andl
xchg
in
idivl
pop
mov
adc
cwtl
add
mov
lock
sub
xlat
jb
div
push
in
repz
in
push
popa
sub
adc
int3
cmpl
shlb
cmp
jno
sahf
enter
mov
mov
sbbb
mov
cmp
enter
mov
dec
cmpsb
cmpb
arpl
dec
in
cmp
push
enter
popf
cmc
sub
adc
mov
pop
mov
out
pop
es
lods
into
mov
xchg
pop
xchg
push
cs
imul
imul
mov
or
data16
mov
sub
add
pop
adcl
pop
enter
sarb
xchg
jp
xor
dec
scas
lahf
orb
jno
test
negl
jle
mov
les
mov
sbb
hlt
mov
and
pop
inc
lock
sti
sub
sub
xlat
push
add
test
mov
jmp
xor
pop
cmp
add
and
cmp
pop
fiadds
test
push
cmp
jbe
add
jge
pop
lret
jns
push
jle
add
dec
gs
push
je
in
fnstcw
outsl
out
cmp
and
fcoml
jl
xchg
inc
cs
fdivrs
in
sbb
orb
out
data16
jnp
imul
fs
sub
rcll
add
hlt
ja
pop
pop
fwait
clc
test
in
cmp
or
loop
test
loopne
mov
jl
xor
aam
pop
dec
cli
fistpl
into
inc
cmpsl
push
sub
pop
gs
xchg
out
sbb
mov
ret
mov
movsb
pop
and
jmp
jg
loope
clc
mov
adc
jns
jecxz
push
push
iret
stc
xchg
jnp
ret
mov
mov
cmc
mov
mov
adc
int3
imul
push
push
sub
push
cmc
repnz
xor
sbb
jge
xchg
lret
push
or
out
mov
pop
lea
xor
sub
les
lods
jg
mov
push
in
popf
push
dec
lret
xchg
pop
outsl
push
loopne
and
cmp
in
in
outsb
out
xchg
cs
and
xchg
test
xor
cs
mov
mov
xor
inc
lds
push
add
stos
inc
mov
in
jle
mov
cmpsl
adc
xor
aas
mov
and
inc
arpl
jnp
ret
rcrl
fstpt
mov
aam
mov
mov
or
sbb
jmp
rcr
xor
mov
mov
scas
popf
push
int3
mov
ret
sbb
hlt
cwtl
cltd
add
addr16
jmp
js
pusha
icebp
and
fidivrs
pusha
mov
shll
fmull
push
in
clc
into
fnstcw
mov
inc
call
lock
fisubrs
shll
gs
mov
bnd
mov
adc
inc
and
stos
pusha
gs
add
ss
fs
lret
push
outsl
dec
mov
mov
push
add
cmp
add
sbbb
imull
jnp
push
inc
sbb
sub
stos
jl
daa
xor
fcomps
xchg
pusha
and
lock
xor
test
lret
and
aas
in
icebp
cmp
out
cli
std
add
xlat
mov
outsb
shrl
dec
mov
les
cmp
pop
pop
test
jg
jl
sbb
rcrb
push
out
pop
push
dec
jne
xchg
xor
cmc
test
cmp
mov
xchg
jns
rorl
sub
sub
mov
sub
ds
popf
loop
push
xor
mov
and
loope
xchg
std
cli
push
lcall
fidivrs
repnz
jbe
mov
ds
ret
inc
jge
mov
xchg
pop
imul
shl
jg
orl
int3
cli
lcall
adc
leave
les
cli
sbbl
ret
and
fwait
popa
cmpsl
es
push
mov
pop
ss
adc
inc
loope
fcomps
inc
pop
imul
nop
fwait
xchg
pop
rcll
xchg
movsb
cli
pop
loope
pop
push
fs
cmp
das
test
pop
inc
xchg
add
clc
fcoml
xchg
fwait
stc
mov
mov
pop
jg
pop
cmpsl
movsl
and
pop
or
jb
xor
call
dec
repnz
jnp
inc
sahf
pop
mov
pop
iret
divps
jecxz
jecxz
testl
jb
or
fidivl
push
mov
sahf
je
push
mov
jno
adc
jecxz
or
jne
inc
push
stos
stos
into
mov
sub
jae
push
jl
dec
push
adc
cmc
adc
and
ja
sbb
cwtl
fists
stos
mov
push
push
jp
clc
shlb
cmpsl
sbb
sbb
sub
or
xor
jnp
gs
jb
loopne
mov
pusha
cwtl
mov
popf
xchg
stos
jae
fmul
fmull
inc
je
mov
aaa
pop
jg
cwtl
lret
pop
jnp
mov
sub
lods
inc
fistps
mov
mov
cmp
int3
test
outsb
outsb
nop
xor
rol
nop
mov
push
nop
mov
push
xor
mov
out
das
les
mov
int
loope
loope
mov
push
or
arpl
pop
clc
stos
arpl
or
cs
or
pop
ljmp
sub
and
mov
xchg
xchg
pop
ds
ficompl
dec
sbb
cmp
xchg
sbb
fwait
adc
leave
jmp
lcall
insl
adcl
int
call
jl
xchg
xor
push
frstor
sbb
mov
and
andl
add
jae
test
or
xor
rcll
mov
mov
loope
cmp
ds
push
lahf
into
adc
lock
fidivrl
out
into
and
ret
pop
sub
ds
lahf
xchg
popa
sub
cmp
aas
push
pop
int3
test
mov
and
inc
sbb
ljmp
ss
sbb
dec
sbb
cwtl
test
or
jg
xchg
add
push
das
rorb
sbb
scas
cmpsb
pop
fcomip
clc
mov
notb
movsb
inc
fmuls
xchg
andb
loopne
out
out
repnz
scas
test
call
dec
push
mov
jmp
push
nop
jnp
sbbl
fs
adc
shl
xor
pop
cmp
int
add
pop
push
stc
das
outsl
xchg
mov
imul
or
push
cmpsb
imul
pop
cwtl
mov
push
stos
sar
inc
movsl
xor
das
xchg
push
pop
pop
cmp
ficomps
gs
outsl
inc
lret
gs
lcall
repnz
mov
add
stos
insb
xchg
sub
push
repnz
cli
inc
arpl
and
xor
stc
xor
push
insb
sub
pop
ret
std
nop
cmpsb
out
xor
pop
jae
mov
mov
leave
push
loop
loop
insl
push
and
cmp
push
test
and
out
cmpsb
xor
jo
outsl
call
lds
and
mov
jmp
add
out
sub
push
mov
dec
test
sarl
leave
in
addl
dec
mov
ljmp
jb
jmp
cld
stc
out
pop
and
shll
cmpsl
rcr
sahf
dec
pop
cltd
sub
lret
inc
repz
sub
leave
jb
iret
xlat
cltd
and
push
push
mov
fidivrs
aad
cwtl
cmpsb
std
lods
imul
cmc
je
push
fbstp
lea
cmpsl
inc
dec
mov
scas
nop
repz
pop
xchg
adc
push
sub
jns
jge
les
data16
pusha
jp
pop
icebp
xchg
repnz
pusha
cmpsb
adc
xor
iret
jb
jg
mov
pop
xchg
jmp
push
sub
adc
aam
add
enter
arpl
pop
push
and
adc
jne
insb
mov
pushf
push
adc
sbb
jns
cld
cmp
lds
mov
fst
push
testl
test
xchg
outsl
mov
mov
cmp
loope
cmpsb
jmp
cmp
sbb
movsl
jb
hlt
push
or
in
cmpsb
or
rolb
in
jb
fistpl
mov
shrb
lods
xor
filds
dec
cmp
and
dec
xor
aas
add
lock
es
fidivrl
push
je
pop
jno
jge
popf
cmp
loope
mov
cmpsb
jmp
push
aaa
dec
push
jae
xchg
test
push
or
scas
add
test
jno
or
sub
push
movsl
xchg
sti
shlb
aaa
fwait
imul
popa
sbb
inc
in
dec
push
js
push
xchg
mov
stos
cmp
outsl
cmp
mov
sub
aaa
add
fmull
push
adc
or
je
dec
adc
mov
pop
or
fsubrs
in
jmp
add
dec
xchg
insl
jl
popf
cld
or
mov
mov
mov
cmp
pop
cmp
push
inc
fcmovb
ss
mov
sub
iret
jns
addr16
nop
adc
jg
daa
and
and
cmp
int
in
push
scas
adc
call
or
sbb
jnp
sahf
jmp
mov
arpl
inc
stos
or
les
sub
mov
in
xchg
int
adc
sub
insb
mov
inc
inc
and
add
mov
enter
add
sbb
cmp
sub
push
lock
aam
icebp
mov
in
push
mov
mov
xor
int
mov
cwtl
aam
js
cmp
cmp
lahf
mov
mov
inc
loop
pop
sub
outsb
add
jnp
sti
leave
xchg
pop
xchg
xchg
mov
inc
lahf
mov
subb
in
jmp
inc
and
sbb
int
mov
push
push
test
stc
rcrb
clc
xchg
sbb
sub
mov
lcall
inc
or
jno
sbb
cmpsl
jnp
stc
aam
push
pop
and
or
lahf
cwtl
jge
iret
inc
or
mov
xchg
jbe
fcmovbe
aad
mov
roll
out
mov
cmp
lcall
sarb
or
push
add
jmp
cmc
push
outsb
mov
adc
jg
or
cmpsb
popf
sahf
or
inc
pop
loopne
push
arpl
loop
inc
dec
cmp
push
jno
stos
dec
lcall
push
and
xlat
rcr
notl
clc
jo
or
jecxz
pop
insl
inc
push
clc
std
sub
jp
scas
mov
sbb
test
shrl
push
rorl
inc
pop
out
jo
pop
and
test
mov
cld
adc
cmp
out
pop
cmp
mov
rol
push
xchg
jo
ss
icebp
addr16
push
pop
movsl
xor
xchg
scas
dec
xor
or
testl
sarl
lret
hlt
fisttps
sbb
mov
or
jg
mov
pop
jle
push
cmp
lods
enter
popf
les
popa
dec
mov
and
jno
mov
push
xchg
sub
xor
pusha
dec
sub
cmp
sub
xchg
je
arpl
cwtl
mov
ss
addr16
push
inc
les
or
scas
jmp
and
sub
sbbl
repz
lock
xchg
fsts
lods
xchg
jb
std
jecxz
adc
pop
jne
popa
jecxz
sti
cmc
xor
hlt
pop
mov
repnz
add
jns
pop
dec
mov
push
jno
in
lock
loope
leave
test
sti
mov
pop
sub
adc
imul
jecxz
jge
lock
adc
dec
push
shlb
les
popf
jge
xor
adc
jb
icebp
pop
int
or
cmp
mov
gs
ss
push
bound
decb
lret
mov
fisttpll
fucomi
je
aam
jb
test
mov
cmp
arpl
jecxz
shll
pushf
pop
in
mov
int
pusha
jp
pop
and
sbb
jecxz
lods
cmp
sarl
pushf
divb
shll
ljmp
shll
test
addr16
fwait
push
lods
sti
repnz
int3
mov
in
sub
test
xor
jg
xor
in
repz
sbb
movsl
cld
sub
push
or
js
cmpb
mov
cs
sub
cmp
mov
and
cmp
cmp
movsl
xchg
inc
inc
in
adc
inc
mov
pop
pop
and
pop
cwtl
pusha
sub
scas
adc
scas
xor
pop
sarb
xchg
nop
iret
jne
jbe
jns
pop
xchg
mulb
adc
jno
stc
clc
test
sbb
sbb
das
fwait
aam
jge
sub
push
loop
cmpsb
sub
sub
jnp
pusha
xchg
movsb
push
or
cmp
xlat
and
movsl
pop
aad
pop
cmpsb
std
mov
lret
dec
dec
insb
push
scas
jge
jecxz
mov
dec
dec
mov
or
lcall
data16
mov
pop
in
or
daa
mov
add
aas
ljmp
stc
rol
cmp
lea
xchg
jns
cmpsl
jge
xchg
add
push
sbb
shl
jmp
and
xor
cmp
mov
mov
xchg
lods
mov
jbe
and
sbb
adc
cmp
ret
sub
add
cltd
pop
inc
cmp
pop
sbb
loope
lods
pop
loop
dec
xchg
out
mov
shlb
jmp
push
orl
mov
mov
fs
adc
jmp
mov
cmpb
mov
mov
xchg
inc
fidivrs
in
test
arpl
cli
inc
jge
scas
sbb
jp
notl
pusha
jnp
sbb
js
sub
jle
pop
mull
enter
xchg
nop
fldt
out
or
jae
push
xchg
xchg
fldenv
in
and
xchg
in
out
jl
xlat
sbb
lcall
xor
ret
jbe
push
pop
lahf
into
ret
add
sub
mov
inc
mov
psubsw
pusha
call
lods
aaa
cmp
mov
ds
rorl
ret
xor
and
adc
add
push
mov
mov
mov
ds
rorl
ret
xor
and
adc
add
push
mov
mov
lods
pop
mov
ds
xlat
push
ret
xor
daa
ficoms
into
or
pop
cmpsl
jg
outsl
inc
pop
ja
ret
ds
push
push
add
int3
out
mov
je
or
sbb
jno
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
jl
jge
xor
aad
xchg
mov
add
push
add
pop
push
add
xor
pop
add
or
or
push
add
add
add
add
adc
jle
xor
jae
sub
lea
push
add
add
insb
add
add
cmp
test
pop
add
add
add
add
add
add
add
add
out
add
add
add
lret
add
flds
sub
xchg
add
add
add
push
add
add
mov
add
add
test
lret
add
add
add
add
lea
fwait
add
add
add
add
add
add
dec
add
jle
addl
insb
add
add
test
out
filds
xor
add
add
push
add
add
add
add
jmp
xor
add
add
mov
add
add
add
add
add
add
adc
sahf
add
add
bound
sub
test
adc
add
add
add
add
add
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
cmp
movsb
add
cmpsb
add
add
add
add
adc
xor
cmp
or
fildl
inc
add
pop
add
add
add
sub
xor
add
add
add
add
add
add
jmp
pop
add
add
pop
add
add
add
add
add
add
add
add
add
pop
add
cmp
add
add
mov
push
add
add
add
push
ds
add
add
mov
add
fadds
lret
add
add
fadds
adc
add
add
add
xchg
add
mov
add
add
add
into
add
add
add
add
add
add
add
mov
aas
add
loopne
pop
add
push
fwait
add
add
add
add
add
bound
lea
insb
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
xor
insb
add
add
add
push
add
add
add
push
add
add
add
dec
add
cmp
sub
lea
movsl
add
add
xor
jmp
lea
lea
movsl
add
add
add
add
add
add
mov
jnp
pop
add
add
lret
add
mov
add
add
add
add
add
add
adc
popf
add
add
pop
add
sub
add
sbb
mov
add
add
add
jae
xchg
add
add
xchg
add
xor
adc
add
adc
mov
add
add
add
add
imul
add
add
add
or
add
add
add
popf
add
add
flds
arpl
add
and
add
add
mov
loope
jle
xchg
in
pop
pushf
adc
adc
out
sbb
push
aad
mov
ss
sbb
ret
das
shll
pop
and
clc
inc
jmp
fsubrl
cld
and
ret
std
fucomip
ja
movsb
in
mov
sub
shlb
lock
add
dec
out
mov
cmp
test
jo
movsw
cmp
inc
xchg
pusha
cwtl
orb
addl
and
cmpsl
xchg
push
push
mov
xchg
mov
pop
push
sub
lds
fsubs
inc
sbb
or
jns
insb
es
inc
sub
call
cmp
scas
mov
jne
ret
jl
xor
adc
jbe
xor
jle
sbbb
mov
pop
mov
xchg
pop
xchg
loope
inc
push
sbb
aaa
das
out
aad
aam
loop
scas
or
in
loop
or
sub
fpatan
mov
push
mov
enter
xchg
mov
sub
popl
loop
nop
xorl
inc
mov
xor
popa
cmp
mov
popf
mov
fidivrs
push
jg
sub
xor
xor
movl
dec
adc
inc
push
outsl
xchg
mov
add
rcrl
clc
mov
test
and
sub
fldenv
iret
sahf
mov
popa
aad
sub
jl
mov
sbb
loop
jns
cld
xchg
imul
rcrb
cmp
fmuls
sub
stc
das
int3
or
or
ljmp
add
jmp
int
cmc
add
pop
inc
popf
xchg
xor
sub
mov
fstl
mov
jecxz
fs
sub
ljmp
repz
jecxz
out
pop
test
mov
pop
in
in
mov
cwtl
push
pop
mov
outsb
into
aad
ficomps
icebp
cld
jecxz
lods
lret
pop
adc
xchg
sub
or
adc
sbb
fsts
cmpsl
inc
mov
and
loopne
mov
xchg
and
in
mov
insb
push
lods
xor
mov
sub
pop
sbb
stos
pusha
and
sub
lret
into
mov
test
inc
outsb
call
gs
sbb
cmpsl
pop
mov
out
and
or
pop
push
cld
lods
int3
popa
int3
sbb
mov
into
mov
adcb
mov
lods
insl
pop
and
clc
test
dec
fcomps
and
popf
insb
xchg
pop
cmp
sub
nop
std
push
mov
cmp
dec
push
push
sub
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
