call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
push
xchg
mov
cmpsl
data16
mov
cltd
push
in
add
adc
int
es
xchg
inc
imul
cmpsb
xchg
push
xchg
jbe
data16
push
movl
pop
pop
aaa
daa
out
mov
cmpsb
xchg
lock
xlat
es
dec
idivl
adc
and
pop
xchg
daa
xchg
push
lds
loopne
les
ret
jecxz
mov
lret
add
sbb
mov
out
pop
enter
out
adc
mov
dec
arpl
fists
test
add
sub
lea
leave
sbb
ljmp
mov
addl
cmp
pop
mov
rclb
jl
mov
aaa
mul
sbb
cmp
bound
xchg
push
xchg
jb
data16
ss
out
lcall
out
addl
hlt
dec
push
fisubrl
addr16
mov
mov
xchg
mov
pop
push
add
mov
sub
js
je
sub
adc
inc
out
inc
test
xchg
enter
pop
dec
ret
xor
int3
pop
fiaddl
data16
push
movl
pop
pop
outsb
aaa
hlt
daa
ficoml
inc
push
push
repz
sbb
or
mov
imul
bound
push
roll
adc
and
repnz
add
add
adcb
adc
xor
fldcw
xchg
rcll
aad
and
lret
or
ss
pop
pop
aaa
mulb
out
xchg
inc
xchg
cmpsb
xchg
push
xchg
jbe
data16
push
movl
pop
pop
aaa
mulb
out
xchg
inc
xchg
cmpsb
xchg
push
mov
mov
jno
nopl
ss
shll
cmp
fsubp
push
mov
fimuls
cmpxchg
loope
mov
aas
mov
pushf
mov
leave
in
push
push
ret
pop
xor
ljmp
mov
icebp
icebp
and
lock
rcll
sti
xor
sar
push
fwait
pop
fs
fmull
and
movsl
pop
add
les
bound
in
stos
rcr
out
leave
mov
mov
xchg
lock
push
fadds
dec
cmpsb
xor
mov
dec
push
loope
fwait
ljmp
adc
mov
mov
fistl
dec
sbb
xchg
scas
jp
xchg
mov
scas
mov
nop
shrb
mov
inc
sbb
push
sbb
aam
sar
mov
add
fdivrl
dec
iret
xchg
jno
xor
jns
cmp
into
aaa
hlt
pop
rcr
pop
call
push
aas
aam
cmp
call
dec
or
xchg
call
in
fisubrs
mov
lahf
lds
sub
adc
lret
or
test
jno
mov
sbb
negb
nop
es
aaa
lods
sbb
sbbl
xchg
fsubl
cmp
cmp
and
lea
stos
insb
sar
jno
xor
dec
enter
rcll
sbb
frstor
sub
xor
xor
add
adc
dec
bound
sarb
mov
pop
stos
int3
xor
aad
lcall
fisttps
movsl
stc
and
jno
xchg
and
enter
out
push
mov
push
aam
push
ficompl
pop
push
sbb
sub
loop
sahf
and
adc
add
movsb
adc
mov
fwait
insl
stos
stos
pop
lds
push
push
adc
xor
sub
mov
inc
test
ljmp
std
int3
dec
mov
jg
adc
daa
or
push
dec
push
sbb
sub
xor
lcall
and
lods
scas
aad
pop
and
dec
enter
mov
es
lcall
xor
out
sub
add
fldt
stos
cmp
mov
inc
pop
jae
inc
add
cmp
mov
and
data16
dec
push
addl
out
iret
xchg
fwait
jo
fidivrl
dec
mov
aas
daa
pop
jge
jne
mov
jnp
js
or
movsl
notb
adc
roll
ret
mov
and
scas
sub
push
lahf
pushf
ja
and
jb
xor
adc
repnz
cmpsl
out
leave
cmp
xchg
movsl
xchg
out
pop
add
loop
xor
repz
xor
test
insb
mov
stos
cmp
inc
mov
dec
mov
sub
lods
push
xchg
outsb
xchg
lret
or
sub
mov
insb
adc
inc
xchg
inc
sub
das
mov
sub
out
sti
in
fidivl
mov
and
push
lds
adc
aam
dec
or
lret
mov
pop
mov
push
adc
lea
push
pop
pop
dec
arpl
in
mov
mov
push
cmpb
dec
pop
push
adc
mov
shlb
sub
push
les
xor
daa
js
jae
ljmp
das
test
jo
adc
mulb
test
mov
push
std
push
ss
mov
arpl
or
inc
push
dec
dec
cld
jno
mov
adc
or
sub
sbb
icebp
mov
cld
jg
push
pusha
popf
pop
loopne
lret
mov
mov
lods
cmpb
pushf
fmuls
mov
xor
mov
pusha
cwtl
add
aad
sub
add
adc
imul
aas
fwait
and
imul
mov
mov
or
push
mov
flds
addr16
or
push
ret
sub
push
mov
fdivrl
sbb
push
and
xor
add
mov
inc
jno
sbb
pop
pop
loop
mov
je
mov
jg
or
ret
out
mov
adc
push
in
mov
data16
inc
mov
mov
jp
sbb
int3
call
popa
sbb
and
shll
push
pushf
cmp
jge
jo
daa
mov
rol
xlat
rcll
call
mov
xor
in
push
lock
inc
cmp
adc
push
loopne
int
sbb
and
mov
lods
sbb
mov
lahf
repnz
scas
lcall
inc
adc
push
pop
xlat
jge
xchg
aad
adc
add
imul
cmc
or
in
ficoms
movl
add
into
hlt
int
testb
imul
lods
faddl
mov
lods
or
pop
clc
call
pop
xor
idivb
mov
rolb
decl
lods
dec
inc
lret
pushf
sbb
inc
int3
outsl
mov
mov
mov
je
test
push
imul
scas
inc
shr
sahf
jno
test
sar
dec
shrl
popa
jecxz
js
pop
inc
mov
out
mov
into
adc
sti
dec
push
xchg
shrl
add
xor
shll
inc
mov
inc
hlt
sub
sti
je
mov
xchg
out
sub
mov
mov
mov
stos
jmp
push
adc
addl
insb
mov
aam
iret
jmp
movsb
cs
mov
test
mov
std
mov
inc
imul
mov
loope
xor
out
scas
pop
cmpsl
popa
es
leave
stos
sar
adc
aaa
xchg
xchg
jge
rorb
mov
enter
rcll
xchg
loopne
mov
sub
aaa
daa
inc
adc
pushf
fldl
mov
jnp
cwtl
inc
pop
shl
icebp
and
sub
mov
jecxz
jmp
pop
daa
loop
adc
sbb
inc
aad
es
mov
xchg
bound
fimull
cld
filds
cmp
sub
insb
aam
mov
xor
pop
adc
addr16
sub
lcall
add
test
adcb
xor
ljmp
inc
adc
pop
sbb
mov
sahf
mov
mov
inc
pop
rolb
xchg
dec
cmpsb
cmp
xrelease
mov
push
stos
stos
inc
cld
jae
mov
push
test
outsb
and
mov
push
or
pop
jl
in
scas
adc
repnz
sub
adc
push
orb
sbb
insb
pop
out
sbb
mov
lahf
stos
pop
xchg
sbbl
dec
sub
xor
adc
adc
aad
mov
or
pop
push
mov
push
call
sub
mov
fiaddl
addb
arpl
mov
shll
js
cmp
ret
sub
sti
mov
mov
jbe
xor
push
dec
push
fisttpl
and
out
jbe
cmpsl
clc
push
mov
cmp
dec
mov
xchg
dec
loop
pushf
lea
movsl
dec
dec
rcrb
bnd
pop
arpl
mov
xor
or
mov
or
or
cmpsb
mov
push
aaa
outsl
mov
js
sub
jl
jns
repz
jo
add
jle
jle
push
out
cmp
pop
adc
mov
mov
mov
push
jne
mov
and
mov
out
imul
gs
repnz
into
arpl
inc
add
mov
mov
daa
sub
pop
adc
iret
cmp
je
push
pop
scas
mov
popf
sbb
in
adc
jg
lock
or
outsb
sub
sub
es
and
xor
mov
add
sarb
popa
push
int3
cld
mov
jne
into
mov
and
cmp
dec
mov
mov
adc
fucomip
lret
sub
fidivl
in
pop
sbb
outsb
pop
inc
addr16
int
pop
ds
sub
shrl
push
xchg
xorl
xchg
cmp
je
insl
adc
je
out
test
pop
insl
dec
fwait
pop
lret
push
mov
and
add
jbe
insb
stos
adc
cltd
push
and
mov
xor
shrl
lret
arpl
xchg
in
sbb
dec
push
adc
adc
loope
icebp
adcb
in
popa
and
jp
shll
cltd
enter
idivb
fsubl
cli
mov
pop
sbb
int3
jns
fs
nop
add
inc
jmp
insb
imul
mov
leave
adc
push
mov
outsb
push
pushf
sub
psrlq
adc
dec
push
loopne
sbb
or
lret
ss
movsl
push
pop
xorl
or
and
push
cmp
stos
inc
outsb
fisttpll
ret
inc
pop
inc
push
test
push
lea
imul
in
mov
repnz
roll
jo
or
in
loope
imul
insl
into
insl
adc
gs
jmp
rorl
cmp
aam
add
mov
stos
sahf
push
lods
addr16
in
nop
pop
and
stc
js
test
hlt
xor
adc
push
les
or
xor
mov
nop
push
mov
xor
sbb
aad
movsl
adc
cmc
mov
mov
rorb
adc
clc
and
mov
orl
xlat
sub
mov
dec
call
mov
imul
pop
cmp
and
imul
add
dec
in
stos
in
ljmp
rcrb
jb
push
sbb
imul
mov
cmp
outsb
push
hlt
icebp
rcl
repz
sub
call
push
ret
sbb
out
inc
lret
xchg
popf
push
mov
pop
push
or
loope
pop
lea
iret
lods
inc
jne
pop
mov
loopne
adc
js
out
movsl
popf
jmp
xchg
dec
push
push
mov
and
xor
jb
sub
add
push
cli
inc
and
inc
mov
mov
gs
pop
repnz
dec
cmp
in
in
xchg
jns
bound
sbb
aas
inc
push
pop
inc
add
push
push
imul
and
xor
mov
jmp
mov
mov
add
pop
jb
jge
mov
loope
lock
sbb
cmp
cli
cld
icebp
push
jecxz
stc
rorl
ret
imul
cmp
sbb
and
pop
mov
cmp
rorb
pop
xor
sbb
and
sub
jbe
adc
mov
fs
pop
rolb
mov
push
pop
adc
fisubrs
sub
fisubl
mov
or
mov
shl
xor
push
stos
insb
loope
adc
rorl
movsb
pop
and
lret
imul
or
add
jp
sub
adc
jno
cmp
ret
add
dec
cmp
loope
outsl
into
and
fildl
fdivrl
ds
imul
push
sti
outsb
imul
cli
out
roll
mov
or
out
stos
stos
xchg
je
mov
mov
dec
pop
std
and
mov
pushl
xlat
shrl
push
repz
subb
roll
jmp
int3
push
jecxz
mov
sbb
js
push
scas
sahf
mov
repnz
aad
negb
sbb
call
repz
lock
adc
sub
cwtl
jle
dec
jnp
leave
outsl
sub
iret
jnp
lahf
jle
lods
testb
dec
je
lret
add
popa
sub
hlt
jo
popf
js
arpl
shl
jns
icebp
scas
jle
lock
insb
aas
sub
and
adc
aad
ljmp
repnz
out
dec
xchg
lret
inc
sar
pop
jle
in
daa
adc
sbb
test
outsb
dec
pop
mov
loope
mov
scas
cmp
push
pop
cmc
push
push
mov
cs
fdivrl
into
fdivp
lock
xchg
jg
jp
dec
cmpsb
xor
push
xor
dec
dec
adc
lcall
imul
push
xor
xlat
stos
faddp
mov
cmp
bound
stc
jne
xor
popf
inc
stos
lods
adcl
jae
mov
ljmp
repnz
and
cmp
stos
mov
sbb
lret
je
in
dec
mov
jo
and
fs
sbb
push
lcall
shlb
adc
fisubrl
mov
sbb
push
clc
mov
jle
outsl
sbb
xchg
inc
cmp
out
jmp
add
loope
xchg
adc
addb
orl
loopne
jl
xchg
dec
dec
mov
cmpsl
daa
imul
bound
out
add
jbe
pop
and
pop
xchg
xchg
push
inc
bound
adc
xchg
sub
cmpsl
or
push
mov
outsl
dec
sahf
mov
xchg
jp
dec
outsl
fwait
adc
out
or
cmp
test
bound
aaa
flds
sbb
mov
subl
popa
subb
mov
sub
mov
push
lds
or
faddl
scas
lahf
fsubr
sbb
push
fs
cli
adc
pop
sbb
je
cs
outsl
pop
popf
aam
xchg
loopnew
imul
js
bound
imul
loope
sbb
in
imul
stos
mov
add
ret
inc
mov
add
dec
sbb
sbbb
xor
ja
mov
jl
rcr
dec
and
pop
jecxz
push
insl
push
push
in
ljmp
stc
call
ja
movsl
xor
shlb
orb
dec
inc
and
inc
jp
in
xor
jae
push
cld
and
jb
call
dec
bound
sarl
or
mov
lahf
push
mov
lret
dec
fs
jae
push
xchg
mov
mov
pop
out
xlat
shrb
cmpsb
aas
outsl
test
cli
push
icebp
jp
xor
or
jge
mov
mov
jp
cltd
gs
fimuls
cmpsl
cld
pop
mov
xor
cwtl
pop
jge
push
rolb
mov
add
ds
and
xor
xchg
gs
cmp
mov
je
scas
mov
jo
pop
cmp
bound
aad
data16
xor
push
xlat
loopne
je
jge,pn
inc
stos
test
idivl
call
loope
das
in
outsl
aas
icebp
ja
into
sbb
lahf
inc
int3
andb
push
push
mov
cld
pop
and
in
cli
xchg
and
lahf
in
push
sub
iret
xor
jae
cmc
stc
adc
inc
or
mov
out
mov
or
jnp
push
repnz
xor
or
jge
cwtl
and
push
add
pop
xchg
pop
push
les
or
lcall
or
inc
mov
daa
subl
jle
pop
sbb
dec
sbb
test
mov
in
ss
mov
inc
insb
lods
or
jne
and
pop
insb
or
ss
inc
call
mov
scas
push
popa
cmp
fstps
jne
lret
ret
fistpll
xor
aaa
jns,pt
cwtl
push
mov
push
stc
mov
mov
popw
mov
sbb
sbb
int3
and
mov
bound
xor
mov
xor
dec
mov
and
lds
xchg
mov
mov
and
mov
notl
push
push
jmp
aad
mul
push
stc
push
into
es
aas
sub
jae
hlt
orb
or
mov
jle
lods
adc
mov
adc
mov
jge
aas
mov
pop
adc
mov
fstp
out
jle
pop
mov
rorb
pop
xor
adc
ret
mov
sub
inc
pop
push
sbb
outsl
pushf
mov
pop
xor
pop
adc
sarb
mov
fstpt
and
pusha
push
ds
lahf
ja
shl
shll
xchg
push
and
test
mov
add
stc
in
inc
lret
pop
pusha
jge
xor
icebp
arpl
outsl
sbb
stc
xor
pop
mov
push
fstl
xchg
push
pop
ret
fistpl
mov
shll
leave
jnp
push
cwtl
test
fcmovb
test
cli
mov
clc
and
lret
adc
push
jp
pop
ss
pop
pop
lahf
push
push
pusha
cmc
je
int3
in
adc
push
pop
stc
cwtl
outsb
push
pop
or
dec
push
arpl
es
int
mov
xor
leave
fdivs
mov
call
hlt
pop
jbe
fwait
add
stos
and
cmovns
add
mov
add
enter
inc
stc
lcall
jmp
sub
xlat
jne
lods
pusha
push
pop
imul
push
aad
push
test
mov
aaa
stc
test
xlat
sahf
cmp
loop
push
pop
faddl
mov
mov
insb
push
hlt
rcl
lods
mov
idivl
sarb
xor
jbe
sbb
jmp
push
pop
mov
cli
out
out
adc
aad
add
fiadds
add
push
and
je
push
test
fldcw
dec
mov
mov
test
pop
mov
mov
jb
and
test
cwtl
dec
pop
enter
adc
jb
add
test
idivb
das
mov
popf
cmpsb
push
pop
xchg
pcmpgtw
ret
mov
or
jl
mov
sub
mov
jg
popf
cmp
or
push
pop
dec
jo
inc
push
jae
ror
nop
outsl
adc
int
mov
js
lea
mov
push
repnz
es
add
ss
mov
pushl
or
gs
fnstenv
test
cmp
in
ror
lret
xor
cld
popf
aaa
sbb
psrlq
sub
sbb
add
fsubs
outsl
fs
mov
pushf
push
rclb
subb
test
jne
test
dec
mov
push
test
ret
imul
mov
xor
mov
lock
mov
psubw
and
mov
pop
sti
repz
insl
lahf
push
adc
dec
loopne
enter
fisttpl
shrb
clc
and
adc
in
inc
push
ret
inc
pop
enter
jge
das
pushf
pop
movsl
fwait
hlt
xchg
ljmp
or
loopne
mov
lods
xor
pop
push
ds
arpl
popa
sbb
fiaddl
test
lret
mov
aas
pop
and
jmp
or
sub
cmc
dec
adc
and
arpl
arpl
out
test
xchg
ret
hlt
dec
in
std
outsb
xchg
int
pop
sbb
sbb
scas
push
addr16
push
int3
cmp
ljmp
imul
stc
and
adcl
lcall
dec
insb
icebp
mov
inc
enter
push
mov
pop
in
and
push
iret
insl
imul
jno
push
add
lcall
jge
outsb
mov
adc
ja
shlb
add
jle
sbbl
bound
mov
fcompl
push
dec
bnd
popa
bound
jne
out
iret
outsl
jnp
mov
sub
frstor
lods
pop
pop
das
mov
int3
and
xor
pop
mov
xchg
addr16
cmp
xor
jae
cmpsl
adc
jo
bound
xor
lods
adc
sub
push
xor
ret
jbe
mov
or
insb
cmp
int
pushf
imul
lret
mov
test
add
xor
xchg
sar
or
xor
fs
and
or
push
fs
insb
mov
push
cmp
test
sub
and
fs
adc
lods
lods
aam
outsl
xchg
popa
mov
in
scas
and
mov
jmp
frstor
sbb
movsl
nop
sti
jp
xor
xor
sbb
mull
test
xchg
std
cmp
sub
mov
adc
sub
mov
mov
push
cmc
mov
xor
jne
dec
cmc
mov
addr16
pop
iret
or
and
add
aaa
cmc
imul
popa
sub
sub
pop
mov
xlat
cmpsl
sti
mov
sbb
out
cmpsb
lcall
hlt
jg
sbb
pusha
adc
jecxz
xchg
pop
push
cmp
add
icebp
repz
insl
mov
fbstp
fnstenv
mov
pop
mov
rcrb
mov
mov
mov
cmpsl
data16
push
movl
pop
pop
aaa
mulb
out
xchg
inc
xchg
cmpsb
xchg
push
xchg
jbe
data16
push
movl
pop
pop
aaa
mulb
out
xchg
inc
xchg
cmpsb
xchg
push
pop
dec
aaa
outsb
cmpsl
bound
insl
divl
addr16
xlat
pop
ret
daa
out
push
xchg
inc
xchg
addr16
xchg
mov
mov
xlat
push
movl
pop
sub
insb
popf
mulb
xchg
daa
out
aaa
incb
into
pop
ficoms
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
ror
ret
out
loop
fwait
out
icebp
mov
pop
jb
bound
push
add
ror
ret
out
loop
xchg
mov
mov
jb
bound
push
add
xor
ror
ret
out
loop
xchg
mov
mov
add
pop
jle
dec
jno
jno
dec
cmpsb
into
mov
scas
popf
dec
aad
pop
je
mov
js
gs
lahf
leave
mov
ds
cmp
add
test
out
cmpsb
iret
mov
inc
jnp
bnd
outsl
sub
sbb
dec
js
std
push
in
mov
mov
adc
mov
mov
and
xor
in
cli
jge
jmp
mov
xor
fs
lret
mov
cs
and
pop
add
mov
cmp
call
and
shll
mov
pop
cmp
enter
mov
pop
cmpb
negb
push
fprem1
cmp
aas
adc
ret
out
loop
xchg
mov
mov
jb
bound
push
add
xor
and
mov
movsb
xchg
mul
in
sahf
fucom
es
and
daa
sub
push
daa
cmp
push
jg
into
mov
xchg
out
mov
cli
neg
out
and
and
adc
insl
addr16
dec
dec
outsb
mov
ret
xchg
sahf
mov
mov
pop
jb
bound
push
add
xor
and
ror
ret
out
loop
xchg
mov
mov
jb
bound
push
add
xor
and
ror
mov
mov
loop
cmp
add
btc
std
xor
push
pop
xchg
inc
movsb
cmp
pop
xchg
sbb
test
mov
pop
fs
sbb
leave
adc
shll
xorl
xor
sbb
sbb
push
loopne
pop
scas
fsub
or
push
idivb
sahf
es
mov
rorl
cld
imull
arpl
jbe
inc
mov
fstpt
repz
jmp
inc
cmpsb
scas
inc
jle
cmp
lahf
mov
add
aaa
bound
in
xor
jnp
dec
outsb
pop
mov
mov
mov
inc
and
lods
outsb
clc
inc
repnz
outsl
test
ljmp
ja
les
cwtl
leave
insb
xchg
test
jecxz
repz
jge
dec
adc
mov
mov
gs
push
inc
rorb
jae
scas
into
inc
fstpt
loope
mov
icebp
mov
adc
mov
mul
mov
pop
inc
mov
clc
jne
sbb
push
mov
xor
scas
push
dec
cmp
push
mov
add
outsl
bound
xor
xor
lahf
jg
in
pop
or
sub
rorl
cmp
mov
nop
stos
fsubl
mov
inc
add
sbb
add
mov
adc
sub
inc
js
stc
xchg
jp
sbb
or
sahf
ret
pop
testb
mov
xchg
xchg
sbb
lea
and
stos
xchg
ret
add
rolb
jne
sti
and
inc
pop
add
adc
cmp
inc
mov
mov
fsubrl
inc
mov
and
adc
adc
lahf
and
add
xor
cmpl
rcl
mov
add
cmpsl
loope
sarl
jo
inc
mov
dec
sbb
stos
pusha
cmovbe
inc
lret
dec
test
mov
lods
int3
outsl
or
adc
inc
mov
shr
jne
xchg
hlt
mov
mov
je
mov
pushf
ljmp
mov
ds
jp
ja
inc
cmpsb
mulb
jbe
pop
fnstcw
daa
insb
pop
push
cmpsl
cmp
les
mov
mov
in
and
out
fld
push
fxch
stc
rorb
loop
loope
das
mov
scas
dec
loop
jno
gs
out
outsb
rcl
and
mov
adc
mov
xchg
in
sbb
test
sub
mov
cmp
or
jmp
and
mov
cmp
mov
out
sti
lcall
cs
lock
sub
push
xchg
cwtl
leave
mov
outsb
daa
clc
mov
imul
pop
pop
fisttps
ret
addr16
inc
and
and
loope
pop
xchg
push
imul
sub
movsb
fstpt
xchg
mov
xchg
dec
adc
xor
mov
dec
pop
adc
sbb
aas
scas
dec
mov
xchg
jno
arpl
out
les
adc
pop
je
jne
jne
cmc
xchg
loop
cli
scas
ret
dec
xchg
lret
push
ja
sbb
mov
cmp
int3
adc
mov
and
inc
adc
adc
cmp
xor
mov
in
into
pop
mov
mov
dec
sub
push
pop
jle
xorl
pop
dec
test
call
cmc
in
and
lea
js
xchg
aam
imul
pop
insb
pop
pusha
mov
out
dec
cmp
xchg
repnz
jp
ja
dec
push
pop
add
sbb
addl
lds
or
xlat
test
enter
dec
pop
sub
mov
sub
rcll
jmp
mov
push
pop
faddl
scas
mov
pusha
in
adc
push
add
mov
daa
dec
or
insb
mov
dec
dec
out
stos
out
mov
rolb
lds
sub
pop
adc
xchg
call
shll
adc
pop
int3
and
pop
sbb
dec
sti
mov
push
in
sub
mov
add
test
jae
insb
xchg
inc
imul
addr16
adc
test
pop
push
xor
daa
mov
mov
repnz
mov
mov
outsb
int3
dec
out
lock
bound
mov
jnp
xchg
cmp
inc
arpl
xchg
cltd
mov
push
je
out
fwait
or
fmuls
adc
xchg
orl
into
out
mov
pop
xlat
cmpsb
adc
aam
fdivrl
mov
jp
dec
aaa
jbe
and
aas
popf
xorb
push
mov
aas
lods
call
mov
xlat
out
mov
out
rclb
daa
adcb
pop
cli
jae
subl
test
mov
pushf
movsl
jb
jno
insb
dec
push
aas
out
das
popa
ljmp
mov
mov
push
out
sbbl
cmp
push
pop
sbb
sub
inc
xor
xchg
lds
rcl
in
xchg
ss
xorl
pop
data16
ds
jo
popa
mov
inc
pop
jl
add
adc
pop
mov
cltd
lahf
cltd
mov
imul
out
fsubl
and
xor
cmp
push
subl
adc
adc
or
inc
xchg
xor
push
in
pop
mov
cmp
loop
sbb
add
popf
aas
xchg
dec
sub
mov
mov
call
sbb
or
testb
mov
or
in
into
nop
lock
xor
repnz
test
mov
push
jecxz
sahf
mov
push
sbb
mov
pop
fs
pushf
fwait
imul
out
jo
movb
out
pop
nop
dec
mov
dec
jnp
incb
ret
shrl
pop
es
cmpsb
mov
mov
pop
rorl
ss
sahf
jg
insl
adc
xchg
push
rcrl
mov
sti
rcrb
dec
xlat
cmpsb
arpl
xchg
test
mov
das
adc
and
cmpsl
jg
xchg
or
sarb
sbb
pop
stos
jbe
mov
repnz
popf
or
xor
adc
mov
js
add
cmp
lret
mov
push
mov
sub
xor
add
mov
lods
in
lock
insb
inc
add
sbb
scas
pop
in
iret
mov
subl
jno
popf
xchg
pushf
mov
mov
out
stos
cmpsb
dec
or
xor
xchg
xchg
fildl
dec
cmp
jg
pop
inc
mov
pushf
inc
in
pop
je
cmp
mov
test
pop
stc
xchg
js
cmpsb
push
lahf
fcmovb
ret
jecxz
aaa
hlt
aaa
dec
pusha
xor
sbb
outsl
pop
push
push
xchg
jecxz
imul
ljmp
xor
mov
sub
sahf
xchg
int3
inc
sbb
push
xlat
dec
and
sbb
lds
mov
negl
je
out
sahf
mov
and
inc
popf
hlt
inc
lcall
cld
xor
loopne
mov
dec
dec
out
push
push
int
cmpsl
jmp
dec
mull
ret
mov
enter
addr16
xchg
pop
cmp
lock
xor
scas
xchg
test
mov
and
cmp
fnsave
inc
dec
sub
pop
icebp
inc
lahf
out
jne
dec
out
pushf
ret
cmp
aas
aam
sub
ret
or
or
jno
and
or
mov
xchg
sahf
fldenv
ss
or
scas
or
xor
xchg
fildl
clc
out
jns
cmp
dec
inc
mov
mov
ja
jns
pop
rcrl
mov
xor
call
iret
jnp
mov
mov
stos
ret
mov
jo
xor
mov
and
cmp
xchg
or
inc
mov
jne
jle
and
mov
sub
or
adc
push
int
stos
mov
out
xchg
daa
mov
test
rorl
mov
movsb
rol
mov
notb
mov
mov
dec
rcr
or
cmpl
stos
out
adc
cmp
add
pop
mov
mov
daa
aas
flds
gs
push
adc
sbb
pop
cmp
rol
push
inc
ljmp
sub
jns
jg
or
rcr
mov
ja
mov
movsl
icebp
xchg
xchg
icebp
cmp
cs
into
sbb
push
sub
movsl
test
and
std
add
jo,pn
cmp
mov
adc
mov
pop
imul
dec
ret
lea
fiaddl
pop
fildll
inc
dec
aad
pop
filds
xor
fmulp
hlt
popf
mov
sub
test
hlt
adc
popf
jns
xchg
lret
in
or
inc
into
rolb
or
or
testb
mov
or
push
dec
jnp
adc
adc
adc
rol
cmpsl
mov
dec
push
jmp
daa
cmp
outsl
arpl
aad
mov
cmp
mov
mov
mov
xorb
mov
enter
inc
fidivs
mov
jb
mov
daa
pop
cmpsb
push
add
add
mov
mov
cmc
icebp
inc
sub
cwtl
add
adc
aas
in
shll
dec
pop
cmp
cmp
aas
lods
stos
xchg
sbb
sbb
sbb
es
push
mov
int3
fisubl
xor
clc
mov
fnsave
aas
insl
leave
jnp
dec
ficomps
mov
jbe
cltd
and
in
xor
rorb
or
ja
fidivrl
push
add
xorb
movsl
and
sub
push
inc
lock
sahf
sub
jno
scas
xchg
test
out
and
movsl
and
jmp
les
frstor
mov
add
sbb
and
clc
loopne
lods
hlt
mov
pop
mov
je
pop
es
sub
out
pushf
stos
dec
lds
insl
loopne
mov
dec
fstpl
sub
das
into
add
or
push
xor
aas
scas
jge
add
jmp
out
mov
jg
and
fcoml
mov
cmp
lahf
jae
pop
rclb
mov
imul
jg
pop
sub
or
jp
mov
hlt
dec
dec
dec
xor
idivl
incl
or
pop
fs
icebp
cmp
and
add
fisttpl
cmp
push
jbe
fldl2t
jl
add
xchg
or
js
add
mov
mov
push
lods
dec
pop
pop
fldcw
in
add
xorb
mov
aas
add
sbb
bound
lods
mov
cs
lahf
sbb
incl
pop
push
lods
hlt
fbld
insb
pop
xor
inc
mov
jecxz
cwtl
std
movsl
insb
mov
popf
ja
imul
jne
mov
scas
arpl
mov
hlt
scas
cmp
mov
and
mov
cli
add
cmp
xchg
lcall
shlb
jle
adc
add
lods
push
lret
ret
add
jecxz
pushf
inc
inc
cmp
or
dec
xchg
cmp
unpcklps
aam
gs
add
push
inc
sti
icebp
subb
mov
fwait
push
mov
push
je
push
in
es
sub
pop
dec
adc
xor
pop
ss
arpl
pop
sbb
mov
in
lcall
mov
rep
mov
lods
jno
inc
xchg
pop
sbb
cli
mov
xchg
imul
arpl
jae
ss
mov
imul
sbb
mov
xor
mov
data16
adc
cs
xor
clc
inc
dec
fbstp
jnp
xor
sub
loope
outsl
mov
mov
xchg
xchg
int3
shrl
lea
lcall
jnp
or
sbb
push
mov
outsb
push
mov
decb
movsb
in
inc
inc
push
imul
xlat
sbb
xor
adc
jmp
xor
mov
pusha
xorl
inc
cmp
dec
shl
sub
push
inc
stos
push
aaa
fdivl
ljmp
add
in
in
and
sbb
mov
dec
stos
cmpsb
push
xchg
movsb
xchg
popf
sbb
mov
add
mov
mov
test
add
fwait
xor
sub
cmp
in
je
rcl
inc
repnz
xor
cmp
push
mov
mov
das
daa
aaa
test
mov
jae
dec
cmpsl
repnz
cmp
mov
jne
orb
and
mov
test
repz
fwait
inc
iret
adc
pop
push
cs
mov
mov
into
sub
dec
push
xor
rclb
xor
dec
mov
lret
subl
call
push
icebp
xchg
inc
lds
imul
xchg
cmp
mov
jmp
sti
outsb
mov
push
and
pop
or
pop
jnp
inc
mov
pop
lret
fidivrl
cwtl
outsl
iret
pop
or
in
repnz
out
scas
loopne
je
adc
test
xchg
push
add
cmp
leave
cmpsl
jge
jb
rclb
into
add
pop
punpckldq
int
mov
call
cmpsl
xchg
nop
xor
pusha
push
xlat
pop
adc
jl
test
dec
test
out
jno
add
push
sub
loopne
push
into
dec
jo
dec
dec
pop
mov
and
and
rcrl
sub
xor
pop
or
fs
add
pop
orl
fldcw
cli
dec
fs
mov
outsb
pushf
pop
or
stos
and
mov
pop
inc
dec
pop
pop
sub
or
mov
mov
inc
xchg
add
or
repz
inc
into
out
outsl
adc
popa
jb
adc
sub
push
sbb
pusha
mov
mov
sbb
jmp
fwait
mov
imul
arpl
push
in
aas
xor
or
sbb
jbe
mov
push
test
aas
aaa
fucomi
popf
xor
or
inc
and
dec
fcoms
inc
lea
inc
sub
movsl
dec
out
jbe,pt
andl
sub
andb
ret
int3
enter
mov
push
push
stos
xorl
jno
inc
push
adc
hlt
inc
add
std
fwait
xchg
mov
jle
lcall
dec
add
popf
jnp
pop
shll
cmpsl
jmp
mov
or
dec
je
jns
sub
inc
imul
xor
int3
dec
jl
pop
mov
xchg
cmp
jl
add
jae
sti
or
jle
dec
and
repnz
dec
xchg
mov
int3
xchg
popa
mov
imul
hlt
add
inc
insl
or
push
mov
ret
test
repnz
cwtl
insb
inc
hlt
sbb
mov
icebp
cmpsl
fstpl
jge
push
das
xchg
inc
pushf
insl
inc
pop
imul
jg
out
adc
sti
imull
ret
xor
cmpsl
cmpsl
rcll
test
movsb
fldt
iret
push
cmpl
out
pop
pop
xchg
jecxz
rorb
push
ds
sub
ret
push
clc
aas
dec
adc
adcl
lea
inc
inc
fcoms
repz
xlat
or
out
jne
adc
fimuls
pop
sahf
xchg
aad
or
out
jae
dec
inc
jl
push
pop
je
push
xchg
mov
cmc
aas
or
shll
repnz
out
pop
jae
fs
adc
stos
pop
addr16
sub
add
pop
stos
call
push
pop
jb
mov
push
ficoml
push
and
mov
fs
xor
push
daa
mov
adc
stos
cmpsl
push
push
jmp
pop
inc
mov
js
dec
lret
popf
dec
pop
cld
mov
aas
xor
dec
sbb
enter
mov
stos
dec
hlt
fsubrl
and
push
add
cmp
mov
les
mov
push
adcb
push
iret
sbb
mov
data16
mov
into
in
into
and
xchg
scas
mov
adc
jg
orb
pop
mov
loope
inc
xchg
aam
in
sbb
jb
jle
or
mov
rdtsc
aad
loop
inc
fcomps
mov
insb
sti
filds
sub
insb
inc
inc
cmp
mov
mov
jnp
rolb
insb
test
jo
xor
pusha
and
adc
adc
jo
push
add
xchg
mov
aam
and
js
xchg
fcoml
push
cli
outsl
loop
cmp
cmp
mov
enter
mov
in
sub
or
dec
shll
cmpsb
add
jmp
mov
in
jno
and
sbb
inc
fnsave
or
mov
fs
jmp
cld
je
pop
pop
jge
out
test
movsb
icebp
sub
xchg
ljmp
adc
loope
push
mov
cmc
push
inc
divl
xlat
out
dec
sahf
popa
pop
popa
or
mov
xchg
xchg
cmp
mov
push
dec
movsb
xchg
shl
ret
mov
lahf
shlb
mov
inc
push
and
gs
repnz
hlt
sbb
dec
rcl
push
in
jns
pusha
mov
push
jl
mov
mov
hlt
pushf
scas
sarb
xchg
pushf
mov
adc
adcl
jecxz
jno
lds
push
inc
loop
ret
leave
adc
daa
mov
sahf
fadds
addr16
pop
into
loope
test
lahf
xor
in
and
ja
nop
mov
out
test
push
imul
mov
std
sbb
xor
clc
xchg
lock
incl
adcl
jb
in
dec
bound
popf
sbb
mov
push
jo
movsl
and
sbb
fnsave
jno
push
sbb
pop
xchg
sbb
ljmp
jns
xchg
outsl
nop
js
dec
xrelease
jnp
imul
jmp
int3
xchg
or
outsb
add
mov
popl
push
xchg
ret
mov
mov
xchg
adc
push
jl
inc
inc
mov
sbb
fnstenv
fistpl
dec
dec
aaa
dec
jle
nop
mov
mov
and
xlat
int3
sahf
or
fcom
mov
mov
int
aam
filds
insb
mov
std
lods
bound
in
or
pop
and
mov
and
loopne
aaa
movsl
mov
mov
or
dec
jo
int
sbb
push
sub
outsw
xor
scas
mov
pop
push
jno
pop
cli
or
add
jb
add
jl
outsl
sub
out
scas
dec
pop
sti
push
loope
loope
push
or
and
popa
addl
pop
dec
add
fidivs
cltd
dec
sti
xchg
lock
fnsave
pop
mov
mov
inc
push
stos
lcall
jle
std
into
adc
pop
xchg
cmpsl
jb
inc
fldl
mov
fwait
lret
imul
push
pop
ret
es
mov
clc
pushf
inc
or
add
pop
xchg
fwait
pop
mov
push
nop
xchg
jns
xor
pop
stc
cwtl
fiaddl
ficoml
mov
cltd
movl
cltd
enter
push
rep
mov
cmp
pop
jge
or
mov
push
es
push
push
mov
xchg
and
jne
sbb
sti
push
je
lret
sbb
lret
or
ds
push
cmpsb
jb
int
mov
inc
sbb
popa
nop
push
jg
into
jo
test
mov
xchg
pop
mov
fsubrs
jl
in
cltd
add
mov
xchg
fdivrl
jae
pop
cmpsl
ss
out
jmp
notl
ljmp
add
sbb
jp
add
rorl
daa
add
cmp
je
lret
mov
mov
shlb
jb
and
in
je
xor
out
xchg
inc
add
gs
std
jp
ja
xchg
addr16
cmp
push
lret
jnp
inc
sub
fiadds
sbb
mov
mov
push
or
sbb
popf
lahf
and
inc
nop
add
jnp
imull
adc
add
incb
js
repnz
mov
jecxz
in
jecxz
sbb
clc
fsubl
das
nop
mov
mov
adc
sub
les
icebp
pop
adc
nop
jbe
mov
or
cmpsl
int
sub
sti
mov
xor
mov
js
xchg
cmp
mov
imul
ds
adc
push
inc
pop
xchg
pop
xchg
imul
jecxz
dec
xor
pop
dec
jne
cmp
jecxz
leave
rorb
outsb
arpl
loop
xchg
mov
mov
jb
bound
push
add
xor
and
ror
ret
out
loop
xchg
mov
mov
jb
bound
push
add
xor
and
ror
ret
outsb
loop
xchg
mov
mov
jb
arpl
push
add
xor
and
ror
ret
out
loop
xchg
mov
mov
fsubrs
or
mov
lret
rcll
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
ss
fistl
lret
fcompl
xor
xchg
dec
out
imull
or
or
sti
ss
fistl
lret
mov
inc
fwait
push
mov
jnp
dec
out
idiv
sbb
or
loop
jmp
ret
push
shlb
jbe
inc
adcl
cwtl
mov
out
repz
test
inc
out
mov
orb
inc
in
push
push
jb
add
mov
mov
sbb
xchg
out
push
jae
mov
aaa
xor
int3
adc
add
sti
dec
sbb
sbb
mov
cs
mov
test
in
cld
stos
int
and
out
shl
imul
inc
in
or
stos
ss
sti
data16
pop
imul
jo
xchg
movsl
aam
xchg
fsubl
ret
leave
or
add
mov
push
mov
test
push
xchg
dec
mov
sahf
cmpsb
inc
sbb
hlt
fdivp
or
mov
push
pop
jp
jg
dec
sbb
push
xlat
sbb
ss
push
lret
push
shll
jbe
inc
adcb
arpl
push
out
idivb
sbb
outsl
push
sahf
jb
push
pop
lret
adc
add
xor
into
adc
jmp
push
mov
data16
jne
jb
pop
into
add
adc
hlt
add
or
das
repz
ja
outsb
push
mov
ss
inc
fwait
push
mov
pop
xchg
dec
out
imulb
sbb
or
sti
ss
fistl
lret
mov
inc
fwait
push
mov
pop
xchg
dec
out
imulb
sbb
or
sti
xor
inc
fcoms
daa
mov
add
inc
mov
test
repz
sbb
cmc
cmp
dec
lods
mov
lret
or
mov
pop
pop
add
lcall
mov
dec
in
lcall
or
dec
test
inc
mov
imul
xchg
aas
sub
pusha
jns
repz
in
mov
scas
adc
add
adc
pop
jbe
iret
sbb
xlat
sbb
frstor
mov
lock
jnp
cmp
pop
cltd
pop
sbb
jg
mov
nop
mov
xlat
inc
in
test
sub
mov
call
call
xor
mov
imul
imul
adc
bound
fs
hlt
data16
loop
pop
inc
push
aaa
inc
sub
xchg
xchg
pop
mov
cli
xchg
ja
cmp
jne
mov
xchg
or
push
inc
push
test
adc
mov
imul
cs
and
push
xor
mov
cmpsl
push
cmp
mov
pop
repnz
shrb
stos
int3
push
xor
lods
add
lods
xor
inc
insw
cmp
mov
add
mov
or
jecxz
or
int
les
mov
adc
loope
pop
mov
jmp
leave
sbb
cmp
mov
lds
mov
inc
inc
pop
adc
stos
xor
test
addl
and
out
dec
and
xor
loopne
pop
lret
fdivs
adc
negl
fldl
lods
dec
fnsave
mov
cmp
ja
outsb
and
mov
cltd
mov
cmp
inc
add
lock
or
fcoml
mov
cltd
push
jmp
mulb
xchg
dec
xchg
and
sub
arpl
sub
push
fwait
mov
push
cmpsb
push
push
adc
jg
sbb
sbb
sahf
mov
fs
notl
and
iret
pop
cli
in
out
add
setb
iret
and
mov
mov
pop
adc
push
das
andb
or
fs
cmp
mov
jne
mov
mov
mov
je
nop
sub
fmul
or
jp
or
daa
mov
add
inc
adc
mov
cld
fsts
and
faddl
sub
loope
imul
add
stos
aaa
psubb
sbb
jp
jge
mov
mov
push
push
mov
cld
stos
lcall
repz
movsb
shll
daa
pop
testb
popa
leave
xor
push
xchg
gs
lds
pop
inc
add
scas
ds
sub
pop
xchg
shr
sbb
int
mov
in
add
sbb
repz
int3
lock
out
insl
xor
repnz
pmaxsw
and
test
sbbw
in
int3
cmp
jecxz
xor
aaa
js
insl
out
cmp
ficoml
mov
xchg
sub
aaa
mov
adc
dec
dec
mov
cmpsb
jnp
lcall
mov
dec
sbb
lock
aas
push
pop
xchg
inc
inc
cli
mov
dec
xchg
lcall
xchg
inc
push
mov
pop
decl
and
xchg
jg
aam
mov
dec
adc
jne
pop
in
cwtl
jns
jge
push
mov
std
pop
jmp
repz
mov
or
push
mov
stos
lods
scas
sub
jbe
dec
gs
pusha
and
add
inc
mov
add
adc
cmc
sub
lods
mov
mov
movsl
mov
das
sub
push
loope
out
xorl
repnz
shl
add
add
xchg
cmpb
pop
mov
sbb
cmp
inc
scas
popa
cld
cmp
cli
jo
les
mov
orl
sbb
rorb
lcall
sar
cmp
cmp
adc
clc
or
jecxz
rcl
pop
mov
addr16
out
jle
sbbb
xor
mov
mov
cmp
data16
cwtl
sahf
jle
out
add
mov
mov
add
adc
xor
jmp
or
loop
add
and
dec
je
orb
fstps
pop
loopne
aas
fiaddl
aam
movntq
out
inc
cld
pop
jmp
and
js
mov
shr
add
das
sub
cmp
adc
sub
or
adc
push
outsb
mov
xor
fmul
inc
jmp
and
mov
repnz
testl
or
popa
daa
in
inc
sti
sbb
adc
dec
test
jno
mov
sbb
dec
cwtl
cmp
aas
jne
sub
sbb
dec
shrl
jl
repnz
pop
lods
enter
fstps
ficoms
cmp
and
jmp
jle
hlt
inc
aas
test
sub
jle
mov
out
pop
js
and
das
xlat
popf
pushf
xchg
mov
mov
out
mov
in
sbb
xchg
dec
mov
aas
ret
lock
jl
in
xor
rcl
es
aas
xchg
pushf
mov
dec
cmp
cmpl
lret
out
inc
loopne
pop
pop
loop
movl
rcr
mov
xchg
dec
stc
jg
xor
jp
ret
imul
jo
or
mov
sub
adc
or
ret
mov
mov
js
push
in
push
hlt
cmc
cmp
xchg
xchg
jo
rcrb
dec
lahf
lret
jmp
sub
mov
outsb
inc
aad
mov
mov
xchg
dec
inc
lahf
mov
mov
dec
xlat
pop
aas
push
dec
dec
xchg
xchg
stos
mov
inc
push
sbb
jae
arpl
out
cld
lret
jae
bound
fwait
mov
mov
lea
push
cmp
sbb
adc
xor
add
mov
xor
outsl
and
popa
ja
lds
pop
adc
push
mulb
mov
sahf
pop
pop
mov
dec
and
out
aaa
ret
jno
lcall
add
mov
aaa
push
cld
push
push
cltd
fs
mov
push
sbb
mulb
push
stos
inc
jl
dec
xor
test
iret
fnstenv
cmp
ror
pop
xor
add
cmp
cmp
arpl
mov
sbb
addr16
pushf
out
rcrl
das
stos
idivl
outsl
or
push
or
dec
or
arpl
or
xchg
add
cmp
xchg
and
adc
lcall
and
data16
jle
ret
cmc
cwtl
in
mov
pop
pop
jp
shll
dec
fstps
insl
rcrb
sbb
js
out
js
mov
popf
lds
push
aaa
adc
and
rorb
sbb
sahf
dec
test
je
cwtl
ret
adc
inc
sbb
jns
aas
inc
inc
pop
or
mov
scas
ret
pop
dec
inc
mov
and
or
rcl
cwtl
lock
movsb
fdivs
les
mov
push
sub
fldenv
inc
sub
cmpsl
mov
enter
cmpsl
xor
or
mov
adc
cmc
adcb
lcall
jne
push
icebp
in
mov
jns
loope
inc
test
add
loop
push
loope
in
cli
lret
hlt
xchg
ds
jp
mov
addr16
fcomps
cmp
loopne
cltd
loopne
dec
pop
sub
mov
xor
dec
jne
adc
test
in
push
enter
lret
push
mov
push
jnp
lods
popa
mov
cmp
add
and
mov
movsb
jg
lret
aas
dec
mov
movsl
fnstsw
xor
test
jae
loopne
ds
loopne
pop
sahf
daa
mov
fnstcw
mov
shlb
inc
mov
push
and
push
dec
or
mov
push
jl
push
jae
neg
jo
cld
mov
sbb
or
push
pop
loopne
pop
add
jae
jbe
iret
push
push
dec
mov
sbb
xor
push
adc
fisubs
mov
cmp
int
push
pop
adc
cld
test
sub
in
addr16
scas
mov
mov
xor
mov
jb
sub
xor
mov
lea
out
cwtl
jl
jl
sub
dec
scas
stos
aaa
push
mov
add
push
icebp
jae
sar
in
dec
or
shll
push
fistps
sbb
jle
pop
inc
bound
mov
and
icebp
scas
mov
cmpl
pop
mov
ss
fcomi
insb
mov
inc
or
or
adcl
xlat
jb
cmpsl
decl
in
pop
das
ljmp
cld
adc
mov
and
negl
fcom
add
sub
mov
out
movsl
mov
jp
neg
and
into
repz
push
pop
out
and
inc
xchg
adc
and
divps
xchg
sub
mov
js
cmp
cmp
mov
and
push
push
subl
jecxz
add
movsb
jns
cmp
mov
pushf
das
lcall
cmp
push
out
sub
push
inc
out
in
inc
out
loope
inc
cmp
mov
sbbb
scas
cwtl
insl
inc
mov
test
outsl
rcrb
pop
loop
fstpt
sub
push
xlat
xchg
xor
push
cld
scas
cs
ja
inc
shll
push
push
push
fildll
push
ficoml
xor
loop
sbb
bound
xchg
in
es
or
jb
ret
pop
sbb
fcomi
xor
clc
sbbl
js
jg
and
int
jns
bound
sbb
jns
jo
sbb
mov
das
mov
fldt
ds
push
jnp
ret
jl
xchg
jmp
rorb
fbstp
push
movsl
cmp
adc
in
sbb
loopne
inc
cmp
stos
mov
pop
shr
pop
jp
xchg
pushf
bound
mov
mov
out
push
sbb
notl
shrb
lret
loop,pt
mov
movsl
or
push
pop
xchg
xor
pop
mov
xchg
mov
sbb
mov
push
xor
jns
push
sub
mov
cltd
inc
inc
jg
push
aad
adc
jb
dec
das
jae
add
shrb
push
in
mov
jne
in
or
push
repnz
add
movsb
sbb
cli
sub
adc
or
and
sub
adc
scas
xlat
cmp
stc
out
push
int3
dec
pop
movsb
inc
lahf
bound
jp
pusha
ss
pop
icebp
pop
and
mov
cmp
sbb
clc
int3
add
stos
pop
xchg
popa
rclb
into
sub
jg
add
lret
sbb
xchg
push
std
in
lods
rep
add
lods
xchg
lahf
mov
push
cmp
inc
cmp
push
test
jecxz
add
icebp
or
repz
fldenv
sbb
xlat
nopl
std
xchg
xor
xorl
mov
adc
ds
sarl
mov
fnstsw
push
xchg
cmp
adc
or
sti
pop
mov
adc
sbb
sbb
imul
and
pop
adcl
jae
negb
js
pop
pop
mov
sahf
int3
xor
imul
mov
mov
js
loopne
sub
xchg
insl
in
and
push
in
fstpl
in
rorb
test
std
xchg
std
adc
icebp
mov
movsb
mov
xchg
lret
mov
pop
push
sbb
enter
mov
pushf
and
notb
testb
xlat
sbb
fisubl
daa
sub
cmc
scas
into
add
and
xchg
gs
add
jae
shll
mov
xchg
inc
hlt
iret
outsb
dec
icebp
clc
jbe
and
mov
fdivs
cmp
push
xchg
lret
mov
pop
notb
fadds
sub
nop
lret
mov
adc
or
or
std
addr16
sbbb
push
pop
inc
or
push
enter
mov
jns
inc
or
mov
aad
or
push
mov
mov
add
jmp
add
push
inc
push
outsb
inc
imul
adcb
mov
or
dec
in
jecxz
cmp
mov
xlat
imul
xor
lods
jne
mov
imul
pop
inc
and
xchg
adc
sar
and
pop
scas
push
repnz
ja
out
imul
sti
pop
pushl
mov
rorl
and
aas
mov
loope
fsubs
jno
testb
sbb
dec
xor
jne
jo
dec
cltd
hlt
es
mov
ljmp
xor
cmp
sub
stc
or
fnstsw
dec
adc
out
mov
adc
cli
out
push
cltd
jno
or
xchg
mov
lods
jecxz
xor
pop
mov
std
jb
sub
lahf
sahf
addr16
jnp
jg
fnstsw
sbb
pop
lahf
sub
sub
sarl
jp
xor
cld
mov
jne,pn
icebp
jb
repnz
shlb
xchg
iret
pop
jo
push
out
inc
sub
pop
cmp
ss
adc
sbb
mov
push
pop
dec
mov
sbbl
outsb
outsl
cmp
push
jp
movsl
mov
loopne
roll
sub
cld
stos
loope
fs
push
sub
mov
pop
test
sbb
and
sti
jg
add
stos
popl
sub
cmp
mov
icebp
cmp
and
fstl
xchg
mov
sbb
cs
movsb
outsb
in
push
test
push
ret
push
xchg
cltd
mov
fadd
inc
or
arpl
lods
repz
xchg
jns
enter
pop
bound
in
jb
mov
pop
shrl
rclb
push
sub
sti
enter
mov
sbb
popf
cmp
lcall
ss
lret
xchg
or
out
lea
insl
cmp
stc
lods
movsb
or
cld
pop
pop
pop
xor
mov
fmul
xchg
add
mov
aad
mov
or
xlat
push
jl
outsl
dec
sti
cmp
inc
fwait
add
and
xchg
mov
rolb
sbb
mov
push
out
loope
sbb
jle
add
cmp
sbbb
sbb
fwait
enter
es
iret
pop
adc
and
xor
dec
testb
xor
mov
pop
cmp
jns
shl
fldl
lods
cmp
adc
jecxz
fadds
mov
icebp
xor
ljmp
sbb
push
cmpsl
imul
pop
push
xor
fucomp
add
xchg
aad
popa
leave
dec
jo
and
pop
andl
dec
insl
xor
out
xor
push
into
xor
ror
sub
test
mov
in
test
push
movsl
mov
jmp
bound
sbb
fs
movsb
push
sub
xlat
stos
daa
inc
mov
jecxz
ret
pop
cmp
push
leave
push
ds
mov
popf
or
test
xor
jnp
dec
add
push
or
mov
mov
adc
js
adc
push
std
imul
push
scas
or
arpl
push
mov
fdivs
jp
repz
xchg
adc
imul
fwait
inc
mov
mov
ficoml
or
mov
jge
pop
stos
nop
cmc
imul
mov
int
cltd
mov
mov
xor
popa
rcll
add
loop
jo
in
call
pop
outsl
mov
mul
jg
loopne
push
call
mov
divb
push
adc
mov
jo
addl
gs
test
add
add
sub
add
and
push
sbb
inc
in
subb
jl
dec
mov
movsb
sbb
daa
lea
xor
test
shll
inc
push
xchg
mov
ja
xor
cmp
dec
xchg
cmp
imul
pop
jo
push
dec
jne
shll
lock
nop
xchg
cmpsl
aad
pop
iret
jbe
push
jns
cmp
loop
mov
sbb
lret
sahf
icebp
xchg
push
jbe
add
dec
daa
aaa
mov
cmp
or
icebp
movsl
jnp
les
jmp
rolb
je
push
jmp
movsl
push
mov
or
cmp
mov
lret
mov
sub
xor
imul
test
clc
cld
sahf
or
lock
adc
pop
sub
push
fcmovnbe
mov
cltd
aad
jge
int3
in
stc
les
popf
in
test
xchg
push
adc
push
lret
inc
fsubrl
not
rcl
pop
clc
xor
cmp
cmp
fs
movsl
add
stos
jge
test
jnp
movl
lahf
loop
roll
inc
ud0
mov
mov
mov
and
xor
push
lds
inc
fyl2xp1
mov
lds
sarb
mov
mov
orb
loope
bound
cmp
push
mov
fidivrs
adc
or
sbb
push
test
pop
mov
out
jne
mov
and
ss
pop
icebp
dec
push
imul
loop
push
mov
jbe
mov
nop
pop
pop
or
push
cli
je
imulb
pop
pop
xchg
into
jno
ror
dec
lcall
pop
fisubrs
bound
pushf
in
iret
insb
sbb
push
xchg
std
clc
outsl
aad
movsl
push
xlat
xchg
lods
adc
xchg
mov
xchg
jmp
dec
inc
jo
outsl
xchg
sahf
or
add
addr16
add
call
push
push
in
mov
sbb
addr16
outsb
pop
cmpsl
pop
xor
aad
adc
scas
lss
mov
and
dec
ror
mov
jb
ds
push
cmp
mov
push
insb
sbb
shrl
inc
mov
test
xchg
mov
pop
movsb
aaa
in
mov
repz
test
aam
rcrb
mov
cmpl
add
clc
lock
jl
bound
repz
rcl
pop
or
xor
xchg
jmp
outsb
xchg
rcrb
xlat
mov
leave
stos
adc
sbb
stos
sub
cmp
fstps
xor
mov
and
nop
mov
ljmp
mov
lock
sbb
xchg
in
test
jno
sahf
mov
rcll
subl
lods
jp
setge
sbb
mov
gs
sbb
dec
or
mov
cli
mov
movsb
stos
xor
pop
xchg
jle
imul
inc
sbb
adc
or
fcompl
aas
add
int3
in
mov
mov
inc
mov
test
sub
add
inc
addl
pop
cmc
insl
cmp
aam
xchg
test
daa
or
push
aad
xlat
pop
movsb
stos
jbe
or
xor
into
and
pusha
sbb
jg
out
addr16
aad
scas
into
int3
loopne
mov
dec
push
pop
pop
dec
ljmp
nop
cs
push
leave
stos
mov
fisubl
lds
test
aad
ficomps
sahf
ficompl
iret
mov
ret
shl
sti
xchg
xor
jne
out
mov
sub
incb
pusha
and
inc
push
mov
xchg
lahf
jb
adc
lcall
lcall
and
adc
aam
testl
daa
cmp
aas
int3
push
in
dec
stc
sti
into
faddl
js
filds
push
lret
mov
test
sahf
inc
cmp
xchg
mov
sub
cmp
lret
out
or
pop
add
addb
pop
or
faddl
xor
fucomp
arpl
cld
loopne
fisubl
mov
push
data16
xchg
movsl
mov
pushf
xorl
das
cmp
inc
lds
decb
xor
push
pop
xor
pop
lods
inc
les
dec
push
iret
or
mov
push
in
cmp
mov
and
jno
mov
scas
clc
or
mov
out
or
cld
mov
aas
cmpsl
ljmp
movsb
xor
inc
cmp
out
push
jl
cs
inc
sbb
jge
jmp
out
test
aas
or
stos
aas
sub
iret
sub
pushf
jno
inc
test
loopne
and
inc
aad
popa
mov
and
push
xchg
mov
push
mov
idivl
mov
sbb
jmp
push
in
xor
sbb
push
mov
adc
div
movsb
jmp
addr16
subl
fs
pop
jbe
mov
aam
add
imul
push
icebp
inc
push
adc
mov
sti
mov
adc
sbb
xchg
mov
mov
add
mov
aam
push
mov
and
ret
sbb
test
and
xor
mov
or
aad
jge
inc
pop
mov
popf
addl
ja
mov
ret
cs
pop
bound
push
int3
insl
or
sbbl
xor
lret
mov
inc
fwait
push
mov
pop
xchg
dec
out
imulb
sbb
or
sti
ss
fistl
lret
mov
inc
fwait
push
mov
pop
xchg
dec
out
imulb
sbb
or
sti
ss
fistl
lret
mov
inc
fwait
push
mov
pop
xchg
dec
out
imulb
sbb
or
sti
aaa
jmp
fistl
lret
mov
inc
fwait
push
mov
pop
xchg
cmp
mov
aam
in
hlt
mov
xchg
rolb
mov
js
es
push
jb
and
data16
inc
cmc
mov
cmpsb
repnz
rolb
adc
mov
es
nop
push
and
xor
push
adc
mov
cmpsb
ficoml
stos
out
test
bound
jns
cs
cmp
xchg
mov
mov
jecxz
pop
imul
mov
fistpll
jbe
fstpl
cs
add
dec
arpl
pop
int3
stos
inc
fnstcw
jbe
scas
out
push
lahf
pop
outsl
mov
stos
mov
adc
nop
and
lea
frstor
data16
aad
xor
loop
and
cmpsl
out
mov
sbb
inc
xchg
push
out
jbe
cwtl
inc
pop
sti
inc
add
or
or
jle
outsl
xchg
mov
lea
jmp
xor
push
ljmp
xchg
pop
idivl
cs
fidivrs
jne
out
push
adc
jbe
xor
and
lds
adc
jnp
push
pop
push
dec
push
cmp
data16
das
xchg
mov
out
xchg
mov
xchg
fisttps
push
dec
jb
xor
jb
xor
ja
loop
bnd
cmpsl
repz
out
mov
jb
pop
inc
daa
arpl
inc
addr16
adc
mov
shr
in
jecxz
fdivs
bound
jb
inc
push
push
push
and
data16
inc
loop
repnz
ret
xchg
xchg
bound
jb
inc
push
push
push
and
data16
inc
loop
xor
fwait
jnp
inc
lea
lret
filds
mov
sahf
test
in
in
mov
adc
cmpsl
movsb
aad
into
jb
ja
test
pop
mov
outsl
lods
mov
add
cmp
mov
add
int
jg
dec
push
push
pop
daa
adc
sbb
mov
mov
push
sub
jo
dec
gs
insl
or
hlt
push
and
and
sarl
lcall
cmc
call
pusha
push
inc
lcall
inc
mov
cmp
cmp
lods
push
movsb
mov
mov
lret
fsub
push
and
adc
out
push
pop
sub
rcll
push
dec
push
orl
jo
fstps
out
adc
call
imul
adc
fcom
into
addb
js
push
leave
popf
out
jmp
sbb
dec
lds
push
lret
xor
orl
scas
das
jecxz
imul
jne
pushf
shl
into
rcrl
jmp
mov
sbb
jg
jl
mov
in
fwait
insl
mov
or
pop
mov
orb
fisttpll
loop
lea
popa
mov
mov
dec
or
ds
cmp
or
outsb
and
cwtl
inc
scas
mov
inc
pop
lods
int
jge
mov
stos
in
insb
sub
rcll
imul
dec
arpl
dec
lock
call
inc
push
outsl
pushf
jns
push
ja
and
out
std
dec
std
aaa
mov
nop
xchg
mov
mov
test
dec
js
mov
xor
fistps
and
cmc
lret
in
sbb
popa
jge
cmp
ss
daa
sbb
push
out
push
push
cs
jno
inc
lahf
adcl
cmc
sbb
out
pop
lcall
push
sahf
leave
insb
mov
dec
sub
add
push
sahf
icebp
shll
xchg
and
pop
bound
les
mov
inc
fwait
pop
stos
mov
add
int3
or
test
dec
xchg
mov
push
rorb
pop
xchg
inc
sbb
add
cmp
xchg
push
push
sub
mov
sbb
lds
pusha
bnd
add
cmc
cmp
mov
mov
mov
mov
loopne
jecxz
iret
jae
mov
xchg
push
xbegin
push
rorb
jb
xchg
xor
aaa
out
push
nop
and
daa
rcrb
cmp
mov
push
pop
mov
add
iret
mov
mov
mov
sub
or
into
fs
lret
loope
add
mov
lcall
push
lret
int3
cmp
jg
fisubrl
inc
or
leave
shl
pop
out
clc
sbb
arpl
fwait
cmp
cmpsb
cmpsb
out
mov
inc
push
test
jmp
adc
loopne
mov
jge
sti
sub
xor
mov
sub
push
jb
sbb
mov
and
out
sahf
jmp
dec
adcb
or
or
repnz
jmp
insb
ss
in
inc
jmp
mov
cli
inc
lods
scas
mov
adc
ja
ror
xor
ficompl
mov
cmp
xchg
adcl
mov
in
jbe
mov
mov
xchg
xchg
lock
sub
lock
jp
rcl
add
cwtl
sub
dec
add
mov
push
xor
mov
mov
xchg
lcall
sahf
mov
mov
out
lea
xlat
test
pop
mov
cmp
shrb
push
push
jnp
test
add
lock
xchg
push
sbb
push
cld
sahf
shrb
iret
inc
pop
aam
jne
cmc
nop
fnstsw
jle
cld
jl
aas
mov
xchg
fstps
mov
fnstcw
mov
popf
add
add
push
inc
js
mov
aaa
loop
pushf
or
cmp
xchg
jmp
sub
loopne
dec
xchg
pop
shrb
lea
push
and
out
mov
add
icebp
sbb
movsb
dec
and
cmp
nop
xlat
xorl
lahf
call
adc
jmp
imul
xchg
inc
movsb
fcomps
clc
mov
mov
cmp
pushf
icebp
cmp
enter
mov
pop
xchg
pop
inc
lret
mov
mov
stos
inc
sbb
sub
cmp
dec
pushf
int3
test
jne
mov
xchg
loopne
outsw
adc
xchg
cmp
pop
xor
mov
ret
aad
push
cmp
rcll
add
lahf
in
sti
into
mov
jno
or
push
sub
mov
fildl
js
out
jne
or
daa
add
adc
rclb
lahf
fs
repz
mov
lock
mov
dec
cs
mov
imul
cmp
push
mov
jle
mov
gs
shl
in
xchg
popf
jae
call
sub
ljmp
imul
std
lret
xor
cli
sub
popa
adc
add
es
int3
stc
xor
cmpb
fabs
pop
mov
sbb
pop
cmp
jp
pusha
sub
mov
cmp
dec
iret
pop
fidivs
sbb
clc
insl
stos
out
or
out
and
icebp
dec
mov
ljmp
xlat
inc
pop
popa
dec
icebp
test
mov
fisttps
xor
rolb
pop
push
add
ljmp
xchg
add
je
cmc
and
cmp
notb
push
push
fcoml
cmp
scas
dec
leave
jle
fs
stos
push
adc
pusha
cmc
dec
pop
rorl
inc
sbb
cmpb
fldcw
pop
int
jl
sahf
xchg
fwait
lock
xor
test
mov
sub
loop
lahf
lret
dec
sbb
aas
and
xchg
addr16
out
jnp
mov
xlat
xchg
movsl
cmp
lret
add
push
ja
sbb
scas
test
addr16
cli
and
outsb
fs
lahf
mov
push
xchg
fimuls
sbb
popa
test
add
adc
fisubrl
inc
cmpsb
xchg
repnz
inc
cmc
imul
pop
dec
add
sub
enter
lret
mov
aam
fs
jp
xor
and
imul
pop
xchg
and
and
mov
aam
adc
test
push
cmc
mov
mov
xchg
fsubr
in
sbb
aad
cli
into
jmp
sbb
fbstp
daa
enter
stc
cwtl
stos
push
push
ljmp
cmc
lods
push
cmpsl
in
and
scas
cmp
dec
jnp
add
fldcw
pop
jmp
bound
aaa
mov
and
xchg
lock
sub
and
lods
mov
jecxz
dec
push
cmp
xchg
shr
adc
xor
xor
mov
mov
call
add
mov
jo
bound
jbe
jbe
in
push
call
xor
test
aaa
pop
test
shl
jge
xchg
inc
mov
xchg
mov
fcomip
insb
gs
outsl
sbb
sub
xchg
pinsrw
push
sbb
fcompl
pop
fdivr
or
inc
imull
xchg
or
mov
mov
mov
and
cmpsl
insb
cmp
out
in
cmpsb
mov
add
add
js
jne
cmp
pushf
stos
mov
rcrb
fsubl
stos
adc
pop
sahf
es
lahf
mov
js
pop
mov
pop
repz
cmp
inc
js
inc
daa
mov
out
lock
add
sub
mov
adc
test
inc
repnz
mov
insl
sti
pop
sub
xor
test
mov
cmp
and
pop
mov
mov
lahf
inc
jbe
clc
into
inc
ds
and
or
iret
outsl
push
or
sbb
clc
pusha
xor
jo
in
cmp
inc
dec
xchg
pop
nop
std
mov
or
push
mov
inc
sbb
pop
fs
push
dec
roll
or
movsl
cmc
out
rorl
or
sub
into
ja
loope
push
stc
fisubs
fidivrl
into
xor
out
mov
sub
leave
outsl
jne
xor
push
ret
popa
push
push
popa
les
clc
test
and
inc
push
fildl
sub
mov
imul
or
or
push
in
mov
dec
fldt
cmpsb
sarb
rcrb
mov
cmp
test
stos
jo
repnz
stc
and
adc
enter
jb
mov
aas
lds
push
adc
cmpsl
mov
xchg
and
cmpsl
or
in
cmp
add
loope
dec
and
adc
mov
or
xchg
add
cmp
xor
xchg
and
ror
insl
inc
adc
jbe
jb
aam
cwtl
icebp
cmc
pop
shrl
add
xchg
icebp
das
loope
hlt
push
jle
pop
fisubrs
sbb
mov
push
jns
and
lahf
xor
cmpsb
inc
xchg
loopne
push
ret
in
imul
out
mov
sbb
cmp
cmp
or
jbe
xchg
xchg
mov
inc
mov
sbb
fs
mov
mov
test
bnd
stos
mov
and
mov
andb
push
fistpl
cmp
jns
adc
sbbl
jecxz
pusha
cld
bound
cbtw
out
sub
sbb
sbb
in
sbb
repz
aad
push
pop
jge
in
inc
fsub
test
fldt
fs
mov
dec
test
ja
call
dec
ds
push
addb
in
ret
dec
mov
test
call
rcr
push
mov
rcr
pop
out
movsl
es
lret
push
pop
data16
ror
int3
inc
fistps
repnz
loope
adc
lds
or
insb
mov
inc
aaa
dec
ljmp
mov
mov
mov
cs
call
mov
in
popf
je
or
je
stc
or
movsl
orl
push
mov
loope
xchg
xor
jecxz
int3
loopne
adc
cmp
and
xchg
leave
add
popa
mov
sbb
call
dec
int
inc
shl
adc
scas
addr16
mov
shr
mov
test
xor
popa
leave
mov
xchg
pop
out
fisttps
adc
cmp
ds
addb
jecxz
bound
stos
jae
cltd
inc
and
dec
loop
xchg
inc
sbb
fs
dec
sti
xchg
add
mov
sbb
notl
outsl
ret
shl
es
pop
mov
inc
mov
out
repz
push
movsb
dec
in
nopl
mov
rclb
xchg
cmp
mov
mov
lcall
mov
fimull
cvttps2pi
inc
in
and
pushf
cwtl
movsb
fdivp
scas
loopne
test
mov
mov
mov
xlat
out
lds
cmp
push
inc
pop
inc
sub
mov
nop
and
inc
sub
lret
dec
xchg
sbb
repnz
fisttpll
jo
gs
push
in
test
aad
jmp
in
pop
cmpsb
mov
inc
jl
adc
inc
push
add
lret
adc
addb
push
loopne
sar
cmpsb
into
xlat
push
loopne
pop
or
ret
sbb
pop
cs
adc
lea
xchg
in
or
mov
xchg
inc
les
jmp
xchg
iret
mov
mov
mov
pop
sbb
lods
sub
pop
inc
dec
add
push
aad
xchg
divl
or
cmp
data16
mov
xchg
push
inc
sbb
or
xchg
or
cs
popf
rorl
pop
adcl
push
imul
movsb
in
enter
or
repnz
data16
lods
push
gs
adc
cmp
outsl
mov
or
dec
ret
into
xor
dec
stos
push
xchg
cltd
push
sub
popa
scas
insb
adc
mov
rcrl
inc
fidivrl
lcall
sub
popf
cmp
call
orb
enter
data16
inc
push
dec
repnz
and
or
out
outsl
inc
jecxz
iret
jbe
data16
or
decb
pop
js
dec
push
adc
shlb
mov
sahf
inc
jb
pop
out
negl
call
dec
push
jl
pop
pop
dec
and
mov
sahf
ds
inc
cmc
int
push
dec
or
jb
movsl
outsb
or
fwait
mov
jno
jno
lods
cmpsl
es
aaa
outsl
cld
arpl
push
mov
clc
ljmp
mov
mov
scas
xorb
ljmp
daa
jo
mull
ficompl
ss
dec
and
push
lock
cltd
add
movsl
push
call
cmovae
jp
fdivl
js
sub
insl
insb
pop
aas
pop
sub
scas
xchg
cmp
cs
cmp
ret
push
mov
andl
push
xchg
xchg
in
inc
xchg
cld
push
or
dec
jecxz
dec
mov
xchg
push
xchg
xor
xchg
pop
add
xchg
jp
inc
mov
push
clc
lods
cltd
iret
push
and
cmp
cli
add
pop
push
rcll
out
js
or
adc
inc
pop
outsl
mov
sbb
fwait
insl
push
pusha
imul
jg
xor
icebp
mov
clc
sub
xor
test
mov
cmpsl
jle
adc
pop
or
mov
xor
jmp
add
push
mov
popa
xchg
cmc
xchg
divl
push
add
jecxz
adc
sti
iret
xchg
lahf
xchg
int3
jmp
push
pop
leave
add
repz
add
or
adc
aas
cmp
jmp
xor
mov
lcall
push
pusha
jae
jmp
push
leave
rdmsr
incl
jge
sub
jo
out
jge
sub
nop
jno
xchg
dec
mov
xchg
test
test
cmp
push
leave
icebp
or
mov
push
scas
cmp
stos
ds
sub
das
jmp
jmp
jmp
leave
push
pop
jge
out
lods
xor
dec
sbb
or
mov
sbb
ja
or
sti
lahf
mov
lret
jnp
add
cwtl
popf
lods
int
mov
test
add
dec
das
imul
mov
mov
adc
or
arpl
adc
push
pop
ss
or
pop
bound
and
fwait
lock
push
xor
mov
pop
imul
arpl
cmp
iret
jmp
ja
sub
sbb
push
push
cmp
fwait
loopne
outsb
iret
xor
mov
push
clc
ret
mov
jae
add
aad
cmc
cwtl
fsubrp
dec
inc
cmc
xor
inc
mov
sub
sbb
andnps
push
pop
cwtl
jl
insl
cmpsb
ret
dec
rclb
stos
insb
jnp
mov
mov
cmp
sti
nop
and
mov
imul
mov
push
movsb
lahf
bound
cmp
jae
pushl
repnz
mov
mov
xor
adc
pop
cli
sarb
pop
negb
xor
in
mov
push
pop
add
stos
test
cmp
imul
js
xchg
push
push
sbb
mov
push
aad
jbe
sbb
mov
sub
push
jg
dec
clc
and
jo
aaa
mov
stc
lahf
xchg
hlt
in
xor
mov
mov
aam
pop
pop
lcall
mov
int3
lcall
and
out
cmc
add
les
scas
cs
xor
pop
cmp
call
mov
xor
sbb
icebp
jne
lds
lret
dec
cld
mov
lock
mov
in
xor
or
add
push
push
and
xchg
fnsave
mov
shll
in
shll
cmp
lods
jmp
shrl
mov
test
fwait
repz
cltd
lea
das
jmp
decb
cwtl
dec
mov
scas
xchg
int
sbb
repz
jo
xor
mov
cmp
lea
xor
and
call
jbe
testl
push
js
sar
loope
aas
and
mov
mov
out
push
xchg
stos
mov
xor
mov
xchg
xchg
mov
subb
faddl
or
dec
sbb
mov
sbb
cli
les
add
enter
hlt
hlt
push
in
sbb
push
xchg
add
pusha
inc
leave
call
inc
int3
and
fdivrs
js
add
mov
pop
pop
mov
mov
jg
fbld
mov
cmp
pushf
repnz
xor
and
and
push
rcll
addl
loop
cmpl
inc
jp
roll
mov
sub
mov
add
mov
rcrl
mov
mov
aad
sbb
add
ss
clc
aam
xchg
scas
bound
mov
imul
fildl
in
inc
aad
lods
xor
sbb
out
jg
pusha
xchg
stos
pop
inc
mov
mov
test
test
loop
and
sti
jmp
roll
fmuls
pusha
dec
out
roll
push
push
add
lds
ds
jecxz
push
fldl
and
mov
ljmp
out
jge
ret
pop
sarb
test
mov
add
loopne
mov
add
sbb
rcrb
xor
mov
jnp
mov
dec
sbb
fcmovu
xchg
shlb
enter
xchg
rorl
out
shll
icebp
push
fidivs
fiadds
and
and
pushl
mov
ja
jnp
push
and
cmpsb
mov
daa
les
lea
into
dec
sbb
into
adc
mov
push
lcall
pop
shlb
adc
fistpll
inc
jmp
mov
xchg
lret
pop
sbb
in
outsb
lahf
or
adc
push
mov
mov
push
fisubl
sti
cmp
outsb
in
xchg
popf
push
jg
mov
lds
fimull
fcomp
xchg
fldl
nop
outsl
out
arpl
pusha
mov
xchg
mov
rcll
scas
int3
sub
add
iret
jne
dec
jnp
jecxz
sub
gs
push
stos
dec
cmp
cwtl
out
aas
push
repnz
inc
lret
sub
lret
and
data16
ss
dec
inc
jnp
ss
pop
push
push
adc
out
call
mov
and
scas
xchg
adc
and
in
sbb
cmp
ss
cmp
leave
cmpsb
xchg
fisubs
out
lds
fstpt
leave
xlat
xchg
mov
add
js
in
out
movsl
lea
xor
imul
testl
cld
xchg
pop
out
lods
push
mov
jp
push
pushf
test
jae
lahf
sub
icebp
mov
daa
int3
xchg
xchg
sbb
lea
out
mov
scas
shlb
dec
out
and
sbb
insl
gs
jmp
pushf
addr16
lret
imul
inc
lods
mov
popa
insl
cld
imul
push
jno
push
in
pop
popa
aas
out
loop
je
in
ret
xchg
dec
mov
inc
mov
or
push
add
std
xor
dec
or
addb
out
push
xchg
cmpsl
cs
cmc
push
shll
jecxz
pusha
subps
int3
sub
loope
loopne
jle
icebp
xor
icebp
xchg
mov
pop
and
and
cmpsl
jo
das
pop
mov
inc
shrl
fisttpll
mov
imul
sbb
pop
lea
xor
int3
dec
imul
fistl
aaa
scas
jle
mov
jl
mov
frstor
add
jns
cmp
ds
mov
mov
adc
rcrb
dec
andb
xchg
push
push
sti
xchg
ds
push
pop
xchg
lds
mov
sub
data16
ret
sarl
repz
repz
pop
mov
mov
mov
jne
adc
pop
movsb
aaa
es
xor
cmpsb
ret
cmp
add
and
call
pushf
popa
pop
xchg
scas
je
or
xor
clc
add
mov
pop
mov
mov
rorb
cmp
adcb
pop
dec
jle
xchg
inc
xor
mov
mov
aam
aas
push
scas
pop
rolb
fsubrl
push
or
or
xchg
jae
pop
inc
popf
insb
cmp
inc
fucomi
mov
movsb
rcrb
mov
jle
push
xchg
les
inc
jmp
rolb
adc
bound
jb
inc
push
push
push
and
data16
inc
loop
repnz
ret
xchg
xchg
bound
jb
inc
push
push
push
and
data16
inc
loop
repnz
ret
xchg
xchg
bound
jb
inc
push
push
push
and
data16
inc
mov
cmpsb
hlt
xchg
rolb
add
adc
popf
lea
mov
mov
push
nop
push
add
cmp
pop
shlb
xchg
add
jo
push
inc
es
mov
data16
inc
rclb
mov
mov
xchg
cwtl
add
pop
pusha
adc
inc
aas
and
mov
jg
outsb
fcompl
push
fdivrs
dec
out
jae
daa
cltd
or
mov
into
push
in
aad
jbe
xchg
xchg
sbb
xor
psrld
inc
out
mov
in
push
adc
leave
mov
lret
dec
icebp
jbe
ret
nop
ret
andb
lahf
jo
js
adc
push
sub
fnstenv
push
scas
movsl
mov
xchg
dec
icebp
mov
sbb
nop
push
daa
jo
mov
xorb
cltd
lock
mov
iret
mov
mov
imul
dec
mov
mov
add
or
cmpsb
shlb
data16
and
popa
cmp
mov
inc
sub
arpl
xor
dec
sti
out
sbb
push
out
mov
push
push
adc
mov
data16
or
mov
add
cwtl
fcoml
cs
loop
mov
adc
mov
fisubl
fs
adc
loope
icebp
movsw
or
add
jbe
jne
addr16
popf
sub
xor
out
sarb
xchg
jbe
inc
rclb
cmpsb
xor
add
jo
pusha
push
inc
es
mov
data16
inc
rclb
cmpsb
xor
add
jo
pusha
push
inc
es
ja
xor
or
ret
inc
mov
dec
push
mov
mov
mov
in
sbb
das
xchg
lret
mov
outsl
cmp
sbb
jae
mov
pop
inc
jecxz
pushf
cmpsb
in
and
ret
js
xor
jp
mov
rclb
lods
in
loopne
ja
and
shr
pop
cmp
inc
push
or
add
mov
outsl
mov
out
xor
cmp
mov
add
ds
lods
sub
cwtl
int
xchg
div
out
hlt
lret
sub
adc
fwait
or
mov
xor
mov
inc
mov
les
adc
dec
jge
xor
das
mov
mov
stc
sbb
out
sbb
dec
insb
dec
insb
mov
int3
jle
mov
push
test
add
xchg
lods
or
cli
in
lock
mov
mov
or
fisttps
mov
xor
lret
xchg
mov
sbb
popa
mov
dec
xor
mov
sub
mov
xor
pop
lahf
nop
and
mov
pop
test
inc
popa
mov
clc
push
roll
sub
mov
mov
orb
inc
call
inc
dec
and
cmp
pop
xchg
xlat
das
aad
test
cwtl
shrl
rcr
sub
or
movsl
add
divl
xor
push
loopne
out
out
in
jo
jbe
or
add
adc
and
sub
xchg
xchg
ds
clc
test
movsb
loop
idivl
sahf
addb
or
pop
data16
push
jo
inc
loopne
repz
clc
push
stos
imul
mov
pop
jl
push
in
movsl
jecxz
scas
in
dec
cmp
cmpxchg
loopne
sbb
dec
and
jb
cmc
test
mov
rclb
adc
cmp
sbb
add
call
push
mov
pushl
jno
mov
push
jns
cmp
ja
frstor
mov
jmp
xor
fwait
je
enter
iret
in
and
and
cmpsl
push
add
int3
insl
sbb
aas
xor
push
outsb
push
mov
fmull
ret
movsb
arpl
mov
loopne
pop
xchg
mov
je
mov
push
adc
jmp
icebp
test
or
popf
js
jmp
inc
lods
add
addl
sbb
xor
test
push
mov
push
and
hlt
test
and
cmp
cmp
push
inc
lret
mov
lods
icebp
push
cmp
rcl
push
loope
fnstcw
adc
cmp
inc
fs
repnz
inc
es
mov
ljmp
inc
jnp
mov
icebp
lock
int3
movsb
jbe
cli
inc
flds
lea
xor
add
mov
mov
loopne
fmull
mov
cmp
pop
dec
xor
mov
push
jns
add
cli
dec
ret
rcll
mov
mov
and
rcll
jno,pn
lds
imul
mov
push
mov
ret
xor
push
arpl
call
fildll
cmp
sub
cmp
dec
mov
out
pop
inc
and
jo
test
mov
sub
pop
sub
mov
xchg
sbb
fsubs
pop
and
ja
lds
rol
mov
or
in
cmp
pop
mov
rcl
or
add
xacquire
sub
sub
shrb
pop
ret
and
in
mov
push
lods
pop
pushf
fisubrs
sub
or
sub
jo
cmp
ret
jo
call
push
pop
mov
cmp
ja
cmpsb
mov
cli
das
dec
inc
xor
cmp
xchg
and
iret
out
push
ret
in
cwtl
add
jno
sbb
dec
pop
test
dec
loopne
imul
test
xchg
roll
fldl
push
in
mov
fadds
xor
scas
xlat
movsl
in
dec
sti
xchg
mov
aas
jl
jns
cwtl
inc
iret
jmp
push
or
inc
aam
pop
adc
mov
jle
cs
xlat
pushf
stos
mov
jg
and
loop
std
fwait
xor
fldcw
gs
fsts
std
clc
shll
aam
test
fwait
xor
sub
sbb
cld
iret
andb
mov
cmp
pop
inc
sub
push
xor
add
sti
data16
xchg
mov
call
and
stc
jmp
and
fistps
mov
sbb
xchg
mov
addr16
icebp
xchg
xchg
std
mov
mov
leave
jecxz
bound
out
add
or
outsl
enter
ds
add
leave
and
xabort
pop
outsl
mov
shl
mov
cs
fistpll
xchg
mov
enter
jns
mov
mov
testb
ja
cmp
dec
gs
fiaddl
out
imul
rcrl
aad
jne
inc
pusha
cltd
popf
xchg
ds
jmp
sbb
das
nop
lods
mov
dec
mov
fldcw
mov
mov
or
jmp
out
inc
sub
stc
icebp
popa
xchg
mov
cmp
aas
clc
mov
sub
xor
out
mov
xor
cmc
mov
scas
test
cmp
push
dec
in
push
enter
rcrl
bound
movsb
push
jae
ja
mov
mov
push
fistl
adc
sti
loope
push
dec
daa
mov
hlt
xchg
dec
mov
sbb
and
loope
mov
xchg
js
xor
fwait
aad
repnz
push
mov
or
ret
mov
adc
push
xchg
xor
mov
mov
fucomi
inc
repz
rclb
cmpl
stos
ja
in
hlt
ja
xchg
or
adc
cmpsb
push
cmp
sarb
xor
in
xor
ja
xchg
mov
clc
jl
and
dec
daa
scas
in
and
stc
fisubl
ss
jmp
fwait
adc
or
sub
xor
add
imul
pop
adc
adc
stc
jmp
xchg
cmpsb
mov
push
jo
fdivrl
js
dec
mov
push
push
hlt
lret
aaa
int
les
or
mov
lret
mov
jp
xor
popa
pop
inc
fwait
iret
pause
lcall
jecxz
in
insb
pop
lea
xor
mov
push
lds
cmpsb
dec
and
stos
lcall
nop
fisttps
loope
in
les
adc
push
lahf
adc
les
sti
xor
rol
xlat
push
hlt
push
bound
mov
sbb
ds
mov
lods
movsl
int3
add
stos
int3
push
cmc
out
mov
insl
push
ret
jge
adc
dec
xchg
pop
into
jbe
dec
ja,pn
lahf
jp
shll
push
gs
out
and
cwtl
dec
sahf
int3
rep
jp
aam
std
imul
mov
and
dec
xor
dec
jno
adc
loope
cmp
sbb
pop
movsl
xor
jno
sub
jp
sub
sub
jbe
adc
cmp
xchg
cmp
inc
push
and
not
sub
gs
ret
test
icebp
ror
adc
popf
rolb
xor
and
iret
add
test
sarb
popf
cli
divl
dec
mov
adc
cmp
cmpsl
cmpsb
jl
mov
lock
push
lcall
inc
std
pop
add
test
popf
xchg
mov
dec
pop
push
popa
cmp
aaa
je
mov
xor
fisttps
loope
cmp
cmp
mov
push
jp
imul
cmc
pop
hlt
out
mov
xorl
inc
sbb
push
into
mov
fsts
scas
dec
movsl
xlat
shll
mov
sbb
xchg
dec
jns
or
mov
jl
addl
dec
pop
out
mov
and
ret
and
xor
adc
mov
xchg
cltd
dec
jb
inc
mov
cli
fsubrp
pop
push
das
int
je
ds
loope
das
push
bound
mov
or
test
test
leave
pop
jno
push
add
mov
mov
xor
xchg
lea
push
pop
es
pop
dec
xor
jne
or
mov
mov
jae
faddp
or
or
jo
je
push
inc
dec
inc
mov
pop
filds
mov
jns
mov
sar
pushf
xor
call
lret
jns
push
and
mov
jg
in
pop
xlat
xchg
stos
mov
addr16
xor
jb
and
sahf
cmp
cwtl
push
mov
mov
and
lds
mov
dec
sbb
ficompl
negl
inc
mov
mov
jl
in
or
stc
icebp
or
loope
stc
sub
sub
cld
xchg
mov
notl
shrb
sub
jmp
test
enter
test
fidivl
dec
das
xchg
sbb
orb
sub
lds
sbb
push
cmpsb
pop
push
mov
psubsb
gs
push
mov
dec
lods
push
pop
dec
in
loop
shl
sbb
fsubl
mov
lods
aaa
dec
inc
cmp
sub
fdivrl
jp
dec
leave
lods
and
push
sbb
jae
ja
inc
sub
adc
pop
jmp
xor
pop
popa
xor
jl
jns
add
lds
xor
inc
cwtl
daa
mov
std
adc
xchg
mov
push
mov
mov
adc
pop
mov
add
mov
sbb
xor
rcrl
fs
loop
aam
std
push
imul
xor
ljmp
out
std
gs
arpl
pop
mov
dec
scas
sub
cmc
notl
push
or
les
shll
push
fcomps
pop
mov
jb
push
sarl
cmp
addr16
sub
cmp
into
data16
sub
arpl
mov
lods
adc
lcall
mov
ds
mov
jno
sbb
ljmp
pop
xchg
mov
subb
cmp
shll
out
repnz
mov
mov
data16
or
fsubl
popa
enter
push
je
in
lock
ret
pop
aad
sbb
mov
xchg
outsl
ljmp
mov
das
dec
mov
push
mov
mov
aas
or
nop
les
pop
xchg
insb
pop
push
xchg
adc
dec
movl
imul
sub
pop
inc
sub
out
push
rolb
fadd
cmpsl
sub
add
pop
call
mov
test
sbb
and
popa
pop
test
ljmp
outsl
inc
inc
dec
ficompl
dec
mov
rcrb
dec
enter
sbb
inc
popa
mov
and
inc
xchg
test
pop
mov
iret
mov
mov
jmp
inc
dec
inc
imul
add
aaa
scas
jno
and
insb
xchg
adc
or
or
scas
mov
insl
fldenv
sbb
xlat
inc
cli
sti
lret
mov
and
stc
mov
adc
xlat
adc
in
icebp
xor
imul
jbe
or
xchg
or
mov
lods
inc
andl
dec
in
arpl
adc
inc
fs
sarl
dec
dec
fists
addr16
cmp
sahf
fnstsw
dec
sub
mov
mov
mov
xchg
sti
aaa
mov
in
std
add
xor
int3
sbb
out
inc
lea
inc
cmp
mov
mov
dec
jo
inc
add
or
adc
call
cmpsl
repnz
sbb
jmp
xchg
stos
movsb
and
mov
xchg
loop
sbb
fisubl
xor
aas
sub
and
sub
or
adc
mov
add
sub
jp
mov
mov
lods
mov
fisttpl
jns
cmp
adcb
mov
adc
pop
ds
sbb
mov
mov
fiaddl
ljmp
test
dec
gs
sub
pop
mov
push
lret
cmp
xchg
inc
mov
and
xchg
push
out
mov
popf
push
ss
ljmp
dec
dec
mov
push
pop
pop
jmp
jl
insb
lcall
inc
sbb
sarb
cltd
jmp
inc
in
mov
add
loope
adc
or
xchg
inc
ret
mov
daa
push
popf
sub
popa
push
jge
xor
xlat
or
xchg
and
adc
jmp
jno
lret
shr
mov
in
cmpsb
jecxz
stc
mov
dec
and
cmp
lock
xchg
std
mov
jae
repz
out
fdiv
xor
call
sub
jmp
push
shll
enter
aad
push
mov
cs
fisubl
inc
sarl
movsl
aad
dec
cmp
adc
sahf
jp
jne
pop
in
leave
insl
pop
shrb
mov
in
sarb
push
adc
out
dec
cmp
data16
fldenv
int
fwait
pop
and
cwtl
rol
cmpsb
or
mov
mov
cmc
arpl
and
icebp
push
rclb
out
clc
and
xchg
popa
js
inc
jne
mov
inc
jmp
in
inc
aad
in
andl
push
xor
movaps
xlat
cmpsl
frstor
decl
xchg
add
loopne
fs
jle
sbb
rcrb
or
lahf
xchg
push
cmp
fsubrl
pop
loop
and
mov
xchg
mov
or
sahf
xor
pop
dec
into
jl
sub
mov
flds
pop
div
fisttpll
inc
mov
pop
gs
std
cmp
fcomps
loopne
xlat
push
lds
subb
imul
lock
xor
add
icebp
lcall
or
xchg
jnp
mov
or
call
and
loopne
call
mov
xchg
fucomi
movsb
xchg
mov
pop
imul
out
int
xchg
pop
lret
into
jmp
test
and
cmp
jns
push
dec
cmp
jns
or
push
sbb
push
or
lahf
insb
pushf
int
sbb
gs
pushf
fucomi
dec
pop
jmp
out
bnd
xor
inc
cmp
scas
aas
test
stos
int3
jge
pop
outsb
xchg
or
jns
imul
pop
mov
push
dec
mov
push
lcall
cmp
cmp
mov
scas
jnp
dec
leave
xor
int
insb
ret
jmp
leave
imul
insl
cmp
das
popf
add
pop
jae
xor
aas
dec
imul
mov
add
popa
jo
insl
pop
insl
andps
ja
test
dec
into
sbb
call
mov
lods
pop
jne
mov
add
cmp
clc
js
mov
inc
into
fwait
sbb
lock
rcrl
jns
mov
and
mov
mov
dec
lods
loope
cwtl
fstps
fs
cmp
cmpl
mov
xchg
mov
out
fwait
call
enter
jo
xchg
xchg
mov
mov
push
cmp
mov
jp
lret
movsl
pop
pop
xor
sbb
cmp
jge
xor
test
jmp
cmc
fistpl
shlb
addb
xchg
lock
fdivrl
divb
dec
inc
sbb
dec
xor
shlb
repnz
out
jg
add
scas
lret
jp
loopne
test
std
ja
jp
push
mov
imul
pop
lea
mov
ljmp
test
mov
repz
cmpl
mov
test
sbb
es
mov
out
mov
cmp
rcrl
jnp
out
push
or
insl
pushf
fisubs
push
push
cmp
xor
push
xor
mov
mov
pop
sub
dec
mov
inc
sub
aad
fs
sub
outsb
jmp
rcl
fs
jae
dec
mov
inc
outsb
call
addr16
imul
xor
into
call
adc
aas
fisubs
mov
fs
addr16
es
das
dec
add
test
ds
mov
stos
cmpsl
add
mov
mov
mov
jae
sbb
repnz
stos
dec
jmp
scas
adc
leave
cli
fucomi
in
inc
mov
mov
enter
push
ss
adc
pusha
mov
sti
clc
jae
sbb
mull
and
lcall
jns
bound
pop
mov
shrb
mov
pop
in
push
push
cs
leave
fisubrs
fildl
rclb
fisubrl
hlt
mov
ret
mov
int
adc
cmp
inc
adc
scas
fdivr
lock
test
das
push
icebp
jb
push
cmp
adc
xchg
repnz
jecxz
xor
cmp
mov
inc
inc
xchg
and
mov
xchg
jmp
movsl
pop
xchg
sbb
daa
notb
stc
lods
mov
cmp
daa
test
scas
scas
dec
ficomps
sub
xchg
mov
xlat
aas
call
add
xchg
lahf
cmp
popa
adc
lahf
xchg
sub
push
outsb
outsl
inc
les
mov
rcl
int3
xchg
roll
popf
push
shrl
dec
fnsave
scas
push
mov
cwtl
das
jp
loope
icebp
sub
adc
mov
xor
jbe
scas
pushf
or
push
jne
ret
std
mov
mov
xchg
into
outsl
mov
and
xor
add
jns
or
mov
xchg
gs
mov
lds
outsl
pop
call
xchg
fwait
outsl
adc
mov
ret
xchg
sub
jae
fwait
cmp
adc
inc
dec
dec
jnp
jl
push
mull
lret
leave
pop
pop
enter
inc
pop
xchg
xchg
push
loop
loope
xor
hlt
inc
outsl
mov
outsb
cltd
jl
mov
adc
push
mov
movsb
push
xchg
xchg
movsl
jmp
fisubrs
cmpl
cwtl
cmp
aaa
pop
stos
sub
jo
insl
push
sti
in
jae
ret
inc
mov
popf
mov
cltd
push
fisubrs
jle
lcall
xor
movsb
scas
lcall
jl
ljmp
push
jecxz
jae
jecxz
leave
or
and
aad
jo
imul
xor
jp
push
xor
jg
xchg
fsubl
adc
lcall
in
dec
mov
mov
cmp
scas
xchg
add
lahf
dec
popa
mov
mov
fldcw
jo
mov
xlat
leave
lret
mov
adc
sbb
jmp
mov
add
fbstp
and
mov
sub
xchg
outsb
sub
fidivl
and
lret
sub
int
mov
es
sahf
inc
add
scas
push
adc
sub
es
ds
xor
xchg
clc
es
fsubs
mov
rol
bound
imul
ud0
mov
xor
cli
jae
mov
into
push
xor
cmp
xor
test
cmp
notb
xchg
insb
es
xchg
xchg
pop
xor
daa
stos
out
jmp
in
jmp
push
shlb
inc
test
or
pop
pop
loopne,pt
or
jg
aam
negb
fcoms
pop
inc
dec
sub
in
shll
insl
and
mov
mov
cmp
and
lods
mov
fsubrs
jb
and
sub
xchg
xchg
dec
adc
jae
arpl
fidivrs
icebp
cs
test
sti
mov
mov
cmpsb
adc
ss
push
fdivl
mov
xor
sub
xor
pop
fsubr
icebp
push
push
mov
fsubl
xchg
leave
pushf
cs
cmp
or
push
or
popa
rcll
out
add
call
mov
out
jb
xor
pushf
cmp
out
loope
inc
mov
stos
pop
nop
pop
mov
aas
mov
dec
repz
pop
jle
and
ss
sub
dec
insl
or
sub
gs
daa
cld
jne
out
dec
mov
shlb
ds
and
dec
popa
jmp
and
jecxz
inc
mov
ds
xchg
xor
pushf
sahf
sahf
out
jge
dec
call
or
sbb
sbb
adc
stc
mov
cli
sahf
pop
in
add
jle
and
push
mov
ror
adc
loopne
scas
sbb
fsubs
push
cmc
sti
push
insb
insl
cmc
js
nop
aaa
sub
dec
mov
sbb
jbe
xlat
sub
insb
pushf
adc
aas
in
pop
lcall
fyl2xp1
mov
hlt
push
adc
jno
popa
clc
cwtl
adc
out
sbb
mov
data16
inc
rclb
cmpsb
xor
add
jo
pusha
push
inc
es
mov
data16
inc
rclb
cmpsb
xor
add
jo
pusha
push
inc
es
call
data16
inc
rclb
cmpsb
call
xchg
add
jo
pusha
jo
inc
es
mov
fs
push
rcrb
mov
xchg
ja
clc
jle
cmp
inc
or
cmp
sub
or
and
das
repnz
aas
pushf
jg
dec
mov
aas
mov
cld
pop
in
out
decl
cmp
sub
pop
mov
insb
aas
pushf
jg
popa
mov
pop
int3
paddb
in
xor
cmp
sub
pop
testl
adc
sub
lods
jle
insb
in
scas
sbb
js
pop
test
and
cli
lea
cmpb
aam
hlt
fstpt
dec
ja
and
imull
inc
mov
jo
fs
sub
mov
scas
inc
mov
xchg
adc
lret
pop
inc
daa
or
sti
jnp
in
das
pop
xorb
mov
cld
add
stos
jecxz
or
scas
pop
inc
pop
mov
sub
pop
inc
mov
pushf
sbb
loopne
push
add
xor
pop
rcll
cmp
lret
adc
scas
fldcw
lea
adc
mov
push
push
push
xor
inc
dec
or
xchg
stos
and
cmp
paddsb
sbb
or
cmp
sub
pop
sti
dec
jl
insb
popf
pushf
in
mov
fsubl
int3
paddb
popf
jno
fisttps
xor
or
push
lock
sarb
ret
push
mov
jle
mov
pop
ja
mov
jnp
cmp
adc
insb
push
fnstcw
loopne
ljmp
jp
pop
sbbb
sahf
pop
ljmp
insb
outsl
pushf
jg
dec
mov
aas
int3
paddb
in
out
sbb
or
cmp
sub
pop
mov
insb
outsl
pushf
jg
dec
mov
aas
int3
paddb
in
out
sbb
sbb
cmp
cltd
rcrb
sub
adc
sub
repnz
sahf
pusha
or
sbb
jne
or
mov
outsl
xor
insl
popa
mov
jge
push
sub
xchg
pop
push
dec
es
sbb
arpl
aad
ljmp
daa
insl
mov
ljmp
pop
and
enter
pop
aaa
shrb
daa
movsl
int
in
lcall
push
stos
movsl
push
out
xor
inc
std
xor
push
xchg
jle
lds
push
cmp
jns
mov
lahf
insl
pop
xchg
ja
inc
jns
pop
js
fwait
repz
mov
fwait
nop
aas
sbb
rolb
jg
iret
jecxz
leave
pushf
pushf
fstps
stos
add
pop
iret
loope
adc
jno
imul
or
cmpsb
lcall
mov
jmp
jb
mov
icebp
xchg
addr16
cmpsb
xchg
sub
push
add
call
dec
inc
ss
out
jne
or
xchg
adc
xor
shl
addr16
ret
lock
sbb
imul
cmpsl
jge
roll
lock
adc
mov
mov
ljmp
sbbb
aaa
add
rorb
mov
jnp
mov
out
cmp
mov
cmp
sub
mov
dec
movsb
dec
cmpsl
je
and
xchg
aad
inc
dec
rorb
adc
adc
fldt
sbb
mov
dec
sub
sbb
sub
jmp
sbb
dec
mov
xchg
aam
dec
insl
cwtl
adc
mov
out
sub
shl
mov
jbe
addr16
and
movsb
and
mov
fdivrs
les
jmp
xchg
pop
xor
jns
cli
pop
fs
mov
sub
je
loop
mov
or
and
pop
and
daa
sbb
ds
mov
or
cltd
pushf
enter
std
dec
addr16
mov
xchg
call
pop
xor
inc
leave
xchg
xor
iret
mov
inc
inc
mov
test
dec
cs
push
lret
fdivs
shll
jge
lea
inc
sbb
xchg
test
or
ret
jbe
lcall
add
dec
cld
push
lret
and
or
and
inc
push
stos
xor
mov
pop
ljmp
adc
cmp
dec
ds
jecxz
inc
xchg
loop
call
data16
jb
scas
jl
dec
add
cmc
shrl
dec
adc
mov
popf
xchg
test
pop
or
push
in
arpl
add
fdivrp
shlb
or
icebp
mov
mov
ficoml
stos
xchg
out
and
pop
sub
cmp
cmp
dec
sbb
mov
out
int
imul
mov
aam
or
mov
adc
mov
inc
mov
and
inc
into
rorl
lret
sub
jns
icebp
popl
lcall
mov
fwait
add
les
in
xor
mov
jo
stc
jne
pop
fs
sub
xor
movsb
sarb
cwtl
xor
popf
clc
popf
inc
push
mov
mov
and
loopne,pt
movsl
xchg
mov
nop
es
push
push
mov
dec
pop
pop
mov
cmpsb
stos
cld
orb
outsl
hlt
fwait
jecxz
cmp
jmp
sahf
sub
inc
mov
jp
lods
add
cmp
in
add
xor
mov
hlt
cwtl
mov
and
sub
jne
cmp
sub
popf
cmp
push
mov
xor
rorl
sbb
shll
es
jecxz
cli
and
sahf
std
dec
push
mov
mov
lea
into
mov
out
dec
shr
mov
shrb
stc
inc
adc
test
adc
adc
insl
faddp
adcl
cmc
mov
punpcklbw
imul
xor
hlt
or
or
movl
cmpl
lahf
sbb
int3
ds
aam
lretw
mov
push
adc
mov
cmpsl
int3
int
jno
lea
mov
xchg
jmp
adcl
stos
xchg
data16
xchg
lods
inc
daa
push
test
push
jnp
mov
sahf
cmp
divl
mov
mov
cmpsl
jl
sti
dec
push
push
pop
mov
push
adc
or
sti
ror
test
out
int3
cmp
jp
out
adc
lods
pushf
jl
push
in
bound
inc
inc
cmpsb
mov
pushf
mov
aas
pop
in
fsubrl
mov
sub
cmp
push
outsb
mov
pop
or
outsl
cld
push
mov
std
and
div
test
fdivl
out
aam
jns
jo
test
xchg
shll
lret
fwait
sbb
adc
mov
addl
cld
xchg
push
mov
mov
imul
aas
sbbb
outsl
aam
and
stos
sahf
sub
adc
je
test
push
cmp
push
mov
fadds
aad
dec
sub
fwait
mov
dec
mov
outsl
push
cld
in
test
sub
push
mov
stos
push
xlat
mov
jnp
lods
lcall
or
inc
mov
add
dec
cwtl
mov
add
lret
mov
push
jmp
or
adcl
test
outsl
arpl
stos
ja
push
int
imul
pop
das
into
xor
pop
mov
push
int3
es
push
xchg
ds
js
in
mov
dec
sub
dec
cmp
or
cmp
mov
lock
pop
pop
xchg
in
test
push
shl
fwait
in
aaa
test
das
ffree
lock
mov
pop
jo
call
mov
xchg
negb
mov
push
in
ss
xchg
jb
lock
xchg
cli
cmp
inc
cmc
jecxz
repnz
inc
loope
les
push
push
stos
pop
or
bound
popa
aaa
add
sub
stos
cmp
hlt
dec
stos
cmp
sub
aad
in
pop
inc
repnz
or
inc
cmp
jb
int
popa
push
test
pop
scas
insl
push
xor
imul
outsb
lock
out
mov
inc
and
inc
xchg
dec
iret
imul
mov
fs
xchg
out
push
stc
fdivrl
lods
jb
and
inc
mov
mov
pop
add
jnp
inc
mov
or
arpl
mov
mov
push
jbe
in
or
dec
inc
stc
out
lock
lret
xchg
sbb
jmp
dec
mov
mov
and
pop
test
out
sbb
mov
outsb
add
cmp
pop
int3
mov
es
pop
adc
arpl
outsb
or
push
leave
xor
and
mov
int
pop
dec
and
fadds
mov
iret
loopne
les
les
addr16
and
dec
jge
pusha
aad
pop
mov
sti
cld
leave
sub
push
shll
pop
ret
lds
lds
push
dec
or
adc
in
out
inc
fdivs
lret
and
scas
xor
mov
das
fwait
mov
add
mov
fbld
cld
daa
lea
rorl
cwtl
fidivrl
dec
int
mov
add
addr16
into
stos
sub
scas
push
fbstp
sub
or
pusha
adc
inc
shl
imul
adc
jne
stos
cmc
push
mov
inc
xchg
lcall
xor
pop
enter
adc
mov
imul
xchg
gs
adc
jmp
gs
sub
mov
ret
xchg
push
sbb
xor
push
jbe
call
cwtl
mov
je
xchg
mov
push
ja
mov
test
xlat
push
in
cmc
mov
shr
shll
js
inc
clc
enterw
fwait
out
and
gs
jae
aas
mov
xor
mov
test
adc
dec
fwait
push
xchg
dec
and
jbe
adc
or
sbb
add
scas
mov
scas
dec
xchg
xchg
hlt
out
gs
clc
leave
lahf
addl
mov
loopne
stos
pop
push
mov
fiadds
push
and
imul
repnz
jnp
cmp
decl
xchg
add
ret
pop
add
hlt
in
insl
inc
adc
nop
and
inc
push
push
cli
inc
sub
rolb
push
add
inc
lea
out
mov
mov
fwait
lcall
add
and
fnstenv
sbb
out
test
ret
test
in
or
sbbb
mov
ret
sub
and
data16
sub
cmp
xlat
xchg
adc
xchg
mov
cmpsl
sub
push
mov
jl
adc
aas
sarl
out
sbb
mov
je
sbb
pop
lods
int
dec
nop
data16
jbe
mov
mov
divl
je
testb
and
xchg
out
stos
repnz
mov
dec
int
xchg
push
arpl
dec
shrb
inc
sub
inc
mov
ss
sbb
and
lea
aaa
cmp
push
push
mov
jge
and
adcb
out
xchg
sub
xor
mov
lret
mov
push
mov
xchg
icebp
scas
lds
shlb
mov
nop
addr16
decl
dec
xor
ljmp
push
mov
push
xchg
bound
sti
xor
aas
imul
hlt
into
cld
sub
pop
xor
mov
mov
outsb
mov
sbb
test
fmul
addr16
loop
jnp
pop
sub
jne
dec
fdivrs
fmull
sti
in
popf
xchg
aas
push
lret
fucomip
push
xor
jb
mov
sbb
lret
xor
in
out
mov
jge
shll
cs
sahf
fs
mov
aaa
aam
adc
lahf
repnz
stc
or
add
test
jmp
sub
push
mov
jl
lea
hlt
xlat
add
rolb
int3
mov
divb
push
dec
mov
daa
sub
je
pop
xor
jnp
xor
fldcw
jp
loopne
je
fs
xchg
pop
fidivrs
fnstenv
and
cmp
fstps
add
insl
mov
stos
shlb
xchg
lods
in
test
jecxz
fdivrl
mov
rcrl
sti
nop
repz
lock
std
lds
adc
loop
aas
cmc
inc
inc
xchg
mov
bound
adc
pop
aas
mov
or
sub
sub
push
rcl
aad
punpckhdq
outsb
jl
push
scas
inc
dec
jae
fistps
pop
shrb
in
sbb
popl
dec
push
je
xchg
icebp
sbb
mov
mov
jnp
xlat
imul
stos
pop
fisubrl
je
lds
mov
push
addr16
int
into
shlb
fnstcw
inc
insl
sahf
adcb
ja
les
xchg
cmpsb
sub
xor
test
dec
cmpb
cli
loope
addr16
pop
mov
add
lock
sbb
cli
insb
xchg
test
std
aas
mov
lds
jecxz
mov
mov
ret
out
out
push
out
xorb
cli
cli
sbb
sub
movb
push
push
xor
cld
out
xlat
push
shlb
sar
dec
jbe
leave
sub
or
mov
sub
andb
lds
or
pop
int
mov
int
outsl
or
cmp
stos
xor
adc
outsl
aaa
sbb
cmpsb
nop
ds
adc
pop
insb
sub
jecxz
inc
or
mov
jmp
sti
add
fisttpl
nop
mov
and
push
and
xchg
test
sub
hlt
stos
lods
clc
ljmp
insb
xchg
je
cli
inc
lods
scas
and
cmpsl
aaa
jmp
xchg
add
add
pop
cwtl
and
cs
push
or
fstps
mov
enter
adc
inc
jo
or
jnp
enter
push
pop
ficomps
ss
std
jne
mov
and
test
jbe
xchg
cvttps2pi
out
inc
jp
test
inc
stos
xchg
stos
xchg
mov
mov
mov
mov
inc
xchg
sub
adc
in
stos
leave
bound
mov
mov
das
dec
fstps
test
mov
sbb
mov
add
sub
daa
mov
inc
xchg
sahf
sbb
hlt
mov
in
flds
je
std
inc
mov
inc
mov
ss
test
ret
xchg
pusha
jb
xor
inc
mov
ds
xor
xlat
in
or
int
xchg
push
fimull
incl
pop
insb
sbb
lret
shll
mov
ljmp
mov
gs
flds
mov
inc
xlat
inc
gs
add
sbb
shrl
pop
jp
jb
hlt
cmp
outsl
adcb
mov
loope
das
xchg
fimuls
cmc
loopne
mov
cmp
dec
xchg
mov
lea
movsl
push
insl
cltd
inc
adc
hlt
mov
jne
fwait
aas
dec
adc
sahf
repnz
rcll
pop
adc
pop
fdivp
push
in
popf
inc
mov
adc
clc
push
sbb
divl
add
jbe
lret
and
in
add
push
ljmp
ljmp
xchg
outsb
sbb
leave
bound
sub
inc
dec
aam
popa
cmp
inc
xchg
sbb
lods
and
aaa
pop
out
aad
or
cmpsl
cmp
pusha
dec
jns
pop
sub
inc
sbb
mov
shl
xchg
xlat
mov
fwait
cwtl
pop
clc
jmp
in
es
xor
movsl
lret
dec
cltd
rcll
mov
pop
movsb
js
daa
movl
mov
inc
sbb
or
int
pop
cli
lret
cmp
and
scas
sbb
aam
mov
xor
icebp
push
fisubl
jns
enter
jne
outsb
dec
or
clc
movsb
scas
jp
or
je
into
or
aam
insl
adc
xor
cli
adc
rorl
add
dec
push
cmp
lret
jo
jmp
loop
lret
xchg
or
or
es
xlat
out
dec
mov
shr
sbb
call
fwait
xchg
mov
jl
mov
ret
and
jae
push
sbb
cmp
add
push
jae
mov
add
mov
repz
inc
imul
shlb
cmp
jo
ror
pop
div
mov
jbe
ret
mov
and
mov
mov
addr16
mov
mulb
ffree
test
pushaw
data16
out
mov
loope
jne
xchg
and
or
cmp
xchg
mov
imul
or
pop
std
inc
inc
adc
daa
int3
cmpsl
push
mov
stos
aas
hlt
adcl
ret
jae
insl
into
sbb
lcall
test
lret
mov
sub
movsb
movsl
out
stc
mov
xor
push
into
xchg
push
inc
xchg
jge
test
arpl
ds
pshufw
mov
loope
sbb
cmp
pop
jl
and
popa
jns
dec
sbb
cld
mov
push
pushf
ret
movb
aad
jns
subb
dec
xor
rcrb
mov
or
cld
sahf
leave
les
inc
shll
lods
push
adc
mov
sub
pushl
mov
add
pop
fwait
jno
push
and
or
mov
js
pop
icebp
xlat
in
cli
in
jl
iret
outsb
int
pop
or
mov
or
xchg
pop
sbb
adc
cmc
lea
jae
lret
pop
lods
into
out
insb
push
mov
rcll
and
out
in
jge
in
sahf
je
mov
pop
jae
lock
push
cmpsb
loop
push
jb
xchg
lret
adc
jno
ret
in
dec
popa
cmp
sarl
cmp
mov
or
sub
sbb
pop
aaa
pop
jnp
cmpsl
push
inc
adc
cmp
lods
decb
jmp
stc
pop
shl
xor
stc
scas
call
push
and
sahf
jb
aam
sbb
dec
ds
insb
cld
jg
cmp
sub
mov
jge
out
push
xor
push
xor
cmp
imul
sub
cmp
cmpl
push
push
sbb
or
xchg
jmp
inc
loop
popa
jnp
lea
and
sub
shll
jge
cltd
and
lods
cltd
dec
jl
push
xchg
sub
test
jns
sub
dec
add
aaa
pusha
mov
shl
and
xchg
aad
call
test
ljmp
stos
or
je
out
insl
scas
dec
inc
and
mov
mov
loop
out
incl
aam
mov
out
inc
fdivrs
das
fmul
and
imul
xchg
sarl
xchg
fst
in
fisubrl
out
xchg
mov
dec
adc
and
enter
pushf
push
outsb
jle
sub
fstpl
inc
push
enter
fcmovnbe
lea
jbe
ss
arpl
dec
push
fadds
dec
movsb
imull
adc
pop
cmpsl
xor
mov
pop
popa
pop
inc
arpl
sbbb
leave
inc
fstpl
xchg
mov
pushf
dec
or
dec
rol
xor
data16
xchg
xor
sahf
pop
add
jns
push
loopne
mov
popa
ljmp
out
inc
xchg
xor
in
les
mov
mov
xor
int
test
lock
mov
push
cmc
cmpsl
push
dec
mov
xchg
adc
cmp
and
and
and
or
jge
mov
mov
add
xchg
in
dec
mov
and
notb
inc
adc
xchg
fstpt
jp
lahf
imull
dec
in
dec
inc
jo
push
or
icebp
shlb
ja
or
sbb
sbb
mov
mov
xor
mov
test
int
pop
pop
pop
mov
sbb
sbb
inc
insl
mov
sub
dec
out
rolb
movsl
and
mov
push
sti
inc
stos
enter
fcompl
in
jp
test
lret
mov
aas
test
inc
mov
mov
testl
pop
cmpb
int3
jae
xchg
mov
fwait
and
out
pop
dec
aad
dec
loopne
js
cmpsl
push
xlat
add
movsb
sbb
jmp
xchg
sub
pop
filds
mov
dec
pop
sbb
loop
mov
mov
test
mov
xor
es
mov
rclb
and
add
outsb
in
push
jb
ljmp
ja
inc
sbb
insl
xor
and
imul
insb
add
and
ljmp
inc
je
fisubs
lods
aad
loopne
jmp
pushf
xchg
sbb
xchg
das
cmpsb
insl
les
clc
out
aad
negb
out
movsl
inc
jl
jb
scas
test
icebp
adc
and
pop
cmp
inc
pop
dec
loopne
test
sub
scas
and
dec
or
test
adc
ret
xchg
bound
or
mov
aad
fcoms
in
mov
and
mov
aad
fidivrl
stc
xchg
mov
mov
mov
stos
shlb
fstpt
imul
cmp
cwtl
mov
xchg
insl
jnp,pn
fisubs
loope
add
xor
mov
xchg
inc
adc
mov
pop
xchg
ret
push
push
cltd
inc
bound
std
inc
adc
add
pusha
push
mov
sub
rorl
push
mov
orb
xchg
jae
insl
xor
inc
aaa
lock
jecxz
stos
das
sbb
cmp
and
xorb
pop
out
cmc
cmp
dec
sbb
pop
dec
sub
test
test
push
and
and
in
pop
jle
push
out
inc
add
push
add
lea
mov
dec
inc
je
dec
lahf
in
aad
xchg
aaa
or
fcom
sbb
popf
dec
sbb
mov
add
push
lahf
pop
sbb
add
mov
and
out
jae
lea
scas
add
jmp
jg
adc
cltd
push
pop
mov
rorl
call
or
fstps
xchg
in
mov
jnp
xchg
loopne
xchg
aaa
mov
lahf
mov
lds
jmp
cmc
sahf
inc
cmpsb
or
inc
lahf
stos
push
lock
pop
or
push
push
fwait
cld
jo
shrb
mov
adc
stos
lcall
std
inc
nop
in
aam
inc
sbb
rorl
pop
cmp
mov
insb
outsl
pushf
jg
dec
mov
aas
int3
paddb
in
out
sbb
or
cmp
sub
pop
mov
insb
outsl
pushf
jg
dec
mov
aas
int3
paddb
in
out
sbb
or
cmp
sub
jge
insb
imul
das
frstor
int3
or
das
in
negl
or
cmp
sub
cld
pop
xchg
outsl
arpl
fistpl
mov
lock
adc
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
xor
and
adc
add
jne
inc
add
or
test
les
and
adc
add
je
fs
mov
movsb
test
xchg
in
aam
std
xor
and
adc
add
je
cmp
mov
icebp
nop
ljmp
jmp
push
gs
sbb
add
adc
inc
xorb
pop
mov
jge
xchg
mov
xor
xor
jle
mov
fs
jmp
xor
xchg
jp
leave
mov
mov
arpl
int3
cmp
popl
xchg
xchg
cmc
jnp
or
fsubrs
mov
cltd
mov
cltd
push
cli
jne
ficompl
les
pop
popa
push
or
jp
xchg
add
mov
pop
fildl
call
mov
dec
push
mov
imul
pop
mov
enter
mov
cmp
out
fcmovu
add
divb
jnp
in
mov
aam
cmp
xor
and
adc
add
je
fs
mov
movsb
xchg
xchg
lds
aam
subb
pop
adc
inc
push
jnp
push
xor
mov
testl
xor
pop
adc
insb
aaa
jo
rolb
pusha
push
roll
cld
xchg
cli
jb
mov
nop
sub
ja
jno
jl
inc
adc
inc
lds
test
aam
les
push
and
adc
add
je
fs
mov
movsb
in
cmc
test
aam
les
repz
jnp
ret
lret
out
add
mov
sbb
adc
jbe
pop
pop
push
adc
pop
or
lcall
sbb
push
adc
mov
scas
popa
movsl
stos
rcrl
sub
adc
pop
data16
loope
rcl
sub
cmp
dec
ds
sbb
push
jmp
outsb
aaa
mov
leave
cwtl
mov
adcb
push
xchg
mul
pushf
or
das
jmp
xor
pop
shr
jnp
mov
mov
leave
cmp
fstps
sbb
xor
xlat
test
dec
adc
jo
fcoms
mov
pop
mov
iret
fcmovnb
addb
mov
loopne
and
pop
add
dec
cmc
das
sub
ds
pusha
and
mov
cltd
mov
cmpsl
mov
mov
mov
fcomps
lcall
insb
sub
lds
pop
mov
es
dec
movsl
insb
sbb
jbe
int
mov
popa
push
loopne
jp
adc
addb
sti
dec
daa
clc
icebp
xchg
xchg
imul
ss
ljmp
mov
xchg
push
mov
jmp
sbb
mov
xchg
movsb
gs
or
dec
dec
dec
xchg
adc
sbb
jae
mov
cld
pop
push
mov
push
cld
loope
clc
mov
inc
fsubs
aaa
pusha
adc
add
roll
mov
xchg
pop
test
dec
jl
popf
and
cmovns
add
pop
loop
xchg
or
ret
int
pushl
sub
adc
mov
mov
in
dec
aaa
cmp
xor
add
add
inc
cmpsb
nop
and
dec
ds
icebp
xchg
push
jmp
and
fcmovu
dec
test
inc
rclb
jge
call
cmpsb
mov
inc
inc
ficompl
iret
js
arpl
mov
xchg
adc
jle
sbb
enter
mov
jl
mov
and
fs
in
loop
lcall
arpl
cmc
push
imul
jns
sub
push
popa
in
nop
dec
insb
or
mov
adc
call
rcll
adc
pop
enter
xchg
jne
jmp
cli
shll
xor
jg
es
sub
and
aad
sub
xor
lahf
test
pop
hlt
jns
mov
mov
fcomp
pop
xchg
stos
imul
dec
push
call
xor
xchg
aam
data16
shrl
xor
lret
jmp
test
jmp
and
cmp
sti
adc
stos
dec
and
fists
cli
inc
enter
add
stos
jnp
ljmp
jp
fdivs
mov
pop
push
je
hlt
stos
out
out
ret
push
add
dec
cmp
lea
sbb
cmp
fwait
ljmp
xchg
stos
ja
bound
xchg
aam
add
lahf
insb
jmp
lahf
sbbl
sbb
xor
sbb
aaa
sub
jno
dec
and
mov
mov
arpl
sbb
arpl
adc
scas
stc
push
cmpsb
pop
jge
loope
cmp
dec
xor
or
push
jmp
shlb
iret
push
fwait
jg
sarb
mov
mov
scas
jo
mov
push
push
sub
push
fcompl
mov
addr16
mov
stos
or
sub
lcall
movsb
inc
ret
and
lods
add
xor
xchg
pop
fiadds
leave
sub
aad
fcoms
bound
idivl
jbe
xorl
icebp
jns
dec
pop
or
mov
outsl
cmpsl
out
jg
mov
cs
aaa
mov
xchg
add
addb
mov
mov
mov
scas
mov
pop
adc
fisubs
pop
dec
push
in
sbb
inc
in
or
inc
bound
jecxz
mov
inc
pop
gs
sti
jne
scas
xchg
and
movsl
rcrb
or
jp
pop
sbb
jle
sub
jmp
test
sbb
mov
inc
push
inc
push
aad
pop
inc
adc
sbb
xchg
and
dec
jge
js
nop
and
mov
repnz
add
dec
pop
push
out
push
movsb
xor
or
xchg
pop
cwtl
sbb
sbbl
jmp
adcl
pop
inc
fisubrl
into
inc
out
pop
push
addb
xchg
pop
aas
xor
pop
xchg
push
inc
xchg
push
adc
test
fwait
mov
sub
in
push
dec
xlat
and
xchg
rcr
sub
cltd
nop
or
pop
mov
je
shll
push
add
loope
inc
mov
jne
popa
loopne
push
orb
or
loop
in
dec
inc
cmpsl
fldl
sbb
pop
adc
sahf
aas
jl
sarb
call
or
shll
ficoms
aam
test
insb
xor
dec
xchg
cld
adc
notl
aaa
push
test
fdivrs
filds
cwtl
mov
popf
push
scas
jmp
stc
push
lret
push
cmp
mov
pand
js
imul
movl
mov
and
std
xor
sbb
and
jne
push
adcl
out
add
mov
shll
popa
cmp
fwait
sbb
cmp
cmp
test
add
lods
nop
add
pop
xor
xor
xor
add
pop
mov
lods
mov
mov
bnd
mov
addr16
in
jle
ficoms
bound
push
in
and
jmp
push
xor
gs
inc
aam
daa
cld
cmp
add
rol
adc
jecxz
enter
xchg
or
xchg
adc
inc
in
js
dec
push
movd
movsl
bound
xchg
fisubrs
jecxz
jmp
push
mov
sti
mov
adc
fdivs
scas
add
adcb
ljmp
push
cltd
sbb
or
test
std
sbb
pop
sub
pop
jp
addl
enter
iret
test
insl
push
mov
fisttps
xor
data16
rorl
mov
xor
adc
adc
sub
fisubrs
dec
ljmp
js
imul
mov
inc
fmull
in
outsb
in
pop
cmp
fcoml
scas
and
imul
inc
ljmp
mov
jnp
test
or
xor
stos
xlat
sub
mov
xchg
lret
sbb
icebp
icebp
popf
sbb
aam
sub
aam
and
mov
or
xor
sarl
push
jg
jbe
xchg
mov
in
jmp
or
sub
hlt
call
lcall
sub
mov
test
push
add
jns
xchg
arpl
cmp
insb
mov
jns
sahf
sbb
cmp
out
sub
adcb
repz
xchg
fmull
in
cmp
or
mov
xchg
hlt
sti
arpl
jnp
or
adc
and
jo
sub
fildl
xchg
mov
arpl
decl
pop
pop
enter
pop
xor
popf
mov
inc
scas
incb
push
or
sbb
popa
cli
jl
cmp
ljmp
xchg
xor
js
sub
subb
push
xor
dec
pop
cli
ret
sub
cmp
cmp
cwtl
xor
movsb
mov
or
fwait
inc
push
loope
bound
cmpsl
iret
data16
lcall
movsl
sub
lahf
xchg
iret
cmpsl
push
ss
test
insl
xchg
out
push
iret
aaa
aas
mov
cmc
push
pop
test
rclb
jbe
fistpll
adc
popf
add
add
cmp
sub
pop
int
scas
out
scas
jge
xchg
lahf
daa
xor
ftst
mov
loope
push
sbb
dec
in
shll
xchg
dec
push
cmp
inc
andl
int
out
shr
jb
ret
pop
sbb
in
xchg
xchg
mov
sti
in
or
inc
into
mov
in
push
mov
test
pop
sbb
sub
mov
mov
cmc
pop
jmp
cwtl
lret
mov
out
jo
mov
ja
dec
push
int3
ret
and
clc
or
jnp
mov
cmpsl
push
rorb
or
das
adc
loopne
mov
mov
mov
or
cs
mov
adc
bound
inc
sahf
cmp
ret
xor
les
mov
fsubr
xor
sahf
movsl
jae
and
push
pop
data16
sub
out
movsb
xor
adcl
xor
loop
jmp
push
lahf
push
loop
inc
cltd
xchg
push
mov
mov
cmpl
mov
lret
inc
scas
jbe
xor
sti
pop
mov
push
add
mov
sbb
jns
inc
cs
fcoms
inc
ret
jne
push
rcr
xchg
xor
insl
ljmp
adc
fsubrp
mov
insl
iret
test
inc
mov
cmp
push
arpl
ja
lods
mov
add
push
std
cmpsl
call
daa
jbe
cld
cmc
pop
pop
mov
jb
adc
dec
fs
pushf
jb
adc
xchg
outsw
dec
repnz
add
xor
mov
es
in
out
mov
mov
xchg
mov
stos
sti
push
push
outsl
dec
out
aam
xchg
shrb
dec
sbbl
inc
sarl
pop
add
in
les
mov
xlat
xor
pop
call
sahf
divl
and
out
shl
repz
mov
or
push
or
fcomip
or
lcall
mov
push
add
divb
loope
das
dec
repz
mov
mov
movb
sub
jo
stc
aaa
push
xlat
sub
popf
mull
xchg
sub
cmpsl
out
xor
lds
sub
out
shll
inc
mov
or
dec
into
es
out
dec
inc
mov
cmpsl
push
mov
adc
in
out
jne
mov
sbb
leave
cmp
rorb
out
into
pushf
push
nop
scas
mov
pop
ljmp
fld
imull
and
sbb
adc
and
sahf
js
or
popa
push
xor
in
and
xchg
adc
jg
mov
movsb
cwtl
xchg
push
xor
outsb
ljmp
inc
je,pt
jge
rcll
mov
push
push
jp
shrl
mov
and
out
or
adc
lds
test
mov
cmp
dec
mov
xchg
sub
sti
adc
push
sbb
sub
lahf
pop
and
sbb
roll
mov
fsubrl
das
test
cmp
mov
xchg
and
add
xchg
lock
pop
cmpl
aaa
mov
xchg
add
cmp
std
out
lcall
cmpb
push
add
lret
pop
jmp
jge
or
sub
bound
inc
adcl
and
out
imul
in
dec
test
mov
pop
sub
dec
int3
push
cmp
add
cld
mov
jl
lahf
divb
sub
fadds
sbb
push
je
and
mov
lods
push
aad
daa
in
mov
rcl
nop
dec
adc
mov
loopne
cs
pop
add
aad
mov
insb
ss
xor
sarb
jl
aas
lods
shlb
xchg
fdivrl
iret
mov
xchg
jb
jge
mov
das
ljmp
repz
add
mov
mov
imul
iret
fstps
mov
test
mov
pushf
xchg
ret
loope
cltd
adc
daa
stos
or
jb
sub
mov
mov
jl
out
cs
ret
xchg
cmp
pop
gs
dec
fs
dec
popf
testb
add
outsb
lret
bound
lcall
xchg
push
ss
jge
xor
push
fcoms
pop
in
out
mov
push
js
orl
ja
shlb
lock
jnp
mov
fildll
push
lret
mov
adc
cmp
jmp
sti
xchg
lret
stos
pop
into
in
mov
adc
dec
xchg
mov
add
xor
mov
jl
mov
out
test
rcrl
sbb
or
imul
sbb
cmp
fsin
outsl
push
xor
mov
popf
movsl
push
sbb
xchg
outsl
ss
push
lret
popf
sub
cld
push
push
cli
jp
mov
scas
cwtl
out
stc
adc
sahf
or
push
pushf
outsb
cld
push
or
jno
ror
jmp
fcmovu
add
inc
aaa
inc
inc
test
or
fdivrs
pop
mov
push
pop
jge
jnp
push
cld
inc
scas
cmp
fstp
inc
and
mov
or
test
filds
and
xchg
or
ljmp
cmpsl
mov
add
scas
add
jecxz
pushf
fadds
dec
sarb
or
push
cltd
mov
repnz
mov
je
jmp
imul
xor
jbe
mov
lods
sbb
leave
push
mov
stos
jmp
imul
test
ljmp
ficomps
sub
icebp
mov
mov
mov
ficompl
mov
mov
icebp
push
pop
jns
push
mov
repz
xor
scas
mov
jmp
fisttpl
and
or
cwtl
test
cmp
icebp
scas
xchg
or
ds
aad
ret
push
mov
lock
mov
jle
mov
mov
mov
les
mov
xlat
std
xchg
shll
aaa
sub
cs
clc
mov
jne
mov
xor
out
cmp
cmp
nop
lock
subl
jo
mov
jnp
arpl
ljmp
pop
flds
orl
sahf
das
or
aaa
jmp
ret
fsubl
push
pop
xor
mov
jnp
jbe
dec
xor
lock
fdiv
call
adc
sbb
xchg
nop
jge
sub
push
sub
and
inc
lea
mov
jo,pn
imul
inc
in
in
dec
add
adc
pop
xchg
mov
loopne
imul
sbb
xchg
imul
xchg
sbb
jne
add
mov
xchg
add
pop
ret
aad
fstpl
sbb
in
xchg
jle
test
pop
lock
mov
pusha
or
xchg
pop
mov
mov
cmpsl
ret
mov
cmp
mov
xchg
fsubrs
sub
mov
fdivr
cld
jl
in
popa
lea
mov
rcll
mov
roll
fsubr
inc
subl
test
fcomp
mov
lret
rcrl
push
mov
sub
cmp
or
fidivrl
clc
icebp
mov
aaa
les
mov
clc
sbb
mov
lret
push
ret
fimull
arpl
fdivp
sbb
insb
xchg
adc
fsts
xchg
test
outsl
dec
clc
xchg
fdivrs
xchg
jno
test
repz
lret
sahf
rcrl
pop
add
mov
cmp
adc
mov
dec
sub
out
pop
mov
imul
enter
loopne
jno
mov
add
xor
mov
mov
test
movsb
mov
mov
pop
sub
mov
sbb
sub
mov
loope
in
repz
test
pop
cs
adc
jno
jno
fcos
repnz
ret
push
stc
jecxz
fisubrs
ds
adc
jmp
jmp
add
jmp
xor
jp
test
fidivl
ss
ja
jecxz
lds
inc
inc
mov
or
leave
pop
inc
stc
out
pop
add
cltd
pop
push
mov
roll
ret
iret
fs
sbb
mov
or
ja
add
dec
add
adc
xor
jge
xchg
sbb
sbb
jl
cmp
push
adc
inc
mov
push
ret
insb
xchg
mov
jge
jp
rorl
mov
dec
push
imul
mov
jns
sahf
stc
sti
mov
scas
sub
xor
lods
sub
fmull
cwtl
jno
sti
das
popf
inc
xorl
cwtl
mov
idiv
sub
push
jns
andb
out
shlb
mov
test
cmc
repnz
push
xchg
ret
jmp
sbb
fwait
xor
dec
jne
xchg
scas
insb
jge
adc
int3
arpl
mov
out
lret
negl
push
inc
jbe
pop
enter
ret
fdivrl
loope
jae
icebp
divb
push
adc
arpl
sub
inc
in
imul
xor
adc
std
lods
loop
bswap
pop
pop
aad
test
in
cmp
and
in
mov
fistpl
icebp
dec
js
pushf
jne
fcmove
add
pushf
ret
mov
inc
cmc
pop
or
int
cld
push
lcall
shl
or
movsb
sahf
imul
sub
fidivrl
and
adc
mov
cli
jbe
inc
insl
aaa
xorb
pop
incl
mov
movsl
mov
jp
adc
cs
clc
dec
testl
pop
add
gs
jmp
iret
adc
clc
pop
or
cs
jg
or
cli
movsl
popa
mov
out
dec
pop
aas
jne
sub
orl
cmp
mov
jae
pop
cmp
xor
imul
call
jle
xor
testl
jg
loope
or
shrl
aaa
cmp
cmp
outsl
inc
test
idiv
xchg
imul
idivl
outsb
jg
test
test
scas
cmpsl
test
movl
and
mov
sarl
jg
lods
add
andl
sbb
inc
xorb
pop
dec
test
inc
mov
adc
nop
adc
pop
mov
pop
in
repnz
test
out
test
fwait
mov
add
pop
cmp
sbb
xchg
fisubs
rcrl
clc
xchg
loopne
or
or
nopl
and
leave
scas
loope
popf
sub
pop
jne
ljmp
repnz
lods
mov
jg
sub
add
jb
jge
pop
ds
mov
jne
call
jbe
mov
insb
js
rorb
lea
movsl
push
push
mov
lods
push
fcmovnbe
out
into
xchg
ds
in
cli
sbb
or
inc
or
fwait
xchg
xor
sbb
fs
dec
xchg
ds
roll
sub
xor
jmp
mov
sbb
xchg
push
mov
movb
inc
mov
pop
lea
sub
mov
in
or
sub
jge
insl
stos
inc
jae
lea
jp
sbb
mov
test
movsb
xor
in
sub
sbb
arpl
mov
mov
pushf
push
sahf
into
mov
faddp
xor
dec
sahf
ficomps
xor
and
adc
aaa
push
icebp
shlb
push
and
sbb
out
ret
ljmp
and
imul
into
pop
inc
das
mov
iret
inc
mov
fnstsw
ss
insb
push
push
cld
stos
pop
jne
jo
add
jecxz
dec
mov
sub
push
lock
xchg
sub
mov
sbb
pop
sbb
sbb
inc
dec
aam
out
pop
mov
pop
sub
fwait
pop
inc
lahf
nop
cmp
push
push
sti
push
sbb
fcoml
push
dec
stc
fstpt
int3
decl
dec
fildll
and
inc
rcl
clc
mov
cwtl
jp
repz
pop
movsl
ja
fbstp
or
mov
pusha
inc
int
or
fisubs
mov
loopne
imul
xchg
dec
stc
push
movb
fldpi
cmp
lds
shl
scas
fadds
sti
data16
add
dec
pop
inc
push
xchg
xchg
push
call
or
mov
pop
out
lods
mov
jne
mov
inc
dec
xlat
xor
lock
xchg
lret
aad
lods
sbbl
sbb
inc
mov
xchg
loopne
popa
gs
xor
mov
imul
shrb
fsubs
xor
xor
and
xor
xchg
es
leave
loop
or
cmp
insb
dec
inc
mov
mov
adc
add
je
fs
mov
movsb
in
cmc
test
aam
les
push
and
adc
add
je
fs
mov
movsb
in
cmc
test
aam
les
gs
adc
add
je
fs
mov
movsb
adc
hlt
test
movsl
aam
les
or
adc
add
je
fs
mov
push
dec
xchg
cmc
repz
sbb
dec
cmp
or
adc
lods
popf
mov
mov
call
fstp
sub
or
push
lods
movsb
mov
cwtl
in
lcall
sub
adc
pusha
dec
push
pop
inc
lods
test
fwait
icebp
mov
test
mov
fs
jg
mov
cmpsb
mov
jb
cmc
inc
mov
fwait
data16
jae
aaa
popf
mov
clc
add
mov
stos
cmpsl
pop
push
xchg
inc
add
sbb
mov
cmpsb
int3
cmp
and
mov
push
lds
xchg
inc
xor
insb
push
xor
add
jb
mull
dec
je
test
sbb
jnp
pushf
dec
insl
push
xor
inc
add
adc
int
shrb
and
or
mov
jo
and
call
rcl
add
xchg
xchg
loop
fnsave
rcl
jne
fsubs
sar
int
mov
jae
cmp
sbb
jge
dec
dec
pop
inc
lods
test
mov
in
lock
loopne
rcr
fldcw
push
dec
push
push
sbb
and
cmp
out
mov
std
mov
mov
jnp
ja
push
pop
push
fdivrl
lcall
insb
sbb
insl
pop
jge
dec
dec
pop
pop
lods
test
mov
in
call
fstp
sub
or
js
dec
pop
pop
lods
test
mov
in
call
fstp
sub
cmp
mov
shl
hlt
xchg
les
lret
nop
iret
iret
sbb
test
mov
xchg
hlt
arpl
adc
add
icebp
aaa
xchg
decb
nop
rclb
sub
push
add
mov
mov
add
mov
int
jmp
data16
sbb
shld
jg
xor
loopne
mov
jnp
fisubrs
movhps
pop
mov
mov
push
stos
js
jae
push
add
mov
aad
add
sub
adc
nop
and
inc
out
mov
enter
ljmp
cmp
inc
nop
pop
adc
bound
test
shlb
cltd
fst
stos
mov
scas
xchg
fldt
fisubrs
pop
sub
dec
cs
mov
xchg
jmp
stos
stc
inc
sbb
inc
adc
loop
jae
adc
fistpll
aad
xchg
lahf
sub
lea
sahf
push
pop
push
jge
cmp
hlt
inc
cmp
mov
xor
push
jle
shll
xorb
andb
push
cmpsb
imul
mov
xor
push
push
mov
test
jns
cmp
outsl
jbe
mov
cmp
cwtl
jo
out
xor
xor
shl
jecxz
inc
lods
into
fs
mov
jne
jno
pusha
repnz
rclb
das
cmp
push
add
dec
add
imul
out
insl
loopne
inc
cmpsb
pop
jne
sbb
mov
adc
lds
and
pop
cmp
sahf
lds
scas
pop
leave
inc
push
add
aas
and
sti
add
out
jne
push
mov
mov
mov
adc
add
fsubr
pop
jno
jl
pop
pop
mov
int3
inc
daa
movsb
or
pop
rcrl
lods
rol
lahf
out
jo
repz
cmp
xchg
lahf
cmp
cmp
scas
fstpl
stc
fnstsw
es
push
in
jo
dec
mov
je
ror
shr
cmp
dec
scas
mov
sahf
mull
lods
push
lcall
enter
jbe
adc
push
gs
cmp
mov
cmpsl
xchg
shlb
arpl
cmp
aad
inc
dec
push
ss
xlat
inc
xchg
inc
jp
int3
stc
and
mov
aas
push
push
out
xchg
mov
inc
jmp
das
imul
inc
xlat
aas
sbb
scas
les
dec
ret
pushf
mov
cli
jecxz
rorb
lods
push
inc
mov
sbb
jnp
xchg
or
and
popa
mov
or
test
pusha
mov
add
cmpsb
xchg
lret
dec
mov
sub
xchg
lods
hlt
jbe
push
mov
xor
cs
add
mov
jmp
mov
out
gs
fs
xchg
inc
pop
or
test
lds
outsb
ds
loopne
mov
lods
mov
adc
stos
test
cmp
mov
pop
repz
pop
pop
and
out
lret
aam
cld
pushf
jp
and
adc
daa
jnp
es
and
add
test
mov
xchg
insb
push
or
mov
les
add
push
leave
jle
push
dec
lods
jle
test
xchg
mov
xchg
xor
pop
mov
cs
push
and
nop
inc
push
push
sub
xchg
shll
mov
inc
loopne
mov
shll
outsb
sti
dec
sub
movsl
test
and
dec
mov
xlat
add
sbb
in
negl
inc
add
inc
call
or
pop
shl
pop
dec
cld
sti
ret
test
push
int3
pop
dec
sar
mov
mov
pop
mov
add
mov
popa
mov
push
mov
sub
negb
pop
rol
mov
enter
pushf
or
xchg
pop
jns
addr16
out
sub
push
sub
lahf
push
add
icebp
sti
mov
mov
sub
je
fnstsw
pop
cs
leave
or
sahf
gs
xchg
je
jmp
fdivrl
pushf
inc
xor
cld
pushf
mov
pop
shrb
mov
jmp
std
mov
ljmp
addr16
sub
iret
sbb
mov
xorl
outsl
inc
or
push
hlt
lds
cli
cmp
outsb
or
call
outsl
inc
mov
addr16
push
aad
inc
sub
adc
cmc
insl
jl
test
ds
aaa
sub
call
insl
jl
dec
lock
dec
adc
in
xchg
cmp
xor
sahf
or
imul
shlb
ds
or
and
int
dec
add
je
inc
push
pop
mov
or
mov
jne
jnp
jbe
pop
mov
mov
int3
inc
pop
and
imul
cli
mov
mov
mov
in
sub
xchg
arpl
bound
cmp
add
mov
movsl
add
ljmp
ja
cld
popf
jnp
inc
aam
or
mov
bound
lret
sbb
cmc
push
mov
mov
int
mov
lds
loop
cmpsb
out
nop
repnz
int
mov
cmp
into
lret
pop
loopne
mov
inc
lahf
in
aaa
call
out
push
push
jae
popf
cmpsb
sbb
lods
sub
arpl
daa
call
push
pop
mov
cli
mov
bound
xchg
dec
negl
xor
popa
or
jb
clc
jg
loop
mov
test
adc
movl
sub
mov
test
add
lds
adc
xchg
or
mov
adc
imulb
adc
insl
pop
sub
xchg
jmp
lods
outsl
in
add
xchg
orl
cmp
mov
jns
push
aam
and
sbb
dec
daa
into
lret
inc
lock
cmp
or
hlt
loope
es
out
sbbl
call
out
or
xchg
int
lock
push
mov
mov
bndstx
xor
sahf
fildl
popf
dec
jle
ljmp
jmp
imul
inc
xchg
add
sub
nop
dec
dec
push
pop
aad
pop
add
ss
cltd
and
adc
pop
and
call
testl
in
mov
clc
mov
std
imul
sbb
aaa
popl
mov
stos
orb
divl
stos
enter
xlat
mov
mov
cmc
ljmp
movnti
mov
mov
dec
xchg
push
adc
lret
sub
mov
outsl
sub
dec
cli
mov
or
movsb
mov
mov
add
fldenv
xor
lds
in
aam
dec
or
ret
add
add
pop
mov
fisubrl
jle
jb
aaa
mov
ficoml
fldenv
sbb
rcr
aad
aad
hlt
cmp
test
mov
xlat
scas
repnz
sub
subl
add
push
addb
push
daa
iret
mov
mov
imul
lea
lea
test
loope
push
sbb
sub
adc
inc
adcl
in
xor
xlat
mov
pop
xchg
inc
dec
leave
jp
test
dec
and
mov
lock
sub
pusha
jl
pop
push
sahf
imul
popa
pop
adcl
std
mov
xor
fcompl
jge
imul
iret
or
jle
daa
sbb
cwtl
jle
push
cmp
nop
pop
das
sub
rcrl
dec
ss
jmp
mov
lret
and
sbb
imul
dec
pop
sub
aaa
dec
sahf
shll
add
aaa
mov
cmp
cmp
stc
flds
nop
int3
fldt
inc
out
mov
inc
fisubrs
inc
test
cmpsb
push
xchg
cmp
test
mov
daa
jae
jnp
inc
rorl
and
mov
xchg
add
inc
cld
sbb
cli
mov
movsl
loop,pt
sbb
mov
dec
pusha
imul
inc
nop
xchg
dec
push
test
sbb
pop
xor
adc
xor
jge
mov
clc
cs
fcomps
sbb
push
mov
test
adc
jg
inc
lea
or
cwtl
lret
xchg
fucomip
into
dec
lods
xchg
rcrb
fsubrl
adc
lods
je
push
lcall
in
insb
out
loopne
cmp
cli
mov
sbb
test
push
xchg
cmpsb
pop
sbb
cmpsb
sub
add
lea
aam
imul
xor
cmpsb
ds
cmc
cltd
mov
dec
into
int3
int
xor
int
add
xor
cs
push
test
aaa
lods
mov
cmp
mov
inc
enter
adc
and
mov
test
xchg
iret
std
mov
push
cmp
fwait
pop
ds
hlt
jecxz
shll
inc
sub
out
leave
mov
pusha
add
mov
and
push
mov
sub
ljmp
imul
mov
and
mov
imul
xchg
out
push
std
inc
mov
inc
xchg
lds
cld
lock
es
leave
fimull
jmp
fnstsw
push
push
xor
cmc
in
int3
mov
push
lret
or
cmp
pusha
mov
mov
inc
fisttpll
adc
cmp
xchg
loop
mov
das
mov
aam
icebp
xchg
fmuls
and
lea
hlt
call
add
pop
push
je
sub
xor
inc
js
jae
xlat
jp
and
loop
loop
pop
xor
sub
mov
mov
xchg
dec
xchg
lret
cmp
and
add
jge
pop
int
dec
and
pop
pop
sbb
adc
xor
test
pop
pop
cmp
mov
fsubr
lods
stos
aaa
adc
jle
push
test
pop
push
ficomps
gs
into
lcall
mov
test
xchg
imul
fstps
sar
dec
je
shrb
movsb
test
shlb
std
cmp
fiadds
adc
mov
ret
cmp
cmpsl
adc
test
fldenv
setno
inc
ficompl
inc
fcoms
adc
adc
int3
jmp
negl
mov
popa
leave
push
int3
outsb
push
mov
push
clc
xchg
js
cmpl
sub
push
stc
jp
add
ret
test
dec
je
jl
and
dec
jle
out
paddw
sbb
imul
xchg
lcall
jnp
ds
jnp
mov
cmc
addr16
int
clc
add
dec
ficompl
dec
icebp
add
jg
or
out
insl
cmpsb
rcr
and
mov
xchg
out
test
sbb
repnz
jp
mov
jmp
fdivl
mov
xchg
notb
bound
mov
ljmp
adc
andl
ljmpw
xor
inc
call
popa
fsts
push
mov
push
shl
popf
inc
subb
mov
add
test
sub
mov
adc
jle
das
outsl
ret
sub
aad
test
sub
mov
xchg
jb
subb
jg
test
mov
fmul
jbe
repnz
jne
mov
mov
out
add
into
sub
mov
sub
mov
mov
xchg
bound
xor
leave
mov
orl
xlat
sbb
mov
or
faddp
pop
fbstp
mov
jno
test
cmp
jb
ret
cmp
scas
xor
jbe
mov
xor
stc
mov
mov
xchg
lods
xchg
insl
addr16
mov
loope
out
cmp
out
push
inc
mov
mov
jbe
mov
dec
or
xor
fsts
jg
mov
stos
icebp
adc
mov
lret
cltd
fwait
mov
aaa
fmul
jnp
mov
xor
mov
mov
int
std
daa
inc
push
dec
mov
repnz
aaa
push
es
aad
push
leave
enter
icebp
or
inc
bound
stos
mov
adc
xchg
loope
out
hlt
ljmp
arpl
sbb
stc
xchg
mov
out
aaa
test
xchg
mov
movsl
sbb
mov
push
cmp
lret
icebp
daa
nop
add
test
jmp
jnp
dec
jno
add
dec
mov
jne
mov
test
dec
jnp
lahf
fdivrl
dec
es
mov
ss
push
ret
push
push
rclb
adc
test
push
dec
push
dec
adc
clc
mov
in
jns
mov
aad
testb
pop
push
cli
or
lds
ret
pop
or
pop
pop
btr
data16
mov
jno
aam
rclb
hlt
xchg
pop
mov
adc
enter
dec
cmp
or
pop
inc
fnsave
dec
lret
cmp
adc
jp
mov
sbb
fwait
rorl
xchg
loop
aaa
cmp
mov
pop
lock
lfs
test
pusha
lods
and
stos
mov
test
cwtl
lcall
and
mov
mov
and
cs
sti
loop
pop
call
test
lcall
jnp
mov
pop
test
addr16
or
xchg
and
loop
lods
or
pop
cmp
adc
cmp
cmpsb
mov
fstpl
sahf
bound
fcoml
cmp
push
cmpsb
sti
test
sub
push
inc
aaa
sub
inc
sbb
shrl
pop
mov
movsl
cmc
leave
das
adc
and
cmpsb
data16
icebp
jns
mov
insb
testl
adc
pop
push
push
jb
in
inc
in
test
cmpsb
cmpsb
nop
sub
pushf
in
mov
or
pop
mov
mov
xchg
outsb
sbb
jge
jno
and
lret
pushf
roll
fldt
push
int3
stos
movsb
cld
fdiv
enter
mov
das
repnz
and
popa
xor
and
push
or
test
sub
loop
jl
mov
inc
fmull
dec
adc
testb
fsubs
add
cmpsb
scas
pop
jno
in
enter
or
push
push
or
aad
pop
inc
fldt
outsb
add
bnd
push
mov
out
fsts
xor
shlb
jl
or
pop
cltd
aaa
mov
pushf
or
nop
mov
gs
cltd
or
out
or
adc
and
push
daa
pop
jnp
mov
xchg
jecxz
xchg
dec
pop
enter
loop
fistpl
out
fcoml
mov
jnp
in
cwtl
addl
dec
mov
hlt
leave
das
or
mov
xchg
shld
cmp
add
cmpsb
dec
add
xchg
mov
std
sbb
inc
cmpsb
out
cs
out
movsb
es
jae
repnz
int
xor
xchg
mov
mov
enter
xor
imul
pop
mov
outsl
mov
cltd
aad
mull
mov
insb
inc
add
sbb
jnp
fldl2e
movsl
push
scas
push
pop
mov
in
outsl
cli
xchg
xor
pop
aaa
mov
pushf
dec
pop
out
cltd
sub
pop
jg
push
push
cmpsl
je
xor
testb
loope
add
fwait
xor
xor
add
fbstp
mov
mov
xlat
jnp
es
or
dec
jno
divb
loopne
dec
repz
pusha
jno
sbb
or
mov
aad
and
jae
xor
mov
adc
sbb
sub
or
es
jns,pn
loopne
mov
pop
mov
ss
pop
pop
sbb
mov
or
xor
adc
out
mov
mov
push
data16
lahf
sti
pop
mov
fstpt
lods
mov
ja
or
cmp
pop
leave
outsb
add
fucom
bound
in
mov
jnp
and
shrl
jmp
inc
pop
popa
out
shr
add
mov
imul
loope
imul
xor
fildll
mov
cmpsb
xchg
cmpsb
in
cmp
dec
cmpsl
sbb
and
scas
mov
or
cmp
dec
aaa
mov
xchg
sahf
pop
mov
sub
jp
loop
mov
das
shll
ss
daa
lcall
cmp
mov
jmp
in
cmp
roll
jg
das
jecxz
leave
cld
insl
mov
mov
push
dec
push
jmp
mov
jbe
stos
jae
arpl
jne
lcall
sar
fisttpl
ss
gs
and
popl
out
addl
inc
dec
dec
push
fs
fldl
sub
cltd
fwait
jmp
pop
fdivr
and
ret
mov
jnp
sbbl
test
lahf
pusha
lods
in
call
sbb
icebp
xlat
mov
pushf
push
and
adcb
mov
and
mov
xchg
fucomi
jp
or
add
adc
inc
nop
enter
adc
push
notl
mov
mov
fisttpl
cmc
inc
inc
xor
pop
cs
adc
cmpsb
adc
loop
adc
lods
mov
lods
xchg
loop
jae
call
jns
mov
push
jg
fstl
jae
push
dec
jl
cli
lahf
out
ror
dec
nop
aam
lods
xchg
aad
mov
add
aaa
aad
out
pop
or
cmp
xlat
ss
add
mov
outsb
imul
xor
popl
rorb
cmp
mov
ja
cmpsl
or
dec
mov
mov
pop
xor
mov
dec
xchg
jne
lcall
aas
push
mov
push
pop
shlb
bound
imul
scas
xchg
xor
jp
mov
mov
fs
mov
dec
dec
pop
cmp
add
cmpsb
mov
lret
adc
push
stc
mov
and
push
imul
jb
push
mov
cmpsb
mov
stc
and
aad
cltd
mov
call
pop
add
cli
dec
sub
jmp
in
cmp
jmp
inc
and
pop
jmp
insb
in
mov
aas
cmp
adc
rep
inc
jmp
inc
push
pop
int3
jmp
test
fs
mov
stos
movsl
cmc
mov
jg
xchg
jne
cmp
outsb
rorl
inc
fstps
xchg
jmp
sub
and
or
xor
pop
mov
mov
or
mov
mov
scas
or
cmp
fs
pop
and
pop
and
xchg
insl
push
nop
imul
dec
inc
sbb
test
xchg
call
icebp
jae
lret
aaa
mov
imul
mov
cmp
xor
inc
sub
pop
jg
mov
cli
jl
dec
mov
fstpl
dec
imul
mov
insb
dec
xchg
inc
cwtl
fiaddl
sbb
adc
negb
jp
jno
add
das
aam
mov
leave
out
sarb
les
mov
not
insl
mov
pop
cmp
and
cld
fadds
fidivl
mov
out
ret
push
mov
inc
inc
out
sub
xchg
add
xor
jb
outsl
cmpsl
mov
scas
pop
cmc
inc
jp
xchg
dec
pop
push
sahf
push
ss
pop
and
push
mov
xor
jne
push
mov
push
das
stc
test
fiadds
jmp
in
mov
push
pop
push
push
adc
push
dec
xchg
lret
aam
inc
lods
jbe
mov
aas
stc
scas
and
jmp
jecxz
pusha
fwait
pushf
push
mov
ja
cmc
movl
mov
movsl
rorb
rcll
push
imul
add
mov
pop
push
xchg
sub
imul
imul
js
sub
mov
rorb
push
sbb
lods
rcll
icebp
dec
fistps
mov
xor
push
xchg
mov
mov
push
pop
imul
pop
xor
jge
adc
das
ja
movsl
push
mov
push
dec
and
repnz
int
pop
sbb
enter
cmp
xchg
cltd
fistl
sub
jo
imul
roll
cmp
in
xor
cltd
or
or
push
out
inc
fstl
cltd
xor
pop
int3
and
mov
lahf
inc
shr
jmp
sahf
outsl
jnp
scas
mov
test
mov
imul
dec
out
lahf
mov
mov
mov
dec
sub
sbbl
aam
pop
xchg
rorb
mov
lods
rcll
roll
loope
fistl
mov
mov
cmp
call
test
fs
mov
dec
aam
mov
or
dec
fcoml
call
outsl
pop
cmpb
cmp
push
addr16
fimuls
cmp
jg
push
andb
test
lods
ret
leave
pop
cltd
int3
les
sbb
jge
dec
dec
pop
pop
lods
test
mov
in
call
fstp
sub
or
js
dec
pop
pop
lods
test
mov
in
call
fstp
sub
or
js
dec
pop
pop
lods
test
mov
in
call
fstp
sub
or
sbb
jge
dec
dec
pop
cwtl
lods
test
adc
mov
xchg
mov
cmpsl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
out
jecxz
cs
and
nop
pop
and
mov
push
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
ja
push
add
add
add
add
jno
xchg
add
add
js
xchg
add
add
incl
push
add
out
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
lods
add
add
add
mov
jb
ja
sub
sahf
add
incl
inc
add
add
add
add
xor
mov
add
pusha
add
popl
insl
add
inc
add
test
push
add
add
sahf
add
adc
leave
add
dec
add
add
add
pop
add
inc
add
add
add
add
add
add
push
add
add
mov
add
add
add
add
add
push
dec
add
jns
push
push
and
faddl
in
xchg
add
add
jge
jns
mov
add
add
add
add
add
pop
add
add
add
add
hlt
add
add
pop
add
add
add
pop
add
add
inc
add
add
loopne
mov
add
add
add
mov
xchg
add
fldl
sub
add
add
add
add
add
pop
add
add
dec
add
ja
pop
add
add
add
sahf
add
and
stc
add
jno
adc
test
mov
add
pop
add
add
and
push
add
add
add
add
push
add
add
add
add
add
push
add
add
insl
add
loopne
mov
add
add
pusha
add
add
roll
adc
addb
add
add
add
add
add
aam
cltd
add
add
lahf
add
outsb
add
add
add
add
add
test
push
add
scas
add
add
hlt
add
inc
add
add
add
add
incl
inc
add
add
add
add
nop
add
mov
add
add
xchg
add
add
add
add
pushf
add
add
pop
add
add
add
add
add
push
add
jg
xor
xor
mov
add
push
add
add
stc
add
add
add
fwait
add
inc
add
add
add
add
test
add
xor
int
addb
add
add
add
mov
add
add
add
add
add
push
add
add
add
sub
cmp
pusha
add
add
add
add
incl
inc
add
add
jl
or
sub
pop
add
pusha
add
add
jb
sbb
pop
add
add
add
xchg
add
add
add
add
lods
add
add
incb
loopne
xchg
add
incl
inc
add
add
add
sbb
or
mov
add
mov
add
add
add
mov
inc
pop
rcrb
bound
out
movsl
mov
pusha
add
out
imull
and
mull
into
xor
int
push
loop
decl
imul
inc
xchg
xor
sbb
xchg
pop
mov
jecxz
xchg
movl
xor
lods
mov
sub
sub
imul
adc
mov
sbb
xchg
sub
cmc
xchg
ds
add
pop
mov
mov
push
and
push
cmp
movl
lret
mov
inc
fsubrl
adc
shll
xor
mov
lock
fadds
fsubs
jo
or
adc
jp
enter
addb
and
divl
decb
imul
mov
pushf
pop
cwtl
add
push
in
xchg
imul
sahf
repnz
sbb
or
aaa
jle
orb
in
jmp
pop
in
test
inc
xchg
or
push
cmpsb
lds
mov
jo
or
loop
aas
xchg
dec
sbb
mov
popf
push
fistps
inc
pushf
hlt
rcrl
mov
pop
adc
xor
test
and
mov
popa
dec
fisttps
mov
cltd
call
dec
xchg
mov
sub
subb
jae
inc
roll
rcr
push
mov
insl
call
leave
mov
xchg
and
mov
shr
ds
fwait
mov
in
mov
clc
cmc
jns
cmpsl
push
fstp
and
jo
pop
jo
xor
lret
in
pusha
mov
inc
add
in
add
fistl
movsl
dec
out
aad
fildll
dec
pop
xor
dec
add
arpl
push
inc
xor
addb
lock
jo
jae
add
or
in
xor
xchg
xchg
mov
or
adc
pop
lods
push
sbb
push
repnz
out
scas
push
testl
cmc
jnp
dec
lea
insl
push
sub
inc
je
mov
dec
imulb
and
inc
jno
das
fwait
jl
nop
sbb
test
or
dec
iret
fs
cmp
mov
aad
ja
mov
nop
dec
xchg
mov
test
sub
push
or
pop
or
add
out
and
jmp
gs
jle
dec
xchg
cltd
lock
cli
test
jl
inc
xchg
xchg
roll
pop
add
movsl
jl
arpl
ret
cmp
pop
cwtl
dec
insl
ja
scas
mov
pop
push
rorb
lahf
dec
out
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
