call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
mov
js
push
mov
fildl
sbb
sub
cmp
dec
mov
test
pop
mov
js
push
fdivrl
in
sub
sub
cmp
and
jl
mov
js
push
fdivrl
in
sub
fmuls
aas
mov
pop
cwtl
sbb
or
add
cvttps2pi
sub
js
add
addr16
out
jecxz
repnz
inc
adc
out
and
xchg
cmp
int3
or
in
mulb
jecxz
cmp
pop
iret
dec
mov
cmpsl
mov
xchg
adc
and
repnz
ja
pop
fstl
cltd
pop
add
test
pop
leave
outsl
mov
jo
neg
popa
xchg
add
repz
jecxz
test
fmul
dec
mov
or
int
std
cld
xchg
xor
inc
sub
xchg
push
jne
arpl
enter
inc
insb
test
or
cld
xor
adcl
cmp
or
subb
dec
fisttpl
jg
stos
imul
int3
or
cmp
sub
fmuls
sbb
sub
cmp
dec
mov
test
cmp
lods
cs
push
stos
lods
test
jne
sbb
push
bswap
cmp
adc
cmp
sbb
sub
test
stos
inc
scas
test
pop
outsl
and
pop
sarl
ret
enter
fimuls
fdivrl
in
sub
fmuls
sbb
sub
cmp
dec
mov
test
pop
mov
js
push
fdivrl
in
sub
fmuls
sbb
sub
cmp
dec
mov
test
pop
mov
hlt
in
pop
jle
mov
mov
imul
xchg
insb
test
xchg
mov
in
jl
jns
pushw
std
cltd
out
decl
push
xlat
loopnew
lds
sbb
mov
dec
insl
xchg
push
xchg
mov
arpl
xorl
jno
lahf
cwtl
mov
hlt
mov
nop
fcomp
inc
cld
mov
mov
xchg
push
push
and
xchg
icebp
dec
jmp
scas
loope
xchg
data16
mov
mov
imul
jb
insb
xchg
sub
shll
test
jo
push
loop
lcall
int
jne
xchg
out
mov
fcomip
mov
pop
pushf
push
or
leave
scas
mov
and
mov
incb
iret
adc
lahf
test
inc
inc
jecxz
rclb
mov
sub
mov
jno
cmp
roll
mov
pop
xchg
sub
dec
popa
lret
divl
fsubrl
or
pushf
jae
mov
push
cld
or
xchg
push
inc
das
jge
jecxz
nop
daa
mov
push
test
cmpsb
xchg
repnz
sbb
ss
add
jle
and
xchg
sbb
es
adc
and
cmp
mov
xor
adc
push
or
das
ret
fxam
jle
or
lods
mov
ds
and
stos
cmp
sbb
and
sub
imul
test
mov
scas
mov
xchg
aas
or
scas
stos
adc
das
das
cmp
mov
and
push
xchg
mulb
fnsave
inc
ror
push
negl
sbb
xchg
pop
leave
mov
xchg
stc
mov
xor
sub
cli
mov
pop
hlt
gs
fld
inc
jb
dec
out
pop
adc
mov
shlb
inc
cmp
and
or
in
orb
mov
mov
insb
mov
pop
sbb
int3
lahf
fadds
sub
mov
shr
inc
mov
pop
pop
lcall
cmp
mov
xchg
xlat
jge
popa
insl
jmp
and
push
inc
andl
push
mov
or
mov
jae
adc
ja
cld
pop
loop
ret
loop
hlt
cmpsl
cmp
in
add
shl
adc
jnp
fbld
push
jo
xchg
rorl
jne
cmp
and
xor
lods
dec
test
mov
sbb
andl
pop
fmul
in
bound
pop
push
out
and
mov
clc
jl
push
cmp
iret
jmp
pop
sbb
xchg
mov
je
je
mov
mov
mov
test
sbb
or
dec
ret
sub
hlt
fnstcw
or
test
rcll
push
imul
xchg
ja
push
das
add
pop
xchg
xchg
aaa
lods
lahf
ss
adcb
xchg
repnz
dec
mov
loopne
rep
lods
jmp
cmpb
jecxz
in
call
inc
sub
xchg
or
push
fistps
out
mov
add
and
and
push
cmc
lret
inc
pop
xchg
test
fcompl
mov
pop
jecxz
sti
addb
bswap
pop
xor
xchg
sbb
mov
dec
dec
lock
or
pop
push
or
shlb
mov
lcall
jne
nop
dec
mov
sahf
fwait
cmpsb
das
leave
adc
scas
cltd
cltd
fmull
add
imul
mov
pop
mull
jno
cld
decl
dec
mov
push
pop
mov
pusha
mov
test
lahf
or
js
mov
pop
fistps
sti
insl
push
dec
cmovae
psrld
sub
mov
movsb
in
popf
rcl
sbb
idivl
cmp
sarb
ljmp
jno
pop
jbe
shrl
adc
xorb
rclb
ja
jae
mov
mov
xchg
cli
add
test
and
sub
into
les
jge
mov
cmp
cmp
pop
mov
sub
mov
jle
jmp
sbb
sbb
out
pop
addr16
pop
add
inc
stos
jb
or
xor
add
cmp
dec
rolb
mov
mov
jnp
shlb
shl
stos
popa
stc
rorb
sub
mov
or
mov
mov
or
jmp
lcall
shl
es
sbbl
adc
and
daa
sub
and
int3
test
jae
ret
stc
dec
subb
mov
xor
pop
int
or
mov
inc
mov
mov
cmp
mov
pop
inc
adc
sub
stos
mov
ficomps
out
in
sahf
aaa
dec
aad
sbb
adcb
lahf
scas
clc
in
addb
jns
push
dec
fwait
sub
adc
data16
cmp
pop
pushf
jle
dec
xor
cmpsb
bound
sub
inc
cmpsb
inc
inc
out
xchg
gs
mov
push
fucompp
mov
and
out
cltd
or
sbb
out
ja
fcompl
pop
btr
mov
adc
sub
aaa
push
cmp
jno
jno
addr16
rolb
pop
bound
xorb
ljmp
xchg
fwait
scas
and
pop
cwtl
jmp
clc
lss
ljmp
pop
js
jge
dec
nop
movl
test
push
dec
aad
mov
pop
fadds
das
ss
add
lahf
jb
imul
cmovbe
and
mov
insb
aaa
or
imul
cmpb
pop
xor
fwait
adc
xchg
out
jmp
push
or
jb
shufps
mov
aas
bound
and
or
test
daa
cmp
jl
outsb
shlb
xor
inc
sub
idivl
jb
and
jae
jg
sbb
jmp
in
aam
mov
jbe
mov
ljmp
lcall
add
adc
clc
cmovae
outsl
adc
push
rcrb
jne
shll
popf
xchg
into
sbb
iret
or
gs
ss
lods
mov
ds
and
inc
pop
mov
nop
in
cmp
pop
insb
iret
hlt
and
or
lret
jge
inc
test
data16
es
cld
mov
adc
das
jmp
mov
les
sub
aam
add
push
add
jmp
push
lcall
push
add
lock
mull
in
fiaddl
add
lret
xor
out
mov
ja
sub
cli
push
pusha
sbb
jmp
pop
stos
lds
xchg
imul
cmp
scas
push
int
icebp
fldl
or
test
adc
fbstp
lahf
sbb
or
mov
push
or
faddl
mull
hlt
daa
inc
add
ja
or
ret
les
out
fldl
xchg
pushl
mov
insl
sbb
fisubrs
lret
popf
jmp
leave
sub
adc
mov
cmp
mov
fisubl
movsl
mov
icebp
fucomip
int
call
loope
jle
or
call
int
sbb
in
pop
push
rcrl
mov
jns
outsl
sub
imul
xor
mov
lahf
xor
and
daa
fadds
sbb
das
pop
pop
leave
test
icebp
pop
cli
or
icebp
dec
ljmp
adcl
pop
je
push
hlt
push
sbb
push
xchg
mov
es
lret
jno,pn
jae
inc
cltd
out
jge
addr16
mov
sbb
ja
loopne
adc
mov
and
mov
enter
ja
lret
movsb
jp
jo
test
inc
jae
mov
pop
js
inc
dec
icebp
ret
int3
pop
sti
daa
sbb
mov
mov
xor
int3
jmp
rcrl
fidivl
pop
or
pop
jg
jne
lock
xchg
adc
divl
jp
jmp
popf
int3
dec
pop
andb
dec
and
add
mov
ljmp
and
pop
les
xchg
andl
cwtl
jg
or
and
fimuls
cli
mov
aas
xor
xor
pop
mov
dec
mov
add
arpl
fiaddl
fyl2x
lds
stos
pusha
cmc
cmp
push
pop
pop
lret
pinsrw
enterw
out
imull
fmull
pop
mov
lahf
lcall
decl
inc
stos
sub
mov
fs
push
notb
fisttpll
sarb
sub
xchg
mov
dec
jl
aad
in
pop
cmp
dec
fiadds
cld
cmc
les
je
cmp
enter
out
and
sbb
popf
xor
mov
cmp
xchg
mov
sahf
mov
rorb
dec
cmp
ja
adc
xchg
ja
das
adc
int
inc
aas
gs
dec
inc
insl
pop
mov
ret
or
cmp
cmp
xchg
fcmovu
insb
xchg
lahf
lods
jecxz
sbb
mov
inc
out
xchg
inc
ja
push
fnstenv
push
sub
fsub
test
push
ljmp
add
out
push
and
ret
test
movsl
sbb
ljmp
aaa
movsl
movsb
adc
stc
sbb
loopne
adcb
jnp
adc
dec
shll
add
mov
and
pushl
mov
lods
add
mov
pop
adc
out
xor
out
push
ljmp
aam
shrb
pop
adc
les
loopne
sbb
sbbb
andb
out
dec
out
sub
fldcw
xor
call
mov
into
ret
lcall
aad
dec
dec
or
sub
cmp
jg
adc
pop
sti
pop
and
and
daa
leave
sub
dec
fcmovnbe
call
dec
jl
pop
arpl
fstpt
pop
mov
xchg
mov
iret
push
jge
add
and
inc
mov
xchg
mov
or
xchg
divb
loop
fs
xlat
push
inc
push
mov
sbb
add
sbb
jmp
popa
pop
rorb
aaa
aam
jnp
cmp
mov
arpl
sarb
sbb
and
je
push
push
sahf
sub
ret
fadds
inc
lahf
mov
push
xchg
imul
fnsave
lock
jae
adc
out
jmp
cmp
rorb
mov
and
mov
dec
cmp
dec
fildll
scas
xor
and
mov
sub
lock
sbb
push
ds
rol
cmpsb
data16
add
mov
call
pop
bound
xor
loop
xchg
mov
lret
pop
sub
test
out
nop
xlat
add
dec
je,pt
nop
xlat
bound
xor
inc
scas
cmp
rorb
mov
fimull
in
cwtl
stos
aas
push
iret
push
jg
iret
push
sub
mov
cmp
addl
notl
cmp
cmp
leave
sub
cmp
dec
add
sbb
push
xchg
fidivl
cmp
xor
inc
cmp
push
inc
mov
push
xchg
cli
sbb
daa
jmp
mov
fsubr
fiaddl
movsb
dec
mov
je
cld
insl
xor
inc
cmp
lahf
pop
mov
pop
jecxz
add
adc
adc
fstpt
test
mov
popf
jbe
xchg
fsubr
frstor
mov
mov
test
push
adcl
jg
mov
testb
and
sub
out
jge
outsb
xor
xor
mov
dec
mov
out
mov
jmp
pop
mov
popa
pop
fdiv
pop
call
jle
push
push
mov
add
sbb
jge,pn
test
mov
rclb
jo
rcr
in
adc
cmp
out
mov
pop
xchg
cmp
mov
mov
xchg
pop
lret
or
jp
enter
mov
aas
inc
lods
ret
add
fwait
andb
fucomp
pop
dec
popl
cli
hlt
and
aam
pop
xchg
out
repnz
push
mov
inc
add
fimuls
icebp
adc
pusha
and
push
pop
test
cwtl
pop
roll
push
inc
or
sbb
dec
dec
cs
sbb
outsl
or
mov
adc
inc
loopne
push
sub
aaa
cmc
jnp
insb
lret
jns
imul
lcall
std
cmp
dec
or
out
and
and
mov
cmp
insb
stos
push
sbb
push
pop
les
repnz
xor
xchg
mov
mov
testb
mov
sbb
bnd
cld
loope
int3
sbb
mov
push
xchg
cmp
test
push
dec
mov
addl
mov
and
push
and
lret
jne
testb
lea
jmp
stos
mov
outsl
mov
mov
pop
cmpsl
push
jb
out
cmp
rol
add
fisubl
and
push
shll
outsb
movsb
pop
lds
jo
ret
lcall
pop
loope
loopne
push
xchg
sbb
cmp
and
xchg
mov
jge
dec
xor
and
mov
and
mov
xorb
js
leave
bound
ss
xchg
cmp
imul
cmp
inc
push
es
bound
in
xchg
pop
jo
add
mov
lods
inc
push
pusha
fdivs
and
test
fs
sub
cmp
sub
fmul
lret
push
jb
lret
jge
or
lods
mov
es
inc
mov
sahf
or
add
lock
push
mov
jae
dec
xchg
fimull
mov
dec
dec
loope
leave
dec
inc
mov
ret
leave
cltd
jnp
out
neg
xor
sbb
sub
mov
cld
scas
adc
cmp
dec
mov
in
addl
pop
pop
cld
repz
hlt
stc
and
sahf
mov
cwtl
dec
sub
mov
mov
jp
add
mov
out
pop
mov
pop
inc
cs
pop
add
add
push
syscall
xor
jl
jo
pop
loope
repz
xchg
xchg
pextrw
push
jecxz
aad
inc
rorl
repnz
lods
cmp
outsb
mov
or
cmp
sub
push
mov
pop
push
imul
push
hlt
xchg
xchg
xchg
rcrl
cmpsb
mov
rep
pop
movsl
fmuls
push
std
ja
cmp
adc
into
mov
push
daa
xchg
dec
ljmp
pop
icebp
lret
inc
mov
xchg
sbb
cld
inc
mov
inc
mov
mov
shrl
int3
jne
cmp
sbb
outsb
xchg
fwait
cli
ds
xchg
cmc
add
movl
stos
push
inc
mov
mov
sub
jle
push
inc
clc
jge
or
or
imul
cwtl
loope
pop
and
push
or
mov
cmpsb
lret
dec
sahf
shrl
test
xor
cmpsl
or
or
fstpt
sub
jno
mov
out
ret
push
xchg
pop
mov
iret
fistpl
push
or
lahf
xlat
cmp
mov
inc
adc
mov
gs
adc
das
leave
es
mov
test
mov
jle
ds
outsl
stc
subb
lods
jno
stc
push
sbb
push
out
shl
ss
lods
movsl
lds
adc
lret
lods
mov
pop
ret
and
sub
xchg
repnz
xchg
adc
aad
les
sub
jbe
mov
push
dec
data16
test
and
das
xorl
fucomi
xor
push
popf
push
cmp
and
out
insb
and
rcrb
sbb
mov
sahf
dec
xlat
testl
je
int3
dec
movsb
cmp
sub
lods
out
or
lcall
nop
das
xchg
rorl
mov
inc
rclb
popl
aas
int
daa
icebp
dec
jb
es
jmp
inc
push
dec
mov
xor
rcrl
sub
imul
mov
jmp
push
iret
mov
mov
xchg
clc
push
push
xchg
gs
fisubrs
add
les
popa
aam
rcl
insb
pop
mov
ds
mov
pop
lcall
cmp
gs
fimuls
sbb
jne
mov
fnstsw
mov
add
jl
std
stos
jl
fstpt
iret
jne
fsub
mov
jae
inc
pop
jne
jle
mov
outsl
cmp
test
inc
adc
inc
push
aas
xchg
xchg
adc
push
mov
sbb
jge
sbb
sbb
inc
sub
insl
nop
mov
sub
mov
repnz
push
add
rcl
sub
iret
add
mov
out
cmpsb
and
inc
scas
loop
mov
leave
mov
push
mov
lret
aaa
imull
lods
jns
bound
cmpb
cmp
mov
repz
xchg
shll
lret
cs
pop
xor
jb
leave
push
dec
and
mov
push
mov
push
enter
popa
lahf
jle
cli
js
in
mov
out
add
cmp
mov
ret
mov
pusha
push
in
call
mov
out
mov
xchg
imul
push
outsl
popa
dec
pop
push
sbb
repnz
pop
mov
push
dec
inc
mov
les
mov
cmovle
ds
mov
lds
adc
mov
push
cmp
adc
daa
jp
mov
fistl
aad
mov
xorb
ds
inc
sbb
into
scas
mov
test
loopne
xlat
or
or
sti
mov
xchg
mov
addr16
dec
stos
movsb
std
stc
mov
fisttpll
pop
or
jp
cmp
mov
lcall
mov
jbe
push
jle
or
cmp
jae
and
dec
js
push
pop
cwtl
int
jae
cmp
clc
pop
mov
mov
subl
ljmp
jb
arpl
mov
lret
adc
mov
fldl
and
mov
mov
ds
dec
sbb
dec
mov
dec
seto
xchg
call
clc
aas
outsl
lahf
rclb
add
cld
jmp
mov
les
inc
mov
xor
faddl
packuswb
inc
adc
sar
add
outsl
leave
les
ds
into
push
call
xchg
aad
jmp
push
rcrb
dec
shr
dec
mov
inc
xor
stos
ljmp
stc
imull
adc
out
xor
loope
roll
pop
stos
fwait
inc
fdivrl
lret
aas
adc
call
fsts
xor
cmp
xor
js
enter
aad
sub
nop
sub
pop
rorl
mov
pop
bound
pop
lret
movsl
cmp
sub
scas
cmp
popf
rorb
push
sbb
add
jmp
mov
aas
pop
push
daa
push
mov
mov
dec
dec
mov
int3
and
shrb
insb
cs
std
pushf
popa
pop
mov
cld
fdivs
rcl
jmp
xor
jp
popf
fsts
lock
push
shrl
pop
adc
dec
cmp
imul
pop
adc
fwait
dec
adc
loopne
and
cmp
mov
les
jns
pusha
movsl
xor
inc
cmp
add
notl
cmp
pop
cmp
stc
adc
enter
repz
and
fcoml
push
add
fisubrl
ds
fdivrs
scas
lea
and
rcll
push
push
add
add
subb
adc
inc
sbb
push
lods
or
mov
enter
popf
jecxz
sbb
pop
sbb
jbe
pop
std
rcl
xor
aas
fisttps
out
into
test
in
daa
pop
aas
cltd
xchg
sbb
movsb
adc
or
sub
adc
xchg
mov
adc
push
push
cmp
loop
ds
xor
inc
fldt
mov
dec
xchg
jno
or
fidivl
or
cmp
les
call
dec
push
and
lea
fldt
fs
test
jp
outsb
insl
xchg
scas
aaa
les
mov
mov
loopne
xor
jo
sub
popa
sarb
vphsubbw
out
push
push
push
cmc
jmp
jmp
sub
sbb
push
sub
ret
fisubs
mov
or
inc
lods
push
fdivrl
in
sub
fmuls
sbb
sub
cmp
dec
mov
test
pop
mov
js
push
fdivrl
in
sub
fmuls
sbb
sub
cmp
dec
mov
test
pop
mov
js
push
fdivrl
in
sub
sbb
sub
cmp
dec
mov
test
pop
mov
js
push
fdivrl
or
mov
sub
dec
out
les
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
aaa
pop
daa
aad
pop
sub
xchg
mov
cmpsl
out
xlat
incb
das
pop
aas
pop
push
aaa
pop
daa
outsl
push
jg
dec
ja
scas
xchg
mov
cmpsl
out
xlat
inc
iret
neg
out
pop
aas
pop
getsec
pop
daa
outsl
push
jg
dec
ja
scas
test
cli
cmpsl
mov
mov
pop
pop
aas
jae
push
dec
lret
in
pop
xchg
mov
lock
imul
jl
jp,pn
mov
jp
pop
fsubrs
jo
lds
outsl
fisubrl
inc
out
mov
cmpsb
adc
add
daa
sbb
sarb
add
int3
les
out
push
out
jns
mov
addr16
xlat
aas
hlt
dec
or
push
das
repz
push
push
scas
sahf
pop
aaa
mov
dec
ja
je
aad
rorb
or
xchg
mov
ror
xchg
dec
lahf
xchg
mov
mulb
mov
xchg
aas
incl
pushf
mov
mov
cltd
loop
push
adc
into
loop
out
pop
aas
pop
getsec
pop
daa
outsl
push
jg
dec
ja
scas
xchg
mov
cmpsl
out
xlat
inc
iret
neg
mov
arpl
popa
sub
sbb
or
cmp
sti
or
leave
fwait
mov
stos
xorb
dec
jnp
push
jo
xor
imul
shr
mul
cli
lret
movsb
mov
rorb
inc
aas
push
cmp
dec
ja
scas
xchg
mov
cmpsl
out
xlat
inc
iret
neg
out
pop
aas
pop
getsec
pop
daa
outsl
push
jg
dec
ja
scas
xchg
mov
cmpsl
out
xlat
inc
iret
neg
out
pop
cmp
add
negb
je
cmp
mov
inc
or
ret
stc
test
roll
jnp
fwait
push
movsl
movsb
in
leave
mov
arpl
pop
mov
fists
daa
xchg
jno
xor
shrl
lret
mov
out
and
xchg
mov
pusha
es
xchg
frstor
ja
das
jnp
scas
cli
sbb
dec
addb
fidivl
or
insl
inc
mov
pop
add
movsl
imul
add
cmp
insl
mov
dec
nop
inc
rol
jne
outsb
pop
clc
clc
dec
sbb
pusha
hlt
cwtl
into
aas
push
mov
xor
mov
pop
jp
in
pop
lret
test
add
xchg
xor
push
mov
mov
jmp
loop
cs
or
jg
push
dec
out
dec
or
lea
ficoml
jno
sub
test
xchg
imull
mov
jae
dec
repz
mov
push
into
dec
repz
inc
push
ja
xor
mov
jg
jnp
add
mov
xchg
cli
jae
aaa
mov
cmpsb
and
lcall
idivb
xor
xor
popf
rcll
xor
fld
lock
adc
sarl
dec
dec
sub
movsl
mov
mov
mov
add
rcrb
sbb
inc
shll
into
nop
lcall
stos
mov
insb
mov
mov
jno
std
xchg
jp
inc
mov
arpl
jle
ds
lret
call
adc
or
lea
jo
and
pop
icebp
cmp
lds
sbb
xchg
mov
mov
pop
or
mov
xlat
mov
clc
or
lcall
and
jge
inc
sbb
mov
stos
outsl
out
addr16
push
pop
mov
push
call
xor
movsl
or
mov
xchg
inc
jne
inc
sub
jmp
pop
jmp
or
push
daa
popa
mull
mov
push
mov
and
inc
leave
ja
nop
sub
xor
pop
scas
fsubl
out
sbb
out
lods
dec
out
cmpsl
test
mov
mov
cmp
xchg
es
mov
or
mov
repnz
add
testb
mov
dec
push
add
mov
xchg
aad
and
push
add
mov
mov
jns
lret
dec
std
pushf
dec
add
imul
inc
hlt
ret
aas
fsubrs
ds
pop
mov
xchg
cli
pop
dec
sbb
lock
mov
sbb
lods
mov
daa
push
in
push
scas
mov
push
test
and
dec
mov
cmp
xchg
fisubs
dec
hlt
pcmpgtb
addl
mov
push
pop
int3
add
inc
fucom
in
xchg
dec
lahf
imul
fs
jno
push
xchg
pop
pop
out
xor
xlat
or
ret
icebp
mov
lcall
and
push
cltd
xchg
push
mov
movsb
sbb
push
sub
test
mov
sub
js
cmp
imul
dec
jns
dec
hlt
int3
dec
mov
mov
pop
dec
imul
out
pusha
inc
and
sub
movsl
daa
sbb
jmp
or
popf
fcoms
fisubrl
scas
bound
add
dec
add
or
out
dec
xchg
push
fbstp
loope
testb
adc
mov
aas
dec
jle
cmp
cmp
inc
mov
jno
shl
int
les
sub
mov
inc
lahf
lret
outsl
lock
shlb
xor
add
cmp
jns
adc
cmp
pop
or
aaa
shrl
dec
xchg
mov
push
cmp
int
lret
jnp
mov
ret
lahf
lahf
loop
sti
push
movsb
loop
mov
insl
ss
out
ret
popf
push
aaa
enter
mov
or
popf
mov
inc
or
test
add
mov
jmp
xchg
lret
pushf
ret
aad
repz
or
pop
push
and
jae
rorb
adc
arpl
sub
sbb
xor
enter
pop
rorb
mov
scas
cmp
inc
out
xor
rcll
cmp
in
callw
sahf
loop
in
das
mov
repnz
loope
jle
aas
pop
jae
mov
jns
mov
fwait
js
or
xchg
mov
mov
dec
push
in
jne
push
sbb
aad
mov
and
stos
sarb
dec
in
sbb
sub
xor
es
aam
pop
push
lods
daa
push
inc
test
jecxz
in
lahf
divb
ljmp
scas
cmp
xchg
xchg
push
push
ret
loopne
add
rcrl
cmp
pusha
sahf
clc
push
mov
jo
and
and
mov
and
sbb
push
out
pop
xchg
jb
or
std
aad
xchg
into
insl
sub
push
lcall
daa
mov
and
mov
call
xchg
dec
and
cltd
push
add
xor
into
fiadds
adc
push
cld
fs
outsb
imul
fucom
mov
loope
ret
xor
sub
dec
xlat
leave
into
xor
dec
xor
lcall
mov
hlt
mov
les
and
mov
loopne,pn
push
jp
push
pusha
xor
jmp
cwtl
das
rcr
test
inc
adc
mov
in
inc
sub
repz
sbb
aam
xchg
jne
cs
jle
mull
mov
adc
add
lock
sub
je
mov
pop
xor
jbe
sarb
push
test
int
mov
xchg
pop
dec
push
or
dec
xor
sub
es
int
outsl
jg
xor
mov
xchg
dec
add
mov
xchg
pop
notl
repz
mov
or
sbb
fidivrl
xor
scas
add
daa
xor
push
add
ss
int
push
jp
and
shr
pop
sets
pop
stos
cmp
sbb
into
lcall
dec
movsl
add
shl
sbb
mov
add
push
or
insb
in
leave
add
dec
push
addr16
lret
testb
mov
sarl
shll
fidivs
push
stc
in
push
pushf
jg
dec
fdivl
push
and
je
jbe
fnstenv
out
dec
int
or
xchg
in
and
cmp
aas
sbb
call
xlat
xchg
lret
ljmp
add
sbb
mov
in
out
in
jae
in
loope
rorb
test
stos
test
inc
inc
out
push
test
inc
popf
jg
or
in
push
ret
sbb
push
cld
idivl
jb
jno
fwait
xchg
xchg
push
pushf
std
lods
loop
out
repz
xchg
push
outsl
cltd
add
xlat
mov
mov
mov
stc
push
sti
in
addr16
cmp
aas
cli
ja
xchg
pop
fcomps
sbb
push
lret
xor
dec
mov
jno
testb
cmp
xchg
es
lret
shl
mov
imul
sub
xchg
mov
leave
or
mov
mov
mov
push
fs
pop
mov
icebp
lods
gs
add
outsl
loope
movsb
outsl
cmp
push
xor
cmp
hlt
cltd
jmp
mov
cmpsl
jo
imul
andl
not
mov
ss
shlb
loope
add
mov
rcrb
and
std
divl
xchg
imul
adc
sub
outsl
mov
fldcw
pusha
leave
sti
mov
lods
pop
ret
fcoml
xchg
loop
pop
fidivs
aas
cs
push
ljmp
add
mov
jge
xlat
dec
or
lock
je
push
in
lods
mov
mov
loop
inc
gs
inc
sbb
fucomi
rcrl
or
sbb
stos
jmp
pop
dec
dec
into
add
mov
pop
mov
and
decl
outsb
mov
lea
pop
jmp
rclb
and
jne
in
rcll
stc
daa
push
jg
int3
repnz
pushl
fstpt
lcall
xor
push
cld
sbb
sbb
pop
adc
or
mov
fdivrl
std
mov
inc
imul
inc
test
sub
and
or
jle
fidivrs
jno
pop
sbb
mov
pop
adc
shlb
inc
push
or
bnd
in
dec
scas
xor
jmp
movntps
mov
out
fs
add
dec
insb
pop
add
xorl
and
mov
and
push
out
clc
xchg
icebp
aad
and
inc
add
mov
sbb
mov
aaa
out
pushf
mov
fistl
xor
cmp
fcmovu
fistpll
dec
inc
add
inc
xor
xchg
rol
xchg
fcmove
adc
xlat
iret
xor
add
aaa
push
and
fisubrs
fisubs
jle
popf
mulb
pop
in
mov
repnz
fistpll
std
out
insl
outsb
inc
xor
fisubs
xchg
mov
add
pop
std
mov
inc
push
mov
shll
pushf
cmp
pop
ret
add
js
sbb
out
test
jb
cmp
pop
jp
mov
xchg
adc
push
in
inc
loopne
and
lds
or
hlt
jecxz
inc
sub
mov
xor
es
xor
in
jbe
cli
mov
nop
leave
push
icebp
add
add
xchg
fcmovb
les
inc
push
cld
sub
addr16
push
mov
outsb
xor
xor
scas
xchg
lret
lcall
dec
sub
adc
scas
dec
and
or
mov
lods
shl
mov
sub
jne
xchg
lahf
pop
xchg
aas
fcomps
jle
cltd
cmp
or
sub
mov
cli
or
mov
xchg
xor
movsl
sub
dec
push
mov
out
and
mov
and
in
jecxz
cmp
ret
sub
nop
ljmp
push
sbb
mov
and
mov
xchg
sahf
popaw
loop
dec
loop
adc
mov
inc
or
loop
mov
arpl
daa
push
or
popf
dec
cltd
shrb
sarl
in
nop
push
and
inc
fstpt
jmp
mov
xor
xchg
xchg
or
mov
mov
mov
lret
mov
adc
add
fidivrl
stc
and
jns
sub
pop
int3
add
mov
xor
jbe
and
std
out
fwait
or
test
jmp
lods
out
inc
cmp
mov
out
and
inc
in
sbb
nopl
int3
jnp
add
mov
pop
jne
and
jecxz
mov
std
cmp
outsl
into
sub
in
pop
dec
lods
in
inc
out
mov
lahf
ret
test
xlat
fistl
xor
mov
xchg
mov
mov
pop
push
pop
stc
push
daa
or
sub
pop
sub
mov
fs
js
and
adc
mov
jae
sbb
ss
les
sub
imul
inc
ret
loope
jno
pop
adc
aad
lcall
sub
stos
rcl
icebp
mov
int3
insl
daa
jmp
and
lcall
xchg
cmc
sub
xchg
dec
fldt
out
sub
sub
cltd
and
cwtl
pop
and
repz
fsubs
adc
cld
sbb
lret
movd
clc
aad
dec
mov
stc
lahf
xchg
mov
sbb
sub
xor
mov
mov
fcoms
xchg
out
cmpsl
jle
xchg
push
movsl
sbb
js
es
adc
pusha
dec
pop
in
push
pop
adc
add
push
xchg
adc
or
icebp
pusha
sub
lret
cmpl
push
scas
in
jae
lea
pop
in
sub
bound
mov
or
enter
arpl
hlt
inc
mov
mov
mov
push
and
addr16
sbb
push
testb
dec
or
dec
cmc
sub
aas
ret
xor
std
shrb
in
pop
bound
aaa
pushf
adc
inc
mov
cmp
add
movsl
scas
mov
add
das
daa
cmpsl
jecxz
ds
pcmpgtw
jle
pusha
fnsave
dec
sbb
and
xor
mov
push
pop
test
mov
dec
cli
mov
and
and
mov
inc
testl
pop
inc
iret
loop
adc
aas
add
and
scas
js
fcmovu
xchg
jbe
xchg
mov
adc
mov
xlat
cmc
mov
push
mov
popl
fstpt
mov
jge
dec
sbb
jne
das
push
into
push
ja
pop
mov
and
push
shrl
mov
mov
std
fldenv
dec
sub
leave
cmp
fisttpll
jo
sub
pop
call
orb
loope
mov
sub
scas
out
insb
fstp
sub
stos
and
xor
imul
fcmovu
mov
imul
aaa
call
mov
out
mov
or
jne
xor
inc
sub
mov
popa
shll
test
fistl
cmp
mov
jecxz
pop
jp
adc
push
pop
idivb
orl
jmpw
out
loope
mov
or
mov
jp
mov
sub
inc
fadd
aam
mov
lds
mov
push
rclb
aad
sbb
ret
cmc
add
cmp
sub
addr16
movsb
cltd
fsts
and
cmp
out
pop
lods
mov
test
jbe
sub
iret
test
or
sbb
xor
rcrl
inc
idivl
jnp
hlt
cltd
xchg
inc
xchg
mov
and
mov
addr16
inc
sub
inc
sbb
sbb
jb
mov
jno
testb
loop
dec
insb
push
loope
sbb
insl
pop
dec
or
shr
push
dec
lret
and
outsl
cs
inc
push
cmpb
fisttps
jne
mov
icebp
lods
cli
inc
int
mov
xor
jbe
pop
mov
int
mov
add
xchg
fdivs
xchg
push
aaa
mov
pop
jecxz
repnz
mov
sub
or
or
dec
xchg
fwait
jp
mov
mov
orb
ja
xchg
daa
mov
cli
dec
je
pop
sub
lahf
leave
cltd
out
scas
pushf
inc
sub
leave
xchg
sarl
dec
or
repz
add
mov
jp
jmp
xor
cli
push
into
insl
outsb
inc
into
push
push
je
cmp
fidivrl
addr16
lds
sti
out
jp
into
jp
sub
or
mov
std
lret
jge
jecxz
ss
and
jl
daa
insl
or
mov
loope
gs
lahf
sub
mov
outsl
fidivrs
mov
inc
xchg
pusha
lret
xor
and
addl
outsb
test
lcall
cmp
or
dec
cwtl
push
jnp
sub
aad
int
dec
iret
mov
pop
das
or
cmp
sub
mov
andb
imul
andb
iret
movsl
xchg
jp
add
jne
ss
sub
cmp
dec
mov
add
in
adc
dec
mov
inc
ja
icebp
push
or
shl
and
cmp
repz
aad
or
popf
test
idivl
add
cmp
xchg
xor
cmp
imul
cwtl
sub
xchg
mov
loope
pushf
rcll
xchg
push
mov
shlb
push
jbe
mov
mov
xor
xchg
enter
out
aaa
sti
push
insb
addb
mov
mov
sbb
out
and
orl
out
mov
xchg
lcall
addr16
jl
and
mov
and
dec
loope
test
or
or
mov
fmul
bound
outsb
ror
cmp
mov
icebp
push
mov
aaa
ja
pusha
outsl
loop
or
mov
scas
push
lds
jle
push
int3
cmpl
pop
sbb
shlb
and
jne
pop
mull
or
repz
cmpb
inc
jo
pop
sbbb
and
mov
sti
loopne
inc
aad
pinsrw
adc
out
cmpl
shrl
lea
jnp
inc
sti
inc
mov
push
cmp
push
inc
repz
mov
mov
ret
xor
pop
nop
fwait
es
dec
jge
aad
pop
pushw
pop
or
cmp
or
clc
out
jp
mov
push
push
inc
pop
cmp
push
cltd
in
mov
fsubs
sub
and
aaa
push
sti
sahf
or
sbb
and
push
xchg
mov
or
inc
adc
jnp
mov
stos
mull
mov
inc
in
cmp
pop
mov
cs
push
xorl
andb
jns
mov
lret
pop
push
xchg
and
shl
enter
subb
rolb
loopne
push
les
popa
jb
mov
lds
pushf
in
insb
jle
jg
pushf
repz
sbb
cmp
jns,pt
cld
xlat
insb
gs
pusha
dec
out
sbb
add
push
cmp
dec
dec
dec
mov
add
dec
and
sub
in
pop
jns
push
leave
lods
dec
in
in
cmc
ljmp
xchg
cmp
jno
jb
notl
popf
loopne
and
cwtl
xchg
andl
xlat
or
adc
cmp
mov
xchg
loop
dec
sub
outsl
jb
jae
shrl
hlt
fimuls
pop
or
pop
mov
dec
mov
cld
dec
mov
mov
addl
arpl
dec
push
inc
cmp
mov
dec
mov
stos
and
fstpl
xor
inc
pop
mov
test
and
iret
aaa
or
xor
fcoms
setl
inc
pop
sub
sbb
fwait
lret
push
and
and
fwait
add
dec
lret
mov
xor
pop
and
je
add
mov
shl
jmp
cmp
mov
push
pushf
cli
jg
mov
adc
push
ljmp
pop
adc
sub
dec
lahf
pusha
xchg
or
clc
cmp
sbb
jp
or
mov
inc
adc
enter
add
leave
inc
lret
repz
lahf
es
outsb
xchg
subl
ret
mov
iret
lds
bound
repz
into
inc
push
out
push
cwtl
int
jns
mov
push
add
push
sub
lds
or
sub
fisttpl
and
scas
leave
ss
pop
lahf
movsb
xchg
push
jle
jecxz
scas
lret
xlat
insb
add
imul
or
mov
flds
cwtl
jbe
pop
mov
lea
mov
mov
stc
cmpsb
imul
aad
ret
out
iret
hlt
ss
rcrb
loopne,pn
das
aam
pop
jne
lock
lahf
lods
nop
add
jno
sub
mov
mov
cmp
fldt
fadd
sbb
jge
cmc
xlat
movsb
sub
add
lahf
dec
jp
lods
inc
sti
cmp
dec
aam
js
pusha
and
push
mov
stc
jmp
mov
mov
lods
and
test
mov
fs
movsb
sub
mov
fidivrl
mov
mov
add
sahf
loope
lcall
push
jle
dec
xchg
jo
dec
xor
cli
rcll
and
sahf
cmpsl
and
out
faddl
aaa
int
dec
pop
enter
aam
mov
jl
jns
cmc
pop
out
push
outsb
push
push
push
iret
test
ja
xlat
jl
and
jp
int3
add
out
call
inc
mov
bound
dec
ljmp
orl
imul
mov
mov
int
jb
sbb
aam
pop
add
sub
pop
in
pop
in
in
mov
pop
mov
xchg
mov
outsl
enter
cmp
aam
pop
mov
mov
out
int3
jns
jo
dec
jb
inc
adc
repz
add
sbb
shl
cmp
dec
mov
shll
mov
les
fstl
cmc
pop
cmpsl
push
imul
rcr
test
test
jg
aam
pusha
in
xchg
mov
xchg
xchg
ds
lret
mov
inc
jno
test
in
cmp
sti
dec
mov
je
inc
and
pop
sub
mov
cmp
lahf
mov
mov
js
std
jp
mov
xchg
pop
pop
fs
cmpsl
repnz
in
adc
out
popl
daa
dec
dec
dec
push
pop
js
orb
sbb
or
testl
sarl
mov
imul
cmp
imul
clc
or
pop
push
shll
test
sbb
pop
daa
outsl
push
jg
dec
ja
scas
xchg
mov
cmpsl
out
xlat
inc
iret
neg
out
pop
aas
pop
getsec
pop
daa
outsl
push
jg
dec
ja
scas
xchg
mov
cmpsl
out
xlat
inc
iret
neg
out
adc
pop
getsec
pop
outsl
push
jg
dec
jbe
scas
xchg
mov
cmpsl
out
inc
iret
neg
out
pop
ds
push
aaa
pop
and
jg
dec
negl
scas
push
lahf
rcrb
or
sbb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aas
push
das
push
pop
ss
jno
pop
sub
push
sub
xchg
scas
xchg
out
inc
fcomip
iret
out
push
das
push
pop
ss
jg
outsl
inc
pop
jbe
mov
out
mov
cmpsb
call
out
fbstp
push
pop
ss
jg
outsl
inc
pop
jbe
mov
xchg
shlb
test
jbe
das
pop
insb
pop
jge
aas
xchg
outsl
movsl
aam
mov
jge
jne
push
jecxz
and
dec
push
decb
xchg
push
sbb
aad
mov
dec
jle
jns
mov
sub
mov
xor
xlat
roll
and
mov
jns
jbe
pop
pop
xlat
pushw
mov
add
test
mov
jg
jg
mov
dec
mov
testb
xchg
fisttps
int
shl
stc
jne
aaa
fld
push
fs
pop
arpl
scas
push
rorl
in
cmp
or
imul
pop
stc
pop
push
out
filds
add
xchg
jecxz
xchg
lret
ret
out
add
loop
out
push
das
push
pop
ss
jg
outsl
inc
pop
jbe
mov
xchg
out
fcomip
iret
jns
inc
push
jp
push
adc
es
cmp
push
ss
rep
repnz
fsubp
loopne
mov
mov
hlt
fwait
cmpsl
cmp
pop
add
ss
cmp
add
pop
add
lods
repz
lret
mov
lods
lods
xchg
iret
mov
pop
dec
push
jbe
push
inc
jg
outsl
inc
pop
jbe
mov
xchg
out
fcomip
iret
out
push
das
push
pop
ss
jg
outsl
inc
pop
jbe
mov
xchg
out
fcomip
iret
out
push
mov
test
popa
movsl
lcall
je
fmuls
and
push
lock
aas
adc
aaa
mov
sbb
mov
or
push
and
inc
and
clc
aas
rolb
dec
push
push
xchg
pop
std
xchg
stos
push
add
jmp
iret
lcall
addb
daa
xchg
stos
xlat
pop
cld
push
add
and
pop
xor
cmp
cli
cmp
je
inc
arpl
roll
ljmp
dec
adc
jne
sbb
sub
and
in
push
jb
popf
lcall
das
mov
jnp
les
push
in
xor
mov
ret
mov
rcrl
dec
rol
mov
pop
push
pop
xor
sub
xorb
jb
test
pop
mov
ljmp
xchg
inc
lods
dec
dec
shll
lods
aas
jecxz
cmpps
sahf
sub
cmpb
mov
xor
push
bound
mov
mov
lods
dec
adc
mov
ljmp
ds
scas
or
in
mulb
mov
mov
adc
data16
mov
inc
mov
add
jp
push
imul
jnp
mov
mov
xor
movsl
jle
mov
or
mov
add
stc
sar
fdivp
cltd
stos
addr16
ret
lods
mov
pop
xor
mov
mov
and
xor
adc
and
mov
xlat
shlb
pop
jge
cwtl
dec
xorl
pop
into
in
out
lret
push
inc
push
mov
adc
lods
cmp
dec
je
arpl
dec
xor
dec
or
bnd
mov
push
fcoms
and
add
sbb
add
divb
xchg
sbb
clc
rcr
out
sub
idiv
imull
dec
loope
jle
cwtl
sbb
sti
adc
rep
sub
or
sar
test
loope,pt
clc
push
dec
mov
in
adc
add
jge
xor
aaa
xor
dec
mov
jg
in
add
sbb
sti
sbb
movsl
daa
mov
es
call
mov
ret
outsl
pop
mov
popf
dec
lret
cmp
cmp
mov
add
pushf
adc
mov
or
mov
push
add
lea
sahf
adc
cmp
pop
fucomi
std
sub
push
popa
das
rcrl
jne
xor
lock
mov
push
stos
scas
xchg
mov
jecxz
setge
and
add
xchg
mov
in
or
into
pop
mov
shr
jp
sbb
mov
jo
ljmp
jg
test
lods
or
lret
inc
cs
adc
xchg
cltd
movsb
jbe
fcoms
inc
movsb
add
call
fs
and
ds
push
out
lock
ret
mov
xor
scas
mov
adc
cmc
in
jge
add
dec
mov
js
icebp
out
push
xor
pusha
pop
repz
xchg
inc
shlb
jne
out
xor
rcl
dec
bound
testl
or
push
cmp
push
or
arpl
pop
cmp
movb
lcall
in
push
subb
mov
xchg
jle
inc
dec
imul
or
xor
insl
mov
nop
cltd
xchg
push
mov
mov
pop
sbb
icebp
pop
fists
dec
jae
and
stos
cmc
adc
jbe
inc
pop
shlb
jmp
cmp
iret
or
outsl
enter
outsl
out
jo
cmp
add
cld
lods
popf
loope
mov
adc
cmpsl
pusha
dec
out
adc
gs
cli
cltd
test
pop
pop
xchg
lcall
mov
jns
test
sub
add
lahf
test
pop
and
fmull
inc
sub
pop
gs
xchg
mov
cmp
mov
cmp
push
or
cmp
insb
dec
mov
jne
or
jo
inc
fsub
mov
and
ja
jne
hlt
push
aad
mov
loope
xor
mov
add
jae
lods
xchg
mov
sbb
inc
rcrl
repz
mov
orb
jno
and
aam
lret
push
leave
fldt
adc
pusha
sahf
sbbl
ret
dec
shlb
sti
jae
mov
fistpll
stos
sub
sarl
imul
sarl
lret
aas
mov
and
mov
or
mov
pop
cmpsl
jae
mov
pop
ljmp
mov
pop
and
sbb
pop
lret
sub
out
stos
and
jb
clc
push
movsb
lea
nop
mov
xchg
mov
push
sub
js
inc
in
fidivs
adc
xor
gs
rol
ds
mov
sahf
push
cmp
xchg
push
cmpsl
xor
cmc
test
sti
inc
jns
sahf
pop
outsb
xor
mov
pop
push
pop
imul
notl
adc
jb
jge
nop
inc
sbb
inc
jne
stos
insl
or
lock
pop
sbbl
add
pusha
out
cmp
test
icebp
and
loopne
les
icebp
gs
or
ret
push
stos
inc
ret
mov
cs
lcall
sbb
xor
out
and
ja
ret
adc
push
add
in
cltd
popf
test
loope
dec
add
fsubl
test
push
push
jg
adc
jbe
lds
cmp
rcrb
int3
imul
leave
or
rclb
es
sbbb
hlt
lcall
bound
pop
or
orl
sbb
rcrl
xchg
xchg
rclb
mov
mov
ds
lret
pusha
sti
inc
jle
jmp
mov
dec
fwait
addr16
out
in
pusha
inc
inc
adc
imul
cmp
pop
in
xchg
lock
das
fmuls
mov
push
in
add
cmp
mov
or
mov
mov
inc
cmp
mov
push
xchg
mov
loope
adc
pop
pop
fnstsw
shl
adc
out
sbb
out
push
push
ja
ret
pop
add
add
cli
inc
or
or
push
out
pop
nop
cs
leave
movsl
or
sbb
xchg
cwtl
js
or
ljmp
push
jns
sbb
sti
into
sub
adc
vshufps
ret
lds
pop
fs
test
test
push
movsb
je
push
subl
test
push
jecxz
rcl
xor
xchg
mov
mov
add
clc
loope
insb
add
or
mov
cmp
jecxz
subb
in
andb
adc
addb
pop
pop
add
fs
or
xchg
jnp
imul
mov
mov
add
xor
pop
push
sub
inc
xchg
pop
dec
jmp
dec
pop
sbb
add
inc
xchg
arpl
lahf
es
rcrb
out
loop
testb
dec
leave
out
xchg
frstor
pop
xchg
lods
dec
sub
test
daa
push
dec
sarl
xchg
dec
jo
bound
inc
popf
lock
push
outsb
fwait
test
push
lds
jge
cmc
jge
and
lock
xor
lea
bound
sub
push
fnstsw
outsb
shll
inc
jmp
add
jl
fcomps
lahf
insb
fiaddl
xor
mov
or
enter
fdivrl
out
arpl
faddl
sub
jns
arpl
subl
push
aad
adc
subb
rolb
sbb
sbb
xlat
and
idivl
pusha
push
adc
lock
ds
push
xchg
stos
cmpsb
imul
push
push
pop
out
popf
push
lret
out
int3
clc
loope
cmp
xor
jge
aaa
rolb
js
js
dec
jp
mov
inc
insl
andl
mov
jne
jle
sarb
pushw
hlt
and
push
adc
fcomip
mov
mov
fwait
insl
ret
aad
inc
inc
bound
sub
dec
aas
jle
mov
daa
mov
decb
scas
je
lahf
xchg
shll
dec
gs
cmpsl
xor
inc
mov
lods
lret
jge
gs
jne
xchg
sbb
imul
int3
dec
lods
aas
lds
sbb
add
mov
divl
insl
icebp
push
sub
inc
xor
jge
dec
in
in
or
shrb
or
rcrb
cld
add
cmp
sbb
pop
cmpsl
sub
mov
hlt
sub
push
aaa
xor
push
ljmp
push
stos
push
int3
int3
jae
jl
dec
mov
es
hlt
and
aas
mov
lods
and
insb
add
jo
or
jbe
aas
xchg
adc
mov
push
mov
push
mov
bound
sbb
cmp
shlb
jnp
fs
adc
jg
mov
lods
inc
jnp
xchg
mov
dec
daa
and
aaa
repnz
stc
pusha
or
add
ds
mov
mov
mov
mov
fsubrs
push
mov
push
cmp
data16
dec
mov
ror
mov
and
int
mov
jne
lods
ret
pop
fisubrl
stc
mov
sub
adc
push
fsubl
std
arpl
cld
jecxz
mov
movnti
mov
repz
fs
pop
jmp
std
mov
rol
cwtl
or
cmp
jp
xor
jg
outsb
or
or
sub
adc
inc
paddusb
stc
lds
inc
push
or
icebp
fwait
pop
cwtl
jl
popa
int3
pmuludq
xchg
rcrb
insl
adc
push
mov
iret
xorb
or
shll
pushf
mov
notl
fsts
adc
out
xor
xchg
xchg
in
jne
and
repz
fwait
xor
shl
mov
lea
out
hlt
loop
mov
jmp
outsb
push
pop
cmc
lahf
ds
pop
mov
cmp
call
aam
cmpsb
inc
pop
mov
push
push
cltd
lret
mov
or
inc
sub
and
ss
mov
mov
mov
sti
repnz
movsb
js
pop
rorb
jle
scas
leave
mov
sub
aam
insl
test
add
inc
sbb
xchg
jbe
lock
mov
fistpll
jnp
add
sarl
and
mov
inc
xchg
in
mov
cmp
lcall
push
nop
pop
lahf
stos
enter
fstpt
scas
bound
in
push
pop
push
jae
pop
cmp
incl
aas
cmp
mov
dec
jecxz
sarb
inc
add
out
add
lods
fsubl
lret
push
je
pop
loopne
movsb
js
in
in
sbb
sbb
test
inc
xor
lahf
addr16
aad
cld
jl
dec
sbb
divb
fisttpl
loope
in
or
mov
idivb
jg
loopne
ret
xchg
xabort
out
aas
call
xor
adc
fs
xlat
out
out
sub
imul
xchg
mov
cmp
gs
jns
or
adc
mov
lahf
jecxz
xchg
fwait
adc
xchg
mov
mov
and
mov
add
repz
mov
add
add
dec
mov
sub
cli
test
sub
jmp
insb
lods
xor
cld
lods
fildll
sbb
stos
cld
loopne
mov
adc
add
jp
dec
xor
xor
mov
push
orb
push
movsb
notl
add
mov
mov
std
outsl
sub
sbb
arpl
jle
mov
sbb
mov
push
mov
sysret
out
aaa
jle
test
adc
hlt
into
mov
inc
jbe
jbe
inc
into
std
cmp
add
xchg
outsl
mov
mov
pop
jns
gs
jae
mov
shrl
inc
mov
jne
add
jo
xor
inc
push
out
clc
push
cmp
mov
xor
sahf
imul
rol
cmp
push
lret
pop
test
pop
pop
ucomiss
mov
jmp
dec
sbb
subb
mov
cmp
aad
movsb
jle
cs
mov
mov
movsb
mov
push
pushf
or
mov
ljmp
insl
sub
int3
and
dec
jae
dec
push
and
mov
fistpll
in
adc
insl
subl
inc
pop
or
jmp
pusha
sti
xor
adc
and
fidivrs
pop
pop
jmp
mov
sbb
xor
jp
icebp
or
shll
aam
push
imul
cmpsb
das
sbb
xlat
cmp
int3
adc
cld
mov
test
mov
and
adcl
inc
push
subb
imul
or
pop
ds
push
das
mov
cmp
jg
inc
mov
insb
pusha
sbb
mov
push
sbb
stos
rorb
push
xor
cld
adc
iret
cmp
push
push
pop
inc
lea
es
lret
mov
jae
dec
xchg
lds
jmp
sbb
and
and
sbb
mov
add
stos
mov
pushf
mov
cmp
dec
call
mov
add
movsb
rclb
jbe
andl
fildll
loopne
out
js
movsb
es
xchg
xchg
pusha
mov
xchg
jbe
mov
pop
push
mov
mov
in
data16
sbb
inc
mov
shrl
mov
adc
sub
sub
mov
mov
fcoml
leave
mov
rclb
mov
cld
gs
mov
arpl
iret
subb
add
push
insb
popa
sti
pushf
pop
outsb
shl
mov
loope
jl
jnp
decb
jne
mov
sbb
jp
xchg
cmp
pop
mov
pop
push
js
jne
push
inc
xchg
out
arpl
imul
xchg
sbb
sbb
mov
cmp
xchg
in
sub
jae
aaa
sub
daa
bound
pop
sbb
sahf
jp
or
and
ret
dec
pushf
dec
outsl
sbb
sbb
cwtl
scas
push
daa
sub
or
test
or
sti
ljmp
testl
or
mov
mov
or
or
cmp
xor
lods
lock
mov
inc
sbb
adc
xor
cmp
and
fdivs
lret
xchg
or
mov
lret
cmp
dec
mov
adc
loope
movsb
ret
and
aad
rcll
push
mov
aam
inc
test
dec
push
cmpsl
test
push
mov
ss
out
jns
and
lods
sub
xor
and
mov
rorb
fcompl
pop
fstps
dec
pop
xchg
test
sub
ljmp
push
data16
push
mov
mov
dec
cmp
jle
iret
mov
out
subb
sub
add
negl
in
jb
ljmp
mov
fldt
ja
xor
pop
outsb
outsl
push
lea
push
pop
mov
or
ds
inc
mov
repnz
mov
fdivrl
and
add
sub
aad
fmuls
psrlq
inc
lcall
xor
mov
cmp
in
add
mov
dec
out
xlat
lds
aad
mov
icebp
aaa
jnp
dec
movsb
psubq
mov
outsl
test
enter
jae
mov
fstpl
mov
popa
inc
and
leave
inc
je
jns
lcall
push
mov
imull
and
enter
sub
shll
leave
sbb
rolb
aad
subb
aas
jno
mov
cmp
push
lcall
fwait
adc
xor
ss
adc
xchg
push
push
push
dec
imul
pop
out
jns
mov
loope
clc
enter
insl
jae
insb
cmp
adc
mov
cwtl
jbe
jo
into
mov
mov
pop
dec
ljmp
sbb
xorl
and
mov
loop
adc
xorb
jno
xchg
or
out
push
xchg
lods
aaa
insl
adc
xchg
das
pop
das
rol
mov
jb
mov
mov
xchg
mov
push
out
test
imul
adc
or
jl
push
imul
add
loope
mov
mov
das
pushl
adc
adc
mov
aad
xor
std
test
scas
int
cs
cmpsb
mov
sub
shrl
and
dec
xchg
in
std
test
push
movsl
push
fs
push
mov
mov
add
lcall
sbb
jg
xchg
movsb
push
loop
push
cwtl
add
or
mov
int3
xor
aam
insb
jge
push
mov
psubsw
xchg
out
inc
sub
je
push
xor
jbe
and
cmp
dec
add
jmp
push
imul
and
les
cmpsl
negl
inc
jle
aaa
pop
repnz
imul
popa
mov
xchg
mov
scas
sbb
icebp
outsl
push
jae
cli
loopne
cmp
xor
push
imul
sbb
add
mov
mov
jp
fsubl
mov
test
xchg
cmpsb
xor
jae,pt
call
xchg
xchg
lock
les
dec
jl
or
push
mov
ja
sbbb
sbb
sub
cmp
hlt
xor
dec
mov
inc
or
sub
inc
bound
pop
sbb
subl
pop
jae
mov
ds
inc
mov
push
rol
xchg
adc
fwait
push
pusha
sbb
repnz
push
mov
sti
out
fs
mov
mov
into
test
lret
jle
shrl
xor
or
xchg
inc
jmp
fstps
ja
push
mov
xlat
mov
ja
xor
in
push
cmp
cs
xchg
mov
sbb
xor
mov
imulb
xchg
mov
mov
add
pop
je
mov
iret
adc
and
repnz
mov
out
jg
sti
loopne
xor
push
push
fwait
inc
lock
dec
stos
cmp
loop
out
inc
sbb
pop
pop
subb
xchg
sub
dec
pusha
outsl
inc
nop
inc
or
sub
int
cmp
in
mov
nop
jl
mov
adc
mov
xchg
inc
stos
pop
inc
mov
or
push
das
pop
or
push
jle
out
push
mov
push
mov
addb
andb
mov
lret
add
ljmp
test
les
ret
cwtl
xchg
push
xchg
push
add
pop
cmp
frstor
rolb
aad
ret
ja
test
or
sbbl
ja
or
sbbb
mov
mov
xchg
xchg
ja
loope
jle
xlat
xchg
dec
stc
mov
out
mov
mov
inc
sbbb
stos
push
mov
ds
decb
lds
mov
mov
dec
push
pop
sub
mov
jnp
sti
adc
pop
imul
jb
out
pop
dec
jb
push
xorl
ds
cld
enter
loope
popf
jae
les
daa
imul
cwtl
popf
or
out
out
jmp
push
adc
jle
in
push
test
test
into
jb
mov
mov
insb
push
jb
jbe
and
mov
lret
outsb
lock
lret
xchg
xor
xor
or
xchg
pop
mov
loopne
and
jne
jecxz
mov
stos
jl
jns
push
and
jle
add
mov
rcl
repz
xchg
mov
push
test
sub
push
rolb
adc
mov
jae
jae
imul
and
out
or
fs
movsl
mov
cmp
std
sbb
repz
fisttpll
mov
aam
mov
icebp
cmc
xchg
cwtl
sbbb
fst
ror
fwait
cmp
ja
je
pop
movsl
push
jnp
fs
pop
sub
shrl
sbb
cld
or
pop
sub
push
fxch
dec
jge
pushf
lods
cld
and
pop
mov
inc
imul
loope
aam
push
push
lods
adc
imull
sbb
xor
xchg
lock
push
xor
push
outsl
inc
pop
jbe
mov
xchg
out
fcomip
iret
out
push
das
push
pop
ss
jg
outsl
inc
pop
jbe
mov
xchg
out
fcomip
iret
out
push
das
xchg
mov
es
outsl
pop
jbe
mov
xchg
out
fcomip
iret
out
push
das
push
pop
ss
jg
outsl
inc
pop
jbe
mov
sub
mov
rorl
or
sbb
imul
std
xchg
adcl
fidivs
cli
add
xor
bound
push
fwait
mov
mov
mov
xchg
pop
loop
repnz
or
outsl
sub
xor
lretw
rcr
fnstenv
inc
mov
mov
push
mov
xor
and
adc
add
jmp
fsubrs
data16
dec
in
iret
xor
cmp
shlb
mov
into
cs
cmp
jecxz
cli
icebp
call
lret
iret
fcoms
push
mov
dec
je
loop
imul
addb
and
hlt
sbb
jmp
int
std
fwait
pop
and
lret
and
arpl
divl
add
mov
lret
jmp
sti
push
mov
aaa
add
mov
test
sbb
sub
sub
jg
sahf
push
or
add
push
out
and
add
inc
out
dec
test
mov
das
mov
xor
add
jae
pop
int
pop
xor
enter
iret
fsubrs
bswap
mov
rcrl
jns
and
stc
dec
fldl
adc
andl
mov
bound
adcb
repnz
cmp
or
add
jmp
jecxz
rorb
ret
push
inc
xchg
dec
lcall
idivb
xchg
lahf
pop
shlb
push
test
sti
jo
jl
push
into
push
mov
mov
cmp
jne
jg
sub
lahf
xor
pop
fildl
mov
lret
imul
lcall
sbb
jmp
sti
add
adc
bound
push
fwait
mov
dec
xchg
pop
loop
repnz
or
sbb
jmp
sti
add
adc
bound
push
fwait
mov
int3
cli
pop
int
fisubs
or
inc
pop
cld
shll
js
jmp
jecxz
mov
je
pop
jae
stos
sarb
mov
inc
xchg
inc
fsubrl
inc
shll
dec
lods
hlt
inc
mov
cltd
ja
loop
cs
or
fmul
shlb
mov
mov
jbe
inc
cmp
daa
mov
mov
insl
pop
push
inc
adc
movsb
mov
mov
mov
lock
xor
mov
or
stc
mov
and
dec
dec
psrad
add
andl
repnz
jae
sbb
out
push
xchg
test
xchg
sub
sti
loop
nop
fidivs
jbe
add
dec
sbbb
ficomps
mov
dec
pop
xchg
repz
dec
cli
pop
daa
ds
shlb
jb
lods
sub
xchg
xchg
sbb
jl
popf
cs
jecxz
imulb
iret
mov
fs
xchg
in
inc
add
xchg
std
adc
call
adc
xor
int
vprotq
mov
movsb
stc
repnz
or
push
scas
lea
in
testb
dec
inc
sub
es
xchg
xchg
out
push
mov
repnz
es
or
into
int
xchg
add
outsl
leave
dec
enter
jp
in
sar
lds
pop
int
addr16
mov
mov
arpl
mov
aam
or
gs
stos
ss
mov
fcomps
out
imul
ljmp
push
sbb
xchg
fcomps
lock
pushf
jae
jbe
xchg
hlt
jl
test
ret
inc
incl
in
sub
aam
fwait
out
and
cli
shrb
inc
pop
xchg
test
stos
cmp
cli
push
lds
mov
test
mov
imul
lea
sbb
js
iret
cmp
mov
push
pop
lret
add
push
pop
cltd
add
add
push
sbb
bound
fstl
mov
lea
out
dec
imul
inc
ljmp
dec
inc
test
in
repnz
hlt
or
dec
xchg
idivb
inc
sub
xchg
fstps
fisttps
xchg
les
loope
pop
cltd
xchg
push
fs
and
mov
out
sub
sub
xor
cwtl
lret
cltd
sbb
inc
mov
ss
nop
push
stos
adc
cmpsb
les
out
push
xchg
roll
out
scas
mov
dec
dec
std
mov
cmp
cld
sub
or
xlat
push
jge
fiadds
sarb
pusha
mov
and
arpl
push
aad
sahf
je
jae
pop
xor
aaa
or
xchg
lar
sahf
lock
aas
xlat
mov
outsb
sbb
sbb
jl
shlb
int3
adc
adc
int
scas
out
push
test
bound
mov
push
lods
lret
adc
bound
push
pushf
and
pop
fnstenv
pop
sahf
mov
jnp
mov
jmp
xchg
cmp
mov
orl
mov
pop
lods
mov
cmp
jle
jno
mov
push
je
lea
ret
jecxz
cmpsb
jne
jmp
fwait
subb
enter
je
or
and
sbb
imul
test
lcall
ja
or
mov
xor
jmp
push
ds
jbe
cwtl
ret
rcll
inc
xchg
frstor
lds
jo
popa
lahf
mov
lods
movsl
cltd
fidivs
dec
adc
cld
add
dec
aas
mov
test
imul
or
in
xchg
idivl
lods
pop
adc
in
imul
hlt
jns
mov
rcrl
jo
loope
cwtl
ja
push
dec
in
mov
imul
pop
cmpl
pop
push
push
test
push
xor
pusha
mov
in
sahf
mov
enter
adcb
pop
shll
pop
mov
dec
dec
insl
adc
ret
rolb
mov
jae
sahf
jae
gs
je
into
dec
imul
push
movsl
push
idivb
les
leave
movsb
stos
lods
mov
or
push
and
push
cld
gs
push
cmpl
sbb
sub
add
lods
push
scas
out
lods
mov
pop
or
repz
add
pop
mov
cmp
fstl
xchg
js
push
jmp
cmpsb
mov
push
jge
scas
int3
aaa
fidivrs
push
scas
push
ret
xchg
mov
insb
in
sbb
xchg
xor
jl
ja
repz
cmp
bound
ret
adc
repz
xor
cwtl
ret
or
sbb
push
test
stos
jmp
into
dec
xor
mov
lret
ss
mov
sub
jmp
pusha
mov
fdivl
lea
xor
rcrl
shlb
or
ss
cmp
mov
out
enter
xor
punpckhwd
mov
inc
test
cli
dec
jge
pop
out
push
jl
out
cli
clc
fldl
test
imul
mov
sbbb
sub
push
xchg
sub
paddq
cs
mov
xchg
mov
enter
mov
cmc
pushf
and
hlt
jmp
shlb
push
dec
stc
lret
push
sbb
xchg
andb
inc
xchg
dec
rolb
add
lret
pop
scas
add
sbb
ljmp
inc
nop
lcall
inc
cs
clc
adc
xor
dec
test
andb
lahf
pop
in
cs
test
push
dec
popa
cmc
movb
push
and
std
pop
mov
jbe
cmc
pop
push
outsl
pop
ret
sbb
and
rorb
pop
push
jae
pop
in
test
shl
sahf
aam
jbe
aad
fucomp
mov
idiv
push
decb
out
lods
retw
imul
jae
imul
dec
pop
ret
sub
mov
mov
std
pop
ljmp
cmc
push
cltd
fmull
sar
inc
mov
ret
scas
xchg
xlat
jo
mov
cs
mov
mov
popa
fisubrl
dec
mov
pop
es
xor
cmpsb
dec
xlat
mov
scas
popf
adc
adc
jnp
shll
dec
inc
push
sub
push
jae
ds
insl
out
popa
xchg
cmc
lock
es
cli
add
lods
shll
stos
mov
xor
mov
jbe
sub
sti
inc
je
add
xor
inc
mov
imul
sub
ss
mov
std
into
cmpsb
jg
outsb
xchg
and
out
shll
rcr
loop
and
or
shlb
adc
cltd
and
movsl
fisubl
pop
nop
adc
sbb
dec
xchg
orb
fs
psraw
outsb
inc
insb
xchg
imul
dec
sbb
push
orl
loope
lods
cs
out
add
in
xchg
pushf
add
push
popa
and
xor
fistpll
cmpsl
call
fcoml
out
mov
lret
iret
or
and
ljmp
push
mov
and
dec
test
sub
mov
adc
push
sub
ljmp
js
sti
lcall
cmc
divb
inc
add
pusha
push
pusha
std
andl
aam
xor
lret
test
loopne
sub
imul
leave
pop
into
std
mov
test
mov
rcll
subl
jno
in
mov
xor
inc
push
in
add
movsl
sbb
dec
std
pop
dec
scas
int
mov
jne
lcall
cmp
jno
sub
or
mov
xor
pusha
xchg
ret
je
aaa
dec
sbb
icebp
pop
int
mov
push
sbb
mov
mov
scas
xor
push
add
or
push
pop
mov
mov
shlb
into
add
mov
fildll
inc
xchg
loop
jp
sbbb
push
add
jl
notl
jb
out
pushf
mov
mov
addb
inc
sbb
sub
in
out
icebp
insl
mov
mov
std
in
enter
inc
test
inc
lret
add
dec
pop
sub
mov
inc
je
lods
xor
push
loop
xchg
incl
cmp
push
mov
sbb
and
lea
fsts
or
rcrl
adc
xchg
scas
cmp
add
xlat
stos
and
jge
imul
rcll
cmp
or
out
idivl
xchg
cmp
jnp
movsl
fdivrp
cli
fdivs
das
push
sub
fldt
mov
mov
scas
addr16
jns
arpl
cmpsb
cmpsb
test
ret
inc
or
and
divb
je
jecxz
mov
xchg
adc
dec
ds
inc
fs
mov
sbb
sub
mov
lods
mov
aas
add
fsubs
not
xchg
cltd
stos
je
test
inc
inc
cmp
jo
std
insb
cltd
and
dec
and
xor
sub
sub
es
and
mov
cmp
pop
mov
mov
adc
sbb
int
repz
and
imul
jle
cmp
xor
lock
mov
xchg
mov
in
xchg
int
xchg
jns
mov
cmp
push
dec
flds
test
sbb
fdivrl
dec
or
pop
xchg
and
gs
out
outsb
out
lods
aaa
push
repnz
loope
cli
subl
or
jno
dec
rorb
xor
into
shrb
mov
aam
pushf
lods
in
loopne
shr
shrl
and
aaa
jns
sbb
xchg
push
shrb
test
jbe
scas
ljmp
cltd
jle
sahf
aam
sub
lods
andl
jp
loop
jns
ret
mov
rcrl
enter
jecxz
call
mov
inc
push
push
add
add
mov
pop
jp
inc
inc
ret
in
fucomi
pop
adc
sbb
pop
jo
push
and
arpl
inc
and
fucomp
xor
sub
push
cmp
out
in
mov
fwait
mov
and
jge
ret
std
dec
fildl
xor
sbb
jmp
mov
fs
push
pop
rcr
sub
dec
int3
inc
push
push
test
inc
lret
flds
mov
ja
insb
test
inc
dec
mov
cli
sbb
js
mov
sbb
pop
lods
stos
mov
jnp
cmp
cli
xor
in
cmp
dec
call
fs
inc
and
sarb
mov
int3
push
xchg
dec
test
out
addr16
addb
in
mov
pop
lods
adc
push
aas
stos
pop
mov
cld
mov
jnp
adc
cwtl
pop
test
jg
xor
dec
inc
outsb
imul
xchg
adc
aam
cmp
lcall
pop
lret
mov
xor
mov
jge
xchg
xchg
adc
cmpsl
stc
icebp
ret
xor
fistps
stos
cmpl
push
adc
ljmp
inc
jo
fs
lds
rorl
mov
std
push
out
xor
push
shll
dec
adc
les
fidivl
mov
movups
mov
outsb
incb
mov
mov
mov
out
fs
push
arpl
adc
push
or
nop
std
pop
cmp
push
stos
mov
das
or
mov
sarb
test
push
ficompl
out
mov
nopl
xchg
sub
mov
xchg
jl
and
mov
jge
prefetch
sahf
cli
sbb
dec
xchg
pop
jne
jecxz
cmp
adc
and
aam
jmp
nop
mov
aam
push
ja
add
sub
jmp
sti
loop
inc
mov
add
add
loopne
jmp
xchg
jns
push
call
les
iret
mov
sti
bound
sub
pusha
push
decl
push
cmpsl
sbbl
out
addl
inc
xchg
test
dec
in
sub
or
push
fdivr
insl
pop
dec
inc
mov
int3
adc
and
jae
adc
jne
div
push
test
or
repnz
int3
dec
fyl2x
sbb
add
aaa
inc
vphaddubw
push
xorl
push
cmpsl
daa
lea
and
ret
mov
mov
and
imul
xchg
jo
or
inc
rcrl
lahf
or
std
cltd
shlb
ss
lret
xchg
faddp
or
inc
xor
or
pop
cmpsl
mov
std
outsl
jge
out
add
inc
xchg
mov
push
pop
pushl
sub
jmp
or
mov
xchg
popa
jbe
jecxz
mov
test
notl
sub
rcll
shll
inc
dec
sub
mov
ds
inc
bound
mov
loope
jg
aas
das
fstp
divl
lods
test
fwait
mov
add
push
in
repnz
clc
xchg
mov
jmp
in
sbb
mov
pop
pop
mov
pop
in
stc
sbb
into
dec
addb
and
rolb
outsl
into
cli
push
and
xor
mov
mov
sbb
or
loop
jmp
repnz
adc
fnstsw
popf
ret
jno
xor
xor
rcrb
jns
jae
movsl
aad
and
outsb
xchg
inc
pop
mov
movsl
rolb
out
in
add
fsubl
jge
in
test
jo
ss
and
adc
das
and
xor
neg
dec
arpl
add
sub
pop
sbb
inc
add
orl
cmp
xor
push
decl
push
add
pop
push
outsl
sarl
sbbl
subl
out
mov
rolb
jns
jbe
add
out
shr
push
pop
jge
push
xor
pop
lock
jo
xor
mov
sub
lock
lea
push
xchg
inc
dec
clc
jne
inc
fbstp
fucomip
pop
adc
xlat
pop
je
test
jae
dec
pop
loopne
movsb
dec
inc
sbb
pop
cli
add
pop
in
mov
push
inc
orl
jg
lcall
daa
mov
lods
mov
lea
mov
in
das
fimuls
jmp
pop
int3
mov
lock
jecxz,pn
inc
push
jl
adc
dec
mov
dec
add
mov
pop
mov
jnp
adc
inc
adc
fcompl
adc
stos
insl
sahf
jl
inc
adc
mov
cmp
mov
sub
mov
arpl
xchg
mov
es
adc
lret
push
and
add
xchg
jns
dec
sbb
inc
cmc
lods
fcmovne
add
or
jo
jge
pop
aad
lods
adc
cli
out
push
dec
adcl
mov
push
mov
mov
add
cmp
stos
movsb
pusha
faddl
mov
or
loopne
xchg
gs
pop
cmp
shll
fmul
test
sahf
pop
mov
popa
xchg
xor
mov
les
inc
out
jl
and
iret
inc
jbe
inc
add
loope
xor
push
les
shlb
mov
out
cmpsb
shll
inc
jmp
in
cltd
cs
sub
scas
sti
inc
add
jecxz
out
mov
and
xchg
cwtl
imul
aas
test
xchg
pop
and
xor
loope
aam
mov
repz
and
adc
lret
repnz
dec
aas
and
cmp
dec
mov
sbb
mov
inc
mov
sub
xor
test
ret
sti
dec
adc
and
cltd
gs
repz
movsb
out
mov
jg
mov
sub
js
fwait
sub
cmpsl
dec
pop
or
push
mov
mov
loop
and
lcall
ljmp
sbb
mov
mov
lret
xlat
das
cmp
xlat
mov
adc
stos
and
mov
bound
data16
not
lods
or
and
lret
push
popf
test
inc
mov
adc
cmc
or
jmp
and
sub
addr16
xchg
push
push
shrb
push
xor
inc
fcomps
add
mov
cmp
jle
leave
shlb
imul
popa
les
dec
dec
mov
repz
sbb
push
stos
das
jmp
add
into
and
arpl
and
dec
stos
lahf
or
lods
leave
orb
pop
movsb
sarb
dec
out
and
call
dec
mov
orl
stc
add
fistps
lea
lcall
insl
xchg
jmp
fwait
cmp
arpl
shll
jge
and
sub
lcall
cld
sbb
cmp
cmp
push
jno
push
stos
int3
jecxz
jge
add
sarb
pusha
int3
in
xor
xor
scas
sti
scas
or
dec
cmp
sbb
shll
lahf
roll
pop
adc
pushf
dec
pop
push
inc
adc
outsl
cmc
adc
xchg
in
out
out
mov
xchg
mov
jge
fnstsw
cmpsb
lods
xchg
ds
or
push
jl
ret
push
jae
insl
jo
jae
or
stos
xchg
sbb
push
lea
in
stos
sbb
test
add
cmpsl
push
lahf
mov
sbb
sub
ds
scas
add
xchg
xor
mov
call
out
adc
cltd
les
sarl
cmpsl
and
push
xchg
hlt
in
pop
scas
mov
xor
mov
xlat
sub
add
cmp
sub
sbb
xor
or
aam
repz
ja
fs
out
insb
sub
test
jp
nop
and
push
jnp
fwait
mov
push
adc
repnz
mov
mov
jge
mov
jo
out
inc
sbb
inc
outsb
xlat
rcll
out
in
mov
cmp
mov
sub
sub
add
sbb
cld
jle
scas
lea
fmul
xor
push
fstl
mov
or
dec
cltd
es
fldt
stos
xor
iret
mov
xor
insl
dec
aam
rol
popf
aaa
jge
adc
hlt
movsb
lock
ret
fxch
in
push
scas
pop
ljmp
cmc
or
aad
movsb
mov
and
xchg
sbb
imul
cmp
pop
cwtl
loope
sbb
sti
in
mov
test
lock
dec
sbb
cli
xor
jl
mov
mov
and
mov
xor
cmp
call
cwtl
jb
xchg
push
and
sbb
ds
loopne
mov
lcall
xchg
dec
jg
cmpsb
jge
cmp
or
mov
mov
pop
arpl
dec
xor
fs
dec
shl
pop
mov
jns
jbe
push
sahf
add
jp
mov
arpl
das
or
inc
test
xlat
xor
or
into
mov
cmpsl
xchg
or
mov
inc
loopne
lret
divl
ret
stos
dec
jl
out
cwtl
lods
imul
sbb
push
cmpsb
mov
jnp
pushf
ja
loop
mov
stos
mov
dec
dec
cmp
push
add
loope
cmp
mov
sti
ss
ret
lret
cmovs
jno
sub
std
subl
test
fidivrs
push
mov
mov
js
lret
xchg
xorl
addr16
aas
jne
fwait
dec
lahf
push
les
fbstp
sti
out
pmuludq
les
cmp
test
orb
stc
jg
pop
je
jecxz
popa
jbe
xchg
mov
cmpl
ja
rorl
sti
sub
iret
xchg
xchg
das
mov
sub
lahf
push
push
inc
dec
push
sub
clc
das
bound
ds
dec
inc
add
lock
int3
cmp
iret
sub
cmp
mov
movsb
test
pop
stos
mov
aad
cmpsb
jg
cmp
fwait
icebp
scas
bound
dec
test
nopl
enter
jns
mov
xchg
mov
push
je
shrb
fldt
jno
pop
jg
je
in
lret
test
inc
mov
cmp
sub
sbb
sbbb
xchg
fs
es
ja
lea
jno
lcall
pusha
and
fidivs
sub
adc
lds
jl
mov
movsb
mov
adc
sbb
daa
int3
mov
les
pushf
scas
cmova
mov
xchg
pop
loop
repnz
or
sbb
jmp
sti
add
adc
bound
push
fwait
mov
dec
xchg
pop
loop
repnz
or
sbb
jmp
sti
add
adc
bound
push
fwait
mov
dec
xchg
pop
loop
repnz
or
sbb
jmp
sti
push
lret
adc
bound
arpl
mov
xchg
pop
loop
repnz
push
fcmovnu
jmp
push
test
adc
hlt
lods
in
mov
ss
repnz
rcll
jnp
xchg
mov
pusha
aam
notb
push
push
mov
ss
inc
loope
icebp
shlw
and
adc
add
jno
inc
notb
mov
cs
pop
loope
icebp
jle
jbe
lahf
and
jg
daa
mov
outsl
in
jns
rolb
adc
ret
add
out
pop
into
call
xchg
xchg
mov
icebp
push
jl
dec
jecxz
add
mov
add
jno
sub
stc
or
stc
mov
jno
push
jo
test
adc
and
sahf
pop
cmp
sahf
sub
int3
negb
out
xchg
adc
mov
leave
ja
or
dec
xchg
cmp
xchg
insl
xor
push
push
popa
fwait
dec
stos
jle
pushf
mov
nop
xchg
xchg
push
and
incb
ds
popa
sbb
out
out
clc
mulb
mov
dec
jle
jns
sbb
xorl
out
imulb
xorl
icebp
shrw
and
adc
popa
into
jno
inc
notb
push
jae
inc
rolb
cmpsb
xor
xchg
sub
push
shlb
adc
fwait
xor
int
fisttpll
inc
repnz
and
inc
cmpsb
testw
out
and
add
dec
in
jmp
shlw
and
adc
popa
jno
inc
notb
mov
ss
inc
loope
icebp
shlw
and
adc
popa
jno
inc
notb
mov
inc
push
sub
jb
xchg
mov
cmpsl
xor
das
dec
jae
cmp
cli
cwtl
lods
xor
cmp
jle
shrb
pop
pop
push
ficoms
mov
inc
add
lcall
roll
mov
std
jae
sub
ljmp
mov
mov
xchg
adc
xor
insb
inc
jae
test
and
sub
out
mov
mov
das
ret
push
clc
cmc
cltd
mov
push
xchg
negb
xchg
imul
mov
ja
push
loop
jns
rcr
push
mov
mov
jp
scas
lock
mov
pop
jp
js
nop
xor
pop
in
adc
sbb
xor
sub
mov
int
lods
ja
jnp
push
ss
cmpsb
scas
push
cwtl
adcl
jo
cmp
jno
lods
pop
pop
dec
mov
and
cmp
in
add
sahf
fstpl
adc
inc
push
nop
add
mov
pop
sbb
rorl
loopne
mov
jecxz
int
flds
in
loopne
or
aas
xor
cmp
add
inc
je
dec
sub
and
pop
pop
out
adc
and
ds
hlt
cmp
stos
adc
cmp
subl
pop
jl
dec
add
sbb
ja
xchg
mov
adc
imul
stos
icebp
jns
xorb
cs
jmp
pop
cmp
mov
add
xchg
fldenv
mov
icebp
push
mov
aad
cli
push
pop
out
mov
jl
xchg
lret
ret
adc
fwait
add
cmp
or
out
sti
jle
mov
shl
jp
push
stos
test
daa
add
pop
xor
dec
dec
xchg
stos
sub
jb
inc
in
sbb
push
cmpsb
hlt
cli
scas
lahf
or
leave
or
sbb
cwtl
cwtl
push
xchg
xchg
int
pushf
sbb
jno
xchg
lret
call
pop
cmpsb
push
mov
mov
sub
test
xchg
andl
dec
jecxz
fcompl
mov
in
push
mov
sbb
jns
sbb
pop
and
jae
xchg
pop
inc
fidivs
into
ja
xor
adc
stos
subb
inc
jne
jno
mov
in
add
aaa
shr
sub
push
mov
inc
jp
and
lcall
flds
xor
movl
cwtl
adc
movsb
aas
add
nop
shll
xor
popa
scas
pop
movl
fwait
mov
js
dec
inc
arpl
orl
mov
push
lret
cmp
shlb
mov
arpl
std
adc
fildl
in
nop
xor
add
mov
lods
aas
mov
scas
push
sbb
jg
pop
roll
jno
sarb
push
gs
mov
xor
mov
out
mov
sub
xor
jno
mov
loop
xor
adc
or
scas
dec
loopne
movsb
fadds
sti
sbb
xchg
jno
clc
xor
pushf
int
dec
pop
cwtl
mov
cmp
xor
push
jl
pop
mov
mov
jmp
add
mov
or
and
js
push
push
enter
mov
adc
addr16
imul
mov
push
test
mov
pop
sti
shll
sbb
or
aas
pop
fsubl
sti
pop
push
inc
jo
call
test
fcompl
fsubrs
or
mov
fwait
push
jp
cltd
push
mov
mov
mov
pop
or
jno
cmp
sub
movsl
ss
aam
and
outsl
adc
add
test
sbb
jmp
pop
pop
outsl
imull
pop
pop
test
stos
sbb
ret
scas
adc
hlt
lock
in
jg
xchg
mov
xor
jecxz
sub
repz
call
cmp
xchg
popa
sbb
int
stos
sbb
ret
sar
push
popa
and
pushf
mov
jmp
ja
shrd
pop
dec
and
insb
dec
imul
fdivrl
loopne
inc
mov
lea
rcl
xchg
mov
test
jbe
andb
mov
cmp
in
or
adc
cmp
ss
mov
loope
dec
adc
lea
pop
jge
roll
or
add
xor
call
mov
ret
das
jmp
jae
cli
xor
icebp
in
dec
nop
fsts
jb
lea
int
mov
add
js
sbb
fstps
inc
mov
sbb
pop
dec
leave
stos
enter
sbb
sbb
daa
scas
inc
jo
xchg
pop
cmpsb
inc
lock
pop
sti
jae
jo
sbb
ss
ja
xor
hlt
jnp
cli
popf
out
jnp
mov
int
push
or
cmp
psubb
addr16
mov
dec
mov
popa
sub
lcall
adc
push
bound
cmpsb
test
push
data16
clc
dec
out
scas
sub
mov
cmc
mov
test
pusha
aad
sbb
sbb
out
cmpsb
or
add
test
xchg
jge
in
mov
add
imul
xorb
dec
cmc
dec
push
mov
sbb
sub
decb
mov
and
mov
add
nop
push
sbb
sbb
dec
icebp
mov
stos
mov
push
pop
mov
cmpsb
inc
test
xor
cmc
hlt
sbb
test
les
jge
mov
inc
and
sbb
outsb
push
jns
movsl
push
jae
add
mov
cmp
lcall
lods
es
or
lea
sbb
xor
lret
mov
clc
cs
outsb
push
pusha
and
pop
stos
int
dec
paddsb
mov
scas
xchg
imul
fsubr
push
lret
lahf
aad
jb
std
dec
lods
xorl
orl
je
mov
enter
adc
popa
mov
push
mov
inc
les
xor
loop
sbb
cmp
jmp
pop
setno
movsb
insl
mov
lds
cmp
push
arpl
mov
mov
aas
jne
and
sub
aaa
sub
pop
ret
jne
push
jae
cmpsb
mov
add
loop
outsb
cmc
fwait
call
pushf
and
in
and
ret
cmpsb
pop
mov
dec
comiss
fiaddl
cmp
data16
pop
loope
sbb
jb
adc
roll
push
and
add
mov
js
jnp
rol
ficompl
pop
icebp
mov
lret
jb
in
pop
sbb
cmp
mov
fwait
adc
jp
or
xchg
xor
lahf
jbe
cmpsb
shlb
sub
call
cmpsl
adc
jns
decb
leave
in
outsb
fcomi
sti
dec
xchg
or
jne
push
inc
jg
in
outsb
shrl
cmp
or
leave
cmp
and
jg
outsb
lock
dec
mov
dec
dec
cmc
outsb
jg
mov
sbb
mov
inc
or
xchg
fimuls
inc
inc
les
scas
adc
inc
fsts
int3
sbb
insl
jmp
inc
push
mov
cmp
pop
pushf
std
pusha
mov
or
push
xchg
push
sub
lock
xor
mov
out
es
daa
push
and
mov
push
shll
in
fcomp
nop
jne
xchg
or
insl
mov
sti
xchg
leave
aad
es
mov
inc
rcr
mov
out
pop
out
or
fbld
dec
xchg
add
cmp
test
mov
cwtl
xor
aam
orl
sbb
ret
add
sbb
sbb
addb
movsl
xchg
bound
test
outsl
add
cmpsb
lret
shrb
xor
adc
cld
sbb
dec
lods
inc
pop
or
rolw
xorps
xchg
stos
je
or
push
inc
xlat
imul
xor
fstps
push
sahf
pop
pop
jecxz
adcl
cmpsl
xchg
aad
cmp
xchg
mov
ficoml
jmp
aas
call
jae
js
in
cmp
ljmp
push
int3
test
out
jb
mov
add
nop
add
mov
cmp
adc
ljmp
fsts
idivb
push
jecxz
push
mov
pusha
into
lahf
lahf
movsl
daa
insb
xor
push
jne
in
aam
fs
repnz
std
add
cmp
cld
pop
xchg
insl
mov
xor
xor
mov
cwtl
mov
push
pop
cmpsl
xor
push
or
imul
mov
stos
outsb
int3
add
lea
mov
das
rcll
adc
xchg
cmpsb
in
rorb
push
jne
stc
test
pushf
inc
stos
sbb
stos
push
popa
out
inc
std
mov
cmp
sbb
fsubrs
mov
cmp
fcoml
enter
jmp
out
mov
and
sub
or
jmp
and
inc
rclb
push
xchg
mov
fs
test
add
xchg
testb
sbb
out
cmp
in
adc
das
lds
lods
sub
addr16
rorb
out
adc
cmp
push
lds
jns
or
jp
xor
int
and
loopne
dec
mov
imul
scas
mov
xchg
orb
scas
fimuls
lods
lahf
repz
xor
xchg
call
movsb
popf
js
fwait
mov
push
pop
cmp
out
mov
jns
mov
nop
mov
ja
jge
sbb
pop
into
cli
xor
sub
sub
rcrb
and
xlat
cmpl
jnp
testb
es
aam
jae
adc
sbb
out
push
sbb
adc
push
icebp
jo
scas
mul
cmp
cmp
testl
jg
lcall
test
lret
repnz
xor
mov
mov
in
push
pop
test
jmp
pop
mov
jp
adc
and
xchg
jae
jnp
aaa
push
adc
or
int
aam
adc
lcall
xor
ret
pop
test
jb
lahf
mov
filds
in
rcr
sub
ss
dec
jnp
mov
aas
xor
int3
stos
lahf
or
sub
cmp
enter
xchg
pop
ret
and
divb
in
loope
xor
add
jo
mov
ljmp
popa
int3
mov
inc
jae
idivb
loop,pn
jbe
incb
jmp
cmp
repz
inc
js
in
lcall
pop
mov
pushf
jp
add
lcall
cmp
sbb
and
loop
fwait
dec
mov
jns
sub
jno
pop
xchg
push
dec
repz
add
and
rolb
gs
and
ret
jecxz
jecxz
iret
xchg
bound
add
cmp
repnz
mov
loopne
or
adcl
push
rcrb
or
or
sti
aam
add
mov
outsl
mov
test
mov
lahf
sub
xchg
xor
pushl
mov
mov
or
sbb
sbb
jo
jmp
clc
and
not
cmpsb
movsl
push
mov
scas
aad
iret
loopne
mov
jge
push
or
inc
frstor
mov
sbbb
inc
fs
shrb
cs
jnp
orl
or
and
xor
inc
nop
fstpt
das
imul
push
mov
or
mov
sbb
lahf
scas
sbb
int3
test
cmc
imul
mov
data16
push
lcall
dec
or
pop
adc
push
dec
in
gs
adc
mov
loopne
fldt
test
cmc
test
or
mov
adc
into
sbb
mov
cmpsb
xchg
leave
add
sbb
cli
sarb
aad
fstpl
fists
mov
push
jecxz
leave
ret
inc
loop
lock
shrl
adc
or
nop
enter
inc
and
insb
std
pop
mov
add
icebp
mov
jno
xchg
lcall
adcb
sarb
dec
sub
dec
aam
jl
mov
idivb
stc
lea
xchg
or
aad
popf
loope
mov
in
test
sti
rclb
cwtl
push
dec
das
aam
mov
mov
fisttpll
cmp
xor
sarl
les
inc
mov
lods
out
inc
mov
inc
test
push
loop
cmpsb
dec
stos
mov
orb
div
jp
outsl
test
xor
popf
cmp
pop
jno
mov
push
push
cli
jl
out
ror
mov
mov
cmp
incl
jmp
mov
aad
fists
pop
push
and
and
pop
xchg
or
mov
test
ss
sub
sbb
enter
pop
mov
outsl
jbe
imul
ds
dec
jmp
scas
jmp
stos
push
cmp
lahf
movsb
sub
ret
jmp
lds
gs
or
int3
sahf
lret
fbstp
aaa
insl
cmc
mov
mov
sbb
pop
xchg
add
sub
rol
imul
mov
mov
cld
out
sbb
imul
lret
pushf
jge
dec
cld
sti
aam
flds
mov
jns
xchg
mov
loope
cmp
mov
dec
mov
in
ja
mov
inc
pop
xor
dec
popa
arpl
push
fstpl
sbb
in
icebp
cmp
or
cld
xlat
mov
int3
stos
iret
mov
and
je
popf
jmp
aam
arpl
movsl
cli
dec
sub
loope
jg
sti
sbb
fiaddl
inc
stos
sbb
cs
mov
push
jo
cmp
sub
xchg
xor
mov
movsl
pop
jbe
push
rol
bound
or
xlat
pop
repnz
mov
out
scas
sub
push
mov
and
mov
jo
popf
enter
push
ja
fiadds
xlat
fs
loopne
jge
push
jmp
in
cmp
sbb
clc
jecxz
hlt
dec
repnz
mov
jmp
jo
mov
dec
xchg
lret
mov
ja
lcall
or
mov
insb
or
sub
push
ret
xor
inc
fwait
pop
int
test
pop
push
sub
flds
jbe
cld
popa
inc
mov
adc
repnz
cmp
popf
mov
inc
push
stos
pop
aaa
cli
xchg
pop
and
inc
xor
sbb
out
ljmp
push
cmp
das
insl
inc
pop
xchg
sbb
mov
fdivrl
mov
pop
dec
push
push
and
inc
xorl
fstl
mov
fs
sbb
push
xchg
mov
imul
dec
fiadds
push
neg
arpl
rolb
mov
push
lret
rclb
frndint
push
sub
pop
fldenv
xlat
flds
pushf
mov
rol
bound
pop
lret
jne
inc
sub
sbb
pushf
xchg
inc
push
xchg
mov
leave
or
call
pop
mov
and
lds
ret
jbe
cmpb
mov
insl
mov
into
lret
push
pushf
stos
jmp
gs
addr16
es
mov
push
cmpsl
je
leave
adc
fimull
ret
dec
add
test
push
movsl
cwtl
jle
cld
mov
test
outsl
add
and
mov
sub
xchg
xor
add
jno
sbb
or
and
movl
ret
push
mov
mov
adc
fdivl
pop
xchg
adc
or
stc
daa
es
pop
xchg
es
fsubrs
add
xchg
xchg
lods
dec
les
dec
adc
or
aas
ljmp
mov
jle
and
mov
push
sbb
mov
lock
mov
mov
mov
pushf
adc
cmp
pop
clc
mov
stos
nop
push
mov
in
push
pop
sub
xor
scas
jp
out
mov
add
test
push
xor
jecxz
cmp
jbe
das
cmp
imul
adc
mov
xchg
rorl
adcb
push
and
int3
dec
outsl
inc
les
cmp
scas
jne
lds
jbe
aam
cmpsl
push
ja
dec
dec
pop
loopne
push
int
cmpsl
and
es
icebp
nop
push
mov
repz
out
movsb
inc
sub
push
xchg
mov
push
mov
stc
mov
aam
int3
lds
cmpsl
cltd
repnz
push
xchg
pop
popf
mov
push
and
in
aas
cmc
or
std
idiv
lds
pop
push
fsts
cmp
inc
rolb
imul
xor
loope
pop
push
enter
mov
int3
adc
xchg
stos
orl
inc
orb
shll
inc
adc
out
gs
mov
aaa
fcompl
inc
mov
sub
into
sbb
jmp
cmpb
bound
lods
orl
xchg
insb
jmp
xchg
jmp
popa
add
fdivl
sub
out
out
imul
xor
adc
mov
push
fld
shrb
dec
xchg
and
xor
sub
jnp
je
addr16
inc
adc
dec
mov
jmp
inc
shr
cld
dec
lock
repnz
xchg
stos
ds
mov
push
push
es
fwait
nopl
scas
iret
popa
ja
xor
cli
sbb
and
and
pusha
and
ret
jl
js
jp
cltd
stos
mov
cmp
push
xchg
ret
dec
in
iret
mov
imul
push
arpl
repz
std
xor
cmp
lahf
lcall
shl
dec
or
testl
rol
pop
sbb
mov
add
insl
fnstenv
shlb
add
pop
mov
sub
shll
es
lahf
push
gs
xchg
and
cmc
mov
aaa
inc
std
cli
xor
xorl
out
mov
das
inc
call
test
and
test
pop
sub
insl
shlb
fcmovb
nop
hlt
push
sub
movsb
mov
pop
push
in
insb
pop
or
sahf
mov
jl
mov
xlat
jge
je
pop
jp
pop
push
inc
lsl
mov
dec
inc
sbb
out
fwait
xchg
pusha
jmp
aaa
mov
sbb
inc
sbb
iret
lcall
push
imul
pop
jbe
daa
jmp
adc
mov
cmc
jg
adc
aaa
add
std
test
loopne
in
mov
pop
jbe
loope
pushf
inc
rol
sub
and
pop
cmpsb
cmpsb
push
or
lock
jecxz
adc
outsb
stc
cmpsb
cmp
shlb
sub
add
xor
notb
add
adc
hlt
dec
add
mov
sub
mov
cmp
mov
jnp
decb
into
jnp
add
ds
adc
scas
or
mov
lret
test
xchg
pusha
out
lock
mov
je
mov
in
pop
daa
out
mov
mov
outsb
xchg
ds
or
jb
ds
std
xchg
mov
movsl
shll
enter
pop
test
pop
or
scas
cmp
lock
push
mov
mov
dec
out
cmpsb
outsl
in
xchg
mov
push
in
dec
or
out
std
repz
mov
mov
jo
mov
movsl
icebp
stos
cmp
in
incb
mov
cltd
jp
add
test
mov
test
xor
loope
add
mov
movl
add
push
adc
push
dec
dec
jp
repnz
xchg
and
and
in
pop
sahf
add
mov
push
sub
push
pop
cltd
mov
inc
repz
clc
xchg
push
jbe
cmp
in
scas
pop
sub
xchg
addl
call
lret
xchg
sbb
lret
xchg
xchg
sub
movsb
adc
popf
ret
and
sbb
or
shl
dec
mov
or
int
shl
mov
pop
js
jl
or
push
inc
les
push
and
test
cmp
in
add
jl
jle
repz
in
adc
push
sbb
and
rcr
adc
es
push
xor
fs
call
and
fidivl
jns
std
mov
shll
out
mov
jb
rcl
ljmp
outsb
lods
in
cmp
mov
enter
or
adc
rorl
jb
lret
movl
loope
in
mov
insl
xor
das
jle
add
sbb
ret
or
ja
xchg
arpl
je
fdivr
loope
lahf
mov
imul
mov
mov
lods
sbb
and
movsb
add
aaa
xor
mov
shlb
loope
icebp
shlw
and
adc
popa
jno
inc
notb
mov
ss
inc
loope
icebp
shlw
and
adc
popa
jno
inc
notb
mov
ss
inc
loope
icebp
shlw
and
adc
popa
xlat
jno
inc
hlt
push
push
mov
ss
inc
loope
icebp
out
notb
jns
imul
sbb
xchg
cmpsb
je
and
in
xor
les
fdivs
hlt
daa
notb
inc
xchg
jbe
data16
inc
xchg
cmpsb
je
add
adc
and
xor
movb
les
hlt
xchg
out
inc
jbe
data16
pop
xchg
cmpsb
insl
sbb
out
push
daa
and
hlt
push
lds
cli
add
or
adc
lcall
jmp
int
mov
leave
pop
mov
outsl
add
ficomps
or
mov
pop
ljmp
cmpl
fxtract
test
movsb
jmp
mov
rcll
pop
push
mov
jge
mov
adc
pop
out
push
xchg
cmp
adc
push
fsubl
icebp
and
aam
jl
lret
fwait
xchg
subl
add
or
cs
fisubrs
data16
fwait
pop
xchg
and
call
decb
aam
mov
mov
dec
imul
jne
sub
cmc
jnp
out
inc
leave
icebp
push
in
xlat
lret
loope
pop
out
pop
inc
xchg
je
outsb
add
adc
cmp
push
int3
ss
es
push
pushf
inc
xorl
rcl
and
push
fbld
jne
push
mov
xchg
dec
in
push
lods
arpl
jmp
and
repz
push
rcll
jno
ja
mov
pop
jae
push
mov
nop
es
imulb
sti
sbb
adc
repz
lret
push
out
push
les
aam
in
hlt
push
test
jbe
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
aam
in
hlt
push
test
jbe
data16
inc
mov
sub
les
cwtl
adc
popa
push
aaa
mov
sar
aaa
mov
pusha
je
and
dec
cmc
pop
sti
je
lods
push
add
call
inc
mov
les
test
cmp
xchg
or
dec
add
fiadds
in
xchg
repnz
nop
enter
incl
or
lea
mov
xchg
insb
sbbb
pop
dec
in
loopne
sub
lea
cmpb
push
fsubs
imul
cltd
fadd
pop
mov
hlt
jo
push
add
aad
outsl
mov
cmpsl
and
mov
push
movsb
adc
jbe
mov
loopne
inc
ds
enter
jnp
mov
fcomp
dec
ljmp
jo
jle
in
hlt
pop
movsb
pushf
lock
adc
cmpsb
lock
cmp
mov
mov
push
ret
xchg
inc
or
arpl
inc
mov
jno
mov
mov
add
mov
je
push
mov
sbb
and
js
push
jb
fidivl
loop
xchg
inc
pop
sbb
imul
jle
jmp
out
call
or
int3
gs
mov
xlat
xlat
enter
dec
outsl
hlt
mov
or
rclb
mov
or
xor
inc
mov
push
push
jnp
xlat
mov
mov
pop
jnp
mov
cmp
cld
mov
mov
stos
in
xor
mov
addr16
push
scas
sbb
inc
test
es
bound
mov
cmpsb
adcl
mov
data16
fmul
out
aas
arpl
sub
mov
sub
push
loope
push
fiadds
xchg
scas
popf
inc
and
xor
loopne
sbb
lcall
cmpsl
mov
sub
xchg
nop
inc
add
lods
mov
jb
jl
pop
inc
les
mov
out
repnz
mov
inc
int3
xchg
iret
adc
mov
test
adc
xchg
pop
addr16
mov
outsb
xchg
ds
std
dec
push
dec
aaa
in
sbb
push
fsubrl
jmp
inc
aad
fadds
adc
jae
pop
push
fucomi
cmp
jne
lock
aam
or
adcb
divb
push
sbb
mov
movsb
push
mov
jnp
mov
pop
sbb
call
stc
dec
mov
add
pop
adc
fwait
push
jl
pop
repz
add
jp
fcompl
js
dec
fsubs
xor
pop
sub
cmpsb
aad
out
push
and
sub
and
mov
vandnps
ret
pop
mov
popa
or
pop
fdivl
jno
xchg
insl
jl
mov
push
fdiv
das
pop
adcb
hlt
icebp
mov
fbstp
xchg
not
ja
stc
test
cmpsl
sub
cmp
cmp
ror
xor
lods
fidivl
pop
adc
cmp
test
std
cmpsl
push
ja
fisubrl
fs
in
in
jge
pop
xor
sub
xchg
xor
andb
and
xchg
jo
xor
das
jge
hlt
mov
jle
xchg
fisubs
push
pop
insl
out
ja
sbb
fldenv
xor
sbb
out
fucom
fidivrl
push
mul
sahf
mov
push
iret
fildll
cli
xor
xchg
rorb
pop
test
push
scas
mov
adc
push
sbb
pop
lret
cli
repnz
stc
fisubrl
sbb
jl
popf
or
or
or
fstpl
sti
repz
jl
stos
shll
into
bound
push
cmp
adc
cltd
loopne
pushf
mov
mov
mov
mov
testb
stc
out
mov
mov
fidivrl
es
or
jbe
imul
cmpsl
test
in
cmpsb
jmp
push
lock
adc
pushf
lock
aaa
test
push
imul
pop
inc
cltd
fisubrl
lods
mov
imul
cmp
leave
adc
fistpll
and
add
jp
sub
inc
mov
xlat
mov
xor
adc
movsl
push
fs
rcrb
jne
fidivrs
push
stos
incb
imul
stos
mov
mov
add
stos
push
jecxz
loop
std
std
jmp
xchg
cmc
jo
popf
push
inc
jb
ret
pop
cli
imull
and
lods
popf
sti
sub
mov
jb
and
icebp
sbb
mov
mov
cmp
add
testl
cmp
clc
nop
lea
stos
mov
in
leave
push
inc
mov
lods
xchg
cli
cwtl
adc
into
ret
jne
enter
jg
cmp
adc
pop
inc
popa
enter
push
mov
insb
int3
mov
cmpsb
jns
rorb
push
mov
mov
and
lods
add
mov
xchg
mov
push
sahf
stc
dec
xchg
xchg
adc
fcomip
xorb
test
mov
sti
cmpsl
add
arpl
ds
subb
arpl
sahf
loop
stos
lea
mov
xchg
pop
imul
loop
bound
cmpsl
jg
in
add
test
adc
addr16
das
adc
jns
push
jo
sahf
cmpsb
fwait
ret
and
cmpsb
and
repz
cmp
jns
out
in
scas
pop
pop
xchg
push
mov
lret
repz
repnz
jl
mov
xchg
popf
in
call
sub
sbb
insl
mov
popa
push
pop
scas
mulb
mov
fidivs
jns
fmuls
sub
pop
mov
push
pop
iret
push
mov
jmp
imul
dec
add
adc
dec
push
jg
jb
or
jp
nop
cld
mov
and
lea
es
repz
xor
bound
out
cmp
jmp
lret
out
inc
loope
bound
loop
cmpsl
pop
ss
rorl
mov
xchg
ret
dec
and
xor
pop
add
sahf
bound
sti
inc
shl
lea
cmp
jmp
shl
ffreep
testl
pop
popa
inc
pop
adc
mov
mov
outsl
es
adc
jnp
mov
and
mov
divb
xor
sti
or
pop
test
add
pushf
ss
adc
push
test
test
andb
xchg
or
pushf
sbb
hlt
std
stos
jmp
out
dec
out
cmp
push
jg
sub
xchg
out
popa
or
sbbb
das
sub
sbb
outsl
or
pusha
xchg
push
notl
movsb
add
aas
std
add
out
insb
xlat
mov
adc
enter
outsl
rcrl
clc
mov
push
pushf
andl
aad
pop
jno
mov
mov
mov
push
jmp
in
add
lcall
adc
hlt
xchg
inc
cmp
daa
test
pusha
mov
insl
push
jbe
insl
adc
pop
mov
add
or
add
pop
push
mov
stos
outsl
cmc
clc
mov
les
ljmp
cmpl
sbb
aaa
dec
and
cli
lock
cmpsb
nop
jns
enter
or
daa
out
aas
movsl
fst
mov
insl
cltd
dec
mov
loopne
pop
icebp
mov
dec
adc
add
xchg
pop
sbb
jnp
or
repz
adc
push
std
cld
jle
int3
mov
push
dec
enter
in
push
mov
sub
ds
or
mov
add
xor
dec
cmp
jle
xlat
aam
pushf
push
shr
shll
aam
jne
adc
xlat
clc
jbe
leave
cmp
pop
std
push
mov
and
out
pop
pop
into
fs
or
dec
pop
lcall
inc
xor
add
lahf
and
aam
lods
push
stos
mov
subl
adc
sub
mov
xlat
or
xor
addb
mov
push
inc
push
movsb
iret
and
sub
aad
dec
fiadds
inc
test
ja
push
mov
dec
push
ret
imul
cmp
fcomps
dec
aas
or
loop
aas
lahf
mov
jo
sbb
mov
push
mov
out
mov
data16
adcb
dec
or
je
and
mov
pop
and
xor
mov
mov
roll
and
filds
mov
sub
xchg
cltd
stos
sub
in
scas
je
out
lret
stos
jmp
pop
pop
mov
or
or
xor
dec
push
outsb
rcl
es
xchg
add
mov
mov
jae
iret
adc
js
test
out
call
insl
or
jp
out
in
mov
mov
popa
jnp
nop
imul
inc
aam
cld
aad
or
push
dec
stos
push
adc
leave
pop
sbb
push
dec
pop
test
cli
pushf
insb
data16
pop
gs
cli
jns
mov
xor
pop
lods
dec
test
jb
mov
loopne
imul
aad
dec
aad
pop
jp
mov
push
adc
inc
mov
rcrb
insl
add
es
sarb
clc
lcall
fdivrs
sbbb
cmc
out
jo
inc
test
fldl2e
insl
push
or
xchg
int3
or
and
xchg
test
and
ja
loope
fstl
sbb
adc
ret
cs
pop
push
xor
inc
es
xor
imul
movsb
scas
mov
enter
out
out
pop
out
insb
lret
pop
iret
imul
test
mov
into
adc
push
fs
mov
call
imul
inc
stos
stos
pop
and
pop
ljmp
sbb
fbld
adc
iret
xchg
or
push
test
xchg
iret
gs
daa
mov
loop
mov
jbe
popa
dec
mov
repz
mov
lods
addl
rorl
pop
mov
and
stos
cmp
js
fldt
jge
arpl
and
mov
test
xchg
and
lahf
pop
xor
xchg
mov
adc
add
sbb
xchg
sub
mov
push
mov
adc
sbb
pop
int
rorl
stos
cmc
cld
jmp
int3
mov
mov
lcall
push
or
xor
addr16
jns
cli
mov
sub
je
push
pusha
aam
and
jecxz
orb
mov
daa
aas
or
push
movsl
push
mov
xor
aas
inc
imul
mov
push
int
imul
mov
aas
add
jmp
jecxz
mov
clc
inc
push
fsubl
jns
inc
cltd
inc
xlat
or
mov
in
stos
push
fdivrl
or
push
mov
pop
aaa
fnstcw
repnz
lea
jle
pop
xchg
imul
rcll
aas
ljmp
out
mov
mov
xchg
fld
and
jecxz
push
stos
sub
andb
jns
roll
notl
scas
pop
aaa
push
or
in
adc
jle
into
cmpsb
ret
test
push
inc
pop
xchg
mov
inc
out
bound
pop
mov
es
xchg
add
mov
mov
fiaddl
sub
cmp
loope
mov
pop
push
push
mov
mulb
out
outsb
mov
pop
daa
lcall
test
sbb
mov
fisubrs
jo
shrl
fwait
sbb
cmpsl
jl
adc
imulb
cmp
and
mov
jbe
insb
sbb
addb
test
pop
mov
push
mov
xchg
inc
pop
sti
pop
rcl
orb
add
imul
test
fucomi
and
leave
nop
sbbb
xchg
or
int3
lret
sbb
mov
fimull
not
jle
shlb
sbb
aas
pop
popf
mov
out
mov
mov
xchg
iret
les
hlt
jno
pop
inc
push
insb
sub
inc
mov
ss
scas
insb
in
mov
arpl
adc
adc
pop
cltd
cmp
xchg
sbb
xchg
jmp
mov
xor
inc
ret
add
popa
cmp
mov
cmpsb
xlat
push
push
iret
movb
idivb
sub
xchg
xchg
lods
icebp
test
out
loope
inc
mov
push
push
in
sbb
cmc
xchg
jns
data16
inc
xor
fiadds
rcrl
shl
fcoml
insl
fucomip
mov
xor
lcall
pop
xor
jo
dec
imul
jns
or
inc
movsl
xor
xlat
sbb
mov
pop
test
lret
jno
or
inc
daa
divl
ret
prefetch
sbb
push
lods
int3
xor
jnp
movsl
mov
roll
popa
js
mov
cltd
out
sub
jnp
jmp
jb
int3
jp
add
xchg
or
in
xchg
or
sti
stos
aaa
or
xchg
cmc
xchg
jb
push
bound
cmp
adc
nop
cld
sarb
dec
xor
mov
xlat
dec
inc
gs
inc
xchg
ljmp
xlat
mov
mov
call
int3
xchg
mov
xor
es
clc
ret
xchg
jo
push
lods
cmp
xlat
jmp
sahf
cmp
xor
inc
outsl
xchg
jle
fwait
jmp
pop
scas
imul
xor
imul
jns
mov
and
scas
sub
inc
in
and
xchg
shrl
popa
xor
aad
dec
popa
pop
inc
inc
fisubrs
adc
xchg
inc
test
inc
pop
add
daa
mov
jo
or
cmp
movsl
add
leave
scas
or
xchg
push
adc
cmp
fisttpl
inc
jp
stos
out
push
shll
test
jle
push
jne
scas
pop
in
ja
out
cmpsl
mov
or
in
lret
and
lds
jno
xchg
pop
add
sbb
test
jns
sbb
cmp
scas
insb
push
stos
push
push
mov
nop
test
xor
or
adc
adc
fwait
inc
push
dec
cmp
rorl
adc
js
fmul
xchg
inc
mov
lret
inc
adc
aam
lods
int
adc
lcall
sub
sbb
xor
or
or
cli
sti
xlat
sbb
ja
aad
dec
insb
orl
gs
int3
aad
dec
pop
sbb
jns
cmp
inc
out
xlat
jge
outsl
push
adcl
sbb
jb
clc
loop
add
sbb
std
shll
sti
or
ljmp
mov
mov
xor
lock
and
adc
and
sbb
inc
cmpsb
xor
sti
inc
push
movsl
clc
ds
int
jmp
push
sarl
std
insl
jge
outsb
xchg
mov
call
sub
lret
adc
mov
fimull
fcmovbe
outsl
pop
daa
popf
shlb
lret
jecxz
fstl
inc
in
xor
cmp
movsb
and
icebp
lods
rol
lds
or
xlat
mov
fcmovne
int
sub
nop
mov
ror
outsl
cmp
and
and
add
jno
lods
rclb
aam
iret
es
inc
sub
add
pop
push
aam
ds
fildll
ret
push
xchg
inc
inc
scas
stc
and
aam
and
inc
add
scas
mov
cmp
test
sbb
push
mov
push
inc
xchg
jle
loope
push
xor
inc
add
mov
mov
adc
lret
jne
jge
fs
insb
adc
loope
xchg
pop
into
mov
std
test
cmp
aas
push
test
lret
push
lret
fcmovbe
xor
repz
jns
dec
div
pusha
fcoms
cmp
ljmp
test
mov
mov
mov
jl
loop
mov
push
lcall
xchg
and
adc
mov
xchg
hlt
sbb
cmp
out
cmp
xor
fidivrs
mov
xchg
clc
pop
xchg
pop
dec
jge
fs
sti
ret
push
call
jnp
push
enter
inc
es
or
ds
pop
adc
call
cltd
fwait
xor
stc
setl
rorl
add
imul
pop
mov
fcmovbe
in
subl
jns
mov
dec
cmp
cmc
cmp
jp
mov
cmp
fimuls
imul
in
mov
in
popf
ret
and
sub
xchg
xchg
push
jnp
sub
je
dec
jecxz
dec
mov
push
xor
jne
call
scas
int3
pushf
xchg
push
test
dec
stos
stos
dec
jp
sbb
jne
and
push
pop
ret
dec
sub
jae
push
dec
inc
out
idivb
daa
inc
fldcw
mov
fnstcw
jl
sub
jns
push
jg
adc
arpl
add
xor
fimuls
push
aaa
lods
ljmp
xor
jb
mov
lret
out
dec
imul
adc
cmp
xor
imul
ret
pop
cs
es
scas
jns
lds
sahf
and
in
rcr
test
pop
in
pop
jg
pop
adcb
mov
sahf
js
mov
jno
rclb
sbb
jo
pop
and
jnp
ficomps
mov
inc
jb
dec
pop
stc
dec
or
fsubrs
std
out
loope
pop
lahf
inc
mov
shlb
test
xlat
jns
add
sbb
mov
dec
inc
add
fwait
add
inc
leave
cld
test
out
mov
mov
enter
int
into
insb
xor
push
pop
and
xchg
push
push
in
push
xchg
ret
ret
push
mov
pop
pop
jo
cli
jle
sub
dec
mov
adc
iret
xchg
setns
sub
mov
sub
mov
fwait
movlps
arpl
pop
mov
mov
lods
mov
ljmp
fisttps
test
loopne
lods
test
shrb
jno
aas
and
lret
loop
decb
pop
lods
inc
cld
rcl
cmpsb
pop
jo
inc
push
mov
stc
stc
cmp
lods
std
mov
mov
mov
jecxz
mov
pop
imul
mov
nop
jg
mov
xchg
mov
pop
push
adc
mov
mov
cmp
inc
lea
adc
iret
sbb
and
es
repz
movsl
daa
iret
test
cmp
jecxz
in
divl
jp
cmp
outsl
popa
in
jae
xor
scas
out
pop
jnp
stos
insb
test
pop
int
enter
push
pop
mov
jge
sbb
sarl
push
pop
iret
test
fstps
call
inc
cld
cmp
xchg
sbb
ds
sub
in
fstl
mov
fs
outsl
adc
and
std
int3
std
cmp
adc
or
lds
pop
add
mov
bound
mov
insb
and
movsl
jno
sub
jmp
adc
sbb
loop
xchg
shrl
shlb
int
and
outsb
roll
adc
pop
mov
sbb
jmp
and
lock
mov
push
sti
xchg
imul
inc
mov
sarl
xchg
cwtl
leave
cmp
mov
cmpsb
push
mov
ja
ret
in
std
xchg
mov
pushf
inc
push
dec
aad
in
push
cmpsl
mov
or
shlb
cmp
cmpsl
in
mov
jno
mov
xchg
test
and
or
or
aas
xchg
pop
call
jmp
mov
mov
xchg
mov
sub
outsl
jp
pushf
or
sub
cli
push
out
flds
sub
adc
idivl
testb
sbb
mov
in
ret
fwait
scas
in
ret
mov
in
pop
sbb
adc
or
stos
les
jae
test
jb
popa
addr16
filds
and
and
inc
ficompl
mov
fimull
sbb
and
pushf
lods
cmc
insb
adc
pop
mov
xchg
in
in
jno
or
or
daa
cmp
pusha
inc
sub
pop
stc
add
jbe
lock
enter
mov
sbb
movsl
mov
jae
push
push
or
sbb
mov
mov
test
sub
or
inc
aas
loop
outsl
or
xchg
ljmp
cmp
inc
fldt
sbb
mull
dec
xchg
and
inc
mov
test
dec
insb
rclb
xor
push
roll
movsb
push
clc
or
pop
and
sbb
jecxz
dec
xlat
add
fwait
lahf
cltd
mov
fmull
lcall
fmulp
int3
add
cmpsl
push
out
std
aad
lock
test
shlb
or
jmp
in
gs
push
js
fimuls
lcall
in
ret
push
add
hlt
and
lods
jg
adc
jl
mov
and
es
aaa
iret
or
adc
scas
xor
cmp
stos
iret
aad
jns
adc
fucomp
adc
ds
adc
cli
adc
xchg
inc
mov
mov
test
movsb
cmp
imul
xchg
push
adc
cwtl
mov
data16
jmp
cmpsl
add
cmc
xchg
daa
push
xlat
ret
test
xor
jl
lds
out
xor
imul
push
xor
mov
cmpsb
je
add
adc
and
xor
les
aam
in
hlt
push
test
jbe
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
aam
in
hlt
push
test
jbe
data16
inc
push
push
ss
je
add
adc
and
xor
les
aam
in
cmc
push
test
jbe
data16
inc
xchg
cmpsb
je
add
adc
and
xor
les
jle
in
andl
imul
push
dec
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aaa
pop
and
adc
add
je
push
xchg
je
push
clc
and
xor
add
adc
fs
aam
aam
push
movsb
and
js
add
je
fs
les
and
adc
add
adc
or
je
add
push
mov
mov
sub
xchg
push
add
dec
sub
sti
xchg
pop
loope
lahf
xor
push
pop
movsb
push
shll
jg
fsubrs
repz
xchg
mov
or
in
rolb
rorb
das
fsubs
pop
in
or
test
xchg
inc
add
adc
or
mov
inc
cmp
lret
mov
sahf
adc
pop
bound
loop
movsb
mov
mov
sbb
clc
inc
call
xchg
call
pushf
stos
aas
inc
sub
xor
or
mov
lods
les
lret
mov
pop
xor
cltd
adc
int3
iret
aam
ja
and
ret
rcll
in
sub
enter
mov
scas
mov
jno
xchg
pop
sbb
gs
aam
shrb
jb
adc
add
nop
in
hlt
push
push
loop
jb
repnz
mov
mov
inc
les
pop
notb
pusha
jl
sbb
inc
mov
divl
jo
jge
or
xor
in
mov
mov
mov
inc
mulb
popa
cld
jae
xor
cmp
repnz
repz
push
mull
andb
inc
aam
and
xor
add
adc
fs
aam
les
and
adc
add
je
fs
push
les
and
xor
add
adc
fs
aam
les
andb
les
cmp
push
pop
mull
mov
or
ffree
fbld
add
cmp
xchg
loop
adc
cmp
out
sbb
inc
push
int3
std
subl
inc
icebp
and
divb
dec
popa
cmp
sbb
mov
pop
fs
dec
outsl
lods
adc
testl
mov
mull
in
mov
popf
movsl
xor
pop
leave
adc
xchg
ss
jns
dec
and
aad
xor
loop
xor
xor
fs
cs
cmpsb
movsb
sarl
jp
shl
mov
jne
pop
jbe
orl
enter
mov
pop
sbb
xchg
and
adc
scas
shll
add
hlt
xchg
jmp
pop
loope
subl
push
xor
sbb
jae
stc
arpl
cmpsl
fistpl
fs
add
loopne
or
lods
jl
push
flds
jb
in
xchg
sar
xor
push
cmpsb
fstpl
jno
inc
jo
imul
gs
sub
mov
jle
jne
cld
addl
push
add
and
divb
jb
sti
lcall
mov
fwait
dec
xor
jb
hlt
and
jecxz
xchg
lock
sbb
ljmp
bound
mov
scas
sub
dec
jecxz
jnp
cmpsl
jge
ror
jne
adc
cmp
daa
aad
xchg
mov
lahf
push
cltd
xor
lahf
xchg
imul
dec
jo
xorb
cwtl
es
lods
pop
xchg
mov
xlat
ret
sub
jb
repz
mov
push
lret
loopne
xor
sub
xchg
sub
js
push
lret
clc
out
lea
ret
inc
daa
jnp
and
js
push
call
jle
cmp
cld
sti
in
and
cmp
sbb
movb
arpl
in
fsubrs
notb
int
xchg
ljmp
shlb
push
in
insl
int
mov
jg
flds
or
inc
jnp
cmp
or
dec
xor
mov
sarl
xchg
cmc
adc
scas
iret
xchg
sub
jle
mov
or
lock
sbb
call
std
mov
nop
mov
loop
loop
pop
mov
lock
mov
pop
sahf
in
out
push
xor
pop
clc
out
inc
mov
pop
jg
out
dec
inc
mov
push
xor
add
das
push
lock
jg
push
xor
iret
test
test
fs
fdivrs
in
filds
ljmp
mov
daa
cs
and
pop
call
adc
pop
inc
lods
icebp
cli
cmp
rcll
add
negb
and
jae
pusha
arpl
mov
cld
loope
lods
inc
pop
cli
xlat
mov
mov
cld
push
jne
add
sbb
decb
adcl
pop
pop
pop
jo
mov
addl
jae
pusha
push
in
out
push
ds
mov
add
and
daa
les
cwtl
pop
jge
inc
push
lds
cmc
iret
sub
or
inc
cwtl
inc
into
aad
loopne
mov
out
pusha
xchg
int3
jnp
mov
xchg
xor
adc
js
into
pop
in
pop
mov
insl
sub
push
stc
xor
cli
ret
test
jge
push
cwtl
mov
dec
hlt
test
push
loop
and
cwtl
pop
or
jno
outsb
negl
test
add
add
out
sub
jecxz
or
sbb
rcr
jl
fistps
mov
sbb
cmp
lcall
icebp
add
popf
mov
sub
sbb
inc
ss
int
jge
mov
mov
lods
adc
out
out
clc
or
adc
fisttpll
scas
mov
fldenv
jo
repz
jae
test
int
cltd
pop
lods
loop
subl
in
xchg
js
cs
mov
ret
adc
push
ret
push
mov
xor
leave
push
pushf
mov
and
popf
rcrl
mov
adc
inc
mov
outsl
popf
xchg
push
imul
test
inc
jge
les
or
fstpl
cmp
push
js
xchg
shrb
jecxz
mov
adc
mov
cs
sub
xchg
sub
insb
xchg
ss
and
mov
fistpl
xchg
clc
and
arpl
jno
stc
cld
xchg
mov
sub
cmp
lret
out
out
and
lock
xchg
jne
lods
rolb
out
push
pop
push
push
jne
jmp
mov
clc
push
fs
inc
cld
daa
jb
and
xchg
or
cmp
daa
insb
in
cli
mov
xchg
push
add
mov
or
xchg
mov
pusha
enter
popf
and
aam
imul
xchg
adc
xor
ss
inc
iret
cmp
ds
xchg
outsl
mov
pop
bound
je
pop
fstpl
push
leave
setl
testl
sub
dec
adc
jb
xchg
lods
adc
dec
inc
push
and
popf
inc
adc
cmc
pusha
pop
test
adc
shrb
outsb
or
xchg
inc
icebp
imul
pushf
mov
test
and
into
les
cmp
fdivl
sahf
xchg
or
ficomps
and
mov
and
push
xchg
test
out
int3
cmpsb
mov
mov
clc
or
shl
leave
jecxz
dec
xchg
jecxz
leave
fsubrp
sbb
jmp
xorl
or
inc
xlat
sbb
mov
cmp
mov
add
cmpsl
gs
stos
aad
ret
mulb
or
aad
lahf
outsb
pop
sub
enter
lea
mov
cli
dec
mov
lahf
ljmp
pop
jle
fyl2x
movsb
gs
xchg
adc
shrb
pop
test
in
xor
test
sub
xchg
stos
mov
repnz
cmp
int
and
cmp
and
cmp
add
or
jmp
pop
adc
inc
mov
and
mov
insb
cmp
sub
enterw
arpl
cmp
and
or
mov
fdivrs
and
mov
das
dec
jae
lods
dec
mov
jge
rcrl
jno
adc
sub
addr16
dec
mov
mov
jnp
insb
jns
loope
data16
inc
sub
out
das
imulb
sub
pushf
gs
pop
movsb
sub
mov
loopne
jbe
and
into
mov
arpl
insl
cmp
xchg
nop
inc
lock
dec
mov
fbstp
rcr
xor
pop
mov
cli
pop
pop
aaa
xchg
jl
xor
aam
mov
jle
in
out
jge
cmp
sbb
addr16
daa
sbb
mov
push
fidivrl
xchg
jg
das
stos
sbbb
pop
sbb
jmp
push
jle
in
daa
and
push
sbb
mov
movsl
mov
xor
or
sbb
in
mov
out
jle
out
ja
adcl
mov
shr
cs
test
imul
roll
test
push
scas
cmpsb
loope
rorb
shrb
cmp
leave
add
xor
mov
in
and
dec
push
clc
dec
cli
fwait
cmp
adc
add
ljmp
test
mov
fwait
pop
divl
add
lret
cmp
mov
or
mov
das
mov
outsl
test
mov
scas
rcll
xor
in
mov
insl
sub
pop
addr16
cmpsb
iret
lock
arpl
sub
mov
jmp
mov
pop
cmp
jbe
mov
or
pop
jns
cli
test
mov
aam
mov
mov
pop
mov
add
in
xchg
shll
int
cmp
mov
jp
into
push
pushf
xor
pop
dec
lods
popa
aad
pop
idivb
and
add
aas
push
inc
andb
mov
popa
adc
imul
into
sub
hlt
dec
sub
jbe
bound
jne
es
addr16
push
mov
out
in
int
sahf
icebp
jl
add
fsubrl
jg
repz
flds
int
push
ds
pop
add
out
jae
addr16
test
les
xchg
push
or
sahf
imul
push
dec
and
clflush
in
inc
mov
out
cwtl
lods
pop
push
push
insl
sub
lret
push
xchg
jge
mov
mov
pop
xlat
mov
je
ljmp
int
add
adc
fs
enter
loop
jmp
scas
call
and
int
mov
mov
ds
sub
scas
dec
adc
pushw
iret
dec
push
dec
hlt
and
inc
mov
int
mov
mov
inc
jnp
jecxz
and
sbb
and
mov
or
mov
jecxz
test
adc
xchg
pop
bound
cmp
mov
xor
mov
mov
xchg
icebp
shl
clc
push
pop
cmp
adc
mov
fimull
outsl
and
add
jno
dec
lcall
cmp
xchg
lods
sub
cmc
add
mov
jbe
mov
mov
or
inc
frstor
push
inc
gs
mov
bound
rolb
push
out
jl
mov
outsb
rcl
icebp
or
pusha
stc
xchg
pop
das
mov
addl
loopne
or
mov
sti
bswap
dec
fists
aas
mov
cmp
adc
or
add
and
mov
xor
aas
movsl
mov
push
pushf
cmpsl
ret
push
shr
shlb
or
ficoms
cmp
aam
mov
sub
lret
sar
daa
jne
dec
mov
xchg
push
int3
sarl
push
sti
fisttps
sbb
sub
pop
xchg
sub
sbb
pop
roll
push
test
mov
mov
pop
mov
ja
adc
push
repz
push
cmp
js
xor
lock
jmp
fmulp
pop
aaa
dec
xchg
gs
cmc
int3
add
sbb
xchg
pusha
ja
loopne
lcall
js
mov
fisubl
repz
mov
jae
pop
fcmove
scas
mov
cmc
or
mov
adc
int
in
push
insb
dec
adc
mov
ret
movsl
pop
jmp
add
sbb
mov
xlat
ret
sub
add
enter
pop
jbe
sub
fwait
outsl
filds
jno
in
lcall
and
dec
jno
flds
xchg
lods
inc
rcll
in
scas
adc
sub
sub
xchg
mov
imul
or
inc
loopne
jecxz
bound
add
scas
int
xchg
add
dec
jns
test
mov
inc
shll
lods
or
nop
ja
mov
xchg
pushf
adc
mov
add
mov
hlt
sub
mov
inc
xor
loop
add
mov
test
sub
inc
bound
or
mov
mov
mov
icebp
in
mov
fildll
int
insb
orb
les
dec
imul
cmp
in
adc
jnp
popf
add
add
nop
aad
loope
mov
in
loopne
outsb
daa
loope
xor
xchg
xchg
inc
mov
xor
int3
add
popa
es
mov
loop
cld
adc
lahf
dec
lds
or
mov
call
dec
add
adc
out
pop
icebp
mov
js
cmp
movsl
in
xchg
inc
push
insl
push
or
mov
inc
je
add
out
sub
mov
and
xchg
mov
sub
into
dec
test
mulb
pusha
mov
lret
jne
adc
movsl
popa
lret
sbb
fsts
jmp
stos
cmpsl
data16
sbb
imul
iret
sub
push
mov
sti
aam
leave
and
push
and
cmc
mov
cmp
gs
xor
mov
aad
daa
xor
popa
cs
aaa
lahf
mov
fwait
adc
movsl
gs
dec
sbb
push
je
jno
fadds
out
mov
dec
rorb
imul
ja
inc
sbb
push
pop
or
rcr
push
mov
dec
or
xor
push
subl
cmp
xlat
fbld
clc
mov
std
jno
bound
sbb
dec
pop
mov
adc
paddq
mov
fwait
ret
setns
xor
jge
adc
fimuls
mov
xchg
sub
jne
icebp
shlb
sub
mov
inc
scas
mov
in
jmp
inc
mov
movsl
jle
sbb
es
sarb
daa
lods
out
push
inc
mov
out
mov
sahf
adc
orl
getsec
ret
test
ljmp
cwtl
mov
mov
xorb
lock
lods
adc
ficompl
dec
dec
nop
mov
adc
mov
or
addl
shr
jb
pop
or
cltd
in
jo
sub
les
cld
push
adc
nop
push
cwtl
mov
pop
add
xchg
mov
xor
adc
lret
iret
push
hlt
and
inc
scas
xchg
outsl
cli
xchg
ret
js
insb
pop
jae
or
sbb
adc
adc
imul
fdiv
sub
mov
inc
sbb
add
xchg
shlb
rol
je
jmp
xchg
test
or
test
mov
mov
dec
fisttps
fdivrl
mov
xor
pop
jnp
aam
cmpl
es
movsl
cmpsb
je
adc
clc
add
fisttpl
dec
cmp
clc
movsb
fldl
imul
enter
ret
in
daa
int3
fisubrl
arpl
mov
cmp
mov
daa
popa
and
push
adcl
lret
std
outsb
jle
fistl
mov
out
pop
or
adc
shrb
pop
jmp
aad
inc
aad
xor
pop
rolb
xor
pushf
cmp
aas
mov
jg
jbe
sbb
test
xchg
stos
in
mov
add
out
pop
pop
and
out
jmp
or
lods
enter
push
mov
stc
xchg
sub
xchg
mov
in
xchg
sbb
jnp
into
popf
imul
fsts
xchg
mov
mov
es
cmp
jnp
inc
mov
jae
testb
int3
pop
scas
loopne
jne
andl
or
dec
xchg
les
xlat
addb
in
aad
xor
dec
jmp
dec
cld
mov
mov
imul
or
push
jnp
mov
pop
lods
pop
mov
popl
int3
sub
outsb
cli
lock
jecxz
mov
jns
lret
clc
mov
aam
or
or
add
xor
jnp
add
mov
and
in
mov
or
and
and
sbb
push
jle
cltd
mov
xor
mov
andb
movsl
sti
or
jae
pop
adc
xlat
stc
or
negl
nop
pop
aad
add
aaa
xchg
popl
shlb
push
jno
fisttpll
add
mov
and
lahf
mov
push
mov
rclb
lea
mov
or
jns
inc
out
pop
stos
sbbb
mov
clc
add
dec
adc
xor
leave
aam
xor
add
aaa
cwtl
dec
lcall
shl
fists
adc
xor
or
dec
jp
dec
dec
mov
imul
jb
mov
sbb
es
adc
leavew
cld
sti
outsl
and
das
pushf
imul
movsl
inc
push
cmp
loope
jb
jno
aad
arpl
xchg
xchg
mov
sub
dec
cmc
ds
imul
sbb
loop
adc
mov
addr16
sub
in
iret
pusha
icebp
and
movsb
jb
push
xlat
pop
outsb
mov
ret
jle
mov
stos
repz
inc
pusha
loop
cmp
test
push
cltd
lret
out
dec
add
je
outsb
adc
ja
mov
or
loope
aas
repnz
push
shlb
push
rolb
push
in
rcr
outsb
pop
mov
into
mov
cli
or
sarl
mov
push
negl
sbbl
push
mov
fadds
movsl
fcoms
addb
test
pop
cmp
sub
pop
mov
mov
mov
in
jb
hlt
inc
jbe
push
lcall
inc
dec
negl
cwtl
ss
jge
adc
jb
jnp
jnp
cmp
movsb
adc
xchg
or
or
cld
inc
fwait
scas
neg
in
xchg
cmp
addb
jecxz
les
icebp
pop
pushf
mov
jmp
add
pop
dec
jl
sub
mov
pop
push
stos
adc
pusha
pop
adc
test
js
fdivr
imul
sbb
or
xchg
stc
stos
xlat
jae
test
rorl
xchg
jmp
pop
fprem1
pop
jmp
xchg
jmp
push
jo
xor
add
iret
mov
data16
lret
fidivs
outsb
xchg
je
rol
cmc
cmp
and
outsl
jo
fsubr
xchg
push
sub
enter
jmp
sti
sti
mov
cmp
cmp
sub
sarb
notl
mov
aaa
pop
mov
mov
push
int
adc
decb
mov
inc
or
loop
ja
xchg
adc
insl
lret
insb
pop
and
sahf
jmp
imul
loope
sbb
ret
cmp
addb
test
stc
jl
jnp
inc
ja
jp
pop
adc
cmp
jp
rcr
and
sbb
sbb
dec
sbb
jno
lock
outsl
push
fwait
sbb
mov
sub
mov
mov
pop
inc
sub
xchg
dec
clc
push
pushf
insl
les
stos
leave
mov
jl
mov
mov
in
pop
cmp
jne
cmp
imul
scas
mov
rorl
xor
imul
push
out
push
mov
cltd
mov
pusha
cltd
xor
lods
stc
sub
hlt
xchg
ds
test
add
popf
daa
notl
xlat
ret
push
outsl
enter
nop
fsts
stc
notl
pushf
imul
fsubs
pop
jns
gs
fistpll
imul
mov
xchg
xor
mov
xor
sub
cltd
mov
xor
loope
fsubl
pop
scas
out
fnsave
stos
push
leave
jne
mov
clc
in
dec
inc
enter
mov
mov
rolb
shll
test
ss
mov
and
icebp
add
mov
jns
pop
outsl
pop
loope
jnp
out
or
xchg
arpl
mov
inc
mov
test
add
idivb
or
faddl
push
add
jo
push
pop
cmp
movsb
popa
xchg
movsl
dec
aaa
push
sub
sbb
pop
std
lcall
fisttps
pushf
or
mov
inc
jns
sbb
push
fs
icebp
xor
cli
pop
push
cld
adc
adc
dec
test
xchg
xor
divps
icebp
or
inc
sbb
imul
add
push
add
mov
fs
inc
test
in
mov
sbb
popf
leave
and
mov
bnd
cld
xchg
mov
cli
mov
push
mov
jae
xchg
mov
sbbl
rcrl
ja
notl
push
add
ret
int3
fiadds
adc
or
ds
mov
je
lods
int
pop
inc
out
gs
sub
sahf
lcall
repz
and
data16
and
xchg
xlat
adc
ja
dec
arpl
mov
or
add
sbb
mov
je
adc
in
idiv
test
cmp
lahf
ljmp
es
xchg
adc
pop
xorl
int
adc
xchg
cs
shlb
mov
adc
cmp
mov
loopne
cltd
cmp
sarl
popf
fwait
cmp
aad
insb
jne
decb
insl
jnp
outsl
sbb
inc
and
lock
inc
mov
je
fbstp
push
jnp
adc
faddl
adc
test
fdivl
xor
stc
and
dec
jae
insb
fiaddl
call
jmp
xchg
js
ret
inc
add
xlat
inc
pop
addl
scas
cmp
adc
mov
ja
mov
add
je
fs
push
les
and
xor
add
adc
fs
aam
les
and
adc
add
je
fs
push
les
and
xor
add
adc
fs
aam
les
adc
je
add
in
fs
push
les
fs
adc
fs
je
fs
and
xchg
je
je
push
inc
aam
fistpl
ds
arpl
mov
mov
pop
xchg
xlat
pop
cmpsb
push
mov
mov
mov
fcomi
push
jecxz
sbb
add
xor
and
push
cmpsb
inc
mov
xchg
ret
xorw
mov
ss
jecxz
leave
inc
xorl
pop
in
inc
xchg
or
pop
mov
push
aad
ret
jne
push
test
push
mov
push
mov
test
pusha
push
mov
add
mov
mov
rcrb
in
xor
add
out
pop
cltd
jle
dec
mov
push
imul
adc
fisttpl
dec
pop
jbe
int
addr16
dec
inc
pop
test
aad
lret
mov
testb
push
mov
xchg
popa
sbb
mov
sarl
xor
or
cmp
sub
sub
inc
shll
dec
cmpsb
mov
and
sbb
or
mov
push
fsubrp
mov
xchg
imul
cmp
dec
ret
jae
ljmp
xor
pop
mov
xchg
add
adc
imul
sbb
fdiv
push
xchg
out
cltd
ja
dec
mov
pusha
repz
repnz
ret
popa
lods
pop
xchg
jg
mov
call
in
out
adc
adc
data16
arpl
push
inc
stos
bound
jae
arpl
mov
mov
ss
jecxz
adc
add
xor
and
push
cmpsb
inc
mov
xchg
xchg
xorw
mov
ss
jecxz
adc
mov
pop
shrl
das
pop
test
xchg
xlat
jl
inc
rclb
pop
push
adc
inc
sbbl
adc
insb
and
lcall
and
andl
mov
pop
into
out
inc
lret
sbb
pushf
xchg
dec
pop
mov
iret
mov
lahf
lcall
jp
mov
int3
add
iret
jge
mov
mov
adc
sub
cmp
in
out
leave
lea
dec
popl
xchg
mov
aas
sbb
out
xchg
add
ljmp
mov
jb
test
daa
lock
stos
fsubl
lods
es
notl
ds
pop
loopne
xchg
or
mov
xlat
adc
pop
pop
or
cmp
ret
in
movb
into
cwtl
cmpsl
lahf
mov
mov
ljmp
or
mov
mov
add
mov
jne
mov
dec
les
sbb
data16
in
xor
movl
jnp
iret
mov
orb
in
mov
shrb
ja
into
faddl
xchg
jecxz
mov
adc
mov
push
aaa
and
and
add
sub
dec
or
lahf
xchg
xchg
int3
stos
mov
cmpb
and
andb
cli
pop
mov
sub
fnstcw
sbb
ret
dec
daa
mov
and
out
hlt
jne
inc
xchg
das
int
add
mov
cld
xor
stc
cs
mov
pop
loopne
sti
sub
sbb
mov
pop
in
sub
add
cmp
lods
pop
stos
pop
int3
sbb
shrl
lcall
pop
mov
clc
out
xchg
cli
sbb
fmuls
nop
insb
addr16
inc
jmp
jbe
jbe
xor
push
shll
inc
sub
mov
and
sbb
mov
pop
popf
cmpsb
repz
das
icebp
or
orl
adc
inc
pop
shl
stos
call
out
mov
dec
fwait
loopne
adc
or
push
outsb
push
pop
adc
lret
push
mov
cmpsb
aas
pushl
pop
mov
movsb
scas
cwtl
add
add
adc
push
mov
xchg
xor
mov
outsl
adc
popa
bound
add
jge
pop
pop
aas
inc
cs
sub
int3
gs
push
push
xchg
xorb
or
xor
fcompl
xor
jg
inc
pop
inc
andb
mov
jae
fisttpl
or
cwtl
sbb
mov
xchg
push
test
inc
daa
jb
test
fsubs
imul
jne
jp
push
leave
andl
into
loopne
xor
xchg
lcall
scas
je
and
call
mul
rcrb
stos
popf
hlt
bound
inc
mov
push
add
icebp
jp
arpl
dec
mov
mov
or
jns
jae
not
dec
adc
mov
pop
imul
cmp
jmp
das
add
jo
sub
bound
sbbl
add
and
int3
rcrl
pop
push
leave
scas
jp
mov
shrb
psrld
fidivrs
mov
mov
or
scas
movsb
clc
xor
push
loopne
cmp
mov
mov
jo
mov
xor
adc
jns
lds
stos
jb
pop
pop
lret
loopne
cwtl
jle
sbb
inc
stos
add
mov
xlat
sbb
inc
pop
divl
ret
xor
jp
or
loop
scas
xchg
mov
fwait
test
aaa
popa
jnp
cld
and
addr16
push
in
xor
mov
pusha
ljmp
add
push
jnp
or
dec
and
sub
add
dec
stos
adc
jo
push
flds
cmp
arpl
xchg
inc
and
fdivrs
xchg
std
xchg
xor
data16
jbe
sbb
inc
repnz
ret
mov
xor
aas
sbb
mov
mov
in
incb
dec
mov
xchg
pushf
or
adc
movb
ret
fwait
and
add
or
cmp
add
mov
or
jb
inc
mov
call
inc
mov
rolb
insl
into
mov
dec
pop
out
pushf
in
fwait
popf
test
xchg
pop
dec
pop
lds
arpl
xchg
pop
jae
and
rclb
scas
pop
ja
cmp
gs
mov
pop
inc
imul
cmp
hlt
icebp
sbb
repz
call
xlat
push
rcr
addr16
jg
icebp
mov
pcmpgtd
lret
sbb
fwait
int3
sbb
xchg
xchg
int
pop
jnp
and
hlt
leave
lods
popf
jmp
add
push
mov
out
add
and
data16
sub
es
arpl
out
dec
stos
inc
jge
xchg
mov
jg
jmp
pop
or
jbe
sub
loopne
in
aas
sbb
outsb
dec
sub
ret
mov
push
ss
ljmp
mov
or
or
leave
loopne
jp
xor
and
inc
push
jno
pop
divb
mov
andl
loop,pn
pop
pushf
xchg
ja
pop
pop
shr
push
sub
or
mov
sub
fisubrl
sub
adc
out
add
xlat
inc
stos
jb
ret
arpl
cmpsb
push
in
push
loopne
mov
sbb
outsl
xor
lods
out
addr16
ss
push
lahf
mov
inc
adc
push
js
dec
das
fmull
div
add
mov
jl
test
mov
cwtl
bound
adc
mov
jg
icebp
cmp
scas
lds
pop
loop
in
faddl
or
inc
nop
out
stos
xchg
ss
jmp
or
xchg
test
out
cmp
inc
loop
jl
fdiv
fwait
out
jbe
ret
es
dec
imulb
and
scas
adc
xchg
test
pop
lcall
add
pop
and
fistl
sub
jae
fmul
pop
mov
scas
test
inc
ja
or
stc
xor
dec
xchg
mov
and
push
mov
inc
dec
sub
stos
inc
cmp
mov
mov
out
data16
mov
jmp
leave
jb
cwtl
sbb
xchg
xor
mov
xchg
add
lea
pop
mov
cmp
cwtl
push
out
scas
fmul
hlt
fst
repnz
adc
xchg
lods
pop
inc
mov
or
icebp
cmp
mov
jle
int3
mov
mov
stc
and
push
into
add
or
fisubs
icebp
and
mov
pop
jmp
inc
scas
xor
and
mov
cmpsl
shll
push
push
cmp
lock
xor
push
pop
sbb
mov
sbb
xchg
loope
or
rcl
cmpxchg
loop
inc
lahf
jne
sbb
mov
scas
popa
mov
xchg
movsb
xchg
sub
in
xchg
pop
addr16
shlb
aam
insl
aas
repz
rolb
repnz
call
xchg
sub
fimuls
pop
mov
jg
sbb
lahf
out
fwait
aad
jns
sbb
xchg
dec
ficomps
int
pop
lahf
mov
stos
dec
je
sub
pop
ds
cs
mov
sbb
inc
jecxz
xor
mov
das
push
push
js
pushw
shll
push
cmp
pop
push
add
xchg
jb
pop
insl
outsb
loopne
sub
cmp
pop
es
fdivl
and
adc
and
sbb
out
adc
scas
cmp
mov
add
sbb
cmpsb
and
ret
dec
dec
movsl
mov
cmp
mov
cmc
addr16
mov
mov
test
xchg
stos
loop
adc
lcall
dec
xor
popa
fst
popf
insb
push
push
mov
fsubl
dec
push
push
push
imul
dec
pop
cmp
mov
imul
inc
cld
inc
jns,pn
mov
test
int3
aad
sti
add
sub
lret
add
dec
scas
ss
pop
cwtl
xchg
jae
jo
data16
arpl
arpl
and
cmpsb
mov
loop
test
add
ret
sbb
dec
push
repnz
inc
add
xor
jl
push
push
mov
jns
pop
adc
out
push
sub
jmp
out
push
lret
mov
pop
mov
mov
inc
xchg
inc
push
hlt
ljmp
push
mov
dec
idiv
xchg
popf
sbb
xchg
mov
jno,pt
jae
sti
xchg
fisubl
sub
mov
popf
scas
adc
sub
call
mov
int
hlt
sub
rcrl
repz
or
mov
jns
mov
cmp
sub
and
test
cmp
into
lcall
mov
test
rcll
ja
push
mov
jno
xor
dec
fimull
rolb
lock
add
mov
jne
mov
js
outsl
testl
sbb
dec
out
imul
jmp
sub
rcl
add
cltd
xor
andb
lcall
mov
inc
repnz
adc
push
hlt
push
loop
loopne
adc
fstps
jle
pop
dec
xchg
int
addr16
xchg
add
hlt
sub
aad
xchg
add
mov
popa
sbb
aam
mov
or
js
push
and
out
in
xchg
xor
jmp
cmp
and
test
icebp
ja
add
mov
test
popa
scas
mov
loope
in
xchg
pop
xor
pop
dec
cwtl
adc
cmc
push
roll
mov
out
jg
xchg
movsb
ret
jg
xchg
mov
jbe
lret
lock
cmp
flds
je
mov
add
insl
xchg
xlat
push
and
fiadds
test
cmovs
cmpxchg
imul
fsubrs
mov
movsb
out
mov
xchg
movsl
mov
jp
rolb
test
inc
arpl
lret
pushf
insb
shrl
mov
mov
in
or
xor
lock
scas
aas
dec
pop
lcall
xchg
popf
and
sbb
out
mov
sbb
lods
mov
jecxz
dec
jns
shll
push
xchg
aam
insb
push
add
pop
mov
das
xchg
sbb
arpl
jae
pop
repz
gs
pop
addl
add
dec
push
mov
lahf
out
push
rorb
mov
push
mov
std
lock
stos
int
sub
or
cwtl
lcall
jae
lea
arpl
dec
or
and
mov
imul
inc
repz
lcall
mov
xor
movsb
mov
mov
cmp
faddl
or
xchg
sbb
movsl
rorb
xchg
dec
sti
movsb
jp
push
lahf
inc
enter
arpl
pop
mov
sub
and
lret
push
sti
les
and
mov
or
cli
inc
mov
xor
push
rorb
cmpsl
pop
lock
inc
hlt
lret
push
out
scas
or
mov
jne
insl
inc
xor
sbb
mov
dec
xchg
cwtl
cli
jg
and
in
sub
add
cmp
and
cmp
mov
and
mov
push
inc
inc
cmpl
lods
js
push
in
lret
fs
xor
push
mov
xor
or
cmp
xor
rolb
mov
xchg
mov
in
insb
push
mov
shl
mov
pop
and
cmp
cmp
adc
add
inc
and
push
pop
js
popf
adc
js
cmpsb
hlt
icebp
jmp
or
lea
int3
push
cmp
xchg
cltd
xor
fisubrs
inc
adc
fcoml
out
popf
cli
mov
cmpb
scas
adc
sti
mul
xchg
dec
jg
jbe
jne
cltd
add
popa
jmp
cs
call
frstor
push
jne
xchg
add
fistpl
cmpsb
cmp
sti
add
lcall
jp
push
xorb
push
cs
xchg
mov
nop
cs
sub
or
out
nop
repz
leave
xchg
mov
adcb
mov
fcomps
jecxz
rorb
hlt
mov
push
add
sbb
hlt
cwtl
movsl
int
or
cmp
cmpsb
push
mov
mov
sbb
negb
adc
outsl
rcll
cmp
fcomp
and
das
int
rcr
mov
stos
xchg
mov
movsb
sbb
jns
mov
in
cpuid
jne
adcb
xchg
lret
inc
pushf
dec
pusha
sbb
aas
lds
dec
rorb
flds
adc
mov
jle
ds
shrb
sbb
push
pop
pop
mov
dec
pop
add
mov
leave
sub
adc
adc
out
inc
cmp
enter
adc
jno
mov
iret
fists
insl
add
push
push
sub
push
pushf
ss
and
das
push
add
lea
mov
mov
mov
cltd
xor
mov
nop
xor
jmp
arpl
mov
cmc
gs
shrb
sub
jle
outsb
inc
data16
jb
or
push
ficoml
add
mov
movl
jl
push
sub
rorb
jnp
test
xchg
test
cmpsl
js
xchg
jae
js
fildll
push
cmpb
dec
adc
jge
or
xor
leave
adc
aaa
ljmp
push
cmp
push
push
pop
movsb
pop
pop
push
clc
fildl
mov
call
inc
pop
cmpsl
test
movsb
loopne
ss
mov
adc
scas
xchg
test
rcr
sbb
in
sbb
mov
fdivrl
cmp
int
inc
push
push
pop
out
cmp
mov
jg
sub
mov
stc
xchg
mov
loopne
fnsave
outsl
lock
std
jae
fld
sub
xor
or
iret
pop
neg
ja
out
ror
jbe
mov
push
mov
in
jge
jp
shlb
add
jg
das
test
movsb
or
sub
mov
inc
insl
dec
mov
jge
xchg
jmp
daa
push
lahf
mov
sub
mov
clc
and
xchg
fwait
mov
or
ja
popa
rcll
mov
or
and
jecxz
out
mov
sub
xchg
or
sub
stos
std
and
cmp
popa
ret
dec
pop
xchg
push
pushf
arpl
aas
pop
leave
add
push
jne
popf
xor
add
in
add
lods
ja
cmp
rcrb
xor
cmp
icebp
dec
jle
mov
outsl
mov
scas
adc
roll
insl
inc
cmpsl
and
sbb
insl
dec
movsb
push
xchg
mov
les
sub
or
out
ss
or
jge
jge
push
and
testb
pop
jge
jb
int3
insw
dec
cmc
jmp
lock
icebp
fucom
or
mov
rcrl
int3
push
es
pop
pop
sahf
mov
cli
cmp
cld
sti
or
mov
imul
or
or
pop
lock
pushf
movsl
sub
mov
or
das
sub
es
arpl
in
std
mov
mov
out
push
mov
xchg
cmp
xor
sub
jo,pn
orl
xor
daa
add
idivl
aas
mov
pop
mov
fsubr
sub
xchg
add
push
inc
xchg
je
icebp
and
mov
adc
jns
stc
inc
fidivrl
int
and
insb
cmpsb
outsl
cmp
adc
and
int3
sti
inc
movb
xchg
es
inc
jl
dec
aas
xlat
adc
out
dec
stos
mov
imul
cmp
dec
cmp
push
or
push
cld
cwtl
ja
cmpsl
stc
lea
jno
daa
mov
cmp
pushf
arpl
lcall
cmpb
inc
add
dec
sub
lcall
jecxz
test
aad
mov
rorl
daa
sbb
cmpsl
inc
inc
sbb
pop
jno
mov
aas
adc
lds
out
dec
scas
mov
pop
in
adc
into
adc
mov
roll
arpl
scas
or
jno
ds
sub
shl
lods
nop
repnz
cmpsb
push
mov
and
mov
lds
aad
push
xor
int3
pop
subb
xor
xchg
lahf
gs
test
pop
inc
lods
outsb
mov
add
jbe
into
or
and
push
jae
call
adc
add
sbb
movsb
push
popa
jbe
mov
js
pop
clc
ja
push
sbb
xchg
je
and
ds
sub
mov
inc
and
inc
aad
push
jnp
pushf
les
ficompl
in
pop
jns
xor
rcll
or
decl
and
dec
mov
rcrb
mov
mov
jbe
jle
aaa
rorl
add
cmpsb
xchg
mov
jg
sti
outsl
sbb
dec
mov
sbb
lret
pushf
jmp
sub
je
in
sbb
pop
popf
pop
test
lea
ds
fwait
out
test
stc
test
xor
pusha
dec
mov
sbbb
and
cmp
or
cmp
mov
inc
dec
cmp
sahf
cmpsb
ffreep
lds
or
fimuls
xchg
lods
xor
or
cs
scas
adc
inc
xor
add
fmuls
jbe
cs
cmp
push
add
or
xchg
or
add
into
rolb
sti
dec
imul
sub
pushf
jl
sbb
cmp
mov
mov
bound
and
dec
mov
or
les
cmp
mov
xorb
arpl
push
pop
inc
xor
mov
sbb
cmc
dec
pop
jo
cmp
shll
loopne
cmpsb
loope
in
subl
sbb
mov
fwait
inc
leave
xor
rclb
out
push
lret
imul
xor
xchg
std
test
clc
push
and
lret
push
mov
inc
inc
fcoms
rcr
adc
mov
outsb
adc
outsb
in
adc
and
xchg
cmp
pop
lods
xchg
pop
xor
adc
lock
les
dec
ss
dec
icebp
in
movsb
push
fstps
push
sub
push
xchg
dec
sub
loop
push
mov
inc
xor
insb
sub
hlt
push
cmc
pusha
rcl
filds
push
fdivs
fxch
mov
mov
jb
ds
out
movsb
fucomi
js
cwtl
icebp
test
inc
xchg
loopne
sub
int
stos
iret
fnsave
jp
enter
cmc
fcomi
pop
pop
mov
lret
dec
add
jbe
es
mov
push
pop
bound
inc
into
incb
jp
push
je
mov
out
into
orl
int
stos
mov
dec
push
mov
and
adc
popa
jmp
jge
cmpsl
mov
popf
jns
or
xchg
ss
mov
xchg
xor
sti
or
adc
adc
ret
or
cmp
sbb
and
fsubrs
mov
sbbb
jle
pop
sbb
mov
lods
adc
movsb
jne
and
popa
xor
sbb
mov
cmp
push
int
cld
cmc
and
pop
pop
xchg
adc
sbbb
sahf
lock
sbb
idivl
int3
xchg
adcl
cmc
or
int
adc
test
and
jp
cli
ss
shlb
aam
jo
stos
adc
mov
mov
cmp
and
iret
push
imul
sub
xchg
aam
fcoms
mov
pop
xchg
jmp
call
mov
adc
xchg
aam
bound
pop
mov
adc
and
ljmp
inc
repz
or
cmc
add
mov
mov
lock
jne
mov
sbb
adc
sahf
rol
lcall
or
hlt
adc
add
popf
stos
xchg
cmpsb
stos
clc
push
popa
mov
xlat
add
cmp
cs
aad
inc
fwait
pop
inc
mov
call
pop
dec
cmpsl
test
call
dec
xor
or
push
xchg
lcall
sub
mov
xor
cltd
mov
cli
push
daa
cltd
push
loope
xchg
sbb
ret
movsb
fisttps
xchg
sti
inc
and
mov
pop
xchg
fnstenv
pop
pop
dec
xchg
aad
aam
movsl
sub
push
jmp
xchg
gs
pusha
dec
pop
test
xor
insl
xchg
cmp
mov
dec
pop
mov
xchg
movsl
mov
adc
ja
movsl
imull
xor
jne
jmp
push
inc
xchg
inc
pop
pop
ror
hlt
pop
jmp
jge
mov
mov
xchg
mov
pop
lods
psadbw
cmpsb
inc
mov
xchg
xchg
xorw
mov
ss
jecxz
adc
add
xor
and
push
cmpsb
inc
mov
xchg
xchg
xorw
mov
ss
jecxz
adc
add
and
and
push
cmpsb
inc
fnsave
bound
mov
and
testl
das
adc
cmpsb
push
mov
push
jecxz
xchg
cltd
jl
sbb
and
sbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
pop
xchg
out
bound
sbb
add
add
add
add
add
or
hlt
add
add
add
add
add
jmp
add
add
add
add
add
add
add
xor
mov
add
add
add
add
add
cwtl
add
add
add
inc
add
xchg
add
add
add
add
add
add
add
add
or
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
xor
jmp
dec
add
add
add
add
add
add
test
jl
add
pop
add
add
add
add
add
or
mov
ret
add
add
add
add
add
add
add
imul
cltd
add
inc
add
add
add
add
add
add
add
adc
add
add
add
or
add
add
xor
add
add
add
add
mov
dec
add
add
add
add
jno
adc
add
add
add
add
mov
add
add
adc
sti
add
add
add
add
ret
add
add
add
add
add
add
add
and
pop
add
add
add
or
add
mov
cmpsl
add
add
add
dec
add
add
add
add
add
add
add
jno
mov
add
dec
add
add
add
lret
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
jo
mov
pop
add
add
pop
add
enter
imul
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
jbe
test
xor
sbb
test
add
dec
add
add
add
add
add
add
int3
add
add
add
add
add
inc
add
add
add
add
mov
add
add
add
add
add
add
verw
xor
lock
add
add
add
add
test
repz
add
add
addr16
add
add
add
add
add
add
add
add
add
add
stos
add
add
arpl
popa
add
add
mov
add
add
add
add
add
adc
jo
dec
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
add
xor
mov
sbb
add
add
dec
add
and
fwait
add
dec
add
add
adc
lcall
add
add
add
add
add
ret
mov
ljmp
push
adc
sbbb
and
inc
imul
filds
es
push
push
or
and
orb
xchg
jo
addb
mov
push
sbb
icebp
mov
aas
mov
in
adc
cmp
mov
pop
incb
or
xor
dec
test
or
aaa
dec
je
sub
and
adc
sub
xor
cmp
mov
adc
dec
sar
dec
pop
dec
leave
andb
xor
add
mov
enter
cmpsl
mov
arpl
inc
jne
mov
cwtl
mov
or
rcr
adc
push
mov
iret
pop
aam
push
cmp
fbstp
pop
js
leave
sub
fiadds
dec
xor
add
rcrb
mov
push
ja
cmpsb
add
or
xchg
push
in
xor
and
push
or
sub
or
mov
cmp
mov
scas
in
jge
outsl
xchg
pop
adc
ja
les
shl
pop
add
and
mov
push
and
lret
push
loop
xor
push
outsl
pop
aad
loopne
push
inc
repnz
cmp
daa
mov
int
push
push
data16
cmovp
ja
xlat
pop
dec
aaa
adc
in
pop
aas
pop
imul
xchg
mov
std
ficompl
and
enter
into
dec
fcompl
jp
push
stos
leave
adc
mov
outsl
loope
nop
lcall
cmp
mov
sub
and
push
and
sub
fs
test
jb
mov
mov
or
dec
dec
push
mov
inc
aaa
jns
jmp
fcompl
dec
jmp
push
fcmovnu
jo
loopne
clc
sub
pop
push
fcoms
xchg
mov
jns
cmpsl
push
inc
xorb
arpl
pop
ds
aas
lock
stos
cmpsb
js
dec
jp
mov
in
pshufw
fcmovu
push
enter
jbe
mov
divb
dec
xchg
shll
jmp
iret
outsl
inc
inc
push
cmpb
addr16
dec
repz
jp
clc
lahf
inc
ret
mov
pusha
notb
jbe
add
adc
and
popf
insb
pop
sbb
imul
fidivl
gs
fwait
xchg
push
adc
mov
psadbw
add
cwtl
pop
sub
push
lock
mov
idiv
lock
mov
test
shll
andl
mov
andl
push
cmp
andl
call
jb
xor
daa
in
xchg
xchg
aaa
lods
mov
lret
and
aaa
rcll
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
