call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
ret
cmp
xchg
inc
mov
repz
adc
add
jno
popa
mov
mov
mov
inc
icebp
xor
scas
rcll
shll
and
adc
add
mov
popa
mov
mov
mov
inc
icebp
psraw
sar
rcrl
sub
cmpb
mov
in
lret
das
sub
lds
cmp
test
fistl
out
pop
cwtl
adc
xorl
inc
clc
sub
or
push
xor
fildll
push
cmp
int3
movsb
mov
mov
pusha
pusha
push
xchg
int3
push
loope
test
insl
jp
xchg
sbb
lahf
mov
jle
adc
dec
and
inc
xchg
mov
mov
sti
xor
dec
push
call
movsb
mov
out
aas
mov
je
dec
inc
mov
jle
test
loope
push
sbb
xchg
adc
ret
and
sahf
mov
dec
mov
ficoms
or
je
mov
repz
and
roll
jae
xchg
xchg
xlat
orl
leave
roll
ret
add
push
xchg
inc
in
lock
arpl
adc
insl
icebp
inc
xchg
dec
mov
ret
xor
jns
jo
popa
xlat
xor
pop
loop
les
hlt
xor
data16
pop
movsb
adc
xchg
jo
adc
pxor
and
in
and
adc
add
repz
adc
add
jno
popa
mov
mov
mov
inc
icebp
xor
and
adc
add
repz
adc
add
jno
popa
mov
mov
test
stos
jecxz
cmp
dec
inc
xor
mov
mov
imul
pop
dec
rcrl
int3
jmp
push
loopne
push
int
pop
repz
mov
shl
repz
dec
aam
dec
or
loopne
xorb
push
jne
fidivs
and
in
shll
xor
jb
int3
cmp
test
xor
add
stc
bound
jb
ds
mov
call
jb
lret
adc
push
call
fiaddl
xchg
push
dec
mov
sbb
jge
dec
addr16
push
repz
cmpsl
inc
mov
cmp
push
mov
ljmp
or
js
mov
in
loopne
mov
jae
dec
aaa
and
mov
mov
jp
and
pop
mov
mov
xor
jmp
add
cmpl
ret
mov
in
insb
dec
add
ret
jae
or
sbb
inc
push
stc
movsb
ss
mov
and
fwait
fimull
decl
aam
test
iret
mov
cmp
add
cmp
mov
cmc
stos
test
fcoml
adc
pop
aas
imul
stos
divb
mov
adcb
dec
ret
push
xchg
pop
sbb
dec
out
or
jmp
xchg
xchg
fs
jns
dec
add
jmp
jp
add
pop
lods
add
loop
das
xchg
jbe
rolb
mov
dec
cmp
in
shll
ja
pop
sbb
push
pop
fs
vpmovusdb
mov
sbb
xor
xor
jae
cmp
mov
add
stc
pop
int3
push
mov
cltd
jae
jl
sbb
adc
sub
loope
xchg
cld
inc
adc
lods
push
sub
hlt
adc
xchg
and
iret
in
cmp
sbb
or
call
sub
add
loop
push
inc
xchg
adc
mov
arpl
fwait
outsb
lods
cmpsb
push
and
sbb
repz
and
add
int3
xchg
add
dec
cltd
push
cmpsl
repz
out
and
lds
xor
cmp
test
inc
lock
adc
inc
ror
and
xor
cmp
mov
add
decb
sbb
push
scas
and
xchg
js
sub
sti
out
or
cmp
inc
pop
stc
adc
mov
pusha
sbb
mov
sub
pop
and
aaa
push
mov
idiv
push
add
adc
sub
scas
lret
mov
sarl
jmp
add
fs
mov
inc
ljmp
test
or
adc
mov
rclb
push
test
int
push
out
cmpsb
jae
outsl
rcll
cmp
in
call
push
ss
cmpsb
dec
mov
cmp
negb
call
and
sbb
bnd
mov
ret
xchg
mov
pop
pop
das
adc
mov
sbb
mov
xchg
lds
sbb
fldcw
mov
out
sbb
push
dec
sbb
idiv
jbe
or
sahf
mov
insl
mov
push
adc
pop
pop
jecxz
push
adc
mov
arpl
sub
pushf
jg,pt
shld
xor
pop
mov
jecxz
mov
shll
mov
jnp
mov
pop
mov
movsl
sub
fstpt
test
cmp
push
sbb
pop
shlb
mov
fisubrs
mov
jl
pusha
in
cmp
push
dec
repz
or
fisubs
std
int
ds
pop
sub
or
imul
xchg
sbb
psubusw
fiaddl
lcall
jge
cmp
mov
fildl
gs
fmull
leave
sahf
push
shll
adc
mov
sti
jno
aas
fsubr
jg
push
sbb
pop
arpl
sub
addl
roll
icebp
sub
lret
inc
inc
mov
popa
jp
cwtl
mov
and
mov
sahf
jle
or
mov
cltd
aam
int
sti
ljmp
jg
add
jg
pop
dec
and
cmp
ficoml
ret
imul
mov
iret
stos
das
leave
icebp
add
out
pusha
cmp
movb
pop
xor
arpl
nop
std
jl
cwtl
mov
cli
shrl
or
adc
xchg
repnz
push
cwtl
push
mov
int3
lret
xor
dec
leave
test
rcll
inc
dec
repnz
outsb
aas
pop
cli
imull
jne
test
sbb
sbb
ja
mov
dec
aam
in
cmp
mov
lcall
lods
aam
pop
cmpsl
leave
hlt
and
jbe
push
adcb
pop
enter
addb
cwtl
lret
jne
xor
bound
mov
add
rorb
mov
sbb
fnsave
push
or
cld
rcrb
push
xor
lods
fwait
divl
mov
imul
push
xor
cmpsl
out
push
mov
leave
imul
xchg
pop
popf
popf
imul
les
jbe
push
pop
pop
mov
out
xor
xor
lds
jns
sbb
push
xor
or
or
fistl
cli
js
jb
cltd
xchg
xchg
lods
lods
lret
loop
shlb
dec
ja
clc
fdivl
enter
jge
jmp
inc
dec
inc
popf
stc
jmp
sbb
jle
inc
push
outsb
lea
jl
jb
call
xchg
sbb
or
xor
or
mov
int3
sbb
out
mov
adc
xor
pop
aad
cwtl
pop
movsb
es
push
sbb
jne
and
xchg
push
jo
mov
pop
adc
and
idivb
adc
jle
cmp
leave
out
inc
xor
out
push
sbb
nop
sub
cs
lcall
shl
mov
mov
mov
and
push
and
push
jmp
pop
filds
hlt
enter
sub
dec
push
xor
into
loope
fadds
fdivrs
nop
addr16
rolb
enter
mov
xor
mov
orb
mov
adc
xor
mov
mov
cmp
sbb
push
inc
sbb
cmc
push
jbe
fidivl
inc
sbb
or
arpl
gs
and
xchg
xor
shrl
add
leave
lahf
movsw
push
movsb
cmp
lahf
ss
sub
pop
dec
stos
sub
popa
add
popa
inc
cmp
or
mov
and
add
insl
adc
sahf
scas
pushf
test
cmc
sarl
lret
jle
aad
out
mov
loope
add
adcl
ret
dec
jmp
sbb
mov
sbb
dec
jmp
cli
movsl
movsl
jge
fdivrp
jecxz
add
pusha
scas
jp
add
orl
popf
mov
sub
inc
inc
push
std
push
mov
push
paddd
iret
ffreep
xor
or
insb
mov
psadbw
stos
pop
cmpsl
push
mov
rol
fcmovu
add
daa
mov
mov
mov
ret
dec
cmp
xchg
mov
cs
mov
sub
shrb
pushf
shl
js
mov
xchg
sbb
push
shrb
sub
xor
sub
and
pop
mov
ljmp
sahf
ret
push
in
mov
adc
jae
inc
xchg
sub
orb
mov
lods
mov
push
jo
fwait
pop
pop
sti
or
imul
adc
aam
in
ret
jg
push
lcall
decl
ljmp
out
mov
popf
lods
jb
lea
js
mov
mov
push
jmp
cmp
aam
xor
icebp
fidivrl
iret
push
bound
pop
insb
sbb
mov
or
fdiv
out
inc
mov
outsl
xor
sbb
inc
adc
ds
sahf
ljmp
xor
out
pop
ret
sub
std
jge
push
cmc
dec
bound
outsb
daa
hlt
xchg
arpl
adc
mov
fsts
popf
push
push
cwtl
mov
pop
xchg
sub
mov
jne
inc
add
adc
out
add
fiaddl
inc
mov
jge
insl
test
mov
std
dec
divl
mov
pop
bound
adc
cmp
cmp
lahf
push
push
mov
xchg
xchg
mov
scas
or
sub
adc
jle
rcrb
cld
push
mov
mov
jo
das
jecxz
mov
loop
jecxz
ja
lds
and
filds
pop
int3
aaa
out
loope
in
dec
ret
and
mov
pusha
mov
pop
je
out
insl
subl
gs
fisttps
xchg
in
pop
test
inc
in
adcl
push
and
sbb
imul
xor
jns
jmp
pop
mov
adc
or
jge
push
notl
mov
pop
int
imul
pop
pop
es
sti
pop
rorl
dec
xor
cmc
xor
jge
mov
shrb
mov
test
push
stc
ficoml
std
sbb
mov
call
scas
and
stc
push
lahf
test
mov
jecxz
lods
sbb
pop
mov
mov
stc
lock
add
jns
ss
popa
xor
add
scas
and
clc
mov
inc
adc
idiv
popf
and
xor
jge
insl
mov
mov
std
repnz
das
in
pop
sub
xchg
and
mov
mov
xlat
adc
lcall
xor
add
mov
iret
jbe
jmp
lret
in
pushf
jmp
mov
xchg
xor
xchg
mov
xor
leave
hlt
fst
daa
add
push
inc
imul
notl
jnp
hlt
add
iret
ret
mov
in
push
jmp
in
call
xchg
mov
addl
mov
mov
repnz
leave
ss
push
inc
pop
das
mov
adc
inc
push
cmp
jb
pushf
xchg
push
inc
aam
mov
movsb
xor
inc
pop
xor
inc
jnp
sub
divl
ret
cmp
xchg
mov
adc
cmp
cmp
addr16
dec
push
bound
loopne
pop
lods
and
dec
aad
add
lods
pop
jg
aas
lods
jge
les
xor
add
iret
adc
fldt
add
roll
ret
sarl
std
pop
std
pop
inc
inc
inc
cmp
inc
mov
mov
cmp
cld
sub
jb
scas
sub
scas
inc
loopne
sahf
in
pop
pop
or
pop
enter
movl
stos
add
lods
fbstp
mov
out
imul
pop
das
ret
test
jp
pop
testl
adc
mov
xchg
push
sahf
jb
lods
lahf
stc
mov
mov
lods
fmull
xor
out
andb
cmpl
dec
lea
or
sub
into
and
push
dec
nop
add
in
mov
sbb
dec
cmp
clc
outsb
out
xchg
or
pushf
push
iret
shrb
dec
xchg
outsb
mov
pop
xor
cli
mov
xor
dec
sub
and
icebp
xor
enter
or
inc
test
push
test
lcall
cmp
mov
jbe
sbb
add
mov
pushl
pop
cwtl
jbe
mov
negl
push
mov
xchg
mov
call
int3
aas
inc
or
mov
nop
xor
test
vpshld
jnp
lock
shl
mov
cmp
mov
cmpsl
xor
les
cmpsb
iret
mov
pop
xchg
sbb
filds
lds
sbb
data16
sti
aam
aaa
sbb
hlt
arpl
lcall
mov
add
rorb
adc
mov
sbbl
out
xchg
xorl
or
shlb
ss
scas
jno
mov
push
pop
inc
push
bound
inc
mov
add
icebp
out
push
sub
cmp
push
les
ja
mov
mov
into
and
outsl
mov
push
andl
inc
adc
ds
mov
popa
cmp
pop
jmp
jno
insl
stos
xor
popa
bound
lahf
rcr
testb
inc
mov
add
sub
lahf
mov
mov
adc
outsb
dec
ja
popa
push
or
push
mov
test
cltd
mov
jg
and
sahf
pop
inc
movsb
ja
mov
cmpsl
loopne
pop
mov
pop
sub
sbb
and
cmp
or
cmp
xchg
xor
pop
and
rcll
sbb
sub
cmp
mov
and
xor
mov
xor
sub
movsl
jp
subb
and
jmp
stos
jle
push
sbb
xchg
xchg
jo
dec
cmpsl
xor
jno
cmp
xchg
in
push
data16
or
daa
test
inc
sub
jno
je
loop
les
movsl
test
xor
mov
jmp
fs
push
mov
mov
xor
jg
sbb
pop
or
push
lds
lret
inc
int
pop
mov
iret
push
pop
adc
mov
mov
imul
mov
adc
stos
xor
sbb
dec
add
adc
or
hlt
das
sbb
mov
dec
fiaddl
sbb
xor
mov
sbb
jnp
rcll
imul
notl
movsb
sbb
sbb
cld
push
dec
adc
lcall
jno
pusha
ljmp
mov
jmp
adc
push
stos
test
jb
mov
adc
mov
in
xor
scas
in
fbstp
inc
dec
aaa
int3
rorl
leave
push
mov
hlt
mov
push
cmp
mov
sbbb
push
and
inc
loopne
sub
lret
pusha
push
jl
pop
cmpsl
mov
push
jecxz
ficompl
or
icebp
mov
push
pop
or
sti
or
add
xor
ja
sbb
xor
lret
insb
outsb
loop
subb
into
out
incb
jle
dec
icebp
mov
sti
add
inc
jmp
rolb
push
addb
fsubl
push
test
adc
aas
mov
imul
pop
adc
inc
inc
rclb
stos
aas
sub
jno
adc
push
inc
sbb
roll
hlt
out
imul
das
push
pop
rcrl
pop
divb
mov
ja
mov
xor
sbbb
xchg
aaa
pop
cmp
ss
xor
pop
push
test
sbb
leave
or
pop
pop
aad
sbb
lcall
and
mov
loope
jb
in
or
sbb
lds
mov
dec
gs
test
imul
cmc
pushf
inc
cmp
aad
pop
lock
clc
fcoms
push
pushf
ret
xor
in
push
mov
mov
leave
pop
jne,pt
mov
push
lods
cs
stc
mov
pop
sbb
jb
mov
mov
xor
imul
mov
xchg
outsb
lea
repnz
test
notb
leave
xor
out
repnz
jge
adc
jnp
bound
les
mov
rclb
xchg
mov
jle
leave
jno
loopne
dec
nop
scas
dec
sar
data16
or
inc
push
std
call
xor
stc
loope
ja
xchg
stos
sub
cltd
cmp
mov
js
jbe
outsl
xor
mov
add
push
add
jecxz
xchg
ss
push
fiaddl
cmpb
jp
mov
sbb
dec
pop
loopne
roll
xorb
hlt
inc
dec
in
jp
sbb
clc
iret
lds
cs
fidivrs
adc
xchg
lahf
mov
dec
pop
pop
ret
ret
sub
push
xor
xchg
xor
cs
inc
jle
and
lret
push
push
outsl
or
mov
sbb
ja
imull
mov
ss
mov
fisttps
mov
or
movsb
ja
mov
sbb
adc
mov
fsubs
jno
fcmovnb
xchg
push
sti
mov
sub
lcall
sbb
sarb
sbb
sbb
dec
out
out
push
xor
inc
add
mov
sub
inc
pushf
mov
cmpl
movsl
nop
in
xor
lods
shll
cld
imul
std
popa
push
mov
pop
mov
or
push
imul
pusha
sbb
push
ret
fwait
cmpsb
outsl
addl
out
ret
sub
in
add
dec
inc
daa
push
insb
imul
adc
dec
cmp
xor
rcll
lods
sbb
cmc
jecxz
sub
mov
jp
jbe
dec
das
rcrb
push
add
inc
popf
add
jns
inc
arpl
rcll
out
loope
and
int
jg
push
das
ret
push
cli
jae
inc
not
push
mov
sarl
push
shll
dec
into
xor
subb
adc
insl
jle
add
sbb
insl
mov
into
xor
pop
inc
xor
and
push
lea
lret
push
aaa
dec
mov
or
in
jecxz
xchg
pusha
push
adc
jnp
test
mov
repz
clc
pushl
cld
add
repnz
ret
and
aad
pop
pop
int
stc
mov
mov
pop
xchg
out
fmul
dec
adc
ljmp
inc
inc
jecxz
clc
mov
icebp
jecxz
or
and
das
sub
mov
mov
iret
jmp
add
cmp
ret
scas
rcr
mov
popf
cs
mov
rcrb
loopne
mov
add
sbbb
xchg
add
jl
inc
out
inc
pop
mov
cmpsb
imul
rorb
test
push
cld
push
mov
mov
into
mov
xchg
rcrl
nop
dec
jb
mov
xlat
inc
mov
xchg
mov
les
adc
daa
sub
jne
pop
popf
push
mov
dec
das
xlat
adc
andl
mov
ss
popa
inc
adc
inc
or
push
rorb
adc
push
popa
nop
jns
sbb
imul
inc
out
jno
adc
and
das
cmp
jge
in
sti
fs
mov
jae
mov
ja
rcll
jnp
pop
incl
lods
pop
fwait
shl
mov
pop
call
rclb
dec
xchg
lods
iret
rcl
dec
clc
and
and
mov
mov
pop
dec
out
add
pop
push
mov
sahf
les
sbb
mov
inc
pop
fdivr
inc
daa
add
inc
lret
sub
pop
or
fdivrs
popa
loopne
push
adc
movsb
adcb
leave
push
xorl
arpl
les
insb
rorl
inc
mov
insb
mov
out
inc
sbb
mov
pusha
adc
aam
sarl
aaa
imul
sub
or
rcrb
pop
pop
cmp
test
dec
in
mov
jb,pt
push
repnz
pop
loop
mov
enter
cmp
dec
ja
js
mov
lea
xor
js
push
push
ljmp
pushf
test
sub
stos
sub
mov
push
mov
mov
push
test
daa
adc
iret
inc
lods
jns
sbb
lcall
mov
mov
jns
out
mov
movsl
adc
pshufw
out
out
mov
inc
sub
es
sub
test
shl
and
frstor
mov
pop
or
mov
jno
sub
mov
fwait
pushf
dec
xlat
push
cmp
add
cmp
xchg
lods
cltd
rorl
in
xchg
add
lods
or
pop
inc
in
or
lods
loopne,pt
mov
ja
jl
push
xchg
xchg
jns
inc
fwait
inc
stos
jmp
inc
push
aad
cli
and
addl
pop
lock
jmp
fildll
mov
ret
add
pop
mov
lahf
or
lret
mov
jmp
in
pop
fadd
push
dec
lcall
mov
rolb
mov
and
cmpsl
adc
jo
xchg
dec
enter
add
imul
das
jge
scas
sbb
jp
or
iret
sbb
ret
or
inc
mov
lret
call
xchg
mov
xchg
push
push
divl
adc
out
adc
ljmp
xor
in
ror
pop
dec
add
pop
cld
xchg
cmp
aad
cmp
add
jecxz
test
push
sar
lcall
fs
push
lahf
push
popf
ret
jl
mov
inc
mov
fidivl
xchg
sti
mov
xlat
icebp
clc
push
pop
rolb
ja
push
mov
mov
ja
and
xor
mov
nop
aas
addl
adc
add
repz
adc
add
jno
popa
mov
mov
mov
inc
icebp
xor
and
adc
add
repz
adc
add
jno
popa
mov
mov
and
adc
addl
adc
xor
and
adc
add
jno
popa
mov
mov
mov
inc
icebp
xor
and
xchg
roll
or
dec
mov
cmp
pop
and
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
cmp
or
sbb
fcompl
push
mov
dec
cwtl
dec
call
or
or
stc
cmp
or
sbb
push
cltd
pop
mov
jns
dec
call
sbb
or
loopne
jmp
jno
pusha
mov
sbbl
xlat
sub
dec
call
dec
push
orb
outsb
inc
cmp
jo
pop
lahf
dec
cs
loop
pop
rcrb
sar
adc
test
push
movsb
xor
int
int
sub
dec
dec
mov
sbb
inc
xlat
push
les
xchg
stos
out
cld
test
cld
inc
test
call
out
or
test
cmp
xchg
cltd
jns
mov
pop
jbe
sub
mov
push
inc
xchg
fsubs
shll
xchg
cltd
pusha
push
add
hlt
jle
mov
dec
adc
movsb
aaa
sbb
test
fmuls
dec
add
mov
xor
pop
lods
push
pop
enter
loope
and
or
sbb
jg
push
nop
mov
mov
push
lock
rcrb
fsubrs
pushf
pop
jmp
sbb
push
movl
or
es
sbb
jmp
add
js
dec
std
or
jmp
fisttpll
mov
xchg
inc
mov
mov
jo
and
js
dec
cltd
pop
mov
pop
cwtl
dec
call
sbb
or
stc
cmp
or
sbb
push
cltd
pop
mov
pop
cwtl
dec
call
sbb
or
stc
pop
outsb
mov
imul
test
int3
dec
and
clc
add
inc
adc
add
pusha
push
push
test
push
xchg
inc
fsubrl
xor
cltd
int3
insl
test
or
test
and
xor
dec
lods
push
andb
repnz
in
inc
mov
mov
dec
xor
movl
into
adc
jno
cmp
fadd
mov
sbb
shrb
lret
jecxz
pop
mov
jnp
arpl
push
ds
and
mov
adc
mov
pop
mov
sbb
daa
dec
hlt
xchg
pop
ret
addb
and
mov
xor
jp
lods
ss
testb
pop
stos
xor
dec
and
ret
mov
lcall
add
push
das
loop
push
pop
mov
add
movsl
out
xchg
mov
scas
mov
iret
or
pop
stos
ret
pop
jb
inc
push
sub
mov
jp
je
mov
mov
loop
and
jg
lods
or
inc
xor
cld
pop
cmp
lea
jae
jno
scas
sti
jb
cltd
ficomps
shlb
inc
cli
add
jns
mov
xor
pushl
mov
pop
outsb
ljmp
sahf
and
pop
dec
rolb
inc
and
pushf
jecxz
fcmovne
jnp
add
push
ja
xchg
insl
dec
adcl
sub
push
push
shrl
dec
fwait
xor
loopne
dec
out
and
data16
test
bsr
test
imul
in
push
push
xor
jno
mov
mov
mov
inc
mov
nop
fnstcw
jg
sbb
addr16
xlat
xchg
dec
sub
ret
xchg
push
lret
nop
pop
fld
or
jp
mov
pop
push
and
mov
stos
xchg
mov
mov
sti
out
in
dec
fs
push
lea
imul
xorl
roll
aam
inc
pop
jmp
mov
sub
jnp
lcall
pop
cltd
pop
int
pushf
jno
les
dec
movsl
ret
addb
adc
arpl
push
xor
pop
xchg
addr16
cwtl
lea
imul
mov
and
pop
aas
out
ret
and
push
lock
out
in
push
fists
inc
imul
stos
cld
xchg
push
xor
sbb
fwait
mov
and
cmpl
dec
sub
cwtl
pop
pop
mov
jmp
ror
cld
sub
inc
xchg
xlat
fnstcw
frstpm(287
enter
in
cmp
and
and
enter
mov
mov
fcom
ds
or
mov
push
xor
in
inc
jmp
push
pop
xlat
pop
insl
out
mov
punpckhbw
jmp
push
pop
sahf
mov
fdivrl
clc
je
es
pop
into
imul
fadds
in
inc
adc
call
xor
mov
cmp
jge
inc
xchg
testl
mov
dec
stos
adc
popf
inc
scas
push
rcrl
push
cltd
cmp
xchg
rcr
scas
pushf
pop
inc
ret
in
inc
int3
inc
outsl
fs
cwtl
inc
push
shlb
lods
add
popl
inc
xchg
jl
into
pop
ds
out
test
inc
shlb
xchg
mov
jns
pushf
mov
and
push
mov
in
popa
or
sub
pop
scas
inc
call
nop
out
or
bound
xchg
inc
jbe
shl
jmp
addr16
pop
inc
sbb
mov
mov
xlat
fdivp
mov
and
adc
shl
dec
lods
jp
popf
xor
jb
jp
jmp
mov
push
push
mov
push
scas
mov
push
int3
add
mov
in
push
test
mov
rcrl
aaa
and
inc
sub
shrb
sbb
xchg
gs
std
imul
or
xor
jg
mov
testb
cmpsb
xchg
leave
xchg
lret
pop
scas
sbb
hlt
rcll
mov
mov
movsb
dec
sub
outsl
lret
arpl
cmp
xor
push
imul
roll
mov
add
add
xchg
leave
cmp
mov
je
and
cmc
and
mulb
shlb
hlt
roll
jmp
outsb
repnz
repz
inc
adc
popa
call
push
mov
jnp
mov
inc
aas
jge
test
movsl
mov
add
shld
notl
mov
push
pop
in
cmp
sti
loop
icebp
cmc
pop
insb
lcall
sbb
cmpsb
sub
lret
ljmp
popa
push
in
test
jo
dec
cmc
jno
or
fdivs
jno
and
adc
ret
jmp
fmull
pop
out
sub
fcmovnbe
pop
insl
xchg
movl
rorb
cs
xchg
iret
lds
icebp
repnz
add
add
imul
pop
mulb
adc
mov
dec
jbe
lods
pop
shrb
pop
les
push
xchg
loop
loop
lea
pusha
fistpll
pop
xor
movsb
out
dec
fistpll
sbb
jbe
jne
les
mov
loop
shll
mov
repz
outsl
dec
idivl
scas
in
cmp
cld
mov
dec
dec
aaa
adc
adc
mov
loope
or
and
frstor
mov
dec
dec
adc
xchg
sbb
lret
or
jp
lret
xchg
negl
enter
dec
push
cltd
iret
mov
xchg
shlb
pop
outsl
test
adc
mov
mov
adc
xor
out
push
inc
dec
lcall
nop
shlb
adc
cmp
push
mov
push
and
pop
fmull
mov
lds
fisttpll
mov
out
dec
test
out
pop
inc
xchg
fs
int3
lret
lahf
gs
mov
push
jbe
out
mov
sub
mov
in
outsl
lret
jecxz
ljmp
pop
dec
mov
jno
cwtl
aad
jb
sub
imulb
data16
bndstx
out
icebp
dec
sbb
test
ljmp
lahf
push
bound
adc
adc
sub
add
loopne
hlt
cmpsl
and
xchg
adc
dec
mov
jmp
fmull
push
fistpll
push
out
cmp
pop
push
add
subl
mov
rorb
jb
loopne
xor
loopne
out
imul
es
dec
mov
xor
jmp
and
pop
lea
add
pusha
sub
add
or
adc
lods
dec
pop
cmp
pop
scas
xchg
arpl
pop
or
in
sbb
dec
bound
pop
add
movsb
sub
sbb
xor
adc
sub
test
sub
loop
lret
mov
jp
xchg
imul
dec
xchg
ds
cmp
bound
and
mov
mov
push
cmp
inc
aad
jecxz
mov
bts
sub
and
outsl
insb
es
adc
test
jl
stos
leave
push
arpl
xchg
cmp
orb
lock
clc
jnp
sbb
movb
cmpsb
inc
push
cli
sarl
lret
push
insl
xchg
push
pop
out
sub
out
mov
js
jmp
xor
add
aas
movsl
js
jo
es
mov
les
dec
jg
sbb
sub
fcoms
pop
pop
lds
out
aam
jae
orb
aam
dec
and
les
dec
test
flds
jno
popa
mov
sbb
jns
jb
mov
scas
add
pop
loope
in
daa
in
stc
mov
xchg
shl
arpl
push
dec
cld
and
cmpsb
xor
stos
or
sub
ret
ja
sbb
out
sub
cmp
in
push
jae
push
fwait
push
std
and
movsb
sti
loopne
hlt
xchg
add
repz
mov
cld
xchg
pcmpgtb
mov
pop
push
add
test
pop
movsb
sub
mov
sub
fwait
imul
out
mov
xor
jae
es
lods
stos
xor
fldl
xorl
and
es
xchg
mov
jp
cmp
mov
fst
pop
pusha
ficoms
sahf
jo
in
inc
pushf
sbb
popa
sub
clc
insb
sarl
gs
sub
push
ffree
adc
fs
push
push
pop
out
mov
mulb
mov
dec
push
clc
push
push
lret
les
iret
enter
repnz
imul
mov
xor
cmpsl
dec
sbb
test
adc
jmp
out
mov
test
lahf
arpl
adc
jp
jbe
dec
stos
dec
mov
dec
adc
lret
loope
popa
mov
aaa
lahf
in
clc
mov
repz
cmpsl
sub
sub
mov
test
cmp
es
jecxz
pop
add
enter
adc
into
and
fldt
lret
inc
sbb
lods
int
insl
sub
call
pop
xor
xchg
iret
jge
xor
dec
test
jle
push
or
push
mov
icebp
pop
call
das
sbb
xor
sarl
jns
scas
cmp
cmp
mov
mov
gs
push
adc
icebp
sbbl
sbb
lret
dec
fidivrs
xchg
sbb
shrb
or
std
jle
sbb
cmp
stos
xchg
mov
xlat
mov
jge
mov
cmp
jno
push
aaa
rcll
dec
repz
xchg
and
jb
adc
fwait
mov
mov
push
jge
mov
mov
sub
call
adc
cmp
ror
loopne
in
mov
aam
mov
insb
cmp
nop
sbb
ror
mov
ss
xor
or
adc
pop
inc
lock
test
xchg
sbb
adc
test
mov
mov
popf
mov
inc
fwait
pushf
mov
push
push
lret
jecxz
xchg
add
test
pop
mov
sub
add
mov
dec
hlt
xchg
movsl
call
aam
wrmsr
push
push
leave
xor
cmp
pop
daa
rcl
stos
xchg
mov
dec
mov
push
cwtl
or
lods
stos
mov
int3
les
iret
mov
xor
int3
out
jle
jg
or
or
cmc
gs
or
push
popa
jno
and
shlb
mov
add
aad
pop
cmp
lcall
or
jno
fcmovbe
int
and
js
push
adc
lret
repnz
inc
les
aam
rcr
loopne
andb
jmp
sbb
popa
stos
imul
fs
push
xchg
mov
call
fnstenv
cmp
inc
mulb
mov
imulb
cmp
fisubrs
mov
iret
aad
sbb
loope
inc
in
sub
and
je
jne
pop
nop
sub
pop
in
inc
mov
js
shll
pop
dec
mov
dec
filds
push
in
xor
xchg
jle
inc
ljmp
out
addr16
lret
pop
mov
les
clc
inc
push
sub
stc
in
mov
orb
jle
add
mov
jno
jnp
ret
sbb
movsb
jecxz
inc
xchg
stos
pop
or
int
cmpsb
jmp
sub
mov
test
ss
sti
aam
xor
adc
loop
add
jae
cmp
inc
movsl
mov
or
and
outsl
cld
lret
out
out
pop
pusha
std
mov
mov
xor
mov
mov
adc
mov
push
and
push
insb
mulb
xor
loopne
sti
mov
dec
shrb
sub
loop
dec
add
pop
or
and
adc
pop
xor
data16
cs
adc
cli
or
loopne
pop
popf
lcall
or
dec
into
repz
push
shl
or
mov
popa
repz
movsb
and
pop
jge
mov
repnz
sahf
cmp
iret
jle
out
inc
es
rorb
inc
adc
inc
andb
repz
sub
push
add
lods
aas
push
ss
popa
cld
in
int3
arpl
ljmp
jg
cmc
jmp
pushf
stc
and
je
add
fwait
dec
adc
fistps
cld
dec
inc
sbb
mov
lds
lahf
xchg
mov
or
int
xor
sub
or
in
je
mov
adc
rcl
scas
outsl
xchg
ret
fsubs
mov
pusha
xor
dec
inc
cmpsb
push
mov
repnz
dec
and
and
je
and
sub
add
mov
inc
jle
imul
cltd
xor
lcall
out
inc
xchg
testl
ds
mov
jmp
lcall
rcr
test
push
aad
inc
sbb
mov
addb
sbb
pop
aad
test
push
fwait
popf
call
aad
scas
nop
mov
xchg
dec
into
jne
push
lods
mov
and
imul
push
inc
push
pop
repz
fnstcw
xchg
mov
addr16
insl
sahf
mov
jne
lret
repz
add
mov
sbb
rcrb
mov
mov
in
cmpsb
test
bound
jnp
nop
sub
or
sbb
rorb
push
mov
push
adc
inc
inc
push
cwtl
xchg
cmp
mov
mov
mov
cmp
mov
fldt
mov
adc
jnp
mov
data16
iret
aam
out
adc
pop
iret
and
sub
dec
mov
lods
insl
dec
aaa
xchg
aaa
rclb
in
cmc
scas
dec
and
sub
cld
loope
movzbl
test
pop
and
jne
add
clc
lahf
das
push
shr
lea
lret
jb
imul
jne
shlb
push
and
pop
sub
push
xchg
cmpsl
ja
push
cld
int3
mov
mov
out
xor
adc
int3
xchg
and
lods
xchg
xchg
cld
shrl
mov
push
mov
pop
pop
fwait
add
lcall
mov
mov
mov
leave
daa
test
in
mov
movsb
adc
jae
jnp
scas
mov
push
loope
outsl
push
icebp
sbb
lock
in
jl
test
incl
nop
icebp
movsb
adc
mov
xor
cwtl
xchg
xlat
shll
icebp
pop
sub
arpl
add
int
push
iret
inc
add
insb
add
shll
add
jg
adc
fs
out
pop
dec
mov
xor
in
out
into
arpl
pusha
fwait
cmp
mov
xor
test
hlt
out
loopne
and
add
dec
dec
inc
mov
movsb
out
cmp
adc
ret
hlt
mov
cli
shl
imul
sahf
movsl
cwtl
sbb
mov
stos
push
xor
jne
call
mov
jg
adc
sarl
sub
cmc
loope
das
fucomip
pop
std
mov
adc
call
clc
arpl
xchg
and
sbb
sub
imul
jae
cltd
fildll
cmp
int
sbb
mov
aam
insb
pandn
arpl
xor
aam
ret
or
jnp
cmp
movsl
jne
pop
and
and
rcr
mov
lret
push
sbb
jne
divb
mov
scas
cld
dec
mov
lods
lret
pop
add
mov
pop
xchg
push
mov
sti
ret
mov
xlat
std
mov
repz
and
sbb
repnz
scas
in
fwait
add
and
ret
xlat
jae
sbb
dec
mov
movsl
cwtl
pop
dec
and
push
xlat
pop
bound
cmpxchg
ficoml
ror
mov
leave
mov
or
stos
testb
insb
inc
adc
flds
pop
ljmp
in
je
insb
data16
inc
jno
rorb
stos
and
repz
mov
jo
enter
test
mov
enter
fs
cmpsb
jne
stos
mov
imul
roll
test
xor
sahf
cmc
xor
dec
ss
mov
js
mov
or
sbb
or
das
sub
dec
pop
in
inc
test
dec
mov
add
mov
popa
mov
and
mov
add
arpl
adc
xor
cld
imul
sti
push
inc
xor
in
xchg
ljmp
fstps
in
xchg
mov
inc
in
adc
jb
aaa
cli
mov
cmp
popa
out
sbb
xor
sub
jo
fadd
cmc
jge
sbb
rcrl
daa
js
lods
sahf
aad
das
mov
cmp
dec
cs
imul
sbbb
test
xchg
jecxz
int
dec
fcoms
pop
add
cmp
cmp
and
es
les
dec
cmp
xchg
mov
xchg
jno
xchg
and
push
add
push
add
cli
sub
adc
int3
xchg
fisubrl
jns
mov
sbb
hlt
cmp
lds
sbbl
fmull
adc
sub
popf
ds
ror
test
les
jo
hlt
adc
jnp
lcall
ss
adc
out
mov
sbb
hlt
xor
mov
pushf
dec
std
fcompl
bound
xchg
push
cli
inc
and
adc
xchg
rcrl
mov
shrl
les
inc
fdivl
xorl
sbb
cmp
mull
gs
mov
cmp
pop
inc
dec
push
pop
pop
mov
push
mov
mov
jg
std
aad
or
in
in
jb
ja
es
pop
dec
cmpsl
std
insl
push
jno
loopne
mov
pop
push
cld
push
adc
dec
nop
scas
push
sbb
movsb
push
mov
sbb
or
inc
cmpsb
dec
pop
adc
notl
hlt
inc
dec
lds
pop
mov
iret
jne
and
je
mov
push
mov
loopne
xor
test
mov
inc
push
sub
cmpsl
dec
and
leave
push
sbb
in
loop
loope
pop
dec
shl
mov
xor
aas
push
mov
and
nop
jp
mov
je
xchg
test
jle
pop
xor
pop
adc
fcomp
mov
xchg
cmp
and
cld
inc
nop
popf
mov
sbb
push
pushw
xor
pop
ret
popf
lcall
bnd
push
inc
ja
bound
inc
clc
repz
mov
mov
mov
jo
femms
push
popf
out
mov
mov
stc
or
pushf
push
std
mov
sub
sarb
mov
push
cmp
mov
push
jge
xchg
mov
xorb
int
push
lcall
addb
movsb
prefetch
or
push
inc
into
xor
xorb
push
mulb
xchg
inc
ret
or
mov
cmp
cmp
dec
xor
into
loopne
outsl
mov
stc
std
pop
jle
bound
fdivr
jge
push
movsl
scas
adc
cmpsb
les
mov
rcll
pop
testl
fistpl
mov
mov
jl
fisttps
outsl
jle
push
push
rorl
in
js,pn
push
xchg
sbb
mov
cwtl
or
lods
les
imul
dec
mov
inc
call
jb
test
pop
dec
adcb
inc
and
rcll
add
jo
add
xor
mov
xor
in
sahf
lret
icebp
rcll
int
push
push
in
dec
cmc
push
push
xor
aam
mov
jne
and
jp
cmp
imul
dec
jnp
xchg
mov
or
out
or
lods
in
or
jmp
sub
test
int3
loopne
aam
repnz
orl
adc
scas
cmp
iret
jle
outsl
lahf
rcrl
mov
popa
push
push
adc
stos
sub
lahf
daa
jb
sahf
in
push
add
or
xchg
fcmovne
xor
jp
xchg
stos
jle
or
cmp
fldcw
aad
leave
add
pop
add
movsl
arpl
rorl
jb
andb
jns
mov
out
bound
outsb
pop
jp
sbb
mov
out
jns
sub
and
daa
icebp
inc
out
mov
mov
daa
pusha
fwait
cli
push
aaa
or
insb
sahf
shll
iret
lahf
cli
pop
lds
jo
fldenv
add
jae
fimull
mov
adc
fadds
mov
pop
in
enter
ljmp
iret
lock
ja
mov
clflush
fistps
cs
xchg
jp
and
mov
mov
dec
gs
and
addr16
test
mov
imul
dec
add
adc
call
test
popf
jns
jbe
out
push
adc
mov
in
inc
sbb
jmp
push
cltd
pop
mov
pop
cwtl
dec
call
sbb
or
stc
cmp
or
sbb
push
cltd
pop
mov
pop
cwtl
dec
call
sbb
or
stc
cmp
or
sbb
push
cltd
pop
mov
pop
cwtl
dec
call
sbb
or
stc
cmp
or
sbb
push
js
enter
push
jns
ret
and
ds
mov
aaa
out
notb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imul
push
push
sbb
pop
hlt
test
xchg
xlat
loope
hlt
mov
xchg
xchg
sub
xor
add
adc
fs
je
inc
pop
push
outsl
hlt
out
imull
lret
nop
mov
xchg
xchg
addr16
addb
je
cmp
push
out
aam
mov
mov
repz
mov
cmpsl
in
adc
ds
das
arpl
pop
xor
inc
mov
xchg
add
orb
mov
orl
shlb
mov
and
jg
popa
cmpsl
gs
xchg
je
and
add
xchg
push
in
das
add
inc
in
dec
jp
sahf
push
sbb
mov
popa
and
outsl
inc
add
mov
inc
insl
push
jmp
xchg
inc
imul
cmpsl
testb
sub
sti
pop
aam
fwait
scas
idivl
fs
mov
pop
hlt
hlt
mov
xchg
cli
sti
push
mov
jmp
shrd
testb
xchg
ret
hlt
in
xchg
adcb
xor
add
js
fs
xor
inc
pop
in
pop
push
out
negl
xlat
test
mov
push
arpl
inc
inc
jp
or
pop
push
inc
xor
not
mov
lcall
add
or
outsb
daa
jae
lods
cmc
mov
xchg
clc
mov
leave
xchg
mov
rcll
aas
je
push
xor
or
pop
push
pop
movsb
out
testl
aam
and
xor
add
adc
fs
je
inc
pop
push
pop
movsb
out
testl
aam
and
lock
lods
stos
dec
xchg
sub
fsubs
xor
push
add
mov
jns
xor
movb
idivb
mov
dec
inc
jo
scas
iret
scas
out
hlt
pop
movsb
insl
dec
cltd
ljmp
imul
scas
dec
pop
insb
push
inc
cmp
dec
lcall
xchg
inc
push
push
xor
idivl
or
mov
stos
jno
jg,pt
out
xor
add
jo
push
loop
or
stc
jns
outsl
xchg
js
push
lcall
dec
iret
out
ret
mov
test
pushf
push
les
stc
jg
ss
les
pop
int
pop
pop
lret
push
dec
adc
call
jp
fsubrl
sbb
loop
icebp
jp
sbb
mov
lea
insl
adc
adc
mov
lods
cli
divb
in
xor
xor
jl
mov
mov
fcos
or
pushf
ljmp
or
mov
pop
hlt
pop
pop
or
lret
adcb
int
insl
lock
xor
cmp
clc
sbb
lods
jmp
repnz
pop
add
mov
mov
and
lret
mov
loop
cmp
jp
adc
jnp
mov
js
call
adc
mov
and
or
in
repnz
leave
shlb
lock
data16
mov
cmpsl
movsb
pop
sub
sbb
jbe
jl
int
int
xor
push
lahf
inc
jg
and
lods
sbb
pop
sub
stos
sub
pop
aaa
push
jno
pextrw
or
inc
fdivrl
daa
std
popf
xor
pop
js
xchg
pop
push
push
aam
repz
push
js
outsl
nop
dec
cmpsb
xor
enter
mov
js
cwtl
push
inc
sbb
cmp
mov
jbe
cmp
mov
jne
imul
xor
cmp
gs
dec
or
pop
sti
cmc
and
xchg
test
arpl
add
xchg
sti
mov
mov
xchg
pop
xchg
pop
cmp
mov
sahf
lcall
add
cmp
cmp
push
fcmovne
sbb
mov
pop
jbe
xorl
cmp
xchg
addb
pop
dec
pusha
aaa
add
mov
mov
cmp
cmp
add
pusha
repz
mov
jo
dec
leave
pop
xor
cmpl
and
mov
cmp
pop
xchg
or
hlt
xlat
repz
jb
sbb
cwtl
pop
sti
movsl
mov
jecxz
mov
pop
gs
or
push
ret
xor
incb
pop
sub
daa
and
push
pop
adc
xchg
movb
jnp
idivb
outsl
ljmp
mov
xor
xchg
test
dec
push
les
push
dec
inc
cmp
nop
mov
dec
out
lea
cmp
repz
lds
push
loopne
repz
mov
daa
shrb
stc
sbb
add
jb
negb
mov
xchg
sbb
mov
repnz
imul
and
pop
push
outsb
insb
mov
mov
add
add
mov
aas
adc
mov
mov
and
je
jmp
cmc
fcoms
mov
ret
mov
dec
movsl
mov
loope
push
addr16
repz
adc
mov
cli
test
mov
or
in
ss
rorl
rcll
push
gs
push
push
rcll
movsb
xchg
dec
mov
mov
notb
movsb
or
gs
push
mov
cld
inc
ja
fld
push
pop
fstpt
mov
push
dec
cmp
fstpt
pop
cmp
mull
pop
add
bound
popa
popa
in
int3
sbb
xchg
jae
dec
dec
fadd
enter
or
and
push
xor
loop
cbtw
push
pop
inc
fidivs
daa
jae
ljmp
adc
movsb
loop
out
mov
add
shll
int
adc
lcall
inc
repz
pop
dec
ja
or
or
jb
sub
daa
gs
xchg
int3
xor
in
pop
jne
sub
lret
pop
outsb
dec
sahf
jmp
xchg
fwait
aam
pop
dec
cmp
imul
pusha
inc
lock
dec
xchg
cmp
rcrl
cmp
pop
cmp
and
dec
aam
mov
ret
aaa
xor
push
cmp
bound
in
call
mov
add
je
jg
jb
nop
out
outsl
or
cli
out
jo
push
push
cmpsb
mov
incl
cmpsl
inc
das
and
stc
mov
repnz
inc
xor
adc
aaa
enter
adc
adc
es
and
out
sbb
inc
add
out
jle
cmp
xlat
outsb
cltd
popl
std
jae
adc
ljmp
pop
jle
sahf
pusha
push
cmp
aaa
adc
in
fwait
adc
insb
mov
add
outsl
push
repnz
dec
icebp
inc
dec
mov
inc
jbe
push
js
negl
in
lods
shll
cmp
inc
jge
out
fcomp
mov
pop
les
jl
add
xchg
mov
add
inc
ret
jle
adc
mov
mov
shll
or
cmp
cmpsb
sbb
sub
dec
fcmovnu
mov
dec
adc
js
enter
adc
mov
sahf
mov
mov
outsb
push
jnp
lods
mov
fldl
push
jb
lods
mov
adc
inc
fcompl
mov
sub
xchg
mov
scas
mov
das
jecxz
push
pop
lret
inc
sbb
sbb
jmp
dec
or
pushf
pop
pop
orl
push
push
jne
push
imul
inc
out
dec
or
adc
insb
inc
adc
rclb
mov
and
mov
push
add
mov
sbb
clc
fcoms
cmp
je
jmp
inc
sbb
in
mov
push
jecxz
inc
add
sub
out
cmp
push
faddl
lret
mov
dec
ljmp
popa
inc
xor
fadd
pop
mov
ds
mov
or
sub
ja
push
lcall
out
jne
lds
and
inc
lods
xchg
xor
daa
fnsave
xchg
insl
loope
imul
cmp
xchg
xor
dec
push
inc
pop
jecxz
mov
cmp
aaa
fs
mov
push
arpl
popf
adc
lret
lods
fistps
jns
mov
inc
or
push
orb
je
outsl
sbb
call
dec
rcll
icebp
pop
adc
nop
adc
jmp
shlb
add
jbe
aam
xchg
or
mov
or
lret
xchg
movsb
repz
lock
mov
push
rcrl
cmp
scas
push
insl
and
adc
jmp
xchg
xor
ret
jbe
mov
cmpsb
test
ficomps
rol
cmc
cmp
push
add
je
mov
push
popa
test
add
push
xor
cmp
add
in
mov
fcom
mov
cmp
cmp
push
push
cmp
jmp
cmp
mov
in
jp
xchg
add
adc
add
dec
mov
add
je
sub
test
xchg
jmp
dec
test
jge
add
add
sti
jg
mov
xor
mov
ss
cwtl
dec
xlat
push
repnz
movsl
fsub
sti
push
mov
loopne
aad
ret
imul
push
sbb
nop
jbe
adc
test
icebp
in
push
aam
ret
out
adc
xor
and
int
dec
pop
leave
xchg
or
ret
dec
popa
mov
add
pop
filds
mov
cmp
mov
push
les
mov
push
cmp
sti
stc
jo
mov
jge
clc
cmp
loop
jp
addr16
jo
pushw
pusha
or
sub
or
fbstp
jg
mov
mov
testl
push
sbb
loope
mov
sub
pop
cwtl
mov
repnz
push
dec
je
add
push
leave
or
gs
push
enter
popf
jp
nop
cwtl
push
sahf
or
pop
xor
mov
xor
sbb
scas
popf
push
inc
fisttps
ss
insb
aas
sti
cmp
rolb
sbbl
pusha
dec
sub
cmp
jmp
fcomps
scas
movsl
lahf
dec
or
lret
int
mov
cwtl
in
outsl
lcall
aaa
mov
jmp
pop
adc
mov
fiaddl
aad
je
mov
jne
lods
in
push
add
xchg
pop
jnp
and
jno
enter
sub
mov
pop
xchg
jno
mov
pushf
dec
imul
jbe
in
pop
push
or
out
rolb
mov
daa
mov
in
sub
sbb
mov
pop
push
rclb
mov
test
in
mov
out
sahf
int3
fdiv
mov
movsl
cwtl
sbb
loopne
mov
pop
cltd
flds
xor
add
stc
mov
sub
xchg
sbb
fcmovnu
xor
jmp
sbb
lock
scas
aam
adc
shufps
cmp
mov
sbb
adc
cmp
cwtl
test
daa
inc
add
push
lcall
mov
lret
mov
int3
outsl
jmp
mov
adc
mull
daa
ds
jno
jne
out
mov
mov
mov
jno
rcrl
jmp
movsl
push
repnz
int
sbb
xchg
in
inc
sarb
jge
js
or
lret
and
jae
dec
aaa
lahf
push
mov
lret
idivb
or
xchg
mov
lahf
sbb
sbb
push
push
mov
cmp
in
xlat
pop
mov
loop
lret
mov
icebp
idivb
push
int
icebp
loopne
inc
pop
add
jg
arpl
in
enter
andb
movsb
scas
push
shll
pop
inc
insb
jno
xor
inc
lahf
pop
cld
sub
and
repz
mov
mov
fwait
iret
cwtl
aaa
lret
mov
nop
out
pop
mov
and
mov
jo
cmpsl
pop
inc
pop
jns
gs
xor
icebp
dec
and
and
fldenv
mov
fucomi
mov
push
jge
repz
jg
xchg
sub
pop
cmp
adc
sub
push
daa
adc
lret
fmull
imul
idivb
mov
push
adcl
insl
cmp
cmp
mov
sarb
je
sbb
stc
bound
addr16
cmp
mov
insl
adc
cmp
insl
jg
aaa
mov
jo
adc
into
cmpsl
pop
sbb
je
cltd
mov
jno
test
fistl
xchg
subl
out
xor
xor
movsb
inc
test
jno
xchg
and
xor
pop
fdivs
std
adc
jecxz
sbb
mov
lret
stc
out
jle
inc
adc
inc
ficoms
jle
and
pop
movsb
dec
sbb
xchg
insl
test
lcall
xchg
push
mov
jno
add
mov
sub
dec
out
je
aam
aam
mov
mov
ret
and
fsubrs
pop
ret
popl
dec
push
mov
xor
jae
push
sub
pop
add
dec
stos
dec
or
and
push
push
or
or
xor
stos
das
sub
fs
loopne
and
js
ds
xor
push
xchg
fimull
jbe
xorl
push
and
xor
lcall
jge
adc
out
jmp
imul
mov
test
mov
sub
lret
push
add
sbb
push
cmp
pushf
jecxz
sbb
loopne
xor
jb
pop
mov
xchg
jo
cli
adc
xchg
lcall
dec
fcmovnu
mov
or
imul
aaa
lea
stos
xchg
jle
andl
and
ljmp
ret
mov
js
hlt
mov
insb
xlat
pop
pop
inc
pop
inc
cmp
push
jmp
enter
hlt
subl
int
push
sub
insl
push
imul
fidivs
push
mov
xchg
xchg
aas
adc
jmp
push
das
lock
mov
mov
mov
fldenv
and
sahf
js
rcr
mov
incb
clc
sarb
fstp
out
in
xchg
dec
ljmp
jge
cmp
adc
mov
inc
mov
jns
xlat
push
pop
jbe
outsl
inc
stc
add
ffreep
in
sbb
ljmp
mov
jle
out
xchg
in
push
push
jns
mov
cmp
imul
mov
and
mov
lretw
mov
sbb
sahf
push
adc
cwtl
push
sbb
lock
jle
push
xlat
push
dec
rorb
fldenv
arpl
ret
jno
enter
mov
inc
outsb
mov
pop
mov
mov
in
loope
nop
nop
arpl
mov
in
insb
in
jb
in
adc
cmp
loopne
bound
mov
jecxz
jno
cli
lretw
js
jbe
push
push
aaa
ficoms
add
pop
push
lods
push
leave
xor
clc
xor
push
out
cmp
pop
sbb
sbb
cmp
jp
cmp
in
cmp
jo
hlt
fldl2e
cmpsl
iret
push
inc
outsb
xor
push
inc
cmpsl
push
add
cmp
sub
cmp
jle
loop
cmp
sti
xor
xchg
mov
add
in
cs
mov
inc
mov
jge
push
inc
pop
mov
scas
lods
fadds
test
push
inc
js
dec
mov
enter
into
jne
movsl
mov
pop
xchg
xor
push
popa
ja
pusha
cmovl
loop
sbb
sbb
xchg
decl
inc
push
fs
jl
insb
es
divb
or
scas
sahf
cmp
or
xor
mov
or
cs
fisttpl
and
mov
rcrl
sub
push
bound
jo
adc
or
roll
rcrl
push
push
add
movsl
pop
sub
xchg
lret
pop
sbb
pop
ljmp
xchg
outsl
addr16
dec
and
movsl
or
jb
push
push
cmp
lea
adcl
int
mov
and
push
loopne
mov
adc
cwtl
insl
push
sub
ficomps
add
aaa
std
xchg
loopne,pt
sbb
xor
call
in
cmp
addl
jae
das
xor
call
lods
pop
jg
inc
mov
add
in
dec
jp
fsts
adc
lret
push
dec
loopne
inc
cli
xlat
imul
push
in
push
xor
and
lret
stos
test
repnz
and
jecxz
inc
dec
mov
sub
or
jne
das
repz
xor
cmpsb
push
sbb
imul
cmp
adc
in
push
push
scas
out
cs
xor
pop
pop
push
adc
sti
iret
cmp
inc
ss
mov
or
daa
fnstenv
mov
popa
ret
xor
push
lret
jae
int
jne
sahf
xor
xor
push
fwait
push
pop
arpl
mov
ds
sub
repz
aaa
mov
xchg
pop
aas
stos
iret
popa
dec
daa
test
sub
out
xor
xor
fwait
jne
xor
and
dec
jmp
ljmp
test
icebp
mov
adc
inc
xorl
insl
and
sbb
xchg
add
add
dec
mov
sub
mov
int3
dec
cmp
test
sub
pop
dec
mov
fwait
xchg
int3
push
jle
jbe
fisttpll
mov
testb
data16
je
ss
pop
imul
in
outsl
xlat
movl
xor
mov
push
dec
clc
and
pop
jnp
out
inc
faddl
cmp
mov
inc
sbb
pop
fcmove
or
aaa
ret
fdivrl
inc
aad
sub
pop
into
mov
jp
dec
or
push
push
dec
in
daa
loope
xlat
loopne
rcll
loop
mov
fstl
insb
lods
sub
jnp
es
xor
lret
sbbl
sub
enter
js
push
insb
jo
into
mov
pop
xor
or
sbb
mov
into
cmp
xchg
hlt
out
or
dec
sbb
adc
sahf
lea
out
jae
bound
dec
cltd
sub
xchg
dec
jmp
je
or
dec
jmp
std
xor
adc
or
jl
mov
out
adc
jne
or
pop
sti
dec
inc
mov
cmp
andb
pop
lds
cmp
repz
call
je
test
mov
pop
xchg
bound
or
insl
movsb
jl
scas
ds
or
xchg
jns
addl
sbb
mov
pop
imulb
dec
add
xchg
idivl
xchg
cmp
mov
ss
insl
rclb
repz
scas
in
pop
adc
ret
pop
cs
pop
lds
or
dec
push
mov
or
rcrl
lret
lods
sbbl
scas
push
test
int
cltd
xchg
or
bound
lcall
ja
fs
stc
pop
pop
popf
scas
or
push
mov
lret
push
test
test
enter
push
mov
out
adc
xchg
inc
stc
repz
jmp
cli
jle
push
fldenv
mov
addr16
mov
es
inc
mov
sbb
dec
pushf
pusha
sub
mov
shll
cmp
mov
cmpsb
dec
addb
mov
inc
push
stos
addr16
cmp
ret
movsb
clc
push
pop
inc
daa
lret
xor
in
popf
xor
mov
lret
adc
lret
sbb
sbbl
add
ret
dec
push
push
mov
jne
and
addr16
dec
push
jbe
adc
or
mov
das
fldcw
cmp
dec
shl
pop
push
jb
mov
xor
push
mov
mov
repz
lea
aaa
outsl
ds
jb
push
pop
add
sub
lods
nop
cmp
push
testb
push
or
mov
mov
push
push
lods
leave
fmuls
gs
xor
into
fcoml
in
idiv
sbb
scas
sbb
mov
mov
in
add
movsl
sbb
xor
shll
dec
les
mov
lea
add
xor
mov
xchg
mov
xlat
jl
or
iret
jp
ret
fucomi
cmpsl
mov
out
pop
sub
out
ja
xchg
arpl
aaa
pop
cs
stos
lock
mov
cmp
and
and
faddp
std
fistl
sub
jge
inc
pop
std
mov
iret
xlat
cmp
leave
jne
mulb
dec
inc
leave
jno
mov
and
sub
pop
or
call
fmulp
ds
cmpsl
mov
xchg
push
sbb
mov
movb
jnp
pinsrw
imul
cmc
mov
sub
xchg
nop
rorl
xor
dec
pop
lret
sbb
and
cli
push
scas
mov
jb
mov
jg
mov
scas
out
movsb
pop
stc
push
movl
insl
sbb
ret
dec
into
lahf
adcb
add
push
jne
ss
js
pusha
aam
or
add
sbb
js
push
arpl
movsb
mov
fstpl
pop
in
lods
lds
push
xor
jne
pop
divb
repnz
add
cmpsb
add
add
mov
push
inc
adcb
push
movsl
lods
sbb
xchg
cld
or
outsl
xorl
fisttpl
hlt
cs
push
adc
mov
aas
jg
cld
cmpsl
ss
je
into
mov
xchg
jnp
repz
fwait
lods
mov
mov
xchg
mov
adc
cmpsl
enter
sti
stc
test
iret
jmp
repnz
orb
sbb
mov
das
mov
jbe
cmp
js
enter
xor
or
mov
cmp
xor
shr
pushf
xor
in
inc
divb
fsubrs
add
jbe
andb
movb
lods
jp
lods
out
mov
adc
fidivs
nop
imul
or
stc
pop
stos
add
add
cmp
lods
and
sbb
dec
pop
or
jp
pop
mov
sub
das
push
divl
or
shrl
pop
jnp
mov
shrl
sbb
das
out
dec
sbb
jne
fst
sbb
out
aad
mov
xchg
push
cmpsb
mov
fwait
std
in
mov
rol
fcomps
push
or
cld
inc
stc
insb
lahf
incl
das
aam
sbb
mov
mov
loope
jl
sbb
cs
pop
jb
lods
xorb
addb
lds
sbb
mov
pop
push
ja
inc
or
daa
je
inc
pop
push
pop
movsb
out
testl
aam
and
xor
add
adc
fs
je
inc
pop
push
pop
movsb
out
testl
aam
and
aaa
ja
inc
adc
gs
jo
inc
pop
push
pop
mov
nop
xlat
in
in
mov
xchg
xchg
cmp
sbb
inc
cmp
fs
fs
inc
pop
aam
movsb
out
pop
cs
xchg
mov
cmp
push
mov
mov
call
lret
lea
xor
bound
add
test
adc
loop
repnz
loop
sbb
push
push
loopne
push
jo
adc
bound
mov
fwait
lret
stos
cli
mov
mov
mov
or
sbb
jge
pcmpgtd
push
or
mov
xchg
fimull
push
roll
jmp
data16
jno
cli
mov
dec
xchg
ret
mov
mov
adc
pop
sub
mov
das
out
bound
lret
cmpb
or
mov
adc
push
bound
fisttpll
fsubs
movsl
ja
pushf
xchg
sub
testl
push
xor
adc
jb
jge
jmp
xchg
stos
repnz
mov
and
clc
add
pushl
mov
cmp
das
js
or
adc
std
cmp
popf
and
xchg
and
push
aad
ret
mov
ret
xchg
repnz
sbb
jnp
imul
or
jnp
loope
out
xlat
xchg
xchg
mov
scas
repz
xlat
sub
inc
dec
pop
ds
dec
pop
pop
xchg
stos
cmpb
subb
add
ja
push
jo
jb
adc
inc
bound
ret
xlat
xchg
xchg
repnz
add
bound
jb
add
jb
bound
xchg
ret
mov
mov
xchg
repnz
add
bound
jb
add
jb
bound
xchg
ret
jmp
lret
or
or
insb
mov
scas
int3
jp
and
jg
iret
shrb
adc
outsb
or
adc
repz
xchg
fisttps
mov
mov
pop
jnp
xchg
lods
scas
adc
inc
push
imul
xor
or
or
fucomi
jmp
push
jmp
scas
out
add
orb
jge,pt
mov
or
bnd
js
nop
mov
stc
xchg
in
stc
push
cmp
fidivs
mov
jmp
aam
or
inc
negb
std
cltd
sarb
ss
mov
test
clc
testl
lcall
pop
sarb
xchg
orb
mov
xchg
aaa
xor
cmc
out
xorps
imul
mov
mov
mov
push
rorb
jl
jbe
add
inc
inc
jge
stc
mov
out
out
push
sbb
push
dec
mov
add
ficoms
push
es
lods
push
and
fisttpll
sub
sub
mov
ret
fisubl
jmp
mov
ret
mov
ret
addb
inc
dec
fildl
cmpb
lret
imul
xchg
ljmp
stos
jecxz
icebp
fwait
ss
or
stos
sbb
repnz
add
add
cmpsb
rcl
loopne
in
sub
jbe
inc
outsl
sbb
pusha
mov
jbe
mov
in
sbb
movsb
movsb
xor
scas
sbb
leave
or
dec
add
outsb
pop
sub
into
test
insb
ret
mov
int3
dec
jae
popa
xchg
leave
mov
mov
dec
push
into
clc
adc
inc
or
subl
aas
adc
mov
cmpb
jbe
mov
int
fldenv
icebp
pop
test
loopne
add
xchg
push
xchg
cmp
lods
sbb
sub
cmp
sub
push
lcall
sub
testb
dec
xor
adc
rcrl
out
jp
jae,pt
or
les
and
mov
loopne
int
mov
ljmp
insl
mov
cmp
test
jo
jne
mov
cs
mov
add
mov
out
xchg
inc
ljmp
cmp
inc
fnstsw
aam
mov
and
cmp
jecxz
xor
dec
sahf
lods
pop
add
pop
test
imul
mov
jg
xchg
test
xchg
shr
not
outsb
mov
push
faddl
push
cmc
jns
ret
repz
jge
mov
sub
fidivrs
aad
xchg
int
sahf
dec
add
cld
add
sub
xchg
enter
add
cmpsl
insb
popf
or
pop
popa
test
lea
rcrl
lahf
fdivr
xor
lret
cwtl
arpl
adc
and
add
pop
jmp
mov
mov
xor
sub
call
add
pop
mov
imul
lret
out
xchg
aam
push
add
repnz
mov
add
and
sbb
into
int3
push
pop
es
call
les
movsb
mov
cltd
js
addr16
loope
add
test
hlt
or
add
pop
dec
sbb
fsubrl
sub
shll
out
fists
jo
jle
cmovnp
mov
sar
addr16
xchg
cmp
mov
fnstenv
xchg
std
xchg
inc
mov
std
dec
fidivrs
jae
incb
insb
movsb
stos
jne
fwait
ljmp
xchg
or
sbb
enter
repz
mov
jns
hlt
decb
stc
push
fisubrl
jmp
cli
mov
jae
movsb
pop
pop
aaa
xchg
inc
fstpt
negb
and
xor
dec
cmp
sbb
ja
scas
fisubl
mov
lock
mov
scas
dec
inc
insl
cmp
in
xor
mov
mov
xor
sbb
je
fs
mulb
xor
repnz
jbe
pushf
sahf
sub
inc
fildl
stc
or
repz
dec
inc
pop
and
sub
add
lock
inc
outsb
sbb
push
inc
xchg
adc
sbb
or
ficoml
cwtl
cli
inc
jle
js
mov
pause
std
adc
jo
xchg
mov
popf
xchg
outsl
xchg
lcall
mov
cmp
dec
cmp
pushf
ljmp
pop
icebp
lea
xchg
repnz
outsl
sub
cmp
lds
sub
mov
xorl
cmp
mov
jne
js
stos
fsubrl
cmpsb
mov
fwait
pusha
cmpsb
add
dec
or
in
outsb
cmp
lods
adc
xchg
pusha
pop
jp
inc
inc
xor
lea
xchg
add
or
pop
insb
outsl
adc
cld
inc
sub
mov
add
and
jg
pop
adc
dec
outsb
in
dec
jo
mov
ljmp
adcb
jle
js
or
pop
jge
lock
dec
sbb
aam
mov
lcall
jo
test
cmp
add
mov
lds
push
and
sbbl
xor
fidivrl
mov
popa
cli
stos
add
xor
jo
push
jl
les
sub
jo
cmc
sahf
mov
lea
enter
adc
xor
out
nop
xchg
jl
xor
inc
sub
xlat
push
push
out
lea
shlb
loop
je
stc
call
push
popa
out
xor
clc
les
push
sar
ret
xor
inc
sub
sub
pop
into
jg
mov
cmpsb
add
or
cltd
push
sbb
xchg
push
lock
mov
xchg
push
int3
push
pop
xor
cld
leave
inc
xor
inc
pop
add
lds
dec
sub
es
xchg
dec
test
cmpsl
ds
xchg
mov
flds
mov
rorl
popa
inc
notb
adc
push
xor
sbb
es
or
fs
stc
pop
dec
cld
xor
in
lods
mov
loop
bound
xor
dec
rcrb
insb
pop
int
jecxz
fsubp
repnz
sbb
pop
aad
popf
repnz
std
clc
adc
push
pop
enter
lods
and
in
ss
jecxz
shrd
call
lret
inc
mov
jno
xchg
mov
add
scas
shrl
jae
adc
mov
gs
pop
pushf
push
push
push
in
call
imul
mov
icebp
aam
nopl
mov
mov
popf
push
sub
fmul
bound
dec
std
jno,pt
insl
xchg
stos
ret
and
arpl
or
nop
rorb
in
mov
dec
xchg
jnp
fwait
sub
lods
lea
call
inc
les
sbb
sbb
adc
push
fidivrl
pop
sub
sbb
js
cmp
cli
faddp
dec
cmp
fsubrl
outsl
shll
pop
ret
jne
movsb
ja
mov
jg
push
shlb
or
dec
ss
mov
jmp
js
stos
jae
xor
jp
mov
push
negb
stc
mov
jmp
outsl
jne
notb
daa
push
or
cmp
out
jle
push
inc
mov
loope
sbb
pop
push
in
out
mov
fistpl
and
jne
mov
cmpsl
pop
or
hlt
or
in
faddl
cmc
jp
ds
std
fnstenv
mov
mov
fildll
push
fsubl
mov
ret
xchg
xor
leave
jp
loope
jns
lret
mov
dec
cwtl
test
imulb
out
stos
mov
pushf
in
pop
lds
jnp
add
jp
push
cmp
adc
jo
clc
loope
or
sub
push
sub
push
fwait
in
add
fists
xchg
xchg
iret
xchg
mov
fwait
pop
mov
xorl
cmp
xor
pusha
outsb
jl
aam
jns
fadds
or
sbbl
fdivl
aaa
adcb
ret
aad
and
ret
xchg
cli
xor
ret
rcrl
jno
dec
negb
stc
je
jno,pn
pxor
mov
mov
mov
mov
add
fidivrs
clc
or
mov
leave
adc
add
insl
xlat
jg
pop
inc
inc
sub
mul
sub
push
sub
repnz
loop
test
rcrb
push
pop
push
push
repz
and
in
mov
fistpll
dec
pop
mov
adc
test
jnp
into
cwtl
cld
jb
mov
sbb
pop
out
cmp
adc
stc
lahf
lret
jp
fmull
add
fsubr
mov
pop
mov
pop
pop
popf
fwait
cwtl
xor
out
mov
leave
xchg
ss
lret
shr
and
fcomps
scas
sbb
and
stc
test
mov
outsl
in
and
jb
and
inc
out
mov
cmc
push
call
lret
inc
mov
mov
fsubl
ss
insb
hlt
cmp
xchg
gs
clc
pop
xlat
mov
aam
mov
fstp
mov
cltd
fisubl
mov
hlt
loop
test
pusha
and
insl
or
mov
pop
jecxz
cli
das
and
push
sbb
push
and
aas
fimull
mov
es
jp
xchg
aaa
imul
mov
icebp
xorl
arpl
scas
shl
popf
test
fwait
ret
xchg
xchg
push
shl
ds
dec
xchg
leave
je
std
lods
ret
xchg
lods
into
xchg
cmpsl
cmp
out
frstor
mov
jne
in
dec
outsb
and
sbbb
adc
mov
les
in
cltd
aam
jns
sbb
and
mov
js
mov
adc
fcmove
mov
subl
add
ret
cmp
add
mov
dec
data16
sub
in
push
and
inc
inc
push
sbb
lret
fstl
scas
and
ret
jno
xor
or
and
mov
scas
dec
add
imul
imul
scas
push
enter
mov
ja
in
push
pop
ljmp
mov
add
lea
xchg
jp
test
cltd
pop
bound
gs
mov
lcall
popa
repnz
mov
popf
test
incb
xor
xlat
cmp
loopne
in
or
sete
inc
call
cmp
in
cmp
js
mov
jl
lret
std
xlat
sarb
mov
js
push
jp
xor
or
jbe
test
loope
inc
xchg
dec
add
mov
shlb
lds
fidivl
xchg
fwait
sbb
test
jge
push
outsl
sbb
jae
pop
aaa
mov
loop
dec
and
push
aaa
shl
adc
jne
and
fldcw
pop
test
pop
addr16
mov
sti
mov
dec
jg
and
push
xchg
mov
jb
jge
aaa
into
xchg
mov
shll
mov
shl
nop
movsl
stc
daa
push
sbb
xchg
les
push
ss
xchg
or
xchg
xor
xor
xor
outsb
xchg
push
stos
jp
cli
sbb
mov
mov
ret
pop
xchg
mov
add
xor
clc
out
into
jmp
ret
mov
pop
mov
jnp
out
pusha
add
loop
inc
les
aad
inc
jmp
popa
imulb
xor
out
mov
jge
or
je
mov
mov
pop
and
rolb
les
call
dec
pop
pop
lcall
leave
movsl
sub
cmpsl
xchg
push
fstpt
xlat
scas
je
sbb
in
shlb
mov
mov
inc
scas
jo
push
push
add
cmc
in
mul
jns
mov
cmp
xor
pop
mov
nop
jns
cmpsl
push
insl
jmp
mov
lret
pop
lods
pushl
push
les
lods
ljmp
bound
mov
lods
insb
or
sbb
cmpsl
aad
movsl
xor
out
aaa
push
imul
add
bound
movsl
sub
pop
lahf
es
mov
mov
add
out
cmpb
fs
in
and
repnz
dec
pusha
leave
movsl
lea
mov
cmp
or
lahf
sbb
dec
xor
sbb
dec
in
cld
adc
in
in
in
in
mov
sbb
cmp
jo
push
cwtl
in
test
cmpsb
adc
mov
mov
push
fldl
cmpsb
lcall
mov
dec
inc
mov
leave
mov
dec
push
push
cmpsb
cmpsl
repz
mov
mov
cmp
xchg
cmp
fcompl
xor
dec
mov
cmp
add
xchg
mov
movaps
cmp
pop
sub
rcll
jne
nop
mov
out
sbb
jecxz
das
cmpsl
mov
mov
lock
push
cmp
icebp
arpl
pop
outsl
call
xor
mov
add
adc
dec
andb
and
ds
mov
and
adcb
cli
and
into
lahf
in
jb
out
xchg
std
pop
fldl
mov
out
xchg
into
mov
pop
mov
movsb
fists
push
outsl
shl
jno
xor
xlat
das
xchg
in
or
repz
loope
or
sbb
add
ret
loope
xchg
sub
hlt
lock
scas
idivb
sbb
inc
popf
lock
and
loope
xor
fldt
dec
lsl
fnsave
push
cmp
dec
sbb
or
mov
stos
adc
jmp
inc
and
push
dec
insl
or
and
push
xlat
jno
xchg
mov
addr16
jno
pop
aas
sahf
sub
push
jae
popf
or
add
shr
enter
push
pop
pop
shl
push
jae
outsb
rcl
in
or
imul
mulb
xor
scas
pop
add
add
mov
pop
lods
pop
test
cltd
adc
push
mov
push
sub
ror
mov
bound
hlt
pop
mov
mov
ljmp
add
push
jle
push
into
rcrb
out
adc
out
mov
iret
jns
adc
xor
test
add
popl
popa
push
mov
lret
dec
lods
cltd
cmp
mov
mov
bound
add
xor
movsb
clc
jl
pop
cmpsb
add
cs
xchg
xchg
and
ds
lock
jnp
cli
outsb
mov
jle
imul
pop
jg
xchg
adcl
insb
push
imul
adc
pop
push
inc
popf
test
inc
es
jg
je
sub
test
sub
inc
shrb
aad
imul
sub
in
dec
ja
aad
inc
fstpt
fs
push
test
in
cmp
in
jl
cmp
or
mov
adc
sbb
push
inc
and
mov
les
aam
mov
xchg
inc
fcmovb
bswap
push
loopne
adc
xchg
stos
sbb
jbe
fidivrl
push
mov
xor
or
dec
pop
ss
js
xlat
mov
xchg
xchg
add
push
mov
push
ss
pop
mov
push
movsb
or
mov
sbb
push
xor
xchg
cmp
add
mov
push
scas
cmpsb
lds
scas
je
icebp
stos
xchg
xor
mov
out
outsl
les
pshufw
and
sbb
mov
lahf
std
mov
ljmp
sbb
sub
sbb
hlt
test
xchg
test
pop
jo
in
mov
xorb
add
iret
xor
pop
add
outsl
cld
push
cmp
imul
lcall
jg
add
dec
fiaddl
pop
cmp
jb
lods
aaa
aad
pop
fucom
inc
test
fldcw
adc
sbb
es
mov
insb
xchg
subb
xorb
insl
iret
daa
dec
imul
or
add
testb
inc
test
or
call
lret
cmp
cltd
flds
je
out
out
xor
dec
lret
mov
stos
cmp
push
cli
push
lods
push
rclb
mov
pop
mov
xchg
int
mov
loopne
push
loopne
inc
jge
pop
xchg
pop
enter
push
jbe
mov
stos
xchg
jge
cltd
xchg
mov
loop
mov
adc
cs
iret
ret
neg
sbb
push
cmp
dec
lock
insl
movsl
mov
pop
lods
jl
xor
in
add
ss
leave
or
into
cmp
lcall
pop
out
cmp
ror
or
mov
pop
xor
mov
jge
or
outsb
addr16
ja
js
jmp
xchg
and
iret
mov
arpl
mov
push
sub
jle
addr16
xchg
inc
stos
aad
cli
sbb
mov
push
dec
fsubrl
sub
jg
pop
mov
mov
or
nop
jecxz
xlat
idivb
es
sub
push
dec
adc
sbb
enter
out
push
test
out
xor
or
xchg
mov
fs
lds
and
call
mov
inc
cli
push
std
push
jne
adc
jmp
and
in
jbe
dec
inc
lcall
or
aad
xchg
aam
mov
stc
xchg
in
icebp
outsl
sbb
cmp
daa
pop
and
pop
cmp
jp
jns
inc
jg
push
orl
sbb
or
adcl
xchg
sar
sub
jecxz
movzbl
fildl
xor
lds
ffreep
xlat
mov
repz
cmp
movb
daa
in
nop
jge
nop
pop
test
insb
sbb
push
std
mov
adc
ret
pop
sahf
test
ljmp
js
out
inc
stos
lcall
xor
rcrl
jb
sti
pop
mov
push
popf
cmp
mov
xor
adc
push
shrb
aad
xchg
sbb
pop
loope
clc
lahf
push
rorl
mov
test
xchg
sub
sbb
addr16
push
pop
dec
repz
mov
aas
xor
fcmovu
inc
inc
stc
mov
clc
mov
pushf
sahf
cmp
add
mov
xchg
jne
xchg
in
jle
jae
sub
sbbb
and
add
adc
jp
dec
cmp
fcoml
je
outsl
mov
popa
push
dec
jp
loopne
jae
inc
adc
sbb
inc
shl
cmpl
aad
jne
jmp
mov
sbb
movsb
jnp
add
add
mov
fdivrp
dec
movb
mov
inc
mov
lret
xchg
sbb
jbe
sbb
test
lock
adc
cmpb
push
cltd
mov
sub
cld
mov
lods
dec
adc
pop
xlat
mov
pop
add
add
movsl
loope
imul
push
movsb
mov
xor
sbb
in
jge
jae
push
je
popf
xorl
xchg
inc
pop
xor
lret
and
jae
ret
jl
xor
in
pop
fisttps
and
mov
xor
xchg
push
dec
push
cltd
xlat
jmp
aaa
cld
insb
andl
fnstsw
xor
leave
ja
test
aaa
pop
imul
push
cmpsl
push
aas
xor
jne
inc
testb
push
mov
mov
lods
sahf
mov
or
bound
cmpsb
test
je
cmc
xor
pop
sub
add
mov
lret
call
xor
pop
dec
outsl
pushf
ror
movsl
outsb
and
sub
or
cmp
mov
sbb
into
in
push
adc
into
stc
lods
sbbl
aad
scas
andl
frstor
fimull
mov
xchg
outsb
adc
cld
mov
or
fildll
xor
dec
and
jp
pop
ss
mov
test
add
mov
push
cmpsb
push
lret
test
test
fadds
xchg
mov
push
addr16
fcmovnu
dec
add
mov
mov
pop
loopne
mov
pusha
adc
jmp
jo
mov
fdiv
mov
insb
sbb
lret
in
and
cmpsb
lock
mov
mov
fcom
sbb
imul
or
out
sbb
test
dec
repz
xor
fstl
scas
aam
jae
stos
push
nop
cli
xchg
inc
mov
outsb
lods
or
jecxz
fsubs
in
cs
ja
fadd
lods
ss
popf
fisttps
enter
fdivr
adc
js
add
adc
out
mov
inc
xchg
mov
dec
dec
pusha
mov
mov
sbbl
ja
dec
inc
inc
mov
leave
loop
adc
jb
nop
mov
int3
add
xorl
xchg
fistl
lret
lcall
js
es
js
xlat
or
push
sbb
sbb
mov
pop
int
inc
shl
and
xor
mov
xchg
repnz
add
bound
jb
add
jb
bound
xchg
ret
mov
mov
xchg
repnz
add
bound
jb
add
jb
bound
xchg
ret
mov
mov
xchg
repnz
add
bound
jbe
add
jb
push
cmpsb
mov
test
mov
xchg
jb
bound
inc
std
clc
cwtl
bound
add
lea
dec
insl
jo
pusha
dec
push
pop
inc
xor
jle
add
rcr
shrb
mov
and
inc
xor
and
adc
gs
lock
loopne
rcr
shr
mov
adc
mov
push
xchg
xor
adc
push
add
mov
scas
cld
ret
cmp
adc
aaa
and
aam
xor
sbb
mov
jmp
mov
inc
xorb
into
cmp
int
and
mov
loopne
pop
dec
das
and
push
mov
popa
rcll
orb
jge
out
push
lret
sub
loope
fidivrs
mov
sbb
push
jne
inc
mov
shll
ds
sbb
loopne
or
pop
dec
push
and
mov
sahf
adcb
ret
dec
sarb
xchg
add
cmc
into
das
fwait
shr
mov
pusha
xchg
sub
jbe
out
mov
stos
icebp
lcall
inc
movsl
sub
and
popf
jg
jo
pusha
dec
push
pop
inc
lret
and
adc
loopne
shr
shl
mov
mov
jo
sbb
adc
add
push
push
jp
push
je
subb
fadd
shl
out
sti
in
sbb
or
sbb
and
pop
gs
inc
dec
mov
cmpsb
xchg
xlat
aad
ss
add
adc
das
xor
and
adc
add
lock
loopne
rcr
shrb
sahf
subb
pusha
dec
push
pop
inc
xor
and
adc
add
lock
loopne
rcr
shrb
sahf
subb
dec
mov
sahf
xchg
pusha
inc
mov
lods
mov
pop
lret
push
sub
movsl
in
add
inc
aam
adc
inc
out
jmp
test
or
xchg
xchg
xchg
jl
and
cmp
or
std
popf
in
and
and
cmpb
mov
fldenv
mov
decl
lahf
push
scas
mov
movsb
aaa
rep
xor
push
pop
cltd
ljmp
jecxz
movd
xchg
mov
popa
pop
lahf
sbb
out
cmp
fiaddl
fcmovb
cmpsb
pop
iret
test
jb
jne
jmp
leave
inc
mov
jo
mov
pusha
mov
cmpsl
jmp
pop
into
mov
pop
mov
andl
fs
loopne
and
das
and
cli
in
dec
aaa
add
or
outsl
push
sti
mov
jns
jge
lahf
scas
clc
mov
mov
iret
mov
mov
dec
add
leave
xor
out
iret
adc
je
movl
cmp
jae
fdivl
aam
sti
pop
lea
cmp
jne
es
sbb
test
mov
repz
xchg
ljmp
fcmovbe
jge
rcrb
mov
test
cmpl
std
mov
xchg
cwtl
mov
iret
lock
cmp
es
pop
pop
cmp
test
xor
fidivrl
sbb
mov
cmc
xchg
push
pop
cmp
mov
or
cmp
leave
fcomps
popl
sbb
mov
sbb
aam
cmp
push
fistpl
push
cwtl
or
jg
add
gs
loop
pushf
test
xor
in
or
test
inc
lods
push
mov
ficoml
adc
shld
out
jo
xchg
and
arpl
inc
sbb
jae
dec
rcrl
cmp
iret
repnz
xlat
movsb
push
hlt
les
cmp
hlt
leave
dec
jecxz
sub
xor
adc
xor
mov
push
adc
push
lret
push
adc
mov
push
mov
pop
stos
mov
scas
imul
jg
rorb
cmpsl
or
pop
cltd
js
ret
cmp
sti
ficomps
lds
arpl
pop
daa
cwtl
lret
or
and
push
test
mov
outsb
cmp
mov
scas
jo
xchg
orl
and
clc
sub
pop
mov
dec
inc
andb
push
and
dec
cmp
loopne
repnz
dec
test
and
gs
xor
int3
xchg
mov
mov
push
inc
add
mov
mov
in
add
gs
inc
xchg
das
push
jmp
and
dec
sbbb
mov
push
xorl
mov
jnp
mov
stos
push
aad
push
and
loopne
lods
inc
fwait
xchg
in
imul
aam
pusha
loope
leave
cmpsl
push
mov
lahf
or
stos
test
xor
or
cmp
dec
mov
push
je
jbe
or
dec
xor
and
into
imul
repz
mov
pop
add
sti
jl
cmp
pop
mov
inc
mov
dec
rcl
jns
mov
out
test
pop
imul
jnp
and
push
sbb
xchg
xlat
mov
into
ja
fwait
out
xchg
mov
out
mov
jle
lods
outsl
mov
stos
mov
add
mov
push
bound
cmc
add
add
out
xchg
sub
lods
sbb
xchg
push
loope
movsl
pop
ret
push
inc
cmp
push
jmp
xorl
les
xchg
cltd
and
outsb
mov
adc
mov
jmp
fsubrl
xchg
push
or
ja
popa
dec
lret
pop
in
dec
jne
add
push
push
add
pusha
or
mov
xchg
es
aad
xchg
jg
dec
xchg
cmp
cltd
mov
push
sbb
push
fisubl
xor
aad
test
mov
hlt
dec
scas
inc
mov
cltd
andb
xor
gs
iret
or
fcmovnbe
pop
add
jg
outsb
js
pop
int
cmp
xchg
cwtl
sbb
add
shl
mov
push
daa
mov
inc
xchg
cltd
fimull
out
fs
mov
sub
sub
inc
push
enter
pushf
pop
jno
jp
notl
adc
je
dec
cmpsl
clc
or
sbbl
dec
test
test
cmp
and
push
roll
dec
cmp
jno
ds
xchg
xor
inc
xchg
lahf
xchg
adc
fwait
sbb
gs
mov
insb
or
idivl
fnstenv
or
push
idivb
inc
jne
fs
ror
inc
xor
jmp
adc
incb
adc
out
lret
push
sub
sub
cmc
cmp
call
pop
sbb
lods
test
add
cwtl
xlat
pop
iret
out
pop
ljmp
mov
add
xchg
xor
pusha
cld
inc
fs
jl
jns
xor
mov
jmp
lret
jge
jecxz
xchg
dec
lcall
movsb
cmp
shlb
leave
or
popf
sbb
xorb
sub
jecxz
mov
pop
nop
mov
dec
mov
in
aad
cltd
rcrb
mov
ror
push
inc
test
test
push
adc
add
jno
jno
or
std
test
push
mov
fwait
jne
inc
sub
jmp
test
aam
ret
mov
repz
ljmp
xor
fisubl
and
negl
rolb
adc
call
addr16
dec
mov
jbe
mov
or
mov
jmp
push
js
stc
push
clc
cmc
push
in
pusha
nop
fsubrl
loopne
adc
mov
fcomps
push
push
test
insb
movsl
call
std
in
lret
adc
jo
mov
cmp
pop
jp
insl
mov
imul
push
dec
outsl
ds
adc
stc
subb
nop
xor
xchg
int
fcomp
push
adc
orb
ds
shr
mov
xor
pusha
out
popf
cld
ret
les
stos
dec
xor
push
and
bound
jb
ja,pt
insl
repz
inc
jne
xor
inc
or
jl
call
mov
scas
adc
dec
cwtl
pop
ret
jne
lahf
mov
je
loope
cmp
stc
mov
pop
add
sarb
push
stc
xchg
push
cmp
es
stc
shlb
int3
push
jns
xor
push
or
mov
sub
mov
scas
add
xchg
mov
cmp
pop
gs
insl
pushf
lcall
jne
push
call
arpl
jns
outsb
sbb
ja
pop
jg
daa
sub
shrb
or
filds
sbb
sbb
jp
dec
test
data16
jns
sub
adc
push
pop
ffreep
enter
into
pop
loopne
loop
dec
ljmp
call
in
mov
mov
mov
aas
or
jno
push
gs
jge
lcall
addr16
mov
pop
jbe
stos
mov
or
je
fcompl
cmpsb
sbb
jecxz
out
out
cmpsl
mov
inc
xchg
test
repz
in
cmp
adcb
int
sbbl
psrlw
cmpsl
push
dec
sub
outsl
into
jecxz
sti
fistpll
lea
test
mov
pop
push
add
xchg
mov
or
sub
loop
sub
fninit
dec
sub
test
outsb
sbb
sub
or
cwtl
dec
imul
stos
repnz
adc
xor
xchg
push
jb
inc
in
imul
inc
out
popa
sahf
shrb
sub
dec
in
inc
jo
outsb
add
dec
dec
leave
dec
call
adc
ds
pop
mov
arpl
mov
repnz
repz
pop
inc
in
xchg
sbb
ret
mov
inc
jmp
popf
inc
fimull
adc
pop
or
leave
sbb
sar
roll
clc
cmp
jnp
mov
stc
sub
jl
iret
mov
lods
inc
cltd
ja
and
testb
in
popf
fmul
js
testl
repz
imul
and
inc
sub
mov
sbb
das
out
addb
cmp
pop
sbb
jno
inc
out
jmp
ss
jge
cmpsl
fstps
filds
icebp
bnd
cli
ja
fisttps
pop
and
es
fstps
push
hlt
push
cwtl
data16
jno
ret
fdivl
aas
aad
cmp
pop
out
xchg
or
and
cmpsl
call
gs
setbe
sbb
mov
add
mov
sub
pop
neg
xor
ret
leave
out
or
xor
mov
fildll
pop
jmp
mov
sub
xchg
je
and
ror
cwtl
sub
lret
fcoms
mov
mov
jmp
out
cli
lahf
cltd
push
ss
add
inc
xchg
cmp
pop
rcr
cmp
int
sbb
push
mov
ret
lea
add
add
popa
jae
loope
pop
inc
shrl
dec
sub
jp
xchg
in
jp
cli
lea
out
mov
sbb
xchg
inc
dec
cmpsl
sbb
fxam
dec
adc
vpdpwssds
push
cmp
arpl
push
add
sub
adc
xchg
insl
sbb
clc
add
pusha
aam
lds
dec
fisubs
adc
xlat
std
imul
jmp
test
jbe
adc
inc
or
xchg
ds
inc
mov
insl
mov
paddq
dec
popa
sbb
mov
mov
in
scas
bound
cwtl
inc
mov
and
iret
dec
lahf
adc
int3
sarb
popf
sbb
cmp
aam
add
lea
push
mov
outsb
pop
mov
and
cmpsb
enter
lcall
rcr
or
pop
xor
sbb
into
imul
or
jnp
imul
popf
cmp
cli
and
lock
jno
popa
into
cli
cmp
cld
cltd
sbb
psllq
jmp
dec
in
jmp
cmc
stos
jo
sub
or
xor
jmp
cwtl
shrb
lret
imul
popf
inc
in
out
loopne
xchg
cmp
mov
and
es
and
mov
fistl
shl
mov
fidivrl
lahf
xor
fsts
adc
jp
add
pushf
in
cmp
dec
lods
decl
repz
pop
mov
and
roll
adc
push
stos
in
xor
jnp
jae
scas
push
js
push
xchg
mov
jnp
push
loopne
cmp
test
data16
dec
inc
enter
jle
and
pop
xor
or
jne
xchg
lods
push
jl
mov
and
xchg
xor
int
or
adc
add
jae
lret
subl
mov
xchg
loop
sbb
cmc
adcl
shl
cmp
mov
lret
mov
pop
repnz
lahf
frstpm(287
jno
shl
mov
mov
jb
test
pop
add
aad
push
xchg
add
ret
test
mov
inc
pop
or
fisubs
mov
sbb
push
mov
xor
push
inc
in
outsb
decb
mov
and
xlat
pop
adc
mov
push
ja
shll
mov
xor
into
outsl
lds
xchg
dec
fdivl
int3
out
mov
test
sti
insb
mov
jl
push
sbb
xchg
je
test
sbb
pop
lods
push
pusha
xchg
pop
mov
imul
add
sbb
insl
icebp
xchg
ret
xorl
test
pop
or
in
shll
xor
aaa
cmp
sub
jo
inc
stos
out
es
fistpll
pop
lahf
inc
pop
ljmp
iret
into
adc
mov
inc
push
xchg
insl
dec
lock
jp
iret
mov
add
sub
je
rclb
jne
lock
repnz
sbb
sbb
mov
fisubs
inc
int
fbld
jbe
jb
iret
mov
addr16
jnp
adc
mov
sub
fistpll
add
lock
shll
cmp
ds
jmp
xchg
add
sub
xor
clc
repz
xchg
out
shr
ret
hlt
mov
enter
jp
inc
dec
psubsw
adc
mov
mov
xor
sub
sarb
fistl
stos
push
sbb
pusha
out
push
push
jno
adc
fsubs
fdivrl
jmp
bound
shl
fwait
xchg
mov
or
xor
inc
clc
xchg
mov
push
pusha
xor
cmp
mov
mov
cmpl
pop
stos
push
mov
lods
adcl
popa
jno
mov
mov
push
push
xchg
into
jb
inc
mov
mov
dec
xchg
xchg
mov
jl
loop
dec
out
ljmp
cld
dec
stos
push
aaa
aam
repz
inc
mov
test
inc
dec
dec
or
xchg
icebp
fbstp
leave
push
gs
pop
sub
popf
ss
add
push
mov
dec
mov
mov
clc
cmp
je
mov
mov
xchg
std
and
mov
cmp
cmc
test
mov
and
lods
andl
pop
sub
ljmp
pop
test
jno
and
xor
dec
jo
pop
lret
mov
or
or
jmp
inc
sbb
push
addr16
outsl
mov
in
stos
icebp
mov
xchg
mov
movsl
or
mov
ret
lea
mov
lods
std
xchg
aad
popa
pop
sub
add
frstor
mov
aas
pop
add
mov
icebp
aad
dec
lret
mov
and
sarb
mov
test
push
lock
dec
sbb
dec
adc
cltd
dec
mov
sbb
mov
cmpsl
int3
pop
cltd
ret
movsl
cmpsl
and
hlt
out
fsubp
mov
in
cmp
sbb
insb
int3
cmp
mov
ss
rcrl
cmpsl
pop
cli
lock
stc
std
jns
fs
adc
cmp
adc
mov
aaa
repnz
push
cltd
jmp
jle
pop
out
ficompl
push
mov
pop
cltd
lods
cmp
or
jp
in
push
lret
inc
or
jp
sbb
rolb
cmpsl
push
dec
stc
cmp
fildl
mov
xlat
mov
lods
daa
xor
popf
cmp
shlb
pop
xchg
call
inc
dec
or
jge
adc
push
xchg
fsts
test
add
js
mov
mov
test
cld
mov
sti
es
ljmp
je,pn
stc
dec
rcll
mov
push
push
add
daa
xor
nop
cltd
pop
mov
sti
movsb
out
push
in
es
mov
adc
pusha
dec
int3
and
xor
cltd
outsb
andb
inc
icebp
push
jb
inc
jle
push
xchg
push
mov
push
dec
jmp
mov
insl
scas
dec
test
xchg
jbe
pusha
push
adcl
or
xchg
pand
decb
add
popf
sti
daa
push
aaa
mov
inc
aad
ds
push
inc
ret
movsb
mov
daa
mov
repnz
and
jmp
test
xchg
fnstcw
or
push
cmpsb
cmp
subl
shll
mov
dec
jb
and
addr16
lret
out
add
daa
out
aas
aam
or
icebp
sub
fcomi
sub
dec
push
lea
mov
je
cwtl
flds
xchg
lods
mov
sbb
and
repz
int3
inc
inc
and
pop
push
xor
mov
cld
fnstcw
sbb
test
cmp
mov
jo
fnsave
inc
inc
lods
ja
mov
fisttps
sahf
negb
sbb
inc
dec
pop
ss
movsl
repz
pusha
push
or
sbb
sbb
add
inc
lods
cwtl
adc
xchg
sbb
hlt
ljmp
or
push
movsb
in
inc
push
inc
adc
xchg
xchg
push
scas
cmc
testb
cmp
movsl
mov
ret
pop
dec
pop
ds
mov
iret
out
jns
push
xchg
adc
xlat
fstpl
inc
xchg
or
test
leave
pop
and
add
mov
push
enter
xchg
mov
cmp
cli
or
nop
adc
xor
mov
inc
std
mov
jg
shll
cs
push
sbb
out
test
add
mov
movsb
cltd
mov
or
xlat
xlat
push
sub
inc
sub
cld
out
lods
pop
lods
mov
push
add
cmc
enter
jle
xchg
imul
lods
scas
add
xchg
test
cwtl
dec
cmp
cltd
ja
sbb
push
cs
clc
adc
js
jl
or
xor
dec
mov
inc
or
add
mov
inc
mov
push
xchg
xor
in
test
xchg
push
lock
mov
rcrl
fwait
sub
mov
cmp
cs
shlb
mov
les
sbb
movsl
xor
int3
inc
push
ljmp
adc
push
adc
pop
lds
shrl
or
daa
add
inc
clc
dec
pop
call
les
popa
icebp
jecxz
xor
cmp
xchg
xchg
lds
sub
cmp
push
fwait
cmpsb
loope
test
or
push
fwait
cs
sbb
push
push
cmp
push
mov
pusha
test
mov
adc
test
sbb
fimuls
dec
rcll
dec
divl
pusha
pop
out
or
popf
jo
jmp
dec
xchg
sbb
inc
xor
loopne
fwait
xchg
mov
mov
in
rcll
out
mov
test
faddl
mov
jmp
mov
in
xor
adc
cltd
sbb
addr16
adc
dec
mov
push
mov
lret
test
fistl
jmp
lcall
dec
testl
out
dec
dec
cld
stos
lret
inc
fisubs
pop
imul
adc
cmp
daa
or
add
mov
jnp
xor
lods
lcall
pushf
call
sahf
or
xor
adc
pop
outsb
adc
jno
inc
xor
rclb
inc
sub
test
lea
mov
scas
std
insl
cli
push
pushf
clc
xor
jle
jo
pop
arpl
cs
dec
push
fmul
and
inc
push
cmp
and
hlt
mov
cs
ljmp
push
sbb
add
jle
inc
mov
xlat
mov
test
cmp
scas
jnp
inc
aas
sbb
out
addr16
popa
addl
neg
stos
mov
ret
jne
add
add
pop
inc
int
cltd
imulb
push
mov
repnz
int3
gs
jl
inc
fcmovne
aam
aaa
leave
mov
jo
test
mov
test
into
mov
xor
aas
dec
fxch
xlat
inc
jnp
leave
push
es
dec
das
lret
xor
inc
in
dec
sti
lret
mov
pop
imul
xchg
jp
push
push
lret
pusha
dec
push
xor
dec
cmp
inc
jo
sbb
leave
rorb
push
or
imul
jge,pn
ret
push
mov
sub
pop
ljmp
movsb
mov
psubw
mov
imul
add
adc
jge
fnstcw
addr16
insb
fwait
inc
fisttps
dec
mov
loopne
cli
out
mov
out
enter
les
jle
jns
dec
adc
push
adc
lcall
adc
jecxz
in
arpl
call
cmp
icebp
pushf
or
lret
int3
mov
mov
jbe
frstor
cmp
test
arpl
xchg
lds
sub
addb
xchg
jecxz
jmp
imul
or
cmp
inc
adcb
cmp
jge
arpl
mov
mov
gs
mov
mov
ficoms
sub
mov
lret
mov
and
repnz
xor
popa
jno
enter
icebp
inc
fiadds
iret
pop
xchg
je
cli
add
cmp
adc
sub
adc
ds
lahf
push
fdivrs
cwtl
pop
out
xor
add
push
dec
push
mov
in
aad
icebp
dec
mov
xchg
pop
xor
dec
or
pop
lahf
imul
and
xchg
pop
js
xchg
jl
in
popa
cli
or
push
fildll
mov
cmp
inc
mov
shrb
pmaxub
dec
cmp
mov
call
xchg
sub
jbe
adc
xchg
adc
mov
jmp
jnp
pop
jno
and
and
adc
test
pop
dec
jmp
in
pop
push
add
leave
pop
icebp
fcomps
pop
rorl
enter
push
and
test
fcomp
cmp
push
test
lcall
fwait
mov
mov
js
mov
pop
jbe
push
fistpl
mov
popa
and
xor
stos
jmp
inc
pop
sbb
pusha
or
inc
xor
and
adc
add
lock
loopne
rcr
shrb
sahf
subb
pusha
dec
push
pop
inc
xor
and
adc
add
lock
loopne
rcr
shrb
sahf
subb
pusha
cs
pop
inc
mov
adc
add
lock
loopne
rcr
shrb
jbe
jp
and
push
jle
xor
and
adc
dec
fs
mov
cmp
pop
jno
popa
jg
push
jne
inc
cs
ds
push
xor
sbb
mov
sahf
lds
mov
test
xchg
gs
jne
inc
cs
ds
outsb
adc
inc
scas
aad
movsl
into
mov
test
push
inc
cs
ds
outsb
adc
sahf
mov
mov
movsl
mov
mov
pushf
cld
adc
adc
inc
inc
cmp
sub
sahf
jp
adc
xchg
iret
sti
sarb
sub
ds
insl
out
cmp
pop
mov
and
push
js
cmp
mov
sarl
pop
or
fstps
jo
out
iret
cs
xchg
pop
jae
popa
aad
push
inc
movsb
iret
ds
push
adc
popf
xchg
push
ds
dec
lret
loope
adcl
movsb
mov
jge
push
jae
out
lock
stos
test
fimull
dec
stc
jnp
std
in
std
leave
dec
push
pop
jle
fidivs
jae
cwtl
loope
dec
stos
push
cmp
sahf
mov
mov
out
inc
cli
xchg
jmp
cs
ds
outsb
adc
sahf
lds
mov
test
xchg
xchg
add
push
add
push
inc
and
push
xchg
cs
jmp
ljmp
hlt
lods
loopne
in
adc
add
cs
inc
push
jle
inc
sbb
xchg
notb
rcll
shlb
add
dec
add
pop
pusha
dec
xor
jle
mov
sahf
lds
mov
test
xchg
gs
jne
inc
cs
ds
outsb
adc
sahf
lds
mov
test
xchg
gs
adc
fcomps
loop
adc
sar
mov
fstpt
dec
sub
imul
inc
mov
xchg
cli
push
lds
pop
icebp
loope
cmpsb
and
stos
aam
scas
in
int3
lods
pop
stc
and
jne
or
shlb
push
mov
ret
rolb
fcoml
jecxz
sti
insb
mov
sub
adc
mov
jne
mov
and
adc
or
rcrb
out
sub
add
scas
pop
dec
ja
inc
jecxz
push
xor
or
repz
xchg
and
or
stc
lahf
mov
ja
iret
mov
test
jnp
mov
into
dec
ret
outsb
add
adc
push
pop
add
icebp
jne
adc
icebp
xchg
mov
and
inc
push
outsb
and
mov
inc
dec
mov
mov
add
dec
inc
aas
mov
jp
fisubrl
mov
and
inc
xchg
mov
rcll
dec
nop
sbb
mov
ljmp
jno
pop
out
xchg
mov
jl
cltd
dec
lods
mov
add
ret
sar
aaa
in
mov
mov
clc
mov
dec
movsl
lock
out
jbe
loopne
cli
add
inc
sbb
xor
adc
pop
mov
pop
scas
add
sub
jg
dec
push
lcall
loopne
movsb
int3
inc
push
lret
ret
or
cmp
xchg
and
xor
fmuls
lea
add
loope
rol
jo
mov
xchg
inc
push
xchg
xor
xor
test
mov
xchg
aas
mov
cmp
dec
mov
sarb
fdivrl
jo
leave
xchg
stos
lret
push
pause
lahf
and
pusha
add
fsubr
and
xchg
testb
push
pushf
sbb
mov
sub
clc
pop
loope
pop
lods
das
sti
ret
in
pop
mov
xchg
add
lret
adc
rclb
stos
loope
adc
dec
into
addl
stos
inc
jno
cmp
or
jg
popa
jne
dec
cmpsl
out
lods
sahf
adc
push
fsubs
imul
out
sub
jns
fnsave
and
lock
push
dec
xor
aad
pop
adc
fldcw
push
popl
imul
in
add
add
xchg
iret
int3
cmp
adc
testb
cmp
jl
inc
jp
lods
daa
or
mov
mulb
leave
data16
adcb
mov
jle
xrelease
out
test
push
jo
ret
pop
xchg
sbb
add
mov
lods
ret
hlt
iret
shll
cmpsb
orb
mov
pop
aaa
mov
inc
mov
repnz
je
daa
jp
jg
cmp
and
and
fwait
add
mov
sbb
scas
xor
test
pop
clc
lods
cmpsb
jno
jp
cltd
sub
inc
mov
push
sub
loop
mov
cmp
ds
data16
pop
lea
sub
mov
stos
sbb
adc
or
jne
inc
cmpsl
addr16
aas
lods
repnz
dec
pop
dec
xchg
xor
aam
shr
mov
pop
jns
cmp
cld
sub
push
adc
dec
ds
adc
adc
shll
sub
js
shlb
lods
std
sarb
cmp
iret
cmp
test
pop
or
fiadds
dec
cmpsl
lcall
mov
jne
mov
ficompl
mov
daa
mov
mov
sub
adc
rorl
or
out
mov
inc
jp
push
add
dec
cs
pop
nop
and
shr
pop
pop
xchg
pop
in
mov
or
or
jno
inc
in
mov
sahf
inc
stos
stos
mov
or
inc
ja
int
sub
neg
cld
dec
inc
fmull
lock
mov
mov
mov
push
flds
cwtl
mov
xor
sbb
scas
fistpl
icebp
in
je
sub
cmp
inc
inc
pop
pop
jecxz
xchg
adc
mov
cmp
pusha
dec
inc
test
stos
out
aad
push
cmpsb
cmp
push
fstpl
cli
pop
pop
lret
inc
adc
pop
xlat
mov
hlt
inc
push
iret
sbb
adc
mov
inc
je
jnp
in
mov
add
repnz
xchg
xor
pop
or
inc
pop
inc
lea
dec
leave
cltd
loopne
subl
aad
arpl
push
dec
xor
in
fadd
sub
sub
rolb
test
add
aas
loope
sbb
in
adc
scas
popf
mov
roll
mov
or
add
push
mov
cmp
push
aam
scas
in
mov
je
jecxz
pusha
pop
es
lds
xchg
mov
dec
fsubl
cmpsb
gs
out
popa
ja
les
pop
js
in
inc
xor
jecxz
jbe
imul
pushf
sarl
mov
icebp
insl
leave
fisttpl
aas
push
test
push
fnop
fistpll
sbb
xchg
xor
addr16
adc
dec
jl
jb
xchg
sub
jecxz
stc
test
xor
xchg
jmp
sbb
cmp
fwait
pop
fdivp
cltd
jge
dec
cmc
std
subb
jae
loope
jecxz
cmp
cmp
pop
je
mov
push
dec
fisttps
ds
sub
mov
jmp
aas
cmp
adc
fcomip
ljmp
mov
cmp
mov
lret
pop
mov
add
xor
divb
mov
inc
dec
mov
pop
mov
jecxz
rorb
mov
mov
add
mov
push
andl
pop
mov
imul
addr16
xchg
scas
outsb
lock
adc
adc
mov
jl
fldcw
push
enter
xchg
pop
push
adc
leave
inc
fidivrl
sti
movsl
push
loop
add
mov
fistpll
xor
shrb
pop
test
vmwrite
mov
sbb
and
pushf
jnp
out
or
js
dec
test
dec
push
cld
adc
int3
mov
sti
mov
test
mov
test
movsl
xchg
jbe
pushf
popa
jne
or
pop
and
js
mov
jge
arpl
jns
jecxz
mov
test
scas
les
mov
psraw
ret
or
lret
sahf
xchg
jle
dec
iret
mov
or
sbb
jo
or
stos
mov
jno
lret
pusha
ss
test
pushl
fcoms
dec
xchg
cmp
dec
jmp
mov
jl
sub
or
int
mov
push
push
push
ja
adc
xchg
mov
xlat
enter
outsl
fucomp
out
push
mov
adc
fmull
subl
dec
sub
dec
sub
xor
xchg
mov
and
add
push
jge
fists
xor
push
xor
ret
mov
scas
push
fmuls
xor
loope
adc
pusha
repz
xor
adc
iret
lcall
popf
xlat
xor
fdivs
dec
in
cli
or
ret
lret
mov
mov
or
jnp
push
adc
jmp
sbb
push
fidivrs
lds
in
popf
cmp
fs
ja
xor
inc
mov
lods
jmp
pop
adc
xchg
cs
pushf
xor
sub
cmp
popf
fldl
pop
loopne
fsubl
aad
mov
std
jae
mov
adc
cmp
rcll
sbb
das
inc
pushf
push
jg
pop
push
xchg
inc
xchg
push
pop
mov
ret
xchg
push
or
test
or
mov
add
cmpsl
insl
jo
out
or
arpl
pop
out
testl
ficoms
ficompl
les
es
lods
add
pop
dec
fsts
push
push
sbb
inc
push
jg
cmp
mov
push
add
dec
orl
adc
imul
in
mov
jecxz
pop
aam
or
gs
jbe
bound
inc
sub
mov
dec
lahf
gs
bound
clc
cld
cmp
cwtl
mov
lcall
or
rcll
sub
popf
mov
in
rorl
out
jle
sub
dec
xchg
push
xchg
or
xchg
push
in
shll
jmp
push
inc
mov
and
adc
inc
aam
mov
adc
pop
and
or
sbb
out
inc
push
pop
and
lock
bound
pop
in
dec
mov
lods
xchg
mov
into
sub
add
mov
jp
rorb
dec
insl
jb
arpl
leave
lock
lods
repz
xchg
jno
fwait
dec
js
xor
mov
imul
add
fcoml
sbb
mov
insb
popf
jns
dec
xor
lahf
lods
ds
add
xchg
in
ljmp
outsb
mov
pop
movsb
stc
test
pop
mov
scas
sbb
mov
in
vhsubpd
shlb
inc
jecxz
mov
sub
pop
or
sub
cmpsb
pusha
ret
mov
xchg
pop
sahf
xor
in
testb
dec
fs
xor
loop
mov
in
mov
fnstsw
orl
dec
lcall
adc
addr16
inc
mov
mov
jmp
jns
subb
in
out
cld
loop
in
cmpsb
and
sbb
push
mov
loop
xor
jo
and
inc
sbb
jne
fistps
out
dec
cs
xor
mov
movsb
mov
push
jl
adc
imulb
or
jne
jnp
je
jo
and
into
das
sub
add
jo
fnsave
lcall
pop
mov
jle
lahf
mov
cmpsl
add
into
cmp
xor
flds
xor
in
mov
mov
lcall
das
pusha
jp
lods
imull
add
push
cmc
addr16
jo
sbb
xchg
dec
adc
mov
pop
jecxz
clc
jg
scas
xlat
xchg
mov
mov
and
out
orl
dec
sti
test
orb
dec
ss
cmp
sub
ss
push
enter
addr16
rcrb
mov
cmp
xchg
and
cmpsb
scas
or
jb
push
push
push
lock
push
flds
mov
in
out
or
iret
in
cmp
sbb
inc
push
stc
push
xlat
cmp
movb
cmp
sbb
fwait
cmp
mull
adcl
data16
xor
stc
les
mov
cmp
xor
jno
faddl
inc
rcll
ret
add
xchg
rcrb
test
imul
mov
inc
cmp
xor
data16
idiv
fs
xchg
xchg
enter
aas
mov
ja
rcll
ds
add
into
por
push
inc
cmc
idivl
push
mov
mov
cld
mov
pop
add
adc
jne
outsl
lods
jno
jp
scas
sub
jbe
lods
mov
loopne
sahf
xchg
cli
cmpsb
stc
fcoms
and
pop
mov
mov
aad
lods
je
pop
pop
imul
xchg
sti
jge
test
sbb
jns
shll
idivb
mov
pop
sbb
dec
fadd
loop
push
mov
arpl
out
pop
stos
adc
mov
push
inc
mov
mov
ret
ja
mov
inc
dec
js
loop
and
sbb
push
sub
sub
js
cmp
fsubp
incb
ret
inc
cmc
inc
outsl
mov
cld
push
mov
jge
or
sbb
cmc
pushf
ja
icebp
vpmacsdqh
loope
mov
and
rcll
std
sub
adc
arpl
inc
aam
repz
test
into
clc
push
ret
mov
add
jns
incb
xor
sub
xorl
shrb
leave
xchg
and
pop
mov
adc
fcomp
sbb
cmp
pop
pop
aaa
add
es
and
hlt
adc
out
inc
dec
jno
mov
iret
jb
out
mov
push
out
int
gs
in
in
add
xchg
sub
je
xor
popa
mov
fcompl
adc
mov
mov
dec
es
shlb
inc
sub
popf
enter
pushf
call
mov
mov
test
cmpb
lahf
arpl
push
mov
mov
movsb
movsb
xchg
or
jns
push
aam
lock
je
add
adc
mov
clc
xor
lret
or
pop
adc
jl
xor
and
aad
test
scas
dec
jl
mov
psubb
rcl
or
xchg
mov
mov
popf
mov
add
mov
adc
xchg
loope
cmp
imul
pop
or
lret
stos
mov
in
pop
and
push
leave
inc
adc
popa
daa
fcmovnb
test
pusha
xchg
adc
or
jmp
jg
mov
mov
outsb
mov
dec
push
leave
and
subl
adc
jns
push
leave
ja
fildl
fbstp
negb
movl
cmc
jns
sub
fidivl
jle
cwtl
mov
inc
adc
mov
sti
xchg
jle
lods
or
or
sbb
arpl
or
inc
pushf
jnp
imul
lcall
mov
push
call
cmp
bound
inc
or
cmp
add
arpl
out
sub
out
bound
sarl
test
adc
js
pop
mov
je
scas
fisubrl
ret
fdivl
jb
out
bound
fdivs
jecxz
dec
or
rcrb
cmpsl
push
shlb
sbb
jle
icebp
pop
ja
xor
adc
aam
adc
cmp
es
cmp
mov
cmp
mov
mov
and
dec
std
cmp
mov
push
sbb
add
roll
enter
fcomps
aas
pop
data16
or
lock
sbb
or
outsb
mov
pop
fcomps
mul
jmp
es
in
std
gs
addr16
cmp
sub
fcomip
jecxz
pop
jmp
push
scas
pop
cmpss
clc
pop
outsb
pop
mov
fdivr
icebp
inc
mov
push
jnp
in
sbb
sbb
mov
test
jns
dec
leave
pop
adc
jp
mov
push
cli
test
xor
aam
lds
pop
mov
jmp
inc
cmp
nop
stos
mov
dec
out
sbb
mov
in
repnz
xchg
aad
pop
push
outsl
xchg
aad
lret
sbbl
cmp
scas
or
lock
stc
adc
int3
push
ljmp
xor
test
cld
jecxz
in
repnz
xor
daa
jg
mov
imul
and
inc
jo
je
in
mov
repz
xchg
cld
push
or
inc
je
pop
and
pop
sub
movsl
push
jl
jae
adc
stos
shll
or
cmp
cmpsl
cmp
lods
dec
stc
shlb
push
out
je,pn
mov
mov
sahf
inc
enter
mov
push
jecxz
loopne
repz
add
pushf
and
push
popf
inc
pop
inc
jp
lock
mov
sbb
dec
adc
shl
sbb
std
sub
in
or
mov
repz
nop
and
out
xor
push
or
xchg
sahf
inc
and
pushf
pop
sub
mov
dec
sub
push
mov
sbb
jl
xchg
push
test
mov
push
cmp
and
mov
das
push
pop
subb
jae
lea
mov
xchg
js
and
aad
test
mov
dec
pop
fstpt
dec
stc
jne
dec
dec
subb
rolb
inc
inc
sbb
aas
mov
add
pop
and
in
xor
je
sub
in
sub
adc
cmp
in
popf
fdivp
fisubs
dec
mov
cltd
sahf
or
fwait
outsb
pop
xlat
mov
sbb
pop
test
sbb
adc
ret
pop
sarb
pop
sub
inc
adc
and
mov
push
test
int3
add
adcl
outsb
inc
push
sti
push
inc
sub
addr16
or
xchg
sti
aam
pop
stos
add
clc
and
sahf
add
add
js
sub
imul
addr16
iret
dec
in
cld
push
out
out
fld
mov
mov
pusha
lds
ss
orb
out
test
int
cmp
dec
push
xchg
jp
orl
shl
mov
mov
cmc
push
add
jb
lods
jecxz
and
les
rcl
jle
jmp
xchg
pop
fimuls
pushf
adc
cmp
xor
sarl
cmp
xchg
iret
and
fs
inc
sahf
imul
mov
and
push
insb
sbb
push
pop
jbe
movsl
ffree
dec
leave
rolb
fsubrs
cld
in
add
cmp
push
cmp
outsl
les
lret
push
jno
and
movsl
push
or
das
lea
mov
pop
test
sti
imul
scas
cmp
pop
push
mov
mov
mov
xchg
mov
or
sub
xchg
nop
sbb
in
das
xor
or
pop
pop
sbb
inc
mov
lods
push
push
add
pop
cmc
insb
movsl
push
sbb
mov
cmpsb
cmp
jo
or
jp
inc
call
lret
xor
pop
fcoml
out
pusha
add
stos
jae
int
sbbl
sub
jae
pop
outsb
cmpsl
imul
add
xlat
hlt
jl
adc
js
jnp
or
mov
xor
lret
pop
in
ss
jo
xor
cmpsl
movsl
mulb
push
dec
cld
sub
out
xchg
xor
cmp
inc
push
aam
rorb
mov
or
mov
push
or
imul
bnd
out
mov
scas
sbb
clc
fnstsw
sti
adc
mov
sub
jl
nop
mov
iret
mov
cwtl
sbb
imul
cltd
das
sbb
add
insb
sbb
cld
repz
loopne
out
lcall
inc
daa
popf
dec
or
mov
rclb
jae
adc
aad
jb
mov
mov
sbb
adc
mov
sbb
push
rorl
sub
bound
call
add
je
es
jp
lahf
dec
push
sbb
cwtl
imul
test
xchg
aas
mov
adc
ljmp
mov
mov
add
out
in
roll
push
jne
mov
ja
inc
cs
movsb
dec
mov
stos
mov
push
setne
cmp
and
aas
sahf
cmpsb
and
loop
out
mov
sub
adc
fdivr
mov
mov
call
lea
fidivrl
cmp
in
fnstenv
dec
mov
push
mov
mov
xchg
jge
rolb
sarb
add
in
test
jb
inc
dec
lods
mov
jo
jmp
in
inc
ss
outsb
push
gs
jg
mov
push
fistpl
pop
push
sub
inc
jns
adc
das
or
xor
jge
lods
mov
sub
movsl
cmpsb
xchg
sub
xor
cmp
leave
lock
decl
lcall
movsb
pop
sahf
mov
add
inc
pop
stos
add
mov
dec
ds
or
jecxz
test
adc
lods
rolb
jp
out
dec
sahf
outsb
ja
inc
adc
pop
mov
sub
or
clc
xor
push
cmp
jp
out
mov
insb
pop
dec
jnp
or
repnz
sbb
mov
nop
xor
add
lcall
es
pop
dec
sbb
in
cmp
inc
cmpsb
nop
adc
divb
shlb
mov
pop
pop
loopne
insb
adc
aas
add
stos
pop
mov
incl
mov
xor
and
xchg
loop
jg
jb
xor
test
out
push
xchg
push
icebp
shl
mov
sahf
movsl
stos
mov
jl
call
cmp
addr16
fstpl
and
insb
mov
cmp
faddl
mov
adc
int3
cmp
mov
lret
jbe
pop
inc
inc
and
fucomi
pop
xor
mov
push
lock
shl
repz
lret
js
dec
outsb
jnp
xchg
scas
sahf
jp
cmc
popa
std
cli
fistl
jmp
stc
mov
jnp
mov
addr16
aam
mov
sub
jns
movsb
xchg
mov
mov
xchg
shl
je
jl
xchg
fiaddl
pop
loopne
inc
ret
add
nop
pusha
mov
incb
loope
cmp
stc
shrb
push
jp
push
ds
outsb
adc
sahf
lds
mov
test
xchg
gs
jne
inc
cs
ds
outsb
adc
sahf
lds
mov
test
xchg
gs
jne
inc
scas
push
ds
outsb
adc
sahf
lds
mov
test
xchg
gs
jne
inc
cs
ds
outsb
xchg
jle
mov
xor
scas
aad
rolb
and
insl
add
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
xchg
dec
mov
lcall
xchg
xor
add
adc
shlb
inc
repnz
add
xchg
inc
in
hlt
les
andb
add
adc
shlb
repnz
add
xchg
inc
in
hlt
les
sbbb
push
stos
ss
lods
and
push
loopne
js
and
jmp
cmp
push
loope
dec
arpl
lods
outsl
iret
mov
mov
imul
or
test
je
mov
adc
jecxz
or
cli
mov
ljmp
jg
ret
pushf
push
and
lret
fcom
bound
xchg
adc
inc
in
in
sub
andb
cli
xchg
jmp
aaa
mov
jne
cmp
dec
push
or
in
or
jae
xchg
popa
outsb
xor
dec
lods
shlb
add
add
and
dec
gs
loope
das
xchg
negl
and
fwait
roll
pop
movsb
adc
in
hlt
les
andb
mov
shlb
repnz
addr16
ret
mov
mov
mov
xchg
pop
shrl
cmpsl
or
xor
in
jb
push
ret
add
fisubl
jb
out
nop
pop
jecxz
idivl
or
cmp
jbe
dec
lock
inc
mov
les
andb
mov
shlb
repnz
add
xchg
inc
in
hlt
les
andb
mov
shlb
repnz
add
inc
cwtl
and
loop
xchg
insl
stos
jmp
in
xor
push
dec
dec
arpl
and
pop
push
mov
inc
inc
cltd
mov
sbb
in
stos
gs
mov
test
xchg
outsb
sub
jecxz
mov
pop
in
and
jmp
movsb
ja
xchg
cwtl
stos
inc
jo
mov
jmp
xchg
imul
push
cmp
lods
fstl
mov
dec
repnz
cmp
vpavgw
mov
cmp
mov
push
fs
in
cltd
cmp
popf
int3
out
adc
ljmp
int
pushf
fsubp
testb
jo
or
call
cmp
or
lds
lods
dec
dec
inc
fidivrs
xchg
gs
mov
popa
arpl
fcomps
jmp
fildl
subl
add
in
push
aaa
ficoml
mov
sub
shrb
push
mull
ds
dec
pop
fcoml
and
leave
cmp
xchg
fwait
jnp
jle
inc
cmp
ss
fnstcw
inc
pop
vlddqu
mov
arpl
pop
mov
xchg
bound
dec
push
jmp
dec
les
aas
stos
push
mov
flds
pop
mov
cmp
push
mov
inc
lret
lret
arpl
jg
cmpsl
fsts
sub
loopne
xlat
or
mov
mov
mov
sbb
push
icebp
call
cmp
addl
xor
dec
popa
push
test
popa
mov
lret
divl
out
mov
out
dec
and
pop
outsl
jb
mov
daa
inc
pop
xor
hlt
mov
mov
pop
jge
loop
jmp
iret
mov
sbb
sub
ja
addr16
std
fsubrp
call
mov
stos
ficompl
fcoms
jo
aas
sub
rcr
arpl
jle
hlt
mov
jmp
pop
inc
sub
add
dec
lcall
cld
cmp
out
mov
sbb
enter
xchg
fwait
add
insl
lret
mov
leave
psraw
sub
lock
xchg
adc
andb
js
or
loopne
push
mov
push
adc
loopne
iret
int3
ret
mov
mov
js
fs
rolb
lods
jl
in
clc
pushf
aas
dec
cmp
pusha
test
jp,pn
lret
cmpsl
lea
mov
mov
dec
inc
jecxz
inc
fwait
addps
dec
or
adc
les
mov
lds
mov
mov
nop
mov
pop
imul
jne
jp
aas
sbbl
outsb
push
xchg
and
mov
pop
adc
mov
jne
add
and
and
mulb
adc
outsl
pop
imul
pop
push
in
idivb
out
pop
sahf
mov
sub
add
xchg
rcll
jg
ljmp
in
xor
mov
jno
idivl
test
add
inc
pop
push
mov
or
sar
clc
icebp
adc
cmp
cmp
arpl
mov
xchg
fmuls
test
test
jmp
mov
mov
push
cli
cltd
shrl
dec
mov
pop
test
adc
mov
and
and
das
jecxz
repnz
test
sub
dec
out
inc
jne
mov
cmovno
cmc
pushf
cmp
std
aaa
into
adc
cmpsb
dec
push
mov
and
mov
jne
je
jg
sub
add
scas
pop
cmc
aad
jl
scas
mov
push
sub
push
xorl
ret
insl
movsb
add
sbb
cmp
dec
leave
pop
aam
js
inc
inc
inc
nop
pop
and
pop
lahf
dec
lods
imul
adc
xor
stc
xchg
out
ret
mov
push
pop
jbe
movsl
test
imul
adc
pop
xlat
fs
add
test
push
aas
add
fwait
mov
push
xor
loop
aas
and
pop
aas
mov
stos
jecxz
push
mov
push
sub
jb
mov
out
sbb
xlat
sub
cmpsl
out
add
mov
cmp
jbe
adc
stc
mov
loope
pop
jo
jb
std
rcll
add
cwtl
push
xor
fs
mov
push
ds
movsb
mov
mov
popa
pop
int3
pop
js
in
cld
and
outsl
or
dec
ja
sti
mov
stc
stos
jmp
push
hlt
inc
je
add
push
ss
scas
fcmovu
movb
xor
adc
arpl
int
mov
or
dec
aad
cmp
in
and
lret
das
cltd
adc
jb
dec
jnp
mov
mov
andb
dec
ret
lcall
mov
test
mov
mull
sub
mov
and
pop
je
packsswb
js
jae
outsl
dec
sarb
lret
sbb
mov
in
out
cmp
xor
jno
and
push
loop
lock
dec
pop
test
add
test
sbb
sarl
pop
call
data16
mov
lods
xor
imul
stos
in
or
stos
add
enter
sbb
push
jnp
sub
bound
pushl
es
out
sti
pop
imul
arpl
pop
nop
lcall
out
sub
sti
aas
int3
jne
dec
push
insl
mov
push
adc
sbb
cmova
push
jb
mov
fildl
sarb
cmp
mov
popl
mov
inc
mov
ss
xchg
dec
sahf
xor
sti
inc
dec
jecxz
hlt
sti
ds
adc
cmp
jecxz
ja
sbb
ja
test
xchg
jne
jge
inc
insb
inc
mov
mov
pushf
push
icebp
int3
push
or
jl
xor
divb
mov
pop
pop
ljmp
xchg
adc
dec
sarl
test
or
mov
push
lahf
inc
jle
sbb
stos
jnp
fidivrl
xchg
fs
test
ret
and
jge
and
jns
xor
cltd
insb
xchg
jecxz
cmp
or
xor
fdiv
jp
cmpsl
imul
mov
ja
in
mov
sbb
dec
jmp
xor
inc
and
mov
scas
push
repz
mov
inc
andl
push
sbb
in
push
dec
ljmp
mov
mov
cmp
and
inc
xchg
lahf
sbb
sbb
sbb
loope
rorb
inc
fwait
and
and
mov
hlt
jo
ds
loope
jb
lret
ja
dec
pop
or
int
neg
outsb
icebp
xchg
sbb
sub
cmp
sub
in
fildl
dec
xchg
les
inc
xchg
cmp
xchg
fdivrs
cwtl
adc
int3
xchg
pop
adc
fwait
mov
or
mov
cmc
or
fs
or
orl
push
mov
jmp
ror
sbb
insb
add
sbb
jae
dec
ja
ja
shrl
pusha
mov
mov
in
jns
cmp
lock
jg
sahf
jnp
icebp
pop
mov
adc
stos
clc
push
xchg
sub
pop
pop
xor
pop
jns
movb
xor
cmp
loope
or
loop
rcrl
das
pop
cli
aam
cltd
push
sti
or
mov
lock
movsb
push
cmp
mov
fstpt
mov
int3
mov
mov
inc
dec
fbstp
mov
mov
into
adcb
sub
push
mov
pop
in
iret
call
xchg
add
xchg
xorl
imul
inc
data16
sub
inc
jbe
popa
mov
in
call
mov
inc
pop
sarb
ret
jo
push
nop
push
sbb
push
fwait
test
in
xor
ds
xor
mov
or
imul
sub
es
call
jo
enter
dec
and
ljmp
or
aaa
clc
aad
leave
outsb
dec
xor
mov
lahf
push
pop
int
ret
addr16
add
push
mov
push
loope
mov
inc
push
repz
fst
sub
dec
and
lcall
movsb
push
gs
xchg
loop
popa
das
mov
in
mov
cmp
adc
mov
mov
imul
inc
add
fistpll
pop
loope
push
mov
xchg
sub
mov
stos
mov
bound
mov
setnp
adc
adc
sahf
fwait
ja
add
adcb
addr16
xor
rcl
and
xchg
ficomps
jns
cmc
flds
repnz
arpl
or
cli
sbb
and
cmp
loop
lods
jo
gs
call
add
xor
leave
clc
xor
out
pop
cwtl
push
xchg
movsb
push
mov
sbb
les
adc
mov
rcrb
ror
imul
fisubrs
sahf
mov
adc
dec
push
shrb
xor
inc
mov
mov
mov
jl
roll
and
cs
and
movsb
dec
xchg
outsl
stos
clc
or
aam
movsb
nop
xchg
pusha
andl
dec
or
xor
and
addr16
out
and
mov
inc
fistpl
mov
test
lcall
add
mov
and
dec
dec
mov
test
xor
adc
jno
in
sub
mov
xor
inc
push
call
mov
sub
sub
jecxz
popf
leave
lea
add
fistpll
add
or
or
xchg
dec
ljmp
int3
popa
push
ss
arpl
pop
mov
and
mov
xor
in
movsb
call
jecxz
mov
repnz
movsb
jo
loopne
ret
adc
insb
int
leave
frstor
iret
jge
sub
loop
in
adc
add
icebp
enter
mov
lods
xchg
inc
add
push
mov
lcall
mov
cmp
mov
cmp
sti
addr16
push
setg
push
pop
and
stos
int3
loope
push
stos
ljmp
pop
dec
cmp
mov
jbe
into
push
imul
inc
cmp
add
add
subb
xlat
idivb
jb
das
pop
jge
and
pushf
sbb
mov
andb
jo
loop
sub
imul
stos
mov
sub
loopne
clc
dec
in
mov
pop
mov
jp
addb
sbb
jg
mov
xchg
and
pop
repnz
and
outsb
adc
fisubrl
sbb
sbb
dec
mov
dec
out
pushf
aad
fildll
lock
shrl
ret
cmpsb
test
push
pushf
push
inc
sbb
push
xchg
cmc
movsl
jge
adc
xchg
sti
scas
je
xor
add
mov
dec
imul
xchg
jg
push
mov
push
push
clc
imul
stos
insb
cs
mov
and
push
aam
or
xchg
aaa
xor
imul
cmp
cs
out
pushf
lret
jl
stos
nop
jecxz
jge
jns
jb
fcomip
test
lea
jne
add
xchg
aaa
jns
xlat
clc
packuswb
xlat
hlt
sub
mov
hlt
fwait
sar
adcb
aad
mov
outsb
sub
jb
jno
mov
cs
push
mul
adc
fucomi
pop
jo
outsl
mov
and
mov
sub
pop
mov
iret
sbb
scas
orb
dec
loopne
xchg
dec
mov
lret
xor
or
clc
repnz
sti
mov
push
push
or
popa
sub
cmp
rclb
out
clc
test
out
lahf
xor
xor
push
sahf
repnz
clc
xchg
pop
arpl
in
cmpsl
lea
aas
and
push
lock
cmp
movsb
cmp
adcb
jle
pop
jl
sti
or
imul
je
cmp
xchg
out
xor
test
push
popaw
xor
cmp
xchg
jp
xchg
or
mov
mov
xor
movsb
outsl
mov
jl
aam
jnp
add
incb
ret
or
add
movsb
push
leave
int
divl
adc
stos
fildl
sbbb
mov
int3
inc
shlb
mov
pushf
pop
cmp
pop
mov
pop
js
pop
or
ljmp
addl
sub
faddl
or
xor
xor
shufps
test
xor
mov
xor
jmp
pusha
test
rcrl
rorb
dec
fwait
adc
jg
sbb
inc
movswl
add
add
aaa
xchg
cmpsb
cli
cld
cmovns
push
pop
jnp
push
and
mov
cli
ljmp
push
sti
cmp
cmp
loopne
pushf
mov
fwait
mov
pop
ljmp
loopne
loopne
mov
and
testl
lds
and
outsb
jns
mov
or
mov
in
nop
xor
pop
ja
fwait
shll
adc
sub
scas
cmpsb
xor
lcall
inc
pop
std
nop
mov
mov
and
std
cmc
hlt
cmp
ds
sbb
sarl
insb
cmp
fistps
add
mov
cmp
mov
adc
jo
shlb
sbb
les
sub
aad
pop
in
outsb
inc
mov
aaa
lcall
jl
or
push
jge
inc
pushf
dec
bound
add
sbb
lret
and
pop
and
lret
addr16
adcb
scas
jmp
inc
stos
lods
cli
fidivrl
pop
imul
out
inc
xor
xor
out
sbb
loop
flds
int
and
ss
mov
jae
jno
notb
stc
int
in
cltd
mov
dec
daa
mov
icebp
push
push
mov
push
add
cmp
sub
outsl
js
xchg
sbb
jo
inc
lret
jns
mov
popa
imul
fsubrs
sbb
jb
cwtl
dec
jmp
add
push
cmp
int3
cld
sbb
mov
fs
out
jecxz
es
sbb
and
mov
jle
and
fwait
mov
rol
and
add
mov
sub
add
ficompl
ss
shll
push
xor
outsb
adc
movsl
adc
daa
jle
jle
roll
or
xchg
jecxz
cli
insb
bound
push
shlb
decb
ja
mov
imulb
sti
sub
jns
xchg
add
push
pop
stos
lret
cltd
mov
xchg
in
pop
insb
or
push
cmp
inc
cmp
mov
incl
std
sbb
enter
js
mov
sbb
xchg
lock
scas
lcall
fwait
cmp
cmpsb
loope
jne
popf
pop
je
pop
jmp
sti
and
mov
dec
cmp
push
insl
cmp
cmp
std
cltd
push
sbb
mov
into
sahf
into
roll
and
jne
test
ss
out
sub
push
cld
shl
add
orl
cmp
mov
jae
pushf
fcoms
in
iret
push
mov
sub
ja
pop
scas
repz
and
lahf
push
xchg
push
and
fwait
sbb
rcll
sub
pop
cmp
jp
xchg
push
or
add
decb
add
ret
jbe
ja
inc
cmc
and
shrl
sbb
mov
adc
loopne
mov
sub
mov
xorl
jno
int
xchg
mov
pop
and
xor
sbb
insb
popa
push
call
je
mov
aam
pusha
lods
icebp
push
mov
dec
and
fbld
shlb
xchg
clc
dec
add
loopne
stc
or
fiadds
mov
pop
jno
sahf
aas
push
aad
aad
cmp
test
sub
ja
in
sbb
mov
jnp
dec
jns
dec
fldenv
cmc
sbb
ss
adc
push
lock
xacquire
pop
fwait
je
test
fidivrl
add
fldt
cwtl
inc
mov
push
or
daa
filds
dec
gs
cli
inc
or
xchg
outsb
pushf
pop
lock
push
aad
push
popa
jge
fcmovu
jp
mov
test
lret
stc
inc
xor
xor
xlat
xlat
out
pop
push
test
mov
cli
js
jae
xchg
cmp
cltd
push
cld
jne
test
push
or
and
jb
enter
outsb
dec
mov
aad
push
loope
fs
xchg
xchg
ss
aad
sbb
jae
add
xor
inc
pop
or
nop
adc
mov
jecxz
dec
pop
cwtl
stos
jp
push
add
lcall
outsl
fbld
dec
lret
push
mov
push
cld
jge
sbb
cs
cmc
cltd
leave
fs
or
cmp
dec
push
movb
jg
faddl
inc
ret
push
sbb
std
adc
inc
leave
lea
neg
pop
orb
xchg
loop
and
jp
jbe
mov
loop
inc
mov
out
jmp
icebp
cmp
sub
or
aam
das
sub
call
stc
pop
cmpsl
pop
xor
subb
sub
ret
jecxz
lock
test
imul
das
push
aas
inc
aad
test
not
arpl
and
lret
mov
pusha
pop
out
dec
aas
add
outsb
loopne
aas
mov
inc
popl
in
popa
xlat
gs
lock
add
loope
in
imul
sbb
push
fnstenv
add
in
push
test
sbb
inc
lock
add
test
xchg
push
std
shrb
push
push
movsb
gs
imul
cmp
xchg
push
mov
stos
sbb
popf
pop
test
adc
fmul
sub
push
inc
push
lahf
xor
ja
mov
dec
mov
xor
or
jge
jne
or
adc
xchg
std
mov
stc
mov
push
les
dec
mov
repnz
xor
xor
dec
jb
test
out
rol
adc
cli
inc
int
xlat
mov
cmpsb
dec
ret
mov
clc
loopne
dec
cmp
pop
mov
jns
cmpsb
sub
icebp
fldcw
adc
sahf
bound
lods
call
mov
mov
mov
push
es
int3
cmc
jbe
inc
shll
lods
jecxz
sub
lcall
inc
bound
std
imul
shrb
shl
mov
sbb
rcrb
pop
scas
out
outsb
popa
mov
add
cwtl
es
and
test
ss
push
xor
es
clc
aaa
xor
inc
pop
orb
enter
xchg
in
out
lret
cmp
dec
or
cmp
in
xchg
add
inc
stc
out
fidivrl
in
sarb
inc
test
lahf
xor
daa
call
inc
test
movsl
pop
sbb
cmpsb
imul
stc
lahf
test
loope
add
adc
addl
push
repz
mov
lea
mov
and
sti
inc
pusha
int3
aam
add
sbb
loopne
in
jle
fmuls
mov
stos
lret
xor
cmpsb
popf
push
icebp
jecxz
lods
or
or
xor
cli
xchg
das
pusha
adc
lods
mov
inc
addb
dec
hlt
jb
sub
sbb
pop
inc
in
outsb
aad
mov
ljmp
xchg
int
cmp
pop
mov
inc
std
scas
bnd
out
jmp
inc
ja
lods
cmp
xchg
mov
dec
test
and
sbb
adc
push
mov
es
pop
stos
cmp
fisubrs
mov
add
jle
cmpl
in
inc
mov
pop
stos
mov
sbb
pop
mov
mov
ds
data16
in
sti
add
fs
push
shll
inc
adc
insb
push
fwait
stos
push
sub
rclb
outsb
ss
icebp
adc
arpl
loop
popf
out
jns
mov
xor
or
dec
xchg
dec
out
and
push
into
cmpl
fdivs
fadds
scas
push
inc
xchg
push
shll
out
mov
lds
aaa
jp
jmp
lds
add
jl
push
push
shl
push
out
xchg
and
aas
je
push
push
fdivrl
sub
or
or
movsb
mov
fcoml
inc
mov
cmp
inc
mov
mov
movsb
mov
lret
gs
mov
clc
ljmp
sbb
push
arpl
aas
icebp
add
jecxz
outsl
ss
hlt
pop
mov
xchg
rorb
xchg
leave
ja
cmpsl
pop
sbbl
ja
imul
cli
stos
mov
xor
push
pop
sbb
hlt
and
aad
iret
push
sbb
xor
pushf
pusha
xor
sbb
sbb
mov
dec
cmc
mul
sbb
test
mov
test
xchg
inc
in
hlt
les
andb
mov
shlb
repnz
add
xchg
inc
in
hlt
les
andb
mov
shlb
repnz
add
xor
lds
andb
mov
shlb
repnz
add
nop
inc
in
je
inc
jb
sbb
sahf
or
arpl
mov
mov
data16
sahf
cmpsl
mov
cmp
and
insb
pop
insb
pop
pushf
out
idivl
cmpsl
int3
mov
xchg
mov
pop
dec
sub
pop
or
pop
insb
pop
pushf
inc
mov
mov
xchg
int3
cld
in
movsl
sbb
or
pop
es
and
pop
jne
jae
mov
cld
mov
test
dec
pop
add
push
popf
in
js
push
fdivrs
sub
out
leave
in
xor
mov
sub
mov
cmp
js
push
gs
mov
je
xchg
pop
sbb
int
fmuls
dec
ja
cltd
int3
sbb
pop
addr16
shrl
call
sub
pop
out
negl
loopne
sbb
in
sbb
lret
mov
pop
mov
popa
xor
out
cmp
mov
inc
in
imul
insb
cmpsl
sub
cmovge
stc
push
xchg
lcall
sub
cmp
add
add
sub
dec
xchg
mov
jb
jmp
jge
imul
cmpsl
int3
mov
xchg
add
cmp
sub
pop
sbb
pop
insb
and
shrb
test
shlb
pop
push
loop
xor
pusha
add
jae
jle
mov
in
mov
out
xchg
movsb
dec
push
popa
add
addr16
push
jae
ljmp
mov
cld
xchg
xchg
sbb
or
cmp
sub
pop
daa
dec
aaa
jl
insb
pop
pushf
out
idivl
int3
mov
xchg
xchg
sbb
or
cmp
sub
pop
daa
dec
aaa
jl
insb
pop
pushf
out
mov
scas
rol
mov
sbb
mov
rcrl
bound
stc
lods
dec
ss
cli
push
adc
add
cmp
insl
dec
sbb
mov
add
pop
dec
ficoms
inc
xchg
mov
adc
iret
ficoms
cs
in
jmp
mov
fwait
movsl
aaa
fisttpl
outsl
je
repnz
insl
pop
mov
mov
sub
pop
jnp
push
xchg
add
or
push
adc
inc
ds
fldt
test
lock
fldenv
out
or
pop
cmp
lods
xchg
js
inc
ret
int
push
clc
stos
xchg
das
jnp
mov
lock
bswap
sub
xor
popa
jp
stc
daa
jns
shl
imul
push
push
out
dec
cltd
into
enter
xchg
mov
xor
adc
daa
cwtd
mov
mov
xor
in
repz
lds
lret
pushf
add
stc
enter
jg
dec
cwtl
out
ret
loope
cld
pop
mul
aaa
ds
lret
popf
adc
out
push
out
add
fbstp
sbb
loope
and
fcomi
dec
cld
mov
dec
hlt
jg
add
inc
add
aas
adc
sbb
divl
lods
bound
test
xchg
jne
in
test
lret
xchg
push
leave
xor
fmull
add
out
sub
mov
dec
jbe
push
sahf
ja
out
dec
and
sti
push
xor
inc
es
faddp
and
xchg
fnstenv
sub
shl
cmpb
gs
jecxz
pop
das
add
adc
sbb
nop
clc
popf
xor
jb
fsubrl
or
sbb
clc
dec
pop
mov
xor
outsl
dec
add
sub
mov
in
jbe
rcll
in
lods
fdivr
shlb
inc
xchg
xchg
les
pop
push
addr16
mov
cltd
out
pop
fmull
aad
popl
jnp
mov
out
mov
cmp
or
fsts
push
scas
mov
out
pop
mov
xchg
dec
mov
fdivrl
lods
andl
insb
adc
xor
push
sub
push
sbbb
adc
inc
xorb
push
sub
xorl
stos
shrl
or
dec
leave
dec
pushf
adc
fcmovnb
loop
inc
outsb
pop
test
or
fwait
xchg
sbb
adc
lods
ror
sub
roll
inc
fst
fisubl
sarl
cli
pop
ljmp
dec
fidivs
xchg
xchg
push
imul
add
mov
mov
push
or
sub
mov
mov
lcall
daa
cmc
loopne
stos
dec
inc
call
cwtl
mov
sbb
adc
sti
jle
repz
add
cs
fwait
rcrl
insb
sbb
rol
push
xorl
xor
xchg
or
xor
xor
lock
repnz
and
cmp
mov
jns
in
jecxz
adc
scas
mov
sahf
pop
lods
ljmp
dec
ja
fists
into
movsb
shlb
mov
mov
out
fsubrs
adc
pop
cmpsl
repnz
fwait
pop
imul
arpl
inc
ja
shlb
xchg
or
out
push
jbe
xchg
push
insb
and
sti
adc
cmp
xchg
xchg
xorb
mov
add
jecxz
add
movsb
enter
inc
fwait
in
adc
mov
cmp
pop
push
aad
jg
mov
push
nop
or
push
psubw
push
dec
dec
and
xor
mov
xchg
inc
loopne
int3
js
pop
insl
push
movsl
jns
xor
or
xor
or
push
push
outsb
rorl
loop
pop
inc
pop
push
jnp
fiadds
jb
les
adcb
fmuls
mov
int3
and
inc
enter
dec
lock
mov
cs
or
or
dec
aam
test
dec
xorl
inc
in
cs
lock
xor
jl
adc
fisubl
add
or
int3
xchg
loopne
fcmovnbe
mov
or
gs
pop
sub
mov
jp
les
xchg
leave
out
pop
pop
xchg
sahf
jo
and
sbb
cmp
mov
sub
out
fmuls
xor
mov
pop
xchg
call
jp
push
repz
cmc
dec
outsb
sub
adc
mov
shll
adc
out
data16
dec
mov
or
push
repnz
push
fildll
hlt
movb
cmpsb
push
cmpsb
push
inc
int3
inc
push
add
push
fdivrl
xchg
adc
sbb
cmp
fstpt
dec
jae
and
push
stos
cmp
aam
testl
stos
aaa
pop
cmp
movsl
imul
inc
addb
ja
out
mov
push
in
dec
leave
push
xorb
insb
lcall
fstps
leave
outsl
mov
xor
iret
dec
push
pushf
mov
pop
loopne
aas
push
iret
push
sbb
lret
push
in
and
ja
jae
loopne
mov
leave
cmp
xor
inc
pop
mov
push
movsl
adc
and
test
sarl
push
jns
sbb
jbe
insb
inc
pop
adc
pop
sub
jns
pusha
inc
repz
inc
xchg
xchg
pop
pushf
lret
popa
mov
jae
pop
cmpsl
inc
cwtl
rclb
push
cmp
fsubrl
cmp
mov
out
in
out
inc
mov
push
outsl
and
test
xor
jmp
adc
inc
jae
inc
fmull
and
sub
or
or
dec
cmp
cmpsl
test
sbb
test
test
clc
or
aam
add
xchg
int3
insb
arpl
negl
dec
xor
dec
cmp
sbb
loope
jmp
xor
xor
push
cmp
les
cmpsl
jns
std
mov
mov
bound
stc
pop
push
push
js
sub
sbb
jg
stos
lock
ret
les
or
into
test
ljmp
fstl
xchg
or
adc
sub
push
lret
repz
test
int3
test
adc
push
clc
sub
cmp
pop
lods
ret
insb
or
leave
fcmovnb
jb
stc
push
mov
and
fildll
std
test
hlt
sbb
hlt
inc
or
inc
loop
sbb
mov
xchg
dec
in
sub
mov
mov
call
out
lock
jg
loope
sbb
cmpsb
sarb
mov
sbb
aas
subl
movsb
xchg
sahf
stos
cli
push
and
fmuls
leave
push
mov
cld
jae
stc
mov
mov
add
repz
movd
aas
cli
into
lret
dec
dec
mov
dec
pop
int3
inc
jp
sbb
scas
push
and
test
lcall
les
mov
jne
and
repz
or
cwtl
dec
daa
mov
cmpsb
f2xm1
mov
fnstsw
test
and
add
push
sti
hlt
jo
pushf
fldt
lods
mov
ret
in
and
xchg
adc
stos
and
mov
jp
mov
xchg
jge
nop
cld
mov
cmpsl
push
cmp
hlt
push
fildll
pushf
stc
cmp
jnp
or
xor
and
daa
and
sub
sub
fbstp
leave
dec
adc
fisttpll
mov
lahf
mov
mov
js
jne
mov
loopne
lds
pop
push
and
aas
aas
push
mov
je
dec
and
insb
dec
xchg
aaa
adc
stos
pop
mov
pop
sbb
lock
jmp
xor
mov
pop
repnz
lret
xchg
jae
lods
ret
lods
mov
mov
push
test
arpl
jge
ljmp
repnz
pop
repz
mov
test
and
xchg
pop
prefetch
xor
gs
push
xor
add
mov
mov
push
cli
jns
out
mov
jo
sub
xchg
xchg
and
push
or
stos
test
ds
or
aaa
fcompl
pop
repnz
mov
data16
pushf
stc
jmp
clc
sub
cmp
adc
iret
mov
xor
sbb
out
dec
lret
out
push
test
dec
sub
popa
aad
cltd
xchg
mov
lea
jp
call
cmpsb
lods
lcall
push
mov
mov
clc
imul
xchg
scas
jne
pop
xorl
push
rorl
push
mov
imul
xor
sub
sbbl
pop
cmp
cs
mov
shrl
arpl
sub
fisttpl
test
aad
pusha
sbb
stos
mov
push
pop
mov
pushf
iret
add
cmp
icebp
pop
xchg
mov
pop
loopne
cmpsb
insl
xchg
sbb
or
dec
mov
or
test
shrb
test
add
or
mov
jne
lret
sbb
push
pop
inc
jbe
xchg
ss
in
pop
mov
call
dec
shrb
adc
stos
inc
mov
or
call
mov
in
mov
sub
repz
cmpl
shl
mov
cmp
sbb
call
subl
inc
dec
mov
mov
lahf
ret
cltd
cmpsb
cld
or
test
inc
mov
hlt
jae
dec
int3
mov
into
sub
and
addb
jge
push
jp
stc
mov
pop
insb
movsl
jge
iretw
cwtl
frstor
fs
push
fcoml
out
adc
repnz
add
movlps
arpl
dec
mov
jno
pop
mov
adc
mov
xchg
xchg
in
jnp
loop
xchg
mov
push
mov
mov
fiadds
sub
xor
or
ret
out
mov
jnp
shrl
ror
aad
out
or
addr16
jae
cmp
fs
orb
push
std
adc
jmp
inc
mov
mov
xchg
push
jg
sbb
scas
add
sub
and
jns
push
pop
test
fucomi
in
lods
mov
push
icebp
pop
bound
imulb
ror
sbb
je
xchg
bound
ljmp
fdivrs
mov
xchg
adcl
mov
insb
dec
fisubrl
adcl
mov
jnp
dec
in
cltd
xchg
jns
lock
ss
sbb
mov
fstpl
xchg
push
mov
and
push
or
lret
and
popa
xor
add
repnz
test
shrb
call
jge
sub
cmc
cmc
xor
xchg
pop
arpl
cmp
ds
add
mov
std
sub
push
fmulp
mov
sbb
sbbb
push
frstor
jg
fiaddl
adc
sbb
fistpl
xor
xchg
data16
add
add
pop
loop
xchg
loop
pushf
loope
shll
test
jae
jle
sbb
inc
enter
add
dec
out
dec
fwait
inc
mov
sub
or
stos
nop
clc
popa
mov
jne
enter
loopne
stc
jp
popa
sbb
pop
mov
test
push
jg
dec
xchg
lods
pop
cmpsb
mov
cmovne
xor
mov
cmp
mov
push
jae
mov
mov
mov
gs
jae
in
faddl
loope
mov
das
out
lret
sub
lea
mov
xor
in
and
lcall
cmp
adc
rorl
rol
and
gs
xchg
lahf
xchg
cmp
lea
xchg
xchg
pushf
and
mov
xchg
and
imul
xor
xchg
cmc
xorb
in
popa
orl
mov
xor
fildll
insl
sahf
jbe
dec
std
fcoms
xchg
push
cmpsb
lahf
dec
outsl
add
call
add
xor
mov
pop
pop
xchg
sbb
push
and
cmpsl
ds
cld
movsb
int3
or
lods
inc
jp
fucomi
pop
sbb
fbld
inc
inc
sub
mov
inc
cmp
pushw
pop
mov
mov
stos
push
ret
rorb
jmp
repz
sti
lcall
jo
xchg
aad
mov
jl
jb
movl
sub
mov
adc
dec
jmp
nop
enter
fsubrs
inc
out
dec
ffreep
push
std
hlt
je
mov
sbb
jo
arpl
pusha
mov
jmp
cmc
fisubs
pop
or
sahf
cmp
xchg
ja
adc
in
pop
dec
cmp
cmc
je
shlb
sbb
push
or
int3
adc
mov
jecxz
push
inc
mov
incl
movsb
mov
out
dec
lahf
dec
dec
fisttps
lret
mov
cmp
cltd
les
nop
push
mov
xchg
lahf
jp
and
adc
je
cwtl
or
imul
inc
add
mov
inc
test
sbb
add
dec
stos
xorb
mov
dec
add
inc
xchg
inc
rorb
xchg
sub
sub
int3
mov
arpl
in
sbb
jmp
cmp
cmp
popf
in
es
inc
lods
add
js
and
mov
jns,pn
pop
and
push
lcall
inc
movsb
mov
mov
ret
push
cmp
pop
mov
les
sub
jo
push
enter
adc
fwait
or
sbb
xor
lods
andb
dec
sub
and
dec
mov
sub
dec
or
push
pop
bound
mov
push
enter
sub
aaa
outsl
js
sub
cli
fnstsw
movsl
sahf
iret
stc
sub
mov
daa
vpshaw
mov
sahf
or
sbb
into
mov
inc
imul
or
push
cmpsb
aam
ja
xor
std
fwait
insb
aad
mov
cmp
cmpsb
sbb
mov
shlb
push
pop
leave
aam
mov
aam
into
arpl
pop
pusha
fcoml
pushf
imul
push
jp
or
mov
out
imul
mov
int3
js
add
or
es
jo
fld
fmuls
or
test
lcall
pop
lods
sti
sbb
mov
arpl
pop
mov
inc
push
cmp
jmp
int
int
and
sub
stc
add
int3
mov
sbb
repnz
pop
outsb
rorl
fnstcw
into
je
add
xchg
sub
mov
rolb
imul
out
dec
inc
pusha
cmpsb
lahf
add
inc
aad
jnp
jl
shl
pop
test
imul
cli
lahf
int3
out
xchg
fsubs
sar
je
sti
and
lahf
fucomp
sbbl
mov
mov
jl
xor
imul
and
popf
stc
fldenv
int
mov
movsb
in
jge
sbb
adc
mov
stc
push
mov
pop
jmp
ljmp
pop
das
jnp
leave
inc
and
cmp
push
pop
repz
sub
cmpsl
push
push
inc
ljmp
xchg
in
fadds
xchg
mov
js
sbb
fldcw
xor
dec
clc
repnz
addr16
push
xorb
mov
ret
in
cvtps2pi
xor
inc
jae
add
jae
mov
jne
mov
mov
mov
or
iret
imull
addr16
scas
cmp
pop
roll
pop
lea
jmp
jb
js
shl
or
mov
lahf
mov
adcb
mov
das
sbb
cmp
sub
movsl
lds
arpl
cmp
xor
jg
nop
mov
xor
in
mov
jecxz
add
sub
pop
xor
fisttpl
cltd
subl
mov
mov
and
shlb
adc
arpl
jae
add
call
bound
dec
cmp
fs
inc
std
sahf
xchg
mov
lock
xchg
pop
je
add
pop
gs
push
sbb
ror
mov
lret
jo
out
and
dec
or
xchg
jmp
addr16
loop
dec
mov
sahf
xor
push
test
mov
fwait
aam
sti
int3
dec
xor
cmp
repnz
dec
pop
xor
mov
add
sub
xor
out
jmp
shl
mov
fwait
sub
ds
sub
fs
stos
nop
jb
aam
aaa
daa
loopne
xor
adc
mov
add
mov
sub
mov
add
add
xchg
xchg
icebp
imul
pushf
scas
adc
lret
mov
xor
add
shlb
out
insl
mov
fdivrl
ds
or
enter
mov
pusha
popa
testb
inc
push
iret
mov
dec
lds
cmc
lds
xchg
xchg
scas
pop
das
mov
or
mov
mov
jnp
mov
mov
push
out
addr16
cmpsb
sub
pop
inc
mov
shrl
mov
push
inc
push
lahf
subl
push
pop
lock
pop
lcall
sbb
outsb
imul
adc
daa
test
inc
aaa
movsl
and
xlat
int
aas
mov
stc
inc
xchg
mov
std
jle
mov
out
jns
sub
pop
sbb
mov
push
xor
ja
sbb
addb
loope
add
lods
cmp
int
lcall
mov
lcall
enter
xchg
mov
add
jbe
bound
repz
out
repnz
hlt
mov
cwtl
and
xlat
into
mov
jge
repz
movhps
sbb
andb
hlt
scas
mov
ret
mov
out
push
sbbl
cld
xchg
rcrl
addr16
loope
inc
lods
and
sub
jno
jl
iret
rcrb
and
sbb
mov
movsl
mov
pop
pop
xchg
pusha
loop
adc
mov
inc
cmpsl
cmpb
or
lahf
pop
out
inc
adc
rcrl
cmp
and
daa
inc
aad
adc
or
subl
mov
adc
mov
jno
jbe
inc
addr16
jle
mov
into
imul
fsubs
out
aas
ret
cmp
xchg
xchg
in
and
iret
dec
pop
push
adc
rorb
cmp
sarb
pushf
adc
leave
adc
add
push
out
dec
mov
jle
jecxz
scas
mov
dec
push
mov
sti
push
jns
pop
pop
lods
ss
dec
aam
popa
dec
xorl
dec
lret
sbb
icebp
in
negl
data16
cld
nop
outsb
adc
out
je
mov
sbb
or
push
lcall
cld
bound
ret
xor
in
pop
mov
mov
stos
repz
fsubrl
cmpsb
scas
lea
push
inc
bound
icebp
daa
fisubs
out
pop
les
rcr
jp
mov
loop
scas
iret
push
push
mov
loope
mov
jbe
mov
dec
jb
lods
arpl
sbb
shr
js
mov
jmp
in
fdivrs
dec
pushf
inc
inc
jecxz
mov
dec
xor
dec
mov
scas
adc
lods
add
push
sti
mov
jmp
divb
les
cmp
and
pop
imul
mov
insl
mov
xor
xchg
lds
xor
gs
les
pop
pop
add
in
clc
mov
mov
sahf
fwait
sub
xor
pop
clc
sbb
rclb
popa
out
fwait
xchg
push
shrl
mov
and
lea
sbb
fs
test
rcll
insb
push
fsubs
inc
pusha
push
adc
icebp
cmp
lahf
mov
ds
cli
js
jns
movl
cmp
sbb
pop
test
aam
loopne
es
inc
in
mov
xchg
inc
mov
out
les
add
fcompl
outsb
ja
inc
sbb
enter
std
sti
push
mov
mov
imul
mov
cmc
xchg
xor
fisubs
sbb
das
rcll
sub
aam
xchg
les
leave
adc
fwait
lock
fisttpl
pop
fiaddl
ret
jbe
sub
push
cmp
js
bound
mov
inc
movsl
or
sti
aaa
int3
mov
cwtl
and
call
mov
fs
or
xor
pop
cmp
aaa
and
xchg
ret
repnz
shrb
pop
sbbb
cld
test
jp
pop
add
clc
fwait
mov
push
xchg
iret
sbb
pushf
ja
pop
push
xchg
mov
nop
int
adc
inc
mov
jnp
mov
sub
std
add
loope
add
pop
test
mov
mov
inc
adc
lret
push
jbe
jnp
rcrl
xor
test
mov
sub
lods
push
imull
test
test
mov
fdivr
stc
cmp
xor
inc
shll
les
cmc
sti
cmp
sbb
xchg
cwtl
xor
xchg
xor
xchg
or
es
ret
and
push
mov
testl
in
xchg
sbb
or
cmp
sub
pop
daa
dec
aaa
jl
insb
pop
pushf
out
idivl
int3
mov
xchg
xchg
sbb
or
cmp
sub
pop
daa
dec
aaa
jl
insb
pop
pushf
jecxz
stc
mov
cmpsl
int3
fdivr
sub
sbb
or
cmp
sub
pop
and
push
insl
repz
add
xchg
fsubl
in
push
sbb
or
xchg
inc
sub
sub
dec
cmpl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
sahf
add
arpl
jg
stos
add
add
pop
add
add
add
add
push
lods
add
add
add
add
test
cs
add
add
add
aaa
add
add
add
add
add
add
add
add
and
push
add
testl
stos
add
add
add
xor
add
mov
add
pop
add
add
add
add
in
add
or
add
add
add
add
adc
add
int
scas
push
xor
aaa
add
add
or
test
loop
aas
add
add
add
mov
add
add
add
add
rolb
insb
add
jle
add
add
add
jb
inc
add
or
test
pop
add
add
add
cmp
add
sub
cmpsb
add
mov
mov
jmp
scas
push
mov
add
add
add
jbe
jne
xchg
push
add
add
add
add
pop
add
add
add
int
sbb
sbb
movb
add
mov
pop
add
add
add
lods
add
add
add
sbb
add
pop
add
fadds
jge
lea
sbb
outsl
add
add
add
add
add
stos
add
mov
add
mov
dec
add
dec
add
add
add
lds
int
jns
push
add
add
add
add
mov
mov
dec
add
add
cmpsb
add
add
push
add
stos
add
add
add
xor
sbb
insb
add
loop
push
add
add
add
add
jb
cmp
sub
add
mov
push
push
add
pop
add
add
add
add
sbb
test
mov
add
mov
testb
add
add
add
add
add
add
dec
add
dec
add
add
add
jns
testl
xor
push
add
add
add
add
add
mov
or
sahf
add
jb
push
add
add
jb
filds
xor
testl
insb
add
add
mov
jno
bound
mov
mov
add
add
sbb
add
add
add
add
add
add
add
add
add
push
add
or
add
add
pop
add
sub
flds
jmp
and
add
add
bound
push
add
sbb
add
add
mov
add
add
add
add
test
in
dec
add
add
add
inc
add
pop
add
add
adc
dec
add
add
add
push
add
ret
add
add
lcall
add
dec
add
add
or
dec
add
add
mov
cmp
mov
ja
mov
daa
add
add
add
aas
add
add
add
add
mov
add
push
add
out
test
mov
jbe
mov
mov
sub
pop
add
add
add
pop
add
mov
ret
add
ljmp
add
add
add
add
add
add
add
add
add
add
jo
orb
xchg
es
inc
stc
in
and
xor
dec
or
pusha
addr16
in
push
sti
fs
pop
or
dec
cmpsl
mov
cmp
mov
mov
mov
sahf
sbb
sub
jp
loope
or
int3
outsl
mov
mov
rcrl
popa
pop
insl
lret
stos
in
sub
leave
jno
xor
outsl
xchg
aam
cltd
inc
jmp
xchg
cmpb
test
pop
adc
inc
repz
setae
xchg
push
mov
sti
pop
leave
jp
jge
or
add
xchg
pop
imul
sbb
jmp
dec
and
test
hlt
push
mov
adc
out
int3
aaa
popa
mov
push
sarl
jb
xchg
cmp
ja
dec
pop
mov
aas
insl
aas
lcall
aam
push
arpl
mov
mov
or
scas
fdivp
xor
and
cmp
xor
inc
xchg
pop
ljmp
push
mov
in
or
pop
adc
sub
jnp
mov
lret
push
push
testl
rclb
es
je
hlt
add
aaa
shl
jle
ret
xchg
cmp
sub
dec
std
jp
cmovs
pop
out
adc
pushw
sbb
into
in
mov
mov
sub
adc
stos
mov
cpuid
incl
add
fs
jle
cmc
dec
ja
pop
mov
aam
jl
mov
mov
xchg
push
cmpsl
jmp
bound
push
enter
inc
xor
jle
outsl
add
adc
mov
inc
cmp
mov
mov
dec
jge
sub
loop
xchg
sub
xchg
sbb
sbbl
dec
push
jb
fwait
cltd
xor
iret
sbb
or
sub
mov
test
cwtl
inc
push
icebp
out
xor
jge
je
dec
mov
in
pop
or
add
loope
les
sub
jl
and
lret
fwait
xchg
imul
and
and
hlt
dec
mov
xchg
inc
cmp
sahf
stos
jb
and
fildl
add
clc
in
cltd
les
negl
ds
int
jl
in
imul
jo
sub
push
cmp
xor
lret
push
pop
sarl
out
ja
jnp
popf
test
mov
pop
addr16
je
shrb
scas
mov
mov
cs
mov
xor
ffreep
mov
or
mov
aaa
pop
iret
gs
fwait
iret
enter
jb
call
cmpsb
pop
pop
sbbl
insb
daa
lea
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
