mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
add
sbb
in
xchg
xor
dec
adc
mov
bound
gs
cmp
movsl
or
cmc
pop
in
adc
popf
and
out
jne
gs
and
xor
add
lds
inc
in
adc
in
clc
ss
cltd
push
scas
or
stc
js
push
mov
lods
push
mov
push
loopne
cltd
je
pop
add
out
mov
cmp
in
aam
lret
mov
cli
push
insb
int
jb
popf
mov
xor
mov
testb
outsb
nop
adc
neg
jb
pop
test
and
xchg
loop
pop
aad
jmp
enter
push
xor
int
mov
push
push
push
loop
jns
mov
in
jge
jo
gs
std
lock
pop
aas
in
xchg
pop
and
inc
bound
or
lret
cmp
aad
lds
pop
in
adc
test
cmc
jne
gs
loope
rcrl
jmp
xchg
jg
or
xor
lods
pop
cltd
inc
call
sbb
movb
bound
sub
enter
push
lea
in
and
cmp
test
dec
lds
pop
in
adc
popf
and
in
jne
gs
cmp
movsl
or
cmc
pop
in
adc
popf
and
in
jne
gs
cmp
testl
xchg
pop
push
mov
js
push
or
imul
pop
and
aam
shr
push
cmpsb
mov
idivl
or
nop
cld
inc
dec
mov
xchg
test
mov
je
out
mov
pop
sbb
sub
jl
mov
jg
jae
jns
test
imul
mov
outsb
and
movsb
inc
adc
jbe
rorb
pop
lods
mov
jge
push
xchg
xor
bound
out
outsl
mov
lret
roll
add
cld
xor
cmp
aaa
dec
into
repnz
or
clc
into
jns
jo
mov
into
jp
jo
mov
arpl
and
push
mov
pusha
and
mov
in
cwtl
and
jg
rclb
std
xlat
pusha
aaa
pop
out
out
pop
pop
mov
movsb
mov
and
add
cmp
xchg
and
jae
rcll
xorl
jecxz
sbb
imul
inc
mov
mov
lret
mov
jb
sub
and
loopne
ret
adc
test
mov
call
cltd
push
dec
adcl
pushl
jecxz
inc
in
or
cmp
data16
test
jno
cmp
jae
cwtl
sbb
mov
cmp
insb
add
pinsrw
lahf
xor
mov
rolb
xchg
test
xchg
loope
sbb
loope
in
idivl
faddl
mov
popf
popa
mov
cmpsb
gs
out
jge
lahf
mov
mov
loop
leave
mov
pusha
ret
and
jecxz
inc
mov
dec
imul
js
sub
push
cmpsb
cmpsl
das
jbe
test
mov
push
xor
popf
push
test
gs
repz
popf
ljmp
lods
and
inc
rclb
mov
or
adc
daa
xchg
mov
aad
aam
or
jo
js
xor
sahf
push
test
ror
sub
xchg
xchg
lret
stos
or
out
and
sbb
lock
mov
std
push
ss
cmp
xchg
jecxz
fwait
mov
addr16
rcrb
out
push
cmp
lret
push
mov
jmp
mov
cmp
push
rorb
fidivrl
push
lret
adc
scas
fisubrs
sub
sub
or
call
pop
xchg
jae
aaa
lahf
out
jecxz
testl
dec
arpl
xor
and
rol
adc
fldcw
inc
or
popa
xlat
enter
dec
stc
dec
ret
movsl
add
mov
out
les
xchg
mov
jecxz
imul
lcall
adc
jo
dec
jns
sbb
push
adc
jmp
sub
mov
aam
add
lahf
cmp
dec
es
loope
out
add
xchg
jmp
lock
out
test
and
push
mov
cmp
dec
lock
das
arpl
cltd
dec
lods
inc
sub
scas
call
test
icebp
les
leave
push
rol
sbb
pushf
gs
adc
dec
cmpsl
fldcw
fistpll
mov
mov
cltd
test
test
js
jns
jne
mov
nop
sbb
or
imul
mov
test
jns
jo
dec
leave
xor
rorb
push
icebp
jae
sbb
call
sbbl
push
je
adc
enter
and
cmpsl
sbb
sub
and
in
filds
xor
rorb
mov
jp
daa
inc
jecxz
xor
inc
xchg
stc
cmovb
mov
or
pop
xchg
and
bound
xor
dec
xlat
scas
frstor
adc
and
jecxz
pusha
lock
movsb
mov
fs
adc
sub
loop
dec
jge
lock
inc
fcomps
pop
loop
dec
mov
jb
out
lret
imul
nop
or
mov
xor
shlb
jmp
andl
jg
fstl
mov
dec
repnz
daa
dec
or
out
or
xchg
mov
and
push
adc
not
dec
movsb
adcl
and
out
push
int3
mov
mov
mov
rclb
test
or
xchg
das
mov
mov
iret
sti
push
add
push
mov
cmp
stos
jbe
imul
mov
sub
iret
fwait
nop
jp
push
sub
dec
mov
push
push
imul
test
pop
xchg
pop
sub
pop
out
mov
mov
xchg
cwtl
mov
xlat
rolb
cmpsb
inc
imul
imul
cwtl
adc
test
jge
xchg
sub
mov
fstl
rcll
cld
cmpsl
stc
xlat
daa
push
ja
mov
lock
test
arpl
inc
sub
in
push
fidivrs
and
mov
cmpsb
lds
jecxz
inc
js
mov
push
negl
pop
xor
movsl
sahf
bound
fidivl
inc
jl
sahf
xor
sbb
pop
repz
push
push
test
and
and
cmpsl
cmc
stos
xchg
and
push
movsl
adc
mov
cmpsb
scas
popa
jae
xchg
and
cmpsl
mov
cmc
mov
std
adc
fdivl
push
dec
sub
ljmp
mov
fldcw
xor
push
push
icebp
sub
sbb
lock
mov
mov
add
repz
jge
sti
or
add
mov
imul
xchg
jo
jnp
icebp
cmpsl
jp
mov
popa
loopne
fdivr
push
cmp
lret
inc
popa
xchg
insl
pop
dec
mov
mov
addr16
fimuls
mov
add
pop
pop
push
outsl
mov
fdivrl
lock
iret
dec
fcomps
xchg
jnp
orl
pusha
out
xchg
add
adc
mov
inc
ja
call
or
dec
fmuls
sub
or
in
mov
mov
adc
sarl
push
aad
push
leave
lret
mov
adcl
xor
xchg
in
and
mov
call
add
mov
push
aaa
xchg
xor
xchg
or
cmova
ret
jp
in
jae
mov
in
lds
sub
mov
mov
jne
pop
ficompl
xchg
mov
pop
lcall
movsl
addb
cli
cwtl
scas
push
dec
jae
ja
pop
jns
and
xor
outsb
adc
nop
shrb
and
and
into
or
add
adc
pushf
sbb
mov
and
add
mov
pop
sub
lcall
pop
sti
xor
fisttpll
ss
push
movlps
fwait
data16
test
dec
adc
fsubrl
jle
sbb
sar
cltd
xor
push
mov
pop
incb
and
in
cmp
sbb
outsb
pop
lret
fisttpl
xor
aad
cmp
fstl
dec
xor
leave
dec
mov
lods
sub
cli
mov
daa
arpl
in
or
outsb
dec
pop
mov
mov
jmp
test
or
xchg
dec
mov
and
dec
cmpl
dec
mov
mov
jmp
sbb
inc
bound
bnd
adc
jg
or
mov
mov
and
dec
sbb
cwtl
daa
les
paddb
jo
xchg
adc
data16
xchg
ffree
push
push
sti
rolb
lret
pop
mov
cwtl
data16
fcomp
sub
jo
dec
mov
adc
mov
js
xchg
add
xor
outsb
subb
bound
out
xor
das
fimuls
int3
repz
dec
dec
sub
mov
inc
mov
or
rcr
leave
inc
push
jge
jecxz
xor
dec
ds
mov
sarl
jno
scas
fucomip
loopne
push
dec
xor
sbb
and
add
cmp
dec
in
clc
mov
or
pop
xlat
leave
mov
daa
jecxz
in
repnz
push
arpl
push
sbb
mov
mov
arpl
cmp
mov
xor
daa
fstpl
enter
pushf
xchg
jb
xchg
xlat
add
xchg
xor
adc
lock
mov
ret
movsb
loopne
bound
inc
jg
mov
inc
jp
lcall
pop
dec
sbb
loope
pop
pop
js
adc
jnp
fidivl
or
iret
shl
push
xor
mov
into
test
xchg
fidivs
mov
dec
mov
mov
jno
ret
out
xlat
sbb
fildl
not
loope
cli
test
into
fwait
lahf
push
jae
scas
mov
sub
cmp
iret
aad
fwait
bound
jo
cmpsb
xlat
xor
xchg
mov
jge
sbb
stos
jno
mov
mov
jne
in
mov
enter
fbstp
aam
pushf
inc
pop
sub
mov
jp
mov
push
popa
inc
dec
loope
loopne
sub
pop
rcrb
negl
outsl
unpckhps
jb
sbb
cmp
popa
repz
cwtl
andl
subl
popf
in
sbb
xchg
dec
in
pushf
cli
sti
sbb
inc
out
dec
xchg
lret
inc
bndldx
xor
imul
inc
loop
fildll
cwtl
and
adc
or
mov
in
aad
mov
pop
sbb
mov
jmp
push
ret
jb
push
int
rcrl
mov
sub
adc
mov
add
hlt
cmp
or
je
movsl
add
ss
mov
daa
inc
xchg
lds
scas
sbb
fstpl
imul
pusha
or
lods
test
mov
adc
je
adc
mov
or
popf
aad
in
pop
adc
lock
sahf
lods
cwtl
leave
dec
sahf
and
push
add
enter
pusha
mov
lahf
mov
and
mov
pushf
mov
jo
outsl
add
ja
xor
fs
pop
out
cmpsb
dec
enter
pop
push
cmp
push
repnz
jae
and
loope
mov
insl
pop
mov
leave
cli
or
mov
inc
dec
push
test
rorl
cli
add
mov
fwait
cmp
inc
rorb
push
cmp
lock
test
fsubrl
pop
pop
xor
sbb
lods
imul
sub
mov
adc
jnp
enter
push
adc
pop
mov
mov
or
jle
xchg
mov
inc
mov
fxch
shrl
loop
ljmp
in
sbb
inc
cli
cmp
push
xlat
sbb
dec
stos
enter
dec
adcl
lock
inc
pushf
xchg
repnz
das
ss
mul
bound
mov
mov
pop
mov
movsb
mov
fmuls
pop
xlat
sub
xchg
xor
xor
cmp
daa
scas
cmpsb
lcall
and
sahf
xchg
movsl
int3
into
mov
inc
jl
mov
icebp
shlb
inc
jg
dec
loope
xor
and
adc
or
lds
xchg
lahf
cmc
xchg
xchg
add
sub
mov
pop
mov
jle
outsb
inc
add
jns
mov
push
movsb
jns
push
xchg
sahf
dec
xchg
jp
repz
cmp
fcmovnu
and
sti
push
das
push
push
pop
inc
push
fldl
scas
inc
adcl
insl
pop
leave
xor
lea
jl
pop
out
js
std
movsl
inc
iret
dec
dec
icebp
mov
and
mov
out
mov
or
push
test
sbb
pop
adc
xchg
sub
inc
and
push
or
mov
and
jle
icebp
mov
dec
arpl
xchg
out
call
or
shlb
add
call
cmp
jp
cmpsb
mov
into
sub
cmp
mov
jb
cld
dec
andw
jns
cltd
cli
and
leave
dec
test
xchg
inc
and
xorb
mov
cmp
enter
pop
out
sub
imul
mov
inc
enter
dec
xor
ja
inc
xor
or
push
mov
shrl
xchg
push
jge
in
insb
inc
movsl
mov
mov
add
loop
and
hlt
adc
stos
adc
mov
xlat
stc
xchg
out
mov
cmpsl
popa
lods
jle
sahf
daa
lods
popa
sub
shlb
dec
mov
xor
pop
sbb
add
mov
sbb
xchg
imul
adc
sbb
xor
subl
lea
movsb
pushf
fstpt
sub
sti
xchg
mov
dec
in
xlat
lahf
lret
sbb
test
jb
lods
dec
mov
jne
iret
xorb
push
jl
fistpl
div
clc
and
xor
ret
xchg
pop
fcomip
std
test
popa
jle
and
cmpsb
stos
out
scas
push
mov
push
or
test
lahf
mov
call
add
cmpsl
mov
dec
cmp
sbb
push
jp
in
jmp
mov
add
mov
add
aas
dec
sbbb
add
mov
cmp
sub
push
jmp
mov
mov
popa
insb
lret
or
data16
hlt
fsts
outsb
xor
mov
andl
in
in
mov
test
aas
xchg
sbb
mov
cmp
inc
push
data16
sub
pop
fstps
push
jns
insb
insl
mov
mov
imul
jp
xor
out
xchg
jnp
and
adcb
push
cmpsb
xchg
int3
sbb
call
mov
push
in
mov
dec
aas
sbb
mov
push
shll
jno,pt
fbstp
pop
notl
lret
dec
sbb
pusha
jo
sub
adc
push
sarl
lahf
xchg
std
outsb
push
dec
insl
mov
pop
adcb
ret
and
loop
mov
loop
lock
daa
jge
fsubl
adc
cmp
push
fs
out
fsub
out
sarl
mov
decb
mov
in
rcrl
or
adc
frstor
mov
sbb
add
xor
pop
mov
pop
stc
loope
jae
iret
adc
adc
loope
add
or
sbb
mov
testl
or
frstor
mov
adc
cmp
sbb
dec
ss
ret
mov
and
lahf
pop
call
sahf
lret
dec
mov
std
fsubl
test
into
sbb
bound
xchg
jb
sbb
mov
lods
pop
pop
sti
clc
dec
fsubrl
lock
sbb
mov
xor
sub
xlat
pop
cld
mov
xchg
mov
add
mov
bound
jp
inc
jbe
push
jge
test
mov
mov
mov
cmp
dec
das
sub
cld
rcr
jl
inc
sbb
ret
shlb
ja
and
test
mov
pop
xchg
xor
jnp
in
mulb
or
xor
aas
ds
jle
sub
sub
test
aaa
add
dec
dec
popf
jl
es
out
push
cltd
mov
fwait
mov
lods
nop
jmp
push
mov
adc
pop
and
pop
lcall
pushf
out
je
jns
inc
inc
pop
push
jns
addr16
out
fisubrl
sub
test
pop
rcr
xlat
inc
out
xor
das
insb
inc
ds
jp
test
jecxz
bound
stos
mov
sbb
out
dec
popf
dec
pushf
pop
jnp
mov
cwtl
test
pop
push
inc
push
or
fiaddl
cltd
dec
ds
js
cmpsl
jnp
push
mov
cmp
mov
sbb
loop
push
adc
ret
daa
rcl
cmc
cltd
cmpsb
sbb
inc
jecxz
mov
or
adc
imulb
add
or
dec
fcmovnu
ds
test
loope
inc
mov
lahf
inc
inc
and
push
scas
in
and
les
pop
stc
mov
stos
mov
call
out
sahf
outsl
loope
sbb
sbb
mov
sub
fmulp
xor
sbb
and
dec
cmc
add
insb
add
aaa
aaa
sarl
fildl
sbb
lahf
das
push
scas
cmpsb
push
imul
ficomps
push
in
repz
push
pop
or
sarb
sbb
cmp
jle
push
pop
repz
mov
adc
xlat
sarl
test
mov
lcall
mov
cmpsl
sub
adc
outsb
cmp
sbb
cwtl
mov
nop
mov
mov
vunpcklps
jnp
ror
and
cmc
call
fidivrl
fisubs
sbb
loop
les
jbe
fisubrl
xor
loopne
sbb
bound
popa
pop
test
idivl
sbb
mov
out
xor
inc
add
dec
sbbb
push
cmpb
xor
loopne
inc
add
adc
jge
and
mov
sub
in
jmp
push
test
out
cmp
jae
mov
mov
mov
in
xlat
mov
xchg
test
jnp
xchg
xchg
mov
mov
shrl
movsl
cmp
pop
fs
mov
movsl
out
scas
push
mov
mov
and
orl
das
sub
jb
pusha
mov
sbb
out
cmp
adc
inc
push
hlt
aam
pop
jns
and
adc
sbb
mov
and
cwtl
adc
das
ds
cmp
add
jl
test
fsubs
cs
gs
cs
bound
out
or
mov
repz
lret
xchg
and
xor
jno
mov
faddl
dec
cltd
or
aad
xor
dec
add
push
aas
mov
shll
arpl
jp
xchg
nop
outsb
push
xlat
int3
cmp
fsubp
jmp
sahf
into
fldt
inc
cmp
jl
sti
jg
cmp
mov
mov
xchg
mov
insl
fmull
jbe
pop
pop
dec
test
fisubrs
test
inc
mov
in
ja
mov
jp
rorl
jno
add
jp
arpl
jbe
and
loopne
mov
and
aaa
and
cs
shrl
lret
out
orb
xchg
sub
sbb
or
stos
int
adc
ja
nop
cmpsl
loopne
lahf
jle
mov
inc
push
and
out
cwtl
out
imul
and
rcrl
pop
aas
fildll
inc
cld
push
add
jmp
popa
orl
xchg
pop
sub
dec
sub
xchg
cmpsl
cld
pop
popa
sub
sub
inc
stc
mov
xor
sarb
mov
xchg
sbb
leave
loopne
out
push
sti
test
cli
imul
shll
jge
fistpl
xchg
test
cmp
adc
call
data16
scas
inc
xor
stc
dec
stos
scas
inc
lahf
fldl
fsub
dec
popf
add
sub
xor
mov
out
ss
cmpsl
mov
sti
dec
imulb
mov
pop
add
push
popa
jae
popa
js
sub
insb
je
jo
loop
enter
xor
in
imul
and
dec
push
fstps
mov
push
insl
cmc
loope
push
push
push
or
loopne
jne
test
inc
testl
cs
fisubl
addr16
jge
dec
xchg
push
sbb
rolb
jne
nop
dec
inc
stos
mov
stc
sbb
adc
fmulp
imul
sub
mov
es
add
cmc
and
cmp
or
xor
lahf
pop
in
xchg
sti
bound
ja
jle
ja
xor
add
fucomi
add
fnsetpm(287
pop
out
aaa
dec
lds
add
shl
js
mov
cmpb
aaa
mov
add
and
sbb
negb
arpl
sti
test
out
sbb
mov
mov
mov
and
inc
iret
xchg
or
push
sbb
push
cwtl
fisttps
and
into
pusha
mov
loope
cmp
add
sub
lds
xor
nop
ljmp
jge
es
xchg
repz
imul
shll
repnz
repnz
pop
fcomps
ss
das
in
test
xchg
into
iret
xchg
in
sbb
orl
dec
sbb
xor
pop
xor
push
ja
cmpl
cmp
fiaddl
inc
enter
push
fldz
push
add
fsts
movsl
pop
daa
shll
cwtl
shll
xchg
xchg
sub
sub
test
movsb
xor
or
pusha
cmp
pop
or
push
push
mov
in
adc
scas
les
leave
ja
loope
add
test
loopne
add
and
xorb
sbb
push
sbb
nop
fsubl
divl
fisubrs
rcrb
fcmovb
sub
cld
sbbb
repz
adc
mov
xchg
ret
adc
or
add
mov
jg
inc
xchg
aad
int3
sbb
lds
pop
in
adc
popf
and
in
jne
gs
cmp
movsl
or
cmc
pop
in
adc
popf
and
in
jne
gs
cmp
movsl
or
cmc
pop
in
adc
popf
and
in
jne
fs
xchg
cmp
aad
lds
pop
in
adc
popf
and
xchg
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
mov
test
hlt
std
stos
int
cmp
and
je
and
push
pop
inc
dec
mov
popf
test
aam
int
cmp
or
push
pop
inc
dec
lods
mov
pushf
in
std
std
in
int3
fst
int
xchg
das
sub
pop
cmp
add
das
sub
repnz
ljmp
pop
cmp
and
add
dec
mov
sub
xor
adc
or
shr
sbb
or
xor
cmp
movsb
mov
mov
popf
fsubl
ss
inc
lock
mov
mov
je
jge
cmp
les
add
dec
inc
adc
pop
pop
icebp
pop
aaa
xchg
adc
lods
rclb
int
lock
cld
and
enter
rcr
add
add
fisubrs
xchg
fldenv
movsb
push
or
outsl
pusha
xor
out
sub
jmp
add
stos
mov
inc
dec
je
movsb
lods
xchg
popf
xchg
in
in
aam
sub
sbb
jl
push
pop
pop
and
rol
lods
icebp
hlt
loopne
nop
xchg
mov
xchg
test
pop
data16
dec
sbb
push
xor
or
mov
xchg
xorb
int
inc
and
push
jl
bound
push
pop
push
and
inc
sbb
icebp
cmc
test
mov
in
aam
int
cmp
add
je
fs
push
pop
inc
dec
mov
movsb
lods
xchg
popf
test
aam
int
cmp
add
je
fs
push
pop
inc
dec
mov
addr16
das
in
lret
enter
pushf
or
fists
ljmp
push
pop
jbe
and
mov
xlat
jecxz
or
fdivrp
sub
popa
mov
lcall
xchg
add
test
clc
push
loop
mov
sbbl
outsb
mov
cmp
pusha
xchg
pusha
loopne
sub
dec
orb
clc
aad
push
outsl
xor
lods
pop
negb
les
or
shl
mov
mov
js
aaa
int
add
add
insl
cmp
out
cmp
inc
push
shl
xor
imul
scas
insl
imul
imul
or
mov
inc
aam
mov
jb
inc
dec
push
into
jle
pop
push
xchg
aam
sbb
xchg
das
xchg
jne
in
addb
mov
xchg
repnz
jnp
dec
cmpsb
jae
inc
jmp
lds
lret
in
cmp
push
xchg
pop
mov
and
lea
jbe
enter
fldcw
mov
xorb
stos
sbbl
inc
insl
bound
sub
xchg
jmp
ret
mov
loop
pusha
js
dec
fbld
fscale
mov
testb
imul
roll
mov
mov
sbb
addr16
xchg
ljmp
aas
pop
gs
dec
push
and
pop
ds
popf
mov
mull
push
rorl
push
mov
lock
aaa
in
push
rclb
stos
clc
xlat
out
push
stos
jl
pop
add
pop
out
lds
lcall
and
lods
xor
imul
add
rcr
lcall
outsl
xchg
jge
inc
les
inc
mov
xchg
mov
jge
and
mov
push
cmp
inc
mov
jmp
lcall
xor
mov
shll
jmp
test
aam
mov
mov
lods
push
push
insl
xchg
inc
orb
adc
ds
into
ret
stos
aam
and
xor
pop
pop
or
aaa
pop
mov
out
in
mov
repnz
enter
scas
sti
push
mov
fcoms
inc
pop
mov
dec
inc
dec
cmpl
xadd
xor
addl
sbb
loop
push
hlt
xchg
cli
xor
lock
jmp
jnp
mov
aam
int3
inc
clc
mov
dec
add
pop
out
and
mov
sub
or
xor
aaa
xchg
and
or
sub
popa
js
add
mov
push
cmp
lea
or
jle
and
jnp
inc
mov
popf
jle
sbb
sar
xchg
lods
pop
test
mov
inc
fcmovnb
adc
repz
xor
pop
push
loope
out
clc
dec
add
mov
leave
std
cld
pop
xor
rorl
mov
test
push
std
pop
rcrl
sbb
cwtl
dec
clc
mov
int
lret
jno
arpl
clc
mov
jno
push
sub
and
sahf
and
repz
outsl
test
insb
adc
jmp
faddl
add
adc
pop
mov
push
mov
enter
and
push
sub
lret
orb
pusha
fisubrl
repnz
inc
push
rol
fcom
call
jl
dec
inc
dec
ljmp
cmp
push
mov
mov
fildl
mov
repnz
add
cmp
mov
test
add
mov
sbb
and
inc
pop
xchg
das
pop
and
xchg
cmpsb
sbb
mov
dec
xchg
outsb
pop
ja
jne
mov
or
ret
fdivrl
pop
movsb
mov
pop
mulb
or
mov
les
cmc
push
in
stc
xchg
rcll
adc
mov
es
inc
arpl
aad
fisttpll
cli
in
testb
and
movsl
sahf
adc
cmp
in
mov
cmp
jbe
push
repnz
movsb
dec
fbstp
mov
ja
mov
das
ret
pop
imul
cmpsl
fldt
js
loope
out
jo
pop
repnz
push
sbb
mov
clc
pop
dec
mov
cmp
sti
push
cwtl
add
push
fs
lea
arpl
inc
mov
push
xchg
js
cmp
imul
bound
push
int
mov
and
ljmp
mov
and
or
mov
push
ja
and
mov
push
loop
lret
notb
test
cmp
popf
add
not
cli
pop
cld
out
aas
and
dec
cmc
pop
repz
cld
jnp
mov
inc
and
cs
push
push
sti
imul
movsl
add
or
sbb
repnz
sahf
jge
cmc
lea
daa
inc
xchg
jno
pop
push
sub
pop
lds
inc
scas
push
incl
je
adc
cld
jbe
mov
mov
mov
cmp
test
js
lds
xor
in
sbb
dec
out
lock
mov
imul
sub
popf
adc
or
inc
sahf
xor
mov
call
xor
pop
outsb
mov
and
jbe
jmp
imul
sub
filds
les
or
ljmp
imul
mov
and
sub
cmc
jle
fiadds
les
and
xor
push
jo
ja
mov
out
lret
fbstp
test
pop
arpl
lods
cltd
mov
adc
or
outsl
pop
in
std
std
lret
jmp
lds
push
add
mov
pop
sub
das
xor
rcl
clc
lods
subb
test
in
jo
cli
sbb
repnz
mov
sub
xor
bound
jle
mov
in
inc
sub
push
lahf
xchg
fdivs
clc
jge
fistps
popa
cld
orl
adc
jno
mov
jp
adc
test
out
jo
lret
jl
mov
add
add
scas
repnz
dec
cmc
and
shll
out
test
loop
xchg
outsb
lahf
cmpsb
or
and
mov
mov
int
ss
mov
inc
push
cmp
ljmp
or
dec
les
mov
cmp
sbb
out
ret
rcl
mov
addr16
jle
sarl
adc
mov
out
adc
fadds
dec
push
or
gs
lds
sub
mov
ret
rclb
or
inc
mov
cmpsl
shll
das
jge
icebp
mov
xor
pop
aaa
iret
inc
outsb
repz
cmp
adc
cmp
pop
push
pop
leave
pop
xor
loopne
cmpsl
nop
divl
cmpsb
idivl
pop
insl
adc
enter
sub
xchg
inc
leave
add
inc
jmp
movl
popa
dec
jae
sbbb
in
xor
push
xor
push
scas
in
xor
notl
outsl
dec
fistl
cmp
cltd
pop
mov
add
inc
out
xor
jns
imul
push
mov
sbbl
sub
call
jae
xor
jmp
nop
cs
push
sub
push
cmp
push
stc
outsl
ja
sbb
ret
cli
fistpll
dec
fwait
jbe
sbb
rol
das
insl
fcomi
mov
pop
pop
inc
out
xor
sub
sbb
push
mov
pop
push
jle
inc
loope
mov
dec
das
rcrl
insb
adc
or
shl
enter
add
adc
fistps
es
filds
sbb
shlb
xor
xchg
sbb
sub
shlb
inc
insb
mov
bound
push
sbb
fistpl
lcall
mov
xchg
jp
addr16
out
scas
push
sub
fs
cli
inc
addb
outsb
jle
sbb
idivl
and
mov
sub
xchg
repnz
ds
dec
dec
stos
cs
sub
mov
movsb
pop
push
int
lea
jmp
dec
out
enter
push
incb
and
fwait
mov
mov
mov
movsl
mov
scas
sub
stc
gs
adc
jecxz
aam
or
dec
xchg
xor
xor
pop
clc
loope
and
cwtl
jecxz
jl
or
ret
cmpsl
cmp
dec
es
mov
mov
fsubrs
cld
or
in
or
insl
and
nop
sti
movsl
add
dec
test
scas
out
cli
sahf
mov
sbb
lret
aaa
mov
xor
lret
lock
addb
cmp
sub
inc
addr16
ret
and
xchg
jns
pop
in
test
test
mov
or
cmp
idiv
cltd
lahf
aad
inc
lds
jo
mov
mov
dec
or
and
jmp
out
pop
sub
mov
push
mov
inc
pop
out
aam
xchg
push
cmp
enter
mov
pop
adc
push
pushf
xadd
mov
leave
adc
dec
or
mov
stc
std
cld
mov
jl
cltd
and
mov
push
adc
xchg
inc
jns
sbb
push
ss
mov
adc
push
out
sub
or
inc
sahf
sbb
inc
mov
xor
mov
movups
inc
out
jecxz
pusha
imul
mov
fistpl
sbb
jmp
in
xchg
xor
inc
mov
mov
mov
xor
dec
fs
dec
mov
push
das
push
xchg
pop
data16
xor
inc
sahf
std
xor
cmp
jmp
test
mov
fs
sahf
outsl
push
lcall
cmp
pop
sbb
loopne
lret
insl
sub
call
xor
int3
mov
xchg
in
dec
mov
fistl
jne
pop
adc
addb
repz
jb
ret
cmp
int3
adc
cs
pop
and
sub
scas
xchg
push
je
ret
jecxz,pt
jecxz
imul
lret
mov
inc
sub
jle
or
call
mov
and
jnp
adc
or
test
push
aam
mov
xor
stos
shll
adc
in
aas
dec
aas
in
xchg
pop
mov
sbb
jecxz
mov
mov
cmp
jmp
iret
mov
out
dec
push
jb
inc
jle
jle
xorl
lods
sub
test
cltd
jns
cs
pop
sahf
fiadds
stos
in
inc
inc
stc
xlat
sbbl
mov
xlat
insl
xchg
enter
mov
insb
or
push
xor
sbb
shr
fucomi
sbb
call
in
into
mov
inc
xor
xchg
mov
fwait
dec
movsb
sub
negb
fildll
adc
aas
mov
add
jg
imul
leave
je
mov
xlat
leave
stc
lret
jne
je
andb
lcall
push
jmp
cmp
xor
pop
pop
add
pusha
fcmovnu
xor
leave
add
lea
daa
scas
inc
push
stos
cli
scas
test
aas
sub
movsl
test
jecxz
ljmp
jecxz
js
pop
in
call
sbbb
imul
mov
jmp
cmp
inc
xchg
adc
pusha
test
push
popa
inc
out
and
xchg
adc
andnps
aad
xchg
outsb
rol
mov
push
push
jl
and
push
ds
xor
addr16
and
dec
inc
sahf
jnp
jbe
add
jnp
lret
mov
cwtl
in
or
push
stc
push
out
fbstp
scas
clc
cmp
pcmpeqb
fbld
out
sub
rolb
add
xor
loopne
out
int3
cmp
xor
stc
xor
mov
cwtl
outsb
dec
mov
dec
in
and
push
and
sbb
fcoms
in
sahf
jcxz
add
jb
inc
mov
xchg
dec
adc
fbld
fldt
sbb
push
cwtl
cmc
ret
mov
push
dec
loop
leave
pop
or
mov
stc
lret
rcll
stos
adc
cs
sbbl
shll
xchg
inc
inc
into
mov
mov
ss
leave
fdivrl
push
stc
mov
insb
adc
jg
dec
xor
sbb
cmpsb
jne
or
mov
mov
mov
aaa
push
bound
adc
ja
cmp
pop
mov
ljmp
inc
clc
pop
in
and
sbb
pop
rolb
in
xchg
cli
add
mov
xchg
shll
push
idivb
push
dec
sete
int
sub
clc
add
data16
xchg
jp
orps
cli
dec
lcall
xchg
in
xchg
stos
js
mov
mov
cmp
in
dec
lock
and
outsl
sahf
leave
pop
fxch
mov
ret
mull
adc
divb
pop
push
andb
call
mov
xchg
aas
add
push
sub
sbb
add
cmp
addr16
in
push
push
xchg
stc
ret
es
cld
and
rorb
pop
or
aad
mov
mov
jg
stos
adcl
jp
mov
xchg
in
adc
aaa
insl
sub
mov
add
mov
xor
cmpsl
pop
cmpsb
inc
add
vmovupd
sub
push
xor
incl
pop
xchg
enter
jge
mov
jb
lea
pusha
paddw
sub
add
addr16
cmpsb
sbb
sub
fsubrl
rcl
adc
mov
adc
pop
jge
mov
push
mov
pusha
pop
add
psllq
in
insb
movsl
movsb
jae
sti
cmp
imull
push
popa
push
inc
iret
mov
icebp
ficompl
lock
cmp
mov
sbb
mov
cmc
imul
xor
test
xchg
int3
push
jne
in
mov
xchg
pusha
add
out
scas
mov
and
cmp
test
pop
loop
popf
and
and
sbb
pop
cli
push
sbb
in
mov
data16
push
cs
fldcw
cmp
aam
clc
sahf
fldl
out
mov
orb
sub
insl
cld
sub
test
incl
sub
push
sar
mov
pop
into
jne
stc
fnstsw
ss
lods
adc
rorl
jge
push
inc
mov
adc
hlt
fidivs
call
nop
push
movsl
stos
loope
pop
lds
mov
mov
test
cmp
std
pop
sbb
in
cmp
shlb
push
mov
hlt
ret
leave
sti
lods
dec
lret
test
addl
dec
xlat
dec
lea
clc
mov
jne
fstl
in
call
jnp
pop
mov
sbb
in
mov
xorl
into
or
mov
stos
fistpl
or
lds
cmp
jnp
dec
cli
dec
aaa
jb
fisttpl
fdivrl
in
test
mov
jecxz
test
pushf
jo
cmc
pop
shrl
mov
inc
test
sub
in
and
imul
xor
add
stc
cltd
rol
xchg
jnp
sub
lock
sbb
aad
xchg
mov
aam
jecxz
subb
pop
jle
stos
or
test
call
je
mov
loop
mov
test
lahf
jp
cltd
cs
xchg
lods
hlt
mov
xor
sbb
es
and
mov
mov
cmp
and
dec
stos
cld
push
dec
das
xchg
push
pop
jae
dec
mov
inc
jp
inc
xchg
iret
movsb
mov
add
addr16
stos
push
int
iret
push
sub
sbb
lock
cmpsw
mov
dec
cli
add
hlt
mov
mov
pop
mov
jnp
xchg
adc
dec
sbb
icebp
sub
mov
xor
inc
ljmp
mov
add
dec
or
push
addr16
lcall
loopne
jno
jnp
imul
or
and
pop
loop
int3
fdiv
adc
daa
daa
aad
sahf
iret
icebp
mov
imul
push
ljmp
mov
orl
jns
outsl
and
insl
jp
imul
adc
push
mov
xchg
js
icebp
pop
xlat
dec
rol
xchg
loop
jecxz
les
mov
out
aas
sub
add
and
push
and
mov
out
inc
add
xchg
dec
test
mov
test
push
shll
repz
cmp
jecxz
and
repz
fnstenv
push
movsb
push
test
mov
mov
lods
test
mov
hlt
adc
push
cld
test
pusha
mov
or
mov
dec
pushf
ret
dec
adc
cmpnltps
ljmp
pop
and
mov
mov
sti
rcl
test
inc
frstor
arpl
pop
loop
cmp
dec
shlb
xchg
mov
mov
in
popf
mov
jnp
xchg
inc
mov
adcl
xchg
mov
in
jne
pop
mov
jne
addr16
and
dec
hlt
mov
add
xor
aaa
out
xor
add
mov
test
jno
dec
fists
mov
and
mov
push
push
jl
loopne
cld
mov
js
inc
iret
and
sbbl
out
lret
repnz
into
pop
cld
push
xchg
fmul
xlat
cmp
add
enter
and
adc
in
insl
hlt
cld
cs
pop
loopne
out
mov
lods
movl
sbb
dec
imul
jne
push
or
push
or
xor
pusha
shrl
loope
fbstp
nop
addr16
stos
scas
mov
dec
pop
ja
add
inc
adc
xor
shl
js
dec
mov
jns
mul
inc
cld
cmpl
sbb
inc
add
fwait
mov
js
into
cwtl
pop
mov
push
xchg
loop
cmp
loope
mov
lods
sub
sub
cltd
jnp
xchg
rclb
push
mov
mov
clc
shrb
mov
add
mov
cld
mov
sbb
imul
push
xor
adc
cmp
mov
out
dec
sub
imull
lods
loopne
lahf
add
inc
and
mov
sti
sti
mov
push
jne
mov
adcl
repz
inc
loopne
shlb
adc
inc
hlt
adc
push
int3
xor
xchg
dec
adc
pop
lods
push
fsubl
cmp
push
or
aad
sti
jg
aam
test
rol
xlat
jle
arpl
mov
add
xor
adc
cmc
inc
lock
scas
jb
add
data16
lock
mov
pop
mov
lock
push
test
aam
inc
xchg
sbb
mov
jns
jle
gs
outsl
mov
cmp
test
xchg
jmp
fdivl
dec
in
and
xchg
iret
hlt
and
mov
std
dec
ds
xor
in
jo
movsl
shll
cwtl
fistps
nop
xlat
and
int3
loop
pop
inc
rcrb
jae
and
les
leave
and
test
pop
or
mov
cltd
sbb
inc
clc
xlat
mov
xlat
into
jbe
and
xchg
xchg
aas
test
add
dec
push
xchg
fcmovnb
jecxz
push
test
enter
jmp
sub
and
aaa
jbe
lds
inc
hlt
inc
sub
ljmp
fmuls
mov
jge
sub
mov
dec
rolb
cmpsb
daa
xchg
icebp
inc
fs
out
loope
push
pop
lea
mov
shrl
addr16
and
repz
ja
call
out
int3
pop
les
out
jae
loopne
mov
clc
lcall
sbb
sarb
jo
vmovaps
pushf
in
mov
or
int
mov
or
cmp
xchg
and
dec
cmpsl
xchg
addr16
lods
icebp
jl
inc
mov
inc
loope
adc
rep
mov
adc
ret
jge
jo
inc
decb
frstor
lret
and
adc
mov
imul
xchg
cmp
fiaddl
ret
mov
js
daa
bound
fstps
cmp
jcxz
push
outsb
push
fcomps
jae
add
testl
sbbl
pushf
mov
outsl
adc
jp
and
je
add
xchg
push
popa
mov
adc
imul
insb
lcall
iret
icebp
mov
insl
insb
insb
loope
inc
insl
shll
lahf
adc
push
and
xchg
jl
xor
mov
mov
cmp
nop
or
add
pushf
jns
roll
cmp
je
fistps
movsl
or
mov
mov
test
xchg
lret
adc
loope
data16
xchg
orb
jb
mov
sub
into
adc
jno
xorb
js
test
aam
int
cmp
add
je
fs
push
pop
inc
dec
mov
movsb
lods
xchg
popf
test
aam
int
cmp
add
je
fs
push
pop
inc
dec
mov
movsb
sub
hlt
std
in
aam
int
mov
add
je
pusha
insl
push
pop
jne
cmpb
hlt
std
in
push
fldl
cmp
add
add
in
xchg
stos
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imulb
out
or
sbb
sbb
pop
jbe
mov
inc
lcall
push
sub
cmp
or
sbb
dec
xchg
stos
mov
inc
lcall
push
sub
cmp
or
sbb
dec
xchg
xchg
data16
cli
push
sahf
pop
scas
push
dec
movsl
outsb
mov
imulb
mov
sahf
mov
and
and
and
dec
in
xchg
and
adcb
fcmovu
mov
fwait
leave
sub
jno
lret
push
aas
insl
in
push
std
dec
jbe
cmp
push
inc
test
ljmp
mov
out
mov
imul
jbe
jbe
enter
push
xor
sti
or
out
push
test
out
lcall
and
test
mov
scas
faddp
xchg
or
outsl
dec
mov
or
stos
scas
mov
lcall
outsb
fisubrl
or
sbb
dec
xchg
stos
mov
inc
lcall
push
pushf
mov
mov
cmp
das
sub
hlt
push
xchg
push
dec
push
mov
xchg
mov
push
xchg
and
fs
pop
faddl
notb
jb
fs
orb
outsb
mov
cmpsb
jp
dec
xchg
stos
mov
inc
lcall
push
sub
cmp
or
sbb
dec
xchg
stos
mov
inc
lcall
push
sub
insl
clc
loop
insb
scas
or
cltd
and
mov
jle
rcll
mov
cmp
cmp
jmp
fcmovbe
mov
jp
or
xchg
mov
das
clc
js
sub
imul
daa
pop
adcl
data16
push
repnz
mov
mov
cmc
push
shll
mov
jg
add
and
pop
lods
mov
jge
push
cmp
sbb
inc
ret
stos
and
testl
or
movsl
sub
pop
pop
sbb
cmp
mov
mov
stc
fs
imul
pop
js
iret
mov
cmp
loopne
orb
jmp
dec
in
sub
and
idivb
jp
aaa
sbb
mov
inc
inc
sbb
push
and
xlat
cs
jle
sub
scas
dec
daa
adc
mov
and
dec
mov
mov
pop
lret
jae
bound
mov
adc
inc
dec
cld
stos
jb
into
pushf
arpl
adc
jbe
mov
xchg
mov
es
add
push
jmp
sahf
dec
shrb
mov
and
clc
cld
mov
pop
or
adc
xchg
bound
add
xchg
xchg
adc
das
rol
and
add
mov
out
shrl
call
sub
sahf
sub
bound
popa
pop
sarl
mov
sbb
fldcw
fistpll
pop
rolb
lds
imul
pop
push
jb
imul
stc
pusha
popf
jp
jb
aad
dec
dec
stos
add
and
scas
in
test
repnz
movsl
jmp
in
fwait
jae
fdiv
es
cmp
test
or
enter
push
lret
repz
cmpsb
imul
mov
cmp
push
push
sahf
jae
cwtl
leave
imul
imul
sbb
jle
mov
mov
inc
add
rcrb
gs
or
pop
call
or
pop
js
leave
dec
mov
xor
jno
outsb
mov
mov
cmp
mov
js
adc
aas
mov
mov
push
pop
sub
lods
mov
cli
dec
sbb
decl
mov
inc
cmpsl
xor
pusha
out
and
mov
mov
call
fidivrs
pop
je
lock
push
test
adc
or
and
jecxz
jp
sub
sub
inc
jnp
and
jo
xchg
clc
mov
outsb
scas
insb
xor
sahf
aas
in
into
stos
dec
dec
stos
loope
and
rol
cltd
cmp
clc
lahf
repnz
mov
out
sarl
inc
xor
jmp
cmp
push
cli
lods
pop
push
xchg
jmp
lret
ljmp
mov
scas
lds
inc
scas
cmpsb
sub
adc
jecxz
mov
cs
inc
jmp
add
push
cmc
imul
cmpsl
lock
arpl
outsl
add
push
lcall
jmp
adc
adc
push
and
sti
adc
orl
out
xor
les
mov
pop
negl
pop
sbb
pop
inc
stos
pusha
push
xchg
stos
les
cmc
fcmove
push
push
outsb
xchg
dec
add
push
or
push
ja
mov
pop
xchg
ljmp
test
cmp
ret
pushf
inc
aas
mov
insl
pop
add
int3
into
pop
mov
sahf
sahf
inc
mov
jg
adc
pop
aas
xchg
sub
lret
xor
negl
cmp
push
mov
push
outsl
inc
or
shll
dec
add
insb
jecxz
sbbl
xor
xor
mov
mov
stc
arpl
pop
inc
inc
jmp
out
lret
mov
pop
cmp
push
dec
dec
fsubs
pop
cwtl
xchg
subl
mov
sub
sub
mov
inc
je
pop
aad
iret
aas
jmp
sub
aad
mov
test
mov
xchg
pop
and
rcl
pop
cwtl
fcompl
inc
adc
fdivr
in
push
fdivl
push
add
fcmovnu
mov
dec
sbb
repnz
lret
lret
stos
jae
ja
out
jb
and
cmp
roll
ja
push
mov
sub
inc
pop
xor
jecxz
stos
scas
mov
add
insb
repnz
call
xlat
aas
mov
pop
addb
ja
test
sub
push
jmp
add
jns
xorb
fincstp
pop
iret
add
sti
outsb
add
cli
daa
jae
mov
pop
mov
inc
cmp
fdivp
ja
insl
outsl
ja
cmp
fiaddl
notl
addr16
pop
aam
fidivs
lods
mov
pop
mov
bound
jbe
int3
pcmpeqw
lock
stos
clc
jae
pop
mov
dec
mov
fwait
outsl
sti
xor
loopne
mov
xchg
pop
adc
push
dec
test
outsb
lret
loope
lock
push
and
leave
cmp
and
mov
testl
jo
jmp
pop
out
cmp
ljmp
rclb
ficomps
ficoms
dec
and
clc
je
or
mov
sbb
ljmp
add
aam
push
inc
push
dec
aad
jb
xor
cmp
push
jb
out
out
jle
insl
mov
aas
rolb
popf
cmp
inc
xlat
and
cld
add
lcall
cli
outsb
xlat
adc
movsl
scas
bound
outsb
cmp
enter
movsb
cmp
cmpsl
mov
sti
movsl
iret
cmp
hlt
pop
sub
push
lods
leave
push
sub
shll
xchg
add
inc
sbbl
lea
adc
adc
sbb
xchg
push
lret
pop
sub
mov
hlt
cmc
pusha
jae
mov
pop
negb
cli
int3
insl
jle
sbb
lods
mov
push
inc
lds
insl
push
sbb
mov
cmc
cmpsb
mov
and
xchg
xor
and
loop
inc
in
into
and
cmp
xor
jg
ljmp
out
lret
dec
popf
inc
cltd
nop
jl
out
cmpsb
add
cmpb
mov
repnz
xchg
cmp
lock
stc
push
fwait
mov
pop
std
or
xorb
popf
in
xor
jle
daa
pop
loop
shll
cmp
orb
lock
sbb
cs
data16
jbe
ret
lods
mov
icebp
stc
jne
inc
sbb
sub
in
fsubrp
insl
mov
sbb
es
loopne
fs
imul
or
movsb
jle
test
jns
jecxz
and
xchg
push
call
push
pusha
sbb
bound
popa
jbe
push
in
pop
test
adc
fwait
stos
inc
stc
sbb
pusha
aas
hlt
and
xchg
jg
jg
push
inc
jmp
adc
lods
bound
push
push
jns
loopne
xorl
mov
sub
cmc
cmp
push
adc
mov
mov
mov
cmp
push
or
pop
fsubrl
je
xor
sub
test
pop
push
push
out
fwait
aam
inc
aas
jb
xchg
mov
pop
adc
mov
je,pn
dec
mov
ss
rcrl
push
add
les
jp
sub
cli
xchg
fildll
test
and
pop
sarl
cmp
lcall
ja
test
stos
dec
cmp
imull
daa
pusha
mov
int
call
mov
jle
pop
into
clc
divl
lret
aas
add
mov
mov
dec
add
frstor
aaa
sub
pop
mov
pop
pop
mov
sbb
das
outsl
inc
ds
je
xor
cmpsb
xchg
bound
mov
mov
pop
mov
arpl
lods
cli
jo
fisubl
jl
inc
out
pop
lahf
sbb
add
push
mov
lret
adc
xor
inc
shrl
or
jnp
jmp
ret
addl
mov
sub
sub
inc
lock
adc
fmull
aam
outsl
jo
sub
pop
outsl
subl
loop
repnz
and
cmpsb
repnz
negb
sahf
ss
mov
in
cmp
dec
cmpsl
cmp
mov
xchg
and
in
je
xchg
push
loopne
dec
cmp
int3
cmp
mov
mov
push
xlat
jg
aam
or
cmpsl
jecxz
pop
mov
mov
fildll
mov
inc
push
subb
xchg
xchg
stos
ficompl
cmp
sbb
aam
mov
cltd
jg
inc
sbb
xchg
push
shrl
sbb
jecxz
lcall
sub
mov
loop
movsl
jmp
divps
adc
sbb
adc
int
loope
xchg
xor
and
add
push
mov
icebp
push
ljmp
enter
cmp
lcall
lods
bound
mov
dec
inc
sti
or
inc
add
jg
clc
fstl
lock
rolb
cmp
mov
cwtl
ss
int3
mov
out
push
stos
add
push
je
popa
mov
sarl
cs
outsl
in
inc
mov
lahf
mov
push
enter
das
mov
inc
jl
icebp
jae
xorl
jb
pop
mov
mov
ss
add
adc
jmp
sahf
sub
aad
sub
pop
shrb
add
fwait
aad
inc
gs
sub
push
dec
jns
stc
incb
arpl
mov
push
push
movsb
xchg
lea
push
add
mov
push
popa
ljmp
dec
fldt
xchg
and
mov
in
xor
mov
nop
jns
mov
icebp
std
cli
mov
shlb
cmp
in
inc
in
pop
aam
pop
sti
cwtl
pop
jg
iret
fscale
iret
imul
scas
movsb
lret
add
pushf
sub
out
mov
pop
arpl
xchg
mov
ret
pop
imul
test
pop
jmp
dec
cmpsl
xor
mov
push
push
mov
mov
push
adc
jne
data16
dec
push
pop
xchg
fidivs
mov
jmp
mov
test
ss
mov
dec
lahf
sbb
mov
daa
fwait
sarl
mov
mov
cmpb
xor
inc
inc
mov
sub
jmp
aas
xchg
incl
mov
mov
mov
xchg
mov
xor
aaa
cmpsl
sahf
pop
sub
jne
addr16
dec
bound
pop
or
mov
dec
inc
cmpsl
push
imul
jnp
daa
xchg
loope
std
add
sbb
divb
push
cmp
lret
into
hlt
push
ja
sub
jo
ret
js
cmpsl
out
push
lods
jle
lds
inc
nop
mov
lds
fs
ret
mov
sub
sbb
push
pop
mov
mov
inc
pop
and
in
xchg
subl
cmc
pop
in
outsb
fs
push
cmp
ljmp
stos
sbb
cli
adc
lds
add
push
xor
xor
inc
insb
movsl
xor
sub
aas
or
push
fisttpl
jae
sub
loop
lds
lock
xor
in
or
jbe
xchg
outsl
imul
or
lock
xorb
cmp
xor
sub
mov
fldl
popf
push
jp
ret
mov
fildll
xchg
sub
or
movsb
loopne
push
pop
insb
fcoml
push
int
jbe
cmp
stos
loopne
adc
insl
xor
dec
mov
fisubl
mov
sbbb
fwait
xor
inc
fnstsw
rolb
jmp
filds
dec
movsl
lahf
stos
inc
inc
mov
leave
inc
in
mov
loopne
repnz
sbb
mov
adcb
xor
xor
push
popa
push
push
pop
shl
inc
mov
mov
lea
push
insb
lcall
adc
ljmp
fbld
cmp
test
push
stos
xchg
rcr
in
pop
sbb
pushf
std
lods
jg
ss
test
hlt
adc
push
adc
mov
and
cmpsl
int
cwtl
lock
xchg
outsb
adc
xlat
lahf
cmp
inc
loop
daa
jnp
daa
jae
fimuls
sbb
sub
sbb
nop
jle
cmpsb
pop
out
add
pop
cmp
sahf
mov
dec
cmp
lret
add
jnp
jmp
leave
dec
adc
pop
cmp
sbb
shrl
shlb
loope
mov
insb
call
test
mov
jnp
xor
adc
fs
lcall
icebp
mov
jg
mov
lret
dec
jp
aaa
shr
jp
push
xchg
dec
data16
popa
ret
gs
sti
int3
sub
les
iret
mov
orb
fistpl
push
aam
sbb
int3
inc
or
imul
loopne
inc
cmp
jb
adc
inc
dec
mov
or
insl
jb
add
and
and
in
mov
aaa
je
sub
xchg
push
mov
sub
in
push
out
sub
and
add
push
adc
ljmp
cmp
dec
mov
sbb
imul
push
cmp
xchg
repnz
rclb
mov
push
clc
jg
jp
or
inc
lea
in
inc
xchg
lds
add
in
sbb
sbb
mov
push
dec
mov
xchg
sbb
rcrb
cmp
jae
mov
push
mov
add
push
mov
mov
add
adc
test
adc
fsubs
mov
subb
rcll
adc
js
pushf
in
xor
cmp
mov
subl
sahf
mov
sahf
cmpl
push
out
pop
lds
or
and
mov
jecxz
mov
and
and
nop
cmp
lock
mov
cltd
dec
sub
dec
rolb
adc
sbb
dec
loopne
fdivr
sub
sub
pushf
jecxz
inc
mov
rcl
icebp
adc
sub
lcall
pop
lds
xchg
mov
outsl
push
pushf
call
std
xchg
push
dec
pop
inc
sti
decl
addl
iret
out
dec
add
xchg
push
push
sub
mov
ret
cmp
gs
xchg
punpckhbw
mov
sbb
inc
add
xor
and
adc
add
shr
mov
mov
mov
or
dec
and
mov
icebp
inc
sbb
push
inc
xchg
pop
sub
popa
adc
negl
es
loopne
pop
and
loop
clc
push
xor
jmp
popa
adc
mov
sbb
dec
add
out
mov
pushf
out
push
ficoml
dec
out
mov
aaa
cmp
gs
jmp
sub
add
sar
push
or
dec
ror
pop
sbb
ret
shrb
adc
lods
test
pop
jns
xor
lock
sahf
out
and
mov
subb
or
dec
ret
aad
mov
xchg
inc
cmp
ret
pop
mov
adc
vpcomuq
mov
cmp
pop
push
mov
mov
sub
clc
stos
push
jecxz
lcall
mov
adc
idiv
aaa
into
push
roll
pop
xchg
clc
push
scas
mov
or
jmp
add
subl
xor
aas
mov
adc
add
jge
xchg
dec
cltd
pop
push
push
stos
pop
push
in
push
filds
les
pop
push
push
pop
ss
les
in
lret
pop
add
movsb
ret
in
ljmp
repz
adc
xor
lahf
or
aam
loop
xor
imul
fcom
clc
cmp
adc
sbb
lret
rcrl
ss
mov
lahf
jne
mov
cld
loope
xor
and
sub
les
addb
mov
push
mov
sahf
mov
loope
in
js
mov
adc
sbb
pusha
roll
inc
das
mov
mov
gs
sbb
jmp
cs
hlt
cmp
push
cvttps2pi
mov
cli
or
int
mov
insl
pop
xchg
xlat
lret
cli
shr
scas
add
xchg
inc
mov
sbb
sbb
pop
dec
push
rolb
xor
jmp
out
and
and
xchg
in
imul
inc
pop
mov
xlat
cmpsl
cmc
push
movsb
jo
mul
jbe
mov
dec
cmp
fdivl
call
loop
cs
inc
in
ss
inc
inc
inc
mov
in
pop
cmp
and
xchg
or
adc
sub
and
loope
xchg
cmp
sbb
xchg
clc
add
sar
int3
sti
mov
pop
xlat
stc
frstor
stos
test
sub
outsl
and
add
push
push
and
fcompl
push
mov
dec
das
mov
cmp
mulb
sub
negb
push
into
and
xchg
ljmp
lcall
inc
test
cmp
popa
jbe
mov
mov
cmpsl
pop
or
add
cmp
outsl
fwait
cli
ljmp
xchg
adc
into
inc
or
push
dec
int3
lret
je
mov
mov
testl
mov
fsubl
mov
adc
push
dec
push
clc
jae
sbb
js
ret
fwait
aaa
ret
aas
mov
movsl
cmp
int3
mov
int3
fsubl
jmp
std
fwait
xlat
fs
push
out
cmp
sti
stos
mov
pop
ret
dec
cmp
and
add
dec
push
rep
stos
push
and
aas
into
bound
add
dec
pop
adc
pop
or
adc
stos
lods
sbb
fadd
push
cmp
subl
lahf
jne
pop
or
cmp
shrl
fldl
mov
out
dec
pop
xor
xchg
cmc
fdivr
fldt
sub
xor
mov
fs
stos
inc
fisttpll
dec
mov
loop
imul
call
addl
and
push
pop
xor
pop
mov
stos
push
and
cltd
or
lea
push
xor
mov
iret
push
xchg
add
stc
adc
jge
testb
out
jecxz
movl
loope
push
dec
into
pop
xchg
mov
iret
and
test
mov
loope
fistps
cmp
neg
or
rcr
mov
mov
les
or
mov
xor
jmp
test
add
aas
cmp
add
sbb
push
cmp
dec
lret
and
mov
mov
aam
test
xor
xchg
ret
xchg
mov
or
sbb
push
jmp
push
iret
loop
pop
cltd
mov
xor
adc
stos
mov
lret
andb
es
ret
in
mov
ret
js
push
ret
sahf
jecxz
out
mov
pop
lods
and
test
xchg
in
outsb
call
mov
ja
hlt
inc
mov
cmp
test
xor
inc
and
push
pop
mov
push
popf
out
jnp
xchg
mov
jl
mov
popf
add
iret
dec
lds
fidivrs
push
pop
or
push
push
inc
pop
pop
cmp
loop
jle
jl
mov
jge
scas
dec
arpl
repnz
test
xor
mov
mov
jne
cltd
jno
xchg
inc
xchg
jle
push
fildll
ror
adc
dec
xchg
daa
adcb
adc
loope
mov
xchg
std
je
loopne
cltd
ss
icebp
jno
leave
loopne
or
pop
mov
xor
sahf
jecxz
iret
xchg
jmp
jns
loopne
mov
xchg
fyl2x
xor
mov
sahf
test
and
cmpsl
add
mov
and
in
sub
mov
pop
xchg
jp
mov
mov
jnp
mov
or
lods
dec
jp
dec
cld
jae
and
mov
adc
or
add
xchg
add
or
or
xor
push
sbb
mov
aas
adc
addr16
rolb
pop
iret
int3
scas
clc
les
imul
dec
scas
lds
or
mov
jecxz
dec
mov
out
mov
jo
decl
rolb
test
sub
jl
mov
test
add
mov
mov
sub
icebp
adc
hlt
mov
xchg
dec
mov
push
push
xor
fwait
sbb
scas
inc
out
xchg
push
stos
idivl
pushf
pop
xor
cld
push
or
or
leave
push
imul
mov
call
test
add
cwtl
jp
push
mov
mov
push
push
add
aam
movsl
cmp
fiadds
sub
in
sub
orl
or
sbb
dec
xchg
stos
mov
inc
lcall
push
sub
cmp
or
sbb
dec
xchg
stos
mov
inc
lcall
push
cs
or
sbb
dec
xchg
stos
mov
inc
lcall
push
sub
cmp
or
push
mov
cmpsb
cli
xchg
lret
jbe
data16
mov
inc
bound
and
std
push
in
xchg
cli
ljmp
testl
sbb
xchg
sub
addr16
push
in
inc
popf
aaa
lea
pop
testl
sbb
xlat
sub
addr16
in
inc
popf
or
pop
pop
sub
or
loopne
into
jle
inc
xchg
and
push
or
fists
adc
xchg
aad
push
xor
xor
or
fildl
inc
inc
loope
shlb
mov
imul
bound
fs
pop
ja
repnz
jp
bound
call
cmpsl
mov
mov
ja
inc
ljmp
in
lods
clc
lods
or
mov
loop
cmp
or
aam
bound
js
adc
bound
lods
bound
es
pop
movsb
inc
div
adc
dec
in
cmpsb
ret
js
mov
fcmovb
inc
adc
jo
movsb
sbb
sti
sbb
or
stc
mov
pop
cli
xchg
das
add
ja
xchg
std
shr
dec
popf
aaa
lea
mov
jno
and
insl
sbb
xchg
sub
addr16
inc
loop
sarb
bound
mov
dec
rcrl
pop
out
xor
clc
pop
adc
jns
imul
sub
ljmp
in
mov
pop
mov
push
lea
mov
testl
sbb
xchg
sub
addr16
push
in
inc
popf
aaa
lea
mov
testl
sbb
xchg
sub
mov
hlt
xchg
imul
add
dec
xor
sahf
popl
add
aad
mov
add
in
lea
jg
xor
jecxz
adc
inc
xor
cli
outsb
test
push
cmp
sub
in
icebp
das
mov
and
decb
out
mov
mov
cmp
test
and
mov
add
inc
dec
mov
or
dec
push
aad
inc
or
movsl
outsl
imul
adc
cld
ret
jmp
dec
and
sbb
dec
mov
andl
mov
adc
jmp
aad
and
faddl
push
lahf
inc
divb
aam
xchg
mov
mov
fs
pop
leave
int
cld
mov
lret
cli
lea
in
insb
mov
sbb
or
clc
mov
stos
jmp
iret
mov
bound
mov
fsubrs
int3
mov
outsb
gs
jnp
sbb
inc
sbb
and
inc
push
jecxz
lret
or
es
push
mov
lahf
xchg
jno
xchg
pop
shll
mov
dec
mov
lcall
sub
dec
adc
leave
mov
fcoml
mov
and
xchg
push
lahf
imul
gs
lahf
stos
decl
test
pop
and
or
cmp
sbb
pop
xchg
negb
xchg
lea
jb
sbbl
sub
lret
mov
mov
cwtl
pop
xor
in
sbb
push
scas
mov
mov
dec
push
sub
dec
and
inc
pop
outsl
inc
dec
pop
xchg
push
lods
add
sub
cwtl
int3
daa
inc
gs
les
sub
and
xlat
cmc
push
sub
pop
mov
dec
test
in
mov
mov
xor
lret
inc
adc
dec
or
cs
lret
push
mov
pop
outsb
fmuls
add
xor
pushaw
jl
push
popa
lea
test
jp
cwtl
cmp
les
stc
dec
inc
cli
add
std
test
jmp
dec
mov
push
mov
inc
ds
jge
push
in
clc
sub
shll
or
out
dec
push
scas
aam
xchg
jb
jmp
in
cltd
pop
aas
gs
outsl
add
fnsave
adc
gs
clc
cld
jb
mov
lods
and
jle
xor
imul
xchg
rorl
iret
int3
mov
or
scas
scas
lea
xchg
push
getsec
out
push
jle
jo
pop
sub
cs
pop
call
pop
iret
lea
loopne
jb
cmp
mov
repnz
dec
dec
fucom
lock
in
aas
mov
push
shll
xor
mov
jp
adcl
push
ja
loopne
aam
xchg
nop
stos
repnz
jae
xchg
ret
and
mov
mov
outsl
rcr
push
icebp
xchg
mov
inc
pop
test
testb
and
sarb
mov
out
mov
fstl
out
inc
adc
je
adc
push
movsl
adc
in
and
rol
inc
movsl
cmp
and
xchg
push
hlt
xchg
sub
shlb
hlt
pop
movsb
jno
aaa
sahf
lret
movsb
cmp
cmpsl
and
subl
daa
xchg
jmp
and
loop
and
loop
ficoms
or
clc
jecxz
ds
xlat
adcl
popf
gs
mov
jnp
pop
cmp
jb
fadd
dec
fsubl
cmp
in
insl
push
fwait
jp
hlt
insl
ss
adc
pop
mov
xchg
inc
push
popa
ljmp
sbb
xlat
push
leave
jmp
dec
mov
rcrl
dec
imul
xor
or
fnstenv
shl
test
test
ss
sbb
inc
jmp
mov
hlt
xchg
pop
jne
pop
bound
mov
dec
pop
stos
sub
xor
test
jg
in
jb
jb
or
cmpsb
cmp
rcll
jl
fsubrs
stc
xchg
repnz
ljmp
dec
dec
adc
cmp
mov
mov
xor
or
ficompl
xchg
mov
cld
sbb
insl
dec
ror
cmp
jmp
outsl
push
lret
rcrb
or
cmp
sub
icebp
outsb
pushf
mov
fpatan
push
mov
jecxz
mov
sub
mov
dec
jge
mov
mov
test
je
rorb
data16
lret
jmp
lahf
insl
icebp
fcoms
incb
aad
xor
xchg
xchg
xchg
jb
rcrb
cmp
hlt
cmc
ss
ss
add
mov
or
mov
adc
pop
mov
sbb
les
adcb
sbb
push
xchg
mov
push
dec
adc
adc
ret
jbe
pushl
pop
cmp
sub
mov
in
sbb
inc
push
sahf
xchg
and
xchg
movsb
mov
cld
inc
dec
fcoml
push
out
lock
and
pop
push
hlt
xchg
inc
cld
enter
lds
cltd
ja
daa
mov
jp
dec
inc
and
fistps
outsb
cmp
inc
loopne
push
les
popa
fdivl
insl
sbb
cmpb
int
pop
int
inc
ljmp
push
and
adc
mov
mov
mov
inc
scas
cmp
push
xchg
xor
and
and
data16
xchg
rorb
mov
cmpsl
inc
push
out
jmp
cld
push
cmp
and
pop
shrl
int
icebp
movsl
push
cmovs
cmpsb
and
lock
lds
pop
cmp
dec
nop
push
adc
xchg
cwtl
dec
mov
mov
cltd
sbb
cmp
cmp
adc
inc
fmuls
movsb
xorb
outsb
and
mov
add
out
jae
sbb
call
xor
or
scas
add
and
sarb
subl
inc
aam
and
push
xor
mov
cltd
sbb
std
xor
xor
nop
push
add
jnp
lret
add
fs
int
popa
dec
pop
xchg
imulb
xchg
scas
pop
push
cli
jecxz
loopne
xorb
xchg
cmpsl
pop
jg
push
cwtl
fcoml
push
fs
xor
jle
frstor
dec
jl
aas
shll
mov
lcall
sub
cli
outsl
movsb
in
enter
mov
stc
outsb
and
orl
adc
cld
psrld
add
mov
sbb
orl
jecxz
mov
ficoml
sbb
sbb
jecxz
stos
in
adc
fs
push
into
inc
test
mov
xor
cwtl
mov
iret
inc
dec
aad
int
test
in
fildl
mov
ret
mov
scas
mov
icebp
cli
mov
ja
mov
scas
cmp
push
shl
sbb
or
stos
ret
test
dec
add
xchg
or
mov
jl
mov
pop
push
pop
and
jbe
stos
dec
push
in
xchg
or
push
jo
mov
xchg
ja
aas
inc
ds
cmp
jecxz
sub
pop
sbb
fwait
pop
leave
mov
loopne
mov
push
or
or
pop
test
les
test
fsubrs
jb
popa
fstpt
loop
mov
aam
jnp
fidivl
out
push
jp
or
subl
mov
or
in
xchg
popa
push
mov
cmp
add
sahf
jnp
cmpsl
fadd
stos
mov
movsl
lock
pop
insb
mov
jmp
dec
push
dec
or
push
icebp
mov
cld
nop
dec
inc
in
aam
jecxz
in
mov
push
mov
test
sub
xor
ret
dec
sarb
stos
icebp
mov
inc
stos
xor
fdivrl
into
mov
push
pop
and
cmp
or
outsb
pop
pop
adc
scas
dec
cmc
adc
pushf
loope
cltd
pop
fdivl
jmp
xchg
popa
sbb
dec
jecxz
ss
ret
mov
or
xor
shlb
insb
rcl
cmpsl
dec
jmp
inc
push
cmp
mov
xchg
dec
mov
dec
test
lods
or
ljmp
hlt
xor
dec
enter
mov
outsb
xchg
stos
sub
lds
cmpl
inc
jae
shrl
arpl
add
dec
lret
add
mov
mov
jo
add
scas
into
insb
inc
sub
mov
xchg
int3
add
or
movl
je
dec
sahf
notb
mov
or
pushf
pop
mov
lcall
mov
pushf
and
in
cwtl
mov
cmp
fnsave
fstpt
dec
scas
aaa
setge
push
jmp
cmpsl
mov
gs
push
test
add
mov
push
push
cmp
dec
cld
jae
mov
cltd
dec
dec
sahf
pop
inc
shrb
fsubrs
dec
arpl
sub
mov
mov
loop
or
cmp
lock
mov
ss
xor
xchg
out
in
push
jne
les
loopne
jmp
or
addb
adc
push
in
mov
add
xchg
or
ss
insl
into
arpl
int
push
lods
fldt
faddl
push
push
fs
xlat
and
push
mov
scas
test
jo
pop
jnp
fs
mov
push
mov
push
cmp
mov
mov
test
repz
loop
dec
xor
mov
mov
pop
popf
adc
repnz
bound
or
iret
and
mov
scas
mov
jo
xor
ficoms
decl
xchg
xorb
fsubr
adc
pop
adc
xchg
bound
pop
mov
cmp
adcb
insb
pusha
jo
sub
sub
pop
lcall
xchg
mov
cs
mov
negb
and
outsl
mov
and
fdivrl
sub
cmpl
mov
xchg
xor
add
int
mov
pusha
pop
into
rorl
ss
jo
mov
out
repz
cmc
test
sbb
lock
aas
sbb
sub
and
xorb
dec
pop
push
dec
jo
movb
ret
push
mov
lahf
out
stos
jnp
movsb
movsl
mov
mov
push
sarl
lret
xchg
and
mov
push
out
iret
lea
jle
lcall
jl
arpl
imul
and
ds
ret
cltd
mov
call
les
mov
mov
dec
and
mov
pop
mov
inc
mov
or
adc
idivl
lods
adc
jb
and
gs
fstl
divb
sub
mov
stc
aas
aaa
xor
cmpsl
xchg
adc
jl
jb
js
push
jnp
lret
rcl
push
push
adc
movsl
jecxz
es
fnsave
loopne
xchg
adc
pop
cmc
in
shr
incb
jg
pop
scas
cmp
xor
jnp
or
adc
cmp
and
dec
js
ljmp
push
pop
dec
lcall
mov
mov
call
testb
sbb
xlat
in
jno
sub
jecxz
sbb
iret
or
mov
dec
mov
mov
xchg
dec
jno
movsl
jp
cwtl
dec
in
bnd
xchg
xchg
in
outsb
clc
inc
sub
sbb
jp
rcl
cld
fsubs
bound
add
sub
dec
cli
movsb
or
or
jae
scas
lret
scas
inc
push
inc
out
or
cmpl
sbb
adc
repnz
cltd
xchg
mov
out
andl
out
pop
xchg
repnz
sar
test
pop
dec
mov
insl
jge
popf
sbb
pop
rcll
rcl
mov
push
in
fistps
or
sahf
call
and
orb
or
sbb
in
fisubl
sub
cltd
xlat
int3
xchg
hlt
push
mov
shlb
pop
adc
mov
adc
xchg
push
je
sub
dec
scas
jbe
inc
xlat
sbb
mov
add
cmp
fnstenv
fcom
adc
xchg
mov
lcall
sbb
jnp
std
dec
add
pop
in
adcb
aam
pop
sub
cli
xor
xchg
stc
mov
inc
lock
mov
in
scas
fsubrl
pop
push
jge
or
xchg
loopne
rcrb
cli
adc
sahf
cmpsl
test
pushf
aaa
or
fcmovnb
arpl
ret
pop
adc
and
inc
dec
mov
repnz
loope
hlt
jmp
lcall
aas
test
syscall
enter
fwait
mov
add
and
push
dec
mov
pop
cmpsl
xorl
ja
ret
repz
and
sbb
lcall
add
pop
insl
cmp
adc
pop
aam
nop
test
adc
int3
dec
xor
jbe
mov
sub
lret
rcr
sub
mov
movb
mov
out
into
mov
and
orb
adc
dec
jle
mov
jge
out
mov
into
add
mov
add
inc
pop
lea
cmpb
mov
inc
lret
xchg
andl
mov
in
add
movsl
xor
cmp
xor
xor
les
addb
jg
xor
int3
sbb
jbe
xchg
xchg
mov
ds
cmp
mov
jb
push
stos
loopne
mov
iret
cli
jne
add
xchg
xor
rorl
repz
mov
and
lret
pop
jnp
test
insl
nop
pop
push
jmp
push
out
jne
lds
hlt
adc
xor
repz
mov
jle
jg
ds
xchg
popa
lods
xor
shll
push
jb
aam
fs
mov
jp
out
mov
subl
inc
or
sbb
arpl
les
mov
pop
test
out
add
lret
xor
cmpsw
fildll
or
repz
fsub
outsl
in
shrb
int
mov
and
movsb
jno
and
push
test
cmpsl
ja
or
xchg
xchg
lods
cmpsl
xchg
jmp
dec
xchg
aad
xchg
pop
pop
pop
lods
or
sti
iret
mov
xchg
out
inc
in
nop
xchg
and
mov
out
xchg
cmpsb
arpl
sti
ret
je
loope
lahf
pushf
mov
fs
fsub
jnp
pop
sub
inc
pushf
xchg
dec
push
xchg
enter
push
dec
cmp
jne
movsb
mov
cmpsb
inc
stc
mov
add
fcmovnb
xor
dec
mov
aam
fdivl
push
rorl
jne
fisubs
sahf
divl
push
push
xchg
sbb
out
mov
jo
clc
mov
rorb
lahf
outsl
inc
push
into
fisttpll
mov
cmpsl
cli
xchg
xor
cltd
adcl
and
inc
inc
xchg
sub
inc
xchg
pop
cmp
std
or
jae
loopne
adc
jne
out
fists
imul
sbb
push
lcall
pop
sbb
push
push
xchg
xor
cltd
test
idivl
jnp
mov
inc
sub
mov
cwtl
mov
inc
enter
and
or
mov
xor
xchg
xchg
lcall
adc
repnz
add
imul
mov
or
mov
outsl
sbb
inc
movsb
lcall
add
or
not
push
sub
bound
out
jbe
ljmp
add
jl
std
xchg
pop
dec
jmp
leave
pop
xchg
idivl
inc
xchg
pop
push
and
aaa
ret
xor
or
daa
ds
cli
std
mov
cli
dec
dec
aas
push
mov
lret
call
mov
push
cltd
fidivl
sbb
fstl
ss
cli
movsb
push
pop
or
xchg
mov
cmp
jle
mov
call
inc
jns
shl
stos
jb
xchg
mov
sti
cmp
adc
hlt
daa
clc
mov
jns
adc
sbb
push
or
imul
adc
out
pop
mov
scas
pushf
push
sub
aas
rcll
dec
adc
mov
inc
cmpsl
pop
sbb
inc
fistl
scas
or
pop
in
push
pop
decb
test
jbe
pushf
int
call
pop
insb
in
sahf
in
mov
sub
sub
pop
testb
xchg
fisubrl
ja
lea
ret
adc
fmul
popa
xchg
add
add
out
fstps
mov
sub
call
and
popa
xchg
mov
ret
push
add
sub
mov
icebp
sub
inc
dec
mov
inc
and
clc
icebp
xchg
sub
xchg
mov
vrsqrtps
pushf
outsl
stc
popf
sub
mov
fisubl
dec
mov
clc
mov
dec
jg
dec
fldt
dec
ret
fcmovne
les
pop
adc
xchg
test
icebp
mov
jo
aas
nop
cs
adc
mov
aaa
movsb
pop
cmp
movl
ret
ficoms
mov
xor
push
xor
ja
out
push
sbbl
jns
jno
jge
xor
mov
iret
sar
je
adc
movsb
fimull
adc
sbb
lret
mov
cli
xchg
mov
mov
icebp
jle
push
out
mov
xchg
sub
lods
test
faddp
cwtl
sbbl
inc
lahf
mov
add
rcll
fsub
cmc
js
adc
jnp
into
ss
movsb
in
hlt
adc
iret
clc
dec
mov
int3
sti
add
pop
mov
and
arpl
shlb
lock
mov
sbb
movsb
jg
jg
dec
repz
mov
fcmovu
jmp
add
dec
lret
jl
outsl
push
shll
mov
jg
or
jp
xchg
inc
adc
mov
cmp
jo
inc
movsb
pop
cld
sub
cmp
or
push
mov
mov
fs
out
or
sub
mov
shl
mov
shl
adc
in
scas
pop
cmpsb
sub
lahf
mov
push
aam
sbb
push
xchg
dec
push
cmc
push
aam
adc
rcrb
xor
mov
and
insl
xchg
mov
jmp
not
mov
cmc
and
mov
xor
lar
adc
jns
cmp
icebp
lods
movsb
mov
jmp
cmp
std
mov
fwait
aaa
fcoms
leave
mov
adcl
and
out
ss
inc
pop
xor
and
mov
adc
outsl
jle
xchg
sbb
push
mov
js
lods
inc
xor
sti
lods
push
adc
mov
add
jge
cmpb
leave
nop
testl
popf
ljmp
mov
sub
mov
loope
ja
jnp
stos
mov
int
or
adc
test
cwtl
pop
lods
loop
xchg
adcl
mov
sbb
inc
jae
scas
sahf
xchg
xor
inc
leave
cmp
mov
scas
jo
lods
shrl
je
mov
repnz
neg
cmp
mov
aad
hlt
push
pop
jae
dec
pop
xor
pop
cmp
lret
cwtl
shlb
cltd
cmp
outsl
sbb
xor
sub
pop
xor
mov
xor
mov
pop
arpl
test
stos
mov
enter
popa
push
loope
cmc
xchg
and
cmp
clc
loop
inc
in
and
in
and
mov
add
xchg
pushf
sub
lds
in
add
add
jne
ja
inc
mov
outsl
fnstsw
enter
sub
pusha
rcll
sub
or
inc
arpl
aaa
test
fldl
xchg
and
rorb
cmp
and
cmc
mov
stos
in
addb
or
shlb
sub
inc
je
add
mov
cmp
xchg
mov
dec
daa
dec
jo
fcomps
aaa
jl
sbb
out
mov
imul
xchg
adcl
mov
outsl
dec
xchg
or
lret
hlt
adc
mov
pop
ret
mov
mov
fwait
push
aam
adc
jns
arpl
jbe
loop
jmp
or
sahf
idivb
cmp
xchg
push
sbb
aas
loop
ret
or
gs
shr
lock
inc
pop
sub
mov
jmp
add
or
or
lahf
xor
mov
into
pop
jae
gs
jb
fsubs
out
and
lods
movl
int3
pop
inc
call
lcall
cmp
sub
int
sbb
insl
fs
and
ljmp
in
test
cwtl
mov
test
sahf
inc
shl
jp
and
nop
cmpsb
imul
fwait
pop
out
cmp
mov
shrb
shr
mov
cli
sbb
dec
pop
mov
shrb
sar
xor
cmp
daa
popf
js
xor
out
jle
pop
sbb
fistpl
pop
inc
movsb
mov
mov
das
test
fcoml
cmp
jmp
test
push
sbb
push
adc
push
inc
dec
ficomps
cmp
cs
and
cwtl
popf
xchg
jl
sub
mov
popf
mov
and
mov
lods
jne
je
inc
sub
jbe
into
adc
ret
inc
popf
aaa
lea
mov
testl
sbb
xchg
sub
addr16
push
in
inc
popf
aaa
lea
mov
testl
sbb
xchg
sub
das
std
das
in
inc
popf
aaa
mov
pop
das
dec
out
xlat
insb
sbb
mov
xchg
ja
addr16
push
in
inc
popf
aaa
lea
cmp
or
mov
aas
test
push
daa
test
fadds
enter
leave
cmp
cmpsb
arpl
cmp
or
clc
daa
call
ja
addr16
cwtl
inc
cmpsb
mov
cmpsl
push
aaa
push
out
xlat
sbb
or
pop
daa
cs
inc
pop
mov
push
xchg
inc
mov
sti
cmp
dec
mov
mov
imul
sbb
xchg
push
sbb
mov
mov
inc
jg
lods
sub
clc
aaa
mov
mov
xchg
push
sub
dec
inc
addr16
das
mov
xorl
fsubrl
shll
pop
inc
mov
lret
lcall
clc
daa
call
push
lods
jb
rcrb
add
imul
bnd
cs
adc
mov
aam
add
icebp
aas
adc
sbb
lret
pop
aam
mov
mov
xchg
pop
inc
mov
sub
push
push
push
xchg
hlt
inc
sti
je
enter
enter
test
cwtl
inc
sbb
pop
xchg
out
xlat
add
cmp
push
xchg
outsb
movsb
ja
adc
iret
mov
ret
std
ljmp
idivb
inc
mov
andl
stos
imul
adc
sbb
divb
sub
mov
or
imul
inc
mov
pop
xchg
cmp
sub
sbb
or
clc
daa
call
ja
addr16
cwtl
inc
mov
pop
xchg
cmp
sub
sbb
or
clc
add
mov
mov
shlb
adc
xchg
xchg
pop
inc
int3
ljmp
pop
pop
dec
add
and
loop
dec
das
movsb
cmp
aas
adc
mov
pop
arpl
cli
aas
icebp
mov
push
outsb
cli
xchg
or
nop
fldenv
mov
jne
and
clc
in
xor
cmp
in
push
leave
ret
mov
das
in
mov
sahf
push
add
xchg
mov
lret
pop
push
mov
xor
or
daa
cwtl
loop
js
popa
mov
std
fmuls
cmc
inc
ss
jmp
das
xor
mov
enter
sti
scas
aas
nop
dec
push
jbe
adc
cmpsb
fwait
mov
mov
outsl
mov
ret
repz
jle
mov
or
sbb
dec
cmp
aaa
inc
cmp
and
jl
addb
inc
test
ds
test
xor
or
iret
push
pop
add
sub
leave
test
sti
and
vminss
add
inc
out
outsb
pop
push
xor
mov
push
stos
les
aam
jbe
mov
pusha
daa
mov
lock
mov
pop
pusha
lods
fiadds
in
mov
dec
rorb
mov
cs
or
add
xchg
mulps
push
or
cmpsb
lret
sbb
fisubrl
xchg
ss
gs
xchg
cmp
leave
mov
pop
push
rcrb
sar
mov
dec
add
iret
sub
iret
test
popf
and
mov
sbb
rclb
divb
orb
cmp
stos
cmp
es
divb
adc
sarb
ja
mov
xorb
in
call
mov
mov
stos
loopne
jecxz
jg,pn
je
xor
sbb
fistps
and
sub
push
push
xchg
loope
inc
xchg
xlat
jb
dec
and
cmp
push
shrb
xor
jp
mov
mov
in
sbb
push
pop
js
xor
push
and
das
cmp
mov
dec
imul
mov
jae
push
or
movsb
add
add
pop
subb
mov
test
cli
cmp
push
inc
xor
fisubs
push
cmpb
mov
jecxz
test
dec
jmp
or
pop
fdivrl
fbstp
cmp
aaa
sahf
sub
adc
mov
and
lahf
pop
inc
inc
xchg
or
adc
fldl
fadd
popa
mov
cmp
push
mov
paddusw
test
jae
cltd
fsubrs
push
xchg
xchg
sahf
stos
popa
pop
and
mov
cmpsb
or
scas
gs
arpl
inc
xchg
pop
push
mov
ds
ret
shll
pop
inc
push
flds
or
fistl
jecxz
test
cmpsl
xlat
cmc
push
aaa
mov
sbb
movsb
dec
mov
push
mov
sbb
dec
mov
out
cmp
adc
sahf
fdivrl
mov
dec
dec
jno
imul
stos
inc
shll
shrl
mov
into
xchg
xor
mov
lea
fwait
jg
sar
inc
push
xchg
adc
inc
stc
pop
mov
jne
and
aad
and
fstpl
dec
xor
sbb
daa
mov
call
add
push
jle
call
aad
cmpsb
cmp
inc
push
push
lods
mov
push
jbe
imul
test
jp
or
pop
stc
xor
rorl
test
lcall
mov
add
push
stc
push
gs
cmpsl
pop
divb
ds
repz
leave
cmpsb
sarl
fisubs
sarb
cmp
stos
jns,pn
cs
lea
lock
inc
xor
push
pushl
xchg
vmaxpd
inc
into
inc
xchg
push
push
aas
or
mov
ret
cli
fwait
dec
loop
ret
scas
cmp
sub
jnp
mov
data16
ljmp
push
xchg
cmp
scas
push
jmp
loopne
int
inc
dec
xor
mov
out
cmp
inc
enter
push
mov
div
jns
xor
mov
jb
insl
mov
lret
adc
mov
pop
mov
dec
hlt
or
into
imul
popa
mov
pop
mov
cmp
cs
add
aam
scas
jo
pop
sub
sti
mov
dec
pop
insl
pop
push
mov
nop
test
rcr
das
in
lret
mov
scas
ficoms
pop
aaa
sub
fsts
test
sbbl
sub
sub
or
stos
in
jmp
jg
js
jp
dec
ret
out
cmp
out
arpl
push
push
or
out
fdivl
jne
enter
dec
push
cld
push
lds
add
aas
cmpsb
or
inc
addl
add
lcall
inc
movsl
xor
mov
push
hlt
pop
sbb
sbb
mov
pop
inc
mov
xor
dec
insb
mov
cld
fiadds
xchg
int3
daa
in
add
xchg
stc
fisttps
push
popa
stos
mov
add
pushf
cltd
mov
jl
outsl
popf
jo
dec
add
xor
mov
jmp
and
pop
popf
mov
popf
repnz
cmpsb
or
push
rorb
movsb
push
fcoml
sub
pop
xchg
mov
pop
inc
push
jg
jecxz
sahf
data16
push
insl
push
int3
fmul
jo
repz
xchg
ja
rep
xchg
enter
cwtl
xchg
out
insl
xchg
inc
mov
into
pop
mov
scas
aas
mov
in
cld
bound
sub
or
int
mov
dec
push
sbb
or
adc
cli
or
inc
arpl
les
shll
rcrb
pop
push
sarl
jg
lahf
xor
popf
ficoms
add
aam
notb
mov
adc
pop
add
jl
call
std
inc
push
sbb
inc
dec
and
push
in
pop
or
xchg
sbb
sub
mov
mov
lds
inc
dec
and
imul
cwtl
sub
test
and
adc
fwait
xor
fwait
nop
xchg
mov
lds
xchg
repz
and
add
inc
je
aam
test
test
push
and
comiss
std
sub
xchg
pop
fmull
sahf
hlt
inc
lahf
mov
test
xor
popl
das
sbb
dec
mov
gs
adc
xor
xor
xchg
cmc
pop
repz
loopne
dec
mov
divl
add
mov
jo
jmp
jb
ficomps
inc
inc
cmc
repnz
lea
cmpsl
int
adc
cmpsb
xor
into
dec
mov
adc
int3
jnp
mov
orl
push
iret
lds
insl
inc
sub
out
mov
dec
std
popa
lock
rolb
xor
mov
pop
cs
xchg
xchg
mov
lds
lock
dec
xor
cli
pop
aaa
sbb
cmp
xchg
mov
lods
nop
sbb
lds
in
les
pusha
jne
ds
dec
inc
pop
add
push
mov
dec
cmp
movsl
cmc
mov
cmpsl
ss
das
mov
add
jo
mov
sub
insl
xor
xor
jne
sbb
jno
dec
mov
mov
loope
divl
jne
mov
jo
mov
out
push
ret
lds
sbb
lods
cmp
arpl
push
adc
iret
xor
std
adc
std
test
xchg
pop
mov
fildll
shlb
jb
popf
pop
add
pop
push
lret
add
test
mov
add
adc
push
lock
pop
cmp
fisubl
fbld
add
push
js
sbb
mov
fsubrs
jo
cli
jmp
jecxz
and
jge
mov
adc
push
hlt
pusha
jle
lret
pop
sahf
push
test
iret
repz
pop
cmpsb
dec
jg
inc
sti
vpunpcklwd
jp
movhps
cmp
xlat
dec
push
nop
push
lahf
sub
lock
scas
aad
popa
fcmovnu
pop
push
adc
test
dec
push
mov
shl
jg
cmp
cmp
pop
pushf
and
std
aam
or
mov
cmp
addl
cmc
imul
sub
adc
scas
xchg
push
xchg
jmp
xchg
cmp
mov
inc
data16
je
push
scas
cmp
pop
sbb
dec
push
ja
imul
add
dec
int
lahf
jne
out
out
fdivs
iret
mov
mov
repz
inc
dec
add
repnz
lods
leave
das
push
add
pop
sub
pop
fildll
push
inc
dec
shlb
cs
mull
in
dec
dec
out
adc
cmc
mov
loope
sarl
fdiv
sub
call
and
repz
cld
pop
cmp
or
dec
in
aad
jae
loop
sarb
lret
repnz
mov
push
jae
dec
or
or
lahf
test
repnz
mov
push
lret
gs
shrl
xchg
fsubr
xor
fists
sub
jl
sub
cwtl
mov
in
jl
cmp
adc
push
psubusb
das
or
test
pop
cli
mov
je
mov
sbb
xchg
cmp
lds
std
rclb
sub
mov
mov
test
add
jecxz
popf
or
dec
xchg
and
mov
pop
icebp
push
pop
mov
jns
gs
dec
lds
sub
dec
jae
jne
mov
and
cmp
xchg
subl
stc
and
inc
fwait
add
mov
mov
mov
cli
repz
dec
mov
jmp
nop
cmp
jmp
test
inc
lret
adc
sbb
jecxz
xor
std
imul
popf
out
stos
inc
xor
gs
test
popf
orb
cmpsb
out
mov
enter
jno
nop
lahf
sbb
das
int
repnz
repz
and
pop
mov
sbb
push
enter
loope
paddd
les
dec
push
fwait
pop
jmp
mov
cmp
pop
int3
adc
pusha
test
and
fisttps
loope
xor
in
jge
cmp
sti
pop
leave
sub
push
fwait
mov
sti
cmp
inc
xchg
mov
out
fcomps
mov
int
mov
cmp
xchg
jb
lea
aaa
in
mov
movsl
cmpsb
dec
push
fildll
add
das
jg
inc
cmp
jle
pop
lock
mov
data16
lock
aaa
lahf
mov
adc
mov
push
pop
popf
jne
pop
in
mov
jne
ljmp
in
jle
test
js
pop
cmp
shrl
and
adc
pop
mov
scas
pop
xchg
das
sbb
or
xlat
mov
scas
mov
sub
mov
or
mov
xorb
dec
les
loop
mov
jno
iret
cmp
cwtl
jp
out
bnd
int
dec
mov
xchg
add
dec
icebp
lahf
xchg
and
add
sub
adc
mov
pushf
fdivrs
push
sti
adc
dec
je
pop
sub
sub
adc
cmp
xchg
mov
fidivl
mov
sub
hlt
in
test
mov
jmp
mov
std
outsl
scas
sbb
sahf
imul
dec
loope
adc
insb
test
inc
addl
pop
test
insl
outsb
and
jl
xchg
mov
adc
cwtl
ret
xchg
dec
js
pushf
out
xlat
pop
push
mov
sahf
test
in
outsl
and
jno
sbb
out
test
insl
loop
push
xor
add
cmp
push
cli
cmpsb
mov
mov
test
mov
sbb
imul
xchg
clc
addl
scas
xor
jb
rcpps
or
and
mov
xor
sbb
cmp
push
std
sarl
fnstenv
cltd
rcl
xchg
sub
push
mov
fldenv
fcompl
mov
pop
jno
das
call
out
std
inc
pop
xor
and
insb
stc
lret
repz
dec
insl
lea
sahf
fwait
je
pop
jmp
mov
mov
repz
mov
sub
mov
sbb
adc
je
push
ss
lahf
mov
jle
fidivrs
outsb
adc
stos
push
in
sti
mulb
dec
filds
in
inc
adc
idivl
mov
or
out
dec
insl
out
cmp
orb
push
jl
push
xlat
enter
cmp
movsl
shr
mov
xor
inc
popf
imul
pop
push
aaa
ret
jnp
out
jns
out
xchg
sub
or
and
mov
out
popa
test
mov
mov
mov
int3
cmc
and
jo
mov
jle
scas
in
loopne
jns
clc
sbb
jle
decb
push
repnz
fldenv
stos
std
mov
ret
mov
sbb
lret
pushf
push
dec
shll
fadd
inc
xchg
fs
sbb
lcall
in
in
test
adc
adc
aad
sub
xchg
rorb
into
push
inc
iret
mov
ret
inc
fmull
jmp
int
mov
loop
aad
or
mov
sub
rcl
mov
dec
or
adc
rclb
pushf
sbb
xchg
dec
fidivrl
adc
xor
pop
jns
pop
ficompl
insb
mov
dec
aas
cmc
push
js
sub
mov
into
movsb
insb
jno
pop
inc
mov
stos
xlat
fsubs
or
or
push
cltd
pop
jge
xchg
dec
movsb
xchg
test
out
jmp
sub
in
mov
enter
dec
xor
pop
mov
mov
pop
mov
xchg
bound
aam
imul
jmp
pop
xchg
or
mov
jne
loopne
insb
mov
and
jo
addr16
and
xor
pop
aaa
daa
pop
xchg
mov
adc
out
dec
jle
out
lock
inc
shrb
sub
xchg
cmpsb
dec
jle
mov
push
sub
loopne
jne
push
pusha
movsl
int3
xor
cltd
inc
cmp
push
scas
aad
push
in
aam
cmp
test
dec
sbb
popf
shl
push
pop
in
add
sub
mov
dec
sub
add
cs
outsl
mov
add
inc
das
cmc
dec
inc
repnz
repnz
out
and
sbb
fsubrl
inc
js
test
xchg
nop
das
test
lcall
or
fcoms
cmpsl
xor
arpl
push
mov
scas
pop
int3
ret
sbb
push
loope
adc
or
pushf
lds
or
mov
imul
xchg
mov
dec
adc
fstl
dec
insb
pop
enter
xor
jnp
pop
in
ds
mov
mov
cli
lods
inc
add
push
das
sub
push
stos
push
xor
scas
inc
cwtl
ljmp
dec
add
shl
push
sbb
lret
mov
cmp
sbb
sti
jno
stos
push
lcall
dec
inc
jnp
notl
dec
repz
pop
and
test
pop
pop
movsl
lcall
xor
sbb
or
ret
mov
test
out
out
ja
xchg
mov
arpl
inc
mov
outsl
in
mov
push
pop
add
dec
and
call
xchg
add
jecxz
push
clc
out
fidivl
pop
or
jnp
cmc
popf
jae
out
popf
mov
test
sbb
adc
xor
pop
shlb
ja
or
inc
cmpsb
mov
mov
scas
aad
bound
cmp
sarl
pop
or
insl
jle
cmp
pop
inc
gs
mov
clc
push
sbb
test
pop
loop
nop
push
dec
imul
fwait
jecxz
jne
mov
mov
xchg
ds
adc
pop
xor
mov
dec
dec
nop
in
adc
rol
or
and
mov
pushf
sub
xorl
pop
int3
clc
mov
cmp
or
xchg
aad
push
test
inc
sahf
incl
loop
movsl
js
arpl
out
movsl
adc
add
xorb
rcll
cmp
adc
add
mov
inc
push
xlat
dec
out
fs
pushl
sbb
dec
mov
hlt
xchg
test
push
test
cs
inc
cwtl
push
mov
insl
add
dec
fcoml
mov
sbb
or
int
cli
mov
adc
mov
jecxz
mov
cwtl
sti
lods
cs
jno
call
scas
inc
push
sbbb
sub
mov
scas
pop
mov
or
stos
int
lea
pop
aam
ljmp
hlt
inc
adcb
das
imul
movsb
dec
inc
lods
mov
and
xchg
sti
test
fisubrs
push
fs
add
mov
and
mov
push
es
jl
popa
cld
sahf
xchg
cmp
xchg
pop
je
call
lret
imul
dec
push
mov
mul
adc
bound
fidivrl
ror
ret
stos
scas
lret
jle
stc
mov
aaa
inc
xchg
je
lret
jmp
pushf
pop
jmp
mov
stos
fildl
mov
and
pop
jae
insb
inc
sti
lcall
out
aam
inc
aas
ja
lds
jne
cmp
mov
fistl
cmpsb
in
std
bound
mov
idiv
movlps
or
addb
movsb
adc
pop
mov
sub
ljmp
cmpsb
outsl
add
jl
jae
pop
inc
sahf
dec
lea
jp
dec
pop
adc
call
mov
dec
jge
fiadds
int3
popf
pop
pop
in
inc
pop
out
xor
xchg
daa
stos
mov
lret
lods
cmp
adc
push
mov
pusha
xor
cmp
rcrl
adc
lcall
xchg
or
mov
fsubrs
pop
fwait
outsl
scas
pop
das
das
aaa
in
sahf
inc
das
xchg
cmp
rcr
mov
push
dec
shll
or
es
adc
xor
sbb
lret
daa
sbb
test
xchg
iret
lods
jns
popa
movsb
sub
pop
ret
lahf
mov
cltd
push
adc
xchg
out
into
cltd
repz
cmc
add
xor
pusha
ret
pop
jno
sbb
rclb
xchg
jl
mov
cmp
fsubr
inc
sbb
out
add
dec
cli
mov
inc
xlat
std
add
cwtl
add
call
in
and
int3
stc
fwait
sbb
cltd
lcall
xchg
xor
rolb
ds
jp
mov
push
jecxz
mov
inc
repnz
stos
mov
mov
jmp
cmpsb
mov
fucomp
pusha
loopne
fsubrl
sub
cmpsl
dec
and
push
jb
lahf
addl
or
ljmp
cmp
jnp
clc
pop
out
testl
js
addb
or
loopne
lock
pop
faddl
lcall
shrl
xchg
push
cmp
push
popa
ja
pop
jae
and
xor
cmp
sbb
cmp
sub
stc
mul
loope
inc
xor
lcall
cmpsl
fldenv
and
and
xchg
adc
out
dec
in
add
cmp
je
jg
sbb
jle
popf
lods
insl
pushf
inc
es
mov
adc
scas
pushf
rcl
push
xchg
or
add
jecxz
jmp
cli
insb
rorb
cld
mov
popf
ja
in
or
scas
add
mov
fwait
pop
scas
insl
jb
inc
iret
pop
and
inc
fs
bound
nop
jno
sbb
test
lret
out
and
push
or
shlb
cmpsb
fnstcw
xchg
inc
dec
jo
leave
push
insb
sbb
lcall
dec
cmpsl
sbb
push
sub
xor
es
out
cmp
and
lds
jns
idiv
inc
xor
push
cltd
cmp
jbe
xor
out
lods
int
pop
and
lret
into
push
pop
subl
int
lret
xchg
mov
or
mov
or
lds
or
cltd
xor
xorl
into
movsb
cwtl
sbb
xchg
ljmp
lret
idivl
mov
int3
xchg
jns
cmp
jle
xor
and
das
jl
pop
andb
sub
test
dec
push
data16
loope
xchg
pop
fwait
in
add
cs
cmp
xorb
int3
lcall
mov
xchg
repz
outsl
or
sub
xchg
xlat
push
or
call
loop
inc
fidivl
sbbl
inc
adc
call
push
jae
sbb
and
push
aas
mov
bound
mov
fisubrl
insb
jne
push
das
call
ja
addr16
cwtl
inc
mov
pop
xchg
cmp
sub
sbb
or
clc
daa
call
ja
addr16
cwtl
inc
mov
pop
xchg
cmp
sub
sbb
or
cld
cmpsl
out
rolb
idivl
mov
pop
xchg
cmp
sub
adc
in
aaa
sbb
or
cmp
mov
addr16
sbb
mov
cmpsl
ret
xchg
xchg
push
cmpsl
pusha
mov
idivl
in
aam
cmc
mov
sti
mov
stos
mov
inc
test
jne
ja
add
adc
nop
mov
test
je
fs
xor
data16
adc
add
dec
fcoml
aad
std
sbb
stos
pushf
les
adc
and
inc
push
jnp
jae
xor
aam
lods
jle
push
dec
dec
cmp
fimuls
popa
leave
and
and
adc
add
cwtl
sbb
push
and
sbb
or
shll
jne
cmpb
and
mov
xchg
jge
in
pushf
shll
xchg
inc
flds
adc
cmp
xor
sub
dec
movsl
movsb
push
imul
dec
jne
fs
rolb
and
adc
std
jmp
adc
pop
cmc
lfs
push
push
and
jne
insl
and
in
and
jns
aad
cmp
dec
mov
mov
inc
inc
pusha
inc
fnsave
gs
fiaddl
and
aam
out
push
test
xchg
xchg
mov
decb
jl
insb
jl
add
and
xchg
aad
in
hlt
fcmovnbe
lret
leave
test
je
aaa
sub
inc
push
popa
pop
mov
xchg
movsl
lock
shll
cmp
xor
adc
dec
ja
jp
dec
inc
push
cwtl
test
and
movsb
xchg
xchg
movsl
test
push
gs
jne
add
add
hlt
aam
cmc
mov
movsb
xchg
xchg
movsl
test
push
gs
jne
add
add
hlt
lds
push
les
jnp
dec
lock
sbb
pop
sbb
out
outsl
jns
jg
cmp
or
and
mov
mov
xor
icebp
pop
ret
lret
mov
add
push
shll
lahf
gs
xor
jle
xchg
add
imul
std
dec
xor
pop
ds
fcoms
popf
xor
lret
mov
push
mov
cmp
push
hlt
xchg
fprem1
aam
adc
sbb
mov
clc
ds
arpl
sub
lahf
clc
or
insl
fwait
xchg
fwait
out
push
sub
xchg
jge
repz
push
sbb
jnp
clc
sbbl
and
ret
nop
pop
cmp
jl
cmp
stc
xchg
xchg
mov
loop
pushf
mov
jge
loopne
adc
nop
adc
lock
inc
jne
out
mov
xchg
cli
jecxz
inc
mov
aad
or
pop
pop
divl
sti
rolb
or
push
push
and
in
dec
lea
xchg
call
xchg
cwtl
ljmp
bound
or
xchg
mov
repz
mov
jmp
aas
fdivl
mov
bound
add
or
shlb
adc
push
push
xchg
ljmp
stc
add
lea
dec
or
icebp
mov
jp
adcl
stc
lahf
xlat
mov
imul
sub
mov
stos
fwait
sahf
add
mov
inc
mov
and
icebp
mov
dec
mov
xchg
clc
inc
jae
jno
dec
inc
jb
mov
gs
scas
mov
arpl
mov
dec
clc
pmullw
dec
js
add
lods
pop
add
je
sbb
pop
pop
fsubl
fmuls
fldcw
xchg
imulb
sbb
pop
repz
pop
xchg
leave
push
mov
mov
fnstenv
outsb
lcall
jle
add
mov
jb
in
mov
fadds
sarb
hlt
mov
pop
pusha
xor
adc
jl
mov
push
jb
fstps
lods
rolb
popa
pusha
xchg
out
mov
testb
test
sub
mov
addr16
adc
jmp
push
dec
aad
add
mov
lods
test
icebp
movsl
push
sub
jmp
aad
cmpsb
pop
mov
add
pop
jb
push
cmp
in
ss
out
mov
jmp
add
daa
cmpl
push
in
test
inc
jle
dec
inc
in
lock
pop
cmp
gs
adc
xchg
jnp
jne
cmp
pop
or
pop
mov
jnp
or
popa
sub
xchg
adc
bnd
cmp
cwtl
rorl
mov
mov
adc
fisubs
mov
repnz
jp
push
dec
lret
mov
shr
mov
push
xor
sub
negb
cmp
lods
out
imul
jbe
jae
cmp
cmp
pop
sub
sub
mov
jno
sahf
enter
push
add
xchg
cmc
add
inc
mov
jl
adc
rolb
dec
dec
mov
and
std
je
shlb
out
arpl
gs
jl
sbb
ret
setb
mov
pop
outsl
jae
daa
cwtl
pushf
test
mov
lcall
repnz
ja
imul
ficoml
ljmp
pop
jns
jge
or
lcall
sahf
call
lret
jmp
in
scas
push
mov
pop
mov
mov
jle
enter
mov
shll
stos
std
dec
lahf
rcrb
sbb
jnp
dec
xchg
lds
fbld
mov
jno
out
test
pop
xchg
xor
or
adc
add
or
pop
icebp
sarl
aas
test
jae
enter
mov
xchg
sbb
sub
addr16
xchg
push
xchg
mov
scas
sbb
lret
mov
je
jb
daa
ret
adc
push
ds
test
jl
xchg
push
adc
dec
adc
add
jo
js
bound
xor
sub
lock
and
push
inc
xor
enter
adc
imul
insl
dec
mov
nop
std
dec
or
mov
call
mov
in
dec
shll
xor
bound
fwait
pop
je
push
add
test
cmpsb
xchg
mov
fcompl
sahf
mov
add
jns
push
lock
cs
icebp
adc
jns
gs
push
andb
cld
jecxz
push
imul
and
add
and
sub
std
js
ja
adc
cmp
cmp
cmp
push
inc
add
inc
inc
xchg
xor
cmp
shrl
testl
test
mov
xchg
push
out
mov
adcb
cli
insb
dec
mov
and
fcomi
sbb
mov
mov
scas
mov
mov
or
adc
mov
sub
test
jge
ret
jo
push
adc
hlt
pop
inc
jmp
xor
insl
cmp
sahf
cmp
xor
add
cs
xchg
imul
movsb
pop
mov
jmp
lods
ds
cs
cmc
inc
mov
pop
cs
inc
inc
xor
and
cmp
mov
les
sti
iret
mov
inc
es
cmpsb
fstpt
sbb
xorl
xchg
hlt
nop
pop
int
jae
dec
lret
faddp
fisubs
in
add
mov
push
rcrb
out
je
in
add
xlat
cmpsb
xor
lods
adc
jbe
bound
adc
pop
popa
or
aaa
inc
lahf
push
adc
wrmsr
mov
mov
mov
and
xlat
hlt
hlt
shlb
mov
jns
inc
in
stos
push
das
adc
gs
std
imul
sahf
mov
dec
xchg
jp
and
faddl
xor
inc
in
call
mov
cmp
xor
add
stos
push
or
xchg
outsl
js
inc
cmp
push
lds
push
sbbl
pop
or
sbb
bound
push
addr16
cmpsl
sarl
dec
js
sbb
in
popa
push
jecxz
and
jns
movsb
fstpl
mov
sbb
or
std
out
and
loope
pop
mov
push
ds
mov
or
push
icebp
popl
cmp
je
imul
sub
inc
outsb
or
mov
test
add
data16
sbb
scas
movsl
mov
xor
cmp
sbb
out
mov
lods
in
jmp
jne
dec
std
cmpsl
and
sahf
or
mov
xor
cmc
jno
xchg
and
xor
cmp
aaa
in
shlb
xor
cmp
ss
xor
mov
sub
cmp
cmp
push
jmp
rorl
repz
jae
fstl
setb
ja
xor
jne
ss
into
dec
or
xchg
das
sub
push
sub
arpl
stc
gs
push
jae
pop
jp
xchg
push
inc
inc
inc
ja
mov
push
test
xor
lds
dec
orb
aaa
std
sbb
sti
lods
cmpsb
and
dec
lods
mov
mov
mov
push
sahf
out
inc
ret
xor
int3
stos
xchg
xchg
je
cmpsb
jp
dec
mov
mov
sbb
out
inc
sub
push
pop
dec
mov
or
sub
xor
popf
jno
int
clc
cwtl
xchg
or
pop
test
cs
int3
and
outsb
xlat
clc
dec
movsb
jl
popf
or
cli
adc
nop
stc
rcrb
addr16
jns
and
cli
adc
ja
mov
adc
dec
push
jp
pusha
inc
pop
sti
insb
jb
stos
pop
cs
sti
fs
inc
mov
jge
and
add
iret
outsl
outsb
adc
inc
clc
out
enter
mov
xor
push
xchg
cltd
and
out
cli
xchg
ja
push
jnp
pop
enter
push
movsl
inc
in
jb
or
mov
cmp
hlt
xor
inc
mov
jns
iret
sub
lds
adc
shlb
aam
sub
or
mov
loopne
pusha
icebp
jns
lcall
mov
push
std
xor
pop
aas
inc
mov
sbb
or
sbb
std
imul
aad
jp
sub
clc
push
jb
enter
popa
xchg
inc
mov
dec
cld
xor
ljmp
dec
or
or
cmc
mov
rcll
aad
xor
sti
in
divl
ja
adc
adc
inc
sbb
sbb
cmpsl
push
pushf
xchg
lock
js
inc
or
jb
out
mov
xlat
mov
or
out
cltd
loope
jle
sahf
jns
xrelease
jp
sbb
sbb
xor
dec
pop
lret
sbb
jp
push
and
jae
jp
nop
addr16
jne
call
push
jns
xor
das
loopne
mov
stos
adc
decl
popf
push
lea
subl
mov
scas
les
lds
scas
jae
add
adc
andl
sbb
stos
jl
loop
fstpl
fcomi
outsl
push
inc
pop
fstpt
shll
inc
mov
dec
add
xor
mov
xlat
xlat
fstp
dec
pop
adc
orb
jg
jmp
jbe
adcb
cltd
inc
mov
lds
pop
aas
jo
xchg
dec
xor
xor
or
andl
in
mov
jbe
xchg
mov
out
mov
test
jecxz
inc
cmp
es
cmp
or
popf
lock
pop
ljmp
mov
popf
sub
sahf
lods
pop
shrl
mov
dec
dec
add
dec
pushf
push
mov
inc
mov
mov
outsb
dec
jne
sti
addl
xchg
mov
and
xor
repz
hlt
pop
imul
and
cwtl
add
inc
xlat
mov
jecxz
push
cmp
mov
aas
lretw
jbe
mov
push
or
xchg
jge
jg
ror
xor
jle
ljmp
int3
cmp
repnz
sub
aad
cmp
out
mov
pop
xor
imul
lret
push
jecxz
fwait
leave
adc
fnstenv
shlb
movb
inc
repnz
testl
lds
mov
mov
xor
pop
insb
lds
jle
test
das
mov
mov
stos
int3
mov
cmp
lds
into
push
adc
packssdw
andl
push
mov
jae
jmp
sbb
pushf
and
int
mov
test
notb
enter
stos
ljmp
fidivrs
pop
push
imul
dec
jecxz
adc
add
bound
mov
mov
cmp
add
xor
clc
jo
add
stos
in
js
out
cwtl
jne
stos
mov
mov
jl
push
sub
push
mov
je
cmp
jecxz
mov
inc
push
xlat
push
inc
jnp
add
inc
sub
aaa
mov
lcall
xchg
loopne
inc
or
iret
cmp
mov
lods
jo
fidivl
movsl
cltd
nop
xchg
pop
dec
mov
in
sarb
repz
shlb
icebp
sti
inc
nop
dec
lret
in
repnz
loopne
inc
dec
or
pushf
jge
int3
outsl
in
hlt
test
and
pop
orl
rcrl
or
pushw
repnz
out
lret
inc
add
icebp
fadd
fdivrl
add
aas
stos
fdivrs
xchg
cld
jge
outsl
stc
sub
aad
icebp
cmp
filds
out
test
cmp
shrb
cli
or
sbb
mov
xchg
data16
out
ja
mov
scas
movsb
shrb
mov
je
daa
mov
leave
jb
das
inc
push
sti
pop
lods
lods
loop
scas
mov
shll
imul
fisttpl
push
aas
ficompl
mov
fs
mov
lods
mov
stos
hlt
shll
lock
sbb
and
popf
insb
mov
xchg
lret
push
fsubl
fiadds
xchg
dec
and
dec
pushf
enter
aam
scas
in
mov
mov
out
out
lret
dec
xchg
notl
clc
mov
mov
and
and
stos
repz
fcompp
shrl
loope
into
mov
mov
add
and
sbbl
dec
mov
test
popa
idivl
testb
popa
or
pop
add
sbb
jae
inc
decb
lea
negb
aam
or
fstpl
addl
xchg
repnz
pop
insl
jl
adc
movsl
mov
shrl
mov
and
mov
ja
call
push
cli
dec
push
push
leave
mov
push
std
adc
or
pusha
inc
scas
pop
inc
call
call
cld
loope
jge
mov
inc
xor
sub
cs
fbstp
and
cmp
sarb
mov
shll
push
and
insl
leave
or
ss
iret
inc
sub
ror
dec
sti
add
push
pop
pushf
sbb
pop
in
push
push
adc
in
in
jbe
mov
in
pop
daa
cwtl
ficoml
inc
mov
xchg
imul
inc
xor
jbe
adc
aad
cmpb
xor
test
jae
in
out
lret
shll
into
aaa
cmp
mov
jno
int
sti
add
in
test
lods
pop
mov
sub
pop
int3
jo
and
cmp
es
inc
jno
xor
nop
orb
scas
in
add
mov
jle
int
and
cmc
pop
fucomip
dec
mov
mov
or
fsubr
adc
test
sbb
jbe
jecxz
mov
mov
out
sbb
movsb
addl
mov
call
fdivrs
adc
sbb
mov
push
outsl
call
xchg
pop
xor
lcall
sbb
pop
sbb
aaa
lret
add
movsl
ds
leave
imul
cmp
pop
mov
pop
fstps
inc
scas
xchg
repz
leave
fnsave
stos
sub
fsubrl
jne
iret
jge
mov
test
push
mov
or
pusha
fwait
test
push
aam
fisubrs
movb
inc
push
rep
xchg
lods
movsl
jge
fsubrs
xor
addb
mov
ds
fs
mov
jns
push
dec
sub
orb
inc
xchg
xor
xor
arpl
xor
and
mov
mov
cmp
mov
jo
xor
jge
dec
shll
leave
xchg
test
subb
jge
lock
push
fsub
mov
mov
popa
lock
sbbb
mov
outsl
rcr
out
test
dec
insl
jle
dec
xor
sub
mov
adc
fnstenv
dec
push
les
cs
dec
jp
sbb
cltd
paddq
test
mov
inc
mov
mov
cmp
push
jo
fwait
adc
nop
hlt
jp
aaa
rorb
sarb
add
push
push
pop
jb
pop
fmuls
aaa
jns
insl
sbb
lahf
test
imul
cmpb
jo
sar
pop
nop
mov
sarl
mov
icebp
sarl
pop
sbb
jl
xor
je
mov
loopne
mov
adc
and
mov
cmp
add
iret
jb
ffree
and
inc
ret
push
popf
add
pop
xor
scas
fmulp
sub
aam
shrl
add
faddp
mov
xchg
inc
xchg
push
sar
add
arpl
out
push
dec
fnstcw
and
js
mov
sub
and
scas
xchg
inc
or
fstpl
pop
jmp
pminsw
cli
adc
fdivs
in
sub
inc
dec
in
enter
adc
fldenv
lds
cmpsb
mov
push
insb
sbb
iret
cmc
inc
add
xor
jmp
daa
mov
rcl
es
sub
mov
fisttpl
cwtl
ja
mov
dec
push
jno
outsl
add
in
mov
stos
punpcklbw
std
or
dec
ret
adc
in
xor
cmp
sbb
inc
sbb
std
adc
ljmp
pop
sub
ret
xchg
add
imul
iret
cmp
das
mov
jns
push
ja
xchg
xor
xchg
aad
push
fstp
ljmp
add
push
mov
mov
int
sbb
push
push
xchg
sahf
or
jo
imul
gs
mov
jae
cmpsl
negl
mov
push
mov
ss
movsl
mov
fxam
jp
or
aas
mov
jo
outsb
pop
lods
push
jecxz
xor
push
push
push
sub
cwtl
insl
ret
jbe
push
in
icebp
push
stos
enter
jne
sbb
sbb
lret
jnp
and
jno
inc
aad
loop
test
mov
ret
sbb
into
pop
stos
xor
test
cmp
jg
neg
sbb
sahf
into
sub
and
call
cmpsb
fwait
jbe
mov
arpl
adc
mov
mov
std
lock
mov
ljmp
xor
lret
in
cwtl
movsb
cmp
bound
in
inc
lock
sarb
push
jg
scas
aas
aad
adc
sub
mov
mov
add
xor
mov
test
xchg
pusha
scas
fmulp
pop
scas
pop
fisttps
jg
lods
pop
add
lock
mov
aaa
add
jp
inc
fwait
aaa
aas
in
inc
push
pop
mov
nop
xchg
ror
sub
sub
es
cwtl
cmp
pop
xchg
fs
sub
mov
dec
add
shlb
pusha
mov
mov
std
fstpt
call
pop
fstl
ret
and
cmpsb
aam
daa
ja
repnz
fstl
sbbl
addb
cmc
dec
pop
cwtl
xchg
ret
dec
mov
les
out
mov
mov
movsb
ret
push
jle
cmp
sbb
cs
stc
sbb
push
cmpsb
push
jg
data16
shlb
dec
lea
and
pop
dec
int3
jmp
mov
jge
cwtl
add
add
sti
and
int3
movsb
je
sti
in
rcll
push
mov
mov
push
xchg
in
dec
jg
and
xchg
test
ret
lock
fsubs
sbb
pop
mov
mov
xchg
mov
pop
push
mov
cli
inc
shrl
pop
stos
fidivl
lahf
sbb
jb
xor
push
cmp
jb
pop
test
aam
arpl
jecxz
jo
pop
test
xchg
call
shlb
sbb
jo
imul
push
hlt
arpl
xchg
mov
sarl
movsl
jo
pop
test
adc
lret
aam
pop
adc
imul
add
cmp
mov
pushf
movsl
add
sbb
xchg
mov
or
lods
add
dec
xchg
push
mov
mov
mov
pusha
adc
sub
adc
and
jnp
jns
das
or
jge
pushf
lea
sbb
les
xor
movsb
in
rolb
cld
xchg
or
testl
xchg
pop
cmpsl
mov
out
movsb
or
jae
lahf
dec
fwait
push
and
xchg
or
mov
cmpsb
hlt
pop
mov
jno
sub
into
int3
cli
sti
mov
or
data16
push
push
push
cmpsb
push
xor
add
iret
fwait
xor
xchg
ss
pop
dec
push
lods
sub
mov
inc
repnz
pushf
fld
adc
inc
xlat
popf
scas
inc
aas
sahf
or
mov
mov
je
xchg
mov
pop
jle
push
shll
push
in
add
mov
mov
shll
idivb
xor
pop
push
cli
sbb
std
mov
add
pop
roll
push
mov
fsub
ud2
loopne
iret
lods
hlt
shl
pop
push
rcll
js
xchg
sbb
pop
shl
and
fcomp
fbstp
pop
and
or
push
loope
int3
and
rcrl
adc
ljmp
into
sbb
pop
fistps
or
popf
inc
mov
and
popa
ss
mov
rclb
rcr
sub
push
rcrb
sub
mov
pop
loopne
mov
movb
fwait
adcb
fiadds
cmp
xor
xor
adc
mov
shl
cmp
pop
xchg
std
addr16
xor
leave
aaa
aas
out
push
jae
add
dec
push
loop
outsb
dec
scas
lock
in
je
mov
jle
sbb
cli
cmp
pop
test
daa
sbb
sbb
rclb
mov
jecxz
dec
ss
int
xor
push
jbe
lahf
xchg
add
xchg
or
cmc
mov
movsb
xchg
xchg
movsl
test
push
gs
jne
add
add
hlt
aam
cmc
mov
movsb
xchg
xchg
movsl
test
push
gs
jne
add
add
hlt
mov
cmc
and
movsb
xchg
xchg
movsl
inc
mov
inc
fs
movsb
gs
je
add
in
xor
mov
in
mov
mov
xchg
movsl
add
je
fwait
gs
add
lods
ljmp
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
and
adc
add
les
dec
and
dec
dec
mov
mov
mov
stc
loop
ror
enter
sub
sbb
or
pusha
push
mov
cltd
mov
rcr
ror
cmp
sub
sbb
or
js
dec
pop
inc
dec
test
std
clc
out
mov
xchg
mov
adc
insl
and
pusha
xchg
cmp
sbb
fadd
clc
jno
popf
or
icebp
or
cmp
cmp
mov
in
rcl
ret
mov
addr16
mov
pusha
aas
cltd
iret
sub
call
mov
in
fildl
pop
test
lock
sbb
rclb
add
mov
cmp
jns
push
cmp
movsl
pop
jg
psubsb
or
ror
clc
lods
xlat
popf
out
add
sbb
inc
mov
jo
or
shrb
fsubs
ds
cmpsb
incl
aaa
mov
mov
shlb
jmp
shlb
cmp
sub
sbb
or
jo
push
pop
pop
dec
test
cwtl
cltd
mov
clc
clc
call
pop
cmp
jne
je
add
push
sbb
cmp
int3
mov
lret
in
lock
lods
pop
push
inc
inc
jg
jo
sbb
pusha
sub
repz
ficoml
popf
mov
mov
dec
jnp
jge
jo
dec
pusha
push
mov
mov
mov
clc
loopne
rcr
ror
cmp
sub
sbb
or
pusha
push
mov
mov
mov
clc
loopne
rcr
ror
cmp
add
lea
jmp
jne
mov
ljmp
cwtl
arpl
push
or
in
pop
push
mov
popa
mov
or
fidivrl
pop
sbb
mov
inc
sbb
pop
stc
loope
pop
and
leave
jne
jg
pop
jg
jnp
mov
add
xchg
inc
jo
or
xchg
adc
scas
sahf
push
rclb
dec
clc
les
dec
cmp
in
aaa
mov
push
fs
or
inc
jmp
fbstp
call
sbb
jl
fcoml
jb,pt
mov
mov
repz
out
adc
inc
idivb
in
ret
jbe
test
cmpsb
into
scas
add
ret
and
sub
int3
clc
adc
fcompl
pushf
inc
ja
dec
fcmovne
push
jle
pop
or
icebp
stos
or
sbb
add
mov
iret
xchg
inc
sub
ja
popa
arpl
rcrl
add
test
cmp
shl
xchg
lods
test
mov
insb
mov
ja
lret
jle
sub
ret
and
cli
rolb
or
les
xchg
loope
xchg
inc
cmc
gs
icebp
sub
cli
adc
xor
nop
mov
lret
jmp
rolb
xor
cmp
pop
mov
xchg
mov
mov
add
cmpsl
inc
xor
arpl
cli
sub
rorb
scas
fwait
jle
mov
dec
nop
adc
lods
add
cmp
ljmp
fdiv
push
pop
insb
jb
movsl
insb
popf
outsb
ljmp
mov
repz
push
jecxz
mov
pop
and
icebp
xlat
data16
lret
xchg
pop
and
call
push
adc
cld
test
push
mov
push
push
xor
les
stos
test
daa
int3
mov
cltd
dec
inc
xor
and
sbb
mov
mov
popf
bound
in
daa
add
iret
nop
pusha
xlat
rcll
fldt
or
xor
ret
lahf
cmp
test
fadds
jnp
fdivs
outsl
cmpsb
dec
ffreep
push
or
xchg
pushf
xor
and
inc
in
out
mov
jae
push
iret
jb
mov
ds
xlat
push
and
repnz
out
adc
in
hlt
xchg
je
jp
fucomp
push
or
lods
xchg
mov
pop
push
lcall
fmulp
mov
or
lcall
lahf
push
les
push
pop
sahf
movsb
sar
aam
jnp
ljmp
xor
jae
mov
jmp
das
das
pop
mov
roll
daa
adc
push
aaa
repz
sub
mov
push
inc
ja
inc
sahf
mov
jnp
push
cmp
jle
out
fimull
imul
iret
cmpsb
xchg
aaa
and
push
lods
aas
push
das
jg
adc
je
test
out
sbb
int
addr16
std
jb
pop
imul
fcomi
or
setbe
pop
std
sub
es
sbb
sub
addb
in
or
add
xchg
cli
jne
jge
pusha
dec
cld
rorl
icebp
or
movsl
and
es
lahf
xor
pop
iret
pop
data16
dec
mulb
adc
mov
cmpsl
mov
call
xchg
cli
mov
test
movsb
lea
lods
mov
dec
mov
jne
pop
mov
jge
jno
sarl
push
mov
mov
lea
cli
dec
cmp
jmp
adc
jb
mov
lock
test
ja
add
orl
sahf
and
sbb
aas
push
rcrl
into
jo
pop
jp
shl
dec
cmovnp
sbb
cmp
sub
mov
cmpsl
fucomp
fisubs
stos
mov
push
push
imul
mov
cmc
ret
xor
adc
cltd
push
cwtl
and
and
xchg
das
xchg
xchg
cmpsl
jmp
in
inc
cmc
sub
int3
repnz
sar
dec
mov
adc
loopne
popa
movsl
imul
mov
add
push
outsb
xchg
stc
lock
cmpl
and
cs
jne
cmpb
or
sbb
test
movb
aaa
bound
sbb
mov
jae
and
sub
pop
jg
imul
add
mov
add
jne
gs
ret
mov
mov
js
sub
cmpsb
push
jns
sbb
inc
out
ret
int3
xchg
ljmp
mov
pop
mov
decl
pop
lods
dec
iret
mov
sarl
cmp
mov
push
loopne
inc
xchg
aam
inc
insl
lret
lret
int3
xchg
fdivrl
or
jbe
mov
sub
cmpsl
mov
in
xor
outsb
pop
loopne
jp
stc
add
enter
push
dec
jge
mov
sbb
fcomps
push
test
xchg
out
cmp
pop
cmp
shll
shll
in
push
push
rorb
cwtl
xchg
push
mov
or
ds
scas
call
into
adc
add
xchg
imul
rolb
out
fwait
push
jb
fistpl
rclb
jns
test
pop
mov
xchg
push
and
jnp
cmc
movsb
xchg
sbb
icebp
dec
adc
outsl
popa
add
inc
cmp
stos
add
xlat
rorb
nop
add
adc
mov
into
frndint
jno
push
ljmp
dec
adc
ret
hlt
popf
xor
cli
pop
jnp
cmpsb
aad
jp
pop
fstl
and
mov
jbe
jnp
cmp
js
or
mov
jg,pt
stos
stos
popa
adc
pop
out
dec
stos
scas
xor
adc
xchg
inc
subl
add
jbe
xor
or
fisttps
pop
ds
jo
fnstenv
adc
lahf
push
cli
sub
pop
icebp
loope
sbb
stc
inc
sbb
sbb
mov
push
lcall
or
adcl
rorb
scas
mov
xchg
js
add
lahf
fcmovbe
dec
jno
sub
dec
adc
outsb
aam
cmpsl
jg
mov
data16
adc
mov
mov
pop
fbld
jp
shll
mov
jmp
mov
das
pop
jo
push
out
es
fdivr
sbb
mov
inc
scas
orl
xlat
cmp
call
jne
sbb
fwait
jl
cltd
arpl
imul
lret
sbb
xchg
jb
sub
xor
mov
mov
push
push
sbb
pop
pop
sti
jmp
and
jecxz
add
inc
xor
and
fdivrl
mov
and
cmpb
xlat
adc
mov
mov
adc
or
xor
sbb
jno
mov
stos
aaa
popa
mov
dec
sub
mov
dec
mov
mov
rcrl
lds
insl
push
leave
leave
out
mov
jbe
in
leave
mov
mov
xor
xor
repz
shrl
sbb
cmp
ds
dec
xor
or
sbb
cmp
inc
cwtl
sbb
xchg
push
aas
dec
cmp
pop
dec
ljmp
xor
repnz
les
mov
and
roll
std
or
jns
add
outsb
inc
xlat
cltd
mov
xchg
jns
cmp
dec
jle
dec
jno
lock
dec
adc
mov
sub
das
fistps
dec
cmp
mov
fbld
out
mov
mov
js
push
test
jecxz
leave
es
and
lahf
jl
jno
mov
cmp
jge
cltd
insl
mov
pusha
inc
test
jne
cmp
pusha
jnp
dec
cmp
andl
mov
sarb
daa
inc
mov
or
mov
sub
into
fstl
add
push
mov
test
lods
push
ficompl
mov
and
sub
les
cmp
ja
movsb
int
enter
gs
insb
pop
cmp
add
dec
dec
lods
fs
mov
add
push
lods
aad
leave
cmp
popl
mov
jle
sbb
in
jno
xchg
xchg
add
ss
adc
mov
adc
ficomps
aas
js
mov
cmp
sub
jp
xchg
xor
pop
xchg
lret
push
js
lahf
lcall
adc
shl
mov
les
leave
cmp
sti
jae
sbb
sub
fs
scas
pushf
mov
sarl
ds
mov
inc
dec
sahf
sub
inc
into
jns
xor
dec
xor
imul
mov
ror
jo
adc
push
cmc
loop
jo
push
cmpsb
push
dec
cmp
pop
int3
mov
mov
mov
std
enter
adc
pop
bound
mov
outsb
or
in
stos
fiaddl
or
je
jae
mulb
push
mov
jmp
add
in
inc
adc
dec
mov
imul
lahf
incl
lock
lret
cmp
bound
xchg
sbb
std
mov
cmpsl
xor
mov
out
lds
push
std
xor
cmp
cmp
popa
jbe
push
dec
xlat
mov
pop
jb
shlb
inc
sub
and
icebp
sahf
and
out
imul
fwait
add
in
pusha
push
rcll
js
aaa
dec
pop
add
es
orps
test
xchg
mov
imul
dec
jno
pop
pop
mov
sbb
mov
mov
jp
mov
mov
push
sub
push
test
test
fmull
push
cmpsb
test
testb
les
jne,pt
jmp
inc
jbe
or
movsb
fisubs
add
ficomps
dec
into
stc
fidivs
std
cmp
xchg
push
icebp
nop
push
inc
test
fidivl
push
out
test
push
comiss
mov
jmp
mov
jmp
and
pop
shlb
adc
aaa
ret
jl
jb
dec
xor
fisubrs
outsb
or
sbb
push
fisubl
adc
push
jbe
out
dec
pusha
aad
or
loopne
out
ret
imull
adc
inc
in
rcr
jg
xchg
mov
adc
inc
fnstenv
adcb
xchg
mov
or
push
inc
xor
adc
pop
adcl
enter
call
pop
lea
cmpsb
cltd
adc
jo
ret
dec
mov
xchg
insb
mull
push
mov
lds
imul
push
xor
mov
iret
out
add
jmp
xchg
loop
lret
lret
push
inc
sub
pusha
hlt
incb
lahf
adc
in
push
in
ss
movsb
loopne
in
xchg
push
adc
lret
cld
push
ljmp
jne
cltd
xchg
imul
outsb
popa
sarb
push
and
dec
std
xor
lret
mov
mov
mov
stos
fisubrl
add
xchg
push
das
repz
movsb
out
aas
das
in
iret
jge
jl
movsb
xchg
add
mul
rcrl
in
cmovge
sbb
mov
lds
push
or
cmp
adc
dec
inc
mov
sbbb
aam
movsl
inc
pushf
sar
jmp
je
mov
ljmp
xor
mov
pop
std
mov
jecxz
xchg
jg
mov
negb
add
push
mov
out
cli
lods
or
cs
popf
inc
jg
cld
dec
sub
addb
lock
loop
imul
mov
shrl
push
or
mov
cmp
imul
push
jmp
jb
clc
or
mov
or
sbb
inc
clc
daa
dec
inc
scas
or
jmp
test
xchg
and
mov
jbe
jle
ficomps
pop
push
aas
sbb
inc
dec
mov
cs
inc
jmp
or
and
jbe
shlb
pop
stos
frstor
push
sub
bound
lcall
xchg
xlat
ret
iret
test
dec
and
mov
out
sbb
jbe
mov
xor
or
imul
jge
mov
dec
pushf
popa
jo
or
xor
and
pushf
adc
sti
loopne
adc
ret
cld
cmpsl
in
xor
push
cmp
leave
inc
loop
inc
pop
mov
sbb
icebp
test
xchg
and
pop
and
ficoms
xchg
mov
daa
mov
loopne
daa
and
ret
nop
jge
pop
pop
xlat
sti
addr16
mov
pop
insb
xchg
cmp
mov
add
add
push
mul
xor
sub
and
pop
jmp
sbb
sbb
mov
add
sahf
stos
cmpsb
dec
lods
loopne
mov
enter
mov
sti
loopne
mov
sub
mov
aas
mov
nop
subb
mov
mov
test
jl
div
in
mulb
sbb
std
push
mov
xor
pop
mov
ja
cmp
iret
div
test
es
pop
or
ja
ret
mov
push
into
push
dec
xchg
in
imul
mov
pop
push
pop
mov
xor
mov
inc
addl
sub
pop
sub
out
imul
jl
stos
mulb
mov
jmp
sub
jmp
mov
mov
rclb
xor
mov
prefetch
inc
repz
ret
insb
adc
jns
mov
aad
mov
cmp
xor
ret
dec
std
cmpsb
sbb
fsubrs
push
and
xor
cmp
jbe
enter
xor
jno
mov
and
and
xor
mov
or
fildl
xchg
dec
pop
in
mov
jle
std
int
cmp
fiadds
inc
cli
clc
daa
das
les
pop
fsubs
inc
frstor
xchg
stc
xchg
out
dec
adc
loope
out
xchg
mov
sbb
in
mov
lcall
inc
les
test
int
xchg
cmp
dec
idiv
xor
scas
loop
pushf
enter
shrl
in
je
in
outsb
jg
cmpsl
cmpsb
sub
test
loope
enter
mov
pop
xchg
sub
dec
cs
or
jg
sub
sbb
ret
add
or
fldt
push
mov
inc
cmp
aam
scas
jb
mov
mov
push
mov
les
cmp
inc
fcomps
mov
sbb
push
add
cmp
push
mov
push
jmp
cli
sbb
push
pmullw
pop
pop
aam
add
or
dec
ljmp
aad
jl
push
outsl
push
icebp
mov
cmc
fdivrl
jnp
int3
shl
pusha
or
sub
out
pop
or
cmp
add
push
adcb
push
push
stos
xchg
orb
pop
and
xchg
mov
mov
insb
mov
hlt
icebp
sub
ret
sbb
hlt
ficoms
outsl
cmpsl
ljmp
cmp
mov
add
addr16
dec
aas
lcall
iret
push
pop
mov
test
sbb
push
rorb
std
dec
jo
cmp
inc
jo
jecxz
dec
mov
in
xchg
dec
mov
outsb
test
mov
lcall
cmp
out
out
xchg
imul
pop
xor
jl
push
cmp
sub
cmpsl
test
xor
call
lea
inc
xchg
scas
lods
test
test
cmc
mov
add
es
sbb
mov
inc
jmp
cmpsl
cs
mov
out
pop
cmp
pop
cmpsb
orb
enter
dec
adc
test
and
sahf
mov
xchg
sbb
sbb
or
iret
adc
dec
scas
mov
arpl
sub
mov
mov
clc
aas
lea
shlb
fwait
jge
testb
mov
mov
shr
dec
lea
cmp
fisttps
jg
loopne
cmpsb
test
mov
cmp
mov
rolb
mov
inc
jb
xchg
fldt
jmp
pop
daa
xchg
shlb
mov
adc
mov
test
xor
sbb
movsb
jns
lcall
jb
mov
push
dec
adc
sbb
jnp
ret
sub
mov
mov
int3
xchg
pop
or
dec
push
idivl
lds
xchg
repnz
in
test
pop
cmp
insl
sbb
mov
mov
movsl
jb
lahf
out
cmp
std
icebp
repnz
and
out
test
xlat
pop
xchg
push
in
or
mov
aas
addl
aam
jbe
mov
mov
push
mov
lods
enter
sti
xor
cmpsb
xor
mov
mov
push
dec
loopne
mov
push
sub
orl
bound
mov
pop
lcall
aad
lahf
jns
fwait
mov
xchg
ss
xorb
aaa
les
into
xor
and
jl
sbb
in
push
icebp
jle
fcomps
xor
pop
out
lock
cmp
out
pop
xor
repz
negl
sub
out
and
push
xor
xchg
adcl
and
repz
mov
lods
jnp
push
mov
sahf
cmp
inc
xchg
aaa
dec
outsb
sub
jnp
jp
negl
stos
mov
jp
add
scas
stc
data16
push
add
xlat
mov
xchg
push
jo
movsb
sahf
jo
cmp
xlat
mov
jg
adc
mov
mov
mov
and
cld
push
das
imul
int
pop
mov
cmp
leave
loop
or
jb
mov
pop
clc
test
jp
stc
movsb
push
or
sub
mov
cld
icebp
loopne
fadd
fcmovne
adc
inc
std
in
push
enterw
cmp
hlt
les
jp
pop
sbb
ds
or
icebp
notb
xchg
mov
dec
adc
rol
mov
sbb
out
movl
push
xchg
push
xchg
fistl
jp
and
out
iret
mov
sbb
cmpsl
jo
pusha
or
dec
lahf
fdivl
cmpsl
mov
xchg
mov
out
ss
sub
pop
vmread
loopne
jl
dec
xor
aas
or
ret
test
dec
adc
cld
stc
jp
sbb
pop
cs
sbb
lock
sub
jmp
pop
dec
hlt
ss
pop
sub
lret
das
add
jno
cltd
adc
jne
jmp
out
dec
sub
lahf
filds
adc
movsb
cmp
popa
es
inc
loope
xorl
test
mov
out
rorb
sbb
and
inc
adc
hlt
add
addr16
shrb
insl
outsl
or
push
fdiv
jae
xor
fcmovnu
clc
xchg
loopne
or
jle
add
dec
xchg
idivb
gs
ret
stos
mov
push
or
mov
add
sub
loope
fcmove
std
mov
xor
add
es
aad
push
xchg
xor
push
icebp
pop
daa
mov
push
inc
mov
movsb
jne
adc
mov
lea
mov
adc
xor
cltd
jle
clc
or
xchg
mov
sub
stos
pushf
or
aad
mov
jl
shrb
sarb
jns
pop
fmuls
repz
push
loope
hlt
or
jmp
xchg
jbe
sarl
stos
xor
cli
push
cmpl
push
lahf
dec
in
addr16
std
cmp
out
dec
pop
add
inc
mov
mov
or
ret
adc
data16
lahf
jge
jbe
push
adc
adc
sub
andl
inc
lcall
mov
adc
stos
addr16
mov
pushf
lcall
mov
les
cmp
pop
div
int3
sub
out
cmp
flds
lret
push
sbb
cmpsb
loop
adc
push
and
mov
push
mov
ljmp
cmc
arpl
andb
icebp
incb
xchg
pop
test
lds
lcall
out
in
loop
cs
jo
jmp
cs
repnz
mov
es
sub
stos
repnz
sbb
and
adcb
lea
push
push
jb
imul
push
sbb
mov
sub
cmp
pop
push
inc
cmp
push
add
int3
inc
fcomi
pop
loop
ret
scas
mov
jg
cmp
or
loopne
jne
jns
les
mov
sub
sbb
or
pusha
push
mov
mov
mov
clc
loopne
rcr
ror
cmp
sub
sbb
or
pusha
push
mov
mov
mov
clc
loopne
rcr
ror
cmp
sub
sbb
or
pusha
push
mov
mov
mov
clc
loope
rcr
ret
cmp
sub
sbb
or
pusha
push
dec
mov
cmp
jo
pop
das
daa
aas
aaa
pop
pop
mov
daa
pop
sbb
and
push
push
addr16
flds
cmpsl
xlat
ret
repz
out
pop
add
xor
and
push
push
inc
inc
jae
arpl
ret
xchg
addl
mov
jecxz
leave
pop
addl
aaa
in
inc
push
or
ja
addr16
xchg
out
movsb
aad
ret
sbbl
push
and
pop
push
daa
fdivs
inc
ja
pusha
in
mov
jle
fisttps
xchg
xchg
mov
sarb
or
mov
pop
jg
insl
pop
jecxz
js
mov
push
push
jb
outsb
mov
pop
adc
xor
and
pop
xor
pop
test
rol
jl
dec
out
pop
imull
dec
movl
push
jnp
dec
pop
jbe
push
hlt
mov
cltd
xchg
js
xor
xlat
sarl
std
sbb
xchg
arpl
push
int3
jcxz
lods
ffreep
into
aaa
sbb
ror
dec
dec
mov
mov
xchg
add
ficoms
idivb
and
jnp
mov
mov
xchg
mov
repz
add
xor
dec
daa
push
push
pop
inc
jae
xchg
adc
mov
ffree
repz
daa
cmp
xor
xor
out
ret
rol
sarl
mov
je
call
or
push
adc
stos
fadd
in
ret
cmpsb
movb
xor
inc
bound
jns
inc
jae
arpl
xchg
addl
xlat
ret
repz
out
pop
add
xor
and
push
push
inc
inc
jae
arpl
xchg
addl
xlat
ret
repz
out
pop
outsl
fidivrl
and
adc
pop
and
xchg
idivl
or
pushf
dec
push
jmp
mov
int3
sbb
push
data16
insl
dec
pop
jmp
mov
or
cmp
arpl
mov
fs
push
fwait
mov
pop
rcll
or
jge
imul
jno
ss
movsb
mov
sbb
jge
dec
shll
sbb
insb
dec
nop
push
and
pop
stc
ljmp
mov
shl
mov
je
imul
mov
xchg
or
push
loop
mov
shl
ficomps
xchg
inc
sub
cli
jb
xchg
sub
stos
mov
add
ja
push
mov
hlt
push
int
imul
lcall
xchg
or
xchg
data16
ds
add
mov
push
pop
test
or
inc
cmpsl
sti
mov
mov
dec
jnp
mov
repnz
pushf
inc
mov
lods
push
mov
jnp
loopne
xor
outsl
insb
es
cmp
push
mov
mov
das
sub
jecxz
enter
or
stos
xchg
push
shrl
fstl
lret
dec
jno
fs
xchg
fwait
adc
jecxz
shr
fwait
xor
mov
cmpsb
ficoml
push
mov
pop
fcos
call
inc
fcom
mov
xchg
ss
mov
or
mov
ret
mov
xchg
cmpsb
jp
shlb
lret
jl
jno
stos
pop
enter
adc
adc
and
sub
inc
mov
add
or
and
sahf
jae
rcrl
loope
push
ljmp
push
fbld
cld
mov
lods
test
es
dec
and
dec
cmp
xchg
scas
sti
and
xchg
iret
call
clc
xchg
adc
lea
mov
leave
rcrl
mov
stc
les
sbbl
cmpsl
arpl
movsl
sbb
frstor
or
out
sbb
loopne
pop
out
cmp
ret
sub
scas
sbb
jb
jb
jle
lds
mov
and
cmpl
sti
sbb
gs
mov
push
unpckhps
sub
push
sbb
fcmovu
xchg
cmc
into
es
and
dec
mov
pop
cwtl
imul
std
je
ljmp
aaa
mov
dec
push
mov
outsl
lods
icebp
ljmp
les
mov
xchg
dec
jg
imul
in
mov
test
inc
and
pop
adc
mov
jl
inc
cmp
sbb
dec
mov
sbb
jne
or
push
pop
loop
mov
or
jp
pop
ss
nop
mov
in
pop
push
jp
pop
cmp
mov
daa
and
jno
dec
xchg
sbb
mov
jle
mov
insl
jle
lretw
sub
jbe,pt
dec
bound
iret
sub
lds
cmp
and
cmpsb
ror
lahf
jl
mov
fiaddl
jl
or
sub
jmp
mov
insb
pusha
mov
fmul
ficoms
out
and
mov
les
aad
sahf
in
mov
sbb
jb
xchg
pushf
es
mov
jle
xlat
loope
imul
xchg
sahf
adc
mov
enter
jp
sub
lcall
xchg
aad
mov
int3
nop
xor
stc
incl
adc
mov
test
sub
jp
pop
cmpsb
xorl
lock
in
in
mov
jb
icebp
in
pop
mov
sarb
gs
movsl
or
iret
popf
inc
sbb
lcall
inc
testl
mov
repnz
int
adc
lea
lods
pop
insl
mov
into
adcb
incl
cmp
pop
jge
ret
dec
push
xor
xchg
inc
sarb
sti
mov
lahf
test
out
fimull
cltd
pop
push
sbb
jns
in
jnp
insl
inc
pop
xor
adc
sahf
into
test
mov
mov
popf
cwtl
pop
pop
sub
std
pop
xor
out
pusha
inc
push
cmpsb
or
in
adc
dec
mov
gs
aad
add
inc
push
imul
icebp
xchg
mov
or
dec
inc
gs
xor
jp
in
out
xlat
inc
rcrl
pushf
mov
jmp
sub
sub
arpl
dec
mov
adc
xchg
jno
test
mov
loopne
pop
stc
push
xchg
leave
mov
out
inc
test
aam
lds
in
cwtl
lret
add
mov
ret
cwtl
int3
outsb
mov
lea
loopne
cwtl
ret
jecxz
push
in
test
push
mov
fisttps
aas
mov
xor
inc
inc
sahf
xor
sbb
xchg
sub
lret
add
imul
push
jb
push
xorl
gs
cmp
es
aam
stos
pop
mov
lret
pop
jl
mov
or
jle
mov
test
jp
push
or
lods
sbb
ror
push
sbb
jne
pop
push
mov
leave
rcll
pushf
add
jae
cmp
sbb
dec
sahf
add
cmp
push
mov
sub
fimull
je
jle
clc
cmp
adc
loop
adc
scas
repz
lret
push
lods
repz
sahf
addb
xchg
test
add
jae
mov
lea
fadds
ja
shl
gs
sub
int
out
mov
stc
sbb
inc
lock
shl
lret
cmc
icebp
insb
sbb
sub
pop
xchg
scas
jg
dec
data16
push
cmp
roll
stos
add
add
mov
iret
sbb
pop
cmp
dec
mov
insl
and
adc
cmp
std
test
cmpl
shrl
or
fnstenv
mov
rcr
scas
and
or
in
lcall
add
mov
dec
xchg
repnz
sub
repz
push
stc
adc
ljmp
xor
dec
enter
xrelease
sbb
ret
jl
inc
in
inc
add
call
adc
jae
cmp
les
xor
pop
mov
stc
adc
test
repnz
xor
push
filds
adc
jno
mov
push
repnz
in
push
xchg
pusha
cmc
cmpsb
leave
sub
out
push
push
fwait
push
bound
lock
jb
mov
dec
and
sbb
fs
cltd
xor
inc
mov
push
dec
cmpsb
outsb
xor
int
or
cwtl
adc
xchg
sub
jecxz
rorl
push
push
call
cvtdq2ps
jne
jl
push
out
add
mov
jg
jne
arpl
lea
fbld
dec
pusha
push
arpl
stos
inc
push
cmp
popa
push
adc
out
cli
jmp
mov
es
std
mov
mov
sbb
mov
jg
cmp
js
xchg
imul
mov
aaa
dec
inc
fucomi
call
stc
cld
mov
jp
pop
hlt
push
add
or
in
cli
cmp
mov
mov
push
sbb
add
mov
std
jb
pop
xchg
cmc
xchg
xchg
jmp
fs
adc
stc
inc
das
out
add
ficoml
or
popl
sbb
lods
jmp
dec
pop
mov
subl
xlat
pop
cmpsb
into
pop
adcl
mov
xor
add
daa
sbb
cmpsb
xchg
nop
push
shlb
cmp
imul
imul
bound
repnz
mov
or
push
jmp
in
pusha
scas
cmp
stc
std
pushf
mov
dec
icebp
pop
scas
pop
push
mov
xchg
scas
data16
xchg
sbb
pop
ret
mov
add
adc
jne
jnp
cs
enter
dec
fimull
scas
jae
pop
lahf
inc
mov
push
cmpsb
nop
mov
xchg
or
jo
sub
das
add
dec
xchg
and
inc
jno
jo
into
mov
fstps
cmp
shlb
jnp
int
push
scas
hlt
inc
aas
jmp
cld
mov
flds
je
roll
mov
insl
sbbb
mov
test
push
jecxz
into
sbb
popa
ret
sbb
shlb
enter
repnz
mov
xchg
cmp
jmp
and
xor
andb
mov
int3
inc
arpl
shll
pushl
or
ret
cmpsl
scas
push
clc
daa
jb
mov
cmp
rcll
jmp
cmpb
lret
int3
iret
inc
push
lcall
scas
xchg
push
aad
adc
mov
inc
in
cli
scas
scas
mov
add
mov
sbb
popa
mov
sub
sbb
cmpsl
sub
fcoms
jg
shlb
rcrb
outsl
scas
scas
jp
imul
fs
cwtl
aas
bound
inc
sbb
cmp
test
fwait
lods
and
xchg
ja
sarb
cmp
movsb
movsb
movsl
cmp
rol
movsb
in
lahf
mov
repnz
test
nop
outsl
fiaddl
daa
push
jmp
dec
fsubrl
mov
mov
shrl
xor
pop
test
rclb
out
xchg
mov
ss
ss
mov
mov
xchg
or
or
aas
not
mov
sbb
into
add
dec
pop
xchg
icebp
push
inc
push
push
xchg
xor
lcall
decl
enter
scas
mov
test
scas
orb
adc
mov
scas
arpl
cmpsl
arpl
fwait
cld
std
mov
loopne
into
and
cmp
lock
or
sbb
lds
mov
or
push
dec
call
adc
push
mov
roll
jns
xchg
pop
push
sbb
push
cmp
stos
mov
or
mov
loope
push
in
push
test
add
mov
scas
loopne
in
mov
scas
mov
clc
cmp
hlt
and
in
push
xchg
add
push
mov
jno
test
out
fcompl
pop
jno
lret
es
ljmp
cmp
or
addr16
out
incl
jmp
test
test
mov
popa
cltd
mov
jae
push
aas
adc
clc
dec
in
sahf
mov
xchg
out
testl
lahf
jge
insb
je
mov
rolb
mov
push
mov
sbb
add
sub
mov
mov
add
push
fidivl
mov
aam
ljmp
dec
or
lret
xor
push
sub
inc
mov
push
imull
add
push
int
jo
fninit
push
das
adc
lods
ret
jae
cwtl
ret
jno
mov
and
es
push
pop
dec
cwtl
push
adc
mov
sub
sub
mov
divb
or
or
lahf
lods
xchg
cmp
leave
and
jno
lea
insl
lods
rcrl
mov
jp
jae
jmp
shll
jle
push
lea
sub
mov
or
pop
fildl
inc
iret
int3
sbb
scas
cli
push
lock
ror
pop
ljmp
orb
sub
sbb
daa
call
adc
pushf
sub
hlt
lea
xor
les
aas
mov
pop
fs
fistpl
fwait
cmp
jg
sbb
fidivrs
arpl
sub
mov
daa
in
jb
mov
pop
xor
jbe
or
stos
scas
sbb
jg
sti
rcr
jb
movlps
scas
sbb
aam
adc
mov
inc
jecxz
pop
mov
faddp
pop
mov
test
jecxz
sub
out
das
leave
and
fcomip
and
xor
add
sbb
lahf
mov
movsb
mov
inc
rcrb
cmpsl
mov
jae
jg
outsb
sbbl
iret
push
int3
iret
ficomps
xchg
and
push
ljmp
push
nop
jl
lret
inc
or
out
sti
out
mov
sub
outsl
mov
dec
testl
movsl
cmp
or
rorb
mov
ja
sub
loope
mov
sub
or
xor
jge
lret
dec
fs
pop
mov
sbb
outsl
cmpsl
xor
adc
xor
ja
dec
push
fildl
imul
fstp
xor
cmpsl
scas
add
jbe
mov
xor
and
inc
lock
push
popa
sbb
test
test
ret
out
xor
imul
adc
imul
repnz
and
dec
mov
inc
cmp
out
mov
hlt
into
sub
subl
mov
xor
sub
jnp
xor
cmc
stc
mov
add
sub
jge
imul
xchg
pop
hlt
sbb
pushf
out
les
inc
shlb
cmp
xchg
mov
cltd
repnz
and
divb
mov
stos
fdiv
xchg
testb
hlt
daa
stos
or
add
inc
sbb
gs
mov
or
ja
dec
add
into
fcomps
cmc
add
dec
adc
imul
outsl
test
pop
inc
popf
mov
cmp
push
jp
rcl
mov
insb
push
mov
cmp
cld
lock
mov
lods
cmp
cmp
mov
pop
sar
cld
enter
leave
jbe
lods
xchg
or
stc
repz
out
jbe
push
sub
sbb
repz
movl
and
inc
in
je
cmp
jg
pushf
sbb
jge
pop
aam
lcall
hlt
test
and
into
iret
jecxz
push
mov
fidivs
sahf
addl
xor
int3
test
cwtl
je
lds
movl
cmp
cmp
into
leave
into
sub
sub
jl
sbb
sub
in
and
add
or
dec
imul
cmp
imull
and
sbb
stc
call
dec
sub
jmp
mov
movsl
push
repz
stc
and
xlat
push
push
adc
cmp
xchg
adc
or
sti
mov
mov
idivb
cmp
cmpsl
pop
sarb
sti
push
push
mov
js
stos
mov
in
iret
lds
mov
js
cmpsb
pop
push
and
jmp
xor
push
test
fstps
jle
add
nop
aaa
jne
dec
repnz
xchg
lock
or
aas
push
fdivs
sbb
mov
ret
cmp
add
cld
leave
add
mov
cmp
xchg
bound
ss
out
pop
daa
inc
fsubrl
mov
sbb
pop
sbb
cmp
cmp
in
jbe
pushf
enter
leave
inc
out
lret
test
or
les
arpl
int
or
push
jae
mov
fwait
out
insb
xor
jmp
sub
mov
mov
mov
ret
adc
call
incl
pop
jge
int
addr16
xor
xchg
push
mov
and
gs
sarl
lock
push
mov
clc
xchg
subl
sbb
ret
notb
dec
lods
repz
xchg
mov
jae
leave
jp
or
xor
lods
adc
and
in
arpl
adc
icebp
sahf
xor
pop
ficompl
loope
xchg
rolb
or
addr16
sub
mov
sub
mov
addb
xchg
test
inc
scas
pop
mov
sub
ss
aam
adc
stos
jo
popf
mov
pop
hlt
inc
add
mov
jo
sahf
fcomi
es
jno
add
leave
repz
dec
mov
dec
lods
js
in
mov
and
repz
out
cld
test
push
dec
fwait
push
push
ret
std
mulb
stos
mov
outsl
and
sub
icebp
iret
cmpsl
xchg
mov
ja
cmp
and
mov
push
leave
or
push
and
lret
mov
test
sub
call
pop
mov
sbb
sti
and
sub
imul
loopne
punpcklwd
xor
inc
mov
adc
xchg
popf
stc
rclb
in
jg
mov
pop
mov
in
into
mov
sbb
adc
pop
icebp
les
push
and
xchg
mov
in
inc
jg
lcall
pop
mov
sub
jns
pop
xchg
mov
in
add
test
cmp
add
mov
mov
popa
mov
ret
fidivs
lcall
test
add
out
decl
and
leave
xchg
imul
lock
dec
cmpsb
sub
sarl
outsl
fneni(8087
or
adc
sub
lcall
and
leave
std
lcall
push
xor
xor
push
jbe
xor
xor
or
push
dec
mov
movl
pop
jl
inc
add
lock
mov
cmc
mov
mov
das
stos
jb
repnz
mov
mov
mov
push
ror
cs
add
aaa
rcrl
testl
adc
repz
testb
insb
and
fidivl
adc
pop
xor
cli
adc
cli
or
out
pop
imul
dec
sbb
cld
cmpsb
loope
roll
or
pop
or
xchg
inc
call
cmpsb
jecxz
mov
daa
xor
sbb
mov
scas
push
mov
mov
scas
mov
nop
xchg
or
or
mov
es
push
mov
jns
inc
cmc
mov
cmp
dec
sub
jecxz
xchg
sahf
arpl
out
mov
and
lret
jl
bound
arpl
outsl
mov
pop
std
xchg
inc
jge
popa
mov
nop
jmp
sub
mov
sbb
rorl
pop
jb
scas
xchg
push
cmp
aas
pushl
jo
xchg
cmp
sbb
lods
and
or
insl
subb
adc
mov
hlt
insb
es
xor
mov
ret
mov
push
repz
ja
dec
dec
inc
sub
sbb
mov
jae
mov
enter
aam
jmp
xor
mov
inc
xchg
insl
adc
jno
ljmp
mov
adc
pop
insl
loopne
outsl
pop
in
outsb
fldt
scas
fidivrl
mov
adc
jnp
lcall
mov
insl
pop
and
test
addr16
mov
mov
pop
xor
lods
pop
mov
lahf
ljmp
add
int3
popa
orl
mov
add
imul
fcomps
lods
xchg
dec
lcall
cmp
or
int3
in
cmpb
mov
packssdw
jl
mov
mov
dec
sbb
dec
sbb
dec
jne
mov
xchg
test
adc
jb
into
ljmp
aam
in
or
inc
imul
cld
mov
cmp
and
mov
pop
test
push
shr
adc
loop
xchg
push
adc
cmp
jno
mov
jg
mov
es
movsl
push
stc
and
cmp
pop
and
mov
xchg
mov
sub
lea
mov
push
call
pop
in
fwait
out
adc
mov
push
cli
pop
jb
hlt
cmp
es
xchg
mov
gs
lods
imul
dec
adc
jecxz
xchg
scas
mov
subb
and
shll
pusha
sbb
call
xchg
or
or
insb
xor
push
into
out
push
mov
cmpsl
xlat
cmp
xchg
inc
stos
cwtl
roll
subb
add
rcrl
mov
jmp
mov
lods
test
daa
and
jno
xor
pop
out
popa
sbb
sbb
lea
cwtl
ret
sub
jl
dec
ja
add
dec
xchg
push
outsl
insl
or
outsb
in
fistpl
inc
jg
lret
and
push
adc
xchg
ja
mov
add
or
and
dec
shrb
mov
sub
cs
scas
loop
sbb
popa
xor
adc
aas
pop
subl
pop
fisubl
xchg
sahf
xchg
push
add
pop
jg
sub
cltd
lds
shll
sbb
andl
nop
ds
mov
lcall
call
loope
inc
in
inc
aaa
and
mov
push
cmp
jbe
add
inc
xor
dec
jle
fimuls
xchg
pop
xchg
lea
lcall
mov
cmp
jmp
push
stos
mov
arpl
mov
call
sti
add
add
lds
ja
std
and
fdiv
mov
leave
xor
adc
je
stos
mov
ja
scas
push
mov
loop
and
or
movsl
xchg
mov
push
ret
getsec
aas
daa
push
push
inc
inc
jae
arpl
xchg
addl
xlat
ret
repz
out
pop
add
xor
and
push
push
inc
inc
jae
arpl
xchg
addl
xlat
ret
repz
out
pop
add
and
and
push
push
inc
inc
jae
bound
xchg
addl
xlat
fcmovb
div
shl
or
das
pop
mov
push
push
inc
jae
jecxz
xchg
xchg
jl
sbb
dec
cmp
sbb
adc
lock
sbb
enter
add
add
pop
add
add
push
add
sbb
add
and
aad
sub
js
test
or
or
add
add
add
add
add
add
add
add
add
and
popf
add
pop
push
add
add
add
add
add
add
movsb
add
add
add
add
add
add
jge
xor
add
add
add
add
add
add
aad
test
add
mov
add
add
inc
add
add
add
add
add
popf
add
mov
add
add
adc
inc
add
add
add
add
add
add
add
add
add
in
add
add
add
jb
in
inc
add
add
xchg
xor
add
xchg
add
add
add
add
add
add
or
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
jle
sbb
inc
add
movsl
add
test
add
add
add
inc
add
add
add
add
jl
or
add
add
add
pop
mov
add
add
add
add
add
add
add
add
add
pop
add
das
add
add
pop
add
add
add
sub
jmp
in
add
adc
adc
add
add
loop
pop
add
add
lcall
add
add
add
add
add
lods
add
add
add
add
add
add
pop
add
add
mov
dec
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
jbe
pushf
add
add
cmp
pusha
add
add
add
add
add
jbe
and
and
jno
fiadds
mov
add
add
add
add
add
add
add
add
xor
movsl
add
add
incb
aas
add
add
sub
addl
add
mov
push
add
add
add
add
add
add
add
add
xor
and
cmp
sub
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
xor
inc
add
dec
add
add
add
add
add
add
add
cmp
xor
add
in
add
add
mov
mov
push
add
or
mov
add
add
add
add
push
add
push
add
or
pop
jo
pop
add
add
add
roll
add
add
jns
sbb
hlt
outsb
outsb
pushf
inc
lds
adc
cmp
rcll
sub
xor
mov
adc
inc
push
pop
hlt
enter
and
shll
mov
add
push
bound
mov
push
add
push
in
icebp
sub
loopne
mov
push
cmpsb
xlat
pop
lret
or
pop
xor
rorb
loop
mov
idivl
das
dec
sti
or
adc
xor
add
mov
fdivs
out
mov
sbb
push
xor
lahf
pusha
stos
pop
es
adc
in
cmp
nop
pop
mov
add
xchg
push
js
jno
testb
add
add
insl
add
aas
inc
sahf
inc
stos
adc
xchg
and
enter
and
fisubs
sahf
popf
xor
dec
and
cmp
xchg
inc
push
stc
aaa
adc
leave
test
cwtl
cld
test
mov
hlt
mov
push
push
outsl
shl
fsubl
pop
clc
and
mov
mov
inc
test
or
addb
and
inc
mov
addb
dec
adc
sti
xchg
bnd
dec
cmp
inc
in
int3
movsb
lahf
fcoms
cmpsb
mov
jl
jae
xchg
push
mov
sub
cmpsb
fwait
push
ja
insl
xchg
mov
xchg
dec
cli
mov
mov
cmc
xor
inc
sar
jl
xor
xchg
insl
data16
dec
int
std
push
rorb
fdivr
shl
jle
test
or
out
fmull
int
xchg
xor
andb
and
sbb
aad
popf
xor
movsl
xchg
push
in
cmpsl
pushf
mov
fbld
push
pop
popf
adc
loop
push
data16
vphadddq
lea
popf
push
fnstsw
clc
aas
sar
pushf
xor
clc
push
cmp
inc
cmp
or
ret
loopne
lds
imul
clc
and
add
aas
out
pop
push
std
pop
fcomps
jecxz
push
sti
mov
mov
inc
les
lods
mov
push
jo
mov
jp
subb
cmpsl
cmp
jecxz
sub
jp
mov
fidivrl
xchg
push
mov
mov
movsl
dec
ss
dec
mov
mov
mov
push
iret
ret
lret
pusha
jle
in
jnp,pt
jnp
je
cmpsb
cmp
mov
pushf
and
ror
jns
negb
mov
std
mov
cmp
aam
push
dec
xor
cmc
or
sbb
out
mov
sbb
jno
push
xchg
xchg
mov
push
orl
adc
bound
xchg
xorl
stos
cwtl
hlt
fs
cmp
test
jl
mov
adc
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
