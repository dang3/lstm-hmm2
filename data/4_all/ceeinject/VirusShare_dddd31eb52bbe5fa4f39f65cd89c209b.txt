fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
out
push
dec
pop
test
nop/reserved
imul
push
out
repnz
iret
fdivrs
cwtl
cwtl
jg
outsl
js
dec
dec
pop
aas
sub
cmp
or
jge
call
iret
fdivrs
mov
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
stos
mov
out
in
in
loopne
outsl
or
sbb
cmp
in
cmp
jle
in
add
xchg
sahf
xchg
mov
cmp
enter
sub
push
cmp
mov
cmpb
clc
adc
xchg
inc
int
mov
ja
cli
js
mov
cmp
notb
mov
daa
add
test
outsl
insl
jg
mov
cmp
add
clc
out
adc
pop
fimuls
daa
pop
pop
mov
test
or
pop
push
xlat
mov
prefetcht1
aaa
iret
fsubr
sti
test
loopne
js
xor
aad
lret
addr16
out
leave
xchg
add
cmp
stos
mov
scas
call
and
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
add
or
sbb
dec
pop
insl
push
xchg
cwtl
pop
loope
fwait
stos
test
fsub
push
cli
sti
std
and
adc
add
cmp
dec
jge
pop
ja
lods
lea
mov
int
cs
in
nop
int3
or
inc
sub
das
cmp
or
sbb
call
iret
fdivrs
mov
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
push
shlb
sbb
mov
call
mov
clc
roll
dec
mov
push
push
push
add
push
fsub
xorl
loopne
insb
test
jno
icebp
aad
adc
dec
jecxz
cli
rolb
mov
fidivl
sbbl
sbb
push
cwtl
loopne
popl
cmp
mov
push
int3
adc
movsl
scas
pushf
iret
or
stos
ds
push
or
xor
sub
movsl
or
iret
fsubs
dec
loopne
inc
xor
ja
stos
imul
leave
mov
test
add
xor
pop
bound
sub
push
and
insl
test
mov
sbb
cmpsb
dec
aam
push
add
iret
dec
test
arpl
xor
insl
jbe
sub
dec
xchg
jbe
scas
rcll
push
jb
pop
dec
dec
lea
xor
rclb
cmp
lea
xchg
sarl
out
xchg
sti
mov
repnz
je
jl
mov
test
or
gs
lcall
loop
out
mov
aad
mov
inc
addr16
jg
shlb
cld
sub
dec
fcompl
mov
jl
dec
addr16
sub
stos
lods
jmp
mov
sub
rcll
add
scas
inc
mov
sbb
inc
sub
adc
das
in
adc
push
ss
fbstp
push
xchg
push
mov
in
test
gs
sti
loope
dec
or
fwait
es
cmpsl
pop
lret
mov
xchg
pushf
ljmp
cmpsb
xchg
sub
xor
out
mov
stos
add
js
mov
mov
or
int
pop
dec
push
inc
mov
test
repnz
or
cmp
mov
mov
lea
in
int
push
and
out
add
jo
pop
jb
push
pop
add
pushf
outsb
aas
jp
test
push
loopne
ss
inc
sub
loop
idivl
loop
cmpsl
mov
lods
mov
mov
pop
clc
jle
inc
lock
cmp
dec
loope
dec
mov
mov
aas
enter
mov
or
test
jb
jb
fistl
push
mov
js
pop
jg
sbb
mov
add
aaa
inc
add
movl
addb
sub
jb
push
mov
gs
cmp
imul
jnp
push
iret
mov
out
and
testl
cmp
scas
cwtl
push
sub
in
xorb
jg
insl
stos
adc
fbld
push
packuswb
lahf
add
mov
sbb
outsl
xchg
stos
mov
hlt
aad
lcall
mov
push
mov
pop
les
test
test
xor
sub
xor
mov
mov
jle
aaa
int
mov
push
and
in
mov
shlb
out
lods
pushw
xorb
cld
fisubl
xlat
inc
sahf
xchg
jbe
dec
push
sti
mov
movsb
xchg
inc
imul
mov
cmp
xor
fyl2x
mov
inc
push
lds
push
push
mov
addr16
and
pushf
dec
push
iret
cmc
push
jbe
movsl
dec
or
outsb
cmpsb
push
sub
cmpsb
out
cmp
gs
mov
into
fdiv
and
mov
loope
gs
or
cmp
adc
push
xor
mov
andb
mov
lds
xchg
sbb
or
sti
leave
in
or
pop
mov
cmpl
xchg
nop
mov
out
fs
jb
dec
ss
mull
stos
lea
test
punpcklbw
in
in
jbe
sub
and
mov
inc
sti
cli
idivl
cmp
mov
jae
xchg
pop
pop
das
es
ret
enter
pushf
pop
pop
adc
xchg
in
shl
push
pop
out
data16
scas
imul
call
or
jo
loopne
test
cmc
adc
push
rorb
shl
push
mov
jmp
jge
lret
jno
and
mov
test
loopne
iret
cli
lock
aam
gs
lock
nop
pop
decl
sbb
mov
inc
roll
cmp
int
cwtl
cld
cltd
lods
fsubs
movsb
outsb
cmp
dec
xor
std
loope,pt
adc
mov
mov
es
push
xor
push
fs
idivb
xchg
mov
sub
mov
ret
push
dec
ror
jb
ds
sti
arpl
mov
fnsave
popf
out
push
jne
test
ret
xor
xchg
sub
jecxz
sbb
sub
mov
sbb
insb
aaa
xchg
adc
or
in
push
adcl
cmc
test
subb
xchg
lods
aad
movq
mov
xchg
leave
push
push
mov
fstpt
sbb
insb
and
gs
jg,pt
push
out
rcll
adc
out
insb
adcl
mov
xlat
sbb
xchg
push
repnz
and
aaa
subl
das
sbb
in
add
popa
mov
mov
xor
inc
jb
addl
insb
sti
push
xor
lahf
movsl
dec
dec
jne
sarl
lds
inc
sub
and
mov
add
pop
roll
mov
fisubrs
shll
fdivrl
in
call
push
xchg
fisubrs
sbb
inc
mov
shrb
sti
ja
hlt
push
rorb
xchg
sti
and
icebp
sbb
inc
xor
sbb
mov
fdivp
jo
xor
inc
push
out
jge
push
data16
sub
sub
mov
push
jo
fdivrl
iret
add
cli
adc
nop
and
mov
bound
push
int
pusha
dec
sbb
in
pop
std
pop
adc
inc
xor
jae
gs
inc
jge
pop
insl
add
mov
lods
shl
dec
jb
xchg
mulb
call
add
add
ror
sub
imul
push
dec
jp
xor
sbb
hlt
fcomps
movsl
mov
cmp
sti
lcall
lods
cmp
sbb
sbb
fidivrl
dec
cwtl
call
or
test
aas
push
dec
or
or
ret
jg
addr16
mov
add
cmpsb
fnstcw
out
mov
sahf
aaa
xchg
movsl
roll
loopne
inc
pop
adc
sbb
repnz
mov
or
imul
push
jns
push
jne
cwtl
jmp
and
js
mov
cmp
clc
jp
fcom
push
dec
cmp
push
je
sub
test
cmp
jl
push
mov
aam
cmp
mov
shufps
push
xor
sti
mov
push
cld
ds
into
addr16
cmp
push
loop
cmpsb
xorl
mov
shll
jmp
pop
jg
rorl
push
int
mov
sub
cmp
cmp
in
insb
out
fidivl
cmc
pop
and
jno
cwtl
dec
lahf
inc
inc
xchg
int3
inc
dec
or
sahf
shll
push
rclb
pop
pushf
adcl
fadds
or
inc
lahf
xchg
push
out
dec
popl
pop
and
mov
dec
out
adc
fsubl
lods
sub
mov
subl
push
gs
mov
test
xor
push
inc
sbbb
shl
loop
movsb
lods
rcll
testb
xor
or
dec
sbb
mov
push
dec
jmp
inc
sub
cmp
stos
in
subb
int3
sti
mov
fwait
mov
mov
jle
inc
and
sub
xchg
filds
cltd
add
mov
ljmp
in
cmp
lret
jns
pop
nop
jae
lock
jmp
in
fildll
lret
cmc
cmp
mov
mov
push
cmp
mov
int
addr16
cmp
leave
cli
push
fsubl
fmulp
dec
arpl
scas
mov
ror
js
aaa
mov
pop
or
mov
push
adc
sbb
mov
adc
out
inc
outsl
or
pop
or
into
shl
stos
mov
mov
addl
add
pop
mov
pop
mov
and
push
sbb
cmp
dec
or
insl
into
data16
xor
pop
out
dec
sub
adc
imul
cltd
add
into
data16
cmp
cwtl
push
es
push
and
in
lock
bound
leave
jmp
ja
lea
test
push
shrl
loope
pop
lea
mov
lea
dec
mov
leave
addr16
push
rcrl
insl
xchg
std
sub
sub
sub
mov
adc
add
add
out
xlat
int3
and
test
adc
xchg
inc
mov
jb
rcrl
mov
int3
sub
das
in
stos
push
ja
mull
push
sub
xchg
push
div
xchg
lahf
out
and
xor
orb
xchg
and
and
pop
pushf
imulb
icebp
dec
inc
jne
or
cwtl
enter
sbb
cmpsb
jg
clc
popf
and
cmp
out
sub
dec
aam
les
push
or
mov
xchg
pop
movsb
xchg
arpl
inc
fidivl
test
test
pop
mov
stos
aam
jmp
push
push
and
hlt
ds
pop
mov
and
fsubs
std
pop
push
cmp
mov
mov
push
adc
jb
mov
les
fstpl
adc
addb
sub
cmp
jb
adc
test
sub
adc
pop
pusha
or
xchg
into
jnp
lds
int
pop
mov
int3
gs
cwtl
adc
bound
fstl
out
and
lea
or
jae
fisubrs
sub
mov
lds
xchg
mov
pop
add
mov
inc
lock
sti
xchg
insb
or
pop
mov
xor
sbb
out
jl
xchg
mov
cmpsl
pop
jp
in
dec
rol
roll
adc
dec
mov
mov
push
adc
std
outsb
cmpsl
shrb
or
mov
mov
xor
mov
dec
push
fnstsw
dec
pop
sub
int3
mov
cmp
adc
sub
out
iret
lods
mov
call
icebp
int3
sub
or
hlt
jae
into
mov
dec
lret
ret
xor
stc
mov
jmp
pop
cmp
idiv
nop
sub
addr16
cmc
negb
mov
stc
adcl
test
insl
push
xchg
outsb
fstpt
shll
ss
add
ja
mov
push
adc
repz
loopne
push
inc
stc
lahf
pop
adc
mov
fisubs
js
push
lods
je
mov
sbb
cmovb
jb
push
xchg
rcrb
mov
js
or
scas
cli
or
or
or
outsl
or
cwtl
scas
sbb
lea
push
dec
lret
ret
ja
xchg
sub
sbb
mov
pushl
out
push
jae
fs
insl
aaa
xor
cmp
push
imulb
push
jmp
adc
sub
adc
and
aaa
add
and
fistl
or
dec
bound
ret
mov
fiadds
lds
loop
sahf
arpl
pop
mov
mov
mov
arpl
aaa
dec
fadds
push
push
pushf
test
iret
lret
aam
movsl
insb
pop
cmp
push
jge
pop
dec
inc
leave
sub
data16
mov
movsb
sub
ss
lods
es
mov
mov
or
and
mov
and
hlt
jne
dec
cmpsb
mul
adc
cmp
mov
dec
mov
push
push
and
cmp
out
cmc
inc
aam
pop
mov
mov
mov
icebp
mov
sub
jno
addr16
fadd
xchg
jbe
adc
ljmp
add
add
add
sbb
dec
push
add
inc
mov
adc
cmpsl
inc
cmpsl
cmovg
imul
push
test
jp
std
sbb
adc
enter
pop
and
pop
adc
lret
cwtl
sub
movsl
sbb
pop
pop
into
add
push
mov
mov
inc
int3
add
mov
push
outsl
pop
shll
or
xchg
movsw
std
adc
in
sub
aaa
mov
push
stos
fldcw
push
test
fldt
xchg
sbb
pusha
or
cmpsb
adc
push
cmp
addr16
lods
dec
mov
aam
bound
cltd
sub
mov
mov
test
or
pop
push
cmpsb
rclb
jno
int
mov
imul
jg
rolb
and
sarl
inc
jno
pop
pop
and
or
and
push
add
andb
mov
or
xor
sbb
push
sub
shlb
aas
std
sbb
mov
sbb
xor
in
xchg
scas
rcll
inc
cmp
sbb
rcll
cmp
xchg
xchg
mov
int3
sbb
fstpl
add
in
mov
sbbl
in
mov
pop
std
ss
inc
mov
inc
aam
xor
fdivrs
aaa
cwtl
sub
pop
mov
stos
imul
mov
adc
std
enter
fdivs
leave
adc
repnz
push
mov
aam
push
sbb
aaa
into
pop
xor
subb
ljmp
mov
adc
sahf
icebp
mov
dec
in
lret
adc
pop
and
rorb
movsl
or
lcall
jge
xor
clc
pop
imull
add
mov
mov
std
push
repz
pop
xor
push
mov
adc
ret
xor
mov
int
mov
lea
pop
andl
mov
cld
mov
lea
xchg
adc
pop
incb
imul
out
inc
add
addb
movsl
and
sbb
dec
add
ds
imull
test
pusha
jbe
notb
pop
cwtl
or
dec
jno
js
test
dec
mov
xor
pop
mov
stos
out
cmpsb
stc
xchg
cmp
loop
mov
rolb
sub
jecxz
add
jb
inc
in
xchg
insb
scas
int3
in
dec
xor
outsb
sahf
pushf
mov
ret
clc
clc
cld
pop
mov
lret
push
ds
sahf
xchg
pop
fsts
arpl
or
test
sbb
fsubrl
or
popa
cmp
sbb
jmp
inc
jo
inc
fistpl
into
lods
xor
loopne
and
sub
xlat
and
shl
ja
fnstsw
daa
sbb
cld
jb
insb
rorb
push
and
lods
insb
jle
stos
sub
xor
mov
scas
and
lods
jnp
fs
adc
sti
daa
cmpsl
jp
push
jg
add
stos
sbbb
xor
cwtl
int3
adc
fcomi
nop
sbb
in
and
into
xor
jge
cld
mov
mov
enter
lahf
pusha
into
inc
call
out
mov
xor
sbb
fnsave
or
faddl
mov
push
dec
jp
mov
int3
lock
pop
sahf
jle
pop
jge
xchg
mov
popl
mov
cmp
pusha
cli
loope
mov
into
inc
das
test
dec
xchg
ret
cld
into
jg
cmc
or
mov
lods
inc
add
movsl
test
mov
push
lock
das
out
mov
sbb
xchg
or
movsb
scas
or
mov
mov
pop
mov
sub
cmpsb
inc
and
test
push
jge
cld
pop
lcall
pushf
scas
dec
ficomps
mov
jb
out
fisubrl
jle
mov
xchg
inc
cld
pushf
ret
nop
movl
movb
sub
je
push
fwait
xchg
xchg
test
shlb
pop
adc
ja
std
jb
pop
inc
hlt
ljmp
lret
and
and
fcompl
fsubl
jns
pop
int3
mov
imul
sbb
adc
pop
pop
add
jmp
clc
mov
fsub
aas
fists
or
mov
or
movsl
xchg
pop
mov
addl
fsubrl
ret
pushf
test
push
popa
or
bound
push
push
test
or
add
rcrb
mov
rorb
aaa
push
scas
lret
xchg
pop
stos
push
mov
jge
jne
aam
pusha
dec
pop
mov
cs
jb
fcompl
rcll
cltd
mov
mov
mov
jae
inc
mov
jl
mov
cmp
jnp
xchg
dec
jns
sbbl
icebp
and
cmp
sub
and
sub
sub
inc
adc
jmp
icebp
test
cmp
xchg
sbb
xor
xchg
pop
ss
loope
shr
pop
arpl
rcll
add
push
adc
sbb
xchg
fcmovb
and
xor
xchg
mov
loop
inc
mov
dec
mov
mov
lcall
or
mov
add
adc
jns
aad
jno
pop
div
in
xchg
dec
add
fwait
jnp
aaa
les
adcb
lods
fistpl
mov
call
insb
cmpsl
xor
setle
mov
int3
xchg
inc
aam
psubusb
inc
je
mov
xor
jle
add
or
loope
inc
div
mov
bound
xor
out
pop
pop
cs
and
mov
movsl
jns
mov
lret
lds
cmp
dec
std
pop
lods
notb
inc
adc
pop
inc
pushf
mov
sub
jno
mov
mov
and
pop
sub
test
dec
jle
lea
lcall
mov
in
xorb
fidivs
loop
scas
mov
addr16
mov
cmp
xchg
lahf
inc
pop
jbe
push
cmp
imul
dec
sbb
dec
subl
xor
dec
push
mov
pop
pop
xor
repz
lret
gs
jmp
xchg
push
stos
imul
orb
popf
aad
std
aaa
xchg
xorb
jmp
jmp
test
stc
adc
iret
or
test
inc
lods
push
jno
mov
jns
mov
cmc
iret
dec
into
fisttpl
and
mov
sbb
push
adc
rcll
insb
push
inc
lcall
sbb
lea
xchg
inc
ja
rcl
rorl
push
push
cmp
inc
xchg
push
outsb
int
fucom
stos
lcall
int3
clc
cmpsb
shrb
js
sbb
scas
adc
inc
or
jle
pop
fstps
mov
xchg
mov
imul
mov
mov
mov
aad
lods
pop
sarl
shll
mov
lods
mov
cmc
mov
and
call
pusha
pop
or
dec
push
fisttpl
mov
dec
sahf
mov
push
test
sbb
cmp
mov
add
sub
adc
dec
bound
je
push
dec
fs
repnz
lret
outsl
jmp
push
mov
mov
aas
test
pop
sbb
cmp
insl
dec
test
sbb
xchg
enter
push
test
mov
in
hlt
scas
int
push
bound
cmp
lcall
jle
xchg
daa
lea
ss
jge
nop
inc
popf
insb
lret
pop
clc
jbe
push
jecxz
jno
outsb
rolb
mov
inc
and
cli
sbb
fimuls
inc
and
ret
orl
xor
and
out
sub
jno
lret
push
xor
cwtl
mov
sbb
sbb
push
cmpsb
enter
adc
ss
repnz
jp
mov
into
and
xchg
cmp
lret
mov
out
sbb
lret
mov
mov
jne
dec
sarb
mov
push
sahf
pushf
ds
mov
jb
lods
push
jmp
aaa
pop
pop
mov
cmpsl
jbe
out
stos
or
outsl
pop
icebp
cmp
js
pusha
sub
addr16
cs
inc
loope
loop
imul
add
xchg
popf
dec
xchg
mov
xor
icebp
shrb
mov
dec
mov
jl
mov
sub
data16
dec
jg
sub
push
addl
lds
loopne
lock
pop
andb
in
sbb
cwtl
fs
sarb
pop
push
and
or
sbb
sarl
aas
lcall
lahf
push
pop
dec
pusha
mov
jp
test
filds
jne
into
xchg
jo
push
adc
in
pusha
and
jecxz
mov
adc
and
mov
aas
xor
mov
iret
adc
and
aaa
xchg
cli
jp
sub
int
or
push
cmp
pop
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
js
dec
dec
pop
aas
sub
cmp
or
sbb
call
iret
fdivrs
mov
js
dec
dec
pop
aas
sub
cmp
or
fdivr
call
iret
scas
enter
pusha
ja
addr16
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
loop
repnz
push
cwtl
lock
jb
inc
imul
adc
adc
loop
bnd
mov
cltd
xchg
cmpsl
jb
jb
inc
push
pop
dec
and
add
add
adc
sti
pop
jmp
fiaddl
mov
lcall
dec
sbb
push
dec
pop
imul
mov
movsb
lods
icebp
mov
push
inc
sbb
in
mov
sub
xor
arpl
or
mov
jbe
xchg
mov
sub
jbe
xchg
in
inc
sbb
adcb
imul
jp
fbstp
add
adc
jecxz
loop
or
test
lods
mov
jge
xchg
add
cld
jae
ja
lods
dec
movsb
mov
adc
das
jg
dec
and
ss
mov
jne
pop
mov
inc
mov
xor
push
adc
test
pop
jno
lcall
popl
and
popa
insb
add
adc
jne
leave
ret
leave
mov
mov
sbb
push
pop
pop
dec
jne
add
adc
mov
xchg
xchg
sbb
iret
in
xchg
into
bound
push
sbb
cld
sub
jle
inc
jo
jg
lea
mov
sti
xor
mov
inc
or
jns
jbe
sub
jp
mov
movsl
ljmp
mov
jb
inc
pop
push
dec
and
xor
add
adc
loop
bnd
mov
cltd
xchg
mov
jb
inc
pop
push
dec
and
xor
add
adc
loop
fnstsw
into
mov
inc
xor
scas
enter
fbld
dec
inc
jl
dec
xor
adc
pop
add
pop
xor
divl
out
stc
xlat
dec
sbb
incl
movsl
add
into
gs
push
addl
insb
push
sbb
push
clc
sbb
jbe
fs
mov
inc
sbb
fldcw
add
cmp
mov
testl
or
aam
data16
mov
lcall
imul
in
mov
xchg
out
out
ret
das
out
add
ds
mov
repz
mov
jmp
addb
das
loopnew
pop
sbb
insl
sti
adc
push
fxch
sbb
stos
test
cmc
in
inc
mov
sbb
cmp
pushf
xchg
lock
mov
adc
sub
xor
repz
xlat
mov
jo
cltd
pop
sbb
lcall
mov
enter
fwait
xlat
dec
pop
dec
in
push
rcrl
pop
sub
outsb
push
jbe
adc
test
inc
jae
fiaddl
xchg
int3
repnz
test
mov
mov
push
fs
pop
and
fists
xor
and
scas
sub
push
cs
or
aam
aad
sbb
aas
sahf
scas
dec
jge
pop
test
jle
jbe
and
mov
xor
out
sub
and
sbb
out
lods
adc
xchg
or
fwait
jg
dec
fdivs
sub
pushl
movsb
pop
mov
rcll
rorb
dec
jmp
lcall
out
ficoms
sbb
fldenv
jb
inc
cmp
cmp
mulb
pop
and
out
lock
inc
rcr
cmpsb
or
sbb
lea
movsl
adc
gs
or
lea
addl
add
icebp
ljmp
enter
adc
ficomps
leave
mov
cmp
and
inc
outsb
in
out
adc
xchg
ss
jle
repnz
sub
and
sub
out
and
call
mov
or
icebp
xchg
imul
push
gs
and
xchg
jmp
pop
mov
imul
sbb
nop
sbb
movsl
pop
mov
repnz
enter
sarl
imul
xor
add
fisubl
pop
jg,pt
mov
mov
mov
cli
mov
adc
gs
mov
pop
int3
mov
inc
mov
addr16
and
sub
mov
lret
popf
adc
mov
js
dec
push
imul
push
int
fnsave
lahf
sbb
addr16
xchg
mov
xor
mov
push
lds
repz
or
inc
fdivr
int
fcmovbe
outsl
jge
mov
dec
lds
add
and
fsubs
jb
mov
sub
adc
shr
jnp
out
sbb
jle
sub
add
repz
outsl
pop
cs
clc
xor
jge
into
ret
mov
mov
mov
rclb
int3
ja
mov
cmc
xchg
shll
cmpl
icebp
and
outsl
push
jg
pop
xor
mul
and
sub
xchg
xor
jo
push
add
add
addr16
daa
cmp
pop
xchg
insb
test
lret
mul
or
cmp
outsb
stc
loop
and
fwait
int3
sbb
sti
cmp
mov
out
mov
xor
lret
pop
mov
lods
xor
cmp
mov
rcl
out
pushf
mov
pop
ja
xchg
jae
int3
inc
push
jb
aam
xchg
inc
aad
push
orb
testl
rcrl
in
push
scas
lar
test
insb
ds
xchg
mov
mov
push
pushf
mov
std
xor
out
inc
adc
scas
push
out
push
popa
loop
in
aaa
lret
push
mov
aad
lds
cmp
inc
hlt
push
jns
stos
mov
inc
aam
push
movb
rol
jge
daa
pop
lcall
push
dec
dec
add
jp
lods
xor
cmpsb
out
rclb
mov
movsb
mov
hlt
out
pop
clc
pop
mov
sahf
in
sahf
inc
pusha
fsub
jecxz
xlat
cwtl
xor
mov
or
ljmp
push
mov
xchg
xchg
cmpsb
rol
leave
cltd
sbbl
or
sub
dec
test
sti
sbb
movsb
sbb
mov
inc
popf
ljmp
imul
sub
pop
and
add
popf
mov
adc
jns
lcall
fcmovnu
sar
or
data16
lea
cmpsl
sbb
icebp
fnsave
cmpsb
pop
lahf
dec
das
into
ljmp
dec
push
rorb
inc
xor
enter
sahf
dec
dec
andl
adc
testb
sbb
js
jl
in
aad
jb
outsl
xlat
jmp
sahf
pusha
push
add
inc
out
lret
jae
iret
fldl
cltd
jg
mov
cmp
ret
cmp
cli
fwait
imul
ds
xchg
cmpsl
fcom
sbb
mov
xchg
test
addb
sub
xor
lods
nop
rcll
leave
mov
xchg
addr16
addb
jo
ret
cwtl
mov
addr16
notb
iret
adc
mov
int3
stos
lret
and
arpl
or
add
gs
sti
jns
in
pop
jns
inc
dec
sbbb
jg
xor
pop
add
ja
jae
mov
mov
rolb
push
test
imul
stos
adc
aaa
mov
addr16
popa
mov
cltd
jp
imul
xlat
pop
imul
incl
repz
aam
stos
push
push
cmp
mov
cwtl
jnp
shrb
lcall
mov
out
push
mov
adc
ja
mov
lods
inc
sahf
bound
pop
mov
sti
cwtl
adc
daa
cli
jp
addr16
add
aaa
popf
pop
rcrb
fadd
sbb
mov
into
adc
stos
mov
ds
mov
inc
jo
aad
mov
subb
add
push
cwtl
cmp
insl
mov
int3
dec
fwait
notl
xchg
mov
adc
xorb
faddl
mov
arpl
xchg
bound
add
mov
and
push
cmp
sub
movsl
fs
xor
rcrb
or
les
sub
je
push
fstpl
dec
ja
pop
push
shrb
jle
daa
pop
mov
jbe
fmulp
sub
push
cmc
or
test
loop
jno
cmp
push
sub
stos
add
out
and
adc
mov
dec
jge
xor
inc
adc
mov
add
shlb
mov
adc
cmp
ss
sub
cmc
call
inc
and
cs
cmc
xor
inc
inc
jb
cld
stos
stc
mov
xchg
imull
insb
rcl
loop
enter
cld
ret
leave
add
cld
cmp
fnstenv
adc
rorb
subb
add
xor
scas
adc
xlat
inc
jae
and
cmp
aaa
je
ljmp
jp
shl
push
adc
sub
subb
call
insb
pop
inc
stos
aaa
push
data16
push
inc
xchg
sbb
adc
sub
jne
sub
shr
shl
inc
lods
and
inc
loop
not
lods
add
adc
inc
orb
xor
pop
aad
xchg
sub
xlat
inc
out
xor
mov
into
pop
test
fwait
rolb
enter
jne
test
mov
pop
dec
inc
mov
call
fsts
cs
cwtl
xor
pusha
sbbl
jmp
xchg
inc
in
cmc
xchg
mov
shrb
sub
sbb
mov
popf
pop
call
mov
dec
lods
pusha
adc
addr16
mov
lods
int3
fsubs
sbb
push
jg
pusha
pop
mov
push
lahf
mov
mov
cli
std
and
lds
adc
mov
movsl
and
xchg
sbb
arpl
stos
enter
cld
mov
inc
jae
sub
fsubl
xchg
sahf
mov
sahf
inc
add
cmpsl
adc
or
cmp
insb
out
mov
or
popa
addr16
pop
fwait
inc
sti
jg
cld
imul
popa
inc
nop
sbb
mov
add
inc
mov
mov
enter
xor
cmp
orb
or
out
xor
rorb
insl
cmpsb
cmp
lock
repnz
adc
dec
sub
and
push
ds
pop
cmp
testb
fmul
mov
push
lea
leave
fucomp
sub
jnp
ds
sbb
out
mov
fisttpl
fucomp
cmp
sarb
rcl
push
cltd
aaa
insl
test
sub
leave
push
dec
pop
jle
push
test
sbb
xchg
std
data16
cwtl
ds
lret
dec
loop
xor
je
fdivrl
in
jge
xchg
or
mov
pop
mov
jo
fs
je
push
dec
push
jae
cmp
andb
fwait
pop
aaa
imul
iret
sti
les
lea
rcl
adc
mov
pop
push
jae
push
imul
jl
push
xchg
and
push
xchg
add
pop
xchg
out
out
xchg
bound
mov
push
fstp
orl
ljmp
inc
lods
mov
insl
inc
push
jnp
mov
pop
mov
or
and
subl
jmp
mov
hlt
mov
mov
pop
std
inc
in
popa
add
scas
mov
les
xor
rorl
lds
mov
ja
or
loop
testb
int3
inc
scas
mov
cmp
mov
rep
xor
xor
es
mov
mov
test
cmpb
add
pusha
mov
adc
clc
pop
adc
xchg
xor
jp
loope
mov
cltd
rorl
xor
mov
in
push
test
shlb
les
imul
push
in
xchg
out
xchg
int
fldcw
fiaddl
repnz
mov
push
std
dec
iret
call
mov
xchg
add
pop
sti
mov
scas
pop
xchg
cld
push
push
sbb
mov
cmp
push
xchg
in
sub
das
jb
mov
mov
cwtl
popa
inc
or
ffreep
movsl
popa
cmp
popl
jl
test
pop
jb
push
adc
ljmp
cmp
test
ds
mov
mov
inc
pop
daa
pop
test
insb
icebp
test
das
int3
gs
and
jmp
or
pop
add
inc
xchg
jb
arpl
out
cltd
stos
jae
popa
adc
inc
add
push
test
loope
jecxz
lock
test
jg
push
cli
adc
rol
mov
icebp
adc
mov
out
push
xchg
push
mov
jecxz
mov
xchg
packuswb
loopne
xchg
mov
push
inc
and
mov
inc
mov
inc
mov
sbb
addr16
sbb
fsubrs
lds
mov
stos
nopl
cmc
int
push
out
scas
stc
clc
pop
enter
xor
lods
xchg
leave
ret
test
sbbb
jmp
sub
dec
scas
add
stos
iret
adc
jnp
xchg
adc
mov
lahf
push
insb
sub
sbbl
adc
sub
mov
not
repnz
sub
mov
cmp
sub
outsb
mov
and
add
insb
xchg
aas
outsb
test
enter
popf
adc
mov
and
pop
mov
add
cmp
dec
push
adc
mov
cs
sahf
pop
xchg
mov
int
push
imul
imul
fidivs
jb
fistpll
cwtl
mov
pop
mov
jecxz
cmp
mov
xorb
lock
dec
push
cmc
shrl
pusha
push
jb
pop
xchg
leave
dec
and
sarl
mov
add
ds
fistpl
pop
jge
scas
mov
les
test
mov
addr16
xor
mov
mov
xchg
stc
or
cmp
inc
adc
or
mov
sub
int
inc
movsb
loop
inc
inc
sahf
push
jbe
cmpsl
loope
sub
js
out
bswap
pushf
add
leave
pushf
in
dec
xchg
jb
fwait
lcall
mov
xor
bound
inc
outsb
xchg
mov
and
mov
data16
das
adc
cltd
sbb
mov
or
test
arpl
add
jle
push
sub
xchg
sbb
pop
fiadds
mov
xor
cmp
leave
cmpsl
clc
ficomps
in
test
mov
pop
adc
fwait
jl
xchg
sub
xchg
add
orb
sbb
cmp
jne
inc
subb
roll
sub
pop
fstpl
fstl
cmp
sahf
test
pop
shrb
test
pop
sahf
popf
leave
jecxz
mov
mul
mov
scas
mov
daa
cwtl
jo
mov
sub
mov
sub
test
out
fmuls
sbb
orb
ficoms
insb
mov
push
addr16
int3
ljmp
movzbl
lods
aad
xor
nop
push
hlt
push
add
movsl
enter
lret
pop
nop
or
cmp
stc
jl
push
cmp
fcmovbe
mov
in
jae
push
fstps
ja
cmp
shll
jl
sub
dec
addr16
es
test
pop
or
mov
jge
in
in
jae
jmp
mov
divb
xchg
in
jle
decb
sub
pop
roll
dec
jnp
cmp
xchg
xchg
sahf
mov
imul
scas
push
pop
fisttps
std
int3
repz
js
inc
add
dec
and
add
pusha
mov
repz
xchg
in
mov
pop
movb
lods
adc
and
cwtl
push
clc
push
scas
jbe
js
jle
push
aad
pop
push
icebp
loope
insb
jmp
mov
leave
shll
js
push
dec
xor
cmp
dec
or
cs
cmc
adc
test
mov
jmp
shl
cmp
gs
push
xor
push
sbb
mov
pop
pop
xor
ds
xchg
push
sarl
jb
rorb
push
daa
or
xchg
mov
mov
insl
jns
xchg
mov
in
into
mov
xchg
stc
push
mov
cmp
pop
cmpsb
mov
xchg
test
pushf
cs
scas
push
pop
adc
jns
out
and
fsqrt
insl
aas
outsl
xchg
enter
or
lret
insl
pop
test
add
ja
add
or
push
aas
popf
adc
pop
add
pop
dec
or
iret
popf
or
subl
or
add
int3
fdivl
outsl
jno
cmp
cmp
mov
sbb
sarb
push
int
cmc
dec
pop
leave
push
ljmp
mov
das
mov
call
mov
mov
inc
jbe
and
xor
cmp
fnsave
xchg
cmc
out
xchg
stos
lret
mov
out
loope
rcrb
jns
mov
jg
pop
xchg
fisttpll
mov
stc
mov
notl
loop
add
clc
adc
xor
lahf
cmp
xor
mov
aad
xchg
pop
sbbl
lods
fisubs
or
cs
add
xchg
lds
or
fstpl
out
sti
mov
sar
dec
lock
lds
mov
mov
popf
test
sbb
xlat
push
mov
push
xchg
pop
cmp
es
xor
or
rcrl
add
and
sahf
imul
push
call
ds
lahf
push
clc
jl
daa
adc
jns
bnd
es
push
in
imul
mov
clc
add
les
inc
lea
sub
je
push
pushf
cwtl
or
mov
add
mov
add
fmuls
add
dec
dec
shl
ja
xor
dec
push
sub
lds
push
popa
mov
iret
ffree
dec
loope
pop
fnstsw
sarl
jbe
pop
cs
xor
xor
ficoms
shrb
int3
out
les
mov
mov
addr16
cmp
xchg
ljmp
stc
inc
cmpsl
dec
cmpsb
shlb
ja
push
aad
cmp
and
mov
es
notb
loop
cmpsl
pcmpeqd
aam
lea
xbegin
jle
and
push
add
out
enter
mov
cmp
pop
xchg
dec
ljmp
jge
loop
mov
call
xchg
test
repnz
lods
add
pop
in
lahf
push
repnz
andb
into
addr16
pusha
mov
push
mov
fs
dec
rclb
sarl
mov
xor
push
jb
or
mov
adc
adc
fimuls
in
push
push
xlat
mov
add
xor
je
imul
dec
adc
or
adc
jl
shrb
outsl
popa
jno
fs
sahf
inc
aas
cmpsl
iret
repz
and
pop
sub
add
xchg
ret
adc
or
popa
jnp
mov
mov
add
cld
test
dec
mov
pushf
xor
and
out
sti
dec
in
clc
or
out
cmp
mov
push
aam
jns
inc
lods
jmp
frstor
fisttpl
lret
xchg
dec
inc
jl
pushf
sahf
pop
mov
or
xor
jp
mov
mov
repnz
out
pop
mov
xchg
add
or
jno
int3
push
xchg
imul
fiadds
push
dec
mov
dec
test
lret
pop
sub
xchg
lods
dec
add
xchg
je
outsl
popa
andl
lds
push
add
cmp
stc
aas
dec
mov
pusha
sub
and
insb
sbb
sub
loope
adc
imul
xor
mov
aam
aaa
push
mov
in
cmp
or
mov
stos
cs
dec
imul
pop
outsb
mov
sahf
cltd
int3
jo
bound
jb
sub
test
cs
xchg
stos
popl
shll
pop
or
cmc
daa
xor
pusha
xor
dec
in
adcl
inc
mov
test
xor
inc
xchg
jge
or
fcoms
xchg
or
sub
mov
sbb
sbb
divb
cmp
bound
das
cli
push
repnz
outsl
mov
add
add
iret
pop
mov
adc
inc
mov
addr16
lods
cltd
lret
cmpsb
les
stos
pop
lods
jge
pop
push
mov
xchg
mov
mov
cmp
fnsetpm(287
jp
jnp
cmpsl
stc
arpl
rep
jne
mov
xchg
xchg
jae
or
xor
xor
in
jo
pop
xchg
mov
rorl
jg
xchg
sahf
mov
ss
mov
push
jmp
inc
mov
daa
fidivs
push
mov
mov
mov
rcr
in
cmpsb
or
fs
or
lods
scas
mov
cmp
dec
xor
or
lea
inc
mov
in
pushf
mov
and
ss
dec
not
mov
xchg
inc
cmp
nop
aas
sub
repz
dec
sar
jb
inc
aaa
outsl
sbb
js
ret
loope
test
push
lds
dec
xchg
adc
iret
iret
jle
jge
push
out
push
inc
jle
arpl
dec
mov
pushf
pop
xor
fwait
xchg
cmc
adc
vmovq
in
dec
cmp
sub
pop
add
aas
xor
fistl
stos
ds
lea
scas
push
or
icebp
mov
xor
fistps
pusha
testl
enter
rorb
lcall
jecxz
aad
sub
subl
call
mov
lea
std
hlt
inc
cld
mov
or
push
orl
xlat
or
push
stos
dec
lcall
add
mov
mov
push
inc
pop
fldenv
shll
stos
idiv
je
in
aas
sbb
adc
lea
push
and
imul
repz
out
iret
pop
cmp
jnp
cmp
loope
popa
sahf
mov
inc
divb
xor
pop
and
lret
outsl
jge
pop
popf
sbb
pop
adc
push
pop
pushf
es
push
push
sbb
in
roll
bound
lock
push
pop
mov
mov
aas
pop
mov
cli
sbbl
stc
jo
and
test
xchg
push
sub
jl,pn
pop
inc
mov
daa
stos
xchg
sbb
push
mov
popf
in
ds
add
jnp
fidivrl
js
enter
ljmp
mov
les
and
test
jo
in
xor
adc
pop
shl
or
enter
mov
cltd
xchg
mov
jb
inc
pop
push
dec
and
xor
add
adc
loop
bnd
mov
cltd
xchg
mov
jb
inc
pop
push
dec
and
xor
add
adc
loop
repnz
rcl
mov
popf
xchg
mov
jb
inc
pop
push
inc
and
adc
loop
lock
mov
sbb
dec
popf
xchg
ds
inc
mov
jno
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adcb
in
mov
sbb
rcr
sbb
or
or
jnp
dec
cmp
mov
jmp
mov
sbb
jge
or
or
mov
popf
aad
lds
divb
pop
or
push
ds
adc
dec
pop
mov
mov
push
jb
aad
add
pop
andl
pop
xchg
pop
hlt
push
and
and
xchg
mov
or
dec
mov
popf
test
mov
add
outsl
test
movsb
mov
xchg
repnz
nop
jns
mov
mov
test
mov
bound
pop
push
imul
pop
xchg
mov
and
fidivrl
mov
lea
sub
cmp
cmpsb
dec
imul
mov
sub
movsl
push
insb
idivb
mov
xchg
sub
dec
in
or
fyl2xp1
lods
adc
pushl
inc
add
mov
lret
jecxz
call
mov
cmp
push
jae
pop
or
int
push
clc
stos
call
cld
lret
into
mov
dec
sbb
or
jle
js
pop
sub
out
popf
fnstcw
lods
leave
mov
cmp
jge
or
dec
cmp
mov
jmp
mov
cmp
jge
or
dec
cmp
outsb
inc
sub
fcmove
xchg
fsts
dec
outsl
mov
imul
lds
mov
jg
pop
adc
or
cmp
adc
sqrtps
js
std
fwait
dec
sbb
or
jne
ljmp
inc
sub
jb
pop
xor
adc
repz
outsl
ret
inc
mov
mov
xchg
es
inc
mov
mov
add
imul
xchg
mov
cmc
mov
roll
sub
jle
cs
das
fstpl
lret
andb
sti
push
daa
and
cmp
movsl
in
xor
ljmp
xchg
sub
add
in
mov
lods
outsb
mov
push
in
inc
push
pop
pop
mov
insl
sbb
andl
aam
jmp
xor
mov
inc
les
xor
jmp
inc
les
pop
andl
js
xchg
mov
cmpl
cld
ds
sbb
bound
pop
pop
mov
push
sti
mov
pop
xchg
xchg
xor
jb
jnp
mov
push
dec
pop
add
cmp
shlb
js
mov
das
lahf
push
lahf
notb
pop
nop
mov
outsl
int3
cli
or
add
pop
repnz
fistpll
push
xor
outsl
and
mov
imul
mov
ja
and
xchg
stc
cmpsl
aam
add
in
test
and
pop
add
jns
mov
mov
push
inc
roll
cmp
icebp
nop
ret
and
add
mov
mov
sbbl
or
cs
scas
xchg
jge
push
loope
cmp
xlat
push
adc
xchg
push
add
or
add
pop
and
fnsave
xor
mov
addr16
xchg
pop
or
fnstenv
jecxz
inc
sub
push
pop
lock
popf
test
push
mov
jbe
dec
or
imul
mov
mov
jp
sbb
ficompl
jge
push
cwtl
fisubrs
mov
stos
or
pop
lods
cmpsl
and
sub
mov
addr16
jge
xchg
cmp
jb
jecxz
jmp
inc
jno
shr
xchg
cli
js
scas
insl
imul
mov
mov
mov
shl
ret
xchg
std
int3
insl
cmc
fs
cld
jmp
adc
jbe
sbb
repz
loope
rclb
sub
inc
test
xchg
clc
sbb
repz
push
std
xchg
xchg
add
or
rcr
lods
in
movsl
or
sbb
sub
dec
ss
sbb
mov
andl
in
push
shr
adc
and
lods
adc
gs
daa
rolb
pop
or
jg
sahf
ret
in
lds
outsb
push
sub
xorl
stos
cmp
inc
push
sbb
sub
inc
rcrb
pop
sbbb
jg
movb
lods
sti
shrl
dec
ja
add
inc
lds
sub
pushf
mov
push
inc
test
mov
mov
pop
xlat
jmp
xor
pop
test
sbb
test
fistpl
rcr
sbb
das
adc
movsl
pop
das
mov
jmp
sub
pop
jne
in
sbbl
xchg
fnstcw
das
push
pop
cmp
stos
mov
inc
out
int
xchg
out
mov
bound
fbld
je
insl
add
pop
ja
add
scas
inc
mov
xor
pop
add
fildl
rol
divb
imul
pop
scas
push
fstl
add
or
xor
popa
add
xorb
stos
mov
outsb
mov
xor
mov
cmp
sahf
sbb
loop
repz
inc
push
test
repnz
push
dec
add
testl
xchg
outsl
push
jle
pop
xor
arpl
fists
into
pop
jmp
xchg
xchg
push
inc
fidivrs
in
mov
sbb
out
adc
cmp
xchg
pop
inc
scas
test
fnstenv
enter
push
mov
int3
sbb
pop
stos
daa
fisubl
rol
sarb
jns
push
jle
cmpsb
dec
jle
lock
push
out
out
aaa
mov
xchg
clc
clc
fstl
mov
jle
push
mov
lds
addr16
lcall
addr16
cs
and
data16
cmpsb
daa
nop
insb
jecxz
push
out
mov
iret
mov
adcb
pop
int
add
in
cmp
and
jne
push
add
fidivrl
xor
mov
sti
and
jo
shlb
js
or
jno
adc
jae
enter
stos
or
pop
mov
sbb
bound
fs
mov
sub
xchg
sub
sarl
cmp
jno
pop
cmp
jne
cmpsl
iret
dec
in
inc
xchg
test
dec
mov
cs
push
imul
sarb
lds
sbb
in
lcall
popf
outsb
ds
add
and
mov
mov
sahf
loopne,pt
movsb
fsubrs
les
les
inc
fisubl
xchg
sub
mov
push
cld
test
mov
stc
inc
ret
lds
lcall
lods
orl
and
cld
adc
push
cmp
dec
ja
scas
mov
inc
mov
leave
inc
mov
repnz
push
xor
movhps
pusha
lods
movsb
or
ret
enter
dec
mov
add
dec
int3
in
mov
pop
fidivl
mov
sbb
push
aas
cli
repz
out
lods
push
push
clc
mov
sbb
shlb
mov
movsb
outsb
jnp
pushl
test
in
dec
cltd
sub
pop
fcoml
das
mov
mov
loope
lahf
aas
mov
xor
pop
lcall
dec
pop
sti
push
mov
or
in
adc
std
das
aam
jl
jp
repz
cmp
je
pop
adc
mov
imul
jl
cmp
cld
sub
sbb
into
sbb
push
xchg
jg
cli
insl
mov
in
sbb
pushf
pop
mov
jmp
fdivr
jb
arpl
mov
adc
test
in
cmpsb
jo
jmp
fists
and
push
push
addr16
inc
pop
test
push
repz
cmp
test
inc
sub
dec
popf
jnp
cli
shll
inc
sbb
call
and
stos
dec
dec
call
dec
push
add
pop
jno
jb
cmpsb
hlt
ret
xchg
add
xchg
mov
jp
inc
lock
loopne
rcr
ja
push
dec
pop
push
loope
outsl
popl
mov
movsb
imul
pushf
inc
jne
lea
cwtl
and
testb
int
fisubrs
pop
subl
adc
xlat
push
fwait
fs
jle
jae
add
sbb
cmp
xchg
jge
inc
xorl
push
call
push
addr16
push
or
mov
hlt
xor
sbb
xchg
sub
xchg
and
gs
jo
ds
push
inc
jecxz
cmp
cwtl
in
movsb
aam
cmpsb
xchg
into
mov
xchg
xchg
pop
call
cltd
sub
jge
popl
pop
mov
adc
push
das
sbb
bt
imulb
jg
lods
fst
loopne
push
push
mov
xchg
lods
fnstsw
cmp
subl
xchg
push
insb
adc
mov
out
or
fwait
sbb
lret
cltd
cmp
inc
out
loopne
movsl
nop
mov
lret
inc
lret
out
arpl
and
mov
stos
out
adc
mov
out
fcoms
fdivs
and
test
add
ljmp
imul
pusha
sahf
jnp
push
mov
popa
add
xor
add
out
push
mov
adc
or
insl
out
das
in
mov
cwtl
mov
mov
call
sub
push
xchg
es
outsb
andl
in
out
xor
cltd
jb
lock
inc
jp
out
stos
sub
or
in
mov
out
rcr
lock
inc
xchg
cmp
or
cmp
mov
xor
mov
das
xchg
hlt
in
inc
psllw
test
daa
filds
cmpxchg
arpl
add
mov
orl
pop
pop
inc
inc
cmc
ret
arpl
aad
sbb
pop
push
xor
fisttpl
fcmovnbe
aaa
jle
cmp
adc
repnz
jbe
repnz
jno
xor
push
mov
push
rorb
xor
xchg
mov
daa
into
xchg
popf
mov
mov
lods
cltd
sub
sbb
loop
sub
jbe
or
inc
ljmp
push
nop
negb
jno
dec
xchg
faddl
jmp
xor
sub
pop
push
adc
dec
imul
test
mov
cmc
fld
sbb
imul
xchg
push
push
xor
sbb
aas
es
jbe
fisttpl
push
loop
xchg
dec
add
nop
mov
cltd
sub
xchg
into
call
aas
push
gs
test
aas
repz
cmp
fisttpl
loop
enter
lds
cld
and
loope
ja
outsb
xchg
subl
xor
sti
pop
test
push
xchg
mov
xorb
addr16
push
mov
stos
mov
jbe
mov
jl
ret
aas
test
push
js
jg
sbb
mov
and
jnp
bound
push
gs
mov
call
add
dec
xchg
add
mov
push
in
inc
jno
cmpsl
mov
es
push
incl
sbb
outsl
xor
inc
jno
movsl
stc
pop
cld
inc
push
adc
pop
cmp
inc
shlb
int3
and
loop
jl
loopew
inc
fwait
hlt
out
rcr
sti
and
ja
push
cltd
sub
mov
and
aaa
mov
insb
push
mov
xchg
sub
mov
out
les
bound
fwait
mov
mov
cmp
xchg
aad
scas
in
iret
push
pop
in
pop
mov
push
notl
push
lds
jp
loopw
sub
cwtl
jp
or
mov
call
testl
dec
in
inc
fimuls
jp
stc
out
mov
loope
cmovo
rcll
mov
outsb
cmp
call
push
lods
mov
icebp
ljmp
cmp
push
sub
xchg
add
jmp
cmc
ds
dec
mov
jmp
mov
mov
dec
push
dec
adc
cmp
cmpb
mov
iret
sti
pop
mov
adc
icebp
clc
cmpsl
and
arpl
nop
fistps
cltd
cmp
insl
fistps
adc
and
mov
fcomp
cmp
mov
xchg
inc
int
mov
push
or
lock
xchg
xchg
adc
test
cmpb
mov
in
add
xor
das
notl
sub
mov
daa
aas
jne
jle
ficoml
add
jbe
jae
mov
ja
or
jg
xchg
sub
mov
adc
inc
imul
inc
out
data16
xchg
push
jo
push
and
jae
dec
push
js
add
call
jecxz
sahf
mov
mov
test
mov
cmp
lods
dec
inc
mov
icebp
xor
xor
scas
jno
sub
mov
in
inc
xchg
push
adc
cmpsl
pop
push
out
insb
enter
sbb
fildll
aam
lret
add
cmc
std
movsl
fldt
mov
je
js
cmp
arpl
repnz
adc
dec
mov
mov
cmovg
repz
add
mov
cld
lret
sbb
das
sahf
scas
xchg
inc
fbld
jnp
cwtl
imul
jmp
sub
sahf
push
repnz
and
jnp
fsubrs
loope
xchg
push
ficomps
jg
and
push
lock
popa
push
or
cld
vrsqrtss
scas
mov
scas
fs
idiv
xchg
scas
lods
test
das
repnz
push
out
in
lods
inc
sbb
inc
push
test
xor
dec
pop
cmpsl
push
sbb
adc
lahf
push
dec
andb
je
sbb
mov
and
stc
mov
jno
cmp
faddp
pop
into
xchg
stos
xchg
ss
mov
pop
xchg
fldenv
in
xchg
gs
int3
sub
rcr
xor
iret
das
ss
hlt
mov
mov
decl
push
adc
fdiv
jg
push
cmp
jns
sub
or
cmpsl
lcall
dec
or
mov
xor
cmpsl
sbb
sbb
adc
dec
cwtl
adc
ret
pop
add
std
add
daa
pop
leave
sbb
xor
add
ja
jb
inc
icebp
push
lods
mov
or
cmpsb
mov
mov
push
repnz
test
cmp
xchg
push
sbb
les
add
test
inc
aad
mov
xor
fstps
xchg
test
mov
inc
xchg
mov
insb
in
cmpsb
jecxz
out
pushf
roll
mov
jne
dec
loopne
push
pop
imul
mov
inc
arpl
and
sub
adc
aam
dec
mov
fs
pushf
cs
aaa
add
mov
pop
mov
je
adc
sub
aad
enter
sub
pop
shl
icebp
lock
pop
mov
loop
mov
mov
xchg
ds
stc
lret
loope
add
or
jecxz
repnz
fdivs
jno
in
inc
call
mov
push
je
push
mov
pop
jge
dec
insb
cmp
mov
xchg
das
out
pop
out
loope
aam
js
imul
push
aam
mov
hlt
or
cmp
push
lret
movsb
pop
and
loop
out
cmpsl
xchg
push
mov
in
pop
cmp
in
push
push
or
cmpsl
sub
lods
pop
and
push
jecxz
ja
jae
test
push
jp
repz
fists
xor
mov
inc
sub
xor
push
inc
test
dec
mov
sbb
lret
incb
andl
mov
scas
outsl
or
insl
push
in
fs
jmp
loope
addr16
mov
and
mov
sbb
mov
popa
outsl
imul
pop
mov
mov
inc
jbe
repnz
inc
mulb
or
adcb
test
cmp
pushf
outsl
xchg
adc
pop
mov
xchg
lahf
pop
push
fcomp
pop
or
scas
scas
push
jb
and
jl
sub
pop
cltd
out
cmp
pop
sub
pop
lahf
push
adc
inc
test
pushl
data16
mov
sub
loop
mov
filds
mov
das
sarb
movq
dec
push
xchg
icebp
aaa
cmp
loop
ja
jmp
clc
push
cmp
pop
leave
sub
pop
xchg
cvtps2pi
ss
scas
and
push
test
jle
mov
dec
mov
push
pop
lds
outsl
fdivrs
in
xchg
fldl
call
or
mov
mov
mov
insb
stos
in
nop
pop
fbstp
insl
cli
dec
lahf
sub
mov
shlb
push
add
out
cmp
push
scas
pop
dec
adc
mov
in
lds
mov
repz
xor
es
mov
scas
adc
lods
rcll
test
xchg
es
mov
mov
hlt
lret
int3
mov
xchg
inc
jp
ret
lret
mov
out
cli
loope
addr16
pushf
cltd
add
daa
dec
cmp
addr16
scas
lea
popf
lock
mov
jl
aaa
jmp
push
mov
nop
std
fmul
xor
jl
jae
ror
xor
sub
jb
pop
loope
fwait
cmp
push
mov
mov
mov
scas
or
test
jnp
out
xchg
imul
ljmp
imul
clc
jl
stos
fs
movsb
divl
mov
push
mov
push
push
aas
dec
xchg
mov
gs
cld
pop
and
aad
mov
jmp
mov
std
and
fidivs
pushf
mov
mov
and
pop
in
das
dec
jno
push
das
push
and
ljmp
aam
call
inc
loop
push
sub
pop
mov
mov
scas
xor
xor
sbb
mov
push
adc
scas
push
test
xchg
test
xchg
lea
mov
out
jmp
jmp
lcall
out
mov
scas
mov
cwtl
xor
rorb
cmp
ss
jg
sbb
jg
fistpl
mov
loopne
cmpsb
mov
gs
or
add
push
daa
xchg
cmp
fcoms
mov
cltd
cmc
jmp
nop
push
iret
mov
out
outsl
push
int3
jl
dec
push
loope
mov
pushf
sti
test
mov
jge
lods
cwtl
inc
into
dec
jne
sub
sub
push
jp
xchg
add
xchg
jnp
imull
clc
xchg
or
scas
mov
push
out
xor
pop
dec
shlb
add
in
cwtl
lods
call
mov
out
add
pop
sbb
pusha
cmp
and
jge
repnz
and
int3
stos
cmpsl
mov
sbb
je
rclb
jbe
loope
mov
push
shrl
lret
dec
xor
and
int3
popf
add
stc
sub
ret
sub
lods
jnp
ud0
in
rorb
or
int
call
nop
sbb
jmp
rcll
add
repz
clc
and
mov
das
and
loope
push
inc
cltd
jmp
js
adc
and
jb
push
mov
jo
aam
fwait
stc
jbe
sahf
push
ljmp
roll
push
cli
sub
lods
enter
rcll
and
push
inc
rclb
xor
sbb
pop
test
mov
incb
insl
aad
mov
stos
mov
cld
scas
out
or
ds
sarb
jle
out
lret
pop
outsl
xchg
cli
stos
dec
les
cmp
pop
outsb
mov
lods
inc
incl
pop
scas
sti
insl
movsb
and
jo
es
inc
cmpb
mov
aad
imul
or
lret
ficoms
add
push
pop
sbb
pusha
inc
add
and
add
push
filds
mov
jae
into
cmp
and
or
jno
mov
xchg
jecxz
add
and
mov
cmp
movsb
push
insb
mov
shlb
je
lock
sbb
xor
adc
add
icebp
jmp
orb
or
repnz
nop
mov
shrl
dec
ret
call
sub
hlt
test
out
jae
push
dec
not
fnstcw
sub
lea
mov
test
mov
in
fs
push
push
xchg
lock
add
mov
mov
sbb
into
push
shrl
insl
push
mov
xlat
jmp
sahf
sti
inc
push
pushf
cmp
push
mov
imul
test
dec
xorl
pusha
lahf
cs
lret
stos
pop
xchg
push
add
shl
shlb
lret
mov
scas
stc
xchg
pop
repz
mov
sbb
out
pop
sti
fs
jecxz
xchg
call
ja
xor
xor
pop
mov
inc
es
jmp
into
test
adc
dec
test
std
add
inc
mov
sub
fldl
scas
fcoml
fdivrs
jge
pop
mov
and
mov
enter
pusha
push
sbb
negl
lock
std
pushf
call
pop
push
hlt
jne
dec
mov
popa
arpl
push
mov
mov
mov
and
repz
inc
inc
mov
pop
repz
mul
xchg
jp
push
call
clc
fcomps
test
push
jnp
lods
insb
aaa
xor
sub
sub
daa
in
out
cmpsb
jae
sbb
aaa
rcrl
jns
into
or
loopne
movsb
pop
daa
loope
push
repz
jge
movsb
jne
outsb
push
pop
pop
je
pop
out
mov
sub
or
mov
mov
es
jge
sbb
add
in
cmp
imul
add
call
daa
cld
test
dec
xchg
shll
imul
mov
mull
rclb
sub
rolb
xor
dec
rcrb
notb
pop
ljmp
pop
xor
stos
fisubl
push
mov
mov
mov
cld
shrl
xor
sbb
mov
cmp
shlb
rcll
sbb
add
mov
or
or
xor
mov
cld
pop
jns
sti
mov
popf
ja
ret
jne
push
outsb
popf
movsb
and
jmp
mov
cmp
jge
or
dec
cmp
mov
jmp
mov
cmp
jge
or
dec
cmp
icebp
std
icebp
std
cltd
mov
cltd
push
lods
leave
mov
cmp
sbb
imul
cwtl
jmp
cmp
xchg
or
jp
xchg
xchg
mov
cmpsb
fcoms
jmp
fwait
add
sub
xchg
stos
test
imul
cmc
cmp
mov
xor
mov
jne
gs
xchg
dec
test
mov
movsl
pop
aad
lds
cmc
sub
arpl
xor
movsl
jne
gs
stos
push
movsl
jo
jns
outsl
nop
ja
mov
xchg
push
or
xchg
mov
mov
and
out
pop
rorb
sbb
aaa
sbb
outsb
fidivl
jns
insl
lods
sub
in
mov
movsb
in
push
dec
cmp
aam
and
ret
push
add
into
mov
cwtl
in
push
dec
jnp
mov
gs
dec
div
or
in
ljmp
fs
mov
pushf
stos
xor
decl
pop
in
or
and
stc
fninit
jbe
addr16
add
jnp
enter
cs
pop
sbb
daa
mov
nop
push
std
cli
xor
push
fs
bound
mov
dec
xchg
repnz
movsl
xchg
sub
cmp
sub
adcb
and
mov
xchg
roll
push
aad
lds
cmc
sub
jae
arpl
cmp
add
adc
in
push
fisttpl
lret
imul
scas
dec
mov
out
imul
gs
sbb
jnp
adc
bound
push
mov
cmpsl
jno
inc
mov
inc
mov
xchg
dec
test
imul
cmc
sub
fistl
jmp
fwait
push
mov
jne
gs
xchg
dec
test
imul
cmc
sub
fistl
sub
push
nop
arpl
and
sbb
mov
jecxz
sti
out
xchg
loop
lea
das
jl
frstor
sub
cli
xchg
pop
ret
mov
movsl
in
add
or
sbb
rcll
aam
in
mov
inc
jbe
sub
pop
sahf
sub
sub
dec
mov
inc
lret
divb
ss
icebp
and
mov
adc
push
mov
mov
gs
xchg
leave
inc
mov
fwait
mov
jge
push
dec
enter
lock
mov
insb
in
mov
xor
jp
pop
and
inc
pop
inc
call
and
aas
push
inc
bound
jecxz
in
bound
lods
rcrl
pop
sub
adc
fsts
adc
cmp
add
test
movsl
add
mov
mov
stos
add
cli
cs
lods
cmp
push
incl
mov
cltd
xor
das
and
jmp
sbb
or
mov
outsl
cld
jns
xchg
mov
mov
fwait
jmp
push
mov
outsb
cmp
mov
mov
add
inc
das
lock
mov
scas
cmpsb
fstpt
push
out
sub
and
fdivr
and
or
pop
mov
inc
das
mov
popa
jge
test
in
cmp
insl
pusha
lret
loopne
hlt
lcall
jmp
arpl
sub
pop
faddp
add
dec
fisubrl
daa
xchg
jo
sub
jb
test
sbb
sbb
xchg
mov
jmp
inc
mov
daa
mov
add
flds
xchg
out
inc
stc
sbb
shll
xor
xchg
mov
mov
leave
popf
aas
push
or
ret
xchg
pushf
adc
mov
subl
mov
adc
sahf
jmp
adc
rcr
stos
jmp
cltd
pushl
sub
test
cmp
xchg
out
pushf
mov
push
je
push
dec
xchg
das
xor
hlt
sub
xchg
adc
psrlw
jle
push
lods
xlat
shl
sbb
fstps
lods
dec
leave
dec
push
insb
push
mov
mov
sub
jns
push
mov
rcll
out
mov
das
repnz
cltd
xchg
jbe
lcall
insl
add
lods
data16
jp
mov
sub
sbb
out
shr
popa
rclb
mov
sbb
push
inc
rcll
mov
add
fsubr
scas
test
sub
fiadds
add
push
mov
or
push
lods
fwait
xchg
call
dec
inc
std
mov
cwtl
pop
sub
sub
xchg
gs
in
fistpl
jnp
xchg
aaa
iret
sub
gs
sbbb
movl
add
mov
outsb
std
outsb
cld
negl
push
std
mov
ret
cmp
call
add
lret
pop
and
sub
cmp
int
push
inc
xlat
imul
push
inc
and
movsl
int
push
fcoms
jne
lods
pop
scas
imul
pop
jge
fdivrs
or
nop
push
mov
aas
outsl
xorl
mov
ss
lahf
sbb
popa
pop
or
stos
jo
nop
add
ss
pop
dec
jbe
mov
in
add
bound
sbb
xor
dec
fisubs
mov
push
push
xchg
inc
and
fldenv
push
xchg
add
jne
mov
movsl
sub
sub
adc
repnz
pop
ret
jge
adc
stos
gs
lea
push
cmp
orl
loop
push
mov
in
xchg
testl
mov
push
popl
sbb
push
lret
scas
fnsave
out
xor
adc
fistps
mov
pop
xor
mov
or
shrb
rol
or
test
pop
pop
mov
bound
ret
sub
jno
stos
cmp
inc
popa
or
xchg
xchg
mov
outsl
out
mov
lock
add
daa
hlt
pop
shll
sbb
js
dec
xor
xorb
bnd
push
out
jae
jbe
insl
sti
or
pusha
jb
test
xchg
push
lods
push
dec
pop
sub
mov
xchg
pop
xchg
push
ficompl
in
repnz
pop
pop
fwait
mov
lods
add
sbb
ss
into
xor
sahf
subb
mov
jae
mov
adc
insb
test
leave
cmpsb
int3
rcr
and
xchg
dec
mov
mov
dec
fnsave
popa
out
or
ss
adc
mov
xchg
mov
sti
cltd
adc
mov
mov
push
outsb
repnz
adc
mov
cs
sarb
test
mov
sbb
ljmp
je
xor
imul
xchg
leave
int
lahf
push
dec
adc
mov
fcompl
fnstsw
dec
fimuls
inc
and
and
clc
rcll
rolb
bound
lret
cli
fldl
insb
dec
dec
ja
ja
xchg
fwait
data16
stc
rcrb
loope
push
sub
add
mov
adc
or
int3
int3
mov
stos
sub
push
push
xchg
pop
lods
test
je
jge
cmp
cli
lock
stos
dec
inc
push
sbb
andb
aam
lods
mov
xor
std
aam
mov
xchg
loope
and
sbb
adc
adc
xor
or
in
mov
dec
lahf
mov
xchg
mov
inc
xor
pop
dec
mov
and
sbb
sub
loopne
xor
dec
adc
repz
pushf
popf
flds
repz
sar
mov
lcall
xchg
mov
add
mov
jae
loope
add
xchg
or
fistl
mov
push
dec
scas
push
pop
mov
jnp
add
lds
in
mov
and
dec
lcall
cmp
add
lahf
sub
or
jns
loop
mov
pushf
mov
iret
xchg
jns
xchg
shlb
cltd
movsb
cmc
loopne
sub
sbb
lret
clc
test
imull
sbb
mov
xor
push
in
inc
lcall
sub
ds
sarl
jne
out
ja
dec
mov
pop
mov
add
xor
inc
sbb
mov
jo
inc
scas
mov
mov
cwtl
xorl
sbb
imul
cmp
inc
cmpsl
rcll
jge
arpl
lret
xor
cmp
lods
ret
loopne
popf
dec
inc
push
sbb
dec
popf
jmp
adc
shlb
sbb
jle
xchg
clc
mov
and
cli
pop
pop
lock
sub
xlat
enter
loop
jns
mov
mov
sub
sbb
cmpsl
lcall
clc
sbb
push
inc
cmp
loopne
inc
push
lds
jl
pop
scas
mov
pop
push
and
mov
ljmp
movsl
test
test
mov
js,pt
imul
adc
mov
out
sub
mov
mov
lret
enter
adc
bound
cld
adc
inc
ret
stos
cld
adc
sub
cmp
test
popf
faddl
mov
lea
pop
stc
mov
mov
adc
fildl
stos
mov
inc
movsb
inc
into
mov
daa
outsl
jmp
xor
lret
and
in
lds
push
pop
xor
mov
and
dec
js
dec
push
rclb
jb
add
shrb
pop
dec
xchg
inc
lcall
xlat
and
in
imul
jne
mov
sub
push
push
xchg
jmp
lods
mov
pushf
mov
mov
xor
data16
sbb
nop
outsl
lods
add
xchg
nop
jle
stc
add
fildl
sub
imul
cmpsb
jns
jbe
bound
aaa
lock
outsl
push
outsl
jge
fwait
xorb
jnp
pop
mov
mov
lods
scas
mov
mov
sbb
mov
repnz
lds
mov
pop
inc
jns
das
jae
adc
or
orb
test
xlat
add
popfw
scas
decl
test
mov
dec
push
dec
add
mov
pop
movsb
and
and
mov
inc
inc
mov
pop
fnstcw
adc
push
xchg
mov
test
sbb
addr16
iret
add
xor
jne
fnstsw
hlt
iret
jbe
leave
data16
mov
sub
mov
jbe
ds
popa
cmp
add
dec
insb
sbb
sahf
cmp
sbb
jmp
jae
stos
mov
popf
add
add
mov
or
add
mov
jecxz
inc
std
xor
cmp
inc
mov
and
mov
fistl
mov
clc
loope
lret
test
stos
sub
jae
filds
lcall
inc
pop
cmc
push
fisubrl
cmc
andb
adc
cmc
je
in
fimuls
mov
scas
inc
pushf
sarb
int3
addr16
pop
sarb
ja
xor
or
and
sbb
jmp
aam
int
fildll
or
inc
and
cmp
or
and
pop
stos
cwtl
inc
dec
repnz
inc
cltd
icebp
bound
ss
inc
xchg
fnstcw
mov
mov
jle
jno
ja
mov
test
cmc
ja
loopne
pop
icebp
lods
sbb
repnz
jno
push
push
test
mov
cmp
out
subl
jnp
out
pushw
and
adc
mov
push
in
ret
gs
js
into
and
ja
lcall
in
stc
and
jge
cli
sub
lret
call
in
and
scas
push
dec
aam
mov
lods
sub
mov
jne
inc
xchg
xor
push
popf
jl
pop
xchg
cmp
cmpsl
cwtl
xlat
scas
sub
jns
lods
mov
and
mov
loopne
ficoms
push
dec
in
inc
push
outsb
push
mov
stos
and
ss
jae
mov
inc
push
stc
pop
xchg
push
inc
gs
jecxz
popf
push
push
cmpsb
push
icebp
and
loope
mov
push
lea
fsubl
cmc
cld
cmp
push
push
enter
dec
pop
stos
cmp
cmpl
pop
cltd
iret
leave
inc
dec
xchg
push
int3
xchg
ja
imul
xor
push
xchg
mov
xchg
sarl
push
in
mov
push
iret
loopne
xchg
push
push
adc
bound
imul
mov
outsb
inc
sbb
xor
les
and
dec
push
cmp
fisubrs
pop
push
stos
ja
loope
imull
push
sub
xchg
imul
ja
dec
push
daa
or
shlb
sbb
lret
shlb
lods
test
ror
adc
shlb
mov
cmp
inc
out
out
xor
add
cmp
inc
inc
mov
shll
ss
fiadds
mov
js
jmp
dec
repnz
xchg
ficoml
neg
add
rol
enter
mov
cmp
sub
lods
pushf
ret
cmp
dec
mov
sbb
jmp
sbb
les
aaa
cmpsb
rorl
fnsave
mov
inc
lds
xchg
out
mov
mov
test
xchg
mov
fs
arpl
cmp
popa
jne
loop
xor
xchg
inc
sti
rcrl
scas
xchg
out
mov
clc
lret
outsl
das
iret
jmp
outsl
jl
pop
cltd
mov
cmp
out
fistps
sub
xchg
outsl
negb
and
dec
inc
add
ret
cmp
jnp
filds
imul
movsl
aas
dec
lret
ret
push
ljmp
out
cmp
es
cwtl
bound
test
pop
xor
addb
xchg
jns
inc
push
mov
fwait
dec
scas
or
sub
xor
add
cs
add
adc
int3
faddl
jo
fcmovne
cmp
in
or
popf
pop
andl
cltd
push
jl
popa
add
lcall
mov
push
enter
imul
pop
ds
sub
fwait
xchg
dec
add
loopne
mov
mov
fidivrl
sbb
pop
pop
mov
pushl
inc
call
jnp
mov
jle
push
cmp
loopne
xchg
inc
dec
or
xor
lds
push
fs
jno
stos
xchg
and
and
adc
hlt
cld
jle
push
inc
shlb
jne
pusha
or
and
adc
mov
mov
inc
push
pop
jnp
push
jo
mov
fsubp
call
or
icebp
cmc
adc
sub
xor
into
loop
xchg
pop
gs
das
jno
push
lcall
jmp
cmpsl
inc
mov
mov
push
rorb
ds
rcrb
test
shrd
das
push
pop
or
mov
mov
fnstenv
dec
push
lret
test
js
dec
movsl
ret
inc
insl
cmc
jo
popf
xchg
vpcmpgtb
ja
or
scas
iret
gs
test
fisubrl
andb
push
inc
or
ja
into
push
std
mov
icebp
and
sarb
mov
leave
add
jo
aas
dec
pushf
sbb
jmp
pop
sbb
aad
xchg
dec
cmp
jmp
mov
mov
cmp
clc
aad
xor
lods
outsl
out
cmpsb
fs
mov
pop
pop
push
cli
and
repnz
addr16
lahf
xchg
lock
leave
sbb
fimull
pop
jmp
push
jno
xchg
mov
xlat
in
sub
inc
inc
pop
or
xor
ss
jbe
imul
pop
int
push
add
out
cmp
sub
cmc
pop
xchg
ljmp
fsubs
pop
imul
add
movsb
les
ljmp
insl
repnz
xor
sahf
inc
mov
xchg
inc
repz
and
mov
loope
add
or
dec
ss
stos
ljmp
jo
xor
sarl
dec
pop
orl
scas
mov
mov
shlb
and
aam
or
cld
sbb
fcmovb
pop
pushf
mov
sti
out
imul
cmp
in
pushl
imull
out
aam
pop
lcall
fs
out
xor
and
fidivrl
pop
sub
dec
lods
lahf
cmp
cltd
fsubrs
mov
mov
stos
test
xor
fisubrl
js
fidivl
jl
test
jbe
lret
cmp
arpl
fsubrs
pop
and
rcrl
and
out
jo
int3
add
rolb
or
sbb
out
sarl
dec
adcl
call
pop
jns
test
inc
loopne
sti
mov
xchg
or
mov
mov
jbe
jle
lret
dec
mov
and
sub
repnz
mov
mov
cwtl
notl
les
ja
sub
mov
xor
mov
cld
cmpsb
jae
jnp
rorb
jge
cltd
push
test
adc
mov
out
add
and
pusha
shll
dec
pushf
push
outsb
es
xchg
inc
je
popf
xor
mov
push
dec
addr16
aaa
jne
inc
push
insl
adc
repz
adc
xchg
rclb
mov
jmp
push
push
out
rol
sbb
cmp
cmp
adc
subl
sbb
adc
in
ljmp
int
sbb
mov
inc
or
xlat
add
push
cmp
jmp
orl
cmp
pusha
out
push
pop
pop
xor
push
xchg
test
xor
push
mov
daa
mov
bound
mov
pop
xor
sbb
loope
into
dec
data16
stos
inc
in
pop
fildl
shlb
loop
mov
push
mov
ja
cmpsl
insb
xchg
adcl
stos
push
lock
jecxz
insl
data16
icebp
loopne
pop
mov
stos
test
out
and
mov
push
cmp
mov
mov
sub
imull
lret
push
push
out
push
inc
push
aas
and
pop
push
loope
or
mov
mov
out
iret
push
int
or
scas
icebp
bound
arpl
dec
lret
or
cmc
imul
cmc
icebp
js
inc
sbb
test
call
push
pop
jmp
fimull
or
int
sub
arpl
popf
sbb
xchg
hlt
push
movsb
pop
lret
mov
push
jle
push
lea
adc
mov
sub
xchg
jp
pop
das
or
sbb
pop
std
push
inc
repz
fwait
mov
xchg
pop
jp
and
ljmp
mov
pop
les
cmp
movsl
in
pop
insl
or
movsl
mov
adc
lfs
cltd
mov
mov
add
push
mov
pop
out
lea
inc
xchg
xor
loop
mov
mov
sub
jnp
mov
in
xchg
inc
scas
cmpsb
xor
stos
loop
inc
in
bound
in
les
mov
aad
sbb
inc
cmpsl
push
dec
loop
out
test
inc
jb
dec
shl
jbe
mov
movsl
out
pop
lret
scas
dec
jecxz
pop
in
ror
push
push
sbb
pop
cld
or
pusha
jg
loop
or
mov
rolb
popf
mov
xchg
in
push
xorl
loop
mov
dec
pop
jecxz
stc
or
dec
mov
dec
sub
jecxz
inc
lret
cs
jg
es
mov
in
or
xor
in
insl
pop
lods
popa
adc
jo
adc
jmp
lahf
mov
in
add
cmp
bnd
leave
movsl
in
dec
sbb
mov
gs
imul
add
ret
icebp
arpl
cld
mov
imul
and
pop
sbb
sub
int3
stos
push
lsl
scas
int
repnz
and
and
fadd
orl
dec
sub
addr16
jecxz
pop
adc
sub
adc
dec
sub
xor
test
hlt
mov
sbb
dec
add
repnz
filds
xor
out
insb
js
lret
ret
dec
pop
cld
psrld
test
in
insb
adc
cmp
or
mov
ret
mov
test
xor
pop
cmp
lds
rsm
ss
int
aad
xchg
pop
push
enter
push
jne
je
pop
cmp
shlb
cwtl
lods
rorl
out
inc
inc
sub
popa
insl
add
adc
repnz
outsl
mov
sbb
pop
mov
iret
test
sbb
sub
rol
insl
xchg
mov
leave
lahf
pop
stc
push
dec
bound
xor
bound
call
push
call
in
loopne
mov
push
lret
hlt
push
in
insb
cld
sbb
xchg
jg
and
out
insb
test
sub
lds
xchg
xchg
adc
jp
aaa
icebp
imul
mov
sbb
mov
ds
jge
or
dec
aam
push
xchg
or
mov
pop
pop
sbb
test
jb
repz
push
mov
jne
into
cmp
lea
adc
fwait
xor
test
mov
insb
cmpsl
jb
or
sarl
loop
cmp
pop
push
mov
push
jmp
in
out
cmpsl
hlt
js
stos
sbb
dec
pusha
inc
cmpsl
outsl
mov
fwait
push
xchg
jno
mov
and
push
xchg
xchg
jle
jns
shl
cld
jbe
adc
stc
clc
push
int3
xchg
cs
mov
shrl
jnp
inc
int
inc
pop
into
add
mov
fstps
mov
scas
sub
jecxz
xchg
pop
inc
and
mov
iret
js
popf
stc
rol
in
push
outsb
push
stos
aad
sti
lods
or
mov
fldenv
xchg
cmpsl
inc
push
or
mov
insb
push
sub
test
mov
xor
adc
aas
pop
push
mov
rcll
add
test
pusha
inc
cli
dec
verw
loopne
ds
add
ljmp
es
push
mov
sbb
mov
addl
pop
in
inc
ror
jecxz
push
je
xor
ret
testb
ficomps
inc
and
fildll
or
fldl
nop
mov
dec
addb
arpl
push
add
lods
sub
lret
call
mov
cmp
test
jns
gs
mov
add
mov
imulb
jb
fadd
mov
and
or
pop
dec
outsb
nop
xchg
jno
lahf
add
js
addr16
xchg
dec
pop
shr
in
and
addb
push
mov
jne
gs
xchg
dec
test
imul
cmc
sub
fistl
jmp
fwait
push
mov
jne
gs
xchg
dec
test
imul
cmc
sub
fistl
sti
add
or
inc
mov
xchg
dec
test
aam
lds
cmc
ret
in
adc
lret
and
cmc
sub
shll
cmpl
or
sbb
scas
mov
mov
xchg
call
cmp
push
xor
and
push
dec
inc
shlb
popa
jg
popl
mov
icebp
out
loope
adc
add
xor
and
xchg
cmp
popa
jg
xchg
addl
icebp
mul
in
mov
pop
push
and
add
sub
in
mov
int
sbb
dec
push
cli
or
adc
into
push
mov
mov
aam
nop
gs
pop
out
cs
sbb
in
lock
into
jg
shrb
in
xchg
adc
loopne
inc
mov
jp
mov
pop
xor
rolb
cmp
adc
popa
cmp
push
mov
iret
je
loope
pushf
out
test
iret
rorb
scas
jae
nop
push
outsl
outsb
or
push
push
pop
lret
mov
shrl
repz
loopne
xlat
pop
xchg
dec
mov
cli
insb
jo
jmp
push
sub
jl
loope
inc
addr16
jne
rorb
rolb
int3
mov
pop
cwtl
orl
icebp
out
loope
adc
add
xor
and
push
push
inc
inc
jno
popa
jle
cmc
in
fmul
enter
mov
xchg
and
adc
pop
xor
pop
pop
push
sub
adc
daa
adc
out
not
fmul
rcl
iret
test
je
push
jp
dec
and
sbb
popl
cli
popf
cld
rcr
out
loope
adc
add
xor
and
push
dec
inc
pop
jno
popa
jg
popl
mov
icebp
out
loope
adc
add
xor
and
push
dec
inc
pop
jno
popa
jg
movsb
mov
mov
sbb
push
loopne
xchg
xor
xor
sbb
mov
push
imul
mov
data16
adc
sarl
push
mov
repnz
and
xchg
xor
xor
es
in
js
popa
stos
imul
dec
and
cmc
mov
dec
dec
ror
jp
js
ror
js
cwtl
jmp
das
xor
jae
lea
mov
mov
sahf
rorb
cmpsl
call
mov
in
mov
loopne
test
jae
push
mov
mov
cmp
sub
movsb
adc
dec
mov
das
mov
xchg
das
lea
loopne
nop
aaa
jge
sti
push
sbb
mov
and
xchg
push
mov
xor
or
fcoml
push
es
and
cmp
in
xchg
stos
fcmovb
push
pop
lret
mov
fcoml
rcll
cmp
jns
mov
popa
mov
icebp
jns
pop
xchg
das
stos
and
mov
xorb
pop
xchg
xchg
and
pop
pop
imul
add
psrld
sub
jae
int
xchg
cs
sbb
movsb
out
cmp
cltd
inc
mov
mov
xchg
sbb
addb
push
push
cli
mov
je
dec
push
in
std
pop
jno
pop
mov
lahf
leave
mov
jb
lret
mov
cli
les
pop
ds
fldcw
es
jbe
mov
bound
xchg
mov
stc
mov
xor
in
out
adc
inc
pop
aaa
out
adc
fwait
cltd
cwtl
jno
mov
mov
in
sahf
mov
jg
iret
leave
cltd
pop
pushf
push
jns
or
icebp
stos
cmp
clc
ret
inc
pop
mov
dec
or
push
mov
mov
in
mov
or
in
fwait
xchg
scas
addr16
fsubs
movsb
std
xchg
cmpsl
push
xchg
inc
jmp
vmovlps
stos
fsubs
xsave
mov
push
outsb
add
dec
lds
jae
xchg
sbb
mov
popa
test
pop
cmp
aas
inc
insb
mov
pushf
ficompl
fwait
pop
jmp
fisubrs
inc
mov
lods
jle
iret
jecxz
mov
lock
pop
pop
xor
dec
push
loopne
mov
in
pop
sub
aad
pop
mov
sbb
ljmp
jle
xor
out
test
cmc
shll
rorl
mov
loope
or
dec
andl
mov
lahf
arpl
movsb
wrmsr
adc
or
mov
pop
pop
out
mov
mov
push
cmp
pavgw
clc
mov
xchg
faddl
xchg
icebp
jno
mov
std
lock
ds
aam
cmp
dec
mov
jmp
es
dec
push
xchg
mov
cmp
mov
mov
pop
pop
xchg
adc
enter
in
mov
fstps
scas
add
sbb
or
outsl
cmp
and
out
cltd
popa
bound
addl
jae
and
shlb
jo
lods
inc
xor
add
sub
dec
adc
jne
inc
xlat
mov
fiadds
test
cltd
xor
jo
test
dec
push
movsl
sub
xchg
sbb
icebp
cmpb
fnstcw
aad
push
aam
sub
sub
or
xchg
ffree
xchg
insl
push
xor
inc
bound
push
subb
fildl
jmp
pop
aam
mov
test
in
insl
gs
or
xor
add
mov
test
pop
fs
out
adc
adc
jle
pusha
pusha
adcl
or
es
adc
pop
mov
push
out
fidivrs
adc
xchg
in
pushf
add
mov
stc
xor
mov
jg
dec
cmc
push
pop
stos
in
cmp
lcall
xor
xor
or
lds
xchg
movsl
push
insl
jge
lahf
dec
lds
sbb
xchg
in
add
push
xorb
repz
and
jle
out
ds
add
sbb
pop
lods
pop
popa
mov
stos
sbb
add
bound
mov
ficomps
sbb
push
or
inc
cmp
nop
bswap
and
pop
daa
mov
lar
fsubrs
mov
lods
pushf
out
jno
mov
es
shl
sbb
adc
ss
inc
mov
pop
push
or
push
cmp
inc
loop
jl
lds
mov
insb
sub
ficoms
insl
cwtl
es
cmpb
mov
nop
adc
jecxz
cmp
loopne
jle
xor
add
bound
pop
and
sub
adc
test
add
and
xor
addr16
insb
fwait
movb
sbb
repnz
xchg
iret
pop
fs
xor
mov
cltd
xchg
nop
dec
push
cmp
sbb
and
or
js
add
adc
test
xor
lret
jb
push
repz
cmp
mov
lock
ja
hlt
sti
ljmp
scas
cmp
xor
or
adc
ror
or
les
leave
and
pop
push
jmp
xor
nop
push
divb
andb
mov
cmp
addr16
fcoms
pusha
mov
jns
fistps
xchg
lods
int3
xchg
xchg
cmp
inc
aaa
ret
cmp
or
test
push
arpl
mov
cmp
sbb
sub
out
add
cltd
fs
divl
mov
mov
add
add
jl
gs
ror
aas
cmp
movsb
pop
sbb
pop
inc
cmp
sub
xchg
and
js
cmpsb
mov
jb
mov
std
dec
in
daa
stos
push
popl
pop
in
and
inc
scas
sbb
push
fsubl
subl
out
outsb
pop
push
or
pushf
in
jge
adc
mov
xchg
js
mov
xor
lret
inc
and
inc
je
sub
ja
shl
inc
leave
sub
lret
test
inc
mov
sbb
outsb
jno
pusha
inc
aaa
call
test
fldenv
ds
pop
test
push
pop
pusha
sbb
lcall
mov
imulb
insb
and
pop
pop
scas
mov
pushf
or
imull
les
decl
jbe
pop
in
sbb
es
imul
and
and
sub
xchg
ljmp
pop
ret
dec
jle
pop
icebp
xor
mov
rcrb
daa
cwtl
enter
push
gs
ss
ffree
dec
mov
in
mov
daa
fwait
js
aaa
dec
and
mov
loopne
pop
pop
in
pop
mov
sub
jg
inc
jle
and
push
sbb
into
iret
mov
cmp
aas
addr16
loop
push
sbb
sbb
inc
mov
ljmp
xchg
sti
jns
mov
es
sub
mov
rcrb
mov
test
addr16
push
sbb
pop
fmulp
xlat
hlt
enter
fbstp
int
popf
dec
mov
jns
subl
repnz
cmp
push
ss
jnp
fneni(8087
dec
popf
fldl
mov
dec
adc
pop
push
lock
adc
fstpt
in
jmp
fstp
dec
xor
mov
stos
ret
aaa
repnz
enter
jae
jecxz
xchg
clc
add
dec
cmp
xchg
adc
inc
or
jae
movb
mov
mov
repnz
push
sbb
push
sub
movsb
dec
shlb
adc
or
fidivl
dec
adc
cmp
rorl
fisubs
xor
fwait
jb
cmp
into
xchg
mov
pushf
rclb
jg
pop
xor
shlb
pop
popf
imul
fdivl
dec
sbb
mov
dec
inc
nop
mov
or
add
imul
cmp
jl
mov
mov
loopne
jp
fwait
in
mov
add
out
or
sarb
loopne
and
ret
lret
ficoml
xchg
aam
aas
stos
test
loop
faddl
cmp
cmp
xor
cltd
and
pop
jbe
movsl
js
scas
mov
loope
cmpsb
xchg
leave
icebp
dec
and
cmpsl
pop
sti
addr16
subb
lock
insl
std
in
jmp
outsl
imul
cmp
insl
jns
adc
or
test
mov
ffreep
adc
pusha
gs
fadds
lods
xchg
inc
xor
inc
xchg
mov
mov
sbb
cmp
push
mov
or
sbb
lret
mov
or
dec
xchg
mov
xchg
in
pop
test
jle
add
xor
sahf
and
lds
dec
fwait
pop
test
sbb
sti
push
lds
aad
movsl
test
das
insb
xor
cmp
push
stc
scas
movsb
adc
fdivrl
jno
pusha
dec
mov
into
jo
push
stos
ret
cmp
insl
outsb
rolb
aam
stc
dec
and
adc
xor
lds
sub
dec
mov
into
add
xchg
sub
mov
mov
fisubs
sbb
movsb
test
lcall
incb
mov
pop
out
out
push
sti
add
pushf
mov
xor
insl
sub
xchg
push
pusha
fisubrs
sub
icebp
outsb
je
aad
or
cld
andb
out
adc
sub
xor
and
push
cmp
insb
or
bound
xchg
aad
pop
jge
jle
dec
lret
call
cli
mov
xor
in
adc
fsub
xchg
xor
lret
out
mov
xchg
mulb
addl
xor
mov
mov
mov
popf
inc
les
xlat
or
cmc
or
sbb
inc
sbb
roll
add
outsl
cli
fwait
jb
xor
sub
addb
stc
xchg
outsb
sub
or
mov
add
ja
lahf
push
push
movsb
pop
lret
lcall
xchg
fwait
mov
jns
popa
push
pcmpeqb
pop
je
clc
mov
xchg
cmp
cltd
pop
mov
dec
push
fcompl
cli
mov
iret
mov
pusha
outsb
icebp
fdivrl
arpl
cmp
adc
inc
and
or
ret
mov
orl
dec
repnz
rcll
adc
or
rcr
inc
push
and
cltd
or
pop
mov
mov
jp
cmpsl
add
or
and
lea
in
out
jle
dec
cmp
inc
lods
sbb
xor
jp
xchg
leave
xchg
popa
sbb
inc
and
in
sbb
pop
push
adc
ljmp
andb
mov
addr16
pop
xchg
es
insl
xchg
int3
pop
stos
cs
cmp
sub
imul
sub
std
mov
xchg
xor
pop
jnp
fucomp
and
and
jbe
nop
push
scas
mov
mov
jl
mov
orb
jno
xchg
adc
and
push
aad
and
dec
pop
jmp
clc
cmp
xlat
xchg
pop
mov
jnp
aam
push
push
gs
sahf
jnp
fistl
popf
cmp
inc
adc
jo
cmp
aam
in
popf
push
xchg
mov
mov
sub
dec
xor
push
pop
divl
pop
push
stc
sub
push
pop
mov
fs
dec
je
fisubrl
clc
cmp
roll
sub
rcl
in
pushf
pop
stc
aas
jnp
scas
mov
push
mov
loope
imul
mov
imul
ret
jecxz
out
call
jb
mov
sti
xor
xchg
das
xchg
xchg
js
push
cli
ljmp
pop
scas
das
xor
sbb
sub
xor
push
ljmp
inc
movsb
ds
int
mov
out
jle
dec
sub
mov
stos
mov
inc
cmp
xchg
arpl
mov
nop
repnz
clc
test
das
fisttps
xor
movsl
ret
mov
add
push
mov
jae
and
outsl
jecxz
or
cmp
add
scas
test
in
insl
mov
sbb
pop
pcmpeqd
pop
lcall
lret
push
addr16
sahf
nop
into
mov
jge
push
mov
lds
pop
and
lcall
je
add
je
xchg
mov
bound
push
outsb
pop
jmp
mov
ret
lds
in
mov
or
fcmovbe
jbe
pop
xlat
call
mov
test
enter
mov
dec
in
sti
mov
dec
or
cmp
inc
test
fprem
xchg
xor
dec
sbb
adcl
or
sahf
and
sbb
cmc
les
mov
rorl
jmp
cmp
cmp
sbbl
jne
add
mov
xchg
jnp
xchg
jbe
clc
fnstenv
jge
hlt
lods
push
or
push
movsb
sarl
add
dec
mov
xor
outsl
fbld
dec
ret
jmp
xor
nop
imul
dec
sarl
repz
aam
aad
sbb
push
jo,pt
nop
pop
cli
call
mov
mov
inc
js
adc
mov
push
xor
jg
push
lods
shlb
mov
pop
push
sahf
or
mov
out
pop
mov
sub
inc
and
fs
cmp
xor
ljmp
fucomp
mov
adc
or
frstor
mov
pop
mov
sub
ret
pop
call
pop
jg
cmp
ljmp
pushf
push
push
sarb
adc
roll
push
popa
movsb
add
and
pop
add
add
push
pop
int
xchg
outsb
cmp
push
mov
lods
cmp
scas
insl
fs
add
mov
pop
or
movsb
push
inc
or
mov
lods
mov
fmull
and
xchg
cmpsl
aaa
or
push
test
jmp
in
sub
test
out
mov
shll
popl
lcall
shrl
imul
xor
xchg
inc
rolb
leave
enter
shlb
ret
jnp
xor
mov
rclb
mov
pop
and
cmp
lds
aam
gs
add
pusha
sarb
mov
mov
push
push
insl
loopne
rclb
scas
ret
push
adc
mov
sti
fs
in
jns
sub
mov
jb
psubsw
ret
frndint
adc
in
mov
mov
mov
xlat
pop
mov
dec
js
lock
jmp
repz
nop
lahf
aam
push
cmp
jnp
orl
mov
mov
mov
sbb
outsl
lods
out
mov
cmp
clc
clc
jae
push
jo
xor
lds
inc
jae
lret
push
std
popa
cmpsb
shr
mov
pop
or
test
aaa
sub
arpl
dec
aaa
daa
cmpsl
into
sub
mov
clc
and
pop
add
push
mov
pop
sbb
outsl
xchg
mov
aam
das
inc
dec
sbb
or
adc
mov
pop
jno
xorl
int3
hlt
lods
in
sub
iret
out
filds
data16
mov
push
into
ds
imulb
loope
mov
xor
sbb
out
mov
inc
fmuls
sub
xchg
mov
cmp
dec
jbe
pop
mov
push
clc
or
xchg
push
pop
test
movsl
mov
cmp
scas
iret
sub
in
sub
and
std
jnp
or
add
shrl
xor
out
in
sbb
leave
xchg
adc
cs
jns
sti
lar
loope
push
jge
imul
sahf
into
scas
xchg
push
leave
daa
push
cmp
mov
xlat
or
mov
xchg
adc
je
decb
xchg
mov
popf
mov
jecxz
adc
xchg
push
sahf
repz
adcl
jne
mov
sahf
cmpsb
rolb
ss
or
les
pushf
and
aam
sti
fmulp
and
mov
arpl
cmpsl
adc
and
outsl
fadd
mov
dec
movsl
mov
out
adc
lods
shlb
hlt
dec
dec
sti
mov
sbb
mov
fdivrp
add
test
jg
sub
outsb
sub
call
add
pushf
xor
sti
lret
dec
into
and
fimuls
repnz
lods
dec
mov
sub
dec
aad
xlat
mov
mov
hlt
lahf
je
in
mov
add
jge
aaa
idivl
lcall
mov
cmp
ret
sub
test
nop
outsb
int
data16
push
or
jmp
and
inc
sbb
std
xor
jl
xchg
leave
mov
test
arpl
push
test
mov
jae
js
sub
mov
or
xor
xchg
sbb
hlt
inc
les
shrb
out
int
stc
sbb
repz
je
jge
mov
push
in
mov
mov
push
xchg
push
imul
lret
mov
or
ss
add
jmp
bound
andb
xor
add
std
jae
push
xchg
aam
mov
mov
xor
add
xor
inc
mov
pop
shll
mov
loopne
cli
or
jae
push
int
sahf
adc
mov
lods
pop
lods
test
mov
je
arpl
push
jno
xchg
enter
and
insl
mov
sbb
outsb
xchg
mov
movsl
dec
sub
adc
and
dec
push
pop
jno
mov
mov
push
mov
and
jl
pop
cmp
xchg
test
scas
and
xor
cmp
shlb
out
push
xchg
push
clc
in
sub
cmp
adc
xchg
dec
popf
mov
dec
push
imul
iret
ficoml
xchg
fwait
xor
arpl
hlt
ret
cmp
in
in
jnp
int
xchg
out
and
sub
sub
pop
es
cmp
mov
lret
jmp
pop
ss
cmpsl
cmp
inc
push
or
xor
imul
std
dec
push
dec
sbbb
jmp
add
mov
cmp
icebp
sub
addr16
mov
add
jle
inc
out
fsubrs
lds
je
dec
adc
ret
testl
aas
out
mov
pop
xor
icebp
test
pusha
adc
push
inc
je
mov
aam
jecxz,pt
bound
or
fwait
sti
hlt
push
mov
push
je
dec
or
dec
xor
xchg
dec
adc
adc
adc
out
movsb
fdivp
jo
ret
fwait
punpckhdq
push
sbbl
loopne
pop
in
fmuls
fidivrs
jmp
jne
out
push
pop
loope
insb
cmp
xor
mov
mov
adc
lret
dec
jno
xor
mov
or
jae
and
dec
daa
sbb
subb
sbb
repz
and
scas
and
ret
sbb
test
imul
inc
sarb
mov
adc
mov
loope
pop
mov
aaa
jecxz
and
inc
jge
and
pop
ficoms
orb
mov
lods
jl
std
outsl
dec
or
or
dec
inc
sbb
mov
fwait
inc
adc
into
push
push
inc
dec
jno
mov
cltd
and
fimuls
int3
icebp
test
jo
enter
add
jecxz
xchg
fcompl
das
mov
cmp
inc
dec
inc
lock
jle
jge
pop
std
xchg
popa
cmpl
aaa
test
aas
loope
es
clc
cmpb
xor
xor
dec
pop
cmp
in
xchg
repz
dec
rcll
adc
and
shlb
or
jae
xchg
ret
sub
testl
xchg
mov
pop
fmull
jmp
push
int3
or
cwtl
cwtl
ficoms
sbb
mov
fidivl
push
inc
push
dec
icebp
xor
out
jo
js
sbb
sub
inc
sbb
or
lahf
pop
adc
pop
loope
mov
inc
sbbl
jno
jle
fstl
pushl
pop
push
sub
jno
ror
dec
cmpsb
aas
mov
clc
jmp
pop
sbb
jne
lahf
mov
sub
mov
dec
rcll
repnz
icebp
xchg
into
dec
call
push
inc
add
push
aas
fwait
jl
sub
adc
and
dec
shrb
out
jns
int
add
outsl
lods
sti
js
loopne
fisttps
scas
insb
pop
or
mov
adc
inc
jb
dec
inc
pop
stc
test
sti
pusha
in
out
je
jle
jb
sbb
scas
mov
and
pop
xchg
cmp
xchg
push
in
push
rorb
and
mov
ds
lahf
mov
mov
fcomip
out
loope
adc
add
xor
and
push
dec
inc
pop
jno
popa
jg
popl
mov
icebp
out
loope
adc
add
xor
and
push
dec
inc
pop
jno
popa
jg
popl
lahf
xor
rcr
out
popa
call
lidtl
xor
and
push
dec
inc
pop
jno
popa
jnp
mov
mov
icebp
out
loope
adc
add
and
xor
add
adc
ror
cltd
and
adc
add
push
stos
or
sbb
test
test
xchg
sbb
imul
cltd
and
adc
add
je
fs
mov
movsb
dec
mov
test
pop
xor
aam
les
or
sbb
icebp
dec
out
pop
or
sahf
inc
loope
test
adc
sbb
cltd
dec
in
xlat
pop
fwait
and
test
aas
loope
loopne
aad
cmp
sub
mov
gs
jmp
lcall
out
test
cmc
jno
mov
aam
mov
cltd
mov
xchg
fsubs
loope
or
out
jns
movb
in
in
sub
and
adc
xor
push
int3
movsb
add
mov
sub
int3
cmpsl
or
sub
scas
imul
in
push
sbb
add
out
cmp
cmp
aam
cmp
cltd
out
xor
je
push
test
outsb
ror
divb
cmp
sub
dec
xor
xor
je
fs
lods
add
in
inc
repz
cld
and
adc
mov
jmp
xchg
sub
sbb
pop
rcll
cltd
cmp
test
int3
fs
push
test
mov
lds
sub
sub
loopne
stos
inc
int3
jne
jno
sbb
fs
mov
movsb
sub
in
aam
les
adc
add
je
fs
mov
movsb
sub
in
aam
les
xor
cmc
add
mov
iret
xlat
push
push
mov
mov
int
stc
aam
mov
lods
sub
es
test
push
loopne
test
inc
push
xchg
setp
in
or
inc
jp
popl
mov
rorb
roll
jecxz
sub
jo
sub
inc
inc
sub
cli
sbb
xchg
leave
lret
xchg
mov
xchg
daa
mov
insl
leave
add
cli
mov
insb
cmp
pusha
fistps
mov
push
repz
cmpsb
mov
jg
mov
lea
cmp
mov
xchg
push
lcall
push
jno
lods
cmp
push
add
cmp
dec
cli
movsb
push
pop
lods
nop
es
movsb
add
mov
dec
and
xor
pushf
pop
push
adc
inc
xchg
int3
xchg
fs
out
add
int3
jbe
lret
stos
xor
cld
incl
fildl
adc
mov
lods
push
mov
push
mov
jecxz
out
xor
push
nop
pop
jg
inc
fiaddl
sbb
es
cwtl
sbbl
sarl
cmpsl
and
stos
lret
cmpsb
add
insl
lret
mov
gs
fmulp
dec
push
jl
int
lods
mov
fiaddl
shrb
movl
inc
and
dec
aas
sbb
ucomiss
lds
xor
out
bound
add
mov
adc
ret
lret
sti
push
xchg
xor
iret
add
dec
cmpsl
out
fcmovnb
out
sbb
push
loope
clc
out
pop
sub
sbbb
or
aad
pusha
add
mov
and
insl
movsb
dec
dec
enter
fldl
mov
fstpt
in
jo
insb
adc
jne
test
jno
pop
cmp
xchg
mov
xchg
add
mov
cmp
enter
xchg
cmp
cmp
imulb
dec
imul
mov
pop
cmc
jbe
adc
fisttps
fld
inc
adc
notl
icebp
mov
fwait
xor
imul
pop
adc
or
call
or
sahf
cmp
mov
pop
incl
shrb
mov
cs
shll
lods
mov
mov
mov
gs
mov
inc
jmp
int3
ret
add
add
and
sbb
adc
pop
imul
daa
or
loop
ret
stos
push
hlt
shlb
retw
mov
dec
jecxz
imul
lds
inc
jns
cmp
mov
fcmove
pop
pusha
scas
add
or
daa
jo
and
stos
lds
sbb
les
iret
xor
pop
nop
enter
mov
sbb
mov
or
pop
fstl
data16
push
fcoms
sbb
and
leave
xchg
popf
js
cmc
repz
add
lret
inc
jp
cwtl
fimull
push
imul
xor
jbe
scas
popf
addl
insb
cmpsl
movsb
or
xchg
fnstcw
or
hlt
dec
lods
inc
adc
jo
lods
insl
repnz
mov
jo
daa
inc
inc
mov
inc
pop
sqrtps
sbb
cmp
jne
mov
idiv
popa
cmp
pop
js
jbe
lret
sbb
iret
dec
jmp
arpl
jmp
pop
aaa
pop
shrl
rcll
inc
stc
neg
or
inc
jl
addb
lret
xchg
mov
pop
jo
push
inc
leave
int
outsl
dec
iret
mov
or
or
dec
pop
hlt
mov
jmp
loope
out
sub
popf
outsb
mov
push
jb
popf
fdivs
sbb
push
jnp
pop
loop
xchg
jge
pop
dec
insl
inc
popf
dec
repz
dec
push
jbe
dec
cltd
jge
flds
pop
cld
xor
addl
add
jno
imul
pop
rclb
add
and
sbb
push
cld
scas
mov
std
xor
xchg
dec
pop
jb
or
ja
outsl
dec
xchg
clc
cmpsb
xchg
and
inc
mov
sbb
push
faddp
mov
fdivl
arpl
xchg
ret
cwtl
sbb
jge
faddp
pop
rcl
xor
xorb
test
scas
icebp
test
pop
stos
push
in
jne
adc
adc
or
sub
xor
sbb
or
add
sub
pop
push
cltd
dec
jg
mov
cmp
imul
or
add
lahf
cli
subb
fcmovnb
mov
mov
addl
cmpsl
sbbl
fiaddl
xor
mov
jp
xlat
fwait
push
out
pop
pop
xor
jmp
cmp
mov
mov
dec
inc
orb
mov
enter
sbb
dec
pop
test
out
cmpsl
movsb
fistpl
push
jmp
rcr
cmpl
rcrl
ret
mov
jne
and
mov
adc
pop
pop
nop
cli
ljmp
or
ret
cltd
jnp
in
mov
jl
adc
mov
pusha
repz
add
or
mov
imul
or
sub
enter
fsubs
iret
or
mov
into
add
sbb
lea
push
jns
pop
jmp
and
and
cwtl
adc
inc
nop
jo
xchg
jmp
mov
loop
push
pop
popf
out
xchg
testl
ficoml
adc
cld
xchg
lret
push
stc
cmc
and
mov
sub
rclb
fisttps
jno
or
fwait
sub
roll
xor
rol
fistps
lea
mov
out
arpl
mov
sbb
push
cltd
xchg
mov
mov
out
and
mov
dec
xchg
insb
insl
adc
jle
cmp
cmpsl
das
movsb
imul
daa
rcl
pop
mov
repz
cld
inc
sbb
inc
icebp
xchg
dec
test
je
xor
and
jbe
sbb
xor
mov
ss
stc
jmp
jb
addr16
imul
adc
out
adcl
mov
test
push
sbb
mov
cmp
enter
pop
and
push
outsl
dec
mov
loop
sbb
sbb
lcall
ja
cs
fidivrl
push
loop
mov
mov
cld
mov
repz
in
int3
mov
add
jp
mov
in
mov
and
mov
sub
mov
xchg
inc
popf
mov
rclb
sbb
mov
in
sub
out
jecxz
int
mov
insl
cmpsl
pop
cmp
adc
fiadds
mov
ds
cmc
add
movl
xchg
loopne
lahf
mov
clc
rorl
mov
sti
add
ffreep
mov
mov
push
adc
sbb
jae
testb
insl
jo
push
cmp
adc
les
leave
sub
add
scas
mov
jl
aam
pop
jno
idivl
ds
mov
mov
fimuls
je
inc
add
das
xchg
lret
jge
mov
mov
and
mov
dec
and
movsl
or
dec
scas
xchg
cli
scas
mov
cmc
mov
jmp
cmc
stos
out
dec
dec
test
into
and
mov
and
mov
jecxz
mov
clc
aad
jle
pusha
adc
adc
jns
call
mov
pop
inc
push
xor
xor
and
popf
inc
pop
push
shll
mov
addr16
call
adc
mov
adc
mov
sub
cli
scas
mov
lmsw
sti
sbb
bound
push
mov
bound
xchg
adc
sub
add
cld
call
ljmp
les
cmpsb
push
push
pusha
mov
int
jns
mov
inc
inc
xchg
out
xchg
iret
movsl
cmp
and
shlb
cmpsl
test
mulb
addr16
lds
mov
ret
repz
pop
cmpl
les
test
pop
xor
dec
cli
or
ds
cmp
mov
daa
inc
in
lret
inc
les
cmc
notb
xor
lods
pop
incb
fimuls
lods
data16
shl
stc
xor
xor
cmpsl
xlat
jmp
sub
add
jno
cs
ss
dec
cwtl
mov
test
cmpsl
mov
call
mov
pushf
jno
scas
sub
push
ljmp
loopne
in
push
cmpl
cld
push
cmp
icebp
xchg
mov
jnp
dec
jmp
fmul
bnd
mov
jne
xchg
mov
fbstp
outsl
jb
call
mull
xchg
and
into
add
clc
loop
sbbl
insl
or
add
test
push
orb
iret
lods
and
pushf
or
mov
insb
fcmove
mov
jg
push
cmpsb
jno
test
jp
dec
mov
icebp
bts
aas
andl
popa
jg
pusha
push
mov
xchg
push
push
sahf
xchg
popa
dec
std
adc
stos
pop
adc
push
push
cli
mov
mov
inc
push
jb
sbb
aas
mov
idiv
out
out
mov
or
and
cwtl
sarb
fcoms
jne
fidivrl
cs
and
shrb
push
pop
lahf
jne
dec
sbb
out
dec
push
rcll
mov
testl
mov
pop
cwtl
repnz
xor
in
sbb
dec
cmc
aaa
xchg
pop
adc
ljmp
icebp
cmp
inc
idivl
insl
jnp
fs
cmp
insl
ret
cmp
adc
outsb
inc
xchg
movsl
mov
push
test
dec
jp
out
inc
frstor
and
mov
adc
adc
xchg
lods
clc
dec
jno
adc
lock
lea
jne
movsl
mov
popf
into
idivl
jecxz
sbb
fisubl
inc
adc
fstl
xchg
mov
clc
fwait
test
mov
push
xchg
inc
mov
mov
add
cmpsl
xchg
rcrb
lods
rcll
in
ds
jo
xchg
sub
and
lret
or
sbb
mov
adc
push
jns
fdivr
cwtl
repz
mov
aam
fisubrs
mov
mov
adc
divb
inc
iret
mov
mov
push
repz
push
ja
xchg
or
sarl
subb
add
add
dec
add
mov
jae
push
or
inc
sbb
movsb
cmpl
aas
adc
fwait
ljmp
ja
jmp
lods
push
enter
jne
xor
loop
push
xchg
sub
lret
push
and
stc
dec
dec
mov
insb
rol
pminub
adc
les
nop
jb
add
in
cltd
imul
sub
fmul
ss
jns
iret
add
dec
push
push
pop
int
pop
test
cmp
cmp
push
out
test
aam
cmc
jecxz
dec
mov
sti
aam
ja
adc
lods
mov
xor
xor
adc
mov
cmp
out
sub
or
test
cmp
test
ljmp
cmp
pop
or
dec
mov
daa
add
cmp
jne
lret
mov
sub
inc
cmp
sbb
fisubrs
mov
rolb
lcall
scas
shll
jge
cwtl
leave
jnp
cmp
xchg
cmp
and
insb
cmp
mov
jp
xchg
mov
daa
pushf
pop
jge
lret
dec
popf
and
mov
outsl
pushw
cld
sub
repz
out
mov
mov
in
stos
pop
scas
mov
mov
push
arpl
push
or
xor
cs
pop
shr
xchg
jno
dec
idivl
and
repz
in
adc
data16
fsubrl
cli
pop
mov
jg
nop
pop
jo
xchg
jecxz
lea
pop
xor
mov
sub
sbb
sysret
sbb
xor
xchg
in
cmpsb
push
cmp
sti
popa
sbb
inc
inc
mov
adc
jmp
sbb
push
mov
orb
fstpt
out
cmp
mov
adc
stos
sub
loop
popf
sbb
inc
xor
pusha
adc
icebp
cmp
int
pop
cmpsb
and
aas
dec
je
pop
push
jns
jge
sbb
xor
shrl
mov
pop
xchg
pop
mov
add
pop
jle
idiv
icebp
mov
stos
subb
sub
push
shrl
repnz
mov
movsl
adc
lret
cmpsb
lcall
dec
mov
fstpl
out
jno
xor
dec
inc
sbbl
inc
stos
push
cmp
push
jle
add
jg
mov
sbb
loop
int3
and
insl
ds
data16
xor
sub
fmulp
stos
and
add
adc
sbb
scas
mov
cltd
xor
test
push
lea
mov
mov
push
sti
push
cmpl
hlt
sub
fisubrl
dec
sub
ja
xor
hlt
outsl
mov
cld
jp
fsubs
sbb
xchg
jge
inc
inc
cwtl
adc
out
ss
int
ja
xchg
mov
xor
scas
inc
xor
xor
mov
cmp
mov
adc
add
loope
inc
xchg
daa
ror
mov
movsl
cmpsb
xchg
aas
repz
popa
jne
sahf
icebp
dec
sub
jge
les
jl
outsb
int
and
insl
stos
das
mov
mov
out
sub
jbe
scas
popa
xchg
outsl
inc
xor
cs
cmp
cmpsb
pop
imul
test
fdivl
xchg
insb
data16
inc
stos
popf
and
in
int
sub
in
inc
aas
and
adc
push
cmc
iret
or
je
cmp
pop
pop
mov
arpl
out
cmc
lods
jp
pop
or
adc
testl
scas
out
das
pop
dec
scas
subl
push
out
cmp
mov
or
push
pop
sbb
xor
push
inc
mov
inc
jbe
inc
mov
push
in
es
mov
sbb
aad
in
out
pop
test
sub
adc
pop
or
lods
and
iret
mov
sub
movsb
dec
and
ror
mov
jecxz
mov
insb
test
cmpsl
adc
ret
mov
and
or
inc
aad
jmp
dec
dec
or
call
ja
jmp
ret
ss
insl
pop
lds
mov
iret
loopne
sub
jbe
mull
ss
outsb
sbb
ds
dec
fbstp
cmp
imul
call
pushf
sub
je
fistpll
cmpsl
xchg
or
pop
sub
jo
xchg
push
lret
mov
jns
pusha
cs
cmc
mov
inc
pusha
jmp
adc
or
xchg
inc
pop
call
fidivrl
inc
sbb
lret
and
mov
ficoms
dec
inc
cli
cmp
ret
sub
lea
cmp
and
and
cmp
rcll
push
dec
cmp
stc
jb
xor
enter
or
push
gs
clc
sbb
inc
movsl
mov
mov
jmp
test
jnp
mov
fxtract
dec
les
cli
push
and
fildll
mov
mov
out
cmpl
loopne
aaa
mov
inc
aaa
es
sbb
push
jge
or
in
adc
int
adc
push
movsb
mov
out
mov
sub
and
inc
xchg
cmpsl
insb
test
xlat
xor
aam
lcall
cmp
sbb
ret
dec
mov
gs
mov
pop
ror
clc
cmpl
sbb
aaa
fldcw
add
xchg
inc
fwait
mov
adc
in
xchg
loopne
push
jnp
loopne
insb
hlt
in
out
push
fsubrp
pushf
fs
add
rcrl
push
shl
popa
das
cmpb
pushf
leave
xlat
jnp
leave
jmp
add
push
inc
stc
push
xchg
stos
add
and
test
mov
jle
adc
pop
and
xor
cmc
xor
int3
mov
rorb
repnz
xchg
jle
test
mov
lods
mov
sub
ret
sub
and
pop
and
ds
or
push
jbe
fmul
xor
int3
cs
push
popa
adc
push
dec
xchg
jp
cmp
xchg
adc
sbb
pop
add
insb
cli
jae
leave
pop
cwtl
or
mov
or
mov
sbb
or
cmpsb
stos
cs
inc
dec
dec
and
cld
or
rcl
ret
inc
mov
ror
pushf
cmpsb
push
clc
gs
mov
pop
jnp
out
cmc
dec
out
out
addr16
push
inc
push
popa
bound
stos
cwtl
ficoml
push
push
lahf
and
mov
pusha
push
lcall
mov
cmp
cmp
cmp
dec
pop
or
xchg
and
loope
push
ret
sub
in
int3
jg
cli
pop
and
pop
jb
cmpsb
stos
cwtl
mov
mov
mov
mov
cmpsb
aas
movsl
xor
imul
sarl
cltd
gs
xor
imul
insl
roll
push
ljmp
repnz
xor
cli
adc
rcrl
aam
pop
cmp
mov
jg
or
repnz
inc
cmpsb
lock
jl
mov
add
jne
cmp
jb
cltd
icebp
jns
popf
jl
scas
adc
mov
cltd
sti
scas
jp
adc
jge
and
xchg
jecxz
mov
dec
mov
frstor
clc
mov
das
adc
cmp
lods
mov
aaa
scas
lods
inc
frstor
inc
ds
mov
mov
insb
xchg
leave
loop
push
mov
xchg
out
push
cmp
out
push
cmp
pop
fildll
push
in
inc
xchg
jns
in
or
mov
ds
fchs
jnp
mov
fnstcw
movswl
jne
daa
or
aaa
aad
add
pcmpgtb
jecxz
cmp
push
fsubrl
testl
add
nop
data16
cmp
fimuls
add
cmpsb
or
andb
xor
fcmovbe
loop
scas
add
sbb
inc
jle
lock
popa
mov
and
pop
jp
xchg
int3
jp
adc
fcoms
adc
repnz
mov
addr16
fwait
mov
xchg
int
ret
dec
jmp
loop
sarb
push
lea
fs
in
sar
fldenv
mov
js
push
mov
inc
dec
sbb
mov
out
jne
mov
add
push
sub
filds
mov
fldl
xchg
sub
mov
or
sbb
pop
pushf
pop
ror
mov
movsl
in
out
mov
data16
jb
movsl
dec
sti
stc
pop
hlt
add
bnd
test
pop
adc
or
clc
shll
imul
dec
push
lahf
and
and
dec
out
in
jge
cmp
jle
sub
cmp
adc
cltd
mov
in
pop
repz
cmp
push
das
fmull
push
daa
adc
pop
inc
shrl
enter
or
in
not
nop
loopne
fldenv
lds
arpl
nop
jb
dec
and
addr16
jo
mov
fwait
loope
das
adcl
mov
sub
negb
or
loopne
xchg
xchg
add
xor
lret
fmuls
adc
pop
dec
ja
cld
xor
jl
aas
mov
jecxz,pn
insl
fcoms
scas
fnstsw
fidivrl
pop
jo
jecxz
test
outsl
leave
lret
imul
push
xor
inc
les
icebp
rolb
adc
daa
xchg
insl
mov
adc
adc
popf
xchg
add
aam
adc
popa
arpl
push
mov
push
push
sbb
jl
mov
cmp
pusha
fdiv
bound
and
call
mov
dec
cli
or
pushf
xchg
sti
pop
mov
popf
lods
push
ljmp
lock
inc
into
fidivrs
cmp
xor
add
cwtl
imul
js
aad
mov
add
xchg
sahf
fwait
mov
dec
imul
std
cmpsb
insl
cs
mov
add
xchg
outsl
jp
lret
sbb
pop
inc
addr16
mov
ljmp
or
jne
add
insl
mov
push
ss
push
std
mov
sbb
shr
xchg
ljmp
int3
jo
mov
int
mov
lods
movsb
add
insl
sbb
cmc
test
and
jns
push
loop
xor
pop
mov
test
lea
xor
popa
pmaxub
jmp
sarb
cmp
inc
sbb
or
jnp
stc
add
mov
je
cmp
dec
xchg
xorl
sar
add
je
fs
mov
movsb
sub
in
aam
les
adc
add
je
fs
mov
movsb
sub
in
aam
les
adc
add
je
fs
mov
movsb
sub
hlt
pop
in
aad
les
adc
add
je
imul
adcl
xchg
sub
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
das
test
mov
popa
orb
sub
cmp
scas
sub
sbb
push
fistps
test
mov
outsl
call
pop
fsubrs
or
js
or
pop
das
test
mov
outsl
call
pop
fsubrs
insb
mov
xchg
mov
data16
out
out
leave
das
das
jg
les
movsb
fsubrl
xor
int3
popf
fs
out
repz
inc
lahf
lcall
xchg
addr16
imul
inc
into
test
movl
sbb
and
xlat
lock
jg
hlt
xor
sub
mov
jo
cmc
in
imul
push
cmp
sahf
cwtl
outsl
jmp
aaa
daa
scas
repz
push
add
mov
xchg
mov
aad
dec
dec
inc
gs
je
dec
fstpl
mov
notl
fsubs
std
test
mov
aad
ds
inc
dec
out
jmp
popf
mov
cmp
pop
aad
ja
ficompl
sarl
mov
jno
aas
mov
outsl
call
pop
fsubrs
or
js
dec
fbstp
imul
jp
add
mov
dec
mov
pop
mov
xchg
or
test
mov
sub
pop
fmul
push
mov
ja
or
or
pop
jmp
loopne
std
outsl
call
pop
fsubrs
or
js
dec
fistps
test
mov
outsl
call
pop
fsubrs
or
js
dec
fistps
test
icebp
mov
cmp
mov
roll
inc
push
lret
sbb
fwait
dec
jge
ds
inc
data16
pop
daa
xchg
sub
push
lock
int
jle
mulb
dec
out
lcall
les
xchg
sub
cmp
cmpsl
lahf
out
or
ret
icebp
ds
mov
sbb
fbstp
into
lahf
iret
bound
push
push
or
and
add
sbb
cmpsl
mov
scas
mul
js
clc
jge
mov
loopne
out
repz
pop
push
push
and
rol
ja
in
outsb
inc
in
push
and
jae
enter
arpl
pop
hlt
rcrl
add
mov
cmp
test
pusha
mov
fisubrl
push
adc
cmp
lret
fnstsw
adc
daa
jae
mov
movsl
bound
sub
ds
ja
jno
sub
fldcw
out
cmc
jo
lock
movsb
fdiv
mov
add
decl
inc
out
mov
lret
add
aad
jb
add
xchg
imul
ret
pop
cli
in
arpl
shlb
jns
or
sbb
stc
das
pop
jg
je,pt
cltd
mov
push
es
nop
push
mov
inc
in
int3
dec
pop
insl
popa
fnsave
jecxz
pop
pop
add
adc
fists
or
xchg
dec
iret
xor
adc
cwtl
add
add
test
jns
mov
insl
jmp
push
filds
inc
push
or
mov
cmp
cmp
push
xchg
hlt
inc
sub
cmp
sub
xchg
push
aaa
cwtl
xchg
pop
sub
inc
jle
iret
mov
ds
shr
data16
lock
mov
jbe
mov
push
shl
pushl
dec
sbb
aas
iret
fld
mov
jp
movaps
pop
xchg
mov
mov
pop
mov
adc
insl
mov
pusha
mov
mov
loopne
pop
push
in
adc
lods
orl
xchg
out
jns
mov
mov
cmc
dec
sarb
cltd
in
push
pushf
and
xchg
out
cmp
push
enter
push
mov
pop
xchg
push
addb
jo
jg
push
inc
cmp
cmc
pop
sahf
xchg
cmp
dec
cmc
inc
push
inc
add
das
mov
pop
rclb
rcrl
cli
ret
mov
cmp
inc
in
sbb
jno
mov
sbb
cld
fmull
cmp
hlt
xlat
dec
inc
xchg
rorb
mov
add
add
cmpsl
pop
je
push
xchg
sti
xor
or
popa
cwtl
adc
cli
inc
shrb
jecxz
add
test
outsb
xor
push
jecxz
xchg
mov
fdivl
bnd
dec
pop
out
int
cmp
idivl
adc
xchg
test
pop
addr16
add
iret
mov
into
scas
rolb
dec
sbb
out
cmp
or
jo
sti
jb
stos
mov
andl
jp
shrb
pop
mov
dec
or
das
idiv
addr16
lahf
mov
popa
pop
scas
push
dec
xor
bound
popa
test
pop
mov
pop
jns
mov
push
or
jns
fstl
push
mov
xorl
inc
jg
push
inc
add
push
push
pop
and
repz
and
out
data16
sti
test
lods
mov
movsb
xchg
popf
shlb
int
adc
dec
fucomp
icebp
sub
push
push
push
leave
pop
vmovq
testb
mov
and
cmp
cmp
cmp
repz
outsb
inc
lret
stos
inc
neg
out
out
sbb
mov
sbb
jge
push
jbe
and
cwtl
pop
popa
jo
sbb
mov
pop
roll
repz
mov
loope
push
cli
mov
jnp
jmp
or
xor
sub
dec
xor
sbb
nop
jbe
mov
stos
sti
mov
loope
cmc
add
mov
mov
test
insb
outsb
push
or
lock
xchg
imul
adc
sbb
mov
es
jl
sbb
xor
hlt
nop
std
push
ja
das
add
add
sbb
cmp
test
jl
sti
lock
or
adcb
xor
mov
ljmp
push
xlat
sbb
out
add
mov
add
enter
dec
jns
xchg
mov
push
dec
and
push
or
xor
sahf
js
and
jmp
dec
ss
push
xchg
mov
push
test
xchg
xorl
ja
stc
push
sarb
enter
mov
jmp
or
mov
arpl
dec
mov
out
inc
push
mov
enter
pop
xlat
xor
pop
scas
lret
mov
push
mov
add
xchg
or
dec
call
mov
mov
mov
jmp
adc
lods
cmpsb
mov
test
out
mov
cmpsb
jle
loope
loop
xlat
out
dec
adc
gs
sub
test
in
mov
push
cmp
or
shl
xchg
addr16
xchg
cwtl
ret
jmp
mov
les
imul
xor
adc
test
shrl
xor
aam
pop
jae
dec
cmp
repnz
imul
repnz
leave
mov
mov
into
imul
jno
fdivs
in
pop
xor
notl
xchg
adc
mov
jne
das
push
add
pop
leave
rorl
sbb
in
sub
lods
add
xchg
jle
cmp
mov
inc
rclb
inc
imul
scas
xchg
out
stos
and
stc
and
imul
pop
scas
lock
inc
jmp
mov
xchg
inc
xchg
mov
cmp
pop
pop
or
out
sahf
mov
cld
or
fadds
cltd
pop
or
aas
cmp
scas
gs
test
rcl
out
sarl
ja
loopne
xchg
rorb
js
pop
negb
cmp
fs
pop
sbb
jg
lds
sysenter
cmpsb
or
sbb
pusha
or
popa
mov
aam
scas
and
push
cmp
nop
pop
pop
pop
aam
insb
lret
dec
idivl
and
scas
or
out
dec
sub
iret
fnstsw
incb
in
pop
testl
cwtl
testl
je
les
adc
fsubl
adc
sbb
lret
push
mov
fwait
jmp
addr16
pop
pop
add
xor
in
pop
mov
lods
outsb
sub
xlat
call
jmp
sahf
add
ret
pop
jo
jecxz
xchg
lock
add
push
jge
pop
dec
in
pop
outsb
fisubrs
aam
fmull
mov
xchg
stos
sbb
ja
xor
sub
dec
fisubs
add
rcll
sub
scas
pop
inc
lods
stos
fiaddl
add
jnp
mov
add
insb
mov
xchg
hlt
xchg
scas
mov
fistl
aam
cmp
adc
shll
pop
sti
jb
into
lods
ret
loop
pop
mov
sbb
dec
push
stos
push
enter
and
ljmp
inc
jb
sub
cmp
or
or
cmp
inc
loope
mov
xchg
in
inc
popa
imul
addl
out
daa
sub
mov
out
cltd
or
and
dec
jl
inc
inc
fwait
scas
xlat
outsb
cmp
out
mov
sti
stc
jmp
push
sbb
push
out
mov
lods
sbb
add
mov
fisubs
sbb
xchg
xor
sub
lds
or
call
jg
sub
outsl
lret
sarl
xchg
cmp
clc
or
cmp
cmc
jo
mov
cs
inc
mov
or
pusha
pop
dec
lcall
mov
push
std
dec
ljmp
sti
sub
jle
jns
es
push
jne
movsb
inc
mov
js
and
xchg
adc
into
pop
mov
cmp
pop
xchg
data16
data16
sub
mov
lahf
sbb
aas
sarb
and
xor
das
fwait
xlat
clc
add
push
mov
adc
dec
repz
mov
mov
mov
stos
out
aad
jmp
xlat
out
cmp
push
ret
add
inc
dec
lock
push
repz
test
xchg
xor
shll
mov
xchg
add
jecxz
sub
bound
xor
fwait
xlat
inc
shrl
int
pushl
out
jle
bound
ror
arpl
xor
fldt
inc
test
pop
push
in
sbb
cld
imul
and
mov
pop
jg
push
or
shlb
mov
mov
mov
pop
jns
dec
cwtl
into
add
cmp
leave
mov
idiv
cmp
mov
cwtl
fs
sub
or
or
push
cltd
scas
out
test
lea
popf
out
in
into
mov
cmp
cmpsl
push
and
loop
jg
inc
xchg
sub
push
mov
add
repz
dec
inc
stos
js
mov
out
fildll
and
addr16
in
mov
aaa
cmpsb
fcomps
leave
mov
jmp
sbb
movsb
jg
nopl
sbb
lret
ss
push
push
jmp
push
in
loope
sbb
iret
loop
mov
dec
pop
xor
and
sbb
push
lds
scas
jo
incb
sbb
and
mov
mov
and
hlt
mov
sbbb
push
adc
pusha
cmc
int3
sarb
push
jmp
xor
cmp
adc
outsl
sbb
enter
push
jecxz
mov
cs
sub
xorb
push
inc
sbb
adc
pop
add
js
orl
sub
or
fdivrl
pop
pop
or
xor
ja
js
dec
popa
cmp
leave
mov
jns
inc
data16
and
pop
or
fdiv
mov
push
mov
push
jnp
fs
fnstsw
add
cmp
cwtl
add
icebp
adc
cli
ret
cmc
xchg
vhsubpd
adc
or
xchg
pop
mov
xor
mov
inc
xor
jmp
mov
fimull
dec
faddp
mov
inc
cs
addr16
dec
sar
maskmovq
divl
push
push
jp
test
enter
sub
stc
dec
push
test
cwtl
sti
mov
inc
jae
movsl
iret
clc
adc
and
insl
push
cmp
and
jp
cmp
and
or
shll
or
xor
fcomps
leave
inc
pmaxsw
or
pop
pop
add
mov
xchg
pop
or
test
mov
outsb
pop
cmc
cmp
jb
pushf
cmc
add
dec
lea
sahf
movsb
push
test
push
dec
les
aas
mov
into
inc
jle
pop
stos
pop
out
outsl
outsl
aaa
mov
loope
dec
mov
aam
pop
or
loop
and
adc
out
xchg
nop
xorl
dec
aas
lock
mov
mov
aad
jae
repnz
and
jns
push
jo
aaa
push
lret
mov
mov
xor
cmp
jo
push
push
stos
jns
inc
test
sbb
jmp
jbe
sub
fs
into
jl
lahf
and
push
inc
cli
test
sub
lret
xchg
loope
push
imull
mov
mov
mov
mov
sub
jo
mov
fdivs
mov
mov
lret
sbb
fadds
sub
and
cmp
cmp
dec
divl
data16
lods
icebp
clc
mov
push
call
cltd
aam
cmc
adc
add
sub
das
jge
push
add
and
imul
add
js
xchg
mov
mov
in
xchg
rcr
push
push
sahf
xchg
push
subl
lea
mov
test
loopne
mov
sub
jecxz
les
and
pop
xor
fwait
scas
pusha
stc
rcll
rcr
inc
popf
xchg
cs
push
cmpsl
insl
fstpt
cltd
pushf
adc
inc
pushl
data16
repnz
movsb
std
sti
xchg
cmc
mov
into
add
add
shlb
shll
loop
les
cmp
pop
pop
lret
out
ss
jecxz
xor
mov
arpl
cwtl
mov
and
fwait
sbb
mov
pop
xchg
andb
push
ljmp
imul
inc
mov
jae
int3
into
mov
out
xor
mull
sub
jge
pop
cmp
imul
ja
sub
add
mov
daa
cmp
pop
lcall
lock
jecxz
gs
insb
into
push
pushl
dec
lods
mov
sbb
sbb
mov
pop
decb
push
push
sub
push
pop
sub
pop
and
gs
repnz
sub
jbe
mov
pop
test
es
jle
ljmp
fldenv
xor
shlb
cmp
data16
xchg
sub
and
aad
cwtl
mov
xchg
fwait
inc
pop
mov
je
lahf
loopne
lods
pushf
call
or
dec
pop
outsl
repz
test
xchg
pop
stos
add
inc
jns
dec
outsl
push
inc
imul
rclb
push
lds
mov
das
dec
clc
fisttpl
mov
and
fwait
jb
ljmp
repnz
fstpt
xor
test
or
ljmp
mov
ss
and
inc
cmp
aad
cmpsl
cmc
ds
xchg
jno
out
xchg
or
adc
in
cmp
je
imul
scas
ja
xor
push
pop
push
xor
pop
jecxz
test
mov
mov
daa
icebp
testb
out
test
push
icebp
shll
sbb
or
or
imul
scas
pop
insl
push
jmp
pop
pop
jne
out
cmpsl
pop
adc
mov
insl
shll
cld
addr16
ljmp
mov
in
jp
divl
addr16
mov
cltd
out
push
loopne
fsub
cs
mov
add
cltd
out
mov
xor
pop
mov
jge
nop
call
dec
lret
jge
push
roll
bound
jg
xlat
push
popf
mov
pop
mov
dec
mov
shll
cmc
xor
inc
stos
inc
repz
jbe
stos
xorl
cmc
sbb
movl
out
outsl
sub
xor
jno
adc
push
pusha
sbb
mov
xchg
or
lock
sahf
cmp
mov
fucomi
loop
aad
lods
jge
pop
push
sbb
xchg
sbb
es
push
inc
pop
fimull
fistpll
lret
jno
stos
adc
ljmp
mov
xchg
mov
sub
daa
push
or
push
add
pop
stc
pop
addr16
es
rclb
adc
xchg
addr16
xor
mov
or
int3
lods
cmp
xchg
movsb
and
lea
in
cmp
mov
mov
std
cmp
or
fdivs
mov
push
movsb
mov
stc
int3
movsb
stc
xchg
out
mov
xlat
fs
cmp
inc
push
imul
push
pop
add
mov
fs
add
notb
or
mov
and
cltd
or
getsec
pop
test
enter
mov
mov
in
shll
or
test
sbb
mov
ret
cmp
outsb
jle
fcom
insl
lock
out
xorl
outsl
xchg
fisubs
sbb
mov
adc
test
in
test
iret
push
in
and
xor
mov
inc
mov
js
and
add
xor
sbb
insl
push
cmpsb
mov
push
xchg
sub
dec
jo
bound
jecxz
mov
mov
lea
push
inc
and
adc
inc
testb
sbb
sub
outsl
or
jmp
cmp
pop
ds
xor
ja
sbb
pop
sbb
insl
xchg
jg
jnp
js
addr16
jb
imul
stc
pusha
cmp
jl
das
sub
pushf
xchg
repnz
and
add
in
xchg
fdivrs
jae
in
idivl
push
push
xor
movsb
mov
sub
inc
add
sahf
aad
dec
out
cmp
test
xor
int
mov
fwait
ljmp
out
adc
mov
dec
or
mov
loop
clc
js
hlt
lock
jae
xor
pop
lods
lock
leave
or
fmulp
popf
or
loope
mov
loope
sbb
addl
pop
sbb
das
mov
lea
enter
push
sub
mov
mov
sbb
or
and
in
ljmp
sbbb
xchg
mov
movsl
std
push
sbb
jno
int3
adc
fmul
fdiv
dec
ret
cltd
pop
xchg
outsl
adc
xchg
add
lcall
jg
addl
and
in
out
adc
repnz
jg
mov
inc
das
inc
push
jmp
daa
loope
mov
ret
inc
xlat
pop
orw
lret
pop
jae
fucomi
in
mov
outsl
nop
into
xchg
jne
dec
orl
jecxz
cs
sahf
and
lcall
xor
out
ja
dec
add
pusha
push
and
faddl
es
out
lcall
movsl
xchg
cmpsl
hlt
jecxz
jae
cs
insl
or
xchg
xor
notl
dec
scas
cld
mov
bound
aaa
sub
mov
das
dec
inc
mov
mov
lret
adc
mov
xor
lahf
addr16
xlat
xor
mov
sub
or
adc
add
bound
fwait
test
in
mov
sub
push
mov
xchg
into
sbb
pop
and
mov
int
mov
mov
bound
sbb
das
add
testl
xchg
jns
mov
sub
xchg
fstpl
inc
fidivrl
in
mov
das
mov
addb
jno
xor
sbb
jbe
cld
add
push
jo
xchg
mov
sbb
jb
sub
lcall
vcvtdq2ps
or
sub
inc
mov
add
hlt
push
add
xchg
inc
or
adc
insb
lret
bound
xchg
shlb
push
sbb
pop
pop
mov
ret
subb
les
in
jecxz
incb
push
mov
push
push
xchg
lock
rcrb
iret
xor
mov
jle
sbb
lea
jne
test
sbb
popf
call
mov
ds
mov
cwtl
repz
je
gs
rorl
adcb
or
stos
inc
out
into
mov
jns
jae
jb
sub
and
push
xchg
cmpsb
push
stos
loop
sbb
arpl
and
jb
mov
aaa
aam
aad
ret
jmp
push
popf
jb
lcall
cmp
mov
outsb
ds
mov
or
sub
inc
lea
das
xchg
pushf
out
cltd
in
ret
lcall
add
shll
es
cwtl
adc
sub
add
dec
pop
out
iret
mov
mov
popf
pop
and
popf
cmp
aaa
mov
jg
stc
test
pop
rolb
popf
mov
aas
push
dec
inc
mov
jp
mov
jo
xchg
ficomps
inc
out
xchg
sbb
push
pop
fsubs
cs
inc
je
mov
xchg
push
dec
arpl
inc
ret
sub
in
lds
mov
rcrb
add
jl
mov
lea
rcrl
rclb
cmp
adc
insb
lahf
cld
mov
cmpsb
cwtl
mov
and
sub
inc
jmp
repnz
mov
leave
sarl
push
jle
fadds
std
outsl
frstor
sbb
lock
lea
cmp
ret
mov
mov
sbb
test
lret
adc
pop
dec
add
in
or
fmuls
scas
xor
adc
addl
xor
and
add
inc
adc
push
cmc
decl
xor
popa
aaa
loope
jecxz
es
jbe
push
dec
xlat
dec
ja
leave
push
xlat
cmp
cmp
xor
testb
scas
push
enter
bound
inc
fiadds
push
imul
repz
inc
cmpsb
enter
inc
sub
lret
pusha
dec
out
sbb
jle
stc
movsb
xchg
sahf
std
les
stc
sub
jl
jne
stos
push
sti
lcall
ror
or
mov
and
jo
mov
mov
stos
mov
xchg
fisttpl
xchg
and
das
xchg
aam
addl
inc
into
ret
xchg
push
repz
or
popf
cmp
sbb
gs
imul
pslld
add
jecxz
sbb
lods
scas
cmp
xor
imul
mov
outsl
call
pop
fsubrs
or
js
dec
fistps
test
mov
outsl
call
pop
fsubrs
or
js
dec
fistps
test
cmp
or
cwtl
outsl
call
pop
fsubrs
or
js
dec
fistps
test
mov
outsl
call
pop
fsubrs
or
xchg
mov
cmpsl
pushf
and
aad
stos
adc
in
push
mov
subl
jecxz
repz
insb
rcrl
lods
adc
arpl
jae
inc
in
sub
or
cmp
sub
pop
dec
repz
insb
rcrl
lods
adc
arpl
jae
inc
in
push
sbb
das
nop
dec
icebp
dec
repnz
mov
movsb
aas
lods
add
jp
imul
roll
jbe
enter
inc
daa
ss
sub
shll
sub
pop
push
xchg
fsubl
testb
add
mov
xchg
shl
or
dec
cmp
ret
cmp
ds
imul
repz
push
mov
fisubrl
repz
imul
inc
mov
xor
sub
lods
in
pop
orl
dec
or
iret
push
or
push
push
sahf
and
in
cli
add
addr16
pop
add
mov
cmpsl
xchg
or
int3
repz
sub
xchg
push
push
mull
mov
pop
mov
loopne
jnp
xchg
ret
outsb
pop
and
fsubl
jae
inc
in
push
sbb
or
cmp
sub
pop
jecxz
repz
insb
mov
cli
add
adc
add
imul
sbb
clc
push
fbld
adc
sub
lret
sub
stos
lea
repnz
mov
jno
jbe
dec
int3
jae
inc
in
push
sbb
or
cmp
sub
pop
jecxz
repz
insb
rcrl
lods
adc
arpl
jae
inc
in
push
sbb
or
cmp
sub
pop
jecxz
repz
insb
rcrl
rcl
or
ds
lods
int3
jae
scas
dec
fildll
add
inc
divb
jge
inc
jns
pop
les
push
jmp
gs
lcall
xchg
push
rorl
and
jno
stos
push
call
les
dec
leave
push
cld
or
iret
loop
lahf
data16
xor
mov
dec
lcall
and
in
xchg
sbb
jge
push
jge
cmpsl
xor
movsb
insb
rol
stc
stc
cmp
push
xchg
sub
mov
and
cmpsb
ss
cmp
in
adc
push
gs
scas
or
mov
push
in
jo
cwtl
movsb
in
xor
lea
cmp
push
cld
scas
adc
lret
push
ffree
xchg
lock
mov
mov
push
dec
dec
jne
dec
cmpsb
push
lret
mov
movsb
jge
outsl
stos
adc
inc
jae
xor
jbe
pop
in
cmp
imul
add
pop
insl
notl
mov
add
arpl
pop
pop
pop
sub
adc
sub
or
into
aaa
clc
mov
insb
and
mov
fldl
leave
add
subl
pusha
mulb
adc
cs
pushl
fiadds
cmp
push
sbb
jmp
fdivrs
push
jl
repnz
out
mov
xor
xchg
xorb
arpl
mov
inc
imul
add
inc
pop
pop
stos
mov
or
xor
xchg
nop
adc
sti
loop
adc
or
add
je
xor
add
js
sahf
sub
test
mov
and
pop
imul
aad
jae
cwtl
icebp
cli
scas
or
push
lock
push
push
fdivl
pop
push
shll
loopne
fsub
or
lods
add
push
adc
test
cmp
jl
inc
loope
or
pop
mov
std
data16
ds
jae
mov
fcmove
lcall
dec
lret
jne
sbb
mov
ret
adc
jg
push
xor
packuswb
dec
inc
andl
lret
push
sub
pop
addr16
or
sbb
jg
popf
std
aam
hlt
mov
jl
dec
sbb
mov
dec
pmaddwd
mov
cltd
mov
mov
sarb
fs
or
out
jge
lcall
push
mov
fldenv
jge
xchg
inc
sub
mov
or
jae
xor
stos
data16
test
push
mov
dec
dec
jmp
hlt
nop
pop
decb
pusha
lret
std
dec
mov
rcrl
mov
jne
imul
in
or
mov
lahf
pushf
xchg
rorb
jmp
scas
xor
ret
xlat
mov
jmp
and
into
iret
pushf
xor
lcall
pop
mov
movsl
xor
lds
mov
mov
add
cmc
cmp
lods
adc
mov
cli
vaddps
push
rorl
pop
movsb
lcall
dec
insb
insb
pop
xchg
mov
mov
cmp
mov
clc
adcl
jecxz
mov
pusha
dec
rol
fistpl
jae
push
stos
mov
lcall
lahf
xchg
arpl
push
outsb
cmp
cmp
inc
mov
orb
jne
or
dec
dec
stc
lods
in
push
fcmovbe
fisubs
pop
pop
out
rcrl
icebp
cmpsb
cli
mov
jl
add
xchg
jmp
sti
dec
push
out
sbb
imul
test
xor
insb
fwait
daa
nop
and
outsb
bound
or
fisubrs
cmp
jge
mov
es
mov
xchg
xchg
xchg
mov
mov
andl
or
je
repz
fidivs
cmp
sbb
adc
and
repz
in
lds
xchg
fwait
jno
lret
fistpll
dec
bound
sbb
cs
stos
xor
inc
lods
stos
jo
sbbl
popa
mov
cs
pop
cwtl
mov
in
popa
inc
test
jecxz
lret
pop
lods
repz
or
rolb
xor
mov
jecxz
dec
jecxz
fisubs
mov
in
arpl
pop
sbb
xor
jns
and
ja
cwtl
ds
rcrl
xor
dec
push
ss
imul
xlat
mov
aas
xor
lock
jl
loope
cmp
js
ljmp
test
inc
rcl
aam
inc
dec
xorb
add
iret
call
or
xor
cmc
xor
cld
bound
pop
xchg
cmp
cmp
orl
enter
cmp
fidivl
sub
jbe
xor
xchg
sub
cltd
adc
cmp
leave
mov
test
lahf
int3
xor
ror
leave
pop
push
and
sub
inc
xlat
xor
pop
lods
inc
xor
mov
fists
add
repnz
jecxz
inc
ret
xchg
xchg
adc
sbb
pop
ja
xor
popf
fstpt
mov
sbb
out
ret
out
push
das
mov
mov
mov
pop
les
shrl
xlat
repnz
jnp
lock
and
add
shll
cmp
jecxz
fstpl
jge
idivl
cli
roll
push
sbbl
addl
mov
xchg
pusha
cwtl
sbb
or
ss
xchg
rolb
lret
mov
xchg
sub
int3
mov
repnz
inc
xchg
jmp
adc
scas
adcb
out
test
or
test
in
clc
test
jle
pop
mov
out
and
hlt
adc
cmc
mov
cmc
cmp
and
mov
popa
pushf
mov
mov
xor
pop
in
je
outsb
jnp
ja
les
push
fldl
mov
imul
mov
jmp
into
cmp
sbb
pop
jecxz
xchg
cwtl
loope
xor
jecxz
fwait
inc
out
inc
xor
dec
shrb
fnstsw
jmp
test
subl
xlat
pop
or
and
jp
ja
sbb
xor
jmp
out
or
adc
addb
rcrl
lcall
aaa
out
es
in
ljmp
pop
cmp
fdivrl
enter
aad
pop
inc
scas
dec
hlt
cmp
inc
pop
dec
inc
sub
push
push
dec
sub
test
arpl
outsl
out
cmc
jae
sub
cld
je
ljmp
vunpckhps
push
rcrl
and
sbb
in
mov
pop
add
jle
ja
adc
mov
ds
roll
lahf
fs
daa
and
xchg
faddl
pop
fldl
mov
mov
gs
sbb
pop
pop
rcrb
pmulhw
xchg
sub
add
jl
lahf
shl
stc
incb
pop
ret
adc
in
push
mov
inc
out
cmp
call
or
mov
daa
mov
stos
in
inc
add
push
stos
mov
imul
sbb
rolb
mov
bound
mov
scas
or
mov
int3
subb
mov
inc
sub
scas
jecxz
mov
xchg
mov
test
imul
and
das
hlt
or
mov
xchg
dec
pusha
mov
int3
pop
dec
lahf
or
shrl
xchg
call
mov
sub
dec
sbb
dec
das
push
mov
enter
movsl
neg
mov
sahf
cmp
pop
fdivrl
call
xchg
out
mov
xchg
xor
pusha
lcall
or
jno
mov
loope
fists
push
xchg
xor
inc
pop
in
fsubp
add
fwait
inc
cli
mov
decl
imul
or
jle
inc
rcrb
ret
fsts
pop
cli
mov
mov
mov
xor
pop
cmp
aam
outsb
dec
pause
sbb
test
inc
subb
imul
inc
mov
dec
inc
mov
daa
sbbl
in
xchg
fwait
les
jbe
and
or
and
and
jnp
xlat
das
stos
jecxz
scas
cmp
and
stc
enter
xor
xor
jb
lret
movsb
dec
pop
inc
dec
push
lods
scas
gs
mov
shrl
shl
mov
push
in
cwtl
pop
leave
xor
hlt
push
xchg
repz
leave
idiv
shr
les
push
cmpb
ret
xlat
push
pusha
xlat
sbb
lods
mov
fsub
xchg
add
dec
and
ja
loop
sub
test
push
xor
out
mov
mov
sbb
push
mov
int3
ficompl
dec
xor
push
add
sub
jle
mov
scas
inc
add
xchg
jge
subl
jo
cli
jle
jnp
cs
incl
int3
lock
and
mov
jne
sbb
pop
push
xchg
pop
xchg
mov
cmc
mov
add
mov
das
daa
lds
xorb
cmpsb
mov
jo
or
xchg
mov
cmpsb
xor
lretw
xor
aad
dec
pop
fs
cmp
ss
xchg
pop
jg
mov
add
cmpsb
gs
sub
stc
pop
sahf
jmp
test
and
adc
lret
sbb
xlat
sbb
inc
out
xchg
pushf
jg
ja
movsb
and
inc
push
lahf
xor
fs
mull
mov
mov
pop
mov
mov
fmul
mov
mov
mov
xchg
sahf
jo
test
lea
lods
jae
repnz
sub
mov
adc
add
jle
jae
xor
out
jecxz
push
and
jb
lds
cs
repz
or
decb
sti
cmpsb
pop
push
and
int3
mov
enter
mov
test
fcomps
inc
xchg
fs
insl
andl
sub
xor
add
lods
cli
repnz
sbb
push
and
mov
push
adc
push
mov
add
cltd
mov
mov
shll
jmp
xor
icebp
jp
mov
call
clc
pusha
bound
push
mov
lock
fcomps
je
jns
cmp
test
repz
push
loopne
mov
or
adc
call
push
cmp
dec
sub
adc
jno
push
cs
xchg
ss
push
outsl
cmpl
lcall
and
pusha
and
idivb
jge
inc
jl
push
sbb
mov
insb
xor
jg
adc
mov
stos
and
or
insl
or
mov
xor
inc
and
pop
stos
mov
hlt
nop
jle
jecxz
jae
inc
cmpsb
shrb
push
xlat
jp
jp
add
xchg
adc
je
in
pop
push
shr
out
mov
xor
loop
idiv
cmpsb
clc
out
xchg
pushf
sbbb
sub
inc
mov
push
push
mov
xor
jp
out
arpl
je
xchg
test
xchg
or
xor
push
rorb
fidivs
add
mov
pop
or
iret
in
xchg
add
mov
ss
or
mov
xchg
dec
iret
mov
jne
mov
or
test
xchg
xchg
xchg
jae
scas
xchg
and
aam
adcb
test
divb
in
insb
lcall
cmp
push
aad
and
aad
fwait
aaa
mov
xor
out
mov
or
fsubrs
add
pop
notl
cmp
push
cmp
ds
and
cmpsb
cli
cmp
mov
lods
mov
xchg
jns
push
sarl
mov
lods
rcl
in
jbe
in
cli
xchg
sahf
cld
sub
mov
daa
iret
repz
pop
ret
das
js
lcall
lahf
out
push
repz
mov
mov
cli
xor
dec
mov
not
jae
jecxz
mov
push
ds
jmp
out
sbb
mov
lret
es
stos
mov
cmp
out
das
sub
mov
cmp
mov
jbe
dec
jge
ret
cwtl
jns
loop
cmpl
mov
out
inc
stos
arpl
aaa
mov
ja
popa
icebp
sub
xlat
and
pusha
test
in
arpl
jne
inc
out
out
in
adc
cwtl
inc
movsl
sbb
xchg
mov
push
lcall
aad
aam
jle
mov
popf
lret
scas
xor
or
push
stos
mov
fcoml
mov
push
decl
loop
xor
xchg
cmovle
cmp
or
xchg
std
test
push
xor
repz
fcmovb
cmp
mov
inc
push
xor
pop
iret
xchg
and
mov
push
imul
mov
out
jp
mov
add
iret
adcb
cwtl
or
jge
jge
stc
sub
cmp
rcr
and
out
and
pop
push
dec
rol
stos
cmc
and
fistl
fmul
xlat
push
ja
add
adc
adc
mov
pop
mov
enter
outsb
mov
test
push
xchg
add
dec
dec
sub
pop
lret
popf
rcrb
addl
out
inc
ljmp
and
pop
scas
inc
jp
adcb
sbb
ret
pop
xor
lahf
shlb
add
loop
pop
lcall
inc
mov
jl
mov
or
adc
push
ss
movsb
fimull
into
inc
es
popf
pop
xor
lock
sbb
js
arpl
ljmp
xchg
in
jp
insl
dec
int
loopne
xchg
jnp
pop
mov
in
mov
adc
cmpl
aaa
les
mov
push
sbb
lea
loope
stos
std
mov
xchg
lea
ret
add
mul
xor
xchg
iret
ljmp
mov
mov
mov
std
cmp
cmp
bound
inc
cmp
je
mov
xchg
icebp
cli
in
clc
mov
cld
into
std
shlb
and
bound
fwait
insb
lock
loope
mov
push
jne
aam
xlat
xchg
loop
or
and
mov
bnd
scas
and
xchg
jmp
std
pop
pop
out
jl
movsb
cmpsl
fildl
ja
nop
jo
mov
mov
adc
cmp
aad
cmp
into
loop
data16
jecxz
cltd
popf
lahf
shrl
popf
es
sbb
pop
xor
out
mov
mov
test
int
into
sbb
shlb
xor
fs
mov
cmp
in
adc
mov
inc
and
rolb
sar
scas
adc
inc
mov
sbb
inc
frstor
push
iret
fisubs
aas
jle
scas
ds
jg
bound
sbb
push
lea
and
cmp
dec
cmp
mov
push
fsubrl
mov
idiv
inc
jle
xchg
rcrl
and
sbb
mov
adc
xor
js
mov
addl
clc
sub
dec
cmpsl
rol
mov
dec
out
outsb
xchg
mov
sbb
jo
xor
sbb
mov
inc
inc
dec
lods
shll
or
xlat
mov
pop
inc
dec
cmp
sbb
daa
mov
outsl
adcl
imul
out
ret
call
or
fisubrl
xor
out
mov
ss
add
in
jb
lahf
xchg
sbb
and
sub
clc
ljmp
ret
jae
std
jbe
xlat
imul
test
rclb
pop
sub
sbb
gs
xchg
xchg
adc
pop
je
mov
adc
xor
loopne
fadd
sahf
repnz
mov
dec
push
jle
lods
dec
adc
inc
add
mov
mov
mov
inc
out
dec
repnz
mov
in
mov
lret
dec
and
and
sbb
lret
push
dec
lret
repz
subl
fs
out
out
bound
adc
mov
sub
int3
xor
out
dec
cmpsb
cli
mov
outsl
mov
stc
enter
mov
shll
test
xchg
xor
dec
fstl
cmc
pop
jae
std
fwait
test
mov
out
cmp
das
and
sub
rol
dec
add
loop
lock
test
xor
ds
sub
inc
xor
cmp
shll
mov
or
in
mov
pop
mov
inc
cwtl
xor
xchg
mov
adc
stos
sbb
mov
cmpb
lods
movsb
pop
jnp
test
nop
adc
mov
sub
dec
cmp
std
data16
loop
pop
xchg
jns
sbb
adc
xchg
dec
or
adc
pop
pop
adc
daa
jl
std
xchg
jne
mov
stos
call
mov
xor
or
jnp
adc
dec
or
icebp
xchg
push
fdivrl
mov
pop
clc
lcall
cmpsl
jno
or
out
push
shlb
push
lds
xchg
mov
mov
cs
decb
xor
int3
pop
lcall
pop
cld
test
pop
js
idivb
es
je
aas
sbb
pop
inc
in
add
lds
iret
js
mov
mov
xchg
add
lcall
xchg
adc
rcrb
xor
int3
xor
popa
inc
leave
mov
mov
sbb
mov
sub
repz
or
dec
sub
cmp
pop
outsl
pop
mov
pusha
or
mov
mov
iret
dec
add
int3
repz
push
into
ret
mov
out
not
jbe
test
idivb
pop
adc
inc
mov
mov
xchg
mov
adcl
scas
push
mov
sub
hlt
mov
inc
aam
xor
fdivl
mov
sbb
nop
test
fstpl
adc
rcrb
mov
test
mov
sar
aam
test
jmp
jno
ljmp
mov
pop
push
subb
mov
rclb
rolb
mov
sbb
add
cmpsl
scas
push
cli
pop
scas
jbe
push
aad
idivl
adc
or
inc
mov
loopne
pop
adc
xchg
xchg
inc
sub
rcl
jl
addr16
das
pop
xchg
push
mov
es
push
or
inc
push
lcall
xchg
cmp
cmc
cltd
int3
nop
enter
push
xchg
xchg
stos
or
mov
repnz
push
mov
out
cmpps
xor
es
mov
pushf
push
enter
subb
in
add
xor
lcall
cli
or
lods
mov
xchg
lret
adc
movsl
mov
repz
roll
sub
lahf
inc
add
xchg
mov
movsl
rcrl
jmp
imul
fisttps
sbb
js
lcall
mov
pop
orb
xor
ds
cmc
dec
xor
lcall
into
sbb
adc
es
cmp
lcall
or
sub
nop
add
xor
loop
inc
sub
inc
loop
pop
insl
or
pop
test
push
cmpsl
push
lea
adc
pop
and
call
or
cmp
pop
icebp
call
pop
shrb
scas
pop
jl
std
mov
mov
lret
xor
cltd
out
xchg
xchg
cmpsb
sub
leave
mov
dec
repz
mov
mov
cwtl
lret
sbbl
int
cmp
xchg
mov
in
pop
in
pop
inc
sbb
push
in
mov
inc
cmp
sahf
daa
pushl
and
das
mov
inc
aam
push
inc
jl
imulb
push
fstl
dec
jle
sbbl
sub
jle
ljmp
xchg
or
mov
cmp
int
mov
add
mov
inc
dec
lahf
pop
in
mov
imul
inc
dec
pushf
add
testl
adc
pop
aam
test
mov
pushf
lret
xchg
jmp
in
test
aam
insb
mov
ljmp
insl
or
push
dec
repnz
pop
out
pop
test
fxch
into
cld
in
outsb
lret
push
movsb
cli
inc
mov
mov
xchg
add
pop
sbb
repnz
dec
sbb
xchg
lahf
negb
and
mov
xchg
or
push
sbb
cmpsl
push
int3
pop
lods
mov
test
aam
push
std
push
dec
pop
inc
shl
stos
sarb
pop
dec
sub
rcl
cmp
dec
push
inc
rep
mov
mov
fwait
jg
mov
sbb
int
mov
out
adc
rcl
rorb
sbb
mov
stos
sbb
xor
rcll
mov
cltd
mov
mov
xchg
hlt
dec
pop
mov
sbb
sti
ds
stos
jnp,pt
fdivs
add
cld
inc
in
push
sbb
or
cmp
sub
pop
jecxz
repz
insb
rcrl
lods
adc
arpl
jae
inc
in
push
sbb
or
cmp
sub
pop
jecxz
repz
insb
rcrl
lods
adc
arpl
jae
inc
in
push
sbb
subl
jge
insb
rcrl
lods
adc
arpl
jae
inc
insb
push
jecxz
repz
imul
test
sub
mov
lcall
cmp
cmpsl
add
add
add
or
add
add
icebp
add
add
add
add
cmp
add
add
add
add
add
and
addb
add
add
or
popl
test
outsb
add
add
add
inc
add
add
lahf
add
adc
add
add
add
movsl
add
add
add
add
add
add
mov
add
add
add
add
cwtl
add
add
add
inc
add
add
and
testb
add
add
add
add
dec
add
pop
add
jo
int3
add
add
sub
fldl
add
add
add
add
add
add
outsl
add
add
sub
fldl
pop
add
add
add
outsl
add
or
xor
sub
arpl
dec
add
add
add
imul
add
add
imul
xchg
xchg
add
fldl
add
jo
sbb
add
or
movsb
add
add
add
add
out
mov
pop
add
add
add
add
add
scas
add
add
push
add
add
add
add
add
add
das
add
add
jns
mov
sub
and
add
cld
add
add
add
pop
add
jns
jo
push
add
add
add
dec
add
dec
add
xor
scas
add
add
add
sub
dec
add
pop
add
add
loopne
addb
add
add
add
sbb
add
sbb
push
add
bound
rolb
add
add
add
xor
pop
add
add
add
add
add
add
ret
add
add
add
add
add
add
les
out
add
lea
das
add
add
out
add
mov
cmp
add
add
add
add
pop
add
add
add
popf
add
add
add
rolb
cmp
dec
add
add
add
dec
add
scas
add
add
add
popl
adc
add
add
add
mov
add
add
add
add
sub
dec
add
movsb
add
daa
add
mov
sbb
push
add
add
add
add
pop
add
add
dec
add
add
js
pop
add
jmp
cmp
insb
add
pop
add
add
jns
aad
pop
add
add
xor
add
mov
and
inc
add
add
push
add
rolb
add
ret
add
mov
add
add
inc
add
add
add
add
jnp
aad
cmp
addl
push
add
gs
add
add
add
inc
add
add
jmp
inc
add
add
inc
add
add
pop
add
add
arpl
inc
add
add
add
add
pop
add
add
add
push
add
dec
add
add
and
inc
add
add
add
rolb
add
dec
add
add
add
add
add
fldl
cmp
mov
add
add
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
xchg
aam
fdivrl
test
xor
test
into
rorb
inc
mov
and
test
aaa
iret
jmp
ljmp
std
test
push
ja
dec
adc
ss
shr
insl
adcl
cmp
sub
imull
jg,pt
jne
jo
cltd
test
call
mov
and
std
addr16
fwait
xchg
in
mov
jmp
push
sub
adc
daa
add
mov
lock
out
in
xchg
enter
sbb
jnp
lds
jae
hlt
xor
adc
test
mov
inc
adc
or
lahf
sbb
mov
insl
fsub
sbb
xlat
loop
sub
sahf
mov
dec
and
cmc
cld
or
dec
xor
mov
jae
dec
xchg
mov
pop
dec
jnp
and
shl
idivb
fs
inc
lods
mov
ja
jmp
dec
inc
test
mov
movl
dec
int3
cld
sub
dec
rclb
aas
or
mov
dec
sub
xor
cltd
leave
mov
xchg
sub
push
jo
sbb
in
sbb
fcomps
dec
cltd
xor
xchg
xor
clc
push
mov
mov
cmp
into
jmp
push
cmp
jecxz
dec
mov
adc
xlat
cli
inc
stc
sub
push
xchg
mov
fsubs
stos
xchg
imul
les
adc
or
inc
lds
jecxz
dec
lock
pop
inc
das
loop
sbb
xchg
xchg
ret
pop
sbb
lret
sbb
out
imul
ror
xchg
push
mov
jo
data16
dec
sub
pushf
cmpsb
ret
ret
push
mov
mov
aas
adc
inc
jmp
sub
add
daa
mov
sbb
stc
in
fcompl
sub
dec
mov
test
push
int3
cld
sub
inc
inc
mov
xorb
pop
pop
lahf
mov
out
cmp
enter
out
stos
push
cmp
pop
pusha
bound
inc
jmp
push
jo
mov
xor
in
shll
jge
popf
xor
mov
loopne
mov
mov
dec
stos
inc
xchg
adc
jbe
push
stos
push
add
sbb
aaa
clc
cwtl
jp
sub
mov
fs
icebp
lret
adc
adc
push
lret
in
pop
mov
lret
mov
daa
dec
dec
sbb
out
out
sbb
int
outsb
inc
xor
push
and
subb
sbb
into
xchg
dec
inc
sub
adc
xchg
sbb
or
mov
add
adc
aas
cli
lods
sub
cld
lods
sub
or
ljmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
