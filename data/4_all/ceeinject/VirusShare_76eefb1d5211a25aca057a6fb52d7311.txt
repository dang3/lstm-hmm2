call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
int3
xor
adc
lret
pop
cmp
faddl
in
xchg
popf
repnz
shrb
jge
insb
add
or
cmp
sub
fdivrl
in
sbbb
ret
dec
cmp
sbb
or
cmp
sub
fdivl
mov
mov
ret
lods
sub
dec
push
xor
gs
mov
pop
lods
pop
push
mov
imul
xor
test
sbb
xchg
mov
pop
mov
movsl
ret
popa
xchg
jae
mov
push
cmp
scas
dec
dec
jae
or
dec
mov
pop
pop
fdivl
adc
push
dec
pop
aas
shr
xchg
in
adcb
and
es
int3
push
or
add
jl
fbld
sub
mov
das
in
jns
hlt
mov
pop
cmp
sub
mov
mov
cmp
lock
cmp
dec
push
imul
jmp
mov
ficompl
enter
jge
fimull
add
insb
add
or
cmp
sub
fdivl
in
fwait
pushf
ljmp
sub
or
ja
addr16
jo
add
dec
daa
mov
jle
xchg
xchg
mov
call
mov
cmovnp
popa
and
jns
push
jo
mov
adc
jmp
in
mov
mov
xor
pop
jbe
inc
pop
inc
or
cmp
sub
fdivl
in
sbbb
ret
dec
and
add
or
cmp
sub
fdivl
in
sbbb
ret
dec
xor
xchg
add
pop
cld
dec
pushf
fcomps
sub
aad
add
and
push
jnp
mov
or
xor
std
data16
popa
push
divw
leave
aaa
repz
mov
scas
out
imul
mov
cmp
sbb
int3
adc
cld
dec
leave
stc
arpl
jmp
cmp
js
outsl
pushf
clc
xchg
fadd
mov
or
xchg
lcall
xor
aad
in
loopne
clc
dec
cmpsl
out
movsb
and
mov
enter
jge
xor
sub
jl
daa
cltd
mov
xchg
xor
stos
ret
nop
dec
dec
xor
cltd
push
push
add
push
xor
in
test
xchg
dec
mov
jno
icebp
mov
call
das
add
movsb
pop
add
adc
mov
push
jae
out
sahf
adc
xchg
stc
xor
jecxz
sub
not
divl
lea
sbb
and
lahf
cli
sub
jle
fisubs
iret
iret
das
fxch
repz
testl
and
xchg
arpl
or
movsl
xlat
popf
cmp
in
cmp
or
aas
outsl
dec
stos
xor
scas
cmp
in
jno
mov
pop
push
pop
aam
outsb
pop
add
daa
mov
in
cs
ss
ss
or
inc
int
xchg
ret
pushf
mov
ds
int3
leave
add
adc
shll
ficoms
outsl
mov
mov
adc
cwtl
nop
divb
inc
lods
das
push
push
mov
call
xor
xor
or
das
addr16
sub
loope
in
xchg
jo
cltd
jle
aam
mov
push
or
sbb
mov
pop
mov
jge
loopne
fimull
and
push
push
add
rol
push
xor
repz
rorb
out
jns
lret
movsl
test
sub
ret
clc
inc
fnstcw
or
rorl
aam
roll
xor
icebp
jl
cmpsl
dec
add
nop
jle
cmc
mov
mov
and
or
rcr
sub
call
addl
das
in
cld
notb
icebp
pop
imul
cmp
dec
push
test
cli
sti
mov
inc
pusha
sub
or
bound
or
pop
loop
fisubrs
loope
ret
mov
cmp
mov
lahf
add
notl
cmpsb
and
out
mulb
sub
mov
push
out
ljmp
jbe
lahf
lods
sbb
scas
fildll
cwtl
outsb
xchg
push
insl
shl
into
aaa
test
cmp
sub
test
lods
or
aaa
mov
pop
int3
mov
and
shll
cli
repz
xchg
into
outsl
adc
mov
mov
sbb
pop
lahf
xchg
or
repz
mov
lret
mov
jge
pop
inc
rcll
jg
xor
and
lahf
add
mov
push
movsl
scas
fiadds
mov
jne
dec
aam
or
mov
lcall
aas
mov
xor
out
push
out
mov
push
sbb
ljmp
lds
sahf
jnp
mov
xchg
add
dec
call
aad
cwtl
bound
pop
mov
dec
mov
sub
and
xor
adcb
leave
mov
rolb
aam
scas
test
bnd
enter
dec
dec
insb
popa
adc
cli
in
je
subl
roll
mov
lds
pop
xchg
cmp
adc
mov
push
adc
lahf
jno
cmpsl
cmp
jb
xor
pop
pop
pop
jl
mov
push
ficoml
xor
aaa
cwtl
das
sub
cmp
jp
sub
jo
pop
nop
xchg
lods
cmpsb
sbb
dec
clc
jmp
cmp
pushf
incl
hlt
fiaddl
sbb
or
jle
mov
lock
add
mov
lea
hlt
pop
dec
iret
aad
pop
jae
push
mov
inc
cs
lods
repz
lahf
jg
aad
sbb
add
or
cmpsb
push
inc
and
mov
cmp
enter
mov
push
pusha
mov
int
in
ds
jno
repnz
aaa
je
mov
cmp
addl
pop
clc
lods
push
mov
addb
xchg
sub
outsl
dec
dec
cmp
sub
push
add
fmuls
aad
fcoms
mov
ret
test
fldcw
jecxz
jge
bound
pop
adc
jne
aam
daa
adcb
mov
pop
movsl
iret
pop
enter
les
push
jl
in
das
dec
lret
sub
aam
arpl
test
add
cwtl
icebp
and
les
scas
jns
mov
mov
outsb
mov
rorl
scas
rcll
test
xchg
and
mov
lock
outsl
fcoml
pop
mov
loope
pusha
insb
xor
cmp
sub
ret
out
outsl
outsb
xchg
lods
outsb
push
repnz
xor
pushf
jnp
cs
nop
test
cmpsl
in
mov
enter
or
or
in
lea
icebp
push
sbb
daa
iret
daa
sub
inc
in
sub
push
insl
cmpsl
jb
negb
in
add
lods
jo
xor
lods
loope
stos
xor
lahf
es
aas
xor
loopne
mov
and
jl
cmp
cmpsb
ljmp
pcmpgtd
and
and
jbe
adc
movsl
popf
ss
jp
lds
cld
ret
int3
dec
test
xchg
jnp
push
fdivp
cmpsb
mov
outsb
xchg
xchg
add
pushf
push
pop
push
cmpsl
or
and
dec
inc
fs
adc
insl
xchg
shl
repnz
jbe
pusha
fiadds
adc
out
sbb
inc
adc
stos
pop
dec
or
and
jge
pop
loope
call
rcll
ljmp
pop
cmpsl
push
shlb
outsl
jbe
enter
faddl
das
sbb
stos
mov
jo
arpl
add
jne
add
out
dec
xchg
mov
push
pop
mov
call
iret
lahf
mov
jge
incl
cli
inc
ss
jne
and
dec
push
pop
pop
xor
inc
xchg
push
pop
push
pop
xlat
jno
hlt
jne
stos
push
icebp
repnz
les
mov
and
imul
flds
mov
mov
jmp
add
lock
jno
stc
imul
popf
stc
mov
adc
fisubl
xchg
adcb
test
or
push
addl
fidivl
fbstp
sub
dec
mov
lea
insl
push
enter
jge
inc
sbb
add
mov
push
jp
xor
sbb
mov
cmpsb
sub
fs
int3
push
das
sub
sbb
adc
dec
repnz
fwait
xor
insb
fdiv
xor
sbb
aas
je
icebp
pop
pop
sbb
mov
jbe
gs
int
ljmp
cltd
sbb
pushf
sbb
out
pusha
aam
pop
icebp
xor
mov
pop
cmp
and
jecxz
push
mov
and
sub
mov
addr16
ret
mov
pop
sub
xor
jnp
cmp
imul
add
loop
dec
out
pop
push
adc
ds
cmpsl
pop
ret
jecxz
xor
fimuls
cmpb
int
xor
sbb
mov
loopne
pop
std
fsubrl
ret
mulb
lea
adc
sarb
es
pop
dec
je
cld
cmpsl
xor
xchg
pushf
into
pusha
mov
xor
out
and
fwait
mov
stc
jo
pop
inc
test
das
cmp
push
aad
ja
out
lods
xor
call
popf
sub
sbb
push
push
sbb
out
sub
out
xchg
mov
lods
cwtl
sarl
int3
mov
sarb
and
dec
dec
push
dec
sub
add
sbb
out
adc
jns
pop
xor
and
xlat
aaa
out
jle
into
mov
adc
cmp
leave
ret
cld
test
addr16
pop
inc
in
jno
fwait
lret
inc
in
mov
xchg
test
xchg
cmc
cmp
pop
aaa
aaa
and
mov
call
sbb
jae
into
aaa
jle
imul
or
icebp
inc
imul
loop
mov
movsb
rcrl
sub
sbb
push
add
mov
sbb
aam
inc
pop
mov
inc
and
outsl
or
add
orl
loope
jno
in
inc
push
and
sbb
xorl
or
hlt
div
in
sbb
dec
fwait
pop
or
mov
aas
aaa
shl
adc
into
pusha
xlat
fstl
ffreep
xchg
sbb
xor
in
mov
ror
push
into
rcrb
push
out
hlt
mov
push
mov
xor
pop
inc
in
push
pop
loope
jno
fdivl
loopne
out
lock
ficoms
out
out
cmp
adc
icebp
pop
inc
cli
lds
pop
ret
scas
xchg
xor
xchg
lret
in
outsl
add
lahf
push
mov
fstps
in
or
insl
and
fdivrs
lcall
sbb
popa
xor
in
or
or
addr16
ret
movsb
mov
enter
fnsave
mov
or
mov
lahf
in
notl
test
aas
daa
loop
adc
push
loopne
or
pop
pop
iret
sbbl
popa
cmpsb
pop
sbb
lret
xchg
scas
stos
jne
dec
cvttps2pi
adc
pusha
lahf
mov
int
imul
fisubrl
dec
xor
xchg
scas
cmp
mov
cmpsl
cmp
pop
testb
fldl
mov
cmp
lea
aad
dec
leave
stc
clc
xchg
and
fwait
dec
jecxz
hlt
insl
mov
dec
xor
fnstcw
je
or
cmpsl
dec
aad
fdivrs
cmp
insl
sub
js
and
jg
shr
pop
in
insl
repz
insb
fisttps
fwait
movsb
mov
cld
mov
fs
sbb
icebp
stos
xchg
lds
cmp
rcrb
push
jp
mov
shrb
mov
mov
jmp
shll
repz
shlb
cmp
clc
inc
rclb
jns
lds
adc
sarl
xor
fimuls
mov
mov
xlat
movb
repz
les
pop
push
jg
adc
xor
xchg
mov
pop
leave
lcall
stos
dec
fcmovbe
fmuls
and
insb
popa
cmp
lcall
outsl
mov
divl
test
lods
sbbl
xor
dec
clc
add
dec
jp
out
ret
insb
mov
or
imul
add
pushf
push
pop
bound
dec
sub
dec
adc
aam
pushf
les
sbbb
cli
arpl
aad
test
add
jns
inc
push
or
adc
or
lar
dec
sbb
daa
push
inc
jmp
xor
bound
jno
andb
les
lret
aad
pop
aaa
into
pop
or
shl
test
sbb
and
mov
mov
jne
xchg
cmpl
mov
pop
outsb
sbb
popa
cmp
jp
popf
das
xchg
popa
adc
xor
dec
aas
sub
mov
rcrl
js
bswap
scas
mov
dec
out
push
ror
stos
cmpsl
xchg
stc
sbb
push
adc
pop
ret
out
dec
mov
push
les
leave
inc
push
xor
xchg
sbb
ljmp
icebp
mov
int
lods
mov
push
and
mov
clc
inc
ficomps
out
jecxz
add
lods
mov
sub
push
push
pop
xor
mov
cmp
mov
sub
sbbl
pop
fwait
mov
cmpsb
jne
stc
xchg
pop
push
jae
mov
xor
sub
mov
xor
sub
es
sbb
jmp
hlt
dec
out
out
and
mov
aas
arpl
cmp
xchg
ret
jnp
dec
push
cmp
mov
bound
je
sbb
loop
push
mov
lea
enter
pushf
adc
inc
out
orl
in
int3
cmp
xchg
loopne
lahf
ds
cmp
xchg
or
jno
jle
pop
aas
xor
jae
push
aaa
mov
cltd
xchg
icebp
cmc
and
inc
popf
aaa
aam
aad
jg
jnp
adc
add
xchg
sub
jl
pop
bound
fwait
int3
sar
jne
cmp
jno
add
jmp
jo
scas
icebp
xchg
mov
stos
sbb
loope
scas
lret
ret
shlb
cltd
mov
cmp
dec
xor
sub
xchg
cmp
xchg
jl
js
out
inc
pop
imul
aam
xchg
mov
cmpsl
sti
loopne
mov
lahf
push
adc
xchg
cld
aam
fadds
movsb
nop
je
inc
sub
mov
aad
xchg
mov
pop
pop
cmc
filds
jmp
pusha
pop
jbe
std
inc
xchg
add
fcmovnb
dec
jns
inc
xchg
repz
jnp
frndint
or
jb
sbb
xchg
push
popf
loopne
add
popf
push
mov
idivb
scas
mov
cwtl
jmp
adc
sbb
adc
scas
fwait
sarl
sbb
outsb
popf
loop
mov
cmp
jae
adc
cs
jp
add
and
dec
in
mov
mov
xorb
dec
das
pop
lock
xchg
or
fbld
pushf
mov
jo
cmc
out
leave
and
mov
add
jbe
push
jmp
mov
loop
in
ret
and
jmp
dec
and
mov
mov
adc
ja
sahf
sbbb
jno
inc
cld
cmpsb
push
stos
imul
rep
iret
mov
stc
ja
incl
test
jae
insl
pop
push
sbb
and
pop
inc
push
sub
fsubs
mov
inc
mov
and
and
inc
loop
adc
fistpl
pop
xor
xor
lods
sti
pusha
aam
cmp
stos
cmp
push
mov
pop
pop
mov
lea
mov
dec
data16
fpatan
cmp
shll
or
mov
jp
ret
push
outsl
pop
sub
fisubrl
loop
mov
add
int
int
xchg
jmp
cli
lock
popf
sbbl
test
mov
or
push
mov
sub
lock
into
leave
ds
xor
add
cmp
insb
mov
inc
fs
jg
inc
inc
jmp
cmc
gs
je
jp
test
call
mov
popa
mov
jne
jns
stos
cltd
addl
mov
adc
mov
std
stc
ror
jno
jno
xchg
lock
mov
jge
mov
push
ja
call
jae
mov
ds
cmove
fld
and
outsb
dec
dec
gs
fs
sub
mov
jae
pop
sbb
call
sub
lahf
sbb
repnz
or
shlb
dec
push
or
cmp
inc
ja
hlt
add
jnp
fistps
or
cwtl
or
pusha
and
aas
repz
jg
or
add
jge
jecxz
mov
or
dec
cmc
xor
sbb
xor
xor
cmpb
sbb
ja
scas
inc
mov
adc
rclb
rorl
rclb
stos
xchg
loop
decl
les
stc
mov
mov
push
lock
jl
push
bound
les
int
mov
pop
jns
insb
adc
mov
push
dec
xchg
insb
scas
or
dec
cwtl
pop
out
cmp
sahf
imul
std
dec
outsl
nop
cmp
dec
mov
inc
lods
xor
cmpsl
xchg
sub
negb
xchg
cwtl
loop
sub
pop
jae
rcrb
inc
lds
jp
pop
sbb
outsl
ret
popf
xchg
jne
add
lock
icebp
jno
mov
gs
fwait
pop
pop
imul
popa
dec
inc
and
js
loopne
inc
lret
mov
xchg
cwtl
test
add
mov
pop
dec
jmp
mov
push
push
cmp
lods
leave
bnd
lods
pop
inc
out
jbe
adc
cltd
ds
cwtl
xchg
in
into
jge
outsl
aas
leave
and
dec
frndint
dec
lea
aaa
adc
mov
cmp
xchg
xor
jl
test
stos
cmp
and
aam
jecxz
lcall
les
scas
adc
imul
loop
fdivl
jns
jnp
lahf
sub
sub
cmp
fisubrs
outsl
pop
lcall
mov
fildll
sub
mov
shlb
test
aas
mov
jae
xchg
in
fsubrl
ret
pop
inc
jae
mov
push
bound
mov
xchg
dec
xlat
sub
fs
aam
leave
dec
push
pushw
int
fldt
ds
xchg
sti
jl
cmpsl
loop
je
jo
hlt
inc
subb
test
and
pop
iret
das
pop
adc
ja
fimull
xchg
pop
mov
out
sub
inc
add
xchg
pusha
rcll
cmpsl
lret
add
push
call
loop
xchg
fsubl
sub
adc
into
push
iret
dec
aad
mov
in
movsb
cmpsb
jne
push
out
add
cmp
pop
mov
ret
mov
sbb
xor
int
ret
mov
pop
add
push
mov
frstor
sbb
jge
and
adc
and
popf
repz
push
hlt
and
clc
sti
shr
mov
in
push
pop
mov
dec
xor
popa
loope
sub
into
mov
xchg
sub
and
shl
inc
outsb
inc
mov
mov
lods
mov
cmp
ret
scas
popf
addr16
pusha
push
mov
fistl
cmp
pop
and
sbb
inc
push
icebp
in
sbb
dec
sub
cmp
adc
adc
jns
fwait
xor
shlb
pop
sub
inc
push
xchg
insl
dec
icebp
sub
mov
cmp
inc
imul
ret
jmp
lahf
movsb
mov
jle
call
add
aam
sbb
pop
lea
inc
mov
dec
or
mov
and
mov
pop
js
arpl
xchg
fld1
in
cwtl
movsb
into
lock
ret
movsb
push
pop
jno
xor
loop
ret
shl
div
clc
mov
aad
mov
loopne
or
jbe
hlt
jg
cmp
rol
ret
outsl
std
mov
fildl
or
mov
xchg
sbb
sub
xchg
push
xor
mov
sub
bnd
aaa
push
rorl
jmp
mov
push
push
subl
xchg
sbb
inc
xchg
cmc
test
pop
scas
lcall
inc
mov
in
inc
adc
mov
sbb
fimull
add
mov
stos
and
sub
outsl
call
gs
fcom
mov
mov
push
sub
push
cltd
xor
divl
add
rcll
inc
mov
daa
jno
sub
dec
cmc
inc
mov
fwait
test
and
mov
push
push
jmp
fdivs
test
lods
pop
js
ja
mov
sub
mov
add
sbb
push
cmp
lock
cmp
xchg
or
dec
inc
xor
cmp
pop
jmp
jmp
sub
cltd
jmp
int3
push
sti
addr16
pop
repz
xchg
lock
xchg
mov
popa
mov
aad
sar
loope
imul
popa
jl
gs
sub
cs
jo
test
xchg
addr16
and
xchg
xor
repz
icebp
or
pop
lcall
pop
xchg
hlt
fsubrs
inc
dec
and
jge
int3
sub
cs
add
mov
lock
dec
push
or
test
adc
mov
fsubs
cmpsl
aad
xchg
mov
adc
test
in
mov
add
cmpsl
andl
outsl
mov
mov
bound
fucomip
mov
adc
adc
cltd
rorb
loopne
mov
sub
adc
fbstp
cmp
jg
mov
gs
pop
jbe
mov
add
sub
cmpsl
add
js
jg
cwtl
shll
inc
add
mov
in
into
inc
xchg
shl
jecxz
int
fs
mov
ss
loopne
mov
cld
addr16
jecxz
fcompl
mov
mov
push
sub
int3
sub
xchg
jnp
mov
add
inc
mov
adc
outsb
mov
add
and
int
sub
aad
in
dec
fildll
call
adc
cwtl
cmp
or
daa
out
scas
aaa
xchg
push
dec
xchg
sub
lahf
arpl
dec
pop
inc
xchg
push
sub
fisubs
rcrb
mov
and
cltd
lock
adc
inc
sti
dec
outsl
sbb
push
fwait
adc
aam
notb
insb
add
or
cmp
sub
fdivl
in
sbbb
ret
dec
and
add
or
cmp
sub
fdivl
in
sbbb
ret
dec
and
add
or
cmp
sub
fdivl
in
xchg
lods
pop
ss
es
insb
add
or
cmp
sub
fdivl
in
cmc
jmp
add
inc
lods
push
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmpsb
scas
mov
xchg
xchg
mov
xchg
ss
data16
jbe
inc
pop
push
pop
cmpsb
scas
mov
xchg
idiv
iret
mov
jb
push
pop
data16
inc
dec
push
pop
cmpsb
scas
mov
xchg
idiv
iret
fbld
das
ss
push
jno
sub
sub
jecxz
iret
cmc
fsub
cli
cmpsb
push
notb
dec
int3
sub
ret
into
push
inc
push
in
out
or
mov
fwait
sub
in
adc
pushl
int
and
aas
sbb
mov
xchg
or
imull
jg
pop
push
pop
mov
adc
sbb
das
pop
ds
or
nop
incl
ret
jecxz
mov
lock
cmp
mov
rorb
push
lahf
inc
cmp
outsl
ret
jo
xchg
pop
fs
adc
sahf
xlat
fbstp
ror
sub
lock
pop
jmp
je
cmpsb
daa
inc
mov
shll
xchg
push
mov
pop
push
jbe
pop
cmp
jp
loopne
jle
das
inc
dec
mov
xchg
idiv
iret
fbld
das
ss
push
movhps
outsw
jbe
inc
dec
push
sbb
scas
ffreep
jecxz
repz
stos
xchg
stos
addr16
xor
gs
jp
add
pop
cmp
cmp
rcl
repz
mov
cwtl
icebp
inc
dec
xor
inc
push
and
xor
push
or
out
shr
out
ljmp
iret
fbld
das
ss
push
movhps
outsw
jbe
inc
dec
push
pop
cmpsb
scas
mov
xchg
idiv
iret
fbld
das
ss
push
movhps
outsw
jbe
inc
dec
push
pop
cmpsb
scas
adc
cmp
pop
jl
cwtl
leave
cmp
inc
and
adc
hlt
iret
and
fs
dec
sub
add
cmp
jns
dec
xor
rorl
add
or
mov
push
int
xor
roll
pop
or
jo
rorb
fistpll
push
sub
and
les
mov
ret
sahf
push
js
lods
sbb
jmp
push
loopne
jb
aaa
jmp
add
cs
sti
xchg
ljmp
popa
cmp
or
dec
adc
cmpsb
mov
push
sbb
mov
push
idiv
xchg
xor
or
pushf
push
xchg
pop
sbb
lret
xor
xor
pusha
js
jmp
cmpsb
gs
or
mov
inc
add
mov
and
in
dec
pop
sbb
sub
jecxz
std
cmp
lret
popf
lods
adc
and
js
lods
pop
push
into
movsl
xlat
cmp
sbb
add
es
insb
pusha
iret
dec
adc
mov
dec
jle
in
push
pop
or
and
jno
sub
sti
mov
mov
ret
popa
adc
arpl
call
mov
loope
mov
int
push
and
xchg
pop
inc
mov
mov
mov
test
into
ret
outsb
mov
enter
sub
inc
lahf
pop
faddl
movsb
push
add
mov
xchg
orb
inc
add
pop
es
dec
push
jno
xor
push
daa
mov
subb
push
cmc
push
nop
mov
mov
js
and
mov
orl
jmp
sbb
add
ret
xchg
fstps
add
cmp
cmp
pop
cli
and
pop
cld
push
mov
jle
cmp
or
inc
fcmovnu
inc
cmp
dec
stos
add
jl
mov
adc
xor
sbb
aaa
jns
dec
in
mov
xchg
push
mov
dec
lret
aas
and
les
cmpsl
cmpsb
nop
or
lea
mov
push
xor
subl
mov
inc
inc
xor
sbb
pop
or
sbb
adc
or
fisubl
xlat
cld
xor
mov
add
cmpl
subl
inc
es
cs
dec
push
ds
mov
pop
stos
xor
loopne
mov
stc
push
mov
jno
aam
aad
hlt
scas
xchg
jno
adc
mov
and
mov
mov
xor
lods
mov
pop
clc
arpl
mov
cmpl
dec
inc
aam
lcall
arpl
cmp
adc
dec
ja
call
adc
stos
popf
fistpll
jp,pn
jl
mov
xor
adc
pop
mov
enter
xchg
outsl
push
roll
insb
dec
iret
dec
xchg
push
mov
ficoml
ljmp
sbb
jmp
sub
loop
or
mov
jae
xchg
xchg
out
es
push
mov
lret
mov
dec
fwait
rcrl
clc
in
lret
cmc
out
mov
jl
inc
rep
pop
adc
mov
lcall
orl
push
cltd
mov
shrl
dec
cmp
jae
fsubrs
jp
mov
and
mov
call
jg
lcall
stos
add
mov
aas
xchg
movsl
sarb
xor
cmp
inc
adc
into
sbb
aam
push
and
inc
or
and
push
xchg
xor
sbb
addr16
incb
jmp
xorb
aas
lods
fildl
xor
out
pop
sbb
fadds
arpl
rol
and
mov
mov
aad
dec
sub
out
das
jae
and
pop
repz
add
stos
jecxz
adc
pop
cmp
pop
sbb
lret
dec
mov
arpl
mov
nop
cmpsb
mov
in
repz
or
lock
and
repnz
lea
ficoms
or
jmp
push
pop
scas
dec
jecxz,pn
call
dec
loope
out
adc
popa
test
das
xchg
xchg
jp
push
jne
nop
lods
data16
div
cmp
inc
pusha
in
inc
pop
lds
adc
xor
lahf
popa
enter
mov
push
inc
xor
aam
loopne
jbe
gs
xchg
leave
push
test
fsubp
dec
add
in
jne
jbe
add
jl
xlat
mov
fwait
and
jae
pop
mov
sbb
inc
mov
ret
or
stos
js
or
shrl
sub
adc
xchg
leave
rorb
int
insb
xchg
xchg
mov
sub
das
or
jnp
int
add
inc
cmp
pop
mov
xor
call
xchg
jg
mov
notl
inc
xchg
mov
dec
das
bound
outsb
push
sbb
pop
mov
push
lods
adc
test
mov
lcall
sub
repz
cmpsb
adc
sub
bound
stos
mov
mov
pop
imul
loopne
mov
cmpsl
jae
in
fs
and
add
nop
inc
push
out
adc
mov
xchg
cmc
pop
in
mov
xchg
xor
or
push
stos
int3
or
pop
cmp
sbb
divl
pop
xchg
push
cmp
cmp
pop
and
push
imul
add
enter
movsb
in
sti
aad
lds
hlt
jne
iret
lcall
xor
outsl
nop
lea
fcmovne
out
loop
mov
bound
insl
xchg
mov
lods
repz
dec
movsl
lahf
lahf
push
sub
pop
mov
daa
push
js
inc
fistpl
arpl
mov
inc
pop
pop
xchg
push
dec
clc
mov
inc
insb
cmpsl
insb
cmp
ret
subb
jne
rolb
out
xor
pop
or
sub
dec
dec
mov
mov
mov
inc
bnd
ds
es
sbb
mov
daa
mov
jmp
mov
subl
cmp
pop
ljmp
lods
scas
push
incb
xlat
cltd
push
std
inc
push
mov
out
inc
jle
test
push
pusha
mov
push
out
outsl
jl
stc
mov
mov
xlat
bound
leave
inc
inc
xchg
or
ret
outsl
repz
orl
push
ret
jne
data16
inc
cmp
mov
iret
dec
popa
inc
es
cltd
inc
es
xchg
jl
sub
mov
sbb
test
or
cmp
das
fldt
pop
insl
xor
fisubrs
pop
imul
adc
or
fstps
int3
xchg
clc
mov
test
lock
aad
jbe
jbe
lret
imul
pushf
mov
adc
pop
popf
lods
jg
or
fstl
sbb
push
mov
sub
pop
stos
call
popa
mov
lcall
in
adc
dec
js
into
jne
push
and
test
aad
cltd
adc
cs
in
cmp
outsb
sub
inc
loopne
stos
jmp
shlb
inc
mov
in
sahf
push
jmp
push
pop
cmp
cmp
and
mov
cmpsb
xchg
pop
jg
inc
inc
xchg
dec
pop
dec
mov
mov
mov
loope
push
sbb
adc
sub
cld
xor
sbb
aad
test
xlat
xor
mov
mov
stc
push
pop
int3
imul
fs
fidivrl
adc
push
mov
mov
ljmp
call
lahf
add
enter
mov
add
inc
lret
rorl
aaa
inc
cld
cmc
into
mov
mov
push
testb
data16
mov
sub
push
dec
bound
ja
push
pusha
data16
cmp
mov
fadd
xor
test
mov
fwait
int3
shll
cmp
xchg
push
shlb
fcoml
sbb
cmp
add
es
fs
pop
aaa
ret
push
ljmp
cmp
dec
pop
pushf
inc
adc
mov
sbb
push
in
addr16
movsb
xchg
dec
outsb
cltd
std
aas
mov
sbb
pop
pop
popf
inc
jne
inc
sahf
flds
inc
push
sub
sahf
push
adc
jmp
jmp
movl
xchg
ja
leave
test
adc
push
ss
inc
adcl
and
test
sub
adc
or
xor
lock
cmpl
cmp
loope
cmp
shlb
jle
les
dec
int3
lcall
adc
jae
mov
ret
addr16
icebp
sub
jo
mov
lea
sti
jb
xlat
stc
fucom
fnstcw
cmp
add
push
cmp
sub
xchg
pop
push
xor
pop
jbe
cmp
and
pop
lahf
aas
out
dec
xchg
stc
dec
mov
pop
jecxz
or
inc
out
xor
xchg
shl
adc
adc
cmp
push
mov
adc
sbb
or
sub
push
sti
mov
imul
dec
add
leave
in
push
pusha
mov
lods
pop
cmc
jne,pn
and
je
ret
inc
xor
loop
std
jg
sub
cmpsb
stos
arpl
mov
outsl
xor
jo
roll
clc
cmpsb
cmp
dec
pop
push
fisubrl
insl
dec
xchg
cs
movsl
push
fadds
sbb
and
pushf
cld
push
sahf
xchg
push
popl
pop
cmp
popf
or
std
loope
adc
shl
jle
mov
testl
lahf
inc
jo
or
push
xor
clc
inc
and
mov
adc
lds
inc
dec
adc
scas
lds
adc
icebp
adc
out
ljmp
jmp
jecxz
mov
ss
lods
push
xlat
dec
subl
lahf
xor
imul
addr16
ret
push
xor
sahf
fsub
mov
sbb
adc
pop
int3
xor
pop
mov
cmp
lock
into
in
aaa
jmp
or
dec
mov
inc
dec
push
add
mov
adc
jecxz
pop
dec
dec
or
jmp
xchg
lods
or
dec
pop
jns
mov
inc
lret
nop
add
test
cmp
adc
js
mov
xor
cmp
daa
jne
out
mov
lods
cmpb
sub
pop
inc
popa
cld
scas
lahf
jae
inc
xor
incb
mov
popf
inc
xor
icebp
aas
mov
mov
sbb
ljmp
andb
jbe
loop
mov
mov
mov
es
xor
jbe
repz
mov
in
and
mov
leave
mov
out
cwtl
xchg
mov
pop
xor
dec
inc
clc
cmpl
xchg
mov
push
in
jle
orl
push
mov
flds
xor
pop
xchg
fwait
mov
dec
out
aad
inc
xor
loopne
ljmp
sub
loopne
call
cmpb
jecxz
fisubrs
loope
lcall
and
rcll
cld
xchg
ret
xchg
push
pushf
int
mov
pusha
call
inc
pop
iret
sbb
xchg
mov
sub
addb
push
out
int
hlt
xor
repz
mov
js
rcll
js
ret
add
out
mov
shlb
inc
orl
xlat
push
rcl
mov
cltd
lock
sub
or
ret
in
mov
sub
into
test
sub
xchg
das
dec
shll
cmp
xchg
arpl
mov
inc
rorb
imul
testl
adc
cli
inc
and
stc
push
mov
pusha
push
push
or
repnz
cmp
test
out
lret
dec
lcall
and
cmp
xchg
fldt
iret
mov
jecxz
stc
push
mov
js
roll
xchg
add
outsb
push
pop
or
shlb
cmpsl
xor
xchg
jle
mov
jae
sti
pop
pop
scas
cld
aam
or
imull
xchg
stos
mov
or
jl
and
arpl
push
xchg
leave
adcl
jmp
jecxz
iret
out
xchg
jnp
jb
pop
icebp
aad
jmp
mov
xor
jl
cwtl
imul
push
dec
scas
xchg
pusha
scas
out
add
bound
dec
lcall
adc
nop
xor
daa
jl
les
push
jne
cmpsb
adc
call
cmpsl
cmp
jl
leave
mov
push
cmp
movsl
xor
mov
fildll
int
lock
pusha
iret
fstpl
lret
lret
insl
inc
sub
xchg
aam
jb
sbb
addr16
mov
push
out
push
and
cmp
outsb
cmp
punpckhbw
test
jns
insl
cmc
push
inc
push
decb
push
cld
mov
adc
mov
inc
insb
pop
scas
inc
in
pop
ljmp
ja
adc
or
inc
lods
mov
mov
mov
mov
jl
lea
ljmp
sbb
mov
leave
push
into
inc
mov
scas
cmp
nop
fcompl
xchg
jmp
cmp
outsl
mov
mov
mov
jl
mov
fsubs
add
ret
imul
sbb
push
test
adc
pop
aaa
test
cmp
dec
push
add
or
sbb
in
fiaddl
inc
xchg
test
gs
ret
outsl
test
xor
loope
mov
fs
mov
mov
and
dec
adc
or
cmp
leave
fnstsw
or
mov
push
mov
and
testb
andl
mov
and
push
sarl
js
xchg
std
xchg
mov
dec
mov
popf
or
cmp
pop
jne
xchg
mov
pushf
xchg
cmp
lret
incb
daa
fsubp
je
sbb
jg
adcb
push
in
loop
js
mov
adc
inc
xor
mov
and
jnp
fistl
mov
dec
jns
lods
in
lahf
add
xor
mov
or
push
sbb
mov
decb
sbb
sbb
push
adcb
sub
addr16
mov
jnp
les
aam
mov
and
cwtl
aad
dec
rorl
mov
xchg
ffreep
repnz
mov
ja
sub
dec
xor
int
sbb
mov
cmp
out
push
out
inc
jmp
pop
lock
fsub
clc
xchg
insb
nop
stc
xorb
es
popa
insl
outsl
aaa
sbb
ret
cld
push
xor
fidivrl
gs
mov
in
mov
out
les
int
rclb
fucomi
adc
cmpsl
cwtl
inc
cmpsl
and
ss
push
movsb
jne
and
ret
rclb
jns
push
ret
pop
inc
fcoml
cmpsb
adc
inc
insb
lds
stos
cmp
repnz
sub
mov
push
dec
in
dec
ljmp
jno
adc
dec
punpckhdq
mov
xchg
xor
lods
xlat
push
clc
or
inc
pushf
dec
loop
divb
xchg
xor
fidivrs
and
inc
pusha
test
xor
lods
push
push
dec
mov
nop
jo
out
bnd
xor
dec
mov
fisttpl
clc
mov
imul
ret
jae
cld
lds
mov
sub
mov
pop
pop
sbbb
and
in
outsb
jno
pop
mov
sbb
bnd
enter
test
sub
mov
sbb
pusha
pop
mov
loope
adc
test
je
add
inc
pop
dec
jmp
jae
pushf
mov
ret
xor
xor
fs
stos
cmp
xor
adc
xor
pop
adc
mov
push
pusha
mov
pop
outsl
sbb
pop
inc
inc
cmp
xor
jns
inc
xchg
lahf
xchg
mov
jb
rcl
in
sub
mov
cmp
pop
lcall
push
push
test
add
clc
cmp
and
adc
lcall
push
sub
ret
mov
lret
loope
push
sbb
sub
daa
dec
rcr
dec
jno
arpl
bound
mov
sub
adc
lahf
or
mov
les
cld
movl
repz
xchg
inc
add
mov
lret
sarl
jmp
movsb
out
inc
lods
ss
adc
xor
stos
pop
cmp
jbe
ret
xchg
fstl
jp
sti
out
icebp
cltd
icebp
in
dec
xor
int
and
hlt
mov
jb
add
xor
pop
and
pop
mulb
imul
dec
loope
adc
cmp
je
sub
and
leave
xchg
sbb
pop
addl
daa
cmp
push
repz
jle
sbb
test
call
aam
inc
mov
jnp
dec
shlb
test
pop
movsb
mov
daa
mov
frstor
push
pop
les
repz
adc
in
jl
jg
pusha
jno
mov
arpl
mov
js
jns
mov
lahf
xchg
or
adc
fs
push
jne
fcompl
loop
fdiv
out
ljmp
fmull
call
dec
xor
test
icebp
clc
mov
xor
push
ficompl
shrb
cmp
sarl
roll
and
and
jp
ljmp
rcll
bound
jp
loop
mov
xorl
hlt
add
addb
push
mov
mov
adc
cmp
notw
pop
mov
adc
xor
pcmpeqd
mov
stos
sub
sub
add
cmc
and
xchg
xor
and
inc
sub
inc
dec
cmpsl
mov
scas
int3
aaa
push
dec
sub
stos
xchg
sub
xchg
mov
and
xor
pop
jg
jne
mov
pop
cmpsl
fnsave
xor
nop
pushf
push
or
mov
lret
jbe
imul
jmp
ljmp
mov
nop
inc
movsb
jp
push
mov
push
or
stos
dec
mov
sub
ss
push
xor
mov
scas
scas
and
mov
jno
sti
pop
shr
sub
enter
xor
and
xchg
pusha
mov
sbb
push
xchg
add
popa
push
and
aaa
cmc
push
mov
jmp
dec
add
dec
dec
ljmp
mov
push
scas
cmp
mov
cmp
jns
sbb
sub
xchg
xchg
dec
aas
clc
push
repnz
cmpsl
fnstsw
repnz
sub
adc
enter
sahf
mov
imul
push
loopne
mov
inc
xchg
shlb
pop
cmp
enter
mov
cs
jmp
jle
cwtl
shll
inc
pop
mov
dec
xchg
int3
leave
mov
iret
cmp
sbb
push
xor
jg
mov
lret
and
push
pop
cwtl
inc
shll
mov
fs
loope
jo
push
sti
popa
mov
mov
lods
push
lret
sbb
fmulp
sub
fidivs
mov
js
lret
cmpsl
xor
push
mov
clc
test
adc
mov
mov
and
push
or
js
ja
fsubrs
cmp
mov
dec
sub
jns
and
cmp
sbb
pushf
frstor
fidivl
cli
sub
xor
jno
push
and
lret
fnstsw
push
add
add
cltd
jb
mov
sub
push
loop
xchg
clc
aad
ds
jg
jbe
das
ss
negl
es
cwtl
iret
fbld
dec
cwtl
negb
cld
stc
push
mov
jnp
mov
sbb
enter
push
xor
pop
and
lret
sbb
and
inc
mov
cmp
outsl
and
cwtl
mov
daa
dec
push
cmp
jge
shlb
lods
inc
outsb
ds
adc
js
push
lea
sbb
dec
hlt
xorb
mov
adc
les
mov
jo
jbe
shr
mov
pop
xchg
imul
cs
jmp
cmp
pushf
mov
and
leave
scas
cmpsb
pop
notb
push
in
movsb
daa
stos
enter
test
sub
mov
clc
lock
stos
mov
mov
cmpsb
inc
cmp
adc
ss
ss
inc
push
jbe
dec
add
negl
pop
or
pop
lret
in
cmp
lods
sub
xlat
lahf
adc
loop
repnz
sbb
xchg
arpl
add
mov
int
int
jb
imul
jle
jno
or
xchg
lahf
out
idiv
iret
fbld
das
ss
push
movhps
outsw
jbe
inc
dec
push
pop
cmpsb
scas
mov
xchg
idiv
iret
fbld
das
ss
push
movhps
outsw
jbe
inc
dec
push
pop
cmpsb
scas
mov
xchg
idiv
iret
fbld
das
ss
push
movhps
outsw
jbe
inc
dec
push
pop
cmpsb
scas
mov
xchg
idiv
iret
pop
es
ss
lods
movhps
out
cmpb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
loopne
lock
rcr
dec
test
fistpl
outsl
inc
pop
push
dec
and
xor
loopne
lock
rcr
iret
mov
lahf
nop
sti
pusha
jg
dec
inc
pop
push
dec
and
das
add
pavgb
out
shlb
mov
jno
xchg
pusha
mov
xor
inc
inc
imul
call
lcall
sbb
jl
aad
popf
push
shrd
mov
push
or
paddd
test
push
jl
js
fcompl
aas
mov
ds
push
push
inc
sbbb
lcall
in
bound
fdivp
gs
mov
pop
loopne
xlat
incl
iret
xlat
ja
mov
nop
jo
cmp
mov
ds
clc
negl
pop
inc
mov
ljmp
js
int
fisttpl
insb
mov
decl
adc
fdivrl
or
into
das
cmc
mov
cmp
filds
pop
mov
cmp
ds
pop
adc
rcrb
mov
inc
nop
punpcklbw
jo
inc
dec
push
pop
and
xor
add
adc
lods
xchg
out
xchg
shr
adc
adc
adc
cmpsb
push
jno
gs
pusha
outsb
xchg
mov
xchg
ljmp
aad
adc
pop
cmp
outsl
push
arpl
jp
xchg
mov
in
mov
sbbb
outsl
inc
pop
push
dec
and
xor
add
adc
loopne
lock
rcr
iret
mov
lahf
nop
pusha
jg
outsl
inc
pop
push
dec
and
xor
add
adc
loopne
xchg
cmp
scas
jecxz
es
mov
rorl
sarl
cmp
aas
cmp
mov
push
lds
out
adc
cmpsl
rcl
mov
jne
movsb
mov
sbb
je
xor
and
int3
adcl
xchg
jb
push
push
push
and
pusha
jp
imul
push
ss
addr16
mov
adc
cmp
xor
adc
in
xor
repnz
cld
add
mov
imul
mov
push
dec
adc
xor
ja
jl
ret
sti
pusha
hlt
xchg
rcr
dec
decb
jmp
mov
rorl
mov
leave
mov
cmc
push
add
test
fstps
cs
add
clc
vcvtpd2psy
sbb
push
pusha
jecxz
pop
icebp
out
xchg
jnp
jne
movsb
stos
loop
lcall
dec
test
adcl
xlat
lret
je
icebp
pop
inc
adc
loop
sbb
decb
add
pop
cmp
cs
jmp
cmp
push
stos
mov
jecxz
mov
xorl
or
or
aaa
xchg
dec
aam
mov
or
dec
and
mov
or
dec
pop
mov
inc
out
ret
dec
add
cmp
imul
dec
mov
in
lea
push
dec
sbb
xchg
sahf
or
lret
jb
sbb
mov
jb
or
out
mov
dec
sub
sbb
mov
sub
lahf
loop
ja
pop
dec
pop
cmpsb
pop
xorb
pop
leave
sbb
lea
push
jo
mov
xor
sub
push
dec
ret
cltd
pop
outsb
pop
rol
sub
mov
mov
lods
sbb
movsb
mov
lcall
out
adc
dec
sub
adcl
mov
pop
mov
mov
push
insl
add
sub
sub
cltd
or
mov
lahf
mov
bnd
pop
mov
xchg
repnz
push
ja
idiv
sub
cmpsb
xor
int3
jnp
sahf
loopne
stos
cltd
fwait
fwait
mov
cld
fstps
stos
ljmp
xor
and
xchg
cmpsb
mov
data16
in
or
xor
push
gs
jmp
push
pop
shl
daa
jecxz
sbb
xchg
scas
sbb
mov
test
imul
pop
dec
mov
inc
add
xlat
lcall
xchg
push
push
pop
mov
lock
xchg
xlat
pusha
sbb
push
push
pop
jg
movsb
pop
cmp
dec
pop
push
add
push
xor
stos
popa
shlb
add
les
pop
bound
lods
in
mov
enter
fwait
push
in
stos
rcl
xchg
loop
lret
push
xor
jl
push
fwait
inc
push
or
mov
add
sbb
loope
sub
xor
cs
add
sbb
xor
jp
mov
mov
sub
outsb
pop
inc
and
jle
jecxz
ja
mov
ja
lods
divl
jl
stos
shll
inc
add
sub
js
outsl
mov
jle
sbb
push
dec
fidivl
aam
negl
and
pushf
xchg
repz
xchg
std
adc
imul
popa
repz
adc
push
out
mov
cwtl
xchg
mov
mov
lcall
xchg
mov
in
mov
and
inc
leave
dec
sahf
sub
dec
int3
jge
aaa
push
push
or
cmc
fxch
cmp
ja
ja
lods
iret
jmp
sub
cmp
xor
sbb
inc
fnstsw
stc
jnp
psrld
mov
dec
sbb
cs
jmp
push
mov
xlat
jge
xor
xor
mov
inc
aad
pop
loopne
jne
testb
mov
aas
xchg
ret
int3
fists
sub
lret
dec
clc
in
mov
inc
jle
inc
mov
dec
xchg
mov
fnstsw
pop
aad
and
xor
popf
lods
mov
inc
xchg
sbb
add
xchg
sbb
pop
adc
mov
mov
fadds
dec
enter
mov
ljmp
mov
sbb
push
cmp
pop
jnp
fisubs
dec
iret
fmul
aaa
jge
repz
leave
je
aad
jns
jne
mov
data16
mov
push
ja
jmp
lcall
push
es
movsb
movsl
jmp
in
sub
stos
and
frstor
jmp
mov
shrb
rorl
movsl
aad
push
into
cmpsl
das
xor
pop
inc
in
mov
add
shll
xchg
in
adc
lods
or
sti
sbb
popa
roll
pusha
daa
and
pop
aaa
add
rorb
add
inc
popa
mov
and
cmpsl
push
out
inc
xor
out
dec
push
icebp
mov
fwait
mov
add
inc
xchg
lahf
mov
push
jbe
sub
orb
repnz
pushl
dec
cltd
je
test
pop
cmp
imul
lea
xchg
add
sub
jge
pushf
testl
cli
push
shlb
dec
stos
cld
leave
sub
and
daa
add
xchg
pop
cmpsb
rol
mov
rcl
add
sbb
test
aaa
fwait
jp
pusha
cmp
mov
xor
pop
aas
jle
sarb
pop
fimuls
icebp
dec
mov
icebp
outsl
push
lds
sbb
arpl
cmpsb
repz
jo
and
ja
dec
scas
mov
lcall
nop
push
push
test
pop
pop
outsb
or
mov
mov
xor
adc
cltd
adc
xchg
cwtl
mov
adc
dec
sbb
or
cltd
sbb
lret
gs
fimull
scas
add
data16
lods
inc
push
xor
icebp
push
ret
mov
frstor
xor
lods
mov
xlat
add
pop
ljmp
and
mov
mov
pop
or
mulb
cmpsl
mov
fwait
enter
rcll
xchg
jmp
xor
sub
pushf
test
cmpl
test
aam
hlt
jg
mov
lret
enter
mov
and
jno
sub
insl
pop
pop
inc
sti
loop
push
aad
popf
mov
jns
mov
mov
in
lea
int
jns
aas
mov
test
jb
and
sbb
into
ja
add
sub
fisttpl
pop
or
xchg
mov
cmpsl
sti
ret
int3
mov
mov
pop
incl
cmp
jecxz
push
stc
pushf
dec
jl
in
xor
rolb
loope
insl
cmpsl
push
mov
stos
mov
mov
test
dec
test
mov
adc
lcall
das
sbb
dec
gs
ret
loopne
out
jno
cwtl
ror
or
into
xchg
into
xor
jmp
push
adc
cmp
add
ds
call
in
adc
out
loop
in
jae
and
repz
stc
xchg
in
sub
loop
in
add
push
mov
pop
jb
mov
ds
addr16
div
jl
add
repnz
sub
jle
in
test
or
dec
out
test
pop
mov
mov
mov
sarl
into
pushf
negb
cmp
inc
stc
sbb
adc
dec
xchg
bound
and
mov
ja
adc
lods
jmp
xor
pop
cmp
clc
jmp
test
je
pusha
dec
sub
pop
jmp
scas
ja
sub
mov
sbb
dec
aaa
aaa
dec
hlt
xchg
hlt
int
lahf
xor
incl
sti
or
pop
adc
mov
jecxz
mov
enter
jmp
hlt
rol
push
sub
stos
jecxz
dec
data16
cmp
xor
sub
sbb
popl
sbb
test
insb
shl
mov
stos
push
shll
cmp
int3
retw
jbe
jb
jmp
imul
les
pop
xchg
push
mov
xchg
add
lahf
inc
insb
cmpsl
icebp
in
lea
push
mov
xor
jp
jg
sub
movsl
mov
ja
xor
fwait
insl
jo
ret
mov
std
inc
les
lret
pop
es
mov
repz
test
fsub
loopne
test
stos
jmp
push
aad
sahf
and
arpl
pop
add
mov
adc
iret
adc
outsb
addr16
aad
pop
hlt
mov
dec
xor
mov
jle
imul
pop
sub
aas
mov
pop
movsl
out
xchg
sub
leave
popf
mov
adc
outsb
in
dec
imul
adc
pop
xor
enter
cmp
cld
fisubrl
mov
xchg
test
jecxz
jl
xchg
adc
jmp
lcall
mov
add
push
loope
pop
add
or
and
adc
out
rcll
int
cli
xor
movsl
lea
or
mov
stc
outsb
mov
test
sbb
sbb
aam
xchg
add
adc
fbld
push
dec
dec
mov
mov
sbb
fistps
ja
sub
mov
sub
fs
cmp
jl
mov
repz
pop
mov
cmc
cmpsb
xor
hlt
loope
aad
pop
jl
inc
sbb
and
imul
adc
inc
fcoms
lds
clc
aaa
out
stc
ljmp
or
aad
cmpsl
push
xchg
and
dec
pusha
loop
test
jle
subb
gs
adc
cmp
shlb
pusha
test
jl
mov
stc
fistl
dec
jp
fisubl
imul
jbe
je
add
dec
repnz
in
jbe
mov
sti
hlt
in
mov
jg
lock
pop
dec
xchg
dec
mov
and
mov
and
push
cmp
mov
sbb
xor
aas
inc
test
negb
mov
and
leave
insl
inc
lds
bound
adc
pop
lret
clc
mov
int
popa
enter
lock
test
test
inc
cmp
sub
pop
in
cs
adc
pusha
cmp
mov
xchg
jmp
sub
lock
xchg
cli
push
and
or
addr16
mov
lahf
adc
lret
out
in
jne
pop
mov
mov
or
sub
jmp
mov
inc
push
jnp
stos
jle
mov
add
push
sub
cwtl
push
xchg
dec
push
stos
ljmp
jb
or
fcoms
jbe
mov
sbb
in
mov
push
push
xor
jbe
mov
ljmp
pop
movsl
in
das
add
daa
add
inc
jno
arpl
pop
or
adc
int
out
xor
shl
mull
insl
pop
sbb
mov
push
pop
shll
lock
repz
movsl
sub
xchg
push
sub
lahf
in
shl
dec
addb
scas
cmp
jmp
movsl
mov
jnp
and
jns
rcrb
add
test
mov
mov
out
pop
stc
push
loopne
push
mov
dec
jl
fsts
test
inc
pop
lock
sub
shrl
out
jnp
int3
mov
jecxz
sti
insl
push
fildll
add
dec
dec
loopne
roll
xlat
mov
dec
mov
xchg
xor
ds
adc
jmp
jge
pushf
outsb
sbb
or
sbb
dec
les
add
scas
mov
lods
fs
adc
xchg
sbb
in
lahf
and
mov
and
xor
cmpb
inc
and
sub
fbld
in
mov
subb
into
mov
je
inc
pop
xor
mov
mov
jnp
xor
scas
ja
pushl
jo
ficomps
clc
in
or
test
sbb
adc
es
pop
dec
mov
cs
sub
push
out
add
or
test
repnz
adc
aad
dec
andb
imul
ret
push
jmp
fisubs
cmp
sub
xlat
jg
sbb
adc
inc
movsb
dec
jnp
jecxz
mov
inc
mov
dec
fidivrl
and
push
xchg
fwait
mov
fs
push
mov
xchg
pop
jns
pop
xor
movsl
fbstp
cltd
sti
mov
repnz
cmp
cltd
push
adc
test
loope
lock
fcoms
add
jns
pop
cmpsl
aam
je
jb
add
and
cmpsl
pop
push
int3
arpl
inc
in
das
add
int
lds
jnp
cltd
sbb
mov
mov
icebp
xchg
add
popf
xor
sub
fstpt
mov
je
pop
sub
lods
sbb
enter
repnz
push
test
add
xor
xchg
pop
xchg
or
pop
lods
icebp
outsb
push
fwait
mov
sbb
lea
inc
les
mov
daa
loope
pop
mov
sbb
mov
add
cmp
adc
ss
sbb
lahf
jg
cmp
insl
call
sbb
cltd
stos
sub
push
mov
jp
xor
dec
in
stos
test
cmpsl
xchg
mov
pop
test
fistpll
inc
lods
mov
cmp
stos
inc
fsubrl
cmc
mov
xchg
mov
inc
add
cmp
xor
sbb
lahf
pusha
int3
dec
movsb
mov
mov
fscale
add
outsb
js
jno
mov
adc
shrb
sub
clc
daa
aam
dec
inc
mov
in
jmp
iret
add
cld
xchg
mov
jg
arpl
jg
enter
aaa
ret
inc
xchg
sti
fidivrs
lock
dec
mov
clc
cs
push
test
sub
orb
or
xchg
mov
jns
cmp
jmp
ja
jne
jns
dec
fcmovnbe
pop
mov
mov
mov
sbb
fadd
adc
roll
fildl
mov
pop
mov
stc
add
insl
add
mov
daa
mov
adc
cmpsl
outsl
sar
rcll
jmp
js
pop
cmp
pop
ljmp
xor
mov
lods
push
adc
mov
adc
jne
pop
push
orl
inc
aas
daa
test
adc
mov
mov
sbb
cmp
jecxz
or
mov
fisubrs
mov
or
sti
vmwrite
sarb
mov
and
cmpsb
in
cmp
lahf
ss
mov
sub
inc
mov
push
jmp
mov
out
cmp
jb
pop
mov
outsb
outsl
inc
mov
dec
mov
add
mov
jl
hlt
jmp
mov
jecxz
mov
pop
or
aam
or
cli
pop
sbb
pop
cmp
sub
xor
or
xchg
add
movsl
sub
in
cmp
mov
icebp
hlt
jae
dec
mov
xor
in
jge
inc
push
stos
add
pop
push
pop
cmp
mov
dec
fwait
stc
repnz
mov
cmp
fcoml
add
sahf
xchg
popa
sbb
pop
jo
or
push
jg
jbe
xchg
or
jbe
gs
pop
mov
in
into
mov
fildl
cmc
and
fadds
mov
and
mov
les
jg
pusha
rclb
cmpsl
nop
jecxz
pop
inc
xor
popa
fisttpl
mov
pop
adc
adc
rcrl
xchg
rorb
fdivrs
xor
dec
mov
shll
shr
jmp
sarb
and
lea
or
inc
out
and
and
cmpsb
cwtl
fstps
out
pop
xor
xor
call
push
cwtl
xchg
int3
push
out
cmc
pop
jge
lahf
dec
leave
xchg
lea
leave
adc
sbb
xor
inc
test
cmp
cmp
gs
dec
xchg
add
pop
adc
mov
xor
shlb
out
mov
sbb
sub
test
mov
cs
cli
mov
mov
imul
insl
sbb
hlt
loope
fisubl
into
movsb
fwait
jge
dec
mov
jge
out
std
addr16
cmp
pop
jmp
fstpl
scas
pop
addr16
mov
movsb
jge
jo
outsb
cwtl
lock
sbb
sub
cmp
iret
xlat
mov
xor
push
icebp
enter
repz
scas
mov
loop
cmp
mov
jbe
mov
sti
dec
es
xchg
fcoml
mov
inc
in
stos
jecxz
pop
mov
jge
repz
loopne
sub
imul
sarl
dec
insb
mov
mov
inc
loopne
insb
push
pop
loop
in
test
fcoml
pop
jp
jl
xchg
add
pop
js
repnz
in
push
pop
nop
test
pushf
mov
cmp
insb
mov
mov
add
push
movsb
rcr
aas
data16
daa
addr16
xor
scas
jae
jns
inc
in
out
lds
enter
iret
daa
insb
mov
test
loopne
fdivr
add
xor
jae
jnp
das
mov
push
mov
test
pop
mov
clc
or
inc
mov
cs
push
mov
movsl
mov
aaa
mov
clc
mov
mov
nop
inc
xor
xchg
mov
sbb
lods
inc
xor
push
pop
jl
push
lgs
or
popf
mov
or
daa
cmpsl
jnp
mov
and
cmp
popa
shrb
popa
das
sub
sub
adc
or
cmp
inc
and
shlb
ret
insl
dec
push
add
shlb
insl
xlat
push
pop
fistps
push
aad
ss
push
xchg
aas
mov
sbb
mov
cmpsl
push
mov
dec
roll
push
scas
lret
loope
adc
sbb
lock
in
int
or
clc
adc
pushl
jb
mov
fisubl
or
add
pop
sub
mov
in
push
sub
repnz
sub
ret
cs
add
sarl
inc
sub
fmuls
pop
push
shrl
push
push
mov
xchg
ja
aas
das
or
xor
adc
loop
imul
rcll
out
repz
sbb
push
lcall
int3
outsb
xchg
add
sbb
adc
sti
push
dec
and
les
jns
jns
xchg
push
pop
lock
cmp
inc
gs
int3
das
add
mov
inc
dec
mov
lock
fs
sbb
adc
or
mov
jecxz
call
dec
cmc
sub
into
es
std
insb
in
insl
sub
pop
dec
popf
sub
int
mov
or
ja
addr16
test
push
inc
and
sarl
loop
fdivrl
or
fldl
jecxz
nop
pop
insb
mov
das
xor
mov
mov
cmp
jne
pushf
icebp
fs
pop
notl
inc
aaa
rclb
daa
aas
outsl
les
stc
mov
mov
pop
push
sub
cmp
mov
jecxz
pop
xchg
xchg
inc
shl
sbb
xchg
mov
ja
cmp
lock
ss
push
and
push
dec
lea
jmp
repz
add
ficoms
push
negl
cmp
or
xchg
into
or
dec
sahf
or
inc
test
and
lar
inc
add
stc
pop
outsb
jle
pop
movsb
cmp
scas
cld
adc
js
cwtl
lahf
mov
or
fsubrs
xchg
pusha
xchg
jecxz
adc
jne
and
cmp
xchg
inc
mov
inc
shl
pop
push
out
push
push
repnz
mov
inc
js
lods
dec
or
dec
xchg
jns
mov
jb
push
dec
mov
in
jge
gs
call
bound
insl
jmp
call
mov
loopne
dec
test
mov
imul
lret
or
add
lahf
pop
add
lds
fbld
inc
cmovs
jmp
call
lods
ret
shlb
lcall
aas
xchg
cmc
adc
fdivrs
cmp
push
emms
mov
push
xchg
xchg
and
outsl
pop
aaa
outsb
adc
jmp
xchg
and
sub
shrl
shrl
xor
lcall
xchg
jl,pn
fdivl
enter
gs
mov
jle
loop
xor
repz
mov
sbb
rclb
ljmp
mov
nop
dec
outsl
out
ljmp
lcall
cwtl
mov
xchg
js
in
popaw
jne
lock
movsl
push
aad
scas
into
andl
imul
inc
int
movsl
jge
push
pop
mov
divl
jl
popa
adc
sbb
mov
pushl
mov
sbbb
outsl
inc
pop
push
dec
and
xor
add
adc
loopne
lock
rcr
iret
mov
lahf
nop
pusha
jg
outsl
inc
pop
push
dec
and
xor
add
adc
loopne
lock
shlb
pop
sbbb
outsl
inc
pop
push
dec
and
xor
add
adc
loopne
lock
rcr
into
mov
pop
adc
ljmp
sar
loopne
lock
mov
je
insb
mov
add
xor
les
aam
in
hlt
push
movsb
pop
mov
inc
mov
je
add
adc
and
xor
les
mov
in
hlt
test
js
dec
out
mov
inc
mov
je
add
adc
and
xor
insb
sbb
sbbb
push
ss
inc
fmull
mov
hlt
and
ret
and
dec
pop
neg
xorl
pop
jbe
adc
aam
add
pop
xchg
jmp
and
sub
in
jns
icebp
jns
pop
hlt
aad
clc
sbb
inc
xchg
in
sbb
lds
xchg
sub
insb
sub
and
or
test
cmp
loop
cwtl
je
add
fmul
movsl
pop
mov
movsb
xchg
out
cmp
pop
insl
cmp
pop
stos
push
add
popf
mov
cmp
lea
gs
xchg
xchg
pop
pop
cmp
inc
stos
dec
add
lea
jno
cltd
inc
push
fcom
jg
enter
xor
cmp
fdivs
mov
call
and
xor
les
aam
in
hlt
push
movsb
pop
fucomp
sub
push
loope
icebp
sbb
lods
push
sub
pusha
mov
in
out
cmpsb
push
cmc
int
fstl
fs
push
call
push
mov
test
fwait
imul
sub
pop
out
hlt
adc
fdivs
les
aam
in
hlt
push
movsb
pop
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
push
movsb
pop
mov
inc
popf
sbb
push
enter
pop
das
repnz
or
in
ja
xchg
cwtl
rclb
addr16
fildll
push
mov
inc
push
cwtl
out
jne
lds
sub
or
pop
and
cmc
push
addl
rcl
add
sbbb
mov
es
mov
ret
pop
nop
dec
rcll
add
scas
testb
js
es
test
xchg
pop
clc
fldlg2
std
add
xchg
pop
pop
jp
dec
fs
dec
shll
sarl
or
mov
mov
shrl
mov
test
fsubl
push
stos
mov
ret
out
sbb
cmpsb
add
cmpsb
or
orl
xchg
sub
add
push
sbbb
movsl
mov
jmp
sarl
cs
mov
test
add
fmull
movsl
loopne
xor
dec
jmp
mov
popa
jl
and
and
xorb
xchg
xchg
pop
pop
cmp
lret
es
divl
adc
aaa
aad
inc
jo
xor
sahf
aad
testb
pop
sub
test
mov
mov
or
mov
pop
add
push
push
add
pop
andl
mov
dec
mov
aam
gs
mov
nop
pop
int
jle
inc
sub
cmpsb
pop
push
adc
movsl
jp
loop
outsb
jecxz
cmp
outsb
fbstp
mov
jle
in
test
xor
pop
outsb
fs
inc
cmp
mov
adc
scas
lahf
out
ljmp
cmp
jecxz
arpl
out
cmpsl
call
cmpsl
bound
jbe
inc
bound
xchg
jns
xchg
insb
leave
xchg
adc
jp
clc
fidivl
ljmp
les
into
ficoms
scas
gs
xlat
shrb
lds
hlt
ja
adc
pop
outsl
repz
ffreep
jg
jmp
adc
pop
sub
lds
push
shrb
xorl
sub
inc
loope
mull
add
add
sbb
xchg
lret
and
popf
pop
cmp
arpl
enter
repnz
or
aaa
int3
mov
insl
mov
popa
movsb
mov
and
imul
inc
inc
push
into
mov
lea
adc
cli
or
lds
loopne
fnstenv
sub
ja
jecxz
sub
ja
pop
fiaddl
xchg
mov
sub
out
shl
sub
sbb
pop
data16
fiadds
mov
pop
ffree
stc
lods
jb
pop
or
cs
inc
add
cmp
mov
push
cwtl
icebp
scas
pop
lods
pop
cmpsb
push
pop
mov
aas
fisubl
pop
or
repz
cmc
popf
arpl
cmp
call
loop
push
mov
loop
jg
popa
sub
mov
scas
mov
push
dec
jge
std
aas
push
mov
sahf
mov
shl
pop
insl
sub
adc
in
pop
xor
sub
icebp
mov
dec
sub
mov
pop
jnp
ror
sub
imul
bound
ret
movsb
addr16
stos
insb
test
pop
pop
and
mov
enter
inc
lock
cld
daa
cmc
rorl
mov
xor
inc
push
out
je
sti
es
mov
adc
pop
inc
pop
orb
sbb
pop
cmpsb
pop
fiaddl
scas
fcoml
adc
add
outsb
rorb
or
ja
scas
enter
push
js
popf
lods
das
sbb
leave
push
and
xchg
adc
enter
sub
sub
push
push
pminsw
pushf
cwtl
inc
lock
pop
or
movsb
js
jp
inc
cvtdq2ps
repz
sub
test
cmp
and
inc
lods
push
arpl
nop
into
leave
xor
je
dec
pop
sahf
cmpsb
sub
mov
inc
ret
add
jae
cs
adc
sbb
push
fcomi
add
mov
push
and
fcmovbe
out
enter
mov
mov
scas
mov
or
cmp
arpl
or
xchg
movsb
insl
push
insl
push
xchg
jmp
fdiv
and
fs
enter
or
rcll
fs
aas
cltd
icebp
outsb
cwtl
or
sub
insl
nop
sbb
push
adc
out
loope
in
or
in
xor
lock
or
xchg
sbb
and
push
xchg
jne
jge
pop
xor
test
cmp
jne
clc
pop
orb
outsb
xchg
cmp
jmp
and
xchg
jmp
adc
call
daa
xchg
sbbl
cmp
stc
ja
push
sbb
push
xchg
out
cmp
cmp
jmp
shld
mov
jae
out
pop
pop
incl
and
add
inc
adc
xor
pushf
icebp
pop
add
xor
pusha
dec
mov
lods
cmp
cwtl
lds
lea
xchg
fbld
sbbl
add
xor
xor
cmpps
inc
adc
aad
jl
mov
lcall
rcr
jmp
jb
imul
xor
xor
aaa
repz
test
xchg
adc
fildll
push
lock
jle
dec
subl
pop
pop
pop
sub
mov
sarb
sbb
sbb
in
loopne
shlb
scas
push
and
cmp
and
leave
mov
sub
mov
mov
pop
rcrl
mov
or
repz
or
pop
xchg
scas
loope
sarb
mov
inc
hlt
pop
lcall
fsubrs
ss
adc
xchg
rclb
outsb
push
add
mov
out
push
sub
movsl
and
jne
jmp
push
jmp
sbb
loopne
stos
dec
push
test
outsb
popa
push
cwtl
xor
in
or
or
push
jb
dec
out
dec
mov
inc
sub
leave
cwtl
stos
jp
mov
fcmovbe
push
or
in
adc
movsl
mov
or
lret
dec
push
cld
inc
lea
cmp
mov
inc
or
cwtl
aas
jmp
jmp
jb
lea
lea
insl
cmpsl
fnsave
scas
sbb
push
sub
int3
ret
mov
mov
jle
aaa
pop
inc
frstor
xor
xchg
push
adc
mov
or
shrd
jecxz
fldenv
mov
lahf
enter
pop
cmpsl
cmp
fidivrs
out
inc
and
outsl
repz
scas
stos
aad
fwait
dec
arpl
sbb
lds
fsubs
xor
sbb
mov
sub
push
aaa
adc
jl
xchg
mov
fdivs
mov
xchg
lea
sti
imul
jbe
stos
dec
pop
dec
pop
and
jp
add
or
add
sub
leave
in
fwait
pop
movsl
sbb
cltd
aam
sbb
in
mov
iret
sub
push
xor
jae
push
add
pop
push
cmp
jge
cs
imul
fmuls
hlt
lahf
xchg
bound
loopne
insb
mov
mov
fsts
push
cmp
inc
je
cmovp
imul
xchg
push
into
andl
cmp
jg
js
fidivs
push
cltd
dec
movsl
push
mov
inc
shlb
iret
ljmp
stc
test
xchg
inc
enter
sub
inc
jns
scas
pop
mov
data16
ds
out
nop
adc
gs
inc
dec
movsl
subb
mov
jo
lea
cmp
mov
out
jg
add
fwait
xchg
inc
adc
sub
cmc
lock
movsb
gs
mov
xchg
jne
dec
inc
cmpsl
jns
mov
adc
or
sbb
mov
mov
jg
xchg
insb
out
shlb
inc
sbb
pusha
jns
daa
sti
and
adc
movsl
sbb
jge
fldl
jg
mov
pop
lods
pop
mov
hlt
sub
fstpt
stos
push
xor
ficomps
push
and
ffreep
inc
jbe
icebp
movsl
fidivs
dec
lock
in
cmp
sub
lods
sbb
aaa
enter
stos
test
divl
add
and
in
outsb
stc
hlt
jne
or
cmp
sub
sub
and
add
jae
xorb
iret
or
cltd
minps
xor
arpl
test
pop
stos
repnz
cmp
mov
xor
scas
test
out
test
xchg
xchg
pop
mov
pushf
xor
mov
pop
fistl
xchg
stos
cmc
add
insl
out
mov
mov
dec
cmp
ret
imul
jbe
sbb
ljmp
inc
sbb
add
in
outsl
stos
mov
or
mov
mov
jno
or
xchg
pop
sbb
lahf
fidivl
fimull
add
cmp
imul
mov
movsb
cwtl
xchg
pop
push
orl
jmp
pushf
push
test
jb
jnp
repz
fs
push
jle
mov
mov
shl
xchg
push
jne
addr16
les
adc
gs
invd
push
xor
dec
cmp
mov
jl
jns
pop
movsl
dec
enter
adc
dec
lea
xchg
rcll
lahf
mov
hlt
pop
push
out
repz
sub
add
inc
inc
fs
sahf
adc
inc
sti
pop
fs
mov
sbb
mov
movq
fistl
push
push
inc
in
push
jnp
int3
pusha
mov
mov
xchg
mov
call
jb
xchg
outsb
pop
data16
pop
or
inc
jg
rcll
fwait
jmp
xchg
cmpsl
and
js
pop
aam
push
fstps
in
sbb
cmp
xchg
push
mov
lahf
fcmovu
push
or
in
test
mov
data16
fcompl
addr16
dec
les
cmp
push
mov
jge
ljmp
pop
push
int
cmp
cmp
lds
scas
fxam
sub
pop
ficoml
fbld
jmp
pushf
sub
inc
mov
sahf
test
fildll
add
push
leave
push
outsb
mov
mov
cltd
addr16
mov
mov
jle,pt
mov
cltd
sub
xor
push
xchg
daa
adc
dec
adc
ja
push
in
adcl
cld
popf
cltd
cmp
push
out
call
stos
jle
iret
and
fsubrl
sbb
insl
cmpsb
push
pop
scas
dec
pop
sub
loop
iret
jns
jno
xchg
jp
test
jecxz
lcall
negl
stos
jbe
sub
shlb
xchg
test
and
loop
push
xchg
daa
and
sti
sbb
jno
adc
adc
push
icebp
jp
subl
add
push
cmp
mov
dec
jns
mov
in
stos
popa
inc
pop
test
lret
movsb
pop
xor
cmp
sbb
insb
into
ljmp
inc
dec
inc
sbb
and
imul
test
aas
sbb
xchg
pusha
pop
push
arpl
jnp
sti
and
pop
popa
mov
sbb
test
push
mov
jg
aad
imul
aam
dec
mov
mov
imul
mov
int
movsb
ficompl
xor
in
add
push
stos
pop
leave
add
mov
cmp
out
sbb
xchg
cmpb
sbbb
jmp
int
mov
leave
push
int
in
inc
xchg
push
mov
mov
cmpsl
imul
mov
outsb
scas
xor
mov
call
mov
int
shl
mov
cmpl
push
jb
mov
test
repz
imul
fs
ljmp
out
or
mov
mov
or
loopne
jp
pop
and
popa
lahf
push
pop
inc
and
outsl
push
jns
out
add
stos
lods
push
mov
mov
xor
cmp
pushf
rol
out
data16
dec
test
mov
lds
popa
shlb
rcrl
rcrb
out
xlat
cltd
into
pusha
sbb
call
pop
movsb
jb
sbb
in
leave
in
dec
jle
hlt
lock
pop
ret
sub
xlat
inc
imul
insb
lcall
pop
inc
add
dec
shlb
icebp
les
push
fs
fcoml
adc
push
xchg
dec
add
mov
xor
mov
lcall
orl
sub
inc
dec
dec
pusha
js
mov
sbbb
enter
xchg
mov
pop
add
out
mov
or
test
inc
aas
mov
push
pop
xor
or
fs
pop
js
dec
outsb
je
dec
inc
fsin
shrl
daa
je
adc
or
aas
jmp
ja
inc
inc
jnp
sub
ja
nop
adc
xlat
adcb
push
pop
int
mov
lds
or
clc
ficoms
pop
aas
aad
hlt
fistpl
or
negl
mov
push
insl
mov
pushf
in
or
xlat
sub
lret
mov
jb
mov
int3
mov
xchg
in
mov
sub
test
xor
inc
add
aad
push
and
aaa
and
dec
les
sbb
dec
dec
pusha
push
adc
add
pushf
xor
inc
loop
pop
mov
cs
xlat
adc
les
leave
mov
adc
ficomps
or
cmp
rolb
inc
clc
add
clc
mov
pop
add
push
jb
loope
bound
mov
outsb
sahf
je
add
xchg
leave
out
push
push
scas
xor
iret
sbb
mov
xor
imul
mov
cltd
pop
pusha
push
dec
or
adc
pop
add
pop
mov
ss
aaa
shlb
pop
lods
mov
loope
push
fistpl
lahf
xchg
adc
ss
sbb
adc
cmp
loope
int3
or
leave
xor
push
cmp
pop
inc
push
dec
cltd
movzbl
cld
dec
sub
call
movsb
mov
pushf
xchg
adc
cmpsb
pusha
mov
pop
xor
pop
cmc
push
dec
jne
jle
frstor
icebp
mov
xchg
cmp
xor
out
iret
subb
fdivrs
cltd
shll
lods
mov
dec
test
lret
out
dec
ret
loopne
loopne
mov
mov
aam
pusha
pop
test
jge
xchg
add
stos
loope
jo
push
rcr
test
dec
jp
and
cltd
fs
mov
fisubl
fwait
iret
push
loopne
push
das
sbb
adc
fcoml
dec
mov
movsl
mov
xchg
lret
or
dec
inc
jle
mov
outsb
pop
test
dec
repnz
sbb
out
aas
add
clc
fisubs
test
mov
out
mov
add
or
cld
xchg
fsubl
aad
and
push
psllq
and
stos
push
mov
test
cli
insb
mov
lcall
fldt
cmp
jns
push
addr16
out
cmp
xchg
pop
push
cwtl
pop
orl
lcall
jecxz
cltd
push
mov
sub
sub
push
in
jge
mov
or
or
cwtl
add
sti
xchg
jmp
pushf
pop
add
cmpsb
mov
xchg
jge
push
fwait
mov
inc
out
mov
push
jmp
les
lret
testl
pushf
and
pop
cli
outsb
sar
mov
loop
or
mov
push
insb
data16
sti
xchg
mov
not
jge
scas
sar
in
xor
xor
push
jge
push
pop
lds
xchg
outsb
dec
rcl
push
fdivs
jae
pop
outsl
std
pop
rcll
je
xchg
mov
insb
xor
jmp
adcb
movsb
push
xchg
fs
sahf
or
xchg
movsb
in
imul
cli
lods
aaa
inc
pop
cmp
imul
int
mov
into
push
sub
loope
xchg
fnstenv
jg
xchg
outsl
adc
and
add
insl
mov
adc
mov
out
jne
jmp
inc
xchg
or
repnz
push
cli
push
jne
mov
dec
jmp
js
xor
pop
dec
xchg
cli
stos
pop
das
out
or
push
movsl
mov
lahf
lret
and
adc
jo
push
cmp
cmp
and
sbb
sbb
dec
xlat
cs
in
test
cmp
repnz
loop
cmp
popa
add
cli
fmuls
in
jo
insl
inc
dec
dec
not
lret
push
leave
inc
fimuls
cmpsb
pop
adc
das
rorl
cmp
into
addr16
inc
cmp
and
in
jecxz
divl
push
adc
lcall
mov
ret
cmp
or
pop
bound
cld
arpl
out
mov
clc
fisttps
sbb
sbb
dec
mov
sub
cmp
pop
add
stos
mov
adcb
mov
aas
movsl
test
or
or
cmpsl
ja
lret
in
cmp
cltd
imul
shlb
idiv
aaa
sub
push
jo
jne
addr16
mov
xchg
push
and
xchg
fstpt
mov
fidivrs
mov
dec
push
gs
adc
sub
push
mov
out
fucomp
jo
jecxz
stos
dec
pop
inc
repz
mov
adc
je
xor
ja
adc
xchg
fwait
enter
lods
inc
in
xchg
inc
nop
cmp
lcall
push
outsl
and
cltd
outsb
or
addb
dec
push
push
inc
scas
jmp
mov
jbe
fs
lret
loop
mov
mov
scas
ficoms
ds
cmc
and
jo
mov
mov
stc
add
syscall
add
jnp
leave
inc
jge
insb
addr16
cmp
lcall
shr
mov
stos
jae
cmp
xchg
jae
and
xchg
push
sbb
frndint
and
mov
aas
pop
std
gs
adc
sahf
jbe
insb
or
mov
jno
pop
orl
pusha
std
jne
xchg
push
inc
cmpsl
cs
jno
je
outsb
adc
popa
faddp
out
std
repz
dec
sarl
xor
scas
sub
mov
jns
shrb
xor
ficoml
lock
sbb
out
add
jg
movsb
inc
or
lock
add
insb
dec
lock
dec
repnz
test
jg
xor
push
sbb
stc
and
pop
pushf
pop
into
jb
aas
mov
push
fwait
pop
jle
pop
in
pcmpeqw
xchg
mov
inc
pop
dec
sar
adc
test
mov
test
sub
aas
mov
dec
mov
inc
inc
call
or
xchg
adc
cltd
gs
dec
test
hlt
pop
sahf
fldlg2
or
cmp
notb
sub
add
xor
cmp
fiaddl
or
adc
out
jge
mov
pmulhuw
data16
pop
lds
scas
shrl
lret
and
sbb
pop
adc
loopne
push
sbb
mul
inc
ds
lret
cmp
imul
lock
jp
and
and
pop
and
mov
adc
in
mov
or
scas
out
negl
out
es
ret
bound
or
pop
xchg
jmp
dec
pop
xchg
cmp
pop
lock
imul
pop
mov
stc
pop
test
inc
mov
flds
xchg
das
in
cmc
into
mov
xchg
nop
scas
jne
fisttpll
sbb
loope
push
rorl
daa
xchg
jp
out
push
movsb
pop
pop
fmul
roll
mov
push
xlat
cmc
cmp
lock
sbb
adc
lcall
push
loopne
jnp
jmp
jg
dec
call
mov
mov
sbb
mov
ficoms
sbb
mov
ret
daa
or
fsubrl
call
and
sahf
iret
mov
mov
mov
lds
ret
outsl
into
sbb
int3
test
add
xor
cmc
pop
mov
push
fs
mov
sub
int3
inc
dec
add
movb
stos
mov
fdivp
push
mov
cmpsb
lcall
push
adc
lcall
inc
daa
ljmp
push
out
mov
sbb
andl
repz
xlat
add
js
xchg
fildll
repnz
mov
jge
filds
xor
cmp
xchg
cs
out
fisubs
dec
push
or
xor
fdivs
sbb
and
pop
jle
xchg
pop
push
cmp
sub
and
lcall
out
cmp
xor
sbb
jle
push
xacquire
cmp
mov
outsl
jge
jno
add
mov
mov
mov
ja
jmp
test
je
in
mov
add
pop
jle
mov
call
and
xor
les
aam
in
hlt
push
movsb
pop
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
push
movsb
pop
mov
inc
cmp
or
cwtl
je
add
xchg
enter
sub
or
sbb
push
movsb
pop
mov
inc
mov
je
add
adc
and
xor
les
jle
in
sbbl
or
pop
sub
mov
cmpsb
ja
xchg
mov
sub
ss
notl
out
xchg
jbe
cmpsl
push
cmpsl
inc
push
mov
cmpsb
ja
xchg
testb
aaa
daa
mov
notl
jmp
data16
cmpsl
inc
dec
mov
cmpsb
outsl
xchg
jg
push
negb
out
daa
into
or
jp
data16
push
xchg
and
add
xor
inc
ds
shlb
adc
xor
daa
not
loopne
push
sub
jle
mov
mov
mov
fstpt
push
pop
sbb
mov
inc
or
sbb
mov
in
mov
pop
mov
test
ljmp
out
xor
fmul
adc
xchg
jbe
push
mov
cmpsl
inc
push
dec
push
cmpsl
mov
testl
xchg
pop
add
sbb
push
test
addr16
sub
pop
cli
inc
xchg
negb
sbb
xlat
nop
xlat
jae
daa
imul
pop
xor
dec
push
mov
mov
xchg
cwtl
repz
sbb
dec
aaa
mov
mov
rorb
cmpsl
inc
sahf
mov
cmpsb
ja
xchg
notb
out
ds
into
fbld
out
push
incb
jbe
lods
push
cmpsl
add
jne
rclb
shlb
jp
daa
mov
pop
stos
dec
test
push
and
mull
in
sbb
pop
enter
xchg
jae
dec
testl
or
and
sub
out
rcrb
loop
repnz
lcall
xlat
ss
notl
out
xchg
jbe
data16
cmpsl
inc
push
mov
cmpsb
ja
xchg
testb
aaa
daa
xlat
ss
notl
out
xchg
jbe
data16
cmpsl
inc
push
mov
mov
fs
jnp
gs
das
xchg
sbb
inc
insb
pop
shll
cmpsl
leave
jp
mov
imul
push
aaa
mov
sbb
xchg
out
leave
pop
sub
test
cmp
shlb
aad
std
pop
jle
jbe
sti
sbb
sub
scas
outsb
dec
mov
out
shr
ret
and
sbb
loop
cmpl
dec
scas
fld1
ret
stc
mov
int
sarb
in
cmp
lret
pop
scas
js
cmp
dec
iret
cmp
fwait
data16
test
rorl
pop
push
out
jg
fidivl
dec
and
leave
negb
ljmp
jmp
mov
cmp
gs
pop
orb
jp
test
inc
lods
jl
shr
aas
pop
shll
cmc
sub
jno
push
push
inc
hlt
push
daa
mov
pop
and
mov
push
add
adc
enter
hlt
sbb
pop
mov
jmp
jae
sub
cmpsl
pop
push
add
test
add
aas
clc
popf
add
sbb
xchg
scas
in
int
lcall
cmp
int3
xor
out
and
pushf
int3
push
clc
jns
xchg
cvtps2pi
or
cli
je
pavgb
ljmp
mull
pop
enter
pusha
lea
pop
adcl
push
iret
insb
and
lock
jno
insb
nop
mov
std
shr
and
data16
mov
out
pop
sub
cmc
fsubs
out
sbb
mov
stc
sbb
test
andl
xchg
inc
mov
test
mov
jge
sti
dec
adc
or
sbbb
xchg
inc
pop
or
lea
pop
push
stos
add
popa
movsl
sbb
push
dec
std
aam
daa
aam
push
out
aam
inc
testb
loope
inc
js
add
clc
sbb
popa
movsb
pushf
push
inc
jmp
sbb
clc
xlat
aaa
inc
inc
and
and
jo
xor
or
jg
add
jno
daa
sbb
xchg
je
arpl
jp
and
scas
and
leave
push
dec
sbb
in
xchg
inc
imul
enter
leave
faddl
sub
and
movl
xor
pop
and
jp
data16
push
aas
loopne
and
nop
cli
dec
sbb
in
loop
loopne
sbb
push
insb
jno
pusha
sbb
out
mov
adcl
lcall
sbb
popf
push
xchg
hlt
sbb
or
mov
daa
inc
outsb
push
dec
or
or
or
sbb
int
and
mov
sbb
push
pop
pop
pusha
loope
jmp
dec
jnp
dec
lods
cs
dec
xchg
jae
dec
scas
stos
sahf
jl
int
dec
adc
andnps
jecxz
in
mov
rorl
xor
or
out
mov
ret
or
aad
xchg
popf
lock
xchg
in
stos
pop
lods
lds
or
sub
dec
mov
sbb
rsm
pop
mov
inc
mov
adc
pop
pop
shll
sbb
dec
roll
cld
popa
sub
mov
movsb
mov
and
stc
out
push
mov
or
adc
shlb
dec
data16
sub
adcb
mov
xor
pop
dec
fnstsw
push
pop
xchg
sbb
sub
dec
repz
mov
push
lods
jmp
out
pop
aaa
imul
sti
adc
loop
leave
iret
xchg
fisttpll
test
inc
push
pop
fnstsw
jg
xchg
pop
lea
mov
pop
or
push
inc
in
add
mov
mov
jp
add
or
pop
dec
js
cmpsl
into
lcall
add
mov
sub
test
jne
pushf
lock
loop
pusha
sub
dec
cmp
jmp
dec
fildl
mov
mov
or
inc
fsubl
or
cmp
test
jle
rcrb
pusha
in
push
mov
xchg
dec
out
sub
fmull
loope
mov
test
sbb
mov
std
xchg
ss
add
dec
adc
pop
inc
push
repz
sbb
outsb
lret
test
iret
and
in
mov
mov
xchg
in
sahf
shlb
or
push
in
fmull
xchg
jnp
jge
push
adc
nop
xchg
sbb
xlat
ds
jle
mov
inc
loopne
pop
icebp
out
push
movsb
cmp
mov
add
jp
mov
mov
lods
inc
inc
cwtl
pop
push
je
addr16
jmp
cmp
daa
and
dec
push
mov
dec
leave
jnp
out
pop
inc
adc
test
stos
gs
sbb
cli
mov
in
fucomi
cltd
sub
mov
bound
xchg
push
enter
xlat
jl
lcall
rolb
sub
jmp
pop
scas
scas
pop
jecxz
xchg
pop
out
xor
out
inc
pusha
cltd
cmp
cmp
xlat
aaa
jp
jns
cmp
pushl
je
popf
imul
repz
stc
fidivrl
cmp
and
mov
test
jae
push
mov
jl
jbe
fidivrs
or
psllq
arpl
mov
or
or
push
cld
filds
jle
xchg
movsb
dec
ds
aas
clc
add
leave
mov
pop
ror
jb
sbb
cmc
cld
in
jb
arpl
lea
stos
add
in
imul
push
xchg
icebp
lock
xor
sbb
cmp
sahf
arpl
bound
ret
jecxz
pop
jno
mov
test
imul
in
bound
sub
xchg
jp
es
inc
fiadds
punpckhwd
xchg
mov
lods
sub
popa
stc
pop
fxch
or
cli
push
and
inc
sub
fisubrs
shr
js
jne
scas
jb
pop
leave
sub
inc
int
loopne
ja
mov
nop
xchg
shr
cmp
sbb
shll
test
or
inc
int
fnstcw
mov
rcrb
frstor
shlb
inc
nop
push
jmp
sub
into
std
mov
cmp
in
ret
adc
js
ds
pop
stos
xlat
iret
cmc
or
jmp
dec
cmpsl
xchg
cmpsl
int
outsb
sti
pop
push
inc
mov
jno
xor
mov
xchg
mov
in
xchg
xor
mov
adc
adcb
lcall
test
jp
mov
push
add
push
rol
push
daa
jns
outsb
or
xchg
aam
mov
mov
jp
enter
jmp
es
mov
mov
sub
fsubrl
adc
xorb
inc
insl
out
cmpsl
addb
and
mov
mov
test
icebp
mov
lahf
and
pmovmskb
arpl
jae
insl
scas
pusha
cli
pop
jge
ret
jnp
in
mov
outsb
mov
jo
sbb
sub
lods
iret
pop
jns
mov
sahf
test
mov
push
mov
icebp
xchg
and
rol
xchg
loopne
fimuls
push
cmp
ret
jl
sub
mov
adc
inc
insb
arpl
and
push
push
sbb
push
pop
cmc
add
ret
dec
pushf
movsb
push
aam
mov
inc
push
mov
adc
lock
jae
fbstp
out
adc
mov
jmp
das
sub
sbb
adc
fbstp
push
jne,pn
push
pop
cmp
sub
in
inc
cwtl
clc
repz
lahf
scas
sarl
sahf
lea
jge
daa
adc
push
inc
fs
cld
andl
jbe,pn
and
pop
je
lcall
xchg
mov
inc
in
pop
or
aad
sbbl
jae
outsb
ror
sub
xchg
adc
stc
adc
jge
bound
mov
int3
sti
jmp
dec
push
les
sbb
ds
pop
xchg
or
imul
xchg
push
not
les
dec
imul
clc
ds
sbb
add
add
loop
inc
loop
jmp
and
jno
addr16
push
clc
js
and
sbb
ja
dec
sbb
jo
stc
clc
push
lds
or
out
cmp
int
sub
dec
ja
jno
push
in
mov
test
dec
hlt
fstps
adc
xor
sbb
sbb
cmpsl
mov
out
loopne
fildll
jp
scas
xor
xor
mov
push
or
mov
mov
jns
adc
das
imull
in
shr
int
mov
adc
cmc
or
mov
dec
mov
mov
mov
mov
outsb
popf
adc
dec
jae
pop
popf
nop
inc
fdivrl
push
imull
mov
adc
push
push
lods
out
mov
popf
add
fnstenv
daa
adc
or
or
nop
sub
shll
rolb
jns
or
pop
dec
loope
movsl
lods
lods
jg
jmp
in
in
xchg
mov
in
rorb
fadds
add
mov
das
mov
lret
fistps
pusha
mov
or
ret
in
je
inc
imul
stos
sub
or
inc
cmpsl
mov
jmp
outsl
push
aad
repz
daa
psrlq
aam
leave
lret
mov
stos
popa
jmp
jae
sahf
adc
xchg
jecxz
mov
push
xrstor
shrb
int
cmp
pop
cmpsb
into
andl
mov
ret
fimuls
sbb
aaa
xchg
sbb
add
loopne
inc
fldenv
sarb
daa
shl
pop
mov
jge
repz
outsb
lahf
and
cmp
out
test
daa
sub
cwtl
in
sbb
mov
adc
in
add
push
ss
lods
mov
push
sub
push
sub
into
cltd
or
cli
hlt
pop
jnp
out
mov
xchg
mov
lahf
push
lret
std
xchg
int3
mov
xchg
fadd
adc
pop
sbb
jns
mov
adc
dec
adc
mov
pop
testl
daa
in
mov
enter
ficomps
fwait
jecxz
sub
mov
and
mov
jnp
cmp
and
xchg
mov
pop
movb
pop
les
sub
lock
aad
mov
sub
xchg
rolb
mov
cwtl
dec
add
or
mov
ds
mov
mov
mov
inc
les
cmc
sbb
sub
cmp
and
test
pop
imul
xlat
or
xchg
popa
push
repnz
insb
lds
jb
popl
mov
inc
jbe
fidivl
jno
xchg
sub
je
sbb
fsubrs
inc
pop
pusha
insb
push
pop
jp
lahf
cmp
imull
push
xchg
sub
jae
sub
add
xchg
inc
mov
adc
push
iret
lods
add
mov
sub
imul
push
xchg
fstpt
inc
or
sub
add
stos
notl
icebp
aaa
and
lret
mov
ja
cli
stos
push
imull
ret
pop
add
push
das
push
lods
lods
sub
sahf
imul
inc
les
insl
lret
loopne
je
arpl
dec
pop
fcmovu
insb
fs
pop
and
jmp
pop
or
adc
jmp
es
outsb
inc
outsl
jae
and
mov
xchg
orl
pusha
je
mov
push
lcall
int
rclb
bound
fsubp
adc
les
pop
fwait
push
test
pusha
xor
xchg
pop
je
insb
daa
mov
cwtl
push
cmp
xchg
sbb
inc
mov
aad
imul
outsb
pop
lods
mov
inc
imul
jmp
cltd
mov
jnp
clc
or
mov
les
push
js
pop
nop
leave
xor
aad
mov
add
cmp
jl
andb
jl
int3
popa
lods
push
cmp
and
pusha
test
repnz
lods
cmp
sahf
inc
pop
in
sub
xor
push
pop
int3
push
jbe
cmc
push
dec
sbb
lea
aad
push
movsl
aaa
inc
lret
xor
push
xchg
cmp
pop
retw
lret
sub
push
insl
xor
push
cli
stos
inc
lcall
loopne
mov
or
mov
lcall
xor
or
and
mov
ret
shll
loopne
xchg
sbb
int
data16
loopne
mov
push
enter
cmp
ret
cmp
in
fstl
xchg
inc
or
sub
loopne
dec
and
adc
sub
pop
jae
or
jbe
loop
mov
pop
cmp
lea
xchg
sbb
ss
jbe
and
mov
movsl
xchg
jge
xchg
add
ljmp
or
jno
jle
jnp
sti
xor
test
sbb
leave
scas
mov
andl
xchg
sub
into
jmp
xchg
out
call
daa
out
lea
lahf
dec
or
jmp
loope
cltd
fbld
je
aaa
inc
or
shll
stos
sub
lahf
jo
in
mov
imul
mov
shll
sbb
fwait
outsl
sbb
and
push
pusha
stos
pop
cmpsb
mov
mov
sti
lock
int
lea
fsub
adc
xor
add
mov
ret
lahf
sbb
cmpsb
add
or
pop
and
dec
mov
popa
test
lods
xchg
data16
add
xchg
mull
std
mov
and
lods
aaa
dec
dec
cmc
or
pop
pop
add
sbb
and
into
or
push
sbb
pop
enter
movsb
rcpps
inc
or
mov
out
cmc
fistpl
aam
scas
into
int3
movsl
mov
popa
lret
notl
sub
or
sub
std
cwtl
rcrl
into
xchg
xor
sahf
nop
loope
test
lea
xchg
push
push
mov
loop
cli
inc
fcomps
test
iret
scas
push
add
sub
cmpl
imul
push
loopne
and
or
xchg
inc
jbe
jno
dec
xchg
sub
mov
mov
jecxz
dec
nop
repnz
push
mov
mov
mov
jge
loopne
mov
mov
dec
cmp
jle
insl
pop
insl
into
sbb
lods
add
inc
inc
adc
sub
out
jg
dec
sub
repz
mov
xchg
push
bound
add
pop
mov
outsl
addb
dec
jp
mov
call
add
xchg
push
ss
fidivl
fwait
dec
mov
adc
insl
test
mov
inc
ja
fnsave
and
jo
test
cmc
mov
xor
subl
fisttpl
loope
out
imull
lcall
mov
pushf
jb
mov
jno
adc
adc
sbb
outsl
dec
mov
push
xchg
int
push
jmp
dec
dec
add
xabort
mov
mov
enter
pop
ret
paddb
jecxz
sub
cmp
loopne
aas
pusha
daa
dec
xchg
ljmp
js
loope
xchg
rclb
and
out
add
lods
cwtl
jno
lds
pop
jp
in
shlb
jecxz
mov
daa
movsb
es
xor
mov
shrl
lds
push
int3
shlb
test
pop
mov
jb
sahf
clc
xorl
mov
cmp
je
xlat
mov
push
add
pop
sub
lods
mov
js
or
mov
aam
popf
sarb
or
arpl
xchg
xor
sahf
or
mov
xchg
adc
adc
mov
add
inc
xchg
and
rolb
inc
lahf
mov
add
movsl
jb
fistpl
test
fsubrl
inc
push
xlat
shrl
aaa
jo
jge
outsb
adc
dec
cmp
sub
fsubrl
lahf
xor
sbb
shll
adc
xor
cmp
inc
cmp
out
ss
push
sbb
nop
xchg
push
mov
jb
mov
mov
into
sub
mov
pop
clc
orl
jmp
add
or
insl
sarl
cmpsl
out
sbb
dec
mov
push
mov
pop
ror
arpl
std
ret
jnp
out
cmp
mov
repnz
push
filds
fcmovnu
sub
inc
and
je
cld
adc
mov
test
insl
je
jo
xchg
ja
adcb
xchg
push
mov
fildll
test
test
outsb
fiaddl
cld
std
push
xchg
mov
mov
mov
lea
xlat
orl
xor
sub
std
mov
orl
sbb
lret
cli
xchg
xchg
jge
movb
jo
cwtl
fcoml
jbe
inc
int
cmp
das
inc
jo
fimuls
mov
jne
and
or
inc
push
cmpsl
jns
mov
aad
push
stos
movsl
dec
stos
in
push
and
pop
lea
test
inc
and
loopne
out
aaa
cld
pusha
pusha
cmc
addl
mov
hlt
mov
adc
pushf
push
pop
movsl
pop
loope
pushl
es
sahf
mov
xor
in
sbb
movsl
inc
adc
sub
pusha
cmp
scas
xchg
xchg
jne
mov
dec
push
in
xchg
divb
insb
cmpsb
out
pop
mov
clc
xchg
and
jbe
fldl
imul
inc
inc
cld
mov
jmp
fstpl
fwait
int3
and
ffreep
jno
test
in
fistpl
jge
lds
xchg
cli
lcall
inc
aas
test
leave
mov
cmp
mov
push
cld
dec
scas
sub
mov
pop
icebp
dec
dec
cld
xorb
add
mov
jno
into
dec
movsb
ret
mov
sti
inc
jo
mov
adc
adc
sub
mov
lret
cmp
pop
xchg
in
mov
xchg
int3
rolb
fwait
movsl
xor
rcll
adc
or
jg
aad
inc
repz
mov
sbb
rolb
push
mov
jo
jne
cltd
lret
add
dec
mov
mov
push
sbb
mov
rorl
sbb
mov
dec
inc
clc
test
push
cmp
push
jns
cmp
cmpsl
addl
mov
xchg
adcb
xor
push
jno
jle
inc
xor
in
xchg
imul
xchg
sub
add
xchg
jne
mov
dec
imul
hlt
stos
or
popf
xor
and
in
xor
push
test
pop
fildl
pop
dec
mov
jp
cmp
xlat
stc
stc
lds
arpl
shll
xchg
mov
shlb
xchg
inc
call
icebp
insb
push
dec
faddl
inc
das
popa
or
and
test
jb
pusha
sbb
or
les
lods
lods
js
stos
test
pop
arpl
or
add
addr16
sub
sti
adc
adc
mov
ret
bound
xchg
shll
ret
sub
xor
mov
test
lods
pop
or
das
sub
insl
inc
jge
push
cmpsb
movsb
jo
xor
adc
fnstenv
mov
xchg
add
in
mov
sahf
sub
mov
add
pop
out
and
fsubs
xchg
push
sbb
pop
fstps
mov
test
mov
mov
inc
xor
pushf
arpl
movsl
aas
fbstp
es
arpl
mov
jle
fsubs
xchg
sbb
or
decl
mov
sbb
or
adc
jle
sahf
and
aad
rcll
pop
or
ret
sub
stos
mov
cmpsl
push
mov
mov
mov
or
test
enter
into
inc
aaa
lods
push
xchg
ret
clc
xchg
dec
dec
add
test
and
in
and
sahf
test
pop
inc
andb
dec
jp
cltd
xor
das
push
mov
adc
movsl
out
push
push
push
into
inc
mov
roll
mov
popf
mov
lret
jge
outsl
lea
sbb
stos
hlt
push
push
into
sub
pop
push
xchg
push
fucomip
shll
es
out
adc
jecxz
sub
mov
or
test
out
sti
incl
jo
xor
inc
add
or
stc
icebp
in
xchg
or
loope
call
xor
ret
rcrl
adc
add
dec
addl
scas
test
in
jmp
sarl
mov
or
mov
push
mov
nop
jmp
stc
adc
addb
aas
test
loopne
sbb
scas
jg
stos
js
pop
leave
or
lods
shll
add
sbb
lea
fnsetpm(287
mov
leave
xchg
fstl
mov
sbb
pop
cmp
outsl
pop
lea
ljmp
stos
insl
ror
pop
popw
dec
mov
xchg
testb
aaa
daa
xlat
ss
notl
out
xchg
jbe
data16
cmpsl
inc
push
mov
cmpsb
ja
xchg
testb
aaa
daa
xlat
ss
notl
out
xchg
jbe
data16
cmpsl
inc
push
mov
cmpsb
ja
xchg
testb
aaa
xlat
daa
xlat
ss
daa
notl
out
xchg
ja
data16
movsl
inc
push
mov
cmpsb
jbe
adcb
pop
data16
cmpsl
cmp
leave
cmp
decb
cltd
dec
test
mov
mov
mov
xchg
insb
or
sbb
or
sub
sub
fmull
in
fcomps
lods
adc
dec
pop
pop
ljmp
cmp
sub
lds
cmc
roll
mov
mov
pop
insb
ja
add
sub
fmull
shlb
push
lret
and
insl
jecxz
lock
icebp
js
cmp
mov
jo
addr16
addl
jb
and
fdiv
movsb
insb
and
pop
xchg
cmp
popa
adc
mov
leave
mov
enter
fincstp
mov
xlat
jmp
rol
scas
sub
mov
fdivr
mov
call
mov
pushf
je
fisttpll
repz
ja
loope
fmull
mov
clc
lods
adc
testl
dec
xor
rorl
daa
cmpsb
inc
insl
sbb
negl
imul
jns
ret
push
fstpt
pushf
rorb
inc
adc
xor
add
sbb
jno
jmp
in
int3
int3
in
mov
rolb
xor
sub
xor
sub
sbb
movsb
mov
fisttpll
mov
sbb
pop
das
cmp
push
push
test
mov
mov
or
sub
dec
or
cmp
sub
fmull
in
fcomps
lods
sbb
cmp
pop
sbb
or
cmp
sub
fmull
loope
sar
mov
mov
ss
negb
pusha
in
clc
and
sbb
call
insb
mov
push
cmp
fwait
neg
cwtl
stc
fwait
mov
jno
push
loop
mov
xchg
sub
lea
int
dec
ss
jo
mov
int
mov
cmp
mov
inc
movsl
add
out
loop
sub
push
and
mov
mov
adc
xor
push
xchg
or
jg
sbb
in
push
or
add
push
ds
rcrl
sub
pop
push
jl
jp
inc
mov
movsb
lods
push
adc
test
lods
xlat
dec
jbe
sbbl
imul
inc
cwtl
mov
add
test
shll
jo
and
decb
iret
stos
rorb
js
pop
mov
call
push
mov
or
xchg
sbb
xor
sub
outsb
add
sar
push
popf
xlat
cmpl
out
fbld
cmpsb
and
mov
imul
and
icebp
pop
and
ljmp
mov
mov
data16
and
xor
ret
add
imul
sub
or
movsl
push
clc
push
mov
into
icebp
movsb
cmp
cli
jbe
stos
cld
jne
or
pop
fs
shll
loope
jae
xor
add
subl
pusha
lods
cltd
inc
addr16
push
leave
jecxz
mov
push
mov
pop
lret
jo
cmpsb
or
insb
loope
jp
popf
test
xlat
in
int
add
cmp
inc
inc
in
mov
testl
dec
mov
and
pop
ret
loope
insb
fs
sbb
xorl
ljmp
pushf
insl
ror
inc
mov
xor
cmpsl
fs
inc
rorb
jge
test
mov
xlat
xchg
cmp
iret
xchg
stc
inc
inc
xor
sbb
stos
pop
mov
mov
cltd
pop
outsb
sahf
push
lea
xor
stc
les
push
insb
aaa
addr16
jne
cwtl
movsb
add
mov
cmp
lahf
push
xchg
bound
pop
inc
jb
jno
bound
push
fldt
sub
sbb
pop
and
je
cmp
testl
int3
imul
rcrb
daa
gs
push
aaa
mov
mov
loopne
xchg
out
push
xchg
xchg
hlt
outsl
push
add
add
mov
imul
rcrb
cwtl
and
lahf
movsb
or
js
sbb
call
cmp
pusha
stos
stos
sub
cs
sub
cwtl
das
push
jns
in
xor
sbb
dec
pop
cmp
lock
out
xchg
or
pop
and
xchg
loope
adc
gs
shrl
jg
dec
subb
out
push
adc
jne
outsb
dec
xchg
out
jp
inc
push
adc
stc
hlt
lods
or
lret
hlt
int3
push
js
in
std
inc
pop
pop
xchg
adcl
mov
test
inc
jae
mov
mov
xor
pop
xor
outsl
xor
testb
in
and
in
inc
fsubl
lock
inc
test
lock
fcoml
cmp
pop
lock
add
pop
stc
adc
lea
and
inc
mov
dec
fsqrt
shlb
pop
sub
sarb
das
nop
xor
aam
stos
int3
mov
jb
insb
ljmp
mov
cmc
push
pop
or
gs
sub
cmpsl
lock
pop
inc
clc
inc
xor
lea
aad
adc
into
pop
scas
clc
mov
and
insl
mov
ret
xchg
sahf
mov
inc
and
ficoml
test
lret
test
mov
add
push
shlb
push
out
shrl
xchg
dec
push
gs
lods
pop
je
lret
push
and
gs
mov
je
and
xor
inc
outsl
dec
mov
jg
lret
mov
aad
adc
pusha
roll
insb
xor
iret
cld
test
xor
mov
nop
sbb
pop
jbe
push
pop
and
scas
or
js
cli
mov
lds
sbb
sbb
sub
rorl
cmp
fisubl
or
into
inc
sub
sbb
push
sub
mov
jno
add
add
lods
sub
sbb
mov
cmp
mov
cmc
repz
xchg
addr16
pop
and
cwtl
adc
xchg
xchg
lock
sbb
pushl
outsl
xor
cmp
pop
mov
push
bound
and
sub
test
fiaddl
dec
xchg
cltd
inc
lret
shll
inc
repnz
dec
adc
jno
or
cmc
xchg
and
sbb
shrl
dec
lret
mov
dec
mov
aaa
aam
insb
mov
loope
leave
movsl
inc
cmpsl
jb
xor
aaa
jl
sbb
fcoml
lret
insb
and
scas
mov
push
lods
in
popa
jmp
push
push
inc
push
ficomps
mov
mov
or
pop
test
rcll
inc
inc
mov
aam
sbb
notb
xchg
int
mov
popa
or
mov
fstps
dec
hlt
mov
pop
addr16
sarb
inc
ds
fdiv
subb
out
stc
mov
cmpsb
lret
in
gs
xchg
inc
inc
sbb
in
dec
movl
mov
adc
jns
filds
cld
insl
mov
aaa
loope
xor
adc
pop
jmp
jmp
test
pushf
pop
ds
fsub
dec
inc
add
rcrb
mov
subb
xor
jmp
std
pop
mov
inc
add
cmpsl
pop
mov
gs
leave
leave
pop
mov
cmp
aaa
shl
add
dec
rcrl
into
mov
into
sahf
dec
call
inc
out
mov
mov
stos
cmovbe
repnz
push
pusha
andl
shlb
lahf
dec
sbb
sti
inc
nop
xor
loop
fildll
lds
sub
or
js
outsl
movsl
cmp
sbb
lock
push
pop
cwtl
mov
notb
flds
es
push
and
sahf
pop
jmp
in
pop
data16
and
mov
lock
cs
aas
pop
mov
or
jle
or
int
or
pop
fnstenv
inc
insb
addb
ffreep
test
call
scas
jl
add
mov
mov
insl
outsb
mov
mov
jnp
xor
rcrl
pop
test
jge
xchg
xchg
sub
or
pop
push
dec
inc
jecxz
xchg
out
fadds
xchg
jno
orl
or
ret
cmpsb
mov
imul
or
push
lcall
jecxz
pop
push
das
cmpsl
adc
mulb
mov
cmp
jae
aam
and
mov
outsb
mov
je
xor
fildll
push
divb
pop
mov
xor
imul
push
adc
test
cwtl
scas
mov
inc
adc
and
push
or
push
mov
stc
sub
and
add
outsb
icebp
insb
call
repnz
xchg
adc
cli
sub
jg
test
cld
push
dec
pop
lahf
or
test
sub
or
rolb
loop
enter
xor
icebp
into
fwait
or
das
pop
cli
lock
ret
xchg
int3
push
mov
jae
dec
arpl
dec
aad
dec
sub
test
push
xor
jae
daa
xor
jge
cmpsb
movsb
pop
mov
jae
jne
into
sub
mov
push
jl
jmp
mov
popf
mov
jg
lahf
out
lods
insb
push
enter
adc
stos
leave
cmp
ja
cmpsl
push
int
add
lea
cli
out
push
scas
sub
lret
pop
fsubrl
icebp
push
nop
xchg
sub
ret
rcr
pop
stc
mov
rcr
insb
or
pop
mov
add
mov
mov
sbb
xchg
sub
fwait
lcall
add
ret
test
xchg
pop
fwait
mov
repnz
inc
insl
or
mov
xchg
test
std
rorb
movsb
subb
dec
std
mov
and
mov
cmc
stc
cmp
lret
jg
mov
divl
add
lods
addr16
lahf
test
xchg
cltd
dec
addr16
cmp
ss
dec
adc
out
pop
or
imul
add
ret
imul
shll
mov
or
imulb
inc
cmpsl
mov
and
hlt
push
xor
loop
insb
and
mov
cwtl
fsubrs
add
add
test
std
xchg
stos
or
xor
inc
addr16
sub
pop
adc
jno
jo
sbb
sahf
jbe
mov
call
imul
and
pop
cmp
iret
and
ficomps
pop
adc
loope
push
mov
dec
enter
xchg
xor
aaa
mov
jnp
jmp
test
push
packuswb
ljmp
and
cld
xor
inc
scas
pusha
shll
mov
xchg
or
dec
gs
sub
or
and
scas
push
xor
icebp
dec
pop
adc
sbb
dec
test
outsl
cmp
pop
mov
pop
xlat
daa
push
jo
insb
jl
push
jnp
jne
jo
dec
shlb
jmp
in
movsl
and
jnp
imull
fisubl
dec
xchg
jnp
push
int3
jl
mov
xchg
adc
scas
jge
fcomip
jne
scas
repz
mov
int3
jg
xchg
xchg
mov
in
sti
jo
test
scas
dec
int
push
lds
stos
pop
mov
iret
ja
mov
in
xchg
cmpsb
jno
pop
leave
mov
cmc
xchg
dec
sti
mov
jns
in
scas
sub
jns
movsb
fstpl
fs
jmp
cwtl
lea
add
loop
xlat
fninit
jge
cli
inc
pop
ljmp
fcmovbe
fstps
sti
push
jl
ss
sbb
xchg
mov
push
xor
loope
sbb
inc
fdivl
jb
cltd
sbb
shrl
sub
les
pop
inc
das
xchg
pop
dec
xor
mov
stc
add
add
dec
sub
inc
rol
aas
pushf
mov
sbb
push
cmpl
fildll
jmp
xchg
jecxz
pushf
sub
xlat
mull
insl
pop
dec
lock
incl
es
in
clc
push
dec
jg,pt
adc
dec
xchg
mov
pop
cltd
lret
insb
add
xorb
mov
lcall
in
xor
stos
push
iret
mov
mov
mov
es
insl
std
in
ret
push
mov
pop
test
sub
je
and
in
push
jp
cli
xlat
ljmp
cmp
xchg
jg
adc
xor
ljmp
sbb
adc
pop
xor
mov
fisubrs
inc
xor
or
push
imul
test
jge
mov
sar
push
mov
out
insl
jne
fucom
mov
movsb
fidivrl
adc
mov
out
jo
jne
add
jne
sub
stc
sbb
mov
hlt
xlat
push
les
xchg
or
cmpsb
jl
int
ss
sti
inc
in
aam
mov
cmp
sbb
js
dec
jecxz
cmc
stos
mov
shrb
out
mov
push
sbb
mov
sbb
jp
scas
fists
fcmovne
in
push
pop
mov
add
jmp
jnp
jle
jnp
jg
sbb
movsb
sub
mov
adcl
out
movsb
fstp
push
sbb
mov
inc
je
into
mov
pop
mov
push
fimuls
mov
pop
jmp
pop
mov
pushf
in
outsb
sbb
cld
lahf
xchg
es
fxch
mov
imul
jnp
jns
in
or
pop
mov
xor
fisubs
mov
daa
jb
mov
mov
adcb
fwait
mov
mov
in
insb
shl
out
shl
sub
arpl
sbb
imul
lds
inc
scas
je
repz
sub
mulb
shll
xor
mov
adc
call
adc
into
stos
dec
lods
mov
push
inc
mov
push
push
sub
cs
sub
icebp
clc
jecxz
mov
cmp
test
dec
rorb
mov
adc
popa
dec
les
sub
and
inc
imulb
mov
pop
jmp
pop
dec
sub
jmp
mov
sti
stos
add
lret
jb
out
mov
scas
jp
fbld
aaa
pop
cwtl
je
jae
sbb
shrb
jl
adcl
hlt
jg
jmp
add
add
mov
int3
add
inc
push
inc
fimull
notl
and
pop
std
xor
jge
test
xor
scas
pop
inc
pop
push
mov
sbb
add
jl
icebp
pop
mov
mov
ficomps
and
sbb
sbb
pop
mov
inc
add
pop
pop
ret
arpl
add
pushf
jecxz
arpl
dec
test
dec
repz
mov
cld
arpl
jp
mov
ss
fisttpll
add
insl
mov
mov
sub
inc
jge
nop
mov
xor
notl
fcoml
mov
fsts
insb
cmp
mov
dec
jmp
add
imul
sub
jecxz
add
jne
shl
or
movsl
sub
dec
push
mov
pop
inc
pop
clc
inc
jp
lods
xchg
or
or
cmpsb
cli
mov
push
int
inc
es
add
std
inc
rclb
mov
shlb
inc
test
shll
mov
sahf
xchg
insl
dec
push
mov
inc
sub
pop
mov
hlt
repnz
mov
imulb
das
imul
stos
push
adc
ret
mov
cwtl
fildll
sbb
cmpsb
and
test
push
jl
popa
or
pop
adc
lret
test
add
int
addr16
push
sti
adc
xchg
push
dec
push
mov
ds
dec
mov
mov
inc
insb
sbb
fsubp
or
aas
push
int
adc
mov
nop
test
and
add
jp
fsubrs
sub
out
adc
pop
sub
scas
jno
cmp
adc
repnz
hlt
adc
imul
repz
enter
xor
pop
fisubrl
sub
cmp
lea
xor
or
mov
jne
push
push
ret
adc
mov
negb
scas
enter
pop
jmp
xor
pop
xchg
mov
dec
sar
fists
icebp
push
cli
xor
xor
movsb
cmp
nop
rcll
push
adc
and
bound
sub
add
mov
sbb
shlb
icebp
ljmp
or
pinsrw
sbb
cmc
push
pop
adc
jbe
fdivrs
lret
sub
inc
add
push
adc
inc
cs
push
jo
lcall
bound
cli
lds
push
add
mov
decl
sbb
fnstenv
stc
or
ss
sti
add
mov
cmc
pop
or
popa
cmp
faddl
xchg
mov
out
push
sub
jb
push
ja
cmp
insb
fstpt
rorb
push
bound
stos
mov
and
add
add
inc
iret
fldenv
or
in
dec
loope
lret
jno
and
in
dec
xchg
sbb
popa
fcomp
mov
cmp
sbb
cmpsb
adc
or
std
dec
int3
cmp
mov
test
xor
dec
arpl
orb
add
dec
idiv
imul
xchg
push
pop
dec
or
jge
inc
test
loope
ja
stos
jo
mov
addr16
xor
fldl
mov
cmpb
xor
int
jecxz
or
in
sahf
outsb
outsb
xor
sbb
shrl
ffree
stos
je
mov
lds
lahf
adc
sbb
std
aad
clc
push
mov
push
adc
mov
cmp
xchg
insl
mov
jl
addr16
fsubrs
pop
sti
enter
jg
pusha
icebp
push
add
movsb
popa
add
cmp
xchg
lea
sub
mov
repnz
mov
data16
in
mov
xchg
cld
cmp
setnp
cmp
or
dec
test
pop
and
xchg
cmpsb
test
and
lds
lcall
jno
test
call
fwait
jle
cld
or
in
out
jbe
lock
hlt
jg
les
aad
sub
addr16
mov
lahf
lahf
adc
pop
lret
cmpsl
rorb
in
cli
cmpsb
pushf
or
sbb
daa
subb
out
sub
and
lea
hlt
fisubl
cwtl
dec
lret
inc
cmp
sub
mov
xchg
pop
aaa
push
orb
cltd
adc
inc
mov
xor
arpl
mov
mov
jno
pop
rolb
dec
iret
sub
xchg
std
mov
icebp
pop
sub
mov
pusha
mov
jmp
into
clc
es
or
rorb
imul
js
ss
hlt
jb
cmp
pop
add
imul
xor
cmp
sbb
mov
mov
dec
xchg
out
mov
push
aad
mov
or
push
scas
push
insb
or
mov
push
adc
scas
jns
or
pop
cs
es
sub
add
addr16
adc
adc
mov
adc
aaa
out
sbb
fbstp
cmp
scas
lods
lods
push
outsb
stos
lret
daa
out
in
dec
inc
mov
and
lds
xchg
mov
sbb
lahf
adc
push
test
idivb
outsb
adc
mov
mov
sbb
aad
loopne
stos
hlt
loopne
out
loopne
outsb
dec
mov
sbb
mov
and
mov
cltd
into
mov
dec
outsb
mov
xchg
gs
aaa
push
push
rorb
cmp
fs
fiaddl
in
mov
cwtl
insl
push
or
inc
lods
adc
xchg
fwait
and
xchg
insl
dec
lahf
in
ja
jp
xor
test
icebp
shrb
lock
lea
mov
lret
mov
ja
xor
ficoms
cwtl
mov
push
std
roll
and
dec
mov
jnp
push
subb
push
dec
ss
adc
xor
xchg
jl
inc
aaa
lret
addr16
inc
ret
add
mov
inc
cmp
pop
jmp
scas
in
imul
rolb
sbb
jno
dec
or
pop
cmp
popl
fisubl
sub
fildll
insb
adc
in
dec
mov
sbb
push
push
inc
clc
insl
pop
sub
and
ds
mov
push
pop
dec
fiaddl
sbbl
sub
imul
push
enter
fcmovne
adc
lods
stc
ss
add
push
dec
rol
push
adcb
sub
mov
add
push
mov
repnz
add
nop
pop
mov
inc
push
push
push
ret
mov
popf
or
mov
adc
les
cld
sbb
mov
out
add
std
inc
test
pushl
jecxz
adc
push
les
sub
in
adc
xchg
das
pop
inc
mov
adc
mov
ljmp
push
jmp
add
fucomip
dec
dec
loopne
ja
mov
daa
inc
or
sub
out
jb
in
mov
jle
out
in
in
mov
sbb
movsb
cmovg
mov
lea
and
inc
pop
cs
int
lret
push
lods
imull
testb
adc
sti
jecxz
and
mov
xlat
sti
mulb
mov
pushf
or
mov
xor
testb
lds
popa
lea
out
insl
loopne
gs
xchg
mov
dec
out
enter
loope,pt
clc
lret
push
test
add
cwtl
jecxz
push
frstor
fwait
das
xlat
mov
loope
popf
popf
adcl
sub
push
push
addr16
shl
out
loope
cmp
aas
or
popf
sti
out
flds
les
or
sub
add
orl
popa
sub
pop
test
movb
arpl
stos
repz
rcll
push
pushf
push
xchg
or
xchg
jle
and
pop
cmp
lds
pop
movsb
mov
movsl
movsl
popf
movsl
and
rcr
cltd
loop
push
les
xor
aam
rcr
adc
xor
dec
xchg
movsb
xchg
test
xchg
out
or
lahf
sub
sub
insb
sub
xor
movsl
cltd
or
mov
dec
push
es
pushf
fmull
shr
jmp
test
cwtl
lea
mov
mov
mov
pop
xor
cmp
dec
xor
push
mov
gs
daa
inc
cmp
pop
sbb
sbb
xchg
or
mov
push
or
les
add
test
test
std
cmp
bound
fldt
notb
test
fcomps
lods
sbb
cmp
pop
sbb
or
cmp
sub
fmull
in
fcomps
lods
sbb
cmp
pop
sbb
or
cmp
sub
fmull
in
fcomps
lods
sbb
cmp
sub
sbb
or
cmp
mov
in
fcomps
lods
out
mul
xchg
jl
sbb
xchg
shl
ret
xchg
rcll
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
out
hlt
test
hlt
aam
movsb
mov
in
xchg
mov
dec
inc
inc
push
fs
xor
add
add
adc
les
xchg
mov
test
inc
and
cmp
add
adc
pop
jb
add
or
mov
mov
push
addr16
xor
dec
inc
inc
bound
dec
inc
mov
mov
jge
aaa
mov
mov
popa
int3
xor
add
adc
xlat
or
inc
adcb
xorl
xchg
stos
add
fildl
push
imul
lods
ret
js
jge
inc
cmpsl
pushl
push
je
push
jne
lcall
sub
cmp
pushf
les
lock
pop
xorb
shll
mov
mov
add
cmp
or
pop
cmpsl
cmp
pcmpeqw
pop
inc
ja
adc
xchg
popa
jle
adc
sbb
imul
pop
fistpl
jnp
mov
adc
mov
addr16
add
pop
dec
mov
adc
inc
xchg
int3
test
out
in
xor
pop
insb
sub
ljmp
xchg
lret
xor
jmp
fs
daa
xor
shll
pop
push
push
pop
imul
dec
test
xchg
jno
rcll
es
pop
pop
pop
add
push
push
push
mov
xchg
test
inc
inc
je
fs
xor
add
adc
in
hlt
hlt
aam
movsb
xchg
mov
test
inc
inc
je
fs
xor
add
adc
in
push
xchg
push
mov
imul
ljmp
ds
in
lock
insb
mov
jns
adc
add
jne
jmp
pushf
push
cmp
or
fdivl
ss
xchg
mov
insl
sbb
mov
sub
fst
pop
popl
dec
sbb
adc
in
pop
jno
add
loope
rolb
cmp
cmp
adc
xchg
pop
mov
lds
int
and
test
in
iret
fisttpl
pop
pop
mov
movsl
mov
int3
out
sub
dec
or
jnp
add
int
xor
shrb
ret
inc
test
iret
mov
lahf
fsubrs
hlt
ljmp
fsub
aam
popf
cmp
mov
scas
inc
mov
mov
jl
sahf
mov
shl
xor
push
and
ljmp
jne
test
inc
or
outsb
repnz
jbe
lock
and
ficomps
es
ss
sbb
fs
push
jecxz
fdivrl
mov
push
cwtl
movsb
jmp
fmull
add
outsl
outsl
jns
push
mov
std
xchg
mov
pop
lods
and
leave
sarb
imul
adc
adc
test
jo
cmp
mov
in
rcr
rcrl
or
out
push
out
inc
cmp
leave
mov
inc
xor
enter
das
and
cmp
cltd
xor
adc
and
gs
icebp
pop
dec
fistl
in
mov
xlat
mov
xor
insb
jge
mov
mov
rol
subb
mov
inc
sbb
repnz
mov
imul
dec
mov
aas
push
mov
minps
sbbl
dec
inc
nop
jmp
int
popf
fwait
out
jg
call
outsl
sbb
mov
and
test
sbb
loope
jo
ja
enter
xchg
jno
mov
aas
xchg
loopne
and
das
xor
lcall
adc
aas
shl
mov
push
jo
sbb
fimull
mov
push
insb
les
outsl
inc
or
cmp
adc
fildl
xor
or
mov
sub
bound
adc
sahf
mov
and
stos
fdivrs
lods
scas
inc
lcall
mov
orl
loopne
mov
leave
orb
data16
aam
test
fstps
adc
or
das
jle
out
in
decb
sbb
sbb
frstor
es
xor
enter
fs
push
jp
bnd
loope
sub
inc
pop
push
fwait
aaa
cs
inc
addl
dec
mov
and
cmpsb
dec
test
dec
jb
mov
bound
xchg
jle
mov
scas
nop
cwtl
loope
mov
xor
clc
cltd
imul
mov
add
shlb
push
sti
es
inc
xor
int
mov
mov
or
out
mov
mov
mov
bound
dec
cmc
or
push
add
loop
jno
jp
dec
and
dec
push
stc
sub
in
xor
mov
jae
jbe
in
jecxz
jl
rorb
aas
imul
leave
adc
xor
icebp
insb
mov
nop
enter
adc
in
mov
or
rcll
inc
lock
xorl
ds
jp
sbb
mov
jp
cmpsl
scas
inc
aas
push
jo
dec
arpl
inc
test
xchg
xchg
stos
test
xchg
push
cmp
xchg
mov
cmp
lea
cli
mov
fiaddl
pop
xchg
mov
mov
sbb
mov
push
test
cmp
inc
xor
xor
xor
lret
imul
sub
repnz
xor
jle
daa
out
xor
inc
mov
out
scas
andb
dec
scas
push
jbe
mov
cmp
mov
sub
stos
and
rcrl
pop
je
insb
cwtl
xlat
push
mov
jmp
adc
mov
iret
in
xlat
in
loop
push
aad
outsb
popf
ja
cmp
outsb
sub
scas
xor
lret
and
sbb
add
cmp
sub
dec
or
test
inc
mov
xor
push
push
inc
lods
ret
add
insl
js
jns
or
in
loopne
push
pop
stos
cmp
xchg
push
insb
cmp
xor
and
pop
inc
xchg
push
incl
divb
arpl
dec
push
push
dec
mov
push
jnp
lock
arpl
mov
js
inc
lret
int3
mov
fdivrp
adc
loop
jae
inc
addl
cmp
aam
and
add
movsb
je
xchg
aaa
mulb
or
mov
cltd
dec
and
imull
cltd
stc
outsl
dec
dec
mov
xchg
mov
insl
push
mov
jb
ja
test
pushf
lods
and
add
shrl
pop
adc
dec
stos
xchg
fwait
mov
aam
mov
mov
out
aaa
js
imulb
cmp
xlat
aad
pop
push
bound
arpl
lds
push
dec
loop
in
lahf
push
xchg
inc
jne
mov
lret
pusha
sbbb
mov
mov
fs
push
dec
jne
push
out
enter
or
inc
in
imul
xchg
aam
loop
call
shr
cltd
xchg
add
arpl
mov
cld
dec
aaa
cltd
rcrl
inc
les
shll
ja
pop
dec
call
stos
add
jmp
jmp
movsl
sbb
jns
aad
mov
jbe
test
adc
in
sets
shll
push
dec
jno
add
sub
or
adc
push
ss
pop
movsb
jg
in
fisttpl
outsl
mov
jnp
into
sbb
fdivr
cmp
and
dec
mov
inc
cmp
dec
in
shll
imul
inc
cmp
and
xchg
incb
inc
pop
out
jbe
iret
outsb
pusha
dec
clc
mov
inc
dec
push
jl
das
clc
xchg
add
inc
fs
ret
orl
add
loopne
out
aas
inc
scas
pushf
add
mov
popf
mov
mov
insb
sarb
std
mov
and
in
lock
scas
fdivrl
xchg
stos
push
inc
mov
jnp
je
cmp
xor
mov
loop
dec
scas
cwtl
ret
in
cld
jns
adc
outsl
loope
xchg
sub
cmp
stos
std
in
jbe
call
divb
add
mov
ljmp
je
daa
sarl
lcall
xor
mov
fwait
xor
inc
and
ror
xor
out
icebp
fwait
lahf
in
adc
lret
cmpsb
push
inc
sub
xchg
sar
jno
sbb
cmp
insb
notl
in
xor
arpl
xchg
cmpsb
arpl
out
in
dec
out
jmp
sub
inc
xor
xor
pop
cmpsl
shrb
jg
sbb
das
jle
push
and
lea
push
mov
clc
push
inc
jg
aad
and
cltd
les
or
je
pop
imul
rcll
sbb
xchg
clc
sbb
adc
fsts
xchg
push
xchg
jg
test
push
adc
add
xor
cltd
pmullw
dec
and
xchg
mov
mov
cmp
and
inc
and
in
lea
iret
mov
fnstenv
aas
or
adc
inc
test
mov
xorl
xor
fisttpll
adcb
sub
pop
push
subb
cltd
sahf
mov
mov
pop
outsb
sbb
push
pop
andb
test
int3
nop
pop
jne
jecxz
imul
fs
mov
sub
jge
mov
in
loope
enter
das
mov
inc
or
xchg
stos
xchg
ret
push
add
xlat
mov
xchg
pop
fcoms
mov
clc
loopne
sub
push
inc
das
push
aad
aaa
mov
shlb
cs
mov
das
cld
dec
mov
push
jmp
xor
mov
int
sbb
dec
test
sahf
push
jmp
sbb
xor
arpl
add
jl
les
sub
pop
adc
push
pop
dec
inc
out
or
sbb
mov
dec
sub
decl
in
mov
popf
les
jmp
jbe
mov
push
shll
xchg
test
mov
int3
cmp
imul
add
and
jno
jns
inc
dec
inc
mov
push
pushf
imul
movsl
cmp
mov
sbb
stc
pushf
push
fadd
cmpsb
cmp
push
call
stc
gs
dec
movsl
jg
jg
add
mov
sub
ja
mov
xchg
dec
or
push
jl
addl
out
adc
int3
popf
inc
xchg
lods
sub
xorb
pop
ljmp
pop
push
pop
loope
gs
fnsave
lcall
pop
es
jns
addl
out
cmc
test
bound
sub
ffreep
inc
adcb
mov
cmp
push
in
jb
out
dec
and
in
mov
xor
xchg
xchg
mov
sbb
frstpm(287
push
outsl
mov
mov
mov
loope
stos
push
movsl
shrl
out
lcall
xchg
fisubrs
sbb
or
int3
dec
and
and
push
packuswb
mov
jmp
in
jo
mov
or
sbb
cmp
leave
jmp
adc
ret
test
ss
popf
test
xchg
add
cmp
ret
sahf
int
mov
stc
js
ds
jae
adc
in
fiadds
xlat
sub
jmp
mov
sbb
jmp
xchg
mov
nop
sub
das
push
sub
push
test
lods
or
pusha
sub
sbb
faddl
lds
jo
push
add
xchg
sub
out
jg
dec
cltd
enter
fwait
test
shl
dec
and
and
out
and
mov
pop
bound
outsb
sbb
cmpb
out
repnz
xor
aad
imul
lods
jmp
jl
mov
xchg
scas
push
std
sub
ss
sbb
cmpsl
xor
imul
jno
and
in
inc
clc
pop
mov
ret
dec
jge
popf
in
mov
ds
ret
in
sub
popl
jbe
test
cmpl
movsl
imul
push
push
jnp
mov
sub
call
or
fldcw
mov
mov
mov
mov
xor
xchg
and
mov
jns
fldcw
insb
xor
lcall
outsl
stc
and
cmpsb
inc
hlt
arpl
xor
cmpsb
mov
inc
rorl
rorb
pop
pop
mov
ds
pop
pop
mov
jp
sbbl
popa
inc
inc
in
or
iret
pusha
imul
cmp
out
mov
inc
push
lret
jecxz
jp
inc
fisubrs
pop
scas
aaa
in
add
fimuls
and
insl
xchg
gs
jae
sub
imul
cld
pop
sub
jne
testl
inc
sarb
mov
test
lahf
out
lahf
jae
int3
push
insb
in
ljmp
aam
and
jg
scas
lods
jns
sbb
js
cmpsw
punpckhdq
fadds
mov
lahf
movsb
cmp
jns
xor
gs
jge
xchg
sti
add
mov
xor
xor
js
inc
cmp
sbb
int3
adc
xor
pop
push
mov
iret
mov
nop
push
pop
stos
insl
add
das
jae
loop,pn
ljmp
xchg
pop
mov
out
ss
fdivs
mov
mov
xchg
sti
sbb
std
xchg
xchg
ljmp
icebp
ljmp
and
in
mov
mov
dec
inc
je
dec
mov
cmp
cltd
push
pop
push
jne
add
movsb
sti
push
mov
enter
push
sbb
mov
sub
pushf
shlb
cmp
cmp
xchg
mov
xchg
lds
sarb
into
mov
dec
push
sti
dec
orl
mov
test
int3
rcrb
jb
push
gs
pop
es
pop
shr
jecxz
add
and
adc
push
cmp
and
sub
jmp
and
sahf
xor
arpl
xor
decl
out
jns
sbb
fs
leave
pop
mov
pushf
mov
test
ficoml
mov
jno
rep
pop
jmp
stos
jmp
xchg
lds
add
push
das
jne
xchg
adc
mov
iret
loop
or
das
cmpb
scas
ret
dec
push
jae
push
aad
test
pop
dec
call
adc
bound
lods
loopne
xor
mov
sbb
lea
add
insb
pop
sbb
insb
std
mov
fiadds
push
pop
xchg
cmp
sub
add
mov
adc
jecxz
pop
xor
mov
cmp
inc
xlat
sbb
cli
jmp
xchg
add
cmp
leave
mov
dec
xor
mov
sbb
pushf
mov
pop
lret
xchg
movsb
rep
jge
mov
push
ds
ljmp
mov
jb
xor
cltd
les
int3
add
call
mov
cwtl
xor
negb
jecxz
inc
add
gs
call
inc
imul
aas
dec
mov
cs
repnz
sbb
dec
sub
stos
mov
addl
loop
add
cmp
and
lahf
jns
shll
adc
sbb
rclb
movsl
out
sahf
int3
push
mov
sti
mov
insl
or
fisttpll
push
jp
jg
sub
hlt
fisttps
sbb
outsl
repz
add
cmp
inc
inc
or
xor
cld
movsl
push
jecxz
xor
scas
add
fnsave
in
pusha
add
sahf
leave
test
xorl
das
fs
adc
push
inc
cmp
flds
loopne
jo
mov
fnstsw
cmp
pop
aaa
inc
lcall
ljmp
mov
or
dec
jp
mov
les
pop
dec
adc
nop
add
xchg
add
push
jmp
popa
push
imulw
in
mov
pop
sbb
push
mov
call
js
sbb
mov
repnz
xchg
cmp
pop
mov
and
add
in
loop,pt
dec
shl
cmp
add
mov
adc
jmp
fisttpl
dec
shll
pop
mov
jl
xor
loope
lods
jno
pushf
pop
call
push
and
clc
push
mov
xor
mov
repnz
clc
popa
pop
pusha
mov
lret
fisubrs
sti
ret
jae
decb
mov
jb
cmc
mov
call
out
rcrl
jg
push
push
sbb
jbe
xchg
out
xor
or
mov
nop
shlb
pop
mov
push
in
in
in
pop
out
push
imul
imul
or
xchg
jmp
cmpsl
jg
aas
add
addr16
sahf
ss
jae
and
loopne
leave
into
js
sbbb
outsb
adc
loopne,pt
add
lods
test
jne
mov
push
test
push
mov
dec
loopne
and
jo
lods
dec
bound
sbb
jae
je
cltd
ljmp
dec
or
movsb
ss
push
fsubl
and
cmp
jp
cmpsb
fcmovu
es
repz
aaa
push
std
pop
movsl
xor
in
int
movsb
cli
ljmp
push
push
mov
sub
cmpsb
cmp
add
inc
push
mov
rcrl
sub
mov
push
and
mov
je
pcmpeqd
sub
in
std
test
mov
sub
xchg
jae
int
imul
dec
ret
pop
int3
xchg
call
insb
dec
xlat
stos
jns
xchg
call
or
inc
test
xchg
sub
xor
mov
jecxz
enter
je
out
inc
dec
mov
lahf
mov
rclb
inc
cs
ds
fld
aas
sub
sbbb
jno
daa
and
sbb
sub
sarb
jb
gs
stos
or
fistpl
leave
ds
pop
cmp
jecxz
jl
xchg
or
mov
jecxz
hlt
and
or
sti
sub
mov
sahf
add
sub
adc
notb
lcall
dec
add
push
fstl
cmp
arpl
adc
scas
mov
and
jg
rcr
out
jo
data16
lods
dec
jmp
sbb
idiv
dec
or
jle
ja
in
in
push
add
outsl
adc
repnz
sbb
daa
mov
xchg
pop
sbb
or
adc
dec
mov
in
adc
int3
pcmpeqb
test
sbb
mov
andb
outsl
cs
mov
fwait
les
mov
lea
inc
sahf
mov
nop
mov
fstpt
addl
mov
fsubs
inc
jg
es
and
pushl
inc
inc
pop
pop
cmp
repz
add
xor
lea
sub
sub
test
fbld
mov
fdivrs
aad
arpl
push
idivl
pushf
mov
js
aaa
sbb
aam
xchg
mov
xlat
in
inc
imul
fidivs
lahf
out
scas
int
addr16
cs
les
cmp
add
mov
out
push
in
pop
daa
into
ja
dec
xor
loop
jmp
mov
lock
scas
push
jbe
fs
push
orl
cmc
cltd
sarl
inc
sbb
shlb
cld
int3
push
mov
and
imul
dec
lock
mov
xchg
stos
in
xor
imul
xor
or
add
inc
mov
adc
aad
cmc
addr16
push
jg
ret
jecxz
arpl
stos
aam
ja
jns
lock
dec
pushf
and
dec
ja
loop
fisubrs
and
adc
push
sbb
bound
movsl
imul
push
mov
mov
jmp
inc
push
adc
mov
jno
js
adc
or
aam
add
jo
mov
mov
lea
leave
mov
decb
mov
out
sbb
shlb
mov
mov
mov
jl
dec
daa
xchg
insl
ret
mov
push
jb
lahf
or
and
stos
pop
call
mov
mov
mov
jecxz
mov
cmc
pop
sbb
cmp
add
cmpb
xor
ja
rcrl
es
mov
aad
and
cmp
lea
in
sbb
gs
fwait
jg
fists
out
pop
int3
and
or
adc
push
jno
xor
aaa
or
add
add
push
hlt
popa
imul
xorb
dec
adc
push
pop
mov
jmp
mov
data16
iret
cmp
mov
loop
pop
mov
fdivp
inc
popa
inc
or
jg
in
outsb
movsb
mov
inc
dec
push
subb
sbb
push
xor
xchg
push
enter
nop
andb
pop
fnstcw
lret
nop
in
outsl
adc
jp
scas
jb
xchg
fsubl
sbb
jmp
adc
and
push
imul
add
adc
sar
lret
stos
aam
and
jge
xchg
adcb
fidivl
jno
xchg
aad
jle
push
subl
movsb
daa
inc
dec
dec
xchg
push
xorb
mov
xchg
jns
loop
xchg
data16
pop
push
sbb
divb
jmp
cmp
jecxz
inc
jae
inc
ret
mov
movsl
xor
dec
push
add
push
icebp
jno
into
jb
jo
xchg
mov
or
inc
pusha
xchg
mov
scas
mov
addr16
mov
ror
add
mov
in
jge
and
stos
les
daa
jno
iret
jg
dec
das
xor
mov
mov
pushf
push
and
or
shrb
cli
pusha
in
jl
adc
cmc
ret
inc
repnz
push
or
pop
inc
sub
mov
in
adc
jne
push
inc
mov
lahf
jns
xchg
icebp
cmpsl
inc
pusha
std
inc
xchg
aam
adc
cmp
dec
mov
test
sub
or
stc
lret
jae
push
sarb
cld
ss
in
lds
leave
enter
ja
fs
popf
xchg
enter
and
add
sbb
outsl
movsl
inc
or
mov
push
push
aas
add
inc
mov
mov
subb
inc
out
repnz
push
sarb
je
lahf
stos
mov
lods
inc
rcr
jmp
mov
popf
adc
out
pop
and
dec
les
ds
lods
repnz
mov
mov
push
sarl
adc
rcrb
int3
push
bts
xorl
les
xchg
mov
test
inc
inc
je
fs
xor
add
adc
in
hlt
hlt
aam
movsb
xchg
mov
test
inc
inc
je
fs
xor
add
adc
in
lret
aam
xor
mov
test
je
mov
push
insl
and
and
add
cld
shl
test
sahf
adc
movsb
movsb
xchg
movsb
test
mov
out
je
adc
mov
pop
test
stc
cmpsl
xchg
aam
sbb
pop
imul
sbb
ja
rcll
mov
cmpsl
mov
cltd
test
pop
pop
pop
inc
aaa
jns
or
jge
sub
adc
outsl
mov
cmpsl
cltd
xlat
rol
test
inc
out
pop
xor
inc
sub
inc
adc
dec
adc
in
into
lods
fisttps
ret
mov
jb
repnz
rclb
pop
push
insb
cld
or
psrlw
jo
inc
cmp
in
int
movsb
clc
xchg
and
mov
xchg
leave
mov
fnstsw
add
call
mov
inc
cmpsb
mov
inc
xchg
inc
data16
lods
lock
test
mov
clc
jns
xchg
test
mov
dec
jecxz
xlat
push
out
sub
sbb
popf
icebp
mov
or
enter
add
inc
jns
dec
cltd
dec
adc
or
cmpsl
pop
out
popa
cvttps2pi
inc
mov
push
push
sbb
ja
jb
xchg
flds
mov
ffree
test
pop
lret
pop
mov
addr16
imul
push
mov
mov
cmpsl
out
in
scas
mov
outsb
sbb
cmp
push
pusha
adc
and
jle
leave
repnz
loop
shlb
cmpsl
loopne
clc
mov
sahf
lret
pop
sbb
fs
inc
pop
and
mov
lds
test
pop
pop
pop
imul
sbb
ja
addr16
xchg
flds
mov
cltd
test
pop
pop
pop
imul
sbb
ja
addr16
xchg
sbb
lds
frstor
dec
ja
inc
popf
mov
in
rolb
push
lahf
aad
sub
jg
and
pop
jmp
inc
movsl
lock
rcrl
loope
fistpll
or
jae
sar
lcall
xchg
inc
cmpsl
ficoml
ret
jge
xchg
movsb
repz
mov
shlb
adc
add
xorb
shrb
outsl
gs
dec
call
push
xchg
pop
jnp
mov
jno
call
repnz
add
neg
int3
pop
movsb
xchg
mov
adc
ss
add
inc
es
adc
push
popf
lock
xlat
iret
cmp
pop
or
or
mov
cmp
int3
fwait
iret
cs
pop
fwait
fs
mov
in
mov
es
sbb
push
out
xchg
insb
gs
xor
call
mov
loop
stos
lahf
in
lods
cmpsl
add
fsts
jb
daa
jno
fsubs
nop
sub
lcall
or
dec
xor
push
jb
jbe
xchg
xlat
pop
mov
clc
repz
pop
add
xor
fistl
rcrl
xchg
xchg
insb
jge
cmpsb
loopne
lock
xlat
mov
sub
rclb
dec
inc
pop
dec
mov
mov
in
adc
sub
fdivl
jns
lock
dec
mov
cltd
adc
xchg
xlat
xchg
and
xchg
pop
push
out
pushf
ljmp
repnz
jo
iret
outsl
add
mov
xchg
lcall
mov
and
jmp
shlb
jnp
cmpsb
mov
add
ljmp
and
cmp
add
notb
negb
fdivrl
jle
lds
je
ror
push
cmc
outsl
mov
inc
mov
dec
ljmp
rorl
pop
and
popl
inc
andb
jne
dec
push
dec
push
aam
add
out
mov
js
adc
inc
fadds
or
rcll
subl
inc
inc
jns
push
xchg
and
sub
fsubs
or
icebp
nop
lods
inc
pop
xlat
and
push
mov
rorl
adc
mov
pop
std
stos
xor
sub
dec
icebp
cmp
xor
clc
xor
sbb
push
sbb
xor
push
xchg
out
jb
xchg
mov
xchg
lahf
aam
and
test
sahf
add
sbb
cmp
sti
insl
scas
xor
out
stos
dec
insl
sub
fdivs
add
xor
movsl
sarl
inc
popa
fstps
mov
js
fnstsw
aam
xchg
out
imull
jae
clc
adc
adcl
push
xchg
mov
test
std
pusha
lcall
int3
ja
ds
sbb
dec
int
orb
scas
mov
mov
mov
fs
or
stc
fidivl
leave
dec
imul
xor
ss
insl
shll
add
jge
call
insl
mov
ds
push
aaa
cmp
testb
loop
adc
adc
xor
mov
mov
or
adc
pusha
inc
or
mov
cld
insb
outsb
imulb
mov
and
test
cmp
call
sub
push
repz
scas
nop
sbb
shl
cwtl
dec
or
jp
mov
mov
clc
scas
cld
cld
add
push
nop
push
xchg
mov
adcl
cs
es
mov
test
frstor
cmp
scas
out
sbb
pushl
ja
sub
inc
popa
lock
cmp
adc
pop
test
xor
ss
push
dec
loopw
cmc
sbb
out
push
adc
pop
scas
cmc
es
pop
ss
cld
shl
lea
aam
jo
pop
cli
lods
ljmp
pop
insb
push
pop
xor
inc
xorl
int
pop
inc
dec
das
jmp
sub
xchg
and
psubusb
fidivl
adc
int
fldt
xchg
mov
mov
jp
push
jmp
rcrb
push
xchg
mov
mov
adc
cmpsb
cmp
punpckhwd
cmp
sbb
sub
in
ret
pop
mov
mov
push
mov
mov
popf
lock
xor
mov
getsec
call
out
test
jecxz
jg
sbb
add
jle
mov
cmp
sbb
cmp
imul
mov
mov
dec
in
mov
inc
call
pusha
mov
popa
adc
fldl
cmc
inc
mov
pushf
sbb
add
dec
or
aaa
xchg
dec
lret
push
rorl
das
inc
insl
or
lea
shlb
mov
or
cmp
adc
ss
or
mov
dec
jmp
jp
xor
fwait
loop
hlt
ja
je
imul
mov
loope
addr16
cmp
clc
xor
cltd
xor
sahf
pop
data16
shlb
or
and
imul
cmp
js
clc
sub
push
negl
mov
xor
idivb
mov
adc
scas
add
setns
pop
stos
and
out
mov
pop
push
adc
mov
loope
lods
push
xchg
repz
test
pop
push
std
roll
repnz
mov
push
ror
aas
pop
cmp
negl
fs
mov
ljmp
mov
rcrl
shrl
mov
push
dec
mov
inc
and
xchg
aam
imul
arpl
xchg
mov
out
aad
mov
push
mov
mov
jecxz
into
int3
or
rorl
imul
in
enter
mov
lret
js
fcmovbe
push
arpl
sub
out
popa
pop
xlat
aaa
je
xlat
decl
je
xchg
push
adc
mov
mov
or
add
loopne
jecxz
inc
scas
xchg
sub
fmull
leave
cmp
stc
pop
js
cmp
jae
fisttps
or
mov
push
in
negb
call
aaa
pop
leave
call
add
into
ja
sub
push
mov
cmp
das
xchg
aam
int3
popa
fucomp
mov
pop
shrl
fnsave
sar
fadds
or
mov
mov
sbb
mov
cmp
ret
sub
xor
jae
out
mov
dec
push
je
lods
mov
ret
cmp
pop
sbb
dec
insb
jae
and
push
imul
cmp
and
fsubl
hlt
dec
outsb
cmp
and
mov
mov
mov
dec
xchg
inc
push
andl
and
mov
scas
dec
mov
ror
inc
pop
mov
mov
aad
cmp
dec
std
and
lea
mov
jo
add
movsb
mov
and
orb
fwait
mov
mov
addr16
add
fists
xor
mov
test
sbb
scas
fwait
cmc
das
jbe
sbb
dec
mov
and
pop
sbb
push
cli
dec
cmp
dec
arpl
mov
cmp
xor
xchg
xchg
xchg
cmp
sub
push
jae
sbb
adcl
cmp
sub
or
hlt
add
mov
popa
stos
nop
fstpl
loopne
divl
and
mov
and
roll
lock
lret
xchg
ja
out
scas
jmp
out
repz
xor
test
roll
xor
lahf
fcos
mov
in
orl
mov
les
ja
cmp
call
adc
ja
sub
adc
ja
or
xchg
cmc
lahf
pop
out
stos
jbe
rcll
repnz
mov
clc
ljmp
rcr
cld
jns
loop
cli
out
cmpb
out
mov
mov
push
mov
lret
push
inc
scas
or
xlat
iret
and
mov
lret
mov
shll
jno
xchg
sbb
int3
pop
lea
inc
mov
sbb
jecxz
clc
or
int
mov
or
out
mov
push
nop
add
adc
pushf
and
mov
pop
dec
dec
mov
cmp
push
std
mov
test
mov
incl
adc
pop
push
bound
inc
fsub
add
mov
mov
sbb
xchg
adc
cmpsl
jns
dec
call
addl
xchg
push
in
pop
frstor
movsb
adc
jnp
sbb
ds
mov
xchg
rcll
insl
inc
int3
cmp
jbe
stc
sbbl
fcmove
fimull
scas
aam
mov
xchg
jg
sub
sahf
jge
push
xor
push
cmp
xor
rol
push
mov
inc
xor
scas
push
sarb
in
pushf
outsb
sbb
mov
inc
mov
stc
jnp
scas
jg
into
or
sub
sarb
nop
xor
out
pop
shrb
xchg
mov
insl
and
call
pusha
push
mov
flds
adc
mov
push
or
loopne
mov
xor
ljmp
leave
xchg
lret
mov
testb
jmp
mov
push
imul
bound
cmc
int3
and
clc
jae
ljmp
lret
aas
loopne
jle
pop
mov
mov
cmp
aaa
fcmovne
or
jmp
into
hlt
insl
rclb
xorl
inc
inc
adc
lods
xchg
aam
push
ja
outsl
mov
push
into
add
push
xor
xchg
xchg
dec
dec
lods
pop
mov
add
stos
add
xor
cmp
shr
mov
ja
mov
jnp
inc
mov
mov
cmpsb
mov
lods
sub
xor
cmp
adc
test
jmp
movsl
pop
push
mov
bound
pop
out
ds
popa
outsb
stos
and
jg
leave
jno
in
adc
sub
xchg
lods
dec
cwtl
pop
addr16
push
fisttpl
or
jmp
cmp
dec
push
or
test
sbb
mov
movl
enter
sbb
jae
jg
inc
jp
bound
or
adc
jno
push
pushf
sub
cltd
aam
addb
in
ret
push
xor
jae
cli
imull
in
xor
adc
lock
dec
jge
mov
lahf
xor
xchg
sbb
testl
push
insl
fidivrs
pop
enter
push
int3
lcall
bound
push
fucomp
test
gs
in
dec
pop
out
outsb
xchg
daa
mov
cmp
jmp
testl
jl
mov
loope
jecxz
bound
and
adc
outsl
les
push
call
or
mov
mov
push
mov
cmpb
in
iret
mov
jg
sbb
sub
icebp
arpl
mov
sbb
ss
enter
sbb
not
dec
mov
and
and
sahf
pusha
sbb
test
fstp
js
sub
add
xchg
xchg
js
lods
mov
cld
sub
sub
adc
pop
cltd
pusha
xor
ret
push
dec
pop
movsl
xor
mov
mov
pusha
dec
orl
pop
push
mov
mov
arpl
push
xchg
xchg
inc
push
mov
ds
dec
and
xor
xor
out
mov
stc
es
xor
mov
lods
rorb
jle
and
jno
je
sbb
dec
dec
sbb
sub
imul
or
inc
jle
popf
pop
xlat
negl
in
jle
inc
dec
outsl
mov
in
pop
mov
dec
cltd
or
jae
sbb
jmp
cmc
in
jne
sbb
mov
add
dec
test
jae
iret
aad
adcl
cmp
test
add
fnop
outsb
mov
mov
jb
mov
test
mov
popf
push
push
stos
mov
loopne
imul
imulb
icebp
repnz
aam
shll
iret
inc
pop
out
pop
out
push
shrb
push
xchg
pushf
loopne
xchg
mov
lret
mov
pop
push
lds
jle
roll
jne
mov
mov
mov
sub
mov
popa
gs
xchg
xor
scas
sbb
and
push
das
mov
lea
xor
adc
in
outsl
in
pop
call
sbb
xor
push
daa
adc
lock
xchg
sbb
popa
clc
data16
dec
push
jb
sbb
pop
jnp
push
and
ficoml
mov
test
xor
pop
lret
fwait
gs
fsubs
lds
sarl
dec
pushl
push
movsb
loop
in
lahf
add
push
add
mov
aaa
add
lds
pavgw
mov
lea
daa
cmc
jns
iret
inc
sbb
cmp
call
mov
pop
inc
aad
and
ret
icebp
add
sub
and
xor
hlt
push
xor
mov
cld
mov
dec
das
mov
inc
fdivr
add
ja
cmp
test
testl
jmp
pop
fwait
push
test
in
scas
xor
push
jo
into
mov
and
hlt
jg
sbb
fists
xor
xchg
test
adc
test
imul
lret
test
bound
call
sahf
adcb
mov
mov
sub
pusha
and
gs
dec
or
ljmp
jecxz
inc
shufps
gs
int
shr
lock
movb
jle,pt
mov
in
pop
adc
lret
mov
loop
nop
mov
pop
adc
mov
int3
jle
push
je
lret
xchg
cmc
jl
adc
sbb
push
push
add
jecxz
sbb
add
insl
push
push
aad
push
jp
outsl
ret
push
stc
shr
mov
or
xchg
push
jmp
sbb
hlt
pop
stos
xor
mov
stc
cmp
insb
add
push
popa
movd
loop
xchg
mov
pop
js
outsb
sbb
mov
outsl
cld
pop
xchg
sub
add
stos
int3
xchg
popa
adc
jae
movsl
xor
enter
mov
rcll
xor
rcll
push
fmull
inc
adcb
fucomip
pop
je
shll
xchg
nop
push
fnstenv
xor
mov
iret
aas
dec
stos
mov
out
sub
dec
repz
mov
in
enter
sub
dec
stos
push
shr
xor
rcrl
xchg
enter
out
dec
pop
aas
cmp
fbld
int
inc
cmp
sbbb
pop
sbb
lret
in
push
or
inc
and
cmp
iret
imul
cmc
or
sbb
adc
pushf
mov
pop
xchg
cmp
mov
push
mov
mov
inc
push
and
ret
dec
cmp
xchg
xchg
mov
cmp
inc
clc
repz
sbb
add
pushf
lods
ja
loopne
insl
or
mov
lcall
shlb
aam
and
add
fwait
mov
pushf
push
cltd
insb
cld
add
movsb
clc
imul
adc
adc
inc
jg
push
mov
mov
ja
mov
arpl
je
leave
pop
dec
imul
ds
loopne
cmp
in
and
push
ret
fbstp
data16
adc
es
pop
lods
lods
xor
sbb
pushl
xchg
sbb
out
dec
in
lods
cmc
mov
mov
xor
test
in
loopne
xorb
sbb
pop
inc
jmp
push
repnz
imul
je
shrd
repz
clc
mov
inc
insl
out
mov
outsb
lods
add
add
xchg
js
scas
and
inc
push
movsl
pop
push
sbb
adc
xlat
jbe
lds
imul
sub
in
xchg
fdivs
subl
mov
dec
ret
popl
jmp
mov
adcb
sub
repz
addr16
cmpsb
fwait
repnz
xlat
lock
jns
into
pop
sub
sub
or
lds
inc
mov
add
cmp
sbb
jmp
push
xchg
xchg
push
int3
je
xlat
pop
aam
enter
or
outsb
imul
cld
pop
mov
or
push
popa
cmp
addr16
sbb
lea
pop
jmp
xor
test
sahf
mov
and
xor
dec
shll
filds
movsb
push
push
out
fucomi
int
dec
ret
cmp
push
pop
push
rorb
out
bound
lret
psllq
dec
push
in
add
sub
mov
mov
mov
cmp
insb
nop
inc
or
out
mov
pop
mov
push
jno
jecxz
mov
loop
xchg
push
push
pop
loopne
clc
aaa
lods
sub
test
xor
call
test
push
je
ficomps
push
jp
mov
jnp
mov
ljmp
ja
lods
xchg
and
jmp
jp
adc
mov
fs
xlat
fsts
rorb
pop
pop
inc
fwait
dec
outsb
in
adc
stos
sbb
and
inc
or
xor
mov
hlt
stos
and
arpl
test
xor
test
scas
roll
mov
mov
add
fisttpll
fcmovbe
jg
out
ret
cmp
dec
test
std
jecxz
outsb
imul
adc
push
rorb
add
lods
dec
jb
ss
or
mov
push
hlt
ss
jo
test
push
push
dec
stos
push
hlt
pop
orb
gs
jno
popf
push
pop
icebp
sub
test
inc
imul
xchg
push
cmp
mov
push
xchg
pop
lea
inc
ret
in
outsb
faddl
mov
pop
pop
mov
shl
xchg
loopne
sbb
xor
or
xchg
rclb
xor
mov
ret
pop
mov
push
aad
jge
mov
inc
lock
sub
push
cli
xchg
mov
jmp
arpl
ret
hlt
dec
out
inc
je
xchg
int3
ret
inc
cmp
sbb
mov
sbb
fs
std
mov
in
stc
scas
jb
or
dec
inc
pop
or
cld
cld
mov
push
mov
xlat
aas
push
adc
mov
enter
sub
shll
dec
xor
xchg
testl
sbb
sti
outsl
adc
xchg
pop
sbb
pop
sbb
push
pop
test
sub
arpl
aam
imul
mov
cs
arpl
cmp
sti
aam
js
subl
rcll
xchg
je
inc
push
mov
adc
negl
in
cli
in
push
iret
mov
je
and
mov
add
mov
jns
fimull
mov
cmpsb
xor
ds
popa
lods
jmp
push
int3
ljmp
ljmp
das
imul
aas
shll
jo
fwait
scas
pop
mov
fs
push
ja
dec
cltd
inc
mov
fbstp
jb
mov
roll
mov
ds
jge
jge
jg
inc
nop
lret
add
out
aas
lods
mov
pop
cmp
adc
push
pop
es
in
dec
and
jl
daa
cwtl
mov
pop
add
mov
fs
add
cmpb
add
and
xor
lods
cmp
push
mov
xchg
mov
outsb
pop
sbb
or
jbe
filds
xor
add
cmp
add
adcb
adc
test
popa
xor
popf
jbe
dec
push
aas
aas
push
inc
notb
fimuls
mov
push
sahf
jle
pushf
mov
popf
mov
xchg
shlb
mov
cmpsb
or
sub
and
xchg
fs
jbe
cs
jp
jl
loope
pop
xchg
cmp
mov
jmp
cmp
mov
jae
jmp
call
cmp
mov
jmp
and
cld
rolb
loope
push
lock
inc
dec
cmpsb
ja
mov
mov
xorb
pop
sbb
add
mov
stc
sbb
daa
pop
leave
xor
shlb
sub
into
xor
nop
sbbl
add
mov
mov
lock
cmp
aam
dec
push
sub
es
das
pop
mov
clc
loopne
xchg
sbb
jmp
sbb
cltd
test
pop
pop
pop
imul
sbb
ja
addr16
xchg
flds
mov
cltd
test
pop
pop
pop
imul
sbb
ja
addr16
xchg
fiaddl
mov
popf
test
pop
pop
pop
pusha
aaa
jge
or
inc
sub
xchg
cmc
xchg
shll
test
pop
cmpsb
lods
ret
aaa
jns
jle
xchg
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
leave
cltd
pop
movsl
loopne
out
fdivrl
movsl
pushf
repz
add
add
add
add
add
add
add
outsl
add
roll
cmp
add
dec
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
push
add
add
push
add
testb
add
add
xor
rolb
add
mov
test
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
push
add
add
pop
inc
add
add
add
add
add
arpl
mov
add
push
add
add
mov
add
add
add
inc
add
add
add
push
add
add
add
add
xchg
add
add
add
add
add
and
xor
xchg
add
add
and
push
add
push
add
add
roll
add
add
push
add
add
aas
add
add
add
add
add
incl
ja
and
pop
add
add
add
jo
jp
inc
add
ja
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
stc
add
add
add
add
add
add
add
lcall
add
or
add
inc
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
roll
xchg
adc
inc
add
add
add
outsl
add
add
mov
add
add
add
adc
pop
add
dec
add
add
add
lcall
add
add
add
push
add
add
push
add
jg
push
add
add
add
or
sub
xchg
add
mov
and
push
add
add
add
add
icebp
add
add
pop
add
insl
add
flds
and
mov
add
add
pop
add
sbb
bound
test
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
sbb
xchg
add
add
add
or
push
xlat
add
add
add
add
test
mov
inc
add
add
add
add
add
pop
add
add
add
add
add
fiaddl
aaa
add
add
add
pop
add
add
add
add
jecxz
mov
adc
add
add
add
add
xchg
add
add
add
pop
add
inc
add
add
jge
loope
adc
xchg
add
add
add
xchg
add
test
inc
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
lods
add
sub
jo
add
pushf
adc
in
fsubs
sbb
fdiv
inc
leave
fcomip
add
xor
inc
push
outsb
adc
ja
fistpll
arpl
xchg
pop
jbe
mov
das
dec
mov
lea
popa
daa
lret
add
stos
aaa
inc
dec
sahf
icebp
mov
sbb
cmp
out
mov
es
cmp
jnp
xchg
xlat
fs
inc
or
in
inc
movsb
daa
nop
mov
inc
and
and
test
addr16
cmpsb
push
mov
dec
and
mov
sub
cmpsb
mov
cltd
jge
test
add
icebp
pop
imul
repz
scas
jle
std
xchg
imul
lods
cli
loope
push
sbb
push
mov
lcall
je
push
dec
pop
adc
fnstcw
repnz
mov
popa
jge,pn
pop
mov
lahf
test
fildl
xor
inc
shlb
sbbl
pop
jl
loop
scas
lahf
dec
jg
fildl
mov
shrb
in
jo
jmp
xchg
cli
sbb
lcall
popa
shr
mov
push
mov
fcoms
insl
pop
add
mov
cltd
enter
clc
in
comiss
dec
scas
mov
mov
inc
jecxz
inc
stos
imul
ret
stos
xlat
scas
push
and
icebp
ds
push
fisubl
xchg
lcall
sub
jo
inc
repnz
arpl
cmp
stc
xor
test
testl
and
push
fnsetpm(287
cmpsb
pop
daa
les
push
jg
or
dec
hlt
lods
ljmp
jp
cli
pop
dec
cli
cmp
ljmp
mov
popf
xor
xchg
jno
das
outsb
xchg
scas
xchg
adc
adc
adc
scas
mov
test
pop
scas
push
aas
or
inc
in
js
rcrb
jp
rorb
cld
jecxz
jp
jl
mov
xchg
xchg
out
inc
and
cld
outsl
loope
sub
adc
out
pop
inc
push
out
pop
dec
jno
outsb
je
mov
mov
outsl
test
orb
ljmp
arpl
jge
outsl
daa
pop
leave
xchg
pop
add
into
ss
test
mov
cld
sbb
shlb
mov
scas
xor
sub
ja
dec
or
jmp
and
mov
xchg
xor
jo
sub
jb
pop
xor
adc
dec
sub
add
dec
pop
imulb
in
sbb
push
sbb
dec
inc
psadbw
into
aas
inc
mov
sub
jl
xor
dec
or
push
or
leave
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
