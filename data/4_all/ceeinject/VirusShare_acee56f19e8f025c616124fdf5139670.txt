call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jns
imul
insb
movsb
add
cli
or
pop
fnstcw
leave
cmp
jnp
jnp
mov
pop
stos
dec
mov
sbb
or
stc
or
sbb
or
cmp
imul
pop
mov
mov
sbb
or
stc
call
lods
cmp
cmp
or
pop
fbld
xor
and
add
jne
cmp
add
shrl
into
insl
xor
and
xchg
into
and
and
in
loope
inc
mov
cmp
cmp
into
test
xchg
xor
add
insb
popf
sti
fcmovnbe
lahf
push
pop
inc
mov
fcmovne
xchg
dec
mov
sbb
dec
fwait
lcall
sbb
or
pop
fs
lret
ss
jmp
loope
adc
mov
jp
push
mov
jmp
daa
in
cmp
xchg
sbb
cmp
and
imul
arpl
mov
jbe
or
pop
sbb
cs
xchg
mov
mov
pop
mov
sub
sbb
or
stc
adc
add
xor
and
imul
pop
stos
pop
popf
inc
mov
xchg
arpl
es
push
psllq
mov
pop
dec
xchg
mov
jp
pop
leave
js
cmp
xor
pop
jecxz
push
lret
pop
lret
jl
sub
sbb
or
stc
or
sbb
sub
cmp
imul
pop
stos
dec
mov
sbb
or
stc
or
sbb
sub
cmp
imul
les
fstpt
dec
popf
cmp
mov
cwtl
jb
inc
cmp
add
pop
add
cmp
sbb
xchg
stos
push
xor
mov
ret
push
inc
sahf
stc
dec
test
pop
cmc
pop
lcall
mov
imul
mov
push
mov
xor
cmpsl
mov
cmp
cli
xchg
mov
hlt
mov
loope
test
mov
fwait
insb
sarb
jbe
push
lcall
mov
xor
mov
out
scas
enter
cmp
jmp
jb,pt
sarl
js
mov
pop
pop
pop
lock
in
andb
mov
rcrb
cmpb
out
call
out
imul
das
popf
inc
mov
scas
rcll
fistpl
scas
push
test
ja
mov
mov
add
loop
movsb
jnp
push
mov
push
int3
jl
fidivs
stos
inc
les
mov
pop
fcoms
shrb
xor
jp
lahf
mov
cmp
jge
loop
cltd
push
repnz
dec
cmp
ret
sub
mov
imul
scas
xor
push
ja
enter
dec
jecxz
mov
adc
inc
sub
push
push
test
das
adc
aam
dec
jl
lahf
xchg
iret
stc
mov
icebp
and
push
cmp
scas
shr
ljmp
sbb
es
sub
push
cmp
lret
mov
int3
sahf
pop
stos
jge
movb
mov
roll
stos
fstpt
call
ret
mov
loopne
pop
daa
pop
sbb
jge
daa
cmp
dec
pop
sub
sbbl
inc
jbe
aaa
dec
jo
xchg
mov
imul
scas
mov
cmp
and
push
inc
push
insl
pusha
aas
and
adc
cmp
sub
das
adc
addr16
cmp
pop
add
mov
xchg
into
mov
sbb
xor
mov
mov
enter
sarl
sbb
div
clc
mov
lea
or
imul
lds
aaa
add
xchg
rorl
or
sbb
imul
push
jb
mov
xchg
add
pop
clc
aad
dec
cmp
ja
rcll
test
in
in
sub
subl
xor
fisubl
fsubs
dec
jbe
or
sbb
fdiv
fstps
cmpl
lahf
cmp
push
jns
lcall
xor
inc
sbb
pop
mov
out
test
test
or
stos
xchg
and
loope
dec
cmpsl
inc
push
aaa
cwtl
inc
scas
fstpl
ljmp
sbb
xchg
cmp
pop
adc
adc
pop
fstpl
mov
out
lahf
fwait
test
das
mov
ror
mov
jp
push
sbb
mov
jmp
outsl
out
icebp
rcrl
popf
inc
mov
mov
mov
push
inc
pop
inc
push
add
dec
pop
call
add
push
cmp
jb
pop
push
aas
mov
push
out
subl
mov
dec
adc
int
cmp
popa
rorb
lock
jl
outsb
pop
orl
sti
cmpsl
adc
lods
test
push
push
dec
inc
cmp
or
mov
add
xor
dec
dec
mul
push
aas
cs
sti
sbb
sti
xchg
jo
int3
aas
adc
inc
test
inc
xchg
xchg
js
js
loope
pop
rcrb
pop
pushf
bound
cmp
sbb
adc
bound
mov
ret
cli
loopne
aaa
xchg
xor
mov
mov
pop
inc
dec
test
jno
movsb
sahf
inc
into
sbb
clc
mov
jl
fnstenv
xor
sub
test
xor
pop
push
xchg
ret
hlt
lds
mov
mov
stos
pop
inc
ret
or
push
sar
jmp
clc
frstor
out
mov
xchg
pop
dec
or
enter
ret
pop
cltd
xor
lret
inc
adc
mov
lret
sub
or
outsb
fstpt
lea
push
mov
push
add
dec
and
testb
aaa
jno
jae
ss
adc
dec
ficompl
movsb
inc
xchg
lods
xor
loop
hlt
and
inc
ljmp
jo
pop
loop
dec
dec
jne
inc
dec
sti
fucom
jne
movsb
repz
mov
lret
xchg
cmp
adc
paddsw
dec
sub
mov
xchg
aaa
mov
xor
and
adc
int3
dec
std
or
mov
cld
mov
dec
or
cmp
jne
xor
daa
rclb
stc
fdiv
push
jecxz
mov
xor
cmc
cwtl
xor
stos
hlt
cmpsl
int3
adc
inc
cld
fldt
stc
or
loopne
inc
stc
inc
imul
adc
mov
test
push
mov
pop
adc
fcmovnu
pop
xchg
mov
sbb
jg
xchg
roll
dec
test
dec
paddd
test
push
add
mov
mov
inc
xchg
lahf
arpl
aad
dec
fildl
lods
pop
lret
out
loop
jle
sub
sub
cld
aaa
and
dec
ss
ljmp
mov
inc
pop
outsb
hlt
push
rcrl
xchg
push
pop
mov
pop
push
and
imul
fldcw
dec
jle
jecxz
inc
aas
mov
cmc
mov
xchg
xor
xlat
cmpsb
inc
je
jg
jg
scas
jae
mov
in
adc
and
clc
sbb
les
pop
scas
mov
fisttps
pop
mov
shl
mov
mov
inc
mov
xchg
cmpsb
lahf
popa
xorl
mov
jbe
das
and
or
stc
gs
mov
xor
pop
inc
insl
dec
and
sahf
xor
jge
loopne
popf
pop
xor
xor
pusha
notl
xchg
and
add
mov
out
jmp
in
test
mov
adc
xor
xor
scas
neg
xlat
dec
mov
icebp
in
ficompl
mov
std
sub
shll
jns
jmp
mov
mov
fcoml
daa
movsb
xor
aas
push
stos
pop
enter
inc
sbbb
in
sub
push
jmp
adc
mov
bnd
xchg
dec
mov
cmp
fcoml
xchg
mov
xor
dec
sbb
out
aas
mov
fwait
and
orb
xor
outsb
sahf
jmp
call
loopne
cmp
shll
repz
iret
pop
push
or
cmp
sbb
pop
pusha
jg
mov
mov
jb
add
xor
cmp
sub
and
mov
sbb
xchg
outsl
cmpl
push
or
addr16
insl
mov
jns
xor
pop
cmp
bound
adc
sbb
mov
jnp
daa
or
iret
andb
inc
xor
mov
cwtl
pop
add
mov
inc
mov
push
mov
das
adc
mov
daa
sbb
xor
sbbb
mov
cmpsl
lds
ficoml
int
stc
ret
int
push
mov
aam
insb
shlb
mov
jle
les
or
mov
mov
mov
xor
jnp
stos
mov
clc
lahf
or
dec
mov
fidivrs
and
jnp
repz
popf
test
daa
jnp
push
js
dec
dec
lods
mov
cwtl
cmp
pop
pop
dec
movl
xchg
ret
dec
jne
sahf
and
lret
shlb
push
or
fcomps
dec
xchg
adcl
ss
add
inc
mov
jge
lods
push
fistl
jmp
or
dec
imul
pop
jmp
inc
adc
cs
jg
ds
or
add
std
repz
dec
adc
js
xchg
mov
mov
mov
ret
jmp
fimuls
out
mov
add
mov
shll
cmp
ljmp
cmp
xchg
in
addr16
sub
cpuid
mov
les
test
cmp
imul
rdmsr
adc
shrb
xor
lods
mov
sahf
jmp
iret
sub
rorl
mov
sbb
mov
xchg
push
leave
jmp
jecxz
ret
fmuls
adc
mov
mov
xchg
xor
scas
xchg
xor
ret
sbb
cld
adc
mov
jl
dec
dec
push
clc
inc
adc
dec
in
es
pop
jecxz
cmpsb
or
fdivs
cmp
vsqrtps
push
mov
test
dec
scas
mov
jecxz
das
push
insb
call
mov
mov
adc
dec
push
mov
js
pop
push
test
adc
xor
ljmp
or
add
rcll
xor
jmp
add
sub
mov
push
dec
mov
out
outsl
jecxz
or
subb
xchg
loop
mov
push
adc
mov
inc
test
repz
adc
push
cli
gs
popf
ficompl
sbb
es
push
jecxz
stos
daa
dec
mov
idivl
add
ret
out
mov
into
mov
mov
mov
in
aas
stos
cmp
repnz
hlt
decl
add
mov
std
cmpsl
and
sbb
xor
popl
and
and
mov
movsb
sbb
sahf
inc
push
in
sub
mov
ds
cmp
xchg
push
jo
icebp
loopne
das
push
cli
ret
mov
shlb
rcll
xor
adc
jne
add
je
in
add
std
add
cld
out
cmpsb
fidivs
and
add
sub
enter
push
xchg
or
sbb
push
lods
out
fdivr
pushf
jae
pop
imul
add
pop
sbb
fbld
jnp
cmp
jge
mov
les
dec
aaa
mov
in
mov
push
mov
sbb
add
int3
jmp
jl
xchg
cmp
stc
dec
adc
dec
jbe
sub
ljmp
jecxz
mov
hlt
mov
add
test
add
in
mov
cli
inc
call
inc
iret
int
lods
mov
pusha
xor
jmp
xor
test
sbb
xchg
xor
das
in
push
out
mov
mov
aas
and
mov
cltd
inc
sub
xor
and
stos
xchg
sub
xor
or
cli
loope
aam
arpl
mov
push
fiaddl
fstl
je
loopne
movsb
jo
mov
push
push
mov
lahf
stc
pop
int
dec
add
and
jno
loop
sarb
sti
out
js
jne
pop
stc
aad
out
inc
cmp
or
pop
clc
or
mov
push
fbstp
lea
orb
cmp
bound
jno
sub
xor
cmp
pop
inc
das
outsb
adc
pop
insb
lock
gs
inc
loop
rsm
es
push
sbb
dec
push
or
mov
das
pop
mov
xchg
inc
mov
ret
push
out
cwtl
sbb
lret
cmc
and
cmpsb
xor
push
or
jg
adc
dec
aad
call
or
adc
xor
mov
dec
ja
mov
push
dec
inc
je
aad
lods
outsl
pop
mov
sbb
jge
in
adc
adc
adc
lods
repnz
dec
mov
testl
fisubrl
pop
enter
fcomps
pop
loop
xchg
dec
cmp
mov
and
inc
mov
int
mov
cmpsb
insb
inc
or
out
push
cli
out
xor
jle
in
gs
fwait
out
inc
sub
jae
jl
sbb
cmp
lods
and
adc
imull
cmp
xchg
imul
pop
add
or
dec
push
sub
sub
pop
sbb
outsl
mov
mov
cmpsl
pop
sarb
pushf
pop
sti
fxch
jae
stc
mov
loope
jno
jmp
repz
cmpsl
add
in
rorb
inc
mov
inc
rcrl
mov
jg
testb
shl
pop
add
mov
mov
mov
hlt
fadds
push
insb
inc
mov
or
rcrl
cmp
test
test
ret
outsb
jo
lods
in
push
out
dec
imul
cmpsl
sti
pop
aam
mov
adcb
mov
or
icebp
sbb
stos
pop
imul
fistpl
mov
rorb
ljmp
int
lret
test
in
sub
repnz
xlat
mov
push
add
jecxz
mov
popa
xor
pop
pop
fwait
jnp
into
fdivs
in
in
inc
push
mov
mov
pop
fstpl
add
push
jl
daa
sbb
push
lcall
dec
aaa
and
xor
mov
and
lods
jns
inc
in
inc
sub
call
add
js
or
sub
leave
int3
xchg
ds
push
dec
sar
push
sub
or
out
out
push
push
cmpsb
pop
call
stos
aam
test
cmpsl
nop
les
push
pop
aaa
in
jle
daa
mov
push
sahf
xor
xchg
xor
sarl
outsl
add
stc
pushf
mov
lret
pop
movsb
mov
pop
mov
popa
fidivrs
mov
fistps
fdivrp
add
mov
or
fadds
es
nop
jge
xchg
iret
xchg
or
nop
fldl
lods
pminsw
stc
fneni(8087
adc
stc
popa
push
sbb
scas
push
scas
mov
jg
jp
adc
or
adc
pop
xlat
xor
fsubl
cmp
xorb
adc
or
ja
pop
xchg
popf
cmpsb
dec
outsb
aad
sbb
inc
push
pop
xor
loope
and
push
mov
hlt
xchg
mov
add
lahf
out
sbb
or
jo
mov
xlat
add
ss
rol
push
and
aam
inc
push
fnstsw
mov
and
lock
and
out
mov
dec
push
cmp
mov
xor
cs
xchg
push
incb
xchg
inc
jp
sbb
inc
push
inc
cs
inc
popl
iret
pop
ret
cmp
and
in
push
mov
inc
repz
ficompl
mov
ljmp
shlb
ljmp
xchg
out
xchg
or
loopne
mov
rcll
sti
pop
fwait
dec
pushf
movsl
or
bound
gs
negb
imul
outsl
mov
clc
xlat
enter
movsb
cltd
push
mov
addr16
cwtl
iret
xor
xchg
faddl
test
xchg
sub
stos
stos
lea
fiadds
cmp
out
es
popa
in
xchg
mov
fisttps
xorl
fcmovnb
adc
pop
nop
call
fwait
outsl
xchg
sub
cld
clc
push
addr16
jns
adcl
push
lcall
pop
lcall
cmpsb
lahf
pop
std
lods
mov
cmp
or
mov
in
jp
xor
push
sub
movsl
mov
xchg
xchg
jp
inc
mov
fs
cmpsb
xlat
jmp
daa
sub
addr16
pop
adc
popf
js
xchg
push
arpl
imul
aas
sub
stos
or
fisttpl
subl
inc
cmpsl
mov
and
repz
mov
icebp
mov
mov
ret
xchg
lock
dec
hlt
sub
addr16
mov
je
mov
xor
cmpsb
mov
int3
insl
adc
xor
push
xchg
loopne
das
fildl
pop
mov
in
xchg
jg
iret
test
in
mov
adcl
cmp
pop
aad
ljmp
mov
or
push
sub
xchg
inc
leave
add
ja
or
mov
insl
repnz
call
mov
add
and
mov
jae
inc
insb
iret
sahf
xchg
sub
clc
movsl
or
add
adc
mov
xchg
adc
pop
jle
clc
xchg
negl
mov
inc
inc
setg
icebp
add
cmp
jp
aad
sub
push
in
jnp
int
andb
sub
lods
enter
xchg
jo
int
gs
out
dec
sub
xor
pop
arpl
testl
sbbb
mov
dec
imul
push
loope
movsb
or
movsl
outsb
std
dec
cmpsb
es
xor
inc
xchg
cmp
mov
jp
out
mov
or
shrb
push
adc
jne
scas
mov
push
inc
orl
jp
and
inc
or
inc
lahf
and
out
adc
bound
add
mov
jno
outsb
xor
adc
idivb
xchg
pop
add
or
inc
std
xchg
jmp
mov
sbb
testb
test
arpl
lret
addr16
cmpsl
jbe
or
lahf
jbe
sub
es
lcall
loop
and
outsl
cmc
mov
push
mov
ljmp
push
lods
arpl
cmpsb
and
sbb
movsl
into
adc
xor
mov
rclb
dec
xor
cmp
bound
xchg
out
sbbb
xlat
inc
mov
les
mov
sbb
and
gs
inc
pop
pop
or
add
daa
and
out
insb
or
and
sub
pop
je
cmp
sub
xchg
mov
cmp
in
insb
idiv
sub
std
mov
insb
cmpl
dec
dec
fildll
scas
cmp
outsb
out
adc
data16
sbb
mov
push
lods
scas
imulb
imul
movb
push
ds
bnd
xor
xor
or
xchg
xlat
mov
mov
notl
in
icebp
enter
push
jecxz
sbb
and
pushf
outsl
xchg
in
xchg
and
adc
ss
repz
lcall
fcmovnbe
mov
shr
call
push
mov
arpl
fisttpll
add
dec
mov
push
cmpsl
es
les
wrmsr
add
inc
mov
adc
sbb
clc
pop
and
rcll
and
jg
cmp
pop
int
arpl
into
sub
add
adc
lds
fucom
es
cmpb
aam
xchg
adc
cltd
in
test
outsl
inc
xorl
adc
or
sbb
testl
loope
pop
push
icebp
in
mov
out
lret
in
add
or
jle
cmp
lahf
push
in
mov
jnp
nop
das
sarl
icebp
push
in
and
in
test
mov
adc
pop
push
cmc
cmp
insl
decl
mov
xor
push
ret
movsl
mov
pop
mov
stos
pop
adc
inc
leave
ret
lcall
inc
into
sub
popa
icebp
mov
inc
mov
dec
sbb
inc
adc
sarl
aaa
jbe
fsubrl
push
repnz
ror
and
jmp
cltd
mov
jle
daa
push
aam
sub
push
sub
into
test
in
pusha
push
lret
jecxz
imull
pop
insb
xchg
ss
and
xchg
xor
adc
push
adc
std
xchg
pop
jmp
xor
xor
sbb
pop
test
subps
jl
mov
push
fwait
repz
xor
ret
mov
xchg
andb
sub
xchg
lea
inc
jns
mov
inc
dec
ljmp
add
shll
outsl
xchg
lods
sub
test
mov
loopne
mov
ret
jecxz
lret
adc
xchg
ljmp
xchg
loop
push
mov
add
dec
rcr
mov
adc
dec
jbe
std
sti
xor
add
mov
pushf
xchg
pop
mov
push
jmp
stos
sbb
cld
push
fcmovne
lds
cmpsl
fimull
out
xor
jne
movups
mov
leave
mov
inc
cltd
push
push
arpl
or
je
push
outsb
in
push
cmpsl
mov
lods
mov
jae
scas
cmp
mov
hlt
add
or
pop
pushf
shlb
in
cmp
mov
lahf
adc
mov
mov
cmp
jno
test
inc
insl
xchg
sbb
fucomp
push
out
sub
xchg
rolb
inc
sub
pop
mov
in
add
orl
adc
add
mov
mov
cmp
sub
mov
aaa
or
mov
filds
dec
out
stc
fwait
inc
dec
mov
sbb
or
stc
or
sbb
sub
cmp
imul
pop
stos
dec
mov
sbb
or
stc
or
sbb
sub
cmp
imul
pop
stos
dec
mov
sbb
or
clc
or
sbb
sub
cmp
push
jnp
mov
pop
stos
dec
mov
cltd
jmp
sti
push
or
mov
sub
dec
into
ret
and
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jmp
clc
out
fdivr
test
lret
shll
dec
outsl
pop
jg
push
cmp
or
or
mov
clc
fbld
mov
fisubrl
js
sub
jg
push
pop
or
sbb
push
iret
or
pop
out
add
mov
fcomps
or
pop
jl
or
inc
pop
dec
inc
dec
xchg
mov
lods
xor
mov
das
int3
dec
mov
insl
xchg
push
rcrb
add
add
dec
test
xchg
adc
mov
xlat
pop
fs
or
mov
cmp
stc
push
xorb
dec
js
pop
imul
shlb
lret
xor
push
mov
pop
imul
cmp
or
aas
pop
pmaddwd
call
add
jo
adc
dec
nop
sbb
inc
adc
pop
xchg
gs
leave
push
notl
push
adc
and
jl
rcrl
andb
sbb
mov
scas
out
fdivr
dec
pop
lahf
mov
loop
outsl
push
pop
cmp
sbb
iret
mov
enter
lret
push
cmp
cvtps2pd
pop
popa
pop
jge
movsl
mov
mov
fidivrl
int
cvtpi2ps
sub
push
push
mov
pop
imul
xchg
mov
cwtl
mov
dec
outsl
pop
jg
or
sbb
call
out
fdivr
test
mov
mov
dec
outsl
pop
jg
or
sbb
call
sbbb
addr16
sbb
clc
cmp
pop
mov
sbb
fdivl
mov
cmp
nop
imulb
inc
gs
adcb
lds
push
pop
std
je
fyl2x
inc
cli
je
inc
add
dec
sub
dec
cmp
sub
fistps
adc
shrb
push
ret
push
imul
cmp
cmp
shll
bound
fwait
add
jp
jns
inc
pop
mov
and
ja
mov
sbb
adc
in
addl
pop
lcall
push
fisttpl
lods
cs
xchg
aam
vmovups
and
push
xchg
dec
pop
xor
inc
shlb
sbb
imul
in
ret
popf
jnp
jg
es
mov
hlt
shrl
add
mov
jne
adc
orl
lods
repz
push
xchg
shl
lret
fwait
rcrb
outsl
subl
jmp
push
ja
xorl
adc
pop
push
lea
mov
aas
sub
adc
popa
jge
imul
ficoml
mov
jae
and
cmpsl
mov
lahf
lods
ret
dec
xchg
loop
int
out
cltd
xchg
add
fimull
fwait
jle
cs
or
cmp
and
icebp
adc
imul
jge
mov
popa
adc
or
bswap
call
add
gs
repz
inc
lds
mov
stos
or
xor
pop
jae
lcall
nop
dec
pop
lea
xchg
jge
cmp
test
cwtl
daa
cmpxchg
push
cmp
cmp
shl
xchg
cmp
sbb
inc
test
jecxz
inc
pop
adc
shlb
inc
cli
call
push
lcall
sub
mov
push
std
xchg
push
cwtl
dec
outsl
jle
inc
movsl
pop
lds
aad
sbb
cmp
sbb
outsl
and
fadds
arpl
sbb
mov
repnz
mov
je
fsubl
dec
movsl
das
add
ds
cli
push
dec
sbb
pushf
test
pop
imul
push
lds
ja
cld
mov
sbb
cwtl
ficoml
xor
xor
test
jo
jae
out
arpl
sub
and
sub
or
sub
jp
test
push
push
add
in
jns
or
adc
add
incb
xor
test
lahf
adc
cmp
adc
xchg
xchg
jp
xor
arpl
xor
cmp
push
inc
js
repz
mov
mov
cmp
stos
adc
mov
push
sbb
pop
imul
xor
xor
in
ds
shlb
outsl
cwtl
sarb
pop
jno
jns
fcmovnb
rclb
and
out
push
push
and
scas
out
repnz
out
test
push
jo
dec
mov
jbe
nop
or
xor
add
xchg
lock
scas
es
jg
cs
xor
push
mov
in
pop
inc
cmc
pop
jns
and
lcall
cwtl
mov
xor
iret
xchg
adc
test
pop
sub
cmp
mov
ds
into
sbb
jbe
iret
xor
cwtl
lahf
mov
sbb
jecxz
pusha
sub
mov
inc
rcrb
mov
add
pushf
clc
cld
sbb
sbb
clc
adc
xchg
addr16
in
xchg
lcall
mov
scas
push
jmp
pop
lods
loopne
xor
rcll
rcr
dec
mov
mov
jg
push
mov
cmpsb
jne
push
call
and
mov
inc
cmpsb
and
out
repnz
sbb
repnz
push
pop
mov
mov
mull
in
dec
fs
ss
dec
or
xlat
clc
mov
xor
jae
pop
sbb
leave
cltd
dec
cs
call
notb
pop
push
es
pop
icebp
sahf
icebp
cmpsb
xchg
pop
jnp
jno
xorb
pop
or
pop
in
pop
data16
mov
out
fnsaves
cli
stos
mov
sub
adc
testb
adc
hlt
mov
mov
mov
pop
lea
out
jg
iret
sti
sbb
adc
sbb
fidivrs
and
iret
enter
push
fdivp
add
in
enter
mov
inc
insl
inc
inc
mov
jmp
and
pusha
test
enter
in
adc
sub
fbstp
divb
fdivs
inc
ret
push
xchg
pop
out
dec
add
inc
add
mov
inc
pop
mov
jnp
cmpsb
hlt
lods
xchg
ljmp
clc
pop
inc
mov
les
adc
sbb
pop
jae
xchg
aad
pop
jle
stos
inc
add
cmp
loop
popf
iret
cld
mov
jb
adc
and
push
jb,pt
mov
xchg
stos
inc
add
mov
mov
sbb
ljmp
aas
cli
or
xor
imul
sbb
mov
into
fcoml
adc
sbb
subb
hlt
stos
arpl
pop
shlb
jg
pushf
inc
add
inc
test
xchg
daa
add
cmc
mov
rorl
dec
stos
shll
add
mov
jp
enter
js
cwtl
lea
mov
push
jno
adc
stos
cmp
jmp
pop
cmc
daa
repz
cmp
enter
rorl
push
sbb
inc
sub
into
decl
mov
sub
test
push
test
mov
stos
sbb
jl
xor
into
push
mov
or
test
and
sbb
lret
cmpsl
shlb
cmp
out
stos
and
sbb
add
sub
pop
jbe
scas
in
pop
lahf
inc
jg
imul
adc
rol
insl
mov
add
mov
fs
mov
aaa
push
inc
enter
mov
out
or
es
inc
arpl
jmp
shrl
mov
movsb
nop
add
in
sub
xchg
pop
ret
cltd
inc
test
imull
movsl
inc
fimuls
mov
and
decb
insb
inc
test
cltd
adc
xor
fdivl
xor
pusha
cmp
loop
jmp
popf
jl
in
mov
ds
cli
mov
sub
pushf
insb
mov
int3
mov
pop
sti
xchg
cwtl
lods
mov
adc
jo
adcl
shrl
cmpsl
vorps
and
jl
jmp
inc
mov
fcomp
sub
cmc
adc
xor
aad
shr
cmpsb
and
add
data16
lds
xlat
roll
sub
addps
insb
divl
pop
sub
xchg
cmp
cmp
inc
adc
jnp
sub
andb
sbbb
inc
daa
push
andl
adc
mov
sub
or
mov
mov
cmp
push
out
or
mov
cli
xchg
lock
gs
fsub
inc
das
sub
mov
dec
jmp
dec
jnp
and
jns
sub
xor
fwait
addb
push
pop
push
mov
lea
mov
das
cwtl
xchg
sub
scas
dec
or
push
mov
cwtl
mov
scas
insb
inc
add
mov
adc
push
jne
imul
cmp
xchg
movb
pop
aad
lret
in
aaa
rorb
sub
ffree
mov
das
enter
pushf
dec
xor
iret
mov
out
cmp
pop
mov
mov
sub
fmuls
fld
dec
cwtl
pop
jg
loopne
arpl
jp
enter
dec
jecxz
in
ror
popf
pop
orl
inc
mov
pushf
loop
mov
rcl
fiaddl
sbb
movsl
or
ss
aas
ds
loopne
roll
sbb
xchg
or
mov
pop
lret
or
out
in
lock
iret
pop
xchg
mov
sti
jns
andb
subb
and
ret
clc
add
gs
outsb
jle
idivl
cwtl
iret
xchg
jno
addl
test
nop
das
leave
je
das
sub
je
and
jecxz
pop
xorl
lcall
hlt
sub
push
jmp
mov
iret
dec
enter
test
cld
inc
lahf
lea
cmp
inc
clc
data16
jmp
addb
push
mov
int3
or
mov
call
lods
push
mov
insb
mov
cmc
add
or
std
cmp
cmpsb
inc
jb
cmp
mov
dec
inc
mov
aaa
sbb
mov
sbb
or
cwtl
loopne
dec
pop
sub
repz
in
push
mov
movsb
outsl
add
mov
mov
mov
inc
popa
xchg
fistl
movsl
pusha
test
mov
lcall
mov
popf
pushf
or
push
jns
imul
push
pop
sbb
dec
test
jne
fists
call
in
mov
xor
cmp
jbe
mov
out
mov
adc
stos
mov
cmpsl
decl
lret
xor
xchg
cmp
xor
pop
inc
shrl
rcl
aad
sub
sbbb
pusha
sti
popf
arpl
jns
cmpsb
test
sbb
bound
pop
push
mov
inc
mov
mov
adc
data16
mov
vcvttss2si
jl
cwtl
enter
das
jno
outsl
jb
ja
icebp
xchg
and
xchg
dec
mov
dec
xchg
sub
pop
sti
jecxz
out
xchg
inc
cs
fdivl
push
stos
and
lock
mov
shl
dec
cmpsl
fmull
leave
adc
movsl
push
out
pop
cmp
dec
aas
xor
das
rep
sahf
aaa
arpl
in
inc
fdivrl
push
jnp
xorl
xchg
sub
jecxz
std
arpl
mov
sub
repnz
jmp
nop
dec
fisubrs
loope
xor
aaa
or
adc
sbb
or
xor
push
addr16
push
repz
lahf
pop
pop
add
mov
imul
inc
inc
mov
push
repz
clc
or
neg
xor
mov
or
inc
cmp
shlb
ds
popl
pop
lret
test
pusha
cli
rclb
iret
je
gs
adcb
ljmp
inc
cmpsl
std
icebp
dec
test
or
pop
sub
inc
mov
or
arpl
and
mov
rorl
clc
mov
dec
repz
jg
add
ret
add
fistps
pusha
push
imul
dec
xor
mov
mov
xchg
iret
pop
pop
arpl
les
and
cmp
aas
pop
test
fiaddl
in
jg
pop
push
jne
xor
mov
or
mov
cmpsl
add
mov
sbb
into
std
out
cmc
shll
inc
xor
aam
pushf
xorb
xor
leave
or
lods
in
test
ljmp
int3
test
push
or
cmp
cmp
add
mov
in
jecxz
adc
inc
setge
out
xlat
xorl
cld
push
or
jno
jae
fisttps
movsb
push
xor
stos
push
mov
xchg
or
xchg
hlt
add
pop
mov
adc
pop
xor
mov
push
jo
lcall
xchg
mov
cwtl
in
jg
push
or
push
push
loopne
mov
cmp
cmp
lahf
movswl
dec
fstps
xor
das
push
add
movsl
dec
adc
cld
sub
shll
flds
out
lds
sahf
lahf
scas
call
jno
xchg
jne
or
test
dec
shll
popa
adc
outsl
scas
rclb
addr16
xchg
scas
cmp
lret
nop
jecxz
push
in
repnz
das
in
mov
xor
push
inc
in
popa
push
leave
xchg
add
jecxz
or
cltd
test
fcompl
cmp
ja
dec
rcrb
movsb
pop
xchg
adc
ja
pushf
mov
fdivrp
outsl
notl
and
mov
push
repz
in
or
in
add
loop
cmp
out
cmp
cmp
mov
mov
pop
adc
es
hlt
mov
push
iret
das
jns
lock
dec
lcall
jns
mov
jp
push
cmp
loopne
fwait
inc
xchg
dec
push
mov
test
and
add
mov
adc
enter
sbbb
sbb
decb
test
pop
inc
ret
cmp
mov
inc
push
dec
das
in
pushf
loope
add
mov
pshufw
enter
jae
insl
sbb
aas
nop
and
loopne
dec
lcall
call
inc
inc
test
out
mov
inc
mov
xchg
pop
je
push
mov
jge
leave
adc
mov
outsb
nop
shll
arpl
add
subps
pop
add
push
lds
xlat
pop
push
idivl
add
add
pusha
dec
xchg
cltd
in
movsl
fcmove
sbb
xor
mov
cmpsb
pop
sahf
dec
andb
jne
lods
rclb
or
dec
pop
dec
mov
int
mov
in
cwtl
add
icebp
jb
sub
cs
sbb
outsb
inc
dec
psrad
jne
fdiv
jge
ljmp
test
shl
xchg
int3
es
jcxz
repz
in
xor
mov
sub
jne
aad
sub
insl
pop
and
pop
repz
mov
lret
mov
xlat
stos
dec
or
xchg
mov
lret
ljmp
sbb
and
cwtl
lock
repnz
shl
imul
cld
xchg
fmull
or
xor
sub
cmp
sub
mov
pushf
roll
dec
sbb
repz
adc
dec
mov
pop
pop
in
xor
pushf
jle
js
out
pop
pop
insl
sub
int3
int
xlat
cwtl
push
fildll
jns
add
and
push
jge
push
add
sub
adc
dec
mov
loop
mov
aam
fimull
pushf
jno
inc
mov
cmp
in
inc
stc
out
fiadds
lcall
sbb
imul
push
jno
mov
cmpsb
aam
sub
fisubs
and
js
dec
lret
mov
inc
mov
and
inc
mov
xor
shrl
inc
or
popf
and
gs
ljmp
dec
rorl
in
sub
pop
decl
cmp
je
push
rorl
xor
xchg
and
jne
dec
mov
test
and
mov
mov
inc
js
push
test
sub
frstor
in
sub
mov
add
xchg
in
pop
pop
xlat
adc
adc
jbe
sbb
sub
inc
cmpsb
lea
imul
in
mov
arpl
mov
ljmp
ds
cltd
xchg
pop
sub
arpl
xchg
mov
push
rcrl
jbe
fdivs
dec
fwait
sub
dec
push
mov
push
inc
cmp
pop
outsb
and
adc
pop
xor
imul
xchg
ljmp
aaa
cltd
lahf
icebp
jbe
sbb
pop
adc
cli
sti
pop
cmp
sarl
lods
jmp
fdivl
inc
cli
ss
pop
pop
ret
lret
subl
loop
icebp
call
xchg
jae
mull
outsl
lret
inc
jno
test
push
mov
push
jmp
push
in
loop
fdivl
int3
xor
in
push
movsl
testb
xchg
gs
mov
aad
or
and
jmp
mov
fnstcw
mov
pusha
imull
test
push
adc
mov
addr16
or
adc
shlb
add
lret
fdivrp
mov
jg
fs
scas
rcr
cmpsb
loope
jnp
imul
jp
rol
or
pop
jge
out
pop
std
and
cmp
ljmp
icebp
cmp
dec
cltd
lret
popa
int
push
sbb
aaa
dec
popa
xor
jns
out
inc
dec
pop
divb
outsl
xchg
adc
dec
and
xlat
mov
js
icebp
push
int
and
lret
xchg
sub
xchg
js
adc
push
sbb
int
pop
mov
das
out
addr16
sub
fldcw
pop
in
sub
pushf
jmp
js
sub
mov
xbegin
fwait
aas
es
mov
jg
stos
sub
movsl
mov
xor
xchg
jne
shlb
sahf
jg
pusha
lret
or
mov
stc
fdivs
or
insb
push
mov
mov
nop
mov
decl
mov
jnp
or
repnz
sti
movsl
sbb
sarb
lret
out
lods
add
scas
cmp
std
cld
loopne
aad
test
imul
jbe
jl
jg
mov
stos
repz
mov
mov
mov
xor
and
or
jnp
shlb
add
leave
add
xor
cmp
mov
pop
add
push
mov
adc
xchg
mov
or
sbb
insb
and
fwait
je
mov
jp
fcom
dec
sub
lcall
jb
mov
ret
fnsave
cmp
cltd
popf
outsl
rclb
mov
push
cmpl
imul
jne
push
in
test
mov
les
fdiv
popa
push
and
sub
jp
decb
dec
shll
inc
testb
jmp
js
arpl
out
out
outsb
stos
fisubs
adc
push
loope
fcoms
inc
push
sarb
test
and
sahf
das
enter
jp
stos
pop
lret
pop
push
jae
mov
mov
jl
or
add
lock
jae
nop
shrl
add
sti
sub
jbe
xor
mov
mov
fwait
jne
add
push
iret
inc
int3
dec
mov
mov
and
xchg
jp
xor
fsts
cli
ret
imul
pop
iret
push
xchg
je
mov
stos
jmp
int
pop
jb
mov
push
fs
in
mov
in
pop
mov
push
dec
xlat
lods
dec
dec
xchg
inc
push
or
jp
pop
hlt
out
sbbb
das
das
scas
shlb
xchg
in
xchg
adc
inc
jmp
dec
lock
cwtl
fwait
xchg
cmc
mov
out
lds
test
scas
pop
hlt
push
adcl
arpl
inc
outsb
pop
or
out
ljmp
dec
and
lds
adc
mov
mov
movsb
in
cmp
xor
mov
xchg
sahf
iret
stos
mov
push
mov
pop
test
mov
push
dec
inc
xchg
mov
cmp
movsb
pop
popf
inc
push
inc
push
mov
xchg
mov
movsl
xor
fstps
push
push
ljmp
gs
bound
int
pop
mov
xchg
out
ja
sub
or
fcmovnu
mov
mov
or
jnp
cmp
ds
test
insb
gs
fstpt
jp
cmp
push
xor
fisubl
mov
mov
mov
pop
mov
pop
fnstsw
lret
lret
inc
fcoms
cmc
mov
jo
pop
adc
sbb
push
jg
push
leave
cmp
insb
add
sbb
mov
mov
add
aaa
lcall
sub
sbb
and
push
stos
sub
addl
sub
addr16
ja
loopne
fs
xchg
inc
test
and
mov
pavgb
inc
outsl
std
imul
sarl
stos
jecxz
mov
mov
xor
pusha
xchg
daa
xor
mov
jns
insl
call
in
sub
outsl
inc
mov
cmc
test
ret
lret
mov
and
mov
fsubrs
ret
dec
push
aas
xor
sti
add
inc
rorl
mov
enter
and
xor
fmull
jnp
jns
jbe
sbb
jecxz
or
fldt
subl
jno
ret
and
scas
or
scas
dec
repz
scas
test
inc
stc
fwait
xor
and
rcrl
popf
cmpsl
popf
dec
or
xor
out
in
daa
popf
out
fcoml
mov
fs
ret
jmp
jae
fsubr
pushf
mov
pop
lret
adc
shrl
pop
mov
sub
notb
js
in
push
int3
addb
cli
jns
es
mov
sbb
inc
sub
push
xor
into
stc
out
stos
xchg
and
mov
jg
imulb
ja
xor
jae
aam
aad
cmc
lods
mov
imul
adc
lahf
arpl
mov
jecxz
mov
add
adc
mov
pop
insl
addr16
loopne
das
push
clc
add
xchg
sbb
lods
cmpsb
lret
lock
jg
stos
int
fisttps
mov
mov
dec
outsl
pop
jg
or
sbb
call
out
fdivr
test
mov
mov
dec
outsl
pop
jg
or
sbb
call
out
fdivr
cmp
pop
mov
mov
movaps
or
lock
cld
iret
movsb
fists
scas
sbb
dec
xchg
loop
pop
or
mov
not
out
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
loopne
add
push
jecxz
xchg
sarl
pusha
cmp
push
push
add
movsl
loopne
lock
rcrb
int
fucom
jge
cmp
push
insl
dec
sbb
dec
inc
pop
adc
cmp
sar
pushf
mov
loope
and
adc
jl
dec
ja
pop
cmp
in
loopne
sahf
leave
mov
test
mov
dec
push
arpl
lret
xchg
adc
inc
insb
dec
mov
lcall
out
pop
shrb
sub
inc
call
add
popf
std
loope
cmc
ficompl
mov
in
ret
int
fstl
rolb
call
ror
push
int3
jnp
outsl
cmp
loop
loopne
jg
pop
call
inc
sbb
pop
push
adc
nop
in
xor
xacquire
push
sahf
jae
xor
and
ljmp
and
aad
lds
or
sbb
iret
or
dec
xchg
sahf
loopne
add
mov
gs
out
mov
push
add
or
add
jle
mov
lock
xor
adc
jmp
jl
pop
xor
cmp
adc
sbb
movsl
xor
cmc
test
pushf
andl
jl
push
jo
jl
popa
sbb
fbstp
fdivl
int
fstl
or
and
dec
add
lods
loopne
lock
rcrb
int
fstl
or
and
dec
add
lods
loopne
daa
and
cmp
fldt
mov
sub
ret
inc
out
and
xchg
out
cmp
mov
aad
pop
sbb
int
cmp
mov
pop
pop
pusha
hlt
popf
inc
push
jmp
inc
pop
or
add
nop
aam
sbbb
test
mov
test
imulb
clc
adc
popf
mov
imul
dec
lock
popl
push
int
xor
push
roll
popa
popa
fildl
dec
movsb
jne
sbbb
adc
rcrb
int
stc
movsl
cmp
mov
sub
mov
sub
popf
mov
mov
movsl
push
or
pop
inc
mov
js
jl
mov
mov
and
dec
pop
aas
add
add
pusha
test
data16
or
stos
push
adc
mov
cmp
outsl
and
inc
clc
push
pop
into
push
jle
lods
inc
push
test
jg
fucomi
ljmp
cmpsl
dec
xor
jbe
pop
xor
or
ja
cld
int3
mov
push
push
or
ret
sahf
mov
dec
or
sbb
inc
out
add
into
jb
xor
clc
lea
popf
xchg
inc
movsl
jo
popf
ja
adc
gs
xchg
idivl
adc
sub
dec
cmp
sbb
jb
popa
scas
arpl
test
test
mov
mov
fmul
mov
fwait
jecxz
inc
into
fdiv
or
xchg
cli
fwait
vunpcklpd
add
imul
mov
int
adc
or
rcrb
and
or
pop
in
jp
pop
lcall
popa
add
jnp
dec
jg
lahf
pop
jp
xchg
or
in
pop
dec
dec
lret
add
arpl
mov
nop
and
cmp
std
out
lock
imul
or
push
ficompl
shl
jbe
pop
lret
mov
xchg
add
sub
addb
adc
push
arpl
enter
sbb
test
xchg
jbe
movb
fdivs
loop
fbld
mov
mov
gs
mov
inc
mov
add
mov
inc
or
push
xor
push
jecxz
sub
or
add
mov
mov
scas
and
and
fstpt
lret
xchg
pushf
adc
mov
mov
repz
push
call
jg
dec
push
scas
fcmovnbe
lds
xchg
mov
jnp
jge
jae
adc
jp
call
mov
int3
leave
and
push
rcrb
test
push
xchg
xor
pop
loope
adc
iret
outsl
cmp
mov
mov
and
fidivrl
pop
pop
pop
scas
pop
mov
lcall
xchg
cltd
fidivrs
outsb
inc
cmp
mov
sbb
jae
lock
fimuls
dec
gs
enter
movsb
cmp
rolb
in
dec
lods
test
outsb
insl
ficoms
xor
mov
pop
push
mov
push
mov
sarl
lret
mov
push
pop
stos
repnz
daa
mov
es
cmpsl
lret
push
adc
movl
ret
stos
movsb
pop
xor
imul
lea
jnp
push
outsb
pop
in
enter
aam
data16
mov
fucomp
mov
outsl
popf
cltd
mov
fpatan
cmp
adc
xchg
loope
jmp
mov
adc
outsb
mov
call
repz
out
xchg
xor
and
or
and
jmp
xor
je
roll
imul
jbe
inc
xchg
stc
insb
shr
jle
repz
adc
idivl
fdiv
add
test
mov
ds
push
cmp
push
leave
xchg
movsb
sarl
hlt
xchg
jle
mov
in
pushf
jle
out
adc
xor
cmpsb
dec
sbb
psubusb
stc
mov
mov
inc
push
jge
icebp
sbb
and
and
mov
testl
mov
cmp
subl
fstpl
xor
nop
or
mov
and
dec
arpl
pop
jge
xor
xchg
icebp
or
scas
or
popf
mov
int3
mov
mov
pop
dec
and
out
pop
test
inc
xorb
inc
xchg
test
cmpl
adc
sbb
addr16
loopne
pop
lods
add
enter
sbb
pop
pop
mov
sub
pop
lods
jns
lret
inc
into
sub
inc
and
sbb
sub
imul
and
mov
inc
pushf
pop
lea
push
mov
fcoml
dec
cmpsb
pop
sbb
and
dec
cld
push
jae
xchg
push
in
fadds
xlat
push
add
loopne
test
gs
or
mov
test
ds
scas
pushf
cwtl
xchg
jne
jmp
push
xor
shlb
aaa
lds
mov
mov
push
ficompl
mov
stos
add
loop
ss
jae
mov
adc
insb
fiaddl
and
es
mov
out
cmpsb
rcll
xchg
xor
xlat
push
movsl
out
xchg
sub
inc
hlt
ljmp
and
repnz
mov
mov
gs
push
gs
mov
adc
or
cmp
and
das
insb
inc
cmpsb
in
incl
outsl
mov
mov
out
push
icebp
movsb
adc
and
dec
pop
adc
mov
pop
adc
aam
lret
lret
cmp
lds
fsubr
out
lods
mov
xor
pop
test
ficoms
loope
pop
add
jp
mov
sbb
jp
mov
ja
fwait
ja
add
mov
sbb
repnz
xor
sub
sub
xchg
adc
movsb
jbe
add
adc
or
enter
push
clc
sub
lea
out
sbb
popa
js
sub
fs
movsl
cmp
push
xchg
cmpsl
pop
popl
fstps
push
cld
mov
shlb
xchg
aad
stc
les
sets
pop
notb
mov
enter
adc
pop
adc
dec
add
mov
push
cmp
sahf
or
xchg
mov
pop
sub
in
out
inc
clc
inc
nop
jg
lods
xchg
jb
xchg
mov
lds
jns
sub
cli
lret
cwtl
dec
and
mov
sub
insb
xchg
fistl
push
pop
clc
xchg
mov
pop
ds
sub
cmp
aam
jmp
aad
or
xor
sub
add
insl
xor
divb
mov
jns
xchg
stc
inc
sbb
and
cmp
jge
mov
ljmp
xchg
fnsave
sbb
lock
mov
dec
cmc
xor
pop
aaa
aas
enter
lds
imul
inc
push
mov
xor
imul
cmp
inc
xchg
movq
cmp
mov
mov
ja
adc
adc
and
mov
mov
out
mov
je
push
roll
scas
cmp
jnp
mov
sbb
movsb
stc
decl
repnz
pusha
sarl
int
mov
imul
pop
and
cltd
das
mov
mov
jbe
in
sbb
cwtl
je
lret
cld
lret
push
insl
add
xchg
dec
xchg
pop
mov
mov
mov
aam
out
stos
mov
mov
cli
mov
gs
enter
push
adc
jmp
or
aaa
adc
xlat
push
cltd
pop
dec
repnz
add
fiadds
rcrl
inc
lea
fisubrs
pop
rcrb
cltd
adcl
fs
push
in
xchg
xchg
mov
pop
addr16
xchg
pushf
dec
out
xchg
icebp
jns
clc
in
push
push
sarb
mov
dec
mov
dec
hlt
stos
sbb
mov
xchg
mov
test
jmp
pop
scas
fidivrs
mov
jbe
inc
lds
mov
mov
loop
imul
mov
jno
and
sub
add
mov
outsb
nop
xor
lock
inc
sbb
nop
adc
iret
push
out
in
xor
ljmp
pop
shrl
adc
dec
daa
adc
jle
ss
pop
mov
sbb
or
push
ljmp
pop
rcll
xchg
loopne
inc
mov
aam
cmp
test
lcall
push
sub
in
scas
mov
subl
mov
loope
sti
fwait
cmp
sub
push
push
dec
ret
xor
test
out
daa
stc
subb
int3
adcl
or
out
push
test
popa
dec
sbb
pop
dec
pop
popa
pop
mov
in
loopne
inc
push
mov
sub
mov
push
mov
pusha
inc
xchg
push
xchg
test
adc
push
adc
mov
ja
out
pop
mov
outsl
pop
ret
pop
or
scas
jno
dec
in
stos
sub
cs
repnz
in
inc
cltd
xchg
jmp
cmpsb
popf
js
pop
mov
pop
arpl
jp
pop
cld
jg
adc
mov
int
push
inc
ds
arpl
jbe
dec
pushf
or
cmp
movsb
jmp
cwtl
mov
pop
sahf
cwtl
sub
mov
dec
mov
in
inc
pop
das
dec
leave
ret
push
mov
cmc
scas
dec
aas
jmp
push
mov
imul
or
and
fmull
sbb
dec
scas
pusha
sti
and
mov
out
cmpsl
roll
mov
and
sti
inc
mov
inc
sarl
jbe
stos
or
std
pop
cwtl
test
cld
sahf
sahf
std
mov
out
xor
add
sub
dec
cmp
ret
mov
mov
and
ja
negl
fs
xchg
sbb
push
int
xor
in
pop
out
iret
int3
sub
out
shlb
add
outsl
iret
ss
jb
xchg
into
sbb
popf
pusha
dec
cmpsb
fwait
fs
push
stc
inc
add
mov
shrb
cli
ja
inc
nop
test
jb
push
push
jne
pop
testb
sti
ret
adc
fdivrs
out
test
sbb
jno
mulb
adc
jl
sbb
push
repz
ret
and
ja
aaa
es
inc
and
mov
jo
das
mov
jle
loopne
jmp
mov
rorb
ljmp
inc
mov
xchg
shrb
popf
test
push
jb
pop
and
jae
pop
shr
popl
fmuls
out
pop
inc
pop
mov
xor
outsb
rcl
imul
mov
dec
cmp
dec
xor
fldl
push
jmp
or
and
and
push
fsubrl
xchg
addr16
mov
hlt
jae
cmpb
in
dec
cmpl
test
jnp
scas
ret
cmp
pop
push
jle
stos
sti
clc
mov
sbb
sub
out
es
sbb
mov
fdivrl
dec
fs
das
sbb
es
ss
push
jmp
aad
sahf
lds
mov
in
in
xor
lcall
out
jnp
leave
std
add
mov
in
or
shrb
daa
jno
je
cmpsl
std
mov
jnp
dec
jae
hlt
lea
fcom
lahf
and
xchg
inc
imul
inc
cltd
pop
test
xchg
cmpsb
pop
jmp
rorl
test
repz
push
xchg
adc
dec
arpl
jle
xor
push
outsb
push
or
add
push
adc
imul
popf
jp
cmp
cmp
sbb
push
jle
ljmp
add
iret
adc
push
jmp
add
popf
mov
ficoml
clc
rolb
sbbl
sbb
sahf
int
jmp
in
pop
mov
mov
sub
and
mov
mov
dec
push
daa
adc
push
fsubp
push
shl
adc
dec
fdivrs
mov
shrb
mov
add
adc
mov
fildll
stos
pop
pop
scas
cs
or
push
sbb
jb
sbb
cld
insl
ret
add
mov
mov
fmull
out
int3
xchg
add
test
sbb
cmp
stos
cmp
push
in
jb
lods
int3
fimull
or
or
imul
cltd
jno
mov
mov
add
je
mov
jecxz
adc
xchg
sub
daa
xchg
sbb
xchg
dec
push
adc
pop
xchg
sub
xchg
sbb
loope
repz
pushf
popa
mov
jle
sarl
jg
hlt
je
add
les
das
cs
lea
sub
je
mov
rcrl
pop
push
jmp
call
push
xorb
pusha
mov
pop
mov
idiv
push
or
fwait
cwtl
sahf
jg
and
adc
in
movsb
fucomi
loopne
icebp
xor
fsubrl
fsubrl
movsb
ret
mov
fdivs
addl
inc
lods
js
mov
jb
sub
xchg
push
adc
or
scas
dec
arpl
and
mov
jp
jmp
mov
xchg
jb
mov
movsl
pushf
das
fucomi
repnz
outsb
xchg
out
in
jge
movsl
mov
push
hlt
push
pop
jns
stos
lds
subb
push
adc
sbb
stos
xchg
mov
lock
pop
pop
stos
adc
jbe
dec
sti
sbb
cmp
or
jp
and
cmp
mov
mov
pop
std
pop
es
sahf
mov
or
pusha
lahf
mov
fldt
mov
mov
jg
mov
ds
inc
fidivrl
jnp
clc
jne
mov
gs
push
add
sub
iret
gs
mov
inc
xor
ss
jl
dec
dec
push
or
cli
inc
jmp
fsubs
out
lret
mov
jle
rorb
cwtl
data16
push
push
sub
clc
sbb
add
test
xor
movsb
or
or
mov
cwtl
mov
cli
jae
sbb
sbb
icebp
xchg
xor
or
sbb
cld
sub
mov
xor
mov
cld
out
ds
jge
cmpsl
jno
scas
js
xchg
lods
ds
and
test
daa
ss
dec
shrl
dec
inc
mov
int
ja
add
xor
mov
pop
rcrb
rcrl
inc
mov
sarl
mov
add
in
add
pop
test
mov
call
xchg
out
inc
pop
int3
xor
pop
enter
daa
push
pop
adc
jbe
ja
inc
aas
pop
sbb
pop
jecxz
pushf
push
xchg
nop
and
and
jmp
aam
iret
and
test
daa
xor
lods
pop
sbb
adc
xchg
push
cmp
pop
cmp
lods
push
ljmp
fisubl
data16
push
cld
cld
sahf
cmp
pop
mov
pop
adc
arpl
mov
jno
loope
pusha
xchg
xchg
int3
xchg
data16
sbb
je
call
mov
mov
dec
enter
mov
insl
out
inc
in
cmpb
push
data16
dec
ljmp
xchg
fists
push
sub
sbb
and
pop
arpl
lahf
jge
stc
mov
xchg
xor
push
push
ss
adc
ljmp
mov
xor
cli
jp
mov
inc
or
stc
fsubrl
in
and
or
ret
test
pop
cwtl
jl
pop
out
ljmp
mov
mov
add
cmp
insb
test
cmpsl
jge
mov
mov
mov
frstor
pop
add
pop
loope
aas
ds
push
and
jae
jns
cli
sti
fcomps
test
cltd
int3
iret
push
daa
pusha
inc
jo
mov
icebp
inc
cmp
roll
jbe
adc
mov
es
jae
mov
mov
jno
lock
jp,pn
add
pop
int3
push
pop
arpl
shld
sbb
jne
pop
sbb
aam
cld
or
inc
push
mov
mov
mov
mov
dec
incl
bound
in
ja
cld
sbb
scas
mov
imul
pop
jg
pop
cmpb
addr16
andl
xor
xchg
mov
lods
leave
neg
pop
loope
arpl
fldl
fbld
mov
inc
fbld
aam
add
mov
push
cltd
push
iret
inc
push
aam
int3
jo
sub
rclb
aad
ja
aas
mov
scas
xchg
or
xchg
dec
shl
dec
cld
out
jno
jbe
push
int
mov
data16
pop
ss
adc
pop
xchg
lea
sub
ret
adc
sub
push
daa
in
fistl
sti
jp
push
dec
loop
adc
call
push
shrl
lock
rorl
mov
stos
cld
fs
mov
adc
repnz
in
iret
popf
inc
cmp
dec
mov
in
das
fisttps
outsb
mov
fs
test
xchg
lcall
pop
outsb
and
scas
add
dec
cmp
push
pop
sub
or
cwtl
push
stos
mov
sahf
out
iret
xor
je
popa
das
mov
mov
rcll
shll
or
mov
push
lcall
xor
push
lods
cmc
rol
cmp
add
and
lods
inc
mov
xchg
jnp
enter
in
shl
lret
xchg
and
mov
jle
hlt
mov
rcl
push
js
mov
mov
sub
test
mov
xor
dec
xchg
sarb
push
ds
pop
cmpsb
les
pop
mov
add
mov
push
jns
stos
iret
imul
sub
sbb
sti
shll
add
out
psubusw
and
add
mov
sub
mov
cmp
jae
inc
scas
or
mov
xchg
xchg
in
sbb
inc
enter
icebp
pusha
mov
out
clc
cmp
jne
ja
fldcw
loopne
fistps
sbb
jg
cmpsb
test
jnp
inc
nop
cmpsl
sbb
js
movsl
das
dec
mov
fcomps
add
mov
push
test
push
sahf
imul
ficomps
jnp
fists
loope
ret
mov
push
cld
insl
mov
mov
ret
lret
pop
int3
pop
adc
pop
loop
push
mov
jns
sub
ss
pop
repnz
cmp
jmp
push
cmp
adc
notb
repnz
xor
loope
inc
arpl
scas
xchg
int3
add
or
inc
and
ss
xchg
repz
xor
testb
sti
inc
rcll
out
adc
lods
push
repnz
shlb
cltd
ret
and
adc
add
mov
pop
sbb
dec
out
and
inc
shrb
cmc
loope
inc
mov
movsb
push
fldenv
adc
adc
sub
ss
and
sbb
in
loop
cmpsb
jo
push
pusha
jnp
out
xor
sahf
xor
scas
push
shll
mov
push
pop
jo
sbb
adc
push
stc
test
sub
and
mov
mov
sub
movsl
push
scas
ss
cmp
testl
mov
add
jmp
inc
push
push
sub
push
fs
hlt
repz
ljmp
dec
fbld
sub
mov
or
lcall
imul
mov
test
in
mov
lcall
push
sbb
pop
pushf
push
aad
mov
sar
addr16
push
movb
adc
xchg
pop
mov
inc
and
outsl
jo
sbb
mov
or
repnz
arpl
filds
push
sbb
xlat
or
adc
inc
inc
hlt
hlt
shr
jmp
mov
sub
imul
and
js
les
nop
pop
cmpb
shr
and
adc
mov
mov
scas
push
jno
xchg
mov
scas
sbb
cmpsl
sub
jno
pop
dec
int
and
in
pop
enter
les
cmp
add
xchg
fsubrl
scas
adc
imul
push
int3
sbbb
dec
outsl
add
mov
mov
mov
data16
cwtl
sti
out
jle
out
aaa
sub
lds
and
mov
add
mov
fistpll
es
push
jno
inc
cmp
jp
cmp
cmpsb
xor
outsb
fistpll
sub
xor
shr
aad
mov
aas
scas
dec
repnz
xor
sub
scas
and
push
pop
inc
mov
xorl
das
mov
out
nop
in
decl
and
mov
cltd
popa
jecxz
lock
lods
adc
int
fstl
or
and
dec
add
lods
loopne
lock
rcrb
int
fstl
or
and
dec
add
lods
loopne
mov
in
mov
fcoml
add
sbb
and
and
mov
xchg
lock
mov
pop
nop
sub
inc
sbb
iret
mov
mov
add
xor
and
add
or
movsb
dec
aam
test
jns
mov
add
xor
and
push
flds
stc
or
movsb
mov
pop
les
jns
mov
add
xor
and
push
flds
stc
or
cmp
xchg
pop
in
adc
jo
push
aad
add
add
mov
rcrl
cmp
sub
cmc
and
fnstcw
hlt
sub
mov
pop
dec
ds
hlt
sbb
add
dec
inc
add
or
sub
and
or
jns
mov
cltd
add
out
push
int3
push
insb
popf
stc
xor
cmpsl
pushf
xchg
xlat
dec
push
pop
mov
sbb
mov
dec
loop
fsts
mov
lods
dec
inc
xchg
sbb
cmpl
xchg
data16
push
xor
lahf
sub
mov
jmp
movsb
sbb
aam
sub
stc
in
adc
add
xor
and
push
flds
stc
or
movsb
dec
aam
les
jns
enter
shlb
leave
cmp
adc
clc
jl
sub
inc
lret
pop
mov
in
push
cld
dec
int3
xor
jae
xor
insb
rorl
sub
cmp
dec
mov
or
in
inc
cltd
jo
inc
aad
test
flds
stc
or
movsb
dec
aam
les
jns
mov
add
xor
and
push
flds
stc
or
movsb
dec
aam
les
jns
mov
adc
xchg
cmc
aaa
xchg
fistl
and
sbb
sub
out
add
int
sub
inc
inc
outsb
inc
int3
testl
mov
js
xchg
push
jne
ret
jns
dec
or
cmp
push
stc
insl
sbb
mov
movsb
or
sti
xor
mov
push
dec
cmpsb
scas
fcompl
ds
fwait
push
pop
gs
pop
insb
popf
shll
cwtl
cmp
loop
ja
xchg
movl
clc
in
test
dec
and
or
xchg
jp
popa
icebp
xor
mov
mov
mov
lcall
jp
jbe
dec
inc
and
jmp
or
loop
into
stos
adc
inc
mov
xchg
jae
cwtl
xchg
add
adc
clc
movsl
adc
into
ret
cs
daa
lret
ss
jne
outsl
hlt
mov
sub
rolb
popf
rcrl
jg
cmpsl
jb
xor
or
xchg
and
sbb
sub
test
push
ja
movsb
cld
cmpsl
je
push
sti
inc
mov
fwait
test
idiv
and
leave
push
test
dec
cmp
xchg
dec
pushf
or
repz
pop
call
movaps
in
add
inc
mov
mov
cmp
mov
das
cld
rolb
pop
mov
add
mov
cmpsb
mov
ror
xor
bound
xor
lcall
sub
dec
xchg
inc
jno
orb
cmpl
aad
lret
or
andb
insl
xor
cmpsb
jle
rclb
imul
adc
adc
movsb
or
xchg
mov
std
adc
movsl
xchg
mov
test
jno
mov
inc
mov
in
fistl
mov
pop
and
xor
add
adc
into
jge
jae
cmp
push
ret
pop
faddl
xchg
push
push
sub
mov
je
je
sub
sub
jecxz
mov
ret
cwtl
andl
adc
bound
les
sarb
mov
int
daa
imul
arpl
mov
js
sarl
mov
adc
mov
and
loope
mov
sub
inc
inc
ja
lret
and
out
ret
je
jne
hlt
jnp
fiadds
mov
ret
icebp
fucomp
gs
lret
ja
mov
into
cmc
jae
call
mov
jno
xchg
add
jno
and
jle
jbe
pop
pop
xchg
inc
add
push
out
test
xchg
lds
rclb
mov
adc
ficompl
loopne
rorl
pop
ficoms
cmp
pusha
ljmp
mov
gs
pop
fnsave
cmc
sub
inc
push
xchg
arpl
xchg
fwait
and
arpl
xor
pop
xchg
push
aas
dec
jo
mov
stos
mov
xchg
push
inc
test
sbb
xchg
imull
mov
cs
andb
lahf
out
jmp
cltd
inc
dec
pop
add
sbb
int3
push
or
andl
mov
in
push
aas
fadd
xchg
pop
out
mov
popf
and
xchg
vmovntdq
xchg
imul
sahf
lret
cmp
and
or
lock
xchg
loope
pop
in
repnz
mov
sbb
xorb
sbb
xor
iret
jbe
not
fsubs
mov
arpl
mov
push
fstpt
imul
push
jb
hlt
mov
testb
movsl
mov
sub
and
shll
test
dec
lret
add
lods
iret
cmpps
sub
push
test
lds
lock
cs
cmp
rcrl
adc
fstps
shl
stos
sub
aas
jbe
add
cli
cltd
sub
jle
add
fbstp
fstl
ds
inc
flds
xor
into
test
repz
hlt
dec
cmc
pop
push
ffree
or
sbb
adcl
add
cmp
ret
mov
rcrl
test
fimuls
loope
js
mov
adc
xchg
cmc
adc
sbb
aad
jb
inc
xchg
xor
cmp
mov
mov
dec
add
adc
clc
dec
inc
sub
popa
roll
pop
aam
jecxz
mov
lea
mov
mov
mov
cwtl
mov
pop
cmp
ljmp
push
jno
hlt
xchg
add
push
dec
mov
ss
loop
inc
stos
push
loope
ljmp
cmp
dec
ror
xorb
in
jp
xor
fistpll
mov
loope
jno
pop
repz
jns
test
push
adc
dec
mov
adc
mov
cwtl
xor
jns
mov
add
or
or
xchg
add
mov
push
mov
add
mov
pop
or
dec
mov
mov
out
neg
xor
cmc
inc
mov
rcll
outsb
test
dec
adc
out
mov
mov
sub
clc
inc
fnsave
jg
ss
test
sti
xchg
xor
das
push
clc
popf
xchg
add
fwait
mov
cli
pop
rol
cmp
rcll
cmp
stos
sahf
mov
pushf
and
adc
xlat
loop
outsl
movsl
add
pop
repnz
inc
xor
sub
mov
or
jle
push
jmp
or
in
shll
js
sahf
or
mov
arpl
sahf
xchg
mov
adc
mov
out
out
pop
in
xchg
and
out
cmp
xorb
lcall
mov
add
shrl
int
test
repnz
sub
setb
adc
jmp
dec
lret
fs
shlb
call
sub
aas
das
push
repz
push
cmp
pop
cld
shr
xor
adc
jl
mov
inc
mov
and
pusha
daa
mov
cltd
fistl
xlat
pop
dec
mov
int3
scas
xchg
add
jo
sub
lcall
push
cmp
xor
sbb
clc
and
out
sbb
jae
mov
mov
cmp
fsub
fnsave
push
scas
pushf
inc
pop
test
shl
mov
testb
movsl
dec
sub
sub
rcrb
andb
mov
cmp
ret
xlat
sub
sti
cmp
gs
cmp
repnz
mov
lcall
ljmp
mov
rolb
and
mov
aam
and
mov
pusha
les
xchg
cmpsl
ret
out
sbb
cltd
mov
ret
lahf
cld
mov
mov
gs
lods
out
mov
jbe
ret
and
pusha
push
into
aaa
enter
and
add
in
addr16
testb
imul
xor
js
arpl
mov
js
jecxz
pushf
adc
mov
adc
imul
js
jo
lret
cld
and
lret
jns
sti
fsubp
hlt
sub
arpl
sbb
sarl
aad
cmp
or
and
shll
popf
out
jmp
lea
clc
into
cmp
dec
hlt
out
xchg
stos
int
xor
cld
xchg
jecxz
mov
pop
pushf
negl
pop
sub
mov
out
push
mov
push
pop
mov
ret
and
fmulp
add
xchg
sub
adc
lock
pusha
movb
add
push
or
lcall
xor
or
out
adc
inc
xchg
addr16
shlb
or
sub
and
and
nop
jb
mov
inc
test
xor
inc
mov
popf
pop
adc
sahf
fwait
aad
or
pop
sbb
lods
mov
cmp
cmc
mov
stos
rolb
mov
sti
lea
gs
adc
loop
inc
cld
fcmovnbe
adc
fisubl
les
adc
pusha
xchg
aaa
in
and
push
jo
pop
mov
ret
aaa
sbb
cwtl
fsts
sbb
js
sti
cmc
outsb
push
cmp
xor
push
gs
xorb
push
lock
in
xchg
push
stc
or
xchg
adc
mov
add
mov
mov
insb
adcl
add
xchg
and
xor
pop
pop
je
dec
xchg
mov
aaa
roll
nop
sarl
outsb
fildll
addr16
jne
leave
loopne
lds
xchg
sub
in
sub
inc
movsb
mov
movsl
mov
dec
adc
jne
aam
rep
gs
pop
jg
mov
sub
lock
jne
inc
lret
push
adc
sub
scas
aad
pop
shr
pop
lds
rol
addb
test
mov
scas
sub
rorl
mov
call
cltd
pop
out
inc
dec
xchg
dec
cmp
test
add
push
shrb
arpl
mov
add
dec
mov
mov
icebp
leave
hlt
mov
sbbb
sub
out
ret
sbb
and
or
mov
and
ret
push
bound
test
xor
and
cld
pusha
or
cmc
int
mov
push
fidivl
pop
push
or
sarl
fistps
je
lahf
mov
jl
aas
mov
loopne
lods
sarl
loopne
push
subl
or
shlb
cltd
xor
dec
mov
scas
pop
pop
xchg
addr16
mov
aas
cmpb
mov
xor
je
ljmp
sbb
notl
in
xor
sbbb
inc
cmp
or
lock
xlat
mov
add
mov
call
gs
push
inc
jae
rorb
fsubs
es
pop
and
push
add
je
fadds
pop
and
add
sub
fdivl
mov
into
inc
mov
rclb
mov
push
jns
pop
xchg
orl
xchg
xlat
jae
ret
pusha
mov
push
fbld
imul
mov
popa
push
xor
mov
stc
sahf
outsl
xchg
xor
or
std
movsl
inc
adc
jp
sar
fwait
pop
push
das
jb
or
ret
leave
xchg
xchg
sbb
xchg
mov
inc
jmp
xchg
pop
sbb
inc
and
adc
xchg
xor
mov
dec
ret
xchg
or
sahf
pop
push
jl
inc
push
cmp
rorl
ror
mov
scas
jo
sahf
and
cltd
xor
bound
popa
shll
sub
xor
bnd
lods
or
inc
mov
pop
das
fstps
rorb
mulb
mov
inc
pop
lds
xor
jbe
int
xchg
das
lea
bound
or
icebp
xor
push
add
lds
mov
inc
icebp
or
and
repnz
hlt
jno
fdivs
add
inc
xchg
fsubs
sbb
jbe
mov
pop
out
dec
xchg
pop
dec
dec
cmp
imul
jmp
dec
test
dec
inc
push
push
mov
jecxz
scas
repz
fnsave
ret
push
mov
push
xchg
adc
addl
mov
test
xor
xchg
int3
mov
pop
fidivrl
lock
test
mov
push
call
cmc
call
push
test
mov
jo
sahf
dec
pop
cltd
fucomp
push
rorb
cli
xchg
testb
pop
or
pop
or
push
addl
jo
xor
xchg
pop
sbb
out
shlb
cmc
jl
dec
jns
clc
lea
jo
fdivl
pop
mov
jbe
cli
or
or
test
jl
pop
insl
and
ja
fisubrl
mov
mov
or
mov
add
cmp
repz
jp
pop
lret
popf
nop
and
sbb
cld
pop
lcall
addr16
testl
jp
mov
or
cmp
fadd
mov
bound
sahf
mov
or
jae
pop
lret
mov
inc
mov
mov
nop
xchg
lcall
fisubl
dec
test
add
js
out
cs
out
testl
icebp
dec
lds
sub
sub
inc
js
sub
popa
xor
sbb
cmp
cmpsb
fstpl
outsb
and
sbb
insw
rcrl
xor
pop
mov
adc
cld
xchg
cmp
mov
into
cltd
imul
rcl
out
cmp
push
sub
and
xlat
jl
dec
insb
adc
rcl
jecxz
pop
cwtl
in
lahf
outsb
adc
pop
xchg
sti
sbbl
mov
ret
ret
inc
xor
cld
int3
loopne
xchg
jne
cmp
fsubs
jmp
negl
faddl
loop
psubq
aaa
cli
das
sub
stc
test
mov
sti
push
out
jecxz
cmpsb
sub
mov
xchg
ss
jp
xchg
ljmp
xchg
jne
enter
push
popa
loopne
gs
outsl
cmpsl
je
fdiv
fiadds
cs
inc
mov
fcomps
out
ficompl
or
mov
insb
pusha
inc
imul
in
and
lcall
or
push
out
loopne
movsb
je
xchg
ja
jle
pop
pop
testl
icebp
or
push
adc
mov
xor
add
sbb
add
sbb
adc
jns
dec
outsb
lea
movsb
push
dec
add
jb
sub
push
lahf
pop
outsb
pop
aaa
adc
cmp
mov
jge
outsb
sbb
sti
sub
cmp
cmpl
and
jbe
dec
popf
fdivr
cmp
addr16
pop
sti
mov
push
test
add
cmp
mov
and
ret
jmp
leave
mov
mov
ljmp
sahf
mov
lods
jae
xchg
fsts
jno
pop
stos
fists
das
adc
fbstp
movsl
xchg
adc
xor
sub
push
mov
ret
cmpsb
jbe
jnp
sub
mov
insb
repz
fidivrs
call
in
in
mov
inc
push
jne
jmp
cmp
ror
or
xchg
lods
push
fisttpll
push
mov
jecxz
in
vpsraw
aad
pop
popa
rcrl
dec
pop
fildl
movsl
or
jbe
into
xchg
insl
cld
mov
addr16
mov
fsubrl
cli
jg
test
mov
sbb
bound
sahf
xchg
inc
insb
int3
add
scas
xchg
jae
xchg
sbb
into
xor
lcall
fsqrt
mov
mov
cwtl
mov
push
clc
imul
dec
or
mov
adc
int3
xchg
ljmp
jge
jbe
mov
mov
leave
test
push
xchg
jge
nop
or
das
aam
sti
jmp
hlt
dec
sub
test
movsl
push
enter
cli
popa
pushf
jb
jns
lcall
add
push
in
jge
jbe
test
ret
pushf
rcll
mov
mov
mov
clc
stos
xor
mov
cs
inc
dec
fs
lahf
fildl
mov
leave
outsb
mov
dec
pop
dec
xchg
jmp
and
or
int
inc
bound
cmpsb
add
cltd
mov
repnz
call
push
xor
loope
fucomp
flds
lods
push
xlat
mov
iret
pushf
push
scas
neg
ja
sbb
mov
and
outsl
pop
call
or
inc
cltd
mov
sbb
jge
xlat
ja
xchg
add
or
adc
jae
cmp
jecxz
lret
mov
test
xchg
mov
icebp
lods
pop
test
xchg
jbe
cmp
xor
pop
std
aad
add
cld
mov
dec
fists
cltd
mov
stc
lods
int3
bound
ljmp
jb
and
push
stos
adc
loop
cmp
cmpsb
inc
sbb
testl
das
add
xor
push
stc
mov
lea
mov
xchg
std
cmpsb
mov
scas
fisubl
imul
pop
adc
jg
leave
or
cmp
mov
cwtl
or
arpl
into
jmp
clc
sbb
mov
lock
jne
ret
jge
or
jbe
aas
fildll
ret
iret
imul
jle
fwait
dec
fldenv
lock
cmp
rolb
rclb
divb
ja
outsl
shrl
jnp
push
arpl
xchg
mov
mov
jns
add
rol
movzbl
test
fcmove
jne
stos
cli
jae
mov
xor
inc
repnz
dec
mov
cs
aad
and
out
push
sub
lcall
pushf
mov
jae
push
push
cmp
popf
push
inc
pop
xchg
sahf
dec
xlat
lds
inc
iret
mov
divb
inc
shll
std
cmp
mov
out
push
test
sahf
cld
push
mov
xor
mov
jecxz
pushf
mov
sub
popa
pop
push
mov
scas
fs
scas
inc
xchg
out
or
jge
mov
mov
cltd
mov
inc
les
sbb
push
cwtl
xchg
movsl
das
testl
push
mov
sub
pop
mov
dec
hlt
pop
xor
mull
pop
aam
mov
gs
mov
cli
arpl
and
in
scas
jecxz
mov
pop
mov
sbbl
mov
xlat
clc
dec
loop
mov
scas
push
in
cmp
or
jb
pushf
std
adc
fists
repnz
faddl
sub
sti
add
jmp
js
popf
lcall
pop
rcrb
iret
and
and
popf
addr16
loope
stos
or
mov
test
pushf
pop
add
cs
mov
inc
push
jge
dec
add
insb
sbb
decl
sbbb
dec
jg
push
jo
subl
ja
and
ljmp
pop
aas
loope
hlt
es
shrl
cmpsb
jo
mov
sub
test
inc
cmp
scas
loopne
outsl
mov
test
xor
dec
jno
push
test
xchg
push
inc
push
mov
jmp
jmp
stos
test
sbb
jge
add
mov
push
addl
lcall
sub
ja
mov
mov
xchg
int3
mov
icebp
sbb
dec
in
popa
inc
xlat
test
aad
pop
mov
mov
fisttpll
sahf
fsubrl
mull
adc
push
lods
mov
adc
popa
cmp
xchg
mov
mov
push
mov
mov
sarl
cmp
mov
jmp
dec
in
cmc
mov
mov
andl
dec
gs
inc
mov
pop
add
test
and
sub
in
hlt
mov
inc
and
in
clc
xchg
mov
insl
dec
dec
movsl
cmp
sub
and
clc
stos
insb
popf
dec
xchg
sahf
and
xchg
dec
mov
jo
cmp
jns
jge
pop
fwait
mov
push
pop
je
outsb
leave
add
xor
jne
cmp
or
and
repnz
jns
xor
mov
insl
fisttpl
inc
int3
cli
insb
out
push
or
aas
xchg
pop
mov
fcmovbe
mov
dec
or
bound
xchg
sub
ret
loope
movsl
roll
ret
and
imul
ja
xchg
fsubrs
push
sub
outsb
clc
or
fwait
test
lds
ja
xchg
sahf
pop
fwait
mul
sbb
in
lock
in
jae
or
add
aad
add
xor
test
inc
add
or
cmpsb
int
lods
fidivs
jno
imul
fucom
adc
ret
sbb
cmc
das
cmp
sub
int
hlt
test
add
cld
aam
or
pop
xor
or
xor
fiadds
lcall
test
insl
stos
clc
out
call
fildll
adc
or
fmuls
popf
push
jae
bound
and
idivb
cmp
inc
cmp
pop
push
dec
dec
shr
mov
xchg
and
rorb
sbb
inc
inc
sarl
adc
push
or
or
mov
lock
add
jne
xchg
pop
in
adc
cmp
shr
daa
in
dec
data16
loopne
or
mov
or
mov
dec
cmpsb
cltd
pop
add
sub
shl
push
pop
dec
push
dec
stos
xchg
add
test
push
mov
movsl
fcomps
sahf
loope
push
subl
xchg
push
int
mov
enter
fstps
cltd
fistl
pusha
or
cmp
jo
inc
fdivrs
mov
int3
dec
jns
jae
add
cld
addb
scas
movsl
mov
out
imul
lcall
mov
mov
adc
sahf
or
add
pop
jae
cltd
inc
adc
xor
fstl
or
in
in
xchg
xor
ds
xor
lahf
test
imul
push
flds
stc
or
movsb
dec
aam
les
jns
mov
add
xor
and
push
flds
stc
or
movsb
dec
aam
les
jns
mov
sbb
xor
and
jmp
xchg
sbb
dec
aad
les
jns
mov
add
xor
and
push
fld
jmp
imul
xorl
sbb
or
mov
into
mov
mov
mov
stc
or
ja
sub
dec
or
jns
imul
mov
into
mov
sub
inc
or
adc
push
dec
out
imull
cmpsl
stc
mov
xchg
mov
cmp
add
push
inc
aaa
pop
cmp
icebp
mov
in
pop
push
dec
inc
clc
ficoml
jno
cmp
jns
sarb
push
jg
adc
cmpsb
lds
xchg
stc
scas
insb
sbb
sbb
sti
dec
inc
mov
jns
mov
add
mov
adc
outsl
xchg
movsb
inc
ret
pop
ds
shrb
fmull
icebp
cld
decb
inc
pop
scas
call
cmc
outsl
imul
xchg
xchg
push
push
dec
scas
int
stc
push
leave
cs
jno
pusha
shll
test
pop
out
or
loope
push
mov
cmp
and
mov
leave
inc
clc
lods
and
xchg
loope
sbb
jns
cmp
pop
push
pop
aaa
mov
into
mov
fsts
sub
push
or
jns
imul
mov
mov
pushf
enter
mov
sub
cmp
insb
and
xchg
fmull
mov
xchg
scas
movsl
sahf
mov
lods
cmp
dec
ds
inc
push
fwait
std
and
jmp
in
not
scas
jmp
jle
outsb
sub
dec
or
jns
imul
mov
into
mov
sub
dec
or
jns
imul
mov
mov
push
pushf
push
dec
mov
cs
pop
push
insb
lds
pusha
scas
out
test
adc
jp
pop
pop
cmp
jge
cmp
jae
iret
dec
in
sub
lock
icebp
mov
push
sub
test
push
aas
fcomps
inc
das
sbbb
in
inc
jp
into
xlat
ret
inc
jne
mov
aad
ror
lahf
sti
out
jb
lret
dec
icebp
sub
push
mov
mov
jge
outsl
mov
or
push
popa
xchg
xchg
in
xor
test
test
jae
adc
mov
fxch
jbe
test
ficoml
and
cmp
xchg
sti
sub
pop
js
adc
mov
adc
mov
aad
xchg
ljmp
jge
cli
outsb
fdivl
dec
mov
sbb
jb
nop
rcll
and
xor
inc
sbb
jnp
iret
push
cmp
bound
pop
int3
mov
test
das
add
push
xchg
out
bound
mov
mov
pop
adc
enter
mov
push
mov
sub
in
fildl
pop
push
inc
mov
addr16
xor
fstpt
dec
sbb
mov
mov
jo
xor
shl
mov
in
aad
sub
cwtl
es
xchg
je
fcomps
cmp
and
sub
add
jo
jbe
cmp
faddl
mov
pushf
call
jno
mov
push
pop
push
sbb
push
imul
cli
mov
enter
inc
pop
cmp
inc
xor
test
jg
cmp
pop
dec
push
jge
pop
loop
inc
pop
mov
sbb
jle
movsb
jmp
enter
daa
jns
out
adcl
sbb
adcl
cmp
fdivs
xor
dec
or
inc
or
sbb
inc
mov
shll
sahf
dec
sarl
popf
in
xlat
insl
pop
arpl
idiv
inc
xor
inc
mov
push
jg
nop
and
loop
hlt
xchg
pushf
add
repz
inc
and
mov
sub
pop
in
mov
push
insb
xchg
xor
inc
and
and
hlt
mov
decb
sub
or
jae
mov
movsb
jns
jge
mov
xor
jmp
xor
into
pop
xor
les
testb
mov
js
lret
mov
into
dec
out
gs
sbb
push
jno
call
pusha
add
fwait
out
dec
sbb
lcall
dec
sub
jae
xchg
pusha
ljmp
fcomps
dec
cmc
pop
push
xchg
hlt
xchg
sub
xchg
shr
sbb
fst
or
mov
cmp
rcll
push
xlat
push
and
aam
roll
movsb
inc
pop
cld
outsl
stos
or
sbb
push
mov
push
into
pop
sub
leave
test
sbb
call
fiadds
clc
jmp
vhsubps
cmc
sarl
inc
ds
arpl
adc
mov
fucomp
mov
and
imul
adc
sbb
cmp
sbb
lcall
or
negl
xchg
icebp
dec
pop
stos
fs
lahf
xchg
pop
stc
movsb
sti
addr16
pop
test
clc
xor
ja
scas
xor
mov
mov
outsb
jae
insb
mov
sbb
mov
sub
sbb
mov
outsb
xchg
mov
adc
pop
rcr
or
sub
ret
mov
mov
popf
mov
out
lock
shlb
pop
mov
addr16
mov
mov
mov
loopne
push
mov
inc
shll
sti
add
push
cwtl
lret
xchg
aad
sahf
int
rol
imul
sub
fstps
mov
je
nop
lret
aad
sub
stos
sub
notl
repz
fcmovnb
icebp
movsb
mov
bound
repz
jo
test
cmp
loop
fwait
imul
mov
cmpsl
cld
sub
loopne
xor
sbbl
add
jl
in
in
or
divl
or
pop
dec
mov
sbb
sbbb
mov
dec
inc
pop
lcall
sub
xchg
xor
add
fisubrs
dec
sub
out
jecxz
int
adc
xchg
xchg
or
jl
and
addr16
mov
sbb
xchg
cmp
xor
mov
jle
xchg
inc
xor
loopne
std
inc
mov
int3
aam
lock
inc
sub
mov
iret
xor
imul
dec
jecxz
cmp
test
into
dec
iret
mov
add
push
jg
ss
in
inc
cld
adc
imul
pop
lea
push
xor
inc
sub
xchg
into
loope
pop
mov
stos
pushf
pop
sbb
dec
pop
ss
push
cmp
lods
dec
jno
insb
or
adc
ret
hlt
out
call
call
mov
or
daa
mov
fcmovnb
ja
fmull
and
sub
mov
fs
mov
jns
mov
or
cmpsb
sbb
imul
fdivrs
in
cld
or
xchg
inc
push
jl
aad
leave
jg
rcll
outsl
jns
loopne
rcll
int
mov
loop
cltd
js
xchg
rolb
add
pop
dec
xor
add
insl
mov
mov
filds
mov
xchg
loopne
test
aaa
mov
ds
cmp
mov
scas
mov
mov
push
push
mov
hlt
or
subl
and
call
out
arpl
or
fdiv
pop
pop
loope
in
sub
xor
adc
das
scas
cmp
rorl
adc
std
jns
cmc
lds
ficoms
push
into
mov
mov
dec
fldenv
sbb
or
mov
inc
mov
lds
jae
rcrl
sti
jae
nop
dec
mov
dec
imul
cmp
adc
cld
add
ss
clc
jl
mov
imul
adc
scas
dec
les
jne
cld
scas
jge
or
adc
pop
loopne
out
or
sti
in
rcll
mov
pop
lods
cmp
sub
dec
and
mov
cmp
fdivrl
jb
and
andl
jp
in
testl
stos
dec
rol
and
negl
pop
popf
xchg
lcall
jg
shlb
es
dec
hlt
cltd
adcl
repnz
test
ret
rclb
mov
leave
lahf
ljmp
scas
mov
movsb
inc
sahf
mov
ret
aad
sbb
jmp
push
sub
inc
fcomps
int
pop
pop
in
dec
jle
call
stos
xchg
mov
adc
call
ljmp
lcall
cmp
popa
push
mov
xchg
aam
xor
push
pusha
cmp
jo
sub
inc
sub
aam
cmp
outsl
xchg
int
dec
mov
clc
pop
jmp
xlat
add
pop
in
pop
jecxz
jne
adc
test
stc
decl
xchg
push
cmp
imul
in
stc
mov
ficomps
stc
je
imul
jne
addl
add
jo
mov
add
pop
call
push
add
adc
mov
imul
sbb
mov
rcrl
inc
enter
into
repz
fwait
stos
enter
cmpsb
outsl
push
and
add
frstor
add
pop
sub
idivb
arpl
loope
clc
in
xor
ficoms
sbb
daa
inc
mov
rcrb
jne
cwtl
stos
mov
cmp
cmpsl
xor
and
mov
cmp
cmp
je
jg
loopne
sub
sahf
fs
ffreep
mov
gs
aad
sbb
xchg
xchg
ljmp
in
ficompl
out
js
jle
test
mov
add
daa
out
dec
stc
mov
lret
push
repnz
push
in
mov
fs
sbb
mov
fs
sub
imulb
cs
imul
or
pop
loopne
mov
testl
test
mov
or
inc
cmpsb
je
in
int
lret
sbb
pop
out
sub
pushf
ljmp
jmp
jecxz
ret
dec
add
cmp
xchg
lcall
clc
rcrl
sbb
orb
rorl
and
mov
sbb
jg
ljmp
mov
dec
cmp
sub
pop
js
mov
or
adc
out
sub
call
jmp
movsl
jbe
ret
push
mov
add
pop
orl
lods
out
rolb
pop
jo
pop
outsl
push
adc
or
cmp
xchg
mov
ljmp
aam
add
cwtl
and
mov
mov
ja
rclb
mov
push
add
mov
xorl
loopne
adc
sub
or
jae
jmp
push
ss
ret
outsl
dec
cmp
cmc
jo
es
test
js
or
xchg
imul
jge
lret
imulb
jns
cmpb
cmp
iret
xchg
lcall
sbb
sbb
pushf
popa
scas
stc
and
push
add
scas
pop
push
jmp
sub
push
shrd
insl
sub
test
mov
xor
in
xor
cmpsl
setle
adc
xlat
test
jecxz
inc
sbb
add
loope
pop
call
xor
adc
insb
sub
mov
test
lock
mov
lock
sti
stos
les
xor
repz
mov
mov
pop
mov
scas
shr
mov
mov
jle
cmp
dec
inc
dec
jecxz
dec
out
sbbb
aaa
mov
enter
add
or
movlhps
jg
negl
mov
xchg
fcomi
xchg
popa
pop
or
inc
fstpl
js
stos
pop
icebp
dec
push
stc
call
mov
movsb
add
dec
sub
mov
pusha
aaa
jbe
xchg
fildl
jle
cmc
neg
inc
icebp
stos
lret
jp
std
cltd
jle
xchg
clc
sbb
fcomps
repz
or
cwtl
xchg
inc
ljmp
mov
mov
xor
es
xor
cmp
push
rol
cmp
mov
fiaddl
adc
mov
add
dec
inc
addb
lea
sbb
mov
pop
insl
xchg
js
mov
push
jmp
sub
pop
pop
push
and
das
jmp
je
aas
cmpb
lcall
add
pop
mov
mov
mov
or
pushf
sbb
dec
shlb
fdivl
lea
lods
call
stos
popf
xchg
popa
push
add
mov
sbb
leave
lds
add
xor
adc
or
ret
pop
mov
into
sub
out
sbb
loope
lds
push
lcall
repz
push
bound
js
insl
dec
sbb
jbe
pop
mov
jne
lahf
fldenv
stc
imul
xchg
xchg
movntq
popa
jnp
sbb
push
nop
mulb
cmp
ljmp
dec
lds
decl
pop
dec
fmuls
adc
ljmp
cld
insl
jp
push
adc
fstpt
cltd
jg
mov
loop
pop
sub
pop
out
cmp
data16
leave
int
fcmovu
mov
mov
cmpsl
stos
jecxz
mov
xchg
mov
dec
jg
and
int3
add
cmpsl
cltd
cmpsl
dec
subb
xchg
das
inc
sub
add
jl
jl
xor
popa
lds
and
mov
push
inc
je
shlb
adc
pop
mov
cmpb
add
movsl
mov
adc
rcll
or
adc
sbb
not
imulb
insb
adcl
lret
imul
inc
in
jecxz
mov
call
aaa
in
jp
cmp
std
jno
jno
xchg
adc
ds
leave
arpl
lret
fisttpl
lods
sahf
repnz
movsl
scas
mov
push
fiaddl
sub
push
pop
fs
fists
inc
fsubs
push
stc
adc
lcall
stos
jmp
lahf
mov
ds
outsl
cmp
or
mov
sub
in
xchg
leave
je
cld
dec
jbe
ret
xor
rorb
push
xchg
jecxz
fwait
cmp
cmpsl
bound
addl
pop
xor
out
mov
cmp
movsbl
neg
movl
jnp
mov
sub
mov
cld
insl
jg
je
test
push
mov
dec
fimuls
inc
dec
lods
and
pushf
adc
jp
adc
dec
aad
sub
loop
jge
adc
cmp
jae
inc
loopne
mov
pushl
ret
testb
loope
inc
repz
fs
mov
mov
mov
and
xor
and
std
xchg
inc
cmp
dec
xchg
fwait
adc
pop
lret
pop
xlat
push
mov
aad
dec
cmp
push
mov
movsb
and
test
adc
jecxz
das
mov
mov
leave
or
cmpsl
call
xor
xchg
mov
sbb
loopne
pop
sbb
outsl
sar
in
loope
mov
pop
and
sbb
imul
and
sbb
xchg
movsl
and
pop
aas
aas
ret
imul
pop
mov
test
loop
dec
dec
inc
xchg
je
sarl
std
gs
add
add
mov
jge
xor
push
adc
idivb
xchg
out
pop
out
ss
movb
sbb
negb
cmc
testl
mov
push
dec
loopne
lods
fs
cs
add
inc
aad
inc
nop
out
pop
outsb
xchg
fidivs
fs
lock
push
lds
sarl
add
mov
ret
add
adc
out
adc
jns
mov
push
sbb
mov
push
push
adc
iret
subl
cltd
jns,pn
xorl
and
xor
xor
dec
xchg
jne
jnp
lcall
jg
or
fwait
push
scas
xchg
dec
aad
or
push
lcall
fcoml
icebp
push
mov
push
loope
sbb
mov
add
ljmp
dec
and
fmul
cmp
sbb
xlat
sub
je
insb
push
cmp
xor
icebp
mov
ret
pushf
xchg
enter
mov
lods
xor
mov
arpl
sbb
flds
mov
mov
pop
mov
sbb
jnp
mov
ret
and
rolb
arpl
fistpll
mov
mov
out
mov
aad
inc
mov
mov
inc
shll
mov
shll
inc
test
imul
movsb
xor
nop
lret
out
sahf
sub
repz
or
cmp
push
shll
imulb
jg
icebp
pusha
movsl
mov
test
and
mov
push
out
dec
mov
mov
adcl
mov
dec
call
jg
fwait
mov
mov
ss
pop
mov
push
mov
pop
push
sub
sbb
xchg
jns
cli
add
adc
cmp
jg
mov
scas
mov
xor
xlat
aas
and
sti
movsb
cmp
inc
xor
lahf
inc
or
insb
je
mov
xchg
dec
mov
scas
test
xchg
mov
pop
mov
dec
mov
hlt
mov
lret
nop
insl
iret
mov
dec
ret
bound
insb
dec
in
cmpsl
mov
lret
push
xchg
popa
pop
mov
mov
scas
lret
pushf
test
jmp
lret
adc
mov
jno
inc
mov
subb
out
pop
add
mov
fwait
add
repz
ja
sub
loope
and
xchg
push
xor
int3
mov
iret
insl
xchg
test
add
sbb
fnstsw
clc
xor
shl
scas
outsb
fcmovnu
pushl
dec
data16
jbe
xchg
repz
popa
lea
sub
cmp
mov
inc
int
rorb
repnz
xchg
aaa
pop
cmp
ret
pop
pop
int
dec
cli
ja
aam
adc
mov
lods
or
mov
lahf
loop
or
push
add
xchg
lods
dec
xor
fmuls
pop
aas
xchg
jcxz
mov
pop
test
je
pop
ja
mov
mov
outsl
fstl
cmp
xor
fdivrl
fs
pop
mov
ljmp
mov
xchg
jb
cmp
xchg
lock
test
sarl
ss
rclb
xor
loopne
xor
inc
jno
insb
cs
and
std
aaa
js
xchg
fstps
aam
push
lret
push
jg
jnp
and
pusha
insl
xor
out
mov
inc
jecxz
adc
out
mov
in
xchg
test
or
add
xchg
mov
clc
mov
mov
mov
test
iret
in
pop
enter
pop
xchg
cmp
mov
add
jl
scas
mov
jge
js
dec
movsl
leave
adc
sbb
jmp
push
dec
mov
jle
imul
fwait
xchg
add
and
cmp
movsb
adc
cmp
mov
xor
mov
fisttpl
lods
scas
add
loop
seto
pop
lods
mov
dec
shl
add
aam
xchg
xor
stos
sahf
mov
in
xlat
cmp
mov
das
mov
mov
xchg
mov
fiadds
dec
mov
sub
pop
cli
mov
popa
test
inc
dec
das
adc
movsb
jb
mov
and
ja
pushf
ja
movsl
xchg
pop
pop
cld
ret
sbb
xchg
cmp
pop
fdivl
and
fidivrs
jge
daa
and
xor
mov
fcomps
aad
addr16
in
in
sbb
jae
adc
push
out
add
jp
mov
adc
sbb
jmp
and
jle
divb
ss
adc
es
pop
cmc
mov
imul
out
jle
repnz
pop
dec
ds
into
jecxz
and
int3
push
movsb
ds
cmpsb
push
mov
mov
subl
fcmovnbe
jmp
push
rolb
mov
mov
pop
arpl
pop
lods
adc
sti
xor
mov
cli
int3
js
or
push
sbb
dec
into
pop
jnp
bound
ss
mov
arpl
inc
je
jg
fimull
inc
sti
in
mov
ret
mov
sahf
lods
xor
push
fists
mov
xor
sub
cltd
xchg
ret
jle
movsb
ljmp
xchg
rcll
outsl
sahf
xchg
mov
iret
jle
add
aad
cmp
cmp
mov
xor
add
ret
fldenv
xchg
out
xchg
hlt
push
add
xor
ja
out
in
cmp
shlb
inc
or
cltd
repz
imul
inc
aaa
add
loopne
jmp
and
out
lods
rolb
bound
addr16
insb
jg
push
or
xor
mov
xlat
inc
inc
and
add
inc
sbb
mov
xchg
dec
loop
fcmovnb
xchg
ficoms
adc
out
addr16
and
sahf
stos
adc
lcall
stc
xor
pushf
icebp
xchg
popf
push
cmpsb
rorl
hlt
lods
jg
sub
xor
icebp
mov
sub
and
or
and
pop
aaa
cmpsl
repz
xchg
movhlps
aaa
cli
dec
cmp
lds
dec
cmc
jp
les
outsb
dec
mov
pusha
mov
es
adc
add
sub
out
pop
ds
fs
sbb
add
sbb
and
cmp
jmp
mov
fsqrt
jp
stos
fldcw
pop
ss
sbb
ss
jae
jbe
fldcw
xchg
sub
imul
sub
mov
leave
testl
cwtl
xor
cli
dec
adc
mov
mov
test
mov
shlb
imul
ret
xchg
test
test
cwtl
and
rolb
in
push
leave
sbb
in
imul
ss
push
sub
test
lahf
push
ss
insl
aam
jge
add
in
sti
add
clc
mov
cwtl
jno
jg
ss
xorl
call
outsl
cmp
pushf
gs
pop
aad
pop
sti
out
in
adc
lcall
out
cmp
shll
mov
mov
push
out
fs
test
mov
sub
dec
or
jns
imul
mov
into
mov
sub
dec
or
jns
imul
mov
into
mov
sub
dec
or
jns
imul
mov
into
mov
push
leave
cmpl
dec
jle
icebp
cmpsb
xchg
loope
icebp
mov
lods
jae
inc
mov
sub
in
jbe
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
jecxz
repz
mov
rcrl
insb
mov
orl
pop
arpl
pushf
and
xor
add
adc
jecxz
repz
push
rclb
int
std
pop
sub
int
sub
pop
mov
call
xor
pop
sbbb
inc
rcrl
mov
fisubs
outsl
mov
or
in
adc
or
cmpsb
nop
sbbb
mov
lock
and
jecxz
cltd
ret
cmp
mov
mov
es
rcrb
inc
jnp
jecxz
jecxz
dec
repz
dec
pop
push
fildl
pushf
dec
pop
inc
sub
imul
cmp
add
adc
rorb
imul
pop
fsubrl
jl
andb
rcrl
mov
fistpl
cwtl
cmp
pop
cltd
cmp
sbb
sbb
sbbl
cmp
mov
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
ret
sbb
cmpb
adcb
dec
testl
or
sbb
adc
cwtl
add
icebp
dec
subb
movntq
icebp
sub
out
sub
push
stc
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
cmc
clc
ja,pt
stc
and
sbb
xchg
sbb
inc
cmp
xor
in
inc
xchg
sahf
fs
ja
sti
sub
sbb
jno
xchg
xorl
xchg
icebp
mov
cmpsl
movsl
mov
aaa
lret
mov
shll
inc
out
ror
pop
and
xor
fs
ret
dec
lock
aaa
std
shll
mov
mov
movsl
mov
pop
aad
and
mov
sbb
rcr
and
jb
roll
xchg
mov
movsb
icebp
jecxz
mov
or
or
push
mov
cmp
push
fadd
loope
in
scas
insl
sub
icebp
inc
imul
xor
mov
dec
scas
sub
loopne
popa
add
push
mov
adc
lock
jae
push
add
sbb
cmp
mov
mov
jge
jno
jle
xor
push
loop
adc
fildl
ja
cli
jnp
jbe
mov
add
jle
cltd
push
xor
cmp
ja
shll
data16
dec
cmp
jecxz
clc
gs
and
lret
jne
fcoml
xor
sbb
loop
push
cli
add
aam
cmp
cmpsb
jae
push
je
push
pop
out
jae
push
mov
cmp
cmpsb
int3
idiv
mov
mov
cmc
xchg
sub
xchg
adc
cwtl
into
movsb
jle
adc
cmpsb
xlat
pusha
bound
lock
test
sbb
mov
adc
movsl
subb
add
fwait
pop
sbb
xlat
sub
fbstp
dec
pushf
dec
aas
mov
fwait
pusha
mov
popf
insl
lahf
fwait
mov
mov
sbb
pusha
push
jl
stos
and
jnp
aas
mov
imul
imul
popa
addr16
cltd
mov
leave
rcr
cs
insl
pop
and
push
repz
dec
inc
data16
mov
mov
jbe
adc
mov
loope
outsl
xchg
or
inc
pop
stc
add
xor
incl
sbb
pop
pop
sahf
daa
push
loope
out
mov
mov
scas
jg
decb
lcall
pushf
dec
add
pop
imul
ud2
lret
push
cmp
adc
mulb
enter
out
add
or
mov
icebp
fldz
imul
jb
pop
mov
fldl
jo
movsb
sub
inc
cmp
int
out
shrb
shl
int
lea
mov
enter
inc
mov
loopne
xor
cmp
or
xchg
pop
hlt
jo
pop
or
dec
xchg
jecxz
test
mov
lcall
rcll
aad
xor
lret
into
mov
call
or
jnp
mov
insl
stc
push
xor
lea
xor
out
mov
push
add
push
lock
push
scas
fstl
xor
and
es
fs
in
fadds
inc
rolb
aas
test
mov
in
repz
mov
sub
pusha
out
dec
adc
data16
mov
mov
daa
test
ss
adc
insl
js
inc
movsl
xchg
cwtl
out
or
push
add
add
fists
lret
dec
push
fwait
stos
or
sti
push
jp
or
dec
push
or
popf
dec
jae
add
sbb
jne
lcall
std
push
std
jno
xor
pop
ret
nop
hlt
or
sub
push
test
mov
fwait
pushf
pop
sub
lds
data16
xor
add
loopne
outsl
aas
push
add
dec
pop
cli
jne
scas
lcall
xchg
clc
xor
mov
stos
loope
cmp
pop
fistps
lcall
push
dec
int3
ret
push
andl
mov
aas
jge
js
or
adc
mov
or
adc
popa
mov
cwtl
jmp
incb
cmp
pop
call
jecxz
cwtl
jle
xchg
adc
lahf
jg
sti
outsb
stc
ret
mov
es
cmp
mov
mov
push
and
rol
inc
data16
mov
dec
out
pop
sbb
add
movsl
sbb
xor
sbb
daa
pop
mov
dec
dec
sti
xor
pushf
add
pop
sub
mov
pop
push
or
jbe
sbb
jecxz
mov
xor
pop
cmp
jae
xor
mov
call
in
scas
jle
hlt
sub
sub
cmpsb
fdivrs
dec
jne
jne
push
push
push
repz
ja
pop
sbb
es
and
mov
fstpl
cmp
jbe
jnp
faddl
lahf
inc
cli
dec
repz
sbb
aam
mov
push
dec
dec
mov
leave
jmp
pop
push
push
cmp
aaa
pop
jge
into
sub
dec
dec
sahf
push
ljmp
push
push
or
push
sub
mov
sbb
es
or
jl
or
mov
jbe
cmc
aad
hlt
movzbl
xor
or
test
repz
outsl
sbb
xchg
sarb
cld
ja
setae
sub
sbbl
jbe
jge
scas
sahf
aam
cs
cwtl
dec
cmp
jae
lea
repz
fdivr
lret
orl
in
pop
jecxz
or
jnp
mov
fidivs
std
test
xchg
add
mov
cs
sahf
mov
out
popf
dec
int3
loopne
pop
bound
lret
iret
push
ret
mov
pop
sbb
jmp
mov
stc
dec
mov
rep
je
cltd
add
cmp
dec
jge
pop
sarb
es
mov
jl
hlt
mov
and
sbb
push
gs
loop
or
pop
jne
sbb
lret
pop
icebp
inc
cmpsl
mov
xchg
scas
or
adc
fs
jecxz
dec
divb
shlb
outsb
mov
mov
in
mov
inc
jp
pop
stc
in
xchg
leave
sub
sbb
or
sbb
pop
cmp
jb
add
js
lods
hlt
popf
mov
adc
add
in
mov
push
js
popfw
nop
pop
xlat
add
sbb
or
push
adc
sti
lock
scas
and
dec
sbb
jp
mov
cmp
lds
aad
xchg
sub
push
sbb
shl
jns
cmpsl
scas
sahf
jno
arpl
xchg
out
addr16
dec
push
movsl
pop
cld
cmc
and
add
imul
int3
jb
sub
inc
cmpsl
pop
std
cmp
jecxz
outsl
push
scas
loop
mov
xchg
pop
shrl
cmp
in
jne
mov
data16
addl
and
outsl
sti
and
cltd
dec
pushf
test
xor
lods
add
mov
rclb
sbb
inc
pop
mov
pop
call
test
js
and
xchg
test
adcl
or
aam
jecxz
xchg
jno
adc
dec
add
out
sbbb
mov
ja
sti
jnp
fs
gs
iret
cmpl
mov
aas
fstl
lcall
xchg
lods
notb
push
mov
dec
cmpb
push
ficoml
es
test
mov
mov
in
cld
jae
sbb
dec
xchg
and
xor
fwait
fwait
jne
ja
les
or
fisubrs
call
mov
cmp
aad
pusha
daa
sub
je
or
je
ja
or
push
movsl
data16
test
pop
fnsave
ja
jnp
in
pusha
test
mov
and
lcall
sbb
inc
cwtl
cmp
sub
xlat
push
mov
and
mov
pop
nop
aad
fisubrs
xor
dec
jno
dec
xchg
jbe
push
dec
insb
daa
aaa
adc
or
outsb
inc
sub
dec
fisubs
fucomi
mov
addr16
scas
cltd
mov
inc
mov
bound
mov
mov
add
xchg
int3
xchg
pop
cmp
cli
jmp
dec
jae
mov
add
out
pop
movsb
jmp
in
shll
cwtl
in
mov
xchg
loopne
mov
test
push
push
ret
xchg
imul
int
addr16
test
jp
mov
xchg
lcall
nop
mov
aaa
or
clc
in
xor
pop
or
mov
mov
ret
or
arpl
adc
jle
fiadds
push
mov
and
jg
shrb
push
xor
rolb
inc
pop
lea
cwtl
in
mov
fcomps
in
stc
ljmp
fstpl
push
xor
pop
mov
adc
fdivs
fdivrs
jge
in
sub
cmp
roll
movsb
dec
outsl
mov
inc
bound
xlat
mov
cmpsb
or
aad
jl
sbb
mov
adc
mov
jl
aaa
push
push
xchg
xchg
movsb
and
shlb
jb
aam
sbb
fs
gs
xchg
push
push
inc
and
add
push
subl
pop
dec
bnd
add
out
cwtl
in
jns
hlt
ficoml
mov
mov
into
ljmp
stos
mov
sub
dec
mov
inc
in
stc
push
xor
sub
movsb
clc
sahf
sbb
sub
movsl
adc
push
sarb
div
jp
cwtl
shlb
push
cmp
sub
push
adc
aaa
lock
and
fcomps
dec
sub
mov
scas
sub
inc
decb
push
and
lods
cmpsb
stc
mov
movsb
inc
and
dec
dec
mov
out
in
das
or
or
or
mov
rcrb
pop
mov
shlb
mov
dec
and
sub
xor
flds
das
inc
mov
or
push
rcrl
dec
pusha
aas
jmp
adc
jmp
shlb
adc
dec
mov
lods
cmp
jno
arpl
adc
sahf
outsb
or
hlt
inc
gs
adc
inc
jl
outsl
push
enter
push
xchg
jp
jg
cltd
aam
sub
addb
popa
mov
inc
or
in
inc
xor
sub
fisubs
mov
daa
xor
pop
add
div
dec
dec
xor
rcll
movsl
pop
test
outsb
and
loope
data16
btc
daa
sub
movl
xchg
xor
pop
lcall
loopne
add
cli
push
jbe
loopne
sbb
mov
jbe
lods
and
xor
aam
into
repz
jmp
push
cmp
ds
ljmp
out
rcr
fimull
stos
es
mov
xchg
repnz
xchg
gs
mov
jp
adc
xlat
mov
add
inc
stos
pop
gs
imul
mov
push
in
jns
shll
mov
repnz
dec
lcall
xorl
mov
test
jnp
int3
dec
es
push
ror
jge
mov
call
outsb
out
imull
fldl
leave
or
out
xchg
insl
scas
jnp
push
inc
repnz
icebp
and
fldcw
mov
inc
pop
mov
xor
inc
ss
jnp
mov
fnsave
pop
std
mov
fs
cmpsl
xor
jne
mov
js
mov
cmpsb
jp
pop
data16
sub
adc
inc
repnz
js
mov
inc
sahf
push
sbb
sub
test
mov
push
les
push
xor
test
fbld
ret
into
int
add
xor
jae
push
jnp
inc
and
bnd
jle
mov
mov
scas
mov
dec
push
and
push
mov
lahf
mov
mov
sbb
mov
mov
pop
mov
mov
mov
inc
ja
cmc
shll
jbe
outsb
addr16
loop
adc
pop
sub
mov
orl
ds
mov
push
stc
pop
js
push
add
mov
pop
sub
movsb
jns
xor
es
sti
out
pop
aam
adc
inc
repz
push
dec
xchg
push
in
pop
jb
xchg
icebp
scas
js
add
dec
in
cs
stos
je
pop
xor
cmc
adc
dec
xchg
orl
aam
mov
sub
push
or
sti
mov
insb
fwait
push
jge
mov
repz
psubq
adc
mov
sbbl
xchg
jmp
call
mov
add
out
fs
in
jbe
test
cli
push
push
pop
in
xor
std
dec
jns
push
mov
or
stc
roll
jp
sbb
sbb
cmp
inc
cmp
call
sub
xor
jp
in
push
fisubrs
fadds
push
pop
mov
xchg
mov
scas
or
js
cmp
insb
mov
mov
ret
dec
negl
jge
pop
adc
adc
cltd
es
sti
sbb
or
stos
data16
loopne
sbb
rcll
push
cmp
lcall
push
fcomps
fsubrs
lahf
lds
inc
add
sbb
sbb
mov
dec
push
xchg
nop
xchg
andl
mov
mov
pop
enter
ja
push
pop
dec
jae
lods
out
push
into
lcall
adc
xor
pop
jno
call
cmp
ss
dec
jnp
xchg
lods
ret
mov
stos
xor
movsl
imulb
aas
add
subl
repnz
pop
in
lods
sub
sbb
stos
xchg
call
jb
fstl
jl
shll
jp
jecxz
mov
mov
xchg
or
xchg
push
iret
xlat
push
xor
pop
in
stc
sbbb
mov
rcrl
mov
mov
imul
imul
jl
xchg
stos
mov
push
mov
pushf
push
jne
das
mov
lret
push
je
scas
lret
call
inc
cmpl
and
inc
xchg
pushf
and
xor
mov
dec
add
enter
dec
ds
das
jge
jle
fidivl
sete
fcomps
add
cli
xchg
sbb
fldl
daa
push
and
decl
stc
push
xchg
mov
arpl
add
mov
add
or
loop
hlt
idivb
fistpll
icebp
pop
add
cmc
stc
xchg
iret
ss
jmp
xchg
mov
insl
jo
out
dec
mov
mov
mov
pop
push
and
sub
mov
int3
cmp
mov
dec
pop
mov
cmp
ja
jae
mov
into
dec
xchg
ljmp
test
aam
push
fistps
ja
cmpsb
mov
out
sti
mov
mov
sub
int3
cmpsl
xchg
push
mov
mov
add
or
mov
xor
jle
inc
push
add
xor
pop
data16
cmpsb
pop
ret
fisubl
lods
push
shrb
add
rcl
jno
stc
idivl
in
shlb
sbb
fldcw
xchg
mov
mov
jns
adc
mov
stos
sbb
mov
ds
or
cmp
rolb
push
stos
movsb
sub
notrack
or
ds
push
add
inc
cmpsb
jne
sbb
sbb
xor
mov
mov
sub
mov
not
cwtl
leave
mov
pop
dec
int
xchg
inc
test
imul
rcrb
ljmp
test
pop
add
lods
std
int
push
sbb
in
dec
push
pop
sbb
lods
sub
sub
jns
dec
add
pop
popa
xchg
cmpsb
mov
sarl
cmp
jecxz
sbb
or
sahf
test
push
je
pop
pusha
and
push
inc
mov
sbb
movsl
mov
mov
push
jno
out
mov
mov
shlb
cmp
jns
fbstp
aam
popa
cmp
xor
andb
sbb
mov
sbb
sbb
cld
in
mov
mov
test
call
jl
in
mov
push
fs
sarb
push
jl,pt
sub
jae
inc
outsb
lcall
nop
popf
fs
jge
lahf
and
inc
mov
ret
pop
std
lahf
lcall
inc
lds
in
imul
inc
imul
mov
mov
leave
dec
push
adc
cmc
ret
fs
outsl
xchg
push
cltd
mov
call
add
enter
daa
adc
iret
sbb
cld
and
adc
repz
dec
out
pusha
mov
lock
adc
pop
and
enter
loope
out
sbb
mov
dec
jl
ljmp
push
test
dec
stos
push
jb
jp
xor
mov
adcl
cmpl
test
inc
xchg
and
pop
pop
lds
xchg
xor
enter
and
repnz
ds
daa
push
mov
cld
cwtl
pop
mov
lock
cmp
cmpsb
adc
lea
fneni(8087
jl
aad
cmc
je
jns
mov
gs
push
xor
lock
js
adc
into
rclb
in
fcmovnbe
subb
push
loopne
mov
daa
ss
dec
cmp
outsb
jne
mov
stos
push
inc
insb
call
les
adc
mov
out
aas
scas
divl
in
int3
cwtl
jbe
in
pushf
jle
fldt
push
movsb
xor
pop
mov
push
or
dec
mov
xlat
fbld
iret
das
sub
adc
or
inc
repnz
xor
jmp
jne
sbb
jno
ljmp
pop
testl
sbb
mov
aad
push
faddp
repnz
add
call
push
pop
fldl
loope
js
nop
cld
movsb
das
fdivrl
or
sub
mov
dec
adc
sub
sahf
push
adc
mov
in
nop
imul
push
adc
inc
bound
pop
lcall
into
stos
movsb
das
in
and
jecxz
fisttpl
xchg
xor
mov
mov
movsl
scas
cmpsb
mov
sbb
ret
pop
cli
mov
mov
xchg
aam
mov
ljmp
rclb
adc
imul
aam
cltd
fildll
sub
outsb
loop
imul
ja
outsb
push
lahf
xchg
push
movl
imul
push
insl
aad
push
aaa
mov
xlat
sub
das
mov
lcall
pop
jbe
jnp
xor
ja
js
xlat
subl
shll
jmp
jecxz
xchg
or
dec
sub
jbe
push
push
adc
push
in
adc
mov
mov
and
xchg
dec
pop
jo
and
mov
sub
inc
cld
xchg
test
xrelease
inc
insl
roll
fiadds
insl
inc
add
mov
sub
and
cld
inc
lea
lcall
mov
mov
sbb
in
mov
add
lahf
addr16
es
imul
sub
movsl
fwait
or
adc
int
xor
cmp
cld
mov
ja
lret
cmp
jecxz
cmpsb
jmp
hlt
dec
mov
negb
aam
rclb
jge
jno
xor
mov
ret
inc
pmulhw
xchg
xchg
shlb
int3
xor
add
fldt
scas
mov
or
cld
pop
mov
mov
pop
inc
sbb
jmp
jno
movsb
push
jg
pop
sahf
pop
mov
push
sbb
add
addr16
cmp
push
pop
int
test
idivl
xor
inc
mov
or
repz
push
mov
ss
sbb
pop
lcall
push
mov
push
movsb
mov
and
negb
mov
push
daa
ret
sub
int3
jge
jne
clc
add
mov
pop
shl
lods
cmpb
lcall
xchg
sti
jg
push
in
hlt
out
push
sbb
jmp
cmc
loop
sahf
mov
repz
mov
arpl
test
xor
ret
dec
call
movsl
push
or
cmc
fstl
xorl
movsb
xchg
scas
xor
repz
mov
adc
out
inc
in
movsb
cmp
and
insb
pop
test
cmp
aad
mov
lret
mov
lret
mov
sub
fisubrl
sbb
out
xchg
int3
mov
in
jo
jp
scas
pop
jne
mov
test
lret
pop
jl
jecxz
cwtl
or
sbb
add
adc
js
xchg
xchg
lret
popa
xchg
sbb
ret
jnp,pt
pop
repnz
out
mov
es
adc
inc
cld
or
loope
outsl
dec
dec
lahf
pop
shl
ss
ss
lods
dec
mov
ret
fnstcw
arpl
adc
cmpsb
out
fwait
aaa
sbbl
fst
xchg
push
or
xchg
pop
repnz
dec
mov
movq
mov
stos
repz
jo
cmp
loope
lret
xchg
mov
cmpsb
xor
data16
pop
dec
sbb
push
mov
adc
aas
out
mov
in
loop
push
mov
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
inc
or
pushf
and
xor
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
jecxz
repz
imul
cmpl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
popa
dec
push
pop
inc
aaa
mov
sub
add
test
clc
mov
js
js
pop
inc
sub
cmp
or
sbb
std
clc
loope
rcrl
shrl
cwtl
xorl
inc
pop
xor
and
adc
nop
icebp
repz
lods
mov
cmc
aad
jecxz
out
sbb
ss
loopne
repnz
adc
add
dec
inc
sub
jno
jmp
pop
dec
adc
inc
sar
out
sar
and
pop
pop
aaa
adc
jmp
jns
in
js
add
push
mov
sbb
add
pop
loope
mov
std
sbb
xchg
pop
les
scas
rcll
or
sbb
test
jmp
enter
mov
xchg
js
clc
push
sbb
or
or
fdivrs
mov
mov
ret
mov
aad
xchg
mov
xor
cltd
pop
mov
fnstcw
push
xchg
cwtl
xchg
dec
dec
inc
cmp
and
or
add
icebp
icebp
loopne
ror
rcr
test
addl
dec
xor
or
fs
sahf
clc
loope
aad
movsb
aam
mov
push
and
pop
xor
fs
xor
test
test
ror
clc
negb
popa
sub
add
and
adc
add
icebp
clc
loope
rcr
shrl
cwtl
subl
pop
inc
sub
cmp
or
sbb
call
rcr
shrl
cwtl
subl
xor
mov
inc
push
push
out
xchg
adc
or
fdivl
rcrb
xor
sbb
cmpsl
mov
mov
sbb
dec
sub
or
imul
add
mov
mov
pusha
lcall
inc
outsl
ja
pop
daa
rol
xchg
std
push
aaa
shlb
jne
push
sub
and
ss
or
mov
outsb
sub
mov
mov
int3
sub
test
adc
ja
fstps
pop
pop
sub
sbb
out
rcl
lods
xchg
and
inc
jmp
xchg
add
add
jo
enter
pop
sub
lds
pushf
pop
sbb
jno
cwtl
push
sub
ret
cmp
jmp
fsubrp
int
adc
inc
dec
movntq
enter
push
aad
hlt
data16
xor
sbb
push
cmp
mov
jp
mov
xchg
jae
cmp
inc
xor
xor
bound
mov
pop
xor
or
xor
pop
or
sbb
fdivp
cld
pop
arpl
sbb
xchg
addr16
add
push
aas
in
adc
sub
ja
cltd
dec
mov
and
jge
add
push
adc
xor
jge
cltd
rcll
call
xchg
sbb
push
repnz
cli
sub
imul
cs
jmp
int3
cs
push
out
cmp
jmp
aam
ret
pop
cltd
idivb
mov
inc
lods
fs
pop
and
or
sbb
lahf
pop
shll
jge
movsb
ljmp
xor
pop
sbb
fsubl
inc
insl
sub
in
daa
dec
out
leave
fbld
enter
xchg
andb
arpl
and
enter
hlt
aas
js
test
sbb
push
je
bswap
pop
sbb
cli
int3
xor
insl
and
mov
cmp
int3
fcomps
adc
out
jmp
stos
jecxz
ljmp
cmp
sahf
cld
out
inc
dec
or
cmp
cwtl
addr16
test
lods
jne
xchg
sub
imul
jno
jnp
fwait
rcr
fs
popf
xchg
or
aas
ret
push
pop
inc
ret
fwait
add
adc
pop
and
and
mov
xor
lcall
jmp
sti
mov
ljmp
adc
sbb
pop
rcrl
pop
add
ret
mov
mov
sbb
or
int3
ffree
jl
lods
repz
inc
fwait
mov
scas
idivb
sbbb
and
sub
add
push
test
mov
xor
dec
inc
dec
rorb
nop
xchg
imul
sub
fcomps
fs
clc
ficoml
movsl
cmp
jle
mov
xor
dec
xchg
outsl
cwtl
iret
push
bound
lret
rcll
insb
add
ffree
sti
mov
in
mov
or
pop
hlt
jbe
subl
lahf
or
mov
out
lea
out
cmp
ss
push
dec
xchg
cmp
cmp
adc
shrb
cmc
cld
enter
das
out
jl
xor
sti
dec
jne
xchg
fadds
xor
insb
test
and
mov
jae
mov
mov
sub
add
scas
mov
pop
inc
nop
fbld
lcall
pop
adcl
xchg
and
mov
sahf
jl
fdivrs
icebp
add
adc
or
pop
lods
xchg
sub
inc
inc
aam
dec
sahf
jl
aad
sbb
outsb
stos
lea
jne
push
dec
rorb
pop
push
dec
scas
imulb
call
cmp
cli
stos
jns
test
out
xchg
mov
mov
and
adc
sahf
jg
leave
mov
vminss
xchg
test
push
push
imul
xchg
out
dec
mov
neg
loope
adc
scas
cmpsb
push
mov
dec
lret
jnp
cmpsb
inc
mov
xor
cmp
sarb
xchg
dec
inc
or
fidivrs
scas
idivb
and
push
cmpsl
rorl
mov
cmp
add
xchg
dec
decl
lods
rcrb
fildl
rcl
shr
pop
pop
lods
shlb
mov
mov
pop
mov
cltd
xor
and
test
rcrl
loopne
mov
inc
and
push
orb
add
mov
adc
sbb
testb
js
dec
pushf
cmc
push
xor
adc
mov
aaa
push
adcb
movsb
mov
in
mov
jo
sbb
push
pop
xchg
sub
mov
mov
cs
mov
dec
push
sbb
pushf
push
test
lret
cmp
ja
push
mov
outsl
jmp
mov
int3
inc
add
ret
jge
push
daa
movsb
mov
jae
pusha
aam
ret
adc
sbbl
pusha
sahf
sbb
cld
imul
outsl
jp
mov
adc
xchg
and
jmp
xorb
adc
inc
push
jmp
or
lea
mov
int
leave
fs
imul
pop
lahf
push
rorl
xchg
dec
jge
adc
pop
out
sub
push
lret
test
jle
cmp
aaa
jbe
rol
add
stos
ljmp
jge
pop
push
fcmovb
push
orb
adc
hlt
loope
adc
shll
movsb
jnp
std
xchg
pushf
enter
jb
xorb
jl
pushf
shlb
jbe
lds
in
sub
or
test
iret
sub
je
pushf
ror
xor
pusha
or
add
in
mov
mov
sub
add
mov
arpl
adc
sbbb
fsubs
sbb
dec
add
mov
fistl
sbb
lds
imul
jnp
ss
pusha
fbstp
aam
addr16
mov
fs
sbb
pop
lahf
pusha
dec
dec
lret
cmp
aas
inc
leave
out
lret
sbb
dec
or
jecxz
push
jmp
push
stos
adc
and
xchg
mov
stos
in
mov
mov
lods
mov
in
das
pop
mov
sbb
mov
fldcw
dec
popa
daa
movsb
jae
loop
test
jno
jg
push
xchg
xor
xor
lea
fdivrs
cmp
pop
mov
xchg
rcll
gs
cwtl
or
mov
mov
and
pop
pushf
shll
sub
inc
push
notl
xor
push
sub
cmp
in
test
gs
outsb
lea
shlb
lret
jl
and
in
clc
pop
inc
inc
mov
imul
shll
mov
je
test
xchg
notb
mov
mov
insl
imul
sti
mov
lahf
aas
mov
test
add
inc
in
cmp
and
in
je
cmp
mov
push
in
aas
pop
sbbb
jae
xchg
out
ja
mov
lea
pop
cmp
dec
and
or
cltd
iret
push
cmc
aaa
mov
dec
addr16
cwtl
dec
sbb
cmp
scas
jle
push
xchg
jge
or
mov
xor
xchg
and
ret
gs
fiadds
mov
ja
outsl
fwait
shlb
pushf
mov
adc
mov
and
pop
push
mov
xchg
sub
jb
jmp
insb
mov
movsl
shrl
jle
inc
inc
loop
adc
lret
xor
in
mov
xor
fsubs
bound
clc
dec
stos
sbb
mov
jmp
mov
push
sbbl
rcrb
pop
pop
outsb
jp
or
cmp
sub
sub
je
outsl
mov
mov
push
push
mov
ret
stos
dec
shlb
imul
sbb
jns
je
push
addr16
adc
enter
pop
xchg
jl
and
push
movsb
adc
and
lock
loopne
or
mov
and
adcb
rcrb
ja
jnp
push
mulb
bound
jns
lods
pop
sbb
repnz
mov
ds
mov
jo
push
lods
insb
cmc
aam
sbb
pusha
gs
xor
out
pop
jnp
jg
fldcw
orb
iret
test
out
xlat
stc
lahf
or
insl
sub
dec
adc
dec
int
pop
cmp
mov
idivl
jb
repnz
icebp
das
pop
pop
mov
movsl
outsl
dec
icebp
adc
jge
xor
int
push
sahf
ficoms
and
and
push
xchg
int
push
inc
popa
and
icebp
adc
xor
pop
dec
jo
out
cli
lock
data16
ret
ret
les
push
mov
aad
rcrl
loope
les
fidivrs
jge
outsb
sti
adc
ret
or
ret
sub
stc
lods
xchg
sbb
outsb
shlb
sub
es
repz
push
cmp
and
mov
mov
lock
cmp
adc
push
imul
daa
mov
lret
gs
sbb
cltd
jbe
ret
pop
mov
aam
push
and
dec
lock
or
outsb
xorl
adc
pop
js
push
int
pop
mov
fsubrl
jo
pop
cmp
or
ret
mov
sbb
out
cltd
adc
jbe
sub
pop
movsl
push
mov
gs
mov
push
ret
xchg
fbld
scas
jge
shrb
sahf
and
xor
dec
or
aas
adc
js
push
jmp
and
lcall
rolb
push
sub
insl
insb
sbb
stos
fildll
push
cltd
sbb
stos
pop
adc
stos
cmpsb
fnstcw
into
dec
mov
int
in
leave
adc
in
lcall
push
repnz
mov
out
mov
fistps
cli
bnd
xor
add
das
jns
cmc
es
push
mov
cmp
or
mov
adc
dec
cmp
mov
imul
mov
mov
pop
push
sub
xor
scas
les
cltd
and
cmova
or
lds
mov
ja
pop
cmp
imul
fimuls
test
xchg
xor
jmp
push
pushf
sub
imul
mov
jno
fs
mov
dec
lcall
mov
mov
pushl
dec
mov
lods
iret
adc
push
pop
dec
and
insl
xchg
test
dec
lds
enter
out
jle
mov
cmp
jge
pop
push
sub
jo
pushf
sbbb
mov
sbb
cmp
mov
sub
inc
outsl
addl
inc
sub
aad
push
jl
jge
inc
cltd
sbb
push
sahf
or
fmul
xchg
add
inc
frndint
ds
xchg
mov
cmp
cmp
or
loope
xchg
sub
add
mov
xchg
add
mov
cmp
imulb
mov
mov
repnz
aaa
mov
mov
dec
sub
outsl
mov
xor
bound
out
scas
sbb
lcall
sub
xlat
jmp
test
sbb
lds
aas
and
iret
test
clc
push
inc
sbb
push
test
xor
xchg
test
cmp
xchg
sbb
repnz
in
jo
sub
lea
dec
inc
hlt
pop
add
lods
das
lret
cmc
jl
cli
xchg
pop
push
mov
mov
leave
and
cmc
jo
dec
ret
pop
sahf
pop
push
cmp
es
andl
into
sahf
pop
cmp
divl
ljmp
push
or
xchg
leave
adc
jo
cwtl
test
icebp
fidivrl
jp
movsl
cmc
pop
js
adc
movsl
icebp
cmp
mov
sub
jb
leave
pop
pop
enter
loope
fists
imul
loop
push
aaa
test
js
pusha
fs
test
insl
orb
js
cld
imul
cltd
lds
jge
mov
pop
sub
popf
xor
cs
movsl
push
adc
ret
lahf
aam
lret
lret
mov
mov
mov
shlb
mov
xchg
adc
sbb
pop
xchg
inc
jb
fcomi
xchg
mov
push
mov
cli
gs
in
mov
movsl
and
int
lahf
fistpl
ds
xchg
or
neg
and
mov
sub
xchg
inc
ds
sbb
inc
enter
pop
mov
xor
outsl
addl
add
neg
ja
pop
cmp
leave
mov
push
jl
xor
shll
jg
push
adcb
adc
push
int
lret
mov
inc
sbb
divb
lea
bound
es
sub
stos
jb
and
jns
xchg
addr16
int
icebp
aad
scas
jp
xchg
add
mov
xchg
lret
in
inc
mov
fnstcw
int3
push
incl
aam
push
lea
into
xor
xor
repnz
jge
push
out
repnz
mov
fistps
cmp
js
cmc
dec
and
add
roll
xlat
je
out
dec
xchg
clc
xchg
dec
outsb
sub
mov
and
dec
xchg
imul
cs
outsl
into
cmc
data16
sbb
test
call
push
lcall
push
jbe
in
incb
testl
daa
test
sbb
pop
inc
arpl
int3
pop
jmp
lods
cltd
daa
aaa
outsb
subl
xchg
inc
xor
xlat
lret
int3
int
sbb
or
sbb
mov
pop
mov
dec
xor
hlt
push
xor
xor
xchg
dec
xor
cmp
sti
mov
out
clc
ja
sub
bound
jnp
daa
inc
aas
fidivrl
std
andl
test
jnp
pop
sbb
mov
dec
stc
insl
ja
sbb
sbb
ret
out
insl
sub
mov
or
mov
mov
jbe
loop
cwtl
adc
sbb
push
mov
clc
dec
push
xchg
out
or
idiv
pop
rcrb
cmc
hlt
sahf
cwtl
and
mov
shll
adc
repz
sub
inc
adc
aad
jne
lds
insl
test
lock
ret
mov
es
pop
mov
imul
in
mov
push
imul
sbb
jb
mov
dec
mov
xchg
adc
ret
xchg
test
mov
out
xor
xor
sbb
cmpl
lds
add
push
das
andb
push
scas
inc
repz
sub
into
pop
xchg
es
mov
fiaddl
shrl
adc
cs
les
xor
stos
or
shll
mov
es
pop
pop
cmp
popf
xor
call
fdiv
ret
js
shr
lock
imul
cli
popa
xlat
out
inc
adc
cmp
pop
cmpsb
lret
aam
jg
lret
push
std
add
add
push
loop
adcb
int3
shlb
das
shll
inc
mov
pop
add
stc
scas
in
lods
xor
inc
pop
sub
scas
mov
xor
stc
sar
and
int3
jnp
and
pop
ja
fisubrl
imul
mov
test
xchg
mov
lods
dec
movsb
jae
imul
icebp
inc
sbb
vmwrite
dec
sbbl
imul
sbb
xchg
fdivl
adc
hlt
ss
fsubp
push
mov
nop
push
inc
dec
aam
testl
in
sarb
or
test
pop
push
lock
mov
fisttpll
adc
cmp
pop
dec
sub
sbbl
je
inc
jne
loope
loopne
adc
lods
xchg
call
jle
leave
jo
mov
add
xchg
jmp
repnz
aaa
ds
add
sub
fadd
lret
or
mov
into
ss
jno
push
xchg
pushw
mov
mov
pusha
repnz
into
mov
std
add
pop
filds
mov
loop
and
minps
fadds
stos
fwait
sub
dec
dec
add
inc
mov
add
je
mov
addr16
mov
cmc
stos
fsubl
into
filds
js,pt
push
jnp
xchg
popf
push
push
sbb
cmp
adc
pop
jnp
imul
in
xor
loope
call
lea
fdivl
sub
sbb
call
mov
in
xchg
mov
and
cmp
mov
and
cmc
popa
hlt
mov
cmc
insb
in
mov
cmp
lock
neg
pushf
pop
jp
ret
stc
pop
xor
rclb
outsb
insb
fdivrl
sbb
or
icebp
add
daa
pusha
mov
jge
es
jecxz
dec
mov
sbb
push
lret
insb
data16
fwait
aaa
or
add
mov
cmp
les
and
pcmpgtd
sbb
mov
jp
xchg
mov
dec
mov
xchg
xor
and
cmp
xchg
pop
xchg
mov
adc
xchg
push
add
lcall
mov
shl
scas
fdivrl
lcall
iret
ffreep
push
push
arpl
jno
dec
cs
ja
pop
cs
inc
jl
es
fcomp
dec
jns
mov
fcmovnb
mov
mov
or
add
fs
outsb
leave
xor
push
out
arpl
pop
push
movsl
call
adc
xor
pop
stos
xor
xchg
add
js
add
orb
cmp
scas
sbb
jno
ret
jnp
mov
jecxz
jl
push
fadds
fcoml
ljmp
pop
inc
cmp
sbb
rcrl
or
sub
les
jbe
adc
and
mov
cmp
es
cmp
aad
xchg
ja
push
rcr
inc
cmp
test
stos
icebp
movsl
cltd
lods
data16
fcoml
adc
sahf
add
push
inc
mov
imulb
xchg
cld
mov
int
or
inc
push
ret
icebp
sbb
mov
push
in
movsb
pop
xor
fstpl
mov
ljmp
push
fists
dec
or
mov
inc
lret
aas
jp
add
pop
std
push
cmpsb
pop
sub
xchg
add
outsb
xlat
jecxz
dec
fwait
add
mov
cmpsl
cmp
pop
popa
mov
das
ficoms
aad
mov
xchg
mov
xchg
in
cmpsb
jp
xchg
and
lea
out
arpl
and
insb
pusha
or
scas
jne
push
add
imul
pushf
in
pop
ret
les
mov
or
int3
jbe
push
mov
loopne
pop
or
sbb
mov
cmp
insb
daa
mov
loop
roll
bound
sub
fldt
xchg
adc
aaa
daa
add
add
pushf
mov
dec
insb
sub
test
fstps
daa
lahf
and
adc
mov
mov
pop
mov
icebp
movsb
loop
sbb
jbe
pop
mov
dec
repnz
push
sbb
lahf
addl
imul
inc
pop
xor
pop
inc
outsb
adcb
sbb
test
or
mov
cmp
in
fisubrs
add
ret
xor
andl
dec
fidivrs
aaa
mov
cmpb
subb
xchg
and
repnz
or
and
enter
rolb
test
ss
rol
sbb
push
fmull
sbb
jp
pushf
add
das
addr16
sub
push
xor
sub
daa
test
xor
adcb
cs
les
test
mov
push
sub
ret
mov
pop
jge
adc
repz
clc
or
lds
pop
inc
cli
icebp
rolb
pop
scas
xor
insl
test
into
ja
lds
mov
les
mov
dec
pop
pop
cmpsb
cmpsl
fisttps
loope
pop
adc
mov
pop
jns
int
lock
in
aaa
rcrl
sbb
sbb
repz
mov
ret
add
movsb
mov
lcall
ret
ja
pop
sarb
aas
fistl
xor
addr16
pusha
dec
mov
xor
mov
mov
shrl
pop
call
jmp
lods
mov
and
or
jmp
mov
push
fstps
or
add
fisttps
sbb
or
stos
adc
mov
pop
adc
or
mov
cmp
out
inc
and
or
jp
repz
icebp
stos
push
sub
repnz
test
roll
jne
out
jae
cmp
movl
cli
inc
jmp
lods
inc
add
adc
clc
ja
ds
cmovo
xchg
jmp
jle
pop
xor
aad
mov
aas
cmp
jne
sbb
pushf
inc
icebp
sbb
push
imul
mov
std
repnz
aas
sti
bound
aaa
xor
sub
inc
les
imul
andl
xor
and
adc
add
icebp
clc
loope
rcr
shrl
cwtl
subl
pop
inc
sub
cmp
or
sbb
call
rcr
shrl
cwtl
subl
pop
inc
sub
cmp
or
sbb
call
rcr
lds
xchg
test
gs
pop
inc
sub
cmp
mov
cwtl
rcll
pop
dec
fdivs
ja
addr16
ja
testl
in
repz
ja
inc
dec
push
push
pop
cmp
sub
fdiv
enter
call
xchg
ja
es
push
pop
cmp
sub
jle
push
xlat
sahf
cmpsl
test
rolb
ja
sbb
sbb
outsb
daa
dec
js
xchg
pushf
testl
jl
movsb
imul
cmp
subl
mov
arpl
mov
add
cmpsl
mov
or
out
bound
mov
mov
dec
loop
addr16
daa
pop
adc
xchg
cltd
jmp
hlt
test
push
out
and
test
cmpsl
mov
and
inc
xchg
test
sbb
xor
dec
stos
mov
push
add
pop
cwtl
push
cwtl
je
pop
sbb
pop
daa
divl
dec
lea
inc
xlat
jg
jg
push
test
xor
aaa
dec
push
aam
inc
mov
mov
call
xchg
ja
inc
jp
push
daa
and
out
and
sbb
xchg
cltd
test
cmp
repnz
nop
cmp
fnsave
or
jnp
push
arpl
sahf
mov
mov
lahf
test
lret
xchg
out
fwait
xor
sub
pop
insb
push
inc
or
or
stos
fldcw
movsb
xchg
testl
pop
ja
inc
js
push
pop
cmp
sub
fdiv
enter
call
xchg
ja
inc
js
push
pop
cmp
sub
fdiv
sahf
dec
test
xor
pop
cs
jmp
pusha
mov
pusha
mov
dec
inc
cmp
imul
pop
push
int3
jb
and
jbe
mov
loope
inc
push
ja
addr16
sub
push
dec
movsl
adc
add
cmpsl
inc
scas
adc
lret
mov
or
inc
leave
fsubr
jae
test
idivl
xchg
adc
test
push
les
cmpsb
cs
in
dec
test
adc
leave
mov
adc
repz
cmp
and
dec
out
cmpsl
mov
aaa
mov
jbe
mov
fnstenv
mov
lea
nop
pop
mov
fbstp
mov
loop
int
lock
lret
les
dec
data16
mov
ja
pop
sub
test
inc
aad
int3
pop
xchg
mov
or
or
lret
repz
mov
inc
nop
mov
in
bound
sub
arpl
outsb
les
aaa
int
jb
xchg
popa
mov
push
shlb
jae
in
cmpb
mull
cmpsl
sub
jge
mov
subb
in
xchg
push
fldenv
adc
push
mov
or
std
cmc
jmp
dec
arpl
js
mov
movb
movsb
mov
xchg
mov
dec
popf
push
and
popf
insl
jecxz
ret
mov
icebp
fmuls
pop
fmul
inc
mov
pop
adc
lcall
mov
je
test
push
sarb
sbb
cmp
fwait
orl
cmp
adc
xchg
push
std
mov
in
lods
cmc
lret
sahf
xchg
scas
push
cmpsl
in
xor
pop
adc
sbb
jb
test
jbe
xchg
ret
enter
movsb
and
xor
sahf
dec
int
cli
push
mov
ret
ret
and
fwait
add
xor
clc
fcmove
iret
sbb
scas
movsl
sub
movsb
xchg
outsb
mov
movsl
mov
adc
test
sub
push
mov
lret
sbb
int
fidivrl
push
movsb
outsb
xor
mov
aas
scas
xor
out
lods
lahf
lods
add
fcmovu
mov
test
fidivrs
cmp
aas
das
popa
insb
push
pshufw
and
push
jae
adc
mov
mov
and
loope
lret
xor
push
inc
mov
ja
leave
adc
jmp
leave
add
inc
push
adc
mov
mov
push
repz
sarl
int3
sub
hlt
push
push
fisttpl
pop
mov
xor
and
adc
lea
add
xor
lcall
add
outsl
stc
int3
fsubl
dec
fsubl
sarl
adc
or
jmp
mov
sbb
sbb
inc
pop
pop
call
dec
xchg
mov
xor
loop
es
push
fs
stc
mov
mov
cld
sbb
or
repz
jp
outsb
arpl
pop
enter
jo
loop
pop
mov
rol
dec
mov
test
int
jl
loop
mov
aad
push
jo
clc
int
int
push
into
and
pop
push
std
or
mov
add
xor
mov
imul
xor
pop
in
sarb
mov
xchg
push
jmp
andl
cmp
into
test
dec
ret
pop
mov
test
mov
cmp
loopne
mov
xchg
in
inc
jmp
das
cmp
sub
push
ja
aam
xchg
cmpsb
and
sub
std
fs
xchg
lret
fs
lock
and
mov
push
mov
add
bound
cmp
imul
hlt
int3
inc
pop
lcall
cmpsl
cmc
fbld
jmp
pop
xchg
jl
cmc
mov
and
mov
sbb
stos
push
lock
cmp
xor
loope
imul
shlb
mov
iret
js
popa
cltd
fidivs
arpl
mov
dec
addr16
or
scas
sbb
add
rol
ret
gs
decl
or
mov
push
jg
jg
push
fidivrs
clc
mov
add
iret
in
sub
add
movsb
fsubr
push
fldcw
xchg
rorb
mov
icebp
xor
jge
push
fdivr
out
repnz
ljmp
mov
jne
lea
clc
mov
cmc
cmp
or
jns
cmp
out
xor
lret
insb
jge
xchg
sbb
push
out
mov
mov
push
out
aad
or
mov
icebp
orl
mov
xchg
jbe
mov
push
dec
pushf
int
mov
cmpsb
es
popf
xchg
or
cmp
into
imul
enter
sbb
cwtl
jo
jnp
stc
addr16
and
mov
sti
push
cmp
inc
rsqrtps
fmulp
mov
xchg
mov
subl
enter
out
ret
pop
les
cmp
out
stos
dec
cs
ja
lcall
jp
dec
vxorps
pushf
in
push
push
call
pop
dec
mov
xchg
mov
aas
lock
cltd
and
addb
xlat
inc
sub
mov
adc
pop
ljmp
push
fsubrs
mov
inc
pop
adc
add
dec
insb
cli
push
out
es
jae
dec
out
xchg
mov
or
mov
repz
mov
rcr
push
std
out
add
pop
addr16
mov
pop
sub
dec
pop
mov
xchg
rol
pop
repnz
cli
pop
scas
pop
pop
lret
mov
jle
lret
imul
ret
adc
ror
and
loop
repnz
out
sbb
imul
dec
push
or
push
sub
pop
mov
rcrb
push
dec
movb
loopne
stc
or
cmp
outsb
and
mov
lret
inc
rcl
jno
sbb
into
fwait
cmp
or
ss
sub
lds
or
pop
das
jnp
std
out
std
cmp
cmp
insb
movsl
sbb
repz
mov
push
sub
jmp
xchg
aas
mov
movsl
mov
lods
shll
mov
test
leave
sahf
dec
pop
std
insb
xchg
jae
sbb
imul
in
mov
pop
sub
mov
ja
gs
into
dec
pusha
fcompl
mov
adc
mov
lds
mov
aad
and
lea
sub
jecxz
adc
mov
add
jne
out
aas
outsl
push
shl
mov
xor
lret
in
cmp
and
ret
test
mov
cltd
lock
pop
xchg
ret
xchg
scas
jo
or
push
add
cmp
dec
mov
cmp
arpl
add
call
test
jg
inc
data16
ja
loop
and
cwtl
or
jne
pop
dec
ret
and
push
sub
fmuls
out
movntq
movl
cmp
dec
sbb
sub
fcmovnu
lahf
mov
xchg
mov
mov
addr16
sar
insl
mov
xchg
push
xor
inc
sbb
sub
push
ret
fistl
shll
roll
mov
mov
loop
out
imul
cmp
inc
push
jp
ja
jbe
inc
mov
ja
fnstenv
push
fiadds
add
xchg
sbb
sahf
enter
test
dec
in
test
in
sub
and
pushf
pushf
fildl
cli
mov
lret
push
pop
mov
sarl
imul
sub
insl
shl
adc
ret
out
xor
fldl
sub
dec
sarb
std
sbb
cmc
fisttpll
sbb
addl
dec
in
pop
loopne
pop
loopne
fstps
or
daa
aaa
jne
mov
and
lea
pop
adc
test
test
mov
lods
out
jecxz
mov
sub
pop
stos
lret
call
mov
stc
fwait
sbb
push
pop
fisttpl
icebp
mov
aas
inc
xchg
clc
xor
js
mov
les
sbb
daa
leave
mov
roll
dec
push
fldl
adc
sub
jne
jle
lret
push
fcmovnb
cld
adc
push
mov
xor
sbb
out
subb
mov
std
int
cltd
idivl
cld
and
sbb
lods
jg
gs
push
cli
pop
cmpsl
dec
inc
jp
inc
js
adc
mov
cwtl
push
inc
enter
cmp
fldenv
sbb
inc
xor
icebp
notw
cmp
pop
icebp
repnz
stos
scas
jae
push
xchg
ret
jl
shrb
idivl
mov
fidivs
or
sbb
jns
out
cmp
jle
aas
mov
inc
leave
sub
addl
xchg
lds
inc
pushf
xchg
mov
loope
and
fisubrs
xchg
ret
les
mov
repnz
jecxz
stc
lret
inc
adc
jl
pusha
adc
faddl
push
movsl
pop
enter
das
das
aam
inc
std
in
add
fisubl
sub
jp
pop
sbb
add
xor
repz
inc
test
adcb
sbb
pop
and
mov
inc
lahf
js
aad
sbb
pushf
test
mov
icebp
sub
movsb
rcl
pushf
movsl
popf
inc
pop
or
push
loope
rcl
adc
pop
dec
fs
in
mov
xchg
subl
adc
jnp
xlat
shll
cwtl
sbb
jg
or
jns
push
cwtl
gs
mov
dec
fsubs
pusha
push
xor
mov
imul
stos
xchg
adc
insb
adc
rcll
int
out
mov
adc
dec
cmp
aam
scas
test
rcll
jno
inc
aad
xor
add
scas
push
hlt
sub
sub
mov
lea
rcll
int
dec
mov
push
adc
dec
pop
rcrb
es
mov
push
add
loope
lret
lret
lcall
sar
or
dec
inc
popa
rcrb
imul
das
jle
pushw
jmp
pop
pop
cwtl
inc
and
mov
pop
das
and
lahf
adc
add
shll
loope
mov
and
sub
push
lods
and
inc
mov
push
int3
jnp
mov
lret
jle
cmp
je
dec
loopne
jae
ret
inc
sbb
push
lret
jo
std
cmp
pusha
into
insl
shll
popf
mov
js
cmp
jle
xor
cltd
xchg
adc
or
add
into
icebp
adc
xchg
popf
imul
in
clc
xor
mov
xor
loop
imul
popa
mov
push
mov
mov
clc
jp
jae
icebp
cmp
ror
and
sub
pop
cmc
out
inc
push
mov
cmp
cmp
and
fs
fcoms
add
negb
xor
add
filds
sti
inc
call
mov
sbb
aaa
stos
imulb
movsb
into
lret
ljmp
or
shll
sti
xor
clc
mov
lret
mov
mov
cmp
mov
int
enter
xor
loopne
ret
jae
xchg
aas
mov
jo
jl
mov
inc
mov
cld
xchg
fstpt
popa
pop
mov
aam
stc
adcl
rcr
stc
mov
test
notl
push
and
jno
and
sbb
or
mov
test
inc
icebp
add
sub
nopl
mov
insb
leave
and
loop
pop
rorb
lock
inc
mov
cs
or
loop
arpl
in
and
mov
push
idivl
in
xchg
and
fwait
xchg
call
shrl
dec
mov
movl
dec
notl
adc
call
jns
dec
inc
std
push
loop
in
pop
cmpsl
sti
push
test
sbb
dec
leave
mov
sbb
push
mov
pop
pop
aas
cmp
call
ljmp
inc
sbb
js
aas
lock
leave
mov
clc
jns
dec
and
std
mov
imul
pop
mov
pop
mov
pop
or
pop
cmp
adc
mov
push
call
andb
fcmovne
mov
xor
sub
pop
rorl
nop
xor
sub
cld
mov
ror
test
and
clc
ja
xchg
adc
mov
inc
out
adc
filds
popf
rcll
and
loop
xor
pusha
push
iret
xor
pushf
rcrl
xchg
jns
mov
and
push
int3
fcmovnbe
dec
cmc
ds
or
mov
cltd
lds
std
daa
ret
roll
cmp
xchg
notl
or
push
cmp
aad
pop
ret
and
sbb
cmp
cmpsb
iret
lahf
cmp
iret
jne
jp
pop
icebp
fimull
lret
push
leave
mov
jp
icebp
mov
test
push
jg,pt
sbb
sub
jb
lock
dec
adc
mov
rcrl
xchg
add
movsb
lea
sbb
push
incl
dec
adc
sahf
fcomi
dec
aas
sbb
sbb
cld
call
in
dec
sbb
lahf
ror
repz
push
stc
add
stos
adc
mov
cwtl
test
adc
testl
or
sbb
jle
pop
fisubrl
mov
cmp
jns
imul
xchg
imul
pop
cli
decl
mov
cmpl
les
cmpsb
xchg
mov
enter
pop
daa
outsl
jmp
mov
cwtl
and
mov
out
xlat
mov
aam
jbe
cltd
and
pop
fists
xchg
xchg
xor
xor
in
jl
mov
lahf
hlt
ljmp
into
fistpl
dec
js
rorb
lea
mov
aas
mov
fdivrs
pop
mov
mov
adc
pop
fnstsw
mov
mov
cmp
pop
jmp
cmp
sbb
ja
sarl
mov
inc
aad
movsl
jae
add
pop
sarb
fwait
jmp
cmc
lret
outsl
inc
lods
cld
mov
cmp
sub
scas
push
iret
daa
sub
sub
mov
mov
adc
pop
inc
jp
rorb
mov
inc
push
push
rcrl
popa
mov
jg
inc
outsl
fisubrl
loop
push
pop
imul
shlb
jno
push
in
xchg
pushl
mov
jno
ja
add
js
and
sub
xor
sti
fisubrs
dec
pop
xchg
inc
push
mov
icebp
add
dec
push
sbb
in
int3
iret
loop
std
xor
inc
adc
test
test
dec
loopne
push
shll
lds
enter
lcall
push
flds
lods
cmp
push
mov
mov
pop
mov
sbb
stc
rorl
xor
inc
lret
dec
rorb
popf
push
clc
xor
test
mov
movsb
lock
add
adc
cmc
in
cwtl
mov
sahf
in
test
and
add
lcall
xchg
ficoms
jmp
lock
add
mov
add
mov
test
inc
cs
aam
or
adc
mov
sarb
mov
push
xchg
xchg
mov
sub
popf
lea
ret
das
bound
pusha
popa
push
xchg
lods
or
cs
inc
lods
scas
pop
or
out
popa
call
std
fmulp
stos
in
hlt
out
push
lret
pop
cmp
leave
notb
cmp
sbb
cmp
cmpsb
cmp
movl
pop
cmpsb
imul
pop
fmuls
or
mov
js
add
sbb
insl
push
ret
loopne
insl
xchg
xlat
ret
popa
subl
xor
cli
sub
mov
pop
lods
jg
test
cmp
xchg
sub
jo
adc
dec
jne
dec
addr16
sbb
movb
mov
lret
jmp
aad
jge
add
pop
sahf
xchg
cs
xor
dec
pop
mov
push
fldenv
mov
decb
mov
sbb
inc
mov
ret
test
add
ret
pop
adc
adc
adc
fcmovne
jecxz
addr16
xlat
scas
arpl
jo
pop
sbb
stos
cmp
mov
lret
mov
xor
inc
mov
lret
mov
dec
test
add
enter
js
icebp
jp
lods
fwait
mov
outsb
push
cld
imul
fcmovbe
pop
xor
or
adc
into
xor
dec
mov
cmp
or
sar
stos
fwait
ja
xor
nop
popf
push
int
xor
jp
push
fs
nop
xor
pop
pop
mov
pop
flds
add
loop
cli
mov
lods
cmp
outsl
or
arpl
es
mov
int3
add
ficoms
pop
les
xchg
cltd
pop
pusha
cs
mov
push
or
cmp
jmp
clc
daa
xor
add
pop
xchg
int
lahf
pop
cli
dec
cs
loope
fisttps
shlb
mov
xor
xchg
xchg
fcompl
movsl
adc
fadds
add
in
sub
mov
cmc
popf
add
jle
jo
cwtl
std
clc
mov
adc
or
sub
jg
push
aam
and
sub
dec
mov
xchg
lret
xchg
arpl
sub
push
mov
cwtl
cltd
jp
enter
jmp
adc
test
xchg
xchg
xor
mov
and
xor
lret
cmp
xchg
test
into
add
sub
in
add
mov
mov
das
mov
fwait
xchg
ret
adc
mov
jle
push
ret
adc
mov
std
lret
sbb
pop
mov
popf
xchg
movsb
cmpsl
lods
dec
adc
push
adc
pop
push
mov
test
adc
dec
cmp
mov
movsb
sahf
xchg
stos
cld
sub
insl
lcall
jnp
loopne
lret
outsl
je
xchg
lahf
ret
xor
push
xor
arpl
and
repz
pop
fisubl
xchg
pop
loop
loopne
sti
les
xchg
mov
sgdtl
push
aas
dec
scas
lret
in
fsubp
inc
adc
dec
push
mov
sbb
pushf
jae
push
sub
xor
inc
fnsave
leave
cli
add
leave
clc
lret
adc
cmp
pop
mov
insb
clc
mov
repnz
sub
pop
scas
adc
mov
or
aad
leave
jbe
ret
and
movsb
in
push
and
rorl
push
mov
push
das
loop
cld
ljmp
push
fsubl
outsl
xor
or
mov
jae
std
push
dec
pop
cmp
and
mov
aad
inc
sti
ja
xchg
mov
xor
cmp
adc
cmpsl
test
daa
jo
fiadds
pop
dec
sub
movsb
cmpb
xorb
jge
ds
push
pop
in
mov
jno
jb
pop
inc
scas
leave
xchg
fstps
xchg
data16
xor
shr
clc
testb
xchg
shll
mov
push
cmp
sbb
xchg
and
data16
xchg
push
inc
cmp
loopne
lret
jns
pop
insl
loopne
mov
roll
fisubs
inc
push
push
lea
movl
pop
xchg
in
enter
pop
icebp
mov
arpl
push
dec
xor
aaa
adc
rcrb
inc
jno
xor
cmovs
addr16
cli
idivb
ss
aad
jns
or
inc
or
repz
in
js
sub
xor
std
dec
mov
fs
push
ret
adc
int3
das
ljmp
js
inc
xor
insb
repz
push
mov
push
out
mov
inc
sbb
dec
cwtl
js
mov
mov
push
cmpsl
pop
cmp
negl
and
loopne
orl
popl
adc
cwtl
mov
in
mov
sarl
inc
pop
sti
sbb
cmp
dec
mov
pop
je
sbb
mov
test
xchg
imul
pushf
pop
imulb
fwait
push
jnp
cmp
pop
lods
pop
inc
dec
idivl
mov
stc
mov
mov
sbb
mov
cmp
push
stos
pusha
repz
movsb
push
popa
or
sti
das
out
and
scas
test
sbb
adc
data16
aaa
push
outsb
inc
add
mov
sbbb
pushf
mov
dec
or
sbb
add
adcb
pushf
dec
out
mov
jo
pusha
dec
out
lds
loop
push
jg
insl
leave
mov
std
xchg
cmp
iret
call
and
jnp
sub
inc
or
je
inc
ret
xchg
mov
int
jmp
mov
jb
pop
insl
sbb
pushl
mov
out
cmp
repnz
xchg
jb
mov
add
xor
pop
icebp
ds
ss
lea
sub
xchg
mov
addl
lods
push
pop
pop
jmp
add
sub
mov
mov
xlat
call
xchg
ja
inc
js
push
pop
cmp
sub
fdiv
enter
call
xchg
ja
inc
js
push
pop
cmp
sub
fdiv
mov
xlat
in
cmpsl
cwtl
mov
xchg
dec
inc
js
popa
daa
sbb
or
xor
int3
out
imulb
sbb
test
cwtl
mov
xchg
xchg
push
in
js
pop
push
pusha
mov
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lods
imul
mov
js
mov
xchg
mov
add
add
add
sub
add
add
add
add
add
bound
sub
imul
add
add
pop
add
popl
dec
add
pop
add
clc
add
add
add
add
add
add
xor
xchg
add
add
add
cld
add
add
add
add
xchg
add
cmp
add
xor
stos
add
mov
sub
jns
imul
sbb
add
add
add
lcall
add
add
add
data16
add
jns
pop
add
add
flds
inc
add
pop
add
inc
add
sub
loopne
push
add
into
add
xor
imul
or
sbb
pop
add
add
add
add
add
pop
add
jge
test
add
add
add
add
add
dec
add
lret
add
add
push
add
add
mov
sbb
cltd
add
push
add
add
pop
add
add
add
mov
add
outsb
add
cmp
xor
or
add
mov
sbb
clc
add
add
add
add
cmp
or
jp
pop
add
add
xchg
add
pop
add
add
ds
add
add
add
add
add
and
add
fldl
jns
sbb
mov
push
add
add
sbb
lcall
add
cmp
and
inc
add
add
add
add
add
push
add
add
add
cmp
jbe
inc
add
add
das
add
clc
add
add
push
add
add
add
add
stc
add
jns
cld
add
loop
xor
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
adc
ltr
add
pop
add
sbb
add
pop
add
sbb
das
add
add
add
add
add
add
add
push
add
outsb
add
and
add
mov
pop
add
sbb
pop
add
add
adc
popa
add
pop
add
add
add
add
add
sbb
adc
stc
add
mov
add
add
push
add
add
add
add
add
in
or
add
add
add
add
mov
add
add
add
add
add
jno
arpl
dec
add
add
add
add
pop
add
add
data16
add
add
add
add
pop
add
pop
add
add
adc
add
cmp
in
xchg
add
add
add
add
test
jmp
add
add
add
leave
add
add
add
xor
add
add
add
inc
add
add
add
jns
cmp
add
add
add
in
dec
add
add
add
inc
add
add
push
add
add
add
add
add
jnp
cmp
cmp
lcall
add
add
jecxz
loopne
lcall
aad
push
lods
lods
das
dec
inc
int
pop
icebp
jns
fistpll
jb
scas
sbb
dec
jno
add
ret
stc
sahf
popf
dec
sbb
ds
sbbb
flds
lods
cmp
iret
mov
cmp
out
cmp
es
lods
rclb
inc
mov
push
fcmovne
jae
jmp
es
js
and
mov
call
test
or
pusha
jo
aam
loopne
outsb
adc
push
jl
xor
inc
add
fdivrp
adc
dec
mov
sbb
aas
inc
call
sbb
push
inc
xchg
rcrb
sub
add
mov
add
jns
stos
push
sub
incb
ds
and
sub
inc
inc
dec
xor
adc
insl
sbb
pop
sub
add
xchg
loopne
bnd
test
inc
lods
lret
outsl
jl
jae
inc
bound
call
stos
push
sbb
or
movsl
inc
into
cmp
enter
int3
mov
pop
add
outsb
mov
inc
mov
fdivr
cmp
pop
mov
insb
xchg
pusha
mov
add
mov
and
je
movsl
inc
leave
add
pop
nop
iret
xor
xor
sbb
popa
pusha
sub
fnstenv
and
pop
repz
outsb
jmp
jl
xchg
rol
mov
mov
sub
mov
jl
sub
lret
in
or
jge
xchg
cmp
data16
add
push
and
inc
cld
mov
xor
imul
xchg
test
mov
cld
or
xchg
pop
add
shll
inc
jecxz
imul
iret
inc
shlb
mov
mov
jnp
popa
popf
dec
cmpsb
notl
xchg
cmp
enter
test
ljmp
push
lods
stos
ret
les
std
mov
inc
stos
in
mov
into
sbb
mov
mov
and
sub
inc
jns
jl
stos
mov
mov
jg
je
rclb
testb
mov
xor
pop
adc
xchg
sub
cmp
xor
scas
sub
or
pop
sbb
dec
int3
xchg
inc
subl
lds
jne
mov
cmp
rcrb
rcll
pop
aad
je
pusha
sbb
sbb
push
fistpll
int3
cmp
in
jo
push
pop
lods
push
aas
jmp
fimuls
rcrl
sub
loopne
dec
icebp
adc
es
xchg
das
lods
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
