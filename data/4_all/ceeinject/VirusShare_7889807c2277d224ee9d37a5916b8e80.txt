call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
mov
xor
inc
stos
sbb
sub
cmp
dec
jmp
fldt
cmp
mov
pop
in
dec
test
sub
cmp
and
pop
fldt
cmp
mov
pop
in
dec
cld
mov
pop
mov
sbb
decl
sbb
addr16
push
addr16
imul
or
and
mov
cmp
mov
inc
js
jecxz
cmp
dec
ljmp
mov
xchg
sbb
jle
lock
pop
rcrb
adc
xchg
fwait
jne
insb
stos
pop
xchg
pop
mov
leave
sub
pop
outsl
jle
fiadds
jecxz,pn
test
faddl
stos
mov
clc
lret
int3
sti
cld
hlt
xor
inc
imul
push
fcoml
std
push
push
shl
cmp
insb
lret
or
adc
mov
cltd
adc
in
mov
fs
sub
insb
dec
imul
lods
or
in
dec
cld
mov
sub
cmp
dec
jmp
fldt
jp
pop
fnsave
bound
stos
dec
test
jne
sbb
cli
por
mov
jmp
addr16
and
cli
gs
jg
pop
cli
and
adc
sub
je
fnstenv
loop
fcompl
dec
cld
mov
sub
cmp
dec
jmp
fldt
cmp
mov
pop
in
dec
cld
mov
sub
cmp
dec
jmp
fldt
cmp
jle
mov
mov
xchg
xchg
lcall
insb
inc
into
sub
cs
aas
andb
xor
stos
push
aam
dec
lret
repz
std
js
outsb
adc
orl
out
insw
jns
nop
lret
mov
sbb
dec
lcall
inc
fisubs
sub
mov
rcrb
add
xor
xchg
and
repz
xchg
loope
sub
stos
inc
jl
adc
push
mov
and
jne
adc
flds
cmp
jg
pop
lahf
xchg
rorl
jnp
inc
sti
push
cli
shl
inc
ret
cmpsb
insl
mov
mov
addl
mov
test
xchg
push
cld
jne
sbb
mov
test
aam
xor
ror
and
mov
push
cli
movsl
es
cs
inc
push
pusha
inc
and
push
scas
repz
mov
xor
xchg
cmp
adc
sahf
sub
in
inc
es
xchg
ljmp
fiadds
jp
ror
cmp
out
jbe
outsl
int
lds
cli
cmp
xor
mov
dec
dec
push
sub
stc
cmpsl
inc
cmpsb
adc
xor
xchg
lods
add
push
add
or
inc
pop
nop
push
fs
add
in
mov
pushf
scas
xchg
mov
sub
xor
pop
dec
les
xchg
popf
push
out
aam
adc
sahf
mov
lret
hlt
xor
add
mov
out
sub
shll
adc
ljmp
in
dec
fwait
sbb
cmp
mov
aaa
call
or
pushf
mov
xchg
mov
test
mov
or
fucom
sub
call
cs
movsb
jnp
ja
sbb
mov
aas
push
pop
out
pop
sahf
int
push
nop
sbb
imul
lds
adc
movsb
xor
inc
mov
add
hlt
in
sbb
ret
dec
stos
in
adc
pop
idivl
je
sbb
xchg
mov
push
lods
fwait
cmp
sbb
aad
in
push
push
test
xchg
sti
hlt
test
adc
jo
dec
mov
aam
jmp
stc
loopne
cmp
daa
or
lock
imul
mov
sti
inc
shl
inc
sub
in
adc
push
xchg
xor
mov
orb
ror
adc
jge
mov
pop
add
and
push
pop
jnp
mov
pushf
lock
in
outsb
cli
out
incl
test
pushf
loopne
fildll
push
lods
or
xor
sub
push
and
out
sbb
adc
into
dec
mov
pop
mov
jmp
sub
test
jne
sub
outsl
fxch
xlat
repnz
or
bound
cmpl
sahf
dec
ret
mov
xor
cmp
xchg
rcr
add
mov
pop
notb
mov
lcall
gs
and
sub
adc
test
sub
and
lods
ficompl
mov
aaa
lods
jecxz
jo
mov
add
stos
add
add
mov
addr16
sub
dec
mov
shlb
cmc
xchg
pop
jne
scas
insb
jge
stos
and
xor
mov
stos
in
cmp
sub
fwait
shr
cmp
add
adc
lret
ljmp
shl
mov
inc
and
fldl
mov
ljmp
cmp
neg
sbbl
pop
cld
mov
adc
xchg
xchg
stc
rolb
push
sbb
xor
es
cltd
add
ljmp
icebp
mov
lret
mov
sub
ss
icebp
pop
dec
loop
xor
je
ret
push
mov
dec
adc
imul
loop
cmp
sub
rcll
imul
das
icebp
and
stos
lcall
dec
cmp
cmp
xor
push
loopne
jae
pop
mov
mov
mov
sbb
outsb
mov
iret
loope
and
negl
imul
out
hlt
or
rcrb
sub
mov
repnz
xor
mov
pop
out
std
jmp
mov
cmp
sub
insl
pop
lods
sub
fs
pusha
dec
or
lcall
aaa
jbe
add
lea
out
aas
push
mov
mov
inc
ja
xchg
arpl
pop
xchg
pop
out
push
divl
rol
loop
jo
aas
jnp
dec
xor
dec
jbe
jnp
clc
popa
sbb
gs
sbb
movsl
ss
dec
daa
pop
add
sbb
inc
mov
stos
push
out
arpl
jl
cld
pop
fbld
xor
js
add
mov
neg
test
cld
cmpsb
test
sbb
lods
das
out
and
xchg
mov
sub
sub
outsl
fdivr
movsl
dec
cmc
xchg
iret
push
jge
ret
pusha
and
fmul
jmp
loope
xchg
pop
mov
mov
ret
loopne
mov
sti
sub
shl
repnz
or
shlb
shl
mov
mov
das
sbb
aaa
xchg
out
rol
cltd
sbb
push
incl
test
cmpsb
or
addl
cltd
xchg
arpl
sbb
mov
adc
loope
push
stos
push
cltd
icebp
test
outsb
mov
xchg
stos
fs
es
test
ljmp
fistpl
sbb
in
mov
fistpll
int
mov
cmp
rcrb
dec
in
aam
sahf
pop
clc
xor
sbb
fdivrl
repnz
or
jo
shrb
push
or
repz
cmp
loope
into
mov
jp
push
mov
fwait
mov
lcall
add
sbb
aas
adc
xor
dec
out
pop
push
mov
dec
xchg
push
test
pushf
popa
cmp
dec
movsb
scas
notl
imul
inc
xchg
push
push
aaa
lret
pop
mov
stc
adc
notb
inc
push
pop
jp
fistps
outsl
lds
cli
loope
test
add
push
mov
or
sahf
xlat
mov
out
das
inc
sub
nop
push
aad
and
push
les
push
jo
ret
pushf
jae
mov
jmp
loope
rcrb
push
mov
mov
dec
lret
jno
xor
cmpsl
jl
cwtl
xor
add
push
loop
xchg
in
dec
clc
lret
adc
jo
repz
or
dec
pop
fwait
gs
mov
addr16
mov
jbe
add
cmc
jle
es
jmp
and
inc
mov
ror
add
lock
cmp
rolb
xchg
fisubs
mov
jo
call
push
sbb
inc
mov
pop
pop
push
call
fs
cmpl
xchg
aas
mov
dec
movsl
xor
dec
pop
adc
sub
pop
sbb
mov
rolb
pop
aas
fstpl
int
popf
jne
mov
das
push
std
dec
std
adc
or
insl
ja
dec
push
test
dec
dec
idivl
mov
fadds
xor
outsb
xchg
test
or
rorl
mov
sarb
cmp
inc
inc
lock
out
das
enter
cmp
fistps
jl
jb
lret
std
mov
xchg
jg
fcompl
cmp
mov
negb
lret
lods
xchg
jp
dec
push
int
call
clc
leave
aad
adc
sub
mov
push
xchg
dec
test
in
inc
cli
push
xor
test
shll
sbb
roll
lods
shrb
xchg
adc
ljmp
mov
add
xorb
loopne
xchg
das
rorl
mov
mov
cmpsb
testl
cs
aaa
mov
incb
mov
jns
popl
outsl
ljmp
imul
xchg
jmp
cmp
cmp
and
mov
lcall
repnz
adc
ds
pop
or
jmp
sbb
pop
sub
dec
push
adc
insl
jno
and
or
dec
jg
mov
mov
dec
loope
jp
add
in
mov
loopne
es
adc
inc
lea
flds
jle
pop
cmc
ds
jne
repz
fwait
nop
mov
stc
push
int3
add
pop
and
jp
cmpsb
iret
mov
sbb
aas
repnz
pop
push
aam
inc
bound
out
xor
xchg
push
ds
mov
ljmp
daa
mov
pop
inc
lds
in
cmp
sbb
dec
mov
call
mov
fimuls
es
lds
jae
cmp
ror
fnstenv
cmp
push
pop
and
mov
sub
lods
mov
mov
mov
in
lods
xor
movl
je
enter
xor
add
jnp
jns
pop
mov
lock
bound
je
lret
pop
mov
sub
int3
pop
lds
lock
xlat
dec
push
imul
out
xlat
lcall
mov
mov
push
test
movsl
or
jmp
pop
mov
nop
cmp
inc
fiaddl
popl
jnp
dec
enter
mov
aam
call
fcompl
and
dec
mov
pushf
clc
mov
nop
movsb
arpl
bound
push
sbb
fnstenv
or
stos
jle
adc
mov
lea
sbb
mov
cwtl
loopne
jl
leave
aad
push
cmovo
pop
test
push
add
int3
outsl
fsubrl
xor
pop
push
addr16
mov
sub
scas
cli
sbb
idivl
loope
push
push
mov
inc
inc
jge
xchg
repnz
jecxz
pop
mov
das
cmp
sub
repnz
mov
gs
mov
cmp
xchg
lret
push
test
push
cwtl
and
aaa
rcll
push
pop
fldenv
fistpl
lods
xor
js
repnz
hlt
lret
loopne
pushf
add
jo
jl
mov
xchg
mov
pop
push
jmp
clc
push
mov
insb
and
subb
mov
lret
jns
jne
pop
pop
bnd
repz
rorb
mov
pop
cmpb
xor
xchg
push
aaa
jne
sbb
mov
cmpsb
stos
xchg
mov
pop
lret
clc
mov
mov
add
adc
mov
xchg
lret
loopne
fs
jb
test
shlb
loop
adc
sbb
mov
cmc
in
ret
lcall
xor
scas
mov
loope
sbb
dec
fsub
push
or
cs
cmpsl
sub
popa
xchg
jbe
in
mov
rorl
popf
jne
inc
rolb
rol
loop
pop
adc
out
pop
cmp
xor
push
stc
dec
jbe
xor
addl
sti
dec
aas
inc
test
add
push
pop
mov
stos
mov
mull
imul
xor
adc
rol
xchg
daa
fwait
pop
movsl
cmc
and
or
lahf
xchg
or
xchg
pop
roll
fwait
push
insb
repz
or
pusha
hlt
fistps
mov
fs
sub
sub
lods
push
pop
rcrl
fldenv
xchg
sub
jp
jbe
dec
adc
xor
int
xlat
sbb
ret
pusha
sbb
push
push
out
imul
data16
add
push
cmp
js
push
mov
jno
cld
in
aad
jo
mov
fwait
jmp
xor
fwait
add
push
add
push
adc
sub
ljmp
push
test
pop
jno
pop
jns
mov
stos
mov
inc
lahf
pop
and
cmp
aaa
xor
xchg
cmc
fidivs
jns
cmp
fmuls
xchg
adc
sub
jmp
enter
aas
shr
pop
mov
push
lahf
cmpl
cld
xor
rep
xorb
mov
mov
inc
int
push
repnz
dec
inc
mov
into
pop
cwtl
push
idiv
and
int
cmpsl
mov
icebp
std
cmp
add
push
or
subl
arpl
out
mov
fsub
lret
rcll
mov
repz
pusha
aad
cmpsb
sti
adc
mov
loopne
popa
push
pop
pop
or
or
and
je
fcoml
mov
loop
push
xor
in
xor
xchg
inc
jno
jnp
push
pop
xlat
push
les
mov
push
scas
dec
sub
adc
adcl
inc
push
pop
test
sbb
ror
mov
push
pop
mov
test
xor
sub
mov
fistpl
jns
loope
cmp
adc
and
clc
loop
lock
fdiv
xchg
in
sub
or
loop
notl
jg
mov
scas
xor
sbb
inc
popa
arpl
arpl
pop
mov
stc
sub
data16
and
mov
cli
or
mov
fdivrs
jb
bound
pop
incl
inc
adc
adc
stos
movsl
push
lock
dec
cmpl
xchg
jmp
jae
mov
jp
xchg
enter
jbe
and
pop
lcall
mov
ror
jo
cmc
enter
xchg
sbb
pop
sahf
xor
gs
dec
mov
add
mov
inc
clc
mov
aad
sub
and
mov
bound
mov
lret
push
enter
ss
and
adc
cmp
sbb
dec
lock
pop
pop
out
and
mov
dec
fmul
mov
sahf
xchg
dec
fbstp
fdiv
jecxz
jmp
std
push
xor
ret
push
xchg
imul
test
add
out
and
mov
mov
outsb
mov
dec
mov
xchg
repz
je
in
pop
sbb
mov
addb
clc
push
jmp
xchg
adc
in
sub
mov
push
jp
push
push
mov
int
xor
dec
sub
fcomp
popf
movsb
xor
jno
jno
and
push
test
and
out
pushf
mov
xor
loopne
inc
or
lret
sbb
es
or
mov
shr
sbb
xor
or
xor
insl
movsb
and
mov
and
jo
int3
push
sbb
xchg
stos
pusha
arpl
xchg
outsb
rsqrtps
adc
sub
jno
shll
jbe
imul
ficomps
push
outsl
test
loop
jg
adc
cmp
xor
rclb
xchg
jno
sysret
push
sbb
icebp
das
popa
pop
mov
mov
cmp
lret
gs
mov
aam
sbb
mov
notl
inc
jl
stos
cs
cmp
outsl
add
xchg
movsl
ja
test
mov
pop
jne
mov
sub
sbb
outsb
fistps
push
sub
or
mov
scas
ret
sub
mov
add
push
xchg
adc
inc
and
and
sub
cmp
ret
cmp
jle
sbb
adc
sub
mov
repz
mov
push
test
bound
ret
and
pop
popa
push
imul
adc
cld
iret
mov
cmp
out
sbb
mov
lret
jg
cs
scas
mov
xchg
jle
shlb
inc
add
jmp
inc
out
pop
lea
push
es
add
out
cmp
adc
imul
out
push
and
mov
cmc
cmp
or
add
and
popa
stos
out
and
je
cmp
push
sbb
test
pop
lods
nop
mov
sbbb
aam
daa
inc
jg
pusha
fdivr
add
lods
dec
icebp
or
adcl
or
mov
jmp
mov
int3
incb
cld
mov
test
outsl
mov
lea
mov
sub
les
mov
xor
nop
fldl
fistl
mov
adc
rclb
push
jmp
je
outsl
mov
in
jmp
adc
cmp
inc
xchg
inc
iret
mov
inc
imul
ja
or
push
mov
clc
xchg
add
out
jl
sbb
push
mov
bound
mov
jbe
adc
and
call
ret
jno
push
test
sub
addl
je
and
dec
adc
hlt
loop
jl
dec
add
and
pusha
mov
mov
sub
sub
sub
ror
stos
mov
lret
push
std
xor
test
stos
into
xchg
mov
in
xor
sahf
jecxz
or
icebp
scas
xchg
sub
aam
inc
jl
fs
jbe
outsb
cmp
nop
sahf
movsb
gs
test
or
fists
les
mov
in
dec
subb
mov
and
adc
test
std
cmc
test
cltd
push
jle
in
push
lahf
scas
cmp
xor
xchg
adc
ds
cs
sub
insb
daa
mov
fnsave
test
mov
add
loop
aas
add
imull
inc
add
jl
cld
adc
dec
and
mov
and
fildl
xchg
enter
add
fdivs
dec
mov
pop
jne
fidivl
out
lea
jbe
fcomi
pop
fdivrl
scas
scas
push
dec
fsubrl
xchg
jbe
hlt
sub
inc
mov
xor
jp
inc
and
add
push
mov
aam
in
mov
rcll
dec
arpl
enter
test
and
xchg
dec
xor
sti
in
fsubrp
mov
mov
incb
shlb
jl
mov
leave
inc
fidivrl
pop
mov
adc
cli
call
add
jmp
cmp
popf
adc
jg
sbb
fs
pop
les
lock
or
inc
in
aam
out
aas
out
cmp
add
inc
xchg
push
sbb
sub
outsb
cld
sub
in
push
sub
mov
out
xchg
pop
pop
jg
sbb
imul
aam
popf
test
add
dec
xor
sbb
adc
rorb
mov
mov
popa
add
ret
movsl
js
je
enter
push
outsl
mov
pop
mov
aad
xchg
mov
inc
out
xlat
xor
scas
sub
cmp
add
sbb
adc
movsl
sbb
mov
lret
repz
lret
cmp
inc
push
outsl
xlat
mov
cmc
ds
sbb
xchg
outsl
repz
jp
jge
or
ror
and
pop
mov
inc
aaa
and
and
add
inc
mov
cmp
cmp
mov
test
les
int3
testl
sbb
les
dec
cs
or
mov
and
hlt
mov
mov
dec
xlat
scas
outsb
or
aaa
inc
shr
fisubrs
lret
sbb
xchg
sbb
outsl
inc
cltd
adc
pop
dec
jnp
and
jo
jae
adc
xchg
std
sub
mov
add
sbb
test
dec
fnstsw
cmp
pop
into
pushf
pop
mov
pop
add
outsb
ss
out
xchg
int3
icebp
lds
fwait
cltd
fcoms
ret
arpl
insl
mov
cmp
mov
pop
in
pop
pop
and
xlat
pop
rclb
popa
pop
push
xchg
js
lds
jge
and
xchg
sub
adc
popa
cmpsl
movsl
inc
push
xchg
nop
jg
xor
cli
sbb
pop
mov
cmpsb
lods
mov
xchg
rorb
dec
nop
loop
cmpsb
loop
dec
dec
xchg
movb
pop
scas
dec
xchg
outsl
std
inc
out
jne
push
dec
or
dec
cli
and
arpl
add
sub
xchg
movsl
icebp
movsl
sti
outsb
cmp
push
ljmp
int
jmp
pop
outsl
aas
lods
ret
dec
mov
push
mov
xor
out
xchg
inc
ds
mov
fisttpll
test
call
xor
in
ret
ljmp
sbb
inc
xchg
mov
mov
out
ljmp
xchg
insl
sarb
data16
cmp
popf
jmp
stc
ret
cli
push
add
arpl
stos
out
sbb
mov
fidivrs
dec
mov
lock
nop
add
inc
mov
mov
sub
jg
cld
out
shr
cli
ds
addb
out
jno
inc
pop
movsl
scas
add
jns
pop
fisubs
addr16
aaa
sbb
sbb
adcl
test
repnz
dec
and
xchg
shlb
fs
mov
fdivrl
sbb
fcompl
dec
cld
mov
sub
cmp
dec
jmp
fldt
cmp
mov
pop
in
dec
cld
mov
sub
cmp
dec
jmp
fldt
cmp
mov
pop
in
lret
cld
mov
sub
cmp
dec
jmp
fldt
cmp
mov
pop
in
dec
cld
mov
sub
dec
mov
fwait
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
popw
jbe
inc
aaa
push
daa
xchg
push
pop
addr16
sbb
sub
mov
cmpsl
cmpsb
mov
xchg
out
out
pop
jbe
inc
aaa
push
daa
es
ss
push
ja
add
xchg
testb
mov
movl
aaa
dec
daa
aas
push
cs
push
ja
call
cltd
shrb
ficoml
sbb
and
in
ss
je
bound
or
in
scas
pop
mov
pop
or
pop
ds
ljmp
incl
js
dec
sub
xchg
mov
pop
mov
mov
adc
in
mov
lea
xchg
mov
pop
cmpsb
sub
xchg
sub
data16
push
aaa
inc
stc
jg
xchg
idivl
jno
and
mov
or
xlat
sti
clc
lret
enter
fsubrl
test
es
out
xor
pop
test
pop
mov
adc
mov
int3
cmc
std
push
out
sbb
xchg
in
xchg
xchg
sbb
aaa
push
daa
xor
inc
push
ja
call
fidivs
scas
pushf
notl
jle
jbe
push
adc
dec
adc
adc
out
sahf
mov
mov
cmpsb
mov
sti
orb
pop
imul
es
dec
adc
add
and
movsl
repnz
cmc
rclb
push
lock
repnz
push
sbb
ds
outsb
gs
push
ja
addr16
testb
xlat
mov
xchg
xchg
out
pop
jbe
inc
aaa
push
daa
es
ss
push
ja
addr16
testb
xlat
mov
xchg
xchg
out
pop
pop
das
stc
pop
and
les
roll
sub
lret
jo
mov
lods
into
dec
clc
mov
adc
push
inc
pop
cli
mov
push
stos
mov
jne
jle
jbe
dec
lcall
adc
inc
stc
lahf
inc
or
cmp
sub
and
insb
es
add
stos
mov
dec
sub
mov
mov
or
push
stos
cld
jbe
push
in
lahf
rcrb
je
insl
sbb
enter
adc
fildll
leave
into
pop
lahf
ret
test
rclb
dec
and
jmp
incl
mulb
mov
fsts
fwait
xchg
int
xchg
mov
sbb
int3
lret
incl
out
in
mov
movsb
mov
or
aad
or
lret
jl
lock
jns
inc
push
insb
add
mov
dec
push
mov
popa
mov
xor
mov
loope
nop
les
out
loope
adc
aam
inc
rclb
js
adc
pushw
mov
and
xor
mov
push
and
inc
mov
aad
cmpl
cmp
xchg
das
mov
cmp
cmc
addps
or
jle
and
in
je
ljmp
mov
or
inc
jns
mov
push
cli
imull
xchg
mov
outsl
xor
insb
pop
fsubr
mov
jno
notb
sahf
jns
lret
cmpsb
div
ljmp
test
int
jne
fiaddl
fdivl
xlat
mov
sbb
repnz
lcall
insl
pop
adc
movsl
sbb
sbb
fsubl
out
insl
mov
shrb
jno
mov
inc
or
aas
jb
sub
jae
push
psubw
dec
gs
lea
out
fldl
fdivrs
stc
pop
sbb
lret
mov
jo
jg
movsl
inc
repnz
jne
pop
mov
xor
aam
cmpsb
cmp
cmpsb
inc
cli
filds
outsb
fucomi
and
fs
cmpl
in
popa
sahf
ficomps
mov
add
and
mov
jne
and
mov
sahf
mov
xchg
int3
icebp
out
mov
mov
lock
sub
mov
shll
icebp
or
mov
xor
push
sbb
mov
out
lcall
rcl
mov
cld
sub
lods
mov
xchg
mov
mov
mov
mov
xchg
sub
mov
clc
mov
mov
lods
fidivrs
repnz
mov
cmpsl
out
insl
out
mov
jnp
xchg
pusha
ret
sidtl
mov
inc
mov
cmp
test
mov
cmp
lahf
jle
and
std
inc
jae
or
push
leave
mov
and
xlat
mov
add
scas
in
sbb
push
cmp
fcom
xlat
ret
and
adc
aam
cmpsb
out
pop
test
mov
mov
repnz
or
mov
mov
dec
push
pop
int
test
xchg
cmc
mov
dec
jp
pop
fcomps
insl
sub
test
test
clc
adc
mov
sbb
mov
mov
jecxz
out
push
or
jl
and
les
daa
dec
xchg
jnp
inc
pushf
pop
xor
inc
outsl
pusha
hlt
fsqrt
sbb
pop
js
xor
xor
mov
add
dec
mov
pop
fcmovb
mov
mov
xchg
sub
pushl
dec
stc
fwait
gs
pop
mov
popa
xlat
add
lcall
mov
pop
jl
bound
daa
jmp
aam
out
pop
mov
push
stos
fiadds
mov
add
jecxz
je
pop
jecxz,pn
in
sub
rcrb
pop
fdivr
cmp
lods
add
mov
mov
push
mov
sub
nop
mov
pop
test
movsl
jns
popf
cmp
pop
jns
sbb
mov
imul
out
lcall
cltd
sub
popf
adc
pusha
cmp
lds
mov
movsb
outsl
dec
ljmp
in
cmc
or
and
fistpll
sbb
scas
mov
pushf
mov
aas
mov
jge
shrb
rcll
xor
ja
lods
mov
sbb
mov
jg
out
mov
cltd
lea
movsl
out
adc
xchg
fs
inc
inc
mov
pop
outsb
pop
sub
xor
outsl
iret
push
mov
icebp
xor
stc
adcl
mov
and
push
out
xor
and
cld
int3
or
pop
mov
mov
adc
and
dec
imul
push
adc
call
leave
adc
ror
aas
xorl
mov
mov
insb
inc
mov
stos
xchg
ds
pop
lcall
adc
pop
faddl
push
push
fs
xchg
jnp
ljmp
jge
faddl
mov
ficompl
mov
int
test
mov
mov
push
or
movsl
rclb
arpl
ds
stos
sbb
inc
mov
add
sbb
and
fcoml
mov
jo
or
sahf
pop
ja
mov
add
xchg
pop
jmp
fidivrl
push
xchg
es
push
cmc
out
push
adc
mov
scas
lods
lret
xor
mov
pop
mov
jae
bound
cmpsb
insl
in
imul
jge
dec
jne
and
jg
ja
mov
notb
mov
sub
xlat
std
mov
xor
xor
mov
int
cmp
je
fcomi
xor
jno
cmp
outsb
sub
xor
hlt
cmp
jb
popf
mov
sub
icebp
movsb
lds
adc
in
shll
inc
jbe
lahf
call
into
fcomps
xor
fiaddl
add
rcrl
and
adc
cmp
push
jg
ja
shll
rcll
dec
adc
iret
ljmp
adc
std
cmpsb
jg
cmp
adc
call
mov
aas
push
mov
outsb
push
test
out
jge
aaa
xor
cmpxchg
xor
dec
pop
inc
jb
mov
dec
adc
mov
lods
jns
inc
mov
movsb
sub
stos
mov
cwtl
push
inc
dec
cmp
repnz
vpaddw
scas
aaa
mov
incb
js
cmp
std
inc
xor
push
jmp
and
cltd
enter
dec
insl
clc
popl
fisttpll
pop
pop
jge
dec
mov
add
and
aas
loop
std
mov
jb
test
sbb
mov
cmp
push
insb
jae
mov
mov
sbb
fwait
loop
dec
enter
jnp
inc
lds
sti
adc
xchg
push
sub
and
outsb
pop
xor
icebp
jecxz
mov
cmp
in
lahf
in
and
add
lret
dec
cmpl
leave
add
loop
fxch
jns
call
ret
cmpsl
movsl
or
rorl
icebp
adc
dec
rcrl
sub
sub
in
xor
push
push
mov
sub
out
jge
xchg
adc
pop
negl
cmc
fidivs
pop
xchg
xor
outsb
mov
push
push
icebp
das
cltd
push
push
sub
aas
rclb
cmp
xchg
or
or
js
pop
lds
arpl
mov
xchg
pop
sub
push
and
mov
cld
cmp
clc
push
and
jge
cltd
push
add
adc
jmp
andl
popf
or
ja
aam
outsl
pusha
insl
sub
sarb
jns
ja
ds
add
pusha
ljmp
out
fistps
add
adc
jbe
clc
mov
cltd
mov
lods
cmp
dec
xor
ja
xor
add
pop
pusha
cmp
insl
dec
lods
pop
lcall
jg
xor
mov
push
ret
out
mov
or
pop
add
fisttpll
ret
fwait
xchg
and
mov
ret
or
sbb
push
test
call
lret
scas
jne
sub
inc
testl
clc
adc
cwtl
jmp
mov
xchg
jo
lret
push
roll
jnp
lret
dec
stos
xor
mov
scas
push
gs
sti
push
arpl
mov
mov
push
pop
or
or
negl
lahf
movsl
push
aad
or
clc
movsl
or
pop
pushw
mov
xchg
dec
repz
mov
cmp
inc
fwait
sub
sbb
fidivl
cltd
pop
out
pmulhw
inc
imul
std
test
fildll
loope
mov
mov
jmp
mov
stos
out
orl
iret
ficoms
clc
iret
or
cmpsl
out
inc
xor
sub
or
mov
clc
sbb
cwtl
mov
push
push
imul
push
imul
adc
lcall
lock
push
jo
aaa
push
xchg
mov
mov
idivl
aad
lret
daa
imul
in
imul
push
push
mov
cld
bound
ret
adc
inc
fldt
mov
pop
icebp
dec
xorb
popw
push
int3
adc
stos
pop
push
xchg
arpl
bswap
std
mov
call
pop
je
in
xchg
xlat
nop
movsl
std
sub
sbb
add
shlb
cmpsl
ret
aam
bound
and
cli
loope
repz
dec
dec
mov
fwait
mov
das
imul
jecxz
scas
mov
jno
mov
add
daa
addr16
xor
jle
jae
cmp
mov
fistl
in
jno
lds
cmc
daa
imul
dec
pop
out
push
leave
in
adc
jmp
xchg
enter
cwtl
iret
pop
jnp
sub
rcll
fidivs
clc
jnp
mov
jge
mov
cmpsl
cld
ja
add
jg
popf
mov
int
sub
push
jns
cmp
sti
sbb
fidivs
shlb
scas
jns
push
outsl
inc
mov
addb
inc
out
jb
mov
jmp
mov
movsl
push
and
xor
mov
arpl
mov
out
xor
outsb
dec
scas
repz
and
adc
icebp
sbb
adcb
mull
push
fistpll
fdivl
arpl
sbb
adc
into
jbe
and
add
push
mov
pop
push
push
sub
mov
nop
mov
sti
push
in
mov
pop
js
xchg
arpl
int3
push
push
jg
and
iret
popf
loopne
repnz
movsl
sbb
xchg
lods
jle
adc
dec
push
cmp
sub
xchg
addl
xor
jg
cs
sub
mov
pop
int3
pop
inc
or
repnz
sti
js
cwtl
xchg
movaps
or
xchg
out
pop
lods
das
inc
out
push
cltd
push
fcmovu
loopne
jne
pop
jne
faddl
push
pop
gs
imul
sbbb
test
jno
pop
inc
inc
and
adc
lock
sbb
js
dec
popf
xchg
lock
jae
lods
into
jnp
add
xlat
push
pushf
popa
addr16
pop
dec
or
fmuls
inc
stos
xor
sti
sbbl
push
lret
loop
jecxz
adc
loop
and
movsl
sub
mov
test
out
fldcw
dec
stos
cmc
cmp
push
cmp
pop
xor
cmp
inc
aam
xor
repnz
xchg
inc
daa
cli
in
mov
adc
push
stos
adc
es
push
lock
mov
cmc
popf
mov
xor
cwtl
inc
outsl
push
mov
testb
xor
pop
loopne
mov
sbb
fwait
or
and
mov
pop
repnz
push
test
adc
shr
mulb
es
repz
je
inc
movsb
and
jnp
out
iret
shll
dec
xorl
es
call
cmpsb
cwtl
adc
cmp
lret
pop
inc
icebp
adc
dec
mov
arpl
lret
leave
push
std
pop
mov
insb
ret
insb
loop
jge
mov
roll
sbb
dec
inc
in
xor
jno
es
imul
dec
out
sti
insb
add
jnp
mov
cmp
int
dec
xlat
cmp
adc
fldcw
sbb
pop
call
notl
dec
adc
push
sbb
mov
adc
stc
filds
pusha
sub
mov
xchg
je
jle
fwait
jns
push
push
imulb
popf
push
pop
push
aad
inc
hlt
mov
icebp
ffree
inc
lcall
or
mov
push
iret
pop
fimull
out
lock
loope
stc
shll
and
adc
xchg
push
scas
and
or
push
pop
pushf
popa
enter
sahf
fcmovu
mov
adc
mov
scas
ficomps
rcll
jl
mov
aad
mov
mov
mov
lea
mov
and
aam
test
and
pop
movsl
push
fcmovb
or
pop
dec
inc
push
cmc
in
cmc
nop
xor
mov
adc
xor
inc
push
insl
pop
rcl
outsl
fisubrl
add
or
js
xchg
scas
int
mov
mov
lahf
aaa
xchg
adc
and
bt
xchg
pusha
das
cmp
cmp
mov
jecxz
cmp
data16
cli
and
mov
push
int3
out
int3
sub
push
inc
pusha
mov
jecxz
xor
mov
mov
push
rcl
jbe
dec
mov
and
adc
fbld
lods
jnp
inc
enter
pop
icebp
ficoms
xchg
jp
sbb
push
mov
in
aad
lds
xchg
arpl
std
cmpsl
mov
sub
jo
fld1
dec
js
std
js
adc
fsubrl
cmpsb
or
jno
frstor
mov
add
pop
ret
sarb
mov
mov
dec
push
test
mov
xlat
jl
das
mov
adc
int
sahf
adc
xchg
mov
rolb
loopne
rsqrtps
mov
sub
shrl
mov
lods
xor
add
je
hlt
pop
fisttpl
xchg
or
bound
loopne
mov
out
cli
leave
enter
cmpsb
mov
cwtl
sbb
pop
xor
push
fbstp
xorl
imul
cmp
push
subl
mov
fwait
mov
mov
adc
stc
sti
sbb
dec
mov
sbb
pop
popf
mov
loope
scas
lods
xchg
cmc
out
push
xlat
mov
pop
fsubrl
or
fistpll
pop
cwtl
ret
cmp
fabs
callw
push
out
push
push
xor
out
lahf
adc
bound
dec
aaa
or
mov
push
sar
mov
call
fdivs
or
jae
sbb
cmp
cld
add
xlat
addr16
loope
lret
add
sub
inc
mov
cmp
aas
mov
xchg
movsb
add
scas
nop
addr16
mov
xor
xor
mov
add
sarl
push
lret
enter
jb
sub
push
mov
out
call
push
loopne
mov
jg
inc
and
fcoml
dec
jo
orl
inc
jo
test
ror
shll
sub
idiv
dec
imul
jg
mov
mov
stc
gs
scas
out
cmp
shll
sub
shll
scas
push
xchg
or
add
pop
mov
sbb
nop
inc
mov
mov
cmc
jg
divb
mov
arpl
jnp
cmpsl
mov
or
mov
jmp
pop
or
jns
push
notb
jecxz
xchg
loop
ret
test
mov
and
daa
sbb
push
pop
add
int
add
or
add
mov
jb
das
add
push
ret
bound
jp
add
jno
cmpsb
xor
mov
mov
and
rdtsc
adc
aaa
popf
cmp
xchg
test
cltd
adc
cmp
xchg
cmp
leave
jge
mov
shrl
dec
pop
mov
dec
mov
movsl
push
inc
imul
icebp
imul
cmpb
cmp
test
fwait
and
push
add
nop
dec
or
dec
mov
jae
andb
jno
loop
mov
push
mov
call
jb
stc
fiadds
or
inc
das
mov
add
xchg
lods
dec
sbb
nop
sahf
sbb
pop
xor
ret
cmp
pop
scas
add
xor
mov
sub
pop
pushl
dec
ffreep
push
lcall
jns
pop
ds
xor
icebp
mov
arpl
dec
mov
bnd
pop
xchg
shll
push
pushf
insb
call
mov
scas
sub
movsb
mov
notl
adc
jmp
dec
cmpsb
lahf
test
and
std
nop
insl
xchg
dec
je
in
ljmp
hlt
jmp
int
add
push
into
sub
popa
sbb
cmp
push
fs
xor
call
xor
das
mov
test
lea
mov
mov
mov
push
popf
lea
rcll
dec
push
jbe
in
nop
scas
ret
pop
xchg
jp
in
dec
outsl
and
movsl
inc
bound
xlat
enter
test
xor
imul
data16
addl
xorb
insb
cmp
mov
mov
mov
inc
sub
movsl
fcomps
mov
popa
jmp
addr16
add
adc
xlat
sbb
jnp
lods
test
xor
or
fimuls
mov
shr
cs
test
pop
and
push
dec
sbb
cmp
aad
pop
lahf
sbb
out
push
adc
std
aas
push
xor
xchg
repnz
mov
int
xlat
sti
dec
addl
fcmovnbe
insl
inc
xchg
xor
aas
dec
dec
ljmp
push
fnop
cltd
insb
and
xor
aad
arpl
or
in
dec
ret
ss
ljmp
ret
lock
mov
cs
pop
aas
lock
outsb
rolb
in
pop
mov
jns
call
sub
pop
add
cltd
loope
cmp
shufps
add
dec
loopne
in
clc
mov
xor
jg
mov
cmpsl
sub
dec
push
lahf
fs
enter
dec
xchg
mov
cmpsl
cmpsb
jo
int
aam
dec
sbb
push
jge
mov
hlt
cvtdq2ps
lds
repz
or
or
add
fistps
mov
cli
sar
leave
insl
insl
das
jmp
xor
es
fiadds
xor
and
repnz
nop
xchg
scas
mov
in
arpl
and
in
dec
insb
cmp
cli
test
scas
popf
push
dec
add
pop
sahf
loope
cmpsl
jge
or
subl
pop
adcl
movsl
mov
sbb
mov
push
jmp
cltd
ljmp
or
fwait
stc
je
mov
fwait
inc
cmpsl
add
stc
movsl
xor
jns
into
aas
sub
int
hlt
imul
repz
or
fs
cmp
mov
and
rorl
inc
pop
movsb
sub
mov
shrl
aaa
pop
lcall
lcall
jo
pop
jmp
ljmp
inc
push
and
filds
cmpsb
jae
inc
fwait
cmp
add
in
dec
das
enter
test
sbb
jg
cwtl
mov
test
arpl
in
std
mov
ret
lds
mov
leave
dec
cwtl
sbb
stos
add
and
js
mov
pop
pop
out
add
mov
aam
movsb
add
ret
aad
in
into
xchg
aaa
dec
inc
xchg
dec
add
lock
xor
ss
mull
add
xor
pushf
shrl
xchg
mov
pop
xchg
and
inc
movl
mov
std
stos
cmpsb
push
int
popa
mov
shlb
fstpl
fimull
outsb
jle
mov
cmp
push
add
xchg
dec
cmc
mov
jae
pop
pusha
addr16
xchg
mov
lods
aas
repnz
cmp
sbb
inc
jb
popf
ficoms
jns
pop
fidivrs
sub
ss
gs
test
iret
lret
scas
pop
cld
add
cmpsb
cmp
and
pushf
lret
stc
lret
cmp
push
sbb
jne
lcall
mov
fs
lret
xchg
xchg
adc
stos
pop
pop
mov
pop
sar
push
cmpsl
mov
inc
and
mov
add
ss
mov
xorb
test
xchg
pop
add
mov
or
ror
push
cmpsb
mov
dec
aaa
push
daa
es
ss
push
ja
addr16
testb
xlat
mov
xchg
xchg
out
pop
jbe
inc
aaa
push
daa
es
ss
push
ja
addr16
testb
xlat
mov
xchg
xchg
out
pop
jbe
inc
aaa
push
daa
es
ss
push
ja
addr16
testb
xlat
mov
xchg
xchg
out
pop
je
inc
aaa
push
daa
and
ss
xchg
cmpsl
sbb
rcl
pop
cmp
imul
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jp
xor
add
adc
pusha
adc
inc
in
mov
adcb
loop
rcl
shlb
xor
xor
adc
pusha
jo
in
inc
push
push
xor
mov
and
push
and
icebp
loopne
nop
rol
cmp
or
jns
imul
mov
repz
cmpsl
mov
rclb
dec
dec
gs
push
dec
test
sbb
jl
xchg
or
insl
enter
and
add
adc
lock
popf
nop
pop
icebp
cmpsl
and
pop
dec
lods
xor
and
and
push
testb
cmp
outsl
or
push
pop
shl
lock
loopne
fwait
mov
test
push
mov
andb
pop
cmpb
xchg
shlb
test
push
mov
push
pop
inc
inc
test
dec
mov
push
nop
orb
loope
shrl
shl
popf
dec
add
jecxz
adc
pop
mov
enter
cwtl
and
loopne
and
rolb
xor
add
pusha
inc
mov
mov
orb
rcl
scas
push
bound
gs
je
add
sbb
and
repnz
jmp
movsl
xchg
mov
and
popa
gs
and
sub
adc
test
in
test
shrb
gs
adc
adc
pusha
inc
push
push
inc
mov
nop
nop
and
lock
rcl
shlb
xor
add
adc
pusha
jo
pusha
inc
push
push
inc
mov
nop
nop
and
lock
rcl
shlb
repz
js
dec
jmp
or
mov
enter
sub
lock
jge
inc
gs
in
mov
fwait
adc
cli
sub
ret
test
rorb
dec
cmp
bound
pop
jle
aad
shll
fldcw
cmp
xor
adc
repnz
fs
cmp
or
adc
sbbl
pop
gs
and
push
mov
pop
sub
ss
sbb
pop
xchg
mov
lret
shll
punpckldq
mov
add
shll
test
in
mov
scas
mov
testb
out
or
push
mov
stos
vmovsldup
xchg
in
sub
out
add
fbstp
leave
cltd
jns
nop
jb
jo
xchg
xor
mov
xchg
pop
adc
pushf
scas
adc
sbb
sti
lock
sbb
jns
in
ficoml
cmp
pop
mov
int
mov
sbb
or
dec
pop
cmpsl
adc
stc
popa
cmc
dec
out
lcall
mov
pusha
jns
cmp
ja
jmp
das
out
je
jge
jmp
xchg
mov
and
push
xor
int
dec
aas
cmp
loope
jmp
es
iret
movsl
clc
jl
push
xchg
popf
cli
mov
adc
mov
cmp
mov
or
aaa
shlb
out
fcompl
iret
mov
mov
in
xchg
jle
lea
or
and
dec
xchg
mov
add
popa
push
sub
adc
xchg
mov
pop
push
dec
rolb
std
subb
xchg
jae
lods
jbe
and
jge
orb
add
inc
mov
sub
out
pop
mov
jge
fnsave
jno
aad
orl
hlt
and
cltd
inc
adc
mov
outsl
mov
pop
add
push
setno
out
push
stos
adc
lret
cmp
jmp
mov
repnz
xor
les
mov
xchg
adc
mov
xchg
emms
rclb
push
or
mov
sbb
push
jbe
fcomps
inc
pop
cwtl
fimuls
into
stos
push
fadds
in
mov
jl
add
shll
add
sbb
xchg
push
aaa
mov
push
imull
cli
stc
cmp
sbb
bound
dec
and
hlt
and
jne
inc
cltd
jge
fsubrs
xchg
sti
sti
push
xchg
and
mov
dec
pusha
loopne
mov
jge,pt
lcall
mov
sub
pusha
ja
or
pop
jbe
inc
sbb
mov
xchg
and
ss
inc
stos
mov
aam
pop
xlat
sub
pop
out
push
jmp
movb
dec
push
adcb
insb
repnz
mov
hlt
inc
arpl
dec
js
mov
daa
shrb
or
xor
jne
neg
sub
insl
in
aas
sbb
outsb
jne
mov
xchg
jge
pop
adc
and
fisubrs
es
lahf
add
call
sub
mov
push
ds
in
xchg
test
add
pop
pop
jg
in
movsl
pop
mov
movsb
pop
repnz
jno
movsl
stc
lret
stos
movsl
dec
popa
cld
repnz
movsl
xchg
pop
inc
fwait
aaa
imul
mov
mov
sub
in
imul
sub
mov
imul
pop
add
cmp
dec
stos
xor
add
add
xchg
inc
xor
ja
push
fnstsw
dec
or
adcl
pop
pop
movsb
cwtl
add
outsb
jp
jmp
aas
rcrl
jg
pop
mov
cmp
push
ret
or
mov
xor
cmpsb
and
dec
push
out
xchg
ffreep
loop
mov
inc
in
dec
xor
cmpsb
inc
sub
aam
adc
inc
ja
lods
in
sbb
pop
cmp
enter
nop
cltd
popf
mov
stos
clc
push
mov
mov
fsubp
icebp
cs
adc
push
xchg
xor
or
adc
mov
and
sub
push
inc
mov
fidivrl
fbld
adc
leave
sbbl
jnp
or
sbb
and
cmc
stc
jl
pop
or
add
dec
jge
cmp
pusha
add
sbb
sbb
std
or
and
jge
pusha
loop
mov
test
pop
ss
pop
insl
dec
jo
push
fidivrs
ss
mov
push
mov
sbb
inc
mov
sub
dec
leave
dec
jo
dec
sub
adc
mov
mov
mov
inc
imul
mov
lcall
orl
inc
dec
cmpsb
jg
pop
in
cmp
xchg
inc
aad
jg
push
sbb
dec
cs
mov
xor
push
push
fldcw
and
loope
daa
mov
or
lret
loop
mov
add
mov
mov
add
mov
insb
jecxz
sbb
test
pop
inc
xchg
mov
sbb
fiaddl
jecxz
rclb
test
inc
int3
jo
xor
pop
andl
sti
jge
pop
fisttpl
test
jne
scas
stos
and
shll
inc
jno
mov
push
xor
jno
jmp
aad
fidivrs
hlt
and
mov
jge
cmpsl
mov
mov
hlt
xchg
add
sti
inc
push
sbb
js
into
cmpsl
loope
ret
xor
inc
int3
push
jnp
mov
cmc
push
xlat
push
add
push
fldcw
mov
mov
lds
inc
mov
and
faddl
leave
adc
test
push
dec
inc
lock
inc
xchg
ds
cmp
xor
dec
dec
lods
out
cmp
bound
leave
add
xchg
cs
aam
mov
mov
xor
sub
pop
xchg
subl
pushf
sub
ret
nop
and
int
and
mov
sbb
jl
aad
arpl
orb
mov
call
mov
icebp
pop
test
mov
inc
sbb
scas
mov
mov
stos
mov
inc
sub
and
dec
push
stos
sarb
mov
jb
mov
mov
sbb
xchg
inc
test
div
popa
jecxz
push
xlat
jns
push
mov
dec
inc
rcll
mov
loopne
lods
mov
popf
inc
fistps
dec
mov
popf
mov
cmpsl
popf
inc
jmp
fcompl
pop
jecxz
xor
mov
dec
test
mov
aam
jmp
pop
or
pop
fsubr
stos
in
clc
sahf
xchg
shr
loop
sbb
cmpsb
fsts
jno
mov
inc
inc
neg
push
pusha
mov
inc
lea
add
push
daa
sbb
jns
daa
mov
jnp
outsb
out
cld
cmpl
pop
movsl
cmp
scas
cld
adc
xor
mov
loopne
shlb
nop
cmc
add
add
pop
xchg
mov
test
pushf
out
movntq
fsts
push
scas
aas
leave
out
mov
dec
frstor
test
push
adc
iret
mov
sbb
mov
test
mov
arpl
jno,pn
push
loope
push
das
aad
xchg
shlb
mov
adc
jbe
cwtl
outsl
rol
push
repnz
clc
test
adc
out
ss
pop
lahf
push
fxtract
rcll
mov
add
outsb
sbb
xchg
push
jmp
inc
pop
loopne
mov
test
jp
lds
pop
dec
shl
in
fs
daa
xor
dec
out
pop
mov
and
and
xor
mov
add
mov
sub
gs
cmp
cmc
aam
jb
clc
pop
pop
fwait
fimuls
xor
xchg
adc
test
jg
mov
fildll
xor
shrb
aaa
and
adc
enter
ficoml
mov
outsl
xchg
insl
or
sbb
xchg
dec
sbb
add
and
adc
xchg
sub
mov
push
loope
cmp
leave
mov
sub
add
push
fwait
adc
sbb
xorb
mov
mov
daa
ror
bound
test
imul
adc
outsl
pop
ja
add
sbb
scas
fisubl
lock
lock
mov
xor
mov
fsubrl
mov
add
jl
adc
sub
hlt
sbb
jb
push
cmp
sbb
js
ret
and
js
and
inc
adc
lahf
dec
pusha
in
out
adc
fimuls
fwait
sub
cli
data16
repz
xor
push
or
xor
into
mov
dec
pop
js
sbb
std
xchg
inc
lds
cmp
xor
xor
outsb
dec
test
loop
lcall
and
and
xor
ljmp
mov
jmp
ret
test
xor
pushf
ret
sbb
das
repnz
aas
push
xchg
push
imul
mov
call
lods
cmp
or
sub
push
mov
cmp
enter
mov
inc
and
cmp
pop
enter
sbb
adc
sti
fstp
mov
clc
fnstenv
mul
call
in
addr16
push
cmp
add
cwtl
loop
and
pushl
pop
and
adc
mov
push
xchg
mov
or
lret
popa
dec
mov
popl
xor
je
loop
mov
cmpsl
sub
inc
fcomps
or
dec
stos
xchg
outsb
jne
dec
ja
cmpsl
xchg
pushf
daa
test
adc
dec
add
data16
shlb
inc
ja
cwtl
ljmp
dec
cmp
data16
sbb
xlat
fwait
loop
sbb
test
test
sub
jno
mov
hlt
or
push
inc
adc
js
cmp
ret
ret
imul
int
push
jae
push
out
jns
lea
cli
inc
fnop
scas
jge
inc
cmp
xlat
insb
sbb
mov
sbb
xor
jecxz
adc
sahf
clc
fwait
push
repz
loop
and
pushf
cltd
vrsqrtps
mov
lahf
jmp
rclb
and
mov
inc
das
jecxz
jg
xor
mov
cmp
pop
popa
insb
add
aad
xchg
xchg
cmp
mov
clc
mov
inc
data16
jp
rol
push
jns
mov
and
push
xor
inc
jl
adc
mov
mov
xor
mov
jns
jnp
xchg
in
sahf
outsl
insb
mov
ret
mov
mov
imul
shll
fsubl
js
push
jo,pt
ror
sarb
lods
popa
and
or
push
ret
jo
test
mov
stos
adc
xchg
stos
pop
pop
nop
in
fstps
pusha
js
in
lret
inc
jb
inc
filds
jne
or
cmp
inc
mov
adc
test
popf
mov
sbb
cmp
jb
dec
pop
push
and
imul
dec
xchg
mov
call
mov
pop
sti
mull
rclb
in
pop
outsb
aad
adc
cmc
or
sub
unpcklps
iret
sbb
scas
xchg
lret
lods
adc
stc
push
xor
fucomp
mov
arpl
push
or
dec
cmp
mov
je
mov
sbb
arpl
sub
inc
fsub
mov
or
jl
inc
sahf
pop
pushf
cld
sbb
ljmp
add
lods
jp
cmp
mov
loop
push
sbb
loope
push
cmp
divl
mulb
push
loopne
inc
cmp
daa
cld
test
sub
arpl
jmp
mov
stos
mov
movsb
mov
dec
push
mov
inc
pusha
or
sbb
inc
mov
sub
or
out
icebp
test
mov
daa
xchg
inc
into
iret
outsl
mov
cwtl
scas
imul
sub
outsl
int3
aaa
sub
aad
cmpsb
test
mov
lret
mov
outsl
lea
or
ret
loope
inc
loopne
imul
add
pop
dec
cli
jl
dec
andl
push
dec
ja
test
dec
mov
stc
sub
cmp
lds
int3
inc
cltd
movsb
jnp
out
gs
jns
jbe
inc
pop
xchg
push
mov
xchg
sti
fimuls
mov
mov
push
inc
inc
or
mov
sahf
scas
push
jns
xchg
push
mov
adc
cmp
bound
int
mov
adc
add
lcall
mov
xor
dec
bound
hlt
dec
pop
xchg
jecxz
lods
inc
adcl
pop
push
lret
loopne
out
ret
out
test
nop
cltd
dec
mov
into
cld
inc
gs
enter
mov
pop
negl
mov
les
jge
mov
sti
xor
stos
test
jnp
xor
inc
or
sub
inc
mov
xchg
xor
pop
push
pop
cmp
fwait
pop
or
pop
add
rol
xchg
xor
xchg
and
xor
cmp
and
jle
loopw
mov
sub
or
cmp
push
fdivrl
sbb
push
int3
lret
cltd
data16
pop
jae
nop
mov
fldenv
pop
int
lods
mov
std
loop
pop
insb
in
aam
pop
dec
mov
pop
addr16
cmpsb
push
jmp
andb
xor
out
stos
sub
or
add
push
jne
cmp
fstps
out
rorb
add
pop
inc
fidivl
cmpsb
data16
xchg
in
xchg
scas
in
or
mov
loop
lret
fdiv
mov
ficomps
pop
push
bound
sbb
push
mov
in
push
xor
pop
shlb
rcrl
icebp
lock
lcall
popf
dec
mov
addb
inc
shll
imulb
xchg
iret
rcll
pop
ljmp
mov
jno
fwait
outsl
add
mov
icebp
scas
mov
cmp
adc
aas
ficompl
into
or
add
lcall
lds
inc
pop
or
push
inc
xor
and
and
jo
imul
aaa
pop
shlb
cmp
push
add
in
rcr
aaa
pushf
lock
addr16
inc
repnz
mov
std
test
sub
cmc
aas
dec
out
adc
test
lcall
test
and
fxch
je
enter
xchg
fdivl
push
subb
shll
sub
dec
in
sub
bound
sub
mov
and
cmc
les
das
xchg
lods
ret
cmpsl
add
das
test
scas
adc
add
jl
gs
aam
add
lds
lods
shlb
sub
ret
jmp
sub
lock
jbe
mov
shl
ret
mov
ja
mov
and
inc
mov
and
dec
dec
stc
push
and
sti
lcall
inc
xor
subb
xchg
dec
and
cmp
adcl
jp
sbb
shrb
loop
scas
push
hlt
inc
xchg
xchg
mov
sti
enter
jo
lds
dec
jo
jecxz
mov
pop
push
lods
fdivl
mov
add
cld
dec
mov
xchg
and
out
xchg
push
push
notb
sbb
mov
xchg
lea
out
sbb
jge
xchg
jecxz
xchg
dec
test
xchg
adc
or
lahf
adc
rcrl
adc
adc
jbe
xor
adc
cli
lea
or
int
add
loope
bound
dec
and
inc
add
sbb
push
mov
jae
loop
add
cmp
negl
mov
out
push
lock
lret
mov
lods
insb
enter
mov
imul
test
dec
add
pop
aas
inc
mov
sbb
lods
xor
cwtl
jecxz
dec
sub
clc
enter
jg
and
fs
sub
sbb
dec
sbb
or
int3
cltd
clc
dec
jns
xchg
jmp
jno
add
mov
pop
push
mov
add
fsubrl
orl
popa
loope
push
jns
clc
sbb
jne
cli
mov
and
adc
pop
sahf
popf
add
in
and
roll
jge
push
pop
inc
mov
mov
dec
fwait
ret
les
inc
inc
out
xchg
adc
xor
jp
popa
in
dec
in
adcb
pop
push
xor
sub
les
sbb
movsl
mov
movsl
lret
adc
push
jmp
lret
sub
and
and
mov
inc
mov
fwait
std
xchg
cmpsb
xchg
add
rorl
les
adc
dec
pushf
dec
movsl
mov
inc
mov
rolb
jp
and
xor
mov
or
or
in
mov
inc
movsl
pop
add
sub
out
stos
xlat
cmp
mov
dec
cmc
jecxz
cmp
mov
inc
std
cmc
push
mov
pop
xor
fcomip
inc
stos
xor
adc
clc
push
test
js
xor
fdivrl
dec
lea
inc
shr
fnstcw
add
push
and
lret
pop
dec
sub
ja
push
mov
cs
dec
sbb
insl
push
xchg
decl
inc
inc
imul
push
push
pop
bound
mov
addr16
add
in
sbb
ret
orl
addr16
shl
out
iret
fcomps
cmpsl
les
cmpsb
insb
push
out
push
sbb
dec
call
hlt
dec
popa
jp
cli
cmc
jne
sbb
notb
fs
xchg
cmp
sub
mov
sub
inc
inc
push
xchg
pop
insl
and
test
jl
dec
xchg
ljmp
sub
repz
pop
cmpsb
out
fldt
pop
dec
and
cmp
and
jae
mov
mov
shlb
ljmp
iret
jecxz
cmp
mov
inc
ljmp
mov
mov
fmull
addb
jg
lret
cmp
out
xchg
test
mov
xchg
data16
xchg
fsts
iret
bound
mov
mov
inc
repz
in
aas
mov
xor
outsb
cmp
sub
fiaddl
xchg
loope
push
and
xchg
push
cli
jecxz
cmp
adc
cmp
jne
sub
stc
fiadds
mov
stos
mov
mov
pushf
sti
add
bnd
and
aaa
jge
ret
cli
int3
and
cmpl
ljmp
add
shrl
cmp
sub
ror
rcrl
add
data16
push
insl
xor
sbbl
jl
int3
out
xchg
push
fnstenv
dec
or
xor
data16
push
inc
cmp
dec
scas
stos
je
sbb
inc
pop
in
mov
xor
cmp
fnstsw
pop
nop
dec
cltd
pusha
pop
xor
dec
bound
pop
inc
rcrl
mov
push
enter
aas
lods
inc
inc
sbb
xor
adc
xchg
jae
push
xchg
push
sub
xor
ds
and
sub
inc
in
mov
roll
into
mov
inc
xchg
stos
or
and
mul
out
insb
sub
lahf
mov
sbb
mov
pop
xor
mov
in
push
inc
jge
sub
adcl
movsb
cmp
adc
sahf
into
popa
icebp
pop
ljmp
es
add
and
adc
mov
dec
imul
jnp
or
mov
les
js
mov
push
adc
test
enter
push
enter
negl
adc
repz
push
jns
fmul
icebp
sub
cli
push
dec
sbb
add
push
or
push
daa
push
fldt
icebp
sar
fcoml
fidivs
jmp
and
pop
cltd
inc
add
stc
cmp
jns,pn
inc
pop
sub
fwait
sub
sahf
xchg
ljmp
xchg
mov
pop
cmp
cmp
imul
mov
adc
lds
mov
pusha
sbb
lods
ds
andb
or
aaa
push
push
mov
fistpl
loope
add
das
ljmp
adc
inc
jmp
xor
push
mov
negl
jne
in
imul
mov
mov
mov
pusha
dec
dec
imul
push
push
jo
jl
jbe
dec
aaa
lods
push
scas
and
mov
pop
add
scas
pop
mov
xor
rcrl
fstl
push
dec
jp
lds
jle
enter
out
xchg
push
jmp
pop
mov
fwait
mov
daa
iret
fs
inc
or
push
arpl
mov
testl
inc
xor
sub
mov
jg
push
or
ja
sbb
pop
jnp
sbb
fmul
pushf
and
jl
add
jo
inc
push
push
inc
mov
nop
nop
and
lock
rcl
shlb
xor
add
adc
pusha
jo
pusha
inc
push
push
inc
mov
nop
nop
and
lock
rcl
shlb
xor
push
jo
inc
push
push
inc
mov
nop
nop
and
hlt
loopne
lock
adc
add
adc
add
jo
rcl
inc
pop
dec
dec
or
nop
nop
notl
das
das
aas
sub
into
fiaddl
push
cli
sub
pop
divl
jnp
mov
negb
jle
push
or
cmp
jbe
inc
ljmp
push
stos
push
into
mov
negb
push
jp
js
sbb
shl
ret
shl
loop
xchg
jle
sub
lcall
inc
ljmp
xchg
add
jae
add
push
aad
cmc
pop
leave
outsb
pop
jns
repnz
ret
aad
inc
push
and
jecxz
stos
jbe
leave
imul
cmp
inc
pop
ficompl
ret
data16
movsl
scas
add
jb
cs
dec
or
add
test
cmp
and
test
pop
ficoms
rep
movsl
movsb
xchg
sub
sub
mov
xchg
aad
sub
dec
mov
out
inc
mov
cmpsb
movsl
cmp
mov
jns
mov
mov
add
aas
subl
xor
xchg
test
and
cmp
fnsave
inc
repz
mov
push
stos
scas
mov
push
jae
arpl
adc
cmp
add
dec
mov
adc
and
mov
iret
outsl
fcomps
repnz
rcll
mov
popf
xchg
dec
mov
push
gs
ds
mov
jp
sbb
dec
xlat
dec
adc
inc
fidivl
mov
mov
push
stos
push
mov
push
jp
or
cmp
jbe
inc
ljmp
push
stos
push
mov
push
jp
or
cmp
mov
out
insl
or
push
pop
add
fs
movsl
roll
loope
or
jmp
imul
stos
push
dec
pop
out
push
sub
mov
xor
cli
adc
dec
pop
loopne
cld
test
and
lods
fisttps
repnz
outsl
leave
add
aam
mov
pop
inc
pop
push
cmpsb
push
test
jecxz
xchg
fistpll
popf
or
ljmp
das
scas
mov
inc
lds
mov
repnz
mov
cmp
pop
out
and
push
pop
push
lods
fistl
ljmp
js
mov
ret
push
repnz
jns
jo
mov
ljmp
mov
jge
pop
fiaddl
and
scas
add
lods
jo
xchg
stc
push
ret
mov
and
stc
ret
and
pop
xchg
ss
daa
in
sbb
sub
insb
push
std
and
fs
inc
popf
xchg
clc
mov
fsub
mov
add
push
iret
aam
call
nop
icebp
xor
xchg
fnclex
imul
arpl
push
dec
and
xor
xor
dec
xchg
scas
addb
or
call
out
xchg
roll
add
adc
leave
or
xchg
jmp
aas
divb
bound
xchg
nop
add
scas
mov
and
and
int
nop
add
mov
dec
push
cmp
or
push
les
pusha
pop
push
mov
sbb
adc
xor
es
sub
xor
insb
dec
addr16
ja
cmp
mov
addr16
movsb
insb
aad
adcl
lcall
sti
das
fsub
mov
jl
gs
xor
add
pop
jae
in
in
dec
add
pop
cmp
sub
or
subl
in
das
cmpsl
es
pusha
mov
in
int3
incl
imul
xor
inc
xlat
or
jmp
mov
mov
outsb
pop
lret
jb
psubsb
mov
jne
test
pushf
call
mov
popf
xchg
sbb
subps
stos
mov
in
pop
popf
ss
mov
mov
fiadds
movsl
jge
cmp
adc
adc
mov
adc
dec
ret
sub
xchg
xor
pop
scas
mov
adc
and
test
int
xor
sahf
stos
mov
pop
outsl
pop
sub
fsin
testl
or
inc
dec
sub
xchg
mov
in
hlt
jge
adc
xorl
jecxz
aad
fwait
je
scas
dec
je
and
into
out
dec
push
mov
pop
or
jge
leave
sbb
rol
jnp
std
inc
or
lods
and
ret
inc
shlb
test
jno
fstp
pop
jae
mov
imul
or
xchg
dec
incl
stos
loop
insb
lods
adc
fcmovbe
push
insl
aam
xchg
lods
pop
and
mov
icebp
push
push
mov
sub
push
fdivp
test
pushf
das
push
pop
pop
mov
insb
or
add
mov
push
pop
test
icebp
mov
lret
pop
insl
dec
adc
add
and
mov
fisttpl
in
popf
ja
repz
out
aam
jno
xchg
jbe
pop
add
cmpsb
cmc
les
add
insl
or
push
cmp
test
sub
jg
gs
add
in
es
ret
mov
data16
sti
call
mov
inc
cld
arpl
xlat
enter
cmc
mov
and
in
lds
insl
cmp
es
or
scas
sbb
and
inc
fwait
sahf
ds
jo
xchg
cmc
subb
jp
dec
sbb
add
stos
cli
mov
int3
dec
ss
cmc
pusha
hlt
sub
dec
pop
ret
out
mov
push
or
lods
jo
mov
jne
add
in
lret
jbe
sbb
fdivs
sub
push
pop
out
jb
or
lahf
or
jbe
add
fdivrl
xchg
mov
mov
pop
out
sbb
add
mov
sbb
movsl
out
jne
ret
add
dec
pop
test
rcl
rolb
cld
out
hlt
or
fiaddl
popf
dec
cld
std
adc
mov
mov
shlb
mov
lcall
test
adc
push
adc
lock
dec
stos
mov
imulb
and
or
push
outsl
cmp
ss
cs
cmp
std
mov
cli
adc
mov
mov
and
lcall
jmp
stos
push
out
xor
jp
jg
mov
add
mov
sub
fcomps
cs
fistl
out
add
addl
cmp
pop
ss
nop
mov
adcb
or
mov
dec
pop
outsl
loopne
xchg
out
jno
clc
sbb
test
mov
cmc
pop
sub
aas
repnz
mov
dec
mov
dec
dec
fwait
inc
sub
xor
jle
loop,pt
sub
filds
pop
sub
add
lods
iret
sbb
addr16
sbb
lods
mov
jbe
jp
mov
leave
addr16
sbb
and
mov
sub
inc
xchg
std
jnp
test
shrb
fdivl
pusha
xor
pop
lods
adc
inc
test
pop
mov
add
adc
inc
fildl
aas
mov
mov
cmp
cmp
jl
jns
lds
outsb
mov
jb
out
pop
jb
inc
and
ds
enter
mov
lods
shrb
out
pop
jecxz
pusha
gs
push
test
ds
dec
pop
data16
insb
or
or
mov
fs
shrl
pop
pop
cmp
inc
xor
add
mov
sbb
fsts
dec
dec
enter
popa
sub
dec
into
xchg
fldcw
fcomip
inc
sti
or
lds
and
mov
jb
ret
mov
inc
aaa
cmp
mov
pushf
jl
inc
xor
daa
rolb
repz
adc
pushf
and
push
xor
add
pop
ficompl
add
scas
cltd
shl
cmp
fnstcw
jmp
in
mov
test
les
insb
ret
pop
iret
popf
out
cs
in
xcrypt-ecb
cmpsl
int
enter
mov
adc
outsb
loop
out
arpl
insl
push
xlat
adc
movl
lock
outsl
jo
and
pusha
or
test
cmpsl
leave
ret
jle
inc
in
xchg
enter
mov
jbe
aam
and
sbb
iret
std
cmp
ret
or
jae
pop
push
dec
jnp
aas
or
cld
mov
inc
push
repz
pop
data16
add
xchg
pop
andl
icebp
jge
push
or
xor
jg
fimuls
insl
fidivrs
inc
popa
out
movsl
add
xchg
or
outsb
repz
pop
dec
sub
xor
in
ljmp
cltd
pop
repz
stos
push
mov
rclb
mov
cmp
jmp
pop
cltd
test
shl
xor
movsl
push
mov
imul
lcall
jp
mov
aaa
dec
xor
jns
add
fcompl
mov
imul
loope
mov
nop
dec
adc
dec
lods
loop
xlat
fadds
repz
cmp
sti
in
roll
ja
adc
dec
mov
icebp
int
int3
sub
pop
inc
arpl
push
das
loope
mov
test
insb
rcll
test
scas
sub
cmovno
icebp
insb
pop
shll
mov
out
bound
xorl
insl
push
mov
jp
stc
std
pop
shl
jnp
insb
mov
mov
dec
js
cmpsl
jns
jbe
lret
or
aad
pop
lods
fmul
jl
ret
xor
dec
iret
call
adc
arpl
das
push
iret
popf
fucom
push
mov
mov
and
jbe
mov
clc
cmc
mov
stos
mov
sbb
mov
pop
cwtl
addr16
fdivrs
adc
sbb
sub
loop
add
cli
pop
add
fstpl
loop
sbb
or
or
cltd
loope
popa
xchg
cmc
enter
bound
loopne
aas
adc
ss
mov
push
lcall
pop
lock
adc
outsb
adc
sub
add
pusha
xor
or
fucomi
ljmp
mov
add
add
lea
test
pop
movb
or
mov
inc
int
fcomi
cmp
enter
int
dec
mov
pop
fsts
xchg
popf
nop
ret
bound
fdiv
test
pop
rclb
inc
push
das
add
adc
fldt
les
fimull
adc
mov
cmp
xor
cmp
fistpll
int
mov
and
cltd
data16
call
push
inc
insl
mov
fstl
xorb
test
lods
pop
sub
sbb
nop
mov
xchg
fdivs
dec
clc
sub
imul
mov
pop
add
jge
outsl
hlt
stos
bound
nop
xor
jp
sbb
mov
sbb
jmp
inc
dec
dec
pop
clc
jb
lret
stc
sbb
dec
cmp
sbb
jns
pop
xchg
iret
or
inc
dec
outsb
mov
jle
xor
lods
aad
loope
jnp
inc
fistps
test
jnp
sbb
scas
mov
xchg
xor
pop
cmp
outsb
in
xlat
push
xchg
pop
lahf
or
push
xchg
enter
ss
xor
call
inc
add
fcomps
ret
dec
jne
imul
les
xor
lea
mov
add
inc
push
mov
adc
sbb
pop
jbe
cltd
mov
ror
mov
and
or
mov
sahf
cmp
frstor
jb
mov
dec
cmp
fnstenv
pop
push
mov
pop
jne
lahf
scas
adc
cmp
iret
stos
pop
mov
sub
inc
cwtl
jo
ja
xor
sbb
push
pop
push
clc
sbb
imul
push
out
jne
pop
aad
push
push
sub
into
aam
scas
inc
dec
out
push
fwait
adc
dec
stos
sbb
pop
dec
dec
test
lods
loopne
outsl
movsl
rcr
das
adc
jg
aad
out
les
sub
push
xchg
stos
fsubrl
data16
out
jecxz
data16
fisttpll
ss
mov
stos
loope
outsb
cmp
ret
jp
adc
cld
call
fstpt
shr
loopne
mov
cli
inc
imul
test
test
stc
jae
mov
or
mov
fmuls
js
imul
pop
adc
or
fldl2t
cld
lea
ror
outsb
dec
jns
out
and
sbb
loopne
out
icebp
push
jp
push
add
cmpsl
hlt
scas
repz
lcall
dec
add
fsubrl
int
adc
lahf
cs
cmpb
lret
push
mov
stos
inc
add
lahf
mov
fisubl
mov
sarl
xor
ret
xor
imul
push
cmp
shrl
mov
dec
xor
lret
rorb
int3
movsl
subb
xorl
or
or
add
int3
or
xchg
dec
addr16
push
outsb
cwtl
adc
and
pop
xor
push
sbb
inc
and
lahf
popf
push
shll
aaa
and
dec
dec
pushf
mov
inc
adc
cmp
jp
sti
ljmp
jo
enter
xchg
enter
adc
ret
or
cld
pop
aas
lahf
mov
mov
pop
mov
or
repnz
jno
test
cltd
jge
mov
mov
pushf
sub
stos
ss
cld
xchg
xor
aad
fs
pushf
mov
inc
call
scas
icebp
cli
loope
cmpb
lcall
das
lret
mov
outsl
fwait
pop
pop
mov
pop
jecxz
push
or
lea
rcrl
shr
pop
and
and
shrb
iret
cmp
fcomi
push
push
lahf
mov
mov
jge
mov
xchg
pop
shll
lods
cmp
popa
add
arpl
mov
or
mov
arpl
imul
inc
xchg
jnp
mov
add
call
mov
fwait
push
pop
popa
pop
xchg
xor
sbb
mov
sbb
sub
fs
divb
loop
push
jnp
aaa
dec
jnp
mov
push
inc
addr16
push
xchg
mov
sbb
mov
hlt
cmp
or
sbb
enter
mov
push
mov
push
jb
lret
gs
lods
push
imul
outsl
jmp
and
jl
addr16
add
push
fs
jmp
popa
aad
jecxz
or
aam
mov
adc
pop
adc
aam
ror
mov
repz
push
mov
cmp
ltr
test
jp
sub
and
leave
mov
xor
insb
sbbl
lods
icebp
sub
jno
pop
subb
lea
addr16
call
push
clc
inc
mov
imul
addr16
mov
mov
fisttpll
das
sbb
fstpl
inc
lea
data16
fs
jp
test
lock
cmc
push
popf
stos
pop
inc
mov
or
pop
mov
movsl
push
push
add
and
push
jl
xor
dec
pop
mov
jb
xchg
repnz
xchg
cs
sti
test
xor
dec
sti
jmp
jp
pop
test
and
mov
mov
mov
cmp
sub
popl
jge
sub
mov
hlt
push
imul
push
lea
adc
xchg
hlt
xchg
enter
sub
ret
cmp
push
outsl
fnsave
pop
pop
jae
mov
mov
imul
sti
dec
insl
in
fstpt
sahf
fwait
cmc
xchg
push
popf
xchg
jo
push
int3
iret
sbbb
mov
aaa
das
push
test
adc
mov
loopne
mov
or
mov
sub
imul
rorl
jnp
and
adc
push
sbb
add
push
mov
fstl
cmp
dec
lcall
pusha
add
lods
xor
jns
lock
cld
je
sti
cmp
lcall
and
xchg
sub
out
sbb
or
fmulp
jg
push
xchg
add
sbb
rol
push
fisubs
jmp
sahf
es
stos
fmull
inc
test
ja
lea
outsb
clc
sub
pop
ds
sbb
adc
sub
or
sahf
dec
cmc
cmc
xchg
sbb
add
out
mov
cld
and
fsubl
mov
repnz
test
lcall
fldlg2
orl
pop
xchg
inc
dec
push
inc
xor
repnz
aad
outsb
jmp
xorl
aam
out
fcomi
mov
add
push
into
bound
data16
test
sbb
les
add
jne
mov
pop
dec
push
fcmovnb
sub
or
mov
and
inc
cmp
out
pop
arpl
loope
aam
scas
and
mov
add
dec
lahf
in
push
fldcw
icebp
ljmp
add
inc
jg
aas
shrb
cmpsl
rolb
push
push
mov
ficoms
mov
movsl
xchg
pop
add
and
mov
data16
jno
mov
cmp
add
mov
dec
mov
mov
adc
and
add
cmp
fnstsw
clc
cmp
sbb
out
push
cwtl
mov
mov
dec
sbb
mov
push
mov
mov
jne
subb
insb
cmp
imul
cmpsl
addr16
push
enter
mov
imul
lret
jne
outsb
inc
xor
sub
or
mov
adc
mov
jmp
gs
adc
outsb
ret
ja
pop
aas
lret
mov
mov
push
cmpsb
xchg
es
enter
out
jl
or
mov
jl
test
int
or
mov
push
jmp
es
push
mov
into
out
jnp
movsb
push
jp
stos
sahf
insl
or
xchg
mov
imul
popa
sub
insl
lret
sbb
sbb
out
cli
push
mov
cltd
leave
cmpsl
outsl
pop
fistpl
dec
imul
inc
sahf
aad
and
jp
cmp
popf
fwait
dec
icebp
scas
xor
mov
enter
pop
and
pop
pop
addl
ret
enter
add
ds
mov
mov
cli
fucomip
adc
cmpsl
and
push
xchg
pop
pop
inc
xchg
leave
bound
push
imul
sub
jecxz
movsb
sahf
in
int3
notl
adc
mov
mov
mov
repz
or
movsb
xor
jle
inc
int
std
cmp
mov
sub
sbb
clc
xor
mov
inc
sbb
inc
push
push
xor
jnp
mov
imul
repz
xlat
and
les
adc
mov
mov
pop
mov
push
mov
jnp
sbb
sbb
pop
aas
cmpsl
mov
xchg
stc
scas
mov
repnz
mov
fstp
jge
mov
adc
pop
jbe
ret
dec
orl
repnz
mov
pushf
daa
jnp
pop
sahf
add
and
jns
fcompl
push
push
lret
scas
out
xchg
adc
lods
push
popa
and
push
mov
and
lea
jmp
xor
in
push
xchg
cwtl
and
inc
out
leave
pushf
test
mov
imul
sbb
jbe
mov
lock
xor
push
inc
out
rclb
xchg
dec
icebp
test
add
xor
je
cmpsl
sub
xor
xchg
mov
pop
mov
add
test
cld
xchg
cmpsb
das
mov
mov
mul
mov
inc
sub
mov
fnsave
jecxz
mov
xor
add
sub
sti
in
aad
adc
mov
mov
or
pop
inc
push
inc
popa
xlat
pop
mov
or
cmp
in
inc
dec
cli
jno
inc
cmp
pop
mov
pusha
mov
movsl
sub
test
addr16
dec
pop
mov
movsl
mov
mov
hlt
and
sub
jmp
test
push
aaa
adc
nop
imul
sub
jne
stos
cmp
and
in
push
outsb
aad
sahf
inc
aas
adc
jmp
popf
in
push
sub
mov
das
fs
fldt
shll
sti
sbb
mov
cmpsl
data16
out
pop
push
je
and
fisubrl
gs
adc
and
and
adc
adc
stc
jle
dec
movsl
pop
sub
mov
stos
cs
rcr
ja
es
loope
lahf
xchg
out
inc
jnp
pop
aad
sbb
aas
fs
insl
cmp
inc
addl
es
test
push
push
cmp
gs
adc
arpl
sub
nop
dec
dec
fucom
cwtl
sbb
movsl
xlat
daa
mov
or
les
sub
and
xchg
mov
sarb
rcll
fwait
or
push
stos
fstpt
xchg
pop
add
xchg
loop
movsl
or
add
push
xor
adc
rorb
fistpl
mov
sub
test
enter
push
lock
mov
push
mov
jo
mov
popf
cmpsb
std
js
out
mov
out
mov
and
mov
or
dec
add
adc
cltd
cwtl
out
in
enter
mov
out
inc
jecxz
es
xor
movsl
inc
jb
nop
mov
jg
cmc
jo
repnz
pop
xlat
cmp
sbb
lock
and
mov
xchg
push
lret
or
xor
leave
cmp
les
dec
dec
fs
xlat
jae
mov
xchg
sti
push
mov
ret
fldl
jo
cmpsb
test
es
inc
cmp
push
jecxz
cmp
outsl
xor
pushf
add
xor
pusha
out
pop
in
push
outsb
mov
inc
lods
mov
and
shll
sub
jmp
or
mov
cmpsb
jno
push
xor
rorl
insl
jmp
jae
push
in
push
jae
inc
inc
fldt
push
and
adc
push
addr16
aad
lods
sub
and
js
addr16
loope
xor
rdmsr
xchg
mov
xchg
in
mov
sub
push
push
out
mov
int
mov
in
test
data16
cmp
xchg
mov
inc
in
inc
and
add
in
ret
mov
inc
out
ss
adc
popa
or
js
nop
fcmovbe
cmp
pop
or
fidivrs
jb
repz
ret
std
out
jo
cmp
jle
sub
fists
inc
jmp
imul
jae
xor
or
cli
mov
lcall
negb
push
jp
or
cmp
jbe
inc
ljmp
push
stos
push
mov
push
jp
or
cmp
jne
push
ljmp
push
stos
pop
mov
iret
push
jle
or
jle,pt
pop
fmulp
out
jle
mov
lcall
or
insb
push
or
jns
imul
cmp
and
xor
movsl
xchg
in
ljmp
add
dec
push
jp
push
cwtl
movsl
mov
lcall
aad
add
xor
gs
push
bound
mov
movsl
mov
iret
loopne
xchg
fwait
mov
sbb
mov
scas
in
stos
xor
cmpsb
add
xor
addb
mov
inc
test
pusha
mov
je
push
fcomip
xor
rcrb
int3
stos
or
cmp
lea
gs
jno
out
dec
fimuls
xor
ret
push
jp
dec
lret
push
add
ljmp
jmp
mov
lret
xchg
pop
insl
push
adc
jo
or
inc
lds
lret
insl
mov
sub
fstl
rorb
cmpsb
mov
inc
push
cli
cmp
lahf
cmp
stos
lods
inc
and
fwait
jae
loopne
or
aam
cli
push
and
xor
gs
push
arpl
mov
movsl
xchg
xchg
mov
in
aad
lds
jns
dec
sub
or
and
push
and
pop
repnz
out
loope
xorl
data16
dec
das
adc
add
push
cmp
jmp
into
loopne
mov
xchg
fimull
jbe
and
dec
push
jp
push
lcall
cmc
lret
sbb
sub
gs
push
jp
push
lcall
cmc
lret
sbb
lea
outsb
das
daa
mov
mov
xor
cmpsb
hlt
mov
popa
ficoml
push
fisubl
xchg
adc
int
push
insb
imul
mov
xchg
in
sbb
insl
jge
push
iret
frstor
pusha
loope
lods
jno
sbb
mov
into
or
popa
or
dec
or
and
mov
loopne
fs
cmp
push
dec
adc
sub
mov
mov
inc
jns
push
das
ficoms
mov
cmpsl
ss
adcb
adc
lcall
sar
lret
adc
jbe
std
imull
stos
xor
and
xchg
fsubrl
add
pop
loop
cmpsl
jbe
or
sub
cmp
scas
test
mov
mov
inc
lods
jns
mov
stos
movsl
mov
loopne
rorb
pop
in
in
push
scas
mov
aas
sub
aaa
jl
pop
outsl
add
test
mov
or
jle
dec
dec
cmpsb
xchg
in
ds
push
mov
pusha
mov
jo
mov
add
in
sub
add
mov
cmp
mov
imul
cltd
xor
leave
mov
loopne
jmp
push
nop
fs
js
filds
dec
mulb
in
xor
pop
shl
xor
lcall
pop
rcrl
add
cmp
push
sti
push
cwtl
rcll
xchg
out
bound
dec
jae
std
mov
lahf
sub
mov
inc
sub
inc
sbb
add
jns
pop
incl
scas
and
repnz
mov
or
pushf
cld
addl
stc
dec
dec
outsb
pop
jnp
fs
sbb
fwait
dec
into
mov
inc
sub
imul
sbb
lea
jge
rorl
jmp
iret
dec
stc
jne
mov
sub
ja
mov
pop
insb
sbb
or
sub
rorb
lea
cmc
mov
and
sti
lods
add
jecxz
lock
sbb
ja
cwtl
sbb
xchg
jae
jge
jno
stos
pop
sbbl
mov
popf
pop
push
push
push
lods
jecxz
les
add
and
and
xor
adc
int3
mov
sar
jge
repz
push
icebp
lret
jbe
mov
sub
xlat
jge
ss
push
jnp
js
decb
sub
sub
pop
push
aas
jbe
repnz
dec
dec
out
enter
inc
mov
test
xlat
imull
or
adc
push
or
push
icebp
jg
push
fisttpll
js
idivb
xchg
dec
leave
xor
add
stc
and
mov
scas
lods
fstp
xor
push
jle
mov
ret
push
xchg
push
adc
ljmp
or
inc
cmp
or
inc
insl
ds
cmp
xchg
fisubrl
jnp
adc
inc
add
jbe
pop
pusha
mov
xor
jns
repz
inc
int
mov
sub
out
loopne
jne
shr
adc
jl
testl
out
or
adc
imul
xchg
ja
adc
sbb
shr
lret
push
or
cld
loop
add
xor
jb
sbb
jg
cld
mov
push
je
mov
aam
mov
jge
and
push
sti
lret
xchg
add
dec
jmp
insb
pusha
aad
lret
je
imul
mov
inc
or
xor
hlt
inc
call
nop
mov
setge
jb
push
xlat
inc
mov
mov
add
out
mov
adc
pusha
fs
inc
add
in
fdivl
sbb
mov
sbb
mov
pop
into
add
pop
popa
jge
sub
pop
mov
ds
cs
sub
mov
sub
rorl
lock
mov
mov
mov
push
mov
sub
pushw
stc
dec
pop
sub
xor
push
xchg
stos
pusha
addr16
adc
sub
pushf
jg
movsb
jae
icebp
xlat
fcmove
imul
imul
xor
and
lock
test
lds
cmp
in
dec
pop
xrelease
jmp
mov
jg
cmpsl
leave
sub
dec
cmp
scas
aam
jp
dec
xchg
push
mov
test
sbb
loopne
push
inc
mov
xchg
sahf
and
and
dec
sub
mov
pop
cs
es
in
and
fs
pushf
lods
sbb
outsb
js
mov
adc
inc
add
dec
mov
xchg
sbb
and
mov
add
dec
js
push
hlt
jecxz
cmp
cmpb
pop
push
mov
call
mov
scas
xchg
leave
mov
imul
imul
or
je
mov
sub
fwait
pop
jo
mov
fstpt
out
add
dec
mov
negb
cwtl
pop
mov
ret
iret
stos
add
loopne
mov
sbb
sahf
mov
mov
inc
stos
pop
xchg
ret
fidivl
add
fisubrs
lahf
loop
push
cmp
mov
scas
mov
xchg
inc
push
cmp
in
int3
imul
orb
add
push
mov
cmp
pop
daa
ficompl
cmpsl
aam
inc
fisubl
lret
sahf
out
lock
xchg
mov
dec
adc
ja
sbb
divl
mov
lds
inc
mov
lret
mov
mov
push
sahf
mov
in
push
lds
cmp
mov
stos
jge
ror
pop
stc
dec
mov
mov
in
shlb
in
scas
add
fwait
and
dec
add
mov
adc
sbb
cltd
aaa
fnsave
hlt
les
mov
fmuls
ret
sub
inc
dec
mov
xor
inc
inc
popf
add
mov
enter
dec
add
stos
aas
push
pop
pop
movsb
negb
mov
out
jae
enter
arpl
adc
jmp
loop
repz
fnstcw
sub
daa
imul
mov
sub
je
dec
xor
push
out
xchg
sahf
pop
push
in
test
jge
aaa
int3
xchg
bts
push
out
out
gs
outsl
fcomp
cmc
imul
aad
xchg
in
or
stos
mov
sti
lods
or
add
sbb
lret
inc
jbe
dec
mov
sbbl
jns
fisubs
mov
push
mov
lock
mov
push
jecxz
cs
icebp
cmp
fbstp
dec
ss
call
mov
pop
jp
lock
and
mov
mov
add
sub
test
jecxz
int
push
and
into
dec
rorb
clc
int3
pushf
lds
lea
mov
leave
mov
dec
sbb
cmp
xlat
adc
in
leave
shrl
imul
mov
jge
daa
imulb
cli
insl
fisttpll
pop
mov
dec
fdiv
js
jmp
xchg
in
xor
xchg
push
addr16
push
xor
andb
lea
popf
push
dec
xor
and
adc
pop
mov
jmp
xlat
adc
arpl
or
les
or
or
shrl
push
cmpsb
fisttpl
jne
rcrl
mov
jb
in
orl
xor
jg
hlt
or
xchg
adc
and
pop
push
sbb
daa
xchg
aam
rcrb
sub
push
xchg
jnp
jg
test
loop
and
mov
int
pusha
cld
sahf
ja
or
mov
jl
shrl
mov
in
xlat
sbb
pop
and
insl
inc
jne
mov
insl
push
je
into
ror
mov
jb
cltd
mov
adc
push
sahf
cmp
sbb
sub
pop
aaa
or
jge
xor
mov
jns
add
and
shl
ds
xchg
js
ret
in
je
les
nop
lcall
dec
jmp
lcall
imul
cmpsl
xor
pop
pop
pop
hlt
stc
pop
cmpsb
jle
dec
fwait
mov
jle
lahf
mov
test
test
scas
mov
emms
testl
out
or
jnp
adc
nopl
dec
mov
mov
pusha
iret
xchg
sub
lret
ds
jmp
add
flds
mov
loop
imul
loop
fcoml
or
dec
mov
insl
push
adc
iret
sbb
cmp
adc
xor
sti
mov
cmpsb
fidivrl
push
adc
gs
in
fnsave
adc
fwait
mov
jno
in
add
inc
sbb
mov
jno
inc
xchg
addb
iret
jecxz
mov
or
rorl
push
sarl
dec
cmp
dec
lea
dec
in
in
std
pop
ret
and
adc
pop
xchg
stos
dec
rclb
or
sbb
cmc
jns
loop
je
stos
sbb
imul
insl
and
outsb
xlat
out
cwtl
mov
sarb
push
je
and
pusha
fs
dec
aam
aaa
lcallw
jne
adc
imul
xor
inc
das
cmp
roll
push
out
test
into
movsb
pop
ljmp
lods
xorb
int
sti
cmp
xor
lea
pop
scas
mov
inc
xor
mov
mov
jno
in
and
cmpsl
mov
in
cmp
pop
adcl
push
mov
repnz
cli
sbb
or
push
ja
mov
mov
xchg
pop
lods
outsb
add
xchg
sub
push
inc
xchg
scas
xlat
lds
enter
int3
adc
lods
cmp
mov
mov
dec
cltd
cmpsl
fbstp
xlat
lods
movsl
push
dec
cmp
lock
in
rclb
stos
fs
cmp
dec
shl
test
out
repnz
inc
jge
mov
notl
sbb
iret
iret
popf
outsl
test
sub
in
aad
cld
push
cmpsb
mov
add
ss
xor
xchg
or
adc
daa
out
test
or
dec
sbb
mov
addl
out
fidivl
cmp
notl
fsubr
xchg
push
and
js
rol
divl
loope
subb
xchg
insb
cmpsl
fsubrs
adc
push
dec
lds
rorb
shrl
inc
mov
and
and
lcall
es
mov
addl
stc
jo
mov
and
aad
push
mov
jecxz
xchg
cld
pop
mov
mov
xor
pop
jge
into
push
inc
or
sub
xchg
xor
fs
pop
rcr
jp
sarl
shr
into
pop
xchg
fmulp
fnstsw
fdivl
rcrb
lods
cli
sub
push
xor
std
imul
stos
test
inc
test
and
rolb
test
jne
add
jp
pop
scas
push
daa
inc
inc
in
mov
sbb
rcll
popf
ss
fnstcw
lods
jnp
addb
lea
stc
fs
cli
fsub
rcrb
push
sub
push
nop
push
jle
sub
jb
lock
bound
push
fstl
scas
or
mov
xchg
dec
lods
jg
popf
push
call
std
lods
or
jg
and
pushf
add
add
or
and
ret
sub
xchg
clc
xor
insl
xchg
push
stos
das
clc
mov
jbe
dec
sarb
pop
les
loope
rorb
push
into
les
out
in
test
mov
xor
jo
imul
test
fadds
push
and
aas
fcomps
jecxz
push
xchg
mov
movsl
or
mov
popa
fdivrs
sub
loope
push
jecxz
mov
jb
xchg
and
insb
out
fdivrp
mov
gs
fdivrs
inc
jle
aas
fadd
and
mov
jl
xor
push
fwait
mov
das
in
mov
sbb
xor
push
sub
pop
xor
stc
cwtl
pop
or
cld
jmp
lret
push
xchg
add
mov
lods
mov
lcall
mov
mov
fisubl
mov
xor
pop
mov
addr16
pop
fnsave
jle
push
inc
jmp
xchg
shlb
dec
out
xchg
fcompl
fimuls
ret
pop
mov
outsb
cmp
push
sbb
in
sbb
pop
scas
shl
fildll
jg
lahf
mov
rorl
or
fiadds
cmp
call
enter
xchg
push
mov
push
imull
fbld
cwtl
xchg
lock
xor
je
sbb
fwait
cmp
pop
aam
ss
icebp
clc
xlat
xor
mov
mov
or
or
incl
jmp
cltd
pop
xchg
dec
js
mov
add
mov
push
fmul
cmp
xchg
xlat
sbb
ret
and
push
outsl
leave
add
cmpsl
out
and
ret
mov
adc
jl
mov
jle
cmp
arpl
int3
xchg
xlat
cli
sub
cli
outsb
out
pusha
loopne
sti
push
sbb
scas
js
pop
or
or
cmp
ljmp
push
cltd
jle
subb
cmp
out
rcrl
sbb
mov
lods
or
lret
es
add
push
lret
mov
sbb
test
pop
ja
lock
lds
xor
add
inc
push
pop
jnp
ds
adc
push
pop
cmp
rcrl
cmp
popa
sub
dec
dec
insb
in
sub
xchg
int
cs
mov
inc
sbb
push
push
pop
call
ret
mov
enter
adc
lret
mov
dec
sbbl
repnz
inc
add
les
push
sarl
jmp
daa
fwait
or
mov
cmpsl
mov
cmp
push
pop
test
out
and
ja
jbe
mov
leave
js
pop
imul
xor
xor
sub
mov
fwait
scas
add
loop
test
and
ss
pop
addl
dec
xor
cmpsb
rcrb
lds
inc
push
pop
test
mov
dec
scas
lods
jge
xchg
aas
test
xor
outsb
fistpl
or
cmc
fucomp
add
test
sbb
sti
jmp
mov
or
xor
adc
lea
mov
xor
fimuls
dec
mov
add
mov
or
cmp
movsl
sbb
jp
das
mov
mov
inc
insb
imul
aas
adc
test
test
cmc
mov
add
cmp
cmpsb
repz
jl
pop
pop
fstpt
pusha
or
bound
inc
daa
aad
adc
or
cmp
sub
push
jns
sub
jg
ss
xchg
pop
mov
mov
outsl
cmp
inc
jno
sti
insb
addb
out
push
ficoml
jns
lds
push
mov
or
push
fisttpl
or
cmpsb
and
sti
ror
dec
out
push
cli
pop
ror
inc
divps
ds
inc
sbb
lds
mov
inc
dec
fcoml
jo
je
scas
xlat
cmp
mov
inc
inc
lret
mov
inc
adc
xchg
jne
mov
scas
pop
dec
les
and
ret
fmull
push
in
dec
dec
insl
stos
out
cmp
jb
fisubrl
adc
sbb
dec
inc
out
aam
push
pushl
push
add
movsl
adc
loope
or
push
lcall
add
imul
loopne
pop
adc
inc
lea
mov
dec
push
subb
das
ss
dec
es
adc
loop
adc
mov
fstpt
movsb
add
cwtl
shll
stos
sbb
inc
or
jae
repnz
aam
inc
mov
repnz
lahf
leave
cvtps2pd
std
test
dec
xor
fwait
cmpsb
jecxz
ficomps
dec
dec
enter
aad
sbb
push
sbb
mov
mov
sti
lods
inc
sbb
in
jae
xchg
jle
sub
movsl
xchg
shll
xchg
sbb
ds
sub
cltd
inc
gs
iret
dec
xor
rcl
out
stos
aas
and
cmpsb
lcall
push
ljmp
mov
xor
add
fsts
or
ficomps
sbb
rcrl
dec
scas
ja
mov
pop
xchg
out
inc
and
jb
les
jmp
leave
add
sub
fnstsw
cmpsb
nop
inc
int3
es
imull
mov
je
cld
add
je
jo
add
inc
lret
xchg
subb
inc
push
pop
mov
stos
xchg
pop
ficomps
jo
int
cmpsb
push
xor
jae
clc
push
stc
cmp
in
mov
mov
inc
push
les
ds
fidivrs
inc
repz
inc
fisubrs
imul
dec
daa
fs
lods
test
mov
add
adc
or
or
mov
aas
mov
fs
or
adc
xor
fisubrs
out
decl
xor
leave
icebp
mov
inc
out
add
popf
rol
mov
pusha
inc
pop
inc
adc
ret
jno
test
insl
in
jae
jns
push
mov
mov
cwtl
cmp
in
mov
arpl
rcrl
daa
dec
adc
scas
sarl
sbb
popa
cmp
jo
popf
mov
dec
cmp
cmp
test
roll
jbe
jno
loopne
mov
das
orb
jl
flds
je
xorb
gs
push
inc
cmp
xchg
sbb
or
adc
dec
adc
mov
sbb
pop
jle
jp
test
push
mov
iret
cmp
mov
aad
pop
aaa
mov
dec
jns
jns
add
cwtl
stos
roll
std
mov
cwtl
pop
mov
les
cmp
imul
push
inc
cmpb
clc
inc
nop
sub
lds
fldcw
add
ret
hlt
mov
icebp
xor
jge
out
nop
and
mov
push
std
xlat
xor
xor
cmp
or
test
das
test
sbb
cli
ds
sbb
xor
addl
daa
sahf
arpl
inc
rcl
add
mov
xchg
das
pop
and
fwait
add
enter
test
cld
push
lock
cmp
add
and
dec
lret
cld
ret
push
adc
fwait
insl
cmp
inc
mov
or
fisttps
push
mov
stc
out
shr
movsl
dec
js
or
dec
dec
and
fwait
subb
jo
aam
xor
mov
mov
lods
push
jg
pop
bound
adc
shr
add
ja
mov
mov
loop
out
out
lahf
out
jge
mov
xchg
stos
stos
adc
aaa
pop
dec
or
cmp
aad
adc
adc
scas
and
jg
imul
hlt
jne
aas
gs
imul
imul
subl
int
clc
xchg
jns
das
out
sahf
inc
stos
pop
mov
pop
cmp
jle
movsb
or
mov
mov
rol
sub
shr
jmp
out
scas
repnz
pop
jns
movsl
cmp
xor
movsl
mov
lea
out
in
cmp
fnsave
cmpsl
xchg
test
mov
movsl
pop
int
stc
in
jnp
lock
js
test
pop
pop
outsl
call
rol
dec
add
inc
jecxz
outsl
out
pop
and
cmp
xchg
inc
sub
test
mov
xor
out
call
mov
and
mov
fsubp
inc
repz
xor
xor
mov
pusha
cmp
dec
xor
cltd
pusha
cmpsb
test
scas
test
push
jle
push
sub
sub
fdivl
mov
jl
cmc
iret
iret
icebp
inc
dec
stc
inc
and
ret
out
and
mov
aad
std
stc
and
xchg
je
insl
into
mov
pushf
cs
les
pslld
ds
shrl
fstl
mov
in
pop
orl
and
jmp
sub
test
dec
dec
mov
pop
subl
test
leave
cmp
mov
sbb
lock
mov
mov
shll
jl
aam
push
sahf
test
fstp
push
repz
mov
inc
mov
xchg
loopne
xor
call
inc
mov
jg
scas
rcrb
mov
jbe
xchg
ljmp
or
mov
arpl
inc
xchg
rcrl
dec
xor
pushf
push
call
fcomps
repz
add
push
aas
popa
sbb
rolb
push
jecxz
xchg
in
in
sub
push
lcall
out
sbb
adc
jge
ret
rcl
shr
fists
bnd
mov
mov
pop
cltd
rclb
cmp
xor
divl
mull
pop
pop
les
lods
aad
sub
gs
push
jp
push
lcall
cmc
lret
sbb
sub
gs
push
jp
push
lcall
cmc
lret
sbb
sub
gs
push
jp
push
lcall
cmc
lret
ljmp
add
dec
push
jp
push
lcall
adcb
sub
sarl
repz
addl
sub
sbb
in
mov
arpl
jae
add
pushf
cmpsl
insb
sarl
repz
subl
mov
in
push
pushf
add
jae
inc
lods
adc
insb
and
sub
repz
or
sbb
inc
jo
or
popa
shll
outsl
pushf
lods
insb
lahf
and
and
fistpll
cwtl
sbb
pusha
hlt
cmp
pop
inc
imul
daa
test
pop
das
cmp
cld
arpl
jbe
lods
scas
adc
or
pop
mov
daa
add
int
push
cld
and
int3
int
xor
outsb
xchg
mov
shr
stos
dec
xor
adc
jbe
jae
adc
unpckhps
jns
incl
sbbb
jl
xchg
cmp
xorl
out
lea
jae
adc
fiadds
jg
sbb
sub
cmp
arpl
ss
mov
aas
adc
dec
and
or
mov
jns
cld
jo
push
cld
ljmp
jnp
cwtl
xor
jecxz
repz
addr16
cmp
or
sbb
in
leave
cld
adc
lods
sbb
add
xor
xlat
inc
mov
inc
mov
mov
movsb
push
lcall
push
fisttpll
dec
xchg
cs
sbb
xchg
add
jp
jl
dec
jmp
mov
cmp
sub
cmp
or
sbb
in
push
cld
arpl
jae
add
pushf
ret
insb
sarl
repz
subl
mov
in
push
cld
arpl
jae
add
pushf
ret
insb
jne
and
xor
dec
loopne
or
adc
sub
mov
sbb
cli
xchg
jne
mov
add
mov
sub
add
in
cmc
or
es
cmpl
loop
gs
xchg
test
lret
fabs
add
sub
jl
cmp
mov
inc
fwait
mov
sub
sbb
rcrl
sbb
push
insl
cmp
sub
dec
sti
aaa
mov
rcrb
out
and
pop
push
xor
es
mov
gs
jnp
or
cmp
aas
sbb
dec
fwait
aam
mov
movb
mov
mov
mov
sub
bound
outsb
mov
adc
or
mov
lods
and
ja
jnp
xchg
cmp
incb
jmp
pushf
out
mov
mov
adc
adc
sub
fisttps
inc
mov
add
jo
ds
in
scas
mov
jecxz
or
xchg
xor
mov
fwait
enter
lcall
ret
std
inc
cwtl
ret
and
inc
push
ds
jbe
dec
stos
mov
push
push
xor
fimuls
in
hlt
pop
pop
mov
cs
enter
loope
xor
xchg
pusha
fsubrl
pop
fiadds
xchg
dec
sti
hlt
outsl
pusha
mov
dec
push
test
cmc
mov
push
adc
gs
or
jmp
rol
pusha
push
and
lret
jbe
inc
je
mov
inc
xchg
notb
xlat
test
dec
mov
js
xor
jl
sbb
es
push
loop
mov
data16
imul
cmpb
mov
pusha
xchg
pop
popf
or
or
int3
hlt
std
mov
bnd
sbb
outsl
push
add
push
jge
arpl
cld
insl
push
push
mov
iret
ljmp
into
sahf
scas
pusha
jns
test
int3
mov
sahf
xchg
fcmovnb
insl
cmp
pop
fimull
dec
aaa
mov
out
orl
sub
add
inc
adc
push
jle
rcr
scas
jae
xchg
inc
jo
sbb
in
stc
das
leave
imul
sub
dec
int
pop
outsb
xor
add
leave
in
jo
push
cmp
and
fst
cmp
lods
mov
pop
fsubrs
mov
sbb
sub
rcrb
cmp
lods
dec
sub
sub
cmp
lock
mov
pop
and
mov
int
xor
add
lret
or
pop
jmp
xchg
pop
adcl
inc
repnz
ja
xchg
rorb
or
pop
jns
xchg
sbb
fs
add
mov
inc
sbb
add
mov
ret
lcall
pop
daa
sbb
sbb
fimuls
sub
push
shlb
add
aas
fstps
shrl
cmpsb
aas
mov
lods
sbb
popa
cmc
out
call
leave
jp
and
cs
jp
or
pop
mov
rcrb
mov
adc
sti
pop
push
clc
or
lods
cmp
lock
jecxz
cmp
mov
xor
cwtl
jp
enter
pop
clc
imul
data16
enter
pop
inc
push
ja
lods
and
fdivl
in
lcall
out
jne
bound
sbb
sub
cmc
fdivrl
xchg
pop
js
dec
sbb
dec
or
push
aas
pop
imul
scas
mov
adc
nop
xor
clc
mov
daa
sbb
rorl
fistpl
imul
lds
pop
lods
xor
mov
or
std
repz
pop
shrb
cmp
es
mov
cmpsb
sbb
sub
sarb
inc
xchg
lock
pop
sbb
lret
inc
or
adc
cmc
jno
inc
rclb
les
mov
fistpll
push
fiadds
inc
je
sahf
imul
jae
addr16
mov
movl
mov
sub
xor
int3
pop
gs
sub
addr16
xorl
mov
cmp
mov
rorl
or
add
loopne
add
fnsave
mov
jbe
pusha
inc
ret
cmc
mov
cltd
fcoms
loope
mov
or
adc
pop
mov
mov
mov
add
stos
add
call
inc
jnp
in
hlt
fcmovne
pop
fcom
sub
int
push
call
mov
or
pop
inc
imul
clc
cmp
shrb
xchg
cmpsb
pushf
pop
mov
jl
push
popf
cmc
xchg
sti
ljmp
rol
jns
jns
cld
push
mov
adc
jp
clc
cwtl
inc
mov
out
imul
imul
out
jbe
sub
das
and
lds
mov
cltd
inc
sbb
mov
cld
jne
jl
or
es
vpshad
push
cmpsb
orb
jg
xor
jnp
cmp
lods
movsb
push
xorb
sub
cmp
imul
sub
rorb
cmp
repz
movsl
sbb
movntq
out
xchg
arpl
fiadds
xchg
fldl
gs
clc
lcall
mov
std
jbe
add
int
pop
or
dec
addb
mov
rolb
out
and
mov
pop
push
int3
xchg
rcl
mov
je
sub
aas
xor
outsl
inc
add
cwtl
push
ja
repz
sub
lock
push
jg
outsl
pop
fdiv
sahf
dec
lret
sbb
xchg
and
scas
cmc
fisttpll
scas
xchg
aad
xchg
call
jl
pop
mov
mov
fistpl
fnstsw
int3
sub
shrl
xchg
inc
adc
mov
cltd
dec
push
mov
in
sub
mov
push
and
or
jmp
and
and
loopne
stos
push
lret
xor
mov
inc
mov
jo
hlt
adc
push
adc
rep
jmp
pop
lcall
pop
sbb
push
pop
imul
xchg
jge,pt
and
ds
cmp
adc
test
xor
fdivrl
in
push
data16
cwtl
and
lahf
pop
xchg
mov
and
lods
aad
mov
pop
enter
mov
fcompl
clc
pop
sub
pop
cwtl
inc
sbb
push
ss
xor
sahf
add
xchg
mov
add
push
cwtl
push
ficomps
mov
sbb
dec
pushf
xlat
jmp
out
inc
cmp
insl
dec
sub
xchg
sbb
and
ss
adc
pop
mov
sti
fdivl
push
xchg
cmp
sbbb
loop
jle
popf
sarb
jg
clc
aam
ljmp
scas
sbb
mov
stos
sahf
push
orb
push
mov
xchg
outsb
push
mov
sbb
fst
testb
push
and
mov
mov
and
sbb
in
cmp
ds
sub
test
mov
mov
outsb
clc
inc
test
insl
popa
andl
cmp
ret
add
aaa
cmp
subb
shrl
cmp
sub
or
sar
sub
push
divb
add
push
popf
lods
fs
cltd
in
xor
iret
into
aam
inc
sub
lea
pop
add
jge
es
bound
inc
dec
into
sbb
stos
mov
scas
jle
andb
adc
push
and
mov
iret
nop
lea
or
arpl
push
cmpsb
data16
mov
add
adc
mov
daa
fdivs
mulb
aas
mov
in
mov
ret
xchg
je
dec
aad
je
jne
les
cltd
jns
adc
jge
push
sbb
mov
jnp
adc
imul
inc
mov
xchg
mov
out
int3
js
mov
pop
pusha
xor
arpl
sarb
mov
insl
mov
sahf
dec
call
cmp
in
mov
ds
mov
hlt
fcmovnb
mov
adc
ja
adc
push
and
xchg
int3
xor
or
leave
mov
xchg
incb
inc
shr
nop
insb
jl
aas
jb
xor
push
mov
mov
das
daa
fcmovne
and
sbb
lea
pop
data16
and
rolb
jns
xor
dec
push
aas
sbb
inc
test
push
testb
adc
out
sbb
fldl
jnp
sub
in
lcall
movsb
inc
xor
lahf
pop
and
cltd
loope
or
jp
push
stos
addl
xlat
ja
pop
cmpsb
lahf
mov
lret
cmp
stc
ret
cmpsb
cwtl
decl
fisttpl
mov
and
sbb
das
aad
cmc
sbb
loopne
out
jge
mov
mov
xor
fcomps
cwtl
lahf
jecxz
cmp
jae
inc
outsb
adc
insl
in
xor
div
bound
dec
je
je
outsl
mov
xchg
call
sbb
mov
es
push
roll
fcomi
adc
xchg
mov
bound
xlat
insb
cmp
rorl
out
cwtl
stos
sbbl
scas
daa
ja
mov
mov
adc
sbb
or
stc
mov
pop
xor
xchg
jp
jns
mov
xor
sbb
fsub
roll
arpl
xchg
xor
xchg
jo
sbb
and
and
pop
mov
add
cmpsl
shlb
add
es
in
xchg
cld
add
xchg
mov
add
inc
roll
mov
mov
jae
inc
idivl
xchg
or
mov
fistps
in
jp
mov
subb
imul
test
pop
popa
pop
jge
jp
mov
ret
inc
jp
pop
push
bound
sbb
lahf
mov
dec
mov
idivl
sub
add
decl
mov
std
ds
insb
jg
push
cltd
adc
pop
not
stos
mov
sbb
cld
push
mov
aaa
jno
mov
insl
inc
bound
pop
inc
mov
push
pop
cli
push
and
dec
in
addr16
sbb
cmp
jno
cmp
ret
fcoms
test
lretw
sbb
lods
cmp
fmulp
bound
mov
jg
xchg
call
dec
inc
repnz
stos
fbld
testb
xor
enter
bound
push
sbb
mov
fldl
ret
ds
or
xor
imul
iret
xor
arpl
jne
jb
stos
and
and
inc
incb
lcall
jns
adc
pop
mov
sbb
mov
test
cmpsb
pop
je
fsubs
or
rcl
jl
cwtl
outsb
int
lret
lods
sbb
imul
cmpsb
jle
push
pop
call
mov
testl
ljmp
lret
pop
pop
dec
ds
cmpsl
mov
xchg
and
test
cmpb
xor
jmp
shrl
jle
jge
mov
jo
push
dec
mov
sub
sbb
mov
xchg
lock
adc
add
xchg
jl
xlat
hlt
xchg
ljmp
sbb
gs
jne
sub
pushf
icebp
mov
jns
das
incb
cmp
adcb
push
sub
inc
jo
xor
mov
push
adc
or
pop
loopne
cli
jo
repnz
mov
xlat
lret
mov
and
mov
arpl
std
sbb
int
clc
in
inc
ds
xor
fcomps
sbb
scas
dec
and
or
cmp
test
jb
cmpsl
inc
sub
push
loopne
push
mov
movsl
jge
cmpl
shrl
inc
in
cmc
lcall
enter
sbb
jbe
leave
lcall
mov
and
pop
xchg
test
xchg
jae
or
repz
repnz
rclb
add
cs
lods
outsb
dec
movsl
push
add
xchg
sbb
push
mov
push
push
outsl
rclb
mov
cmp
xor
test
les
sbb
scas
sub
mov
scas
push
stos
out
inc
rcrl
dec
jp
mov
stos
in
mov
ss
cmp
js
jo
outsb
push
daa
outsl
push
rolb
aad
or
push
movsl
daa
mov
lds
outsb
mov
movsw
cmp
pop
mov
jg
and
or
dec
fadds
addr16
cmp
push
or
es
setno
dec
insw
ss
cmp
xchg
push
scas
insb
cmp
js
adc
push
cmp
imul
clc
out
icebp
scas
pop
mov
jecxz
scas
pop
fcmovnb
ss
jb
sti
pusha
rcr
add
call
aam
out
mov
mov
mov
jnp
ficomps
or
add
sahf
sbb
aaa
dec
int
dec
je
cmp
push
lds
cmp
push
imul
cwtl
pop
push
cltd
mov
mov
bound
xor
addl
adc
cld
aad
outsl
fmulp
fcmovb
out
rcrb
mov
push
xchg
or
push
mov
dec
add
std
cmpsb
fcmovbe
or
push
cmpsl
enter
or
push
andb
outsb
out
aad
or
and
cmp
hlt
add
jae
jne
mov
dec
mov
cmp
testl
in
pop
fnstsw
ret
lahf
daa
mov
out
movsl
insl
bnd
leave
mull
jno
mov
loopne
cwtl
jb
cs
xor
ja
fadd
xchg
jg
int
fcoml
mov
push
pop
jbe
ret
fwait
cmp
leave
mov
inc
jbe
ja
dec
adc
mov
jnp
orl
int
movsb
mov
pop
mov
lahf
lahf
sbb
sub
mov
jbe
push
mov
sbb
sti
ja
add
xor
mov
xor
push
add
test
sbb
mov
pop
lahf
xlat
mov
xor
jns
jl
lea
xchg
xlat
mov
or
into
sbb
scas
dec
stos
dec
adc
les
lds
mov
cmp
shrb
or
cmpsl
mov
inc
lea
xor
lahf
test
test
and
mov
ret
jnp
sbb
imul
add
jb
fcmovu
mov
lcall
outsl
push
xor
les
int3
push
mov
movsl
sub
dec
test
dec
stos
sub
dec
mov
icebp
ret
cwtl
mov
xchg
pop
jae
cwtl
push
sbb
pop
sbb
imul
test
js
mov
cltd
xchg
push
or
mov
pop
or
mov
mov
scas
add
loop
enter
loop
xchg
bound
mov
inc
in
sbb
pop
pop
inc
cmp
jbe
jb
gs
and
pusha
mov
loop
jns
std
sbb
inc
lock
adc
adcl
stos
mov
stos
add
adc
mov
in
add
stc
cmp
aaa
cmpsl
jns
lret
xchg
lret
pop
cmp
xchg
mov
xor
maskmovq
idivl
mov
mov
cmp
dec
repnz
xchg
cmc
mov
sub
push
xor
sahf
xchg
lock
cltd
and
xlat
sub
jmp
lods
push
and
cmpsl
inc
mov
cld
fcmovnb
xchg
cmp
ror
mov
test
pop
add
or
mov
data16
mov
xor
lock
mov
daa
jo
or
cltd
xchg
mov
or
jne
sahf
inc
mov
out
sub
iret
xchg
or
test
call
pusha
pop
dec
ror
loope
scas
cmp
ret
or
add
xchg
cmpsb
inc
jne
stc
pushf
cmp
cmp
mov
hlt
loopne
add
imul
iret
jb
test
inc
sub
int
and
jnp
xchg
xor
push
dec
lahf
dec
cmpsb
pusha
mov
push
adc
sub
dec
jecxz
adc
adc
rorb
jmp
and
out
adc
sahf
dec
sbb
lds
in
pop
pop
pop
inc
mov
fbstp
pop
stos
cmp
in
sub
outsl
jg
inc
fiadds
in
outsl
or
out
stos
test
pop
es
jbe
jb
test
push
clc
push
adc
and
sar
mov
mov
cli
fsubrl
aad
in
jo
stos
cmp
and
dec
cmp
daa
cli
std
call
cmp
add
jl
xchg
lods
pushf
and
cmp
mov
push
ss
outsl
jmp
lock
or
mov
movb
fbstp
es
je
insb
dec
jge
push
gs
fcomps
cmpsb
adc
dec
out
push
cwtl
andl
or
cltd
aam
mov
sub
lods
and
ja
mov
push
inc
jg
jnp
or
daa
cwtl
sub
lods
and
adc
movsb
push
stos
adc
inc
xlat
lock
lds
xchg
inc
fisubs
sbb
and
popf
push
in
add
inc
cs
lods
sub
lods
push
pushf
adc
xor
aam
pop
ror
rol
lds
pop
dec
lods
orb
and
les
outsb
sub
pop
mov
add
icebp
and
lods
int
mov
sbb
std
leave
xor
sub
jmp
ljmp
stc
xchg
jp
into
stc
or
pushf
xchg
mov
cli
mov
lods
mov
sarl
mov
les
push
lret
int3
push
cs
pop
mov
cmp
add
xor
push
sbb
fstpl
test
and
cmp
bound
dec
scas
sub
imul
mov
mov
xor
jle
in
inc
xchg
test
cmp
or
add
sbb
insb
roll
rorl
adc
out
xchg
sbb
jecxz
dec
cmpsl
das
mov
les
sub
repnz
orb
aaa
in
mov
test
mov
mov
mov
pushf
loopne
mov
sbb
shll
adc
clc
push
jl
jno
dec
mov
push
inc
mov
jo
int
fists
sbb
cwtl
out
shrl
or
aad
lret
mov
pop
mov
jmp
cmpsb
inc
nop
xor
dec
dec
xor
inc
adc
popf
shll
pop
cld
rcrb
icebp
xchg
inc
aaa
cli
ret
pop
sub
mov
push
ficomps
divb
insl
data16
jno
pop
negl
mov
sbb
pop
fldl
pushf
xchg
stos
leave
sarb
jl
pop
test
xchg
jg
xor
jl
shll
aad
imul
lea
and
aad
test
add
icebp
mov
loopne
cmpsb
ret
addr16
push
mov
gs
jge
push
mov
andnps
or
jnp
sarb
dec
shll
mov
push
cld
in
lods
inc
jb
daa
into
dec
imul
rclb
movsl
lds
jne
aam
xor
cld
test
mov
mov
pop
inc
popf
insl
sbb
cli
mov
xor
andb
mov
lret
addr16
rclb
fstpl
fs
dec
sbb
mov
jne
cwtl
gs
out
dec
idivl
data16
into
in
iret
adc
dec
int
cmp
jo
mov
jp
scas
xchg
pop
fwait
aas
jns
jecxz
shlb
dec
fwait
nop
pop
testl
sbbl
adcb
inc
mov
lods
cwtl
das
dec
es
stos
pop
int3
jo
sbb
mov
pop
xchg
popa
orl
dec
lcall
mov
push
dec
pop
fbstp
pop
pusha
insb
sub
mov
mov
insb
mov
aaa
mov
cmc
into
fldl2t
pop
aad
rcl
inc
filds
xchg
inc
mov
aaa
adc
sbb
movsb
pop
cmp
inc
xor
popf
mov
out
sub
loope
loope
rcl
sub
dec
or
stos
or
and
fbstp
mov
jno
xor
push
insl
js
jp
aad
outsb
aam
inc
jne
sbb
mov
xchg
mov
mov
sub
and
in
push
push
xor
cmpsb
jl
insb
jmp
icebp
mov
mov
dec
adc
scas
stc
jmp
mov
femms
mov
inc
mov
scas
and
sbbl
pop
sub
mov
xchg
fisubl
jb
jle
shrb
pushf
cli
popa
out
jg
xchg
pop
xchg
mov
gs
mov
xor
jo
iret
shrl
mov
sub
inc
stc
stos
xchg
dec
dec
dec
and
xchg
push
jnp
add
adc
test
adc
dec
xchg
popa
add
in
loop
movsb
andl
aas
xchg
cmp
hlt
outsb
mov
bound
sbb
ljmp
add
push
xor
aaa
stos
outsb
push
mov
stos
icebp
out
cmp
sbb
push
pop
add
push
and
aad
decl
shlb
insb
add
jb
lods
mov
jl
dec
repz
subl
mov
in
push
cld
arpl
jae
add
pushf
ret
insb
sarl
repz
subl
mov
in
push
cld
arpl
jae
add
pushf
ret
insb
jecxz
or
pop
adc
mov
inc
insb
push
cld
xchg
int3
jae
add
pushf
xlat
insb
jl
dec
rcrl
cmpl
xor
in
lods
push
leave
int3
jae
je
fwait
inc
fdivl
arpl
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
pop
push
dec
es
imul
add
sub
sti
mov
fwait
lret
out
imulb
es
imul
or
jbe
xchg
xchg
lret
sar
mov
fwait
mov
mov
push
dec
es
imul
or
jbe
xchg
xchg
xchg
aad
cwtl
jmp
leave
mov
test
cwtl
stos
dec
pop
push
aas
push
pop
inc
xchg
fstl
in
cmp
sahf
outsb
sti
in
dec
pushf
push
imul
bound
push
xchg
insb
jecxz
hlt
insl
aaa
andb
mov
sti
xor
cmp
add
mov
popf
popf
out
mov
sbbb
cwtl
stos
xchg
cld
xor
data16
pop
mov
inc
movsb
pop
dec
push
jp
jg
sbb
cwtl
rcrb
jnp
call
nop
adc
enter
inc
hlt
mov
bound
std
sbb
les
xchg
sahf
push
mov
aas
fmuls
aam
push
mov
cs
jp
push
mov
lock
scas
and
ficompl
repz
xlat
jg
scas
sahf
stos
pop
pop
push
dec
es
imul
or
jbe
xchg
xchg
lret
cmpsb
sti
mov
fwait
mov
mov
jg
inc
cmp
pop
dec
add
pop
mov
mov
mov
cmp
add
push
cmp
jle
and
jecxz
xchg
cmpsl
out
xrelease
into
test
or
dec
getsec
pop
inc
ja
or
jbe
xchg
xchg
lret
cmpsb
sti
mov
fwait
mov
mov
push
dec
es
imul
or
jbe
xchg
xchg
lret
cmpsb
sti
mov
fwait
mov
mov
mov
popf
mov
mov
fildll
out
ret
xor
in
dec
mov
fldenv
dec
outsl
dec
or
test
push
mov
stc
mov
stc
mov
and
clc
scas
icebp
mov
jl
insl
cmp
pop
mov
push
ja
add
sub
pop
pop
scas
mov
movsl
jp
push
loop
mov
shlb
or
idivb
lcall
dec
lods
adc
cmpsl
pop
icebp
das
leave
xchg
nop
adc
push
ret
aaa
cmpl
sub
mov
mov
xchg
xor
or
xor
sub
in
hlt
sbb
lea
mov
xor
sub
into
fwait
inc
dec
mov
fdivrl
xor
xor
sbb
add
stos
xlat
mov
add
inc
xor
mov
loop
clc
dec
addr16
xor
fldcw
and
push
loop
push
jecxz
cmp
shl
xchg
mov
jae
popf
out
std
jmp
jb
sbb
inc
arpl
cmp
popa
lcall
xlat
pop
stos
push
call
ret
mov
ds
xchg
cmpsb
cmp
hlt
iret
sti
in
adc
fcomps
dec
cld
jne
notl
inc
sub
ljmp
pop
rcrl
and
repz
out
int3
inc
scas
pop
loop
lods
dec
xchg
cmp
mov
test
xchg
adc
sbb
cmp
adc
jge
jno
cwtl
mov
ret
ds
push
jne
or
add
out
adc
shlb
test
sub
xchg
xchg
xorb
sete
int3
scas
jae
inc
lret
fldl
add
jbe
adc
ret
movsb
shrl
mov
xor
jnp
cmc
jg
pop
push
and
add
aaa
jecxz
jno
movl
push
adc
sub
addb
fimull
test
sbb
sahf
dec
ficompl
scas
in
arpl
les
popf
or
mov
xor
adc
lods
inc
cmp
pop
imul
sbb
aad
dec
fcmove
enter
jb
out
jae
int
xor
fs
lods
sub
xchg
ljmp
mov
stc
or
dec
pop
lods
dec
scas
sbb
fisubs
mov
add
sub
pop
and
fisubl
out
mov
mov
or
mov
sub
push
test
push
pop
and
mov
gs
jl
in
xor
mov
mov
mov
or
xchg
hlt
mov
push
push
lcall
or
pcmpeqd
in
js
push
loopne
add
cld
popf
mov
andl
out
ljmp
popa
rep
jg
je
stos
lods
xor
jb
jbe
inc
xor
sub
in
cmp
std
stos
sbb
std
jo,pn
in
sbb
repnz
imul
mov
xchg
insb
push
andl
outsb
dec
fwait
adc
inc
cmp
xchg
sub
xchg
fstpt
fnstsw
les
out
or
fwait
int
jecxz
subb
cmp
pop
pop
leave
stc
nop
lock
setno
pop
clc
ja
jbe
repz
loop
and
add
lods
push
fdiv
test
or
lret
and
repnz
or
jl
out
push
sbb
add
mov
mov
nop
pmuludq
adc
sub
dec
xor
lds
popf
push
sbb
or
mov
sbb
jno
jmp
mov
test
adc
jns
ret
dec
inc
aaa
cmpsb
dec
jle
in
add
test
clc
mov
sub
jns
aaa
pushf
aad
sahf
adc
sbb
adc
jnp
mov
pop
mov
nop
jbe
sbb
inc
pop
ffree
lds
ret
xor
in
mov
fstpl
mov
not
movsl
sarl
dec
fisttpll
test
movsb
mov
xlat
adc
bound
mov
loopne
outsl
ja
sbb
ja
pop
cmpsb
pop
inc
sbbb
mov
popa
pop
movsb
and
in
jge
xor
jbe
jl
cwtl
out
test
in
pop
aas
je,pt
xchg
lret
cwtl
fisttpl
mov
das
hlt
cwtl
add
fiadds
test
or
jmp
pop
bound
and
test
jp
mov
adc
inc
incb
jge
dec
and
mov
push
shl
rcll
mov
adc
and
jne
dec
aas
push
mov
sub
add
pop
sbb
icebp
cmp
or
ret
fistps
adc
pop
cmp
push
inc
in
cmc
inc
pop
es
loope
movsl
or
or
stc
pop
inc
push
leave
xor
sub
xchg
ret
int3
fs
test
push
stos
pop
or
in
call
mov
jno
xchg
outsl
ds
xchg
mov
push
sbb
sbb
sti
mov
sbb
pop
mov
xchg
cltd
aam
mov
xor
js
sbb
add
sbb
xor
dec
repz
cmp
mov
mov
aam
scas
cmp
pushl
mov
aaa
inc
stos
mov
icebp
pop
cld
add
push
xor
xchg
push
rorb
xchg
repz
push
stos
sbb
push
lret
push
push
mov
dec
jne
sub
mov
inc
addb
addr16
and
and
repnz
inc
out
xchg
xchg
mov
push
and
add
fsubrl
or
movsb
mov
adc
imul
fidivrs
mov
push
and
adc
sbb
rorb
xorb
fistps
push
push
and
mov
or
dec
adc
sbb
aas
jb
out
mov
sbb
xor
and
rol
lcall
adc
jae
sarb
jne
pop
gs
jl
je
ljmp
ret
les
mov
movsl
ljmp
xchg
sbb
daa
xor
repnz
lds
cmp
notb
adc
mov
dec
sbb
push
cwtl
out
movsl
out
movsb
ds
or
jl
shl
sub
pop
clc
fiadds
mov
lret
sub
sbb
add
pop
xchg
and
lock
push
mov
shll
mov
pop
es
cmc
mov
jecxz
lods
jmp
jb
loop
lcall
push
jg
add
out
jmp
loopne
outsl
nop
rorb
pop
out
sbb
aam
sub
or
ljmp
mov
cltd
insl
xchg
dec
pop
incb
cs
push
pop
pop
and
mov
push
lods
dec
cld
cltd
cmpsb
dec
scas
mov
imul
ljmp
push
mov
mov
sub
inc
fldcw
notb
and
ret
mov
xchg
or
cmp
pushf
or
mov
xor
addr16
add
pusha
add
lcall
jae
mov
arpl
call
lret
gs
xchg
lahf
inc
mov
pop
adc
aaa
or
and
xchg
popf
sub
mov
test
pushf
and
frstor
cltd
and
inc
fstl
test
jg
fidivrs
adc
inc
ja
cmp
insl
outsl
jg
lcall
mov
aad
cs
pusha
pop
xchg
push
enter
mov
mov
test
mov
xchg
or
addr16
jge
sbbb
inc
clc
push
sbb
cmp
insb
push
xor
nop
nop
push
cld
insb
cmpsl
cmp
push
repnz
mov
inc
test
or
ret
or
sub
cmpsb
out
lahf
js
call
jl
divl
pop
ljmp
dec
push
pop
pop
int
xchg
bound
rorb
jl
aaa
loopne
cmp
cmp
in
pop
loope,pn
stc
adc
into
sbb
das
jmp
and
not
xlat
pusha
cltd
dec
std
cwtl
push
in
cmp
adc
mov
jle
inc
cmc
or
jge
repz
arpl
cltd
pushf
inc
bound
aaa
mov
xchg
xor
aam
aaa
pop
cli
sub
xor
lret
and
rcrb
push
aad
xchg
inc
subb
push
adc
mov
adc
xor
idivb
mov
int3
rclb
xor
pop
pop
mov
int3
loop
add
mov
jbe
popf
mov
shl
les
inc
mov
ficoml
lea
jne
sub
je
adc
sub
push
push
fsubr
or
pop
inc
sarb
cwtl
push
sub
push
cmp
xchg
ljmp
inc
std
lods
cmpl
in
xor
imul
jae
aas
sbb
test
dec
mov
or
loopne
stos
dec
into
lods
movsb
aas
mov
adc
sarl
sub
icebp
clc
dec
mov
mov
push
adcl
xor
dec
and
fiaddl
das
sbb
sahf
stos
jmp
inc
test
sti
push
dec
xchg
jle
jns
push
and
xor
js
cmp
push
add
jl
fdivrl
xor
inc
cltd
nop
inc
jne
test
mov
in
inc
inc
aam
test
adc
inc
sbb
pop
movsl
pop
inc
push
jbe
push
mov
nop
aad
xchg
mov
lods
or
sbb
je
push
jmp
ret
imul
xor
pop
fwait
dec
push
inc
sarl
fwait
xchg
in
andb
sub
inc
icebp
test
aaa
sub
scas
cmp
bound
mov
sbb
mov
fstps
push
mov
mov
adc
adc
cmp
call
cltd
mov
xor
fisttps
sub
mov
ret
movsl
xchg
daa
pop
xchg
test
mov
movsl
outsb
push
jae
and
mov
or
andl
clc
in
fsubr
sbb
lock
fsubs
fidivrl
repnz
and
aad
jae
ret
pop
add
or
fwait
mulb
pushf
ja
in
sub
cwtl
xor
sbb
ljmp
lods
sbb
jecxz
sub
sti
addl
lret
inc
inc
into
outsl
arpl
jg
in
push
lods
dec
test
sub
dec
mov
ds
sbb
pushf
leave
test
jnp
pop
aad
pop
dec
sarb
dec
stos
jno
es
cmp
lret
sbb
or
xor
mov
xchg
mov
hlt
sbb
push
fs
stos
scas
cmp
or
cmp
push
mov
push
sti
push
add
pop
inc
sub
leave
movsl
jbe
imull
xchg
rolb
pop
lea
xchg
mov
or
test
lret
inc
leave
imul
les
sbb
jle
mov
jecxz
mov
adc
data16
sarb
stc
dec
cld
adc
and
fmuls
push
aas
adc
orb
ss
cmpl
mov
lret
and
dec
pushf
mov
cmp
aas
mov
sbb
repz
lock
jle
rorb
push
jecxz
mov
xchg
enter
inc
stos
dec
mov
mov
test
pop
pop
jecxz
orb
aaa
les
cmp
push
jb
fneni(8087
inc
xor
movsl
pushf
mov
out
popa
jg
push
xlat
mov
aaa
bound
dec
mov
inc
xchg
scas
in
leave
fldl
jnp
test
xchg
scas
cld
mov
and
outsb
pop
ret
adc
dec
jo
pop
pop
cmp
mov
pop
xchg
mov
pushf
loop
jns
mov
cmp
jl
out
or
jae
pop
xor
enter
ss
sub
sub
movsb
cs
mov
bound
pop
sub
sub
cmc
xor
cltd
xor
pop
dec
iret
scas
iret
or
aam
shrl
push
dec
inc
leave
mov
ljmp
outsl
sbb
lds
enter
aas
dec
lods
fstpt
adc
xchg
mov
je
shrl
dec
pop
mov
sbb
xor
hlt
stc
jge
add
mov
xchg
push
pop
xchg
mulb
movsb
jl
in
lret
jbe
cltd
fstpt
xor
cmp
mov
inc
sbb
and
xor
cli
mov
add
dec
mov
mov
and
cmc
testl
inc
outsl
movsl
or
nop
push
ja
mov
mov
mov
fadds
stos
mov
xchg
adc
jae
aam
jg
mov
rcrb
xchg
or
inc
xchg
loop
adc
popf
pop
in
xchg
xchg
and
xchg
jmp
sbb
adcb
or
inc
push
mov
js
push
sbb
push
dec
pop
adc
push
call
mov
xor
nop
or
imulb
push
fbstp
mov
arpl
mov
incb
pop
test
ret
xor
jle
mov
mov
sti
sub
xchg
xchg
adc
sbb
fwait
lret
sub
adc
stos
pop
push
test
mov
popa
or
sub
jno
mov
fisttpl
popf
pop
cmp
sqrtps
and
js
push
das
imul
lcall
pop
pop
jle
ljmp
rorl
shl
les
pushf
inc
fwait
xor
sbb
movsl
imul
pop
or
jns
mov
adc
lods
mov
add
xorb
in
cltd
into
fldl
jl
in
outsb
mov
xor
cld
mov
es
repz
pop
jne
addb
das
sub
into
jo
aas
xchg
sahf
jl
outsl
icebp
enter
add
jl
test
into
ds
pop
sbb
cmp
sar
fisttpll
sbb
xor
int3
orb
add
push
insl
jge
jno
mov
vaddps
mov
fidivrs
add
ljmp
mov
das
jbe
push
aam
adc
xor
icebp
mov
adc
movsb
and
xchg
out
mov
lahf
test
inc
mov
pushf
jbe
pop
xchg
pop
cli
nop
mulb
outsl
adc
add
imull
dec
mov
cmp
cltd
cmp
and
cmp
mov
sahf
iret
fld
outsb
xchg
stos
and
loop
pusha
or
pop
push
mov
or
daa
icebp
pop
dec
mov
cmp
out
or
cmpsl
cmp
ror
popa
imul
xor
movsl
mov
insl
das
push
xor
cmp
fstpl
mov
mov
cmpsl
sbb
test
mov
loopne
mov
pop
fisttpl
bound
jo
std
push
loopne
or
inc
and
ret
inc
mov
mov
enter
imul
push
mov
test
sbb
lcall
xor
lock
lods
pushf
pushf
das
outsl
repnz
inc
or
pop
stc
loope
lods
cld
or
je
inc
pop
in
xchg
xor
ds
dec
mulb
bndldx
bound
xchg
jae
dec
jbe
test
test
jmp
jg
in
xchg
xchg
sub
mov
xchg
pop
or
sarb
push
mov
rcl
mov
movsb
test
out
jle
test
mov
test
and
jns
ja
xor
jmp
lret
inc
sbb
movsl
das
pop
lock
pop
jge
test
push
add
in
jl
dec
push
aad
test
addr16
gs
mov
inc
loopne
cmp
cmp
shr
lea
lds
rclb
or
loope
cmp
subb
ret
xlat
jmp
call
lahf
xchg
clc
cmp
icebp
cmp
jb
scas
sbb
int3
aas
or
fistl
ljmp
lahf
xchg
out
jno
or
cmove
out
js
gs
rcrb
clc
in
mov
add
mov
scas
mov
inc
je
inc
hlt
jecxz
es
pop
inc
stc
std
insb
rcr
inc
adcl
and
xchg
lock
xor
jl
push
inc
add
push
pushf
mov
cwtl
scas
rolb
or
imul
mov
xor
push
rcr
inc
scas
push
mov
int3
pop
loope
jg
lods
in
aaa
hlt
in
jle
hlt
adc
dec
notb
mov
jbe
adc
pop
jp
lods
outsl
ss
inc
xchg
incl
cli
outsl
pusha
sti
and
pop
mov
mov
jnp
push
inc
es
lock
popf
jge
icebp
pop
cwtl
jge
cmp
push
cmp
enter
mov
fisttpll
or
popa
sub
inc
out
test
jno
mov
lahf
mov
sub
sub
mov
dec
lods
arpl
test
hlt
stc
cld
jecxz
sbb
sbb
jmp
int3
pushf
mov
or
cmp
mov
add
ds
dec
xor
loopne
pop
add
pop
fmul
iret
fisubrs
cmp
fwait
lea
filds
and
mov
outsb
outsb
movsb
sub
dec
xor
sbb
roll
fbstp
adc
adc
and
push
scas
daa
cmc
push
add
dec
add
aad
ret
xchg
sbb
mov
cmp
dec
xchg
jp
test
mov
leave
dec
outsl
sub
gs
mov
hlt
cmp
into
jns,pt
ja
sub
push
push
add
nop
inc
mov
aas
movsb
movsb
out
push
mov
mov
xor
xor
mov
dec
push
je
xchg
sbb
ja
sbb
xor
dec
xchg
mov
jbe
sub
adc
mov
pop
push
mov
lods
je
jnp
in
addr16
ds
in
mov
repz
push
mov
push
imul
push
xchg
dec
or
adc
in
ja
pushf
add
jge
pop
in
andb
mov
cmpsb
pop
add
aad
shrb
jmp
xchg
fnstsw
insl
jae
or
int
loopne
mov
lret
add
cmc
pop
sub
rol
ret
dec
popf
mov
sarb
inc
pop
push
push
flds
sbb
cmp
jle
pop
pop
dec
add
stos
arpl
add
fisttpll
cmp
add
push
inc
movb
mulb
add
mov
lcall
sbb
dec
inc
xchg
ljmp
push
sub
sub
dec
stc
lret
loope
or
int3
daa
cltd
scas
xor
mov
jno
pop
jo
sbb
mov
or
cmp
mov
mov
jb
shrb
scas
mov
jmp
xchg
js
fldz
dec
dec
out
cmpsl
pop
mov
popf
xchg
dec
push
iret
inc
sub
inc
lock
stc
mov
out
jns
mov
add
push
push
cmp
jbe
in
arpl
xchg
jg
call
mov
ja
ss
mov
cmp
inc
and
mov
repnz
xchg
cwtl
fildll
mov
imul
cmc
es
sub
inc
xchg
scas
dec
mov
nop
sbb
out
std
cmc
adc
imul
pop
insb
jl
fdivrs
dec
lret
mov
dec
or
clc
mov
jne
pop
cmp
addr16
pop
add
outsb
pushf
xchg
xlat
popa
jb
jmp
mov
adc
push
orl
test
mov
add
dec
int3
xor
dec
pop
movsb
push
pop
popf
fnstenv
mov
imull
push
aam
iret
ret
xchg
sub
in
sarb
xchg
iret
pusha
mov
push
dec
mov
ja
push
jmp
push
sub
repz
cmp
xchg
sbb
jns
jno
or
cmpl
sub
xor
and
fidivs
mov
pusha
scas
mov
mov
outsl
ds
push
imul
and
and
dec
push
loop
pop
xor
pop
cmpsb
push
jge
testl
call
sbb
dec
jb
jbe
outsb
mov
test
xchg
pop
cltd
sub
add
jg
cwtl
sbb
xor
imul
mov
xor
cmp
movsl
jp
iret
int3
cmp
dec
loope
cmp
scas
stos
fnstenv
pop
add
int
dec
push
ds
add
das
add
lcall
push
xchg
mov
repz
call
or
xchg
ljmp
jg
xor
jecxz
xchg
push
add
jns
sbb
insb
adc
xchg
xchg
inc
mov
jno
push
jnp
insl
mov
mov
sub
sub
data16
inc
xor
jns
sbb
jnp
inc
xor
bound
mov
repnz
rolb
mov
dec
sub
fs
sbb
outsb
cwtl
insl
das
jne
leave
mov
lock
push
bound
and
jns
push
cmc
dec
lret
imul
into
pushf
mov
test
cmp
sbb
xchg
jg
fildl
jno
mov
sti
in
inc
cltd
dec
sub
int
jmp
popf
mov
test
ss
sbb
decb
fisttpll
add
insl
and
pop
rorb
mov
cwtl
out
cmpb
xorl
sbb
fiadds
leave
jnp
pop
inc
xchg
pop
sub
dec
xchg
imul
or
jbe
xchg
xchg
lret
cmpsb
sti
mov
fwait
mov
mov
push
dec
es
imul
or
jbe
xchg
xchg
lret
cmpsb
sti
mov
fwait
mov
mov
push
dec
es
push
sbb
data16
xchg
xchg
lret
mov
lcall
push
pop
push
dec
es
outsl
inc
sbb
mov
xchg
popa
or
mov
mov
pop
je
inc
or
hlt
pop
les
aam
lods
push
cmp
dec
cltd
pop
addr16
jbe
inc
fwait
push
mov
add
adc
in
hlt
sbb
sub
cmp
xchg
push
mov
mov
xor
sti
in
hlt
ffree
mov
dec
movsb
jnp
adc
push
mov
and
inc
mov
nop
dec
xchg
pop
les
pop
stos
inc
jecxz
outsl
call
pop
fs
jmp
mov
mov
or
fdivrs
pop
sub
movsb
pop
mov
js
jl
fdivs
mov
fidivs
push
pusha
inc
mov
arpl
lret
icebp
cmpsl
data16
fimull
roll
cmp
cmp
or
sbb
das
sarl
int3
pop
dec
imul
xchg
notb
stos
mov
cld
adc
xchg
sub
pop
js
pop
js
pop
xchg
jl
leave
dec
fisttps
mov
adc
fdiv
or
pop
sub
popl
test
sbb
mov
ds
mov
push
xchg
daa
xchg
cmp
pop
aam
movsb
dec
mov
test
jmp
inc
test
xor
add
adc
orl
xchg
push
shr
ss
adc
enter
push
adc
mov
lahf
fs
xchg
dec
sbbb
xchg
push
rcrl
or
add
dec
push
ljmp
roll
mov
inc
mov
loope
mov
test
jnp
mov
stos
push
mov
add
adc
in
hlt
sbb
sub
cmp
xchg
jnp
mov
stos
push
mov
add
adc
in
xchg
dec
pop
push
stos
aad
sub
push
aam
or
cmpsl
loope
cmp
das
or
mov
es
mov
fdivrp
or
adc
fisubl
dec
adc
out
bound
fmuls
adc
pop
jnp
aam
shll
mov
ficompl
or
pop
in
sub
xor
push
sub
out
es
fidivl
pushf
jns
and
shrb
cmp
jmp
jns
mov
sarl
jne
stc
dec
lahf
xchg
mov
push
faddl
inc
cmp
cmp
jmp
loopne
jnp
mul
mov
sub
or
inc
mov
es
imul
std
ds
xchg
mov
imul
mov
mov
xchg
or
dec
popa
inc
mov
jmp
gs
daa
addb
cmp
add
sub
movsb
je
scas
dec
or
lea
in
adc
cmp
shl
add
aaa
mov
in
add
dec
xchg
mov
xor
sarb
in
les
test
mov
xchg
pop
adc
sub
call
popf
in
xchg
mov
aaa
xchg
add
cmp
jmp
in
xor
daa
dec
aas
fmul
fs
js
cmp
xorl
insl
popa
sub
dec
aam
testb
adc
clc
test
sbbl
incb
aaa
cmp
mov
sbb
stc
das
arpl
dec
mov
jecxz
pop
sbb
mov
sahf
ds
outsb
lret
je
or
push
pop
test
pop
fsubrl
aas
lret
and
movsb
jle
mov
scas
and
and
and
adc
xchg
add
lds
xchg
add
out
and
cmp
push
iret
mov
enter
add
shll
inc
andb
fwait
push
mov
jle
lea
jmp
scas
aad
into
or
dec
and
mov
push
loop
gs
dec
push
test
adcb
pop
push
lods
lcall
stc
fmull
mov
jns
sub
mov
dec
int
leave
ds
xchg
in
and
pop
sbb
xchg
xor
jns
jmp
ljmp
scas
jae
data16
cmc
and
stos
clc
lret
ret
push
cli
shll
adcl
out
and
push
iret
pop
mov
mov
cmpsl
lods
cs
xchg
mov
das
addb
mov
dec
jge
movsb
js
cmc
add
movsl
mov
push
push
adc
sti
fadds
pop
das
imul
into
ret
pop
repz
mov
ret
movsb
fsubs
or
std
mov
into
jne
dec
pop
cmp
push
bound
loopne
les
out
movups
test
sarl
fildl
xabort
enter
fidivs
in
adc
int3
mov
std
mov
inc
push
xchg
push
inc
repnz
or
xchg
sub
and
jbe
insl
xchg
gs
cmp
adc
loope
and
xchg
pop
int
mov
xor
sbbl
cmp
xor
jg
sub
pop
cmp
cs
sbb
xor
or
xor
mov
push
mov
xor
lahf
and
lock
test
ja
push
xchg
int
jnp
xchg
jb
add
push
jns
push
add
fsubrl
or
imul
jg
xchg
fwait
sar
dec
andb
shlb
cmpl
mov
lods
jle
cmpl
in
cmpsb
pop
cmpsb
call
popa
dec
inc
imul
mov
ffreep
jmp
or
mov
push
pop
add
add
adc
int
and
jae
mov
mov
subb
iret
jecxz
jmp
jmp
in
lds
imul
scas
mov
or
xor
gs
sbb
mov
imul
jns
je
dec
sub
mov
xchg
sbb
cld
icebp
test
test
xor
inc
ffreep
ss
lds
loope
cmp
ljmp
mov
and
in
fwait
loope
ret
xlat
push
and
divl
mov
lcall
jp
sub
in
das
jbe
cmp
repnz
jmp
out
mov
daa
xchg
ljmp
sub
dec
push
xchg
fs
call
add
dec
mov
lret
cmp
out
jae
scas
jmp
sub
fwait
pop
ds
fildl
fwait
push
mull
rorb
pushf
stos
adc
lahf
jl
jne
sub
xor
add
inc
iret
sbb
xchg
jmp
inc
arpl
iret
mov
clc
xchg
icebp
push
aaa
push
or
sub
push
cwtl
lea
icebp
stc
popf
test
mulb
mov
jp
cmc
orb
mov
mov
push
sub
or
jg
ret
shl
shlb
dec
push
jae
gs
punpckhwd
dec
or
sbb
push
pop
sub
pusha
xchg
cmp
xchg
pop
popf
leave
mov
lcall
insl
cld
mov
xchg
testl
mov
ds
aaa
addr16
cmp
push
loope
dec
inc
ret
loopne
sahf
in
in
jl
jne
repz
lcall
push
rol
outsl
shll
out
add
clc
xchg
mov
dec
int3
mov
shll
mov
imul
repz
mov
insl
mov
pop
fnstenv
mov
lcall
ret
dec
movsl
xchg
in
mov
cld
cs
es
push
stos
sbb
adcb
push
ret
or
imul
fistps
dec
std
out
cmp
mov
loopne
test
lea
iret
lea
and
mov
push
loopne
std
push
pop
sub
mov
jp
cmc
shlb
sub
pop
xchg
xlat
mov
inc
in
jne
mov
out
lahf
xor
cmp
scas
jb
dec
inc
pop
aam
xchg
jbe
and
inc
movsl
xchg
dec
add
arpl
xor
add
lcall
sbb
test
insl
jbe
dec
pushf
jo
jnp
or
shlb
mov
jae
sbb
adc
lret
in
or
sbb
mov
push
insb
loopne
or
data16
outsl
popa
mov
add
mov
cmp
data16
fldt
sarl
movsl
sub
popf
inc
adc
and
hlt
fisttps
sbb
out
or
jg
scas
mov
jae
stc
jecxz
inc
dec
lahf
inc
mov
test
cld
inc
imul
jns
shll
fwait
rcll
pop
add
jp
fs
fistpll
dec
mov
or
add
std
mov
push
gs
mov
xor
lock
aam
xor
ja
pop
iret
imul
cli
roll
pop
pop
push
adc
sbb
or
sbbl
and
ljmp
loopne
mov
adc
mov
lea
ret
push
jno
fwait
fs
cmc
xchg
xor
push
cmp
mov
stos
popl
xlat
imull
mov
inc
cmpsb
push
xor
popa
aas
jge
shlb
dec
in
xchg
outsb
scas
jl
stc
push
movsb
gs
inc
push
jp
or
stos
and
mov
das
lock
call
gs
push
ljmp
inc
adc
out
int3
insl
mov
clc
or
xchg
iret
popa
fisttps
aaa
in
fwait
bound
test
push
mov
and
std
lret
clc
popf
clc
jl
in
jle
mov
or
cltd
icebp
xchg
imulb
push
nop
ds
nop
cli
pop
mov
mov
rep
loope
or
cmpl
ljmp
add
loop
int
divl
repz
movsb
jb
repz
cmpsl
lret
cmpsl
je
dec
or
out
aad
sub
and
in
sarb
sub
cmpsl
jb
adc
out
cli
mov
adcl
scas
repz
ja
aad
cmp
out
mov
jg
mull
je
jge
fwait
pop
adc
lcall
iret
ret
add
cmpsb
jg
push
dec
add
mov
mov
lea
jbe
add
pushf
push
push
scas
xchg
or
pop
push
je
scas
jmp
int3
imul
mov
into
cltd
or
shlb
mov
adc
mov
int
bound
pop
incl
lea
and
xchg
sahf
testl
pop
leave
and
xor
outsb
xor
adc
pushf
je
mov
lock
test
lods
lret
sahf
clc
xchg
popa
loope
lods
push
mov
xchg
cmp
mov
cmp
aad
adc
lods
fst
push
add
cmp
jb
jle
stc
pusha
mov
push
or
out
push
sub
test
and
add
push
das
inc
mov
inc
stc
sti
stos
or
inc
mov
in
cmpsl
xor
cli
aas
daa
xchg
mov
je
insl
addb
fcompl
xchg
cmc
xor
sti
pop
dec
leave
clc
or
lret
stos
jno
fmul
sub
pop
scas
dec
adcl
imul
mov
xlat
sub
push
cmp
jbe
jmp
decl
cmp
xchg
fsubp
mov
mov
divl
das
and
push
ljmp
aas
adc
adc
pushf
aas
and
cmp
addl
repnz
sbb
arpl
pusha
dec
jae
aaa
jo
sti
push
push
std
je
lcall
pop
dec
mov
mov
cmp
dec
mov
sub
mov
dec
stc
std
js
stos
mov
jbe
dec
inc
mov
shlb
mov
add
iret
out
add
repz
ljmp
pop
ljmp
push
testl
cmp
outsl
push
fdivs
sub
lods
adc
scas
adc
pop
les
shl
push
jo,pn
sub
lods
cmp
andl
push
mov
adc
cmp
xchg
fwait
cmp
pushf
sbb
lods
mov
test
fidivl
pop
xor
scas
pop
lahf
sub
imul
je
xchg
pop
orl
xchg
dec
movsl
cmpl
in
dec
mov
push
sub
sbb
int3
add
mov
push
cmpsb
cli
sub
xchg
xchg
js
test
clc
fdivp
enter
rolb
sub
mov
inc
pop
mov
sahf
add
jnp
adc
mov
jle
inc
pop
push
scas
inc
adcb
mov
andl
out
jl
outsb
mov
push
ficoms
and
sbb
icebp
cmp
or
out
sti
pusha
bound
pop
in
dec
adc
fcoms
adc
pushf
rol
dec
sbb
cmc
jecxz
clc
sti
mov
dec
ret
bsr
jnp
mov
push
pop
in
jae
xor
int3
sub
inc
mov
xchg
lcall
push
or
rcrb
shr
ds
or
xor
out
imul
xchg
add
xor
sub
repnz
in
shr
cmp
icebp
fidivrs
mov
cmc
lea
fidivrs
stos
inc
or
or
jne
xchg
stc
insb
push
xchg
pop
mov
xor
je
ljmp
fdivrl
fcmovb
popa
or
popa
aas
mov
lods
ja
dec
jo
xor
inc
ret
das
iret
push
mov
js
loopne
cmp
jmp
fdivs
imul
xor
scas
je
mov
dec
cmp
push
jnp
push
fisttpl
push
lret
xor
ja
test
pop
pop
and
pop
ret
mov
lea
lahf
je
push
lcall
or
push
test
subb
mov
jge
scas
lods
sbb
or
shrl
call
jmp
seto
and
cmpsl
fnstenv
loope
pop
stc
adc
inc
inc
repnz
stos
sbb
in
pop
mov
pop
push
popa
pushf
sub
or
fimuls
gs
lret
mov
mov
xchg
pusha
gs
mov
mov
jmp
fcmovbe
xor
push
mov
aaa
cmpsb
inc
cltd
out
ficomps
shll
or
pop
es
movsl
cmpsl
lahf
jle
xor
sbb
add
push
pusha
js
lcall
mov
dec
ret
pop
mov
aam
jbe
pop
int3
mov
inc
mov
out
ja
outsl
out
insb
mov
aam
dec
ret
add
jae
xchg
adc
xchg
jbe
add
repz
subb
lcall
inc
xchg
mov
xchg
pop
dec
fcomip
test
test
out
mov
dec
sbb
shl
loope
out
sub
sbb
movsb
dec
jns
push
mul
arpl
pop
dec
loope
mov
inc
sub
mov
dec
pop
adc
mov
lea
lret
cmp
cmpsl
sbb
or
adc
hlt
cmc
clc
inc
xor
and
cmc
xor
jle
sbb
and
adc
movsb
jge
jnp
lret
cmpsb
add
test
insl
pushf
xchg
add
jns
pop
ret
pop
sbb
mov
outsl
jns
cli
mov
in
add
int3
xor
int3
xor
lahf
dec
test
mov
hlt
leave
addl
rcr
scas
push
stos
and
jae
sub
jns
imul
push
inc
adc
lea
adc
push
fwait
dec
outsb
fsts
rcrb
xchg
repz
push
insb
data16
loope
cmp
jge
push
push
and
or
mov
sub
test
add
rcr
pop
pushf
lods
xor
loopne
aas
cmp
dec
shll
mov
int
jnp
out
adc
into
in
fcoms
push
adc
and
sub
pop
mov
imul
adc
jbe
filds
pop
gs
mov
cmc
sub
int3
jmp
imul
or
xchg
mov
stos
adc
xchg
and
inc
loopne
jmp
test
sub
push
and
add
popf
data16
jbe
pushf
loopne
lock
inc
test
adc
ja
bound
xor
xor
das
insb
mov
cmp
fistpl
call
adc
cltd
jne
pop
push
mov
or
scas
sarb
dec
mov
inc
and
or
and
lcall
push
scas
insl
iret
mov
push
stos
add
mov
adc
fbld
pop
cmp
lods
xchg
pushf
and
dec
es
add
pop
out
ficompl
ja
jbe
mov
idiv
lea
scas
jl
and
ds
das
test
xchg
xlat
loop
pop
aad
jbe
sub
mov
lahf
mov
fcompl
pop
jl
incl
imul
inc
mov
xor
scas
out
and
mov
add
nop
movsb
call
sbb
jae
incb
in
fbld
das
out
inc
sbbb
adc
out
xor
subb
add
rolb
sbb
xchg
mov
adc
pop
lret
push
test
and
insb
stos
test
jge
aas
fnsave
fmull
sub
dec
pop
pop
loope
cs
mov
or
hlt
cmp
and
or
and
push
out
push
add
cmp
xchg
adc
arpl
xchg
jns
cmpsw
movsl
xchg
xchg
xchg
jmp
inc
mov
sbb
or
push
ret
ja
and
fldt
inc
sbb
fisubs
mov
daa
dec
sub
mov
push
or
jg,pn
mov
enter
sbb
pushf
jnp
push
mov
inc
scas
in
sub
pop
loop
push
adc
popf
fidivrl
xor
sub
out
stc
push
lahf
in
inc
stc
movl
or
jmp
sti
insb
jmp
lods
mov
and
push
inc
mov
mov
aad
stos
rolb
jg
xor
jnp
scas
dec
mov
and
sbb
xchg
pusha
mov
mov
sahf
add
mulb
sub
fsubs
mov
xorb
cltd
icebp
mov
stc
push
cmp
shrl
and
pop
insb
jmp
cltd
adcl
jns
dec
arpl
rorl
fsubr
enter
lea
aam
lods
xadd
mov
mov
sub
pop
mov
lods
adc
fwait
and
jne
hlt
popa
pop
mov
lahf
mov
roll
mov
popa
test
mov
repz
and
sahf
sub
mov
dec
mov
les
pushf
sti
pop
movsl
popa
aad
into
pop
jo
mov
aam
push
add
fdiv
push
sbb
cmp
inc
iret
jecxz
push
dec
mov
jle
stos
sbb
imul
and
push
jne
jb
iret
push
jmp
jl
int3
test
fwait
int3
adc
cwtl
or
nop
lret
js
scas
popf
ds
push
dec
fsubs
pushf
and
and
or
or
push
loop
aas
sub
mov
and
dec
xchg
icebp
cmpsl
xlat
out
daa
int3
ret
or
insl
sub
pop
int
ret
sbb
hlt
jbe
mov
dec
and
add
dec
std
xor
fbstp
xchg
cmc
mov
and
or
sarb
and
aas
dec
cwtl
dec
cmpsb
mov
inc
pop
es
sarl
sbb
dec
mov
aam
pop
js
and
mov
adc
pop
jns
aaa
sub
rcll
jle
or
sub
mov
mov
sbb
pop
insl
mov
into
mov
cmc
loope
or
and
leave
fs
fisttps
ret
push
jecxz
jae
cmp
xchg
insl
test
mov
out
inc
add
mov
pop
pop
pushf
ss
push
xor
mov
mov
xchg
lock
mov
out
adcl
xchg
adc
jecxz
fcmovnb
dec
dec
sarl
mul
outsb
push
rorl
push
rolb
adc
jae
cmpsl
xchg
daa
int
stos
stos
or
mov
outsb
jp
xor
jmp
out
ret
das
pop
sbb
sbb
adc
sbb
mov
cwtl
mov
arpl
fmull
inc
negb
pop
mov
or
aam
ss
clc
into
push
addl
lods
add
jp
xchg
mov
jo
sbb
mov
hlt
mov
jecxz
jmp
movsb
jg
xor
jge
mov
iret
pop
aad
adc
ficomps
lret
xor
std
pop
cmp
lahf
into
lods
sar
mov
mov
insb
cmp
inc
push
hlt
xchg
out
popf
cmp
ja
popf
lock
rclb
sbb
sub
mov
push
lcall
bound
out
xorb
gs
fs
fwait
pop
int3
sbb
cmp
inc
call
jg
icebp
rcll
xor
lods
es
test
push
push
shl
repz
test
or
outsb
push
not
ljmp
adc
mov
scas
jmp
push
sti
jbe
test
jae
xchg
rclb
out
and
mov
xor
aad
add
or
pop
cmpb
ds
push
fwait
mov
or
subb
jb
lcall
pop
fidivs
adc
dec
sbb
sub
sahf
mov
testb
arpl
xchg
push
cmc
push
dec
dec
xor
push
jecxz
out
stos
push
dec
in
sahf
nop
xchg
jne
jae
push
repnz
sbb
mov
mov
sbb
mov
pop
adcb
cmp
and
mull
sbb
mov
jmp
sbb
test
jecxz
dec
jg
add
bound
cltd
and
insl
test
ja
test
in
pop
loope
fsts
sub
xchg
and
into
insl
or
popa
adc
repz
out
dec
popf
rol
xor
cmp
pop
mov
les
pop
xchg
xchg
icebp
xor
lret
sahf
cmp
and
and
lcall
loop
in
xchg
test
fs
movsb
lods
inc
je
out
out
cld
cld
xchg
dec
jne
cs
insl
adc
adc
inc
je
sub
lds
out
and
sbb
sti
jge
movsb
and
sub
cmpsb
xchg
cld
js
out
sub
scas
aad
out
mov
cmp
mov
jns
cld
xchg
xor
sti
cs
movsb
dec
mov
test
jnp
mov
stos
push
mov
add
adc
in
hlt
sbb
sub
cmp
xchg
jnp
mov
stos
push
mov
add
adc
in
hlt
adc
movsb
dec
mov
test
jnp
mov
stos
push
mov
iret
xor
add
out
hlt
inc
iret
aam
movsb
dec
mov
add
adc
fwait
je
xor
stos
push
int3
push
mov
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
add
add
sbb
arpl
add
add
add
add
add
inc
add
out
add
add
add
addb
add
and
dec
add
add
add
add
pop
mov
int3
add
addb
add
add
add
add
add
bound
ret
add
add
push
add
xchg
add
add
add
and
lea
pop
add
das
add
add
add
lea
mov
cwtl
add
add
xchg
add
add
add
dec
add
add
add
add
add
add
add
push
add
mov
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
inc
pop
mov
adc
and
popa
add
add
add
jno
stc
add
add
add
add
add
mov
jp
push
add
add
aas
add
add
mov
cmp
pop
add
add
js
in
add
xchg
add
xchg
aad
mov
add
mov
test
int
sbb
faddl
add
add
add
add
pop
add
add
add
add
add
pushf
add
add
xchg
add
add
add
add
mov
add
mov
add
add
cwtl
add
add
add
add
pop
add
add
add
add
add
mov
add
add
or
ltr
mov
dec
add
test
faddl
xchg
add
add
ret
add
add
sbb
mov
sub
js
movsb
add
add
or
out
add
add
add
add
inc
add
or
xchg
add
add
add
add
add
add
pop
add
add
add
add
or
mov
jp
sahf
add
add
add
add
xchg
add
add
add
add
push
add
add
cmp
pop
add
add
add
add
add
faddl
iret
add
xor
inc
add
add
fiadds
and
add
add
or
aad
faddl
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
mov
pop
add
add
lods
add
add
add
faddl
and
or
add
jno
jns
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
movsb
add
add
add
add
add
add
mov
add
and
pop
add
add
add
add
add
add
add
or
push
add
and
add
push
add
mov
add
add
jbe
pop
add
add
xor
outsl
jle
cltd
inc
pop
add
addr16
enter
xchg
insb
mov
inc
aam
mov
push
mov
push
add
mov
sub
push
and
sbb
lahf
mov
imul
sub
mov
and
jne
sbb
xchg
lea
or
jmp
ret
push
xor
cmp
test
jl
sub
sbb
mov
pop
adc
test
or
pop
xchg
push
mov
mov
sarl
out
pop
add
pop
mov
rorb
rcrb
dec
xchg
loop
ret
mov
push
xchg
lock
ret
incb
adc
cld
popf
jb
mulb
out
xor
mov
mov
rolb
icebp
xchg
dec
shr
lret
or
mov
jns
pushf
jecxz
testb
inc
pushf
lds
sbb
push
fsts
push
in
push
xor
mov
add
scas
out
pop
test
rclb
push
ret
push
push
sbb
pop
nop
imul
pop
ja
push
jecxz
mov
push
aam
bound
and
pusha
cld
or
cld
arpl
ss
cmp
leave
loope
rcl
dec
push
popa
jns
add
mov
scas
cld
mov
jns
xchg
dec
int
mov
push
in
aas
lret
aaa
rcll
push
out
mov
push
out
pusha
cmp
dec
mov
add
xchg
shl
je
fwait
or
dec
pop
mov
xchg
ljmp
incb
lods
pushf
in
scas
popw
lds
cmp
cmp
in
mov
in
rcrl
mov
lock
xchg
cltd
sahf
repz
gs
pop
loopne
into
mov
iret
push
das
push
lods
aaa
sbb
cmpl
sub
es
jp
jo
shrl
stos
cmp
mov
push
test
arpl
push
xor
das
cwtl
sbb
jb
dec
jb
lods
pop
mov
sub
int3
das
das
cmp
dec
aad
adc
dec
aaa
jg
enter
or
xor
das
jl
dec
and
sti
sbb
cmp
imul
int3
cltd
insb
rorl
xor
iret
mov
movsl
push
adc
fildl
sbbb
mov
xor
add
and
mov
rorb
leave
push
or
call
stos
jne
mov
mov
push
jecxz
cmp
iret
in
add
pop
mov
enter
lahf
fdiv
mov
mov
lock
faddp
test
fistl
cmp
hlt
mov
inc
mov
mov
fucomip
in
mov
xor
insb
mov
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
