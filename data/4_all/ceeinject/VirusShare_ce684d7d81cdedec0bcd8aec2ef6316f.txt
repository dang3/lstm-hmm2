loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
es
in
cmc
push
aas
fidivs
push
inc
xchg
push
mov
xchg
jne
add
adc
xor
es
in
cmc
push
test
movsw
inc
mov
inc
stos
push
mov
xchg
add
xor
das
in
cmc
push
test
outsb
movsl
pop
mov
inc
cmpsb
push
xchg
add
adc
test
add
push
inc
test
scas
mov
pop
movsl
xchg
push
and
or
cmpl
es
mov
test
lcall
pop
stos
dec
cmp
clc
imul
ss
inc
mov
xchg
dec
sub
rorb
cmpsb
add
imul
js
leave
inc
test
inc
xor
dec
fs
sbb
fiaddl
xor
mov
loopne
insl
cmpsb
popf
add
pop
and
jle
das
push
in
out
xchg
lret
inc
outsl
jo
gs
pop
rcrl
jae
mov
jns
imul
xor
lcall
push
test
jbe
inc
mov
inc
cmpsb
push
scas
gs
jne
add
fdivl
inc
mov
jae
fs
loop
shlb
sub
adcb
jno
pop
hlt
dec
test
xchg
pop
xchg
jne
jns
data16
cmp
sarb
rcrl
xchg
data16
sub
xchg
push
les
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
xor
ss
cmc
push
test
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
xor
and
imul
sahf
call
push
aas
or
out
sub
add
inc
xor
rcrl
mov
and
jne
push
adc
jg
arpl
jns
sarl
mov
jmp
xor
mov
sar
push
jge
lea
stc
xchg
hlt
pop
ljmpw
jle
adc
cmp
shrl
into
mov
pop
bound
mov
dec
sbb
mov
dec
cmp
ja
mov
jb
cmpsl
mov
pushf
js
int
jmp
cmp
enter
add
ja
stos
js
test
testl
aaa
adc
mov
sbb
pop
mov
and
xorb
lret
in
test
cmpsb
push
mov
stc
xlat
faddl
cwtl
in
push
pop
mov
icebp
dec
ss
scas
xrelease
or
stos
mov
pushf
mov
mov
enter
aad
adc
adc
xchg
xchg
sbb
dec
fs
insb
mov
cs
ja
pop
push
stos
inc
jb
and
fisttpl
int3
inc
cmpsb
dec
xchg
mov
jns
cmp
xchg
pop
ficoml
xchg
push
aaa
jbe
nop
mov
pop
jg
adc
and
pusha
xchg
push
xchg
clc
addr16
inc
lods
xlat
negb
sub
xchg
and
sbb
testl
stos
fsubs
maskmovq
idivl
js
bound
fiaddl
js
mov
jbe
xchg
and
insl
pop
iret
ret
adc
xorb
pushf
loopne
xchg
fisttpll
cmp
or
ret
mov
jae
mov
dec
shrb
push
adc
xlat
movsb
mov
adc
pusha
inc
mov
inc
jl
jo
je
lret
call
fisubrs
ljmp
mov
jmp
mov
add
mov
lock
pop
push
scas
cli
or
sub
or
mov
xor
sti
stc
in
ljmp
iret
and
das
jb
push
cmp
dec
push
imul
xor
pop
fidivs
popf
mov
hlt
push
std
push
roll
jg
jns
xor
stos
sbb
addl
sbb
flds
push
push
insb
adc
inc
sbbb
jo
test
push
scas
jo
jbe
inc
add
ja
lret
jmp
enter
jno
movsb
scas
push
adc
pop
dec
inc
inc
subl
mov
lahf
loopne
inc
and
ja
insb
imulb
int3
call
sarb
push
or
sbb
pop
mov
xchg
push
sub
and
sahf
shrb
pop
shrb
mov
aas
mov
mov
cmp
inc
movsl
icebp
shll
xchg
in
xor
orl
mov
push
fstpt
mov
adc
loopne
mov
stos
mov
lcall
sub
adc
inc
adc
xchg
lods
inc
jns
or
jp
dec
and
cltd
fisttpl
mov
sahf
add
fistps
mov
mov
int
jnp
cmpsb
iret
mov
enter
jecxz,pt
pop
mov
xchg
jo
in
mov
pop
mov
mov
mov
cmpsl
out
iret
stc
lret
pop
xchg
imul
sbb
jno
data16
outsl
fdivr
push
fisubs
nop
nop
sarb
enter
out
xchg
mov
dec
xchg
dec
mov
sub
addr16
mov
insb
mov
test
inc
cmp
enter
js
jnp
pop
call
andl
es
sbb
push
and
add
cs
psubw
repz
rcr
test
adc
cmc
sti
xchg
mov
xor
jo
aam
cmpsb
repnz
movsb
lcall
pop
int
jae
jo
repz
push
cmpl
jno
push
mov
fs
in
aad
leave
sti
lahf
pop
mov
mov
adc
fimull
into
lcall
ljmp
xor
sti
lret
cli
jge
rolb
aaa
ja
adc
adc
mov
mov
mov
out
insb
js
and
sbb
lock
dec
adc
ffreep
jmp
orb
and
je
sbb
dec
mov
xor
lret
call
pop
push
sti
into
sbb
out
sti
push
testb
push
xor
lds
gs
adc
xor
nop
mov
arpl
inc
jle
cmpsb
pop
pop
sbb
loopne
test
dec
lret
push
in
inc
mov
dec
sbb
sbb
dec
jl
sub
mov
jbe
sub
imul
xorl
popa
cmp
imul
push
test
por
insb
ret
sub
aaa
mov
cmc
in
cmc
adc
into
adc
mov
jmp
icebp
pushf
mov
adcb
mov
movsb
test
jo
mov
out
add
xor
dec
in
mov
mov
cltd
mov
push
pusha
imul
mov
add
mov
out
lock
movsl
lods
test
cwtl
and
cmp
ds
mov
arpl
lret
lcall
dec
mov
jne
sub
xor
add
sbb
adc
mov
pop
call
jmp
lods
pop
mov
pop
inc
dec
jns
popf
push
sbb
cmp
lock
xlat
pop
inc
sti
in
fdivrs
pop
dec
aam
faddl
or
mov
shlb
mov
xlat
push
outsb
sub
lret
shll
insb
inc
pop
jl
mov
pop
xor
pop
out
mov
das
mov
dec
daa
xchg
dec
jecxz
out
stos
pop
in
mov
mov
sti
jle
repz
fstps
scas
jnp
dec
xchg
aam
inc
daa
enter
adc
loopne
lds
dec
fdivrs
sub
fldl
cmpsb
mov
mov
cld
fidivl
push
bound
sub
in
mov
sahf
push
sub
fdivr
fdivrs
add
and
xlat
mov
mov
repnz
cmp
sub
outsb
pop
in
adcl
add
push
scas
lods
adc
lods
ljmp
xchg
stc
pop
pushl
fildll
jp
or
push
pop
jo
shll
sub
pop
stos
das
mov
jp
sub
dec
lds
imul
adc
sub
test
repnz
loope
mov
mov
cs
mov
xor
push
dec
repnz
shl
mov
push
int
add
dec
les
es
and
scas
cmpl
stc
popf
lds
sub
add
jmp
in
pop
push
push
sti
test
outsl
fbstp
xor
pop
in
fistl
sub
xlat
movsb
cmp
xchg
jo
insb
add
push
insb
mov
inc
outsl
xor
push
push
shlb
lds
sub
stc
imul
movsb
mov
rep
fcomps
cli
and
orb
inc
mov
sbb
loop
mov
push
sbb
sbb
js
and
stos
mov
and
out
aad
arpl
sbb
scas
outsb
mov
xor
jae
jno
push
pop
cmpb
stos
push
shl
daa
mov
adc
push
ficoms
or
lcall
fldenv
push
push
add
push
xor
or
movsl
and
popa
es
inc
mov
in
negl
in
aad
or
cld
les
insb
popf
popa
jmp
or
jb
jg
or
imulb
frstor
roll
into
out
shl
stos
xchg
xchg
enter
sti
dec
or
jnp
dec
xchg
push
out
roll
jae
fdivr
sub
sbb
push
leave
pop
mov
jge
mov
dec
push
mov
call
mov
ret
sbb
dec
push
sub
sub
scas
inc
mov
ret
data16
sbb
ret
sbb
test
fisttps
jnp
aaa
jo
sub
mov
sub
es
or
adc
cld
xchg
push
jle
and
sbb
or
add
pop
mov
test
jmp
mov
xchg
ljmp
mov
ja
jns
and
test
imul
cmp
mov
push
repz
std
push
or
dec
int
divl
rep
sbb
ret
mov
jle
lcall
jb
mov
inc
fidivrl
rcrb
lock
data16
data16
popf
mov
push
add
scas
lret
inc
xchg
bound
mov
jl
call
mov
mov
or
add
xchg
add
mov
sbb
loope
mov
lods
sub
das
or
in
xor
push
xchg
push
xor
adc
or
icebp
stos
adc
ja
mov
into
pop
enter
test
sub
int
pop
sbb
lret
inc
rcrl
jne
pop
lods
sbb
adc
iret
mov
les
push
andb
sti
cmp
dec
mov
mov
cltd
dec
mov
mov
xchg
and
addb
test
mov
aam
push
and
xchg
xor
pop
sub
insb
xchg
nop
or
cmp
daa
inc
lods
xchg
pop
pushf
pusha
aad
push
jmp
mov
xor
cmp
and
jne
out
movsb
xlat
sub
and
add
xlat
mov
push
cmp
adc
sub
stos
pushf
cld
shll
mov
mov
out
es
idivb
es
insl
ficomps
jl
shl
addr16
mov
bound
xorb
call
outsl
aaa
push
fldl
pop
inc
push
hlt
inc
rorx
pop
cmp
inc
shlb
outsb
dec
mov
addr16
dec
movsb
movsl
jg
push
test
cltd
xor
xchg
mov
test
test
fmuls
dec
movsb
jnp
jns
lahf
aam
xchg
fisubs
dec
dec
sbb
mov
in
and
movsb
jp
add
sbb
inc
xor
mov
cmpl
push
bound
mov
push
stos
scas
push
mov
jbe
fsub
dec
jno
jge
int3
xor
in
sbb
pop
mov
dec
jmp
es
pop
ret
idivl
push
xor
jmp
and
jl
ror
pop
gs
dec
dec
sbb
xchg
fildl
pop
out
push
in
das
push
xchg
mov
adc
in
inc
dec
sub
cmpsl
das
ret
pushl
mov
popa
push
test
pop
pop
add
shl
mov
stos
mov
sbb
bound
dec
cmp
and
loop
mov
mov
popa
xor
mov
adc
pop
xchg
push
mov
rol
jl
leave
push
popa
imul
jbe
pop
gs
mov
sahf
add
sub
cmp
in
sub
fistps
ret
and
adc
dec
sbb
fstl
xchg
rorb
dec
jmp
sbb
das
mov
jnp
add
pop
addb
dec
fs
mov
sbb
ficoms
jge
aas
stos
jmp
xchg
pop
sbb
fnsave
lods
fnstcw
mov
push
ljmp
adc
out
js
push
je
ljmp
xchg
pop
xchg
stos
cmp
push
les
dec
adc
sub
and
xchg
test
pop
scas
shlb
stos
lcall
inc
cwtl
imulb
leave
xlat
or
sub
mov
add
aam
push
orb
in
lods
out
pop
lahf
movsb
test
adc
orl
scas
inc
rorl
push
rcrl
mov
jle
sub
data16
out
fstps
aaa
or
int
adc
sbb
dec
push
bound
lret
push
nop
push
cli
xchg
shll
loopne
les
inc
or
lret
pop
xor
lock
push
roll
mov
cmp
clc
aam
shrb
push
in
xchg
xchg
dec
sbb
in
mov
sub
push
push
iret
les
cmp
sub
sbb
and
sahf
inc
dec
out
repnz
mov
cwtl
and
push
fistl
loope
mov
out
aaa
cmp
push
imul
dec
jmp
and
es
loope
inc
fwait
movsl
jo
jbe
dec
cmp
sub
sbbb
jmp
les
xchg
mov
cmc
aas
mov
and
mov
push
int3
sub
std
inc
push
iret
mov
inc
icebp
fisttps
das
pop
lea
outsl
mov
dec
pop
sub
push
mov
jge
shrb
es
gs
mov
out
mov
xchg
ret
push
cwtl
dec
xor
mov
xchg
jge
or
loop
sti
mov
pop
mull
add
or
inc
aas
in
sub
into
xlat
xchg
cmpsb
jno
xchg
push
add
xor
in
xchg
lahf
imul
inc
mov
ss
cmp
lock
cld
adc
cltd
fsubrp
loope
fstps
add
shrb
mov
rcll
sub
pop
pop
mov
loope
inc
and
ficompl
xor
and
jnp
bound
inc
mov
std
sub
lods
add
sbb
cld
aad
jo
andb
std
xchg
das
movsb
daa
neg
stc
add
enter
sbb
mov
jp
int
test
push
iret
dec
or
cmp
mov
mov
mov
faddl
pushf
test
xor
sub
lahf
cmpsb
dec
loope
shll
test
mov
push
adc
mov
jg
jmp
cmp
ret
add
add
cmp
cs
xchg
pop
mov
rcll
lcall
pop
mov
out
sub
adc
jl
pushf
add
int
in
mov
push
sbb
dec
push
dec
push
out
aas
int
cld
je
mov
imul
pusha
rcl
mov
dec
pop
jns
xchg
fcom
jns
sub
subl
adcb
mov
push
movl
je
or
xchg
sub
xchg
sub
hlt
das
insb
lea
sbb
aas
mov
decb
shll
loop
mov
repnz
mov
mov
inc
push
cmpsl
test
or
xchg
mov
xor
test
scas
fimull
mov
popa
dec
mov
scas
test
cmpsl
shll
cmc
das
sbb
or
adc
mov
je
lds
popf
pop
xor
jge
mov
orb
cli
rolb
std
sub
fstl
ret
cs
cmp
inc
adc
mov
mov
push
sub
out
cmp
cmp
adc
pop
or
ret
dec
nop
mov
les
xor
sub
sahf
out
adc
adc
sbb
jne
lret
cld
gs
bound
aad
jecxz
movsb
push
lods
insb
movzbl
and
lret
sbb
test
incb
lock
adc
std
jae
scas
pop
jmp
int3
jo
sbb
icebp
dec
cmp
in
and
add
iret
mov
fs
jecxz
fisttps
and
and
adc
shlb
nop
aas
insb
mov
movsb
or
lret
push
and
scas
lcall
sub
mov
shll
enter
mov
inc
xchg
das
clc
roll
lret
adc
popfw
pushf
out
popf
pushf
mov
mov
push
movsl
sbb
mov
sbb
sbb
jo
cli
pushf
fwait
sub
cmp
fwait
clc
adc
pop
scas
push
test
inc
ficomps
cmp
cs
adc
lret
int3
mov
jg
jae
add
loop
ret
stc
jo
fpatan
test
xchg
jno
aad
and
xchg
scas
fs
add
sbb
pop
pushf
xchg
bound
movsl
imul
inc
int3
mov
mov
negb
and
popa
mov
mov
dec
adc
or
lret
push
sahf
insb
bound
jge
data16
aas
fs
cmp
pop
sub
sbb
push
stos
rcrl
ja
dec
or
add
popl
ljmp
jae
test
or
xchg
popa
sbb
loopne
mov
loop
xchg
jno
rclb
mov
cmp
stc
sahf
dec
xchg
cmc
inc
fs
xor
aad
loop
or
jbe
push
jno
dec
xor
lcall
lret
adc
out
or
lds
imul
mov
pop
sbb
sahf
xchg
in
push
push
addl
sbb
stos
mov
cld
or
sub
cmp
les
imul
out
mov
loop
out
rcrb
mov
add
bound
repz
out
mov
in
incb
fwait
test
mov
and
sub
jmp
pop
movsb
imul
je
xchg
inc
pop
push
ja
mov
jnp
mov
pop
arpl
add
xor
cmp
mov
push
movsbl
cmp
adc
adc
shl
jl
and
daa
mov
adc
psadbw
push
out
lret
test
pop
daa
subb
lcall
fistl
inc
xor
or
ljmp
xchg
int
pop
iret
pop
jne
lahf
xchg
and
sbb
shll
cmpsl
test
aad
iret
cli
and
in
pop
decb
add
lods
sub
pop
in
out
int
xchg
add
cmpsb
sarb
fists
inc
test
or
jns
pop
sub
xchg
jo
jp
and
xor
imul
int
adc
in
cli
ret
mov
rcr
aas
pop
inc
scas
in
mov
dec
outsb
mov
pop
outsl
and
arpl
mov
jmp
fiadds
cmp
sub
adc
mov
jmp
rcll
rcrb
or
mov
addb
gs
lret
mov
es
repz
inc
xchg
mov
es
xor
mov
aad
push
je
int3
or
push
xor
cld
cld
xchg
inc
or
icebp
popf
in
adc
push
or
mov
sub
sub
jle
pop
rol
sti
lret
sbb
mov
test
mov
cmpsb
loopew
jbe
and
inc
mov
sub
sbb
xor
push
or
orl
sbb
mov
add
scas
mov
jle
mov
cwtl
add
fistpll
dec
cmp
jb
jb
jle
cld
adc
das
mov
ljmp
jle
insl
pop
js
push
or
sbb
and
inc
pop
insl
mov
and
jg
push
test
pop
je
pop
xor
adc
inc
jb
fisubrl
popf
sub
xchg
push
clc
ret
jbe
mov
jl
pop
sub
std
mov
push
pop
adc
mov
pusha
out
bound
inc
cwtl
das
loopne
rcrb
sarl
and
repnz
testb
inc
inc
sub
jo
enter
inc
jmp
add
das
xchg
popl
and
push
int3
in
data16
cmp
das
xor
xchg
inc
ds
push
jo
das
mov
xchg
xor
mov
jo
daa
fidivs
xchg
or
jae
inc
jb
xchg
imul
popa
mov
and
loope
ja
ja
inc
icebp
push
dec
or
int3
xchg
arpl
pusha
out
dec
mov
xor
lds
repnz
mov
sub
jle
mov
push
movsb
scas
sbb
mov
in
lds
pop
push
movsl
hlt
loopne
sbb
test
gs
clc
pusha
or
add
inc
stos
add
es
aaa
ret
repnz
gs
fcmovu
push
ljmp
test
scas
mov
cwtl
sbb
adc
adc
inc
imul
push
cmc
and
out
out
rcr
mov
mov
and
jmp
fdivrs
inc
jns
addr16
outsl
cmc
test
js
aam
push
test
adc
lret
in
sbb
ljmp
pop
packsswb
cmp
test
nop
dec
addl
roll
add
dec
pop
xor
repz
and
add
xchg
or
sub
jne
lock
ljmp
jns
imul
in
cmp
sub
insl
loope
je
int
sbb
std
push
xorl
xchg
jp
outsb
daa
jne
test
push
scas
out
lret
cltd
xchg
fsincos
dec
imul
scas
jbe
push
cmp
pusha
inc
aas
dec
fmuls
div
ds
daa
repz
dec
pushf
push
xor
jl
popf
cmpsl
sahf
cmc
mov
sbb
frstor
test
add
aad
adc
add
pop
sahf
pop
fsubrl
roll
repz
aas
xor
mov
outsl
mov
test
jbe
xor
lods
jne
push
xor
in
push
stos
add
orb
or
mov
movsb
mov
pop
pop
or
sbb
xor
jo
addr16
dec
sahf
call
imul
xor
dec
sbb
xor
pushf
push
cmc
push
test
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
xor
ss
cmc
push
test
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
xor
ss
cmc
push
test
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
ret
les
aam
in
cmc
push
test
jbe
inc
mov
inc
cmpsb
push
sbb
xchg
jb
popf
mov
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
add
and
aas
mov
jg
ljmp
and
jo
pusha
out
push
filds
mov
mov
jg
outsl
rcrb
and
jo
pusha
out
push
filds
mov
subl
jnp
cmp
dec
inc
mov
imul
mov
mov
xchg
cmp
fsubr
fildll
out
stc
std
jo
jl
adc
sub
andb
xchg
push
iret
out
mov
and
lahf
pop
and
ret
sbb
repnz
jle
scas
push
mov
pop
sub
push
pop
sbb
lahf
out
or
xor
sub
pop
mov
mov
movsl
push
xchg
sbb
jo
incb
lods
lret
mov
test
sbb
outsl
pusha
xchg
das
mov
fcoms
stc
pushl
mov
hlt
stos
push
das
testl
push
adc
mov
pop
dec
ret
mov
add
push
filds
mov
mov
jg
outsl
rcrb
es
rolb
push
testb
xchg
pxor
xchg
les
jecxz
lds
push
mov
push
inc
mov
inc
std
adc
test
iret
ret
pop
in
jle
pusha
pop
sbb
add
cmp
cld
push
mull
xor
filds
mov
mov
jg
outsl
rcrb
dec
xor
add
push
filds
mov
mov
jg
outsl
rcrb
dec
xor
jg
mov
mov
jae
scas
xchg
lret
shrl
sub
inc
test
push
rorb
js
adc
jle
scas
sti
mov
add
jle
inc
and
xchg
rolb
adc
aaa
out
dec
pop
mov
insw
std
hlt
push
and
jbe
outsb
inc
adc
dec
nop
popf
test
ljmp
and
aam
and
inc
stc
jge
xchg
imul
jl
mov
call
aad
sub
or
test
ret
jp
out
push
mov
repnz
sbb
xchg
clc
jl
jmp
je,pn
jbe
fsts
xorl
in
bnd
adc
ds
and
outsb
loopne
outsl
loopne
je
sbb
movsb
out
push
ficoms
lea
sbb
adc
jecxz
orl
loope
xchg
ss
pop
ja
movsb
xchg
xor
mov
lods
mov
insl
aaa
mov
and
pop
shr
dec
inc
xchg
gs
and
dec
jecxz
xor
call
test
ds
aad
daa
cmpsl
pop
loopne
adc
sub
test
cmpsl
cmpsb
and
fnsave
ret
push
sub
das
sub
imul
jmp
inc
imul
add
mov
or
dec
push
notl
pop
cmp
js
sub
push
lods
mov
ja
sbb
cmp
int
ja
jge
repz
popf
imul
popf
sbb
data16
push
pop
scas
mov
jg
lea
ss
and
mov
gs
in
push
out
mov
mov
or
jnp
xchg
mov
mov
dec
push
ret
jl
in
cltd
sub
shrl
inc
jp
push
pop
push
test
pop
out
iret
pop
lahf
inc
pop
outsl
dec
bound
xor
mov
sub
outsb
cwtl
sbb
jbe
xor
decb
mov
mov
and
mov
in
vpunpckhwd
aam
and
mov
insb
aam
ret
jae
jmp
in
fisubs
inc
or
in
js
push
test
out
sbb
jae
in
mov
jno
and
lea
outsb
fs
cmp
ret
add
xor
pop
or
in
push
punpckldq
mov
loope
fcmovnu
adc
xor
fadd
ja
loop
fisubrs
loope
pop
cmp
test
dec
jge
loop
data16
outsl
sub
adc
mov
mov
insl
mov
push
pop
lahf
push
mov
dec
pop
cmp
cmp
lods
sub
ljmp
and
gs
ljmp
cli
mov
sub
mov
stc
or
fsubp
aas
pop
xchg
push
scas
mov
cmp
xchg
mov
cmp
xor
hlt
movsl
and
repz
or
and
pop
push
fnstenv
cmp
loope
jno
mov
mov
sti
lock
fdivrl
xchg
in
sub
adc
in
push
lods
xchg
or
mov
inc
mov
xor
clc
imul
jno
jae
dec
cmpsl
fildl
jb
scas
sbb
xchg
dec
or
out
lahf
bnd
cwtl
popf
nop
in
cwtl
aad
jl
daa
popa
pop
ds
cmpsb
jb
mov
pop
inc
pop
enter
sahf
dec
test
sub
jns
and
mov
je
lret
jo
mov
and
std
xor
scas
push
mov
je
divb
int3
js
pushl
and
cmp
outsl
push
fldl
mov
daa
outsl
pop
cmp
jae
in
sbb
pushf
out
jge
fdivs
dec
jp
xchg
mov
pushf
sub
dec
mov
mov
jnp
or
pop
mov
push
psubb
pop
int3
push
das
mov
jmp
daa
pop
jge
clc
lock
xchg
mov
adc
inc
jle
or
lret
push
mov
call
fidivrl
popf
sub
sti
sub
mov
and
cs
pushf
pop
out
daa
cltd
stc
mov
fisttps
dec
ret
sbb
inc
push
or
mov
cwtl
std
cmp
repnz
ret
dec
mov
push
sub
xor
fs
xor
sbb
xor
dec
cmp
sbb
popa
xor
push
notb
xor
pop
test
movsb
icebp
mov
test
xchg
xor
sub
dec
jnp
insl
or
inc
fisttpl
jbe
pop
sbb
push
data16
lcall
sbb
lds
push
xlat
clc
and
and
mov
in
out
aad
and
mov
sub
inc
daa
popf
push
jmp
dec
std
or
jbe
leave
test
mov
das
daa
or
cld
fsubrs
sahf
test
cli
fdivrl
jl
cltd
jno
popa
push
jl
dec
bound
dec
test
inc
mov
test
lret
cs
dec
push
or
mov
mov
hlt
xlat
loope
outsl
cli
and
movl
mov
fidivl
xor
data16
fsubrs
inc
lods
sub
xor
xchg
cmpsb
pop
jbe
xchg
fisttpll
xchg
cmpl
cmpsl
pop
cmpsl
jmp
adc
pop
iret
mov
rcrb
fnstsw
inc
mov
popf
push
push
cmp
pushf
mov
xchg
fcoml
lret
xor
js
mov
pushf
aas
lcall
aaa
test
cmp
dec
inc
jne
add
pop
push
sbb
jae
mov
aas
jg
std
add
gs
mov
xor
push
scas
mov
pusha
pop
push
movsb
xchg
push
or
sti
cmp
je
or
je
and
bound
inc
pop
movsb
outsl
fisubrs
hlt
cmpsb
push
add
stos
cli
icebp
addr16
inc
sub
jno
int3
loope
xor
lcall
dec
adc
test
mov
mov
rolb
pop
and
imul
push
fcomp
dec
push
mov
dec
lods
repz
pop
push
mov
mul
imul
mov
je
xchg
sti
dec
inc
push
or
sub
imul
dec
sub
shll
movsb
push
fistps
and
sub
lds
repnz
mov
push
cmp
test
loope
adc
shlb
and
sub
lock
or
sub
aaa
mov
push
incl
sarb
fwait
xor
cmpl
andl
jbe
sbbb
stos
ret
cli
pop
icebp
int3
pop
push
xchg
adc
dec
out
mov
mov
adc
daa
roll
pop
xor
adc
and
fwait
sub
ss
cmpsb
mov
jb
push
fsubl
jo
sub
adc
pop
pop
push
fs
push
dec
roll
out
mov
es
popf
loop
jns
aam
mov
mov
xchg
repz
xchg
push
cli
xor
loop
pop
int3
repz
movntps
mov
lret
pop
cmp
addr16
xlat
sbb
std
rcrl
mov
xor
push
adc
cmp
lock
fcompl
sbb
xchg
push
insl
push
stos
nop
sub
out
hlt
adc
mov
dec
add
fsubrs
fdivl
fwait
lock
add
add
sub
loope
test
xchg
mov
jns
int
push
push
sub
push
pop
xor
test
adc
push
dec
push
push
xor
insb
adc
decl
xor
sbb
into
pop
pop
and
jle
loopne
dec
inc
sahf
fwait
adc
adc
pop
out
adc
mov
call
mov
xchg
sarl
mov
dec
in
cmp
push
test
mov
pop
mov
scas
mov
sub
movsb
aad
xor
test
daa
testl
inc
add
leave
fwait
cmpsl
mov
sbb
sub
push
repnz
ss
push
addl
mov
insl
jne,pn
ret
test
pop
sub
push
jno
fs
mov
mov
dec
les
pop
scas
add
popf
xchg
ja
pushf
pop
push
mov
shlb
gs
xor
dec
push
repz
xor
sbb
cmpl
add
and
cmpsb
das
cmpsl
shlb
decb
inc
sub
mov
push
push
mov
repz
aas
rclb
and
xchg
pop
out
scas
xchg
out
jg
fucom
cmc
lret
shrl
push
pop
mov
dec
xor
rol
sub
jecxz
lods
aad
test
adc
jl
mov
jmp
mov
pop
aas
pop
dec
loopne
int
and
and
loope
dec
std
xchg
popf
and
sbb
loopne
outsb
pop
call
mov
addb
jp
xchg
int
add
ja
das
out
jle
daa
scas
dec
repnz
or
inc
inc
out
sar
lds
shll
pop
mov
call
lods
push
loopne
std
lret
popw
sbb
push
ds
jle
lret
ljmp
push
inc
vmovdqa
in
sbb
into
cwtl
add
mov
addr16
les
cltd
cmc
lock
inc
test
pop
rcll
xchg
add
xchg
sbbl
cmp
bnd
push
dec
js
dec
out
pop
cwtl
mov
clc
mov
jbe
mov
push
pop
pop
fucomip
mov
popa
rorl
ror
aam
mov
hlt
xor
and
lahf
cmp
jl
mov
fsubrl
push
mov
fcompl
inc
lods
movsb
push
loope
add
and
adc
in
mov
xor
mov
inc
dec
enter
push
jecxz
jb
pop
out
cmp
jnp
aas
stc
push
push
popa
popf
mov
cld
and
lds
mov
outsb
adc
lods
in
xor
and
or
adc
mov
push
icebp
loop
jno,pt
daa
popf
test
push
cmp
ud0
clc
xor
xchg
xor
adc
and
lcall
insb
mov
jg
fcoml
pop
mov
mov
cmp
or
xor
push
scas
mov
arpl
sub
ljmp
dec
ror
xchg
dec
test
mov
sarb
xchg
mov
lahf
imul
jg
and
xchg
lds
fisubrl
rcrl
mov
call
loope
jb
mov
mov
loope
inc
add
push
mov
fsubrp
popf
sbb
add
repnz
cmc
gs
inc
daa
data16
jbe
pop
xchg
lret
xchg
mov
fdivrs
push
data16
aad
dec
hlt
add
lret
adc
cli
add
jg
mov
inc
fucomip
insl
xor
push
hlt
int
icebp
icebp
insl
or
xor
jnp
fsubl
push
bound
and
add
jnp
rep
jnp
xor
cmc
fs
dec
syscall
pop
loop
jo
fmull
jle
cmp
sti
imul
mov
or
sbb
xor
pop
push
popf
sti
dec
mov
jb
and
in
xor
pop
xor
test
mov
orl
adc
inc
scas
or
enter
mov
in
push
enter
movsl
das
push
and
inc
in
dec
fs
adc
pusha
xchg
cmpsl
dec
push
cmp
test
movups
das
inc
jnp
cwtl
cmpsb
pop
push
sub
fcmovnu
shr
cmp
popa
cmp
xor
and
mov
pusha
push
in
xlat
mov
mov
fdivr
rclb
jecxz
xchg
xor
fdivrs
idivl
ja
test
xchg
icebp
mov
mov
cmp
sbb
xor
add
jb
mov
rcrb
aas
fsubl
jo
push
sbb
mov
xor
int
insb
dec
adc
cmp
sarl
andl
push
hlt
fcomip
pop
dec
adc
les
and
mov
sti
pop
mov
or
loop
jne
and
out
mov
push
stc
or
std
jae
add
decb
cmp
out
shlb
dec
mov
fisttpl
mov
nop
js
addr16
fisubs
mov
pop
mov
aad
sub
sbb
test
out
cwtl
push
pop
test
je
cli
shr
mov
call
and
inc
mov
or
lret
mov
test
pop
fwait
fs
out
adc
push
orb
rorl
sti
cmp
mov
add
mov
mov
push
push
jae
sub
ja
shlb
mov
jb
int
xchg
shll
lret
fsubs
dec
cli
push
mov
and
pusha
pop
fstpl
push
adc
pushf
xor
addr16
add
pop
or
adc
jl
jne
loope
repz
add
mov
pop
fistl
pop
es
stos
fwait
out
std
repz
jp
mov
mov
movsb
xchg
gs
movl
pop
js
xor
repz
or
xor
lret
mov
dec
or
mov
and
imul
outsb
addr16
push
pextrw
cs
sub
hlt
dec
mov
fistpll
xor
rcr
je
jge
pop
inc
inc
movsl
jge
adc
cmp
add
sub
push
shll
js
or
rolb
jl
call
out
jmp
jl
outsb
jbe
leave
negl
push
inc
cwtl
pop
mov
test
or
mov
in
fs
in
movsb
lods
into
aas
cmpsl
rorb
add
fdivrl
mov
jb
cmp
lock
dec
xchg
cmp
and
or
mov
or
add
ljmp
mov
test
int
rorb
push
jl
add
in
xchg
dec
jbe
call
jle
out
mov
and
adc
jo
in
lcallw
nop
outsl
pop
lcall
test
xlat
rcr
push
lods
subl
dec
pop
jecxz
add
mov
cs
int3
mov
adc
gs
test
or
jle
xchg
and
mov
leave
dec
inc
mov
inc
push
in
lret
sbb
mov
sti
cmp
xchg
lea
sbb
lret
dec
mov
cltd
cmp
push
cli
inc
leave
aaa
lea
fsub
bound
ja
xor
push
jnp
dec
inc
movsl
in
mov
xor
lret
mov
sub
xor
adc
dec
jp
in
shr
lea
and
fsubp
xor
call
sbb
punpckhbw
outsb
clc
dec
repz
lcall
sahf
inc
xlat
aam
dec
scas
jle
and
out
neg
imul
adc
mov
jbe
test
jge
int3
mov
lods
les
sub
jo
adc
movsb
outsb
repnz
jmp
in
sahf
push
lods
es
ficoml
cmc
repnz
mov
lcall
pop
dec
push
sub
lret
fwait
jmp
pop
add
mov
aad
fdiv
lret
rcrl
mov
mov
stos
adc
sbb
jbe
pop
addr16
lret
pop
push
mov
jnp
add
daa
dec
or
fbstp
int
and
xchg
mov
aas
insb
negb
jmp
pop
sbbl
cmp
xor
pop
hlt
std
fwait
or
cmp
cmp
or
jge
push
pop
push
xchg
movsb
add
inc
les
push
and
mov
lret
jmp
add
xchg
inc
sarb
negb
imul
mov
adc
lahf
jl
and
and
test
iret
sub
xchg
push
daa
out
jb
out
test
lods
jge
jnp
pop
and
add
test
or
sub
inc
push
and
push
dec
lahf
or
push
movsb
push
test
mov
sbb
lods
inc
cmp
push
and
jae
hlt
sbb
adc
adc
cmp
rolb
lds
and
fiaddl
jl
leave
push
and
mov
adc
xchg
mov
inc
mov
jg
dec
iret
mov
out
adc
xchg
xor
add
adc
or
mov
cmpsb
inc
call
outsb
mov
push
in
adc
adc
jmp
xor
jns
jp
int
insl
push
shl
imul
in
aam
xchg
aam
sbb
ds
jae
aaa
insl
daa
xor
mov
inc
ss
or
pop
rclb
add
hlt
mov
jge
shl
and
icebp
scas
rorb
mov
add
fs
mov
or
cmp
leave
inc
aam
push
aas
shlb
cmc
rcr
xor
xlat
mov
sbb
lds
cmpsb
psadbw
jl
push
fildll
and
notb
incl
xlat
push
dec
aas
cs
mov
xchg
insl
jmp
inc
je
jne
aaa
xchg
push
mov
data16
cli
in
aam
mov
das
mov
or
or
mov
stos
mov
sub
es
ret
fidivs
cs
popf
push
adc
insl
or
stos
jb
sbb
cmp
jnp
incb
cmp
push
push
push
push
sbb
adc
ljmp
inc
imul
shl
inc
mov
fidivs
aaa
push
in
addr16
cmp
and
dec
xchg
into
push
movsl
ja
mov
sbb
add
add
xor
xchg
data16
loopne
jne
push
xchg
dec
sarl
add
aaa
pop
into
repnz
inc
lahf
mov
out
or
mov
lods
movsb
loope
in
sub
test
lahf
bound
xchg
inc
push
out
push
flds
ljmp
xchg
or
push
pop
dec
enter
hlt
adc
adc
fs
push
std
popa
shrb
push
mov
mov
cltd
cmc
dec
int
ljmp
and
and
jg
cwtl
das
lea
negb
dec
push
xchg
add
push
test
push
es
push
out
sti
fidivs
sbb
gs
pop
mov
push
mov
loop
push
sbb
cmp
mov
clc
and
xchg
xchg
pop
add
lea
push
outsb
icebp
mov
and
mov
and
mov
pop
loopne
push
jmp
lods
lret
mov
jmp
enter
rorb
mov
ja
popf
pop
movsl
push
pop
mov
fimull
mov
cld
jno
push
push
xor
xchg
xchg
dec
test
push
sub
xchg
lods
cld
mov
inc
jae
inc
outsl
and
loop
cmc
rolb
clc
sahf
and
sbb
insb
lds
pop
lods
out
out
fiaddl
filds
dec
leave
cmpsb
sarb
add
test
pop
icebp
dec
cmpsb
ja
es
and
cmpsb
and
jne
xchg
add
mov
mov
or
pop
arpl
pushf
pop
push
ljmp
je
mov
push
jle
test
inc
or
lcall
push
or
xor
int3
arpl
fisubrl
fimuls
jmp
mov
xchg
jnp
jle
sub
xor
fwait
div
pop
mov
mov
mov
sub
and
je
xchg
xchg
pop
gs
mov
sahf
stos
sbb
dec
fmul
xor
inc
in
fldt
insb
test
dec
into
lods
xchg
inc
pop
lcall
jno
push
insb
or
fadd
movsl
lods
adc
inc
cmc
mov
movsb
mov
cs
cltd
fwait
jno
push
inc
insb
daa
data16
pop
mov
cmp
xchg
and
dec
xchg
imul
loopne
sbb
push
xor
sbb
cld
fbstp
push
sbb
sub
fimull
xor
enter
fs
lods
addr16
nop
mov
mov
pop
xor
xchg
and
dec
xor
jp
es
aad
mov
scas
dec
mov
xor
pop
and
dec
dec
push
jne
rcrb
inc
sub
xchg
dec
or
xorb
mov
sar
sub
mov
add
inc
adc
mov
in
in
xchg
sarb
mov
testl
mov
loope
scas
loop
mov
xchg
mov
sbb
inc
xchg
cltd
sub
outsl
std
dec
int3
mov
cmp
insl
adc
fs
ret
and
push
jne
lods
sbb
xor
out
js
xor
das
lahf
add
push
filds
mov
mov
jg
outsl
rcrb
dec
xor
add
push
filds
mov
mov
jg
outsl
rcrb
dec
xor
add
push
filds
mov
mov
jg
outsl
rcrl
dec
xor
add
rcr
ror
aas
pop
test
pop
cmpb
push
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jecxz
push
inc
mov
gs
xchg
mov
and
push
cmc
push
in
xchg
jle
dec
mov
movsl
cmpsb
push
mov
gs
adc
ficomps
aad
lds
cmc
push
in
stc
sbb
je
ds
or
gs
adc
es
push
shll
cmp
sub
or
sbb
mov
scas
sbb
cmp
popf
mov
cmp
mov
sub
loopne
adc
pop
das
stos
mov
cmc
sub
mov
hlt
push
scas
dec
mov
push
arpl
popl
outsb
add
icebp
lods
loopne
xchg
xor
mov
adc
popa
repz
lret
xor
mov
add
pop
cmp
insl
cmp
jno
add
pop
mov
inc
adc
adc
xchg
add
icebp
or
test
mov
pop
sub
mov
and
dec
cmp
xchg
prefetch
lock
jle
or
mov
gs
adc
and
lods
add
push
xchg
pusha
test
cmp
fcoml
add
jne
xorb
fnsave
jno
lods
jg
pop
nop
jg
pop
adc
cmp
sbb
scas
xor
and
adc
xchg
dec
mov
sahf
jg
imul
test
jecxz
lret
lea
stos
cmp
add
cs
lds
cmc
push
in
xchg
jle
dec
mov
movsl
scas
push
mov
gs
adc
fisubs
push
cmc
push
in
xchg
jle
dec
mov
movsl
scas
push
jp
es
shll
mov
pop
sub
in
pop
and
in
addr16
outsb
sub
mov
cs
ja
adc
aas
dec
into
shlb
nop
xlat
adc
xchg
mov
pop
fstpt
or
pop
jnp
xor
jl
jmp
iret
iret
mov
test
test
mov
mov
stos
xlat
or
insb
adc
mov
cmpsl
mov
pop
sti
sahf
push
jl
xor
roll
imul
pop
leave
int3
mov
stos
stc
xchg
add
aam
leave
push
pop
and
movsb
nop
push
xchg
jne
clc
adc
into
les
outsb
nop
jecxz
mov
sub
xchg
testl
test
jmp
out
pusha
xchg
aam
outsl
sbb
ffree
mov
mov
mov
xlat
mov
bound
or
dec
inc
dec
add
mov
sub
add
inc
or
popa
aam
pminub
in
mov
jp
lds
fisubl
cmc
orb
inc
add
movsl
lods
dec
pop
fsts
outsl
das
lock
test
inc
inc
mov
mov
adcl
arpl
movsb
pop
pop
pop
xchg
and
xor
inc
xchg
xor
sbb
clc
jae
and
add
int
les
es
or
test
dec
cld
mov
and
stos
mov
mov
stc
push
mov
push
je
mov
inc
inc
add
mov
mov
push
pop
aaa
js
imul
mov
xchg
mov
cmp
adc
dec
imul
xor
cmc
xchg
repnz
repz
mov
test
cltd
xor
inc
mov
jg
fdivl
cld
push
xor
add
repz
and
xlat
jp
mov
adc
stos
popf
jns
sbbl
adc
repnz
push
mov
rorl
lods
inc
jge
std
mov
add
mov
out
inc
scas
push
and
cli
aam
sbb
sub
popf
and
orb
fwait
mov
repnz
int3
fiaddl
int
mov
daa
cs
xor
jge
addl
xor
das
outsb
imul
lret
adc
adc
rcrb
sbb
stos
sub
lods
mov
adc
pop
scas
jns
pop
sti
add
out
sti
mov
aad
insl
and
mul
jne
pop
push
pushf
daa
jb
or
jecxz
lds
les
mov
repz
pop
sub
imul
addr16
jmp
and
pop
xorb
xor
in
cmpsl
mov
int
fs
movsb
xchg
rcrb
dec
pushf
dec
sbb
mov
cmp
cli
xchg
mov
push
mov
dec
imul
je
pop
pop
xchg
ret
dec
ja
ljmp
dec
cmp
lahf
loopne
movsb
into
pushf
sub
fnstsw
and
xor
add
cmp
in
push
stos
sti
shlb
dec
cli
cwtl
mov
les
mov
repnz
sti
mov
add
dec
jmp
test
loopne
cmp
xlat
sti
repnz
mov
cmp
add
clc
nop
mov
pop
dec
nop
jmp
scas
addr16
xchg
loop
insb
push
rcl
pushf
push
inc
cld
and
ret
sub
mov
mov
inc
je
pop
int
into
dec
and
call
dec
adc
jbe
push
mov
mov
stc
mov
mov
pushf
lret
mov
imul
mov
clc
inc
adc
push
aaa
push
mov
shlb
fldcw
mov
out
jbe
mov
flds
scas
push
test
cmc
andl
loopne
ss
or
and
xor
movsb
je
push
out
mov
mov
push
push
sub
adc
ljmp
sub
jp
sub
pop
stc
add
fldenv
push
push
outsb
xor
jno
mov
icebp
imul
sti
or
mov
pop
inc
into
push
inc
les
mov
dec
xchg
xchg
mov
xchg
mov
lea
add
outsl
sbb
inc
pop
faddl
xchg
test
adc
inc
mov
out
cmpb
pop
jmp
cltd
sbbl
test
mov
add
fs
mov
dec
or
add
adc
daa
sbb
fistl
push
and
pop
sub
inc
notl
enter
out
ret
inc
jne
ret
fwait
xchg
out
in
ds
scas
in
sbb
int
pop
stos
test
xchg
and
mov
inc
call
mov
xchg
dec
add
outsl
mov
push
or
inc
in
cmp
lcall
mov
scas
push
xor
push
divb
mov
mov
fsubl
shrb
mov
jns
xor
push
jge
imul
jle
scas
lods
mov
adc
fnstsw
sub
pop
iret
aam
cwtl
shl
ret
fsts
cld
jb
mov
jno
push
xlat
pop
shll
ljmp
push
aam
xchg
roll
sub
cmp
ds
add
dec
cmc
aad
aad
enter
imul
pusha
pop
or
mov
popf
push
sub
inc
je
iret
mov
lods
adc
inc
lock
xchg
leave
lret
int
xchg
cmpsl
push
or
pushf
adc
jno
mov
filds
inc
sub
mov
inc
int
and
sub
dec
sbb
mov
addb
repz
pop
mov
cmpsl
std
loope
sub
stos
dec
mov
or
jae
push
subl
shr
in
rolb
ret
xor
fisubs
pop
sbb
sbb
cmp
ja
add
je
sbb
add
loopne
xchg
iret
xor
mov
mov
rolb
mov
andl
mov
lahf
push
pop
cmc
mov
mov
inc
cltd
movsl
adc
add
out
inc
iret
xor
and
push
cmp
dec
mov
leave
out
or
and
call
aad
mov
inc
adc
and
push
mov
int
inc
fcoms
lods
cmpsl
push
pop
fs
or
in
mov
push
jle
je
outsb
jae
mov
in
push
xchg
ja
lahf
enter
push
jnp
repnz
out
xlat
or
bound
mov
mov
dec
movb
test
sub
decb
shlb
call
mov
inc
or
sbb
add
fnsave
lcall
out
inc
xor
push
fwait
and
adc
shr
sbb
stos
push
lret
das
mov
xor
sub
push
ret
lea
xor
stos
or
lds
push
cmpsb
imul
clc
cmp
inc
sub
lcall
addr16
pop
pop
lods
jb
pop
mov
test
inc
cmc
fs
movsb
jo
cld
setp
stc
fsincos
data16
mov
xor
sub
sub
bnd
scas
jnp
cmpsl
js
xchg
stos
outsb
or
imul
cmp
mov
out
pusha
push
or
cmpsb
shl
rorb
inc
mov
fwait
imul
or
je
jmp
xor
psllq
sahf
iret
jg
hlt
test
lahf
mov
pop
out
imulb
jmp
mov
out
mov
in
in
jl
arpl
test
stos
mov
test
fistps
sbb
aam
mov
mov
add
fdivrs
adc
xor
mov
popf
shrl
and
xchg
daa
les
mov
dec
fidivl
mov
jne
pop
inc
int3
scas
mov
mov
mov
fsubrl
test
insl
popa
mov
pusha
sub
out
lcall
add
out
dec
fcomps
push
adc
sub
xchg
out
aam
cmp
xorl
loopne
iret
mov
repnz
adc
cmc
jo
adc
out
mov
shrl
mov
gs
push
or
xchg
les
xchg
cmp
and
mov
divl
sti
idivl
nop
jecxz
mov
cltd
pushf
pop
sub
sarl
mov
call
dec
aam
push
mov
out
add
push
push
xchg
mov
or
jo
mov
dec
jns
cmp
cmp
rolb
xor
adc
cltd
xchg
int3
inc
mov
sub
out
bnd
cmp
clc
or
in
adc
jg
ret
lcall
cmp
ss
gs
dec
leave
pusha
ds
or
dec
loopne
jno
pop
lret
rcrb
mov
cmpsb
xor
icebp
out
lret
out
push
in
adc
repnz
jg
sub
lock
enter
ret
aas
adc
cmp
gs
sbb
test
pop
jecxz
pop
adcl
or
push
and
pop
stos
mov
xlat
fdivrs
outsb
pop
xchg
sbb
fucom
aad
add
mov
shrl
push
jne
jno
out
clc
pop
sti
inc
sbb
jne
push
and
push
mov
jp
fcomip
cmp
mov
mov
cli
jmp
js
or
repnz
push
xchg
mov
cmp
int
push
mov
pop
fldl
dec
rcrb
fbstp
fmull
fcmovb
sbb
sub
shlb
aam
repnz
lock
imulb
leave
pop
xor
sbb
adcb
mov
je
push
scas
movsb
push
mov
ficoml
cmc
jo
shlb
movsb
fadds
inc
lcall
mov
out
sub
dec
xorb
out
shr
cmpsb
mov
out
add
mov
pop
dec
sbb
nop
push
xor
sub
pop
inc
aas
nop
inc
pop
sar
mov
xchg
or
cmp
lds
add
jl
notl
insl
jo
dec
push
add
inc
jne
mov
loop
inc
enter
adc
add
cmp
dec
negl
mov
lahf
or
sbb
xchg
lcall
pop
aam
xor
sbb
mov
fisttpl
xorb
push
aaa
adc
xchg
mov
mov
push
call
push
and
pop
add
inc
add
push
aad
fdivrl
sbb
lods
fincstp
loopne
insb
jle
cmp
cmp
xor
insl
xor
arpl
sbb
cmc
lock
out
push
mov
movsb
cli
scas
or
mov
mov
pop
push
cmpsl
in
sarl
adc
data16
insl
icebp
fisttpll
add
pop
or
nop
mov
cmp
mov
mov
xor
andl
pushf
dec
stc
or
scas
loopne
imul
push
jnp
add
fldcw
stos
fdivrs
adc
mov
jg
outsb
adc
xchg
hlt
mov
scas
mov
das
popf
aad
fsts
push
or
sti
repnz
inc
fadds
pop
popf
xorps
cwtl
sub
adc
cmp
xchg
movl
roll
shll
sub
out
loop
adc
test
ds
loope
iret
push
std
fstps
adc
mov
nop
jae
bound
inc
xor
adc
mov
or
push
xor
lea
fstpt
popf
push
lds
jge
sbb
call
push
adc
mov
xchg
jge
leave
sbb
out
imul
in
jb
test
in
dec
sti
inc
push
sub
cmpsb
jnp
sub
jns
pushl
mov
push
or
lret
inc
popa
scas
insb
mov
lock
xor
insl
sbb
lds
sub
push
mov
jge
jae
jl
mov
mov
rcll
push
std
mov
mov
aad
adc
ret
test
scas
das
loopne
je
xchg
popf
cld
add
jg
clc
bound
pop
pushf
xchg
ficompl
sbb
jp
and
and
leave
sub
ja
pop
je
cmp
in
mov
add
push
mov
movsb
out
idivl
repz
dec
and
lret
ror
out
in
stc
data16
mov
xchg
cmp
xchg
lock
xor
aas
stos
inc
cmp
pop
pop
scas
arpl
das
mov
pushf
mov
push
jae
test
jg
push
sbb
arpl
xor
rorb
hlt
js
lea
mov
xchg
jnp
dec
pop
scas
jl
inc
arpl
icebp
pop
sahf
adc
xlat
xor
sub
dec
and
inc
shlb
shl
orb
xor
jb
addr16
xor
jno
outsl
jno
in
mov
std
shlb
add
jne
push
or
dec
pop
lds
stc
mov
lea
sti
xchg
mov
push
push
test
mov
mov
inc
jnp
ja
pminsw
gs
mov
adc
mov
out
js
addr16
xor
fldenv
cmp
push
or
dec
int
xor
push
test
in
mov
push
sub
inc
aam
cld
pop
mov
in
and
jmp
jp
in
and
push
hlt
stc
push
bnd
shrb
mov
stos
mov
adc
cwtl
jle
mov
enter
mov
mov
int
sub
pop
mov
inc
and
mov
dec
or
push
in
lods
jle
push
aas
jle
add
hlt
es
mov
jns
cwtl
add
test
pop
ja
movsl
xchg
add
rcll
test
aad
fisubl
sbb
daa
vshufps
rcrb
mov
xor
sub
and
ret
xchg
fisubrl
or
loopne
ds
jns
fpatan
rorb
push
fiaddl
cmpsb
pop
dec
cmp
scas
call
hlt
adc
divl
pushf
sahf
out
fbstp
fs
js
lods
lds
out
xorl
mov
imul
stc
repnz
xchg
xlat
jmp
outsl
xchg
pusha
sbb
pop
rol
mov
imul
rclb
lods
scas
pop
mov
scas
adcl
inc
mov
cmp
mov
add
inc
and
fwait
adc
adc
push
shr
and
lcall
std
out
mov
leave
dec
pop
clc
xchg
or
sub
and
nop
imul
dec
or
fwait
nop
dec
js
push
cld
sub
jl
imul
adc
sbb
stc
shr
outsb
rcr
repnz
mov
lods
dec
daa
or
fwait
mov
aam
cmp
mov
ja
mov
movsl
adc
stos
and
dec
cmp
shlb
lea
ds
sub
xlat
sub
aaa
fcoml
lods
jno
shl
stos
sbb
xchg
cmc
xorl
test
out
bound
push
pushf
push
xchg
and
pop
inc
fstpl
gs
inc
jl
shr
add
andb
into
mov
adc
or
push
xchg
xchg
jne
jae
adc
jg
fcompl
bound
out
add
inc
faddl
cltd
ret
mov
inc
add
lock
dec
inc
xchg
xchg
xor
imul
repz
mov
jne
fwait
mov
xlat
ljmp
cmp
or
lock
ljmp
std
jno
cmp
adc
add
jg
fcmovnu
or
loope
loopne
mov
mov
cmp
sub
sub
push
lahf
std
cmp
lods
lahf
dec
sar
stos
add
ds
movsb
aad
add
outsl
cwtl
add
sbb
pushf
aad
sbb
xchg
sub
push
mov
cli
inc
mov
inc
jo
sub
cwtl
and
cli
ds
ret
adc
lahf
cmp
fwait
jge
adc
mov
inc
cld
jl
sub
repnz
pop
mov
shll
inc
ljmp
test
xlat
mov
pop
aaa
cmp
test
adc
test
movsb
outsl
in
jo
movsb
subb
out
xlat
out
and
and
lock
pop
sbb
xchg
or
adc
and
cmpsb
sbb
cmc
add
pop
push
sbb
inc
setl
add
push
pop
ss
stos
insb
push
push
or
jnp
mov
push
lds
push
out
cmp
mov
inc
or
jne
lods
into
int
or
adc
pop
inc
das
mov
ret
jle
lret
pushf
or
andb
shrb
negb
pusha
lea
mov
cld
mov
out
adc
sbb
push
dec
mov
in
lds
outsl
std
leave
idiv
xor
roll
rcl
into
push
mov
mov
jbe
or
or
or
jno
in
xchg
inc
mov
mov
cwtl
and
testl
test
loopne
jne
pop
inc
jp
arpl
insl
in
mov
not
or
lahf
fcmovb
sub
popf
xor
das
pop
xor
out
mov
xchg
lods
pop
ret
aas
adc
xor
and
cwtl
mov
lods
int3
sub
mov
push
jmp
pop
mov
adc
in
dec
clc
std
jmp
inc
mov
inc
cmp
frstor
xchg
iret
sbb
fdivrs
repnz
bswap
jne
xchg
pop
cmc
inc
repnz
popf
pop
jno
ljmp
negb
push
lret
aam
xchg
fmulp
cmp
cmpsl
mov
stc
mov
push
add
cs
repnz
ss
add
sub
pusha
mov
xor
xchg
insl
movsb
loopne
sub
or
xchg
and
leave
dec
xchg
shll
jno
stos
out
mov
mov
test
aaa
sub
fisttpl
imul
adc
lods
pop
pushf
xchg
adc
adc
pop
xchg
mov
jmp
push
add
mov
mov
and
or
jl,pt
rcrb
es
mov
xor
mov
mov
dec
insl
pop
ljmp
hlt
daa
ljmp
fstp
or
call
cwtl
repz
mov
fs
in
enter
cli
out
test
mov
pushw
push
sub
jp,pt
std
add
mov
xchg
outsl
push
test
aas
imul
js
pop
scas
adc
mov
ja
and
jo
pop
out
nopl
add
jge
xor
xchg
mov
cmc
push
jo
repz
jg
pop
std
pusha
mov
inc
jmp
ja
push
cmp
out
in
in
int
pop
push
and
mov
mov
and
mov
cmp
mov
mov
std
dec
out
xor
push
shll
and
pop
test
andl
mov
sbb
jbe
mov
in
add
jl
inc
and
movsb
xchg
lods
mov
lea
jl
lds
jecxz
pop
int
sub
inc
cmp
cmpsl
into
out
fdivrs
outsl
jo
mov
daa
pop
iret
cmp
or
inc
js
inc
dec
daa
cmp
lret
xor
inc
mov
fmulp
sub
xor
lods
sub
pop
add
cmp
or
scas
insb
cmp
and
push
sub
movsl
fsubr
int3
xchg
push
repz
jae
mov
sub
mov
outsb
mov
stos
dec
imul
cmp
mov
or
mov
adc
out
mov
adc
add
lock
adc
js
and
jle
rorl
jp
jns
aaa
pop
mov
mov
mov
stos
lods
fbld
sbb
mov
jl
scas
inc
stc
mov
cmp
aaa
cmp
stos
push
pop
pxor
sub
int
lods
xchg
in
jge
mov
xchg
or
lahf
and
push
daa
aam
aam
cmp
in
lret
call
pop
ja
aam
int3
mov
jecxz
cmp
dec
sbb
push
dec
popf
test
jp
pushf
xor
fmull
mov
xchg
cld
lods
faddp
or
push
shr
out
xchg
pop
dec
sbb
inc
push
sub
test
mov
aas
fwait
add
jnp
into
xchg
pop
mov
mov
cmp
add
pop
inc
and
cs
add
mov
jb
add
je
repz
in
sub
mov
push
dec
outsl
stc
and
imull
xlat
nop
jb
aaa
ud1
scas
jb
xchg
xor
dec
xor
hlt
and
xchg
mov
imulb
add
xor
dec
jmp
lahf
idivl
popl
mov
movsl
in
pop
mov
jne
scas
xchg
push
and
mov
mov
mov
add
stc
in
roll
andb
incb
cs
lds
cmc
push
in
xchg
jle
dec
mov
movsl
scas
push
mov
gs
adc
fisubs
push
cmc
push
in
xchg
jle
dec
mov
movsl
scas
push
mov
gs
adc
fbld
pop
cmc
sbb
outsb
xchg
test
outsb
movsl
mov
xchg
inc
push
jne
gs
adc
pop
and
movsb
cmc
push
xchg
sbb
mov
aas
fmuls
enter
fistl
mov
scas
push
popf
cmp
push
fucomip
das
call
pop
mov
dec
mov
lods
push
lahf
cmp
ss
aas
rclb
push
mov
push
lahf
inc
js
arpl
pop
scas
gs
imul
push
xchg
jnp
xchg
mov
push
cmpsb
stos
shll
andl
xchg
mov
adc
pop
test
jb
jle
xchg
jecxz
in
subl
xchg
push
cmpsl
lahf
inc
lahf
test
stos
hlt
iret
test
xchg
push
or
cmp
mov
sub
sbb
ljmp
mov
iret
fildll
jg
aas
cmp
inc
das
popf
dec
mov
mov
pop
outsl
adc
mov
inc
loope
sbb
pop
fiadds
dec
push
pop
jo
xchg
mov
xchg
xchg
jb
iret
lock
and
fists
push
and
xchg
dec
clc
mov
or
cmp
call
add
cwtl
push
xchg
inc
popa
mov
cmpsl
inc
xchg
push
xchg
divl
call
mov
aas
mov
cmp
adc
push
lock
orb
insl
mov
push
call
sbb
sbb
dec
hlt
sub
xor
push
fcompl
pop
nop
push
outsb
ficompl
outsb
enter
test
cwtl
dec
mov
scas
push
lahf
cmp
sub
sbb
or
clc
das
call
pop
mov
dec
mov
scas
push
lahf
cmp
sub
sbb
or
clc
das
sub
xchg
push
test
daa
repz
cmpsb
add
cwtl
adc
lcall
push
cs
ljmp
mov
mov
fdivs
jae
sbb
adc
adc
sahf
xchg
sub
pop
pop
repz
std
orb
enter
fcomps
bound
aad
data16
outsb
cld
popa
jg
sbbb
cmp
pushf
enter
push
xchg
cli
out
mov
pushf
outsl
cmp
mov
sbb
adc
popf
stos
and
xchg
sti
add
repnz
mov
xchg
daa
push
ss
cmpsb
mov
je
aaa
push
xor
cld
cmc
cwtl
or
dec
fidivrl
add
std
aad
mov
sub
mov
movsl
adc
sub
leave
dec
mov
mov
and
sbb
mov
jno
popa
cld
pop
daa
enter
mov
mov
outsb
xchg
outsl
std
inc
std
mov
test
adc
add
sub
cmp
rorb
push
add
roll
fs
cli
nop
fstl
xor
jb
push
jb
or
inc
pop
sbb
icebp
cld
dec
and
mov
subl
cmp
jo
fsubs
adcb
sbb
outsb
cwtl
adc
lret
push
int
mov
jo
xor
inc
sbb
xchg
xor
add
enter
sahf
sub
xchg
lahf
xor
mov
je
push
mov
fiadds
mov
test
cmc
iret
mov
xchg
inc
adcl
and
jb
ljmp
lret
jo
in
sub
scas
pop
mov
loopne
inc
pmaxsw
cmc
inc
mov
inc
dec
rcrb
mov
jle
pop
mov
out
and
or
mov
mov
cmp
ror
dec
pop
xchg
jge
add
push
add
push
stos
cmp
rclb
adc
mov
jp
push
add
jae
push
ja
loope
xchg
or
pop
cmp
or
xor
imul
in
fcomip
jl
popa
test
xchg
jmp
jo
rcl
jb
mov
inc
jmp
in
push
aad
cmp
arpl
jns
mov
mov
xchg
clc
pop
iret
cmc
cltd
pop
jmp
xor
push
rcrb
mov
aaa
mov
adc
push
sahf
mov
jp
jnp
dec
xchg
push
in
stos
ja
push
inc
icebp
aas
cli
push
push
aam
out
imulb
adc
testl
out
flds
std
popf
int3
push
sub
ret
xchg
jge
pop
jo,pt
mov
pop
push
pop
pop
out
mov
sti
movsb
div
cmp
push
dec
xor
jecxz
loop
test
les
test
imul
mov
stc
gs
clc
fdivl
mov
xor
sub
mov
idiv
xor
mov
mov
arpl
sbb
mov
mov
jae
mov
adc
in
js
pop
adc
gs
or
push
stos
out
push
gs
test
scas
cmp
cmp
pushf
mov
jne
enter
lods
pushf
cmc
xlat
shl
testl
push
mov
jb
sbb
sub
pop
mov
pop
mov
nop
sbb
cmp
xchg
xchg
mov
cmp
out
mov
out
and
decl
mov
sub
imul
cmp
cmpsl
cmp
mov
movsl
jbe
cltd
es
movsb
nop
scas
shrl
mov
aaa
lds
cmp
pop
push
adc
jns
add
arpl
xlat
fcomip
nop
addr16
popf
test
mov
jmp
std
test
lcall
mov
aas
push
imul
scas
loop
mov
xor
fdivl
in
mov
cmp
out
mov
jb
std
fmull
cmp
fsubrl
pushf
je
es
jg
mov
hlt
std
enter
jp
xlat
out
pushl
dec
or
inc
inc
test
fs
gs
sti
or
inc
scas
addl
sub
dec
mov
test
sarb
rcl
loope
cmp
xlat
out
or
int
jle
fwait
lahf
cmp
out
outsb
sub
pop
pop
int3
push
jl
pop
ss
enter
push
test
shll
fs
pop
stos
fcmovbe
lret
mov
andl
inc
out
clc
push
test
xchg
pop
push
xor
mov
jae
fisttps
mov
cmp
pop
rcrb
stos
cwtl
dec
mov
pop
stc
pop
jo
ficompl
loopne
in
jp
icebp
popl
dec
cmp
rclb
and
test
jnp
jb
movsb
dec
out
mov
xor
xor
adc
cmc
mov
ja
outsb
rcrl
sbb
repnz
pusha
mov
xchg
adc
pushf
dec
insl
test
sbb
pop
jae
adc
or
push
jbe
mov
add
inc
popa
ret
cli
dec
or
data16
lods
inc
lods
ss
inc
fs
sub
fmuls
pop
aam
push
jne
push
lgs
mov
add
dec
cmp
jbe
enter
and
adc
mov
jb
mov
cmc
xchg
sbb
outsl
dec
and
push
pop
pop
fbstp
popf
cwtl
push
push
cmp
repz
std
mov
mov
xchg
cmp
pop
mov
dec
jge
mov
inc
int
imul
pop
insl
in
inc
xor
or
ljmp
jno
sub
fldenv
imul
fdivl
and
push
inc
and
jno
mov
and
or
lock
shll
xchg
pop
pop
hlt
aas
roll
mov
sbb
add
adc
fiaddl
jno
shl
pop
inc
shl
xchg
sbb
aam
ja
and
rolb
shll
out
or
mov
les
lret
lds
mov
pop
cmp
xchg
xor
icebp
mov
ret
mov
sahf
sbb
inc
xchg
or
movl
in
stos
mov
adc
lret
aam
dec
cmp
lds
aas
jne
xchg
pop
andl
jecxz
add
push
mov
push
flds
jl
mov
inc
les
data16
sub
inc
mov
rorb
mov
ja
cld
mov
je
fs
mov
imul
sti
xchg
mov
pop
in
xor
fwait
jg
movsb
int
sbb
xchg
pop
mov
sbb
shrl
loope
lret
jg
dec
fs
arpl
int
xor
jb
subl
cmp
mov
push
int3
xor
movb
incl
and
rorl
push
mov
inc
jne
jne
imul
cmp
sub
ret
sbb
xor
mov
icebp
insb
pop
insl
imul
and
xchg
push
clc
xchg
jnp
cmp
mov
xor
adc
pop
pop
or
int3
xchg
pinsrw
int3
jne
inc
pushf
pusha
jmp
or
sbb
aas
pop
sub
cmp
mov
lods
sbb
or
es
push
clc
mov
xchg
xor
loopne
dec
aam
sub
sub
inc
fwait
out
test
mov
xchg
mov
loope
jne
lea
jp
into
cmp
pop
shrl
into
xor
fidivl
repnz
cltd
cmp
testb
mov
test
sbbl
mov
jnp
dec
xchg
jb
add
sbb
sub
dec
stos
iret
clc
mov
fcomps
mov
sbb
iret
push
push
adc
inc
cmp
clc
cli
xor
mov
push
sub
jl
inc
dec
xlat
lds
xchg
jno
cmp
push
inc
clc
lret
outsb
add
add
push
mov
or
push
mov
dec
dec
sbb
jg
xor
lods
xchg
mov
test
mov
testl
sub
xor
fs
out
push
dec
mov
or
fdiv
xchg
pop
dec
ja
stc
lods
add
out
jmp
pop
dec
dec
ret
jle
jge
push
loopne
stos
vpackssdw
cmp
addr16
sbbl
scas
mov
pop
cmp
aad
mov
std
push
cld
jg
or
xchg
push
faddl
daa
xchg
dec
sub
fcoms
fists
pop
mov
cmpl
xor
mov
aaa
mov
outsl
adc
pop
pop
lods
lock
shlb
pop
jns
push
sbb
js
cld
sbb
popf
push
mov
test
test
add
into
arpl
pop
inc
int
jb
pop
jne
cmp
adc
xchg
pop
aad
aas
xchg
movsb
fcoms
leave
xchg
fistpll
movsb
stos
mov
push
mov
mov
push
icebp
and
cmp
pop
aaa
xchg
mov
mov
jmp
inc
repz
push
push
pusha
jns
rcrl
inc
test
testl
jle
jns
rclb
mov
cmc
fldcw
sub
mov
mov
push
shl
mov
cmp
add
or
xor
sbb
pop
adc
aas
push
mov
sub
outsl
insb
mov
scas
xor
test
into
adc
or
out
les
adc
cwtl
iret
or
pop
daa
in
clc
loope
or
fwait
push
outsl
add
jne
pushf
add
dec
fnstsw
aam
popa
cld
cmc
adc
mov
jno
es
cmp
mov
loop
push
fstpt
lods
cmpsl
ljmp
and
inc
jns
sbb
mov
leave
out
nop
mov
sbb
shrb
sti
jo
pop
sti
dec
cmp
adc
sub
lret
mov
movsl
data16
jne
shll
loopne
mov
push
sti
repz
loope
dec
mov
jecxz
ja
mov
je
pop
cmpsl
xchg
lcall
aam
fsubrs
xchg
inc
adc
ja
sti
sbb
fstl
fbstp
daa
mov
arpl
mov
addr16
push
in
ffree
dec
cmp
mov
jmp
cmpsb
lods
cld
repz
repz
mov
inc
adc
and
and
mov
push
iret
sub
insl
mov
ljmp
test
push
push
push
je
pop
push
sub
mov
adc
jecxz
dec
in
pop
dec
xlat
sbb
stos
cmpl
imul
mov
insb
divb
xlat
ficoml
lock
xchg
roll
add
rcll
mov
lea
in
dec
or
daa
rcl
mov
xchg
ja
inc
mov
idivb
out
ss
jo
fwait
xchg
idivb
push
cmc
sub
dec
clc
pusha
bound
pop
dec
ret
jb
jecxz
imul
shrb
in
jge
stc
testl
aas
pop
lret
adc
fbstp
lods
imul
cmp
imul
cmpb
das
neg
ret
orl
imull
xchg
cli
cs
sbb
push
iret
mov
push
dec
inc
stos
mov
push
pop
test
and
xor
lods
jo
jnp
and
and
rcrb
jmp
inc
xchg
xchg
mov
test
or
pop
call
jge
push
mov
pushf
cmp
sbb
cmp
and
dec
mov
adc
not
dec
out
movsl
data16
ror
divb
sahf
dec
pop
and
daa
out
sar
ror
stos
cmp
popf
xor
dec
xor
sbb
loop
push
out
xor
inc
shrl
pop
inc
jle
pop
icebp
call
ror
xchg
jmp
movsl
push
std
jb
push
loopne
cmpsl
hlt
aas
stos
int
mov
sub
pushl
ds
into
jmp
inc
das
xor
and
scas
fdivr
add
je
and
ret
inc
je
out
lret
mov
and
adc
fstpl
dec
in
fadd
mov
imul
jmp
inc
mov
push
mov
movsl
cmpsb
lcall
sub
leave
popa
andl
push
and
adc
jno
dec
je
pop
shl
xchg
and
jb
lret
sub
inc
add
mov
pop
mov
ret
jecxz
js
and
push
dec
in
pushf
scas
dec
mov
rol
data16
loop
push
push
ljmp
push
pop
dec
adc
out
pop
inc
fidivs
pop
cltd
inc
nop
xor
sbb
sub
dec
jne
sti
jp
pushf
jmp
in
inc
inc
lret
jp
push
xchg
loop
xorl
mov
das
loope
pusha
int3
lahf
dec
add
mov
xchg
push
mov
jmp
pop
dec
or
sub
dec
imul
sbb
cmp
inc
xchg
mov
mov
cmp
xor
xchg
xor
cmp
ficomps
mov
cmc
sarb
push
push
xchg
int
ljmp
sub
bnd
xor
js
clc
adc
pop
sbb
pop
repnz
xchg
cmpsl
cmp
imul
inc
push
js
mov
push
shl
fcoms
mov
xor
stos
sbb
adc
mov
dec
mov
pop
arpl
test
push
mov
adc
out
lret
and
out
das
fimull
cmp
pop
mov
data16
out
inc
inc
xor
jl
mov
cld
int3
adc
xchg
movsb
mov
inc
dec
xchg
or
mov
fmulp
cmp
inc
push
mov
scas
or
push
sub
sub
xor
aad
dec
or
pop
push
and
nop
inc
mov
cmc
subb
pusha
dec
dec
and
pop
rorb
lods
sbb
or
push
setg
pop
dec
pop
daa
fistps
nop
aaa
rol
lahf
or
lds
and
adc
arpl
fldl
push
pminub
inc
dec
add
mov
mov
mov
cmp
roll
icebp
lret
icebp
mov
fnstenv
scas
hlt
cmp
popf
sbb
rcll
or
cli
push
scas
adc
add
fdivrl
test
sbb
inc
ljmp
xor
add
mov
dec
push
push
xchg
push
mov
in
mov
sbb
fnstenv
mov
sub
in
jae
jge
jbe
inc
dec
sub
lea
inc
loopne
jmp
mov
and
xor
and
mov
fdivl
out
jg
pop
or
or
rcl
jmp
pop
mov
int3
lret
out
jo
add
mov
jle
push
cmp
sub
inc
cs
hlt
cli
add
xlat
cmp
adc
mov
fcompl
data16
test
adc
fwait
mov
adc
push
mov
imul
gs
fiaddl
xorl
es
arpl
insl
xor
fsubrs
sahf
pop
jo
rcll
lds
lret
in
scas
sbb
cmp
fmull
cmp
ljmp
jae
lock
pusha
push
shll
test
sub
loope
mov
sti
popa
orl
mov
pop
inc
jnp
fstl
test
pop
push
push
pop
cltd
cmpsl
xor
stos
or
xor
mov
nop
mov
jp
and
add
push
push
sbb
mov
lds
mov
pop
lea
cli
stc
movsl
out
stos
inc
push
xlat
cmp
xor
xor
lock
js
shll
jge
add
push
ficoml
sub
xor
into
dec
fcoms
cmp
xlat
addr16
add
inc
dec
cs
movsb
or
fstpl
push
jmp
xlat
inc
sub
pop
mov
pushf
out
or
sarb
daa
dec
mov
cmc
sti
int3
mov
repnz
pop
mov
and
into
jns
cli
fwait
push
dec
out
movsb
fidivrl
div
inc
hlt
jb
mov
adc
xor
in
popa
arpl
and
cmp
mov
es
mov
jle
push
mov
shll
test
insl
insb
or
in
pop
pop
sub
std
lods
adc
test
cli
sbb
mov
mov
shll
fs
popf
in
divl
jge
jge
lcall
movsb
mov
lods
or
add
and
jle
imul
outsl
sub
ja
aaa
inc
movsb
inc
pop
xchg
add
pusha
inc
andl
cli
out
stos
lds
or
add
leave
adc
push
lret
jge
cmp
or
ljmp
in
push
lret
pop
insl
cmp
in
fnsave
lock
cmp
js
xor
in
shlb
push
mov
insb
adc
mov
cmp
insl
xor
jb
add
lret
divb
ds
ja
cmp
jge
subb
cmp
push
popa
loope
dec
push
mov
out
cmpsb
fidivrl
test
cmpsl
in
rcrl
cmp
repz
pop
or
aas
mov
mov
adc
adc
rcrb
or
scas
xchg
das
inc
scas
or
xor
add
xor
lea
andl
mov
sub
sbb
shrl
xor
lock
es
out
pop
lods
push
mov
imul
lds
dec
cmp
cmp
or
xchg
out
adc
popa
dec
push
test
jmp
and
dec
pause
pop
adc
pusha
fst
xor
or
es
sub
add
ficomps
sahf
es
jg,pt
addr16
rcll
ljmp
loop
out
inc
add
in
js
pop
cmp
pop
out
sub
jmp
jbe
ja
sub
jecxz
mov
inc
in
pusha
and
testb
sahf
nop
push
jne
cltd
push
jnp,pt
in
fisttpll
sbb
mulb
call
add
cmp
std
or
xlat
push
fistl
sub
sbb
mov
sti
xor
addb
sub
lret
xchg
adc
cmp
mov
and
idivb
aam
imul
inc
mov
stos
xor
pushf
lret
arpl
cmp
popa
sbb
lret
jle
leave
cld
fmul
imulb
jmp
mov
cmc
shr
fmull
jnp
sub
sub
sbb
popa
sbb
loop
cltd
add
imul
xor
dec
lea
pop
jp
fwait
pop
test
xor
adc
lahf
push
ffree
shr
and
jle
xlat
mov
push
xchg
push
fdivrs
pop
mov
or
adc
add
test
dec
bound
pop
out
pop
push
test
jae
popf
jl
cmp
and
nop
repnz
js
mov
dec
pop
aaa
cmp
push
and
pop
cs
adc
inc
jne
mov
je
push
cmpsl
cmp
movsl
mov
pop
idiv
enter
push
xor
pop
fsubs
mov
push
cmp
jecxz
clc
or
das
ret
adc
ds
lea
push
insb
arpl
mov
sbb
inc
into
cs
push
in
xchg
ds
jb
inc
push
movsb
roll
mov
dec
mov
push
mov
mov
cmp
addr16
ljmp
mov
scas
andl
mov
jge
adc
push
test
stos
pop
push
push
movsl
add
cld
or
jecxz
ds
rorb
ret
popa
cli
shrl
sub
dec
popa
pop
enter
mov
mov
leave
pop
fwait
scas
sbb
aas
add
les
mov
hlt
enter
push
jg
rcll
icebp
mov
lret
inc
mov
mov
cmp
js
or
inc
xor
es
mov
das
pop
aad
mov
es
xor
xor
outsb
mov
jg
ret
insb
mov
cmc
and
push
mov
jge
in
lret
cmp
cmc
pop
lret
sub
jnp
hlt
test
enter
je
dec
jle
sbb
adc
xchg
sbb
iret
mov
cmpsl
mov
cwtl
mov
ret
mov
and
lods
daa
xor
decl
jne
rolb
xor
das
lock
arpl
xchg
scas
push
or
gs
jb
in
aam
jge
dec
ror
je
jecxz
fsubs
daa
and
cmc
cmp
pop
xor
sti
fs
xchg
aam
clc
pop
lret
aas
bound
adc
push
mov
pop
sti
and
dec
loopne
pop
mov
dec
mov
scas
push
lahf
cmp
sub
sbb
or
clc
das
call
pop
mov
dec
mov
scas
push
lahf
cmp
sub
sbb
or
clc
das
call
pop
mov
dec
mov
scas
push
sahf
cmp
sub
sbb
cmp
int3
das
fdivrl
out
bswap
pop
mov
dec
or
scas
xchg
adc
dec
addr16
xor
and
cmpb
sub
sahf
adc
pusha
fcoml
inc
mov
mov
ds
loopne
shrb
or
mov
mov
jo
pusha
ficoms
inc
mov
mov
cmp
jb
rolb
and
arpl
cs
cltd
add
stc
push
mov
imul
cmp
fsubrs
sti
xor
sbb
gs
sbb
mov
stos
push
into
popf
movb
push
out
mov
sbb
or
scas
sbb
cs
xor
dec
sbb
and
shr
jmp
out
cmc
into
mov
xchg
dec
lock
test
xor
into
popf
fwait
es
mov
or
push
push
inc
lods
dec
sbb
idiv
jge
mov
shll
jle
fstp
mov
imul
add
cwtl
mov
or
and
das
cs
andb
imul
push
inc
cmpsb
dec
iret
popa
and
sub
push
mov
xor
dec
loopne
shlb
pop
adc
pusha
es
out
inc
nop
negb
cmc
insl
in
pushf
cmp
sbb
and
jae
insb
xlat
adc
scas
adc
mov
rcrb
dec
in
mov
mov
add
adc
and
push
lret
inc
fsts
popl
fstps
pop
stc
jle
pop
lock
pop
shrb
jle
mov
sahf
adc
pusha
ficoms
inc
mov
mov
ds
loopne
shrb
jle
mov
sahf
adc
pusha
ficoms
inc
mov
add
adc
xlat
dec
jge
xor
xor
or
adc
lods
ror
xchg
jp
rorb
push
loopne
gs
aad
testb
dec
iret
gs
insl
sti
fistpl
adc
ret
pop
mov
or
push
jecxz
divl
pushf
arpl
inc
out
push
test
je
xchg
loope
mov
or
jg
subb
sbb
popa
into
push
out
jp
in
fildll
inc
xchg
jno
test
mov
int3
mov
leave
adc
jge
sti
aas
shlb
or
mov
mov
push
push
test
fldt
adc
js
sub
cmc
push
push
sarb
call
pushf
cmp
pop
sub
in
mov
dec
arpl
or
std
mov
cmpsb
cmp
and
pop
mov
jne
les
xchg
jnp
pop
nop
xchg
sub
inc
or
fcmovnbe
add
push
iret
int
vphadduwd
and
fsubr
xlat
cmc
shrb
sub
pushf
jnp
jg
mov
cmp
lahf
fidivl
dec
mov
roll
push
jns
inc
sbb
mov
stc
push
aas
sbb
out
movsb
dec
gs
aaa
out
js
in
pop
fs
pop
lahf
sbb
xchg
mov
insl
cmc
sbb
ds
mov
sub
jmp
mov
xlat
push
ffreep
fs
clc
lret
nop
nop
aas
aam
rcrb
cmp
push
ljmp
mov
jne
cld
cld
cld
std
push
push
outsl
jecxz
add
sahf
inc
jecxz
jmp
out
xor
adc
ret
add
daa
leave
arpl
pop
movsb
xchg
out
arpl
adcl
cmc
push
shl
dec
inc
cmpsl
adc
mov
pusha
negb
mov
cmp
sbbb
ret
leave
pop
sub
mov
jmp
xchg
cmp
add
push
or
icebp
out
dec
jmp
cld
shlb
fcmovu
mov
lods
out
flds
jo
sub
mov
mov
add
or
aad
jnp
add
jle
imul
in
or
xor
stc
enter
push
les
jno
mov
push
ss
sub
adc
push
pusha
hlt
jge
sbb
or
pop
hlt
jne
and
lock
dec
hlt
mov
scas
pop
movsl
inc
sbb
push
es
mov
jmp
lahf
and
fnsave
insb
lcall
dec
pop
sahf
inc
ret
mov
xor
pop
insb
mov
mov
jns
adc
lock
jae
mov
adc
mov
add
sub
lret
lret
cmc
add
xchg
out
push
out
inc
stc
pop
xchg
xor
xor
mov
xchg
mov
ret
mov
pop
sub
fildl
icebp
xchg
test
cwtl
lds
mov
xlat
add
adc
push
out
mov
cltd
into
push
mov
dec
dec
in
ss
arpl
js
adc
mov
rcrl
xchg
mul
dec
in
cld
sub
jnp
ja
pop
adc
jl
lcall
or
mov
add
adc
cmp
mov
pop
sub
or
sbb
mov
or
mov
or
test
jg
stos
push
popa
icebp
dec
jge
outsl
dec
test
push
movsl
cmpsb
jecxz
fldcw
dec
and
sub
push
jne
icebp
inc
jecxz
stos
ja
mov
jbe
pop
jmp
mov
lock
fisttps
dec
mov
cmp
sbb
jno
sub
lret
popf
and
daa
stos
scas
lcall
dec
mov
cltd
sub
push
inc
xlat
lret
push
add
faddl
push
mov
jg
nop
sahf
dec
ret
inc
sub
xchg
pop
inc
dec
mov
push
arpl
out
cmpl
jbe
jns
adc
xchg
jae
in
adc
jns
fbstp
mov
jbe
jg
inc
adc
mov
mov
sub
add
rclb
add
sub
mov
pop
adc
scas
mov
and
mov
cmc
call
test
in
and
or
out
adc
inc
cmp
add
stc
xor
into
lret
out
mov
in
call
jl
adc
dec
rclb
mov
pop
sub
mov
inc
pushf
outsl
loope
mov
fstpt
pop
stos
rol
fistl
push
sub
lock
pop
or
gs
push
sub
push
sbb
das
in
and
cwtl
dec
mov
std
out
and
mov
pushf
je
rcr
sar
or
ret
push
aad
fistpll
jae
pop
sarl
pusha
cld
or
scas
sub
cmp
inc
cmp
sbb
loop
into
push
and
mov
add
popa
push
push
test
sahf
dec
mov
cltd
inc
dec
mov
xor
jle
xor
sub
lds
xor
fwait
jp
sarl
adc
pop
sbb
mov
aas
pop
shlb
cmp
mov
insl
mov
addb
dec
loop
dec
movsl
inc
inc
jl
jg
jae
movsl
xor
test
lods
pop
ljmp
arpl
jg
sbb
call
xor
ret
scas
aas
adc
jg
into
sbb
sub
and
mov
ljmp
imul
add
push
lret
fs
xchg
fsin
popa
jmp
daa
xor
fwait
scas
push
pop
lods
or
int
es
dec
loopne
enter
sbb
hlt
pop
mov
loopne
mov
inc
jo
lock
mov
xor
sub
mov
icebp
data16
cli
mov
test
pop
mov
pop
cmc
xchg
pop
jbe
push
jno
cmp
push
mov
jne
ficomps
pop
jne
cmp
insb
pop
cmp
adc
insb
in
push
push
push
sub
sbb
sub
mov
lods
inc
push
fiaddl
sbb
les
or
inc
negb
mov
out
pop
mov
les
inc
mov
lahf
pop
sarb
and
rol
push
movsb
test
mov
aam
lods
sar
dec
pop
aam
shll
or
mov
jge
lret
shl
lods
jae
jmp
rcrl
lods
sbb
out
shl
pop
clc
mov
out
iret
cmpsl
add
dec
pop
jo
popf
icebp
imul
mov
adc
push
ss
aam
pop
insl
jmp
and
fdivs
or
inc
insl
adc
or
mov
dec
ja
push
or
mov
mov
fidivs
dec
adc
xorb
add
in
fwait
mov
mov
lret
cmp
sti
and
push
mov
xchg
popa
dec
rcl
pusha
sbb
inc
out
out
jno
or
mov
test
nop
pop
push
pop
jl
pop
inc
pop
mov
xor
fildll
or
lds
movsb
inc
sti
pop
neg
addr16
jmp
push
add
insl
cmc
bound
pop
mov
fnsave
lds
jp
movsb
xor
push
scas
int
pop
les
or
push
lret
sbb
mov
mov
inc
ds
out
fisubs
divl
fs
das
adc
xor
into
xlat
inc
lret
dec
lea
pusha
mov
push
dec
ljmp
outsb
mov
scas
cmpsb
mov
dec
add
loop
push
mov
fwait
pop
cmpb
scas
fisubrl
mov
inc
inc
or
cmp
mov
sbb
cmp
aam
rcr
lea
mov
leave
adc
pop
cmc
cwtl
lods
xor
setbe
dec
push
dec
outsl
push
sbb
pop
xchg
mov
sti
dec
sbb
imulb
jg
pop
jne
add
push
jge
inc
scas
jmp
test
push
aaa
push
xchg
or
out
aad
mov
push
push
jae
xor
mov
cld
data16
xchg
mov
cmp
inc
push
or
push
jp
mov
pop
push
daa
out
mov
std
ljmp
cmp
lcall
gs
stos
mov
push
aaa
dec
notb
or
aam
add
cmp
std
in
test
mov
push
cmp
test
and
xchg
test
ss
in
fsub
xchg
lcall
and
mov
mov
js
mov
adc
jne
inc
sub
xor
pop
out
mov
pop
and
pop
or
subb
sbb
addr16
outsb
aas
in
cmp
add
cmp
add
scas
adc
dec
mov
cmp
cs
rcrl
insl
mov
fs
cmp
pop
pop
out
dec
push
or
bound
push
clc
sbb
popa
mov
sub
mov
dec
pop
push
in
out
cmpsl
mov
cwtl
pop
xor
mov
addb
sub
jle
mov
ret
cmp
addr16
shrl
mov
dec
mov
divb
cmp
sbb
aad
ret
add
aam
add
inc
inc
nop
in
add
les
xchg
pop
sbb
dec
push
scas
mov
add
roll
sub
xchg
int
jno
xor
inc
popa
add
add
out
mov
js
jge
stc
rcll
mov
cwtl
cmpb
xchg
in
add
sub
ret
add
data16
sbb
jb
das
inc
int3
ds
dec
mov
inc
pusha
dec
mov
push
inc
cmp
iret
add
lret
and
loop
add
cmp
lcall
mul
mov
xor
clc
lret
addb
test
subb
sub
ss
jl
pop
cltd
test
into
es
outsb
pop
adc
jbe
or
imul
and
int3
sbb
and
or
xchg
adc
dec
inc
sub
jmp
dec
or
fisubs
int3
andl
bound
jl
rorb
or
aad
push
jo
lds
and
and
cli
pop
push
or
xchg
push
mov
jge
fcmovu
test
xchg
mov
xor
test
xchg
test
cltd
sub
mov
int
inc
out
dec
sub
sub
xor
lds
jbe
data16
xchg
jg
add
test
test
jmp
lods
scas
xor
xchg
imul
and
cmpsl
or
dec
les
jae
cld
xchg
xchg
sub
nop
mov
pushf
xor
xchg
dec
xchg
cmp
push
xor
rcrl
sbb
fsub
jle
scas
push
in
call
inc
out
cltd
jns
cli
inc
push
insl
fiaddl
dec
or
jnp
scas
dec
pop
in
add
fcmovnbe
lods
iret
ljmp
repz
or
ret
ret
mov
jnp
adc
stc
sub
in
push
not
fisubl
or
lea
sub
lretw
daa
xor
out
dec
xchg
sbb
clc
clc
in
or
mov
xor
xor
inc
xor
rcl
pusha
lock
mov
js
lods
fwait
repnz
cmpb
mov
or
mov
fnsave
enter
aaa
sbbb
cmc
es
imul
mov
int3
imul
arpl
lds
shl
outsb
movsb
jbe
xor
mov
fbld
and
mov
xchg
stc
jge
fnstsw
add
jle
testl
push
mov
mov
sub
adc
add
repnz
lcall
jle
mov
fstpt
mov
and
sub
jge
clc
dec
adc
sbb
out
imul
outsl
dec
mov
xorl
jecxz
adc
movsb
mov
cltd
jle
push
sub
call
add
push
mov
dec
ret
int3
pop
in
je
mov
fstps
jle
dec
or
repz
cmpsl
cmp
ret
cwtl
sbb
lds
and
sar
cmc
add
pop
mov
push
movnti
cmp
push
cltd
into
cmpsb
sbb
jp
call
ja
mov
jg
out
jnp
push
out
pop
sub
mov
in
jp
js
mov
sub
mov
dec
in
sbb
push
stc
lret
movlps
mov
lret
sub
cli
sub
xchg
imull
adc
mov
fwait
mov
addb
fs
bound
in
sar
addr16
xchg
and
mov
or
cmpl
xchg
fstpt
icebp
insb
pop
inc
jmp
loopne
jbe
scas
fwait
lcall
xor
or
and
lret
pop
je
xchg
arpl
movsb
cmp
pop
mov
mov
rorb
mov
leave
sub
mov
arpl
pop
or
xorl
dec
stc
add
jne
mov
out
pop
pop
popa
add
and
xchg
cld
ret
repnz
leave
sbb
and
add
dec
mov
icebp
ja
lcall
dec
pop
scas
mov
inc
bound
inc
fnsave
enter
inc
rorl
jmp
shll
lds
inc
outsb
mov
pop
test
jns
cmc
mov
adc
mov
ja
in
xchg
dec
mov
inc
ja
cmpsb
mov
push
sub
into
xorb
mov
inc
mov
rcr
and
int
xchg
jbe
cli
arpl
fistpl
ds
mov
popa
cs
out
push
cli
outsb
js
or
or
js
in
gs
dec
sahf
lahf
push
ret
sub
xor
inc
pop
mov
fisttps
inc
in
inc
das
mov
jmp
sti
or
sti
pop
jmp
dec
mov
jle
push
mov
ss
ds
popa
push
dec
mov
cmp
sbb
inc
xor
cmp
icebp
adc
mov
loopne
jp
mov
lar
cmpb
je
faddl
fisubrl
pop
mov
dec
enter
out
ret
xchg
dec
pop
incb
and
subb
jl
add
in
mov
aad
and
push
dec
jne
mov
pop
mov
sub
inc
mov
push
shrb
cltd
push
cmc
cmp
js
in
xchg
push
sbb
jmp
es
mov
pushf
push
popa
adc
call
and
cmpsl
adc
pop
cmpsl
and
jmp
inc
ja
test
lcall
fnsave
mov
sub
test
inc
inc
hlt
and
inc
add
push
out
jl
ss
add
hlt
add
mov
xchg
pushl
inc
fisubrl
cmp
mov
dec
call
cmp
fstps
jmp
inc
push
or
fstpl
and
in
in
loopne
lcall
rclb
fs
inc
outsb
cmp
jmp
inc
shll
into
cmp
cmc
or
popa
mov
stc
subb
outsl
movsb
cmp
lods
divl
push
push
les
push
das
push
inc
add
sbb
bound
mov
sbb
jmp
ret
loop
shl
fcom
mov
sbb
and
insb
test
ja
in
pop
pop
aad
adc
sets
into
ret
aas
push
push
dec
lock
or
fdivs
push
sub
jge
ss
xchg
or
sub
xchg
sub
add
pop
inc
cmc
aaa
insb
cmp
in
int3
clc
sbb
lret
or
xor
ret
mov
mov
jl
repz
and
sub
pushf
jae
dec
sti
in
test
out
data16
pushf
cmpsl
or
popa
in
and
add
or
jl
xchg
scas
sub
or
adc
pusha
cmp
sbbb
repnz
xchg
scas
jge
xor
rcrb
mov
call
out
push
jmp
mov
xor
xor
shll
jns
ds
dec
pop
dec
fildll
mov
aam
pop
pop
enter
imul
pop
mov
pushf
jmp
xor
stos
cmp
push
and
fdiv
push
jo
cld
push
sbbl
imul
lcall
andl
adc
mov
out
cli
sub
test
test
lock
push
adc
shlb
mov
nop
push
jp
xor
and
outsl
leave
stos
sahf
jnp
xchg
xchg
mov
subb
mov
and
nop
jns
cwtl
mov
outsb
inc
repnz
push
leave
mov
mov
pop
and
pop
rorb
lahf
mov
je
cltd
mov
sbb
into
pusha
mov
dec
popf
ret
mov
cli
xor
lret
pop
cmp
cwtl
gs
mov
xor
imul
ss
inc
jp
mov
mov
pop
mov
mov
jo
push
pop
pop
or
dec
into
xchg
test
out
push
out
test
jae
roll
ja
add
pop
lcall
addr16
out
lds
mov
sbb
jae
repz
hlt
lods
inc
fldt
sbb
jbe
adc
lds
fimull
fwait
roll
loope
or
stc
ficomps
cli
lods
scas
cmp
dec
test
adc
gs
fnsave
and
in
add
outsl
hlt
xor
mov
jns
and
imul
or
inc
xchg
inc
out
ljmp
ret
xor
loope
testb
lods
cmp
or
pushf
lods
adc
pop
mov
aas
pop
cld
mov
xchg
and
xchg
push
outsl
and
repz
movsl
mov
pop
or
mov
mov
dec
mov
pop
xchg
fisubrs
lea
loop
dec
push
int
ss
or
ss
daa
stos
dec
jo
adc
xchg
inc
mov
or
mov
inc
add
in
pop
and
dec
mov
repz
adcl
mov
mov
push
loopne
add
dec
push
sarl
cmp
sub
cmp
loop
add
adc
pop
scas
dec
mov
int3
push
add
dec
aaa
and
add
jae
std
mov
imul
leave
and
test
lods
inc
sahf
addb
pop
out
add
cmp
je
aam
mov
aas
cli
pusha
sub
insb
fisttpl
mov
arpl
dec
jo
ficoml
mov
scas
pushf
gs
adc
mov
aaa
mov
jnp
insl
lds
sub
cld
add
and
or
das
or
pusha
or
pop
dec
sub
and
enter
clc
jae
adc
jg
and
cmpsb
cmp
mov
pop
pop
ficomps
push
inc
nop
cs
lret
sub
ret
add
push
add
xchg
dec
scas
cmp
test
mov
adc
or
clc
dec
aas
jne
pop
adc
mov
mov
call
pop
jbe
sbb
inc
fidivrs
sub
xchg
pop
push
icebp
sahf
lahf
idivb
push
adc
out
loope
inc
in
imul
es
xor
dec
sub
ds
ret
hlt
hlt
mov
rcrb
test
pop
pusha
popf
sbb
popa
mov
mov
cli
or
js
xchg
push
or
shrl
cmp
mov
fldt
jle
loopne
fimull
xchg
sarb
xor
sub
mov
enter
loop
sarl
call
outsb
out
push
data16
fwait
insb
leave
lcall
adc
adc
push
add
iret
shlb
gs
lret
stos
ljmp
xlat
cs
or
bound
push
stc
fwait
pop
push
lret
pop
add
pop
jae
jge
pop
jbe
sbb
lods
sarb
mov
roll
stc
out
mov
fisttpll
jg
adc
push
pop
addr16
dec
mov
call
inc
pusha
cmp
xchg
xchg
mov
mov
jne
xchg
outsl
cmp
addb
push
sub
ret
sbb
fwait
mov
repz
andb
test
jecxz
push
lahf
pop
repnz
pusha
sahf
jmp
les
mov
push
shrb
iret
mov
or
mov
inc
xor
leave
aas
rcrl
das
ret
add
imul
cmp
or
pop
pop
cmp
test
fucomip
lret
jbe
inc
int
movsl
shrb
jne
sbb
shrb
subb
mov
cld
adc
dec
loop
sbb
inc
adc
push
les
jb
lea
scas
mov
jno
push
pop
jnp
mov
daa
cmpsb
cmp
xor
inc
out
mov
sub
fildll
and
rcrl
cli
bound
jmp
xor
or
xor
cmp
scas
pop
adc
mov
test
xchg
ret
insb
push
repz
cmpb
dec
loopne
shrb
jle
mov
sahf
adc
pusha
ficoms
inc
mov
mov
ds
loopne
shrb
jle
mov
sahf
adc
pusha
ficoms
inc
mov
mov
ds
loopne
shrb
jle
push
and
jo
pusha
ficoms
inc
mov
mov
aas
lock
loopne
shr
sarb
and
scas
add
pop
inc
call
add
push
or
lret
or
cs
popf
xlat
out
imull
cmpsb
std
mov
inc
sbb
jbe
push
pop
push
dec
es
insl
popf
out
imulb
cmpsb
std
mov
inc
sbb
jbe
push
pop
push
dec
es
insl
mov
imulb
rcrl
xor
pop
sbb
iret
fwait
popf
mov
sbbl
cli
ret
adc
push
adc
mov
stc
movsl
push
mov
jno
cmp
push
in
sbb
xchg
inc
icebp
std
cmp
push
or
popa
lret
lea
arpl
lods
jp
in
pop
xorb
ss
fucomp
inc
add
or
cmp
cmp
pop
add
xchg
ss
sbb
push
jns
popf
and
xorb
pop
pop
push
mov
xorb
fadds
sahf
aad
imul
movsl
cmp
pop
les
ss
sbb
sbb
jecxz
ss
mov
jbe
push
pop
push
dec
es
insl
popf
out
imulb
cmpsb
std
mov
pop
jo
fimuls
jnp
imul
fs
sbb
out
mov
xchg
lock
pop
xor
cmp
push
arpl
fs
mov
jmp
roll
ret
andl
push
jns
dec
sbb
xor
dec
es
insl
popf
out
imulb
cmpsb
std
mov
inc
sbb
jbe
push
pop
push
dec
es
insl
popf
out
imulb
cmpsb
std
mov
inc
sbb
pop
cld
clc
cwtl
adc
int
rcll
test
dec
in
iret
jmp
repz
jbe
mov
cmc
cwtl
fistl
mov
add
in
pop
sub
lahf
notl
orl
push
scas
xchg
jae
in
lock
sub
sub
xor
imul
xor
pop
dec
and
push
rolb
inc
movsl
push
testb
jno
push
subl
push
pop
mov
sbb
dec
sbb
cld
cmp
jnp
loop
inc
or
dec
push
xchg
push
leave
loope
and
xor
cmp
in
scas
pop
out
gs
jne,pn
rcrl
push
push
fists
mov
mov
not
sbb
inc
fimull
cltd
pop
and
xchg
mov
sbb
in
mov
fimuls
andl
bound
mov
cmp
xchg
cmp
inc
shlb
inc
repz
mov
xchg
mov
or
popf
adc
xchg
push
pop
and
mov
out
cli
jns
fdivr
cli
lcall
sbb
pop
pop
lods
xchg
scas
out
xchg
mov
push
and
repz
mov
pusha
push
dec
mov
fldl
ljmp
cld
lods
xchg
dec
sub
sbb
fs
aaa
daa
scas
dec
pop
jle
imulb
pusha
stos
xlat
loopne
movsb
testl
lds
dec
mov
out
test
clc
popf
mov
push
cs
push
push
imul
data16
out
add
xchg
mov
movsb
and
adcl
icebp
inc
pop
dec
pop
mov
push
out
icebp
rolb
sub
mov
cld
cli
push
and
andl
fbld
aam
mov
fidivrs
ficoms
push
jbe
ja
in
shrb
iret
popa
xchg
jecxz
inc
dec
aas
dec
popa
inc
jp
xor
jle
ss
adc
mov
dec
mov
sbb
xor
dec
jl
sbb
leave
mov
or
enter
loope
sub
pushf
out
and
push
cld
lret
int
popa
mov
mov
cld
lds
mov
filds
dec
dec
jne
clc
stos
mov
pop
jb
cmp
inc
sub
mov
mov
cwtl
jmp
mov
dec
loopne
jb
jge
dec
test
mov
les
pop
movsl
mov
push
sti
out
jo
test
nop
rcrb
pop
test
hlt
and
sbb
cmpsl
cmp
test
xor
aas
addr16
cwtl
pop
adc
mov
stc
or
push
rorl
adc
xor
jae
jb
lds
push
sub
sbb
sub
fstl
xor
movb
rol
xchg
mov
cs
lcall
mov
cmp
or
cmp
arpl
jmp
in
adc
jb
mov
shrb
push
inc
loopne
sbb
pop
push
inc
aam
dec
pop
adc
mov
int
push
xchg
imul
imul
mov
sbb
out
push
rcrb
jmp
fcoml
pop
imul
or
arpl
xchg
imul
push
pushf
jbe
adc
leave
sbb
das
or
fs
or
fldenv
ffreep
mov
lcall
test
pusha
enter
popa
sti
xorb
and
fnstsw
pop
ret
popf
repz
loop
adc
outsl
add
ljmp
out
adc
cs
push
push
jl
ja
rcll
mov
xor
aaa
dec
push
popa
in
aaa
pop
pushf
mov
jg
push
test
cli
inc
cmp
repnz
mov
xchg
push
out
mov
sbb
or
subb
sbb
sub
add
scas
push
stos
mov
push
addl
pusha
rclw
mov
and
addr16
mov
or
push
rcrb
pop
rol
dec
sub
inc
loope
imul
popf
pop
sbb
mov
add
rcrb
test
push
mov
inc
pop
int3
or
popf
out
jle
cmp
fisttpl
or
out
notb
jbe
pop
test
loop
movsb
sarb
pop
stos
or
rcrl
test
ret
mov
popa
movsl
pop
dec
int3
shl
icebp
cmpsl
adc
lods
mov
fcompl
cmp
pop
mov
out
push
xchg
pushf
lret
and
scas
mov
mov
fdivrl
dec
stos
pop
decb
mov
pushl
cld
loopne
fistps
adc
sahf
std
cmp
xchg
mov
fidivl
or
sahf
out
dec
xorb
jg
into
ljmp
push
bound
jo
sub
pop
popf
insb
sahf
sti
fnstsw
out
mov
in
ret
and
fisttpl
cmpsb
push
jnp
push
cmp
stos
cmp
test
inc
fcmovnbe
in
imul
flds
jp
inc
sub
loope
dec
ret
cmc
mov
scas
iret
ljmp
push
mov
add
push
push
pop
leave
inc
fldenv
fiadds
dec
rol
iret
fsubrs
int3
fcomps
sub
xchg
arpl
mov
inc
icebp
ja
aad
sarl
xor
fdivs
nop
mov
pop
into
inc
fwait
std
mov
iret
or
jp
mov
jb
fsubrl
jb
test
push
and
daa
icebp
std
xlat
icebp
push
and
push
sub
xchg
mov
xchg
sbb
aam
aad
inc
jecxz
into
and
mov
lea
pusha
outsb
or
fildl
loop
pop
sub
es
xor
negb
mov
mov
cmp
aam
inc
fwait
imul
push
jae
cmp
and
dec
lret
or
pcmpgtb
push
clc
inc
leave
in
insl
push
outsb
sbb
xchg
add
mov
das
inc
pop
sbb
repnz
xchg
aad
jmp
sarl
mov
mov
and
aad
xor
je
fucomi
mov
mov
dec
push
lock
cmp
inc
jb
jno
sub
or
in
pop
mov
adc
mov
jbe
movsb
and
xor
mov
xor
mov
mov
adc
popf
pop
out
push
imul
rorb
fidivrl
dec
in
sub
fcoms
push
and
mov
in
inc
ss
jecxz
jle
popa
and
jne
and
fisubs
imul
bound
dec
xor
das
imul
mov
mov
pushf
xchg
in
ja
cmp
cmp
fistps
mov
cmp
movsl
mov
cmp
outsl
aaa
xor
dec
add
push
and
cmp
mov
ss
xchg
movsl
mov
pop
mov
adc
xchg
jle
inc
and
jo
popa
push
popw
test
out
inc
and
xor
xchg
jbe
dec
daa
inc
imul
mov
jp
xor
fwait
cld
idivb
cli
out
add
gs
jbe
cmp
cs
imul
jnp
in
jae
sub
jbe
insl
fadd
std
and
stc
rcrl
rclb
out
mov
pop
sub
push
clc
movl
test
out
inc
xchg
fwait
scas
jnp
outsl
push
pop
dec
cmp
and
inc
cs
fisttpl
repz
sbb
cmp
xlat
add
mov
cli
jno
mov
fwait
jle
inc
lea
xchg
mov
mulb
adc
aad
jns
adc
mov
fwait
outsl
hlt
mov
daa
clc
lea
cwtl
std
mov
push
lret
sahf
call
lcall
mov
mov
pushf
dec
xchg
call
xchg
push
mov
sarb
mov
adc
imul
pop
or
pop
pop
or
mov
sub
mull
arpl
xlat
cmpsl
in
pop
xchg
xor
jl
jb
dec
jmp
in
mov
test
ficomps
aam
bound
iret
es
push
adc
push
add
dec
pop
mov
sub
xchg
mov
mov
inc
pop
fst
or
mov
mov
movsb
mov
cmp
lret
pop
arpl
mov
sub
push
das
and
or
imul
adc
cld
bound
mov
aam
xchg
mov
out
std
add
fnstenv
out
jg
sbb
cwtl
mov
mov
xchg
mov
pusha
aad
les
lret
push
inc
in
movsb
addr16
cmpl
subl
dec
push
popf
jge
mov
subl
je
or
popa
sahf
pop
lock
sub
cs
add
int
pop
and
aad
push
ret
ds
out
inc
cmp
xchg
xchg
iret
adc
push
adc
popa
jnp
xorl
fisubl
push
mov
cmp
cmc
leave
stc
aaa
fnstenv
fstpt
pop
jle
pop
sbb
in
sbb
cmp
sbb
inc
inc
pop
aaa
pop
and
filds
add
loop
add
sbb
pop
xor
xor
pop
test
push
inc
mov
sti
mov
fstps
flds
jnp
cwtl
mov
stos
push
dec
frstor
std
sbb
mov
sbb
shl
push
xor
mov
out
orl
out
jno
stos
mov
sbb
adc
lret
mov
call
add
outsb
push
dec
inc
push
mov
divl
ljmp
enter
lds
movsb
mov
sahf
push
cmp
mov
inc
adc
jp
sti
nop
lds
out
xchg
in
out
in
add
sti
sti
push
jbe
xchg
jmp
lea
stos
fwait
adc
lods
inc
mov
mov
decl
les
fcomps
sub
xchg
cmpsb
cwtl
adc
shlb
js
mov
push
xor
or
popa
call
sub
mov
cwtl
push
jnp
cmpps
pop
xchg
mov
xor
add
or
es
pop
icebp
jl
scas
push
sub
ret
iret
adc
and
sub
pop
pop
adc
cmp
lods
mov
lods
push
dec
int
lock
inc
je
push
dec
cs
cmp
dec
inc
in
mov
jae
out
cmp
in
imul
fdiv
repz
bnd
inc
push
or
pop
and
mov
ss
jb
std
iret
fisttpl
testl
in
cmc
inc
push
mov
addb
clc
push
pop
and
xchg
mov
loopne
push
xchg
xchg
mov
repz
lds
je
mov
mov
aad
fldt
pop
push
sub
push
addr16
xchg
xor
xchg
gs
xchg
push
inc
xchg
test
pop
mov
daa
jmp
fmull
pop
mov
rcrb
call
push
mov
call
idiv
loop
xchg
push
xor
out
insl
cltd
mov
push
mov
xor
jae
mov
out
cmpsb
es
int3
pop
test
inc
scas
scas
push
icebp
imul
and
mov
xchg
add
data16
mov
pop
aas
mov
mov
ljmp
data16
sub
inc
sbb
and
pop
inc
test
add
or
shrb
icebp
out
cmp
dec
mov
jg
lock
mov
jno
dec
out
xchg
pop
in
mov
cmp
js
fidivl
adc
mov
cmpb
outsl
mov
mov
jp
daa
sub
dec
out
das
lahf
push
cmc
mov
lods
mov
xchg
sbb
cmp
mov
pop
xchg
stc
pop
shll
pop
pop
pop
addb
push
dec
leave
xor
sub
lret
repz
rolb
cmpsb
divb
mov
dec
fistl
loopne
push
aaa
daa
test
add
inc
jle
pop
dec
lahf
and
xchg
ljmp
push
pop
sbb
xchg
or
dec
push
lds
inc
pop
sbb
xchg
mov
cmpsl
ret
ds
test
nop
jge
push
jmp
loopne
arpl
jo
fsubl
repnz
imul
pop
movsl
jge
insl
jb
xlat
cmp
pop
decb
nop
shll
ds
ljmp
call
pushf
pop
ficomps
push
mov
sub
testb
inc
xor
add
push
aam
pushl
stos
mov
insl
push
fstpt
popl
pop
add
fidivl
mov
ror
call
pusha
cmp
ss
push
addr16
fisubrs
jne
jp
xchg
mov
fldcw
mov
pusha
xchg
cmp
popl
popf
mov
xchg
xor
inc
and
mov
test
jo
ss
sub
int
mov
ds
or
loope
mov
xor
sarl
subl
mov
and
pop
cmp
lfs
lret
or
test
push
push
mov
addr16
addr16
std
fwait
xchg
push
stc
in
mov
sahf
cwtl
aaa
insl
mov
rorb
jmp
xor
xlat
mov
inc
roll
pop
mov
lods
lahf
outsl
sar
shll
negl
mov
push
sbb
insb
push
jl
imul
mov
sbb
push
insl
lret
outsl
push
rclb
icebp
xchg
cmp
imul
in
pop
add
sti
out
xchg
cmp
lahf
lods
cmpl
in
pop
das
push
rcrb
movsb
pop
pop
sahf
mov
les
jbe
repnz
push
scas
fisttps
leave
into
add
jae
roll
pop
cmpsb
and
out
mov
xor
into
repz
pushf
ja
mov
and
sub
es
add
jb
dec
push
stos
xlat
in
inc
xchg
call
icebp
push
sub
push
mov
lea
xor
test
iret
sub
xchg
xchg
out
lcall
and
and
ljmp
lcall
mov
sahf
adc
daa
cld
cmpsb
js
notb
dec
push
lods
jl
add
pusha
cld
push
xor
mov
rorl
xchg
mov
out
das
sub
dec
jmp
pop
dec
loop
mov
lods
jne
pop
jo
mov
ret
xchg
arpl
adc
pop
shlb
roll
xor
testl
lea
mov
popa
sub
sbb
cmpl
hlt
sti
xchg
popa
ja
out
cmc
dec
fisubrs
data16
insl
push
je
sub
mov
pushf
rcrb
iret
or
push
in
and
inc
mov
mov
mov
das
push
jmp
pop
ja
hlt
cmp
jae
sub
pop
xor
arpl
mov
mov
xchg
adc
stos
les
cmp
add
out
out
or
push
xchg
cmpsb
xchg
jl
in
mov
and
aad
or
xchg
incb
sub
cmp
mov
jb
lds
rorb
movsb
inc
lock
xor
jle
sub
dec
popa
xchg
cld
or
fs
sub
inc
inc
std
xor
ficoml
push
sub
in
xor
sahf
int3
mov
insl
cmc
nop
aad
xor
dec
orl
or
out
sub
inc
cld
sbb
imul
or
xchg
mov
dec
js
cmpsl
in
into
testb
mov
pushf
inc
fdivr
adcb
sahf
jle
inc
mov
jb
rolb
push
sub
push
movsl
cmp
xchg
xor
test
inc
xor
inc
jae
xchg
cmc
cmp
rcrl
test
in
or
dec
mov
dec
loopne
xchg
pop
or
test
jge
sarb
lret
lret
mov
add
dec
daa
jae
pusha
push
lods
jmp
inc
cld
pop
and
enter
das
pop
mov
test
sbb
add
mov
fmuls
nop
jo
negb
inc
push
and
cli
sub
sub
ljmp
iret
jp
adc
repz
fistpl
loop
enter
int3
aaa
jne
fildl
out
and
call
mov
dec
sbb
mov
and
push
inc
add
fwait
movsb
mov
mov
add
sbb
loopne
jne
xlat
cmpsb
lret
loopne
das
xchg
inc
ljmp
hlt
add
aas
imul
fisubrs
lcall
mov
pop
adc
adc
je
dec
rcll
stos
es
scas
inc
aaa
mov
add
bound
push
test
cmp
lcall
dec
jmp
adc
lock
lock
ja
dec
or
movsb
cmpsb
cwtl
jne
jecxz
adc
push
dec
mov
jnp
arpl
subb
jp
scas
fcomip
and
lea
js
jmp
mov
leave
pop
pusha
or
fnop
test
iret
fldenv
push
shlb
mov
in
jg
pushf
xor
sub
push
push
in
loop
add
test
popf
movsb
shll
cmp
push
and
cli
mov
loopne
lock
arpl
jne
dec
xor
mov
mov
inc
mov
and
jbe
bound
ficomps
pop
gs
scas
pop
ss
insb
arpl
pop
xor
shl
push
add
xchg
rcl
jge
mov
xchg
popa
lods
push
push
lea
leave
insl
lock
mov
xchg
cmp
lds
jl
add
or
xchg
push
adc
cmp
lods
mov
or
fbstp
movsb
fldenv
imul
push
ror
in
xor
jne
out
stos
sbb
push
sub
ret
in
adc
cltd
in
into
leave
pop
sub
and
scas
pusha
mov
xchg
notl
jae
data16
frstor
jge
pop
mov
sbb
xor
dec
dec
outsb
lret
cmp
adc
insl
jns
sbbb
mov
cmpsb
cmpsb
iret
add
push
jle
pop
and
sub
lods
xchg
lock
jp
test
inc
les
lret
cwtl
ficompl
popf
enter
insl
cli
stos
jno
mov
xlat
addr16
push
cmp
das
aad
loope
ljmp
or
jmp
in
std
stc
sub
sub
ljmp
inc
sbb
lahf
in
popa
xchg
addr16
rcl
mov
sbb
in
gs
pop
lahf
inc
push
mov
push
mov
or
mov
imul
push
mov
pop
loop
add
sbb
int
add
inc
cs
gs
mov
jmp
mov
jno
cmpsb
add
out
clc
enter
cs
stos
cmp
and
cmp
dec
pop
inc
inc
in
shll
mov
sbb
gs
mov
jge
lret
pop
lea
mov
stc
add
xor
outsl
in
push
test
js
fcompl
jmp
std
mov
mov
mov
imul
push
or
push
push
jae
cmpb
inc
les
rol
dec
mov
movsb
adcb
fdivp
test
jno
lea
pop
fsts
push
and
addb
pushf
jmp
cmp
in
push
fsts
xchg
negl
bound
call
sahf
xchg
pop
inc
scas
pusha
dec
fstpl
mov
popa
jb
pop
xchg
pushf
xchg
sbb
inc
mov
ret
movsl
xor
int
cmp
test
xor
stos
ficoml
movsl
sbbl
bound
mov
and
insb
xchg
sbb
pop
mov
jge
jbe
xor
jne
aam
mov
mov
aam
or
pop
push
push
jns
or
xor
cld
jle
add
jb
cmp
dec
data16
aad
fsts
jmp
insb
inc
sbb
push
sbbl
ret
lcall
mov
ss
into
mov
mov
aam
scas
aaa
adc
mov
insb
pop
adc
pop
cld
push
in
adc
or
dec
jmp
xor
ret
mov
inc
sti
insl
xlat
push
sub
into
mov
or
lods
mov
lcall
jl
test
sbb
mov
fldcw
mov
repz
dec
xor
icebp
ret
pop
sbb
andb
fcmovnb
sub
or
jg
dec
pop
push
adc
sub
gs
dec
mov
adc
mov
cmp
popa
inc
sub
sub
add
pop
and
cmc
dec
call
fistpl
mov
iret
insb
stc
loopne
and
xchg
pop
das
mov
scas
cmp
inc
fs
cmp
fcmovbe
into
cltd
lods
add
cmpsb
ljmp
cmpsb
imul
fisubs
das
add
add
cmp
popf
std
sbb
je
int3
orb
bswap
movntq
sub
adc
addr16
sub
es
insl
popf
out
imulb
cmpsb
std
mov
inc
sbb
jbe
push
pop
push
dec
es
insl
popf
out
imulb
cmpsb
std
mov
inc
sbb
or
xchg
dec
es
insl
popf
mov
mov
xchg
int
std
mov
inc
sbb
jbe
push
pop
push
int
std
ss
daa
dec
mov
out
add
adc
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aad
lds
and
ljmp
movsb
inc
add
sub
push
push
lcall
xchg
fiaddl
popl
inc
or
imul
aas
xor
push
lcall
mov
popf
lret
movsl
ljmp
sbb
push
imul
stos
cli
cmc
jmp
test
rcrl
cmp
aas
in
test
push
lcall
mov
jb
pusha
rorb
insb
cmc
mov
fwait
aas
inc
dec
adc
cmp
mov
dec
push
push
add
and
add
mov
aad
movsl
stc
jbe
mull
lahf
cmp
sar
fildl
fsubp
inc
cmc
inc
cld
lcall
push
pop
dec
jne
inc
add
and
push
in
pop
je
xchg
sub
or
mov
add
mov
inc
jo
arpl
dec
xor
sbb
lcall
sbb
lret
mov
or
jl
or
jp
sub
lcall
out
jecxz
clc
lahf
movsl
sahf
push
push
adc
imul
or
mov
repnz
leave
stc
cltd
test
push
jg
js
pop
and
adc
pop
inc
ds
test
rcr
call
movsl
ljmp
sub
jp
push
lcall
xchg
fiaddl
ljmp
sub
jp
push
lcall
stc
das
out
mov
pusha
push
je
add
std
out
cmp
jge
dec
push
faddp
adc
mov
jg
xor
jne
stc
fwait
cs
xchg
leave
sbb
movsb
push
cmp
cmp
pop
dec
jg
pop
insb
lret
inc
movsb
lcall
jge
out
xchg
arpl
jle
stos
and
mov
pusha
adc
out
dec
xchg
jmp
pop
clc
sti
cmc
pop
lds
into
pushf
test
fisttps
cltd
mov
je
fs
ljmp
mov
cmpsb
sub
hlt
fcoms
or
mov
mov
loop
add
jnp
pop
cmp
jp
inc
inc
fsubr
and
fwait
push
sti
hlt
sub
sub
lock
into
jmp
mov
pop
xchg
lret
push
in
frstor
fcompl
arpl
mov
add
std
mov
add
sbbl
mov
clc
ret
lcall
mov
jmp
push
mov
push
pop
out
xchg
fdivl
jnp
clc
cltd
fcmovne
jb
mov
jns
sub
sbb
mov
and
push
lret
cmp
push
sub
jmp
fcomps
add
jbe
push
and
lahf
out
insl
imul
arpl
pop
pop
adc
test
enter
jmp
cli
and
mulb
mov
xchg
pop
pop
imul
cmpl
mov
or
push
lods
and
int3
xor
int3
call
fs
mov
mov
mov
or
jae
das
cltd
addb
or
mulb
or
inc
xor
add
fisttpll
aas
fsubrs
push
inc
pusha
and
lahf
fnstsw
mov
push
scas
xlat
mov
orb
sti
sub
fidivs
in
loopne
fldcw
iret
nop
inc
dec
js
add
ret
outsl
adc
mov
add
pop
add
cmp
pop
push
imul
pop
mov
out
mov
movsb
push
int3
mov
jle
cs
mov
jp
dec
mov
lcall
repnz
cmp
fsubl
and
push
stos
pop
jp
rcll
xor
mov
jge
ja
cltd
or
sbb
ret
lcall
cmp
repz
inc
sub
sub
and
inc
push
fwait
or
push
inc
jge
or
fwait
jecxz
call
inc
jmp
xchg
and
insb
mov
call
popa
jnp
clc
mov
dec
or
scas
aas
pusha
pushf
mov
pop
push
inc
inc
sbb
mov
pop
mov
or
rol
lods
icebp
jns
xor
xchg
cmp
fcmovnb
inc
xor
sbb
lods
inc
cmp
mov
add
loop
cli
sti
pop
orl
mov
add
popf
sti
dec
xchg
jne
mov
mov
ret
aas
mov
push
xor
outsl
xchg
adc
adc
pop
stc
daa
rorl
xchg
jae
jecxz
xchg
mov
dec
pop
aam
or
cmp
jmp
mov
repz
stos
loop
js
jecxz
mov
dec
mov
lods
aaa
pop
dec
mov
and
enter
pop
add
push
jne
fidivrl
xor
sbb
ret
jp
orb
xchg
xchg
mov
mov
adc
dec
mov
push
mov
cmp
mov
les
fstpt
imul
dec
pop
iret
call
int3
mov
add
push
sub
push
inc
cmp
test
pop
pop
jl
mov
dec
popf
pushl
jmp
insl
mov
pop
loopne
cld
ret
jnp
add
push
lcall
shlb
mov
jbe
int3
sub
mov
fwait
push
cmp
xchg
xchg
sbb
adc
xchg
adc
or
dec
lock
into
mov
insb
mov
mov
sbb
or
dec
fistl
push
push
add
mov
sbb
and
pop
push
push
loop
movsb
add
cmpl
cmp
movsl
cmp
mov
fdivrl
or
pop
mov
imul
xchg
in
cmp
pop
inc
int3
gs
test
or
cmp
iret
add
xor
lods
mov
lods
sbbl
clc
call
jbe
leave
movsb
jp
mov
fbld
scas
rorl
test
aas
jmp
inc
lock
fisttpl
sbb
mov
pop
add
and
into
out
adc
ret
push
movsb
adc
or
cmp
popa
cmpsb
out
cmc
pop
inc
mov
and
dec
mov
mov
fwait
in
push
jne
fimull
xor
fstl
xor
sub
imul
addr16
pmaxub
rol
icebp
or
xor
dec
jnp
dec
pop
fidivs
lret
mov
not
lods
mov
jg
movsl
add
out
or
paddusb
lcall
xor
cmpsl
movsl
imul
push
ljmp
jg
insb
das
icebp
jb
fcomps
rcr
jbe
scas
enter
and
movsb
out
sarl
es
push
xor
fildll
popf
adc
lds
inc
mov
add
mov
sbb
jmp
xchg
jo
or
enter
cwtl
add
out
push
pop
mov
lret
push
inc
mov
mov
repnz
test
mov
test
xor
pop
movsb
mov
jns
imul
leave
jl
sbb
add
inc
fwait
clc
or
addr16
negl
loopne
pop
cmp
lcall
sbb
push
push
mov
daa
mov
ret
sbb
jns
fldl
cmp
imul
lods
mov
xchg
jb
mov
mov
test
jecxz
mov
push
xorb
inc
fst
in
ss
cli
jmp
icebp
dec
xor
pop
or
mov
sbbb
sub
sub
bound
mov
shll
mov
std
push
xchg
lcall
xor
push
test
sub
out
fistpl
mov
outsl
out
jnp
ret
sub
xchg
push
addl
xor
ret
jne
adc
mov
adc
mov
jp
enter
or
repnz
je
je
dec
mov
arpl
daa
lods
outsb
fcom
adc
das
inc
or
lret
test
test
shll
xchg
inc
stos
je
mov
into
hlt
call
push
in
xchg
xor
shlb
xchg
test
les
push
jnp
add
dec
xor
pop
mov
dec
push
fcmovne
daa
mov
jmp
imul
sub
push
mov
pop
mov
loop
xchg
push
sbbb
pop
mov
stos
das
rcr
jnp
mov
pusha
add
adc
or
pop
mov
ret
mov
filds
lods
push
aad
leave
out
jnp
sbb
popa
mov
push
push
adc
shrb
in
setb
or
jo
icebp
outsb
out
shlb
push
add
xchg
inc
addr16
test
xor
xchg
sub
shl
add
int3
add
jge
inc
pop
push
aaa
push
fisttpl
sahf
out
lock
popf
mov
imul
adc
push
cmp
es
lea
icebp
popa
or
mov
jns
mov
or
sbb
enter
sub
jno
lret
ror
out
xchg
fnsave
sbb
leave
mov
testl
jmp
adc
jb
xchg
mov
or
jecxz
sbb
jp
cs
sub
mov
insb
jge
sub
cli
sbb
cld
mov
lods
sbb
mov
addr16
mov
rolb
hlt
sti
and
mov
cmp
iret
adc
lahf
sti
mov
add
pop
cwtl
adc
cmp
int
les
cltd
enter
inc
cwtl
divl
nop
js
enter
out
lods
fwait
cli
testl
inc
divl
std
inc
stc
inc
jnp
test
out
sub
loopne
out
push
and
fldt
and
or
pop
repnz
ja
sysenter
xor
cmpsb
popf
pusha
xor
mov
cltd
cmp
and
xchg
xchg
aaa
dec
decb
aas
leave
outsb
jae
adc
add
xor
and
jnp
lret
dec
pop
scas
inc
jmp
inc
cs
mov
add
nop
ljmp
cld
adc
nop
ss
push
sar
and
or
shlb
mov
cmp
lahf
add
dec
mov
mov
mov
push
lods
mov
aas
ret
fsts
fcmovne
in
mov
sbb
bound
fdivl
jl
mov
xchg
rclb
adc
pushf
adc
mov
sub
or
xchg
dec
not
lcall
xchg
push
mov
bound
enter
test
adc
test
xchg
add
mov
test
test
and
jae
roll
cmpsl
sti
loop
scas
sbb
dec
js
push
jbe
dec
push
jbe
fldenv
xchg
imul
ss
jnp
cld
jmp
cld
vpsrlw
pop
imul
push
or
pop
xchg
das
sbb
add
push
mov
out
outsl
jno
lcall
test
mov
lcall
into
mov
pop
jp
sbb
int
xchg
movsl
sbb
cmp
ds
hlt
xor
xchg
into
add
cwtl
pop
mov
jo
sbb
dec
enter
inc
sbb
in
dec
aam
ret
push
mov
iret
cmpsl
xor
jne
and
lret
fcompl
cmpsl
jne,pn
or
js
adc
mov
add
enter
insb
mov
mov
insl
mov
pop
xchg
fwait
inc
sub
and
mov
into
jb
stc
mov
fisubl
fidivl
jmp
lods
push
fwait
lods
fldenv
in
xchg
das
sub
cmp
notb
shll
sub
jb,pt
pushf
xchg
push
xchg
sub
test
pushf
dec
ret
outsb
and
and
loopne
mov
push
and
js
in
cmp
lods
shll
dec
push
fsub
leave
int3
dec
jnp
loop
sbb
fstpl
ds
aas
addl
fstpt
cmpb
xchg
jmp
push
or
jmp
call
pop
or
sbb
fisttpll
xchg
jbe
pop
pop
lret
pop
or
inc
inc
jo
sarb
fwait
int
shrl
scas
outsl
subb
fsubs
std
shll
int
je
sbb
add
outsb
movb
push
pusha
int3
jns
popf
mov
dec
in
loop
and
mov
sbb
and
gs
sbb
test
inc
jge
dec
stos
loopne
pushw
xor
pop
outsb
popl
sbb
loope
es
or
mov
imul
xchg
jle
mov
mov
ss
aam
jmp
dec
mov
pmullw
rcrl
dec
dec
idiv
push
shrl
mov
stc
pop
pop
add
rorl
lods
sub
pop
and
sbb
cmpl
dec
xor
push
loopne
xchg
cmpsb
push
ret
push
pop
repz
pop
mov
xchg
or
inc
mov
loopne
rorl
clc
ficomps
and
outsb
xchg
mov
cmc
mov
pop
xchg
sbb
ljmp
push
lea
mov
mov
dec
lock
repz
lcall
lret
jbe
adc
fwait
sahf
xchg
rcll
cmc
and
inc
popa
jp
and
mov
dec
shll
cmp
mov
mov
ljmp
mov
cmp
jle
lret
dec
clc
lea
sbb
adc
outsb
xor
loope,pn
dec
gs
cs
outsl
out
in
int
xor
jmp
xor
jnp
and
push
sbb
clc
sti
ds
pop
inc
aaa
ror
setge
test
lret
jo
outsl
dec
rcrb
stc
sub
xchg
mov
xor
xchg
pop
pop
add
mov
imul
std
es
and
dec
pop
mov
add
js
xchg
enter
adc
scas
popf
aaa
insl
jp
jle
out
jmp
cs
jmp
xchg
mov
enter
cltd
inc
cmp
loop
jo
mov
mov
ud1
icebp
adc
xchg
and
pusha
mov
xor
cli
pop
xchg
mov
lret
call
cmp
test
imul
repnz
fidivrs
jnp
vmread
subb
mov
das
xor
imul
ret
ljmp
loop
push
push
push
push
cwtl
not
inc
adc
or
movsb
sbb
addr16
inc
mov
push
and
icebp
add
mov
push
mov
cmpsl
pop
popf
int3
pop
and
int
ljmp
aaa
scas
sbb
lock
inc
gs
jmp
inc
pop
ror
sub
mov
jns
call
pand
ja
dec
xlat
cmp
and
stc
xor
dec
lcall
imul
roll
scas
je
xlat
sarb
sbb
jge
xor
push
std
shl
inc
ds
test
sarl
addr16
das
fildl
cmpsb
sti
dec
popf
mov
arpl
lea
les
lods
test
popa
test
movntq
cmp
jge
mov
pop
push
sahf
mov
cmp
fidivs
or
int
in
in
fisubrs
lea
scas
daa
push
pop
popf
mov
outsb
das
pop
rolb
jecxz
sub
jle
repz
xor
in
pushf
or
out
clc
dec
pusha
rorb
inc
cmp
pop
and
mov
and
imul
sbb
out
pop
dec
mov
mov
inc
push
lret
rolb
mov
cmp
lcall
mull
dec
roll
les
mov
mov
adc
push
jge
xchg
sbb
test
adc
jg
cmp
scas
push
fsubs
nop
inc
jge
outsb
dec
xchg
adc
ss
push
stos
adc
xchg
push
mov
lret
pop
mov
idivl
adc
mov
adcl
xchg
adc
cmp
aaa
cmc
dec
fidivrs
mov
cli
cmp
inc
xorl
push
push
call
out
sub
fistl
dec
jge
test
gs
nop
pop
lahf
fistpl
scas
insl
sub
repz
inc
add
xchg
test
mov
push
call
ret
loopne
sbb
subl
loope
and
pusha
outsb
cs
cmp
cmpl
hlt
filds
inc
pusha
stc
or
cli
xchg
xchg
or
cld
mov
orl
mov
pop
jmp
cmp
cmp
and
jae
pop
dec
dec
ret
adc
pusha
arpl
xchg
push
adc
insb
rolb
inc
stc
dec
and
push
les
daa
lds
inc
mov
jp
nop
ljmp
pushf
outsb
les
int3
and
xchg
neg
push
out
mov
add
pop
xchg
lods
mov
dec
rcr
mov
sahf
jae
shl
push
popa
pop
pop
adc
and
movsb
mov
nop
call
sub
sarb
mov
adc
andb
inc
orl
xchg
push
mov
and
xor
bound
pop
or
xor
stos
ja
mov
scas
rclb
dec
or
add
scas
sub
rcll
je
adc
out
lods
lahf
jns
clc
out
repz
xchg
rcl
push
mov
pushf
dec
hlt
sbb
adcb
in
push
inc
movsl
pop
adc
sti
aam
negl
int
and
inc
pop
fsubs
jns
inc
mov
sarl
adc
or
jl
movsl
in
pusha
lds
xor
xor
mov
sub
mov
cld
loope
stos
xor
lds
gs
mov
ror
sub
aad
jnp
lods
dec
ret
mov
outsl
lahf
int3
dec
int3
iret
out
and
mov
insb
dec
in
mov
pop
sub
fstpl
push
dec
mov
sub
push
scas
enter
test
xchg
or
dec
rcl
mov
das
adc
inc
add
lss
fnstsw
test
sarl
push
nop
imulb
and
mov
adc
dec
cld
adc
sub
hlt
xor
icebp
inc
cli
adc
adc
pop
leave
xchg
add
jns
cmp
stc
push
and
aaa
jmp
or
into
jl
xchg
in
push
dec
int
shrb
inc
pop
lods
dec
jno
jg
loope
push
or
scas
mov
or
bound
into
cmc
gs
mov
jo
xchg
cmpsb
jnp
cmc
lds
adc
fdivl
jl
shrb
lock
int
in
jo
aam
jae
jbe
mov
push
ss
scas
xchg
inc
dec
nop
sbb
add
dec
popa
sub
ret
inc
cld
mov
inc
xor
mov
outsb
or
jmp
push
ret
inc
mov
xlat
std
in
jg
cld
testb
loope
rorl
pop
xchg
call
jg
mov
fildll
daa
sub
icebp
loop
addr16
insb
adc
xor
leave
popa
icebp
mov
mov
in
jnp,pn
mov
pop
fsubr
push
jb
inc
xchg
divb
leave
ja
dec
outsl
flds
xor
idivl
jg
adc
or
adc
mov
fs
xor
in
in
popf
or
fsub
insb
filds
push
sbb
ffreep
lret
lods
mov
dec
orl
notl
jb
cli
imulb
pop
adc
xchg
sbb
mov
mov
int
inc
imul
sub
cmpsl
mov
push
lahf
in
push
out
push
mov
pushf
mov
xchg
jo
mov
adcl
jge
xchg
sbb
mov
or
lcall
adc
lods
fs
pop
subl
out
popf
add
cmp
andb
mov
mov
popf
push
xor
cmp
adc
insl
jbe
inc
loop
lret
lret
es
pop
and
rorl
sbb
sbb
sub
rorl
jae
bound
jg
ja
mov
mov
sbb
stc
aas
jnp
test
mov
pop
jo
sahf
scas
mov
push
mov
cltd
push
cs
test
lods
sub
in
pop
mov
js
dec
jo
and
xchg
mov
mov
sub
jno
cmp
lds
and
add
in
repz
clc
jge
xchg
lods
jne
lea
add
mov
and
pop
mov
adc
push
jo
pop
jmp
mov
sbb
jp
push
add
mov
mov
or
xor
pop
inc
dec
cmp
fstps
cmp
jo
dec
push
mov
es
in
xchg
mov
cmp
js
push
sub
in
xchg
mov
sbbb
cmpsl
mov
insl
mov
adc
inc
in
sub
push
mov
push
mov
xchg
cmp
add
outsl
mov
call
xchg
in
rorl
or
xchg
jge
stos
push
xchg
xchg
push
mov
sub
jl
flds
movsl
adc
sbb
xchg
cmpsl
lds
sub
mov
cmp
das
dec
scas
mov
add
leave
out
and
dec
imul
enter
cmp
or
in
xchg
addl
rcr
adc
mov
mov
mov
enter
push
clc
loope
cwtl
or
out
mulb
xchg
sti
lea
in
int3
xorl
or
incl
jae
dec
jne
out
stos
cwtl
jge
rclb
adc
nop
adc
sub
and
nop
cmc
orl
pop
sub
cmpsb
daa
popl
mov
test
push
dec
mull
inc
iret
jo
aad
pop
ret
inc
es
movsl
xchg
mov
jecxz
mov
add
movsl
addb
and
add
lods
push
imul
xor
lods
incl
dec
lahf
adc
mov
ja
loopne
ret
test
jmp
icebp
and
decl
or
testl
sbb
dec
adc
inc
out
xchg
outsb
movsb
push
sti
adc
lret
and
data16
push
cli
inc
mov
mov
test
mov
movsl
ljmp
sub
jp
push
lcall
xchg
fiaddl
ljmp
sub
jp
push
lcall
xchg
fiaddl
ljmp
sub
jp
push
lcall
xchg
fiaddl
sub
cmp
vrcp28pd
mov
movsb
in
cmc
movsl
in
aam
shlb
prefetch
test
leave
xchg
mov
movsb
in
aam
int
sub
cmp
and
jp
inc
dec
je
fs
cs
shl
in
mov
fst
dec
adc
daa
gs
js
push
pop
mov
push
add
ret
shl
lds
cmp
push
push
sti
push
jbe
iret
sub
das
inc
xchg
inc
inc
or
sarl
or
fucomi
dec
clc
mov
loope
xchg
inc
and
dec
jmp
in
mov
mov
mov
sbb
cmp
jno
aad
push
sar
xor
in
lret
jecxz
xchg
inc
jge
dec
mov
push
inc
mov
lods
dec
add
out
lds
push
sbb
aam
aam
jge,pt
mov
push
jmp
mov
arpl
adc
xor
push
test
jmp
add
pop
push
negb
jmp
rcrb
int
jnp
jmp
cmpsl
lods
jnp
sub
stos
jg
pop
push
les
enter
test
sub
xchg
js
pop
adc
sub
cmp
inc
cld
enter
xchg
cmp
outsl
jno
data16
sbb
inc
and
sbb
shl
fs
fmul
enter
int
fucom
sub
xor
and
push
jge
dec
je
lods
xchg
mov
movsb
in
aam
int
fucom
sub
xor
and
push
jge
dec
je
lods
xchg
sbb
dec
leave
pop
dec
and
jg
inc
pop
into
jle
movsl
ss
mov
call
jb
mov
test
fmull
in
std
mov
hlt
das
mov
shll
mov
xchg
subb
fnsave
ret
or
or
cmp
hlt
lock
xchg
out
inc
sub
mov
test
or
xor
lods
mov
repnz
out
std
and
test
imul
and
dec
adc
jg
pop
xlat
pushf
fdivs
out
cli
mov
cmp
sub
xchg
mov
je
sbb
in
push
das
sub
icebp
or
xlat
jmp
outsb
sti
xor
popa
sbbb
ss
sarl
jb
leave
push
dec
pop
xor
je
dec
enter
fmull
mov
and
xchg
pop
std
inc
xchg
jl
lret
push
push
nop
in
clc
aas
cmp
icebp
xchg
rorb
outsl
push
xor
imul
cmpsb
cmp
push
mov
pushf
push
stos
add
cld
adc
nop
mov
sub
adc
lds
mov
std
and
call
insl
movsl
test
xchg
pusha
std
jl
jecxz
imul
fwait
jns
out
movsl
jnp
add
jle
aas
sbb
inc
inc
cmp
adc
sub
cmc
xchg
clc
and
pop
adc
fldt
outsl
mov
sbb
loop
ss
jo
gs
xchg
ljmp
shlb
cld
xor
xor
lea
scas
les
jp
lahf
sub
inc
mov
xor
scas
lds
add
or
inc
gs
icebp
pop
stos
jecxz
pop
cltd
xchg
ret
out
xchg
adc
fs
lods
hlt
add
ljmp
sbb
push
fxch
in
imul
lcall
pminub
in
adc
add
cwtl
stos
jnp
cmp
fisttpl
sbb
aas
sbb
fidivrl
adc
in
jp
mov
xor
push
mov
imulb
mov
jno
call
lods
out
jecxz
cmpsl
cmp
sub
pop
in
jb
dec
sub
xchg
fadds
into
je
inc
in
shrl
test
loope
out
sahf
iret
pop
inc
ja
notl
dec
xchg
jo
mov
sti
ja
xlat
push
cmp
ret
aas
sbb
sarb
push
adc
fadd
push
jle
cmpsl
jb
mov
push
idivb
scas
xchg
aaa
enter
shll
add
mov
sub
roll
sub
std
or
inc
test
adc
xor
jmp
scas
fsub
inc
sti
sahf
push
lock
roll
adc
xor
jbe
imul
lods
jl
arpl
push
ficoms
mov
cmp
mov
fnstcw
rorb
mov
pop
jb
mov
dec
jnp
add
fcmovbe
pop
push
stc
lds
test
cwtl
or
jp
push
add
pop
ret
pushf
lret
int
mov
sub
arpl
push
lds
notb
rclb
aam
push
cmp
outsb
sub
sub
and
cmp
inc
daa
sbb
into
ficoms
or
repz
mov
cld
fstps
adc
das
sub
fnsave
mov
int
mov
mov
inc
in
cmp
dec
cmp
inc
sub
cmp
scas
dec
cs
jle
adc
outsl
and
jb
or
or
add
ds
or
mov
xor
xchg
mov
ljmp
mov
std
push
sub
adc
dec
mov
pop
mov
pop
jo
adc
filds
or
mov
clc
sub
jle
pop
pop
lret
iret
les
filds
cmpsb
and
ja
shlb
out
add
xabort
nop
fistl
arpl
mov
idiv
icebp
mov
lcall
pop
imul
cltd
pop
cmp
mov
push
pusha
cmc
push
imul
xchg
popa
dec
stos
push
popa
mov
cmc
sahf
idivl
std
pop
shrb
inc
outsl
push
int3
jae
test
flds
cmp
mov
xor
pop
icebp
and
xchg
cli
and
mov
neg
dec
inc
mov
arpl
in
pop
xchg
aaa
inc
jge
mov
pop
testb
xor
dec
fnsave
mov
push
fildll
mov
out
and
imul
fcom
not
lret
pop
sbb
adc
adc
leave
inc
add
arpl
dec
mov
fwait
push
mov
cmp
jmp
shll
add
cmc
out
dec
cmp
dec
bound
jo
shrl
xchg
or
cmp
pop
andl
out
dec
cli
pop
das
push
lahf
add
ret
mov
sub
shl
mov
fldt
sarb
movsl
divl
nop
call
mov
cwtl
push
aam
pop
jns
push
repnz
addr16
ret
call
std
cmp
pop
in
sbb
mov
lcall
push
es
scas
cmp
les
icebp
or
lock
dec
ja
xchg
aad
add
aas
xor
jg
xor
aas
dec
popa
and
dec
lds
out
or
pop
mov
movsb
jmp
push
addr16
cmc
shr
fsubs
loopne
xor
outsl
push
out
and
insl
jmp
push
mov
inc
popf
rol
dec
jle
jnp
mov
movsb
popa
clc
mov
mov
xchg
out
bsr
sub
in
neg
dec
loop
iret
rolb
int3
and
js
xor
and
rcll
repz
xchg
sbb
mov
ljmp
xlat
xlat
test
mov
dec
xchg
xor
ror
jno
sub
xor
mov
xor
or
lods
xchg
lcall
pop
pop
rcl
ja
jnp
addb
sbb
cltd
xchg
xchg
rcrb
lods
hlt
push
or
pop
inc
ret
sub
subb
leave
std
push
fs
call
cmp
dec
pop
dec
pop
push
push
lods
cmc
jmp
jecxz
xor
repnz
and
ljmp
pop
cltd
pop
fiadds
test
or
f2xm1
xchg
push
dec
nop
negb
sbbl
aam
jg
xlat
cltd
pop
lods
mov
mov
jg
aad
jnp
inc
pop
inc
cmpsb
and
xchg
dec
dec
sbb
mov
mov
mov
data16
add
das
idivl
cmp
push
xchg
outsb
or
sti
sbb
out
es
mov
and
xchg
and
jns
fistps
pop
inc
or
fcmove
jo
fidivs
xchg
fsubl
jo
roll
pushf
mov
test
popf
xor
mov
scas
push
mov
xchg
movaps
hlt
and
mov
sub
and
nopl
cmp
aas
xchg
jg
ret
outsb
loopne
negb
add
aaa
mov
nop
or
test
sbb
popf
in
fiadds
fs
mov
icebp
scas
mov
mov
ljmp
sub
cmp
test
cmp
and
xor
mov
jbe
insl
push
mov
sbb
xacquire
iret
shll
xchg
inc
mov
mov
inc
sti
pop
sub
lret
add
or
lret
fmuls
dec
cld
fisttps
pop
call
adc
xor
mov
in
outsl
shl
mov
jo
aam
stos
jno
xor
cmp
push
in
pop
icebp
fwait
jb
adc
jbe
pop
scas
pusha
test
mov
lcall
mov
sbb
fmuls
jge
sbb
int3
and
cmp
jmp
mov
aam
push
in
gs
pop
push
aad
cmp
std
cmpsl
xlat
mov
mov
nop
test
loope
xchg
inc
stos
push
dec
and
dec
dec
inc
outsb
std
push
loope
and
mov
or
lcall
or
stos
jbe
jecxz
add
jbe
inc
ds
mov
sti
outsl
stos
out
or
pop
inc
in
jne
adc
ja
gs
push
sub
jns
movsl
xor
js
and
cmp
cld
xchg
das
push
adc
jmp
testl
pop
cwtl
ror
call
aam
dec
dec
lods
mov
call
xchg
mov
rclb
repnz
xchg
add
mov
loope
mov
fs
loope
sub
daa
test
sub
mov
repnz
popl
or
lret
fs
push
or
lahf
or
xor
pop
mov
jnp
pusha
push
je
inc
insl
push
mov
cltd
into
mov
int3
lods
pop
fldt
outsb
idiv
int
cwtl
lock
test
rorl
lods
pop
hlt
cmp
mov
push
icebp
lcall
sahf
or
xchg
cwtl
pop
iret
dec
jmp
push
xor
mov
inc
mov
mov
add
les
setp
pop
test
hlt
in
in
pop
insl
out
arpl
ljmp
inc
stc
mov
add
mov
fstpl
test
fsubs
rcrb
cmpsl
xchg
sub
xor
ffreep
adc
lahf
mov
icebp
jmp
xor
push
push
repz
insl
pop
sbb
pop
push
ljmp
push
push
mov
sub
inc
rclb
sbb
mov
roll
in
jns
push
xchg
outsl
pop
dec
push
idivb
xchg
icebp
pop
push
and
pop
je
push
test
xor
dec
push
in
fisubrs
add
popa
aad
or
mov
mov
add
stc
jnp
aam
push
stc
out
sub
jmp
jmp
fdivl
cmp
push
loop
movsl
jb
dec
cmp
jmp
gs
rcl
and
jnp
add
mov
test
out
enter
out
inc
bound
bound
imul
xchg
adc
dec
jne
mov
sti
enter
pop
imul
iret
dec
mov
pop
mov
jno
pop
cs
cmp
pusha
sub
push
test
mov
sbb
xor
nop
cmp
arpl
loopne
sahf
adc
outsb
pop
add
push
insb
insb
mov
push
mov
fnop
push
movsb
add
mov
xchg
aas
cwtl
push
arpl
sbb
mov
mov
mov
cmp
es
pushl
ljmp
insl
sbb
data16
sbb
aas
lea
ret
aas
cmpl
dec
and
jg
xor
and
mov
or
push
xor
jp
popf
cltd
frstor
sbb
pop
pop
clc
scas
cmpsb
adc
cmp
mov
cmp
mov
loope
sti
mov
fs
int
dec
jno
inc
hlt
sub
andb
in
mov
push
pop
call
data16
sub
jnp
mov
mov
jg
xchg
cmp
push
xlat
call
jno
data16
mov
push
mov
outsl
stos
inc
cld
sub
jns
pusha
popf
orl
enter
out
fstps
mov
mov
mov
bound
mov
xor
xor
xor
lods
mov
stc
fwait
gs
stc
push
fxch
push
aad
mov
sahf
shrb
clc
xchg
outsb
jle
inc
ret
dec
andl
add
es
cmpsb
xchg
add
clc
sub
push
mov
dec
in
loope
les
xor
add
std
or
cmc
aas
xchg
scas
fisubrl
xor
xchg
pushf
js
or
xchg
push
es
cs
into
cmp
pop
adc
xchg
js
sbb
push
sub
icebp
xchg
add
daa
jns
shlb
test
mov
lret
add
mov
or
inc
mov
lea
cs
add
rclb
and
aaa
shl
push
rcrb
cmp
test
inc
add
and
enter
scas
push
mov
pop
dec
in
push
ret
add
and
sbb
pushf
push
fucomi
cli
mov
in
int
xor
clc
push
sbb
clc
daa
cmp
inc
out
xchg
outsl
jp
stos
jb
lods
mov
fisttps
std
adc
outsl
xchg
out
fcomps
leave
dec
mov
push
adc
das
lock
xchg
int
pop
pop
out
or
adc
sub
cmp
mov
jp
fwait
mov
cmp
sahf
daa
xchg
call
adc
in
sahf
adc
pshufw
bound
dec
pop
aam
push
je
add
push
pop
shrl
fcmovbe
adc
push
and
adcb
mov
push
out
sub
mov
call
jl
mov
pop
sbb
shlb
loop
mov
jle
sar
imul
cli
gs
jmp
bound
lea
addb
adc
dec
jnp
xchg
sbb
out
add
inc
sbb
ret
ret
mov
out
stc
jge
daa
adc
test
imul
mov
inc
out
lods
mov
lret
rcr
pop
jmp
or
fs
xchg
fsubrp
xchg
repnz
outsl
adc
es
inc
mov
push
sub
in
adc
sub
loopne
loop
push
mov
aas
xor
outsb
xchg
inc
sub
gs
sub
jns
push
mov
jge
cld
scas
mov
nop
cwtl
data16
lea
dec
movsl
push
pop
mov
and
push
and
mov
out
lcall
sarl
dec
inc
mov
mov
and
add
push
js
pcmpeqd
lahf
gs
xchg
mov
daa
jge
jae
subb
test
jmp
inc
push
fists
testl
dec
sbb
fwait
mov
fisttps
cmp
rolb
dec
sbb
sub
pushf
dec
test
nop
dec
sbb
mov
shl
pop
xor
or
pop
jae
into
les
inc
inc
in
je
outsl
mov
movsb
sub
nop
jmp
out
adc
mov
hlt
fucom
push
fmulp
mov
xchg
push
fcomps
inc
es
fcompl
icebp
cmc
inc
lock
dec
sub
or
dec
js
aaa
sub
scas
pop
push
push
dec
inc
fistps
mov
mov
and
stc
clc
pop
xchg
ds
xchg
in
adc
mov
pop
jbe
out
fidivrs
jno
sbb
rcll
adc
pop
sbb
sub
mov
sbb
daa
add
adc
pop
jle
insb
jg
add
xchg
in
push
push
xchg
xchg
mov
add
inc
or
and
je
loop
mov
ja
pop
movb
cmp
idivl
dec
mov
or
popa
in
sub
pop
inc
mov
xor
jns
cmp
testl
int3
loope
cwtl
adc
mov
push
in
pop
adc
dec
cmc
icebp
sti
cmp
cmp
mov
xchg
nop
mov
cmpl
test
add
mov
aas
xchg
aam
add
cmp
jp
int3
test
cli
or
sub
rorb
xor
fisttpll
push
and
shll
cmpsb
xor
pop
enter
fwait
jmp
pop
sbb
repz
movsb
sbb
push
jb
cmpl
xchg
push
cltd
loopne
sbb
xor
xchg
sbb
dec
lods
icebp
mov
jp
cmp
pop
push
inc
fcomps
push
add
lods
mov
or
or
cli
fistpl
cmc
dec
adc
mov
pop
dec
xor
arpl
sub
rol
scas
xor
icebp
ficoms
dec
xlat
lods
lock
imul
gs
jp
data16
inc
jo
fmuls
ret
jnp
mov
fsubrl
into
xchg
lods
sbb
cld
subb
fstpl
mov
cmpsb
outsb
pop
adc
nop
jne
enter
push
pop
sahf
mov
fiaddl
rep
ljmp
iret
aas
scas
cwtl
cmpsl
andb
jbe
out
outsl
frstor
arpl
inc
loopne
push
cmp
mov
mov
mov
dec
cmp
sub
pop
aas
xchg
xor
xchg
jg
dec
jo
sbb
test
sarl
cmpsl
call
hlt
dec
not
jae
xor
jl
sbb
mov
rorb
pop
push
cmp
arpl
sub
std
loopne
idiv
pop
jns
arpl
insl
cmp
enter
int3
imul
push
push
insb
ss
addr16
jne
xor
mov
or
popa
cmp
and
ret
sbb
popf
pop
or
inc
shll
add
mov
push
mov
bound
sbb
stos
mov
shlb
jg
mov
inc
rorb
mov
jb
jl
push
dec
cmpsb
clc
inc
popa
cmc
sub
fdivl
xchg
scas
test
sbb
shrl
adc
mov
bswap
or
lock
shlb
loope
xor
xchg
cmpsb
cwtl
mov
jp
inc
ret
sub
or
dec
lret
add
inc
aas
iret
cmp
xchg
mov
neg
ror
pop
int3
clc
loope
jmp
idivb
lods
dec
mov
and
or
lret
push
jne
dec
pop
sbb
cmp
mov
iret
std
inc
jg
dec
or
cmc
fwait
xchg
dec
add
test
and
lahf
inc
cli
or
in
mov
sub
sbb
push
inc
jb
repnz
dec
out
sahf
cwtl
sub
mov
cs
pop
sahf
or
mov
inc
test
mov
inc
jmp
leave
mov
cmc
jne
in
cmc
roll
in
icebp
leave
in
fmuls
or
dec
les
push
push
push
subb
lds
push
xchg
icebp
mov
inc
loop
pop
xor
and
adc
fsubrp
cmpsb
xchg
add
xor
push
push
mov
xchg
mov
push
push
fbstp
mov
pop
xchg
testb
enter
adc
sub
insb
cli
xchg
push
test
andl
and
dec
pop
cmp
inc
addb
adc
cmp
fptan
jmp
test
std
aas
stos
movsb
fistps
push
les
lods
dec
ret
mov
jmp
loop
aad
mov
add
add
pop
inc
hlt
aaa
inc
jbe
mov
sub
and
mov
dec
adc
jae
fisubl
std
pop
mov
sbb
aaa
arpl
call
push
xchg
into
xchg
pop
or
pusha
leave
repz
loop
xchg
ret
or
and
sbb
dec
sbbl
mov
lahf
fsubl
add
std
add
sbbb
mov
jae
cmc
aas
ds
sbb
lock
dec
push
jecxz
pop
xchg
subb
adc
aaa
out
mov
push
pop
sbb
movsl
cmpsl
push
push
rsm
dec
cmp
in
xchg
rcr
mov
jbe
sbb
sub
js
add
cmp
sub
outsl
sub
xor
xchg
leave
jnp
test
sub
sub
loope
mov
std
pop
dec
call
fcomip
ds
dec
push
addb
fbld
in
xchg
scas
inc
jl
jno
mov
shlb
jnp
ljmp
scas
aaa
sbb
lea
mov
inc
fsubrl
aam
mov
into
js
jno
jae
and
mov
push
aaa
lahf
inc
jb
cmp
test
andb
pop
daa
xor
aas
movsl
lods
arpl
adc
pop
mov
hlt
aam
jl
push
sbb
push
lods
add
movsb
xchg
mov
add
mov
sti
stos
cmp
or
push
sub
cmc
push
insl
or
pop
fstpl
imul
dec
xlat
adc
repnz
mov
mov
or
jmp
clc
mov
out
popf
out
push
icebp
push
adc
mov
xchg
int
pop
push
mov
sar
loope
pop
jmp
jp
loope
js
adc
add
or
scas
shrl
sbb
icebp
mov
mov
idivb
lods
pop
rcrl
in
xchg
scas
xchg
lret
sub
cld
push
inc
fisubl
push
push
xor
aaa
cmpsb
inc
in
mov
mov
and
lock
cmp
push
dec
iret
popf
test
xchg
lahf
js
push
call
daa
and
and
mov
addb
cmp
and
xlat
adc
testl
call
cmp
push
sub
mov
adc
test
mov
lahf
cmp
sbb
mov
mov
add
lret
shll
popa
loope
mov
negb
popf
lret
jle
mov
mov
pop
lcall
scas
add
jle
adc
inc
clc
in
mov
lock
or
mov
dec
jmp
and
int
pop
cmp
mov
iret
inc
test
and
cmp
cltd
iret
push
sahf
and
or
lods
push
sti
cmp
movq
and
fimull
popf
movsb
in
aam
int
fucom
sub
xor
and
push
jge
dec
je
lods
xchg
mov
movsb
in
aam
int
fucom
sub
xor
and
push
jge
dec
je
lods
nop
lea
jge
std
scas
int
sbb
add
xor
sub
dec
jge
cmpb
mov
int
pop
and
jmp
scas
cmpsl
xor
push
sbb
sbb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
scas
stc
mov
shlb
inc
pushf
das
nop
pop
add
adc
or
add
or
pop
add
add
add
add
sbb
add
faddl
sbb
cs
add
add
lret
add
add
add
add
add
add
add
dec
push
imul
lret
add
push
add
add
fiaddl
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
roll
jb
xor
insl
add
inc
add
add
add
add
add
dec
push
data16
add
push
add
pop
add
test
dec
add
lret
add
add
add
add
add
inc
add
add
add
cmp
sbb
xor
sub
aaa
add
add
add
jbe
movsl
add
push
add
int
sbb
roll
jno
jns
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
lret
push
mov
sub
dec
push
pop
add
add
add
xchg
add
sbb
cmp
xchg
add
bound
movb
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
push
add
add
add
add
int3
add
add
add
and
rolb
dec
push
roll
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
flds
sbb
sbb
aaa
add
add
add
add
add
add
int
test
adc
add
outsl
add
ltr
add
add
add
add
add
add
add
add
mov
pop
add
je
sbb
mov
jg
sbb
sbb
loopne
push
add
and
add
add
xor
push
add
outsl
add
movsb
add
add
add
add
add
add
add
test
jo
dec
add
add
sbb
imul
dec
push
lock
push
add
and
sbb
cmp
hlt
add
add
xor
test
sbb
and
pop
add
add
add
add
add
add
add
icebp
add
add
add
add
movl
movsb
add
aaa
add
add
add
out
add
add
int
dec
add
aaa
add
add
add
add
add
add
add
add
push
add
add
or
in
stc
add
add
enter
add
mov
fs
add
dec
add
add
add
add
add
add
call
add
add
add
add
int3
add
add
add
add
ja
stos
add
add
stos
add
hlt
add
add
add
add
add
test
add
nop
add
push
add
xor
stos
add
add
add
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
pop
add
sub
push
add
add
add
add
add
add
or
add
pop
add
add
jae
xor
mov
fidivrs
das
pop
mov
mov
adc
push
dec
mov
mov
lahf
cmc
add
cmp
lock
or
adc
mov
lret
push
cwtl
or
lahf
cmc
mov
xor
mov
rolb
cmp
sbbl
jae
xchg
mov
xor
inc
mov
jo
aam
movl
arpl
pop
xchg
nop
jp
inc
mov
xchg
and
jno
mov
sbb
xor
add
pushf
in
jge
dec
js
add
xchg
mov
jno
or
insl
insb
movsb
push
jge
or
inc
xchg
sub
add
sub
inc
mov
adc
dec
or
pop
mov
xchg
xor
js
xchg
and
dec
jg
dec
add
or
mov
fwait
xchg
xchg
pushf
mov
mov
xor
fnstenv
int
ficomps
mov
ss
pop
xor
mov
inc
adc
leave
dec
lods
push
lahf
popf
cmp
add
fwait
out
mov
and
mov
sbb
pop
pop
iret
test
mov
jp
out
cmp
mov
test
rcll
lods
mov
dec
lods
push
lret
aam
in
cmp
add
mov
pop
mov
rorl
shlb
dec
fstpt
mov
jbe
enter
and
sbb
mov
cli
add
dec
sub
jbe
xor
xor
push
cmp
mov
mov
js
arpl
lock
jl
cli
decb
fidivs
lds
mov
data16
mov
or
ss
sub
mov
in
ljmp
aad
inc
xchg
dec
lcall
pop
xchg
cmpsb
subb
pop
icebp
mov
ljmp
adc
add
dec
cltd
sbb
orl
fists
in
gs
popf
sti
add
scas
push
lds
dec
cld
cmp
fcomps
inc
push
hlt
dec
push
in
mov
mov
cmpsb
orb
xchg
dec
jge
roll
lock
mov
cmpsl
sbb
jle
xor
rolb
push
dec
pop
and
xchg
cmp
mov
addr16
addl
add
outsl
sub
shl
fstpl
sbb
imul
inc
xchg
cmp
add
je
cmp
mov
or
or
ja
repz
mov
movsb
or
or
xchg
ret
add
cltd
cmp
mov
lret
sahf
cmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
