adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
hlt
imul
cltd
dec
mov
push
sbbb
movsb
cmp
sub
sbb
or
jl
imul
outsl
test
pop
stc
das
jmp
xor
sub
aaa
or
jns
or
lahf
arpl
sub
jmp
add
inc
fdivrl
push
fldcw
std
cmp
clc
sub
cmp
lods
fisttpll
add
lea
mov
jo
aam
insb
mov
test
lock
loopne
adc
add
xor
cld
mov
shr
pop
mov
scas
jno
cwtl
lods
push
inc
jns
out
out
mull
xchg
stos
pop
push
pop
cld
outsl
sarl
dec
fcompl
cmp
psubusb
lret
xchg
sub
jp
or
neg
hlt
mov
mov
cmp
push
andb
mov
popf
into
and
out
or
mov
imul
data16
je
adc
pop
jg
push
sarl
cld
imul
mov
test
pop
stc
das
lods
aas
jno
lret
out
mov
jecxz
xchg
ja
pop
xchg
sub
adc
and
xor
jp
pop
pop
lods
push
mov
sub
sub
cmp
cmp
xor
mov
mov
jl
gs
or
or
sub
or
lret
sbb
lahf
jmp
arpl
aas
leave
pop
cmp
sub
sbb
or
jns
imul
cltd
dec
mov
das
jmp
pop
cmp
sub
sbb
or
jns
imul
xor
mov
dec
xchg
mov
mov
dec
in
dec
cli
add
xlat
cli
push
dec
jmp
add
add
mov
pop
cmp
or
iret
loop
push
je
pop
fs
adc
push
and
cli
lea
popf
stos
add
ret
sub
xchg
cmp
ret
inc
pop
xorl
and
add
sub
out
daa
das
out
dec
lods
jge
jmp
pop
lahf
popf
lret
and
ljmp
popf
idivb
stc
leave
jne
xor
jbe
into
dec
sub
jns
adc
loop
xchg
sub
and
shl
pop
pop
aad
mov
dec
push
into
into
lods
mov
pop
stc
idivl
mov
sbb
cwtl
and
notl
les
mov
pushf
and
sahf
sub
call
push
sarb
iret
pushf
lcall
mov
fmulp
je
negb
jle
sub
loopne
insl
cmp
movsb
mov
dec
outsl
inc
adc
gs
sbb
aam
scas
sbb
inc
inc
test
mov
or
fisttps
loopne
mov
dec
xor
xchg
les
mov
mov
push
sub
push
cwtl
fdivl
jns
jnp,pn
js
cmpsb
adc
push
sarl
dec
lds
jbe
push
mov
stos
adc
xchg
mov
mov
jno
mov
dec
mov
icebp
shrb
loop
pushf
mov
adc
and
and
mov
push
loopne
lods
xor
repz
sbb
mov
cwtl
popf
into
ja
pop
push
pop
cmp
imul
iret
mov
jle
into
lock
test
mov
xor
mov
xchg
push
in
sbb
mov
mov
xchg
cmp
das
xchg
jne
stos
mov
jg
mov
pop
repz
cmc
xor
lea
cmp
inc
shll
add
and
into
pop
lds
pop
mov
loopne
addr16
leave
mov
xor
mov
mov
rsm
notb
sub
mov
jbe
fistl
scas
shll
lock
insb
les
lret
mov
rorb
ret
lahf
subl
sub
inc
pop
lret
sbb
dec
xchg
push
mov
out
xchg
lret
popf
ljmp
ds
filds
jl
icebp
add
cwtl
and
or
test
dec
subb
push
mov
sub
lods
cltd
pop
sub
push
bound
xchg
inc
sbb
faddp
sub
int
in
sarb
and
stos
push
data16
repnz
inc
mov
mov
cmp
repnz
and
jge
push
sbb
outsb
xchg
and
pop
mov
push
pop
jecxz
aad
and
dec
jecxz
cmp
pop
xor
popa
cltd
mov
xchg
aaa
fdiv
xor
or
lret
or
jne
or
sti
hlt
jp
cmp
ds
sbb
sbb
adc
nop
gs
sbb
mov
pop
mull
xor
in
adc
jmp
ss
cld
pop
pop
xchg
aad
push
add
imul
sub
cli
hlt
xchg
add
je
cmp
in
pop
add
call
popf
and
dec
xor
and
in
mov
or
arpl
pushf
out
and
sub
xchg
adc
push
add
and
test
add
and
mov
into
into
test
cmp
dec
cli
or
fwait
and
or
jae
add
or
push
xchg
dec
lods
imul
inc
push
das
mov
jl
stos
mov
mov
push
fcomip
scas
mov
nop
std
sub
sub
roll
ljmp
pop
sbb
adc
pop
jae
pop
sub
jb
pop
and
je
data16
fidivrl
xor
inc
mov
sub
enter
xor
push
sbbl
xchg
add
and
mov
cld
jmp
dec
push
out
mov
scas
movsb
test
int3
in
shlb
fdivrl
cmp
or
scas
push
fldt
lock
dec
bound
or
movsl
dec
mov
movsl
lods
inc
xor
daa
arpl
cmpsb
dec
inc
xchg
sti
out
push
bound
js
out
push
adc
adc
mov
dec
dec
xchg
dec
jne
add
fisubl
sbb
lock
inc
push
lea
xor
insb
mov
insl
lret
push
and
call
push
jno
or
ljmp
shlb
subl
call
enter
or
and
jne
ret
xchg
dec
push
mov
inc
stos
mov
cmp
loopne
mov
daa
push
mov
cwtl
in
adc
inc
inc
imul
ds
push
das
popf
cld
fucomi
out
addb
adc
sub
fwait
mov
in
popa
jg
pop
clc
ljmp
movl
in
imul
ret
inc
pop
inc
xchg
shl
hlt
jmp
push
xchg
in
ja
fidivrl
das
push
xor
cmpsl
push
iret
pop
punpcklbw
mov
mov
rolb
icebp
and
mov
sub
scas
mov
push
scas
mov
push
pop
xchg
sarl
stos
repnz
or
dec
mov
fs
sbb
pop
ret
mov
ja
adc
adc
cmc
xor
cli
pop
push
inc
lods
aam
or
xor
cmp
fcoml
je
shll
and
mov
inc
xchg
dec
jle
cmp
mov
pop
xchg
or
inc
and
ss
pop
cmpsb
pop
xchg
jo
adcb
repnz
pop
sub
imul
push
bound
mov
je
in
in
sbb
scas
xchg
sbbl
aam
jo
jle
push
xchg
xchg
adc
xchg
add
and
nop
or
unpcklps
jne
xor
xor
insl
fidivrl
jmp
dec
andl
add
push
and
dec
add
out
push
dec
push
sub
mov
jbe
jecxz
add
cld
push
lret
jno
xlat
mov
movsl
xor
int3
fnstenv
fnstsw
mov
xor
mov
rcr
insl
and
ljmp
iret
jae
and
push
xor
lfs
add
cld
icebp
lcall
xchg
add
loope
clc
test
push
cli
sbb
jo
jne
add
ret
dec
pop
sbb
sbb
sub
ret
pop
test
iret
insl
std
jbe
and
lret
cmpsl
push
mov
movsl
dec
movsb
call
ret
xorl
rorb
pop
xor
divb
or
mov
cmp
iret
xor
int3
mov
out
pop
test
mov
int
fwait
xchg
pop
stos
gs
sahf
push
fxch
adc
loopne
sbbl
xchg
push
jb
and
data16
pop
dec
xchg
mov
cmp
call
dec
sbb
les
std
lds
add
inc
lahf
dec
das
fisubl
imul
lds
pop
insb
cld
fs
cmp
and
add
stos
mov
push
and
mov
jmp
rclw
mov
ret
les
lret
pop
add
mov
out
ret
jae
cs
jmp
stos
cli
mov
outsb
movsl
cmp
xchg
pusha
fidivrl
subb
jnp
sti
mov
jl
pusha
sbb
or
je
and
popa
imul
imul
into
jmp
jbe
cmp
sti
aas
adc
lret
mov
mov
jo
mov
inc
decb
jb
xchg
adc
insl
sbb
gs
enter
or
out
data16
push
pop
adc
cmpsl
adc
push
cld
push
pop
cmpsb
mov
imul
xor
and
mov
stc
sub
int3
add
mov
cmp
or
add
leave
xchg
jg
push
mov
jl
dec
and
xchg
leave
fnstcw
sub
jns
aas
jl
cld
ja
mov
sti
jecxz
or
xchg
data16
fnsave
xchg
negb
add
xchg
jns
sar
enter
cmp
xchg
mov
jle
sti
ds
mov
or
sub
fs
xorl
lods
in
pushf
loope
cli
push
cwtl
in
xchg
nop
pop
test
fisubl
xor
int
adcb
out
data16
sarb
fxam
mov
out
popa
xor
repnz
ljmp
cmp
pop
mov
cmp
js
shr
stc
stos
lock
test
jns
pop
xchg
sbb
or
loop
test
jno
stc
fwait
sbb
cmc
imul
lret
subb
jmp
dec
and
mov
lahf
sub
xor
loopne
orl
sbb
lret
xchg
and
jb
mov
out
imul
cmp
mov
cs
xor
push
pusha
test
mov
jbe
push
es
inc
jne
pop
fnsave
push
pop
aam
push
jge
xorb
push
lret
ret
push
lret
and
jo
sbb
xor
sbb
mov
or
lds
outsl
sarl
jnp
pop
fcompl
mov
add
inc
int3
cmpsl
sub
mov
jbe
and
cltd
sarl
push
mov
xchg
mov
add
psadbw
add
stc
jmp
shlb
inc
sbb
cmpsl
ss
add
movsb
ss
loope
inc
cmpsl
insb
js
inc
dec
into
sub
push
out
adc
rorl
and
jb
lret
push
out
cmp
repnz
xor
add
out
cmp
mov
ret
xchg
push
imul
fildll
jge
or
and
sbb
adc
int3
jae
cmpsl
mov
xor
clc
xor
cwtl
int
and
fsubrs
mov
mov
test
int
sarl
pusha
or
cld
pop
out
mov
jmp
leave
xor
sbb
dec
or
pop
or
push
pop
add
in
pop
or
clc
lock
cmp
lea
movsl
inc
lds
mov
lcall
jmp
lret
mov
and
iret
stc
gs
inc
lcall
testb
in
ds
xor
and
xlat
js
lret
add
int3
dec
sbb
dec
inc
lods
into
out
cwtl
xchg
test
mov
enter
inc
fs
mov
out
sahf
jo
sbb
jge
data16
or
push
add
cli
enter
mov
fiadds
mov
jecxz
rcrl
je
out
push
rcl
xor
loopne
dec
xor
scas
icebp
mov
sar
imull
outsb
fldcw
sbb
sub
popa
push
movsl
mov
mov
mov
sbbl
call
loop
ss
mov
cmp
adc
sbbl
movsb
push
cli
loope
addr16
addl
add
insb
or
push
stc
push
nop
adc
push
cmp
test
jae
in
add
ss
cmpsl
xor
pushf
mov
leave
arpl
sbb
mov
add
jecxz
stos
mov
sbb
xchg
and
pop
bound
nop
xchg
out
lods
cmc
xchg
jp
movsl
scas
or
jl
ljmp
add
stc
and
and
push
dec
and
inc
jo
mov
add
aad
xor
addr16
shl
dec
xchg
adc
std
mov
aam
jg
xor
js
sub
std
sub
insb
sub
push
sub
mov
in
pop
out
pop
ficoms
cmpsb
adc
filds
xchg
sar
scas
sub
arpl
jns
push
outsl
out
sub
ds
xlat
cmc
cmp
inc
pop
arpl
lea
jbe
lcall
enter
jle
mov
into
flds
ds
out
cmp
out
mov
xchg
push
mov
fnstcw
out
ljmp
jae
ds
sar
and
lock
les
push
popf
aaa
xchg
inc
cmp
inc
lcall
mov
and
xchg
sbb
enter
inc
aaa
bound
push
pop
xor
das
cmc
sbb
scas
jl
or
aaa
ret
inc
jmp
test
test
and
ficoml
ljmp
rcll
lret
xchg
pop
cmpsl
jle
jns
add
or
rcrb
mov
fwait
mov
or
lock
ss
push
imul
xchg
rorb
lret
ficoml
mov
mov
jnp
pshufw
lahf
xchg
sahf
icebp
jecxz
pushf
ds
out
and
add
cmp
pop
call
mov
int3
fsts
pushf
mov
xchg
hlt
fwait
in
insl
jno
popa
pop
loop
push
cmp
int
adc
inc
inc
int
out
out
push
nop
int3
xor
out
push
loop
push
or
mov
sub
push
mov
add
xchg
aam
push
inc
sub
sbb
pop
cmp
and
sbb
sub
test
dec
aas
mov
xor
in
dec
xor
std
jno
arpl
inc
lahf
sbb
lock
jns
and
gs
imul
dec
out
mov
cwtl
pop
mov
jnp
sub
fldt
stos
lods
cmpsb
fdivl
lods
cli
sbb
mov
bound
push
push
cmp
lods
xchg
jp
aad
addr16
and
in
inc
mov
xchg
jl
inc
inc
test
test
shrl
adc
pop
pop
aas
aas
sbb
insl
sbb
push
mov
call
dec
es
lds
leave
add
adc
dec
sbb
dec
cld
xlat
xchg
xor
inc
xor
or
push
add
lods
mov
insl
mov
mov
xor
ds
inc
call
mov
cmpsl
les
pop
popa
stos
push
loop
pop
icebp
or
cmp
orb
mov
jo
lock
xchg
xor
cmpsl
xchg
arpl
mov
sbb
add
pop
cltd
cmp
lahf
jno
loope
popf
pusha
mov
js
inc
out
xlat
inc
add
enter
adc
or
pop
cs
outsb
clc
xchg
cs
or
inc
ret
aad
fs
into
daa
loopne
loop
adc
mov
sarl
jmp
jo
push
cmpsl
std
pushf
mov
and
pop
mov
in
sti
sbbb
loopne
and
push
mov
out
pop
lret
dec
lcall
dec
insb
push
jmp
iret
mov
add
jg
dec
pop
sub
push
rorl
pop
adc
dec
cmp
popa
xchg
out
ret
ret
xlat
daa
sub
and
add
jg
enter
add
cwtl
cmp
xor
sbb
push
cmp
je
std
xchg
lods
inc
jge
push
jns
lret
jg
adc
enter
fldcw
mov
mov
lock
and
loope
out
mov
cmp
jo
rolb
scas
cmc
pusha
pop
fdivs
and
push
fwait
decb
xor
fbstp
imul
xchg
fstpt
and
fs
rol
frstor
push
or
push
fnstsw
ret
aam
decl
cmp
into
xchg
cmp
fcomi
mov
flds
xor
es
sbb
hlt
inc
pop
pop
dec
test
mov
lahf
mov
iret
daa
jbe
stos
and
or
pop
or
sub
adc
lds
test
mov
push
mov
and
mov
into
adc
push
popa
int
test
int3
mov
orb
xor
fwait
subl
push
fmuls
pushf
jle
or
push
aaa
xlat
fs
nop
adc
sahf
or
xchg
xor
into
push
mov
test
loopne
hlt
dec
inc
inc
enter
out
dec
test
jbe
add
mov
jo
mov
push
cmp
mov
or
ja
dec
std
in
ret
scas
add
adc
int3
mov
add
xchg
jecxz
divl
ljmp
or
dec
mov
mov
cld
test
cmpsl
xor
inc
insl
dec
inc
pop
add
inc
cld
mov
ret
push
pushl
and
fdivs
rcrb
add
pushf
mov
and
cld
pop
mov
lcall
xorl
jmp
sti
add
andl
enter
insb
cmpsb
pop
cmp
loopne
enter
fistpll
and
push
and
jmp
scas
fisttpll
cmc
inc
mov
lea
stos
int
lds
or
mov
bound
shrb
xor
push
adc
sahf
cmpsl
fisubrs
cmp
outsb
insl
sbb
sbb
testl
xlat
hlt
clc
ja
ds
mov
icebp
push
add
lods
out
gs
xchg
mov
or
shrl
push
cwtl
mov
rcll
mov
sub
out
pop
mov
fiadds
sub
mov
adc
pop
xor
out
jns
sub
fwait
push
push
cmp
stos
call
mov
and
addr16
pop
sahf
mov
decl
arpl
inc
add
aaa
add
push
fwait
mov
dec
das
outsl
and
jnp
xchg
mov
cmc
ds
adcl
dec
push
outsb
lahf
adc
mov
jle
xchg
repz
push
xchg
xlat
les
cli
lds
in
or
aaa
cmpsb
out
fs
loopne
dec
cmp
xchg
cmp
add
andl
or
sbb
jp
add
or
enter
add
or
inc
call
jg
lock
add
pop
mov
fmuls
gs
fildll
scas
jne
fldl
xor
dec
popf
jmp
jp
in
push
shl
out
adc
outsb
pop
aaa
cmp
jp
xlat
sub
outsb
out
and
imul
ja
in
or
adc
xor
cs
pop
andb
stos
mov
loop
dec
repz
xchg
or
jmp
ds
shlb
mov
mov
sbb
mov
fmul
lods
imul
insb
aam
lea
dec
outsl
xchg
cmp
jb
dec
cmp
aad
dec
fistps
and
stos
in
loop
sbb
mov
cli
jns
loope
outsl
mov
mov
jge
xchg
dec
and
lods
loop
cmp
arpl
stos
lock
or
jns
pushf
jmp
push
lahf
iret
sti
mov
inc
mov
cmp
data16
dec
insb
addr16
fyl2x
or
shlb
mov
xlat
cwtl
and
inc
xor
jo
cmpsb
cmp
jge
pop
mov
loopne
imul
push
cmp
dec
and
inc
mov
dec
fcoms
gs
test
fmul
and
pop
sbb
sbb
or
std
push
cmp
add
push
push
xchg
dec
shrb
arpl
daa
js
icebp
pusha
les
xlat
xchg
and
lods
stos
incb
pop
andl
pop
and
in
gs
dec
out
or
ret
fisubs
dec
cmpb
xchg
adc
mov
dec
adc
sbb
xor
inc
icebp
mov
jo
ret
mov
lods
es
mov
jnp
in
aad
and
xchg
xchg
sbb
pop
fiadds
push
sahf
mov
ds
or
jmp
inc
je
inc
jbe
xchg
or
pop
cmc
mov
jl
into
fidivs
aam
int
mov
mov
fwait
mov
in
int3
push
jmp
loop
jno
mov
test
jo
clc
aas
repnz
popf
sub
jnp
jnp
fistpl
lahf
mov
mov
jp
add
dec
rolb
jne
sar
aam
pushf
insb
sub
shr
mov
imul
cmp
xchg
shlb
addr16
loope
jl
stc
test
das
cmp
lret
dec
fdivrs
lea
roll
and
fsts
ret
loope
mov
rcrl
adc
dec
insl
push
out
test
mov
repnz
mov
cmp
mov
mov
call
or
pop
or
xchg
sbb
sbb
jg
push
mov
add
das
sbb
sbb
lea
push
fisttpl
pop
dec
ss
int3
fcmovnb
sbb
xchg
adc
jne
pop
in
jno
cmc
pop
xlat
or
xchg
mov
lods
cli
mov
mov
testb
add
mov
je
jecxz
cmp
adc
mov
lret
daa
clc
out
mov
jecxz
shrl
jl
lds
test
fisubl
cmp
push
cmp
jg
dec
xchg
pop
stc
das
jmp
pop
cmp
sub
sbb
or
jns
imul
cltd
dec
mov
das
jmp
pop
cmp
sub
sbb
or
jns
imul
mov
pop
clc
das
in
push
enter
sub
adc
or
mov
mov
stos
mov
aas
push
mov
or
cmpsb
divl
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jge
insl
insb
pop
pop
dec
dec
xor
dec
js
push
in
fstp
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
je
cld
in
in
test
shrb
mov
insl
insb
pop
pop
dec
dec
cmp
sbb
or
cld
in
iret
scas
scas
jecxz
aad
into
sti
shl
jecxz
xor
insl
and
jge
sub
xchg
pop
aaa
cltd
adc
stc
mov
shl
das
shl
test
ror
cmp
test
or
dec
test
mov
jae
test
xchg
lds
xor
lods
pusha
out
jecxz
std
stos
xchg
test
lods
clc
sbb
cmp
insb
dec
sub
cmp
jbe
repnz
add
adc
jmp
inc
mov
lea
or
roll
or
in
add
mov
xor
scas
lods
jge
cwtl
jb
stc
push
loope
dec
lods
or
cmp
xchg
in
xchg
cmpl
insb
pop
pop
dec
dec
cmp
sbb
or
cld
in
in
fstp
int
mov
pushf
in
js
sub
push
pop
fs
js
dec
pop
mov
mov
leave
fxam
fld
jle
pop
or
push
inc
pusha
sbb
mov
xchg
pushf
sar
lods
out
lret
adc
or
cs
sub
sbb
or
cld
in
in
fstp
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
or
cld
in
in
fstp
int
mov
pushf
lea
mov
mov
dec
add
xchg
adc
lahf
test
pop
es
adc
div
pusha
das
jmp
lahf
inc
push
ja
jne
sub
mov
or
sub
cmp
dec
movsl
inc
cmp
rol
lock
xor
jle
sbb
mov
movsl
inc
outsb
mov
sub
in
gs
jo
xchg
jns
out
call
sti
fidivs
insb
loopne
nop
sub
imul
mov
sub
out
pop
stc
mov
pop
repz
push
call
jmp
push
icebp
sbb
fidivs
mov
inc
adc
cmp
hlt
test
mov
mov
stos
cwtl
push
jmp
or
lods
in
push
jl
into
dec
sbb
das
cmp
cmp
xchg
negl
mov
mov
xchg
jb
popa
mov
inc
es
pushf
xchg
or
pop
mov
mov
outsb
addr16
jp
movsb
adc
mov
xchg
sahf
arpl
jbe
jbe
or
lahf
dec
outsl
inc
jbe
pop
cmpsb
dec
imul
push
adc
add
addr16
fsub
cmp
stos
jno
adc
adc
std
push
out
dec
mov
lret
dec
aad
push
bound
push
xchg
mov
sub
ja
lret
iret
jge
rcrb
or
jle
fldcw
daa
cmp
test
sub
cmpl
add
es
insb
out
arpl
dec
popf
sbb
insb
bound
aad
mov
cmp
jl
xlat
cli
pop
in
call
scas
inc
daa
cltd
xchg
filds
fdivrp
stos
add
sahf
inc
pop
mov
push
iret
mov
lods
jp
mov
push
repnz
sbb
mov
mov
or
insl
adc
addr16
mov
sub
popa
test
xchg
clc
push
cwtl
je
in
and
outsb
mov
push
mov
lcall
fidivrl
push
ret
and
add
pusha
cmp
int3
aad
jb
dec
in
or
sbb
sbb
and
jne
lods
enter
or
jecxz
pop
adc
fwait
push
adc
cmp
pop
push
flds
jno
push
sbb
into
in
push
cmpsb
mov
push
fcmovb
aaa
xor
sub
dec
jno
test
cmp
enter
add
jg
lahf
cs
inc
ljmp
cmp
shrl
leave
imul
insb
push
dec
or
inc
outsl
cwtl
add
insb
push
imul
pop
mov
or
es
cmp
ja
sbb
ljmp
pop
lret
test
push
lds
ja
icebp
das
stos
push
push
ret
js
mov
mov
xor
xchg
or
adc
mov
xchg
dec
cmp
cmpsb
push
dec
mov
out
jmp
mov
push
movsl
mull
xor
mov
xlat
cmp
xchg
aaa
push
xchg
outsl
loopne
push
test
pop
push
push
xchg
cmc
aas
out
inc
imul
popf
mov
gs
push
out
sbb
mov
cmp
ss
or
and
je
sbb
jge
mov
data16
fs
dec
addl
xchg
push
push
leave
ljmp
inc
lea
out
dec
sbb
pop
iret
add
jle
sbb
loopne
faddp
jbe
lahf
les
iret
jns
sub
xchg
jp
enter
fstps
or
mov
lahf
ret
push
xchg
mull
setae
mov
adc
pop
pushf
lret
dec
inc
push
loopne
xchg
xor
pushf
xchg
cmp
test
out
rclb
dec
out
aaa
les
dec
xlat
sbb
adc
jne
xchg
push
jmp
dec
xchg
fwait
pop
xchg
icebp
out
fs
pop
pop
jg
enter
mov
je
sbb
mov
in
orl
xor
jmp
cmp
sbb
dec
lock
dec
add
pop
jno
mov
insb
je
xor
mov
xor
sar
out
mov
sub
call
into
popf
mov
mov
jns
adc
das
mov
inc
mov
mov
adc
iret
jo
xchg
mov
cmp
xor
jnp
repz
stc
stos
jmp
cmp
outsl
cltd
pop
cli
cltd
outsl
ret
jno
loopne
mov
movsl
shrl
dec
and
mov
ljmp
pop
inc
popl
cmc
cs
or
pop
idivb
pop
movsl
std
aaa
mov
xlat
data16
add
xchg
jmp
push
add
add
clc
sbb
lret
add
push
leave
stc
pop
cmp
incl
mov
pusha
or
and
jp
mov
mov
cld
add
adc
in
jecxz
push
loopne
mov
enter
xor
push
int
xor
adc
lock
aad
cmpsl
mov
xchg
pop
imul
jo
jge
aas
lret
jmp
mov
je
lcall
pop
sub
add
inc
xor
xor
push
jns
xor
lock
enter
cli
jmp
dec
and
xor
xchg
rorb
or
das
cli
sbb
push
roll
in
or
jl
xchg
je
scas
xor
dec
cld
hlt
lahf
shr
dec
shll
ja
or
dec
or
repnz
fsubrl
outsb
data16
and
mov
vcmpps
loop
flds
xor
lock
in
pop
data16
push
and
mov
or
in
cmp
out
andb
dec
inc
lods
int
cmc
shll
std
pop
xchg
mov
pushf
add
push
in
in
leave
or
sbb
loop
inc
fcoms
push
out
xchg
mov
push
xchg
adc
inc
and
test
push
rorb
sbb
push
test
jecxz
hlt
mov
adc
inc
pop
aaa
mov
push
mov
jnp
je
and
fistps
mov
pop
push
pop
jnp
push
mov
jbe
lret
jns
mov
cmc
adc
and
xorb
sub
jne
shlb
insb
icebp
leave
decb
xchg
mov
jmp
and
and
lods
mov
sbb
cltd
out
mov
fisubrl
decb
not
fiaddl
mov
jnp
lret
inc
pop
js
sbb
mov
push
jb
mov
add
or
fcompl
enter
fsubs
xchg
push
out
std
outsb
mov
and
mov
stos
insb
loopne
bound
adcl
in
inc
sub
xchg
in
xor
cmp
ljmp
sbb
push
jg
nop
cli
xchg
mov
xchg
pop
loop
pop
aas
mov
cmpsb
cmpsl
test
add
xlat
negb
and
lret
mov
pop
lahf
sub
add
aas
test
push
into
fsubl
lret
push
mov
ljmp
clc
cli
out
mov
fidivs
ljmp
jge
addb
mov
mov
add
cmp
and
add
xor
pop
xchg
fs
in
test
mov
push
or
push
push
insb
inc
mov
push
push
push
adc
sbb
test
lea
mov
jne
mov
lods
pop
mov
test
jns
and
lods
lock
and
xor
push
dec
push
jge
jno
ror
and
imul
xchg
pop
mov
push
jge
cmp
loope
or
cmpxchg
ljmp
loope
cwtl
in
xchg
data16
shlb
cltd
xchg
mov
or
aad
xchg
cld
ror
out
push
push
mov
sarl
out
mov
dec
xchg
mov
push
jo
xchg
daa
rcrl
lea
or
mov
test
lea
push
dec
out
mov
push
dec
aas
icebp
cmp
xor
cmp
std
sub
push
and
lcall
mov
cmp
mov
push
insb
jo
pop
lea
in
and
or
add
adc
shrl
push
inc
lods
cmp
mov
and
mov
sti
sbb
lods
sub
neg
gs
cld
or
scas
lea
leave
fidivrl
movsb
sar
and
insb
push
ficompl
stc
call
ss
jp
xor
imul
aas
cmp
jl
mov
test
imul
push
jae
mov
lcall
cli
pop
bound
ret
movsb
mov
fnstsw
test
out
sub
mov
dec
push
nop
pop
int
aaa
lret
adc
jecxz
and
xlat
in
and
push
ja
hlt
rcrb
inc
fisubrl
clc
imul
jp
sti
lods
pop
inc
inc
adc
pusha
mov
out
add
cmp
cld
movb
adc
mov
sbb
imul
int
push
rolb
repnz
push
lds
mov
jp
into
das
mov
lea
mov
mov
in
call
xorb
jae
adc
mov
fmuls
mov
addr16
push
push
outsb
popf
fistpl
xor
sahf
les
or
lcall
jno
mov
mov
push
mov
cmp
insb
jbe
or
sbb
jecxz
mov
in
es
pop
lret
sbb
adc
inc
pop
fldcw
cmp
mov
lds
jns
xchg
sahf
sbb
push
pop
pop
not
adc
inc
xchg
popw
mov
andl
xchg
xchg
push
fcoml
mov
pop
adc
mov
int3
mov
jbe
ffree
test
int3
sarl
adc
inc
iret
insl
sahf
rol
add
in
sub
mov
clc
xchg
sub
ss
jle
mov
sub
jne
fstpl
nop
mov
cwtl
pop
fstpl
enterw
inc
inc
cwtl
push
adc
rcll
push
push
adc
scas
adc
jns
push
pop
pop
or
push
push
pop
popf
fadd
mov
pop
testl
cmpsl
mov
fcoml
cmpsb
sar
xchg
or
cmp
jecxz
xor
fdivrs
enter
xor
sbb
repz
pop
scas
imul
fwait
xchg
dec
or
mov
mov
movsb
hlt
and
lcall
push
sbb
ret
rcl
inc
insl
jge
aas
fildll
insl
lods
loopne
push
popf
mov
ret
inc
sahf
dec
mov
xchg
mov
icebp
out
ljmp
ja
or
push
push
mov
and
pusha
in
add
jge
dec
or
loop
mov
sbb
xchg
lods
sti
idivb
xor
lea
or
popf
xchg
pop
mov
bound
enter
sbb
add
mov
jb
sub
lret
mov
sub
add
neg
sbb
or
xchg
or
in
push
pop
shlb
cwtl
inc
aam
mov
xor
cmp
jnp
sahf
les
shlb
adc
push
rolb
mov
sub
sbb
add
or
popf
and
sub
daa
mov
clc
mov
push
xchg
mov
sub
jo
add
inc
lea
shrb
loopne
xchg
rcr
mov
icebp
sub
sbb
popf
fbld
adc
psubq
jmp
mov
inc
sub
lock
push
pop
scas
push
sbb
jp
enter
push
sbb
xchg
stos
mov
loop
fucomi
cmpsb
xor
and
ljmp
pop
je
inc
fiaddl
out
lds
rcrl
inc
gs
push
ja
mov
adc
fsubrl
out
lahf
or
lods
dec
mov
pop
cmp
and
mov
repz
sbb
bound
into
mov
dec
xor
fidivl
stos
sbb
punpcklbw
pusha
push
popf
sub
pop
hlt
sbb
pop
pop
andb
dec
push
iret
pop
adc
push
sub
xchg
dec
lret
aam
jns
ljmp
push
ds
sarl
or
ss
mov
pop
scas
push
push
add
fdivr
sbb
out
cmp
rcl
push
dec
cli
lds
or
loope
mov
sbb
incb
push
aas
or
scas
inc
adc
dec
inc
sub
es
lret
fiaddl
jle
adc
in
jp
loop
cltd
cmp
dec
ds
pop
aas
dec
fisubl
iret
sub
and
jb
mov
subl
daa
arpl
sbb
lret
push
ds
loope
in
push
out
mov
lret
pop
adc
mov
fxch
mov
xchg
mov
jge
popf
mov
fimull
scas
push
fsubl
push
sbb
fbld
pop
xor
lea
dec
cmp
jl
jp
pop
mov
sti
repnz
xchg
xchg
fisttpl
sbb
cltd
lods
outsl
inc
fdivrs
ja
mov
out
aad
mov
test
test
xchg
cli
leave
or
fldl
int
mov
mov
movsb
jb
jg
sbb
push
loop
cmp
test
pushf
mov
jno
push
cld
out
out
das
out
inc
lahf
fsubl
pop
lock
add
stos
adc
mov
in
sub
dec
mov
xchg
loop
mov
hlt
je
sbb
or
sti
scas
stc
inc
fwait
shlb
jge
out
aam
sub
inc
scas
xor
pop
idivb
mov
imul
cmp
xchg
push
scas
jnp
sub
aad
stc
adc
sarb
out
xchg
sub
sbb
imul
jge
mov
push
cld
sti
xor
ss
or
adcb
pop
sbb
pop
mov
and
data16
lods
test
sbb
or
and
in
cmp
outsl
cmp
daa
jnp
pop
aad
mov
lds
out
and
push
or
or
adc
pop
cltd
cmc
push
arpl
out
adcb
sub
insb
dec
in
jl
push
decl
mov
arpl
pop
enter
aam
lahf
add
mov
loopne
decb
pushf
xchg
scas
stos
and
mov
gs
addl
mov
or
inc
jne
cmc
test
mov
ljmp
dec
in
mov
stos
push
stos
mov
movsb
data16
rclb
scas
mov
or
push
mov
gs
adc
cmp
psubsw
gs
psrlq
out
or
jle
jl
sub
int
in
aas
pop
xor
jecxz
scas
push
popl
push
add
repnz
mov
push
cltd
add
cwtl
jno
adc
out
inc
test
repnz
pop
xchg
dec
lds
mov
sbb
arpl
push
ss
call
dec
imul
leave
mov
sub
xchg
bound
in
movsl
sbb
or
in
mov
mov
lret
sbbl
jns
cltd
jge
sub
cmc
repz
mov
inc
outsl
lods
mov
dec
vcvtps2dq
xor
xor
movsb
aam
out
inc
pop
and
inc
adc
cmpsb
inc
dec
mov
test
or
loop
bound
dec
clc
movsl
and
sbb
cmp
arpl
sbb
lods
sbb
mov
mov
xor
or
mov
add
jb
mov
repz
push
adc
and
test
mov
push
sbb
xor
sub
cmp
std
xchg
js
mov
xor
and
mov
popa
cmpsl
shrb
lret
inc
cwtl
jmp
cli
push
mov
imulb
cmc
repz
jae
pop
cld
lcall
push
or
and
pop
jne
mov
and
adc
pop
sub
stos
push
cmp
xor
push
xor
pop
pop
push
pop
test
xchg
jmp
pop
repz
push
pop
pop
mov
bound
dec
mov
jne
mov
aas
inc
push
sub
xchg
test
push
xchg
test
daa
or
pop
or
jmp
jb
dec
testl
ljmp
mov
xchg
out
inc
movsb
in
xor
shll
cmp
pop
bound
in
jecxz
out
test
mov
jge
test
call
cmp
pop
shrb
inc
leave
push
outsb
lods
rcl
idiv
xor
pop
push
incl
push
cmp
in
pusha
jl
sbb
into
int3
xor
jnp
cmp
cmpl
les
push
clc
stc
push
jp
or
fwait
jo
add
sbb
data16
mov
into
xor
test
or
mov
or
cs
cmp
sub
mov
std
lods
mov
push
push
xchg
jbe
shl
movsl
or
push
int3
int
outsl
ret
mov
fsubl
scas
insb
inc
cmp
hlt
fldcw
pop
push
xor
lret
cmp
lcall
push
adc
pop
dec
sbb
cli
repnz
cmp
push
mov
mov
js
and
addr16
movsb
push
cmp
cld
movsl
and
cmp
push
je
push
cmp
aam
out
loopne
es
or
mov
add
mov
jbe
mov
push
ret
mov
dec
inc
xchg
mov
jmp
mov
je
test
mov
mov
mov
jmp
and
pop
mov
xchg
mov
call
inc
push
ret
xor
fwait
jge
inc
jb
sub
mov
clc
in
mov
icebp
pop
imul
add
scas
arpl
cmp
xchg
cmc
cmp
sbb
cmpsl
gs
repz
ja
sarl
jo
pop
mov
mov
hlt
shlb
inc
test
fildll
dec
aas
cmpsb
ljmp
xor
call
or
adc
pop
lret
cmpl
xchg
inc
jae
ret
int3
mov
ss
pop
mov
cld
or
pop
cld
inc
xor
out
xchg
sub
aam
inc
in
jp
inc
call
xlat
mov
aad
subl
jge
enter
stos
mov
lret
pop
outsl
mov
adc
rcrb
sbb
cld
jmp
pop
or
sbb
ss
push
mov
xor
sarl
sub
xchg
test
jge
jnp
jne
frstor
and
mov
and
and
rcll
enter
adc
cs
inc
hlt
add
mov
jmp
xchg
pushf
bound
cmpsl
daa
mov
mov
data16
test
add
push
fnstenv
xor
add
adc
dec
std
mov
sahf
xor
shr
lea
into
out
imul
sbb
adc
fisubrs
add
loopne
xchg
out
push
inc
repnz
lret
orl
iret
cmp
add
into
test
mov
popa
mull
add
inc
lock
and
pop
cmp
xchg
and
cmpl
fldl2e
push
inc
adc
insb
in
jmp
pop
xchg
and
mov
xor
mov
imull
aaa
stos
sbb
movsb
pop
gs
flds
insb
push
mov
fidivrs
sbb
cli
mov
sbb
sahf
imul
push
xchg
cs
push
js
repnz
sti
jmp
test
ret
mov
add
and
dec
jno
xchg
xor
ja
xchg
xor
jnp
pusha
aad
rorb
subb
or
xchg
dec
jns
pop
mov
and
inc
in
add
sub
jb
hlt
sahf
jp
addr16
push
lea
iret
inc
outsb
push
mov
cmp
and
fiadds
push
movsl
rcrl
dec
lcall
dec
xchg
jmp
fisubl
hlt
cli
adc
repnz
lock
mov
mov
cmp
ja
push
ljmp
std
xchg
adc
inc
mov
pop
cmp
cld
and
or
and
sub
cltd
movsl
xchg
mov
sub
inc
or
jae
sbb
mov
jnp
inc
xchg
mov
into
inc
mov
repz
push
or
popf
ret
std
push
pop
xor
adc
sub
inc
fisubrl
jae
je
je
lret
enter
in
mov
mov
imul
xchg
scas
shll
adc
add
dec
shl
test
outsl
lret
jmp
stos
jge
ds
push
lock
pusha
jns
jecxz
jb
pop
iret
in
push
jae
or
mov
or
and
xchg
mov
sub
negb
mov
aam
adc
push
loope
push
or
add
mov
cld
mov
das
cli
sbb
insl
xlat
mov
fwait
sti
add
xor
inc
add
cmp
je
jl
jmp
test
cltd
popa
int3
sub
scas
insb
or
cmp
sbb
or
cld
in
in
fstp
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
or
cld
in
in
fstp
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
or
cld
in
in
fstp
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
or
cld
in
inc
ja
int
lret
push
bound
jae
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jge
aaa
lods
pop
pushf
pop
mov
add
addr16
int3
loop
mov
test
mov
out
mov
pop
xlat
dec
xor
mov
ja
inc
fcoml
lods
xor
or
push
imulb
pop
xlat
dec
movsl
cs
test
xchg
jle
outsb
hlt
pop
les
cmpsl
cmp
por
jns
xor
and
aaa
fmull
jns
outsl
xor
sub
pop
out
popa
dec
sbb
xchg
test
out
mov
mov
fsubl
and
sarb
lcall
lods
pop
mov
and
dec
scas
aad
sub
push
out
dec
xchg
movsl
cmp
sub
jbe
repz
mov
insl
pop
adc
mul
daa
push
out
pushf
filds
cld
scas
test
dec
xchg
rolb
inc
movsb
jmp
cmp
push
pop
arpl
aaa
cmp
cltd
push
aam
movsb
scas
rorb
in
mov
jle
jl
comiss
movl
push
fidivl
dec
cmpsl
fnstsw
push
dec
inc
js
xchg
repz
push
out
daa
pop
xlat
dec
out
aaa
mov
ja
insl
in
inc
fmull
mov
add
out
je
inc
into
dec
push
mov
jae
add
sbb
rcll
sub
sbb
imul
aad
lds
adc
mov
movsl
dec
mov
ret
push
orb
mov
xlat
cmp
add
leave
pop
iret
ja
inc
fcoml
cmpsl
cmp
sub
sbb
or
jl
insb
pop
xlat
dec
daa
mov
pop
mov
ja
inc
fcoml
cmpsl
cmp
sub
sbb
or
jl
insb
pop
xlat
dec
daa
mov
jg
dec
ja
jb
adc
rorl
add
pop
pop
lea
lret
jae
shll
jp
rcll
pop
inc
add
stos
dec
dec
or
ja
mov
fsubrl
jno
jmp
lcall
in
pop
xor
fisttpl
test
fsub
cli
outsl
add
mov
clc
cmp
sarb
sub
lahf
mov
xor
fisttpll
xor
loope
pop
stc
insb
ds
dec
pusha
adc
or
lock
ljmp
popa
adc
push
pop
sti
outsb
cmc
adc
in
lods
dec
test
pop
stos
xchg
test
xchg
shl
fiaddl
aad
and
ret
mov
jo
fbld
push
seta
rcr
cmp
enter
sbb
inc
sar
mov
xor
mov
cli
fistl
inc
jg
rcr
mov
out
ja
xchg
push
jnp
ja
shll
aad
fs
xchg
cmpsb
push
jl
mov
repz
lahf
imul
and
xchg
push
lcall
lahf
nop
and
adc
imulb
mov
lahf
push
inc
dec
push
dec
popa
icebp
push
dec
stos
mov
dec
sbb
sbb
fdivl
jl,pt
mov
jnp
dec
lret
jae
int
into
xor
repz
push
fmuls
out
pop
dec
lret
mov
movsl
adc
lret
xchg
icebp
mov
test
pop
xchg
pop
imul
mov
xchg
mov
movsl
dec
addr16
push
or
icebp
dec
mov
sub
das
add
in
lods
cmpsl
je
int
pop
call
imul
cmpb
sub
cmpsl
inc
std
aaa
loope
bnd
test
aam
or
dec
cmp
idiv
scas
and
out
ja
pop
cmp
jne
mov
xchg
std
ficomps
sbb
sahf
jmp
cmp
sahf
ljmp
out
js
lods
ds
lea
mov
sti
daa
sbb
movsb
int3
rcr
add
mov
pushf
std
add
add
cmp
test
in
mov
leave
xchg
rcll
mov
jle
sub
outsl
or
nop
insb
aas
int3
mov
push
cmp
add
sub
cmp
add
dec
xlat
insl
ret
cmp
mov
push
xor
dec
das
or
jmp
cwtl
cmp
and
rol
es
adc
push
divb
icebp
shlb
outsb
cltd
insl
fisttps
test
jno
lods
std
sub
enter
jne
sti
fidivs
sub
adc
inc
sbb
pop
aad
mov
sub
addb
jns
mov
in
clc
inc
test
cmp
rcrl
repnz
sbb
pop
mov
inc
pop
orb
sub
add
push
dec
sub
cmp
pop
dec
and
or
outsl
push
fs
mov
inc
xchg
sub
jbe
int3
data16
jno
loop
xor
xchg
or
loopne
ret
jp
call
cmc
movsl
cmp
fsub
sbb
fcom
xchg
mov
lds
out
and
mov
xchg
xchg
movsl
mov
cmp
andl
mov
pop
loope
hlt
jg
adc
imul
jnp
lret
xchg
or
inc
adc
test
add
mov
sbbb
stc
jno
ds
inc
or
jg
add
stc
mov
imul
loopne
xchg
cmc
int3
cltd
bound
cmc
sbb
mov
fidivl
ficoms
iret
aaa
xchg
cmp
negb
ret
lock
addr16
sbb
mov
int
adc
dec
shll
mov
in
push
movsl
scas
fstl
jae
enter
cmp
int
mov
pop
mov
shll
adc
sahf
pop
dec
loope
sub
loopne
shl
decb
leave
or
sub
lods
xchg
outsb
fisubs
sbb
inc
and
loopne
mov
jbe
in
jnp
aas
xor
imull
adc
clc
push
aad
sub
push
cmpsl
insb
int
fidivl
aas
xchg
iret
push
pushf
xor
inc
ljmp
push
push
cs
or
cltd
or
pushf
push
push
jb
repnz
sub
sarl
popa
call
push
cmp
movsl
ljmp
repnz
dec
mov
push
add
aad
out
xchg
nop
es
xchg
inc
rcr
xlat
int
divb
pusha
sbb
inc
inc
std
add
pusha
jbe
enter
adc
mov
add
mov
mov
add
mov
out
addb
sbb
lods
xor
xchg
inc
sbb
cmp
lcall
dec
fistpl
test
pop
mov
and
push
add
jne
ret
pop
outsb
inc
push
adc
dec
dec
jge
lcall
outsb
push
cmpsb
aas
lret
imul
scas
mov
dec
stos
adc
push
stos
xchg
push
jl
call
clc
xchg
lcall
push
loop
sub
pop
ficompl
das
xor
pop
mov
mov
in
roll
dec
xchg
imul
sti
jecxz
aaa
pusha
or
mov
jno
jge
sbb
aam
jmp
pop
aas
cmp
cld
imul
dec
xor
aam
or
mov
pusha
enter
lods
adc
icebp
stos
mov
and
push
sbb
adc
mov
ret
push
addl
mov
fs
daa
mov
jno
jns
mov
aad
jbe
cli
sbb
add
push
push
enter
xchg
arpl
icebp
jbe
lcall
or
cmp
sbb
dec
call
and
test
outsl
jae
cli
lea
adc
lods
lret
sub
aas
or
movsb
mov
lret
adc
int
xor
leave
stos
je
pop
or
pop
cli
adc
fwait
dec
push
inc
xor
mov
rol
push
inc
and
lds
out
adc
jle
js
push
sub
insb
jns
pop
fstps
imul
adc
push
insb
daa
mov
leave
jb
lcall
or
sar
pusha
imul
and
xchg
fisubs
aas
mov
fdivs
dec
dec
and
xchg
das
add
loopne
pop
arpl
mov
xchg
push
hlt
dec
popf
cmp
push
cld
shrb
lahf
lock
cmp
jno
mov
cmc
out
int
add
adc
lahf
lock
adc
and
push
cmpsl
sbb
lea
mov
mov
sbb
inc
or
hlt
push
repnz
mov
pusha
test
insb
cltd
stos
cmp
mov
jg
ss
mov
mov
cmpl
push
loope
and
jno
dec
sbb
lea
adcl
les
pushf
xchg
les
cmp
dec
scas
jg
push
addr16
jb
rcll
iret
cltd
mov
xchg
cld
fistpll
cmp
cmp
loopne
in
imull
rorb
cmp
inc
push
cli
cli
bound
push
or
sahf
dec
fcompl
add
inc
add
xor
repnz
jg
sti
or
and
in
out
lret
cmp
sub
sbb
in
clc
xor
ds
leave
or
les
add
mov
shr
xor
mov
adc
push
loop
push
loop
sarl
push
or
dec
mov
xchg
sbb
das
loopne
cld
mov
xor
scas
adc
cmpsl
lahf
dec
js
nop
adc
dec
ret
rclb
pop
mov
adc
jne
lock
xor
jmp
test
shrb
ds
imul
sahf
imul
or
and
xorb
push
sub
mov
shll
sbb
and
daa
arpl
xchg
fildl
icebp
xchg
pushf
aad
sbb
adc
sub
xchg
gs
testl
sbb
aam
mov
mov
test
pop
push
cmp
mov
and
call
dec
cmpsl
add
jno
test
imul
iret
fadds
mov
sbb
ret
xor
cmp
xchg
fcoms
push
sbb
imulb
adc
jns
jp
or
mov
mov
and
inc
popa
es
mov
pop
dec
addr16
data16
pop
sub
jle
int
push
out
scas
enter
mov
out
jmp
jle
fists
adc
outsb
jecxz
xor
je
jno
pop
movsb
int
clc
cmp
inc
cs
imul
dec
jb
and
xchg
pop
ret
xor
xor
pop
pop
cmpsl
push
or
jno
and
mov
aaa
mov
xor
mov
mov
or
cmp
pusha
dec
mov
jae
cmp
pop
mov
adc
loopne
lret
rep
sar
cwtl
addr16
cmpsl
popf
jae
icebp
jno
sti
cmp
and
jle
jmp
mov
outsb
rcrb
sahf
and
xorl
les
loopne
and
pop
jp
inc
adc
jb
fnstsw
cli
scas
cmp
icebp
insb
je
fistpl
test
jno
in
loop
daa
push
pop
stc
test
mov
pop
sbb
pop
int
es
aam
fldcw
ret
pop
divb
aaa
add
daa
mov
sarb
iret
scas
loop
sbb
sti
adc
xchg
xor
inc
daa
mov
out
cmpsl
dec
sbb
es
ret
bound
push
cmp
add
xchg
lahf
aad
scas
push
out
inc
mov
idivl
out
sarl
or
ljmp
xor
cmovae
test
pop
sbb
dec
bound
mov
ja
mov
sbb
cltd
push
xchg
sub
lods
movsl
xor
testl
stc
hlt
mov
cmc
lods
cmp
out
inc
mov
clc
add
inc
xchg
dec
sub
inc
sub
jge
pop
mov
cmp
dec
fdivr
loopne
fwait
mov
jl
sbb
shll
loope
dec
pop
pop
rol
sahf
lods
arpl
rorl
or
in
xchg
inc
ljmp
les
or
fstp
xchg
lahf
ja
sbb
mov
mov
enter
aaa
pop
cld
inc
stc
cmp
daa
bound
xchg
xchg
dec
fstp
pop
or
pop
stos
mov
ficompl
xchg
jp
and
mov
adc
in
aad
bnd
loop
stos
or
insl
jno
movsb
sbb
sub
das
in
rorl
sbb
inc
mov
push
cmpsb
repz
clc
or
sub
mov
ror
pop
jg
push
imul
sub
sub
in
dec
imul
add
cmp
ljmp
add
ds
lcall
ret
sbb
js
sub
cmpsb
pop
in
xorps
ficoml
cs
insb
leave
mov
xchg
jge
push
jg
push
in
push
mov
test
add
rorb
push
push
bound
lea
aam
lcall
inc
pop
imul
add
lods
sbb
roll
sbb
push
filds
lock
iret
mov
in
fwait
lods
imul
dec
jg
mov
cs
aaa
inc
and
push
or
pushf
inc
cmpsb
push
xchg
je
decl
hlt
xor
bound
sbb
mov
cmpsb
mov
pop
imul
xchg
outsl
cmp
lds
push
lret
dec
js
pushf
gs
push
dec
mov
fnstcw
loopne
std
jmp
fistps
bound
adc
jae
inc
cltd
mov
adc
out
inc
sahf
push
mov
dec
xchg
loop
jp
adc
push
icebp
incl
test
test
add
jno
rorl
pop
test
sub
popa
adc
mov
aaa
sbb
mov
add
dec
lret
dec
aad
xchg
dec
jo
rolb
mov
dec
dec
pop
mov
xchg
rcll
fwait
cltd
xor
cmpsl
cmc
cmp
fsubrs
shll
shll
sbb
dec
ja
in
push
or
es
scas
test
push
scas
test
adc
dec
mov
out
jb
scas
dec
and
and
pusha
icebp
dec
xchg
out
lds
xchg
in
dec
pop
mov
pop
loopne
push
push
repz
call
ja
and
jae
in
push
mov
scas
shlb
dec
enter
jnp
and
test
and
les
in
mov
and
mov
inc
dec
mov
fistpl
jle
daa
jl
cmpb
clc
cli
inc
mov
mov
mov
sub
mov
mov
push
dec
mov
push
push
mul
ficoms
lea
add
test
faddl
in
inc
jge
ljmp
add
leave
dec
outsb
into
push
fstpt
jp
mov
jl
dec
xchg
dec
jmp
and
lock
add
jmp
movsb
movsb
and
mov
out
jl
pop
xorl
pop
inc
lods
and
pop
arpl
pop
imul
sbb
xchg
call
adc
jmp
jle
out
xor
aad
das
testb
js
pop
lahf
adc
xor
scas
jle
test
jb
rorl
sub
push
mov
mov
ja
and
xchg
pop
inc
cmc
stos
jb
outsl
iret
xchg
xor
cmc
dec
lea
cmp
lds
ret
inc
inc
inc
in
push
rorb
cmc
repnz
mov
adc
lods
adc
mov
imul
test
test
out
xchg
add
xchg
enter
hlt
inc
mov
xchg
es
fnstenv
mov
mov
xor
cmp
popf
lea
stos
mov
push
sub
scas
xchg
cmpsl
arpl
inc
push
std
mov
dec
mov
mov
push
push
cld
aad
negb
sub
sub
push
insl
fwait
pop
inc
cli
mov
aaa
cmp
test
repnz
xchg
sarl
insb
jbe
inc
push
push
cmp
icebp
movsb
cmp
or
mov
aam
enter
shrl
jbe
loopne
into
adc
cmp
cmpsb
loopne
and
push
dec
cmp
pop
jb
fwait
lret
lcall
adc
pop
xor
pop
in
lock
jmp
daa
xor
sbb
inc
scas
adcl
lahf
mov
and
jecxz
clc
xlat
xor
clc
jg
mov
push
test
pop
mov
in
es
mov
mov
aas
xchg
mov
and
adc
loop
stos
adc
fildll
fld
sub
scas
sbb
add
insl
dec
and
into
jno
sbb
jae
mov
sub
cltd
mov
dec
push
xchg
jbe
dec
or
loope
les
repnz
inc
adc
jno
xor
fs
dec
in
pop
jnp
lock
sbb
push
sbb
adc
aas
fldt
xlat
icebp
imul
cmp
mov
pop
jae
ret
loop
pushf
loopne
cmc
mov
test
push
pop
add
in
mov
mov
jl
add
enter
mov
lahf
mov
mov
or
jae
fwait
lahf
and
cmp
jo
hlt
je
inc
fmul
scas
xchg
pop
int3
adc
in
jecxz
adc
xchg
jl
repnz
xchg
in
cmp
mov
mov
mov
push
mov
fstpl
xlat
int3
stc
mov
mov
pop
jl
push
pop
test
outsb
fildl
push
push
into
mov
leave
ret
dec
les
ffreep
jge
lea
sub
gs
outsl
sub
dec
sti
int3
push
inc
push
mov
in
jle
icebp
loope
pop
repnz
push
pop
mov
inc
xor
outsl
insl
sahf
ret
mov
push
jle
add
lea
rcl
pop
jb
fnstcw
lret
mov
imul
test
inc
pop
popa
and
clc
or
dec
cs
iret
jle
xchg
cli
out
stos
sbb
adc
mov
mov
push
jb
xchg
jmp
test
mov
sti
test
pop
je
mov
ret
and
push
mov
data16
stc
mov
mov
xor
int3
mov
or
mov
cmp
gs
push
pushf
jp
fsub
mov
test
gs
add
fs
mov
divl
jg
test
mov
movsb
cmp
mov
inc
sub
push
enter
mov
int3
mov
lret
pop
push
stc
ja
push
pop
stos
or
lret
or
scas
mov
ffree
js
repz
jo
xchg
std
dec
mov
addr16
clc
test
sub
dec
dec
jnp
xorb
test
je
ljmp
mov
xchg
outsb
push
mov
inc
or
jae
aad
sub
ror
mov
jg
int3
jae
and
xlat
leave
jb
cmp
gs
push
fldcw
cmpsb
cmpsb
lahf
ficoms
pop
dec
out
insb
pop
test
scas
mov
mov
outsl
and
sbb
sub
sbb
movb
sbb
push
ja
pop
nop
xlat
aaa
orl
mov
es
cltd
hlt
fs
jp
das
jno
inc
int
or
loop
fwait
sahf
inc
mov
rolb
clc
ss
jle
call
ret
stos
fwait
outsl
inc
xor
addr16
fwait
cmpsl
popf
loop
lret
rorl
push
lods
adc
rol
push
sub
or
sub
bound
das
fdiv
sub
repnz
mov
and
movsl
out
pop
pop
icebp
call
sbb
std
in
xchg
movsl
rolb
sub
pusha
cld
out
sar
rcl
call
out
mov
jne
cmovne
lock
fbstp
test
jo
mov
test
push
xor
xor
inc
je
sub
dec
outsl
fbld
aas
pop
dec
outsb
sub
xchg
ret
push
gs
sbb
xor
push
xchg
arpl
adc
add
pop
test
jno
std
sbb
sarb
xchg
outsl
push
jp
and
mov
inc
insl
sbb
aas
pushf
bound
lds
dec
out
jmp
ds
adc
adc
filds
xlat
lea
adc
mov
scas
shll
mov
xor
ds
cs
pusha
push
jge
cli
xorb
gs
inc
out
rorl
je
cmp
test
int3
sbb
xor
out
sbb
out
stos
data16
out
sahf
jp
je
mov
cmp
mov
pushf
push
imulb
je
fs
sbb
sti
in
lret
jle
cmc
sahf
js
fs
xchg
jecxz
pop
fistpll
fsubp
and
in
std
dec
push
lret
jb
mov
hlt
je
adcl
adc
mov
mov
movsb
je
sbb
cwtl
mov
icebp
push
xchg
dec
push
add
repz
push
dec
cmp
mov
add
sub
inc
sti
stc
and
arpl
les
sub
add
xor
mov
jno
lock
add
ret
fxch
sahf
sahf
cmp
dec
jg
or
dec
or
lods
mov
xor
push
sub
dec
push
nop
xor
inc
xchg
sahf
inc
movsl
int
push
ficompl
lods
sub
sub
adc
or
xor
xchg
pop
mov
ljmp
stos
push
pop
and
repnz
and
in
adc
pushf
inc
cmc
or
push
repz
and
xlat
iret
pop
sti
pop
je
cli
add
pusha
sbb
fnop
pop
jne
stos
gs
xlat
imul
js
and
mov
pop
out
pop
xor
mov
xlat
dec
mov
movsl
cmp
ss
push
test
inc
scas
dec
sbb
hlt
enter
xchg
addb
ret
nop
dec
clc
lcall
cmp
xlat
mov
and
dec
mov
sbb
mov
out
xor
cli
dec
rep
sub
sahf
lahf
inc
sbb
cmp
mov
shlb
arpl
lret
xchg
repz
xlat
add
es
fisubrl
retw
jge
les
fdivl
pop
add
xchg
mov
les
adc
pop
ret
cmp
lock
push
repnz
mov
sti
add
shll
test
fsts
leave
dec
cs
mov
popa
js
pop
dec
xchg
mov
arpl
int
lods
mov
mov
lock
push
xchg
shlb
and
sbb
frndint
and
testb
sub
movl
test
cmpsl
cli
out
sbb
daa
cltd
mov
cmpb
xchg
aam
mov
xchg
jle
mov
sbb
lods
mov
ja
ds
out
testb
lods
cwtl
daa
xor
out
mov
push
inc
lcall
int3
jns
xchg
shrb
int3
testl
fbstp
testb
add
popf
dec
fldl
pop
mov
ja
inc
fcoml
cmpsl
cmp
sub
sbb
or
jl
insb
pop
xlat
dec
daa
mov
pop
mov
ja
inc
fcoml
cmpsl
cmp
sub
sbb
or
jl
insb
pop
xlat
dec
daa
mov
pop
mov
ja
inc
fcoml
cmpsl
cmp
sub
sbb
or
jl
insb
pop
out
adc
pop
mov
ja
or
cmp
xchg
hlt
jg
cmp
sub
add
enter
test
js
xchg
xchg
jb
dec
mov
lds
aad
in
cmc
sbb
enter
test
mov
test
js
dec
mov
lds
cmp
or
sbb
enter
test
mov
test
pop
aad
shlb
lds
cmpsb
insl
pushf
outsl
jno
je
and
adc
push
mov
mov
adc
pop
dec
or
call
enter
push
xor
cmp
xchg
dec
dec
xchg
cmp
arpl
clc
jg
dec
sbb
in
jbe
push
sub
push
xor
test
aam
gs
out
xor
cmp
jne
jne
sbb
xchg
cmp
fcomps
sub
aad
and
cltd
fsin
cwtl
test
ds
xchg
jnp
sub
pusha
cmc
clc
cmp
lret
out
xor
add
ret
jl
cmp
xchg
or
out
call
xor
mov
test
js
dec
mov
lds
aad
in
cmc
pop
pusha
call
jae
and
cmp
or
icebp
in
cmc
sbb
popa
sbb
sub
xchg
jg
jp
jge
test
inc
xorb
push
std
and
xor
fsubrs
mov
xor
scas
mov
dec
bound
push
mov
mov
test
js
dec
mov
lds
aad
in
cmc
sbb
enter
test
mov
test
js
dec
mov
lds
aad
in
cmc
sbb
cmpsl
dec
pop
xchg
pop
cmpsl
cmp
js
lcallw
dec
in
fnstenv
pop
cmp
inc
outsl
jg
lock
sub
jmp
int
sub
in
out
mov
insb
adc
sub
push
out
jmp
je
ja
push
addl
pusha
dec
inc
fwait
mov
out
repnz
mov
mov
loopnew
imul
push
push
ja
inc
icebp
adc
fisttpl
pop
xor
fimuls
or
jo
and
cmp
shr
mov
clc
scas
sub
aam
movsb
in
in
test
mov
jnp
cmc
and
in
cmp
mov
push
mov
sub
pop
xchg
and
pop
xchg
outsb
jecxz
dec
out
or
jle
loopne
push
test
sbbb
and
pop
fstps
jp
inc
push
std
add
ljmp
mov
push
push
xlat
xchg
jg
add
sbb
hlt
int3
out
or
mov
push
scas
ss
dec
popf
fstps
insb
iret
ss
loope,pn
inc
cwtl
jo
mov
stos
loope
int3
pushf
push
js
mov
mov
pop
andb
mulb
mov
dec
dec
shll
inc
inc
push
mov
adc
mov
push
outsb
or
xlat
loopne
mov
orb
cmpsl
aam
push
push
or
push
mov
xchg
xor
and
lods
inc
inc
mov
cwtl
push
rcll
sarl
lock
scas
aas
pop
lock
jnp
sbbl
sti
push
inc
xor
enter
ret
and
aad
les
jb
test
sub
in
adc
add
int
je
out
aas
mov
and
popa
xchg
jle
or
cmc
mov
ljmp
xchg
int
jle
xlat
cli
jge
test
les
shlb
adc
cmpsl
pop
test
dec
movsb
pop
das
mov
call
pop
stc
xchg
popf
rcrb
pop
inc
jle
sub
inc
sbb
ret
dec
sub
add
or
mov
loop
pop
or
imul
jns
inc
mov
cmpb
mov
sbb
jmp
arpl
lea
repnz
pop
jmp
sbb
push
xchg
adc
cmp
add
mov
mov
xor
sub
add
js
in
jmp
in
jp
fwait
mov
mov
sub
sbb
out
jns
in
xorps
cmp
popf
adc
loop
lods
add
or
jnp
mov
scas
out
std
mov
js
pop
pop
sti
lahf
cld
aam
xor
stc
imul
inc
mov
sti
sbb
leave
cmpsl
or
arpl
or
stc
repnz
lods
in
jge
and
maxps
cs
out
nop
adc
out
test
outsb
loopne
mov
les
sub
ss
dec
pop
dec
dec
cld
mov
jmp
mov
pop
push
testl
enter
cwtl
or
addr16
adc
dec
pushf
inc
bound
and
popa
sbb
arpl
icebp
lcall
mov
pop
cmc
ss
out
stos
add
xor
shll
adc
decl
push
cmp
inc
adc
or
mov
dec
jl
fwait
imul
data16
jnp
clc
inc
mov
aaa
shl
jo
push
adc
imul
mov
adc
imulb
push
fdivs
call
mov
pop
popa
pop
sahf
les
cltd
xor
addr16
dec
in
lds
popa
or
xor
popf
push
sbb
xchg
and
push
loope
jno
out
in
cmp
push
and
cmp
test
insl
adc
rclb
inc
sahf
sbb
push
pushf
fmull
adc
ja
sub
test
cmp
test
mov
sti
jo
sar
iret
dec
push
xor
or
mov
call
and
outsl
ljmp
pop
mov
and
sbb
in
xchg
loopne
cmp
pop
int3
pushf
mov
push
hlt
push
lods
and
xor
adc
iret
adc
ret
mov
xor
pop
xchg
pop
outsb
mov
or
shrl
pop
adc
lock
jp
mov
das
xchg
mov
jnp
sbb
xchg
mov
cld
cmp
in
xor
sar
xlat
repz
int3
cmpsl
fwait
outsb
dec
jmp
cwtl
add
dec
sbb
ljmp
pop
pusha
pop
mov
inc
rol
and
lods
ds
pop
mov
rcrl
or
ljmp
adc
dec
out
mov
fdivrs
adc
insb
fs
dec
dec
mov
leave
add
dec
insb
sti
adc
in
loope
sub
cli
adc
adc
loopne
and
mov
lods
sub
adc
aaa
pop
popa
mov
inc
lahf
sub
int
jnp
cmp
mov
imul
les
sbb
jg
jo
push
xor
xorb
jmp
jno
xor
inc
mov
add
jmp
jno
add
mov
xor
xor
dec
lea
xchg
mov
fs
and
fsubr
fwait
lea
dec
sbb
jo
rcrb
jbe
ficoml
jae
sbb
cmp
insl
push
jbe
or
sub
xor
int
add
and
jne
shl
es
adc
bound
ret
pop
std
jo
pop
rclb
mov
and
clc
cwtl
pushf
ja
mov
add
clc
mov
mov
shll
das
xchg
aaa
or
sbb
int3
xorl
pop
inc
or
cmp
scas
out
inc
pop
lods
adc
dec
push
adc
push
dec
pop
add
adcb
cmc
pop
inc
bound
outsl
jecxz
shl
shll
es
insl
enter
mov
gs
dec
add
fmul
push
xlat
sti
jle,pn
repz
movsl
rcll
inc
push
ja
mov
mul
nop
out
or
std
loope
mov
insl
pop
xchg
jge
jae
hlt
mov
mov
add
xchg
bnd
push
insb
add
sub
add
push
notl
inc
arpl
mov
lea
in
mov
pop
arpl
mov
xchg
mov
push
faddp
sbb
fs
mov
sti
sahf
lods
mov
sahf
xor
ret
push
insb
cmp
jnp
sub
fwait
xor
loopne
add
sti
fistpll
fildl
testl
jle
aam
inc
mov
lods
mov
dec
std
cmc
add
or
clc
icebp
xor
push
mov
xor
stos
cmpsl
cmp
shrb
in
inc
bound
add
shl
mov
sti
outsl
orb
cmp
movl
cmp
push
jp
insl
fstl
jecxz
dec
push
std
pop
xor
push
addr16
outsb
shlb
cmpsb
jo
imul
push
fmuls
test
xlat
fwait
jb
jge
mov
or
mov
pop
shlb
pop
jp
cmp
insl
fs
loope
cmp
cmp
popa
inc
push
sub
lods
sbb
dec
mov
cmpl
aad
jge
sub
cmp
and
adc
xor
ss
ficoms
sub
fdivl
mov
sti
jo
imul
or
dec
lods
and
xchg
mov
sub
pop
popf
popa
das
mov
push
mov
ja
and
dec
xchg
push
sub
aad
dec
lods
leave
dec
mov
jbe
mov
dec
lds
adcb
je
xor
jge
pop
jecxz,pt
pop
cmp
repz
sub
and
lahf
cmp
and
cld
out
jg
push
movl
and
les
add
or
cmp
mov
scas
sub
pop
js
push
and
dec
mov
inc
add
push
pop
lahf
sbb
push
sti
jge
adc
leave
out
jle
mov
lret
pop
push
mov
xchg
xchg
sbb
sub
ret
pop
icebp
jle
inc
test
add
outsb
lods
push
sub
scas
ret
in
fnstenv
ficoms
aas
pop
scas
popf
push
cmc
and
inc
mov
adc
ds
outsl
pop
jecxz
inc
fwait
push
int3
jne
adc
test
mov
or
int
in
fwait
mov
das
scas
or
test
xchg
in
cwtl
call
push
xor
mov
js
mov
mov
sahf
aaa
adc
shll
cmp
and
stos
cmp
mov
dec
loopne
xor
not
repz
hlt
cmp
imul
dec
scas
imul
out
sbb
push
jno
jecxz
je
mov
cmc
lds
adc
mulb
cltd
inc
mov
icebp
loopne
mov
push
xchg
adc
ficoms
mov
inc
lret
aam
insb
cmp
pop
das
xchg
movsb
imul
jns
xchg
mov
xchg
mov
fiadds
or
ret
jge
lret
loop
sub
hlt
cmpsl
mov
hlt
xchg
xor
scas
into
bound
push
roll
mov
fs
aaa
int
mov
add
and
ljmp
sbb
dec
shrl
loope
jge
shrb
je
dec
sbb
lcall
lret
jmp
sub
or
inc
jb
adc
mov
sbb
jp
xchg
fnsave
dec
and
fwait
mov
stos
loopne
leave
lcall
cmp
loopne
cs
dec
test
push
sbb
cmpsl
adc
pop
jl
cmpsb
add
in
push
pushf
lods
adc
out
dec
hlt
in
and
adc
cmp
fisubrl
jbe
xor
cltd
add
into
leave
pop
popf
mov
adc
shlb
cmc
std
adc
mov
aaa
pop
mov
dec
rcrb
inc
sub
lcall
sbb
lret
push
and
fwait
xchg
lock
sahf
jmp
sbb
or
pop
movsl
icebp
cs
xor
mov
outsl
roll
mov
jp
and
jnp
lds
popa
adc
cmpsl
xchg
or
cmpsl
cld
adc
icebp
dec
sub
sarl
mov
cli
adc
add
push
jg
into
mov
or
in
sbb
orl
jge
cmpb
repz
push
add
in
jmp
fisubrs
jp
dec
dec
cmpsb
inc
andb
xor
push
adc
mov
test
cmp
out
stos
inc
pop
xchg
adc
xlat
fbld
mov
xor
mov
fdivrp
push
out
hlt
test
or
mov
cmp
orb
sub
or
movsl
sub
sub
pop
rcrb
sbb
mov
lods
mov
mov
cmp
movlps
cmpl
xor
cmp
xchg
mov
insb
je
lods
dec
inc
arpl
shl
in
jp
sub
xchg
sub
movsb
fcmovnb
aad
jmp
rclb
clc
enter
sbb
repz
cmp
in
pop
into
add
hlt
inc
pushf
or
fidivl
in
add
and
inc
shlb
icebp
ret
push
push
bound
popa
xor
adc
xor
movsl
sub
scas
ficoms
std
or
fsubr
or
fimuls
xlat
adc
pop
into
add
in
inc
das
mov
imul
xchg
lods
mov
pop
call
int3
cmp
negl
in
out
xchg
outsb
arpl
mov
mov
lcall
pop
sub
dec
movsb
mov
xchg
lgs
mov
pop
jns
stos
xor
hlt
mov
cli
lock
mov
jb
scas
pop
inc
in
insb
daa
mov
xor
adc
mov
leave
cmp
shlb
jo
pop
iret
push
xor
mov
repnz
outsb
daa
or
ljmp
aam
xchg
pusha
out
mov
push
daa
jae
dec
aad
xchg
jae
jmp
rorl
adc
mov
sbb
xchg
ja
sub
push
mov
subl
inc
adc
adc
dec
mov
in
adc
jg
bound
aaa
dec
call
push
cs
addl
xchg
push
push
test
lret
out
loopne
test
sbb
ljmp
push
ljmp
pushf
hlt
jecxz
orb
int
mov
mov
jns
pop
inc
cmpsl
adc
cmpsl
fisttps
js,pt
mov
mov
mov
pop
call
dec
mov
dec
notb
in
sbb
dec
ret
fcomps
mov
mov
daa
aas
lahf
inc
add
mov
cmp
fcom
loopne
iret
lahf
adc
jl
jns
pop
fwait
sti
test
mov
test
pop
sbb
je
cmp
icebp
cld
push
das
les
adc
std
xchg
push
outsb
mov
mov
sbb
pop
sub
fcomps
push
push
mov
pusha
jne
sbb
or
incb
test
clc
outsl
cmp
js
popa
add
dec
daa
dec
xor
mov
sbb
lock
test
sbb
mov
bound
inc
dec
push
xor
mov
pop
adc
mov
jnp
or
insl
sub
sbb
mov
ffreep
int
ljmp
push
test
or
out
stos
xchg
lret
jb
cltd
xchg
sarb
mov
je
pop
lahf
dec
mov
je
lret
mov
xchg
mov
fisttpll
shl
cmc
daa
mov
addl
pmaxub
mov
jmp
loop
cmp
rol
fcmovnu
adc
daa
push
aad
or
nop
xor
repnz
out
mov
je
call
add
dec
cmp
jae
pop
mov
lcall
test
push
shrb
add
into
jle
inc
xchg
adc
cmpsb
add
das
andl
sarb
shl
mov
test
or
mov
cmp
cld
pop
or
mov
push
lcall
scas
dec
test
shlb
dec
jle
js
jnp
pusha
xchg
sub
rcrb
mov
cmpsl
jno
dec
or
lcall
lods
mov
jbe
pop
dec
fwait
or
push
imul
insl
iret
ret
mov
push
add
data16
dec
push
out
push
jg
dec
pushf
jecxz
add
mov
add
cmp
sti
sub
pop
xchg
xchg
dec
repnz
lcall
lods
push
jmp
cli
jne
jp,pt
cs
les
mov
dec
jne
lcall
lods
cmp
xor
pop
mov
push
gs
mov
inc
leave
dec
xchg
push
lods
iret
test
mov
fsubl
mov
adc
sub
lea
dec
adc
jno
scas
aas
dec
add
mov
stos
xchg
mov
or
xor
loop
or
mov
dec
dec
jo
pop
push
mov
xor
cmp
cmp
mov
push
cmp
dec
popl
mov
mov
xchg
push
idivl
mov
push
push
cwtl
sbb
mov
jl
pop
and
pushf
sub
pop
mov
fs
push
dec
mov
cmp
sbb
and
cs
sti
call
or
and
xchg
sbb
xchg
sbb
or
clc
jl
out
sbb
aam
scas
test
pop
xor
mov
ja
jnp
mov
sti
in
dec
mov
dec
sbb
repz
sbb
inc
mov
or
pop
repnz
xor
or
bound
mov
dec
popf
inc
mov
lcall
sbb
sbb
leave
int3
cmp
mov
pop
data16
sub
add
sub
aad
dec
pop
sbb
mov
jmp
inc
sub
xchg
xchg
inc
dec
rclb
sub
jo
sbb
insl
push
test
pop
scas
int
push
ficomps
scas
jg
loop
sbb
jp
in
dec
and
and
xchg
xchg
popa
mov
or
and
xor
leave
push
pop
ja
mov
int3
jns
push
mov
int3
push
call
xchg
mov
pop
test
loopne
mov
faddl
gs
fnstcw
pop
push
mov
jp
rcll
jge
pop
shll
idivb
cmp
push
iret
stc
inc
dec
leave
loope
pop
jecxz
push
leave
repz
mov
int
sahf
sbb
cli
in
mov
lods
mov
fld
pop
or
test
mov
mov
xor
inc
js
inc
sbb
xchg
in
mov
xchg
jp
pop
ja
popf
jnp
push
push
jp
cs
mov
sbb
mov
push
jle
mov
jmp
mov
movsl
leave
imul
js
sahf
adc
or
cwtl
out
int3
lea
push
mov
mov
ja
pop
mov
psubd
mov
xchg
rorb
aad
cmovl
ror
std
add
or
insl
dec
and
inc
ds
scas
and
sub
in
lret
mov
movb
jp
mov
daa
dec
inc
pop
xchg
int3
stc
gs
clc
popf
mov
inc
lret
xlat
popf
sub
pop
adc
xchg
aaa
adc
fcom
dec
lds
mov
repz
popa
loop
mov
cli
cmp
scas
in
jp
les
xchg
imul
inc
mov
outsb
test
std
aas
add
cmpsb
xchg
pop
jle
dec
pop
mov
std
movsb
mov
inc
loopne
and
mov
mov
cmp
pop
lods
lock
and
scas
dec
xor
inc
mulb
lods
xor
loopne
push
mov
imul
pop
out
out
das
call
mov
ret
push
loopne
bound
dec
sub
std
lcall
outsb
fisttps
iret
lcall
test
fisubs
add
and
xchg
mov
lsl
xor
call
lods
out
dec
outsb
pop
icebp
push
loop
or
mov
add
add
jl
push
sub
xor
filds
mov
sub
test
xchg
shl
shll
ljmp
or
xor
or
xchg
xor
outsb
xor
fucomip
cs
ja
jle
aas
push
jl
mov
pop
jbe
and
jp
out
addr16
mov
jp
stc
sbb
mov
xlat
dec
or
stc
jecxz
mov
sarb
fnstsw
sub
jmp
inc
scas
mov
scas
cmp
push
shr
jp
pop
movsb
jecxz
and
in
sti
jb
fstpl
js
shll
movsl
push
repnz
xorl
or
shl
call
sbb
inc
mov
dec
fmulp
push
int3
and
sub
mov
insb
rolb
mov
loope
imul
jo
std
iret
imul
nop
pop
pop
pop
cwtl
out
xor
mov
push
mov
data16
mov
popf
dec
sbb
pop
mov
sahf
nop
out
pop
xchg
ljmp
jns
sub
inc
push
mov
in
or
sbb
xor
push
and
or
xchg
cmp
or
test
and
nop
rorb
cltd
mov
outsb
test
repnz
cltd
mov
xchg
loope
push
xchg
xlat
int3
inc
add
out
cs
or
outsl
mov
pushf
cld
sti
or
int3
or
or
stos
add
cli
insl
cmovg
mov
mov
jne
sub
xchg
jp
lret
into
dec
mov
add
outsl
cmp
iret
sub
and
dec
xor
clc
push
jno
cmp
in
das
mov
push
lock
sub
ret
das
into
stos
divb
mov
mov
test
loopne
push
sti
lds
push
dec
std
bnd
pop
out
inc
int
fwait
jo
iret
das
sar
in
xor
mov
adc
ret
mov
sub
test
adc
push
aaa
mov
arpl
lods
jbe
mov
and
inc
divb
stc
add
fs
cmpsl
arpl
push
or
mov
inc
xchg
mov
jbe
pop
mov
adc
lea
loopne
xlat
xor
aad
lods
arpl
cmp
mov
cmpsl
icebp
loopne
push
inc
movsb
add
cs
xchg
cs
push
mov
mov
pop
jae
movl
mov
sub
jp
mov
xchg
jle
xor
mov
mov
ss
ja
cmpsb
xor
test
lods
xchg
fdivr
shlb
sbb
or
out
mov
mov
lods
fsts
add
insl
mov
xchg
test
jns
sub
loope
ret
mov
sbb
xor
mov
test
js
dec
mov
lds
aad
in
cmc
sbb
enter
test
mov
test
js
dec
mov
lds
aad
in
cmc
sbb
enter
test
mov
test
js
dec
mov
lds
aad
in
cmc
sbb
enter
test
mov
jp
push
cmovs
sbb
js
push
pop
insb
aas
inc
pop
dec
inc
or
clc
insl
call
fnstsw
std
mov
or
dec
pop
cmp
jge
insl
or
fsubrs
test
cwtl
in
mov
pop
cmc
dec
inc
cmp
or
scas
mov
test
enter
int3
test
js
sbb
cmp
movsb
pop
decb
cmpsl
sbb
mov
lahf
cwtl
mov
jmp
sub
ror
lock
add
stc
mov
fcoms
and
and
cwtl
adc
dec
mov
xchg
outsl
or
jne
pop
mov
cmp
or
mov
rorl
fcomps
pop
mov
icebp
insl
pop
pushf
lret
std
cmp
push
aaa
and
int
cld
in
test
sbb
cmp
xlat
mul
out
mov
and
sti
cwtl
jo
in
add
std
nop
nop
cmp
sarl
adc
lea
fcompl
push
inc
sahf
pop
std
out
mov
pop
push
mov
sbb
or
pop
call
xchg
mov
in
into
je
jg
dec
push
push
push
xor
imul
xchg
fiadds
scas
aad
rcll
push
pop
xor
sub
mov
or
mov
aad
movsb
xlat
mov
out
sub
pop
sub
cmp
push
dec
sub
insl
or
fsubrs
test
cwtl
in
mov
pop
sub
sub
insl
or
fsubrs
test
cwtl
in
mov
stos
in
cltd
xchg
std
movsl
adc
jbe
loope
sub
addl
and
dec
lret
or
push
adc
sbb
mov
lret
cwtl
jno
lds
mov
mov
dec
rcll
movsl
push
add
mov
push
roll
xor
mov
js,pt
testb
hlt
dec
mov
loopne
cmc
lock
dec
test
in
scas
lds
and
insl
lahf
call
imul
mov
fwait
xchg
lds
dec
sbbb
push
jmp
fdiv
popa
sbb
xchg
cli
int3
xchg
rcrl
xchg
push
mov
fisubs
outsb
clc
fnstcw
cld
pop
cli
aam
imul
mov
xor
or
lock
fdivp
ret
dec
push
enter
outsb
inc
jae
jb
jae
sbbb
pusha
cmp
in
loopne
xor
adc
rcr
push
dec
pop
pushf
pushf
movl
mov
xor
lcall
lret
sub
subl
push
shrb
test
ficoml
dec
stos
hlt
arpl
pop
out
adc
mov
daa
xor
shrl
and
pop
sbb
cld
daa
repz
mov
inc
sub
lock
inc
jp
sbb
mov
divb
pop
daa
mov
sub
std
mov
push
loope
hlt
and
or
ret
loopne
push
aas
xor
sahf
stc
sbb
sbb
xchg
sub
mov
mov
scas
xchg
or
int
pop
fimull
push
popf
mov
insl
pop
popf
push
icebp
and
clc
cwtl
repnz
push
int
dec
cli
pop
jmp
add
pop
jmp
lds
push
movb
jg
sbb
arpl
roll
and
and
and
repz
xchg
push
pop
stc
mov
fwait
inc
jns
xchg
mov
jl
clc
int3
test
mov
jmp
sbb
pop
ja
movsl
push
add
into
dec
jbe
mov
dec
xchg
sti
xchg
xor
iret
and
fstpl
fcmovnu
push
cmpsb
nop
mov
jno
and
mov
push
pop
add
push
mov
mov
mov
test
xor
pop
jo
xchg
push
xchg
scas
and
gs
jnp
push
paddb
pop
jg
adc
or
mov
or
out
test
fwait
fwait
aas
out
imul
lahf
mov
hlt
cld
enter
loopne
push
lea
xchg
nop
cs
dec
xchg
mov
and
in
bound
testl
loop
movsl
iret
dec
popa
sbbl
mov
fcompl
loopne
outsb
jl
pop
std
jge
insl
scas
dec
outsb
mov
add
jns
testl
cltd
cmp
subl
mov
mov
xor
cmpsb
or
mov
imul
mov
mov
cmpsl
mov
pop
and
fistpll
imulb
push
fcmovnu
jmp
adc
dec
test
and
sbb
sti
dec
gs
xchg
jb
iret
push
or
out
loop
cmp
adc
lea
lods
or
mov
xlat
mov
ja
fwait
push
sub
xor
adc
sbb
std
jbe
imul
mov
jo
mov
jp
and
sbb
xchg
mov
jg
call
inc
push
push
jmp
sbb
not
xchg
shlb
enter
jl
test
in
mov
flds
dec
jmp
dec
loopne
popf
pushf
xor
test
hlt
xchg
pop
push
jle
inc
mov
ret
jbe
arpl
cmpl
jbe
push
inc
jnp
out
mov
push
xchg
jbe
scas
in
add
mulb
mov
mov
xchg
add
xor
adc
sbb
fcompl
push
in
das
mov
inc
rorb
and
and
sbb
pop
loopne
shlb
and
lods
lds
aam
push
xor
shll
jb
cs
stc
or
sahf
mov
daa
loopne
pop
out
loop
mov
pop
inc
bnd
or
mov
mov
shll
cmpl
popa
fsts
mov
sbb
repz
arpl
mov
fmuls
adcl
rcrl
and
jge
mov
cmp
cmp
clc
sar
dec
mov
sahf
push
inc
fildll
repnz
stc
or
jne
sti
mov
sti
lods
loope
sub
jo
pop
icebp
aas
inc
insb
shll
fs
negl
xchg
add
pop
fistpll
js
sti
mov
pop
push
lods
and
push
pop
outsl
jg
push
ss
mov
in
bndldx
repz
cmp
xchg
aad
popf
stos
mov
xlat
adc
out
pop
cld
rclb
clc
ret
jnp
mov
ret
rcrl
sbb
or
xchg
aas
jle
cmp
icebp
jg
or
pop
xor
icebp
stos
ror
adc
adc
jae
arpl
mov
or
mov
stc
xchg
lret
mov
adc
mov
imul
js
popa
push
fwait
fs
ljmp
in
jno
lock
add
and
mov
and
icebp
push
pop
jb
sahf
inc
cmp
jecxz
push
in
mov
dec
cld
outsl
loop
imul
xchg
sbb
test
popa
aas
adc
in
divb
movsb
daa
loopne
pop
aad
push
je
ret
ret
shll
push
int3
scas
xor
inc
pushf
lret
inc
cmp
decb
push
adc
mov
mov
pop
int
cli
push
rcr
pop
addr16
and
and
aas
pop
jmp
sbb
cmpsl
add
hlt
mov
stos
in
icebp
movsb
xchg
mov
push
cmpsl
pop
xchg
xor
pop
aam
jno
push
dec
enter
icebp
sub
cmp
pop
mov
sub
xabort
mov
subb
ljmp
xor
gs
or
jl
fsubs
lock
fs
cli
cli
sbb
imul
dec
mov
add
jecxz
sub
addb
cmp
cs
lds
xlat
outsl
mov
or
adc
rclb
lea
mov
adc
jl
xchg
push
sub
fcmovnb
aam
and
push
xlat
pop
or
jl
test
mov
cmpsl
or
mov
pop
sbb
xchg
notl
add
and
or
outsl
lcall
xlat
pop
scas
mov
cli
das
and
jne
jbe
cs
addr16
gs
iret
inc
mov
lock
repnz
lret
push
jno
cwtl
push
push
dec
fs
jl
testb
shl
cmpsb
xor
orl
xchg
pop
xor
jmp
jmp
cltd
loop
sahf
aad
mov
adcl
sbb
mov
push
add
ret
ljmp
je
adc
mov
xchg
pusha
and
or
xchg
sub
pop
adc
and
ret
inc
and
ljmp
or
sub
shll
mov
ss
push
dec
sub
xor
lret
jp
stos
mov
xor
inc
ss
inc
sbb
dec
mov
lret
add
fwait
pop
sbb
xchg
sbb
mov
jb
loope
imul
jnp
xor
push
sahf
nop
out
fs
prefetch
jg
mov
dec
frstor
aas
and
xor
movsl
fbld
jns
jmp
sub
adc
pop
sbb
jnp
lods
push
scas
pop
inc
xlat
push
aam
cmpsl
dec
ja
sbb
repnz
jl
xor
cmpsb
xchg
in
dec
ret
xchg
mov
movsl
test
inc
fidivrs
cmp
ds
imul
inc
lds
testl
mov
mov
das
iret
push
dec
sub
int3
xor
mov
test
das
jno
mov
push
inc
mov
aas
mov
and
out
ret
or
inc
dec
inc
scas
adc
mov
in
push
xor
faddl
andb
imul
push
dec
leave
sbb
jnp
cmp
pop
add
mov
sub
into
mov
or
push
lahf
mov
popa
mov
addr16
mov
fnstsw
outsb
xorl
pop
dec
iret
xor
add
xor
fcmovne
aaa
dec
fnstcw
data16
inc
fcomps
xor
push
and
in
lret
cmc
push
inc
push
jl
outsb
lret
push
mov
popa
inc
pop
iret
mov
mov
movsb
fwait
test
daa
jecxz
icebp
inc
adc
and
rclb
xor
mov
stc
inc
mov
out
clc
pop
mov
xchg
loopne
nop
fcmovbe
imul
mov
outsl
mov
gs
mov
xlat
sub
sub
adcb
inc
stos
cltd
test
fsts
or
pop
aam
xor
xor
mov
cltd
lds
inc
sbb
fildll
enter
cmp
mov
pop
mull
xor
push
cmp
rcrl
sti
jmp
mov
stos
fs
jbe
sub
or
lcall
jns
push
lret
push
stc
pusha
sub
pop
dec
call
adc
mov
dec
fsubr
sbb
pop
lock
xorl
mov
xchg
xchg
aaa
int
lret
aam
lods
mov
in
push
scas
popa
fists
dec
sub
cmpsb
inc
sti
mov
in
adc
mov
jmp
sarb
fistpll
push
adc
dec
pop
fcom
xor
cmpsl
push
popf
dec
pop
push
push
pop
mov
mov
sbb
push
data16
inc
add
ljmp
mov
or
in
xchg
xlat
sub
cmpsl
sti
jp
or
or
mov
adc
sub
into
aas
mov
jb
mov
addr16
addr16
sahf
mov
cmovg
lods
stos
lods
mov
sbb
push
das
or
fildl
ss
insl
pop
ficoml
pop
dec
cmpsl
pop
pop
push
insb
push
add
insb
pop
cmp
aaa
in
adc
dec
ljmp
jle
pop
push
int
adc
out
popf
call
xor
mov
repnz
fdivrs
dec
push
or
push
into
ret
push
test
loopne
repnz
mov
lods
aam
rcrl
xor
push
inc
scas
xchg
push
dec
leave
dec
pop
pop
jecxz
xchg
ja
ss
inc
aam
divb
adc
imul
arpl
push
movsl
add
xor
daa
nop
shl
sbb
aad
in
push
movsl
das
pop
jle
push
inc
pop
jb
mov
pusha
fsubr
lret
in
lods
gs
inc
and
jo
dec
jg
sbb
iret
push
test
jecxz
xor
mov
push
sbb
cltd
enter
lock
in
add
jge
insb
loope
shll
sbb
fwait
out
fs
or
jbe
std
jo
and
mov
rcll
scas
sbb
adc
movsb
out
push
mov
jnp
rorl
icebp
dec
mov
fucomip
test
or
mov
jp
call
push
aam
lea
popa
imul
mov
insb
fwait
adc
jnp
pop
xchg
sbb
andb
cmp
sbb
add
hlt
adc
pushf
pop
push
js
stos
xchg
ficoms
pop
pop
scas
bound
push
adc
pop
arpl
dec
push
in
ds
dec
push
or
in
xchg
mov
dec
popf
sub
push
jg
ja
sbb
lods
lret
les
fidivrl
xchg
cmpsl
je
cmp
sti
xlat
pop
ja
push
lcall
sub
insb
pop
sbb
dec
inc
cmp
jno
cmc
bound
outsb
cmpl
movsb
cmp
daa
jnp
dec
mov
jb
jp
sub
mov
jnp
mov
lret
xor
int3
xchg
and
insl
cmp
sbb
push
scas
push
test
pop
mov
call
dec
movsb
or
mov
lret
fwait
std
xchg
mov
and
xchg
mov
mov
dec
mov
out
cmc
or
mov
out
icebp
lods
in
mov
lea
pop
clc
aam
adc
std
xchg
xor
hlt
jmp
mov
fistpll
in
outsl
sti
add
sbb
add
addl
mov
push
inc
jne
push
das
cli
cmp
ja
jmp
aas
lret
aas
push
pop
bound
mov
mov
pop
call
arpl
in
ret
sub
xchg
or
stos
jno
cmp
data16
dec
andb
test
int3
loope
sbb
mov
scas
push
cld
jno
enter
push
adc
adc
lahf
push
sbb
mov
mov
arpl
sub
push
les
push
sahf
mov
out
sahf
inc
cmc
cmp
pop
dec
cmp
shr
mov
mov
test
push
mov
mov
roll
sbb
stc
lods
out
cltd
or
cmp
adc
sti
adc
sub
icebp
sbb
sbb
iret
scas
test
daa
jecxz
into
int3
fs
add
fbstp
cwtl
faddp
sbb
sub
push
xchg
push
mov
sub
cld
les
adc
in
adc
and
dec
mov
test
fs
call
push
bound
inc
xchg
jb
cmpsl
sti
scas
divl
pop
jmp
scas
inc
stos
jmp
aaa
cmpl
clc
sbb
adc
adc
pop
xchg
push
insb
lods
cltd
and
fisttpll
jno
or
leave
xchg
push
xchg
xchg
adc
out
or
lods
outsl
mov
jns
arpl
stc
sub
sub
sbb
sub
ljmp
sbb
mov
add
rol
cmp
xor
mov
sub
push
scas
or
pushf
or
out
adc
mov
pop
xor
repz
faddl
imull
jb
iret
daa
aam
cld
mov
das
mov
int3
imul
add
mov
test
mov
ret
xchg
sbb
inc
mov
pop
mov
add
cli
sahf
fs
jl
in
xor
jbe
test
sub
sbb
mov
inc
or
jp
lcall
push
fisttpl
pop
pusha
es
movsl
repz
cmp
mov
xlat
or
push
xlat
mov
sbb
fs
mov
test
mov
adc
pop
dec
sahf
sub
inc
mov
and
xchg
inc
fsubl
adc
pusha
faddl
lahf
jne
cmc
fcoms
jbe
test
xchg
xor
dec
ss
mov
or
jnp
mov
pop
xchg
push
xor
xchg
pop
dec
adc
lahf
jecxz
imul
push
lea
xor
xor
pop
add
sub
dec
adc
int3
out
cmpsl
jne
mov
mov
jnp
fdivrl
pop
add
and
jnp
fisttpll
sti
jbe
xlat
dec
orl
lock
ljmp
rcr
xor
xor
or
xchg
xor
jno
push
lret
mov
addr16
sarb
mov
je
and
mov
push
pop
or
pop
mov
cmp
leave
cmpsb
sub
call
roll
pusha
fcmovnbe
in
je
rolb
stos
popf
roll
cwtl
repz
jecxz
enter
mov
push
mov
sbb
daa
fwait
stos
fwait
daa
sbb
jp
xchg
inc
push
cmpsb
jle
lock
fadds
push
xchg
or
xchg
push
sub
mov
fmull
pop
hlt
mov
xchg
inc
fistpl
mov
outsb
cld
aad
sbb
push
xchg
jbe
hlt
jmp
xchg
ret
dec
arpl
push
scas
mov
cmpsl
shlb
push
sbb
mov
cwtl
fdivl
jle
test
sub
jae
mov
jecxz
dec
lret
shr
mov
cwtl
pop
stc
popf
sub
lods
mov
sub
repnz
mov
pop
sbb
xchg
xchg
inc
mov
adc
sub
aas
xor
fdivp
rorb
fldl
and
sub
dec
inc
add
dec
xlat
cwtl
jns
mov
pop
sbb
scas
aad
mov
pop
pop
push
xor
pop
mov
jbe
pushf
rorb
mov
mov
popf
push
psrld
adc
lret
mov
mov
sar
mov
ret
rcrb
push
inc
ss
push
add
ficoms
push
fisubrs
je
xchg
lds
loope
orl
inc
sub
sub
mov
das
mov
fwait
xor
notl
orl
iret
add
mov
imul
icebp
rclb
jle
ds
insb
jb
fsubrp
lods
inc
fsts
mov
mov
pop
stc
mov
jg
fists
sbb
mov
jne
push
bound
adc
fisubrl
pop
push
mov
cmp
shl
pop
pop
inc
mov
mov
mov
pop
test
jmp
test
les
int
sub
sub
jae
mov
or
pop
loope
lret
mov
mov
adc
shr
rcrb
shlb
inc
jbe
pushf
add
jmp
bound
mov
adc
mov
insl
icebp
ljmp
jecxz
jne
pusha
mov
mov
cmc
int3
cmp
adc
sub
mov
cmp
es
dec
das
dec
test
enter
test
into
lahf
dec
cld
shll
and
lods
dec
sub
jb
lods
leave
jnp
xchg
pop
pop
hlt
dec
jmp
or
inc
fcomps
aas
sbb
clc
das
dec
mov
call
xchg
xor
dec
popa
push
cmp
dec
adc
outsb
mov
mov
mov
push
inc
xchg
mov
out
mov
dec
sbb
stos
dec
or
sbb
mov
mov
lret
out
xor
add
insb
clc
push
cmpl
and
jo
push
add
lock
cmpsb
jno
mov
or
and
or
or
movsl
pop
xor
out
popf
cmp
insl
outsl
sahf
and
or
movhps
nop
cmpsb
lods
mov
inc
or
pop
or
arpl
stos
add
inc
pop
mov
das
push
dec
xor
ja
les
inc
test
cld
adc
movsb
mov
jne
cmpsb
pop
sub
sbb
popf
mov
movsl
dec
adc
add
mov
lods
adc
lret
inc
jg
dec
inc
pop
inc
or
xchg
jbe
mov
and
les
shr
js
push
push
xchg
push
push
mov
adc
lods
adc
in
or
mov
push
ja
rcrb
lea
outsb
xchg
pop
xchg
scas
sbb
mov
popf
push
cmpsl
sub
xchg
jmp
int3
sbb
test
pop
outsl
out
rcr
inc
aas
es
int
jns
lea
mov
into
pop
pop
push
xchg
mov
adc
jno
jae
mov
mov
push
cmp
fnstcw
or
jp
fnstenv
and
insl
jle
loop
stc
in
mov
jnp
or
jno
fwait
aas
cs
mov
sbb
sbb
cmpsl
fbstp
push
addr16
mov
testb
lock
dec
mov
bound
jnp
dec
push
sub
fbld
sub
adc
and
dec
add
nop
mov
sub
ficoml
shl
lods
scas
mov
mov
xchg
outsl
pop
iret
sahf
leave
inc
xor
stos
clc
xor
int3
test
xchg
pop
jb
fwait
test
stos
clc
push
push
or
mov
jmp
pop
push
mov
in
or
aaa
lahf
scas
inc
sti
jne
sbb
push
xchg
lret
outsb
sbb
mov
xor
push
fcmovbe
xchg
popf
lea
notb
adc
pop
aam
and
adc
clc
jecxz
mov
lahf
ljmp
cmp
xor
fisubs
mov
and
repnz
sub
and
mov
movsb
das
or
mov
imul
loop
push
mov
or
sbb
xchg
test
es
das
movsb
xchg
out
add
and
rorb
shrb
mov
add
or
cmp
jnp
dec
gs
jg
or
cli
loop
or
imul
ljmp
add
ret
lahf
lret
xchg
add
adcl
mov
test
pop
mov
pop
mov
pusha
mov
add
stc
add
mov
jnp
fisubrs
push
add
repz
add
jns
and
mov
and
inc
jae
movsl
stos
nop
fst
mov
in
push
scas
idiv
hlt
fbstp
sahf
mov
test
inc
pop
test
push
scas
adc
test
sbb
out
fdivrs
loopne
push
hlt
idivl
add
adc
movlps
cmp
inc
ss
arpl
loope
popf
iret
icebp
sbb
addr16
movsb
mov
pusha
jnp
and
or
notl
push
jo
and
dec
xchg
cli
pop
ja
bound
out
js
popl
xchg
jl
leave
idivl
bound
xchg
in
dec
test
pushl
push
jae
or
mov
dec
pop
cmp
jge
insl
or
fsubrs
test
cwtl
in
mov
pop
sub
sub
insl
or
fsubrs
test
cwtl
in
mov
pop
sub
sub
lods
or
fsubrs
test
cwtl
add
push
pop
cmp
jge
in
negl
fsubrs
push
add
ja
sub
xlat
hlt
in
mov
ljmp
addr16
push
fs
data16
add
and
and
aam
hlt
in
xchg
cmpsl
test
push
addr16
ss
inc
fs
ja
aam
xor
and
int
xlat
in
std
mov
cmpsl
pushf
xchg
lods
xchg
add
fs
push
dec
push
bound
xchg
out
fwait
adcb
insb
sub
pop
jo
xor
pushl
jg
mov
mov
pop
test
sbb
aam
lods
push
fs
xchg
fcoms
xor
imul
cmpsb
xorb
repnz
ja
aaa
test
enter
add
add
lret
xor
aam
mov
inc
ja
xchg
add
mov
xlat
inc
je
pop
mov
sbb
pop
mov
js
in
movsl
pop
fsts
inc
pop
xor
fs
mov
and
hlt
inc
das
push
scas
outsl
outsl
mov
mov
push
and
je
inc
daa
jno
lret
push
xor
aam
rcl
in
mov
cmpsl
test
dec
addr16
push
insl
inc
jge
or
adc
xor
inc
xorl
in
ret
rcr
loop
pop
cmp
and
inc
jns
push
jp
jae
test
movsb
les
out
mov
sar
enter
and
jl
push
imul
inc
adcl
cmpsl
test
push
addr16
push
je
fs
adc
add
xor
and
aam
xlat
hlt
in
xchg
cmpsl
test
push
addr16
push
je
fs
adc
add
xor
and
aam
inc
pop
aad
test
or
pusha
ret
aam
sbb
outsb
jo
or
mov
arpl
mov
fbstp
cmp
mov
int3
jmp
fdivrl
aam
in
push
push
mov
jo
mov
add
imul
cmp
fs
jns
test
jae
dec
rcrb
add
mov
jbe
adcb
rclb
jbe
inc
test
pop
daa
xchg
jp
push
jae
in
and
and
inc
int3
inc
and
aaa
pop
cmc
imul
icebp
push
imul
mov
dec
leave
inc
xchg
aam
ds
pop
xchg
sahf
daa
adc
pop
pop
popa
fisttps
sahf
xchg
out
mov
and
std
pop
mov
lods
xchg
movsl
pop
aaa
mov
pop
mov
insb
pop
mov
out
dec
push
mov
pop
adc
push
movsb
push
jmp
jnp
add
cltd
cmp
add
mov
pop
add
pop
sub
add
jo
adc
mov
ljmp
sar
jecxz
scas
andl
fdivrs
xchg
push
lret
pushf
gs
jno
or
xor
ja
sbb
or
bound
adc
add
adc
outsl
mov
movsl
adcl
ret
popf
enter
dec
ret
insb
pop
and
push
unpckhps
cs
pushf
aas
cwtl
adc
in
mov
daa
fisttpl
xor
sbb
or
sahf
adc
cmp
cmovp
push
les
shr
dec
pop
ja
or
cmp
sub
mov
sbb
mov
mov
or
lret
push
and
xor
xabort
dec
xor
jb
hlt
push
mov
stos
in
add
mov
dec
sar
push
lcall
outsb
subb
cmp
addl
push
inc
cmp
shlb
push
dec
addr16
fstpt
in
arpl
xor
push
leave
push
les
adc
or
rcrb
inc
mov
adc
sahf
inc
push
pop
dec
adc
imul
or
fdivr
jae
sub
mov
fs
cmp
shll
pop
insl
out
jp
call
push
pop
repz
and
addb
ljmp
test
stos
dec
dec
shll
mov
or
out
xlat
xor
xchg
nop
push
popa
adc
cmp
int
iret
jecxz
xor
jnp
idiv
hlt
test
xor
fwait
jne
sbb
addr16
aad
mov
stc
test
dec
add
test
or
jns
sub
jecxz
jb
xchg
outsl
in
pop
and
cmc
sub
clc
jmp
repnz
inc
fsubrl
jge
dec
fldt
test
adc
out
sbb
dec
push
push
mov
adc
stc
adc
arpl
push
pusha
pop
mov
sub
jnp
adc
fdivp
push
xor
sbb
test
fstpt
iret
dec
mov
pop
adc
adc
dec
push
xchg
mov
shrl
ret
lds
in
movsl
das
dec
dec
jmp
hlt
pop
pop
mov
call
fs
jo
mov
cld
sub
call
cmp
mov
imul
in
push
not
mov
dec
and
mov
xchg
andb
rorl
leave
pop
jnp
std
mov
cmp
aas
or
sbbl
xchg
into
jne
sbb
or
out
jno
lahf
or
pop
sbb
test
mov
and
fsubs
add
jmp
faddp
jmp
dec
or
cmpsb
loope
or
cld
mov
outsb
lods
repz
iret
aad
pop
sbb
pop
sar
popw
mov
add
out
sub
jns
ljmp
sbb
push
xchg
stos
sbb
pop
cmp
jle
or
in
pop
std
iret
rorl
cs
cmp
push
loope
lock
jmp
inc
dec
lahf
jns
lods
jo
insl
cs
not
lods
test
ret
jmp
jns
dec
and
ret
or
into
mov
push
js
pop
push
pop
push
xlat
sub
mov
mov
dec
popa
imul
sbb
lret
rcrl
pop
cmp
or
in
mov
add
sbb
pop
xor
aaa
dec
scas
xor
xor
pop
mov
pop
xchg
push
fs
or
inc
jge
jo
test
push
outsl
loopne
and
lds
outsb
cmpsb
and
jns
into
fcoms
push
mov
cmc
out
aam
mov
or
test
nop
out
push
cmpsl
jecxz
sub
inc
out
inc
xor
nop
and
dec
and
mov
mov
sbb
dec
fimuls
hlt
pop
lcall
mov
aad
mov
icebp
mov
std
in
pop
shll
pop
jmp
jnp
and
insb
dec
jnp
insb
int
bsr
sbb
mov
loope
cmpl
mov
mov
filds
stos
outsl
inc
call
jbe
divb
roll
stos
push
push
pop
dec
call
cmp
push
repnz
jl
add
fwait
cwtl
cld
lcall
pop
pop
dec
ljmp
xchg
or
inc
imul
mov
dec
out
inc
mov
lds
dec
inc
push
mov
cmp
mov
sti
mov
addr16
add
xchg
xor
shrb
int3
mov
xchg
in
aaa
faddp
pop
push
lock
out
arpl
daa
sbb
xor
mov
mov
mov
push
in
inc
mov
enter
ret
sbb
test
push
or
dec
movsb
stos
xor
jp
test
dec
push
pop
jg
in
decl
dec
rcrb
lock
xor
lahf
enter
popa
adc
mov
and
pop
aaa
lcall
test
sbb
in
jge
imul
imul
jbe
sarb
ljmp
mov
in
sub
addr16
mov
xchg
arpl
outsl
dec
cmp
jno
xor
xor
pop
sub
or
inc
jmp
add
inc
dec
loopne
fldt
fs
fildll
repnz
leave
inc
push
mov
rcrb
pushf
test
insl
push
mov
cmp
sub
cmpsb
icebp
in
shl
lret
pop
jns
sub
jl
loop
cmp
fldcw
lods
fldenv
aad
inc
cmp
fisttps
rclb
insl
icebp
xor
cmpsl
pop
add
notl
setne
sahf
sbb
ret
in
sbb
sub
xor
sub
add
les
loop
push
jecxz
das
pop
movsl
mov
mov
fcoms
jg
ficompl
movsl
inc
inc
in
or
mov
cmp
push
mov
lock
fldt
jecxz
stos
cltd
inc
inc
outsb
rorb
and
in
int3
mov
push
in
mov
addr16
je
adc
aad
and
inc
add
je
loop
push
mov
insb
cs
je
fistl
mov
inc
fimuls
pop
pushf
pop
popa
mov
fwait
pop
mov
xor
out
ret
mov
mov
rcrl
fidivrl
lahf
pop
sbb
xchg
daa
mov
inc
adc
push
fstpl
jmp
in
jno
or
mov
jno
xlat
xor
cmp
daa
int3
mov
hlt
jecxz
aam
xchg
in
shrl
jl
pop
inc
test
stos
neg
inc
pusha
scas
outsl
xor
push
sbb
ds
clc
dec
scas
cmc
rcrl
stos
mov
and
push
sub
cmpsl
dec
adc
sbb
addr16
movsb
mov
lahf
jle
lds
push
xchg
lods
dec
out
sbb
fs
push
inc
pop
mov
push
fiadds
bound
outsb
jne
scas
jne
mov
add
sahf
jbe
xchg
popa
jo
fwait
movsb
inc
stos
push
jb
out
cwtl
push
jb
sbb
xor
insl
fdiv
mov
push
dec
int3
nop
fnstenv
in
pop
iret
sub
adc
nop
rcrb
inc
in
stos
xor
rcrb
pop
pop
push
cmpb
int
cmpsb
adc
mov
out
sti
adc
add
and
and
loope
jmp
aad
push
das
and
cmp
push
inc
jns
jmp
mov
inc
xchg
mov
cmp
or
fs
adc
hlt
xchg
or
cmp
jbe
push
mov
mov
mov
jecxz
mov
lahf
mov
sbbb
ss
popa
add
add
push
sarb
mov
sub
fiaddl
in
repnz
jb
scas
adc
fldenv
push
mov
pop
dec
gs
xchg
sbb
dec
sub
pop
sbb
hlt
in
mov
rcr
lret
push
cmp
cmp
or
inc
arpl
test
dec
xchg
stos
xchg
jmp
inc
adc
ds
pop
sbb
xor
insl
pushf
testl
xorb
dec
cld
inc
popa
jmp
and
cmp
std
fidivrs
test
cmpsb
fwait
jo
ror
push
std
outsb
cmp
push
xchg
xchg
shr
clc
mov
sbb
push
shll
testl
pop
mov
fildll
imulb
or
mov
movsb
lods
mov
mov
xor
xor
icebp
add
sub
cs
push
sub
push
push
aas
dec
mov
ret
or
push
aaa
push
xchg
jle
out
push
mov
push
jge
mov
cwtl
ret
and
dec
lcall
pop
call
and
or
mov
mov
ljmp
cmpsl
pop
sahf
xchg
sbb
shr
popa
cwtl
das
mov
movsl
dec
sbb
lea
push
inc
test
add
gs
sahf
mov
xchg
inc
loop
pop
or
sbb
dec
nop
ljmp
jnp
mov
das
add
ds
out
jo,pn
cmc
mov
mov
jge
mov
dec
cmpsb
sbb
jae
jp
fisubrl
out
les
add
dec
leave
jg
pop
mov
push
pop
jne
xchg
stos
inc
jmp
jge
insl
xchg
out
movsl
xchg
ja
ja
pop
xchg
rcl
xor
inc
mov
movsl
js
xchg
mov
lea
data16
push
enter
js
lods
jns
ds
aad
ds
inc
or
fbstp
imul
ss
jl
xchg
scas
enter
gs
aad
mov
xor
sub
jno
xchg
xorl
mull
inc
divl
adcl
xchg
sub
mov
notl
push
mov
cmc
push
fiaddl
push
mov
push
cmp
sub
shlb
lods
and
sbb
jnp
cmpsl
fnstenv
cmp
xchg
cli
adc
push
mov
leave
adcl
and
out
dec
aad
dec
ficoml
iret
xchg
mov
mov
or
cmp
jge
fs
cmpsl
test
add
xchg
jb
test
notb
lock
add
into
enter
ret
cmp
sub
jne
inc
or
cmp
dec
loopne
outsb
addr16
xchg
std
mov
mov
fidivrs
cld
shlb
inc
dec
ss
sbb
cli
hlt
out
decl
and
gs
fistpll
xor
jg
fisubrs
jmp
jae
sub
into
mov
jne
push
subl
adc
mov
xchg
sti
sub
dec
and
cmp
ljmp
cwtl
cmp
mov
mov
sbb
lock
lds
jae
sbb
loope
cmp
sbb
sub
cmp
xorl
iret
bound
jmp
push
loop
arpl
cmp
pop
and
mov
or
push
mov
mov
mov
push
test
jp
xchg
and
lds
push
and
mov
mov
mov
stc
or
push
xlat
es
jl
and
cld
loop
nop
pop
jle
xchg
aaa
sub
cmpsl
pusha
leave
cltd
mov
and
loop
bound
in
loopne
and
int3
mov
mov
cmp
jb
mov
loopne
divl
xor
inc
cmp
popf
flds
jnp
fidivrl
cmp
gs
sub
pop
mulb
mov
clc
leave
sbb
mov
lret
nop
pop
and
aas
add
dec
arpl
enter
iret
and
or
mov
setnp
pushf
and
mov
test
inc
fistpll
lds
sub
or
cmpsw
pushf
dec
lods
shl
push
in
out
mov
mov
fisubs
pop
in
mov
sahf
mov
push
xlat
xchg
std
inc
push
mov
bound
pusha
shrl
dec
push
mov
jae
ds
in
add
loop
xlat
and
mov
daa
ficompl
inc
mov
aad
popf
fmuls
xor
xorl
out
mov
sub
sbb
xchg
mov
xchg
rorb
xchg
dec
and
or
jb
mov
mov
xchg
scas
adc
outsl
fmuls
or
or
jp
repnz
lds
subl
dec
sbb
loopne
push
cmp
push
pop
hlt
mov
out
sub
shl
pop
xor
mov
cli
aas
mov
pop
xchg
inc
push
mov
add
inc
dec
fildll
int
nop
xchg
lock
shlb
out
inc
inc
ficompl
dec
inc
cmp
test
sti
ret
inc
mov
addr16
shr
imul
int
das
inc
arpl
lahf
mov
test
dec
push
mov
cmp
sbb
ret
andl
into
or
mov
daa
jecxz
faddl
cmp
or
push
cld
inc
or
inc
pop
out
or
decl
ss
mov
mov
xchg
adc
insl
pop
cld
inc
inc
rorb
pop
in
mov
inc
insb
push
mov
inc
cli
test
shlb
and
mov
jb
popf
aaa
lcall
fiaddl
pop
outsb
xchg
pop
icebp
andl
ret
mov
adc
adc
add
test
sbb
push
inc
jp
out
pop
aad
xor
add
repz
in
imul
popa
fnsave
and
ds
push
idiv
or
push
mov
loop
or
movsl
add
cmpsb
xor
scas
mov
jecxz
arpl
test
test
mov
sbb
push
jo
xchg
mov
test
rorb
lods
pop
mov
pop
push
xchg
insb
sub
orb
cmp
jno
sub
add
pop
pop
loope
adc
sub
imul
test
push
insb
mov
push
cli
imul
add
aad
mov
sti
add
les
lods
add
dec
outsl
and
xlat
js
repnz
add
mov
loop
stos
in
dec
dec
int
mov
jno
lods
outsl
push
fidivl
push
das
rorb
ljmp
or
dec
cs
mov
in
mov
add
test
stos
inc
lahf
sarb
into
mov
call
mov
aaa
in
in
jno
adc
clc
push
aad
test
scas
pop
outsl
and
popf
add
sbb
push
lods
bound
subl
adc
shll
sarl
mov
dec
jae
xor
push
into
out
jl
imul
lods
dec
add
cltd
rcr
dec
push
dec
pushf
push
ret
shlb
dec
cwtl
xor
stos
leave
xchg
xchg
cmp
pop
shlb
mov
roll
ja
and
xor
mov
or
or
sbb
xor
jns
nop
pop
xor
inc
inc
int
dec
dec
pop
dec
lcall
pop
les
stos
lea
sbb
es
jnp
repnz
sub
xchg
or
mov
imul
sub
mov
fstl
cmp
icebp
cmp
pop
iret
in
ss
js
push
pop
cltd
out
clc
adc
jo
sbb
leave
ss
mov
aaa
lods
idivl
pop
idivl
mov
lock
jne
rol
out
mov
dec
cs
mov
in
sahf
and
dec
pusha
insl
inc
dec
and
add
int3
iret
mov
inc
adc
inc
insb
fiaddl
movsb
add
cld
negb
into
push
and
test
je
xor
cltd
imul
push
pop
stc
mov
lods
xchg
rclb
cwtl
inc
xchg
sahf
xchg
test
xor
lods
cmp
add
adc
mov
cmpsl
lods
jno
cli
cmc
add
push
mov
imul
rcrl
sub
mov
pop
gs
rcrb
and
mov
pop
stos
mov
insb
out
inc
lcall
pop
jmp
push
or
or
mov
xchg
push
sub
mov
hlt
adc
xchg
mov
or
sbb
enter
sub
inc
loope
and
mov
pop
pop
add
xchg
add
jle
xor
sbb
or
mov
push
rclb
gs
lret
rcrl
xor
pop
repz
mov
and
pop
sbb
pushf
decb
push
mov
push
dec
mov
push
mov
pusha
push
in
mov
adc
jb
pop
out
aad
roll
cmp
lcall
nop
sub
dec
cmp
and
inc
jnp
adc
pushf
cmp
addr16
lret
movsb
add
mov
ss
or
fidivrl
pop
inc
jo
lahf
mov
bound
stos
push
loop
jmp
ficoms
pop
inc
mov
xchg
ljmp
outsl
or
push
popl
sub
fisttps
out
rcll
jno
or
adc
stos
jecxz
inc
cs
sbb
pop
insb
js
in
adc
pop
xchg
mov
test
sub
imul
insl
and
sbb
or
mov
jnp
adc
leave
into
pop
sbb
lds
fildll
add
lea
push
adc
pushf
pop
dec
jne
sti
sbb
mov
and
pop
add
mov
jnp
cmp
dec
sbb
setp
jmp
ja
adc
mov
cs
mov
xchg
sbb
xor
pushf
jns
inc
mov
jecxz
lret
dec
call
fwait
jae
pop
arpl
push
jge
or
movsl
adc
mov
push
push
and
xchg
add
dec
add
outsb
jge
arpl
lock
pop
inc
rcll
xchg
mov
out
test
or
fadd
pop
mov
or
xchg
vandnps
xchg
lcall
popa
pop
lahf
lahf
mov
gs
js
sbb
sahf
jge
sti
jl
aad
cmp
push
mov
xchg
pop
rcrl
sub
insl
mov
inc
rclb
out
scas
push
imul
aas
jle
mov
inc
dec
push
dec
lcall
mov
fwait
insl
or
insl
sbb
into
adc
movsl
lods
icebp
pusha
inc
fidivl
mov
movsl
and
lea
inc
jnp
push
iret
sbb
ret
sub
lcall
and
ljmp
xor
dec
push
push
adc
fisubrl
iret
js
push
cmc
and
mov
lock
mov
dec
mov
lret
mov
cmp
sbb
sub
pop
daa
repz
sarl
test
mov
push
bound
mov
xchg
mov
add
hlt
call
or
fmul
sbb
scas
jl
mov
mov
mov
xchg
outsb
jbe
push
add
sar
mov
popf
push
in
sbbb
arpl
movsb
xchg
cmp
ljmp
and
xor
shr
jo
pop
rorl
xchg
test
jl
outsb
mov
inc
sub
push
int3
sbb
add
pushf
adc
std
add
jae
stos
icebp
adc
pop
rolb
popf
cmpb
insl
sbb
add
jnp
sahf
andl
push
pop
call
in
xchg
pop
adcb
xor
jmp
test
push
cmp
cs
das
inc
mov
pop
xor
stos
mov
pop
sub
add
repnz
test
xorb
lods
mov
cs
sub
xchg
sbb
cmp
adc
dec
aaa
mov
nop
les
push
jae
cmc
sub
faddl
adc
aas
or
or
inc
mov
add
or
lods
popf
mov
stos
mov
les
lock
imul
stos
add
out
and
sub
jmp
enter
adc
add
test
sub
xchg
mov
push
and
call
mov
sti
sbb
in
xchg
cmpsl
test
push
addr16
push
je
fs
adc
add
xor
and
aam
xlat
hlt
in
xchg
cmpsl
test
push
addr16
push
je
fs
adc
add
xor
and
aam
xlat
hlt
in
xchg
cmpsl
test
push
addr16
push
je
gs
adc
add
xor
out
hlt
in
xchg
cmpsl
test
push
addr16
std
je
adc
scas
sti
call
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
cmpsl
inc
xchg
je
cmp
mov
aam
les
hlt
push
in
xchg
add
inc
movsb
mov
cmpsl
inc
xchg
je
notl
add
xor
and
aam
movsb
pop
hlt
pop
in
xchg
test
inc
movsb
mov
cmpsl
inc
xchg
je
notl
add
xor
and
jl
les
pop
in
rorl
jmp
sub
sbb
xor
fsubr
aas
and
call
popa
xor
clts
mov
sub
lret
adc
or
cmp
mov
imul
or
push
nop
xor
jl
xchg
aad
je
enter
cmp
xor
sbb
xchg
sbb
inc
sub
std
mov
repnz
mov
mov
mov
daa
jnp
dec
jb
dec
mov
mov
scas
adc
andb
or
and
cwtl
js
dec
inc
sub
pop
mov
xor
inc
mov
call
sub
movsl
jnp
cmpsl
inc
xchg
je
notl
add
xor
and
aam
les
hlt
pop
in
xchg
test
inc
int
cmp
inc
sbb
xchg
add
jp
je
mov
mov
pushf
jg
jbe
divl
mov
in
push
ret
je
push
negl
scas
inc
xchg
and
lods
jbe
adc
testl
hlt
rcrb
jmp
mov
xor
and
aam
les
hlt
pop
in
xchg
test
inc
movsb
mov
cmpsl
inc
xchg
je
notl
add
xor
and
aam
les
hlt
pop
in
xchg
test
inc
movsb
mov
orb
fsub
mov
inc
ss
lcall
push
addl
out
jg
or
fdiv
sbb
dec
icebp
std
fsubrs
mov
jmp
mov
add
cmp
cmp
mov
fisubrs
jae
bound
dec
dec
dec
xchg
sbb
inc
dec
insb
and
test
jns
scas
imul
push
fmulp
xchg
mov
xchg
and
sub
lahf
or
pop
mov
mov
adc
xor
inc
call
cltd
push
mov
out
cmp
sbb
push
push
pop
roll
ss
mov
lods
aaa
add
cmp
das
mov
fildll
cmp
dec
sbb
dec
lahf
adc
dec
loop
out
rcrl
jmp
addb
mov
daa
mov
jns
mov
inc
push
and
add
xor
mov
lss
cmpsl
xchg
cmp
xchg
push
or
lret
shrb
or
cmp
jb
mov
inc
scas
xor
push
into
or
jo
fnsave
inc
xchg
cld
push
in
jp
test
das
rorb
mov
das
pop
dec
dec
and
or
mov
lcall
outsl
mov
push
das
loope
inc
fldenv
test
sbb
or
pop
mov
int
mov
xchg
push
xchg
push
push
ret
push
pop
hlt
add
xor
sbb
aad
leave
je
pop
and
test
sbb
sbb
into
xor
jp
mov
sbb
xchg
xorps
pop
test
pushf
vmovaps
xchg
mov
int
testb
out
lcall
mov
mov
fdivl
mov
inc
enter
mov
jno
dec
jo
mov
in
lret
or
dec
bnd
sbbb
lock
cmp
and
hlt
and
cwtl
movsl
ja
sbb
dec
jo
aam
cli
repnz
adc
dec
inc
pop
cmpsb
insl
sub
outsl
lret
out
inc
inc
popf
jecxz
dec
ret
sub
out
clc
stos
scas
gs
jno
cwtl
push
xor
das
idiv
dec
sub
inc
test
imul
push
cli
dec
mov
or
out
jl
test
xchg
nop
jae
loopne
push
fistps
cmpsl
inc
flds
add
mov
mull
xor
jno
add
xchg
pusha
fidivrs
loope
push
push
dec
pop
fwait
adc
sub
and
pop
push
and
pop
or
or
loopne
mov
jne
movsl
fisttpl
jbe
pushf
inc
rcll
push
enter
or
in
mov
out
shrb
cmp
cmp
sbbb
lods
pop
stos
stos
mov
mov
jne
xchg
cmp
movsb
data16
push
mov
push
nop
mov
cmc
cli
cwtl
dec
push
setae
jmp
popf
sub
xchg
std
pop
repz
jns
sbb
mov
inc
shlb
movzwl
xor
fnsave
push
xchg
dec
dec
sbb
push
test
and
jnp
xchg
pop
jmp
sub
or
scas
dec
push
mov
mov
pushf
lock
lods
jbe
xor
movsb
stc
mov
pop
lret
sbb
mov
adc
iret
aad
maxps
sub
xlat
dec
push
jg
xchg
in
mov
test
popa
mov
mov
das
jl
mov
mov
push
fisubrl
shll
mov
sub
and
sub
sub
arpl
test
push
ja
dec
mov
push
and
mov
cli
mov
jo
sbb
jecxz
dec
in
mov
lret
sub
or
enter
test
mov
ret
pop
icebp
mov
and
lahf
insl
lods
test
or
push
imull
aas
rclb
and
shl
xchg
jg
and
inc
dec
mov
push
pop
sahf
pop
cmp
iret
dec
bound
sbb
shl
pop
jecxz
rol
push
fcmovb
push
push
or
das
inc
inc
scas
mov
sbb
mov
das
lock
cwtl
in
push
scas
mov
push
mov
mov
jns
mov
xchg
jb
push
cmp
out
adc
inc
sub
gs
or
cmp
xchg
cmp
sub
pop
mov
mov
sbb
ret
int3
lds
stos
ret
punpckhbw
jl
out
cmp
push
xchg
loope
adc
mov
inc
mov
xor
repnz
lods
pop
mov
push
xor
call
jmp
cmp
adc
jne
gs
push
rclb
sbb
out
lods
or
lret
test
fwait
mov
adc
dec
in
insl
out
fiadds
sub
xchg
std
jae
dec
aas
and
lahf
push
sbb
pop
dec
imul
and
adc
int
push
enter
sub
test
sbb
cmp
sbb
jl
add
xchg
jge
jae
lods
insl
mov
stc
fildll
jmp
call
ret
push
add
inc
mov
or
mov
dec
jp
hlt
roll
aad
pop
dec
callw
xchg
mov
or
dec
cs
push
test
xchg
sub
sahf
pop
xchg
jnp
jnp
xor
jl
mov
daa
jnp
mov
mov
fwait
mov
and
mov
stos
xchg
sbb
in
mov
jae
inc
adc
inc
sub
fildll
jnp
xchg
pop
loopne
lahf
loop
jecxz
mov
mov
nop
xor
icebp
iret
dec
das
jne
xor
out
mov
lock
xor
sbbb
js
out
mov
dec
dec
and
out
add
mov
enter
lea
or
sbb
outsl
xchg
enter
and
mov
mov
pop
push
xchg
or
std
adc
inc
js
in
mov
leave
leave
mov
icebp
pop
jg
mov
or
adcb
pop
addr16
out
or
or
push
aam
cmpsb
imul
insb
dec
lods
imul
mov
inc
and
xchg
jmp
push
stos
or
mov
dec
push
mov
fdivs
xor
in
adc
sbb
cmpsl
mov
jg
mov
movsb
into
dec
fwait
dec
or
push
sub
outsl
mov
les
out
adc
add
push
push
repz
xor
push
mov
rol
inc
gs
mov
in
repz
xchg
dec
inc
clc
inc
data16
lret
outsb
in
es
lods
and
pusha
pop
mov
sysexit
cld
add
sub
outsb
mov
pop
jae
push
data16
cld
stos
push
js
xchg
mov
stos
call
add
je
xor
mov
xor
cmc
in
cmpsl
sbb
repnz
mov
add
sub
xlat
js
xchg
loop
pop
shr
daa
inc
imul
filds
add
lods
dec
sarb
jnp
lods
dec
jecxz
pop
push
mov
lock
mov
push
fstpl
fsubs
xor
and
xor
cmpsb
xchg
mov
in
cmp
pusha
xchg
xchg
sarb
push
mov
push
xchg
sub
dec
pop
xor
mov
sti
ja
mov
cltd
out
sti
adc
out
aam
add
into
xor
mul
mov
push
and
aas
lods
dec
jle
adc
xorl
mov
push
test
jecxz
notb
push
cmp
sti
rclb
movsb
das
xchg
pop
stc
inc
in
mov
and
lock
push
adc
push
pop
jb
je
imul
jns
or
inc
push
xor
cmp
aaa
sbb
pushf
aas
push
lods
xor
or
scas
inc
push
cmpl
pushf
out
push
cwtl
sbb
call
cmpsb
shlb
xchg
fildll
rcl
lahf
icebp
push
ret
test
sahf
add
push
cs
in
jg
fnstsw
and
inc
jecxz
jecxz
arpl
mov
inc
adc
or
sbb
and
mov
inc
and
mov
jb
outsb
inc
cmpsl
scas
mov
pushf
out
cmp
mov
shlb
add
push
mov
add
mov
ja
xor
ljmp
dec
and
push
ds
dec
adc
add
add
cld
das
jmp
adc
clc
int3
cmpsl
popa
pop
fcompl
iret
inc
in
out
repz
rcrl
in
mov
mov
xor
mov
stos
scas
inc
fistl
jge
sub
cmpsl
pop
out
pop
iret
jmp
sbb
adc
enter
cld
nop
out
movsb
adc
and
std
adc
push
mov
mov
lods
cld
stc
sub
sub
cmpsb
or
ret
jecxz
cs
xor
fsts
out
loope
lods
lcall
xchg
adc
jl
sbbb
mov
sub
xchg
mov
adc
dec
scas
push
out
testb
ljmp
addb
ds
pushf
cmp
ljmp
outsb
mov
mov
cmp
or
mov
inc
inc
aam
test
stos
stos
inc
stos
xchg
imul
fisttpl
mov
repnz
frstor
add
sub
divl
pop
sub
adc
data16
add
int3
fucom
test
mov
fwait
inc
push
pusha
cmp
int
jne
jg
push
pusha
push
mov
fildl
lock
add
into
iret
pusha
movsl
or
mov
movsb
xchg
rclb
cwtl
jge
jb
jp
notb
std
mov
mov
dec
arpl
shl
mov
inc
adc
pusha
and
add
lds
cmpsl
push
inc
out
stc
shlb
push
sbb
pop
jmp
ljmp
dec
mov
sub
daa
mov
and
mov
pop
sahf
cmpsb
rcr
lods
ja
addb
and
es
orb
out
cs
fs
stos
fbstp
enter
mov
push
fimull
out
push
hlt
lahf
cmp
fnstsw
out
fwait
in
sbb
fcomps
andl
mov
mov
filds
and
pop
scas
xchg
lcall
mov
jns
data16
cmpsb
and
xchg
in
cmc
jnp
inc
adc
push
inc
or
fimull
cmpl
orl
pusha
out
nop
inc
jp
pop
movb
mov
ret
in
stc
inc
int
lea
sahf
mov
push
push
movsb
or
and
gs
scas
loope
sub
fwait
insl
das
test
int3
cmp
stc
push
je
aaa
es
add
enter
insl
fs
enter
jns
lcall
dec
xchg
jb,pn
popf
lahf
shll
push
ret
fsts
jmp
movsb
sti
xchg
stos
push
es
icebp
jecxz
outsl
sub
inc
mov
jmp
sub
outsl
sub
ljmp
btrl
push
push
jmp
mov
dec
jb
xchg
sbb
iret
test
aad
movsl
imul
pop
sbb
mov
push
adc
cmp
jbe
rolb
repz
pop
push
push
pop
cmp
adc
inc
call
dec
xchg
imul
and
test
lahf
mov
lahf
lock
sahf
cmp
jecxz
ret
mov
xchg
movsl
cltd
xor
movsl
pop
sub
mov
imulb
fmulp
add
adc
js
pushf
addr16
jb
push
mov
fldcw
test
push
stos
or
shlb
inc
cmp
xlat
mov
pop
adc
xor
ret
loop
jmp
cltd
mov
notl
pop
jbe
mov
pop
push
mov
mov
ficomps
push
jl
mov
jno
aaa
xchg
lret
das
movsl
fnstenv
insl
dec
sbb
ss
mov
aam
call
arpl
fistpl
dec
and
insl
ljmp
movsl
mov
and
lods
sub
repnz
lcall
repnz
gs
cmc
loope
fcoms
or
out
jns
std
dec
aad
lods
in
push
jecxz
sub
das
fidivrs
scas
or
loop
out
cmp
pop
mov
add
movsl
das
sub
fidivrl
and
sbb
mov
or
jecxz
mov
xor
std
lods
rcll
repnz
repz
idivl
add
cmpl
pop
les
bound
lret
mov
sti
scas
mov
mov
cwtl
ret
les
movsl
xlat
sub
xlat
adc
add
push
dec
and
dec
pop
and
push
push
cwtl
les
loope
cli
jbe
mov
ljmp
dec
insl
repz
xchg
test
mov
pop
je
jg
cmp
imul
xor
inc
pop
mov
insb
jge
push
and
xor
jo
rcrb
in
mov
das
int3
xlat
add
clc
mov
sub
int3
dec
in
aam
insl
xchg
fmull
repz
sbb
cmpsb
mov
mov
out
cmp
or
push
xchg
mov
xor
cmpsb
mov
shrb
les
mov
mov
ja
xchg
es
xchg
ret
lahf
dec
and
sbb
shll
fwait
push
shll
adc
fmull
mov
adc
stos
std
xchg
fistpl
pusha
xchg
aam
mov
sub
sbb
pop
sbb
jns
and
or
mov
inc
ljmp
push
stc
pop
sub
addl
bound
push
out
cs
test
movsl
inc
icebp
adc
rolb
outsb
je
lock
das
mov
xlat
lods
mov
xchg
mov
sbbl
push
push
int3
sti
ret
xchg
xor
sbb
cmp
lahf
adc
dec
cmpsb
sahf
pop
call
mov
cld
movsl
popa
dec
push
jp
cmc
pusha
push
push
or
jmp
mov
pusha
lret
mov
arpl
inc
mov
fistps
jmp
icebp
inc
xchg
les
lcall
fisttpll
scas
xlat
sbb
add
fistpll
jle
cmp
cmpsl
add
call
xchg
lcall
repz
sarl
jo
nop
push
je
js
pop
movsb
mov
mov
cmp
and
jns
test
xor
jbe
adc
rcll
adc
sub
bnd
sbb
imul
xchg
out
mov
dec
fnstenv
leave
inc
push
mov
mov
clc
push
repz
mov
dec
faddp
fsubr
std
arpl
sub
mov
ds
lahf
movsb
jnp
fadds
inc
push
movsb
shrb
clc
push
and
jno
loopne
pusha
pop
sub
ficomps
xor
roll
jmp
fidivl
cmp
mov
stc
or
and
mov
stos
sub
aam
aas
loop
or
pop
les
adc
fdivrs
mov
test
inc
lret
movsb
es
stos
ret
sbb
cmp
cmc
dec
pop
cmp
mov
adc
iret
fwait
and
sbb
mov
les
sub
sub
mov
rolb
xor
xlat
sub
push
or
adc
and
lds
pop
insl
sub
enter
sbb
stos
and
es
fstp
or
add
hlt
lcall
sahf
mov
mov
pop
lcall
lds
adc
fsubs
mov
dec
jne
push
inc
or
pop
nop
ljmp
add
cmc
test
scas
fnstenv
add
inc
jno
out
add
dec
jecxz
mov
hlt
mov
and
add
enter
lahf
cltd
xchg
pop
mov
popa
popa
outsl
popa
pushf
jb
bound
add
pop
bsr
scas
pop
fmuls
jbe
mov
fstps
lods
pushf
test
in
push
adc
jmp
push
inc
shll
dec
push
mov
bnd
lcall
and
mov
xchg
dec
push
and
add
inc
hlt
in
push
pop
lds
jecxz
push
xchg
cmp
push
push
xchg
imul
ds
sbb
jp
loop
xchg
push
int3
outsl
pop
sub
and
das
insl
imul
dec
pusha
lods
rcll
xchg
mov
call
push
mov
sbb
push
sti
es
sub
in
adc
pop
repz
dec
jmp
adc
fcoml
addr16
and
loopne
scas
add
add
and
pop
insl
cwtl
jbe
or
cld
lahf
fnstsw
sub
xchg
mov
flds
push
ret
test
xor
ret
ret
test
xchg
push
mov
xchg
insb
lock
aad
and
mov
inc
xor
clc
sbbl
pop
outsl
and
outsb
fisubl
xchg
arpl
jle
fucomip
sub
out
rclb
jl
ljmp
sub
popf
mov
out
aas
push
rcrl
cmp
mov
pop
aam
push
jno
in
stos
or
jl
fs
enter
cmpxchg
in
or
fs
dec
pusha
imul
cmp
xchg
test
out
inc
dec
mov
or
pop
fdiv
gs
push
and
xor
jmp
addl
jecxz
in
jae
fwait
add
shrl
mov
cwtl
sbb
aam
popf
mov
mov
arpl
mov
mull
mov
imul
cmp
cli
lret
sub
pop
xlat
mov
sub
adc
fdiv
push
cmc
mov
out
xor
add
lods
adc
mov
or
mov
and
sub
or
add
not
inc
push
mov
outsl
ja
lock
push
mov
cmp
imul
repz
enter
ret
nop
jo
jno
mov
jp
repz
pop
into
xchg
xor
lahf
fsubp
jmp
cmp
inc
dec
cltd
scas
mov
pop
pop
call
das
cmp
pop
xchg
dec
cmp
mov
rorb
int
jg
popa
sbb
test
out
mov
dec
pop
xor
jae
lock
stos
in
cmp
lods
jp
arpl
pop
dec
xchg
aaa
sahf
popf
dec
icebp
sub
jns
ljmp
shl
or
cmp
mov
int3
orl
jno
stos
int3
jne
loop
loopne
cmp
cmp
jmp
sbb
inc
mov
adc
movsl
mov
cltd
rorb
sub
rcll
out
push
lock
fisubs
dec
cmp
inc
aas
pop
mov
cmpsb
roll
mov
inc
popf
in
mov
cmpsl
or
inc
fldcw
xor
imul
adc
sti
sbb
mov
std
xor
dec
add
jmp
mov
loope
std
sbb
inc
mov
jnp
push
lock
lds
hlt
push
cmp
rol
adc
test
mov
dec
loope
call
lock
adc
out
xor
lcall
add
dec
inc
data16
mov
inc
scas
movsl
sub
cmp
and
shlb
pop
xchg
test
pop
xor
xchg
insl
fbld
movsb
repz
jl
mov
and
dec
test
adcl
test
lcall
pop
push
push
jl
push
out
xor
andb
xchg
notb
lahf
jne
push
outsb
sub
in
cmp
dec
fldl
mov
dec
pushf
and
psllw
jb
xor
hlt
dec
push
notb
out
push
inc
test
add
das
call
ss
iret
inc
push
js
xchg
mov
mov
arpl
ret
fimull
nop
dec
insl
jmp
pusha
test
and
or
xor
push
ss
mov
sub
and
xchg
outsb
pusha
lret
in
test
out
aam
shl
dec
mov
xor
mov
addb
pop
xchg
outsl
aaa
fwait
or
push
fs
xchg
imul
call
jmp
sbb
jne
repnz
xor
stos
cmpsl
in
fimuls
add
dec
push
adc
sub
or
test
jb
pusha
or
mov
cmp
arpl
jo
cwtl
int3
je
out
mov
pop
gs
sar
push
cmpl
cmc
and
cltd
and
pusha
out
inc
add
mov
scas
data16
or
test
jle
jg
and
mov
mov
push
daa
jne
add
int3
sub
arpl
test
or
jno
stos
xor
jecxz
enter
enter
jae
out
test
in
adcl
add
xor
cltd
and
or
addl
xor
xchg
pop
sahf
or
in
inc
mov
fsubl
jl
mov
adc
int3
pop
lret
push
call
lods
sub
mov
enter
and
adcb
push
cld
or
push
and
push
out
les
lods
sub
jg
hlt
add
divb
stc
cld
inc
xchg
je
notl
add
xor
and
aam
les
hlt
pop
in
xchg
test
inc
movsb
mov
cmpsl
inc
xchg
je
notl
add
xor
and
aam
les
hlt
pop
in
xchg
test
inc
movsb
mov
daa
les
hlt
xchg
out
xlat
xor
and
push
daa
les
hlt
pop
in
xchg
test
inc
movsb
mov
cmpsl
inc
xchg
je
notl
add
xor
and
aam
outsb
mov
sbb
jnp
dec
aaa
pop
xchg
dec
test
pusha
cmp
adc
pop
and
push
ja
gs
fs
xchg
mov
cmpsl
mov
movsb
xchg
test
mov
aaa
add
xor
sub
push
sbb
pop
fs
lea
mov
fucomi
cmp
fisttps
dec
pop
je
and
push
sub
xor
mov
leave
mov
rcl
xchg
les
and
xchg
xor
popf
mov
mov
lods
adc
adc
int
cmp
test
jno
jno
xchg
adc
pop
add
push
movsb
je
fwait
lret
js
inc
loop
pop
movsb
inc
fistpll
and
inc
mov
test
addr16
fs
xchg
ja
mov
xchg
or
ja
and
sti
stos
jbe
cwtl
mov
or
les
rcr
mov
adc
ret
rcl
pop
lods
and
mov
mov
xrelease
sub
in
cmp
aaa
mov
call
pop
cwtl
je
fs
pop
mov
push
mov
movsb
ret
not
out
or
sbb
sub
cmp
lahf
outsb
push
fs
in
cmpsl
rcl
shrb
mov
jno
bound
inc
outsb
push
sbb
adc
push
or
sti
repnz
fcomi
aam
mov
mov
popa
jno
jb
pusha
push
daa
das
sub
add
loope
loopne
int3
in
xchg
out
xlat
in
adc
add
xor
and
push
ja
addr16
fs
xchg
mov
cmpsl
mov
movsb
xchg
test
adc
add
xor
and
push
ja
addr16
fs
xchg
mov
jo
xor
stos
mov
mov
mov
jno
lods
scas
adc
or
inc
out
push
ja
adcl
push
cmp
out
or
cmp
dec
adc
and
push
adc
push
addr16
mov
mov
push
vmovq
iret
pop
dec
or
xchg
scas
mov
inc
jns
mov
push
movsl
mov
lcall
pushf
mov
stos
pop
push
and
mov
leave
mov
pop
inc
jmp
sub
test
lret
fs
xor
and
imul
ds
imul
ret
lods
pop
jbe
mov
adc
or
mov
pop
or
fldt
jbe
loop
xor
mov
pop
pushf
rcr
rorb
adc
jne
roll
xchg
repz
loop
data16
sbb
mov
imul
or
pop
xor
add
adc
push
pop
and
cmp
insl
push
pop
dec
and
fsubr
sub
sbb
fsubs
cmpsb
popf
and
out
shlb
add
add
cwtl
sub
fidivs
aam
inc
loop
testb
sub
ret
lcall
loopne
jnp
cltd
adc
daa
cmp
mov
scas
insb
es
pop
sub
add
mov
clc
enter
shll
pop
fiaddl
lret
xor
setl
mov
sub
mov
inc
adc
sbb
outsl
hlt
sub
push
mov
lret
out
test
xlat
dec
loopne
mov
popf
in
xchg
aad
add
xor
mov
hlt
push
das
pop
insl
inc
repz
out
xor
stc
xchg
dec
pop
xor
in
ljmp
jp
mov
mov
sarb
ficompl
dec
loop
into
pop
sbb
inc
sub
ljmp
jns
jecxz
sbb
and
insl
arpl
data16
sbb
push
int
jnp
cld
popf
adc
into
and
and
mov
sub
cltd
dec
jbe
aaa
jmp
rol
movl
popf
inc
or
xchg
xchg
or
jno
inc
sbb
insl
mov
inc
enter
adc
or
ja
or
dec
cli
cmp
mov
sar
sub
mov
mov
scas
out
stos
shrl
push
sub
sbb
dec
pusha
repz
xchg
in
or
inc
outsl
es
pop
add
mov
fwait
or
pop
icebp
in
mov
sub
mov
lods
mov
xchg
neg
lods
es
sarl
mov
adc
lods
sub
repnz
imul
jge
idivl
clc
sub
adc
es
dec
cmp
rorb
sbb
sub
fstps
frstor
repz
pop
movsb
stc
xchg
std
mov
in
push
mov
jle
repnz
ja
sbb
dec
jae
scas
cmc
cltd
xlat
fsubrs
xchg
and
loop
pop
aaa
mov
fidivrs
or
dec
decl
lea
sub
mov
cmpsb
xchg
je
fdivl
stos
mov
adc
dec
pop
jecxz
test
pop
cmpsb
cs
in
sub
xchg
icebp
lret
push
dec
out
push
verr
sub
inc
or
cli
jecxz
xlat
sub
push
sbb
xchg
cld
dec
test
push
inc
loope
pop
insb
jae
ds
mov
sub
jp
pop
dec
aas
inc
xchg
and
sub
aam
cmp
scas
sub
cmpsb
sub
and
popf
pop
iret
inc
je
jne
sbb
mov
cmc
repz
fwait
push
and
dec
add
test
pop
loop
shrb
mull
call
jnp
sub
enter
cld
lret
ds
mov
mov
xchg
sub
in
fldenv
aad
ret
rorb
mov
shrb
cmpb
xchg
xor
push
mov
mov
mov
roll
pop
sub
push
and
data16
cmp
or
imul
xor
rcrb
sahf
lret
sbb
push
iret
lods
cmpsl
bound
in
pop
test
cmp
dec
mov
jns
add
inc
add
ja
fdivl
adc
sub
xchg
pushf
popa
outsb
daa
ret
insl
or
aad
mov
lods
mov
fdivrp
imul
fs
rcr
aad
push
inc
mov
mov
and
xchg
into
xchg
push
lods
lea
adc
inc
add
push
xlat
dec
arpl
pop
push
lcall
add
lcall
jmp
push
adc
mov
je
mov
arpl
jmp
pop
mov
sbb
clc
cmpb
lods
xor
sbb
xchg
mov
mov
cmp
pop
push
inc
pop
js
inc
test
adc
add
pop
cld
nop
lods
sbb
dec
jns
neg
rclb
leave
cmp
call
call
movsl
mov
jmp
shlb
pop
cmp
call
inc
sbb
iret
inc
nop
mov
push
push
pop
xchg
mov
mov
pop
and
mov
ror
in
hlt
lds
hlt
or
scas
add
out
xchg
and
pop
mov
mov
push
cmp
xlat
push
addr16
sub
hlt
push
pop
fwait
sub
pop
and
imul
mov
mov
xlat
stos
andl
adc
push
int3
jne
cmp
enter
jns
xchg
in
lods
out
rcl
dec
inc
dec
cltd
cmpsb
fdivs
test
add
loop
sub
mov
pop
adc
cmp
pop
pusha
in
test
sub
sbb
inc
push
mov
dec
sub
aad
ret
aas
mov
stc
cltd
mov
mov
xor
sbb
movsb
das
and
sub
jb
shl
xchg
pop
lea
push
out
mov
js
movsl
jb
stos
fcomps
add
jnp
xchg
push
push
addr16
cmp
daa
pop
mov
jo
dec
push
add
aas
out
shll
lret
jne
pushf
pop
inc
or
ja
pop
test
mov
cmp
jmp
xchg
push
dec
idivb
lods
aas
int3
push
aad
xchg
mov
inc
sbb
stc
fldl
daa
inc
jp
in
adc
loop
jnp
sti
mov
in
stos
movsb
jmp
mov
cmc
in
jnp
push
sub
inc
xchg
mov
sub
xor
add
add
into
mov
push
orl
pop
popa
lock
pop
and
cmp
cmc
fisubl
add
aad
insb
mov
imul
xchg
fcmovb
rcrb
xchg
loope
les
lret
sti
imul
mov
dec
aaa
xor
aaa
cmp
insb
mov
aas
mov
and
mov
fcmovbe
or
and
or
adc
scas
sbb
mov
test
add
mov
inc
cmp
ret
insb
fdivs
fisubrl
andb
and
cld
adc
jle
out
and
sub
push
sbb
pop
mov
add
or
cmpsl
xchg
inc
cmpsb
or
adc
jae
in
roll
jl,pn
mov
sub
add
fdivrp
xlat
add
fisubs
add
xchg
pop
popa
mov
push
add
rorl
in
mov
mov
insl
xchg
aas
adc
push
sbb
jg
push
add
ss
scas
movsb
xchg
das
xchg
xor
inc
jecxz
xchg
cmp
movsb
pushf
test
xchg
lret
aam
scas
cmp
outsl
or
les
mov
sbb
and
mov
or
rol
sarl
orb
hlt
adc
imul
sbb
pop
cmp
pop
test
fbstp
jns
cld
ds
lock
rclb
mov
in
scas
xchg
mov
jo
andb
add
xorl
in
mov
adc
lock
xchg
jmp
xlat
mov
fxch
loopne
pushf
xor
ds
ret
pcmpeqw
insl
inc
out
or
fmull
push
dec
cltd
stos
loopne
lret
imul
push
cmpl
jne
push
ror
inc
jge
in
daa
add
and
andl
jle
lret
mov
ret
out
xor
jmp
cmpsb
dec
lahf
jl
insl
out
or
ret
xchg
cmp
cmp
or
lret
fs
cmp
ljmp
jecxz
inc
pusha
imul
je
or
popf
pop
out
sbb
jecxz
adc
stc
inc
cmpsb
or
mov
jns
aas
mov
add
xchg
inc
inc
pop
cld
or
dec
jo
and
cs
scas
sahf
mov
aas
pop
or
clc
mov
pop
pop
cmc
mov
in
outsl
stos
leave
push
mov
lods
inc
mov
pop
cs
xchg
stos
ljmp
inc
in
pop
mov
loop
pushf
mov
dec
int
mov
mov
rcrb
aaa
xchg
popf
jp
adc
iret
divl
pop
fisttpl
sbb
xchg
pop
imul
adc
adc
inc
movsl
jmp
push
loop
scas
scas
jns
push
xchg
or
sbb
addr16
push
pop
es
mov
sub
jno
ss
out
sub
stos
aas
inc
shll
clc
or
and
insb
daa
int
ficomps
or
ja
fs
mov
das
mov
out
pop
addl
xchg
sub
ret
out
mov
mov
mov
inc
ret
mov
inc
add
pushl
xor
adc
pop
stos
test
xor
sahf
fadds
jmp
xchg
ret
jge
mov
clc
cmp
les
adc
cwtl
push
push
rcrb
iret
popf
pop
xlat
fs
push
add
clc
test
add
xchg
or
jno
ror
and
mov
scas
and
aad
pop
int3
je
leave
sbb
cmpsl
push
pop
mov
cmpsb
jmp
insl
or
lods
jp
lret
loopne
fdiv
sbb
mov
cmp
scas
adc
or
push
mov
in
ljmp
icebp
jg
popf
mov
into
test
xchg
lcall
or
ss
and
movsl
xor
lret
mov
push
cmp
cmp
shll
lret
pminub
and
mov
jnp
mov
push
and
pop
mov
lret
push
pusha
gs
mov
push
movsb
leave
fisttps
sahf
gs
mov
cmc
repz
leave
repz
frstor
xchg
hlt
or
mov
loopne
jg
xor
jae
mov
out
fwait
stos
arpl
jno
sbb
push
lret
lret
pop
push
jns
adc
lock
inc
jnp
bound
mov
cmc
pop
or
sbb
pusha
lock
inc
les
outsl
mov
jg,pt
inc
and
fisubrl
imul
sub
pop
stos
sti
pop
xchg
out
mov
cmp
flds
mov
lock
mov
and
aad
pushf
outsb
cmpsl
cwtl
add
aas
enter
sti
imul
xchg
fidivrl
lcall
pop
imul
out
xor
popf
mov
loopne
cmp
out
adc
insb
and
fistl
mov
aad
xchg
fildl
sub
sub
mov
fs
adc
xor
jg
mov
outsl
scas
inc
les
sbb
xor
pop
mov
loope
adc
out
pop
rcl
and
jle
push
adc
cli
and
cmp
mov
lea
xchg
fsubrs
das
loope
xor
xchg
dec
notb
mov
repz
jp
inc
leave
loop
mov
xorb
mov
dec
ds
or
adcl
pop
cs
shll
cmp
in
sbb
sub
jp
cli
mov
pop
test
cmp
mov
sti
jp
mov
call
lods
cwtl
scas
sub
xor
dec
cld
mov
repnz
aam
mov
mov
enter
cmp
insl
sti
mov
inc
ret
clc
mov
push
cmp
fdivrs
pop
or
out
movsb
jno
jns
jp
sub
or
outsl
loope
sbbb
and
pop
shr
cs
pop
mov
inc
fiadds
dec
pop
rclb
call
xor
loop
sbb
and
xor
scas
lcall
andb
cmpsb
inc
sbb
lea
test
scas
lock
lret
cmp
stc
loope
xlat
insb
fcomip
fnstcw
out
imul
ficoms
sub
mov
pop
push
out
decl
mov
ljmp
inc
lds
or
testl
or
mov
cmc
cmp
add
arpl
rolb
fnstsw
cmp
scas
jmp
aas
sbb
pop
jp
test
arpl
jge
jl
adc
mov
int
imul
add
cmp
cld
ret
scas
add
push
mov
and
or
bound
mov
inc
lods
mov
inc
mov
push
aaa
cmp
push
in
sub
sbb
fistl
inc
stos
sub
mov
inc
xor
add
cwtl
pop
gs
push
sbb
sarb
jbe
nop
inc
out
adc
int
cmpsb
ss
push
xor
ss
into
scas
shl
push
sahf
or
mov
jb
dec
push
addl
stc
pop
aaa
daa
hlt
enter
and
cs
mov
movb
mov
out
or
sti
mov
or
mov
lock
sahf
lret
xor
repnz
aad
neg
add
aam
sbb
xor
bound
pusha
pop
shrl
faddl
lods
ret
lcall
xchg
push
mov
mov
mov
cmc
andl
push
or
call
and
mov
repnz
out
arpl
test
mov
loopne
jo
add
xchg
out
fiaddl
test
push
fimull
xlat
xchg
cli
iret
adc
sbb
xchg
sarb
lods
or
ljmp
inc
jb,pt
push
sahf
push
imul
pop
dec
int
lahf
lahf
lods
lods
mov
sub
and
pusha
cmpsb
push
out
cmc
xchg
into
xchg
push
sbb
fildl
xchg
xor
into
mov
ja
dec
hlt
or
andl
sbb
jo
fistps
sbb
mov
fistl
xor
out
pop
sub
scas
cmp
mov
inc
lret
jbe
push
jg
je
jae
jb
sti
jmp
cld
aas
and
mov
sahf
pop
jb
test
fwait
fs
dec
inc
xlat
sbb
push
icebp
arpl
ljmp
sbb
mov
pop
pop
outsb
addr16
pop
add
cmp
out
incl
sti
mov
imul
sti
cltd
inc
inc
dec
mov
daa
cmp
movsl
mov
jmp
movsl
mov
push
xor
jnp
orl
push
in
and
jns
cmp
lods
inc
ja
pop
shr
and
cmpsb
inc
xor
sbb
sarb
jns
mov
pushf
leave
lock
sbb
loope
pop
lea
fcompl
adc
mov
shll
repz
dec
shrl
rolb
lock
imul
or
dec
mov
inc
add
inc
jbe
xchg
push
pop
and
scas
pslld
dec
scas
inc
jno
xor
mov
mov
mov
loopne
stc
or
in
scas
stos
popa
leave
aaa
imul
inc
repz
push
fcomps
push
std
mov
mov
jb
lds
xchg
faddp
test
pop
jns
pop
pushf
mov
mov
mov
icebp
xor
icebp
sbb
jge
movd
ss
adc
jmp
shlb
addb
test
insl
xor
pop
test
cmp
push
dec
lods
lahf
mov
aam
das
dec
enter
jo
pushf
das
pop
mov
xchg
pop
pusha
outsb
out
xchg
push
push
and
push
xchg
repz
and
mov
adc
ficomps
xchg
xlat
pop
or
or
add
cwtl
sbb
stc
fcom
pop
sbb
scas
leave
in
xchg
jns
jno
mov
fistpl
cmp
jno
adc
leave
adcl
dec
hlt
test
cmp
mov
test
jp
jne
cmpsl
out
mov
lds
punpckhwd
faddl
jbe
out
outsl
into
fldenv
inc
push
in
shl
mov
jecxz
in
mov
dec
inc
xor
push
adc
aaa
and
adc
and
data16
outsb
xchg
mov
testl
das
stc
sub
fcoms
inc
adc
insl
shrl
sub
js
mov
push
andl
dec
clc
pop
dec
mov
test
mov
cwtl
jno
lods
popf
xchg
arpl
repnz
popa
mov
outsl
bound
lret
jmp
inc
dec
mov
orb
outsb
push
push
jp
cmp
es
outsl
nop
cmc
cmp
jmp
cmc
enter
rorl
or
jecxz
stos
dec
sub
jb
pop
repnz
xor
ficomps
mov
dec
dec
je
into
enter
fadds
out
dec
into
or
sbb
jge
jne
cli
sub
adc
push
insl
add
pop
fs
xchg
mov
pop
cs
lahf
pop
sarl
into
mov
in
pop
jae
mov
arpl
mov
fwait
orl
cmpsb
insb
mov
popl
sahf
pushf
out
mov
fcmove
mov
mov
cmp
mov
xor
outsb
cmp
dec
pop
xorb
sub
dec
inc
nop
cmc
dec
mov
dec
ss
fists
das
imul
enter
into
xlat
aas
cli
lock
add
imull
popf
jns
push
sbb
dec
int
inc
and
sbb
xor
ret
lahf
inc
pop
mov
dec
pop
jo
and
mov
xchg
jmp
loope
out
and
sub
adc
int
add
push
cmp
sbb
rorb
xlat
or
cmp
mov
cmpsb
test
pop
insl
les
add
iret
lea
test
xor
inc
adc
cmp
mov
pushf
mov
mov
xlat
and
loopne
push
outsl
dec
das
mov
test
in
stc
mov
or
inc
inc
addl
fbld
or
sub
jp
mov
jl
pop
cmc
pop
mov
and
mov
adc
rol
mov
insl
fsubl
mov
fsubrs
inc
in
dec
stos
mov
cli
orb
cmc
cmp
mov
jns
xchg
insb
cmp
and
iret
pushf
stc
and
aaa
cmp
mov
xchg
aas
and
std
xor
std
mov
in
xchg
loopne
insb
jb
test
gs
dec
mov
cltd
xchg
repz
subl
mov
push
jmp
cmp
and
mov
mov
shrl
enter
fildl
and
cmp
cmpsl
les
ret
in
xchg
or
inc
cmpsl
dec
mov
xlat
stos
test
movsb
and
outsl
mov
xor
test
cs
jb
sti
data16
jae
pushf
inc
ss
in
sbb
jge
negb
dec
imulb
mov
je
test
adc
xchg
fs
mov
mov
adc
test
jno
in
dec
rorl
push
loopne
ljmp
sahf
fwait
or
test
cltd
rdpmc
xor
push
adc
xchg
popa
pop
subb
adc
xchg
xchg
xor
dec
outsb
push
pop
sbb
lods
xchg
sbb
bound
cs
mov
sbb
mov
and
sti
jns
jecxz
aam
jb
add
mov
and
sbb
icebp
inc
mov
pop
jle
cmp
jne
fwait
mov
inc
sarb
fwait
mov
nop
jl
ret
stc
jnp
lret
pandn
push
lock
xlat
or
bound
ret
mov
cmp
insb
loop
sbb
or
and
fistps
xchg
jle
mov
adc
ficompl
lret
jle
pop
into
clc
les
mov
xchg
mov
xcrypt-ctr
cmpsl
sbb
xchg
push
pop
scas
rcr
into
sub
sub
out
loopne
xor
xchg
negb
add
mov
mov
mov
mov
pop
sub
cmpsb
xchg
orl
hlt
lods
daa
mov
leave
xchg
aas
jmp
cli
mov
sbb
mov
ss
sbb
cld
or
dec
adc
add
in
jns
bnd
orb
xor
ja
out
in
loope
mov
cmpsl
mov
test
adc
add
xor
and
push
ja
addr16
fs
xchg
mov
cmpsl
mov
movsb
xchg
test
adc
add
xor
and
push
ja
addr16
fs
xchg
mov
out
mov
movsb
xchg
test
adc
add
xor
and
push
ja
addr16
inc
xchg
mov
cmpsl
mov
movsb
xchg
test
jmp
sti
lea
dec
cwtl
mov
cmc
jle
xchg
add
mov
add
add
add
or
add
add
jne
iret
add
add
dec
add
add
add
add
add
adc
pop
add
add
add
add
mov
incb
dec
add
add
add
add
add
dec
add
sbb
lock
adc
addl
add
add
add
add
test
mov
add
inc
add
add
adc
test
cmp
mov
add
mov
add
test
sub
adc
add
push
cmp
aas
add
fldl
pop
add
add
push
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
repz
pop
add
add
add
add
add
add
test
into
add
add
add
add
add
add
xor
sub
jb
aaa
add
jecxz
int3
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
inc
add
add
cmp
outsb
add
push
add
dec
add
add
add
add
jge
and
add
insb
add
xor
add
add
inc
add
add
cmpsb
add
add
add
add
add
or
push
add
cmp
cwtl
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
das
add
add
mov
add
add
add
and
pusha
add
add
add
or
sub
or
or
dec
add
test
add
add
add
inc
add
add
add
add
add
add
add
add
ja
addb
add
add
add
mov
add
add
add
add
filds
filds
push
add
pop
add
add
add
add
add
clc
add
fadds
adc
inc
add
add
add
xor
enter
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
test
int3
add
add
add
push
add
filds
sub
cwtl
add
add
add
pop
add
sub
and
pop
add
add
jge
arpl
mov
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
test
dec
add
xchg
add
add
js
dec
add
ret
add
add
and
jbe
push
add
xchg
add
sbb
filds
filds
jle
incb
flds
push
add
add
add
add
add
add
filds
filds
push
add
add
add
add
push
add
add
filds
filds
mov
add
adc
add
add
add
add
add
add
add
add
daa
add
lcall
add
add
lods
sbb
icebp
lock
arpl
mov
push
mov
mov
iret
into
mov
xor
mov
rol
and
inc
pushf
xchg
mov
nop
les
lret
push
lret
mov
and
cwtl
popa
push
mov
jne
fmull
inc
push
loope
ja
jp
xorl
push
push
les
cmpsl
seta
pop
das
dec
dec
fsubs
in
xchg
jne
addr16
aaa
das
jge
push
scas
jo,pn
test
xchg
fadd
loope
ret
outsl
daa
pop
push
dec
adc
push
jns
aaa
mov
sti
mov
inc
arpl
mov
test
push
stos
stc
xchg
jns
sbb
clc
lcall
xchg
stos
aam
mov
outsl
pop
cli
sbbb
pop
inc
ljmp
imul
and
dec
dec
add
fisubl
movsb
cmp
xor
fidivs
in
sbb
cli
push
js
add
mov
lods
sub
fbld
insb
xchg
xchg
pop
cmc
mov
loopne
adc
sbb
in
in
pop
mov
je
in
into
push
mov
xchg
rorb
pop
inc
gs
addr16
pop
dec
jb
mov
jmp
cmp
pop
mov
mov
out
loope
dec
adc
jl
gs
pop
fadds
inc
and
nopl
dec
enter
iret
dec
stc
lock
sbb
mov
adc
mov
pop
add
in
or
jl
mov
dec
in
pop
and
fs
lcall
movsb
cmp
sbb
pop
sub
mov
pushf
outsl
das
mov
xchg
or
decl
ja
cmp
outsl
notl
inc
add
add
addr16
in
mov
enter
pop
xchg
or
nop
aas
push
sub
sahf
or
sbbb
push
lods
mov
jne
test
xchg
sub
imul
rclb
xchg
jne
xorl
test
sub
dec
pop
sarb
mov
xor
sbb
into
lock
cmp
aas
jl
sub
sub
clc
cmp
jp
xor
movaps
jge
gs
jnp
lods
jecxz
mov
ffreep
fadd
stc
test
mov
loopne
aad
dec
loopne
imul
mov
mov
hlt
rol
jg
mov
xchg
adc
rep
cmova
dec
pop
mov
cwtl
mov
jne
xor
sbb
cmp
fsts
imul
mov
leave
test
test
fbstp
shl
sbb
ss
mov
dec
shl
cmpsb
gs
je
xor
or
repz
cld
sarb
mov
in
and
jecxz
inc
sti
xlat
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
